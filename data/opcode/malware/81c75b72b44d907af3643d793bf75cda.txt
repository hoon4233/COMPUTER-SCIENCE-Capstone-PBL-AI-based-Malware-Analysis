fcomp
(bad)
dec
nop
inc
add
mov
or
push
add
jecxz
add
jmp
push
mov
push
or
call
test
jne
pop
pop
ret
push
push
aas
int
rcr
mov
test
je
cmp
lods
add
cmp
(bad)
jmp
pcmpeqd
cmp
jae
sub
movzx
lea
jne
push
jb
pop
pop
xor
std
(bad)
fwait
ins
and
neg
sbb
and
pop
xchg
add
inc
fdivr
fnstcw
push
push
test
rcr
test
jne
pop
ret
push
cmp
or
pop
sbb
add
les
and
ins
shr
adc
xor
push
mov
inc
add
test
mov
push
add
test
jne
mov
scas
inc
push
push
push
in
xchg
int
push
mov
xor
push
lods
std
dec
mov
pop
je
xchg
inc
mov
pop
lock
and
pop
push
pop
ret
pop
adc
sbb
dec
shr
inc
or
lock
dec
test
jg
cmp
adc
inc
test
add
jmp
jle
in
(bad)
fstp
mov
in
adc
push
mov
les
fdivr
cmp
or
push
out
sar
push
jg
mov
adc
mov
mov
pushf
push
push
sbb
cld
inc
cs
and
push
mov
adc
jno
and
(bad)
push
add
xlat
and
clc
sbb
add
push
lock
dec
add
mov
or
hlt
add
push
mov
jb
add
add
(bad)
or
icebp
loopne
push
(bad)
(bad)
fcomip
fbstp
add
inc
hlt
push
push
adc
push
push
pop
shr
int
sbb
sbb
dec
adc
adc
sub
push
(bad)
leave
or
leave
mov
lea
xor
pop
sbb
mov
sub
sub
adc
loopne
test
mov
clc
enter
push
push
cmp
and
in
adc
ficomp
imul
pushf
push
push
sbb
dec
add
ss
stos
not
push
push
call
cmps
xor
ss
aaa
sub
sete
into
mov
mov
push
in
inc
test
call
mov
mov
push
push
push
sbb
test
nop
inc
pop
leave
les
and
or
push
inc
add
sbb
add
in
js
jle
in
int3
xor
xor
pop
repz
inc
les
pushf
sbb
xchg
dec
push
mov
lea
or
mov
dec
sub
in
push
dec
or
cmp
les
mov
add
or
pop
in
inc
xor
test
push
stc
nop
sub
sub
push
push
and
mov
dec
push
inc
xchg
jmp
pop
jae
clc
pop
jge
mov
ret
mov
pop
xchg
mov
pop
ret
xor
mov
aad
cmp
dec
dec
push
inc
fsub
push
icebp
push
ins
sbb
add
push
ds
pop
cmp
(bad)
jl
xor
je
call
sbb
out
mov
ja
ret
mov
or
test
in
sti
out
pop
repnz
push
push
or
sbb
cwde
sbb
inc
hlt
movs
jne
mov
pop
into
sub
lock
out
pop
ror
int3
cmp
cmp
cdq
mov
add
out
adc
add
test
or
adc
push
jne
mov
mov
mov
push
adc
sbb
ja
ror
test
inc
add
inc
add
inc
repnz
adc
loopne
fdivr
nop
ss
repnz
(bad)
adc
jl
ror
push
cmp
sbb
jecxz
add
push
and
jo
sub
sub
xchg
jl
and
add
push
mov
inc
jb
sub
add
sub
xlat
push
pusha
mov
js
jmp
xor
xacquire
hlt
mov
mov
dec
lods
cmp
dec
inc
jnp
dec
push
add
aam
popa
add
(bad)
jle
(bad)
pop
add
push
call
and
dec
push
or
xor
sbb
loope
push
pop
imul
in
xor
inc
xchg
je
adc
call
add
xor
xor
add
inc
loope
and
ret
cwde
retf
test
xor
lea
push
mov
arpl
jne
loope
ds
push
push
and
shl
mov
pop
pushf
hlt
dec
pop
mov
mov
fdivp
push
sbb
int3
mov
sbb
add
add
push
add
add
lahf
cdq
adc
pop
popf
push
sub
(bad)
imul
and
or
and
push
mov
setg
jb
and
ins
test
jl
or
jne
bound
dec
and
mov
je
mov
mov
and
push
or
push
add
add
push
jno
into
pop
xchg
cmp
in
and
ja
test
xchg
sub
(bad)
fld
sub
sete
test
test
fs
push
sbb
jns
or
cmp
in
or
add
stos
adc
jno
ficom
mov
out
adc
scas
sub
ins
xor
xor
repnz
push
xchg
dec
sub
cmp
ds
push
test
and
mov
div
push
mov
or
adc
cs
adc
dec
cs
push
sbb
adc
adc
or
push
push
add
test
loopne
or
neg
inc
xchg
sbb
push
mov
fucom
punpckhbw
mov
test
pop
push
push
add
add
fdivr
push
or
sub
and
(bad)
dec
fiadd
sub
push
cmp
or
and
lea
jb
data16
or
xor
enter
add
add
cmp
imul
pop
sahf
push
sbb
das
sbb
cmp
outs
or
xchg
add
ja
mov
sbb
sbb
add
pop
cmp
push
pop
cmp
icebp
js
cmp
icebp
(bad)
sbb
jge
jmp
pop
call
bound
inc
sbb
sub
push
cmp
(bad)
imul
mov
aad
leave
mov
mov
lods
mov
add
or
out
or
and
imul
stos
into
mov
xor
pusha
mov
in
lahf
mov
shr
adc
mov
cmp
mov
adc
(bad)
(bad)
pop
(bad)
jno
xor
mov
lea
add
loopne
stos
or
(bad)
sti
imul
loopne
lea
data16
test
sub
mov
pop
test
push
rol
test
xchg
cmp
push
dec
adc
mov
lds
adc
call
lods
dec
data16
cmp
cld
rol
mov
lods
sub
adc
add
adc
sbb
test
dec
mov
add
cli
sbb
mov
adc
loop
pushf
das
add
sbb
adc
das
mov
das
je
outs
sub
mov
cmp
and
mov
mov
add
mov
dec
in
sub
adc
pop
fstp
test
aas
push
or
ds
sbb
lea
xor
sbb
adc
sub
xor
and
mov
dec
add
pop
fsub
mov
push
mov
push
and
mov
(bad)
loope
sub
in
jg
test
mov
jmp
cmc
lea
mov
(bad)
outs
mov
xor
(bad)
in
pop
sar
mov
hlt
and
and
push
fnstcw
iret
(bad)
cmp
jb
inc
jmp
dec
idiv
xor
push
push
jne
ins
xor
cmp
inc
je
icebp
xchg
cmp
add
xchg
inc
add
mov
jmp
outs
hlt
jne
mov
xor
sub
test
loope
adc
dec
lods
push
add
push
(bad)
fnstcw
je
sub
cmp
je
xchg
or
cwde
sbb
dec
or
shl
mov
(bad)
retf
loopne
test
mov
push
aaa
test
std
pop
adc
add
pop
jg
push
mov
int3
add
sbb
sub
add
lods
push
push
xchg
mov
std
call
daa
loopne
pop
push
adc
call
inc
cmp
jl
inc
out
push
shl
add
outs
lea
jnp
xchg
pop
enter
js
jne
(bad)
(bad)
cmp
jbe
in
arpl
sbb
cmp
xchg
push
fsub
fs
sahf
rol
xchg
xchg
rcr
sbb
and
(bad)
cmps
push
movzx
push
loopne
int3
push
(bad)
lods
mov
sub
push
cmp
int
jl
sbb
jmp
sbb
clc
dec
inc
test
jne
sub
mov
push
mov
hlt
sbb
and
inc
mov
sub
or
jne
jmp
push
pop
xchg
ret
jo
bound
dec
add
(bad)
pop
inc
shr
xor
mov
cwde
ret
enter
xor
mov
cmp
jl
mov
sbb
xchg
fld
mov
sub
mov
das
or
call
getsec
adc
pop
or
pop
adc
add
loopne
adc
mov
mov
sbb
fcom
lahf
push
mov
jmp
jmp
test
push
mov
pop
imul
(bad)
adc
cmp
jle
xor
inc
(bad)
jb
cmp
pop
out
(bad)
out
movs
test
dec
clc
lea
sub
or
jge
mov
into
imul
add
jmp
add
call
gs
mov
ret
push
push
daa
mov
jl
pop
inc
add
test
xchg
js
outs
adc
add
add
retf
mov
add
mov
ret
fld
ret
aas
out
je
cmp
jge
sub
add
mov
in
inc
hlt
cmc
push
cmp
pop
mov
ror
push
mov
bound
add
test
mov
ror
jge
add
push
push
fisub
or
sbb
jne
dec
fiadd
mov
sub
push
xchg
ss
stos
jb
hlt
mov
sub
or
fimul
ja
push
push
sbb
sbb
sbb
or
clc
push
cmp
ss
add
jl
push
cmp
fwait
mov
adc
imul
stos
add
lahf
loop
in
ss
std
rcl
jmp
inc
pusha
addr16
or
sbb
test
ffree
mov
aam
scas
stos
popa
or
pop
push
rcr
outs
xor
add
das
xchg
pusha
xchg
rcl
out
mov
mov
mov
dec
jl
out
arpl
jo
ss
push
jbe
add
cmp
cwde
push
mov
adc
nop
rcr
test
outs
and
mov
ret
pop
ins
imul
add
mov
mov
shl
push
xchg
mov
mov
push
jbe
pop
mov
mov
je
cmp
lea
jl
mov
push
jne
cmp
jle
push
int
or
pop
dec
test
push
pop
aaa
inc
iret
jp
xor
sub
fcomp
mov
push
sti
pop
push
in
dec
mov
cmp
outs
mov
rol
(bad)
add
cmp
cmp
loope
fcom
repnz
and
or
shl
adc
pop
xor
jg
pop
bound
push
push
js
jl
jg
push
loope
adc
push
scas
add
add
push
pop
gs
pop
push
push
mov
mov
and
int
jmp
fsubp
adc
fsubr
loope
jnp
sahf
mov
sub
jb
push
adc
pop
and
ret
jge
jmp
inc
add
popa
mov
enter
or
push
scas
mov
lea
enter
mov
shl
sub
add
sub
hlt
stos
cmp
loop
sbb
jnp
les
jle
push
imul
out
test
jnp
jle
mov
cli
add
or
cmps
mov
pop
jge
dec
and
test
add
push
into
adc
rcl
xchg
jmp
xor
into
ret
or
lahf
lds
push
or
lock
jge
sub
push
inc
cmp
cmp
push
cmp
or
imul
dec
cmp
pop
inc
mov
add
push
push
jl
sub
cwde
inc
push
add
or
or
xchg
in
pop
mov
mov
mov
pop
je
pop
jg
fwait
mov
out
xor
or
jmp
dec
add
inc
cmp
jb
mov
aas
adc
call
pop
out
or
std
fucom
mov
xor
mov
jb
lahf
(bad)
sub
push
pop
pop
adc
or
imul
addps
or
lea
mov
cmp
pop
ins
cmc
adc
xor
mov
fdiv
out
fwait
lahf
push
and
jns
jo
or
icebp
push
inc
sbb
push
clc
xchg
inc
adc
adc
xor
and
adc
lock
and
jp
pop
(bad)
and
cwde
adc
test
add
iret
fdivr
lock
add
int3
in
fimul
push
mov
mov
pop
clc
cmp
jge
mov
repz
push
call
sbb
mov
and
xor
es
push
sub
mov
jne
xor
mov
lea
mov
inc
cmp
imul
(bad)
iret
push
cmps
(bad)
or
jecxz
out
sbb
call
and
lods
enter
push
inc
fisttp
inc
add
push
aas
or
or
mov
jo
pop
adc
leave
add
cmp
push
mov
outs
fimul
xchg
popa
nop
sub
ss
adc
jb
add
call
sbb
mov
pop
and
pop
and
push
jl
sbb
pop
sbb
pop
ret
shl
jg
pop
js
pop
lock
dec
data16
xchg
daa
sub
pop
pop
pop
cwde
push
xor
test
inc
call
jg
inc
or
inc
cmp
pop
scas
ja
outs
stos
imul
push
je
or
push
or
jne
or
push
fnstsw
aam
rcr
ret
adc
push
xor
pop
and
stos
pop
test
adc
sub
or
test
ret
cmp
and
jle
in
pop
mov
dec
or
jmp
ret
or
inc
clc
pop
add
jne
test
cmp
fidivr
sbb
sbb
(bad)
jecxz
pop
jl
cmp
pop
and
xor
or
adc
inc
(bad)
pop
call
cli
je
sub
jne
cmp
iret
add
mov
call
mov
mov
mov
js
jnp
(bad)
mov
mov
popa
sbb
or
out
xor
mov
daa
pushf
jne
lock
push
jg
add
repnz
mov
push
js
jmp
dec
std
dec
jo
mov
mov
ror
(bad)
sbb
mov
mov
in
jo
clc
jmp
loopne
movs
push
fstp
leave
and
mov
loopne
inc
int3
fsubr
out
jge
or
cmp
test
sahf
in
out
fld
call
push
nop
push
mov
(bad)
push
xor
push
addr16
shl
sub
dec
sbb
jmp
jmp
inc
push
mov
aas
ror
in
mov
out
mov
mov
(bad)
mov
in
in
in
push
xor
mov
sub
int3
aaa
xchg
mov
mov
je
cld
or
push
adc
cmc
aaa
clc
mov
sahf
out
aaa
dec
outs
jle
imul
cmp
cmp
retf
lods
jns
sbb
sbb
add
mov
or
and
fmulp
add
cmp
mov
push
imul
in
popf
push
adc
mov
mov
or
clc
rcr
mov
test
or
adc
mov
popf
outs
adc
stc
lock
mov
icebp
jg
push
dec
push
dec
mov
pop
push
lea
push
gs
push
add
push
lea
repz
ret
icebp
dec
and
pop
leave
aam
les
push
and
popf
imul
cmps
pop
or
test
sbb
fadd
repnz
sbb
add
adc
stos
fiadd
js
jle
add
cli
cmp
inc
sbb
mov
pop
xchg
adc
push
nop
fild
add
lock
push
and
cwde
mov
js
cmc
pushf
fwait
test
push
pusha
mov
mov
test
ins
xor
ins
les
and
pop
dec
sub
shl
push
mov
dec
es
or
fsubr
mov
pop
stos
cmp
fs
add
imul
sbb
movs
rcl
mov
call
in
out
(bad)
or
xchg
mov
shl
xchg
js
cmp
inc
jbe
out
dec
fs
jb
xor
mov
les
mov
inc
add
sbb
add
push
icebp
push
and
xor
cmp
xchg
xchg
pop
pop
dec
in
cmps
loop
or
push
push
cmp
inc
pushf
cmp
je
add
std
push
push
inc
xchg
mov
xchg
pushf
mov
(bad)
mov
nop
daa
neg
sahf
mov
push
mov
add
sub
bound
add
jmp
xor
adc
and
scas
jl
and
test
xor
fcmovnb
mov
mov
sub
rol
ja
push
push
lea
test
sub
(bad)
pop
cli
push
push
mov
mov
ins
push
dec
dec
mov
add
mov
not
lea
sbb
(bad)
inc
sub
ins
sbb
rcr
rcr
mov
(bad)
call
cmp
push
mov
aaa
mov
sahf
inc
add
mov
cmp
mov
mov
in
es
stos
test
xor
and
leave
push
push
inc
jp
test
or
or
sub
repz
sbb
sbb
push
adc
jnp
out
xor
cmp
inc
(bad)
adc
jle
cmp
loop
jne
sub
push
push
ins
inc
mov
add
test
pop
icebp
ret
fistp
jmp
and
add
sbb
push
sbb
dec
cmp
mov
ins
or
adc
push
xor
(bad)
outs
or
adc
jno
cmps
popa
push
shl
xor
add
add
mov
add
jmp
mov
mov
inc
or
adc
cmp
retf
push
(bad)
lods
shl
or
cwde
push
jae
pop
ins
clc
pusha
lock
or
sbb
mov
dec
mov
adc
data16
aad
mov
mov
cwde
add
jmp
into
mov
jne
pop
push
push
push
and
jbe
push
inc
mov
aas
cs
jo
retf
push
cmp
loop
ss
fcomp
in
(bad)
xchg
mov
daa
mov
icebp
sbb
jle
sub
aam
sar
sbb
mov
cmp
jl
aad
fmul
adc
iret
call
or
sbb
imul
lea
(bad)
jmp
pop
stos
adc
mov
xchg
stos
cwde
jbe
pop
(bad)
stos
aaa
adc
cmp
xor
sbb
inc
inc
pop
js
push
popa
adc
adc
out
fimul
test
cmc
jb
imul
xchg
push
and
(bad)
dec
jo
jno
es
pop
jns
xchg
fld
mov
gs
jg
mov
xor
mov
mov
mov
rcl
push
push
xchg
jmp
sub
inc
jne
ds
or
mov
sahf
sub
add
cmp
or
stos
pop
sub
(bad)
ret
push
aaa
mov
push
pop
ret
mov
push
pop
push
fstp
mov
and
xor
pop
test
push
push
enter
cmp
loope
pushf
ret
in
ror
enter
jo
and
xabort
movs
sub
lods
and
test
dec
and
xchg
jp
pushf
and
xchg
fidiv
mov
mov
fcmovne
mov
rcl
fcmove
mov
push
sub
fidivr
push
add
inc
inc
scas
loope
sbb
test
push
pusha
(bad)
popa
adc
push
test
push
xchg
and
dec
push
push
cmp
pop
sub
push
push
lea
aam
fcom
(bad)
mov
ret
mov
test
loopne
mov
xchg
cmp
or
fstp
xor
jg
cmp
add
loopne
push
lock
push
test
sar
push
in
inc
mov
push
pop
lods
xchg
enter
xor
adc
jl
dec
add
js
(bad)
adc
mov
and
stos
inc
cmp
push
push
push
and
enter
jo
sbb
or
push
je
push
call
cwde
shl
test
xor
add
rcr
in
imul
xor
inc
pusha
fmul
add
mov
xchg
add
adc
mov
pop
mov
push
lahf
push
mov
ja
xchg
cmp
movs
lock
mov
sub
mov
add
fwait
add
out
rol
ds
dec
lock
sbb
xlat
aaa
adc
inc
sub
jo
xchg
mov
fst
mov
loop
and
mov
std
cmp
dec
(bad)
push
add
push
mov
rol
movs
dec
js
mov
movs
pop
jl
mov
inc
lock
xchg
or
adc
enter
ins
aam
xchg
sbb
pop
add
pop
mov
dec
gs
xchg
lods
add
mov
adc
push
inc
lds
jo
test
sbb
sbb
adc
push
push
loope
xor
push
scas
pop
ss
xchg
add
mov
je
mov
(bad)
jge
call
lock
push
(bad)
call
cs
sub
push
pop
inc
test
add
cmp
fs
mov
(bad)
push
push
and
mov
dec
push
dec
mov
pop
loope
ret
xor
movs
or
ins
push
push
mov
pushf
shr
dec
sbb
xchg
mov
addr16
push
push
loope
div
fcom
sbb
cmp
inc
sbb
dec
push
data16
inc
neg
shl
or
push
mov
ja
adc
sub
les
adc
push
fst
add
popf
xor
add
sahf
mov
dec
adc
mov
pop
xor
ins
mov
arpl
push
inc
sbb
or
jl
mov
ja
call
mov
jl
mov
cdq
and
sar
movs
rol
in
and
adc
jl
push
mov
and
adc
add
iret
mov
push
mov
imul
sar
mov
fcmovb
jmp
add
imul
push
std
mov
pop
fisttp
mov
mov
imul
test
imul
icebp
mov
div
inc
test
add
bound
mov
(bad)
sub
sub
jo
cld
daa
mov
je
cmp
clc
pop
pop
outs
or
xor
jne
jae
imul
inc
lea
(bad)
pop
mov
hlt
push
arpl
into
sbb
mov
stos
ja
(bad)
and
jmp
or
mov
cs
xor
add
inc
lock
inc
inc
pop
mov
inc
repnz
rcl
adc
test
sbb
or
hlt
pop
je
fldz
inc
fstp
push
int3
je
jo
fisubr
sahf
hlt
sbb
inc
rol
data16
int3
jl
cmp
int
call
add
sbb
aas
sbb
jo
xchg
sub
cmp
push
add
jl
ins
sti
or
mov
push
jle
cmp
nop
(bad)
add
xchg
(bad)
sbb
and
adc
jmp
lods
(bad)
pop
lea
cmp
or
out
or
idiv
jge
jmp
mov
pop
nop
sbb
dec
nop
fadd
add
mov
sub
xor
mov
stc
sti
and
fdivrp
shl
mov
test
sbb
icebp
push
(bad)
dec
add
jns
inc
js
ret
adc
fsubr
xchg
imul
js
bound
mov
mov
je
xor
out
fidiv
shl
mov
ds
dec
xchg
sahf
add
mov
enter
sar
push
pop
mov
imul
leave
jge
and
enter
add
sub
sbb
jmp
mov
push
rol
mov
xchg
mov
call
add
or
xchg
xchg
add
and
ret
xor
ret
cmp
shrd
add
lock
pop
xchg
xor
daa
lds
or
add
mov
shl
les
pop
imul
sub
int3
pop
cmp
dec
inc
jg
or
sbb
add
xor
xor
and
xchg
jne
(bad)
mov
fisttp
sbb
mov
mov
or
(bad)
jmp
rcr
pop
xchg
pop
add
or
and
inc
mov
jns
rol
xor
or
add
iret
pop
clc
ret
push
sahf
nop
sbb
or
xchg
adc
push
mov
add
push
push
add
mov
pop
and
(bad)
push
push
test
push
enter
popa
inc
xchg
fisttp
jg
push
add
push
or
nop
mov
mov
dec
or
(bad)
lods
outs
cmps
xchg
fstp
inc
data16
cmc
cmp
dec
test
dec
sahf
adc
rol
push
fiadd
or
inc
push
in
push
mov
sbb
push
pop
push
adc
inc
pop
inc
test
aam
pmulhuw
shr
adc
(bad)
push
xchg
sbb
fadd
push
cmp
dec
sub
jb
mov
mov
inc
push
jle
inc
leave
add
pop
adc
cmp
pop
and
inc
xchg
push
add
pop
ret
scas
inc
cs
lahf
or
or
aad
dec
and
fisttp
clc
add
xchg
pop
and
dec
and
jle
dec
aad
and
cmp
setb
push
(bad)
das
out
push
mov
sub
cmp
setae
pushf
sub
fiadd
inc
add
add
addr16
push
mov
hlt
mov
nop
or
ins
retf
jno
jno
pop
cmps
and
call
jl
pop
iret
sub
cmp
mov
xchg
enter
sub
push
push
cdq
add
push
aad
push
or
es
pop
pop
icebp
shl
je
pop
je
sar
cmp
bound
mov
sub
push
push
loopne
cmc
stos
sbb
lods
push
fimul
push
sbb
sbb
pop
add
loop
mov
mov
std
sub
adc
daa
int
dec
push
push
inc
push
push
or
push
inc
and
inc
mov
lahf
sub
add
dec
push
pop
ins
in
cmp
in
adc
(bad)
leave
sub
fwait
int
mov
cmp
ja
movzx
js
pushf
fldcw
outs
xchg
cmp
xchg
jge
test
add
add
jbe
(bad)
adc
sub
add
movs
loopne
aas
sahf
outs
ret
adc
or
or
cmp
or
cmp
pop
inc
and
and
jae
pop
ret
aas
or
test
(bad)
adc
pop
mov
lea
mov
add
jg
mov
xor
xchg
dec
pusha
jmp
scas
ins
mov
cmp
nop
retf
inc
xor
ror
xor
in
adc
sub
push
sahf
sub
jo
or
outs
add
popa
push
out
pop
je
imul
xor
je
jo
pop
push
xchg
mov
shl
cmp
xchg
rol
movs
pop
in
nop
add
xchg
xor
fwait
pop
pop
jg
ds
dec
add
mov
sbb
bound
push
nop
mov
out
test
jne
push
inc
pop
movs
add
sbb
stc
mov
ds
lea
xor
push
and
pusha
js
mov
test
xor
mov
sbb
sbb
cmp
and
or
adc
or
adc
add
mov
jmp
push
adc
and
ja
subps
xchg
mov
dec
shl
mov
(bad)
sbb
xor
add
movs
push
push
movs
and
inc
movs
sbb
sub
jl
pop
retf
push
xor
sbb
pop
sub
lods
hlt
adc
cwde
daa
adc
pop
xor
sub
mov
xchg
mov
je
cld
push
(bad)
(bad)
mov
pop
(bad)
push
push
push
dec
mov
and
movs
pop
aad
pop
iret
movs
lea
out
cli
sbb
shr
sbb
dec
and
sbb
fsubr
mov
and
mov
dec
push
(bad)
mov
dec
pop
xchg
dec
mov
add
push
push
and
inc
rcr
xor
scas
scas
mov
push
xchg
push
xor
mov
iret
lock
or
sbb
movs
push
or
cmp
xor
cmp
cs
add
mov
(bad)
addr16
add
ret
cdq
movs
(bad)
pop
mov
xchg
jl
mov
mov
push
jmp
push
ror
sub
outs
add
clc
or
je
les
add
add
fist
call
xor
fs
inc
aad
add
sbb
fadd
stc
cs
pop
or
xlat
push
and
xor
test
add
sbb
retf
push
sbb
dec
sub
or
cmp
or
scas
ret
add
mov
mov
and
pop
mov
lods
push
or
movs
mov
cs
sub
fcomp
mov
js
mov
and
int3
cdq
pop
cdq
or
jg
pop
add
push
push
mov
xchg
inc
call
pop
rcl
lds
aam
dec
add
ins
in
sti
mov
je
cmp
mov
inc
es
cmps
call
mov
test
add
enter
adc
push
and
daa
sbb
and
mov
push
pusha
sub
xchg
sub
add
and
sbb
test
mov
pop
and
pop
push
retf
or
fsubr
push
clc
dec
cmp
add
inc
outs
ror
movs
movs
jmp
loopne
inc
sub
and
rol
mov
push
dec
adc
cmp
lods
pop
jl
sub
adc
jae
dec
jmp
xor
adc
pop
sub
popf
push
call
mov
sbb
icebp
dec
sbb
jo
dec
cli
and
and
mov
nop
imul
jge
or
enter
popf
dec
cmp
ja
(bad)
xor
push
adc
test
push
mov
or
lea
push
sbb
add
aas
adc
push
lods
call
sub
scas
mov
inc
(bad)
pop
push
push
push
push
jmp
test
dec
adc
hlt
mov
add
and
jl
or
xchg
ret
arpl
pop
or
(bad)
cmc
outs
(bad)
pop
jno
in
push
ror
cvtps2pd
xor
inc
and
adc
setnp
sbb
imul
sub
push
fnstcw
cmp
shl
and
mov
push
sub
jge
adc
and
pushf
mov
push
mov
adc
xor
cwde
jns
cmp
arpl
sbb
inc
mov
stc
out
cmp
or
or
mov
fldenv
jp
clc
std
je
test
mov
mov
pop
ss
adc
mov
hlt
xor
push
dec
cmp
dec
mov
les
inc
mov
mov
pop
ret
cmp
sbb
adc
push
pop
dec
mov
xor
popa
mov
xlat
ror
adc
sbb
lods
cmp
int3
fdiv
neg
mov
xchg
sbb
test
xchg
sbb
pop
sub
cs
push
pop
push
push
or
pop
ret
push
into
js
js
mov
pop
dec
mov
ins
fdivrp
xor
ret
fldl2t
add
std
inc
sub
sbb
(bad)
add
jmp
pop
in
je
or
add
pop
add
cld
bound
add
sti
mov
stos
add
inc
inc
adc
inc
shl
pop
sub
xor
leave
mov
adc
pop
jne
repnz
xor
adc
(bad)
mov
jne
push
rcl
xchg
xchg
imul
push
push
pusha
xor
add
push
and
push
adc
xor
pop
add
mov
or
in
jbe
jbe
pop
mov
fwait
lods
jo
in
push
push
inc
push
call
add
sub
das
mov
ds
fsubr
push
daa
iret
or
dec
push
daa
add
pop
xor
push
adc
add
mov
mov
rcr
push
sbb
ins
int3
push
or
adc
adc
xchg
cmc
or
sti
xchg
push
or
sbb
add
or
xor
popf
ds
pop
cli
cmp
aam
pusha
enter
nop
or
test
pop
adc
mov
popa
push
jle
sub
add
pusha
in
das
nop
ss
push
cs
or
or
ror
dec
sbb
shl
pop
pop
mov
add
xor
lds
sbb
js
pop
and
pop
cmp
int3
pop
add
repnz
xchg
push
adc
push
jle
xor
add
xchg
sbb
and
or
cld
xor
cmp
xor
or
cs
sub
jb
cld
shl
xor
inc
sub
fs
hlt
rol
inc
xor
and
(bad)
jmp
add
shl
cli
pop
mov
es
in
mov
inc
add
ret
sbb
sbb
cld
cmp
add
and
shl
jg
pop
push
test
pop
fnsave
xor
dec
add
xor
das
lods
mov
sub
push
ins
sub
mov
movs
bndstx
mov
leave
fadd
dec
sbb
sbb
pop
lds
sbb
ins
pop
jge
je
or
or
mov
jo
sbb
dec
scas
adc
xchg
mov
cdq
dec
cmp
call
mov
or
cmp
arpl
call
lods
mov
mov
xchg
mov
stos
enter
inc
mov
cmp
sub
(bad)
sub
sub
mov
or
mov
mov
add
mov
or
inc
inc
mov
cmp
xor
cli
pushf
mov
fld
cmp
jmp
enter
sbb
aam
movs
or
inc
(bad)
ja
mov
jo
mov
dec
outs
xchg
outs
add
adc
and
mov
mov
repz
add
jg
push
clc
or
pop
mov
in
push
lods
sbb
mov
cmp
pop
mov
cdq
push
push
outs
add
jne
mov
dec
sbb
sub
mov
test
mov
test
or
or
jnp
adc
sar
add
push
sbb
add
mov
lock
retf
add
lock
retfw
sbb
mov
xchg
loop
inc
xor
and
or
into
lods
mov
cmps
loop
xchg
jle
adc
dec
loop
enter
push
cwde
loope
popa
fwait
xchg
stos
pop
sbb
add
popa
(bad)
sub
pop
lds
aam
ror
sub
call
sub
and
rcr
dec
adc
inc
pop
sahf
nop
pop
push
mov
add
fimul
adc
push
xor
fst
data16
push
jg
pop
movs
mov
inc
mov
xor
dec
jmp
into
mov
inc
nop
or
rcl
jbe
xchg
nop
aas
pop
sub
es
sub
iret
sbb
sahf
mov
or
shl
sbb
xchg
cmps
pop
pop
pop
push
(bad)
mov
int3
jp
cld
test
je
mov
push
enter
ret
ins
sbb
dec
dec
inc
mov
gs
je
dec
dec
push
sbb
ret
cmp
pop
icebp
and
shl
and
cmp
jl
or
test
retf
push
mov
or
jl
pop
push
adc
inc
sbb
jno
xchg
iret
adc
or
je
ins
dec
add
or
cs
or
push
scas
sub
cld
xor
nop
inc
test
mov
and
add
mov
psubsb
add
es
and
fdiv
push
sub
and
inc
cmp
out
or
cmp
or
mov
movs
retf
or
enter
adc
sbb
xor
pop
dec
adc
sbb
in
adc
dec
out
inc
ss
ja
call
and
sbb
imul
or
fimul
xchg
aad
add
jecxz
imul
fiadd
inc
and
cmp
jo
adc
and
rep
mov
adc
jns
in
add
adc
adc
(bad)
cmp
test
jns
mov
mov
push
in
add
nop
push
je
and
movs
mov
push
add
inc
push
or
ja
ret
test
(bad)
inc
push
pop
xor
rol
pushf
add
xor
adc
xchg
xchg
sbb
and
dec
dec
sbb
movs
leave
sbb
add
popa
xor
leave
inc
pop
add
and
adc
fnsave
mov
inc
sbb
pop
and
ja
add
std
lea
push
mov
mov
jns
outs
pop
clc
mov
daa
jo
addr16
popa
cmp
xor
into
lea
dec
cs
xor
fcomp
cmp
in
nop
inc
jl
test
jns
mov
movs
pop
mov
cdq
add
leave
push
mov
mov
jp
fist
jno
mov
fiadd
into
inc
push
adc
(bad)
loopne
add
jb
or
xchg
dec
xchg
sub
push
outs
sbb
fnsave
adc
inc
push
imul
cmp
inc
test
idiv
bound
cmps
rcr
mov
(bad)
lock
or
shld
enter
mov
pop
adc
sbb
fsub
jae
push
js
cmp
addr16
mov
or
jg
pop
push
mov
mov
outs
add
xor
sbb
pop
push
inc
xchg
sahf
mov
sub
cld
out
jnp
in
adc
adc
test
push
shl
pop
lods
sbb
and
and
and
les
test
push
add
dec
mov
inc
pop
or
les
fs
pusha
ror
scas
adc
xchg
movs
addr16
jmp
lds
imul
or
push
and
lds
test
add
push
sbb
xchg
popa
inc
dec
adc
ja
je
aam
test
jle
dec
clc
aas
sub
and
lea
test
jge
mov
div
fimul
pop
ins
pop
push
add
adc
popf
ins
test
or
aam
fcomp
jg
push
ficomp
push
pop
add
cmps
add
aas
je
iret
sbb
aas
psubd
xor
cli
xor
(bad)
jne
jle
ins
push
stc
imul
sub
jmp
(bad)
push
imul
ds
jbe
jp
neg
cs
push
inc
mov
test
cdq
push
test
mov
aad
dec
je
test
jle
jb
push
adc
fsub
xchg
stos
loop
out
cmp
lea
jl
mov
(bad)
js
lods
aam
aaa
lock
cld
loopne
push
or
push
pop
ins
std
push
fs
push
pop
or
sub
adc
aas
popa
push
ret
cmp
and
xchg
or
aad
call
adc
(bad)
shl
adc
push
leave
xor
sub
js
leave
jae
add
dec
out
and
mov
lods
add
dec
ret
outs
and
xchg
pop
fdivr
and
push
add
das
ss
cmp
push
push
add
test
pop
push
ds
iret
pusha
add
sbb
dec
add
add
pop
das
mov
dec
cs
rcl
ds
sbb
sbb
lds
mov
sbb
cmp
add
movs
inc
jb
mov
loop
aas
adc
mov
add
xor
xchg
dec
leave
push
shl
fs
xchg
in
jo
(bad)
fsubr
add
or
add
dec
loope
jecxz
in
xor
(bad)
xchg
sbb
inc
jle
mov
aas
popf
pop
mov
jl
sbb
or
daa
mov
dec
scas
test
aas
inc
mov
mov
add
fs
mov
dec
(bad)
mov
das
jl
mov
mov
ds
(bad)
push
outs
xchg
lock
lahf
or
push
push
xchg
inc
enter
ja
push
or
sbb
stos
sub
les
jp
(bad)
jle
aas
add
clc
out
jge
sbb
imul
(bad)
icebp
pop
call
sbb
add
dec
or
jo
lock
push
(bad)
sbb
or
gs
push
xchg
lds
ror
outs
xor
sub
add
scas
or
or
xchg
push
cld
sbb
sbb
out
and
adc
add
adc
xor
or
nop
sub
das
push
out
imul
jmp
mov
xchg
and
or
in
xor
jecxz
cmp
push
add
push
aas
sub
rcl
or
stos
xor
test
sub
pop
and
ds
inc
leave
shr
shl
sub
xchg
mov
mov
xchg
call
push
mov
sub
inc
xor
sbb
rcr
sub
cmp
cmp
stos
popf
push
mov
cmp
or
pop
adc
mov
popa
mov
or
pop
hlt
data16
je
jg
jo
nop
push
add
sti
mov
push
add
sbb
lea
sbb
push
push
push
inc
jg
xchg
push
jg
ins
adc
sbb
out
fdivr
push
xrelease
(bad)
std
and
push
(bad)
int
push
xor
push
jb
push
mov
lods
push
movs
dec
in
mov
mov
push
add
cmp
lods
xor
shl
push
jge
inc
inc
into
push
adc
and
and
daa
and
mov
push
adc
mov
rcl
mov
fwait
cmps
jo
push
inc
add
outs
sbb
mov
add
lea
cmp
ins
retf
aam
add
sar
rcl
lahf
and
sahf
jl
dec
add
clc
mov
es
out
cmp
aaa
push
sub
xor
smsw
push
mov
pop
mov
ret
cmp
mov
stos
dec
ret
xchg
push
inc
push
adc
dec
sbb
es
push
pop
mov
jb
xchg
dec
pop
and
xchg
xor
adc
dec
push
or
cs
push
add
(bad)
sbb
or
mov
jmp
mov
setge
add
sub
xor
mov
call
push
jne
retf
sub
(bad)
sub
pop
call
in
jge
add
loope
arpl
add
xor
aam
jge
dec
and
dec
and
je
and
sub
stc
add
enter
sbb
sub
pop
inc
cmp
push
scas
dec
dec
xchg
sbb
push
scas
ins
xor
jmp
arpl
mov
jnp
or
add
push
push
cmp
add
inc
adc
outs
pop
je
sbb
jecxz
mov
les
sub
ins
or
fs
pop
rcl
jge
icebp
fst
test
mov
jbe
(bad)
cmc
adc
push
dec
fidiv
and
mov
dec
dec
mov
pop
or
test
into
mov
and
sbb
and
inc
lds
adc
test
stc
mov
cli
add
and
or
pop
mov
leave
and
pop
or
add
add
sbb
sub
leave
or
addr16
push
scas
push
push
mov
mov
dec
outs
loopne
push
mov
scas
test
rcr
inc
mov
cmp
sti
and
out
or
mov
and
mov
ins
sbb
mov
push
or
loopne
int3
xor
fcmovbe
push
retf
push
out
jp
adc
fsubr
mov
dec
inc
jbe
dec
rcr
mov
cld
adc
or
mov
ret
dec
pop
mov
dec
call
add
adc
leave
or
sub
jnp
dec
sbb
(bad)
xor
pop
call
cmp
mov
add
add
xor
xchg
mov
ja
add
shl
jae
rcr
xor
aaa
add
aaa
mov
mov
out
lods
adc
clc
lods
inc
or
(bad)
dec
mov
mov
cld
pop
cmp
pop
mov
lea
mov
mov
loop
mov
cld
lea
ret
adc
mov
aad
push
push
push
sub
fdivr
dec
sbb
pop
add
xlat
sbb
jne
xchg
mov
cmp
jne
mov
push
cmp
mov
or
jns
push
adc
(bad)
add
cmp
push
sub
xor
add
fs
nop
and
or
imul
cmps
stc
lock
mov
push
mov
cmp
pop
mov
mov
sub
add
aas
push
add
cdq
dec
mov
(bad)
push
add
ss
mov
pop
jp
jmp
sbb
xor
jle
out
sub
dec
and
push
cmc
add
cmp
pop
sahf
cmp
inc
cdq
adc
lea
add
cmp
scas
cdq
jecxz
and
jo
mov
sub
ins
sub
add
jmp
mov
cmp
xchg
push
push
popa
(bad)
dec
xor
or
(bad)
mov
mov
dec
hlt
jge
sbb
call
das
je
inc
push
push
das
mov
mov
cdq
push
cmp
nop
es
je
cmps
test
repnz
push
or
or
or
ficomp
jbe
adc
sahf
jl
mov
push
jg
mov
lock
add
push
push
add
push
ret
ret
push
pop
cmp
push
adc
xor
out
push
ficom
pop
cmp
mov
ret
xor
mov
test
rcr
test
push
push
les
ss
jnp
dec
adc
jmp
jb
sub
add
adc
pushf
push
or
cmp
adc
cld
(bad)
loopne
lock
inc
movs
and
imul
cs
mov
adc
dec
mov
lods
inc
sub
pusha
fiadd
pop
dec
sbb
lds
cmp
mov
outs
push
cmp
in
in
push
in
out
jno
add
inc
cmp
inc
adc
loopne
dec
mov
sbb
add
or
mov
or
add
repnz
add
xor
cmp
and
pusha
add
adc
add
inc
inc
mov
xchg
pop
cdq
addr16
jge
aaa
xor
jae
(bad)
(bad)
jge
fwait
lock
mov
or
adc
cmp
jle
pusha
sub
cmp
jle
pop
lock
and
lock
push
mov
jno
jo
jl
jne
dec
int
add
or
jg
mov
push
lea
ror
aas
push
popa
add
(bad)
pop
add
xchg
xor
push
push
push
push
sbb
push
mov
add
and
test
scas
js
add
(bad)
ror
lahf
(bad)
push
cmp
cmp
scas
lock
push
xchg
fidivr
sbb
(bad)
jbe
sbb
shr
jno
dec
rol
rcr
shr
repnz
mov
push
xlat
inc
add
add
loop
call
mov
sub
jge
fdiv
mov
pop
jp
cmp
jb
fist
xchg
ins
shl
test
rol
imul
int
pop
shr
dec
lods
pop
inc
xchg
mov
add
jno
mov
or
call
inc
mov
add
inc
mov
ret
pop
inc
mov
stos
xchg
cmp
cmp
adc
mov
dec
mov
xchg
mov
add
adc
adc
cld
stos
sub
sar
pop
mov
test
mov
jle
es
pop
push
push
xchg
stos
dec
fsubr
jmp
test
cs
int3
push
cmps
xor
mov
add
add
add
into
xlat
pop
jmp
or
cmp
pop
mov
imul
push
push
push
push
cmps
sbb
aam
fcom
stc
dec
push
mov
icebp
fidiv
ds
xchg
sub
push
fbld
cmp
nop
xor
xor
xchg
xchg
les
(bad)
ds
jl
int3
add
pushf
mov
cmp
cmc
test
and
xor
sbb
push
mov
push
sub
movs
repz
cmp
mov
fcmovnb
add
(bad)
add
retf
shl
push
inc
mov
mov
daa
movs
je
jmp
cmp
les
add
retf
adc
sar
enter
test
add
cmp
sbb
mov
inc
add
fst
push
pop
mov
rcl
int
add
xchg
aas
(bad)
mov
xchg
adc
and
fisttp
push
xchg
or
pop
xor
jmp
or
adc
fsub
daa
ret
je
or
sbb
movs
out
int
push
add
sub
(bad)
cs
sbb
jle
and
xchg
sbb
xor
or
inc
add
ret
pop
adc
mov
xchg
rcl
add
sub
sub
es
sub
cmp
daa
xchg
adc
pop
mov
add
or
in
(bad)
or
xor
sbb
or
cmp
cdq
pop
dec
loopne
fimul
adc
cmp
es
test
jecxz
lds
xor
mov
add
adc
sub
das
pop
dec
push
es
pop
xchg
rol
sbb
shr
add
ror
inc
stos
push
sbb
cmp
(bad)
mov
xor
loopne
add
sbb
fisub
int3
sub
add
mov
jle
fwait
pop
adc
test
add
shl
mov
xor
push
mov
scas
fild
cwde
ret
ja
les
inc
scas
push
mov
arpl
lds
push
ror
pop
add
mov
xchg
mov
hlt
and
sbb
es
sub
xlat
add
fist
pop
icebp
ret
adc
push
push
or
movs
cmp
sub
fnstsw
mov
pusha
in
ins
jne
mov
sbb
repnz
push
lock
leave
pop
add
outs
test
and
daa
nop/reserved
sub
jecxz
or
pop
or
or
pop
xor
pop
adc
adc
push
add
pop
add
jns
ret
cmps
cwde
fnstenv
and
add
add
je
mov
adc
push
add
or
lds
or
test
pop
and
push
adc
and
call
outs
out
je
mov
leave
(bad)
mov
inc
dec
inc
push
ja
outs
pusha
push
inc
inc
add
mov
xchg
sub
push
fimul
stos
mov
push
and
add
sbb
jmp
fsubr
daa
int
xchg
lock
sub
es
pop
adc
fadd
loop
ins
or
inc
ror
cmc
push
aam
push
adc
daa
xor
fadd
adc
dec
pop
cmp
ins
sbb
test
test
shl
cmps
sbb
inc
mov
inc
or
push
arpl
push
sub
xchg
js
fild
outs
push
inc
lea
popa
inc
xlat
(bad)
add
inc
push
fldcw
add
pop
cmp
loop
inc
mov
jns
inc
call
or
sub
movs
push
push
adc
mov
sub
or
or
mov
outs
and
mov
add
rol
push
ins
repnz
stc
or
xchg
or
xchg
add
into
and
or
dec
and
lahf
jae
stos
js
and
and
icebp
jne
(bad)
or
add
(bad)
pop
dec
rcl
add
pop
popf
adc
loop
add
sbb
es
xchg
add
jns
push
adc
mov
mov
es
test
add
mov
sbb
jbe
clc
mov
cmp
les
jne
xchg
cmp
cmp
add
jg
sti
mov
add
push
ret
push
loopne
clc
or
inc
aas
shr
popf
cmp
or
inc
push
jne
fist
mov
pop
and
sar
lock
cwde
add
mov
loopne
push
cmp
rcr
and
add
mov
mov
jg
test
(bad)
orps
pop
add
mov
add
mov
sbb
add
sbb
call
mov
xor
repnz
inc
sbb
rcl
xor
outs
int
dec
or
push
push
outs
adc
cmps
cmp
sub
push
sub
stc
jbe
hlt
jmp
fist
xchg
xchg
and
clc
dec
add
pop
dec
rcl
add
adc
adc
add
jmp
add
test
add
imul
add
jo
and
bound
mov
adc
or
js
add
out
aam
add
(bad)
push
push
mov
ret
rcr
(bad)
mov
inc
mov
call
test
push
mov
and
lea
dec
int
inc
inc
test
fnop
(bad)
dec
sar
xor
pop
inc
(bad)
adc
mov
adc
clc
jg
mov
loopne
or
add
cmp
push
push
inc
sub
or
push
push
push
js
clc
sub
pop
add
je
add
loop
mov
mov
sar
adc
imul
add
in
jle
daa
shr
(bad)
push
mov
sub
sub
ins
adc
sbb
or
cli
sbb
lea
pop
out
add
leave
sbb
pop
xor
cmp
aaa
push
es
test
sub
sub
loopne
push
shr
pop
push
out
add
mov
push
push
push
push
fadd
mov
sub
imul
les
into
not
add
add
lods
mov
adc
mov
std
ins
or
push
cwde
sub
and
and
push
rcr
dec
fild
sbb
or
out
shl
inc
jb
push
push
scas
dec
imul
jmp
out
fild
dec
mov
mov
ret
sub
push
ret
adc
adc
jb
adc
mov
ret
cmova
push
mov
xlat
mov
push
lea
ret
pop
jp
cdq
push
fiadd
fs
push
pop
inc
push
retf
dec
push
arpl
push
aas
out
sub
mov
adc
test
push
adc
jo
jmp
sbb
xor
or
add
jg
pusha
outs
or
add
pop
mov
pop
dec
add
popa
xchg
cmc
sub
cmp
mov
add
sub
add
daa
or
xchg
add
int3
mov
cmc
call
jmp
hlt
and
test
push
or
in
repz
or
push
adc
xor
and
add
inc
aad
cld
add
xor
pop
push
push
pop
or
jns
mov
jge
lock
add
pop
das
pop
loop
pop
xchg
call
adc
inc
enter
rol
jg
push
je
xchg
mov
dec
add
shl
dec
mov
or
cdq
sbb
dec
inc
push
add
or
sbb
cwde
pop
loop
lods
std
pop
push
call
push
nop
fmul
push
dec
loopne
or
sti
ja
sahf
push
shr
sub
mov
sbb
adc
add
js
pop
cmp
neg
add
inc
cld
xor
neg
cmp
add
sbb
sbb
lds
pushf
or
or
lea
ret
sbb
push
cld
dec
jmp
xor
mov
pop
loop
cmp
push
mov
inc
jp
dec
std
loope
data16
fimul
mov
pop
or
in
xor
adc
sbb
fs
fnstcw
shl
pusha
loope
cmp
lea
sub
push
rcl
push
es
xchg
dec
cmp
pop
push
lock
mov
sbb
aas
bound
push
mov
sub
mov
add
sbb
adc
mov
push
push
inc
clc
push
arpl
mov
lds
mov
mov
inc
cld
xor
and
sub
mov
pop
test
clc
in
and
xor
cmp
jle
cwde
ret
push
adc
push
mov
pusha
dec
lock
add
ja
mov
scas
lock
aas
pop
or
sar
std
hlt
lods
in
int3
push
mov
or
pushf
mov
pop
fst
inc
inc
sub
ss
jnp
cmp
jae
mov
loop
or
sahf
fistp
mov
or
fcomp
inc
ins
stos
push
mov
pop
mov
jl
mov
clc
or
xor
and
(bad)
and
or
push
ds
(bad)
mov
in
xor
cmps
push
test
add
sbb
shl
inc
int
mov
sbb
add
dec
imul
ror
es
xor
ret
fisttp
and
inc
inc
mov
dec
mov
jmp
test
jno
jne
push
push
add
push
aam
ds
dec
add
mov
mov
lock
fcom
rol
out
dec
cmp
lds
repnz
in
mov
les
push
and
pop
mov
outs
mov
xchg
ror
and
out
mov
sbb
pushf
mov
fstp
mov
mov
and
fist
mov
push
lahf
cdq
loop
adc
xchg
cmp
jbe
add
cmp
mov
adc
cmp
sbb
shl
(bad)
out
pop
push
dec
div
in
shl
loopne
xor
pop
inc
add
mov
adc
or
dec
imul
pop
mov
or
int3
jno
pop
jae
test
pop
xor
pop
mov
lods
scas
aam
mov
sub
xor
fidivr
push
pop
sub
in
pop
pop
mov
popa
lock
outs
mov
mov
jecxz
add
inc
inc
test
sub
sub
(bad)
sbb
lods
mov
xchg
add
int3
pop
mov
(bad)
sti
retf
(bad)
hlt
(bad)
jle
inc
int3
lea
push
les
jg
inc
js
stos
pop
call
not
(bad)
mov
xor
sub
xrelease
inc
sbb
add
test
out
xor
add
not
cmp
jp
sbb
pop
mov
cmp
fwait
xor
xor
inc
loopne
jmp
enter
dec
dec
cwde
push
mul
jne
jp
sbb
adc
push
test
jb
mov
xchg
sub
jo
cmp
popf
inc
movs
fsub
add
mov
das
add
pusha
imul
pop
movs
cmp
sub
jb
adc
cmp
(bad)
shl
daa
jle
lods
(bad)
mov
dec
xchg
sub
out
dec
pop
test
add
movs
inc
jmp
cmp
jne
scas
aad
push
jl
mov
stos
or
(bad)
sbb
cs
dec
add
movs
stos
in
add
cmp
cmp
(bad)
mov
xor
jne
push
mov
mov
push
test
push
(bad)
into
mov
xchg
ror
xchg
mov
iret
fcomp
(bad)
jae
(bad)
add
push
loope
fsub
dec
xor
fld
xor
fwait
mov
ror
pop
mov
mov
pop
add
rcl
popa
popf
in
ins
push
jp
outs
dec
retf
jl
mov
sub
pop
(bad)
xchg
sti
push
sub
lds
sahf
out
mov
push
mov
sbb
mov
enter
add
push
ins
retf
jp
sub
push
pop
fdivr
gs
ins
loope
leave
test
xor
push
xlat
dec
or
sbb
xchg
xchg
inc
adc
cld
push
push
nop
pop
loopne
push
cs
mov
pop
enter
dec
xor
(bad)
mov
mov
shl
pop
ret
mov
xchg
test
or
inc
outs
and
sub
adc
jns
cdq
dec
xor
and
lock
shr
leave
inc
pop
push
jnp
push
out
nop
or
sub
outs
cmp
or
mov
hlt
jmp
rol
push
es
and
jl
adc
sub
pop
xchg
dec
outs
pushf
add
push
and
xor
add
sub
and
adc
xor
mov
mov
cmp
add
fdivr
jne
push
adc
cdq
sub
inc
lock
cmp
adc
(bad)
cmp
retf
nop
sbb
xor
sbb
in
push
inc
push
add
push
lock
ds
adc
or
pushf
repz
or
ror
test
imul
je
loope
inc
and
jle
add
daa
add
ss
test
pop
mov
push
cwde
inc
push
sub
test
sub
(bad)
fcom
push
inc
out
test
dec
inc
les
dec
std
fadd
ret
or
ret
lods
jp
xor
cmps
xor
mov
push
inc
and
mov
adc
push
xor
jnp
jno
adc
mov
inc
sbb
rol
scas
push
pop
fcom
push
mov
in
push
int3
jns
sub
mov
pop
jns
sbb
adc
jne
dec
adc
dec
sbb
mov
dec
mov
mov
in
push
add
loop
mov
hlt
mov
add
inc
push
jns
cmp
cmp
ror
call
cmp
cmp
xor
inc
and
cmp
mov
lods
or
mov
cmp
mov
retf
scas
enter
fstp
pop
or
add
sub
mov
push
aam
lea
mov
jp
sub
push
jne
jmp
xor
bound
pushf
mov
pop
imul
je
mov
add
scas
mov
(bad)
cmc
mov
add
movs
rcl
xchg
rcl
daa
sahf
cmps
pushf
push
inc
xor
xor
jne
outs
mov
push
imul
test
imul
pop
mov
dec
call
mov
pop
jno
mov
xor
cmps
aad
test
push
sub
cmp
push
bound
jb
popa
and
xor
pop
inc
xor
arpl
mov
jno
leave
xor
and
xchg
nop
jmp
cwde
shl
and
mov
jb
jb
jmp
daa
ds
mov
push
jle
mov
and
ins
sub
jmp
and
pop
or
mov
enter
sub
push
adc
mov
ret
sub
rcl
push
into
add
fild
test
push
dec
clc
xchg
jmp
pop
mov
inc
add
js
rol
js
ins
xor
pop
jbe
sub
int
adc
or
cs
mov
mov
sub
mov
lock
xchg
sbb
lods
fmul
cmp
adc
das
js
sub
sub
xchg
and
jle
ins
in
xor
xor
js
stos
pop
rol
xor
xchg
pusha
inc
xor
sbb
das
ret
xchg
xor
pop
ret
and
retf
fld
movs
sbb
bswap
(bad)
ins
push
adc
ret
jb
xor
xchg
push
in
loope
xor
mov
loopne
adc
(bad)
xor
mov
fiadd
into
ja
dec
push
push
cdq
inc
add
push
push
push
ja
dec
fst
pop
mov
pusha
ins
pop
xor
jo
aaa
ret
inc
xor
fld
cld
dec
sbb
jo
mov
cwde
jo
mov
xor
pop
push
cmp
aaa
arpl
mov
sub
inc
jnp
lods
xchg
jg
inc
sbb
add
test
mov
or
pushf
sub
and
pop
or
lea
cli
fsubr
mov
xchg
sbb
push
cmp
jnp
cwde
push
dec
or
mov
push
mov
add
jne
pop
shr
clc
(bad)
jbe
jno
sbb
mov
jmp
xor
scas
repz
push
pop
or
sbb
mov
nop
je
inc
jl
cmp
sbb
popa
xor
and
push
mov
sbb
cmp
xchg
cmp
xor
xchg
popa
ror
push
retf
sub
push
inc
or
test
adc
add
(bad)
push
add
jne
xor
adc
adc
sub
mov
push
call
mov
mov
dec
ins
push
sub
sub
out
and
push
fdivrp
aaa
mov
dec
pop
push
jb
repnz
add
mov
in
pop
sub
sar
fs
shr
cmc
and
mov
xchg
sbb
ds
lods
call
movs
sub
jns
cwde
ret
adc
jb
jl
inc
push
js
loop
(bad)
mov
mov
jnp
dec
dec
xchg
cmc
mov
mov
jmp
or
pop
push
push
pop
mov
dec
fsub
aaa
inc
cmp
jno
sbb
and
cmp
xor
inc
add
add
cmp
add
cdq
sub
pop
adc
test
and
(bad)
push
mov
retf
xchg
aaa
loopne
shl
das
push
add
and
jecxz
fld
mov
mov
push
and
push
add
popa
lods
nop
add
add
push
xlat
(bad)
pop
cmp
outs
cwde
dec
and
jge
fcmovbe
adc
add
add
xor
and
lods
test
lock
sbb
mov
push
adc
mov
push
add
retf
mov
imul
and
or
sub
mov
push
sar
movs
cmp
mov
inc
cmp
jl
mov
jne
mov
lds
pop
sbb
in
movs
xor
jmp
mov
ss
movs
sbb
fs
or
mov
or
inc
push
and
push
(bad)
in
dec
sbb
test
nop
push
add
and
xor
shl
enter
push
or
jmp
jne
jge
js
jl
mov
sub
js
dec
and
lock
ins
mov
mov
outs
outs
push
sbb
xor
pop
mov
push
or
mov
sub
push
xchg
ret
xchg
je
test
jmp
and
dec
or
pop
loop
sbb
and
push
jo
pop
dec
aad
or
pop
add
xor
adc
hlt
andnps
(bad)
dec
adc
sub
add
mov
mov
cmps
sar
cmps
and
adc
rcl
pop
popa
adc
dec
retf
and
nop
xchg
cmp
adc
and
aam
jmp
popf
fs
mov
ror
adc
pop
mov
shl
or
repz
cmp
dec
ret
je
inc
stc
cmp
inc
pop
aam
(bad)
adc
mov
cmp
mov
xchg
addr16
push
hlt
lock
mov
sbb
add
push
icebp
sub
dec
adc
stos
test
lea
sbb
imul
mov
add
pop
mov
push
add
add
in
jbe
ret
or
cdq
and
cmps
mov
inc
xchg
mov
in
push
sbb
test
les
lea
fild
dec
sti
push
push
inc
cmp
sbb
cmp
aad
and
in
into
(bad)
jmp
lea
push
push
popa
cmp
pop
call
test
ins
or
or
lock
jge
jge
cmp
test
rcr
or
aas
and
sbb
(bad)
cmps
jo
adc
(bad)
pop
imul
push
pop
mov
ret
push
fnstenv
mov
or
push
cmps
popa
pusha
adc
cmps
loope
mov
je
and
cld
xchg
dec
(bad)
in
adc
sub
sbb
arpl
or
or
add
out
daa
enter
cs
or
dec
sub
pop
push
imul
ret
push
jge
dec
shl
(bad)
inc
(bad)
adc
pop
ficom
lea
lea
jl
sub
icebp
adc
or
imul
pop
push
push
add
mov
icebp
dec
iret
fstp
push
jg
and
mov
cs
adc
or
inc
jb
and
add
cmp
sub
and
xchg
sub
pop
pop
arpl
pushf
mov
adc
dec
movs
add
inc
push
xor
xor
dec
sbb
inc
pushf
movs
retf
test
xor
dec
sub
dec
mov
jnp
sbb
xchg
xor
cmp
aas
cmp
and
pushf
pop
inc
adc
or
xchg
sahf
fmul
cmp
(bad)
lock
mov
or
xabort
call
and
push
sbb
shr
movzx
ss
adc
mov
and
push
push
rcl
dec
mov
add
push
dec
and
js
and
fbld
das
ins
inc
les
cmp
fst
mov
push
cmp
es
mov
das
pusha
add
pop
mov
ss
dec
cmp
inc
stos
jbe
push
sahf
sub
adc
int3
mov
sub
jne
lahf
(bad)
dec
js
mov
outs
mov
pop
push
fwait
aam
xchg
icebp
mov
xor
sbb
retf
push
xchg
nop
out
xlat
iret
mov
adc
ins
push
push
ret
ret
mov
js
das
xor
xchg
sbb
fcmovnu
daa
push
cdq
xchg
add
mov
inc
push
jns
and
mov
retf
add
mov
dec
enter
scas
retf
sub
sub
cmp
sbb
jne
fild
push
push
sbb
fs
lds
mov
xor
mov
and
dec
sub
adc
xchg
dec
repnz
les
das
cmps
lea
dec
mov
push
rcl
push
mov
jne
dec
or
adc
mov
test
adc
cmps
or
(bad)
ins
jge
cmp
inc
add
add
xchg
inc
data16
adc
mov
ins
cmps
mov
add
lods
cld
daa
or
mov
(bad)
clc
sub
stos
or
xchg
and
fwait
lea
je
pop
je
pusha
std
inc
je
or
inc
lds
fwait
sbb
push
outs
mov
add
cmp
mov
repnz
(bad)
adc
adc
test
sbb
xor
es
stc
sub
inc
cmp
dec
xor
inc
cmp
dec
in
test
sub
adc
call
mov
add
or
sbb
add
push
or
mov
push
adc
les
repz
cs
fld
std
sub
inc
sub
dec
cmp
into
push
cmc
jecxz
mov
jl
clc
mov
pop
mov
repz
cmc
xor
push
add
ret
push
sbb
pop
mov
sub
add
sbb
hlt
add
cs
push
add
sbb
into
dec
hlt
sub
pop
inc
(bad)
dec
(bad)
push
jo
cmps
mov
jge
mov
fild
add
adc
push
inc
push
inc
mov
dec
pop
popf
leave
and
and
mov
adc
cmp
mov
xor
(bad)
cdq
and
xor
in
xor
cmp
ret
mov
scas
pop
xchg
push
adc
inc
xchg
aam
cmp
mov
mov
add
fwait
shl
mov
push
adc
and
adc
mov
in
shr
push
aaa
or
ins
and
fs
sub
cld
test
cmc
test
nop
inc
ss
(bad)
adc
sbb
lea
loope
btr
push
mov
popa
(bad)
mov
sub
jns
mov
inc
arpl
mov
or
lods
stos
xor
xor
mov
hlt
movs
dec
hlt
add
outs
lds
or
jg
cmp
jne
add
dec
xor
daa
adc
inc
or
inc
lods
xchg
cli
and
inc
int
sbb
and
nop
jg
sbb
addr16
in
call
in
inc
xor
mov
(bad)
pop
inc
mov
pop
mov
movs
daa
stos
push
adc
push
mov
push
pop
push
mov
ret
sahf
dec
je
pop
pop
push
bound
adc
mov
ds
stos
mov
adc
test
mov
cli
js
sub
inc
movs
mov
adc
or
pop
xchg
pop
adc
inc
or
sahf
outs
les
mov
dec
inc
add
test
mov
xor
xor
sahf
cs
xor
loope
jmp
pusha
test
stc
mov
pop
test
out
inc
cli
push
lea
cwde
out
sub
in
iret
pop
fdiv
in
pop
sub
ror
ret
lods
int
sar
enter
or
fcomp
sbb
call
and
(bad)
ins
xchg
mov
add
add
adc
imul
push
pop
mov
pop
push
lods
mov
in
push
or
xor
mov
xchg
arpl
(bad)
stos
add
inc
inc
cli
push
xchg
mov
enter
sbb
jg
in
call
push
push
sub
add
add
pop
and
push
xor
mov
push
adc
or
test
retf
inc
hlt
inc
les
push
cs
jno
adc
aad
dec
xor
sub
sub
sahf
push
popa
test
test
jp
or
adc
or
fs
adc
pop
and
xor
lods
dec
retf
retf
mov
stos
adc
movs
sbb
pop
int
jge
test
(bad)
push
adc
or
pop
jb
pop
test
call
pop
add
and
add
push
mov
cmps
mov
inc
jecxz
das
jne
cmp
add
getsec
bound
dec
or
movs
add
jmp
push
popa
lods
mul
shr
out
pop
push
imul
(bad)
ins
and
ret
nop
(bad)
(bad)
in
scas
or
push
rol
rol
add
mov
ror
scas
pop
adc
test
cmps
jmp
mov
adc
or
icebp
bound
dec
sbb
and
retf
je
dec
mov
adc
and
or
sbb
imul
mov
cmp
add
shl
xchg
or
test
xor
fidiv
ins
movs
xchg
je
repnz
or
inc
mov
popa
(bad)
add
push
or
daa
pop
jno
or
or
jne
xor
mov
(bad)
push
or
dec
xchg
fst
xchg
mov
and
mov
repz
push
pop
add
mov
fsub
adc
aad
jne
jo
jg
and
jl
je
outs
mov
pop
xor
imul
sub
retf
and
jns
sub
adc
jge
leave
rol
push
inc
sbb
leave
aad
jmp
mov
cwde
dec
sbb
push
fmulp
add
js
push
popa
xlat
mov
pop
jmp
and
daa
push
add
and
and
leave
xor
adc
sbb
movs
add
mov
or
inc
es
push
int3
data16
pop
mov
jb
lea
daa
out
adc
sub
enter
mov
push
inc
cmps
aam
ret
xor
sub
inc
into
sbb
push
inc
cmp
scas
inc
and
or
fdiv
pop
xor
pushf
cmc
dec
lods
jne
ret
mov
int
mov
rcl
gs
push
push
rcl
and
push
cwd
inc
adc
and
add
std
jne
mov
dec
jne
(bad)
fadd
push
xchg
imul
xor
daa
pop
aam
fdivr
mov
sub
dec
aad
ins
pop
les
shr
ror
inc
sbb
push
xor
mov
pop
inc
js
shl
mov
clc
add
add
adc
mov
rcr
or
icebp
add
aam
ror
or
enter
push
add
add
add
stos
aaa
gs
or
movs
shl
pusha
push
into
add
push
add
xor
ds
jb
jmp
and
xor
or
sbb
cdq
adc
sub
push
sub
xchg
sub
and
pop
mov
mov
rcl
stc
push
push
push
dec
dec
ds
adc
or
sbb
les
sahf
inc
sbb
(bad)
gs
adc
cmp
jns
or
nop
mov
xchg
inc
xchg
sbb
(bad)
clc
aam
jge
push
pop
cmp
add
loope
rep
lods
sbb
push
mov
jg
mov
pop
(bad)
cmc
xchg
push
mov
push
cs
and
mov
fisubr
adc
add
push
cmp
movs
lods
int3
dec
and
jno
mov
push
xchg
cmps
test
stos
or
add
push
sbb
add
push
sbb
sbb
jg
adc
aam
dec
adc
outs
pop
(bad)
inc
leave
inc
fmul
push
lea
sti
push
fsub
add
aas
jl
test
jb
xor
xchg
lea
mov
mov
push
mov
(bad)
and
sub
aam
call
add
xchg
mov
push
fldpi
adc
mov
cmp
mov
ret
(bad)
cmc
pop
ret
stos
and
xchg
or
adc
movs
jg
outs
call
mov
pop
mov
add
enter
push
sar
pushf
or
xchg
sub
enter
aas
push
push
push
lock
std
cli
xchg
sbb
push
jle
mov
pop
sub
nop
hlt
loope
and
push
mov
pop
push
sub
push
jl
(bad)
and
push
cdq
push
icebp
sbb
bound
add
dec
adc
xor
and
adc
jmp
fsub
jp
xchg
push
pop
or
mov
jnp
idiv
test
fxch
push
ds
pop
and
xchg
push
jno
xchg
push
repz
cmp
stos
lock
inc
out
mov
out
push
dec
cmp
je
cwde
adc
add
pop
scas
sub
adc
pop
mov
add
add
jp
js
into
test
jecxz
add
pop
mov
ja
jle
xchg
add
lea
cmp
jne
cmp
aaa
iret
push
sbb
and
call
(bad)
dec
test
add
add
adc
or
push
jmp
ror
and
ret
jne
inc
dec
fs
mov
int
ins
cmp
cmp
hlt
pop
xchg
add
push
mov
rcr
xor
(bad)
(bad)
mov
xor
aam
aas
cmp
je
inc
add
cmp
jl
jmp
jge
cmp
mov
cmc
dec
push
add
or
mov
gs
sbb
fs
and
add
sbb
xor
lods
add
inc
adc
idiv
(bad)
jmp
sub
add
sbb
daa
cmp
cdq
push
je
mov
inc
pop
imul
das
mov
(bad)
sub
aam
add
mov
aam
mov
in
ficomp
call
push
sbb
ret
xchg
and
shr
ins
lea
and
test
std
and
inc
cmp
mov
cmc
pop
push
push
aaa
and
fcomp
sub
mov
je
lods
sti
jmp
xchg
or
fs
mov
xor
and
xchg
adc
add
add
ret
sub
push
cmp
add
cmc
fwait
nop
inc
mov
call
jge
lahf
test
iret
or
push
and
add
ror
inc
out
call
xchg
movs
jns
ins
mov
push
mov
in
pop
push
call
nop
div
loopne
or
fisttp
js
fnstcw
mov
idiv
cdq
in
xchg
or
mov
mov
pop
jb
xchg
and
jg
inc
inc
add
clc
adc
pop
and
push
cli
adc
add
cmovl
add
test
inc
inc
add
dec
mov
cmp
xchg
pop
or
shl
sub
or
and
mov
dec
stos
movs
pop
test
pusha
push
mov
xchg
ins
xchg
pop
jbe
mov
push
and
add
xor
test
jo
push
and
mov
lods
int3
and
add
jnp
adc
and
and
adc
adc
cmps
or
jl
adc
push
rcl
sub
push
shr
pop
add
inc
add
add
or
cmp
or
cmp
xor
push
or
pop
scas
jmp
push
xor
adc
sub
push
bnd
add
int
push
adc
dec
pop
and
or
sub
pop
or
pop
mov
(bad)
jecxz
xchg
push
jne
jb
xor
pusha
jne
pop
mov
fnstcw
mov
sub
mov
sbb
daa
add
adc
or
and
(bad)
fstp
fisubr
cmp
jne
cmp
jb
sbb
leave
cmp
mov
jae
cmp
(bad)
out
cli
jmp
xor
(bad)
lock
stos
add
ja
push
push
loopne
lock
or
pusha
in
sbb
aam
sub
(bad)
sub
adc
mov
ret
inc
or
in
cmp
inc
nop
int3
xor
outs
mov
add
add
das
dec
pop
push
add
cmp
jl
pop
ds
pusha
and
jle
cs
mov
mov
or
(bad)
mov
jl
call
add
mov
add
(bad)
mov
push
mov
(bad)
mov
inc
xor
mov
sub
or
out
inc
add
mov
add
mov
add
test
test
pop
ror
stos
xchg
lock
es
mov
mov
in
sub
jo
inc
mov
nop
mov
test
ins
dec
or
xchg
outs
ins
inc
(bad)
cmp
das
inc
fist
add
add
je
mov
into
inc
pop
add
lds
sbb
mov
ja
dec
jo
aas
sbb
xchg
push
add
cmp
push
and
and
sub
loopne
xor
inc
test
out
and
pop
xor
repz
mov
jmp
or
adc
xchg
inc
cld
inc
outs
test
xor
and
gs
icebp
dec
mov
lods
sbb
pop
jl
mov
ret
or
jo
dec
or
pusha
cld
xchg
test
and
or
adc
data16
push
jecxz
mov
ror
push
and
add
sbb
adc
xchg
cmp
or
and
dec
cmps
sub
arpl
adc
and
sbb
add
scas
sqrtps
or
jmp
adc
or
addr16
adc
xlat
jbe
cmp
mov
imul
scas
jecxz
enter
dec
sub
or
sbb
jmp
inc
and
mov
inc
lock
cwde
add
inc
es
inc
les
push
pop
push
mov
out
rol
or
cmp
leave
mov
je
lock
sbb
add
add
sub
adc
cmp
mov
mov
sbb
mov
loopne
pop
gs
jmp
add
xchg
icebp
imul
xchg
mov
cmp
cmp
(bad)
imul
cmps
test
popa
xchg
push
aad
mov
jge
xor
dec
pusha
in
push
dec
hlt
mov
adc
mov
mov
pop
je
mov
or
push
call
inc
push
adc
cmp
xor
dec
sahf
stos
adc
inc
pop
adc
jmp
xchg
mov
or
xor
add
cmp
in
xchg
les
dec
mov
mov
mov
dec
xchg
(bad)
add
xor
sbb
sti
adc
sub
cmp
out
jns
add
sub
add
cmp
das
sub
ret
cmp
push
xor
sub
in
sub
cmp
xchg
in
mov
test
rol
xchg
inc
sub
int3
push
xor
retf
sbb
add
push
push
nop
add
add
and
and
add
sub
dec
xor
xor
add
inc
cmp
push
push
nop
retf
inc
or
inc
push
test
pcmpgtb
mov
inc
add
push
mov
sbb
cmp
lea
popf
and
mov
cs
mov
fadd
nop
and
aam
fidivr
loopne
pop
add
dec
mov
or
xlat
dec
sbb
and
fsubr
outs
ja
icebp
push
mov
sbb
sahf
in
mov
mov
lahf
mov
ror
mov
pop
cmp
add
jo
dec
popf
lods
cs
mov
and
add
fs
inc
lea
loope
aas
push
cmp
mov
(bad)
sbb
mov
rcl
dec
call
mov
and
and
sbb
sbb
ja
setne
sub
(bad)
inc
fs
ror
and
inc
or
int
or
and
or
xor
sub
ror
and
sbb
add
add
inc
ror
or
aas
sub
mov
mov
adc
add
and
xor
clc
add
lods
push
lea
rcr
daa
std
inc
jmp
cmp
sbb
mov
loopne
daa
add
cmps
fs
xchg
sbb
sbb
add
push
jnp
jne
sbb
cmps
sbb
xchg
aam
or
or
dec
popa
adc
mov
ret
mov
pusha
clc
jne
push
and
sbb
xchg
cmps
push
lea
fsubp
sbb
xor
sbb
cmovs
inc
push
loopne
cmp
ret
adc
or
out
call
lods
pop
mov
sbb
add
je
or
cmps
push
sbb
xor
add
mov
in
or
fdivr
jge
dec
push
or
outs
and
xor
add
and
add
int
add
test
mov
in
dec
and
and
xchg
ins
mul
sub
xor
mov
out
jns
push
mov
lea
sub
sub
in
adc
pop
or
sbb
sbb
in
inc
push
cmp
dec
pop
mov
or
push
push
dec
pop
lods
sub
sub
cmp
(bad)
cli
pcmpeqw
push
push
test
pop
or
lods
fsubp
movs
xchg
cmp
jne
enter
ins
inc
call
std
mov
dec
jecxz
or
and
push
pop
jne
inc
xchg
push
mov
icebp
dec
xchg
shl
sub
adc
mov
mov
push
hlt
dec
mov
inc
ficom
push
hlt
or
aam
jns
mov
imul
sbb
cld
xor
mov
enter
push
(bad)
sbb
in
and
sbb
push
add
call
add
mov
push
and
cmp
sti
add
push
sahf
jmp
je
push
mov
cwde
stos
push
out
ins
inc
xchg
push
stos
adc
push
sti
pop
push
sub
add
sbb
push
or
and
fs
push
adc
scas
mov
clc
xor
test
or
or
jnp
xor
add
add
imul
mov
push
add
and
push
inc
cmp
sbb
sub
jmp
add
add
or
mov
test
xchg
cmp
push
call
push
mov
mov
sub
outs
lock
or
push
pop
mov
repz
cwde
mov
ss
inc
adc
sub
and
add
fisttp
mov
pushf
out
adc
mov
pop
jb
xchg
jg
aad
pushf
sar
push
jge
add
mov
xor
sbb
push
push
inc
fadd
les
sbb
fisttp
fild
sbb
je
mov
(bad)
dec
rcr
dec
or
jns
scas
cld
dec
fcom
lock
fst
mov
test
push
aaa
out
xchg
loopne
inc
inc
or
pop
in
push
pop
inc
push
aad
je
sub
or
ins
sub
push
pop
in
sar
mov
cmp
xor
or
cmp
xor
movs
xor
xor
cmp
psubsb
lds
nop
xor
xor
cmp
push
push
(bad)
sub
xor
sub
and
ret
xchg
mov
add
ret
push
jg
pop
das
mov
imul
ret
lahf
push
imul
out
cmp
adc
lods
mov
fmul
adc
push
mov
dec
hlt
or
xchg
xor
jo
or
adc
adc
and
dec
dec
push
dec
loop
inc
pop
xlat
fbld
adc
jno
rcr
pop
dec
in
pop
fs
jle
cmp
jmp
or
adc
xchg
aam
lahf
sbb
sti
jmp
mov
dec
xchg
add
lahf
inc
xchg
cmp
push
in
loop
fs
and
inc
test
adc
es
push
jl
bound
cmps
icebp
(bad)
fucomp
lea
push
popa
pop
add
das
push
lods
not
lock
sbb
xchg
jo
movs
cmp
and
dec
and
and
iret
push
dec
dec
or
pop
or
nop
les
sub
jo
or
and
and
fld
push
jl
je
adc
rol
xor
or
cmp
jns
xor
push
repnz
movups
movs
sbb
adc
and
xchg
data16
sub
int3
or
inc
push
ins
inc
test
and
(bad)
xchg
popa
cmp
stos
inc
sub
add
ror
jo
leave
push
cmps
add
mov
adc
popa
pop
adc
adc
adc
cdq
and
jle
add
hlt
or
adc
addr16
sub
sbb
push
nop
mov
xor
add
cmp
sbb
pop
inc
bound
jb
lock
jb
add
mov
jae
stos
inc
sbb
push
pop
xor
mov
aaa
pop
xchg
add
adc
retf
push
push
pop
push
pop
xor
and
pop
daa
ret
retf
pop
jbe
ret
pop
pop
xor
sbb
xchg
or
leave
pop
push
and
push
pop
mov
mov
mov
test
cmp
and
sub
fs
sub
les
xor
jl
and
add
push
adc
sub
add
sahf
clc
push
jne
pop
fld
or
xor
or
sub
fadd
adc
mov
sbb
cwde
mov
loope
enter
adc
dec
fst
cmp
dec
add
inc
mov
xchg
retf
inc
das
sub
fidivr
aad
cmp
sub
dec
or
sbb
push
mov
push
and
mov
sbb
xchg
test
inc
hlt
outs
cmp
fdivr
(bad)
call
and
push
mov
and
or
imul
rcl
jo
pop
sub
lock
outs
push
test
cld
movs
push
dec
popa
shl
lea
mov
inc
add
mov
mov
jge
js
jecxz
add
sti
sahf
dec
push
push
mov
inc
mov
and
mov
js
push
xor
mov
lss
pop
ret
jl
loopne
dec
jge
cmp
mov
rcr
sbb
inc
and
sub
sub
sub
dec
xor
sub
xor
xor
sub
mov
(bad)
sbb
push
mov
cmp
je
les
jmp
sbb
fsubr
pop
sub
adc
add
int3
push
jl
lock
pop
ins
inc
rcl
inc
jl
mov
call
cmp
mov
jne
push
jmp
sbb
scas
lea
sbb
jmp
ror
push
or
or
sbb
(bad)
ret
mov
dec
add
mov
jb
les
sub
aaa
dec
mov
cdq
cmp
loopne
add
outs
or
push
xchg
adc
add
mov
jmp
mov
jne
stos
mov
inc
xor
fwait
in
rol
or
sbb
or
cmps
es
pop
add
loopne
mov
iret
adc
rcl
push
stos
test
mov
or
stos
rcr
lds
sbb
test
add
push
dec
test
adc
mov
aas
inc
dec
push
mov
and
xor
push
cmp
or
push
xchg
rol
pinsrw
add
cmp
xor
test
pop
xor
sbb
ret
pop
sbb
xor
cmp
(bad)
xor
and
xor
ret
add
and
cdq
cli
pop
loopne
mov
dec
add
sub
cld
(bad)
push
jo
fdivr
push
stc
cld
jne
or
test
mov
jl
or
test
int3
adc
into
aam
and
sub
cmps
sar
inc
mov
je
or
mov
cli
mov
nop
mov
in
mov
icebp
cdq
dec
jmp
or
out
xlat
cli
inc
xchg
jno
or
add
pop
add
addr16
and
push
fs
pop
mov
loopne
ja
sti
dec
or
or
sub
sar
jle
test
and
les
dec
mov
adc
push
test
sbb
jns
or
cmp
mov
push
add
lds
ss
pop
fs
push
sahf
dec
jns
add
test
adc
addr16
xchg
inc
inc
and
mov
cmp
dec
xor
xor
adc
push
pop
xchg
and
jb
pop
add
and
push
bound
fdivrp
cld
jle
movs
sub
mov
pushf
xor
nop
or
ja
fs
js
fs
dec
adc
aas
pop
leave
in
sub
cmp
or
pusha
jg
xchg
dec
es
pop
je
sub
add
xor
cmps
ins
lds
or
push
push
fild
mov
lds
cmc
mov
sbb
popa
mov
jb
sub
popa
mov
add
cmp
inc
cmp
mov
sbb
or
ins
adc
es
jo
sub
nop
dec
dec
or
jl
dec
adc
pop
xchg
cmp
add
push
dec
(bad)
sbb
movs
mov
add
inc
cdq
stc
push
ins
add
jo
pop
jne
or
test
inc
loop
movs
test
or
inc
cmp
mov
fst
fisub
and
ret
das
add
jo
sbb
nop
jb
test
adc
dec
cdq
nop
and
dec
pop
imul
mov
pop
cmps
dec
out
dec
cld
icebp
ins
inc
dec
enter
push
pop
sar
mov
cs
ret
xchg
mov
xor
je
lds
xor
push
push
ret
xchg
movs
and
or
stc
out
inc
mov
fs
arpl
or
and
add
les
inc
dec
push
fucom
or
dec
inc
and
and
loopne
cmps
inc
inc
add
aas
cmps
or
repz
push
add
rol
movs
fs
mov
mov
or
je
or
or
cmc
and
add
xchg
ds
adc
push
inc
pop
cmp
xor
(bad)
pushf
xor
sub
push
add
arpl
jl
sub
pop
sbb
scas
movs
mov
push
sbb
pop
sar
push
add
add
stos
imul
push
push
test
les
ins
fldcw
jb
jmp
movs
test
jle
mov
ficomp
push
sbb
sub
leave
fisub
outs
xchg
ss
jmp
fnsave
push
xchg
pusha
add
cmp
scas
pushf
mov
icebp
inc
dec
xor
pop
add
mov
pop
jmp
and
xor
push
pop
ss
mov
inc
push
ret
xor
popa
xor
std
stos
xor
mov
sbb
and
xor
sub
pop
call
push
or
dec
push
xchg
ins
ficomp
fs
inc
cs
sbb
adc
and
or
push
inc
fs
aam
or
push
and
push
ret
sar
push
push
fisttp
(bad)
push
dec
jbe
ss
ret
or
inc
jle
hlt
push
fcomp
lods
add
adc
inc
jns
test
ds
mov
arpl
or
mov
pusha
mov
ins
pop
jb
or
cmp
cmp
push
mov
add
fidivr
mov
inc
mov
and
js
ins
and
push
fidiv
ss
jo
(bad)
jp
xor
push
xor
push
dec
jb
mov
rol
mov
hlt
sbb
sub
sub
arpl
(bad)
and
ret
je
adc
sub
inc
loopne
cmp
je
bound
cmp
dec
jmp
inc
es
les
adc
enter
sub
inc
shl
ins
test
cld
xchg
sbb
rcl
xchg
mov
arpl
xlat
jb
scas
fsubr
sar
in
push
lds
pop
push
sub
sar
sbb
mov
stos
and
lock
callw
sbb
push
fldenv
xchg
(bad)
mov
lods
mov
push
leave
xchg
adc
push
cmp
pop
or
cmps
xchg
mov
aaa
and
lea
sbb
fild
and
adc
add
adc
or
add
add
pop
adc
(bad)
aaa
loope
stos
test
and
ret
sub
xchg
and
xor
dec
sub
sbb
jo
or
adc
dec
adc
sbb
push
leave
or
pop
mov
sbb
push
ja
and
jmp
cs
sbb
movs
das
pop
cmp
push
pop
mov
and
aam
mov
fst
dec
add
aaa
jge
mov
push
inc
add
pop
dec
jmp
jl
push
push
sub
sbb
xor
test
jne
mov
ret
push
push
sbb
mov
inc
dec
push
dec
fnstenv
add
mov
mov
pop
ret
dec
outs
adc
sbb
in
push
mov
push
les
adc
(bad)
aam
cld
adc
(bad)
mov
imul
(bad)
mov
push
push
addr16
adc
push
sub
add
dec
push
sub
nop
sbb
daa
adc
es
mov
cs
or
and
ja
mov
dec
cmp
jae
mov
scas
inc
cmp
ds
lock
sbb
adc
test
sub
mov
ds
inc
jno
add
or
push
and
push
cdq
rol
cdq
les
(bad)
and
push
pop
adc
in
pop
pop
add
and
lds
push
add
mov
mov
adc
aam
or
js
repnz
lea
sbb
jl
clc
mov
ficom
xchg
inc
push
mov
rcl
(bad)
mov
sbb
outs
nop
test
lods
dec
popa
test
lahf
ret
(bad)
xor
mov
or
push
in
dec
and
cmp
jp
mov
xor
int3
outs
jge
jno
shl
add
mov
outs
arpl
push
cmp
popa
jo
mov
mov
call
shr
pusha
xor
ret
pop
add
pop
aaa
gs
movs
sub
rol
je
and
inc
push
data16
fwait
les
lahf
jg
push
gs
(bad)
pop
(bad)
int3
shl
inc
cmp
enter
mov
or
sub
inc
jle
(bad)
and
xor
lahf
inc
dec
pop
retf
je
fadd
add
sub
xor
mov
retf
sbb
dec
mov
mov
cmp
jae
out
and
sub
pop
mov
ja
out
add
lahf
cmp
int
push
inc
jae
loopne
mov
sbb
push
mov
ins
push
lea
xor
psrlw
push
mov
mov
bt
push
inc
mov
sub
cmc
inc
mov
jg
jl
adc
add
and
popf
cmp
sub
pop
or
mov
jnp
and
(bad)
or
outs
cmp
jg
sub
call
dec
dec
push
mov
arpl
add
pusha
push
ja
fnsave
inc
jo
add
sub
jne
pop
jl
xchg
mov
xor
push
cmp
add
and
sub
and
faddp
lahf
adc
mov
ror
test
dec
dec
repz
pop
mov
inc
pop
js
outs
sbb
or
ret
xchg
and
or
inc
sets
or
dec
rol
or
or
mov
imul
inc
sbb
js
movs
sbb
or
push
dec
call
es
fs
ret
push
inc
inc
rol
pop
cwde
imul
dec
push
or
or
add
add
and
push
adc
(bad)
leave
sub
aas
mov
or
xchg
pop
ins
inc
adc
jp
adc
xor
push
or
pop
inc
cwde
ins
sar
add
xchg
outs
inc
enter
add
cmp
(bad)
dec
inc
push
fnstsw
jns
sub
adc
jno
jb
ds
ins
popa
or
or
je
int3
rcl
xchg
cmp
xor
cmp
pushf
dec
ins
call
adc
mov
jne
jne
mov
mov
add
imul
jg
test
xchg
inc
xor
pop
dec
cld
jo
cmp
bound
mov
outs
xor
or
lea
push
int3
ds
cmc
cmps
xchg
repnz
sti
jle
or
pop
xchg
sub
hlt
jl
jmp
std
push
aaa
jo
xchg
xor
xor
ins
add
shl
movs
ret
mov
cmp
pop
retf
push
call
dec
sbb
or
jno
sub
popa
mov
xor
adc
adc
lods
es
cdq
in
jb
adc
fstp
add
vmread
inc
es
xor
xchg
inc
pcmpeqb
adc
mov
and
inc
leave
test
mov
and
xor
cmps
push
cs
inc
jne
xlat
sub
ret
popa
xor
and
xchg
mov
retf
mov
and
rcl
mov
pop
sub
lods
das
add
and
in
sub
scas
xor
adc
pop
sub
or
arpl
cwde
rcr
fs
pop
cwde
mov
lea
add
pop
cmp
pop
cmp
push
cmp
adc
or
dec
call
fisub
inc
not
cmp
inc
mov
xor
sub
js
(bad)
(bad)
jne
lea
sbb
lock
sbb
xor
sbb
xchg
adc
icebp
push
sbb
mov
jmp
sbb
dec
and
ins
inc
sub
jle
push
jl
push
sbb
mov
pop
jo
pushf
jbe
rcr
mov
outs
pop
sbb
push
adc
rol
sub
sbb
push
xor
inc
movs
sbb
xor
xchg
xor
test
mov
cs
mul
(bad)
mov
lea
add
inc
mov
lods
lsl
add
mov
nop
(bad)
cmc
jp
add
pop
add
sub
(bad)
jb
pusha
cmp
adc
sub
push
dec
dec
dec
jno
mov
push
pushf
and
and
outs
push
pop
cmp
ret
mov
sbb
sub
mov
pop
pop
add
xor
cmp
inc
js
retf
add
sbb
sbb
xor
mov
dec
fs
fidivr
in
dec
jnp
sbb
fs
push
push
sbb
(bad)
or
test
and
dec
loope
inc
lods
dec
pop
jp
push
jo
pop
lock
je
push
das
pop
adc
sar
sti
push
sbb
and
mov
mov
adc
and
sub
es
pop
(bad)
stc
jmp
push
and
inc
aas
das
lea
retf
retf
sbb
mov
sub
test
pop
add
mov
and
ret
or
xor
rcl
mov
and
outs
movs
ret
out
mov
dec
test
loopne
sti
shr
and
xchg
jl
jne
pop
adc
inc
dec
xchg
mov
add
sub
aas
fsub
nop
add
add
xchg
cmps
xchg
fld
and
inc
call
or
pop
push
add
stos
adc
mov
or
ss
or
mov
push
int
mov
dec
inc
pop
cmc
mov
pushf
pop
jg
mov
repz
sub
loopne
mov
pop
je
mov
inc
out
out
cdq
out
lea
add
cmc
je
fisubr
dec
sub
fwait
and
jmp
rol
push
pop
loopne
dec
ret
fidiv
mov
mov
cmps
push
mov
cmp
xchg
push
hlt
jns
sbb
iret
es
add
cmp
mov
or
inc
lahf
adc
scas
xor
push
out
fisttp
xor
nop
inc
push
pop
mov
fbld
dec
push
in
push
sbb
test
test
push
into
rcl
imul
ins
jno
jno
loope
xchg
jmp
push
push
xchg
inc
push
push
adc
xchg
in
and
jns
sub
sbb
mov
push
push
jb
and
push
fs
add
adc
mov
add
(bad)
std
and
cmc
jg
dec
movs
das
dec
or
inc
inc
inc
adc
jo
ret
cld
push
je
cmp
imul
mov
pushf
inc
(bad)
xor
sbb
retf
pop
pop
push
jmp
(bad)
adc
mov
xchg
es
xor
pop
or
sbb
icebp
mov
aad
mov
ret
sub
je
dec
mov
aad
sub
inc
mov
sub
mov
stos
popa
mov
mov
sbb
lahf
xor
pusha
lods
xchg
or
add
ds
into
or
pop
inc
cmp
push
sar
loop
lods
inc
jae
jno
sub
sub
xchg
sub
jne
test
or
sbb
retf
push
and
inc
adc
les
pop
daa
stos
push
dec
xor
dec
mov
fcom
cmp
push
push
and
pop
jb
dec
push
fwait
test
mov
sub
sub
add
jmp
js
sub
(bad)
scas
out
jo
leave
ror
ins
add
push
inc
jle
into
dec
inc
push
leave
xor
push
mov
push
inc
lods
movs
push
xchg
cmpxchg
fwait
adc
in
lahf
dec
push
lds
nop
mov
ficomp
dec
movs
and
xor
xchg
adc
adc
rol
ret
inc
sub
push
lods
xor
cmp
into
xchg
adc
add
inc
add
mov
mov
jno
and
mov
sbb
push
mov
outs
sub
dec
or
mov
add
add
push
jb
add
iret
xor
pop
and
xor
sbb
jne
test
not
mov
cmp
or
xor
adc
inc
cli
push
hlt
je
push
call
xor
ret
adc
add
aaa
jb
push
add
xor
sub
aad
pop
nop
iret
add
xor
mov
and
push
or
or
pusha
jne
pop
sbb
add
and
pop
adc
xor
dec
adc
rol
push
adc
int
sbb
sub
outs
iret
outs
adc
lods
rol
push
loop
add
inc
and
sub
mov
add
xor
push
or
xor
sbb
jne
test
and
or
push
or
in
ror
pop
xchg
jp
inc
push
fs
mov
cmp
sbb
add
and
or
call
scas
mov
shr
xor
and
push
adc
inc
mov
add
jmp
adc
psubsw
adc
add
sbb
stc
repz
sub
test
in
mov
inc
jle
icebp
retf
sub
add
add
ja
leave
cmp
(bad)
dec
fist
in
xchg
or
dec
push
adc
add
adc
or
inc
pop
and
data16
sub
push
adc
sbb
push
pop
mov
nop
pop
lahf
sub
sub
adc
adc
adc
push
fs
and
add
pop
push
and
or
push
sbb
sbb
mov
adc
pop
stos
and
popa
cmps
mov
mov
jae
xchg
in
dec
adc
pop
lock
scas
and
jne
mov
add
sbb
call
dec
test
xchg
jb
gs
mov
sbb
jne
and
xchg
sahf
sbb
push
xor
inc
xor
movs
loope
into
jne
inc
dec
cmp
into
and
adc
mov
arpl
xchg
inc
repnz
inc
pop
push
mov
aad
xchg
xchg
and
movs
push
inc
or
ror
push
add
dec
pusha
and
int
xor
pop
xor
ds
dec
sub
jmp
int3
rcr
ins
out
pop
and
mov
push
scas
xchg
inc
cmps
adc
xchg
cmp
mov
daa
popf
out
sub
shl
and
pop
and
outs
retf
popa
add
add
call
or
push
add
jecxz
dec
imul
call
adc
and
xor
fld
adc
jne
add
inc
push
push
sub
mov
inc
test
mov
inc
fs
int
enter
call
and
call
cwde
push
push
push
push
xchg
push
dec
and
lds
pop
sub
and
imul
adc
rol
push
ret
mov
loope
cmp
jne
test
icebp
push
das
add
gs
add
shl
dec
push
add
dec
push
dec
push
pop
push
add
mov
mov
mov
mov
push
add
push
je
cmp
or
dec
test
xchg
sbb
test
aam
adc
pop
mov
icebp
push
daa
loopne
fist
pusha
pop
mov
and
test
imul
dec
retf
dec
mov
aam
cs
movs
xchg
xor
and
je
dec
in
push
mov
or
fld
and
movs
cmps
hlt
xchg
test
loope
movs
in
or
jmp
aam
shl
pop
inc
pop
ins
leave
leave
sub
mov
nop
idiv
or
sub
jmp
iret
cmp
or
cmp
xchg
inc
or
inc
mov
lods
shl
scas
cmp
inc
mov
or
adc
or
fild
push
or
jae
push
push
push
or
pop
test
push
inc
in
sbb
push
ins
into
cmp
xchg
mov
mov
push
jp
arpl
inc
cmp
push
dec
cmp
pop
scas
call
push
and
stos
in
dec
or
or
in
dec
or
pop
test
sbb
sbb
dec
mov
and
adc
adc
fdivr
sub
adc
mov
adc
adc
aaa
push
lds
dec
(bad)
sub
dec
adc
loop
sbb
aam
ins
lds
repnz
enter
retf
pop
fistp
es
rcr
xchg
push
fs
dec
adc
sub
jns
cmp
movs
xchg
push
push
xor
or
jns
jmp
call
sbb
xchg
fcomp
add
push
mov
xchg
sbb
sbb
xchg
or
mov
add
and
and
jb
add
and
popa
inc
and
pop
jle
and
add
and
and
xchg
and
or
jns
inc
sahf
es
rol
cdq
add
mov
sub
sub
sub
jmp
xchg
les
enter
sub
push
push
jo
mov
loopne
dec
cs
movs
xor
jae
jmp
pop
add
push
mov
and
fisttp
nop
std
jge
cs
inc
sub
loope
pop
jne
sbb
mov
sub
adc
mov
push
pop
mov
mov
xor
lods
add
lea
mov
add
dec
ins
ins
shr
sbb
adc
mov
mov
sub
or
ret
pop
sbb
or
push
(bad)
fsubr
xchg
inc
sbb
inc
inc
adc
xchg
xor
(bad)
adc
pop
pop
xor
pop
xor
push
or
pop
sti
fdivr
loopne
mov
js
lea
push
push
pmulhuw
dec
add
nop
jo
addr16
inc
xor
inc
hlt
sub
arpl
cmp
adc
xchg
sub
mov
ss
(bad)
sbb
pop
fldcw
rcl
test
pop
pop
lods
xor
test
inc
jmp
push
aaa
or
sub
pusha
jmp
es
cmp
sbb
inc
pop
aad
popa
retf
sahf
inc
shr
(bad)
adc
inc
inc
mov
lea
inc
cmp
dec
or
xchg
xchg
jns
inc
mov
in
ds
jmp
arpl
aas
data16
(bad)
cmp
fcom
cld
cld
mov
repz
add
inc
arpl
pusha
(bad)
inc
push
adc
or
inc
rol
shl
imul
cmps
dec
push
xchg
push
sbb
or
out
adc
push
push
xor
adc
call
add
and
stos
and
out
add
cmp
xor
repnz
inc
rol
iret
add
cwde
aas
pushf
dec
cmp
movs
cmp
cli
dec
cmp
push
ror
add
add
cmp
cmp
fld
lods
xchg
icebp
and
cwde
lea
pop
imul
mov
fbstp
and
or
pop
scas
rcr
add
(bad)
mov
mov
dec
shr
je
je
add
test
and
push
push
clc
pop
rol
and
or
test
ins
add
sub
inc
pop
push
and
push
pop
inc
pop
jmp
leave
add
adc
in
xchg
pusha
cmp
mov
dec
adc
push
xor
imul
in
push
cmp
popa
mov
or
mov
mov
cmp
test
sub
mov
test
sbb
dec
cmp
lock
dec
inc
inc
add
sti
stos
or
aas
cmp
mov
mov
mov
sar
dec
cmp
sbb
dec
test
lock
xor
aam
ins
fld
dec
lds
punpckldq
lock
dec
cmps
jl
dec
xchg
sub
jns
add
test
or
popf
and
adc
push
nop
dec
dec
inc
sub
and
ds
adc
in
adc
dec
cmp
(bad)
pop
icebp
dec
int
push
mov
dec
add
xchg
mov
ins
jmp
inc
jmp
push
frndint
pusha
cmp
add
inc
jge
lds
psllw
aaa
sub
bound
and
dec
out
jae
or
push
xchg
xor
enter
inc
pop
pop
(bad)
rcr
push
mov
jns
sbb
add
shl
dec
mov
and
sub
dec
fwait
test
push
pop
add
and
leave
pop
sub
or
adc
shr
pop
lahf
push
cmps
cmp
pop
push
mov
sbb
pusha
adc
pop
dec
(bad)
nop
fwait
js
arpl
aas
or
xchg
jp
in
push
mov
sbb
(bad)
jb
sbb
pushf
js
rcl
enter
je
pop
imul
test
cmps
fwait
add
cmp
mov
cs
pop
pop
xor
aaa
and
push
sub
or
or
xor
xchg
data16
iret
push
dec
jns
daa
(bad)
cmp
iret
pop
pop
pusha
push
xchg
pop
pop
sub
mov
mov
sahf
xchg
fistp
sbb
xor
push
mov
pop
jmp
mov
push
push
sbb
out
push
pop
int3
shr
mov
sti
jecxz
mov
popa
and
xchg
add
das
pop
iret
mov
mov
inc
lock
mov
ja
inc
xor
jo
test
pop
dec
pop
stos
pop
ja
or
fisub
je
push
mov
dec
ins
stos
in
dec
adc
in
mov
aad
pushf
test
dec
xor
push
adc
add
xchg
or
sub
add
les
inc
dec
push
dec
and
sub
mov
pusha
rol
test
pop
xchg
int3
sub
enter
adc
xchg
and
sub
jl
xchg
or
mov
adc
cmp
test
test
sub
test
jo
dec
add
sub
es
xchg
sbb
inc
adc
into
adc
add
xchg
hlt
imul
jae
loopne
mov
cmp
xchg
hlt
mov
mov
jb
mov
jae
stos
bound
mov
mov
mov
mov
pop
sub
je
sub
adc
xchg
jmp
push
dec
pop
or
and
dec
add
movs
je
jbe
pop
pusha
das
loope
xor
sbb
sbb
or
push
test
rcr
xchg
cmp
and
adc
jno
xor
out
je
ror
or
(bad)
gs
xor
jle
jmp
cmp
or
and
and
adc
jne
jo
push
and
adc
mov
cli
dec
jmp
clc
dec
loop
js
jns
test
xchg
jb
sub
daa
push
mov
inc
pop
push
jbe
pop
jg
or
dec
sahf
add
pop
(bad)
dec
shl
jns
sub
fiadd
movs
add
sub
adc
mov
mov
loopne
mov
mov
jb
repz
enter
add
inc
jbe
dec
pop
(bad)
xchg
sbb
shl
mov
cmp
mov
dec
pop
pop
dec
xchg
jecxz
add
sbb
fwait
bound
out
xchg
adc
xor
sbb
mov
stos
movs
(bad)
cmp
jne
imul
or
jo
das
sub
mov
cmp
add
cmp
inc
add
dec
add
lds
push
inc
add
xor
and
xchg
dec
sub
pusha
push
loop
sbb
and
pusha
push
imul
mov
mov
add
push
mov
xchg
pushf
dec
jecxz
pop
mov
or
cmp
nop
inc
inc
adc
or
pop
xor
and
inc
sbb
mov
adc
mov
push
inc
out
dec
aas
add
dec
test
xchg
retf
or
or
sub
pushf
nop
add
add
movs
adc
inc
adc
adc
dec
mov
fsub
pop
adc
das
lods
dec
rcr
retf
jnp
leave
dec
leave
push
(bad)
sbb
ins
push
add
adc
and
xchg
mov
(bad)
mov
inc
mov
repnz
(bad)
adc
movs
xor
inc
call
add
aas
or
in
out
push
inc
cmp
jae
mov
add
inc
inc
xchg
xor
out
arpl
std
add
push
sbb
std
jl
in
ret
add
mov
push
loope
(bad)
call
xor
and
daa
pop
push
imul
mov
jnp
mul
imul
jbe
mov
lods
ret
icebp
add
adc
or
sar
(bad)
fidiv
sub
pusha
push
dec
jmp
fnstcw
sub
mov
xchg
push
js
add
rcr
dec
or
cld
push
outs
ins
push
in
sti
add
inc
sbb
jnp
and
add
sub
mov
or
push
mov
jg
adc
rol
xor
(bad)
and
out
pop
dec
add
test
push
aam
clc
dec
mov
fdiv
push
in
cs
add
int
or
jle
dec
pop
ret
or
mov
push
test
jo
imul
lea
mov
mov
add
cmp
mov
dec
and
sbb
inc
jge
pop
pop
cmp
xor
pop
pop
pusha
fld
and
adc
fs
ss
mov
ins
fstp
sub
mov
adc
pop
add
mov
pop
or
(bad)
lods
sub
and
adc
mov
mov
sub
or
sub
ficomp
(bad)
aas
push
ss
mov
adc
add
test
fcomp
pop
retf
addr16
inc
push
mov
retf
ins
sahf
add
(bad)
mov
add
les
mov
xchg
cs
lods
mov
ins
add
push
lods
cmp
xlat
nop
out
ins
sub
push
ins
push
xchg
ja
ins
mov
push
or
mov
jmp
adc
pop
dec
sbb
rol
and
jl
cld
sbb
push
mov
mov
cmp
xchg
loopne
cmovbe
add
xor
out
push
pop
push
mov
lock
mov
sub
mov
test
push
fistp
cmp
nop
ss
push
add
(bad)
cmp
mov
jge
les
cdq
mov
sbb
xchg
mov
jle
out
inc
mov
test
dec
int3
add
dec
cmp
mov
and
(bad)
fdiv
outs
loope
cld
mov
(bad)
test
test
movs
pop
test
aaa
pop
dec
fwait
push
int3
push
outs
jb
mov
inc
mov
or
mov
nop
inc
sbb
xor
test
xchg
xor
mov
add
dec
push
dec
daa
mov
xchg
lods
mov
imul
mov
mov
jno
ins
movs
mov
sbb
mov
inc
lods
push
(bad)
js
daa
mov
js
mov
shl
push
les
or
movs
das
or
inc
lea
call
sti
adc
or
test
inc
add
shl
dec
in
inc
or
and
iret
pusha
xchg
in
pop
dec
pop
push
sbb
fadd
lods
inc
loopne
mov
push
jp
dec
sbb
add
arpl
bound
or
mov
jo
aas
add
mov
(bad)
jmp
pusha
iret
push
jne
cmp
je
cmp
je
cmp
je
cmp
push
cmp
or
inc
cmp
jo
dec
bound
adc
push
xchg
mov
dec
hlt
jne
inc
test
inc
xchg
add
ret
pop
daa
mov
cmp
sbb
stos
mov
test
dec
fisttp
movs
arpl
data16
jo
push
dec
call
cs
and
sub
add
pop
cmps
sbb
in
cmp
repz
aam
mov
rol
sbb
push
adc
test
stos
mov
mov
shr
pushf
mov
and
imul
test
test
and
pop
ja
dec
in
push
cmp
ja
jmp
mov
cmp
icebp
pusha
inc
xchg
or
sahf
nop
push
lock
and
mov
push
les
inc
sbb
aam
retf
sbb
sub
dec
es
aam
loopne
add
aam
in
inc
or
inc
mov
xchg
jle
int3
or
pusha
pushf
push
cs
in
dec
xor
push
sti
mov
clc
arpl
int
fcomp
(bad)
pop
and
pop
dec
sbb
cmp
or
adc
or
fistp
mov
mov
xchg
test
aas
pop
imul
inc
sbb
shl
test
xchg
push
sub
dec
push
push
and
and
sub
push
enter
jl
or
int
mov
cmp
and
fs
ret
pop
or
gs
and
pop
inc
mov
popa
adc
fwait
push
js
add
add
inc
fisub
outs
push
mov
mov
stc
inc
sub
adc
jp
jo
inc
cmps
(bad)
movs
jb
cs
or
aaa
lods
pop
sub
xchg
jne
mov
dec
jp
imul
and
xchg
mov
loopne
jecxz
cmp
mov
push
push
daa
inc
test
movs
dec
(bad)
in
mov
sbb
popf
pop
cmp
fwait
out
adc
and
les
mov
mov
(bad)
cli
dec
sub
or
loop
js
fstp
cmp
inc
popf
sbb
xlat
push
aas
outs
push
mov
bound
adc
xor
xor
adc
push
dec
xchg
inc
mov
inc
sub
mov
push
call
xchg
pop
mov
add
in
mov
clc
les
push
inc
mov
sbb
mov
aam
call
xchg
inc
aam
mov
inc
rcl
push
pop
xchg
jl
inc
sub
mov
sub
pop
and
shl
mov
mov
aaa
add
jns
or
mov
div
cmp
jge
test
es
sub
jge
in
mov
scas
inc
setge
icebp
jg
inc
mov
add
and
mov
fwait
mov
cmps
adc
mov
out
push
call
mov
jne
cmp
je
mov
scas
mov
in
jne
dec
fcomp
mov
ins
adc
jle
xor
mov
xchg
jmp
jnp
jbe
shr
cld
jbe
cmp
xor
xor
pop
or
and
and
push
sbb
jno
sbb
sti
imul
movs
pusha
movs
dec
pushf
mov
adc
cwde
jbe
hlt
cmp
mov
outs
add
pop
mov
inc
add
lods
and
call
sbb
add
clc
jnp
lods
(bad)
dec
xchg
pop
cwde
mov
xor
dec
mov
aas
in
xor
ret
jne
sub
push
jl
stc
jns
out
push
rcl
mov
inc
push
test
mov
call
dec
dec
cmp
push
jmp
ins
mov
sub
push
sbb
aas
out
ret
and
and
lahf
inc
rcl
sbb
call
mov
mov
in
cmps
nop
or
xchg
fstp
inc
or
add
pushf
push
outs
pop
xchg
and
sub
pop
mov
stos
add
int3
mov
loopne
mov
sbb
push
fs
fcom
or
push
mov
call
pop
push
add
mov
inc
scas
ss
cmp
(bad)
push
les
inc
inc
cmps
or
cli
pop
pop
and
popa
test
adc
add
aas
fadd
ret
mov
jbe
fcom
fadd
jmp
push
(bad)
dec
nop
ins
inc
repz
xchg
icebp
sti
push
cmps
out
sub
inc
sbb
pop
cmp
adc
je
add
cmp
xor
cmp
xchg
mov
xor
pusha
mov
push
adc
sbb
adc
push
sub
push
jl
add
sqrtps
(bad)
sub
sti
push
xchg
inc
into
inc
sub
sbb
movhlps
or
stc
icebp
fcom
stc
push
or
popf
jbe
ins
pushf
loop
ret
movs
pop
adc
leave
mov
loope
or
mov
cmp
call
jg
cmp
jne
cmp
jne
int3
jns
push
sbb
je
and
or
add
push
push
add
push
xor
or
in
add
dec
adc
and
(bad)
adc
or
cmps
leave
arpl
pop
inc
or
add
ss
xchg
xchg
call
cli
push
jae
jmp
les
lahf
and
jmp
mul
(bad)
js
(bad)
jae
rcr
inc
mov
inc
(bad)
mov
dec
addr16
outs
imul
pop
jo
js
inc
scas
mov
cmps
xchg
mov
ror
dec
jp
scas
test
addr16
push
pop
sub
cmp
add
ret
cli
add
enter
dec
out
cmp
pusha
and
pop
cmp
bound
adc
push
xchg
xchg
ins
or
push
inc
or
je
stos
mov
sbb
sub
mov
inc
push
stc
data16
pop
jnp
fadd
mov
jo
inc
mov
mov
ret
push
(bad)
adc
lea
sar
sbb
sbb
push
sub
push
push
push
movs
adc
inc
adc
sbb
in
push
inc
add
mov
nop
rcl
ins
sbb
and
jl
imul
add
inc
lea
dec
call
or
jmp
dec
add
mov
mov
push
jbe
je
mov
inc
cmp
ins
jns
outs
inc
add
inc
shr
repz
jl
loopne
and
outs
sbb
jae
push
cmp
jp
inc
dec
add
sbb
cwde
push
inc
repz
cmps
mov
ror
push
movs
rol
sub
dec
cmp
add
dec
mov
lock
dec
and
xchg
push
cmp
push
pop
addr16
arpl
clc
jle
mov
jb
cmp
psubsb
cdq
add
iret
mov
or
test
sub
clc
jo
and
jnp
sbb
shr
or
pop
adc
mov
cmp
shl
sub
sti
lahf
push
movs
das
sub
xlat
fsubr
jns
loop
aas
xor
cmp
jne
test
je
mov
cmp
dec
mov
add
sbb
or
outs
sbb
pop
add
or
aad
jne
rcl
mov
sub
hlt
jg
mov
pushf
cli
pop
or
or
(bad)
sub
das
pop
sub
adc
dec
xchg
mov
cmp
push
add
(bad)
jae
popf
mov
ret
or
aaa
in
in
dec
pop
xor
jne
add
mov
mov
push
push
repz
stos
jbe
or
add
daa
pusha
pop
jg
clc
mov
cmps
mov
inc
test
stos
inc
xor
sub
add
pop
into
ror
adc
sbb
and
mov
bound
xchg
out
and
arpl
dec
jo
add
movs
add
mov
add
or
loopne
pop
pop
add
pop
(bad)
lahf
and
cmp
sbb
sbb
in
mov
mov
psubq
and
pop
sub
in
syscall
dec
mov
jmp
push
add
inc
js
movs
mov
in
add
push
xchg
aam
or
test
test
inc
mov
movs
push
fs
adc
add
xor
(bad)
call
xor
xchg
jns
xchg
pop
inc
xor
pop
and
or
jmp
lea
push
fimul
imul
pop
mov
xor
add
test
enter
mov
dec
sbb
dec
push
push
push
mov
ret
dec
inc
cmp
or
cmps
dec
push
add
xchg
cli
cmp
jle
push
mov
cmp
sub
sbb
(bad)
cli
imul
xor
mov
adc
xchg
push
js
js
out
mov
mov
add
popa
or
gs
bound
pop
nop
lods
push
pop
sti
sub
nop
retf
sub
push
mov
add
and
das
xor
dec
xchg
jl
add
in
test
inc
pop
mov
stos
test
pop
inc
inc
adc
ret
push
and
imul
sbb
imul
(bad)
push
add
push
sbb
es
add
inc
sub
test
inc
push
xor
lds
daa
xor
jb
(bad)
xor
sub
movs
adc
movs
das
ror
shr
or
mov
inc
stos
movs
sub
dec
or
int
repnz
sbb
push
idiv
pop
dec
jne
dec
push
jne
cmp
jb
sub
jmp
push
clc
sub
push
pop
dec
pop
cmp
push
setl
movzx
lods
test
mov
inc
jl
push
push
mov
lock
pop
loopne
ret
(bad)
loope
push
sbb
inc
push
movs
lods
sahf
push
mov
and
pcmpgtd
adc
cmp
push
adc
jg
mov
out
push
push
push
shr
ret
test
inc
push
pusha
xchg
push
push
(bad)
or
test
adc
cmp
mov
test
enter
jmp
sbb
adc
aas
mov
jno
add
dec
push
dec
sbb
sub
or
inc
add
mov
cmp
std
sbb
and
aas
sbb
sar
pop
push
dec
or
xor
fsubr
inc
dec
daa
push
cmp
pop
xor
cmc
cmp
je
sub
add
push
inc
je
add
mov
dec
cwde
in
sbb
xchg
data16
pusha
(bad)
adc
mov
push
mov
jno
rol
and
and
lods
mov
das
adc
and
push
push
push
shl
sar
clc
sbb
ror
xor
cmp
and
mov
sbb
jb
clc
dec
or
test
xchg
xchg
das
pop
sbb
es
leave
and
cmp
inc
add
imul
sbb
sub
enter
lds
imul
or
mov
popa
mov
add
mov
inc
sbb
aam
push
ror
stos
jg
bound
push
push
(bad)
mov
je
sbb
lods
movs
and
xchg
or
nop
sbb
dec
inc
jb
xchg
xor
adc
and
into
mov
lods
push
inc
imul
adc
sub
mov
sub
cmp
mov
lods
mov
jl
push
cmp
cs
inc
cs
pop
imul
jle
enter
xor
retf
mov
add
push
xchg
movups
jp
sbb
fidivr
hlt
call
and
xor
mul
nop
pop
sbb
add
and
test
fs
xor
add
add
push
call
jbe
adc
loop
mov
jne
add
push
push
add
dec
adc
mov
sbb
pop
push
call
mov
xchg
sbb
sbb
outs
or
sub
adc
jno
and
mov
popf
mov
add
enter
mov
ret
push
test
imul
dec
hlt
cmp
jle
lea
cmp
jl
push
add
cmp
pop
jne
pop
push
adc
sbb
pop
cmp
and
mov
fldcw
test
add
mov
adc
sub
sub
adc
push
xor
and
pop
call
imul
mov
xchg
sub
sbb
es
shl
and
push
dec
and
or
add
popf
inc
mov
je
and
jo
add
dec
lods
inc
push
adc
data16
adc
cmp
movs
add
and
pop
aas
aam
xchg
(bad)
call
push
push
mov
test
push
xor
and
cmps
xor
xor
ins
jo
xchg
or
mov
push
jo
ret
jo
pop
out
push
ror
sbb
mov
outs
or
push
mov
and
sbb
mov
inc
test
lahf
dec
(bad)
popa
jne
pop
fld
inc
imul
outs
push
ins
mov
push
jne
movs
jmp
dec
imul
sbb
xchg
lea
enter
mov
lods
or
test
mov
out
or
xor
jg
jmp
push
mov
mov
test
adc
push
adc
push
push
fucomip
xchg
rcr
sub
jne
sub
mov
jg
inc
add
test
xor
sbb
pop
pop
mov
repnz
jns
mov
leave
test
aas
push
add
daa
adc
nop
jnp
add
inc
sbb
push
or
les
movs
push
xchg
jmp
adc
xchg
cmp
pop
add
test
pop
inc
pop
ja
push
inc
and
leave
inc
dec
and
and
mov
enter
mov
mov
daa
mov
adc
xchg
jp
mov
push
iret
sub
sbb
inc
lahf
ds
std
jo
aam
bound
add
scas
or
dec
cmc
pop
inc
dec
mov
xor
je
xor
pop
and
adc
or
push
or
push
imul
adc
add
xchg
fsub
or
inc
enter
xor
xchg
les
lds
frstor
jp
push
mov
ret
dec
imul
fmul
wrmsr
inc
and
add
fnsave
push
dec
xor
inc
ret
mov
adc
or
adc
jl
and
or
cmps
cmp
fucomp
into
cmps
jbe
add
inc
jns
mov
js
sbb
pop
add
or
and
cwde
mov
push
adc
mov
inc
ds
pusha
out
rol
sub
add
mov
loopne
xchg
pop
add
or
pop
lahf
adc
pop
ins
push
xor
jns
cs
movs
push
out
xor
push
data16
sub
or
imul
inc
sahf
inc
cmp
aas
bnd
les
or
cmp
add
jmp
and
int3
rcl
add
ds
sbb
ret
nop
xchg
xchg
fcom
int
dec
push
add
cmp
inc
cmp
inc
aad
push
cdq
clc
xchg
std
sbb
push
mov
xchg
bswap
pop
inc
fwait
push
and
fimul
push
push
adc
(bad)
repnz
(bad)
rol
pop
loope
repnz
jno
mov
dec
and
fs
inc
arpl
in
push
inc
movs
pop
add
push
imul
in
xor
lods
xor
inc
adc
js
test
in
leave
jmp
xchg
pop
test
jns
mov
add
jl
or
fs
or
inc
push
dec
les
jae
push
xor
retf
and
and
add
push
mov
jb
xchg
dec
hlt
sub
pop
sbb
out
cmp
jmp
jp
icebp
mov
push
enter
pushf
mov
push
jns
or
out
pusha
push
dec
aam
adc
fld
lods
daa
xor
add
cld
(bad)
rcr
mov
je
push
dec
shl
(bad)
dec
pop
push
xor
dec
or
dec
cs
pop
adc
pop
cmps
cmp
pop
sub
add
cmp
xchg
(bad)
str
sub
sub
cmp
lock
add
into
sbb
gs
shl
add
cmc
xchg
frstor
add
repnz
sub
inc
mov
or
add
das
inc
inc
mov
mov
pop
mov
push
out
mov
(bad)
jle
mov
add
jne
inc
jp
pop
xor
add
xchg
pop
jg
mov
aad
retf
push
push
call
push
add
cdq
sub
movs
(bad)
jge
ds
jl
(bad)
je
test
jl
sbb
and
jg
mov
cmp
repz
dec
loopne
and
loopne
fisttp
clc
jle
dec
cmp
dec
push
mov
mov
push
mov
sar
mov
movzx
push
push
out
add
dec
mov
lock
pop
add
nop
sub
daa
lods
(bad)
fstp
pop
cmp
shl
add
inc
or
mov
lock
icebp
mov
(bad)
out
cwde
inc
rcr
or
sti
jge
popa
in
push
push
fldcw
scas
fcmovu
and
pop
ret
test
sbb
or
loopne
mov
in
sub
inc
ror
sub
add
jo
ret
div
mov
mov
adc
pop
mov
ins
mov
out
xor
sub
push
js
int3
or
sbb
rcl
jmp
loopne
dec
fst
sub
(bad)
pusha
xor
mov
inc
and
lock
jl
add
aad
and
add
sub
push
jg
pop
or
mov
adc
mov
inc
cmp
jb
pushf
push
rcl
add
gs
add
xchg
ret
test
fdivr
mov
mov
cmp
loopne
out
jl
and
imul
push
sar
push
mov
sbb
fbld
dec
mov
seto
jp
clc
or
enter
sar
push
ss
push
jl
adc
ja
shr
and
and
xor
pushf
fs
pop
vmovups
mov
adc
or
je
js
xor
and
jae
sbb
dec
jp
fsub
jb
adc
mov
pop
add
pop
inc
out
paddsb
loope
daa
sub
sub
sub
outs
mov
aas
push
sub
push
push
cwde
(bad)
mov
cmp
test
or
outs
popa
nop
call
fidiv
mov
ror
xchg
mov
bound
jb
push
fs
mov
fs
adc
(bad)
hlt
outs
inc
mul
fild
or
fadd
movs
(bad)
fdiv
fldcw
mov
add
or
fldcw
stos
xor
pop
call
push
loop
or
adc
fild
push
pop
pushf
add
mov
add
mov
push
jle
jne
xchg
cmp
pop
loope
data16
pshufw
cli
add
push
push
add
adc
sub
dec
fild
and
rol
loop
shl
ins
test
sub
cmps
jno
cs
sub
push
ss
gs
push
adc
push
mov
shl
sub
call
std
dec
adc
jno
sub
inc
sub
ds
or
cmps
pop
rcr
xchg
fcomp
cmp
clc
cmp
sbb
or
out
xlat
and
inc
popf
cmp
retf
fldenv
or
mov
sub
movs
add
mov
scas
sub
and
imul
scas
pop
out
fild
mov
inc
adc
add
cmp
mov
or
(bad)
fmulp
retf
leave
jmp
iret
fs
sbb
sub
rep
mov
fmul
push
sbb
sbb
or
(bad)
(bad)
adc
fdecstp
lahf
xchg
add
add
jo
jae
inc
(bad)
jo
cmp
add
mov
inc
or
aaa
test
cmp
jne
mov
cmp
mov
or
push
pop
xor
or
xchg
dec
inc
fistp
inc
pop
jb
je
jg
jl
cmp
adc
cmps
or
xchg
xchg
inc
mov
jecxz
(bad)
cld
add
ins
mov
pop
sbb
icebp
mov
pusha
inc
push
sub
fs
sub
lods
sub
and
enter
xchg
push
outs
fs
rcl
xchg
test
lea
iret
add
enter
inc
and
and
cmp
push
loop
loopne
push
adc
data16
push
push
and
inc
bound
add
mov
xor
and
rol
cmp
enter
mov
push
call
mov
bound
ds
cwde
aam
mov
aad
cld
xor
inc
lea
(bad)
xor
push
fmul
xchg
sub
ins
cmp
dec
call
push
push
dec
pop
ret
(bad)
mov
mov
punpckhdq
pop
js
lock
adc
xchg
cmp
jle
neg
sbb
pop
je
push
dec
mov
loop
adc
pop
icebp
mov
or
loop
inc
xchg
pop
imul
call
add
adc
and
push
sbb
ret
ror
cdq
adc
mov
jmp
mov
inc
ja
sub
rol
lahf
dec
add
jns
cmp
pop
jmp
fild
je
cmp
push
push
inc
cwde
pop
sbb
ret
cwde
popf
mov
jmp
push
jmp
(bad)
push
ror
mov
sbb
sbb
or
add
aam
sbb
popf
jmp
jg
add
fmul
sbb
push
push
dec
dec
test
dec
loopne
ficom
sbb
sar
cld
push
add
mov
cwde
add
jne
mov
je
test
call
cmp
fimul
mov
push
mov
and
shl
call
das
mov
cli
jmp
cmp
clc
cmp
cmp
or
inc
push
adc
imul
push
lock
push
sub
sbb
lahf
test
mov
loope
xchg
mov
shl
rol
popf
fadd
test
clc
mov
xor
adc
or
sub
mov
adc
sbb
jmp
xchg
add
icebp
sub
lea
push
push
(bad)
data16
bound
(bad)
ds
push
pop
cli
mov
push
jbe
sub
addr16
mov
sub
mov
sbb
push
xchg
mov
xchg
out
nop
dec
or
jecxz
sbb
and
xchg
jo
jl
js
aam
mov
mov
mov
add
jle
push
mov
add
lock
and
push
sbb
sub
mov
in
pusha
push
push
inc
inc
je
jmp
(bad)
jmp
sbb
xlat
sub
popa
outs
pop
dec
in
(bad)
push
add
jle
cmps
or
aad
sub
mov
push
in
inc
push
pop
and
sbb
push
scas
ins
add
push
xor
lahf
clc
mov
adc
daa
lods
adc
cli
clc
and
in
ins
ja
or
adc
out
loope
or
das
and
adc
inc
mov
adc
sbb
adc
cld
sbb
inc
sub
sbb
and
icebp
fsubp
mov
cmp
int3
dec
jmp
sbb
fild
and
nop
call
pop
add
das
sub
push
mov
jp
imul
gs
xor
xchg
mov
push
pop
fidiv
in
daa
lahf
mov
sti
jne
jecxz
push
in
jmp
xchg
clc
inc
add
push
push
aaa
mov
out
mov
mov
push
icebp
test
pop
add
mov
dec
aam
cmp
mov
xor
adc
push
cmova
lock
cmp
sub
mov
ins
movs
lock
jb
sub
add
push
and
jl
std
cmp
test
call
xor
pop
int3
ja
ins
inc
mov
(bad)
leave
stc
(bad)
mov
jmp
rcl
mov
inc
cbw
inc
inc
push
push
rol
pop
push
mov
mov
cmp
mov
jecxz
cmp
ins
das
mov
sub
sbb
jp
out
or
and
mov
mov
cwde
nop
test
into
cmp
(bad)
jmp
mov
mov
push
fs
fsub
pop
sub
adc
ss
pop
test
pusha
lahf
add
cwde
cli
add
and
push
push
sbb
inc
rcl
jns
add
xchg
cmp
ret
ror
(bad)
add
mov
push
ror
daa
lods
inc
inc
and
inc
inc
pop
test
pop
jmp
fdivr
cmp
dec
mov
or
and
jae
cmp
add
jbe
push
mov
inc
lds
retf
cwde
xor
mul
mov
inc
outs
jo
lods
cmp
add
mov
cmp
out
fbld
sub
dec
sub
idiv
scas
mov
je
push
cwde
sub
inc
test
pop
xchg
cmc
imul
push
xor
xor
jne
dec
jmp
cmp
in
push
xor
shl
ret
mov
movzx
mov
mov
xchg
sub
jg
push
mov
mul
xor
add
clc
add
setb
jb
rcl
stos
or
cmc
mov
mov
hlt
jmp
jo
je
pop
inc
pop
jbe
push
jne
pop
jns
push
jmp
adc
add
sbb
in
adc
adc
sub
dec
pop
je
rcl
sub
push
or
ins
cli
add
push
jo
dec
scas
into
pop
add
ror
adc
adc
and
sub
push
add
xor
scas
pusha
add
lea
loopne
push
add
pop
sahf
xor
pushf
mov
js
push
sar
retf
cmc
mov
push
outs
sahf
ret
push
sub
loopne
push
dec
ror
push
push
mov
add
loopne
adc
outs
mov
push
jns
jge
inc
ficom
movs
add
adc
test
fisub
bndstx
lea
push
cli
sbb
inc
push
lods
add
push
retf
lds
test
add
cmp
rcr
xchg
sbb
add
mov
add
mov
sub
jo
xor
pop
call
jne
inc
pop
adc
(bad)
mov
mov
mov
mov
pop
ficom
pop
cli
js
jbe
cmp
jb
push
adc
loop
or
xor
lods
dec
xor
call
mov
fwait
mov
inc
or
dec
js
pop
push
aam
(bad)
xchg
rol
jl
push
inc
add
xor
xchg
stos
nop
jb
jl
aaa
daa
pushf
cmp
push
fwait
pop
cmp
push
mov
mov
xor
cmp
je
jmp
dec
pop
call
mov
mov
push
ds
or
dec
daa
fdiv
add
inc
sub
sub
retf
or
jge
pop
das
retf
or
push
arpl
push
fs
in
push
push
mov
adc
in
ror
inc
fisubr
or
int3
add
pop
mov
push
popf
fs
in
mov
adc
xchg
mov
pop
inc
add
out
adc
clc
mov
mov
cld
div
out
push
movs
pusha
in
pop
sbb
sub
and
shl
jne
scas
adc
jmp
mov
rcr
mov
div
push
pusha
(bad)
fisttp
pop
fbld
clc
dec
xor
ins
jne
cs
add
repz
push
push
jae
arpl
cmp
jne
push
push
je
inc
or
retf
repz
jg
push
or
and
jle
popa
jge
or
into
push
push
lods
js
or
inc
sbb
cmp
mov
call
mov
repz
sahf
rol
cmp
test
pop
mov
cmp
int3
cmp
je
push
fidiv
hlt
adc
mov
sbb
push
(bad)
push
mov
sbb
sbb
mov
mov
fiadd
sbb
jmp
xchg
or
sbb
in
es
xor
jmp
push
pop
sahf
xchg
adc
jl
mov
jnp
and
out
push
shl
cmp
cld
pop
push
sbb
pop
mov
push
push
adc
jo
fcomp
xor
cmp
push
call
fadd
xchg
ret
cmp
test
mov
punpcklwd
mov
loopne
adc
popf
jle
clc
les
fstp
or
je
mov
push
dec
hlt
lahf
add
cmp
shr
mov
popa
pop
add
in
adc
jno
or
or
ficomp
popfw
sbb
pop
loopne
add
jne
sub
call
sbb
nop
push
push
pop
pop
shl
inc
push
mov
cs
or
lods
sub
mov
pop
adc
dec
imul
sbb
cmp
shl
ins
jo
sub
dec
je
ins
fdivr
cld
pop
call
and
mov
or
push
mov
fld
test
inc
int3
inc
inc
mov
lea
pop
scas
sub
push
imul
les
xchg
add
xchg
int
adc
and
ds
add
pop
ret
data16
dec
ret
pop
cmps
xchg
sbb
lea
fsub
jbe
jl
js
push
fs
push
jo
push
fs
out
push
fs
cmp
jbe
pop
pop
call
nop
push
push
popa
ins
and
or
sbb
test
fmulp
clc
adc
and
not
cmp
jne
mov
xor
mov
pop
rol
fcomi
test
sub
sbb
es
retf
or
xor
or
bound
fidiv
xor
popa
add
imul
addr16
inc
retf
(bad)
and
cdq
pop
sbb
mov
jne
sbb
shl
push
jle
or
or
dec
jg
pop
cli
push
ja
cmp
pop
inc
(bad)
cmp
sbb
shl
mov
pop
xor
mov
leave
(bad)
(bad)
aam
or
or
pop
xor
shr
xor
pusha
jecxz
mov
in
mov
mov
adc
in
mov
pusha
dec
pop
cmc
iret
mov
add
and
rol
jmp
shl
ret
mov
or
jmp
(bad)
jnp
xchg
add
jne
lea
add
or
mov
adc
ja
ret
addr16
not
and
sbb
lock
fdivr
mov
add
sar
out
add
xchg
fisttp
das
or
(bad)
inc
je
mov
das
add
push
jo
xchg
iret
cmp
imul
sbb
clc
out
sbb
pop
mov
out
fldz
cmp
rol
in
fiadd
adc
ds
mov
stc
loope
cmp
ss
push
sub
je
icebp
jne
stc
mov
pop
xor
ja
fcomp
xchg
ss
or
sub
mov
pop
dec
sub
mov
ja
mov
iret
js
jno
inc
test
repnz
je
aaa
mov
ffree
adc
shr
add
nop
sbb
inc
add
mov
push
retf
clc
pop
imul
movs
cmp
or
jp
call
xor
sahf
sbb
fcomp
mov
push
inc
shl
rol
dec
sbb
push
cwde
pop
(bad)
cli
or
fsubr
dec
iret
push
jmp
add
push
clc
add
cmp
imul
add
pop
xor
mov
or
loop
mov
sbb
pop
test
xor
dec
enter
inc
mov
call
xor
or
push
and
cmp
sub
mov
imul
add
push
in
push
and
mov
adc
fimul
dec
xor
pusha
ss
dec
jnp
or
inc
not
outs
adc
adc
inc
or
xchg
mov
mul
sub
fs
enter
ins
mov
test
movs
je
mov
out
pusha
aaa
clc
je
ds
push
ja
and
or
dec
adc
mov
cmp
je
mul
or
mov
mov
adc
iret
je
xor
stos
aad
push
mov
push
lock
push
sub
cmps
js
xchg
inc
pop
xchg
jmp
lea
pop
repnz
push
xor
dec
leave
add
inc
sbb
sub
push
add
lock
or
into
adc
lock
xchg
xchg
or
lock
arpl
jnp
cmps
add
das
test
jo
into
ret
stc
cmp
(bad)
xor
ss
mov
out
sar
mov
add
push
mov
fisttp
lods
cmpps
movs
sub
cs
jecxz
mov
pop
lods
xchg
lods
push
leave
inc
push
je
pusha
sub
dec
lock
pop
or
sub
and
fs
and
mov
mov
or
inc
mov
out
sbb
jecxz
scas
or
outs
scas
fcom
rcr
sub
push
sbb
jns
and
pop
fsubr
int
jno
push
jge
jne
enter
imul
mov
cs
es
popa
ins
sub
imul
and
xor
xchg
lods
clc
or
add
div
adc
or
loopne
push
mov
pushf
cwde
fidivr
add
movs
push
test
sub
jo
cmp
add
je
sbb
add
js
sub
xchg
push
and
or
sar
push
lea
mov
jo
aam
add
push
lea
dec
rcr
push
or
sbb
call
adc
xchg
or
fcom
cli
(bad)
imul
xchg
loopne
add
pop
xor
pop
and
cmp
mov
sub
adc
lods
js
push
fsubr
mov
(bad)
pop
arpl
push
and
sbb
imul
(bad)
mov
xchg
into
inc
push
push
inc
loopne
pop
or
fs
inc
adc
pop
dec
inc
sbb
xor
jbe
or
test
mov
pop
loopne
or
adc
ja
mov
jo
add
mov
ud2
sub
out
jle
jge
sbb
jg
adc
test
push
cmp
pop
pop
add
xor
call
jmp
mov
adc
or
sar
and
push
fadd
or
sbb
and
pop
fist
fdiv
pop
into
jecxz
icebp
or
lock
adc
icebp
adc
retf
mov
inc
aam
or
loope
retf
sub
rol
aas
out
pop
add
loop
dec
jg
cmp
cmp
adc
sbb
or
inc
ins
arpl
add
fsubr
mov
pusha
test
and
push
(bad)
pop
enter
add
por
nop
jo
mov
and
mov
adc
jns
pop
jmp
arpl
push
(bad)
dec
jne
pop
mov
xchg
clc
sti
dec
pop
mov
movs
add
idiv
je
mov
sub
call
cmp
xor
es
ds
idiv
mov
popf
push
cmp
push
xchg
add
(bad)
in
mov
lock
stos
lods
je
test
jb
mov
jecxz
das
inc
cmp
xchg
mov
popf
pop
ins
ins
aaa
int3
add
cmc
jmp
mov
mov
pop
or
mov
jle
inc
cmps
daa
jae
repnz
add
push
push
push
push
je
repnz
push
or
shr
out
sbb
sets
aas
aam
arpl
push
xor
or
add
out
jmp
push
xor
inc
and
jno
lods
out
xchg
mov
add
cmp
scas
sub
loop
xor
adc
sbb
add
icebp
jbe
jb
std
sub
stos
sbb
shl
or
movs
sub
loop
stos
mov
addr16
add
and
icebp
or
dec
cmp
or
movlps
mov
xchg
ret
sbb
jmp
pop
add
lahf
push
cmp
xor
loopne
xchg
or
xor
hlt
mov
mov
mov
scas
mov
pop
sub
xor
xchg
rcl
cmps
inc
xchg
pop
dec
stos
es
(bad)
dec
or
push
and
jns
pop
rdmsr
rcr
dec
int3
mov
stc
(bad)
xchg
jmp
sti
in
mov
mov
xor
call
adc
mov
mov
or
jo
push
push
sub
bound
mov
test
add
push
sbb
enter
outs
push
push
dec
stos
push
or
push
shl
pusha
sti
ss
(bad)
and
xchg
fisubr
mov
mov
mov
add
mov
sub
retf
retf
std
int3
ficomp
out
and
fbld
push
sub
sub
movs
cs
addps
dec
jle
xor
ficomp
rcl
xor
or
cs
and
sub
adc
adc
shrd
sbb
cmp
ins
inc
ins
js
add
retf
xor
es
fdivr
(bad)
adc
call
xchg
adc
pop
inc
add
inc
push
mov
sub
pop
inc
xchg
dec
inc
loop
jmp
or
retf
inc
outs
jl
mov
sbb
inc
jmp
push
lods
stos
push
pop
mov
lock
inc
lea
sbb
out
ss
pusha
ja
push
cmp
rcl
int
pop
and
mov
or
in
mov
adc
inc
test
cli
jo
pop
and
pop
shr
gs
inc
and
inc
push
add
ror
cld
and
pop
nop
inc
cdq
je
imul
popf
outs
inc
or
xchg
imul
pushf
dec
xor
pop
sahf
push
scas
test
mov
mov
in
adc
xor
add
sbb
cwde
lods
ss
dec
pop
sub
add
cli
les
test
and
mov
lods
dec
xor
mov
fdivr
xor
lock
push
sub
push
test
inc
cmc
adc
dec
cmp
adc
jl
or
cmps
cmps
call
adc
sbb
add
shr
pop
xor
jecxz
add
lock
fmul
adc
pop
cmp
jbe
inc
push
inc
adc
inc
cmp
nop
push
and
fdiv
(bad)
rol
sbb
cmp
out
cmp
add
pop
movs
push
xchg
xchg
pop
fnsave
test
shl
sbb
in
movs
pop
xor
sub
mov
sbb
cmp
sahf
rcr
cmp
cmp
xchg
xor
mov
imul
sti
std
test
je
and
outs
mov
dec
call
xor
and
add
mov
or
scas
push
sbb
movzx
push
mov
dec
pop
mov
fcom
push
push
fsub
adc
inc
int
mov
retf
mov
jl
fbld
sbb
nop
fld
cwde
xor
push
mov
mov
mov
xchg
movsx
add
and
cmp
add
dec
add
in
lahf
aaa
add
xchg
add
xor
add
sbb
out
push
push
push
test
sbb
je
add
xchg
push
cmp
fild
mov
movs
mov
xor
cmp
hlt
addr16
add
mov
sub
push
push
movhps
cld
mov
cmc
cld
or
push
dec
push
test
and
in
cdq
mov
mov
nop
jmp
gs
xor
nop
data16
push
pushf
pushfw
inc
xlat
adc
aam
mov
pop
mov
test
rcl
mov
or
inc
push
mov
lock
pop
add
pop
ret
ins
mov
mov
mov
cmp
pop
(bad)
pop
bound
(bad)
repnz
push
pop
cmp
push
jne
add
mov
jp
ror
inc
inc
mov
ins
mov
cwde
mov
adc
pop
mov
adc
xor
inc
xchg
ret
push
xchg
js
cmp
test
or
leave
pushf
dec
imul
mov
dec
icebp
add
mov
adc
add
xchg
cwde
gs
xor
jns
dec
push
or
pop
enter
inc
inc
clc
add
pop
cmc
push
cmp
xchg
push
xchg
dec
pop
in
je
lock
movs
adc
mov
daa
add
xchg
int
(bad)
add
mov
addr16
rcl
movs
xor
sub
inc
sar
jae
add
jle
into
add
xchg
push
stos
adc
ror
ds
adc
push
sub
movs
aam
adc
sub
jge
pusha
add
push
mov
pop
or
add
or
inc
inc
xchg
xor
cld
sbb
pop
and
jl
dec
jbe
and
mov
gs
dec
sub
mov
push
mov
std
push
cmp
pop
jae
mov
movs
jo
xor
mov
add
sub
or
outs
add
pusha
aad
and
aam
mov
push
push
jmp
popa
lea
add
int3
adc
ret
xor
cmp
ins
test
cmp
fisub
cmp
dec
jge
adc
push
aam
sbb
ins
lea
out
sti
add
cmp
jne
mov
inc
pop
pop
mov
xor
test
call
das
pop
lea
loop
mov
rol
xchg
xchg
mov
cmp
icebp
stos
or
sbb
les
adc
xchg
mov
fdiv
xlat
adc
sbb
psrlw
xchg
push
sahf
test
mov
sub
cld
sub
outs
sti
cld
cmp
jbe
ins
shr
inc
add
aaa
xor
mov
dec
iret
inc
cwde
mov
mov
or
sbb
push
mov
(bad)
cmp
sbb
or
pusha
ins
std
mov
dec
mov
dec
fucom
es
adc
sbb
lock
(bad)
mov
lock
cmps
and
push
shl
imul
cmp
cmp
pop
adc
sub
call
sub
dec
scas
add
jns
sbb
loope
pop
dec
jnp
jge
jle
sbb
sbb
int
or
cmp
adc
mov
mov
push
push
inc
ret
xchg
rol
sub
sub
mov
mov
inc
mov
add
push
sbb
mov
lea
adc
pop
jmp
(bad)
outs
fucomi
and
out
movs
add
ins
mov
adc
aad
fwait
jno
and
or
push
mov
jns
and
and
inc
xor
mov
sub
je
adc
sub
sub
ss
or
adc
sbb
sub
push
or
push
push
sub
push
pop
mov
(bad)
scas
fild
lea
(bad)
ss
xor
getsec
jbe
mov
ret
push
dec
hlt
out
add
sub
or
sahf
inc
outs
jmp
pop
loopne
add
imul
add
mov
jo
push
loopne
inc
pop
in
ins
or
push
or
in
jbe
jo
out
cmps
mov
jmp
scas
xchg
sbb
cmps
add
xchg
sbb
xor
push
or
pop
adc
mov
loop
ret
xor
cmps
jmp
out
cmp
popa
sbb
or
push
hlt
and
add
mov
jae
push
inc
shr
dec
cmp
test
add
dec
int3
mov
push
loope
cmp
inc
push
dec
dec
or
sub
xchg
lds
call
and
add
clc
retf
push
in
dec
popf
pop
add
lahf
xor
push
xor
lahf
lods
sbb
aad
pop
cwde
xor
pusha
out
les
push
test
(bad)
(bad)
xor
imul
lock
fs
xor
out
pop
test
cld
loopne
movs
stos
mov
mov
in
loopne
pop
neg
add
cmps
xor
mov
push
push
add
and
xchg
pop
pcmpeqw
ret
dec
or
fadd
ret
call
jmp
aaa
sbb
neg
xor
dec
jmp
or
out
and
lock
sub
mov
(bad)
retf
loop
out
inc
add
jl
nop
adc
imul
(bad)
shl
jno
sub
jge
mov
mov
add
lock
nop
retf
cmp
mov
pop
or
push
inc
and
and
fdiv
adc
or
in
adc
nop
push
int
mov
cmps
add
adc
adc
imul
jo
mov
add
inc
ret
push
mov
mov
jae
push
push
jae
movs
sbb
ins
jl
mov
pop
pop
push
push
jl
xor
or
add
cdq
rcl
xor
cmp
xchg
sbb
mov
cmps
dec
mov
lods
lea
xor
push
gs
es
invd
clc
push
cmp
dec
test
mov
iret
jae
fcmove
xor
mov
push
rol
and
arpl
add
pop
xor
add
inc
and
dec
pop
test
imul
xlat
add
dec
jnp
cmps
and
mov
xchg
sbb
(bad)
(bad)
cdq
shl
aaa
adc
cmp
lds
sub
mov
and
xor
sbb
in
xchg
loopne
stos
adc
in
dec
ret
arpl
ror
in
mov
ds
xor
mov
dec
pop
xchg
mov
pop
xor
fisttp
in
pop
dec
xchg
sbb
jbe
push
js
sar
add
aam
ror
mov
fisttp
shl
add
ret
neg
or
in
les
pop
xor
pop
sbb
mov
movs
adc
mov
data16
adc
add
jecxz
outs
or
outs
mov
dec
sub
dec
ja
je
or
je
or
sub
sub
scas
adc
adc
cmp
stos
(bad)
adc
xchg
idiv
push
or
ds
mul
adc
sbb
call
ds
push
jmp
cmp
sub
cmps
push
adc
adc
dec
push
push
cmp
push
push
jp
inc
mov
push
sub
add
scas
orps
lock
or
jbe
(bad)
call
fdivr
adc
lock
(bad)
mov
ret
and
loop
mov
inc
mov
sub
or
add
je
clc
sub
call
cmp
push
or
adc
aam
push
dec
adc
call
test
movs
and
or
mov
aaa
rol
push
add
pop
mov
pop
aaa
adc
mov
mov
clc
sti
dec
je
sub
sub
or
hlt
add
sbb
push
adc
ficomp
or
(bad)
in
cmps
cmp
or
(bad)
push
adc
sub
xchg
push
pop
jo
xor
call
hlt
jge
fisttp
jge
movs
test
jmp
or
cmp
(bad)
adc
adc
neg
in
and
popa
mov
push
inc
ins
push
cmp
or
add
cmp
shr
je
pop
fstp
pop
cli
sbb
adc
pop
fcom
pop
add
push
stos
(bad)
stc
sti
bound
shr
fmul
inc
push
inc
(bad)
shl
clc
mov
shl
ror
stos
aam
pusha
stos
fcom
fsub
inc
dec
in
ss
or
enter
jecxz
inc
data16
add
pop
(bad)
(bad)
lea
or
fiadd
(bad)
popa
mov
pop
mov
add
fmul
adc
stos
ds
mov
cmps
dec
call
xchg
les
dec
imul
dec
xor
cdq
mov
imul
dec
add
sbb
data16
sbb
push
sbb
aam
push
lock
repz
push
iret
adc
call
and
(bad)
outs
mov
add
inc
mov
jge
scas
inc
repnz
dec
sbb
sbb
enter
in
in
mov
leave
in
sub
push
pop
and
in
sbb
adc
xor
xchg
xor
int3
aam
adc
mov
aas
mov
add
enter
loopne
shl
sbb
push
push
dec
mov
inc
aaa
add
adc
cmp
pop
out
leave
dec
shl
jmp
sbb
push
adc
sub
stos
out
dec
ins
inc
(bad)
sti
fisub
mov
sbb
cmc
cmp
mov
pushf
xchg
cs
add
icebp
fidivr
mov
adc
or
add
jmp
xor
or
movs
popf
das
or
adc
sbb
pop
push
xchg
or
or
dec
inc
shl
inc
ja
js
sub
call
mov
sbb
xor
aam
mov
fsub
xor
(bad)
mul
push
mov
add
mov
jo
call
daa
test
xor
inc
enter
push
and
inc
push
jne
jle
sbb
(bad)
sub
in
ss
in
cmp
mov
nop
in
lods
js
add
add
test
mov
push
and
sub
sbb
push
sub
daa
xor
dec
xchg
je
and
fucomip
add
mov
lds
lock
movs
in
or
cwde
mov
call
pop
adc
adc
sub
xchg
mov
and
in
cmp
call
pop
push
or
push
push
xchg
mov
add
jns
fdivr
cmp
push
or
imul
xor
push
xchg
push
cmp
or
push
add
or
push
popa
jnp
inc
aam
xor
xor
mov
pop
adc
in
add
shl
and
call
pop
inc
cs
cld
add
add
enter
dec
int
inc
mov
retf
enter
das
pusha
ss
shr
hlt
mov
mov
hlt
jmp
pop
mov
into
pop
jp
mov
dec
daa
fwait
mov
retf
pusha
sbb
sbb
daa
mov
mov
lea
ror
dec
shl
dec
mov
add
sub
mov
sbb
push
mov
xchg
pop
ds
xor
ja
out
adc
ret
mov
add
rcl
js
push
push
xchg
pushf
xor
pop
(bad)
push
xchg
pop
fs
cmp
inc
or
mov
cmp
jmp
fs
stc
jae
and
ins
add
call
je
cmp
(bad)
fild
pop
or
add
inc
inc
mov
adc
clc
dec
or
or
add
or
sbb
loopne
loopne
cmp
or
mov
sti
jle
adc
or
push
push
add
aam
or
ret
dec
sub
or
jl
js
xor
ret
mov
movs
inc
psraw
rcr
ja
push
pop
retf
xchg
movs
jns
mov
push
cmp
and
je
push
jg
jns
dec
pop
out
dec
or
js
outs
sar
mov
lock
dec
cmp
add
or
dec
add
in
add
shl
push
arpl
push
dec
adc
and
add
sbb
push
cmp
cmp
adc
cli
adc
adc
outs
xor
xchg
mov
fiadd
ss
sbb
and
push
cs
ror
sbb
push
mov
push
adc
leave
inc
sub
xor
icebp
sbb
mov
sub
cmps
sub
(bad)
mov
test
adc
in
adc
adc
mov
fcom
pop
pop
sbb
pop
dec
dec
test
push
pushf
push
lds
xor
inc
jbe
sti
loopne
(bad)
dec
dec
lock
inc
add
and
adc
pop
and
sbb
inc
les
sbb
push
out
sbb
pop
fisubr
push
je
pop
enter
shr
stos
cdq
sub
ret
xor
xor
jge
xchg
cmp
retf
es
pop
les
mov
adc
add
(bad)
cli
dec
mov
fadd
shr
fst
adc
(bad)
pusha
fs
jnp
add
add
push
mov
jns
sub
lea
jmp
ror
jo
aam
add
sti
and
add
add
(bad)
adc
push
or
jl
dec
push
sub
lock
mov
or
push
cmp
xchg
push
push
push
out
push
inc
inc
inc
shr
mov
sub
cld
fldenv
lahf
jnp
mov
dec
sbb
shr
inc
or
sbb
add
stos
jmp
inc
mov
push
xor
push
dec
adc
in
add
xchg
pop
inc
mov
mov
mov
xchg
add
mov
pop
dec
jp
add
(bad)
adc
and
les
add
pushf
(bad)
mov
not
inc
lea
push
cmp
popf
adc
sti
mov
push
sub
add
repz
gs
fucomi
stos
cdq
push
xchg
pop
or
jg
sub
mov
or
jb
xor
adc
fcmovbe
mov
in
pop
xor
dec
or
mov
push
dec
push
push
int
das
add
inc
ds
and
pusha
mov
inc
nop
and
sbb
in
jns
sbb
push
mov
or
and
and
retf
repnz
push
mov
fdivr
add
inc
sub
push
call
fnstcw
cmp
ja
push
mov
xabort
addr16
add
in
ja
mov
pusha
and
inc
ds
xchg
(bad)
sub
add
xor
pop
push
movs
repnz
es
push
inc
xor
jb
cmp
adc
lods
cmp
push
cmp
fld
or
mov
or
inc
fwait
ds
cs
xchg
or
pop
test
push
inc
add
mov
add
mov
cs
push
in
inc
dec
dec
enter
in
push
dec
push
dec
sbb
jmp
push
nop
cmp
push
mov
jecxz
mov
out
(bad)
mov
mov
jmp
(bad)
fnstenv
xchg
and
jae
iret
rol
imul
sahf
inc
cmp
test
cmp
mov
dec
push
aam
push
inc
adc
call
cmp
dec
lods
(bad)
or
push
call
push
xlat
mov
in
pushf
shr
push
sbb
ins
dec
xchg
jle
add
jmp
push
dec
mov
or
push
iret
lea
sar
add
lods
and
retf
dec
loopne
xchg
ret
add
stos
adc
cld
stos
jbe
push
les
loope
sbb
cwde
push
movs
add
dec
(bad)
xor
test
push
sbb
jo
and
sub
mov
ja
scas
dec
dec
fmul
pop
(bad)
jecxz
xchg
cdq
mov
jmp
sub
pop
or
mov
jno
je
dec
sub
push
divps
fmul
out
pop
rcr
adc
mov
push
xchg
dec
xchg
nop
in
scas
in
retf
cs
jg
retf
mov
test
pop
add
or
in
mov
popa
jo
inc
jle
xlat
jo
fdivp
or
mov
(bad)
(bad)
lds
and
sub
repz
xor
push
pop
inc
out
pushf
jl
aas
push
mov
inc
add
pop
add
push
and
inc
ret
or
sub
adc
int3
mov
mov
jns
xchg
add
xor
cwde
sub
xchg
mov
add
cmc
push
dec
xchg
das
sub
dec
js
cmp
or
rcr
leave
jbe
aaa
pop
jo
dec
or
xchg
je
mov
add
push
test
or
ret
cmps
and
ror
(bad)
jns
scas
aam
mov
cmp
add
lock
xchg
push
mov
jge
fiadd
test
add
dec
movs
cmps
imul
ret
jne
adc
xor
push
mov
retf
mov
ficom
add
out
aam
xor
inc
test
(bad)
dec
cmp
cli
sbb
inc
adc
jne
push
pop
enter
rcr
in
test
or
pushf
jb
out
ins
sub
inc
xchg
test
dec
daa
push
scas
pop
nop
pop
and
scas
push
jl
mov
fs
mov
or
(bad)
shl
mov
pop
cmp
jne
sub
(bad)
stos
fld
adc
lock
imul
dec
dec
popf
inc
jp
sbb
push
xchg
fidivr
push
adc
retf
and
xor
push
add
movs
add
mov
stos
jmp
(bad)
loopne
jl
(bad)
hlt
push
inc
call
or
sub
enter
jns
js
(bad)
push
jno
dec
sbb
je
aam
adc
xlat
add
je
push
int3
cmp
int3
mov
mov
cmp
and
es
pushf
sbb
or
mov
jle
adc
cmp
mov
ds
(bad)
push
lea
loopne
fwait
add
adc
cmp
sbb
shr
and
sbb
stos
or
push
or
enter
les
les
xchg
adc
mov
nop
sub
and
dec
add
setp
push
sar
xchg
sbb
pop
adc
or
or
into
adc
xor
sub
sbb
push
(bad)
and
cmp
jmp
inc
lods
jo
inc
mov
push
add
push
add
add
dec
sub
hlt
or
adc
push
fsubr
cmp
in
xchg
pop
sbb
adc
dec
enter
into
cmp
or
(bad)
sbb
jge
fcomp
push
xor
mov
push
adc
push
sub
rol
in
int
push
inc
mov
xor
cmp
rol
dec
and
rcl
mov
jle
mov
and
xor
retf
adc
sbb
xlat
sbb
int
clc
cmp
jbe
and
inc
push
sub
xor
adc
add
test
cmp
fimul
imul
xchg
or
inc
xchg
mov
inc
add
adc
lock
add
arpl
xor
push
imul
shl
push
dec
inc
push
xchg
test
adc
inc
sahf
and
mov
push
or
cld
sbb
(bad)
add
cmp
mov
leave
add
sti
lea
add
cwde
jnp
push
push
xor
pop
loope
aam
pop
mov
outs
out
inc
and
test
bound
cmp
adc
bound
pop
add
loopne
or
push
inc
jno
push
in
cdq
pop
nop
test
nop
enter
test
das
sbb
pop
scas
cwde
push
inc
std
jg
add
inc
out
lgdtd
pop
ret
sbb
(bad)
or
in
test
pop
dec
dec
push
push
rcr
in
cmps
or
push
popa
std
das
mov
cmp
jb
lea
cmp
mov
fcmovnb
std
mov
rdmsr
or
aaa
cmp
retf
ror
pop
mov
and
mov
adc
lods
or
jmp
ficomp
aas
add
int3
or
je
push
or
inc
or
adc
or
jg
rcr
cmp
fdiv
loopne
xor
(bad)
lea
push
push
lods
rcr
xor
or
outs
pop
inc
xchg
or
sbb
aam
movs
fcomp
dec
cmps
nop
add
inc
leave
fisub
div
enter
jo
imul
mov
inc
pop
out
rcr
out
or
and
loop
sbb
mov
(bad)
xchg
rcr
xor
add
ds
adc
xchg
jno
mov
jle
add
xchg
bound
sahf
add
mov
outs
and
sbb
adc
mov
sysret
mov
movs
mov
in
imul
dec
nop
push
dec
dec
sbb
in
and
pop
pop
xchg
sti
and
or
jmp
add
sbb
rol
gs
sub
pop
add
pop
shl
and
sbb
into
dec
fsubr
(bad)
jmp
mov
sub
sub
add
aad
mov
push
mov
push
test
fisubr
inc
mov
or
cdq
pop
iret
lods
imul
or
push
out
xchg
push
adc
push
sbb
push
cmp
add
pop
mov
rep
cmps
mov
push
lock
in
push
nop
lea
jle
mov
dec
jmp
call
dec
inc
push
sbb
adc
xor
or
ret
sbb
cmp
dec
imul
sub
mov
ss
cmp
inc
hlt
pop
ret
push
add
or
push
or
add
fs
loope
in
mov
xor
inc
xchg
mov
in
and
data16
xor
popa
cmp
stos
mov
xchg
and
jge
mov
call
cmp
inc
cdq
add
add
loop
pop
or
inc
gs
loope
je
cdq
cmp
(bad)
and
inc
hlt
add
xchg
mov
aam
xor
ret
std
mov
aad
add
leave
jl
push
clc
test
out
rcr
mov
mov
adc
into
cld
sub
xlat
ret
cmp
lods
mov
aad
or
inc
and
fadd
mov
sub
lea
ret
push
push
mov
push
inc
inc
cmp
jb
leave
xchg
imul
jg
dec
in
jb
aaa
out
cmp
leave
js
lods
cmp
mov
jmp
mov
cmp
pop
fadd
retf
out
lea
push
mov
fwait
adc
or
xor
das
fiadd
xor
or
xlat
mov
inc
je
add
mov
inc
jno
mov
mov
mov
fadd
jnp
xchg
adc
sbb
std
cs
push
das
inc
jecxz
sbb
retf
inc
test
sub
mov
jb
test
push
pop
sbb
jl
fldcw
mov
test
in
mov
adc
or
nop
cli
test
sub
mov
test
or
xchg
or
push
dec
dec
add
jmp
arpl
push
inc
push
push
aas
cmp
(bad)
out
and
lods
in
in
shl
push
xor
dec
rol
dec
ficomp
pop
xchg
xor
or
pop
inc
in
aaa
xchg
sub
pop
pop
jle
sub
xor
sbb
das
das
das
das
cmp
fs
js
pushf
adc
cmp
dec
in
test
add
inc
dec
or
add
paddq
push
sbb
add
ins
sti
pop
movs
add
sub
cld
(bad)
xor
rcl
add
and
jno
adc
or
or
in
arpl
loopne
xor
adc
jbe
std
add
rcl
loopne
sbb
ins
stc
iret
mov
pop
sub
icebp
outs
mov
scas
pop
or
lock
xor
push
jmp
stos
fisttp
inc
sub
js
jp
xor
sbb
or
xchg
xor
pop
add
and
in
mov
add
punpcklbw
loopne
cmp
enter
and
and
movs
add
sub
xor
cdq
mov
aaa
cmp
mov
push
int3
je
cmp
lods
outs
call
cmp
inc
in
mov
push
mov
or
pop
mov
xor
inc
push
loopne
or
stos
and
xchg
lock
repnz
xor
cmp
cmp
xor
or
dec
pop
jmp
bound
movs
bound
in
out
or
adc
jmp
sub
jae
xor
pop
nop
not
and
inc
pushf
adc
leave
and
and
jnp
and
jne
push
push
jg
jae
push
rol
add
and
(bad)
cdq
sub
repz
dec
adc
fsubr
inc
inc
sub
adc
inc
out
adc
inc
cmp
fld
aaa
sub
loope
cmp
inc
mov
test
shr
or
call
dec
imul
fistp
push
sub
or
mov
rol
and
xor
and
sbb
mov
inc
sbb
js
sbb
add
or
sub
loopne
pop
dec
and
push
mov
mov
pop
sbb
or
cmp
sete
add
xor
xchg
push
sar
cmp
mov
scas
cld
sub
or
xchg
jge
pop
mov
xor
mov
repnz
inc
jp
mov
push
jmp
dec
clc
pop
adc
lea
push
retf
add
rcr
mov
push
push
aam
xchg
sahf
aas
aaa
call
aad
popa
add
dec
pop
adc
and
push
sbb
add
je
nop
(bad)
call
add
adc
push
mov
or
mov
rol
or
adc
inc
out
leave
add
jge
aas
xor
and
jmp
xor
pop
cmp
out
sar
rcl
mov
sar
bound
inc
adc
arpl
add
les
mov
outs
mov
inc
add
cmp
push
sbb
in
or
sar
dec
jne
fadd
adc
or
add
add
push
inc
sbb
or
rcl
jno
and
mov
popa
xor
and
je
inc
dec
ror
fisub
or
je
pop
cdq
cmp
jl
aad
loop
pop
sbb
cli
jo
cmp
movnti
lods
(bad)
sub
sub
cld
sbb
bound
push
xor
sar
jb
lods
xchg
pop
cld
push
pusha
pushf
mov
mov
test
dec
xor
call
xor
adc
inc
leave
mov
adc
fsubr
ror
and
inc
cmp
adc
mov
loop
mov
adc
nop
and
pop
ins
jge
shr
cmp
sub
pop
pop
xor
add
push
pop
movs
jle
xor
adc
push
movs
jmp
add
icebp
sbb
jle
mov
dec
add
pushf
sub
popa
ins
loope
push
and
ins
push
adc
rol
fsubr
outs
or
cmp
cmp
pusha
push
cmp
pop
pusha
lea
mov
outs
cmp
je
cmp
outs
out
adc
fild
shr
sub
sar
cmp
jbe
mov
jb
mov
jmp
mov
and
retf
dec
inc
(bad)
dec
and
pusha
in
adc
ss
jecxz
add
push
ficom
jb
aad
cmp
movs
add
mov
or
(bad)
movs
lahf
pop
add
sub
and
fiadd
fcom
ins
and
and
ja
(bad)
lea
mov
xchg
movs
or
fdivp
sbb
test
dec
jb
push
mov
aam
sar
xchg
shr
aad
mov
jl
pop
test
mov
and
dec
xchg
aad
mov
jmp
cmp
push
jns
dec
push
add
test
mov
sbb
inc
mov
xor
test
mov
sub
add
outs
inc
pop
add
pop
nop
adc
dec
mov
ss
loopne
pop
repz
pop
imul
xchg
adc
cmp
inc
mov
jmp
stos
push
(bad)
arpl
dec
add
lahf
jmp
cwde
outs
sar
lea
jp
add
outs
pop
cmp
add
call
jae
jb
push
lock
loopne
mov
pop
or
pop
jmp
inc
and
or
clc
jae
adc
and
add
add
sbb
sbb
arpl
xchg
adc
out
push
push
xlat
add
add
dec
push
cs
sub
cmp
pop
xchg
add
mov
pusha
cmp
loope
je
adc
jle
pop
mov
sub
shr
test
pop
jmp
adc
or
lock
mov
xor
xor
jmp
test
push
jp
dec
sub
inc
and
test
iret
xor
adc
sbb
inc
and
dec
xchg
push
mov
xor
enter
add
aaa
mov
add
add
dec
ffreep
cld
outs
and
xchg
and
cmp
scas
xchg
or
pop
sbb
ret
dec
and
jmp
and
push
sub
and
enter
or
and
inc
outs
fcmovnu
daa
dec
shl
adc
sub
ja
add
sbb
adc
or
outs
sub
fld
mov
cmp
inc
rol
dec
call
dec
inc
ja
pop
mov
jmp
mov
add
add
mov
add
test
cmc
retf
or
or
push
inc
fild
jno
js
jo
mov
jne
xor
xor
jo
out
shl
sbb
jecxz
adc
and
retf
sub
mov
cmp
lods
lods
int
cmps
and
mov
adc
mov
loopne
push
jl
mov
mov
add
nop
and
and
add
or
and
add
add
enter
jb
add
daa
mov
jb
add
loopne
add
sub
sbb
cmp
das
jmp
push
inc
cmp
pop
push
cmp
inc
push
sub
xor
or
xor
add
mov
vmovsd
inc
dec
push
leave
jmp
jnp
cwde
mov
sar
cld
mov
cs
or
out
pusha
push
in
cs
outs
push
add
retf
imul
jb
or
sbb
adc
adc
sbb
xchg
(bad)
adc
mov
loop
and
je
add
pop
js
dec
or
adc
inc
adc
sbb
or
loopne
mov
sbb
xchg
jno
and
sub
jnp
repz
sub
adc
adc
repnz
xchg
sbb
mov
xchg
add
jae
add
and
lea
jge
mov
mov
dec
sub
push
jae
jne
(bad)
jmp
jg
push
push
jb
push
sti
mov
test
out
aaa
sbb
inc
cmps
xor
mov
jmp
fld
xor
dec
out
out
push
mov
adc
adc
movs
dec
out
or
push
and
out
or
xchg
xor
sahf
sub
dec
int3
ja
push
adc
outs
dec
outs
addr16
sub
mov
inc
sub
or
push
pop
test
(bad)
loopne
enter
push
fsubr
xchg
test
and
pop
leave
ret
push
xlat
imul
or
add
rcr
xor
(bad)
inc
add
shl
push
push
test
adc
or
rcr
cwde
fiadd
inc
call
clc
jno
xor
mul
xor
mov
xor
or
popa
stos
rol
xor
test
dec
out
and
sub
cmp
shl
(bad)
pop
call
jns
in
xchg
in
inc
call
scas
ss
cmp
je
in
dec
les
ins
pushf
pop
dec
mov
mov
fmul
into
mov
int3
loope
cld
push
cmp
cs
outs
ss
inc
aaa
pop
int3
ret
or
sbb
idiv
mov
jmp
int
push
les
leave
push
xchg
xor
jno
add
arpl
jmp
lock
jmp
or
xor
push
add
movs
or
inc
stos
pop
mov
adc
xor
loopne
sti
pushf
(bad)
in
cmp
jg
nop
xor
aam
mov
popa
aaa
and
sub
aaa
mov
jno
add
enter
inc
jnp
jnp
push
add
xor
mov
and
gs
inc
loop
jbe
mov
pmulhuw
test
add
mov
aas
add
mov
lock
aam
jmp
push
es
or
lods
xchg
outs
je
or
sahf
pop
and
add
mov
imul
mov
mov
jg
sbb
cmps
test
dec
inc
jg
jmp
add
or
(bad)
push
or
scas
push
sbb
or
jb
les
push
or
dec
or
push
xchg
je
popa
push
xor
and
dec
inc
pop
adc
or
or
mov
leave
jmp
mov
sbb
sbb
push
or
jbe
push
mov
add
push
xor
add
adc
shr
shr
sub
and
mov
aas
enter
dec
in
movs
sbb
and
push
pusha
push
dec
inc
xor
movs
pop
push
retf
out
xlat
jmp
jl
push
mov
push
cdq
movs
ds
movs
pushf
sbb
shl
xor
mov
dec
cmps
sub
lock
mov
cmp
or
gs
popa
jl
aaa
sbb
cdq
nop
adc
add
cmp
ss
and
arpl
retf
jle
xor
scas
dec
adc
inc
push
rol
add
shl
(bad)
std
jg
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
ret
js
popa
jae
stos
mov
mov
cmp
adc
(bad)
jge
mov
pop
and
(bad)
jns
sbb
xor
je
cmp
je
jo
outs
js
(bad)
pop
push
sbb
movs
pop
mov
dec
ret
add
and
pop
(bad)
scas
rcr
and
imul
scas
inc
sub
add
push
leave
jns
mov
les
mov
pop
add
jl
les
ret
int3
jl
cld
pop
es
hlt
mov
cmp
jl
pop
inc
cs
pushf
jl
mov
cmc
sub
inc
mov
push
es
sbb
jge
test
and
pop
sbb
jp
jne
add
ret
mov
cmps
bound
push
(bad)
mov
add
cld
or
mov
lock
push
jmp
jnp
inc
push
add
dec
add
dec
or
mov
dec
and
dec
xor
mov
xor
sbb
ror
stc
outs
mov
pop
adc
jge
popa
clc
add
cmp
jecxz
stos
ins
cmp
sub
add
push
or
push
icebp
sub
push
push
in
fimul
inc
test
cmps
add
cmp
inc
in
inc
mov
push
pop
test
jne
test
mov
pop
pop
dec
or
fucomp
sub
jmp
dec
pop
cmp
mov
add
dec
adc
pop
xchg
pop
mov
xor
inc
add
push
hlt
pushf
cmp
mov
ins
dec
mov
sbb
dec
lea
push
call
loopne
cmp
jg
xchg
call
add
jp
dec
push
mov
mov
mov
shl
xchg
ret
and
jmp
das
sbb
push
cmps
jb
adc
jns
push
sub
push
push
pop
pop
pusha
cmps
int3
(bad)
loopne
es
push
aaa
and
pusha
out
mov
dec
push
scas
jge
inc
cwde
pusha
xchg
and
adc
or
xchg
mov
int
call
call
mov
push
sub
jno
mov
jne
dec
pop
and
cmp
xchg
retf
push
lahf
xor
sbb
loop
std
sbb
xor
neg
pop
daa
les
mov
jp
jno
loopne
pop
xor
inc
bound
and
pop
sbb
pop
jne
cs
sub
iret
inc
sbb
add
(bad)
xchg
mov
inc
jns
(bad)
shl
call
mov
xchg
add
retf
push
sub
int3
mov
sub
mov
and
mov
mov
adc
(bad)
out
and
dec
xor
pop
leave
and
xchg
add
sub
pop
mov
and
and
xchg
stos
inc
jmp
(bad)
iret
mov
movq
and
dec
pop
leave
lds
cmp
and
test
adc
stos
sbb
movs
xchg
cld
pop
call
repz
pop
dec
mov
jmp
inc
sbb
(bad)
jmp
ins
push
and
sbb
push
inc
rol
fcmovb
mov
adc
lea
dec
push
or
sahf
mov
mov
pop
push
add
adc
push
aam
retf
pop
pop
ret
mov
push
les
enter
je
fnsave
jb
add
push
sbb
mov
sub
outs
mov
xor
mov
fwait
cmc
imul
ds
mov
sti
mov
cmp
popf
pop
fcomp
mov
hlt
dec
outs
jecxz
xor
mov
xchg
sar
fmul
(bad)
lea
adc
jmp
inc
xchg
dec
mov
lahf
test
add
and
daa
je
pop
pop
add
sbb
jg
pop
push
add
pop
je
mov
inc
clc
clc
or
lea
nop
jl
mul
scas
(bad)
lock
xor
rol
and
jle
dec
add
and
adc
jecxz
jne
in
mov
sub
adc
pusha
movs
or
mov
iret
inc
bnd
mov
(bad)
xchg
mov
sub
jne
mov
in
shl
and
pusha
push
cmp
adc
call
xor
mov
jno
add
sbb
(bad)
(bad)
call
test
push
in
adc
push
in
ret
xchg
aam
inc
sub
mov
inc
add
mov
and
ret
push
stos
es
and
mov
rcl
les
lahf
enter
fsubr
fmul
fwait
mov
ret
in
mov
icebp
adc
adc
iret
mov
lahf
out
add
pop
retf
cmp
ss
inc
pop
dec
or
rol
fild
add
sub
sub
inc
add
jge
mov
push
cmp
push
lds
stos
fadd
sub
dec
pop
sbb
mov
ret
xchg
add
ret
mov
or
jl
scas
pushf
lea
inc
pop
call
loopne
sub
sbb
adc
es
mov
ds
adc
inc
cld
popa
xorps
mov
push
clc
cvtps2pd
int3
rcr
hlt
add
fisttp
and
cmp
mov
or
inc
adc
ret
popa
aas
adc
(bad)
shl
es
cmp
pop
jo
push
mov
mov
cmp
pop
test
and
shr
ds
add
ficom
sbb
or
jns
jb
loopne
xor
mov
add
pop
push
push
adc
jge
mov
ins
add
or
add
rcl
js
nop
jmp
div
call
dec
mov
adc
jle
add
mov
sub
fucom
push
shld
fcom
fwait
cmp
pusha
xrelease
cdq
xlat
and
jmp
or
fdiv
jno
dec
sbb
pop
dec
shr
pop
out
mov
add
jb
and
imul
add
add
dec
add
mov
inc
and
sub
shl
or
ror
inc
(bad)
adc
pushf
add
test
xchg
enter
mov
lds
sbb
jae
cdq
iret
jae
dec
pop
cwde
dec
sbb
push
xor
sub
jae
jne
fisub
jae
je
cmp
lock
inc
or
es
inc
popa
movs
sbb
dec
add
xchg
cmps
hlt
sbb
inc
mov
jle
add
adc
mov
mov
rcl
in
add
adc
js
(bad)
fsubr
(bad)
pop
je
fld
pop
push
push
fstp
(bad)
mov
bound
inc
pop
cmp
jne
adc
adc
jne
push
div
jns
sahf
and
clc
jne
or
jne
leave
call
(bad)
or
push
fstp
and
push
adc
out
daa
rcl
mov
ror
and
and
leave
out
mov
pop
xor
imul
aam
arpl
test
test
fld
fst
jecxz
in
and
aaa
mov
mov
dec
sbb
sbb
nop
adc
div
jo
(bad)
(bad)
mov
mov
rcr
sbb
loopne
mov
jo
adc
lea
sub
fwait
aas
push
xchg
adc
or
or
lds
pusha
mov
pop
cmps
add
test
lock
cmp
inc
out
retf
aam
push
or
fimul
outs
neg
mov
movs
pminub
dec
add
inc
dec
sar
push
and
nop
adc
push
dec
add
sub
sbb
scas
pop
scas
mov
jmp
sbb
test
ins
fld
and
push
jbe
rol
push
pop
enter
fcmovbe
sbb
pop
mov
adc
pop
cmp
jg
aad
dec
mov
add
fcomp
xor
nop
add
sbb
jle
mov
push
jl
push
pop
or
or
push
popa
adc
sub
cwde
xchg
das
push
icebp
popf
daa
or
push
nop
or
lods
fs
push
or
sub
add
rol
cmps
test
push
mov
sub
xor
xchg
in
push
add
push
dec
add
aaa
shr
aad
and
ds
mov
xor
dec
sub
dec
or
dec
push
lods
sar
ficomp
mov
mov
imul
mov
inc
inc
jno
add
outs
add
xor
dec
enter
push
push
jns
ss
push
les
or
nop
retf
out
mov
xchg
or
es
ror
popa
sub
sbb
or
adc
add
mov
inc
jo
loopne
sbb
fs
test
ss
and
fucom
imul
and
adc
fs
sub
add
adc
mov
enter
dec
(bad)
sar
mov
test
je
ss
sbb
adc
sub
xor
sbb
pop
cmps
daa
rcl
in
sub
sbb
sbb
jg
int
adc
sub
jno
push
push
rol
push
pop
test
in
adc
cs
arpl
icebp
and
bound
push
sar
jp
push
cmp
add
(bad)
adc
cmp
jle
fwait
xchg
or
add
mov
repz
and
psubq
adc
pushf
je
dec
xor
push
pop
add
add
int
fnstsw
cs
push
or
loopne
sbb
outs
mov
sbb
cmp
jl
push
jb
pusha
inc
(bad)
enter
xor
inc
cmp
add
add
test
pop
mov
push
dec
add
add
jb
ud2
aad
scas
pop
adc
jnp
push
loope
sbb
mov
xor
mov
(bad)
loop
mov
adc
push
call
push
pop
popf
push
inc
sahf
data16
push
add
dec
and
ins
mov
push
push
lods
or
ins
shl
in
jl
cmp
pop
mov
mov
jbe
mov
mov
test
lods
mov
fmul
sub
mov
add
pop
adc
push
cmps
add
fwait
xor
xor
or
rcl
fisubr
adc
push
xor
dec
ret
xlat
dec
mov
sub
push
inc
add
pop
fdiv
jge
ret
test
fisttp
push
pushf
rcl
ret
fstp
ss
cmps
sbb
test
cdq
dec
(bad)
lods
add
and
ds
dec
push
pop
or
mov
mov
adc
mov
shl
sbb
pop
and
cli
push
pop
jle
dec
or
push
and
dec
mov
add
mov
mov
add
inc
push
sbb
lea
(bad)
dec
jae
xchg
adc
inc
loop
ror
ror
mov
sbb
jge
mov
xchg
mov
into
pop
cdq
xchg
mov
scas
nop
out
scas
nop
mov
xchg
push
bswap
lods
sbb
or
test
jmp
sub
ret
ror
sub
mov
movs
iret
(bad)
sub
pop
sub
dec
jmp
(bad)
je
push
mov
add
lods
loope
xor
add
mov
jnp
(bad)
lods
or
and
xor
jmp
lods
es
or
sbb
call
cmps
dec
cld
data16
jmp
pop
mov
ror
jmp
ret
dec
clc
out
xor
enter
add
jmp
nop
aad
sbb
test
rcr
pushf
jecxz
mov
xchg
js
jge
jne
test
retf
jl
inc
and
pop
adc
pop
jne
adc
mov
and
or
xor
add
jle
and
add
push
lahf
sbb
repz
push
and
jge
sbb
in
jmp
push
xor
push
jl
loope
test
add
dec
xchg
pop
popf
pop
retf
test
push
and
jae
lock
mov
inc
imul
mov
cmp
sub
xor
jnp
fdiv
lock
mov
mov
dec
dec
xor
shl
add
nop
mov
add
popf
add
imul
mov
lods
repz
sub
in
pop
rcl
sbb
lods
hlt
sbb
xchg
pop
pop
shr
sub
jnp
lahf
in
add
adc
fild
nop
shl
jne
imul
jmp
rcr
dec
inc
arpl
fild
pop
or
jmp
mov
and
adc
adc
inc
(bad)
mov
mov
loopne
mov
push
mov
adc
cmps
and
xchg
lods
xor
and
jnp
hlt
add
jo
pop
shl
push
push
(bad)
mov
add
dec
cmp
ss
mov
and
mov
and
push
mov
retf
(bad)
sbb
(bad)
adc
pop
pop
(bad)
popa
stos
rol
rcl
mov
add
aaa
popa
ins
inc
ins
and
pop
mov
push
jl
sbb
inc
mov
add
xor
ret
cmp
inc
mov
mov
les
and
mov
jns
add
shl
jno
sub
lods
retf
push
arpl
push
bound
add
fadd
inc
pusha
call
inc
inc
jl
push
jl
inc
push
rcr
jg
dec
mov
aaa
(bad)
mov
mov
sub
adc
icebp
jl
inc
loopne
or
mov
jg
dec
sbb
ret
lea
dec
push
pop
add
test
mov
ret
mov
or
ror
arpl
mov
jne
mov
es
sub
je
ret
mov
xchg
pushf
mov
fistp
add
in
pop
xor
aam
leave
cmps
sub
add
xor
add
push
movs
xchg
or
xchg
lock
lods
and
cwde
inc
adc
mov
outs
pusha
ret
mul
sub
enter
loop
inc
cmp
cs
dec
inc
inc
cmp
mov
rcl
mov
nop
lahf
stc
mov
data16
mov
stos
or
and
inc
xchg
js
retf
neg
pop
lahf
retf
popa
jnp
xor
cwde
loope
(bad)
jmp
sbb
jg
adc
add
cmp
mov
or
inc
outs
add
xchg
sahf
fild
mov
add
mov
jno
in
fisttp
jbe
mov
cmp
adc
inc
dec
mov
leave
stos
loopne
or
push
ror
shl
pop
ret
outs
loopne
pusha
push
test
jg
jb
mov
fld
mov
sar
sub
in
adc
inc
pusha
cmc
test
test
leave
add
pop
ds
dec
mov
add
loope
jae
je
inc
inc
loopne
sbb
xchg
xchg
int
inc
and
push
push
into
or
inc
or
adc
xor
pop
rol
xor
inc
mov
adc
sub
clc
or
outs
(bad)
adc
js
inc
shr
loope
jo
leave
sbb
add
xor
add
mov
xor
mov
and
movs
add
push
loop
sbb
fstp
add
xchg
hlt
dec
fs
xacquire
movs
push
add
je
fisub
or
xor
or
es
rol
xchg
sbb
sub
push
pop
jb
push
pop
mov
push
pop
inc
sub
lods
fisubr
cmp
jo
pop
pop
add
and
or
nop
aaa
je
sub
in
xor
adc
or
mov
or
push
adc
iret
jns
sbb
or
and
add
inc
dec
push
(bad)
jnp
sar
hlt
mov
and
jmp
cs
xchg
hlt
or
sub
cmp
adc
je
sbb
div
cmp
mov
push
sub
xor
loope
stos
mov
xchg
pop
mov
mov
and
or
xchg
movs
icebp
sub
frstor
icebp
push
and
les
jne
mov
mov
dec
movs
sbb
xchg
push
sbb
test
cs
pop
out
adc
pop
scas
and
ror
dec
xor
std
sbb
out
dec
sbb
shl
sub
and
adc
add
cmc
pushw
push
jns
sub
and
(bad)
xor
push
mov
retf
cdq
sbb
ins
in
xchg
addr16
and
enter
adc
outs
loop
lds
push
add
int3
fwait
inc
or
outs
xchg
jp
xlat
and
pop
cs
or
xor
or
ins
pop
sub
sbb
test
add
fiadd
aas
cmps
mov
mov
test
jl
inc
push
adc
cwde
call
scas
xlat
add
pop
cmp
ret
std
sbb
mov
and
and
movs
fistp
cmp
mov
rol
leave
mov
shr
shl
add
test
icebp
xor
pop
inc
add
test
inc
call
rol
cmp
lods
rcr
xor
and
dec
mov
add
adc
mov
xchg
pop
out
xor
add
push
push
or
xchg
lahf
std
outs
add
xor
aaa
test
push
xor
cs
stos
shl
nop
sbb
jg
mov
or
(bad)
cmc
fcom
jno
es
add
lock
int3
add
pop
ror
repz
cmp
push
sbb
inc
ficom
adc
outs
in
and
pop
imul
or
push
mov
jne
push
pop
fwait
ret
sbb
jnp
mov
sbb
add
cs
pop
rol
add
leave
xchg
scas
xor
dec
sbb
fld
or
add
inc
test
mov
rep
and
sbb
out
popf
inc
sbb
sub
mov
into
(bad)
retf
mov
mov
(bad)
(bad)
xchg
clc
ins
(bad)
fisttp
aas
shl
aam
jne
loopne
pop
mov
pop
pop
call
data16
rol
loope
xor
fdiv
xor
pop
jne
rol
cmps
js
or
mov
test
mov
pop
in
(bad)
call
dec
lock
pop
add
sbb
loop
sbb
and
fdiv
je
lock
sbb
jp
adc
rcl
sub
outs
or
mov
arpl
iret
repnz
xor
add
add
stos
pushf
gs
push
test
inc
push
aam
js
jae
push
sbb
sbb
js
pop
imul
push
test
lea
mov
inc
inc
inc
test
or
cwde
outs
inc
mov
add
dec
(bad)
push
mov
cmp
jne
adc
sbb
ret
add
cmp
and
adc
scas
test
add
fild
test
(bad)
jmp
add
push
loopne
ret
pop
das
or
pop
ret
cmps
ror
jb
adc
jg
xchg
out
shl
mov
mov
lock
and
pop
mov
dec
jmp
push
cmp
je
pop
clc
adc
mov
cmp
jne
add
sub
cmp
jne
adc
add
pop
test
(bad)
das
fucomp
pop
dec
adc
inc
mov
rcl
sbb
or
and
adc
xor
pusha
or
jno
inc
push
or
jl
sar
sub
xchg
jecxz
sbb
in
or
pusha
adc
pop
stos
in
mov
dec
add
cmp
adc
ret
xchg
cli
mov
inc
add
xadd
ds
dec
or
sbb
xor
nop
inc
sbb
(bad)
or
lods
adc
popf
enter
mov
imul
sub
fst
lock
popa
out
sbb
add
dec
fcmovu
fnstsw
test
je
and
cmp
inc
push
xor
inc
adc
sbb
fld
add
pop
punpckldq
mov
fdiv
in
fstp
and
ins
clc
push
sbb
jno
and
mov
fldz
out
cmp
inc
add
jl
or
fsub
pop
fsubrp
inc
xchg
mov
jge
and
loope
out
shl
(bad)
outs
add
pop
add
xor
dec
add
rcr
adc
and
aam
mov
aas
inc
repz
dec
je
add
movs
popf
inc
shl
adc
pop
mov
jns
and
adc
inc
sbb
and
loopne
mov
xchg
shr
push
push
push
push
lods
xor
sub
test
xchg
sbb
scas
pop
push
and
pop
lds
inc
sbb
pusha
and
sub
sar
pop
dec
lock
sahf
mov
retf
aaa
xor
mov
push
sub
mov
sbb
or
xor
in
iret
push
and
jnp
sub
and
loopne
sub
out
fst
jle
or
movs
fmul
adc
fs
dec
and
sbb
or
fmul
cmp
push
push
adc
jns
push
and
push
xor
enter
push
adc
movs
inc
pop
push
movs
fwait
mov
fdivr
or
xor
or
or
and
adc
pop
push
jecxz
cmc
dec
ror
adc
inc
or
shl
pop
pop
and
or
mov
dec
ret
mov
cmp
repnz
(bad)
push
push
mov
and
int3
inc
jbe
in
retf
lds
in
fnstenv
or
cld
into
or
sahf
push
sub
stc
push
dec
xor
ss
outs
or
sub
dec
mov
and
(bad)
adc
xor
pop
jns
fld
cwde
ror
sub
test
stos
sub
and
xor
pusha
xchg
fucom
retf
push
sbb
jne
sub
pop
daa
or
and
out
and
and
push
push
movs
push
inc
ja
pop
and
xchg
cmc
inc
pusha
inc
inc
mov
pop
mov
mov
out
sahf
(bad)
clc
or
cmp
cmp
pop
outs
repz
repz
call
inc
sahf
out
sahf
push
bound
xchg
cmps
jns
out
mov
fldl2e
sti
repz
repz
sbb
xchg
cmp
popa
jb
cmp
push
je
mov
jmp
push
xchg
leave
stos
xchg
jl
sahf
out
push
retf
adc
jecxz
xchg
mov
xchg
adc
je
sub
cmp
xor
mov
and
adc
lahf
les
push
push
inc
cmp
xchg
inc
and
ja
inc
adc
stos
(bad)
mov
(bad)
sub
push
fld
imul
outs
mov
xchg
lock
cmp
and
out
popf
adc
sub
pop
push
push
cmp
and
and
mov
ds
dec
sbb
ret
push
popf
and
int
push
leave
pop
add
lods
test
into
sbb
push
inc
scas
xchg
adc
loope
nop
sub
adc
mov
jl
inc
inc
or
fstp
and
dec
adc
or
stos
cmp
mov
cmp
shl
adc
aam
xor
fild
js
push
inc
lods
push
in
add
or
fisubr
jne
mov
adc
sbb
fidiv
adc
xchg
mov
mov
push
bound
inc
stos
sub
or
add
inc
fld
loop
pop
sub
enter
jle
fld
sub
sub
mov
in
clc
add
push
icebp
add
call
call
enter
xchg
mov
add
pop
add
cld
push
in
ins
leave
mov
pop
test
loope
adc
or
push
je
add
shr
scas
in
jecxz
out
adc
(bad)
call
push
stc
add
adc
add
and
push
fild
or
nop
imul
mov
xchg
or
adc
mov
pop
enter
or
mov
and
pop
loopne
sbb
xchg
pop
in
push
sahf
xchg
or
xor
cmps
sbb
xchg
add
minps
inc
dec
(bad)
(bad)
jp
adc
sbb
pop
xor
xor
cmp
xor
push
mov
push
push
inc
push
outs
sbb
mov
sbb
inc
xchg
sbb
nop
sub
add
inc
push
and
js
call
loopne
or
push
push
push
popf
xchg
xor
or
jns
or
adc
sbb
mov
inc
jmp
adc
popf
(bad)
pop
dec
mov
adc
or
shl
jmp
in
loopne
test
lock
mov
inc
inc
inc
adc
push
ins
stos
cwde
pop
mov
mov
adc
push
add
push
adc
adc
mov
sbb
adc
iret
cwde
dec
mov
jo
test
xchg
dec
add
inc
add
enter
call
pop
mov
adc
in
cs
mov
ins
mov
clc
xchg
jne
jne
call
pop
mov
mov
mov
sti
(bad)
or
jbe
xchg
or
or
sbb
cmp
dec
(bad)
push
mov
ror
adc
inc
ret
bound
adc
pop
mov
cdq
adc
stos
adc
clc
inc
(bad)
stos
and
sub
mov
mov
es
jno
and
push
fisttp
pop
xor
fwait
add
loope
add
and
mov
jno
mov
(bad)
scas
and
cmp
jne
push
das
cmc
mov
adc
or
pop
xor
test
sbb
and
push
mov
add
mov
cmp
jl
push
push
push
pop
jne
arpl
stos
lods
adc
outs
mov
fld
retf
or
push
mov
cwde
sbb
lods
xor
and
push
in
add
or
dec
sub
adc
inc
push
or
add
popa
and
xchg
pop
push
jne
imul
push
add
jno
je
lods
out
or
cdq
int
into
add
int
test
sub
mov
sub
jmp
test
dec
add
push
or
adc
or
mov
push
xor
rol
stos
push
inc
ror
aas
jne
test
mov
sub
xchg
mov
into
and
gs
adc
add
mov
add
cmps
lahf
mov
add
cmp
cwde
add
add
add
push
sbb
repz
xchg
push
dec
mov
add
mov
in
es
jl
or
sbb
mov
inc
push
inc
ins
and
and
ret
cmp
inc
nop
outs
jno
add
and
or
jnp
fcom
(bad)
sub
rol
mov
nop
stos
mov
adc
jbe
or
addr16
or
jge
jge
gs
push
pop
mov
pop
add
pop
lds
fstp
adc
bound
and
adc
pushf
rol
out
push
add
movs
clc
aas
xchg
mov
hlt
xchg
mov
pop
inc
mov
dec
cmp
fcmovne
js
dec
push
and
test
ror
in
mov
jo
push
add
adc
sti
mov
ins
outs
or
icebp
add
add
jp
push
mov
adc
and
retf
or
stc
fs
fcomp
xor
cmp
ins
cmp
gs
(bad)
mov
inc
pop
jmp
movs
jle
pop
out
or
jmp
or
and
sub
jne
fld
mov
push
push
lock
stos
and
data16
or
or
(bad)
fild
sbb
mov
inc
jecxz
sbb
xor
(bad)
pop
add
push
sub
test
cmps
push
adc
pop
push
ins
xchg
rcl
sbb
das
dec
stos
or
dec
arpl
inc
cld
or
cmp
xchg
dec
lods
sar
data16
pop
dec
dec
scas
sti
in
mov
pop
aas
jp
sub
mov
xor
cmp
adc
loopne
push
in
iret
dec
sbb
adc
loop
int3
je
loopne
lock
and
cmp
mov
push
sub
mov
pushf
push
xchg
dec
(bad)
fwait
test
test
add
mov
es
sbb
jecxz
or
sti
ins
push
lock
and
(bad)
cmc
dec
daa
push
dec
xchg
jbe
sbb
sub
sub
daa
sbb
fadd
call
adc
stos
cmp
loopne
inc
add
push
repnz
cmp
in
lds
xchg
cdq
jp
cdq
dec
out
cmp
aas
pop
fstp
mov
jecxz
bswap
pop
dec
pop
pop
call
pop
jno
imul
int
leave
adc
mov
or
fdiv
scas
xor
stc
mov
ins
(bad)
jmp
dec
fwait
shl
imul
ret
or
adc
jl
xor
jmp
int
jbe
cmp
jl
or
sbb
popa
jp
adc
(bad)
std
push
sub
push
cmp
je
mov
mov
push
add
inc
jmp
(bad)
sar
nop
lock
mov
push
cdq
pop
idiv
mov
mov
aas
fsubr
xchg
scas
mov
cmps
pusha
jl
and
int
ret
rol
pop
pop
lock
push
call
movs
mov
(bad)
fs
enter
test
aas
inc
shr
inc
cld
inc
(bad)
jbe
jle
or
xor
mov
inc
jb
add
dec
aam
dec
add
dec
lahf
retf
inc
push
in
in
in
dec
movs
jnp
in
inc
xor
or
and
cmp
(bad)
mov
(bad)
(bad)
adc
jae
aam
cmp
daa
cmp
retf
jo
jl
push
ds
fistp
sbb
movs
sub
shl
or
es
not
cmp
pop
lahf
mov
pop
xchg
dec
movs
repnz
rol
or
sbb
and
outs
and
loopne
stos
push
mov
pushf
adc
nop
xor
fistp
clc
(bad)
fmul
push
ins
mov
jbe
sbb
or
test
je
ss
lods
or
popf
ret
ret
xor
mov
fcom
aad
pop
add
les
xchg
test
push
push
adc
jle
pushf
adc
and
or
pop
push
push
retf
sub
or
mov
push
js
(bad)
pop
sbb
inc
push
cmp
cmp
fild
push
pop
push
push
cmp
xchg
pop
pop
sbb
xor
fs
and
jo
sbb
gs
adc
jge
adc
xchg
dec
dec
loopne
sbb
mov
daa
loopne
fdivr
and
mov
fs
cmp
sub
fwait
sbb
data16
sbb
sbb
jns
sahf
dec
es
mov
sub
dec
shr
jbe
jmp
pushf
fadd
loope
and
in
mov
rcr
leave
and
imul
or
das
adc
outs
mov
pop
mov
pop
outs
pusha
adc
xor
mov
test
jo
inc
scas
pop
jbe
or
daa
jns
scas
and
mov
adc
enter
or
jne
enter
xor
or
(bad)
loope
mov
pusha
mov
cmp
fs
inc
mov
dec
dec
es
dec
es
dec
jo
in
ss
push
movs
in
in
in
xchg
mov
jl
ins
les
call
inc
and
(bad)
call
ret
jnp
add
xor
add
mov
xchg
inc
out
test
push
out
jl
ins
(bad)
mov
mov
daa
xchg
xchg
mov
xor
and
dec
jb
lds
xor
rcl
mov
pushf
punpckhbw
test
fcomp
dec
push
aam
add
inc
mov
or
lods
and
fild
clc
mov
cwde
inc
jmp
enter
aam
inc
loope
push
jge
loopne
hlt
mov
in
pusha
add
in
psadbw
and
xchg
push
adc
jl
(bad)
fild
test
push
iret
sub
dec
cmp
jo
inc
jl
aad
mov
cmc
pop
mov
jp
fadd
jmp
jg
or
or
outs
jb
dec
pop
push
movs
jp
inc
int
add
inc
jns
sbb
xor
xchg
(bad)
or
sbb
push
pop
xor
loopne
jns
or
daa
jecxz
adc
pop
sub
mov
mov
imul
sbb
sub
xor
pop
loopne
dec
rcl
bound
lock
pop
pop
jne
mov
pop
dec
push
cmps
xor
inc
mov
and
outs
dec
daa
scas
out
mov
ins
xor
jmp
pusha
fs
outs
dec
push
or
inc
mov
sub
fistp
mov
dec
add
(bad)
dec
bound
adc
xchg
out
ds
dec
stos
fstp
jp
dec
iret
sub
fsubr
sub
nop
sahf
mov
ds
dec
imul
mov
sbb
rol
stos
les
bound
jns
xchg
sub
push
les
add
ret
mov
call
inc
adc
das
inc
aam
and
sahf
add
sbb
xor
mov
and
or
jmp
cmp
retf
fs
fdiv
and
loope
repz
pop
fsubr
add
or
fiadd
xchg
pop
add
add
add
sub
mov
push
adc
in
push
mov
inc
or
ins
push
adc
stos
mov
(bad)
sub
inc
or
or
out
pop
xor
pop
sub
dec
xchg
into
add
in
nop
xchg
imul
js
add
or
dec
mov
js
hlt
aad
(bad)
dec
rol
cmp
jge
mov
mov
out
mov
or
add
mov
mov
and
dec
jne
pop
push
jge
sub
sbb
pushf
aas
and
loope
fist
jmp
clc
lods
fidiv
sbb
xor
loop
xchg
jbe
mov
or
into
test
push
add
pusha
and
enter
clc
mov
pop
pop
adc
inc
daa
pop
shl
es
retf
int
shl
push
ins
(bad)
or
mov
push
push
add
mov
cs
(bad)
frstor
popa
mov
cli
sti
or
cli
pusha
std
pop
cmps
and
adc
adc
adc
cmp
fwait
int3
gs
jo
sbb
adc
out
outs
into
push
cmp
loop
jne
pop
movs
mov
je
push
loopne
push
(bad)
xchg
out
push
sbb
jl
cli
or
mov
out
es
pop
cli
test
add
cdq
neg
sbb
xor
adc
xchg
jnp
add
or
(bad)
cmp
push
push
imul
mov
or
mov
loop
jb
fcom
popa
das
sbb
ins
seta
or
fcmove
xlat
adc
xchg
or
ret
icebp
push
jo
cmc
xchg
test
stos
xor
retf
jmp
or
mov
test
(bad)
(bad)
mov
sbb
ror
cmc
clc
push
ror
push
in
inc
ror
adc
sub
aaa
inc
sbb
inc
mov
sbb
sub
rcl
pop
ret
movs
xchg
xchg
mov
adc
xor
fcom
xor
or
mov
sbb
fmul
mov
mov
adc
lods
call
popf
sub
aas
pop
test
adc
je
ret
sbb
inc
(bad)
in
cld
out
ss
cmp
xor
mov
mov
adc
xor
(bad)
cmp
es
add
lds
sub
test
fmul
cmp
add
clc
shl
mov
or
ja
test
and
or
(bad)
ja
leave
mov
jp
add
scas
nop
sbb
jge
mov
test
add
and
das
mov
cmp
movs
repnz
cmp
iret
cmp
or
cmp
pop
gs
push
cmp
in
xchg
fisttp
loope
cmp
push
scas
pop
mov
cmp
pop
cmp
sub
cmp
adc
cmp
and
fmul
repz
mov
jle
add
in
stos
adc
mov
in
sbb
sbb
cdq
jne
(bad)
adc
inc
ret
mov
push
jns
out
hlt
leave
add
push
rcr
mov
sbb
adc
ins
sub
pop
add
test
xor
inc
adc
mov
add
add
into
into
jle
cmp
(bad)
jl
jmp
cs
cmp
je
es
cmp
jne
ror
jb
mov
stos
in
mov
mov
add
mov
push
(bad)
jge
add
adc
inc
ins
out
add
push
and
sbb
lock
xchg
mov
aad
test
sbb
adc
imul
rol
add
ins
lods
add
mov
mov
inc
add
or
xchg
jecxz
and
dec
or
mov
or
dec
leave
and
or
or
cmp
test
sahf
cmp
push
leave
inc
add
cmp
cs
pushf
push
cmp
cmps
mov
or
pop
adc
dec
jl
idiv
mov
mov
fdivr
push
pop
inc
push
cmps
stc
and
lock
ja
loopne
jl
push
pop
in
stc
in
pop
inc
or
das
mov
ret
or
xchg
outs
(bad)
pop
or
sbb
or
inc
sub
stc
cs
and
or
sbb
inc
pop
inc
hlt
cmp
(bad)
fild
aam
dec
or
jns
pop
push
sub
fs
imul
xbegin
cmps
or
xchg
dec
or
or
pusha
scas
imul
sbb
scas
je
pusha
mov
push
scas
pmulhw
xchg
and
(bad)
jne
pop
ret
imul
and
jno
push
inc
retf
push
cmp
rol
sbb
pop
inc
push
xor
call
sbb
gs
mov
add
fwait
push
retf
push
adc
sbb
adc
test
xor
daa
ret
push
sbb
(bad)
mov
sub
test
adc
call
enter
enter
aaa
or
loopne
lods
daa
in
and
xchg
xor
mov
imul
push
pop
jmp
mov
xor
enter
or
imul
cwde
sbb
cdq
ret
jbe
inc
push
jp
mov
popa
pop
add
adc
ins
sti
mov
mov
or
xor
mov
add
sub
cmp
jo
adc
in
in
jmp
cmp
cmp
jo
shl
push
add
dec
mov
or
sub
retf
lock
adc
movs
xor
inc
push
aas
fs
xlat
div
mov
push
nop
adc
sbb
aaa
jbe
pusha
jmp
xor
lods
mov
cs
retf
adc
out
mov
test
shl
mov
sbb
push
sub
cdq
jb
or
or
dec
sbb
and
mov
jmp
pop
push
and
pusha
fistp
add
xchg
mov
sub
or
add
pop
cmp
jb
dec
mov
dec
jl
stos
push
dec
add
inc
pop
sub
shr
xor
jne
inc
cmp
jae
mov
rol
adc
mov
sub
mov
icebp
and
sbb
popa
sub
test
cli
push
fadd
nop
rol
mov
mov
cmp
mov
push
pop
pop
pop
mov
sbb
or
pop
leave
stc
cmp
cmp
and
mov
pop
dec
push
imul
or
leave
jg
test
cmp
aam
pop
inc
dec
cmp
lods
xchg
aam
xchg
mov
push
add
jl
mov
inc
add
push
cs
fbld
push
push
mov
add
fisubr
inc
xchg
adc
mov
adc
ins
add
pop
pop
add
dec
and
add
ins
or
sbb
push
pop
xor
add
loop
add
movs
ja
adc
fist
or
add
add
into
fiadd
sar
xchg
or
int
jb
rol
pop
sbb
dec
mov
or
xchg
xor
xor
movs
loop
sbb
imul
cs
test
pop
pop
fidivr
pop
mov
or
cmp
push
ins
jne
or
sub
in
inc
je
sub
add
jge
mov
add
add
jns
xchg
rcr
sbb
test
loope
hlt
xchg
out
std
jmp
outs
pusha
or
add
inc
mov
and
xor
dec
loopne
push
add
enter
or
in
or
retf
mov
loopne
lock
enter
hlt
inc
inc
imul
and
sub
fs
sub
adc
inc
sbb
and
scas
sbb
xchg
jne
cs
add
and
and
rol
adc
sbb
jno
mov
inc
jp
sub
adc
adc
mul
dec
stos
test
in
ror
mov
repnz
jmp
inc
popa
retf
cmp
inc
add
add
pop
xchg
xchg
sahf
movs
push
and
xor
mov
pop
std
add
sbb
gs
cld
mov
adc
or
add
pop
push
inc
add
sbb
add
out
and
ror
add
mov
mov
repnz
adc
pop
stos
adc
push
mov
dec
into
lahf
cli
vmovaps
mov
add
jmp
call
cmp
aaa
inc
pop
ja
push
out
ret
dec
and
or
js
pop
jbe
fs
xor
pop
icebp
rol
pop
mov
mov
pop
lods
or
dec
or
dec
fld
jae
in
into
pop
ret
in
mov
and
add
sbb
outs
dec
dec
dec
das
sahf
mov
sub
mov
cs
xchg
loope
add
add
mov
add
or
push
pop
popf
iret
xchg
mov
mov
test
sbb
or
pop
jecxz
cmp
pop
push
(bad)
and
inc
mov
inc
add
and
pop
jb
jno
xchg
xchg
ror
int
or
inc
inc
dec
daa
or
and
into
addr16
push
call
sbb
nop
mov
ins
mov
xlat
xchg
test
dec
add
int
sub
and
test
jge
push
outs
ins
adc
and
in
(bad)
js
inc
sbb
mov
sbb
test
fwait
sbb
shr
jg
das
(bad)
fadd
or
sub
jns
int
mov
adc
adc
push
add
add
scas
adc
dec
push
or
pop
rol
sbb
aaa
and
mov
or
imul
sbb
mov
jl
mov
xchg
lea
jecxz
push
ins
test
sub
(bad)
int
rol
or
xor
add
or
and
js
sar
push
mov
adc
xchg
add
cmp
sbb
(bad)
fisttp
outs
cmp
and
inc
mov
(bad)
mov
add
imul
inc
xchg
or
sbb
aaa
mov
push
push
js
and
dec
adc
adc
sbb
js
je
or
push
jne
ror
mov
sbb
mov
sbb
dec
fsubr
mov
mov
sbb
mov
in
inc
xor
pop
xchg
inc
xor
xor
xchg
push
sbb
or
sbb
sbb
jno
adc
push
sbb
pop
mov
inc
push
or
ja
xchg
in
jmp
dec
dec
xor
and
rol
push
sub
bound
dec
adc
xor
sub
nop
std
adc
jnp
pop
jp
dec
adc
test
outs
pop
mov
dec
shl
cmp
add
mov
xor
or
add
adc
shr
push
jo
call
lock
sub
inc
or
pop
jl
les
retf
imul
loopne
add
dec
sbb
add
and
es
mov
sahf
push
dec
pop
dec
mov
hlt
jecxz
xchg
push
sub
(bad)
sbb
mov
mov
or
push
(bad)
sbb
lock
je
push
mov
jecxz
pop
jo
sub
stc
sub
dec
pop
adc
daa
call
push
out
push
scas
(bad)
jne
jmp
jns
add
inc
xchg
inc
xor
iret
xor
inc
rcl
mov
pop
inc
fsub
js
sbb
lea
or
rcl
mov
les
mov
cmc
or
push
xchg
mov
mov
pusha
xchg
test
mov
fmulp
xchg
test
inc
dec
push
aam
push
aas
clc
and
sbb
lahf
adc
push
jmp
inc
and
sbb
and
push
pop
in
add
and
add
(bad)
adc
dec
xchg
cdq
sbb
gs
fidiv
retf
adc
ret
rcr
push
adc
fwait
add
add
dec
loopne
sub
jle
popf
jns
cmp
jo
inc
add
add
jbe
pusha
mov
cld
pusha
lods
retf
dec
mov
add
dec
ins
sub
cmp
out
in
cwde
xor
add
arpl
adc
das
adc
add
fldcw
movs
sti
lods
cld
add
inc
adc
(bad)
and
data16
sbb
fiadd
push
mov
adc
mov
inc
ss
mov
(bad)
push
and
ins
lock
push
adc
rcl
xchg
movs
std
mov
pop
xchg
xchg
dec
cmp
add
nop
cmp
xchg
xor
mov
and
outs
jnp
test
mov
or
clc
add
out
inc
cmp
pop
push
or
cmp
mov
(bad)
ret
push
(bad)
xchg
push
or
or
mov
out
ror
add
mov
aas
xor
ds
cmp
test
adc
cmp
call
fldz
loopne
xor
leave
cmp
mov
jg
cmp
or
je
add
mov
mov
inc
jmp
mov
and
jl
add
mov
sbb
sbb
mov
movs
loopne
xchg
push
push
adc
push
pop
mov
dec
pop
psubw
push
out
push
push
sbb
jns
sub
add
cmp
fsubr
jmp
adc
or
push
in
(bad)
pusha
imul
js
loopne
jno
ret
inc
inc
mov
test
push
and
mov
bound
leave
in
cmp
or
int
cmps
xchg
cmp
not
add
xor
push
xor
ret
dec
pop
push
jne
mov
(bad)
adc
mov
add
or
dec
sar
fsub
cmp
add
jecxz
dec
sar
xor
push
xchg
or
xor
adc
loopne
in
mov
add
cmp
adc
dec
fisub
nop
and
sub
push
push
sahf
fldcw
repnz
dec
test
xchg
dec
jae
xchg
ss
xor
push
sub
and
adc
int3
push
push
mov
mov
mov
jo
inc
fmul
mov
inc
and
sbb
xchg
pushf
adc
popa
inc
xchg
jnp
add
inc
and
mov
inc
std
fcom
pop
inc
das
dec
mov
shl
adc
push
rcr
test
cmp
xchg
sub
sub
inc
dec
pop
call
dec
or
les
addr16
neg
dec
lods
mov
jmp
push
mov
sub
and
push
push
or
add
push
sahf
pop
scas
add
push
push
hlt
dec
pop
jns
xor
push
add
or
mov
loope
das
in
sbb
mov
in
mov
xlat
adc
push
mov
in
jne
sub
hlt
or
cmps
nop
inc
pop
mov
test
adc
and
clc
loopne
adc
int
call
mov
stos
jge
push
fidiv
add
fadd
ret
mov
add
retf
out
add
fdivr
xchg
ret
test
fcomp
inc
sbb
sub
push
mov
sub
or
les
enter
aam
mov
or
cmps
xchg
lock
sbb
adc
sub
xor
dec
arpl
imul
nop
mov
jae
out
iret
out
mov
(bad)
cmp
lea
jmp
lods
mov
lea
mov
mov
loopne
xchg
or
les
loopne
or
dec
or
mov
jge
jb
jne
cs
scas
cmp
push
movs
xchg
aas
pop
inc
jmp
lea
movs
inc
sub
mov
cmp
retf
adc
fst
dec
push
fcmove
ret
push
sbb
mov
mov
clc
or
pop
push
jmp
nop
jno
add
pop
loopne
outs
pop
sub
mov
dec
xor
nop
out
lock
mov
push
mov
and
aam
cmp
sbb
push
fld
(bad)
cmp
lods
clc
add
cmc
inc
out
push
sub
imul
cdq
dec
and
aam
(bad)
js
mov
push
mov
xor
das
add
loope
dec
mov
in
push
scas
rcl
mov
add
adc
mov
add
loope
lea
icebp
sub
inc
add
lea
scas
lods
aas
dec
pop
mov
mov
cwde
mov
xchg
out
xor
add
mov
paddb
outs
jb
xchg
pop
hlt
je
outs
add
sub
mov
mov
dec
js
pop
jmp
pushf
movq
daa
and
dec
or
pop
cmp
cli
sub
in
or
(bad)
fldcw
test
loopne
jo
or
loopne
xor
mov
push
mov
pop
and
pop
or
call
or
fisttp
push
mov
xchg
movs
and
in
or
loopne
xchg
sbb
and
adc
inc
mul
or
in
stos
or
imul
push
lds
lock
icebp
das
or
or
add
push
pop
out
xchg
adc
jl
xor
cwde
sbb
mov
repz
push
jecxz
lods
mov
es
mov
adc
out
mov
xor
xchg
aam
ret
pushf
inc
jmp
pop
and
ret
adc
cmp
jl
xchg
sbb
jge
test
call
repnz
sub
xchg
das
ins
pop
xchg
add
adc
cmp
int
cdq
repnz
add
daa
add
or
or
push
in
gs
lods
push
push
outs
scas
or
data16
pop
psubusb
dec
out
popf
test
mov
lahf
je
ins
pushf
mov
addr16
xor
aam
add
or
xor
push
xchg
loopne
push
(bad)
lds
popf
(bad)
dec
sub
push
jne
sub
fs
ds
and
xchg
loopne
dec
xchg
or
sub
and
adc
push
mov
sub
add
inc
lock
lock
inc
(bad)
jo
or
mov
loopne
inc
cld
rcr
int
inc
dec
push
push
jg
fcom
mov
out
push
or
in
sub
jmp
mov
out
loopne
in
mov
scas
jo
or
or
out
jge
dec
aaa
test
call
mov
invd
push
jne
xor
add
add
add
sub
xlat
adc
cmp
xor
cmps
xchg
sub
popa
and
mov
add
mov
rol
xchg
in
adc
lea
xor
sbb
mov
dec
sbb
into
pop
mov
outs
sub
mov
and
cmp
or
sbb
cmp
adc
stos
jne
xor
dec
cmp
cmp
jbe
cmp
jbe
mov
xchg
mov
retf
lea
mov
pop
push
fmul
add
loope
xor
ds
pop
clc
cdq
cmp
enter
fimul
test
(bad)
sbb
mov
sti
dec
pop
push
adc
dec
mov
inc
nop
jne
or
mov
cmp
push
mov
(bad)
jne
push
aad
es
dec
in
xlat
lock
(bad)
push
mov
and
sub
mov
test
add
imul
ret
cmp
mov
vmptrld
das
or
aaa
pop
dec
stos
push
cmp
pusha
xor
mov
ret
and
aam
mov
xchg
inc
cli
jbe
aas
pop
inc
cmp
sbb
pop
(bad)
jmp
clc
in
nop
push
xor
add
mov
mov
loop
jbe
pop
mov
mov
or
ss
push
jmp
popa
sbb
pop
retf
ret
cmps
jmp
lea
mov
retf
int3
sbb
mov
sbb
addr16
add
loop
ins
loop
dec
popf
push
in
mov
lea
mov
cmps
lods
xor
jo
add
or
fnsave
xor
mov
enter
sub
cmp
sub
mov
add
mov
fcom
cdq
sbb
popf
mov
dec
and
lock
mov
ret
popa
mov
add
mov
or
ja
and
mov
mov
pusha
in
xchg
jmp
aad
or
adc
dec
cs
xchg
sbb
cld
adc
push
sbb
aam
cs
xor
icebp
into
lea
cmp
es
sbb
dec
and
in
call
sub
and
add
repnz
cmp
fisttp
jp
(bad)
sar
cmps
mov
cs
add
fsubr
jmp
xchg
adc
add
sbb
sub
push
jmp
add
(bad)
in
jp
adc
add
test
xor
popa
push
popa
pusha
pop
dec
nop
lea
pusha
push
call
stos
jno
pop
dec
adc
inc
xchg
mov
ins
push
in
data16
mov
add
or
adc
jnp
add
loopne
pop
and
or
and
mov
jl
loopne
mov
or
mov
adc
(bad)
test
pop
rep
mov
in
push
inc
lds
xor
pop
mov
xor
dec
dec
push
rcr
in
lahf
enter
enter
or
push
jb
int3
int3
adc
jge
and
inc
mov
pop
pop
popa
popa
jmp
and
xor
fisttp
inc
inc
pop
inc
mov
jp
mov
mov
cmp
test
neg
fnop
add
adc
in
cmp
cmp
ins
daa
test
add
mov
and
stos
test
xor
mov
test
sub
adc
mov
lahf
dec
pop
xchg
arpl
inc
sbb
outs
mov
loope
test
inc
aaa
scas
ror
rol
or
xor
ins
lds
or
inc
sub
cmp
dec
and
fcom
inc
sbb
out
lock
adc
or
pop
sub
push
imul
mov
bound
and
rcr
sub
hlt
add
or
inc
inc
jne
sbb
rcl
and
lods
cdq
mov
mov
inc
lods
or
dec
and
cmp
out
loop
fiadd
dec
sbb
scas
xor
call
mov
pop
jle
or
js
pop
push
loope
call
inc
push
inc
and
pusha
cmps
pop
cmps
xor
pop
push
iret
xchg
nop
shl
adc
or
jnp
cmp
leave
adc
sbb
(bad)
aam
xor
dec
pop
neg
pop
movs
mov
sti
sbb
pop
inc
inc
and
and
les
imul
mov
je
push
cmp
dec
ret
pcmpgtw
pop
push
dec
mov
mul
add
adc
fcomp
xchg
or
cmp
pusha
daa
dec
ins
ror
adc
add
push
dec
dec
out
sub
imul
sahf
or
push
push
call
cmp
sbb
push
retf
lods
push
sub
sub
or
add
mov
push
int3
mov
outs
outs
cwde
cmp
xlat
mov
xor
jle
add
push
sbb
es
neg
adc
push
sbb
fcom
cmp
mov
inc
mov
cmc
bound
sti
daa
fst
mov
out
push
adc
pop
clc
jne
loopne
pop
jge
push
add
mov
fidivr
cmp
adc
adc
xor
or
push
xor
xchg
clc
clc
push
pop
inc
nop
add
and
add
arpl
adc
jmp
or
pop
out
cmp
pushf
int3
popf
or
push
push
push
retf
cmps
push
rol
cmp
call
add
ins
ret
jle
adc
jge
cmp
pop
xor
push
fisubr
cld
dec
jp
imul
jmp
dec
pop
enter
push
(bad)
popa
dec
jnp
fcmovb
mov
sub
rcl
dec
imul
or
pop
mov
icebp
pop
cwde
add
sub
rol
and
addr16
sbb
rcl
cs
ret
push
cmp
ret
rcr
loop
les
loopne
loopne
push
daa
push
add
mov
add
out
stos
xchg
push
sub
or
inc
sbb
repnz
mov
sbb
add
or
mov
pusha
add
mov
or
sub
sbb
test
sbb
push
cwde
aas
push
mov
push
std
pop
imul
push
cmp
jbe
lock
mov
and
adc
jg
mov
in
mov
mov
test
pop
xchg
enter
cmc
xchg
fsub
jl
mov
and
loope
or
cmc
mov
(bad)
aad
fmul
pop
(bad)
(bad)
dec
add
int
in
sub
xor
cli
mov
lock
mov
inc
mov
inc
cmps
cmp
xchg
ins
push
jl
cmp
or
add
ins
xchg
mov
lds
xor
push
jnp
cli
rcr
test
and
loope
mov
retf
sub
push
das
jp
sub
inc
sbb
mov
outs
cmp
xlat
sbb
cmp
pop
adc
dec
fcom
daa
in
add
lods
sbb
inc
add
sbb
push
scas
loope
rcl
cmp
or
out
test
push
loope
or
loop
hlt
or
cmp
adc
mov
(bad)
dec
fistp
mov
jl
mov
or
cmp
repnz
xchg
data16
mov
add
jo
add
fsub
fnsave
mov
or
movs
push
cld
movs
ss
cmp
push
dec
fnstsw
std
mov
adc
jmp
or
mov
inc
cli
sti
jne
inc
cmp
jle
mov
cmp
xchg
in
mov
aam
mov
push
fld
es
pop
cmp
retf
add
movsx
xor
dec
(bad)
call
add
pop
repnz
jbe
push
cld
je
js
jae
push
push
mov
and
sbb
or
imul
test
hlt
mov
mov
jbe
lea
arpl
mov
push
ins
js
aaa
loopne
jne
inc
add
loopne
push
scas
cmp
ins
sub
or
jnp
and
pusha
or
jmp
cmp
xchg
sti
pusha
jl
add
sbb
mov
mov
sbb
icebp
jbe
and
sbb
inc
push
inc
sub
or
and
or
cmc
ss
mov
xchg
push
cmp
push
push
jle
xchg
add
aaa
shl
inc
nop
jb
mov
test
pop
dec
pop
icebp
inc
mov
and
inc
test
dec
ror
mov
dec
dec
fisub
sub
add
dec
dec
dec
dec
add
push
pop
mov
dec
dec
or
or
jnp
or
jbe
aaa
aaa
aaa
or
jno
jmp
push
jmp
por
aaa
aaa
aaa
adc
pop
adc
pop
adc
push
adc
dec
aaa
aaa
aaa
aaa
adc
dec
adc
aas
pop
jmp
aaa
aaa
aaa
aaa
sbb
xor
jmp
sbb
es
aaa
aaa
aaa
sbb
and
pop
pop
jmp
aaa
aaa
aaa
aaa
and
or
jmp
and
pop
xchg
psubq
add
test
test
adc
or
adc
cmp
push
dec
cmp
repz
push
push
pop
data16
jbe
cmp
repz
mov
iret
mov
mov
mov
repz
repz
fsub
out
out
cmp
lock
cli
inc
pop
out
sahf
or
adc
and
outs
clc
inc
add
push
pop
or
and
or
or
push
movups
mov
call
sbb
sbb
sbb
push
pop
and
and
aas
inc
cmp
xchg
xchg
rcr
or
loope
sbb
add
sbb
jecxz
mov
enter
inc
ror
(bad)
mov
movs
dec
push
(bad)
pop
mov
lea
movs
enter
adc
dec
cmp
mov
or
leave
sbb
xor
or
sub
push
dec
inc
shl
mov
sub
or
fst
push
pop
ffree
adc
bound
(bad)
adc
and
push
push
cmp
scas
cwde
clc
dec
jb
das
retf
adc
cmp
pushf
sub
aas
(bad)
nop
iret
adc
push
adc
add
push
sub
sub
icebp
or
dec
pop
sbb
inc
scas
dec
lahf
adc
and
repnz
inc
xchg
sbb
add
cmp
push
pop
mov
and
xor
daa
jb
adc
mov
mov
or
add
(bad)
or
jmp
adc
aad
add
or
int
add
stc
add
add
inc
popa
pop
push
jbe
jnp
inc
pop
leave
inc
inc
clc
jmp
dec
adc
inc
dec
repnz
push
mov
add
inc
clc
lahf
test
pop
adc
rol
xor
or
iret
xchg
out
add
sar
rcl
loopne
add
aad
mov
sar
adc
cmp
add
mov
call
pop
jbe
xlat
and
mov
sahf
dec
mov
adc
dec
ds
xchg
mov
push
push
push
or
loopne
inc
js
mov
or
fild
adc
and
sub
inc
add
pop
dec
or
pop
add
cmp
cmps
jle
add
inc
inc
mov
xor
test
xor
pop
test
cmps
pop
adc
adc
mov
daa
and
dec
mov
ret
xchg
das
xchg
pop
sbb
movs
cmps
or
mov
outs
or
inc
mov
cld
push
setns
or
cld
je
push
xor
dec
dec
shl
rcr
or
pop
or
ja
call
bound
mov
xchg
or
sbb
adc
adc
push
dec
ficom
and
or
sbb
sub
cld
inc
adc
in
(bad)
xor
mov
xchg
das
xor
or
xor
ret
inc
push
xchg
mov
xchg
sbb
push
lea
inc
xchg
push
pop
mov
std
push
add
xchg
imul
mov
popf
push
retf
sub
inc
data16
or
(bad)
dec
cmp
push
(bad)
mov
push
test
pop
xchg
jbe
movs
movs
jmp
xchg
gs
fdiv
fcom
xor
loopne
test
add
retf
enter
test
jne
es
aad
push
inc
scas
test
out
cmps
mov
push
shl
dec
xchg
fmul
ds
int3
stc
fadd
shl
dec
pop
shl
int3
enter
nop/reserved
mov
mov
jmp
inc
mov
inc
icebp
and
pop
jne
popa
shr
(bad)
jbe
dec
and
add
rol
xchg
sbb
inc
xor
retf
mov
mov
add
push
add
mov
cmp
and
and
enter
cld
pop
sbb
mov
pop
repnz
sbb
add
sbb
popa
pop
xchg
xchg
pop
mov
add
push
call
add
jmp
out
cmp
add
xchg
add
pop
cld
in
sbb
iret
xor
enter
shl
pusha
xor
xor
repz
std
enter
add
retf
push
enter
pusha
repnz
retf
idiv
add
pusha
stc
xor
sti
std
sbb
movs
fs
shl
sbb
movs
mov
adc
jle
push
inc
mov
sbb
add
cdq
add
pop
arpl
cmp
mov
sub
pop
jmp
xor
ret
xor
fmul
lds
jo
loope
lock
sub
xchg
add
add
loop
pop
pop
inc
or
cmova
mov
inc
xor
add
in
or
call
push
in
inc
sub
and
push
mov
shl
pop
adc
inc
arpl
mov
das
pop
sub
pop
(bad)
pop
mov
jp
inc
ret
ja
xor
mov
sbb
sub
imul
pop
push
fcomp
sub
dec
movs
pop
jmp
xor
mov
mov
pop
shr
fistp
repz
js
cmps
(bad)
push
add
add
fdivr
push
add
inc
lea
cmp
mov
xor
aas
(bad)
paddsw
ds
dec
mov
cs
or
aas
add
outs
pop
or
mov
fidivr
pop
add
test
cmp
pop
add
dec
je
cmp
fs
mov
xchg
adc
xor
add
and
mov
add
js
out
cmp
std
dec
out
adc
push
dec
adc
call
lahf
scas
in
add
xchg
jo
outs
outs
xor
xor
jb
jne
in
fmul
push
sbb
xor
daa
les
mov
call
in
lea
loopne
xor
test
adc
add
pop
jl
add
jle
mov
add
push
or
cmp
pop
jne
fsub
push
jmp
cmp
je
ficom
call
jl
loop
scas
cld
les
jmp
scas
shl
mul
pop
cmp
dec
mov
jns
fdivrp
lea
lock
(bad)
in
mov
in
je
jecxz
adc
sbb
dec
adc
jle
xlat
loop
push
cli
push
mov
inc
int3
mov
(bad)
(bad)
js
and
dec
pusha
mov
cmps
adc
cmps
hlt
push
iret
pop
push
sub
rcr
inc
push
add
mov
div
mov
sbb
cmp
xchg
test
(bad)
mov
lock
and
add
call
push
rcr
xor
cmp
shl
retf
in
xor
data16
lds
cmp
sbb
adc
arpl
pushf
jl
jmp
inc
sbb
push
or
xor
cmp
xor
out
pop
pop
inc
add
pop
scas
and
xor
and
sbb
add
cmp
sbb
sub
sbb
pop
dec
sub
and
xor
outs
adc
sub
sbb
scas
in
sbb
enter
or
mov
push
inc
xor
in
jmp
ror
arpl
or
pop
add
inc
stos
stc
int3
cmp
cmp
sbb
mov
xor
retf
add
xchg
icebp
mov
cmp
das
add
xor
cmp
jle
mov
xor
dec
je
jns
ficomp
js
xor
jae
push
inc
pop
inc
out
adc
mov
sbb
pop
movs
xchg
ror
dec
cmp
pop
test
clc
movsx
mov
stos
sub
dec
icebp
jbe
inc
aam
lea
pop
sub
inc
les
mov
xor
(bad)
lods
(bad)
sub
in
or
jle
xor
shl
inc
add
add
sbb
aaa
lea
jp
xor
je
in
dec
xor
pop
push
xchg
inc
jbe
pop
aas
xor
pop
pusha
jb
retf
inc
add
mov
ins
cmc
inc
jo
pop
or
js
jl
jg
or
inc
cdq
test
cdq
mul
test
cwde
es
movs
test
add
ror
nop
and
cmp
cmp
mov
jmp
or
adc
sbb
pop
inc
push
movs
xor
add
mov
nop
in
sub
je
jl
and
aas
enter
push
inc
cmp
jl
sub
repnz
outs
mov
(bad)
mov
aaa
cmp
jne
inc
cmp
xor
jg
mov
je
out
xor
xor
sbb
iret
inc
inc
bound
add
pop
jle
clc
jl
jmp
and
enter
cmp
push
xchg
pop
add
aad
mov
push
(bad)
push
iret
or
mov
cmp
jne
(bad)
not
mov
pop
sbb
arpl
and
adc
sub
add
push
hlt
push
sti
inc
mov
sti
and
je
sub
neg
inc
mov
loope
cmp
inc
jmp
(bad)
xor
aaa
mov
jo
fwait
xchg
js
mov
mov
or
mov
xchg
adc
sbb
xor
mov
jecxz
cmp
into
repnz
sub
xchg
add
sbb
popa
aas
xchg
js
inc
sbb
loopne
cmp
jge
cli
ret
cmp
jl
xor
push
inc
jle
daa
mov
inc
add
push
in
add
jle
ret
neg
pop
pop
sbb
xor
outs
rcr
imul
mov
hlt
mov
(bad)
sar
add
fild
jo
pusha
sub
sub
imul
adc
mov
loopne
mov
add
pop
jne
push
inc
pop
inc
or
add
add
(bad)
jp
jo
push
daa
cs
or
mov
jge
push
add
(bad)
stos
push
clc
mov
rol
dec
ret
pop
outs
sbb
adc
pop
push
xchg
je
jecxz
cmp
das
leave
adc
mov
or
ror
aam
sub
dec
and
nop
inc
ja
adc
xchg
ficom
(bad)
call
push
add
retf
repz
pop
das
out
(bad)
jle
cmp
cmps
mov
dec
je
jb
and
call
rcr
pop
push
cmp
cmp
icebp
dec
stos
icebp
clc
add
imul
aas
adc
fs
adc
add
ins
mov
sub
out
gs
mov
inc
es
cmp
jmp
and
(bad)
scas
dec
aad
jge
add
mov
jmp
test
lds
pop
dec
jecxz
lods
mov
xor
retf
in
mov
mov
xchg
and
mov
mov
jecxz
cwde
pop
mov
neg
call
test
jne
and
or
cwde
and
mov
test
jecxz
or
and
cmp
loop
push
mov
add
pop
push
shl
cmp
inc
pusha
lds
push
jecxz
ror
and
popa
or
cmp
das
or
sbb
fadd
dec
stos
jb
cs
xchg
rol
adc
mov
jno
fild
jecxz
ror
outs
inc
mov
fnstenv
mov
mov
shr
xchg
mov
push
xor
popf
lods
pop
add
push
popf
cmps
cmc
sbb
dec
xor
nop
shl
jmp
in
mov
push
ret
add
push
and
inc
cmps
mov
stos
pop
pop
clc
adc
xchg
and
icebp
inc
push
inc
or
ss
pushf
xor
mov
sbb
mov
xor
jns
in
add
sbb
mov
clc
xchg
ror
js
sbb
pop
or
sbb
js
sub
icebp
sar
pop
xor
dec
loope
xor
or
and
mov
add
ja
mov
add
add
cmp
push
fcomp
(bad)
dec
xchg
fistp
hlt
and
add
movs
ss
mov
mov
push
sbb
shl
jo
and
call
neg
adc
sbb
push
ss
retf
mov
out
shr
adc
adc
lea
mov
arpl
test
dec
enter
pop
dec
push
lea
retf
imul
enter
or
adc
add
adc
call
xlat
and
add
adc
adc
cmp
pop
jne
repz
lea
push
add
sbb
data16
xchg
ja
(bad)
loope
or
adc
lock
pop
or
mov
or
jecxz
cmp
aam
cmps
push
aaa
pop
movs
mov
jmp
push
paddd
jle
out
dec
ror
sbb
mov
dec
or
sbb
add
sub
add
in
test
jp
hlt
add
add
inc
push
cdq
stos
jno
cld
sub
aaa
call
loope
movs
add
inc
aas
jb
mov
xadd
mov
outs
mov
sub
mov
cmp
dec
push
fcmove
xchg
adc
mov
push
adc
test
pop
mov
outs
mov
push
xchg
test
loop
lea
xor
adc
in
push
adc
fisttp
ins
inc
push
push
push
cmp
push
xor
cmps
sti
pusha
ins
ret
test
sbb
jbe
xor
xchg
inc
push
in
cmps
sbb
mov
push
leave
outs
add
or
and
retf
pop
or
xchg
mov
sahf
pusha
ficom
imul
and
inc
cmps
test
xor
repz
lea
or
inc
sub
xchg
mov
pop
mov
mov
inc
cmp
mov
jl
mul
add
das
fisttp
add
cs
pusha
sub
mov
pop
mov
dec
nop
sub
movzx
outs
fsub
adc
mov
pop
cwde
xor
mov
mov
jne
push
pop
xor
xchg
mov
xchg
ror
xchg
mov
(bad)
and
or
mov
mov
add
inc
or
in
xchg
add
add
mov
mov
popf
or
and
ins
mov
out
mov
xor
jmp
mov
into
jmp
fwait
xchg
add
adc
mov
mov
call
aas
popa
xor
xor
add
sub
jo
sbb
push
add
shl
lock
add
sbb
inc
cmp
jl
sub
fs
push
push
out
jge
or
cdq
push
jae
push
mov
pop
icebp
sbb
aam
sbb
movs
jle
nop
(bad)
pop
add
xchg
xchg
xchg
call
mov
ja
or
jle
add
mov
jmp
xor
idiv
xor
cmovns
icebp
lea
inc
dec
inc
and
push
bound
jl
frstor
pop
mov
sbb
push
fwait
mov
push
(bad)
call
xor
and
shl
or
loopne
fcmovb
out
aaa
ss
xor
push
ret
push
cs
cmp
inc
cmp
push
ret
add
lods
ret
dec
imul
push
(bad)
or
jecxz
adc
push
call
xor
mov
mov
ins
imul
daa
mov
loop
test
test
or
test
or
in
stos
xor
sub
in
mov
movs
lods
test
daa
sub
mov
mov
loope
inc
icebp
ins
inc
cs
sub
repz
add
adc
(bad)
or
shl
js
or
sub
inc
addr16
add
pop
aam
add
test
daa
loopne
int3
xor
cmp
fistp
movs
push
test
outs
pop
xchg
fdivr
jne
mov
push
sbb
pop
jmp
repz
push
(bad)
dec
pushf
inc
out
aam
or
idiv
push
or
jne
push
mov
inc
mov
fsubr
outs
push
or
lea
pop
or
mov
sub
inc
jmp
push
jmp
add
add
jg
add
mov
shr
shl
add
cmp
repz
xadd
add
retf
mov
jne
movs
movs
mov
ins
or
fiadd
arpl
mov
lods
jge
imul
in
or
cmp
adc
or
or
push
sub
mov
fisubr
dec
add
popf
mov
push
cmp
add
adc
hlt
call
adc
add
add
dec
xchg
jo
dec
(bad)
cwde
push
or
pusha
loop
pop
fadd
fst
fldz
fcomp
fnstsw
push
push
(bad)
add
jmp
pop
faddp
and
push
push
cwde
jo
cmp
adc
int3
sub
(bad)
xchg
shl
imul
mov
and
pop
xchg
popa
mov
outs
fs
push
xchg
lock
lock
cmps
adc
mov
clc
hlt
xor
adc
test
inc
pop
stos
pop
aam
je
dec
xor
rol
in
or
movs
das
dec
push
jle
jmp
iret
jge
cmp
add
cmps
jmp
fist
mov
jmp
inc
sub
sbb
adc
js
sbb
push
adc
and
dec
clc
add
jne
cmp
lock
push
test
test
stos
and
loope
add
or
jmp
fld
and
xor
test
sbb
stos
add
dec
repz
xor
shl
dec
sti
xor
fimul
enter
cmp
ror
xor
loopne
in
lock
cmc
aam
xchg
jne
mov
movs
retf
aad
add
daa
shl
test
mov
cli
add
(bad)
hlt
cdq
sub
jbe
aaa
mov
lock
pop
icebp
pop
outs
and
sbb
(bad)
dec
data16
sbb
sub
mov
adc
and
mov
adc
movs
mov
xor
pop
sbb
aam
pushf
mov
sbb
mov
das
stc
adc
push
dec
mov
push
dec
out
popf
lods
push
and
or
mov
cmp
rol
mov
and
(bad)
arpl
mov
add
fs
and
repnz
lock
jmp
push
adc
movs
push
pusha
sbb
pop
or
test
dec
movs
mov
mov
jbe
add
pop
mov
loope
in
cmp
pop
mov
pop
out
mov
add
mov
sub
mov
call
and
push
loop
std
push
adc
mov
mov
adc
loopne
in
add
test
dec
add
fld
dec
and
repnz
cs
mov
jne
lods
push
sbb
jge
xor
push
hlt
adc
dec
add
je
cmp
push
mov
adc
or
and
add
adc
aad
cmp
jl
adc
cmp
push
sbb
pushf
fs
jo
stc
push
lock
jecxz
adc
mov
dec
push
inc
pop
lock
xchg
push
cmps
cmp
or
rol
and
fwait
out
mov
ins
jmp
push
push
push
mov
lock
shld
fcomp
aaa
mov
mov
pop
adc
int3
push
shl
xchg
mov
add
sbb
enter
adc
test
mov
add
inc
cmp
pop
cwde
and
push
sub
push
add
ror
test
add
(bad)
adc
mov
fadd
aaa
adc
(bad)
sbb
push
ds
imul
dec
cmp
pop
lds
jmp
dec
ret
xchg
cwde
repz
sub
xlat
in
xchg
mov
mov
xor
sti
inc
rol
or
(bad)
ffree
fdiv
(bad)
adc
fcom
es
nop
retf
inc
movs
xchg
add
push
jo
add
(bad)
(bad)
loope
adc
push
cmp
jb
sbb
xor
test
jnp
aam
mov
push
xor
mov
inc
popa
push
es
arpl
xor
imul
and
fwait
jnp
iret
xor
and
cmp
push
push
dec
pop
or
push
dec
jbe
and
xor
subps
ror
test
outs
or
xchg
inc
pop
add
adc
aaa
mov
(bad)
adc
js
add
dec
or
dec
inc
mov
pop
hlt
bound
sbb
iret
mov
loope
lea
push
push
or
pop
jbe
inc
rol
pop
stos
scas
cmp
call
test
ja
mov
hlt
xor
je
sbb
pop
mov
mov
mov
loope
out
or
sbb
pop
xor
in
cmp
enter
fild
shl
jl
inc
call
dec
mov
inc
and
push
fadd
arpl
mov
ds
ss
test
(bad)
xor
and
xchg
outs
data16
pop
xchg
lea
das
test
bound
xchg
sbb
xchg
dec
add
jno
xchg
lods
inc
xor
ficomp
mov
push
cmp
xchg
cmp
(bad)
fdivr
mov
(bad)
jnp
nop
pop
adc
pop
das
nop
mov
enter
cmp
xchg
pop
data16
dec
mov
lods
push
pop
repnz
aam
sbb
pop
adc
mov
and
mov
enter
ss
and
inc
add
dec
add
arpl
adc
mul
add
add
ret
leave
pushf
mov
ret
inc
fadd
ins
aas
add
jno
in
pusha
inc
sbb
and
dec
pop
(bad)
pop
pop
(bad)
xchg
inc
sahf
or
imul
inc
or
shl
pop
mov
add
stos
and
mov
stos
or
test
add
sbb
xor
mov
pmaxsw
pusha
in
mov
popa
mov
dec
push
jno
je
loopne
jmp
mov
xchg
xchg
or
xor
shr
mov
sbb
mov
rol
js
lods
lods
es
mov
cmp
ret
push
sbb
es
pop
mov
jle
lock
dec
dec
and
and
or
mov
sub
xor
push
iret
ror
cli
cmc
jmp
jl
mov
push
in
mov
fidivr
push
push
arpl
add
inc
loopne
cdq
adc
mov
xor
mov
adc
mov
cmps
retf
jl
(bad)
sub
pushf
add
jmp
ret
xchg
ret
icebp
push
adc
dec
xor
xor
enter
add
mov
arpl
sbb
cld
aam
stos
mov
push
pop
ret
dec
ja
loopne
xchg
test
and
inc
adc
dec
and
das
pushf
mov
shr
add
fist
lods
sbb
outs
ror
out
loop
fidiv
push
push
mov
jns
mov
icebp
cmp
inc
add
add
sbb
shr
xor
mov
(bad)
bound
fcomp
or
jo
lea
push
or
arpl
add
mov
jae
mov
sar
inc
jle
enter
or
push
repnz
ret
xor
push
push
and
add
mov
or
in
push
mov
pop
or
cmp
scas
xchg
xor
push
and
aaa
sub
sbb
pusha
rcl
sbb
out
fdivrp
dec
stc
bound
or
xor
xchg
mov
mov
jb
jae
test
pop
aam
(bad)
out
inc
dec
dec
or
pop
mov
add
test
pusha
sbb
cmps
jp
push
add
in
sbb
aad
stc
push
das
sub
add
shl
pop
dec
retf
inc
or
scas
xchg
jmp
add
test
sub
in
adc
xchg
clc
and
test
fisub
les
cs
cmps
mov
fmul
fcomp
xchg
mov
xor
popf
dec
ins
sbb
or
lods
sar
rcl
and
int3
aas
and
in
fidivr
xor
sbb
add
nop
lds
jmp
and
sub
mov
adc
call
push
es
sub
push
les
in
std
fs
es
enter
or
push
movs
sar
outs
idiv
sub
pop
out
leave
inc
loop
fiadd
or
leave
icebp
push
mov
loop
jne
clc
call
sub
jmp
mov
pop
push
inc
ins
ret
xor
ds
pop
or
out
sahf
push
push
mov
xchg
adc
adc
jne
or
cmp
fstp
mov
and
adc
jmp
out
add
xchg
(bad)
imul
fs
push
pusha
js
xchg
call
fcmovb
sub
add
repz
inc
or
mov
mov
or
push
and
add
fnstcw
fidiv
adc
das
pop
out
adc
enter
arpl
push
call
rcr
shl
cdq
pusha
cmp
rol
xchg
push
and
add
popf
mov
ss
sub
mov
jmp
cmp
jno
fiadd
fdiv
aam
and
lods
dec
mov
and
sbb
mov
movs
cwde
hlt
mov
mov
pop
jno
in
jle
sub
inc
or
cld
sbb
jne
sbb
iret
cmp
push
push
add
pop
dec
add
test
push
(bad)
out
int3
jge
sub
cmp
pmulhw
repz
cmp
hlt
jge
push
into
mov
shr
scas
icebp
add
and
je
push
add
xor
jns
bound
in
push
jp
fist
lds
ja
jne
aas
mov
add
mov
cmps
js
in
int3
xor
je
test
pop
and
jmp
ja
cmp
push
movs
xor
aad
xor
and
fdiv
xor
dec
dec
adc
dec
adc
push
je
add
(bad)
xor
jmp
mov
je
fs
or
addr16
dec
je
ficom
mov
xlat
and
adc
fbstp
jg
mov
je
fwait
les
pushf
rcr
sbb
push
add
bound
in
and
jmp
scas
pushf
sub
lea
test
push
retf
inc
cmp
arpl
ja
dec
mov
data16
adc
shr
jge
in
ins
and
ja
dec
aaa
add
scas
or
jb
outs
(bad)
cmp
mov
or
loop
xor
cmp
push
cmove
adc
std
mov
sub
jge
push
mov
or
das
lock
jl
mov
int
aam
or
mov
add
bound
jae
rcr
add
test
cmp
adc
loope
inc
pusha
jge
popf
add
dec
sbb
dec
fnsave
ins
gs
es
add
lock
and
pop
push
fs
test
cmps
jo
pop
cmp
adc
dec
cmp
dec
cmp
mov
dec
fsub
test
push
mov
cld
dec
jmp
push
sub
sub
clc
jb
pop
inc
sub
js
pop
not
mov
js
sar
test
mov
mov
les
add
push
pop
sbb
xchg
shl
push
mov
pushf
jne
mov
(bad)
(bad)
popa
adc
daa
cmp
or
and
sub
push
mov
lods
dec
adc
push
mov
test
pusha
and
jbe
popf
xchg
pop
mov
stos
sub
push
stos
pop
cmp
sub
hlt
shl
shrd
cmp
je
inc
sbb
jo
push
in
imul
add
std
or
dec
sub
cmc
push
xor
pop
push
push
mov
cmp
nop
ins
add
movs
cmp
jnp
popf
jl
jo
push
ret
xchg
arpl
pop
je
adc
adc
xchg
cmp
cmps
jo
adc
xchg
mov
cdq
lea
xchg
push
mov
xchg
dec
sbb
fwait
mov
xchg
lods
sbb
adc
or
imul
or
or
jns
inc
push
imul
xor
(bad)
pop
cmp
es
sar
pusha
cwde
leave
adc
outs
push
xor
jge
add
rol
shl
sbb
dec
or
aam
dec
ret
leave
dec
movs
popf
mov
pusha
or
adc
adc
pop
sbb
aaa
iret
out
mul
inc
xor
popf
and
out
es
ins
mov
js
mov
xchg
pop
pop
or
mov
lds
jo
push
movs
pusha
ret
or
pop
(bad)
js
cli
add
cld
or
or
(bad)
rep
mov
inc
icebp
add
dec
sti
cmp
jne
adc
xchg
or
inc
in
lock
mov
or
retf
pop
(bad)
call
les
jl
push
stos
popa
out
and
xchg
adc
xchg
and
mov
adc
xor
lea
pop
cmp
inc
fist
jle
push
aad
inc
xchg
aaa
push
jae
lods
cmp
std
and
mov
jmp
test
mov
cmp
stc
cs
jae
sbb
sub
cmp
loopne
mov
adc
sub
pushf
pushf
jmp
fistp
mov
xlat
enter
xor
pop
outs
mov
pusha
lods
or
les
adc
xor
lds
js
aam
je
popa
pop
movs
int3
and
nop
cmp
sub
cdq
popa
nop
mov
cdq
push
pop
or
push
aad
push
mov
or
pushf
movs
scas
scas
and
loopne
pop
movs
std
pop
ret
push
inc
mov
shl
or
fwait
arpl
add
inc
enter
mov
fmul
in
sbb
sbb
test
push
or
lds
gs
ret
adc
jb
mov
pop
push
inc
xor
arpl
daa
jno
dec
test
test
jae
cs
inc
call
retf
xchg
or
sti
add
sbb
mov
or
sbb
adc
and
xchg
and
jno
jmp
push
fmul
loop
add
les
mov
loopne
push
stc
cld
or
mov
push
and
and
mov
mov
sub
loopne
loop
in
cs
mov
push
pop
pop
mov
or
adc
imul
cmp
push
mov
fneni(8087
cmp
in
call
ret
cmp
add
cmps
icebp
adc
rcl
loope
cmp
push
sub
push
fmul
or
xor
enter
cmp
and
dec
aaa
call
sub
pop
push
inc
inc
js
loop
dec
pop
sub
fs
pop
lea
ror
cmp
bound
lock
and
xchg
or
mov
fistp
pusha
loopne
mov
push
mov
cmp
dec
pop
dec
inc
push
xchg
pop
jns
xchg
mov
sub
and
dec
jl
push
cs
pop
jecxz
pushf
add
inc
add
mov
add
sar
xor
ror
xchg
sub
add
mov
or
xor
add
sbb
xor
pop
mov
mov
pusha
xor
imul
add
aad
(bad)
xor
or
xor
inc
mov
lahf
pop
xchg
mov
sahf
sub
loop
cmp
xor
inc
mov
lds
jle
mov
fs
lods
add
add
push
ds
bound
mov
adc
sub
fstp
sbb
loope
(bad)
cmp
sti
jmp
cmps
add
cmp
jg
mov
mov
cmp
into
shl
add
test
out
je
xlat
inc
adc
pop
movs
mov
push
lods
pop
sbb
cli
add
shl
dec
mov
rcr
int
cmove
mov
push
jg
imul
je
dec
push
(bad)
push
or
leave
std
fs
stos
pop
or
je
cmp
jne
inc
inc
jmp
inc
fs
stos
je
xchg
and
xchg
jmp
cmp
jne
int3
dec
jmp
mov
sbb
xchg
(bad)
adc
not
nop
xchg
jne
mov
pushf
enter
mov
add
je
add
(bad)
xchg
lods
hlt
push
mov
mov
(bad)
adc
inc
lahf
jl
sbb
add
sar
je
xchg
aaa
inc
push
cmp
ret
aam
or
dec
pop
in
mov
inc
jg
pop
in
xchg
test
xchg
add
dec
or
push
mov
xchg
out
add
cwde
mov
xchg
loopne
scas
or
fist
add
mov
les
jne
(bad)
lods
add
push
cmp
inc
jb
push
push
adc
push
call
push
pop
dec
stos
add
push
pop
cmp
or
(bad)
(bad)
enter
outs
into
xor
les
in
aam
sub
pop
pop
mov
adc
movs
loope
mov
add
sbb
es
cmc
push
mov
fisub
shl
aam
out
ret
push
sub
inc
push
mov
mov
mov
sub
retf
jae
shr
jo
push
xor
sbb
push
fld
mov
jbe
fpatan
jle
xor
pop
pop
push
sbb
int
xchg
je
sahf
mov
mov
push
retf
dec
mov
or
or
xchg
xchg
jae
cmp
pop
mov
pop
inc
jne
cmp
in
mov
out
pop
aaa
clc
inc
inc
mov
inc
mov
mov
cmp
or
xchg
or
jnp
popa
push
mov
(bad)
outs
xchg
or
cmp
xor
mov
lea
add
xchg
push
lock
cmp
cmc
add
enter
dec
pop
jp
mov
push
sub
ret
ins
xchg
ss
fwait
xor
aaa
jne
or
aas
push
ins
or
ins
out
pop
in
or
jb
inc
imul
icebp
nop
(bad)
loop
imul
pusha
dec
stc
cmc
call
mov
xchg
mov
gs
push
and
je
push
add
rcl
mov
dec
xchg
ss
adc
xor
test
ins
in
cmp
gs
pop
cmp
xchg
pop
leave
pop
lods
sub
push
jae
sub
je
push
mov
xor
call
sub
adc
add
inc
aad
cmp
les
and
les
sbb
xchg
js
sub
imul
jl
imul
dec
pop
sub
push
data16
and
pop
fistp
fmul
jo
adc
in
push
pop
sub
push
popf
and
adc
pop
movzx
movs
add
add
das
mov
(bad)
in
call
inc
cmp
mov
aad
jl
mov
test
add
mov
add
jg
ret
mov
xor
shr
xor
ja
mov
adc
fcomp
into
not
cld
lea
test
jo
push
fs
popa
or
pop
xor
or
add
sub
push
jmp
add
mov
inc
jp
add
or
inc
push
add
xchg
push
add
inc
add
add
call
jl
add
sub
dec
loop
pop
ins
jecxz
movs
sbb
sub
or
cli
sub
push
fsubr
xor
mov
aaa
add
dec
jo
rol
dec
ror
cmp
add
add
pop
icebp
push
loop
icebp
sub
jecxz
aas
rcl
adc
jb
push
pop
mov
mov
stos
pop
lods
jl
(bad)
mov
push
mov
jmp
push
cmp
loopne
add
jnp
pop
add
pop
jb
add
add
rol
ds
xchg
xor
pop
push
in
jbe
adc
jmp
call
inc
push
test
in
pusha
jns
mov
push
or
xchg
div
or
fcmovnb
cmp
inc
inc
inc
stos
call
ror
adc
dec
or
jns
and
sbb
pop
sbb
ds
xor
and
cmp
int3
sub
mov
mov
test
jmp
pop
in
dec
ret
inc
call
dec
ror
jmp
inc
mov
cmp
jge
cmp
dec
retf
es
xchg
dec
or
dec
xor
mov
shl
test
std
mov
scas
or
sbb
outs
adc
adc
dec
cmp
add
xchg
or
xchg
repz
cwde
ins
add
ja
jg
pusha
je
and
pop
retf
adc
push
rol
lea
iret
test
and
and
sub
sub
sbb
push
sbb
xchg
jnp
loope
pop
push
push
add
sbb
push
push
fist
iret
add
outs
sub
inc
adc
push
enter
retf
and
xchg
in
mov
mov
jbe
inc
xor
imul
pusha
add
xchg
xor
push
adc
sar
jb
gs
fidiv
rol
push
sbb
fs
iret
or
xor
mov
ins
xlat
push
xor
imul
js
sbb
lahf
or
daa
clc
adc
sbb
jl
or
pushf
cmp
xchg
xchg
add
and
jmp
fs
ret
(bad)
adc
adc
mov
punpckhdq
shl
sub
mov
mov
xchg
or
cmp
jl
mov
add
jae
popf
aaa
jnp
and
loopne
rcl
add
(bad)
and
nop
imul
sar
aam
cmp
mov
jmp
das
sbb
pop
je
adc
adc
adc
jne
adc
shl
push
cld
cmp
push
add
push
rcl
addr16
movs
adc
dec
ficom
pop
imul
jp
sbb
sub
dec
pop
sbb
in
fild
in
adc
cmp
jne
inc
push
shl
faddp
add
fs
mov
and
pop
and
cdq
(bad)
jl
push
outs
inc
sbb
jbe
xor
dec
pop
adc
add
dec
add
dec
inc
movs
ret
movs
pop
shl
jo
dec
sub
add
je
cs
dec
mov
adc
or
xor
mov
and
mov
stos
add
inc
inc
scas
or
bound
xchg
jb
mov
jg
in
or
clc
xor
dec
add
mov
or
xchg
adc
pop
cs
pop
add
and
cli
shl
pop
push
mov
sbb
retf
jmp
(bad)
sar
add
or
pop
loopne
sub
les
pop
sub
push
mov
xor
rcl
sub
xor
sbb
loope
nop
into
ins
or
sbb
add
pop
sub
inc
xchg
adc
mov
xchg
sub
movhps
xor
fcmovb
sar
xor
imul
sub
sub
test
mov
mov
jmp
mov
xchg
retf
daa
push
add
addr16
jle
mov
inc
mov
cwd
or
mov
ret
dec
enter
xor
(bad)
enter
retf
int3
jecxz
dec
push
(bad)
hlt
push
test
in
fs
jge
adc
sub
push
or
and
push
ja
push
mov
inc
repnz
push
loopne
shr
push
or
enter
xor
sahf
xchg
rcr
cmp
mov
jl
jmp
imul
rol
cmc
rol
add
or
xor
push
push
sbb
test
test
sbb
pop
sbb
push
add
xor
sbb
xchg
jno
lods
mov
arpl
test
ss
test
(bad)
scas
jl
jg
add
mov
add
dec
stos
inc
gs
sbb
inc
(bad)
sub
in
xchg
outs
daa
xor
push
sahf
ret
jecxz
jne
retf
retf
sub
add
or
jne
fisttp
js
or
out
mov
xchg
sbb
aam
push
fisttp
xchg
add
pop
fs
mov
mov
jle
shl
pop
sub
in
push
dec
push
aaa
cmps
sbb
mov
inc
or
cvtps2pi
jmp
jmp
movs
cmp
rcr
adc
and
ror
sti
sbb
test
cmp
sbb
and
pop
mov
test
or
or
scas
sbb
mov
fs
mov
cld
repz
adc
pop
push
jp
sti
pop
jnp
idiv
imul
add
dec
lods
cmp
push
fld
movs
mov
and
adc
retf
add
dec
inc
stos
lods
out
mov
sahf
sti
cmp
mov
imul
push
call
xlat
fdivr
inc
shl
push
daa
jmp
pushf
call
repnz
cmp
mov
or
add
test
movs
pop
shl
ror
push
ror
sub
sub
push
and
nop
in
push
retf
inc
aas
inc
lahf
pop
aam
aam
(bad)
aas
or
mov
dec
mov
cli
add
mov
(bad)
push
sbb
aam
inc
and
pop
das
mov
fnsave
lds
clc
xor
lods
int
popf
ficom
addr16
push
jo
jmp
adc
adc
lea
add
jb
sti
dec
sbb
daa
add
jae
test
or
push
xchg
loope
add
adc
clc
(bad)
dec
loopne
adc
xchg
fwait
and
out
push
ins
ficom
add
and
and
mov
movs
inc
jne
cs
mov
jle
push
cmp
add
mov
dec
pop
add
adc
add
(bad)
rol
(bad)
xchg
lods
add
xor
dec
nop
or
or
dec
aam
xor
mov
inc
sbb
jmp
add
retf
cmp
ins
and
sub
sub
inc
lea
cmp
add
ror
xor
sub
aaa
popa
mov
ret
in
mov
mov
icebp
adc
je
sbb
lods
adc
xor
cld
jl
fsub
mov
pop
enter
push
cmp
pop
mov
adc
icebp
push
jp
jl
jle
mov
push
call
daa
dec
inc
adc
loope
sbb
or
loopne
or
je
mov
dec
call
adc
or
cdq
nop
idiv
add
or
add
push
sbb
std
cld
fwait
jae
inc
ret
mov
add
nop
mov
nop
sbb
push
lods
or
(bad)
xor
(bad)
push
loopne
push
dec
(bad)
fadd
dec
cld
test
leave
call
sub
xchg
in
jl
mov
or
cmp
ds
cmp
cld
pop
rcr
mov
dec
sbb
push
jne
jecxz
not
sub
xor
int
pop
adc
jns
mov
pop
nop
or
cmp
or
jmp
inc
loope
cmp
fadd
test
push
add
gs
mov
and
sub
test
pop
add
cld
mov
mov
nop
sbb
mov
push
out
jle
cmps
push
inc
sub
mov
mov
rcr
adc
add
int3
pop
inc
add
loopne
mov
add
and
push
(bad)
lock
inc
pop
call
pop
cmp
adc
sub
cld
adc
jl
dec
std
mov
inc
adc
ret
xor
push
dec
aas
inc
ret
mov
pop
or
int
nop
(bad)
or
lds
or
add
push
sbb
cmp
adc
and
or
movs
cmp
nop
jmp
pop
mov
sbb
add
ja
push
mov
push
push
jne
mov
xor
or
popa
or
mov
push
adc
pusha
pop
addr16
dec
pushf
fs
xor
cmps
push
push
xchg
rol
and
push
inc
enter
and
mov
push
ret
fwait
push
jb
push
in
push
test
jl
cmp
cmps
imul
lock
gs
push
(bad)
retf
je
push
sub
mov
cwde
push
xchg
push
scas
rcl
add
movups
mov
(bad)
jmp
out
cmp
jmp
cmp
or
sbb
pop
add
jmp
(bad)
dec
and
jae
sahf
adc
add
(bad)
pop
cmp
js
in
jecxz
mov
jb
cld
push
fmul
cdq
add
adc
pusha
or
rol
jmp
int
movs
or
mov
xchg
repz
dec
js
or
or
xor
adc
jo
call
aam
mov
cwde
mov
cmps
(bad)
lock
fdivr
adc
test
dec
pop
call
push
dec
inc
or
mov
push
popa
movs
or
jmp
js
adc
cs
jb
and
sbb
popa
movs
aad
xchg
adc
mov
sub
sbb
in
test
and
(bad)
adc
jns
pop
inc
fldenv
test
adc
inc
in
out
sti
add
mov
lock
fsubr
adc
sub
xor
inc
pusha
ret
adc
sub
aas
fisub
imul
inc
loopne
in
cmp
mov
sub
add
fmul
inc
int
xchg
mov
xor
enter
sbb
stos
mov
push
icebp
ret
ins
mov
scas
rol
dec
cmc
ret
inc
mov
adc
cdq
push
mov
mov
fwait
(bad)
lock
retf
enter
pop
cmp
or
aam
sbb
inc
cmp
mov
fsub
cmp
add
cmp
or
cmp
mov
cmp
bound
or
or
pop
jno
or
imul
sbb
jae
loope
and
pop
scas
(bad)
fisttp
stos
sbb
leave
xor
pusha
mov
rol
mov
mov
retf
pop
xor
shr
xor
xor
(bad)
jnp
xor
shr
xor
and
push
add
add
add
mov
mov
fs
or
jae
push
jmp
not
and
fiadd
sti
add
mov
sub
jge
jl
call
repnz
cli
fisubr
stc
or
add
xor
and
and
xchg
push
aam
or
xor
retf
(bad)
repnz
mov
mov
inc
push
or
xlat
ret
lock
call
add
add
cmps
inc
push
xor
fsubr
or
push
cmp
aam
call
push
xor
sub
int
out
jmp
rol
out
(bad)
add
cli
push
xor
pop
inc
call
xor
sbb
in
shl
in
push
sub
bound
inc
push
push
inc
push
bound
pop
add
pusha
mov
pop
aaa
jno
or
fadd
test
call
loopne
cmp
shl
call
xor
loopne
xor
pop
cmp
aam
in
cmp
pop
xor
adc
sti
mov
shr
mov
or
push
xor
and
dec
sti
or
or
lods
mov
hlt
xor
add
inc
xchg
pusha
pop
inc
adc
cmp
or
inc
jo
pop
sub
ficom
adc
mov
dec
push
sub
xor
(bad)
adc
(bad)
call
jne
mov
fild
cdq
mov
fadd
pop
(bad)
(bad)
jbe
call
add
retf
push
clc
jp
jle
pusha
xor
xlat
add
gs
fdivr
dec
xor
rol
call
in
rcl
retf
inc
mov
push
sub
adc
clc
jo
cli
push
and
popf
stos
adc
or
aaa
cmp
inc
call
(bad)
pop
push
cmp
xchg
inc
shr
mov
add
cli
stos
mov
and
xor
rol
rcl
ror
dec
shl
add
loopne
cld
add
dec
add
xor
xchg
inc
push
and
dec
xor
and
pushf
dec
push
dec
add
dec
xor
mov
jb
push
xor
adc
dec
pop
dec
cmp
or
movs
mov
and
stos
inc
stos
fs
mov
xchg
out
sahf
push
add
(bad)
ror
inc
pop
test
add
pop
xor
rcr
inc
xchg
retf
adc
mov
ret
mov
in
ror
adc
daa
mov
shr
or
mov
fs
sbb
icebp
stc
stc
xor
icebp
sbb
mov
adc
jns
mov
es
imul
dec
jmp
adc
adc
sbb
fisubr
loopne
or
and
add
and
add
dec
mov
jbe
cli
push
dec
aam
out
and
(bad)
aas
pop
add
sub
mov
sbb
jg
js
lods
cmp
jb
sbb
inc
aaa
mov
pop
add
sub
sub
lea
pop
xor
sub
or
clc
sub
test
xchg
lock
mov
call
jo
lock
ror
shr
es
jae
mov
push
and
sub
aaa
pop
xor
aas
lea
jmp
rcl
out
mov
push
sub
fstp
inc
pop
add
lahf
mov
mov
dec
jne
pop
add
loope
lock
fcom
inc
mov
or
out
sbb
adc
or
imul
dec
fs
adc
mov
inc
add
jae
push
pop
fadd
adc
sub
stos
or
mov
inc
lods
cli
cmps
jmp
std
fld
push
pop
loopne
ror
mov
clc
gs
call
mov
addr16
inc
adc
les
dec
pop
add
jb
cmp
ja
inc
sub
jns
xchg
cmps
sbb
inc
aaa
popa
data16
cmp
push
xor
dec
je
add
push
or
sub
sbb
mov
std
ins
or
push
inc
adc
push
ins
mov
lock
sbb
clc
(bad)
aas
xchg
cmp
movs
je
mov
mov
movs
jno
test
das
je
or
movs
loopne
or
popa
cmp
jne
sbb
in
dec
test
mov
push
dec
inc
lea
inc
mov
pop
dec
xor
ror
test
sbb
imul
adc
in
or
loop
adc
add
pop
add
inc
cmp
fs
dec
inc
push
inc
and
inc
clc
adc
mov
xor
bound
pop
mov
add
sbb
fistp
cwde
xchg
clc
lahf
psubd
ret
jl
lock
mov
lea
xor
xor
sbb
hlt
and
in
hlt
or
dec
sub
sbb
inc
xor
pop
lods
pop
cmp
jne
not
mov
ins
loope
(bad)
in
sti
adc
je
sar
je
cs
cmp
jb
or
ja
pushf
sub
inc
pop
cmp
mov
jne
pop
inc
stos
push
inc
adc
xchg
dec
pop
jbe
ret
jmp
fs
loop
loop
jne
mov
lahf
sub
out
cwde
inc
inc
xchg
movs
movzx
out
ret
(bad)
fsub
jb
aaa
jb
int
mov
pop
mov
jecxz
add
jmp
cwde
aas
les
es
dec
hlt
xor
je
fs
adc
push
fdiv
xor
inc
shl
test
mov
fdivr
push
pop
jae
mov
jmp
dec
inc
dec
or
xor
sub
dec
push
ret
sub
push
push
cmp
jge
sbb
push
inc
call
xchg
add
mov
adc
(bad)
mov
imul
stc
inc
jg
or
jge
mov
je
and
es
sub
push
outs
repz
pop
cmp
jl
pop
jle
pusha
add
ss
test
or
pop
out
and
jbe
mov
test
fwait
jle
daa
mov
adc
je
test
jne
je
imul
outs
and
push
sbb
xor
dec
mov
into
dec
and
pop
sub
sub
cmp
je
daa
jb
or
push
and
int3
sti
push
mov
inc
and
je
out
mov
inc
and
jp
jecxz
push
jae
add
inc
es
cld
adc
push
scas
stos
stos
es
add
push
(bad)
mov
push
adc
call
or
xor
push
mov
mov
not
inc
cmc
ins
or
hlt
(bad)
aam
(bad)
out
mov
bound
test
adc
loop
iret
xchg
push
xlat
loope
lods
sbb
or
mov
pop
jnp
jp
outs
inc
mov
xor
cmp
or
sub
pop
cld
xor
(bad)
push
push
push
pop
add
pop
jb
cld
xor
mov
imul
inc
das
mov
or
xchg
sbb
imul
pop
cwde
xor
fstp
inc
mov
dec
pop
jle
inc
pusha
cmp
ins
xchg
iret
outs
push
push
inc
and
dec
rol
jae
mov
jl
fcomp
cmp
je
test
adc
fmul
adc
sti
mov
jo
adc
jae
add
xor
add
xchg
in
and
mov
add
cwde
jge
and
inc
xchg
ret
mov
lods
push
and
fs
xchg
ret
sbb
lds
scas
fsub
in
jl
add
cmp
add
sar
adc
cmp
add
mov
scas
push
or
add
sahf
push
cmp
fbld
inc
xor
and
popa
push
fstp
add
outs
add
xchg
pop
cli
(bad)
sbb
add
cmps
data16
push
or
nop
push
clc
sbb
sub
je
pusha
sti
pusha
jb
cs
lock
(bad)
or
jbe
clc
fcomp
add
inc
fisttp
sbb
shl
sub
mov
xchg
les
cwde
sbb
push
mov
push
outs
cmc
adc
or
and
jo
xor
sti
shl
jle
mov
sbb
xchg
xchg
jne
lahf
xchg
pushf
lods
sbb
cwde
add
xchg
xchg
xchg
xor
gs
or
xchg
jbe
mov
iret
push
leave
or
or
cmp
in
scas
or
xchg
and
inc
xchg
xor
test
or
test
inc
pop
add
add
call
idiv
faddp
add
xchg
fs
rcl
push
les
xor
or
ja
mov
ror
mov
or
mov
mov
mov
sahf
push
loopne
jne
loopne
fnstsw
rol
in
and
push
or
and
inc
push
jle
pusha
adc
push
cmps
pop
ins
in
adc
clc
or
imul
sbb
adc
push
das
bound
cmp
dec
adc
sub
adc
xchg
inc
cmp
sub
mov
shl
fcomp
inc
sbb
and
cmp
add
inc
inc
inc
xchg
mov
fisubr
ret
jge
pop
and
aaa
sbb
mov
inc
out
mov
push
cdq
xchg
push
mov
popf
stos
or
dec
or
jg
inc
fsubr
cmp
jo
push
jns
int
push
push
sub
xchg
outs
and
in
and
pop
jae
jmp
ins
jne
fsub
push
jl
sub
jge
arpl
out
add
inc
je
les
jae
ss
or
inc
lock
les
cmp
jne
daa
push
jo
les
aam
adc
popa
les
inc
push
sub
cs
call
sti
and
dec
mov
mov
sbb
test
or
cmp
cmps
mov
je
jl
les
jo
and
jae
push
or
or
dec
and
or
sahf
loope
pop
stc
cmp
je
fldcw
mov
xchg
nop
jmp
inc
push
(bad)
sbb
ds
in
adc
pop
je
pop
fwait
sbb
sti
lock
js
sub
jno
mov
inc
or
clc
adc
add
mov
cmp
xchg
outs
inc
sub
add
test
sbb
mov
sub
mov
cmp
sar
mov
mov
mov
repnz
mov
cmp
ret
cmp
fiadd
ds
out
add
rcl
imul
es
cmp
dec
push
xor
add
cmp
jbe
retf
retf
mov
and
and
jae
xor
dec
fadd
stos
push
sub
in
mov
xor
cs
retf
cmp
cmp
ffreep
cdq
xchg
xchg
adc
sub
add
xchg
and
(bad)
ins
adc
xchg
push
adc
data16
push
sub
adc
dec
dec
add
fild
add
test
cmps
cmps
movs
dec
jmp
dec
push
int3
cmps
fsub
aam
jl
loop
add
icebp
and
jge
cmp
sbb
push
int3
sbb
jmp
popf
add
movs
popf
pop
lods
add
sbb
shl
or
nop
inc
push
je
add
lds
push
sar
cmp
jae
or
or
push
nop
jnp
add
push
or
js
push
cmp
mov
mov
sub
dec
xor
or
push
mov
pop
fimul
jne
sbb
dec
inc
sbb
pushf
mov
movs
inc
imul
aaa
add
cmp
je
pop
add
adc
movzx
add
or
jnp
jne
sbb
adc
mov
and
xchg
ins
jbe
mov
sub
push
hlt
loopne
(bad)
pop
xchg
mov
adc
jnp
sub
cmp
shl
or
(bad)
and
cmp
adc
loope
loop
test
inc
and
mov
xor
dec
jl
add
(bad)
dec
sbb
push
jecxz
add
fisubr
push
jbe
data16
rol
pop
bound
in
pop
lods
sbb
sbb
and
fmul
ret
dec
addr16
mov
xlat
pusha
popa
dec
div
stos
jp
mov
sub
cld
loopne
outs
mov
sbb
mul
or
add
daa
(bad)
daa
clc
aam
or
add
data16
cmp
ja
pop
or
and
ss
push
pop
sahf
lds
iret
cli
cmp
and
cmp
xor
add
cmp
push
cmp
pop
and
adc
hlt
inc
add
mov
sbb
xchg
push
jns
loopne
jns
sbb
(bad)
fs
cs
pop
sub
and
fcom
jge
cld
or
nop
cmp
xchg
(bad)
sbb
mov
pop
popa
push
dec
in
adc
pop
or
scas
fnstsw
test
dec
cld
aam
inc
not
aaa
jmp
and
movs
stc
fcomp
sub
push
pop
sbb
imul
int3
jg
pop
call
rcl
mov
(bad)
mov
inc
adc
mov
dec
jnp
ins
adc
and
add
mov
add
push
adc
dec
sbb
inc
shl
cmp
and
xor
adc
jb
jp
xchg
mov
push
dec
lods
push
push
adc
sbb
cmp
cld
add
dec
dec
lea
mov
lea
inc
cdq
mov
rcr
mov
int
cs
sahf
and
fistp
ror
pop
pop
pop
push
ficom
cmc
mov
aas
push
inc
jns
sub
lods
mov
pop
add
sub
or
pop
mov
mov
jae
add
scas
lock
xchg
pop
jae
arpl
and
push
popa
leave
mov
pop
faddp
sti
ins
das
jo
push
and
sbb
pop
mov
movs
call
dec
add
loope
retf
dec
dec
add
ins
jo
cmp
es
leave
ja
push
add
movs
sub
push
sbb
add
push
add
mov
mov
and
pop
ret
aam
mov
popa
div
or
pusha
jmp
call
sub
enter
and
shr
jbe
mov
mov
mov
inc
or
xor
and
sub
mov
dec
(bad)
outs
or
mov
inc
mov
test
pusha
mov
aam
stos
sbb
inc
clc
pop
and
clc
mov
mov
mov
sbb
sub
xchg
or
sub
cmp
inc
push
cmp
and
sahf
daa
test
fistp
or
test
xchg
shr
or
and
inc
and
mov
dec
push
xchg
add
or
dec
fisttp
sub
adc
adc
call
jmp
inc
xchg
arpl
es
call
add
sub
cdq
jecxz
fistp
(bad)
pop
pop
mov
aas
and
pop
mov
sub
fadd
cmp
fisttp
lahf
add
mov
in
sbb
scas
sub
jnp
fidiv
rcl
cmps
jmp
xor
push
test
push
daa
pop
xchg
dec
sub
adc
inc
in
cmp
xor
nop
push
loope
mov
jmp
mov
jo
sub
into
or
cmp
xchg
icebp
adc
inc
movs
aam
sub
popa
js
jae
cmp
es
test
push
sbb
adc
shl
movs
in
jge
sub
fs
mov
mov
sbb
mov
mov
clc
mov
or
test
mov
pop
jle
or
loopne
mov
adc
or
(bad)
fiadd
mov
mov
fwait
mov
test
pop
sbb
das
dec
xchg
adc
sub
mov
adc
pop
aam
lds
pop
add
and
into
sub
lahf
wbinvd
xchg
or
pushf
push
cwde
inc
or
dec
shl
push
mov
es
cwde
mov
add
pop
add
repnz
inc
push
xchg
dec
adc
adc
pop
in
div
(bad)
mov
inc
imul
adc
int
inc
inc
jo
jo
idiv
lods
xchg
mov
loop
pop
inc
clc
loop
shl
jo
je
cmp
jbe
lds
cmp
xchg
mov
xor
fisttp
xor
enter
push
push
jp
lods
je
mov
ds
push
jo
push
pop
inc
ins
add
sbb
dec
push
not
mov
sub
cmp
pop
clc
repz
pop
movs
sbb
push
std
retf
or
outs
sti
dec
aam
push
lea
les
repnz
test
or
jecxz
jge
mov
or
dec
add
(bad)
push
add
jne
or
xchg
xor
sub
add
cmp
icebp
cbw
mov
add
or
ins
mov
xor
aad
sub
mov
cmp
pop
mov
or
push
xor
nop
pop
pop
sub
pop
mov
add
jg
inc
cmp
jae
push
loope
sub
add
add
jb
jmp
and
xchg
mov
or
add
outs
dec
gs
(bad)
push
scas
dec
loopne
and
or
inc
mov
dec
dec
loopne
arpl
jbe
retf
cmps
daa
mov
push
add
add
(bad)
sbb
push
or
cmp
scas
push
clc
fsubr
arpl
or
jle
jmp
jne
bound
jne
es
inc
or
or
dec
jecxz
das
add
(bad)
push
inc
mov
fadd
pop
mov
(bad)
bound
xor
mov
adc
mov
and
cmp
inc
pop
cmp
adc
add
sbb
retf
inc
push
es
xchg
or
or
test
sub
cmp
add
nop
cli
jbe
sub
add
mov
or
lods
or
sahf
push
out
push
mov
jg
push
mov
adc
push
mul
push
or
data16
fidivr
adc
jmp
or
mov
jmp
fld
mov
ret
das
cmp
sub
xchg
pop
mov
mov
add
dec
ret
es
sbb
cld
daa
push
add
dec
lods
jbe
inc
ret
test
pop
scas
fisttp
lea
mov
cs
sub
mov
xor
adc
aam
push
ins
and
push
add
repnz
or
or
mov
dec
add
ds
cmps
cmp
sbb
mov
je
or
lock
loop
dec
xor
mov
pop
ret
fbld
mul
sbb
test
fcom
js
sti
add
inc
fsubrp
push
aad
push
int3
inc
jl
mov
mov
jne
add
or
jmp
add
add
push
in
ins
ins
ins
das
push
loope
or
push
imul
mov
add
enter
add
data16
inc
pusha
sub
ret
jb
add
inc
adc
mov
pusha
push
pop
test
retf
pop
add
sub
sbb
ins
loop
mov
outs
cmp
jg
add
or
inc
inc
lea
clc
rol
fcom
dec
mov
ret
pop
rcr
jecxz
out
jge
or
sub
call
ret
mov
ret
pop
inc
ss
cmp
adc
mov
dec
stos
or
or
stc
ja
and
jne
fmul
jb
cs
(bad)
sbb
mov
popf
jne
mov
mov
lock
mov
inc
push
out
push
ja
rcr
or
test
cmps
xchg
mov
mov
stos
dec
adc
dec
jmp
inc
lea
jo
adc
xchg
push
sbb
movs
pop
sar
cmp
popa
loop
inc
loope
jb
push
push
mov
or
rcl
repnz
and
fmul
cmc
stc
mov
loopne
sbb
fwait
les
add
fadd
xchg
cmp
mov
xor
add
popf
xchg
ret
push
(bad)
leave
cmp
inc
hlt
add
(bad)
and
sahf
cmp
mov
fsubr
ror
rol
or
movs
mov
mov
mov
mov
mov
mov
push
ret
add
add
mov
mov
mov
push
xchg
rcr
jmp
push
xchg
jbe
push
adc
lahf
dec
imul
inc
loope
and
push
test
stos
pop
pop
movs
push
cmp
lea
jnp
hlt
add
dec
inc
mov
bound
clc
add
dec
popf
ds
mov
cmp
sub
xor
or
jle
(bad)
sub
pop
xor
loope
inc
das
cmovns
sar
not
loopne
movs
and
mov
jp
cmovp
sbb
int3
mov
rol
mov
add
push
sub
adc
daa
adc
mov
mov
inc
scas
mov
or
lds
sub
ret
mov
aaa
dec
mov
sub
push
push
rol
loopne
mov
sub
sbb
int3
jg
cmp
cmp
cwde
(bad)
fistp
add
push
lock
and
je
xchg
mov
or
xchg
pusha
test
push
mov
mov
lahf
add
mov
bound
fwait
icebp
call
or
nop
and
mov
sbb
inc
pop
xor
adc
push
push
adc
and
aam
adc
stc
add
mov
mov
mov
inc
mov
add
inc
or
clc
dec
sbb
(bad)
neg
or
or
mov
adc
and
js
jmp
mov
add
and
sbb
mov
dec
adc
ss
cmp
dec
pop
pop
(bad)
xor
pop
inc
add
lods
push
hlt
push
mov
dec
lods
xchg
jo
sub
scas
jne
popf
push
int3
or
popa
in
and
arpl
or
cmp
mov
loope
pop
xchg
ds
fs
xor
or
or
sub
mov
pop
dec
mov
xchg
jmp
jb
(bad)
push
test
xor
rol
push
ja
xor
xor
and
or
or
dec
cmp
add
sub
jns
pop
xlat
(bad)
psubsb
xor
or
movs
mov
clc
push
nop
imul
psubd
mov
cmp
out
jle
lahf
sbb
das
xor
cs
mov
dec
lock
pop
sub
(bad)
fimul
or
retf
add
and
jne
add
adc
bound
xchg
xor
xlat
dec
mov
cmps
dec
rcr
pmullw
pop
shl
mov
jb
inc
ds
or
sub
cmp
outs
xchg
add
push
test
pop
add
nop
push
jmp
mov
movs
jge
or
add
enter
or
jmp
sub
jnp
sub
mov
js
outs
lock
jne
fstp
xchg
dec
les
test
jno
push
fidiv
or
call
pop
and
sub
jbe
stos
mov
adc
xor
adc
mov
ret
test
mov
add
and
in
cmp
int3
popa
aas
aaa
leave
ret
pop
mov
jns
jmp
mov
fstp
push
sub
pusha
mov
in
pop
and
rol
leave
xchg
and
mov
push
push
in
push
xor
mov
mov
xor
div
fwait
add
stc
adc
add
cmp
(bad)
xchg
pop
dec
inc
clc
push
in
ins
adc
or
outs
mov
data16
sub
adc
jae
ret
hlt
push
dec
and
jl
mov
mov
rcr
mov
dec
push
cli
loope
adc
and
enter
js
fiadd
sub
xchg
loope
mov
jmp
add
or
das
inc
inc
stc
mov
cmp
ins
push
mov
loopne
cmp
sub
add
add
add
pusha
sub
js
lock
les
push
xlat
outs
out
jo
retf
das
mov
push
and
dec
and
or
and
cmc
mov
in
inc
mov
adc
xchg
mov
jp
cmc
out
imul
push
add
inc
mov
sbb
shl
imul
sbb
or
mov
or
cmp
call
aaa
mov
mov
in
jb
xor
mov
cmc
jle
cmc
into
adc
repz
pop
add
add
inc
or
cmp
jge
imul
test
adc
add
inc
sub
and
add
popa
(bad)
inc
cld
outs
push
pop
cmp
je
mov
mov
ins
pushf
and
push
dec
cmp
cmp
push
and
dec
xchg
sbb
shr
fld
and
(bad)
jmp
dec
sub
push
mov
fcom
add
in
loop
lds
into
or
jle
inc
je
dec
je
dec
jg
and
and
imul
sahf
(bad)
jl
outs
jne
jae
(bad)
ds
add
mov
inc
xchg
pop
aad
(bad)
(bad)
dec
adc
call
cld
jmp
cmp
and
repz
fs
jne
cmp
fdivr
test
dec
scas
fbstp
cdq
js
adc
das
cdq
rol
sbb
xchg
out
adc
sub
jno
retf
and
adc
mov
dec
call
xchg
mov
add
xchg
repnz
loopne
cli
lahf
dec
sbb
lods
out
loopne
pop
pop
push
mov
cmp
call
or
mov
push
call
into
push
push
and
jo
js
sbb
sahf
fisttp
jo
adc
int3
daa
pop
iret
and
jl
add
mov
xchg
call
add
dec
test
aas
ret
dec
adc
cs
in
mov
mov
add
sbb
sbb
loope
call
fdivr
sahf
inc
sbb
mov
inc
fdivr
sbb
mov
xchg
rcl
retf
and
mov
sub
mov
inc
cmp
push
sbb
sbb
loopne
cmps
fisub
add
jmp
in
cmp
je
rcl
pop
inc
mov
movs
inc
or
in
push
icebp
jmp
sub
in
in
shl
push
xchg
fidiv
test
xchg
retf
sar
fist
ror
push
scas
mov
fadd
inc
push
js
add
xor
in
fcomp
bound
out
dec
ret
cmp
sbb
mov
sub
enter
add
inc
(bad)
leave
add
pop
test
mov
cdq
test
shl
xor
add
pushf
xor
inc
add
shl
pop
icebp
es
std
or
lahf
cs
sbb
dec
fcom
sbb
inc
and
add
xor
adc
popa
xchg
mov
test
adc
and
push
cmp
sbb
cmp
or
pop
push
pop
xor
test
pop
pusha
fistp
push
retf
or
mov
mov
cmp
inc
jbe
pop
cmp
jo
pop
ins
in
cmp
add
ret
fld
dec
clc
jne
mov
mov
push
push
test
cmp
daa
in
sbb
cli
sub
add
ficom
loope
sbb
in
xchg
sbb
xchg
gs
hlt
hlt
mov
jb
inc
data16
clc
mov
pop
imul
xor
outs
cmp
call
test
push
lock
sub
shl
fist
cld
loopne
sub
jne
mov
test
push
sbb
add
or
bound
xor
lock
dec
xor
clc
push
or
or
or
or
sbb
mov
sbb
adc
inc
xchg
out
mov
cmp
cmp
inc
pop
add
cmp
push
jbe
add
hlt
cmp
and
sahf
mov
stos
(bad)
or
or
sub
addr16
inc
fs
jne
in
dec
adc
xchg
adc
adc
adc
dec
loope
cmp
test
push
sub
mov
sbb
add
adc
add
jne
jo
addr16
(bad)
es
push
jmp
sbb
push
adc
call
adc
add
popf
rcr
push
cmp
adc
inc
xlat
xchg
lock
fst
sub
test
jb
push
xor
les
clc
in
hlt
dec
add
xlat
cmp
or
jge
inc
leave
sub
cmp
cli
in
mov
and
lea
mov
push
add
call
sub
or
outs
loope
fbstp
pop
rcr
mov
(bad)
push
ret
ins
pop
and
inc
dec
mul
or
test
or
inc
jne
mov
inc
adc
(bad)
shl
adc
repnz
fnstcw
adc
or
push
out
mov
in
and
jne
sbb
mov
fdivr
push
or
mov
loopne
mov
(bad)
mul
xchg
and
or
sbb
xor
(bad)
cmp
loopne
enter
mov
lods
scas
inc
cli
adc
int3
xor
or
dec
cld
add
jb
sbb
daa
popf
or
dec
mov
shl
jmp
call
int3
or
dec
sub
adc
enter
add
out
dec
lock
adc
dec
jecxz
popa
iret
inc
popf
adc
push
xchg
loope
pop
push
clc
adc
bound
or
jo
adc
jp
pop
jo
or
inc
(bad)
test
test
je
cmp
cmp
add
(bad)
test
sar
cmp
add
cmp
adc
add
mul
jl
jmp
mov
push
lea
mov
loope
call
mov
ret
inc
popa
lahf
jns
jo
sub
lds
in
pop
jo
jbe
adc
add
push
mov
or
dec
adc
fiadd
mov
add
mov
fsubr
stos
sbb
ss
xor
xchg
adc
push
push
in
xchg
push
addr16
jb
(bad)
addr16
je
mov
push
cmp
xor
jecxz
hlt
xchg
mov
and
idiv
ins
inc
cmp
stos
jb
mov
ins
ins
push
jae
shl
cmp
jp
js
add
int3
and
clc
out
ins
jmp
sub
cmp
add
mov
test
je
(bad)
pop
mov
addr16
jne
add
jg
pop
iret
and
add
mov
retf
sbb
in
test
mov
push
mov
mov
push
or
retf
mov
cmc
and
int3
pop
int
cmps
scas
dec
and
loopne
mov
shl
popa
addr16
es
mov
xchg
add
push
icebp
shr
xor
or
scas
shl
jp
push
dec
jmp
push
push
pop
add
mov
loopne
push
retf
fidiv
mov
fld
and
or
in
mul
(bad)
jbe
or
lods
mov
dec
dec
cmps
push
adc
sub
adc
cmp
es
scas
mov
out
in
jl
cmp
inc
bound
pop
movs
sti
mov
mov
adc
dec
enter
sbb
inc
cld
aad
sbb
sub
bound
mov
sub
out
addr16
add
ds
mov
fdivr
clc
add
clc
jno
mov
add
or
sub
mov
icebp
or
sub
jne
(bad)
sbb
or
cmp
sub
sbb
or
sti
mov
or
(bad)
cs
adc
xor
iret
scas
or
mov
into
test
leave
popf
fcom
mov
loopne
or
imul
jne
dec
fsub
jl
mov
sub
in
xchg
and
cdq
or
push
add
xchg
xchg
mov
faddp
test
push
sbb
jle
not
mov
push
sbb
mov
sub
aaa
mov
sbb
push
ins
loope
ja
sti
mov
test
adc
xor
test
loope
(bad)
in
xchg
popf
inc
sbb
int3
xor
in
push
retf
add
cmps
ret
imul
jnp
lea
rol
gs
bound
push
fdivr
xchg
mov
shl
push
dec
add
sbb
ret
das
sub
neg
push
inc
jmp
jo
cmp
cmp
add
add
movs
or
addr16
mov
dec
movs
cmp
dec
or
mov
add
push
dec
adc
add
shl
xchg
mov
pusha
jecxz
leave
push
jg
pop
mov
cmp
sbb
xor
xchg
mov
mov
mov
jge
ret
add
xchg
gs
or
rcr
pop
addr16
sub
xchg
sbb
out
mov
xchg
imul
imul
add
loopne
or
jae
sub
aad
int
jl
cs
int3
inc
jmp
sbb
fcomi
push
pop
sbb
add
repnz
or
adc
fwait
gs
jecxz
fidivr
out
inc
inc
mov
xor
ins
neg
(bad)
leave
push
je
mov
shl
or
dec
mov
sub
xor
fnop
ja
rcr
call
lea
or
shl
push
jne
sub
loope
imul
adc
fwait
pop
shl
xchg
in
adc
cld
or
inc
pop
pop
test
lds
sub
cmp
lea
cmp
mov
add
mov
push
xor
cmp
in
das
(bad)
and
ins
and
lds
mov
rcr
push
xor
mov
je
mov
jecxz
(bad)
mov
add
and
xor
sbb
adc
jmp
or
or
jmp
sti
sahf
or
mov
fiadd
dec
loope
add
sbb
or
mov
mov
js
jge
and
inc
pop
adc
retf
jmp
add
xor
push
xchg
push
cmc
js
add
jle
xlat
shl
and
jl
xchg
int
add
ret
jnp
rol
or
out
fisttp
push
jae
lea
push
sub
mov
xor
pusha
mov
xor
dec
mov
dec
pop
pop
xor
pop
ret
sub
or
fs
or
or
inc
fistp
or
cmp
cmp
fst
fwait
(bad)
idiv
cmp
fnstenv
inc
jmp
mov
pop
rcl
jp
sub
fisttp
test
int3
ret
or
add
add
add
mov
inc
ret
fcom
push
or
add
clc
and
or
leave
add
pop
mov
dec
iret
fcom
imul
add
popw
adc
adc
xor
dec
or
clc
movs
mov
cwde
add
add
and
cld
cmp
fs
dec
mov
(bad)
fldenv
or
call
hlt
add
push
jl
jl
and
add
sahf
push
shr
mov
cmp
inc
mov
pop
fcmovu
push
inc
inc
add
push
cmp
fdivr
loopne
mov
or
add
dec
cmp
jne
leave
add
xor
or
js
cmp
cmp
inc
push
aad
stos
add
mov
and
mov
jae
imul
cmp
or
xor
sbb
clc
pusha
(bad)
(bad)
pop
icebp
(bad)
retf
inc
mov
lea
movs
aam
push
or
wrmsr
nop
add
enter
or
(bad)
sub
outs
mov
or
add
mov
sbb
jbe
aam
add
add
(bad)
xor
outs
sti
es
mov
jmp
mov
adc
(bad)
fs
shl
lea
cli
ja
cmp
in
ret
shl
outs
and
mov
add
daa
mov
sub
cmp
mov
cld
sbb
scas
cmp
jne
push
fst
dec
imul
imul
push
inc
add
dec
je
jo
xchg
in
push
xchg
xchg
pusha
inc
test
xor
or
adc
dec
dec
daa
cld
mov
jecxz
scas
in
hlt
xor
lods
or
(bad)
push
xor
inc
jno
or
sub
push
mov
cmp
xchg
in
outs
test
cmps
inc
push
xchg
scas
div
sub
mov
dec
or
xchg
inc
and
sbb
lea
push
xchg
dec
add
pop
cmp
jnp
cmps
pushf
mov
test
or
and
mov
push
dec
jo
lea
aas
add
jnp
inc
inc
adc
sub
sbb
les
inc
push
push
scas
sbb
adc
xchg
mov
(bad)
sub
inc
sbb
pop
add
inc
or
push
sbb
imul
adc
xor
xchg
shr
adc
cmp
sbb
jne
push
sbb
cmps
ins
cdq
mov
inc
dec
xor
or
cmp
xor
and
xchg
mov
inc
imul
cmp
adc
inc
test
test
xor
ficomp
inc
(bad)
enter
gs
pop
mov
pushf
popa
sub
inc
add
dec
sub
xlat
push
or
mov
inc
ret
mov
mov
call
retf
icebp
mov
xchg
inc
add
adc
ret
mov
ret
or
aaa
aaa
push
push
sub
js
inc
outs
add
cmc
xchg
aas
in
mov
push
sbb
fstp
sub
call
mov
adc
cs
(bad)
adc
add
and
mov
in
int3
mov
push
sbb
in
mov
movs
xchg
or
cmps
cmp
cmp
imul
loop
clc
mov
and
or
mov
mov
sbb
ss
mov
jl
test
js
jge
jo
or
jmp
jnp
pop
cmp
or
gs
sub
mov
add
fnsave
movs
jle
jne
mov
push
or
test
stos
cmp
sub
fmul
xchg
pop
jo
mov
outs
loope
rcr
push
or
lahf
inc
sub
js
loopne
push
inc
add
inc
push
add
fiadd
cmc
or
sbb
pop
and
adc
or
js
daa
daa
add
inc
and
mov
rol
inc
loop
jbe
adc
cmp
push
jo
add
xchg
iret
cld
in
xchg
cmps
loope
push
or
imul
in
ror
or
mov
lahf
dec
loopne
mov
clc
xchg
mov
das
and
inc
add
lock
imul
fiadd
dec
stc
mov
push
mov
xor
(bad)
fst
add
xor
ret
aaa
inc
adc
rcl
call
imul
ss
test
add
push
scas
mov
push
cld
jbe
ss
(bad)
jmp
push
mov
cmps
jo
mov
call
mov
sub
cmp
dec
inc
adc
push
cmp
jle
inc
pop
fadd
add
adc
or
pop
shl
shl
fisttp
mov
add
dec
sti
add
pop
push
ret
push
xchg
fld
fisubr
lods
retf
jecxz
mov
add
fild
jmp
sbb
fld
in
mov
mov
nop
mov
call
(bad)
test
pusha
push
push
test
dec
fimul
xchg
and
sub
imul
pop
movs
std
sbb
mul
shr
ret
mov
cmp
mov
sbb
lock
pusha
ror
pop
imul
sar
mov
sub
xlat
add
dec
push
add
sub
cmp
sub
or
push
loope
pop
push
adc
push
xchg
add
mov
sbb
cmp
(bad)
or
ja
(bad)
or
add
sub
adc
fwait
sub
or
in
int
aam
dec
inc
mov
or
mov
dec
shl
fwait
inc
add
or
push
fld
push
ret
xchg
jecxz
or
push
and
mov
cdq
mov
pop
inc
mov
lea
call
data16
lods
inc
jnp
sar
adc
fwait
aad
pop
cmp
addr16
push
in
sbb
push
mov
rcr
cli
xor
scas
pop
fs
loopne
lods
bt
sbb
sbb
mov
fs
mov
jo
mov
xchg
mov
cmp
mov
sar
sar
loopne
xchg
push
push
sbb
inc
leave
dec
out
out
push
cdq
xor
push
das
sub
imul
loope
pop
icebp
cmp
fisttp
daa
rol
jmp
mov
mov
xchg
icebp
shl
push
adc
push
(bad)
xor
mov
and
fdiv
cmp
fcomp
ror
jo
inc
popa
xor
inc
js
(bad)
jb
mov
loop
scas
add
adc
xchg
adc
cmp
cmps
popf
mov
or
cld
xchg
push
and
leave
add
ss
push
sub
and
and
add
out
cmp
jle
push
pop
enter
pop
xchg
adc
(bad)
movs
outs
das
lea
cmp
in
sbb
aaa
push
shr
ficomp
push
pop
pop
(bad)
cmp
into
sub
sub
pop
sub
or
add
jo
ins
push
loopne
imul
stos
jno
push
(bad)
pop
jmp
jne
repz
or
or
add
sub
(bad)
sub
arpl
and
dec
ins
mov
or
xchg
push
ins
mov
adc
int3
pop
fmul
aam
lock
dec
sbb
pop
add
or
or
adc
cld
dec
nop
sub
inc
jo
jne
add
retf
and
push
sar
cmp
push
mov
out
shl
add
push
jecxz
jnp
hlt
and
inc
xchg
shl
aas
lock
mov
mov
mov
gs
add
add
add
mov
cmp
mov
imul
je
cmp
je
push
inc
sub
movs
cli
test
je
cmp
mov
push
lock
push
push
sub
sbb
ret
sub
push
dec
sar
push
adc
add
inc
mov
mov
loop
sub
dec
cmp
enter
cdq
push
sub
or
add
arpl
ret
inc
push
sbb
push
pop
mov
push
add
jbe
(bad)
je
adc
jae
dec
and
xchg
je
push
sbb
mov
mov
xchg
sub
(bad)
jne
jg
add
cmp
lods
and
sbb
data16
fisubr
mov
movs
and
sar
push
pop
pop
add
cmps
xor
pop
jmp
xor
enter
sbb
add
mov
icebp
inc
mov
mov
add
test
sbb
jo
pop
push
sar
cld
rol
push
push
cmp
inc
inc
mov
pop
xchg
cmp
out
pop
sub
je
mov
push
mov
jbe
mov
sbb
imul
ret
ds
inc
jmp
clc
or
test
or
mov
add
repnz
rol
sbb
push
fiadd
pop
cmp
leave
jmp
add
and
je
sbb
ds
sbb
adc
dec
inc
and
bswap
cli
sub
retf
into
jne
data16
adc
pop
push
sbb
or
cmps
xchg
jmp
add
pusha
outs
clc
xor
retf
jmp
push
dec
and
test
out
iret
mov
inc
and
xchg
ins
inc
aam
not
fmul
cli
or
ds
mov
sub
cmp
jne
push
mov
xlat
mov
mov
cmp
push
cld
push
pushf
sbb
add
dec
sbb
dec
jmp
dec
ret
aaa
les
lahf
add
std
mov
and
and
xor
es
cwde
fnstcw
xor
push
lods
and
pop
add
sbb
and
xor
sbb
cmps
push
dec
push
(bad)
jmp
pop
(bad)
jnp
(bad)
loopne
xchg
sub
arpl
sbb
push
pop
call
or
into
(bad)
test
sub
cmp
jb
frstor
mov
dec
or
sub
fiadd
pop
fwait
add
inc
and
add
lock
sbb
add
pop
cmp
xor
(bad)
test
mov
fwait
imul
xchg
xor
mov
das
ds
adc
and
shl
cmp
scas
jne
fs
sbb
dec
or
inc
shl
loopne
jl
adc
jae
sub
scas
shr
fld
sub
test
out
call
and
or
ss
cld
pusha
mov
adc
mov
dec
or
adc
in
inc
cmp
int
mov
cmp
ins
loopne
or
es
push
jmp
add
les
xor
bound
repnz
pushf
cmp
or
push
lock
enter
jmp
xchg
sbb
push
dec
adc
aaa
mov
and
adc
js
loop
stc
add
push
or
push
bound
add
repnz
repz
or
add
arpl
cmp
mov
aad
jbe
dec
leave
pop
adc
adc
aas
ss
xchg
inc
xchg
cmp
stos
or
inc
sub
push
bndstx
mov
ins
mov
xchg
pusha
cmp
adc
pop
mov
aas
pop
cmp
xlat
adc
push
pop
in
(bad)
sub
jle
shl
dec
cmp
push
jl
pop
jo
cdq
sub
jle
cdq
pop
ficomp
(bad)
mov
push
ja
in
jmp
scas
pop
xchg
or
push
push
or
loopne
cmps
pop
add
je
into
jnp
(bad)
pop
push
pop
mov
mov
stos
aaa
in
lahf
inc
cmp
and
dec
mov
jo
inc
out
dec
adc
pop
fmul
ret
test
fistp
or
out
add
ja
lds
adc
into
dec
push
ds
jae
mov
data16
(bad)
setl
add
pop
enter
adc
inc
je
rcr
mov
sti
mov
pop
mov
jo
sbb
scas
xor
jo
aaa
hlt
adc
leave
ss
inc
xor
xor
sahf
js
pop
pop
ret
sub
mov
lds
or
inc
out
out
push
push
movs
icebp
out
xor
(bad)
dec
jnp
movs
in
cmp
test
jno
gs
inc
push
adc
out
jb
add
stos
inc
pop
pushf
jmp
in
dec
test
pop
push
mov
lods
push
mov
mov
cld
dec
(bad)
or
jecxz
stos
jbe
test
push
fmul
sbb
lods
push
xchg
push
sbb
mov
retf
rol
jbe
adc
xor
es
add
nop
pop
inc
inc
inc
xor
mov
jb
cmp
xor
test
jo
sbb
outs
dec
or
test
push
add
inc
add
cmp
adc
mov
jge
mov
data16
cld
in
xor
das
test
adc
bound
ins
adc
add
adc
and
jne
repnz
xchg
ret
lock
add
sub
xor
cld
movs
jmp
dec
push
dec
adc
popa
ins
sbb
mov
movs
or
in
je
inc
or
pop
pop
test
sti
je
jmp
or
push
dec
sub
dec
out
mov
sbb
outs
cmps
or
push
inc
sbb
idiv
shl
loop
ret
jmp
adc
jl
cwde
mov
or
cmp
push
xor
icebp
out
mov
add
cmp
mov
out
sub
and
push
aaa
and
pushf
es
icebp
loopne
ret
push
mov
dec
inc
(bad)
pop
pop
pusha
mov
fstp
adc
lock
mov
mov
bound
test
movs
inc
ja
movs
lahf
or
repz
pop
or
je
ret
and
or
and
imul
dec
cmp
push
ins
or
xchg
pop
push
outs
or
(bad)
mov
lea
ss
jb
fs
in
pushf
push
jge
xor
sar
push
push
fisub
pop
mov
enter
jmp
cmps
and
(bad)
push
adc
cdq
adc
adc
mov
loop
cmp
sbb
xchg
xor
push
arpl
pop
dec
retf
cmp
lea
dec
sbb
shl
xchg
dec
ja
in
ja
dec
je
sbb
mov
jmp
adc
dec
mov
and
inc
xor
mov
sbb
adc
shl
push
adc
jecxz
mov
jmp
xlat
sub
test
arpl
stc
push
sbb
xor
pmaxsw
jle
rcr
js
xor
nop
or
dec
add
jne
inc
push
dec
sub
in
pop
mov
inc
inc
xchg
adc
retf
stmxcsr
into
and
sub
jne
ins
outs
push
cmp
add
and
clc
jg
ss
sub
test
movd
jnp
jg
movapd
push
clc
jae
pop
outs
fcmovnbe
xor
jle
xor
cli
rcl
retf
xchg
icebp
adc
jl
inc
mov
retf
or
jg
(bad)
jb
cmp
cs
jnp
mov
fidiv
mov
add
add
adc
push
add
mov
or
sub
jnp
int
xchg
repnz
rol
add
dec
add
pop
adc
addps
int
jnp
sti
fld
sbb
sbb
inc
pop
jecxz
dec
xor
mul
sbb
mov
ja
xor
push
mov
and
pop
cwde
adc
out
xor
xor
js
test
push
mov
mov
dec
xchg
adc
pop
inc
sub
lock
pop
aas
sub
push
cmps
cmc
cdq
ret
jge
and
push
test
test
pop
mul
xchg
sahf
js
fisttp
jo
icebp
loope
arpl
inc
cwde
arpl
call
jmp
call
xor
add
and
inc
ins
inc
jl
cld
dec
add
sar
pop
aam
in
int3
or
(bad)
pop
adc
stos
adc
jp
mov
sbb
or
mov
cmp
jo
adc
push
pop
dec
pop
mov
mov
cmp
push
mov
inc
inc
fdivr
mov
movs
inc
inc
dec
call
or
add
cmp
jne
add
mov
xor
sbb
call
jge
adc
adc
jo
mov
scas
push
fsub
cmp
adc
aam
push
lods
ret
pusha
and
pop
lods
les
or
retf
and
push
or
lock
mov
xchg
fisubr
inc
lods
sub
hlt
fcomi
or
arpl
sti
push
mov
popa
xchg
and
lock
jmp
push
mov
inc
cmp
pop
inc
push
or
add
push
xchg
inc
(bad)
(bad)
pop
(bad)
push
push
mov
fmul
mov
adc
inc
cmp
jne
inc
cmp
add
xor
push
ret
mov
adc
xor
fwait
es
push
adc
and
pop
and
inc
jmp
clc
fldcw
sbb
dec
push
dec
psrlw
add
cmp
cmp
inc
sub
add
rcl
xchg
adc
push
add
push
push
cmp
adc
es
add
or
adc
xchg
sub
and
mov
sub
push
mov
cmp
sahf
mov
and
cmp
clc
xlat
inc
in
imul
hlt
cmp
into
retf
sbb
in
test
adc
push
aaa
mov
aad
mov
or
sar
sbb
xor
shl
dec
ins
adc
leave
sbb
cs
inc
pop
cmp
adc
aas
sbb
cmps
sti
mov
loopne
rol
inc
inc
cmp
aam
xchg
sub
retf
jne
sbb
daa
sbb
jmp
jnp
add
xchg
sub
mov
add
mov
add
and
cwde
in
mov
std
jp
add
jmp
and
dec
lahf
sbb
pusha
enter
inc
mov
inc
or
xor
out
test
push
pop
loopne
sbb
daa
test
cld
push
hlt
mov
hlt
lock
out
daa
mov
pop
bound
(bad)
aad
cmp
push
and
lock
test
xor
lock
xchg
fiadd
mov
push
or
clc
(bad)
stos
mov
mov
je
dec
or
adc
add
fmul
cmp
cmp
mov
and
imul
ss
data16
jne
idiv
xor
leave
pop
xchg
cs
nop
adc
sub
and
or
cmps
adc
in
add
adc
jmp
lds
ds
mov
add
pop
scas
push
imul
bound
inc
les
sub
or
cmps
inc
test
xor
xchg
xor
add
cwde
add
adc
and
dec
pop
jl
jg
mov
inc
xchg
jbe
jle
shl
cmp
and
or
int3
inc
push
std
or
sub
xor
pop
div
jl
inc
push
xor
inc
imul
cmp
adc
jl
mov
inc
jp
out
mov
(bad)
repz
sbb
adc
repz
or
inc
pop
push
adc
adc
lods
add
cmp
xor
pop
xor
xor
mov
push
jmp
pop
popf
mov
sub
fwait
jle
push
cmp
fsubr
sbb
cmps
fist
jne
rcl
pop
push
cmp
sub
add
aam
dec
rol
ret
adc
sub
push
(bad)
pop
lods
aam
adc
lock
mov
jno
fcmovb
inc
ror
in
ret
cmp
mov
mov
mov
lods
lds
mov
pop
or
and
clc
push
ss
out
fmul
clc
add
inc
push
xlat
mov
xor
movs
add
lods
jl
pop
xchg
push
ficomp
adc
scas
fiadd
and
sub
adc
cwde
pop
sub
push
xchg
(bad)
rol
cmp
(bad)
std
adc
mov
test
sub
clc
(bad)
je
lds
fcom
dec
mov
mov
dec
push
loopne
out
add
cmp
jb
xor
test
in
sbb
ss
jp
mov
lock
push
imul
loopne
push
fidivr
xchg
out
cmps
fmul
mov
lahf
push
adc
push
adc
push
add
sub
fmul
idiv
dec
mov
xchg
sub
sbb
pop
push
sbb
rcr
in
ds
jbe
or
gs
and
leave
mov
jl
ins
push
and
adc
cs
pop
pop
dec
inc
add
(bad)
je
test
sbb
hlt
pop
cmp
and
mov
add
test
inc
mov
mov
popa
adc
or
aam
lahf
inc
jp
dec
jmp
xchg
push
movs
je
inc
push
je
test
aas
push
and
push
jmp
out
add
adc
scas
loope
inc
adc
sahf
retf
push
mov
ficom
sahf
pop
in
dec
push
call
adc
jo
in
add
or
lock
dec
call
pop
or
and
jle
test
ss
adc
aaa
jnp
and
dec
aam
or
(bad)
push
sbb
pusha
jmp
xor
lds
sbb
stc
jl
push
and
lea
pop
mov
pop
mov
jo
ss
inc
mov
cmp
mov
jmp
mov
push
sbb
push
push
jbe
js
call
adc
shl
and
(bad)
loopne
sub
imul
xor
or
adc
imul
lahf
jmp
mov
mov
push
mov
and
or
out
out
inc
jl
and
push
inc
mov
test
dec
enter
adc
cmps
xor
(bad)
xchg
xchg
lods
and
fisttp
int
jne
add
mov
or
cwde
cmp
adc
xor
xchg
(bad)
in
stos
fadd
(bad)
gs
push
aaa
out
cs
and
adc
pusha
add
pop
pushf
popf
push
cmp
inc
jp
nop
popa
fcom
pop
mov
pop
fmul
in
stc
out
enter
cwde
dec
mov
or
push
pop
in
mov
push
hlt
cmp
je
dec
xor
sub
bound
mov
lea
repz
dec
jge
test
ss
push
pop
add
sahf
xchg
add
add
add
adc
mov
dec
add
adc
jno
jle
add
seto
add
enter
push
test
sbb
pop
push
pop
sahf
dec
push
jns
add
or
or
sbb
inc
dec
or
inc
sahf
xchg
add
or
and
sbb
pop
or
in
call
call
add
xor
push
push
ja
and
and
push
rsqrtps
movs
mov
pusha
adc
sub
adc
push
and
and
ds
add
adc
pop
adc
ret
repnz
adc
adc
adc
inc
fmulp
cdq
adc
add
sbb
push
push
push
pop
mov
sbb
out
rcr
sbb
in
sbb
call
sahf
sbb
(bad)
sbb
sbb
cmp
sbb
jb
sbb
sbb
push
add
cmp
nop
out
push
inc
push
pop
hlt
inc
jns
jne
add
add
sub
cmp
inc
test
inc
sti
jb
jg
mov
into
jmp
fisub
mov
add
xchg
mov
cmp
je
call
push
in
repnz
lea
or
out
jns
in
in
cmp
enter
fwait
out
sbb
out
mov
add
call
enter
adc
nop
neg
jmp
jmp
retf
sbb
out
in
in
pop
push
mov
in
cdq
mov
add
inc
in
sahf
out
out
cmp
cmp
out
sbb
and
in
pop
lock
pop
enter
icebp
enter
pslld
test
pop
out
std
repz
push
push
jns
std
hlt
hlt
ror
cmp
hlt
fwait
mov
in
inc
jg
test
push
pop
idiv
sbb
clc
clc
cdq
inc
fmulp
add
stc
inc
stc
add
mov
cli
(bad)
nop
adc
cld
repnz
outs
sub
cld
je
cld
push
pxor
pop
jo
mov
xor
cmp
xor
pop
sub
push
inc
xor
dec
pop
or
add
push
jp
xchg
xor
movs
or
dec
shl
cmps
sbb
es
jecxz
ja
inc
mov
in
push
inc
push
fdiv
inc
and
daa
ins
nop
or
sti
out
out
cdq
inc
pop
and
outs
call
das
xchg
sti
sub
sbb
pop
jmp
jmp
mov
cli
in
add
xchg
cmp
cli
popf
cli
rcl
sbb
imul
or
in
repnz
das
cli
push
cli
push
cmp
jmp
ss
repz
sar
pop
and
push
stc
sbb
pop
xor
fstp
cwde
xlat
movs
test
fwait
(bad)
mov
add
stc
or
pop
and
clc
cmp
retf
sti
sti
enter
cdq
mov
mov
inc
adc
push
in
sbb
cmp
and
test
cmc
push
sub
sub
mov
fnstsw
mov
pop
shl
xor
xchg
scas
idiv
adc
push
mov
out
out
loop
cmp
(bad)
out
sub
xchg
cmp
mul
not
push
push
adc
mov
loop
jno
div
and
pop
mov
xchg
div
and
ins
out
jb
or
jno
test
div
pusha
leave
add
sbb
xchg
cmps
repnz
and
xchg
cmc
adc
xchg
pop
jae
pop
mov
cmc
div
idiv
scas
jae
fwait
and
mov
inc
clc
clc
jecxz
jns
loopne
stc
popa
cmp
dec
push
cli
cli
jno
adc
jb
hlt
pop
jne
mov
mov
rol
data16
into
shr
test
idiv
jo
(bad)
sti
push
inc
loopne
lahf
imul
adc
add
jae
loope
repz
leave
and
mov
adc
xchg
repz
sub
in
repz
inc
pop
retf
inc
repz
and
sbb
(bad)
jmp
xchg
inc
mov
xchg
repnz
xchg
pop
jo
sbb
dec
in
in
cmc
pop
daa
xchg
inc
and
add
adc
xchg
pop
loope
sbb
mov
adc
add
popa
leave
mov
xchg
cmps
jb
cmp
mov
adc
cmc
add
cmp
leave
jecxz
ffree
lock
pop
adc
loop
sar
cmc
jne
mov
lock
pop
mov
sbb
fld
ss
add
stos
add
adc
sub
out
nop
sbb
rol
in
enter
cmovno
push
add
mov
iret
add
stos
add
jno
fmul
jp
push
jnp
adc
mov
adc
mov
or
dec
xchg
mov
add
sahf
(bad)
and
sbb
dec
add
inc
mov
call
inc
add
xor
sub
push
mul
jl
iret
rol
and
int
mov
xchg
sub
sbb
add
iret
repz
dec
push
jne
fstp
fldcw
and
and
sub
repz
sub
push
(bad)
sbb
(bad)
jns
lahf
fimul
rol
mov
add
addr16
mov
dec
and
add
dec
xchg
or
(bad)
(bad)
jle
rol
adc
ret
inc
add
lods
inc
cld
jb
test
mov
cmp
push
imul
add
and
pop
push
not
sub
dec
and
add
hlt
ror
xor
rol
sub
or
clc
ret
jg
jge
push
dec
add
jmp
shl
nop
add
ins
mov
mov
nop
out
test
cmp
pop
les
dec
sbb
in
fiadd
cmp
add
mov
test
inc
push
add
jp
or
imul
or
punpcklwd
xchg
sbb
fist
out
add
cld
inc
shr
push
dec
and
ret
(bad)
mov
(bad)
cmp
rcl
imul
jb
cmp
cdq
je
fisubr
mov
mov
pop
test
ror
das
add
push
shr
cld
je
adc
and
je
lea
mov
dec
jmp
ret
fs
bound
mov
loopne
push
jge
push
inc
mov
adc
(bad)
adc
sub
in
jae
loopne
addr16
ret
adc
js
dec
loopne
in
adc
test
push
enter
cld
add
add
call
sbb
jne
mov
inc
jb
pop
ja
add
pop
dec
xor
sub
inc
inc
inc
js
mov
cmp
jo
or
mov
mov
push
inc
and
gs
pop
push
mov
and
inc
mov
rcr
push
xor
test
push
cmps
or
cs
cmp
loopne
(bad)
je
mov
xchg
or
add
not
pop
sbb
pop
cmp
enter
add
lods
test
ror
cmp
sub
lea
jno
call
mov
mov
xchg
add
out
nop
dec
xor
fnstsw
adc
or
and
add
push
outs
test
jg
lods
push
mov
push
lea
stc
sub
adc
xchg
xchg
dec
jbe
mov
into
fwait
inc
mov
out
sub
xor
xchg
lea
cmp
jne
or
add
adc
jne
sub
cmps
mov
iret
outs
dec
xchg
sbb
cwde
(bad)
aas
adc
(bad)
cmp
sub
mov
aad
xor
outs
test
push
push
jmp
mov
mov
cmp
outs
xchg
push
stc
and
or
adc
jne
dec
add
add
lds
or
dec
xchg
add
or
div
jg
fdiv
jmp
pusha
fidiv
retf
enter
sub
cmp
cs
xlat
loopne
add
cmp
jae
push
or
jb
movs
push
sbb
test
mov
mov
and
add
push
jmp
call
pusha
adc
mov
or
test
cmp
add
into
mov
sbb
retf
jbe
cmc
dec
mov
inc
mul
pusha
inc
clc
mov
test
repnz
sbb
mov
pop
pop
add
test
(bad)
fcomp
inc
xor
fiadd
(bad)
sar
add
ss
inc
jmp
cdq
and
or
popf
cmp
adc
pop
adc
cli
cld
fisttp
pop
loopne
xchg
and
push
cmp
jne
jnp
or
inc
mov
outs
pop
push
loope
inc
add
add
mov
push
cmp
jne
mov
push
cmp
jne
jns
fwait
cmps
(bad)
es
jne
call
and
fwait
jmp
mov
add
jle
lahf
(bad)
(bad)
jmp
std
std
jmp
cld
iret
or
ret
push
sub
test
mov
push
aaa
dec
push
adc
enter
dec
sbb
add
lods
mov
jmp
mov
pop
lock
jne
or
mov
adc
scas
pop
test
ret
das
cmp
jns
adc
and
pop
inc
pusha
mov
loope
lds
xor
dec
dec
and
inc
xor
mov
pop
adc
scas
loopne
pop
or
fstp
cmp
xchg
dec
adc
outs
je
lods
retf
xor
and
enter
sbb
fimul
sbb
inc
push
add
repz
lock
sub
jecxz
lea
ins
xchg
inc
(bad)
out
scas
call
jmp
pop
add
adc
jne
push
lock
or
mov
push
jmp
sbb
or
dec
outs
out
jns
and
sbb
bound
and
call
xchg
jno
fsub
into
cwde
ja
rol
and
adc
inc
add
adc
and
daa
data16
call
dec
cmp
push
(bad)
mov
mov
inc
add
mov
lock
jmp
icebp
push
mov
retf
clc
add
mov
test
stc
xor
pop
imul
stos
add
test
ins
adc
sbb
cwde
lock
sub
or
pop
lock
adc
push
dec
jne
mov
mov
popf
fdivr
inc
adc
inc
or
ds
jl
xchg
push
iret
sbb
cmp
imul
xor
das
cmp
sbb
sbb
rol
(bad)
jbe
cmp
and
sbb
out
or
pop
pop
scas
push
adc
shl
mov
(bad)
mov
jb
rep
jmp
xor
mov
ss
dec
inc
add
xor
push
out
out
push
fdivr
push
mov
mov
add
in
call
(bad)
mov
cmp
add
retf
retf
cmps
inc
add
add
xchg
mov
or
push
lahf
out
fisub
push
sbb
or
clc
cmp
inc
mov
mov
call
out
in
lock
hlt
xor
clc
cld
pop
push
ins
mov
lock
fldcw
pop
push
push
lods
sbb
inc
cs
pop
shl
push
sti
and
vpunpcklwd
xor
jl
cld
or
or
and
std
(bad)
cld
out
loopne
inc
jno
pop
neg
adc
nop
xchg
daa
stc
fsubr
cmp
hlt
cdq
mov
inc
push
fiadd
jl
outs
dec
gs
out
add
sub
ret
out
push
add
nop
dec
dec
adc
cmps
imul
ficomp
or
push
movs
lods
pop
jl
out
mov
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
xchg
lods
clc
fdivp
or
push
or
sub
add
push
inc
pusha
mov
daa
ja
call
mov
hlt
idiv
cmp
dec
cs
pop
pop
xlat
nop
outs
xchg
adc
jmp
push
scas
xor
jbe
push
cdq
pop
idiv
add
inc
add
mov
sbb
mov
push
inc
cmp
xchg
mov
adc
xchg
mov
das
mov
jmp
cmp
jae
dec
xor
pop
xchg
jbe
popf
clc
push
hlt
mov
dec
mov
pusha
add
call
dec
adc
hlt
cmp
and
pop
sbb
push
jg
push
sbb
xor
adc
add
mov
sbb
dec
or
xchg
movs
dec
and
and
xor
mov
pop
call
xor
mov
xor
pop
inc
shr
dec
push
xchg
xchg
out
loop
mov
inc
xor
xchg
sbb
into
lock
add
mov
fild
loop
push
cs
pop
inc
adc
pop
add
adc
add
imul
adc
ficom
and
mov
stos
xor
int3
dec
sti
mov
mov
mov
imul
ja
fnstsw
ds
jge
fnstcw
pop
cdq
pop
idiv
cmp
inc
jge
int
in
inc
xor
xchg
inc
out
cmp
ins
xor
es
jmp
inc
popf
xchg
in
(bad)
mov
mov
imul
fs
movs
mov
imul
add
jmp
jl
mov
adc
fcmove
sbb
pop
(bad)
xchg
mov
pop
ins
sub
shl
jo
repnz
sbb
inc
cs
je
add
adc
mov
add
dec
adc
cmp
loopne
mov
add
sti
fstp
push
pop
sub
sbb
adc
add
jae
cmp
adc
mov
pusha
arpl
adc
inc
push
jmp
jge
pop
je
pop
pop
mov
ins
cmp
jle
popa
inc
movs
pop
sti
push
scas
jno
xchg
fnstenv
int
int3
ret
xchg
mov
mov
je
dec
icebp
pop
mov
int3
jne
mov
mov
mov
inc
popf
push
enter
loop
cs
dec
mov
(bad)
mov
sbb
lods
js
adc
and
push
fs
or
inc
mov
push
aaa
sub
sbb
rcl
sbb
stc
pop
push
adc
call
xchg
inc
jmp
push
pushf
cs
adc
adc
pop
mov
and
push
pushf
jno
and
fld
ret
push
je
inc
(bad)
sub
push
push
movs
xchg
inc
outs
fcom
sub
and
jge
loop
in
sbb
pop
jne
push
lock
cli
add
push
cs
out
bound
adc
adc
or
out
or
or
add
std
(bad)
outs
mov
add
lock
push
outs
std
dec
jmp
xchg
ror
rcl
adc
jg
add
and
rcl
enter
(bad)
xchg
adc
hlt
dec
js
loop
inc
ins
stos
out
outs
dec
jne
cmp
adc
mov
mov
add
dec
inc
jg
jbe
and
std
lock
je
gs
stos
inc
cmp
pusha
cmps
pop
sbb
nop
ret
cmp
les
mov
inc
inc
cmp
je
xchg
mov
(bad)
fs
or
(bad)
sbb
adc
add
push
shr
fidivr
dec
je
and
mov
test
mov
or
sbb
inc
sbb
mov
inc
(bad)
mov
pusha
push
mov
push
ret
and
pop
inc
sbb
(bad)
or
xor
retf
push
aam
sbb
lods
mov
xor
cmps
adc
or
push
cli
xor
cmps
add
dec
push
xchg
enter
pop
xor
mov
or
lock
jmp
test
adc
test
(bad)
cmp
test
je
mov
enter
mov
(bad)
int3
xor
dec
imul
pop
push
pop
(bad)
inc
push
add
ror
pop
add
add
cli
frstor
imul
scas
sub
js
push
dec
sahf
dec
retf
mov
push
adc
fisub
sbb
or
sub
cmp
add
shl
push
lea
or
dec
xchg
je
jne
jmp
dec
or
jnp
movaps
push
push
jmp
das
scas
rol
repnz
jmp
dec
sbb
clc
into
push
dec
lds
add
jo
or
mov
dec
inc
mov
sbb
pushf
mov
clc
ret
inc
pop
iret
xor
add
call
movs
sbb
es
push
loop
and
call
jl
cmp
lahf
jge
outs
jns
and
jne
push
(bad)
jge
jo
call
mov
sbb
push
mov
push
pushw
or
rcr
bound
sbb
jbe
push
das
cmp
ja
rcl
clc
or
cmp
jne
inc
inc
call
push
shl
mov
inc
sub
or
push
imul
out
sub
(bad)
cdq
pop
stos
call
jmp
shl
sub
pop
ret
sub
ja
inc
jmp
aas
add
in
mov
ss
mov
inc
dec
mov
ror
jne
add
inc
jb
in
add
and
dec
sahf
popf
mov
out
dec
dec
jnp
mov
add
push
rol
dec
ds
and
bound
aaa
sbb
dec
mov
ja
rcl
inc
xchg
cmp
dec
ins
push
xchg
pop
or
dec
rcr
icebp
pop
das
enter
mov
lea
shr
stc
enter
fisttp
or
add
jmp
push
adc
call
jbe
jo
push
cld
jb
mov
push
add
fidiv
ss
cli
lahf
mov
dec
js
add
pop
inc
add
inc
inc
repnz
or
js
dec
loope
or
jne
loope
or
sbb
jmp
arpl
cmp
std
jne
pop
cwde
add
cmp
test
pop
arpl
cs
aad
les
or
inc
mov
adc
or
jg
add
or
sub
aad
std
cmp
xchg
popf
imul
sub
or
cmp
test
jmp
fbstp
sti
ss
call
pop
sub
pushw
test
sub
push
push
cmps
push
push
push
jl
add
(bad)
push
sbb
pop
xor
lods
pop
push
cmps
add
les
adc
jecxz
aam
dec
adc
mov
push
aas
sub
adc
sub
and
call
xor
adc
lods
dec
popf
sub
mov
cmp
cmp
push
pop
push
add
test
ficomp
xor
pop
dec
mov
add
inc
nop
sub
imul
adc
push
pop
dec
ss
add
dec
add
or
xchg
inc
js
retf
in
jge
aam
cwde
mov
es
pusha
or
xor
xchg
xor
xor
add
aaa
jne
popa
jne
or
out
or
ins
xor
push
pop
popa
test
add
enter
mov
pusha
and
adc
jae
mov
pop
call
nop
pushw
pop
call
or
addr16
adc
ds
jmp
add
adc
cmps
mov
xor
mov
popf
and
and
add
pop
push
add
call
mov
xchg
add
push
leave
sub
std
add
jo
clc
add
cmc
add
test
or
add
cmp
and
push
inc
adc
adc
sub
rcr
loopne
or
in
cmp
push
mov
cli
sar
xor
cli
mov
push
lea
loopne
jo
pop
xor
lds
push
and
pop
(bad)
push
sbb
imul
mov
jmp
push
cmp
imul
sub
sbb
inc
push
ror
push
jg
sbb
dec
in
jmp
add
xor
imul
jbe
rcr
mov
jmp
cld
mov
add
inc
cli
adc
sti
sbb
add
dec
xchg
xchg
or
adc
and
or
add
push
int
inc
jg
lock
pop
dec
(bad)
fmulp
and
je
int
and
push
cmp
xchg
sbb
fdiv
fstp
cmp
jne
fadd
inc
inc
movs
pop
add
and
jae
lock
(bad)
cwde
push
sbb
hlt
das
and
aam
sub
sbb
or
add
and
mov
sub
pushf
or
nop
adc
and
loop
mov
push
or
push
pop
(bad)
fsubrp
lods
retf
test
add
push
rol
sub
fnstcw
xor
stc
std
pop
cmp
push
or
cld
jns
jns
sbb
sbb
dec
je
call
mov
cmps
inc
mov
es
ja
(bad)
rol
cmp
lods
add
xor
sar
add
repz
dec
mov
or
or
sar
cdq
dec
cmp
mov
in
push
push
push
popf
out
adc
fiadd
loope
inc
push
xor
sub
xor
mul
pop
or
cmp
cld
mov
or
push
or
cmp
test
dec
adc
adc
bound
xor
rcr
push
outs
add
shl
or
jmp
mov
sub
mov
arpl
mov
inc
dec
jne
lea
adc
or
jl
icebp
fbld
xchg
pop
test
cmp
jmp
outs
add
sti
push
mov
add
hlt
mov
and
inc
jns
outs
and
lea
ins
rcl
xchg
out
push
or
or
lock
test
cld
ficom
and
and
push
push
imul
inc
int
std
push
cmp
pop
adc
inc
cld
pop
xlat
push
mov
sub
mov
or
mov
je
cmp
lahf
push
and
or
adc
aad
fiadd
(bad)
ret
jmp
mov
mov
lods
leave
sub
mov
cmp
add
lea
sub
or
push
jl
in
call
add
jmp
cmp
push
and
and
add
je
inc
sub
dec
je
ret
cld
and
add
arpl
mov
mov
xor
ins
add
ja
test
(bad)
and
jno
or
sbb
xor
mov
cwde
push
clc
cmc
jno
sahf
sub
jo
dec
out
or
mov
pop
ins
cld
mov
pop
inc
out
jmp
imul
in
ret
cmp
push
add
push
mov
(bad)
mov
cmps
and
sub
aam
in
repnz
inc
cmp
std
jne
fcomp
pop
cmps
jge
fld
stos
inc
add
and
les
rol
ret
dec
dec
jmp
or
lods
xor
cmp
sub
mov
scas
push
(bad)
nop
xchg
repz
std
dec
sbb
cmp
or
pop
fidiv
push
jmp
add
dec
fwait
pop
ret
push
and
sbb
scas
into
xor
dec
lods
add
dec
dec
push
xchg
adc
les
(bad)
cmp
jbe
clc
push
in
lea
mov
add
fld
leave
inc
inc
cmc
push
out
lea
xor
add
call
aas
push
push
in
into
sub
and
fs
or
or
call
mov
int3
inc
inc
test
sar
add
jge
add
in
xor
jb
mov
xor
xchg
ins
out
jo
push
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
sub
sbb
add
mov
xor
sbb
push
ds
mov
inc
dec
jne
sbb
movs
mov
add
pusha
sub
test
cdq
push
jnp
test
xor
cmp
test
data16
xor
hlt
dec
loopne
adc
cmp
push
sub
movs
mov
push
inc
(bad)
bt
and
mov
inc
sbb
adc
mov
stos
add
or
je
cld
fisubr
jge
cld
aas
and
push
test
adc
inc
push
jbe
cmps
push
inc
push
(bad)
sar
xor
lods
xchg
add
xchg
xchg
xor
(bad)
fadd
or
and
fs
test
ins
pop
shr
adc
(bad)
out
ja
loopne
or
pop
sub
jmp
xor
jg
or
mov
add
fwait
xlat
add
ret
rol
add
arpl
xchg
push
sbb
es
inc
mov
sub
mov
sti
imul
mov
jl
iret
cmc
retf
cmp
push
adc
and
mov
dec
popa
retf
mov
cmp
mov
pop
mov
mov
lock
mov
mov
xchg
mov
cdq
sub
iret
dec
not
das
adc
mov
call
inc
xchg
int3
xchg
or
sub
and
(bad)
sbb
ins
mov
cmp
sbb
cwde
sub
inc
lds
jecxz
mov
jle
or
push
cmp
idiv
cmp
add
fsubr
loope
pop
cmp
sahf
inc
add
sub
dec
or
pop
xor
and
in
mov
(bad)
push
sbb
mov
lea
(bad)
inc
sub
aaa
cmp
ss
out
or
jo
aam
movs
sub
or
ror
dec
jo
and
cmp
xor
je
adc
mov
dec
pop
pop
test
mov
jmp
xchg
inc
in
pop
add
adc
push
in
or
(bad)
pop
lock
mov
(bad)
sbb
pop
sbb
jo
loope
movs
ins
or
ds
lar
and
and
dec
xchg
add
sub
rcl
stos
sbb
sbb
jbe
pop
mov
out
jne
out
and
push
cmp
cld
pop
sbb
ret
mov
dec
loopne
and
aad
dec
pop
push
pop
cmp
cs
push
add
hlt
adc
jmp
cld
(bad)
fisttp
jns
fisubr
retf
outs
dec
scas
out
call
(bad)
sbb
cwde
sub
adc
inc
(bad)
shl
in
push
push
push
mov
fucomp
xor
mov
shr
inc
nop
mov
js
sub
dec
pop
and
das
int3
inc
pop
call
adc
xchg
and
cwde
and
sbb
mov
sti
retf
sbb
cmp
cld
push
jo
mov
ret
inc
or
inc
mov
lods
add
test
movs
or
mov
xchg
dec
jb
inc
cmp
scas
mov
out
sbb
jg
push
cmp
push
aaa
ret
outs
mov
add
pop
ret
(bad)
xchg
sub
dec
rcl
test
jbe
inc
pop
xor
push
push
movs
pushf
mov
pop
sub
test
cli
imul
rol
add
pushf
jmp
xor
not
les
fadd
push
cdq
iret
or
xor
and
nop
call
jb
sub
xor
jb
pop
cmp
inc
mov
jb
dec
pop
cmp
xor
daa
jle
popa
call
enter
jmp
cli
mov
ins
and
mov
(bad)
mov
adc
test
add
loope
mov
cmp
and
jge
add
push
push
divps
popa
pusha
add
xor
sub
xchg
mov
bt
dec
out
cs
cmp
cmps
mov
adc
pushf
add
and
daa
test
mov
jno
pop
inc
ss
cmc
pushf
xor
xchg
mov
or
sbb
mov
sub
data16
ss
mov
and
mov
iret
loopne
aaa
pop
mov
push
mov
mov
nop
stos
mov
movs
xchg
into
pop
das
pusha
jp
add
clc
pop
mov
mov
add
es
aam
lea
into
ss
out
das
mov
add
gs
popf
sub
loopne
fcom
gs
aam
sar
clc
or
(bad)
in
popf
enter
shl
pushf
pop
mov
fs
sar
in
cs
aaa
dec
cld
adc
(bad)
sub
jno
aam
aam
xchg
pop
and
fadd
lea
mov
sub
mov
add
dec
inc
xchg
adc
popa
js
jmp
jge
loop
jle
push
loop
push
ret
and
add
fild
xchg
add
ins
or
out
hlt
(bad)
jmp
mov
aam
call
mov
test
call
arpl
arpl
lods
add
mov
or
arpl
inc
dec
pop
hlt
arpl
ins
test
fdiv
cmp
repz
ror
sar
test
pop
fprem
mov
or
sbb
and
gs
and
inc
gs
fs
nop
movs
adc
push
lock
nop
inc
enter
nop
gs
jnp
mov
or
push
push
pop
or
xchg
mov
mov
and
nop
clc
int3
gs
mov
adc
dec
jecxz
jbe
cmp
push
xor
inc
adc
mov
xor
aaa
mov
cmp
pop
fstp
xchg
js
or
add
or
jle
cld
mov
and
ins
retf
jne
das
pusha
shl
ror
call
mov
jge
test
cwde
jae
test
mov
or
add
xchg
mov
and
adc
nop
or
push
repnz
push
and
imul
pop
(bad)
and
stos
idiv
push
lea
pop
mov
hlt
fdiv
mov
jne
mov
ficom
add
es
fwait
xor
ret
jb
enter
jmp
cmc
je
xchg
sbb
mov
xchg
dec
dec
adc
xor
jae
sbb
pop
sub
jl
or
jecxz
je
shr
push
add
push
retf
jmp
adc
adc
xchg
clc
push
mov
add
jmp
adc
mov
rol
stc
jbe
mov
addr16
push
bound
xor
or
inc
call
hlt
dec
or
gs
(bad)
and
add
xor
out
iret
loop
xchg
cwde
outs
push
leave
ret
shl
fsub
adc
and
dec
add
sub
loope
not
cmp
xchg
ret
enter
les
repnz
mov
or
mov
bound
fisubr
hlt
jecxz
pop
shl
and
test
push
inc
shl
push
pusha
sbb
sbb
jl
jmp
mov
push
xchg
push
hlt
(bad)
cld
aaa
sub
mov
leave
loopne
dec
or
or
rcl
push
loope
les
push
or
or
jp
dec
mov
or
lea
inc
cmp
fs
addr16
adc
test
mov
pop
push
pop
scas
and
pop
(bad)
add
push
inc
inc
or
dec
dec
or
dec
daa
jmp
push
jbe
add
scas
test
retf
mov
xchg
mov
and
out
inc
popa
and
shr
(bad)
dec
call
lahf
js
or
mov
xchg
movs
or
inc
or
test
push
daa
or
jno
mov
cmp
inc
xchg
cmp
stos
test
add
es
test
test
xchg
adc
pusha
push
jo
call
adc
jbe
push
inc
rcl
inc
movs
test
(bad)
mov
ret
xchg
push
(bad)
push
in
or
inc
sbb
xor
jno
icebp
pop
xor
mov
div
in
(bad)
and
sub
dec
add
lock
sub
dec
xchg
or
pop
(bad)
jle
push
inc
movs
aam
jnp
jo
dec
jmp
jns
data16
out
mov
(bad)
push
call
fsubr
lock
loopne
add
mov
call
(bad)
ret
lahf
rcr
int3
and
xor
ja
and
push
push
xor
femms
lock
dec
jmp
push
sbb
dec
cmps
xor
jo
outs
out
add
mov
dec
jbe
or
shr
pop
jnp
pop
push
sub
into
call
mov
rol
inc
push
xchg
cli
je
push
inc
jo
ret
xor
test
sub
or
in
mov
out
mov
mov
mov
mov
push
mov
mov
cmp
mov
addr16
addr16
pop
pop
ret
lds
movzx
test
in
mov
xchg
call
push
xchg
in
or
push
or
dec
clc
dec
adc
jle
lods
rol
imul
test
outs
ficomp
jl
enter
(bad)
mov
test
call
clc
sbb
enter
movs
sbb
bound
js
sahf
fld
or
(bad)
aam
jae
pop
fdivr
fsub
outs
adc
call
je
imul
push
add
mov
or
retf
and
add
sbb
adc
push
add
mov
or
aam
mov
mov
mov
stos
and
rol
lea
cdq
(bad)
pusha
xchg
ja
movs
mov
mov
jbe
xchg
or
out
sbb
hlt
hlt
stc
rcr
ss
je
or
inc
ins
je
inc
and
xor
sub
loope
ins
cmp
sub
mov
sbb
pop
and
pop
fdivr
pop
or
xor
mov
add
xor
pop
sbb
fs
cmp
jb
or
imul
int
cmc
jne
js
xchg
xchg
mov
je
mov
test
push
xchg
rcr
nop
lea
adc
xor
push
sbb
jle
inc
je
pop
push
or
xlat
pusha
scas
add
mov
ret
add
hlt
jo
mov
fdivr
xchg
scas
inc
jmp
test
mov
inc
push
jae
pop
test
jge
ror
dec
aaa
jne
das
mov
cmp
sbb
push
add
dec
and
shl
in
push
ret
push
loopne
mov
rcl
sub
in
sub
add
and
mov
mov
inc
loope
inc
inc
push
or
mov
jl
xor
adc
cmp
push
int3
neg
test
movs
add
lods
dec
dec
retf
sbb
or
push
iret
sub
and
pushf
je
in
pop
cli
inc
mov
push
mov
dec
pop
sbb
mov
aas
push
xchg
js
mov
(bad)
jnp
dec
fcmovnbe
jge
call
jge
pushf
and
mov
mov
xor
dec
test
jo
xor
jecxz
mov
lea
lahf
xor
jns
push
sbb
imul
dec
(bad)
outs
jo
add
add
mov
adc
jmp
pop
push
outs
je
test
ss
int3
dec
scas
out
je
aas
add
cs
gs
test
jo
fbstp
je
pushw
sub
add
movs
mov
adc
or
xchg
lds
jecxz
add
or
push
add
ret
jge
(bad)
jp
fidiv
mov
jne
mov
jmp
cmp
je
cli
pop
jle
ins
cmp
inc
data16
push
mov
xor
int
pop
adc
mov
mov
call
cld
adc
sti
jl
scas
jnp
fidivr
sub
fwait
adc
or
retf
test
lea
mov
pop
fwait
stc
call
dec
sub
inc
call
scas
popf
sub
add
xchg
inc
adc
mov
bound
push
outs
mov
and
jae
addr16
adc
loopne
dec
mov
test
adc
push
xor
sbb
push
sub
retf
call
jne
push
dec
aad
je
adc
adc
cmps
jmp
fsubr
inc
or
je
cdq
jp
xchg
dec
sub
push
xchg
call
dec
or
adc
jle
dec
shl
jecxz
nop
pop
fimul
(bad)
jbe
mov
or
sbb
dec
test
dec
push
and
lea
jo
das
sbb
adc
inc
les
adc
loopne
adc
sar
push
nop
xchg
inc
clc
clc
sahf
add
mov
dec
jmp
pop
cmp
push
fcom
jmp
je
into
cmp
shl
fisub
sbb
ss
mov
js
js
loope
or
jle
or
dec
repz
inc
int3
rol
sbb
js
sub
add
sub
sub
push
test
mov
and
loop
mov
fisubr
popf
fcom
or
cmp
loopne
jp
sbb
xor
int3
ds
fdivr
lea
jns
movs
nop
sbb
mov
dec
popa
pop
jmp
push
jbe
dec
sbb
pusha
dec
and
jne
jno
push
add
push
aaa
cmp
(bad)
call
add
pushf
push
shr
add
popa
jle
sbb
mov
cmp
add
and
pop
jg
call
or
enter
cmp
sub
imul
je
jp
or
fbld
rcr
adc
daa
pop
cmp
clc
mov
pusha
rol
cmp
loope
sahf
add
pop
pop
fisttp
adc
mov
push
adc
cmp
cmps
push
jmp
or
fdiv
ss
push
test
pop
add
or
push
mov
outs
jle
adc
xor
mov
movs
fisubr
xor
mov
fmul
loop
sar
push
lea
mov
fs
repnz
stc
and
arpl
and
ror
je
xor
and
call
rcl
mov
or
fwait
dec
mov
sbb
in
jb
push
retf
(bad)
or
add
ins
inc
jl
push
pop
lahf
sub
push
jne
push
aas
out
dec
inc
mov
and
adc
out
adc
stc
jge
mov
sbb
stos
and
dec
pop
sbb
mov
ss
push
(bad)
mov
jne
push
cmp
jmp
push
cmp
xor
adc
lahf
imul
add
mov
lock
aam
aad
into
rcl
cwde
test
sbb
test
out
sub
pop
adc
push
cwde
pop
rcl
ss
in
mov
mov
imul
add
jmp
rcl
(bad)
fcomp
dec
es
rcl
movs
int3
mov
aad
push
mov
sub
dec
push
add
cld
shr
jnp
fdiv
leave
arpl
imul
cld
cld
cmps
add
lea
mov
popf
mov
push
cld
jmp
div
push
clc
push
add
cmp
jbe
push
pop
dec
(bad)
(bad)
lock
or
sub
jae
mov
shr
lea
add
add
shl
pop
mov
sub
sbb
(bad)
pop
adc
mov
mov
push
pop
push
mov
push
dec
pop
add
stos
xor
and
add
jg
push
jecxz
inc
std
cwde
movs
sub
and
sti
add
push
js
push
dec
pop
cmp
rol
mov
imul
(bad)
adc
sbb
pop
mov
jno
jg
fnstcw
mov
shr
not
and
sbb
dec
add
xor
push
mov
das
mov
xor
dec
jle
pop
dec
add
jl
dec
retf
mov
add
mov
(bad)
or
mov
ficom
int3
inc
adc
dec
or
xchg
push
fwait
add
dec
pusha
mov
xchg
cmp
popf
xchg
inc
mov
mov
mov
pop
jl
lahf
push
or
pop
mov
jmp
lods
sbb
lods
dec
(bad)
push
mov
jmp
dec
in
or
xor
push
call
cs
(bad)
and
and
pusha
push
pop
inc
or
fsubr
paddsb
shl
add
scas
jp
push
call
aas
ins
loop
jnp
mov
push
or
add
and
inc
adc
dec
adc
add
(bad)
rcl
jmp
push
push
dec
push
adc
sbb
mov
adc
adc
and
push
jl
sub
add
jle
cmp
adc
aaa
jo
cmp
mov
inc
inc
mov
cmp
jne
push
pop
mov
imul
dec
cwde
outs
push
(bad)
cmp
xchg
out
mov
loope
add
cmps
mov
les
les
sahf
mul
inc
adc
leave
push
or
stos
(bad)
mov
xor
or
adc
out
call
dec
sbb
inc
or
inc
inc
(bad)
and
jmp
push
mov
shl
rol
pusha
mov
pop
clc
dec
stc
mov
ror
or
hlt
or
cmps
bound
idiv
int
or
add
sbb
sub
cmp
sub
shr
mov
dec
clc
inc
jge
loopne
mov
adc
adc
out
mov
cld
lock
call
stos
mov
retf
je
clc
add
movs
push
dec
lock
sbb
sub
in
sub
adc
inc
fs
inc
bsf
pop
mov
mov
lock
cmp
push
pop
dec
jne
or
lds
not
and
sbb
int3
les
repz
fwait
sbb
sub
sar
mov
fmul
cld
js
cmp
jo
loope
add
pushf
jle
jg
bound
cmp
mov
fdivrp
add
pop
pop
push
push
mov
int3
push
pop
imul
mov
test
clc
rol
pop
test
add
cmp
movs
add
nop
dec
or
sbb
adc
add
sbb
xor
add
add
fidivr
imul
hlt
lea
xor
xchg
popa
cmps
jg
or
je
jle
mov
pop
pop
call
pop
dec
dec
movs
imul
loopne
data16
and
js
push
ffree
test
mov
adc
inc
ins
xor
out
fsub
jle
pop
or
inc
and
clc
jl
loope
sbb
cdq
inc
or
mov
sub
pop
xor
push
sar
dec
ret
sbb
and
xchg
lods
in
rol
cmp
dec
xor
mov
fisttp
dec
push
fstp
fbstp
ja
push
push
push
add
mov
cmp
loope
lea
mov
cmp
out
dec
sahf
jbe
mov
mov
push
cmp
jb
mov
into
mov
movs
cmp
rdmsr
cmp
xor
dec
inc
pop
rcr
xor
inc
sbb
imul
movs
dec
and
add
lock
push
dec
push
push
push
jge
xchg
loopne
mov
adc
mov
mov
jb
or
jo
dec
or
mov
cs
nop
cmp
and
dec
xlat
and
sub
pop
xor
push
ret
jne
mov
mov
pop
mov
or
jae
imul
lock
aaa
arpl
and
jecxz
pop
cmps
xchg
and
leave
add
mov
cmp
dec
dec
mov
sub
push
sbb
dec
sbb
and
aas
sbb
inc
mov
xor
jne
mov
xor
cmp
fs
nop
fst
pop
retf
(bad)
dec
mov
cld
mov
enter
adc
outs
adc
cmp
leave
inc
test
inc
push
pushf
mov
sub
jno
mov
jle
mov
adc
add
popf
call
iret
icebp
push
cmp
push
push
jmp
mov
jne
lods
bnd
in
hlt
and
jmp
jp
mov
sub
bound
dec
push
and
mov
clc
into
xor
push
call
adc
fbstp
inc
mov
inc
pop
mov
xor
dec
dec
sbb
sbb
rol
cmc
push
or
dec
cld
inc
out
add
push
fiadd
or
push
mov
les
pop
out
or
nop
sbb
or
adc
cmc
lods
jbe
add
scas
and
lods
ret
mov
sbb
push
sbb
sbb
into
(bad)
push
jg
fdiv
jo
inc
add
aaa
lea
fcomi
out
add
(bad)
div
cmp
loopne
push
sbb
pop
jb
or
sbb
jae
fdiv
dec
and
sbb
and
dec
pop
xor
xor
add
cmp
add
push
pusha
and
mov
and
inc
jae
loop
and
minps
mov
adc
shl
int3
or
jle
push
(bad)
lock
xchg
inc
in
sbb
sbb
push
mov
les
mov
push
pop
and
mov
adc
or
inc
push
enter
inc
xchg
imul
adc
adc
add
mov
mov
xor
outs
sbb
dec
jge
ficom
and
fdivr
(bad)
outs
dec
jmp
std
lahf
push
adc
push
xchg
push
ds
adc
push
in
adc
inc
and
mov
or
mov
add
(bad)
mov
es
mov
es
mov
loopne
inc
js
push
or
pop
rcr
pop
push
loope
test
mov
fist
jbe
xchg
or
es
int3
push
xor
cmps
(bad)
mov
inc
sub
ror
rcr
jg
xor
mov
xor
ins
add
inc
dec
jne
push
sub
lock
lods
inc
aas
xor
add
data16
sub
js
or
lea
mov
call
movs
daa
mov
adc
pop
xor
jecxz
rol
add
cmp
shl
jge
jmp
(bad)
movs
cmp
jl
or
jmp
test
int3
mov
sub
je
pop
add
cmp
jmp
mov
aaa
enter
mov
sub
mov
out
(bad)
loopne
xor
jl
ror
movs
pop
call
mov
xchg
(bad)
push
xchg
out
inc
push
sbb
cli
jns
(bad)
dec
xor
(bad)
adc
add
adc
cmp
in
or
fistp
sbb
xchg
adc
mov
sub
push
pop
add
ja
ror
ss
mov
cli
scas
and
hlt
fidivr
mov
in
push
mov
mov
fistp
ins
jne
jp
mov
adc
and
pop
mov
or
pop
xchg
fwait
mov
add
cmp
ins
int3
shl
cmps
cmp
call
enter
loope
rcr
les
sbb
pop
std
pushf
xor
pop
dec
mov
test
adc
xchg
out
movs
(bad)
in
dec
pop
enter
leave
or
and
add
add
mov
cmps
sub
cmp
push
dec
(bad)
lahf
cs
add
or
xchg
push
leave
enter
cmp
xchg
pop
pushf
pushf
push
sub
fmulp
call
ins
and
add
inc
dec
outs
xchg
add
xchg
call
sbb
xchg
mov
shl
dec
fs
fimul
cld
and
xchg
and
data16
loopne
aas
test
xchg
retf
mov
shr
sub
mov
push
hlt
data16
mov
or
xchg
addr16
lods
or
cdq
xchg
in
lods
rcr
add
repnz
jle
call
call
in
or
pop
leave
add
mov
jb
pop
add
dec
shl
xchg
cwde
add
dec
push
nop
or
in
cmp
les
push
test
mov
mov
mov
enter
cmp
je
xchg
adc
or
shl
mov
and
repz
add
mov
dec
test
out
mov
ss
shl
or
sbb
jne
cmp
push
or
pop
dec
or
data16
add
sahf
(bad)
retf
mov
xlat
dec
loope
add
clc
xchg
lock
xor
jmp
outs
jne
sbb
je
rcl
sub
xor
xor
retf
or
cmps
mov
or
and
adc
or
test
ins
push
lods
ror
pop
inc
iret
das
mov
and
mov
or
in
les
mov
sbb
sahf
pop
mov
pop
shr
lds
or
jg
jecxz
ret
mov
cmp
jne
xor
outs
aaa
push
cmp
and
cmp
inc
ins
push
cmp
sub
push
jb
rol
push
outs
fdiv
sbb
add
test
loopne
xchg
dec
add
out
add
add
scas
movs
mov
mov
push
call
jmp
add
adc
loopne
add
loop
imul
push
call
ins
push
sub
add
sub
add
jne
mov
mov
or
call
push
adc
or
nop
lods
add
dec
je
test
adc
or
loopne
jmp
fld
mov
in
mov
retf
int3
and
not
and
cmp
jne
or
push
sbb
adc
sub
test
nop
pop
inc
repnz
cli
sti
cld
std
adc
enter
ret
xor
pop
dec
push
dec
in
push
dec
adc
cmps
sub
jg
sub
fstp
add
in
sar
sub
sbb
dec
mov
jle
movs
ins
jmp
dec
je
mov
jne
xchg
js
fmul
or
mov
push
pop
fsub
push
fld
or
int
in
call
sub
sub
mov
aad
cwde
imul
in
les
mov
push
leave
pop
jmp
jo
mov
ror
mov
jb
lods
repnz
mov
mov
sub
je
dec
je
add
and
sbb
gs
or
sti
fnstenv
in
mov
xchg
ins
jmp
mov
iret
mov
mov
fnstcw
xor
sub
sbb
fwait
dec
xor
cdq
mov
inc
test
push
ficom
retf
xchg
adc
scas
test
jl
push
je
in
cmp
push
adc
xchg
rcr
fst
push
rcl
or
push
xchg
aaa
adc
jo
jne
das
and
inc
lock
pop
adc
sbb
and
sub
ss
retf
mov
mov
out
jns
push
pusha
push
imul
fwait
mov
dec
inc
sbb
cmp
aas
arpl
pop
sub
test
or
push
mov
mov
test
imul
in
jle
push
mov
sbb
and
inc
xchg
dec
in
or
jecxz
mov
jb
push
xchg
jmp
inc
fadd
mov
jle
or
popa
mov
mov
aas
test
fmul
iret
mov
ins
or
cmp
fcmovu
add
jne
push
push
adc
inc
jle
enter
out
add
inc
arpl
scas
cmovge
mov
mov
mov
call
in
xchg
jg
xchg
pop
mov
lods
std
xchg
sub
inc
or
jecxz
jecxz
jne
or
mov
clc
sub
pop
mov
sar
add
fcom
dec
movs
sti
int
test
jne
dec
sbb
cli
fld
jecxz
sar
lea
test
add
nop
push
addr16
cmp
xchg
mov
pop
inc
mov
mov
sub
ds
mov
pop
movs
inc
or
and
jns
dec
jl
mov
dec
xchg
icebp
popf
jp
ja
movsx
xchg
popa
psrlw
push
daa
pop
das
xchg
inc
xchg
std
lods
inc
cmps
fmul
mov
leave
ror
jecxz
pop
cs
cwde
xchg
pop
repnz
xchg
out
movsx
xchg
fldpi
xchg
push
pop
or
add
inc
retf
in
cmp
and
test
jle
iret
mov
cmp
inc
lahf
cmp
test
or
mov
std
jl
xor
sbb
sbb
mov
add
mov
or
inc
pop
cmp
push
jmp
lahf
pop
dec
cmp
inc
add
test
push
pop
and
sub
sbb
inc
jne
jl
cmp
xor
pop
inc
bound
sub
imul
push
imul
add
jo
pop
lods
cmp
xchg
ret
movs
stos
push
push
fwait
push
xchg
leave
jmp
fldcw
mov
lea
retf
xchg
pop
jl
jp
(bad)
xor
test
add
clc
jo
jmp
pop
xchg
icebp
push
add
or
dec
adc
inc
push
inc
cmp
jl
lods
ret
popf
in
mov
popfw
inc
ret
xchg
enter
pop
(bad)
cwde
add
retf
cmp
jne
xor
in
jno
stc
mov
rcr
jg
test
mov
mov
push
sub
fcmovbe
jns
pop
in
sbb
daa
mov
sahf
add
(bad)
rcr
xchg
xchg
adc
std
loopne
fisub
in
mov
call
jmp
mov
jno
not
loopne
sub
imul
fdiv
fcomp
ins
and
xchg
or
mov
or
imul
int
push
jns
in
xchg
arpl
jecxz
inc
repnz
xor
mov
sbb
lock
xor
shl
addr16
das
lock
fdivr
adc
adc
ret
rol
lds
and
sar
imul
rol
shl
xor
into
gs
mov
pop
cmp
ss
xor
je
mov
ss
push
xchg
pavgw
popf
cwd
inc
push
mov
fdiv
xor
daa
cmp
dec
inc
mov
rcl
std
lds
sub
cmc
arpl
mov
arpl
and
mov
cmp
pop
imul
cs
cmp
fdiv
push
ds
icebp
push
push
nop
mov
iret
std
mov
mov
jb
iret
mov
out
call
add
mov
xor
cmps
mov
daa
cmp
xchg
add
xor
sbb
inc
inc
adc
sub
leave
addr16
cmp
mov
sbb
push
jb
std
lock
xor
movs
imul
test
lahf
loopne
mov
leave
std
inc
repz
int3
jp
test
into
jp
jbe
fdivrp
or
es
out
ds
cs
add
in
cmp
sub
test
sub
movs
das
in
jmp
dec
cwde
fwait
cmc
and
add
sar
push
push
sub
xor
cmc
int
cmps
push
sub
sub
or
adc
and
cmc
loope
out
int3
cmp
pop
cmps
pop
sahf
sbb
stc
sbb
mov
dec
add
aas
mov
cwde
dec
repnz
lock
dec
and
dec
inc
js
fbstp
sbb
pop
ins
mov
movs
inc
mov
xor
cmps
mov
push
inc
retf
add
sub
sub
cmp
cmp
or
add
lahf
mov
std
das
push
xchg
jl
pop
jno
push
je
mov
xchg
inc
dec
std
std
loope
sbb
sub
sahf
rol
enter
das
nop
mov
adc
hlt
xchg
adc
nop
dec
call
push
jl
es
xor
movs
test
and
inc
xor
in
or
pop
and
dec
stos
and
ja
push
jno
nop
adc
adc
and
adc
int3
or
inc
out
cmps
dec
cwde
ins
xor
sti
and
sub
inc
cwde
test
jne
gs
mov
sub
aas
mov
mov
test
xchg
movs
test
sbb
inc
push
add
fcom
mov
loopne
xchg
pop
(bad)
sbb
push
aaa
(bad)
lahf
mov
jmp
ja
mov
inc
test
or
mov
sub
sub
add
mov
or
jmp
mov
sub
cmp
sub
cmovs
lock
(bad)
xor
movs
pop
add
xchg
arpl
movs
xor
aaa
inc
mov
inc
dec
mov
add
mov
cmps
cdq
movs
push
cmps
mov
inc
bound
test
adc
and
mov
inc
inc
inc
sahf
adc
xchg
jo
inc
mov
push
dec
lods
xor
aaa
jbe
or
mov
test
mov
mov
leave
and
repz
xchg
mov
lods
pushf
inc
sahf
sbb
pushf
and
test
mov
xor
es
mov
fdivr
fimul
xchg
xchg
dec
in
mov
loope
xchg
xor
fwait
mov
cmps
sbb
leave
inc
mov
mov
aaa
add
mov
mov
lahf
and
or
icebp
add
sbb
test
jb
pushf
nop
jl
shl
stos
mov
aaa
fisubr
dec
stos
lea
mov
lock
mov
dec
in
imul
dec
or
(bad)
sbb
xor
add
lahf
std
pushf
movs
nop
sbb
add
and
dec
call
adc
adc
inc
cs
xchg
stos
inc
scas
mov
xchg
pushf
nop
nop
nop
cdq
add
lods
cmp
cmp
fstp
mov
sbb
pop
je
xor
dec
xchg
jg
ror
and
sahf
out
mov
lahf
test
shr
adc
jns
sti
ss
inc
add
js
iret
pop
test
add
pop
rcr
fwait
add
movs
or
jne
gs
inc
sub
in
test
mov
push
sub
test
cmp
mov
shl
inc
sbb
or
gs
clts
ret
sbb
repz
or
and
ror
mov
mov
or
cmp
adc
mov
popa
push
lds
xchg
mov
nop
ins
ret
shl
inc
adc
jo
test
into
test
test
cmp
int3
dec
out
jl
dec
mov
push
or
lahf
dec
push
pop
or
mov
push
pop
(bad)
daa
retf
jno
test
je
mov
xor
shr
cmp
je
cmps
mov
sbb
and
pop
in
sub
jne
lea
popa
add
imul
cmp
sub
mov
sbb
scas
nop
shl
fucomip
stos
bound
sub
jl
scas
jb
sbb
cmps
in
add
lahf
xchg
jo
imul
cld
mov
cmp
out
mov
mov
add
(bad)
xchg
add
fimul
test
lock
push
dec
push
jl
gs
sbb
mov
cmp
in
mov
and
addr16
adc
cmp
inc
xor
sbb
lahf
add
and
sub
push
shr
push
inc
or
daa
out
int
push
add
je
hlt
daa
clc
inc
push
ret
xor
push
test
cmps
jmp
ss
sub
inc
jecxz
iret
test
test
cmc
les
jnp
sar
xor
xor
fwait
and
add
sar
fisubr
fimul
fmul
push
pop
cli
test
jbe
dec
dec
(bad)
cmp
cdq
ins
jne
push
retf
call
leave
and
xor
es
add
pop
adc
bound
(bad)
add
pop
iret
pop
jmp
imul
mov
or
mov
test
adc
push
or
xchg
push
adc
nop
les
mov
in
push
and
adc
inc
imul
inc
pop
mov
sbb
mov
(bad)
jo
movs
stc
inc
stos
xor
out
stos
mov
mov
and
cmp
add
add
add
push
call
dec
push
test
cmp
call
cmp
xor
xor
xor
(bad)
dec
mov
mov
test
outs
gs
add
lods
mov
add
inc
add
je
js
imul
and
xchg
dec
jge
and
fwait
sbb
ds
sub
push
dec
cdq
(bad)
cdq
pop
sub
retf
push
pop
push
push
hlt
fdivr
add
call
scas
xchg
aas
pop
fcmovb
lea
and
add
add
loope
mov
mov
add
pop
push
adc
adc
shr
loopne
mov
daa
rcr
rcr
shr
rcr
or
jne
div
mov
fs
inc
in
imul
outs
mul
add
jb
cmp
or
cmp
add
jecxz
cmp
jo
inc
push
and
mov
jae
mov
sub
pop
xchg
mov
(bad)
xchg
dec
js
mov
lea
dec
ins
xor
cmp
fs
pop
inc
cmp
jb
inc
inc
bound
nop
dec
lahf
dec
out
add
dec
cld
inc
cmp
rol
jmp
sbb
pop
jg
sbb
fcomp
push
fcmovnb
cld
or
push
jp
clc
or
inc
mov
ret
fwait
mov
mov
push
sti
jb
inc
jo
or
sub
(bad)
adc
dec
mov
test
fs
add
dec
push
mov
sbb
push
cs
cs
sbb
or
push
and
and
adc
nop
(bad)
jb
dec
add
call
xor
mov
push
pop
mov
and
test
fistp
add
imul
imul
mov
adc
ror
and
xor
dec
adc
push
pop
fdiv
sub
adc
sub
adc
mov
and
xchg
icebp
xchg
dec
pusha
ror
or
adc
rol
or
pop
rol
data16
jge
imul
jle
sub
fst
cmp
xor
and
add
cmp
jl
mov
inc
fs
or
pop
inc
add
nop
pop
or
nop
sub
cmp
lea
push
cmp
add
pop
sub
fs
ror
pop
mov
push
sbb
push
dec
lock
ins
mov
mov
xor
sub
xchg
out
push
gs
icebp
imul
sbb
mov
jb
hlt
add
pop
ret
add
mov
add
xor
mov
adc
pop
add
or
int3
jns
pop
inc
ret
pop
shl
fs
inc
fld
clc
add
aad
inc
mov
or
pusha
push
push
dec
lods
out
add
push
mov
pop
xchg
and
and
sti
adc
lock
sbb
jmp
mov
ja
push
push
mov
mov
cmp
and
add
sbb
stc
jo
xor
cmp
les
push
in
adc
fld
add
je
mov
mov
aam
inc
pusha
cs
sbb
jge
sbb
inc
mov
xchg
adc
and
loope
fcomp
mov
mov
pop
mov
outs
adc
mov
lahf
mov
sbb
push
push
xor
mov
jo
inc
add
adc
mov
xor
push
adc
fs
fwait
popa
adc
pop
jb
repnz
add
push
or
mov
pop
cmp
jmp
jg
fcmovnb
and
pop
inc
out
xchg
add
call
push
je
xchg
push
jbe
sbb
ret
test
or
pop
mov
adc
jmp
cmps
adc
pusha
cld
retf
je
inc
push
jo
scas
out
jmp
fsub
shl
push
adc
mov
out
add
xor
jg
js
(bad)
stc
xor
add
xor
lahf
push
jbe
push
and
xchg
fstp
sub
shl
push
lods
fs
adc
inc
mov
enter
je
push
sahf
cmps
cmp
adc
sar
xchg
pop
addr16
(bad)
outs
or
push
xchg
push
inc
cld
fist
repnz
mov
sbb
js
sahf
xchg
fimul
movs
push
mov
pop
sar
shl
adc
mov
hlt
cmp
hlt
cmp
pop
mov
cmp
iret
out
jmp
rol
gs
and
dec
cld
or
ja
inc
repz
scas
adc
pop
or
ja
dec
pop
inc
push
add
and
shl
push
out
add
jmp
push
pop
inc
jb
cmc
mov
rcr
sub
and
sbb
mov
dec
outs
mov
cmp
jbe
push
lahf
arpl
jle
bound
jge
push
xchg
out
add
inc
mov
mov
mov
adc
popa
mov
clc
ds
pop
push
mov
dec
pop
shr
test
ss
sti
movs
neg
cmc
and
cmps
in
daa
enter
xchg
xchg
dec
ror
adc
or
stc
movs
push
dec
sub
pop
push
out
mov
call
add
and
in
fdiv
retf
pop
repz
mov
inc
and
cmp
push
ror
pop
imul
mov
push
fs
jo
mov
fs
xor
inc
or
inc
je
sub
mov
rcr
fwait
push
inc
xchg
inc
push
test
sti
or
xchg
add
retf
es
adc
(bad)
fild
mov
mov
jecxz
ror
rcr
dec
inc
inc
inc
popa
xor
adc
add
lods
push
shl
mov
inc
inc
inc
pop
je
pop
es
lahf
(bad)
pop
int
or
shl
int3
repz
or
call
shr
add
je
std
stc
add
cwde
icebp
xchg
push
push
mov
or
test
cmp
mov
mov
mov
mul
xor
inc
pop
mov
(bad)
mov
add
adc
jle
add
and
pop
pop
test
sbb
ins
cmp
cld
jns
pop
inc
mov
mov
mov
push
scas
mov
add
bound
xor
cmps
add
out
stos
movs
xchg
ds
pushf
aas
jae
fiadd
cmp
pop
inc
dec
shl
xchg
push
and
jl
int3
mov
jo
sub
frstor
test
push
push
or
or
dec
sub
inc
fst
jo
jle
mov
shr
add
push
jl
and
mov
cmp
jecxz
xor
rol
jne
mov
sahf
cmp
imul
inc
or
jne
repnz
add
(bad)
push
sar
adc
xchg
and
punpckhbw
das
mov
mov
inc
xor
nop
dec
mov
aam
aas
and
(bad)
adc
add
sbb
std
lea
ret
jmp
test
push
add
xchg
mov
xor
and
aam
or
pop
mov
cmp
(bad)
mov
mov
mov
xor
sbb
or
lea
pushf
movs
jbe
cmp
pop
push
dec
aam
fadd
add
(bad)
or
fbstp
add
or
or
or
or
or
cmp
sbb
fsubr
inc
mov
in
js
into
xchg
xor
ins
mov
push
xchg
inc
jl
mov
add
fs
(bad)
jl
pop
or
dec
pop
pop
sbb
push
sbb
outs
lock
push
sbb
and
mov
dec
and
hlt
adc
push
cmp
daa
adc
(bad)
popa
mov
adc
sar
sar
jg
popf
and
dec
sub
adc
mov
imul
sbb
xor
add
dec
pop
or
push
(bad)
scas
mov
clc
add
or
pop
shl
add
or
stos
fs
mov
and
mov
idiv
or
inc
adc
bound
loopne
xchg
pushf
repz
or
add
int
aaa
dec
cmps
jmp
(bad)
xchg
adc
jecxz
neg
ret
push
adc
and
cmc
push
in
clc
and
or
aas
push
aaa
stos
mov
jmp
jne
add
push
(bad)
popf
or
mov
mov
add
add
mov
jmp
xchg
hlt
je
scas
pop
not
stos
nop
inc
lods
push
adc
add
dec
in
test
mov
sbb
xchg
or
dec
jl
shl
jnp
and
dec
push
xor
ficom
push
rcr
dec
lock
sar
mov
dec
mov
or
inc
mov
lock
not
push
shl
xchg
inc
mov
or
enter
les
aaa
cmp
enter
pop
xchg
dec
add
ret
sub
aas
test
add
or
test
or
mov
(bad)
jnp
sbb
jg
adc
and
inc
push
aad
ror
lea
and
xchg
jne
cmovno
adc
cdq
into
inc
loopne
lods
cli
sub
or
cmp
rol
das
mov
cmp
je
sub
and
xchg
jo
push
inc
add
shr
out
push
push
cmps
jge
hlt
rep
ss
neg
sub
and
test
dec
iret
push
push
in
shr
loopne
fimul
dec
mov
dec
inc
adc
dec
pcmpgtd
mov
int
mov
mov
push
not
inc
stos
add
in
mov
imul
mov
popa
push
mov
popa
imul
cwde
pop
pop
dec
sbb
mov
mov
mov
xor
add
ret
jl
add
jle
mov
add
push
push
jae
(bad)
pop
daa
int
inc
and
dec
pop
lods
xchg
jmp
(bad)
mov
mov
mov
inc
adc
outs
in
cmps
(bad)
jge
lock
hlt
clc
inc
dec
adc
cld
sub
and
cmp
mov
adc
or
lea
mov
adc
mov
push
add
push
(bad)
ret
ror
xchg
sub
jne
sbb
adc
lea
outs
push
push
dec
adc
push
and
xor
push
pop
(bad)
iret
out
outs
inc
or
jbe
jle
sahf
rcl
outs
ja
mov
jecxz
xchg
sbb
cmp
or
test
ret
sbb
enter
or
cmp
loope
or
mov
mov
and
call
das
icebp
je
sub
(bad)
mov
cdq
mov
dec
ja
cs
sub
rcr
fwait
inc
dec
add
sub
(bad)
lock
in
inc
dec
inc
pop
lock
rep
add
xchg
add
adc
scas
loop
mov
and
or
inc
fst
aaa
adc
mov
stc
add
pop
add
mov
inc
or
les
push
sub
je
xor
jno
sbb
sbb
mov
sti
or
add
inc
mov
xchg
imul
es
sub
call
ds
add
ret
je
mov
add
push
jno
xlat
je
and
call
add
push
add
add
movs
xor
sbb
push
and
pop
dec
mov
and
cld
adc
scas
mov
dec
dec
sbb
mov
test
les
out
inc
push
je
xor
mov
pop
push
loope
push
fadd
mov
inc
jbe
in
inc
pop
mov
ret
mov
xor
das
xor
ret
ss
jmp
mov
and
push
xchg
mov
loopne
xchg
test
imul
fidiv
jne
xchg
aam
sar
dec
mov
mov
sub
sub
mov
outs
fcomp
and
mov
inc
xor
jle
push
rcl
aam
dec
mov
and
fnstenv
dec
adc
outs
sub
jbe
inc
jmp
jae
adc
cmps
je
push
inc
add
or
and
mov
test
movs
test
sahf
inc
mov
lahf
mov
call
aam
push
popa
cmps
movs
inc
adc
jge
(bad)
movs
loope
or
inc
or
pop
imul
fsub
cmp
inc
cld
scas
adc
xor
cmp
inc
jmp
fs
mov
pop
sub
cmp
scas
push
punpcklwd
add
push
add
push
add
add
adc
out
movs
in
rcr
fsub
popa
jl
ins
and
adc
mov
dec
sub
mov
inc
xor
fcomp
test
inc
gs
cmp
xor
xor
adc
jne
and
fdivr
ja
rol
mov
das
sahf
or
enter
sbb
or
add
mov
in
add
and
in
or
add
in
int3
add
adc
adc
sub
mov
adc
lsl
cmp
xchg
jmp
sbb
push
inc
nop
retf
sbb
fbld
(bad)
push
jbe
dec
sub
sbb
adc
or
fimul
sub
sub
loopne
mov
iret
into
inc
or
cli
mov
inc
or
pop
and
push
xor
test
scas
jne
mov
loop
jl
ret
repz
mov
sbb
xor
adc
repnz
mov
shl
imul
pop
mov
dec
sbb
xchg
dec
add
inc
cmp
(bad)
sbb
jle
jne
lea
sbb
ficom
lock
ins
cld
jl
xchg
int
ret
jl
and
enter
jp
into
adc
ss
ret
cmc
jne
dec
sti
pop
add
add
lea
xchg
dec
jae
and
adc
mov
pusha
fs
xchg
ret
xchg
add
or
prefetch
mov
pop
inc
mov
shr
into
(bad)
jl
mov
shl
add
cld
sbb
loop
xor
sub
mov
jmp
xor
push
xchg
inc
xor
ret
aam
adc
xchg
sub
addr16
xor
ret
ret
sahf
js
sub
mov
mov
or
cmp
add
cs
sar
lea
or
xchg
mov
and
or
mov
fcomp
inc
jmp
pop
lock
out
add
dec
mov
xor
pop
mov
adc
push
jns
js
sbb
sub
test
dec
je
pusha
add
mov
lods
sbb
push
add
cmp
imul
xchg
cmps
cs
mov
clc
sbb
sbb
add
rcr
jmp
push
inc
cmp
xor
out
or
dec
sbb
sbb
push
inc
xor
sbb
test
push
fcmovbe
push
or
adc
cld
push
adc
mov
aaa
push
or
daa
daa
daa
or
adc
pushf
fsubr
ss
pushf
pushf
pushf
pushf
sub
xor
sbb
pushf
cmp
cmp
inc
inc
cmovs
cmp
push
push
pop
add
dec
pusha
fs
dec
jo
js
imul
adc
fs
dec
mov
xchg
cwde
pushf
dec
es
mov
push
jecxz
sub
sub
popa
and
add
or
fild
or
xor
rcr
lds
dec
adc
or
dec
adc
sub
sbb
pop
inc
call
mov
pusha
add
mov
scas
fcomp
pop
adc
mov
dec
adc
cmp
xchg
test
cmp
lds
sbb
mov
dec
jne
call
or
and
les
mov
cmp
pop
push
push
daa
cli
fsubrp
or
add
add
push
xchg
lock
xchg
pushf
call
aam
rcl
push
inc
push
lods
shr
fsub
sbb
sub
pushf
dec
cwde
xchg
mov
sar
(bad)
shl
loopne
daa
js
inc
shl
add
pop
pop
sahf
mov
and
inc
or
mov
xor
ss
inc
xchg
ret
loop
cmp
repnz
lea
(bad)
je
sub
shr
fdivr
ror
push
xor
ret
retf
sub
fcomp
(bad)
lock
mov
sbb
cmp
fmul
in
pop
dec
push
add
fwait
aam
pop
int3
adc
rcr
inc
cwde
or
pusha
sbb
rcr
sbb
sub
dec
pop
je
push
pushf
neg
retf
sub
lea
xchg
and
loopne
pusha
stos
int
jge
or
fs
push
or
enter
stos
mov
sbb
mov
popa
jns
nop
test
jnp
xchg
xchg
int3
retf
mov
retf
retf
push
cmp
or
pop
mov
pop
jne
and
ret
mov
mov
sub
cmp
add
xor
ret
mov
adc
and
pop
shr
dec
jmp
pushaw
cmps
dec
or
sub
adc
jnp
mov
iret
pop
add
cmp
pop
je
dec
mov
call
scas
dec
xor
cmc
sub
dec
loopne
cmp
outs
mov
cmc
js
pop
cmp
hlt
adc
mov
add
mov
jb
push
mov
pusha
mov
jmp
pop
add
sbb
and
stos
enter
push
push
lods
and
add
jle
mov
or
sbb
fmul
add
xchg
push
add
sti
(bad)
mov
pushf
pop
mov
sbb
mov
and
ds
int
mov
lea
mov
in
(bad)
ror
lds
inc
pop
in
push
mov
xchg
jo
in
cmp
push
sar
or
inc
pop
fld
(bad)
gs
sbb
xchg
and
xor
lea
mov
push
lea
loope
add
out
out
dec
sti
sbb
pop
and
fcmovnbe
sti
mov
or
add
fdiv
jne
je
ss
iret
lods
xchg
dec
lea
adc
rcl
or
icebp
pop
popf
add
cld
add
xor
pop
inc
sbb
imul
mov
popa
mov
test
sahf
push
inc
push
jmp
lea
in
cmp
pusha
lods
or
fisttp
imul
ror
loope
pop
add
pop
or
cmp
sbb
mov
test
jmp
rcr
or
lods
mov
or
out
dec
ja
mov
mov
mov
push
test
jmp
xlat
sar
dec
add
fstp
(bad)
out
xor
jo
retf
add
mov
jo
rol
cs
repnz
pushf
add
adc
sbb
icebp
cmps
jo
inc
lea
push
loopne
add
fmul
or
pop
cmp
aas
sar
mov
test
jnp
inc
test
fs
jmp
sar
cmp
test
mov
cmp
imul
push
test
shl
mov
push
add
pop
mov
sub
add
cmp
jne
(bad)
mov
shl
aam
jmp
sbb
out
inc
dec
out
sub
jmp
inc
cmc
mov
dec
or
cmps
lods
iret
test
add
je
es
sub
aad
cmp
sbb
fisttp
xor
lahf
pop
add
aam
push
mov
inc
mov
in
js
sbb
dec
add
xchg
sbb
sbb
jecxz
loop
lock
cmp
(bad)
jmp
xchg
test
fucomp
mov
and
fidivr
(bad)
push
cmp
mov
push
adc
or
clc
mov
inc
mov
adc
cmp
fmul
push
pop
sub
and
je
push
sbb
inc
add
mov
daa
jmp
cmp
sbb
call
pop
movs
dec
add
sbb
push
cwde
sub
rcl
inc
lods
push
sub
out
pop
push
or
inc
inc
sbb
repnz
mov
and
mov
or
xor
xchg
add
push
sar
dec
mov
call
mov
add
jbe
add
xchg
push
xchg
(bad)
sub
inc
out
or
pop
icebp
inc
sar
into
into
sub
jmp
scas
int
enter
fs
or
push
cdq
std
jno
(bad)
loopne
add
xchg
sub
add
xor
add
outs
jo
retf
jmp
or
and
sbb
or
xchg
imul
aas
(bad)
lea
loope
out
xor
cdq
cmps
les
in
inc
ja
fadd
xchg
cmps
xchg
cmp
jmp
cmp
adc
mov
fidivr
xor
inc
cli
mov
les
inc
cmp
sti
and
sbb
test
push
lahf
dec
and
shl
inc
test
mov
inc
enter
cwde
leave
ret
pop
je
aaa
push
scas
mov
cdq
mov
cmps
or
sub
and
sahf
pop
pop
js
mov
inc
cmp
mov
dec
sbb
push
jns
inc
scas
add
push
and
xor
jmp
sbb
xor
add
adc
jo
dec
jmp
unpckhps
icebp
and
sbb
or
je
neg
mov
xchg
adc
jns
mov
sub
or
xor
ss
push
push
pop
pop
add
pop
adc
add
sub
adc
mov
xchg
cwde
mov
push
mov
jmp
mov
bound
and
rol
add
add
jmp
jns
nop
push
mov
out
mov
ficom
cli
sbb
mov
ja
push
mov
xor
or
mov
add
or
xchg
push
in
in
mov
sub
mov
test
cli
push
gs
arpl
cmp
or
jle
or
(bad)
loope
lock
push
sub
popa
xchg
lods
les
sbb
dec
retf
stos
push
push
gs
aad
mov
jle
cmp
lods
jg
out
ins
loopne
rcl
xchg
div
adc
jge
addr16
fadd
dec
pop
shr
aam
or
les
movs
add
push
(bad)
push
mov
imul
pop
fldenv
pop
adc
push
pop
dec
cmp
lods
pop
dec
pop
pop
ins
mov
inc
and
jg
sbb
add
xchg
add
clc
je
xor
jecxz
add
jmp
or
xor
outs
adc
dec
cmp
xor
inc
dec
in
aam
push
push
push
and
jo
adc
je
inc
cmp
shl
sub
sti
mov
js
pop
sbb
cmp
les
add
push
popa
add
cdq
lock
jmp
inc
ds
and
dec
cmp
push
adc
icebp
adc
push
mov
cmp
pop
adc
and
dec
cmp
frstor
mov
or
inc
jmp
icebp
xor
jecxz
movs
inc
popa
jge
mov
add
jle
mov
dec
jl
and
ret
push
jmp
pop
pop
push
icebp
pop
adc
cmp
and
pop
add
mov
sahf
sbb
push
shl
nop
lods
pop
fiadd
jnp
out
js
push
cmp
sub
arpl
out
cmp
sbb
push
cmp
mov
add
(bad)
sbb
pusha
sub
pop
cmp
adc
dec
and
sbb
xchg
adc
and
jo
mov
xor
cmp
cmp
in
jmp
dec
xor
mov
mov
das
push
mov
push
inc
ja
inc
dec
cmp
in
lock
pop
sbb
pop
adc
sub
sub
inc
inc
arpl
sbb
push
xchg
sbb
xor
mov
dec
push
adc
jne
or
and
dec
scas
xor
mov
sbb
adc
dec
sbb
xchg
int3
cmp
ret
mov
fidivr
repnz
das
adc
mov
rcr
inc
jecxz
add
(bad)
dec
into
jl
or
or
call
mov
imul
sub
or
pop
mov
popf
inc
push
cmps
popf
mov
mov
and
jne
dec
sbb
or
data16
cdq
push
inc
xchg
(bad)
xor
sub
in
sub
pop
das
cmp
adc
pcmpgtb
add
inc
popf
test
pop
pop
jecxz
push
mov
ror
push
push
mov
pushf
leave
std
jmp
fwait
sub
rcr
sbb
or
push
imul
inc
push
inc
cmc
nop
cmp
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
mov
cmp
in
mov
mov
push
data16
pop
div
mov
je
push
dec
(bad)
and
adc
inc
ror
pop
shl
add
inc
mov
or
or
rcl
jmp
adc
xor
cs
repz
xchg
test
and
sahf
popa
xchg
xchg
add
or
adc
sub
in
div
shl
not
xor
loope
xor
and
pop
mov
add
cdq
in
shr
and
and
add
test
arpl
mov
test
adc
cmps
pop
jns
test
add
mov
test
mov
push
retf
sbb
or
mov
sub
inc
jmp
jp
inc
jmp
sbb
std
or
jmp
inc
and
mov
and
mov
jecxz
jge
sub
add
or
mov
sub
or
push
dec
pop
xor
sub
mov
sbb
pusha
and
push
out
mov
add
fstp
aas
pusha
mov
pusha
loope
pop
sub
xor
inc
jecxz
push
jns
adc
fnstsw
push
cmps
cmp
pusha
(bad)
ins
adc
cmps
jae
push
mov
adc
adc
push
jns
xchg
(bad)
adc
sti
add
jg
sahf
test
fisttp
push
xor
sbb
jne
je
dec
jne
or
mov
mov
adc
test
cmp
and
adc
mov
xchg
pop
xor
sbb
jmp
nop
fwait
cmp
inc
add
adc
fimul
fld
ins
or
pop
push
xor
stos
sub
fiadd
out
adc
lods
mov
ret
inc
push
and
adc
pop
ds
ins
pop
lods
pop
sub
fsubp
leave
adc
leave
add
sbb
clc
xor
retf
ficom
ret
shl
aam
xchg
push
adc
and
aaa
sbb
out
adc
push
repnz
ins
sbb
lods
fcom
inc
jl
add
sub
dec
push
in
lods
sub
jmp
sub
push
(bad)
out
or
(bad)
psubusw
sbb
test
int3
in
mov
div
add
xor
sbb
pop
dec
test
les
shl
add
cmp
stos
sub
fstp
mov
xor
jbe
or
sar
fmul
fadd
inc
adc
mov
dec
add
loop
add
inc
enter
add
leave
sbb
test
std
mov
ins
in
sbb
sub
fdivr
jbe
lock
into
push
div
out
mov
push
push
inc
mov
sub
mov
sbb
pop
in
aam
xor
adc
mov
dec
push
and
mov
push
bound
out
jle
push
adc
mov
push
add
fwait
and
add
add
das
adc
test
fsubr
sbb
pop
or
mov
mov
lods
test
push
pop
mov
ret
loopne
add
and
and
or
hlt
dec
loop
add
sbb
sbb
loopne
pop
es
xor
imul
or
sbb
add
add
adc
push
push
and
inc
mov
sub
hlt
rcr
mov
out
loop
jl
cmp
lds
hlt
ret
fwait
jno
mov
imul
cmp
daa
jnp
add
or
cmps
mov
pusha
jmp
and
imul
pop
imul
das
loopne
mov
fsubr
push
or
add
add
and
cmp
and
adc
mov
or
sar
xor
jno
adc
iret
into
int3
xlat
es
loopne
popa
jecxz
ja
xchg
mov
fidivr
adc
mov
fwait
inc
or
pop
jbe
les
mov
ss
jno
mov
or
int3
test
cld
pop
clc
push
outs
adc
(bad)
data16
call
add
in
push
fcmovbe
or
or
sahf
(bad)
push
sar
xchg
rol
lock
or
push
repnz
gs
inc
push
les
mov
sub
push
sbb
adc
inc
push
pop
fadd
into
in
adc
or
mov
cli
xchg
std
push
add
cwde
out
mov
frstor
dec
js
ret
imul
pop
aad
dec
pop
or
mov
movs
adc
sbb
fisub
push
or
dec
outs
call
push
out
mov
dec
ins
and
adc
inc
jo
pop
neg
or
push
add
xor
fsubr
sub
jmp
mov
jmp
mov
fisttp
push
sbb
test
sbb
loop
inc
fld
and
in
sub
push
or
ins
or
lock
adc
fld
push
in
fcmovne
fwait
sahf
adc
int3
and
sbb
and
xchg
and
jle
call
adc
fldpi
xor
aaa
dec
dec
mov
fsin
cli
mov
je
mov
xor
test
clc
call
push
repnz
and
and
xchg
jo
test
and
pop
mov
clc
inc
outs
push
repz
out
add
push
mov
lods
cmp
popa
mov
add
or
or
pusha
sub
mov
pop
movs
hlt
shl
rol
xor
or
lock
ins
push
mov
fadd
data16
cld
and
mov
jnp
ds
or
inc
and
fwait
hlt
mov
in
adc
add
enter
adc
fsubr
push
jle
pop
gs
pop
movs
pop
or
mov
mov
inc
push
jo
pop
inc
psubq
xchg
add
adc
adc
ja
adc
sub
dec
loop
sti
in
adc
enter
or
add
loope
dec
test
add
mov
mov
ss
adc
add
aas
xor
cmp
inc
ds
inc
daa
cmp
and
dec
test
xchg
leave
push
sbb
push
sti
dec
fwait
(bad)
(bad)
in
movs
push
dec
or
pop
es
fsubrp
add
mov
test
push
or
scas
test
shl
jmp
xor
sar
daa
adc
sbb
sar
cmp
scas
pop
pop
loope
cwde
pop
test
jne
push
add
sub
cwde
or
stos
stos
repnz
pop
xchg
inc
jmp
fs
push
xor
sbb
dec
push
mov
cdq
and
add
fs
xchg
test
loopne
mov
dec
jns
dec
jge
mov
xchg
loopne
lea
pop
lock
inc
shl
jb
fsub
les
inc
inc
aam
loop
rol
adc
pop
es
dec
cdq
ins
pop
cmp
and
into
loopne
push
int
loop
into
div
dec
mov
add
or
jb
dec
(bad)
shl
cmp
sbb
sub
jno
inc
std
adc
jb
inc
jae
in
xchg
test
dec
mov
adc
pop
mov
push
or
push
xchg
test
lock
push
add
rol
mov
sbb
or
dec
stos
or
mov
inc
in
xor
(bad)
(bad)
imul
pop
cmps
push
aam
xor
sub
ror
add
call
dec
pop
jb
out
and
push
push
jmp
push
cld
not
mov
popf
je
mov
rcl
and
push
ds
push
or
jae
loopne
jne
shl
push
push
mov
jl
mov
shl
mov
sub
cmp
jo
sar
je
mov
mov
inc
jmp
mov
in
movs
or
mov
hlt
test
and
inc
and
inc
mov
xchg
lds
cmp
mov
cli
pcmpgtb
aad
jge
cmp
pop
sub
bound
pop
xor
pop
mov
or
dec
adc
dec
lds
inc
lock
push
push
adc
inc
mov
jecxz
cmp
leave
fs
mov
xchg
cmp
fmul
cmp
imul
mov
and
push
add
fdivr
gs
xchg
retf
stos
mov
add
(bad)
loop
lea
jecxz
mov
sub
loop
pop
cld
sbb
jge
and
rcl
es
cmovbe
shl
nop
add
pop
movs
push
add
ror
(bad)
xchg
cwde
xor
sub
or
jne
rcr
pop
pop
cmp
push
les
or
leave
test
or
xchg
mov
ja
test
push
pusha
fs
in
add
fstp
sbb
or
pop
ins
repz
ins
fs
adc
jl
push
adc
(bad)
lds
inc
mov
push
jnp
pop
inc
xor
push
adc
mov
cmps
imul
movs
adc
cwde
jne
rol
cli
xlat
sub
lods
mov
or
add
push
jne
inc
adc
xor
jmp
xor
or
xchg
add
dec
fcmove
sub
cmp
add
push
push
dec
jmp
fs
mov
sub
mov
mov
sar
pop
jmp
push
call
sbb
fisttp
ja
scas
pop
inc
jmp
and
fisub
push
jmp
cmps
mov
adc
lods
or
add
add
je
mov
jle
cmp
jle
jle
cmp
push
xor
(bad)
pop
adc
push
jmp
dec
push
mov
adc
fcom
xchg
xchg
or
fldcw
pushf
push
cmp
imul
push
jmp
inc
jno
mov
xor
ret
(bad)
add
mov
pop
jge
cmp
pop
cmp
test
jno
test
es
ds
clc
dec
jae
imul
sbb
pop
push
cmp
jmp
and
and
call
(bad)
ds
movs
popa
fsubp
pop
push
out
repnz
sub
gs
lock
or
pop
or
scas
mov
shl
stc
sub
cmp
mov
stos
xor
push
mov
jmp
sub
xchg
scas
push
dec
out
shr
push
mov
jge
lea
pusha
aaa
mov
mov
dec
mov
sub
adc
add
inc
xor
fadd
test
fisubr
hlt
inc
repnz
dec
dec
sub
inc
inc
jle
jmp
ds
adc
imul
aaa
push
fsubr
mov
stc
push
adc
jg
mov
std
add
jecxz
add
pushf
jmp
push
bound
movs
cwde
push
icebp
mov
xlat
shl
jg
mov
dec
pop
pop
cmp
(bad)
hlt
in
mov
sbb
cld
xor
int
pop
dec
pusha
push
cwde
jge
neg
add
mov
or
movs
sub
cmp
push
mov
mov
cli
jmp
(bad)
cmp
jbe
mov
jle
push
adc
dec
push
xor
xor
push
adc
inc
(bad)
loop
rcl
dec
test
pop
adc
test
inc
mov
inc
mov
outs
aad
sub
inc
cmp
jb
mov
dec
or
and
cmp
and
mov
enter
mov
mov
mov
push
xor
and
and
and
adc
gs
into
nop
rol
and
adc
sbb
inc
ja
out
xchg
mov
or
xor
pop
mov
test
(bad)
jne
enter
inc
and
jne
test
mov
jne
inc
or
cmp
and
xor
ins
add
jmp
xchg
jne
(bad)
mov
jp
xchg
sub
add
sbb
pop
mov
add
rcr
movs
push
pop
bound
scas
sbb
cld
cmp
cmp
cmps
icebp
dec
lock
test
jmp
push
sbb
ins
(bad)
call
sub
sub
xchg
xor
cmp
ret
mov
sbb
or
(bad)
or
shl
sar
mov
test
shr
pop
rcr
or
push
in
mov
das
jmp
bound
or
adc
inc
mov
retf
mov
add
not
ret
je
adc
mov
fcom
ins
fadd
loopne
shr
or
mov
sahf
push
adc
ins
mov
data16
mov
push
lds
(bad)
and
pushf
mov
mov
in
jge
cmp
add
sbb
rcl
ficomp
sar
pop
cld
shl
in
fiadd
push
pop
int
adc
or
sbb
mov
jecxz
(bad)
fidivr
jb
or
fmul
sahf
nop
dec
ja
lea
add
cmp
(bad)
or
sub
lods
mov
retf
into
jmp
scas
xlat
mov
enter
jae
jno
and
movs
int3
xor
je
mov
cmp
int3
pop
dec
ins
int
xor
retf
das
mov
xchg
add
neg
retf
sub
movups
jnp
add
(bad)
shl
inc
mov
scas
test
pop
(bad)
inc
rcl
imul
add
push
mov
add
sahf
addr16
iret
repz
lock
or
lods
xchg
lods
mov
ror
and
je
or
addr16
test
pop
jne
movs
(bad)
pop
ret
inc
ins
jecxz
inc
scas
inc
mov
mov
shr
mov
test
pop
cmp
or
dec
in
sbb
in
imul
(bad)
stos
sbb
xchg
adc
inc
cs
or
ss
cmp
je
or
call
cld
aas
out
mov
dec
cmp
je
mov
cmp
pop
jne
dec
adc
stos
sti
mov
inc
inc
mov
out
add
loopne
fldz
call
retf
cmp
pop
jae
sbb
clc
popf
pusha
or
jo
lea
mov
add
call
or
jbe
lods
adc
popf
xor
shr
jl
repz
sub
leave
inc
mov
adc
mov
add
adc
pop
fwait
sbb
pop
and
cwde
pop
and
test
mov
pop
inc
and
xchg
mov
imul
std
cmp
fdiv
or
dec
sub
lods
add
dec
fcom
xchg
mov
push
inc
push
iret
ret
je
setg
sub
push
shl
xchg
push
xchg
mov
jne
mov
adc
test
cmp
mov
in
rol
in
mov
add
pop
cmp
add
add
or
pop
retf
mov
sub
add
pop
adc
push
repnz
mov
jge
dec
add
sub
imul
or
inc
dec
jns
mov
les
sub
scas
dec
mov
jbe
idiv
xor
push
or
add
test
call
jb
lea
or
or
adc
inc
aas
dec
or
into
xor
xchg
fs
aam
inc
push
sub
ins
push
xchg
inc
adc
or
jne
dec
jecxz
add
loope
mov
dec
adc
jge
ja
sub
sub
adc
lahf
adc
out
xor
(bad)
inc
fcmovnb
xor
inc
addr16
push
sbb
inc
js
sbb
xchg
mov
shl
xor
mov
leave
inc
xchg
add
add
cmp
and
jl
jmp
aaa
pusha
sbb
test
rcl
into
inc
cmp
jmp
pop
xchg
fldl2t
add
mov
mov
cmp
cmp
sahf
fcom
mov
push
dec
rol
js
add
mov
cmp
enter
test
test
dec
ins
adc
and
or
dec
sub
pop
ja
out
sub
add
enter
cmps
jo
push
push
inc
rol
or
xchg
add
push
xor
push
push
add
btc
and
add
cld
loope
repnz
scas
mov
dec
je
push
xor
jg
dec
and
add
mov
and
sti
add
gs
je
movs
or
dec
fwait
pusha
(bad)
fwait
sub
inc
neg
sbb
jecxz
fdivr
das
jle
lock
ret
daa
xor
or
jne
pop
cmp
inc
inc
adc
sahf
(bad)
add
mov
or
mov
pop
int
(bad)
xor
push
xor
nop
inc
sub
sbb
sub
or
bound
mov
ja
sub
in
cmp
dec
xchg
sub
adc
pop
je
or
out
push
movsx
popa
cld
loope
les
lods
data16
lods
add
mov
mov
rcr
add
mov
add
dec
shrd
nop
add
add
jle
cmp
imul
jge
sbb
aaa
pop
pop
add
mov
or
cmp
call
stc
inc
add
dec
jmp
ret
cs
clc
sub
fs
cmp
or
ret
jo
and
inc
rol
push
mov
xor
push
and
aad
rol
lock
mov
mov
mov
inc
or
out
and
dec
in
pop
sbb
js
jg
pop
jl
mov
inc
jmp
cmp
adc
clc
fidivr
ror
iret
sbb
lahf
inc
shl
in
ins
xor
add
(bad)
jbe
(bad)
xlat
jg
add
mov
test
jl
jg
lods
jb
lods
cmp
dec
inc
dec
mov
mov
sbb
cmps
adc
nop
add
daa
ror
add
mov
stc
mov
add
sub
mov
add
lods
or
jnp
je
int
adc
add
adc
loopne
test
or
lds
retf
mul
sub
push
inc
inc
ss
enter
push
lock
inc
sub
xchg
aam
push
cdq
test
jge
mov
jne
push
shl
adc
push
mov
pop
xor
xor
ficomp
out
into
mov
pusha
bound
pushf
out
add
mov
xor
enter
je
push
shl
and
cmp
int
xchg
js
add
ficom
dec
lods
xor
inc
test
lea
sbb
or
mov
sbb
enter
push
ins
xchg
pusha
mov
ins
cmp
cmps
or
cld
cld
jl
int3
adc
sub
or
mov
sbb
cmp
into
and
adc
mov
sbb
dec
je
jp
(bad)
ds
int
pop
jle
gs
or
pop
cmps
sbb
in
add
xchg
xchg
inc
popa
je
inc
je
dec
repnz
pop
add
jmp
xor
sub
pop
add
adc
ror
in
add
cmp
jo
or
cmp
retf
fnclex
mov
add
adc
adc
call
jne
fmul
ins
push
pop
clc
fstp
or
inc
loop
in
dec
inc
pop
push
cli
push
shr
and
ret
ret
xor
nop
pop
das
xchg
xor
jo
je
inc
sar
or
sub
and
pop
aas
push
fld
inc
ja
lock
adc
mov
gs
jb
sbb
icebp
cli
cmp
cmp
pop
and
(bad)
and
xchg
sar
pop
dec
pop
sub
add
hlt
int3
adc
dec
xchg
mov
sub
adc
add
pop
test
lods
dec
cld
enter
ja
push
sub
sub
pop
jno
mov
xchg
scas
inc
inc
push
nop
xor
jle
add
jns
mov
movaps
not
retf
int
out
cmp
add
jp
push
add
mov
ror
push
pop
inc
mov
and
loopne
adc
mov
mul
pop
dec
sbb
cmp
inc
arpl
cmp
ret
push
or
push
ds
mov
dec
push
mov
dec
les
add
imul
pop
pop
pop
pop
push
movs
adc
clc
and
xor
stc
cmp
mov
mov
retf
mov
and
mov
lock
in
fcomp
dec
push
jle
cmp
ins
je
sar
(bad)
int
lock
mov
mov
jl
cmp
push
mov
cs
icebp
jnp
pop
xor
(bad)
push
pop
pop
cmp
xor
std
pop
adc
or
adc
hlt
jmp
or
jmp
sahf
jle
test
or
inc
adc
pop
add
les
iret
push
sbb
sbb
cs
cmp
dec
shl
or
inc
imul
call
ins
mov
les
dec
or
adc
push
xlat
push
sbb
lock
or
push
in
inc
sbb
push
push
or
cmp
lea
push
or
xor
cdq
cmp
inc
sub
push
cmc
aad
cmps
rcl
add
push
(bad)
call
mov
mov
lods
sar
sar
sbb
push
push
push
lea
imul
cmp
mov
sub
push
mov
fs
or
mov
aam
push
inc
out
sbb
push
mov
je
and
out
inc
add
mov
xor
fwait
and
ret
call
loopne
cmp
scas
jge
imul
xor
in
sbb
sbb
lea
fsub
and
wrmsr
sbb
mul
sbb
adc
sub
mov
cmp
dec
in
and
xor
adc
inc
call
inc
jmp
or
xchg
inc
push
add
nop
push
dec
jg
xchg
(bad)
in
or
stc
inc
inc
test
inc
inc
in
mov
xchg
jle
ficom
retf
jmp
jbe
imul
add
adc
pop
or
loopne
adc
pushf
retf
pop
jne
sbb
mov
pop
jmp
adc
push
cdq
pop
test
cli
repz
or
adc
inc
mov
push
dec
(bad)
loope
mov
mov
or
adc
mov
inc
pop
mov
xor
retf
mov
mov
jl
das
inc
xchg
sbb
or
push
(bad)
xchg
test
mov
and
sysexit
and
sahf
jmp
ja
and
leave
fcmovnb
lds
fidiv
mov
int3
es
sub
and
sbb
popa
dec
pop
int3
es
jns
loope
not
jmp
xor
push
es
int
inc
pop
or
jb
inc
int
add
xor
ins
and
cmp
sbb
fld
push
sbb
adc
sub
cmp
out
pop
or
jmp
pushf
popa
jp
add
mov
and
ss
or
mov
gs
and
sbb
sbb
adc
adc
xchg
bound
aaa
push
mov
test
adc
push
xchg
add
adc
mov
jg
jecxz
and
lea
or
fdivp
shr
add
cs
leave
or
idiv
aam
inc
cmp
shl
pop
lock
pop
or
mov
add
add
or
bound
scas
push
rcl
xor
sti
in
sub
mov
cmp
sbb
inc
pushf
cdq
fild
shr
or
inc
(bad)
int3
cld
push
jnp
call
fnstcw
inc
push
add
cmp
add
lea
pop
xor
aas
mov
shr
cmp
mov
(bad)
test
fimul
add
jmp
loopne
jae
adc
add
mov
add
iret
adc
mov
(bad)
rol
dec
add
xor
in
fs
in
sbb
mov
es
ficom
or
xor
not
or
shl
add
lock
mov
fs
inc
test
add
notrack
fsub
shr
icebp
sub
push
push
test
test
adc
test
je
dec
call
or
rcl
cmp
inc
sbb
(bad)
outs
movs
fcmove
add
leave
hlt
stc
loope
and
jmp
mov
neg
add
inc
cmp
or
xchg
sub
cld
sub
jne
add
call
movs
pop
jmp
and
dec
out
fld
inc
and
and
jns
push
dec
call
adc
mov
hlt
hlt
fucomp
mov
jle
mov
inc
in
loopne
push
fdiv
les
mov
add
or
mov
jg
jne
dec
dec
cmp
lock
jl
cmp
jl
xor
cmp
idiv
or
mov
inc
lea
push
test
push
lods
inc
nop
loopne
adc
inc
dec
pop
add
push
mov
movs
sahf
and
inc
inc
adc
fldcw
and
adc
stos
add
or
cmp
sub
ficomp
dec
jmp
call
lock
pushf
push
(bad)
call
mov
mov
and
enter
xchg
xchg
dec
out
or
test
jne
in
inc
inc
sub
add
sub
mov
xchg
shl
je
mov
sbb
or
jl
test
or
push
push
sti
xchg
clc
mov
mov
movs
xor
pop
xchg
lods
scas
outs
ror
sbb
les
out
xor
xchg
or
ss
pop
mov
pop
push
shr
jge
inc
inc
fidivr
fdiv
fiadd
sbb
sbb
cdq
in
adc
sbb
xor
xchg
sbb
enter
fcom
fwait
xor
inc
and
fldenv
icebp
sbb
and
sbb
sbb
cdq
lods
mov
test
popa
xchg
dec
jne
pop
pop
pop
pop
and
lock
and
lods
rcl
jmp
dec
and
shr
mov
sbb
mov
idiv
and
pop
rcr
cld
je
(bad)
lock
ds
je
mov
and
push
cli
daa
jo
add
and
shr
les
sub
jno
push
xchg
jmp
gs
or
jne
push
test
shl
mov
je
push
add
into
jbe
jns
sub
and
adc
inc
test
(bad)
fldcw
mov
iret
cmp
ss
push
or
adc
es
dec
and
adc
prefetch
xor
dec
adc
aaa
sub
sbb
push
lods
xchg
mov
add
cmc
cs
sar
push
sahf
test
cld
and
mov
mov
xchg
dec
push
dec
(bad)
ss
mov
sub
bound
and
gs
add
mov
and
mov
push
sub
leave
je
push
dec
lea
and
or
or
mov
je
and
iret
sti
jmp
add
out
push
cmp
ja
add
cmp
adc
mov
test
cmp
jne
(bad)
shl
leave
adc
call
add
idiv
pop
scas
and
xchg
mov
add
ficom
fbstp
movs
mov
cmps
ret
icebp
and
sbb
sbb
sbb
mov
mov
push
add
jo
test
push
adc
sbb
ret
jmp
imul
inc
not
je
(bad)
push
push
icebp
test
push
xor
mov
sbb
sbb
push
shl
push
(bad)
push
and
cmp
cmps
xor
or
shl
cdq
fisubr
add
pop
add
mov
cmp
fstp
je
aad
dec
lahf
pop
adc
repnz
xor
dec
push
dec
or
dec
cmps
sub
ret
cmps
mov
jb
add
sysexit
cmp
inc
mov
and
xchg
inc
mov
pop
mov
jnp
push
sbb
sub
sahf
inc
rcr
daa
in
or
add
mov
and
mov
sbb
adc
and
inc
mov
imul
mov
push
shl
jns
out
rcl
aad
(bad)
jns
xlat
fcomp
(bad)
fstp
cld
inc
adc
nop
pop
nop
data16
(bad)
and
mov
jmp
or
adc
mul
xchg
dec
and
mov
xor
ss
mov
fwait
std
lea
add
mov
mov
add
push
pop
push
inc
and
js
and
adc
inc
ss
out
sahf
pop
push
add
not
and
(bad)
in
lock
jmp
icebp
adc
cmp
das
pusha
jnp
scas
or
push
push
add
movs
adc
adc
cmp
push
ins
cld
add
pop
pop
in
fldcw
adc
rcr
sub
stos
inc
mov
call
lea
imul
lea
sar
inc
or
mov
aam
jp
jnp
neg
loope
push
mov
pusha
loop
inc
xor
pushf
sti
xor
push
adc
sub
add
rol
sti
add
jo
fisub
imul
jae
jp
mov
fisttp
mov
dec
mov
test
fist
(bad)
push
add
hlt
sub
jmp
leave
add
and
lea
pop
or
in
lods
enter
fcmovnbe
jae
xchg
(bad)
ja
add
jl
and
push
test
loopne
inc
neg
lea
loope
loopne
dec
lods
push
cld
mov
loopne
inc
or
cmp
mov
adc
pop
mov
jne
push
in
sub
dec
test
rol
push
or
js
mov
mov
(bad)
push
or
mov
fcom
or
push
push
ins
enter
and
repnz
or
ret
movs
sub
or
push
add
mov
jge
sub
inc
inc
test
jg
aaa
dec
rol
add
das
inc
cmp
out
jne
add
ror
ror
shl
loopne
xchg
adc
cmp
ror
dec
push
cs
jge
jg
or
(bad)
call
inc
shr
clc
cmp
inc
lods
ss
ffreep
adc
mov
fwait
mov
retf
dec
gs
dec
rol
lock
lock
dec
movs
div
cli
cli
inc
imul
mov
test
xor
pop
js
fstp
pop
or
call
push
fcomp
sbb
adc
pop
xchg
aaa
jo
mov
dec
leave
fild
pop
and
mov
xor
mov
rol
icebp
xchg
mov
int
jmp
inc
mov
lock
popa
(bad)
push
dec
ja
mov
push
mov
push
repnz
pushw
sub
loop
xchg
mov
cmps
xchg
test
and
mov
or
inc
xor
and
ret
or
adc
xor
sahf
fisttp
and
shl
fsubr
rcr
aam
inc
inc
test
shl
movs
enter
push
sub
cld
lods
dec
or
pushf
adc
sub
adc
and
bound
fcmovu
mov
rcr
ins
fnsave
lods
lods
rol
adc
adc
in
not
adc
and
nop
mov
in
inc
sahf
xchg
mov
(bad)
lock
out
or
add
and
jge
inc
les
(bad)
js
xor
adc
cmp
jne
in
jno
jne
in
fstp
loopne
mov
into
mov
adc
call
sbb
pop
pop
sub
ins
movups
out
inc
add
inc
mov
push
add
es
jge
push
nop
cmp
push
call
mov
adc
adc
cmps
sub
push
pop
shr
nop
js
pop
sbb
inc
inc
scas
xchg
inc
push
shl
test
jne
sbb
neg
and
sub
sub
call
fucomp
imul
addr16
pop
sbb
pop
add
je
xchg
lock
push
mov
push
pushf
imul
icebp
ret
mov
add
aas
aad
xchg
mov
jmp
dec
fldenv
mov
sbb
mul
enter
jp
test
in
jge
xchg
sub
clc
js
push
mov
dec
enter
mov
cmp
push
shl
test
dec
int3
out
adc
dec
lock
mov
add
lock
xor
into
or
mov
inc
jmp
jmp
call
dec
dec
dec
mov
dec
cmp
jge
mov
push
std
sub
cmp
or
add
dec
cmp
cmp
jb
add
dec
add
add
fadd
dec
test
pop
add
dec
test
ret
pop
jp
mov
add
or
mov
lods
pushf
adc
retf
or
add
push
add
sub
add
dec
movs
jge
pop
enter
or
dec
pop
imul
ret
(bad)
mov
mov
mov
jmp
and
pop
clc
push
je
or
cmp
test
jbe
cmp
or
jmp
jge
jae
(bad)
xchg
push
or
(bad)
cmp
add
or
pop
scas
add
adc
add
lods
js
mov
and
push
ret
call
add
add
pusha
dec
inc
mov
(bad)
cmp
mov
iret
xor
mov
pusha
inc
daa
mov
cmp
and
pop
pop
(bad)
das
cmp
pop
shl
or
mov
sbb
imul
inc
push
pop
jae
call
add
add
fsub
push
or
add
dec
inc
or
sub
push
je
pop
pop
scas
lahf
push
xlat
dec
movs
sahf
xchg
jne
outs
push
add
out
loope
adc
xor
and
in
test
add
inc
jge
(bad)
pop
mov
mov
data16
scas
sub
inc
dec
push
push
pusha
and
ror
fldcw
mov
cld
enter
xor
mov
push
inc
stos
jg
and
add
xchg
mov
and
cmp
int3
jge
(bad)
sbb
mov
scas
pop
add
adc
cdq
ss
xor
mov
add
loopne
dec
adc
xchg
repz
xchg
jle
pusha
mov
jns
fisub
xor
inc
jg
into
stos
inc
in
into
into
mov
push
and
sar
push
pop
xor
adc
dec
pop
dec
push
mov
not
and
or
(bad)
pop
std
daa
movs
nop
into
xchg
jno
psubb
add
add
mov
lahf
pop
test
enter
add
add
mov
fld
int
sbb
je
and
leave
adc
inc
lock
ror
sbb
in
movs
jb
jmp
popa
push
ret
ret
out
xchg
or
pop
sbb
inc
and
adc
xchg
ss
dec
xchg
add
or
xchg
jae
or
fnstenv
push
add
ret
retf
mov
sub
push
mov
or
and
mov
jp
(bad)
or
je
or
scas
sub
sub
fisub
clc
adc
cwde
mov
push
pusha
cmps
js
and
daa
or
and
fisttp
push
(bad)
jge
xlat
push
add
cmp
jl
or
sub
mov
imul
mov
(bad)
mov
adc
xor
pop
fisttp
aam
xlat
jmp
cmp
inc
cwde
dec
out
dec
or
lahf
add
xchg
jmp
xchg
add
mov
imul
mov
je
jb
mov
out
je
pop
inc
shr
ror
dec
xchg
inc
inc
pop
nop
jb
sahf
call
jle
test
lds
call
push
mov
jo
cmp
pop
dec
js
jns
jmp
and
xor
push
or
test
cmp
add
jl
mov
rol
stc
repz
inc
inc
movs
and
mov
add
and
sbb
je
xchg
loopne
mov
pop
push
imul
fadd
and
out
or
sub
ficomp
inc
push
and
rol
mov
rcl
push
mov
push
je
and
popf
ss
rcr
push
js
xor
or
fld
popf
iret
jge
sbb
sub
add
imul
jo
or
adc
push
hlt
sar
and
cmp
retf
xchg
sub
in
(bad)
cmp
sub
jge
or
xchg
sbb
pop
push
and
mov
jae
add
scas
dec
and
and
imul
fcom
xlat
sub
push
lods
push
sar
test
or
adc
shl
sbb
push
retf
add
inc
addr16
cs
or
jae
add
add
stc
jmp
aad
or
mov
sub
int
(bad)
sbb
dec
jg
xchg
sub
or
inc
fsubr
pop
pop
ret
jmp
xor
adc
jl
xchg
call
push
inc
add
add
lods
dec
lods
and
rcl
jmp
xchg
xor
loopne
dec
jo
cmp
cwde
sub
xor
mov
pusha
or
fadd
add
outs
mov
cmp
in
pop
add
xchg
cs
mov
aaa
fcomp
ret
push
clc
mov
jnp
cmp
or
adc
mov
mov
cmp
imul
dec
shl
mov
rol
mov
gs
test
mov
fimul
or
cwde
ret
call
mov
or
add
push
pop
jl
mov
lea
loop
jne
ss
int3
jle
rcl
js
shr
lock
dec
mov
retf
nop
xchg
jae
fsub
icebp
ins
cmp
loopne
fs
shr
dec
loop
cmp
jp
fisttp
cwde
mov
push
sub
js
adc
pop
adc
sbb
sbb
sbb
into
sbb
or
cmps
cmp
and
mov
popa
jne
sar
and
pop
push
das
jne
adc
movs
xor
jmp
mov
sbb
in
inc
je
fldenv
and
imul
xchg
push
adc
ret
push
(bad)
into
cmps
inc
hlt
xchg
pop
and
sub
call
or
push
mov
pop
ins
sub
add
jecxz
dec
test
push
push
or
cdq
inc
mov
xor
sbb
xchg
nop
or
ja
dec
cmp
pop
adc
sbb
into
test
retf
call
cmp
add
cmp
push
and
daa
das
jg
add
or
and
ins
pushf
adc
mov
or
cwde
or
mov
add
arpl
mov
or
dec
ror
inc
inc
sbb
mov
test
jg
xorps
mov
push
pop
fst
and
dec
ror
sbb
mov
aam
scas
sub
mov
push
and
sub
and
aaa
jle
push
and
xor
mov
inc
inc
xor
sar
xor
or
cmp
jmp
fstp
push
xor
cmp
add
sub
sbb
ficom
and
aaa
(bad)
test
cmps
pop
sbb
or
jl
cld
mov
bound
out
inc
push
inc
ins
jbe
xchg
xor
sbb
pop
xchg
movs
or
xchg
or
dec
and
popa
xor
clc
in
dec
movs
and
inc
js
pop
call
mov
or
push
ja
mov
movs
cld
adc
jecxz
and
stc
mov
mov
inc
xchg
sub
nop
or
xchg
sub
xchg
(bad)
jbe
adc
adc
push
sub
add
mov
adc
add
add
mov
or
(bad)
push
aad
xor
and
sti
sbb
loope
cmp
lock
arpl
stos
and
mov
popf
lods
bswap
ins
sub
pop
add
adc
push
call
pop
dec
adc
enter
ins
dec
outs
sbb
mov
pop
and
mov
fadd
sbb
dec
or
mov
xor
pop
inc
and
(bad)
jmp
test
imul
ret
repnz
or
or
or
inc
js
popw
loop
shl
out
xor
add
push
inc
cmp
sub
mov
dec
rcr
or
icebp
push
push
adc
push
bound
add
ja
or
or
movs
sub
gs
or
sbb
jle
inc
or
push
jb
mov
fsub
push
inc
mov
stos
or
pop
sbb
ja
jbe
pop
(bad)
fisttp
sbb
xor
cmps
cld
pop
cmp
mov
imul
inc
xchg
dec
jle
bnd
pop
and
jg
adc
pop
mov
call
mov
sbb
rcr
sbb
push
pop
rcl
pop
pop
jmp
xor
pop
cmp
shl
hlt
shr
sbb
add
lods
mov
push
mov
dec
pop
ss
int3
and
cmp
sub
in
push
cmp
in
cmps
gs
fs
push
mov
add
in
mov
lahf
retf
aam
sub
gs
add
inc
xor
nop
cld
fcomip
xor
sbb
xchg
adc
int3
iret
jbe
or
aad
scas
push
jb
xor
repnz
xchg
xchg
movs
rol
push
or
xor
imul
mov
int3
jo
push
popf
cli
or
aas
push
pop
or
out
loope
lock
stos
push
inc
stos
jne
or
test
test
or
inc
repnz
int
or
test
or
rcr
xchg
mov
or
inc
loopne
or
aam
mov
nop
leave
pop
data16
inc
and
cmp
add
(bad)
pop
mov
fmul
xchg
jg
sub
or
mov
add
pop
ins
stos
push
sbb
je
test
cmp
jl
shl
dec
or
jbe
xchg
jbe
or
mov
sub
adc
sbb
ds
and
push
leave
xchg
cmp
push
fucomip
sbb
and
or
test
fsub
popf
cmp
adc
div
and
xchg
inc
or
adc
and
push
or
jne
inc
sbb
cmp
or
inc
mov
sti
sub
fdivr
cs
jae
cli
or
arpl
dec
dec
popa
push
call
and
cmps
fs
jnp
jno
mov
push
cmp
arpl
push
retf
or
or
fild
mov
mov
add
pop
cmp
push
add
add
outs
or
jg
sbb
push
aas
setnp
sub
test
pushf
sbb
add
sub
add
dec
xor
bound
push
push
adc
or
aaa
iret
test
adc
fsubr
add
aas
xor
and
pop
jl
sbb
xchg
add
mov
leave
xchg
or
fst
and
call
sbb
test
pop
mov
mov
cmp
fabs
adc
gs
and
test
sbb
mov
xor
scas
and
mov
sbb
xchg
add
loope
mov
inc
fdiv
clc
sub
add
iret
test
daa
mov
sub
pop
mov
inc
enter
sbb
gs
pop
cmp
dec
pop
dec
or
aas
mov
cmp
jae
inc
je
pop
test
sar
adc
sar
mov
fstp
sbb
mov
ja
in
aam
ret
mov
jnp
cmp
xchg
mov
and
inc
outs
fcomp
pop
inc
scas
rcr
rol
or
mov
js
xor
pop
cmp
inc
es
mov
lods
inc
(bad)
sub
lsl
cmp
hlt
fcomp
jb
div
les
shl
or
lods
rol
test
test
mov
and
cld
or
mov
test
push
mov
out
push
inc
mov
ror
xlat
or
and
fld
iret
push
push
sub
adc
cmp
push
les
add
cmp
xchg
imul
test
je
(bad)
and
stos
or
jg
mov
shr
push
arpl
sbb
and
fidiv
je
mov
and
push
mov
cmp
jle
inc
xor
cmp
pop
add
mov
xor
jecxz
nop
dec
popf
mov
scas
sub
inc
add
xchg
mov
cwde
xor
dec
test
adc
pop
mov
adc
sbb
addr16
push
add
push
jo
xor
push
or
pop
add
mov
xor
add
xchg
je
mov
push
lea
jmp
add
call
aaa
(bad)
push
icebp
imul
inc
cs
inc
mov
mov
ffreep
add
aam
cmp
and
inc
sar
test
mov
xchg
(bad)
repnz
jle
cmp
lea
pop
je
pop
cmc
and
sub
cmp
shl
xchg
(bad)
ror
jno
add
inc
mov
push
mov
push
jb
xor
mov
in
or
xor
push
cmp
jl
mov
push
or
jg
sub
adc
movs
dec
hlt
scas
jmp
jne
lea
test
jne
clc
orps
fld
mov
ds
cmp
mov
lods
mov
jb
xchg
lods
imul
and
mov
test
inc
ret
or
aad
mov
mov
push
push
ins
icebp
cmp
scas
mov
pop
data16
sbb
add
sahf
sbb
xor
or
mov
add
popf
call
mov
lods
mov
pop
mov
shl
push
sub
xlat
fisubr
jne
jmp
fild
fwait
mov
push
xchg
mov
arpl
adc
or
cs
ds
mov
into
pop
jle
jo
mov
in
inc
cli
mov
out
sub
adc
jecxz
sub
add
rol
pop
shl
scas
jg
adc
push
or
mov
aam
mov
cmp
add
xchg
pop
xchg
retf
clc
dec
mov
fsub
inc
push
lock
xchg
xchg
inc
xchg
adc
add
cmp
jl
add
repnz
dec
ret
pusha
test
ins
aam
mov
test
pusha
jbe
xchg
loopne
dec
sbb
sbb
fcmovnbe
sub
dec
jg
adc
or
call
retf
pop
hlt
sbb
dec
inc
jno
aad
jb
fild
sbb
test
nop
fadd
mov
push
std
pop
mov
pop
std
jb
xchg
aam
mov
mov
test
mov
lock
cmp
xlat
dec
xor
jmp
and
mov
push
dec
test
ins
ret
lock
or
sbb
out
jbe
inc
aad
or
retf
mov
push
mov
jmp
cmp
and
xchg
inc
jp
jo
mov
xchg
mov
jg
call
sbb
mov
and
cmp
jb
test
fwait
or
inc
add
int3
lods
pop
push
adc
adc
in
mov
mov
mov
jb
je
data16
ja
jb
cmp
jbe
mov
push
or
nop
fs
retf
cmp
push
call
call
xchg
xchg
das
xor
(bad)
aas
out
cmp
sub
adc
test
imul
or
movs
push
push
mov
xor
mov
sbb
pop
mov
pop
es
inc
adc
bound
push
sub
pop
pop
pop
rcr
mov
cmp
inc
lea
dec
or
in
sar
addr16
les
inc
int3
add
bswap
cmp
pop
rcl
call
push
call
push
or
shl
push
fs
mov
pop
add
mov
cmp
lock
add
jbe
sbb
call
imul
ret
sub
gs
rcl
daa
push
pop
and
adc
inc
add
mov
sub
fmul
sbb
push
imul
inc
je
bnd
mov
jne
xlat
mov
leave
inc
cmp
fsubr
adc
ja
ins
mov
xchg
sub
jb
fxch
sub
cmp
xchg
sbb
in
mov
icebp
or
adc
push
jmp
je
ror
add
or
sbb
jnp
add
ins
ins
jmp
mov
lea
cmps
dec
repnz
and
adc
cld
ins
fwait
cmps
push
in
adc
aas
push
jb
sub
and
push
test
call
xor
movs
les
and
cmp
call
cmps
mov
leave
clc
outs
or
in
aam
pushf
fmul
adc
(bad)
int
loopne
outs
xchg
sub
ins
dec
or
nop
fsub
xor
shl
cmps
lods
outs
mov
or
xor
push
mov
xor
mov
pop
hlt
add
sbb
jl
shr
inc
mov
mov
inc
mov
imul
loopne
add
sub
jno
jl
inc
rol
push
ds
pushf
inc
and
xchg
push
js
(bad)
xchg
push
xlat
xchg
cdq
mov
and
sbb
cld
jno
stos
push
fild
jb
dec
cmp
jb
call
jg
dec
fcom
cmps
dec
shl
fcomp
inc
int3
pushf
sbb
jne
add
aam
xchg
or
cmp
xor
imul
rcl
rol
or
or
adc
dec
xor
sbb
and
dec
xor
and
xor
xor
and
cmp
inc
enter
dec
fs
jne
ins
add
pushf
ja
fldenv
add
pusha
add
jbe
add
nop
add
nop
int3
rcl
aad
xor
loopne
clc
hlt
push
mov
inc
and
cmp
and
clc
les
add
lock
popa
mov
inc
mov
mov
xchg
sbb
mov
xchg
dec
mov
sbb
xor
pop
aam
(bad)
call
loop
pushf
call
dec
push
xor
sub
shr
test
pop
addr16
push
jbe
mov
or
in
fisttp
mov
fwait
mov
aam
in
imul
adc
mov
rol
add
sbb
mov
push
ja
test
in
jnp
ja
xor
add
aas
push
popa
push
or
xor
call
xchg
adc
hlt
pop
sbb
aas
js
push
lock
ror
or
mov
call
push
fs
add
jecxz
xor
test
in
adc
outs
in
in
call
cmc
fdivr
xlat
and
cmp
cmps
add
adc
adc
pop
pop
enter
fdivr
in
or
jo
add
dec
call
call
xchg
rol
inc
daa
xchg
fadd
sbb
push
ins
adc
call
adc
ins
mov
mov
or
or
jg
push
push
jl
jl
loope
xlat
int
loopne
stos
sbb
mov
stc
in
xchg
push
(bad)
push
sub
bound
adc
test
jmp
sbb
jo
cmps
movs
mov
pushf
rcr
pop
ror
les
std
push
int3
out
int
jbe
retf
jmp
fadd
jns
daa
fisttp
out
sub
fnstenv
leave
push
cmp
jle
fcomp
cmp
mov
aam
inc
jle
jmp
mov
inc
clc
jle
lock
ret
and
lock
jg
test
lods
in
in
mov
mov
in
(bad)
enter
jmp
add
xchg
aaa
arpl
pop
movs
mov
repnz
dec
add
je
ror
add
in
sub
or
retf
test
and
rol
lds
lock
add
mov
add
cdq
xor
hlt
push
or
sbb
adc
push
xchg
cmp
or
aam
or
unpcklps
inc
adc
xor
sar
or
or
arpl
shl
call
aam
jp
movnti
xor
sub
sub
imul
mov
mov
xchg
or
or
mov
add
sbb
stos
les
inc
test
bound
js
pop
add
xor
add
movs
nop
push
inc
retf
shl
scas
pusha
retf
add
push
sbb
aam
cdq
ret
out
fild
ror
fld
sub
adc
sub
pusha
shl
mov
(bad)
jo
adc
and
aad
jecxz
adc
xchg
jg
xchg
add
add
xor
outs
(bad)
pushf
pop
retf
xchg
xchg
pop
push
fs
jnp
mov
xor
mov
and
mov
mov
jmp
add
lock
loop
inc
mov
loopne
xor
xor
pusha
xchg
sbb
mov
fldlg2
sti
jno
add
cmp
cld
cmp
cmp
and
inc
push
enter
ret
popf
rcr
adc
lds
push
xor
cmp
cmp
std
hlt
movs
arpl
es
pop
test
test
fmul
mov
and
cmp
enter
mov
sub
lods
pushf
loopne
fsubr
and
sbb
cwde
xor
dec
inc
push
js
and
jl
jmp
adc
fsub
push
jecxz
enter
or
mov
or
inc
push
cmp
or
or
cmp
nop
or
or
inc
dec
dec
dec
xor
add
jo
in
xchg
inc
or
call
mov
mov
inc
rcr
ins
movs
push
sbb
inc
mov
mov
stos
mov
adc
nop
adc
in
mov
and
xchg
jecxz
repz
div
adc
cwde
ficom
ret
pop
mov
xlat
jl
jg
ss
mov
dec
sub
mov
bound
mov
dec
and
aas
and
in
lea
pop
pop
mov
aad
inc
es
pop
xor
aam
push
mov
jle
nop
rol
sub
xchg
dec
lds
xchg
in
ins
pop
mov
pop
or
pop
dec
lock
add
je
jne
push
adc
adc
imul
loope
sbb
and
ins
xor
add
pop
(bad)
adc
jmp
(bad)
pop
push
mov
test
fwait
add
push
enter
or
sbb
mov
xor
jno
or
nop
shr
les
test
ret
xor
std
mov
add
sti
and
jl
movs
or
push
loopne
lods
test
lea
pop
xchg
inc
mov
and
shl
push
lea
lods
xchg
and
adc
xchg
adc
inc
sbb
aam
int3
xlat
enter
sub
xchg
xchg
inc
or
les
dec
fsub
fs
xchg
lods
nop
bswap
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
cwde
mov
shr
mov
movs
dec
add
das
call
add
xchg
ins
push
jb
mov
in
in
lods
rcl
sub
das
ja
mov
outs
xchg
(bad)
sub
fiadd
jne
data16
mov
daa
out
(bad)
cmp
lea
in
sub
sbb
sub
inc
add
jne
add
pushfw
cwde
dec
xchg
mov
cs
jns
mov
dec
adc
aas
mov
mov
adc
je
adc
mov
fmul
mov
dec
xor
mov
in
sbb
mov
and
aad
or
sub
movs
mov
xor
lea
mov
xor
or
call
inc
cld
add
call
push
cwde
and
push
sub
movs
(bad)
push
lods
sbb
and
scas
inc
sub
addr16
mov
xchg
push
jns
adc
or
les
adc
je
call
in
xchg
mov
pop
call
sub
mov
bswap
and
js
mov
add
push
mov
(bad)
aas
jae
xor
aam
fild
sub
movd
xor
xor
loopne
dec
rcl
mov
add
movs
ret
int
add
jns
add
inc
pushf
mov
mov
add
add
sub
jns
sbb
das
fs
mov
jnp
mov
add
dec
je
or
and
dec
repnz
cwde
movs
adc
xchg
mov
nop
std
movs
add
(bad)
cld
popf
arpl
leave
jecxz
in
dec
push
imul
add
lea
test
popf
in
call
fdiv
mov
or
and
cmps
inc
js
mov
(bad)
dec
mov
(bad)
repnz
rcr
xlat
xchg
adc
jns
std
mov
clc
jmp
adc
and
mov
icebp
pop
mov
cmps
loope
aam
mov
and
and
fcom
push
lods
mov
shr
leave
mov
xor
mov
je
aas
aas
inc
movs
push
or
and
js
mov
or
pop
(bad)
ins
or
loop
mov
or
pop
or
fcom
xchg
test
retf
jl
jecxz
or
les
or
mov
les
lea
bound
imul
fld
add
mov
and
jo
cwde
mov
mov
mov
aas
aam
shl
nop
iret
sar
int3
sti
test
dec
in
test
lods
adc
dec
add
pop
outs
lock
push
bound
daa
mov
and
ja
sbb
(bad)
pushf
loope
aaa
test
adc
lea
in
pop
dec
movs
stc
jmp
jo
push
pop
in
int3
enter
pop
(bad)
call
mov
mov
inc
and
pop
push
cmp
adc
push
pop
mov
xor
outs
pop
xor
pop
sbb
repz
fcom
or
adc
mov
adc
and
xchg
lods
movs
jb
pop
jl
mov
dec
push
(bad)
push
or
or
mov
and
in
fsubr
cld
adc
fisub
(bad)
loopne
out
fs
adc
inc
ret
pusha
out
out
add
push
cmp
loopne
mov
loope
cmps
mov
mov
ror
pushf
mov
mov
test
in
xchg
inc
add
add
inc
loop
int3
outs
dec
or
jmp
and
cmp
push
test
test
or
sbb
bound
loopne
bound
or
mov
call
push
mov
add
movs
test
jbe
inc
jno
stos
or
dec
(bad)
lea
and
ss
sbb
and
stc
jnp
pusha
rcl
sbb
push
rol
enter
call
enter
mov
cld
xchg
sar
test
jg
add
out
xor
pop
lods
push
imul
mov
lods
inc
and
lods
(bad)
sti
ret
dec
in
or
loopne
xchg
dec
adc
xlat
clc
and
adc
add
je
iret
add
push
mov
gs
pop
add
(bad)
add
xor
in
push
mov
inc
scas
aas
add
adc
add
enter
xor
push
popf
or
sbb
leave
adc
lods
or
xor
pop
cmp
xor
sub
fs
imul
push
test
add
inc
cmps
cmps
aad
jg
or
pop
pop
add
push
sub
cmps
icebp
and
adc
mov
call
pusha
stos
fmul
outs
cs
(bad)
rcl
dec
(bad)
xor
int3
mov
hlt
adc
pop
setae
dec
(bad)
xor
lds
lods
inc
xor
mov
leave
aam
lock
daa
int
call
scas
add
test
dec
fadd
fdiv
adc
test
test
sub
add
mov
lahf
scas
mov
push
xchg
or
lahf
or
jns
pop
stos
sub
add
push
inc
(bad)
mov
adc
adc
rcr
imul
call
les
les
mov
dec
xor
jmp
pop
(bad)
les
mov
nop
mov
mov
test
sbb
xor
leave
je
test
in
lods
or
pusha
(bad)
fstp
and
(bad)
int
push
and
cdq
add
ret
scas
ret
ja
cmp
and
ror
xor
int
mul
out
nop
and
out
ret
fwait
in
bound
dec
inc
mov
or
jbe
xchg
cmp
dec
dec
in
(bad)
(bad)
mov
test
enter
xchg
or
xchg
add
push
and
ja
or
cwde
adc
and
mov
jl
and
cmp
dec
daa
mov
pop
cmp
sub
sub
inc
imul
push
cmp
jnp
mov
push
xor
adc
fsub
and
mov
xchg
mov
sbb
and
add
sbb
jbe
add
and
in
(bad)
in
mov
push
cdq
adc
in
ins
test
popa
and
add
xor
mov
jo
add
inc
xchg
dec
push
xchg
mov
jne
das
pop
ins
sub
test
test
jge
push
jb
lods
mov
xor
adc
js
cdq
movs
sub
mov
cmp
or
xchg
xchg
cwde
cmp
pusha
mov
add
les
sar
test
enter
pop
enter
push
push
test
mov
xchg
cmp
int3
or
xor
imul
xor
add
and
jb
add
add
xchg
or
enter
adc
and
icebp
je
int
inc
test
cmp
inc
mov
dec
test
jmp
mov
or
add
pop
gs
add
add
or
and
div
push
add
or
gs
push
pop
xor
out
mov
popa
and
sub
rol
inc
stos
mov
dec
cmp
and
(bad)
(bad)
pop
mov
mov
sub
push
fwait
or
das
(bad)
repnz
add
or
pusha
mov
push
imul
sbb
gs
or
cwde
pop
dec
daa
cmp
mov
or
(bad)
or
pop
xchg
scas
push
sub
or
pop
in
jl
lahf
and
mov
cmp
lea
jmp
ins
adc
push
hlt
and
add
and
(bad)
in
and
adc
in
add
cdq
mov
ss
lock
pop
adc
pusha
vmovntps
lea
cmp
aas
mov
loopne
es
and
mov
nop
in
dec
js
push
inc
jl
scas
(bad)
rcr
aam
and
adc
pop
mov
dec
sub
dec
xor
or
mov
stos
iret
(bad)
adc
(bad)
rcl
adc
retf
pop
rol
les
add
lods
iret
test
sub
and
hlt
xchg
mov
pop
ret
test
pop
sbb
test
sbb
lock
gs
ret
ins
pop
shl
lds
push
lods
sbb
mov
jne
inc
mov
adc
rcl
and
lds
in
inc
jb
adc
rol
test
sbb
xor
adc
and
xchg
fiadd
pusha
push
popa
hlt
push
push
and
inc
inc
adc
adc
and
lock
arpl
in
add
sub
pop
in
(bad)
popf
dec
fsub
lahf
mov
sub
test
xchg
or
xor
dec
sbb
xor
jl
imul
pop
ins
pusha
leave
and
dec
push
pop
dec
aam
add
inc
cdq
cmp
lea
push
cmp
clc
fdiv
push
xor
or
shl
add
pop
cld
rol
jne
dec
es
fsub
pushf
leave
and
mov
dec
xor
mov
or
leave
xor
xchg
lea
enter
and
or
or
dec
pop
adc
pop
ins
push
nop
scas
pusha
enter
int
rcl
addr16
pusha
test
adc
push
inc
sahf
dec
dec
cmp
cmp
or
lods
dec
adc
(bad)
ret
pop
(bad)
and
lock
lahf
sub
inc
sbb
pop
popf
das
sub
and
sbb
inc
add
pop
lock
test
mov
nop
mov
mov
xadd
outs
xchg
push
and
int
and
and
dec
pop
or
test
add
add
jns
arpl
test
shr
sbb
pop
mov
push
cmp
loopne
mov
add
cwde
xor
xchg
in
inc
leave
mov
cdq
enter
xlat
inc
lock
mov
mov
sub
mov
adc
add
loopne
imul
add
sub
or
jnp
inc
mov
in
mov
and
dec
cmp
cli
sub
push
rcl
mov
mov
cmp
div
inc
jle
call
xor
add
sbb
clc
add
pusha
pop
int3
cmp
adc
fild
daa
fild
or
dec
lods
js
ror
loopne
push
cmp
jmp
sub
or
lahf
adc
pusha
sub
mov
pop
xchg
mov
hlt
lock
loopne
cwde
jg
sbb
inc
sbb
mov
jecxz
and
pop
xchg
rol
sar
add
loope
or
jne
dec
pushf
mov
retf
mov
lea
sti
fisub
(bad)
xor
push
cdq
adc
mov
xchg
arpl
lock
cdq
pusha
cmp
dec
es
dec
dec
push
pop
dec
fwait
fs
add
js
cmp
mov
dec
adc
sub
push
fs
sti
dec
clc
cli
ins
nop
imul
push
rol
cli
push
ins
mov
and
pop
sbb
repnz
movs
jae
sti
retf
ins
inc
loope
cli
dec
xchg
mov
stos
adc
push
loope
ins
xor
in
bswap
mov
mov
ins
adc
mov
movs
mov
mov
sbb
outs
push
pop
mov
add
xor
xchg
or
fcomp
add
retf
iret
call
mov
and
push
call
call
shl
mov
test
inc
mov
dec
and
stos
or
ror
inc
adc
push
push
push
bnd
pop
fs
sti
and
leave
inc
xchg
test
push
mov
xlat
push
repnz
pop
xor
jle
sbb
scas
mov
idiv
mov
into
mov
jge
or
push
test
mov
jle
adc
add
aaa
in
fcmovu
or
in
mov
sub
inc
cs
loope
push
push
imul
push
call
call
mov
mov
and
mov
imul
scas
rol
push
xchg
dec
add
fs
dec
cmp
ret
fisubr
xor
lods
hlt
in
cmp
aaa
jmp
nop
mov
sbb
xchg
jnp
jl
ret
push
lods
lods
stos
jmp
call
inc
inc
add
in
add
sbb
cmp
adc
xchg
stos
and
xor
add
pop
mov
loope
test
in
fcmovnbe
aas
add
inc
add
cdq
push
pop
out
out
mov
rol
adc
inc
(bad)
(bad)
aas
and
jo
or
cmp
dec
mov
(bad)
fistp
or
jnp
shl
push
mov
add
add
jg
inc
or
mov
rcl
xchg
adc
or
pop
shr
outs
cmp
adc
mov
out
ds
push
mov
xchg
lock
idiv
aas
iret
repz
ins
jo
outs
je
jb
outs
arpl
fs
in
(bad)
not
jo
sbb
push
dec
imul
push
cmp
jb
gs
xor
cs
ins
push
bound
nop
fcomip
out
and
pop
popa
je
outs
outs
push
push
add
xchg
add
smsw
jnp
pop
inc
sub
or
(bad)
fstp
jb
js
je
jb
gs
cmp
or
(bad)
(bad)
arpl
outs
add
add
add
add
je
push
rol
inc
jne
jb
stos
inc
(bad)
outs
cmps
pop
imul
dec
xor
xor
out
xlat
movs
pop
cmp
cmp
(bad)
sub
dec
and
jns
add
das
das
push
jl
ja
add
push
inc
inc
gs
ins
(bad)
fmul
dec
outs
jbe
dec
arpl
fucom
ret
push
push
jo
sub
addr16
dec
jne
out
sbb
xchg
xchg
rol
jb
ins
and
pop
stc
dec
popa
jb
push
inc
pushf
jae
sahf
ins
adc
xchg
jae
cmp
jns
jg
xor
cwde
inc
push
jne
xor
xor
daa
push
mov
sti
sub
sbb
dec
and
jne
into
cmp
ins
xchg
pop
dec
inc
push
mov
jbe
push
popa
das
jo
or
cmp
sub
fcomip
mov
push
test
push
sub
mov
xor
inc
cwde
std
out
(bad)
(bad)
dec
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
(bad)
das
xor
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
mov
pop
pop
pop
pop
pop
adc
popa
bound
gs
addr16
ins
outs
sbb
js
fs
jle
ja
movs
jnp
jge
jg
add
inc
vpmulhw
dec
imul
(bad)
jnp
cmp
dec
xchg
xor
div
jl
push
inc
ins
jae
out
push
xchg
jl
inc
and
push
jne
inc
inc
fwait
and
jge
lock
ins
fldcw
push
fldenv
js
jb
ss
dec
push
push
sbb
mov
dec
dec
inc
sbb
and
sbb
and
push
xor
sbb
xor
test
ins
imul
adc
cs
xor
inc
and
xor
and
fs
out
imul
data16
or
xor
inc
popa
and
fld
mov
jne
pop
xor
ins
and
ins
push
xchg
inc
cs
xor
scas
loopne
jne
dec
mov
push
cdq
jmp
call
xchg
dec
jo
add
jbe
and
jnp
je
retf
imul
fisttp
or
fs
cmp
and
push
jbe
je
adc
mov
and
push
ds
imul
(bad)
mov
aaa
sub
and
mov
femms
push
daa
sub
dec
inc
add
sub
arpl
cmp
arpl
jo
dec
popa
sub
in
cmp
mov
fiadd
inc
xchg
sub
push
stos
sub
imul
xor
pop
jae
int3
or
push
xchg
cmp
call
xor
or
xor
gs
push
fild
push
xor
aaa
xor
imul
aas
xor
hlt
add
dec
add
addr16
dec
dec
aaa
(bad)
ja
mov
popa
loopne
outs
sub
inc
jae
fs
mov
add
inc
and
xor
mov
mov
push
gs
das
mov
mov
lds
out
test
push
or
fidiv
out
push
cmp
jb
bound
cmp
inc
mov
test
jmp
imul
mov
outs
popa
pop
or
push
jmp
add
stos
jle
push
leave
nop
inc
and
jbe
(bad)
push
in
mov
ja
in
enter
xor
cmp
fadd
and
and
pop
push
mov
and
cmp
pop
jae
xor
(bad)
or
mov
test
test
jle
push
cwde
jb
push
sub
retf
inc
sub
jmp
loopne
pop
dec
jmp
mov
in
cmp
push
and
cmp
cwde
imul
out
inc
inc
and
dec
in
jbe
cmp
and
cmp
mov
loopne
add
imul
jmp
retf
jno
(bad)
lahf
jg
icebp
pusha
inc
mov
clc
ret
movs
add
xor
jae
jae
push
loop
or
cmp
push
push
cld
cmp
dec
add
xor
retf
out
sub
popa
js
jae
fdiv
sahf
imul
pop
add
add
jecxz
mov
jne
sub
pop
movs
cmp
add
add
adc
xlat
sub
fwait
add
add
add
add
repnz
jmp
cmp
pop
or
aaa
ds
push
pop
hlt
and
mov
pusha
push
js
or
sub
(bad)
in
out
int3
add
sbb
add
jnp
test
push
xchg
test
add
mov
mov
daa
push
cmp
push
fnstcw
mov
and
sub
jb
int3
push
lods
lods
pop
into
jo
add
xor
lahf
sub
stos
cmp
inc
inc
int3
js
jo
add
add
loope
cmp
dec
mov
push
ror
add
cmp
lea
mov
nop
inc
xchg
xchg
pop
rol
pop
sub
and
ds
ret
sub
pop
add
daa
pushf
jo
and
daa
pushf
jo
cmp
pop
data16
jo
or
push
test
and
dec
enter
sub
sbb
pop
and
xchg
sbb
xchg
adc
and
xor
add
ja
scas
mov
add
mov
dec
add
add
inc
add
add
stos
pusha
pop
xor
cs
sar
adc
mov
lods
sbb
add
add
shr
out
add
ins
and
loope
add
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
(bad)
(bad)
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
(bad)
(bad)
inc
mov
leave
retf
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
(bad)
(bad)
jmp
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
call
xchg
inc
adc
inc
movs
sar
dec
and
push
aas
sbb
or
(bad)
cmp
test
lahf
push
pop
outs
ja
jae
pop
sbb
push
jae
jb
bound
push
mov
inc
data16
dec
cmp
inc
arpl
mov
jne
daa
pop
lea
dec
mov
jbe
in
inc
outs
js
push
push
inc
push
push
dec
dec
xor
imul
out
mov
xchg
mov
mov
in
sti
pop
jbe
dec
imul
mov
imul
ds
and
inc
jb
jns
sub
daa
pop
enter
in
adc
mov
aaa
call
arpl
pop
int3
cmp
outs
adc
rcr
(bad)
arpl
mov
push
outs
shr
in
pusha
inc
jbe
(bad)
push
push
push
outs
pushf
push
fs
and
cwde
sub
dec
pop
ss
pop
das
add
(bad)
cmp
push
sbb
and
ins
es
dec
lahf
sub
cwde
xchg
mov
xchg
pop
pop
pop
push
push
jae
imul
pusha
ins
mov
xchg
add
movs
jae
addr16
xor
ja
das
outs
gs
mov
data16
(bad)
and
dec
test
into
mov
outs
mov
push
cmp
push
scas
dec
jge
push
sbb
aas
jg
mov
imul
sbb
fistp
xor
jae
(bad)
and
jg
cmp
push
sbb
jg
test
mov
or
stos
outs
aad
das
je
outs
xchg
push
mov
mov
popw
stc
iret
rcr
pop
cmp
cmp
add
ds
push
das
push
sub
inc
sbb
out
jnp
into
xor
sub
sub
ret
gs
push
cmp
je
lahf
xlat
jmp
(bad)
cmp
in
mov
inc
dec
pop
pop
cwde
cmps
shr
addr16
push
jb
imul
push
retf
sahf
sbb
push
cwde
pop
popa
pop
and
es
xor
sub
iret
sti
outs
xchg
lock
add
repz
push
dec
inc
xor
popf
in
repz
hlt
dec
xchg
jmp
fs
inc
sub
push
sbb
inc
add
out
ficom
push
or
add
hlt
out
jno
sti
xor
mov
push
in
call
adc
push
xor
sbb
push
out
jns
out
add
push
out
fadd
aam
xchg
mov
jnp
out
int3
push
enter
mov
jnp
mov
lods
outs
test
mov
push
mov
jns
push
cmp
cld
out
fdivr
js
cmp
jns
cmps
stc
lock
aam
sar
test
jns
jge
inc
and
in
pop
push
lods
sbb
sahf
out
inc
sbb
jmp
push
test
push
movs
(bad)
or
pop
aam
data16
aam
call
movs
mov
repz
xor
add
jmp
cmps
pop
push
ret
bound
fs
sbb
(bad)
jae
jb
xor
mov
shrd
pusha
jg
sub
add
sar
inc
push
movs
ret
inc
inc
dec
jae
ins
inc
gs
inc
push
sbb
(bad)
pop
stc
dec
inc
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
(bad)
mov
inc
push
das
adc
sub
adc
or
push
das
adc
into
mov
mov
jnp
inc
loop
mov
stc
pop
jnp
ds
pop
adc
clc
retf
sbb
enter
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
mov
in
fst
mov
and
and
mov
imul
retf
add
inc
mov
sar
or
push
test
sub
fwait
ss
sbb
int
jp
pop
jns
ds
fdivrp
inc
dec
(bad)
(bad)
(bad)
dec
dec
dec
xor
dec
popf
pxor
xor
retf
aaa
push
div
inc
sub
dec
xchg
cmp
inc
int
das
xchg
pop
and
xchg
retf
sahf
icebp
mov
or
(bad)
(bad)
cld
or
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
aaa
jge
divps
loop
mov
xchg
dec
aam
(bad)
lods
ud0
clc
push
xor
cmp
and
test
push
pop
pop
repnz
jmp
std
or
es
clc
shl
sbb
(bad)
xchg
sub
out
(bad)
scas
ins
mov
out
leave
jmp
jg
test
fucomi
dec
push
push
push
inc
inc
or
outs
jbe
and
add
lock
cs
cld
(bad)
(bad)
jmp
push
into
mov
push
push
dec
pop
push
adc
or
cs
ud0
inc
dec
dec
cmp
push
push
and
aas
push
pop
inc
sbb
adc
cmp
(bad)
(bad)
push
sub
add
pop
xor
dec
push
inc
aas
cmp
in
sti
imul
pop
jbe
cmp
dec
cs
sub
in
fiadd
push
dec
sbb
dec
push
pop
subps
aas
push
adc
add
clts
push
cmp
push
aas
cmp
cmp
pop
lock
fucomip
ins
add
add
or
adc
adc
jmp
sub
xor
add
adc
sti
jnp
cmp
push
pop
pop
out
add
xor
std
(bad)
and
cmp
cmp
and
and
push
or
sub
std
inc
pop
add
pop
pop
push
pop
adc
dec
pop
add
push
inc
pusha
add
fnstenv
xchg
cmp
sub
or
pop
jnp
addr16
or
adc
or
or
es
test
dec
ss
mov
es
xor
ficomp
push
push
mov
pop
sbb
aaa
cmp
pop
popa
retf
cmp
sbb
inc
sbb
push
cmp
mov
xor
mov
cmp
rol
or
xor
and
mov
inc
sub
cmp
call
push
mov
push
movhps
push
or
add
loope
adc
js
sub
mov
jb
push
inc
push
test
arpl
inc
(bad)
out
mov
push
pop
push
gs
mov
jg
push
xchg
push
adc
xor
pop
inc
sub
xor
cs
mov
pop
dec
(bad)
adc
push
or
and
sub
push
add
xor
and
lsl
mov
push
add
add
jmp
inc
pop
adc
dec
nop
dec
cwde
in
push
cmp
repz
push
and
xor
inc
push
cmps
jns
out
mov
xor
sti
popf
data16
shl
xor
outs
sub
popf
out
adc
push
pusha
ss
cmp
push
nop
es
jo
xor
push
inc
sub
push
push
neg
hlt
sub
sbb
scas
pop
aaa
cwde
push
mov
sub
jl
shl
(bad)
adc
push
popa
push
loopne
pop
loopne
and
and
enter
or
retf
xchg
add
imul
ins
and
bound
xor
and
push
or
mov
jo
lahf
aaa
jb
adc
push
add
rcl
cmp
add
add
xor
mov
loopne
and
nop
ds
pop
in
loopne
pop
push
pusha
cs
cmp
push
push
pop
xor
push
pop
sub
pushf
(bad)
aas
xor
push
je
mov
scas
cs
add
aam
xlat
(bad)
dec
cmp
sbb
mov
adc
js
inc
cmp
stos
jbe
mov
push
pop
or
div
sbb
cs
(bad)
aaa
or
jmp
sbb
fisttp
inc
and
int
iret
fist
sub
adc
inc
fcom
jle
push
mov
mov
push
add
cmp
cs
sbb
test
mov
or
and
cmp
fild
sub
sub
jnp
add
aas
push
pop
fimul
adc
mov
sub
pop
xor
cmp
imul
cmp
ja
xor
xor
push
aas
cld
or
add
pop
pop
add
xlat
xchg
scas
jge
push
rcr
fs
cmp
(bad)
shl
scas
adc
pop
push
sbb
jo
pop
test
or
fs
daa
and
sub
int
sar
out
mov
sbb
jl
xor
jae
pop
add
ins
imul
adc
cmps
out
and
push
inc
inc
das
push
fadd
fdivr
push
daa
loopne
and
sub
adc
cdq
test
out
pop
or
push
pop
ss
and
pop
in
xor
adc
and
adc
cmp
push
jle
ds
push
mov
scas
push
cld
push
(bad)
and
sbb
adc
push
shl
aaa
loope
jns
ret
mov
or
or
mov
dec
stc
and
mov
dec
dec
adc
xchg
push
pop
adc
add
rol
xor
ja
aas
mov
or
xor
pusha
addr16
mov
or
in
and
fidiv
push
sbb
out
cmp
adc
scas
daa
stos
inc
test
int
xor
in
dec
or
das
scas
mov
push
mov
or
popa
push
xor
ds
mov
fild
dec
iret
adc
cmp
inc
pop
xor
xor
test
das
pop
inc
sub
inc
mov
push
mov
pop
inc
hlt
add
add
loope
cmp
cld
push
adc
ins
jne
add
imul
add
ret
push
or
movs
(bad)
sub
push
cmp
shr
mov
out
lock
in
sbb
aas
mov
pop
mov
call
cwde
push
jne
or
es
ret
bound
xchg
push
sbb
inc
cmp
loop
ss
mov
xchg
jbe
lea
fs
into
mov
pop
push
jbe
push
add
or
or
add
jae
mov
aas
cmp
icebp
add
adc
popa
push
je
push
daa
push
pop
cmps
data16
and
pushf
sbb
mov
dec
adc
fmul
out
mov
call
sbb
or
and
or
aaa
sbb
aaa
call
shl
add
outs
clc
xor
push
inc
push
add
add
jg
pusha
sbb
mov
popa
jne
push
cmps
sti
ds
loop
popa
xor
and
add
lea
ret
pop
das
cmp
xor
inc
mov
push
dec
dec
sub
pop
cmp
push
das
jo
xchg
or
push
xlat
ret
push
push
adc
push
or
and
ror
push
ins
test
mov
scas
mov
std
cmc
mov
inc
inc
ret
cmp
pop
daa
js
pusha
fwait
dec
les
adc
aam
into
xchg
das
es
sub
(bad)
js
leave
or
jae
out
xchg
(bad)
imul
push
lds
xchg
cmp
pop
mov
or
xchg
pop
mov
or
dec
or
push
mov
lock
pop
jmp
push
ins
outs
jb
bound
inc
pop
ins
cmp
ins
push
je
and
jae
popa
jbe
je
mov
xchg
jbe
jb
loopne
jnp
daa
outs
das
mov
and
or
xor
scas
sub
dec
test
sti
movs
add
dec
jae
not
inc
rol
inc
jmp
pop
lea
out
shl
jg
xchg
scas
xor
mov
shl
mov
push
dec
adc
andnps
shr
push
adc
fisubr
sub
and
push
add
(bad)
cmp
inc
sbb
adc
jp
push
nop
lss
push
shl
xor
or
push
(bad)
push
add
cmp
cli
push
cmp
mov
sub
push
sub
xor
pop
jmp
adc
sub
xor
jbe
mov
pop
adc
add
cmps
shr
inc
push
popa
cwde
rcr
enter
pusha
xor
cmp
inc
pop
inc
fiadd
dec
sbb
loop
(bad)
addr16
sbb
cmp
cli
xor
or
fs
(bad)
(bad)
cli
push
push
pop
or
and
mov
mov
in
xor
pop
dec
sub
loop
mov
sar
pop
mov
push
call
and
pop
inc
sub
jl
cmp
sbb
sub
outs
adc
sub
pop
sbb
push
inc
scas
sub
pusha
enter
inc
xchg
dec
mov
adc
add
adc
mov
aas
mov
cmp
and
shl
icebp
add
repz
mul
jbe
popf
ins
clc
cs
std
daa
rol
push
cs
daa
and
push
aas
jmp
and
jmp
xchg
xor
and
fcomp
pop
push
cmp
or
cwde
push
push
js
enter
(bad)
ins
rcl
mov
dec
sbb
pop
enter
adc
aad
or
mov
in
mov
iret
mov
sbb
js
call
cmp
pop
shl
lock
push
mov
mov
and
push
aas
ja
rol
loopne
inc
sub
adc
sbb
aam
pop
pop
push
es
add
inc
and
sbb
and
test
ins
sub
xor
cmp
ficomp
paddsb
cmp
pop
in
and
inc
daa
pop
cmp
or
cmp
mov
sub
jno
sub
pushf
js
cwde
sbb
mov
mov
push
mov
push
and
lahf
add
lods
or
scas
int
shl
pop
popa
or
sbb
mov
push
dec
adc
push
sbb
out
pop
dec
push
das
fstp
and
cmp
adc
fcomp
add
pushf
pop
mov
and
dec
neg
cli
(bad)
xchg
gs
push
and
cmp
repnz
aaa
pop
sub
aas
inc
mov
sub
add
mov
or
mov
retf
cmp
push
mov
sbb
or
add
das
inc
pop
aas
and
add
dec
aaa
or
lock
pop
pop
pop
inc
sub
cmp
sub
xor
(bad)
mov
dec
dec
sub
aaa
int3
das
inc
dec
cs
sub
aaa
adc
and
mov
data16
test
lods
xor
push
loop
mov
or
add
scas
cmps
or
sub
jg
fild
or
inc
cmp
and
inc
add
jne
sti
mov
and
aaa
and
and
push
push
mov
inc
pop
sbb
sti
push
adc
cs
jae
sub
popf
push
push
call
pop
add
sbb
fild
dec
pop
jnp
adc
add
add
out
dec
outs
sub
jmp
out
push
sbb
jp
mov
das
sbb
mov
sbb
pop
inc
sub
mov
movs
movs
cmp
or
aaa
adc
fstp
jge
sbb
adc
and
jne
mov
dec
sbb
cmp
mov
push
push
jmp
daa
and
jo
(bad)
aad
sub
xchg
push
add
cmp
and
aas
push
ins
and
dec
pop
or
repz
cwde
or
jle
xchg
push
push
pop
aaa
xor
cwde
aaa
enter
fs
stc
jle
xchg
push
mov
popf
dec
xchg
scas
push
inc
addr16
lods
add
add
int3
loop
push
pop
dec
cmp
inc
pop
and
fs
lods
add
push
push
pop
and
out
jge
jo
jg
or
jmp
sbb
xor
pop
ja
adc
push
push
stos
xor
push
(bad)
popf
inc
cmp
add
adc
mov
cmp
push
scas
out
cmps
add
pop
pop
pop
cmp
je
or
xchg
pop
pusha
dec
pop
test
gs
dec
sub
and
push
pop
push
sub
push
shr
pushf
jp
add
unpckhps
pop
dec
cmp
loop
push
mov
test
add
xor
data16
cmp
inc
push
xchg
inc
jecxz
std
int
push
xchg
dec
sbb
cld
sbb
push
push
cs
push
and
imul
mov
sbb
ins
xor
imul
sbb
fadd
icebp
aaa
loope
fist
mov
adc
add
aaa
lock
or
cld
lods
mov
sub
aaa
push
and
iretw
ja
fs
call
gs
push
rcl
lea
inc
add
pop
jns
shl
add
pop
push
das
add
pop
pop
inc
jb
cmp
lods
dec
outs
cmp
mov
loop
jecxz
adc
sbb
and
repz
out
and
ds
dec
cdq
or
xchg
je
add
or
hlt
ins
push
inc
pop
or
fldcw
(bad)
jns
and
sub
xor
inc
out
mov
mov
mov
mov
add
sbb
sub
fldcw
add
or
ss
push
adc
pop
add
data16
adc
push
push
dec
str
mov
and
das
(bad)
div
scas
inc
arpl
ins
out
jge
xor
mov
rol
rcr
(bad)
ds
into
jns
mov
ss
rcl
push
nop
mov
jns
out
lock
dec
(bad)
fbld
mov
push
add
jmp
mov
out
add
jb
lahf
dec
push
dec
dec
dec
push
push
ret
aaa
shl
mov
mov
lahf
(bad)
jmp
call
push
and
mov
add
adc
mov
mov
lods
pop
dec
movs
enter
(bad)
sti
call
mov
inc
push
ins
ss
adc
cli
mov
sub
sub
jg
aas
cmp
mov
sbb
mov
ds
jmp
sub
cs
jo
(bad)
fsub
push
loopne
ins
sbb
mov
and
nop
inc
jecxz
dec
push
pop
pop
in
pusha
sbb
jg
inc
mov
and
xor
jb
jmp
inc
push
dec
cmp
dec
push
and
add
in
not
sub
inc
mov
inc
inc
jb
ret
pop
shl
outs
push
dec
imul
dec
or
adc
cmp
sahf
call
addr16
xlat
cs
repnz
cmp
xor
cwde
xor
cmp
iret
leave
jae
inc
push
iret
and
mov
movups
scas
cmp
lock
xchg
pop
add
test
test
loope
repnz
or
(bad)
lods
pop
sbb
mov
jmp
jnp
cmp
xor
sub
sub
xor
(bad)
push
cld
xor
xor
inc
push
xor
mov
inc
out
mov
adc
rcr
jg
add
jge
shl
xor
movs
das
js
mov
adc
shr
arpl
lock
jbe
cmp
push
arpl
outs
jne
cmp
popa
outs
imul
cmp
push
adc
mov
and
mov
pop
jecxz
fbld
mov
xor
adc
mov
scas
inc
das
(bad)
mov
test
ins
or
sub
dec
adc
xor
cmp
and
mov
aaa
js
pusha
mov
inc
iret
mov
daa
inc
push
or
or
dec
xor
movs
das
xchg
outs
(bad)
cs
add
sar
sub
sub
add
dec
add
int3
rol
aaa
add
xchg
inc
scas
cmp
push
and
inc
inc
mov
push
xor
push
jns
sbb
cmp
mov
cmp
xchg
mov
sbb
mov
imul
mov
inc
or
and
cmp
push
shr
xchg
dec
mov
repnz
push
cs
inc
push
pop
ins
repz
adc
movs
pop
xchg
pop
pop
das
sti
imul
push
pop
out
xor
inc
loopne
out
cmp
pusha
int
retf
into
cmp
push
fisub
mov
inc
push
pop
scas
push
xchg
mov
out
push
push
push
nop
lods
popa
inc
in
es
in
mov
xchg
adc
mov
jge
mov
pop
hlt
push
ds
push
push
dec
fstp
push
es
cmps
mov
aad
imul
cwde
push
test
jnp
mov
test
mov
test
lods
aaa
push
pop
sbb
scas
mov
or
cmp
cmps
cli
fwait
out
cmp
inc
push
aad
lahf
pop
push
mov
imul
cmps
push
inc
mov
lea
rcl
inc
cs
cmp
out
mov
push
out
test
ret
sahf
cmps
stc
mov
mov
ds
cmps
pop
sub
inc
nop
pop
jle
sbb
push
sahf
push
adc
daa
sbb
xlat
popa
jnp
ds
push
div
mov
push
fisub
pop
call
xchg
in
sti
pop
int
pop
sbb
sbb
sbb
jns
dec
lock
inc
pop
pop
ds
sbb
pop
shl
ds
jnp
add
xor
xchg
aaa
in
in
adc
and
xlat
lock
push
push
jns
imul
cs
push
repz
cmp
fdiv
je
hlt
or
jnp
imul
es
push
cmp
retf
sahf
out
es
jb
cmp
cdq
pop
inc
aad
mov
sahf
out
push
dec
adc
xor
out
sti
sbb
cmp
(bad)
cmps
push
sahf
mov
clts
cld
dec
adc
fistp
add
mov
push
out
xor
in
into
adc
push
ds
repz
scas
iret
lock
jns
out
xor
mov
out
and
push
cmp
out
sahf
out
mov
ja
cli
push
inc
pop
push
push
jle
inc
out
or
dec
sbb
inc
mov
loopne
sub
adc
and
and
(bad)
rcr
push
push
mov
xor
adc
or
add
mov
bound
push
mov
sub
mov
adc
dec
sti
das
int3
push
and
pop
sbb
enter
adc
inc
repnz
iret
pusha
or
mov
add
push
add
loop
push
data16
mov
outs
pop
inc
sbb
sub
addr16
outs
mov
sub
aas
inc
push
ja
rol
sbb
or
aaa
push
imul
mov
push
cdq
jae
fisub
push
mov
das
out
add
inc
sbb
cmp
dec
cs
fisubr
ins
push
jmp
cmps
dec
add
push
inc
retf
aad
add
jmp
mov
jns
push
(bad)
rcr
cmp
das
push
ret
cmp
outs
push
inc
imul
push
pop
retw
pop
test
inc
dec
or
nop
dec
js
dec
mov
ja
sbb
push
xor
cmp
pop
leave
and
hlt
pop
loopne
add
jnp
cmp
or
ds
push
(bad)
das
adc
in
push
shl
popa
ins
jo
inc
ins
je
fisttp
adc
addr16
jo
jae
es
outs
ins
mov
mov
inc
sub
fstp
mov
mov
cld
call
xor
xor
xor
xor
xor
cmp
int
imul
cmp
push
xor
xor
cmp
push
add
das
ds
cmp
or
or
adc
jle
sbb
sub
sbb
pop
add
scas
or
or
sub
das
add
sahf
pop
cmp
pop
push
mov
dec
jne
(bad)
test
inc
inc
repz
pop
in
push
cmp
mov
sub
pop
add
addr16
push
jle
or
cmp
(bad)
dec
mov
cmps
sub
outs
(bad)
fstp
jp
cmp
aas
pop
add
xlat
shl
sbb
aas
movs
mov
stos
test
sahf
sbb
and
test
push
sbb
cmp
add
or
or
dec
cmp
es
mov
daa
xor
mov
bound
popf
cs
cmps
sub
int3
imul
daa
pop
es
test
call
fild
popa
lahf
sar
pop
jmp
popa
dec
sub
inc
es
dec
jbe
inc
and
fcomip
sub
arpl
lock
mov
in
push
jmp
popa
adc
sub
das
adc
inc
add
adc
sub
aaa
sub
sub
sbb
pop
pop
inc
daa
pusha
mov
or
stos
popa
dec
enter
xchg
adc
test
pusha
call
nop
clc
adc
add
stos
fld
mov
daa
adc
jo
lea
and
mov
movs
xor
or
lahf
xchg
sbb
cmp
lea
and
mov
cmp
loopne
pop
jbe
movs
gs
lods
daa
bound
dec
loope
mov
pop
(bad)
das
imul
iret
sti
pop
inc
mov
pop
adc
pop
push
pop
inc
test
push
jno
fisubr
imul
popa
daa
pop
push
mov
das
dec
mov
js
dec
push
sub
ja
cmps
sbb
xor
pop
xor
inc
dec
shr
xor
sbb
ins
add
das
mov
fidiv
cdq
daa
aaa
or
or
sub
add
or
lods
mov
ds
and
jg
jecxz
add
fs
push
sbb
(bad)
sub
ss
pop
pop
mov
pop
mov
pop
imul
ins
shl
mov
retf
gs
mov
sub
dec
outs
or
adc
adc
jmp
jmp
dec
adc
lods
and
imul
outs
test
xchg
outs
sbb
dec
stc
out
and
mov
mov
dec
js
xchg
ins
and
xchg
outs
mov
dec
fsubr
clc
pop
test
nop
aad
outs
add
xchg
ret
enter
sbb
in
push
test
aas
dec
xor
out
in
push
add
fstp
je
inc
jo
repnz
push
das
pushf
daa
mov
or
pop
sub
pop
sbb
ret
ss
std
inc
mov
inc
aam
cmp
in
(bad)
popf
lock
out
pop
das
sub
idiv
adc
mov
or
add
ds
js
xchg
push
add
popa
ja
jb
dec
aaa
cmp
fs
data16
mov
jb
sbb
cmp
aas
dec
imul
and
fadd
movs
mov
pop
in
dec
test
or
test
pop
add
and
push
(bad)
xlat
or
in
jne
add
rcl
mov
inc
xchg
inc
inc
push
xchg
cmp
xor
xchg
icebp
popa
fwait
test
in
test
pop
add
cmps
aas
cmp
shl
into
clc
jno
ret
imul
inc
clc
aaa
or
jae
adc
add
int3
aas
(bad)
dec
jo
les
rcl
loop
mov
xor
adc
mov
adc
xchg
and
hlt
push
sbb
or
push
imul
push
rcr
mov
aas
dec
add
sbb
mov
adc
dec
cmp
push
sar
dec
sbb
aas
pop
loope
push
mov
mov
add
les
or
pop
adc
add
dec
or
xchg
pop
sbb
cmp
xor
mov
rol
call
cwde
pop
xor
sub
fiadd
ret
data16
sbb
sbb
add
popa
lock
add
or
sbb
ja
ins
cwde
sub
or
not
rcr
mov
scas
add
bound
jmp
mov
cs
dec
add
mov
pop
adc
add
call
inc
mul
in
aaa
das
cmp
pop
push
pop
out
push
pop
jecxz
pusha
pop
pop
mul
rol
sbb
cmp
pop
xchg
xor
je
push
dec
in
add
daa
push
xor
pop
lock
mul
imul
or
cdq
jbe
in
sub
xor
out
in
add
(bad)
pop
dec
pop
cmp
das
inc
lahf
test
jo
stos
jo
dec
mov
jbe
fsub
mov
xor
add
lock
pop
adc
pop
push
test
pop
adc
arpl
sahf
loopne
push
add
add
dec
cwde
lock
dec
loop
pop
push
add
sub
inc
inc
sbb
cmp
push
(bad)
(bad)
(bad)
fild
inc
cmp
and
sub
push
aaa
or
push
sbb
dec
sub
dec
dec
xor
(bad)
(bad)
(bad)
call
sub
sub
sbb
cmp
adc
adc
cmp
adc
adc
xor
mov
push
in
dec
daa
dec
and
inc
sbb
out
push
xor
aaa
sub
cs
cmp
jb
cmp
cmp
push
push
cmp
pop
xchg
(bad)
jg
mov
cmp
sub
or
push
push
inc
inc
pop
dec
push
dec
clc
(bad)
(bad)
call
push
cmp
sub
add
add
cmp
push
sbb
xor
pop
xor
xor
inc
inc
lods
fist
or
loop
loope
cmp
scas
icebp
mov
in
test
out
ror
adc
or
fsubr
gs
cmps
or
dec
inc
adc
adc
push
push
adc
fcomp
xor
and
loop
test
pop
and
pusha
lock
ds
inc
ret
push
pop
dec
add
jb
pusha
cld
ss
cmp
stos
push
mov
sub
push
dec
in
ss
and
dec
mov
imul
push
jecxz
jp
push
or
xchg
fcom
push
retf
add
xor
push
xchg
cmpps
mov
push
sub
push
or
(bad)
popf
loopne
push
push
inc
push
dec
inc
and
leave
xor
add
pop
inc
sub
mov
sysexit
sub
push
dec
pop
and
push
or
out
pushf
and
hlt
es
push
adc
dec
adc
in
dec
mov
and
and
je
jnp
sbb
dec
aaa
pop
dec
daa
pop
daa
or
mov
push
sub
sub
sub
dec
push
pop
dec
pop
push
nop
adc
ss
(bad)
(bad)
(bad)
jmp
mov
inc
aaa
jno
sti
shl
ret
icebp
adc
pop
movs
cmp
aad
sbb
cwde
dec
popa
jmp
pop
fsub
adc
jge
push
je
(bad)
(bad)
call
jb
mov
and
fwait
rol
fwait
in
inc
mov
ud0
pop
fs
sub
fsubr
stc
jbe
push
ds
(bad)
(bad)
(bad)
jmp
xor
(bad)
jg
mov
inc
xchg
cmps
aad
arpl
push
sub
adc
or
(bad)
cmp
sbb
cld
ins
sub
adc
or
or
leave
ret
(bad)
(bad)
inc
call
sbb
mov
call
cdq
(bad)
test
call
mov
mov
movs
sbb
ins
aaa
push
dec
ja
daa
mov
mov
mov
(bad)
(bad)
(bad)
call
dec
stos
fmul
retf
rep
cs
outs
arpl
test
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
movs
mul
jno
addr16
push
scas
addr16
cmp
dec
movs
jg
les
dec
push
mov
fwait
stos
fld
pop
std
push
and
push
call
loop
(bad)
sub
mov
bound
push
pop
cs
(bad)
push
pop
ds
inc
pop
sub
dec
ins
inc
outs
in
jl
and
(bad)
(bad)
(bad)
call
or
cmp
dec
cmp
xor
ss
dec
daa
fs
push
xor
cli
(bad)
jmp
jp
dec
inc
jns
push
xor
pop
jne
and
inc
sub
call
js
das
and
aaa
out
mov
pop
in
pop
imul
xor
xor
inc
pop
inc
xor
aaa
aaa
inc
int
mov
push
inc
test
lods
scas
sub
pop
ss
lahf
test
inc
(bad)
push
and
pop
and
ror
inc
mov
adc
das
pop
xor
cmp
call
or
ja
mov
mov
jge
push
push
cmp
pop
aam
ja
imul
mov
fsubr
scas
dec
add
in
call
adc
(bad)
push
add
and
(bad)
xor
jle
inc
or
xchg
popa
or
xor
out
push
cmp
pop
dec
sub
sub
or
loopne
aad
adc
les
sub
outs
adc
das
mov
ins
cs
aas
adc
dec
aaa
adc
sbb
mov
sahf
adc
les
push
sbb
stos
fsub
inc
loop
push
xchg
or
cmp
mov
gs
push
sbb
add
adc
rcl
mov
pop
mov
push
cmp
scas
test
dec
rol
(bad)
pop
mov
push
jmp
jge
xor
adc
mov
push
pop
mov
and
xor
cmp
pop
pushf
push
fidivr
les
inc
mov
cmp
lock
ds
push
jge
mov
add
push
adc
inc
inc
jne
or
icebp
sbb
mov
out
sbb
outs
add
setle
aaa
adc
enter
or
inc
adc
lds
into
adc
or
inc
fisttp
ret
push
and
sub
add
movups
jbe
outs
je
xor
js
xor
imul
cmp
xor
pop
mov
dec
stos
jecxz
and
dec
mov
mov
and
push
ins
loop
cmp
retf
scas
adc
mov
jecxz
mov
ins
loop
popa
je
enter
jecxz
ins
lock
add
cmps
add
and
not
add
or
out
push
gs
rcl
jb
pmaxsw
dec
sar
push
or
pop
push
or
jmp
mov
xor
les
and
adc
add
add
sbb
dec
push
test
pop
push
dec
pop
and
add
push
cmp
push
out
outs
and
sbb
dec
sbb
push
div
mov
mov
stos
or
mov
push
mov
stos
adc
arpl
mul
adc
je
out
sbb
retf
pop
fcom
lock
dec
jle
ins
xchg
xor
push
sbb
pop
je
not
and
add
aad
sbb
sbb
adc
dec
popa
dec
pushf
pop
push
outs
sbb
jge
popa
jb
pop
mov
or
pop
jae
inc
jne
into
or
fiadd
(bad)
xor
cmp
push
(bad)
movs
pop
push
(bad)
and
or
push
test
mov
jl
add
jnp
call
or
pop
adc
xor
sbb
pop
push
pop
adc
call
adc
sub
call
fs
jo
enter
(bad)
or
push
outs
imul
(bad)
sub
stos
fidivr
push
pop
xchg
mov
dec
aam
retf
(bad)
xlat
dec
pop
cmp
jmp
test
mov
or
push
das
scas
pop
adc
ds
xchg
in
and
push
push
xor
push
aam
or
lahf
add
cli
test
sbb
ja
xor
dec
mov
dec
xchg
and
mov
mov
dec
or
push
and
sbb
push
ja
mov
mov
jbe
sub
nop
jbe
fiadd
push
inc
in
cmp
jb
or
sub
aaa
das
and
or
iret
scas
pop
sub
(bad)
or
lds
or
outs
jle
into
(bad)
mov
mov
push
aaa
xor
inc
dec
or
call
je
cmp
add
push
ja
xlat
addr16
or
gs
ins
adc
mov
imul
jl
(bad)
cmp
pop
pop
pop
xor
pop
loop
pop
pop
xchg
es
fcomp
dec
pop
dec
mov
and
pop
movs
mov
shl
cmps
mov
pop
cs
aam
or
cmps
mov
aam
rol
(bad)
out
std
xor
pop
push
nop
(bad)
pop
inc
popf
pop
adc
dec
push
ror
pop
mov
mov
push
push
add
sub
inc
dec
pusha
or
(bad)
sub
and
inc
add
or
add
sub
dec
cmp
dec
mov
retf
out
test
jne
or
dec
or
pop
lods
mov
dec
cwde
call
jae
push
popa
test
outs
dec
outs
imul
mov
xor
data16
add
mov
sbb
pop
ds
ja
add
push
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
xchg
addr16
push
pop
mov
gs
(bad)
inc
loope
inc
loopne
loopne
movs
gs
pop
daa
mov
jo
dec
push
dec
jb
or
and
inc
aas
dec
scas
and
and
xor
fsub
sbb
cmps
aas
jle
jle
or
lahf
sub
adc
inc
add
or
inc
or
mov
inc
inc
loopne
adc
ret
jb
and
daa
push
adc
(bad)
mov
adc
xchg
inc
add
push
xchg
or
fild
dec
jl
out
emms
push
call
loopne
jl
push
iret
cmp
cmp
ficom
push
push
push
out
test
add
xchg
mov
xlat
mov
mov
adc
pop
cmp
dec
jmp
jnp
cmps
outs
clc
sbb
fcmovbe
mov
push
pusha
or
and
pop
mov
pop
cmp
adc
out
pop
or
sub
(bad)
(bad)
pop
cmc
dec
add
movs
sahf
push
dec
pop
pop
cmp
cmp
adc
xchg
adc
cmps
sub
cmps
push
mov
cmp
and
mov
add
xor
xor
(bad)
jne
pusha
lahf
adc
cmp
loopne
je
or
push
cmp
sub
cwde
sbb
(bad)
pop
stos
arpl
popa
sub
sbb
sbb
add
sub
cmp
adc
outs
sub
or
test
push
dec
pop
(bad)
dec
pop
add
inc
outs
lods
mov
dec
mov
das
mov
rcl
outs
or
mov
imul
dec
arpl
(bad)
mov
push
push
das
xor
xor
dec
and
(bad)
jmp
adc
mov
outs
sub
mov
fs
push
sti
stos
jbe
sub
inc
outs
ins
pop
xor
jbe
xor
and
xor
push
mov
push
push
push
inc
dec
call
popa
outs
jae
outs
cdq
jne
jle
dec
arpl
gs
sub
xor
and
dec
loop
mov
xchg
mov
mov
cmp
and
dec
pop
mov
rcl
dec
dec
xchg
dec
adc
mov
xadd
sbb
inc
jg
es
addr16
xchg
inc
cmovo
pop
lock
adc
cmp
aas
mov
nop
jo
maxps
mov
cmp
push
lods
inc
inc
mov
ss
dec
rcr
add
and
jecxz
and
(bad)
outs
add
jl
inc
pop
cmp
jbe
xchg
daa
ds
mov
popa
addr16
and
daa
out
cmp
push
loopne
cld
and
mov
inc
iret
xchg
jbe
js
inc
aaa
sub
add
push
daa
nop
sbb
fistp
daa
aas
out
jl
mov
dec
outs
pusha
sbb
dec
scas
fs
inc
inc
scas
in
scas
cmp
dec
scas
in
sub
loope
scas
in
add
push
sbb
adc
daa
push
cwde
push
sbb
jl
ror
dec
sub
adc
dec
push
cmps
test
push
push
in
and
add
out
jl
dec
xchg
mov
int
jns
dec
hlt
dec
fmul
cmp
repz
dec
ds
dec
dec
cmp
repz
dec
push
test
xor
stc
push
dec
cmp
in
in
dec
call
aas
inc
adc
add
sub
and
dec
pop
repnz
jnp
nop
pop
(bad)
add
movs
stc
cmp
mov
add
dec
ds
repnz
add
imul
mov
push
adc
lahf
push
and
mov
pop
pop
inc
mov
jmp
jbe
scas
jbe
jg
mov
adc
jg
daa
push
xor
dec
mov
dec
repnz
pop
inc
add
fs
sbb
pop
or
mov
xchg
and
in
in
adc
dec
mov
and
dec
in
dec
es
dec
cmp
outs
leave
jnp
fs
and
add
dec
dec
lods
xchg
sub
add
bound
ror
mov
xor
in
fs
dec
test
in
pushf
xor
dec
je
dec
inc
neg
mov
add
outs
inc
mov
popa
out
(bad)
xor
jb
mov
pop
enter
outs
leave
mov
or
fild
test
pop
xchg
and
in
push
cmps
cmp
pop
dec
loopne
jl
xchg
add
dec
(bad)
sbb
mul
in
aam
in
js
popa
sub
mov
push
lahf
mov
add
sub
leave
adc
add
jbe
out
dec
ja
xchg
pop
jb
xchg
aam
xchg
pop
ins
in
sbb
out
add
repnz
outs
add
mov
fbld
jo
or
sbb
enter
and
popa
sub
push
jbe
js
pop
scas
fadd
xchg
add
sbb
loope
mov
call
dec
or
pusha
jne
cmps
and
in
inc
xlat
push
aaa
push
lock
push
scas
fs
fs
popa
fstp
cmp
je
jl
addr16
mov
add
aaa
ins
in
lds
enter
or
mov
push
sti
data16
mov
push
jg
push
inc
push
push
fisubr
imul
push
xchg
sbb
int
push
mov
pop
push
repnz
sbb
add
fidiv
xchg
push
mov
push
div
sbb
rcl
outs
cmp
(bad)
popa
push
push
outs
jg
cmpxchg
pop
xor
mov
jne
daa
test
je
test
push
push
fidivr
cmp
sbb
out
or
loopne
push
seto
cmp
je
loopne
pop
in
push
adc
or
push
lahf
xlat
add
xchg
and
fisttp
int
push
daa
add
or
addr16
fdivr
push
jo
cmp
and
cmp
mov
mov
test
and
add
out
mov
add
cmp
lock
scas
sbb
push
into
push
xchg
popa
add
mov
dec
in
shl
xchg
and
aaa
and
outs
add
js
and
and
push
out
outs
xchg
xchg
pop
leave
add
iret
add
pop
lods
pop
mov
add
loopne
add
adc
test
xchg
or
pop
inc
dec
push
add
sub
das
and
and
push
jb
jge
adc
add
ss
xor
stc
cmp
or
sbb
push
jb
loope
dec
push
sub
aaa
add
dec
leave
adc
xchg
push
mov
add
fcmovb
mov
lods
xlat
loopne
lods
add
xor
daa
and
cmp
scas
in
data16
or
mov
xchg
dec
push
fiadd
js
je
pop
push
enter
jns
pop
cmp
ss
outs
cmp
loope
out
mov
adc
or
push
cmps
lds
mov
and
popf
nop
pop
xor
pop
adc
fcom
add
in
lods
pop
or
jb
or
je
nop
xchg
pop
and
mov
add
rol
pop
lahf
popa
or
push
pop
pop
pop
scas
fadd
xchg
add
sbb
mov
add
mov
pop
addr16
pop
(bad)
xchg
push
push
or
cmp
out
scas
in
xchg
daa
or
int
in
push
and
mov
es
push
xchg
push
pusha
das
sub
mov
pop
push
push
add
call
add
fadd
call
and
jo
inc
fsub
sbb
sub
jbe
pop
add
push
ja
fs
mov
jl
xchg
mov
jmp
scas
pushf
data16
xlat
sbb
loopne
data16
pop
(bad)
iret
lds
pusha
fstp
push
aas
(bad)
(bad)
(bad)
mov
addr16
fdivr
daa
pusha
pop
fwait
sub
jo
jl
xchg
push
ins
xor
mov
sbb
aam
xor
add
inc
mov
xor
loopne
push
inc
jl
sahf
out
lahf
ret
adc
cmp
sar
push
outs
pushf
mov
loop
push
sub
int
pop
es
push
pop
int
jns
push
movs
retf
pop
ins
call
and
ds
rep
add
mov
lahf
out
inc
mov
ds
repz
je
jecxz
pusha
push
out
cmp
outs
mov
jns
jns
mov
sahf
out
cmp
iret
adc
imul
cmp
ds
repz
ret
gs
int
adc
cmp
mov
ds
mov
cmc
jl
cmps
stc
xor
iret
out
and
call
mov
imul
sar
lods
js
shl
mov
jmp
call
mov
loope
jo
jns
dec
repz
sub
js
xor
out
into
push
jae
retf
repz
out
je
jnp
push
jne
imul
jbe
jne
sar
fstp
ja
fdivr
repz
mov
jl
jns
dec
lods
clc
nop
jnp
push
inc
jl
call
push
mov
out
test
or
call
pop
or
out
jl
xor
dec
repz
adc
cmp
repz
xlat
jl
cmps
stc
sbb
xchg
out
jmp
mov
call
loope
mov
frstor
or
mov
cmp
add
frstor
lahf
out
call
nop
int
imul
dec
xchg
sbb
add
repz
popa
xchg
lods
stc
sbb
cmp
ds
sahf
push
(bad)
adc
cmp
out
call
js
ss
out
div
loop
pushf
arpl
mov
mov
jl
mov
movs
call
clc
push
cmps
sahf
cmp
repz
and
jg
in
xor
cmps
stc
sub
inc
iret
mov
pop
stos
mov
cs
jns
lods
popa
mov
and
cmp
inc
mov
mov
shl
fwait
out
jl
jo
push
and
mov
ins
cmp
shl
(bad)
mov
fidivr
pop
idiv
inc
aas
inc
es
je
shr
and
int3
or
leave
xor
mov
daa
xchg
(bad)
and
inc
mov
ins
inc
push
aas
js
(bad)
leave
mov
or
mov
inc
aaa
inc
mov
(bad)
pop
jb
jns
adc
mov
mov
outs
mul
inc
out
lock
aas
mov
lds
int3
jg
push
leave
mov
fisubr
pop
aas
jo
inc
pop
jg
and
jbe
dec
xor
push
pop
ins
jb
(bad)
jns
or
(bad)
adc
pop
bound
fimul
mov
or
xlat
pushf
cmp
in
adc
test
ss
mov
mov
nop
pop
xor
aas
mov
iret
dec
and
movs
fbld
cmp
in
adc
dec
ins
in
ss
push
div
push
pop
in
mov
inc
call
pop
xor
sbb
pop
scas
iret
jne
mov
loop
mov
test
add
ins
mov
pop
ins
sbb
daa
xchg
lahf
or
inc
mov
or
out
dec
out
add
mov
jl
int
pop
pop
in
out
lods
sub
mov
push
pop
hlt
es
dec
repnz
ds
inc
addr16
shl
and
in
and
push
fmulp
repnz
out
and
out
mov
pop
leave
leave
movs
les
adc
(bad)
push
inc
xchg
xchg
xor
fs
aaa
and
into
repz
(bad)
sub
add
xchg
cmp
pop
aas
push
xchg
jb
jb
pop
fs
je
jbe
pop
mov
cs
sar
sub
pushf
in
cmp
dec
jb
imul
xchg
sub
adc
in
and
push
call
xchg
cs
xor
pushf
call
pop
push
les
push
mov
cmp
aam
enter
mov
xchg
push
inc
or
inc
outs
add
xchg
iret
enter
or
cmp
aad
jmp
lock
cmp
push
mov
push
hlt
add
push
scas
aam
and
in
xor
xor
jb
add
add
scas
pop
js
in
das
inc
push
inc
push
push
pop
push
out
sahf
aaa
addr16
add
jge
out
sahf
add
sahf
in
out
or
and
inc
mov
push
std
inc
nop
and
jns
ins
and
inc
ins
sbb
es
cmc
addr16
xchg
sbb
push
mov
pop
mov
xor
dec
pop
dec
sahf
fcmovne
push
pop
pop
xchg
cmp
cmp
cmps
jae
cmp
add
xchg
mov
and
ficom
out
idiv
in
mov
je
pop
sub
sbb
jb
pop
cmp
pop
dec
pop
ja
xchg
dec
enter
outs
mov
je
jl
test
mov
mov
pop
outs
pop
in
push
push
in
pop
leave
and
mov
pop
cvtps2pi
pop
loope
repnz
xchg
add
inc
rcl
inc
sbb
inc
in
xchg
daa
pop
jo
jo
add
mov
std
pop
mov
cmp
enter
and
mov
fimul
sub
cmp
mov
addr16
repnz
daa
outs
ja
dec
imul
xchg
test
jg
in
inc
repnz
push
dec
add
adc
scas
stc
pop
aaa
leave
and
dec
inc
nop
jb
push
in
mov
iret
mov
cmp
pop
cs
(bad)
pop
fild
pop
fdiv
xchg
pop
mov
xchg
jae
add
or
pop
and
(bad)
js
push
pop
pop
push
rcr
jecxz
out
pop
pop
pop
pop
pop
stc
pop
add
minps
pop
sahf
out
pop
and
cmp
jns
out
inc
or
pop
out
sahf
out
addr16
jb
sahf
out
sahf
jge
mov
xchg
adc
out
sahf
adc
out
(bad)
push
aad
shl
jns
jecxz
icebp
sbb
int3
fistp
shl
pop
xor
dec
mov
dec
pop
jb
nop
adc
push
test
cdq
les
fist
cmp
pop
mov
mov
out
inc
daa
js
js
je
inc
push
add
jne
sbb
xor
pop
adc
(bad)
cmps
or
out
outs
in
fadd
inc
out
out
add
push
(bad)
add
daa
adc
cmp
xor
xchg
pop
jbe
push
mov
pop
xchg
leave
inc
repnz
movs
ret
call
aaa
add
xchg
mov
ja
xchg
sbb
cmp
pusha
inc
ja
jbe
jb
cld
pop
test
sbb
scas
in
sub
std
push
fmul
in
or
in
movs
(bad)
lods
dec
dec
xor
and
xchg
pusha
cmp
pop
mov
push
add
or
mov
sbb
and
leave
xor
jb
popa
xor
pop
test
popa
xchg
js
xchg
add
call
and
or
sub
scas
mov
mov
jg
add
jae
repnz
leave
xchg
out
out
daa
nop
mov
neg
(bad)
inc
bound
and
and
es
xchg
push
jb
(bad)
pop
jp
jp
sub
or
(bad)
jmp
push
xchg
jp
push
rcr
pop
mov
test
arpl
inc
fwait
in
arpl
arpl
mov
xor
xchg
jl
push
inc
jnp
xchg
dec
add
or
out
es
jl
push
maskmovq
idiv
cmp
push
cmp
fs
addr16
dec
je
fs
pop
fs
fisub
or
mov
iret
lods
mov
mov
je
xchg
dec
jge
jge
cmp
test
gs
jge
das
jno
xor
cmp
xchg
xchg
gs
gs
xchg
add
and
add
js
mov
jle
pop
leave
add
repnz
pop
loope
fs
mov
cmp
pop
mov
inc
outs
scas
in
dec
jg
pop
mov
dec
dec
add
in
imul
jg
xchg
in
in
fwait
mov
in
in
mov
shl
in
in
data16
jmp
repz
fsubp
in
add
push
adc
dec
dec
dec
dec
push
or
dec
dec
or
or
dec
dec
dec
dec
push
add
dec
dec
add
add
and
mul
cmp
fstp
xchg
pop
addr16
addr16
add
adc
rol
in
ja
das
xchg
out
push
and
addr16
push
inc
scas
jne
push
fadd
jb
or
xlat
jg
xchg
xchg
push
xchg
aas
lahf
xcrypt-ctr
cmps
push
push
scas
ss
mov
push
mov
inc
shl
or
loopne
fwait
mov
imul
imul
push
pusha
adc
int
xchg
jb
jb
fnsave
push
jb
jbe
dec
or
mov
jmp
jae
call
xchg
mov
dec
stos
add
push
loope
lahf
xor
dec
(bad)
(bad)
xor
movs
add
movs
imul
scas
repz
leave
push
enter
push
and
les
daa
call
pushf
fsubr
in
cmc
inc
std
cmp
xor
push
adc
js
and
push
cmp
and
xchg
iret
or
test
push
sub
push
mov
mov
pop
mov
xchg
leave
rcr
pop
loope
add
mov
das
stc
pop
pop
test
dec
or
test
test
pusha
imul
jae
jle
jae
cmp
mov
xchg
imul
enter
imul
sbb
imul
sbb
sbb
ins
ins
ins
ins
sbb
sbb
ins
ins
ins
ins
jns
js
ins
push
test
and
and
xchg
jmp
jb
loope
xchg
xor
ins
jbe
lea
ins
pop
pop
popa
punpckhwd
jns
sahf
out
push
jns
or
leave
in
in
xchg
setns
ds
or
daa
call
sbb
enter
outs
outs
cmp
dec
mov
jo
out
cld
in
in
mov
in
in
sar
outs
outs
shr
leave
cdq
mov
outs
pop
loopne
sub
(bad)
outs
call
leave
and
sbb
jb
outs
xchg
xchg
pop
leave
jae
in
ror
(bad)
outs
daa
(bad)
ja
push
xor
adc
jo
addr16
xchg
dec
jo
inc
aaa
jb
jo
push
pop
and
xchg
ror
mov
mov
jb
xchg
out
lahf
stos
mov
enter
dec
shl
(bad)
jo
cmp
loope
in
jo
jo
or
cmp
jno
sub
inc
mov
jno
jno
jno
jb
enter
jno
jno
jno
rcr
xor
or
xchg
jno
scas
xchg
addr16
mov
dec
iret
(bad)
lock
dec
dec
sti
push
jb
jb
xchg
xchg
jb
mov
iret
leave
repz
xchg
mov
mov
enter
xchg
xchg
hlt
pop
mov
lahf
fucomi
mov
and
jmp
arpl
pop
xchg
jae
inc
pop
mov
jae
outs
push
xchg
arpl
add
add
jb
jae
(bad)
jae
xlat
mov
jae
lea
and
in
fs
add
pop
and
pop
and
bound
nop
sbb
mov
hlt
dec
mov
addr16
(bad)
out
fs
ror
mov
cmp
cmp
ja
lea
cmps
js
fwait
bnd
add
or
jb
push
add
mov
jne
mov
das
sub
or
sahf
out
es
cmp
and
or
jne
cmp
jne
ins
pop
mov
scas
into
inc
repnz
out
fs
fsub
adc
in
icebp
(bad)
inc
ja
jns
ret
aas
or
gs
ins
jbe
ja
fcmovne
inc
nop
cwde
fild
call
mov
push
hlt
cld
cmp
jae
pop
ja
adc
add
dec
sahf
ja
xor
mul
and
pusha
push
in
fs
das
mov
mov
mov
rcr
add
sbb
in
movq
js
js
js
mov
js
js
fist
xchg
(bad)
jge
ins
mov
setbe
cmps
inc
pop
ss
cs
js
js
outs
pop
leave
mov
enter
out
jns
or
icebp
and
xchg
sub
xchg
xchg
xchg
jns
jns
jns
jns
xchg
xchg
xchg
xchg
jns
jns
jns
jns
xchg
xchg
xchg
xchg
jns
jns
jns
jns
in
ins
xchg
jns
pop
ud2
pop
or
in
in
or
push
in
in
add
jns
out
movs
sbb
sahf
mov
mov
xchg
out
int
aad
and
jae
repnz
in
and
in
cmp
and
jp
das
xchg
sub
jp
xor
aam
fs
ja
mov
lea
add
jp
lar
dec
mov
lahf
movs
jp
xchg
aas
leave
repz
es
fdivr
xchg
fcomi
psubsb
cmps
push
je
sbb
xchg
and
jnp
jnp
out
fadd
das
inc
dec
push
jl
iret
jnp
dec
push
push
push
out
sahf
out
jae
pusha
or
jo
cmps
fisttp
pop
prefetch
add
inc
adc
in
in
and
es
iret
add
clc
jb
adc
add
jl
jl
and
cmp
mov
(bad)
or
popa
xchg
cmp
dec
repnz
repnz
jl
jl
dec
inc
sub
adc
xchg
xchg
fst
cmps
inc
xchg
jg
mov
in
add
mov
shl
mov
in
call
xchg
xchg
out
ror
rcl
ss
mov
jl
mov
dec
popf
or
or
mov
ja
jge
cs
out
inc
xlat
dec
dec
js
dec
mov
(bad)
aam
loopne
repnz
mov
les
fisubr
jle
push
aas
cmove
jle
cmps
leave
leave
leave
leave
jo
add
mov
nop
jle
loope
add
mov
pushf
pop
ret
jle
mov
jle
and
pop
stc
int3
or
mov
rcr
outs
pop
stc
inc
jg
inc
lahf
fist
iret
add
cdq
add
and
cdq
xchg
mov
ror
fdivr
jg
sbb
push
xor
jg
mov
xchg
xchg
xchg
xchg
mov
bnd
add
aam
push
mov
cmps
test
les
aam
leave
repz
or
inc
iret
repz
dec
add
pop
add
gs
jne
popf
cmp
repz
sahf
out
pop
popf
or
sahf
out
lods
adc
dec
cmp
or
fwait
retf
add
call
iret
repz
or
adc
sbb
cmp
jnp
push
jl
sahf
jl
pop
and
inc
mov
pushf
push
scas
pop
push
loopne
mov
imul
mov
fld
les
(bad)
mov
iret
and
xor
push
adc
or
fs
ss
mov
dec
and
popf
outs
fnstsw
cdq
jp
daa
mov
xchg
jns
in
add
or
cmovle
xchg
out
int3
call
dec
clc
or
jns
push
stc
cmps
or
cmp
daa
inc
sahf
dec
or
in
jno
scas
out
outs
psllq
fidivr
jne
enter
fwait
outs
repnz
inc
add
jo
pop
dec
rcr
imul
sbb
popf
(bad)
pop
push
pop
ficom
push
add
lar
in
push
scas
test
cmp
push
push
or
push
test
call
test
or
push
test
jp
add
fucom
jns
xchg
sysret
call
stos
pop
mov
jns
in
push
test
or
cmp
mov
adc
test
test
lahf
xor
test
test
test
test
add
inc
test
inc
cmp
dec
test
jno
jae
into
jns
jns
add
xchg
jl
pop
pushf
iret
add
mov
daa
mov
add
repnz
xchg
pop
mov
jb
xor
adc
add
add
mov
inc
xchg
dec
inc
into
pop
jo
fistp
xchg
pop
xchg
out
cmps
push
and
dec
jbe
adc
fistp
mov
test
xchg
xchg
and
xchg
sbb
jb
xchg
pushw
or
iret
repz
jl
xchg
jb
shl
xchg
nop
sbb
cmp
mov
sbb
fbld
leave
and
cld
mov
push
mov
pusha
mov
enter
mov
js
inc
push
sub
push
mov
xor
iret
sub
fdiv
daa
cmp
inc
push
cwde
pop
mov
(bad)
daa
daa
daa
daa
aam
jmp
pop
push
pop
add
or
and
pop
sub
in
push
cdq
dec
mov
pusha
ja
adc
aas
nop
jmp
jb
mov
ror
enter
fadd
dec
cmp
loopne
mov
frstor
xchg
jecxz
inc
mov
add
loopne
daa
daa
mov
loop
inc
push
pop
push
pop
mov
inc
mov
mov
inc
mov
pop
add
pop
mov
test
mov
fld
(bad)
je
mov
add
adc
mov
dec
lock
aas
mov
mov
dec
and
nop
jg
paddsw
in
mov
pop
and
mov
loop
jmp
push
pop
mov
push
mov
repnz
mov
mov
or
adc
adc
jp
jns
sub
xor
cmovb
sbb
cmps
ucomiss
mov
ins
mov
out
xchg
loopne
xchg
mov
movd
xchg
int
adc
mov
mov
cmc
jbe
cmp
rcl
dec
fimul
loop
in
mov
mov
push
or
lea
or
inc
daa
lea
inc
mov
lea
lea
xchg
xor
push
xchg
or
repnz
jne
das
jp
add
push
aam
or
jnp
add
(bad)
push
xchg
dec
mov
test
jns
push
test
cmp
mov
paddusw
in
sahf
out
add
add
fisttp
add
cmps
std
lea
pop
or
stos
mov
ins
mov
or
pop
push
push
xlat
iret
jp
jbe
jbe
seta
add
popf
pop
mov
and
inc
das
xor
clc
add
jns
es
stos
sub
shr
mov
in
mov
add
lods
daa
loopne
das
fisub
jg
neg
nop
cmpxchg8b
add
ja
jne
xor
je
dec
lsl
mov
fld
fs
ins
nop
and
nop
dec
sub
nop
nop
jb
fsub
out
rol
daa
fnsave
rcr
dec
sgdtd
leave
add
aas
call
lock
push
push
xchg
das
or
pop
mov
mov
cs
sbb
push
aaa
rcr
(bad)
fistp
inc
lods
inc
repnz
scas
nop
mov
shl
leave
stos
inc
inc
into
jo
fistp
ins
in
xchg
xchg
rcl
sahf
out
fsubrp
push
pop
lock
or
cdq
mov
dec
sahf
addr16
push
or
sbb
cmp
in
in
sub
xor
cmp
imul
adc
call
and
setb
ja
fisubr
mov
push
and
in
leave
iret
add
lock
es
int3
inc
xchg
xchg
mov
sahf
je
jo
js
xchg
push
xchg
mov
add
loopne
call
lock
xchg
jle
mov
push
push
sub
and
mov
xchg
aas
inc
daa
iret
dec
mov
sidtd
push
xchg
and
xchg
inc
adc
fld
das
xchg
xchg
jl
test
lfs
xchg
test
dec
ror
xchg
add
add
adc
cdq
push
push
inc
adc
jne
sbb
das
mov
out
add
outs
and
mov
das
mov
dec
ret
xchg
outs
retf
xchg
lahf
or
mov
xchg
or
cld
xor
mov
daa
xchg
cmp
xchg
pop
pshufw
adc
mov
xchg
xor
mov
pop
cdq
dec
push
in
xchg
push
sahf
out
sahf
add
add
dec
leave
repz
dec
push
outs
pop
push
ja
out
fisub
push
or
or
dec
aaa
jns
or
prefetchwt1
push
pop
call
push
dec
enter
pushf
pushf
fsub
icebp
stc
mov
int3
sahf
sbb
in
ss
cwde
pop
ss
inc
in
in
test
in
jmp
in
jb
je
cwde
mov
sbb
mov
push
adc
ja
adc
push
and
cs
lock
and
cmps
pop
jb
stos
mov
jo
mov
mov
inc
and
icebp
ret
call
inc
repnz
in
xchg
add
call
fwait
das
fwait
cmp
es
add
lahf
addr16
mov
fwait
(bad)
xchg
xchg
xchg
xchg
xchg
call
mov
sbb
sahf
mov
pushf
xor
pushf
das
ss
xchg
xchg
xchg
movq
pushf
inc
pushf
dec
pushf
push
jns
xchg
xchg
pushf
pop
pushf
pushf
outs
mov
cmp
in
jle
push
xchg
push
repnz
fimul
cmp
jns
fstp
pushf
mov
sub
pop
leave
rcr
in
mov
bswap
clc
pushf
add
push
popf
push
popf
push
popf
es
in
in
xor
dec
popf
in
in
push
popf
pop
popf
addr16
outs
popf
loop
in
ja
jg
mov
in
outs
mov
popf
jns
in
rcr
fsub
jns
out
out
out
and
outs
add
iret
mov
daa
sub
repz
sub
or
sub
in
cvttps2pi
adc
dec
pop
sahf
xor
nop
inc
neg
fsubr
pop
cdq
add
push
das
test
popf
push
sar
mov
sahf
popf
pushf
jl
lahf
sgdtd
pop
mov
or
mov
lahf
daa
daa
iret
mov
add
and
daa
daa
fwait
mov
out
xchg
daa
daa
out
pop
mov
xchg
sub
jbe
mov
adc
bswap
leave
in
in
sub
mov
fstp
in
in
iret
leave
enter
add
out
cmp
ss
jns
outs
mov
packuswb
outs
ja
dec
sahf
out
xchg
mov
mov
jns
loope
sub
repnz
movhps
das
pop
outs
daa
iret
jae
xor
aaa
(bad)
cdq
loop
repz
xor
dec
mov
sub
test
mov
nop
mov
pop
xchg
pop
test
mov
fsubr
clc
iret
lock
fldz
xlat
and
(bad)
ins
mov
mov
mov
add
daa
pop
leave
fs
icebp
jb
jmp
and
push
add
inc
dec
dec
sahf
out
add
add
pushf
fcomp
js
or
ud2
cdq
or
repnz
mov
pop
mov
daa
iret
jae
adc
hlt
adc
pop
js
dec
movs
outs
adc
jns
and
sub
sbb
cmp
sbb
sbb
push
bound
ins
js
sahf
xchg
out
or
gs
movs
movs
movs
scas
movs
mov
inc
jmp
loopne
add
mov
aam
jo
(bad)
mov
adc
push
cmps
pop
punpcklbw
add
adc
in
clts
outs
cmps
retf
dec
js
das
and
jns
nop
das
cwde
push
or
femms
jns
out
ds
mov
mov
ror
enter
repz
in
lar
pop
cmp
into
call
sub
inc
fild
mov
js
sbb
mov
cmps
dec
sahf
ja
cmps
and
add
xor
adc
dec
cmp
inc
cmps
cmovnp
rol
outs
fld
xchg
xchg
mov
xchg
cmps
push
sub
in
in
xor
xchg
pop
and
leave
fld
int3
sahf
add
(bad)
adc
test
pop
and
xchg
int3
aas
addr16
paddusb
ja
push
add
(bad)
addr16
leave
repz
outs
push
ja
sbb
es
ret
stos
rol
ja
jl
aas
out
jb
aad
in
add
and
xchg
mov
sbb
xchg
imul
push
add
dec
push
test
aad
mov
iret
sub
pop
xchg
add
repz
cmp
cmps
push
scas
dec
and
call
ret
fnstcw
cmp
mov
stc
das
ficom
cmps
and
fcmovne
xchg
and
xor
cmp
popf
dec
and
add
les
in
cmp
stos
(bad)
jg
sahf
xchg
mov
jae
cmp
mov
scas
daa
iret
add
loop
cmps
sub
les
stos
fisttp
and
and
sub
xor
into
leave
inc
dec
out
stos
outs
or
dec
sub
js
sbb
nop
neg
cmp
and
cmp
rcr
or
pushf
int3
sahf
dec
inc
lods
femms
push
cmps
jecxz
repz
lods
iret
push
cmp
jbe
cmps
dec
xchg
add
inc
repnz
add
fild
jo
cmp
mov
iret
add
shr
push
sbb
mov
xchg
mov
lods
pusha
lods
sahf
ja
rcl
mov
add
loopne
mov
(bad)
scas
or
sahf
out
push
add
in
and
inc
scas
in
in
dec
scas
pop
scas
fs
outs
scas
retf
(bad)
fstp
test
retf
retf
retf
fwait
scas
cmps
scas
mov
mov
retf
scas
ror
pop
fstp
call
sbb
pop
pop
(bad)
ror
scas
pop
adc
pop
scas
sub
xor
das
xchg
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
xchg
pop
push
adc
sahf
sub
dec
sub
dec
popa
push
das
ins
movs
fdivr
rdmsr
aas
ja
jns
in
or
push
ss
mov
iret
cmp
cmp
repz
iret
cmp
cmp
in
lock
sti
out
jns
iret
inc
push
mov
adc
sbb
iret
repz
daa
inc
xor
cmp
iret
repz
repz
dec
imul
jg
mov
out
sahf
out
mov
daa
mov
mov
pop
int3
xlat
loop
repnz
in
push
clc
(bad)
daa
and
sbb
xor
cmp
out
inc
sahf
popa
inc
mov
mov
jns
out
add
fimul
ja
push
pop
ror
adc
dec
sbb
repnz
cmp
outs
push
fmul
loopne
into
hlt
jbe
(bad)
mov
clc
mov
sahf
out
(bad)
wrmsr
push
cmp
repz
xchg
xchg
test
mov
out
jns
add
out
in
add
test
(bad)
or
xchg
cmp
pop
int3
int3
mov
mov
mov
add
jmp
clts
and
in
in
pusha
push
lock
cmp
inc
or
gs
mov
mov
mov
int
xor
dec
mov
cwde
leave
leave
add
test
test
iret
sar
fmul
xchg
inc
pop
enter
repz
retf
daa
loopne
sti
mov
mov
enter
mov
mov
mov
into
sub
push
iret
mov
daa
iret
rcr
pop
push
add
repz
mov
jne
add
repz
mov
xchg
or
cmp
mov
ret
cmp
cmp
jecxz
adc
(bad)
mov
adc
sbb
cs
jns
out
sbb
push
jae
dec
sahf
sbb
push
popf
cmp
leave
addr16
jge
daa
mov
out
and
fcmovne
rep
outs
mov
das
push
inc
aaa
ret
loopne
imul
xchg
into
jg
repz
sub
add
leave
repz
add
push
add
popa
imul
mov
repnz
int
fsub
push
fucom
jns
push
out
pop
stc
syscall
retf
das
ins
daa
or
sbb
ror
mov
sbb
cmp
mov
movups
adc
repz
adc
pop
adc
cmp
jb
pop
mov
in
sahf
sbb
aaa
jns
and
emms
repnz
and
stc
pop
dec
sahf
and
jmp
pop
div
add
sub
sahf
out
sahf
pop
sub
sub
add
pcmpgtb
mov
aas
loop
or
pop
daa
loopne
inc
(bad)
jmp
jo
lock
add
mov
pop
xchg
push
add
mov
push
rol
(bad)
repz
lahf
in
scas
or
outs
mov
iret
or
add
dec
femms
pmuludq
in
cmp
add
adc
jb
stc
sub
pusha
mov
mov
mov
add
pushf
cmp
xchg
add
repz
mov
mov
dec
mov
jle
cmp
dec
dec
out
lahf
idiv
enter
mov
jle
sub
sbb
xor
mov
mov
cs
dec
sahf
out
add
dec
ds
ret
bswap
out
or
shl
cmp
cdq
lock
push
mov
enter
mov
add
cmp
or
loope
es
dec
or
push
mov
pop
mov
jg
dec
sahf
xchg
outs
sysret
adc
dec
mov
fcmovne
repz
rcr
int3
fidivr
sahf
out
sahf
in
lock
lea
adc
and
and
out
jns
and
xor
cmp
repz
leave
repz
jb
jge
mov
sub
lds
loopne
mov
jb
mov
push
mov
push
movhps
push
push
pop
xchg
out
jns
or
dec
dec
outs
mov
cmovbe
dec
push
pop
jns
out
pcmpgtd
outs
adc
pop
fucom
jbe
out
jle
xchg
outs
mov
mov
mov
xchg
out
sbb
je
out
mov
push
(bad)
out
sahf
ja
push
and
and
in
dec
sahf
and
out
and
mov
lahf
out
es
mov
out
ss
mov
sub
jns
out
ss
sub
xchg
out
dec
xor
pcmpgtd
in
outs
pop
outs
xor
jle
jbe
mov
push
cmp
leave
in
cmps
pop
scas
mov
mov
(bad)
bswap
mov
mov
jnp
sub
push
jnp
mov
pop
in
in
push
test
test
dec
inc
xchg
in
add
push
fcom
mov
aas
mov
fwait
and
add
jl
loopne
add
jmp
shr
xchg
xchg
xchg
(bad)
and
inc
inc
and
xor
inc
repnz
ftst
daa
cmp
or
stos
add
add
xor
sub
hlt
inc
inc
xlat
ja
aas
inc
push
repnz
xor
sbb
aas
sub
inc
or
push
xchg
xchg
inc
aaa
xor
cmp
shl
fcomp
out
pop
in
loopne
fcom
sar
out
enter
mov
cwde
pop
mov
iret
repz
je
ins
push
fs
pop
push
dec
out
daa
iret
inc
cmp
push
sub
dec
repz
adc
add
xlat
lock
mov
repz
int3
ror
ja
loop
out
jo
pop
repz
push
push
add
(bad)
sbb
repz
add
or
popf
pushf
cmp
or
aaa
or
in
(bad)
sub
scas
adc
in
movs
fwait
mov
and
leave
inc
inc
push
addr16
das
push
jo
(bad)
push
mov
ins
popf
cmp
jae
and
jb
mov
and
cmp
dec
sahf
ja
test
mov
(bad)
fbld
add
sbb
data16
popa
popa
dec
or
mov
and
pop
mov
push
and
and
call
inc
sbb
pop
test
or
(bad)
pusha
jmp
movs
add
in
lods
pusha
cmp
cmps
fisttp
mov
sbb
mov
xchg
inc
mov
popf
pop
rcr
mov
sbb
out
ja
stc
in
call
adc
push
(bad)
cmps
in
pop
fidivr
xor
fcomp
loopne
jb
mov
xchg
jle
in
inc
les
fcomp
pop
cwde
retf
adc
cmp
inc
mov
jle
sub
inc
call
fdivr
ins
sub
inc
xchg
ins
xor
das
mov
pop
adc
pop
aas
jg
sbb
fild
iret
repz
or
or
sahf
out
adc
add
repz
adc
fstp
pushf
sbb
repz
cmp
add
js
fldcw
pop
(bad)
mov
jl
fimul
and
sub
inc
mov
fdiv
cmp
mov
jns
jp
jno
out
push
cld
mov
inc
lods
lea
add
call
fsub
outs
loopne
add
inc
pop
shl
jne
mov
call
mov
cwde
mov
jae
xor
addr16
push
push
mov
inc
or
adc
out
and
pop
pop
imul
cs
cmp
xor
ins
sub
scas
pop
xor
inc
inc
sgdtd
dec
push
xor
add
daa
inc
xchg
shl
inc
xchg
es
les
enter
sbb
mov
adc
repz
ds
push
test
repz
idiv
adc
jo
push
push
push
pop
adc
ins
and
push
mov
test
jl
pop
pusha
out
jns
neg
je
pop
adc
push
cmp
repz
dec
push
inc
pop
repz
repz
xor
xor
repz
and
and
push
cdq
cmp
clc
xchg
cdq
jnp
jg
movups
daa
xor
sub
sahf
mov
cld
xor
inc
cmp
xor
jg
cmp
pop
repz
repz
mov
repz
jge
out
add
dec
ins
add
shl
xchg
repz
ror
jae
das
push
dec
scas
push
fs
mov
mov
add
enter
or
ret
mov
inc
ds
xchg
cwde
push
and
aas
add
leave
sbb
into
sbb
ror
and
sahf
mov
sub
inc
popf
imul
sbb
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
(bad)
(bad)
in
adc
inc
mov
dec
js
inc
outs
(bad)
loopne
jmp
xchg
(bad)
jg
jmp
push
daa
cmp
mov
popf
sti
jmp
stos
push
inc
mov
out
jecxz
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
(bad)
(bad)
call
(bad)
xchg
push
cmps
scas
mov
or
add
cmps
xchg
(bad)
(bad)
(bad)
(bad)
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
(bad)
(bad)
(bad)
std
mov
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
imul
and
add
(bad)
(bad)
out
(bad)
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shr
(bad)
call
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
(bad)
(bad)
dec
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
cmp
pop
sar
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movs
jmp
jg
sub
jge
mov
(bad)
mov
fst
arpl
int3
and
call
cmp
jp
and
cmp
(bad)
(bad)
jmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
(bad)
(bad)
(bad)
push
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
(bad)
jmp
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
(bad)
call
xchg
cmp
push
and
dec
dec
gs
std
or
pop
ficomp
or
enter
fmul
dec
pop
push
and
sub
div
in
in
ja
jnp
(bad)
mov
xor
popa
push
out
mov
(bad)
(bad)
call
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
sub
mov
sub
mov
sbb
dec
jno
repz
test
(bad)
(bad)
(bad)
jge
ficomp
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
gs
(bad)
(bad)
dec
add
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
(bad)
call
in
cmp
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
jg
lods
jecxz
fdiv
jne
fild
or
shr
push
ficom
(bad)
(bad)
inc
popa
sar
and
mov
cdq
xchg
mov
mov
or
(bad)
push
jmp
outs
das
adc
stos
sbb
data16
inc
fdiv
jno
add
(bad)
(bad)
(bad)
mov
adc
out
mov
mov
movs
in
lahf
xor
mov
js
(bad)
dec
push
stos
mov
push
loope
or
ins
or
(bad)
(bad)
call
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
(bad)
(bad)
(bad)
inc
hlt
or
(bad)
fnstenv
adc
mov
mov
bound
ficom
repz
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movs
(bad)
push
ret
movs
sti
hlt
(bad)
shr
imul
mov
(bad)
(bad)
(bad)
call
mov
add
in
add
pop
dec
or
cmp
add
daa
adc
or
xchg
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
(bad)
push
mov
or
mov
in
mov
mov
add
(bad)
(bad)
call
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fs
ds
or
test
push
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
(bad)
(bad)
(bad)
(bad)
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
(bad)
(bad)
(bad)
dec
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
(bad)
(bad)
jg
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
(bad)
(bad)
(bad)
jmp
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
aaa
std
mov
rcl
or
add
mov
das
es
inc
cld
mov
mov
mov
add
mov
cmps
call
ret
shl
scas
fldcw
ret
es
pushf
mov
ins
add
dec
pushf
aas
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
(bad)
(bad)
call
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
int
call
pop
es
outs
ja
mov
out
cli
jo
ud0
cmp
pop
dec
adc
sahf
gs
clc
sar
imul
push
js
or
sar
call
dec
ret
cmp
cmps
not
pusha
ror
imul
push
push
scas
fcomp
fldenv
fild
(bad)
out
push
aaa
pusha
mov
fidivr
mov
jmp
xchg
sbb
mov
retf
mov
cmps
mov
sar
(bad)
call
int
push
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
cmps
pusha
(bad)
dec
sbb
add
sub
test
ins
les
add
or
xchg
mov
xor
fisub
xchg
push
pop
loopne
popa
(bad)
fcom
push
in
pop
and
push
xlat
fsub
jns
out
fcmovu
(bad)
mov
loop
in
out
sahf
out
jmp
out
sahf
in
repz
cmc
div
jp
out
clc
stc
cli
sti
cld
inc
mov
cmp
mov
adc
add
les
xchg
mov
xchg
and
cmp
jae
inc
push
jbe
add
dec
bound
inc
(bad)
cs
mov
bound
jne
add
arpl
call
fistp
and
mov
push
ret
cmp
inc
jno
clc
fisttp
xor
pop
inc
cmp
pop
bound
xor
xor
popa
arpl
pop
(bad)
cmp
pop
xor
xor
or
xor
bound
pop
xor
popa
push
inc
inc
inc
fdivr
jbe
pop
ins
imul
ss
imul
dec
inc
mov
add
push
inc
lods
add
sub
stos
loope
popa
or
mov
gs
je
(bad)
mov
push
jbe
mov
inc
aas
fist
test
loop
je
push
push
pop
or
adc
add
sub
shl
pop
or
and
push
xor
pusha
add
jns
xchg
cmp
cmp
ins
aaa
aas
inc
push
adc
mov
sub
add
cdq
and
jae
and
fidiv
inc
aas
nop
cmp
and
(bad)
xlat
inc
inc
(bad)
and
sbb
inc
pop
cs
(bad)
jecxz
jae
inc
inc
inc
add
sub
xchg
popa
mov
call
mov
dec
push
dec
cmp
inc
mov
fsubr
sbb
mov
mov
jne
add
push
outs
mov
dec
jge
imul
xor
or
stos
mov
arpl
add
addr16
mov
outs
in
clc
xchg
into
pop
jo
mov
push
dec
in
inc
cmp
sub
add
xchg
sub
pop
and
xor
outs
xchg
inc
mov
mov
dec
xchg
lahf
cmp
mov
push
nop
scas
pop
xlat
mov
xchg
out
and
inc
jb
addr16
sahf
add
dec
popa
jo
loopne
dec
adc
lahf
push
outs
outs
lods
pop
or
mov
lds
and
sti
adc
mov
mov
pop
or
sub
test
pop
cmp
arpl
cmp
mov
(bad)
jo
lahf
pop
mov
push
xchg
ins
jns
shr
in
xchg
push
xor
ss
int
adc
test
dec
popa
mov
mov
bswap
gs
inc
sti
inc
push
bound
ja
inc
jbe
mov
mov
dec
dec
repnz
ja
dec
xor
je
mov
jmp
sti
push
inc
imul
push
jg
xor
iret
push
cmps
mov
or
and
popa
cmp
dec
inc
jmp
jnp
sbb
and
dec
adc
sbb
sbb
mov
outs
rcl
inc
push
inc
dec
(bad)
scas
cmp
(bad)
pop
bound
outs
arpl
mov
enter
pop
in
xchg
pushaw
in
ins
mov
pop
inc
xchg
mov
mov
enter
out
adc
push
daa
add
or
push
adc
pop
les
inc
adc
inc
stos
adc
push
jbe
add
add
push
and
fdivr
loopne
fnsave
add
dec
sbb
pusha
add
pop
sub
add
add
call
or
pop
push
or
mov
dec
or
or
or
or
adc
adc
push
adc
in
fidivr
movhps
push
adc
adc
adc
add
sub
outs
fisub
or
adc
pop
adc
aaa
mov
cld
inc
add
jo
add
and
add
in
add
adc
add
jp
add
shl
call
fdiv
imul
ds
xor
adc
pop
add
(bad)
jmp
jno
xor
inc
mov
adc
xor
cmp
repnz
lds
push
or
inc
rol
test
add
arpl
or
add
fcom
adc
cmp
and
sub
or
jecxz
scas
pushf
into
loopne
adc
push
lods
stos
add
pop
scas
cmp
adc
(bad)
pop
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
clc
and
lock
loope
icebp
mov
and
mov
xor
scas
fiadd
inc
or
or
dec
(bad)
(bad)
jmp
rcr
push
ret
xchg
and
sub
std
cmps
sar
(bad)
push
lods
loopne
ja
fdivr
add
mov
mov
loopne
mov
cmovne
fst
dec
mov
push
loopne
jecxz
pushf
ret
ja
(bad)
(bad)
mov
xor
and
fistp
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
or
hlt
movs
adc
pop
inc
inc
xchg
pop
add
std
or
mov
add
add
lds
cld
cli
and
mov
fiadd
jmp
test
jge
ficomp
cmps
xor
mov
test
pop
lahf
mov
movs
jecxz
push
mov
cwde
jmp
(bad)
(bad)
(bad)
(bad)
clc
cmp
jg
or
ins
sub
addr16
out
or
(bad)
push
push
xchg
add
jmp
repnz
inc
lock
scas
(bad)
jle
fcmovnu
clc
cmp
fisubr
in
mov
fistp
lahf
xor
call
fs
scas
mov
pop
pop
mov
(bad)
(bad)
(bad)
(bad)
inc
mov
xchg
sbb
scas
adc
mov
xor
lods
scas
xchg
test
(bad)
(bad)
jmp
aam
and
sbb
sar
and
rol
fwait
movs
jmp
push
mov
(bad)
dec
push
out
in
and
ss
repz
cmps
pop
outs
icebp
mov
pop
(bad)
(bad)
(bad)
push
das
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
(bad)
out
outs
loope
loope
ror
mov
(bad)
call
int
arpl
push
out
or
(bad)
(bad)
push
jmp
jg
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sar
xor
hlt
and
xchg
(bad)
(bad)
jmp
sbb
mov
mov
out
pop
jb
mov
mov
mov
mov
int
inc
fwait
sbb
mov
dec
jp
push
gs
jg
hlt
push
add
stc
loope
(bad)
mov
sar
sub
cmp
icebp
test
mov
(bad)
aas
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
call
jne
sbb
paddb
inc
mov
dec
adc
push
lock
(bad)
(bad)
jmp
mov
aad
aaa
sbb
into
fcomp
sbb
sbb
into
(bad)
push
aas
loopne
cli
adc
aaa
xchg
in
add
inc
adc
mov
dec
fisttp
out
aas
std
cli
push
push
(bad)
fist
fst
jg
cmp
sub
(bad)
inc
scas
inc
mov
jg
(bad)
(bad)
dec
cs
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
in
(bad)
(bad)
dec
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmps
or
mov
adc
cmp
cmp
js
jmp
fistp
sub
xchg
pop
clc
pop
hlt
sub
movs
add
mov
add
lea
jg
gs
std
xor
jg
or
(bad)
jg
outs
adc
ret
(bad)
das
pop
pop
pop
shl
out
sar
call
inc
lock
or
sar
std
pop
les
cli
mov
mov
push
add
pop
and
ins
add
leave
push
scas
loop
jge
push
shr
mov
push
xchg
push
mov
adc
and
sbb
xchg
jo
and
out
test
(bad)
jmp
imul
rcr
lock
sbb
cmps
sahf
imul
fcmovnu
ror
ins
call
(bad)
stos
arpl
(bad)
cld
call
js
cmp
outs
inc
shr
lods
hlt
cmp
fist
mov
adc
push
movs
xchg
or
mov
stos
dec
adc
das
clc
lods
xor
cs
cmps
addr16
(bad)
push
dec
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outs
mov
sbb
(bad)
(bad)
(bad)
jmp
cmp
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
in
(bad)
push
xor
cmp
xchg
mov
(bad)
cwde
pop
xchg
ftst
jbe
xchg
jmp
sub
ds
jae
shr
(bad)
(bad)
(bad)
call
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivr
lock
(bad)
adc
loopne
idiv
pop
cld
add
adc
and
xor
mov
lahf
fmul
enter
jecxz
scas
sub
pop
push
leave
cli
(bad)
in
pop
mov
mov
in
test
mov
push
sbb
push
inc
or
pop
ret
cmps
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
mov
mov
push
push
sbb
stos
icebp
pop
inc
idiv
ror
adc
push
inc
jecxz
sbb
sar
adc
inc
(bad)
sar
adc
lahf
push
in
inc
cmp
push
or
test
loopne
add
mov
fsubr
pop
pusha
inc
fcomi
push
(bad)
and
clc
dec
pop
adc
xchg
pushf
mov
repnz
or
adc
inc
aas
clc
call
jnp
rcr
rol
pop
inc
jb
fistp
adc
call
mov
addr16
pop
nop
mov
inc
sti
arpl
(bad)
(bad)
loop
std
or
sbb
mov
inc
cmps
popf
push
loop
sbb
or
imul
xor
sub
xor
fsubr
fistp
lds
fidivr
jg
(bad)
dec
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
cld
add
cs
inc
mov
in
stc
mov
lahf
outs
int3
push
sbb
std
inc
pop
pop
test
bound
pop
outs
pop
cmp
xchg
inc
test
in
jge
popa
push
test
jbe
outs
hlt
(bad)
dec
daa
shl
dec
cs
adc
lahf
mov
or
out
call
dec
cmp
shl
cld
mov
mov
js
(bad)
pop
jg
pop
shr
rcl
jg
adc
xor
std
(bad)
call
mov
gs
pushf
lea
jp
(bad)
jnp
jecxz
(bad)
(bad)
mov
lds
push
pop
adc
imul
or
inc
pop
(bad)
xor
idiv
jmp
ror
and
add
cmps
push
sbb
mov
pop
inc
cmps
enter
push
inc
fwait
into
test
xchg
movs
ins
or
and
xchg
fisubr
add
ins
test
aas
repz
fwait
jmp
sbb
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
push
ror
mov
xchg
pmullw
(bad)
dec
repnz
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
(bad)
out
dec
jg
mov
inc
out
pop
or
or
dec
ss
xchg
mov
lods
movs
or
repnz
(bad)
clc
dec
cmc
mov
jl
call
outs
das
or
retf
(bad)
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
(bad)
aas
mov
cmp
lods
jg
mov
sub
addr16
sbb
cld
daa
adc
std
jp
std
adc
cdq
or
mov
ret
nop
dec
cld
stos
jle
icebp
das
inc
lock
pop
pop
div
(bad)
cld
idiv
add
scas
stc
lahf
loope
and
shr
je
(bad)
push
xor
mov
add
fs
call
out
icebp
(bad)
mov
loope
mov
cmps
popf
sbb
mov
mov
fbstp
push
daa
outs
das
int
pop
mov
add
cmps
cmp
call
popf
js
data16
dec
adc
mov
add
(bad)
mov
or
or
add
fs
inc
add
loop
out
or
aaa
std
fistp
cmp
inc
sbb
xchg
mov
pop
cmp
mov
aas
icebp
ret
ror
sbb
mov
adc
sub
adc
aas
pop
clc
loope
loope
mov
or
jp
dec
add
xlat
jbe
scas
and
fbstp
xchg
fld
call
and
fdivr
xchg
call
dec
js
pop
fbld
sar
pop
out
jg
dec
sbb
jno
ret
fs
mov
inc
sbb
iret
(bad)
(bad)
(bad)
call
jge
pop
clc
xchg
cmps
jmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
(bad)
jmp
outs
jmp
std
mov
daa
jmp
fcom
mov
push
jae
popa
lds
outs
pop
hlt
(bad)
dec
add
pop
stc
push
dec
out
fstp
(bad)
mov
enter
popf
xchg
pop
add
cmps
mov
(bad)
daa
icebp
push
lahf
sti
inc
(bad)
(bad)
(bad)
call
aaa
sbb
cmps
scas
les
pop
xor
mov
xchg
mov
fild
fsubr
add
xor
sub
inc
aas
add
cmp
add
sti
push
sti
pop
inc
xor
stos
inc
dec
push
mov
push
push
mov
int3
pop
iret
(bad)
(bad)
(bad)
in
and
and
mov
adc
out
ds
hlt
sbb
mov
sub
inc
jb
(bad)
pop
hlt
imul
ds
lea
xchg
sub
lods
(bad)
(bad)
(bad)
(bad)
mov
loope
push
test
rol
shl
cwde
ins
jmp
popf
sbb
sbb
(bad)
(bad)
(bad)
jmp
xchg
out
icebp
jp
out
imul
shr
dec
sbb
sub
js
mov
jl
es
(bad)
(bad)
(bad)
mov
sub
mov
loop
fs
loope
or
cmp
mov
pop
repnz
(bad)
(bad)
push
dec
sub
mov
dec
stos
pop
test
clc
stc
scas
ja
sbb
jmp
xchg
lahf
push
mov
icebp
(bad)
call
or
push
test
shl
(bad)
(bad)
inc
ins
ds
or
push
sub
es
inc
push
inc
and
mov
(bad)
inc
(bad)
sti
inc
data16
cmp
test
add
push
cli
xchg
nop
mov
dec
sbb
fs
rcl
(bad)
(bad)
(bad)
jmp
add
or
or
and
call
nop
mov
leave
out
sbb
(bad)
call
stos
push
xor
pop
fadd
out
xor
jo
addr16
cmp
xchg
sbb
pop
xchg
(bad)
(bad)
inc
inc
fs
das
mov
mov
adc
(bad)
xchg
xchg
jmp
mov
imul
lods
ss
(bad)
(bad)
dec
imul
jmp
xor
add
sbb
mov
inc
jne
call
loope
movs
cmp
sar
sub
jo
pop
retf
xchg
les
dec
xor
hlt
aaa
inc
mov
cs
mov
and
dec
js
cld
ret
sar
fstp
(bad)
(bad)
(bad)
dec
test
fs
jo
and
mov
mov
popa
cmps
dec
dec
and
add
sbb
pop
pop
cmp
dec
imul
push
add
fs
xchg
das
push
push
fidiv
aaa
(bad)
(bad)
dec
push
iret
cwde
std
jns
sbb
and
inc
enter
outs
(bad)
pusha
dec
push
hlt
cmp
(bad)
(bad)
(bad)
push
cld
xchg
push
sbb
inc
dec
dec
jo
loope
pop
xchg
jo
mov
xchg
add
outs
cmp
(bad)
(bad)
(bad)
call
imul
push
mov
mov
mov
cmp
inc
stos
sbb
repnz
jl
sub
sub
(bad)
(bad)
push
jns
aaa
outs
cdq
jp
out
sbb
cs
fcomp
push
and
(bad)
(bad)
(bad)
jmp
fcom
pushf
xor
lahf
hlt
(bad)
cmc
rcr
clc
sub
sub
outs
loopne
xor
(bad)
dec
inc
out
movs
(bad)
ds
mov
das
rcr
jp
ret
(bad)
sahf
addr16
(bad)
(bad)
push
push
adc
and
and
cmc
repnz
mov
mov
jge
and
(bad)
(bad)
(bad)
fsub
test
popa
movs
add
repz
test
call
movs
mov
sub
cs
fwait
mov
inc
test
inc
clc
dec
mov
xchg
lods
rol
(bad)
out
sub
push
jl
mov
jecxz
mov
into
push
ja
jecxz
and
mov
call
or
adc
(bad)
(bad)
(bad)
mov
dec
jg
fldenv
sbb
cmp
jb
inc
add
call
push
sub
in
cmp
xlat
ret
adc
add
cmp
jnp
(bad)
(bad)
(bad)
out
push
cwde
outs
add
sbb
ret
pop
pop
mov
enter
in
in
js
aaa
nop
stc
(bad)
(bad)
(bad)
jmp
das
inc
add
sahf
out
shr
xchg
mov
push
repnz
dec
(bad)
call
dec
xchg
test
sahf
outs
add
ins
push
xor
rcr
mov
xchg
sbb
ret
sti
fiadd
and
or
(bad)
sti
fsub
movs
mov
xor
mov
pop
sti
(bad)
(bad)
(bad)
(bad)
cmp
fnstsw
push
or
into
fistp
xchg
pop
fcmovnb
cmp
pop
dec
cli
(bad)
(bad)
push
xchg
jbe
push
xchg
loope
aas
ds
jno
pop
aam
inc
push
pusha
aam
jmp
mov
sahf
ds
jmp
xchg
out
xor
lock
ror
xchg
(bad)
call
inc
addr16
sub
sub
fs
dec
add
push
or
(bad)
fcomip
jmp
jae
fnstsw
cmps
fbld
and
sbb
and
(bad)
jb
jecxz
(bad)
(bad)
jmp
mov
jae
xchg
shl
int
xchg
out
jb
ins
cmp
in
pop
push
mov
jge
ss
iret
ret
and
jbe
inc
xor
jge
fs
in
push
jl
jmp
int3
shr
adc
jg
cmp
and
pop
mov
pop
mov
jg
push
out
jbe
icebp
fadd
out
test
inc
dec
movs
push
inc
(bad)
(bad)
call
popf
rcr
add
imul
retf
pop
out
add
inc
jg
(bad)
(bad)
mov
sbb
stos
(bad)
pushf
inc
sar
mov
pop
(bad)
(bad)
call
mov
sbb
repz
outs
je
mov
mov
jmp
(bad)
(bad)
call
cmp
into
outs
sysenter
(bad)
mov
rol
je
or
and
sub
sub
adc
pop
and
sbb
jmp
jbe
or
(bad)
(bad)
(bad)
out
and
jno
mov
sub
rol
mov
(bad)
mov
sub
push
in
lods
hlt
mov
pop
adc
inc
push
inc
fcomp
(bad)
loopne
or
(bad)
(bad)
fcomip
xor
xchg
(bad)
add
mov
xchg
in
mov
cs
loopne
(bad)
dec
pop
loope
imul
popa
push
add
out
pop
jae
jne
jmp
mov
(bad)
in
jg
mov
xor
pop
xchg
add
or
push
sub
and
fisubr
mov
test
push
push
pushf
jmp
call
(bad)
aas
mov
jns
repnz
mov
shl
mov
sahf
lds
jp
jg
mov
movs
(bad)
(bad)
jmp
dec
and
repnz
inc
push
or
mov
in
bswap
push
add
(bad)
inc
sbb
(bad)
push
shr
gs
adc
int
das
mov
dec
jno
pop
xchg
adc
push
push
adc
(bad)
jg
sbb
es
mov
mov
push
xchg
in
xchg
fst
shl
push
test
fbstp
(bad)
(bad)
dec
jmp
fwait
mov
push
and
dec
int3
dec
call
jb
(bad)
(bad)
(bad)
dec
test
call
adc
lods
inc
out
mov
add
jecxz
(bad)
(bad)
dec
in
and
sbb
call
lahf
lds
add
pop
pop
pop
clc
pmullw
jno
cld
in
cli
xor
push
stos
inc
jecxz
xchg
cmp
mov
dec
add
test
icebp
pop
sbb
aam
fsubr
pop
add
outs
std
dec
stos
dec
mov
aad
jnp
aad
(bad)
imul
mov
(bad)
(bad)
inc
inc
pushf
aam
inc
mov
js
movs
push
ror
rol
retf
jns
cmp
jmp
out
cld
dec
dec
je
outs
loop
jecxz
sar
push
in
sbb
add
stc
(bad)
push
js
jo
or
(bad)
cmp
hlt
not
mov
xchg
add
std
or
push
mov
and
call
icebp
mov
dec
cwde
lods
pusha
xor
cdq
imul
or
mov
outs
fdivr
call
addr16
lods
cmps
(bad)
retf
in
into
xchg
mov
into
xor
jle
mov
pop
(bad)
(bad)
inc
mov
pop
xchg
push
stc
add
and
and
lods
push
scas
(bad)
(bad)
(bad)
dec
fstp
fild
lds
out
cli
and
out
xor
mov
(bad)
(bad)
(bad)
jmp
pop
out
push
dec
dec
bnd
and
xchg
mov
pop
es
(bad)
(bad)
(bad)
call
out
ss
lods
imul
ror
(bad)
mov
dec
mov
push
sub
movhps
(bad)
(bad)
push
push
pop
add
dec
jle
das
mov
mov
or
adc
ja
push
and
in
dec
aad
inc
fs
mov
sbb
cwde
adc
mov
pop
loop
(bad)
inc
sbb
add
xchg
or
shl
sbb
call
imul
and
mov
(bad)
mov
adc
enter
test
jmp
shl
movs
xor
mov
enter
int3
xchg
clc
or
jl
sbb
ror
jmp
in
js
call
pop
mov
rcr
mov
in
je
mov
jg
dec
mov
retf
stc
stc
mov
std
in
adc
push
sar
(bad)
jg
xlat
mov
mov
popf
ror
into
cs
(bad)
shl
pop
push
adc
je
adc
(bad)
(bad)
push
ja
mov
mov
push
cdq
xlat
fist
(bad)
mov
add
(bad)
mov
popa
add
xor
adc
fcom
sahf
js
jne
pop
(bad)
(bad)
(bad)
(bad)
cmp
ins
mov
daa
mov
rcr
push
xchg
repz
xlat
and
nop
(bad)
sub
(bad)
call
sbb
ret
jle
fdivr
call
hlt
jmp
fwait
pop
and
ins
sbb
dec
dec
xchg
retf
cmp
call
movs
out
nop
jae
push
mov
cmc
outs
daa
inc
jo
(bad)
(bad)
call
sbb
cmp
mov
out
imul
inc
jb
jg
(bad)
(bad)
fisttp
ins
mov
(bad)
or
mov
jno
sbb
mov
(bad)
mov
inc
dec
and
xchg
leave
iret
cli
add
mov
bnd
stos
(bad)
je
dec
js
mov
(bad)
(bad)
(bad)
push
ins
adc
jp
les
aam
xchg
movs
jno
cmp
in
imul
(bad)
mov
ret
(bad)
sti
dec
jg
jg
xchg
xor
jno
(bad)
(bad)
inc
push
(bad)
sub
jg
enter
ja
rcl
sbb
into
std
pop
xchg
mov
cmp
retf
pushf
rcl
push
aas
mov
pop
jp
loop
(bad)
dec
add
fild
fwait
jmp
jo
sti
(bad)
scas
data16
pop
inc
vunpcklps
call
mov
dec
pop
jo
push
adc
fwait
cmps
pop
ret
add
int3
mov
call
pop
fist
out
sub
scas
jbe
shl
cmp
dec
test
call
dec
adc
jb
into
(bad)
lock
push
dec
push
inc
dec
addr16
in
test
mov
push
cmp
das
lock
fsub
inc
xchg
push
imul
(bad)
(bad)
fldcw
cdq
loop
test
test
sbb
mov
xchg
cld
and
add
dec
push
(bad)
mov
mov
push
push
arpl
jmp
in
or
add
addr16
sti
sbb
add
test
jbe
inc
sahf
mov
(bad)
(bad)
js
daa
repnz
dec
es
imul
fld
mov
adc
aaa
pusha
lock
popf
mul
aam
push
lods
rcr
mov
outs
pop
aam
jg
mov
imul
pop
ss
(bad)
(bad)
(bad)
(bad)
cmp
inc
xchg
shl
fwait
cmp
aaa
mov
stos
adc
xrelease
addr16
loopne
sbb
lea
call
jne
or
aam
out
inc
mov
mov
outs
add
mov
mov
xchg
(bad)
int3
mul
js
cli
sub
sub
xchg
(bad)
and
mov
inc
(bad)
jmp
ds
(bad)
(bad)
inc
retf
sbb
sub
pop
stos
cli
push
(bad)
imul
fld
mov
(bad)
pop
sub
daa
retf
adc
mov
sub
(bad)
call
dec
(bad)
push
ret
loope
mov
mov
adc
cmovno
dec
aaa
mov
aas
jmp
cli
add
and
shl
(bad)
(bad)
(bad)
jmp
outs
mov
daa
jae
cmp
icebp
loop
mov
inc
(bad)
cwde
jmp
(bad)
pop
ins
dec
inc
pushf
in
or
inc
and
add
sbb
jae
xchg
add
xchg
and
and
dec
sbb
icebp
cmp
adc
jge
les
mov
(bad)
(bad)
(bad)
jmp
leave
leave
xchg
mov
inc
leave
sbb
aad
cli
inc
cmps
jg
ficomp
adc
dec
and
sbb
dec
lahf
or
dec
xlat
repz
push
gs
loop
(bad)
(bad)
fisttp
rcl
mov
aaa
mov
jo
ins
in
mov
sub
(bad)
(bad)
(bad)
jmp
cmp
cmps
inc
pop
aas
sti
(bad)
add
inc
clc
clc
out
stos
pop
in
daa
cmp
imul
mov
(bad)
(bad)
jmp
mov
jo
pop
adc
xor
cmp
adc
xor
jl
dec
add
rdtsc
mov
sbb
xchg
mov
test
nop
(bad)
(bad)
(bad)
(bad)
clc
shl
int3
popf
mov
dec
xor
cmp
cmovae
mov
(bad)
push
jo
(bad)
(bad)
call
out
sub
gs
hlt
sti
xchg
xor
pusha
mov
arpl
mov
lods
ret
cmps
(bad)
(bad)
(bad)
call
xchg
adc
sar
adc
lea
gs
(bad)
cli
mov
(bad)
(bad)
push
js
push
ja
inc
fisub
xor
push
mov
mov
or
add
push
jl
(bad)
(bad)
(bad)
jmp
and
lea
fld
cmps
inc
xchg
xchg
xchg
cmp
(bad)
(bad)
(bad)
jmp
jb
mov
xchg
mov
inc
pop
adc
mov
movs
xor
inc
test
jmp
cmp
jmp
add
ins
aas
xor
cld
inc
push
mov
(bad)
push
cmp
jecxz
retf
loop
out
pop
cmp
je
mov
ret
push
or
(bad)
ins
xor
mov
dec
(bad)
(bad)
(bad)
push
(bad)
push
(bad)
out
call
push
ja
xor
in
ss
les
nop
leave
loope
(bad)
(bad)
jg
cmps
std
xor
push
ds
shl
stc
ds
jmp
dec
(bad)
(bad)
(bad)
jmp
push
arpl
pop
inc
fmul
xchg
mov
xchg
nop
push
sub
jmp
(bad)
(bad)
(bad)
cmp
stos
or
sbb
retf
jl
sub
cmp
adc
jns
(bad)
jmp
arpl
dec
add
in
jge
fcom
imul
xor
not
or
ror
fcomp
aaa
or
(bad)
in
mov
js
fdivp
jle
mov
loop
mov
mov
dec
and
in
(bad)
cdq
hlt
(bad)
(bad)
inc
out
(bad)
cmc
ins
pop
pop
sbb
xchg
ins
mov
cmp
mov
lods
int3
movs
inc
sbb
dec
cmps
inc
push
loope
loop
jmp
(bad)
jmp
aas
xlat
(bad)
jbe
sub
cmc
lea
add
and
pop
arpl
pop
(bad)
(bad)
mov
stos
hlt
pop
mov
jecxz
dec
jmp
sub
xor
xor
test
(bad)
dec
cmp
inc
or
inc
sub
adc
pushf
scas
jge
jl
sti
arpl
hlt
(bad)
jmp
adc
cmc
jns
pop
jmp
xchg
scas
scas
fcomp
lods
inc
(bad)
(bad)
(bad)
(bad)
mov
repnz
sub
pop
push
stos
fisubr
nop
outs
inc
adc
fwait
mov
or
cli
(bad)
dec
test
xor
(bad)
jae
mov
(bad)
cmp
push
int
push
lahf
push
std
inc
dec
add
dec
inc
push
lea
fiadd
xor
(bad)
call
enter
gs
push
dec
mov
popf
push
jp
pusha
jb
addr16
fwait
mov
add
aas
mov
push
or
jne
cmps
mov
sbb
shl
and
push
inc
cmp
mov
retf
call
dec
xchg
lock
(bad)
mov
(bad)
(bad)
jmp
inc
ins
jno
outs
shl
mov
jbe
jmp
cmps
push
in
jb
dec
jle
ficomp
dec
(bad)
(bad)
(bad)
call
xor
inc
mov
mov
push
shl
iret
das
in
fs
bound
inc
repz
scas
clc
(bad)
call
ret
xchg
cmp
cmps
rol
mov
pop
inc
mov
(bad)
(bad)
(bad)
(bad)
jmp
sbb
nop
dec
fwait
mov
add
mov
loopne
stc
sbb
lahf
idiv
cmp
xchg
mov
mov
mov
lods
test
daa
js
call
int3
fld
inc
(bad)
cmp
scas
pushf
movs
inc
pop
xchg
rcl
test
cmp
sub
pop
outs
movs
mov
adc
call
add
je
stc
or
mov
inc
sar
(bad)
(bad)
cmp
js
(bad)
xor
out
imul
pop
shl
addr16
cmp
test
mov
(bad)
dec
jl
je
inc
imul
inc
pop
loope
mov
aaa
or
call
mov
icebp
jne
enter
(bad)
(bad)
(bad)
call
inc
mov
inc
inc
stos
xchg
sbb
movs
sub
cdq
test
jns
inc
xchg
mov
(bad)
dec
xor
and
and
cmp
pusha
push
jnp
loopne
lods
ins
xor
(bad)
(bad)
inc
outs
and
sbb
xor
addr16
test
retf
int
(bad)
cmps
mov
xor
(bad)
inc
out
adc
repz
popf
cmp
cdq
(bad)
(bad)
(bad)
(bad)
inc
dec
stos
fidiv
mov
pop
fist
sbb
sar
enter
(bad)
(bad)
(bad)
(bad)
jle
sbb
out
ins
push
rol
sub
fsubr
imul
pop
into
sub
mov
sbb
loopne
and
dec
out
shl
stc
dec
xlat
sbb
dec
mov
es
(bad)
(bad)
inc
in
in
xor
repnz
mov
mov
mov
pop
mov
(bad)
jmp
jb
push
mov
aam
test
xchg
int
inc
jmp
(bad)
push
in
pop
dec
lods
bound
and
xchg
les
add
sub
(bad)
dec
push
push
mov
clc
sbb
cmp
xchg
xor
mov
inc
movaps
lea
mov
ret
jle
xor
retf
test
(bad)
(bad)
(bad)
dec
jns
add
mov
pop
aad
mov
shr
jno
shl
repnz
(bad)
(bad)
jmp
fistp
les
sub
cwde
sti
sub
xchg
mov
sar
jg
jmp
cmp
(bad)
cmp
dec
popa
popf
scas
into
dec
test
cli
push
int
(bad)
(bad)
push
adc
push
xor
movs
cmc
xor
cs
sub
jg
xchg
mov
cmp
inc
cli
fcomip
(bad)
in
hlt
test
out
gs
mov
and
add
mov
or
(bad)
(bad)
out
(bad)
movs
pop
ss
cwde
or
mov
or
arpl
js
cmp
dec
push
or
fsub
jb
add
jmp
xor
(bad)
(bad)
(bad)
dec
loop
(bad)
popf
cmps
test
mov
call
ins
ret
sti
adc
nop
or
jne
popa
cmp
(bad)
mov
mov
sar
popf
test
xor
je
out
imul
(bad)
out
cli
sub
xchg
inc
clc
div
call
sti
mov
(bad)
pop
fadd
jp
(bad)
(bad)
call
push
sbb
mov
push
pop
dec
jp
or
sub
push
popa
ret
sub
(bad)
(bad)
(bad)
(bad)
js
outs
xchg
pop
out
popa
jmp
neg
jnp
fstp
popa
cmps
fisub
out
mov
(bad)
(bad)
(bad)
inc
in
lods
(bad)
pusha
mov
fnsave
pusha
mov
cdq
ret
jo
and
sbb
jge
(bad)
(bad)
mov
(bad)
(bad)
call
daa
ds
xor
iret
dec
lods
xchg
xor
sub
mov
push
(bad)
jmp
mov
adc
inc
push
pop
jb
or
sti
and
fisttp
call
rcr
sbb
fcmovb
dec
aad
pop
sahf
dec
and
jmp
lods
add
cmp
xchg
and
jno
ss
mov
(bad)
mov
fs
aam
or
test
cmp
fimul
sbb
pop
xchg
push
xor
(bad)
jmp
stc
and
pusha
arpl
aas
int3
(bad)
(bad)
mov
cmp
dec
bound
sbb
xor
dec
mov
xor
(bad)
xor
(bad)
mov
ret
mov
jmp
cdq
(bad)
pop
(bad)
cmp
aas
(bad)
(bad)
(bad)
dec
test
test
sbb
pop
mov
in
xor
jge
js
mov
in
in
push
adc
inc
pop
inc
sub
int3
mov
repnz
fwait
xchg
jmp
aad
ret
cli
popf
fwait
sub
fidiv
adc
and
sbb
stos
(bad)
(bad)
call
push
sub
call
push
popa
out
mov
je
push
icebp
sub
(bad)
(bad)
(bad)
out
sbb
loope
jge
es
(bad)
mov
hlt
scas
fxch
jle
pop
cli
inc
out
outs
add
daa
jg
jmp
add
or
bound
mov
retf
xchg
leave
pushf
inc
and
(bad)
(bad)
jmp
rdtsc
mov
mov
or
jmp
pop
and
and
(bad)
(bad)
call
ja
jno
and
fadd
sbb
cwde
dec
or
add
gs
stos
pop
push
(bad)
(bad)
mov
push
dec
dec
mov
mov
in
cwde
mov
jmp
and
lds
mov
jg
(bad)
cmp
ds
mov
scas
jp
sbb
repnz
and
ret
shr
or
pop
fisttp
sbb
inc
mov
in
(bad)
std
(bad)
(bad)
(bad)
fisttp
mov
leave
push
jnp
stos
stos
mov
mov
scas
cwde
retf
sbb
jnp
mov
cs
jle
push
sbb
or
test
scas
jp
inc
jmp
mov
(bad)
fbld
jns
add
out
popa
out
mov
xchg
mov
(bad)
jmp
add
add
fimul
pop
mov
daa
pop
ret
aas
rcl
add
and
(bad)
(bad)
jmp
adc
pop
and
sahf
shl
mov
mov
out
or
les
xchg
fdivrp
(bad)
(bad)
jmp
shl
sub
dec
push
jns
inc
push
sub
sbb
mov
xchg
not
mov
(bad)
(bad)
call
shr
jne
cmp
adc
leave
jbe
rcr
or
addr16
push
jg
(bad)
cmp
shr
test
test
(bad)
jmp
xor
xor
push
and
in
sub
pushf
xor
mov
sbb
test
add
ins
and
cs
lds
clc
push
adc
les
cmp
(bad)
dec
sbb
mov
inc
ins
pop
jp
push
mov
pand
adc
scas
sar
cmc
sub
(bad)
fdivp
mov
mov
mov
into
aad
jno
shl
pop
adc
or
out
sar
(bad)
dec
div
in
outs
sbb
fldlg2
adc
les
xor
pop
ret
jp
in
(bad)
(bad)
jg
inc
jb
jae
inc
or
cvtps2pd
mov
iret
sbb
stos
xadd
mov
(bad)
(bad)
jmp
sti
sub
adc
jb
or
shl
mov
pushf
lahf
cwde
xchg
das
sbb
jo
jg
inc
cld
push
mov
es
jg
cmp
lds
jg
stc
in
aas
clc
push
jg
cmc
add
inc
nop
mov
or
fbstp
mov
mov
push
add
(bad)
mov
cmp
out
ficomp
(bad)
jmp
mov
call
test
hlt
ret
lds
push
mov
xor
jmp
jnp
jp
cdq
jns
movs
div
rcr
dec
cmps
jns
jg
jmp
js
or
aam
xor
pop
add
fstp
sub
call
pop
sbb
push
lods
(bad)
sbb
icebp
shr
nop
and
(bad)
call
test
out
outs
pop
pop
(bad)
scas
(bad)
(bad)
jmp
ds
push
pusha
xchg
mov
daa
scas
mov
xor
out
mov
(bad)
(bad)
call
cmc
jle
sbb
outs
lahf
test
retf
dec
repnz
xor
and
inc
cli
adc
xchg
setns
xchg
sahf
cmp
xlat
xchg
loop
cld
(bad)
(bad)
(bad)
cld
scas
jno
cmp
hlt
xchg
cmps
xor
cmp
loopne
and
push
dec
xchg
es
into
ss
sub
and
aam
imul
(bad)
mov
mov
push
push
daa
popa
jge
adc
xor
mov
and
jmp
cli
jo
push
rcl
imul
cmp
mov
out
and
fmulp
mov
pop
cmp
dec
mov
int
rcl
cmps
mov
xchg
xor
push
mov
add
sub
jmp
mov
adc
data16
pop
dec
adc
pop
mov
cs
stc
(bad)
(bad)
(bad)
mov
push
push
or
ret
mov
das
add
ret
pop
arpl
aaa
sub
retf
fnstcw
cmps
(bad)
fcomip
push
xchg
sbb
stos
push
movs
push
dec
loopne
test
push
arpl
std
(bad)
jmp
cs
inc
inc
xchg
sbb
iret
sbb
aas
rol
xchg
in
arpl
(bad)
(bad)
call
mov
mov
mov
in
add
sbb
and
shr
sbb
(bad)
dec
mov
shl
sbb
out
fsub
add
call
jl
fdivr
jmp
xor
loopne
pop
(bad)
out
inc
push
add
std
lea
ud0
(bad)
dec
outs
aas
sti
in
and
cs
out
or
jg
lods
frstor
(bad)
sti
call
js
sub
fwait
mov
push
or
push
test
dec
jno
ins
mov
adc
dec
inc
cwde
les
repnz
mov
and
jno
ss
int
pop
ds
(bad)
(bad)
jmp
cmp
mov
and
(bad)
xchg
inc
sbb
and
sub
mov
cli
(bad)
mov
in
or
mov
add
lock
ss
enter
mov
outs
fwait
(bad)
pop
std
shr
inc
frstor
pop
push
fidiv
clc
or
shr
add
cmp
popa
jmp
bound
arpl
(bad)
inc
imul
inc
not
xchg
aaa
pop
cli
(bad)
neg
jecxz
jg
dec
(bad)
popf
out
(bad)
sbb
test
popa
into
and
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
jne
movs
je
mov
cmps
(bad)
cli
bound
fisubr
sbb
mov
jnp
sub
stos
or
mov
call
sbb
cmp
loopne
ret
push
fdiv
repnz
cmp
mov
(bad)
(bad)
call
loop
out
hlt
cs
lock
or
add
int
mov
mov
jo
stos
cmps
push
dec
(bad)
(bad)
(bad)
xchg
retf
bound
push
add
add
lock
test
sbb
ds
dec
xor
pop
mov
stc
pop
(bad)
(bad)
(bad)
dec
daa
stos
sub
cmp
push
leave
xor
sub
fs
bound
push
jns
fdiv
(bad)
out
inc
pop
sbb
sbb
data16
pop
push
and
push
outs
imul
xor
(bad)
(bad)
dec
jbe
lock
imul
and
call
int3
out
imul
xchg
push
push
or
(bad)
jmp
dec
dec
gs
push
cld
shl
pushf
sub
inc
sbb
cmp
sbb
mov
(bad)
dec
inc
ficomp
fucomp
icebp
(bad)
popa
addr16
ret
cmps
popa
pop
ins
out
cmp
(bad)
(bad)
(bad)
jmp
fnsave
or
inc
gs
push
fld
out
cmps
ficomp
clc
enter
in
sbb
(bad)
(bad)
xor
shl
lock
adc
dec
cld
pusha
(bad)
dec
(bad)
bound
push
lds
ja
sar
mov
out
(bad)
(bad)
(bad)
(bad)
mov
stos
loope
inc
add
dec
pop
and
mov
mov
jbe
or
jae
push
fist
(bad)
(bad)
(bad)
jmp
das
jbe
retf
pop
sbb
js
jp
sub
bnd
mov
mov
and
pushf
push
mov
in
jle
pop
xor
xchg
outs
in
imul
lahf
cs
adc
(bad)
adc
push
sar
mov
imul
jae
(bad)
call
mov
(bad)
call
not
push
inc
sbb
dec
ror
(bad)
call
(bad)
call
cld
sub
mov
outs
add
(bad)
js
add
cld
into
sub
(bad)
(bad)
(bad)
call
xchg
jp
popa
xor
pop
cmp
das
mov
cmp
mov
(bad)
(bad)
inc
(bad)
mov
int
mov
push
push
sub
jmp
mov
sub
jae
dec
mov
mov
dec
sub
mov
aas
cmp
dec
jmp
cmp
xor
and
stos
jns
jns
jmp
sub
outs
push
jb
and
sbb
jmp
div
loopne
or
retf
shr
out
mov
pop
(bad)
(bad)
mov
cli
(bad)
gs
push
jl
or
sub
dec
(bad)
fcomip
(bad)
fcom
movs
jbe
push
(bad)
cli
test
je
sbb
dec
ja
cli
jmp
push
dec
adc
dec
je
push
sahf
(bad)
into
(bad)
(bad)
(bad)
(bad)
fimul
cmp
and
mov
imul
hlt
adc
push
shr
cmps
pop
mov
mov
or
les
(bad)
call
fst
ds
xchg
cmp
dec
sub
jno
lea
xchg
or
xor
enter
ds
(bad)
(bad)
(bad)
inc
fsub
mov
xor
out
mov
xchg
arpl
sub
call
sti
dec
dec
xchg
(bad)
outs
rol
or
out
rol
(bad)
(bad)
(bad)
call
cmps
pop
shl
leave
hlt
out
push
dec
int
cdq
sbb
das
ds
cmps
fs
mov
(bad)
jmp
popa
aaa
sub
rol
nop
jns
xor
push
fsubr
or
mov
cwde
push
mov
mov
sbb
(bad)
retf
mov
inc
daa
fsubr
ja
dec
push
int
or
xor
mov
dec
or
jg
mov
jb
cmp
inc
dec
mov
add
pop
adc
movs
jbe
mov
into
xchg
pop
jecxz
and
jle
mov
(bad)
(bad)
dec
sub
lock
imul
loope
dec
sub
(bad)
(bad)
fcmovnbe
push
push
pop
or
js
and
jmp
jmp
or
(bad)
(bad)
(bad)
ja
push
xor
sub
sub
pop
scas
sbb
stos
outs
cmp
and
call
gs
jmp
enter
jo
mov
fisub
jb
fdivr
pop
lock
int
fisubr
aam
repz
cmp
lea
xchg
pushf
mov
xchg
(bad)
(bad)
(bad)
(bad)
out
sbb
dec
shr
popf
add
scas
inc
add
jmp
cmp
aaa
push
and
(bad)
cmp
arpl
lds
loop
xor
mov
fcomp
fistp
iret
add
inc
jbe
mov
(bad)
fld
jno
and
pop
mov
or
pop
int3
push
or
jbe
add
mov
(bad)
jmp
lea
cmp
xor
test
sbb
push
dec
jecxz
aas
jmp
add
pop
int
fadd
rcl
dec
dec
out
(bad)
les
xchg
movs
sahf
scas
out
and
(bad)
(bad)
(bad)
push
mov
and
mov
shr
fwait
test
push
pop
loope
push
(bad)
(bad)
(bad)
jmp
int
sub
cmc
sub
mov
dec
mov
(bad)
or
aas
cmp
xor
icebp
(bad)
push
sbb
xchg
loopne
shl
xchg
sar
ins
scas
sub
(bad)
(bad)
(bad)
call
fs
dec
xchg
jle
loopne
mov
sbb
or
imul
pop
in
mov
jmp
mov
movs
and
and
std
fmul
mov
call
inc
mov
aad
ficom
adc
xor
aas
mov
dec
aaa
mov
xor
sbb
jno
or
sti
mov
push
es
mov
rcl
sbb
(bad)
(bad)
jmp
stos
gs
out
loopne
aas
jmp
pop
mov
or
jb
or
push
std
gs
sbb
mov
ins
add
mov
stc
daa
mov
(bad)
jmp
pop
inc
xor
xor
jl
into
call
call
dec
pop
and
dec
push
in
pusha
add
sti
(bad)
push
xchg
sbb
dec
or
pop
retf
sbb
jg
jmp
mov
data16
ror
add
sar
dec
mov
adc
test
(bad)
push
push
or
sub
xchg
or
std
imul
pop
ja
(bad)
(bad)
dec
sbb
jle
sub
sbb
sbb
inc
cmp
pop
ins
enter
les
(bad)
(bad)
js
mov
or
repz
int3
jp
or
jmp
pcmpgtd
xor
(bad)
(bad)
(bad)
call
jl
pop
repnz
xchg
mov
mov
bound
or
mov
jg
loopne
into
ja
mov
push
mov
mov
dec
(bad)
(bad)
call
push
rcr
xchg
mov
adc
mov
test
scas
in
je
jmp
(bad)
(bad)
jmp
sub
inc
jb
inc
rcr
int
js
lods
rcr
gs
xor
(bad)
(bad)
(bad)
js
(bad)
loopne
or
mov
mov
gs
sar
mov
sub
jmp
mov
cmp
sbb
sahf
add
cs
xlat
jne
ds
cld
jmp
shr
js
fdiv
(bad)
mov
(bad)
(bad)
mov
push
mov
cmp
out
sar
or
lea
xchg
pop
ja
ja
(bad)
(bad)
call
into
gs
stos
(bad)
movs
dec
sub
pop
and
or
test
inc
js
jnp
dec
add
bound
call
fsubp
dec
cmps
xchg
ja
pop
pop
pushf
jae
add
push
movs
out
push
shr
mov
push
jl
mov
sar
jmp
stc
outs
in
movs
popf
push
jle
jne
aam
mov
(bad)
stc
cld
(bad)
(bad)
call
inc
rol
xor
daa
add
push
fst
inc
mov
imul
ja
cwde
xor
sbb
mov
(bad)
mov
ja
mov
imul
inc
icebp
jns
(bad)
in
call
sbb
ja
out
push
ficomp
xor
jle
cmp
xor
loopne
mov
push
idiv
(bad)
(bad)
push
iret
ja
push
jg
cmps
sub
sti
(bad)
mov
out
fst
enter
fmul
(bad)
inc
and
cmp
jbe
(bad)
lods
fcomp
fimul
push
dec
jne
sbb
(bad)
(bad)
(bad)
mov
test
add
pushf
pop
mov
adc
and
(bad)
mov
pop
ror
pop
shl
or
adc
cs
mov
jecxz
(bad)
dec
xor
mov
cmc
mov
lods
ficom
(bad)
(bad)
(bad)
call
sbb
sbb
test
fwait
sbb
adc
ficomp
inc
(bad)
iret
(bad)
(bad)
(bad)
jmp
jbe
cmp
fstp
sub
xchg
dec
push
stos
add
xlat
aaa
test
(bad)
(bad)
(bad)
inc
mov
ja
inc
pop
aam
jecxz
inc
(bad)
rcr
xor
fucom
or
cli
daa
xor
(bad)
(bad)
(bad)
call
scas
push
(bad)
xchg
icebp
test
pop
movs
xor
sub
stos
xor
xchg
dec
sbb
xchg
mov
cmc
das
cli
call
imul
push
xchg
popa
push
int3
adc
sub
xchg
pop
adc
mov
fistp
and
push
push
dec
add
mov
cmp
cs
dec
stos
(bad)
inc
loope
loopne
jno
mov
call
stc
(bad)
(bad)
(bad)
(bad)
fnstenv
nop
mov
lds
shl
pop
mov
je
sub
popf
retf
and
mov
and
xchg
int3
call
loopne
mov
mov
dec
shl
(bad)
mov
lock
call
scas
out
adc
pop
jl
lahf
lods
fild
dec
call
out
js
xchg
daa
and
nop
add
nop
and
sub
(bad)
(bad)
(bad)
jnp
sbb
pop
clc
jae
push
mov
cmp
mov
outs
or
scas
mov
repnz
stc
test
fnstenv
sub
sahf
mov
lock
jnp
ins
push
retf
inc
push
call
pop
sbb
into
mov
(bad)
call
jno
or
les
jne
neg
mov
scas
stos
(bad)
jmp
test
cmc
xchg
hlt
sbb
(bad)
(bad)
call
xchg
inc
lods
cmps
repnz
sub
test
inc
jo
add
xchg
pop
rcr
cdq
pop
(bad)
(bad)
(bad)
jmp
adc
sub
inc
cmc
pop
lock
fsub
arpl
jnp
mov
ins
xor
retf
lods
(bad)
(bad)
(bad)
call
es
sahf
sbb
je
jnp
push
sbb
push
repnz
push
lods
jecxz
ins
bound
mov
mov
(bad)
sbb
dec
jl
test
or
mov
ss
lock
xchg
pop
lock
and
xchg
clc
(bad)
cmps
ficom
add
inc
jne
push
xchg
xchg
fstp
push
ror
dec
or
(bad)
(bad)
dec
out
outs
stos
lea
and
jmp
je
aas
aam
or
cmps
call
add
das
push
and
(bad)
je
sub
hlt
(bad)
(bad)
push
repnz
sub
sar
sbb
xor
xor
rol
jns
repnz
sub
(bad)
(bad)
(bad)
jmp
and
call
pop
movs
mov
or
push
das
pop
out
or
(bad)
(bad)
(bad)
(bad)
cli
rcl
mov
ret
call
enter
mov
and
mov
(bad)
(bad)
(bad)
call
cli
cmp
call
xor
(bad)
in
xor
or
sub
(bad)
(bad)
jmp
dec
retf
mov
(bad)
outs
add
frstor
mov
mov
shl
jno
outs
xor
sub
xor
pop
scas
in
cmps
sbb
(bad)
(bad)
inc
das
or
mov
push
imul
mov
cld
(bad)
(bad)
dec
mov
int
sub
test
add
mov
dec
test
cdq
push
(bad)
(bad)
push
outs
cmc
sbb
ss
shr
into
shr
adc
or
mov
aaa
mov
fstp
xor
lock
int
cmps
sub
(bad)
jmp
mov
pop
in
in
shl
mov
mov
adc
mov
adc
mov
(bad)
(bad)
push
adc
or
aas
ret
pop
jo
addr16
(bad)
mov
and
rol
ret
jg
(bad)
(bad)
(bad)
call
sub
call
(bad)
xor
loop
bound
fsubr
xor
(bad)
(bad)
(bad)
cmp
adc
xchg
test
cwde
stos
ffreep
mov
mov
xlat
cdq
clc
addr16
(bad)
inc
push
sbb
mov
ret
and
test
jnp
mov
(bad)
(bad)
(bad)
(bad)
mov
aad
pop
loope
or
cmc
or
jnp
dec
mov
movs
add
mov
gs
(bad)
(bad)
jmp
imul
push
mov
lahf
imul
popf
je
and
mul
aad
stos
adc
jmp
(bad)
cmp
ret
mov
xlat
ret
call
call
(bad)
loope
jb
mov
add
sub
out
repz
(bad)
(bad)
jmp
sbb
(bad)
(bad)
fisttp
cmp
push
into
mov
sahf
push
lock
ret
xchg
test
call
out
ja
lds
(bad)
(bad)
push
inc
imul
mov
or
add
icebp
jbe
(bad)
(bad)
call
xor
rol
inc
pop
movs
addr16
push
mov
movs
pop
xor
push
pushf
jecxz
inc
(bad)
(bad)
(bad)
jmp
adc
fwait
cmp
fcomp
mov
jl
dec
pushf
push
bound
lahf
add
(bad)
(bad)
jmp
fwait
sub
inc
sbb
int
dec
mov
pushf
inc
nop
dec
mov
(bad)
jg
into
daa
call
mov
cmp
(bad)
scas
(bad)
push
adc
repnz
dec
or
inc
push
popa
sbb
add
cmp
push
jo
mov
and
pop
jg
(bad)
mov
sub
mul
pop
stos
push
aam
xchg
jmp
mov
(bad)
(bad)
imul
mov
bound
ins
movs
dec
or
rcr
xchg
(bad)
(bad)
(bad)
jmp
push
push
pop
sbb
es
mov
pop
pop
adc
movs
push
mov
addr16
(bad)
(bad)
jmp
call
fs
les
lock
loopne
call
enter
(bad)
(bad)
jmp
aas
sub
mov
into
dec
psubsw
inc
inc
sub
sub
je
and
je
mov
or
loopne
sbb
xchg
mov
(bad)
(bad)
(bad)
mov
cli
fcomp
add
push
xor
or
les
cmp
bound
out
ret
(bad)
(bad)
(bad)
jns
xor
xor
ins
and
aad
and
movs
jmp
jmp
mov
pop
(bad)
sub
jmp
cli
push
cdq
cmps
cwde
fucomi
das
(bad)
cmp
cmp
xor
xor
movs
cld
(bad)
(bad)
call
dec
mov
mov
push
mov
pop
jle
add
rol
(bad)
ds
push
lock
push
pop
jbe
(bad)
(bad)
(bad)
call
inc
popf
or
ret
shr
xor
ret
xchg
jg
dec
jge
adc
mov
iret
leave
ja
pop
pop
sar
add
adc
pop
in
sub
inc
test
(bad)
(bad)
(bad)
jmp
xor
cmp
add
jle
adc
out
pop
cmp
xor
sbb
(bad)
(bad)
dec
cmp
mov
cmp
jp
fsub
cmp
and
or
jb
cmp
(bad)
(bad)
dec
mov
popf
dec
adc
jae
mov
push
pop
push
xchg
rol
lods
add
(bad)
(bad)
out
test
out
xchg
xor
adc
(bad)
ds
das
pop
sar
lea
dec
in
push
scas
push
data16
rcl
push
retf
outs
ins
mov
jmp
mov
(bad)
(bad)
(bad)
call
jge
pushf
add
sbb
mov
sub
je
in
push
and
mov
ja
pop
sub
push
xor
(bad)
cmp
mov
mov
ins
jbe
and
shl
jge
repz
stc
pop
adc
(bad)
jns
xchg
cmp
js
pop
hlt
(bad)
fbstp
push
push
loopne
cmc
fld
pop
mov
in
push
xor
loopne
(bad)
jmp
push
(bad)
mov
cmp
mov
cs
jg
inc
cld
std
(bad)
(bad)
call
pusha
sbb
or
mov
jle
(bad)
cmp
mov
jbe
dec
out
add
(bad)
(bad)
push
jne
jns
aaa
xchg
shr
sti
pop
and
retf
lods
scas
cs
cmps
cwde
loope
mov
(bad)
(bad)
jmp
cmp
mov
sub
shr
push
mov
pop
xor
push
shl
dec
push
fild
pop
sub
and
imul
jno
xchg
test
clc
nop
(bad)
(bad)
(bad)
inc
mov
dec
or
lahf
cmps
rol
push
dec
fiadd
adc
xor
loop
inc
mov
jmp
push
adc
ja
push
cmp
not
std
sub
sub
xor
jmp
mov
sbb
sub
mov
mov
push
aas
outs
push
adc
jno
(bad)
(bad)
(bad)
in
pop
xchg
test
add
pop
xchg
sbb
cmp
cld
push
inc
call
fiadd
loop
repnz
mov
add
jg
(bad)
call
(bad)
cwde
sbb
jecxz
lahf
dec
jg
xor
in
push
push
(bad)
(bad)
(bad)
jmp
std
(bad)
cmc
scas
out
push
sub
and
add
cwde
mov
jmp
jmp
or
sub
mul
ins
in
dec
pop
or
pushf
imul
cli
(bad)
jmp
shl
dec
add
outs
shl
or
out
mov
(bad)
ds
shl
cli
mov
mov
and
loopne
test
int
(bad)
(bad)
(bad)
call
jns
cmp
call
dec
mov
cmp
hlt
cs
(bad)
mov
jne
(bad)
(bad)
(bad)
(bad)
clc
loop
movs
(bad)
fnstenv
es
cmp
into
jmp
or
xchg
mov
xchg
test
push
xor
push
inc
inc
cmc
test
cdq
add
mov
mov
scas
clc
dec
(bad)
imul
sbb
cs
mov
sar
call
mov
xchg
add
mov
aad
mov
mov
inc
mov
add
iret
or
(bad)
(bad)
jg
fcmovb
adc
movs
sub
fsubr
test
and
(bad)
fstp
jl
(bad)
(bad)
jg
addr16
mov
int
rcr
or
bound
int3
jp
out
(bad)
(bad)
(bad)
push
inc
pop
loop
fnstcw
loope
call
sub
mov
iret
arpl
mov
jmp
fiadd
outs
(bad)
jmp
leave
push
stos
loop
dec
ret
(bad)
(bad)
dec
cmp
imul
xor
add
fwait
sub
inc
sbb
fsubr
js
or
jb
jl
push
add
std
pop
cmp
(bad)
jl
call
lds
mov
(bad)
cwde
push
dec
xchg
cld
idiv
(bad)
(bad)
jmp
scas
fwait
loope
xor
push
jle
and
xchg
or
out
mov
(bad)
(bad)
jmp
xor
in
mov
push
dec
mov
inc
inc
and
inc
pop
cmp
scas
xor
enter
mov
sbb
stos
fwait
jmp
push
fwait
push
(bad)
(bad)
(bad)
inc
cdq
or
mov
sbb
jmp
lods
jmp
cmps
ss
(bad)
jmp
or
pop
les
push
jg
xchg
fsub
int3
mov
fcomip
jmp
and
sbb
clc
sar
pop
mov
mov
(bad)
mov
ret
leave
cwde
arpl
push
popa
sbb
ins
imul
adc
xlat
adc
and
pop
leave
(bad)
jg
call
or
outs
xlat
das
lock
sar
xchg
inc
(bad)
(bad)
(bad)
cmp
push
scas
push
adc
shl
leave
push
inc
cwde
mov
das
add
xor
and
cmc
xchg
(bad)
(bad)
(bad)
call
and
add
add
push
sub
jns
sbb
movs
push
aaa
adc
ss
pop
std
dec
xor
sub
xchg
sti
test
call
mov
fucomip
(bad)
in
ds
lea
pop
fsqrt
mov
(bad)
(bad)
push
hlt
stc
imul
clc
mov
aas
push
dec
imul
(bad)
jmp
in
retf
cmp
mov
data16
(bad)
push
loopne
mov
pushf
dec
shl
(bad)
(bad)
inc
fs
cmp
adc
dec
pop
adc
jmp
sti
dec
in
aaa
and
sbb
push
jg
(bad)
(bad)
jnp
(bad)
aam
lahf
ret
mov
push
add
jo
aad
sahf
mov
enter
xchg
cmps
cs
jmp
dec
(bad)
dec
xor
pop
test
cmp
int3
pop
imul
mov
in
popa
(bad)
(bad)
(bad)
dec
inc
add
stos
rcr
adc
rol
sbb
push
dec
in
lock
mov
ror
jg
gs
jbe
sahf
inc
add
push
pop
ja
(bad)
(bad)
(bad)
dec
pop
arpl
mov
and
jnp
pop
cmp
std
call
cld
dec
jecxz
cli
and
xchg
sbb
pop
xlat
jnp
cwde
and
gs
ret
(bad)
(bad)
(bad)
inc
iret
mov
lahf
mov
lds
sti
mov
and
out
pop
adc
dec
popa
push
shl
fld
clc
(bad)
(bad)
call
ret
xchg
cmps
mov
jp
sub
addr16
or
cmp
imul
jl
mov
pop
cmp
aad
mov
(bad)
shl
xor
into
out
pusha
xor
iret
xchg
ja
sar
jno
and
out
mov
aaa
out
mov
call
inc
mov
jle
mov
clc
into
adc
and
out
inc
lods
mul
(bad)
cmc
popa
xchg
(bad)
(bad)
(bad)
(bad)
jle
in
ds
mov
dec
cdq
mov
js
dec
(bad)
adc
test
inc
mov
xchg
mov
push
adc
sbb
rcl
mov
loop
push
and
adc
(bad)
(bad)
(bad)
push
addr16
loop
clc
pop
mov
in
add
cmps
leave
push
push
les
mov
push
fwait
mov
(bad)
(bad)
dec
pop
adc
mov
push
xor
sbb
fdivr
mov
shl
rol
inc
mov
and
inc
or
pop
dec
mov
push
mov
imul
add
mov
jmp
inc
jp
xchg
jle
pop
mov
ds
xchg
in
cmp
push
mov
dec
scas
xchg
mov
mov
aas
loop
bnd
and
adc
jg
jg
dec
or
xor
sbb
sbb
(bad)
(bad)
(bad)
call
and
fiadd
jmp
dec
aaa
gs
out
pop
push
cli
add
inc
adc
adc
push
loopne
mov
dec
fld
(bad)
(bad)
jmp
cmc
xchg
loopne
pop
repz
daa
test
mov
push
sbb
into
and
scas
(bad)
mov
mov
sub
gs
pop
outs
sub
cmp
test
push
(bad)
(bad)
(bad)
call
mov
mov
inc
sub
xor
cmp
fcom
rcr
ds
push
mov
(bad)
(bad)
dec
xchg
pop
inc
je
fst
xchg
idiv
jne
inc
test
add
xchg
cdq
(bad)
(bad)
(bad)
jmp
int
mov
jbe
dec
out
call
fs
nop
sub
sub
dec
adc
(bad)
fdivr
mov
cmp
push
sbb
call
push
xchg
aas
push
pop
daa
ins
out
inc
mov
sbb
mov
jmp
sub
push
dec
(bad)
fldenv
(bad)
cmc
in
xlat
and
inc
pop
das
and
lock
(bad)
jbe
imul
ds
sub
sti
lahf
xchg
icebp
mov
(bad)
mov
cli
aaa
sub
jmp
ret
dec
push
fsubr
rol
mov
leave
jl
(bad)
(bad)
(bad)
in
sub
mov
cmp
lods
call
mov
(bad)
scas
push
jnp
(bad)
(bad)
jmp
push
jg
mov
pop
jae
mov
mov
xlat
jp
lds
add
pop
pop
mov
adc
nop
in
daa
imul
(bad)
call
(bad)
dec
lock
pop
push
jp
imul
rcl
xchg
mov
inc
xchg
sub
hlt
(bad)
(bad)
(bad)
out
out
retf
cmp
in
pusha
xchg
and
fwait
pslld
add
(bad)
call
(bad)
push
imul
inc
int
dec
enter
mov
cmp
cs
(bad)
(bad)
(bad)
mov
inc
ins
dec
sub
test
es
push
mov
jecxz
imul
mov
mov
(bad)
out
nop
test
ins
sub
adc
xchg
(bad)
(bad)
(bad)
fmul
jge
cmp
pop
inc
push
inc
dec
rol
sbb
(bad)
xchg
jno
(bad)
(bad)
(bad)
(bad)
out
ret
jns
test
mul
test
or
jo
outs
stos
add
inc
sar
jmp
sbb
sti
pusha
enter
sub
xchg
clc
push
(bad)
(bad)
(bad)
jg
push
mov
inc
scas
pop
mov
adc
xadd
mov
repz
mov
inc
vpmacssww
ror
imul
mov
in
(bad)
(bad)
dec
pop
jmp
mov
adc
xor
mov
mov
xor
adc
cld
sahf
adc
ds
cmp
cmp
shl
icebp
addr16
rcl
retf
mov
jmp
jbe
cwde
je
stos
xor
adc
ja
ins
jns
(bad)
push
nop
(bad)
out
inc
int3
sti
hlt
das
pop
hlt
jp
sub
xchg
ficom
out
or
fcomip
fistp
test
ret
mov
xchg
and
(bad)
(bad)
call
les
rol
mov
cmp
sub
mov
mov
(bad)
cmp
xchg
imul
mov
rcl
test
fcmovbe
js
and
(bad)
(bad)
(bad)
jmp
imul
and
fmul
cwde
mov
out
inc
in
mov
mov
mov
push
lock
and
into
xor
ds
push
fild
stos
dec
push
fistp
add
inc
sub
push
test
aad
jmp
jp
mov
sbb
xor
xor
repnz
push
xlat
cmp
(bad)
(bad)
(bad)
call
outs
loop
mov
xchg
mov
lea
sub
cli
outs
lea
inc
pop
into
bound
jns
push
push
retf
dec
sub
jns
sbb
test
mov
or
or
iret
sbb
(bad)
(bad)
(bad)
jmp
test
mov
adc
stos
add
mov
cli
xchg
cli
sbb
leave
jp
(bad)
(bad)
jmp
imul
push
mov
xor
xor
cmp
cli
pushf
cld
aad
call
das
das
pop
jl
ss
outs
iret
xor
jne
mov
mov
mov
inc
push
lods
(bad)
mov
lahf
inc
mov
sub
cmp
std
(bad)
lock
sbb
add
jp
mov
(bad)
jmp
aaa
iret
push
outs
mov
in
dec
xchg
test
add
popa
cmp
jae
je
push
fcomp
pop
dec
jge
dec
mov
inc
adc
ret
div
(bad)
fistp
adc
jno
dec
(bad)
jmp
lds
(bad)
(bad)
(bad)
jmp
xlat
mov
pushf
pop
xlat
or
les
scas
ins
pop
nop
stc
mov
hlt
mov
and
cld
(bad)
jg
pop
pop
es
in
mov
pusha
jne
sub
outs
sbb
dec
(bad)
(bad)
inc
push
sub
jmp
pop
retf
fmul
mov
push
sub
mov
(bad)
call
out
lods
and
fdivr
shr
push
and
je
mov
out
mov
inc
jns
fs
(bad)
jg
out
jle
les
xchg
test
(bad)
iret
jecxz
leave
mov
mov
(bad)
(bad)
call
ins
sbb
popf
push
fcomp
mov
imul
adc
test
xor
(bad)
(bad)
dec
rcr
pop
xlat
pop
xchg
fsub
jl
inc
mov
pop
dec
cmp
int3
xchg
(bad)
(bad)
(bad)
mov
mov
mov
fwait
or
sub
int
(bad)
aas
mov
(bad)
(bad)
(bad)
call
xor
daa
in
mov
and
aad
mov
push
jmp
popa
hlt
fwait
(bad)
das
clc
retf
dec
(bad)
inc
cli
ror
xor
mov
(bad)
(bad)
(bad)
inc
jns
jnp
cmp
or
lock
inc
cmps
loopne
sub
adc
(bad)
(bad)
fcomip
dec
(bad)
sub
cli
sub
jp
push
mov
sbb
xlat
xor
stos
dec
or
mov
repnz
in
loop
xchg
popa
add
add
dec
aas
and
sbb
rcr
daa
inc
cld
dec
aad
mov
cmc
aaa
mov
loop
(bad)
jg
movs
mov
js
dec
js
sub
sbb
or
shl
shl
clc
dec
dec
sub
loop
push
das
std
sbb
outs
inc
idiv
aaa
pop
retf
push
mov
push
mov
sub
and
jb
or
js
stos
mov
(bad)
(bad)
(bad)
call
inc
dec
adc
xor
shr
pop
ds
fwait
test
call
jl
sub
mov
int3
push
mov
jg
lock
pop
dec
cwde
test
sti
(bad)
(bad)
(bad)
(bad)
fnstsw
sub
or
inc
out
movs
xchg
jp
push
cmc
xchg
sub
add
dec
je
repz
lods
(bad)
cmp
(bad)
std
xchg
sahf
adc
jmp
das
shl
inc
add
inc
cmc
test
fbstp
imul
mov
add
sbb
test
xor
and
(bad)
call
xlat
sub
mov
sahf
adc
mov
loop
mov
mov
sub
clc
and
(bad)
(bad)
jmp
pop
mov
add
push
mov
into
adc
mov
lea
(bad)
call
dec
push
psubd
fild
(bad)
jg
xchg
test
jne
push
ret
mov
bound
mov
(bad)
(bad)
(bad)
ds
mov
add
popf
xchg
in
xor
(bad)
stc
lahf
gs
(bad)
push
cli
(bad)
call
in
fcom
daa
mov
lahf
xchg
mov
aas
int
push
aam
jne
(bad)
(bad)
inc
or
in
or
or
mov
call
(bad)
jnp
imul
push
(bad)
(bad)
(bad)
push
xchg
fisub
push
or
sar
pop
jl
stos
mov
and
pop
push
cmp
ret
stos
mov
(bad)
fnsave
icebp
mov
and
clc
data16
(bad)
(bad)
(bad)
call
mov
xchg
sbb
es
out
pop
nop
test
xchg
cli
gs
int3
das
call
call
lock
and
mov
in
mov
xlat
xor
cmp
shl
and
push
sbb
(bad)
(bad)
inc
jl
retf
scas
icebp
jl
adc
out
pop
(bad)
les
rcl
dec
mov
(bad)
(bad)
sub
push
sub
and
inc
pop
mov
(bad)
(bad)
(bad)
inc
in
xchg
sbb
pop
in
jae
xor
mov
or
inc
jae
std
mov
pop
jmp
jmp
mov
lea
leave
push
retf
mov
outs
mov
mov
sub
(bad)
(bad)
fnstcw
daa
sahf
test
cmps
cmc
pushf
add
add
push
fwait
dec
sub
mov
scas
adc
cmp
xor
cdq
ins
int
ds
mov
(bad)
(bad)
(bad)
(bad)
jl
cmps
das
es
in
(bad)
retf
js
fnstcw
(bad)
ins
in
sub
push
and
(bad)
call
jnp
pop
popa
lds
in
pop
mov
mov
inc
sbb
(bad)
(bad)
(bad)
inc
loope
sbb
sub
or
js
cli
dec
add
mov
mov
jmp
dec
add
mov
fmul
mov
pop
cmc
sub
pushf
cmp
loop
jo
push
repz
sahf
xor
clc
dec
jnp
lock
push
scas
inc
in
rol
ins
jmp
call
xor
cmp
xchg
mov
dec
xor
dec
mov
(bad)
(bad)
call
sub
loop
loopne
mov
addr16
mov
scas
jmp
ins
mov
and
mov
leave
pop
(bad)
pop
in
iret
shr
cmp
push
jo
test
(bad)
jmp
pop
cli
inc
scas
pushf
(bad)
xchg
aas
(bad)
or
xchg
fsubr
arpl
add
and
cld
icebp
(bad)
call
aam
data16
mov
jle
ins
jp
cdq
push
pop
push
adc
cmc
ror
(bad)
iret
jmp
xor
or
mov
and
fstp
gs
dec
push
jbe
dec
add
lahf
(bad)
je
mov
rcr
inc
fstp
loop
pop
movs
mov
popa
xor
std
(bad)
(bad)
call
test
inc
xor
fs
ja
jmp
fistp
ds
adc
(bad)
(bad)
inc
dec
aaa
ror
ror
cmc
icebp
or
mov
and
mov
cmc
(bad)
mov
je
xor
jl
int
cwde
and
xchg
(bad)
fnsave
scas
jne
ja
xchg
and
pop
in
jmp
mov
ins
add
cli
and
jne
adc
das
pusha
cli
call
loopne
sbb
push
ins
dec
(bad)
adc
fwait
xor
jg
pop
(bad)
or
(bad)
jmp
aaa
sub
mov
imul
test
dec
xor
push
pop
les
mov
mov
sbb
jg
repz
sub
xor
push
scas
js
inc
mov
sar
lods
(bad)
icebp
jmp
aam
shl
add
pop
out
ins
ins
ja
(bad)
(bad)
cmp
mov
inc
xchg
les
xor
add
imul
shr
cdq
inc
sbb
pop
int
(bad)
(bad)
(bad)
push
ret
out
scas
movs
out
lds
and
movs
mov
or
int
pusha
xchg
mov
sub
(bad)
(bad)
(bad)
(bad)
jnp
cdq
addr16
pop
popa
sbb
cli
sub
or
sub
(bad)
mov
pop
dec
(bad)
(bad)
(bad)
jmp
std
mov
sar
adc
sub
shl
call
xchg
rcr
dec
(bad)
(bad)
mov
inc
and
loopne
sahf
sub
jp
pop
and
add
(bad)
jg
adc
loop
nop
pop
cld
shl
bound
fwait
cwde
xor
into
mov
(bad)
jg
aam
and
cmps
icebp
lds
or
cdq
mov
popf
in
mov
ret
pop
mov
(bad)
(bad)
out
push
mov
and
and
xlat
arpl
pop
inc
push
sbb
mov
call
jge
jnp
jno
outs
add
push
lods
not
cmp
push
mov
test
sub
sub
(bad)
jmp
call
icebp
mov
cmp
(bad)
adc
cmp
add
call
(bad)
neg
xor
xor
data16
daa
call
(bad)
(bad)
cmp
pop
mov
sahf
or
jmp
xor
pop
push
cld
(bad)
jg
cmp
cmc
cs
and
(bad)
leave
xor
stos
cmps
or
jecxz
cmp
(bad)
(bad)
dec
xchg
inc
jl
pusha
inc
dec
push
pop
lea
push
bound
inc
mov
jmp
lock
sahf
dec
and
retf
test
inc
inc
inc
fstp
(bad)
and
sbb
call
pop
mov
push
mov
mov
pop
adc
rol
jbe
cwde
mov
cmc
ret
(bad)
ins
cmp
cmps
in
inc
mov
sub
ja
gs
adc
dec
inc
(bad)
call
add
jecxz
push
xor
mov
repz
call
dec
(bad)
mov
sbb
das
in
xor
jecxz
sub
cmp
mov
es
enter
(bad)
call
xor
in
ss
or
jo
sahf
sub
(bad)
(bad)
(bad)
push
mov
jl
mov
test
mov
loop
xor
jns
pop
cmovns
and
(bad)
push
sub
push
cli
and
in
test
(bad)
fst
call
int3
inc
imul
add
repz
out
sbb
ror
ret
add
movs
pop
(bad)
(bad)
push
xlat
cmp
pop
dec
dec
jmp
rcr
add
mov
dec
sub
(bad)
(bad)
call
and
in
or
pop
or
cmp
xor
xlat
sbb
xchg
and
je
test
ins
test
push
push
(bad)
(bad)
(bad)
call
out
mov
xchg
ret
add
test
mov
je
pop
(bad)
stc
lahf
push
cs
into
in
dec
in
jne
call
xor
xchg
and
mov
push
out
xor
mov
ds
push
lods
fist
or
mov
sahf
cwde
repz
std
xor
pop
call
arpl
imul
jno
pop
in
dec
shr
in
xchg
out
loop
(bad)
sar
(bad)
(bad)
call
es
imul
mov
ret
aas
push
ret
inc
stc
sbb
inc
adc
ds
(bad)
call
jo
cli
repz
cmp
or
test
mov
jle
(bad)
(bad)
(bad)
push
sub
mov
dec
add
inc
jbe
lock
fld
daa
pop
mov
(bad)
shr
(bad)
loopne
daa
and
push
sar
adc
(bad)
(bad)
jg
ss
stos
ret
test
dec
cli
fxch
xchg
cmc
vmovapd
aas
mov
sub
cmp
hlt
ret
and
bound
inc
mov
xchg
int
in
inc
sub
out
(bad)
(bad)
call
sub
repnz
and
jbe
scas
or
and
fwait
data16
cmp
and
jle
mov
stos
pop
push
jns
cdq
retf
in
cmp
cmp
(bad)
(bad)
dec
stc
inc
or
pop
loope
lds
add
mov
xor
(bad)
inc
(bad)
(bad)
(bad)
call
mov
retf
cmp
lahf
test
mov
sub
scas
and
(bad)
(bad)
(bad)
jg
push
jne
ret
push
adc
test
iret
and
aam
imul
fisubr
arpl
(bad)
(bad)
(bad)
call
mov
outs
xchg
push
nop
js
cmp
stos
push
mov
xchg
mov
or
(bad)
(bad)
(bad)
jmp
xchg
lock
jns
mov
and
push
or
dec
xchg
pushf
out
push
xchg
mov
mov
outs
stos
cmp
inc
div
xor
cmps
sbb
jne
(bad)
(bad)
out
test
out
sub
mov
(bad)
clc
mov
(bad)
(bad)
call
pusha
test
xchg
movs
add
sti
push
dec
idiv
push
test
push
scas
lods
or
pusha
fs
les
or
mov
(bad)
(bad)
(bad)
mov
inc
fdivr
add
arpl
dec
pop
je
adc
xor
inc
(bad)
(bad)
(bad)
(bad)
imul
ud2
jne
jo
jnp
sub
xchg
dec
sbb
mov
movs
add
aaa
std
inc
(bad)
or
fisub
jg
mov
dec
or
lods
and
retf
js
dec
jmp
in
pop
cdq
scas
xor
lea
data16
inc
pop
add
(bad)
(bad)
(bad)
(bad)
jmp
bound
in
sub
clc
call
push
xchg
std
jo
arpl
add
call
das
pop
mov
and
jmp
mov
mov
movs
loopne
jns
stos
cmp
out
lea
mov
jnp
pop
das
mov
push
fnstsw
jg
or
pop
fimul
popf
fdivr
aas
push
js
dec
pop
add
(bad)
jge
xchg
mov
sub
data16
dec
sub
(bad)
(bad)
jmp
push
push
loope
not
jo
inc
movs
rcl
pop
ret
adc
movs
push
xchg
mov
retf
sub
or
cmps
icebp
push
adc
push
stos
adc
inc
xor
inc
push
or
mov
aas
(bad)
(bad)
call
scas
jb
xchg
aam
int3
jg
popf
push
mov
pop
jno
sub
push
adc
push
(bad)
sub
mov
test
jbe
mov
sar
dec
push
adc
call
std
outs
shl
(bad)
in
fsubr
sub
mov
rcl
int
or
(bad)
(bad)
jmp
repz
add
std
add
test
and
das
std
jnp
cmp
add
(bad)
(bad)
call
sbb
pop
(bad)
ja
jge
pop
pop
jo
loop
out
iret
add
lock
mov
jmp
scas
cmp
fldcw
mov
jle
lods
(bad)
shl
or
mov
jmp
inc
sub
xor
sbb
jbe
icebp
mov
sti
imul
(bad)
(bad)
push
inc
(bad)
test
out
fld
jecxz
pop
iret
in
add
stos
(bad)
fild
fnstcw
popf
cli
sub
pop
and
(bad)
(bad)
(bad)
mov
adc
jl
movs
and
adc
push
icebp
retf
mov
cs
ins
gs
out
pop
cmc
(bad)
jmp
mov
stc
mov
pop
test
jmp
(bad)
jmp
inc
call
inc
dec
fldcw
in
adc
out
push
xchg
sbb
xor
or
add
add
xchg
das
cmp
cmp
adc
jae
adc
jg
push
repz
lods
adc
cwde
and
xchg
leave
jne
(bad)
(bad)
cmp
sbb
(bad)
out
mov
sbb
adc
ret
mov
adc
loope
in
into
mov
into
and
pop
dec
das
push
pop
pop
nop
add
add
clc
adc
(bad)
int
je
or
stos
push
mov
mov
or
cmp
outs
or
inc
ds
(bad)
(bad)
dec
sub
sub
push
in
sub
jle
aas
nop
(bad)
lock
nop
push
iret
xchg
cmp
(bad)
(bad)
push
(bad)
pop
mov
mov
(bad)
fld
lock
or
mov
(bad)
(bad)
jmp
add
cmp
clc
push
inc
shr
xor
in
jmp
sahf
test
mov
(bad)
fcomp
push
(bad)
fcmovne
mov
xchg
push
mov
mov
sub
call
mov
(bad)
jo
add
jae
sbb
out
popa
das
dec
ins
fwait
retf
(bad)
addr16
(bad)
(bad)
cmp
dec
pop
or
mov
push
inc
mov
dec
retf
aad
(bad)
(bad)
(bad)
(bad)
(bad)
clc
push
enter
repnz
sub
sahf
pop
mov
retf
push
out
(bad)
cmp
cmc
inc
ret
fnstcw
xor
(bad)
(bad)
jmp
pop
jne
gs
stos
sub
mov
movs
jns
push
enter
xchg
sbb
mov
dec
std
out
add
and
(bad)
push
out
cli
(bad)
loopne
xchg
aaa
das
popa
and
call
sub
lods
imul
pop
jp
rcr
leave
jmp
inc
cmps
ds
shl
jbe
cmp
mov
add
(bad)
(bad)
(bad)
mov
and
or
(bad)
or
in
out
inc
aam
xchg
popa
(bad)
jmp
les
mov
xor
push
ret
(bad)
(bad)
js
sub
push
out
rcl
adc
adc
inc
out
imul
push
out
popf
(bad)
(bad)
(bad)
call
sbb
jb
inc
add
xor
pop
jbe
fucompp
add
(bad)
(bad)
(bad)
jge
in
fs
in
inc
add
es
aad
mov
mov
mov
(bad)
call
mov
push
mov
ror
jle
(bad)
(bad)
inc
mul
sbb
ds
movs
jnp
push
xchg
xor
xchg
cmp
icebp
mov
jg
and
(bad)
scas
xchg
jecxz
adc
xchg
jmp
jmp
(bad)
call
or
jne
sub
and
mov
push
jo
sahf
ret
cmp
(bad)
(bad)
xor
test
cmc
(bad)
call
mov
cmp
aas
inc
pop
jp
int3
mov
push
int
add
(bad)
(bad)
(bad)
fild
cs
cdq
ffreep
js
jge
popa
test
mov
xchg
pop
or
sub
sub
pop
pop
aad
dec
jb
jb
ror
and
out
mov
xor
jg
dec
and
cmps
jb
add
mov
pop
cmp
xor
lods
(bad)
(bad)
(bad)
call
inc
push
arpl
xor
sub
mov
mov
pop
out
inc
(bad)
jg
hlt
shl
xchg
sbb
or
and
(bad)
inc
cdq
jb
cmp
jmp
pop
pop
stos
inc
setae
push
adc
push
pusha
ja
jb
inc
(bad)
jmp
dec
cmps
jbe
add
add
out
test
mov
sbb
add
inc
retf
push
leave
stos
loop
jge
int3
cmp
(bad)
(bad)
call
jecxz
mov
loopne
xchg
xchg
out
adc
xchg
push
xor
xchg
push
gs
(bad)
(bad)
(bad)
aas
dec
bound
repnz
(bad)
push
(bad)
inc
leave
test
add
and
xor
pop
(bad)
(bad)
(bad)
push
in
mov
cmp
test
call
mov
push
mov
mov
mov
add
push
xchg
fisubr
inc
ret
xchg
xor
(bad)
(bad)
(bad)
fmulp
lds
call
and
ret
test
sbb
aad
out
(bad)
(bad)
(bad)
dec
add
fwait
aad
test
sbb
xor
push
daa
or
sbb
pop
std
cld
addr16
loopne
jmp
xor
lock
adc
fdivrp
push
addr16
fwait
(bad)
je
add
push
jmp
mov
movs
mov
aas
cmp
push
clc
sahf
sub
inc
or
(bad)
retf
and
les
loop
xchg
xchg
into
(bad)
(bad)
(bad)
jmp
and
pusha
cmp
mov
mov
out
mov
test
(bad)
(bad)
(bad)
inc
shl
and
ins
inc
arpl
popa
xchg
je
mov
sbb
in
mov
repz
(bad)
push
es
aaa
push
call
ffree
clc
adc
shr
ret
idiv
mov
inc
cs
inc
cmp
or
pop
mov
sbb
sub
cwde
sub
push
ins
sub
mov
mov
pop
inc
cmp
jmp
push
add
adc
scas
inc
push
inc
pop
cli
stos
icebp
or
sub
(bad)
(bad)
(bad)
fild
pop
add
cld
and
and
cmc
aam
ror
aaa
leave
push
lea
pop
jmp
mov
(bad)
inc
out
xchg
dec
pop
push
sti
mov
stos
add
dec
inc
lea
xor
and
mov
dec
push
or
dec
or
imul
mov
pop
in
cdq
xchg
cdq
dec
jp
loop
sti
jl
(bad)
(bad)
(bad)
(bad)
fdiv
out
or
(bad)
ss
cmp
push
cmp
ins
mov
mov
(bad)
(bad)
jg
cli
fstp
pop
sbb
inc
dec
into
les
dec
cmp
lea
call
adc
jb
add
mov
movnti
sub
(bad)
(bad)
push
adc
cmp
inc
neg
mov
mov
in
pop
add
int
mov
jl
jb
pop
movsx
cmp
add
jb
inc
jae
xor
push
cld
(bad)
mov
push
xchg
ins
imul
sub
scas
addr16
test
xor
mov
gs
or
stc
cmp
stc
push
mov
hlt
dec
pusha
(bad)
out
in
mov
stos
fcomip
outs
push
mov
add
lea
jp
cmp
xchg
(bad)
jmp
stos
(bad)
(bad)
(bad)
call
lods
mov
mov
add
div
retf
cwde
fwait
mov
add
cwde
cld
(bad)
(bad)
dec
arpl
shl
call
jl
das
xchg
mov
imul
xchg
inc
int3
aas
push
aam
(bad)
(bad)
(bad)
mov
(bad)
jnp
sub
js
shr
jg
jmp
popf
cmp
or
scas
push
out
adc
sbb
test
push
dec
stos
and
stos
(bad)
jmp
mov
pop
aaa
pop
cld
dec
mov
push
aad
sub
daa
jp
jmp
out
mov
hlt
inc
fadd
xor
jp
outs
repnz
(bad)
(bad)
jmp
in
mov
fisttp
sbb
inc
mov
outs
mov
pop
(bad)
jns
sbb
jmp
rol
aad
fldenv
jmp
pop
(bad)
(bad)
inc
xchg
adc
neg
(bad)
dec
xchg
push
push
in
push
pusha
cli
pop
nop
mov
cwde
dec
call
push
(bad)
in
pop
(bad)
sub
and
dec
out
xchg
cmp
xchg
cmp
retf
(bad)
call
mov
and
xlat
out
dec
and
push
es
sub
mov
push
and
add
mov
xchg
add
mov
sti
(bad)
push
lods
jmp
adc
dec
adc
pop
jp
sub
xchg
mul
mov
(bad)
(bad)
jmp
in
int
fisub
pop
push
sub
pop
repnz
sti
sub
arpl
mov
jmp
addr16
xchg
dec
sub
xchg
addr16
(bad)
jb
or
test
xchg
sbb
(bad)
(bad)
(bad)
call
adc
mov
and
lods
nop
mov
nop
ins
xor
(bad)
(bad)
dec
add
mov
jb
stc
sbb
jmp
scas
fiadd
and
sub
out
mov
jno
repnz
cmp
addr16
test
xchg
push
ret
mov
jmp
cmp
sub
xchg
test
adc
fisub
out
jp
xchg
dec
xchg
fadd
xlat
test
(bad)
(bad)
inc
xchg
mov
inc
xchg
adc
mov
sbb
xchg
rcr
sub
(bad)
(bad)
call
cmp
jb
std
scas
add
stc
cwde
jmp
sub
add
mov
dec
cmps
(bad)
js
enter
(bad)
(bad)
(bad)
call
rol
xchg
cwde
aad
int
es
(bad)
and
test
(bad)
jae
shr
and
(bad)
inc
es
test
push
js
pop
pop
mov
pop
aas
(bad)
(bad)
(bad)
call
in
inc
dec
xor
ret
mov
mov
pushf
sar
cmp
lds
sahf
lock
xlat
repnz
mov
(bad)
(bad)
(bad)
jmp
pop
int
adc
ja
xchg
rol
aam
icebp
sbb
mov
mov
aam
or
stos
outs
stc
mov
sar
data16
jne
iret
data16
(bad)
(bad)
jmp
mov
or
xor
adc
jmp
fnsave
xchg
xchg
cli
pop
cld
fwait
sbb
test
daa
dec
(bad)
adc
(bad)
(bad)
(bad)
push
cwde
lds
xor
cld
add
mov
or
cli
cdq
push
mov
(bad)
(bad)
(bad)
jmp
sti
cdq
pop
clc
in
enter
dec
push
adc
xchg
jb
or
jmp
stos
(bad)
push
ret
fwait
and
nop
push
and
push
rol
sar
(bad)
(bad)
(bad)
mov
sbb
inc
mov
adc
cmp
aaa
nop
shrd
mov
pop
shl
movs
jo
test
ins
je
jno
jg
pop
add
xor
(bad)
(bad)
call
push
fstp
push
push
iret
sub
fld
and
push
sbb
sub
scas
sub
data16
(bad)
(bad)
(bad)
out
(bad)
outs
rol
xor
mov
mov
cmp
scas
in
fdiv
push
sub
outs
cli
(bad)
call
cmc
in
inc
jecxz
cmp
mov
mov
stc
jmp
ficomp
(bad)
(bad)
(bad)
fild
out
mov
sbb
ror
ret
jp
out
inc
(bad)
cmp
(bad)
(bad)
(bad)
jmp
push
daa
lds
or
pop
xchg
jmp
loope
inc
mov
leave
jl
jle
hlt
jmp
aas
dec
sbb
and
(bad)
aas
(bad)
jle
lahf
mov
cmp
retf
mov
dec
mov
jp
xchg
xlat
ds
mov
imul
test
cmc
imul
daa
inc
or
push
mov
and
fs
xchg
xor
cmp
jmp
dec
jecxz
cmp
test
jnp
outs
or
cmp
(bad)
(bad)
dec
enter
pop
dec
xor
dec
add
xor
ret
jge
cmp
dec
je
(bad)
(bad)
dec
jo
pop
neg
adc
in
test
or
fdivr
loop
cmp
mov
rol
test
adc
or
dec
push
dec
nop
call
repnz
add
mul
pop
stc
out
hlt
xor
mov
(bad)
mov
int3
ss
shl
aas
or
mov
dec
inc
rcr
mov
jp
pop
aas
sub
jmp
xchg
add
(bad)
inc
jge
fs
or
shl
mov
pop
fwait
sub
dec
pop
sub
arpl
and
jl
mov
cld
pop
cmp
adc
gs
std
(bad)
jmp
mov
(bad)
imul
or
mov
push
sbb
out
repz
(bad)
inc
sar
push
dec
cmp
push
ss
fcom
sbb
and
add
(bad)
inc
pop
loop
add
int
mov
add
adc
add
pop
mov
call
inc
add
(bad)
jbe
aam
mov
in
popf
test
cmp
sub
mov
mov
sub
mov
ret
into
scas
sub
xor
int3
xchg
adc
lea
dec
mov
ins
popa
add
dec
push
in
movs
enter
dec
(bad)
(bad)
(bad)
call
mov
das
fidiv
adc
repnz
mov
jne
and
(bad)
rcl
shr
mov
cmp
(bad)
(bad)
(bad)
call
(bad)
bound
sahf
aam
call
cld
fwait
add
xchg
div
inc
loope
jbe
in
cmps
(bad)
jg
jmp
xor
fild
ror
sar
ror
scas
test
not
inc
push
sbb
inc
push
and
cdq
add
push
or
mov
shl
pop
jno
hlt
fstp
fld
mov
idiv
fsubr
jae
dec
es
mov
pop
fdiv
inc
stos
ror
dec
or
in
add
mov
cmp
pop
arpl
(bad)
in
push
ds
sti
cmp
inc
dec
les
test
cmp
fnstsw
mov
add
nop
in
jae
into
push
fs
dec
retf
addr16
out
push
mov
ja
jecxz
out
add
stc
push
push
(bad)
jmp
mov
mov
mov
mov
aam
jns
popa
jle
sahf
sbb
mov
pop
popa
cli
(bad)
mov
movs
retf
jno
and
adc
(bad)
(bad)
jmp
xor
fnstsw
and
repnz
jb
enter
aas
jb
or
(bad)
jmp
adc
es
cmp
(bad)
sub
pop
add
cmps
xlat
add
(bad)
call
in
nop
rol
arpl
cmp
push
xor
jo
pushf
dec
and
fcomp
ficom
pop
cld
and
inc
cmps
hlt
cwde
ret
xchg
into
mov
jecxz
or
mov
outs
cli
(bad)
jmp
mov
fist
ficom
fiadd
daa
sbb
in
dec
(bad)
(bad)
jg
inc
fs
cmps
jo
retf
jmp
jb
inc
repz
inc
sub
(bad)
(bad)
call
jl
or
push
push
cs
ret
mov
in
add
(bad)
(bad)
(bad)
call
lahf
imul
mov
mov
jge
gs
adc
inc
(bad)
(bad)
(bad)
jmp
imul
lock
dec
and
fs
push
fs
mov
mov
(bad)
jmp
jno
mov
mov
or
cmp
push
cli
add
(bad)
inc
mov
inc
or
loop
cmp
pop
pushf
pop
(bad)
dec
sub
popf
mov
out
test
mov
pop
gs
(bad)
jmp
js
(bad)
adc
jg
int3
pusha
hlt
dec
sub
int3
xchg
es
mov
loop
push
sahf
loop
or
or
jmp
jl
out
push
out
fxch
inc
and
jno
(bad)
(bad)
call
push
psllw
or
or
xlat
aad
and
jg
sbb
dec
aaa
(bad)
(bad)
(bad)
(bad)
stc
lds
in
sbb
mov
mov
ja
push
loopne
sub
imul
mov
sahf
dec
pop
nop
dec
mov
outs
cmp
mov
jns
rcr
xor
std
xor
(bad)
(bad)
call
mov
int3
sbb
dec
call
and
das
aam
push
jo
or
rol
sub
jbe
aaa
add
cli
(bad)
(bad)
(bad)
mov
movs
add
icebp
fidiv
xlat
sbb
adc
sbb
out
xor
sbb
(bad)
(bad)
jmp
loope
xchg
nop
and
mov
sbb
jg
hlt
hlt
jbe
test
jecxz
not
pushf
adc
ret
(bad)
(bad)
(bad)
call
adc
jl
sbb
push
mov
cwde
add
add
pushf
out
cmc
scas
clc
jmp
fst
icebp
jmp
rcr
fistp
data16
(bad)
(bad)
fild
call
cmp
(bad)
sub
mov
ret
add
push
fs
lahf
icebp
cmp
(bad)
(bad)
(bad)
(bad)
mov
js
jbe
adc
in
xor
mov
les
dec
in
enter
test
icebp
call
in
or
retf
dec
out
pop
mov
add
cli
shl
enter
jecxz
add
mov
(bad)
jmp
pop
iret
sub
pop
fldcw
dec
adc
lods
xor
pop
rcr
call
movs
sar
jnp
sub
cdq
jg
aad
pop
pop
sti
nop
out
add
(bad)
push
std
mov
std
inc
push
dec
lods
mov
sbb
mov
ds
in
sar
(bad)
mov
pusha
js
(bad)
(bad)
mov
(bad)
jns
data16
retf
movs
add
add
and
(bad)
(bad)
call
sbb
loope
pop
dec
push
mov
dec
in
cmp
mov
xchg
call
(bad)
call
rol
cmp
and
es
mul
dec
cld
inc
out
push
es
mov
imul
sbb
fcomip
push
jno
push
stos
popf
clc
or
ret
dec
repnz
(bad)
in
(bad)
(bad)
(bad)
inc
push
sbb
or
dec
pop
test
xchg
lock
ret
push
clc
xchg
test
(bad)
(bad)
jmp
xor
cwde
sbb
dec
mov
mov
(bad)
clc
xor
mov
(bad)
(bad)
(bad)
push
xchg
pop
fwait
xor
outs
jbe
jle
and
cld
pop
push
clc
push
jmp
add
(bad)
(bad)
push
xchg
(bad)
jle
mov
sbb
inc
std
sbb
mov
mov
xor
push
xchg
(bad)
(bad)
(bad)
js
cs
in
mov
loopne
test
out
sub
popa
std
add
pop
sahf
std
dec
pop
push
sbb
imul
or
dec
(bad)
mov
retf
loope
xchg
test
jae
and
je
cmps
(bad)
call
mov
int3
cs
pop
ins
pushf
xchg
cwde
mov
jo
(bad)
(bad)
(bad)
jmp
rcl
clc
sub
cdq
adc
mov
cdq
(bad)
sub
mov
adc
sbb
cs
add
inc
nop
icebp
pop
aam
in
and
sbb
push
add
(bad)
(bad)
call
push
push
lds
(bad)
enter
or
sbb
fmul
popa
es
mov
(bad)
(bad)
inc
je
xchg
adc
in
shl
and
popa
bound
cmp
(bad)
(bad)
mov
call
mov
mov
mov
xor
add
jge
in
jbe
push
or
inc
fs
or
ret
mov
dec
cmp
scas
add
add
imul
in
xchg
iret
xor
pop
jne
adc
out
shl
inc
test
push
jmp
sub
daa
xchg
sub
mov
sub
outs
mov
mov
(bad)
(bad)
dec
imul
leave
dec
lahf
cli
(bad)
aad
fld
dec
and
sbb
rcr
jg
(bad)
inc
inc
test
movs
mov
push
add
dec
jnp
out
xor
fmul
jecxz
sub
call
xchg
pop
mov
mov
cmp
cwde
cmp
call
arpl
inc
addr16
xchg
inc
mov
(bad)
(bad)
dec
movaps
mov
int3
sub
dec
mov
sub
stos
mov
jle
rol
xor
xlat
loopne
(bad)
(bad)
call
dec
inc
call
push
mov
xchg
jg
leave
ins
hlt
push
cmp
jmp
dec
inc
cmps
jmp
cmp
hlt
mov
push
jno
push
jmp
push
shl
pop
aas
ss
(bad)
(bad)
jmp
ins
cld
or
ds
sbb
xchg
mov
sub
and
shl
cmp
(bad)
push
sbb
pop
jmp
pop
in
inc
je
leave
push
push
mov
cmp
ds
(bad)
(bad)
(bad)
call
inc
ins
sub
fist
(bad)
loop
mov
repz
rcl
(bad)
pop
popf
sahf
out
sub
xor
inc
je
inc
movs
loope
and
loop
loop
push
adc
jecxz
test
mov
ss
cmps
aam
sub
js
(bad)
jg
sub
jle
push
data16
rol
push
jl
aaa
dec
ds
inc
inc
push
sub
js
arpl
data16
xchg
push
sub
inc
add
in
mov
popf
cs
adc
test
mov
or
dec
outs
or
cli
inc
mov
inc
adc
(bad)
(bad)
(bad)
(bad)
ds
dec
inc
scas
addr16
int
ret
fs
add
stc
cmp
cmp
ret
mov
adc
test
cdq
sahf
pop
jmp
adc
pop
sbb
fmul
mov
loop
sbb
(bad)
push
jmp
mov
movs
sub
out
add
(bad)
call
in
fisubr
fwait
xor
mov
call
xor
icebp
cmp
(bad)
(bad)
dec
retf
pop
dec
cmp
stc
pusha
data16
das
clc
sub
jmp
xchg
cmps
and
ror
retf
push
ss
jecxz
loope
imul
iret
fadd
vpsrlq
ret
daa
retf
mov
enter
xlat
int3
scas
(bad)
(bad)
(bad)
mov
pop
test
xor
sbb
dec
push
sbb
mov
push
js
(bad)
(bad)
(bad)
push
addr16
xor
out
std
jge
stos
adc
add
adc
xchg
mov
mov
cmp
repnz
ret
jge
mov
std
and
loop
(bad)
(bad)
call
movs
(bad)
xlat
inc
pop
sbb
shl
pop
in
rcr
mov
push
jno
xchg
add
(bad)
(bad)
(bad)
jmp
push
rcl
or
push
daa
ficomp
mov
xor
mov
arpl
and
pop
pop
std
push
test
out
cs
add
cmps
sub
out
mov
lods
mov
pop
cmp
sar
(bad)
push
fidivr
xchg
and
mov
jle
js
jle
mov
aam
xor
cdq
retf
push
daa
(bad)
(bad)
(bad)
(bad)
sti
cli
push
mov
xor
into
out
pop
aas
xor
stos
or
fnsave
mov
(bad)
jmp
cli
sub
js
mov
xchg
stc
inc
xor
outs
mov
and
(bad)
leave
push
jmp
mov
jns
loope
loopne
push
cmp
lods
push
add
cmp
stos
inc
cmp
outs
(bad)
jecxz
ja
sub
lods
jl
(bad)
(bad)
(bad)
(bad)
cmp
push
cwde
(bad)
or
retf
push
jnp
mov
int
xlat
jge
rep
or
xchg
dec
push
mov
(bad)
push
mov
popf
jmp
ins
arpl
cmc
fisub
jl
push
fwait
push
(bad)
retf
sar
mov
(bad)
call
xor
xor
or
pushf
call
inc
pop
call
imul
(bad)
pop
out
call
data16
pop
nop
pop
(bad)
out
(bad)
not
lods
ja
dec
(bad)
(bad)
(bad)
(bad)
call
xor
(bad)
pop
and
pop
xlat
daa
es
pop
jle
out
fisub
xor
(bad)
(bad)
call
or
sbb
int
xchg
aaa
jle
call
shl
(bad)
dec
pusha
sub
inc
push
jmp
mov
jle
adc
(bad)
push
cmp
test
scas
cmp
add
mov
pop
sub
cmps
inc
or
jae
xlat
les
(bad)
(bad)
call
sbb
fwait
or
mov
fs
dec
dec
or
sub
daa
fwait
dec
add
push
js
mov
ds
(bad)
call
call
imul
mov
cmp
mov
jmp
dec
rcr
xor
or
or
push
cmp
leave
pop
retf
cmp
xlat
in
cmp
xchg
into
cli
pushf
pushf
das
test
jae
dec
jne
sub
cwde
jmp
out
mov
mov
sbb
stc
or
pop
or
xchg
mov
push
xor
pusha
loopne
jmp
add
stc
aam
xchg
pop
sbb
mov
ds
(bad)
(bad)
inc
mov
imul
xchg
clc
ret
mov
xchg
pop
inc
jns
jb
ds
test
jmp
pop
inc
test
sbb
pop
cld
inc
sub
enter
neg
je
mov
(bad)
(bad)
dec
dec
push
das
leave
ror
test
push
or
xchg
enter
pop
sub
xor
sahf
leave
in
(bad)
(bad)
(bad)
jmp
sub
push
mov
lds
dec
cmp
xchg
inc
pop
xor
popa
test
adc
pop
mov
jmp
and
mov
mov
adc
sub
cmps
call
(bad)
(bad)
jl
cwde
repnz
psubq
mov
pop
adc
jmp
cdq
clc
shr
sbb
(bad)
jmp
adc
jno
push
cmps
(bad)
call
cmc
cmc
jl
or
lods
in
push
push
or
mov
xor
cs
(bad)
(bad)
call
nop
pusha
xchg
ss
fucomp
arpl
xor
cmc
sbb
and
sub
enter
(bad)
(bad)
(bad)
(bad)
cmp
sahf
sar
push
cmp
fld
das
lahf
rol
popf
mov
(bad)
jmp
mov
pop
mov
fmul
sbb
stos
cmps
inc
outs
mov
push
lea
cmp
lods
(bad)
xchg
fisubr
jecxz
retf
lods
(bad)
(bad)
in
outs
ficomp
dec
adc
dec
stos
shr
mov
mov
out
dec
(bad)
(bad)
(bad)
jmp
fcmovnb
(bad)
push
pop
(bad)
mov
rcr
cmp
fldenv
stos
jmp
(bad)
(bad)
(bad)
js
push
mov
lea
ret
and
retf
jb
cmc
out
addr16
cmp
mov
nop
mov
(bad)
(bad)
(bad)
sbb
sbb
sahf
mov
stos
add
xchg
pop
cmp
dec
fbld
or
std
(bad)
(bad)
inc
xchg
pop
and
into
loopne
cmps
xlat
scas
xlat
fs
stos
jle
mov
inc
fcomi
jg
dec
adc
cbw
xchg
push
mov
(bad)
(bad)
call
fiadd
pop
jb
cli
push
cmp
cmp
jne
inc
bound
xor
sbb
xchg
or
push
add
js
stos
cdq
sbb
rcl
call
cli
adc
push
int3
mov
cmp
mov
leave
es
std
call
mov
ds
cld
(bad)
(bad)
jg
call
sar
stos
in
jnp
add
jg
xchg
lods
imul
mov
data16
data16
stc
sbb
outs
dec
test
dec
out
das
outs
adc
mov
mov
(bad)
(bad)
inc
inc
ficom
jns
std
movs
popf
sub
icebp
lahf
mov
inc
push
es
(bad)
(bad)
(bad)
call
push
or
repnz
sar
jecxz
sbb
lods
mov
aam
in
xor
frstor
lock
retf
std
cmps
mov
cwde
jmp
(bad)
(bad)
(bad)
mov
push
lea
(bad)
sub
mov
ror
lods
sti
inc
sub
fmul
push
fiadd
(bad)
(bad)
clc
pushf
cli
cmp
test
xchg
mov
sbb
push
fadd
sbb
nop
cmp
push
ins
and
stos
inc
xchg
aad
xor
into
and
sub
add
ss
inc
(bad)
(bad)
(bad)
dec
pop
mov
mov
inc
pop
aas
mov
jno
xchg
shl
or
cmp
mov
jmp
rcl
shr
xor
jno
jb
jae
addr16
pop
sub
push
sar
callw
(bad)
inc
clc
xchg
sti
lea
mov
je
and
adc
dec
test
fsub
push
into
cmp
inc
fidiv
jbe
ins
scas
xor
jp
jmp
sbb
andnps
cwde
cli
mov
(bad)
fld
hlt
or
jmp
jl
(bad)
(bad)
(bad)
(bad)
cmp
ins
inc
popf
add
inc
fdivr
repnz
xor
pop
xchg
adc
lods
test
(bad)
(bad)
(bad)
(bad)
fdivr
or
arpl
in
ret
and
clc
int3
mov
ret
into
inc
sbb
push
pusha
mov
inc
outs
dec
adc
pop
mov
and
cld
sahf
mov
mov
fs
and
(bad)
inc
mov
(bad)
(bad)
int
mov
pop
inc
fbstp
loope
loopne
icebp
jmp
lea
or
popa
out
sub
sahf
(bad)
nop
clc
fist
hlt
jecxz
inc
and
cmp
(bad)
jmp
(bad)
daa
and
clc
leave
xor
fild
bound
ret
aad
imul
inc
cmps
movs
repnz
call
pop
clc
hlt
push
fild
add
into
fld
jp
aad
out
test
(bad)
dec
cwde
retf
sbb
xchg
pop
jae
test
push
(bad)
sbb
push
cs
lods
push
je
fsubp
inc
mov
xlat
ss
(bad)
(bad)
(bad)
call
stos
sbb
pushf
xchg
mov
push
loopne
aaa
sbb
(bad)
iret
xchg
(bad)
(bad)
(bad)
dec
dec
push
in
adc
(bad)
push
stos
enter
inc
inc
sahf
retf
popa
mov
jnp
push
fisttp
ret
jae
dec
and
aam
pop
movs
daa
cmp
(bad)
(bad)
jmp
enter
cli
sbb
sti
dec
mov
ins
(bad)
in
shl
or
add
jbe
(bad)
shl
dec
lock
sbb
and
sbb
lods
cld
and
jmp
movs
xor
loope
dec
fadd
fwait
into
jnp
jne
jns
jbe
daa
(bad)
(bad)
(bad)
inc
inc
iret
sub
cvtps2pi
mov
popa
loopne
xor
push
mov
fild
movs
loope
in
xlat
les
push
dec
mov
cmp
mov
dec
les
fbld
scas
xor
pop
(bad)
inc
out
scas
retf
xchg
(bad)
(bad)
(bad)
fbstp
ins
data16
mov
pop
adc
sub
fwait
xchg
or
mov
pop
add
fwait
pop
jg
or
daa
cld
daa
iret
adc
(bad)
jmp
retf
loop
mov
or
push
xchg
lods
and
sbb
addr16
enter
mov
fwait
(bad)
retf
ins
jmp
jae
outs
lahf
mov
xor
jbe
cmp
stos
ficomp
div
jge
les
(bad)
dec
jnp
sub
int3
xchg
int3
(bad)
stos
popa
xchg
(bad)
sub
adc
push
jns
dec
(bad)
(bad)
(bad)
call
lock
mov
xchg
loop
imul
div
stc
clc
jb
lock
rcr
(bad)
(bad)
(bad)
(bad)
fsubr
(bad)
sbb
jmp
std
mov
jbe
sti
mov
xchg
mov
mov
sbb
aaa
std
dec
lea
loop
add
in
(bad)
jbe
das
arpl
xor
fild
jmp
sub
mov
cld
inc
(bad)
jns
test
ret
pop
outs
mov
(bad)
out
in
pop
call
loopne
(bad)
dec
mov
lahf
div
xlat
mov
jecxz
into
sbb
xor
add
add
(bad)
mov
xchg
jmp
cmp
leave
test
add
int3
cmp
call
(bad)
jmp
in
jmp
or
loope
sahf
out
das
push
mov
mov
(bad)
inc
xchg
xchg
enter
dec
(bad)
xchg
xor
pop
mov
(bad)
pop
sub
loope
adc
iret
ret
(bad)
(bad)
(bad)
call
dec
jo
fadd
adc
cmp
fwait
mov
mov
test
sub
cmp
or
(bad)
(bad)
(bad)
(bad)
jg
add
pop
test
inc
ficomp
clc
jbe
and
jmp
mov
dec
xor
call
add
xchg
inc
add
aas
sub
dec
push
loopne
test
lahf
pushf
retf
rcl
scas
(bad)
jmp
(bad)
cmc
sti
and
stos
cwde
cmps
jecxz
sub
xchg
adc
pop
sbb
(bad)
(bad)
(bad)
dec
mov
adc
xor
jns
in
in
mov
sbb
dec
mov
repnz
das
retf
(bad)
(bad)
(bad)
(bad)
fcmovnbe
pushf
and
outs
xchg
xchg
xor
neg
dec
jge
imul
movs
mov
sub
(bad)
jg
(bad)
jmp
push
xchg
out
dec
out
adc
cld
scas
shr
mov
cmp
(bad)
jmp
lea
popf
jp
xchg
or
and
inc
inc
or
pop
xor
(bad)
(bad)
(bad)
call
scas
add
test
add
cli
mov
xor
pop
div
lahf
push
aam
and
jbe
ins
pop
push
lock
push
xchg
inc
add
(bad)
(bad)
jmp
aad
inc
inc
push
shl
sub
repnz
outs
(bad)
(bad)
call
pop
mov
clc
das
mov
mov
dec
push
push
push
cmps
sub
sti
cmp
(bad)
(bad)
(bad)
inc
mov
icebp
jle
jae
mov
mov
shl
push
aas
sbb
iret
mov
(bad)
push
sbb
repz
shl
mov
and
int
loope
adc
(bad)
dec
dec
add
outs
out
es
xchg
in
imul
scas
outs
es
jmp
mov
ret
push
loop
push
sbb
add
jecxz
pop
popf
mov
test
hlt
sbb
fcomp
jb
mov
dec
push
int
inc
push
test
call
scas
mov
jmp
enter
jle
sbb
(bad)
(bad)
(bad)
jmp
jo
lods
xor
mov
fwait
inc
(bad)
cli
jecxz
test
jmp
pop
mov
stc
sar
dec
cmp
jns
stos
aad
dec
push
inc
adc
push
push
add
mov
push
sub
mov
and
add
jno
mov
int
xchg
(bad)
mov
outs
mov
mov
repnz
in
clc
or
sti
dec
xchg
xchg
(bad)
(bad)
mov
pop
mov
xchg
cmc
cmc
shl
aam
jne
jg
mov
adc
ror
nop
pusha
imul
sub
sbb
sbb
jmp
lods
stos
mov
jo
and
jl
leave
xor
out
icebp
(bad)
(bad)
push
add
xor
xchg
out
mov
pushf
jmp
mov
xchg
(bad)
inc
div
sbb
dec
mov
(bad)
stos
repz
test
jmp
push
sub
(bad)
(bad)
inc
stc
xchg
sbb
pop
stos
adc
adc
push
dec
pushf
repnz
inc
cs
cmp
fldcw
arpl
outs
clc
inc
or
cmp
dec
mov
push
jbe
xor
(bad)
(bad)
inc
fld1
dec
cmp
rcl
fcom
adc
clc
stos
shl
sbb
dec
(bad)
(bad)
jmp
enter
pop
lds
add
and
icebp
imul
push
test
test
pop
and
sub
aaa
sbb
push
dec
sub
(bad)
dec
outs
mov
mov
sbb
jbe
push
cwde
push
adc
repnz
(bad)
call
mov
dec
mov
cld
xor
inc
jg
(bad)
(bad)
jp
sub
pop
mov
adc
loop
fwait
xchg
jge
ja
or
(bad)
call
pop
and
call
adc
call
or
sub
and
sar
cmp
out
addr16
mov
pop
not
sar
(bad)
(bad)
(bad)
jg
and
pop
sbb
mov
sbb
stos
push
sahf
pop
push
retf
jae
xlat
call
jge
(bad)
adc
dec
fist
push
ins
out
push
adc
rcl
clc
(bad)
jg
cs
adc
fild
add
push
je
test
out
or
stc
mov
fs
dec
aam
aaa
outs
pop
push
cmp
ins
push
clc
fcomip
cmp
(bad)
(bad)
(bad)
(bad)
clc
call
shl
fild
or
ret
rol
xor
mov
sub
jmp
ror
or
xchg
call
mov
adc
(bad)
(bad)
(bad)
call
(bad)
shl
call
add
pop
daa
push
mov
sbb
add
(bad)
call
in
aad
adc
adc
and
retf
mov
fidiv
(bad)
(bad)
cmp
add
pop
pop
cmps
jle
sbb
xchg
lea
outs
mov
pusha
or
(bad)
jg
mov
ret
popf
int3
cmpxchg
xchg
mov
out
aam
in
xchg
std
(bad)
jg
je
sbb
mov
and
ror
icebp
xor
iret
add
cli
dec
movs
movs
push
fdivr
rcl
cmp
push
add
int3
call
jmp
aad
(bad)
(bad)
call
inc
pop
(bad)
lock
jp
pop
lahf
sub
mov
popf
xcrypt-ofb
cmps
lods
cmp
and
jmp
in
jmp
dec
jl
mov
ins
inc
js
(bad)
(bad)
(bad)
jmp
mov
inc
nop
(bad)
mov
mov
loop
xor
jl
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lds
push
xor
(bad)
imul
test
ret
jp
jl
jo
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xor
add
in
add
stos
sbb
mov
in
movs
leave
(bad)
(bad)
call
gs
int3
test
retf
jbe
test
in
cmp
cmp
dec
lods
into
jno
bound
(bad)
cmp
(bad)
out
jbe
jl
cmp
and
cwde
int3
pop
in
and
or
dec
jecxz
gs
xchg
adc
fimul
mov
(bad)
and
pop
(bad)
dec
movs
fiadd
inc
inc
fnstcw
and
and
jmp
sub
(bad)
mov
cmps
pop
pop
inc
jns
call
dec
sbb
mov
rcr
mov
add
sbb
mov
retf
std
push
lds
das
or
dec
sub
jle
sar
jmp
repnz
hlt
std
xor
cld
je
jge
test
test
hlt
fbld
and
mov
sbb
sub
sub
and
lock
nop
(bad)
(bad)
(bad)
jmp
iret
fs
pusha
repz
retf
push
inc
lahf
jb
dec
mov
shl
loopne
mov
call
addr16
dec
ja
jbe
lock
repz
enter
pop
mov
mov
loopne
xor
push
fsubp
xor
loop
sbb
dec
in
(bad)
(bad)
(bad)
(bad)
call
push
sti
or
cmp
jmp
dec
mov
arpl
ffreep
leave
call
aam
sub
sbb
leave
add
int
cmc
push
in
scas
sub
mov
daa
(bad)
sub
(bad)
(bad)
jmp
pusha
test
mov
sub
dec
loopne
movs
xor
push
mov
and
xchg
push
shl
mov
test
ficomp
pop
xchg
mov
jg
retf
stos
loopne
lods
fisubr
(bad)
fild
test
mov
je
aad
mov
call
aam
mov
enter
jg
jmp
in
mov
pop
inc
mov
call
xchg
stos
jae
jno
pop
ja
enter
call
xlat
cmps
mov
call
hlt
push
cmp
sahf
push
xor
xchg
xor
stc
loop
retf
lds
dec
cli
xor
(bad)
(bad)
(bad)
dec
mov
mov
fcmovbe
add
das
imul
jbe
mul
mov
(bad)
jo
add
adc
sub
push
fs
cli
pushf
(bad)
(bad)
(bad)
inc
cli
or
popa
xchg
and
(bad)
mov
popw
xchg
(bad)
mov
arpl
(bad)
(bad)
fsubr
xchg
push
repnz
add
jmp
jg
shl
leave
jle
adc
pop
add
(bad)
dec
sub
(bad)
mov
in
shl
int3
push
inc
inc
imul
dec
icebp
shl
fbstp
and
and
lds
push
aas
in
fdivr
(bad)
(bad)
jmp
ja
clc
add
or
add
xchg
(bad)
(bad)
(bad)
jmp
pushf
push
ins
push
popf
mov
xlat
ins
inc
mov
and
lss
adc
(bad)
mov
lods
add
mov
ins
repnz
in
cmc
out
push
fs
add
jmp
dec
jns
aad
xchg
int3
fs
and
aam
(bad)
test
push
lods
pop
xchg
xor
(bad)
call
inc
lock
dec
and
and
or
inc
and
inc
adc
xchg
add
mov
push
push
sahf
fs
rcr
(bad)
pop
or
add
pop
jo
cmp
push
adc
(bad)
(bad)
(bad)
(bad)
lods
xchg
pop
icebp
ds
xchg
lock
push
mov
xor
inc
in
jmp
(bad)
mov
(bad)
jmp
movs
test
lds
push
mov
iret
pusha
push
inc
pop
aas
dec
iret
fstp
xor
(bad)
(bad)
push
shl
out
jo
stos
fcmovnbe
popa
adc
jns
pop
mov
test
(bad)
(bad)
mov
into
mov
sahf
ss
sbb
xchg
sbb
les
mov
and
mov
ror
xchg
out
pop
push
(bad)
(bad)
(bad)
inc
mov
mov
sub
cmps
rol
pop
jnp
sbb
into
mov
sub
(bad)
(bad)
call
xchg
aad
addr16
xchg
in
xchg
rcr
jnp
adc
sub
pop
test
push
out
sbb
(bad)
(bad)
jmp
mov
es
sub
iret
loop
push
mov
inc
in
sbb
ss
pop
in
jmp
imul
xchg
sub
inc
std
or
(bad)
call
pop
inc
js
add
movs
popf
mov
test
rcl
loopne
int3
ja
or
inc
or
inc
cli
xor
sbb
xlat
xor
adc
(bad)
(bad)
(bad)
call
sub
out
sti
push
pop
dec
push
inc
adc
mov
jb
and
add
add
cwde
(bad)
out
cli
push
cmp
add
enter
pop
add
xlat
mov
(bad)
push
push
fwait
stos
push
outs
pop
js
je
adc
test
test
cmp
(bad)
(bad)
jmp
xor
mov
popf
not
inc
push
test
psubusb
inc
fsqrt
dec
jmp
fwait
js
dec
or
fld
(bad)
imul
call
xor
mov
inc
and
stos
(bad)
(bad)
mov
out
mov
lds
scas
dec
add
jecxz
arpl
in
add
scas
ret
and
cmp
repz
pushf
repnz
sbb
aas
retf
xlat
repz
(bad)
(bad)
(bad)
call
popf
pop
push
leave
sub
mov
pop
and
cwde
inc
sbb
rcl
(bad)
(bad)
jmp
lock
jne
sbb
addr16
outs
pushf
jle
sub
(bad)
(bad)
(bad)
(bad)
jp
and
sbb
jmp
je
scas
xor
mov
mov
mov
push
(bad)
dec
scas
fcom
xchg
push
out
leave
test
lods
add
inc
jb
sbb
ret
cs
and
loopne
mov
iret
sti
add
mov
cli
gs
mov
cmp
(bad)
call
mov
repnz
repnz
pop
adc
loopne
in
call
fwait
and
push
cmp
mov
ret
(bad)
call
fnsave
(bad)
mov
es
pop
push
cmc
cmc
adc
xchg
pop
hlt
push
hlt
popf
mov
(bad)
cmp
mov
mov
dec
and
scas
pop
and
in
imul
adc
(bad)
(bad)
(bad)
dec
fcmovnbe
xchg
jo
fmul
mov
sbb
xchg
pop
pop
push
inc
xor
mov
(bad)
jmp
pop
movs
push
data16
and
into
jecxz
mov
mov
jg
xchg
scas
push
fld
mov
es
jno
adc
cmc
mov
xlat
adc
call
inc
xchg
sbb
dec
push
scas
pop
jl
adc
sub
cld
pop
jle
(bad)
(bad)
(bad)
call
imul
fcmovnu
pop
gs
cmp
test
xchg
xor
addr16
movs
retf
in
aad
in
ret
ret
(bad)
dec
mov
push
mov
inc
stc
outs
lahf
sar
(bad)
(bad)
mov
add
sti
push
dec
ins
fwait
inc
lea
test
mov
(bad)
(bad)
dec
lods
shr
fild
xchg
cmps
pop
inc
sbb
xor
lahf
popf
jno
pop
test
push
(bad)
(bad)
(bad)
inc
std
or
retf
mov
push
sub
cdq
lods
movs
xchg
(bad)
(bad)
call
xor
jno
not
cmp
stos
push
inc
aam
xor
adc
(bad)
(bad)
(bad)
jg
ficom
xchg
aas
in
call
(bad)
jmp
out
sub
sub
das
cmp
jmp
sbb
(bad)
pushf
cmp
lods
pop
test
(bad)
push
movs
clc
fistp
(bad)
jg
test
sbb
imul
ret
mov
rep
sti
(bad)
(bad)
jmp
repz
sbb
das
jmp
and
(bad)
jl
outs
outs
or
inc
sahf
mov
pop
or
or
into
hlt
(bad)
(bad)
jg
cdq
mov
mov
inc
js
shl
ins
mov
or
dec
xchg
popa
(bad)
(bad)
call
adc
call
ret
int3
adc
jnp
inc
pop
(bad)
ds
popf
push
dec
lods
pop
jg
pop
inc
call
(bad)
mov
cli
pop
inc
(bad)
(bad)
(bad)
push
pushf
jmp
jle
xor
mov
int3
nop
jle
scas
and
xchg
push
fwait
aam
out
ficomp
sti
(bad)
and
cld
xor
cli
pusha
stos
cwde
hlt
(bad)
(bad)
(bad)
jmp
loope
adc
ret
in
jmp
and
ins
in
ret
xor
mov
ret
arpl
(bad)
(bad)
(bad)
push
jecxz
mov
add
loopne
or
or
and
sbb
sub
clc
shl
mov
iret
inc
(bad)
retf
inc
sub
or
dec
scas
pop
int3
jle
js
(bad)
pop
mov
mov
sub
xchg
or
push
test
loopne
adc
movs
sub
outs
ror
jmp
call
fiadd
movs
jnp
xchg
mov
(bad)
(bad)
(bad)
cmp
das
or
pop
mov
in
xlat
cmp
or
jbe
(bad)
(bad)
(bad)
std
bound
jle
or
leave
mov
sbb
(bad)
cmp
in
daa
push
cdq
repnz
mov
cmp
inc
outs
ss
ret
xchg
mov
rcl
fcomp
xchg
push
stos
jge
inc
jae
inc
push
push
jg
mov
add
lods
add
(bad)
(bad)
(bad)
call
jns
push
cld
xlat
jl
mov
sub
lods
je
push
push
iret
repz
sub
addr16
js
das
cwde
mov
and
add
push
dec
add
push
(bad)
(bad)
(bad)
call
popf
ins
inc
mov
ds
hlt
in
cmps
jo
mov
in
jae
and
mov
mov
sbb
inc
sti
push
jmp
int
mov
sbb
fs
xchg
(bad)
adc
call
push
mov
xchg
repz
sahf
movs
icebp
fnstsw
(bad)
jno
stc
inc
lds
fsub
push
(bad)
(bad)
(bad)
push
inc
(bad)
pop
loop
aam
pop
add
mov
pop
xchg
or
ret
bound
call
dec
lods
push
mov
lea
push
(bad)
call
je
jnp
repnz
nop
popf
fbld
lea
push
data16
aam
dec
fild
sbb
cdq
enter
and
imul
jmp
js
dec
mov
(bad)
out
mov
popf
(bad)
(bad)
(bad)
fst
loope
(bad)
(bad)
dec
stos
outs
xchg
mov
dec
shr
pop
xchg
outs
xlat
imul
jmp
mov
lock
jne
enter
xchg
mov
xor
(bad)
(bad)
call
mov
(bad)
out
jb
mov
pusha
out
rcl
or
pop
or
rcr
repz
cmp
(bad)
mov
lock
pop
and
jns
adc
loopne
push
and
xchg
or
(bad)
(bad)
(bad)
(bad)
test
popa
je
icebp
sbb
inc
mov
sbb
movs
test
or
pushf
cmp
adc
mov
adc
sub
int3
xchg
inc
out
jp
mov
dec
dec
push
icebp
shr
inc
mov
push
xchg
mov
jnp
mov
add
popw
scas
fdivr
mov
add
mov
int3
cwde
mov
cld
(bad)
mov
mov
mov
and
das
push
leave
enter
(bad)
and
(bad)
inc
dec
or
mov
jae
pop
repz
and
or
addr16
loope
sar
(bad)
call
push
and
mov
arpl
into
loope
(bad)
sbb
mov
pop
pop
jle
repz
cmps
es
add
push
adc
(bad)
(bad)
push
mov
fwait
jo
ja
btr
dec
and
adc
shl
jbe
jg
sbb
call
jne
push
popf
ret
push
fbld
push
pushf
out
jg
call
or
jnp
enter
fcomp
retf
(bad)
jmp
add
xor
inc
xor
xor
stos
cs
(bad)
(bad)
(bad)
jg
jae
jo
fcmovnb
mov
repz
dec
int
sti
call
das
jb
and
das
(bad)
(bad)
(bad)
inc
xchg
dec
adc
(bad)
or
or
dec
data16
mov
inc
cmps
inc
sbb
test
jb
cld
(bad)
push
mov
pop
dec
and
out
add
mov
sub
cli
(bad)
(bad)
jmp
mov
pusha
rol
mov
xor
lods
outs
rol
loop
cmps
dec
mov
out
push
ds
add
jae
xchg
cli
jae
jecxz
jge
xchg
stos
hlt
imul
adc
jmp
out
fisttp
ret
mov
xchg
or
pop
jo
loop
(bad)
jmp
fidivr
je
push
in
dec
dec
out
jmp
adc
fwait
je
js
xchg
(bad)
(bad)
(bad)
mov
xchg
aad
cmp
inc
fimul
push
imul
xchg
stos
cmp
(bad)
inc
out
add
pop
xor
loope
push
push
popa
and
push
mov
push
jg
adc
(bad)
push
jecxz
das
fld
retf
push
fcmovbe
jo
imul
adc
pushf
(bad)
cld
xor
out
(bad)
and
pop
fst
icebp
cmps
test
pop
jne
jae
fbstp
(bad)
(bad)
call
adc
adc
lods
mov
sbb
fild
ins
pop
stos
push
fisub
mov
push
stc
adc
(bad)
call
and
mov
test
cmc
icebp
dec
mov
pop
stos
xor
je
cmp
pop
loope
jmp
or
jl
pop
(bad)
push
imul
jb
lds
(bad)
(bad)
jmp
sub
in
sub
(bad)
mov
outs
mov
jae
inc
enter
cmp
cmp
retf
(bad)
(bad)
(bad)
(bad)
mov
fcomp
std
mov
cmp
push
and
push
fstp
mov
loopne
(bad)
(bad)
call
push
inc
aam
dec
adc
jmp
cmp
inc
push
cld
scas
arpl
not
ret
pop
loope
(bad)
push
cld
loopne
sbb
test
dec
and
sub
jno
rcl
xor
jmp
fwait
(bad)
je
cli
push
frstor
jg
(bad)
inc
lahf
add
movs
cs
mov
sub
or
pushf
sub
in
inc
cmp
sub
mov
sbb
das
leave
pop
jne
(bad)
(bad)
jmp
mov
mov
cmp
cmp
cmp
mov
and
ret
xor
inc
test
pop
dec
jno
mov
fnstcw
cmp
mov
pop
ficomp
cli
js
sbb
sbb
out
aad
into
or
fcmovnbe
xchg
push
xor
jp
scas
retf
(bad)
(bad)
(bad)
jmp
and
mov
aaa
in
jo
jle
adc
aas
imul
lock
mov
stos
cmc
(bad)
(bad)
(bad)
push
push
push
test
aaa
ins
add
std
mov
xor
mov
cdq
xchg
mov
lea
(bad)
mov
sub
cdq
outs
dec
fstp
popf
rcl
pushf
and
add
(bad)
mov
xchg
fldenv
add
(bad)
sbb
jae
shr
sbb
dec
loopne
(bad)
(bad)
jg
pop
mov
sub
popf
daa
sub
call
shl
pop
mov
(bad)
jmp
mov
push
mov
aam
mov
fld
mov
xor
fisttp
imul
shr
sahf
dec
adc
mov
dec
in
jg
mov
scas
outs
je
push
cmp
outs
(bad)
cmp
outs
ret
(bad)
(bad)
(bad)
stc
retf
pop
repz
jge
stc
mov
ds
inc
sbb
cmp
(bad)
(bad)
jg
rol
call
mul
cli
push
fidiv
fs
sbb
(bad)
std
fcomip
jmp
in
stos
jnp
sub
push
loope
les
jmp
pop
or
inc
xlat
push
sbb
push
mov
xchg
cmp
test
movs
jnp
mov
(bad)
(bad)
(bad)
dec
loop
in
outs
mov
dec
out
mov
std
adc
out
mov
pop
neg
adc
inc
ins
mov
cmp
in
fdivr
lods
out
inc
into
jmp
nop
mov
push
(bad)
jmp
xlat
and
loop
sbb
fisttp
mov
dec
mov
lods
pusha
(bad)
(bad)
(bad)
call
daa
lds
retf
jmp
(bad)
repz
repz
sub
out
cld
cli
cmp
add
adc
sbb
or
(bad)
(bad)
jmp
(bad)
ja
out
xchg
jae
mov
xor
mov
test
cs
push
dec
shl
(bad)
lahf
cmps
(bad)
es
aam
cwde
outs
(bad)
jmp
sub
sysexit
xchg
mov
in
(bad)
(bad)
(bad)
inc
es
mov
xor
jb
xchg
push
jecxz
jns
pushf
sbb
lods
pusha
(bad)
(bad)
(bad)
mov
pusha
rep
or
pop
push
jl
je
xor
leave
ins
fisttp
and
sbb
jmp
in
arpl
cmp
sbb
dec
dec
stos
xor
stos
or
das
xor
mov
mov
enter
out
int3
aas
adc
adc
or
and
push
and
jg
ins
mov
and
pop
ret
repnz
pop
xchg
ds
loope
(bad)
call
jl
mov
dec
cmp
fldcw
out
js
pop
sub
sbb
into
in
fmul
aaa
push
push
pusha
popa
neg
addr16
sti
cmc
push
(bad)
(bad)
jmp
fs
add
or
outs
and
mov
xchg
cmps
mov
js
or
jmp
ret
fcmovnb
cli
outs
out
and
aad
jl
in
sbb
jge
(bad)
(bad)
(bad)
dec
out
es
cmc
test
fdivr
cmps
xchg
aam
xchg
xchg
and
and
(bad)
(bad)
jg
(bad)
push
xchg
mov
sets
jmp
fisub
shl
mov
data16
(bad)
(bad)
(bad)
(bad)
mov
mov
cmp
inc
jecxz
imul
inc
(bad)
clc
(bad)
push
push
ja
adc
loope
push
sbb
xchg
cdq
jo
jo
mov
adc
(bad)
(bad)
jmp
pusha
outs
pop
cmp
gs
push
push
ins
retf
xchg
dec
dec
popa
dec
iret
outs
(bad)
(bad)
call
cld
inc
xor
cmp
stos
iret
ins
sbb
sbb
fs
xchg
jp
mov
cmp
(bad)
push
pusha
in
cmp
out
sub
test
cmp
adc
or
jmp
mov
cdq
jbe
test
addr16
add
sbb
or
inc
(bad)
dec
xlat
jl
stc
xchg
dec
cmp
call
adc
inc
dec
push
dec
jns
in
dec
xchg
leave
std
mov
push
in
sbb
std
jmp
push
fld
stc
and
inc
sbb
mov
and
lods
(bad)
jg
inc
not
or
mov
adc
xor
xchg
dec
mov
or
(bad)
push
hlt
inc
xchg
add
movs
add
pop
sub
ja
adc
movs
mov
cmp
mov
(bad)
(bad)
(bad)
push
xchg
cmp
mov
mov
adc
mov
push
xchg
bound
test
mov
pop
xchg
xor
or
test
outs
icebp
test
ret
mov
cmp
(bad)
jmp
sbb
inc
sbb
cli
jae
sub
cmps
jbe
pop
fwait
jl
jg
jns
repz
(bad)
fild
(bad)
mov
lahf
xchg
jle
mov
push
test
test
(bad)
ror
repnz
push
leave
jmp
into
dec
psraw
(bad)
in
jne
test
xchg
dec
das
fsubr
jno
jae
add
ret
ss
jge
loope
pop
ds
ins
into
xchg
(bad)
(bad)
(bad)
dec
sahf
leave
jl
xchg
xor
or
imul
into
sub
mov
(bad)
(bad)
(bad)
(bad)
fild
mov
leave
cmp
mov
pop
iret
popa
cmc
(bad)
mov
or
sub
cmp
mov
in
inc
mov
jl
daa
jb
ret
das
sbb
es
mov
in
inc
test
xor
and
mov
push
mov
pop
xor
pop
icebp
push
or
inc
dec
dec
in
ss
out
fwait
jns
shr
hlt
(bad)
mov
test
mov
fcom
pop
leave
test
icebp
arpl
mov
(bad)
dec
xchg
pop
xchg
std
inc
cld
cwde
stos
xor
out
out
jb
fcmovnu
repnz
mov
cmc
mov
fdivr
(bad)
jg
sub
dec
stos
and
adc
inc
push
imul
rcl
in
or
(bad)
(bad)
(bad)
dec
leave
mov
pop
or
adc
out
push
fisttp
cmp
imul
inc
jb
mov
cdq
and
mov
fisttp
adc
dec
jl
hlt
(bad)
(bad)
call
sbb
sub
dec
out
mov
pop
lock
dec
push
je
sub
sub
push
(bad)
(bad)
call
ins
(bad)
jge
gs
pop
repnz
sbb
add
movs
xor
push
sub
cld
inc
fs
jl
fwait
mov
enter
add
je
(bad)
(bad)
(bad)
(bad)
call
push
add
dec
sbb
jae
jns
sub
js
mov
mov
(bad)
(bad)
(bad)
call
arpl
fbld
imul
sbb
stc
lods
mov
mov
jp
(bad)
(bad)
(bad)
clc
mov
and
push
movs
ror
mov
shl
fnsave
jae
fadd
pop
lahf
mov
(bad)
(bad)
(bad)
jmp
cmp
popa
or
mov
jns
push
adc
fmul
aad
popf
mov
ss
dec
inc
mov
pop
das
and
pop
es
lahf
movs
movs
add
(bad)
call
cli
inc
ret
inc
and
loope
cmp
shl
xor
adc
neg
adc
pushf
dec
or
xchg
std
push
lock
inc
ja
xchg
inc
cmps
fwait
or
sar
call
sahf
test
sahf
push
or
inc
clc
lods
jb
mov
sub
ss
(bad)
(bad)
jmp
xor
cmovbe
add
fnstenv
ret
jl
in
aas
hlt
(bad)
(bad)
out
pop
xor
dec
xchg
mov
jns
shl
cmp
std
retf
jo
cmp
cli
(bad)
(bad)
mov
sub
push
inc
dec
pop
loopne
gs
mov
into
cld
(bad)
(bad)
mov
aas
pop
push
xor
stc
aam
jo
lods
test
jno
(bad)
(bad)
call
adc
push
mov
shr
inc
or
push
cmp
mov
or
ss
and
cli
xor
inc
fidiv
stos
mov
add
push
sub
push
add
xor
xor
mov
mov
rol
call
or
call
call
xchg
enter
pushf
aad
cmps
inc
push
pop
(bad)
adc
xchg
std
leave
jbe
(bad)
(bad)
dec
mov
xchg
fcmove
lahf
(bad)
jp
push
es
test
outs
mov
outs
cmp
xrelease
rcr
push
push
movs
push
les
es
lds
push
inc
sbb
dec
cmc
(bad)
inc
sbb
(bad)
call
lods
fisttp
sub
jb
or
xchg
shr
outs
int3
jp
movs
fstp
(bad)
(bad)
(bad)
push
cmp
or
jg
inc
xor
sub
hlt
stc
mov
(bad)
(bad)
cmp
mov
xchg
lea
and
and
fwait
(bad)
jmp
pop
retf
mov
(bad)
cli
inc
cmps
xorps
cmp
pop
add
(bad)
jmp
or
sub
test
out
pop
ret
dec
pop
hlt
fcomp
push
fwait
dec
push
repz
(bad)
(bad)
(bad)
mov
sub
shr
xor
xchg
aas
cmp
retf
pop
dec
cs
test
(bad)
(bad)
dec
stos
xchg
rol
in
sbb
mov
jecxz
fs
sub
jg
ds
repz
popa
add
call
sar
push
cmc
cmp
(bad)
(bad)
(bad)
ffreep
jb
std
jb
and
mov
xor
push
sub
repz
(bad)
(bad)
(bad)
ficom
mov
mov
popa
ss
fistp
pop
adc
pusha
cmps
(bad)
(bad)
(bad)
(bad)
jl
pop
clc
fisubr
add
add
sub
and
retf
pop
cmp
mov
call
xchg
mov
cmp
xor
xor
xor
push
stos
cmc
jmp
cmps
clc
cmp
mov
or
(bad)
fistp
pop
pop
mov
mov
fld
imul
jg
aaa
cld
and
dec
sbb
(bad)
(bad)
(bad)
call
imul
dec
adc
test
jns
pop
sahf
push
movs
loope
push
inc
cmp
pop
add
test
outs
pop
ja
into
sbb
mov
in
out
stos
add
(bad)
(bad)
(bad)
call
adc
addr16
js
popa
xchg
sub
cmp
fs
sahf
mov
add
jmp
fdiv
lds
xchg
popa
int3
and
scas
pusha
push
(bad)
(bad)
(bad)
cmp
popf
mov
jae
fs
jmp
jle
fwait
adc
xchg
add
fcomip
dec
add
(bad)
sbb
in
fidiv
mov
mov
mov
(bad)
(bad)
call
(bad)
mov
push
inc
inc
neg
pop
call
shl
ret
(bad)
cmp
cld
jg
call
sub
push
push
lahf
ins
test
mov
push
cli
sbb
aaa
enter
jno
fisttp
lea
stc
xchg
jge
mov
das
jp
call
sbb
ins
mov
fbstp
stc
pusha
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmp
movs
mov
into
and
pop
mov
mov
ficomp
stos
test
push
call
enter
sub
cmp
aad
jb
add
in
pop
(bad)
int
(bad)
(bad)
call
jmp
stc
ja
and
xchg
inc
mov
and
adc
pop
data16
bound
fist
sbb
xchg
bound
nop
mov
inc
in
mov
push
mov
xchg
mov
fild
sbb
mov
rcr
adc
jg
mov
mov
pusha
lods
pop
xor
aad
cwde
push
out
(bad)
(bad)
inc
push
mov
loope
dec
dec
lods
jecxz
xchg
icebp
dec
cmp
sbb
out
pop
mov
jg
push
shr
push
(bad)
addr16
dec
out
rep
mov
jne
(bad)
(bad)
jmp
dec
push
pop
pusha
and
and
cmp
movs
pushaw
rol
xor
fidiv
push
mov
sbb
sbb
mov
or
xchg
test
fs
(bad)
(bad)
jmp
mov
xchg
inc
mov
add
cmp
je
inc
(bad)
sti
rcl
xchg
sti
adc
(bad)
(bad)
(bad)
cli
cmp
clc
add
pop
aad
jecxz
in
nop
xor
mov
dec
xchg
daa
pop
jmp
xchg
add
mov
adc
popf
sbb
ret
stos
aam
mov
call
xchg
mov
shr
pop
sbb
dec
(bad)
jg
repz
popa
push
jno
push
pusha
outs
jge
callw
(bad)
push
pop
pop
gs
xor
mov
ror
out
cs
and
jmp
add
push
out
push
fucomip
out
movs
test
jae
and
sbb
xor
(bad)
(bad)
(bad)
inc
xadd
loopne
fs
or
xor
dec
test
xor
(bad)
(bad)
call
call
aaa
das
cmp
jmp
stos
sbb
enter
rol
in
push
bound
(bad)
jmp
pop
jno
sbb
and
push
mov
(bad)
(bad)
call
add
push
xor
pop
push
cmps
in
or
push
mov
inc
pop
xchg
xchg
adc
jne
sar
jg
(bad)
cmp
je
sub
mov
cmp
mov
pop
(bad)
(bad)
(bad)
push
lahf
ror
xchg
fld
jb
cmc
jmp
mov
fucom
jns
sbb
pop
cmp
jmp
retf
inc
shl
dec
add
xchg
mov
sub
retf
mov
push
bound
(bad)
(bad)
push
jge
rcl
jnp
push
mov
daa
push
ins
icebp
ret
test
aad
je
(bad)
(bad)
(bad)
mov
lahf
mov
and
(bad)
push
push
pop
pop
clc
(bad)
stos
jle
(bad)
pushf
or
xchg
(bad)
(bad)
jle
inc
mov
lock
inc
push
xchg
mov
nop
inc
call
jmp
hlt
inc
adc
jbe
je
mov
mov
pop
cli
adc
sub
mov
pusha
(bad)
jmp
in
sbb
pop
dec
repz
xor
mov
mov
xchg
aam
push
jbe
xchg
popa
mov
mov
rcr
sar
(bad)
push
out
in
nop
cmp
test
cmp
retf
lds
gs
(bad)
(bad)
(bad)
(bad)
(bad)
sub
xlat
daa
or
imul
adc
and
inc
int3
lds
inc
in
hlt
sbb
clc
mov
(bad)
(bad)
(bad)
inc
lods
sar
mov
popa
retf
ret
mov
cmp
ds
movs
rol
mov
inc
ins
push
lods
dec
outs
dec
push
cmps
fiadd
int3
loope
sub
jle
into
cmp
mov
jg
(bad)
call
call
mov
adc
pop
inc
or
inc
push
mov
dec
(bad)
cmc
(bad)
(bad)
dec
les
pop
rcl
xor
pop
fs
xchg
test
sub
call
imul
dec
mov
imul
out
mov
mov
fmul
loop
(bad)
cld
mov
push
cld
outs
loop
sbb
jle
xor
pop
loop
aas
fidivr
xchg
cwde
(bad)
add
fcomp
mov
or
call
or
(bad)
jmp
jae
mov
test
std
jns
leave
js
ret
(bad)
inc
jle
mov
je
test
movs
mov
mov
call
sbb
ins
mov
stos
(bad)
(bad)
out
mov
jecxz
icebp
out
lods
call
xchg
rcl
add
cmp
xchg
(bad)
jmp
or
xor
push
mov
xchg
and
jge
mov
(bad)
(bad)
inc
out
sbb
add
inc
jg
jp
repnz
xchg
stc
jg
xchg
dec
mov
inc
xchg
js
sar
adc
adc
jno
adc
mov
lds
outs
jg
(bad)
(bad)
dec
pop
fcmovb
iret
push
mov
cdq
icebp
ds
adc
jnp
xchg
cmp
dec
sbb
or
adc
sti
sbb
fstp
mov
push
lds
dec
sbb
jmp
dec
inc
jmp
or
adc
(bad)
(bad)
mov
jp
arpl
je
dec
inc
test
cdq
(bad)
push
pop
mov
jbe
loope
cmc
xchg
(bad)
(bad)
(bad)
(bad)
jnp
or
in
retf
sbb
sub
jmp
mov
(bad)
(bad)
(bad)
jmp
mov
rol
xchg
mov
mov
leave
ret
ss
push
sub
or
(bad)
(bad)
jmp
call
ss
stos
xor
sbb
or
mov
(bad)
(bad)
(bad)
inc
hlt
sub
mov
(bad)
jl
lods
lods
mov
jmp
cmps
and
jle
sub
mov
dec
mov
mov
pop
shr
or
cld
xor
and
pop
pop
in
adc
pusha
add
(bad)
scas
(bad)
(bad)
fisttp
dec
loop
adc
and
inc
push
jle
stos
lds
push
mov
(bad)
mov
xchg
iret
cmp
pop
jl
scas
rol
cli
pop
stos
(bad)
(bad)
(bad)
(bad)
cli
shl
adc
cmp
mov
push
push
fidivr
imul
pop
cdq
shr
dec
fwait
(bad)
(bad)
call
mov
addr16
sahf
mov
xor
call
or
lods
stos
repnz
addr16
icebp
mov
jo
nop
aam
ficomp
fs
(bad)
(bad)
jmp
push
arpl
push
mov
pop
fwait
fwait
add
push
xor
mov
arpl
sbb
ror
or
(bad)
dec
pop
mov
jecxz
int3
sti
cmc
lds
inc
lods
ins
dec
jmp
inc
outs
sub
call
ins
cs
test
jle
rcr
xchg
add
(bad)
(bad)
jmp
pop
adc
stos
pop
pop
push
fstp
stos
xchg
xor
fmul
loopne
xchg
jl
fst
and
jg
(bad)
push
les
cli
test
aas
dec
sbb
aaa
imul
(bad)
(bad)
jmp
imul
add
(bad)
pop
jne
repnz
xor
aas
lea
enter
(bad)
(bad)
(bad)
jmp
mov
jl
mov
cmp
or
ins
and
dec
retf
lahf
xchg
sub
scas
mov
sbb
jmp
or
shr
nop
cmc
call
in
inc
stc
sub
and
cmp
sbb
xchg
dec
test
test
(bad)
adc
(bad)
jmp
mov
call
aaa
out
fstp
mov
aad
xlat
scas
jg
(bad)
(bad)
jmp
jl
xchg
and
jb
stc
out
loope
and
sbb
ss
loop
xor
loop
push
mov
inc
(bad)
inc
xchg
lods
sbb
adc
mov
rol
loop
test
(bad)
jmp
hlt
jge
push
stos
pop
jbe
or
scas
inc
mov
adc
jno
sbb
aad
xor
bound
je
data16
(bad)
(bad)
jg
les
out
jecxz
mov
test
sub
retf
pop
fwait
pop
push
cmc
lock
pop
pop
(bad)
(bad)
(bad)
push
jmp
mov
sbb
sub
mov
cmp
pusha
clc
nop
movs
xchg
(bad)
push
addr16
mov
call
(bad)
dec
fs
push
(bad)
(bad)
(bad)
call
dec
in
and
addr16
ss
mov
pop
adc
call
jae
scas
clc
jmp
ret
mul
xchg
das
shr
push
shl
(bad)
(bad)
jmp
fwait
xchg
or
jo
aad
das
jns
in
pop
fdivr
cdq
and
cmp
(bad)
(bad)
(bad)
inc
adc
mov
mov
fsub
neg
les
add
pop
jno
(bad)
(bad)
(bad)
(bad)
fptan
jo
jg
xor
inc
data16
shl
pusha
es
(bad)
fsub
pop
icebp
fdivr
mov
cmp
push
jo
dec
xor
jmp
outs
jmp
aaa
push
cmp
aam
cmp
jl
mov
jo
sbb
lds
inc
fsubr
or
cmp
in
inc
std
(bad)
cli
out
mov
cmps
lods
ret
sub
push
cwde
inc
hlt
es
imul
mov
sub
push
sub
dec
dec
dec
lods
neg
adc
das
sbb
push
mov
mov
aad
aaa
std
in
xor
(bad)
push
mov
adc
(bad)
jmp
cmovl
stos
jno
iret
lock
gs
mov
iret
les
dec
xchg
shl
std
xlat
sub
movs
retf
xor
loopne
dec
in
test
(bad)
(bad)
(bad)
inc
je
or
pop
jnp
and
cmp
mov
ret
scas
mov
inc
sbb
rcl
pop
sbb
add
and
in
sahf
jmp
jae
jmp
mov
or
dec
jnp
in
mov
or
call
(bad)
(bad)
(bad)
dec
sub
adc
pavgb
shl
or
and
mov
dec
fnstenv
jbe
addr16
xchg
add
lods
jbe
aas
pusha
add
pcmpgtd
(bad)
(bad)
jg
push
xchg
jmp
test
mov
mov
or
(bad)
popa
bound
push
jmp
and
mov
push
adc
jp
cmp
pop
(bad)
(bad)
(bad)
call
inc
(bad)
xor
cmp
fild
adc
jp
fadd
adc
jg
pop
cmps
(bad)
(bad)
jmp
loopne
cmp
adc
adc
adc
cmp
fimul
or
sub
(bad)
adc
hlt
mov
adc
push
ins
sub
jle
popa
data16
add
mov
(bad)
(bad)
jmp
mov
inc
pop
mov
sbb
repnz
push
jns
in
add
lock
ss
and
(bad)
call
(bad)
(bad)
(bad)
aas
cmps
cmps
push
add
sbb
push
sbb
add
jmp
jmp
(bad)
(bad)
push
inc
int
mov
xor
sahf
sub
fld
push
fcmovnu
aaa
std
(bad)
dec
cwde
popa
mov
fmulp
xor
cmps
aad
mov
push
xor
jmp
sar
jmp
int3
pop
pushf
pshufw
mov
xchg
push
jmp
jb
je
sti
push
lods
jg
mov
push
sbb
adc
pushf
sub
and
popa
adc
(bad)
call
std
nop
jge
jecxz
adc
mov
or
mov
data16
jmp
out
lds
pop
inc
jne
dec
xchg
shl
dec
inc
sbb
(bad)
push
push
pop
aad
pop
fdiv
mov
(bad)
push
push
mov
mov
gs
mov
xor
cmp
aad
test
dec
mov
imul
in
sbb
test
pop
std
(bad)
dec
loop
inc
out
add
push
pop
outs
jno
test
mov
pop
adc
sbb
(bad)
(bad)
push
lock
jnp
sub
and
ins
pop
xor
daa
repz
inc
iret
mov
cmp
loope
mov
retf
retf
je
fld
pop
les
mov
jg
pop
fdiv
in
(bad)
mov
jno
ja
out
sbb
(bad)
dec
inc
fwait
pushf
jb
in
adc
(bad)
idiv
jae
add
fwait
or
mov
mov
add
jecxz
inc
xchg
pop
mov
push
and
cmp
push
(bad)
adc
int3
xchg
pop
test
ins
pmuludq
ins
shl
or
movs
(bad)
(bad)
(bad)
aas
pop
xor
mov
inc
cmp
add
adc
data16
(bad)
mov
push
mov
pop
sbb
outs
pop
mov
mov
sbb
(bad)
(bad)
(bad)
inc
sub
imul
fistp
pop
leave
stos
int3
mov
vsubss
mov
inc
cs
(bad)
call
sub
add
mov
pop
mov
push
dec
cld
jnp
(bad)
(bad)
push
in
cld
inc
scas
mov
adc
sub
call
aas
mov
ja
or
mov
inc
pop
jbe
inc
(bad)
(bad)
(bad)
push
inc
inc
or
mov
mov
cmps
push
scas
jp
pop
sbb
push
add
push
or
pop
(bad)
(bad)
(bad)
dec
mov
test
sub
repz
call
ins
pop
daa
(bad)
(bad)
(bad)
(bad)
push
push
jae
mov
dec
mov
(bad)
sbb
fidiv
pop
pop
inc
or
xchg
scas
(bad)
(bad)
inc
xchg
cmp
mov
je
dec
ja
cmps
or
ss
(bad)
jmp
mov
ror
xor
sbb
mov
(bad)
(bad)
mov
js
stos
xor
cmc
retf
ror
hlt
adc
in
ffree
(bad)
out
mov
mov
mov
xchg
mov
jmp
ret
call
sub
pop
xchg
inc
icebp
nop
cmp
and
pop
cli
add
(bad)
(bad)
call
mov
popf
shr
aaa
sbb
push
(bad)
fldenv
inc
jg
push
je
cld
nop
movs
das
jp
jmp
add
cmps
(bad)
sub
pop
add
push
sar
(bad)
push
inc
mov
jb
bnd
cmp
rol
mov
daa
in
das
push
(bad)
loopne
inc
aam
inc
xchg
push
in
retf
clc
adc
or
and
arpl
(bad)
(bad)
dec
je
push
or
xlat
mov
int3
sbb
mov
push
sar
(bad)
(bad)
cmp
add
add
into
jbe
xchg
mov
mov
cld
(bad)
jg
in
jl
lods
(bad)
jg
fwait
gs
adc
(bad)
xor
pop
fdivrp
(bad)
(bad)
dec
xor
dec
pop
ds
sar
xor
jmp
pop
stc
xchg
dec
mov
pushf
cmp
(bad)
(bad)
jmp
cmps
xchg
popf
mov
icebp
pushf
and
mov
add
scas
gs
mov
fld
in
(bad)
jmp
dec
aaa
and
pop
inc
jl
sbb
dec
repz
test
loopne
push
(bad)
inc
int3
and
in
mov
je
jle
movs
mov
data16
(bad)
(bad)
(bad)
jmp
sbb
mov
not
clc
dec
mov
xor
fbstp
lds
rcr
ins
(bad)
(bad)
(bad)
jmp
ret
popf
(bad)
pop
xchg
fwait
cmps
sti
aas
out
xor
test
adc
mov
add
(bad)
mov
cmp
xor
push
sbb
sub
daa
add
mov
mov
hlt
(bad)
(bad)
(bad)
call
rcl
mov
push
mov
push
stc
dec
or
fld
mov
call
out
sub
clc
sbb
(bad)
(bad)
(bad)
out
add
pop
or
xchg
mov
stos
mov
jl
mov
lock
push
jnp
(bad)
fcomip
pop
dec
pop
retf
out
sahf
adc
dec
xchg
outs
cdq
(bad)
sbb
pushf
stc
cmc
(bad)
(bad)
(bad)
(bad)
call
fst
sub
jbe
(bad)
scas
inc
sub
cld
ror
mov
(bad)
(bad)
call
mov
cmp
cld
mov
dec
inc
adc
in
pop
nop
dec
loopne
(bad)
(bad)
call
(bad)
aam
fcomp
std
aaa
dec
shr
xchg
dec
loopne
dec
fidiv
adc
pop
adc
shl
add
(bad)
call
jge
xchg
jno
(bad)
cld
faddp
(bad)
stc
inc
pop
imul
or
(bad)
(bad)
jmp
xchg
inc
xchg
jecxz
xchg
dec
or
or
test
(bad)
(bad)
mov
lea
mov
push
dec
push
sbb
(bad)
cmps
add
retf
call
(bad)
jmp
lahf
mov
jecxz
mov
adc
pop
jl
push
cmp
push
rcl
xchg
push
(bad)
(bad)
jmp
loop
pop
out
movs
lea
inc
or
inc
mov
rcl
movs
sbb
sub
xchg
(bad)
(bad)
call
int3
sbb
pop
je
call
and
push
ins
int3
out
xor
test
(bad)
(bad)
push
push
fnsave
cmp
add
mov
arpl
iret
mov
(bad)
(bad)
push
mov
adc
xchg
call
mov
sbb
loop
mov
ds
pop
push
xor
push
mov
sub
push
fsubp
xchg
mov
call
adc
xchg
nop
aas
scas
jecxz
lahf
push
std
repz
(bad)
(bad)
(bad)
dec
jmp
mov
loop
pop
dec
xchg
jg
mov
lds
(bad)
inc
test
jl
mov
jmp
enter
sub
call
stc
fistp
fadd
hlt
icebp
in
jg
cwde
pop
lock
pop
pop
test
dec
inc
inc
inc
jecxz
jbe
ds
orps
bound
jle
dec
push
std
ins
dec
push
stc
jo
add
dec
add
pop
gs
push
push
cmps
aam
mov
(bad)
(bad)
mov
mov
inc
add
adc
adc
vandps
repz
test
xchg
(bad)
(bad)
jmp
fisubr
dec
or
ret
rcr
cmp
or
dec
add
jmp
(bad)
inc
sbb
fdivr
push
jge
mov
ins
nop
inc
push
push
mov
(bad)
data16
(bad)
(bad)
(bad)
in
retf
xchg
jmp
mov
jno
mov
ficomp
add
clc
(bad)
(bad)
sti
xchg
mov
mov
cwde
mov
or
sub
(bad)
(bad)
(bad)
mov
jmp
or
cld
rol
fcomp
mov
jp
sbb
add
ds
(bad)
jmp
mov
inc
std
(bad)
and
pop
push
loope
add
inc
jnp
xchg
(bad)
(bad)
dec
xor
push
imul
stos
movs
push
pop
aad
add
add
nop
adc
enter
cwde
scas
clc
(bad)
(bad)
push
nop
ret
inc
into
fsub
sbb
xor
mov
stos
je
lds
dec
shr
lock
jmp
int3
and
cdq
xor
mov
(bad)
call
test
xor
daa
sbb
inc
call
aad
(bad)
(bad)
(bad)
call
arpl
leave
jb
clc
test
in
push
jl
cmp
pop
aam
adc
push
repz
cmp
(bad)
out
xchg
adc
and
in
fadd
aam
aad
(bad)
call
pop
rep
mov
aas
retfw
push
fldenv
jbe
sbb
adc
out
bound
out
mov
and
or
js
fisub
jmp
inc
inc
adc
mov
cmp
adc
(bad)
(bad)
(bad)
inc
lods
popf
or
imul
fcmovnbe
mov
mov
prefetcht1
call
(bad)
pop
in
std
adc
cmp
xchg
test
lods
jb
jb
xor
cwde
icebp
call
std
(bad)
fsubr
lods
add
fimul
dec
lock
jb
push
stos
or
sar
test
xchg
lds
in
shl
into
xor
mov
lds
imul
jmp
in
or
cmp
mov
test
sbb
or
cmps
test
call
loopne
cmp
jmp
mov
loopne
sub
inc
and
not
adc
in
getsec
jg
cmp
pop
(bad)
(bad)
(bad)
(bad)
cmp
neg
cmp
inc
pop
pop
mov
add
xchg
pusha
(bad)
call
iret
xchg
inc
jbe
xor
jg
je
stos
cs
jae
in
inc
xor
call
std
mov
cli
rcl
in
loop
aaa
sbb
jno
fld
rcr
(bad)
(bad)
(bad)
(bad)
mov
cld
inc
outs
mov
sub
sahf
aad
mov
push
rol
iret
sbb
(bad)
jmp
mov
sub
and
cmp
popa
xchg
in
sub
inc
loope
cmp
outs
(bad)
jmp
int3
sub
push
sub
xchg
outs
les
sbb
cli
or
(bad)
stc
mov
adc
test
loopne
jmp
jbe
in
stos
mov
mov
hlt
lods
pop
dec
cld
outs
clc
(bad)
jmp
push
mov
add
or
loope
push
adc
or
mov
mov
fcomip
call
inc
pop
pop
and
adc
xor
int3
call
popfw
mov
(bad)
(bad)
dec
into
iret
inc
sub
repnz
in
xchg
cmp
ins
push
les
imul
sbb
mov
pusha
xor
test
call
mov
mov
bound
inc
test
mov
outs
mov
rcl
(bad)
sbb
jbe
movs
mov
ret
mov
into
xchg
adc
mov
mov
xor
(bad)
jmp
sbb
push
fdivr
clc
das
dec
pop
loopne
mov
jecxz
sub
jge
pusha
loopne
(bad)
outs
push
adc
mov
pusha
std
(bad)
cmp
pop
out
or
jmp
fistp
(bad)
jg
mov
sub
sub
(bad)
xchg
aam
add
mov
(bad)
(bad)
(bad)
dec
ror
(bad)
repnz
xchg
test
mov
cs
dec
add
scas
iret
mov
sbb
xchg
js
add
(bad)
(bad)
out
jecxz
mov
xchg
pop
jnp
pop
arpl
mov
fcomip
(bad)
push
in
ins
imul
dec
mov
aam
jne
jecxz
add
cmp
jne
mov
dec
jl
inc
adc
call
cs
(bad)
adc
lock
(bad)
(bad)
(bad)
jp
adc
inc
test
fstp
push
cmp
aas
push
leave
ret
idiv
dec
xchg
mov
(bad)
(bad)
jmp
lahf
imul
outs
pop
jmp
pop
adc
jns
pop
not
jmp
jecxz
test
jg
ja
lea
out
push
fcmovne
adc
inc
(bad)
fistp
clc
cs
xchg
push
hlt
std
mov
adc
les
mov
test
(bad)
(bad)
jmp
adc
popf
rcr
iret
cmp
push
(bad)
sub
in
out
popf
arpl
test
(bad)
(bad)
(bad)
std
sub
or
push
mov
outs
nop
mov
mov
cmp
jge
mov
shl
idiv
(bad)
jmp
mov
mov
fs
xchg
ins
inc
sbb
jne
ja
cld
(bad)
inc
lods
xchg
loop
cmp
enter
add
adc
mov
jmp
dec
mov
shl
or
dec
(bad)
dec
lock
nop
xchg
sar
cmps
fistp
inc
in
lock
jne
adc
add
(bad)
(bad)
(bad)
call
pop
arpl
xlat
loope
mov
push
ret
jle
or
je
sub
dec
daa
mov
jnp
and
call
dec
jmp
into
mov
fild
stos
push
xchg
push
fcos
(bad)
(bad)
push
cmp
xchg
arpl
stos
mov
cmps
ror
mov
or
shr
mov
(bad)
mov
clc
aam
push
fist
sub
and
jmp
inc
jle
cli
(bad)
(bad)
inc
jae
jmp
xchg
sbb
test
rcr
fdiv
je
sbb
cmp
int3
in
(bad)
sbb
imul
push
ins
cmc
loop
call
dec
jg
call
jnp
sub
iret
daa
sbb
(bad)
inc
jo
mov
xchg
nop
(bad)
mov
(bad)
sub
cmps
ins
pop
cli
cmps
js
inc
or
jae
cwde
mov
adc
cmc
cmp
data16
or
cmp
sbb
xchg
add
sar
(bad)
(bad)
(bad)
jns
push
ror
xchg
aam
sbb
retf
inc
inc
retf
stos
ret
pushf
xor
cli
sub
push
inc
dec
and
(bad)
into
ds
(bad)
(bad)
push
(bad)
mov
leave
and
mov
cmp
or
test
cwde
rol
cmc
call
jb
add
retf
cld
push
dec
pop
mov
mov
(bad)
(bad)
dec
shl
sub
sti
adc
xor
(bad)
sbb
dec
movnti
scas
or
ss
xlat
test
jmp
sbb
test
sub
mov
mov
push
dec
xor
sbb
xchg
hlt
arpl
les
in
add
lods
nop
(bad)
(bad)
(bad)
jmp
jp
not
je
test
das
pop
mov
in
popf
mov
repz
(bad)
(bad)
(bad)
mov
jno
(bad)
imul
sub
inc
clc
xchg
cli
jbe
mov
mov
lock
dec
dec
test
cwde
stos
fnstenv
fild
jbe
aad
pop
enter
(bad)
stc
sar
(bad)
dec
or
popa
mov
cmp
out
mov
(bad)
inc
xchg
xor
jmp
mov
mov
in
sub
add
push
push
adc
mov
xor
imul
mov
int
jns
mov
inc
jmp
add
(bad)
mov
pop
adc
and
xchg
stos
nop
push
and
into
stc
test
or
sbb
mov
jl
mov
mov
fdivr
inc
mov
(bad)
(bad)
(bad)
(bad)
jnp
push
adc
movs
dec
sub
push
inc
lea
stos
sub
xor
scas
(bad)
(bad)
(bad)
jmp
fld
sub
xchg
and
cdq
jmp
repnz
repz
in
push
add
xor
pop
popa
mov
pop
lea
shr
inc
and
mov
rcr
in
jle
jge
push
jg
cmc
jg
mul
dec
push
fadd
mov
stos
dec
(bad)
(bad)
(bad)
inc
dec
daa
pusha
mov
lock
push
(bad)
dec
ja
lods
ins
out
sbb
jo
(bad)
into
pop
mov
sti
(bad)
xchg
test
jl
daa
cmc
hlt
ret
(bad)
push
bound
or
add
std
mov
cmp
inc
xchg
popa
inc
cmc
sahf
jae
cwde
mov
(bad)
(bad)
(bad)
jmp
cmps
inc
xlat
mov
sbb
(bad)
xchg
add
xchg
(bad)
(bad)
push
xor
ret
push
repz
push
mov
or
aam
jecxz
ror
retf
ret
test
sub
pop
mov
sbb
test
(bad)
(bad)
call
adc
cmps
jae
mov
out
xor
pop
cmp
popa
or
scas
mov
pop
sub
mov
push
pop
das
fist
sbb
popf
leave
push
add
aam
scas
add
(bad)
dec
jmp
mov
push
daa
fwait
mov
shl
push
(bad)
push
popa
(bad)
loope
popa
pusha
pop
mov
mov
aas
xchg
rol
xchg
cmp
mov
pop
lods
push
js
(bad)
jmp
push
jecxz
fnstcw
xchg
call
sub
add
and
cmp
lods
mov
adc
push
adc
add
adc
(bad)
(bad)
(bad)
dec
dec
jmp
inc
js
fabs
mov
push
add
clc
test
push
push
pop
mov
(bad)
(bad)
inc
aas
in
out
push
mul
inc
mov
cli
xchg
add
pop
fst
jo
(bad)
inc
add
jb
mov
fidivr
stos
mov
inc
stos
jo
and
movs
js
popf
test
and
(bad)
cmp
mov
mov
sbb
sub
gs
ds
(bad)
mov
and
(bad)
loop
(bad)
call
sub
imul
mov
aas
xchg
aad
mov
daa
adc
mov
cld
(bad)
(bad)
(bad)
jp
sub
or
pop
bound
mov
inc
mov
cmps
aam
xor
or
adc
adc
jp
sub
lds
(bad)
call
cwde
inc
in
cli
lock
inc
mov
dec
ror
adc
shl
mov
es
(bad)
(bad)
push
ss
jle
xor
pop
jno
sahf
mov
test
mov
(bad)
jmp
pop
jns
push
sti
test
daa
ins
test
mov
ficom
cmp
push
clc
in
(bad)
(bad)
(bad)
call
lds
jo
cmp
add
cli
(bad)
fs
(bad)
cs
add
lds
sbb
jmp
lea
outs
jge
dec
test
sbb
pop
lds
fcom
mov
dec
dec
mov
mov
push
shr
mov
cmps
push
sub
jnp
loope
jmp
mov
lds
cmp
iret
push
mov
test
xchg
xchg
sbb
hlt
clc
sbb
jmp
dec
pop
add
jp
(bad)
push
inc
push
and
jmp
mov
jb
inc
fwait
add
dec
jmp
(bad)
in
idiv
imul
sub
mov
mov
push
es
xchg
mov
fstp
sbb
and
lock
cld
mov
sub
inc
jg
adc
ret
push
jns
cmps
in
test
(bad)
call
sahf
ret
(bad)
cmp
cld
dec
or
jecxz
popa
or
push
and
mov
xor
push
sbb
adc
sub
popf
mov
mov
dec
in
cmp
call
pop
les
sub
aas
mov
bound
in
jmp
push
add
imul
fs
adc
xchg
dec
(bad)
cld
xlat
ss
xor
or
(bad)
dec
iret
retw
push
dec
inc
sbb
cmp
dec
dec
adc
ins
xor
(bad)
(bad)
dec
xor
jns
in
xor
pop
jns
mov
jl
and
popa
shl
cld
mov
(bad)
(bad)
call
sbb
push
lods
jp
leave
mov
push
test
sahf
(bad)
(bad)
(bad)
(bad)
jns
in
int3
cdq
xlat
loope
(bad)
xor
not
stos
call
push
ret
sar
sar
shl
push
movs
repnz
mov
shr
(bad)
lahf
into
or
(bad)
jg
fsub
xchg
fild
lods
popf
lock
loope
out
add
xlat
(bad)
call
shl
sub
test
retf
call
fwait
repz
call
loope
ror
loop
or
pop
stos
mov
sar
call
lods
movs
(bad)
fnstenv
add
js
imul
jnp
mov
std
jno
daa
(bad)
test
cmp
push
adc
inc
and
les
fwait
dec
adc
fs
xor
(bad)
jg
leave
push
aaa
fsubr
fild
scas
jg
es
cmp
xchg
outs
jae
loopne
(bad)
in
push
(bad)
out
push
outs
aas
mov
push
scas
sub
mov
jmp
mov
(bad)
(bad)
(bad)
call
test
pop
adc
pop
pusha
cmp
addr16
stc
rol
sub
clc
cmp
movs
pop
(bad)
(bad)
(bad)
call
xor
adc
mov
repnz
mov
jne
jne
inc
xchg
ja
loop
cld
(bad)
inc
add
into
dec
or
mov
stos
ret
inc
pop
iret
fwait
sbb
call
cld
add
mov
mov
cmp
jmp
xchg
xor
fcomip
pop
jne
push
test
fwait
sbb
lahf
inc
ja
js
ds
mov
jae
xchg
ss
and
inc
fcomp
(bad)
ja
icebp
cdq
jne
mov
mov
mov
push
dec
mov
xor
js
jb
std
push
and
clc
mov
ficom
popa
add
or
dec
push
adc
jl
jne
add
or
push
movs
and
sub
mov
push
shr
ins
push
inc
or
(bad)
cmc
add
or
retf
adc
push
inc
call
bound
adc
mov
cmp
and
jne
jo
imul
pop
imul
add
and
push
imul
popf
pusha
add
out
push
adc
and
xchg
push
nop
inc
inc
pusha
push
push
fcomp
or
push
lds
pop
push
add
inc
fidivr
sbb
mov
push
mov
adc
test
and
dec
pop
push
outs
outs
ins
push
div
xor
jo
push
and
gs
or
sbb
lahf
sbb
nop
fcmovnu
data16
shl
je
or
into
adc
imul
test
js
stos
pop
add
or
mov
xchg
inc
stc
outs
mov
inc
jns
push
imul
loopne
(bad)
inc
loope
mov
pop
push
es
jmp
outs
ins
ins
ret
popa
push
add
mov
sub
(bad)
sub
sub
pushf
and
fiadd
bound
ficom
push
outs
dec
xor
inc
xchg
lock
out
fst
(bad)
jbe
adc
imul
mov
outs
jp
xor
icebp
inc
adc
push
and
pushf
bound
jo
pop
ins
dec
(bad)
push
pop
ds
lock
icebp
inc
ins
jne
mov
jne
data16
push
xor
mov
ret
mov
push
add
dec
call
in
enter
and
or
push
pop
ds
jne
arpl
add
or
popa
push
add
cs
push
adc
cs
push
push
out
pusha
js
stos
sub
popa
adc
and
(bad)
lock
adc
cmp
shl
or
fsub
inc
add
inc
or
dec
movzx
sub
dec
push
pop
mov
test
mov
dec
inc
dec
sbb
imul
into
in
xchg
jae
arpl
and
das
rcr
(bad)
mov
pop
xchg
out
mov
js
add
in
push
sub
cs
sub
pop
clc
outs
data16
into
imul
call
cwde
dec
fdivp
jge
dec
adc
push
jne
and
xor
fisub
sub
jecxz
fld
jae
enter
fcomi
clc
ror
adc
adc
out
or
pop
inc
sub
int
fimul
jge
xor
mov
jmp
jno
xchg
lods
xor
call
pusha
aaa
inc
adc
xchg
pop
push
push
dec
jno
sub
xor
loopne
or
out
or
es
jp
bound
inc
mov
inc
jae
adc
push
sbb
mov
add
fdiv
ret
mov
cmp
fcmovnb
bswap
outs
jns
int
adc
push
sti
sbb
jbe
xchg
and
pop
pop
imul
pop
repz
int
ins
outs
mov
cmc
xor
pop
mov
sbb
pop
adc
imul
test
sbb
shl
lock
pop
sub
outs
and
fld
push
adc
arpl
and
outs
aaa
js
pop
stos
(bad)
loope
xor
es
and
fld
inc
js
js
sbb
outs
jne
or
jmp
adc
mov
outs
pop
pop
mov
or
clc
sahf
and
aaa
inc
in
mov
out
pop
stos
jno
mov
or
or
jo
jae
xor
cmp
and
add
daa
jecxz
mov
fdiv
dec
xchg
mov
sub
rcr
push
cmp
sbb
outs
nop
fs
stos
jae
out
outs
(bad)
mov
sbb
call
test
dec
xor
pushf
dec
push
add
xchg
xchg
cmps
repnz
icebp
aam
mov
leave
push
outs
add
mov
inc
mov
mov
js
or
push
mov
xchg
push
gs
shl
sub
arpl
cli
and
pop
mov
dec
cmps
adc
cmp
(bad)
pop
mov
(bad)
dec
and
push
sbb
push
inc
sbb
mov
cmp
aaa
dec
adc
dec
out
sbb
or
pop
sbb
mov
fcmovnu
sub
add
lods
mov
and
push
fsubr
jp
or
rol
in
sar
shl
dec
mov
arpl
fs
mov
sub
fstp
iret
xor
push
outs
push
popa
cmps
inc
push
inc
jb
and
push
and
in
inc
push
into
pop
mov
mov
das
inc
inc
lds
arpl
loope
std
inc
imul
stos
icebp
adc
sahf
sub
pop
push
mov
mov
jb
fs
out
lock
jle
punpckldq
inc
es
sbb
xor
mov
dec
jae
jno
inc
fdivr
cmp
nop
test
and
pop
xchg
jl
js
enter
mov
dec
inc
cmp
sbb
cs
loopne
adc
loop
mov
fnstenv
xor
push
pop
xor
or
adc
in
jnp
enter
inc
push
push
adc
inc
add
and
cld
pop
xchg
fcomp
pop
jnp
or
dec
outs
dec
sbb
and
sub
ds
clc
ret
lods
imul
mov
xchg
imul
add
or
imul
push
xchg
mov
inc
add
add
pop
loope
cmp
ret
mov
xlat
cmp
scas
and
pop
(bad)
outs
inc
arpl
pop
xor
inc
jo
sbb
icebp
sbb
xor
add
jb
inc
jae
js
mov
ins
and
jb
(bad)
(bad)
(bad)
outs
and
or
nop
fisub
(bad)
sbb
imul
add
xchg
pushf
push
adc
sbb
js
xlat
adc
mov
and
mov
gs
add
lea
aad
xlat
push
aaa
cmp
pop
lock
or
inc
cmps
push
push
dec
data16
test
fstp
pop
ins
pop
xchg
push
jo
fadd
scas
arpl
fidiv
cmp
(bad)
lds
call
icebp
pop
scas
xor
icebp
push
cld
xchg
pop
es
fild
outs
jmp
test
jmp
adc
mov
xchg
cmp
fnstsw
aaa
mov
mov
ret
xchg
or
fwait
cld
popa
imul
dec
mov
xchg
mov
xor
push
adc
dec
push
hlt
and
jmp
enter
add
sub
fs
dec
sub
push
push
pop
xor
ja
push
imul
fs
imul
xchg
adc
xor
mov
pop
push
dec
mov
inc
std
imul
adc
adc
cmp
mov
pop
sub
sub
dec
je
or
and
cmp
cmp
adc
pop
sub
retf
test
mov
pop
icebp
pop
popf
adc
xor
inc
add
pop
icebp
outs
fist
mov
lods
cmp
ins
and
ins
ins
adc
adc
into
call
or
or
jo
gs
in
mov
cmps
shr
(bad)
inc
sbb
push
je
shl
outs
rcr
movs
pop
sbb
sub
inc
mov
and
dec
cld
adc
ins
lahf
loopne
add
adc
int
out
add
call
cdq
push
stos
lock
js
pop
lds
push
push
inc
out
adc
dec
fimul
sub
repz
dec
sub
lock
fdivr
sbb
or
pop
dec
mov
pop
inc
push
jne
data16
cmp
enter
add
sub
mov
ds
es
imul
inc
jb
retf
dec
dec
adc
inc
cmp
push
add
xlat
pop
dec
and
adc
dec
or
mov
div
mov
inc
std
rol
inc
pop
xor
addr16
(bad)
add
add
(bad)
mov
prefetch
push
fld
add
icebp
pusha
pop
add
jnp
xor
and
pop
mov
mov
dec
add
push
fistp
mov
and
mov
cmps
sub
jb
popa
adc
dec
jo
and
mov
mov
inc
cs
out
pop
dec
sub
cmp
sahf
jae
arpl
xlat
pusha
mov
loop
pop
lahf
add
mov
jg
push
or
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
pop
inc
add
add
