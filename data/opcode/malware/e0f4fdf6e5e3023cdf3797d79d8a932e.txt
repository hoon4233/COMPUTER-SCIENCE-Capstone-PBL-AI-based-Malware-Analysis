aam
push
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
sub
rol
jne
out
or
mov
push
push
pop
mov
dec
ja
cmp
sub
mov
or
cmp
jecxz
repnz
sbb
aad
add
push
mov
loope
and
lahf
aaa
dec
out
jmp
mov
rcr
mul
cmp
int3
dec
sbb
(bad)
into
xchg
push
lock
jnp
outs
test
outs
bound
inc
loope
dec
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
xor
add
and
jb
outs
addr16
add
add
add
add
add
and
add
add
add
add
inc
push
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
fcmovb
add
add
add
lds
add
add
enter
add
add
int3
add
add
add
add
add
pop
add
add
add
add
add
add
jp
add
add
hlt
add
add
add
add
clc
add
add
add
add
add
jnp
xor
xor
sub
sub
sub
sub
arpl
xor
dec
outs
fs
gs
jns
jb
xor
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
adc
call
in
adc
and
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
ret
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
inc
mov
add
rol
add
adc
add
jae
je
arpl
jo
popa
add
add
add
add
add
pop
mov
jne
jl
sti
ja
inc
aas
mov
push
rcl
push
pop
mov
xor
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
cmc
push
cmp
aas
pop
or
js
and
adc
pop
pop
rcr
pusha
ds
imul
pop
fild
outs
jae
pop
pop
daa
fsub
orps
idiv
mov
rcl
pop
inc
mov
cmp
cmp
aas
mov
push
rcl
push
pop
push
emms
imul
ja
add
mov
push
rcl
push
pop
mov
dec
mov
cmp
aas
mov
push
rcl
dec
pop
mov
jne
js
sti
ja
mov
rcl
or
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
xor
ja
scas
aas
mov
push
ret
pop
mov
jne
js
jmp
das
mov
rcl
push
pop
pop
shl
sub
aas
mov
push
rcl
push
pop
mov
jne
js
sti
ja
mov
shl
or
mov
cmp
aas
mov
push
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
daa
mov
jge
js
sti
ja
mov
fidiv
push
pop
std
pcmpeqw
cmp
aas
mov
daa
mov
jp
mov
xor
jge
sti
push
das
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
shl
jne
arpl
or
div
mov
rcl
push
pop
mov
jo
js
sti
ja
mov
rcl
dec
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
pop
loopne
ja
mov
rcl
or
mov
sbb
jl
mov
rcl
push
add
mov
aas
mov
push
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
les
push
add
cmp
pop
das
mov
mov
pcmpeqw
sub
ja
xchg
sbb
push
or
js
sti
ja
mov
rcl
push
pop
mov
ja
js
(bad)
xchg
jecxz
es
rcl
or
sti
jno
stos
shl
push
mov
jg
inc
ds
ja
mov
fst
push
add
sub
jns
mov
rcr
sbb
jb
sti
ja
mov
mov
push
rcl
sysret
mov
pop
dec
jle
(bad)
ja
mov
fcom
push
pop
mov
jne
js
sti
ja
mov
rcl
or
mov
and
pop
sub
in
adc
pop
xchg
jbe
push
adc
push
mov
push
fdivr
pop
mov
pop
ins
js
icebp
pop
sub
leave
and
pop
fwait
push
jne
jp
sti
data16
cs
push
rcl
push
pop
mov
jne
js
sti
ja
mov
rcr
push
pop
mov
jno
js
(bad)
mov
rcl
push
daa
test
jne
push
aaa
sti
ja
mov
shl
hlt
add
minps
cmp
adc
(bad)
pop
mov
push
bound
icebp
push
fidivr
adc
das
mov
cmp
add
mov
rcl
push
push
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
jg
mov
mov
push
repnz
mov
outs
push
das
mov
rcl
cs
pcmpeqw
cmp
dec
mov
push
or
pop
adc
push
jae
jle
sti
ja
mov
rcl
sbb
mov
jne
js
cmc
ja
mov
fiadd
push
cwde
or
jle
sub
fmul
push
rcr
rcr
sbb
ins
imul
aas
mov
push
pop
mov
jne
js
sti
ja
stos
aas
mov
pop
rcl
push
add
sub
jo
push
mov
sar
cmp
cmp
lods
push
xor
cmp
aas
test
push
rcl
cmp
mov
in
(bad)
ja
mov
shl
pop
ror
jne
jns
sti
data16
cmp
or
adc
pop
mov
jg
js
retf
mov
stc
adc
pop
sahf
pcmpeqw
cmp
aas
mov
push
rcl
fiadd
mov
jae
popa
aaa
sar
sub
xchg
adc
pop
mov
jne
js
sti
ja
mov
stc
jmp
rcl
adc
sbb
mov
or
aas
mov
push
rol
and
push
cmp
sbb
push
pop
mov
cmp
aas
mov
push
rcl
sub
mov
movs
ins
js
std
push
ss
arpl
push
mov
adc
lock
jne
js
sti
ja
cmps
xor
jmp
js
icebp
pop
ss
pop
add
and
in
pcmpeqw
cmp
cmp
or
adc
pop
mov
push
push
cmp
adc
push
pop
xchg
pcmpeqw
cmp
aas
mov
pop
rcl
or
scas
add
call
push
rcl
pop
mov
jg
lds
ror
add
sbb
outs
pusha
push
xchg
call
mov
push
rcl
push
push
sahf
aas
jae
jo
sti
ja
mov
rcl
push
pop
mov
jne
js
fbstp
mov
repnz
pop
sahf
pcmpeqw
xor
ja
cwde
and
sub
repz
xor
cmp
aas
scas
or
pop
and
fdivr
cmc
ja
mov
test
js
adc
push
cmp
adc
pop
push
fist
push
pop
xchg
pcmpeqw
cmp
aas
mov
push
rcl
add
mov
jne
js
shl
mov
loop
push
pop
gs
jecxz
add
cmp
pusha
dec
mov
pop
mov
jno
js
cld
ja
mov
retf
cmp
sbb
xchg
sar
mov
rcl
add
lods
add
call
mov
push
rcl
push
push
sahf
aas
jae
jo
sti
ja
mov
rcl
and
push
cmp
pop
mov
push
not
push
pop
xchg
pcmpeqw
ss
ja
cwde
sub
outs
sbb
push
xor
cmp
aas
test
js
pop
and
fdivr
jmp
das
mov
movs
or
adc
push
cmp
adc
pop
push
ficom
push
pop
mov
jne
pop
cmp
aas
mov
push
rcl
push
pop
mov
jg
js
shl
mov
add
pop
mov
outs
pusha
push
in
push
popa
jmp
mov
jne
jb
inc
pusha
add
and
sub
sar
pop
mov
pop
jno
push
push
ja
mov
stos
push
rcl
or
popa
jg
cld
ja
mov
test
push
pop
lahf
pcmpeqw
cmp
aas
mov
push
rcl
push
pop
mov
push
cmc
sub
ja
fwait
out
mov
push
(bad)
cmp
mov
cmc
push
mov
pop
aam
adc
ss
sub
ror
jns
js
std
ins
psubd
mov
into
les
and
jp
cmp
pop
xchg
cmp
lea
adc
mov
ror
xor
jb
cmp
ja
ds
add
nop
sysret
mov
pop
mov
or
adc
mov
jno
js
sar
add
pushw
pop
mov
jne
js
sti
ja
jmp
mov
ja
adc
ds
jne
js
sti
push
das
mov
rcl
push
pop
mov
jne
js
sti
ja
cmp
mov
loop
adc
xlat
mov
and
jle
or
jl
add
add
(bad)
jp
mov
fstp
xchg
jns
pcmpeqw
cmps
fisub
cmp
adc
mul
xor
pusha
ja
xor
adc
xlat
pop
sub
dec
inc
inc
ror
adc
push
cmps
or
imul
sub
aad
pop
pop
mov
jbe
mov
test
mov
cmp
mov
sub
jle
scas
aaa
jmp
inc
aam
push
add
push
jb
jmp
sub
xor
out
icebp
adc
mul
das
dec
(bad)
lods
ret
sbb
stc
mov
jge
imul
rol
lods
or
je
pcmpeqw
cmp
mov
push
jo
or
jp
pushf
ja
mov
enter
mov
jne
bound
aas
mov
push
rcl
push
pop
mov
jne
js
in
ja
mov
in
dec
dec
push
mov
jne
js
sti
pusha
and
test
mov
sbb
cmp
cmp
add
rcl
push
pop
mov
jb
js
sti
ja
mov
aad
push
pop
add
jle
rcr
sub
add
pop
mov
jne
push
or
xor
mov
rcl
daa
pop
mov
inc
push
cmp
adc
push
pop
hlt
pcmpeqw
cmp
aas
mov
inc
rcl
or
lods
add
cmc
jae
mov
rcl
push
add
cmp
mov
stc
push
mov
cmp
sbb
mov
rcl
push
push
and
pop
mov
arpl
adc
push
sub
sub
lods
jp
add
out
push
pop
mov
jne
js
sti
ja
aam
mov
cdq
rcl
push
fidiv
cmp
aas
fld
push
rcr
je
js
sti
ja
(bad)
ds
sub
adc
or
cmp
aas
xchg
push
rol
pop
pop
mov
push
jne
cs
add
retf
cmp
pop
mov
jg
jae
in
mov
jae
adc
pop
xchg
or
out
das
mov
jmp
imul
aas
fwait
pop
push
rcl
add
mov
cmp
aas
fwait
or
push
jp
mov
outs
jns
and
gs
stc
ror
sub
imul
inc
rol
rcl
rcr
sbb
outs
pop
mov
ja
sahf
lds
push
pop
mov
jp
push
out
mov
inc
pop
inc
add
xor
add
js
std
sub
rcl
push
daa
cs
push
sub
ja
lods
cmp
lock
dec
push
jb
jo
call
dec
dec
out
sub
jns
sti
push
mov
pop
rcl
or
fist
out
cmp
sub
icebp
clc
movs
or
jp
sti
push
aam
aas
mov
dec
rcl
or
push
jb
jo
jmp
push
shl
rol
minps
cmp
sub
cmp
sub
icebp
adc
das
ret
push
rol
mov
push
pop
mov
push
sbb
sti
jbe
mov
mov
push
pop
jmp
ja
mov
sub
icebp
push
mov
and
fs
lods
ret
sbb
(bad)
inc
arpl
call
dec
dec
out
adc
sub
add
mov
mov
sbb
jge
cs
push
rcl
push
pop
mov
jne
js
sti
ja
mov
rcr
pop
mov
jne
js
sti
ja
sahf
aas
mov
push
pop
or
pop
mov
js
imul
mov
pop
inc
fdiv
or
mov
push
dec
jns
sti
pop
cmp
ret
sbb
sbb
out
sti
ja
pop
cmp
add
adc
add
cmp
fs
mov
sub
mov
cmp
aas
mov
push
rcl
sbb
push
cmp
aas
mov
push
rcl
push
pop
movs
add
outs
cs
pop
sti
test
mov
shr
ins
sub
xor
mov
rcl
push
pop
mov
add
js
jne
das
mov
adc
push
pop
or
jne
js
sti
ja
mov
rcl
mov
mov
and
js
iret
ja
mov
int
es
(bad)
jle
cmp
lea
mov
rcl
or
ds
ja
mov
mov
jnp
adc
add
sub
out
mov
rcl
add
mov
outs
push
aaa
call
stos
adc
fs
clc
dec
push
gs
cmps
call
mov
push
pop
mov
cs
lods
sub
sbb
cmp
int
and
push
dec
ret
es
fsub
mov
outs
data16
dec
push
inc
ror
jg
pop
mov
sbb
cmp
sub
cmp
out
icebp
sbb
stc
outs
push
sub
ja
mov
rcl
sti
push
int3
popa
ja
js
sti
ja
xchg
sub
sbb
mov
push
inc
js
call
mov
push
xlat
adc
push
scas
add
sti
ja
mov
rcl
sbb
mov
jne
js
fdiv
mov
fcom
data16
inc
sub
jns
sti
ja
mov
stc
ficomp
sub
adc
inc
mov
movs
aas
mov
jns
sbb
inc
mov
jne
js
sti
ja
mov
rcl
or
mov
jne
js
sub
cmp
push
pop
cmps
aas
ja
das
cmp
aas
mov
push
pop
mov
jg
js
sti
ja
mov
fcom
push
pop
mov
jne
push
cmp
aas
mov
push
rcl
ficom
mov
jae
popa
aaa
shl
jg
xchg
adc
pop
mov
jne
js
icebp
pop
xchg
cmps
adc
sbb
cmps
or
stos
pcmpeqw
and
pop
test
mov
pcmpeqw
aaa
std
xor
mov
rcl
adc
mov
imul
mov
retf
pop
mov
and
cs
aas
mov
push
rcl
push
sbb
and
jb
(bad)
loope
add
cmp
femms
pop
mov
js
ja
mov
aam
push
pop
mov
jne
jg
sti
ja
mov
rcl
or
lahf
and
push
or
aas
mov
push
rol
sbb
dec
jo
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
dec
adc
pop
mov
cmp
ja
xchg
pop
mov
pop
neg
es
jg
je
mov
mov
push
pop
mov
jne
js
sti
ja
mov
mov
push
rcl
push
jns
pcmpeqw
cmp
jnp
imul
adc
jle
js
out
mov
scas
aas
mov
and
adc
or
jb
neg
cmp
add
mov
cmp
aas
mov
push
rcl
push
pop
mov
jne
js
cmc
ja
mov
enter
sbb
jle
loope
add
adc
push
sub
jp
shl
aas
mov
push
rcl
sbb
push
cmp
adc
pop
push
fist
push
pop
mov
jne
push
cmp
aas
mov
push
rcl
cmp
push
cmp
add
add
adc
pop
sbb
jle
in
add
cmp
dec
add
js
sti
jo
mov
addr16
std
scas
and
je
push
push
jne
rcr
mov
pop
clc
adc
pusha
push
and
pop
mov
push
test
push
pop
mov
jne
push
or
aas
mov
push
rcl
add
mov
pop
push
cmp
adc
add
adc
pop
mov
jne
pop
cmp
aas
mov
jne
sbb
jne
fs
mov
push
ror
pop
nop
arpl
rol
sub
pop
clc
or
push
pcmpgtd
cmp
ds
inc
stc
and
inc
mov
cmp
aas
mov
push
rcl
and
mov
push
push
cmp
aas
mov
push
not
push
pop
gs
jne
jle
jecxz
add
cmp
dec
push
mov
jne
js
sti
pusha
and
test
mov
sbb
icebp
pop
aaa
mov
sbb
arpl
adc
mov
je
js
rol
sti
aaa
mov
push
rcl
push
pop
xchg
pcmpeqw
cmp
aas
mov
push
rcl
and
push
cmp
out
test
push
or
sbb
test
push
aas
mov
push
rcl
push
sbb
(bad)
jecxz
add
cmp
sbb
mov
or
aas
mov
push
rol
and
push
cmp
pop
mov
push
fcom
push
pop
xchg
pcmpeqw
cmp
aas
mov
push
rcl
sub
mov
movs
jno
cmp
adc
add
pop
lock
jne
js
sti
ja
movs
xor
jmp
push
cmp
xor
and
in
pcmpeqw
cmp
cmp
or
adc
pop
mov
push
push
cmp
sbb
push
pop
mov
cmp
aas
mov
dec
rcl
or
scas
add
call
push
rcl
pop
mov
jg
lds
ror
add
cmp
pop
mov
xchg
call
mov
push
rcl
push
push
sahf
aas
jae
jo
sti
ja
mov
rcl
and
mov
push
push
cmp
adc
push
pop
xchg
pcmpeqw
and
ja
cwde
and
or
pop
sub
jns
sti
ja
mov
stc
lods
adc
dec
adc
int
clc
jae
xchg
aas
mov
jns
sbb
cmc
jge
pop
dec
xor
dec
call
pop
leave
es
cmps
xor
mov
not
and
jl
xchg
dec
or
adc
ins
fdivr
inc
in
sbb
jg
pop
mov
retf
sub
mov
scas
movs
mov
adc
dec
out
scas
jg
jnp
sahf
cmp
jp
hlt
adc
adc
dec
aad
popf
xchg
les
out
mov
es
out
sbb
jg
fld
pushf
xchg
std
xchg
enter
cmp
sahf
mov
ret
jbe
out
clc
scas
sbb
test
adc
mov
fadd
stc
mov
push
jno
push
scas
dec
outs
hlt
and
xor
rcr
data16
imul
popa
enter
aas
retf
adc
hlt
xchg
or
stos
pushf
sub
movs
sub
retf
jp
mov
pop
out
and
mov
mov
lea
cs
sbb
retf
in
fistp
ins
lods
sub
shl
adc
fsin
ret
mov
add
call
cmp
daa
mov
inc
ins
inc
arpl
push
sti
or
push
cmp
and
pop
dec
jne
das
jmp
cmps
mov
aaa
sbb
movs
add
sbb
cmps
lods
push
ss
nop
and
sub
add
hlt
adc
rcl
adc
sahf
lahf
cmps
pushf
dec
mov
rcr
cli
das
mov
cmp
enter
xchg
pop
dec
ins
fld
test
daa
scas
(bad)
lods
outs
cmp
sar
or
adc
xor
call
(bad)
movs
push
jae
xchg
data16
js
mov
mov
xchg
xor
inc
xchg
gs
pop
and
dec
sbb
pop
in
jae
push
fadd
bound
enter
call
ja
jb
mov
mov
popa
jge
popa
sahf
xchg
das
(bad)
and
mov
fbstp
and
ins
sbb
and
xchg
or
sbb
loopne
int
test
ins
bound
cld
pop
cmp
xor
test
dec
inc
sub
mov
lahf
call
mov
push
cmp
and
out
xchg
imul
jno
inc
sbb
out
add
movs
or
inc
dec
cmps
push
call
add
iret
dec
ret
adc
add
dec
call
test
inc
das
fisubr
sub
jne
or
jo
xchg
cdq
mov
out
mov
push
push
sub
or
out
xchg
sbb
jb
sbb
test
cmp
icebp
std
mov
inc
fsubr
sbb
jmp
fcmovnu
int
and
dec
ficom
div
in
pop
fucom
or
xorps
mov
cmp
fwait
mov
lock
dec
loop
jge
scas
cwde
icebp
stos
fisttp
lahf
dec
sbb
enter
pop
xchg
in
fcmove
int3
aam
xchg
js
push
dec
add
sub
in
jb
or
sbb
and
int3
jge
push
jg
xchg
mov
stos
(bad)
out
mov
sub
(bad)
adc
cmp
dec
add
mov
xor
jne
push
mov
icebp
aaa
iret
maxps
inc
push
cdq
pop
mov
and
retf
mov
shl
and
mov
dec
js
sti
sub
loop
mov
and
pop
jbe
mov
cs
movs
jbe
or
dec
mov
iret
pop
pushf
inc
inc
les
cs
dec
sbb
xchg
ret
push
cmps
sbb
pop
mov
call
mov
pusha
and
je
xor
pop
pop
dec
xor
dec
fild
in
lock
arpl
(bad)
sbb
pop
sbb
adc
jnp
adc
lock
pop
clc
mov
cmps
(bad)
sti
lahf
cdq
icebp
retf
xchg
dec
dec
and
shl
dec
sub
aad
or
lea
and
sbb
jp
jae
scas
ds
psubw
xchg
repnz
stos
push
dec
pusha
fadd
jg
gs
ficomp
test
mov
add
cmp
int
jns
xlat
mov
add
retf
inc
mov
pop
loopne
xor
fcomip
cmp
push
inc
sti
test
lods
cdq
fs
sti
arpl
rcr
cld
dec
xor
mov
or
loopne
adc
(bad)
daa
ror
std
in
sbb
mov
inc
(bad)
sti
jp
fisub
(bad)
bound
pop
jl
sbb
adc
adc
vpmacsswd
jg
dec
call
mov
repnz
sub
jno
jg
add
xor
jae
cmps
cmps
cdq
mov
mov
jmp
cmp
popf
and
cdq
push
test
dec
fcmovbe
mov
cli
jae
psubd
dec
sbb
add
and
jmp
or
inc
mov
cdq
loop
popa
add
inc
push
sub
popa
ins
aad
(bad)
push
inc
(bad)
mov
mov
dec
add
xchg
mov
call
in
jp
xchg
jmp
leave
in
dec
int
pop
sbb
jno
fs
in
not
inc
shr
cwde
mov
push
xor
xchg
out
sub
mov
repnz
rol
mov
cmp
cli
push
bound
inc
je
push
mov
scas
mov
call
repnz
cwde
mov
xlat
push
test
es
or
iret
mov
sbb
(bad)
xor
xchg
push
jb
xchg
dec
push
push
cmps
hlt
jecxz
cmc
gs
ss
pop
gs
(bad)
pushf
dec
or
ret
mov
xor
dec
xlat
mov
ss
push
inc
mov
mov
sahf
loopne
gs
push
jae
fdivr
push
push
sbb
mov
add
ss
add
mov
mov
mov
or
les
or
je
fld
add
scas
iret
dec
push
cmps
es
clc
daa
push
das
clc
cmps
pop
aas
sub
push
mov
or
add
pop
push
sub
out
mov
inc
retf
int
ja
int3
iret
popa
cmps
cdq
dec
popa
popa
inc
or
in
add
mov
movs
(bad)
and
arpl
aas
mov
xlat
retf
sub
test
(bad)
(bad)
shl
inc
inc
js
mov
jle
xchg
in
xchg
inc
inc
fcomp
or
mov
jno
lods
cmp
push
mov
cld
jns
jmp
push
or
call
jl
ins
cmp
or
stos
mov
iretw
inc
xor
dec
ret
jecxz
in
jmp
pop
aas
sub
fwait
inc
mov
enter
xor
inc
jge
call
jo
or
add
cld
gs
cmp
jae
ins
fcom
push
inc
or
daa
leave
or
icebp
and
iret
or
add
imul
std
enter
xor
dec
jb
sub
inc
call
fmul
inc
xchg
inc
dec
mov
cmp
dec
xlat
movlps
mov
xchg
add
mov
pushf
cmp
xchg
aad
cmp
and
sbb
data16
jbe
popf
push
loope
out
xchg
adc
stc
inc
or
mov
int3
cs
jp
test
cmc
fisttp
xchg
inc
rol
movs
aas
mov
in
and
retf
push
imul
push
sub
jb
push
mov
jg
lock
xlat
test
in
fldenv
in
fst
pop
xchg
cdq
mov
loop
and
aam
call
je
pop
xchg
sub
pop
stc
pop
cmp
(bad)
cmp
(bad)
shl
pop
pop
call
xchg
push
rcr
mov
dec
fs
push
imul
inc
nop
jmp
dec
test
add
das
jmp
outs
adc
rol
push
imul
jmp
dec
sbb
scas
cmps
xchg
test
(bad)
pop
push
out
dec
in
jg
bnd
xor
or
fstp
lea
fist
aas
cld
and
(bad)
cs
ss
inc
retf
mov
(bad)
push
bound
dec
jmp
jge
inc
sbb
aad
lock
gs
fcomp
aaa
jecxz
cmc
add
nop
mov
mov
aam
inc
xchg
xor
ja
rcr
es
mov
adc
push
inc
xlat
dec
in
(bad)
fild
sub
jge
ror
pop
dec
enter
pop
(bad)
scas
pop
pop
out
ret
out
ror
sbb
pop
inc
push
call
dec
stos
add
mov
xor
cli
(bad)
ret
ins
mov
hlt
sbb
mov
inc
xchg
adc
mov
repz
inc
movs
push
push
stos
mov
imul
pop
dec
rcl
cmps
jnp
iret
mov
je
lods
or
in
mov
or
sahf
int3
xor
jecxz
int3
or
inc
jnp
mov
pop
adc
sub
ins
push
jecxz
xor
call
dec
cmp
mov
inc
inc
dec
or
add
imul
and
sti
sbb
fild
rcr
sbb
or
cwde
push
adc
stos
addr16
les
xor
sub
mov
jge
jae
(bad)
imul
jmp
and
fidiv
mov
push
fbstp
sub
cwde
lods
rol
cmp
push
mov
mov
das
mov
jnp
push
icebp
fidivr
cmp
mov
les
mov
xchg
js
psllw
loope
call
inc
sub
and
(bad)
pop
retf
pop
cmp
dec
xchg
and
push
xor
int
push
mov
outs
xor
paddd
inc
mov
mov
out
push
enter
outs
xor
push
out
ins
mov
pop
mov
in
adc
cmp
sbb
mov
fwait
cmp
pop
movs
fcomp
inc
test
mov
and
in
test
(bad)
sbb
test
out
sub
and
jbe
adc
lods
mov
int3
jnp
jbe
and
push
ret
out
icebp
rcr
mov
dec
or
rcr
and
dec
dec
retf
and
repz
xlat
lods
push
jecxz
popa
idiv
jl
and
pop
jmp
js
push
daa
stos
mov
adc
idiv
mov
mov
cmp
adc
jnp
add
fidiv
std
push
sub
imul
fptan
arpl
pop
jp
pop
xchg
enter
aaa
jmp
dec
xchg
xchg
inc
(bad)
(bad)
repz
and
push
les
xchg
jle
mov
sub
add
movs
in
and
or
sub
sub
cmp
cwde
add
cmc
stos
jns
daa
lods
push
or
aaa
std
mov
lahf
xor
aad
add
mov
cmp
sub
jl
pop
fcom
scas
pop
outs
xchg
test
dec
shr
inc
fadd
pop
adc
fst
and
sbb
cmc
cli
sub
or
cmp
fld
sub
int
dec
xor
mov
pop
(bad)
in
xor
and
rcl
jmp
mov
lock
xchg
push
cld
dec
ror
xor
cmps
mov
sahf
mov
(bad)
sti
rcr
pop
jl
pop
loope
xor
pop
stos
fs
sbb
mov
jmp
inc
sub
mov
or
xchg
mov
ret
sub
test
xchg
adc
xchg
jmp
xchg
enter
sbb
dec
add
ins
rcl
loope
fdecstp
fiadd
(bad)
lds
mov
adc
sbb
pop
xor
ds
xchg
(bad)
aam
loope
repnz
lahf
or
inc
clc
dec
fwait
icebp
(bad)
sbb
pushf
aad
and
aas
push
mov
xchg
loop
and
or
repnz
ins
mov
push
push
(bad)
jne
js
mov
out
xchg
xlat
stc
dec
jb
stc
mov
push
fmul
sub
mul
mov
fwait
xor
imul
mov
sub
movs
lea
cmp
jne
push
aas
xchg
add
pop
jne
sti
lds
mov
xor
add
cmps
push
aaa
lahf
push
pop
stos
lds
xchg
outs
pushf
push
cwde
mov
dec
push
add
loop
sub
pop
lock
dec
mov
inc
dec
mov
test
shl
inc
enter
es
(bad)
cmp
pop
mov
cmp
add
cs
movs
xlat
cmp
mov
jmp
xor
in
pop
lahf
ins
xor
lea
call
and
mov
test
arpl
pop
inc
sub
mov
mov
adc
dec
lock
arpl
pusha
mov
mov
sbb
hlt
and
mov
js
pop
mov
xor
ficom
jp
cmp
xor
push
movs
jae
or
cmp
in
pushf
fdivp
iret
or
hlt
cmps
std
scas
ins
mov
loop
push
push
in
sbb
inc
retf
dec
sub
add
loopne
xor
(bad)
dec
fiadd
pushf
retf
ins
or
mov
cs
(bad)
sub
and
xchg
iret
xchg
xchg
pop
sub
mov
dec
adc
pushf
mov
cdq
pop
mov
xchg
add
das
cmp
scas
in
cmp
cld
out
outs
inc
and
sub
ret
inc
inc
nop
xor
jns
mov
push
daa
jns
test
pushf
repz
sub
mov
sbb
adc
sub
sbb
dec
fst
and
in
inc
mov
push
bound
repz
cs
and
int
mov
stos
test
fidiv
pop
(bad)
and
mov
mov
push
jbe
push
int
adc
add
add
sti
mov
or
or
inc
or
cmp
(bad)
dec
mov
xor
mov
rep
adc
popf
adc
bound
retf
jmp
addr16
mov
mov
inc
add
jl
ja
cs
cmps
outs
sbb
ja
fst
mov
mov
repz
cmps
mov
cwde
lahf
pop
xchg
shr
xchg
loopne
push
or
mov
call
xchg
scas
and
push
(bad)
adc
sbb
lock
scas
and
jmp
popf
cwde
xchg
dec
add
and
jmp
les
fstp
mov
call
xlat
inc
dec
outs
push
dec
jbe
dec
les
or
adc
ja
in
pop
ja
push
jb
and
push
icebp
je
in
sbb
xor
xchg
push
add
push
mov
out
(bad)
push
add
sub
sar
jecxz
mov
adc
mov
shr
dec
inc
call
repnz
rol
js
jecxz
mov
cmc
sub
pop
sti
inc
xlat
adc
out
xchg
icebp
push
int3
out
fsubr
adc
jge
dec
in
iret
xchg
sub
jle
jl
(bad)
addr16
sahf
push
xchg
lods
ret
mov
mov
or
push
jecxz
adc
push
adc
cmp
aas
adc
test
mov
fstp
cmp
or
bound
in
rcl
(bad)
adc
data16
(bad)
loopne
push
adc
cdq
rcr
(bad)
pop
xchg
jg
into
(bad)
cmp
out
stos
xor
ja
adc
jmp
es
xor
xchg
icebp
mov
(bad)
shl
jne
les
add
inc
pop
xchg
mov
pop
add
jle
cmc
inc
or
xlat
jb
mov
xchg
repnz
movs
pop
imul
ret
in
cwde
lea
out
fisubr
pop
xor
test
(bad)
mov
stos
into
stos
fs
sbb
or
dec
xor
inc
and
mov
js
mov
fnstcw
adc
in
push
xor
or
jo
and
jns
fs
xor
out
push
xchg
movs
pop
cmp
mov
repz
pusha
dec
in
inc
jecxz
sbb
xor
cmp
cmp
addr16
xchg
push
pop
out
and
add
dec
test
mov
push
jmp
pop
cs
sub
add
inc
sub
pop
sbb
sub
imul
or
and
adc
test
or
ss
mov
les
jno
idiv
repnz
jo
loopne
and
hlt
push
mul
out
xor
lahf
out
repz
mov
mov
or
sar
dec
adc
jnp
push
pop
retf
fs
push
addr16
out
scas
and
xchg
scas
cmp
mov
jge
pop
pop
cmp
popa
push
add
fistp
daa
ja
ret
shl
pop
xchg
inc
push
lods
mov
xor
ins
leave
lods
dec
rcr
sar
push
cwde
cmp
lahf
xchg
xor
cmps
std
nop
add
cmc
mov
mov
test
les
(bad)
cs
pop
cs
mov
inc
std
stos
pop
shl
jge
stos
dec
gs
rcr
rcl
cmp
mov
or
into
pop
je
scas
cld
sub
or
xor
(bad)
mov
popf
xchg
add
or
mov
movs
fistp
int3
inc
adc
sub
ins
lods
xchg
pop
or
and
clc
and
dec
in
add
cli
fwait
stc
sar
cmc
push
add
mov
iret
ficom
shl
dec
fidiv
sub
out
inc
adc
cmp
jecxz
pop
jmp
sbb
mov
pop
cdq
sahf
adc
add
mov
shl
mov
clc
sub
jo
shrd
nop
jo
push
xor
xor
sub
or
and
rcl
and
imul
mov
stos
and
jo
jno
mov
outs
fbstp
or
fadd
xor
pushf
mov
pop
bound
fld
mov
and
mov
jb
in
mov
std
sbb
test
shl
push
fnstenv
sti
cwde
mov
lds
sub
mov
xchg
(bad)
and
in
aas
ins
imul
cmps
add
sub
mov
enter
dec
and
(bad)
nop
outs
and
sar
sbb
sbb
sub
mov
cmp
add
pop
out
jae
inc
lahf
neg
fcmovb
(bad)
cwde
retf
call
sar
push
shl
ficom
outs
sbb
cmp
sbb
test
mov
int
loope
and
cmp
xchg
cs
hlt
mov
cmps
cmp
jp
frstor
jb
dec
cmp
dec
std
sbb
arpl
cdq
pusha
sub
xchg
jecxz
push
pop
sbb
xor
mov
(bad)
rcl
es
mov
iret
add
adc
xchg
mov
fild
inc
pop
mov
sbb
and
inc
cmp
mov
mov
jb
arpl
push
cmp
mov
inc
push
dec
xor
sub
clc
lds
xor
cmps
add
sbb
push
sti
sub
pop
imul
dec
ja
lock
or
push
adc
mov
test
mov
xor
inc
mov
sbb
nop
lods
sub
mov
data16
out
dec
mov
cmp
arpl
popa
retf
dec
out
add
retf
repz
jge
push
int3
fcom
bound
imul
mov
std
(bad)
pusha
mov
mov
or
aas
shr
fwait
mov
pop
pop
jp
inc
push
jne
xor
adc
mov
jmp
cmp
mov
sti
fmul
and
mov
adc
test
adc
stc
lods
ss
adc
into
or
sub
mov
sar
and
jmp
jne
jne
ja
jne
stos
xchg
pop
mov
sbb
bound
popa
test
stos
adc
js
mov
pop
retf
and
xchg
mov
ror
mov
jp
fld
ret
inc
jmp
cmps
push
(bad)
mov
daa
shl
mov
data16
mov
and
adc
leave
jp
jno
and
xor
push
push
xor
inc
xchg
in
ins
ss
ds
ud0
add
push
pop
mov
sub
rol
or
adc
mov
enter
jo
out
push
xchg
sub
lods
ins
or
or
pop
scas
xchg
jg
push
call
add
lods
sti
jae
lahf
xor
loopne
sub
and
into
loopne
pop
push
stos
cmp
push
lea
ins
xor
ret
dec
mov
into
mov
cmc
xor
sub
pop
ds
inc
call
nop
jp
pop
loopne
retf
xchg
fild
cmp
stos
lea
and
cli
pop
dec
icebp
xor
int
shl
ret
dec
mov
int
fs
mov
jg
sar
or
push
(bad)
or
xchg
push
add
sbb
outs
mov
xchg
je
aam
xchg
fdivr
out
out
cdq
add
mov
stc
jae
imul
and
popf
adc
sbb
ficom
retf
popa
retf
outs
sar
cwde
and
ret
retf
xor
jb
inc
mov
hlt
into
jg
fild
je
cmc
dec
std
adc
adc
fs
lahf
xchg
push
mov
pop
and
cli
cli
in
leave
adc
cmps
addr16
imul
mov
sub
(bad)
shr
inc
(bad)
fs
mov
mov
fchs
push
push
mov
and
adc
jmp
jle
xchg
or
mov
mov
movs
cmps
xor
adc
dec
test
add
mov
jp
fcom
arpl
and
and
cdq
dec
arpl
es
add
cmp
fld
bound
sub
add
rcr
pop
out
je
int3
les
mov
sar
push
gs
jmp
lds
(bad)
pop
movs
aad
dec
daa
xchg
push
xchg
pop
cmp
frstor
aas
jmp
cld
push
mov
and
pop
mov
fisttp
fist
mov
gs
adc
movs
lods
das
cmp
dec
lods
aaa
inc
pop
in
fs
popf
mov
mov
scas
add
jle
jbe
mov
xor
sbb
mov
and
mov
fs
sub
and
ss
add
mov
pop
mov
lock
test
push
mov
and
push
lods
popf
inc
cmp
inc
int3
push
pop
mov
mov
data16
retf
(bad)
sbb
jg
sti
jno
movs
jns
lahf
mov
cmp
sub
xchg
es
sub
bound
aad
add
mov
xor
outs
jbe
imul
push
mov
jbe
xor
movs
adc
push
dec
xor
mov
pop
les
jle
cdq
and
cmc
mov
in
clc
add
jecxz
sub
out
pop
lods
pop
push
inc
add
in
push
test
shl
add
mov
movs
(bad)
in
jmp
out
fmul
sub
stos
inc
push
push
retf
mov
sub
jl
mov
jl
popf
in
xchg
ss
gs
push
gs
mov
scas
add
mov
dec
add
pop
fsub
fst
jg
jmp
inc
rcl
out
cwde
or
fwait
lods
cmps
or
jl
rcr
call
push
ja
out
inc
mov
jae
xchg
and
ret
push
pop
jae
or
iret
xchg
or
adc
inc
cmc
cs
sbb
dec
retf
mov
mov
and
sub
(bad)
lds
jp
or
out
xchg
add
sbb
popa
xor
xor
test
pop
out
xchg
loopne
xor
std
push
out
jge
out
in
jae
in
arpl
gs
push
js
call
lds
inc
and
or
pop
out
sbb
popa
fimul
jns
push
or
mov
add
xchg
pop
pop
push
ins
(bad)
xor
adc
pop
mov
add
mov
push
xchg
(bad)
mov
adc
out
or
cmps
retf
retf
cmp
cmps
cmp
jl
scas
sti
pop
or
std
or
nop
call
mov
fdiv
mov
dec
push
adc
mov
push
xor
in
int3
in
std
ss
cld
push
push
adc
nop
out
iret
mov
daa
out
fnsave
mov
out
xchg
hlt
arpl
xor
and
push
leave
je
fild
push
cmp
xchg
retf
pop
pop
mov
lods
nop
xlat
jge
or
out
cmp
fisub
int3
pop
call
jns
pop
xchg
xchg
pop
aas
jo
jno
sbb
xchg
push
sti
mov
pop
xor
mov
popa
(bad)
jno
aas
in
pushf
imul
test
and
jl
dec
(bad)
pop
pop
lds
push
das
ficomp
adc
cmc
add
pop
push
xchg
mov
adc
in
adc
shr
jp
lds
in
mov
ss
out
mov
rol
and
je
aas
dec
sbb
lea
loopne
jno
sbb
and
bnd
pop
sub
outs
add
(bad)
addr16
ja
cmp
outs
xor
mov
jno
test
add
movs
mov
sbb
es
sub
setae
mov
cmc
sti
or
out
push
clc
out
test
xor
jnp
out
cmp
lock
inc
cmovle
int
or
jmp
pop
loope
std
mov
lock
out
sahf
jne
add
xchg
(bad)
or
mov
mov
lahf
mov
push
enter
jns
mov
adc
xchg
add
movs
add
ins
push
in
jl
scas
jo
sbb
push
or
movs
retf
pop
sar
adc
add
mov
and
loopne
add
and
xor
xchg
outs
sub
dec
loop
adc
xchg
inc
lds
pop
clc
rcr
ret
daa
lods
fnstsw
mov
je
push
int
test
aaa
fiadd
inc
or
adc
mov
and
add
push
mov
mov
ins
or
add
imul
aas
int
or
jmp
clc
scas
sbb
xlat
gs
cs
out
mov
xor
cmp
aam
push
js
inc
inc
outs
clc
xchg
jg
or
and
adc
mov
daa
jle
sub
and
movs
jmp
mov
fnsave
int
scas
fnstenv
jne
bound
repnz
mov
inc
cmps
std
cmp
sbb
fs
leave
fmul
or
popf
mov
xchg
leave
jbe
mov
fwait
retf
adc
adc
inc
adc
data16
mov
lods
mov
sbb
push
jns
jne
fmul
pop
mov
xchg
ret
call
add
fs
adc
jecxz
and
and
test
inc
(bad)
sti
ss
or
cwde
sub
lods
push
xor
push
clc
nop
ins
cdq
mov
and
js
cmp
mov
mov
loopne
mov
or
iret
cmc
mov
adc
cdq
mov
(bad)
fild
div
ins
dec
daa
test
add
cmp
xchg
in
inc
sbb
pop
lds
sub
in
aam
adc
lahf
in
sub
pop
into
pop
pop
push
mov
fdivr
hlt
xchg
or
push
lock
test
getsec
sub
ror
fs
xchg
in
(bad)
dec
imul
nop
mov
jg
push
(bad)
jae
lea
rcr
ja
scas
push
jae
out
out
stc
ficomp
nop
push
sub
push
mov
adc
(bad)
sub
or
push
in
in
stc
aad
sbb
push
adc
movs
aaa
mov
pop
out
inc
(bad)
xchg
stc
jmp
fcmovu
mov
push
cli
sub
js
ins
fsubr
push
xor
call
xor
icebp
fimul
xchg
xchg
mov
pop
xor
out
fwait
push
pop
mov
imul
sbb
sbb
in
xor
ficom
int3
dec
cld
out
sub
xor
cmp
push
lds
dec
add
sahf
cmp
enter
push
and
cmp
push
std
cmp
lock
and
fld
js
mov
cmp
push
outs
pusha
nop
pusha
cli
add
lock
inc
push
adc
outs
(bad)
repz
jmp
into
lods
mov
xchg
and
push
fdivr
cmps
lods
stos
inc
retf
pop
pop
xor
mov
ror
sbb
jo
fst
mov
add
sub
addr16
or
inc
test
xchg
nop
xchg
push
test
xor
fisub
sub
fbld
xlat
and
jmp
mov
add
mov
cmovo
sub
lods
enter
xchg
mov
jns
sti
lea
scas
jb
out
leave
or
data16
cmps
lods
and
add
mov
ins
bound
or
dec
in
mov
and
inc
jg
mov
cmp
pop
fisttp
lods
call
fcomp
xor
icebp
or
clc
outs
mov
(bad)
test
pop
(bad)
push
cmp
shl
bound
mov
fsubr
inc
sbb
call
aad
jg
adc
cwde
or
fistp
das
cmp
inc
mov
xchg
out
dec
jecxz
push
hlt
cdq
xor
sbb
adc
push
xor
or
loopne
pushf
mov
cmp
fwait
xor
sub
test
mov
in
mov
scas
cmp
mov
adc
xchg
and
movs
js
jbe
mov
out
frstor
pop
clc
xor
test
aas
mov
xchg
data16
lods
mov
mov
pop
in
mov
pop
mov
adc
jmp
les
lock
rol
scas
push
dec
sti
push
rcl
cmc
or
fwait
loopne
popf
hlt
lods
or
movs
call
or
(bad)
cdq
or
sub
daa
pop
fldcw
sbb
sub
iret
fidivr
das
xlat
xor
push
cli
pop
mov
retf
mov
mov
outs
fdiv
cs
sysenter
and
xchg
or
sahf
mov
jmp
cmp
add
sub
or
xchg
xchg
inc
jmp
icebp
mov
ja
in
jp
push
jo
shl
and
js
mov
ins
out
mov
(bad)
nop
cmc
xchg
test
test
and
cmp
mov
test
push
aam
mov
sub
js
inc
pop
(bad)
jle
jge
xchg
adc
adc
sub
pushf
mov
push
loopne
outs
pop
inc
and
mov
pusha
jmp
push
icebp
dec
pop
lods
or
pop
sub
lods
jp
imul
sbb
push
pop
mov
arpl
test
jg
mov
fs
sbb
pop
add
int3
jmp
movs
dec
das
fwait
loope
mov
inc
cli
gs
mov
sahf
in
or
adc
data16
cmp
cmp
inc
jae
xor
stos
aaa
icebp
(bad)
cmc
inc
push
in
icebp
xor
add
or
pop
adc
retf
fcmovbe
out
pop
mov
dec
mov
imul
cmp
das
jne
cli
adc
sbb
enter
mov
out
and
push
leave
add
mov
les
(bad)
push
mov
dec
pop
mov
pusha
lods
cmps
jbe
add
jns
xor
not
movs
mov
sbb
xor
adc
neg
rcr
adc
ret
and
(bad)
retf
adc
repz
cmps
rdpmc
xchg
xlat
jae
test
and
pop
fbld
test
movs
and
mov
jl
shl
pop
lock
and
popf
ins
cmp
cmc
xchg
cmp
in
loopne
dec
mov
mov
stc
cmp
pop
mov
and
mov
mov
xchg
jne
jmp
xchg
or
adc
add
cld
mov
push
lahf
mov
fsubr
shl
push
mov
ins
mov
pop
mov
dec
jmp
pop
dec
add
dec
sbb
ja
imul
sbb
mov
inc
or
jmp
cmp
jae
shr
pop
adc
out
jmp
mov
int3
mov
in
lea
jp
je
sbb
ror
iret
clc
push
call
xchg
repz
das
add
popf
xor
cmp
add
cmovnp
sahf
mov
out
push
rcl
inc
sbb
jge
(bad)
mov
jno
or
xor
jge
inc
and
pop
mov
add
mov
out
push
xor
mov
sbb
inc
leave
adc
pushf
clc
push
xor
or
ficomp
scas
mov
jmp
repnz
mov
xchg
xlat
loop
xchg
fwait
add
inc
push
pop
imul
sbb
enter
shl
mov
mov
xchg
dec
inc
je
(bad)
xchg
(bad)
loopne
xchg
ds
imul
sbb
aas
arpl
shr
out
add
cmp
pop
and
mov
mov
inc
mov
and
aad
mov
aas
or
clc
pop
jl
mov
pop
cmc
das
bound
or
ret
jge
enter
sub
add
cmp
cmp
inc
dec
popa
inc
pop
gs
loop
dec
pop
ins
aas
pop
dec
xchg
lods
movs
dec
cmp
fdiv
push
xor
add
outs
and
sbb
push
xchg
add
xchg
lods
and
hlt
xchg
and
sub
cld
ret
iret
mul
gs
pop
jne
jmp
jmp
test
cmp
ficomp
inc
rcl
inc
(bad)
push
and
rol
fisttp
push
inc
mov
imul
pop
mov
pop
imul
add
xchg
push
and
daa
xchg
or
imul
std
sbb
cmp
xchg
std
mov
mov
push
push
jmp
arpl
pop
cmp
sar
jno
nop
stc
mov
in
cmp
lock
jb
add
sub
ins
neg
cs
push
push
and
push
(bad)
std
and
rcr
pop
cmp
xor
xchg
fild
movs
xchg
inc
add
movs
das
lods
push
adc
repz
cmp
scas
jle
mov
sti
fild
fmul
sbb
xchg
push
test
pop
cmc
scas
xlat
cmps
jp
jmp
(bad)
push
jno
mov
cs
xchg
pop
es
test
jbe
in
inc
cmps
mov
mov
call
(bad)
add
mov
enter
adc
push
int
std
test
xchg
sub
inc
(bad)
push
push
mov
into
or
fisttp
push
fwait
pop
inc
fdiv
mov
(bad)
and
mov
add
add
dec
lods
repz
mov
push
leave
daa
pop
stc
fwait
push
dec
in
pop
outs
mov
or
sub
xchg
das
stos
neg
pop
arpl
xchg
cmp
and
xor
mov
xor
inc
dec
test
(bad)
jp
pop
aas
mov
fbstp
sbb
xchg
out
int3
aam
cmp
pop
loope
movs
pop
aad
jns
or
pop
push
pop
add
jb
xchg
mov
in
mov
mov
pop
jle
movs
pushf
iret
lods
dec
(bad)
jo
push
in
rol
gs
cmp
test
adc
mov
mov
call
inc
pop
das
jg
mov
add
dec
adc
jo
or
add
into
cmp
(bad)
int
sbb
jns
pusha
add
imul
xor
into
inc
not
nop
xor
jns
sbb
loop
or
into
ja
leave
sar
fcomip
mov
imul
xchg
jl
dec
bound
jne
test
rdpmc
pop
inc
inc
jnp
movs
(bad)
adc
ins
mov
ficomp
sti
mov
cvtdq2ps
inc
mov
cld
pushf
inc
shl
cwde
add
and
mov
cmps
pop
mov
fidivr
mov
out
and
or
pop
lea
sbb
dec
mov
jmp
pop
daa
das
jmp
or
add
jecxz
jnp
inc
cmp
cmp
in
inc
sbb
cmp
add
dec
fistp
mov
sub
mov
inc
fnsave
out
inc
out
push
xlat
(bad)
in
cdq
hlt
add
fistp
int3
mov
inc
lods
sub
out
(bad)
sub
movs
add
push
mov
mov
leave
add
sar
cmps
loope
mov
xchg
xor
ins
in
push
mov
lods
add
jg
xor
sub
dec
inc
into
mul
inc
stc
pop
fldenv
mov
adc
pusha
(bad)
and
outs
push
push
mov
mov
lds
scas
sub
dec
into
lods
iret
stos
lods
pop
xlat
cmp
mov
sbb
adc
jecxz
out
sbb
cs
stos
(bad)
hlt
and
mov
pop
jne
lea
jno
iret
(bad)
jg
das
std
and
mov
idiv
aad
jae
lock
iret
adc
or
aam
xchg
ins
mov
mov
dec
mov
fidiv
add
ins
mov
retf
push
mov
fdivp
pmullw
pop
loopne
scas
stos
mov
enter
jle
mov
mov
mov
push
adc
sbb
fs
jmp
or
fsubr
or
cld
ficomp
in
jle
jne
pop
(bad)
cmps
xchg
cmp
leave
pop
scas
and
adc
cmps
xor
(bad)
int3
mov
xor
xchg
cmp
fst
push
and
leave
dec
jnp
call
sub
out
mov
aam
int
inc
inc
bound
xor
mov
adc
adc
mul
add
push
pop
mov
es
push
cld
inc
cdq
lea
mov
lds
xor
push
imul
xlat
pop
call
add
loop
rcr
test
push
dec
out
outs
dec
ret
rcl
sbb
in
pop
test
ins
call
ret
dec
(bad)
sar
nop
imul
pop
clc
lahf
pop
sub
push
pop
stos
leave
jo
xchg
xchg
ins
or
rcl
jge
or
mov
into
inc
(bad)
in
xchg
or
push
mov
lds
mov
mov
or
sub
sub
inc
push
push
test
lods
fist
(bad)
xor
mov
pop
or
mov
scas
movs
gs
fucomip
xchg
popa
scas
cvtps2pd
mov
outs
mov
pushf
mov
inc
nop
push
enter
sub
mov
hlt
mov
retf
loop
fistp
pop
fcomi
pop
dec
mov
xor
scas
pop
loopne
(bad)
pop
(bad)
adc
inc
stos
xchg
std
pop
sbb
mov
mov
movs
jno
sub
fidivr
sub
(bad)
pop
fld
movs
pop
ins
mov
neg
mov
ins
sub
add
ror
ror
push
loop
pop
jmp
ror
imul
adc
pop
jge
in
sbb
lods
aam
test
(bad)
cmc
dec
mov
xor
leave
adc
mov
push
push
mov
jbe
pop
vpaddb
jg
(bad)
cmp
push
sbb
and
mov
mov
jbe
dec
sahf
pop
push
scas
inc
sub
sub
mov
popf
add
sbb
dec
fidivr
mov
pop
xchg
mov
pop
aas
or
(bad)
addr16
mov
fldcw
push
xor
mov
(bad)
jmp
sar
jmp
xor
add
inc
scas
cmp
pop
jnp
jecxz
clc
(bad)
out
xchg
inc
dec
fcomp
mov
in
data16
test
fstp
fisub
or
jmp
rcr
sti
mov
in
gs
jns
stos
push
inc
sub
push
push
dec
enter
xor
jbe
cmp
jg
out
(bad)
or
mov
mov
fmul
leave
fwait
sti
cld
das
cli
adc
jnp
aad
sbb
sbb
mov
rcr
push
mov
push
adc
mov
pop
inc
into
xor
fcomi
add
inc
add
aas
pop
mov
mov
xor
cli
and
gs
in
mov
imul
sub
mov
add
jle
imul
mov
or
xchg
jo
mov
aam
cmps
sub
jle
jnp
scas
mov
stc
dec
push
test
or
xor
ins
mov
and
add
gs
xchg
xchg
je
xor
fcomp
or
call
ret
mov
sub
xor
rol
jmp
pop
arpl
les
xchg
adc
fdiv
btr
dec
jp
hlt
std
(bad)
dec
lahf
jle
pop
fldcw
adc
(bad)
sub
in
add
push
retf
dec
inc
(bad)
mov
jo
sub
in
add
and
mov
sub
out
jecxz
adc
add
cwde
(bad)
xchg
mov
xor
ror
adc
(bad)
leave
(bad)
mov
ins
pop
dec
and
adc
cwde
sahf
(bad)
sbb
lods
mov
(bad)
jne
leave
mov
loope
dec
add
or
inc
mov
pop
ds
mov
jg
daa
jb
hlt
add
xchg
push
jo
mov
jmp
aam
hlt
cwde
dec
repz
test
rcl
ss
sbb
iret
xchg
mov
jl
adc
xor
xlat
jge
pusha
jmp
int
mov
cmp
bound
inc
pop
ins
jle
cmp
pushf
out
jmp
(bad)
int3
pop
cli
call
push
call
xchg
xor
(bad)
in
add
ds
sbb
scas
adc
sbb
nop
jmp
pop
mov
push
inc
push
sub
cmps
push
sub
pop
mov
dec
(bad)
pop
mov
xor
imul
js
pop
xor
cli
ja
xchg
xor
mov
push
jmp
xor
cmp
sub
sbb
jl
lea
lock
out
pavgb
mov
mov
call
cmps
(bad)
aam
mov
jns
dec
ja
arpl
fcomp
aad
pop
adc
mov
push
mov
pop
push
mov
(bad)
mov
shl
scas
mov
and
inc
mov
push
push
add
outs
mov
add
rcl
sbb
es
jl
cli
sbb
in
pop
loopne
test
pop
mov
addr16
or
ucomiss
imul
or
repz
fsubr
or
xchg
jecxz
inc
ret
xor
bound
cmovle
aad
sbb
fs
fcomp
ja
fstsw
test
push
int3
aad
pop
int3
or
jae
fisttp
dec
out
jmp
icebp
pop
cmp
lahf
inc
je
push
xchg
cmp
fiadd
jmp
push
fnsave
pop
rol
stc
add
adc
sahf
icebp
mov
ja
ss
sbb
mov
dec
arpl
aas
dec
or
add
iret
xchg
rcl
pushf
inc
mov
rcl
push
mov
mov
sahf
adc
ins
fucom
pop
sub
cmc
ret
(bad)
stos
sahf
push
sbb
je
jle
xchg
mov
inc
mov
pop
xchg
xchg
pop
xchg
push
sub
aas
movnti
inc
or
mov
inc
sub
test
and
neg
or
pextrw
nop
ret
and
or
sub
gs
mov
std
jmp
push
outs
rcl
fsub
(bad)
adc
dec
jo
mov
sahf
daa
jp
sub
mov
std
mov
loopne
call
sub
icebp
or
lahf
jne
sub
bound
inc
mov
movs
mov
mov
rcl
daa
add
sbb
std
jge
fstp
mov
pop
aam
dec
ds
sbb
loop
f2xm1
fs
shl
add
or
push
or
add
ret
mov
sbb
lock
bt
xchg
inc
sar
push
repnz
mov
arpl
outs
push
fdivr
mov
jmp
jg
pop
and
push
movs
sahf
mov
xchg
std
rcl
mov
int
imul
lods
jp
icebp
icebp
imul
outs
(bad)
idiv
xchg
(bad)
cmps
in
fnstenv
popa
cmp
xchg
test
and
in
(bad)
out
mov
inc
ins
das
xor
movs
fwait
jmp
ret
loopne
cmp
imul
cmp
cmp
movs
or
xchg
jb
jae
adc
jge
jmp
jmp
fst
xchg
ret
fdivr
enter
jb
mov
pop
jns
push
and
xchg
sbb
sbb
scas
icebp
jns
or
pop
cmp
sbb
adc
mov
shl
aas
mov
xchg
cmc
ins
cmp
sub
jns
pop
inc
sub
push
mov
dec
cs
jbe
std
and
iret
xlat
outs
xchg
out
pop
cli
fs
add
inc
dec
sub
jp
xchg
add
sbb
xlat
jmp
lods
fwait
sub
sbb
jmp
movs
movs
jno
xchg
xchg
add
push
das
mov
xchg
in
sub
mov
push
mov
ror
not
scas
mov
xchg
adc
xchg
jg
mov
cmp
dec
sahf
pop
sbb
jle
ins
je
icebp
(bad)
pop
push
(bad)
sbb
mov
sbb
test
fdivr
in
or
sub
enter
fcom
retf
idiv
add
mov
mov
shl
(bad)
jmp
add
adc
and
and
inc
inc
mov
pusha
add
mov
inc
sbb
sahf
stc
movs
shl
pop
xchg
push
jnp
(bad)
dec
cmp
enter
pop
push
dec
or
stos
les
xor
cmp
push
test
sbb
(bad)
mov
mov
push
xor
les
into
(bad)
sub
je
(bad)
(bad)
dec
fwait
mov
fisub
repnz
in
movs
pop
mov
push
aad
hlt
fcomp
and
cs
iret
repz
mov
loop
sub
ins
div
cs
mov
pop
sbb
(bad)
enter
bnd
xadd
jnp
or
mov
sbb
mov
inc
fldcw
and
xor
fdivrp
or
test
into
loopne
or
inc
pop
jg
lods
mov
inc
mov
dec
mov
xchg
scas
idiv
arpl
jp
and
arpl
sbb
sub
pop
mov
push
std
push
aam
adc
mov
ret
test
(bad)
aas
mov
ins
call
pop
mov
je
cmp
xor
jecxz
sbb
call
cmp
ror
jmp
cmc
adc
jp
fdivr
mov
pop
rol
mov
mov
and
dec
and
cmc
pop
xchg
pop
adc
clc
mov
jp
or
jmp
daa
mov
data16
cmc
inc
cmp
ins
call
inc
jp
popf
mov
test
shl
push
xchg
out
lahf
dec
and
cmp
pop
cmps
cwde
push
out
int
push
jecxz
sar
scas
pusha
mov
call
adc
jg
fdiv
adc
add
cmp
out
push
loop
ss
and
hlt
mov
retf
out
or
pop
lahf
jmp
pop
sbb
push
push
xchg
(bad)
in
les
or
into
sbb
and
(bad)
sbb
test
mov
out
inc
push
push
adc
adc
sub
mov
mov
mov
sub
sub
adc
mov
sub
scas
inc
in
mov
fstp
clc
cmp
mov
add
ja
data16
push
cmp
pop
hlt
jns
push
scas
adc
inc
pop
mov
jne
add
pop
inc
call
xchg
inc
or
or
mov
sub
mov
in
cmp
ins
cmps
std
aam
xor
mov
pop
int
mov
bound
int3
xchg
scas
loopne
xor
addr16
rcr
push
stc
xor
fldcw
test
jmp
stos
sbb
xchg
mov
(bad)
push
cld
xchg
(bad)
pushf
nop
inc
push
es
push
rol
push
fistp
aaa
sbb
cmp
adc
stos
or
mov
scas
cld
mov
enter
pop
stos
push
adc
xor
mov
and
in
addr16
push
add
or
add
std
fs
sti
lea
inc
aas
sub
(bad)
inc
out
dec
or
aam
dec
xchg
and
lods
dec
dec
std
in
and
xor
fidivr
retf
mov
cld
in
xchg
dec
adc
dec
retf
out
outs
pop
mov
lods
cdq
mov
fiadd
push
in
xor
sbb
ret
pop
jmp
cwde
inc
xlat
loopne
pop
jno
sbb
xor
clc
cmp
fisubr
cmp
ficomp
and
and
xor
sbb
mov
xchg
cwde
pop
movs
mov
xor
push
aaa
in
push
add
add
ja
in
xchg
cmps
add
pop
add
(bad)
jmp
in
cmp
sub
jae
js
mov
popa
mov
ins
push
pop
lds
sub
ds
and
adc
loope
retf
and
dec
inc
xchg
rcl
dec
inc
jbe
fist
js
std
loopne
jmp
jl
jmp
and
jg
dec
pop
add
outs
jmp
sbb
bnd
outs
idiv
test
fdiv
aas
xchg
clc
in
sub
mov
push
aaa
dec
push
sbb
addr16
ins
lock
jecxz
daa
out
clc
repz
sub
cmp
xchg
push
call
fdivr
call
cli
mov
lock
jb
rcl
aam
lahf
lods
sub
lock
stos
mov
lock
ins
imul
test
stos
push
push
stos
mov
test
and
into
push
daa
enter
lock
pop
fld
mov
pop
retf
or
inc
mov
loopne
xor
fidivr
std
sbb
faddp
and
mov
out
sub
lea
dec
xlat
adc
fnsave
mov
mov
jecxz
pop
and
push
imul
scas
(bad)
mov
or
dec
mov
xlat
sahf
int3
outs
lahf
xchg
adc
cwde
inc
popa
jne
outs
sti
jns
test
loopne
xor
push
int3
mov
cmp
push
dec
test
mov
sub
int
jl
div
xor
xchg
mov
sahf
cdq
sub
(bad)
adc
(bad)
mov
jbe
cmps
jbe
or
pop
imul
aad
dec
sti
mov
imul
push
imul
inc
sar
loopne
cwde
data16
fisttp
mov
fmul
rcl
or
invd
inc
mov
pusha
jb
mov
(bad)
neg
stos
test
or
fldcw
ret
repz
cmp
shl
mov
sub
mov
aam
in
xchg
das
test
dec
loop
jae
cmp
ins
repz
ss
adc
fnstcw
add
fistp
push
add
mov
dec
fidivr
or
ja
adc
jecxz
out
mov
pushf
mov
push
int3
arpl
stos
int3
movs
mov
into
pop
add
mov
loop
push
je
xlat
push
hlt
xchg
fist
jae
xchg
fucomp
mov
clc
sub
enter
hlt
dec
cmp
mov
leave
pop
ins
mov
xor
and
lea
or
mov
mov
cmp
xchg
lea
aam
adc
pop
inc
mov
lock
and
loope
mov
(bad)
pop
call
mov
hlt
mov
mov
cld
xor
inc
(bad)
movs
mov
mov
lods
dec
sub
bound
adc
xor
inc
push
ss
push
fcmovbe
cmps
lods
and
(bad)
add
fiadd
jne
loopne
jecxz
xlat
jle
ror
inc
shl
(bad)
dec
(bad)
pop
enter
pop
jbe
push
sub
cs
push
je
popa
cmp
dec
mov
jl
xor
popa
mov
bound
in
sub
daa
inc
rcr
push
cmps
retf
lds
cmp
jp
pop
add
out
aaa
mov
lds
ss
(bad)
fisub
jle
jge
mov
mov
or
mov
pop
mov
sbb
shr
cmp
(bad)
lea
mov
(bad)
add
mov
adc
int
iret
mov
mov
stos
jge
ds
(bad)
and
aas
sbb
cmps
jecxz
fwait
push
mov
push
or
and
xor
fs
xor
ds
xchg
jmp
inc
fiadd
mul
inc
enter
add
loope
adc
loop
sub
or
xchg
ja
sahf
jmp
xlat
test
push
sub
aam
mov
inc
push
cdq
scas
push
lds
(bad)
in
mov
mov
or
shl
outs
outs
jbe
inc
or
in
cwde
pushf
in
scas
icebp
mov
in
mov
lods
push
loopne
mov
call
stc
push
into
push
pusha
mov
icebp
cmps
mov
cmp
(bad)
dec
pop
sbb
les
push
dec
jmp
sbb
push
mov
cmp
stos
cmps
sbb
or
(bad)
mov
mov
ror
in
push
call
and
adc
movnti
dec
jo
cmps
test
lods
mov
mov
sbb
das
int
stos
adc
and
js
leave
in
dec
xchg
repz
sub
xor
adc
cs
pop
cmps
lods
ror
imul
rcl
call
sub
div
pop
and
mov
imul
loop
mov
mov
mov
fisttp
dec
fadd
jno
push
scas
clc
sub
mov
ins
pop
push
sbb
mov
scas
sub
shr
icebp
mov
xor
push
xor
jecxz
cmp
cmp
adc
in
arpl
mov
dec
push
xor
lahf
pusha
push
leave
mov
xchg
xchg
xchg
cmp
mov
pushf
push
aam
dec
scas
inc
dec
sahf
std
ror
mov
xchg
shl
inc
idiv
aad
rcr
fwait
sbb
imul
xchg
test
adc
lahf
mov
into
and
and
jb
push
sbb
jp
ret
push
or
arpl
cmc
xor
sahf
rol
and
pop
inc
xchg
add
mov
mov
bswap
inc
ret
inc
xor
cmp
jl
cmp
xchg
ret
and
movzx
dec
adc
dec
mov
cmp
mov
add
stos
xchg
adc
sbb
repnz
stc
and
imul
mov
fisttp
loope
div
shl
fild
xchg
mov
mov
retf
push
inc
sbb
adc
push
inc
outs
sbb
movs
shl
xlat
sbb
(bad)
mov
shl
add
jmp
mov
and
jmp
out
in
ret
loop
cmp
mov
(bad)
and
add
pop
ins
lds
mov
nop
rcr
fistp
repz
cs
xchg
mov
in
sub
fmul
test
push
jg
out
push
adc
pop
xchg
and
and
add
add
mov
fs
and
retf
loop
inc
mov
dec
or
cmp
mov
dec
inc
jle
fmul
sbb
cli
bound
fwait
ss
sbb
div
cdq
pop
push
fld
cmp
jno
sub
cdq
int
ret
rcl
adc
shl
xchg
aaa
add
call
daa
js
in
mov
push
or
adc
aad
mov
dec
hlt
push
leave
popa
xchg
loope
mov
arpl
push
cmps
pop
sti
popa
xchg
xor
adc
mov
out
push
fldenv
push
hlt
ins
(bad)
adc
mov
add
aad
test
ins
dec
sbb
mov
aaa
lock
enter
fstp
repz
repz
dec
pop
mov
(bad)
shl
add
outs
inc
addr16
mov
sti
inc
xchg
jecxz
xchg
adc
sub
mov
cmp
nop
repnz
dec
xchg
xor
push
out
pop
and
mov
push
adc
pop
lods
jo
mov
call
addr16
lods
cmp
xor
and
pop
(bad)
push
fldenv
stos
ds
sahf
add
sbb
pop
enter
(bad)
ss
es
addr16
pop
out
inc
lea
aas
xchg
mov
loope
push
imul
inc
xor
pop
stos
mov
popa
sbb
imul
movs
leave
repnz
out
adc
add
ret
or
ret
das
iret
mov
loope
je
mov
add
or
inc
xchg
mov
mov
add
outs
cmc
adc
imul
mov
sar
xor
sar
ins
(bad)
cmc
pusha
mov
dec
mov
mov
pusha
sub
cdq
stos
cmc
repnz
mov
jp
mov
and
es
je
jb
popa
loop
xor
dec
test
jmp
mov
add
stos
dec
std
or
int3
and
cmc
pop
ins
xchg
pop
retf
adc
scas
adc
sbb
mov
add
bound
in
push
cmps
push
ficomp
inc
inc
or
xchg
xchg
pop
jmp
jle
cmp
mov
pop
or
cmp
add
xchg
fild
call
add
mov
sbb
mov
jne
out
(bad)
leave
xchg
div
imul
test
push
ja
inc
push
(bad)
push
js
mov
add
retf
push
ins
ret
mov
out
stos
sub
imul
fbstp
loopne
ins
mov
mov
lods
push
sub
jecxz
adc
aaa
and
xchg
mov
test
dec
xor
mov
adc
mov
or
pop
mov
in
fwait
aaa
cmps
aam
ins
sub
cmp
imul
sbb
retf
mov
jnp
movs
sbb
cmp
cmp
cdq
dec
sub
or
lahf
data16
jnp
(bad)
cmp
pop
dec
xchg
adc
sbb
dec
std
(bad)
mov
cmp
sbb
push
shr
xor
mov
rcr
xchg
out
hlt
mov
test
fdiv
outs
jno
ds
adc
sub
jle
ror
fwait
xchg
mov
mov
adc
add
ja
push
jge
iret
fs
xor
into
mov
fdivr
pop
inc
hlt
push
pop
and
and
es
out
retf
mov
push
in
or
outs
add
sbb
mov
movs
push
push
mov
mov
push
mov
jnp
loope
lea
(bad)
call
push
xchg
adc
scas
or
inc
test
xor
and
mov
out
xchg
cmp
test
sub
hlt
mov
mov
fcomp
jmp
ror
push
ret
jmp
dec
cmp
or
out
ss
stos
sub
inc
and
popf
mov
dec
pop
mov
inc
das
jbe
pop
cmp
push
cmp
pushf
xor
sub
xor
sub
or
out
jb
mov
xchg
pop
jg
lods
inc
rcr
inc
add
pop
or
test
loopne
lock
lock
test
scas
stos
mov
cmp
jbe
arpl
fst
or
arpl
outs
cmp
ins
jo
add
sar
bound
inc
cmp
mov
mov
aas
leave
jge
out
add
bound
push
mov
rcr
test
fwait
sbb
pop
je
dec
std
sahf
cdq
repz
and
jno
shl
ins
jg
xlat
mov
sub
adc
sar
aam
jmp
rol
movs
or
(bad)
pop
lea
jb
outs
cmp
ja
pop
add
xor
ret
mov
test
sub
sbb
inc
mov
aas
mov
rcr
retf
adc
movs
xchg
daa
jnp
xchg
inc
lds
nop
ret
inc
xchg
aaa
hlt
enter
js
mov
jmp
cmc
jmp
jae
mov
arpl
dec
xchg
pop
stos
or
adc
jge
jb
data16
test
ins
(bad)
and
cmp
xchg
outs
lds
mov
jns
jmp
test
aaa
cmc
sbb
sahf
dec
int3
cdq
xchg
adc
or
movs
popa
call
ret
nop
popa
inc
(bad)
push
(bad)
sbb
pusha
xchg
and
mov
add
xchg
popf
jl
jae
cwde
in
adc
lock
test
pop
sub
out
push
and
inc
pop
mov
(bad)
adc
not
ret
retf
push
adc
cmp
or
fwait
mov
mov
enter
mov
icebp
fist
ror
lea
jne
cmp
push
mov
jl
sti
cmp
push
std
sub
movs
sub
(bad)
frstor
call
jno
cmps
lock
pop
inc
aas
cmovnp
add
adc
test
mov
sub
sti
idiv
scas
les
aad
push
test
lds
fmul
std
inc
loopne
sahf
sbb
mov
push
cmp
dec
mov
push
stos
mov
add
xor
int3
jp
mov
push
in
or
movs
jo
ror
or
setae
mov
cmp
fwait
mov
out
pop
ja
in
ffree
add
aas
and
stc
xor
loope
adc
xchg
out
aaa
sbb
xor
movs
xor
(bad)
or
(bad)
imul
inc
dec
jp
cmp
mov
gs
jae
xchg
lods
push
mov
mov
ficomp
push
call
inc
pop
mov
push
jg
jle
dec
cmps
fucomip
adc
xlat
ins
loopne
dec
cmp
push
mov
push
adc
loopne
jle
scas
xor
mov
rcr
adc
inc
add
xchg
xor
addr16
inc
mov
(bad)
fcmovnbe
dec
mov
rol
push
jmp
leave
xchg
mov
mov
out
push
fbld
cmps
pop
adc
(bad)
in
sub
int3
cmp
(bad)
addr16
adc
xor
pop
adc
push
push
movs
inc
fdiv
push
jmp
repnz
sahf
add
and
pop
inc
push
aad
push
fidivr
ret
pop
fs
mov
(bad)
xor
pop
adc
pop
cli
mov
ja
mov
stos
mov
xor
inc
xor
push
scas
push
push
stos
mov
push
inc
adc
les
cmps
mov
call
cmp
mov
pop
add
push
(bad)
mov
imul
les
dec
push
fucom
mov
jns
pop
cmc
or
aas
mov
imul
jp
daa
hlt
repnz
cmps
in
retf
shr
mov
jnp
xchg
jns
movs
pop
inc
loopne
sub
bound
pop
add
fidiv
sub
jns
inc
adc
inc
in
pop
lahf
mov
arpl
lahf
ror
js
mov
nop
jge
idiv
jecxz
xor
fisub
and
lds
sub
ret
and
mov
mov
push
dec
pop
push
scas
mov
jnp
scas
jg
mov
lods
push
mov
sub
(bad)
lock
add
push
mov
imul
xor
mov
mov
jb
sbb
call
jae
pop
(bad)
mov
mov
popf
test
mov
adc
xchg
inc
sbb
xchg
mov
ret
addr16
pusha
ror
push
leave
jmp
xor
jb
js
xor
jle
fistp
push
int3
push
call
inc
mov
xchg
jp
pop
dec
mov
test
test
into
sbb
pop
dec
les
mov
jne
or
mov
addr16
retf
adc
xchg
xchg
sub
jb
and
icebp
cld
mov
mov
sub
fs
push
repz
mov
ds
push
jb
idiv
sub
cmp
call
cmp
imul
dec
ins
fwait
lock
repz
sbb
push
adc
pushf
retf
sbb
lds
out
pop
movs
call
and
pop
sar
dec
xchg
out
pop
imul
mov
and
in
test
cmp
mov
jne
ror
retf
push
pop
add
gs
mov
in
jns
adc
ss
sub
pop
jle
loopne
xchg
into
cmp
(bad)
mov
jl
mov
xlat
xor
ud2
adc
adc
pop
lea
pop
scas
fbld
cmp
sub
adc
int3
and
and
into
mov
gs
ja
inc
ret
int
jne
mov
mov
pop
pop
in
mov
hlt
add
(bad)
mov
or
in
pop
adc
(bad)
xchg
iret
jmp
pop
add
arpl
jo
aam
retf
adc
push
xor
inc
jb
jg
mov
adc
dec
mov
inc
stos
mov
div
jbe
call
mov
mov
pop
int3
fxch
hlt
inc
xor
outs
jle
xor
stos
pushf
pop
xlat
sub
adc
bound
popa
(bad)
not
outs
mov
retf
jge
xor
mov
and
cmp
push
bound
shr
push
ret
(bad)
aaa
dec
jns
push
and
jmp
mov
(bad)
movs
sar
retf
ficom
xor
sbb
cli
icebp
xchg
mov
out
lods
push
inc
retf
out
jmp
test
and
sbb
loop
push
scas
ins
fsubp
shl
sbb
or
mov
and
test
(bad)
mov
xor
aam
clc
inc
shl
dec
data16
data16
lock
jp
add
movs
dec
and
xchg
inc
jecxz
push
inc
ins
jmp
mov
mov
nop
dec
xchg
lods
add
dec
dec
aaa
jge
inc
mov
movs
shl
repnz
int3
lods
rcr
fisubr
(bad)
into
push
sar
jne
jnp
das
fdivr
icebp
out
add
jecxz
inc
pushf
and
fstp
loop
(bad)
sub
adc
mov
hlt
popa
or
int
push
fsubr
and
xlat
push
inc
xchg
mov
jecxz
imul
fucomi
pop
rol
(bad)
icebp
ds
sub
hlt
sub
fwait
(bad)
scas
pusha
les
dec
jae
mov
and
sbb
add
(bad)
sub
and
cld
cmp
push
xchg
jle
jns
bound
xchg
fwait
test
xor
lock
adc
add
push
push
std
sbb
in
adc
pop
ret
and
jmp
out
imul
pop
mov
popf
add
fimul
enter
mov
pop
das
cmp
push
sahf
vhsubpd
mov
jp
pop
(bad)
pop
out
push
ret
mov
pop
cmps
sbb
xchg
jne
adc
fst
mov
ins
daa
movs
retf
jl
xchg
fcmovbe
pop
les
cmp
adc
out
sti
xchg
outs
mov
pop
sub
xchg
repnz
or
fwait
arpl
sbb
jl
pop
(bad)
fwait
pop
pusha
dec
neg
pop
cmps
out
in
dec
mov
inc
rcl
jae
movs
in
pushf
or
not
std
enter
or
(bad)
sbb
repnz
mov
mov
push
mov
xor
cmps
(bad)
push
in
xor
call
fbstp
and
add
inc
sbb
les
push
mov
outs
and
mov
into
in
out
mov
fs
xchg
nop
sub
ja
sbb
in
jmp
xchg
cmp
cmp
jge
pop
cmp
test
sub
and
mov
ret
fst
cmp
jb
pop
pop
jle
js
xor
call
mov
test
and
inc
push
fnstcw
(bad)
call
imul
adc
mov
lea
or
cli
mov
push
pop
imul
ret
push
lahf
out
imul
dec
inc
mov
movs
cmp
adc
xor
mov
sbb
and
cmp
cld
xchg
test
clc
pusha
icebp
cmp
nop
add
popa
iret
add
sub
pushf
jmp
test
cld
lods
mov
sub
jmp
jp
fmulp
cmps
stos
jmp
lock
adc
dec
add
push
adc
dec
sbb
lahf
mov
dec
imul
adc
xor
mov
pushf
push
fbstp
int3
out
or
adc
push
cwde
push
out
daa
and
and
jns
cs
pop
shl
push
mov
cmp
out
sbb
push
cmp
cs
xor
xchg
xor
inc
fwait
add
jp
pop
gs
out
js
mov
dec
mul
mov
(bad)
jmp
ja
xor
mov
or
(bad)
stos
sar
pop
repnz
push
adc
push
mov
cwde
add
sbb
scas
mov
shr
fbld
fcom
movs
retf
sub
leave
mov
int
jno
das
gs
pop
push
jbe
jmp
mov
jmp
xchg
rcr
sbb
hlt
mov
xor
call
pop
jl
rol
pop
mov
mov
cmp
jnp
cmc
dec
adc
cmps
or
pop
xchg
shl
sbb
lahf
pop
mov
add
mov
inc
(bad)
ja
fst
mov
mov
lock
add
(bad)
fmul
push
icebp
dec
push
push
xchg
adc
movs
leave
mov
mov
sbb
fld
fwait
je
(bad)
test
lea
jo
pop
dec
cmp
xor
pop
fdivr
std
retf
fsubrp
xchg
add
push
mov
push
fdiv
stos
mov
dec
sbb
nop
iret
xor
push
fistp
scas
mov
cmp
or
sbb
cld
pop
pop
mov
xor
pop
push
mov
jno
xchg
fwait
dec
lock
(bad)
sti
sbb
mov
or
loop
push
test
loop
pusha
imul
xchg
mov
outs
in
pop
mov
add
and
loope
cmp
cmp
cmp
shl
outs
or
mov
and
call
pop
xlat
mov
out
cmps
push
sub
ins
scas
icebp
in
daa
sbb
xchg
fdiv
mov
arpl
inc
dec
loop
mov
sub
and
push
cmp
imul
xor
add
mov
mov
fistp
jo
cmps
imul
ja
call
neg
sub
mov
fcmove
ins
inc
xor
ja
int3
aam
cmps
clc
in
mov
mov
mov
leave
inc
cs
fiadd
aad
jns
icebp
fstp
int3
xchg
nop
gs
(bad)
scas
loopne
dec
adc
out
xor
jae
sbb
sbb
xor
mov
push
sub
jp
pop
movs
inc
xor
jmp
imul
mov
and
push
xor
pmulhw
dec
cmp
stc
test
cs
fs
fs
sbb
push
ret
leave
adc
xchg
xchg
(bad)
call
xlat
loope
ror
fwait
movs
dec
jp
repz
call
movs
ror
or
inc
lock
cmp
xchg
int3
jle
or
fistp
jecxz
mov
ins
es
(bad)
cli
cmp
aaa
(bad)
mul
add
cmps
sar
mov
clc
cmp
fild
arpl
jp
xchg
pop
pusha
lahf
stos
pushf
xor
xchg
sbb
ror
mov
sub
(bad)
mov
scas
stos
out
add
cmp
xchg
stc
mov
add
rsqrtps
scas
xor
dec
shr
fldenv
dec
push
imul
mov
stos
shl
jbe
repz
xchg
in
enter
mov
or
and
push
lods
jecxz
mov
pop
leave
jge
pop
pop
ror
sub
std
jmp
mov
dec
aas
leave
movs
or
dec
cli
jne
xor
mov
pop
ins
fist
adc
vphsubwd
mov
and
cmp
mov
mov
xor
rol
xchg
xchg
push
jge
jbe
das
pop
(bad)
xor
popa
inc
pop
fldcw
addr16
add
gs
pusha
mov
movs
sbb
adc
sbb
inc
inc
retf
jecxz
jnp
or
mov
les
dec
and
in
xchg
or
adc
daa
int3
stos
jmp
aaa
fnstcw
sub
popw
fcmovnb
pop
in
pop
fild
ins
not
push
js
xor
cdq
movs
idiv
jecxz
push
out
sar
repnz
je
push
sub
imul
add
xlat
sti
mov
call
push
nop
push
xor
inc
mov
in
das
pop
jle
pop
leave
and
mov
xor
adc
xchg
jl
pusha
pop
retf
mov
xchg
scas
mov
les
sbb
fst
inc
mov
jo
push
ds
and
mov
movs
sub
mov
inc
mov
call
ficomp
xor
adc
jmp
(bad)
das
neg
sub
inc
sbb
jg
mov
cmc
add
dec
(bad)
mov
stos
int3
movs
sub
add
pop
sub
movs
loopne
(bad)
rol
sub
lea
adc
sbb
mov
fld
sbb
sub
movs
in
je
rcl
fiadd
sti
sar
xchg
(bad)
dec
mov
repnz
cmc
pop
enter
sbb
jp
fnstcw
fisub
sub
sar
mov
inc
and
jae
inc
sbb
repnz
(bad)
pop
cdq
loope
inc
or
dec
pusha
aaa
mov
mov
xchg
mov
jb
out
adc
jno
mov
mov
xor
dec
xchg
xor
or
jge
cmps
lds
aaa
mov
(bad)
jno
adc
inc
jmp
lahf
jb
call
fsubr
iret
mov
loop
mov
jbe
shr
push
outs
in
scas
je
adc
push
cmp
popa
(bad)
stc
gs
lock
pop
fcom
xchg
jae
add
cld
and
mov
frstor
call
push
(bad)
xor
adc
cmps
cmps
pop
test
fild
lods
pop
push
test
cmc
xchg
jo
rol
retf
iret
mov
mov
por
loope
fst
movs
inc
or
jmp
sti
test
shl
out
push
mov
lds
add
js
inc
rol
(bad)
out
cmc
pop
xchg
adc
dec
mov
sbb
es
jecxz
push
mov
jno
and
test
in
jae
pop
sbb
and
shl
lods
and
mov
in
dec
sub
int
push
sub
imul
push
jno
sbb
bnd
lock
mov
or
lea
out
mov
push
test
mov
call
outs
cmps
fst
out
rol
or
clc
adc
xchg
std
pop
pop
cmp
and
retf
and
dec
test
pop
xor
jo
into
sahf
lock
add
adc
ds
mov
ror
loopne
jg
mov
or
arpl
out
retf
inc
aam
cdq
lds
mov
cmp
jns
loop
inc
adc
repz
add
push
dec
ffree
inc
leave
and
out
out
ins
stos
xchg
inc
pop
retf
ds
sbb
into
std
ror
inc
sub
pextrw
pop
adc
push
in
mov
sbb
shl
pop
ret
arpl
lods
adc
not
ret
xor
and
ss
adc
and
loop
test
xchg
and
sahf
xor
test
cmp
cmp
xchg
out
nop
aaa
dec
xor
lods
and
or
jecxz
cmp
mov
rcl
jmp
push
outs
mov
add
mov
stc
sti
mov
push
ss
bound
sbb
sbb
(bad)
or
mov
aad
dec
pop
std
pop
sub
js
and
adc
cmp
out
push
lahf
stos
xchg
int
test
int3
push
movs
mov
push
push
add
mov
ret
mov
sbb
jno
inc
dec
retf
adc
pop
shl
(bad)
hlt
out
pop
ins
fs
xchg
mov
jae
jg
daa
push
mov
fwait
jns
xchg
cli
call
cli
sbb
cmc
jae
sub
repnz
ret
xchg
push
sub
sbb
rcr
mov
int
cmp
popf
shl
sti
(bad)
test
in
pop
(bad)
rcl
add
cmp
push
sar
fnsave
add
popf
fcmovbe
movs
push
out
add
pushf
lods
mov
adc
out
and
ja
and
sub
jg
sbb
fwait
mov
ja
mov
mov
push
jns
mov
mov
xchg
push
xlat
cld
inc
mov
aam
fisub
fisttp
add
cmp
sub
scas
stc
std
mov
jns
cmps
stos
mov
and
hlt
out
mov
or
es
pushf
push
in
cmps
sbb
sbb
jbe
mov
test
adc
hlt
jmp
sub
xor
fnstenv
push
inc
sbb
dec
(bad)
xor
ins
call
stos
add
pop
sbb
shl
(bad)
iret
xlat
(bad)
mov
pop
lock
mov
push
cmp
sbb
cmp
xor
lods
dec
cmps
imul
fwait
mov
dec
xchg
movs
test
push
jmp
mov
mov
push
add
lods
popa
mov
mov
cmp
push
pop
cmp
fistp
jo
les
cmp
aaa
dec
movs
mov
out
stos
jb
dec
not
ffreep
dec
mov
mov
sbb
popa
sbb
scas
sub
outs
sbb
sub
in
sbb
and
dec
push
mov
mov
jbe
push
leave
dec
loopne
cmp
loope
mov
cmc
push
outs
in
mov
fs
int3
and
pop
mov
repz
imul
scas
pusha
outs
leave
data16
ret
dec
push
(bad)
sbb
es
dec
jmp
daa
sti
xchg
rol
(bad)
or
lock
xor
(bad)
cmp
pop
shr
jmp
dec
sub
aad
aaa
sti
xor
sbb
dec
mov
nop
mov
mov
mov
mov
pmulhw
cli
loope
sub
mov
add
arpl
in
dec
fdivr
mov
repz
sub
add
imul
aaa
and
sbb
push
cmps
dec
cmc
(bad)
sbb
jp
push
push
pusha
lods
setb
cwde
lea
push
test
mov
sahf
jmp
xchg
addr16
sbb
sbb
sar
add
out
out
int
adc
popf
xchg
push
mov
xor
movs
movs
adc
movs
cmp
add
(bad)
mov
rol
jno
dec
adc
and
(bad)
mov
dec
and
cmp
nop
fmul
lahf
das
(bad)
mov
mov
lds
popa
cmp
es
push
mov
shld
push
aas
cmps
lods
push
stos
call
jbe
xchg
dec
add
cwde
js
int
inc
cli
jo
cmp
dec
and
sbb
adc
push
jmp
sub
fs
cmp
lea
(bad)
cmps
and
std
xchg
bnd
inc
add
push
cli
sti
ja
or
jne
mov
div
retf
aas
and
jg
sub
mov
lahf
xchg
add
loope
addr16
pushf
nop
popa
xchg
xor
arpl
sub
inc
jmp
aad
sub
nop
cmp
push
or
ror
(bad)
js
pusha
jmp
push
add
add
mov
je
fnstcw
dec
lds
push
pushf
repnz
rol
test
fdivr
and
shr
in
std
xchg
test
fstp
xchg
xor
push
cmp
mov
aam
pop
sbb
stc
pop
mov
mov
lahf
jmp
enter
mov
adc
lahf
pop
or
push
dec
jl
mov
clc
movs
sbb
push
pop
test
adc
rcl
rol
arpl
ret
push
push
mov
(bad)
int
cmp
ror
fwait
cmp
mov
(bad)
loopne
mov
loope
xor
push
bound
dec
and
sbb
scas
ret
lahf
xlat
or
imul
mov
and
out
imul
adc
fdiv
pop
mov
les
sbb
add
imul
ins
mov
aaa
and
repnz
xor
(bad)
jmp
test
and
(bad)
mov
cmc
mov
and
in
xor
(bad)
test
fist
sub
inc
mov
hlt
xchg
jecxz
jge
dec
mov
cmc
xorps
pop
mov
popf
xchg
pop
inc
fwait
jb
fist
push
imul
pushf
xor
test
sar
jo
scas
adc
mov
mov
mov
jmp
imul
pop
test
add
enter
adc
ficom
inc
aaa
push
push
cwde
inc
push
pop
pop
ret
(bad)
shl
inc
aam
xchg
stos
add
ret
scas
cmp
and
xlat
ror
enter
mov
xchg
mov
fadd
(bad)
cld
inc
sub
lods
pop
inc
test
ds
cmp
sbb
dec
(bad)
jmp
dec
ins
sti
inc
mov
mov
xor
pop
or
ins
aaa
jmp
xchg
repz
das
mov
xchg
xor
jmp
inc
add
push
idiv
push
sub
push
dec
push
push
mov
setnp
aaa
out
(bad)
jae
jo
daa
push
xchg
adc
rcl
(bad)
cmps
xchg
mov
cmc
dec
xchg
test
repz
std
ins
sahf
rol
call
xchg
add
xchg
ins
xor
mov
jnp
jne
mov
pop
retf
das
mov
push
cmp
cmp
push
adc
repz
js
jno
push
xor
jmp
arpl
fst
mov
dec
jb
xchg
sbb
add
cmp
pop
sub
xor
ret
outs
push
sbb
pop
push
icebp
mov
fidiv
pop
stc
xchg
or
fisubr
xchg
xor
jmp
(bad)
cld
or
ja
jbe
jmp
push
xor
sub
jle
xor
sbb
push
js
mov
int
nop
sbb
hlt
dec
cmp
dec
push
inc
and
push
xlat
push
imul
jb
or
dec
mov
cmp
test
sub
mov
mov
or
loopne
mov
in
sub
push
das
call
stc
bound
or
adc
fld
stc
or
les
aad
pop
daa
push
inc
and
push
xor
inc
add
out
mov
mov
ds
pop
adc
jne
pop
dec
mov
add
addr16
neg
inc
xor
retf
jno
adc
iret
in
mov
inc
call
clc
out
sub
stos
adc
inc
(bad)
cmp
das
adc
sub
jb
mov
push
test
sub
inc
stc
xchg
push
sub
cwde
adc
xchg
and
cld
sub
retf
xlat
stc
cmp
push
ss
dec
cmps
mov
ss
or
iret
sub
jecxz
push
movs
cmp
mov
mov
pop
add
sbb
hlt
inc
out
push
push
aam
push
cmc
xor
push
movs
ret
ds
push
into
mov
xlat
xor
adc
popf
rol
imul
sbb
xchg
aas
out
lods
pop
movs
cmp
aas
fwait
jp
neg
fldz
push
cli
push
jns
push
push
cmp
loope
mov
call
push
add
cmp
ss
fcom
push
push
pop
cmp
cmp
push
stos
and
fcos
in
outs
outs
ja
out
xchg
dec
sbb
inc
or
scas
shl
sub
daa
sub
stc
(bad)
xchg
maskmovq
not
mov
xor
pop
repnz
and
dec
out
retf
pop
cmp
mov
ins
push
fcom
adc
enter
sub
jb
fist
xor
ja
xchg
cs
clc
ret
out
ror
inc
fmul
sbb
scas
and
les
jl
fbstp
pop
iret
add
in
fiadd
rcl
mov
mov
popa
mov
pop
stos
fwait
cmp
rol
or
and
cmc
in
add
pop
retf
jge
pusha
or
(bad)
jo
fnstsw
call
cmps
sahf
adc
push
div
pop
cdq
sub
call
cmp
adc
repnz
xchg
xchg
test
and
jbe
sbb
into
pushf
pop
lock
(bad)
push
jnp
push
fdiv
xor
or
fisub
push
pop
cwde
call
pop
mov
sbb
arpl
mov
call
jno
mov
mov
pusha
test
pushf
das
sbb
xchg
or
add
int3
add
cli
and
mov
mov
iret
das
test
xchg
pop
pop
popf
xchg
cmp
mov
xchg
adc
mov
stc
inc
lock
push
fnstenv
sub
mov
sbb
std
aad
bound
dec
xor
and
sbb
add
push
sar
cdq
aad
arpl
inc
jb
repnz
int
and
sbb
ss
add
adc
add
mov
cmp
out
dec
or
sbb
mov
dec
inc
repnz
push
inc
xchg
out
repnz
xor
cmp
ins
mov
mov
push
stos
or
inc
inc
pop
mov
dec
and
mov
call
addr16
jnp
pop
pop
dec
dec
and
xchg
push
ret
lea
mov
cmp
fs
pop
pop
mov
xor
sbb
push
(bad)
pop
dec
push
push
inc
lea
in
jmp
out
call
and
movs
das
cmp
bound
push
mov
adc
sub
dec
cmps
lahf
(bad)
(bad)
adc
mov
xor
pushf
stos
adc
in
cdq
std
daa
adc
jbe
js
outs
das
sti
dec
pop
sub
shl
mov
test
pop
xor
hlt
lock
cmc
enter
xchg
xlat
mov
ss
aad
inc
jp
or
out
leave
cld
repz
sbb
xchg
in
add
sbb
jne
add
jo
cwde
xchg
pop
push
cmp
stos
adc
add
jne
iret
in
jo
jl
je
lods
jg
pusha
ja
ja
adc
fld
dec
fwait
mov
jmp
mov
xchg
lds
hlt
add
and
pop
inc
dec
fdivr
cmps
inc
lods
pop
fiadd
mov
push
and
rol
jmp
or
scas
imul
push
mov
repnz
fld
dec
test
xlat
dec
push
mov
inc
lods
ss
mov
mov
push
(bad)
push
jo
out
cmp
or
and
jp
add
push
rcr
loopne
pop
inc
sbb
test
stos
ds
fs
out
push
js
xchg
push
add
xor
mov
lods
sbb
mov
adc
gs
pop
cmp
jp
popf
xchg
loopne
mov
es
dec
scas
fst
rcl
aas
mov
aam
push
mov
mov
push
ret
cmps
pop
inc
push
xchg
cmps
hlt
lods
xlat
mov
std
dec
cmp
movs
jl
bound
push
nop
mov
test
lea
push
aas
mov
gs
scas
movs
ret
lahf
cmp
fisttp
je
pop
cmps
cdq
in
lock
sub
shl
ret
cmp
jne
enter
mov
adc
adc
push
clc
loop
aaa
pusha
je
dec
mov
stc
mov
pop
mov
leave
dec
ja
mov
cmc
clc
sbb
nop
push
push
movs
js
icebp
ins
or
push
jo
xchg
std
add
jae
cmp
repz
addr16
xchg
(bad)
xor
mov
mov
inc
test
xchg
jno
push
pop
pop
les
mov
mov
cmp
cmp
(bad)
ret
sub
push
cmp
mov
rcr
sub
jne
es
mov
adc
lods
push
(bad)
xchg
xchg
mov
repnz
lea
mov
imul
cmp
stos
adc
jnp
cmp
xchg
and
mov
inc
adc
out
leave
sbb
add
test
movs
rcr
fld
loopne
push
fistp
rcl
cdq
stc
fistp
std
dec
dec
jge
arpl
cli
add
cmp
(bad)
scas
popf
ror
das
les
bound
jle
sub
lea
sub
cwde
mov
clc
pusha
gs
retf
mov
push
leave
xlat
shr
sub
xchg
outs
and
push
neg
loop
sbb
inc
and
arpl
repz
pop
mov
adc
pushf
mov
arpl
cmc
push
mov
cwde
xor
lods
push
jmp
jecxz
inc
xor
gs
cmp
fcom
leave
cs
or
fnsave
stos
mov
inc
cli
add
rcr
sti
adc
es
mov
jns
and
cdq
push
dec
clc
pop
jmp
sti
adc
mov
push
out
inc
mov
in
xor
jno
pop
sbb
fisttp
mov
clc
and
(bad)
sbb
jo
xchg
dec
arpl
repz
pop
(bad)
(bad)
jmp
(bad)
sti
mov
ins
retf
mov
jg
out
or
xchg
and
sbb
push
pusha
mov
daa
fdiv
mov
(bad)
lods
sub
mov
jb
cmp
pop
rcl
(bad)
data16
xor
jmp
pop
pop
outs
mov
sub
retf
sbb
and
call
cli
adc
pop
sahf
fnstcw
cld
mov
jmp
fild
cli
push
cmp
(bad)
addr16
sti
and
out
sub
and
xchg
retf
gs
add
fld
dec
mov
(bad)
test
sub
mov
iret
pop
dec
imul
movs
loop
sar
in
call
ja
inc
daa
xor
fadd
mov
in
clc
scas
int3
clc
arpl
cmp
ja
mov
adc
jl
ins
lods
cmp
cmp
push
mov
and
add
popa
and
int
inc
dec
mov
mov
cmp
and
cmp
sbb
mov
lods
mov
xchg
shld
test
push
xchg
(bad)
jmp
sti
lods
xchg
add
scas
push
rcr
push
and
daa
ja
rcr
lock
rcr
pop
mov
xor
sahf
cwde
inc
mov
xor
repz
daa
push
pop
mov
ret
call
sbb
lods
cmp
(bad)
loopne
jle
and
sbb
cmp
xchg
push
hlt
sbb
int
pop
test
or
call
shr
jg
iret
outs
jnp
outs
shl
out
jmp
mov
arpl
lock
retf
call
es
(bad)
lds
pusha
test
fadd
out
lods
inc
pop
cmps
jb
inc
iret
data16
in
(bad)
lock
ja
and
addr16
mov
into
int
mov
icebp
jb
adc
sub
cmp
scas
add
sti
and
sbb
or
mov
jg
stos
loope
stc
call
pop
push
pop
out
popf
mov
ror
loope
idiv
xchg
mov
jns
sahf
mov
fidiv
gs
cmps
push
push
xchg
in
xchg
mov
jl
je
jmp
jns
add
lds
inc
inc
xor
int3
test
pop
cld
lock
imul
mov
jmp
jae
cmp
rcr
push
ret
adc
jecxz
scas
int3
out
and
(bad)
mov
js
cmc
cmp
xor
jmp
out
and
jmp
shl
sub
mov
pop
gs
xchg
cdq
or
cmps
mov
fist
and
pop
cmp
repnz
fimul
cmp
test
dec
push
cli
inc
das
clc
push
iret
sbb
ins
mov
pop
and
mov
shr
ds
retf
and
ret
dec
mov
pop
sbb
lea
mov
sahf
std
icebp
(bad)
ins
test
mov
in
fdiv
cdq
movs
les
mov
ret
adc
shl
mov
or
cmps
pusha
scas
add
rcr
mov
popf
movs
xor
inc
call
pop
inc
cmp
test
aam
push
mov
sub
or
scas
dec
mov
scas
xor
ins
mov
pop
sar
or
(bad)
scas
lea
fistp
mov
cli
and
dec
ret
pop
fsubr
push
mov
jge
inc
lock
arpl
cmc
dec
sbb
sub
outs
repnz
cmp
or
popf
adc
ins
pop
sbb
aad
call
mov
das
pusha
outs
and
xor
int
test
mov
push
popa
cmp
aam
(bad)
cli
je
int
and
add
jecxz
jp
jbe
ret
test
xor
xor
aam
inc
(bad)
lahf
out
mov
inc
push
push
dec
out
sub
inc
shl
mov
sub
add
push
mov
pop
sub
mov
int
xchg
pushf
clc
fnsave
sub
inc
sub
jp
fistp
mov
and
call
or
push
dec
neg
call
nop
xor
sbb
stos
jp
fcmovbe
jne
iret
scas
lods
inc
test
movs
push
and
inc
cmps
fisubr
push
xor
pop
push
loop
mov
neg
mov
mov
aad
call
cld
add
sar
cmp
fsincos
addr16
inc
push
and
mov
call
mov
cs
rol
movs
mov
dec
fstp
(bad)
pop
jg
add
and
adc
pop
and
or
pop
adc
mov
xor
daa
cmp
loop
push
nop
mov
dec
fwait
popa
in
pushf
xor
std
outs
fmul
inc
jmp
mov
sbb
xlat
sar
mov
jmp
jae
retf
in
clc
lahf
arpl
push
cmp
pop
pop
addr16
jmp
popa
push
push
cwde
xchg
scas
xor
scas
sbb
out
dec
imul
retf
xchg
sub
int
dec
adc
jge
pop
pop
and
xchg
mov
pop
lea
add
enter
jns
fwait
mov
add
int3
aas
xchg
xor
cmp
adc
and
sbb
pop
std
add
test
fnstsw
sahf
hlt
in
fistp
jl
fcom
mov
sub
icebp
lods
pop
and
ret
jl
mov
loope
mov
adc
xchg
je
bound
sbb
sub
call
mov
sub
(bad)
fidivr
imul
cmp
or
push
jmp
out
mov
xchg
popf
xchg
enter
jg
das
ror
imul
je
xchg
aaa
aas
ins
or
inc
iret
stc
iret
aam
lods
pop
imul
push
(bad)
out
jno
cmps
aad
sar
inc
pop
stos
or
into
cmp
ud2
stos
nop
in
push
aam
pop
outs
cdq
push
out
dec
adc
sahf
xor
jge
mov
mov
(bad)
aas
mov
fdiv
add
add
aad
adc
(bad)
pop
ins
movs
add
mov
sub
jb
or
dec
aaa
mov
stos
xchg
and
ds
mov
out
push
stos
retf
movs
mov
lock
or
mov
push
add
jo
jge
ds
sub
fucomi
or
(bad)
and
pusha
cld
lahf
test
outs
xchg
imul
lea
jle
jmp
in
sbb
gs
mov
shr
(bad)
out
loopne
fninit
clc
das
test
je
loopne
es
mov
sahf
fidivr
adc
mov
test
popa
jp
and
mov
jne
xchg
fisttp
ins
leave
cwde
push
mul
cmp
ins
mov
cmc
jmp
std
xchg
dec
add
push
pop
(bad)
push
add
leave
mov
jl
out
cli
and
pop
outs
mov
mov
sbb
dec
icebp
and
cmp
dec
cs
sub
cmc
out
(bad)
retf
push
call
fldcw
(bad)
loop
call
lods
mov
pop
rcr
mov
loopne
and
adc
add
add
cmp
cld
jg
scas
scas
or
ja
popf
push
call
lods
pop
add
dec
push
jno
lahf
stos
jno
sar
add
dec
call
cmps
daa
pop
sub
in
push
std
scas
cmp
loope
add
jg
movs
sub
cwde
ja
pop
jne
icebp
enter
imul
adc
sub
lock
pop
adc
lahf
pusha
push
dec
adc
daa
mov
add
pop
adc
cmp
xchg
pop
jmp
aaa
pushf
es
mov
sbb
add
or
setg
sbb
pop
ss
add
xor
leave
rcl
cmp
sbb
adc
ins
les
std
inc
push
jmp
adc
mov
push
mul
leave
ss
test
dec
inc
out
cmp
test
cmps
aas
(bad)
out
mov
dec
sub
or
pop
fwait
(bad)
lods
(bad)
add
addr16
or
mov
adc
sti
cli
and
jae
xor
dec
mov
int
js
outs
ins
jge
jo
dec
pop
lods
adc
mov
rcr
scas
mov
dec
imul
sub
stos
dec
dec
call
adc
mov
scas
or
inc
pop
cmp
std
jp
push
mov
xchg
rol
(bad)
jmp
mov
(bad)
std
push
bound
sar
dec
imul
mov
adc
mov
push
add
rcr
cmp
aad
pop
das
call
mov
xor
iret
retf
adc
dec
xor
and
pushf
xchg
adc
rcl
jge
jo
call
stc
(bad)
cld
clc
dec
mov
jmp
rol
add
imul
shl
mov
mov
adc
hlt
sbb
push
aaa
ret
cmp
aas
ror
seto
data16
pop
fcom
cdq
repz
mov
pushf
inc
jo
mov
repz
push
mov
data16
out
outs
jno
call
pop
mov
out
push
inc
mov
and
mov
out
or
dec
mov
jnp
clc
xor
xor
popa
jg
fisub
test
pop
push
inc
jecxz
pusha
mov
mov
movs
add
mov
test
bound
add
push
sub
call
loop
mov
jno
push
inc
test
dec
jmp
outs
jecxz
pop
cmps
imul
cmp
jge
and
xlat
pushf
fsubr
lds
or
push
imul
xchg
test
jmp
movs
xor
pop
mov
push
daa
dec
mov
lock
sahf
cmc
fisub
jne
(bad)
and
stos
sahf
add
into
push
cmps
xchg
ret
jp
pop
ret
sbb
and
inc
pusha
push
dec
adc
mov
addr16
push
cmp
test
sti
inc
mov
hlt
aaa
push
push
dec
pop
and
cmp
jl
icebp
sbb
sbb
xlat
mov
popa
retf
imul
scas
pop
mov
ror
cmps
fsub
lahf
outs
in
add
retf
sbb
pop
pop
and
addr16
dec
(bad)
and
dec
xlat
jmp
ds
cmp
mov
aaa
and
popf
lock
out
mov
shl
fcmovnu
out
cmc
outs
add
je
dec
push
mov
inc
sub
shr
push
or
repz
cwde
in
adc
cmp
xchg
pop
jmp
jle
adc
dec
sub
mov
sub
cwde
xor
pop
pop
jmp
psrlw
arpl
mov
sbb
(bad)
push
pusha
mov
cmp
sti
fisub
lds
inc
lock
hlt
imul
(bad)
(bad)
ss
cdq
and
adc
inc
mov
mov
pop
(bad)
inc
loop
sbb
push
aaa
mov
pop
sub
jmp
mov
outs
ins
push
adc
cmp
stc
cmp
in
ds
mov
mov
pop
(bad)
stos
xchg
sbb
data16
mov
repz
and
daa
add
mov
adc
call
sub
das
or
sub
adc
inc
push
xlat
push
cmp
mov
fstp
push
aam
ss
push
ja
popf
sbb
shl
inc
enter
das
ins
push
jae
or
mov
fs
xor
fdiv
mov
lea
xchg
test
shr
and
lea
fbld
stos
mov
pop
mov
mov
adc
xor
dec
inc
jge
cmps
jmp
jbe
nop
ror
data16
pop
inc
fdiv
ror
mov
or
jbe
ss
shr
clc
mov
cmc
mov
inc
daa
jne
jo
inc
fwait
(bad)
fadd
jne
xchg
pop
fwait
sub
mov
mov
clc
inc
retf
mov
push
mov
rol
pop
mov
dec
pop
and
and
cs
add
retf
xor
or
vpminsw
xchg
pop
fstp
int3
(bad)
sub
push
sub
(bad)
jne
sub
std
shl
hlt
arpl
leave
test
loopne
xor
pop
(bad)
mov
out
fild
xchg
lods
or
jmp
scas
push
bound
adc
jae
pop
jnp
jae
inc
push
enter
xor
(bad)
cld
inc
jge
pop
inc
push
adc
pop
mov
ret
and
mov
push
fsub
mov
(bad)
and
and
xchg
jl
sbb
jecxz
pop
lods
sbb
test
scas
xor
push
int3
shl
push
push
fcmovbe
pop
jle
es
push
and
(bad)
mov
hlt
bound
out
mov
and
out
dec
adc
xchg
xchg
ret
xchg
lods
sub
je
add
sar
inc
fsub
ret
and
add
scas
pop
lahf
adc
and
sbb
hlt
daa
push
jbe
out
movs
sti
nop
xor
sbb
les
es
push
leave
out
mov
xor
cwde
test
mov
cmps
xchg
cli
(bad)
es
and
dec
(bad)
daa
out
and
jl
ins
out
add
sub
add
addr16
mov
retf
adc
xchg
pushf
retf
(bad)
stos
int
cs
imul
jb
mov
ss
sahf
popf
adc
or
stos
out
pop
cdq
lahf
fs
retf
inc
jle
cmps
push
ins
les
lock
jmp
in
cmp
xor
imul
cmp
jge
aas
and
test
stos
lock
pop
arpl
ins
addr16
lock
enter
fwait
(bad)
sbb
js
cmc
int3
dec
call
jl
mov
repz
fwait
mov
and
add
jb
push
adc
adc
cmp
jecxz
mov
push
in
addr16
rcr
out
mov
pop
jb
cmp
ins
cmovnp
xchg
fsub
or
adc
dec
mov
out
or
xor
jmp
xor
sbb
out
mov
sti
pusha
not
popa
shl
in
(bad)
sbb
popf
mov
lahf
jmp
adc
shr
mov
in
cmp
fisub
cmp
mov
div
sbb
daa
jae
sub
jmp
or
(bad)
jmp
lahf
std
xchg
ret
push
mov
ja
pop
in
mov
mov
int3
seto
clc
fs
in
imul
cmp
cmp
jb
ins
fcom
jmp
stos
popf
xchg
jb
jo
addr16
lock
adc
dec
xchg
jbe
pop
mov
stos
fisubr
sub
clc
fwait
or
sub
scas
dec
cli
jmp
adc
movq
sbb
and
xor
rcl
fwait
inc
pop
sbb
iret
out
arpl
push
mov
xchg
imul
pop
pop
ins
jno
push
or
mov
aas
sbb
out
outs
jb
ret
cmc
shl
xor
pop
je
cmps
ins
pop
pop
jmp
lods
xor
mov
jae
leave
jmp
imul
jb
imul
sar
adc
shr
mov
int3
xchg
addr16
ret
adc
rcr
mov
popf
push
cmp
pop
sahf
mov
cmp
dec
sub
ror
add
mov
xchg
jb
xor
clc
jmp
mov
push
sbb
mov
mov
pop
cmp
je
fs
popa
push
iret
xor
lods
mov
call
adc
retf
push
test
gs
or
pop
fwait
outs
mov
(bad)
lds
cmp
cmp
mov
ror
loop
and
fucomp
adc
inc
jle
push
aaa
cwde
cmp
mov
scas
push
cmp
(bad)
(bad)
push
pushf
xor
xchg
mov
lahf
xchg
push
test
arpl
call
cmp
jge
(bad)
inc
in
push
cmp
inc
ret
cwde
mov
int3
mov
push
sub
pop
xchg
inc
ja
jae
icebp
stos
jecxz
adc
(bad)
fmul
adc
add
popa
mov
add
scas
jmp
int3
and
sar
pop
jmp
mov
outs
leave
jl
lahf
stos
pusha
test
sbb
std
jmp
sub
inc
icebp
fnstsw
push
fidivr
cmps
sub
stc
fidiv
aam
sub
aaa
iret
jmp
outs
in
aam
pop
inc
int
rcr
mov
out
add
adc
out
loopne
push
inc
inc
(bad)
lahf
adc
sbb
outs
cmp
add
xor
gs
sbb
pop
lahf
aad
repz
xchg
sbb
dec
mov
xor
dec
test
push
lahf
add
adc
sbb
movs
popf
mov
movs
es
cmp
cmp
in
aaa
push
xor
jge
add
out
(bad)
xor
cmps
repnz
push
leave
mov
cwde
js
xor
pushf
and
xor
sbb
or
jl
mov
pop
js
test
bound
pushf
mov
push
or
mov
int3
fstp
mov
push
jl
lea
push
(bad)
push
in
ja
dec
ja
adc
or
mov
and
cmp
push
and
lds
scas
push
aam
jno
ret
sti
ret
in
pop
(bad)
push
ret
pop
xor
inc
stos
cmp
dec
enter
cdq
and
call
loopne
into
jne
iret
cmc
mov
mov
add
mov
call
xor
shl
fcomp
(bad)
loope
xor
stos
xor
out
mov
lods
cmp
mov
sub
div
jbe
pop
add
pop
scas
mov
and
rcr
xor
cmp
loopne
add
in
in
jp
enter
push
mov
fs
cmc
inc
mov
and
cld
jmp
addr16
out
cmc
mov
cli
mov
pusha
arpl
inc
or
mov
(bad)
(bad)
movs
(bad)
fdivr
out
and
jecxz
repz
(bad)
push
cmps
rol
adc
arpl
sbb
adc
xor
inc
mov
inc
call
ss
call
retf
adc
(bad)
add
inc
inc
pusha
out
cmps
mov
dec
mov
clc
gs
mov
repnz
jg
fcom
xchg
jmp
pop
push
pop
loope
inc
shrd
clc
cmps
in
or
jo
pop
cmp
inc
pushf
pop
mov
std
mov
ds
in
test
sbb
loop
xchg
and
inc
pop
mov
mov
hlt
shr
push
add
mov
mov
dec
neg
cmp
lock
js
cmp
pop
inc
nop
xchg
loop
xor
mov
jo
mov
std
ret
mov
pop
imul
rol
call
outs
pop
sbb
inc
fidiv
inc
cmp
int
dec
push
test
test
(bad)
xor
lds
pop
or
mov
lock
cs
adc
(bad)
sub
jbe
ins
pushf
in
call
pusha
pop
retf
je
push
mov
icebp
adc
adc
cs
in
iret
out
push
addr16
sbb
ja
leave
jl
in
mov
ficomp
xchg
inc
in
lods
inc
jae
mov
mov
mov
inc
push
int
out
mov
aam
stc
(bad)
xchg
cmp
jno
fcomp
(bad)
rcl
sbb
xor
mov
cmp
sub
stos
call
repz
xlat
push
cld
cld
hlt
xor
and
test
mov
ins
fimul
and
(bad)
xchg
test
adc
mov
int
jp
and
mov
retf
inc
jg
adc
cmp
cmps
stc
pop
xchg
call
mov
(bad)
mov
outs
cmc
or
ror
sub
je
add
test
lds
inc
outs
(bad)
aas
in
cmps
shl
pop
es
imul
pop
pop
xchg
lods
mov
popf
mov
ret
test
jno
imul
or
dec
dec
scas
(bad)
fmulp
stc
icebp
cdq
lock
mov
in
dec
dec
movs
sbb
pop
cmp
mov
xchg
aad
out
jnp
mov
mov
push
xlat
push
dec
dec
cmps
pop
xchg
scas
inc
int3
jecxz
or
and
cmc
call
lods
dec
mov
and
sbb
call
pop
pop
sbb
(bad)
push
stos
loopne
mov
xchg
sbb
jne
mov
xor
jae
ins
and
(bad)
imul
call
iret
and
repz
mov
popa
and
mov
sar
xor
cmp
add
inc
lods
sub
fadd
rcr
add
dec
adc
and
push
or
cs
aas
and
daa
cwde
(bad)
loopne
mov
or
(bad)
movs
ficomp
mov
cld
mov
popf
clc
mov
mov
repz
dec
xchg
sub
mov
jae
jl
lods
mov
inc
int
(bad)
sub
adc
aas
sub
adc
or
add
(bad)
ins
mov
loopne
mov
mov
mov
out
popf
stc
sahf
inc
pop
scas
int
sti
loope
or
cmps
imul
xchg
xchg
ja
push
stc
mov
sub
push
adc
or
dec
vpshufd
jp
jo
lods
and
inc
adc
cmp
xlat
icebp
pop
inc
div
add
mov
sub
push
cmp
jmpw
push
or
ds
daa
xchg
ins
into
sbb
or
cmps
dec
dec
jno
mov
adc
push
cs
inc
fdivr
in
or
aas
ror
add
push
mov
sti
adc
pusha
popf
into
sbb
xchg
retf
fsubp
inc
in
(bad)
mov
call
std
add
mov
es
dec
sub
push
cwde
mov
jmp
mov
das
in
inc
mov
loopne
inc
xchg
pop
xor
adc
and
lea
pop
xchg
push
jp
adc
ins
rcl
pushf
dec
fadd
push
sub
dec
loopne
pop
cli
add
dec
out
repnz
(bad)
push
mov
sub
sbb
repz
cwde
movs
ins
addr16
sub
loope
adc
movs
(bad)
xor
mov
sub
(bad)
test
or
out
sub
daa
pushf
jmp
jmp
or
push
stos
out
pop
rol
ds
nop
sbb
stc
outs
pop
mov
mov
jb
mov
in
add
xlat
push
sti
repnz
mov
shl
into
mov
mov
dec
xor
(bad)
mov
cmp
imul
adc
cmp
mov
push
cmps
cmc
sbb
aad
mov
test
xor
jae
in
cmp
inc
ret
mov
jl
inc
mov
rcr
fld
cmp
push
mov
aaa
mov
inc
out
rol
add
fwait
xor
int3
sahf
sbb
call
ficomp
mov
inc
sub
pop
popa
mov
or
cmp
leave
inc
retf
push
xor
mov
icebp
inc
es
jecxz
mov
adc
pop
fnstcw
mov
xchg
gs
test
loope
adc
popa
shl
loope
jl
mov
mov
pop
aas
pushf
sub
jecxz
outs
out
sti
shl
out
loop
push
pop
outs
hlt
add
scas
(bad)
fist
je
ss
xchg
arpl
test
cs
jns
(bad)
and
pop
ds
and
pop
mov
add
mov
mov
ror
cli
nop
jle
mov
or
dec
sub
call
jmp
cs
fcomp
lock
data16
sbb
add
inc
push
in
xchg
add
sbb
add
push
outs
sti
mov
mov
inc
pop
nop
xlat
call
iret
popa
mov
jg
adc
add
js
mov
test
imul
jno
aad
mov
in
das
test
jl
xor
loope
test
sti
mov
xchg
scas
push
out
push
cdq
fxam
lods
cmps
call
adc
dec
es
sbb
ins
add
mov
movs
repnz
scas
sub
inc
cdq
xlat
push
cmp
mov
fild
pop
scas
add
in
xchg
xor
fcomp
pmullw
cmp
sub
mov
popa
sbb
rol
or
and
and
ret
xlat
dec
je
add
mov
cli
and
dec
adc
fdiv
sub
repz
hlt
call
arpl
sub
inc
xor
idiv
xor
lock
int
stos
mov
dec
jmp
jo
je
div
fnsave
fnstcw
and
lea
mov
pusha
in
cmps
mov
addr16
fwait
hlt
jae
mov
add
inc
xor
or
cld
imul
(bad)
dec
xchg
lods
jno
out
cmps
sub
popf
or
and
fwait
sub
retf
push
sbb
test
xlat
cmps
imul
ins
popf
ins
and
cld
cmp
ins
push
inc
rol
ja
inc
inc
and
test
mov
ins
mov
xor
fst
push
inc
sti
in
pop
imul
movs
scas
outs
jo
xor
mov
ret
repz
pushf
sbb
xchg
nop
jle
mov
loope
clc
pop
add
add
(bad)
mov
int
call
xchg
mov
sbb
inc
xchg
fwait
jp
pop
rol
sbb
out
daa
ret
cs
std
inc
rcl
push
xchg
inc
sub
loop
lock
fdiv
xor
test
pop
push
cdq
sbb
xchg
in
sbb
jmp
mov
sub
mov
xchg
dec
mov
ins
mov
push
retf
fisttp
push
jbe
fimul
(bad)
or
push
and
xchg
inc
dec
bound
outs
inc
xchg
cmps
push
mov
loop
aaa
xchg
add
dec
jno
or
cmp
jg
or
dec
adc
push
mov
push
fmul
inc
jge
int3
pop
xor
mov
mov
ret
loopne
push
inc
sub
aaa
dec
ds
outs
mov
ret
jle
data16
repz
adc
push
or
fcmove
mov
(bad)
push
iret
mov
test
xor
mov
popf
pop
es
push
add
nop
lss
test
mov
lock
hlt
xchg
loopne
imul
lods
sub
jmp
mov
jmp
mov
jae
pop
xchg
jne
pop
sub
cmc
pop
stos
mov
mov
jge
add
rcr
arpl
(bad)
test
aas
pop
adc
sbb
jmp
push
(bad)
test
adc
sar
pop
mov
sbb
pop
data16
popa
mov
and
push
inc
scas
or
and
retf
sub
lea
add
jge
xchg
sbb
pop
jmp
mov
sti
cwde
nop
xlat
out
clc
sbb
out
add
mov
int3
out
js
iret
mov
push
push
pusha
and
ins
push
xchg
xchg
xchg
xchg
mov
into
cmps
cld
jle
xchg
lods
add
jg
cli
call
fiadd
inc
in
xor
push
add
xor
xchg
in
inc
outs
xchg
jae
jo
jg
xchg
mov
in
xchg
(bad)
sbb
not
sbb
stos
or
scas
neg
repnz
hlt
and
addr16
stos
mov
mov
sbb
out
shl
push
call
outs
test
cmp
addr16
mov
repnz
mov
and
data16
movs
add
pop
mov
add
out
push
loope
or
test
call
mov
or
pop
xlat
push
loope
ja
pop
xchg
xor
lods
test
sbb
repz
loope
test
(bad)
sub
(bad)
mov
sbb
icebp
pop
or
popa
cmps
lods
out
stos
nop
dec
dec
mov
and
mov
sub
dec
inc
inc
repz
xchg
call
xchg
xor
jnp
sahf
fidiv
out
xor
dec
pop
jl
outs
cmp
cmp
cmp
mul
sub
add
jg
fwait
pop
rol
jns
fld
bswap
jae
mov
push
icebp
mov
in
imul
nop
push
popa
jmp
push
mov
pop
sub
loope
into
jg
jmp
neg
sbb
scas
stos
mov
iret
imul
mov
jp
imul
adc
test
mov
inc
mov
movs
push
nop
(bad)
mov
nop
jl
sub
add
int
push
outs
cmps
add
sbb
in
inc
ja
add
aaa
aaa
cdq
ss
cs
rcl
push
cmp
xchg
loope
pop
loop
ja
cmovnp
xor
sub
aad
and
popf
fistp
and
lahf
rep
pop
cs
mov
mov
sar
daa
sahf
mov
lea
mov
popf
and
jne
add
psrlw
cs
sub
or
and
add
je
jnp
stos
test
inc
or
loope
div
xchg
adc
mov
inc
or
jp
and
js
fiadd
stos
mov
sub
jle
push
ins
xor
div
test
dec
xor
cdq
and
pop
cmp
xchg
stos
pop
(bad)
out
push
jno
icebp
popa
std
pop
cmp
or
mov
loop
dec
mov
pop
repnz
pusha
js
or
xchg
into
loopne
test
mov
out
pop
dec
push
outs
or
mov
loop
aad
xchg
xchg
rol
and
pop
fisubr
sbb
jle
sub
push
icebp
loope
or
popf
dec
mov
add
lock
pop
mov
ret
jecxz
xor
cmps
int
int
daa
loop
clc
sub
mov
stos
lock
and
mov
stos
push
pop
leave
xor
loop
fist
rcr
mov
loope
movs
(bad)
sti
in
fsubr
lods
gs
aam
add
xor
fs
outs
jmp
sbb
sbb
stos
loop
and
and
rcl
aas
mov
sub
ins
lods
inc
mov
or
push
push
xchg
mov
xchg
and
pop
in
inc
sbb
pushf
xchg
push
inc
pcmpgtw
aad
jecxz
jl
iret
pmulhw
dec
shl
jno
mov
stos
xor
cmps
sti
shl
mov
push
xor
pop
mov
in
lock
mov
xor
mov
adc
jae
in
jecxz
rcr
fs
jb
sbb
jbe
mov
retf
int
pop
pop
out
dec
or
pop
ret
xchg
retf
cmps
or
pop
sbb
shl
rcl
mov
std
pop
and
jmp
jge
jg
in
pop
mov
leave
das
fcomp
inc
arpl
push
cmp
push
stos
push
mov
mov
fild
icebp
mov
daa
movs
nop
push
mov
pop
xor
arpl
int3
mov
or
out
ins
cmp
add
mov
inc
cwde
loope
or
push
mov
cmps
cmp
cs
jne
mov
add
and
rol
bound
jecxz
pop
lods
gs
jbe
sub
mov
(bad)
add
pop
lea
test
add
inc
adc
mov
(bad)
jecxz
xor
int3
ret
mov
jp
hlt
adc
jp
sub
pop
xchg
sbb
inc
jle
adc
ss
nop
add
jg
cli
cdq
js
jnp
inc
sbb
mov
ret
mov
popf
add
inc
fidiv
arpl
cmp
shr
imul
fst
jns
jno
or
hlt
popa
call
xchg
jecxz
jb
xchg
not
idiv
outs
icebp
and
sub
arpl
or
jmp
inc
aaa
xchg
(bad)
push
repz
enter
inc
add
inc
popa
out
test
mov
ins
sbb
aas
inc
add
sbb
out
and
mov
pusha
rcr
lds
cmp
jns
test
outs
das
fstp
mov
arpl
out
or
je
and
cld
bound
cmps
stos
mov
fimul
cdq
pop
int3
(bad)
addr16
adc
call
test
mov
inc
mov
div
xor
mov
add
or
out
push
int
add
inc
icebp
xchg
imul
jo
rcl
fiadd
pop
or
fisubr
pusha
test
push
dec
push
into
(bad)
call
ret
cmp
mov
movs
xor
mov
test
(bad)
mov
sahf
cld
std
mov
(bad)
cmp
mov
add
pusha
mov
test
mov
in
pop
call
pop
jl
lods
retf
mov
test
adc
gs
ja
jecxz
lea
stos
pushf
jns
ror
xchg
cmps
test
add
mov
outs
sbb
shrd
pop
mov
or
mov
pop
mov
fwait
push
int
and
cmp
or
ret
lds
jns
imul
push
enter
dec
push
xor
sbb
int
cmp
xchg
jae
push
add
ins
mov
inc
inc
cmc
dec
xchg
mov
mov
pushf
adc
jmp
movs
add
pop
pop
iret
int
frstor
test
fs
scas
jns
mov
clc
into
dec
(bad)
(bad)
xor
jp
mov
sbb
mov
pop
ins
ss
out
in
nop
inc
call
nop
retf
js
loopne
jo
test
pop
add
mov
out
mov
xlat
xor
jmp
lods
clc
adc
cmp
push
push
mov
add
xchg
xor
push
adc
ds
jp
xor
imul
es
into
pushf
mov
push
outs
aas
xchg
icebp
and
adc
mov
or
jnp
xchg
push
loopne
imul
push
aam
inc
cmp
stos
in
sar
outs
add
into
(bad)
sbb
or
ror
xor
cmp
pop
mov
data16
and
or
jle
mov
es
add
pop
repz
sub
sub
fwait
enter
adc
jp
dec
xor
cwde
nop
inc
inc
rcr
pop
pop
adc
das
inc
jno
pop
popa
das
ret
test
add
push
inc
dec
xor
mov
fmul
jb
sub
mov
sar
push
sub
xchg
outs
test
push
pop
outs
jle
inc
mov
fsubrp
aad
and
sbb
rcl
xor
mov
jg
cs
or
or
sub
sbb
fwait
mov
add
or
adc
into
imul
lods
adc
mov
cdq
outs
ficom
repnz
mov
sub
sbb
in
ret
add
and
test
fimul
jge
fild
aas
or
xchg
adc
adc
mov
and
(bad)
stos
xchg
daa
je
cs
xor
outs
retf
sbb
pop
xchg
lods
jle
adc
and
out
js
repnz
sub
das
lods
jbe
sub
loope
dec
xchg
aam
scas
jbe
repnz
daa
add
mov
add
cwde
mov
shr
clc
ret
and
lods
leave
add
cld
cmp
imul
aas
sbb
and
loopne
mov
sahf
(bad)
pusha
add
mov
mov
xchg
sub
or
dec
je
mov
sub
movs
daa
mov
mov
sub
int
xchg
xchg
mov
pop
or
add
es
and
xor
or
in
lahf
dec
fisttp
sub
(bad)
and
cld
popa
outs
fwait
(bad)
and
mov
or
aam
iret
mov
sbb
pop
jge
ffreep
je
push
xlat
(bad)
mov
hlt
mov
iret
mov
dec
sahf
xchg
sbb
fwait
push
push
and
and
or
lahf
mov
push
jp
fsub
fcmovnb
cmp
cli
(bad)
arpl
jg
sbb
dec
pop
call
cmp
sahf
and
les
jo
js
sbb
xchg
test
ss
leave
repz
rcl
push
add
out
clc
int
popf
hlt
lds
add
mov
inc
dec
cmp
rcl
fcmovnu
xchg
mov
mov
jno
inc
cwde
scas
xchg
cmp
arpl
repnz
scas
inc
jae
pop
addr16
cmp
jnp
adc
jmp
and
movs
push
adc
mov
cmp
lods
pop
adc
xchg
in
sub
sub
mul
add
popa
mov
fwait
cmps
cmp
pop
sub
pop
shl
fild
out
rcl
fdivrp
add
mov
and
imul
xchg
pop
lahf
shl
inc
rcl
cmps
push
dec
int
mov
psadbw
int3
aad
inc
scas
ins
sub
call
aaa
adc
(bad)
inc
mov
cs
mov
cdq
and
out
outs
out
inc
iret
scas
lock
cmps
(bad)
jnp
push
sbb
jnp
shr
mov
mov
mov
xor
in
gs
ret
sbb
mov
movs
add
into
jnp
inc
setb
ds
jg
lods
sbb
lods
jae
add
pop
jne
xchg
xchg
lods
les
sub
cmps
xor
adc
cmp
adc
scas
jl
(bad)
cld
xor
fsubr
xchg
push
pushf
outs
fstp
hlt
ins
jge
sub
mov
or
das
iret
jmp
hlt
imul
pusha
shr
dec
cdq
shl
xchg
mov
jecxz
push
mov
cdq
xchg
popa
push
nop
daa
cmp
loope
mov
pop
jo
jns
ins
xor
lock
(bad)
sbb
cmps
and
inc
push
lods
pop
fwait
fwait
popa
inc
ja
mov
out
jmp
popw
rol
sub
push
(bad)
and
adc
push
clc
mov
add
jnp
shr
and
shl
ins
ret
pushf
loopne
inc
add
ss
mov
leave
data16
outs
imul
and
scas
in
mov
xor
movs
mov
in
dec
jl
arpl
pop
dec
fist
retf
imul
call
pop
clc
dec
mov
and
jecxz
(bad)
sbb
sub
dec
aaa
ins
daa
jp
jo
(bad)
fdiv
cs
test
aad
or
imul
(bad)
add
add
retf
ins
xchg
aad
imul
jp
mov
int3
fwait
cmp
ins
repz
mov
dec
mov
test
aaa
or
push
mov
(bad)
(bad)
sub
inc
ret
push
jo
inc
imul
and
jmp
inc
shr
rcr
inc
jnp
jno
or
out
pushf
mov
out
call
sbb
dec
jg
retf
clc
ins
mov
sub
popf
das
aaa
fidiv
in
mov
mov
in
out
and
or
adc
add
leave
ret
lods
test
sub
jnp
push
cmc
leave
dec
test
jnp
cmp
pop
rcl
leave
mov
jns
mov
adc
fadd
scas
sbb
mov
xchg
push
mov
loop
cmp
cmp
(bad)
(bad)
call
aad
jb
cmp
jmp
mov
out
sub
retf
xchg
pop
or
sbb
repz
cmc
sbb
retf
sbb
idiv
lds
fbld
jb
popf
jge
aas
dec
mov
add
xor
fcomi
push
mov
stc
dec
shl
pop
jne
jno
in
sub
mov
cdq
dec
movs
hlt
lahf
int3
shl
neg
xor
jns
sub
and
fmulp
mov
adc
dec
ins
mov
xchg
mov
push
rol
xor
add
cmps
in
(bad)
mov
cmp
scas
push
gs
loop
movs
call
icebp
dec
adc
lock
aas
jmp
nop
or
and
jmp
inc
rol
mov
cli
xor
test
test
ins
cmp
into
fbld
sub
shr
aas
inc
mov
mov
test
dec
or
mov
lock
adc
test
push
inc
(bad)
(bad)
add
shl
sbb
fstp
sbb
das
push
ins
mov
pop
daa
cmp
adc
in
sub
inc
pop
push
(bad)
sbb
ss
icebp
sub
xchg
ds
adc
aad
sub
daa
cdq
mov
sbb
mov
stos
mov
int3
dec
pop
fst
add
(bad)
push
dec
stos
push
sar
push
cmp
cmp
loope
mov
and
push
inc
sbb
sub
outs
test
int3
pop
jmp
shl
call
mov
pop
ins
mov
mov
inc
aas
retf
xlat
xor
pop
xchg
ja
push
out
pop
shr
sbb
sbb
je
add
xor
xor
mov
and
or
mov
iret
and
inc
and
imul
push
leave
fisub
popf
stc
ret
cmp
fs
mov
sar
cld
outs
xchg
xor
sbb
popa
adc
ret
adc
enter
pop
out
mov
fimul
shr
rcr
jge
nop
hlt
mov
fmul
imul
sbb
fcomp
pushf
fsubr
jne
jp
cmps
xchg
jg
jno
(bad)
ficom
mov
cld
push
mov
cmp
pop
xchg
arpl
sbb
mov
and
loopne
pop
adc
sub
dec
sbb
dec
movs
inc
jo
icebp
test
leave
dec
jmp
mov
dec
cmp
ror
jnp
mov
mov
js
and
mov
lds
and
out
cmp
jo
leave
movs
in
and
xor
dec
cmc
sub
and
pusha
mov
jl
in
das
or
lds
stos
dec
ins
xchg
call
inc
clc
iret
sbb
test
mov
dec
mov
xchg
dec
and
dec
test
inc
adc
adc
cmp
sbb
jmp
bound
lods
mov
(bad)
js
inc
scas
lahf
push
mov
mov
pop
jp
jmp
mov
xchg
xchg
jae
pushf
push
ror
sar
pop
loope
mov
push
sbb
add
test
jbe
pushaw
lods
inc
mov
sub
pop
retf
sbb
pop
adc
in
loopne
data16
sbb
mov
mov
iret
stc
push
push
rol
pop
iret
retf
dec
dec
jecxz
xchg
jne
sbb
add
push
dec
dec
rcl
les
ins
repz
push
nop
das
cmp
aas
stos
popf
movs
push
mov
add
fimul
xor
in
inc
test
push
imul
mov
or
movs
or
sub
xor
or
mov
mov
retf
pop
pop
test
lods
cmps
into
cmps
push
sub
loop
mov
mov
addr16
in
add
enter
inc
mov
pushf
out
adc
mov
repz
push
cmp
mov
fmul
cmp
xchg
stos
push
(bad)
and
pop
dec
fs
sahf
jo
and
dec
popa
scas
loope
out
pop
nop
mov
sbb
cmp
fdivr
inc
sub
lahf
sbb
pop
jo
mov
jae
cwde
push
mov
int
push
cmp
outs
mov
push
ss
lds
retf
add
xchg
add
jo
sub
imul
pop
inc
sub
or
out
data16
lods
int3
jbe
jle
aaa
push
xor
lods
fisttp
pop
mov
mov
je
ret
cmp
cld
pop
movs
aam
add
mov
pop
push
or
add
repz
push
push
pop
(bad)
cmp
jp
adc
outs
mov
cmc
int3
jmp
add
fs
add
por
shl
cli
lods
jne
sbb
push
aam
jmp
movs
lock
jge
jns
ffree
(bad)
js
stos
dec
sbb
jb
sti
outs
sbb
mov
in
mov
retf
aad
idiv
adc
rcl
jno
sub
in
icebp
cli
neg
push
dec
adc
push
movs
ror
enter
les
sub
test
outs
cmp
popa
mov
fwait
adc
pop
test
xchg
sbb
aaa
jb
add
xlat
jmp
sub
inc
mov
sar
mov
mov
leave
ins
scas
pop
lods
mov
hlt
mov
mov
and
into
mov
iret
sbb
imul
jecxz
push
aad
jmp
cmps
sub
or
jae
push
cmc
pop
in
push
and
dec
sbb
push
shl
dec
dec
or
repnz
dec
test
xor
jl
popa
inc
shl
cli
pop
push
(bad)
adc
or
fs
rol
inc
inc
xchg
sub
push
loopne
fs
jno
or
push
inc
loop
enter
push
sub
jg
push
retf
fcom
loopne
jg
movs
aad
jno
xor
clc
sub
inc
je
jp
or
cli
push
es
call
and
ja
sub
push
lahf
mov
bnd
das
push
adc
icebp
sub
ins
sub
bswap
aas
mov
(bad)
loope
sub
cmp
int3
outs
cmps
aam
add
sub
push
push
enter
push
es
scas
test
imul
push
adc
mov
add
sbb
mov
fld
pop
mov
leave
and
into
(bad)
cmp
les
lahf
and
fs
test
or
xchg
adc
inc
push
jecxz
(bad)
test
push
fdivr
and
cmp
inc
cwde
pop
mov
cwde
outs
scas
shr
jns
cmp
add
test
push
push
sbb
cmp
into
mov
loope
push
dec
adc
retf
je
jne
jp
jmp
ror
movs
fld
or
push
test
aam
pop
cmp
(bad)
je
(bad)
lahf
xchg
or
push
cmps
cmp
jp
mov
arpl
out
sbb
sub
xor
dec
push
pop
shl
fs
pop
dec
les
pushf
xchg
push
cmp
pop
cmps
fwait
sbb
ficomp
or
sub
lods
push
pusha
js
sbb
pushf
(bad)
fimul
xchg
push
test
push
add
fistp
or
mov
adc
in
aam
outs
rcr
je
sbb
inc
mov
jbe
ss
xor
out
add
dec
add
mov
mov
mov
imul
mov
dec
loop
fcom
push
or
ret
movs
sbb
sbb
leave
mov
pusha
unpcklps
jb
push
in
popa
jnp
cmps
mov
push
ins
sub
imul
out
sbb
test
xchg
mov
xor
adc
mov
adc
es
jns
daa
loop
mov
inc
mov
pop
hlt
jge
add
mov
test
imul
pop
aaa
fmul
call
add
push
(bad)
pop
or
sbb
leave
xlat
bound
push
sbb
jmp
xor
stos
xor
pop
cmp
push
pop
add
out
mov
mov
or
fst
and
shl
(bad)
bound
out
cmps
mov
mov
xor
stos
xor
loopne
gs
cmp
daa
xor
inc
fld
jl
sbb
pushf
jnp
cs
adc
lods
push
cwde
cs
or
xchg
in
adc
je
aad
cmp
cwde
mov
push
mov
dec
adc
push
sbb
fidivr
xchg
xor
xchg
call
add
cli
pop
xchg
sbb
retf
push
js
daa
jno
and
dec
add
int3
and
mov
fist
push
loopne
and
inc
inc
sub
cld
sti
out
(bad)
sbb
out
imul
aas
or
cwde
sub
jnp
mov
push
mov
(bad)
mov
fs
pusha
in
popa
test
lock
mov
push
cs
fs
add
mov
dec
arpl
cmp
movs
pop
sub
mov
xor
pop
sbb
(bad)
cld
jp
nop
fsub
imul
cdq
push
and
pop
out
adc
inc
cmp
jmp
or
daa
sbb
adc
mov
jmp
add
(bad)
push
cmp
inc
lods
or
call
push
bound
mov
in
jb
test
scas
sbb
cmp
mov
jno
das
loop
xchg
xor
cmp
int3
mov
xor
mov
sbb
push
mov
lods
jmp
xchg
stos
jae
inc
add
out
repnz
ins
fiadd
jne
aad
sbb
lea
cmp
fstp
sub
out
push
out
loopne
jg
movs
movs
xchg
hlt
enter
push
push
inc
pushf
clc
or
(bad)
mov
movs
int3
inc
dec
std
das
add
std
or
clc
mov
iret
and
jno
mov
push
xlat
pop
frstor
cs
xchg
cld
test
jnp
not
movs
rol
cli
rcl
add
fcmove
std
push
or
and
mov
xor
jae
test
sbb
ins
cdq
test
dec
les
mov
jmp
cmc
rcr
repz
shr
cmps
fsub
mov
jno
jg
add
and
scas
dec
sahf
jmp
push
sar
jbe
pop
inc
add
pop
cmp
xchg
sbb
push
cmp
sti
pop
mov
pop
pop
(bad)
jae
push
adc
and
out
ins
loope
je
inc
jp
xchg
mov
adc
call
icebp
aam
fsubr
xchg
lock
mov
inc
pop
imul
fwait
push
cmp
dec
leave
cmp
retf
jmp
cwde
das
int3
xor
mov
pop
ret
popf
stos
lods
das
je
fwait
pop
xchg
sbb
pop
jecxz
jge
call
push
mov
arpl
movs
fimul
xchg
cmp
shl
jae
xor
mov
cmp
adc
ss
push
enter
popa
sbb
sub
cmp
(bad)
(bad)
shl
ss
fistp
call
mov
jg
pop
jecxz
ds
or
js
inc
stc
mov
in
arpl
sub
(bad)
aad
ret
adc
popa
cmp
lods
clc
(bad)
mov
out
cld
jb
(bad)
in
out
in
or
stc
mov
sub
jmp
jg
jmp
mov
retf
sar
and
ins
pop
jp
or
scas
loopne
push
scas
das
sbb
cmp
out
sbb
cwde
add
mov
jns
mov
sub
sbb
ror
and
mov
fsub
cld
dec
imul
ds
xor
mov
dec
mov
mov
aam
jle
add
fld1
fsubp
lds
pop
push
cli
ret
pop
inc
mov
jnp
cmps
fld1
sbb
retf
ja
xchg
cmp
xlat
xchg
fcom
sbb
aas
jmp
cmps
lods
cmps
iret
test
push
inc
imul
fs
(bad)
sbb
(bad)
inc
movs
lahf
pop
adc
rcr
inc
dec
or
jae
les
(bad)
out
xor
lds
mov
dec
aam
pop
and
mov
xchg
lds
mov
mov
sbb
pop
jae
jmp
loop
stos
push
das
sub
int
test
cmp
sbb
fisubr
cdq
das
in
xchg
sbb
addr16
xchg
cs
dec
icebp
add
mov
jl
adc
int
enter
push
jp
in
add
adc
add
stos
jae
pop
mov
fdivr
out
and
sbb
push
lods
mov
mov
les
test
int
shl
dec
sbb
(bad)
jb
jns
mov
xchg
push
pop
inc
mov
sub
add
mov
add
push
push
pop
enter
pop
sub
idiv
fisubr
scas
mov
into
ja
(bad)
push
cld
ror
pop
pop
std
xor
sti
inc
in
fwait
cmp
cmp
sub
inc
fs
push
ret
xor
mov
xor
and
in
and
test
xor
dec
das
lds
sbb
or
or
mov
outs
dec
or
sub
mov
jno
and
lods
xor
cmp
inc
xchg
clc
push
adc
jmp
test
imul
pop
jl
bound
mov
jmp
and
iret
pop
jge
mov
and
imul
adc
arpl
mov
aaa
pushf
outs
jae
out
or
adc
mov
ret
mov
les
adc
jmp
loopne
gs
xchg
std
test
adc
pop
push
jecxz
fnstsw
fdiv
js
mov
call
into
js
push
repnz
dec
ret
xchg
add
sbb
out
retf
ja
inc
(bad)
jbe
adc
xlat
lock
icebp
rcr
jns
and
cmp
add
mov
dec
add
lock
lea
es
or
push
test
or
sbb
pop
ins
out
(bad)
pop
mov
ret
js
dec
xor
arpl
fadd
cmps
cmp
mov
inc
iret
cli
push
ds
addr16
push
jp
call
paddw
push
cmps
dec
push
sub
xchg
sub
pop
jns
and
adc
pop
imul
ins
std
(bad)
sub
jb
pop
js
test
xchg
sub
jo
cmp
adc
jge
jae
xlat
xchg
mov
xor
call
clc
addr16
outs
pop
inc
dec
test
pavgb
test
mov
imul
sbb
push
out
(bad)
and
std
(bad)
shl
pop
push
mov
int
(bad)
rcr
dec
dec
repnz
adc
mov
push
pop
inc
pushf
mov
(bad)
sbb
stos
js
adc
test
js
ret
push
mov
(bad)
jge
cmc
out
outs
pushf
jbe
fwait
pop
retf
mov
mov
pushf
xor
icebp
mov
cmp
popf
push
jne
xchg
in
ds
shr
adc
loop
xchg
scas
mov
pop
or
xor
lea
or
scas
sbb
bound
cmc
sub
mov
push
(bad)
jp
jbe
addr16
sbb
adc
xchg
aaa
inc
rol
mov
add
xchg
in
pop
adc
gs
ss
cmp
jns
popa
shr
add
sub
mov
imul
inc
pop
sub
jno
mov
test
dec
(bad)
out
out
jo
fsub
jp
and
inc
push
push
aam
push
cwde
push
popa
adc
inc
rcl
jg
ins
xor
or
out
test
xchg
adc
dec
push
adc
sar
aad
xor
pop
mov
cmp
jge
sbb
int3
(bad)
out
xchg
push
fisttp
stc
push
retf
add
pop
lods
arpl
mov
jg
xor
cmp
pop
adc
mov
not
and
out
pop
xchg
int
into
jecxz
lds
sahf
aam
out
mov
push
cmp
cmp
sbb
and
(bad)
out
loop
inc
cs
in
jns
adc
adc
iret
cmc
add
pop
out
idiv
jae
stc
addr16
adc
jmp
lahf
jge
xor
movs
bnd
dec
sbb
or
aam
push
adc
rol
mov
mov
xchg
leave
cmp
inc
xchg
movs
push
sar
popa
jb
sti
cli
cmp
fild
mov
stos
inc
dec
push
dec
es
scas
inc
mov
retf
push
ret
test
sub
ret
mov
jns
and
arpl
push
xor
(bad)
in
push
pop
jo
retf
mov
xchg
mov
jo
dec
sbb
adc
out
addr16
push
in
les
retf
mov
and
in
mov
aam
adc
ror
push
test
(bad)
imul
loop
push
shr
mov
adc
mov
sbb
test
cmps
adc
dec
les
test
(bad)
lea
mov
cmp
push
push
test
xchg
cmp
xchg
dec
bound
lods
and
dec
sub
mov
add
dec
and
mov
outs
inc
ror
push
int3
xor
aam
mov
xor
fbld
cmp
fcomp
xchg
jmp
and
in
and
sub
push
not
aam
out
add
jmp
push
loop
inc
imul
int3
test
adc
jnp
lods
jle
xchg
xchg
or
push
loope
pop
and
scas
add
add
ds
sbb
test
rcr
test
outs
mov
popf
mov
dec
loope
test
or
lods
pop
and
xor
fs
mov
arpl
retf
int
fnstsw
dec
dec
shr
cmp
inc
nop
add
mov
ins
adc
mov
retf
xchg
shr
sub
xchg
cmp
inc
inc
fwait
out
call
enter
cmp
mov
arpl
sahf
and
cmps
cmp
jbe
jo
push
or
dec
mov
fidiv
xlat
rol
cdq
sbb
fild
sti
xor
clc
pop
mov
(bad)
int3
mov
dec
fcomp
jmp
sub
and
xor
(bad)
fidivr
mov
test
(bad)
mov
cld
mov
out
dec
repz
retf
inc
and
ret
pop
dec
jle
cs
stos
ja
lahf
xchg
jns
popf
loop
or
jge
(bad)
(bad)
xchg
inc
fistp
sbb
mov
lods
jl
es
dec
mov
in
cli
ins
sub
cwde
fbstp
add
jo
dec
jae
lods
sahf
fsubr
and
clc
mov
shl
js
and
xor
xchg
aaa
pop
add
sbb
and
xchg
adc
add
fld
adc
xor
stos
ins
mov
ds
sbb
std
sub
mov
in
arpl
ret
or
fstp
scas
int
lea
or
dec
mov
call
mov
sbb
mov
xchg
cmp
hlt
mov
fwait
and
rcr
(bad)
ja
and
dec
cmp
jl
repnz
cdq
call
jns
xchg
adc
push
pop
es
fdivr
jecxz
add
data16
push
cmps
out
sbb
mov
pop
push
cli
fisubr
xchg
add
(bad)
out
gs
rol
push
daa
mov
enter
dec
push
mov
call
shl
mov
dec
adc
sbb
cmp
test
daa
pop
jle
mov
pushf
add
test
dec
dec
das
icebp
and
movs
loope
daa
jmp
push
sysret
ins
cmc
lea
fldln2
pop
repz
js
dec
les
dec
xor
push
push
cmp
push
hlt
push
sbb
in
and
pop
push
push
jno
std
(bad)
mov
enter
out
(bad)
push
(bad)
(bad)
sti
mov
ins
pushf
movs
inc
in
dec
(bad)
or
popa
add
mov
icebp
cwde
push
int3
and
jmp
xor
movs
mov
out
retf
pusha
fistp
adc
jno
cmp
xchg
xchg
inc
scas
pop
or
adc
ffreep
cmc
test
and
out
mov
out
pop
inc
jge
adc
mov
adc
loope
loope
leave
stc
xchg
ds
fisub
xchg
add
push
inc
retf
movs
cmp
(bad)
nop
dec
xchg
add
dec
jge
pop
cdq
or
js
mov
in
(bad)
repz
inc
mov
cmc
test
out
test
sub
icebp
cmp
lock
pop
mov
cmps
cli
movs
xchg
je
mov
jecxz
ins
push
mov
sahf
fidiv
mov
mov
sub
dec
in
jecxz
jg
push
sub
loope
sub
(bad)
lahf
es
aaa
sahf
cmp
ret
or
cmps
(bad)
das
scas
push
retf
call
mov
sar
shl
ret
sub
(bad)
adc
outs
and
ja
popa
xchg
inc
xor
xchg
rcr
arpl
pop
imul
xchg
pop
bound
push
xor
ret
bound
xchg
aad
repz
dec
pop
fsub
add
xor
sub
cs
ins
and
add
add
pop
out
bound
sbb
and
ss
pop
test
pop
dec
sbb
adc
test
jns
push
jnp
ins
push
fdiv
(bad)
jns
push
cs
cmp
pushf
test
cmp
test
xchg
pusha
ss
ret
pop
ss
iret
cli
mov
repnz
mov
sbb
ins
mov
add
push
scas
pop
rcr
sbb
fdivr
push
xor
std
(bad)
mov
dec
test
into
and
out
mov
ja
cs
sbb
fistp
(bad)
adc
and
xchg
push
or
movs
mov
out
inc
dec
stos
jne
mov
mov
cmc
sub
dec
pop
and
into
cwde
mov
je
retf
cdq
ss
test
xchg
lea
mov
pop
inc
sbb
in
xchg
add
js
push
sti
pop
add
cli
sbb
stos
dec
stos
shl
adc
adc
scas
int
loopne
test
gs
arpl
test
xor
cmp
push
mov
imul
fmul
enter
sub
jmp
test
int3
xchg
xchg
scas
mov
call
cdq
int3
into
ret
jb
mov
mov
dec
push
shl
pop
shr
lds
xchg
xchg
push
nop
hlt
out
out
aas
(bad)
out
mov
dec
and
jmp
sbb
sub
mov
outs
(bad)
mov
xchg
ret
adc
pusha
cwde
cld
mov
mov
in
test
jg
icebp
aad
lock
push
pop
fptan
dec
xchg
and
pop
sbb
mov
lods
iret
test
lea
push
dec
into
cmp
dec
cld
jb
or
mov
and
mov
mov
retf
movs
mov
xchg
cmps
cwde
hlt
push
cmc
adc
ficom
cmp
sti
int
(bad)
out
xchg
jae
mov
adc
sbb
xor
call
mov
fisttp
(bad)
hlt
jo
mov
mov
sub
sub
or
mov
out
or
xchg
mov
das
mov
jmp
iret
push
or
inc
cld
pushf
pop
fs
nop
adc
aad
bound
pop
test
(bad)
fidivr
or
addr16
mov
lds
(bad)
fcmovne
enter
push
jb
test
pop
(bad)
in
dec
div
cmc
sbb
adc
pop
xchg
or
jmp
sub
sti
sub
adc
lods
int3
dec
xchg
outs
rol
jb
nop
out
xor
pop
sub
push
mov
icebp
pop
popf
retf
or
repnz
ins
and
mov
pop
sub
mov
cmp
outs
mov
je
and
jb
mov
add
push
xchg
clc
mov
inc
dec
add
arpl
loope
jnp
icebp
xlat
or
out
lods
jp
movs
jle
outs
sti
les
aam
(bad)
sbb
sub
add
push
cmp
add
rcl
sbb
aam
xlat
pop
and
pop
fisttp
sub
call
cmp
pop
pop
loope
xor
jge
retf
fild
pop
repz
clc
jne
inc
cmps
out
arpl
jmp
repnz
out
gs
pop
icebp
dec
xor
test
jae
jp
daa
rcr
int3
jne
je
repnz
pop
mov
xchg
sbb
test
lods
or
or
cmp
xlat
cmp
stos
mov
hlt
mov
retf
mov
int
popf
and
lock
push
aaa
cmp
push
pop
sbb
std
mov
inc
bound
mov
jmp
dec
retf
pop
pop
addr16
or
mov
lahf
and
ds
inc
das
sbb
or
es
pop
pop
jnp
lods
push
push
popf
in
jp
jmp
push
rol
in
cmp
int3
aad
or
iret
mov
das
sbb
inc
mov
and
dec
imul
pusha
daa
and
ret
jp
jns
xor
mov
ret
jno
arpl
fwait
js
retf
and
fcomp
push
out
xor
add
sbb
adc
scas
push
es
push
xchg
nop
push
cld
dec
aaa
retf
xchg
stos
sbb
cmp
cs
into
push
std
popf
test
(bad)
in
sbb
in
clc
inc
les
shl
xlat
stos
out
std
cs
int
pop
xor
into
mov
int3
cmps
push
or
cld
outs
pop
fst
add
leave
push
push
pop
inc
add
sbb
outs
jne
mov
retf
int
js
cwde
shr
mov
ret
sahf
xor
shl
or
cmp
leave
pop
dec
inc
add
ins
int
popa
inc
das
pop
idiv
jg
outs
call
(bad)
cmp
cmp
and
pop
int3
pop
xor
imul
jecxz
loop
outs
clc
ror
shl
add
(bad)
out
mov
gs
call
retf
scas
pusha
call
call
push
retf
movs
dec
mov
mov
jb
test
enter
call
(bad)
in
cmp
xor
fmul
and
jmp
ret
fs
iret
jmp
ret
sbb
cmp
movs
pop
pop
mov
xor
dec
mov
bound
jmp
iret
fbstp
or
sbb
mov
mov
xchg
pop
jle
arpl
sahf
xchg
loopne
ret
pop
pop
jnp
js
aaa
cmc
in
mov
add
ret
scas
jmp
in
dec
dec
dec
mov
fisub
pusha
xlat
xor
in
mov
mov
(bad)
popf
sbb
sti
sub
push
idiv
mov
sbb
dec
enter
xor
xchg
in
xor
gs
in
push
jo
xchg
jg
hlt
sub
repz
cmps
sti
add
outs
inc
mov
shl
push
(bad)
pop
mov
push
test
pop
idiv
mov
cmp
and
fistp
push
adc
sti
xor
icebp
bound
sub
jae
scas
test
ss
inc
cmp
sbb
aaa
xor
xlat
mov
sbb
inc
das
adc
sub
cmc
loop
adc
aas
jmp
push
xor
mov
test
(bad)
stos
mov
mov
sbb
ror
jnp
mov
movs
sbb
jge
shl
enter
sub
loope
inc
vucomisd
pop
das
xor
push
or
dec
pop
mov
aaa
rol
retf
in
sub
mov
stos
in
mov
loope
push
sbb
ficomp
inc
out
movs
or
jl
popf
fld
loop
or
adc
cmps
mov
ret
xchg
or
fldenv
test
cmps
rcr
mov
cdq
xchg
outs
out
scas
js
sub
xor
stos
shl
bound
inc
dec
jo
cdq
add
icebp
aaa
leave
xor
sbb
cs
push
ja
sar
les
or
rol
sbb
clc
mov
inc
mov
dec
mov
sbb
mov
push
repnz
loopne
les
mov
jg
mov
gs
sub
pop
push
outs
std
in
push
in
push
xchg
addr16
push
pusha
sub
mov
out
aaa
add
dec
jl
pcmpgtb
loopne
xor
mov
sahf
pop
mov
pop
out
inc
or
xor
pop
int
or
jo
arpl
push
out
and
loope
sub
add
xor
xchg
call
and
pop
and
cmp
test
and
cmp
cmps
mov
cmc
cmp
in
movs
loopne
and
je
imul
and
mov
jmp
(bad)
shr
sub
inc
jge
inc
clc
mov
pop
xor
mov
mov
mov
jno
pop
dec
outs
test
sbb
cmp
dec
ins
xor
or
add
in
daa
mov
sub
push
sbb
sub
test
repz
pop
or
outs
sbb
pop
dec
jecxz
mov
mov
or
jp
inc
pop
lea
or
cmp
stc
sar
mov
data16
mov
xor
add
dec
out
mov
fcmovnbe
jge
adc
sahf
and
pop
mov
nop
repz
cmp
gs
icebp
inc
inc
mov
nop
and
gs
inc
dec
aas
xor
sar
mov
rol
movs
out
adc
push
add
clc
mov
cmp
jp
test
js
jmp
into
sub
pop
mov
jbe
aam
mov
test
call
sbb
shl
js
pop
pop
cwde
jg
xor
xor
xchg
popa
pop
lods
cld
mov
inc
sub
mov
sbb
push
test
xchg
mov
mov
rcl
push
mov
or
xchg
mov
jp
pop
imul
sub
mov
jne
dec
mov
pop
adc
or
hlt
xor
or
pop
mov
je
add
mov
push
jmp
stc
or
(bad)
jg
pop
in
or
sbb
pop
push
cmp
or
cmps
push
cwde
mov
inc
shl
shr
jge
pop
mov
mov
adc
mov
mov
mov
mov
and
jecxz
adc
jmp
pop
jnp
aas
sub
cli
xchg
loopne
(bad)
dec
push
sbb
cdq
mov
ror
out
inc
lods
pop
popa
or
adc
xchg
mov
div
push
adc
(bad)
ror
mov
cmp
add
mov
xchg
aam
jmp
mov
stos
inc
movs
mov
jecxz
push
mov
push
sub
gs
jo
mov
fnstsw
iret
jnp
pop
fld
pop
dec
shr
jl
ins
test
push
enter
cmp
jne
xchg
fisub
xor
xor
in
push
ins
push
leave
jb
sub
lods
aaa
mov
aad
adc
mov
mov
pop
aad
or
jle
movs
lock
pop
dec
pop
and
sar
mov
in
pushf
jns
xor
mov
in
push
rcr
mov
imul
outs
jo
popa
movs
rcl
ret
(bad)
jno
and
pop
sahf
mov
sub
xchg
(bad)
test
(bad)
loopne
xor
or
and
fistp
sar
in
jbe
loopne
inc
cld
sub
jns
or
xor
adc
fwait
ja
test
ficomp
mov
mov
push
jbe
sub
pop
cdq
lea
out
loopne
and
mov
aaa
adc
push
fistp
xchg
fwait
jns
and
xchg
adc
mov
data16
xchg
or
jmp
outs
xchg
sbb
sub
xchg
inc
sub
push
mov
pushf
or
jae
loopne
push
jl
inc
inc
aam
dec
fisttp
cmps
mov
in
fcmovb
bnd
dec
push
cmps
mov
imul
sbb
add
ins
or
and
pop
jne
pop
push
dec
cmps
loop
adc
cmp
enter
movs
scas
scas
out
fmul
mov
dec
outs
mov
data16
repnz
shl
neg
mov
cmp
xchg
adc
push
les
stos
or
icebp
xor
es
retf
mov
or
addr16
popf
xor
fwait
ss
pop
cmp
mov
nop
add
scas
std
dec
mul
lods
add
aaa
dec
pop
dec
jno
xor
ror
or
jl
and
ss
inc
ins
xor
sub
out
xlat
push
sbb
cmp
ja
push
test
dec
scas
push
or
jge
(bad)
outs
jne
fs
hlt
stos
repz
leave
xchg
mov
aas
fisttp
dec
in
xchg
ins
push
imul
sbb
push
mov
and
dec
call
mov
sbb
(bad)
cmp
add
movs
sbb
pop
mov
adc
outs
sbb
adc
in
pop
push
mov
fnsave
mov
mov
shl
fucomi
lea
icebp
mov
lods
pop
ss
mov
adc
add
pop
icebp
aas
mov
pushf
xor
lahf
rcr
cmp
in
mov
xchg
hlt
cmps
and
cmp
ss
pop
outs
js
dec
das
loop
shl
cmp
sub
dec
jne
cmps
or
rcr
inc
jne
xchg
jb
cmp
iret
cmps
mov
mov
and
mov
push
xchg
pop
xchg
mov
test
jb
dec
cmp
loopne
dec
iret
cmp
mov
mov
std
enter
add
ins
loopne
loopne
cmc
or
in
sahf
sub
das
xor
aaa
les
outs
mov
aaa
aaa
int
xchg
push
mov
stos
xor
xchg
aaa
fmul
adc
jno
add
jne
movs
mov
push
sahf
fcomp
popa
nop
popf
adc
mov
clc
cmp
imul
out
sbb
lea
adc
int3
popf
div
das
rol
or
test
cmp
inc
pop
bound
lods
aas
sahf
and
leave
cli
icebp
enter
mov
cmps
icebp
lods
cmp
push
xchg
call
int
sub
(bad)
scas
lahf
cmp
ins
movs
and
aad
mov
jbe
or
mov
push
addr16
lds
add
dec
retf
shr
retf
xor
or
mov
jmp
mov
aam
call
fild
mov
les
jg
pop
mov
xor
dec
retf
push
sbb
dec
xchg
loop
cmc
das
cmp
or
cmp
sub
mov
jmp
lods
push
xchg
das
add
aad
shl
xchg
mov
fcomi
retf
cmc
jb
rcl
pop
cmp
retf
sub
or
fidiv
imul
sbb
call
popa
iret
xor
(bad)
mov
push
outs
add
aam
nop
xchg
xlat
push
ins
jnp
fild
int
xchg
dec
in
add
xchg
out
cmp
std
jl
fcomp
dec
mov
cs
xchg
pop
in
neg
gs
cli
xchg
shr
jl
mov
add
pop
push
push
and
fwait
bound
daa
in
sti
stos
adc
jp
fmul
mov
outs
aad
retf
xor
(bad)
fisttp
mov
imul
lock
aad
sbb
jl
mov
jg
stos
stos
xor
aam
xchg
xchg
stos
in
mov
adc
jg
(bad)
fdivr
sub
dec
push
mov
out
add
daa
les
rcr
cmp
shl
push
movs
inc
out
call
xchg
cmp
push
movs
jmp
add
xor
pop
push
sub
mov
adc
mov
sub
fdiv
jg
push
(bad)
xchg
js
cmc
adc
mov
jg
shl
inc
cmp
sti
les
sub
push
mov
dec
rol
mov
adc
(bad)
push
xchg
sbb
adc
sub
test
sub
aad
cmp
dec
xor
inc
stc
mov
mov
jmp
(bad)
mov
mov
and
inc
or
xor
enter
jecxz
mov
pop
movs
push
sbb
or
movnti
into
xor
iret
sbb
pop
pushf
movs
in
pop
rcl
inc
add
jne
mov
nop
out
cmc
cwde
xchg
or
out
jb
sbb
dec
sub
mov
cli
jg
arpl
add
mov
inc
push
xchg
and
(bad)
and
pop
(bad)
ja
inc
inc
dec
jnp
in
stc
pop
inc
rol
mov
mov
dec
jg
pop
dec
xor
and
or
xchg
lahf
jbe
xor
xor
out
xor
lods
xchg
sahf
fisttp
mov
(bad)
and
out
repnz
pop
inc
sub
cmp
inc
call
mov
pop
shr
xchg
pop
pop
inc
xchg
es
mov
mov
adc
(bad)
jmp
jp
mov
xor
mov
push
stos
bound
loop
enter
dec
xchg
imul
inc
cmc
test
adc
in
pop
imul
scas
sbb
cmc
adc
adc
inc
dec
xor
jp
inc
mov
ret
mov
push
cli
xchg
fmul
pop
sbb
test
dec
pop
inc
xchg
pop
mov
(bad)
in
push
xchg
jb
std
pop
and
cmc
inc
dec
arpl
in
(bad)
ror
sbb
mov
xchg
sub
pop
rcr
sub
scas
rcl
xchg
adc
(bad)
push
mov
mov
or
add
and
push
cmps
jmp
dec
jae
gs
adc
sbb
int
mov
test
pop
pop
ret
xor
popf
das
inc
cs
cmp
xchg
xor
imul
xchg
hlt
jae
pop
arpl
pop
mov
cli
movs
or
and
aas
pop
fidiv
mov
xchg
jae
sub
rcr
cwde
xor
shl
pop
or
xchg
fst
(bad)
push
dec
ret
mov
mov
je
sub
mov
adc
scas
or
fiadd
movs
ins
pop
fmul
fmul
mov
rcl
sbb
pop
sub
cmp
int
pop
fisttp
mov
ins
or
jno
mov
mov
mov
sbb
sbb
and
inc
sub
push
gs
mov
and
in
pop
xchg
and
mov
mov
std
push
test
sbb
aad
and
dec
out
push
ins
xor
daa
jmp
jno
rol
cs
popf
push
jae
(bad)
push
movzx
dec
inc
push
(bad)
enter
(bad)
add
ret
push
inc
mul
mov
sub
imul
inc
add
mov
lods
cmc
xor
xchg
lock
stos
js
xchg
xor
das
push
xchg
xchg
cwde
(bad)
mov
(bad)
mov
or
call
push
test
fwait
jle
dec
(bad)
shr
aam
fs
dec
pop
sbb
adc
scas
inc
fs
push
inc
mov
shl
shl
gs
(bad)
in
push
xchg
fwait
push
mov
dec
nop
xor
cli
cmps
fbld
cs
jl
jl
pop
nop
or
sti
or
es
jb
out
arpl
jmp
jmp
jmp
dec
mov
pop
aas
adc
sub
or
repz
xchg
mov
mov
dec
and
dec
idiv
dec
mov
inc
into
pop
or
ret
and
sub
adc
shl
data16
ja
dec
aaa
xlat
push
pushf
dec
in
(bad)
cmc
cmp
cli
popa
inc
ror
add
mov
xchg
out
repz
test
test
ror
retf
and
push
fild
mov
test
pop
push
in
mov
or
scas
clc
pop
inc
xchg
inc
adc
stos
stos
xor
push
mov
cmc
movs
xchg
or
fwait
clc
push
lods
mov
(bad)
push
jno
or
push
mov
cmc
out
imul
or
and
sub
push
jecxz
ret
mov
retf
retf
mov
fcmovu
das
xor
xchg
scas
aas
inc
fwait
mov
lds
ja
test
adc
dec
je
cmp
(bad)
sahf
cmp
iret
js
add
push
sub
or
(bad)
ror
test
ja
mov
mov
clc
or
jnp
adc
popa
addr16
inc
es
mov
push
into
inc
retf
jns
retf
shr
jmp
in
add
addr16
sub
xchg
xchg
dec
mov
test
or
push
test
outs
cdq
ins
das
shl
shr
add
loop
push
mov
ss
mov
push
aad
push
int3
or
aam
ret
pop
xor
aam
add
dec
scas
add
test
adc
test
cmp
jo
mov
(bad)
shl
fwait
jp
sbb
mov
fbstp
loope
(bad)
ins
xchg
fadd
ja
push
mov
iret
ins
nop
mov
mov
mul
jbe
cmps
sar
pushf
xchg
hlt
cld
and
mov
add
cli
bound
test
mov
call
mov
mov
movs
add
das
mov
sbb
test
mov
dec
xchg
int
(bad)
push
add
or
sbb
repz
(bad)
jle
int3
mov
jl
ds
scas
lea
push
leave
mov
addr16
dec
test
in
sahf
fisttp
jae
dec
aaa
sbb
pop
inc
into
pop
add
fs
adc
mov
and
ins
and
mov
test
mov
pop
sub
jno
cmps
mov
(bad)
rol
xchg
ins
cmp
inc
inc
sub
adc
cld
jns
(bad)
mov
jo
shl
es
cwde
and
mov
fld
mov
out
push
sub
fidiv
mov
fisttp
mov
cwde
mov
retf
or
test
and
cmp
pop
push
(bad)
leave
jo
xor
add
fldenv
jmp
lds
jbe
mov
push
mov
int3
pop
je
into
mov
icebp
dec
add
adc
repz
ds
and
mov
jmp
mov
jne
xor
aad
and
cld
adc
sar
out
adc
loope
mov
add
lahf
sbb
mov
cmp
dec
inc
adc
leave
adc
ret
sub
mov
sbb
fdivr
into
(bad)
push
adc
xchg
cs
cmp
add
sub
dec
scas
mov
adc
sahf
ins
(bad)
cmc
cmc
cmp
pop
adc
aaa
cmp
fcom
sbb
leave
cmp
hlt
inc
or
(bad)
pop
je
or
and
inc
in
nop
lea
cld
dec
es
push
lahf
xlat
rol
jg
frstor
or
push
add
mov
lods
mov
mov
fdivp
mov
fs
inc
pop
add
xlat
mov
jmp
popf
pop
and
cmp
cmc
pusha
pop
sub
(bad)
or
xchg
inc
leave
sti
jae
pop
lahf
ret
inc
jns
out
pushf
retf
add
dec
adc
test
mov
cmc
shl
xor
ins
push
(bad)
mov
push
mov
cs
fisub
jl
jne
(bad)
push
inc
lock
lea
pop
rol
sbb
shl
arpl
inc
xchg
add
sar
stos
in
or
jb
fnstsw
sub
and
das
sbb
out
stos
in
dec
dec
push
clc
(bad)
js
lea
pushf
jl
call
xchg
cmp
dec
scas
sbb
rcr
mov
and
xchg
jnp
mov
outs
mov
aam
pop
(bad)
leave
fdivr
and
aam
inc
dec
in
ret
mov
cmp
ret
jae
sbb
test
dec
out
aas
add
mov
pop
ins
mov
fdivr
mov
and
aam
mov
sub
inc
aas
imul
jp
ret
or
lods
lock
aaa
int3
test
inc
mov
out
jbe
movs
cld
and
sbb
pusha
mov
dec
(bad)
fsubr
rol
cdq
rcl
adc
adc
cld
int
inc
inc
fs
sub
shl
sar
inc
or
or
or
repz
aaa
std
call
rcr
xor
and
mov
mov
shl
inc
jg
sbb
push
sbb
outs
sbb
mov
push
les
or
(bad)
icebp
ja
pop
xor
test
push
ins
ret
es
push
mov
loope
mov
inc
mov
push
cmp
mov
dec
ja
inc
mov
loop
dec
push
adc
xchg
call
iret
popa
mov
mov
mov
sub
jb
ror
xchg
cmp
push
push
fstp
loopne
xchg
(bad)
out
sbb
or
shl
retf
mul
jg
lahf
mov
lods
or
jecxz
hlt
mov
pop
dec
add
fcomi
sbb
in
push
mov
dec
jp
dec
int
sub
std
mov
xchg
pop
adc
cwde
bound
mov
lock
movs
imul
jl
adc
popa
push
lods
(bad)
mov
cs
repz
into
mov
jo
push
ins
test
push
pop
iret
dec
inc
mov
jge
adc
iret
out
int
div
aam
popf
jne
je
jecxz
xor
fist
dec
imul
pop
pop
cmp
out
push
dec
jecxz
cmp
cmp
iret
movs
lds
push
jns
test
sub
mov
dec
fiadd
outs
sbb
retf
imul
lock
mov
add
xor
sti
adc
or
push
icebp
adc
pop
add
ret
les
xor
pop
rol
push
mov
jbe
xor
cld
sbb
jnp
cwde
cmp
es
jge
(bad)
out
xchg
inc
test
into
inc
or
in
add
test
enter
(bad)
outs
ret
popf
dec
loope
rcl
das
test
leave
cs
je
mov
add
xor
cmps
shr
push
inc
scas
pop
dec
sbb
xor
mov
cwde
dec
retf
sahf
xchg
and
ins
ret
std
or
and
mul
shl
rol
rcl
fldenv
movs
aaa
fs
test
adc
fcomp
out
out
sbb
cld
xchg
mul
in
xor
mov
jge
push
ins
leavew
lods
fisub
and
stc
push
test
or
dec
jle
jno
fldenv
outs
xchg
inc
mov
push
rol
in
push
push
(bad)
repz
pop
cmp
lods
add
ret
add
add
mov
shl
dec
data16
aam
imul
xchg
sti
mov
pop
jle
pop
pop
retf
push
ret
ret
inc
jae
repz
push
mov
inc
das
in
repz
sbb
jb
push
es
mov
bound
ins
inc
mov
daa
fcmovnu
add
frstpm(287
(bad)
pop
lds
jnp
lahf
push
lods
xchg
pop
loope
outs
aaa
sbb
dec
fst
sbb
repnz
and
loopne
gs
mov
(bad)
in
cdq
lods
data16
(bad)
jle
add
xchg
shr
cmp
adc
setge
jno
lock
bound
rol
add
xchg
adc
and
std
jae
and
mov
into
adc
(bad)
cwde
call
(bad)
pop
xor
inc
stos
mov
inc
int3
xor
or
nop
iret
mov
pop
rep
into
mov
mov
loopne
jae
cmp
cmc
fnstenv
pushf
(bad)
in
xchg
daa
ret
cld
mov
adc
dec
jne
and
mov
xchg
cmc
jae
and
ss
pop
or
mov
inc
push
je
and
data16
mov
xor
xchg
pop
add
ror
test
cmp
dec
stos
cwde
scas
mov
mov
jl
(bad)
jns
ret
cmc
ins
cmp
pop
data16
push
push
mov
hlt
push
sti
movs
dec
inc
or
push
fadd
out
cmps
adc
out
cmp
xor
out
sub
mov
aam
pop
pop
retf
mov
jne
adc
stos
sub
rcr
sar
movs
(bad)
push
push
aas
test
mov
ss
int
aam
jbe
and
movs
int3
retf
or
sahf
es
pop
sar
arpl
mov
inc
rcl
jg
ret
test
bound
in
inc
dec
(bad)
jp
pop
adc
pop
stc
retf
das
cs
std
imul
nop
ror
mov
sub
or
ret
or
mov
pusha
push
mul
les
rol
or
pop
sub
pop
scas
les
clc
test
pop
cli
fs
retf
hlt
inc
add
(bad)
gs
movs
scas
test
adc
sub
push
inc
imul
dec
cmc
add
jae
push
pop
hlt
adc
(bad)
xor
xchg
ret
shl
push
sub
jmp
adc
dec
ss
hlt
mov
jb
inc
fucom
xor
pop
jmp
mov
mov
mov
mov
aas
lahf
test
or
int3
ins
js
(bad)
xchg
xchg
cmp
push
pop
sub
mov
fcom
push
mov
cmps
mov
jnp
hlt
jmp
out
inc
inc
lock
outs
dec
inc
arpl
dec
test
js
xchg
xchg
retf
or
int
ins
repz
pop
xchg
and
fnstenv
ja
pop
aad
mov
inc
pop
popa
sbb
(bad)
mov
xchg
jge
dec
mov
shl
ret
sub
outs
pinsrw
outs
cmps
fwait
icebp
adc
or
test
sub
sub
pop
xor
pushf
fidiv
fwait
jmp
push
mov
bnd
ds
(bad)
or
sbb
inc
int3
test
(bad)
pop
shr
or
sub
mov
push
mov
hlt
sbb
lods
fsub
fcomp
inc
push
inc
jnp
ret
(bad)
clc
push
xlat
sub
(bad)
rcr
out
call
push
jecxz
jge
sahf
and
xchg
jmp
je
lahf
cmps
push
in
adc
cli
cmp
rol
retf
rcl
sbb
fnstenv
out
xor
jb
sbb
xchg
cdq
xor
sbb
cwde
ret
adc
or
cld
iret
ins
adc
ds
cmp
cmp
in
pop
cmp
mov
stc
adc
mov
lea
xor
fwait
aad
dec
and
loope
rol
stos
aad
stos
pop
inc
pushf
dec
mov
cmp
sahf
sub
mov
mov
mov
xchg
sub
mov
push
call
sbb
xchg
xchg
jns
sbb
hlt
mov
pop
pop
mov
pop
xor
adc
lock
cmp
in
mov
pop
aam
push
xchg
mov
mov
je
push
popf
sub
fbstp
std
add
jnp
ins
inc
or
cmp
mov
fadd
adc
dec
mov
sub
lods
pop
repz
mov
fidivr
sbb
mov
mov
push
and
xor
pusha
pop
aas
lock
(bad)
lahf
clc
adc
retf
popf
test
mov
aaa
(bad)
popf
pop
xchg
mov
pop
mov
adc
retf
jno
sub
jo
sar
cmc
inc
cdq
hlt
fs
push
or
inc
dec
shr
ins
xchg
jmp
popa
add
inc
jmp
push
sub
jle
push
add
sbb
mov
fwait
xchg
rcr
iret
movq
xor
push
jae
or
stos
mov
popf
push
aam
xchg
push
adc
imul
and
stos
cdq
inc
jmp
inc
mov
pop
xor
inc
(bad)
arpl
and
test
int3
out
push
push
sbb
shr
push
jo
xchg
sub
(bad)
shl
sbb
jae
imul
jns
push
adc
loop
push
adc
push
pop
out
push
jl
push
ds
std
adc
push
hlt
rol
int
ss
rol
movs
bound
retf
fcomp
jno
mov
cmp
movs
cmc
pop
push
inc
and
sar
jns
lds
in
call
inc
stc
sub
int
ss
test
pop
mov
or
jmp
dec
out
inc
sub
aam
cmps
jbe
push
adc
xchg
dec
std
xchg
arpl
xchg
lea
(bad)
call
lds
lods
fwait
add
jmp
or
mov
ins
adc
sub
fstp
in
push
push
sub
ins
pop
fs
fs
popa
(bad)
mov
fcom
rcr
jo
add
movs
ret
jecxz
(bad)
mov
and
fidivr
push
sub
fsubr
or
xchg
mov
repnz
div
or
(bad)
and
in
loopne
popa
inc
call
sahf
fs
aas
jl
adc
data16
test
push
xchg
lods
cmps
cmp
pop
loopne
hlt
clc
jecxz
push
inc
mov
xor
(bad)
and
scas
xchg
test
ror
jecxz
jmp
xor
or
push
call
icebp
xor
mov
iret
jp
push
test
enter
push
xor
push
sub
fwait
cmps
rol
std
loope
add
sub
pop
mov
out
mov
push
pop
mov
(bad)
inc
test
or
sub
sbb
cdq
test
adc
push
cs
rol
(bad)
jmp
sahf
ja
loopne
out
shl
dec
xchg
idiv
mov
pop
les
add
and
js
dec
imul
xchg
pusha
jnp
in
sar
ja
scas
ja
enter
xchg
add
jmp
push
adc
cli
mov
push
call
aam
sahf
xor
cs
inc
fldcw
cmps
dec
push
or
cmp
test
sub
mov
scas
push
xchg
outs
je
jbe
loope
fdivr
mov
ficomp
xor
jns
ss
(bad)
cmp
pusha
retf
pop
arpl
sar
push
enter
enter
and
outs
cld
adc
int
(bad)
pop
pop
dec
jns
mov
ins
dec
mov
sbb
pop
pop
stos
in
jg
inc
add
repnz
jl
xchg
sub
push
mov
or
jne
push
fsub
sub
add
cmps
and
mov
push
test
adc
outs
ret
jg
mov
gs
adc
mov
retf
pusha
gs
jmp
mov
mov
ss
in
leave
aas
cmp
test
sbb
pop
rcl
mov
ins
sub
or
pop
cwde
das
cwde
imul
popf
pop
sti
cmp
mov
xchg
mov
jmp
adc
fisubr
push
xchg
into
call
or
into
hlt
test
inc
mov
sub
mov
in
outs
mov
lods
nop
fidiv
xor
or
dec
repnz
cmp
mov
dec
pop
and
adc
arpl
adc
in
jb
fwait
cmp
lea
push
sbb
mov
call
cmc
ja
sbb
mov
xlat
push
in
or
test
(bad)
xor
aaa
iret
test
out
push
jl
icebp
int
ret
dec
ss
sar
jnp
stc
pop
and
jbe
std
push
repnz
push
sbb
cmc
daa
and
jbe
push
ins
out
mov
push
div
jb
mov
add
cdq
das
xor
and
and
fiadd
or
hlt
dec
mov
mov
or
aaa
mov
fidiv
mov
fdivr
dec
jecxz
jl
inc
and
adc
mov
and
jle
add
adc
push
xor
adc
test
mov
fimul
movs
cmp
mov
lock
loopne
test
sub
(bad)
inc
fnstenv
leave
test
pop
(bad)
jne
or
loop
ret
and
xchg
loop
pop
xor
out
fidivr
loop
mov
sub
jne
cdq
cmp
inc
adc
xor
mov
ins
sub
jo
aam
call
imul
inc
ds
mov
push
stc
push
clc
or
loopne
mov
les
mov
jno
ja
add
and
adc
popa
xchg
jl
dec
int3
les
mov
iret
inc
jns
les
lods
mov
icebp
pop
idiv
xchg
sqrtps
add
inc
adc
ja
pop
rcl
cmp
bound
sub
pop
outs
dec
in
or
push
cli
jmp
mov
retf
rcr
jge
je
mov
and
outs
pop
aad
mov
push
jbe
jmp
mov
fwait
cmp
popf
call
cmc
pop
aas
sbb
test
cmc
pop
shl
packsswb
fucomp
xchg
sub
dec
lods
call
jp
mov
(bad)
mov
inc
clc
mov
mov
stos
ret
adc
hlt
or
adc
add
and
iret
jge
aam
push
jb
(bad)
pop
xchg
popf
mov
pop
jae
out
cs
xor
add
mov
in
mov
jp
and
outs
jae
(bad)
jge
into
or
xchg
dec
mov
(bad)
es
mov
mov
test
and
int3
aam
pop
int3
cs
cmc
mov
in
leave
ret
nop
pop
jne
xchg
aam
fnstsw
xchg
std
test
int
cwde
cmps
jl
and
add
lds
adc
jecxz
cli
xchg
xchg
mov
pop
in
cmp
shl
jnp
jecxz
dec
or
and
rol
add
pop
call
rep
jg
mov
test
das
daa
jmp
push
in
pop
jb
neg
imul
pop
mov
jl
dec
movs
aad
sub
cwde
pop
sub
(bad)
sbb
jg
pop
cdq
jecxz
xor
adc
mov
xor
addr16
in
iret
add
pop
or
stos
stos
lods
loope
cli
aaa
(bad)
test
add
int3
addr16
mov
and
pop
and
xchg
adc
inc
jnp
in
inc
mov
mov
jl
shl
add
jle
jle
sub
adc
int
into
les
cmp
jbe
test
xor
jg
pop
ret
add
in
and
out
sub
xchg
adc
jno
mov
cmp
pop
mov
or
pushf
mov
ret
fwait
xchg
adc
dec
mov
sahf
push
mov
test
popf
inc
mov
shl
adc
icebp
ss
dec
rol
jb
nop
or
and
and
inc
sti
sbb
mov
push
jbe
cmps
ins
push
jmp
mov
scas
sbb
xlat
shl
in
enter
jg
and
int3
add
fcmovnb
mov
(bad)
out
push
(bad)
popa
lea
pop
psraw
lds
fwait
or
xchg
popa
rcl
lea
cmp
pop
fidiv
inc
pop
imul
addps
cli
push
push
or
mov
vfnmaddpd
push
daa
sub
xlat
mov
out
cs
xor
jmp
push
jb
lods
sbb
int
sbb
adc
xchg
jno
clc
int3
mov
addr16
cli
pop
les
add
push
adc
lods
rcr
lea
push
aas
les
stos
and
mov
jo
dec
fidiv
jnp
sbb
ficomp
inc
cmps
jle
sti
data16
loope
dec
push
dec
repnz
cmp
mov
mov
or
mov
jp
mov
sbb
mov
(bad)
cmp
outs
fist
fs
je
daa
cmp
pop
adc
psllq
sub
nop
add
es
pop
popf
(bad)
in
hlt
sbb
test
xor
jae
jecxz
and
and
add
ja
hlt
add
sar
popa
pop
cmp
xchg
mov
jbe
test
ret
sbb
jg
ja
pop
mov
and
jecxz
and
pop
mov
dec
mov
imul
outs
cdq
xchg
pop
cmps
in
xor
mov
mov
retf
sahf
xchg
sahf
loop
call
lods
pop
dec
(bad)
mov
cmp
rcr
and
add
xor
add
sbb
or
push
add
pop
pop
jno
sbb
mov
(bad)
and
pop
retf
popf
fstp
lds
stos
add
jg
add
fdivrp
or
xor
inc
pop
jmp
lds
add
(bad)
aaa
sti
in
das
adc
mov
outs
hlt
sar
mov
test
dec
nop
pop
outs
into
cmp
repz
jo
mov
shr
pop
mov
cmp
sbb
cs
stos
xchg
push
std
adc
cmp
mov
add
lds
sub
int
retf
cld
(bad)
test
add
jp
cwde
and
cmp
cmps
scas
popa
mov
ins
outs
sub
in
sar
mov
pop
add
sbb
fld
cmps
mov
frstor
xor
dec
sbb
in
out
inc
hlt
mov
stc
out
shr
mov
scas
clc
add
dec
daa
cmp
and
dec
rcl
push
push
mov
ins
out
xchg
mov
aam
mov
mov
push
push
mov
sub
stos
pop
out
mov
seto
out
retf
jo
stos
and
(bad)
jmp
pop
inc
aam
gs
mov
xor
push
mov
inc
push
das
xchg
mov
xor
cmp
iret
dec
stos
mov
add
mov
mov
lds
mov
ins
add
xor
sbb
in
xchg
bound
and
aam
pop
pusha
mov
and
pushf
cmp
and
dec
pop
sub
mov
outs
pop
rcl
push
cmp
push
scas
les
inc
out
or
xchg
xor
xor
inc
popf
and
xor
sti
jmp
call
xor
out
sbb
cmps
mov
mov
stos
daa
(bad)
ds
popa
xchg
or
cmp
cmovae
add
cmp
fistp
inc
ffreep
cmps
jg
ins
jp
pushf
push
xor
div
aam
sahf
jo
and
shr
jae
(bad)
outs
jo
mov
adc
adc
test
ret
push
xor
inc
fist
retf
gs
mov
jo
xchg
pop
jmp
pop
add
repnz
add
xchg
nop
ds
test
push
imul
xor
add
or
mov
ins
(bad)
xchg
(bad)
sqrtps
xchg
xor
xor
lahf
or
cmp
push
push
push
cmp
gs
sti
pop
inc
xor
pop
aam
and
sub
jbe
pop
push
cwde
aaa
push
cs
in
into
xchg
add
pop
fstp
sbb
loope
adc
mov
inc
mov
lods
sahf
je
lods
jbe
push
loopne
pushf
jo
jbe
mov
cmps
popf
loopne
cli
push
loopne
ret
xor
and
mov
mov
and
ja
lds
add
dec
stos
push
push
test
sub
je
stc
call
loop
hlt
fdiv
add
fwait
or
repnz
ror
clc
jb
fdiv
and
das
out
or
push
xchg
scas
push
das
sbb
dec
(bad)
push
add
out
jge
xor
jmp
jle
or
add
loope
enter
fdivr
cs
jg
(bad)
jbe
jmp
or
int3
cmp
mov
adc
jbe
clc
ins
(bad)
cmp
lahf
inc
mov
jecxz
loopne
xchg
mov
es
or
mov
jae
sub
inc
rcl
cmp
popf
idiv
dec
retf
cmp
xchg
loopne
mov
test
aas
xchg
jl
mov
mov
mov
xor
lods
and
inc
pop
out
mov
test
dec
sbb
sub
jmp
jmp
sbb
and
xor
fidivr
aas
lea
xchg
or
cs
movs
cld
add
mov
xor
xor
call
or
xchg
and
mov
stos
and
aam
or
pop
push
loopne
pop
rcr
adc
test
sbb
popa
mov
ins
xchg
inc
jno
sub
cmc
pop
sub
jmp
mov
xchg
ins
mov
jnp
inc
shl
movs
lods
cmp
data16
or
icebp
xchg
xchg
into
ins
ret
aam
jge
lods
cmp
push
das
dec
cmp
jg
adc
lock
(bad)
neg
cmps
add
mov
scas
mov
adc
cli
pop
push
fimul
dec
neg
pop
cli
jb
cmp
das
imul
dec
ins
scas
and
aaa
push
mov
ja
or
xchg
imul
mov
dec
mov
add
xchg
clc
or
sbb
imul
popa
cmps
add
cmp
mov
in
sbb
in
xchg
dec
lods
sub
xchg
mov
mov
jae
add
(bad)
cmp
jne
push
inc
gs
jge
aad
addr16
mov
loopne
jnp
jno
push
cmp
stos
mov
jmp
jmp
pushf
fistp
push
(bad)
in
movs
fisttp
movs
push
jne
sbb
pop
aaa
in
and
push
sub
pushf
imul
into
cwde
dec
mov
dec
pusha
xor
lock
xchg
pop
lock
fild
and
fsubr
push
lock
push
pop
cmp
push
dec
fcomp
ror
jle
rcl
jg
popa
sbb
mov
sbb
and
mov
dec
jge
push
xchg
addr16
sar
pop
cdq
call
push
inc
or
ins
movs
mov
mov
add
adc
mov
dec
jb
inc
adc
push
movntps
aaa
xor
outs
xor
mov
mov
cmp
gs
(bad)
fld
cmp
mov
dec
xchg
mov
std
ss
adc
dec
sbb
mov
in
mov
xlat
aaa
mov
icebp
out
je
cmp
int
popa
popa
cmp
pusha
mov
mov
push
int3
dec
call
jg
lds
pusha
pop
(bad)
retf
call
and
ja
push
inc
push
push
inc
sub
cmc
in
sbb
mov
imul
ss
out
push
stos
je
cmp
stos
add
jmp
rcl
mov
into
xchg
and
movs
test
mov
repnz
fidiv
pop
dec
push
fucom
shl
rcl
les
mov
push
movs
push
xchg
stos
and
sbb
fwait
nop
jns
inc
sbb
outs
aad
pop
repnz
cmps
cs
outs
into
xchg
dec
sub
scas
push
and
pop
pop
dec
sbb
cmp
and
ror
pop
(bad)
fiadd
or
repz
or
xchg
daa
imul
and
out
sub
bnd
add
shr
fsub
pop
push
dec
(bad)
pop
lahf
sbb
cmps
xor
pop
setp
mov
sbb
push
fwait
dec
mov
pop
mov
aam
cli
and
inc
xchg
push
push
and
mov
ficomp
pop
dec
lahf
jle
sbb
ret
inc
jl
cmps
push
mov
xchg
test
dec
jmp
sbb
push
aaa
cmp
xor
mov
aad
mov
jmp
xlat
sahf
push
in
pop
leave
and
in
push
cmc
sbb
nop
lods
mov
movs
mov
imul
daa
push
jmp
mov
mov
inc
inc
xchg
test
dec
(bad)
mov
add
arpl
loop
inc
je
mov
jecxz
rcr
mov
or
(bad)
pop
iret
push
jle
cmps
push
das
shl
mov
jae
nop
dec
(bad)
pop
js
push
adc
sub
out
aas
push
lfs
dec
mov
fwait
jne
iret
stos
xchg
jp
add
enter
mov
test
ror
out
retf
dec
mov
xchg
idiv
cmc
jge
push
xor
adc
cmp
mov
icebp
jmp
cmp
and
push
sbb
test
bound
xchg
shl
aad
in
jmp
in
arpl
sbb
nop
bnd
in
pop
loopne
fidiv
imul
nop
jecxz
push
dec
gs
loope
xchg
cwde
add
jmp
mov
jmp
outs
mov
(bad)
fcomp
push
mov
fimul
mov
jecxz
jae
jno
jecxz
call
mov
cmp
or
mov
pushf
mov
xor
(bad)
pop
scas
mov
sub
outs
lock
mov
test
cmc
repnz
xchg
mov
out
movs
pop
outs
jns
outs
xchg
pop
dec
jle
xchg
mov
mov
popa
(bad)
adc
jp
push
add
push
imul
iret
dec
mov
arpl
push
xor
icebp
in
cmp
pop
cld
push
or
test
shl
lods
imul
lock
push
dec
cmp
push
push
cmp
cmp
(bad)
rcr
jne
mov
nop
adc
lds
inc
in
sub
cmp
(bad)
fistp
or
neg
(bad)
movs
jge
lods
enter
ins
xchg
push
or
test
mov
cli
je
test
mov
dec
fwait
in
retf
ins
mov
in
dec
cmp
retf
adc
enter
stos
test
sbb
sbb
pusha
and
es
shr
push
div
cmp
je
dec
fmulp
and
pop
cmp
cmp
ja
movs
cmc
push
adc
aam
into
pop
add
push
div
push
adc
cmc
stc
dec
sub
mov
(bad)
mov
mov
ret
nop
inc
cmp
push
les
movs
pop
sbb
je
xor
or
push
dec
sbb
and
mov
mov
test
cmc
adc
push
and
std
call
arpl
or
data16
and
mov
adc
sub
jecxz
cdq
ret
mov
push
mov
mov
iret
inc
scas
gs
adc
aam
popa
sub
mov
sub
mov
pop
cmp
clc
inc
mov
outs
jg
pop
bound
outs
std
lea
pop
je
and
adc
int3
inc
scas
outs
addr16
pop
or
js
pop
and
ins
mov
push
or
mov
push
nop
mov
call
addr16
mov
pop
movs
aas
hlt
int
jae
add
je
fstp
(bad)
adc
cmps
fild
iret
hlt
mov
(bad)
in
mov
test
mov
dec
jne
push
mov
inc
mov
push
push
dec
xor
leave
popf
push
mov
test
push
(bad)
cmp
popa
cmp
mov
adc
ret
std
es
dec
pop
fisubr
es
push
mov
cmp
shl
loope
stos
ret
and
not
outs
cwde
add
inc
xor
movs
rcr
mov
int
mov
sub
mov
in
rol
jl
jmp
jnp
add
repz
ja
xor
inc
sub
mov
push
push
push
aas
push
loope
jle
repz
sbb
repnz
inc
iret
xlat
in
xor
push
fsub
call
push
and
xchg
ss
sar
ja
push
stos
push
xchg
fimul
and
mov
or
addr16
xchg
mov
dec
xor
repnz
jns
xor
push
and
sub
adc
mov
mov
(bad)
jo
cs
addr16
stc
rol
push
push
mov
fadd
mov
dec
frstor
sub
and
dec
inc
lods
push
inc
push
jl
jns
cmp
pop
adc
mov
ss
outs
jp
ret
mov
jbe
(bad)
test
mov
aam
mov
stos
rcl
(bad)
mov
mov
mov
repnz
mov
loop
je
sub
xor
or
add
fiadd
xchg
div
add
das
jb
pop
(bad)
fcomp
pop
inc
cdq
fidivr
xor
out
mov
ret
push
xchg
inc
retf
pop
dec
xchg
ret
repnz
pop
xor
pop
mov
cmps
popf
add
ret
mov
xchg
pop
sbb
lahf
cmp
lahf
sub
cdq
or
cmp
xchg
popa
in
or
(bad)
xor
(bad)
fs
lea
mov
imul
pop
enter
mov
pop
and
push
mov
and
aam
int3
fs
mov
jl
loopne
popf
cdq
int3
inc
dec
sub
lods
dec
out
fsub
add
adc
ret
jecxz
inc
or
add
or
xor
test
mov
sbb
sbb
pop
in
call
lea
fsubp
jnp
sahf
sub
adc
push
jae
jmp
xor
adc
paddsw
push
stos
test
push
addr16
sti
lock
fidiv
out
add
push
jle
or
xchg
dec
mov
cmc
rcr
rcl
shr
icebp
sub
cmp
mov
cmp
stc
lds
inc
sbb
mov
cmc
hlt
mov
mov
mov
push
hlt
arpl
push
and
jg
out
mov
push
jno
(bad)
sub
test
aad
push
xor
jno
jp
jle
popf
fiadd
sar
lahf
out
jnp
cdq
ins
mov
and
nop
add
pop
mov
retf
std
scas
add
repz
cmp
jle
push
mov
cdq
sbb
sub
arpl
dec
test
out
lock
pushf
jno
adc
not
xchg
cdq
or
xchg
push
xchg
ins
jnp
cs
jbe
inc
sub
je
xchg
je
jno
jmp
aaa
xor
stos
lahf
add
lods
fcomp
aaa
push
sti
aam
xor
and
mov
lds
in
sbb
lods
adc
arpl
mov
inc
mov
pushf
scas
xor
das
in
add
push
out
pop
sub
cmp
adc
jnp
std
push
push
xchg
push
cmp
cld
or
mov
pop
pop
call
in
scas
pop
hlt
aas
xchg
add
jge
mov
mov
sub
leave
jo
(bad)
mov
inc
stc
xlat
sub
shl
scas
cmc
pop
inc
aad
(bad)
xchg
call
jmp
(bad)
ins
inc
push
jns
in
mov
pop
pop
xchg
and
(bad)
pop
jle
in
xchg
sti
data16
(bad)
lds
push
inc
push
daa
sbb
hlt
ret
sbb
mov
mov
cmp
sub
xchg
stc
mov
adc
jne
push
cld
dec
or
pop
jnp
aad
pop
and
nop
pop
xor
jb
jae
aam
mov
or
and
xor
aam
std
std
lods
push
or
add
cmp
dec
jl
loopne
xchg
pop
aas
pop
adc
fsubr
clc
dec
jne
inc
and
pop
mov
mov
rcl
mov
popf
and
jb
push
mov
add
xchg
and
pushf
pusha
in
pop
stos
sbb
fidivr
inc
xor
lea
loop
(bad)
repz
ins
push
into
sub
cmps
ficom
adc
sub
push
pop
pop
daa
les
sub
mov
mov
jg
into
sbb
sti
(bad)
in
and
fild
mov
fnstenv
mov
xor
movs
cmp
and
or
daa
ins
mov
sahf
push
repz
out
pop
and
dec
pushf
cmp
pop
cmp
sub
push
nop
lahf
aam
std
xchg
ret
jecxz
dec
push
inc
int
test
jg
test
push
fist
pop
int3
retf
neg
bound
push
xor
inc
and
sub
push
movs
(bad)
mov
dec
and
rcr
pop
fwait
(bad)
in
je
mov
out
retf
scas
rcl
(bad)
push
jns
ds
scas
fstp
pop
push
mov
xor
mov
push
mov
mov
sbb
rol
xlat
pop
mov
pop
into
lahf
aas
ja
xchg
gs
movs
or
and
out
lahf
(bad)
or
fidivr
pop
or
mov
push
push
mov
or
repnz
inc
xchg
cmp
dec
push
inc
xchg
sub
fs
ins
mov
pop
adc
jbe
dec
movs
cmps
mov
clc
arpl
inc
pop
test
iret
in
mov
mov
fmul
lods
sub
and
mov
inc
lahf
cmp
scas
sbb
push
fidiv
gs
(bad)
ja
jns
xor
and
cdq
mov
pop
push
pop
inc
stc
push
and
cmc
xor
cli
sti
sub
adc
and
jl
sbb
retf
xchg
(bad)
in
sbb
jbe
add
or
push
sar
rcr
inc
loop
dec
cmp
sbb
call
int
inc
sbb
scas
adc
shl
int
dec
jno
sbb
adc
(bad)
add
out
pop
cdq
mov
bound
es
sbb
daa
inc
mov
ss
cmp
inc
fwait
les
(bad)
fwait
mov
pop
ret
retf
sub
div
adc
ins
aam
dec
inc
lods
xor
mov
jno
pusha
ja
gs
jle
mov
add
scas
dec
push
jnp
test
xor
addr16
loopne
mov
leave
adc
(bad)
hlt
imul
ror
ret
aam
add
pop
rcl
movs
push
mov
jns
mov
inc
adc
jg
xor
loope
jg
in
daa
out
or
adc
sub
lods
rcl
popf
loopne
jmp
imul
adc
shl
jecxz
call
movs
sub
cmps
das
sub
pusha
push
mov
inc
js
add
int
mov
(bad)
xor
pop
add
and
addr16
add
and
int
cmc
pushf
(bad)
mov
jmp
lock
cld
push
in
dec
jge
sub
loop
mov
sub
push
call
push
bound
mov
push
sbb
and
fist
mov
xlat
pop
inc
mov
in
ins
push
xchg
pop
sub
mov
sub
fdivr
sub
xor
add
add
mov
cmp
pop
inc
cmp
sbb
ds
push
add
daa
jno
mov
(bad)
dec
lock
or
push
jecxz
pop
push
idiv
shl
inc
sar
es
rol
js
mov
xchg
jmp
jmp
jnp
bound
in
or
(bad)
inc
xchg
xor
ins
mov
xchg
add
push
push
cmp
and
mov
fwait
pop
jge
mov
add
dec
mov
push
adc
inc
mov
adc
cwde
pop
xchg
pop
xor
ss
mov
icebp
mov
bnd
inc
in
xor
test
lods
push
ret
sbb
rol
sbb
push
pop
mov
adc
push
out
test
adc
xor
adc
call
inc
push
sub
add
inc
daa
test
jg
movs
cmp
enter
mov
(bad)
out
cmp
add
lods
test
(bad)
cwde
cmp
xchg
stc
jb
mov
sahf
scas
test
xchg
popf
jmp
lods
xor
mov
fstp
mov
jmp
je
sub
jge
jae
ins
mov
in
scas
fisttp
dec
and
leave
fisub
sbb
icebp
sbb
sub
push
inc
std
cmp
outs
jmp
or
lods
setns
push
sbb
sub
lods
and
aam
or
out
test
inc
sbb
push
fdivr
fnsave
and
frstor
and
idiv
xchg
shr
test
mov
xlat
ja
fisub
jmp
es
iret
jle
leave
(bad)
scas
push
inc
das
and
aas
dec
outs
clc
jns
ficomp
mov
cdq
int
stos
pop
adc
mov
jae
pop
(bad)
push
adc
mov
daa
jmp
xchg
push
daa
stos
and
and
pop
into
mov
dec
mov
inc
dec
xor
mov
and
push
repz
xchg
or
mov
mov
fisubr
mov
mov
loope
mov
ins
jmp
(bad)
and
mov
push
leave
sub
mov
movs
inc
test
mov
(bad)
ret
jno
inc
out
out
add
push
sub
xor
hlt
mov
out
shr
data16
or
stos
dec
call
loope
and
dec
data16
push
xchg
push
and
sub
add
in
xor
mov
dec
cs
sbb
pop
sub
cmc
mov
or
das
loope
fbstp
movs
pushf
sti
sub
stc
rcr
es
iret
push
and
cmps
pop
adc
mov
mov
pusha
dec
mov
js
aaa
loop
cmp
push
and
iret
mov
out
adc
lock
mov
xchg
mov
mov
cmps
das
out
and
dec
mov
stos
psllq
mov
sbb
leave
mov
mov
scas
cmc
repz
gs
pop
adc
and
jnp
and
add
adc
ficom
lds
repz
xchg
leave
dec
ss
mov
mov
fnsave
cmp
cmps
(bad)
in
dec
jmp
(bad)
lods
adc
mov
mov
and
icebp
xor
stos
jp
dec
xlat
or
dec
xchg
sbb
xor
xchg
pop
add
icebp
test
push
push
xchg
and
gs
mov
movs
sbb
mov
adc
add
imul
hlt
gs
fidiv
pop
mov
mov
and
mov
cmp
mov
cmps
inc
(bad)
sub
imul
jecxz
scas
mov
add
sbb
aas
push
sub
push
lods
or
fild
out
xlat
mov
push
mov
jns
nop
fst
inc
and
int3
add
out
in
add
stc
cmps
jmp
test
fidiv
pop
aaa
xor
lods
push
dec
push
pop
jmp
jp
pop
fcom
aaa
sub
aas
cwde
aas
iret
sub
imul
pop
shr
adc
fwait
into
add
rol
daa
ja
sbb
mov
push
into
sbb
jne
push
jg
rcr
ror
mul
neg
scas
out
call
ja
push
mov
xchg
mov
xchg
push
aad
jmp
in
dec
fcom
inc
int3
dec
jbe
(bad)
addr16
xchg
mov
mov
and
xor
es
ins
(bad)
das
xchg
dec
jb
adc
add
xor
jmp
loope
rcl
jmp
mov
rcr
mov
arpl
xchg
aam
add
xchg
ret
sbb
inc
or
(bad)
sbb
and
jmp
cmps
cmps
mov
ret
call
adc
loope
sub
sbb
std
inc
mov
and
pop
jbe
add
or
jl
out
cld
pop
cdq
mov
mov
iret
inc
mov
pusha
cld
inc
test
dec
pusha
lds
lahf
mov
xchg
jb
push
mov
(bad)
je
xor
mov
repz
jo
jmp
lods
nop
pop
inc
cmp
xchg
sub
imul
icebp
xchg
call
loopne
stos
cs
fwait
add
or
stos
fld
xchg
ja
sbb
aam
cs
fwait
sub
mov
(bad)
arpl
jmp
jp
pop
add
jo
and
into
mov
and
pop
stos
test
push
fidivr
aad
xchg
cwde
test
and
and
cmc
stos
cld
and
mov
push
jecxz
mov
or
and
pop
popf
add
sub
jmp
test
add
sahf
wbinvd
mov
mov
gs
lahf
sub
les
retf
push
sti
sub
adc
dec
push
or
ins
jmp
pop
mov
push
stos
xchg
loop
loope
inc
inc
dec
push
ins
or
imul
lock
fimul
aad
rol
stc
push
and
ins
mov
call
cmps
inc
and
bound
outs
ins
rol
daa
or
jnp
xor
lds
push
jbe
sbb
add
(bad)
xor
cmps
test
jne
jg
leave
push
lods
xchg
hlt
add
inc
and
inc
test
clc
(bad)
fiadd
and
loop
leave
mov
cmp
ficomp
jne
and
or
jne
or
push
push
xor
ds
out
sbb
mov
pushf
sub
test
push
mov
pushf
rol
mov
loop
xor
ins
scas
dec
out
adc
jbe
in
cmp
sbb
mov
call
(bad)
loope
pushf
or
ret
cmps
sub
std
add
pop
rcl
jmp
gs
popf
jle
mov
pop
test
fdiv
push
sub
inc
pop
sub
add
cmp
outs
or
aam
popw
(bad)
cmp
rol
sbb
call
inc
dec
mov
add
div
adc
push
xor
pushf
ins
push
cdq
jl
sbb
jbe
sbb
adc
outs
ret
xchg
loopne
jmp
cmp
enter
or
icebp
jne
shl
je
mov
cmp
loopne
mov
dec
pop
jbe
add
xor
out
dec
adc
dec
pop
sbb
dec
in
loope
out
loopne
push
xor
lods
popf
cmp
loope
dec
or
push
sbb
in
jne
push
outs
jne
rcl
lahf
jl
or
push
fild
pushf
loope
sbb
mov
adc
mov
frstor
xor
jne
cmp
sub
fldcw
retf
xchg
loope
shl
mov
push
jmp
addr16
xor
jb
sub
sub
mov
pop
das
sub
inc
das
les
sbb
test
leave
or
push
mov
(bad)
fdivr
mov
ja
out
bound
repz
jle
(bad)
adc
cmp
push
mov
jb
test
push
push
mov
(bad)
jg
xor
lods
jp
enter
aad
inc
or
mov
mov
loopne
mov
nop
jp
pushf
test
mov
sbb
mov
mov
lods
in
pop
mov
xchg
fwait
jno
pop
jmp
es
jle
cwde
fnsave
(bad)
fsub
fdivr
dec
ror
mov
cmps
sbb
pop
clc
sbb
or
mov
jecxz
mov
sub
sub
ins
mov
fistp
mov
fstp
pop
push
dec
mov
in
pop
aad
dec
leave
cli
xor
push
mov
aaa
xchg
scas
inc
sbb
ja
fiadd
xchg
popa
loopne
xchg
sub
ret
dec
stos
push
pop
mov
js
add
jp
sbb
fsubr
inc
stc
xor
stos
idiv
mov
push
arpl
xchg
xor
mov
cwde
mov
mov
jge
sbb
mov
sbb
jnp
xor
ret
pop
movs
(bad)
jne
fwait
arpl
pop
jbe
cmp
adc
mov
inc
pop
movs
repz
mov
or
cld
sbb
adc
xchg
fsubr
dec
sti
sub
adc
inc
adc
test
jnp
mov
add
add
and
mov
inc
dec
mov
xchg
sub
dec
(bad)
ins
test
std
inc
sub
dec
mov
std
lods
fcmovne
jo
test
jg
jp
mov
movs
pop
(bad)
arpl
stc
dec
loope
fstp
(bad)
push
clc
fld
sub
fidivr
gs
sbb
icebp
outs
std
jmp
xor
adc
push
mov
inc
ins
gs
loopne
mov
aad
dec
lods
sbb
mov
mov
out
cli
dec
aad
adc
enter
fwait
pushf
fldcw
sub
(bad)
and
adc
pop
popa
test
ret
add
sub
pop
outs
jp
(bad)
out
mov
arpl
pop
test
cmp
mov
add
fimul
movs
xor
mov
in
leave
push
sub
adc
xor
pushf
mov
mov
jb
aad
lea
push
arpl
and
in
push
sti
call
addr16
pop
imul
(bad)
mov
outs
push
pop
gs
ja
push
xlat
cs
jne
push
movs
push
jecxz
out
jl
cwde
scas
fs
add
repnz
fs
mov
xor
or
dec
out
xor
or
or
mov
popa
repnz
js
imul
leave
jo
adc
cs
mov
fwait
movs
cmp
pop
sub
loope
mov
loopne
push
pushf
leave
call
xor
xchg
cmp
dec
ins
jno
addr16
pop
pop
out
and
out
retf
pop
loop
xchg
push
int3
jnp
lahf
(bad)
mov
xchg
pop
xchg
adc
jmp
lea
lock
test
lea
adc
cmp
shl
shr
push
outs
repnz
hlt
cmps
add
loopne
cmps
xor
test
hlt
dec
int
jecxz
cmps
lods
push
out
in
mov
push
and
es
sbb
xchg
test
mov
clc
in
or
pop
idiv
mov
xchg
inc
cmp
cmc
mov
push
bound
loop
(bad)
mov
sub
mov
xchg
push
aas
cmp
repnz
jmp
mov
hlt
int
test
mov
mov
call
mov
sti
xor
push
scas
mov
cs
pop
ins
mov
jno
mov
std
push
daa
or
xchg
pusha
xor
pop
push
adc
iret
add
imul
out
xor
sti
(bad)
jmp
sbb
jne
sbb
mov
scas
sar
das
pop
cmp
xchg
imul
dec
loope
or
add
popf
dec
cmpxchg
cmps
imul
mov
out
jmp
pop
test
mov
(bad)
(bad)
hlt
xchg
or
sbb
in
retf
jge
inc
cli
(bad)
mov
pop
inc
dec
movs
sub
pop
fdiv
push
dec
push
pop
pop
mov
aaa
xchg
fstp
in
dec
rcr
mov
mov
sbb
jo
loopne
ds
hlt
xor
sti
jmp
inc
and
int3
fadd
dec
(bad)
shl
mov
adc
outs
inc
jmp
cmp
popa
nop
hlt
jno
cmp
sti
setae
jl
pop
sbb
out
mov
shl
push
popa
out
rcr
jge
jns
push
int
dec
jge
xor
dec
call
or
bound
inc
xor
mov
out
add
scas
jo
sub
sbb
push
adc
loop
sub
jno
cmp
repz
sub
popw
mov
loop
or
retf
out
mov
and
nop
or
pop
fbstp
add
and
push
pop
mov
sub
fdivrp
mov
sub
ret
sbb
jns
mov
cmps
pop
(bad)
mov
mov
cmc
loope
or
cwde
pop
inc
cmps
inc
xor
or
mov
mov
fs
in
ret
ins
mov
scas
mov
jns
into
mov
ret
repz
fstp
xchg
push
inc
adc
out
pop
stos
call
mov
cwde
js
test
and
ds
dec
cmp
in
pop
lock
adc
jns
inc
dec
imul
dec
xor
jae
or
movs
jg
adc
mov
out
mov
xchg
pop
daa
xor
lods
je
jl
push
mov
or
jecxz
jbe
es
adc
fdivr
pusha
and
sar
adc
or
cmps
jmp
jns
sahf
nop
jo
sub
in
push
jb
cli
pop
mov
sbb
aas
fadd
bound
xchg
jge
inc
pop
sahf
mov
out
rol
push
adc
push
cdq
repnz
jmp
sub
xchg
push
test
xlat
lock
sbb
add
push
pop
cmps
inc
test
fild
ins
cmp
pusha
adc
xchg
(bad)
fcmovu
and
cwde
in
jmp
push
bound
popf
add
mov
fwait
lods
inc
adc
cmp
pop
sbb
xor
inc
ins
or
xchg
or
ds
adc
mov
cmps
dec
mov
scas
adc
int
push
pop
add
cmp
ficomp
cs
or
mov
sbb
mov
retf
adc
mov
cld
sbb
sub
popa
js
jbe
aad
and
adc
xor
in
data16
inc
ss
dec
test
push
pandn
lock
push
or
mov
adc
lahf
push
sbb
or
or
aad
fxch
mov
rcr
(bad)
enter
(bad)
pop
es
shl
inc
mov
sub
mov
sahf
inc
iret
xchg
and
cli
sahf
lahf
ret
stos
adc
mov
dec
sub
xor
ret
inc
out
test
addr16
lahf
movs
bound
cmp
mov
int3
push
xchg
lahf
jge
das
push
sar
repnz
jo
pop
jae
icebp
movs
je
xor
mov
inc
xchg
lea
jns
fisubr
imul
ret
aas
adc
adc
gs
pop
fsubr
(bad)
or
aaa
lds
dec
xchg
fidiv
pushf
aas
fcomip
out
xchg
stc
xor
(bad)
jl
stc
or
pop
test
imul
mov
ficomp
jmp
pop
adc
(bad)
xor
lods
pop
out
icebp
xchg
out
call
jmp
sti
sub
movs
imul
pop
iret
popa
hlt
fdiv
cwde
idiv
aam
cmps
fistp
sub
(bad)
test
push
lds
push
sub
hlt
movs
sti
test
cmp
int
adc
jae
lea
push
jo
sbb
(bad)
outs
int3
cmp
inc
ins
xor
pop
ror
or
(bad)
xor
and
xor
test
mov
xchg
mov
and
jmp
outs
or
jmp
sbb
mov
dec
icebp
xchg
jg
mov
add
inc
push
jne
shl
push
ror
mov
fidiv
loopne
aad
scas
mov
jle
fist
cld
stos
cmp
int
cld
push
fnstenv
jns
xchg
jp
lea
(bad)
adc
(bad)
les
shl
imul
jno
mov
aaa
imul
jmp
pushf
sbb
sahf
add
cmp
and
aam
pop
sbb
cld
sub
or
cmp
inc
lods
xlat
test
daa
cmp
enter
sbb
adc
jbe
outs
loopne
cwde
inc
in
add
mov
sbb
mov
mov
lahf
jmp
jno
std
stos
xlat
pushf
pop
mov
iret
pop
fwait
mov
jnp
stc
mov
inc
and
loopne
mov
sti
icebp
aaa
in
xchg
xchg
retf
jecxz
sub
(bad)
jns
stos
sbb
xchg
pop
fadd
adc
pusha
popf
push
rcl
ret
scas
jo
sub
xor
outs
(bad)
jns
push
cdq
push
mov
scas
xchg
inc
gs
fs
mov
xchg
in
push
dec
fdivr
dec
or
mov
mov
(bad)
aas
into
lahf
(bad)
(bad)
add
mov
fwait
cmp
retf
cmps
aam
jle
cld
iret
inc
retf
mov
test
push
sar
(bad)
mov
in
ja
out
mov
in
lahf
xor
fisub
push
dec
fs
or
gs
sub
(bad)
inc
and
and
pushf
jns
ss
mov
icebp
mov
inc
pop
imul
fisttp
pop
mov
lahf
or
xchg
(bad)
ins
xchg
jmp
jl
or
fild
adc
(bad)
(bad)
xchg
lahf
mov
stos
aas
aas
clc
ffreep
inc
jns
imul
ret
imul
pop
sub
dec
pop
jno
repnz
push
std
cmps
push
int3
movs
(bad)
rcl
pop
rol
mov
xlat
dec
sub
or
jo
fwait
mov
push
pop
push
cwde
cmp
lahf
stc
sbb
(bad)
test
inc
loop
out
mov
push
call
inc
push
push
hlt
jge
test
dec
iret
rcr
aaa
sbb
pop
sbb
rol
jmp
xor
push
out
int
pop
jno
mov
shl
sub
xor
cmp
pushf
cld
or
retf
aaa
or
ja
fsubr
xchg
mov
and
or
add
ss
pop
test
aad
test
pop
xchg
lahf
lea
adc
aaa
popf
mov
movntps
mov
cld
pop
(bad)
addr16
sub
inc
mov
clc
mov
sub
mov
xor
pop
outs
ret
inc
ret
xchg
ja
imul
xchg
push
xor
cmp
lahf
cmp
hlt
adc
push
pop
js
ja
mov
cmps
pop
push
fs
cld
xchg
mov
mov
bnd
sbb
push
xchg
aas
aam
jle
mov
les
pop
retf
pop
scas
jb
movs
fmul
(bad)
push
xchg
pop
xchg
pop
lock
loop
mov
adc
inc
inc
jl
mov
stos
in
push
daa
(bad)
cmc
mov
movs
or
movs
es
out
sahf
leave
and
js
add
cli
in
std
nop
jnp
mov
je
sbb
repnz
push
arpl
jnp
enter
out
arpl
or
in
in
pop
inc
jno
pop
mov
shl
jecxz
mov
push
or
mov
in
xor
ins
into
ins
mov
sub
xchg
xor
loope
sti
arpl
daa
sub
or
fnsave
cmp
pushw
into
pop
dec
out
cli
es
push
(bad)
ficom
xchg
fucom
xchg
movs
rcr
cwde
fisttp
or
inc
mov
pop
lock
mov
or
cmp
push
cld
fadd
sub
dec
fwait
xor
mov
stos
xor
ins
pop
lods
popa
clc
pushf
aas
lods
out
(bad)
(bad)
outs
mov
and
in
and
push
fst
jl
adc
inc
xlat
jmp
and
sahf
clc
repz
popa
jmp
cmp
(bad)
add
sub
sbb
aam
test
cmps
pop
or
mov
xchg
push
scas
enter
lahf
push
mov
mov
push
call
stos
movs
fcmovu
gs
clc
rcl
sbb
mov
xchg
or
cmp
fild
sbb
jg
mov
iret
aad
out
add
mov
jne
dec
and
stos
loope
enter
xchg
fnstenv
cmp
mov
and
nop
add
sub
(bad)
sub
push
sub
and
jmp
mov
inc
sub
push
xchg
bound
xchg
retf
dec
push
push
jo
addr16
cmps
repnz
xor
mov
or
(bad)
sar
test
iret
movs
or
jle
lock
(bad)
cld
ds
mov
push
std
and
test
add
fcom
fstp
popf
movs
movs
movs
dec
sbb
inc
inc
jmp
arpl
out
dec
jmp
aam
mov
out
mov
rol
lods
out
xor
mov
pop
in
push
pop
mov
xchg
cmps
xor
test
icebp
push
je
cmc
push
stc
mov
stc
xor
jno
mov
clc
clc
ss
dec
imul
mov
out
retf
mov
sar
pusha
push
xchg
lea
mov
sahf
(bad)
fcom
(bad)
push
pop
popf
loope
rcl
push
push
sbb
cmp
icebp
pop
sar
lods
fidivr
and
test
pushf
ss
adc
dec
cmp
lds
stos
cli
push
xor
stos
pop
jl
loope
adc
shl
mov
mov
push
fidivr
push
sti
push
inc
aad
mov
aad
(bad)
dec
stos
fwait
mov
cmps
scas
xchg
mov
sub
sbb
mov
hlt
fsub
and
arpl
mov
add
ja
int3
and
jnp
mov
jge
pop
and
adc
bound
addr16
sbb
cmp
ffreep
mov
push
jns
test
out
repz
sub
inc
stos
xchg
sbb
dec
fs
mov
or
es
jmp
mov
rcr
jb
movs
sub
mov
dec
lock
mov
jmp
mov
xor
dec
push
or
inc
push
cmps
aaa
inc
and
std
js
dec
push
outs
dec
fiadd
std
jne
stos
xchg
mov
(bad)
in
(bad)
xchg
mov
or
je
jmp
fucompp
add
dec
push
rcr
jecxz
inc
pop
test
mul
imul
je
sub
jl
mov
sub
imul
test
ja
or
pusha
push
push
xor
pop
add
je
cmp
xchg
and
push
dec
sbb
ds
add
pop
xor
xlat
cmp
mov
fld
and
pop
(bad)
adc
jl
pop
push
daa
lds
js
push
ins
je
fist
outs
sub
sub
(bad)
mov
loop
nop
or
bound
pop
fisub
cmp
mov
out
icebp
ds
pop
(bad)
fistp
cli
repz
mov
cmp
cs
push
shr
xlat
out
jne
mov
sbb
mov
pop
les
ss
jg
mov
mov
aad
cmps
arpl
add
adc
ins
jg
sbb
ja
and
pop
push
and
jne
or
adc
add
js
cmp
jl
add
add
mov
jmp
jmp
cmps
(bad)
inc
or
fisubr
inc
jge
ja
adc
leave
mov
idiv
dec
retf
neg
es
repz
cmp
add
jmp
retf
stc
aaa
inc
adc
(bad)
es
(bad)
cmp
popa
sbb
or
imul
stos
cdq
pop
out
jge
pop
inc
rcl
inc
push
popf
pop
fcomp
shr
and
jb
dec
jo
xor
sahf
in
lea
cmp
adc
mov
ds
dec
mov
dec
pop
add
cmps
ss
leave
icebp
jmp
cmp
xchg
in
xchg
mov
adc
ret
rol
stos
push
in
cmp
pop
jmp
inc
out
pushf
dec
repz
aad
jb
ins
push
js
xchg
pushf
and
clc
jmp
clc
fimul
lock
dec
or
int
test
xchg
jle
and
cmp
es
shr
inc
addr16
cwde
iret
fcmove
mov
push
mov
and
mov
inc
mov
xlat
shr
or
es
cld
cmp
jbe
ret
iret
and
retf
js
out
jge
psrlw
out
repnz
fs
sub
mov
call
cli
mov
jmp
push
add
lods
sub
inc
jbe
ret
mov
mov
mov
ds
mov
mov
jmp
fidiv
mov
jp
push
daa
out
bswap
jbe
scas
std
or
cmps
lea
inc
shl
dec
xchg
sahf
pusha
ror
xor
retf
sub
(bad)
(bad)
fimul
adc
xor
sbb
arpl
les
cmp
or
push
mov
cs
fsubr
adc
jns
cmps
inc
xor
jnp
add
test
shl
sub
xchg
or
and
mov
push
xor
add
or
dec
dec
fld
in
movs
or
mov
loop
call
popf
lea
push
jl
mov
inc
lods
test
shl
push
push
dec
inc
stos
adc
mov
push
into
aam
push
fsubp
dec
cmp
mov
mov
and
cmp
retf
addr16
(bad)
stc
(bad)
shl
cmp
hlt
xchg
jmp
clc
sub
jl
add
push
adc
add
add
xor
jmp
outs
loopne
and
test
popa
iret
xchg
test
push
inc
mul
jmp
xchg
in
mov
add
icebp
inc
mov
dec
xor
mov
sub
lods
add
xchg
pop
jno
fbstp
repz
and
cdq
sub
fwait
xor
add
mov
iret
fmul
fwait
push
js
lea
push
ins
push
sub
push
dec
arpl
push
mov
cld
add
pop
fmul
pop
add
or
adc
jne
imul
inc
cdq
fcomp
add
jp
and
dec
mov
xlat
adc
add
(bad)
push
sbb
rol
sub
jmp
aaa
push
adc
imul
xchg
fcom
xchg
xor
cmps
sti
sub
das
jbe
stc
jmp
jge
dec
jmp
adc
daa
call
pop
mov
mov
mov
mov
mov
jnp
lods
pop
pop
xor
dec
test
jecxz
mov
mov
test
or
lods
or
out
push
cwde
pop
jnp
bound
retf
add
test
or
arpl
or
imul
imul
pop
adc
mov
add
test
ins
lahf
mov
mov
push
std
ja
jne
mov
and
repnz
xor
jns
or
call
cmp
mov
(bad)
leave
sub
popa
pshufw
add
inc
call
add
test
sbb
push
inc
fmul
cmp
std
sub
jmp
stos
push
leave
test
push
sub
add
inc
inc
or
std
fisttp
jbe
add
(bad)
rcl
add
(bad)
cmp
gs
cwde
pushf
inc
or
out
dec
sbb
cmp
sub
add
or
stc
cmp
aaa
jg
dec
stc
sbb
stos
xor
btc
aad
and
enter
xchg
lock
out
xor
in
jnp
jge
dec
xor
loop
mov
clc
adc
push
aam
(bad)
lods
pop
cmps
lods
ds
shr
push
xor
sbb
xlat
push
cmp
repz
retf
std
out
bound
pop
mov
cmp
cs
nop
mov
xor
pop
adc
dec
aas
push
or
lods
jnp
jmp
test
jnp
or
(bad)
cmps
dec
sbb
jmp
loopne
jbe
cdq
dec
cmp
push
mul
cmp
ins
xchg
inc
or
xchg
cld
and
fsub
fiadd
add
xchg
cmp
retf
cli
dec
test
gs
cwde
inc
xor
aas
push
dec
xor
sbb
cmc
sbb
mov
jecxz
cmp
(bad)
mov
inc
and
(bad)
lods
xor
sahf
mov
or
adc
mov
aam
adc
test
sub
mov
sti
dec
jnp
iret
stc
sub
or
mov
jmp
or
aam
xchg
(bad)
call
adc
gs
call
cmc
mov
ins
cmps
mov
xor
jne
xor
sub
xchg
mov
ret
es
call
retf
es
ds
retf
jns
mov
pop
jae
cmp
add
das
jecxz
jl
bound
pop
mov
cmc
xchg
mov
inc
add
jl
push
hlt
stc
inc
cmp
loopne
stos
adc
and
xlat
mov
mov
dec
mov
push
out
ja
out
xlat
push
in
mov
retf
mov
stos
push
inc
xor
xchg
pop
inc
mov
mov
sub
pop
movs
div
cmps
mov
add
clc
inc
ins
and
movs
call
retf
out
ret
stos
gs
sub
stos
mov
jp
cmp
xor
adc
push
or
sub
stos
sbb
lds
dec
and
push
call
js
out
jmp
sub
sub
mov
push
mov
loope
aas
xchg
pop
lods
pop
iret
gs
movs
data16
and
lds
(bad)
adc
icebp
pop
fisubr
jmp
cmp
and
pop
xor
cmp
cmp
adc
ffree
jmp
adc
xlat
fldcw
inc
(bad)
add
inc
sub
adc
popf
jmp
stos
ins
push
dec
cmps
cdq
bound
pop
inc
sub
dec
dec
push
or
and
mov
push
(bad)
shl
jmp
iret
div
sbb
push
xchg
xchg
mov
xchg
fs
imul
ffreep
mov
add
xchg
icebp
push
fdivrp
ins
push
lods
jne
mov
dec
daa
inc
push
out
xlat
out
mov
shr
pop
mov
xchg
shr
lods
xor
xchg
out
jns
xor
xchg
push
aas
arpl
mov
scas
push
int
push
xchg
cmps
fiadd
mov
fs
call
xor
repz
pushf
lods
sub
aad
movs
pop
sub
pusha
pop
fisubr
mov
and
scas
cmp
je
pushf
dec
aam
mov
pop
or
fist
pop
cmp
ins
into
sahf
inc
(bad)
dec
sub
push
dec
inc
push
cmp
bound
iret
push
pop
cmc
aaa
xor
lea
sub
add
ss
push
push
xlat
fmul
sbb
xor
mov
mov
(bad)
loop
mov
jle
or
mov
inc
pop
jl
mov
xchg
into
das
fisub
into
adc
les
or
push
aas
lock
int3
leave
and
sub
push
cmp
jae
sbb
add
jle
adc
fs
push
ins
leave
addr16
fcompp
and
outs
aaa
dec
pop
je
arpl
in
mov
rol
pushf
pop
je
lods
out
(bad)
sbb
sub
dec
push
lods
push
jnp
icebp
mov
cmp
inc
movq
out
xor
xor
stos
push
xor
mov
test
out
loopne
fld
(bad)
test
push
ja
sbb
cmc
mov
rol
inc
xor
test
or
jno
or
scas
mov
jmp
pop
adc
xor
popf
pop
sbb
push
push
sbb
or
xchg
add
rcl
jnp
sub
test
xlat
dec
paddd
cli
fisub
repz
pop
lock
push
test
sbb
arpl
cmp
(bad)
in
lahf
outs
xchg
mov
loop
fcomp
in
ss
clc
cwde
push
xor
fistp
mov
inc
jmp
ret
push
or
lods
fimul
clc
and
fucomp
add
ror
idiv
inc
add
and
js
int
popf
and
pop
sub
pushf
imul
mov
push
(bad)
hlt
xlat
mov
pushf
sar
cmps
xchg
mov
jb
into
mov
das
(bad)
loopne
mov
mov
fnsave
pusha
gs
push
push
dec
cmp
adc
out
int3
scas
leave
pop
imul
ficom
inc
sbb
adc
lds
push
inc
mov
dec
adc
jo
jmp
nop
fimul
dec
fwait
(bad)
hlt
sbb
mov
mov
ja
lods
jle
xor
into
rcl
lea
mov
fsubr
inc
aas
xor
pop
jmp
push
aaa
add
ret
xor
(bad)
xor
sti
stc
xchg
jnp
dec
retf
out
xchg
test
sub
push
add
(bad)
(bad)
xor
shr
in
xchg
stc
pushf
or
call
das
and
adc
sti
pop
arpl
clc
jne
push
sbb
movd
pushf
fidivr
jl
scas
mov
cmp
dec
mov
call
outs
dec
cwde
push
in
call
or
mov
cmps
jge
pop
adc
jmp
jns
rcl
in
or
ror
pop
adc
adc
cs
xchg
fbld
pop
int
mov
shr
dec
adc
rcr
mov
sub
(bad)
lahf
(bad)
repz
mov
push
sbb
sub
jne
imul
pop
je
mov
enter
mov
std
xlat
push
fistp
test
mov
inc
lds
push
shr
pop
inc
lods
sahf
test
sub
and
daa
mov
mov
inc
aaa
loope
xchg
mul
adc
out
shl
out
cmp
mov
cmps
lock
cmp
sbb
sbb
inc
retf
add
jg
mov
xor
sub
int
pop
hlt
fisubr
inc
sub
mov
inc
xchg
adc
(bad)
cmps
and
pop
(bad)
not
rol
sub
push
push
push
xchg
int
pushw
fmul
test
dec
rol
inc
mov
add
retf
or
dec
mov
mov
iret
test
fs
out
arpl
push
cmp
adc
mov
push
imul
test
iret
retf
lahf
addr16
or
rol
jbe
add
hlt
adc
cmp
xor
imul
pop
adc
or
push
push
xor
retf
mov
xor
jno
movs
aas
sahf
jmp
pop
ja
jno
xchg
cmp
hlt
cmps
fisttp
arpl
xchg
(bad)
int3
scas
cmp
mov
and
jmp
sbb
jnp
pushf
lods
in
ss
fbld
out
pop
enter
xor
icebp
(bad)
call
(bad)
adc
dec
sbb
ficomp
gs
ins
adc
ins
call
fst
fldl2e
sbb
sub
push
retf
mov
mul
adc
add
in
push
mov
and
in
or
mov
fiadd
ds
add
add
push
jno
arpl
les
fcom
mov
mov
add
xor
sub
mov
inc
xchg
or
inc
popa
enter
and
arpl
sub
call
jmp
hlt
adc
sbb
mov
imul
les
jge
in
pop
int
out
pop
adc
xchg
div
daa
scas
jnp
cdq
push
aas
ins
ror
(bad)
pop
icebp
fxch
adc
aas
cmp
dec
leave
jmp
loop
fwait
mov
arpl
adc
xor
sbb
xchg
push
and
dec
push
iret
retf
dec
out
enter
xor
mov
push
and
ds
jno
adc
jle
or
cmp
fldenv
cmp
cld
mov
pushf
xchg
jnp
cmp
sbb
pop
dec
mov
aas
xor
fs
and
lea
(bad)
call
sbb
(bad)
mov
fsubr
call
ret
sbb
jo
lds
xchg
jo
xchg
jmp
std
addr16
loop
mov
or
or
mov
movs
pop
inc
mov
mov
xor
sti
mov
and
dec
push
into
inc
xor
dec
inc
mov
gs
out
je
rcl
add
mov
fst
loopne
sub
je
loope
fdivr
js
adc
adc
iret
jp
out
adc
in
sub
popf
test
movs
fs
and
sar
jle
inc
arpl
inc
xchg
xchg
rol
sub
repnz
call
mov
lea
sbb
dec
dec
in
mov
push
push
pop
xchg
shr
les
div
or
fist
hlt
or
fsub
jo
mov
xchg
fld
mov
mov
ja
arpl
aad
scas
cli
je
ret
adc
dec
inc
out
cmp
gs
lock
std
call
pop
inc
leave
pop
sbb
(bad)
out
and
js
iret
test
(bad)
jno
aam
(bad)
or
jae
in
pop
dec
and
dec
cmp
sbb
add
sar
jbe
mov
mov
or
add
cmp
push
std
(bad)
movs
push
xor
fld
fwait
mov
push
mov
int3
shr
sub
or
ja
sub
sub
sub
adc
lock
sbb
push
in
dec
xor
or
fstp
ret
(bad)
stos
arpl
or
es
ds
ss
ficomp
and
pop
sbb
mov
es
leave
(bad)
fst
movs
aam
mul
sbb
pop
sbb
cmp
lea
gs
sahf
ins
pop
and
rcr
mov
sar
mov
(bad)
fidivr
push
fucomip
in
sbb
lods
xchg
mov
jne
mov
outs
pop
rcl
mov
clc
or
aas
stc
mov
fwait
xor
leave
cmp
and
or
call
out
pushf
movs
jae
adc
shl
cli
mov
data16
cmc
push
in
jecxz
jmp
pushf
xchg
adc
dec
mov
in
idiv
cmp
clc
cld
and
mov
dec
xchg
ret
lahf
hlt
add
add
or
neg
inc
mov
xor
mov
add
xor
add
push
mov
mov
or
add
fidivr
add
pop
mov
jmp
test
push
jns
ss
push
enter
xchg
loope
and
outs
(bad)
iret
xchg
pop
aam
xor
adc
daa
xchg
hlt
mov
lods
les
clc
jecxz
pop
pop
lea
xor
sar
cwde
fnsave
jp
hlt
ret
nop
leave
rcr
test
mov
sub
in
ss
mov
fstp
and
sub
ror
aaa
jl
mov
or
jle
movs
sbb
out
cmps
sbb
pusha
aam
ret
xor
or
mov
call
inc
icebp
(bad)
js
fdivr
push
or
test
push
mov
mov
je
xor
pop
neg
mov
in
fsub
xor
pop
inc
cmp
call
jbe
or
std
or
out
mov
inc
dec
je
cmp
div
adc
loop
xor
adc
adc
lea
fs
imul
pop
pop
push
cmp
repz
out
cmp
xchg
sti
fbld
cmps
push
pop
lods
loop
repnz
mov
xchg
inc
rcl
pop
daa
and
(bad)
sub
outs
rcr
dec
cmp
and
adc
jl
add
and
neg
pusha
data16
loopne
mov
(bad)
xchg
addr16
fs
and
and
arpl
pop
loope
scas
jns
sbb
shl
push
cmc
inc
lea
addr16
mov
and
jbe
lds
push
fucom
loopne
movs
dec
hlt
mov
or
and
dec
daa
xlat
pop
mov
pop
add
js
pusha
inc
jb
(bad)
stc
fdiv
sub
jae
dec
mov
inc
test
retf
js
jmp
div
jbe
jne
push
sbb
fst
mov
add
fldcw
jg
rcr
fcom
sub
mov
inc
xchg
outs
aad
or
or
mov
mov
mov
icebp
adc
mov
shl
and
loop
jo
out
fsubr
popa
(bad)
and
cdq
aad
jnp
fnsave
mov
push
jmp
loope
sti
or
inc
jl
xchg
jmp
cmps
inc
ret
aam
jmp
or
jmp
test
out
mov
enter
bound
mov
adc
push
jbe
adc
sahf
int3
lods
aam
data16
sbb
gs
addr16
push
mov
mov
setne
mov
mov
pop
mov
neg
ret
mov
mov
movs
int3
jmp
xor
sub
(bad)
out
mov
xor
xor
lahf
imul
cmp
pop
stc
cmp
inc
sbb
dec
jmp
adc
cmc
pusha
test
popa
sbb
retf
xor
loopne
jmp
or
inc
xor
ret
in
cmp
jp
cmp
pop
sub
mov
or
push
cmc
cdq
add
in
retf
scas
idiv
fisttp
adc
nop
pop
(bad)
loopne
mov
push
pop
out
ss
add
iret
fidiv
popf
cld
mov
cmp
lods
sahf
xchg
xchg
push
sbb
js
sbb
sahf
jmp
jmp
dec
enter
mov
or
test
je
mov
dec
scas
inc
enter
out
scas
add
xor
add
cmp
mov
popa
dec
mov
fdiv
into
mov
out
(bad)
mov
data16
(bad)
adc
add
retf
dec
clc
xchg
sub
popa
push
lock
jmp
pop
lods
std
stos
fadd
dec
mov
cmps
out
xchg
jns
pop
(bad)
push
mov
inc
mov
shl
xchg
or
retf
push
inc
xor
jp
mov
test
idiv
cmp
dec
or
sbb
imul
pop
xchg
aam
aam
jge
jmp
pop
pop
mov
xchg
repz
dec
jb
cmps
pusha
scas
popf
mov
xchg
push
cmp
leave
inc
push
xor
push
ret
jecxz
and
sub
sub
(bad)
xchg
add
das
movs
jo
or
imul
out
stos
ja
add
ds
iret
mov
ret
inc
bound
cmp
aaa
lock
shr
add
add
jne
push
mov
ins
jbe
jnp
jno
pop
movs
lds
adc
jmp
mov
jecxz
lea
scas
pop
push
or
and
dec
cmp
cli
sbb
sub
and
cmp
or
dec
dec
jo
mov
sar
dec
xor
(bad)
popf
xor
mov
div
xchg
dec
jne
(bad)
lock
fmul
retf
outs
cmps
mov
push
and
and
not
lea
out
fld
sbb
shr
iret
push
je
adc
jle
cmps
lock
(bad)
xlat
into
and
xor
bound
loope
cmps
push
xor
popf
stc
ja
push
jmp
and
mov
jae
mov
idiv
mov
xlat
fild
test
jns
call
call
clc
cmps
in
mov
cs
or
dec
jecxz
scas
movs
fstp
inc
mov
ret
push
push
ss
push
movs
xor
shl
(bad)
xor
into
xor
ret
sbb
cmps
loop
lods
into
sbb
xor
mov
xor
cdq
dec
lock
fild
cmp
mov
scas
rcr
retf
cs
shr
mov
lea
(bad)
hlt
out
shl
lods
add
mov
rcl
push
retf
aas
add
push
jl
fld
sti
(bad)
mov
sbb
sbb
push
cmps
adc
inc
jl
xchg
mov
cmps
nop
xchg
test
push
loope
retf
call
dec
push
fsub
ja
in
addr16
daa
pop
adc
sahf
sar
or
fsubr
js
pop
push
rcr
mov
or
movs
and
sbb
dec
stos
sub
sti
mov
inc
out
aam
ds
lea
inc
cmp
jle
add
test
lods
gs
mov
fwait
sbb
dec
sbb
mov
and
imul
js
mov
sbb
pop
xor
into
ds
sbb
pop
enter
adc
idiv
std
add
sahf
pusha
setge
pusha
and
jb
bnd
aad
cmp
test
sbb
arpl
pop
or
cmps
cwde
cmp
pop
in
jb
mov
outs
mov
retf
lods
jbe
les
fstp
mov
imul
mov
or
loopne
xchg
daa
mov
xor
mov
lahf
daa
cmp
mov
(bad)
push
adc
mov
(bad)
sub
add
and
push
jns
popa
cmc
sub
mul
dec
shr
or
in
adc
daa
jle
hlt
call
and
in
pop
add
outs
scas
sbb
push
fwait
push
hlt
xchg
movs
les
enter
push
jbe
adc
mov
jecxz
stc
pusha
mov
(bad)
fs
sub
push
add
adc
test
or
cdq
sbb
inc
adc
xchg
and
into
or
aam
pusha
pop
shr
retf
sahf
push
icebp
or
sub
push
rcl
pop
repnz
pop
xchg
sbb
shl
outs
xor
(bad)
or
das
cmp
cmp
shr
mov
or
pop
mov
pop
add
dec
mov
jmp
mov
jns
mov
imul
out
xchg
lods
xlat
and
or
mov
icebp
mov
jmp
cdq
mov
rol
imul
call
dec
imul
pushf
jnp
and
xor
in
mov
mov
xchg
mov
daa
pop
cmps
imul
push
in
jmp
push
mov
cli
inc
test
adc
xchg
aaa
jmp
repz
cmp
rol
pop
jl
adc
out
faddp
ins
inc
push
pop
aam
add
inc
cwde
jmp
dec
(bad)
daa
or
test
(bad)
cmps
push
rol
dec
inc
xor
jecxz
or
lea
adc
lods
pop
test
push
data16
imul
add
inc
cmp
and
dec
stos
int3
cmp
data16
test
(bad)
pop
imul
cmp
cmp
imul
mov
stc
mov
(bad)
add
hlt
std
mov
jnp
sbb
cmp
sbb
dec
arpl
fadd
adc
mov
add
adc
adc
nop
outs
ja
jmp
add
loope
sbb
je
test
pusha
jmp
div
icebp
clc
bound
xor
adc
cmp
adc
jae
push
fidiv
xor
xor
repz
mov
shr
inc
fs
jge
adc
xor
mov
dec
mov
aad
mov
call
sbb
dec
xchg
mov
mov
sbb
hlt
or
outs
popa
sti
xor
or
mov
xor
adc
dec
sbb
sahf
(bad)
adc
imul
clc
mov
fadd
daa
outs
ret
push
mov
stos
jg
jp
sub
adc
fbld
imul
pop
shl
call
retf
ins
loopne
adc
fld
ss
sub
sahf
shl
arpl
fwait
in
ror
sub
(bad)
ins
sbb
xchg
iret
call
and
pusha
pop
test
jae
lods
sub
(bad)
frstor
dec
or
add
retf
xchg
push
aaa
out
out
or
mov
(bad)
xlat
adc
icebp
ret
mov
adc
cmc
cmp
jnp
retf
sti
mov
mov
int
dec
xor
imul
(bad)
test
mov
inc
xchg
out
inc
xor
add
dec
popf
inc
mov
nop
scas
jecxz
into
and
jl
fld
data16
push
xlat
stos
pop
scas
fld
pop
dec
sar
in
(bad)
add
jnp
push
xor
rcl
call
cmp
lods
adc
cmp
inc
es
stc
dec
adc
std
addr16
mov
(bad)
out
lods
add
and
test
shl
repz
mov
sbb
cwde
(bad)
lock
fnstsw
dec
dec
lods
out
stc
pop
xchg
adc
xchg
ds
mov
out
fwait
ret
xchg
jnp
mov
pop
ficom
push
jo
hlt
stc
cmp
arpl
inc
push
pop
inc
xchg
inc
out
int3
ds
ret
call
jo
scas
les
lea
mov
cmp
ret
inc
xor
in
cmp
mov
xchg
fwait
sub
push
jmp
xor
pop
and
mov
repz
lock
inc
mov
scas
push
(bad)
inc
test
test
test
scas
mov
int
cmp
addr16
cwde
inc
cmp
inc
rol
or
stos
dec
push
and
out
pop
jae
dec
dec
jl
mov
dec
add
retf
movs
push
aaa
sbb
push
sbb
gs
scas
ret
hlt
dec
shl
nop
jne
nop
sbb
xor
sub
outs
jns
(bad)
cmps
and
xor
pop
adc
inc
out
inc
xchg
xor
lahf
rol
(bad)
or
in
mov
pop
in
push
pusha
pop
lods
fidivr
bnd
jo
push
pusha
mov
or
cmc
xchg
pop
and
fsub
sub
fdivr
(bad)
adc
jle
sub
inc
or
push
push
jnp
idiv
jbe
push
icebp
ret
pop
lods
xchg
sbb
cs
mov
xor
cmp
mov
and
fstp
mov
cld
(bad)
cdq
and
add
pop
jmp
adc
call
int3
sub
test
div
mov
dec
sbb
cmps
cs
cmp
jno
add
dec
lds
stos
aam
adc
inc
push
mov
mov
nop
(bad)
jmp
cmp
jns
jae
sti
mov
inc
dec
and
popa
mov
into
shl
sbb
arpl
lods
push
sbb
test
scas
repz
adc
popf
(bad)
and
xchg
push
mov
imul
cli
retf
repz
push
sbb
bound
loopne
(bad)
fwait
ret
outs
es
int3
lods
sub
add
pop
cmp
jno
cld
ficomp
jmp
dec
pop
out
aaa
lods
clc
lods
iret
test
push
popf
mov
xchg
(bad)
cli
mov
frstor
(bad)
repz
add
ins
cmps
adc
jae
pop
jl
scas
push
test
shr
sub
push
lock
inc
sar
push
ins
into
fcmove
fiadd
or
(bad)
repz
sbb
xchg
sub
xchg
repz
cmp
dec
scas
xor
daa
mov
das
sbb
pop
xlat
fbstp
sti
mov
fild
xor
push
pushf
sti
pop
lock
jne
test
and
jmp
or
pusha
mov
lahf
or
jno
icebp
jp
jo
mov
loop
inc
(bad)
repnz
fs
out
xor
adc
ds
mov
cmp
push
mov
jnp
ins
and
xor
inc
out
xor
mov
sub
test
push
pop
or
ror
pop
popf
lods
ins
fwait
in
stc
rcl
mov
fstp
dec
mov
push
pop
dec
xchg
fist
int
cmps
repnz
mov
and
mov
and
ret
add
jae
sub
mov
ret
in
and
jecxz
sbb
xchg
sub
test
dec
repnz
adc
mov
in
outs
test
inc
rcr
push
and
lods
mov
leave
pushf
xchg
lods
mov
xchg
pop
jbe
jne
dec
sub
test
ds
and
jne
cwde
xor
mov
mov
bound
push
fsub
in
out
jmp
xchg
jmp
xor
dec
cmp
add
sub
and
dec
mov
mov
xchg
clc
js
or
shr
aas
push
ret
push
loopne
cmps
cmp
faddp
pop
ins
shl
jge
and
or
mov
fnstsw
outs
inc
xor
xor
pop
inc
jge
int
ffree
mov
pop
mov
enter
jmp
jbe
cwde
pop
repnz
sub
cli
and
adc
cmps
shr
and
xor
out
adc
out
jbe
pop
push
hlt
and
not
imul
push
pop
xor
sbb
jg
fcomp
retf
or
push
cmp
cli
add
test
rol
lds
jne
lea
mov
xor
aaa
mov
out
imul
dec
bound
xchg
sti
stos
pushf
xchg
jns
mov
cmp
mov
xor
and
and
je
data16
lea
fs
(bad)
push
dec
dec
mov
aad
scas
xchg
xor
cli
adc
xor
aas
mov
jo
dec
xlat
push
sub
sub
sar
inc
sub
jmp
adc
lahf
pusha
adc
sub
jmp
and
dec
or
leave
lea
lods
pop
hlt
xchg
movs
arpl
rol
in
fwait
rcl
stc
or
test
sub
cli
pop
daa
inc
enter
out
xchg
xchg
and
and
jmp
sub
jbe
xchg
jne
add
pop
add
jl
jle
jne
xor
mov
cmps
leave
gs
out
scas
cld
mov
sub
add
jns
ret
daa
icebp
push
cmp
mov
mov
mov
pop
dec
pop
xchg
loopne
cmc
sub
mov
movs
les
outs
push
std
imul
xchg
mov
cmp
adc
and
mov
jmp
repz
test
(bad)
mul
fwait
inc
jbe
ja
jo
jl
data16
lods
sbb
test
fbld
repnz
in
jnp
pop
pushf
jns
sub
push
add
or
(bad)
out
jbe
dec
and
xor
imul
movs
retf
int
and
mov
bound
mov
xchg
inc
scas
and
imul
xchg
repz
mov
xor
popf
jge
imul
int
data16
hlt
xlat
cli
xor
mov
imul
xchg
xchg
adc
inc
jge
push
(bad)
lock
out
in
movs
(bad)
sbb
ja
stc
push
jb
pop
mov
(bad)
sbb
add
push
cmp
mov
pop
mov
mov
in
lods
pop
mov
sub
jmp
pop
movs
xor
sub
rol
add
cli
adc
lods
ret
pop
xchg
frstor
adc
adc
fcmovbe
pop
inc
lea
jl
lock
movs
neg
das
sbb
mov
sub
mov
in
(bad)
stos
xlat
and
sub
fmul
xchg
sbb
(bad)
je
jmp
call
(bad)
ss
call
and
sub
cmps
cmp
mov
bound
js
(bad)
lea
pushf
cmps
jge
lods
inc
pop
xchg
lock
lods
lds
pop
xlat
mov
sub
add
pop
fst
dec
xor
call
inc
or
jg
call
adc
fnsave
nop
mov
and
cmp
adc
xchg
imul
out
pop
add
inc
jbe
sbb
int3
jns
lock
push
clc
dec
out
into
lahf
(bad)
repnz
inc
or
ss
xchg
xchg
loop
cmp
sub
push
leave
cwde
pop
pop
stos
call
pop
dec
sahf
dec
dec
in
inc
lods
movs
hlt
cld
scas
pop
jns
imul
ret
dec
je
ins
ins
sub
ins
xchg
addr16
clc
sub
cmp
ror
fsub
fs
(bad)
mov
cdq
inc
pop
or
out
and
(bad)
call
imul
je
iret
adc
inc
idiv
jno
xor
aaa
xor
pop
arpl
aaa
mov
test
mov
aas
pop
mov
int3
lock
or
inc
push
cmp
pushf
faddp
mov
pop
scas
shr
mov
pushf
inc
sbb
rcr
push
sub
xor
movs
mov
pop
das
sub
sub
push
scas
mul
fnsave
mov
cwde
test
movs
lods
cdq
int
(bad)
js
jp
fnstcw
into
mov
or
and
pusha
dec
ret
popa
cdq
push
dec
mov
cld
or
int3
dec
call
pop
dec
fnstsw
imul
pop
fisttp
mov
push
sub
pop
jns
and
shl
retf
dec
xchg
sbb
clc
dec
mov
dec
dec
hlt
test
aam
dec
hlt
mov
add
bound
and
pop
hlt
jnp
outs
ins
repz
sbb
push
ds
aas
in
(bad)
fisttp
jb
ficom
sub
je
sti
jns
sbb
dec
sub
sub
test
xor
lea
js
push
mov
(bad)
jp
adc
mov
inc
mov
aas
mov
jne
mov
jmp
lods
push
sbb
outs
push
sub
mov
mov
mov
ja
inc
xor
div
and
xor
jmp
fsqrt
addr16
test
aas
pop
std
pop
retf
std
in
ss
xor
repnz
push
aad
and
pop
in
iret
sbb
xchg
xchg
ja
arpl
jle
rol
cs
pop
into
push
or
cwde
inc
cmp
js
sbb
adc
aam
out
xchg
jbe
xor
loop
and
push
cmp
xor
adc
movs
call
adc
(bad)
mov
(bad)
fadd
lods
lahf
dec
jle
icebp
or
jnp
adc
cmp
movs
push
jmp
repnz
mov
xor
xor
in
jb
xchg
jmp
push
aaa
rol
jns
jns
jmp
jp
outs
int3
add
sbb
jb
ins
fcmovnbe
(bad)
mov
out
int3
and
mov
das
shl
into
jle
and
dec
or
pop
cmp
cmp
xor
(bad)
xchg
pop
jae
mov
add
test
push
mov
sub
sub
es
adc
pop
xor
cdq
push
popa
mov
xchg
jl
mov
fwait
and
push
test
xor
outs
cmp
xor
retf
jecxz
push
icebp
and
inc
cmp
lods
out
nop
jns
dec
cmp
mov
ja
pop
mov
sbb
aas
mov
repnz
push
sub
in
add
aad
add
sbb
or
rcr
cdq
mov
scas
push
mov
ret
cld
test
ucomiss
int
inc
mov
mov
jle
and
data16
out
jp
mov
dec
mov
mov
lds
shl
iret
fscale
dec
js
rol
and
xor
popa
cmp
inc
xchg
dec
ret
in
or
add
(bad)
into
ins
dec
(bad)
cmps
clc
inc
pop
neg
sub
adc
add
(bad)
mov
imul
clc
pop
in
bound
adc
sub
ins
ret
mov
dec
les
fmul
xchg
in
jle
sar
leave
jp
stos
or
push
(bad)
pop
sub
inc
push
rcr
xor
aas
rol
jo
and
enter
mov
push
(bad)
jmp
inc
int
data16
cmc
daa
out
mov
lods
and
movs
push
adc
mov
in
pop
std
xchg
add
sub
mov
shl
pop
(bad)
out
dec
cmps
mov
inc
push
dec
iret
sbb
xchg
xor
sbb
mov
rcl
mov
dec
aam
push
push
mov
mov
pop
test
pop
movs
xchg
ins
adc
fcmovu
mov
pop
or
(bad)
stc
xchg
daa
push
jo
imul
mov
fnsave
ins
test
mov
mov
loop
out
aaa
popf
popa
shl
push
cdq
xchg
test
lea
shl
(bad)
aam
dec
mov
imul
je
mov
imul
das
pop
sbb
jno
lock
inc
cmp
das
es
in
sub
shl
iret
xor
clc
pop
cmp
push
jo
or
xor
pop
sbb
mov
add
sub
and
(bad)
retf
pushf
add
jb
in
sbb
dec
cdq
add
push
pop
xor
test
nop
retf
pop
inc
xchg
in
mov
xchg
cli
xor
imul
lea
mov
adc
mov
lahf
pop
ss
(bad)
jl
pop
adc
sbb
stos
daa
and
mov
dec
not
pop
xlat
jg
jmp
mul
or
test
jge
pop
fdivr
add
mov
adc
mov
idiv
dec
and
add
mov
out
jl
pop
xor
sbb
ret
cmps
pop
ins
mov
push
dec
fisubr
and
(bad)
push
lds
jbe
push
dec
jae
inc
inc
pop
in
add
out
shl
test
js
gs
in
cmc
call
mov
sub
mov
pop
adc
jp
mov
or
std
stos
add
adc
icebp
adc
addr16
out
mov
iret
scas
les
xchg
adc
pop
and
jbe
push
movs
(bad)
jg
int
and
psubq
cs
jo
js
cmps
jg
(bad)
adc
imul
mov
fist
mov
clc
xor
dec
fisub
xor
add
jb
xor
mov
fcmovnb
ret
or
popa
call
(bad)
(bad)
mov
int3
fs
in
pusha
fmul
and
arpl
cmp
mov
jle
stc
and
xor
cmps
imul
test
cmp
gs
inc
fsub
mov
push
inc
cld
out
jno
push
add
push
mov
cmp
dec
cmp
xlat
out
pop
orps
jg
inc
inc
pop
das
jno
mov
imul
test
fst
and
nop
and
jne
cs
sub
outs
pop
mov
daa
mov
mov
in
(bad)
je
push
out
fld
js
mov
or
fcomp
pop
ret
sub
or
or
mov
xor
push
fnstcw
aad
pop
into
iret
and
sti
push
call
sbb
add
out
out
mov
pop
clc
aas
aaa
inc
jg
aad
scas
jl
adc
arpl
mov
add
movs
into
call
cmp
in
outs
mov
mov
push
pop
movs
adc
rcr
std
dec
cmp
test
sbb
cmp
mov
sbb
movs
mov
popa
mov
or
cmp
and
popa
mov
inc
ret
in
mov
fwait
mov
push
sbb
repz
ret
mov
sti
movs
pop
xchg
adc
pop
or
data16
jge
retf
sbb
mov
sub
xor
xchg
mov
and
sbb
mov
push
sbb
cwde
ret
xchg
sbb
sub
ja
(bad)
mov
cmp
loope
mov
call
xor
xor
cmp
loope
repz
and
inc
dec
sub
pop
std
lods
pop
aad
or
dec
imul
push
add
dec
cmp
or
push
dec
data16
mov
lss
xor
add
add
jae
push
jbe
repz
dec
inc
cmc
fidivr
lods
inc
int
cmps
xchg
jb
aaa
test
cld
add
test
popa
enter
or
push
mov
jmp
sub
cs
out
in
shl
xchg
cli
ret
(bad)
loope
push
xchg
ficom
leave
nop
imul
es
pop
inc
rcl
(bad)
cs
shl
adc
in
and
lea
jmp
stos
cmp
es
cmp
mov
jae
aas
xchg
push
je
pop
xor
xlat
stos
add
scas
fsubr
imul
sub
cmc
clc
call
jne
mov
dec
lea
lahf
pop
addr16
xor
out
les
push
das
jae
mov
icebp
(bad)
xchg
sub
push
add
dec
std
jbe
int
call
int
test
call
in
int
sub
push
jns
out
and
mov
mov
movs
push
nop
mov
rcl
retf
je
and
pop
bound
pop
jno
(bad)
repnz
mov
ja
jo
shl
pusha
pop
js
add
xor
jmp
mov
addr16
dec
sub
movs
cld
dec
ja
sub
lahf
add
outs
pop
and
push
add
ds
xchg
pop
(bad)
enter
in
dec
pop
sar
pop
out
(bad)
lods
xchg
mov
sub
pop
push
mov
xchg
xchg
int
adc
div
cmp
fmul
clc
(bad)
push
xlat
mov
retf
and
sahf
sti
push
jmp
xchg
pop
xchg
aam
push
or
cs
cli
out
stos
xchg
pushf
xor
mov
xor
add
push
cmp
into
xchg
aas
clc
dec
or
rcl
mov
push
xchg
dec
push
mov
jl
mov
jmp
add
pop
push
in
pop
test
add
jmp
imul
add
add
outs
(bad)
call
pop
pop
int
(bad)
fild
xchg
mov
pusha
ds
test
cmp
cmp
scas
pop
(bad)
int
push
jne
icebp
sub
jnp
push
fst
add
cmp
push
mov
adc
fmulp
scas
sub
arpl
xor
pop
out
(bad)
(bad)
dec
jle
fdivr
out
pusha
dec
push
cmps
fnstenv
and
repnz
out
cmp
cmp
lods
push
mov
sub
push
pop
sysret
inc
stos
inc
inc
and
aas
mov
orps
jno
int
mov
sbb
je
or
mov
xchg
sti
mov
sub
shr
aam
pop
gs
inc
cdq
enter
jecxz
jb
mov
xor
jg
dec
ins
inc
add
cli
sub
cmps
inc
repz
in
in
inc
xchg
imul
fisub
fcom
shl
shl
mov
out
cmp
or
cmp
sbb
dec
sub
ror
sub
cli
aad
xor
ret
rcl
dec
pop
mov
xchg
fninit
dec
les
pop
scas
cld
outs
aam
mov
stc
pop
(bad)
sti
mov
gs
dec
hlt
pop
add
nop
cmp
hlt
mov
sbb
shl
inc
icebp
jno
push
movs
leave
(bad)
and
pop
movs
aam
add
cmp
adc
sub
add
out
add
mov
or
inc
sbb
sbb
das
inc
dec
cmc
ror
push
ins
mov
adc
dec
or
pop
inc
cmp
(bad)
mov
mov
mov
cmp
mov
int3
cwde
adc
pop
add
aad
mov
sbb
mov
jge
mov
sbb
and
sub
jle
and
sbb
popa
mov
and
cmp
test
xor
repnz
jge
sub
mov
jle
imul
int
and
dec
cmp
inc
pushf
xchg
jnp
out
mov
push
xlat
mov
je
in
cld
adc
std
sub
jecxz
popf
ja
les
sbb
jmp
push
mov
fsubrp
arpl
jnp
movs
xchg
hlt
ror
loop
mov
mov
in
in
mov
mov
dec
call
sub
scas
repz
cmc
fisub
pop
mov
scas
mov
xchg
dec
hlt
aas
clc
jae
jge
mov
mov
inc
mov
pop
(bad)
cmp
std
cmp
scas
sbb
gs
aad
inc
int3
outs
dec
lods
xor
or
cld
shl
fwait
outs
pop
rol
inc
mov
or
add
sbb
mov
out
ins
jbe
popf
pop
xor
push
mov
pop
push
leave
in
cs
fsub
jmp
test
mov
repz
das
dec
mov
stos
lds
lahf
sahf
dec
cs
scas
pop
inc
fwait
movs
mov
push
sub
cmc
xchg
mov
loop
jae
sar
jmp
jmp
int3
or
daa
fs
cli
adc
cmps
adc
jno
adc
fwait
bnd
inc
jge
push
mov
lea
movs
leave
test
pop
lods
add
sub
repz
adc
mov
inc
leave
jecxz
cmps
mov
imul
cmp
cmp
out
mov
test
stos
ja
(bad)
mov
es
push
sub
mov
xor
add
and
pop
push
call
test
lods
pop
or
dec
add
sub
outs
inc
sub
sub
rcl
and
mov
addr16
mov
(bad)
ins
enter
and
int
repnz
and
xchg
jp
(bad)
xchg
test
adc
in
(bad)
fadd
outs
fst
in
push
sbb
nop
mov
test
int3
dec
mov
dec
cmp
movs
retf
mov
adc
xor
jle
cmp
test
sub
jno
mov
std
mov
repnz
cli
ins
rcr
inc
int3
cmp
int
sub
dec
mov
inc
and
call
jecxz
cmp
lds
adc
mov
dec
xlat
push
cmp
jnp
(bad)
xlat
into
and
das
outs
cmp
mov
mov
std
cmp
sub
cmp
dec
add
(bad)
mov
inc
loop
nop
je
aam
push
jl
in
xor
push
pop
int
imul
push
jle
hlt
icebp
pop
sbb
out
cmps
mov
sbb
sub
inc
sar
add
mov
add
add
pop
fbstp
mov
fisubr
xchg
xchg
xor
or
fcmovnu
clc
lock
add
push
icebp
jge
pop
outs
rcr
sub
inc
jo
call
inc
lea
sub
push
fidivr
pop
ret
mov
jg
and
lock
and
xor
sbb
jo
or
jl
ret
jp
(bad)
das
inc
mov
xchg
mov
push
cmp
cmp
pop
mov
xchg
fbld
popa
rcr
adc
mov
push
dec
add
rcr
(bad)
lahf
dec
es
fiadd
or
lock
sbb
leave
add
call
jl
mov
ja
jb
xchg
rol
xlat
adc
out
dec
test
adc
test
rol
sti
xchg
cli
pop
add
dec
mov
outs
aad
(bad)
and
out
std
dec
cmp
xlat
adc
scas
cmp
add
cld
inc
jl
xchg
xchg
imul
xchg
loopne
aas
pop
jl
jl
shr
je
lds
loop
push
iret
imul
push
xor
or
dec
sub
push
mov
xor
or
adc
(bad)
iret
cmc
inc
mov
dec
jne
(bad)
int
js
push
mov
jae
cmp
mov
bnd
aad
xor
(bad)
push
mov
push
mov
daa
js
cld
sub
sbb
xor
addr16
push
and
mov
dec
push
jl
cmps
cld
mov
leave
pop
in
fsubr
in
xchg
pop
popa
addr16
dec
sbb
ror
mov
add
sub
sbb
dec
pop
retf
stos
(bad)
out
push
add
daa
out
push
mov
and
push
imul
mov
mov
sbb
and
lea
pop
jb
mov
mov
dec
jg
test
into
cmp
(bad)
cmp
movs
jae
lahf
mov
jns
push
xchg
or
mov
mov
add
das
std
scas
out
out
and
lds
xchg
dec
cli
jl
jl
mov
mov
adc
inc
jnp
sbb
sbb
cmps
stos
(bad)
sub
lea
xor
xor
daa
mov
fiadd
mov
fcmove
push
repnz
or
in
or
repnz
push
ja
popf
std
mov
in
rcl
mov
rol
pop
aam
and
icebp
inc
popa
sbb
pop
scas
or
jecxz
outs
cwde
xor
xor
popf
loope
push
out
popa
and
mov
ss
cmp
rol
push
aam
shl
in
std
ja
push
test
addr16
mov
push
adc
hlt
ror
mov
mov
mov
test
ins
mov
add
adc
xor
dec
mov
adc
sub
(bad)
loopne
jmp
jecxz
mov
adc
add
popa
fs
push
loop
mov
cmp
gs
sbb
stc
out
popa
push
cld
mov
lock
dec
mov
cmp
out
out
cmps
rcr
xor
shl
sub
(bad)
repnz
inc
pop
test
dec
push
fistp
popf
call
xor
xchg
push
scas
mov
mov
ja
dec
sti
mov
das
xor
jl
lahf
mov
inc
imul
push
(bad)
ja
ss
push
pushf
in
sbb
mov
cs
div
sub
mov
movs
jae
call
inc
je
and
popf
fwait
hlt
ds
retf
xchg
arpl
mov
pop
cwde
test
cmps
into
out
retf
clc
push
cmc
ins
clc
push
xchg
pop
jns
sub
jmp
cld
mov
in
mov
test
clc
push
cwde
std
out
add
imul
inc
enter
into
pop
hlt
pop
call
(bad)
jecxz
add
sub
outs
adc
outs
pop
clc
mov
(bad)
ficomp
or
sbb
sub
hlt
aam
adc
xor
jp
aam
push
pop
pop
(bad)
mov
sub
xor
jbe
arpl
push
or
push
sbb
das
and
pop
fistp
sbb
es
mov
xlat
cli
loop
inc
pushf
gs
sbb
dec
pop
xchg
inc
lods
mov
aas
inc
nop
sub
stos
push
gs
stos
movs
and
cmp
mov
das
mov
dec
mov
(bad)
leave
dec
sub
pop
sbb
popf
das
hlt
mov
cs
cmp
stos
xlat
inc
cmp
or
cmp
sbb
ds
test
cmp
xchg
data16
movs
pop
mov
call
sbb
add
sahf
shr
mov
pop
dec
scas
js
out
fcmove
sbb
mov
shr
cwde
ror
pop
fwait
cmp
xchg
mov
mov
inc
sub
inc
js
push
add
fdivr
(bad)
adc
mov
jb
scas
arpl
stos
fsub
repnz
ret
jp
mov
fcmovnb
xchg
jmp
cmp
mov
daa
data16
inc
rol
mov
ds
jmp
xor
or
sub
push
mov
mov
jl
push
or
fmul
enter
and
pop
push
push
xchg
scas
mov
mov
jne
push
jge
dec
and
sub
in
jno
loopne
pop
pop
or
adc
ins
cmp
int3
and
aad
fidivr
mov
cmp
xchg
ret
lock
cmc
or
inc
ja
adc
push
cli
sahf
popa
rcr
pop
sbb
fld
adc
pushf
inc
and
int3
ss
dec
cmp
fidivr
movs
shl
adc
inc
jno
mov
adc
std
std
inc
dec
mov
or
loop
or
ins
test
xchg
dec
sub
loope
mov
in
inc
inc
and
dec
imul
mov
lds
shl
push
in
test
jno
in
lds
ins
adc
push
jbe
fs
or
test
fwait
sbb
mov
pop
movs
pop
arpl
cmps
ret
ins
and
push
scas
xor
or
xlat
mov
int
mov
jle
out
es
test
adc
sahf
push
push
shl
push
xchg
xchg
cmc
ins
mov
das
or
push
adc
add
retf
mul
scas
push
push
push
xchg
cmp
xlat
xlat
fcom
pop
mov
loope
rcl
dec
ret
fistp
jnp
int
mov
pop
add
(bad)
mov
aas
jge
jge
and
retf
cmp
lea
(bad)
add
jle
(bad)
icebp
xchg
jmp
mov
sbb
add
jnp
ret
pushf
xchg
pop
jmp
cmp
stos
fidivr
scas
xchg
or
dec
mov
jle
push
push
xchg
jge
add
and
aaa
loope
ficomp
pop
push
jno
dec
mov
adc
mov
or
push
pop
add
repz
shr
icebp
dec
push
xor
cmp
das
shl
popf
data16
dec
aad
pop
pop
adc
movs
dec
dec
mov
arpl
fnstenv
aas
outs
xchg
call
push
mov
and
aad
mov
sar
sub
sbb
clc
mov
idiv
xchg
push
lock
into
hlt
iret
cmp
mov
ror
jmp
cmp
lods
push
mov
arpl
push
jge
push
popa
popa
pop
sub
push
js
add
and
jmp
jno
ret
fild
mov
sbb
cmp
xchg
repnz
and
or
push
and
pushf
mov
sbb
fs
pop
xor
add
daa
cwde
lds
cdq
pusha
scas
lahf
repz
mov
cmp
in
sbb
hlt
test
mov
xor
jno
cmp
mov
add
(bad)
jnp
push
mov
mov
(bad)
ins
mov
jmp
mov
mov
bound
jae
and
mov
jmp
pop
push
sbb
sti
mov
and
loop
xor
lahf
daa
dec
inc
ins
adc
ins
mov
out
mov
adc
or
or
stos
pop
imul
fs
and
icebp
or
mov
push
or
into
sub
and
gs
sub
pop
pop
inc
dec
stos
in
adc
leave
add
inc
cmp
jg
mov
loope
or
cmp
cmps
jmp
call
jo
jmp
enter
sbb
adc
sbb
aam
jnp
fild
ins
jo
xor
jb
or
lods
pop
and
cmp
dec
outs
cmps
movs
out
jo
ins
out
int
or
jge
jle
scas
stc
jmp
push
jl
mov
mov
inc
scas
inc
push
cld
pusha
jb
mov
popf
inc
ret
jecxz
int
dec
(bad)
dec
mov
push
sub
mov
fst
out
xchg
cmps
mov
sbb
xchg
push
adc
mov
inc
aam
mov
mov
dec
jo
popa
xchg
xor
pop
arpl
mov
lods
pop
fstp
data16
ss
call
push
pop
(bad)
inc
mov
xchg
jnp
mov
cmps
adc
ror
cmp
mov
repz
sar
mov
cdq
xor
mov
loop
cmp
jbe
push
dec
inc
adc
mov
dec
imul
inc
jb
mov
ja
inc
les
(bad)
das
in
mov
gs
jno
xchg
fidiv
xor
and
movs
sub
and
aam
lods
pop
imul
out
repz
mov
and
mov
ret
rcl
cmp
pop
pop
mov
mov
push
cmps
sbb
xor
pop
mov
(bad)
or
sub
into
leave
xor
fwait
jmp
hlt
div
sbb
retf
jo
push
push
add
sbb
adc
jecxz
dec
arpl
popf
and
not
int3
cmp
xor
jmp
mov
shl
xchg
jmp
test
xlat
mov
add
ror
mov
int
mov
rcr
adc
or
gs
mov
lea
loope
aam
push
js
fild
push
sub
mov
es
fs
xor
test
adc
int3
xchg
push
push
mov
std
push
fistp
lds
push
dec
movs
stc
es
jns
mov
mov
lock
dec
call
pop
cld
push
pushf
jo
(bad)
aam
add
leave
adc
jg
push
js
inc
pop
ret
adc
jo
push
jno
mov
daa
out
stc
jp
shl
out
aad
fnstenv
xor
jbe
loop
jl
in
std
adc
dec
sub
add
stos
jb
fmul
mov
stos
xchg
dec
add
adc
loopne
std
or
jl
imul
push
xlat
xchg
and
pop
lds
outs
push
mov
iret
cmovns
sbb
in
repnz
in
jl
inc
inc
pop
sub
gs
mov
repnz
inc
icebp
and
test
out
cmp
mov
sbb
jne
mov
fsub
out
mov
push
pop
inc
out
add
dec
loope
js
add
clc
out
push
rcr
push
test
fwait
cmp
push
lods
jg
nop
aam
mov
imul
pop
ja
inc
mov
xor
push
sbb
push
popa
(bad)
mov
sbb
call
add
mov
lds
mov
and
mov
xchg
xor
adc
or
add
lock
xchg
js
sub
xor
in
(bad)
std
lods
xor
add
sub
push
mov
test
jnp
mov
mov
std
cwde
test
and
push
or
data16
dec
adc
lea
jns
mov
mov
mov
test
and
inc
jae
inc
sbb
push
push
iret
aaa
mov
int3
out
es
dec
xor
mov
mov
rsqrtps
pop
cmc
inc
xchg
mov
(bad)
lds
scas
inc
mov
out
cmp
inc
in
gs
dec
pop
clc
jp
iret
ins
xor
add
(bad)
fldcw
jp
ja
sahf
les
adc
cmps
and
es
mov
lea
(bad)
mov
fbld
xor
lds
push
adc
xor
cwde
fisttp
ins
mov
(bad)
es
pop
dec
loope
cld
std
xor
repnz
sub
and
xchg
dec
js
loopne
shl
clc
xchg
(bad)
ror
mov
push
dec
push
daa
sar
adc
int3
aad
jle
adc
dec
lahf
pusha
popf
retf
dec
popa
add
mov
call
fstp
ret
dec
push
mov
js
xor
ror
dec
cdq
scas
push
mov
xor
loopne
repz
(bad)
ficom
pop
(bad)
inc
sbb
test
push
sti
popa
dec
sahf
jecxz
inc
popf
loop
and
cld
push
or
outs
outs
inc
push
xor
xor
rol
sub
inc
cmp
pop
cmp
xchg
mov
push
xor
stos
movs
nop
and
mov
adc
enter
cmp
or
dec
test
(bad)
inc
mov
sti
xor
jns
loope
push
or
(bad)
lds
cmp
xor
hlt
and
jae
loope
xor
sbb
mov
shr
inc
aad
push
rcr
cmp
push
movs
cmp
(bad)
es
je
cmp
adc
mov
mov
adc
mov
mov
mov
lea
sbb
pop
loope
push
hlt
lock
outs
leave
add
popf
jbe
mov
adc
jle
popa
mov
pushf
inc
jle
and
pop
in
in
idiv
mov
jo
mov
xor
push
and
test
stos
popf
adc
xchg
jge
mov
xchg
hlt
stos
out
jl
cld
mov
push
jmp
test
adc
or
cld
in
test
mov
dec
call
adc
adc
xchg
retf
sbb
gs
adc
out
cmp
push
push
pushf
es
mov
jb
pusha
aad
shl
mov
push
repnz
mov
sar
out
sub
mov
mov
inc
push
or
dec
xchg
arpl
pop
mov
mov
mov
sbb
jmp
fdiv
call
ins
stos
xor
popf
dec
mov
test
mov
inc
popf
addr16
ss
mov
jle
add
outs
imul
(bad)
mov
adc
fbld
aam
push
and
cdq
and
fdivp
int3
ja
push
data16
shl
pop
ror
adc
enter
enter
and
out
into
cli
mov
aaa
call
(bad)
iret
es
push
sahf
jge
dec
stos
mov
inc
ror
mov
push
ret
aaa
sti
call
ds
outs
into
test
sar
test
cmp
sbb
pop
stos
in
dec
fwait
retf
popa
(bad)
sbb
and
xchg
aad
dec
stos
inc
push
sub
in
scas
sbb
sub
call
mov
ja
adc
sub
mov
mov
in
out
xor
mov
arpl
sbb
jae
cli
xor
(bad)
dec
sbb
dec
xor
cmp
das
cs
jo
and
pusha
mov
(bad)
ror
dec
or
xor
cmp
cmc
ins
jae
fnsave
dec
pop
int3
retf
xor
mov
retf
mov
inc
arpl
je
ds
add
push
aad
dec
scas
movsx
(bad)
add
mov
cmp
add
stos
pop
inc
clc
out
outs
rcr
push
or
es
aas
sbb
ret
jbe
mov
jl
cmp
sbb
out
mov
ins
sub
js
icebp
mov
sti
add
cmps
ret
aad
add
or
inc
cmp
fdiv
int3
mov
pushf
mov
sub
test
sub
test
push
enter
or
dec
fldcw
fdivrp
jecxz
sti
ror
call
cs
jae
xlat
inc
addr16
add
add
popa
jnp
(bad)
in
add
jge
or
adc
adc
jns
sbb
mov
into
daa
mov
ins
lahf
or
and
test
mov
lahf
adc
rcr
cli
shl
jno
push
popa
jmp
ja
out
pop
lea
mov
scas
pop
jmp
jbe
ret
inc
add
mov
mov
sar
and
xor
outs
mov
add
jmp
pushf
dec
fist
pop
cmps
test
jae
in
inc
sbb
push
adc
and
fwait
lahf
sub
inc
jmp
in
push
inc
dec
addr16
add
int3
ss
test
jg
push
jecxz
scas
dec
or
jb
cmp
cli
fadd
mov
aas
movs
enter
dec
aaa
mov
(bad)
pop
rcl
rcr
adc
dec
xchg
inc
sbb
pusha
xor
jl
pop
xor
jns
mov
scas
loope
test
dec
out
iret
xchg
leave
jns
sub
test
fisub
ror
(bad)
arpl
cmp
jb
add
adc
mov
lock
rcl
push
retf
add
cmc
xchg
xchg
xchg
stc
sbb
out
sbb
loop
mov
enter
lock
fild
mov
pop
cmp
pusha
pop
xchg
push
fucom
pop
or
fcmove
movs
sub
add
aaa
pop
cs
jns
push
jae
xlat
out
push
mov
pop
jg
ret
in
pop
fild
or
add
mov
push
mov
inc
je
jmp
jbe
ret
cmp
int3
sti
pop
repz
out
mov
test
cdq
dec
pop
and
pop
rcr
sahf
mov
sar
mov
adc
into
stc
cmps
xor
mov
nop
xor
mov
mov
mov
test
dec
test
mov
or
int
ins
push
add
lods
mov
test
in
lea
sahf
xor
xchg
hlt
and
popf
push
pop
mov
adc
fimul
sbb
fdivr
inc
sbb
sahf
or
call
jg
mov
int
enter
push
cs
pop
mov
push
cmps
pusha
or
mov
data16
push
mov
mov
inc
jmp
push
push
fdiv
mov
jbe
je
pop
pop
xchg
int3
stos
addr16
std
pop
aaa
pop
pop
xor
dec
in
cmp
mov
sbb
cmps
dec
mov
in
jg
jno
adc
pop
mov
pop
clc
retf
xchg
xor
or
push
daa
jecxz
and
mov
xchg
jmp
test
int
dec
xor
xor
xlat
fisubr
je
retf
not
fsub
aaa
mov
sti
mov
push
in
cwde
mov
ins
ror
fld
and
and
popf
std
cmp
sbb
neg
mov
std
xchg
lods
push
cwde
jmp
data16
lahf
sub
dec
loopne
rcr
iret
fst
lods
xchg
mov
xor
(bad)
adc
pop
sti
inc
ret
adc
sub
or
fsubr
pop
pushf
add
sub
push
stos
imul
fwait
xchg
daa
and
aam
jne
xor
add
adc
dec
imul
xor
push
aas
ret
add
test
cmps
aaa
add
inc
mov
in
out
sbb
inc
add
enter
mov
jne
jnp
mov
popf
pop
ds
mov
or
jecxz
aam
xchg
inc
sbb
push
int3
push
retf
ficomp
and
mov
cmc
push
sub
add
bound
jnp
outs
ja
movs
test
push
lock
and
lods
je
push
mov
in
xchg
icebp
sbb
daa
cmp
test
mov
adc
ss
mov
push
shl
arpl
push
nop
cmc
lock
into
scas
retf
mov
arpl
inc
test
outs
into
mov
clc
jno
es
or
pop
jne
(bad)
mov
mov
shld
sub
retf
js
cmps
and
mov
in
dec
mov
adc
cmp
out
sbb
add
xor
add
mov
mov
fstp
arpl
mov
mov
jg
xor
adc
in
movs
xor
sub
and
(bad)
and
inc
shl
outs
scas
fist
loopne
or
ins
and
adc
outs
jmp
mov
out
jae
stos
sub
cmp
add
mov
mov
ds
push
mov
xchg
mov
retf
pushf
inc
sbb
mov
pusha
shl
shl
dec
mov
mov
test
lods
add
mov
mov
cwde
mov
adc
dec
scas
push
xchg
mov
inc
push
call
sbb
test
sbb
rcr
mov
adc
aam
cli
jmp
ror
shl
inc
pop
clc
ret
inc
push
sbb
call
adc
daa
cs
jp
and
dec
sub
mov
mov
pop
adc
jl
mov
ds
add
inc
xchg
or
pop
xor
shl
sti
fld
movs
mov
pop
mov
imul
push
ds
popa
mov
mov
jecxz
push
retf
adc
mov
xchg
inc
xchg
lods
jo
in
push
inc
jne
jo
sub
popa
mov
adc
outs
arpl
leave
aaa
lock
inc
in
ret
imul
and
gs
cli
inc
retf
fisttp
frstor
pop
repz
mov
inc
mov
xchg
test
sbb
ins
sbb
call
jg
scas
pusha
stos
sub
iret
out
(bad)
sub
jae
xchg
fistp
and
(bad)
mov
stos
aas
das
add
popf
arpl
test
lods
pop
ja
fwait
sub
sub
inc
jnp
mov
fscale
ins
icebp
mov
mov
(bad)
clc
(bad)
out
and
lock
adc
push
imul
sub
retf
sbb
hlt
cmp
or
inc
dec
adc
xor
cdq
loope
(bad)
pop
pop
xchg
sub
test
add
jne
sub
mov
div
mov
push
movs
inc
xchg
push
daa
sbb
lahf
nop
sbb
and
sbb
fbstp
test
cld
ds
lock
bnd
into
mov
ficom
test
pop
daa
jecxz
dec
sub
jp
loope
lods
jbe
cmp
sub
ins
stc
mov
cli
cvtdq2ps
or
jecxz
mov
mov
pop
mov
add
push
outs
sti
fld
sub
inc
and
adc
or
and
fimul
inc
ins
or
mov
int3
sub
and
adc
adc
sub
call
(bad)
jb
lock
imul
xor
sub
add
push
sub
push
shl
data16
int
sbb
push
aas
mov
clc
xchg
pop
pop
sti
cmp
fistp
or
add
dec
(bad)
sbb
(bad)
and
push
scas
and
bound
dec
sub
ins
mov
mov
xor
dec
xchg
or
push
dec
dec
pop
xchg
and
rcl
hlt
fwait
add
or
push
nop
dec
lock
cmps
pushf
sub
stos
fwait
rcr
(bad)
in
mov
jae
clc
ja
cs
push
mov
ja
push
loop
sub
adc
call
inc
pop
xchg
es
inc
dec
push
or
and
push
pop
push
ins
sub
fs
dec
iret
pop
jo
inc
fstp
neg
out
sub
stos
shr
xor
js
ret
fbld
xchg
loop
pop
pop
sbb
jae
mov
(bad)
xor
shr
cwde
jnp
jge
mov
fst
test
fidiv
adc
(bad)
xor
pop
fsubr
std
xor
stos
leave
mov
jne
popf
cmc
jmp
and
xchg
bound
je
call
inc
xchg
out
mov
inc
mov
sub
lods
cvttps2pi
es
mul
cwde
xor
mov
loop
push
inc
nop
sbb
sti
inc
or
pop
xchg
jno
(bad)
inc
stos
dec
fiadd
adc
or
xlat
sub
adc
icebp
(bad)
cld
pop
data16
pop
jge
retf
xor
cmps
jmp
inc
call
cmp
push
inc
pushf
sbb
loope
inc
xor
retf
and
jne
pusha
dec
lds
rcl
add
sbb
dec
out
push
cld
in
mov
ficom
call
xchg
mov
and
mov
mov
jns
or
mov
sub
mov
add
ret
fadd
stos
adc
icebp
fst
adc
int
inc
adc
or
adc
and
mov
jl
xchg
out
jl
(bad)
out
pop
ins
mov
mov
ret
inc
in
sahf
imul
into
je
sub
xchg
test
bound
aaa
fchs
xor
inc
fnstenv
jae
add
inc
jmp
daa
mov
lahf
addr16
stos
and
shl
adc
in
inc
add
dec
repnz
(bad)
fs
cmp
lock
stos
xor
(bad)
gs
mov
lock
or
jle
xchg
xor
or
jmp
fwait
cli
idiv
mov
fimul
retf
push
addr16
sub
sub
and
hlt
mov
pop
pop
ds
and
lods
adc
add
mov
mov
cmp
lods
fs
jno
push
retf
xchg
jae
mov
call
xorps
jecxz
les
fs
or
inc
rol
push
ds
push
push
and
into
mov
retf
push
out
pop
mov
and
push
pushf
add
push
int
aas
sahf
jg
xchg
sbb
sub
and
mov
outs
inc
loope
ds
(bad)
dec
add
cs
inc
call
adc
mov
cmp
xchg
sbb
mov
imul
add
clc
sbb
ins
cmp
push
pop
sbb
xor
imul
in
adc
inc
cmp
stos
dec
jp
mov
dec
fs
pop
loop
stc
jecxz
and
dec
fnstcw
and
inc
ret
cdq
sbb
mov
cmps
dec
inc
fidiv
cmps
add
add
dec
jp
aaa
outs
sbb
adc
cli
jno
mov
xchg
pop
inc
inc
ret
or
mov
or
jno
mov
mov
sub
and
das
(bad)
(bad)
adc
sub
out
fisubr
jae
adc
shl
xor
es
add
test
pusha
stos
outs
lea
arpl
cdq
inc
sub
retf
mov
push
dec
ss
leave
in
test
dec
out
popf
xchg
xchg
test
rcl
sbb
xor
fiadd
clc
mov
mov
fsubp
jnp
and
mov
test
inc
into
push
int
mov
adc
sub
in
mov
dec
pop
cmp
js
mov
cld
or
sub
and
out
lods
hlt
aad
pop
pushf
jmp
call
pop
loope
cmps
sub
adc
dec
in
push
sub
mov
push
and
pop
mov
fwait
mov
imul
sub
push
dec
shl
xchg
enter
pop
and
call
div
pop
push
adc
adc
in
lahf
pop
fimul
push
rcl
push
pop
dec
pop
add
mov
leave
ret
movs
and
push
outs
pop
sub
cld
out
jmp
or
fsubr
jg
test
sbb
lahf
sbb
inc
sub
jecxz
push
mov
pop
mov
lahf
mov
rol
cmp
jle
push
dec
int3
daa
inc
xchg
fld
inc
mov
sbb
mov
push
scas
aas
repz
retf
xlat
jecxz
dec
sbb
xor
retw
pushf
pop
mov
or
(bad)
cdq
popf
mov
dec
fsub
popa
outs
clc
pop
jno
rcl
(bad)
sub
sub
test
scas
jns
mov
ret
ret
movs
sub
fwait
inc
mov
push
ret
sub
out
imul
out
and
sbb
xchg
cmps
and
lods
jnp
jmp
ds
mov
lock
xchg
das
cmps
rcr
push
mov
pop
imul
lock
aad
not
pop
cmc
mov
imul
lock
retf
pop
ss
xchg
push
and
jbe
ins
loope
mov
fs
in
jb
or
adc
adc
mov
adc
daa
push
push
jmp
(bad)
ja
xchg
inc
cmp
mov
inc
or
popf
push
out
popa
adc
xchg
sbb
mov
and
mov
xor
push
movs
fbld
xchg
sbb
sbb
mov
pop
dec
data16
neg
retf
jo
(bad)
or
inc
dec
xchg
into
mov
ror
lds
or
xor
mov
xchg
or
int3
and
nop
imul
mov
push
aaa
mov
nop
or
test
xchg
mov
adc
xor
adc
call
cs
test
data16
inc
movs
jne
call
pop
test
test
ins
push
and
stos
cmp
out
clc
add
mov
or
lea
dec
sti
cmc
cmp
or
mov
sbb
into
mov
pop
lods
mov
jns
sar
scas
dec
repz
add
sub
ret
leave
pusha
loopne
stos
push
cld
shl
fsub
pop
and
mov
mov
int
jp
mov
repnz
es
xchg
mov
loopne
dec
push
sub
fprem
in
(bad)
stos
clc
adc
xor
aaa
mov
mov
pop
sub
test
ds
int
cli
mov
cmp
pop
popa
ror
adc
or
idiv
cli
jge
xchg
push
stos
test
call
(bad)
pop
in
add
ds
jl
dec
cdq
ss
inc
or
dec
ds
pushf
add
loope
in
in
mov
ins
push
mov
ins
jl
and
fild
pop
push
sub
xchg
jb
outs
retf
jo
aaa
scas
sub
mov
add
inc
fisttp
pop
aas
jmp
pop
test
xor
and
fwait
add
je
add
mov
pop
retf
push
pushf
xchg
dec
inc
push
sub
ja
jecxz
add
xor
dec
adc
cmp
imul
sbb
(bad)
cmp
xor
inc
push
push
lods
shr
aam
fisttp
popf
mov
je
mov
out
dec
scas
xchg
ficomp
(bad)
das
cli
ja
pop
xchg
ss
sahf
movs
or
and
mov
retf
jae
pop
cwde
fdivr
rdseed
mov
cs
js
jecxz
jb
mov
ror
icebp
mov
in
or
cld
lods
sti
push
push
imul
lock
add
inc
sbb
aas
hlt
retf
je
or
jp
loop
out
adc
mov
mov
loope
xchg
pop
sbb
loop
sar
mov
test
aad
or
(bad)
stos
stos
push
push
enter
pusha
mov
and
push
push
imul
test
shr
xchg
aad
adc
lds
fisubr
psraw
retf
push
sar
sar
pop
ret
mov
mov
call
out
sbb
cmp
jmp
icebp
mov
inc
push
test
out
push
sbb
loopne
inc
adc
fild
mov
mov
dec
in
vmovupd
dec
push
and
push
hlt
cmps
loope
addr16
fcom
sub
xchg
xor
(bad)
sbb
sti
mov
or
shl
sahf
outs
adc
jp
xchg
shl
xchg
mov
pop
shl
mov
arpl
sbb
cwde
jnp
fnsave
and
xchg
out
aad
test
sub
scas
push
rol
mov
xor
out
cdq
push
into
int
pop
pop
jne
ja
data16
xor
loopne
sub
fcomp
fwait
enter
or
sbb
icebp
mov
jo
sub
inc
push
scas
mov
mov
fcomp
das
in
rol
cmp
in
addr16
mov
cmps
cld
or
push
sbb
jae
loop
aam
pusha
pop
mov
movs
push
stos
sub
jne
jns
gs
jae
call
mov
dec
sbb
inc
not
out
sahf
mov
mov
add
mov
stos
xchg
jle
mov
mov
pop
test
out
sbb
mov
xor
push
leave
push
mov
dec
in
out
inc
xor
mov
add
leave
popf
scas
test
jmp
fisttp
xchg
mov
dec
sbb
push
dec
iret
push
nop
rcl
loopne
xchg
mov
arpl
and
mov
movs
pop
not
cmp
cmps
adc
pop
enter
adc
(bad)
rol
stc
call
mov
and
jno
xchg
call
hlt
mov
bound
aas
stc
aad
jecxz
aad
inc
dec
pop
adc
jns
fwait
jnp
cli
push
pop
test
xor
div
jae
aaa
cs
pop
push
shl
jmp
cmps
inc
test
hlt
mov
adc
push
out
cmps
mov
sti
xor
imul
outs
(bad)
das
xchg
(bad)
cmc
or
or
inc
shl
mov
inc
sbb
inc
je
jbe
mov
iret
push
sahf
sbb
lahf
adc
enter
cmc
popa
imul
sahf
xchg
in
imul
push
adc
(bad)
push
mov
icebp
test
xor
sbb
xlat
rcr
dec
dec
xor
sub
jmp
dec
test
push
mov
aaa
lds
jb
hlt
sub
out
pop
lds
in
xor
loope
sub
mov
xor
mov
adc
jg
mov
aad
das
mov
leave
mov
out
mov
scas
lods
jle
inc
or
retf
cmp
sub
shl
in
xor
mov
fistp
enter
xor
push
fiadd
jecxz
xor
test
xchg
cmps
inc
add
movs
call
lods
loopne
ins
push
inc
out
jmp
mov
jge
sub
test
das
dec
dec
in
push
mov
repnz
imul
fmul
(bad)
out
xor
shl
(bad)
fild
into
pop
lds
mov
pop
add
aam
aas
or
retf
mov
stos
jae
(bad)
jae
sub
jmp
cwde
and
xlat
outs
jle
cmp
mov
lods
and
mov
arpl
je
mov
xor
hlt
mov
mov
cli
imul
xchg
pushf
ds
push
scas
popf
retf
add
adc
dec
rcl
stos
int3
xchg
cmp
fisubr
jns
sar
pop
aaa
retf
ins
xlat
in
lahf
push
pop
sub
jnp
pop
aam
xchg
push
and
mov
movs
sub
dec
sbb
mov
pusha
push
jl
mov
fsubrp
icebp
enter
ror
out
mov
dec
not
xchg
test
js
jmp
adc
loope
call
lahf
or
pop
out
jmp
dec
pop
add
idiv
repz
fdiv
xchg
movs
and
cli
adc
jae
xchg
aad
xchg
pushf
cld
xchg
mov
xchg
add
sbb
dec
push
fldenv
ror
daa
adc
or
mov
bound
not
push
inc
pop
adc
aam
jb
sbb
mov
mov
cld
clc
inc
leave
mov
and
out
mov
out
and
inc
sbb
popf
test
movs
(bad)
add
pop
leave
jp
push
mov
dec
push
mov
dec
lods
jl
cmp
push
or
sub
mov
dec
xchg
jg
add
xor
pop
repnz
aas
pop
mov
jno
jmp
mov
xor
cmps
mov
add
xchg
daa
inc
add
cmps
(bad)
jo
add
xor
push
cmp
cmps
je
cmp
mov
sub
cs
inc
stos
stc
mov
call
pusha
push
pop
lock
mov
or
popa
shl
ins
mov
mov
stos
stc
xchg
cmps
addr16
sbb
jecxz
into
neg
lahf
jae
cmp
enter
movs
int
dec
xchg
inc
and
push
sub
and
xor
or
sub
mov
sub
call
lods
and
in
xor
fnstsw
nop
or
dec
adc
cmp
jae
mov
xchg
adc
mov
xor
inc
mov
movs
pop
call
mov
outs
pop
clc
stos
sub
test
sub
popf
mov
jns
lods
sar
lds
test
xor
retf
es
or
fdiv
cli
and
jne
mov
and
push
mov
inc
push
mov
mov
or
mov
shr
sbb
(bad)
int3
push
dec
shl
and
scas
in
cmps
cmp
ficom
dec
call
mov
and
fcom
loop
arpl
pop
rcr
sbb
mov
sub
and
cmp
add
in
xor
dec
xor
sub
mov
int3
jno
push
ds
sub
mov
out
sbb
and
scas
sahf
mov
das
neg
mov
arpl
ret
sar
jnp
push
inc
pushf
inc
xchg
stos
(bad)
cwde
mov
jecxz
xchg
(bad)
in
pop
sar
push
xlat
ins
adc
dec
dec
mov
pushf
pop
sub
sbb
mov
push
jne
xor
(bad)
mov
int3
movs
out
test
ins
xor
leave
cmp
push
mov
repz
jae
add
shr
ja
into
push
mov
pop
cmp
outs
mov
aas
mov
out
int
sti
dec
add
cmps
(bad)
nop
ja
ret
adc
test
idiv
outs
mov
adc
add
sbb
std
ficomp
pushf
xor
cli
push
ins
data16
push
push
cmp
add
popa
inc
ret
pcmpeqb
in
mov
xchg
push
mov
cmps
jmp
mov
ficom
push
mov
mov
or
lea
mov
sahf
xchg
pushf
xor
(bad)
mov
lods
lods
xchg
ficom
pushf
pop
and
or
adc
inc
into
cmp
add
call
cmp
jb
into
leave
lods
movs
add
test
inc
in
xor
push
add
loope
add
lds
xchg
jb
xchg
mov
lock
(bad)
pop
push
lahf
imul
(bad)
xchg
fidivr
imul
sub
lahf
sbb
std
pop
call
or
(bad)
adc
popf
inc
mov
cs
or
mov
mov
ret
pop
or
adc
mov
inc
movs
inc
fninit
push
mov
std
xor
mov
dec
xor
cmp
(bad)
cs
mov
popf
ret
push
dec
push
das
(bad)
out
inc
inc
aam
(bad)
retf
push
xchg
aad
addr16
and
(bad)
adc
jg
mov
stos
popf
dec
pop
idiv
sbb
cdq
gs
mov
jmp
lods
or
enter
xchg
xor
sub
out
fadd
jnp
call
jg
inc
xlat
in
cwde
jmp
aad
arpl
loop
(bad)
daa
fbld
inc
hlt
aaa
jle
repnz
and
test
and
retf
ins
repz
mov
xchg
lock
repz
dec
(bad)
shl
mov
in
fisub
dec
sahf
xlat
lods
pop
ror
es
(bad)
out
repz
std
push
clc
mul
test
lds
outs
and
out
cmp
or
jmp
xchg
jle
mov
xchg
int3
jge
pop
and
adc
ins
pusha
jne
dec
push
dec
addr16
or
jb
inc
lods
pop
fistp
fcmovbe
rcl
jle
fld
add
and
into
sub
psubd
push
inc
mov
sbb
sub
push
addr16
push
push
lds
fistp
call
outs
sahf
inc
push
dec
jge
aam
stc
(bad)
bound
std
scas
test
daa
stos
cs
retf
cmps
(bad)
mov
lds
call
mov
pop
popf
adc
pop
aas
shr
jp
jns
fs
sbb
jmp
mov
jle
xchg
mov
enter
leave
adc
sbb
push
sbb
push
and
xchg
xchg
xchg
inc
stos
(bad)
(bad)
aas
add
push
movs
jno
sbb
ret
jnp
invd
adc
sbb
push
push
shl
mov
or
pop
jno
ja
(bad)
cld
lds
out
arpl
dec
dec
adc
mov
out
xor
(bad)
retf
push
push
sub
out
enter
sbb
(bad)
xor
or
xchg
out
mov
and
iret
inc
aaa
push
mov
test
and
aam
inc
inc
mov
das
sahf
pop
in
xchg
lds
and
fsub
mov
fisttp
sbb
lods
imul
hlt
cmps
ja
xchg
mov
ds
and
inc
mov
lahf
aad
cmps
pop
in
adc
push
dec
mov
pop
lahf
xchg
js
pop
dec
imul
mov
mov
jle
dec
jle
arpl
fwait
(bad)
mov
shl
xlat
dec
dec
jg
int
mov
sub
adc
movs
mov
loope
sbb
xor
ror
xchg
nop
cmp
jbe
xchg
movs
or
popf
jg
xor
cmps
in
out
add
pop
xlat
pop
inc
xchg
push
out
in
sub
cdq
out
rcr
imul
or
test
xchg
iret
loop
scas
mov
sbb
out
pop
punpcklwd
pop
imul
(bad)
pop
xor
mov
push
stos
xor
mov
repz
lods
xor
(bad)
push
xchg
daa
cmc
aad
add
sahf
stc
cs
sbb
jne
sub
imul
inc
mov
and
adc
jne
nop
fcomp
icebp
add
mov
out
inc
dec
jne
and
sub
inc
sub
or
repz
mov
mov
inc
xchg
mov
fisubr
movs
jns
mov
jbe
inc
int3
(bad)
mov
xor
inc
xchg
inc
call
sub
cli
stos
add
(bad)
xlat
xchg
ins
jae
mov
xchg
cmps
xor
cmps
jb
xchg
nop
scas
xor
(bad)
cmp
add
add
cld
mul
inc
mov
add
dec
sbb
xor
mov
mov
or
and
jmp
loope
clc
jg
loope
mov
(bad)
scas
(bad)
ficom
push
xor
arpl
bound
inc
dec
std
mov
jnp
mov
gs
(bad)
call
lds
cld
add
jmp
ror
mov
and
add
fs
test
outs
mov
and
outs
jp
icebp
popf
dec
sbb
ins
test
add
ss
xchg
aad
xchg
mov
push
or
sbb
sti
hlt
jmp
xchg
push
(bad)
daa
sub
mov
push
cmp
mov
outs
and
daa
out
in
retf
or
leave
dec
repnz
jle
cmp
fnstcw
adc
pop
mov
sbb
adc
sbb
(bad)
mov
test
jbe
mov
bound
inc
rcr
jno
jge
sbb
xor
inc
pop
(bad)
sub
test
xchg
sbb
add
dec
cmps
push
sbb
mov
mov
or
fisubr
dec
push
mov
cmps
hlt
xor
imul
aam
push
and
sub
and
int
fiadd
lods
xchg
cmp
int3
cmp
nop
add
pop
xor
retf
dec
ret
xchg
push
test
jge
sahf
fcom
test
bound
jb
add
arpl
adc
not
stc
xor
int
cmp
sbb
mov
retf
xor
rcr
ins
mov
jmp
xlat
mov
imul
aam
daa
shl
mov
adc
movs
(bad)
test
out
push
dec
mov
out
call
push
sbb
addr16
jp
pop
mov
jg
and
push
test
sub
jo
(bad)
sysret
in
adc
es
test
icebp
jl
shl
iret
add
push
popf
mov
daa
inc
int
into
les
jg
sub
push
cmps
sub
cmps
rol
or
ins
jmp
adc
aam
out
jbe
xchg
lock
xor
pushf
pop
fsub
into
cld
fst
dec
shr
adc
in
xlat
mov
xchg
inc
pop
sub
cmp
enter
add
dec
mov
js
movs
call
and
icebp
pushf
xchg
ror
(bad)
ss
and
lea
sbb
mov
xchg
or
mov
inc
loopne
repz
repnz
cvtps2pi
jl
push
or
xchg
push
push
shl
ds
call
dec
mov
push
pusha
loop
fadd
xchg
jg
mov
mov
or
leave
(bad)
fdivr
jp
xlat
inc
popf
outs
push
(bad)
std
push
mov
inc
dec
std
test
jae
pop
xchg
scas
sahf
js
movs
add
ret
jmp
dec
data16
push
inc
pop
cmp
popa
jl
js
xchg
cmc
ror
jb
das
ins
ret
das
dec
dec
mov
dec
push
pop
leave
cmps
ret
push
xchg
jl
popf
cli
repnz
fild
mov
int3
lods
push
aam
call
pop
data16
and
pop
adc
sti
fisttp
push
and
mov
outs
dec
shl
int
sbb
sbb
mov
sbb
inc
test
add
shr
pop
int
loop
mov
and
jbe
jo
loopne
xor
mov
pop
scas
int3
adc
jp
aam
jle
outs
xor
cmp
push
(bad)
std
mov
sub
test
int
mov
dec
inc
xchg
and
adc
daa
std
cli
push
inc
mov
enter
lock
ror
imul
inc
push
popf
dec
mov
dec
push
enter
jmp
clc
inc
hlt
popa
pop
mov
inc
lods
mov
or
add
jle
adc
mov
ins
fabs
or
les
mov
adc
(bad)
pushf
xchg
cmp
xor
xchg
lahf
dec
jmp
sub
add
adc
mov
pop
sub
loopne
in
call
enter
clc
(bad)
dec
scas
(bad)
inc
push
and
popf
lock
mov
dec
adc
sbb
loop
xchg
xchg
sti
imul
mov
xor
retf
adc
in
jo
movs
out
int3
inc
inc
mov
mov
mov
lods
mov
cmp
dec
cmp
sub
sar
(bad)
dec
(bad)
(bad)
jae
add
ja
sub
mov
ja
test
in
aas
cdq
fld
xor
stc
add
mov
xchg
add
shl
and
rol
(bad)
lock
xchg
aad
inc
mov
xor
fisubr
and
inc
or
sub
lods
jmp
inc
and
mov
ja
imul
or
mov
sbb
push
lods
adc
lock
push
pop
and
test
imul
sbb
inc
jp
xchg
dec
xchg
push
inc
pop
add
fsubr
cmp
into
mov
sub
mul
mov
xor
imul
(bad)
pusha
xchg
sub
mov
pop
sub
cmps
in
(bad)
fisub
aaa
imul
cmp
and
ficom
in
sti
push
dec
add
sti
stc
xchg
ds
add
mov
lea
xor
mov
inc
retf
fs
cmp
call
repz
pop
mov
icebp
jmp
call
and
pusha
retf
gs
or
pop
(bad)
gs
nop
pop
push
in
sub
or
push
pop
sub
popf
leave
mov
mov
dec
scas
jo
push
push
sar
aad
or
sub
jne
dec
push
mov
ss
lock
ja
sbb
sbb
ror
ins
push
mov
arpl
dec
mov
call
test
jae
scas
loopne
mov
adc
cmp
or
idiv
pop
std
fst
inc
js
iret
ret
pop
mov
and
pop
or
into
adc
frstor
sahf
sahf
stc
out
xor
scas
aam
push
jno
and
ret
cmp
std
repnz
sub
pop
test
cmp
add
push
aas
fdiv
(bad)
shl
or
add
gs
xchg
fstp
cdq
ja
les
test
clc
xchg
mov
adc
cmp
adc
dec
sbb
push
add
aam
lahf
mul
out
xchg
adc
div
dec
mov
outs
push
pushf
cmp
dec
jmp
xchg
popa
xor
inc
loop
test
imul
mov
int
mov
std
gs
sbb
jne
mov
mov
push
loop
enter
cmp
cs
adc
mov
clc
mov
or
test
call
fbld
mov
icebp
xchg
jbe
cmps
xchg
push
cmc
xor
je
xchg
sbb
pop
cmp
fld
sbb
sub
enter
or
push
mov
jo
mov
push
jl
pop
data16
cmps
mul
hlt
sub
cmp
cmps
xchg
add
lock
lahf
test
sti
dec
cld
pop
out
xor
es
in
jbe
outs
push
mov
fistp
push
test
test
xchg
mov
inc
mov
js
xchg
lods
dec
mov
push
pop
xchg
push
sub
stos
aad
cmps
push
inc
icebp
and
jb
sub
mov
repnz
and
pop
cld
sub
push
jae
hlt
mov
(bad)
mov
or
adc
(bad)
mov
add
arpl
iret
add
inc
cmp
aas
or
fcomp
mov
cmp
scas
and
ss
mov
and
or
adc
mov
jge
mov
movs
mov
out
mov
test
sub
inc
test
imul
mov
aaa
sub
scas
pop
xor
and
outs
or
inc
jno
hlt
inc
rol
adc
fmul
ss
movs
icebp
leave
loope
push
sub
ds
xchg
gs
mov
add
adc
movs
aad
sbb
sahf
shr
mov
jp
pop
int3
lods
test
call
repz
cmps
sbb
icebp
sbb
add
out
cmp
(bad)
xchg
sub
inc
icebp
mov
clc
in
mov
pop
pop
xor
fstp
lock
imul
sti
sub
or
add
shr
adc
cmp
xor
shl
xchg
jnp
mov
push
sahf
adc
aam
test
xchg
lahf
push
mov
xchg
cmc
jl
push
sbb
lds
cld
(bad)
cwde
cmp
cmp
lahf
mov
mov
jnp
or
xlat
pop
mov
adc
repz
cmc
cmp
stos
xor
out
xchg
xor
cmc
test
sbb
std
sub
or
push
mov
sbb
cmp
pop
shr
or
daa
adc
out
push
retf
call
imul
stos
cdq
cmp
dec
mov
js
jmp
jmp
push
jb
mov
dec
lds
mov
imul
neg
pop
outs
push
fwait
push
jno
jb
mov
cld
dec
cli
retf
adc
cmp
test
or
call
dec
push
mov
pop
daa
xchg
sbb
test
nop
sbb
sbb
add
and
fnstenv
sbb
adc
push
jmp
loop
data16
mov
cmp
mov
adc
int3
add
fistp
lea
mov
cli
mov
rcr
out
adc
shl
out
pop
fmul
pop
ficomp
pushf
inc
lock
mov
jmp
or
lods
scas
or
cmps
cli
sbb
dec
sbb
and
mov
lods
cld
ins
out
mov
sbb
push
push
jge
adc
ins
(bad)
mov
nop
jnp
cmp
or
pusha
jmp
repnz
or
pusha
aaa
jle
daa
and
das
repnz
inc
fisubr
xor
pop
xchg
lahf
int
adc
jmp
sub
sub
sbb
mov
mov
iret
push
out
inc
das
inc
mov
xor
sbb
jecxz
cli
jmp
inc
mov
lock
jno
cmp
add
mov
jne
imul
jmp
aad
and
xchg
lods
outs
jno
push
out
and
mov
jb
fbstp
rep
inc
cld
call
mov
jg
rcl
adc
push
pop
pusha
cmp
sub
xor
ss
push
out
and
add
inc
data16
adc
mov
aam
adc
and
cli
push
add
loop
retf
cs
mov
jns
jmp
inc
mov
in
mov
jge
push
je
inc
call
pop
pusha
lea
test
out
mov
sbb
lds
fstp
push
lock
lock
nop
call
sbb
shr
mov
imul
dec
scas
clc
sahf
xchg
test
inc
test
xchg
inc
mov
icebp
add
div
pop
dec
fstp
cmps
test
scas
mov
out
sar
or
(bad)
popa
(bad)
adc
cmp
scas
and
inc
xchg
mov
and
xor
outs
mov
xor
ret
and
sar
movs
bound
fs
lds
inc
xchg
cmps
jmp
push
in
xchg
jae
stc
push
popa
daa
adc
lea
ins
imul
xchg
xbegin
inc
mov
fstp
adc
imul
jbe
pop
xchg
or
or
mov
xchg
xor
jecxz
in
leave
out
movs
(bad)
mov
sub
enter
sbb
sti
(bad)
pusha
loop
jle
test
fwait
rcr
sub
push
in
adc
sti
or
retf
jl
out
xchg
outs
popa
movs
rcl
add
or
push
sbb
stos
jmp
aam
pop
outs
dec
in
mov
retf
inc
fldcw
ret
inc
adc
push
sbb
sti
jecxz
pop
xchg
(bad)
ret
stos
cmp
mov
das
mov
mov
call
adc
cwde
add
or
fsin
out
pop
repz
mov
int3
push
cmp
arpl
sub
xchg
push
xor
push
cmps
sub
in
add
mov
aad
add
or
scas
imul
dec
cmp
jo
xor
or
xor
and
inc
adc
and
repnz
pop
push
dec
aam
mov
jb
xchg
ror
mul
movs
clc
adc
icebp
out
out
clc
dec
cmps
ret
gs
imul
ja
mov
repnz
fwait
adc
js
push
test
test
popa
aad
mov
ror
push
mov
cs
jae
imul
loop
ret
imul
(bad)
repnz
mov
adc
and
add
out
inc
push
or
scas
pusha
sbb
push
mov
jl
dec
mov
jnp
ss
cld
inc
data16
jmp
fwait
in
in
popa
sub
(bad)
into
push
mov
sub
mov
cwde
dec
and
jmp
or
(bad)
push
push
aaa
mov
lods
add
push
jbe
fdivp
or
pushf
imul
pusha
jmp
inc
push
fist
adc
adc
fmul
(bad)
mov
jb
and
sub
arpl
clc
sti
pop
sub
ds
rcl
ja
cmp
shl
shl
stos
fcomip
and
movs
fwait
adc
push
inc
inc
test
adc
dec
stos
adc
cmc
les
cmp
add
adc
in
cmp
outs
jbe
das
outs
aad
add
aam
test
shl
dec
xchg
imul
mov
mov
and
sbb
push
popa
xchg
imul
mov
and
je
(bad)
mov
jecxz
in
pop
jno
jmp
retf
mov
xchg
dec
add
stos
pop
xchg
cmp
cli
cli
stos
cmc
sahf
add
aad
leave
movs
xor
add
das
push
jle
std
repnz
aam
mov
lods
inc
mov
retf
dec
jle
add
mov
lea
dec
aam
cdq
aam
mov
ret
dec
xchg
and
xor
bound
stos
xor
test
shl
das
or
loope
cmp
mov
sub
movs
fadd
lods
xchg
test
sub
jp
sub
cmp
xor
cmp
add
enter
adc
stos
cmp
add
mov
les
in
sub
lds
jmp
lahf
cdq
dec
push
imul
dec
cli
lea
sub
mov
xchg
ret
lods
ror
and
pushf
cmps
pop
addr16
or
xor
pushf
cmc
ret
mov
lahf
adc
movs
jmp
cwde
hlt
enter
pop
shl
dec
iret
sbb
sub
bound
(bad)
int
fs
mov
enter
or
data16
stos
dec
shl
ror
sar
loope
cli
add
stos
(bad)
mov
sub
into
or
pusha
aad
popa
imul
popf
imul
stc
mov
popa
cli
pop
xchg
ret
retf
or
in
sbb
mov
mov
cmps
(bad)
rcr
ja
int
cmc
mov
push
mov
xor
fisubr
and
lods
push
rcl
outs
mov
mov
pop
jmp
mov
clc
and
popf
loope
jge
loop
addr16
mov
aam
pop
sub
inc
fidivr
dec
push
pop
das
loope
sub
push
mov
repnz
movs
sbb
pop
inc
imul
std
lea
xor
sub
mov
(bad)
dec
mov
test
xchg
sub
leave
and
or
call
call
jp
pmuludq
test
mov
outs
adc
jl
xchg
push
fistp
adc
push
dec
xchg
ins
mov
cmp
pop
push
leave
repnz
fild
or
inc
gs
dec
test
mov
xor
shr
sbb
mov
pop
sbb
psllw
dec
imul
sub
or
jmp
mov
jp
add
xchg
ins
xor
xchg
pop
test
jb
mov
push
retf
push
jg
jne
jnp
nop
mov
and
fdiv
mov
pop
out
aad
ds
leave
sbb
fwait
cmc
pop
hlt
xchg
mov
and
psubq
inc
ins
ins
loop
pusha
hlt
pop
adc
inc
jnp
jne
mov
es
pusha
pavgb
mov
ret
mov
sub
add
sbb
sahf
pop
mov
aaa
dec
pushf
push
loope
gs
(bad)
cmc
in
sbb
ja
or
jns
(bad)
in
xchg
jecxz
cmp
pop
pop
js
or
(bad)
das
dec
cmp
lea
cwde
scas
in
ror
push
dec
test
xchg
cmp
push
mov
cmp
add
sbb
jb
push
sub
cs
jge
cwde
push
push
and
adc
and
stos
inc
shl
cmp
fisub
sbb
(bad)
fstp
stos
loop
(bad)
sti
sub
jnp
pop
jo
xor
adc
fiadd
int3
enter
xor
mov
shl
mov
mov
sbb
clc
push
das
shr
dec
cmp
cld
cwde
dec
scas
xor
retf
adc
push
mov
cmps
cmp
(bad)
fnstcw
xor
xchg
push
jmp
call
sub
pop
add
dec
mov
inc
jno
cmp
scas
pop
lods
ins
fisub
mov
pushf
pop
xor
pop
jne
jae
dec
div
sbb
push
cmp
push
sub
cmps
cmp
aaa
loop
rep
jbe
into
repnz
les
sahf
fadd
push
cwde
pop
clc
jg
outs
xor
test
sub
sub
add
pop
outs
inc
inc
das
jl
dec
push
cmp
add
(bad)
repnz
cmps
mov
mov
mov
in
mov
push
add
in
mov
imul
dec
and
sti
sub
js
jmp
stos
cwde
(bad)
jnp
(bad)
out
pop
jl
adc
shl
or
jge
dec
xlat
pop
into
bnd
xor
push
push
push
xor
ror
xchg
(bad)
or
iret
clc
loope
or
jne
je
outs
out
lods
dec
sahf
ror
in
ror
scas
sbb
iret
and
jnp
or
push
int
fwait
cmp
inc
push
ins
dec
ins
jmp
ds
mov
test
jmp
inc
repz
cld
cwde
fcmovnu
sub
in
(bad)
jns
mov
jno
pusha
sbb
push
aas
fnsave
mov
mov
into
sub
pop
pop
shl
fldenv
jb
xchg
lahf
cmp
push
push
mov
cdq
je
popa
movs
cmp
lds
and
jl
inc
(bad)
das
stos
add
jo
or
sti
jb
pushf
in
sub
pop
adc
jnp
sbb
pop
call
inc
add
pop
jb
xchg
test
xor
jmp
push
jae
retf
stc
movs
in
daa
cmpps
jns
sub
jmp
stos
ins
adc
lods
add
cld
in
scas
add
scas
aam
into
sbb
arpl
pop
rcl
aad
inc
inc
inc
pusha
lods
mov
mov
outs
sar
jl
xor
cmp
mov
pop
lods
and
aam
mov
mov
cmp
mov
sub
ds
inc
xchg
fsubrp
movs
lahf
cmp
mov
adc
ds
mov
test
mov
call
xor
lods
and
cli
sub
out
mov
sbb
mov
add
mov
ds
fsubr
test
out
ret
and
xor
inc
popf
mov
sbb
sar
pop
pop
xchg
ret
cwde
adc
push
xor
pop
mov
cmp
in
int
jae
call
sub
dec
or
or
xchg
in
add
movs
adc
(bad)
cld
cmp
inc
mov
xchg
pop
mov
add
popa
adc
adc
jge
mov
inc
data16
mov
xchg
mov
xor
loope
js
dec
sub
inc
jle
sbb
call
popf
mov
mov
inc
pop
cmp
dec
push
adc
inc
pushf
xchg
fwait
pop
jg
adc
dec
xchg
push
sbb
daa
hlt
pop
jmp
std
ins
call
or
xchg
scas
rol
mov
pop
jle
pop
retf
ret
mov
jo
div
scas
inc
pop
pop
jo
cld
loope
cmp
jnp
pushf
(bad)
lahf
xchg
dec
jae
sahf
das
stos
pusha
sbb
imul
and
imul
mov
in
adc
or
add
xchg
in
sub
shr
add
nop
call
inc
or
in
idiv
rol
popa
xchg
dec
xlat
popf
lods
(bad)
jmp
xchg
fist
sub
jge
retf
stos
xchg
call
aad
inc
dec
adc
test
imul
fnstcw
mov
in
bound
jb
fs
xor
sti
lods
fimul
lods
sub
sub
mov
sub
xchg
fnstcw
adc
xor
jle
pop
sahf
push
pop
mov
and
jecxz
mov
xchg
call
leave
punpckldq
(bad)
cmp
inc
jbe
lds
pop
call
add
(bad)
out
(bad)
inc
retf
jns
xchg
das
std
sub
int
xchg
xchg
add
mov
cmps
imul
fisub
cs
ja
inc
sbb
add
popf
mov
mov
jge
or
jge
mov
jmp
xchg
movs
repnz
jge
cli
mov
xor
push
retf
ror
and
cmp
cmp
inc
repz
xchg
jecxz
cmp
mov
mov
xchg
inc
daa
retf
stos
sub
jnp
in
test
mov
(bad)
mov
lods
rsqrtps
inc
inc
jmp
sub
or
nop
jne
icebp
push
inc
xlat
jl
jmp
in
cli
sub
xchg
pop
stos
es
adc
pop
jecxz
and
jecxz
xor
sub
fstp
stc
enter
mov
push
in
inc
std
xchg
xchg
in
repnz
xchg
and
mov
jl
xor
mov
int3
repnz
or
xlat
push
mov
adc
movs
push
out
test
pop
out
jmp
js
xchg
sbb
ror
inc
mov
fucomip
jnp
inc
popa
in
mov
ds
xchg
cli
adc
bound
mov
bound
mov
mov
int3
push
mov
ror
ss
icebp
mov
dec
sahf
ss
sub
xchg
cmp
loop
mov
dec
ins
push
dec
adc
js
xchg
dec
arpl
sbb
xchg
test
ss
out
rcl
sbb
stc
lods
jmp
(bad)
repz
push
adc
jge
mov
test
mov
scas
add
xchg
mov
cld
xchg
ds
aad
repnz
test
xor
mov
push
xor
movs
and
pop
mov
sbb
and
iret
dec
(bad)
jns
imul
xchg
jne
mov
dec
mov
js
out
jns
repnz
mov
xor
stos
seta
cmp
lock
cli
ror
or
or
out
(bad)
aad
adc
inc
movs
add
or
or
or
inc
push
into
sti
popf
popf
pop
cmp
movs
loopne
jne
neg
jmp
and
mov
sub
sbb
nop
cmp
out
jmp
xor
adc
outs
mov
mov
arpl
sbb
enter
jb
or
pop
int
jb
clc
fidiv
xlat
mov
inc
(bad)
pop
(bad)
jmp
pushf
pushf
inc
ins
sub
and
push
adc
pop
push
push
mov
test
outs
enter
push
cmp
iret
jne
lahf
jno
sub
das
mov
ja
(bad)
sti
adc
fucom
pop
xor
pushf
repnz
movs
xor
push
mov
clc
jae
adc
sub
arpl
mov
lahf
xor
nop
loopne
test
lds
push
ins
cli
(bad)
icebp
or
not
movs
push
ficomp
or
inc
cwde
push
ins
mov
push
call
mov
cmp
push
xor
hlt
lods
fs
or
mov
pop
mov
ret
aas
push
test
repz
push
pop
push
jbe
and
popf
jecxz
maxps
push
mov
push
push
jo
sbb
xor
mov
daa
clc
sahf
cmp
or
xchg
shl
jno
sbb
xchg
pop
aad
or
out
jecxz
in
retf
pavgw
lds
lds
addr16
movs
es
into
stc
popf
xchg
jae
pushf
jmp
dec
stc
das
mov
dec
push
dec
xor
push
aad
in
(bad)
cld
outs
sbb
xor
push
pop
loope
inc
cli
dec
jbe
sub
in
dec
add
rcl
mov
ret
outs
mov
jo
loope
sbb
jp
mov
loope
shr
or
iret
sbb
xchg
push
mov
gs
(bad)
int3
leave
je
push
and
dec
loopne
push
outs
cdq
xchg
sub
sahf
enter
ins
movs
test
imul
pop
ficom
sbb
daa
and
inc
sub
push
or
hlt
jmp
jl
(bad)
dec
sti
and
fwait
sbb
and
mov
into
mov
(bad)
dec
sbb
in
xor
gs
push
neg
rcr
aad
stos
clc
(bad)
lods
cmps
xchg
jnp
push
jg
jmp
loope
mov
mov
xchg
and
mov
push
and
cli
loop
jns
xor
jmp
sub
mov
aaa
pop
movs
cwde
and
dec
and
ja
cmp
lahf
mov
sub
inc
inc
add
shl
add
push
int3
sub
fdiv
xchg
jmp
daa
pop
mov
scas
neg
stos
mov
in
add
scas
add
ret
xchg
popa
js
adc
inc
lock
lock
dec
ret
fiadd
jp
test
push
cld
xchg
jo
stos
sub
mov
addr16
xlat
pusha
mov
fs
mov
cmp
inc
mov
push
addr16
shl
xchg
cmp
neg
int3
pushf
mov
into
cmps
xchg
cs
cmps
xchg
push
mov
dec
movs
jb
dec
lock
mov
out
add
pushf
push
adc
mov
bound
cs
pop
aaa
sar
sbb
lods
jp
ins
mov
xchg
test
sbb
sahf
jne
push
cmp
add
inc
imul
sub
add
and
(bad)
ss
dec
xor
fs
sbb
add
sub
es
fisubr
mov
inc
sti
pop
in
pusha
or
jp
aas
mov
jno
stc
jne
int3
stos
test
imul
imul
repz
sbb
pop
mov
mov
(bad)
lods
mov
jne
jmp
or
fadd
pop
shl
out
mov
sub
call
sahf
lahf
and
xchg
pop
mov
xor
mov
hlt
sbb
sub
inc
cmp
mov
ds
sub
sbb
aam
sbb
rcr
dec
add
mov
mov
imul
cld
adc
or
mov
aad
add
ss
dec
push
dec
icebp
sar
in
ins
movs
mov
outs
or
mov
imul
add
cmp
dec
fdivr
cmp
fsub
jnp
pop
push
jle
push
icebp
fistp
jmp
fist
jb
inc
xchg
leave
leave
cmp
cmc
sbb
push
xor
fldenv
mov
js
xchg
scas
sar
std
adc
lea
cli
(bad)
loop
mov
push
xchg
and
xor
popf
cmps
call
out
or
ins
jns
or
scas
pop
mov
rol
jno
jo
xchg
fdiv
pop
(bad)
lock
push
cli
mov
dec
enter
inc
push
movs
or
mov
enter
pop
ins
jge
jo
sbb
and
lds
or
inc
ror
cld
test
aam
sub
test
pop
add
cmps
sub
loop
fimul
dec
adc
sbb
imul
push
jbe
out
lea
cmp
mov
mov
not
repz
(bad)
cdq
mov
std
lea
add
jmp
in
jno
pop
nop
mov
movs
aam
out
(bad)
and
loopne
push
inc
outs
aaa
xchg
data16
push
push
mov
inc
xor
cmc
sbb
jmp
xchg
jns
outs
int
add
xchg
iret
jmp
sbb
sub
or
push
pop
sub
inc
mov
je
xchg
(bad)
and
jecxz
dec
outs
lods
and
mov
das
jo
jo
sbb
fs
je
and
inc
js
arpl
movs
in
pop
push
add
pusha
and
or
sbb
xor
jb
aaa
movs
mov
sti
fst
fabs
push
and
add
cmc
xchg
ror
jl
ins
dec
push
repz
push
aaa
xlat
call
pop
fidivr
retf
and
push
push
in
and
out
out
stos
mov
out
psubd
or
xor
xchg
pop
mov
and
loope
dec
dec
test
call
ret
in
sbb
mov
sub
mov
mov
xor
push
mov
sub
jmp
mov
push
stc
jb
pop
(bad)
lds
hlt
jb
out
cmps
dec
das
int
sub
mov
retf
shr
mov
mov
sub
push
adc
add
sahf
mov
pop
ret
and
mov
inc
cmp
pushf
inc
add
xchg
inc
shl
test
nop
ins
mov
jle
or
pop
mov
mov
test
call
rcl
nop
dec
loopne
pop
sbb
mov
dec
xor
lock
imul
inc
mov
push
and
das
fcom
xchg
fiadd
push
jne
clc
nop
call
mov
test
fwait
cmp
mov
movzx
ja
mov
mov
(bad)
in
pop
xor
push
sbb
xchg
jnp
sub
and
lods
das
fcomp
mov
ss
loopne
scas
int
xor
ss
int3
test
loopne
mov
pop
test
fwait
jl
dec
in
loope
frndint
pop
adc
inc
mov
mov
call
clc
push
bound
mov
or
imul
push
mov
xor
jge
cmps
adc
mov
in
cmc
fst
xchg
cwde
stos
adc
out
inc
adc
pop
mov
or
pop
cmps
mov
xor
dec
pop
cmp
adc
add
sub
sbb
iret
rcr
mov
daa
adc
mov
fimul
add
ret
xor
and
sub
xor
(bad)
jno
xor
mov
movs
jecxz
adc
adc
jne
cdq
mov
clc
cld
adc
test
push
stc
jmp
stc
pop
dec
push
jmp
push
daa
mov
jle
inc
ror
cli
push
les
mov
mov
je
xchg
xor
push
pop
test
out
(bad)
cmp
cmp
mov
dec
aad
rcr
jp
sub
data16
jno
mov
mov
(bad)
cmc
cwde
cmp
scas
xchg
scas
movs
cs
retf
xchg
mov
inc
or
mov
loope
jp
push
dec
fisub
adc
pop
jno
adc
imul
add
mov
stos
mov
and
jne
mov
mov
jg
cmp
push
ret
rcr
aaa
pushf
dec
rol
sub
cmp
mul
jne
xchg
xchg
pop
xor
jecxz
jle
aad
or
lods
xchg
pop
push
sub
sbb
ds
jnp
push
inc
adc
sub
cli
add
cmp
lods
jne
dec
fld
shr
lods
dec
aad
push
xor
add
mov
(bad)
pusha
or
xchg
cmp
loop
mov
pop
dec
xchg
mov
test
mov
inc
mov
stos
push
sbb
mov
jmp
int
ffree
popa
dec
and
pushf
int
arpl
fs
inc
mov
popf
dec
push
jnp
pop
jb
pop
fs
sub
cmps
popa
mov
in
sub
jne
leave
sahf
add
sti
js
adc
ror
jnp
test
pop
es
sub
movs
pop
pop
lock
xchg
fnstsw
cmp
inc
adc
jmp
in
in
cmp
frstor
cmps
in
ss
sbb
mov
and
fnsave
xor
push
call
jp
aad
add
retf
(bad)
pop
lock
pushf
xlat
xchg
pushf
sub
bound
jp
mov
out
dec
cmp
add
call
lds
pop
outs
or
fisttp
fdiv
inc
jp
sar
pop
inc
mov
imul
dec
(bad)
(bad)
(bad)
shl
inc
xchg
imul
and
push
mov
and
push
std
pop
(bad)
fisttp
jns
pop
dec
jge
rcr
(bad)
mov
push
mov
dec
ins
mov
or
(bad)
dec
cs
cmps
mov
arpl
idiv
jno
push
adc
dec
cmc
clc
outs
mov
add
pop
arpl
jae
icebp
sub
push
in
push
cmp
sub
mov
xchg
sub
nop
scas
(bad)
movs
or
retf
cld
in
cwde
and
idiv
and
out
jnp
push
and
adc
js
cmp
sti
stc
addr16
fidiv
cli
stos
aas
inc
cmp
sbb
adc
cmp
fnstenv
(bad)
dec
or
mov
mov
cmps
dec
pop
adc
icebp
sar
outs
std
into
cs
mov
outs
inc
push
dec
jmp
aam
xchg
mov
push
sahf
adc
iret
mov
pop
xchg
aaa
push
mov
jns
push
sbb
xor
shl
push
ret
xchg
adc
mov
or
mov
(bad)
(bad)
das
lahf
inc
adc
xlat
mov
(bad)
rcl
push
pop
mov
in
lods
mov
sbb
aam
mov
arpl
xor
shr
in
int
jb
dec
shl
adc
mov
ds
fistp
dec
cmp
xchg
mov
dec
jle
mov
ins
mov
cmp
arpl
jns
fldcw
fdiv
les
jmp
fnstcw
loopne
or
into
loopne
(bad)
jg
ret
cmps
mov
cld
jge
imul
pop
and
test
xor
shl
jl
jnp
xchg
mov
mov
idiv
cld
inc
xchg
fist
cld
ret
lahf
(bad)
xor
retf
hlt
imul
dec
stos
movs
aas
shr
ror
movs
sub
push
in
jmp
or
cdq
sub
xchg
mov
ja
add
pop
cmp
mov
test
jmp
cmp
xchg
in
mov
(bad)
das
das
jg
ret
mov
sub
mov
movs
jne
cmp
xchg
sbb
shl
mov
(bad)
data16
jb
mov
icebp
dec
hlt
js
std
xor
data16
popa
sub
lock
in
mov
xchg
int3
les
scas
and
out
gs
pop
or
jge
cmp
mov
jae
fild
call
pop
lea
mov
cmp
ret
inc
or
sbb
ins
cli
xchg
mov
pop
pusha
cmp
xor
es
xchg
int
sti
sub
out
mov
nop
push
jnp
ins
sbb
daa
cmp
inc
ins
hlt
inc
fwait
out
das
loopne
mov
jp
inc
idiv
das
cmp
cdq
or
jno
in
cmp
push
and
xlat
cmps
inc
cmps
pop
(bad)
outs
or
adc
pop
in
pop
adc
inc
and
inc
xchg
in
aas
inc
bswap
jmp
dec
test
lds
jbe
ficomp
xchg
push
and
int3
cmp
pop
sub
pcmpgtd
xchg
pop
inc
dec
call
adc
mov
mov
js
push
xchg
cmc
and
(bad)
call
inc
xchg
push
fmul
loopne
push
into
add
add
imul
aas
lods
jmp
dec
or
ds
xor
pop
hlt
out
mov
rcr
imul
inc
fistp
lods
push
ret
hlt
push
(bad)
push
add
pop
aam
pop
ret
lock
pop
sbb
mov
add
inc
cmp
sbb
outs
out
or
rcl
mov
and
pop
jge
dec
lahf
ja
or
adc
cmp
push
ins
and
clc
sahf
test
bound
retf
pop
repnz
xor
add
ja
das
mov
jbe
fucom
sar
cld
xor
cld
mov
dec
mov
add
sub
fs
xor
(bad)
jae
inc
lods
mov
and
iret
neg
aaa
sahf
repnz
data16
out
bound
jo
dec
sub
mov
and
or
and
int3
sub
push
cmp
xchg
adc
mov
xor
mov
mov
idiv
jmp
scas
outs
scas
push
pop
xchg
add
jmp
retf
xor
ret
xchg
daa
mov
sar
sahf
ficom
inc
xor
push
jb
lea
in
pop
add
dec
nop
das
shr
pushf
enter
into
inc
into
jbe
lea
cmp
cmp
div
ret
sbb
aad
movs
scas
shl
cmp
cwde
xchg
(bad)
sbb
rol
xor
push
inc
(bad)
jo
sub
sub
jl
mov
cmp
out
mov
je
inc
repz
sub
enter
dec
aas
call
xor
cmp
scas
xor
mov
inc
jo
shl
icebp
mov
cwde
lods
test
std
mov
mov
mov
cli
mov
(bad)
cmp
(bad)
sbb
fbld
xchg
push
ins
cwde
xor
lahf
shl
add
inc
jo
sub
enter
push
fs
loope
inc
shl
retf
test
pop
sbb
mul
push
imul
ucomiss
jnp
leave
cwde
dec
out
ds
mov
inc
and
addr16
into
fcmovb
fcmovnu
outs
xor
das
ret
ins
or
data16
and
add
leave
sbb
movs
jns
js
push
pop
xlat
and
jp
rol
dec
jle
or
jbe
test
jge
inc
mov
shl
or
mov
xor
mov
lahf
xor
fcomi
push
push
sub
out
cmp
pop
inc
lahf
push
inc
je
shl
jmp
xchg
fnstcw
xchg
mov
pop
div
dec
inc
sbb
or
cmp
xchg
(bad)
mov
inc
push
xor
inc
sub
fdiv
sbb
inc
push
jbe
pop
sbb
dec
push
(bad)
mov
sbb
push
repnz
add
jge
and
ds
inc
dec
out
xchg
mov
in
test
pop
or
adc
adc
jnp
and
xchg
mov
inc
mov
mov
or
mov
dec
pushf
fisttp
and
pop
xor
push
push
push
adc
lods
fcmovbe
ja
outs
dec
mov
jb
mov
add
mov
dec
test
pop
cmps
xchg
popf
test
xor
ret
std
int
imul
cmp
inc
daa
add
les
mov
xor
xchg
test
or
leave
cmp
add
xchg
fst
sahf
stos
retf
mov
inc
fld
jge
dec
fdiv
nop
ret
and
sti
dec
jmp
inc
jb
push
mov
outs
jecxz
sub
js
mov
or
inc
cmp
bound
push
inc
jnp
div
sbb
sub
rcl
fnstcw
dec
or
add
adc
mov
jl
cmp
push
fldcw
nop
imul
aas
mov
out
pop
mov
pop
cmp
arpl
(bad)
jg
push
ror
retf
mov
mov
dec
cmps
stos
inc
lods
inc
sti
xchg
add
inc
xchg
xor
push
adc
in
pop
int3
jle
sub
cmp
xor
arpl
inc
sbb
mov
dec
jb
lods
popf
es
in
jmp
addr16
xor
pop
push
jno
jbe
or
sbb
add
sbb
out
jns
push
scas
fnstenv
test
out
pop
rcl
loop
outs
xor
neg
shl
cwde
sahf
or
jns
aaa
retf
push
and
mov
dec
test
outs
jbe
mov
iret
and
jl
leavew
mov
pop
jbe
imul
or
mov
mov
inc
out
add
push
js
adc
ficomp
int
mov
mov
cmp
test
(bad)
call
popa
push
cdq
lock
ret
xor
inc
push
xchg
sub
fist
cs
cmps
xchg
xor
push
sub
ror
push
inc
ret
xchg
jg
int
addr16
jp
sbb
aas
ret
cmp
rcr
enter
pop
sub
pusha
push
sahf
pop
and
adc
std
push
inc
int3
mov
mov
loop
bound
add
and
out
sahf
in
cmps
pop
mov
test
mov
in
retf
or
int3
sub
add
or
mov
cdq
scas
sub
mul
sub
mov
rcr
pop
mov
inc
sbb
xor
mov
(bad)
sti
pop
sub
stc
push
sbb
sti
cmc
stos
jle
add
cld
mov
pop
add
dec
mov
xor
push
pop
push
adc
jo
mov
jne
int3
xor
(bad)
dec
lock
push
mov
push
inc
adc
xchg
mov
mov
inc
movs
xor
xchg
stos
mov
test
shl
dec
pusha
xchg
cmps
fild
ins
cld
lods
dec
je
sbb
outs
and
repz
scas
xchg
inc
mov
cmp
adc
xor
imul
mov
ror
(bad)
cwde
inc
stos
xor
pop
mov
clc
mov
enter
add
xor
sub
ds
xor
(bad)
aas
sub
out
mov
jp
push
ss
or
mov
dec
in
push
push
jnp
inc
outs
popf
stc
mov
stos
xor
mov
push
std
shl
sbb
movs
out
test
or
add
push
mov
fsubr
jp
rol
mov
add
shrd
fnstcw
into
in
mov
mul
js
repnz
xchg
and
test
add
jns
int
in
test
stc
sar
hlt
retf
xor
ins
ret
imul
loop
data16
fucompp
(bad)
jmp
fistp
mov
dec
or
test
rcl
out
inc
xor
and
mov
sbb
add
pushf
lea
shl
jo
test
add
mov
pop
push
ror
xor
das
or
mov
mov
xchg
adc
adc
xlat
pop
sbb
inc
sub
cmps
mov
ins
pop
aas
lahf
call
xchg
and
imul
sahf
mov
and
lods
jl
fdiv
cmps
mov
xchg
aam
dec
cwde
hlt
jne
into
cmc
adc
xor
jo
sbb
push
pop
add
popa
loope
add
adc
pop
imul
imul
jge
xchg
fwait
jg
mov
push
arpl
sar
sbb
int3
mov
pop
sti
in
outs
mov
repz
les
fldenv
bnd
inc
js
and
jne
rcl
or
xchg
jmp
xchg
rcr
push
mov
mov
in
and
cdq
test
scas
xchg
mov
pop
add
jbe
and
cwde
and
adc
pop
test
xchg
fist
jbe
test
(bad)
sub
xchg
add
dec
lahf
xchg
jl
fs
sub
push
iret
pushf
aam
xor
outs
pop
adc
sub
pusha
jge
sub
into
stc
in
bsf
mov
ja
int3
std
sar
jl
xor
jnp
mov
shr
mov
cmps
dec
add
bound
mov
aam
fbld
xchg
push
repnz
or
or
fwait
stos
fincstp
or
adc
or
mov
mov
loope
mov
cwde
mov
xor
das
js
imul
mov
stos
ins
ja
cld
sbb
js
push
mov
add
scas
icebp
inc
jg
dec
aaa
push
mov
mov
or
into
rcl
xor
rep
in
add
cli
sub
dec
pop
xchg
mov
or
xlat
fild
xor
cmp
jmp
mov
push
push
mov
clc
mov
gs
enter
pushf
jecxz
sbb
add
test
inc
xchg
xchg
rcr
repnz
and
ins
cmps
inc
cmps
push
cwde
jg
lds
dec
xchg
sub
(bad)
adc
aaa
inc
jmp
jl
mov
arpl
out
push
or
stos
mov
sbb
push
xlat
inc
in
shr
mov
lea
jbe
mov
pushf
add
add
movs
xchg
jle
(bad)
in
mov
mov
dec
clc
inc
cwde
mov
xchg
mov
push
push
sbb
pop
sub
mov
stc
test
jmp
dec
call
stos
pop
cmp
pusha
xor
imul
jns
lods
sbb
mov
fbstp
js
push
inc
repz
and
xor
es
stc
mov
out
sbb
sbb
mov
loope
xor
sub
inc
sti
add
movs
shr
and
clc
push
push
adc
adc
sbb
fs
jae
sub
push
mov
push
addr16
mov
in
sub
inc
jns
mov
scas
test
repnz
mov
aam
jge
inc
cmps
inc
and
pop
ret
and
gs
xor
adc
in
xchg
ret
in
or
js
(bad)
xor
adc
cmp
pop
daa
fisub
stos
mov
xchg
adc
jb
jae
aas
adc
mov
cld
pop
mov
xchg
leave
outs
test
add
push
scas
mov
and
add
cmp
ins
aad
mov
mov
mov
xchg
aaa
mov
movs
lahf
or
fsubr
ds
(bad)
int
cmc
loope
adc
mov
dec
loope
pop
and
into
cmp
out
les
std
xchg
arpl
fnstenv
test
mov
ins
stos
into
jmp
jnp
lds
mov
mov
push
loope
stc
xchg
dec
dec
inc
pop
mov
push
dec
iret
test
test
ja
jbe
adc
sub
pop
and
mov
cmp
push
mov
hlt
int
sbb
jp
bound
fiadd
in
jg
loop
dec
in
or
cmp
aam
out
add
pop
mov
push
mov
bound
xchg
or
test
std
lea
jl
jb
dec
dec
cmp
jl
dec
call
mov
lahf
out
shl
pop
sahf
adc
xchg
popa
aas
scas
pop
inc
dec
int3
cmp
fadd
sbb
aaa
pop
jno
out
test
mov
test
or
xchg
inc
fldl2t
loop
and
aad
or
push
jmp
adc
xchg
arpl
scas
jo
leave
loope
in
ja
les
dec
outs
das
jl
sahf
inc
cwde
mov
out
mov
mov
jle
imul
mov
push
mov
cmps
lahf
scas
push
call
jmp
fwait
jmp
push
pop
aaa
xchg
fsub
(bad)
call
sets
mov
cmp
mov
into
nop
inc
rcl
xchg
mov
dec
test
loope
stos
cmp
push
sbb
sbb
loopne
add
xor
xchg
xlat
int3
dec
ins
cmps
push
std
fnsave
xchg
addr16
(bad)
dec
or
test
inc
fmul
adc
(bad)
test
mov
into
movs
add
add
in
mov
enter
inc
in
mov
sbb
(bad)
std
hlt
clc
dec
mov
outs
xchg
or
cdq
fild
sub
ja
out
ret
mov
dec
in
add
es
mov
lods
iret
sub
test
out
je
or
in
pop
outs
nop
adc
dec
fst
cmp
test
jbe
and
mov
js
movs
js
fld
mov
push
rcl
cmp
hlt
jns
lock
inc
int3
pop
outs
adc
mov
mov
jg
jmp
test
test
fs
faddp
cmp
jl
inc
mov
dec
(bad)
jnp
dec
cmp
sub
leave
stos
sbb
xlat
int3
pop
in
sub
inc
xchg
aas
mov
push
or
adc
push
aam
mov
mov
dec
ins
arpl
pop
loop
push
add
xchg
stc
addr16
add
retf
stos
xchg
cmp
aam
inc
icebp
rol
les
and
arpl
aaa
mov
push
push
rol
test
and
cmc
add
adc
xlat
and
fwait
retf
mov
shl
int
push
(bad)
xchg
xchg
mov
ds
push
mov
jle
push
and
sub
in
jle
and
xor
fucomi
mov
clc
sar
popf
fnop
loop
rol
pop
pop
imul
jmp
push
fdivr
dec
push
imul
jbe
sbb
mov
sbb
fldcw
jg
fs
int3
cs
into
rcr
or
movd
push
cmp
addr16
loopne
sar
xchg
retf
mov
or
lahf
in
ja
mov
and
dec
bound
neg
push
fstp
test
sbb
fcom
(bad)
ss
aam
stos
adc
push
pushf
popa
pop
pop
lods
out
cwde
cdq
cs
(bad)
push
sti
mov
cmp
inc
outs
ja
and
xor
imul
fist
adc
(bad)
jbe
xor
movs
ret
add
mov
sti
(bad)
dec
dec
cmps
push
fsubr
cdq
add
cmps
popf
mov
imul
sub
or
inc
das
cmp
das
pop
or
in
clc
test
jb
dec
sub
and
pop
pop
nop
loope
daa
dec
xchg
and
les
cmp
inc
adc
pop
xchg
es
mov
or
xchg
test
stc
lods
xor
xchg
nop
in
fmul
xor
add
fisttp
imul
(bad)
push
imul
aaa
fidivr
mov
inc
sub
sbb
test
sub
xor
push
scas
imul
data16
pop
icebp
and
call
sub
stos
cmp
add
push
or
push
jae
sub
inc
or
repz
mov
ds
call
mov
mov
fwait
in
sub
daa
pop
gs
push
in
push
mov
daa
sbb
cmp
pop
push
or
aaa
retf
mov
pop
xor
inc
(bad)
jne
loopne
mov
mov
sbb
pop
adc
movs
sbb
dec
aad
mov
xor
sub
xor
mov
adc
cmc
rcr
es
jmp
bound
xchg
mov
in
sub
stc
loop
xlat
mov
add
aas
xchg
pop
pop
pop
inc
imul
cmp
in
and
jmp
loopne
xchg
stos
in
sub
jne
and
daa
(bad)
pop
adc
loop
jae
ins
loop
sbb
sbb
retf
sti
mov
xchg
lahf
pop
cmp
sbb
push
test
scas
add
mov
sbb
cmp
push
mov
imul
adc
mov
jns
inc
imul
xchg
neg
pop
shr
adc
ret
les
(bad)
adc
push
pushf
call
add
out
outs
inc
pop
xchg
push
cmp
pop
imul
sti
mov
jne
xor
cs
(bad)
jno
pushf
cmp
sub
(bad)
lods
call
sbb
mov
sub
cli
nop
adc
bound
jle
movs
ins
adc
int
rol
addr16
mov
dec
fmulp
push
jp
div
add
xchg
fnsave
es
dec
ss
and
in
mov
sub
ret
jmp
and
movd
aad
or
adc
xor
mov
xchg
add
test
ficomp
nop
add
sbb
cmp
add
cmp
fwait
cmc
dec
loopne
outs
data16
jge
or
and
xor
shl
jg
test
call
test
mov
lahf
leave
ret
ret
fnsave
sbb
in
dec
sbb
push
mov
mov
pop
mov
mov
es
ins
(bad)
mov
int3
cmps
loopne
mov
pop
sbb
sub
fsqrt
int3
mov
jle
jle
lods
ds
or
or
ret
add
cmp
jae
sub
or
mov
nop
fcomp
ret
mov
xchg
cwde
xor
sub
pop
mov
mov
rcl
sbb
out
xor
inc
pop
lds
mov
(bad)
iret
sub
adc
adc
pop
inc
sbb
add
pop
sbb
mov
push
pop
icebp
xor
xlat
loope
jae
dec
add
cwde
pop
xchg
jecxz
jmp
adc
aaa
xlat
mov
mov
and
or
jnp
aas
cld
push
mul
push
not
pop
pop
or
daa
pop
push
call
jo
sub
adc
outs
rol
loopne
imul
shl
jmp
mov
xor
push
jecxz
xor
mov
jnp
sbb
mov
adc
dec
push
xchg
cld
cmp
xor
mov
mov
pop
int3
cmp
out
jb
add
(bad)
fmul
loopne
movq
cmp
pop
es
mov
mov
sub
or
pop
ins
cs
add
fistp
movs
push
test
(bad)
push
or
mov
in
and
sbb
jle
imul
pop
stc
xlat
loopne
repz
push
cmp
test
test
sub
xchg
daa
rcl
ror
mov
ss
pop
xchg
push
sub
push
loopne
sub
sub
cmp
mov
or
ror
(bad)
or
icebp
sub
shl
sub
daa
xchg
stc
mov
and
out
push
mov
mov
add
(bad)
pop
sbb
mov
das
add
ins
and
pushf
jmp
and
out
fdiv
sbb
aaa
fdivp
enter
or
sub
cmp
xor
ss
loop
mov
in
lds
sti
jbe
imul
cmp
rol
std
movs
js
xor
push
cmp
fnsave
sub
scas
not
mov
stos
retf
xor
inc
jnp
push
mov
mov
frstor
fistp
xlat
faddp
add
aaa
scas
test
mov
xchg
shr
loope
sbb
cmc
xchg
sbb
adc
pushf
sahf
in
das
cmp
or
ror
addr16
fdivp
push
rcl
sbb
pop
fs
in
mov
mov
add
push
iret
xor
add
mov
sub
mov
fxch
push
outs
ror
(bad)
(bad)
test
addr16
test
pop
sub
sbb
sbb
pop
iret
mov
stos
mov
stos
test
sti
pop
jge
cmp
test
and
jne
adc
jno
outs
movs
mov
mov
cwde
jp
(bad)
jle
mov
std
rep
and
data16
stc
push
clc
pop
je
cmp
and
inc
sbb
pop
push
jmp
push
dec
repz
jle
mov
cli
aam
or
out
or
mov
fisttp
mov
jne
addr16
mov
cmps
call
jle
out
and
mov
or
ret
xchg
lods
or
addr16
xchg
or
ss
and
and
mov
aaa
mov
arpl
aaa
xchg
dec
mov
shl
loopne
loopne
sbb
pop
cmp
mov
pop
scas
ds
test
ins
sbb
cmp
jl
xor
pop
shl
push
data16
add
(bad)
cmp
rcl
or
clc
add
or
mov
jge
pop
repz
aas
or
dec
mov
adc
(bad)
xchg
inc
fsubr
in
gs
cs
(bad)
test
imul
cmc
and
std
or
sub
stos
mov
cmp
nop
pop
or
xor
aaa
ins
jnp
and
or
in
add
ss
mov
and
xchg
pop
jmp
jb
adc
aam
outs
dec
in
push
shl
sub
nop
jmp
pop
adc
in
in
out
cmp
pop
mov
(bad)
pop
mov
test
and
inc
mov
ins
inc
inc
cmp
nop
cli
pop
add
lods
gs
mov
jle
fs
cmps
(bad)
loope
not
daa
xor
xor
daa
out
fidivr
mov
mov
cmp
scas
pop
jl
xor
mov
std
daa
xor
out
mov
push
add
aad
fcom
jmp
ja
jno
mov
inc
stc
xchg
call
pop
xchg
das
inc
(bad)
popa
loop
stos
(bad)
jmp
pop
cli
fld
movs
jns
shl
cmc
(bad)
push
add
push
ficomp
ja
lahf
xchg
test
mov
cmc
pop
xchg
call
fst
in
inc
push
jl
mov
push
xchg
(bad)
xchg
iret
dec
clc
add
cmps
ins
xor
aad
cs
push
dec
enter
inc
lds
(bad)
jae
cdq
int3
imul
sar
mov
mul
jl
pop
jo
mov
ret
lods
xchg
mov
adc
mov
fnstenv
lea
aas
inc
mov
jbe
shl
scas
xchg
bswap
mov
xor
idiv
repnz
push
sub
neg
(bad)
adc
cdq
xor
sub
scas
cwde
in
sti
repz
hlt
fmulp
mov
mov
call
bound
inc
fisttp
in
push
ficom
dec
popf
ja
mov
shl
sahf
add
jecxz
sbb
add
push
or
pop
dec
pop
bound
cwde
inc
dec
xchg
leave
pop
fcmovne
int
shr
test
pop
push
movs
sub
mov
cs
or
mov
scas
mov
pop
scas
ret
mov
xchg
cmp
pop
push
ret
fincstp
inc
cmp
rcl
test
and
sbb
cld
adc
or
and
mov
pop
or
cmc
retf
cmp
inc
push
cmp
push
dec
dec
pushf
cmps
or
in
imul
push
cmps
pop
and
test
pop
pusha
mov
and
(bad)
ror
mov
imul
lea
cmc
lods
cmc
and
in
in
retf
scas
cmc
xchg
loop
push
push
fnstenv
lods
cmp
jecxz
and
in
mov
jge
faddp
lods
cdq
fisttp
daa
pop
or
into
rol
jbe
jmp
call
mov
push
xchg
sar
sbb
pop
dec
inc
xchg
movs
jnp
ins
js
retf
mov
mov
ja
stc
retf
adc
mov
dec
shl
mov
(bad)
arpl
inc
jae
nop
rol
and
adc
adc
cmp
inc
sbb
test
or
gs
sbb
sti
add
push
sahf
(bad)
pop
and
in
ds
pop
mov
and
cwde
fisttp
jmp
shl
mov
arpl
test
mov
xchg
pop
repnz
push
lea
xchg
out
or
in
dec
push
icebp
cld
xchg
movs
add
and
adc
xchg
pop
add
ret
pop
js
xchg
shr
mov
mov
lods
push
cmp
call
retw
ja
add
popf
dec
xchg
ja
gs
mov
adc
adc
leave
xor
lods
stc
fiadd
scas
sub
repz
call
inc
mov
sub
xchg
pop
jl
xor
stos
mov
push
pop
xor
jne
ret
cmps
or
inc
mov
call
add
mov
fisubr
xchg
and
inc
popa
stos
pop
cmp
bound
out
sub
jo
mov
cmp
mov
sbb
add
retf
xor
fisttp
mov
test
mov
lea
shr
xchg
xchg
sbb
pop
inc
mov
xchg
cmp
popa
iret
mov
imul
(bad)
jecxz
out
mov
or
pop
fsubrp
gs
jp
dec
jo
jecxz
push
jmp
shl
dec
std
and
icebp
sti
in
cmps
call
test
dec
loopne
inc
jb
jmp
push
(bad)
mov
jmp
pop
imul
mov
iret
sub
out
push
stos
cs
not
jns
xchg
ja
mov
adc
retf
jae
push
sahf
or
ins
xchg
dec
stos
dec
cmp
mov
xchg
cmp
jl
push
ja
and
jbe
cmp
inc
cli
lock
cmp
cmp
push
adc
nop
(bad)
mov
jl
push
jne
xlat
cmp
adc
daa
and
repz
es
jp
scas
mov
jle
mov
xor
xchg
repz
ret
shl
or
inc
mov
mov
xor
xchg
sub
sub
hlt
in
stos
xor
clc
pop
xchg
outs
imul
push
(bad)
test
xor
push
scas
mov
jo
add
ret
dec
clc
inc
popf
(bad)
push
in
shr
fnsave
ins
mov
jbe
enter
ret
cmc
jne
inc
and
jl
in
push
push
rol
sub
jle
fwait
and
cmps
fsub
mov
xchg
sbb
jae
jecxz
adc
in
lds
mov
cmps
scas
call
(bad)
psllw
mov
pop
mov
inc
jns
ds
imul
pushf
inc
retf
scas
mov
aaa
pop
ret
xchg
mov
inc
outs
fst
jnp
jmp
adc
dec
int
xor
pop
mov
mov
jmp
ins
retf
cmp
fmul
lods
mov
repz
mov
int3
daa
xor
jg
jbe
inc
fwait
push
mov
ss
(bad)
push
gs
and
adc
xchg
jno
loopne
shl
jnp
out
call
push
jns
push
hlt
mov
xchg
push
fdivr
arpl
fist
mov
imul
inc
ins
push
and
inc
fiadd
xchg
or
les
jg
sub
push
mov
ror
mov
outs
pop
pop
lods
fbstp
ret
fimul
pop
(bad)
jg
jl
xor
push
sbb
into
call
xchg
out
add
icebp
mov
shr
xor
and
xor
dec
mov
push
mov
sub
cld
push
hlt
scas
(bad)
sub
lahf
loopne
fisubr
and
jmp
dec
sub
ror
lds
pop
scas
inc
mov
and
arpl
sbb
adc
dec
jo
fs
jge
inc
aam
fxch
aas
and
das
jmp
div
repnz
adc
cdq
out
jne
jg
sbb
mov
mov
stos
pop
pushf
bound
push
(bad)
pop
arpl
jp
retf
sbb
(bad)
js
push
hlt
int3
sbb
imul
imul
cdq
adc
add
mov
xchg
(bad)
adc
fwait
std
fiadd
aam
loope
cmove
push
sbb
xor
mov
cmp
xchg
data16
push
inc
mov
(bad)
mov
inc
ins
jbe
xchg
inc
ret
push
sbb
mov
sbb
popf
jns
push
test
jmp
stos
mov
push
cmp
xor
lahf
scas
add
or
inc
ror
pop
out
aam
test
out
xchg
lods
ins
jno
mov
adc
or
pop
retf
sti
ret
rol
push
hlt
xchg
cmp
add
and
stos
mov
inc
xchg
sti
leave
jae
cdq
call
pop
pop
adc
fisubr
in
xchg
mov
or
sbb
pushf
aaa
and
add
mov
mov
mov
mov
les
neg
call
test
adc
jb
mov
sub
jmp
pop
(bad)
test
sahf
shl
cmp
dec
inc
jg
neg
gs
mov
mov
dec
out
loopne
ja
dec
lods
xchg
xor
out
mov
jns
xchg
jb
sub
or
mov
sub
fld
arpl
ins
hlt
out
int
mov
push
mov
(bad)
out
test
addr16
scas
adc
js
mov
cmp
push
dec
clc
mov
in
mov
jnp
mov
mov
test
fs
mov
aas
mov
sbb
mov
sti
inc
loop
into
lods
dec
mov
dec
rol
out
ret
sahf
test
sbb
adc
pop
and
fild
or
jg
pop
adc
cdq
inc
pop
and
(bad)
mov
std
fistp
fldcw
mov
mov
push
idiv
inc
fdiv
retf
fstp
mov
sti
jno
aas
in
(bad)
mov
rcl
mov
fldcw
inc
sbb
imul
mov
shr
lods
or
out
(bad)
lock
or
fidivr
push
sub
call
or
and
adc
test
sub
mov
xor
add
popa
dec
push
mov
inc
mov
(bad)
int
add
push
jl
push
mov
xor
fcom
cwde
or
dec
and
outs
int
addr16
retf
out
jp
pop
test
ins
leave
sbb
ficom
ins
dec
inc
fdiv
in
jno
shr
sar
cmp
sar
hlt
add
loopne
jecxz
int3
gs
adc
outs
adc
jmp
lock
sbb
cmp
mov
xchg
loope
out
mov
pop
push
loop
sbb
adc
inc
and
popa
retf
push
mov
addr16
into
cmp
rcl
mov
sub
ret
inc
aaa
mov
lahf
fbld
cmp
pop
test
or
js
outs
call
sbb
dec
test
xor
xchg
add
xchg
adc
inc
add
cmc
push
jbe
daa
scas
inc
xchg
pop
out
push
xor
push
repnz
or
push
jp
mov
and
jmp
imul
add
or
stos
ja
jle
lods
aam
cmp
lods
jne
and
mov
mov
rol
xchg
ror
or
xor
fistp
add
lea
xchg
or
cmp
retf
int3
mov
in
xlat
popf
mov
pop
in
mov
add
mov
cli
lea
inc
sub
outs
cwde
pop
mov
in
adc
(bad)
sbb
mov
les
sub
dec
sub
adc
mov
lods
ret
adc
push
test
test
cld
sub
scas
cmp
cmps
push
lahf
ins
push
mov
and
mov
fmul
(bad)
mov
or
and
lea
(bad)
scas
into
push
out
sbb
push
lods
jno
stc
inc
pop
add
or
ror
in
ins
cmps
push
jmp
icebp
lea
push
les
xor
stos
addr16
int3
xlat
aaa
ds
loop
sub
retf
sbb
movs
movs
jnp
inc
jg
sti
dec
mov
lods
cld
inc
dec
dec
in
into
push
ret
dec
mov
cmc
fnsave
sub
pop
es
mov
push
jl
ss
mov
xchg
les
aaa
lds
mov
mov
mov
xor
pop
mov
xchg
cmp
fnstenv
adc
out
mov
ja
fcmovb
inc
in
inc
fidiv
lea
add
fdiv
stos
or
pop
mov
add
ins
popf
inc
pop
xor
cli
add
mov
and
jae
dec
aas
jp
call
ret
scas
inc
stos
inc
popf
stos
and
mov
inc
inc
pop
mov
mov
and
arpl
cmp
cwde
cwde
and
ja
ins
fiadd
inc
mov
mov
mov
sbb
push
pop
or
jo
sbb
iret
xchg
cmps
or
pop
dec
lahf
inc
add
add
data16
jp
fist
pop
adc
mov
mov
fisubr
mov
mov
cdq
fcom
popa
sbb
popf
(bad)
std
mov
mov
push
pop
cmp
pop
push
push
xor
repz
or
mov
dec
ret
movs
sbb
or
lahf
mov
and
arpl
je
pop
dec
cmp
and
scas
lds
and
inc
leave
pop
mov
inc
and
sub
inc
push
sbb
adc
mov
or
das
dec
daa
jae
push
idiv
mov
or
enter
iret
outs
mov
sbb
sub
jge
stc
movs
add
test
aam
(bad)
pop
pushf
cmp
call
leave
pop
mov
imul
and
sti
xchg
and
lahf
jmp
lds
hlt
dec
iret
cli
push
add
dec
in
or
mov
arpl
mov
shl
scas
pop
scas
jbe
cwde
fdivr
inc
xchg
(bad)
aaa
pop
ret
jmp
mul
mov
mov
jl
movs
addr16
add
in
shl
mov
adc
loopne
push
popa
shl
push
popf
mov
cld
cmp
add
xchg
or
jecxz
and
add
mov
retf
pop
imul
pop
dec
test
iret
push
clc
daa
xchg
sbb
or
sbb
aaa
retf
jne
xchg
inc
rcl
mov
mov
call
pop
loope
sar
movs
arpl
popf
clc
mov
fiadd
(bad)
xor
fidiv
mov
rcr
xchg
xchg
xchg
mov
es
inc
iret
mov
sti
inc
sub
mov
dec
sub
popa
cmp
gs
lds
push
jbe
ins
aam
icebp
leave
sbb
loop
mov
dec
push
bound
(bad)
(bad)
stc
mov
xlat
push
inc
jle
test
pop
scas
(bad)
(bad)
arpl
jp
and
inc
sub
fimul
enter
jmp
push
sub
fld
mov
jno
xchg
js
jns
ret
outs
arpl
or
mov
lods
mov
mov
add
loopne
sub
clc
jae
movs
push
(bad)
leave
pop
(bad)
sbb
push
add
cmp
les
popa
mov
and
addr16
mov
adc
jnp
sbb
retf
ret
js
pop
stc
std
or
sbb
fimul
push
lock
cld
mov
push
pushf
ins
inc
cmps
nop
ins
push
lock
sti
bound
call
sub
popa
mov
popf
int
push
pop
adc
cmp
push
xchg
(bad)
jo
mov
loope
cwde
lock
mov
and
push
sahf
mov
in
push
adc
xchg
adc
iret
mov
call
sbb
jecxz
jnp
out
imul
mov
inc
or
(bad)
daa
cwde
hlt
pop
push
cs
dec
jb
jle
push
shl
dec
ror
jp
cmp
mov
push
and
scas
jmp
mov
inc
pavgb
adc
shr
pop
(bad)
(bad)
and
(bad)
or
not
mov
daa
fistp
and
and
push
test
cmp
xchg
(bad)
and
dec
or
cmp
pop
and
jb
nop
aas
dec
into
mov
xchg
rcr
push
inc
mov
out
gs
daa
mov
fwait
mov
mov
test
mov
fstp
in
pop
mov
scas
out
cmp
xor
jle
fxch
xchg
and
int
movs
add
out
cmp
cli
mov
jmp
jno
(bad)
aam
xchg
neg
xchg
mov
stos
outs
push
popf
jno
mov
mov
dec
hlt
ret
and
(bad)
pop
mul
scas
jl
push
(bad)
in
(bad)
pop
fild
dec
jbe
dec
mov
add
inc
lods
mov
pop
(bad)
push
sub
cmp
add
dec
add
outs
mov
scas
lds
mov
push
pop
scas
imul
sbb
xor
jne
push
int3
xchg
out
(bad)
jbe
fcom
pop
jmp
add
inc
rcr
xchg
pop
out
sbb
(bad)
sahf
aad
neg
int3
cmp
push
jecxz
cli
loope
arpl
imul
shl
data16
out
ins
cmp
mov
popa
and
push
push
fcomp
test
cli
int
add
fld
lods
ss
sbb
and
jno
pop
jp
add
ins
arpl
or
les
xchg
icebp
sbb
cmp
mov
cmps
or
adc
test
into
repz
sub
(bad)
fs
cmp
(bad)
push
ds
cmc
pop
in
(bad)
retf
dec
inc
repnz
sbb
addr16
mov
push
inc
adc
ja
cmp
in
push
jmp
inc
sub
jl
(bad)
pop
or
fs
pop
popf
inc
mov
repz
inc
stc
cmp
xchg
jne
sti
cmp
scas
mov
fild
inc
and
arpl
imul
loope
daa
push
mov
or
xchg
inc
inc
pop
fs
and
sub
popa
das
sub
fs
or
fidiv
lahf
or
xor
mov
call
mov
fldenv
(bad)
lods
popa
into
pushf
cld
lds
lods
hlt
stos
xlat
push
add
push
cmp
jecxz
bnd
jbe
call
sub
xchg
pop
mov
cli
add
repz
sbb
xchg
adc
movs
xchg
data16
lods
xor
xchg
jg
xor
xchg
mov
scas
sar
stos
sahf
and
retf
retf
fiadd
dec
adc
add
xor
mov
sbb
adc
test
pop
fcom
mov
ss
fld
and
jnp
rol
jae
fst
daa
call
enter
add
les
sub
out
pop
add
inc
mov
xchg
add
aad
lock
dec
scas
xchg
xor
sub
mov
push
pop
hlt
clc
ret
in
fild
or
push
test
pop
add
movs
cwde
push
daa
retf
xchg
ja
fisubr
in
dec
ret
fcom
jp
mov
sub
sub
xchg
(bad)
push
inc
sbb
adc
popf
inc
test
ss
inc
jno
je
int3
push
and
ss
aad
sbb
movs
add
xor
xchg
in
inc
dec
loopne
xlat
rcl
mov
jb
fdiv
mov
icebp
sub
jmp
jle
push
push
pop
or
xchg
clc
xchg
inc
and
dec
test
lds
sbb
lods
(bad)
daa
cli
jle
dec
or
(bad)
jb
in
jg
adc
sbb
xlat
out
pop
sbb
push
ret
jmp
adc
bound
aam
cdq
dec
xchg
mov
std
or
mov
dec
jecxz
movs
out
lock
aad
sar
jl
pop
test
sub
out
mov
adc
pop
push
jbe
jb
sub
mov
retf
fnstcw
jne
or
mov
cmp
sub
mov
arpl
add
aaa
mov
add
pusha
dec
jge
(bad)
and
ret
cmp
js
push
cld
adc
and
fwait
and
int3
pop
cmc
fild
lahf
int3
push
cs
int
jno
test
ret
aam
sub
lahf
ja
movs
addr16
fs
xchg
mov
jbe
lahf
cmps
jle
mov
jg
mov
sbb
adc
out
inc
jne
xchg
xor
in
in
jb
test
enter
nop
fisubr
clc
test
add
test
test
out
and
and
sub
cmp
lock
ret
cmp
scas
xchg
mov
movs
leave
lea
fmul
repz
xchg
out
sbb
imul
push
icebp
ja
xchg
jl
enter
test
outs
outs
icebp
pop
jne
xor
rol
mov
cmp
dec
xchg
xor
xchg
icebp
mov
repnz
mov
adc
pop
aas
retf
pop
or
loopne
mov
jmp
cmp
inc
mov
in
jno
outs
mov
push
hlt
js
jle
push
push
pop
or
ret
leave
sti
mov
popa
pop
lahf
aas
push
sub
loope
das
lock
pop
xchg
mov
test
sbb
(bad)
mov
push
fidivr
cmp
loope
aaa
test
dec
xchg
fidivr
xor
push
outs
ret
mov
sub
and
dec
rol
aas
leave
add
xor
cmc
lods
lea
mov
stos
xchg
push
mov
repz
cmp
adc
pop
push
test
or
inc
adc
ins
push
fmul
mov
sub
out
add
(bad)
lock
pop
xchg
mov
and
fistp
pop
pop
add
push
loope
mov
in
push
outs
push
ins
mov
ret
loop
iret
add
je
cdq
aaa
inc
retf
sbb
cmp
sbb
cs
clc
leave
retf
ret
jnp
dec
mov
jp
push
test
sbb
mov
or
inc
mov
nop
inc
mov
cdq
jae
pop
cmp
dec
mov
daa
or
pop
call
lds
fstp
aam
xchg
xchg
dec
in
or
(bad)
jmp
(bad)
lock
enter
out
xlat
icebp
or
aaa
mov
mov
mov
movs
xchg
adc
xchg
cli
inc
sti
add
mov
inc
stos
(bad)
cmp
pop
das
popf
push
or
nop
fimul
clc
je
outs
test
xlat
aas
adc
mov
sti
mov
test
cdq
mov
fsqrt
and
dec
pop
out
adc
pop
jno
jmp
adc
leave
push
je
ins
retf
mov
mov
mov
mov
mov
in
(bad)
jl
cmp
pop
bound
shl
test
pushf
xor
cmp
jge
aas
lea
or
or
fdiv
pop
adc
sub
loopne
retf
sbb
mov
sub
xor
push
mov
fldln2
(bad)
push
cmp
stos
jp
inc
out
inc
mov
sub
inc
mov
(bad)
mov
push
xchg
imul
jmp
sub
fwait
outs
push
pop
inc
push
jb
jmp
jae
xor
bound
(bad)
int
or
mov
xchg
cmps
int3
cmp
sub
mov
push
xor
fwait
sub
ret
dec
inc
enter
jle
inc
ins
enter
mov
sbb
cmp
in
jno
sbb
xchg
sbb
pushf
lods
mov
test
into
inc
add
fucomi
arpl
sub
mov
mov
and
mov
dec
cld
pop
mov
dec
pop
stc
ins
sub
pcmpgtd
sti
lock
mov
loopne
push
mov
dec
mov
add
add
cmp
js
mov
xor
int
pusha
jge
xchg
xchg
cmovle
gs
dec
ret
enter
(bad)
cmp
out
and
cli
clc
leave
cmps
es
jnp
bound
xchg
or
xchg
mov
xchg
or
clc
int3
and
das
iret
ds
ins
test
adc
cld
movs
mov
movs
int3
or
arpl
in
movs
fwait
adc
ret
xchg
in
fisttp
adc
inc
popf
dec
push
scas
scas
adc
adc
xor
fxch
shl
sub
js
dec
(bad)
call
dec
mov
sbb
xchg
adc
test
(bad)
cmp
mov
adc
inc
scas
shr
cld
mov
cli
mov
mov
push
sub
jg
cmp
or
xor
or
mov
rcl
pop
jnp
dec
lods
lock
jle
fidivr
dec
div
cli
fist
mov
mov
jg
inc
sub
push
cmp
(bad)
ffree
inc
or
and
or
std
mov
mov
stos
jmp
imul
in
jno
clc
or
adc
(bad)
jns
outs
add
out
xchg
fdivr
test
add
cmp
in
les
cmp
push
fcomp
inc
xor
and
adc
shl
out
int3
test
push
push
jmp
add
cmp
mov
inc
mov
xchg
int
adc
std
popf
add
push
pop
test
test
mov
cs
fld
fisub
mov
lea
pop
jp
or
mov
rcr
jo
nop
fnstcw
test
xchg
push
push
jg
arpl
mov
sbb
mov
sub
adc
(bad)
pop
sub
inc
out
ds
lds
xor
inc
push
test
sub
das
sub
mov
or
xor
and
fist
rol
mov
fidiv
pushf
inc
xlat
fwait
mov
xor
scas
sub
aaa
xchg
adc
es
fbstp
fiadd
ds
pop
mov
and
scas
(bad)
popa
pop
sub
fisubr
mov
mov
ret
bound
retf
mov
std
in
sahf
imul
jb
or
push
pushf
ret
loop
xor
pop
pause
dec
push
cmps
inc
sbb
les
mov
dec
iret
xchg
movs
test
sub
mov
aad
dec
jle
add
sub
cmps
pop
movs
or
rol
sbb
xchg
sub
repnz
jmp
sti
adc
stos
call
imul
xor
sbb
push
sahf
add
sbb
ret
mov
sbb
cli
iret
lock
jmp
clc
popf
out
mov
repz
jmp
lods
mov
gs
sbb
cmp
test
jae
cmps
dec
add
xor
fxch
push
or
mov
(bad)
stc
mov
loopne
mov
sbb
xchg
stc
xchg
fisubr
outs
or
sbb
xchg
push
cmp
cmp
adc
xchg
stos
movs
mov
jle
push
and
jnp
shl
mov
cmps
cmp
daa
dec
cmp
mov
cmp
fdivr
pop
jno
daa
jmp
mov
ds
aaa
test
xchg
mov
sbb
scas
cdq
jne
(bad)
das
add
inc
sub
inc
test
call
push
push
sbb
out
pop
das
pop
lods
xchg
cmc
call
fnstcw
xlat
xchg
cld
enter
jbe
popf
mov
sbb
or
ret
sbb
test
pop
dec
sbb
cmc
outs
inc
mov
(bad)
add
in
mov
shr
adc
imul
mov
js
inc
mov
mov
xchg
xor
jns
daa
into
nop
ja
das
pop
add
repz
xchg
jb
or
in
in
(bad)
xchg
mov
dec
loope
mov
pop
outs
in
mov
mov
ror
sbb
jbe
loope
ins
dec
mov
inc
mov
aad
maxps
jbe
lods
adc
enter
test
jb
js
jnp
jmp
clc
mov
mov
aam
pop
fcom
addr16
in
cdq
sub
cdq
std
fcom
mov
fimul
test
enter
push
cmps
mul
xchg
jbe
repz
sub
push
adc
nop
or
pop
div
cdq
cmc
loope
pop
call
push
(bad)
jo
mov
sub
ret
call
scas
adc
stc
sahf
jg
adc
popa
in
push
dec
outs
mov
mov
cmp
leave
enter
outs
mov
xchg
pop
cmp
mov
movs
imul
pusha
cmp
mov
jns
test
cdq
fs
dec
aaa
imul
adc
shl
mov
sbb
xor
mov
jg
outs
adc
clc
sub
pop
int3
je
stos
retf
xor
dec
mov
pop
fimul
xor
into
fisub
xor
addr16
fcomp
push
cmp
popa
ret
fs
mov
sbb
lss
sbb
add
out
push
cmp
and
cmp
jb
add
adc
pop
cmp
mov
or
inc
jno
push
sub
pop
shrd
and
xlat
sub
repz
jb
sub
sar
mov
xor
push
cmps
test
sbb
stc
jnp
or
sub
out
pop
xchg
jecxz
adc
shr
clc
js
pop
fcomp
mov
fisttp
test
add
and
fsub
add
popaw
test
arpl
fwait
push
in
mov
scas
or
pop
cdq
xchg
dec
movs
data16
jae
lds
je
fild
xchg
enter
fsubr
je
je
dec
add
or
ror
lods
jle
jp
pop
fucom
xor
pop
cdq
lahf
push
repnz
xor
movs
dec
int3
cdq
sub
fcomp
sub
xchg
or
jmp
imul
pop
lea
out
lock
add
push
mov
aaa
sub
loope
lahf
mov
pop
cwde
xlat
mov
xor
std
cmp
mov
mov
mov
mov
mov
cmp
xor
ret
mov
iret
call
xchg
in
rcr
in
mov
inc
retf
enter
cdq
pop
mov
out
out
ret
cmp
xchg
packuswb
loop
sub
shl
sbb
test
or
pusha
xchg
ds
mov
pop
popf
fidivr
cmp
js
arpl
sar
scas
cmc
pushf
or
in
in
dec
or
and
jae
daa
(bad)
nop
aaa
fcmovne
into
rcr
or
test
jle
and
mov
retf
mov
adc
push
leave
cs
ins
aad
mov
mov
jmp
bnd
js
mov
fsubrp
and
pop
call
push
mov
dec
and
in
jge
ret
push
fnsave
outs
dec
mov
inc
or
call
fwait
xor
in
hlt
mov
mov
inc
dec
or
aas
test
cwde
xor
ins
adc
inc
aam
jg
mov
je
ss
jns
add
add
lds
xchg
fdiv
sub
adc
mov
mov
jmp
ins
and
sbb
cmp
popf
mov
psraw
push
fist
or
popa
call
std
xlat
mov
dec
pushf
add
mov
lds
cmp
rol
xor
and
xchg
bound
xchg
jge
mov
mov
mov
imul
fxch
aaa
mov
jle
inc
shl
loopne
fnstcw
and
into
(bad)
pop
cmc
add
pop
push
sub
sbb
loope
outs
jg
mov
and
out
fstp
into
and
and
(bad)
(bad)
mov
sbb
or
add
jecxz
add
cdq
jl
test
pop
js
sub
xchg
lds
pop
xor
inc
jae
adc
pop
neg
dec
adc
outs
mov
leave
jbe
ficomp
(bad)
mov
pop
cmp
push
ds
jle
out
mov
sbb
sti
into
push
loop
mov
fidivr
mov
adc
adc
aad
lods
cmp
mov
mov
pop
out
adc
sub
addr16
rcl
int3
movs
test
mov
ret
cdq
pop
aaa
stos
jge
scas
pop
inc
mov
test
adc
ror
cmp
fsubr
into
push
sub
jp
(bad)
bound
push
mov
adc
cmp
fwait
out
outs
mov
add
movs
out
out
movs
adc
rcl
(bad)
fdivr
sbb
lds
pushf
jle
mov
and
push
int3
fld
out
in
xchg
retf
mov
repz
cs
pop
dec
fmulp
js
test
and
mov
mov
repz
test
int3
jnp
mov
div
stos
in
sbb
bound
dec
aad
cs
cs
dec
addr16
iret
fidiv
lahf
cmp
sub
jno
les
or
add
jno
out
or
inc
out
cmp
push
mov
jb
jb
mov
jecxz
sbb
jns
leave
outs
sub
icebp
or
push
sbb
add
xor
ja
pop
xor
test
push
sbb
and
retf
popa
cli
fwait
xchg
bound
or
jb
pushf
hlt
icebp
cli
je
add
add
movs
lds
mov
add
sub
mov
out
gs
pop
imul
sbb
xchg
jg
mov
cmp
mov
sbb
loope
loope
(bad)
arpl
(bad)
int3
adc
xchg
inc
xchg
cmps
(bad)
and
jne
loope
mov
jecxz
aas
inc
inc
dec
repz
mov
cdq
and
retf
jb
jl
lods
or
mov
ins
xchg
arpl
test
ss
ror
jne
cmp
jno
xchg
mov
inc
test
(bad)
adc
cwde
jbe
clc
aas
inc
jo
cli
mov
jb
cdq
stos
ja
dec
fistp
cmps
dec
dec
in
in
fidivr
ror
push
xchg
movs
xlat
dec
(bad)
sti
inc
sbb
ret
sub
(bad)
xlat
clc
lahf
out
into
and
stos
js
dec
jle
cmp
jbe
std
xor
enter
movs
outs
and
ins
pop
(bad)
lods
xchg
dec
(bad)
scas
inc
mov
mov
sub
xchg
inc
xor
adc
add
add
test
imul
stos
movs
dec
mov
lods
xchg
bound
mov
and
stc
mov
dec
mov
retf
mov
push
mov
into
pop
sub
add
lods
fldcw
sbb
inc
ficomp
aas
bound
xor
sub
sahf
dec
inc
mov
jo
xor
push
aad
lahf
test
pop
data16
in
and
dec
and
imul
and
mov
cs
div
mov
into
and
in
mov
jne
sbb
(bad)
les
xor
xor
stos
add
into
sbb
xchg
sub
push
rep
sub
mov
sub
icebp
jmp
sub
in
jmp
or
fsub
push
jp
aad
push
out
popa
cmp
cmp
mov
rcr
sahf
bnd
jno
(bad)
retf
movs
(bad)
or
sbb
jl
retf
ret
lea
lods
frstor
cmps
dec
cld
jmp
adc
and
icebp
into
lea
cmp
and
repz
cwde
dec
pop
mov
mov
enter
jl
add
inc
jmp
xor
aam
and
out
movs
mov
or
lock
cwde
inc
mov
movs
mov
fisubr
push
je
xor
xor
leave
cdq
jmp
shl
sub
ror
inc
or
dec
mov
jnp
jbe
push
jp
scas
es
shr
pop
mov
out
push
fild
out
iret
retf
jns
xchg
imul
enter
loop
xchg
fild
jl
push
neg
dec
(bad)
jmp
mov
in
xchg
and
out
and
call
test
xchg
pusha
enter
pop
test
ins
mov
mov
jae
xor
adc
out
jno
pop
xchg
call
iret
mov
out
mov
mov
fist
(bad)
in
sti
and
mov
repnz
inc
sbb
push
cli
sbb
or
js
cmp
push
mov
xchg
push
sbb
iret
push
test
or
mov
jmp
fimul
xchg
cld
loope
or
jmp
lds
repnz
es
rcl
mov
fadd
lahf
mov
data16
mov
cdq
inc
mov
or
out
xchg
mov
fimul
neg
add
cld
sub
mov
retf
scas
jb
fcom
scas
cmps
retf
in
pop
les
int3
dec
jb
std
pop
mov
inc
out
fld
mov
inc
cdq
lods
fcomp
arpl
mov
inc
xchg
ja
adc
or
mov
sub
mov
or
iret
es
add
dec
stos
out
mov
xchg
mov
sub
pushf
in
loopne
xchg
jmp
xor
cli
or
scas
mov
jne
push
jecxz
jb
aad
sbb
into
or
adc
xor
inc
cmp
jg
ins
bound
(bad)
or
lds
aam
or
dec
enter
retf
repnz
into
leave
enter
cmc
add
ins
in
mov
sub
pop
jae
call
cdq
xchg
stos
sbb
pop
pop
(bad)
outs
ret
adc
movs
(bad)
pop
pushf
movs
mov
fisub
ss
dec
retf
jne
imul
outs
ins
sbb
fisttp
cdq
in
loope
enter
mul
pop
scas
test
inc
xor
cmps
dec
push
lods
mov
xor
sti
dec
inc
retf
mov
adc
inc
mov
je
xor
inc
leave
test
jae
push
mov
push
mov
clc
(bad)
add
mov
mov
out
fidiv
or
enter
jecxz
mov
loopne
inc
jo
popf
sub
jle
push
(bad)
aaa
imul
das
cs
cmp
lock
and
outs
js
push
test
push
mov
xchg
call
adc
xchg
fs
or
cwde
fadd
adc
lds
fucomi
push
jo
iret
inc
clc
xchg
pop
cmp
cli
in
fsub
adc
popf
fwait
or
xor
inc
xchg
mov
vpextrw
lds
cmp
sub
sbb
sbb
jo
cmp
inc
pop
sub
les
jge
and
idiv
push
in
mov
stos
es
mov
out
lods
mov
push
mov
push
mov
retf
stc
repz
sub
outs
add
push
push
fistp
test
aad
fbstp
jb
xchg
cmp
sub
ds
iret
sub
mov
iret
cmp
(bad)
sysret
cmp
in
cld
push
jmp
leave
iret
inc
fwait
or
sar
push
mov
cmp
sub
xor
cmps
pushf
repz
sbb
xchg
adc
(bad)
imul
out
enter
std
test
cmps
adc
adc
jmp
fwait
push
sahf
arpl
aaa
push
cwde
ret
aad
sub
and
xchg
dec
outs
(bad)
stos
sub
dec
not
lock
xor
sub
jmp
push
mov
push
push
mov
jne
loopne
mul
dec
adc
push
nop
lods
sub
pop
dec
popf
mov
jbe
int3
shl
mov
xchg
cmps
stos
sbb
aam
ret
mov
fmul
lds
pushf
mul
imul
xor
mov
add
or
jb
pop
and
mov
fnstsw
add
or
dec
retf
inc
sar
sub
fst
push
sub
lods
and
push
xchg
icebp
daa
xor
sbb
mov
cli
jnp
iret
movs
shl
jl
fsubr
gs
pop
loop
mov
(bad)
jecxz
dec
imul
xchg
fstp
sahf
cmc
add
sub
jno
and
push
jbe
dec
in
cs
inc
inc
sti
jno
std
sbb
jno
or
inc
add
shl
bnd
lahf
pop
mov
mov
andps
jg
ins
aas
mov
and
cwde
jb
neg
push
stos
je
add
lods
push
pop
mov
push
mov
sbb
fcmovu
or
ins
fsub
add
leave
das
aad
cmp
mov
les
fstp
cmp
mov
imul
mov
pusha
sbb
sar
je
xchg
pop
std
(bad)
mov
stos
inc
imul
xchg
loope
lods
jle
push
or
add
mov
in
mov
pop
mov
cwde
sub
or
pop
adc
pop
repz
sti
mov
into
adc
cmps
mov
adc
adc
adc
inc
mov
pop
mov
sub
daa
bound
pop
loop
imul
xor
sti
inc
add
addr16
sbb
mov
sar
pop
dec
and
mov
scas
imul
ins
cmp
xor
(bad)
and
and
mov
xchg
mov
(bad)
cmp
pop
(bad)
mov
pop
xor
test
mov
xor
jmp
sbb
test
add
mov
scas
xchg
adc
aam
in
outs
stos
xchg
mov
fwait
mov
pop
sub
repz
xchg
dec
iret
mov
rol
and
jno
sti
mov
loope
call
push
lahf
push
movs
fcmove
sbb
dec
xchg
in
scas
fist
inc
jle
movs
mov
aad
scas
call
sub
cmp
retf
or
xchg
mov
movs
mov
add
cmp
js
and
adc
jbe
or
inc
jl
mov
mov
adc
sub
(bad)
sbb
mov
cld
and
inc
in
les
push
xchg
in
loopne
add
sub
scas
xor
(bad)
jecxz
sbb
sub
sti
int
dec
sub
push
imul
mov
xchg
inc
cmp
fucompp
outs
rcl
stos
add
add
xchg
jne
inc
adc
popf
inc
ret
lds
shl
jnp
test
push
rol
sub
jl
inc
mov
rol
data16
out
or
lea
(bad)
std
jnp
jmp
cmp
in
dec
repnz
jno
xchg
mov
and
stos
cmps
cli
lods
repz
inc
pusha
lods
mov
mov
add
scas
fcmovb
sub
xor
pop
outs
cmp
ds
scas
int3
out
mov
lods
call
sub
rcr
jecxz
push
popa
mov
jb
outs
mov
fs
out
fs
or
int
cmps
xor
or
mov
shl
xor
iret
retf
push
cmc
test
push
(bad)
jmp
movs
rcr
cmp
in
in
mov
sbb
loope
mov
sbb
imul
iret
cwde
repnz
leave
test
test
ins
mov
iret
js
jbe
fbld
movs
test
inc
aas
or
jne
ret
and
cwde
mov
out
scas
xchg
pop
mov
mov
cmp
movs
jbe
sub
sub
pop
bound
cmps
mov
jae
dec
xchg
aam
push
movs
jbe
(bad)
or
cdq
sbb
outs
inc
movs
cmc
jl
test
sbb
jge
scas
ret
in
mov
cmp
lock
and
sbb
sub
mov
hlt
pop
popf
xor
and
xor
pop
push
mov
and
add
inc
shl
lods
popf
sti
fxch
lods
js
addr16
mov
cmp
fmul
inc
mov
ror
and
pusha
pusha
jg
bound
and
inc
and
jne
lods
sub
mov
sub
sti
push
in
pop
or
pop
mov
xor
jmp
or
mov
leave
(bad)
in
(bad)
ja
xchg
mov
aad
inc
jl
stos
dec
aas
ins
or
and
imul
pop
into
(bad)
les
pop
mov
add
in
jne
mov
push
into
ins
out
cmp
adc
jne
or
mov
and
call
test
add
push
cmps
push
add
les
mov
inc
stc
push
sbb
pusha
mov
pushf
in
test
sahf
addr16
repnz
test
or
sbb
pop
test
cld
push
cmc
movs
dec
arpl
adc
jbe
jmp
adc
repnz
movs
not
add
cmps
ins
sub
cmp
rcr
sahf
test
dec
sbb
cmp
cwde
adc
push
xor
xchg
test
mov
hlt
xlat
mov
xchg
in
push
push
enter
adc
add
jg
adc
in
jmp
aas
into
sub
push
repz
mov
movs
sbb
pop
xor
js
ror
and
jb
mov
and
push
scas
jge
adc
fwait
cmc
bound
ret
adc
xor
fcom
and
fsub
ds
movs
in
inc
cmp
or
adc
push
inc
and
jle
sahf
dec
jne
shr
pop
xor
push
push
cwde
call
movs
fbstp
cmps
loope
into
sub
das
mov
dec
gs
pusha
pop
pop
push
xchg
xor
aaa
fild
test
push
jae
jnp
aad
dec
adc
adc
xchg
mov
sub
call
cmp
add
mov
pop
jmp
mov
jl
fpatan
aaa
mov
hlt
mul
test
cmp
daa
inc
lahf
or
int3
test
fs
aas
cdq
pop
clc
test
xlat
aad
jge
test
sub
jo
jg
iret
add
ret
pop
fs
sub
lds
lahf
sahf
pop
outs
sub
jnp
dec
sub
sbb
cmp
cs
neg
inc
xlat
repnz
push
movs
movs
(bad)
mov
push
or
jecxz
call
imul
clc
dec
jmp
mov
stc
pop
sti
jae
dec
dec
in
int3
(bad)
jbe
and
mov
jns
loop
lds
mov
lock
push
push
(bad)
sub
std
loope
aad
lods
xlat
jnp
xor
mov
pop
xchg
pop
aas
xor
(bad)
ror
add
ss
pop
loop
xor
or
std
imul
mov
pop
mov
ja
test
(bad)
sbb
dec
out
xor
call
xchg
add
addr16
or
xor
or
pop
es
iret
cmp
call
pop
loopne
xchg
dec
dec
ds
bound
jl
lds
popf
shl
stos
test
jno
dec
cmp
mov
movs
push
jb
loopne
ret
cmp
daa
adc
(bad)
pop
movs
jge
add
push
outs
jb
stos
into
test
leave
or
or
pop
cwde
dec
fwait
inc
adc
sbb
and
fcmovb
xchg
sti
les
jmp
push
retf
popa
cli
dec
and
in
and
(bad)
dec
loope
lahf
xchg
sub
scas
dec
sti
and
stos
cmps
loop
leave
sbb
repz
mov
pop
mov
repnz
outs
mov
jp
ret
xchg
retf
nop
mov
into
pop
add
add
jae
and
dec
div
in
push
mov
mov
push
retf
pop
test
mov
xor
pop
retf
enter
mov
xchg
ja
dec
xor
and
imul
dec
dec
mov
mov
es
add
int3
in
push
stos
inc
pop
dec
and
rcr
jae
aaa
stos
stos
mov
out
xor
xor
mov
push
(bad)
jl
mov
retf
inc
push
pop
dec
mov
jno
mov
and
xor
and
mov
dec
aam
rol
inc
mov
in
dec
add
shl
and
lds
das
jecxz
int3
div
bnd
lods
ins
das
fidiv
in
(bad)
mov
imul
outs
lahf
xchg
dec
mov
sub
and
ss
pop
and
inc
ret
xchg
mov
inc
and
cli
cmp
xchg
sub
push
rsqrtps
jbe
les
jl
ror
fcom
dec
out
retf
imul
push
hlt
push
cli
push
imul
in
inc
fmul
cld
and
cdq
dec
jae
(bad)
in
pop
mov
and
in
call
in
loope
cmp
sti
sub
stos
pusha
movs
mov
push
outs
ret
stos
pop
add
push
mov
sbb
es
popf
cs
push
or
out
inc
imul
(bad)
aas
data16
repnz
pop
inc
ret
xchg
aad
dec
jmp
dec
dec
sub
fidivr
ins
dec
adc
fwait
pop
dec
cmp
mov
outs
nop
sub
jne
inc
sub
retf
or
cld
cs
mov
cmp
xor
push
pop
xchg
add
dec
nop
shr
and
xchg
data16
xchg
cmps
repnz
das
pop
mov
add
cli
lods
inc
push
aam
add
push
imul
not
stos
and
hlt
mov
mov
sbb
push
and
not
xchg
lods
cmp
leave
lahf
push
sti
and
gs
sub
jbe
xor
add
std
mov
jbe
inc
mul
mov
dec
jmp
fmul
lods
mov
mov
push
sbb
test
into
sbb
and
adc
cmp
lahf
push
sbb
ds
or
popa
mov
lock
mov
dec
hlt
cmps
pop
xor
xchg
jmp
pop
push
(bad)
lea
shl
(bad)
or
jno
or
mov
shl
stos
sub
inc
pop
das
push
popa
fldenv
adc
mov
lea
das
adc
dec
shr
mov
or
rcl
add
rcl
cmp
in
fwait
out
ins
mov
lahf
pop
(bad)
adc
(bad)
jmp
jne
or
jb
mov
sbb
sahf
outs
mov
lods
jmp
mov
add
push
push
dec
mov
mov
inc
inc
add
ss
pop
mov
sub
inc
ficom
adc
fild
add
fisttp
(bad)
sub
add
pop
imul
rol
mov
js
scas
clc
cmp
xlat
fs
pushf
pop
test
ret
scas
and
pop
dec
sub
mov
mov
push
(bad)
les
inc
(bad)
call
iret
loop
push
sub
enter
jl
xchg
and
(bad)
cld
mov
or
in
pusha
int3
sahf
rcr
out
cld
mov
adc
push
mov
mov
pop
cs
mov
out
data16
retf
retf
or
adc
int
xchg
jge
je
mov
add
lahf
dec
arpl
inc
cmp
cmps
jbe
mov
das
popa
sbb
jg
xlat
and
iret
push
cmp
fcmovne
in
daa
scas
mov
xor
dec
mov
pusha
cmp
out
and
dec
test
push
pop
jmp
fiadd
pop
add
push
pop
mov
ret
cli
cmps
ret
popa
ror
push
xor
push
and
ins
sbb
vandnps
push
retf
call
mov
cld
cwde
lods
add
push
ficomp
inc
mov
sub
lds
sbb
shl
sbb
sub
cmps
es
cmp
mov
aas
nop
std
fmul
(bad)
js
sahf
fbstp
pop
adc
in
sub
dec
les
(bad)
fldenv
frstor
mov
lea
fmulp
sbb
and
mov
mov
push
add
pop
xor
push
hlt
push
scas
arpl
or
jae
inc
push
pop
loope
mov
add
addr16
fisub
push
es
cs
pop
jae
sti
mov
push
les
or
test
popf
jmp
retf
cwde
xchg
adc
cmps
pop
mov
and
ins
rcl
or
int
jae
dec
out
jg
(bad)
fist
inc
xor
push
cmp
pop
and
add
fwait
ret
jge
icebp
adc
xchg
xchg
out
or
add
mov
xlat
sbb
icebp
shl
jb
fs
push
mov
(bad)
fsub
mov
daa
xchg
cmp
pop
mov
dec
mov
xchg
mov
sar
add
jecxz
rol
and
mov
or
mov
mov
popf
jg
sbb
add
aas
push
das
enter
das
aam
dec
pop
sub
jne
repz
push
sub
fmul
add
js
retf
(bad)
test
cmp
cmp
bound
(bad)
in
pop
aad
add
jno
mov
sub
jmp
fsub
aam
xor
(bad)
std
push
out
mov
push
and
pop
scas
call
mov
sbb
lahf
sbb
sahf
jmp
pushf
ss
outs
dec
xchg
add
mov
shl
std
push
cmp
sbb
enter
cmp
and
jmp
daa
stc
ds
cmp
xchg
fbld
call
sub
sbb
in
mov
and
cs
cmc
pop
push
es
xor
adc
xor
aad
sub
bnd
dec
ins
gs
cwde
jmp
mov
or
ror
cmp
retf
jne
jp
test
push
sbb
fcomp
aas
pop
inc
(bad)
js
mov
add
dec
pop
(bad)
out
xchg
push
frstor
lock
push
cdq
xor
sti
add
xchg
xchg
out
sub
test
jmp
pop
shr
sub
lods
sbb
push
daa
add
and
std
push
repz
inc
mov
(bad)
lock
fsubp
mul
pushf
cmp
or
adc
sbb
mov
test
icebp
and
outs
xchg
(bad)
aad
or
mov
fcom
ret
mov
inc
jmp
dec
bound
add
or
xor
adc
outs
imul
cmp
vmovq
inc
loop
js
loop
in
xchg
mov
les
leave
inc
add
xchg
adc
push
xchg
and
vmovaps
xchg
in
xchg
mov
imul
xor
add
mov
jle
es
pop
or
je
repz
aas
in
cmp
and
push
sub
cli
mov
push
movs
mov
inc
(bad)
adc
aaa
mov
dec
mov
adc
xor
out
(bad)
or
pushf
sbb
adc
fldenv
daa
cld
and
sbb
fstp
dec
jp
mov
fdivr
imul
in
js
dec
or
cwde
aad
leave
sbb
std
stc
pop
ret
ffreep
push
mov
and
mov
arpl
mov
sub
add
test
(bad)
iret
call
(bad)
jnp
mov
cmp
cmp
test
pop
mov
dec
mov
loope
into
int
add
sub
(bad)
arpl
outs
pop
leave
lock
fidivr
jmp
shr
out
mov
cmp
sbb
imul
add
xchg
ror
ffreep
jmp
outs
mov
lds
jge
adc
test
push
int3
ret
outs
loop
pavgb
lea
in
outs
add
mov
call
mov
leave
lods
sub
test
adc
mov
int
cmp
(bad)
jbe
fistp
int
jecxz
sbb
int3
sub
les
sbb
ficom
stc
pop
mov
shr
pop
cwde
sub
mov
adc
pop
push
sti
retf
adc
push
jns
je
mov
rcr
movs
es
cmp
push
sbb
mov
movs
sub
inc
repz
mov
mov
jnp
add
retf
retf
push
es
sbb
sbb
lods
cmp
xlat
arpl
pop
arpl
xchg
sar
bound
fnstcw
xchg
cdq
daa
(bad)
adc
int3
lahf
dec
fldl2e
sub
mov
and
pusha
cmp
cmp
inc
jae
retf
cwde
pop
shl
outs
call
mov
dec
jmp
cmps
shr
inc
inc
aaa
xor
mov
xchg
popa
dec
xor
sbb
int3
xor
aaa
add
jmp
mov
je
pop
in
xor
add
shl
retf
mov
and
les
cmp
mov
test
in
(bad)
les
sub
jle
cmc
ins
sbb
cmp
mov
cmp
aaa
nop
inc
add
xlat
adc
lahf
lds
adc
mov
into
(bad)
pushf
dec
and
call
cmp
std
aaa
daa
call
push
mov
xor
inc
les
dec
mov
xlat
not
pop
loopne
lea
fisub
xchg
mov
xchg
test
(bad)
jmp
call
mov
adc
shl
bound
cmp
add
pop
sub
or
sbb
pop
jbe
lahf
inc
pop
retf
jne
sbb
popf
add
cwde
xor
cmc
es
xor
ja
jnp
(bad)
out
ja
sbb
aaa
stos
js
ins
mov
dec
add
out
xchg
xchg
sahf
jl
js
jle
pop
inc
lods
(bad)
aad
sbb
movs
(bad)
stc
cmp
pop
sub
dec
aad
shl
jge
jle
xchg
mov
mov
sbb
ins
pop
imul
jmp
xchg
ja
push
test
dec
sub
add
adc
and
mov
cmp
xor
clc
xor
ins
push
and
xchg
out
cmp
lahf
ins
out
sbb
and
das
fdivr
mov
fucomi
push
stos
rcr
gs
sbb
inc
in
cmp
mov
cmovs
add
ja
ja
(bad)
jnp
xchg
mov
out
and
adc
and
es
pop
dec
mov
pop
stos
dec
ret
dec
and
ja
jge
sub
into
fisttp
fisttp
aas
cmp
adc
sahf
sbb
dec
sub
in
xlat
mov
call
aam
mov
std
jo
enter
and
(bad)
in
sbb
inc
pop
cmps
jne
cmp
pusha
aaa
in
in
mov
les
jno
pop
mov
shl
adc
xor
std
cdq
in
popa
ja
ds
xchg
int3
pop
das
pop
sbb
sbb
out
fbld
scas
mov
mov
test
mov
fwait
xchg
pop
mov
xchg
jg
in
xchg
dec
fistp
shr
std
adc
loope
sbb
rcl
xchg
xor
in
icebp
and
jmp
or
mov
(bad)
mov
xor
jmp
push
jae
inc
bound
aaa
sbb
rol
mov
add
pop
(bad)
(bad)
mov
ret
pop
mov
sahf
jecxz
addr16
pop
and
loopne
pop
sbb
sub
mov
sbb
dec
aam
jmp
dec
dec
ins
or
sar
ror
aam
rcl
jge
jmp
xor
test
ret
add
lods
mov
loope
xor
jge
adc
push
(bad)
data16
data16
xchg
mov
bound
mov
mov
pop
test
sbb
push
aam
mov
or
adc
mov
lods
xor
dec
jmp
sbb
add
cmp
jmp
call
imul
push
inc
daa
pop
jp
in
pop
xchg
lock
stc
jno
inc
push
(bad)
test
bound
sub
mov
mov
(bad)
cmp
mov
xchg
aas
mov
inc
popf
cmp
(bad)
(bad)
and
ins
push
mov
or
mov
movs
mov
pop
mov
psubusw
cmps
sub
cmp
cmps
jecxz
lock
inc
movs
cmp
fwait
retf
int3
popf
mov
inc
xor
test
or
pop
xor
shl
push
xchg
mov
mov
popf
or
fimul
out
(bad)
ja
jns
push
fsubr
xchg
jno
sub
ins
scas
popf
pushf
sbb
cmp
scas
adc
hlt
xchg
lds
pop
jge
arpl
jo
push
fsub
sbb
das
bnd
or
dec
jmp
mov
rcl
mov
ja
add
pop
jl
retf
and
outs
mov
xor
imul
mov
nop
es
mov
adc
pop
arpl
dec
ret
adc
pop
add
xor
mov
dec
ret
mov
jg
imul
mov
(bad)
repz
inc
add
push
mov
ins
cmc
aaa
dec
xchg
xor
pop
lock
inc
push
jl
nop
in
mov
dec
push
js
stos
push
inc
mov
jmp
int
pop
imul
push
xlat
imul
or
sti
jne
push
jns
fimul
stc
mov
mov
or
aas
mov
xchg
mov
lods
push
sub
sbb
or
out
movs
ds
sahf
dec
out
sub
cmps
js
mov
pop
stc
movs
dec
loopne
clc
and
fwait
jns
mov
les
mov
jl
mov
sbb
mov
push
inc
lods
xor
sbb
jo
cmp
jmp
dec
sub
out
mov
sub
retf
dec
cmps
lods
iret
xchg
and
fst
(bad)
xchg
cmp
test
jle
pop
rcr
in
repnz
xchg
stos
add
jae
dec
jns
sar
mov
iret
lds
mov
adc
das
mov
in
imul
inc
sti
movs
pop
sbb
add
aaa
jo
scas
sbb
mov
jae
add
ret
ret
inc
aaa
adc
sbb
or
popa
push
mov
xchg
test
aas
bound
aad
iret
add
add
lods
int3
dec
popa
sub
xor
addr16
bound
push
ds
or
call
imul
shl
push
and
loop
jmp
dec
stos
push
mov
ret
inc
or
in
push
sbb
push
sbb
add
mov
pop
jge
adc
xchg
sbb
cmp
jnp
xchg
je
rcl
imul
and
leave
pusha
arpl
ret
cmp
mov
out
mov
gs
ret
(bad)
addr16
sub
bound
ficom
popf
test
mov
fsqrt
push
das
inc
js
jp
out
inc
scas
out
das
cli
fild
dec
cmps
ins
xor
ret
cmp
loope
and
popf
adc
cdq
sub
mov
xchg
jp
mov
ins
pop
push
(bad)
lds
dec
mov
xor
mov
outs
push
fld
push
mov
pop
movs
fwait
cld
(bad)
or
loop
stos
mov
int3
loop
mov
loopne
xchg
push
adc
jbe
jge
adc
repz
mov
ja
adc
mov
mov
xchg
pop
stos
rcl
lods
movs
mov
inc
push
cmps
xor
nop
mov
into
sub
and
scas
mov
add
adc
jmp
cdq
scas
das
rol
cld
adc
test
mov
xor
push
cli
or
mov
and
(bad)
popa
push
in
jecxz
adc
int3
inc
(bad)
sbb
ins
or
xchg
cmp
jnp
jecxz
fstp
mov
jmp
(bad)
les
(bad)
jp
push
test
push
mov
(bad)
in
out
xchg
push
sbb
inc
inc
ret
jo
pop
mov
sbb
and
mov
sub
cmp
sub
and
les
sbb
pop
test
shr
sti
(bad)
imul
int
jmp
fwait
pop
mov
aas
cdq
sbb
stos
leave
nop
jg
(bad)
fs
dec
inc
jle
pop
sti
pop
pop
mov
sub
sbb
inc
jb
cmps
scas
pop
das
push
icebp
int3
stos
call
push
push
call
pop
test
add
xor
in
imul
rcr
icebp
pop
sub
adc
mov
jecxz
addr16
adc
adc
out
loope
movs
dec
cmps
sbb
lods
out
loopne
mov
test
aam
mov
popa
push
in
rol
mov
jno
outs
js
jmp
je
(bad)
into
and
jns
xor
xor
sub
cmc
ins
mov
ret
push
shr
add
pop
xor
or
stos
mov
sbb
sub
or
mov
out
(bad)
xchg
retfw
push
xchg
inc
pop
jle
bound
inc
cvtps2pi
scas
lea
rol
push
and
and
jae
imul
inc
pusha
or
mov
and
cmc
jmp
and
cmps
pushf
ins
and
cld
mov
push
jae
cmp
mov
pop
xchg
and
inc
outs
out
jns
ror
push
in
icebp
lock
xchg
inc
sahf
retf
add
ret
pop
cmp
mov
xor
sub
in
sub
out
adc
pop
in
push
mov
add
push
sbb
aaa
into
jne
inc
xlat
jnp
sbb
jle
test
retf
mov
aam
out
int
fwait
sub
call
scas
aaa
xchg
out
inc
mov
fild
xor
imul
lods
adc
cmps
aad
fist
xchg
ds
ja
lods
add
xchg
or
test
out
leave
mov
bound
pusha
fistp
mov
adc
push
fld
ins
fisubr
pop
fst
data16
push
cmp
lods
stos
test
movs
push
and
aaa
retf
and
dec
div
mov
ins
mov
ror
jns
add
mov
add
test
xor
jl
mov
inc
aam
icebp
dec
es
and
dec
or
mov
push
xchg
mov
cmc
rcl
mov
rcl
fidivr
fwait
xlat
lahf
lea
in
mov
jge
ret
and
mov
ins
test
enter
sub
sbb
sub
inc
pop
ror
out
add
icebp
ret
into
sahf
mov
fyl2xp1
addr16
sub
xor
(bad)
and
scas
addr16
dec
test
adc
jp
push
movs
dec
or
loope
cwde
repnz
push
and
xor
sub
bound
jo
mov
jno
xchg
aas
gs
movs
ins
pop
icebp
add
jb
mov
lahf
push
push
shl
add
lods
jno
add
add
and
fiadd
cwde
out
push
mov
xchg
ds
add
or
xor
arpl
xchg
push
stc
add
xchg
mov
cmp
xor
jmp
push
cmovae
(bad)
div
xchg
jo
cmps
jo
or
sub
sbb
jmp
ins
mov
or
ins
test
jp
mul
xchg
and
jae
xchg
out
std
xor
in
stos
sbb
push
(bad)
test
in
push
mov
aad
add
ret
sahf
das
push
out
pop
mov
xor
hlt
adc
repz
std
mov
outs
and
fidivr
ud2
test
jmp
ficom
adc
repnz
pop
imul
aad
add
test
bound
fisubr
or
(bad)
out
cmc
dec
inc
xchg
ins
mov
outs
and
mov
push
popa
(bad)
(bad)
nop
and
mov
in
out
mov
mov
fst
mov
and
test
arpl
xor
xor
(bad)
jecxz
jmp
mov
test
movs
pop
xor
arpl
loop
into
stc
daa
xor
lods
arpl
and
fidiv
inc
mov
rdmsr
cmc
hlt
dec
mov
movs
sub
push
(bad)
hlt
and
add
sti
rcr
xor
sbb
sbb
outs
mov
aas
rcr
std
pop
frstor
mov
test
dec
add
lds
mov
fisttp
xchg
loopne
rol
jle
inc
stc
ret
pop
mov
daa
mov
in
push
mov
inc
pop
stos
mov
in
inc
xchg
mov
leave
jle
daa
dec
mov
leave
sbb
retf
mov
rcl
lahf
push
rcl
hlt
outs
sub
jae
aaa
mul
loopne
xchg
or
cwde
mov
xchg
call
mov
xor
inc
pop
jns
sub
sar
mov
movs
cmp
pop
int3
jns
shl
sbb
retf
add
stos
mov
mov
or
xchg
xchg
int
outs
cmp
inc
xlat
pop
pop
daa
mov
add
mov
rol
and
or
leave
arpl
sub
push
in
pop
test
xor
dec
aaa
imul
jno
cmp
xchg
dec
mov
inc
rcl
fsub
jle
arpl
enter
outs
pop
out
add
ds
ins
stos
add
je
lahf
lods
add
push
inc
pusha
and
mov
mov
push
pop
fcom
out
jnp
sbb
mov
or
jns
mov
test
mov
xlat
pop
(bad)
cmp
mov
pusha
mov
push
pop
scas
lods
movs
and
arpl
mov
mov
cld
mov
outs
fs
xchg
sub
int3
adc
sbb
inc
test
ret
and
call
pushf
and
popf
xor
in
xor
fistp
xchg
hlt
mov
cmps
jmp
test
cmps
ins
cld
sub
cmp
cdq
scas
loopne
cmp
in
mov
cs
pop
dec
(bad)
pcmpgtw
cmp
push
out
xchg
sbb
fcomp
call
cmp
mov
mov
in
mov
adc
test
cmp
lods
call
sar
ins
pop
lock
and
dec
and
pop
jo
sbb
mov
popa
fcomp
jo
and
sub
pop
push
cmp
mov
push
push
mov
sahf
and
fs
jle
dec
xchg
add
or
adc
bound
hlt
fdiv
mov
jne
fs
xchg
jae
jmp
enter
icebp
lea
pop
scas
test
xchg
loop
sub
push
mov
pop
xchg
jmp
adc
sub
ds
cld
shr
xchg
xor
pop
movs
scas
push
mov
jg
in
mov
push
mov
std
sbb
xchg
lock
stos
cmps
adc
pop
fsub
dec
in
dec
(bad)
sbb
mov
pop
or
adc
in
mov
test
lds
cmps
mov
pop
stc
mov
cmps
fs
cdq
imul
mov
sub
pop
pop
mov
inc
jl
push
gs
jno
inc
pop
mov
shl
sub
or
mov
movs
inc
xor
jbe
retf
aam
jae
jp
mov
mov
xor
push
in
push
icebp
nop
pop
xchg
cmps
(bad)
pusha
sub
or
sbb
xor
dec
aad
dec
jecxz
(bad)
addr16
test
imul
and
pop
test
sub
mov
push
mov
mov
mov
jmp
inc
aad
jae
sub
call
dec
out
mov
loopne
sbb
inc
xor
aas
std
xchg
shr
in
sbb
push
popfw
adc
sbb
cmps
(bad)
into
popa
sub
fst
xlat
cli
sub
in
sub
in
outs
call
repz
xchg
out
pop
dec
xchg
sbb
push
aas
idiv
cmp
fadd
sub
int3
add
xor
lea
mov
sbb
inc
xor
adc
pop
enter
les
out
mov
ds
jg
lods
mov
imul
stos
mov
sub
push
sbb
and
movs
(bad)
in
movs
fs
movs
mov
stos
fcmovb
scas
mov
cmovge
fsubr
push
shr
dec
jae
into
shr
xor
mov
popa
push
dec
ja
aaa
loope
nop
cli
ins
mov
pusha
into
sahf
xor
aam
mov
in
push
repz
arpl
add
ja
mov
bound
and
pop
push
adc
iret
sbb
test
sbb
pop
jle
push
stos
lods
arpl
bnd
jnp
sub
push
sbb
(bad)
rcl
repz
push
cmp
fld
mov
dec
ss
xchg
daa
mov
inc
push
ret
xchg
jo
fsub
fimul
xor
ret
loopne
push
xor
adc
pushf
rol
retf
sahf
into
fdivr
pop
sti
out
fnstcw
sub
xor
loopne
stc
jmp
test
and
dec
ins
pop
or
or
retf
iret
(bad)
mov
inc
ins
fwait
or
test
fmul
rcl
pop
cmc
dec
mov
inc
push
fsub
loope
add
mov
or
adc
popf
jo
(bad)
sar
jge
cmp
sbb
enter
int
push
or
(bad)
jo
retf
stos
or
hlt
into
sub
imul
push
out
push
jp
push
sbb
shl
mov
add
imul
hlt
cmc
cmp
push
dec
lds
jbe
lock
int
fldenv
or
in
xor
gs
dec
sub
fs
in
js
repnz
and
pop
lahf
sbb
xchg
xor
(bad)
fdivr
and
ror
sub
movs
and
push
dec
adc
sub
pop
movs
cmp
fsub
xor
inc
jo
sub
sar
scas
adc
test
inc
int3
xchg
push
xor
scas
cmp
xor
ret
lea
inc
loop
dec
js
jb
shl
mov
test
ja
adc
cmp
outs
and
xlat
jne
and
xchg
push
movs
scas
lds
imul
test
lods
sbb
mov
cmp
jg
mov
and
fnstenv
dec
sbb
popf
inc
xchg
mov
dec
xchg
out
cmp
jne
inc
imul
(bad)
fld
sahf
jno
shr
push
dec
jno
jg
js
test
ss
adc
mov
pop
sbb
mov
push
shr
cmp
rcr
in
clc
sub
jae
adc
das
or
in
dec
and
in
outs
mov
(bad)
mov
jo
(bad)
jo
cli
mov
or
scas
loope
sbb
adc
je
and
xor
xchg
jg
cmp
shl
clc
or
cmp
xchg
push
aam
add
jnp
fsub
div
in
mov
mov
inc
shl
dec
jg
inc
(bad)
cmps
ret
lea
push
outs
cs
push
cvtpi2ps
sub
jnp
icebp
jmp
mov
lock
movs
mov
mov
sahf
adc
xchg
and
mov
xchg
pop
jecxz
ret
lods
lds
std
ror
rcl
sub
into
jmp
adc
inc
mov
enter
sbb
shl
and
and
jge
js
jns
xor
hlt
fcom
inc
or
add
mov
jb
pop
inc
mov
cmc
or
pop
cmc
or
shl
jae
inc
mov
xchg
pop
clc
shl
jmp
shl
or
or
jg
cmp
adc
ins
fmul
leave
das
movzx
fmul
add
adc
retf
push
and
pop
pusha
rcr
pop
arpl
(bad)
mul
sti
sub
mov
add
aaa
test
popa
aaa
xchg
test
loop
add
jmp
jp
mov
mov
pop
aad
add
jbe
and
inc
dec
xlat
je
enter
movs
jmp
arpl
js
pop
sbb
sbb
lgs
add
and
dec
and
xor
stos
scas
mov
cdq
xchg
fimul
jno
repz
cwde
aad
mov
ret
test
inc
cmp
jg
sahf
int3
test
cs
fwait
mov
lods
inc
and
push
lods
sub
and
xchg
call
repnz
or
fadd
lods
jb
(bad)
jg
xlat
repnz
dec
mov
fidivr
aas
in
pop
(bad)
jo
sbb
rcl
sbb
pop
pop
or
retf
xchg
mov
dec
or
movs
inc
fild
cmps
or
mov
xlat
scas
and
jecxz
mov
lds
mov
mov
mov
dec
scas
push
jl
retf
dec
and
stc
or
xor
xchg
add
(bad)
xchg
sub
xor
fucom
pushf
das
sbb
sbb
(bad)
jge
mov
sbb
or
aad
pop
ja
add
out
push
mov
jp
inc
gs
mov
jge
mov
sbb
stos
and
(bad)
loop
imul
lahf
out
lods
(bad)
stos
rcr
and
popf
pop
xor
cdq
loope
or
retf
jle
cmp
sub
sub
cmp
fcmovnu
loopne
mov
cwde
xchg
pop
pop
push
xchg
jnp
iret
cwde
imul
dec
test
jb
sub
lea
es
jp
inc
xchg
jge
ja
sar
mov
repz
fdiv
xor
push
dec
sbb
stos
mov
ins
sub
and
xchg
(bad)
jecxz
sbb
jmp
enter
adc
mov
dec
fcomp
int3
(bad)
fisttp
jbe
xchg
and
aad
bound
pop
dec
shr
popa
jnp
div
xchg
cmp
inc
pop
add
das
inc
fimul
ffreep
pop
sbb
add
ds
rol
and
jecxz
xchg
idiv
icebp
cwde
repnz
add
mov
or
mov
je
dec
push
mov
xor
(bad)
push
inc
(bad)
mov
pop
mov
clc
mov
stos
fnsave
mov
jmp
xchg
dec
stos
jns
movs
cmc
mov
mov
shl
idiv
inc
cld
das
dec
jmp
movs
adc
clc
dec
mov
xor
cmp
mov
sub
ret
in
xor
push
xchg
sbb
mov
sub
in
mov
mov
xor
or
jns
mov
sti
jo
nop
movs
cmp
mov
sbb
pushf
fucomi
push
inc
aaa
hlt
dec
cmp
(bad)
mov
push
pushf
rcl
mov
es
push
fsubr
ds
push
test
pop
xchg
stos
jmp
or
and
test
sub
(bad)
xchg
push
retf
inc
push
sub
fmul
dec
fs
(bad)
js
push
cmp
inc
sti
mov
lahf
sub
jns
adc
mov
cmps
rcl
xchg
leave
int3
sub
mov
add
call
mov
mov
xchg
push
arpl
cli
pop
or
daa
xchg
aas
xchg
and
mov
sbb
lods
cmps
psubw
std
fdivr
int3
leave
adc
pop
xchg
or
pushf
mov
test
pop
or
imul
add
into
sbb
jge
push
pop
pushf
arpl
sub
in
sti
repnz
mov
dec
jg
int
cld
cld
jmp
lea
xchg
inc
and
into
ss
inc
jle
pop
push
mov
pusha
loopne
push
nop
sbb
ret
dec
imul
iret
jnp
test
cs
sub
loop
pushf
(bad)
neg
das
ds
inc
aam
bound
jne
add
in
add
dec
add
mov
jae
jns
jne
and
mov
mov
dec
cmps
xor
xchg
push
push
mov
or
popf
dec
ret
pop
cmp
mov
inc
test
pop
ins
stos
fcomp
inc
add
pop
jmp
mov
outs
fld
fcmovbe
mov
or
sar
data16
xchg
mov
(bad)
fs
mov
es
sti
aam
mov
sub
jl
mov
push
xchg
popf
out
xchg
test
push
(bad)
mov
push
xchg
aam
mov
lea
mov
rcl
mov
sahf
add
aad
dec
fisubr
aam
sbb
jmp
push
repnz
cmp
cmp
adc
jmp
push
sbb
push
(bad)
mov
xor
sub
repnz
pop
jmp
rol
ins
lds
mov
and
dec
js
aam
ror
icebp
pop
cmps
add
stos
adc
jle
jp
rcr
in
jo
(bad)
jo
dec
outs
fsub
pop
pop
dec
jae
or
call
cmp
jo
call
push
dec
and
inc
pop
(bad)
adc
test
pop
add
push
inc
xchg
jae
ror
cmp
push
pop
xor
pop
push
test
push
push
or
cmp
clc
ja
pop
leave
sbb
push
nop
mov
jo
mov
ds
push
or
popa
popa
lods
dec
mov
addr16
outs
aam
(bad)
cld
cmp
adc
xchg
je
or
fst
cmps
leave
jmp
cmp
(bad)
call
push
inc
mov
lea
imul
cld
cmc
dec
or
cmps
cmps
in
cmp
or
mov
push
fcmove
jno
ret
add
mov
scas
fistp
push
les
jmp
sti
fs
adc
push
xchg
aam
inc
jg
xchg
inc
push
dec
add
mov
stos
sar
and
test
jg
dec
mov
adc
and
imul
(bad)
int
xor
inc
cmps
dec
add
cmp
bound
movs
mov
cmp
jns
out
test
push
mov
cmp
popf
pop
test
mov
fcomp
sbb
call
rcr
psraw
mov
inc
hlt
retf
sbb
mov
into
ins
sbb
sahf
inc
xor
add
jo
jns
mov
push
lea
mov
call
or
hlt
pop
or
sti
popf
inc
cmc
cmps
gs
and
in
loop
fidiv
mov
mov
repz
cmc
test
add
xor
lds
out
push
int3
push
stc
test
sub
jbe
cmp
out
mov
push
mov
cmps
dec
aam
dec
(bad)
mov
retf
cld
mov
mov
popa
sbb
icebp
dec
or
push
jmp
arpl
(bad)
jne
sbb
rcl
xchg
fs
out
lock
mov
jbe
cli
or
out
mov
fs
movs
inc
mov
pusha
adc
add
inc
sub
mov
xor
cs
out
dec
mov
pop
jbe
sub
cmp
inc
mov
cli
mov
mov
jge
icebp
jp
mov
out
(bad)
sub
mov
jb
jmp
arpl
retf
(bad)
push
push
das
adc
daa
out
or
xchg
cmp
mov
push
in
dec
jmp
aam
enter
shl
aas
std
and
sub
sbb
fwait
je
mov
sbb
movs
cli
xor
pop
bound
rol
push
jmp
nop
or
test
or
ins
imul
xor
aas
fcomp
pop
gs
in
out
sbb
nop
mov
fistp
inc
leave
or
mov
jno
mov
push
pop
(bad)
cmp
outs
jns
xlat
pop
outs
ret
out
xlat
push
outs
xor
shl
lds
add
call
outs
test
outs
push
fstp
call
xchg
xor
scas
inc
pop
push
dec
test
cmp
into
cmp
pushf
je
lods
mov
out
std
push
push
or
test
sub
push
lock
mov
xchg
mov
pop
sti
add
retf
loope
dec
mov
mov
jmp
movs
dec
fnstcw
daa
mov
loope
and
out
popf
rcl
xchg
shr
sbb
and
mov
aas
in
or
adc
cmp
jns
and
jecxz
icebp
fisubr
pop
mov
push
mov
mov
je
jo
out
iret
cwde
cmps
sbb
jb
and
in
push
pop
iret
gs
cdq
aaa
cwde
pop
and
xchg
hlt
cmp
ret
imul
arpl
adc
js
add
ins
xchg
cmp
arpl
push
aad
inc
frstor
test
xchg
fs
or
movups
lds
mov
add
data16
push
jmp
inc
mov
(bad)
test
dec
(bad)
aad
bound
sbb
stos
retf
ror
aaa
outs
call
jno
cmp
adc
ret
and
pop
mov
mov
cli
sbb
jle
cmp
dec
xchg
in
iret
mov
mov
and
out
es
sar
test
cli
add
scas
mov
in
and
jp
dec
add
mov
aad
pop
mov
xchg
inc
sub
aas
pop
icebp
mov
pushf
push
sub
mov
inc
push
cmps
sub
int3
fnsave
bound
pop
mov
jbe
pop
ret
rcr
pop
add
push
pop
dec
sbb
pop
cmp
inc
mov
(bad)
xor
leave
retf
cmc
cwde
jo
cmp
ins
add
pop
cmp
mov
sub
dec
or
dec
sub
ss
cmp
pop
xlat
outs
sbb
cmp
mov
add
pop
mov
outs
or
and
leave
dec
mov
arpl
dec
int3
mov
mov
xchg
fdivr
inc
jb
ins
push
inc
push
cmp
add
fstp
int
jle
or
mov
into
loopne
fiadd
pushf
fistp
xchg
test
mov
mov
or
push
clc
cmp
pop
mov
cmp
popa
inc
pop
cwde
adc
mov
mov
xor
xchg
adc
frstor
push
lea
xchg
dec
mov
xchg
ficom
sub
jnp
ret
cmp
xchg
mov
jns
fidivr
pop
xor
adc
ret
inc
ja
repnz
mov
imul
xchg
inc
aaa
aas
es
imul
add
nop
leave
mov
aas
xchg
dec
inc
js
cmp
sti
lahf
pop
mov
(bad)
stc
or
repz
hlt
mov
xor
jp
xor
fcom
inc
out
fnstsw
adc
sbb
ja
pop
dec
in
mov
mov
fcomp
cmps
sbb
mov
push
leave
out
jl
pop
fstp
mov
xchg
mov
mov
test
out
loope
out
mov
inc
arpl
xor
xor
and
ds
aam
mov
cdq
push
adc
jbe
fstp
pushf
or
xchg
ins
or
inc
sbb
loop
mov
mov
sar
clc
out
xchg
pop
ret
inc
imul
shr
add
sub
dec
(bad)
push
retf
out
mov
jbe
imul
ds
dec
mov
mov
lods
mov
mov
push
test
movs
add
repz
clc
pop
test
js
pop
int3
mov
out
pop
stos
ins
loop
pextrw
ja
cmp
into
add
inc
xchg
mov
gs
in
arpl
cli
outs
sbb
sub
and
je
fcomp
jo
inc
add
adc
(bad)
mov
mov
jl
mov
out
dec
xchg
test
or
jmp
and
call
into
ret
jmp
jae
push
je
push
cmp
push
cmp
adc
rcr
cmp
add
mov
lods
jmp
and
int3
jmp
int3
imul
inc
xchg
je
or
and
scas
out
je
lahf
dec
add
mov
dec
and
dec
ret
cmp
jo
mov
setle
les
loope
lds
add
iret
add
(bad)
scas
mov
cmp
xor
test
test
sub
jbe
cwde
push
in
dec
fbstp
imul
aam
add
jo
ret
inc
push
mov
mov
js
cmp
outs
adc
fcom
in
call
add
jp
add
rol
sti
cmp
jns
pop
movs
mov
push
mov
add
adc
add
loop
pop
inc
cmp
mov
into
(bad)
mov
(bad)
xchg
jmp
pop
test
xchg
xchg
dec
test
and
sbb
out
pop
ret
retf
adc
lods
pop
cmp
jmp
addr16
inc
sub
jae
loope
jge
outs
mov
sub
es
or
(bad)
call
je
add
pop
jo
(bad)
cld
cmp
loope
pop
sub
lahf
adc
std
fsubr
enter
add
ins
inc
stos
adc
ins
pop
int
aad
xor
pusha
out
jb
push
xor
dec
xlat
xchg
stc
inc
jle
sbb
cmp
rcl
dec
dec
push
test
jmp
(bad)
jb
outs
inc
(bad)
loop
xchg
jg
dec
inc
dec
into
lahf
je
push
jge
mov
inc
jge
ins
xchg
xchg
scas
push
lds
pop
mov
or
and
dec
(bad)
mov
cmp
or
fcomp
cs
pop
xor
shl
in
xchg
dec
mov
pop
add
hlt
jge
es
imul
adc
aam
add
(bad)
outs
les
stos
dec
out
into
aas
sub
shr
es
mov
mov
or
clc
and
call
and
sbb
adc
std
test
test
out
sub
aas
jmp
adc
retf
add
test
into
loopne
data16
sub
mov
mov
fwait
push
jns
pop
and
cli
cmp
sub
push
pop
(bad)
mov
test
or
or
arpl
test
fimul
xor
jg
rol
ror
(bad)
jne
mov
sub
push
push
enter
push
scas
gs
adc
lds
(bad)
jnp
scas
lahf
mov
mov
popf
arpl
adc
push
mov
shl
std
mov
outs
mov
aam
push
xchg
add
ret
sti
repnz
pop
js
addr16
mov
enter
jle
add
fstp
and
push
xor
dec
das
ins
sbb
push
out
cmc
jo
sbb
xor
mov
pushf
imul
adc
cmp
push
pop
dec
lods
fimul
arpl
pop
mov
vpsubd
js
test
sbb
pusha
jb
mov
sub
pop
fnstcw
iret
xchg
jo
inc
lods
leave
aas
ror
xlat
jnp
nop
fisttp
data16
add
jbe
lods
lock
hlt
pop
js
sbb
push
fiadd
lods
sbb
int3
call
inc
mov
ins
push
sub
fs
xchg
popa
jp
add
mov
adc
sbb
mov
inc
xchg
fist
shl
mov
popf
adc
fimul
scas
sub
sub
cdq
cmp
stc
arpl
inc
and
push
and
adc
jmp
fwait
push
vmread
mov
loopne
std
xchg
shr
pop
jo
das
retf
mov
xor
nop
cmp
dec
jl
shr
ja
lods
sar
inc
xchg
hlt
mov
jb
xor
adc
jb
cmp
push
dec
mov
test
jns
movaps
loope
cli
lds
mov
(bad)
ja
mov
jae
jp
jnp
imul
pop
jo
imul
out
jne
xchg
add
mov
or
dec
out
and
sbb
mov
shl
or
lea
sub
cmp
inc
xlat
cmc
in
ja
movs
test
movs
adc
or
sub
adc
mov
fs
stos
and
cmp
lods
push
lds
jmp
xor
arpl
sub
retf
push
and
pop
into
dec
xor
popa
jns
aaa
loope
dec
push
or
adc
jb
xchg
js
loope
std
or
push
or
jmp
test
pop
cmp
in
ja
and
xor
scas
push
fwait
test
cwde
pusha
cmps
ss
cmps
cmp
fstp
dec
lods
adc
and
xor
pop
or
mov
icebp
push
sub
movs
gs
mov
retf
push
in
lods
mov
cli
sbb
movs
cmp
jp
test
clc
mov
or
rcr
dec
jg
je
inc
push
xchg
outs
jmp
std
dec
inc
test
adc
nop
sbb
add
lds
pop
fcomp
xchg
shl
mov
aaa
mov
es
pop
in
mov
xor
stc
cmps
cdq
ja
stos
icebp
or
fldcw
std
add
inc
out
jmp
or
inc
ror
es
push
shr
dec
xchg
popa
cld
outs
mov
stc
adc
fadd
leave
sbb
dec
mov
mov
sbb
xchg
shl
repz
dec
jmp
pop
scas
adc
adc
jno
imul
int
sub
stos
and
push
test
add
loope
loope
mov
jecxz
arpl
daa
add
cld
and
sbb
pop
into
sub
test
aad
dec
movs
scas
pop
ss
inc
sub
xchg
mov
shl
nop
bound
add
add
in
mov
cmp
xor
sbb
adc
iret
push
mov
and
cli
mov
add
jnp
ss
adc
outs
movs
in
pop
and
mov
fnsave
pop
pop
test
dec
sbb
outs
push
xchg
mov
lahf
mov
xor
push
jae
in
in
xchg
mov
ins
mov
adc
sbb
popa
cmp
sub
dec
xor
pop
push
out
or
neg
xor
sub
fild
mov
push
sti
mov
xchg
icebp
inc
nop
and
adc
xlat
dec
xor
sahf
fldl2t
stos
repnz
mov
shl
(bad)
call
push
fcomip
xor
lods
lods
xchg
push
mov
out
add
mov
cmps
sub
jno
mov
add
outs
add
loop
(bad)
hlt
(bad)
test
adc
movs
aad
cmc
pop
pop
ds
sub
sbb
in
inc
pusha
sub
out
ror
xchg
cmps
repz
adc
add
mov
cmp
xor
inc
bound
push
scas
pop
jnp
or
jne
(bad)
icebp
fucomp
dec
xchg
gs
push
dec
fcomp
jno
pop
lods
(bad)
xchg
mov
aad
out
popf
add
jne
cmps
std
xor
push
out
data16
pop
pop
adc
xlat
jecxz
jmp
pop
push
jno
sbb
loopne
nop
pop
xchg
icebp
rcl
xchg
(bad)
mov
add
mov
mov
add
adc
cmp
and
and
pop
(bad)
jle
jae
push
(bad)
and
inc
or
outs
test
scas
xor
stos
into
aam
jbe
pushf
mov
test
cmp
inc
mov
cmp
sbb
mov
cs
xchg
cwde
add
xor
adc
xor
jae
jb
pop
lock
xor
jecxz
sbb
jl
lods
xor
imul
cmps
lea
mov
xor
sub
mov
fst
cmp
xchg
es
cmc
mov
xchg
fldenv
in
sbb
adc
shl
dec
test
mov
dec
mov
sub
ret
sbb
out
mov
add
(bad)
mov
(bad)
xor
mov
loop
shl
mov
js
ret
nop
jmp
pop
jno
or
jo
mov
cmp
add
mov
cdq
cmp
pop
(bad)
mov
ror
mov
movs
int
add
inc
jno
ins
clc
daa
mov
fsubr
jmp
and
(bad)
cmp
dec
mov
(bad)
rcr
cmp
div
push
mov
push
or
(bad)
sub
dec
into
push
mov
imul
std
dec
and
in
in
sub
and
jl
push
daa
push
push
adc
inc
clc
jge
fnstsw
repz
out
cs
or
aas
pop
cmp
or
retf
mov
dec
mov
mov
adc
mov
add
jne
sbb
sbb
adc
js
cmps
cmps
bound
out
push
les
cli
std
jne
push
mov
enter
sub
pop
xchg
das
ja
push
popa
out
fidivr
retf
sar
jb
mov
inc
mov
mov
pusha
retf
jecxz
loop
cmp
into
mov
xchg
loop
push
sti
cli
jge
enter
stc
add
icebp
mov
pop
clc
fimul
or
mov
in
or
mov
add
push
dec
pushf
and
add
iret
xchg
movs
add
cmp
aaa
pop
push
mov
push
cs
ins
or
inc
add
cli
jnp
jno
jb
and
sub
(bad)
into
lock
pop
push
aad
shr
jne
jne
xchg
mov
dec
inc
(bad)
jmp
jecxz
mov
dec
mov
xchg
push
cs
call
adc
jno
popa
and
loop
repnz
xor
fwait
shl
test
inc
mov
adc
cwde
sub
xor
out
enter
push
jmp
adc
add
arpl
call
aad
lds
sub
lods
mov
arpl
(bad)
(bad)
in
sar
dec
lods
push
cdq
sbb
lea
mov
or
(bad)
jae
or
ins
jl
xchg
add
iret
cld
imul
not
mov
fstp
dec
sbb
mov
setns
int3
dec
fucomi
dec
loopne
inc
dec
dec
push
jp
and
cwde
dec
or
shl
or
mov
mov
mov
jg
in
sbb
and
push
inc
jmp
xor
popf
xchg
jecxz
int3
(bad)
fcomi
add
or
inc
inc
nop
out
test
push
imul
fmul
cmp
lea
cs
pop
adc
inc
lods
mov
jp
mov
pusha
sbb
xor
jbe
daa
lods
sub
push
add
dec
pop
mov
sub
mov
sub
ss
mov
sub
mov
xor
adc
js
popf
mov
test
jl
cmps
and
out
adc
mov
push
rcl
cdq
push
push
ror
test
inc
xor
and
mov
dec
scas
fisttp
xchg
push
ss
and
movq
mov
mov
stos
(bad)
adc
jb
xor
or
pop
outs
or
inc
adc
add
hlt
lea
das
pushf
add
inc
inc
sbb
sub
dec
lds
rcl
xor
mov
inc
outs
ins
cs
sahf
movs
mov
mov
fsubr
adc
pusha
xchg
jo
jnp
ins
ret
mov
xor
cdq
lods
inc
and
pusha
dec
mov
sar
and
cmp
bnd
inc
pop
inc
add
dec
shr
mov
xchg
push
cmps
daa
test
inc
addr16
adc
sub
repz
cmc
dec
mov
retf
push
adc
inc
ss
jne
not
das
sbb
and
xor
xchg
ja
xchg
rol
and
and
jno
in
jbe
paddw
xor
popf
sti
rcr
jb
pcmpeqb
sub
and
out
in
sbb
xor
stos
out
sbb
sub
inc
xor
push
inc
add
fs
iret
mov
inc
shr
xlat
mov
jge
in
inc
mov
nop
shl
test
push
out
addr16
push
jle
xchg
mov
jmp
mov
enter
sti
xor
sbb
fld
fld
aad
mov
push
mov
add
dec
loope
xchg
dec
test
repnz
mov
movs
inc
popa
into
sbb
scas
inc
xlat
inc
add
(bad)
fmulp
aas
mov
dec
dec
and
dec
fist
pushf
call
test
test
mov
mov
(bad)
xor
mul
mov
inc
push
mov
ins
push
inc
xchg
mov
cmp
(bad)
xlat
repz
sbb
xlat
xor
xchg
or
adc
add
xchg
out
aam
loope
call
adc
and
jbe
or
jmp
mov
cwde
scas
in
out
jo
pop
hlt
mov
mov
mov
fwait
dec
xchg
arpl
cdq
jnp
lods
dec
stos
es
ror
call
imul
out
mov
push
and
repz
ret
adc
in
ja
call
pop
mov
mov
inc
jne
jmp
popa
dec
pop
and
sub
mov
jo
dec
int
rcr
inc
jecxz
push
nop
adc
adc
cmp
call
pop
ds
xchg
mov
(bad)
jmp
and
fbstp
mov
dec
fnstenv
mov
mov
test
in
mov
mov
pop
push
cmp
lock
mov
dec
mov
push
mov
jno
dec
ja
pop
and
dec
xor
fadd
jo
test
xchg
fwait
push
ret
mov
sub
(bad)
rcr
arpl
cmp
sbb
mov
or
adc
mov
pop
mov
pop
add
cmp
gs
pop
sbb
outs
push
(bad)
hlt
aam
shl
jno
test
dec
cmp
cmc
adc
sbb
arpl
sahf
test
enter
add
ins
dec
in
add
fisubr
xor
pop
in
ret
leave
loope
mov
adc
gs
inc
pop
jns
cs
cwde
mov
push
retf
and
imul
dec
and
clc
popa
xchg
or
pop
dec
pop
cmps
rol
std
mov
neg
cmp
in
mov
(bad)
iret
cdq
ins
imul
mov
xchg
pushf
push
dec
scas
cmp
jae
fidivr
fild
pop
loopne
pusha
sbb
and
shr
and
js
in
out
jbe
cwde
push
mov
xchg
rcl
cwde
cld
outs
push
arpl
fs
jp
pusha
mov
(bad)
scas
cmp
sbb
mov
lock
cwde
inc
cli
add
jle
cmps
(bad)
out
sbb
pop
jns
and
mov
or
push
mov
icebp
mov
repz
mov
mov
sar
mov
sbb
pushf
call
inc
sti
popa
cwde
mov
add
push
sbb
iret
sahf
aaa
mov
loope
mov
leave
mov
and
loopne
mov
push
daa
mov
jb
popa
pop
packsswb
les
jae
int3
movs
das
and
xchg
icebp
mov
push
pop
mov
fmul
ins
movs
nop
vunpcklpd
pop
mov
sub
repz
ja
test
adc
jge
jbe
inc
ret
add
lods
lods
dec
(bad)
fsubr
cmp
sbb
pop
push
jecxz
dec
xchg
push
inc
dec
xor
scas
ret
sub
mov
jg
add
das
or
shr
cs
jne
sbb
fincstp
xchg
push
xor
test
hlt
test
cmc
jge
mov
mov
in
or
cmps
jbe
push
inc
cli
or
pop
pusha
push
es
push
(bad)
pop
dec
jmp
adc
sbb
add
dec
xor
ja
cmps
movs
sub
xchg
add
cdq
call
pushf
pop
into
sub
push
(bad)
aam
pop
sub
cmp
fmul
push
and
imul
bound
call
icebp
je
(bad)
test
mov
retf
leave
repz
retf
and
lock
fidivr
xchg
xor
dec
sub
mov
mov
adc
(bad)
mov
xchg
or
dec
movs
stc
xlat
outs
int3
xchg
imul
jp
sbb
add
xlat
pop
pop
mov
cmp
mov
shl
push
sbb
daa
out
and
scas
ja
or
in
outs
mov
nop
push
xchg
test
aad
xchg
lods
jns
xor
jmp
popa
mov
retf
jge
outs
fsubr
cmc
test
mov
jecxz
xlat
retf
add
fwait
loope
mov
mov
and
add
mov
lds
pusha
push
pop
cmp
push
or
arpl
xor
js
mov
cmp
jge
jae
pop
in
pushf
mov
call
jmp
jl
jne
jmp
rol
stos
sub
xor
mov
pop
mov
xchg
or
sub
mov
add
stos
cld
mov
movs
inc
not
and
jae
cwde
xor
je
aam
cmp
sahf
mov
fwait
mov
dec
fwait
pop
fimul
test
sub
test
pusha
hlt
pop
repnz
or
retf
xor
ss
cmps
and
int
ins
xor
xor
dec
lahf
idiv
in
and
repz
adc
dec
mov
enter
and
(bad)
xlat
add
enter
int
jl
test
call
mov
add
outs
sub
pop
ret
fidiv
inc
xor
mov
add
sub
pop
retf
pop
inc
or
xlat
push
retf
nop
daa
cmp
stos
aam
pop
(bad)
cmps
rcl
inc
cld
xchg
sahf
dec
mov
adc
pop
rcr
xchg
sub
mov
cmp
add
and
test
in
popf
test
call
mov
sbb
push
fcmovne
pop
in
mov
add
or
sbb
aaa
jmp
xor
outs
pop
ins
retf
mov
fldenv
xor
(bad)
bound
rol
xor
loopne
adc
inc
(bad)
loopne
ret
imul
xchg
fwait
adc
scas
data16
vpaddd
iret
es
repz
adc
pop
cmp
jb
enter
daa
inc
and
(bad)
f2xm1
xor
cmp
jg
push
dec
jb
jne
jge
mov
xchg
jl
outs
or
pop
cwde
stos
std
pop
(bad)
cmps
ret
xchg
(bad)
movs
pop
icebp
out
mov
mov
mov
jecxz
and
stos
arpl
std
sbb
sub
add
mov
xchg
arpl
inc
jnp
fstp
cmc
call
add
popa
fcomp
cmps
in
push
je
push
aad
(bad)
jo
jle
mov
mov
mov
fsub
add
mov
dec
hlt
jp
xchg
push
out
aam
add
test
add
mov
dec
or
in
inc
mov
sar
jo
test
mov
xor
cmp
mov
jns
push
xchg
(bad)
push
xchg
les
rol
nop
jp
retf
not
sub
les
dec
outs
pop
push
repnz
iret
sbb
adc
repnz
cmc
xor
mov
fsub
or
sahf
(bad)
push
fstp
jo
mov
push
sub
sub
dec
push
push
mov
js
ins
pop
add
stos
or
test
xchg
dec
scas
(bad)
aam
es
jbe
daa
das
add
paddb
push
jns
loope
xchg
push
mov
mov
fstp
xchg
sahf
aam
(bad)
ds
cmp
scas
cmc
cmp
mov
mov
mov
mov
or
retf
or
jmp
in
add
ins
jnp
add
or
stc
xchg
cdq
sti
ret
or
cmp
inc
add
mov
sbb
pop
movs
adc
lahf
add
loop
scas
nop
ins
add
fild
sti
es
mov
test
cmp
or
leave
xchg
sti
pop
mov
cmp
adc
xor
jbe
mov
ins
pusha
mov
shr
je
adc
push
sbb
inc
(bad)
hlt
aas
jl
and
int
mov
and
outs
push
fwait
mov
les
sti
mov
call
test
jl
jle
lods
dec
mov
pushf
sbb
mov
out
xor
push
add
inc
cmp
xor
add
or
inc
ror
pop
dec
mov
add
(bad)
(bad)
jmp
retf
jmp
ror
pop
cs
mov
inc
jnp
aad
xchg
in
(bad)
mov
or
mov
outs
aas
ror
inc
adc
jno
movs
dec
cmp
mov
test
lods
add
imul
shl
inc
adc
jb
push
loopne
jecxz
sbb
loopne
test
mov
je
inc
adc
pop
movs
and
ss
cli
mov
cvtpi2ps
mul
pop
xchg
push
fnstcw
aad
rcr
movs
mov
ret
push
adc
inc
or
cmc
mov
and
test
popf
xor
mov
push
push
jg
push
sub
adc
mov
sbb
test
or
test
popf
inc
push
rcl
mov
cmps
sub
push
xchg
loope
jne
inc
daa
aad
mov
or
jp
mov
jae
inc
jecxz
pop
outs
out
daa
cld
cmp
bound
es
neg
sbb
push
add
mul
scas
dec
cmp
sbb
std
movs
retf
pop
test
scas
adc
sbb
xor
dec
es
add
push
mov
push
or
mov
xor
fmulp
stos
cld
or
inc
aam
and
es
inc
push
dec
arpl
mov
imul
jo
xchg
xchg
add
sub
fistp
pop
pop
adc
sbb
and
sub
push
sti
retf
aaa
(bad)
aaa
xor
add
cmp
(bad)
mov
fucom
into
add
or
add
lahf
sub
adc
push
jle
popf
je
pop
imul
(bad)
adc
inc
call
enter
sub
inc
or
add
xor
cs
cld
aad
sahf
ins
faddp
and
mov
cmp
xchg
dec
mov
pusha
mov
cmp
std
fcmovbe
fadd
(bad)
sub
inc
outs
cmp
repz
jge
sub
xor
mov
adc
pop
mov
pop
shl
xor
outs
pop
stc
xor
test
cs
rcr
sub
leave
pushf
into
outs
xchg
ins
retf
mov
pop
or
or
fsubr
int3
or
sub
pushf
or
pop
fwait
jno
rol
mov
arpl
sub
test
stos
leave
xchg
sub
fisttp
mov
xchg
outs
ss
sti
(bad)
sub
repz
add
sub
inc
aad
adc
mov
mov
pushf
adc
repnz
imul
mov
add
gs
push
(bad)
or
fbstp
ins
inc
sahf
cli
xlat
daa
retf
cli
int
aas
inc
(bad)
iret
xchg
jo
sbb
cs
pop
loopne
xor
dec
scas
dec
mov
ja
hlt
scas
not
icebp
(bad)
mov
and
adc
pop
std
mov
aad
fxch
lahf
test
pop
test
mov
addr16
scas
or
mov
adc
fisttp
imul
inc
add
in
sahf
cmp
jecxz
and
ficom
jmp
and
shl
push
cli
xchg
das
in
out
jmp
jmp
nop
(bad)
xchg
fimul
xlat
mov
fbstp
sbb
push
jge
repnz
and
and
leave
arpl
sbb
not
cdq
mov
jbe
hlt
xchg
hlt
xchg
jns
mov
dec
push
das
adc
inc
out
or
lods
je
outs
call
jmp
(bad)
cmp
ret
dec
mov
shl
nop
gs
or
sahf
ja
jb
sar
adc
arpl
nop
out
bnd
fstp
sti
cmp
js
(bad)
mov
das
add
mov
add
and
mov
and
scas
pop
ins
xchg
mov
jmp
sbb
adc
mov
xchg
dec
inc
xchg
test
es
cmp
movs
ret
scas
add
pop
xchg
ins
outs
cmp
fmul
pop
loop
cmp
sub
cmp
cmps
sub
into
retf
pop
or
pop
popa
dec
inc
sub
adc
xor
inc
push
cmp
bound
mov
shl
cmp
mov
cld
imul
sub
test
push
sub
jns
bound
adc
repz
add
xchg
fstp
cwde
sbb
sbb
ins
sbb
adc
jns
mov
xor
push
mov
leave
jg
push
or
sbb
mov
fstp
sbb
test
mov
dec
inc
lds
shr
out
push
(bad)
mov
and
pushf
jmp
popf
mov
push
mov
int
lahf
push
in
mov
or
mov
movs
dec
xchg
push
fld
(bad)
push
fdiv
int3
push
cmps
sbb
outs
lahf
rcr
in
inc
in
repz
jge
inc
push
mov
inc
mov
mov
test
pop
push
pop
ror
xchg
mov
push
mov
push
inc
addr16
or
loope
lods
or
jne
cmp
in
ret
sub
push
shr
dec
push
add
jp
inc
dec
jmp
xchg
jnp
jo
or
iret
mov
adc
mov
and
in
cld
in
or
pusha
mov
(bad)
pop
int
mov
rol
movs
sub
jae
mov
test
stos
mov
scas
popf
sahf
aad
pop
adc
shr
xchg
addr16
mov
test
or
pop
sub
jmp
mov
(bad)
fild
stos
imul
sbb
adc
pop
dec
jecxz
fwait
and
cmps
mov
dec
jo
push
in
popa
mov
dec
add
pop
lea
fsub
lahf
mov
inc
add
xchg
js
scas
popf
mov
sar
push
xchg
scas
mov
into
dec
cwde
inc
test
mov
dec
leave
add
outs
xor
int
stc
les
mov
mov
dec
fdivr
or
iret
addr16
inc
jmp
in
imul
ret
cmp
adc
or
ret
ins
mov
mov
pushf
mov
xor
mov
stc
and
pop
aas
ins
loope
movs
xchg
mov
ds
mov
clc
(bad)
fwait
out
jno
lea
mov
or
jmp
lds
add
adc
out
xor
mov
repz
fwait
rol
mov
test
retf
fs
push
mov
jne
fwait
mov
movs
dec
inc
sub
sbb
xchg
xlat
pop
test
scas
dec
out
adc
fst
cwde
shr
(bad)
jo
cmp
xor
clc
(bad)
into
sbb
call
int
in
stos
xchg
repnz
cmp
push
mov
inc
cmp
ins
ret
test
push
add
daa
ret
and
jmp
out
push
ins
fstp
repnz
mov
add
sti
sub
sub
ja
leave
jecxz
xchg
mov
test
mov
jno
retf
pop
cmps
adc
xchg
into
adc
loop
(bad)
sbb
or
int
dec
in
sbb
pusha
enter
push
jne
jp
jecxz
aad
addr16
xchg
out
fs
pop
jge
push
(bad)
jmp
push
adc
retf
dec
lea
je
sub
push
ja
xor
dec
sbb
mov
jge
or
push
sub
rol
push
or
fimul
sbb
out
cld
xor
cmp
mov
jae
mov
out
and
les
mov
sub
and
cmp
jne
adc
mov
add
in
test
loopne
and
movs
shl
or
mov
outs
jmp
jae
xchg
lahf
push
cmp
inc
int3
das
fbstp
in
aaa
xor
or
mov
fdivr
sub
mov
pushf
cmp
loop
add
jno
arpl
repnz
cmp
pop
xor
or
lods
adc
int
mov
push
iret
mov
test
test
jg
(bad)
int
sbb
ss
cmp
push
ins
cmp
add
ret
mov
xor
arpl
pop
sti
(bad)
or
ins
repnz
test
sbb
and
aad
pop
inc
push
cwde
mov
push
jnp
mov
jbe
mov
mov
sub
lods
cli
fnstsw
mov
and
and
jb
mov
test
ret
or
push
push
icebp
outs
lods
inc
inc
mov
jae
mov
mov
push
dec
mov
mov
inc
imul
aad
inc
xchg
mov
les
das
xchg
cmp
loopne
sbb
sahf
pop
shl
sub
dec
out
add
adc
push
adc
lock
retf
movs
jecxz
adc
xchg
mov
movs
in
outs
test
js
xor
dec
mov
inc
adc
push
xchg
sub
jmp
test
mov
imul
jns
(bad)
mov
stos
and
xor
mov
jecxz
gs
jg
fistp
push
fisubr
pop
enter
test
xor
ins
out
test
xchg
mov
int3
into
cld
jg
push
jg
aas
retf
fldenv
sbb
cmp
xor
push
cmc
mov
es
inc
xor
push
mov
push
mov
sub
cmp
dec
iret
(bad)
jl
loope
push
or
mov
add
(bad)
jo
test
js
jns
push
imul
jg
leave
push
sub
mov
rol
push
int3
faddp
push
loop
in
sbb
arpl
jmp
and
mov
mov
mov
sahf
and
dec
in
adc
sbb
add
ins
adc
add
xor
xchg
lock
std
addr16
or
dec
mov
adc
or
aam
pop
aad
rol
enter
outs
fst
push
mov
lods
stos
sub
sub
sub
push
or
dec
mov
xchg
int
(bad)
cli
or
not
or
jg
ja
cwde
dec
popa
lods
jmp
pop
jb
ins
pop
pop
and
leave
pop
push
or
sub
or
pop
and
sbb
addr16
sub
shl
ret
mov
xor
in
push
daa
mov
xchg
mov
push
sahf
adc
mov
jae
jno
test
push
or
hlt
repnz
sub
jecxz
adc
cmc
stc
dec
mov
ret
push
aam
sub
aam
fisubr
jge
lds
out
into
fsub
pushf
lds
push
lea
mov
in
retf
in
out
xor
test
push
push
xchg
test
mov
inc
sti
sbb
push
mov
jl
das
mov
mov
cmps
mov
mov
fdecstp
nop
aad
sbb
push
and
add
or
dec
les
mov
and
scas
lahf
jg
imul
(bad)
jle
inc
pop
sub
cmp
daa
scas
pop
nop
jmp
dec
jns
xchg
mov
jp
push
cli
and
test
pop
push
sub
sub
(bad)
fisttp
push
push
gs
test
adc
data16
imul
aas
push
in
dec
and
test
adc
into
aam
xor
pop
int3
hlt
std
imul
and
pop
sub
inc
movs
jl
mov
cli
inc
mov
dec
add
add
out
loope
dec
div
pop
add
int3
test
rcr
mov
cwde
and
cmp
inc
sub
into
sub
sub
addr16
jmp
mov
pop
sar
sar
cdq
std
pop
arpl
mov
or
dec
stos
fs
inc
nop
or
jle
fucomi
add
and
jae
(bad)
fdivp
pop
fnsave
imul
adc
fiadd
push
sub
mov
push
xor
inc
repnz
push
xchg
and
loopne
mov
or
(bad)
lock
mov
int3
iret
xlat
jo
mov
scas
pop
nop
mov
jp
ret
inc
cmp
jg
cmp
push
mov
(bad)
xor
xchg
int3
std
and
inc
rcr
cmp
addr16
fistp
adc
retf
fcom
loop
pop
pop
dec
sub
jg
fisttp
ret
pop
jp
xchg
sub
rcl
mov
js
jae
dec
sub
xor
outs
repz
push
data16
pusha
sbb
dec
stos
mov
pop
adc
xor
pop
push
sahf
scas
sar
sbb
or
in
test
mov
pop
dec
pop
lahf
dec
test
jb
(bad)
jno
test
pop
mov
push
xor
xor
hlt
dec
add
not
daa
mov
sub
mov
mov
mov
das
adc
repz
jnp
aad
sbb
retf
xor
std
adc
mov
sbb
add
or
int
bnd
pop
leave
dec
xor
add
hlt
fcomp
lea
xor
jmp
repnz
test
sub
not
js
cmovbe
int
push
jp
test
enter
and
push
cld
cmps
push
mov
lock
pop
mov
fst
cmc
movs
adc
test
adc
pop
outs
(bad)
cmp
xchg
and
es
iret
out
popa
pop
ja
xor
in
inc
jge
jne
or
js
jo
lds
xchg
mov
outs
dec
add
outs
adc
stos
mov
add
cmc
out
leave
push
xchg
out
xchg
or
mov
mov
loopne
jle
data16
or
(bad)
ins
sub
or
xor
out
cli
aam
gs
cld
jae
mov
cmp
xor
cs
mov
mov
sub
dec
mov
retf
rcr
lea
imul
xchg
sbb
sbb
retf
and
dec
dec
outs
mov
inc
sahf
push
pop
setae
mov
mov
mov
(bad)
push
cmps
scas
aam
scas
icebp
int3
or
mov
nop
(bad)
rol
and
pop
fld
sbb
loope
aam
in
mov
test
mov
mov
mov
call
out
int
ret
lods
leave
mov
jnp
rol
push
or
adc
adc
out
in
hlt
mov
jns
(bad)
mov
rol
pop
scas
aad
mov
mov
lods
push
pop
cmc
push
sahf
inc
nop
add
push
push
rol
cdq
out
dec
(bad)
outs
jmp
ror
mov
loopne
in
inc
push
inc
adc
jo
in
leave
dec
xchg
out
popa
je
push
adc
xchg
pop
(bad)
cmc
xlat
xchg
loope
test
jmp
pop
sub
mov
cmp
repz
push
add
imul
push
dec
adc
sbb
mov
cmp
xchg
fst
push
fs
imul
js
inc
fiadd
call
lahf
(bad)
push
(bad)
(bad)
sti
out
and
js
mov
pop
lea
jg
inc
mov
outs
ja
push
shr
xor
cli
inc
(bad)
in
and
(bad)
push
cmp
sti
xchg
repz
shr
lahf
fwait
xchg
sti
scas
push
add
loopne
and
cmp
sbb
mov
mov
mov
mov
inc
in
repnz
pop
les
pop
or
stc
push
mov
into
pusha
test
inc
clc
xor
shl
fadd
repz
add
pop
ja
mov
fisubr
dec
add
shr
push
mov
je
mov
and
dec
leave
out
jbe
jo
jno
jp
imul
(bad)
loope
mov
sbb
pop
adc
fldcw
fiadd
ja
jbe
or
ret
outs
inc
cmp
mov
test
inc
cmp
es
fs
iret
sti
wrmsr
xchg
cwde
cmp
rcl
sbb
push
push
mov
cmp
sbb
jmp
push
inc
sub
jno
cmp
in
daa
jne
repz
xchg
jl
sub
push
loop
or
sub
inc
sub
ret
cmp
or
out
(bad)
dec
ds
and
cmps
dec
ret
ret
inc
push
push
inc
and
fimul
sahf
ins
adc
cld
pop
fsub
push
add
inc
pop
jle
sub
sub
xchg
imul
fisub
nop
mov
faddp
dec
pop
inc
cmps
fistp
fiadd
push
out
add
pop
add
pusha
cdq
inc
dec
icebp
in
scas
pop
pusha
sbb
push
mov
clc
xor
mov
dec
add
cmps
test
lahf
jge
mov
fbld
push
test
arpl
inc
cdq
sbb
call
movs
pop
shl
jmp
push
pusha
pop
(bad)
jmp
mov
and
stos
sar
pop
lods
sti
adc
lahf
adc
in
fstp
or
dec
dec
pop
bound
sar
in
stos
mov
ret
add
call
xor
adc
jle
dec
inc
movs
repz
pop
push
in
mov
lods
or
jne
pop
mov
ds
enter
popf
jnp
xchg
xchg
push
mov
push
and
pop
pop
push
sar
add
leave
sbb
dec
mov
lock
ret
stc
inc
cmps
jnp
div
jg
out
scas
cmp
(bad)
loop
mov
sub
out
ins
shl
test
outs
outs
movs
iret
adc
scas
push
jne
cwde
pop
pop
shr
fmul
je
or
push
sub
call
mov
dec
xchg
xchg
dec
push
loope
and
mov
jo
data16
mov
sbb
and
icebp
push
es
push
and
jne
sub
inc
jmp
jmp
cmps
(bad)
jmp
movs
je
or
test
retf
aad
shl
fnsave
mov
or
push
stos
sbb
gs
cmp
pop
push
test
xchg
repnz
outs
nop
add
retf
fsubr
in
cmp
dec
lods
ror
pop
shl
add
mov
mov
ins
adc
push
mov
pop
jbe
jmp
sub
sub
jo
jbe
(bad)
mov
xor
xor
movs
cwde
clc
jnp
fldl2t
push
popf
hlt
test
(bad)
gs
out
add
dec
jmp
arpl
sar
int
sbb
retf
lahf
pop
jbe
xchg
jp
xchg
ja
cmp
or
cli
fstp
adc
xchg
jecxz
adc
adc
dec
sti
add
popf
stc
pop
cs
daa
sbb
ds
jb
push
pusha
fld
add
loopne
rol
scas
mov
sub
cmp
xor
stos
mov
jecxz
stos
les
dec
int
fistp
rcl
out
adc
jg
movs
aad
inc
cs
dec
mov
push
int
and
or
mov
out
(bad)
ja
mov
ins
sub
loope
push
scas
adc
add
hlt
call
add
repz
movs
idiv
lock
fsubr
dec
pop
xchg
mov
out
xor
mov
cli
and
aad
xchg
cmc
pop
push
sub
push
push
inc
dec
lahf
es
cmp
mov
sbb
mov
aad
push
out
fbld
pop
inc
cli
jmp
cmp
jp
cmps
dec
push
in
popa
push
jbe
(bad)
cmp
add
fbstp
pop
fldcw
sbb
aas
sbb
hlt
clc
pop
cmc
pop
jecxz
add
sub
mov
sub
mov
lods
(bad)
xchg
(bad)
bnd
std
lods
dec
pop
adc
std
sbb
push
push
pop
dec
and
dec
je
push
arpl
jns
rep
push
sbb
nop
movs
add
push
call
repnz
lods
test
pop
mov
or
hlt
imul
add
sahf
cmp
jl
int
(bad)
movs
cmp
mov
pop
mov
mov
inc
dec
pop
sub
or
shl
shl
or
dec
in
jle
shr
push
xor
adc
out
or
dec
cmp
dec
cmp
push
in
ficom
cmp
xchg
sti
dec
push
sbb
cwde
xchg
mov
lods
repnz
clc
mov
aam
mov
cmp
repz
adc
jecxz
pushf
push
pop
iret
push
test
mov
and
scas
es
pop
push
sbb
(bad)
lea
or
les
pop
dec
sbb
mov
cmp
push
in
int
lahf
scas
(bad)
sub
data16
les
push
and
pop
retf
sub
sbb
inc
xlat
sar
lods
add
or
or
dec
fild
ss
fisttp
cli
push
mov
psrad
retf
jae
ins
popa
jg
push
xsaves
and
mov
rcl
sbb
call
(bad)
fisttp
(bad)
ins
sub
xor
cmps
or
sbb
outs
pop
in
xor
fcomp
cwde
adc
or
cmp
xor
mov
and
inc
jbe
mov
aam
jl
(bad)
adc
fsub
stos
fldenv
loopne
scas
and
dec
push
jb
or
nop
nop
out
jmp
dec
adc
shl
adc
mov
pop
dec
pop
pushf
pop
aaa
inc
xchg
jbe
inc
fild
dec
ds
adc
(bad)
xchg
and
push
xchg
es
fild
int3
adc
(bad)
fcmovnu
sub
popf
(bad)
dec
xchg
add
and
cmps
inc
std
mov
into
push
push
pop
add
push
js
cmps
fcom
ret
into
dec
stos
sub
std
pop
cmp
pushf
pop
inc
dec
push
push
cld
dec
test
(bad)
sbb
lahf
stos
(bad)
pop
out
adc
pop
push
test
mov
mov
mov
push
movs
sbb
pop
fistp
adc
and
adc
cmp
xchg
xor
pop
rol
dec
mov
movs
push
bound
lea
sbb
cld
cdq
mov
push
(bad)
stos
test
sbb
mov
shr
cmp
push
xor
dec
(bad)
fsub
jb
scas
push
or
xchg
adc
out
repnz
(bad)
arpl
mov
mov
and
in
pop
cs
test
fprem1
sbb
jecxz
daa
inc
sub
ror
leave
ficomp
xchg
jbe
test
xor
in
push
mov
dec
add
bound
fisubr
stos
cmp
imul
imul
pop
out
je
shl
mov
shl
push
daa
mov
in
jo
mov
sbb
out
xchg
test
inc
pop
inc
(bad)
sub
inc
add
cmp
lds
mov
mov
cmp
push
xchg
loop
dec
mov
in
cmp
cdq
in
cmp
cld
dec
sbb
inc
(bad)
fnsave
mov
loopne
cmp
arpl
retf
(bad)
jmp
(bad)
aad
push
jne
dec
sub
shr
fdiv
lds
jb
(bad)
sbb
daa
adc
mov
jo
cmp
mov
mov
jl
outs
mov
(bad)
test
jp
mov
mov
cwde
xchg
sub
in
adc
(bad)
iret
addr16
mov
imul
mov
lods
mov
xor
sub
xchg
in
add
xlat
push
sub
inc
jle
sbb
push
clc
fs
shr
push
and
dec
retf
push
xchg
xor
push
call
xchg
movs
jmp
in
pop
fisub
aas
pop
loope
mov
test
inc
add
dec
inc
and
out
out
retf
fsubr
push
lods
in
xchg
lds
adc
sub
cmp
test
fsub
push
aas
jnp
push
jae
inc
outs
fisub
daa
ret
adc
bound
sbb
mov
pop
cs
int3
adc
add
push
hlt
jg
xchg
test
cmp
cmps
inc
push
mov
jge
out
pop
and
mov
popa
ficom
daa
pop
dec
push
mov
xor
push
retf
cmp
push
dec
fwait
add
mov
mov
jg
jmp
mov
fst
or
(bad)
ja
inc
movs
or
shl
and
adc
adc
sub
fdiv
int3
inc
push
rol
retf
pop
stos
mov
call
retf
repz
out
scas
jne
outs
jno
je
jge
out
test
loope
add
cwde
push
sub
sbb
sub
cmp
aas
pop
mov
xor
cwde
pop
cmp
loop
arpl
bound
cmps
scas
push
sbb
stos
mov
cmc
xchg
sbb
jg
jo
adc
stos
pop
xlat
add
rcl
call
xchg
(bad)
mov
push
outs
(bad)
inc
fisttp
xchg
pop
popa
les
mov
movs
xor
dec
lea
cdq
das
mov
iret
and
fdiv
mov
push
(bad)
and
test
inc
jo
xor
sbb
cmps
pop
add
lods
and
arpl
in
fsub
lods
cwde
mov
mov
fwait
xor
cmc
addr16
push
dec
jno
xor
dec
(bad)
push
mov
xchg
mov
mov
shr
retf
icebp
arpl
jmp
push
es
adc
imul
mov
lods
mov
into
xor
inc
ret
loope
ins
bound
jl
cwde
sbb
push
mov
cmp
call
mov
mov
push
dec
or
xchg
loop
fwait
in
daa
in
pop
push
sub
cmp
dec
ins
dec
lods
stos
shl
movs
movs
inc
rcr
into
das
clc
xchg
int
ins
fs
push
cmps
or
and
pop
push
mov
or
inc
inc
xchg
out
hlt
push
cli
sbb
ins
call
or
mov
push
pop
sub
lahf
out
push
not
in
xlat
and
mov
sti
(bad)
loopne
in
push
and
cld
(bad)
jno
aam
push
add
mov
mov
sub
enter
pushf
sbb
cmp
sub
fidiv
dec
retf
in
popf
jae
mov
es
popa
pop
mov
sub
jo
popa
adc
call
xchg
out
sbb
xor
fnstsw
inc
fs
or
iret
fsubr
and
cmp
iret
ret
stc
lahf
and
push
in
data16
xchg
hlt
jge
out
or
fdivr
scas
mov
in
mov
or
cli
shl
scas
ficomp
outs
add
or
loop
mov
outs
ins
push
xchg
pushf
data16
in
pop
inc
jbe
jno
(bad)
xor
mov
add
jne
lahf
fild
mov
sti
inc
push
sbb
xchg
lods
xor
cmp
test
(bad)
fist
cdq
adc
in
mov
fnstenv
add
xchg
imul
pop
jl
test
mov
movs
repnz
imul
mov
loop
push
cmp
fadd
lds
mov
ins
adc
ss
fucomi
mov
xchg
fist
psrlq
mov
inc
ret
push
mov
pop
pop
loop
jle
das
dec
push
bound
mov
push
test
dec
inc
xchg
in
in
adc
mov
jle
mov
jp
cmp
dec
ins
cmp
sbb
test
lock
cs
(bad)
and
adc
sub
in
shl
(bad)
jmp
xchg
ins
xchg
out
mov
sbb
and
mov
jg
mov
cmc
mov
push
ss
pop
out
pop
stc
pusha
ret
dec
jb
test
cld
(bad)
sbb
bound
jl
cs
shr
jb
xchg
push
adc
xor
add
or
xor
cmp
push
mov
adc
pushf
fimul
xchg
fld
sbb
in
and
xor
jnp
clc
loop
aam
mov
lods
jge
cmp
fisttp
mov
mov
xor
js
ficom
loope
xor
jns
cmp
cmps
push
dec
jbe
sub
std
pushf
pop
pop
and
mov
loop
repnz
(bad)
sbb
lds
and
xchg
push
loopne
lahf
imul
inc
xor
inc
cld
cli
sbb
in
mov
pusha
mov
pop
pop
enter
call
cmp
jl
jmp
and
jmp
and
xor
fidivr
push
cmp
rcr
pop
sti
xor
daa
mov
mov
add
out
div
adc
nop
popa
push
pusha
test
and
fcomp
ja
mov
xchg
ins
jl
data16
(bad)
outs
pop
jo
imul
xor
dec
retf
dec
imul
cs
(bad)
loop
sub
mov
in
(bad)
pushf
pushf
iret
mov
fcom
gs
xchg
pop
push
call
pop
mov
iret
retf
and
cdq
ror
xchg
pop
cs
add
add
adc
xor
aad
push
in
inc
arpl
lea
icebp
cmp
xchg
in
sbb
leave
mov
sti
shl
sti
and
cmp
in
loopne
outs
or
lds
aam
(bad)
lahf
into
bound
cwde
mov
dec
stc
jno
xor
push
js
jmp
cmp
sar
xchg
sub
xor
je
mov
mov
xor
jecxz
shl
fisttp
xchg
rol
inc
sbb
shl
test
jmp
imul
inc
or
retf
repz
mov
nop
fnstenv
call
mov
push
mov
pop
std
add
js
pusha
imul
inc
int
jne
loopne
adc
ja
or
mov
loope
mov
adc
fst
sbb
fnstcw
jno
adc
in
(bad)
out
sbb
hlt
enter
xor
adc
in
push
mov
scas
movs
or
jle
js
lods
(bad)
(bad)
sbb
in
xchg
pop
movs
push
pand
add
dec
cmp
daa
fdivr
stos
lock
xchg
sbb
test
outs
mov
jg
mov
mov
mov
push
jae
mov
ror
leave
mov
pop
mov
repnz
jl
in
in
sbb
push
xchg
jmp
in
les
(bad)
cmps
out
jmp
jno
and
pop
mov
mov
sti
popa
jmp
es
pop
ret
nop
lock
sub
dec
loopne
push
add
ja
outs
or
popa
and
push
and
adc
mov
(bad)
sbb
mov
xor
nop
es
psubd
iret
les
test
cmp
dec
(bad)
jno
jnp
pop
ret
mov
xor
add
sti
xchg
add
gs
imul
pusha
push
mov
dec
fcom
les
jp
mov
mov
fnstsw
dec
call
ret
xchg
jecxz
stos
adc
push
pop
cwde
dec
pop
mov
clc
mov
test
cmp
jmp
lods
cmp
sbb
cmp
mov
div
add
pusha
test
or
jle
jg
sbb
or
or
jbe
sub
ja
imul
aas
inc
add
stos
jle
push
mov
and
pop
outs
push
xchg
test
inc
loop
loopne
adc
sbb
mov
xchg
stc
pop
dec
xchg
icebp
mov
sub
push
mov
iret
retf
ins
xor
pop
inc
test
pop
sub
ds
ja
push
dec
ret
cli
out
jge
retf
mov
aam
cwde
test
pop
lahf
fcom
jge
adc
outs
adc
sub
imul
in
mov
pop
xchg
cdq
adc
loope
and
inc
iret
pop
mov
pop
adc
add
xchg
shr
cld
hlt
in
pop
jns
mov
cmp
call
and
stc
(bad)
xor
jae
cmps
pop
cwde
mov
loope
xor
jae
jno
pop
aad
sub
push
cmps
retf
inc
in
aas
adc
popa
es
mov
push
aaa
mov
and
or
cmp
push
fwait
jns
mov
lahf
jnp
push
mov
cmps
ds
xor
and
out
jp
lahf
ror
jns
xor
push
cmp
pop
inc
mov
in
mov
sbb
sub
or
repnz
adc
xor
fstp
lea
and
pop
push
jb
lahf
mov
push
jle
jo
inc
add
mov
push
ficomp
xchg
mov
inc
sub
mov
xchg
jae
dec
sub
add
cld
stos
not
mov
mov
xor
inc
and
sbb
and
out
repz
mov
sbb
jle
or
lea
mov
xchg
lods
scas
sub
xchg
mov
inc
out
dec
cmp
jmp
add
sbb
mov
dec
repnz
push
fnsave
retf
setne
mov
pop
inc
push
or
ret
(bad)
or
mov
cmps
mov
test
push
jo
push
cld
push
les
ret
lods
add
dec
test
inc
fdiv
addr16
and
sti
xor
xor
lea
ret
sahf
enter
push
aaa
ins
out
mov
sub
dec
and
out
push
push
(bad)
push
fld
stc
push
cmps
int3
fs
out
adc
out
jae
mov
rcr
push
in
xor
mov
cmp
(bad)
dec
cdq
jmp
mov
mov
rcl
inc
inc
rcr
fisubr
mov
sbb
imul
cmc
ins
lahf
(bad)
adc
ds
ret
sahf
imul
and
pop
mov
push
test
loope
fidiv
push
imul
and
xor
cs
jae
hlt
mov
call
or
(bad)
js
adc
dec
push
cmp
in
jnp
xchg
cmp
mov
imul
push
loop
cdq
pop
imul
sbb
push
mov
sti
mov
xchg
or
cli
pop
xchg
mov
sub
rcr
mov
push
lods
add
xchg
ret
std
xchg
mov
pop
cmps
pop
lahf
hlt
rcr
test
pusha
les
adc
mov
xchg
inc
mov
fisubr
mov
scas
xchg
sahf
aas
mov
(bad)
sub
adc
mov
or
fs
jns
and
popf
jge
test
xor
xchg
inc
outs
and
pop
aas
push
mov
push
mov
sub
neg
mov
add
stos
dec
inc
test
(bad)
dec
push
mov
cdq
xchg
xlat
aad
inc
dec
push
aad
pushf
daa
and
dec
pop
mov
and
call
or
push
pop
inc
call
dec
or
cwde
pop
repz
mov
mov
add
iret
(bad)
cmps
retf
xor
or
paddb
popa
in
hlt
push
cs
inc
test
xchg
lahf
mov
jle
cs
icebp
clc
int3
mov
ret
lods
fld
pop
push
pop
pop
ds
dec
xchg
outs
mov
scas
ja
mov
popf
out
xchg
mov
sbb
jmp
and
adc
cmp
stc
jg
xlat
add
scas
mov
lea
js
aad
pusha
sub
lahf
adc
loop
pusha
xchg
pop
sbb
sub
or
jge
pop
sar
cmc
xchg
test
pushf
inc
or
je
je
aad
fsubr
push
bnd
xor
inc
jne
push
data16
int3
add
mov
sar
cdq
retf
(bad)
jb
cmps
stc
jecxz
xor
leave
jmp
cmp
in
jne
jge
fcmovbe
bound
mov
outs
xchg
adc
mov
lock
adc
mov
push
dec
push
std
mov
arpl
jae
outs
psrlq
not
leave
outs
add
(bad)
jbe
jmp
(bad)
mov
mov
pusha
cmp
cmps
ja
cs
jns
mov
dec
leave
xlat
adc
mov
mov
and
push
or
nop
mov
or
mov
sbb
imul
sub
div
and
addr16
retf
mov
mov
jns
sub
call
rol
lea
xor
xlat
sub
into
pop
jb
mov
pop
jne
pop
aaa
aaa
dec
mov
xchg
or
outs
lods
inc
mov
lea
jnp
lods
mov
and
and
fsubr
xlat
mov
xchg
pop
ret
ret
dec
retf
mov
icebp
xchg
les
mov
jae
lods
fs
sub
clc
dec
sbb
(bad)
mov
nop
push
in
xor
sub
push
fimul
xchg
push
push
ja
nop
or
dec
je
cmp
pop
les
ror
and
cmp
daa
cmp
adc
rcr
mov
pop
mov
mov
fidiv
fidiv
js
or
stos
mov
popa
sbb
and
(bad)
movs
inc
push
fmul
push
pop
dec
mov
xchg
pop
sbb
icebp
cli
adc
pop
loope
jns
jne
nop
repnz
push
fist
outs
stos
call
cmp
pop
fist
inc
aam
cmp
daa
push
enter
mov
movs
frstor
cmc
pop
(bad)
sbb
inc
test
push
add
pop
add
add
add
fdiv
and
dec
repz
lods
xor
mov
add
popf
sub
(bad)
fimul
sub
jae
mov
mov
jnp
jecxz
sub
and
xchg
je
test
jo
mov
jno
dec
xor
push
dec
mov
inc
enter
out
gs
dec
(bad)
rcr
cmp
ins
adc
scas
jnp
ja
loop
shr
mov
cmp
push
repz
sti
test
mov
sbb
push
fmul
mov
cmp
pop
jae
mov
and
aad
ins
mov
ins
outs
aaa
into
fs
repnz
pop
ins
les
and
nop
aaa
xor
ds
ins
inc
nop
aas
cli
lods
mov
or
shl
inc
inc
stos
in
fld
mov
aaa
int
xor
cmp
lock
and
adc
mov
int3
mov
xor
jb
push
mov
mov
pop
xchg
nop
adc
retf
loope
sbb
movs
jle
sub
outs
loopne
scas
imul
sbb
or
loope
nop
adc
jge
mov
jnp
mov
mov
add
xor
mov
jb
lods
outs
cs
sbb
sbb
dec
fucomp
aaa
cmp
xor
arpl
imul
mov
xchg
stos
add
scas
pop
fisttp
enter
shr
div
pop
ror
inc
inc
fstp
je
or
sbb
jbe
jbe
arpl
xlat
test
pop
dec
loop
cwde
jbe
les
push
aaa
aam
aas
rol
fisttp
xor
scas
mov
cmp
dec
and
cmp
dec
mov
lahf
popa
fisub
sub
inc
imul
ins
sbb
movs
adc
add
xor
pop
jno
fld
mov
dec
jb
mov
mul
mov
and
add
data16
test
xchg
loop
and
push
xor
mov
mov
in
xchg
and
cwde
lock
add
add
sub
loopne
jns
or
jnp
xchg
inc
mov
xor
(bad)
jnp
icebp
sbb
int3
push
sbb
dec
ja
dec
cmp
stos
mov
or
inc
cmps
inc
mov
outs
aad
sub
dec
pop
scas
sbb
call
add
ds
(bad)
pop
pop
push
mov
push
sub
ror
shr
mov
ret
nop
repz
push
mov
shl
jge
outs
add
xor
jge
movs
sub
mov
inc
cmp
mov
xlat
add
mov
lods
push
pop
leave
add
and
dec
xlat
outs
jnp
jae
sar
cmps
mov
push
(bad)
and
fist
mov
pop
cmc
adc
out
add
add
push
jbe
inc
test
inc
or
js
adc
es
xchg
or
loope
push
or
std
stos
mov
cld
xor
ins
ins
cmp
shl
inc
int3
fdivr
(bad)
retf
pop
sub
push
test
pop
jmp
aam
mov
sbb
adc
pop
int3
add
clc
mov
scas
in
loopne
xchg
xor
sub
addr16
mov
inc
data16
repz
imul
inc
dec
mov
cmp
sbb
(bad)
jbe
lods
es
push
and
imul
mov
dec
jnp
cli
dec
xor
rol
inc
adc
outs
cmps
sahf
in
xchg
and
stos
dec
and
and
fsubr
nop
cmp
stos
xor
icebp
push
mov
push
cmc
das
push
scas
not
lods
add
adc
mov
fdivr
movs
sbb
loope
(bad)
jnp
shr
jmp
mov
pop
push
mov
pop
jg
out
mov
mov
(bad)
sti
pop
sub
imul
mov
adc
pop
pop
adc
scas
sub
pusha
xchg
fdiv
arpl
cmc
and
adc
xor
cld
inc
mov
stc
pushf
pop
fdiv
loope
mov
mov
inc
xchg
xor
div
xchg
mov
sub
push
test
mov
and
hlt
fwait
sub
push
out
push
lods
(bad)
jbe
in
dec
fst
sub
or
cli
xchg
pop
push
adc
sbb
stc
mov
mov
aaa
mov
cmp
(bad)
and
dec
in
lds
mov
in
std
jg
pop
adc
and
in
ins
cmp
leave
shr
test
cmp
xchg
and
arpl
mov
jb
lea
and
xor
rcl
push
lods
xor
pop
xchg
stos
mov
lds
popa
(bad)
mov
jmp
stos
xchg
inc
cld
adc
add
pushf
xchg
dec
add
not
or
cmp
sbb
pop
daa
jle
imul
or
xchg
mov
ret
stc
call
push
jge
xchg
in
in
dec
in
sub
xor
jge
es
sar
mov
(bad)
sub
mov
in
scas
mov
repnz
push
mov
inc
inc
mov
cmp
and
fst
pop
adc
xchg
mov
xlat
iret
and
mov
add
cmp
adc
test
loopne
jge
fiadd
xchg
popf
jp
bound
movs
or
pop
cmps
stc
sub
or
mov
mov
outs
int3
dec
ss
pop
push
sbb
ret
pop
push
inc
jae
mov
and
nop
shr
adc
jp
and
movs
popa
pop
cmps
fisttp
xor
iret
jae
pop
sub
xchg
int3
popa
cmp
shr
cmp
nop
dec
mov
ins
outs
pop
in
aam
addr16
xchg
pop
mov
pop
push
inc
sbb
aas
push
xor
ds
inc
or
sti
pop
test
pusha
or
mov
sbb
rcr
pop
iret
in
fsub
retf
sbb
out
fs
rcr
aad
repnz
jl
add
(bad)
mov
andps
sub
mov
inc
jge
or
pop
in
adc
adc
outs
xor
cmp
in
jae
mov
fmul
call
loop
ret
js
or
(bad)
dec
and
xchg
rol
lea
movs
add
add
ficomp
les
push
lds
(bad)
fucom
loop
push
cmp
loop
scas
and
std
and
and
retf
mov
add
or
nop
dec
popa
dec
adc
in
inc
add
mov
ds
mov
movs
add
dec
xchg
cs
sub
inc
test
jne
ja
add
mov
push
pop
push
inc
ja
add
enter
je
stos
imul
call
test
loope
gs
mov
xchg
mov
stc
xchg
outs
adc
cs
and
dec
test
push
nop
adc
addr16
leave
add
mov
aaa
ja
adc
outs
sahf
and
and
es
inc
xor
xchg
jge
jno
dec
and
bound
xor
movs
xlat
out
iret
das
sahf
pop
pop
popf
xor
je
push
stos
ror
mov
inc
mov
push
hlt
mov
jg
inc
sbb
sub
ret
mov
add
sub
dec
test
ds
lods
out
or
aaa
addr16
xor
in
cmc
ja
add
les
sub
(bad)
scas
les
sub
arpl
mov
dec
pop
and
sbb
div
je
lods
push
je
mov
mov
cmp
inc
int3
mov
call
adc
sub
or
push
cmp
cmp
mov
out
push
repnz
cmp
jno
aad
or
inc
jnp
xor
add
dec
neg
sub
shl
dec
lds
add
inc
mov
mov
ret
ja
push
jl
cmps
pop
pop
add
add
gs
mov
test
push
fwait
push
pop
sub
xor
xchg
and
in
test
xchg
xlat
or
pop
sub
xor
jmp
mov
retf
nop
pop
outs
into
xchg
mov
mov
add
in
hlt
stos
adc
mov
xchg
xor
xor
fsubr
sub
dec
jle
xlat
push
xor
adc
not
aad
sbb
(bad)
ret
sbb
cmp
push
pop
mov
xchg
cdq
cwde
rcl
pop
mov
or
jo
sbb
(bad)
test
retf
add
imul
imul
and
cmp
call
dec
push
loopne
add
jb
enter
addr16
cmp
push
mov
outs
sub
out
shr
cld
sbb
jmp
sub
arpl
aas
ret
dec
cmp
mov
ret
(bad)
in
adc
lds
add
sbb
sahf
imul
loop
push
adc
push
add
js
push
xlat
mov
sbb
sub
imul
(bad)
fadd
mov
add
aam
dec
sbb
dec
outs
xchg
cmp
stc
aad
scas
in
mov
loope
retf
fdiv
xchg
jb
cwde
pop
bound
xchg
mov
in
pop
cdq
aas
fild
inc
mov
sahf
retf
xor
daa
jo
clc
inc
push
ins
call
jge
mov
retf
gs
sub
sub
in
repz
adc
mov
outs
mov
jo
and
fidiv
add
cmps
test
xchg
clc
add
push
jae
push
outs
jge
adc
jb
or
popf
pop
inc
xor
popa
(bad)
movs
cli
push
loop
js
in
fist
jecxz
xchg
or
mov
jae
test
xchg
jnp
sahf
sahf
pushf
mov
int
inc
add
les
jmp
push
enter
out
shl
and
sub
inc
fwait
xor
(bad)
mov
mov
or
leave
test
or
iret
aam
sbb
popa
or
or
std
push
outs
fisttp
jmp
and
imul
les
jne
ja
fisttp
inc
push
cdq
push
in
mov
cmp
mov
inc
jmp
cmp
ins
mov
xchg
dec
jns
xchg
mov
test
pop
(bad)
fstp
scas
push
mov
rol
sbb
mov
dec
retf
adc
test
neg
add
adc
xchg
push
and
cmp
push
push
add
jns
test
test
movs
std
sbb
jmp
mov
jl
jo
push
inc
or
ret
xor
out
mov
mul
bound
jbe
iret
inc
retf
ins
xchg
xor
xchg
mov
push
movs
sbb
adc
int3
add
dec
add
jg
ins
jbe
sbb
(bad)
adc
sub
pop
jmp
mov
mov
out
jle
js
xlat
in
je
sub
pop
jg
mov
outs
jne
daa
lds
clc
cdq
xor
mov
cmp
push
dec
pop
imul
(bad)
and
push
mov
fldenv
movs
push
add
add
test
pop
add
stos
sbb
sbb
std
and
int
ds
pop
ja
mov
and
mov
or
out
test
inc
lock
push
(bad)
cli
daa
mov
sub
loop
cmc
sbb
imul
mov
mov
dec
xor
lock
aas
sbb
push
movs
push
fnsave
xchg
inc
(bad)
cli
jge
xor
rep
shr
or
ja
xlat
(bad)
sbb
pop
out
ffreep
les
movs
retf
and
or
inc
xchg
nop
shr
xor
xchg
jmp
push
and
pop
add
jmp
sbb
and
dec
push
cli
dec
push
xor
imul
adc
adc
jle
mov
jnp
lea
and
lock
into
pop
mov
je
push
test
leave
pop
dec
popa
jne
pop
jo
mov
pop
adc
loop
push
inc
inc
xchg
sbb
dec
add
ror
lods
or
addr16
int
sbb
rol
movs
dec
jb
fmul
out
gs
scas
mov
data16
(bad)
int3
mov
dec
pop
xchg
add
icebp
retf
or
cmp
cmp
aaa
sbb
or
pop
adc
ins
xor
movs
bnd
fst
icebp
fsubr
xor
inc
sahf
(bad)
data16
scas
jmp
cmp
inc
stos
pusha
out
clc
into
or
pop
dec
mov
cmp
add
popf
adc
rcr
popa
sub
cmp
outs
fsubr
mov
movs
mov
jmp
xchg
pop
cmps
cmp
shl
adc
fdivp
jg
test
sbb
xchg
shl
push
and
inc
shl
lods
dec
jns
test
sbb
xchg
adc
popa
ret
lods
in
adc
mov
or
push
cmp
adc
or
dec
std
es
cmp
jnp
mov
es
cmc
cmp
sbb
inc
lods
or
dec
std
mov
pusha
mov
adc
jns
push
nop
and
inc
xchg
test
mov
push
xor
sub
iret
in
mov
ret
aaa
js
pop
fnstsw
loopne
fbstp
popa
add
mov
mov
sub
fld1
mov
jb
cmpps
sbb
into
mov
xchg
adc
mov
sahf
cmp
push
and
xchg
push
inc
or
mov
sti
pop
(bad)
test
jp
inc
scas
pop
scas
clc
cmps
cmp
dec
jo
mov
fmul
scas
loope
std
ficomp
xchg
sbb
add
lea
mov
dec
dec
push
stc
push
and
nop
sbb
push
aad
out
adc
rol
adc
push
xor
fwait
sub
lea
cmp
mov
push
in
int3
mov
or
inc
dec
sub
mov
loop
addr16
repz
hlt
pop
sti
rcr
or
xchg
test
mov
mov
xchg
mov
xor
ret
xchg
add
mov
sub
iret
in
pusha
dec
arpl
and
das
inc
arpl
sub
out
in
enter
push
xchg
in
sbb
cwde
jg
ins
push
int3
dec
and
mov
pop
(bad)
out
dec
xlat
iret
mov
inc
xor
pop
ins
aad
cmps
mov
icebp
pop
outs
loop
mov
jmp
test
call
push
retf
or
arpl
mov
aaa
(bad)
std
or
jno
daa
dec
repz
inc
add
popf
in
lock
das
mov
mov
or
bound
xor
call
jle
xchg
pop
scas
neg
and
(bad)
(bad)
push
xchg
outs
jnp
pop
adc
xor
and
scas
mov
fisubr
nop
jnp
or
sbb
cld
xor
inc
int3
cmp
jge
sub
clc
mov
sub
(bad)
shr
xor
and
push
sahf
out
cmp
push
pusha
std
xchg
cs
push
xchg
fwait
xchg
pop
jb
call
add
and
in
mov
fisub
or
dec
jo
sbb
push
xor
mov
sbb
sbb
cmp
jmp
push
xor
out
(bad)
aad
add
(bad)
add
adc
inc
mov
inc
pusha
add
xchg
lds
imul
adc
dec
std
or
pop
xor
hlt
and
ss
cmp
jo
add
xor
daa
push
inc
and
movs
dec
loope
jmp
xchg
xlat
xor
mov
mov
daa
loopne
jg
jno
pop
mov
mov
adc
cld
pushf
cmp
iret
mov
sub
adc
stos
jo
data16
jbe
movs
sbb
inc
and
or
popa
push
fs
jae
mov
pop
pop
xchg
lods
fidivr
ffreep
xor
push
xchg
sub
sub
icebp
push
sbb
out
xchg
shr
std
(bad)
dec
lods
and
pushf
fsubrp
mov
add
fimul
clc
fs
in
arpl
ins
push
sub
sub
xor
out
xor
and
adc
daa
popf
sbb
mov
test
hlt
push
mov
scas
push
adc
or
mov
cmp
movs
ret
cld
ins
outs
push
sti
push
stos
jb
or
or
xor
pop
sub
aad
push
cld
or
mov
lods
inc
ret
sub
cmp
int
pop
sar
cs
stos
sbb
pop
xor
mov
ins
pop
arpl
sti
out
retf
mov
adc
dec
mov
cmps
adc
hlt
or
fdivr
xchg
add
add
xchg
jl
sbb
fisub
bound
fisubr
jmp
inc
push
pop
mov
mov
popf
cmp
adc
push
xor
pop
adc
popf
push
add
cwde
(bad)
mul
imul
test
imul
push
pop
(bad)
bound
(bad)
xchg
push
test
adc
in
in
sbb
inc
push
cmps
mov
ds
cmp
es
adc
aaa
push
inc
inc
mov
push
push
xchg
jo
aam
xor
add
sub
and
test
sti
int3
rcr
lahf
call
daa
dec
pushf
jne
(bad)
xchg
pop
pop
ficom
inc
push
xor
jmp
aaa
cld
jg
sbb
push
js
mov
imul
rol
ja
dec
jns
hlt
dec
fs
fild
mov
movs
add
call
std
pop
enter
cwde
ja
gs
xchg
in
xor
pop
mov
in
jmp
mov
frstor
aas
fwait
and
fld
jge
dec
rol
jbe
jmp
dec
loope
std
ds
mov
sbb
sbb
or
fld
sbb
cmps
add
xor
inc
adc
idiv
aas
test
mov
sbb
add
inc
jno
jnp
mov
mov
inc
inc
dec
(bad)
loop
or
pop
xor
out
push
jne
hlt
add
gs
repnz
or
mov
xchg
in
rcr
and
fcomp
jo
ins
je
lea
mov
push
sahf
gs
sar
test
in
aam
lds
xchg
mov
dec
scas
pop
in
inc
mov
xchg
ficom
sti
jae
ss
push
call
sbb
jno
mov
enter
and
into
and
xor
stos
(bad)
clc
sti
cmps
aaa
shl
stos
sbb
xor
mov
xchg
pop
and
adc
in
pop
in
mov
or
push
mov
inc
mov
dec
add
mov
cmp
sbb
mov
je
pop
add
adc
into
or
hlt
shl
cmps
mov
jp
and
or
pop
test
adc
(bad)
loopne
xchg
mov
xchg
sub
mov
maskmovq
test
(bad)
cmp
xchg
pushf
ja
or
mov
add
pop
or
ret
pop
std
loope
xor
test
cld
daa
je
add
in
ins
movs
and
loop
enter
ror
jmp
retf
sbb
fisttp
out
mov
enter
mov
xor
sub
and
icebp
xchg
sbb
cdq
xor
repz
test
mov
ins
push
push
jns
test
mov
or
and
or
mov
jmp
mov
rcl
jnp
out
or
jb
xchg
inc
jns
lods
repnz
dec
sti
inc
iret
mov
cdq
retf
add
mov
repz
inc
cmc
scas
inc
push
or
mov
push
xchg
cdq
fmul
ds
pusha
retf
add
repnz
pop
lahf
call
push
les
(bad)
repnz
(bad)
jg
and
out
fdivrp
jmp
xor
push
pop
test
and
sahf
adc
aaa
jae
sbb
shl
and
fcomp
(bad)
(bad)
sbb
mov
in
xor
ret
push
hlt
mov
fbstp
test
leave
mov
and
stos
push
mov
dec
adc
and
mov
mov
rcr
xchg
stos
cmp
push
ss
mov
pop
xchg
inc
and
adc
mov
pop
dec
cwde
mov
pop
aas
mov
adc
popa
test
mov
std
dec
sti
sar
xlat
and
mov
inc
xor
lahf
neg
sub
push
cmp
lods
pop
xor
call
and
(bad)
fidivr
addr16
fistp
pop
adc
fisubr
lods
leave
push
mov
push
inc
iret
dec
int3
xor
xor
retf
frstor
repz
push
sub
ins
int
fmulp
xchg
mov
mov
mov
dec
icebp
fucom
scas
shl
(bad)
jg
add
sbb
sbb
outs
sbb
outs
mov
fcmovnb
ins
sti
sbb
jmp
lds
lods
inc
repz
or
loope
dec
lahf
cmp
fst
xchg
mov
test
aas
pop
mov
xchg
jae
dec
add
dec
cmp
ret
xchg
adc
cs
dec
pop
neg
cli
inc
out
mov
mov
es
push
mov
push
lods
out
add
scas
icebp
jle
rol
or
jae
dec
sub
xchg
jmp
xchg
mov
mov
outs
cli
cs
add
add
adc
(bad)
adc
dec
out
push
imul
out
mov
xchg
mov
je
xor
shr
pop
cmp
aam
fimul
sub
fld
and
test
fcmovne
and
push
xor
rol
aas
fidivr
push
sahf
dec
jns
lahf
pop
xchg
xor
div
push
loop
lea
cmps
fsub
push
xchg
sbb
xchg
ror
loop
and
inc
into
in
add
fwait
mov
adc
pop
retf
pop
sahf
mov
mov
push
(bad)
push
push
mov
and
pop
sub
retf
je
adc
or
dec
jbe
mov
(bad)
mov
cmps
pop
cli
sub
mov
push
mov
pop
mov
arpl
jne
test
les
and
mov
in
dec
leave
(bad)
pop
repz
in
shl
jnp
jbe
inc
xchg
(bad)
jno
pcmpgtb
data16
mov
sbb
ret
cmp
imul
test
xchg
pop
and
sbb
pop
stos
movs
mov
imul
sub
pushf
and
jmp
mov
lds
cs
push
jge
aam
mov
popf
rcl
shl
pop
out
mov
movs
add
adc
mov
imul
push
lock
out
inc
pushf
out
test
pop
add
sub
and
(bad)
cld
cwde
pop
add
imul
cmp
jbe
mov
movs
cld
(bad)
(bad)
cmp
sbb
int3
cld
in
icebp
xor
inc
lods
xchg
sub
inc
push
pop
stos
mov
rol
shl
aaa
jns
enter
movs
sbb
xlat
clc
ins
adc
test
mov
syscall
movs
mov
sbb
xchg
cmc
frstor
dec
push
aam
loopne
test
(bad)
adc
xchg
jno
mov
push
mov
push
and
and
out
pop
cmp
cmp
add
pop
test
popa
xor
adc
scas
mov
cmp
xor
sbb
jb
push
fisub
cmc
popa
sub
add
adc
or
jbe
imul
in
shr
pop
sub
sub
inc
adc
(bad)
or
and
pop
loop
pop
lods
jb
push
popf
cmps
repnz
iret
push
xor
(bad)
popf
(bad)
fs
or
jl
movs
mov
clc
cdq
icebp
pop
enter
ds
arpl
xor
xchg
popf
in
mov
mov
scas
out
fsubrp
dec
retf
dec
cmps
pop
sbb
mov
aam
mov
sbb
lahf
mov
mov
mov
in
jp
leave
jmp
pop
dec
loope
push
mov
retf
fnstenv
hlt
mov
call
xchg
outs
adc
outs
mov
adc
imul
push
(bad)
std
add
sub
(bad)
mov
mov
out
imul
popf
ss
sbb
test
sub
rcl
sub
leave
xchg
fs
xlat
fucom
jo
lods
push
shl
add
mov
or
jne
call
jne
test
sbb
xor
and
or
xchg
lea
aam
push
call
pop
mov
xor
outs
sub
cmps
stc
cmps
push
xor
jae
cld
mov
sbb
pop
test
mov
call
jae
and
jg
shl
jmp
jnp
dec
cmc
iret
lods
lock
arpl
inc
fsubr
jl
movs
push
jno
or
inc
or
xor
retf
lock
call
xchg
out
pop
mov
add
dec
std
sbb
lds
mov
and
retf
sbb
push
mov
nop
leave
outs
jmp
mov
test
hlt
xor
cmps
imul
or
hlt
xor
xor
and
cld
arpl
fistp
dec
dec
aaa
fcmovbe
xchg
imul
retw
xor
mov
or
outs
mov
and
sbb
loope
sbb
sbb
test
stc
cmps
adc
jp
(bad)
mov
lahf
cmp
imul
fild
inc
fidivr
dec
pop
loop
dec
rcr
push
fild
popf
aam
push
dec
pop
mov
nop
mov
add
leave
jbe
pop
adc
fs
dec
mov
or
jg
ret
mov
jp
cmp
stos
test
xchg
add
stos
call
aas
or
into
and
jnp
mov
push
shr
inc
xor
add
repnz
pop
ins
inc
push
fstp
mul
mov
mov
jae
mov
shr
cmc
addr16
cdq
ja
in
push
mov
mov
or
pop
in
repnz
pusha
fst
hlt
into
stc
fs
dec
mov
cmc
loope
xchg
icebp
ja
mov
sub
mov
mov
nop
imul
push
out
jp
loop
clc
xchg
ficomp
xchg
ja
ret
jbe
mov
dec
aaa
addr16
aas
jle
cld
push
pop
mov
lods
sub
push
inc
fisttp
stos
mov
sub
inc
dec
fild
xchg
mov
add
add
xor
sub
lock
call
sbb
cs
in
push
fild
push
mov
push
inc
push
mov
int3
xchg
in
xor
dec
jnp
add
push
jae
jge
sbb
popa
mov
add
add
push
xchg
ja
sar
and
push
and
sbb
jno
fs
fimul
xchg
es
sbb
call
pop
jecxz
xchg
fdivr
mov
or
add
adc
lds
loopne
addr16
mov
and
vandps
push
adc
je
ficom
std
out
or
mov
pop
nop
(bad)
daa
stc
push
cmp
pop
dec
loopne
sbb
push
hlt
loopne
test
sub
loopne
ret
xor
adc
mov
push
mov
or
adc
xchg
cwde
(bad)
jp
lahf
xchg
cmp
mov
mov
pop
mov
jle
shl
ds
add
mov
xchg
outs
inc
jno
(bad)
adc
addr16
dec
hlt
dec
mov
mov
dec
lds
mov
dec
mov
cdq
stos
cmps
mov
push
icebp
inc
ins
out
in
aad
cs
cli
arpl
popa
mov
mov
mov
inc
das
in
xor
pop
js
and
imul
or
cmp
xor
push
jp
out
pop
fbstp
xchg
xchg
loop
out
hlt
add
pop
sahf
fimul
jb
fs
test
add
mov
add
sbb
aam
test
aad
push
(bad)
in
xor
test
dec
adc
pop
dec
sahf
aaa
mul
push
cmp
fbstp
cli
gs
out
addr16
cld
int
sbb
shl
fcmovnb
(bad)
mov
out
es
xor
stos
xchg
and
xchg
iret
iret
mov
retf
movs
jmp
jmp
mov
div
inc
das
in
shl
pop
pop
pop
pop
adc
scas
cld
inc
push
fs
dec
xchg
mov
pop
jae
out
pop
cdq
fisub
ja
mov
mov
es
lahf
inc
enter
mov
not
int
jp
cmp
sbb
and
jo
jmp
pop
movs
adc
icebp
sub
xor
inc
div
xlat
mov
mov
jp
les
mov
mov
icebp
out
mov
lea
(bad)
ins
arpl
pop
fwait
inc
lea
jae
aad
shl
rcl
rcl
push
adc
pop
sti
je
test
push
clc
enter
mov
in
jecxz
jbe
cmp
fwait
mov
cmove
pushf
(bad)
iret
xor
rcl
sar
neg
push
cld
fild
sbb
xor
adc
mov
push
dec
arpl
jl
iret
jp
xchg
pop
out
mov
sar
mov
icebp
leave
out
inc
cmp
pop
push
jmp
pop
push
cmc
fbstp
aaa
sub
mov
das
(bad)
int
sbb
mov
popf
pop
lahf
test
mov
cld
push
cli
outs
inc
add
or
dec
sub
cmovbe
imul
je
lods
loopne
mov
aad
addr16
and
lea
cmp
addr16
mov
mov
cmp
je
cli
sbb
xor
cmp
ins
out
jecxz
arpl
jb
dec
sub
pop
in
xchg
ja
dec
sbb
pop
push
cdq
sub
mov
pop
imul
shl
jp
adc
repnz
out
sub
inc
sbb
leave
add
frstor
xlat
sbb
mov
fisubr
bswap
sub
loope
sub
enter
fucomip
fwait
bound
shr
lock
cmp
sbb
mov
lods
fwait
rol
dec
xchg
mov
jge
pop
rcr
(bad)
mov
dec
not
jecxz
xchg
or
pop
lea
aaa
push
mov
(bad)
out
popf
jmp
in
out
jge
retf
jbe
mov
xor
cmp
les
pop
scas
imul
adc
dec
mov
xchg
adc
fist
sbb
mov
popf
adc
inc
pop
mov
repz
data16
pop
gs
mov
mov
dec
add
mov
push
jmp
cdq
pop
dec
and
or
aaa
dec
ss
cs
and
aas
cmp
rep
in
inc
cli
mov
xor
in
fsubr
mov
mov
clc
inc
push
sahf
fdiv
(bad)
adc
mov
dec
xor
call
inc
dec
out
and
dec
and
ins
enter
dec
mov
sahf
dec
add
fild
pmovmskb
pop
ja
sub
iret
ss
fmul
mov
lods
mov
inc
loope
dec
or
cld
mov
inc
adc
daa
daa
push
sub
rcl
dec
outs
aad
ss
in
ins
dec
mov
lods
daa
fbstp
pop
fisttp
mov
inc
mov
(bad)
imul
or
sbb
jg
test
(bad)
gs
js
xchg
mov
push
push
sub
repnz
int3
jl
dec
mov
push
mov
xor
and
lds
int
and
pop
mov
test
xchg
movs
icebp
fiadd
mov
push
or
mov
ss
outs
mov
sbb
clc
jl
sbb
js
icebp
dec
fmulp
adc
loop
dec
cmp
sub
adc
push
add
imul
icebp
test
ja
les
call
test
add
xchg
ins
data16
mov
push
inc
xor
add
xor
(bad)
dec
cmp
rol
add
out
xchg
call
movs
xchg
cmp
xor
mov
jbe
(bad)
mov
repnz
aam
sbb
pop
(bad)
cs
jmp
popf
fstp
je
pop
rol
rcr
sti
shl
lods
ins
popf
mov
inc
in
call
mov
movs
xchg
xor
dec
mov
aas
(bad)
outs
cmp
adc
cmps
hlt
pop
mov
or
sbb
adc
mov
(bad)
mov
jg
xlat
xlat
mov
jmp
jbe
sub
lods
sub
test
add
jg
cmp
ss
mov
jmp
mov
sub
imul
stc
dec
pop
fwait
cmps
xchg
outs
test
or
jp
scas
or
mov
xlat
shl
shr
test
cmp
push
jge
sub
mul
call
es
outs
or
or
mov
(bad)
call
ret
xchg
or
push
mov
fisttp
sbb
imul
adc
scas
cmp
call
cmc
scas
jecxz
push
cmp
mov
cmp
jg
xor
ret
cmps
mov
movs
sub
jne
mov
dec
dec
nop
loope
jp
add
in
test
inc
cli
lea
pop
mov
sub
push
je
fs
push
addr16
test
push
jp
ins
cmp
popa
sbb
push
jecxz
sar
jl
dec
mov
sub
ret
iret
fdiv
cmc
stos
xchg
fldcw
int3
imul
dec
cmp
movs
mov
mov
add
aam
mov
(bad)
(bad)
push
in
jmp
imul
pushf
add
mov
add
sbb
inc
dec
mov
push
dec
pop
and
(bad)
xor
mov
lock
das
neg
(bad)
xlat
mov
dec
dec
cmp
or
in
sbb
push
cmp
inc
inc
add
and
jo
cmp
in
mov
inc
ja
and
loope
inc
inc
pusha
(bad)
mov
leave
cmp
xor
add
das
out
cs
lea
lods
bound
cmp
ret
neg
gs
push
scas
ins
xor
xchg
mov
sbb
lahf
push
fmul
cmp
push
cmc
xor
push
push
cmp
or
loope
pop
(bad)
mov
sbb
xchg
ds
mov
mov
ins
xor
mov
mov
int
jbe
sub
push
movs
clc
ret
add
xchg
lea
mov
movs
repnz
xchg
fcomp
xor
xor
pop
add
xor
call
sub
jo
push
movs
adc
dec
push
jle
ins
popa
xchg
outs
add
fdivrp
push
cmp
shl
sbb
(bad)
ins
adc
lds
push
leave
mov
cmp
pop
push
scas
es
in
in
push
pusha
or
pushf
rol
add
in
ror
fsubr
mov
sbb
dec
adc
pop
and
aad
sub
hlt
(bad)
sti
outs
imul
xchg
ss
in
push
fst
cwde
repz
ret
or
icebp
dec
rol
mov
jle
and
inc
fild
call
or
fidivr
cmp
xchg
add
fsub
(bad)
fld
test
xchg
and
es
pop
div
sub
cli
das
int
jbe
mov
call
jns
inc
pop
cdq
loop
cmp
and
rcr
(bad)
jno
and
fdivrp
cmp
shr
sub
dec
aam
jno
mov
iret
scas
add
push
cmp
ds
dec
mov
dec
cmp
clc
jecxz
test
popa
mov
push
call
inc
and
stos
mov
aas
clc
mov
dec
sub
(bad)
mov
xor
daa
cld
push
je
js
stos
mov
sub
mov
jle
retf
jno
cmps
mov
mov
mov
(bad)
aad
and
pop
adc
enter
mov
push
dec
dec
and
jge
xchg
and
int3
inc
cmp
inc
loope
and
ins
ret
lock
dec
add
test
retf
stos
pop
mov
sahf
cs
leave
add
popa
imul
mov
cmp
stos
sbb
push
jne
imul
mov
add
fiadd
cmp
jl
mov
in
cmps
imul
xchg
pop
aaa
sar
xor
push
xor
xor
fs
push
mov
loope
and
add
mov
push
outs
xor
cmps
ret
ds
ins
xchg
jl
jmp
out
movs
into
xchg
aam
jne
fistp
or
pop
imul
xchg
fisttp
inc
jno
add
ins
(bad)
repz
cmp
push
xchg
jne
mov
lds
jmp
leave
jno
xchg
and
call
pusha
scas
pop
inc
jmp
push
mov
mov
push
js
cmp
lahf
cmp
ds
jo
gs
rol
retf
jo
icebp
jp
adc
mov
leave
or
mov
inc
ins
(bad)
or
pop
scas
hlt
dec
mov
sub
fnsave
mov
jns
xlat
lods
fcomi
pop
lahf
aaa
stos
fdivr
xor
pop
cmp
cmp
pop
mov
sub
sbb
sub
mov
test
scas
push
sbb
add
dec
jno
sub
push
pop
in
sub
(bad)
and
or
push
into
jmp
je
int
add
les
or
adc
and
xor
mov
mov
out
fnstenv
int3
repnz
mov
mov
lahf
hlt
pop
stos
ins
mov
repnz
rcr
adc
je
mov
xchg
xchg
lods
jge
call
fadd
rcr
inc
les
adc
ret
add
mov
adc
retf
cmp
pop
pop
aam
ret
fcmovnb
enter
outs
fisub
rcr
jne
cmp
es
hlt
pop
dec
mov
cmp
fsub
add
dec
and
mov
sar
enter
imul
outs
std
mov
mov
jae
mov
push
fstp
stc
aam
jns
inc
lahf
push
(bad)
xchg
dec
and
in
sub
jne
dec
scas
call
int
pop
lea
and
mov
jmp
jge
fnstenv
pop
jnp
adc
sbb
inc
mov
sbb
inc
scas
(bad)
xsave
cmp
push
popa
cli
or
lock
xlat
dec
mov
xchg
jl
cmp
inc
mov
and
and
add
or
imul
imul
std
jb
out
test
add
jecxz
rcr
cmp
shr
cmps
xor
jno
test
inc
xchg
push
idiv
pop
call
ins
in
push
in
out
xchg
loopne
outs
inc
stos
lock
icebp
jno
sub
movs
lods
xchg
mov
test
dec
pop
lods
add
mov
inc
stos
add
jno
pop
mov
fs
pop
mov
rcr
jno
inc
xchg
xchg
inc
addr16
es
and
mov
adc
ins
outs
push
and
mov
pusha
xor
jnp
mov
repz
add
mov
enter
jne
sbb
cdq
add
mov
mov
xchg
imul
xchg
scas
jne
(bad)
cmp
xchg
retf
sbb
pop
xchg
push
(bad)
pop
mov
xchg
imul
imul
sahf
test
sahf
test
movs
(bad)
jnp
into
imul
cmc
popf
jnp
cmp
shr
mov
stos
imul
and
mov
ins
inc
xchg
call
adc
inc
mov
adc
pusha
mov
shl
inc
arpl
sub
loop
stc
mov
and
in
ja
adc
xor
cmp
xor
sub
sar
bnd
sbb
daa
cld
jb
into
enter
inc
dec
xor
add
dec
jmp
daa
daa
out
push
mov
loope
mov
fidivr
jecxz
in
xor
pop
push
xchg
(bad)
mov
dec
xor
out
push
cmp
pop
leave
adc
inc
sub
sbb
lea
shrd
push
sbb
mov
popa
fistp
dec
sti
hlt
and
ror
add
inc
mov
(bad)
out
mov
mov
dec
mov
arpl
cdq
shl
pushf
pop
stc
cmp
dec
jbe
cmp
daa
cmp
repz
mov
out
fucomip
sbb
inc
push
xor
push
pop
jo
(bad)
imul
jo
pop
std
cmps
pop
int
mov
mov
mov
pop
inc
pop
fsub
adc
lds
loop
stos
cdq
cli
in
aas
lods
loopne
push
adc
cmp
mov
jno
xchg
jae
movsx
jbe
push
sbb
scas
ins
jmp
jae
es
jae
adc
adc
fisub
out
xchg
mov
jg
rcr
adc
pop
pop
jmp
in
ror
daa
dec
pusha
jge
shl
push
imul
xchg
daa
dec
adc
sub
sti
inc
pop
and
mov
cs
jb
or
mov
outs
ret
xchg
out
push
(bad)
rcr
add
mov
scas
jno
or
mov
mov
add
cmp
jl
add
mov
xchg
dec
pop
jne
neg
jne
int
xor
lods
add
repz
lock
jb
push
call
fs
jno
jbe
xchg
push
push
aas
hlt
pusha
call
jg
and
shr
mov
jnp
aaa
jg
stos
lahf
or
rcr
into
jle
lahf
ins
jne
jno
jg
adc
xlat
lahf
mov
jp
or
fdivrp
aaa
fbld
jne
cmp
pop
ins
jmp
jmp
mov
cs
push
inc
ret
fs
mov
xchg
rcl
in
pop
retf
sub
add
jecxz
ss
fs
xchg
jns
retf
jmp
xchg
push
xor
jb
mov
shl
jmp
push
fidiv
int
inc
jne
xor
adc
jp
mov
adc
push
ret
sub
jge
or
pop
(bad)
jecxz
sub
iret
xchg
in
jecxz
jo
adc
add
add
mov
ja
inc
shr
das
xlat
lock
dec
pop
call
(bad)
test
pop
inc
push
daa
mov
in
or
adc
sub
scas
ss
and
test
mov
ss
not
sbb
dec
nop
xor
pushf
stc
dec
lods
adc
inc
lods
mov
ret
push
cmps
pusha
clc
add
sbb
stc
cmp
rcr
xor
fsub
dec
xlat
xchg
cmps
out
sbb
cmps
push
loop
pop
adc
jnp
adc
xor
hlt
mov
into
popa
fyl2xp1
popf
inc
out
call
js
shr
jge
(bad)
and
jbe
fwait
pusha
js
push
adc
ja
jl
mov
push
push
adc
push
vpand
gs
inc
or
repz
add
sbb
mov
addr16
jl
pop
adc
or
push
jecxz
mov
pop
or
cmps
pop
mov
sub
hlt
push
inc
cmc
fisttp
ja
dec
xor
stos
mov
pop
ds
xor
sub
in
mov
loopne
adc
into
movs
scas
push
bound
sub
fisttp
dec
pop
sbb
mov
cmp
(bad)
aas
div
test
or
mov
jno
jge
stos
sbb
mov
xchg
adc
and
sbb
lahf
pop
push
or
cwde
add
fs
xchg
add
std
adc
gs
dec
test
call
jp
and
jo
lahf
pop
and
inc
xor
icebp
cli
out
rcl
push
cdq
fsin
pop
lods
inc
jae
push
pop
out
pop
scas
jp
dec
mov
imul
jmp
jmp
div
cmp
jne
fadd
mov
shl
jbe
je
xchg
sbb
leave
dec
cmp
cmp
and
sub
push
xchg
test
jecxz
out
ret
and
shr
xor
mov
inc
in
(bad)
and
inc
rcr
jmp
or
das
fst
lea
or
in
pop
aad
pop
add
std
or
mov
jmp
push
mov
in
test
push
mov
ret
int
push
nop
fild
mov
nop
call
data16
je
pop
mov
icebp
cmp
xchg
sysexit
int
cmps
retf
lds
or
(bad)
dec
retf
jl
or
cmp
push
adc
push
dec
mov
xchg
cmp
inc
jge
fst
cs
and
jb
or
sub
jns
push
inc
or
cmp
add
dec
ds
xchg
aaa
xchg
push
mov
mov
mov
outs
lea
sbb
add
and
add
das
mov
jmp
mov
stos
mov
jge
out
sub
push
add
aas
sub
xchg
add
sub
ret
inc
(bad)
mov
arpl
lods
mov
scas
xchg
cwde
dec
in
lahf
inc
add
fwait
dec
test
cmp
lods
mov
xchg
outs
out
push
pop
fmul
icebp
cld
mov
lea
sbb
xchg
sbb
add
(bad)
popa
inc
fisttp
jecxz
xchg
(bad)
out
(bad)
mov
fild
or
cmp
pusha
int
and
sti
clc
arpl
scas
lahf
xchg
and
dec
ds
and
mov
icebp
lds
or
sti
add
mov
sbb
popa
ret
sub
call
je
mov
and
add
and
sub
push
cmp
mov
xchg
retf
popf
cmp
jmp
and
adc
fstp
sub
mov
xchg
pop
pop
movs
dec
mov
and
or
jmp
nop
shr
adc
cld
xchg
repz
inc
rcr
inc
pop
xchg
int
mov
popa
pop
xor
or
pop
pusha
xor
mov
imul
dec
jne
jg
adc
inc
and
imul
call
mov
dec
mov
pop
push
or
push
in
repz
lods
mov
nop
fwait
push
fnsave
pop
or
push
fsubrp
dec
mov
and
mov
mov
xchg
movs
dec
jno
outs
int
pushf
mov
jle
ret
iret
cmc
cli
mov
pop
mov
inc
cli
out
or
cmp
aaa
repnz
lock
dec
or
inc
popa
enter
inc
mov
(bad)
arpl
pop
jmp
push
int3
pop
das
pop
cmp
sub
lahf
loope
imul
mov
fmul
pop
adc
aam
lock
ss
lods
push
cld
sub
scas
adc
or
dec
mov
and
jnp
call
arpl
cmp
xchg
aad
and
and
dec
xchg
dec
sub
(bad)
cmp
push
jae
push
sbb
mov
fcomp
or
sub
outs
loopne
jp
fdivrp
mov
scas
leave
lock
mov
jl
xlat
adc
ror
fistp
inc
mov
add
inc
lahf
clc
les
std
jnp
shl
dec
ins
xor
jo
retf
mov
(bad)
xor
gs
mov
mov
ss
xor
aam
adc
adc
dec
mov
jne
sub
mov
cld
push
into
nop
call
push
repnz
jg
(bad)
pop
pop
fcom
stos
test
in
jmp
sub
mov
add
jmp
out
mov
into
lods
pop
fcomp
push
or
dec
test
dec
jp
push
scas
xor
enter
cmps
push
(bad)
mov
xchg
sub
scas
mov
xor
jne
jns
jmp
push
mov
loopne
jge
call
dec
fiadd
inc
push
pop
dec
fild
or
inc
stos
adc
xchg
push
xchg
mov
inc
push
adc
or
in
retf
pop
jecxz
jecxz
mov
movs
(bad)
add
mov
mov
dec
test
cmp
add
call
pop
jge
mov
and
push
jmp
xchg
popa
push
pop
pushf
mov
xchg
and
loop
imul
and
xchg
dec
xor
xchg
ret
outs
jl
push
adc
out
fidivr
pop
push
mov
leave
not
loop
xchg
in
jmp
scas
dec
jp
in
call
jbe
jmp
adc
ret
loop
sub
aaa
cmps
ins
xchg
loope
shr
repnz
shl
pop
or
pop
sub
pop
mov
ins
out
test
arpl
adc
and
icebp
clc
xchg
ja
inc
outs
sbb
jnp
xchg
xchg
inc
pop
cmps
popf
jl
aam
cmps
xchg
pop
aam
inc
dec
pop
jae
mov
pop
mov
cdq
pushf
jecxz
(bad)
out
fimul
loopne
repz
outs
in
xchg
leave
ja
fdivr
outs
out
inc
jecxz
jg
into
imul
add
xchg
xchg
imul
push
jg
and
out
inc
or
and
mov
out
les
mov
jb
and
and
lds
and
sub
test
push
mov
xchg
out
lods
pop
ja
outs
push
pushf
mov
mov
aaa
jo
mov
aad
popw
cmp
mov
mov
inc
sbb
jmp
rol
pop
es
out
std
test
scas
jle
jbe
sub
mov
mov
jno
shl
dec
dec
cdq
cmp
fild
xchg
mov
mov
popf
sub
cli
aas
cmp
xor
xchg
push
jb
xchg
push
in
adc
shl
adc
test
cmp
aad
scas
mov
inc
sbb
cmp
pusha
or
or
mov
push
fild
stc
push
mov
in
jmp
cmc
cli
fs
cmps
movs
dec
cmps
lea
lock
add
push
lock
rcl
call
or
mov
cmp
mov
mov
sar
outs
shl
mov
push
xchg
cmp
outs
dec
gs
ss
mov
and
ret
fcmovu
add
lods
adc
idiv
cmps
cmp
sub
add
fdivr
mov
lds
popf
jl
sbb
sub
icebp
movs
mov
addr16
or
add
or
adc
in
jmp
dec
imul
sub
js
pusha
nop
pop
cmp
xor
push
dec
pusha
ret
fcomp
jge
push
mov
enter
jge
xor
retf
mov
(bad)
out
cmp
add
arpl
dec
sub
icebp
test
scas
sbb
not
sub
xor
in
mov
push
mov
sub
inc
xchg
cdq
mov
fimul
cmps
clc
rol
ret
adc
inc
dec
add
lds
jbe
jp
sub
sub
iret
lods
test
nop
shr
jbe
sbb
(bad)
push
ret
addr16
xor
je
mov
leave
stos
push
mov
(bad)
jmp
retf
dec
jmp
add
aam
repz
push
cdq
add
cmc
imul
push
jmp
lock
imul
cmps
stc
aas
xchg
push
icebp
dec
lds
xlat
sub
lds
push
jg
xchg
dec
jmp
js
push
ja
push
sahf
fwait
fs
xchg
popf
addr16
sbb
sbb
pop
out
dec
rcr
or
add
retf
loop
mov
xor
sbb
dec
jmp
repnz
call
push
(bad)
and
outs
div
jl
lock
sbb
jnp
inc
mov
mov
mov
cmps
sbb
mov
mov
lods
pop
add
xchg
lds
(bad)
rcr
cmp
ins
adc
les
jecxz
sub
push
popf
pushf
cmps
movs
imul
loopne
xor
mov
bound
into
or
in
mov
out
mov
ss
push
rcl
mov
int
jle
add
sub
add
mov
jbe
pop
sti
and
stos
inc
inc
popf
mov
adc
iret
add
sbb
mov
movs
stos
xchg
adc
unpckhps
dec
cld
test
inc
sub
push
jl
lds
mov
jg
fcom
outs
sar
push
or
push
loope
sub
(bad)
mov
dec
loop
pusha
cmp
pop
lahf
pop
fs
cli
push
shr
sub
daa
aaa
add
push
bound
inc
mov
lock
sub
cwde
push
dec
sbb
cmp
in
call
push
inc
adc
retf
dec
inc
in
out
pusha
mov
pop
stos
test
repz
add
dec
or
gs
jo
add
and
enter
xchg
popf
cli
xor
cmp
mov
and
loope
lahf
ror
pop
ins
xor
in
fnstsw
call
jb
push
inc
push
add
or
pushf
dec
or
mov
sahf
dec
dec
dec
mov
arpl
sub
ret
mov
enter
mov
sub
push
test
dec
shr
or
mov
push
daa
sti
ins
dec
call
add
ins
mov
lods
mov
mov
fsubr
xor
or
push
inc
push
sub
loop
idiv
scas
push
mov
and
inc
jnp
pop
movs
outs
addr16
mov
sbb
das
mul
lahf
shr
mov
popf
push
mov
push
aas
jmp
gs
icebp
or
push
call
lods
in
and
repz
pop
jno
mov
sbb
inc
push
jmp
(bad)
retf
cmp
cmp
mov
jge
dec
mov
popa
icebp
fcom
add
mov
jns
fistp
iret
cmp
dec
sub
sar
call
jecxz
or
(bad)
sub
in
pop
inc
popa
mov
inc
outs
into
sar
test
pop
xor
pushf
dec
test
jp
cmp
imul
sbb
popa
adc
dec
in
data16
sbb
fdiv
arpl
mov
in
inc
aaa
jmp
jo
aam
add
out
jb
xchg
pop
fs
dec
fsubr
jo
and
sub
or
ins
inc
in
fsub
cmp
push
repz
stos
or
leave
repz
pop
dec
sbb
pop
hlt
stc
(bad)
mov
sub
fnstcw
push
(bad)
dec
or
stos
(bad)
repz
adc
and
iret
dec
sub
out
cld
cdq
int3
lahf
or
jle
out
test
inc
sbb
mov
enter
and
pop
repnz
mov
movs
and
adc
adc
dec
cdq
daa
dec
pop
fld
xlat
pushf
fistp
jp
lock
sbb
cmp
inc
pop
shl
sub
cwde
std
xchg
xor
les
xor
les
mov
setp
mov
jge
je
adc
fwait
and
out
sub
sub
retf
test
or
pop
mov
inc
jmp
ftst
mov
mov
fld
add
stos
(bad)
clc
retf
xor
mov
cmp
xchg
call
enter
xchg
adc
push
lods
adc
and
nop
cmc
mov
pop
ja
frstor
pop
lea
aaa
cdq
mov
cmp
cdq
repz
pop
(bad)
sub
xor
mov
sub
(bad)
pop
sbb
sub
(bad)
jmp
push
out
inc
xlat
inc
push
jo
pop
sbb
mov
das
sbb
cld
call
push
test
sbb
cmps
aam
arpl
aam
rcl
(bad)
aas
xor
jns
loope
ins
outs
xchg
imul
adc
test
fld
cdq
xchg
imul
jmp
pusha
cwde
xlat
xor
lea
push
imul
sub
aam
push
or
adc
jmp
jno
xchg
arpl
pop
jge
xor
aas
jno
push
iret
arpl
pop
neg
sahf
cli
dec
and
fwait
push
icebp
repnz
adc
cmp
in
dec
pop
(bad)
sbb
cli
sub
lds
adc
pop
push
jmp
outs
fwait
add
xor
mov
xor
stos
push
pusha
fwait
movs
dec
imul
xchg
jp
mov
push
push
outs
in
add
sbb
hlt
mov
lahf
call
mov
jmp
dec
ffreep
and
jns
jo
or
not
fstp
pop
pop
xor
loopne
dec
retf
pop
cmp
fdiv
sub
or
sbb
nop
jmp
push
retf
mov
pop
adc
ja
es
hlt
repz
push
sbb
fdiv
(bad)
in
or
lods
int3
sub
sub
and
test
rcl
sub
(bad)
mov
jbe
cmps
imul
loope
(bad)
adc
in
or
sbb
fld
repz
aas
cmp
mov
cmp
daa
lods
leave
sbb
xchg
inc
cmp
push
scas
js
inc
fbstp
test
cmp
enter
je
mov
xchg
iret
xchg
ficom
shl
xor
pop
lods
jmp
push
mov
jp
scas
push
jg
mov
js
or
cld
add
sahf
push
cwde
add
movs
ficom
test
mov
jb
(bad)
out
mov
xchg
push
add
int
out
push
or
das
adc
xor
ins
dec
xchg
and
ret
jecxz
cmp
and
lods
mov
pop
jmp
nop
pop
in
fs
shl
sub
push
and
ficom
out
xchg
dec
push
dec
test
jb
movs
xchg
aad
call
cmps
sbb
cmp
xchg
scas
in
jp
fild
cmp
dec
adc
sub
mov
dec
ins
add
stos
mov
out
adc
dec
adc
xchg
or
pop
xchg
dec
loop
sbb
adc
push
push
jecxz
ds
push
lds
repz
jno
daa
adc
repnz
cmp
xchg
jge
sub
add
jns
push
sub
mov
(bad)
jmp
fdivp
(bad)
(bad)
ins
ds
push
lds
inc
rol
pop
cmp
dec
jp
add
cli
xchg
fwait
es
xor
push
pushf
add
sahf
jbe
mov
mov
add
in
and
call
shl
(bad)
jecxz
sbb
or
mov
cmp
push
outs
(bad)
add
adc
cs
nop
cmp
(bad)
push
outs
adc
or
and
sub
enter
pop
int
popf
in
fwait
inc
xchg
loopne
xor
push
mov
sub
cmp
mov
ret
add
jmp
test
sub
das
mov
and
sub
or
leave
mov
jl
ds
fsub
test
aaa
sub
jnp
icebp
ret
or
(bad)
(bad)
out
inc
ret
xor
jmp
dec
popa
sbb
iret
xchg
jne
gs
mov
xchg
rcl
and
jp
rcl
push
xchg
inc
pop
inc
ss
fst
pop
js
call
mov
inc
test
stc
psrlq
sub
movs
xor
sbb
push
in
push
retf
in
(bad)
icebp
and
jl
adc
in
and
pop
loop
fdiv
stc
sub
xchg
stc
dec
and
stos
jne
jle
nop
ret
imul
(bad)
(bad)
pop
pop
mov
outs
xor
inc
cli
add
fmul
or
aas
jg
mov
adc
adc
jae
mov
in
xchg
and
ds
mov
xor
stos
pop
cdq
hlt
adc
pop
imul
or
push
arpl
add
jmp
jge
and
jmp
xor
adc
sbb
or
dec
div
les
dec
mov
mov
mov
cmc
xor
pushf
je
cmps
outs
dec
aaa
push
dec
fwait
sbb
mov
dec
aaa
sbb
xchg
repnz
fcomp
cli
js
inc
stos
dec
popf
or
(bad)
jns
repnz
sbb
push
jno
jmp
jl
clc
adc
jge
dec
pop
bound
sbb
pop
gs
jecxz
push
or
or
loopne
cmc
lds
cmp
test
mov
mov
or
push
out
test
mov
jns
jno
in
sbb
sahf
mov
jp
fsubr
cmp
mov
stos
das
movs
gs
push
pop
xchg
sbb
fbld
je
out
jae
xor
push
iret
push
xor
loope
jnp
aad
xchg
inc
daa
jae
or
mov
sbb
jns
imul
dec
hlt
sbb
cli
sub
fisubr
popf
lods
stos
jmp
stc
pop
mov
ror
aas
out
ss
ins
idiv
lods
inc
in
neg
lea
enter
sbb
rol
mov
mov
mov
(bad)
in
xor
cld
xor
xchg
jns
lods
pop
loopne
daa
mov
out
xchg
or
mov
cmp
retf
pop
popf
cwde
in
loopne
stos
popf
sub
movs
and
retf
sub
mov
xor
stc
dec
jb
movs
stc
(bad)
sbb
dec
cmp
add
cmps
or
xchg
out
ret
aad
mul
in
mov
xchg
push
pop
pop
jno
std
dec
ds
push
adc
jns
outs
(bad)
je
mov
or
jl
sub
pop
ins
push
bound
xchg
(bad)
or
enter
in
adc
inc
sahf
arpl
dec
test
pop
sbb
jp
not
dec
gs
in
cmps
cmps
dec
push
jl
push
iret
frstor
loope
xor
dec
out
rcr
or
xchg
test
adc
xor
rol
mov
xchg
int3
sub
jmp
push
sub
js
test
movs
mov
pop
repz
loope
in
ds
jmp
jo
out
pushf
ins
in
cmp
mov
sar
retf
mov
fisttp
mov
dec
fdivr
andps
xor
sbb
push
and
xor
pop
in
in
xlat
sbb
ja
popa
adc
mov
xchg
and
das
mov
int
jnp
or
xor
dec
cmp
cmp
mov
in
je
xchg
sub
aad
mov
ret
popa
xlat
sbb
stos
dec
pop
mov
xchg
mov
jle
call
popa
popf
inc
leave
push
pop
or
mov
mov
fxam
mov
jg
in
mov
push
xor
fwait
or
jg
in
mov
outs
jne
mov
popa
sub
xchg
call
cwde
pop
mov
push
out
adc
pop
sub
push
outs
push
icebp
inc
xor
data16
repnz
das
dec
mov
in
or
push
push
(bad)
jl
xchg
stc
call
popf
sti
mov
hlt
call
fild
loopne
jle
and
js
leave
and
ins
fisubr
xchg
mov
fst
dec
add
xchg
and
mov
and
jge
pop
(bad)
lds
shl
movs
cmp
inc
push
rcl
or
mov
xchg
inc
fdiv
das
gs
mov
sub
mov
mov
push
push
mov
(bad)
xchg
out
and
sbb
jns
das
outs
mov
(bad)
cmp
pushf
add
ins
ds
mov
daa
outs
sbb
(bad)
les
push
retf
sar
add
sbb
or
xor
loopne
or
mov
ret
sub
rol
ins
imul
pop
mov
dec
mov
(bad)
jecxz
inc
add
adc
(bad)
and
in
lea
retf
xchg
jmp
dec
mov
mov
mov
and
test
or
mov
pushf
cmp
jno
inc
sbb
adc
mov
pop
pusha
dec
mov
cmps
test
sbb
mov
push
shr
jne
pop
les
outs
fild
xchg
fadd
push
pop
sahf
ret
cmp
fcmovne
cmp
icebp
sub
lods
shl
or
inc
stos
sub
iret
fsub
aad
loop
cs
push
out
push
cvtpd2ps
adc
stos
not
into
inc
retf
mov
retf
ror
xchg
stos
ss
btc
add
xor
pop
xor
es
in
inc
call
enter
add
inc
mov
sub
mov
ins
mov
sbb
cli
dec
cmps
xchg
dec
cmp
cmp
jb
cld
jb
addr16
jbe
xor
push
adc
pop
jp
inc
icebp
ds
pop
push
fisub
mov
and
jae
dec
inc
pushf
(bad)
dec
ss
sub
movs
mov
push
push
pop
fidivr
jecxz
aad
fst
or
cmp
adc
mov
inc
push
or
rol
je
jg
pop
mov
in
ja
mov
into
rcl
std
mov
push
sub
mov
outs
add
ins
adc
leave
std
add
jecxz
pop
sub
dec
enter
jg
or
mov
mov
sti
lds
imul
fst
push
mov
inc
mov
js
mov
fisttp
xchg
in
dec
sar
add
in
std
push
shl
es
adc
les
ret
lods
jae
inc
nop
jnp
shl
push
data16
in
dec
mov
adc
in
in
xchg
into
adc
adc
enter
xlat
add
mov
daa
mov
sub
js
movs
ds
mov
daa
test
dec
das
lds
sbb
lds
ds
push
dec
(bad)
out
pop
rcr
add
retf
jp
or
push
jno
mov
cmp
lock
sbb
add
cmps
jae
mov
or
mov
push
pushf
leave
out
adc
add
jnp
int
pushf
push
outs
out
mov
(bad)
fsubr
cmc
mov
push
jmp
popf
cs
xchg
sbb
hlt
loope
or
movs
xor
dec
call
inc
(bad)
mov
mov
and
dec
leave
add
es
push
out
xor
fimul
sbb
adc
inc
push
mov
mov
mov
(bad)
inc
inc
lock
mov
ins
pop
jmp
dec
scas
out
(bad)
mov
fbstp
scas
push
xor
in
jmp
dec
dec
ficomp
mov
dec
jo
or
mov
mov
sub
arpl
outs
jmp
mov
test
les
nop
daa
sbb
jle
pop
push
jb
cdq
sbb
div
retf
scas
jnp
and
pop
ja
xchg
movs
ret
cdq
xor
fdiv
jo
mov
ins
dec
rcr
shr
fdiv
sub
dec
dec
hlt
xor
ins
mov
dec
cwde
enter
xor
pop
mov
sahf
mov
xor
push
inc
pusha
lods
or
mov
les
outs
scas
frstor
cmp
push
fst
sub
out
fstp
xchg
xor
arpl
(bad)
shr
mov
pop
inc
cmc
les
mov
pushf
arpl
mov
cmp
jl
mov
rcl
inc
in
in
cdq
cmp
test
xadd
cwde
xor
mov
retf
sbb
mov
adc
in
mov
outs
shr
neg
test
cmps
dec
xor
hlt
stos
xchg
push
add
lods
cmp
dec
xchg
inc
xchg
jne
xor
hlt
dec
nop
pop
iret
stos
push
dec
mov
jp
jl
(bad)
cmp
mov
inc
dec
shr
or
jge
stc
and
xor
jne
push
push
push
pop
xor
sbb
gs
and
movs
adc
enter
ja
call
cmp
mov
dec
xor
mov
sbb
mov
xor
rol
in
js
dec
mov
and
cmps
xchg
and
push
sar
call
pop
gs
jle
mov
mov
jecxz
in
cmp
sub
xor
and
jmp
xor
and
xor
xchg
inc
xchg
sub
add
(bad)
std
push
or
xchg
mov
or
aas
mov
cld
jecxz
xchg
pusha
dec
repnz
adc
jl
repz
push
mov
ficom
shl
or
jecxz
dec
ret
or
mov
sbb
jecxz
pusha
push
mov
push
mov
bound
sar
outs
fisub
jmp
mov
gs
into
sbb
lea
cli
scas
dec
dec
retf
push
mov
xor
mov
in
pop
sbb
in
pop
or
ret
lahf
inc
int
loop
jno
adc
inc
add
xor
cmps
stos
and
fiadd
shl
jge
jne
call
ins
pop
push
shr
cs
(bad)
jecxz
test
adc
outs
mov
fwait
ret
cs
inc
das
daa
loopne
push
icebp
cmc
sub
xchg
rcl
inc
mov
loopne
xchg
(bad)
ret
cli
les
nop
fs
jae
jae
mov
mov
cs
int
js
fwait
(bad)
fs
sbb
xchg
jb
dec
shr
nop
popa
xor
inc
sahf
xor
cmp
adc
push
jg
push
sub
shl
cmps
dec
jb
cmp
cmp
or
or
mov
js
pusha
jp
jl
push
ds
neg
sub
jno
mov
mov
aas
dec
les
aad
cmp
xchg
add
dec
and
(bad)
cs
std
cmp
loope
clc
test
(bad)
jo
aaa
mov
adc
mov
mov
out
or
and
fistp
jne
cmp
icebp
mov
(bad)
jge
es
add
mov
push
push
cmps
jmp
xor
xor
mov
in
inc
ins
test
retf
pop
xor
add
sbb
push
sub
hlt
mov
jo
ds
movs
shl
mov
xor
stos
jmp
cmps
scas
push
mov
lds
shr
mov
and
sbb
ds
jp
adc
fwait
mov
mov
jp
ds
ss
fisub
inc
pop
test
dec
mov
cmc
dec
sub
fdiv
call
or
test
test
outs
push
add
cmp
ja
mov
mov
cmps
fdivp
cmp
xchg
inc
or
int3
push
ror
outs
xchg
ss
popf
pop
dec
dec
sub
call
cld
out
xchg
jnp
addr16
jp
loope
inc
pop
pop
aad
inc
cli
mov
add
inc
sub
nop
test
(bad)
in
aad
ret
inc
mov
nop
repz
cli
cwde
inc
jno
xchg
mov
imul
xchg
mov
neg
push
ja
sbb
sub
and
movs
in
xor
repz
ss
outs
js
cmc
add
call
cmp
push
in
adc
xor
dec
push
retf
push
mov
scas
and
test
fstp
push
dec
pop
shl
std
xchg
adc
mov
pop
mov
aad
or
daa
mov
mov
xor
fsubr
fcomp
jbe
imul
mov
sub
bound
xor
test
imul
jmp
or
std
pop
jl
cmps
iret
lahf
push
repnz
ins
scas
sub
mov
retf
jne
inc
cmc
retf
icebp
or
leave
lock
loop
mov
cmp
cmp
jo
mov
xchg
or
clc
jne
jmp
(bad)
call
popa
gs
cld
out
jne
std
cmps
xor
into
mov
gs
xchg
enter
push
push
mov
in
call
stc
movs
movs
(bad)
(bad)
fisubr
mov
icebp
pop
mov
outs
daa
shr
scas
sub
(bad)
les
test
data16
in
pop
cmps
xlat
std
xchg
sbb
ss
sub
(bad)
daa
mov
adc
or
sbb
cwde
and
nop
fdiv
and
mov
jns
cmp
mov
fst
adc
(bad)
out
jns
add
out
dec
test
mov
call
cli
nop
sbb
ficom
mov
fsubr
jp
sti
fst
xor
jge
mov
sti
cmps
(bad)
idiv
retf
pop
mov
aaa
sub
fistp
(bad)
in
(bad)
mov
ret
fucomip
enter
inc
sub
mov
enter
ja
and
push
jne
out
xor
inc
pop
jge
inc
outs
jecxz
push
in
leave
xor
xor
out
cmp
mov
fdivr
add
pop
stc
pop
ret
cmps
mov
int
pop
loope
in
cmp
ss
movs
or
ret
add
cli
inc
(bad)
mov
aam
add
lods
xchg
adc
jg
pop
adc
dec
movs
iret
ins
mov
iret
(bad)
je
aam
inc
imul
xchg
pop
neg
aas
sbb
jnp
cmps
jno
pop
cmp
dec
inc
div
and
dec
adc
cld
es
call
sbb
lods
push
das
mov
dec
pop
jmp
pop
aam
call
sub
fisub
inc
cmp
out
shl
je
mov
push
fwait
popf
cmp
add
push
push
jnp
jg
in
sbb
jmp
test
int3
xchg
cwde
lock
inc
jne
ret
ret
mov
add
push
jl
cdq
out
and
inc
xchg
aas
mov
and
ins
push
sub
(bad)
or
cmp
and
lods
push
xchg
loopne
test
cmp
movs
jp
adc
setl
jg
mov
std
enter
sar
jecxz
mov
lds
cwde
push
sbb
imul
or
pop
(bad)
xor
cmp
sub
out
aas
or
cli
jb
cmp
lea
xor
dec
shr
xchg
loopne
lds
dec
and
fld
mov
loope
outs
sub
mov
adc
jnp
fsub
cmp
dec
add
mov
icebp
cmp
pop
add
sbb
jg
mov
pop
bound
nop
outs
mov
shl
xor
push
adc
dec
mov
gs
pop
jno
test
add
mov
lahf
out
pop
outs
retf
mov
push
(bad)
cwde
or
ss
push
sub
mov
lock
outs
dec
cs
stos
cmp
bound
scas
jae
(bad)
cld
sti
mov
call
cmp
pop
inc
fwait
jo
xor
mov
out
fnstcw
icebp
int3
cwde
push
push
(bad)
push
dec
jb
sbb
(bad)
and
cmp
xchg
push
inc
jl
(bad)
cmps
mov
lea
sahf
pop
and
xchg
xchg
js
dec
enter
mov
pop
neg
or
icebp
and
in
daa
jno
dec
repz
mov
add
jmp
sbb
jns
stos
jmp
movs
cli
push
push
mov
cmp
or
cdq
mov
xchg
add
test
imul
fst
inc
sbb
jno
inc
enter
mov
lock
bound
test
xchg
rol
jmp
or
pusha
jns
and
jo
cmp
ret
and
addr16
mov
pop
or
iret
mov
imul
add
sub
dec
jbe
xchg
or
push
mov
pop
or
xchg
push
jnp
inc
test
dec
cmp
test
jmp
push
mov
fisubr
repnz
inc
outs
ja
popa
xchg
mov
(bad)
neg
shl
jmp
fidivr
inc
jge
cmp
int3
ds
jmp
call
pop
xor
pop
xchg
push
sub
jae
pop
outs
aam
rcl
adc
pop
sahf
mov
add
sub
sub
xor
xor
or
fild
cmp
dec
xor
dec
jno
scas
jb
js
xor
repz
add
add
adc
fs
mov
fwait
repz
js
and
jl
retf
pop
lods
dec
sbb
scas
sub
iret
sbb
retf
pop
jle
idiv
and
pop
push
neg
and
cmp
push
sbb
adc
imul
int3
and
sbb
std
sub
mov
mov
pop
(bad)
sub
xor
inc
int3
and
pusha
dec
je
add
jg
imul
outs
or
xor
in
into
sbb
cmp
in
sahf
retf
pop
test
call
mov
lock
lahf
cmp
mov
inc
and
inc
xor
pop
ror
mov
mov
add
xchg
mov
leave
and
cmp
test
xor
daa
jb
mov
jmp
pop
or
dec
(bad)
adc
es
lds
inc
js
inc
ins
fcmovne
push
xlat
xchg
and
jmp
jno
inc
arpl
push
(bad)
push
mov
mov
xor
add
arpl
fistp
cmp
bound
ficom
shl
sahf
lods
sub
adc
dec
or
pop
and
and
ins
push
mov
aad
lahf
cwde
push
scas
mov
xor
cdq
jae
and
or
fst
in
mov
bound
mov
adc
in
lea
stc
mov
jae
repnz
imul
ss
cmp
adc
ret
xlat
or
push
jns
fnstsw
jmp
iret
xor
lods
push
ret
rol
popf
xchg
iret
mov
aas
mov
push
inc
sbb
pop
xchg
ret
pop
hlt
pop
dec
mov
aaa
jmp
push
call
dec
or
ret
and
imul
fld
or
lock
inc
inc
popa
lods
ror
ja
sub
or
mov
or
scas
(bad)
lock
jne
and
push
mov
icebp
xchg
rol
enter
stos
dec
je
ins
ss
fsub
fdivp
xor
out
add
xlat
mov
push
ins
or
dec
js
jns
inc
stos
retf
ins
scas
fdivr
mov
adc
or
cmp
sbb
cmc
dec
out
cmp
hlt
push
test
out
pop
push
push
mov
(bad)
sti
ja
xchg
mov
sub
gs
mov
pxor
mov
in
dec
lods
inc
sub
pushf
rcr
adc
push
adc
sbb
(bad)
leave
int3
mov
cwde
pop
vpmaxub
sbb
adc
push
xchg
fsub
cmp
ins
fs
dec
jno
test
push
hlt
dec
bound
in
inc
ins
and
jl
adc
fcomp
addr16
sub
int
je
dec
jl
cmps
xchg
popa
jb
jbe
adc
push
sar
push
or
jns
pop
sbb
inc
loope
jge
and
out
aam
mov
dec
mov
inc
xchg
mov
pushf
test
repz
shl
xchg
rol
in
xchg
mov
aam
pop
fs
pop
out
mov
iret
test
mov
xor
and
dec
push
js
and
stc
dec
mov
mov
pop
jge
ror
and
int3
pop
mov
scas
xchg
cmp
scas
or
xor
out
fld
inc
mov
adc
shr
dec
aad
sbb
je
jno
mov
mov
jns
call
adc
fidivr
pop
jns
fld
cwde
add
mov
pop
outs
call
mov
ds
jecxz
mov
and
add
lods
out
or
test
cwde
xchg
jns
mov
jge
out
and
push
pop
icebp
dec
sub
scas
mov
mov
adc
lods
out
mov
rol
xchg
repnz
cmps
leave
or
repnz
mov
xchg
mov
mov
loope
in
outs
xor
lods
sbb
ds
pop
daa
and
sub
fldpi
jl
dec
scas
jp
push
xor
(bad)
sti
shr
cmp
xchg
leave
pop
nop
xchg
imul
imul
cs
pop
xchg
idiv
(bad)
int
mov
(bad)
xor
sahf
jo
fmul
sub
pop
(bad)
mov
retf
or
dec
mov
or
les
fwait
xor
(bad)
pushf
cld
shr
push
aas
retf
dec
mov
pop
aam
sbb
iret
xchg
mov
retf
lock
fwait
pop
cmp
dec
fsub
jnp
stc
xchg
ins
mov
push
inc
test
mov
test
jno
scas
push
inc
jl
(bad)
xor
xor
and
fld
movs
mov
lahf
(bad)
repz
jne
jmp
ficom
es
jle
mov
mov
mov
sbb
(bad)
je
mov
inc
mov
sbb
jmp
mul
adc
cli
outs
cmps
or
mov
xchg
fsub
mov
mov
out
cmp
pop
shr
movs
pop
jae
enter
pop
jp
je
bound
(bad)
ins
cmps
fstp
cmc
fiadd
sub
xchg
iret
pop
xchg
lods
push
sub
ja
cli
xor
repz
ins
aad
and
das
mov
lods
lods
xchg
xchg
add
mov
or
loop
or
call
fdivr
(bad)
and
enter
dec
ja
jg
ins
pushf
sbb
test
mov
jmp
je
popf
hlt
lock
xchg
xchg
test
xchg
and
mov
mov
frstor
or
mov
fstp
mov
out
lea
mov
add
mov
pop
add
mov
daa
daa
enter
sahf
jb
jle
jecxz
addr16
in
or
xchg
jns
xchg
pop
xchg
test
adc
jbe
push
mov
ins
daa
fs
cli
dec
dec
xchg
stc
stc
add
sub
lock
sar
fcmovb
cs
jnp
push
sub
add
push
xchg
mov
icebp
mov
scas
pushf
or
jmp
repnz
sbb
icebp
pop
mov
pop
cwde
test
mov
out
test
sub
adc
xor
mov
cmp
or
pop
out
mov
pusha
nop
mov
lock
outs
loopne
inc
mov
ds
push
xor
(bad)
jo
cs
lods
rcr
mov
cmp
les
xor
cdq
sub
ret
and
cwde
mov
jge
enter
xor
xchg
ins
inc
loopne
add
loopne
mov
inc
mov
push
mov
stos
push
psrld
iret
fdivr
retf
aaa
je
jnp
lds
inc
mov
lods
pop
aad
sbb
imul
clc
pop
xchg
out
das
pop
outs
or
push
push
pop
js
dec
and
sub
add
dec
aad
sbb
mov
mov
xchg
adc
pop
dec
add
fisttp
sub
xor
mov
popf
(bad)
mov
sbb
lock
pop
xchg
bound
ror
and
or
in
pusha
jle
(bad)
test
call
arpl
dec
xor
jae
test
cmc
cmp
jp
mov
dec
lock
mov
lea
fldenv
xor
mov
(bad)
fmul
bound
mov
sbb
pop
(bad)
int
lea
aam
(bad)
in
xchg
shl
jno
(bad)
rcr
movs
or
jmp
cld
xchg
aam
mov
xchg
call
call
iret
adc
push
dec
test
mov
pop
inc
jmp
cwde
mov
addr16
out
xor
mov
push
xor
sub
sar
fstp
jl
mov
aad
mov
cmp
gs
pop
rcl
push
movs
inc
sub
pop
(bad)
cs
add
bound
pop
mov
fild
out
mov
sar
inc
mov
cs
lds
(bad)
sub
and
push
add
hlt
dec
call
pop
mov
push
rcr
mov
repz
dec
xchg
sbb
test
iret
sub
xchg
jmp
add
fisub
xchg
jo
jle
mov
push
and
xlat
out
pop
fist
xchg
jp
fsubr
lods
std
xchg
pop
and
ret
in
les
xchg
mov
cmp
cmps
inc
push
sbb
xchg
imul
mov
xchg
imul
or
jno
add
inc
in
pusha
ds
mov
push
sti
mov
mov
adc
lods
lods
push
nop
outs
or
ret
test
cmp
jae
adc
loope
mov
or
xchg
cmps
dec
mov
cmps
dec
inc
out
es
fnstcw
pop
dec
dec
clc
mov
imul
js
and
push
push
push
aad
daa
repz
inc
sub
jecxz
jle
mov
inc
jae
cmps
fbld
dec
add
mov
int
pop
push
mov
pop
mov
add
movs
in
or
pop
fstp
(bad)
inc
mov
xchg
ret
(bad)
jo
shl
xor
lods
jb
fcmovbe
ins
jl
loop
nop
pop
(bad)
adc
pop
in
dec
sbb
push
scas
add
jmp
(bad)
not
push
adc
cdq
mov
pop
mov
push
jne
pop
jg
fstp
sbb
mov
adc
xchg
sbb
adc
(bad)
leave
inc
push
push
dec
fdivp
or
fidiv
js
mov
les
call
in
in
push
call
mov
push
out
jb
xchg
inc
or
xor
pop
into
xchg
in
mov
leave
mov
cmp
xchg
call
adc
jb
dec
sbb
ins
hlt
fsub
sar
mov
pop
jge
adc
dec
js
mov
xor
test
out
jmp
scas
jecxz
pop
addr16
mov
into
addr16
mov
inc
pop
pop
mov
and
addr16
pop
hlt
jo
add
mov
call
xchg
not
movs
xlat
jnp
jg
sti
into
dec
adc
jecxz
mov
cld
mov
and
adc
inc
adc
push
xor
mov
add
je
push
or
retf
hlt
sub
push
das
dec
mov
bound
fadd
aas
lahf
cmp
xor
inc
scas
or
mov
retf
fld
push
mov
cmp
popa
aas
dec
jmp
or
jo
or
jmp
ret
push
or
call
or
cmp
add
popa
sub
xchg
nop
shl
adc
mov
mov
sbb
dec
ins
mov
lahf
cmps
dec
leave
sti
ror
lods
dec
push
dec
call
outs
jmp
ja
es
mov
push
mov
fild
jns
pushf
call
sbb
jns
cmp
mov
das
xchg
mov
xchg
rcr
mov
dec
xor
outs
int3
cmp
sub
shl
imul
push
lahf
repnz
mov
dec
stos
fucomi
fmul
push
test
cld
mov
pop
or
lock
jmp
push
je
cmps
rcr
sbb
mov
adc
sbb
xchg
pop
mov
jge
xlat
cmp
js
ror
retf
mov
mov
stos
loop
mov
mov
xor
fldenv
shl
icebp
pop
cli
or
stos
and
mov
les
cmp
repz
popf
bound
sbb
fistp
jmp
or
mov
and
sub
xor
push
and
test
(bad)
cmp
dec
mov
mov
sahf
lea
sbb
sbb
add
inc
inc
scas
jo
out
aas
xchg
and
mov
inc
es
pop
dec
(bad)
cli
inc
(bad)
shr
jne
cmp
sub
mov
jmp
mov
stos
mov
add
pop
fdiv
jle
xor
mov
stos
(bad)
leave
movs
lock
or
leave
xor
(bad)
iret
std
or
inc
cmps
mov
fs
cdq
xchg
fcom
(bad)
push
scas
adc
mov
out
aam
test
cmp
push
fs
jge
cmp
imul
arpl
popa
push
fidiv
cmps
or
mov
in
jmp
pusha
scas
push
out
out
lods
in
mov
push
adc
lea
popa
inc
(bad)
cld
int3
sti
inc
cdq
inc
std
add
out
ds
dec
scas
outs
xchg
mov
push
std
mov
push
add
cmps
lock
rol
loope
xchg
dec
pop
leave
ins
sbb
pop
inc
jns
ja
or
or
mov
call
xchg
lds
retf
xchg
sar
fcomp
cs
push
imul
jmp
sbb
outs
aam
mov
movs
test
int
ins
mov
pop
imul
or
shr
clc
out
movs
sub
xor
mov
mul
xchg
mov
ret
sahf
inc
call
mov
jno
lock
lds
sub
mov
cwde
dec
xchg
dec
sub
jne
pop
ins
adc
pop
iret
ins
mov
imul
js
jns
jmp
neg
xor
dec
mov
and
movs
xchg
popf
mov
(bad)
pop
jmp
cmp
das
mov
test
mov
push
add
pop
jno
test
sahf
push
inc
mov
jl
mov
arpl
ins
sbb
xchg
(bad)
daa
fldenv
ja
leave
pop
cmps
jle
xchg
inc
push
imul
test
cli
and
out
adc
add
mul
jbe
jle
push
cmp
fmul
mov
sub
push
dec
or
test
jl
outs
push
mov
popf
int
retf
sub
or
inc
cld
push
lods
pop
pop
and
ins
pop
scas
outs
push
dec
pop
mov
retf
dec
test
add
mov
pop
mov
(bad)
leave
jge
cdq
lods
or
mov
pop
push
lods
dec
sbb
inc
adc
sub
or
and
sbb
cmc
xchg
mov
retf
mov
dec
pop
xor
xor
adc
ja
ins
int
push
and
or
sub
jle
mov
dec
xchg
repz
mov
jnp
call
jmp
sbb
das
fadd
std
mov
sbb
aad
das
push
outs
inc
in
cmps
cmp
pop
push
test
aam
fidivr
retf
jo
or
add
ret
cmp
out
cmp
(bad)
xchg
scas
push
mov
idiv
dec
push
lahf
(bad)
cwde
xlat
adc
sahf
out
sbb
iret
mov
daa
dec
lea
lds
stos
sub
call
push
or
jbe
cdq
sti
jmp
xchg
mov
jl
loopne
mov
out
push
inc
sub
cmp
fs
out
add
retf
add
test
pusha
movs
inc
push
sbb
hlt
imul
stc
adc
stos
out
int3
mov
rcr
add
(bad)
push
hlt
mov
rcr
ds
push
fxch
xor
cmp
jnp
rcr
jbe
inc
and
aad
dec
sti
icebp
jp
and
loope
out
repz
and
cs
in
retf
sbb
add
hlt
inc
jns
jmp
xchg
mov
dec
loope
ret
inc
out
mov
sub
adc
icebp
lods
xor
and
inc
sar
rcl
dec
pop
call
cs
jmp
out
or
fadd
div
add
rol
cld
clc
movs
sbb
or
adc
aas
call
push
mov
imul
das
mov
pop
imul
sbb
mov
jne
popf
or
(bad)
neg
push
inc
imul
mov
dec
or
or
xlat
push
movs
xchg
xor
dec
mov
imul
mov
adc
cdq
cmps
mov
mov
pop
mov
push
pusha
xor
mov
sbb
push
jg
add
ds
in
inc
(bad)
mov
pop
call
adc
fimul
ret
stos
fwait
or
add
ins
xchg
ds
imul
or
(bad)
icebp
push
jno
(bad)
in
sbb
jmp
jae
or
inc
test
inc
es
pop
loope
sbb
cmp
gs
arpl
push
push
dec
inc
pop
scas
mov
loop
in
fist
xchg
xchg
cmps
add
or
cmp
and
xchg
push
je
stos
test
aad
clc
mov
inc
mov
pop
cmp
jle
adc
xor
jl
aas
scas
addr16
hlt
adc
js
movs
mov
out
mov
push
mov
in
dec
cmp
frstor
arpl
add
pop
or
xor
in
or
scas
mov
pusha
push
jle
add
popf
mov
cmp
in
cvtdq2ps
test
fld
fnstenv
mov
jp
adc
icebp
mov
test
pop
sti
sahf
mov
inc
data16
mov
mov
jmp
push
out
cli
cmp
not
mov
stos
mov
mov
pop
ins
arpl
retw
mov
cmps
leave
sub
and
mov
les
inc
cld
mov
push
pop
mov
and
jmp
es
and
add
inc
mov
push
fdivr
data16
ds
pop
sub
and
mov
xor
mov
mov
sub
out
mov
cmp
xchg
push
push
push
xchg
movs
movs
add
xchg
loope
sbb
std
loop
iret
mov
xchg
(bad)
pop
shl
mov
mov
(bad)
xchg
fstp
imul
sbb
ror
add
fstp
pusha
xor
shl
and
xchg
xchg
retf
dec
out
lock
pop
push
mov
test
frstor
or
stc
fmul
cwde
in
add
rcl
leave
dec
fiadd
inc
jp
fidivr
pusha
add
push
jp
mov
sbb
mov
pop
in
enter
dec
test
pushf
add
or
mov
and
push
int
scas
jge
movs
and
push
retf
jns
(bad)
lods
pushf
pop
jns
popf
push
stc
shl
outs
xor
clc
xor
xor
(bad)
int3
inc
mov
adc
lahf
leave
xchg
dec
jg
xchg
aam
xor
xchg
sbb
test
adc
mov
cmp
mov
push
gs
push
mov
add
fadd
test
sbb
push
pop
scas
push
ror
and
mov
sub
aaa
fild
fisub
sub
push
pop
cld
pop
mov
adc
xlat
xchg
pop
push
pop
ja
xchg
mov
adc
popa
(bad)
(bad)
fiadd
(bad)
cmc
test
stos
lock
in
enter
mov
imul
sbb
in
cmp
mov
cmp
fs
iret
jne
cmp
sub
jmp
xor
cmp
mov
ins
lock
mov
cmps
fidiv
loope
xor
loope
inc
retf
and
js
mov
scas
fld
jnp
pop
fmul
lds
test
sbb
cs
sbb
aas
ror
jae
push
add
cmp
popf
aas
cmps
sbb
mov
cli
cwde
sbb
cmp
mov
out
imul
cmc
mov
mov
stos
or
dec
test
fdiv
ins
jmp
(bad)
jg
mov
pop
xor
(bad)
out
loope
arpl
push
inc
loop
jnp
sar
dec
adc
fs
test
push
fisttp
push
jl
jle
cmp
in
pop
push
adc
test
xor
sar
pop
ja
into
loope
mov
das
repz
mov
and
inc
lds
fisubr
sub
pop
jns
cwde
fst
loope
and
mov
mov
nop
xor
mov
lea
aad
mov
push
inc
dec
push
mov
lds
(bad)
(bad)
xor
xchg
imul
lahf
shr
jmp
push
fild
sub
pop
sbb
pop
lahf
sbb
inc
out
repnz
shl
out
test
leave
psllw
stos
je
pop
dec
repnz
out
std
sub
aas
push
popa
mov
fcom
cmc
jns
scas
mov
inc
mov
icebp
add
pop
mov
pop
rcl
xchg
xchg
jb
retf
retf
dec
test
in
mov
retf
jecxz
jne
shr
xchg
mov
inc
inc
pop
popa
adc
ins
jo
(bad)
pop
inc
cmps
sbb
jl
jbe
jae
mov
fdiv
retf
xchg
sbb
pop
test
add
sub
jmp
jbe
pop
jmp
xchg
fnstcw
push
(bad)
mov
arpl
mov
and
aam
and
dec
pop
imul
addr16
mov
fcomp
(bad)
cmps
scas
inc
aaa
pop
ins
lods
test
inc
jno
jno
adc
sub
sub
sbb
sub
mov
push
xor
or
sar
mov
and
or
mov
mov
movs
push
push
cli
arpl
std
or
(bad)
outs
into
jl
inc
hlt
pop
mov
push
lds
dec
fisubr
fild
mov
jge
repz
iret
jecxz
adc
int
shl
adc
adc
in
mov
pop
push
out
mov
jle
sbb
iret
nop
test
adc
enter
mov
mov
adc
add
mov
push
not
inc
jge
sbb
outs
popf
push
fs
cmp
pop
jbe
add
fbld
fsubr
ret
add
sub
hlt
jmp
les
sub
push
cmp
push
dec
and
lds
outs
mov
sbb
jecxz
or
gs
dec
add
cmp
dec
pop
retf
in
js
sub
js
mov
pushaw
push
pop
jmp
sub
inc
adc
je
loope
push
outs
xor
sbb
imul
push
or
mov
not
dec
mov
jbe
addr16
retf
(bad)
movs
ficom
jbe
bound
mov
in
mov
aaa
ss
ja
mov
mov
iret
sbb
ds
mov
pop
movs
ins
(bad)
pop
or
loopne
je
sub
pop
ja
pop
inc
cmp
bound
cmp
rol
pushf
xchg
jmp
add
stos
add
push
push
cmc
jbe
push
add
add
dec
jns
(bad)
cmp
dec
add
rcl
adc
mov
stos
fs
aad
mov
add
jmp
mov
jg
xor
sbb
jle
stc
push
popf
jno
push
loopne
(bad)
out
adc
push
cmp
cmp
sbb
jmp
push
fnstsw
rcl
mov
test
shl
ins
retf
xchg
jns
push
sbb
pushf
xchg
sbb
xchg
sub
leave
jns
push
rcr
jae
xchg
xchg
cld
jns
xor
dec
dec
push
shr
fwait
xor
js
xor
js
dec
pop
push
mov
loop
inc
test
mov
xor
xchg
mov
fcom
adc
jge
dec
and
cmp
xchg
xor
pop
pusha
loope
xchg
nop
clc
jl
pop
lahf
add
or
push
and
jne
inc
mov
pop
push
loop
dec
or
pop
cdq
and
mov
clc
sbb
jp
pop
stc
push
mov
dec
mov
sbb
sbb
ror
sbb
sub
int3
addr16
mov
mov
or
ins
int
ins
sbb
adc
test
mov
mov
hlt
dec
jle
fisub
sahf
xor
lahf
(bad)
iret
inc
je
rcr
stos
jns
scas
ficomp
adc
pop
dec
cmp
data16
cmovae
jge
jle
popa
ds
mov
and
shr
(bad)
loopne
cmp
xor
pop
push
jl
fnstenv
mov
cmc
and
outs
test
enter
int3
xchg
sbb
test
mov
loopne
xchg
test
sub
pop
ss
mov
outs
xchg
inc
popf
(bad)
outs
repz
lods
and
das
mov
inc
outs
jl
xchg
ja
xor
xor
movs
ins
sbb
(bad)
sub
retf
fidivr
push
mov
aad
xchg
push
aas
(bad)
mov
popf
xchg
(bad)
fisubr
test
xlat
(bad)
(bad)
and
inc
das
sub
cmp
jno
pushf
mov
mov
mov
push
mov
(bad)
rol
push
neg
test
or
clc
push
mov
sub
or
int3
and
loopne
pop
loopne
js
dec
fild
pop
rol
repz
pop
jno
lock
sar
les
lods
in
sub
mov
xchg
inc
mov
sub
mov
or
mov
(bad)
movs
xor
int3
std
mov
and
or
imul
movs
iret
push
ret
jb
jle
cld
fcom
int
in
inc
popa
arpl
mov
inc
jbe
mov
cmps
mov
mov
mov
adc
test
int3
test
cmp
push
adc
jg
call
ins
idiv
sub
cld
dec
mov
leave
call
cmp
fistp
mov
push
and
js
jmp
jg
inc
in
ins
xchg
sub
addr16
int3
int3
sub
pop
in
les
outs
retf
xor
lods
sub
dec
adc
pop
popf
mov
iret
push
rep
inc
lds
adc
cmps
scas
push
test
dec
or
xor
mov
je
and
xchg
sbb
sub
cmp
mov
jns
sub
or
daa
xchg
leave
dec
aad
fisubr
retf
mov
cmp
stos
mov
and
and
dec
test
int3
(bad)
into
scas
jb
mov
dec
loop
sbb
dec
dec
lods
dec
pusha
fnstenv
mov
sbb
sbb
aas
hlt
sub
outs
push
jns
mov
fsubr
cmp
pop
ret
loop
arpl
adc
mov
scas
fisub
test
xchg
fwait
add
inc
add
adc
gs
test
mul
mov
cmp
les
imul
push
and
stos
clc
pop
loope
fidiv
ja
(bad)
sbb
enter
fdiv
xchg
mov
outs
push
test
mov
loope
mov
ret
push
push
movs
mov
cmp
push
jno
in
jbe
jb
scas
sub
jle
imul
loop
pop
popa
addr16
ins
rcl
push
loope
ficomp
aad
inc
inc
pop
jno
fnstsw
inc
cmp
sub
or
push
addr16
inc
fwait
sti
push
xor
push
inc
sbb
idiv
scas
out
aad
loop
es
(bad)
fs
imul
jnp
push
ficom
jg
popa
jbe
push
cmps
and
and
in
jmp
shl
test
test
sbb
push
fld
(bad)
dec
sbb
retf
sub
std
dec
push
jns
out
test
dec
or
(bad)
loop
dec
inc
dec
sbb
xor
fst
sub
xchg
std
add
jmp
xlat
js
fdiv
pop
ret
and
push
shl
repz
call
cwde
sti
mov
xchg
mov
xor
inc
inc
fnstenv
adc
rol
sbb
and
pop
pusha
xor
ret
mov
mov
aas
sar
push
dec
les
jnp
frstor
and
cmp
sti
sbb
sbb
sbb
pop
repz
mov
test
xchg
inc
and
inc
cld
add
or
pop
pop
cmp
push
mov
sahf
inc
xchg
ins
inc
hlt
call
sbb
add
cmps
std
pop
sub
or
and
in
arpl
dec
fstp
lahf
xlat
fdiv
sub
(bad)
sub
push
int3
outs
xor
adc
call
and
or
mov
inc
xor
lods
xchg
out
sahf
loop
fwait
cdq
sti
repnz
push
mov
cwde
sti
adc
xlat
call
pop
mov
mov
mov
mov
jecxz
stos
adc
fsubr
lock
or
(bad)
add
sahf
and
adc
sbb
push
in
aam
mov
dec
js
sbb
dec
std
jmp
cmp
lods
inc
scas
mov
mov
psubusb
push
jp
adc
mov
gs
cmp
jns
data16
mov
or
push
out
bound
popf
aad
add
push
and
inc
bound
or
add
and
mov
push
push
loope
mov
shl
mov
mov
(bad)
sti
or
add
out
into
push
int3
es
ins
adc
pop
sti
repnz
cmc
mov
inc
mov
aam
je
jb
mov
push
clc
fisubr
mov
mov
cwde
lock
(bad)
imul
or
sbb
ja
jnp
cmc
cmp
fcomip
fisttp
sub
stos
jns
in
cmp
frstor
adc
sbb
call
cwde
xor
mov
lds
mov
jmp
mov
addr16
dec
jecxz
popa
pop
jl
test
cs
sub
(bad)
std
adc
push
pop
and
cs
or
int
scas
in
push
leave
(bad)
ins
out
cli
shl
cs
(bad)
in
jecxz
fild
mov
mov
xlat
gs
popf
inc
pop
xlat
ficom
jns
sar
addr16
push
mov
lods
add
loope
imul
inc
ret
pop
and
leave
repnz
je
or
cs
dec
das
push
test
push
mov
sbb
jge
cs
ins
add
(bad)
ficomp
inc
xchg
mov
push
ror
mov
cmp
mov
out
mov
popf
hlt
pop
addr16
add
jne
rol
(bad)
shl
dec
and
aaa
test
jo
ins
mov
fcmovnu
ins
clc
cmp
fstp
test
iret
xor
int3
push
(bad)
mov
push
jp
fnstsw
icebp
adc
push
lahf
sbb
mov
data16
push
sub
ret
mov
push
les
jg
mov
aad
sbb
add
loopne
xchg
sub
or
adc
sbb
push
push
pop
ss
and
clc
out
fnstenv
test
fs
int
(bad)
scas
stos
repz
inc
pushf
cmp
xor
icebp
xlat
fiadd
dec
scas
mov
sbb
jmp
retf
add
popf
in
lods
fld
test
or
push
in
popf
js
dec
test
mov
push
scas
push
or
stos
pop
mov
sbb
push
sub
xchg
dec
iret
inc
dec
addr16
pusha
inc
jbe
aam
(bad)
ret
imul
jnp
xchg
sti
add
pop
mov
inc
js
fs
jbe
movs
fild
sahf
pop
cmc
(bad)
sahf
sbb
inc
mov
xchg
pop
adc
dec
and
jge
shl
xchg
cs
or
popa
push
jle
mov
sar
push
movs
std
test
out
push
push
daa
add
mov
mov
scas
sub
sub
cmp
ja
or
jae
jge
and
xor
mov
or
and
xchg
rcr
jp
dec
mov
clc
fwait
daa
push
fimul
xor
aad
mov
sti
stos
ins
push
into
call
fnstsw
cwde
clc
push
bound
mov
jne
scas
bts
mov
loop
xor
xor
cmc
ss
aad
pop
lea
or
xchg
mov
or
in
sbb
sub
sbb
sahf
repnz
cli
jo
stos
jmp
call
fdivr
pop
add
mov
jp
push
xor
pop
push
ins
ja
sub
inc
clc
outs
inc
lahf
aaa
loope
cmp
call
mov
mov
mov
fistp
dec
or
movs
lds
loop
add
adc
push
add
sahf
push
mov
add
addr16
mov
lds
iret
movs
jo
add
mov
pop
xor
push
jns
fiadd
adc
jge
adc
push
push
jp
jo
test
jbe
jp
mov
cmc
popf
jmp
xor
pusha
rcr
jg
in
stos
jae
iret
test
dec
retf
sbb
xchg
(bad)
cld
fadd
out
or
and
dec
push
pop
or
ds
cdq
or
xchg
push
sahf
cmp
mov
iret
dec
ins
push
xor
test
das
dec
cmps
pop
(bad)
mov
out
or
jge
cmp
movs
rcl
jae
fsubr
into
xchg
push
(bad)
ins
mov
sbb
arpl
dec
retf
ds
fcomp
stos
scas
mov
cmps
push
jne
(bad)
and
xchg
movs
pop
popf
dec
mov
pop
pop
inc
xlat
hlt
lods
cmp
xchg
ret
sbb
mov
(bad)
ja
jb
out
pusha
xchg
dec
jp
add
xchg
icebp
cmp
xor
fisubr
push
sub
or
sbb
test
sub
lods
sahf
cdq
cs
pop
cwde
movs
or
hlt
bound
add
inc
pop
lock
out
icebp
je
iret
pop
ret
fisubr
jg
cs
push
cmc
or
dec
pushf
aas
out
jb
ss
mov
cld
loope
out
pop
jno
and
dec
dec
retf
xor
xchg
jo
in
in
rol
pushf
loope
jb
int3
(bad)
retf
adc
mov
call
dec
cmp
ret
shl
xor
dec
pop
cmp
out
std
mov
pop
mov
ror
aam
mov
pop
mov
test
sub
or
gs
xor
pusha
jg
jge
jle
add
mov
mov
jl
out
js
pusha
shl
mov
cmp
adc
mov
mov
inc
mov
push
jb
aam
cmp
loopne
jnp
call
push
xor
pop
aad
fwait
popf
lock
pop
dec
test
lock
jg
jge
mov
call
jmp
adc
arpl
jle
fs
jp
add
stos
xchg
cmp
stos
cmp
inc
rol
pop
movs
pop
sbb
cmps
mov
mov
aad
adc
cmp
pop
and
cmps
add
adc
inc
iret
addr16
cmp
imul
pop
sti
inc
mov
pop
inc
xor
out
inc
(bad)
mov
mov
dec
clc
jne
sbb
loope
pop
dec
sub
out
and
mov
ror
jo
mov
rcl
repz
xchg
out
mov
mov
jge
pop
retf
(bad)
xchg
ins
mov
in
leave
cmp
cld
xchg
xor
popa
popf
loop
repz
mov
adc
or
push
in
shl
pusha
inc
call
jg
retf
add
mov
test
hlt
mov
seto
enter
das
popf
gs
cdq
inc
jmp
bound
addr16
std
fwait
not
sub
pop
imul
pop
mov
adc
inc
std
mov
inc
shl
cli
pop
mov
inc
inc
and
add
scas
not
push
(bad)
fnstenv
ficomp
cdq
test
not
in
into
inc
icebp
ja
mov
mov
sbb
das
mov
xor
fsub
jns
das
push
sahf
inc
pop
jl
out
scas
cmp
js
push
popf
leave
cmp
ins
push
inc
adc
mov
jg
mov
(bad)
pop
retf
adc
in
or
push
push
(bad)
dec
sbb
test
lock
das
xchg
into
xchg
adc
or
and
push
sbb
pusha
popa
stos
dec
imul
lea
mov
push
push
jnp
and
aas
jnp
mov
int
clc
cwde
jecxz
mov
dec
inc
test
sbb
dec
mov
mov
sbb
out
gs
popf
ja
sbb
js
(bad)
and
popa
les
or
daa
inc
fcmovnbe
lods
cmp
dec
shr
iret
pop
mov
ficom
add
pushf
cmp
cli
jbe
ja
pop
cmp
xchg
test
(bad)
mov
lahf
jno
cmp
dec
enter
sbb
or
ror
cli
and
jmp
sub
jns
out
inc
das
sbb
jne
ss
gs
sub
and
jmp
cmp
mov
mov
jb
(bad)
or
mov
dec
cmp
in
mov
repz
ret
das
push
loop
or
addr16
addr16
rcl
mov
push
loopne
lods
shl
mov
mov
pop
fimul
jbe
lds
nop
fstp
xchg
cmp
sub
cs
or
push
mov
mov
and
cdq
out
cld
mov
clc
mov
ja
sar
mov
mov
jle
mov
inc
dec
push
adc
out
mov
sub
add
mov
xor
jb
mov
shl
xchg
sbb
icebp
xor
and
dec
xor
call
sbb
js
data16
les
jnp
lds
in
aaa
xor
mov
pop
jnp
sbb
sti
mov
lds
pop
js
cdq
cmp
pop
jae
ficom
or
cli
sti
lock
jnp
cmp
test
jmp
adc
retf
adc
add
dec
sub
sub
push
mov
sbb
cwde
inc
retf
push
jg
xchg
add
sbb
xor
mov
jg
sub
jb
sbb
cmps
and
mov
aas
cdq
xchg
pusha
pop
ss
push
cmp
mov
lds
movs
fwait
cmps
dec
retf
out
add
jge
xchg
shl
hlt
(bad)
dec
inc
sbb
aaa
cmc
adc
test
inc
mov
pop
rcr
mov
sub
dec
sbb
in
mov
sub
out
mov
dec
sub
jno
cwde
stc
scas
xor
scas
rcr
les
or
aaa
(bad)
(bad)
sbb
mov
push
sti
xor
mov
adc
xor
add
sti
pop
mov
push
jmp
arpl
push
int3
jecxz
xchg
add
mov
out
sub
push
mov
mov
in
(bad)
or
(bad)
mov
es
mov
xchg
ret
sahf
xlat
outs
adc
dec
cld
or
xchg
pop
lock
shl
cmp
xor
lods
popf
(bad)
loope
in
mov
ja
mov
sbb
dec
fdiv
mov
repz
push
add
pop
clc
ins
mov
leave
scas
(bad)
cmp
fs
cmc
mov
cdq
aam
fsubr
sbb
cmp
ror
cmc
mov
xor
ror
mov
scas
(bad)
adc
sahf
or
cmp
in
xchg
jge
repz
jl
pop
mov
outs
sbb
lea
push
pop
int3
jecxz
adc
icebp
imul
in
inc
not
add
mov
xor
jns
ret
add
xor
cmps
add
mov
sbb
sti
repnz
lds
repnz
(bad)
mov
retf
daa
(bad)
in
mov
lock
jb
in
mov
jmp
mov
in
cld
sbb
jmp
(bad)
sub
sub
jle
push
jb
call
jbe
jns
jmp
xor
lods
jecxz
enter
icebp
cmps
dec
add
ds
rcr
outs
add
jecxz
add
cmps
cmc
inc
mov
arpl
add
sbb
mov
pop
cdq
dec
scas
popa
aas
fnstsw
dec
jmp
adc
inc
sub
jae
mov
ror
in
scas
in
cmc
dec
fsubr
int
add
sbb
inc
push
xchg
sub
pop
pusha
jns
dec
das
in
jne
retf
jb
ret
add
sahf
or
adc
icebp
and
addr16
hlt
les
jmp
fwait
pop
movs
(bad)
repnz
repz
fcmovb
enter
xor
stos
sbb
add
inc
pop
cmp
js
sbb
and
xor
movs
push
ret
fiadd
aas
(bad)
dec
pop
nop
mov
push
mov
fs
push
(bad)
scas
jecxz
push
fsub
inc
popa
dec
add
inc
mov
xchg
pop
sub
mov
lds
jp
jo
lods
mov
or
les
pop
mov
rcl
sbb
(bad)
(bad)
shl
sbb
shr
xchg
sub
mov
add
jecxz
dec
mov
pop
dec
fdiv
stc
movs
fsubp
outs
fiadd
xor
pop
fwait
mov
ret
adc
sbb
lea
test
cli
jae
inc
scas
cmp
lods
inc
test
mov
ret
inc
repz
mov
inc
aad
pop
hlt
ror
(bad)
pop
arpl
js
in
sub
or
dec
dec
stc
lahf
lods
mov
jge
sbb
inc
lods
jb
add
xchg
adc
cdq
inc
dec
adc
or
mov
pop
sar
call
jp
xor
movs
iret
in
mov
aad
mov
cwde
sub
mov
lods
xor
dec
dec
or
lods
clc
dec
lds
and
sub
adc
pop
adc
jge
mov
inc
pop
cmp
xor
ins
test
fsubr
fisttp
xor
ins
(bad)
adc
int
xchg
jae
scas
adc
mov
bound
lods
out
lock
dec
(bad)
sbb
inc
mov
mov
daa
sub
sbb
push
mov
xor
outs
addr16
xchg
movs
push
hlt
cs
mov
cmc
call
outs
(bad)
pop
fldcw
scas
cmc
inc
sbb
jmp
call
jmp
xchg
out
or
xchg
dec
fstp
lods
xchg
xchg
ins
repnz
jge
sbb
push
pop
cmps
call
clc
jl
shl
xor
rcl
push
out
enter
mov
sbb
movs
(bad)
lods
inc
dec
cli
(bad)
rol
(bad)
xchg
shl
push
inc
lods
mov
push
and
sub
inc
push
adc
inc
jmp
xchg
inc
sub
fwait
sbb
add
rol
inc
lods
and
jbe
cwde
(bad)
push
adc
adc
loop
popf
adc
push
mov
adc
popa
gs
xlat
adc
in
outs
mov
add
fadd
outs
(bad)
lahf
test
fild
xor
(bad)
popa
shr
movs
jmp
ja
test
mov
xor
dec
xor
pop
stos
das
iret
mov
mov
mov
sub
lods
adc
xchg
xor
dec
xchg
shl
loop
repnz
test
fist
jmp
iret
shr
xor
movs
adc
jge
push
lahf
in
fmul
sbb
inc
fiadd
mov
pop
xchg
mov
mov
xchg
call
cli
int3
lods
cmps
add
xor
arpl
mov
cld
cmps
scas
jecxz
inc
sub
or
add
xor
ds
fs
push
jg
(bad)
adc
jg
jno
sti
retf
push
cmp
mov
add
or
std
js
or
aad
imul
std
inc
xor
mov
ja
popa
shr
inc
iret
jmp
ss
aaa
daa
or
jmp
dec
fnstcw
push
push
inc
jno
jge
cmp
add
sbb
mov
dec
dec
xor
push
test
mov
repnz
xchg
pop
call
xchg
xlat
ss
in
ret
xor
or
rcl
retf
mov
mov
daa
iret
add
pop
mov
fstp
add
cld
test
mov
nop
sbb
cdq
inc
jmp
icebp
cwde
inc
mov
and
cmp
xor
push
xor
push
shl
rcr
mov
push
ret
cmc
mov
mov
xchg
retf
idiv
add
fdivr
push
hlt
imul
mov
pop
test
mov
test
adc
or
repnz
jg
leave
shl
dec
jmp
int3
cmp
cwde
addr16
sub
xor
cli
pop
mov
dec
nop
jno
fsub
jnp
mov
ror
xchg
int3
ins
add
outs
mov
sub
push
imul
call
cmp
outs
dec
fs
test
stc
jbe
retf
inc
sahf
stc
or
mov
iret
adc
dec
jp
call
outs
fwait
jo
mov
int
in
and
and
jmp
jge
clc
outs
aaa
mov
ins
mov
push
xor
cmp
cwde
(bad)
or
lods
add
xor
or
fiadd
pusha
test
sub
xchg
lods
stos
loop
add
cmp
mov
pop
sbb
(bad)
pop
or
dec
fs
movs
mov
dec
xor
sbb
push
movs
icebp
pusha
xchg
stc
pop
and
std
int
jnp
mov
ja
push
jp
dec
repnz
jge
sub
adc
addr16
xor
adc
iret
std
popa
inc
addr16
pop
or
cli
push
(bad)
pop
mov
into
repnz
jmp
mov
mov
mov
and
cs
jge
push
mov
jg
ins
into
sub
xor
rcl
pop
je
pushf
popf
mov
pop
xchg
add
adc
loopne
mov
test
pushf
fimul
out
push
popa
dec
mov
and
popf
in
pop
and
and
sbb
mov
sub
popa
inc
mov
js
xor
cs
jne
cmc
xchg
stos
test
pop
neg
mov
and
cli
aas
mov
test
push
dec
in
inc
fild
jge
aad
mov
movs
aas
in
cmps
lods
jnp
lds
addr16
in
and
out
cwde
icebp
cmovns
data16
scas
lods
jl
sbb
int
fst
ror
cmp
neg
pop
in
push
xchg
push
inc
popa
cwde
sub
rcl
cmp
cmp
or
mov
push
xor
retf
xchg
(bad)
mov
pop
aaa
inc
int3
arpl
(bad)
rcr
lds
clc
pop
rol
je
add
lds
bound
dec
mov
sub
dec
sbb
adc
mov
(bad)
sbb
xchg
mov
loope
push
stc
sbb
lock
add
cmp
push
aas
sbb
scas
jmp
(bad)
fadd
pop
outs
adc
push
jl
and
fs
std
and
icebp
lea
pop
push
xor
push
sub
push
adc
es
add
or
pushf
stc
adc
mov
mov
popf
jle
xor
in
fwait
sti
mov
pop
pop
mov
sbb
mov
mov
dec
cmp
add
cld
push
mov
jle
adc
repnz
retf
sub
sbb
inc
aas
push
bound
fcomp
push
lea
mov
test
shr
movs
or
repz
aas
pop
call
dec
ins
stc
push
jp
stc
push
aam
pop
pop
in
dec
inc
pop
mov
jmp
cmp
je
dec
popa
dec
xchg
mov
add
sti
cmp
and
jge
pop
jo
and
jo
(bad)
retf
enter
into
dec
fs
jg
aam
pop
or
xor
sub
or
repz
(bad)
ror
inc
rcl
retf
fstp
cdq
sahf
jae
(bad)
adc
test
iret
imul
xchg
push
loopne
leave
pop
stc
outs
popa
mov
ret
mov
test
mov
push
mov
loope
jcxz
mov
sub
sub
or
jae
jb
jb
cmp
repz
icebp
and
dec
mov
pushf
bound
jp
cli
aad
jge
repz
sbb
test
fstp
std
pop
addr16
bound
scas
pusha
dec
sub
lahf
xor
push
sbb
inc
test
cmps
xchg
outs
ds
pushaw
pop
and
push
repnz
loop
jmp
test
xchg
push
(bad)
out
pop
cli
pop
nop
popf
mov
or
movs
dec
hlt
ror
test
pop
cmp
pop
dec
call
js
and
test
adc
ror
mov
mov
mov
pop
pop
out
idiv
jg
sbb
shr
cmps
outs
push
push
xchg
popf
(bad)
(bad)
(bad)
mov
out
inc
and
(bad)
cmps
dec
and
in
nop
in
mov
ins
(bad)
push
sub
ja
scas
push
out
dec
ins
scas
xor
ss
inc
mov
in
mov
das
and
mov
mov
jge
xchg
dec
ret
xor
mov
jno
mov
jmp
cmp
cmp
lods
or
jle
aas
mov
mov
repnz
mov
rcl
fldcw
icebp
jno
add
push
cmp
popa
cmp
cmps
test
(bad)
sbb
inc
jle
xor
pop
(bad)
je
cmp
ret
mov
pusha
jmp
sbb
shl
jns
inc
dec
inc
sub
js
cmps
pop
cmp
aas
imul
es
add
daa
lds
imul
(bad)
fist
push
or
mov
aaa
bound
push
loop
jno
xchg
and
push
pop
das
mov
into
or
out
out
leave
push
(bad)
loopne
cmp
mov
(bad)
push
lock
sub
pop
cs
add
and
xchg
or
dec
lds
mov
test
adc
cmps
sar
or
xor
pop
cmp
shl
les
push
or
addr16
les
stos
pop
or
pop
idiv
add
xlat
fld
inc
arpl
loopne
pop
dec
pop
aaa
mov
retf
sahf
push
adc
jnp
cmps
jae
jecxz
ins
add
jp
xchg
add
or
inc
dec
ins
aaa
jg
mov
adc
outs
jg
push
ins
aad
fcomp
dec
and
inc
sbb
in
ja
pop
or
fsub
or
jmp
loopne
mov
outs
jmp
mov
sar
mov
leave
scas
pusha
pop
sbb
push
xchg
jne
push
push
jmp
sti
shr
repnz
ja
adc
sbb
cmp
pop
mov
fisub
ret
pop
mov
inc
add
stc
call
lods
imul
rcr
ret
fldenv
int
lods
jmp
inc
pop
cmp
inc
fwait
movs
cmp
ds
ret
adc
pop
pop
mov
jbe
xor
jns
rol
(bad)
push
cmps
xchg
mov
inc
xlat
icebp
or
sub
fdivr
fisubr
mov
imul
dec
or
rcl
jns
outs
stos
ffree
addr16
mov
lods
xchg
mov
adc
jb
shr
cmp
movs
add
jl
adc
mov
dec
xchg
dec
push
pushf
leave
or
jno
popf
mov
nop
retf
not
sbb
jecxz
mov
push
xchg
mov
bound
xchg
mov
sbb
movs
add
loope
sub
or
adc
pop
inc
mov
mov
or
push
inc
scas
xchg
fwait
and
bound
add
shr
into
xor
sbb
mov
dec
repz
mov
mov
sbb
repnz
hlt
sub
mov
inc
sbb
adc
cmp
adc
mov
jg
mov
cwde
xlat
out
mov
retf
fdivr
add
(bad)
clc
ins
dec
lods
mov
pop
loope
add
dec
fstp
sub
outs
arpl
xor
xchg
add
mov
iret
or
call
dec
fadd
mov
xor
mov
xor
stos
stos
inc
xchg
cmps
fnstenv
and
and
popa
scas
ficom
outs
xchg
inc
popa
mov
push
adc
imul
stos
scas
test
cdq
add
push
int
inc
and
jp
xlat
mov
adc
into
in
or
ds
jbe
imul
sub
hlt
fsubr
int3
or
jp
mov
ins
inc
xor
mov
icebp
loopne
inc
(bad)
fdivp
dec
cmc
lea
sub
sbb
xor
ja
dec
push
inc
stos
sub
pushw
mov
outs
out
cmc
test
scas
into
popa
call
pop
mov
int
add
shr
(bad)
ds
inc
addr16
pushf
mov
push
adc
in
dec
lods
push
push
pop
in
mov
and
dec
pop
sbb
jb
cld
pop
std
jmp
neg
sti
fs
and
mov
stos
mov
int3
(bad)
in
sti
adc
mov
mov
add
inc
jae
in
inc
stos
dec
call
dec
test
push
xchg
call
mov
adc
aad
jmp
pop
lods
push
cdq
xor
test
movs
xlat
jne
mov
mov
or
ror
loopne
inc
icebp
xor
add
outs
popf
in
mov
fwait
pop
push
in
add
loopne
aaa
and
or
call
add
xchg
and
adc
(bad)
fadd
(bad)
sbb
pmaxsw
mov
bound
and
mov
jp
fidiv
sub
push
sub
mov
(bad)
cdq
lods
(bad)
sar
shl
mov
mov
and
add
in
popa
sbb
js
stos
mov
jne
int
sbb
addr16
pusha
dec
mov
loop
jl
mov
push
das
call
jo
xchg
xchg
hlt
das
movups
pop
xchg
ins
or
inc
inc
pop
nop
jns
(bad)
fsubr
loopne
test
loop
sahf
loop
fidivr
xor
call
jae
sbb
aam
aaa
sub
lock
rcl
je
lods
ret
lahf
cmp
add
inc
xlat
push
cmp
sub
bound
push
jne
adc
push
ds
sub
enter
push
fnstcw
ror
jmp
mov
push
in
call
inc
xor
fsub
jns
std
pop
sbb
xor
adc
stos
in
mov
and
(bad)
cmp
jmp
xchg
shl
push
(bad)
adc
pop
into
shld
cmc
cmp
and
lods
cli
or
test
sbb
ja
in
mov
repnz
jmp
jnp
inc
arpl
cdq
popa
ins
cmp
lahf
sub
push
sub
mov
lock
ficom
xor
fldenv
int3
cli
jne
idiv
in
sahf
adc
mov
ret
dec
xchg
ins
cmps
das
lea
retf
and
xor
sti
in
call
pop
and
in
retf
or
mov
and
mov
fdiv
loope
fmulp
or
jmp
jbe
xchg
dec
cmp
cld
mov
in
je
and
dec
(bad)
shr
shr
jp
jg
sbb
cmp
test
mov
inc
sub
dec
xor
mov
das
push
iret
xlat
push
sbb
push
jg
addr16
add
mov
xchg
iret
sub
xor
jecxz
sub
mov
inc
mov
out
cmps
iret
push
lahf
jae
aas
cdq
mov
cli
jno
xchg
or
mov
pop
xchg
sti
mov
sahf
cwde
fldcw
test
xchg
mov
push
in
xchg
repz
(bad)
fisttp
mov
or
aam
retf
repz
mov
movs
lds
mov
push
sti
dec
fdivr
jp
sub
jmp
mov
mov
cdq
pop
add
outs
xchg
xor
inc
inc
jp
adc
test
stos
inc
cmps
lock
cmp
std
out
and
inc
jne
jns
aas
sub
xlat
dec
cmp
jecxz
push
jb
arpl
inc
or
arpl
and
out
or
ror
pop
jno
sub
imul
es
cs
(bad)
aad
mov
jmp
fidivr
aam
iret
inc
retf
ss
arpl
cld
xlat
sbb
pop
sub
ins
iret
ret
std
xchg
jg
jmp
out
dec
sbb
ror
cvtps2pd
icebp
push
jno
aad
push
daa
iret
and
sbb
add
mov
sahf
and
jo
or
or
retf
cwde
repz
ins
(bad)
cdq
adc
dec
sub
std
jb
(bad)
fbld
pop
clc
nop
aam
pop
cmp
jo
loop
nop
jns
loopne
aaa
push
ja
jbe
xor
js
movs
xor
push
sub
mov
mov
call
enter
push
cmp
jnp
or
addr16
add
dec
xor
pop
or
push
mov
push
xor
aaa
pop
ins
out
xor
cpuid
mov
and
fldcw
in
in
retf
xor
cmp
dec
cmps
mov
pop
adc
adc
mov
jge
push
(bad)
test
sbb
add
inc
xchg
iret
gs
or
sar
dec
inc
movs
cdq
mov
sbb
int3
cmp
hlt
mov
jnp
test
adc
cmp
inc
repz
int3
sti
das
dec
mov
cmp
arpl
xchg
xor
inc
pop
cmps
retf
cmp
sub
jmp
cmc
jg
jl
popa
fsub
add
xor
fs
mov
es
out
stc
mov
add
es
fist
mov
int3
aas
and
pop
xchg
inc
pop
retf
push
inc
mov
add
sbb
call
push
imul
mov
xchg
cmp
movs
(bad)
lahf
pusha
pushf
arpl
sti
dec
aad
lea
out
rcl
daa
(bad)
ins
dec
or
out
enter
outs
pop
int
retf
mov
mov
ret
sbb
inc
(bad)
js
add
out
or
pushf
test
call
nop
pop
movs
pop
outs
lods
mov
idiv
out
scas
outs
scas
dec
fwait
or
xor
iret
arpl
xchg
lods
dec
inc
loop
dec
mov
mov
clc
sbb
(bad)
jne
mov
aad
js
mov
add
push
mov
or
xchg
adc
std
icebp
into
mov
pop
xchg
push
sbb
xchg
dec
jb
add
sub
sbb
sti
imul
and
icebp
pop
push
movs
pop
sub
add
aam
aam
in
sar
pop
sub
lahf
ret
jg
push
aaa
popa
ja
dec
pop
push
pop
imul
pop
push
data16
push
lea
arpl
add
fsincos
dec
inc
inc
mov
retf
std
and
rol
inc
sub
retf
sbb
add
mov
xlat
mov
xchg
cmp
nop
inc
push
jecxz
loop
pop
fld
xchg
daa
leave
jb
xchg
or
and
mov
pop
pop
aaa
enter
pop
add
sbb
mov
xor
mov
add
mov
int3
pop
cwde
ss
aad
(bad)
cmp
retf
mov
mov
cmp
adc
call
pop
dec
sub
fs
push
cmp
push
cmp
xor
jno
xchg
retf
add
out
clc
mov
loop
sbb
ja
rol
jl
sbb
fbstp
jne
mov
fs
xchg
(bad)
ins
and
out
lods
jp
mov
rcl
adc
std
ret
pop
sbb
push
rcl
cmps
fdiv
mov
jle
pop
adc
adc
std
xor
xchg
xchg
mov
inc
stos
cmp
je
test
(bad)
jp
xchg
pop
(bad)
out
inc
fiadd
pop
test
or
iret
out
inc
sub
jo
mov
jle
xchg
mov
popa
mov
dec
or
pop
push
out
shr
mov
xchg
pusha
out
xor
outs
xor
and
xor
cmp
sub
pop
(bad)
pop
or
fdivrp
les
xchg
inc
aam
(bad)
jmp
push
mov
dec
cdq
or
ret
cdq
mov
jge
mov
and
and
and
adc
inc
or
shr
popf
xor
jp
jmp
inc
dec
push
jecxz
jns
repz
jb
stc
sub
push
cmp
ins
fisttp
call
xchg
jno
inc
in
xor
cmp
mov
popa
inc
fbld
fstp
mov
cmc
push
ja
test
clc
push
inc
push
retf
inc
loop
scas
xchg
pusha
cmps
cmp
clc
imul
mov
inc
scas
jp
jb
stos
cli
ret
inc
adc
pop
push
fisttp
push
mov
call
sub
sbb
push
mov
jae
adc
mov
jb
mov
sub
mov
jno
test
cli
aad
fmul
ret
xor
sub
inc
or
arpl
imul
dec
adc
daa
out
dec
jb
ret
repnz
test
jle
int3
cld
xor
jne
jmp
pop
cmp
std
dec
movs
cmp
(bad)
in
pextrw
lods
mov
hlt
pop
cli
jp
mov
sti
push
jbe
arpl
xchg
test
aaa
inc
mov
pop
mov
into
out
jae
shr
stos
sub
je
repnz
pop
ret
or
mov
sub
xor
mov
and
(bad)
xchg
push
mov
imul
mov
xor
pusha
or
dec
jl
adc
imul
jmp
xor
jecxz
adc
xor
iret
sub
inc
js
int
and
outs
add
out
push
(bad)
sub
push
sahf
loope
add
sub
mov
or
in
dec
loopne
xor
dec
xor
cmp
add
mov
lods
or
out
dec
pusha
jae
shl
pop
jbe
xchg
fs
fld
aam
das
(bad)
push
ja
shl
push
push
push
xor
imul
lods
cs
jae
mov
ja
jb
cmc
je
push
subps
popf
jnp
sti
push
ja
pop
shl
retf
mov
jnp
out
ds
push
mov
hlt
stos
push
int
jmp
in
loop
loope
sbb
lea
stos
or
inc
xchg
(bad)
enter
pop
or
pop
lahf
add
xchg
jge
pop
dec
xor
add
push
(bad)
in
mov
mov
mov
lds
or
xlat
inc
test
add
lods
sahf
es
(bad)
(bad)
shr
jmp
jb
aam
xor
cmps
push
jne
push
jmp
xor
or
fcom
xor
mov
and
sub
inc
daa
scas
fld
jmp
(bad)
xor
mov
into
lods
sti
inc
data16
push
sub
retf
(bad)
imul
jp
cli
xchg
out
aam
cmp
(bad)
dec
inc
lea
adc
test
or
cdq
or
lahf
scas
aad
jno
mov
inc
and
cmp
xchg
pop
cmps
out
inc
test
aad
aaa
pop
lods
mov
sub
enter
gs
mov
xor
mov
dec
xor
stos
fild
cmp
cmp
lock
dec
cmp
lahf
aaa
(bad)
ret
test
pop
fs
adc
popf
mov
xchg
je
sbb
pop
call
mov
test
sbb
ins
sub
jae
neg
xchg
neg
dec
pop
adc
dec
sbb
ins
popa
and
inc
adc
pop
xchg
xchg
add
mov
out
inc
dec
add
mov
sar
out
sub
mov
test
data16
enter
loope
sub
jp
xchg
out
loopne
rcl
inc
xlat
and
inc
loopne
cmps
lods
and
mov
jnp
rol
aaa
fwait
jae
push
std
fwait
stos
mov
in
jmp
inc
push
xchg
inc
leave
push
inc
call
loope
cmp
bound
cmp
push
inc
ss
stos
jmp
test
retf
not
mov
icebp
or
xor
jae
mov
imul
(bad)
arpl
pusha
je
push
imul
bound
fwait
push
fcomp
lods
fxch
sub
cmp
and
(bad)
in
dec
in
(bad)
clc
pop
xchg
mov
push
ja
adc
mov
outs
push
cmc
and
sbb
or
xlat
cmp
sti
mov
into
inc
push
inc
mov
inc
sub
inc
(bad)
jbe
xchg
sub
pop
pop
or
inc
popa
shl
mov
xchg
jnp
outs
push
and
loopne
xchg
push
test
add
fisubr
sar
jge
cmp
leave
test
cmp
fistp
mov
arpl
pop
fucom
(bad)
icebp
dec
pushf
fistp
sub
stos
xlat
inc
xchg
(bad)
cmp
div
arpl
bound
mov
mov
addr16
pop
or
out
cmps
inc
fisub
mov
daa
fistp
mov
stos
js
sub
mov
push
es
sub
push
sub
repnz
jge
and
in
dec
ret
leave
jnp
mov
call
(bad)
xor
(bad)
mov
inc
shr
ins
(bad)
arpl
test
jmp
push
rcr
fisub
lods
int3
dec
xlat
sbb
jns
adc
sti
jbe
fcomp
outs
pop
pusha
xchg
iret
fild
and
sbb
js
push
fnstenv
push
idiv
pop
icebp
cmp
sbb
mov
dec
shr
jno
imul
mov
jp
scas
inc
push
push
bnd
test
mov
add
xchg
ret
mov
dec
in
rdmsr
lock
cmp
gs
(bad)
adc
scas
lahf
les
pop
jnp
fmul
jns
dec
idiv
dec
call
push
pop
cld
add
scas
jle
push
sbb
cwde
add
cmp
mov
mov
mov
pop
movs
add
addr16
lods
das
scas
jp
mov
test
jno
pop
or
mov
cmp
rcl
aas
pop
push
mov
cs
fidiv
cdq
mov
out
aas
push
sahf
xchg
mov
dec
push
pop
cli
retf
hlt
push
push
jp
xor
jmp
mov
push
jg
pop
or
cmc
repz
sbb
mov
jae
pop
push
cmps
fadd
mov
ins
stos
data16
hlt
push
(bad)
pop
xchg
hlt
cmps
cmp
mov
add
ds
fiadd
imul
jo
or
sbb
cmp
xchg
xor
in
pusha
cmp
test
daa
and
popf
xchg
push
add
scas
xor
cwde
rcr
ins
xchg
cmps
add
cmp
lods
(bad)
and
popa
(bad)
stos
mov
das
jmp
popa
push
cmps
jns
ss
das
pop
test
jle
aam
sub
dec
xchg
fcmove
daa
mov
mov
jge
loop
cld
xchg
addr16
adc
jns
cmp
loope
dec
cs
call
cmp
movs
xchg
pop
gs
jl
rcl
pop
sahf
mov
nop
pop
pop
sbb
xchg
fwait
pop
and
push
jnp
mov
add
jmp
push
fdivr
add
cmp
xor
lea
and
cmp
mov
and
cdq
jmp
xchg
pushf
gs
and
into
es
xlat
test
mov
fwait
xchg
adc
push
push
or
inc
outs
cdq
mov
or
mov
add
cmps
mov
call
outs
(bad)
sub
movs
push
jg
mov
mov
adc
pop
ficom
mov
arpl
in
sub
sub
cmps
clc
and
xor
or
mov
xor
sbb
jmp
inc
sub
xor
dec
mov
cmp
or
inc
arpl
push
add
mov
jp
xchg
jno
(bad)
sub
hlt
jae
adc
inc
push
inc
cwde
fyl2xp1
iret
cmps
jmp
and
movs
and
xor
aad
adc
adc
cmp
cmp
sub
comiss
pop
and
sbb
dec
cmps
pop
gs
or
xor
jae
out
mov
inc
sub
nop
push
stc
pop
fs
movs
popa
cmps
or
ss
push
sti
hlt
adc
(bad)
sbb
mov
xchg
in
jecxz
cmp
and
pop
xor
sub
mov
les
gs
sbb
jae
jbe
call
and
inc
outs
adc
aaa
and
mov
fst
loop
rcr
mov
cmp
call
fcom
in
sbb
loopne
cmp
mov
mov
adc
sub
ds
sub
add
aas
cli
out
mov
das
sbb
pop
nop
shr
pop
sbb
push
jl
loop
pop
jle
sbb
and
les
adc
xchg
outs
xchg
adc
dec
ficom
mov
push
jo
add
loop
repz
scas
ds
push
cdq
cmp
push
xor
fldenv
add
lods
push
push
ins
sbb
xor
jbe
stos
adc
mov
push
aaa
mov
push
dec
stos
fdivr
xor
call
inc
and
push
jnp
sub
(bad)
rcr
repnz
aas
or
mov
(bad)
push
push
xor
xchg
adc
jne
ins
popf
std
ret
jmp
aaa
pop
push
in
mov
add
mov
or
icebp
cli
lods
mov
int3
repz
and
mov
call
and
pop
cdq
and
cmp
icebp
push
fbstp
stos
leave
test
xchg
adc
movs
cs
arpl
sub
fcmovbe
add
call
or
mov
dec
adc
retf
push
test
daa
pop
stos
outs
add
bnd
inc
sbb
or
mov
jmp
fbld
dec
loope
xchg
jle
addr16
std
jg
cmc
imul
imul
fsub
into
push
adc
or
jns
mov
cmps
aad
adc
lock
sbb
ret
call
hlt
xchg
push
jnp
mov
jae
into
mov
std
sbb
pop
jge
cwde
and
fwait
xor
mov
jnp
jge
repnz
cmp
xor
add
stc
rcl
push
jno
aam
hlt
push
scas
push
xor
outs
cmps
pop
dec
repnz
jnp
(bad)
das
add
pop
fidivr
jmp
push
pushf
test
dec
sub
push
bound
call
fldcw
inc
scas
ret
xchg
push
xchg
mov
mov
push
add
push
xchg
call
mov
(bad)
mov
pop
lds
out
loope
or
dec
sub
cmps
or
dec
xchg
loop
mov
imul
pop
jmp
sbb
sub
cmp
dec
xor
icebp
std
retf
cld
jae
pop
adc
push
out
mov
fdivr
std
movs
or
lods
jmp
add
nop
(bad)
hlt
aaa
mov
std
gs
xchg
fld
xchg
jmp
cmp
cmp
xchg
sti
adc
mov
(bad)
pop
jo
jnp
daa
mov
push
fdivr
mov
cmp
stos
imul
je
sbb
loop
sbb
mov
push
mov
ss
adc
loop
sbb
pop
jbe
(bad)
lods
mov
mov
or
jecxz
stc
in
and
in
shl
outs
scas
rol
aam
jbe
sahf
popf
dec
out
mov
push
xor
xlat
in
out
xor
fwait
push
mov
inc
int
jne
scas
fcom
bound
pushw
mov
rol
cmp
fsub
cmps
and
aam
inc
adc
rcl
sbb
sbb
in
sbb
loop
sub
(bad)
mov
(bad)
repz
lahf
es
inc
mov
ror
lds
ss
out
sbb
loopne
fsubr
adc
jl
fidivr
dec
hlt
mov
dec
mov
pop
leave
add
or
mov
pop
es
cmp
adc
retf
and
data16
(bad)
imul
add
stc
les
jle
push
test
jge
cmp
add
pop
mov
mov
sbb
out
mov
aas
sbb
or
cmp
ds
enter
xchg
sbb
popf
add
jne
inc
pause
(bad)
call
es
js
jbe
mov
stos
std
icebp
test
dec
cmp
mov
dec
stos
mov
mov
lock
mov
ins
lods
test
jg
sub
aad
and
xor
inc
jmp
add
jl
fistp
pop
fstp
jecxz
sahf
mov
dec
mov
xchg
mov
nop
pop
mov
cmovb
xlat
cwde
(bad)
push
mov
add
rcr
test
in
push
push
outs
sti
icebp
ins
jmp
ss
leave
inc
mov
xor
jo
pushf
xchg
ret
add
sub
les
stos
fsub
cmp
inc
cwde
adc
fldcw
(bad)
dec
push
mov
daa
shr
xor
stc
push
test
outs
add
or
rcr
lods
test
in
(bad)
mov
ds
fdiv
loop
mov
leave
test
fisub
(bad)
mov
lock
jl
xor
pop
rcl
or
(bad)
fst
stc
sbb
(bad)
push
not
mov
ror
mov
loopne
out
adc
(bad)
xchg
sbb
stos
push
into
mov
sub
xor
repz
clc
jl
add
popf
jae
iret
ret
outs
add
push
inc
addr16
cli
inc
sbb
pop
add
inc
js
imul
je
pop
sbb
repnz
ss
(bad)
repnz
test
pop
fincstp
ja
jno
jge
fnstenv
ja
pop
dec
ins
inc
(bad)
movs
out
das
xor
push
jno
or
mov
hlt
icebp
push
cwde
ficom
push
in
lods
push
cs
push
mov
(bad)
mov
push
enter
dec
jmp
call
aam
mov
ror
mov
ret
repz
ins
scas
arpl
xchg
jg
jg
and
nop
sub
dec
and
or
add
mov
push
out
pop
inc
out
sub
iret
pop
enter
pop
and
mov
out
into
fwait
mov
or
fs
daa
pop
inc
and
mov
repnz
pop
inc
or
sbb
adc
mov
fsqrt
adc
call
(bad)
test
xor
add
mov
xchg
mov
fmul
pop
mov
inc
leave
popa
or
imul
cmps
int3
adc
pop
stos
mov
retf
and
mov
pop
inc
push
mov
iret
mov
mov
mov
add
xor
xbegin
aam
popf
je
jb
add
inc
outs
sub
inc
nop
pop
sub
outs
stc
call
repnz
fdivr
jmp
push
fnstsw
ret
mov
(bad)
aad
sbb
mov
stos
pop
hlt
jmp
xlat
jno
mov
add
lahf
mov
jg
sbb
and
mov
jmp
push
add
ret
mov
pop
enter
ja
sbb
mov
inc
mov
movs
jns
jns
shr
mov
sub
loope
retf
hlt
mov
and
jo
js
out
lods
scas
inc
sub
dec
push
movs
jns
cmp
sub
sar
sbb
mov
inc
aam
cmp
jecxz
pop
es
or
sar
stc
ins
aam
push
dec
xor
test
mov
test
cld
bound
mov
and
mov
jae
imul
ins
dec
add
push
loopne
sbb
mov
pop
bound
aaa
loop
je
aad
jo
pop
ficom
daa
mov
jns
lock
sbb
test
test
xor
aas
les
jno
test
mov
enter
add
mov
loope
in
stc
shr
cdq
sbb
xor
in
out
cwde
mov
xchg
sbb
in
pop
ja
fdivr
inc
(bad)
push
add
ret
push
in
push
xor
push
cmp
push
xor
push
ins
repnz
into
sub
pop
jns
fstp
out
cmp
pop
call
or
ret
cmps
popf
aas
push
inc
and
call
inc
cmp
xchg
stc
into
mov
xor
rcl
push
(bad)
fist
mov
jno
lock
or
xchg
addr16
push
xor
mov
enter
stos
mov
xlat
inc
jbe
xor
(bad)
lods
clc
setbe
mov
lds
les
or
adc
push
jb
add
hlt
shl
lods
div
out
sub
mov
and
mov
pop
cmp
inc
xchg
cdq
sbb
call
cmc
ss
jb
dec
fs
lods
jecxz
ret
addr16
xchg
cmp
(bad)
cmp
das
icebp
scas
inc
les
outs
(bad)
xor
js
bound
jno
adc
add
dec
cmp
call
push
(bad)
sahf
xor
xor
fstp
dec
cmp
pusha
mov
push
dec
and
jl
pandn
dec
(bad)
in
dec
test
ror
loop
mov
mov
sbb
addr16
(bad)
jmp
hlt
push
mov
add
mov
cmps
jnp
xor
add
mov
cmps
gs
scas
cmps
push
mov
cmp
inc
(bad)
sub
push
push
rcl
mov
test
and
cvtps2pi
lods
cmp
retf
xchg
shl
mov
mov
add
inc
push
mov
cmp
ins
inc
and
jecxz
jmp
mov
js
cmp
jae
or
inc
cwde
iret
add
dec
outs
sbb
cmp
fnstcw
leave
popa
adc
and
xchg
sahf
jae
xor
inc
xor
pop
fild
mov
jo
arpl
cld
loopne
xor
adc
ins
mov
mov
call
lock
fs
fdivrp
jo
(bad)
xor
sub
inc
pop
ja
pop
mov
xor
daa
xchg
call
test
sar
int3
or
mov
mov
fld
pusha
loopne
cmc
push
inc
cmp
loop
pinsrw
xchg
dec
loop
pop
pushf
xchg
test
int
cmp
mov
sub
mulps
rcl
xor
out
xor
cmp
sub
push
dec
inc
sub
jno
and
mov
icebp
fcmovbe
xor
ins
jge
retf
bound
sahf
jmp
dec
pop
in
ret
xchg
dec
leave
or
std
pushf
shl
add
mov
push
dec
clc
loope
mov
data16
sti
popa
mov
add
daa
mov
cmp
mov
mov
pop
bound
(bad)
stos
cmc
mov
sti
cmp
jbe
ins
cwde
shl
push
inc
cdq
adc
ret
inc
pop
adc
jg
jg
fbstp
es
xchg
cmp
mov
ss
mov
dec
test
data16
push
jo
sbb
xchg
cli
push
retf
cmp
adc
dec
xchg
sub
xor
jne
pushf
inc
sub
aas
mov
dec
and
test
stc
bound
sub
ss
inc
sbb
lods
mov
repz
jg
aas
push
out
jg
les
push
lea
imul
add
jmp
xor
(bad)
aad
cmp
and
dec
cmps
and
push
dec
stos
adc
mov
xchg
shl
in
sub
ja
push
or
pop
push
out
rol
mov
push
mov
mov
sar
mov
mov
pop
push
mov
lahf
ret
test
pusha
xchg
out
pop
int3
xor
mov
adc
outs
(bad)
shl
in
jns
mov
adc
mov
lock
test
push
lds
retf
jp
dec
test
sub
frstor
mov
and
sti
dec
sub
pop
ret
daa
cmp
fst
ins
mov
add
jge
mov
xchg
pop
xlat
push
out
cld
ficom
pop
xchg
and
xor
call
dec
hlt
hlt
mov
and
mov
inc
or
ffree
inc
ins
cmp
imul
mov
xor
pop
cmc
lods
popw
sbb
jns
inc
xor
call
jnp
mov
xor
pop
pushf
pop
xchg
mov
cmps
jmp
pusha
mov
push
jl
push
lahf
add
or
int
in
mov
in
push
and
or
mov
mov
mov
add
mov
add
mov
jo
ret
lds
add
pop
push
xor
ja
in
out
loopne
out
inc
mov
or
stos
rcr
jbe
test
push
or
fndisi(8087
into
or
out
sub
push
movs
lea
inc
popf
inc
das
sahf
cs
inc
sbb
inc
adc
dec
xchg
emms
xchg
xor
daa
imul
add
scas
add
and
in
cmps
mov
mov
je
out
push
mov
stos
pop
ret
inc
or
pop
fs
push
xor
mov
test
loop
in
loope
mov
adc
push
adc
dec
push
sub
int3
fisttp
sub
or
jge
inc
adc
jl
ss
and
ds
push
fisubr
cvtpi2ps
loop
inc
push
movs
call
pusha
retf
(bad)
pop
cmp
sar
xchg
mov
out
pop
sbb
jns
xor
cmp
aaa
push
pushf
mov
xchg
popa
test
(bad)
cdq
aam
inc
cmp
ins
lea
in
pushf
and
lods
pushf
jno
jmp
fld
fistp
in
ins
ret
arpl
add
jl
mov
ins
js
cmp
popa
inc
fild
push
or
and
idiv
ins
jae
adc
cli
xchg
lahf
mov
call
push
fist
sahf
adc
int3
mov
js
test
inc
pop
jae
jmp
(bad)
scas
adc
inc
mov
inc
cmp
jmp
cmp
jge
mov
popa
bound
cmp
pop
adc
sub
jl
adc
jbe
popf
cs
sbb
movs
xchg
xchg
call
push
add
mov
out
call
lea
and
cmp
mov
jnp
call
aad
mov
fwait
mov
(bad)
das
sub
pop
je
add
cdq
in
aam
cld
mov
cmps
std
or
dec
daa
or
es
inc
stc
gs
or
out
mov
mov
pop
xor
jl
movs
cmc
bound
pop
add
ret
push
scas
pop
ret
sti
sti
inc
imul
test
xchg
cld
xor
fdiv
lea
fild
add
stc
clc
cmp
loop
adc
in
xchg
cmp
and
outs
xor
bound
jmp
cs
inc
sub
mov
jbe
outs
(bad)
xor
sub
outs
adc
sub
or
jmp
add
xor
dec
mov
dec
sbb
or
mov
mov
fstp
or
(bad)
retf
(bad)
sbb
xor
icebp
mov
cmp
inc
shl
clc
js
ins
jp
pop
mov
and
sahf
shr
retf
imul
jae
sti
imul
inc
inc
jmp
imul
test
mov
xchg
dec
mov
jg
stos
jo
test
xchg
ja
sbb
push
sahf
aas
jno
les
fimul
jb
push
je
loop
mov
dec
or
test
ffree
ficomp
or
hlt
jns
xchg
in
gs
movs
stos
jmp
or
cmp
rcr
retf
shr
pop
adc
and
(bad)
cmp
adc
cs
and
lahf
retf
jmp
shl
fmul
cmps
jo
adc
mov
cmps
in
fnstenv
dec
leave
call
out
(bad)
pavgw
jne
mov
and
pusha
or
das
repnz
mov
fistp
xchg
bnd
or
popf
imul
cmps
rol
stc
push
pop
and
cmps
mov
adc
sbb
sti
and
add
fisubr
clc
lods
aam
sbb
add
int3
cmps
ret
xor
cwde
cld
cmp
fcmovnbe
pop
xchg
lods
push
jb
inc
cmp
mov
jecxz
scas
test
test
cmp
or
in
xor
sub
sub
add
xlat
and
mov
inc
clc
repz
pop
test
pop
mov
pop
jp
sub
jns
xchg
sahf
icebp
data16
int3
cmp
cwde
and
movs
add
les
xor
cwde
es
push
not
dec
cli
cmp
adc
fstp
neg
lds
lds
jecxz
lock
pushf
or
add
lds
and
dec
add
stos
fcom
fndisi(8087
cmp
repnz
jb
call
mov
xor
pop
in
cmp
mov
or
mov
rcr
lods
sub
pop
dec
inc
ins
retf
jle
daa
ins
aad
sbb
and
outs
mov
push
xor
lds
mov
mov
iret
js
xchg
pop
mov
(bad)
or
jb
push
imul
(bad)
cmp
mov
test
rol
pushf
inc
mov
dec
ja
and
mov
retf
mov
xor
ss
jge
aas
cdq
or
mov
pop
outs
pusha
adc
int
dec
retf
or
inc
outs
in
(bad)
imul
push
fldcw
mov
xlat
jae
movs
pop
xor
dec
ror
sub
sbb
push
ins
aaa
pushf
xchg
daa
out
sub
into
push
test
jge
je
call
adc
dec
xchg
inc
jnp
inc
jp
xchg
cld
pop
adc
jo
sbb
mov
mov
mov
xchg
inc
pop
mov
js
fwait
hlt
push
into
(bad)
push
mov
into
push
push
test
mov
loop
push
mov
fcom
fist
pusha
inc
shr
sub
out
jmp
jl
or
rcl
inc
push
(bad)
xchg
scas
add
pop
test
aaa
repz
jo
aas
in
pop
add
iret
popa
xor
fst
shr
or
ror
pop
jns
outs
sub
xchg
push
out
popf
jo
call
adc
dec
pop
in
(bad)
shr
js
cli
cs
push
pop
dec
or
iret
mov
add
fcom
in
mov
mov
test
test
mov
dec
scas
out
rcr
mov
and
ins
push
dec
xor
adc
xchg
dec
mov
stos
nop
and
add
sbb
enter
stc
xchg
sbb
jmp
neg
or
bound
mov
pusha
je
inc
imul
xchg
out
xchg
cwde
or
movs
jle
add
pop
mov
jo
xchg
out
daa
pusha
cmp
outs
or
out
mov
xor
dec
movs
mov
push
sbb
inc
adc
jne
add
jno
mov
call
fs
jp
adc
mov
pop
dec
in
adc
mov
test
cdq
repz
push
xchg
pusha
xchg
inc
js
sahf
sub
fld
rol
jae
push
(bad)
pop
xbegin
jl
cmp
xchg
mov
mov
sub
nop
(bad)
pusha
push
push
stos
mov
inc
dec
movs
sti
xchg
(bad)
cmc
xor
mov
(bad)
in
inc
cmp
movs
or
in
jl
push
xor
mov
mov
push
add
imul
cmp
icebp
pusha
dec
js
sub
test
ror
pop
repnz
sbb
cmc
jecxz
popf
loop
or
fcomp
pop
out
add
and
push
test
rcr
adc
psllw
pop
xor
inc
pusha
scas
xor
cmps
loope
jnp
push
sub
shl
ud1
imul
lahf
lahf
cmp
mov
les
sti
and
sub
mov
cli
add
fwait
xchg
mov
or
sbb
jge
pop
xchg
push
jns
int3
nop
mov
cdq
xchg
push
push
cmp
pop
stc
call
push
push
xchg
jns
js
xchg
and
cmc
push
out
inc
xor
fst
fs
mov
xchg
jge
out
cmps
fist
jns
inc
dec
inc
int
icebp
mov
lods
dec
ins
mov
xor
sbb
or
mov
ins
fimul
mov
pop
mov
out
pop
pop
js
xor
cmps
ins
mov
faddp
repz
xchg
repnz
pop
scas
xchg
js
or
lds
cmp
repnz
dec
ret
cdq
jg
mov
leave
xchg
ror
and
adc
std
xchg
retf
mov
daa
dec
xchg
sbb
call
fdiv
inc
push
(bad)
mov
push
inc
sbb
test
(bad)
into
and
aaa
stos
adc
sar
xchg
imul
and
mov
sbb
in
(bad)
js
fistp
test
mov
popa
arpl
jle
call
ret
movs
int3
jle
or
mov
xor
or
retf
int
fs
(bad)
xor
inc
lahf
xor
int3
ins
ss
xlat
rcl
pop
int3
jmp
sbb
mov
retf
scas
jno
inc
jmp
minsd
add
pop
jmp
hlt
jl
in
jno
mov
outs
retf
fild
imul
adc
push
xlat
retf
xchg
mov
in
push
add
mov
inc
xchg
loop
sbb
lahf
int3
cmp
(bad)
js
and
xchg
push
stos
and
fadd
cmp
jl
cmp
jae
dec
add
add
or
and
dec
mov
push
cmp
test
mov
(bad)
sbb
dec
mov
fs
sbb
mov
mov
cdq
pop
jmp
xor
sti
xlat
mov
sub
pop
dec
jmp
cmp
sbb
add
mov
xor
pop
retf
popf
in
jecxz
inc
mov
add
push
mov
(bad)
(bad)
add
push
(bad)
mov
lods
sbb
out
mov
int3
psrlw
stc
mov
dec
push
xchg
xor
pop
xchg
test
addr16
mov
scas
into
lods
pusha
push
push
ja
lea
ds
retf
leave
or
ins
push
cmps
or
xchg
mov
pushf
cmp
xchg
mov
popf
mov
fstp
mov
(bad)
sub
int
mov
xchg
push
clc
popf
push
gs
pop
mov
loopne
xchg
cmp
xlat
mov
test
enter
or
fxch
lods
pushf
in
push
ror
xor
dec
mov
cmp
cmp
in
lock
std
sbb
mov
pusha
fwait
in
fnop
sbb
cmp
cmc
out
pop
loop
cmp
pop
mov
hlt
mov
cwde
shl
xchg
std
mov
cmp
sbb
ss
stos
dec
lods
sahf
xchg
sub
rcl
ficom
xor
test
jl
xor
repnz
(bad)
jle
cld
gs
and
ja
pop
inc
jo
data16
loopne
cmp
mov
ds
das
aas
push
pop
jle
repz
fst
xor
imul
push
mov
cmp
(bad)
(bad)
mov
cmp
inc
loope
mov
jae
pop
xchg
and
adc
call
inc
push
cmps
sbb
hlt
push
sar
fstp
repnz
jmp
add
aam
inc
es
popa
pusha
inc
jl
push
or
ss
pop
test
push
mov
aas
pop
mov
sbb
jl
add
cmp
fild
xor
stos
pop
sar
mov
pop
test
int3
and
dec
retf
ins
mov
pop
imul
push
pop
push
sbb
lods
add
arpl
dec
or
and
adc
lahf
leave
les
dec
sub
jmp
push
les
lods
lods
add
adc
daa
xchg
push
fld
and
and
pop
add
into
movs
mov
sbb
xchg
sar
cmps
ficom
mov
or
outs
push
sub
lods
jno
jae
lods
push
dec
test
mov
rcl
fst
lahf
inc
out
lds
fidiv
cmp
sbb
mov
add
mov
sbb
mov
push
gs
loopne
(bad)
stos
xor
mov
pop
and
adc
mov
rol
out
dec
daa
jmp
cmps
loopne
dec
imul
push
test
jmp
dec
cdq
rcr
fld
jle
stos
cmp
and
jl
pop
fld
icebp
js
mov
ret
int
xchg
in
cmps
test
cs
sar
fwait
push
xchg
pop
cwde
inc
(bad)
fistp
jle
xchg
ds
sbb
pop
scas
test
loop
pop
push
dec
adc
inc
cmp
fsub
imul
xor
add
mov
js
pop
and
inc
jl
mov
add
movs
call
out
and
stos
popa
cli
mov
mov
jns
push
jmp
ins
sbb
fwait
push
push
jbe
rep
and
push
(bad)
fld
call
je
ficomp
push
test
retf
out
in
movs
and
and
mov
xor
(bad)
sbb
popa
je
data16
mov
adc
cmp
push
push
dec
push
adc
dec
and
cli
test
adc
lock
jnp
jno
(bad)
hlt
retf
and
push
pop
scas
xor
mov
scas
cmp
scas
call
fstp
mov
and
js
hlt
gs
jmp
pop
jge
nop
adc
and
inc
push
movs
cdq
je
icebp
add
mov
pusha
test
popa
shr
xchg
outs
and
jmp
aam
fmulp
or
sbb
repz
pushf
push
lds
stos
pop
xor
jl
out
jmp
jmp
push
(bad)
in
or
cli
jno
stos
sub
sbb
xlat
call
add
cmp
push
fist
popf
movs
shr
xchg
cmps
loop
cmp
cmp
push
adc
cmp
add
and
fcomip
mov
cdq
dec
jle
dec
and
(bad)
aaa
xor
test
xchg
pop
or
pop
outs
imul
cmps
pop
fisttp
lods
popa
cmp
and
and
xchg
xchg
fdivr
mov
and
aam
in
(bad)
std
sub
or
pop
clc
ret
daa
cli
cmp
push
pop
(bad)
cmp
xchg
and
sub
xchg
ds
mov
cwde
std
add
inc
mov
ror
mov
out
lds
mov
sub
mov
pop
loope
pop
lahf
fild
ins
outs
(bad)
fs
mov
sbb
mov
arpl
outs
aaa
popa
fadd
inc
cld
retf
add
into
fist
add
shl
xchg
clc
push
push
rol
leave
inc
pop
imul
dec
enter
cwde
xchg
pop
in
or
cld
jmp
inc
cmp
popa
inc
mov
or
adc
push
sbb
sahf
or
push
lea
pop
pop
pop
or
ins
or
jbe
xchg
mov
movs
mov
repz
fs
push
test
mov
leave
jb
xchg
cmp
cld
popa
jg
(bad)
in
jo
mov
xor
test
lds
xchg
push
retf
xlat
les
inc
mov
lods
push
jmp
xchg
test
and
test
cmp
mov
sub
iret
sub
std
sub
jg
adc
xor
test
xlat
hlt
lods
and
aas
imul
cmps
int
and
je
mov
mov
pop
push
(bad)
data16
sar
shl
sbb
out
sub
jmp
imul
jge
sbb
mov
fiadd
and
stos
and
dec
sbb
push
jno
(bad)
sbb
sahf
call
retf
out
neg
(bad)
js
push
push
in
pusha
xor
stc
das
mov
adc
inc
and
rcr
repz
mov
pop
dec
mov
push
sbb
jbe
popa
or
add
mov
inc
outs
sbb
sbb
pop
es
int3
mov
mov
(bad)
cmps
shl
mov
ret
pop
lahf
rcr
aam
inc
mov
aam
inc
dec
mov
out
call
call
xchg
pop
mov
pop
movs
push
dec
adc
es
les
sub
popf
jmp
add
xchg
fbstp
fldcw
xchg
push
inc
retf
push
es
mov
sub
cli
cdq
pop
imul
dec
(bad)
imul
fldcw
xor
or
jnp
movs
dec
lods
fs
xchg
xchg
stos
cli
sbb
xor
stos
out
jb
popf
lods
shr
popf
dec
adc
frstor
jmp
imul
loope
xor
(bad)
push
cmp
inc
ret
jnp
fsub
xor
sbb
sbb
ja
fnsave
jns
sbb
(bad)
pusha
out
mov
or
cmc
cmc
shl
test
ins
xchg
int
add
cdq
cmc
cwde
pop
mov
and
mov
shl
xchg
inc
inc
ficomp
imul
push
mov
cmc
int
addr16
repz
push
mov
ret
sbb
jae
dec
add
sub
jae
ss
(bad)
adc
sti
cmps
(bad)
repz
call
sub
jno
js
cs
push
inc
mov
(bad)
mov
mov
(bad)
ja
mov
inc
ins
adc
push
sar
lea
or
ds
jp
in
pop
(bad)
pop
and
cld
mov
sub
loope
pop
mov
dec
and
xchg
sar
shr
in
lahf
stc
push
cmps
dec
lds
in
xor
out
mov
and
add
ror
jl
retf
cmp
loop
test
xor
and
retf
or
jne
ins
add
dec
mov
xor
aaa
out
dec
fcomp
cdq
into
mov
mov
bound
loope
js
cmp
sbb
inc
mov
and
movs
sbb
jge
push
mov
lahf
mov
sbb
arpl
mov
adc
jns
jle
dec
jp
pop
add
push
data16
retf
dec
and
sub
and
xchg
jae
test
inc
aam
popa
std
sar
daa
cdq
jmp
mov
fldenv
pop
sub
dec
push
aad
(bad)
push
jnp
xor
popf
fist
mov
ret
loopne
cli
in
mov
and
fidiv
xor
out
pop
mov
add
clc
fsubr
jne
aam
ret
les
aaa
addr16
lahf
fiadd
rcl
or
and
out
jno
cmp
mov
rep
jge
popa
test
adc
scas
sahf
and
sbb
aad
xor
ret
push
jno
push
or
xlat
icebp
mov
mov
dec
ret
or
dec
js
inc
ins
sbb
popf
xlat
or
sub
add
xchg
fisttp
stos
out
out
xchg
ret
sar
or
pop
cwde
mov
adc
jmp
dec
imul
mov
stc
mov
cmp
sar
mov
cmp
sub
shr
ins
xchg
inc
jle
sbb
cwde
sbb
out
push
scas
push
sub
jge
call
sub
retf
jb
pop
aad
lock
cmc
test
enter
mov
data16
sub
inc
fdiv
xchg
push
sub
inc
leave
mov
ja
fild
pop
fcom
mov
in
(bad)
sbb
ss
pop
call
dec
dec
lock
sub
or
jp
jmp
popf
rcr
add
stc
mov
out
(bad)
jmp
out
lds
int
dec
inc
mov
jae
sbb
mov
cmp
cli
mov
fild
xchg
sub
xlat
or
or
lods
add
pop
sub
ror
cdq
adc
leave
push
adc
in
pop
cwde
inc
cmp
add
les
jno
sub
add
xor
lahf
repnz
bound
sub
test
test
mov
adc
fcmovnb
int
adc
lods
inc
popa
lahf
in
pop
pusha
sbb
mov
ret
sub
cmp
jns
fucomi
add
xchg
mov
and
aas
jecxz
pop
mov
xchg
gs
push
cli
jp
jbe
dec
adc
adc
mov
aas
movs
rcr
mov
test
xchg
push
scas
jnp
(bad)
adc
and
ins
or
leave
imul
mov
xchg
mov
and
cmp
jno
pop
outs
mov
sub
mov
cmps
inc
test
mov
inc
sbb
push
mov
in
adc
push
cmp
push
call
jle
add
mov
shr
dec
xor
out
cmp
dec
or
inc
mov
out
xor
into
mov
sub
add
imul
mov
sar
mov
sbb
cmc
push
rol
sub
nop
and
jle
fs
cs
jnp
bnd
loope
xor
inc
xor
addr16
not
cs
sbb
add
pop
aad
add
in
push
mov
mov
inc
inc
adc
jp
mov
inc
ror
jo
mov
pop
pop
jmp
adc
push
enter
dec
sbb
sar
data16
xchg
adc
dec
xor
and
cdq
cmp
or
inc
loop
push
gs
(bad)
daa
mov
nop
popa
out
retf
xchg
fucomi
out
cmp
hlt
stos
in
mov
dec
std
bound
pop
sub
lea
loopne
rcl
sbb
pop
(bad)
mov
and
je
jae
adc
sti
adc
fcos
movs
sbb
xchg
sbb
ja
(bad)
xor
or
fild
movs
mov
nop
mov
cmp
push
mov
inc
mov
in
cli
sub
xor
or
pop
or
hlt
inc
outs
out
cmps
call
xor
fst
cmp
mov
push
pop
icebp
loopne
leave
xchg
push
lods
sub
sub
idiv
and
leave
sub
in
fiadd
or
or
dec
mov
data16
aam
out
test
pop
pop
mov
scas
cli
push
mov
iret
xchg
mov
ds
pop
xor
inc
add
scas
js
cmp
mov
test
cli
mov
scas
mov
mov
add
adc
mov
add
mov
xchg
call
test
adc
jge
out
push
push
pop
(bad)
stos
push
jle
and
dec
xchg
pop
pop
mov
test
sar
scas
and
xchg
or
sahf
pop
aad
dec
in
test
or
fild
in
imul
push
pop
test
imul
call
mov
icebp
or
mov
mov
xchg
test
retf
add
mov
xchg
out
outs
scas
xchg
std
int3
les
vphaddubq
test
mov
mov
in
shl
or
xor
retf
push
in
inc
shr
sub
jp
cmp
xchg
sub
dec
sti
xchg
adc
dec
je
rcr
mov
scas
or
xor
call
popf
cmp
push
push
push
ror
jno
pop
inc
ins
push
or
jne
mov
cdq
mov
push
or
lock
pusha
pop
sbb
rcl
js
mov
ds
mov
mov
and
xchg
dec
repz
mov
cmp
inc
mov
mov
aas
mov
popf
mov
cld
movs
mov
adc
das
xor
mov
adc
adc
adc
push
(bad)
xchg
ss
scas
jp
dec
fs
enter
mov
in
outs
sbb
and
lds
dec
cpuid
adc
sub
pop
add
dec
stc
outs
jbe
lahf
mov
xor
sub
jmp
and
scas
dec
pop
ja
mov
sahf
inc
pop
sbb
xor
jecxz
mov
das
movs
int3
ins
ds
lods
mov
(bad)
bnd
aas
scas
inc
pop
popf
cmp
and
inc
xor
jnp
xchg
mov
fild
(bad)
mov
jg
stos
dec
jb
pop
rcl
mov
push
or
or
or
addr16
inc
loopne
xchg
ja
pop
loop
push
adc
mov
ret
(bad)
cld
xor
pop
xchg
push
pop
clc
mov
pushf
ret
lock
dec
inc
mov
lea
imul
inc
dec
das
xchg
sar
out
sub
call
xchg
(bad)
lock
mov
adc
bound
jno
aas
xor
jb
fadd
push
mov
xchg
repz
and
in
in
inc
lods
xor
ror
cwde
daa
test
mov
hlt
add
pop
mov
pop
in
cmps
movs
imul
dec
out
fxch
sub
add
mov
fcomp
stos
mov
arpl
popa
pop
shl
xor
jns
fmul
test
icebp
call
push
sub
adc
dec
daa
jb
pop
adc
rol
dec
or
xchg
add
fst
sbb
call
fld
mov
cwde
adc
and
call
jo
out
out
pop
push
xchg
dec
aaa
out
popf
(bad)
sbb
pop
xchg
pop
scas
std
inc
iret
push
xor
lods
jl
sbb
cmp
in
xchg
xchg
push
add
cmp
je
pop
jle
ins
xchg
out
add
add
push
js
gs
imul
into
outs
cmc
sti
lods
jns
pop
push
pop
stos
or
mov
nop
cld
pop
push
xor
or
mov
in
lods
cmps
js
jo
jne
mov
inc
push
pop
push
inc
cwde
into
xor
mov
ins
fdiv
aad
adc
mov
cmp
jne
push
jbe
fs
mov
cmc
daa
sub
sub
inc
push
add
shl
jb
sub
dec
mov
bound
push
jne
mov
loope
js
fistp
je
mov
push
sub
imul
jae
fimul
bound
jns
lds
and
and
dec
in
mov
sub
addr16
leave
inc
clc
or
packssdw
mov
push
mov
(bad)
lods
cmovae
push
inc
cmp
xor
int
mov
push
icebp
stos
call
mov
fs
idiv
xor
xor
inc
sub
int3
popf
rcl
xor
xchg
aaa
test
dec
cmp
scas
cmps
idiv
pop
icebp
mov
or
pop
xor
out
xchg
in
cmc
nop
and
cmp
pop
repz
stc
dec
loop
test
lods
add
sbb
loopne
xor
sar
inc
xchg
or
scas
neg
cwde
push
in
lods
dec
jb
call
neg
lock
pusha
pusha
mov
jge
repz
test
fadd
js
and
adc
jg
xor
(bad)
std
pop
xor
jmp
fimul
mov
mov
pop
cdq
push
les
pop
repz
jne
ret
je
dec
xlat
out
movs
adc
xchg
or
out
jns
clc
daa
xlat
xor
push
push
sub
push
in
retf
lock
hlt
pushf
lock
mov
das
inc
cli
data16
dec
xor
out
mov
mov
jno
cld
daa
icebp
sub
push
cmc
pop
lods
and
sbb
and
mov
stos
sub
jns
test
ins
add
stos
cwde
ins
jle
outs
je
jecxz
xlat
jb
dec
cli
shl
and
neg
push
call
fldcw
adc
xor
retf
inc
rcl
neg
adc
xchg
(bad)
pop
mov
imul
sbb
pop
std
adc
movs
jns
mov
push
stc
(bad)
and
adc
jmp
adc
or
pop
pop
xor
lods
scas
push
xor
aaa
mov
mov
or
in
jp
out
popf
xchg
stos
push
(bad)
jl
jmp
xchg
xchg
dec
cmp
xchg
jecxz
push
push
fsubrp
out
and
pusha
lea
fisubr
test
dec
mov
mov
sub
outs
push
pop
sub
mov
xlat
lahf
adc
sub
xor
dec
inc
sar
test
hlt
shl
sub
sub
test
xor
ret
lds
adc
adc
arpl
jl
sar
xchg
jmp
xchg
bound
mov
jmp
les
inc
pop
adc
retf
fcom
dec
push
or
adc
sbb
inc
push
repz
push
repz
and
sub
add
mov
xchg
arpl
in
les
fld
fimul
fwait
xor
adc
retf
in
push
cmp
repnz
test
mov
cwde
jp
cwde
or
outs
dec
xchg
cmp
pushf
add
int
pop
mov
mov
mov
push
jge
push
icebp
scas
inc
inc
pop
lds
lahf
ror
loope
loope
ret
retf
shl
sbb
xor
scas
cmp
jnp
sar
push
scas
jge
rcl
shl
cs
pop
inc
test
fsub
(bad)
jns
xor
int3
sbb
mov
leave
rcr
mov
inc
bound
xor
jae
mov
xor
ret
fidiv
mov
inc
xchg
jo
add
mov
cmp
cmps
mov
add
stos
cmp
mov
stos
sahf
lahf
repz
mov
cli
mov
icebp
and
and
aaa
sub
pop
dec
fisttp
fcmovb
adc
fcomp
cs
scas
push
daa
fucomp
bound
int3
jae
mov
cmp
xchg
lods
(bad)
retf
fisttp
bound
xchg
and
jg
lods
jae
mov
xchg
cmc
retf
in
fst
repz
pushf
cmps
mov
aam
mov
cmp
push
jno
pop
pop
int3
add
mov
mov
xor
jae
xchg
sbb
dec
(bad)
mov
(bad)
push
test
sub
icebp
icebp
fstp
mov
dec
jo
add
cmp
or
stos
in
retf
or
xlat
jl
mov
ds
xor
retf
jnp
inc
out
scas
retf
inc
les
cmp
sub
ror
sti
sbb
outs
and
ss
movs
mov
cmp
jecxz
test
push
ins
xchg
cdq
push
jmp
or
out
push
and
xor
push
dec
xchg
setae
adc
and
lods
and
or
xchg
sub
rol
pusha
add
pop
stc
ficom
dec
adc
lods
in
pop
dec
mov
mov
jmp
psubb
push
sbb
loop
stc
outs
jnp
push
push
cmp
icebp
es
xor
inc
mov
xor
jg
add
sub
repnz
mov
adc
xor
cmp
iret
popa
movs
push
jb
add
mov
inc
push
push
stos
pop
int
jle
inc
dec
je
jg
and
or
or
push
cld
push
in
movs
xor
push
out
mov
cdq
shr
mov
bound
and
(bad)
int3
cmp
xchg
xor
sbb
mov
out
cmp
pop
in
dec
lar
xor
sbb
int3
xor
mov
xor
push
inc
xchg
daa
dec
out
cdq
(bad)
stos
mov
cld
sahf
loopne
call
pop
cmps
je
mov
ins
pop
lods
mov
in
dec
and
rcr
(bad)
cs
outs
(bad)
and
sbb
fadd
adc
sti
stos
sbb
aam
pusha
and
js
fcom
mov
popf
sbb
idiv
pop
fdiv
push
(bad)
push
dec
or
sbb
movs
xchg
xchg
fisubr
mov
clc
jecxz
push
cmp
ret
not
push
mov
or
xlat
es
aas
hlt
icebp
mov
push
(bad)
adc
pop
ss
or
ss
inc
and
outs
mov
mov
mov
out
(bad)
cld
ret
mov
fiadd
add
les
loope
ins
cwde
inc
mov
retf
jge
fcmovbe
and
mov
push
adc
push
test
sbb
rol
ja
mov
add
xchg
mov
rcr
bnd
push
dec
rol
stos
cs
pop
add
sbb
cmp
and
cld
rcl
js
outs
cmp
inc
jmp
outs
jb
ds
sbb
sbb
loope
jp
sub
jo
mov
cmp
mov
ja
ficom
popf
ror
scas
vorps
retf
repnz
cmp
cmp
lock
mov
popf
xor
jbe
shl
je
dec
cmps
sub
in
push
test
lods
xchg
out
in
fistp
dec
fs
rcl
xor
les
rcl
push
adc
ret
das
push
mov
cmp
sar
sub
pop
into
mov
sbb
jb
dec
fiadd
or
mov
sbb
lea
ins
(bad)
(bad)
xchg
stc
sub
lods
cmc
jae
ret
adc
adc
sahf
fmul
jge
or
push
jl
sbb
push
inc
cmp
push
arpl
das
gs
lods
mov
xchg
push
jo
sbb
cmp
pop
sub
aas
loop
push
clc
jle
pop
pop
pop
frstor
(bad)
sahf
repnz
dec
pop
movs
in
dec
mov
inc
sbb
mov
mov
dec
(bad)
int3
aaa
pusha
call
sub
dec
mov
mov
adc
inc
(bad)
xchg
cmp
adc
call
out
(bad)
outs
cmp
pushf
(bad)
xacquire
retf
movs
mov
ja
sbb
cmp
ficomp
mov
icebp
(bad)
call
adc
fld
sub
push
pop
lods
sbb
popa
and
mov
icebp
mov
ret
imul
mov
mov
arpl
push
aam
xor
imul
ret
push
out
scas
dec
push
mov
lods
mov
jmp
fistp
pop
int3
mov
mov
in
sub
aas
js
mov
mov
push
cmp
pop
xchg
pop
cmps
add
aas
outs
sar
add
les
daa
aam
pop
lahf
nop
xor
iret
inc
xchg
push
lea
dec
dec
rcr
and
(bad)
retf
mov
rcl
mov
xchg
add
ja
mov
rol
std
or
stos
adc
push
and
outs
adc
xchg
lods
jae
shl
loopne
and
xchg
imul
in
xchg
pusha
push
jne
pop
pusha
mov
movs
test
sub
jo
sub
jmp
fwait
nop
imul
pop
sub
or
sar
mov
and
inc
mov
and
fmul
dec
push
push
(bad)
mov
push
mov
(bad)
push
pop
addr16
inc
push
lods
inc
push
in
lahf
pop
jno
shl
out
or
fst
mov
inc
cmps
push
gs
jmp
lea
xchg
pop
cmc
jmp
ffree
daa
mov
or
cmp
pop
add
push
inc
inc
jp
lods
xchg
jne
mov
(bad)
and
xchg
sub
lds
inc
cwde
push
pop
xor
in
fidivr
push
nop
fild
jle
or
ficomp
lds
or
popa
sbb
add
pushf
dec
fldenv
cmp
sahf
jg
stc
mov
jae
ins
movs
xor
dec
scas
jno
pop
inc
movs
loope
sbb
dec
shl
ins
xor
ja
dec
cmp
add
xor
xchg
mov
or
fcmovne
add
sub
outs
cmp
dec
out
div
ss
sub
sub
jno
pop
fdivr
push
repz
inc
mov
inc
xor
push
dec
(bad)
jne
loope
mov
pop
pop
mov
inc
adc
inc
sub
(bad)
jo
xor
sahf
stos
xlat
push
mov
xchg
add
jmp
ds
inc
into
ror
cli
pop
leave
and
sub
scas
xchg
aad
mov
add
sbb
rol
mov
das
shl
jae
mov
push
retf
mov
cmp
ficomp
loope
jge
xor
push
mov
push
or
addr16
sti
scas
aas
ror
ss
mul
aad
dec
pushf
out
outs
xlat
retf
or
mov
push
scas
push
ror
(bad)
xor
xor
pop
aad
ret
cmp
sti
push
sbb
cs
mov
jp
push
repnz
adc
push
leave
xor
mov
jbe
inc
dec
ss
jmp
div
repnz
sbb
aad
retf
push
xchg
retf
jmp
jne
es
es
(bad)
cmp
adc
jne
inc
not
jle
rcr
out
jge
test
or
jo
pop
xor
retf
pushf
push
xor
xchg
cli
out
inc
push
inc
aas
arpl
and
pop
pop
cmp
sbb
aad
xor
aaa
xchg
inc
inc
mov
aaa
test
into
outs
shr
add
jno
mov
sub
pop
push
mov
lds
pop
cmp
sbb
cs
push
fist
test
mov
add
sbb
pop
out
popf
or
fs
jp
jae
adc
add
push
popf
adc
(bad)
and
imul
jl
data16
aad
cmp
jb
jne
push
fisttp
adc
adc
mov
adc
dec
pop
jo
cmp
in
movs
call
add
ret
jns
jbe
hlt
stc
in
xchg
xchg
xor
iret
adc
inc
(bad)
fidivr
sub
or
lds
fcomp
fwait
es
aad
push
mov
xchg
aad
adc
pop
mov
fcomp
mov
sub
mov
and
mov
adc
push
sahf
test
push
xor
adc
push
push
fcmovbe
in
xor
std
icebp
lahf
mov
push
sbb
mov
xchg
inc
push
sti
(bad)
lods
mov
adc
out
shl
push
(bad)
mov
dec
mov
and
cld
or
push
and
xchg
jne
popa
int
jge
nop
fcom
pop
in
cdq
or
mov
sar
imul
push
push
mov
fwait
mov
scas
mov
inc
sbb
push
dec
iret
xchg
inc
loopne
neg
push
test
ins
sub
nop
xchg
mov
adc
data16
fwait
or
test
out
mov
and
xor
iret
fst
xor
outs
aad
adc
push
and
clc
out
repnz
int3
ins
hlt
mov
xchg
fwait
pop
mov
in
enter
ss
mov
lock
add
loopne
outs
xchg
cdq
xchg
sbb
sbb
xchg
ins
das
movs
(bad)
out
fcomip
jae
add
or
stos
cmps
push
pop
adc
push
pop
daa
je
aas
iret
xor
lods
pop
mov
mov
adc
daa
cli
(bad)
fnstcw
in
mov
in
addr16
je
movs
fnstcw
jge
je
lock
xchg
mov
pop
fadd
sub
cli
mov
test
das
add
xor
sub
jns
xor
shr
xchg
and
mov
mov
sbb
jne
inc
sahf
push
rcl
add
leave
push
adc
shl
jbe
retf
mov
gs
cwde
jae
test
stos
adc
stc
outs
addr16
push
lods
cmp
or
iret
jne
or
je
rol
sbb
and
and
addr16
sub
inc
pop
jp
jecxz
xor
mov
mov
outs
dec
cwde
jge
dec
sbb
and
movs
loope
ds
aam
stos
jne
push
(bad)
and
ret
xor
jbe
mov
add
popa
out
jnp
dec
xchg
mov
ds
shl
jae
mov
sub
jmp
mov
retf
(bad)
jno
loop
adc
dec
mov
jb
pop
push
sub
and
or
pusha
lahf
shl
or
xor
ja
mov
mov
test
pop
das
xchg
pop
ret
mov
adc
xor
dec
clc
pop
enter
pop
fist
and
fldcw
mov
xchg
das
add
addr16
mov
mov
ja
jl
ror
test
mov
pushf
or
pop
xchg
xchg
pop
mov
rcr
inc
adc
fidivr
inc
fbstp
retf
and
imul
xlat
movs
add
adc
mov
aam
ret
inc
mov
out
fnstcw
jno
mov
inc
daa
in
cmc
fistp
xor
arpl
lods
out
sub
push
mov
mov
xchg
leave
ret
dec
mov
xor
rcr
jne
addr16
call
pop
adc
sub
push
xlat
(bad)
pop
jno
xor
jne
fs
lahf
jg
addr16
test
fld
push
ins
dec
(bad)
push
ror
scas
inc
out
or
and
and
scas
(bad)
neg
in
inc
dec
inc
jle
pop
(bad)
push
mov
daa
stc
xor
imul
cmp
std
test
mov
ret
cmc
fist
imul
jecxz
sub
ins
stc
jl
cmps
movs
jmp
sahf
imul
cli
xchg
sbb
adc
mov
mov
scas
enter
and
push
dec
inc
inc
pop
xor
dec
or
leave
sahf
in
inc
or
mov
and
inc
loopne
aam
dec
leave
push
cmps
call
or
mov
lods
sbb
push
cmps
aam
test
loopne
mov
mov
data16
daa
jnp
mov
xor
xchg
xor
pop
sub
retf
in
add
mov
or
jl
(bad)
dec
fcomp
jb
sbb
popf
mov
pop
push
add
into
xchg
lods
xor
popa
fisubr
cs
sti
std
stc
inc
mov
repz
mov
xchg
jmp
dec
or
rol
test
cmp
(bad)
or
test
in
pop
stos
xor
(bad)
jae
pop
test
pop
pop
add
lods
sub
mov
test
fst
mov
push
push
aad
aam
cmp
lds
cmp
push
sub
(bad)
cmp
(bad)
loopne
es
(bad)
push
js
adc
sbb
sbb
mov
push
xor
sti
xlat
push
fisub
sti
aad
lea
adc
mov
xchg
ret
jns
test
rcr
inc
and
push
out
inc
jmp
sub
add
(bad)
in
inc
xor
(bad)
jecxz
hlt
dec
jp
cdq
imul
into
int3
cmp
push
adc
mov
xchg
cmps
xor
add
test
not
jmp
cmp
or
leave
mov
aaa
or
cmp
inc
jne
dec
shr
pop
jecxz
inc
out
xchg
jg
addr16
mov
inc
push
int3
stc
jl
jae
(bad)
lods
lock
jno
xchg
leave
sub
inc
bound
mov
(bad)
mov
(bad)
adc
fadd
jmp
or
xor
lods
sub
push
xchg
out
lods
mov
leave
fcom
in
shl
dec
dec
xor
and
(bad)
data16
dec
aad
call
cmps
fldcw
ret
adc
dec
adc
mov
lods
js
pusha
es
and
aam
in
xchg
lea
fcomp
sbb
sub
mov
cwde
mov
inc
lahf
adc
inc
enter
movs
dec
xlat
std
cwde
xchg
int
pop
xor
ficomp
mov
stos
les
inc
ret
sbb
mov
mov
dec
jp
fwait
je
leave
xchg
(bad)
jne
dec
out
pushf
fld
mov
mov
dec
inc
and
or
ret
arpl
sysexit
lea
jae
cmp
inc
xor
pop
push
jnp
jp
jp
xchg
and
push
add
adc
mov
push
and
mov
sti
nop
retf
jge
cmp
xchg
inc
cmp
xor
push
lahf
and
pop
(bad)
shl
lds
in
jmp
pop
in
mov
test
cdq
in
daa
add
fs
out
fwait
mov
dec
in
jns
xor
inc
fwait
mov
xor
xchg
pop
ds
or
jle
call
xor
jns
std
jecxz
pop
xor
lea
cmps
jo
pop
(bad)
mov
mov
xchg
pop
jns
mov
ja
(bad)
retf
xchg
xlat
sbb
lea
add
daa
aaa
xor
adc
push
(bad)
pop
out
sbb
cwde
fcom
pushf
sub
inc
push
adc
cs
jge
adc
aas
xor
dec
loope
les
mov
xchg
bound
or
jecxz
pop
xor
lea
(bad)
push
mov
std
xlat
push
pop
xchg
cs
aam
mov
std
sub
sub
arpl
inc
jge
sbb
fld
dec
ret
in
into
mov
shl
pop
repnz
add
and
mov
ins
push
or
out
xor
call
mov
cmps
xor
jg
mov
in
mov
push
mov
inc
cmps
inc
retf
mov
dec
or
leave
loope
ret
shr
arpl
dec
mov
ins
retf
add
pop
stos
aad
test
test
ror
jg
(bad)
jmp
sbb
pop
sub
inc
jecxz
mov
and
test
push
or
add
dec
sbb
call
inc
pop
xchg
pop
mov
lds
pop
loopne
sbb
and
ret
in
repnz
jo
cld
sub
test
push
xor
ins
xchg
cmps
pop
pop
test
jnp
sbb
mov
xchg
addr16
nop
loopne
outs
push
xchg
xor
mov
pop
push
out
or
cmp
pop
ror
adc
call
dec
lahf
(bad)
inc
dec
and
shl
pop
adc
sar
pop
pop
fwait
xlat
fild
rcr
adc
add
pushf
and
mov
add
call
je
or
(bad)
aaa
push
std
test
cwde
cmp
gs
or
push
cmc
adc
jnp
scas
pop
(bad)
fist
dec
mov
pusha
shr
dec
pop
outs
jmp
ja
enter
nop
sub
das
xchg
shl
or
pop
dec
dec
mov
movs
bound
inc
inc
jo
push
adc
push
mov
inc
repnz
xchg
xor
scas
lahf
cmc
cwde
xchg
(bad)
and
push
scas
imul
pusha
jns
(bad)
and
ins
or
std
popa
scas
push
std
iretw
ja
push
lahf
pop
jp
popa
(bad)
pop
int3
enter
mov
inc
or
dec
cmp
jge
and
repz
leave
arpl
ja
nop
mov
(bad)
jge
inc
inc
shl
adc
mov
cmc
outs
dec
inc
mov
(bad)
add
aad
pop
mov
jge
lock
(bad)
mov
adc
jge
sub
adc
scas
push
mov
sbb
popf
jno
dec
in
xlat
test
jno
adc
les
loop
mov
mov
mov
push
mov
loopne
call
retf
out
imul
xlat
sbb
add
or
retf
fisub
xor
test
dec
shl
ret
dec
adc
data16
mov
mov
sub
je
fmul
xchg
jl
rcr
scas
add
lds
in
test
and
loop
out
push
add
cmc
adc
mov
(bad)
sub
mov
lods
out
add
into
test
pop
xor
and
jbe
jmp
je
retf
in
std
jmp
cs
dec
xchg
pop
clc
outs
es
addr16
dec
inc
sub
add
dec
aas
inc
cmp
jnp
sbb
add
mov
(bad)
ja
loope
mov
ror
mov
dec
out
retf
xchg
cmps
jl
sbb
jl
xchg
or
in
sub
repz
je
mov
js
push
fild
pop
pop
imul
pop
or
dec
sbb
mov
dec
mul
aam
test
pop
aam
pop
jmp
pop
int3
jmp
out
or
mov
cmp
(bad)
pop
dec
mov
ss
mov
xor
iret
and
sbb
push
rcl
outs
or
sbb
cmc
cmp
mov
jge
not
inc
dec
mov
daa
adc
ret
xchg
cmp
nop
push
jbe
xchg
sbb
test
stc
into
idiv
dec
imul
mov
mov
fimul
and
nop
sub
xchg
push
test
hlt
inc
sub
pop
mov
loop
shl
lods
sti
lahf
mov
pop
or
pop
stos
sub
(bad)
cmps
sbb
add
lods
inc
retf
inc
adc
dec
aad
lock
cwde
stos
pop
cwde
adc
pop
pop
mov
leave
loopne
nop
mov
es
cmp
rol
mov
mov
mov
fidiv
dec
mov
jnp
lock
adc
retf
shr
je
loop
jne
xor
pushf
add
in
pop
cwde
shl
loopne
or
fld
jb
mov
xor
sub
cmp
imul
jge
mov
daa
mov
(bad)
inc
sbb
cmp
sbb
cmp
mov
sbb
cmp
sar
div
jns
jecxz
jmp
in
loope
iret
ror
dec
dec
jno
dec
(bad)
pop
outs
sub
adc
mov
arpl
and
in
xor
mov
push
pop
mov
adc
in
mov
imul
mov
jle
dec
sub
std
mov
out
inc
and
cld
loop
(bad)
xor
and
lds
jge
retf
pop
fldlg2
mov
adc
cmp
inc
into
shl
lods
lods
xor
jp
(bad)
inc
xor
cmps
pop
inc
cmc
add
xchg
test
xor
in
ja
call
scas
outs
mov
into
inc
mov
push
(bad)
sar
mov
dec
cmp
push
mov
jno
sub
int
sahf
xor
add
cmc
pop
lods
add
aas
pop
jg
imul
push
adc
stc
retf
or
mov
xchg
retf
stos
iret
push
movs
leave
jo
aad
xor
mov
(bad)
adc
or
mov
enter
mov
ret
mov
int3
xchg
dec
and
sub
xor
sti
mov
mov
mov
popf
sti
pop
imul
fiadd
add
aad
jnp
out
and
adc
mov
adc
call
xchg
sub
loop
dec
imul
xor
sbb
repnz
and
push
pop
adc
cmp
jns
mov
push
push
adc
bound
xor
mov
jecxz
pusha
add
lods
mov
add
test
lock
xlat
jbe
sub
shl
cs
cs
mov
ret
push
cmp
jns
rol
add
scas
ja
out
cmps
mov
int3
or
adc
pushf
gs
out
fstp
jns
adc
and
pop
test
repz
mov
xchg
lods
cmp
int3
(bad)
arpl
les
or
ins
in
and
jmp
cmc
adc
dec
dec
iret
lods
cmp
mov
jb
sar
fstp
jp
outs
or
setb
or
pop
jp
fxam
pop
mov
out
push
and
repz
inc
cli
in
call
push
lds
lea
dec
pop
cmp
lods
cli
jmp
ins
je
fld
jbe
push
xor
mov
movs
movs
les
fcmove
xor
popa
dec
xor
xchg
sub
fwait
(bad)
sub
jmp
(bad)
int3
mov
pushf
das
or
loope
pop
xchg
mov
sub
jmp
mov
movs
add
pop
hlt
(bad)
add
hlt
rol
jb
mov
push
fbld
pop
inc
sbb
outs
test
data16
jno
jmp
rcl
and
jb
jne
sub
mov
cli
dec
lock
sub
scas
js
xchg
sbb
cs
movs
and
adc
adc
retf
sti
add
xchg
xor
add
lods
xor
mov
out
scas
scas
mov
test
mov
mov
pop
imul
sub
or
in
dec
aad
out
(bad)
cmp
mov
and
cs
cmps
push
sub
sub
dec
xchg
(bad)
add
mov
push
jmp
cwde
ins
pop
loope
sbb
lods
arpl
(bad)
mov
xchg
fstp
fcmovb
in
mov
mov
mov
test
repnz
(bad)
arpl
not
fwait
data16
pusha
outs
cmc
daa
xor
jp
(bad)
mov
pop
mov
imul
movs
mov
or
cdq
jnp
test
sub
adc
mov
and
test
in
into
lahf
push
lods
aam
pop
pop
stos
fwait
(bad)
cmp
in
cld
ret
jecxz
push
(bad)
pop
loopne
mov
adc
loopne
in
adc
inc
cmp
push
add
push
jmp
ss
jecxz
aas
call
lahf
pushf
cs
jecxz
sbb
jne
cld
xchg
sbb
mov
and
mov
rcl
jns
mov
inc
adc
mov
les
ds
sub
mov
or
mov
mov
xor
sub
test
fmulp
in
adc
add
lods
mov
mov
div
(bad)
push
pop
int
clc
test
push
jo
mov
pop
(bad)
xchg
cmp
call
push
mov
into
aaa
arpl
popa
jbe
sub
push
xor
mov
movs
sub
test
ds
les
hlt
outs
mov
fwait
sub
adc
fs
fcom
mov
mov
jae
mov
sub
psrad
mov
add
loope
sbb
outs
push
jns
inc
jl
mov
(bad)
lea
sub
fldenv
(bad)
hlt
xchg
mov
mov
add
sbb
cmp
(bad)
mov
outs
out
call
and
iret
int
icebp
rol
jecxz
mov
ror
push
and
sar
mov
pop
jbe
sub
out
es
movs
imul
in
add
jmp
retf
inc
and
js
xor
pop
push
imul
in
pop
dec
into
mov
outs
and
cwde
or
sbb
ror
jno
lea
push
into
jmp
aaa
xchg
dec
test
inc
xor
xchg
cmp
scas
les
jns
int3
push
fistp
dec
mov
cli
int3
out
lods
push
push
mov
or
inc
test
fwait
imul
aam
neg
mul
xchg
cmp
adc
les
(bad)
inc
add
je
nop
and
xchg
xchg
xor
or
jge
loop
enter
mov
js
cmp
ds
loopne
jg
retf
shl
mov
loopne
adc
push
xchg
out
retf
(bad)
mov
cwde
fwait
mov
mov
push
jecxz
aas
mov
pop
fst
test
xor
shl
add
adc
cmp
and
or
mov
sub
or
push
aam
out
and
js
xor
test
jmp
pop
add
jp
inc
ss
repz
jns
mov
loop
outs
sbb
adc
retf
aad
imul
mov
sub
cdq
fs
cmp
or
and
sbb
aam
mov
push
adc
mov
push
dec
xor
dec
xor
push
test
pop
in
pusha
sbb
popa
jmp
and
mov
xlat
push
jae
mov
jp
sbb
and
stos
fcmovne
inc
xchg
pop
mov
je
mov
push
int
cdq
cdq
sub
loope
sbb
xchg
inc
mov
pop
ror
xor
clc
loopne
and
inc
cld
pop
mov
and
push
mov
mov
hlt
fwait
dec
and
inc
inc
dec
(bad)
ror
cmp
mov
mov
ret
call
fbld
repnz
fmul
fiadd
dec
inc
mov
std
adc
jbe
je
sar
dec
rcr
and
addr16
and
test
rol
sbb
jnp
pop
xor
jo
fs
popa
addr16
ins
ins
bound
xchg
xchg
jb
xchg
es
push
mov
push
xchg
in
cmps
popa
push
or
or
pop
adc
or
add
add
out
mov
adc
loop
jecxz
das
sbb
mov
es
outs
iret
shl
dec
ficom
aas
test
push
ss
(bad)
popf
rcl
test
jg
in
sahf
bound
push
adc
jl
inc
cmp
push
dec
xor
pop
shl
pusha
stos
adc
xor
rcr
or
pop
iret
fwait
push
jo
arpl
ret
adc
push
in
inc
cdq
rol
outs
jmp
push
or
neg
inc
mov
jb
lock
sub
xor
xor
cmp
loope
fsub
cmp
repnz
inc
out
and
xor
cmp
out
push
pop
jo
shl
inc
sbb
shl
add
dec
mov
stos
xchg
push
push
lods
loop
push
inc
fs
(bad)
cmp
or
jp
out
cmp
fmul
xchg
leave
inc
int
iret
push
ror
cmps
sahf
mov
jne
jle
scas
jnp
stc
movs
xchg
inc
mov
pushf
hlt
popa
mov
dec
inc
mov
cmp
sub
test
xor
test
cmps
(bad)
call
mov
stos
ja
jmp
cmps
sbb
pop
ins
adc
gs
inc
cmp
xor
pop
mov
xor
mov
lock
jp
(bad)
mov
mov
fs
sub
mov
jbe
or
sbb
xchg
add
in
cmove
adc
xchg
sbb
mov
sub
mov
sbb
and
sbb
pop
outs
push
cmp
cdq
jmp
cmp
cli
mov
mov
cmp
shl
loop
sub
mov
pop
pop
push
pop
sub
popa
push
(bad)
and
out
(bad)
sbb
jb
sub
stos
cmps
push
gs
mov
rep
add
adc
sub
adc
or
std
pop
xchg
and
test
cmp
jecxz
sar
call
push
mov
rcl
cmps
loop
cmp
or
pop
inc
cs
retf
and
fnstsw
retf
mov
xchg
and
sub
es
pop
pushf
ins
cmp
xor
sub
sub
das
movs
or
mov
popf
mov
push
outs
sbb
cmc
and
push
inc
fnsave
mov
jo
cmp
lds
cmp
xchg
loop
(bad)
rol
sbb
add
out
cmps
lods
dec
mov
sub
inc
shl
and
add
ret
mov
loopne
sub
arpl
push
test
imul
fcomip
nop
popa
push
jp
mov
rcl
shr
fst
jg
push
xor
cmp
ins
add
xchg
jg
lods
dec
cdq
add
jne
sbb
xchg
popa
dec
les
xchg
xor
bound
test
mov
xchg
fdiv
int3
dec
test
sub
jne
repz
mov
test
int
inc
mov
loope
mov
cdq
sti
int
dec
les
call
sbb
dec
shl
push
iret
stos
mov
sbb
push
push
add
(bad)
ins
test
inc
pushf
(bad)
and
pop
xchg
cwde
in
pop
or
adc
sbb
cld
scas
out
sub
call
loop
xchg
pop
push
push
fsubr
int
push
jne
and
xchg
out
mov
push
sbb
mov
adc
arpl
sbb
cld
fimul
cmps
pop
ja
lds
fs
je
adc
js
mov
je
retf
sbb
loopne
dec
jns
sub
movs
sti
mov
jb
mov
cmp
push
inc
push
xchg
cmp
inc
pop
lahf
lahf
fldenv
cmp
dec
arpl
push
inc
cmp
ret
pop
inc
in
pop
sbb
pop
fisub
jge
push
xchg
mov
or
fisubr
js
imul
mov
push
push
clc
jp
mov
xchg
inc
and
mov
das
mov
jne
sbb
adc
test
fsub
dec
aas
and
mov
xor
jo
ss
xor
or
xor
xchg
mov
into
les
xor
pop
sbb
mov
ret
xchg
pushf
ror
test
clc
jo
sub
push
out
enter
aad
pop
sub
test
add
or
xchg
mov
dec
test
mov
sbb
lahf
pop
ret
xchg
pop
add
sub
push
and
push
inc
sub
sahf
movs
mov
or
and
or
mov
mov
jmp
pop
(bad)
(bad)
icebp
fcmovne
data16
jmp
dec
test
xor
js
into
pop
push
push
repz
mov
idiv
xor
cmp
cmp
sbb
adc
jno
in
jecxz
jmp
js
pop
rcl
fwait
or
stos
pop
aad
sub
cmc
and
vpaddq
jge
setns
clc
jns
sub
xchg
sub
mov
shr
mov
fs
dec
imul
ret
outs
sub
pop
cs
jae
mov
repz
cld
lock
sub
xor
fwait
movs
call
xchg
pop
fisttp
js
push
jge
xchg
sub
mov
leave
arpl
sbb
mov
sbb
dec
loop
icebp
in
mov
jle
and
xchg
inc
std
push
int3
stos
loopne
lods
push
neg
icebp
into
xchg
popf
popf
mov
out
mov
cmp
scas
adc
pop
ja
cmp
pop
into
xlat
adc
iret
jmp
sahf
and
mov
lods
mov
test
ins
xor
dec
mov
and
pop
and
sti
mov
inc
fs
push
dec
xchg
xchg
pop
ror
mov
int
sbb
call
dec
sub
lahf
mov
lahf
xchg
xchg
(bad)
out
cmp
stos
jp
loopne
inc
ins
jbe
pop
and
push
lods
pop
jae
mov
xchg
and
test
cmp
mov
mov
and
(bad)
ror
clc
ins
(bad)
adc
divps
sub
sahf
dec
push
add
and
stos
test
popf
fidiv
js
sbb
mov
out
lods
lods
popf
xchg
addr16
rcl
jnp
(bad)
pop
hlt
ins
adc
bound
mov
push
or
pop
dec
mov
xchg
mov
xor
push
jo
fwait
jl
scas
addr16
jbe
inc
enter
cmp
inc
je
fdivr
jge
aaa
inc
xor
fxch
jge
(bad)
shr
sub
xchg
enter
xor
repz
std
or
xlat
cmps
loope
pop
jo
xchg
arpl
loope
ins
imul
les
adc
mov
retf
pop
xchg
sbb
jg
xchg
jecxz
lds
aad
inc
pop
daa
(bad)
imul
retf
add
enter
loopne
in
scas
leave
sbb
popa
jp
pop
xor
leave
xchg
jge
nop
pop
jae
cli
jb
rol
lods
and
mov
call
push
or
mov
sbb
(bad)
xlat
dec
cmp
jnp
sub
xchg
push
stos
xor
and
lods
xor
cmp
sbb
cli
mov
sar
dec
xor
(bad)
shr
xor
imul
jnp
scas
cmc
sub
sbb
inc
pop
cmps
jmp
call
loop
lds
scas
ret
das
dec
dec
push
xchg
std
out
lea
add
stos
pop
out
push
sbb
shl
inc
out
jbe
mov
sbb
sar
add
jmp
(bad)
retf
mov
push
jmp
cwde
pop
out
fmul
into
xchg
dec
push
push
enter
and
cmp
xchg
addr16
or
fidiv
push
outs
jns
inc
pop
movs
scas
mov
enter
jmp
sbb
test
imul
cmps
dec
repz
xchg
in
mov
data16
jno
cmp
ins
mov
nop
addr16
xor
lods
inc
push
mov
(bad)
and
stos
sahf
mov
adc
jne
pop
scas
shr
aad
popa
inc
pop
sti
out
arpl
xchg
cmp
xchg
mov
shr
js
adc
or
psubb
inc
pop
repnz
aam
pusha
call
shl
ins
and
or
in
aad
or
adc
mov
fadd
loop
retf
adc
or
in
sub
and
xchg
adc
mov
fimul
jmp
sbb
adc
pop
cmps
add
jno
adc
pop
mov
stos
pop
pusha
fcomip
pop
inc
aad
inc
in
sbb
inc
fbld
neg
aas
mov
lahf
retf
cmps
sbb
jbe
jecxz
adc
dec
mov
scas
and
inc
shr
shl
add
inc
xchg
add
add
in
mov
lods
mov
pusha
inc
call
aas
pop
and
les
popf
dec
iret
xor
sbb
adc
mov
mov
in
stos
cdq
lock
xor
out
jo
cmp
adc
stos
adc
and
jle
(bad)
cmp
mov
popf
mov
(bad)
out
pop
xor
cld
enter
sbb
fadd
call
pop
fs
push
push
fldenv
gs
icebp
inc
gs
ins
dec
and
or
push
and
add
jbe
and
push
xor
sub
dec
mov
sub
in
clc
les
dec
inc
out
iret
adc
pop
add
pop
sub
hlt
mov
fwait
jbe
retf
js
jle
mov
ds
cmp
xchg
stc
pop
cmp
lods
loop
or
cmps
push
mov
jnp
scas
pop
stos
lds
int
out
retf
bound
pop
push
test
push
das
jmp
xor
nop
popa
add
shr
or
cli
sahf
mov
fmul
cmp
test
xchg
cwde
jmp
push
(bad)
sbb
mov
xor
out
das
xor
inc
inc
(bad)
mov
test
aam
xor
test
push
pushf
les
jg
adc
push
fnstcw
adc
jmp
add
dec
xor
iret
jle
hlt
mov
dec
std
xor
mov
das
mov
cmp
fwait
loopne
aaa
mov
aas
int3
pop
gs
outs
or
cli
or
aad
mov
mov
mov
jge
xchg
sub
pop
cld
pop
jne
jnp
fnstcw
mov
push
out
pop
ja
or
(bad)
in
std
aas
xor
loop
pop
mov
mov
mul
ret
(bad)
jecxz
test
rcr
ja
add
add
(bad)
out
mov
jnp
imul
pop
cmc
push
hlt
jmpw
dec
cmp
xlat
dec
or
and
sbb
outs
or
pop
cmp
xchg
inc
dec
push
pop
xor
imul
sahf
dec
ja
mov
retf
push
imul
xchg
sbb
mov
nop
leave
(bad)
ins
sbb
adc
dec
or
movs
mov
pop
repnz
fwait
iret
pop
ins
(bad)
mov
(bad)
jmp
jo
dec
clc
neg
inc
not
(bad)
jmp
jae
jnp
dec
enter
es
shr
cmps
mov
test
mov
push
call
push
pop
inc
xchg
mov
es
movs
into
pop
xor
pop
jns
cld
clc
pusha
ret
sub
jl
cmp
test
jmp
mov
dec
outs
mov
and
nop
mov
fisttp
pop
mov
push
xor
cmp
rcl
mov
add
jno
mov
data16
cs
sar
sbb
adc
aas
js
adc
push
sbb
mov
xchg
test
(bad)
(bad)
xlat
mov
or
ins
stos
(bad)
shl
push
and
cld
push
xchg
dec
push
adc
(bad)
sbb
lock
and
inc
and
cwde
xor
pushf
daa
cli
ja
test
pop
arpl
repnz
ins
mov
add
sbb
cld
in
in
scas
call
addr16
in
sbb
int3
fmul
push
mov
mov
mov
mov
sub
fldcw
lock
std
dec
mov
clc
cmp
je
inc
and
retf
fmul
test
(bad)
sar
mov
add
shl
out
mov
push
iret
sub
mov
sti
pusha
dec
ja
das
mov
out
mov
(bad)
sub
pop
into
mov
add
pop
aam
mov
add
cmp
push
mov
cmp
inc
imul
push
cmp
repz
push
and
ficomp
into
jno
ret
test
sub
mov
lahf
arpl
ret
stos
in
xor
jge
mov
adc
jmp
loope
cmps
sahf
iret
pushf
ret
mov
(bad)
dec
cmps
loop
push
pop
rol
test
retf
jae
ja
nop
fcomp
and
pop
repz
lahf
aad
push
aas
lea
cld
xor
jmp
iret
xchg
mov
push
fstp
dec
lods
out
pusha
in
into
mov
sub
pop
es
(bad)
jns
push
fs
out
into
iret
iret
jmp
shl
lds
pop
sbb
jmp
frstor
mov
(bad)
lods
jge
pushf
jns
xchg
xor
or
cmps
loopne
dec
adc
fnstcw
xchg
call
stc
add
(bad)
loopne
ja
repz
ds
test
sar
or
xor
popf
inc
les
das
or
xor
cmp
mov
pop
jae
fdivp
adc
xchg
pop
adc
imul
sbb
mov
add
in
push
or
data16
xor
ja
push
div
adc
adc
cmps
mov
jns
push
mov
arpl
sub
shl
es
push
ss
movs
test
jl
dec
call
sbb
mov
pop
test
aad
xchg
mov
xchg
in
ja
outs
add
sbb
ins
and
mov
jle
fwait
sub
stos
rol
cmps
dec
jnp
cmp
leave
pop
in
or
mov
in
adc
sub
and
jb
aam
mov
mov
xor
mov
inc
cmp
dec
nop
(bad)
movs
mov
nop
and
push
pop
fucomip
shl
dec
or
les
mov
mov
mov
ds
mov
(bad)
sub
mov
in
mov
pop
jl
pop
jecxz
inc
xchg
inc
pop
mov
iret
mov
test
xchg
mov
inc
test
into
movs
icebp
jmp
sbb
(bad)
jmp
cli
repnz
mov
cmp
mov
popf
into
jl
and
pop
mov
test
bswap
outs
xor
push
mov
jg
imul
mov
mov
and
cdq
fisub
sbb
rcl
loop
mov
add
or
fdiv
sub
aaa
add
inc
call
jno
jmp
cli
push
pop
inc
loope
push
and
jp
daa
aam
adc
pop
(bad)
retf
gs
inc
mov
cmp
jle
cmp
rcr
xor
in
repnz
das
jbe
addr16
jnp
xchg
push
aam
jo
mov
nop
(bad)
sub
aad
into
lock
addr16
push
pop
push
loopne
mov
loope
adc
movs
out
mov
in
adc
popa
lods
es
mov
xchg
inc
scas
jb
mov
adc
fst
jecxz
hlt
ret
push
adc
mov
jae
stos
dec
adc
lds
loop
xor
add
sub
cli
xor
ret
xchg
mov
push
cmp
pop
loop
sbb
xchg
inc
add
or
sub
in
lds
sbb
jmp
pop
rol
iret
xchg
dec
test
bound
inc
aas
loop
and
adc
adc
xor
sbb
fcmovnb
lock
pop
jo
mov
fidivr
sbb
pop
fs
jno
cmp
add
cmp
fstp
mov
inc
sub
pop
push
mov
cmp
mov
(bad)
jbe
test
mov
mov
mov
shl
jl
or
bound
repz
test
movs
dec
dec
jb
mov
gs
shl
lds
or
iret
push
aam
sub
dec
and
pop
es
int3
dec
push
sub
jp
gs
bound
jne
add
(bad)
in
nop
cmp
jp
or
mov
enter
sbb
xor
rcr
ja
and
dec
inc
rcr
mov
gs
icebp
out
cmp
scas
fcomp
mov
sub
sbb
xchg
cmp
pop
mov
adc
mov
test
popa
inc
adc
daa
sub
mov
push
mov
add
cmps
cmp
lods
and
test
dec
push
and
cmp
jb
js
mov
lods
xchg
sti
out
push
cmp
call
xchg
and
pop
mov
sub
leave
and
push
push
mov
xchg
jne
fdivr
mov
loop
push
mov
sub
jg
jb
jmp
addr16
imul
xor
pop
repnz
or
stos
(bad)
mov
jecxz
cmps
inc
or
jmp
or
pop
xchg
add
mov
pop
jae
push
and
fwait
pop
dec
add
cs
push
arpl
mov
fyl2xp1
pop
dec
(bad)
jne
sub
ret
jl
out
inc
sub
push
add
jae
xor
jecxz
jb
lahf
popa
hlt
(bad)
mov
pop
sub
std
mov
dec
mov
xchg
aam
or
xchg
imul
mov
call
lods
xchg
ret
pop
push
ins
outs
and
ret
loopne
xor
dec
xchg
dec
jmp
jae
xor
sti
test
int3
imul
je
scas
call
pop
vminps
iret
jg
sbb
add
fdivrp
pop
ror
nop
call
pop
aam
leave
fs
and
pop
jae
mov
or
mov
movs
or
scas
in
div
mov
or
bound
jns
jno
sub
xchg
mov
stos
jo
cld
int
pop
aas
sbb
push
xor
loopne
mov
cmp
xchg
movs
mov
test
stos
jno
shl
jb
movs
push
lds
loope
add
adc
or
push
push
xor
xchg
test
add
call
dec
stc
dec
lahf
cmp
adc
adc
jmp
xchg
bound
mov
dec
aad
add
cwde
xchg
jp
dec
xchg
psubusb
iret
(bad)
in
cli
adc
and
xlat
popf
push
pusha
jnp
pop
mov
out
pop
xchg
arpl
jge
data16
inc
mov
retf
xchg
enter
push
push
in
cmps
sub
imul
int
pop
ja
cld
jne
pop
(bad)
dec
imul
out
aam
test
jns
inc
jb
jno
or
je
lahf
mov
lahf
in
jns
mov
dec
pop
jb
mov
sbb
cmp
rol
outs
pop
sub
dec
retf
jmp
loope
pusha
mov
test
mov
fisttp
lds
cmps
fcomp
xchg
inc
arpl
(bad)
jmp
repnz
test
(bad)
imul
sub
adc
sti
pop
(bad)
clc
push
push
stc
xor
fs
mov
pop
es
jo
fisttp
jp
cmps
addr16
stos
fwait
and
pop
rol
in
enter
sbb
inc
je
sbb
inc
clc
push
add
daa
sahf
aad
and
mov
lock
cld
ja
(bad)
mov
rcl
cwde
(bad)
enter
mov
add
mov
push
aas
pop
push
sub
or
ret
pop
cdq
jae
jnp
add
mov
ss
mov
jbe
aas
mov
pop
and
jno
outs
arpl
and
mov
adc
rcr
pop
jbe
jmp
ret
cmp
adc
sbb
mov
dec
cs
inc
sub
mov
xor
into
retf
or
sbb
push
push
popa
pop
mov
mov
mov
out
fistp
ja
mov
sbb
mov
test
pop
pop
jbe
repz
pop
mov
mov
adc
xchg
or
sbb
shl
dec
or
cmps
push
jno
test
pop
bound
cs
(bad)
xchg
jb
es
neg
push
pushf
outs
adc
and
xchg
test
pop
mov
sbb
cmps
out
repz
or
pop
inc
imul
out
or
in
sahf
sub
adc
sbb
jb
(bad)
fist
(bad)
inc
dec
std
push
push
and
outs
nop
outs
idiv
adc
retf
mov
(bad)
cld
adc
or
les
sbb
push
ss
cli
data16
xchg
in
rcr
inc
out
adc
sub
int
mov
add
xchg
call
rcr
xchg
sbb
push
cmp
imul
(bad)
cmp
cwde
adc
int3
js
inc
stos
jle
ret
mov
scas
inc
jae
div
popf
stos
inc
lods
sub
jle
cmp
cmp
adc
push
popa
mov
addr16
iret
fdiv
cld
add
cmp
cmp
xor
dec
push
mov
test
out
add
ret
mov
or
adc
movs
pop
push
push
(bad)
(bad)
scas
ret
retf
bswap
mov
mov
sub
rol
setne
pop
hlt
or
repz
push
movs
jl
xor
js
sbb
or
movs
adc
popa
out
push
(bad)
xor
pushf
enter
cwde
xchg
dec
jmp
xchg
xchg
shr
mov
inc
imul
mov
dec
xchg
cmp
inc
mov
repnz
pop
je
scas
ficom
push
sub
jb
sub
aaa
fild
movs
pop
data16
mov
adc
cmc
cmc
dec
mov
sbb
jg
add
hlt
sahf
mov
sub
and
ss
pusha
or
xchg
data16
bound
outs
sub
dec
add
sahf
call
cmps
scas
jp
push
push
mov
pusha
out
pop
pushf
sti
jns
push
pop
into
pop
ror
or
fst
lock
es
cmp
addr16
cli
adc
repz
fstp
push
mov
es
(bad)
add
and
xchg
mov
fisub
stos
and
add
dec
pop
cmc
mov
adc
cmps
icebp
push
rol
adc
aaa
(bad)
xchg
mov
inc
lods
jbe
nop
icebp
aad
pop
jno
fimul
pop
outs
fistp
xor
push
xchg
mov
dec
mov
shl
pop
inc
imul
mov
jmp
xchg
dec
cmp
xor
add
xchg
jne
jne
setne
and
shr
ja
sti
icebp
pop
lds
mov
aas
icebp
pop
repnz
mov
push
push
pop
pop
sub
test
add
aad
out
lods
mov
scas
jl
push
and
mov
cld
push
fcomp
adc
push
outs
inc
repnz
mov
xchg
mov
repnz
jl
adc
xor
push
add
push
inc
push
cli
or
ret
jb
mov
cli
or
mov
pop
push
lds
xor
loop
mov
fs
outs
cmps
dec
inc
inc
loop
int3
jne
mov
mov
imul
fwait
adc
cmp
sbb
pop
hlt
fsubr
mov
mov
fdivrp
push
cli
inc
lds
jle
or
(bad)
mov
movs
mov
ret
dec
mov
nop
retf
or
int
jae
and
add
xor
leave
mov
and
loopne
sbb
jecxz
push
into
pop
pop
xchg
mov
in
add
addr16
adc
mov
xlat
rcl
scas
xchg
xchg
add
inc
adc
call
sar
pop
push
dec
cli
xchg
mov
cmp
daa
adc
fadd
xchg
call
ss
das
cmp
pop
psubusb
jge
push
inc
(bad)
call
lahf
leave
push
das
lds
call
or
inc
sub
rol
paddw
aaa
lods
test
and
sub
jns
xor
lock
sub
movs
cmp
sub
or
sbb
movs
xor
sub
lds
into
arpl
jne
cmp
frstor
inc
fs
(bad)
push
adc
cmp
out
cmp
push
popf
push
lods
das
jle
jmp
jno
xchg
adc
dec
(bad)
push
retf
mov
ins
sar
jle
cld
mov
sub
push
dec
cmp
repz
mov
sub
mov
and
adc
jmp
fldcw
mov
bound
sbb
test
lahf
adc
mov
adc
test
jmp
popf
and
(bad)
jmp
cld
add
push
int
cs
push
xlat
psllw
call
jbe
mov
mov
mov
push
ins
idiv
mov
loope
jmp
mov
jno
aaa
mov
int
push
das
xor
mov
pop
cmps
add
sbb
xchg
icebp
xchg
hlt
fbstp
and
shl
ss
fnstenv
(bad)
ret
in
call
cwde
inc
sub
cmp
nop
jmp
ins
scas
push
in
sahf
shl
movs
pop
sub
jmp
xchg
ds
cs
ja
pop
pop
ja
push
mov
daa
mov
(bad)
xor
xor
cmp
ret
ss
push
call
aaa
mov
mov
mov
cmp
jns
sub
sbb
pop
cmp
inc
xchg
mov
retf
sbb
xor
hlt
jmp
jg
int3
xchg
retf
mul
aas
sbb
xor
stos
mov
(bad)
add
pop
clc
aam
leave
int
dec
rcl
aaa
mov
mov
push
jg
cmp
aam
jb
cmp
adc
sbb
or
mov
cdq
aam
enter
or
and
es
sbb
jg
mov
fcmovne
cmp
pop
jbe
cmp
dec
cmps
ret
xchg
adc
adc
fwait
in
daa
pop
pop
cmp
cwde
mov
ret
dec
leave
in
loopne
pop
popf
cmp
call
(bad)
cmp
pop
fldl2t
push
sbb
or
xlat
and
inc
xor
popa
cli
sub
icebp
int3
into
imul
xchg
mov
xchg
cld
retf
and
push
lods
leave
mov
mov
sbb
dec
enter
popf
pop
je
adc
xlat
inc
pop
sub
push
ins
jno
push
dec
js
cmps
jo
ins
aas
in
add
pushf
xor
jecxz
jns
movs
(bad)
mov
repz
dec
hlt
aad
std
and
jns
sahf
int
pop
push
jl
inc
push
jle
dec
adc
and
cdq
cmp
mov
xor
outs
stos
mov
jl
mov
inc
shr
(bad)
ins
leave
jge
das
fld
dec
icebp
and
xchg
push
je
mov
mov
push
push
shrd
pop
outs
cmp
imul
out
mov
into
aas
(bad)
lds
mov
cmps
(bad)
std
inc
push
mov
(bad)
push
cmp
push
mov
ret
ds
mov
test
push
mov
ror
mov
out
xor
xor
rcr
mov
dec
aas
push
mov
repz
xor
xchg
sub
mov
aam
jmp
add
jne
aaa
(bad)
pop
sub
into
out
fmul
push
or
or
xchg
rcl
mov
xchg
pop
test
test
dec
pop
rcr
cmps
push
out
mov
pop
or
pop
fsub
push
and
lock
jns
dec
ds
repz
or
sub
push
and
repnz
inc
adc
shl
and
jg
imul
pop
and
dec
frstor
fdiv
mov
or
or
xchg
icebp
aas
xchg
pop
in
div
jp
cld
xchg
inc
xchg
ret
enter
xchg
data16
std
cs
fcom
jmp
stc
out
shl
mov
mov
inc
pop
mov
jae
sub
sub
fnstcw
push
mov
sub
retf
or
push
jnp
jb
mov
and
mov
pop
pop
nop
call
mov
ins
xchg
jns
(bad)
pop
mov
cmp
adc
fcom
xor
mov
(bad)
mov
pop
rcr
dec
add
popf
cmp
dec
js
(bad)
xlat
mov
outs
outs
aaa
mov
adc
dec
retf
pop
cmp
sbb
xchg
fcomp
mov
scas
out
mov
add
ins
rcr
push
(bad)
or
arpl
movs
cmp
dec
mov
stos
adc
xlat
loopne
xchg
pop
add
out
sbb
mov
xor
es
shl
sub
sbb
ret
les
(bad)
into
ins
repz
push
ins
jnp
mov
ins
xchg
cmp
fild
add
call
or
cmp
pushf
push
or
push
out
xchg
add
add
inc
jo
jno
imul
nop
jmp
test
stos
repnz
jle
mov
xor
clc
xor
(bad)
add
dec
cmp
into
inc
nop
scas
xchg
lahf
adc
aam
or
(bad)
dec
mov
arpl
not
dec
xchg
outs
sub
movs
xchg
cmp
push
or
inc
sbb
xor
inc
pusha
mov
popf
in
mov
sbb
mov
ret
mov
cli
sub
cmps
shr
mov
mov
andps
test
sub
cmp
loop
sar
cmp
or
enter
sub
sbb
mov
and
sub
push
fnsave
adc
cmps
pop
xor
mov
xchg
outs
(bad)
ins
dec
je
pop
inc
cmp
sbb
aas
pop
jae
adc
retf
fs
imul
push
jnp
add
loope
mov
mov
and
push
add
mov
in
cmps
or
xor
mov
xchg
cmps
icebp
inc
aaa
or
push
and
cmp
xor
out
add
(bad)
cmc
cmps
cmp
jbe
push
jo
inc
fild
mov
dec
sub
inc
cld
cmp
idiv
xchg
inc
mov
jp
cmc
imul
push
fmul
sahf
mov
outs
loop
dec
lods
(bad)
repz
add
cmc
xor
cld
xlat
mov
cmp
and
fsub
push
cmp
int
xor
xor
pop
data16
and
ja
jmp
pushf
sbb
out
mov
pop
inc
aas
bound
mov
repnz
jae
lahf
adc
mov
push
push
out
aad
sar
ret
ret
jo
je
mov
mov
gs
mov
aaa
sub
mov
add
inc
adc
jbe
fimul
aas
addr16
fnstenv
sbb
inc
or
push
cmp
fiadd
rcr
inc
xor
cmp
in
fisub
sbb
add
mov
adc
push
xchg
loopne
xchg
sub
cli
(bad)
leave
and
sbb
xor
sub
xor
fcmovbe
icebp
retf
jmp
aas
add
test
js
in
sub
sub
cmps
xchg
mov
out
xchg
fist
int
mov
or
adc
ja
mov
and
dec
lds
aas
jae
xlat
arpl
movs
popa
loop
lods
or
sbb
add
lds
add
add
leave
sub
or
inc
loop
jp
sbb
push
addr16
popf
xor
dec
push
ret
cli
les
fadd
ficomp
setne
sbb
pop
aam
xor
aas
sub
and
xor
popa
(bad)
mov
or
std
pop
movs
test
mul
out
push
xor
ds
cmp
jecxz
retf
pop
imul
cmps
in
popa
popf
pop
arpl
(bad)
call
pop
test
mov
mov
fist
inc
push
pusha
mov
jbe
out
or
add
jle
jmp
add
retf
popa
sub
inc
sub
push
repnz
xor
fist
cmp
lods
fsubr
xchg
sbb
outs
and
inc
fadd
gs
push
shl
int
mov
dec
pop
ja
mov
pushf
ja
clc
sub
test
retf
and
jl
xor
cs
mov
sar
ret
(bad)
xchg
jg
or
cmps
ja
loop
mov
dec
jp
sti
sti
outs
fucomp
movs
jmp
push
fmul
xor
nop
loopne
push
xor
mov
pop
inc
xchg
adc
jnp
xlat
stc
jmp
imul
fcmovnbe
fstp
lds
popf
lock
ds
lahf
es
shl
in
dec
mov
cmps
cs
ins
fcom
add
and
xchg
into
adc
cmps
and
(bad)
jo
idiv
inc
jp
pop
movs
sbb
push
cmp
sub
xor
bound
ins
sbb
jb
push
jbe
fdivr
pop
lea
dec
push
(bad)
inc
ja
push
leave
sar
(bad)
sar
in
call
cs
call
cmp
fbstp
inc
pop
mov
sbb
loop
and
lock
add
dec
pop
sub
mov
inc
dec
pop
test
ficomp
mov
jmp
push
cmp
test
lods
mov
shr
mov
push
xchg
pop
mov
jbe
adc
xor
pusha
movntq
mov
ror
mov
loope
add
stos
ins
loope
int
cs
dec
mov
in
mov
push
pop
cmpxchg
stos
inc
(bad)
movups
and
clc
es
movs
mov
sbb
rol
adc
out
mov
push
shr
adc
jb
add
data16
cli
mov
mov
mov
repnz
pusha
imul
xchg
fidivr
les
dec
or
mov
fwait
sbb
mov
dec
push
outs
in
xchg
mov
int3
fld
mov
(bad)
call
pusha
icebp
sti
xor
into
mov
pop
(bad)
sbb
ret
jl
ret
cmc
push
and
int
cmps
test
mov
call
xchg
sar
xor
pop
pop
mov
movs
push
popa
fld
enter
or
inc
out
adc
jecxz
fnstsw
aam
add
push
mov
dec
ficomp
mov
jg
jns
fisub
cmc
sbb
xchg
rol
js
add
sub
mov
stos
aam
movs
imul
push
imul
arpl
cmp
inc
add
push
outs
or
cwde
pop
sub
mov
dec
jne
movs
cli
popf
sbb
cs
adc
aas
popa
stc
icebp
clc
retf
fild
mov
call
lahf
movs
mov
jmp
inc
sub
outs
(bad)
loope
stc
popa
data16
ins
rol
add
test
pop
loopne
mov
and
in
into
test
or
out
dec
ds
aaa
ss
std
inc
sar
jl
clc
sbb
(bad)
fnsave
pop
stos
dec
fiadd
(bad)
pop
push
sbb
pop
dec
add
push
(bad)
jno
sub
dec
arpl
ret
cmc
inc
ja
enter
pop
cld
and
sbb
fadd
xorps
dec
imul
inc
push
jns
cdq
mov
or
or
dec
arpl
inc
ret
mov
outs
jae
sub
sbb
shr
mov
mov
icebp
dec
lds
adc
cld
movs
aam
sub
lds
dec
dec
xor
adc
mov
xchg
sub
popa
prefetchwt1
repnz
jg
and
imul
dec
inc
in
lds
cmps
repnz
je
leave
jg
vpackssdw
fnstcw
retf
ins
rcr
push
cdq
cmp
loopne
jecxz
sbb
rol
mov
test
lock
push
fs
xor
ins
xor
push
mov
js
cmp
jg
ret
imul
mov
mov
xor
mov
pop
or
test
jb
and
movs
ins
sub
mov
xchg
xchg
ja
dec
sbb
push
mov
lods
fnsave
add
or
mov
xchg
push
jae
jbe
movs
ins
(bad)
cmp
in
fild
mov
jmp
jb
mov
mov
xor
test
add
or
jns
inc
push
stos
fsub
inc
outs
cmc
cld
mov
xor
pop
loope
cmps
scas
imul
out
test
add
sub
movs
(bad)
shl
mov
in
cmp
clc
xchg
mov
pop
in
fcom
push
add
cwde
and
push
js
and
addr16
push
mov
push
cwde
jae
cmc
mov
ja
mov
aam
cmp
push
cdq
and
pop
ja
and
repnz
sub
popa
sub
mov
call
pop
sbb
xchg
cmp
jno
in
mov
loop
sbb
push
les
fidivr
ins
test
pop
mov
dec
ja
jb
clc
mov
aam
pop
fcmovb
jae
aad
aad
call
adc
xchg
push
push
sub
sub
adc
sub
push
xor
je
mov
bound
mov
pop
xor
mov
jge
loopne
lea
inc
pop
dec
xor
push
stc
stc
loopne
(bad)
nop
rol
mov
jo
sbb
xor
mov
push
outs
lock
ret
neg
arpl
pop
or
mov
lahf
sub
sub
cmps
sbb
xchg
cs
xchg
enter
xchg
imul
(bad)
jmp
cs
loop
push
mov
mov
in
gs
inc
in
pusha
pop
push
hlt
rcr
test
jp
dec
sti
inc
ret
xor
out
arpl
mov
push
sub
pop
mov
add
cmpxchg
lahf
jecxz
jle
mov
sbb
movs
stos
sbb
cld
dec
xchg
pop
mov
call
leave
mov
fdiv
mov
ja
fs
nop
lods
inc
xor
inc
sub
pop
in
ja
daa
add
(bad)
and
jmp
pop
sub
jle
add
cmp
dec
add
jmp
inc
inc
xchg
and
xchg
sub
scas
outs
dec
inc
into
cmp
pop
out
add
hlt
lock
xor
or
sbb
out
lods
and
pop
in
sub
icebp
call
adc
pusha
repz
xor
jb
pop
jo
push
mov
loop
(bad)
sub
and
mov
mov
adc
lods
push
mov
int3
sbb
sbb
retf
cmc
loopne
fimul
fadd
jne
inc
std
xchg
bound
xor
test
imul
adc
xor
or
xchg
push
fcmovnbe
test
es
inc
cmp
xor
inc
test
xor
(bad)
push
cmp
loope
fadd
inc
dec
movs
paddusb
cmp
mov
addr16
sbb
in
sahf
aaa
and
mov
inc
jmp
sub
add
movs
lods
dec
push
fcomp
popf
ja
cmp
dec
mov
sub
xlat
cmp
lods
mov
pusha
jle
cmc
push
ins
inc
pop
push
ret
push
push
and
jge
fistp
repz
(bad)
fild
sub
outs
xchg
jge
jo
in
aas
jecxz
in
jp
xor
lods
inc
std
jne
sbb
jbe
push
popf
pop
cmc
xchg
stc
xor
mov
movs
jmp
mov
mov
ja
std
retf
sub
aaa
outs
push
adc
add
sar
shl
or
ja
lods
sbb
dec
out
and
mov
sub
sbb
fldcw
sub
pop
or
and
mov
sub
das
aad
stos
mov
ds
out
test
push
mov
(bad)
fidivr
push
sar
pop
shl
stos
jge
cdq
xor
mov
cmovs
xchg
inc
pop
push
stos
repz
inc
push
push
into
data16
inc
jbe
sbb
dec
shl
pop
pop
or
pop
and
data16
repz
add
jl
cli
test
fmul
inc
imul
imul
std
cmc
or
in
jp
mov
es
or
test
push
aaa
mov
add
loopne
push
adc
xchg
inc
call
hlt
int
ins
lea
loop
data16
enter
getsec
scas
push
fwait
sub
mov
jl
cld
mov
and
mov
sbb
ds
daa
xlat
cli
or
pop
inc
ret
sbb
jl
outs
and
fisub
sbb
and
les
dec
push
sti
mov
jmp
ror
int
mov
jno
aad
or
cmp
xor
sbb
push
cmp
rcr
inc
out
jns
xchg
pop
dec
mov
out
movs
jg
push
mov
pop
pop
xor
stos
pop
sbb
mov
pop
in
ins
jne
outs
xor
sub
pushf
jg
xchg
mov
sbb
xchg
repnz
pop
cli
ss
dec
mov
jp
mov
jbe
jp
bound
iret
adc
inc
adc
and
mov
enter
xchg
ret
pushf
mov
xchg
adc
push
ss
xchg
loopne
mov
ds
retf
stc
sbb
mov
ret
inc
mov
jo
or
mov
sub
jp
push
lahf
mov
retf
mov
retf
xchg
adc
mov
mov
bound
pop
cld
pop
std
add
dec
sub
jns
jo
jge
and
jo
mov
pushw
ins
add
add
xchg
jmp
mov
loope
aaa
jmp
out
pop
cli
mov
push
push
mov
ins
mov
cs
in
sbb
pop
gs
pop
mov
sahf
outs
adc
imul
mov
fadd
sub
clc
inc
xchg
pop
jl
test
add
pop
aas
cmps
and
adc
mov
in
dec
xchg
iret
lods
jbe
jns
in
mov
jmp
jne
iret
dec
cmp
xchg
jge
sub
cmp
out
repz
add
add
data16
hlt
jmp
add
jbe
mov
xor
pop
hlt
clc
imul
ja
mov
jae
mov
mov
lahf
jno
aas
adc
pushf
fwait
out
(bad)
daa
addr16
pop
addr16
sbb
test
adc
call
push
movs
dec
jmp
push
jns
xor
(bad)
pop
mov
sbb
sub
ds
pusha
hlt
dec
in
inc
loop
pop
sub
daa
sub
mov
test
or
int3
mov
xchg
fucomi
fstp
cdq
or
adc
bound
xlat
add
adc
into
fistp
into
jge
sar
cmp
xchg
imul
add
jae
jo
les
mov
push
(bad)
mov
mov
fcom
sbb
aas
int3
mov
pop
jo
(bad)
pop
adc
rcl
pushf
in
fidiv
repnz
adc
sub
cld
cmp
test
push
xchg
add
xor
push
cmp
out
out
sahf
pop
mov
nop
pop
push
jge
sbb
pop
cmps
dec
cmp
sub
(bad)
mov
cmp
int3
lea
dec
jle
fcomip
push
cmp
jp
loope
mov
out
add
jp
sbb
inc
mov
clc
cmc
pop
inc
cmc
sahf
jb
push
sbb
call
idiv
repnz
fadd
movs
pushf
pop
jo
pop
les
adc
into
jp
arpl
out
mov
mov
jmp
mov
vpackuswb
mov
mov
dec
jp
mov
fistp
jmp
gs
push
shl
lsl
sar
bound
adc
bound
shr
in
repz
ja
fsub
push
stos
mov
jmp
cmps
push
fidivr
arpl
rol
rcr
ret
and
scas
jl
sbb
dec
ins
jbe
stos
sub
and
push
mov
call
int3
push
sbb
add
popf
mov
scas
ror
mov
bts
cmp
jbe
fsqrt
call
popa
adc
fisttp
mov
cdq
sbb
sbb
mov
shl
adc
sahf
xor
out
ss
es
pop
xor
push
jle
imul
xlat
or
test
push
pop
inc
aam
mov
daa
sbb
pusha
nop
inc
test
out
push
mov
loopne
mov
xchg
das
cmp
inc
je
mov
add
jnp
lods
mov
cld
xor
mov
fiadd
push
xchg
sbb
lds
xchg
ror
cmp
ins
leave
retf
xor
popa
cmp
and
pop
call
mov
rcl
in
cmp
repnz
push
and
movs
leave
or
mov
pop
push
mov
pop
jno
and
push
pop
outs
sbb
jp
gs
add
daa
loope
inc
dec
(bad)
mov
xor
not
imul
cmps
adc
mov
cmc
pop
fadd
scas
retf
ret
add
data16
and
hlt
enter
jmp
(bad)
pop
push
movs
cdq
cld
mov
or
es
retf
cmp
lock
imul
or
or
mov
aaa
ror
out
retf
sub
mov
jo
inc
retf
jb
or
std
jl
cld
dec
hlt
je
pop
dec
mov
xor
dec
cld
in
xchg
in
mov
(bad)
scas
aam
in
xchg
bound
imul
scas
call
jecxz
outs
adc
(bad)
mov
in
jl
iret
mov
mov
push
dec
pop
jmp
ins
xchg
xchg
push
into
cmp
pop
imul
rol
and
cmc
out
mov
xchg
pop
dec
lock
xchg
je
fild
jp
scas
adc
aas
arpl
cli
push
das
xchg
sar
push
push
out
int
loope
rcl
jge
mov
inc
into
push
ins
fld
sbb
das
cmp
mov
xchg
mov
test
mov
mov
adc
jnp
retf
es
xlat
cmp
xchg
fcomip
out
dec
xchg
mov
outs
or
cmp
repnz
xchg
dec
cmp
test
dec
arpl
mov
movs
into
sti
dec
sub
sub
pop
or
or
into
data16
ins
mov
sub
loop
popf
or
jno
mov
push
loopne
pop
xlat
sar
ss
mov
mov
jns
lods
inc
xchg
out
dec
cld
push
retf
mov
imul
stc
pop
lds
inc
mov
icebp
pusha
pushf
loope
sub
inc
sar
mov
cli
popf
jo
imul
addr16
push
ja
jmp
sub
ror
mov
inc
dec
push
xor
jno
adc
rcl
cmp
push
fmul
dec
(bad)
out
imul
(bad)
idiv
sar
adc
adc
jno
push
dec
(bad)
jmp
sub
in
fisubr
push
fcomp
mov
(bad)
cmp
sub
mov
inc
push
daa
shl
das
shl
(bad)
push
xchg
cmp
adc
leave
mov
xor
jle
pop
dec
inc
mov
sar
repnz
sar
pop
in
sbb
jp
cdq
in
or
movs
clc
sbb
push
pop
or
sub
imul
sahf
mov
pop
inc
clc
xchg
push
dec
out
push
xchg
add
out
dec
push
mov
aaa
stc
mov
into
retf
mov
popw
jge
js
out
adc
and
pop
xchg
test
mov
gs
and
push
stc
jnp
ror
cmp
daa
rcr
ss
jl
pop
scas
jno
out
adc
xor
(bad)
nop
push
push
in
pop
push
sbb
or
jb
in
ds
(bad)
jmp
mov
aam
test
jl
loopne
jmp
bswap
aam
mov
popf
push
add
fxch
in
shl
out
pop
neg
and
nop
addr16
and
adc
hlt
xor
mov
in
and
jecxz
dec
mov
into
cdq
scas
inc
enter
test
jmp
or
inc
clc
pop
xor
popf
pusha
and
(bad)
(bad)
repz
cmps
std
sub
aam
cli
add
sbb
jmp
nop
xchg
mov
cmp
cwde
out
nop
dec
and
js
dec
popa
pop
push
aam
rcl
cmps
out
jnp
mov
adc
cmp
ins
scas
inc
sbb
xor
xlat
jo
mov
(bad)
imul
and
mov
(bad)
and
cli
pop
and
and
jge
fistp
pop
jb
(bad)
shr
ds
je
adc
mov
pop
mov
xchg
cwde
aam
int
sub
fistp
pop
in
lods
dec
pop
ret
data16
movs
shr
sub
dec
sahf
jge
mov
inc
mov
loop
pusha
mov
pop
scas
stos
dec
outs
and
cli
fbld
push
pop
add
out
(bad)
jg
xor
in
jo
xor
xor
int
retf
adc
pushf
dec
test
cmp
dec
movs
shl
sub
sub
aaa
imul
jmp
mov
gs
push
or
sbb
scas
(bad)
or
jmp
fwait
add
pushf
adc
iret
dec
sub
ss
adc
pop
inc
dec
add
fwait
mov
shr
fistp
pop
ss
push
add
xlat
es
int
je
adc
adc
adc
xchg
dec
int
jae
sar
push
xchg
nop
repz
and
iret
add
jae
mov
mov
push
pop
jae
xor
in
cmp
ins
sub
pop
sub
mov
pop
test
pop
push
movs
add
and
test
xchg
add
mov
js
shr
mov
inc
sbb
aad
inc
cmp
jmp
push
fsub
and
jno
out
pop
mov
push
dec
push
aas
xchg
xchg
sbb
add
push
(bad)
xor
pop
adc
stos
ins
ficom
clc
mov
fimul
xor
inc
xchg
mov
mov
adc
retf
inc
das
outs
sti
push
dec
inc
sbb
pop
test
pop
mov
pop
enter
stc
out
fadd
add
aad
pusha
movs
adc
sbb
pusha
mov
add
fild
add
mov
movs
ins
out
outs
mov
aas
movs
push
outs
sti
hlt
pop
push
mov
push
int
aas
cli
push
xor
fwait
push
push
dec
sahf
mov
sbb
dec
dec
cs
arpl
mov
xchg
mov
inc
jno
mov
std
or
dec
aam
or
push
jp
jo
mov
pop
cdq
movs
aas
cwde
jo
xor
(bad)
pop
sbb
pop
push
mov
fimul
push
int3
xchg
xchg
mov
push
adc
(bad)
pop
mov
xchg
in
xor
mov
xchg
test
adc
test
sub
or
icebp
int
xor
call
pushf
jbe
mov
fadd
loopne
and
jo
ret
(bad)
mov
inc
mov
and
hlt
bound
popa
and
and
into
dec
out
dec
das
xor
lea
ss
dec
imul
scas
icebp
xor
xlat
ds
push
mov
fs
mov
lea
sub
add
mov
push
(bad)
xchg
dec
or
jnp
imul
sbb
rcr
mov
jmp
or
shl
cld
mov
dec
mov
xchg
shl
out
jb
ret
jmp
or
movs
mov
adc
adc
jecxz
cs
jno
cmp
xchg
adc
add
arpl
adc
pushf
sbb
enter
pop
jnp
movs
adc
inc
test
jge
sub
sub
ror
mov
in
xor
imul
lea
add
jbe
imul
les
pop
push
dec
mov
inc
int3
dec
xor
imul
(bad)
cld
les
mov
iret
imul
sar
out
lahf
(bad)
jmp
pop
pop
loopne
xor
xor
push
mov
sbb
jne
mov
fimul
es
sub
jmp
sbb
inc
retf
mov
cdq
aam
sti
adc
test
outs
mov
pop
mov
push
fist
cmp
cmp
js
pushf
jle
pop
dec
fadd
jne
pop
sbb
in
add
jnp
add
sub
mov
pop
aas
cmps
sub
xor
mov
inc
fnstenv
aam
xchg
xor
mov
scas
adc
adc
out
push
push
push
(bad)
shl
and
mov
jecxz
mov
push
mov
xchg
stc
popf
sub
mov
or
add
mov
push
push
sahf
jo
ins
adc
daa
(bad)
(bad)
out
pop
pop
scas
push
sete
push
fist
les
retf
or
cdq
sub
inc
jne
cmps
mov
mov
or
ja
dec
jp
popf
adc
(bad)
pop
dec
xor
push
jmp
and
mov
push
rcr
and
mov
jbe
clc
enter
sub
push
call
jbe
(bad)
jmp
add
sbb
cmp
dec
add
shl
xchg
jnp
adc
out
loop
push
outs
clc
cmp
sub
jp
mov
ror
das
mov
add
es
and
mov
inc
and
mov
call
leave
out
loope
inc
call
das
aas
cmp
add
and
ds
mov
jle
push
xlat
xor
xor
push
xor
clc
lahf
dec
test
adc
jo
xor
stos
or
ja
lods
mov
add
mov
mov
pop
ret
push
mov
faddp
lahf
jge
mov
dec
mov
cmp
xchg
pop
mov
ret
jmp
and
mov
ja
aam
stos
push
movs
cmps
mov
loopne
jnp
mov
sar
or
mov
bnd
cmovg
jnp
pop
cmp
idiv
jo
dec
out
push
xchg
or
sub
enter
(bad)
pop
mov
cmp
aam
out
retf
jmp
jbe
cmps
pop
push
dec
shr
mov
pop
icebp
xor
inc
cdq
inc
xchg
xlat
mov
in
inc
and
popf
cmp
xchg
call
jae
pop
and
adc
pop
mov
cmp
pop
cmp
xchg
movs
jp
aam
adc
cmp
jge
test
push
xchg
push
mov
scas
sbb
(bad)
mov
(bad)
mov
mov
xchg
scas
jp
loop
jecxz
and
or
ja
ss
or
jmp
outs
fdivr
ja
call
xor
pop
and
jle
and
test
into
fadd
ins
inc
in
adc
cli
jmp
bound
test
and
adc
popf
add
hlt
xchg
add
pushf
fcomp
xsave
add
add
cs
inc
push
add
cmp
in
xchg
loop
mov
xchg
sbb
cmp
or
clc
xchg
popf
inc
push
fwait
mov
pop
sti
ret
inc
jb
adc
fs
mov
mov
(bad)
(bad)
in
mov
add
jp
lock
jmp
cmc
das
inc
aas
pop
xor
in
mov
adc
push
dec
clc
fist
imul
and
inc
add
jnp
aad
mov
mov
jg
call
scas
dec
mov
mov
push
push
sbb
test
mov
hlt
or
xchg
sahf
push
inc
movs
xor
or
cmps
test
(bad)
mov
xchg
mov
data16
mov
(bad)
push
sbb
repz
xor
fdivr
je
inc
mov
inc
mov
into
(bad)
movs
fcom
call
jg
pop
retf
mov
dec
sub
lahf
mov
out
push
fnstsw
jp
push
ds
xor
pushf
retf
jno
mov
imul
push
ins
daa
cmp
pop
lock
mov
or
jo
mov
js
xor
(bad)
or
push
dec
add
sub
and
mov
pop
arpl
out
mov
daa
ins
jbe
imul
mov
sahf
inc
mov
mov
fst
retf
das
cdq
bound
inc
xchg
jo
mov
mov
sahf
push
test
pushf
push
pusha
mov
test
pop
and
out
cmp
stos
rcl
sub
cmp
jno
xchg
es
rcr
mov
mov
fcom
out
sbb
mov
bound
jns
mov
add
and
push
test
mov
scas
mov
aad
inc
das
adc
mov
mov
jno
mov
sbb
adc
mov
add
sahf
jns
mov
cmp
aam
fwait
sub
mov
mov
(bad)
(bad)
addr16
mov
cmps
mov
lods
in
mov
dec
fs
mov
sub
sbb
push
xor
pop
push
push
fadd
test
mov
cwde
pushf
dec
pop
xor
mov
xchg
xchg
mov
xchg
ins
mov
out
jl
xor
daa
cdq
pop
mov
imul
enter
or
adc
cld
fs
imul
ror
data16
shr
xchg
cmp
gs
in
(bad)
fisttp
les
jb
bound
xchg
sub
sub
ret
pushf
xor
sub
xchg
jbe
mov
fs
leave
aad
jmp
test
jns
mov
xchg
movs
js
cld
pop
adc
js
xlat
fwait
mov
push
inc
mov
pop
cld
sub
dec
lahf
js
sti
popf
inc
lds
jl
mov
pop
jnp
cld
fild
stos
loopne
xor
aas
sti
push
pusha
xchg
mov
jecxz
packssdw
loope
xchg
nop
jo
push
out
mov
ss
mov
push
sub
sbb
push
ins
popf
mov
fcom
aad
jno
pop
mov
mov
loopne
sub
mov
xchg
hlt
cwde
pop
cmps
mov
inc
call
cmp
popf
shl
fimul
cmp
scas
test
and
scas
outs
movs
mov
add
(bad)
sbb
jne
or
rol
pusha
xchg
leave
push
mov
jne
add
push
sbb
pop
mov
xchg
das
loop
dec
mov
lock
fwait
jecxz
test
mov
jp
movs
lock
cmp
int
imul
in
ds
and
mov
or
ins
stc
gs
and
push
jbe
sub
inc
ja
mov
mov
je
(bad)
mov
fld
aad
stos
imul
jecxz
or
jmp
in
leave
and
mov
retf
lock
lock
mov
or
mov
inc
popf
jmp
shl
inc
mov
sahf
dec
adc
rcr
mov
cmp
and
push
mov
push
arpl
lea
out
inc
outs
cs
pop
pop
dec
cmc
push
into
movs
retf
int3
(bad)
mov
push
add
inc
addr16
stos
pop
xchg
ret
sub
fmul
rcr
inc
push
in
xor
jmp
(bad)
aaa
pop
jnp
push
sbb
mov
outs
inc
imul
mov
movs
mov
xor
mov
(bad)
fcmove
pushf
adc
fdivp
mov
and
mov
mov
mov
cmp
lea
jbe
adc
in
pop
sub
pushf
push
out
mov
mov
mov
aam
push
div
dec
jecxz
and
push
shl
add
xlat
cmp
out
pusha
sbb
iret
pop
int3
inc
mov
mov
adc
xor
push
inc
jnp
jns
in
or
cmp
xchg
jae
adc
cwde
or
(bad)
scas
xor
mov
pop
arpl
inc
add
lea
sbb
push
pop
sbb
lods
cwde
shr
fs
push
xchg
js
xchg
sar
mov
imul
inc
lods
vmovq
mov
dec
iret
push
loop
je
fsub
jb
lods
mov
retf
retf
ja
lods
test
int
xor
mov
push
outs
or
ins
push
dec
fiadd
add
adc
jno
call
in
push
sbb
scas
or
ret
xchg
cmp
jecxz
push
mov
xchg
jne
neg
lods
and
sbb
mov
cwde
(bad)
mov
int
inc
lods
cmp
jmp
out
(bad)
or
inc
jmp
inc
mov
(bad)
imul
dec
(bad)
pop
pop
or
leave
xchg
or
mov
inc
imul
inc
inc
loopne
ret
test
dec
gs
jae
shr
sbb
mov
add
lahf
jp
fucomi
or
shl
pop
loop
enter
les
jno
jecxz
xor
in
out
movs
(bad)
or
xchg
dec
cmp
add
in
dec
add
mov
cld
jae
pop
loopne
jbe
ror
xor
outs
xchg
mov
cmp
sub
pop
ja
lods
jns
repz
xor
pop
adc
cmp
xor
xor
out
and
xor
cwde
mov
mov
neg
dec
xor
test
mov
movs
add
retf
mov
and
or
or
fld
xor
outs
xchg
adc
lds
cmp
mov
aad
jmp
adc
adc
dec
adc
add
mov
cmps
pop
mov
pushf
fwait
out
loop
push
ja
stos
jae
pop
mov
inc
mov
fcomp
jbe
or
movs
jae
xchg
jmp
jle
push
ja
and
pop
push
mov
or
inc
push
loopne
lods
push
shl
hlt
cwde
arpl
mov
out
push
mov
shr
mov
push
mov
out
retf
aad
mov
mov
xor
(bad)
inc
mov
inc
mov
push
stos
je
xchg
movs
and
jne
pusha
or
adc
mov
scas
cwde
dec
out
adc
dec
sbb
shl
lock
sub
(bad)
(bad)
aam
bndstx
jmp
pop
sti
(bad)
adc
xchg
imul
jnp
fisubr
and
lock
cmp
addr16
(bad)
jnp
jp
imul
imul
arpl
(bad)
mov
inc
push
mov
push
(bad)
bound
pushf
cmc
jge
retf
mov
aaa
leave
xchg
adc
and
mov
adc
inc
jle
or
je
or
aaa
dec
mov
fsub
mov
mov
jge
popf
cwde
adc
pop
in
dec
ret
ret
loope
adc
adc
mov
xchg
(bad)
gs
imul
ja
outs
pop
gs
and
jp
cmps
repz
mov
push
movs
jae
jno
call
and
ret
movs
cmp
fdiv
call
shr
pop
mov
aam
sbb
lock
popf
dec
call
dec
fs
jns
or
fcmovnb
arpl
into
test
shr
mov
adc
push
fisubr
stos
ss
sub
dec
xchg
leave
sbb
icebp
sti
and
pushf
loope
rol
in
test
rol
xor
or
lds
std
ret
cmps
loope
test
(bad)
cmp
cmp
and
loop
sbb
inc
xchg
or
pop
add
test
xchg
mov
out
sub
or
xor
movs
shl
mov
inc
pop
and
cdq
aas
jns
fcmove
push
or
nop
inc
mov
xchg
movaps
mov
stos
xchg
shl
loopne
outs
ficomp
(bad)
xor
pop
ss
movhlps
mov
xor
pushf
and
sub
adc
jno
cmp
test
and
mov
push
fist
push
mov
outs
fs
jle
pushf
je
push
jp
xor
push
xor
test
mov
inc
xchg
push
clc
push
jns
push
loop
inc
and
add
das
cld
lods
cmp
xor
inc
sub
push
or
adc
arpl
into
sbb
leave
in
shl
push
xchg
mov
xor
or
cmp
stos
inc
(bad)
push
ja
(bad)
mov
div
sbb
sbb
or
pop
push
mov
inc
dec
cmp
fldcw
(bad)
in
frstor
mov
or
mov
cmps
jp
fisub
xlat
mov
jmp
data16
cmp
sub
lea
jne
pop
out
inc
jae
call
aaa
aas
pop
test
ret
mov
push
mov
loopne
test
pop
sbb
data16
cli
dec
sbb
cmps
dec
in
into
sbb
push
pushf
cmp
sub
test
pop
enter
cmps
iret
xchg
push
push
cmp
lods
fldcw
cdq
cli
pop
sbb
sub
sub
sub
fisub
fiadd
in
cmp
inc
daa
inc
iret
dec
jno
into
jnp
sahf
pop
and
iret
add
fmul
js
leave
(bad)
addr16
sbb
into
shr
mov
push
push
xor
shr
sub
bound
xchg
lods
fiadd
pop
sub
jnp
mov
push
add
jge
cmp
cmc
(bad)
jae
aas
mov
outs
sbb
out
ret
mov
scas
xchg
popf
and
jno
lds
scas
inc
mov
and
(bad)
mov
leave
stos
mov
mov
enter
adc
dec
mov
test
and
popf
mov
mov
inc
dec
add
sbb
push
in
lss
dec
sahf
stos
leave
inc
(bad)
cmp
movs
sahf
scas
sub
xor
lods
or
xlat
xor
xchg
xchg
ror
xchg
mov
sub
mov
jmp
into
and
cmp
test
cmp
mov
inc
dec
mov
jb
and
and
jno
mov
outs
sbb
stos
dec
add
fnsave
hlt
push
mov
arpl
shr
ins
int3
mov
ins
xor
sahf
pop
and
add
cmp
cdq
fucomp
in
mov
loopne
out
xlat
stos
sbb
jne
in
push
xor
stc
je
push
xor
movs
das
or
stc
es
cmp
pop
ss
mov
mov
inc
and
ret
jae
and
and
jmp
cld
push
cmp
push
adc
rol
(bad)
sub
stos
sbb
fimul
mov
stos
(bad)
cmc
cli
movs
sub
xor
in
rcl
clc
cmps
push
pusha
sti
aad
cli
jmp
dec
dec
ins
mov
push
out
out
xchg
popa
les
js
movs
mov
adc
push
add
stc
xlat
xlat
adc
push
jecxz
jne
dec
jmp
sub
mov
push
retf
call
arpl
inc
sbb
push
mov
pop
cmp
shl
arpl
xlat
cmp
sub
mov
sbb
cmps
ins
adc
or
xchg
mov
js
push
xlat
in
bnd
adc
xor
push
add
sub
adc
xchg
and
fcom
retf
jp
jo
(bad)
sbb
sub
mov
ins
ds
stos
cwde
inc
or
push
in
xor
lea
and
push
push
pop
mov
mov
rcl
pop
mov
(bad)
shr
outs
cwde
mov
mov
push
pop
imul
dec
mov
cmp
pop
and
xor
inc
push
pusha
enter
pop
cli
adc
mov
fidiv
cmp
fwait
inc
dec
int
adc
bound
fsubr
jl
fidivr
retf
xchg
dec
pop
iret
std
xchg
mov
into
inc
aas
shr
scas
add
mov
sbb
icebp
mov
sub
mov
push
repz
std
(bad)
movs
call
jae
int3
dec
out
stos
mov
or
and
xor
popf
std
call
or
and
in
dec
loope
in
add
into
mov
mov
arpl
je
cmc
imul
int3
push
sbb
stos
sbb
jecxz
dec
mov
push
fsubr
ds
add
mov
in
fist
adc
dec
inc
fadd
push
mov
bound
mov
push
cli
rcr
and
jmp
mov
xchg
pop
and
add
push
sbb
or
adc
jno
adc
stos
retf
retf
dec
mov
cmp
ins
jnp
cmp
add
or
lahf
ins
lock
(bad)
repz
xor
(bad)
xor
mov
cmc
mov
xor
sbb
es
icebp
cmc
jg
inc
sbb
retf
xor
sbb
mov
out
jnp
cmps
dec
cmp
lds
mov
mov
or
jno
push
jae
pop
xchg
sbb
loopne
pop
dec
mov
xor
lods
loope
imul
push
cmp
outs
pushf
push
fwait
adc
hlt
mov
push
pop
pop
jmp
cs
xchg
or
cs
add
or
lahf
push
pop
fadd
xchg
xchg
push
lock
call
dec
xchg
cmp
push
stos
xchg
pop
cwde
fild
lock
push
and
pop
pop
mov
icebp
sbb
nop
nop
push
lods
in
ins
mul
pop
cmps
push
les
sub
rcr
data16
jno
sti
push
inc
pushw
xchg
pop
or
xor
pusha
das
add
push
or
gs
dec
in
sbb
push
jg
push
in
mov
sub
jge
inc
dec
ja
std
idiv
dec
and
sbb
mov
mov
js
cs
test
stos
xor
dec
outs
dec
jle
hlt
mov
adc
arpl
retf
imul
sub
movs
jmp
fs
loopne
test
in
(bad)
outs
push
rcr
pop
lea
dec
jg
rol
cmp
and
(bad)
loopne
push
push
shl
xchg
jne
dec
push
or
shl
jge
pushf
cmps
dec
sbb
xchg
jne
out
push
xchg
mov
dec
pop
mov
in
xchg
push
mov
les
aas
lods
test
sbb
push
ror
xchg
mov
dec
idiv
push
adc
hlt
xchg
loop
jno
fsub
pop
mov
aaa
inc
daa
inc
xlat
call
aad
test
push
jo
sub
pop
mov
loop
sub
jno
ret
imul
jae
xchg
and
sub
cdq
adc
sbb
cmp
outs
inc
sbb
fidivr
loopne
xchg
pop
lods
popa
push
or
pushf
daa
jge
es
and
fmul
test
push
inc
movs
outs
add
iret
push
inc
leave
fimul
mov
inc
idiv
fst
iret
pop
daa
pusha
jmp
xchg
mov
jge
in
mov
xor
in
inc
mov
je
in
dec
in
push
into
call
imul
jbe
cmp
mov
sub
mov
(bad)
hlt
je
fstp
mov
js
xchg
fcmovne
adc
and
les
(bad)
jmp
ins
ss
leave
scas
jmp
pop
cwde
dec
int
inc
outs
xchg
lds
ja
dec
lods
lods
retf
push
mov
dec
shl
adc
mov
sub
sub
cld
scas
mov
adc
lods
sar
sub
jae
popf
in
mov
xchg
popa
pop
test
adc
xchg
and
ret
jb
cld
retf
pop
jg
nop
cmp
push
mov
or
pop
sub
ins
mov
scas
mov
imul
cmp
(bad)
pop
adc
pop
lods
mov
das
lea
aad
pop
jl
adc
inc
gs
inc
pop
cmp
call
mov
lahf
dec
jle
cmc
test
push
enter
lea
lods
and
popa
xor
jae
les
vmread
adc
inc
push
outs
pop
in
scas
mov
ror
out
out
jnp
scas
cmps
icebp
movs
test
or
(bad)
(bad)
(bad)
jmp
lock
das
out
ret
(bad)
sub
sahf
push
enter
xchg
push
pusha
xlat
call
inc
daa
cs
fdiv
popf
std
adc
pop
icebp
les
and
push
add
adc
xlat
cdq
sbb
mov
xchg
ret
cli
rol
mov
dec
movs
aad
fdiv
jge
cmp
push
and
(bad)
dec
push
(bad)
push
fcom
dec
jmp
jo
jle
mov
ja
push
ficom
loopne
bound
loope
test
mov
aam
pushf
or
adc
sbb
pusha
test
scas
sub
mov
leave
inc
dec
mov
fmul
xor
pushf
ficom
popa
movs
sub
mov
sbb
int3
sbb
sbb
sbb
scas
hlt
fst
call
cmp
pop
dec
ins
cmp
mov
mov
pushf
push
cmp
add
push
adc
mov
xor
inc
(bad)
pop
gs
loop
jmp
cmps
das
outs
dec
adc
fs
push
scas
inc
or
and
ds
pop
and
sbb
pop
addr16
hlt
mov
(bad)
ins
(bad)
adc
cmp
inc
xor
fwait
inc
loop
imul
mov
cli
inc
mov
rcl
call
dec
stos
jmp
jno
lock
test
fild
mov
outs
or
ds
or
xchg
inc
lock
dec
mov
lods
xchg
add
sbb
gs
add
inc
pop
xchg
les
out
push
push
jge
lock
inc
out
xchg
xor
fist
ss
stc
popa
push
mov
mov
aas
mov
cld
or
(bad)
fmulp
ror
push
sbb
or
pop
push
add
xchg
clc
xor
pop
pop
jae
ret
dec
pop
jo
sbb
ins
jecxz
push
push
cmp
xor
nop
sahf
loope
lea
mov
and
xor
sbb
inc
(bad)
ins
lds
add
movs
push
pop
imul
xor
hlt
inc
popa
lea
push
nop
xchg
pop
cdq
adc
push
and
(bad)
dec
inc
pushf
outs
cmp
jg
popa
div
sbb
jl
cmp
or
nop
sub
mov
adc
jae
dec
pop
ret
cs
loop
mov
jle
mov
dec
adc
test
mov
aaa
sbb
or
pop
les
es
movs
dec
inc
popa
std
int
add
cli
sub
pop
enter
fbstp
mov
dec
jns
jo
call
mov
push
xor
mov
mov
dec
aam
mov
(bad)
cmp
add
sub
mov
and
mov
add
mov
mov
or
rcl
repnz
outs
xchg
jl
je
mov
jno
clc
xor
bound
add
pop
cs
push
ds
(bad)
jge
push
pusha
mov
daa
std
repz
pop
in
out
in
movs
or
cld
jb
xchg
adc
fcom
mov
ret
adc
xchg
arpl
inc
mov
outs
ja
fld
xchg
sbb
push
pop
repnz
aad
jmp
or
fdivr
in
xor
jg
adc
add
in
adc
subps
xchg
pop
imul
and
mov
pop
mov
push
adc
sub
stos
or
mov
sbb
mov
stos
stos
repz
pop
je
adc
iret
cmp
in
mov
and
fdivr
in
(bad)
es
add
stc
scas
dec
mov
mov
ss
int
stos
adc
jecxz
enter
jne
or
mov
xlat
xchg
das
jno
push
push
xchg
mov
mov
ror
push
push
stc
pop
and
dec
mov
jge
sbb
scas
xor
outs
xor
push
sbb
mov
jle
mov
xchg
cs
(bad)
outs
and
sti
xor
dec
rol
mov
sub
or
mov
daa
or
cwde
clc
adc
ja
xor
data16
hlt
lods
xchg
inc
cmp
add
pop
xchg
test
or
outs
stos
jp
xchg
sbb
and
dec
or
sbb
dec
mov
mov
jg
and
inc
aas
dec
je
adc
rcl
sub
(bad)
and
dec
in
inc
data16
jmp
or
sbb
jmp
fldenv
in
pop
sbb
and
inc
dec
retf
ja
clc
(bad)
adc
jp
xor
inc
mov
ins
arpl
(bad)
shl
ins
pop
pop
in
gs
and
(bad)
add
lods
loope
test
in
fadd
push
ret
mov
out
mov
inc
xor
xchg
sbb
adc
jp
fcomp
push
jmp
lds
aam
xchg
or
jnp
loopne
dec
pop
mov
std
adc
daa
pop
out
push
aaa
arpl
pop
xchg
stos
inc
or
cwde
lds
outs
jae
dec
jecxz
jno
mov
xchg
test
and
lds
lea
sbb
jns
adc
mov
mov
stos
xchg
or
xchg
lods
push
dec
pop
adc
push
mov
jl
mov
repz
aaa
repnz
(bad)
cmp
pop
jmp
jp
xor
cdq
xchg
mov
hlt
push
push
ret
jae
(bad)
in
cmp
in
inc
fnstcw
sub
test
xor
sbb
inc
pop
lods
jns
push
fcom
test
hlt
in
nop
or
jl
or
test
dec
or
ror
xor
xchg
xor
test
xor
sub
add
in
add
cmp
outs
and
push
cmps
sahf
jnp
out
retf
repnz
lea
xchg
in
or
add
dec
mov
pusha
and
xor
push
cmps
movs
and
sbb
repnz
xor
xchg
or
pop
popa
mov
aas
xchg
outs
popf
fnstcw
arpl
loop
pop
pusha
xchg
fs
inc
int3
out
pop
sahf
int3
add
das
push
adc
mov
ds
sbb
out
(bad)
fistp
mov
inc
scas
pop
(bad)
clc
and
cmp
jo
fwait
mov
xchg
xchg
cmp
mov
mov
pop
bound
cwde
pxor
jne
jo
sbb
shl
cmp
jno
xor
jle
das
dec
inc
push
xor
rcl
into
test
sub
movs
stos
mov
iret
xchg
sub
fst
ja
popf
fisub
push
xchg
sub
mov
cld
ds
nop
into
std
mov
cmp
shl
pop
es
inc
sub
ret
leave
xchg
or
mov
sbb
xor
xor
loopne
pop
xchg
mov
popa
arpl
(bad)
sbb
inc
hlt
test
jg
scas
(bad)
pop
imul
aaa
sub
ds
and
mov
fdiv
push
push
or
mov
popa
mov
(bad)
pushf
in
lds
jmp
sbb
lods
cmps
or
jg
mov
add
je
fs
adc
ret
sub
push
inc
leave
sar
popf
rol
push
push
fsub
sub
(bad)
ins
imul
and
jnp
out
mov
cmp
(bad)
dec
lea
out
and
lods
daa
xor
imul
je
and
sub
lods
mov
push
xchg
pop
and
ss
movs
ds
inc
jae
daa
pushf
es
jle
rcl
sub
dec
fcomp
fisubr
sbb
mov
and
inc
push
rcr
jmp
mov
mul
es
test
push
std
sbb
mov
or
loopne
mov
retf
popf
fnstcw
shr
xor
jp
pop
ret
push
or
(bad)
in
retf
lahf
push
arpl
(bad)
mov
and
inc
(bad)
dec
iret
test
pop
daa
add
dec
dec
mov
jbe
jno
mov
mov
and
lock
stos
sub
and
xor
mov
cdq
ret
scas
int
cmp
fiadd
mov
dec
(bad)
lahf
mov
sub
and
out
dec
lahf
test
mov
pop
xchg
and
cmc
jb
cmp
test
add
int3
mov
stc
enter
adc
iret
mov
iret
popa
mov
inc
jbe
add
dec
and
loopne
popf
sti
in
in
(bad)
add
bound
in
dec
adc
in
rol
push
ret
dec
push
popa
add
xchg
mov
push
xchg
pop
shr
add
(bad)
mov
push
jmp
push
addr16
in
test
(bad)
test
cmp
(bad)
sahf
ins
dec
cmp
xchg
add
mov
xor
adc
fsub
je
ss
dec
fdivr
cmp
cdq
adc
stc
sahf
adc
xchg
ret
cmp
ret
popa
test
js
xor
pusha
dec
bound
pop
movs
adc
gs
movs
std
mov
cmp
(bad)
adc
inc
mov
pushf
mov
jnp
inc
mov
enter
push
jecxz
mov
jne
dec
out
ret
ret
popa
repnz
jl
pop
mov
bound
mov
pop
imul
mov
mov
clc
popa
mov
xchg
shl
mov
mov
arpl
and
add
fist
(bad)
fnsave
pop
xchg
div
loope
mov
mov
xor
cmp
sub
mov
mov
pop
pop
push
adc
sbb
cmp
mov
mov
fidiv
cld
and
int3
dec
sbb
xchg
mov
dec
mov
jle
or
addr16
icebp
stos
or
retf
ret
test
arpl
or
test
cs
or
jo
xor
jmp
ret
ins
movs
repz
out
bound
sti
pop
push
in
cmp
xchg
fiadd
clc
(bad)
(bad)
hlt
pop
dec
paddusb
call
sahf
lods
int
and
push
cwde
(bad)
jl
xor
cmp
and
(bad)
fild
xor
fxch
js
add
and
and
pop
test
add
ret
xor
faddp
dec
mov
xchg
inc
or
ins
in
push
or
aas
outs
je
retf
xchg
pop
jg
sub
test
(bad)
mov
test
aas
jbe
out
dec
test
inc
lock
sub
jno
jmp
jge
xchg
xor
add
movs
cmp
mov
add
push
clc
mov
loopne
popf
jmp
xchg
pop
lock
test
xchg
nop
push
mov
push
push
cmp
mov
mov
xchg
dec
cmc
mov
jb
in
and
and
sar
xor
ins
push
clc
xchg
scas
or
ins
out
(bad)
shl
int3
push
xor
jg
pop
mov
enter
or
fld
adc
inc
dec
cmp
ds
imul
scas
jb
push
aaa
in
outs
jnp
sub
outs
neg
ret
fwait
das
in
add
inc
into
dec
(bad)
or
lods
cmp
jbe
xor
push
fcomip
aad
mov
mov
retf
fs
xor
shr
fsub
es
or
dec
lock
retf
mov
push
ret
mov
dec
leave
xchg
jnp
loopne
mov
aad
fwait
popf
adc
ja
adc
mov
cmp
das
mov
lods
or
lods
or
sub
pop
pop
lea
jae
adc
sbb
dec
sub
dec
(bad)
fld
in
lods
mov
movs
jnp
sbb
lea
jae
idiv
inc
sbb
xchg
add
ret
jb
imul
add
mov
fcmovnb
mov
jns
inc
push
lds
imul
fild
push
ficom
ret
ins
fisubr
std
and
xchg
xchg
in
aas
sub
sbb
push
mov
adc
mov
sbb
cmc
dec
ficomp
xor
dec
and
inc
fidivr
cdq
jb
in
test
push
sub
pop
dec
bnd
and
dec
mov
xchg
fldpi
mov
sub
mov
xor
push
pushf
mov
add
lock
mov
and
cmc
sub
push
jmp
add
int3
lahf
mov
(bad)
push
iret
dec
add
mov
cmp
aas
imul
xlat
mov
addr16
and
push
mov
(bad)
das
mov
jecxz
sbb
cli
add
cwde
push
inc
and
stos
or
fisttp
nop
adc
fs
repz
cs
mov
inc
xchg
jg
fadd
cmp
and
fs
pop
in
adc
jns
mov
popa
sub
nop
outs
xchg
push
pop
mov
xor
adc
xchg
jmp
cs
jno
daa
es
sahf
shl
cdq
dec
jbe
idiv
sub
rcl
mov
enter
or
pop
xchg
fcomi
fwait
sbb
pop
push
dec
lds
xchg
adc
call
cmp
les
test
call
cmp
jno
push
push
(bad)
adc
mov
push
fisub
cmc
dec
cmps
xor
sahf
mov
dec
cmp
cmp
and
ds
jp
icebp
pop
adc
nop
push
retf
mov
jp
or
repz
push
daa
movs
or
scas
and
jg
sar
fmul
mov
mov
ss
xor
pop
pop
out
addr16
or
inc
(bad)
push
cld
mov
push
jno
outs
xchg
mov
(bad)
enter
pop
cmps
or
sbb
out
and
lahf
push
test
inc
push
jns
movaps
sbb
or
(bad)
and
into
cli
jne
cmp
xor
dec
add
test
xchg
ror
pop
nop
sub
inc
jge
frstor
xchg
jg
xchg
push
add
xchg
inc
pop
and
sbb
sub
sbb
and
movs
xchg
imul
or
jmp
mov
dec
cmps
mov
fwait
cmc
imul
adc
sbb
popf
sub
in
test
sbb
gs
pop
sub
push
push
sahf
cwde
pop
hlt
sub
stc
shl
mov
jl
lock
leave
fwait
test
loope
add
aas
pop
sbb
ror
or
adc
jge
mov
or
sub
xchg
lds
loope
into
std
push
fidivr
stos
mov
push
dec
fwait
push
jns
cmc
scas
or
sar
jae
inc
int
mov
adc
hlt
pushf
test
repnz
dec
sbb
fadd
pop
xchg
sbb
sbb
adc
and
mov
push
sub
push
adc
jg
jp
jae
repnz
dec
les
lock
or
ja
cmp
fstp
dec
adc
or
cs
pop
mov
sti
inc
popf
push
jl
add
das
mov
ins
mov
arpl
mov
movs
bound
imul
dec
jl
scas
loop
call
or
pop
fisttp
call
lods
or
jne
shr
adc
aam
sub
clc
arpl
pop
sub
out
int3
icebp
pop
dec
mov
rep
out
push
call
or
mov
iret
mov
inc
mov
cli
sub
mov
call
(bad)
aam
jmp
cmp
adc
push
xchg
push
in
jl
xlat
xor
xchg
mov
sub
(bad)
icebp
or
xchg
arpl
pop
shr
adc
ins
sub
add
pop
mov
dec
push
cmp
stos
out
xor
lea
or
sbb
stos
pop
clc
sbb
cmc
fucomi
je
inc
ja
cmp
jecxz
jnp
gs
(bad)
mov
xchg
push
fimul
dec
fstp
mov
add
xchg
movlps
sub
dec
popa
adc
cdq
out
js
imul
pop
test
adc
mov
pushf
(bad)
and
jl
test
jae
leave
sbb
test
pop
sub
pop
shr
fldenv
into
and
cmp
adc
adc
add
xor
hlt
fidivr
sub
sar
in
out
sub
xor
les
add
xchg
xor
fsub
retf
cmp
mov
push
dec
mov
sahf
cld
jno
dec
scas
out
call
mov
xchg
dec
cli
fcom
dec
sbb
push
out
and
add
ss
mov
scas
dec
fs
ror
ret
sub
mov
lods
ja
cmp
(bad)
pop
or
or
daa
js
rcpps
dec
dec
ja
cdq
mul
pop
test
je
arpl
pop
jo
xor
dec
push
jo
enter
and
mov
mov
jecxz
loope
je
jbe
ret
lds
xor
arpl
je
adc
fnstenv
xchg
out
repz
pop
pop
int3
clc
cmps
int3
lea
vpaddusw
mov
ins
adc
outs
or
sub
cmp
lods
mov
cmp
(bad)
mov
cmp
movs
mov
retf
int
sar
in
call
ins
daa
iret
test
retf
xor
dec
mov
mov
add
adc
mov
shl
imul
adc
ret
fmulp
nop
mov
clc
sar
jmp
and
jg
push
sbb
ret
xchg
mov
cwde
mov
inc
lods
sar
mov
jp
adc
jnp
ins
adc
into
movs
sahf
mov
xchg
mov
jge
mov
push
lods
xor
fnsave
mov
jb
mov
inc
jbe
cdq
inc
fs
add
cmp
enter
stc
arpl
aad
mov
das
push
dec
mov
in
mov
sbb
mov
call
push
std
pop
aaa
rcr
and
fs
or
mov
movs
push
adc
xchg
rcl
mov
data16
cmp
push
cmp
gs
sbb
test
ja
mov
dec
addr16
or
sbb
inc
xchg
adc
and
aad
sbb
out
cmc
aam
clc
add
add
or
and
(bad)
push
bsr
loopne
ror
and
or
adc
nop
push
pop
xchg
test
or
test
mov
xchg
inc
xchg
mov
xchg
xor
inc
fiadd
jbe
stc
daa
push
mov
mov
mov
imul
adc
sbb
push
es
jnp
repz
mov
sti
imul
adc
xchg
xchg
bound
jg
movs
imul
pop
mov
xchg
add
jmp
pop
cmps
movs
popf
outs
rol
jp
jno
cmp
push
and
aaa
ja
nop
mov
outs
and
mov
inc
jecxz
pop
pop
cmp
push
(bad)
pop
cdq
imul
les
or
mov
shr
push
ss
stos
fdivrp
and
add
push
xchg
mov
xor
sbb
sar
xlat
adc
sbb
xchg
sub
inc
jg
loop
test
loopne
or
xor
aaa
pop
call
lock
js
mov
or
ss
retf
lds
rcl
lods
into
sub
push
jnp
fwait
jo
(bad)
rcl
mov
mov
repnz
sbb
dec
das
add
fistp
mov
mov
mov
ja
mov
jo
push
out
adc
mov
sub
test
cmp
mov
adc
cmp
xor
inc
push
ins
xor
fwait
push
and
pop
xor
jne
inc
aaa
ror
mov
cmp
xor
aas
sbb
(bad)
and
push
cmp
jle
test
pop
jae
or
(bad)
stos
imul
aad
lods
int3
mov
jb
fldenv
retf
adc
jle
pop
push
lock
movs
sub
mov
cs
sbb
ins
loope
in
imul
inc
cmps
mov
pop
jb
jne
hlt
arpl
data16
dec
mov
mov
xchg
pop
in
rcl
into
leave
dec
jg
sub
mov
jno
call
jno
test
out
add
dec
jb
hlt
or
sahf
imul
hlt
sbb
dec
out
pop
pop
loope
mov
push
push
adc
lods
(bad)
rdmsr
ret
xor
rsqrtps
jp
fsub
ret
adc
in
(bad)
pop
gs
xor
add
adc
hlt
mov
in
jbe
inc
data16
movs
mov
popa
ret
pop
fistp
outs
outs
lds
xchg
sbb
jp
retf
stos
xor
sti
cmp
pop
pop
cli
jae
mov
shr
pop
jp
inc
sbb
aaa
dec
dec
jo
clc
cmps
into
push
repz
pop
sub
mov
jecxz
mov
jg
jnp
xor
and
mov
rcl
pop
out
ret
out
jno
ins
xor
cmp
mov
ss
sub
ret
push
or
int
test
loop
int
lea
cmc
mov
sub
xchg
jmp
dec
cmp
mov
das
add
jb
mov
inc
cmc
call
push
pop
(bad)
cs
push
fadd
cmps
mov
push
jns
add
neg
imul
fwait
push
hlt
jp
adc
data16
es
jge
adc
mov
inc
jmp
cmp
sub
adc
(bad)
pop
test
(bad)
call
pop
inc
push
pop
inc
adc
inc
repnz
int
add
xor
xchg
mov
or
std
inc
ficomp
mov
sub
pop
ficom
cmovp
push
cmps
je
adc
push
out
jbe
stos
mov
cmp
ror
cmp
cs
mov
xchg
rcr
mov
sahf
movs
fisubr
int
(bad)
lock
add
nop
stos
jg
lock
mov
mov
inc
dec
ret
mov
and
loope
sub
lahf
fnstsw
movs
adc
je
lods
or
mov
lods
loopne
ficomp
sbb
pop
repnz
fistp
inc
repz
or
dec
gs
adc
xchg
lds
push
ret
cmps
sub
test
(bad)
lds
dec
mov
call
push
sar
lds
jnp
cmp
or
hlt
mov
(bad)
out
shr
add
add
sbb
cli
in
xchg
mov
lahf
xchg
add
cmp
adc
xlat
clc
inc
cmp
movs
loopne
lock
(bad)
mov
adc
adc
mov
or
mov
scas
dec
cwde
inc
fs
add
jge
cmp
pop
int
jp
fs
icebp
sbb
popf
and
in
mov
and
test
sub
and
lods
in
ret
les
cmps
jb
inc
pop
xchg
push
push
mov
sbb
call
cmps
aad
fdiv
mov
pop
jecxz
loop
add
bndstx
jo
pop
push
mov
jg
pop
jne
(bad)
and
aam
cli
jae
pop
imul
jb
xchg
pop
int3
adc
cmps
leave
int
xor
das
repnz
fmul
and
fwait
pop
into
stos
add
packssdw
xchg
jae
adc
ret
daa
push
fnsetpm(287
imul
jecxz
jae
iret
call
lock
popf
adc
xor
mov
xor
hlt
shr
sbb
xchg
rcl
jg
inc
(bad)
dec
inc
jl
in
or
call
xor
xchg
add
fistp
ret
(bad)
call
cmc
mov
cmp
cli
jecxz
fwait
push
push
and
push
xor
add
mov
xor
xchg
shr
icebp
xchg
popa
cmp
je
out
out
mov
dec
dec
out
cmps
push
ins
push
mov
test
ret
jmp
adc
mov
jo
pop
das
xor
xchg
daa
rcr
test
rcl
stos
sar
pop
inc
xchg
mov
mov
mov
adc
lods
dec
xchg
xchg
dec
cmp
lock
xor
and
inc
xchg
lods
shr
mov
dec
jge
dec
repnz
mov
pop
add
jno
jecxz
mov
sbb
jmp
mov
cmps
sub
mov
push
pusha
dec
jle
call
cmp
or
jg
fld
movs
jp
add
pop
cmp
cmc
shl
aaa
dec
dec
pop
repnz
xchg
sbb
xchg
stos
jne
xchg
push
ja
je
cwde
add
shl
xchg
movs
sub
pop
popf
inc
jbe
lods
and
adc
xchg
adc
nop
jecxz
retw
stc
punpckhwd
bound
push
sbb
push
aad
mov
cmp
cmp
sub
jo
daa
test
scas
nop
inc
push
mov
aas
sub
adc
lahf
and
lock
sub
pop
scas
inc
inc
xor
aas
cmp
test
ror
add
jae
into
adc
in
scas
std
inc
popa
jno
mov
popf
adc
sbb
sub
fs
out
repnz
cmp
out
sub
mov
or
and
test
or
loope
in
or
(bad)
hlt
shl
sbb
movs
push
adc
(bad)
lods
xchg
ror
jp
push
jle
mov
std
or
inc
push
pop
ret
sbb
daa
out
sub
gs
or
cwde
xchg
mov
pop
xor
push
xchg
inc
and
mov
mov
daa
ffreep
mov
repnz
dec
pop
(bad)
push
mov
xchg
out
mov
sbb
and
jle
sub
push
xlat
dec
ja
shr
cdq
aas
inc
out
xchg
(bad)
add
jmp
(bad)
lahf
mov
test
push
pushf
or
sbb
lgs
cwde
stc
cld
mov
jp
out
fwait
dec
add
pop
xchg
push
add
hlt
cmp
aad
xchg
xor
cmps
(bad)
jl
test
scas
dec
int3
pop
mov
dec
cli
push
and
xor
outs
add
out
shl
mul
add
std
mov
xor
repz
jno
pop
rol
in
movs
neg
push
jmp
call
scas
pop
fdiv
fs
(bad)
nop
cmp
call
sub
xor
adc
das
add
dec
je
ins
std
mov
mov
and
jbe
or
sub
fbld
(bad)
mov
push
mov
in
(bad)
or
(bad)
mul
cmp
push
gs
stos
jns
mov
outs
pop
mov
iret
mov
cmp
mov
stc
pop
adc
or
push
repz
popa
mov
sub
xchg
das
inc
test
loope
sub
xor
icebp
nop
dec
jae
mov
popf
cli
xor
mov
ja
(bad)
out
mov
shr
mov
mov
jne
icebp
cmp
in
mov
pop
adc
ins
mov
in
and
repnz
mov
pop
call
xor
adc
daa
out
jno
mov
adc
imul
and
mov
pop
push
mov
mov
ficomp
cmp
pop
cmp
push
div
add
sub
xchg
loope
loop
push
add
ror
data16
push
jle
int3
mov
aaa
or
cmp
push
shr
ret
imul
mov
add
fsubr
fld
dec
xchg
sub
fisttp
(bad)
xor
dec
xor
shl
call
jbe
jmp
sub
push
fisub
imul
sbb
or
lds
sub
mov
and
daa
and
sbb
jno
mov
or
cmp
popw
cld
jecxz
es
pop
cwde
enter
add
or
mov
mov
mov
dec
pop
(bad)
repnz
inc
jle
std
jg
popa
mov
pop
inc
sub
jecxz
pop
ins
stc
popf
push
adc
cmps
inc
push
jle
add
bound
push
pop
mov
pop
add
daa
imul
push
add
cmp
inc
mov
int
ret
(bad)
sbb
ror
dec
add
jns
movs
(bad)
scas
xchg
outs
lods
arpl
push
lods
mov
and
cmp
dec
movs
lock
loop
mov
cs
les
jnp
mov
outs
inc
in
dec
in
lods
(bad)
cmp
repz
dec
or
fwait
dec
xor
popf
cmp
push
or
ror
mov
shr
(bad)
(bad)
mov
imul
push
loop
and
mov
adc
xchg
pop
inc
mov
sbb
pop
dec
ror
repz
jl
push
jmp
js
repz
iretw
rcl
xchg
(bad)
xchg
in
cmps
jmp
cmps
cs
xchg
out
jecxz
adc
jmp
enter
push
rol
cmp
dec
jo
sub
push
push
dec
cs
adc
das
xchg
popa
js
rol
test
sbb
and
lods
add
xchg
(bad)
repz
push
add
mov
into
mov
cmps
sub
adc
dec
aam
cdq
add
arpl
mov
or
sbb
pop
or
push
stos
sbb
frstor
push
(bad)
out
loope
fidiv
sahf
sbb
repz
mov
test
sub
cld
mov
mov
mov
rol
sbb
popa
pushf
lods
pop
pop
jae
movs
jmp
call
mov
mov
sub
pop
std
add
jmp
ss
test
adc
call
imul
adc
mov
sub
xor
push
out
rcl
test
mov
lock
dec
inc
jne
imul
cmp
dec
xor
outs
(bad)
add
jne
mov
pop
clc
inc
mov
pop
or
push
sbb
sti
nop
cmp
test
pop
repnz
mov
xchg
inc
adc
fstp
loopne
add
les
scas
ins
sub
jb
retf
add
and
call
pop
(bad)
xchg
mov
mov
mov
or
cmc
enter
and
pusha
mov
xchg
mov
mov
cmp
or
pop
jmp
clc
rcl
add
xchg
jp
stos
jb
fisub
repz
inc
push
push
jl
fbld
jae
adc
sti
mov
sbb
mov
pusha
or
popf
aaa
aas
xchg
(bad)
mov
push
pusha
dec
repz
ret
push
dec
mov
jp
adc
(bad)
pop
pop
pop
pop
mov
or
dec
(bad)
and
sub
pop
sub
scas
retf
sti
mov
(bad)
es
jle
movs
ret
int
add
ja
iret
pop
or
jbe
jl
stos
inc
sub
sub
mov
cwde
xchg
dec
cmps
dec
push
pop
aad
std
test
sub
mov
sti
xor
stc
ror
mov
push
mov
popa
xor
sub
mov
mov
outs
(bad)
in
fwait
test
(bad)
ret
pop
leave
in
and
mov
test
ins
out
sbb
test
ror
fwait
mov
call
out
outs
sbb
iret
pop
or
pop
add
test
jmp
xchg
test
shr
xor
or
ja
or
xor
mov
push
stos
call
jmp
aam
in
push
inc
out
jmp
add
mov
mov
enter
cmp
or
out
movs
(bad)
leave
and
dec
ins
call
sub
xchg
adc
mov
lds
shr
lahf
out
les
xchg
inc
call
fld
add
cld
push
push
pop
fst
jp
or
jo
clc
adc
mov
outs
loopne
ds
mov
ror
or
mov
ins
cdq
loopne
pop
in
push
aaa
dec
inc
ret
idiv
(bad)
mov
push
icebp
cmp
mov
outs
rol
jae
mov
sub
jns
out
(bad)
test
mov
push
stos
mov
xor
adc
ins
lods
push
in
add
arpl
inc
mov
sub
popa
sbb
fadd
(bad)
faddp
mov
test
inc
mov
jo
repnz
jns
jae
or
xchg
cdq
xor
xchg
outs
jmp
jmp
inc
cmp
xor
pop
jg
xchg
cmp
sbb
xor
out
das
mov
add
ds
in
cli
fadd
out
mov
fmul
push
push
ins
pop
lahf
ds
movzx
in
div
xor
jb
sub
push
(bad)
mov
pop
sub
popf
push
nop
fucom
hlt
movs
das
mov
inc
(bad)
mov
int3
sbb
cmp
pop
mov
mov
stc
jp
mov
adc
jns
jbe
outs
shr
and
mov
rol
scas
sbb
sbb
cli
or
std
or
jge
push
and
add
cmp
jmp
fs
sbb
xchg
pushf
cli
xor
scas
mov
fisttp
pop
push
aad
and
out
aas
(bad)
mov
popf
xor
sub
pmuludq
jb
xchg
and
push
outs
dec
push
jg
lea
cmp
lea
jns
push
mov
es
es
add
test
imul
stc
mov
mov
mov
jecxz
cmp
faddp
fst
mov
cmps
jecxz
add
scas
das
stc
outs
push
bound
imul
ret
aad
adc
mov
inc
mov
mov
das
loope
push
pop
and
fcomi
push
test
movs
adc
outs
adc
clc
dec
pop
cld
jg
(bad)
loop
daa
push
and
mov
ret
xlat
jl
pop
aam
jbe
push
pop
addr16
popf
sub
mov
dec
xchg
and
inc
es
pop
jp
js
xchg
fwait
ja
lods
cmps
fist
out
inc
lods
jnp
in
rol
and
xchg
and
cld
sub
scas
push
aaa
push
dec
aaa
fimul
sbb
adc
jno
(bad)
(bad)
fsub
rep
xor
(bad)
inc
dec
adc
or
pop
xor
movs
pushf
jl
pop
inc
stos
mov
ss
push
jl
push
jno
inc
popa
mov
cmp
les
sub
sub
cmp
dec
mov
out
adc
(bad)
enter
inc
in
cmps
jecxz
jge
ret
adc
mov
inc
adc
movs
daa
mul
ja
sub
mov
or
repnz
setg
pop
jae
mov
aam
les
loope
popa
push
pop
icebp
push
sub
test
shl
push
mov
push
out
aad
dec
popf
dec
push
fmul
popa
mov
push
mov
fstp
inc
xchg
mov
or
jle
jbe
popf
retf
or
imul
cmc
fwait
add
inc
or
or
push
pop
mov
inc
(bad)
call
xchg
push
mov
push
mov
loopne
add
ja
scas
addr16
xchg
sti
cmp
pop
cmp
shl
outs
call
or
aam
jbe
or
in
xchg
jmp
adc
and
test
stos
add
daa
xor
enter
adc
in
xor
lods
shr
xchg
jecxz
div
adc
dec
mov
xchg
mov
pop
pop
mov
xor
das
sbb
iret
std
add
out
push
pop
dec
inc
cdq
data16
dec
enter
jno
lahf
or
xor
sbb
into
in
or
inc
push
cdq
mov
jmp
jmp
addr16
mov
sahf
iret
jne
adc
cmps
or
jae
mov
jecxz
cs
push
inc
aad
shl
jmp
addr16
and
sbb
push
mov
fs
in
inc
movs
jle
xor
jno
icebp
stc
pushf
das
xor
adc
(bad)
xlat
sahf
cmp
stos
sub
and
or
imul
scas
neg
jb
lahf
mov
lods
aas
movs
sbb
sub
jge
mov
pop
xor
pop
fwait
mov
adc
in
push
in
fsubrp
sbb
xchg
std
aad
loop
(bad)
sbb
daa
xchg
adc
cmp
push
popa
(bad)
xchg
add
loope
sbb
ja
das
cmp
sbb
retf
xlat
repz
js
repz
dec
stos
rol
mov
inc
es
mov
popa
sbb
pop
fcom
test
sub
shl
fs
cmc
pop
sar
add
dec
fstp
test
jp
popf
fcmove
mov
fnstsw
and
ficom
fs
xchg
jno
push
fadd
fimul
jmp
dec
shr
sti
mov
data16
mov
mov
arpl
pusha
cmp
cdq
(bad)
fcomp
sahf
jecxz
aaa
xchg
sub
mov
test
stc
jle
ins
adc
inc
fisubr
in
hlt
dec
dec
pushf
fs
sahf
lahf
adc
xor
jns
stos
outs
jge
mov
pop
popf
test
repnz
mov
push
jne
retf
fcomp
cmps
leave
stos
out
fbld
mov
clc
xor
aad
jno
and
adc
call
push
adc
sub
test
movs
lock
or
pop
(bad)
push
push
ret
mov
mov
ss
fnsave
dec
push
jns
nop
fucompp
repz
jns
fs
popa
cli
inc
cwde
int3
in
add
arpl
sahf
and
pop
xor
push
pop
xor
fisubr
and
jle
jl
repnz
jno
lahf
ja
push
sbb
shr
mov
int3
inc
jo
std
mul
lods
leave
push
mov
dec
sar
pop
jmp
pusha
retf
xchg
movq
add
pop
movs
mov
fdivr
and
sub
push
dec
sub
shl
(bad)
sub
lods
jp
push
sahf
mov
jnp
sbb
mov
sbb
inc
push
das
sbb
add
lahf
sub
stc
mov
shr
pop
pop
out
test
loop
xor
fcmovnb
int
cmp
les
xor
aad
mov
cmps
jae
adc
sbb
aad
ins
(bad)
jge
(bad)
push
outs
sbb
loopne
mul
sub
cmp
in
out
mov
dec
pop
or
outs
cli
addr16
pop
pop
pop
sub
call
and
xor
lock
dec
mov
retf
ins
mov
jge
push
in
dec
mov
fmul
ret
cmps
add
and
mov
add
push
dec
push
dec
or
and
xchg
call
movq
mov
add
scas
jb
inc
(bad)
outs
jecxz
mov
push
jp
es
lods
push
push
inc
(bad)
xchg
mov
pop
int
stc
cmp
add
cmp
pop
icebp
push
xchg
xor
jns
or
ret
es
push
test
cmp
ret
mov
jmp
repnz
mov
shr
shl
sbb
(bad)
mov
mov
fwait
xchg
mov
cmp
shl
sub
lds
cmp
je
adc
(bad)
lahf
arpl
call
mov
lock
or
sbb
shr
adc
or
push
and
adc
(bad)
(bad)
call
or
push
and
loope
push
ficomp
mov
sub
in
xchg
push
movs
test
mov
and
int3
retf
or
inc
stc
adc
push
adc
mov
xchg
pop
repnz
sub
shr
test
pop
ret
cmp
das
stc
ret
xor
inc
in
cld
stc
inc
push
iret
or
scas
mov
xor
out
jo
xchg
retf
add
pushf
mov
and
arpl
dec
adc
(bad)
int3
jge
dec
out
popf
push
jb
inc
jnp
xlat
fdivr
push
push
mov
jne
push
mov
ds
xor
add
fsub
dec
push
inc
xchg
arpl
jle
push
xchg
jb
push
pushf
push
sbb
cmp
popf
xchg
(bad)
jae
adc
mov
or
fs
adc
pushf
call
pop
out
mov
dec
sub
jmp
(bad)
cld
sub
fiadd
push
mov
enter
adc
sub
xchg
and
sbb
sbb
cpuid
lds
out
sti
adc
cmp
in
push
or
dec
idiv
push
dec
xchg
xor
fiadd
ds
test
pop
xor
test
lahf
outs
cmovge
mov
mov
jl
int
dec
addr16
jbe
test
ss
jbe
popf
pop
mov
imul
ja
xchg
cmp
out
stc
jne
(bad)
(bad)
mov
mov
cmp
cmps
mov
lods
outs
mov
inc
in
xchg
or
mov
iret
add
aaa
pusha
pop
xor
(bad)
outs
cmp
pusha
mov
lods
shl
fcmovbe
or
sub
out
movs
cmp
sbb
loopne
ja
adc
mov
aam
push
pushf
jo
enter
pop
std
mov
rcr
xlat
shr
in
dec
in
xchg
jp
je
pop
sub
dec
jnp
in
push
or
fstp
sub
scas
adc
sar
jmp
imul
sub
sub
call
call
das
or
repnz
sub
data16
ror
out
call
je
push
cmps
stos
mov
cmp
outs
sti
icebp
iret
jmp
sub
(bad)
je
pop
xchg
and
ds
fbld
movs
or
sbb
add
retf
cwde
call
das
fldcw
cmc
sbb
in
dec
test
mov
mov
int3
sbb
ins
push
mov
scas
sub
sbb
ins
retf
in
xor
push
cmp
ror
ror
jge
je
push
inc
pop
aaa
add
lea
sbb
or
jl
pop
dec
push
pop
loopne
pop
je
mov
pop
aas
(bad)
xlat
into
jl
popf
fldcw
mov
pop
xor
push
div
mov
lock
inc
ror
ja
push
mov
push
jmp
jle
hlt
dec
repz
inc
lea
sbb
js
inc
sub
les
or
push
shl
enter
call
dec
in
shr
imul
and
hlt
mov
les
mov
ficom
pop
dec
mov
adc
jnp
adc
cld
xchg
mov
adc
mov
mov
jnp
frstor
std
xor
xchg
ret
pop
pop
jne
mov
inc
leave
pop
lods
hlt
les
mov
fmul
add
rcr
xor
jbe
sahf
scas
mov
mov
pushf
jp
xchg
cmp
xor
xor
lock
sub
adc
push
aaa
mov
add
add
pop
dec
das
ret
les
mov
sub
imul
sub
icebp
add
addr16
ficomp
(bad)
mov
movs
adc
shl
out
jecxz
xor
add
dec
push
repz
les
cwde
fisttp
int3
push
ja
pushf
mov
pop
mov
push
add
push
movs
jecxz
retf
add
addr16
fcom
pop
dec
xchg
test
fwait
pop
rcl
test
(bad)
jmp
and
jg
cmp
add
adc
sahf
dec
mov
in
fs
jae
js
daa
loopne
iret
sbb
ins
mov
out
and
stc
fdiv
or
arpl
aam
enter
or
dec
push
out
jecxz
mov
jo
mov
add
std
jmpw
data16
out
sbb
push
jno
xchg
js
scas
pop
scas
mov
jle
jnp
mov
movs
ficom
mov
mov
in
push
or
xor
aas
fistp
(bad)
push
inc
or
xlat
xchg
mov
(bad)
push
and
mov
aad
fstp
xchg
mov
sbb
jo
(bad)
jmp
adc
push
dec
push
leave
xchg
cdq
xor
icebp
adc
dec
in
jge
push
adc
pop
xor
push
cmp
cmps
(bad)
std
cdq
xor
mov
hlt
imul
lock
repz
es
mov
or
adc
mov
mov
scas
or
(bad)
jns
dec
sbb
fldl2e
loop
cmp
dec
loopne
push
lock
sti
imul
and
int3
xlat
mov
int3
mov
mov
cmp
bound
test
jne
fcomp
scas
dec
mov
sub
dec
clc
jne
xor
fistp
stos
sbb
sbb
add
fadd
inc
and
jg
mov
fistp
popa
jp
inc
mov
repz
mov
or
scas
xor
adc
jbe
xchg
cmp
xchg
addr16
dec
push
hlt
pop
fs
lahf
sub
loope
sub
inc
ror
(bad)
mov
fmul
fnsave
xchg
cmp
mov
cwde
inc
push
jb
cmp
sub
js
adc
dec
xor
sahf
xor
cs
lea
les
jl
addr16
jb
ins
dec
(bad)
push
rcl
push
mov
aaa
xchg
add
les
pop
mov
call
mov
sahf
xor
add
add
inc
dec
fwait
mov
test
movs
iret
add
or
inc
dec
xor
xchg
(bad)
xchg
sub
repnz
rcr
sub
test
fisubr
fcomip
icebp
jno
enter
and
cs
or
add
and
or
pop
push
mov
xor
ja
push
hlt
leave
fild
xchg
dec
sub
or
ret
int3
scas
leave
push
adc
jecxz
push
leave
and
cs
imul
mov
rcr
out
(bad)
mov
xchg
dec
into
jmp
mov
jno
push
push
push
xor
mov
push
mov
mov
je
jb
add
stos
enter
mov
dec
cmp
and
mov
clts
cmc
in
jg
mov
pop
fdiv
add
and
lds
test
in
pop
ss
add
sub
and
scas
ss
int
sbb
in
sub
sub
stos
inc
xchg
outs
jnp
mov
sti
je
cmps
int
jmp
and
cmp
cli
adc
retf
icebp
hlt
adc
push
(bad)
dec
mov
mov
call
sub
xor
in
push
cmp
inc
xchg
jle
aad
aaa
pop
mov
mov
out
test
pop
(bad)
sar
loop
and
iret
pop
addr16
ret
dec
aad
jnp
popa
pop
push
push
sub
xchg
adc
and
pop
stos
mov
push
rcr
cmp
mov
xchg
pop
pop
mov
(bad)
or
or
ins
test
mov
jno
mov
shl
out
rol
mov
sbb
retf
cmp
loop
mov
fs
mov
int
test
add
jne
nop
nop
jg
add
sbb
jns
add
jb
int3
sbb
test
test
lods
test
jae
pop
adc
sti
pop
and
dec
ins
mov
xchg
xor
sbb
enter
or
and
inc
addr16
and
into
ds
lea
jl
and
(bad)
call
push
fwait
test
addr16
inc
loope
mov
cmp
(bad)
int
jmp
push
mov
nop
outs
mov
xchg
scas
pop
sbb
xor
mov
jmp
sub
lahf
mov
pop
mov
pushf
mov
inc
mov
dec
jns
adc
mov
daa
sbb
mov
cmps
jmp
loope
loopne
push
push
add
out
or
lods
ret
push
or
imul
test
les
rcr
xchg
sbb
lods
aad
imul
mov
xor
push
push
rol
add
xor
bound
mov
(bad)
(bad)
jmp
xor
shl
shr
or
test
cmp
jnp
xor
fwait
jmp
sbb
dec
inc
add
lock
ins
cmp
inc
loop
leave
or
lods
jecxz
xchg
dec
cmps
xor
repz
outs
fnstenv
scas
cmp
mov
pop
sbb
shr
pop
adc
sti
mov
lods
mov
das
mov
or
mov
ret
and
mov
daa
mov
mov
jp
aad
sbb
fstp
lds
fucomip
push
xor
daa
in
mov
jne
out
dec
test
pop
fild
aaa
inc
test
xchg
push
sar
out
jge
sub
call
popf
inc
popa
cmp
mov
das
mov
enter
mov
dec
push
push
mov
cwde
popf
mov
inc
stos
fidiv
mov
mov
mov
add
(bad)
xor
ficomp
loope
mov
push
push
xchg
inc
jl
mov
ins
pop
adc
stos
pop
jbe
ret
lea
pushf
xor
xor
sar
int
inc
ret
loope
stc
push
(bad)
jle
adc
in
or
adc
jnp
mov
ins
retf
sahf
(bad)
in
lods
inc
xchg
pop
mov
adc
jecxz
and
jo
imul
sub
jmp
mov
das
jmp
adc
imul
fbld
push
add
es
mov
cmp
arpl
shl
or
ret
pop
(bad)
sub
xor
dec
test
xor
loope
add
inc
outs
retf
js
jge
push
sti
dec
ficomp
(bad)
into
sti
rcl
or
pop
xlat
inc
(bad)
stc
mov
mov
ret
pushf
adc
mov
addr16
dec
push
dec
or
cs
call
add
add
test
mov
int3
cmps
in
fcos
push
or
inc
inc
test
pop
test
dec
lods
jb
cmp
hlt
scas
jb
pop
mov
dec
inc
call
mov
das
or
shl
hlt
pop
jne
pop
mov
cmc
sti
(bad)
stc
es
ins
mov
fistp
out
xchg
xor
into
aam
dec
adc
adc
push
or
test
jb
xor
cmc
enter
pop
sbb
add
mov
int3
xchg
cs
add
fdivr
sbb
call
retf
or
cmps
pop
or
sbb
fwait
pop
clc
lahf
nop
mov
xor
jmp
lock
(bad)
shr
sub
jp
shr
xchg
cmp
sbb
adc
test
push
xchg
mov
pushf
pop
stos
mov
dec
xor
jae
or
scas
push
nop
cmp
sbb
fwait
daa
int
pop
mov
aad
adc
cmp
mov
ret
dec
call
cmps
ins
or
inc
cmp
test
xchg
popf
jl
and
imul
pop
movs
(bad)
std
xchg
outs
sahf
jno
aam
jb
dec
jb
ficomp
bound
mov
pop
sbb
cmp
sbb
push
and
test
cmps
addr16
js
int
push
dec
dec
dec
xchg
adc
aaa
sbb
push
push
pop
(bad)
div
mov
inc
clc
mov
sbb
stc
aam
pop
mov
stc
test
es
pop
lahf
xchg
stos
int3
cmps
outs
cmps
outs
mov
jg
sti
movs
(bad)
sub
ficomp
call
adc
ss
in
mov
sbb
retf
push
cdq
popa
div
imul
and
out
add
adc
mov
dec
clc
or
mov
gs
pusha
push
arpl
ins
ret
pop
(bad)
les
(bad)
sub
in
pop
pop
pop
mov
jg
cmp
movs
mov
bound
add
test
dec
and
mov
pusha
jns
add
call
sbb
cmp
or
add
and
push
mov
and
imul
ja
js
dec
(bad)
(bad)
clc
add
add
ror
sti
or
mov
sar
push
mov
icebp
adc
mov
arpl
test
aaa
push
call
lahf
leave
ret
mov
(bad)
bound
dec
lods
inc
movs
outs
movs
and
adc
xchg
sub
aaa
sbb
ficomp
and
push
shr
icebp
(bad)
mov
xor
sbb
les
ss
shl
stos
xchg
aaa
xlat
adc
retf
aas
stos
mov
call
xchg
cmp
mov
mov
(bad)
in
(bad)
call
pop
cdq
stc
out
jb
repz
pop
sahf
jbe
mov
xor
aad
sti
data16
dec
dec
pop
or
rcl
scas
adc
cmp
(bad)
je
add
std
cmp
stc
dec
fild
xchg
xchg
lods
popa
outs
xor
fidivr
lahf
das
lahf
clc
add
imul
dec
or
xor
jmp
add
inc
pop
or
ins
out
repz
add
xor
and
inc
and
add
pop
sbb
or
xchg
rol
push
fwait
inc
adc
test
idiv
(bad)
out
sti
or
push
in
push
sub
mov
out
inc
pop
int3
cmp
sahf
add
pop
jp
daa
(bad)
ds
xor
aaa
mov
fldcw
test
and
xchg
in
gs
retf
jnp
xor
and
(bad)
jecxz
or
jns
mov
mov
or
mov
pusha
daa
mov
(bad)
pop
stos
cdq
idiv
push
jg
xchg
pop
cmp
retf
jp
dec
pop
jmp
push
push
fmul
out
shl
sub
pop
push
pop
popa
xchg
icebp
sbb
popa
xchg
pushf
div
inc
or
lods
out
cmp
adc
sub
imul
in
mov
out
ins
(bad)
out
xchg
xchg
sbb
leave
movs
pop
or
pop
scas
cmp
mov
and
ins
div
inc
dec
and
push
out
dec
push
fistp
xchg
xor
or
repz
cmp
icebp
and
and
mov
pushf
mov
pop
sub
cdq
jne
je
add
movs
mov
dec
or
repnz
popa
jl
mov
repz
sar
in
js
mov
sti
xor
pop
dec
popa
ds
pushf
int
mov
pop
xchg
movs
(bad)
je
pop
push
jno
mov
inc
push
int3
inc
repz
sub
push
add
retf
std
cmp
dec
jecxz
adc
stos
mov
mov
pop
xor
mov
mov
mov
xlat
out
out
push
xchg
push
jle
sbb
or
movs
add
mov
test
push
out
xchg
adc
jl
mov
adc
xchg
push
push
or
mov
lods
xlat
ret
cs
call
test
leave
cli
push
add
push
fld
fadd
jl
clc
xor
sbb
je
es
out
icebp
popf
mov
cmp
fisttp
imul
dec
stos
dec
pop
mov
sbb
movs
clc
in
push
jb
hlt
jne
rol
fdiv
jg
pushf
mov
inc
push
sub
or
aad
int
out
fist
int
jns
cld
pop
addr16
xchg
and
xor
int3
add
xchg
dec
mov
pop
inc
push
dec
mov
ds
jp
jne
pop
jecxz
or
mov
pop
(bad)
fcomp
mov
(bad)
mov
retf
xchg
or
aas
inc
fcmovu
data16
sbb
inc
jnp
out
push
int3
pushf
scas
in
xchg
test
push
rcr
inc
mov
and
push
shl
retf
jp
xor
xor
mov
pop
xchg
int3
aad
rol
sub
lahf
retf
mov
or
mov
jp
mov
mov
retf
in
push
push
pushf
and
add
jmp
mov
pop
push
(bad)
lods
inc
adc
cmps
in
mov
ror
dec
inc
cmps
popa
in
mov
cmp
mov
in
neg
push
inc
and
in
mov
push
sub
inc
mov
cmp
xor
mov
jo
lods
xlat
add
mov
iret
outs
dec
xchg
popf
cmc
push
jae
pusha
movs
leave
cmp
mov
std
fwait
test
push
push
scas
cmp
xchg
(bad)
fwait
loopne
scas
mov
pop
push
xchg
adc
cmp
mov
(bad)
dec
sub
repz
adc
jg
in
jmp
add
jno
pop
sub
add
cdq
stc
std
daa
jno
das
cmp
cmps
jno
bound
pusha
push
jg
inc
pop
imul
xchg
cmc
mov
scas
sbb
push
dec
iret
cmp
mov
bound
icebp
add
xchg
fs
fidiv
(bad)
cmp
stos
cmp
mov
jb
loope
xor
or
jb
outs
pusha
fstp
adc
es
dec
adc
and
shl
dec
ror
shr
and
and
lock
cmc
dec
ja
lock
fld
sti
mov
push
xchg
mov
dec
lods
sbb
pop
fild
cmp
push
into
rcl
syscall
adc
and
lahf
ret
mov
mov
nop
jmp
ret
sti
(bad)
fist
pusha
mov
cmp
ins
loope
rcr
pop
sbb
cmp
add
cwde
sti
mov
test
mov
hlt
push
stc
aad
mov
add
adc
add
popa
mov
mov
lock
cmp
or
push
mov
add
lds
aad
hlt
dec
mov
jnp
dec
imul
and
into
mov
pop
push
psadbw
mov
jns
add
jg
mov
mov
rcl
int3
ins
sbb
xchg
or
loop
in
aaa
es
ja
pop
mov
lods
sbb
mov
(bad)
xchg
out
pop
pop
scas
outs
push
imul
mov
cmp
std
push
cwde
fldcw
cs
or
and
fild
leave
jmp
mov
pusha
sub
bound
imul
cmp
ins
imul
xor
push
or
(bad)
pusha
mov
lock
mov
dec
add
repnz
aas
jae
adc
nop
mov
addr16
das
pop
addr16
test
jmp
(bad)
stos
sbb
and
int
mov
outs
pop
test
push
pusha
shl
push
test
shr
ror
xor
mul
nop
push
cmps
es
bound
in
push
jle
call
push
xor
mov
loopne
psrlw
mov
pop
inc
fdivr
outs
inc
in
push
pop
rcl
sub
cmp
pop
or
jnp
scas
fistp
pop
test
dec
inc
(bad)
ror
mov
add
in
dec
dec
ffreep
push
cmc
pop
xlat
mov
xchg
ins
enter
cmp
shl
aas
adc
xor
(bad)
xchg
aam
add
fwait
dec
xchg
cmp
imul
retf
scas
das
or
sahf
sub
mov
cmc
mov
dec
push
mov
into
push
dec
ss
xor
jns
pusha
out
cmp
out
aas
push
and
popa
and
jmp
int3
das
(bad)
sub
(bad)
sub
sar
rcl
or
ret
mov
inc
ds
pop
cs
push
pushf
sub
push
mov
retf
push
lahf
mov
(bad)
adc
sbb
test
fild
frndint
push
test
shr
sub
shr
jp
push
jmp
arpl
mov
push
adc
dec
pop
and
adc
outs
stos
inc
mov
leave
enter
push
into
repz
mov
adc
pop
inc
ja
mov
sbb
fisttp
xchg
std
call
arpl
push
imul
and
xchg
push
(bad)
sub
jbe
rcr
pop
aam
cmc
movs
rcr
lods
bound
pop
pop
lahf
(bad)
cmp
(bad)
fsubr
push
mov
paddusw
inc
add
test
sbb
lea
push
fbstp
mov
jno
xor
repz
imul
inc
sub
mov
lea
fxch
cmp
(bad)
fucomi
sub
add
mov
fst
jp
lea
jmp
je
cwde
cmp
xlat
imul
retf
loop
mov
ret
in
jno
test
sahf
or
daa
aad
retf
jmp
mov
paddusb
dec
adc
adc
mov
pop
clc
fwait
mov
into
mov
add
(bad)
call
push
jg
xor
sar
aaa
mov
inc
popa
add
rol
pop
adc
arpl
sub
pop
test
mov
inc
lds
mov
jmp
add
shl
fdiv
or
adc
mov
inc
add
fistp
out
psllq
mov
jg
adc
xchg
xchg
arpl
retf
call
xchg
or
cli
xlat
out
xchg
or
scas
pop
ss
hlt
sbb
fdiv
aam
into
ds
mov
xlat
add
pushf
mov
adc
lock
mov
mov
mov
pop
int
adc
test
shr
jb
mov
or
stos
cs
test
jl
cmp
inc
int3
data16
mov
sbb
pop
inc
adc
cmp
dec
jp
mov
dec
xchg
inc
cld
jecxz
dec
mov
jle
loop
lods
or
and
int
cwde
mov
cdq
mov
mov
or
push
pusha
sbb
cmp
mov
cmc
adc
dec
hlt
mov
int
fidiv
push
or
sbb
es
and
inc
cmps
data16
lea
int
loopne
ret
dec
sbb
add
and
adc
pusha
sahf
sar
mov
test
mov
sub
xor
loopne
das
lods
lods
xor
call
adc
sub
daa
dec
ins
popf
or
inc
or
add
fsub
mov
mov
and
repz
rcl
or
inc
push
sub
out
(bad)
pop
push
inc
stc
push
out
pop
sbb
xchg
sar
push
(bad)
mov
shr
movs
out
repz
push
mov
xor
pop
aaa
jb
fs
sub
in
test
mov
mov
fs
ins
mov
in
aas
jmp
xor
loope
adc
sbb
push
or
push
sti
xor
aad
dec
test
fbld
lock
std
push
jle
les
push
pop
adc
retf
mov
scas
push
mov
or
mov
push
ins
sbb
outs
in
pop
sub
mov
inc
test
ins
inc
add
sub
into
loopne
push
mov
mov
pop
test
fild
xor
pop
xor
sbb
stc
push
mov
mov
cmp
sti
(bad)
out
sub
lods
mov
into
mov
inc
stos
jbe
pop
repnz
sbb
pop
pcmpgtw
shl
pop
in
mov
loop
sub
iret
nop
arpl
enter
mov
adc
or
and
inc
inc
push
pusha
stos
sbb
aam
scas
pop
push
out
xchg
mov
das
pop
fimul
rol
inc
(bad)
pusha
inc
popa
push
mov
div
jle
cmp
mov
bound
sub
imul
jb
jp
adc
pushf
movs
mov
pop
inc
test
sub
push
ins
mul
sti
ja
sub
push
cwde
scas
sub
pop
xchg
jbe
(bad)
mov
sahf
mov
mov
cmp
sbb
or
xchg
cmp
pop
popa
pushf
(bad)
cmp
xor
aad
dec
xchg
icebp
dec
iret
mov
in
push
test
in
in
test
stos
mov
not
or
lods
pop
int3
cli
inc
mov
push
nop
pop
and
neg
jmp
in
arpl
cwde
add
inc
stc
icebp
xchg
gs
cmp
jbe
jae
push
mov
jbe
xchg
idiv
xchg
xor
pop
out
add
pop
sub
push
add
mov
lds
mul
cdq
scas
inc
movs
mov
test
xchg
loopne
mov
sub
and
jnp
adc
es
xor
mov
or
mov
or
push
pushf
xchg
loopne
or
push
(bad)
sbb
mov
cmps
xchg
adc
cmp
rol
mov
sub
ret
mov
(bad)
jmp
xchg
add
or
pusha
fcomi
ret
pop
rcr
loopne
mov
aaa
push
fbld
cdq
outs
lock
fsub
mov
xlat
mov
imul
adc
dec
sub
retf
inc
xor
movs
hlt
push
mov
xor
mov
in
ret
jno
xor
mov
es
add
fdiv
mov
mov
call
inc
lock
ret
arpl
lds
adc
xlat
add
lods
sub
mov
iret
xchg
mov
pushf
fdivp
sbb
mov
mov
out
je
stos
(bad)
(bad)
fst
dec
xlat
lea
xchg
jns
jge
xchg
imul
ret
aad
and
inc
icebp
cmp
inc
or
push
adc
inc
add
fmul
jae
push
popa
push
sbb
push
loop
lea
(bad)
xchg
mov
cmps
push
add
imul
shr
and
xchg
xchg
fidivr
jo
jb
popf
(bad)
loope
clc
dec
xchg
push
jnp
arpl
(bad)
mov
ins
dec
sar
and
cmps
push
inc
mov
aad
jg
je
shl
outs
loope
ins
mov
mov
sub
js
mov
sbb
mov
rol
adc
xor
pop
inc
pusha
dec
div
cmp
je
mov
hlt
mov
cdq
mov
push
mov
and
jle
sub
xchg
pop
aad
xor
mov
sub
jg
clc
and
test
push
daa
inc
inc
and
jo
in
xchg
loop
repz
or
jmp
sbb
push
test
mov
inc
and
cmps
xchg
jg
sub
add
idiv
mov
dec
outs
push
jne
inc
cld
push
jno
pop
pushf
cmps
jge
ins
sar
repz
or
data16
pop
aam
xchg
and
(bad)
mov
sbb
mov
out
cmp
xor
dec
js
sbb
pop
retf
enter
jo
lds
les
rcr
jmp
xor
mov
push
xchg
xrelease
loop
mov
imul
pop
iret
mov
xor
mov
ret
(bad)
sti
leave
fadd
mov
gs
adc
xchg
inc
and
call
push
cmps
or
ror
mov
add
mov
pop
add
cmc
loop
pop
inc
push
dec
test
mov
pop
inc
xchg
mov
out
imul
jno
mov
inc
jecxz
inc
adc
imul
aad
push
xor
test
sbb
sbb
sub
mov
fadd
ins
mov
fwait
push
or
shl
cmp
adc
add
jno
mov
or
push
out
mov
xchg
add
add
push
jl
(bad)
pop
je
cs
clc
push
xchg
stc
sbb
sbb
aaa
jnp
shr
adc
lahf
mov
mov
clc
push
loope
fidivr
cmp
sub
xchg
or
test
in
sbb
push
mov
out
loopne
dec
mov
xchg
mov
cmp
xchg
ds
ror
test
daa
xchg
and
mov
xor
(bad)
neg
lods
ds
cld
cdq
clc
or
popf
xchg
sbb
jne
ficom
ins
xchg
outs
inc
add
call
jo
dec
mov
repnz
sub
xchg
sbb
jg
adc
scas
sahf
add
jnp
frstor
xchg
mov
repnz
add
in
pop
cli
out
adc
(bad)
mov
retf
inc
adc
daa
scas
sub
repnz
dec
push
pop
inc
mov
gs
and
in
repz
dec
xor
in
sub
mov
fld
in
aaa
test
gs
dec
loope
and
scas
shr
push
sahf
xor
mov
push
cmp
cmps
and
daa
and
push
jge
call
ins
test
(bad)
fldenv
push
fsub
call
iret
sub
push
push
xor
movs
cwde
imul
mov
xrelease
sub
add
pop
pmaddwd
push
hlt
sbb
mov
mov
xchg
imul
cld
mov
daa
push
cmp
sub
sub
jbe
or
jmp
jne
xlat
push
dec
popf
les
jge
cmp
lea
cmps
push
mov
fisub
push
sub
xchg
repz
ficomp
sub
xchg
pop
sbb
mov
js
pop
rcr
jae
mov
sbb
push
cli
and
fwait
cli
inc
push
add
adc
je
pop
inc
add
dec
pop
xor
daa
push
out
movs
or
stc
pop
outs
nop
repz
push
sub
mov
call
ss
mov
out
jns
pop
imul
dec
das
mov
and
sub
fcomp
mov
mov
dec
xchg
repnz
adc
jb
mov
jl
add
shr
push
push
adc
loop
push
gs
jge
test
arpl
dec
jns
mov
ret
lods
les
repz
jbe
mov
retf
stc
or
repz
cli
jbe
sub
(bad)
pop
sbb
jne
das
in
(bad)
ds
shr
ja
xor
fadd
test
shr
mov
into
addr16
sub
inc
adc
push
ss
push
add
iret
and
mov
mov
retf
add
xchg
add
push
sub
les
call
loopne
out
add
mov
inc
mov
or
push
in
(bad)
neg
dec
dec
push
cmp
stc
fdiv
push
adc
imul
push
ins
jl
ins
(bad)
cmp
xor
pop
dec
mov
repnz
ret
pop
ficomp
jb
xchg
js
push
mov
fld
pop
push
sti
fidivr
xchg
mov
sbb
loop
scas
pop
push
pop
adc
sbb
cmp
int3
inc
(bad)
jle
retf
sub
pop
aam
ret
lock
and
cli
pop
xor
mov
stos
jo
add
dec
clc
ss
inc
sub
cmps
sbb
cmp
out
xor
cmp
lds
xor
mov
inc
aad
cdq
mov
mov
jmp
stos
sbb
or
mul
mov
clc
push
mov
push
mov
mov
mov
pop
mov
xchg
add
cmp
aad
mov
push
je
outs
or
dec
sub
mov
call
sbb
stos
loopne
dec
loopne
pop
add
push
or
test
imul
cwde
mov
cmp
and
jmp
mov
sbb
adc
sti
fild
jo
scas
jp
push
pop
mov
pop
scas
adc
or
int
(bad)
dec
jnp
push
je
test
push
mov
push
adc
pop
imul
jmp
inc
int
pop
iret
in
je
jbe
in
xor
in
dec
adc
add
fidiv
popa
retf
xchg
pushf
xlat
movs
shr
xchg
adc
scas
fs
out
lods
or
pusha
js
into
mov
int3
call
add
lea
test
push
scas
jp
or
jne
outs
push
test
inc
jg
stos
ror
mov
inc
sbb
inc
inc
lds
mov
ins
push
jnp
out
dec
mov
cmp
dec
sbb
rcl
popa
push
cmp
adc
movs
sub
pushf
mov
mov
and
rol
add
xor
cmp
mov
xchg
ror
sub
jl
cli
stc
clc
xchg
aam
(bad)
mov
xor
jb
push
adc
xchg
iret
adc
loop
or
xor
mov
out
(bad)
adc
pop
xlat
in
or
pusha
sbb
mov
ret
ss
and
dec
gs
lea
in
sti
mov
into
adc
push
(bad)
cli
and
xchg
jo
popa
lds
popa
(bad)
out
in
sbb
div
sar
scas
lea
or
sub
das
inc
add
repnz
jno
js
dec
cmp
push
jle
jmp
in
sahf
or
inc
sub
ss
retf
mov
retf
cmp
sti
push
ins
ins
mov
data16
or
inc
in
mov
rcl
mov
add
cmp
outs
adc
pushf
ss
lock
cmp
scas
pop
adc
mov
pop
jne
js
xor
lds
mov
xor
inc
sbb
iret
dec
jns
add
pop
in
ret
jmp
das
mov
jbe
mov
cmps
xchg
mov
jl
out
icebp
push
xor
dec
das
scas
test
jb
in
cwde
jmp
jnp
jmp
outs
les
cwde
jmp
sahf
or
mov
ror
mov
push
jle
sbb
xor
js
cmc
test
imul
pushf
pop
push
rcl
mov
xor
and
in
inc
adc
xchg
test
pushf
jmp
outs
cld
aam
jb
int
adc
xor
ficom
dec
lock
inc
mov
mov
mov
mov
mov
mov
shl
mov
sbb
or
dec
pop
jmp
sar
mov
mov
and
push
mov
mov
push
pusha
push
jmp
(bad)
retf
cmp
jge
xlat
pop
mov
rcr
or
cs
sub
sbb
jge
ja
(bad)
in
pop
outs
retf
add
push
mov
bound
adc
xchg
push
mov
xor
add
jmp
call
add
fucomp
cmp
adc
leave
jmp
pop
ins
(bad)
sub
cmp
shl
cmp
sbb
inc
scas
add
nop
jg
int
iret
imul
jg
jg
adc
push
jb
sets
ds
mov
not
ins
clc
jbe
stos
clc
(bad)
popf
pop
ds
inc
mov
jmp
js
(bad)
jmp
xor
mov
xor
aam
ficomp
into
or
call
jmp
into
inc
adc
dec
or
gs
inc
lahf
dec
loopne
repz
loope
mov
ffreep
push
repz
adc
fadd
in
cmc
push
ds
int
fistp
or
cmp
fwait
movs
lock
out
fidiv
in
mov
leave
pop
gs
xlat
sbb
les
arpl
mov
dec
inc
inc
and
out
sub
sti
xchg
test
sbb
outs
test
sbb
in
mov
xor
test
mov
dec
out
jp
xchg
xor
les
xchg
(bad)
popa
dec
stc
jp
pop
dec
sbb
jge
(bad)
gs
out
xchg
mov
xchg
pushf
mov
clc
test
xchg
test
add
movs
imul
add
mov
outs
jmp
dec
jnp
cli
mov
fs
xchg
inc
ret
das
mov
dec
out
xor
div
or
cmp
es
cmp
pop
xchg
movs
icebp
loope
pusha
jp
mov
pop
loopne
ds
sar
push
fstp
cmp
rcl
fs
jmp
lods
add
dec
call
inc
adc
mov
xlat
ret
mov
xor
sub
aad
stos
(bad)
ja
repz
cmp
add
push
fs
push
dec
mov
push
rcr
bound
sub
sub
loop
jo
add
mov
add
jmp
retf
ret
ins
xor
push
dec
mov
jg
cld
jae
push
mov
fimul
jmp
popf
jae
ret
cmp
adc
push
or
jnp
into
and
and
mov
jo
neg
pop
mov
(bad)
jne
or
mov
aas
push
arpl
test
sbb
cld
mov
jb
fwait
in
fsub
ror
mov
(bad)
xchg
or
fld
ins
in
push
ins
sahf
or
jnp
sbb
adc
cmp
sar
ins
lods
call
les
bnd
inc
or
jl
loop
cli
retf
sbb
fiadd
lods
xchg
retf
xlat
je
adc
out
std
inc
inc
nop
neg
dec
pusha
jp
cmps
xchg
stos
pop
stos
or
and
int
and
(bad)
mov
xchg
icebp
adc
mov
pop
int3
loopne
(bad)
repnz
dec
cmp
mov
mov
fistp
and
shr
or
mov
das
mov
push
in
mov
cmps
gs
jp
jno
ret
aam
sbb
or
out
add
inc
sub
daa
fcomi
and
cld
mov
sub
jle
mov
sar
xchg
movs
lock
xchg
call
mov
fidivr
sbb
pop
fistp
xchg
add
pop
mov
loope
imul
push
(bad)
cli
ins
mov
ret
cmc
cdq
nop
push
into
sub
cmp
mov
ins
pop
into
aas
push
jg
gs
ret
add
pop
jp
mov
sub
sub
test
cwde
popf
push
add
jns
sub
add
mov
add
jg
cmp
add
push
jb
fcomp
mov
xchg
cmp
push
nop
push
outs
sbb
(bad)
stos
pop
movs
push
xchg
sar
lahf
dec
out
sub
(bad)
popf
mov
out
add
add
scas
loop
or
shr
dec
loop
in
jmp
mov
test
dec
pop
jle
add
and
lock
xor
and
aaa
ins
aam
ins
and
sub
scas
sub
xor
inc
sbb
nop
mov
xor
lahf
or
mov
adc
jnp
jnp
sub
test
fcomp
dec
xlat
pop
jbe
inc
sub
xchg
cdq
and
mov
daa
test
mov
mov
xchg
add
in
imul
xchg
xchg
push
ret
ins
ror
loope
pusha
jo
add
inc
es
sub
or
scas
jo
sub
das
pop
push
xchg
xchg
pop
in
mov
mov
std
mov
lea
in
add
jmp
inc
rol
and
mov
push
int
xchg
inc
mov
fwait
push
and
push
cli
out
test
ins
je
gs
mov
add
pop
push
fistp
fild
out
popa
mov
inc
imul
inc
cmps
cmp
and
mov
daa
fs
sub
push
jmp
sar
mov
inc
imul
sub
or
sub
pop
xchg
mov
push
imul
pop
sub
pop
ja
cli
retf
jo
dec
sub
imul
xchg
js
outs
outs
xchg
adc
pop
sub
aam
xchg
jmp
enter
mov
xor
xor
movs
sub
imul
push
xor
jne
adc
sbb
mov
mov
in
js
push
pusha
lds
mov
cdq
xchg
ret
jge
cmp
fild
push
scas
xchg
retf
adc
push
leave
retf
adc
fidivr
jb
jmp
aad
icebp
arpl
fcomp
add
jl
mov
movs
or
add
out
sub
call
or
sahf
and
pusha
ficomp
and
pop
aaa
push
dec
dec
and
pop
fistp
cmps
bound
enter
mov
xor
gs
jmp
jmp
add
ror
sub
out
cmps
arpl
pop
add
pop
adc
mov
adc
retf
push
add
gs
cmp
push
jmp
inc
shr
movs
jns
in
cmp
iret
mov
push
lahf
mov
mov
(bad)
jmp
mov
sbb
out
sub
dec
addr16
dec
pop
add
dec
test
or
movs
scas
cmp
mov
rol
cmp
outs
inc
xlat
stos
fisub
push
xchg
and
outs
rep
mov
int
aam
mov
or
xchg
cmp
movs
push
sub
adc
mov
xchg
popa
push
xchg
adc
mov
and
fs
paddsw
and
jae
pop
ins
pop
xchg
dec
mov
pop
xor
adc
iret
call
push
dec
and
loope
jbe
jmp
out
leave
mov
int
push
pop
jnp
or
sub
mov
(bad)
cmps
add
bound
jbe
loop
imul
je
push
xchg
xor
push
pop
rol
test
adc
(bad)
xor
add
xchg
fidiv
pop
mov
data16
fwait
mov
mov
inc
and
loopne
push
mov
fwait
loope
mov
dec
dec
mov
mov
jge
ficomp
cmp
or
mov
cmc
ja
mov
xchg
(bad)
jp
or
scas
inc
sti
scas
mov
jmp
push
inc
movs
jae
clc
jmp
and
pop
cmps
lea
sub
jmp
iret
mov
xor
mov
inc
rcl
sbb
jne
xchg
push
xchg
pop
out
push
jb
push
or
sub
cs
push
cli
or
in
push
jg
push
dec
jmp
xchg
je
xor
push
pop
pop
ds
in
ins
movs
dec
nop
ds
fld
pusha
lahf
pusha
loopne
int3
mov
fwait
or
ins
fwait
push
cwde
sbb
push
addr16
xchg
mov
xchg
(bad)
fdivr
mov
xchg
jl
out
cmp
fld
or
adc
inc
mov
mov
mov
inc
addr16
into
push
inc
enter
adc
dec
or
bound
out
push
in
sbb
pop
cmp
push
push
int3
scas
inc
test
and
add
shl
xchg
scas
add
mov
sub
mov
adc
cld
pop
inc
sub
cdq
dec
addr16
mov
lds
mov
test
push
cdq
movs
neg
loope
enter
lahf
sub
retf
cld
fst
push
pusha
and
push
mov
push
leave
push
sub
pusha
adc
pop
adc
repz
xor
mov
mov
cmp
xchg
mov
dec
sar
mov
lahf
mov
lods
out
shl
les
jmp
jmp
jbe
xchg
pop
inc
loopne
gs
scas
jp
aaa
fnstenv
push
jmp
stc
(bad)
(bad)
cmc
repz
and
push
pop
mov
mov
adc
pop
mov
push
pusha
pop
pop
f2xm1
sar
fidivr
out
push
retf
push
mul
jo
repz
add
mov
xchg
(bad)
or
add
mov
push
nop
ret
dec
stc
dec
mov
fwait
in
sbb
in
xchg
or
movs
dec
sbb
pop
inc
aaa
aam
push
adc
icebp
adc
in
mov
test
xor
inc
adc
ret
(bad)
dec
or
push
mov
mov
or
repz
movs
push
outs
jo
push
mov
or
nop
mov
mul
cmps
push
cdq
cmp
add
iret
fld
push
dec
xor
add
fiadd
pushf
jnp
dec
inc
shl
repz
js
stos
fst
push
movs
or
mov
nop
mov
loopne
icebp
lods
sar
pop
scas
jp
bound
dec
mov
idiv
jb
cmp
rcl
in
sbb
sub
cmps
mov
xor
mov
repnz
ds
cmps
ret
in
dec
mov
fst
shr
and
daa
es
lods
cmp
aam
lea
repnz
lahf
and
(bad)
mov
pop
mov
fwait
and
and
mov
inc
ds
repz
mov
lds
mov
push
fmul
sbb
inc
sub
je
clc
xchg
int
pop
into
cmp
or
imul
out
pushf
add
and
adc
test
clc
pop
loop
mov
cld
cwde
pcmpeqb
outs
xchg
sbb
mov
mov
jne
ficomp
dec
push
pop
pop
dec
in
sbb
mov
mov
jb
xchg
(bad)
dec
fadd
adc
arpl
jge
xchg
jae
pop
or
int3
imul
repnz
fdivr
dec
pop
cmc
out
cdq
inc
popf
gs
addr16
fcom
sahf
cs
fstp
lea
rcl
fild
push
(bad)
in
inc
jle
ins
mov
or
adc
xchg
adc
xchg
xor
and
hlt
(bad)
mov
or
mov
sbb
sub
mov
aam
mov
ds
xchg
xchg
push
sbb
or
xchg
mov
sbb
aad
das
pop
in
cld
call
ss
xchg
mov
dec
sbb
jmp
push
dec
bnd
mov
or
and
add
sbb
and
fstp
dec
inc
jmp
push
out
cmp
dec
mov
mov
(bad)
or
fstp
sbb
daa
inc
test
mov
jmp
fdiv
in
xchg
cwde
mov
out
(bad)
pop
shr
mov
dec
add
mov
stc
and
xchg
sbb
mov
mov
iret
test
push
push
cmp
hlt
loop
and
add
inc
icebp
mov
fild
push
(bad)
in
and
lea
popf
fsubr
lock
sar
sub
push
scas
out
popa
cmp
int3
jle
call
ins
mov
push
mov
cmp
rcr
add
xchg
pop
jmp
loope
sub
or
add
test
push
cmp
or
rol
jno
inc
mov
jno
ja
shl
rol
mov
xchg
hlt
pushf
push
retf
loop
imul
and
dec
ficom
mov
add
and
jmp
je
lods
mov
cmps
sbb
add
repnz
ja
(bad)
fild
scas
or
sahf
iret
iret
or
aaa
inc
push
jmp
lods
dec
mov
fidivr
cli
sbb
xor
mov
popa
rcl
cmp
and
jl
dec
lods
jg
in
(bad)
xbegin
stos
cs
addr16
jecxz
mov
sub
push
xchg
fdiv
mov
pushf
dec
pop
aam
(bad)
into
movsx
adc
xchg
mov
mov
hlt
mov
call
adc
pop
ja
mov
mov
out
adc
std
xchg
fistp
sub
into
cmp
push
mov
jmp
ja
add
shr
jne
mov
sbb
cmp
dec
and
xchg
in
addr16
pop
mov
lds
mov
imul
mov
fwait
cmp
add
cwde
push
or
out
sbb
ins
lea
mov
mov
sub
mov
lahf
es
mov
push
sbb
cmc
cmp
push
pop
mov
bt
jnp
imul
or
outs
enter
inc
ds
popf
xor
cmps
fsubr
pop
mov
push
inc
inc
pop
and
(bad)
sbb
mov
in
inc
hlt
cdq
jge
shl
inc
jmp
aas
fcmovnbe
mov
(bad)
jle
jmp
xor
sub
pop
mov
cs
cmp
out
(bad)
out
pop
push
test
fmul
or
jecxz
cmp
aas
aad
inc
pop
pop
shl
cmc
xchg
fnstsw
aaa
add
mov
jge
push
pop
fcom
inc
dec
inc
mov
jmp
jp
or
arpl
sub
or
div
push
sbb
ret
push
in
mov
js
arpl
fcomp
stc
nop
sub
mov
mov
popa
dec
pop
inc
pop
jge
scas
sar
mov
xchg
inc
sti
push
or
aam
ret
sbb
xor
jmp
push
or
hlt
in
adc
mov
push
bound
repz
add
xor
(bad)
sbb
dec
ins
inc
xor
movs
jno
mov
mov
xor
dec
xor
std
sahf
mov
shl
push
pop
sbb
fs
inc
adc
icebp
pop
and
sub
adc
pop
jmp
and
stos
lods
xchg
cli
jo
sbb
adc
sahf
mov
push
jmp
neg
out
fsub
mov
xor
add
cmp
scas
mov
cwde
(bad)
dec
(bad)
sbb
out
cmp
sahf
stos
fs
push
les
cmp
ret
test
and
xchg
mov
test
outs
inc
xor
mov
dec
push
push
xchg
pop
(bad)
shr
scas
cmp
add
and
jo
retf
xchg
cmp
jg
and
fldenv
or
call
push
(bad)
iret
js
and
xchg
sbb
adc
and
imul
faddp
mov
daa
push
lods
cmp
add
adc
or
retf
push
xchg
adc
mov
dec
aad
sbb
inc
xchg
dec
dec
adc
out
lods
mov
fcom
fidivr
mov
inc
sahf
or
or
loop
push
fwait
sbb
int3
sub
xchg
clc
movs
rcl
jge
retf
dec
xchg
test
fistp
jecxz
loopne
test
push
cmp
sti
ss
jmp
cmp
clc
fmul
mov
push
add
xor
xchg
mov
scas
mov
sub
push
es
retf
bound
rcl
or
(bad)
cmc
pop
shl
int3
mov
mov
inc
data16
ins
outs
out
das
mov
mov
push
sbb
pop
bound
adc
pop
imul
fcomp
dec
in
jg
fdivr
push
cmp
pop
adc
imul
leave
sbb
ja
jl
mov
ror
jae
lock
mov
push
movs
daa
or
out
fwait
push
enter
mov
rol
cdq
popf
dec
aas
dec
adc
(bad)
adc
popf
std
dec
test
push
cld
mov
dec
sub
inc
jnp
cmp
jno
cmps
lods
pop
fnstcw
or
xor
or
xor
and
imul
ror
sbb
imul
clc
sub
test
fiadd
push
cmp
pop
nop
into
ret
adc
xor
pop
xor
jl
leave
stos
shr
adc
cmp
dec
jno
aam
enter
ret
mov
out
repnz
icebp
xchg
pop
gs
cdq
cmp
add
push
pop
fidivr
adc
sub
push
cwde
stc
fs
dec
sub
or
dec
pop
jno
cmps
aad
xchg
icebp
xchg
push
sub
inc
retf
dec
mov
push
pushf
mov
cs
ffreep
out
(bad)
in
imul
pop
mov
xchg
dec
repnz
stos
mov
pop
les
and
fsubr
cmp
into
jg
jo
outs
ins
adc
cdq
mov
add
dec
daa
adc
jno
xlat
out
pop
sbb
sub
mov
pop
jno
mov
daa
sti
cmp
test
sar
sar
dec
and
sub
inc
and
ja
xchg
stos
sbb
jle
test
in
xor
mov
retf
je
rcl
aaa
xchg
pop
pop
hlt
push
mov
mov
pop
pushf
jne
adc
mov
(bad)
mov
das
pop
nop
push
ficomp
mov
or
push
cmps
and
ins
push
movs
mov
push
adc
mov
xor
sbb
or
push
dec
dec
stc
pop
cmp
imul
or
xor
outs
xlat
clc
dec
gs
mov
xchg
cdq
(bad)
jbe
push
pop
push
adc
test
or
rcr
push
inc
sub
inc
adc
adc
movs
inc
mov
xor
pop
xchg
push
or
in
cdq
cs
cdq
sub
js
lods
or
in
mov
xchg
retf
sub
push
(bad)
mov
mov
fstp
out
pop
xchg
add
imul
movs
xchg
adc
xchg
out
(bad)
lods
cmp
xor
xchg
call
fdiv
sar
and
or
mov
pusha
jmp
push
cmps
push
ins
repnz
add
pop
shl
(bad)
dec
add
inc
lods
mov
push
nop
mov
mov
push
outs
rcl
in
push
test
jecxz
mov
and
test
cmp
das
rcl
lock
mov
dec
xor
fisubr
add
aam
leave
dec
clc
pop
movs
mov
add
jns
mov
push
pop
(bad)
or
or
ins
jmp
dec
mov
mov
and
pop
jmp
pop
adc
sub
sbb
xor
pop
jae
ds
xor
loope
jmp
mov
jge
pop
imul
out
test
iret
data16
pushf
mov
sbb
mov
push
add
push
mov
jbe
cmps
push
pop
call
xchg
sar
xchg
iret
xor
or
xchg
out
inc
xchg
hlt
cwde
jp
int
add
jg
pop
mov
ins
call
push
repz
xchg
adc
mov
mov
test
imul
adc
clc
ficomp
add
jno
cwde
push
sub
stos
mov
xchg
inc
xor
fstp
popf
xchg
int3
out
popa
mov
cmp
aaa
jle
jmp
mov
pushf
pop
imul
repz
sahf
xor
xor
mov
aam
(bad)
and
stc
mov
pop
inc
cwde
mov
xchg
xlat
jmp
sub
scas
push
sbb
lods
jb
adc
jmp
mov
ror
pmaddwd
je
test
sbb
or
aas
adc
cmp
out
out
std
(bad)
sbb
clc
sbb
push
mov
retf
adc
imul
cmp
add
mov
or
or
shr
mov
clc
or
loopne
add
aam
fs
xchg
pushf
jecxz
mov
add
and
adc
push
shl
test
(bad)
dec
jecxz
nop
je
not
push
pop
mov
or
mov
rcr
das
pop
pusha
cmc
adc
(bad)
mov
lds
dec
orps
cs
cmp
sub
cmc
mov
ja
and
push
pusha
xlat
jmp
in
je
or
das
dec
div
lock
ds
in
test
aad
jge
test
leave
(bad)
cmc
push
cmp
push
aaa
(bad)
in
pop
xchg
fmul
mov
mov
arpl
inc
ss
movs
sti
push
or
movs
mov
jecxz
popa
imul
fbld
popa
mov
aam
pop
popa
dec
sub
fdivr
popa
xor
stc
sbb
jo
cmp
enter
in
mov
pop
test
pop
in
ret
mov
imul
jo
cmps
jne
(bad)
xchg
lea
mov
jle
add
cld
xchg
jbe
xchg
loopne
mov
dec
std
adc
xor
fdiv
jns
(bad)
or
pop
daa
jmp
not
cli
lahf
shr
fstp
xchg
imul
aad
pop
sti
xchg
push
jbe
retf
shl
mov
cmp
sbb
adc
push
fst
add
jmp
(bad)
mov
cli
in
mov
xchg
or
aad
push
stos
xor
cmp
int3
jns
sbb
loop
imul
lea
jae
dec
lds
adc
xor
xchg
ret
test
fcomp
cdq
and
push
cmp
mov
mov
in
pop
hlt
or
retf
pop
int3
sub
inc
add
mov
jmp
movs
sbb
mov
pusha
repz
mov
push
mov
push
test
pop
iret
loopne
lock
pushf
test
mov
lods
inc
sahf
int3
loope
pop
and
mov
mov
mov
test
push
ja
pop
xchg
xor
pop
arpl
mov
sbb
xor
gs
rol
jge
iret
retf
xchg
or
mov
ss
leave
and
retf
ss
push
ins
movs
mov
ds
adc
test
fadd
arpl
ss
dec
in
imul
sahf
dec
push
cmp
popf
jnp
and
or
inc
inc
add
loop
xor
mov
in
inc
popf
add
adc
int
jb
push
and
popa
mov
adc
adc
scas
mov
add
inc
cmps
lods
in
stc
lea
loopne
lea
(bad)
je
jl
in
test
in
clc
or
jmp
cmp
xor
xor
or
(bad)
(bad)
stc
in
ror
adc
fdivr
and
and
imul
rep
jl
cmp
fld
dec
(bad)
in
lods
hlt
adc
in
clc
stos
pop
nop
push
jl
sub
mov
xchg
inc
mov
inc
dec
jno
not
or
int3
loope
cmps
sub
rcr
jae
aad
data16
lods
lock
dec
lock
adc
imul
inc
ds
inc
adc
jg
cli
stc
adc
retf
in
cdq
test
jmp
add
add
aam
mov
mov
aam
and
into
jge
int
call
ret
aas
and
pop
loope
inc
out
in
xchg
pop
mov
bound
int3
sbb
retf
dec
cdq
outs
mov
dec
aad
adc
loopne
adc
leave
je
aaa
jl
ret
push
xor
mov
cmp
mov
test
fdivr
mov
push
pop
jbe
cmp
mov
sub
jo
daa
sub
mov
cmps
gs
fcmove
push
(bad)
sub
dec
push
pop
jne
sbb
(bad)
in
test
ss
adc
inc
daa
stos
xchg
lock
cwde
(bad)
mov
cmp
ret
scas
inc
xchg
adc
jp
cmps
mov
jo
xor
lahf
xlat
je
sbb
pop
push
loopne
push
loop
scas
cld
push
dec
fucomi
out
jecxz
sub
mov
ins
pmaddwd
and
sbb
int
sbb
dec
inc
cmp
push
jno
fild
add
lods
cmps
push
jecxz
lahf
adc
jle
push
dec
test
jmp
add
test
xor
test
jb
clc
mov
sahf
fmul
cs
in
sbb
cmp
aas
les
inc
shl
cmp
hlt
ss
popf
pop
int3
push
retf
sub
fcmovbe
cmp
ins
pop
dec
cmp
push
sbb
pusha
pop
sub
ret
dec
js
pusha
sbb
rol
or
into
push
adc
enter
push
jb
pusha
xchg
add
xchg
movs
push
enter
push
scas
dec
add
stc
mov
das
push
into
call
ins
dec
or
mov
test
mov
iret
sub
sbb
mov
xor
movs
add
pop
xor
fcomp
adc
or
(bad)
sahf
shr
in
jbe
sub
outs
scas
adc
xor
pop
ror
mov
shl
mov
jmp
or
dec
call
nop
push
and
mov
scas
inc
inc
dec
rcl
cmp
bound
jb
mov
jg
in
mov
push
(bad)
jp
lds
test
cmp
cmp
xor
arpl
scas
ins
(bad)
dec
lock
dec
ret
ins
cmp
sub
adc
aad
repz
test
test
cmp
fdiv
(bad)
(bad)
pusha
stc
jbe
mov
mov
push
(bad)
aam
mov
shl
pop
xor
inc
call
mov
pop
outs
aam
in
imul
xchg
push
fs
loopne
loop
pop
jne
pop
ja
outs
iret
into
mov
add
outs
stos
das
xlat
call
xchg
lahf
xor
call
fidiv
adc
jp
pop
ins
imul
adc
jns
rcr
ret
call
das
daa
pop
sbb
rol
mov
neg
fistp
cmp
popa
clc
clc
ds
scas
adc
addr16
hlt
adc
nop
lahf
lds
call
pop
fwait
inc
das
xchg
fs
xor
retf
rcr
pop
fsubrp
jnp
push
add
push
jmp
mov
mov
iret
jo
jno
retf
or
sar
scas
lahf
inc
les
cmp
pop
loope
adc
mov
imul
mov
pop
outs
xchg
jb
mov
mov
ret
pop
test
es
shr
int
retf
jmp
xchg
sub
icebp
dec
int
aas
mov
retf
add
aam
pop
add
push
fstp
sbb
xor
xor
cmc
push
outs
add
jge
outs
aam
or
mov
and
inc
sub
test
mov
xchg
retf
xchg
in
mov
add
adc
dec
mov
pop
scas
mov
xchg
push
dec
add
ja
scas
push
or
or
aad
jecxz
ret
stos
sub
repz
dec
xchg
adc
nop
jbe
and
outs
cmp
aaa
xor
or
and
mov
outs
inc
add
jns
cmp
std
in
push
les
jns
dec
shr
mov
les
mov
push
and
pop
push
jl
jns
push
outs
fs
cld
int
scas
mov
or
and
daa
test
lock
jnp
aam
(bad)
jmp
mov
push
dec
repnz
test
(bad)
and
sub
lock
ins
call
pop
push
xchg
cmp
ja
imul
neg
aaa
sub
in
add
add
and
cmps
shl
jns
xor
dec
fimul
dec
movs
(bad)
outs
jge
dec
sub
shl
popa
sub
cmp
or
xor
popa
pop
mov
push
xchg
xor
enter
push
sub
cmp
popf
sbb
in
xlat
sbb
lock
shr
jge
mov
push
and
push
in
push
and
mov
mov
arpl
add
pop
out
mov
retf
sub
mov
stc
mov
push
cmp
ret
add
jecxz
(bad)
sub
jno
push
mov
push
ret
in
dec
cdq
cmp
mov
sar
mov
fild
adc
jnp
sbb
sbb
pusha
and
jo
pop
cmp
nop
cld
add
xchg
int3
call
dec
mov
dec
aas
xor
dec
push
in
sbb
shl
imul
es
lock
push
pop
out
push
(bad)
mov
ret
ja
adc
fiadd
and
pushf
mov
into
lods
dec
jmp
sbb
(bad)
pop
repnz
(bad)
cld
pusha
xor
imul
pusha
adc
push
push
mov
xchg
and
or
pop
ss
sub
arpl
pop
mov
enter
inc
(bad)
rol
(bad)
jmp
dec
jmp
cwde
sub
fisubr
imul
loop
aad
inc
lea
icebp
fucomp
fdivrp
jnp
jle
adc
sub
jmp
or
adc
sbb
aam
push
retf
push
adc
and
xchg
xchg
lods
out
pop
dec
mov
mov
mov
sti
inc
stos
call
icebp
sub
push
rcl
out
imul
stos
push
mov
out
bound
sub
dec
mov
jg
dec
xchg
mov
inc
jmp
(bad)
xchg
mov
sbb
mov
jo
loopne
xchg
jns
xchg
test
std
ins
sbb
push
sub
mov
mov
test
jno
sti
test
push
inc
daa
jne
push
jg
xor
mov
sbb
out
mov
(bad)
jmp
loop
adc
je
fcmovne
es
test
cmp
pop
mov
mov
dec
pop
pop
jl
inc
leave
(bad)
out
dec
push
mov
xchg
mov
aam
lahf
aam
pop
das
xor
pop
in
shl
adc
imul
scas
cmp
inc
lods
and
fmul
ins
adc
push
inc
cdq
or
cmp
push
out
aad
mov
in
cmp
dec
cdq
adc
mov
(bad)
(bad)
shl
cmps
dec
pop
ret
repz
inc
icebp
cmc
lock
jb
test
or
out
outs
pop
mov
(bad)
cli
sub
out
sbb
iret
xchg
stc
xor
daa
sbb
leave
dec
fimul
(bad)
jmp
push
sub
ja
dec
js
movs
out
jns
jne
hlt
ds
imul
mov
popf
shr
adc
fst
and
(bad)
cmp
dec
mov
ins
add
or
out
das
push
jns
pop
rol
jl
stc
sbb
adc
or
mov
sub
jp
je
fdivr
(bad)
enter
js
cwde
push
das
out
retf
mov
repz
mov
mov
inc
ror
icebp
pop
adc
push
push
in
push
add
cmp
rol
add
pop
out
push
shl
push
nop
in
sub
movs
or
enter
iret
xchg
sbb
mov
cmc
pushf
or
dec
inc
xchg
inc
sbb
jns
xchg
retf
mov
and
leave
sar
cmps
pop
xchg
cmp
cli
jecxz
mov
xchg
jg
cmovbe
push
cmc
or
(bad)
test
sbb
inc
sub
jbe
xor
sahf
push
retf
or
retf
fidiv
mov
repnz
push
xor
add
adc
(bad)
scas
mov
js
dec
in
test
mov
and
ret
call
int3
loop
or
js
repz
dec
repnz
sbb
nop
shr
(bad)
shl
push
jp
gs
xchg
call
hlt
stc
lds
(bad)
retf
or
scas
jb
(bad)
or
sub
cmp
mov
out
xor
adc
push
xor
(bad)
sbb
add
push
lds
mov
mov
push
sub
xor
add
dec
mov
adc
sbb
shl
dec
jp
cld
mov
adc
or
mov
dec
test
sub
inc
and
jmp
scas
pop
out
loop
push
sub
mov
fxch
aaa
or
in
shl
fcomp
xchg
and
push
dec
in
jne
ficom
lea
(bad)
aaa
out
add
sub
cli
inc
sbb
mov
jmp
add
cwde
inc
or
loopne
xchg
sub
xor
mov
lahf
popa
add
leave
int
rcl
cli
es
ins
inc
repz
or
mov
xchg
in
jmp
mov
dec
sub
in
outs
mov
mov
icebp
sub
test
push
mov
(bad)
lods
rcr
add
out
adc
jp
mov
pop
jge
adc
nop
cmp
aam
sub
adc
xchg
sti
scas
fwait
pop
loopne
sub
and
jg
mov
pop
xchg
pop
and
push
jp
jmp
or
or
cmp
(bad)
or
xor
push
mov
retf
mov
dec
ins
jmp
cmp
ja
sar
and
daa
mov
sti
adc
cmp
mov
fs
stc
int3
jno
out
jns
loope
sahf
dec
cmp
jmp
test
fdiv
inc
adc
fmul
pop
xchg
inc
push
mov
in
lds
std
mov
ss
push
jmp
push
mov
ja
sub
and
mov
push
inc
(bad)
mov
mov
add
ror
fild
push
ficomp
std
add
idiv
sbb
or
mov
adc
or
jno
lahf
lds
adc
jo
aaa
cmp
mov
fwait
pop
popf
aaa
jns
dec
jl
ja
cmp
aas
pop
sbb
xor
cdq
ins
arpl
adc
adc
daa
and
and
cmps
mov
ja
pop
xor
fmul
jns
push
shl
pop
push
repnz
cld
and
and
shl
test
dec
aaa
sbb
jle
(bad)
inc
mov
sbb
aaa
mov
lock
add
(bad)
mov
push
mov
dec
xor
ja
sub
out
and
push
cwde
ins
adc
iret
cld
xchg
ins
dec
inc
mov
xor
mov
(bad)
lds
or
not
sbb
cmp
data16
xor
dec
xchg
dec
test
cld
outs
cmp
add
cmp
popa
sahf
inc
pop
sub
mov
jle
fnstcw
dec
mov
xchg
push
jb
sub
fs
push
xor
test
ja
mov
sub
mov
retf
arpl
frstor
add
in
ins
loop
les
mov
push
aas
fst
xor
push
rol
in
sti
in
mov
xchg
adc
adc
jo
imul
inc
jmp
sbb
icebp
push
vcvtsi2sd
out
fidivr
dec
push
pop
push
shr
push
mov
call
mov
and
push
in
mov
fild
sbb
mov
call
lods
imul
nop
sub
sbb
jg
icebp
adc
dec
mov
mov
enter
shl
cmp
mov
push
jecxz
cmps
imul
int3
gs
fdivr
sub
xor
sbb
stos
les
sub
int
sbb
jle
aad
or
xor
or
jns
sbb
div
or
popa
ror
push
or
ja
ret
mov
jb
jp
retf
dec
jb
mov
mov
xchg
ins
cwde
add
or
mov
scas
push
inc
pop
mov
dec
cmps
sub
cmps
add
stos
sub
daa
test
movs
sti
pop
mov
xor
jmp
cmp
mov
sub
call
arpl
inc
pushf
gs
rcl
xlat
mov
fmul
gs
mov
push
out
out
inc
add
out
push
imul
jo
aaa
fwait
cmp
push
or
cmp
dec
xor
repz
push
test
pushf
cwde
add
mov
mov
pusha
loope
rcr
scas
call
pop
dec
pop
jecxz
(bad)
in
adc
and
cmp
mov
test
repz
pop
jns
(bad)
stos
das
and
loopne
push
and
pop
pop
adc
sti
in
ror
jp
jae
(bad)
jg
(bad)
jne
jmp
and
push
mov
cs
dec
in
into
les
xchg
and
adc
mov
cmp
(bad)
in
cld
out
pop
leave
outs
rcr
inc
mov
and
pusha
shl
jg
addr16
and
sub
call
mov
sbb
gs
add
pop
(bad)
xchg
pop
ss
into
inc
pop
mov
sahf
movs
movs
sbb
xchg
sbb
push
ins
lahf
sbb
jle
inc
js
jecxz
ins
cwde
xchg
push
and
pop
mov
or
adc
fidivr
adc
add
cld
mov
inc
icebp
push
sbb
push
outs
xchg
out
cs
inc
and
and
inc
aaa
in
xchg
cmps
into
jl
jl
ins
adc
idiv
push
pop
or
mov
imul
movs
stc
adc
cmc
jl
add
jmp
stc
adc
sub
loop
jmp
xor
not
mov
cmp
jl
in
popa
call
fwait
outs
pop
mov
push
mov
out
call
jmp
popa
mov
call
arpl
xlat
mov
xchg
fdiv
push
pop
push
cwde
scas
ss
xchg
mov
fnstcw
loope
pop
enter
cs
movs
pop
and
out
xchg
cmp
mov
shl
je
and
(bad)
in
or
mov
pop
sti
cmps
xlat
jecxz
sbb
push
dec
lock
xor
cwde
pop
jbe
push
xlat
mov
fwait
xor
mov
frstor
addr16
imul
jmp
mov
mov
xchg
out
out
or
jle
test
mov
int3
popa
mov
jb
cmp
xor
and
or
repz
mov
mov
push
mov
fwait
mov
mov
sti
outs
js
mov
jecxz
adc
add
lea
test
dec
push
cli
aam
aas
(bad)
nop
cmp
fst
mov
retf
push
adc
mov
jmp
jae
fstp
or
(bad)
repnz
std
aam
loope
aam
clc
cmps
and
inc
mov
test
or
out
loope
lods
jb
mov
inc
jmp
cmp
push
inc
lods
ds
pop
mov
xchg
adc
cwde
push
ins
and
and
and
lahf
and
sub
aaa
sbb
test
aam
cmps
add
scas
fwait
and
lock
push
jecxz
test
jg
xchg
mov
push
and
ret
adc
cmc
ss
out
in
adc
adc
pop
pushf
lahf
shl
loop
jbe
je
loopne
adc
mov
dec
adc
jecxz
adc
pop
repnz
sbb
sahf
std
(bad)
cmp
out
jae
push
sbb
mov
hlt
pop
ret
adc
cmp
ins
xchg
lds
add
outs
rcr
add
setns
pusha
inc
mov
add
clc
loope
in
mov
jmp
(bad)
addr16
cmp
nop
push
sub
cmp
jb
ficom
(bad)
cmp
in
(bad)
sbb
adc
inc
sahf
add
mov
gs
push
mov
pop
jmp
sbb
push
add
(bad)
jnp
sub
and
mov
aad
xlat
xor
mov
xchg
retf
into
or
aaa
jp
in
mov
lea
push
and
enter
aaa
pop
cmp
mov
xchg
mov
push
sub
pusha
inc
add
imul
add
push
retf
sub
mov
aaa
xor
jle
scas
jecxz
movs
xchg
stos
(bad)
retf
das
lds
sub
mov
fidiv
sub
jle
std
or
mov
fld
mov
jecxz
addr16
ret
cmps
test
add
cdq
das
inc
sub
xchg
aad
repnz
mov
cmp
and
test
bound
test
dec
mov
mov
jbe
pop
and
add
pop
dec
cmp
add
add
push
imul
(bad)
scas
retf
inc
add
add
outs
lods
je
call
out
fiadd
ss
ins
fdiv
xor
shl
mov
iret
ins
add
cmp
in
sbb
sub
mov
push
out
cmp
cmp
mov
mov
push
ret
jle
nop
nop
jle
cmp
fstp
cmp
lds
sub
and
std
idiv
dec
inc
pop
xchg
cdq
(bad)
jmp
xor
jnp
hlt
(bad)
xor
mov
or
int
adc
dec
pop
cmps
pop
(bad)
data16
addr16
and
add
pop
mov
ja
xor
xchg
mov
and
hlt
shl
push
jg
imul
and
idiv
stos
and
cld
lock
jge
pop
xor
fcom
dec
arpl
mov
mov
and
movs
pop
mov
adc
jmp
ins
jno
retf
pushf
xor
adc
push
inc
imul
pop
aad
(bad)
into
mov
mov
iret
(bad)
inc
sub
xchg
ret
std
jg
and
in
ins
jecxz
xor
in
xchg
mov
mov
pusha
cmpps
out
fdiv
movs
xor
mov
cmp
pop
xchg
in
jb
push
sahf
add
fs
dec
rol
inc
cmp
cmp
jge
aam
fld
xor
mov
adc
jge
xor
(bad)
in
mov
test
sub
jmp
(bad)
pop
cld
outs
out
sbb
fcomp
ret
(bad)
out
test
push
call
cmp
popw
mov
sbb
adc
push
fiadd
xchg
xchg
icebp
ror
sub
sbb
test
mov
(bad)
icebp
jl
pop
cmp
ror
cmp
mov
shl
adc
movs
xchg
jae
in
sbb
inc
mov
(bad)
das
dec
or
ret
fiadd
jge
pop
sbb
repz
mov
jp
loope
rcl
cwde
xor
xor
xor
cli
or
push
and
test
mov
cmp
xchg
(bad)
add
(bad)
retf
int
inc
cs
data16
arpl
and
aad
dec
(bad)
je
push
bnd
sbb
fidiv
inc
popa
xor
es
cmps
je
mov
dec
or
loope
mov
inc
fisubr
or
bnd
pop
sbb
sahf
cs
jg
test
push
cld
jbe
sbb
sub
mov
push
ss
mov
jae
mov
dec
dec
mov
add
(bad)
cs
sti
call
cld
xor
lds
(bad)
retf
fmul
int3
ficom
jo
jne
inc
ror
add
cwde
add
fmul
or
out
sar
mov
dec
sbb
scas
pop
(bad)
push
xor
or
es
ror
xor
mov
inc
out
xchg
lock
pop
loope
jg
jmp
mov
imul
ds
invd
sbb
jmp
inc
rol
push
(bad)
adc
out
push
mov
mov
push
aam
int
out
fst
repz
mov
fdivp
cmps
popa
movs
icebp
add
cmp
sahf
push
mov
clc
jg
int
lods
shl
add
adc
inc
out
xchg
cmp
into
scas
scas
fadd
loope
enter
mov
dec
fisttp
push
add
repnz
or
cmc
or
jmp
mov
call
das
cwde
mov
jp
inc
movs
aad
mov
xchg
pop
push
xor
sub
mov
xchg
ret
mov
sbb
add
fucomi
repnz
mov
and
pop
dec
cdq
and
cmp
cdq
or
bound
cmp
sbb
push
mov
fild
push
in
pop
dec
fwait
movs
mov
lods
jl
adc
adc
pop
mov
xor
retf
dec
nop
mov
cmp
imul
jne
retf
mov
dec
mov
add
aad
jp
stos
sbb
cmp
dec
cmp
retf
xchg
retf
dec
stos
dec
push
js
call
inc
mov
cmp
add
xor
addr16
(bad)
pop
mov
sub
stos
mov
(bad)
loope
xchg
lock
push
int3
pop
lods
sti
das
pop
and
stc
xchg
cwde
ss
mov
pop
mov
fadd
mov
bt
cwde
bound
xlat
je
adc
sub
fld
out
aad
sbb
or
and
inc
and
push
sbb
(bad)
mov
repz
int
add
mov
inc
in
xchg
lea
dec
mov
frstor
xchg
lods
jp
adc
inc
aaa
out
jg
push
repz
aam
bound
into
lahf
jge
mov
cli
nop
movs
ins
adc
jne
mov
push
retf
inc
stos
mov
cld
int3
mov
sub
loope
mov
fs
popf
pop
test
xor
pop
mov
in
mov
cmc
(bad)
(bad)
fld
push
and
jg
arpl
jmp
inc
push
sbb
jmp
jle
mov
mov
inc
sbb
cmp
arpl
lods
add
xchg
inc
push
dec
push
mov
int
movs
int
lea
aaa
inc
pop
stos
add
push
shl
xchg
or
or
and
shl
call
and
nop
mov
mov
inc
test
sub
xchg
push
inc
ss
mov
ds
sahf
imul
add
imul
les
pop
pop
lock
fisttp
sub
mov
xor
aaa
jbe
push
es
stos
push
dec
inc
pop
mov
dec
pop
out
xchg
cmp
and
loop
xchg
sti
scas
xchg
fs
dec
ds
movs
pop
push
dec
ret
stc
rol
sbb
lahf
push
push
or
mov
cmp
xor
mov
and
mov
push
jne
adc
inc
fild
ss
sub
or
dec
add
aam
cmp
xor
xchg
out
mov
cmp
push
ret
and
jmp
adc
jge
pop
retf
nop
push
dec
jmp
ret
jg
ret
aad
rol
xchg
push
pop
int
(bad)
cwde
outs
in
out
xchg
(bad)
mov
mov
mov
jmp
mov
xchg
and
hlt
in
mov
jae
add
leave
add
cmp
(bad)
xor
jmp
outs
and
pop
mov
ins
xor
ficomp
cmps
dec
jle
mov
imul
test
scas
es
mov
cmp
(bad)
jnp
sbb
pop
cmp
push
fisttp
out
in
sub
lods
(bad)
outs
push
xchg
mov
dec
xchg
mov
aas
je
inc
dec
popa
rol
cdq
or
cmps
mov
xchg
mov
adc
lods
out
sub
ds
in
mov
outs
xchg
inc
sub
out
pop
sbb
inc
dec
pop
test
sbb
pop
sbb
stos
sbb
sbb
test
mov
out
shr
fs
mov
out
stc
call
test
mov
pop
xor
mov
pop
push
nop
xlat
push
sub
push
push
jmp
retf
out
nop
in
in
retf
loope
push
out
ja
push
scas
fisttp
cmp
sahf
outs
lods
rol
inc
setns
or
sub
or
xchg
jl
push
imul
push
mov
xor
push
stos
aad
lahf
jmp
sar
fnsave
stc
cmp
or
add
dec
std
cli
push
imul
mov
dec
adc
mov
adc
mov
shl
adc
and
mov
add
mov
cli
and
and
scas
jmp
retf
fbld
cmc
jecxz
popf
dec
stos
fisttp
push
pop
test
ds
out
sub
outs
jnp
adc
jnp
data16
push
sub
inc
sbb
stc
jno
pop
cmps
daa
mov
test
arpl
mov
inc
add
dec
js
int
in
push
outs
movs
push
or
imul
(bad)
jg
into
sbb
adc
jle
sbb
jmp
jo
mov
mov
cmp
xor
call
inc
arpl
out
add
inc
es
cmps
sti
test
push
add
xor
retf
or
outs
sub
test
lods
push
mov
pop
outs
mov
xchg
mov
sbb
push
push
rol
xor
mov
outs
ss
sub
fcom
ror
out
stos
pop
mul
test
sub
je
sti
repz
stos
cmc
fsubr
and
add
sub
pop
pop
nop
and
mov
fcom
icebp
pop
outs
pop
out
xor
mov
sti
xlat
add
loope
pop
shl
adc
xchg
add
xor
mov
(bad)
jecxz
sub
sbb
push
jmp
mov
xor
sub
xor
inc
loopne
into
push
mov
mov
test
imul
das
imul
and
fld
hlt
movs
adc
sbb
fld
ret
mov
pop
xchg
and
mov
cmp
or
ins
shl
lods
or
out
xchg
mov
sbb
inc
jp
adc
popa
out
mov
fmul
or
fild
stc
gs
lods
dec
addr16
inc
push
cs
imul
mov
data16
and
dec
ins
retf
das
out
pop
push
out
xchg
adc
pushf
mov
pop
adc
pop
ds
mov
cmp
stos
jmp
mov
sub
fldenv
call
mov
mov
pop
test
mov
dec
ds
and
dec
int
dec
mov
mov
cmp
shr
sbb
iret
fcom
call
rcr
push
jno
jg
cs
(bad)
mov
cmps
push
loope
cwde
mov
inc
lds
leave
in
pop
sbb
stc
das
getsec
xchg
mov
push
add
adc
scas
xchg
xchg
rcl
sti
ret
mov
xchg
enter
or
mov
push
push
sbb
lds
dec
cmp
(bad)
(bad)
pop
int
dec
rol
ss
xchg
xor
loope
sub
fs
movs
push
push
popf
fidiv
iret
ret
jb
jmp
or
adc
and
pop
hlt
pop
ror
cmp
daa
and
addr16
push
xchg
bound
jne
sti
mov
pop
(bad)
(bad)
xor
std
push
lea
mov
mov
fwait
retf
fsub
pop
mov
mov
sub
or
dec
sub
push
scas
inc
(bad)
dec
gs
loopne
adc
xchg
test
loope
imul
std
push
dec
cmp
mov
dec
stos
dec
add
sbb
outs
push
adc
lods
in
lock
ds
cmp
mov
mov
das
adc
dec
shr
mov
sbb
inc
ins
add
jl
or
stos
mov
adc
and
and
mov
cmps
or
xlat
fsub
data16
out
sbb
scas
ins
sub
je
in
cmp
mov
lods
sub
jecxz
retf
rol
popf
iret
xor
xor
cmp
xchg
push
sar
loop
fidivr
inc
add
retf
or
mov
or
ror
mov
icebp
or
retf
push
loop
add
xchg
stos
jmp
ss
sbb
xlat
out
in
mov
fs
and
lods
push
sbb
ret
mov
jmp
shr
xor
sub
pop
push
inc
shl
enter
cmps
add
and
mov
les
pop
and
(bad)
retf
jnp
ins
daa
push
ds
pop
sbb
jmp
xchg
repz
jmp
push
or
or
sbb
jp
sahf
mov
push
in
leave
into
sub
jne
inc
enter
and
jp
leave
inc
stos
adc
cmp
std
mov
jae
add
jl
adc
jae
stc
in
or
or
shl
pop
ins
aad
inc
(bad)
neg
jmp
sar
iret
adc
mov
in
and
out
jecxz
sti
xor
fcmovne
add
or
jecxz
add
sbb
pop
push
or
add
call
stos
sbb
mov
xchg
sbb
cs
and
dec
jne
xor
and
retf
xchg
inc
add
shl
pop
fwait
or
ret
in
ret
out
std
adc
xor
fnstenv
jnp
adc
(bad)
jle
and
iret
leave
outs
add
cmp
push
(bad)
popf
jmp
cmp
(bad)
fwait
fwait
and
inc
sub
mov
mov
aas
and
clc
lea
pop
mov
(bad)
dec
(bad)
pop
push
mov
movs
cli
fadd
mov
pop
inc
or
xor
int3
sbb
pop
mov
mov
scas
and
jle
popf
jge
arpl
in
cmps
mov
mov
shl
jnp
pop
xor
jmp
inc
sbb
(bad)
adc
dec
sub
jae
inc
in
test
stos
aam
cwde
push
jb
and
sub
pop
fidivr
jl
sbb
pop
push
jg
pop
fcomp
mov
adc
std
(bad)
icebp
mov
jmp
in
push
scas
nop
jnp
mov
lods
sar
pop
push
mov
mov
fcmovnu
jmp
or
cmp
ret
pop
jl
add
int
xchg
in
daa
enter
pop
cmp
idiv
adc
cmps
je
add
and
cmp
sub
push
mov
arpl
sub
(bad)
ss
test
pop
or
fld
ret
ret
dec
mov
scas
and
sbb
sbb
mov
jge
in
int
test
call
lahf
xchg
fs
idiv
mov
jmp
out
and
fistp
movs
outs
test
dec
sahf
and
push
adc
lahf
pop
cmp
pop
out
jmp
in
pop
sbb
push
dec
mov
mov
int
fld
push
mov
repnz
loop
mov
dec
fimul
nop
sub
and
cmp
scas
mov
xchg
ror
inc
mov
js
jmp
stc
push
lea
sbb
out
dec
pop
(bad)
mov
xor
fsubrp
add
cmp
fdiv
xlat
and
fcompp
das
hlt
mov
pop
and
leave
xor
std
jnp
and
aas
mov
add
cwde
inc
xchg
retf
shl
sbb
dec
mov
mov
movs
inc
push
(bad)
xchg
stos
or
mov
push
(bad)
adc
or
pop
lds
bound
lods
out
retf
cmp
xor
add
iret
inc
mov
pop
mov
pop
imul
loope
add
les
movs
pop
in
or
lods
outs
ins
ret
sub
pushf
jne
mov
mov
xlat
jno
or
xchg
xchg
cli
bound
push
in
push
stos
mov
test
jmp
bound
iret
sub
(bad)
fnstcw
ja
or
pop
sbb
movs
sub
pop
sbb
jnp
jle
fidivr
int
and
xchg
push
jae
mov
pop
and
sub
jne
adc
pop
dec
push
fdivp
mov
xchg
iret
or
retf
mov
packsswb
and
jmp
int3
sbb
bound
popa
sbb
aam
dec
xchg
aam
(bad)
mov
inc
bound
and
in
test
adc
jo
jae
lods
icebp
push
pop
rcr
push
leave
jbe
add
pop
mov
and
pop
div
sbb
icebp
sahf
test
sbb
cmp
xlat
call
into
je
(bad)
and
and
pop
fdivr
cmp
es
jp
jle
arpl
and
not
pop
cli
jno
xchg
mov
inc
aaa
mov
mov
cmps
ins
test
jmp
mov
dec
adc
fadd
cmp
shl
icebp
lds
mov
cmp
js
mov
mov
in
adc
icebp
outs
gs
jmp
jmp
adc
cli
scas
lock
(bad)
out
mov
sub
mov
jne
out
mov
aas
aad
adc
push
ficomp
add
cmp
xor
fsubr
mov
movs
ror
mov
cmp
pop
xor
call
mov
inc
(bad)
xlat
je
jl
mov
sbb
adc
and
inc
repz
sub
xchg
sbb
jne
fiadd
mov
inc
test
loop
and
call
out
cmp
loop
xchg
ins
push
fisub
or
es
jl
xlat
fs
jb
mov
js
cmp
ins
mov
sbb
bound
test
mov
fs
(bad)
xor
rcr
push
pop
imul
arpl
sub
cmp
push
mov
call
call
push
shl
retf
and
xchg
inc
mov
stos
fcomp
scas
adc
lods
out
inc
imul
sub
paddsw
movs
cdq
jmp
fimul
cmc
add
add
(bad)
hlt
sbb
xchg
cdq
push
aaa
cli
ficomp
jae
xor
mov
mov
adc
loopne
inc
cmps
scas
loope
dec
xor
push
out
mov
mov
fiadd
(bad)
aas
pop
repnz
clc
pop
xlat
(bad)
xchg
fldcw
stos
fmul
ins
pop
cmp
dec
adc
adc
fptan
mov
jne
jle
(bad)
mov
(bad)
cmp
mov
leave
scas
in
fwait
mov
popa
call
out
push
ret
fdiv
add
jmp
cmp
dec
cmp
cmp
scas
ret
out
and
push
jmp
or
mov
ret
cmp
mov
in
out
das
lods
mov
dec
sbb
push
inc
pop
dec
fdiv
mov
xor
shl
pop
xor
int
sub
sub
mov
dec
addr16
add
and
sub
icebp
ins
push
(bad)
mov
cmc
je
enter
test
inc
mov
push
das
adc
push
fadd
sbb
into
xchg
inc
mov
lds
sbb
inc
ins
pop
test
in
cs
mov
les
or
mov
and
fs
cmp
fst
cli
adc
sub
icebp
jbe
and
aas
and
int3
add
mov
mov
int3
jbe
mov
push
arpl
jae
shl
or
fadd
inc
sbb
nop
gs
call
push
(bad)
loopne
adc
cmp
or
sbb
xor
inc
test
xor
push
mov
sbb
rep
jmp
add
inc
push
enter
jge
not
fild
dec
jo
xchg
jp
inc
mov
lds
popw
sbb
cmp
dec
retf
shl
(bad)
pop
ja
mov
push
fcomp
push
ins
mov
jns
mov
mov
add
lods
mov
add
cmp
jne
cmp
test
mov
push
add
mov
pop
and
les
mov
mov
aas
xchg
mov
aam
data16
cmp
in
and
inc
jecxz
out
shl
(bad)
cli
jmp
mul
mov
push
mov
hlt
push
test
icebp
push
aad
xchg
adc
test
addr16
xchg
sbb
xchg
pop
retf
pop
sub
out
test
pop
adc
add
cmp
(bad)
call
repnz
xchg
(bad)
bound
pop
jg
push
inc
mov
retf
repnz
cs
pop
stos
mov
dec
pop
fcmovnu
and
repnz
xchg
out
(bad)
pop
retf
inc
retf
hlt
dec
push
inc
(bad)
(bad)
xchg
pusha
mov
iret
sub
fnstsw
aad
mov
ss
rol
lock
jo
xchg
jl
xchg
mov
imul
retf
in
xor
jmp
lods
nop
push
push
lods
in
mov
xor
lahf
mov
jae
mov
xor
jp
int3
call
das
mov
popa
test
out
xchg
addr16
movs
and
movs
xchg
jns
hlt
sub
jo
mov
(bad)
(bad)
push
sub
repnz
xchg
add
loope
adc
cmps
gs
mov
and
adc
add
push
cli
in
adc
adc
ficomp
cmp
xchg
push
mul
push
call
push
push
dec
cmp
sub
and
cmp
aam
(bad)
lea
mov
fwait
pop
mov
clc
cmp
push
add
fcmovbe
test
cdq
xor
dec
mov
dec
inc
push
inc
pop
add
xchg
sub
mov
jb
cmp
imul
adc
idiv
and
test
dec
mov
nop
jmp
adc
xchg
rcl
lds
das
mov
outs
iret
and
push
jl
out
outs
mov
cli
xchg
cmp
push
xor
cmp
xchg
outs
addr16
dec
dec
cmps
xlat
or
(bad)
adc
inc
dec
retf
push
inc
pop
loop
mov
sbb
popf
fs
leave
jno
clc
pop
xor
mov
sub
iret
iret
movs
call
fnstenv
(bad)
out
jno
mov
push
sbb
lea
cdq
xlat
rcr
fild
leave
push
xchg
out
dec
test
aad
push
cmp
sub
mov
and
repnz
push
inc
ja
aas
daa
xor
repnz
xor
pop
les
aad
push
ret
js
xchg
xchg
mov
cdq
dec
out
shr
jp
mov
cmps
clc
std
ss
data16
mov
cmp
test
repnz
test
or
addr16
rcr
inc
stos
push
retf
jns
ds
xchg
inc
mov
mov
lahf
fst
push
in
enter
pop
rol
push
mov
mov
js
mov
shl
cdq
adc
aad
aad
dec
iret
in
std
and
mov
jle
inc
gs
push
stc
jg
push
ja
adc
cdq
addr16
mov
ja
adc
mov
push
pop
pop
add
mov
mov
xor
jp
xlat
mov
(bad)
dec
pop
mov
push
xchg
out
lods
(bad)
lock
(bad)
lea
mov
jns
gs
mov
inc
aad
and
sbb
es
or
pop
aam
sub
aaa
ds
xchg
or
mov
fs
out
adc
jbe
lods
xchg
mov
mov
outs
dec
inc
retf
sahf
pusha
cs
jne
add
jle
pop
fild
sahf
fimul
pusha
pop
cmp
and
lds
lahf
inc
mov
dec
in
scas
sbb
jmp
mov
in
jg
mov
cs
cmp
push
cmc
jmp
ins
jbe
ret
or
jg
cmp
mov
fwait
out
outs
push
fwait
cmp
and
mov
pop
mov
fistp
or
xchg
sub
imul
cmp
lahf
lods
cs
stc
mov
test
push
stos
jns
xor
sbb
pop
lods
adc
loop
movs
sbb
int3
push
sub
pop
loop
in
std
mov
ret
(bad)
mov
sbb
pop
inc
mov
xor
add
and
dec
xchg
mov
pop
lods
push
xor
aaa
inc
lods
pushf
pushf
call
popa
mov
add
push
inc
add
fcmove
add
test
sahf
and
je
push
push
inc
sahf
xor
imul
push
aam
(bad)
jp
repnz
data16
pop
inc
adc
jle
cs
sbb
mov
arpl
mov
clc
pop
or
jmp
or
xor
bound
icebp
in
and
cwde
lds
call
dec
shl
js
xchg
shr
xor
shl
(bad)
mov
or
mov
jb
aad
clc
cmp
add
in
jl
mov
fild
lock
pop
out
in
pop
je
jno
dec
mov
cmp
lock
(bad)
add
pop
xor
pop
xor
fbstp
ret
and
cmp
sbb
fsub
fs
push
mov
cmp
(bad)
movs
cmc
(bad)
stos
call
jg
xor
cmp
or
arpl
es
popf
pop
out
popf
das
adc
pop
scas
test
icebp
or
pop
cli
fistp
ja
ds
loope
push
sbb
int3
jle
dec
repz
addr16
cmps
add
fsub
push
shl
jmp
(bad)
ret
jl
retf
sub
fstp
outs
loope
jmp
sub
daa
ds
add
ja
scas
repz
push
mov
ret
in
sbb
jo
mov
adc
repnz
push
jge
jno
inc
and
mov
inc
and
pop
xor
repz
dec
aaa
or
test
retf
movs
cmp
mov
std
inc
mov
push
or
cmps
mov
int
arpl
mov
aaa
xchg
mov
jb
out
into
sub
jp
int3
jl
(bad)
ficom
mov
fadd
ret
cmp
inc
xor
sub
popa
pop
jecxz
les
pop
sub
cmp
xchg
push
mov
pop
add
xor
cmp
ror
cld
jg
test
adc
stos
jg
rcl
mov
xor
and
out
(bad)
xchg
jnp
addr16
cs
dec
in
rcl
and
stc
ror
mov
pusha
push
je
out
add
lods
popf
sbb
sbb
ja
jns
out
nop
lahf
add
cmps
mov
mov
pusha
xor
xchg
adc
jmp
xchg
(bad)
popa
popf
cmp
ins
pop
dec
xchg
and
push
in
nop
add
mov
dec
loopne
dec
cmp
daa
dec
outs
cmps
int
scas
adc
popf
adc
pop
out
pushf
(bad)
jmp
dec
stos
fcmovu
lods
sub
addr16
push
mov
mov
pop
aaa
or
rcr
jecxz
cmp
shl
and
daa
jl
inc
inc
popa
fwait
pop
ret
aam
ds
call
(bad)
ins
jmp
mov
adc
mov
cs
and
and
cmove
lds
fcomp
rcl
inc
xor
rcl
cmp
std
jmp
xchg
leave
push
pop
xchg
fisttp
in
adc
cmc
cmps
inc
sbb
ret
hlt
or
cmp
xchg
pop
mov
xchg
sbb
jle
and
sub
mov
(bad)
jle
mov
scas
loop
fsub
fiadd
sbb
dec
sbb
mov
and
sbb
jno
jle
test
ret
cmp
test
add
xchg
mov
sahf
rol
daa
pop
pop
out
mov
add
and
sub
and
and
mov
(bad)
jnp
sti
xor
cdq
(bad)
xlat
test
out
out
enter
lods
push
inc
std
or
invd
mov
mov
xor
ds
call
scas
mov
fdecstp
mov
sbb
xor
pop
daa
inc
and
mov
xchg
(bad)
aaa
je
cdq
stos
icebp
or
jle
stos
dec
sub
stos
mul
mov
jl
and
hlt
fscale
daa
xor
mov
ds
pop
idiv
dec
sbb
ins
out
mov
and
popf
lods
jne
sub
mov
mov
sub
cmp
cwde
(bad)
stos
xor
idiv
aam
lods
sbb
jg
ficom
sub
aaa
stos
aas
pop
or
rol
aaa
test
or
pop
inc
sub
dec
cli
mov
cmc
jbe
ss
and
fwait
mov
mov
paddb
xor
or
mov
movsx
cmps
sub
movs
je
jmp
xor
jmp
push
mov
gs
(bad)
xor
retf
dec
adc
shr
mov
dec
sbb
cld
ins
(bad)
pusha
(bad)
shl
repz
jl
shl
and
add
xchg
gs
add
jg
adc
mov
sar
mov
cmps
cmp
mov
cwde
inc
pop
pop
pusha
jle
push
mov
jle
mov
icebp
push
dec
popf
fsubp
dec
gs
sub
ret
or
sbb
adc
ror
aad
adc
lods
xchg
mov
sub
mov
cmc
push
sti
push
sbb
cld
dec
loop
mov
push
test
add
ret
rol
jp
jb
push
pop
data16
shl
xchg
pop
push
ins
and
daa
pop
mov
sub
and
jecxz
imul
(bad)
adc
popa
or
mov
movs
ins
cmp
retf
xor
cld
xor
inc
clc
xor
adc
mov
mov
aaa
pop
adc
jo
mov
shr
xor
jg
in
or
retf
fild
outs
inc
sub
xor
adc
ins
and
inc
rcr
mov
rcl
les
fcmovu
mov
pop
jmp
out
add
mov
sub
int
mov
add
jno
inc
lods
ja
rol
loopne
addr16
adc
sbb
pop
dec
xor
mov
mov
mov
arpl
push
into
dec
mov
fsubr
inc
pop
pop
rsqrtps
fwait
or
jno
cwde
mov
jmp
adc
retf
(bad)
outs
mov
test
mov
and
addr16
jg
inc
aaa
push
pop
mov
movs
(bad)
sbb
xor
add
(bad)
fcmovnb
xchg
mov
mov
push
movs
xchg
add
mov
es
mov
popf
push
imul
dec
aaa
sbb
mov
(bad)
lahf
test
inc
movs
and
clc
mov
fld
lahf
jmp
(bad)
push
jne
jecxz
div
sahf
rcl
test
add
not
adc
and
add
sbb
push
outs
add
aad
mov
ins
addr16
inc
aas
xor
jg
lock
cli
mov
(bad)
(bad)
aam
inc
dec
ficomp
adc
icebp
pop
pop
inc
xlat
push
cld
jne
mov
inc
aam
adc
sbb
mov
jno
mov
mov
nop
pop
ror
test
hlt
int
push
adc
and
jl
push
repz
ss
adc
ins
repz
jns
outs
std
rcr
jae
dec
mov
mov
out
lock
dec
push
aad
call
push
jns
cwde
xchg
push
movntps
mov
xor
aas
push
or
mov
das
push
sbb
and
mov
imul
imul
mov
jbe
out
jb
jle
sbb
clc
ror
outs
andnps
xor
cdq
fisub
adc
mov
xchg
ja
movs
mov
ins
dec
mov
jne
push
xor
push
cwde
jno
push
icebp
test
pop
shr
enter
(bad)
loope
in
pop
iret
inc
mov
enter
nop
ss
in
lahf
add
dec
xchg
xor
stos
xor
push
scas
mov
sub
ins
dec
fsubr
jns
leave
inc
pop
push
and
jl
pop
out
xor
push
mov
adc
cmp
adc
lods
aas
push
cld
pop
xchg
jnp
add
xchg
outs
popf
(bad)
(bad)
inc
in
dec
or
xchg
jl
inc
jae
lods
stos
cmp
loopne
dec
mov
xchg
and
mov
cwde
add
push
and
cmc
xchg
(bad)
cmp
or
add
push
cmps
xor
dec
sub
add
(bad)
lea
jbe
idiv
sti
jmp
xchg
sub
push
mov
jge
cmps
(bad)
call
cmp
mov
(bad)
sar
jmp
lods
mov
push
repz
lods
jmp
out
popf
sbb
pop
push
add
jmp
xchg
xchg
jno
loope
mov
or
dec
inc
mov
sbb
mov
or
loopne
pandn
out
xor
jb
adc
cdq
cmp
jnp
inc
sbb
jcxz
fcom
push
call
and
test
xor
jns
test
push
dec
mov
ret
mov
cs
ss
je
or
das
ficom
or
push
enter
sbb
push
movs
inc
mov
add
adc
mov
jo
jnp
pusha
int3
ret
cmp
jp
mov
or
bound
ret
sub
repz
lods
enter
jo
scas
cwde
mov
fs
push
jl
es
cmp
xor
or
pop
push
jmp
scas
call
stc
int3
call
aam
jecxz
mov
clc
add
scas
(bad)
adc
sbb
clc
xchg
sub
mov
dec
jo
mov
jle
outs
movs
add
add
and
mov
div
ror
xchg
mov
or
push
test
scas
mov
hlt
clc
sbb
rcl
inc
mov
loope
inc
pusha
retf
adc
imul
call
sub
pusha
leave
cwde
pop
sub
push
sbb
(bad)
(bad)
sti
push
jo
fcom
ds
repz
cmp
jmp
das
int
cmc
leave
iret
ja
dec
jno
int3
fstp
(bad)
xchg
pop
dec
std
and
xor
push
popf
retf
jle
ficom
aas
enter
scas
popa
xchg
lahf
nop
out
sbb
retf
lea
test
enter
or
ret
lods
xchg
call
sti
adc
lods
js
dec
jmp
loope
sub
jbe
mov
dec
cmp
mov
inc
stos
mov
dec
pop
push
sub
mov
add
sub
rcl
jmp
ins
jbe
push
dec
in
mov
mov
push
and
aam
fdivr
scas
rcr
idiv
mov
add
pusha
sub
mov
inc
mov
push
int3
stos
or
xchg
lea
cmp
enter
or
popa
mov
ficom
hlt
jg
jae
xor
cs
inc
(bad)
mov
inc
mov
lahf
or
push
xor
mov
pop
sub
and
mov
mov
mov
test
fwait
push
xchg
mov
push
enter
jle
xchg
jmp
jp
movs
jo
push
dec
aad
mov
call
xor
cmp
loope
mov
cmps
pop
ret
test
push
imul
adc
(bad)
sub
mov
jae
scas
pushf
jae
(bad)
leave
and
mov
sahf
add
push
pop
sub
addr16
shl
dec
hlt
pop
add
push
stos
or
stc
out
fisttp
inc
popa
inc
sbb
fistp
icebp
mov
(bad)
pop
dec
inc
sub
mov
add
(bad)
jmp
jmp
and
jmp
in
imul
in
jl
cmps
adc
in
mov
gs
jo
add
test
jmp
das
test
test
xchg
sahf
push
mov
mov
stos
stos
push
leave
xchg
popa
les
fcomp
or
xor
and
xor
mov
icebp
push
sahf
mov
and
call
fs
sbb
and
stc
push
sbb
push
inc
jno
test
mov
addr16
fs
xor
xor
scas
ss
sbb
(bad)
iret
mov
or
stc
or
adc
es
call
call
or
movs
pop
icebp
or
sahf
xchg
jnp
fcomp
push
repz
xchg
clc
and
or
pop
repnz
push
sbb
daa
(bad)
cmp
mov
cmp
jnp
dec
imul
mov
int3
xor
outs
test
dec
std
jb
bound
lods
test
or
jnp
xlat
mov
popf
jmp
push
xor
push
jmp
cmp
push
retf
je
(bad)
dec
cld
shr
mov
sbb
xor
vmovntps
nop
nop
pop
retf
icebp
lahf
and
xchg
stc
rcr
sahf
fdivr
das
xchg
imul
jle
arpl
mov
mov
jmp
xor
(bad)
adc
(bad)
(bad)
(bad)
dec
(bad)
cmc
dec
sbb
leave
add
dec
ds
mov
les
popf
fs
dec
push
std
mov
cmp
addr16
push
add
pop
test
sahf
jno
rcl
sti
inc
outs
in
shl
mov
ins
adc
push
jbe
ins
cs
xchg
(bad)
fcom
and
inc
mov
sahf
pop
les
lods
mov
mov
aas
jno
or
xchg
jmp
inc
or
mov
fwait
or
jno
dec
fs
jecxz
mov
xor
or
aad
sbb
mov
pop
repz
xchg
mov
mov
ins
pop
pop
ror
and
movs
mov
mov
and
jo
in
movs
and
mov
js
mov
stos
sbb
je
icebp
sbb
daa
std
bnd
fs
scas
div
das
cwde
js
out
jmp
in
stc
mov
in
mov
es
retf
(bad)
rcl
xchg
xor
pop
push
dec
push
frndint
push
(bad)
popa
xor
call
cmp
or
inc
mov
ret
fwait
popa
and
idiv
lods
outs
ins
jle
cmp
mov
mov
cmp
cmc
test
xlat
jge
jmp
call
fimul
fstp
push
and
(bad)
fstp
fadd
xor
(bad)
sbb
cmp
add
arpl
mov
mov
idiv
mov
lods
push
mov
mov
ss
cli
inc
push
ds
mov
adc
or
push
scas
push
mov
push
jns
movs
xlat
xchg
cmc
lahf
repz
mov
(bad)
pop
xchg
sub
jp
jle
pop
mov
jge
dec
adc
cmp
add
out
rcl
inc
mov
lods
lods
js
push
jp
mov
add
ds
call
push
sbb
ja
mov
pop
sar
push
mov
shr
pop
jb
mov
mov
push
loopne
out
or
xor
sub
ds
or
lea
lods
mov
push
cmp
push
mov
mov
ja
jno
fldcw
jne
cmp
sbb
ror
sbb
pop
sbb
imul
fcomi
adc
addr16
dec
xor
sub
cli
cmp
fisubr
mov
mov
(bad)
addr16
das
cli
inc
sub
push
test
sbb
cli
xchg
lds
cmp
add
cmps
leave
sub
ins
adc
scas
add
aaa
sub
pop
xlat
cmps
or
mov
pushf
sub
xor
mov
ins
into
jp
sbb
lahf
inc
push
and
xchg
aas
hlt
pop
aaa
fs
mov
xchg
cs
mov
inc
repnz
call
adc
inc
push
push
loopne
push
mov
stc
outs
adc
cmp
jnp
lahf
fld
dec
dec
jns
fs
cld
add
in
inc
ins
mov
call
lods
xor
add
fnstcw
cmp
inc
push
sub
lock
sub
lahf
lods
in
sbb
ret
mov
mov
lahf
adc
out
std
cdq
sub
out
jno
xor
nop
mov
cmps
mov
xor
jmp
bnd
jnp
xchg
in
mov
int
aaa
add
mov
(bad)
jge
sbb
mov
(bad)
cmp
cmc
or
mov
mov
movs
push
jmp
std
add
and
(bad)
aam
cmp
adc
cmps
inc
push
enter
cld
jno
add
dec
push
sti
mov
push
and
stc
add
cs
add
xchg
es
std
fwait
clc
mov
clc
movs
mov
sub
xor
add
retf
imul
jmp
cmp
mov
je
icebp
paddusb
inc
cs
loop
cdq
iret
xor
frstor
lods
fistp
mov
retf
jae
mov
retf
dec
hlt
sbb
test
lods
stos
enter
in
inc
hlt
push
movs
in
cli
aam
xchg
mov
xchg
sbb
inc
bound
mov
fcomp
fild
cwde
mov
(bad)
loopne
enter
xchg
mov
stos
push
jne
enter
cmp
ret
add
xor
jmp
add
idiv
loopne
mov
cli
dec
xor
data16
ror
dec
imul
and
icebp
sbb
and
mov
retf
fidivr
mov
pusha
mov
adc
sti
lahf
xchg
adc
aaa
inc
push
push
mov
jl
test
loop
aaa
stos
dec
xlat
dec
(bad)
loop
ret
ins
lods
add
es
mov
vprotw
pinsrw
aad
pop
dec
pop
or
ins
out
loop
sbb
repz
jg
jle
mov
enter
repnz
lock
shr
in
mov
jmp
add
outs
mul
(bad)
int3
push
std
mov
sahf
mov
scas
mov
imul
ror
(bad)
sub
mov
pop
out
mov
mov
mul
out
gs
iret
into
inc
push
jle
add
mov
js
daa
loopne
in
jg
jl
pop
fidivr
jbe
jp
jno
mov
push
fwait
scas
sbb
xchg
js
adc
jno
or
enter
mov
gs
mov
ins
outs
jb
rcr
(bad)
sbb
jecxz
mov
(bad)
sub
xchg
pop
fldcw
and
xor
pop
les
inc
data16
stos
dec
loope
inc
loop
clc
int3
push
jnp
es
in
xchg
adc
outs
fld
jecxz
movs
ds
ret
out
inc
mov
xchg
mov
cmc
xor
cmp
dec
cmp
loopne
xchg
mov
leave
inc
cmp
jne
jmp
jns
loopne
inc
(bad)
adc
jbe
icebp
inc
push
pop
ret
call
inc
(bad)
cld
neg
xchg
xchg
inc
add
inc
lock
js
ins
push
sbb
push
outs
xor
inc
(bad)
xor
mov
pop
or
test
dec
je
stos
push
mov
pop
ins
or
mov
pop
jb
pusha
daa
xchg
cmp
xchg
or
push
mov
sbb
or
out
fdivr
mov
xor
mov
rcl
dec
shl
adc
inc
lods
sbb
xor
push
jne
lock
xlat
scas
mov
lods
xchg
arpl
sub
jo
xchg
sub
fsub
fst
nop
sbb
loope
js
push
cmp
sbb
push
and
sti
scas
mov
mov
test
(bad)
mov
inc
lea
mov
lahf
jno
mov
cmp
sbb
clc
add
cmp
jae
or
pop
inc
out
imul
fst
mov
loop
cmps
mov
mov
pop
push
push
push
dec
cmps
jg
aam
jne
inc
aaa
lods
mov
loope
outs
jns
push
outs
mov
enter
jns
push
xor
mov
in
push
and
mov
jmp
add
xchg
les
shl
xchg
call
popf
repz
loop
ret
loope
jo
xor
mov
ficom
fwait
or
dec
or
(bad)
fst
jmp
imul
and
(bad)
mov
cwde
movs
lahf
add
scas
lods
movs
or
xchg
add
imul
dec
adc
adc
ret
inc
pop
xchg
and
(bad)
and
dec
cmps
adc
out
shl
pop
rcl
movs
inc
aam
cmp
mov
sub
stc
aas
adc
fisub
push
xchg
push
mov
call
sahf
mov
dec
movs
mov
dec
mov
push
jmp
mov
mov
cmp
call
add
je
inc
fs
cld
jg
dec
jnp
out
out
push
clc
adc
xchg
(bad)
out
xor
inc
call
aam
cmpxchg
(bad)
cmp
jle
cmp
enter
sbb
stos
pop
test
pop
dec
mov
loop
mov
pop
mov
js
mov
scas
xor
fisubr
das
xor
sti
push
lea
cs
dec
(bad)
sti
sahf
cmps
or
inc
and
push
sbb
cmps
test
xchg
aam
push
ja
iret
pop
mov
and
jne
out
test
mov
xchg
xchg
mov
sbb
int3
scas
add
sub
nop
leave
xchg
call
push
enter
push
retf
pop
xchg
mov
xor
mov
mul
push
adc
imul
int3
xchg
push
outs
rcl
cdq
enter
xchg
fist
(bad)
into
inc
in
xchg
inc
cmps
adc
clc
test
jnp
enter
dec
repz
and
enter
jb
cmp
pop
adc
ror
or
push
movs
es
push
and
lea
jne
cmc
clc
repnz
sub
dec
mov
mov
movs
adc
adc
cli
cmp
adc
add
(bad)
mov
dec
cmc
add
cmp
dec
inc
or
call
and
inc
or
jg
xlat
push
push
mov
(bad)
in
pop
dec
loop
js
retf
(bad)
jns
and
lods
out
je
xor
and
xor
or
or
jne
clc
or
sbb
xor
retf
mov
pop
xchg
xchg
inc
mov
or
mov
sbb
adc
xor
dec
mov
push
imul
ins
sub
pop
inc
sbb
jmp
pop
dec
or
fistp
mov
adc
fcom
inc
mov
mov
dec
xor
div
out
(bad)
pushf
mov
nop
in
jb
sbb
mov
or
push
inc
cld
test
xor
ja
out
loopne
cmps
pop
and
repnz
es
mov
sahf
mov
pop
mov
push
out
push
hlt
mov
add
or
adc
addr16
and
push
and
mov
add
adc
ret
push
inc
sub
dec
xchg
call
adc
jmp
cmp
push
pusha
jp
mov
gs
ret
das
ret
jl
sbb
mov
mov
adc
int
push
in
jae
cmp
retf
neg
in
xchg
sub
push
jmp
sahf
out
rcl
jge
jge
dec
adc
test
mov
cmp
sub
mov
inc
scas
sbb
movs
or
and
jl
out
in
pushf
pop
xchg
jne
xchg
sbb
sub
push
cmp
pop
mov
push
mov
inc
mov
push
out
cs
mov
out
or
mov
jnp
dec
loope
lds
cwde
xchg
out
jmp
lock
sbb
mov
fbld
xchg
jle
aam
std
xchg
cmp
inc
add
sti
xor
dec
(bad)
mov
jecxz
lods
cmps
not
mov
lahf
jmp
dec
mov
dec
dec
pop
jb
sub
jns
jb
adc
and
(bad)
call
in
(bad)
daa
mov
add
mov
fsubr
shl
dec
mov
or
sub
leave
inc
arpl
mov
aam
lds
mov
cmps
and
fistp
inc
mov
leave
rol
and
mov
ja
div
mov
mov
add
push
aam
xchg
jnp
je
jo
xchg
fistp
or
jnp
pop
outs
pusha
jno
xchg
inc
outs
sbb
xchg
and
add
jg
test
movs
popa
mov
push
(bad)
cmp
shr
pop
pusha
sub
jg
fst
hlt
pop
sar
adc
out
inc
xor
stos
hlt
push
push
mov
and
fcom
test
out
sbb
ss
out
ins
clc
adc
pop
pusha
xor
pop
dec
shl
cmps
sti
(bad)
xchg
sub
(bad)
pop
sub
pop
mov
or
jmp
mov
adc
mov
sub
xchg
fwait
adc
pop
or
loope
dec
jl
shl
sub
leave
pop
cmp
es
fucomip
ds
push
js
pop
or
and
jecxz
cmp
add
adc
mov
pushf
or
(bad)
fldcw
fwait
jp
out
clc
ret
fcomp
pop
or
inc
int3
cmp
aad
fwait
shl
out
gs
in
lds
sahf
dec
repnz
inc
ja
cmp
mov
aad
scas
stc
pop
or
add
(bad)
or
xor
ret
(bad)
mov
out
jmp
les
pop
jns
or
clc
loope
mov
lea
sub
dec
mov
adc
es
dec
ss
dec
std
popf
and
sti
pop
lods
or
push
mov
inc
dec
ror
add
jbe
and
stc
pop
xor
xor
sbb
fadd
cmc
jo
mov
mov
sbb
shl
lds
mov
xchg
jo
rcl
push
ficomp
popa
fist
(bad)
jge
inc
repnz
cmp
xchg
lea
std
out
xor
mov
jo
fmul
xor
jecxz
imul
(bad)
call
xchg
adc
cmps
mov
xchg
or
stos
shl
(bad)
jp
gs
ins
hlt
cmp
loop
jne
sti
arpl
out
pcmpgtd
mov
jno
lahf
or
adc
push
or
in
movs
adc
dec
and
adc
cmp
xchg
into
inc
xor
imul
pop
test
ret
inc
jecxz
jl
enter
xor
pop
pop
fcomip
pushf
sub
jnp
jp
(bad)
sahf
xor
jae
mov
dec
sbb
cmp
push
outs
in
inc
ins
mov
pop
push
icebp
std
pop
mov
pop
clc
(bad)
enter
dec
jmp
lea
xchg
fistp
repnz
push
ja
dec
xor
aam
pop
imul
push
aas
adc
xchg
fwait
gs
aam
(bad)
out
retf
xor
in
jne
jns
or
loopne
jbe
xor
(bad)
int3
sbb
add
dec
mov
sbb
test
mov
inc
(bad)
(bad)
pop
mov
cmps
or
or
pop
lods
push
pop
inc
pop
imul
repnz
pop
test
pop
int3
test
mov
jge
push
imul
call
ins
scas
ret
inc
std
cmps
daa
mov
jmp
pop
sti
inc
jg
fcomp
in
dec
bound
add
icebp
cmp
mov
mov
fwait
or
ja
out
in
shl
mov
adc
inc
test
cmp
cld
or
je
jno
es
mov
jmp
popf
sub
sbb
sahf
fisttp
out
mov
cmp
daa
inc
add
cld
push
sub
cmp
and
pop
mov
xchg
bound
je
les
stc
into
xchg
scas
sar
push
and
and
int
push
dec
mov
or
xchg
lods
mov
mov
xchg
xchg
cmp
jge
xor
cmp
pop
adc
mov
mov
dec
fdiv
cmps
cmps
dec
mov
(bad)
loope
add
jmp
pop
push
pusha
and
xchg
movs
mov
test
enter
das
xor
int3
cmp
ror
(bad)
sub
xchg
lahf
cmps
add
fcmove
xchg
mov
inc
call
adc
mov
outs
int
cmp
jo
repnz
and
add
add
add
mov
mov
mov
xchg
jmp
sub
pop
mov
fcomi
and
or
mov
jne
outs
mov
mov
jle
mov
dec
imul
mov
test
aad
push
int3
comiss
popf
pop
movups
ja
push
and
cmp
xchg
movs
jmp
adc
retf
cmp
inc
push
sbb
adc
mov
or
imul
xchg
jo
not
in
stos
or
sub
fsub
or
mov
mov
jns
jecxz
arpl
inc
pop
push
mov
sub
jns
mov
pop
test
gs
iret
mov
call
(bad)
inc
aam
in
cmp
xor
cmps
pop
pop
xor
fdivr
xor
adc
add
fwait
pusha
aaa
std
sub
dec
adc
mov
push
xchg
add
ins
outs
in
ret
and
cli
shr
inc
cli
jo
(bad)
jmp
pushf
cld
pusha
mov
bound
xchg
add
xor
mov
push
leave
inc
gs
mov
cmc
xor
mov
cmps
or
adc
iret
aaa
imul
jne
cmp
imul
mov
(bad)
pop
pop
sbb
cmc
xchg
cmp
push
int3
out
or
je
add
jecxz
mov
mov
out
inc
in
leave
ret
xchg
outs
adc
push
mov
mov
call
pop
mov
fwait
sbb
(bad)
rcr
and
jmp
cs
outs
cmp
xchg
data16
(bad)
out
in
push
mov
or
dec
push
jbe
pop
xor
or
mov
dec
in
mov
out
lea
outs
dec
dec
int
or
pop
and
xor
repz
cmps
adc
add
(bad)
add
dec
pop
mov
data16
je
push
test
mul
out
ins
dec
sbb
inc
enter
dec
fsqrt
into
test
call
xchg
rcr
mov
ror
sahf
or
loop
ja
js
sub
mov
dec
ret
xor
shl
(bad)
scas
jg
xchg
repnz
push
jmp
dec
inc
adc
cli
jne
loop
jbe
lods
cmc
inc
aas
push
movs
dec
out
jp
sub
lss
inc
push
pop
mov
xchg
pusha
je
mov
jo
fisubr
(bad)
cmps
test
pushf
jge
out
xchg
stos
dec
iret
sub
call
lahf
dec
mov
mov
mov
retf
push
pop
ror
in
push
sbb
test
cmp
inc
mov
test
(bad)
cli
add
add
fistp
xchg
out
loope
xor
xchg
cmp
test
sub
sbb
rcr
mov
xchg
test
(bad)
dec
xor
add
ja
add
sbb
cmp
mov
call
jae
ins
cmp
mov
xchg
add
icebp
std
jnp
jb
ins
shl
jg
mov
or
or
mov
movs
pop
outs
ficom
(bad)
mov
movs
sbb
loopne
out
cmp
outs
and
addr16
sub
in
ret
xchg
rep
dec
cmp
inc
lds
iret
jbe
inc
push
mov
ins
arpl
sbb
push
scas
add
das
movs
ret
pop
pop
nop
mov
or
add
or
icebp
ins
adc
outs
or
movs
leave
test
cli
sahf
in
bound
jle
mov
icebp
push
mov
jge
stos
jnp
mov
arpl
mov
dec
es
imul
stc
mov
dec
(bad)
(bad)
(bad)
push
or
cmp
mov
jb
pusha
pop
jnp
pop
cmp
xor
mov
jmp
lods
loop
out
outs
adc
fdiv
pop
scas
fs
pop
cld
retf
sbb
fs
in
aam
add
call
sub
fcomp
and
aam
adc
adc
inc
inc
xor
sbb
jl
jnp
iret
xchg
lods
(bad)
fld
loopne
mov
dec
or
call
mov
popa
out
mov
sbb
(bad)
fbld
push
clc
fld
adc
scas
sub
mov
stc
sbb
xor
xchg
ret
mov
addr16
sub
xchg
fstp
cmps
lock
in
dec
push
mov
xor
inc
scas
es
mov
out
imul
shl
mov
push
int
pop
daa
push
pop
pop
(bad)
xchg
fstp
adc
dec
movs
jns
movs
mov
out
dec
enter
inc
test
cmps
stos
xchg
loop
pop
xor
fs
loopne
lods
mov
jmp
shl
push
int
pop
and
icebp
sub
pusha
or
and
mov
ja
push
mov
pop
and
add
push
push
hlt
scas
and
call
fdiv
pop
mov
loopne
mov
xchg
je
sahf
scas
xchg
xor
pusha
stos
dec
int
sub
cwde
scas
pop
sar
outs
iret
mov
mov
xor
add
int
neg
cs
movs
(bad)
arpl
cmps
adc
int3
inc
mov
sbb
or
rol
daa
jl
out
retf
mov
int
pop
mov
dec
sti
mov
dec
adc
xor
idiv
and
push
jp
popa
add
vmwrite
sub
retf
mov
lahf
dec
mov
jle
and
jne
mov
out
(bad)
dec
shr
push
rcl
xchg
mov
pop
inc
clc
xchg
jle
dec
ins
jb
sub
cmp
(bad)
fdiv
jb
nop
mov
sbb
(bad)
jle
sub
sbb
xchg
icebp
pop
repnz
ss
add
and
sub
imul
xor
ficom
rcr
or
push
or
or
fcmove
ja
xor
mov
dec
int
out
push
pushf
mov
outs
test
xchg
scas
dec
adc
and
lds
in
fisttp
mov
or
fcomip
push
(bad)
fstp
adc
cwde
ror
push
dec
fnstenv
xchg
in
xor
stos
mov
mov
or
gs
test
es
mov
loop
xlat
dec
push
lock
imul
lock
jae
retf
sub
push
test
shl
out
test
xor
dec
test
enter
jmp
jb
inc
mov
pop
inc
dec
pop
mov
mov
and
fucomi
sub
fsubr
cmc
or
out
and
adc
pusha
jge
add
or
fsubr
in
sbb
jae
or
in
(bad)
(bad)
scas
jge
sbb
imul
inc
inc
out
in
mov
mov
jne
sbb
mov
lock
sbb
cmp
dec
stc
push
jnp
jecxz
pop
pop
sub
int
inc
mov
stc
push
cmps
cmps
les
lock
push
inc
sub
out
cmps
xchg
fs
loope
pop
stc
js
(bad)
adc
clc
aaa
xor
je
cli
jno
push
cdq
hlt
mov
outs
mov
or
and
pop
sahf
xchg
fdivr
imul
push
lods
sahf
enter
jmp
mov
xchg
repnz
daa
mov
jb
cwde
inc
les
test
aad
push
mov
fcomp
adc
data16
pop
dec
ins
mov
popf
std
pop
mov
mov
out
fidivr
(bad)
pop
repz
cmp
jb
rcr
shl
xchg
push
js
pop
aaa
inc
aad
lock
imul
in
mov
cmc
iret
lds
out
std
mov
adc
or
in
clc
sbb
cmc
add
retf
dec
arpl
inc
bound
es
jno
in
(bad)
pop
bound
push
or
stos
outs
mov
call
mov
test
cmp
or
jbe
fwait
aam
push
xor
sahf
or
(bad)
fldenv
loopne
xchg
and
xlat
or
jmp
ins
push
pop
ret
adc
loopne
fdiv
sub
into
sbb
and
nop
mov
hlt
in
or
(bad)
in
aaa
fucom
(bad)
sti
lea
cli
xor
cli
pop
mov
adc
pop
in
sar
xor
lods
xor
sti
pop
xor
inc
sub
cmp
push
and
add
scas
out
shl
in
push
sub
adc
pop
fst
jl
outs
ds
mov
in
push
mov
scas
jnp
(bad)
data16
scas
xor
pushf
cmp
shl
pcmpgtb
fidivr
add
call
cmp
test
loope
icebp
mov
xor
push
pop
stc
lds
push
(bad)
xchg
aam
cmps
imul
push
pop
sbb
ins
pushf
in
sub
rol
rcr
lahf
and
push
out
cmp
pop
or
stos
ror
jb
xchg
sbb
retf
pop
mov
sar
sti
push
call
inc
cmps
or
stos
mov
adc
adc
lods
(bad)
and
ss
mov
jns
sub
in
jp
inc
pop
lock
in
or
xor
in
das
popa
pop
jl
jae
inc
jmp
pop
test
call
daa
fsub
mov
lods
adc
ror
ins
pushf
int3
xchg
inc
cmc
xchg
cmp
movs
add
inc
jl
out
jnp
and
test
xchg
sbb
and
pop
das
and
xchg
cmc
inc
push
push
jg
push
outs
test
mov
push
(bad)
adc
test
pop
pop
xchg
jl
movs
fild
inc
mov
sahf
out
out
and
dec
jge
icebp
sub
and
scas
sbb
add
arpl
mov
jnp
cmps
xchg
jbe
scas
repz
scas
lods
mov
add
sbb
xchg
mov
mov
hlt
pcmpeqd
pop
cmps
clc
dec
xchg
jg
adc
xor
das
xor
mov
mov
inc
adc
xchg
data16
or
jo
pop
sbb
or
cmp
enter
xor
add
bound
dec
int3
adc
push
pusha
pop
mov
test
dec
jnp
jmp
into
repz
vdivsd
inc
xor
js
jle
or
ss
mov
push
ss
inc
fsubr
ret
das
and
add
in
adc
adc
dec
xor
mov
dec
xchg
sub
xor
inc
int
lock
cmp
jmp
jmp
push
inc
cmp
sti
jnp
loop
and
ins
sbb
iret
shl
lsl
fld
inc
ds
out
xlat
lods
data16
or
push
inc
int
adc
and
movs
dec
movs
sbb
mov
enter
mov
and
mov
icebp
loope
sbb
(bad)
sbb
or
std
fist
in
out
or
test
push
lea
cwde
sub
adc
ret
adc
or
dec
jnp
outs
js
sbb
mov
outs
mov
push
xor
cmps
movs
stc
inc
lods
sti
hlt
lahf
or
movs
mul
inc
xchg
in
xchg
or
out
ins
sbb
adc
jo
call
jle
call
sahf
daa
in
test
not
jno
clc
mov
fild
xor
add
ret
adc
push
or
adc
cli
sbb
movs
ja
sbb
pop
pop
sar
sub
or
add
push
sti
clc
fidivr
mov
cmp
mov
mov
and
fs
les
jg
dec
cmp
ret
hlt
pop
pushf
int
mov
cmps
and
jmp
lds
mov
cmp
pusha
retf
cmp
(bad)
outs
fstp
pop
and
stos
add
adc
pop
mov
push
es
sbb
sbb
(bad)
pop
int3
xor
ins
mov
xchg
mov
add
cmps
mov
push
or
dec
or
adc
out
jb
push
add
push
mov
icebp
sbb
cld
frstor
mov
idiv
cdq
fwait
inc
cmp
repz
mov
cwde
xor
clc
dec
xor
push
lds
mov
popa
jbe
rcl
into
fisubr
xor
ss
mov
mov
cmp
in
jg
pop
shr
cmp
popf
dec
and
mov
cwde
test
jbe
xor
adc
xor
xor
sub
mov
sti
movs
mov
in
cmc
ja
sub
sti
(bad)
jbe
jl
ja
test
pop
fadd
mov
pop
xlat
add
mov
push
and
adc
sbb
adc
mov
fisttp
(bad)
out
adc
int3
je
lods
icebp
dec
inc
and
adc
cmp
sti
xor
es
jmp
cs
ja
inc
mov
(bad)
loop
movs
into
pop
mov
mov
rol
das
mov
add
pop
popa
hlt
xchg
xchg
jae
cmp
(bad)
pusha
jbe
xchg
pop
pop
mov
fsub
mov
call
loop
pop
xor
sbb
fsub
test
jl
rcr
sub
lock
dec
ret
outs
adc
xchg
div
mov
cmps
and
push
mov
mov
mov
mov
push
mov
cmps
pop
mov
in
cmp
(bad)
stos
or
popa
jb
fldenv
das
cwde
mov
add
cwde
dec
test
in
xchg
cmp
mov
xchg
aas
dec
xchg
push
push
sub
pop
xchg
push
pop
jl
pop
mov
cdq
es
imul
jl
ss
pop
in
dec
jge
fs
fcmovb
lods
fbld
int
aaa
fs
repnz
or
in
pop
fld
mul
movs
cli
sub
mov
sub
lds
retf
mov
sbb
sti
std
dec
je
dec
in
jg
push
cld
test
fimul
daa
outs
mov
mov
inc
(bad)
outs
inc
or
shl
xchg
mov
inc
out
int3
jl
(bad)
xor
icebp
cmps
aaa
dec
mov
mov
or
push
fidivr
fidiv
mov
out
pop
adc
lea
mov
cmp
add
push
mov
std
ficomp
sbb
clc
mov
and
sub
lock
out
inc
jecxz
xlat
std
and
movs
icebp
jl
pop
(bad)
(bad)
stos
push
data16
enter
sub
add
loope
jne
out
dec
jne
fsubrp
out
rol
pop
jp
mov
out
sub
and
jb
or
fdiv
push
loope
div
and
imul
jecxz
shr
xor
and
sbb
and
jae
mov
xchg
icebp
(bad)
out
test
mov
sbb
jno
lods
add
mov
inc
and
cld
xchg
mov
inc
call
aaa
repz
add
pop
push
jmp
test
sahf
dec
pop
mov
cs
inc
xchg
add
aad
arpl
mov
dec
sbb
sar
add
add
fistp
cmc
mov
test
int
pop
(bad)
fdivr
sar
mov
jl
push
out
and
sub
out
call
enter
fs
mov
rcr
adc
je
inc
sub
cs
cwde
push
enter
sub
imul
xchg
cmp
les
pop
xchg
retf
pop
and
int3
inc
repnz
sbb
popa
retf
jae
xchg
add
or
adc
push
add
cmps
jecxz
imul
adc
fidivr
shl
xchg
int3
mov
mov
test
dec
xor
retf
xor
fistp
jle
mov
cmp
sub
frstor
popf
cmps
(bad)
fiadd
sbb
xchg
push
push
sub
xchg
or
into
push
xchg
out
or
int
sub
fsubrp
js
mov
rcr
leave
gs
or
pop
(bad)
in
sbb
dec
pop
jmp
mov
movs
jb
movs
(bad)
loop
sbb
hlt
sub
sahf
cmp
ret
pop
test
mov
sub
mov
jl
stos
jne
lods
ficomp
sub
sub
jno
xor
mov
pop
hlt
push
mov
fidiv
lahf
loopne
cld
pop
pop
push
push
pop
cmps
adc
int
out
retf
sbb
stos
stos
ds
lock
mov
or
sbb
sahf
xchg
or
test
ror
add
cwde
or
daa
dec
xchg
mov
mov
or
js
jecxz
test
xor
mov
adc
(bad)
xchg
mov
push
push
cmp
adc
ffree
shl
sub
ret
mov
mov
mov
adc
movs
pop
pop
jmp
loop
imul
adc
mov
fisubr
pop
stos
je
iret
arpl
in
sub
mov
mov
pop
mov
lods
sub
or
mov
inc
mov
cmp
(bad)
je
std
xor
sub
add
mov
addr16
pop
nop
sbb
ins
sub
add
cmp
mov
iret
xor
int3
dec
xchg
std
sbb
scas
fnstcw
inc
aad
stos
xchg
leave
leave
std
or
or
dec
xor
ja
ret
lock
push
retf
push
mov
sbb
add
in
xchg
xchg
gs
fisub
jecxz
aas
cs
out
xor
sub
into
(bad)
and
shl
cld
mov
arpl
pop
test
jle
jmp
push
cli
pop
inc
fdiv
inc
mov
rol
sub
xchg
and
xor
pop
shl
popa
jae
jmp
scas
fsub
push
sbb
push
leave
sub
cmc
in
ja
mov
(bad)
inc
dec
pop
fcomp
pop
and
mov
sbb
add
pop
adc
icebp
ret
test
pop
cmp
pop
xchg
(bad)
fld
mov
(bad)
push
mov
fnstcw
iret
xor
mov
jno
xchg
out
gs
aaa
mov
sub
scas
xor
out
jmp
push
xchg
push
mov
or
sar
and
xlat
fstp
adc
aaa
mov
and
(bad)
stos
mov
or
(bad)
mov
jne
and
ja
fnstenv
sti
loopne
in
push
pop
rdpmc
jp
retf
dec
jbe
pop
pop
out
out
sbb
jns
xor
ss
push
rcl
test
mov
and
jb
out
mov
lahf
or
ss
aad
inc
mov
xor
pop
stc
jle
and
scas
pop
xor
enter
scas
jecxz
mov
cmps
pop
push
inc
dec
das
xchg
sahf
out
or
mov
je
adc
or
jb
sbb
cdq
test
push
pop
repnz
cmps
jnp
lahf
inc
lock
test
bound
add
dec
icebp
lahf
or
das
ins
mov
scas
mov
pop
and
out
jp
out
aad
xchg
pop
push
sar
(bad)
cli
cmp
adc
lods
jge
sbb
arpl
int3
dec
ficom
arpl
jb
gs
jecxz
mov
fwait
pop
xchg
jo
lea
and
adc
ret
push
push
call
sti
pop
pop
dec
mov
aad
push
out
retf
loopne
pop
cdq
sar
sub
fnsave
bound
cmp
xchg
push
mov
test
sbb
push
cmp
xchg
(bad)
lods
jb
loop
jnp
cmps
push
cmps
sti
adc
hlt
lods
or
retf
mov
xchg
add
iret
lea
pop
out
add
inc
pop
add
xor
dec
and
jb
push
out
cdq
mov
jle
inc
cmp
jp
jne
push
shr
in
mov
push
rcl
xor
call
jmp
retf
mov
sahf
mov
shl
jae
xor
retf
loope
outs
dec
pop
icebp
and
lock
in
mov
repz
ret
or
jne
jbe
or
je
inc
dec
retf
inc
push
mov
push
dec
cmps
inc
ins
mov
cli
cmps
sub
and
rcr
test
je
in
ret
mov
stos
out
pop
inc
push
fimul
push
add
call
retf
jns
cmp
stos
aam
mov
jb
xchg
outs
cmp
add
loop
add
fcmovnbe
call
mov
or
mov
addr16
xchg
or
or
dec
cmp
adc
shl
or
mov
loop
pop
out
dec
sub
scas
(bad)
ds
inc
and
adc
pop
sub
jmp
dec
mov
das
pop
ins
(bad)
sub
push
cmp
ja
imul
cmps
nop
aam
pusha
add
enter
ins
rcl
add
sub
push
and
arpl
push
jns
sbb
sti
out
lods
sahf
dec
or
push
mov
popa
mov
in
hlt
or
jecxz
je
xlat
inc
lods
aaa
arpl
jbe
push
jecxz
les
loope
adc
pop
mov
push
pop
loopne
mov
cmp
push
test
in
cmp
xchg
or
mov
mov
retf
fidiv
cmp
jbe
sub
scas
clc
cmp
xchg
inc
jmp
mov
jnp
scas
cmp
mov
pavgb
retf
movs
cmp
inc
scas
inc
into
cmp
sbb
and
cmp
jle
push
jnp
cdq
pop
adc
mov
pop
fiadd
xchg
mov
(bad)
repz
add
mov
and
or
stos
adc
rcr
out
jp
xchg
ins
jo
out
bound
jge
and
xchg
ins
retf
lods
outs
sbb
cld
in
scas
jmp
aam
out
cli
xor
jmp
pop
push
out
cmp
arpl
test
sub
jmp
mov
nop
and
jae
jae
test
cmp
inc
or
cmp
or
mov
or
aas
or
(bad)
jno
cmps
and
push
mov
dec
imul
nop
and
rcr
xlat
and
dec
cli
adc
adc
cmp
aaa
sbb
dec
out
add
sub
push
jae
push
or
sar
and
dec
mov
pop
mov
cmc
sbb
or
sub
or
inc
mov
inc
lods
mov
pop
ins
xor
mov
add
xchg
ds
shr
xlat
addr16
mov
bound
and
daa
test
jle
pushaw
dec
pop
mov
pop
mov
dec
jmp
xor
xchg
xchg
test
icebp
pop
addr16
or
icebp
mov
fdiv
cmp
cmps
sar
cmp
scas
jns
retf
iret
mov
cmp
mov
ret
stos
ss
pop
neg
and
jbe
ja
push
cmp
(bad)
cmp
popa
and
enter
mov
and
mov
sbb
or
jge
inc
dec
and
push
cmp
rol
or
push
lods
cmps
push
es
nop
adc
iret
mov
inc
punpcklbw
pop
jbe
fmul
lahf
movs
fdivrp
outs
sti
les
mov
inc
cmp
sub
aad
pusha
xor
inc
fst
sbb
mov
addr16
nop
(bad)
fldenv
je
(bad)
js
sbb
push
mov
mov
(bad)
out
into
or
adc
adc
adc
leave
pop
sbb
pusha
(bad)
hlt
fadd
pop
and
stos
pop
adc
xchg
imul
enter
in
inc
movs
mov
jbe
pop
out
arpl
popa
cmp
test
mov
fld
jp
popa
cmp
jg
xchg
mov
pop
ror
gs
jmp
pop
pop
jle
and
enter
int
mov
addr16
xor
or
js
jb
popf
pusha
mov
adc
cmp
pop
add
or
pop
leave
imul
jns
or
loope
addr16
in
pusha
pop
call
daa
hlt
mov
xchg
xchg
into
inc
pop
lods
cmps
push
enter
fscale
lahf
inc
sbb
cmps
pop
jb
mov
adc
xor
pop
aad
pusha
xchg
rcr
xchg
repnz
mov
jp
stos
jp
push
(bad)
scas
add
test
mov
adc
sbb
movs
adc
call
mov
xchg
loopne
cmp
sub
xlat
fimul
test
jne
inc
sub
sti
pop
cmp
xchg
inc
sub
pushf
enter
xchg
repz
aam
mov
jb
cld
jno
or
cwde
xor
sub
add
mov
xchg
push
mov
ja
outs
push
sbb
or
(bad)
mov
sbb
jns
xor
pop
arpl
push
mov
jecxz
sti
jg
in
mov
inc
(bad)
jno
int
xchg
mov
cmp
ret
imul
dec
jae
jns
mov
dec
push
cmp
(bad)
or
mov
sbb
lahf
movs
xrelease
dec
add
and
and
leave
mov
sub
and
mov
div
cdq
shr
lahf
mov
jnp
mov
sub
gs
mov
inc
and
mov
cmps
cmc
into
cld
cmp
shr
ss
pop
ss
push
dec
inc
loopne
fisttp
jo
xor
sbb
inc
cmp
out
pushf
not
sahf
mov
cmps
dec
and
inc
push
mov
mov
rcr
mov
push
add
dec
push
out
jns
(bad)
xlat
push
and
dec
nop
cmc
je
leave
pusha
mov
test
pop
lds
ds
mov
or
mov
sub
cmc
fcomp
call
mov
lock
call
gs
push
dec
call
sub
repnz
fild
mov
das
jmp
ja
ja
ds
mov
shl
pop
in
fisttp
jl
sbb
sbb
dec
ins
cmp
cmc
icebp
cld
jge
outs
hlt
fimul
fst
sub
jo
pop
into
test
mov
mov
in
ins
add
movs
adc
jnp
jmp
test
sub
test
cmp
out
dec
or
mov
sub
ret
sub
jp
sbb
add
sub
inc
jecxz
push
repnz
push
jecxz
mov
push
loop
xchg
xchg
fiadd
ret
and
ins
lock
sub
pop
mov
add
out
xor
mov
nop
mov
add
add
(bad)
add
adc
push
sbb
dec
xchg
mov
pop
popa
into
mov
mov
xor
aaa
lahf
js
xor
mov
call
mov
mov
ja
aad
xchg
dec
jle
fsub
adc
inc
in
add
or
leave
sahf
movs
mov
mov
inc
xor
or
push
aam
sbb
inc
pop
jp
xchg
bound
scas
call
test
ins
dec
sbb
and
mov
adc
inc
ret
or
xchg
xchg
enter
sti
add
popa
fcmovu
jle
mov
out
xor
mov
int
add
hlt
sti
imul
sub
cmps
inc
lods
fist
push
dec
leave
nop
dec
lods
push
xchg
gs
add
jns
push
mov
sub
cmp
jmp
dec
(bad)
mov
or
(bad)
mov
cmp
pop
bound
pop
icebp
in
sti
pop
xor
ret
or
cmp
jbe
repz
mov
inc
icebp
fsubr
or
and
mov
pusha
mov
into
cmp
push
cmp
les
adc
pop
aas
movs
adc
xchg
jne
in
cmp
mov
xchg
push
cmps
call
dec
daa
pop
shr
cmp
mov
xchg
and
dec
shl
jne
sbb
test
jne
out
dec
jge
mov
aam
das
push
pop
lods
fild
sbb
nop
mov
jp
rcr
inc
pop
sbb
mov
leave
pop
out
mov
lods
push
sahf
nop
(bad)
stos
retf
stc
fist
pop
das
mov
test
adc
ja
push
cmc
xchg
and
jle
add
add
jns
and
repz
popa
rcr
mov
xlat
fldcw
cmps
cli
xchg
jle
sbb
mov
cmps
outs
lds
xor
add
pop
in
ja
into
daa
sub
add
mov
addr16
mov
mov
and
xchg
xor
lods
jae
jge
rol
xlat
adc
shr
xchg
repz
movs
xchg
jns
outs
mov
xchg
sub
movs
in
xchg
(bad)
icebp
jno
jge
(bad)
std
in
mov
jns
ret
js
and
adc
(bad)
addr16
xchg
mov
inc
sub
cmp
sbb
xor
js
and
xor
xchg
dec
es
xchg
mov
lock
mov
pushf
test
loopne
lods
pop
mov
jmp
retf
jmp
mov
repz
xor
cwde
es
push
sub
cmc
cmp
pop
adc
ficom
cwde
add
movs
jmp
xchg
push
imul
inc
gs
pop
cmp
cli
clc
push
jecxz
aas
xor
repz
rol
jae
xchg
pop
sti
pop
adc
shr
sub
fcomp
cs
mov
mov
stos
or
aaa
mov
sbb
scas
(bad)
mov
scas
out
push
in
popa
mov
mov
data16
cmp
mov
mov
pop
pop
pushf
dec
aas
call
cmp
test
mov
mov
mov
adc
mov
inc
ret
enter
add
int3
test
hlt
lods
cwde
retf
cmp
out
push
push
and
cmp
mov
outs
adc
jns
pop
dec
add
and
sbb
push
js
add
jno
sbb
adc
loopne
jle
minps
popf
pushf
imul
mov
lods
pop
repz
add
xchg
int
cmc
push
mov
dec
mov
cmps
mov
cli
xchg
aas
cmp
adc
xchg
(bad)
loopne
fs
adc
imul
mov
popf
cdq
cli
loop
movs
xor
dec
mov
cmp
or
add
jne
lods
ja
inc
cmp
sbb
xchg
icebp
pusha
mov
push
and
(bad)
or
add
stc
out
sub
sbb
mov
imul
ret
and
push
dec
iret
into
xchg
cmp
lods
mov
adc
(bad)
jae
lods
dec
pusha
cmp
ins
mov
stc
xchg
mov
stos
pop
test
jb
div
aas
adc
push
cmp
jecxz
popa
sbb
sbb
mov
or
push
mov
pop
outs
test
sbb
mov
push
or
pusha
(bad)
xchg
fcom
popf
(bad)
cmc
mov
xor
lods
pop
mov
push
test
and
or
and
inc
out
lds
retf
out
jmp
mov
cld
mov
xchg
sub
fcom
int3
or
(bad)
imul
jecxz
sar
adc
mov
jo
movs
lock
(bad)
leave
dec
push
(bad)
jne
inc
cmp
mov
clc
clc
icebp
sbb
push
outs
scas
xchg
xor
repz
hlt
cmp
leave
icebp
into
icebp
cmc
sbb
adc
mov
ja
aaa
add
in
stos
into
(bad)
jmp
add
int
rcl
push
push
mov
int3
ins
mov
outs
or
call
mov
pop
mov
cmc
cmc
arpl
sti
mov
mov
fld
mov
xor
xchg
stos
mov
mov
clc
aas
push
mov
into
sar
cdq
fisttp
pop
repnz
fdiv
xchg
mov
arpl
fimul
ror
adc
popa
jns
ror
fbld
or
mov
ret
test
mov
xor
cmp
xchg
(bad)
and
sub
aam
jecxz
in
cmp
or
xchg
repnz
mov
lods
dec
cli
adc
add
add
in
xchg
ins
inc
test
dec
push
ja
push
iret
mov
xor
sbb
data16
pop
rol
add
(bad)
out
(bad)
fs
in
pop
lahf
test
int
push
call
or
inc
das
cmc
push
cmove
jne
push
push
pop
shl
jge
es
icebp
scas
mov
in
pop
jne
xchg
pop
xchg
mov
cli
je
xor
mov
adc
fldcw
or
xor
ret
xor
and
rol
int3
aaa
mov
mov
cli
cmp
dec
add
cmp
jbe
neg
mov
out
mov
jmp
inc
push
ret
and
adc
leave
xchg
push
sbb
xor
add
or
fucomip
lock
inc
or
xchg
mov
les
enter
aad
das
inc
adc
adc
movs
(bad)
(bad)
retf
iret
shl
ins
fucomip
out
sub
add
neg
fcomi
dec
or
mov
sub
test
sar
or
lock
xor
mov
xor
cli
jmp
int
pop
mov
and
mov
enter
cmp
test
ret
pop
jle
nop
shr
push
jle
dec
fcomp
sub
mov
jl
sbb
adc
inc
fsubr
shr
addr16
cmp
cmp
movs
jmp
enter
repnz
inc
cld
jg
mul
ds
leave
outs
test
mov
arpl
sbb
aad
addr16
sub
cli
loop
int3
(bad)
jg
outs
je
cmp
cdq
mov
cli
movnti
xchg
es
add
jmp
cwde
xchg
mov
les
movs
xchg
pop
sar
xlat
sub
shr
pop
test
push
pop
stos
retf
scas
dec
add
sub
push
or
inc
cld
jp
shl
add
(bad)
adc
enter
les
adc
adc
das
repz
mov
sbb
test
cmp
stc
lods
out
jg
or
push
imul
mov
xchg
jmp
out
or
mov
rol
fist
push
jmp
retf
pop
pop
mov
mov
mov
repz
jno
fstp
push
inc
out
sti
out
dec
pop
pop
cmps
test
sub
pop
lods
clc
rol
mov
push
out
pusha
daa
pop
adc
call
stos
sub
bnd
xor
fwait
les
mov
call
jb
dec
inc
rcl
jle
xor
mov
push
jl
push
jae
gs
dec
cmp
sub
adc
call
fwait
jne
test
cmp
add
jecxz
retf
inc
and
rcr
in
dec
cmp
inc
sar
retf
(bad)
imul
mov
xor
jecxz
repz
adc
retf
jl
daa
sbb
jmp
mov
mov
loope
jmp
xchg
mov
sub
cmp
mov
pop
and
add
cld
xchg
cmc
xor
add
mov
and
and
or
adc
push
push
ss
xchg
sub
sbb
mov
mov
in
lock
pushf
arpl
mov
jno
and
dec
mov
mov
not
(bad)
in
push
(bad)
test
pop
jg
popa
aad
and
inc
adc
movs
xchg
mov
jge
popa
dec
nop
or
(bad)
out
sub
xchg
imul
jge
(bad)
movaps
inc
out
call
or
lods
aad
lea
dec
mov
(bad)
data16
fst
repnz
out
repz
mov
(bad)
scas
cmc
daa
inc
cmc
adc
stos
int3
pop
mov
dec
pop
jge
cmp
outs
mov
outs
inc
and
fisubr
out
and
in
sbb
shr
inc
or
fwait
movs
test
cmc
xchg
cmp
lahf
push
std
and
loopne
push
or
sbb
mov
xchg
das
ins
cs
rcl
xchg
sbb
xchg
in
cmp
fisub
bound
and
outs
pusha
xor
ds
pop
ins
push
xchg
fmulp
iret
jne
or
out
jle
or
es
push
ret
aaa
daa
inc
in
mov
loope
mov
outs
sub
cmp
fs
sahf
mov
push
into
xor
and
sbb
je
sar
inc
or
pop
pop
sbb
out
jnp
xchg
mov
int
xor
mov
dec
xchg
push
mov
cwde
mov
xchg
push
pop
xchg
xchg
(bad)
mov
or
mov
popf
std
cwde
je
lods
leave
mov
(bad)
rcl
mul
shl
jl
jecxz
arpl
sbb
fs
imul
loopne
mov
push
loop
(bad)
xor
das
ss
adc
pop
fs
ins
mov
xor
sub
pop
jmp
imul
add
push
mov
(bad)
sti
mov
jle
ret
sbb
or
push
not
jae
dec
enter
xchg
add
sbb
cmps
jnp
xor
dec
cli
sub
(bad)
add
dec
mov
adc
mov
dec
in
or
adc
jle
sbb
cs
adc
outs
xlat
dec
or
and
xchg
xor
jae
sbb
xor
adc
adc
sub
mov
dec
mov
daa
mov
or
je
fcmovnbe
xchg
mov
xor
or
xchg
or
aaa
stc
ret
dec
sbb
sar
ror
or
bound
loop
mov
xchg
test
fimul
add
lds
mov
aam
or
adc
mov
mov
push
ins
mov
ficom
dec
mov
aam
rol
sti
loop
pop
pop
pusha
adc
pop
xor
sbb
pop
jge
mov
aaa
cmp
mov
push
add
mov
xlat
fcmovb
and
in
sbb
push
stos
or
jl
rol
adc
aad
xchg
test
inc
in
mov
icebp
pop
shl
leave
mov
lods
inc
int3
or
pusha
std
ror
scas
(bad)
pop
not
or
mov
call
out
add
aas
(bad)
mov
mov
stos
shr
cmp
lahf
sub
lea
mov
push
xchg
and
xchg
lahf
enter
pop
imul
retf
sbb
in
sub
pop
xchg
push
dec
and
jmp
sub
out
shl
mov
cmps
retf
xor
loopne
mov
sbb
jle
out
out
pop
test
pop
and
sbb
aam
mov
jl
cwde
jmp
das
mov
aam
xchg
imul
inc
(bad)
mov
xor
inc
jne
inc
dec
fs
test
push
inc
stc
test
mov
cmp
outs
ins
loopne
out
and
gs
ret
arpl
jecxz
pop
push
xchg
ins
pop
mov
fwait
dec
xor
cmps
repnz
data16
int
sti
leave
adc
sub
hlt
xor
add
inc
inc
cmp
in
leave
and
jbe
mov
and
dec
dec
scas
dec
dec
mov
pop
or
(bad)
mov
rcl
cld
cmp
jmp
jae
jne
je
je
jle
push
xor
jp
std
sub
xchg
sar
push
rcr
push
adc
stos
jecxz
retf
ret
clc
add
fwait
mov
mov
dec
popa
into
pop
xor
mov
push
jbe
xchg
das
mov
scas
test
mov
(bad)
lahf
cmc
push
ss
jbe
mov
pop
adc
stos
pop
cmps
ret
repnz
xor
cwde
jae
stos
push
mov
cmp
jbe
jo
jmp
jbe
mov
xchg
gs
push
push
aam
jnp
ja
je
sbb
cmp
or
mov
hlt
mov
cmp
xor
and
popf
ja
mov
inc
jp
cmp
mov
movs
mov
cmp
sub
and
sahf
xchg
in
retf
inc
xor
cmp
sbb
and
rcl
inc
popf
and
push
xor
adc
outs
adc
repnz
fistp
ret
je
aad
movs
ins
in
xlat
or
dec
pushw
adc
icebp
pusha
dec
mul
jmp
aam
adc
fsubr
loope
sbb
fnstsw
xor
mov
inc
neg
or
lock
into
cmps
lds
inc
(bad)
enter
and
gs
or
rcr
inc
and
sub
in
xor
clc
aad
shl
stos
add
pop
sbb
push
call
mov
out
inc
xor
(bad)
dec
bound
push
aad
jecxz
aam
faddp
push
inc
cvtps2pd
in
aas
adc
push
shr
das
shl
stc
cwde
add
inc
out
in
xchg
stc
bound
and
adc
jmp
mov
movs
ja
sub
jns
push
(bad)
cmc
sar
call
repnz
in
pop
cmc
repnz
int3
std
or
dec
and
movs
leave
push
push
ficom
daa
or
into
jno
in
xchg
xchg
pop
inc
cld
mov
adc
adc
mov
adc
xchg
std
xor
and
fcomp
or
mov
pusha
fs
or
adc
mov
js
outs
ficomp
(bad)
jle
cmp
xor
fs
sbb
outs
jnp
psubd
inc
ins
and
inc
pop
mov
pop
lahf
cmp
inc
ret
clc
xor
pop
pop
jb
inc
ins
pop
stos
test
jb
xor
xor
push
ror
jnp
jnp
test
sbb
cmp
enter
iret
xor
out
push
and
jns
xchg
fstp
bound
ret
xor
aam
or
add
fistp
loope
jbe
in
in
add
lea
mov
add
fsubrp
jnp
add
mov
xchg
js
into
(bad)
pop
dec
outs
inc
dec
iret
gs
push
fidivr
popa
push
cdq
pop
cmp
fiadd
in
enter
mov
dec
cmp
xor
leave
aad
dec
adc
cmp
daa
inc
js
pushf
mov
xchg
jmp
push
dec
pusha
dec
dec
inc
mov
xor
in
jle
dec
std
test
mov
mov
nop
jo
sbb
(bad)
out
xor
mov
inc
fcmovu
fld
aad
ret
xchg
jg
adc
pop
pop
loopne
pop
lock
cld
jle
jb
mov
mov
jecxz
jge
cmp
shl
jg
mov
hlt
pop
iret
push
push
push
out
mov
mov
movs
adc
nop
lods
or
popf
fucomi
or
mov
aam
mov
out
scas
push
xchg
mov
idiv
int
and
push
cmp
and
outs
nop
in
dec
fistp
or
xchg
push
dec
push
test
test
movs
push
adc
lock
outs
push
aas
inc
test
fist
mov
out
sub
mov
in
je
push
inc
movs
xor
addr16
clc
sbb
loope
call
jne
stc
add
sti
bound
jmp
or
cmc
ffree
ja
iret
sti
sbb
jae
add
ffree
enter
mov
lock
adc
stos
into
inc
pop
add
add
repz
sbb
imul
mov
inc
mov
inc
jae
add
mov
inc
into
mov
mov
ret
and
sbb
hlt
mov
mov
mov
call
inc
gs
fld
jno
out
repz
(bad)
dec
jnp
sub
jp
xor
out
cmc
test
shl
test
add
jne
adc
mov
or
xchg
out
cmp
jno
ins
popa
sar
mov
or
mov
add
js
push
fs
data16
mov
pop
jp
mov
stos
(bad)
cmps
fxch
adc
lods
sbb
cdq
and
or
lds
stos
retf
imul
nop
jg
pop
jecxz
xchg
aas
xchg
loop
arpl
jle
call
fist
lahf
push
add
dec
dec
cli
cmp
xchg
cmps
xor
out
popa
dec
mov
mov
pop
push
jge
stc
scas
xchg
(bad)
retf
xchg
cmp
out
test
cdq
push
ins
daa
mov
add
mov
int3
daa
add
xor
shl
out
mov
dec
(bad)
adc
pop
movs
and
leave
cmp
gs
lock
pop
inc
mov
xor
in
jo
push
xchg
jecxz
inc
mov
bnd
sbb
sub
jne
sbb
sub
hlt
movd
fistp
test
pop
pusha
cmp
jmp
add
or
loopne
aam
mov
cmps
lods
mov
mov
and
xor
pop
aam
pop
mov
pop
push
jge
jecxz
out
les
mov
shr
sub
mov
push
mov
or
jecxz
pushf
fxch
sub
inc
sub
xor
test
and
int3
test
(bad)
gs
stos
ret
and
out
lock
add
sbb
push
imul
xchg
jbe
jle
movs
xor
ret
loop
fild
cmps
and
jae
sub
mov
in
sbb
out
and
and
inc
in
aaa
lea
leave
test
inc
add
push
mov
cmp
bound
cli
jp
xchg
cld
arpl
enter
shl
mov
and
fwait
push
retf
mov
or
sub
fst
ja
outs
bnd
lahf
adc
out
dec
add
pop
imul
addr16
nop
movs
call
outs
xchg
jecxz
pop
mov
push
jle
push
and
jae
dec
lea
mov
jmp
(bad)
inc
add
xchg
clc
popa
mov
shl
out
or
call
cmps
jne
hlt
xor
and
rcl
dec
pop
pop
push
mov
and
enter
dec
jl
cmp
jge
mov
jmp
and
mov
cs
stos
mul
cmps
popf
jmp
adc
test
pop
ins
stc
pop
fwait
ja
mov
sub
fs
outs
cmc
stos
lahf
jae
mov
pusha
rcr
jb
and
push
out
test
jb
add
fstp
or
mov
sbb
call
add
push
xor
out
push
fstp
pop
jmp
ficomp
xchg
pop
dec
out
stos
cli
push
popa
jmp
sti
shr
push
test
push
scas
sbb
inc
push
clc
ja
jl
and
pop
das
leave
ds
test
and
pusha
push
data16
cmp
mov
adc
or
xor
mov
scas
fs
lds
add
inc
imul
push
mov
pop
fist
movs
inc
pop
xchg
push
aam
daa
aaa
lahf
(bad)
dec
fisttp
es
fdivr
cmp
imul
mov
sub
mov
pop
aas
repz
mov
popf
sbb
cld
jns
lock
arpl
test
daa
mov
push
fisubr
lods
push
hlt
dec
mov
add
cmps
sbb
cld
jae
mov
pushf
ret
inc
cmps
ret
je
jb
enter
mov
fisubr
jne
pop
test
mov
cwde
pop
or
mov
call
and
iret
popf
and
(bad)
mov
dec
mov
xor
jmp
adc
or
inc
(bad)
adc
cmps
mov
mov
inc
mov
add
sub
(bad)
fnstenv
jnp
leave
jnp
jo
adc
xrelease
in
test
push
cmp
cmp
jl
jmp
pop
inc
jmp
pop
cmps
aad
adc
in
rol
setge
or
jl
pop
xchg
add
inc
or
repz
aaa
std
ds
dec
push
(bad)
xchg
(bad)
shl
pop
sub
adc
jno
aas
mov
test
and
push
sbb
inc
addr16
push
repnz
shr
lods
rcl
int3
push
pop
pop
aam
lea
jge
mov
mov
nop
mov
ror
mov
xchg
call
adc
dec
in
mov
fsubr
out
pop
inc
ficom
add
outs
mov
xor
and
xchg
xchg
jne
cli
inc
cmps
cmp
push
fs
dec
repnz
push
mov
pop
inc
dec
jg
in
dec
cmp
jae
or
and
dec
xor
push
xchg
cmp
and
sub
push
outs
(bad)
lods
dec
jmp
ins
adc
das
stos
jno
jno
std
push
jb
fiadd
add
leave
in
scas
stos
test
add
out
loop
test
sub
mov
sbb
test
push
or
and
dec
imul
inc
xchg
adc
iret
sub
jae
jge
or
mov
add
mov
dec
aas
xor
cmp
jmp
sbb
dec
jne
stos
inc
repnz
arpl
sbb
or
xchg
mov
push
push
daa
pop
dec
pop
push
jp
scas
pop
dec
add
not
mov
dec
and
fwait
ror
and
dec
and
enter
les
sub
push
fild
leave
ins
lods
push
enter
mov
imul
int3
out
stc
ins
(bad)
push
xchg
jbe
fnsave
push
add
icebp
aas
stos
dec
and
je
scas
(bad)
aas
cli
fmul
in
out
dec
mov
fdivp
sar
ret
cmp
mov
in
loop
xchg
in
dec
inc
test
rol
and
mov
fwait
sbb
ja
hlt
and
xchg
test
rcl
test
jns
jmp
in
(bad)
adc
popf
jle
xchg
or
pop
cdq
hlt
sub
scas
ins
call
push
loop
jl
pop
cmp
mov
and
mov
pop
in
lock
je
clc
push
sbb
ss
outs
repz
lods
mov
into
adc
(bad)
fldcw
outs
and
(bad)
jnp
mov
pop
and
popa
or
and
xchg
pop
xchg
cmp
out
push
cmp
fnstenv
ret
jo
fild
js
out
xor
mov
in
jecxz
sbb
or
jno
enter
stc
adc
xchg
jmp
mov
test
mov
jmp
xor
(bad)
jne
push
push
arpl
jae
retf
bound
pushf
pop
outs
inc
cs
imul
push
push
stos
adc
fwait
pop
call
adc
fistp
out
xor
and
mov
ins
and
dec
xchg
push
test
mov
aas
inc
test
js
imul
int3
jge
sub
and
xor
rcl
ret
sbb
xchg
mov
int
jp
and
push
cmp
fcom
inc
push
sub
fnstsw
sar
shl
pop
jb
bound
mov
or
pop
mov
or
mov
sahf
daa
sub
dec
and
gs
mov
dec
push
outs
sbb
(bad)
sbb
loope
ret
(bad)
std
mov
adc
ret
imul
jecxz
out
dec
rol
in
mov
mov
mov
lds
jg
mov
mov
cmp
push
push
push
int3
out
mov
aam
push
inc
mov
jmp
or
daa
scas
pop
outs
sbb
push
cmp
jns
cmc
ds
lea
cld
push
fmul
ds
inc
pusha
sar
sbb
sbb
sub
or
mov
ret
cmp
retf
mov
imul
cmp
pop
inc
adc
iret
xor
push
or
jmp
xchg
dec
fdivr
xor
push
push
aam
push
xchg
xchg
es
lods
jmp
(bad)
pop
(bad)
cmp
dec
repz
mov
stc
icebp
fadd
jge
jl
cmps
(bad)
adc
sbb
dec
push
iret
add
adc
xchg
mov
jae
inc
cmp
inc
pop
xchg
adc
jno
(bad)
dec
out
sar
add
js
fild
mov
jle
retf
xor
fisub
rdtsc
cmp
sbb
mov
pushf
adc
mov
sbb
dec
scas
jns
push
jecxz
sbb
dec
inc
pusha
in
xor
add
add
xor
or
cwde
jmp
mov
repnz
xlat
mov
fnsave
push
mov
cmp
jnp
jno
and
push
shr
jecxz
mov
dec
sub
mov
or
movs
push
pop
rcr
xchg
inc
ins
outs
xlat
push
mov
sub
imul
dec
adc
lods
in
push
les
lods
cli
push
loope
aad
and
xacquire
pop
sbb
sti
mov
mov
fisubr
sub
iret
(bad)
jge
inc
xchg
test
cwde
add
mov
cmp
push
xor
cmps
retf
mov
pop
jb
sbb
cmp
cdq
xor
add
push
hlt
stc
xchg
out
jmp
sbb
enter
loop
cmovo
sub
arpl
movs
mov
pop
mov
xlat
push
retf
push
and
inc
mov
rcr
imul
fimul
jge
push
lock
test
xlat
cmp
stc
xlat
daa
xchg
fld
(bad)
xor
test
test
jl
push
shl
mov
cmps
int3
or
addr16
fwait
xor
sbb
sahf
not
out
cmp
dec
popa
push
inc
enter
and
pop
gs
sbb
pop
popa
(bad)
pop
cmp
sub
jle
xchg
push
sub
(bad)
push
or
mov
(bad)
adc
push
sbb
inc
out
scas
int3
pop
mov
test
fnstsw
cmps
xlat
pop
js
psubq
mov
and
ror
mov
mov
ja
cmp
jns
cmc
jecxz
cmp
cmp
dec
out
fst
push
imul
sub
push
sub
push
mov
inc
out
test
jae
pop
jmp
das
bound
rcr
test
mov
sbb
xor
popf
mov
fild
lea
out
imul
inc
(bad)
lods
cmp
ret
scas
and
pop
mov
xor
sbb
(bad)
shr
or
dec
(bad)
in
and
std
pop
xchg
je
das
push
cdq
dec
sbb
ins
dec
(bad)
mov
dec
sub
lods
call
sbb
inc
movs
in
in
inc
mov
push
mov
jg
mov
mov
aas
jns
xor
sbb
ss
bound
xchg
std
cmp
adc
fidiv
enter
es
cdq
fst
push
jp
mov
mov
int3
enter
das
mov
cmp
pop
test
fstp
loop
jle
je
adc
and
dec
mov
xor
sar
fs
jns
mov
push
ss
jecxz
ins
pop
fisub
and
add
push
dec
ret
mov
idiv
rol
pop
shl
cwde
popa
cmp
mov
sbb
das
jecxz
in
lods
or
dec
push
add
lea
mov
out
gs
mov
lods
shl
cmp
in
pop
xor
arpl
dec
stos
and
test
xchg
gs
aad
push
mov
ja
jo
aad
adc
add
mov
cmp
add
movs
lds
push
or
call
imul
imul
stc
ins
loop
addr16
xor
retf
mov
aaa
call
sub
test
fdivr
fnstcw
sub
add
pop
add
inc
call
cmp
cdq
inc
cmovbe
outs
ret
cdq
xor
js
pop
nop
data16
cmp
mov
movs
mov
dec
sub
add
jecxz
or
aad
clc
pop
lods
push
mov
mov
lock
(bad)
pop
stos
adc
adc
xor
sub
clc
enter
cwde
loope
sub
xchg
mov
dec
loop
lds
xor
sbb
pop
lods
fsubr
(bad)
leave
(bad)
dec
into
ret
or
mov
inc
cmps
pushf
fadd
cld
jge
imul
mov
push
rcl
push
(bad)
jmp
js
ss
int3
sub
sub
mov
xchg
lds
xor
jg
sbb
add
and
neg
stos
jp
aas
pop
lahf
jne
xchg
ret
aad
popf
loop
ja
push
xor
cld
mov
sub
scas
scas
sti
mov
sbb
pop
cmp
cli
leave
daa
rcr
cs
mov
jp
(bad)
pop
dec
xchg
stos
pop
outs
cmp
jo
test
inc
das
(bad)
std
scas
bound
sbb
sub
xchg
loop
inc
pop
movs
out
enter
adc
cmp
jmp
data16
mov
push
xchg
pop
push
jl
mov
mov
fadd
dec
(bad)
lods
xor
lds
test
data16
cmp
mov
and
retf
repz
mov
loop
ss
dec
mov
or
xor
hlt
push
xor
jge
dec
jp
dec
aaa
xor
test
loopne
sbb
mov
push
adc
push
sbb
sbb
sbb
ds
adc
loope
mov
fiadd
dec
push
scas
cdq
sub
mov
sub
nop
cmp
jmp
pusha
pushf
dec
inc
retf
fdivp
mov
add
and
mov
cwde
retf
push
imul
clc
mov
loop
into
mov
fmul
in
or
jge
jbe
adc
cmp
or
stos
(bad)
icebp
jp
retf
jns
sbb
lods
or
xor
fadd
xchg
mov
mov
jnp
xor
add
mov
in
add
mov
movs
xor
shl
je
cmp
cmp
jl
fist
sub
sbb
inc
mov
pop
popf
out
dec
out
add
int
jg
pop
mov
sub
xchg
test
inc
add
inc
rol
rcr
push
retf
loope
cmp
movs
test
pop
hlt
lea
pusha
ins
rcr
mov
xor
movs
inc
mov
inc
pop
js
call
movs
xchg
xchg
(bad)
hlt
rcr
cwde
(bad)
in
pop
dec
cmp
test
and
add
pop
inc
push
mov
aas
pop
mov
ror
mov
jl
aam
adc
div
dec
mov
push
sub
jne
jl
ins
jp
cmp
enter
imul
sub
sub
push
sbb
xchg
cmp
xchg
xlat
int
sbb
call
test
pop
scas
jbe
fs
push
outs
inc
xor
rcr
aaa
or
(bad)
call
add
pushf
xchg
leave
bnd
adc
mov
and
jl
mov
ja
push
fnstcw
jo
sti
xor
cmp
or
push
and
ret
mov
fs
and
push
push
and
test
mov
jmp
dec
mov
iret
das
retf
cmp
movs
and
push
hlt
xor
outs
adc
cli
pop
lods
test
fwait
jmp
xlat
push
neg
or
mov
inc
and
pop
dec
xor
add
(bad)
leave
addr16
test
ss
ins
int
mov
lahf
mov
mov
int
test
dec
popa
shr
addr16
pop
shr
jo
addr16
lods
xchg
lock
or
cmp
lods
jno
add
jmp
setg
mov
test
ja
push
mov
scas
pop
cli
inc
push
mov
sbb
or
stos
pop
mov
adc
pop
shl
inc
pop
inc
sub
or
addr16
movs
cld
mov
push
mov
std
mov
mov
sub
or
add
sub
pop
inc
pop
mov
sbb
fldcw
inc
jbe
(bad)
popf
in
xlat
imul
xchg
rcl
jb
lods
sub
ja
data16
mov
xor
les
or
ds
in
mov
inc
mov
div
adc
hlt
sti
mov
enter
jns
dec
out
test
addr16
and
xor
mov
mov
inc
xchg
sbb
ins
in
rol
fs
popw
mov
mov
mov
mov
loopne
mov
mov
sub
bnd
xor
mov
in
pop
cmp
mov
push
(bad)
fstp
xor
aas
loop
sub
lds
leave
sar
jae
and
push
push
mov
mov
(bad)
popf
inc
xor
das
gs
pop
xor
cmc
rcr
inc
addr16
xor
push
clc
inc
imul
xchg
mov
xor
jno
jmp
xchg
and
out
imul
js
add
std
dec
(bad)
call
xor
in
pop
xchg
push
mov
lahf
and
push
fnstcw
test
je
jg
jne
int
cmp
(bad)
retf
ret
xor
xor
retf
imul
std
pop
mov
movs
or
mov
pop
cmps
loopne
push
sbb
cli
and
call
ret
clc
stos
into
mov
ds
push
loopne
mov
das
mov
movs
fiadd
sbb
jo
add
or
xchg
cli
rcl
js
mov
out
fnsave
xor
fdiv
rol
in
adc
mov
or
cmps
adc
out
mov
push
cdq
add
sti
adc
sbb
out
out
pop
add
pop
dec
jle
adc
loop
pusha
dec
sti
(bad)
xchg
pop
test
push
jmp
mov
xchg
jnp
fidiv
mov
or
or
inc
cmp
nop
jp
shl
pcmpgtd
popf
sbb
push
ds
or
stos
retf
jge
and
hlt
out
(bad)
int
cmps
lods
or
daa
jae
sub
movs
cmp
mov
xchg
cmp
retf
cmps
jns
push
ss
cmp
call
sub
jle
dec
fs
mov
or
or
cli
pop
addr16
push
sti
pop
inc
add
pop
(bad)
xlat
mov
fiadd
fidiv
xlat
js
adc
aad
inc
(bad)
lock
ret
dec
mov
out
cmp
rcr
push
add
shl
jnp
sbb
and
inc
popf
ret
xchg
or
xchg
mov
jg
cli
(bad)
dec
mov
(bad)
mov
iret
pop
aas
mov
xchg
(bad)
neg
(bad)
(bad)
jp
pop
cmc
retf
jp
or
ins
mov
xor
loop
popa
pop
fucom
add
inc
(bad)
call
into
or
fwait
pop
inc
inc
fcom
test
sbb
push
loopne
xor
lahf
mov
mov
mov
movs
inc
les
into
sbb
or
int3
idiv
test
scas
add
adc
inc
sub
sbb
mov
sub
jg
inc
and
pop
or
pop
cwde
scas
stos
test
mov
dec
adc
jg
sbb
repnz
mov
pop
and
out
pop
test
ja
fdiv
jo
and
les
lods
(bad)
mov
sub
sbb
mov
pop
push
adc
ret
test
or
xor
dec
sub
mov
push
jmp
es
div
inc
xchg
rcr
cmp
loop
popf
jbe
xor
xor
jb
xchg
lods
mov
inc
ret
sub
stos
retf
adc
cld
add
in
inc
add
adc
fs
test
mov
push
mov
or
push
inc
ret
xor
adc
cmp
jne
cdq
sti
test
push
imul
or
sbb
push
in
and
add
sti
int
and
xchg
dec
pusha
mov
rcl
daa
pop
ficomp
sbb
pop
mov
adc
pop
xor
adc
ror
out
and
icebp
hlt
mov
es
jnp
ins
out
movs
into
xor
push
je
imul
push
cmc
jb
mov
xor
pop
aam
(bad)
jle
xchg
das
jmp
imul
jp
stos
and
sub
jmp
ficomp
and
push
push
cmp
pop
cmp
int3
daa
hlt
inc
and
sub
ss
sbb
dec
loope
or
jp
cmp
fsub
adc
aaa
push
daa
popf
mov
ins
jmp
aam
fwait
mov
dec
mov
test
inc
loope
add
clc
test
add
xchg
inc
jnp
sub
push
(bad)
dec
add
arpl
ss
(bad)
imul
push
test
mov
int3
int
push
push
stos
dec
jecxz
add
and
sbb
push
adc
pop
xlat
jne
jge
xchg
push
cmps
fcomp
ds
add
cld
adc
cmp
mov
and
call
pop
and
in
push
mov
add
loopne
daa
pop
mov
jnp
les
in
or
jo
je
sbb
(bad)
lods
int3
inc
mov
loopne
mov
or
mov
push
push
push
adc
jne
jns
cwde
xchg
push
cmc
jnp
fld
arpl
sub
jp
or
mov
scas
mov
push
popa
mov
adc
xor
out
pop
pusha
dec
pop
shl
mov
mov
adc
lds
pop
cmps
sahf
dec
fiadd
ret
pop
sub
dec
fidiv
mov
popf
or
jmp
xor
or
ins
jnp
push
pop
cmp
(bad)
jg
mov
repnz
fxch
std
test
xchg
inc
mov
push
in
outs
xchg
mov
inc
mov
xchg
xchg
push
xchg
lods
repnz
movs
das
cmp
jp
das
test
sub
fstp
xor
dec
and
fld
repz
shl
or
shl
(bad)
loope
ja
add
pop
lahf
fild
cmp
mov
inc
push
push
jae
push
mov
(bad)
adc
dec
xchg
push
scas
mov
push
lahf
push
dec
clc
adc
or
inc
ins
mov
out
dec
in
add
retf
inc
lea
stos
bound
fs
adc
ficomp
(bad)
scas
inc
xchg
inc
lahf
jg
popf
cmc
sar
add
push
inc
jge
loop
or
mov
pop
dec
mov
sub
mov
mov
aam
call
out
aam
int
hlt
mov
int3
in
dec
jns
push
xchg
mov
retf
rcl
add
imul
retf
inc
sbb
cmc
mov
ja
les
add
ss
xor
and
jo
mov
int
ins
leave
stos
adc
adc
in
xlat
pop
into
push
out
xor
int
pop
mov
jle
jne
jne
call
cmp
in
movs
mov
fdivr
into
in
mov
push
cmp
popf
dec
ror
je
mov
popf
push
clc
cmps
cli
in
sbb
iret
mov
jl
shl
imul
fisubr
getsec
das
cmps
into
bswap
xor
out
mov
aad
cwde
sbb
and
dec
lar
stc
cmp
mov
push
and
stos
xlat
out
jns
in
mov
in
not
mov
popa
repz
pop
ror
test
pop
retf
ret
lods
sub
pop
jne
(bad)
xor
push
aam
outs
mov
pop
nop
add
sahf
test
arpl
push
sbb
cli
adc
ins
xor
iret
sbb
mov
add
inc
adc
sbb
xchg
aas
xor
lds
jp
inc
add
inc
push
cli
add
ret
mov
pushf
in
fidiv
inc
cmps
shr
addr16
mov
sub
arpl
nop
mov
jl
rcr
jns
addr16
jg
ret
sbb
sub
ret
stos
dec
lock
mov
fs
or
fwait
aad
mov
cmps
cdq
mov
mov
sbb
repnz
mov
fimul
(bad)
je
repnz
adc
out
mov
or
and
jp
sbb
xor
call
xchg
sub
popa
cli
mov
das
mov
mov
call
adc
mov
movs
dec
sbb
cmp
cli
adc
das
inc
fcmovb
xchg
or
sbb
mov
and
sti
xor
aas
scas
fisttp
stos
or
fld
mov
mov
leave
jnp
ja
aad
mov
pop
lds
ficom
adc
jae
inc
fisttp
mov
push
xor
das
cmp
sub
int
ja
jbe
sub
cmps
sar
inc
push
rcr
jnp
ror
xchg
fs
xchg
mov
cmc
bswap
arpl
mov
sub
mov
aam
daa
push
push
lods
mov
out
inc
movs
retf
push
cmp
xor
xchg
(bad)
arpl
(bad)
add
pop
jl
pushf
rcr
(bad)
sbb
mov
fs
inc
adc
pop
fidiv
jb
stc
xchg
pop
fdivr
pop
cmp
arpl
dec
jmp
aad
push
pop
mov
or
adc
sbb
call
xor
scas
neg
adc
xchg
daa
jg
jnp
pop
adc
push
dec
xor
shl
popa
stos
and
push
rol
inc
shr
cs
push
lods
jmp
pop
nop
in
jo
push
or
int
mov
add
mov
outs
(bad)
sub
rcr
mov
push
pop
data16
(bad)
and
cld
(bad)
fisttp
in
cmp
cmps
fstp
cmp
clc
jb
xor
mov
push
imul
pop
iret
mov
xor
xchg
dec
dec
cmc
mov
popa
dec
fild
and
push
xor
aas
retf
dec
out
xor
jg
and
int3
push
add
mov
(bad)
mov
adc
outs
dec
out
cmps
pop
cmp
xor
pusha
mov
push
push
gs
stos
repz
jbe
jne
xor
sbb
xchg
js
add
push
pop
inc
iret
aad
je
mov
popf
jbe
ja
cmp
add
retf
cmps
push
jbe
gs
cld
xchg
fnstsw
popa
aam
inc
rol
lock
inc
mov
bound
imul
add
jmp
test
in
arpl
inc
mov
ds
sub
in
dec
pop
paddsw
ficomp
dec
add
jge
mov
pop
icebp
cmp
add
xchg
rcl
test
pop
push
jns
jl
ror
and
lahf
mov
sub
jo
xor
sub
cs
inc
mov
out
out
mov
(bad)
lods
aam
add
imul
ror
cdq
daa
jno
cmps
push
sahf
push
push
xlat
popf
xor
leave
not
pop
mov
or
mov
lods
dec
and
push
and
jmp
fistp
sub
cmps
into
shr
or
jb
cmp
in
fisub
xor
adc
mov
fucom
addr16
inc
js
sbb
fist
out
fdivr
push
and
mov
sti
cs
iret
inc
mov
mov
iret
(bad)
push
into
(bad)
lock
jae
sub
jp
(bad)
fwait
jmp
inc
add
icebp
cmp
cmps
call
je
in
movs
in
or
jl
(bad)
xor
fild
jge
add
mov
neg
pop
es
inc
repnz
and
cmp
test
sahf
(bad)
int3
xor
push
pop
xlat
cli
int
repnz
mov
sbb
fld
dec
icebp
cwde
xchg
pop
sub
add
or
rcr
mov
sbb
cmps
test
seto
inc
and
lds
repnz
aam
adc
ja
mov
popf
rcr
outs
stc
popf
les
mov
sahf
cmp
jle
push
sub
sub
push
imul
clc
les
jnp
and
push
xchg
jb
lock
movs
dec
and
nop
or
adc
xlat
lock
repnz
or
movs
and
jo
ja
sub
jg
xlat
or
popa
(bad)
or
test
inc
or
mov
adc
movs
pop
jne
int
mov
or
and
call
sub
popf
mov
dec
add
lock
mov
or
xor
movs
add
add
add
hlt
cmp
mov
dec
or
fisubr
push
ins
xchg
lods
mov
dec
jp
pop
test
fild
adc
or
aam
adc
mov
scas
shr
mov
xchg
sbb
jnp
pop
int
fcmovbe
jae
cmp
push
out
push
or
xor
(bad)
mov
adc
cli
push
xchg
or
in
dec
cmp
cmps
mov
(bad)
or
adc
repz
ret
pushw
jecxz
mov
xchg
xor
mov
xor
mov
and
mov
mov
mov
pop
mov
sbb
aad
xor
sub
mov
fsubr
call
ins
and
xor
fcom
stos
mov
lahf
sub
dec
dec
fdivr
dec
adc
hlt
dec
pop
jbe
mov
dec
xor
pop
adc
rcl
adc
or
aam
sub
jge
out
retf
push
cmp
lods
adc
mov
(bad)
mov
into
adc
or
in
lds
lahf
sub
pop
arpl
or
or
sub
fmul
rcl
in
adc
nop
inc
add
in
gs
or
and
sub
(bad)
retf
mov
push
test
sar
jecxz
jg
pop
ja
fdivp
retf
xchg
popa
retf
push
js
xchg
fld
fadd
jno
gs
pop
mov
arpl
sub
push
in
cmc
inc
jnp
push
sbb
fnstcw
pushf
retf
stos
xchg
imul
sbb
rcl
mov
(bad)
hlt
adc
lock
ret
mov
and
pop
mov
and
mov
jle
push
fwait
inc
mov
cmp
push
sub
pop
scas
mov
fild
sub
xor
mov
inc
jne
push
rcr
xlat
fwait
les
add
aaa
xchg
(bad)
xor
fxch
les
mov
stos
leave
mov
test
inc
leave
or
sub
popa
sahf
dec
fcomp
dec
cmps
out
fdiv
pop
cmp
stos
add
lahf
inc
xlat
outs
adc
push
lods
daa
mov
dec
ss
adc
jbe
lds
pop
add
cld
add
lea
ja
stos
xchg
mov
ret
ret
call
sub
or
out
(bad)
and
pop
mov
mov
test
pop
cs
mov
cs
push
repz
sub
scas
leave
call
pop
jns
(bad)
loop
push
sbb
and
jmp
cmc
push
scas
clc
arpl
(bad)
pop
mov
cs
fwait
les
cmp
cmps
xlat
push
add
aad
ja
leave
cmp
(bad)
aad
enter
(bad)
and
pop
mov
push
lods
inc
mov
call
cmp
arpl
bound
adc
cmp
ret
sbb
adc
inc
fst
cmp
inc
xor
iret
inc
(bad)
mov
dec
xor
add
addr16
out
pop
ins
add
scas
jo
xchg
popf
adc
sub
dec
xlat
mov
frstor
adc
das
imul
jns
(bad)
rcr
mov
pusha
jns
aam
push
addr16
fs
ins
cmp
mov
(bad)
xor
sub
nop
xchg
stos
inc
fsub
mov
cld
jl
stc
push
popf
inc
dec
xchg
add
shl
nop
mov
test
add
add
cdq
pop
inc
aad
pop
dec
pusha
push
pop
push
pop
pop
push
loopne
dec
loopne
jno
sbb
jbe
jmp
xor
push
test
pop
pop
jp
enter
dec
push
mov
pusha
sub
call
call
mov
fnstsw
mov
lods
in
add
test
jle
addr16
jnp
adc
into
mov
dec
sti
into
pop
bound
jg
test
dec
shr
ret
ds
std
and
shl
inc
and
pop
mov
(bad)
in
add
loop
jns
mov
and
sti
pminub
ret
cmp
pop
stos
hlt
loopne
(bad)
mov
dec
es
gs
adc
das
dec
lods
push
ins
call
ins
inc
cli
cmps
in
mov
mov
leave
gs
stc
jno
icebp
push
or
and
xchg
jo
stos
call
fs
jo
out
xchg
lods
or
loop
sub
(bad)
sbb
fadd
push
mov
jo
nop
xchg
sub
in
jae
xor
leave
push
sbb
pop
rol
test
sti
std
and
loope
mov
aam
mov
fidiv
rcl
adc
cmps
test
sahf
out
push
pop
bound
imul
jecxz
xchg
ins
mov
das
adc
cld
aam
mov
jne
and
mov
cmp
mov
cmps
inc
jno
es
dec
icebp
or
pop
xchg
pop
add
ds
dec
push
dec
pop
jnp
dec
cmp
jg
cmp
ret
pop
mov
mov
mov
in
mov
sbb
repnz
inc
adc
jnp
leave
addr16
test
daa
(bad)
aas
sahf
mov
jmp
mov
mov
pop
loopne
pop
mov
fild
aaa
mov
sbb
shl
and
cmps
mov
scas
das
fild
pusha
pop
sahf
or
mov
jo
ds
stos
cld
xchg
lods
sub
int
retf
push
popf
loope
xlat
rol
push
into
or
into
lahf
and
sbb
cmps
div
clc
jne
inc
mov
add
jl
dec
mov
out
add
cs
mov
or
jno
push
mov
xchg
test
(bad)
or
sub
sbb
jp
and
and
fidiv
movs
xlat
push
sahf
clc
(bad)
arpl
test
dec
cli
ins
fcmovnu
mov
inc
xor
cmp
add
jne
daa
jg
stos
shl
mov
mov
adc
mov
fnstenv
ret
pop
ss
je
call
and
sub
xlat
ds
data16
es
outs
jb
push
fisub
(bad)
clc
cmc
call
mov
xchg
inc
sbb
scas
loope
in
int
js
dec
xor
xor
cmc
ss
je
ins
xchg
push
jp
xchg
les
sub
sbb
inc
inc
aas
(bad)
fnstcw
pop
lea
adc
ins
xor
arpl
in
mov
xor
dec
add
(bad)
cmp
cmp
fld
mov
jbe
add
out
and
mov
mov
loope
lahf
xchg
mov
or
xchg
cmp
and
fidivr
adc
lods
mov
add
adc
rcl
data16
mov
jmp
enter
int3
test
push
mov
aas
pop
push
or
xadd
or
sub
arpl
pop
cmc
add
dec
cmps
push
or
sbb
xchg
inc
mov
dec
sbb
add
pop
jle
pop
xchg
inc
jg
or
dec
(bad)
out
stos
retf
push
out
adc
mov
mov
and
inc
fsubr
jg
in
jnp
(bad)
xchg
in
or
iret
dec
sub
loope
daa
pop
jae
and
adc
mov
retf
hlt
bound
in
das
inc
or
jl
mov
adc
imul
lods
cmc
movs
je
xchg
test
(bad)
push
xchg
rcl
mov
jae
sub
out
rcl
fwait
int3
inc
mov
cdq
xor
sub
call
stc
push
pushf
adc
pop
shrd
dec
sahf
je
mov
(bad)
mov
outs
aas
mov
mov
or
into
stos
xchg
adc
and
inc
out
adc
lods
bound
push
inc
das
out
lahf
dec
sar
pop
push
iret
dec
iret
imul
stos
or
jno
jb
mov
add
mov
(bad)
nop
mov
not
pop
inc
(bad)
sbb
retf
add
out
mov
push
dec
cmp
loop
pop
pusha
dec
add
stos
sti
ror
shl
xlat
push
pop
outs
and
xor
cwde
and
es
jmp
add
push
test
in
pop
repnz
mov
xchg
jb
xchg
dec
xor
pop
stc
mov
data16
(bad)
sbb
jl
cmp
shl
mov
mov
aam
call
ss
outs
pop
retf
jmp
ror
mov
push
sub
ja
popa
sbb
fld
mov
fisubr
fstp
mov
cmp
into
push
call
ffree
fwait
lods
push
outs
addr16
test
ret
and
add
repnz
out
cmp
loope
not
out
mov
shl
int3
or
or
inc
scas
jns
mov
xchg
mov
call
push
or
jb
div
xor
sbb
pop
hlt
mov
div
mov
leave
shr
fwait
cmp
or
popa
push
xor
mov
aam
push
mov
rol
sub
add
inc
sbb
leave
pop
(bad)
test
imul
or
dec
inc
mov
inc
out
pop
shr
xchg
sub
jl
jae
cli
fld
shr
sahf
xor
into
xor
retf
mov
jbe
bound
and
or
nop
sub
or
jg
mov
loop
scas
add
dec
(bad)
push
sbb
mov
jae
jge
push
cmp
icebp
dec
aam
push
movs
popa
push
neg
or
jle
or
dec
adc
jne
jmp
sub
hlt
or
test
dec
mov
ret
pop
mov
pop
cli
jg
push
jecxz
fisub
mov
mov
dec
xchg
dec
psrld
or
mov
fist
sti
sbb
dec
cmp
ret
xchg
in
into
in
dec
cli
mov
mov
(bad)
fwait
push
(bad)
cs
sbb
jecxz
mov
fld
in
sub
mov
stc
sbb
mov
adc
inc
pop
adc
dec
mov
xchg
test
leave
mov
cmps
nop
lds
push
stos
arpl
pop
ins
addr16
mov
cli
cmp
push
pop
add
(bad)
pop
xor
in
aaa
mov
jmp
push
mov
call
outs
sti
jmp
fistp
push
out
pop
addr16
and
shr
aas
dec
mov
ficom
jecxz
pop
lods
outs
xchg
mov
psubusb
loopne
ret
and
xor
pop
out
xor
les
or
cmps
and
dec
cli
stos
imul
push
pop
aaa
dec
xchg
pop
push
pop
loopne
mov
adc
mov
add
inc
test
int
mov
sbb
inc
popf
rcl
imul
sub
aad
inc
test
mov
fisub
cwde
cmc
test
cmp
mov
fs
loop
mov
fs
(bad)
fs
sub
test
std
call
mov
cmp
jb
repnz
add
cmp
stos
pop
push
push
fidivr
fisttp
cmps
mov
mov
in
icebp
outs
sub
(bad)
sbb
loopne
cmps
sub
xchg
out
and
test
sbb
add
mov
cwde
repnz
xchg
loopne
fsubr
or
iretw
in
sbb
(bad)
stos
ficom
fidiv
div
dec
xchg
inc
cdq
dec
rcr
mov
ficomp
mov
into
xchg
(bad)
rcl
test
mov
call
xchg
mov
ss
inc
loopne
mov
mov
call
push
out
ja
scas
xor
arpl
jnp
cmp
out
jecxz
js
xor
popa
inc
inc
dec
out
(bad)
mov
sbb
out
ss
mov
imul
mov
add
scas
(bad)
into
sub
rol
pushf
rol
popa
outs
push
cmp
retf
jecxz
cmp
rcr
jmp
pop
mul
in
mov
sub
add
jmp
and
enter
push
push
cmps
or
dec
outs
repz
cld
retf
and
mov
pop
into
fsubr
cmp
mov
xor
pop
pop
cmp
xchg
jae
popa
adc
dec
call
sbb
xor
or
data16
cmp
xchg
push
retf
adc
sbb
es
fs
sbb
mov
xor
and
fcmovu
push
retf
jl
sbb
or
lock
sbb
dec
mov
outs
repnz
js
retf
and
and
fild
inc
cmp
jp
adc
cdq
cmp
mov
loop
ret
xchg
adc
arpl
and
xor
cld
mov
addr16
lds
adc
les
mov
je
sub
sbb
(bad)
les
mov
jle
inc
aad
fmul
pop
adc
repz
jno
ins
call
inc
js
in
sub
ds
add
in
ss
es
aaa
jmp
cmp
adc
popf
fnstenv
call
je
rep
xchg
xchg
xor
fdiv
gs
sbb
adc
addr16
pop
arpl
sbb
mov
lods
mov
pop
cwde
jl
ds
and
in
xchg
outs
fcmove
xor
adc
jmp
int3
inc
push
jmp
adc
inc
cmp
cmp
mov
push
push
nop
mov
ss
shl
(bad)
mov
sbb
jmp
and
dec
das
icebp
or
addr16
gs
shr
dec
jo
fsubr
std
test
jg
movs
pop
pop
das
retf
mov
sub
add
inc
xor
enter
ds
xchg
and
aam
mov
dec
jmp
aas
sub
in
ret
sbb
mov
xchg
cs
sub
aas
xor
jge
lea
inc
xor
and
push
add
je
xor
shl
jo
inc
fs
stc
cmp
add
dec
pop
loopne
xchg
xlat
add
call
add
push
aad
in
popf
dec
push
(bad)
adc
jp
fimul
jne
add
mov
sbb
loop
scas
sbb
lock
(bad)
jp
xchg
int
xor
or
fimul
std
mov
setle
cs
mov
ds
aad
adc
shr
jecxz
jmp
es
call
std
mov
cmp
inc
scas
out
mov
push
mov
stc
jbe
xchg
data16
test
dec
mov
push
cwde
push
cmp
jo
out
dec
xchg
je
les
lock
ret
bound
mov
pop
mov
outs
xchg
mov
test
ins
fbstp
hlt
pop
fcmovne
xor
xchg
push
jnp
xchg
cmp
in
cmp
(bad)
xchg
jo
mov
icebp
retf
dec
mov
(bad)
fisub
sbb
mov
mov
into
push
mov
add
jg
test
jl
imul
push
mov
stos
ins
pop
jae
popf
mov
nop
mov
xchg
stos
mov
addr16
fdivr
mov
div
leave
hlt
add
adc
(bad)
dec
fbstp
ret
aad
mov
xchg
cld
stos
popa
cwde
inc
xchg
xor
inc
cmps
dec
es
or
jmp
loop
add
mov
pop
shl
int
mov
pop
icebp
mov
ds
push
or
repz
add
movs
leave
aas
out
loop
gs
pop
pop
icebp
or
fstp
lds
repnz
xor
or
dec
xchg
push
sti
dec
mov
ss
int
aad
inc
jno
rcl
frstor
mov
inc
or
stos
xor
sahf
cmp
(bad)
call
(bad)
retf
push
ret
xchg
fldenv
(bad)
das
sub
inc
test
inc
aaa
test
scas
inc
mov
dec
and
fs
fwait
or
mov
aam
cmps
adc
jae
inc
jns
inc
jmp
nop
pop
pop
mov
mov
test
mov
sbb
push
cmps
(bad)
sub
jns
repz
lahf
mov
fcom
mov
xchg
jmp
push
add
sub
imul
push
enter
loop
aad
lea
push
cmp
addr16
jo
fs
shr
sub
fs
(bad)
push
icebp
xchg
cmp
addr16
sti
mov
sbb
outs
or
fwait
adc
xor
cmp
and
sbb
cmp
jl
out
push
aaa
cmp
maxps
test
adc
or
outs
sbb
xor
ins
ja
test
push
rcl
sahf
jp
push
pop
ficomp
xchg
int3
pop
fistp
cmps
fnstcw
jge
cmps
cli
push
jmp
xor
les
arpl
adc
add
mov
sub
pop
inc
inc
(bad)
inc
movs
idiv
xchg
enter
imul
push
fsubr
xor
loope
into
dec
into
outs
imul
ss
sbb
lods
mov
fbld
pop
pop
lea
mov
loop
cmp
or
pop
jmp
scas
jle
rcr
shl
xchg
outs
pop
sub
fmul
mov
cmp
imul
test
sub
daa
cli
mov
add
xor
dec
pop
jmp
xor
add
jl
and
call
add
xlat
sbb
(bad)
lods
out
inc
ret
inc
push
call
(bad)
cmp
xchg
adc
cmp
add
fsubr
push
repnz
stos
out
shr
push
mov
push
sahf
aas
pop
imul
ret
jmp
bound
bound
in
sahf
push
and
xchg
dec
and
jmp
xchg
popf
add
nop
pop
bndldx
lock
sbb
into
cwde
mov
sbb
mov
movs
mov
jmp
add
jo
fisttp
stos
mov
loope
and
jbe
leave
jae
movs
xor
enter
lea
ss
clc
lock
and
imul
outs
sub
xor
mov
add
in
add
movs
xchg
jmp
mov
cmps
popa
pop
mov
mov
loopne
adc
xor
mov
daa
dec
adc
call
out
sub
(bad)
xchg
mov
dec
mov
nop
fs
adc
arpl
and
aam
lds
jl
push
loope
pop
jmp
or
int
and
fninit
cdq
stos
(bad)
push
pop
stos
aas
cmp
cmp
fistp
push
mov
xchg
stos
scas
dec
sbb
xor
mov
xchg
fcom
iret
retf
test
push
int3
push
loop
lods
cld
daa
sbb
fcmovbe
cmp
mul
out
js
test
sbb
loopne
stc
out
or
or
es
pop
push
ret
mov
or
or
ds
cmp
push
sar
shr
inc
das
inc
into
sbb
cmc
xchg
pusha
mov
popf
(bad)
fstp
jae
push
jge
xor
xchg
push
lds
ja
cli
pusha
cmp
sub
out
stos
xchg
iret
test
bound
mov
jmp
(bad)
cwde
bound
push
sbb
dec
add
int
leave
xchg
add
push
or
xchg
push
nop
jbe
mov
and
(bad)
hlt
or
mov
or
mov
addr16
mov
push
out
popf
push
dec
rcl
stos
outs
into
retf
pop
jb
je
xchg
fist
xor
cmp
ja
scas
frstor
pop
mov
push
and
dec
cmp
xchg
call
sub
jmp
movs
aad
not
sbb
retf
ss
int
pop
inc
out
xchg
sbb
jmp
(bad)
sbb
xor
pop
movs
jecxz
pop
jbe
inc
adc
sub
add
mov
daa
and
inc
outs
add
inc
push
sub
ror
imul
adc
jbe
imul
fisttp
pop
cld
xchg
push
and
mov
jle
jge
push
pushf
scas
mov
daa
xchg
pop
imul
fs
popf
mov
mov
dec
push
in
std
call
bound
mov
mov
mov
pop
push
cmp
loop
pushf
js
in
dec
add
sahf
jnp
ins
cmp
loop
hlt
cld
pop
fisubr
push
mov
mov
xchg
fld
cmp
and
js
div
mov
lds
mov
mov
jmp
outs
fstp
cmp
mov
push
out
jge
sub
or
shl
retf
cdq
in
add
or
aam
jbe
jle
dec
cld
add
and
(bad)
movs
(bad)
fst
and
loopne
pop
in
xchg
pop
mov
(bad)
jge
push
movs
jb
push
mov
push
out
inc
mov
or
dec
and
fstp
in
fs
jno
push
add
and
bnd
loop
stc
mov
in
or
mov
jae
pop
repz
out
clc
fstp
dec
push
imul
mov
gs
push
retf
test
push
mov
fdiv
mov
inc
dec
dec
xchg
mov
loope
in
cmc
dec
sbb
loope
xor
fidiv
cmp
mov
mov
mov
xchg
(bad)
or
mov
(bad)
fbstp
mov
mov
sti
std
lods
mov
adc
cmps
push
pop
mov
or
lahf
cmp
pop
add
adc
popa
ins
and
enter
je
mov
movs
popf
or
and
or
push
out
scas
icebp
lods
xor
and
sub
and
add
enter
test
add
repz
inc
shl
and
add
xor
jno
sub
dec
mov
loope
pop
inc
jo
rcr
push
aas
jg
jno
sbb
sub
pop
cmp
sbb
add
fcom
mov
add
daa
push
cmp
or
xor
push
push
(bad)
iret
(bad)
stos
repnz
cmps
imul
cmp
xchg
mov
sbb
shr
(bad)
test
cmps
iret
push
outs
retf
xchg
jmp
std
sbb
sub
mov
and
jge
xchg
sbb
xor
xchg
repnz
inc
sar
xchg
enter
dec
push
and
adc
ret
mov
in
rcr
xor
sub
test
mov
jmp
scas
pop
popa
fcmovb
ins
mov
adc
jge
out
add
sub
repnz
mov
cld
mov
clc
push
mov
and
jmp
test
jle
add
psubq
sbb
arpl
pop
or
dec
test
stos
das
cld
jns
fadd
jne
add
and
cmps
mov
push
jle
mov
jmp
mov
mul
in
pop
cmp
(bad)
les
iret
pop
out
aam
call
dec
sub
xchg
inc
fadd
jo
mov
dec
pop
fidivr
cmc
sbb
fdiv
fs
outs
push
mov
data16
mov
js
add
fs
mov
xor
mov
jo
and
aaa
sti
jmp
jecxz
js
imul
adc
jecxz
inc
test
xor
push
test
xor
mov
lods
mov
jno
mov
jecxz
push
push
jns
in
pop
sbb
adc
inc
mov
dec
mov
icebp
cmp
lods
or
push
mov
push
or
pop
imul
in
add
repz
aam
or
sbb
dec
cmp
or
dec
cmc
(bad)
push
adc
add
mov
cmp
inc
scas
in
arpl
lods
test
xchg
icebp
sti
inc
iret
push
sub
stc
imul
mov
cmp
and
sub
adc
mov
ror
not
mov
mov
push
xor
and
or
popf
pop
dec
sbb
pop
dec
dec
cmovno
cmp
cmp
das
imul
shl
mov
mov
or
xchg
or
add
pop
xor
xlat
xchg
and
loop
adc
jns
out
aas
sbb
ficomp
sbb
push
add
mov
scas
cmp
dec
pop
fild
sub
movs
jb
mov
mov
fwait
(bad)
idiv
xchg
mov
pop
nop
pop
mov
and
fbld
pop
les
jns
mov
jb
mov
xlat
repnz
xor
das
mov
stos
scas
mov
les
add
sub
jns
je
mov
mov
inc
jnp
imul
repnz
and
fs
jnp
xchg
sub
outs
hlt
fsubr
pusha
mov
sbb
jmp
mov
outs
stos
mov
clc
push
call
popa
sub
cdq
xchg
mov
dec
and
pop
call
mov
inc
dec
aaa
mov
pop
or
cld
jns
mov
or
xor
and
mov
xor
stc
fidiv
push
jno
mov
into
pop
inc
cdq
jns
and
xor
jo
aad
xor
arpl
push
sub
mov
add
or
push
xchg
sub
cmp
xchg
cwde
daa
inc
cmp
retf
jmp
jbe
mov
(bad)
pop
out
push
add
inc
stos
or
xchg
lods
xchg
or
in
and
mov
push
push
xchg
mov
jmp
sbb
out
aas
add
mov
xchg
jns
stos
and
jno
inc
cmp
sub
xchg
pusha
push
je
and
loop
std
shl
mov
ins
lods
and
ja
mov
sbb
rcl
xchg
jp
mov
jle
test
pop
cld
sub
aad
push
stc
into
inc
jbe
add
cli
rol
sbb
sub
in
loop
retf
lea
cmp
mov
adc
(bad)
sar
movs
jo
not
inc
or
imul
enter
repz
jae
adc
cmp
adc
and
into
dec
push
imul
rcr
jno
jnp
mov
push
fsub
or
and
imul
pop
popa
lds
out
lea
mov
add
sub
sbb
gs
inc
(bad)
jp
xor
mov
dec
leave
movs
ins
jbe
or
bound
mov
and
sahf
jbe
movs
rcl
mov
daa
mov
xchg
sar
add
stc
jg
dec
fst
inc
cmp
jbe
jmp
nop
stc
mov
mov
jno
int3
mov
and
loope
mov
jle
aas
jecxz
xor
xchg
pop
dec
(bad)
mov
je
std
dec
and
pop
sbb
stos
test
ret
fbstp
xchg
jnp
fdiv
enter
call
out
pop
pusha
(bad)
inc
mov
add
sti
popf
in
mov
mov
popa
hlt
push
push
xchg
sub
call
cmps
mov
in
pusha
daa
add
xchg
rcl
mov
scas
(bad)
pop
in
sub
jno
loop
out
in
aad
fdiv
bound
adc
xor
test
sub
aad
outs
popf
cmp
retf
(bad)
mov
mov
sbb
lods
cmps
sbb
sbb
test
jle
push
dec
sbb
dec
(bad)
push
pop
push
cmp
pop
inc
push
enter
xor
(bad)
push
mov
and
sti
jecxz
inc
inc
lock
call
cmp
push
and
mov
hlt
pusha
mov
leave
fld
push
sub
mov
sti
cmc
or
call
js
xlat
and
sub
pop
ins
outs
aad
cmps
int
or
jg
fst
ins
fnstenv
xchg
cwde
add
jmp
add
stos
mov
pop
nop
xchg
inc
mov
mov
lds
call
jp
inc
ror
stc
mov
in
imul
jle
je
das
leave
dec
push
popa
mov
xchg
es
inc
sbb
ret
movs
or
mov
mov
add
test
jo
mov
push
mov
movs
mov
ret
dec
mov
or
movs
pop
or
lock
leave
inc
bound
jle
fdivr
loopne
dec
or
xchg
(bad)
retf
or
enter
div
jl
jmp
jmp
mov
xor
and
cld
addr16
(bad)
jno
xchg
pop
add
movs
std
dec
cmp
mov
je
scas
cmp
or
adc
inc
mov
or
add
xor
push
je
into
push
jbe
mov
rcr
cmp
mov
mov
add
xor
xor
out
das
push
aad
in
nop
dec
jnp
es
pop
arpl
or
popa
mov
mov
adc
xchg
lds
push
jb
movs
fsubr
xor
xchg
dec
(bad)
push
fisub
and
mov
movs
pop
idiv
movs
adc
pop
sar
xchg
xchg
cwde
das
push
dec
and
std
shr
fidivr
movs
xor
pop
mov
push
xor
adc
repnz
mov
sub
nop
sbb
jecxz
cmps
push
inc
cmps
xor
fdivr
cmp
push
mov
adc
sbb
sub
sbb
or
sbb
je
mov
lods
int
pop
ret
loope
cdq
pop
jo
mov
loop
ins
rol
(bad)
das
sbb
adc
inc
int3
sbb
(bad)
test
scas
sub
lods
ret
sbb
popa
sub
and
push
adc
mov
mov
out
add
adc
cmp
xchg
inc
ret
adc
sbb
inc
ss
popa
push
adc
push
loop
sbb
idiv
out
ret
pop
sbb
imul
jmp
ins
enter
jge
mov
ret
and
cmp
stc
xor
pop
mov
movs
test
loopne
push
ins
inc
les
push
lds
xchg
jbe
push
mov
ret
int3
mov
xlat
lahf
mov
mov
sub
add
mov
mov
mov
jl
jge
popw
comiss
cld
repnz
into
(bad)
mov
sbb
loop
push
mov
in
lds
nop
mov
fdiv
sub
gs
je
xor
sahf
in
cmp
or
cmc
mov
xchg
cld
jl
pop
nop
pop
pop
sbb
mov
mov
shl
lahf
loop
std
mov
int
lds
cmp
mov
push
(bad)
cmps
outs
imul
repz
mov
push
les
adc
mov
mov
fild
pop
mov
jbe
test
mov
stos
add
jmp
mov
ja
and
add
test
pop
pusha
sbb
mov
mov
jbe
pop
imul
adc
and
push
jb
jne
inc
daa
xchg
mov
mov
and
mov
mov
push
cld
pop
popf
push
mov
cmp
cmp
les
out
fild
test
pop
push
add
inc
and
fsub
jge
out
mov
pop
out
xchg
xchg
mov
test
hlt
(bad)
and
cwde
sub
mov
fisttp
mov
inc
push
dec
sbb
in
in
and
ret
mov
lods
jmp
leave
daa
shl
in
jge
adc
mov
sbb
xchg
xor
jne
lea
dec
dec
call
jp
push
popa
mov
sbb
(bad)
xchg
jle
add
push
mov
sbb
add
sub
xchg
push
dec
les
in
sbb
fisubr
mov
dec
or
(bad)
or
sub
aas
xchg
nop
(bad)
lods
popf
xor
stos
pop
cmp
cld
dec
jmp
push
movs
adc
xor
sbb
cs
repz
lahf
in
jb
out
pop
dec
fs
xchg
pop
pop
int
adc
out
push
ins
ins
scas
sub
or
jb
js
pushf
fadd
mov
pop
add
sar
call
sbb
dec
mov
pop
sub
test
outs
call
aas
mov
add
or
mul
jmp
dec
mov
fwait
mov
fdiv
mov
arpl
jo
in
in
or
stc
cmp
mov
sti
fdiv
and
cmc
out
outs
ja
push
sub
fiadd
imul
jg
lahf
fiadd
inc
adc
setg
(bad)
popa
jl
enter
dec
ss
sub
cwde
add
(bad)
lahf
lds
push
lods
xchg
inc
mov
pop
fldenv
push
repz
sub
stc
and
mov
daa
imul
xor
sahf
iret
into
hlt
jl
jnp
cmp
pop
clc
sub
aas
popa
push
mov
xchg
arpl
enter
xor
jb
jg
lods
cwde
xchg
mov
stos
mov
push
push
jbe
mov
add
sub
nop
iret
mov
enter
iret
jns
mov
data16
mov
es
ds
lods
push
jno
ds
sar
cld
add
jbe
sbb
ja
cmp
pop
cmp
cmp
shl
btc
cmps
test
addr16
ret
pop
aam
pushf
lods
push
or
inc
loopne
cmps
call
cdq
call
push
aam
xchg
xchg
je
adc
lock
adc
jle
test
out
inc
scas
outs
daa
push
movs
or
or
aam
enter
test
xchg
sub
mov
dec
dec
sbb
or
int
or
sub
clc
pop
push
das
jl
jle
push
fs
ror
int
das
lds
mov
push
cmc
stos
mov
push
xor
lea
std
jg
mov
call
nop
sbb
mov
push
dec
or
jg
jg
out
in
jnp
aaa
popa
clc
and
push
in
mov
cmp
(bad)
std
fcomp
xchg
adc
rcr
pop
in
adc
or
pop
into
and
inc
js
ss
jae
enter
(bad)
jo
cmps
loopne
cmp
mov
dec
inc
les
and
inc
mov
jge
pop
xor
lea
jmp
imul
nop
jbe
fwait
rol
outs
cmp
data16
adc
mov
fidiv
inc
mov
popf
std
jno
pop
fnstenv
add
cmp
push
add
fst
inc
pop
push
add
jmp
inc
inc
inc
adc
movs
mov
xchg
loop
dec
xchg
rcl
adc
or
mov
imul
js
into
(bad)
call
xchg
push
rol
and
sahf
inc
test
cmps
lea
and
scas
fiadd
add
stos
and
out
outs
test
test
ret
cmps
int3
or
mov
xor
fwait
stos
cld
cmp
out
(bad)
sbb
push
jmp
pop
out
cwde
jno
popf
and
sbb
dec
test
rol
jae
jbe
movs
dec
mov
push
std
inc
inc
in
xchg
pop
add
inc
(bad)
neg
jnp
sbb
and
nop
jns
adc
pusha
cmp
cmp
dec
bound
mov
mov
push
int
(bad)
repnz
dec
std
pop
and
nop
pop
mul
adc
adc
int3
arpl
mov
xlat
cs
jg
ds
sub
outs
cld
mov
fld
daa
dec
(bad)
sbb
cmp
mov
push
call
mov
jnp
fist
mov
and
pop
sub
and
sub
mov
fucomi
xor
ret
cwde
xor
dec
pop
sbb
out
sub
jnp
inc
daa
rol
enter
or
fwait
jle
add
or
cli
in
push
push
movs
std
jl
cmp
dec
loope
sub
and
test
test
paddsw
mov
jecxz
pop
jne
outs
(bad)
mov
add
lds
mov
pop
dec
pushf
fcomi
add
cld
add
push
jne
sub
nop
aam
or
outs
inc
(bad)
mov
or
xchg
xchg
xor
adc
ins
push
push
enter
xchg
jp
mov
cld
dec
cmps
and
dec
cs
sbb
adc
add
imul
sbb
xchg
aas
push
sbb
push
sub
jnp
in
ds
fild
add
imul
mov
xchg
or
mov
leave
dec
inc
dec
xchg
ret
xchg
cmp
cs
imul
push
pop
sbb
ins
or
retf
outs
pusha
sub
xchg
sub
push
pop
gs
mov
scas
jle
xor
icebp
add
dec
ficomp
mov
lods
mov
cmp
lock
jbe
retf
cwde
loop
xor
dec
and
in
sub
ficom
(bad)
in
fdivr
push
sub
shr
out
adc
fisttp
int3
aaa
or
sub
and
jmp
jb
bound
pop
pusha
inc
bound
or
popa
dec
pop
repnz
movs
push
cmp
push
adc
arpl
loopne
mov
add
cdq
cmps
mov
xor
loopne
and
out
das
ficomp
ret
aam
xchg
dec
pop
mov
out
inc
mov
enter
mov
and
movs
sub
dec
mov
movs
jmp
dec
lahf
xchg
int3
push
xor
ins
inc
(bad)
xor
cwde
outs
pop
adc
fsubr
test
loope
mov
mov
inc
xchg
xchg
lds
(bad)
fsubr
dec
dec
test
xchg
jecxz
adc
jle
cs
inc
aam
dec
xor
into
mov
inc
and
dec
xor
xchg
in
or
inc
jbe
and
xor
mov
inc
leave
sbb
xor
rol
push
jns
sub
adc
(bad)
data16
outs
jmp
aad
cmc
cmps
cmp
inc
sahf
pop
adc
jl
ja
mov
xor
das
sub
push
inc
fs
call
into
(bad)
shr
dec
add
div
neg
invd
in
loope
int
push
jl
pop
or
pop
pusha
outs
fdiv
lock
jne
sahf
test
ficomp
lea
cwde
pop
cmp
mov
mov
jns
add
out
fisttp
mov
xchg
test
es
fstp
mov
push
add
cmps
pop
shl
ds
aad
stos
jbe
loope
fldl2e
fild
repz
cmp
dec
mov
dec
lods
jmp
leave
je
mov
loope
retf
and
and
addr16
adc
cmp
jle
pop
lods
lods
dec
imul
psadbw
pop
dec
in
dec
jp
pop
lods
fistp
ror
push
mov
jb
bound
in
xor
inc
test
cs
cld
jbe
aad
and
xchg
mov
cs
fcmovne
cld
dec
stos
sub
retf
pop
cdq
sahf
ins
ja
mov
cli
fst
sub
xchg
mov
cmps
add
cmc
fidiv
or
lds
mov
jnp
inc
lods
inc
inc
xchg
ret
mov
cwde
int3
push
jp
mov
cmp
int
sub
call
push
popf
pop
jge
stos
outs
jne
xor
jns
adc
imul
movs
inc
sbb
repnz
out
shl
mov
adc
pop
inc
test
loope
aam
xor
mov
xor
xchg
test
mov
mov
sbb
jge
mov
adc
lock
pop
jge
mov
clc
xlat
pop
mov
(bad)
iret
push
xchg
mov
enter
jp
loop
push
pop
mov
mov
(bad)
pop
cmc
cdq
bound
mov
retf
xor
xor
dec
fcomp
pop
sub
sub
sti
jno
or
clc
mov
push
hlt
int3
ror
mov
xlat
ins
jmp
or
xor
(bad)
rol
xchg
lock
(bad)
loope
mov
rol
push
dec
js
aas
mov
cli
sbb
imul
inc
mov
inc
leave
das
cmp
in
aad
cmc
xor
pop
mov
jg
dec
enter
ss
enter
in
jecxz
or
push
inc
sub
and
int
ja
add
ret
int3
mov
sbb
ins
pop
ja
ja
push
outs
lds
push
loop
push
xchg
inc
fstp
xchg
add
or
aas
push
shl
or
dec
jg
mov
mov
call
mov
outs
jno
push
fistp
xchg
mov
xor
xchg
mov
cdq
lods
cmp
shr
sub
push
jmp
pop
pop
lock
scas
popf
movs
ds
sete
fwait
ins
sbb
out
cmp
std
xor
cdq
adc
xor
pop
pop
lea
xlat
daa
loope
mov
add
addr16
and
rcr
mov
push
call
fst
ins
sbb
loope
fstp
inc
popf
hlt
data16
sti
pop
mov
ficomp
xchg
adc
dec
sahf
enter
adc
push
mov
scas
and
call
jb
fstp
mov
mov
cmp
(bad)
cli
jb
dec
cdq
call
out
push
add
sbb
inc
sbb
mov
or
ret
push
aas
cmps
or
xchg
sub
mov
icebp
cmp
psubusw
fsub
push
outs
push
(bad)
or
js
push
xchg
fcmovb
fadd
fcomi
adc
mov
push
inc
inc
in
imul
pop
pop
inc
jb
ror
xchg
(bad)
jb
lea
in
neg
enter
jecxz
mov
pushf
jecxz
pop
outs
push
jne
test
ss
and
ret
and
fist
sub
stos
lods
jae
jns
add
int
or
fsub
fadd
add
jecxz
aad
movs
push
shl
mov
xor
cdq
sub
push
add
fcomp
cmp
lock
mov
repz
(bad)
movs
jge
icebp
cs
sub
push
lods
popa
xor
jmp
in
hlt
test
mov
fild
xchg
pop
mov
lds
push
gs
or
adc
mov
and
fldenv
int
shr
pushf
loop
sub
shl
pop
loop
ins
mov
je
fninit
nop
mov
push
mov
scas
(bad)
jg
leave
xlat
xor
and
fwait
ds
xchg
jp
sub
repz
and
js
jae
mov
fwait
cmps
mov
in
or
repz
test
ficomp
test
aad
loopne
aad
rol
cmp
inc
jp
xor
sub
sbb
add
mov
cli
dec
enter
mov
pop
adc
xor
dec
rcr
ror
fwait
test
addr16
cdq
int3
jg
(bad)
mov
arpl
out
fwait
fwait
inc
lods
std
hlt
outs
xchg
mov
cli
rcr
cdq
(bad)
push
imul
fbstp
lds
mov
popf
and
push
cmp
mov
inc
xchg
idiv
imul
inc
imul
xchg
xchg
ins
std
mov
dec
sub
sub
inc
sar
or
imul
push
shl
jns
sub
jno
cmp
stc
clc
out
adc
test
(bad)
aam
jbe
(bad)
cmp
nop
or
repz
fcmovnu
fcomp
mov
bound
stos
dec
loope
pop
adc
cs
jne
test
daa
mov
or
cmps
or
call
adc
inc
repz
(bad)
(bad)
adc
push
mov
and
mov
pop
xor
loop
aas
int3
lods
repz
or
scas
call
push
mov
jne
jmp
std
jns
mov
mov
pop
add
cmc
and
repz
repz
lds
mov
sbb
pop
sub
movs
leave
aad
fstp
push
test
je
cmovbe
cmps
mov
pop
aad
xchg
adc
(bad)
push
retf
imul
inc
mov
jnp
sti
and
mov
(bad)
mul
sbb
jo
or
dec
mov
adc
stc
repz
push
and
cmc
or
mov
mov
ja
cmp
in
jnp
xor
push
popf
jno
stc
jnp
and
adc
aad
or
cli
inc
sti
cld
nop
les
in
pop
sub
into
out
jg
call
and
repnz
pop
sbb
cmc
lea
add
repnz
nop
pushf
test
mov
dec
and
and
test
mov
xor
dec
xor
in
dec
add
pop
add
adc
sbb
ret
hlt
repnz
sar
mov
jge
cmc
neg
sub
adc
jl
push
mov
rcr
and
call
push
jle
inc
mov
pop
dec
jg
xor
jle
(bad)
mov
shl
pop
dec
cmp
jae
cmp
call
push
push
cmp
fninit
fld
pop
movs
es
mov
sbb
or
adc
call
in
enter
pop
or
inc
ds
faddp
test
inc
mov
lods
ss
xor
xchg
in
sub
cli
mov
out
xlat
movs
inc
mov
mov
push
mov
outs
out
sahf
jmp
fsubr
pop
sbb
lods
adc
repz
xchg
out
rcr
mov
mov
scas
in
push
cli
in
pop
aam
mov
xor
(bad)
sbb
jl
cmps
xchg
add
nop
(bad)
dec
lods
rcr
or
(bad)
clc
cmp
inc
outs
adc
pop
cmp
shl
mov
(bad)
mov
jb
mov
fld
mov
dec
rcr
popa
pop
sub
sbb
les
and
sbb
mov
adc
xchg
sub
pop
imul
sbb
test
cmc
and
shl
inc
(bad)
cmp
inc
(bad)
xor
scas
into
ret
stc
es
add
jb
mov
sub
pusha
dec
(bad)
cmps
pop
cs
mov
sbb
xchg
test
es
adc
cld
pop
dec
or
jmp
aas
sbb
inc
dec
ds
cmp
jl
frstor
inc
sahf
xchg
repz
pop
pop
xor
sti
mov
mov
out
cmp
mov
aas
out
add
adc
rcr
xchg
mov
adc
xchg
jl
mov
cmp
or
cwde
sti
lods
mov
cld
xchg
jmp
sbb
jo
add
int
xor
ds
cs
(bad)
lock
add
jmp
cwde
clc
data16
mov
repz
sub
ror
sub
mov
mov
pushf
in
ins
ins
inc
push
mov
stos
fistp
sub
mov
ret
ror
icebp
adc
jmp
pop
push
scas
inc
and
jecxz
xor
and
enter
pop
jg
inc
mov
pusha
dec
pop
sahf
dec
mov
xchg
(bad)
call
xchg
clc
mov
js
add
imul
add
jmp
sbb
inc
stos
mov
aam
lahf
test
mov
and
cmp
xor
movs
add
pop
rcr
jae
pop
xchg
arpl
cmp
xchg
scas
push
std
push
push
lods
and
add
dec
jns
xchg
lock
jnp
mov
(bad)
int3
sub
add
mov
jmp
rcr
call
inc
(bad)
adc
clc
push
(bad)
and
scas
leave
or
arpl
cmp
mov
jle
ja
jp
mov
push
dec
xchg
sbb
out
sti
in
loop
scas
jae
or
mov
and
and
mov
mov
pop
cmp
jmp
sbb
xor
aam
pop
jl
popf
imul
mov
or
(bad)
xchg
stos
fdivr
cwde
mov
push
adc
fwait
jns
adc
xlat
jmp
(bad)
sub
mov
sahf
dec
lods
and
jae
xchg
pusha
or
cdq
mov
jg
mov
jl
mov
sbb
movs
outs
fwait
lea
sti
mov
loopne
xor
and
and
or
and
mov
pop
les
mov
sub
fisub
push
and
sub
sbb
mul
and
rcl
xchg
jmp
push
ret
or
nop
mov
jns
movs
pop
ss
pop
lock
push
call
mov
mov
adc
mov
jmp
out
dec
arpl
outs
mov
inc
pop
add
sbb
scas
mov
test
jo
iret
add
jns
pop
enter
lahf
push
cmp
push
test
lods
inc
(bad)
fiadd
daa
cmc
aam
dec
rcr
mov
rol
mov
push
add
and
out
popf
je
out
lock
cmps
sar
sub
stos
shl
inc
push
fild
sbb
out
out
imul
inc
sub
add
clc
pop
dec
inc
mov
push
inc
mov
cmp
jmp
mov
mov
adc
idiv
std
ds
push
xlat
and
and
les
adc
in
push
iret
and
push
mov
aad
repz
pop
mov
je
mov
aad
push
outs
inc
or
call
add
push
xchg
fucomp
fs
xor
fwait
mov
or
call
repnz
loopne
jp
or
out
xor
jne
outs
pushfw
push
imul
or
in
cdq
inc
dec
jb
es
sub
xchg
rcr
lahf
dec
dec
jns
jb
(bad)
sbb
xchg
(bad)
std
dec
(bad)
pop
lods
xchg
adc
mov
push
fisttp
mov
pop
js
paddq
mov
xchg
loopne
mov
jecxz
dec
fs
jb
push
jl
ja
popf
icebp
sbb
sub
push
ss
mov
mov
fld
sbb
sti
xor
cwde
xor
sbb
xor
pop
into
push
sbb
retf
push
rol
and
(bad)
fst
fstp
inc
outs
mov
or
(bad)
mov
out
adc
xor
call
mov
mov
dec
xor
(bad)
jmp
stos
sub
push
sbb
fidiv
in
in
jmp
shl
pushf
icebp
(bad)
push
(bad)
call
daa
dec
push
daa
aam
sbb
imul
adc
jecxz
in
adc
mov
add
push
lods
rdmsr
mov
add
push
inc
clc
jns
enter
in
or
fstp
pop
cmp
push
mov
sahf
inc
pop
cmp
cmps
cdq
lds
leave
and
or
mov
xor
xchg
cdq
aaa
xor
fnstenv
dec
xchg
pop
test
bound
in
dec
fbld
jg
adc
inc
lock
jp
dec
and
shl
fsub
push
pop
bound
ins
rcl
mov
das
(bad)
repz
cwde
sub
sbb
in
xor
mov
xchg
push
and
enter
mov
xor
not
pop
stos
add
push
outs
add
stos
dec
cmp
ret
movs
mov
cs
xchg
xchg
cmp
in
add
dec
or
or
dec
(bad)
xchg
(bad)
pop
inc
lods
push
fmul
cdq
sahf
jmp
mov
sub
dec
imul
fcom
sti
ss
pop
or
sub
rol
dec
lds
xchg
cmp
sub
dec
rcl
push
adc
cmp
out
cmp
in
(bad)
cmp
dec
aas
mov
stos
jmp
pusha
inc
inc
sbb
out
ins
retf
ror
jmp
out
and
test
or
xchg
gs
mov
inc
pushf
std
xchg
sbb
push
loope
add
pusha
retf
ins
int3
mov
xchg
leave
sub
call
sbb
push
cs
fcom
adc
jge
gs
ror
pusha
cs
popa
sub
outs
daa
inc
sbb
bts
fmul
pop
leave
xchg
leave
mov
out
xor
fild
mov
push
sbb
adc
aam
mov
imul
lods
movs
push
test
pop
mov
aad
call
js
ss
mov
mov
retf
xlat
mov
adc
bound
daa
and
imul
fild
add
aas
xchg
push
xchg
pop
retf
enter
int
icebp
cmp
(bad)
in
out
add
and
push
bound
mov
mov
test
(bad)
push
pop
lods
out
adc
frstor
call
xor
push
stos
xor
ret
cmps
ins
cmp
pushf
xor
stc
adc
add
cli
fwait
push
adc
bound
jp
iret
cmp
cmps
mov
shl
cli
cmp
mov
mov
fwait
arpl
sub
mov
mov
jno
es
repz
repz
jns
ss
lea
mov
lods
dec
rol
outs
cwde
pop
cmps
cdq
lods
pop
mov
jge
in
jbe
pop
pop
enter
retf
jge
dec
gs
(bad)
fsub
dec
movs
pop
inc
sbb
add
push
mov
xor
out
std
sub
les
sub
js
jbe
pop
push
les
loop
mov
adc
in
rcl
cld
repnz
js
cli
stos
cmp
scas
inc
fwait
(bad)
leave
inc
push
pop
(bad)
jmp
and
add
in
fadd
(bad)
test
sahf
(bad)
stos
adc
xchg
adc
push
mov
adc
xchg
(bad)
adc
sar
pop
lahf
outs
stos
(bad)
sub
dec
inc
pop
je
iret
xor
loop
out
pop
xchg
mov
inc
fdivr
push
pop
push
int
push
and
xor
add
mov
jmp
xor
lock
aaa
out
pop
mov
outs
inc
ja
rcl
test
das
cli
std
mov
fcmovbe
xlat
add
mov
cmp
outs
mov
nop
jmp
mov
fidiv
test
les
in
in
pop
movs
cmp
jnp
adc
add
jae
sub
xchg
jnp
movs
cmps
mov
sbb
dec
mov
adc
not
adc
ret
mov
xor
inc
div
outs
in
sub
retf
gs
or
sahf
xor
les
xlat
mov
add
xchg
lds
loopne
or
outs
mov
mov
push
xor
jge
push
sahf
mov
pop
aam
mov
xor
or
and
aas
push
inc
outs
(bad)
adc
or
jl
add
pop
xor
xor
push
mov
xor
loope
out
(bad)
mov
pusha
xlat
mov
xlat
clc
push
push
mov
hlt
xor
mov
sub
outs
scas
pop
fcom
je
pop
out
sbb
movs
dec
je
pop
inc
outs
sub
das
leave
push
cmc
nop
fwait
(bad)
int
jle
cdq
movs
es
and
adc
mov
cmp
ja
and
(bad)
xchg
or
mov
adc
pop
mov
pop
mov
xchg
adc
or
(bad)
sub
adc
sbb
mov
add
lahf
ins
stos
fsub
dec
std
cld
push
pop
(bad)
inc
cmp
inc
scas
inc
lea
sbb
movs
repz
pushf
mov
out
jb
ret
dec
inc
mov
jl
and
bound
mov
mov
jp
jnp
or
xor
or
(bad)
push
std
clc
mov
fisub
xchg
stc
pop
out
movs
(bad)
mov
dec
sahf
mov
fnstcw
je
stc
out
mov
(bad)
hlt
stos
mov
pop
jae
and
addr16
icebp
mov
or
pop
cmps
fnsave
push
add
addr16
icebp
ror
mov
inc
movs
es
aas
in
mov
jmp
mov
stos
mov
aas
adc
iret
jmp
cld
sbb
adc
adc
hlt
ds
inc
adc
push
mov
jb
repz
push
xchg
dec
sbb
push
inc
inc
push
push
iret
xor
aam
inc
adc
and
fs
cmp
cmp
xchg
(bad)
shl
jp
(bad)
pop
call
int
sbb
or
sbb
(bad)
popf
inc
stos
sbb
mov
mov
test
add
add
mov
clc
fstp
push
adc
icebp
or
arpl
push
sahf
mov
inc
ins
inc
mov
cmp
adc
aam
sub
rcr
mov
popa
setne
(bad)
jg
pop
popa
and
dec
(bad)
loope
jne
xor
inc
cmp
fist
movs
outs
sahf
or
daa
add
mov
cmc
mov
push
dec
out
jg
xchg
cmp
and
sbb
mov
lahf
xor
sahf
cmp
repz
test
sbb
inc
add
stc
mul
or
dec
jge
mov
cmps
sbb
into
loope
pop
loop
shl
xor
jns
cmc
mov
and
lahf
or
sub
fsubr
bswap
mov
push
or
pop
xchg
stos
push
cmps
jg
mov
js
bound
mov
add
jle
mov
mov
and
leave
pop
dec
stos
and
pop
daa
xchg
inc
xor
in
arpl
icebp
mov
paddsb
popa
mov
pop
sub
fst
jl
test
arpl
mov
pop
retf
dec
sti
jg
ret
sbb
xor
sbb
xchg
dec
inc
jb
in
xor
sar
xchg
sbb
adc
ret
push
retf
and
nop
imul
jno
popa
xchg
imul
popa
je
fucomp
adc
or
inc
inc
pop
hlt
(bad)
mov
mov
and
inc
add
rol
push
add
mov
add
cmp
xchg
ror
ret
lods
jmp
sbb
sub
iret
in
and
pusha
or
sub
mov
dec
pop
loopne
mov
aad
sub
or
std
and
jle
jnp
dec
or
inc
mov
adc
dec
jg
cld
hlt
rcr
jecxz
loope
fiadd
xchg
pop
mov
shl
out
pop
jo
das
dec
inc
movs
imul
pop
lea
int3
fdiv
pop
scas
sahf
mov
mov
int
hlt
fdiv
mov
push
or
or
sbb
cmp
adc
and
jno
add
add
fsubr
addr16
mov
dec
inc
sub
fdivr
add
pop
(bad)
iret
mov
cmps
bound
aam
xor
or
mov
pop
push
lds
or
or
cs
aas
mov
xor
outs
adc
aad
iret
ins
jmp
leave
(bad)
fimul
ficom
and
iret
xor
sub
fdivr
sahf
dec
bound
icebp
arpl
dec
lods
mov
iret
xchg
shl
inc
and
pusha
mov
popa
push
out
mov
jp
xchg
push
lea
jns
push
cmovbe
out
cmp
repnz
xchg
movs
xchg
shr
dec
les
jno
jmp
push
inc
adc
and
lods
or
mov
enter
sahf
mov
mov
xchg
movs
add
adc
mov
mov
mov
imul
mov
xchg
ret
adc
xchg
ins
dec
mov
nop
sub
or
mov
movs
push
mov
inc
jmp
loopne
xchg
repnz
lock
loop
outs
cmp
mov
in
xchg
out
int3
ret
xor
gs
jmp
or
fist
bound
rol
mov
mov
lock
daa
adc
sti
and
iret
cmp
adc
pusha
mov
dec
sub
sbb
adc
js
sub
test
fldlg2
stc
(bad)
xchg
shr
or
data16
out
xchg
mov
loop
or
xchg
adc
lods
das
xchg
pusha
mul
adc
or
mov
mov
sub
gs
add
mov
xor
and
movs
adc
mov
pusha
popf
lock
cmps
bound
fild
dec
stos
pop
outs
call
(bad)
cli
hlt
dec
add
xor
dec
jmp
inc
mov
out
test
ja
dec
pop
jnp
xchg
push
inc
mov
adc
xchg
mov
adc
scas
and
mov
pop
xchg
and
stos
ja
sbb
out
jbe
sbb
push
call
pop
adc
jo
(bad)
retf
mov
sub
hlt
aam
or
shl
dec
sbb
rcr
push
xchg
jb
mov
add
or
retf
not
dec
test
outs
sub
jmp
ret
(bad)
mov
jnp
bound
pop
cwde
mov
dec
outs
(bad)
(bad)
in
loopne
jae
out
pop
(bad)
fnsave
(bad)
mov
mov
jb
int3
test
mov
mov
push
ja
adc
mov
hlt
in
(bad)
sar
and
into
push
fcomp
mov
int3
loope
rcl
out
and
adc
cs
sbb
imul
cmc
sahf
enter
mov
push
xchg
push
cwde
js
push
inc
aam
jb
cld
iret
mov
adc
xor
inc
pop
pop
lock
cmp
ret
(bad)
int3
inc
pop
push
xchg
mov
scas
xchg
lock
je
ret
jle
lods
mov
shl
and
stc
leave
jne
bnd
mov
mov
ror
xchg
ret
push
out
popa
(bad)
mov
cmp
hlt
pushf
pusha
fimul
and
(bad)
cmp
add
into
in
cld
add
leave
retf
dec
aaa
xor
push
loope
movs
pop
cmp
mov
add
xlat
adc
push
adc
pop
mov
sbb
out
cmp
sbb
mov
stos
int
sbb
jns
outs
mov
cld
add
sbb
stc
xchg
daa
out
or
leave
add
or
imul
mov
jle
das
pop
dec
fwait
out
mov
inc
jp
sub
sbb
pop
jge
mov
movs
cmp
aam
or
push
jmp
movs
xchg
sub
cmp
les
pop
cli
mov
push
xchg
pop
hlt
call
pop
(bad)
addr16
fsub
and
lods
xor
jb
mov
sub
test
pop
scas
div
xchg
fisub
fld
daa
push
xor
out
fsub
loopne
ret
sub
int3
sub
add
pop
movs
jmp
and
mov
xor
cwde
call
xchg
pop
and
add
fdivp
xor
in
ficomp
jnp
push
clc
ins
popf
mov
adc
inc
mov
(bad)
cdq
std
fsub
pop
pop
out
test
call
fwait
cmc
mov
outs
outs
and
pop
dec
mov
add
add
pop
hlt
add
sbb
cld
jg
je
dec
pushf
lea
jb
loope
mov
call
cmps
or
mov
jb
xchg
(bad)
frstor
adc
setb
add
cmp
lds
aaa
ret
fwait
ret
nop
shl
xchg
xlat
loopne
dec
and
inc
out
repnz
iret
mov
test
xchg
aad
inc
jle
pop
scas
adc
adc
dec
shr
or
sti
mov
jl
(bad)
lods
movs
xor
sub
jle
or
cmps
dec
sar
and
sub
enter
jae
mov
sub
push
mov
repz
mov
ret
cmc
test
repnz
in
ficomp
xchg
xchg
nop
jae
stos
movsx
push
add
adc
or
or
cwde
lods
and
adc
dec
shl
pop
(bad)
stc
stos
and
inc
sbb
cs
popf
adc
pop
hlt
dec
aad
jle
mov
jne
lods
aaa
mov
pop
dec
dec
mov
mov
cmps
jl
(bad)
sub
add
(bad)
push
iret
sbb
add
xor
in
add
xchg
(bad)
(bad)
pslld
ss
in
fs
lock
mov
les
or
mov
pusha
rol
mov
aad
mov
push
jmp
mov
sbb
out
mov
push
scas
(bad)
std
mov
mov
mov
push
test
add
pop
ds
addr16
push
shr
pop
dec
inc
lods
je
push
mov
imul
(bad)
jecxz
hlt
(bad)
test
cmps
pushf
cdq
sub
neg
fcomp
xchg
ins
or
inc
mov
std
adc
lock
fxtract
fstp
jge
or
sub
add
test
icebp
stos
in
cmp
xchg
in
xor
in
test
scas
pop
sbb
xchg
scas
or
pop
xchg
adc
ret
lods
xchg
mov
push
or
adc
icebp
fs
cs
pushf
or
shl
pusha
dec
push
std
mov
push
push
sbb
out
and
jg
out
jae
ret
jp
lahf
mov
shr
xchg
data16
(bad)
sub
lea
das
xchg
mov
sub
xor
sub
pop
push
sbb
adc
nop
ds
cli
jne
pop
xchg
xlat
fnstsw
sub
jge
jmp
dec
cs
stc
mov
out
js
fisub
sub
adc
bnd
aam
jp
cs
adc
arpl
sti
sub
js
arpl
iret
icebp
dec
jp
mov
push
movs
pop
push
adc
push
cmp
bound
cmp
add
icebp
in
ror
out
fldenv
or
in
sbb
adc
pop
mov
cmp
mov
sub
data16
sub
push
cli
xchg
out
mov
nop
add
xchg
mov
test
fistp
cmp
fwait
xchg
out
mov
mov
cld
xor
mov
jle
pop
sti
fs
in
pushf
push
push
mov
add
out
adc
jmp
ret
push
jne
inc
xor
cld
mov
add
sub
adc
dec
cmp
repz
ffree
loope
pop
xchg
dec
ins
mov
(bad)
adc
movs
or
dec
jl
pop
cmp
test
popf
int3
xlat
mov
add
xchg
dec
ret
push
sbb
call
push
mov
dec
aaa
jnp
push
cdq
xor
call
pusha
dec
test
jmp
fild
push
mov
je
(bad)
sub
xor
cmp
xchg
enter
movs
adc
mov
mov
mov
lock
shl
scas
add
sbb
fs
loopne
retf
fiadd
or
sbb
mov
(bad)
or
(bad)
ror
push
sti
loop
mov
mov
retf
icebp
(bad)
add
lds
dec
mov
lds
xlat
movs
xchg
clc
(bad)
clc
xchg
dec
test
rcl
test
mov
mov
add
mov
xlat
daa
outs
pop
aam
sub
push
jmp
mov
lods
out
or
sub
ret
sub
cld
cmp
aas
push
loop
add
ret
std
int3
and
mov
jge
fidivr
retf
xchg
and
and
lea
mov
repnz
js
or
call
and
dec
pop
out
aam
outs
scas
mov
push
or
sub
loope
mov
fnstcw
hlt
js
sahf
pushf
ror
mov
push
mov
mul
mov
cmp
mov
rol
mov
xchg
iret
pop
mov
xchg
or
out
ret
sbb
fimul
add
popf
or
xchg
sbb
out
mov
fwait
jge
mov
aas
pop
push
jno
sbb
mov
aas
xchg
inc
inc
mov
(bad)
stc
sbb
sbb
and
push
dec
xchg
push
jb
das
pop
inc
outs
push
sub
into
cld
sub
test
mov
cmp
stos
(bad)
pop
shr
addr16
inc
pop
ins
cmp
xor
and
fisubr
add
pop
fs
rcl
add
fdiv
dec
jecxz
les
pop
cld
xor
add
les
jmp
cmp
push
and
out
xchg
cdq
ins
test
sahf
mov
xchg
loop
push
punpckhbw
sub
test
cmp
push
ret
adc
xor
push
cmc
mov
rcr
ror
call
scas
mov
jbe
inc
cmp
sub
icebp
inc
sbb
sbb
jg
loop
push
push
jl
test
sub
dec
lods
mov
sub
les
adc
xor
cmp
dec
adc
mov
dec
push
ret
ror
sub
loope
mov
add
and
imul
hlt
dec
dec
(bad)
aad
inc
fstp
in
in
ror
push
mov
xchg
outs
and
mov
jae
add
sti
xor
fs
lahf
lea
sets
adc
lahf
dec
add
loope
dec
cmp
enter
stos
dec
addr16
mov
cmp
test
test
repnz
xor
jge
add
movaps
cmps
jnp
fisub
dec
push
mov
(bad)
sbb
retf
lock
daa
js
mov
inc
push
(bad)
(bad)
repz
xor
aam
or
sub
xor
jl
mov
fucom
int3
sbb
loop
sti
mov
imul
mov
and
add
jp
add
mov
call
stc
aas
dec
xchg
xor
imul
xchg
xchg
fdiv
pop
mov
cld
inc
mov
sbb
ins
cmp
(bad)
mov
loopne
retf
push
sub
xor
cmps
rcl
ret
fist
stos
mov
pop
dec
jmp
lock
mov
jl
pop
outs
xchg
adc
test
xchg
mov
int3
fild
pop
push
sub
repnz
mov
outs
or
fs
sub
imul
retf
repnz
or
pushf
out
mov
add
jp
xchg
int3
(bad)
jns
out
xchg
(bad)
xchg
popa
xchg
cmps
rol
cmp
retw
inc
sbb
add
and
push
and
pop
test
sbb
cs
ror
out
(bad)
xchg
imul
(bad)
std
inc
out
rcr
jl
and
adc
out
mov
movs
je
in
pop
cmp
bound
je
lahf
push
mov
into
in
push
mov
and
scas
and
lods
leave
scas
out
aam
pop
fldenv
lahf
xchg
mov
push
fsubr
pop
xchg
out
xchg
cdq
sbb
xchg
shl
pop
ss
ss
test
xchg
xchg
repnz
dec
dec
push
(bad)
lds
mov
mov
mov
fld
push
test
sub
pop
dec
push
mov
test
and
jmp
bnd
imul
xchg
call
mov
pusha
jg
(bad)
shl
dec
pop
mov
push
vandpd
or
stos
xor
fisub
adc
popf
repnz
inc
xchg
inc
imul
out
ficom
xor
jno
dec
(bad)
mov
xchg
gs
ins
xor
shr
(bad)
fisubr
xchg
inc
in
std
retf
push
and
adc
xchg
xchg
jne
mov
jne
stc
aam
ss
or
mov
jbe
in
xchg
cdq
mov
addr16
push
or
and
test
xchg
popa
test
dec
inc
and
and
push
(bad)
sub
mov
xor
imul
arpl
and
daa
aas
inc
dec
lods
js
push
pop
repnz
stc
mov
leave
(bad)
and
sub
and
mov
cmp
repz
adc
cs
xor
ins
mov
jne
inc
lahf
fisubr
dec
ss
or
sbb
mov
mov
fdivr
mov
shr
adc
cmps
cmp
or
(bad)
push
dec
(bad)
in
and
adc
pop
jl
mov
xor
or
push
(bad)
xor
sub
ror
cwde
sbb
addr16
iret
cdq
repz
jnp
push
fisttp
or
cmp
and
aad
into
outs
mov
cmp
retf
in
jmp
in
in
add
aas
outs
aad
leave
jns
shl
push
fmul
adc
xor
rol
mov
xchg
leave
cmp
(bad)
jnp
test
(bad)
dec
(bad)
xchg
pop
xchg
pop
mov
adc
fs
ret
push
add
jno
xor
loop
div
cld
mov
int3
pop
mov
and
mov
(bad)
xor
jl
jae
lds
push
xchg
sub
cli
mov
stc
mov
cmp
pushf
sub
jl
outs
jo
cs
lahf
xchg
stos
test
stos
mov
imul
fmul
adc
add
push
sub
push
mov
je
je
pop
addr16
add
popf
movs
sub
scas
and
in
push
in
xor
fcmovbe
ja
cmp
dec
sub
push
mov
sub
call
adc
aad
or
or
mov
ja
jne
cmp
inc
(bad)
sbb
cdq
mov
push
mov
test
sbb
xlat
mov
loope
xchg
xlat
int
dec
mov
(bad)
icebp
test
sub
mov
jl
add
adc
lods
outs
or
ds
add
pop
(bad)
sub
push
push
out
clc
aaa
nop
rcr
push
dec
(bad)
aam
pop
(bad)
popf
fwait
jbe
(bad)
cmp
neg
lock
mov
xor
pop
and
mov
gs
movs
push
xchg
repz
nop
jmp
inc
in
push
cli
or
push
xor
stos
push
lds
mov
stc
imul
out
loope
ret
adc
sub
adc
fiadd
push
dec
call
fcmovu
pop
and
jno
cmps
jb
mov
dec
rcl
repnz
iret
out
jae
push
std
movaps
daa
mov
retf
outs
xchg
vcvtss2sd
rcl
outs
push
and
enter
mov
pop
mov
push
sahf
and
sub
sbb
cwde
xchg
fwait
das
(bad)
clc
sub
out
xchg
(bad)
push
sbb
repz
mov
in
sub
pop
test
enter
jmp
mov
or
adc
ret
mov
xchg
test
not
add
frstor
adc
cs
inc
repz
cmp
dec
repz
mov
clc
adc
or
jnp
jl
ins
push
sahf
or
daa
mov
sub
enter
scas
sbb
sbb
xor
in
aam
lea
jg
jecxz
mov
xchg
or
nop
add
aas
stos
add
xor
mov
jmp
in
xor
nop
mov
popf
ffreep
adc
sub
mov
or
(bad)
pop
icebp
inc
or
popa
nop
fisub
lock
xor
or
cmps
mov
mov
or
movs
cmp
gs
adc
out
xchg
(bad)
fst
fdiv
daa
out
fwait
cmp
xchg
neg
in
jmp
push
mov
fisub
retf
sar
lea
inc
mov
pop
xchg
push
shr
dec
sub
xor
sbb
inc
jnp
dec
xchg
adc
test
mov
adc
adc
mov
out
rcr
(bad)
out
and
test
xor
and
out
mov
call
jb
out
arpl
inc
sub
dec
stos
bound
rcr
xchg
inc
inc
cwde
xor
arpl
shr
and
je
ffreep
adc
sub
jmp
cs
outs
scas
call
fs
push
outs
jnp
(bad)
jecxz
mov
mov
jbe
mov
mov
cli
aas
sbb
(bad)
sub
out
xchg
adc
sbb
jae
ins
stos
pop
cs
jmp
sbb
mov
xor
xchg
xchg
xor
and
(bad)
sub
cmp
les
sbb
sub
out
imul
push
cmc
mov
pop
jl
adc
shl
xchg
adc
mov
sbb
data16
pop
jo
rcr
xchg
jnp
inc
popf
arpl
mov
push
xchg
push
stos
pop
cdq
or
sub
and
sub
popa
push
xor
loop
cs
aaa
shr
xchg
mov
mov
inc
js
pushf
cli
loope
mov
les
adc
fidiv
idiv
sub
mov
cmps
sbb
push
(bad)
push
(bad)
gs
out
mov
aas
add
inc
jecxz
xchg
stc
jbe
and
mov
pop
loop
std
cmp
push
mov
hlt
adc
fidivr
mov
out
fwait
cdq
jb
push
js
mov
push
and
adc
inc
(bad)
stc
outs
aam
pop
sbb
outs
jg
mov
pop
(bad)
ins
sbb
rcl
xchg
adc
cs
cli
nop
mov
mov
data16
lahf
js
scas
sub
out
addr16
lea
jo
push
data16
iret
jno
or
test
push
and
mov
cdq
jl
stos
or
or
call
mov
adc
mov
cld
and
adc
lods
adc
loopne
sar
mov
jp
cmp
pop
or
ss
adc
hlt
imul
addr16
sub
mov
sti
in
retf
push
cmp
pop
mov
in
push
inc
jmp
cwde
daa
test
push
sub
xchg
clc
mov
inc
(bad)
mov
ins
cmps
cmp
cdq
mov
jge
adc
cwde
lahf
xchg
icebp
test
dec
cmp
mov
scas
in
sub
and
(bad)
mov
mov
in
and
pop
push
cwde
jl
xchg
stc
mov
push
cmp
add
jg
sub
lock
nop
mov
popa
cld
and
loopne
leave
sub
cmp
das
inc
push
pushf
inc
jne
xchg
stos
test
adc
std
jl
push
cwde
mov
pusha
cmp
imul
arpl
dec
push
mov
ret
test
dec
mov
xchg
mov
mov
ret
sbb
push
je
jge
push
pop
pop
push
mov
pushf
push
jne
pop
sbb
push
inc
mov
cmp
mov
push
mov
std
bnd
xchg
inc
or
fcom
cmps
int
sub
push
add
sbb
push
and
sbb
mov
jle
ret
test
cwde
mov
je
fwait
dec
or
aas
cmp
(bad)
pop
xchg
jle
xor
xchg
cld
or
pusha
cmp
(bad)
push
add
mov
dec
loope
movs
retf
add
js
popa
mov
or
in
mov
mov
xor
add
leave
popa
in
push
cli
hlt
stos
push
xchg
stos
call
add
cmp
fdivr
adc
jno
hlt
lds
xchg
call
push
sbb
(bad)
sub
(bad)
outs
xchg
sub
stos
jp
out
jge
jge
push
pop
imul
fld
(bad)
sti
jmp
aas
jb
fs
(bad)
mov
fmul
xchg
es
push
xchg
pop
mov
iret
rcl
dec
jg
pushf
push
sbb
shl
bound
mov
aas
loopne
cmp
dec
dec
cmps
jge
mov
pop
out
ficom
icebp
repnz
push
xchg
gs
ins
jbe
adc
lods
add
xor
dec
(bad)
not
movs
hlt
in
stos
lods
rol
push
nop
and
jecxz
jbe
jbe
mov
out
mov
lahf
add
jmp
fs
pop
pop
inc
addr16
outs
imul
dec
retf
sbb
mov
gs
stos
xor
inc
mov
adc
pop
lock
add
inc
sbb
dec
icebp
movlps
inc
mov
push
push
loopne
add
xchg
add
xor
dec
adc
mov
mov
out
aam
sbb
xlat
cmps
stc
js
xchg
aas
pop
cs
sub
inc
mov
mov
dec
jge
cmp
mov
mov
jl
jbe
fcom
fwait
cmps
cmp
in
shl
jge
mov
pop
inc
test
adc
sbb
aam
(bad)
rcr
jmp
push
bound
repnz
stc
fdivr
imul
inc
in
or
push
into
mov
jnp
mov
dec
mov
fwait
xchg
jne
dec
push
fcomp
movs
lahf
inc
mov
pop
xor
stc
pusha
xor
and
les
scas
dec
mov
jmp
and
dec
mov
pop
scas
push
ret
add
popf
mov
fnstsw
out
int
data16
pop
sub
iret
sar
das
xchg
sbb
loopne
les
jns
cmps
adc
xchg
mov
fstp
sub
dec
test
fsubr
call
in
jecxz
mov
movs
(bad)
movs
mov
push
add
ins
frstor
adc
adc
retf
imul
and
sub
jno
add
repz
neg
(bad)
in
scas
nop
aad
aaa
add
fs
pusha
loopne
sahf
xchg
pop
mov
ja
inc
cmp
xor
dec
out
mov
jbe
dec
and
sbb
mov
mov
loope
(bad)
stc
(bad)
sahf
inc
adc
cmp
pop
loopne
xor
movs
mov
cdq
mov
(bad)
mov
xlat
gs
cmp
daa
ds
mov
jns
icebp
je
clc
push
and
jns
pop
idiv
repnz
mov
ret
(bad)
cdq
or
xor
lods
mov
or
std
xor
xor
cli
sub
xor
es
mov
push
mov
stc
dec
popa
mov
and
nop
cmps
cmp
aas
je
jmp
fstp
fild
aad
rcr
mov
or
push
movs
add
and
sahf
neg
xor
outs
jle
inc
jbe
std
or
push
and
dec
popf
test
test
not
popf
mov
or
add
adc
sbb
mov
mov
or
daa
stos
leave
aam
movs
cmp
(bad)
cli
pop
and
sub
out
ret
jmp
ret
es
inc
mov
into
xchg
jge
jmp
pop
cmp
jge
and
adc
std
sbb
cld
unpcklps
fimul
sub
dec
(bad)
ds
loop
add
dec
leave
cmc
loop
cmp
call
ja
mov
retf
arpl
and
or
mov
movs
or
mov
inc
push
cmp
pop
test
push
mov
hlt
xchg
shr
ffreep
popa
ss
jno
std
and
push
outs
repz
and
sub
sub
dec
inc
hlt
wrmsr
test
pop
leave
je
fwait
xlat
sbb
sbb
(bad)
ficomp
call
cdq
cmp
jle
inc
popf
(bad)
mov
push
or
imul
repz
js
xor
push
(bad)
call
adc
pop
mov
ins
out
dec
dec
push
pop
and
and
movs
test
sub
out
inc
fst
mov
dec
dec
sti
out
mov
push
popf
xor
es
pop
push
test
ja
mov
jl
scas
movs
aaa
mov
xor
loop
int
jg
mov
jp
mov
sub
push
sahf
xor
cmp
mov
jp
sbb
imul
pop
sbb
ret
push
loopne
xor
xchg
cmp
mov
cmp
or
and
mov
dec
ja
mov
sbb
jle
fdivr
sbb
xchg
add
or
add
jge
push
es
in
xchg
push
or
push
cmp
fldenv
sbb
jns
add
and
movs
test
jecxz
sbb
rcl
mov
xor
fnstsw
or
push
addr16
inc
dec
jb
shl
ins
sub
and
shl
pop
dec
dec
inc
cwde
out
pop
movs
pop
cmp
ret
call
outs
shl
idiv
or
mov
pop
pop
iret
loop
mov
or
jb
fadd
cmp
in
cs
shl
jnp
into
aas
lods
jae
mov
and
xor
adc
adc
add
pushf
cli
out
jbe
bound
push
push
fwait
jecxz
cs
mov
lds
xor
aaa
popa
add
sbb
mov
dec
jo
movs
fimul
jne
dec
xor
stos
jnp
mov
into
fbstp
xor
adc
mov
xor
sbb
in
cmp
mov
out
dec
addr16
jp
imul
(bad)
jb
mov
mov
ins
loopne
and
out
jle
ret
mov
pop
mov
in
mov
ins
mov
imul
push
jg
cmp
jae
cs
add
les
arpl
dec
movs
dec
fimul
dec
jl
push
jae
mov
push
call
rol
pushf
or
pop
and
pop
mov
dec
push
js
std
sar
retf
cmp
int3
xor
lea
or
shl
pusha
(bad)
xchg
out
cdq
jl
dec
ins
dec
push
mov
and
pusha
xlat
jmp
aam
sbb
add
and
sti
mov
jo
mov
mov
mov
cmp
adc
dec
push
lods
pop
inc
in
fwait
lea
cmp
sbb
jbe
leave
ret
push
(bad)
(bad)
jnp
je
rol
mov
iret
push
clc
je
(bad)
adc
sbb
mov
stc
sti
pop
stc
pop
cmp
cmp
dec
xor
dec
jno
xor
xor
test
xchg
or
imul
and
shl
pop
cmp
cmp
in
adc
jge
xor
cmp
inc
push
xchg
rcr
icebp
mov
mov
ret
sbb
jecxz
lods
add
lods
mov
call
jb
xchg
add
push
lock
jge
push
push
xchg
sar
xor
adc
es
cmp
mov
pop
mov
call
pop
jge
sub
das
and
adc
dec
es
dec
nop
movs
or
xor
mov
adc
in
sar
pop
lds
sbb
push
add
adc
into
cmps
inc
in
add
add
push
jne
hlt
bound
jno
repnz
(bad)
(bad)
adc
xchg
adc
jg
mov
mov
xchg
jg
jp
or
adc
ins
pop
xchg
jp
mov
add
jl
aaa
loop
sub
ret
mov
ror
add
push
stc
mov
xchg
xlat
inc
retf
pusha
fidivr
mov
rcl
xchg
mov
inc
js
sub
adc
(bad)
cld
cmp
aam
mov
test
sar
sub
add
or
and
jl
and
lea
sub
stos
sbb
stc
sub
jae
ficom
lahf
sahf
fisttp
jge
movq
(bad)
sbb
pop
xchg
xor
and
stos
push
out
call
pop
enter
push
pop
mov
sbb
add
xchg
pop
push
sub
fbstp
mov
test
lds
retf
into
xor
push
xor
inc
lock
rcr
test
loopne
js
xchg
cmp
enter
or
loop
cmp
stos
and
aam
lea
call
or
popf
mov
lods
push
pushf
les
out
add
inc
clc
(bad)
out
push
sub
inc
push
xchg
jno
cmps
icebp
mov
call
and
dec
out
aas
pop
les
pop
inc
cmps
pop
lds
jno
adc
xor
lods
dec
ja
fisttp
cmp
stos
scas
sbb
dec
aad
(bad)
das
pop
xchg
test
pop
shl
xchg
xor
sahf
push
popa
pusha
pop
mov
jmp
add
mov
call
jle
pop
inc
jne
out
push
mul
jne
nop
stos
pop
fwait
loop
inc
xchg
nop
sbb
dec
xor
sbb
and
jg
out
push
xchg
or
clc
or
scas
iret
jnp
inc
mov
cli
xchg
aam
cmps
scas
fisub
imul
mov
xchg
(bad)
std
sbb
mov
xchg
lea
jecxz
retf
nop
dec
ins
inc
sub
cmp
pop
(bad)
iret
inc
ret
cmps
adc
mov
adc
ins
out
loope
ins
addr16
imul
(bad)
fdivr
aam
shl
pop
ja
mov
aas
repz
push
mov
(bad)
mul
clc
xor
pushf
inc
mov
shr
jo
sub
fst
idiv
xor
mov
fistp
loopne
stc
test
pushf
adc
mov
mov
fdiv
sbb
fcomp
mov
iret
retf
aad
ss
xor
cdq
loopne
gs
xor
test
inc
push
(bad)
sar
push
push
imul
sub
push
pop
jnp
adc
mov
sbb
push
sar
iret
icebp
inc
mov
loop
(bad)
and
js
sar
and
push
xor
adc
rep
push
and
icebp
into
int
dec
xlat
jle
cmp
push
iret
jno
ror
enter
mov
mov
scas
call
lods
rcr
dec
(bad)
addr16
and
pop
cs
ins
inc
lods
ror
inc
push
mov
jmp
sar
xor
test
add
adc
les
pop
xor
sbb
in
mov
push
sub
mov
xor
dec
add
adc
mov
and
ss
pusha
jle
sub
xor
cmp
pop
in
xchg
out
mov
jmp
mov
pop
call
add
mov
std
mov
clc
or
imul
add
pop
and
sbb
and
dec
das
or
xlat
cmp
fild
inc
leave
sbb
aad
loopne
icebp
push
and
cmc
or
push
inc
arpl
test
les
test
push
aas
je
pop
scas
sub
mov
jne
scas
pop
pushf
push
mov
mov
imul
add
pop
arpl
push
mov
lds
add
xchg
std
push
push
and
xchg
je
aas
outs
sub
mov
mov
mov
into
jge
bound
jne
sub
inc
fwait
jmp
sub
ficom
jle
(bad)
cs
dec
lods
aaa
mov
xchg
scas
stc
call
cmp
cmc
ret
inc
push
pop
and
add
jle
dec
adc
sub
sbb
xchg
push
mov
add
mov
mov
je
and
pop
repz
sbb
jecxz
xor
lahf
fwait
je
xchg
and
repz
cmp
or
ucomiss
dec
es
and
int3
jp
xor
pop
les
loop
out
nop
sub
dec
cld
and
aad
add
mov
mov
xor
xchg
xor
mov
jno
pop
inc
or
push
aas
lods
sbb
dec
xchg
jnp
jbe
and
mov
aas
rcl
pop
das
lods
xchg
xchg
popa
xchg
cmp
dec
adc
sahf
and
jno
pop
fld
in
dec
and
adc
jp
push
data16
jno
push
cmp
dec
add
push
clc
xchg
fdiv
and
(bad)
adc
inc
push
retf
repnz
add
std
add
inc
daa
cwde
in
repz
sub
mov
sahf
mov
jg
out
psubusw
add
push
inc
sbb
xor
sbb
push
push
add
mov
js
shr
or
fisttp
bound
fstp
rol
aam
out
iret
out
movs
push
fld
repnz
jmp
jae
ss
shl
pop
iret
xchg
(bad)
push
(bad)
jbe
adc
jp
out
outs
jae
cwde
dec
cmp
cdq
xor
or
aam
mov
scas
stc
jb
rol
pop
in
and
addr16
scas
mov
test
add
outs
mov
shr
jl
xacquire
ja
sub
cmp
out
mov
mov
inc
scas
out
and
or
(bad)
xchg
xchg
inc
xchg
jne
jbe
sub
jge
movs
pop
fidiv
les
fmul
imul
cmovne
cwde
adc
xchg
push
fdivrp
inc
push
arpl
addr16
mov
sbb
fnstenv
pop
jl
dec
cmps
je
call
aad
or
cmps
mov
aad
fstp
mov
cmp
add
add
mov
mov
mov
jbe
nop
push
(bad)
test
(bad)
jae
cmc
dec
push
lods
rcl
cwde
shl
xchg
stos
mov
ffree
dec
jno
lds
dec
or
mov
pop
rcl
(bad)
mov
mov
fwait
or
dec
mov
je
test
repz
sbb
mov
xchg
mov
loopne
leave
cmp
icebp
cwde
push
lds
jae
scas
sub
loopne
popa
cmp
gs
push
nop
mov
clc
fisub
jo
dec
sub
inc
pop
fs
mov
popf
and
ins
call
xchg
adc
loopne
add
cmp
xor
fninit
mov
ds
std
rcl
inc
ds
pop
jmp
push
sar
mov
dec
arpl
inc
pop
and
xor
jle
scas
add
push
mov
adc
bound
and
repz
imul
inc
sti
pop
add
mov
push
aaa
mov
dec
mov
mov
adc
in
ins
(bad)
data16
test
sti
mov
cli
leave
ficomp
jo
jb
ins
sti
sbb
push
or
std
mov
retf
sti
cld
adc
sub
test
pop
test
mov
gs
arpl
(bad)
xchg
dec
jmp
jecxz
xchg
cmp
adc
psrad
jl
rol
iret
data16
push
xor
loope
jle
or
jmp
pop
pop
lea
pop
out
xchg
test
ds
not
push
and
scas
mov
addr16
push
int3
test
jecxz
xlat
lock
outs
nop
dec
ret
stos
and
jmp
push
push
shl
mov
push
pop
mov
jmp
data16
mov
daa
repnz
dec
aam
in
push
mov
shl
pop
mov
xchg
mov
mov
addr16
xchg
push
test
das
out
sub
dec
test
fcom
test
or
adc
pop
xchg
dec
test
pop
imul
lods
jnp
pop
ds
lock
adc
lock
add
jno
jns
aam
in
sbb
mov
xor
hlt
mov
inc
mov
pop
ror
mov
retf
int3
adc
mov
inc
dec
inc
push
mov
push
dec
mov
add
out
jne
mov
out
(bad)
stos
xchg
xchg
push
repz
mov
jne
jl
imul
cmc
mov
pop
xor
outs
xor
push
test
pop
(bad)
ins
pop
mov
dec
push
nop
mov
push
cwde
jg
add
fucomi
cmp
sub
push
sbb
adc
sub
mov
mov
repnz
retf
mov
mov
repnz
out
hlt
stos
aaa
dec
js
imul
add
hlt
mov
scas
xchg
sub
in
jl
in
xlat
adc
adc
or
push
sbb
jo
mov
sub
rol
test
clc
pusha
mov
or
call
push
cmc
cmp
sbb
aaa
sahf
jbe
xchg
fsub
pop
out
retf
mov
add
cmp
and
frstor
mov
outs
out
clc
lods
scas
addr16
cmp
test
pop
retf
mov
and
cmp
or
or
inc
xor
out
add
pop
mov
mov
jnp
pop
inc
leave
dec
and
in
call
xor
(bad)
or
pusha
inc
scas
xchg
ja
sub
sub
or
cli
sbb
rcl
retf
jp
mov
mov
push
shr
mov
out
add
adc
xor
into
in
loope
shl
sti
js
push
shr
jne
mov
sbb
sub
mov
out
and
mov
lahf
xor
add
iret
bound
dec
fmul
mov
adc
and
push
xchg
imul
bnd
jnp
dec
sub
xor
push
imul
mov
int3
mov
or
hlt
in
mov
icebp
pop
jmp
push
push
sbb
addr16
das
adc
mov
pop
add
cdq
jl
add
lock
fwait
jns
retf
push
cmp
jg
or
scas
add
fisttp
add
lahf
fimul
jns
adc
prefetchw
movs
mov
repz
mov
repz
data16
je
repnz
inc
cdq
add
push
sahf
icebp
(bad)
shl
inc
retf
and
je
std
dec
push
inc
cmp
enter
arpl
adc
retf
mov
mov
mov
inc
push
cmps
or
loope
jle
or
fcmovu
and
(bad)
scas
fld
jo
adc
into
mov
jecxz
and
js
mov
mov
inc
repz
shl
jp
int
call
shl
push
fisub
mov
adc
xchg
jmp
mov
adc
sub
jno
into
cli
(bad)
jbe
lea
push
push
ja
add
dec
sbb
xor
adc
(bad)
imul
(bad)
popf
lods
dec
mov
push
mov
jo
sub
stos
mov
jns
adc
mov
inc
loope
mov
bnd
mov
lock
(bad)
xor
cmp
sub
rcl
pop
lods
inc
loope
push
jp
sbb
ja
enter
bound
pop
inc
xor
dec
fcmovnb
stc
inc
out
dec
mov
ja
inc
mov
lods
xchg
gs
into
mov
bound
retf
or
sbb
jmp
adc
inc
mov
mov
mov
daa
sbb
ja
mov
hlt
rol
sub
clc
adc
rep
xor
mov
mov
mov
rol
jbe
jg
jno
add
mov
dec
rsqrtps
loop
add
xor
cmp
stos
ja
adc
pop
pop
retf
push
stos
lds
or
ror
xchg
aad
or
mov
scas
fild
pop
inc
push
or
adc
mov
and
cmp
je
mov
add
add
out
mov
push
pop
mov
sbb
in
test
aas
iret
sbb
xchg
add
or
jle
fcomp
hlt
int3
xchg
aas
or
stos
jp
shl
int
test
movs
sbb
aam
int3
sbb
cwde
xor
das
fsub
sub
in
fimul
test
sub
xlat
test
pusha
jmp
cmp
and
fdivr
inc
call
ins
mov
xchg
adc
pop
jnp
add
mov
(bad)
jbe
ja
imul
arpl
xor
icebp
out
std
aam
xchg
jne
mov
dec
std
add
xchg
fcmovb
sub
call
dec
pop
fiadd
pop
or
stos
cmp
mov
xor
cmovs
add
mov
fist
ins
mov
xor
add
pop
repz
and
test
sub
call
jnp
shr
inc
pop
lods
movs
push
retf
repz
pusha
fmul
cmps
fsub
div
aaa
mov
inc
aaa
lods
cmc
sbb
shl
push
lods
sbb
js
push
add
cmp
loope
jmp
jno
ja
adc
mov
jmp
push
inc
push
popa
bound
dec
push
cli
neg
mov
xchg
leave
fistp
arpl
dec
xchg
xor
mov
(bad)
add
pop
aas
shl
ror
mov
imul
popa
jmp
inc
push
push
in
shl
cmps
fcom
inc
clc
push
and
stc
push
repnz
sbb
(bad)
pop
aad
call
cld
cmps
cmp
jle
dec
out
jge
fnstcw
inc
ja
and
rcl
test
push
and
retf
(bad)
mov
aas
idiv
iret
mov
jl
xchg
repnz
push
mov
dec
punpckhbw
dec
rol
not
scas
lahf
fisttp
inc
mov
fcomi
xor
adc
mov
in
call
ins
pop
xchg
mov
add
xchg
dec
sub
xchg
sub
je
jo
loop
pop
pop
mov
lock
cmp
scas
add
cli
add
push
mov
or
sbb
push
xchg
mov
cs
xchg
and
outs
sub
outs
xor
(bad)
int3
cli
dec
or
cmp
in
fcomp
addr16
jb
ja
es
lods
mov
jle
jmp
adc
jb
pop
mov
je
mov
mov
(bad)
xor
sub
das
inc
iret
pushf
scas
inc
push
fwait
test
add
fistp
pop
jae
pop
mov
ret
aad
xchg
mov
test
fnsave
retf
fld
iret
jecxz
or
pop
xchg
jne
and
cli
in
cld
iret
mov
popf
add
push
paddq
mov
mov
in
sbb
hlt
int
sbb
push
cmp
xlat
popa
jnp
sub
sub
xchg
(bad)
xchg
cmp
adc
push
dec
jne
mov
cmp
sub
inc
retf
loop
fwait
scas
lds
cmp
add
and
bound
push
mov
and
xor
mov
mov
cmps
mov
push
sub
pusha
scas
bound
and
cli
inc
mov
inc
imul
lea
jbe
sbb
xor
ret
sbb
mov
fwait
pop
daa
sub
cmp
test
inc
shl
std
xor
lds
loop
call
movs
xchg
repz
adc
test
and
and
fwait
adc
jmp
jge
stos
ror
mov
ja
ret
add
inc
mov
mov
and
mov
cmp
movs
in
daa
mov
test
jne
shl
clc
movs
dec
adc
xchg
ss
push
xor
out
std
mov
xor
adc
adc
stos
mov
adc
popf
retf
leave
inc
sbb
xlat
and
cmp
jmp
add
mov
push
dec
stos
dec
dec
(bad)
out
(bad)
je
mov
xchg
hlt
mov
push
jg
bound
jmp
pop
pusha
cld
lock
push
test
mov
push
fstp
(bad)
mov
ret
dec
jecxz
dec
std
(bad)
fistp
cdq
(bad)
test
mov
xchg
cmp
imul
out
dec
add
pop
lea
int
mov
sub
xor
mov
movs
ret
inc
clc
jp
sbb
sbb
xchg
mov
imul
xlat
xchg
xchg
out
test
mov
sar
ss
mov
mov
std
int
fwait
ss
and
pop
mov
lds
xor
inc
add
and
dec
in
mov
adc
out
scas
inc
and
dec
inc
ja
inc
fwait
dec
xor
sbb
jns
push
push
call
bound
push
mov
pop
inc
cwde
loopne
xchg
lock
mov
(bad)
fst
(bad)
sbb
(bad)
enter
lahf
fcmovnbe
jg
je
aas
and
add
xor
(bad)
push
inc
add
dec
add
mov
or
push
pop
int
dec
and
inc
push
addr16
retf
or
test
rol
(bad)
sub
mov
(bad)
popf
add
cmp
pop
es
cmp
sahf
idiv
and
cmp
xchg
xchg
and
mov
jo
cmc
enter
add
add
and
and
mov
mov
or
frstor
sub
stos
aam
jne
push
lods
ret
dec
lock
sbb
push
pop
jle
js
int
xchg
arpl
adc
cmp
cdq
lds
je
push
push
xchg
scas
jg
push
aaa
mov
sub
inc
xchg
sub
cmp
pop
adc
test
xchg
inc
mov
stc
sub
aas
or
mov
inc
(bad)
out
fild
push
bound
loop
jne
mov
out
call
push
popa
std
cmp
push
push
lds
inc
(bad)
inc
xchg
add
cmp
adc
mov
and
mov
mov
mov
mov
out
popa
movs
and
jo
xchg
sub
stos
sub
pop
imul
lods
inc
ficom
dec
imul
test
jp
xchg
push
cld
es
sub
and
or
(bad)
aam
cld
mov
fistp
imul
int3
push
repnz
call
je
in
add
cmp
aas
data16
das
call
fstp
addr16
(bad)
cmp
mov
mov
bound
sbb
mov
pop
mov
pop
add
bound
mov
fnstenv
cwde
sbb
pop
mov
cmps
scas
sbb
mov
fs
hlt
or
(bad)
and
xlat
not
jnp
push
inc
add
movs
jg
mov
mov
adc
jbe
push
push
in
mov
stos
or
aad
jecxz
push
pop
push
in
push
imul
xadd
inc
cmc
cwde
xchg
cmps
mov
dec
daa
jg
iret
jle
push
out
scas
in
push
inc
add
mov
pop
clc
mov
repz
xlat
cdq
jg
std
mov
(bad)
sub
iret
call
popa
sub
xchg
mov
cwde
ret
fisub
mov
push
xor
(bad)
loope
jbe
jg
fsub
cmp
cdq
xchg
mov
sub
push
out
shl
mov
daa
loop
mov
mov
or
int3
(bad)
xor
mov
push
mov
ja
enter
mov
xchg
pop
sbb
fidiv
sbb
ss
xchg
fdivr
sub
jno
ret
adc
jbe
nop
and
pop
icebp
cmps
mov
sub
dec
mov
sbb
stos
test
pop
pop
inc
or
stos
push
call
or
sar
lods
in
sub
lea
or
call
jo
xor
aas
fist
cld
fdiv
sbb
clc
xchg
dec
mov
sub
test
outs
push
fst
bound
xor
xchg
enter
pusha
in
mov
ds
cmp
add
data16
cmp
scas
jb
cmp
pop
fiadd
jecxz
xchg
es
test
jg
inc
std
pop
not
push
jp
inc
mov
add
add
dec
fcmovnbe
test
jp
cmp
dec
stc
xchg
jo
popf
add
fcomp
les
cmps
add
cmps
xchg
bound
pop
xlat
dec
inc
bnd
lods
movs
mov
mov
movs
loop
in
jb
jmp
sar
xchg
xor
(bad)
mov
int3
pop
push
scas
cmp
push
add
adc
push
jl
(bad)
xlat
sbb
push
aas
call
and
add
(bad)
(bad)
push
inc
iret
(bad)
lods
push
add
adc
mov
imul
jg
int
imul
(bad)
jecxz
adc
les
fnstenv
cmp
es
loope
push
mov
jl
cmp
pop
xchg
ins
dec
add
adc
mov
xchg
mov
adc
push
adc
bt
inc
js
pop
push
jnp
push
fstp
sub
jle
mov
push
mov
pushf
iret
call
or
out
dec
fisttp
stos
es
ficom
dec
cdq
xor
dec
cli
lods
int3
adc
lea
inc
xor
mov
jbe
mov
pop
xor
pusha
imul
pop
adc
mov
and
xchg
or
sub
sub
popa
pusha
dec
mov
out
cwde
in
ss
dec
and
iret
imul
mov
xor
dec
cs
inc
cmp
lods
lock
cmp
sbb
int
dec
retf
jne
(bad)
ror
test
enter
sbb
inc
pop
ret
xchg
pop
add
int3
dec
jbe
sahf
call
popf
jecxz
outs
fwait
xchg
cmps
xchg
adc
sub
jg
add
pop
xor
mov
add
dec
inc
and
aas
mov
add
rcl
addr16
outs
jmp
or
into
jnp
jp
js
xchg
dec
adc
pop
sahf
shr
inc
mov
push
ins
in
mov
or
dec
pushf
add
add
add
dec
ffree
cmps
push
lea
sbb
dec
fcomp
(bad)
fld
dec
xor
loop
adc
add
add
sub
das
paddb
ret
mov
xor
mov
movs
pusha
jne
xor
loopne
pop
pop
adc
ficomp
push
and
dec
leave
or
fwait
cld
addr16
jns
(bad)
test
push
ja
fcmovu
lds
sub
pop
aaa
mov
mov
es
pop
(bad)
jo
fimul
cmp
jg
jle
repnz
inc
je
hlt
jl
jl
mov
add
sar
pusha
sub
cdq
add
lods
xor
inc
pop
nop
cmp
ja
cli
jnp
or
outs
sbb
xchg
int3
and
lds
call
inc
cmp
dec
sub
or
pushf
mov
mov
test
in
(bad)
jae
jle
(bad)
or
add
jge
adc
es
fldcw
ficomp
(bad)
push
mov
dec
imul
outs
push
mov
fadd
stos
mov
call
or
mov
pop
addr16
ja
and
aaa
jb
icebp
mov
sbb
adc
ins
imul
iret
and
nop
inc
lahf
sub
retf
jg
mov
ret
test
sub
sub
cmp
push
ds
and
and
inc
hlt
sahf
sti
test
in
nop
mov
mov
out
or
sti
pop
int3
pushf
or
(bad)
and
mov
xchg
push
sbb
fistp
fidiv
daa
clc
ffreep
adc
inc
mov
and
loopne
in
pushf
xor
scas
cmp
sub
pusha
mov
cdq
push
cmp
mov
fs
cdq
sbb
movs
sub
icebp
jecxz
out
ja
xchg
repz
pop
sbb
loope
call
test
scas
(bad)
cld
(bad)
aaa
hlt
sbb
cmps
aaa
sbb
in
xchg
mov
iret
fcomp
mov
data16
out
adc
shr
ss
jl
push
scas
mov
clc
ss
mov
dec
enter
enter
xlat
fwait
cwde
stc
ror
or
dec
pop
shl
jbe
test
adc
mov
call
fs
push
scas
cdq
stos
add
pop
mov
movs
xor
rcl
pop
mov
dec
(bad)
add
mov
pushf
xchg
scas
inc
xor
retf
lea
test
(bad)
cmp
add
clc
dec
or
cmc
and
cmp
cmps
daa
shr
inc
xor
mov
inc
(bad)
(bad)
into
xchg
mov
mov
rcl
fild
add
and
xchg
mov
mov
div
and
cmp
frstor
cmp
fldenv
sbb
add
push
and
add
pop
cwde
in
mov
out
or
xchg
xchg
aas
jl
repz
dec
pop
xor
gs
add
imul
ret
push
(bad)
rcr
adc
sub
jne
gs
fs
jo
rcl
adc
nop
fcomp
mov
jnp
stc
mov
movsx
xor
stos
push
adc
jg
outs
mov
mov
xchg
and
push
jmp
push
arpl
sub
push
sahf
pop
shl
pop
mov
xchg
lods
mul
mov
xor
data16
clc
(bad)
pop
sti
mov
rcr
adc
call
clc
push
pop
dec
ret
pop
xor
sub
outs
out
push
outs
enter
xor
jns
xchg
xchg
or
imul
dec
inc
sub
push
es
jo
mov
and
iret
repz
jg
std
mov
test
inc
iret
mov
cmp
adc
and
lds
cwde
mov
inc
mov
cmp
xchg
data16
cmp
repnz
ds
push
mov
(bad)
movs
gs
js
sub
ss
imul
ss
fdiv
repz
fist
(bad)
dec
in
loopne
out
mov
push
inc
xor
sti
or
and
mov
ins
fst
mov
test
(bad)
xchg
loopne
jbe
cwde
mov
cld
repz
mov
idiv
clc
gs
xchg
daa
pop
jg
int3
ins
pop
arpl
xor
sub
in
cmp
enterw
dec
mov
(bad)
mov
js
(bad)
fwait
ins
add
jg
ret
cmps
rol
iret
jnp
out
mov
pop
xlat
loop
jo
jmp
test
lahf
xor
repnz
jnp
xchg
ror
popa
dec
clc
(bad)
bound
in
xchg
push
lock
cs
push
aaa
xchg
mov
mov
pop
int
(bad)
or
jmp
jbe
jbe
sub
ror
cmp
xchg
mov
xchg
popf
(bad)
scas
das
int3
scas
mov
ret
(bad)
imul
dec
jae
cld
push
dec
adc
mov
mov
fwait
xchg
add
ret
adc
mov
xchg
mov
pop
sub
jmp
cdq
ret
add
mov
jmp
mov
icebp
pop
pop
adc
ss
fst
xchg
lock
dec
mov
dec
push
ret
jmp
mov
fwait
les
fidivr
movs
clc
lock
inc
movs
cli
push
sub
out
pop
mov
adc
jnp
adc
adc
leave
sub
std
aam
cmp
mov
sub
in
push
popf
xchg
mov
mov
(bad)
shr
iret
xor
or
ss
mov
jns
neg
jo
mov
data16
ds
stos
(bad)
lods
js
sbb
in
(bad)
or
(bad)
xchg
in
or
outs
mov
push
and
pushf
nop
xchg
enter
retf
xchg
cld
mov
cdq
call
test
sub
push
inc
jg
pop
jl
cwde
fdivr
and
jae
mov
jbe
addr16
inc
adc
cmc
pop
sti
test
xchg
pop
or
inc
jae
outs
jo
mov
enter
leave
daa
push
(bad)
push
aaa
fs
pop
jecxz
xchg
mov
push
aaa
mov
mov
add
retf
dec
test
(bad)
cmp
xchg
and
mov
imul
pop
push
call
and
adc
hlt
adc
pop
icebp
rol
adc
add
cmc
jle
not
imul
cmc
out
test
pusha
xchg
test
push
add
imul
sar
dec
sub
mov
mov
jno
and
hlt
cmc
cmp
stos
cmp
inc
jmp
pushf
arpl
popf
pusha
push
jnp
out
lock
jl
jno
dec
or
imul
mov
and
adc
stc
mov
out
out
fwait
xchg
sbb
in
mov
jp
repz
(bad)
mov
mov
(bad)
retf
bound
out
mov
push
cli
(bad)
les
iret
test
and
push
cmp
shl
sahf
dec
aam
inc
push
ret
or
in
iret
mov
sbb
in
mov
sub
pop
in
pop
push
pop
call
aad
sub
or
cmp
mov
mov
gs
pop
mov
repnz
outs
pop
mov
xchg
bound
js
movs
jmp
cmp
mov
mov
xchg
pop
inc
(bad)
sbb
cld
test
ja
ja
aam
cmp
arpl
push
lahf
mov
cwde
push
dec
retf
fnstenv
ret
mov
into
pop
cmps
sub
je
sub
retf
sub
pop
pop
add
add
ins
and
and
or
jnp
(bad)
mov
xchg
lods
jmp
or
xor
les
mov
mov
pop
sbb
imul
aad
mov
push
clc
hlt
inc
xor
inc
arpl
mov
push
mov
lea
clc
fsub
lock
sbb
mov
mov
inc
mov
jg
in
loope
call
aam
cmp
inc
in
jnp
mul
std
fsubr
cmp
mov
scas
mov
pop
xchg
dec
mov
dec
fs
cld
add
int3
mov
sbb
jle
xchg
outs
push
push
mov
fs
mov
inc
in
fs
push
and
jmp
test
sar
dec
aam
(bad)
pop
adc
in
jmp
add
push
das
mov
dec
adc
or
imul
jns
and
xor
and
jns
and
add
sbb
outs
aad
mov
cld
ja
xchg
out
jb
xchg
mov
and
dec
inc
call
aam
les
rol
push
dec
and
jg
movs
push
(bad)
shr
sbb
lock
xor
inc
jl
mov
and
frstor
rcr
fnstenv
sub
add
and
mov
xchg
sub
loope
(bad)
fsubr
add
dec
stos
test
(bad)
faddp
mov
loope
std
fbstp
and
add
inc
xchg
stc
fcmove
push
ror
outs
iret
gs
and
cmp
ins
sahf
jle
cmps
push
ins
mov
jne
or
loope
call
mov
int3
mov
dec
xchg
popa
push
pusha
retf
inc
jle
cli
test
ret
add
outs
add
push
sbb
inc
aaa
mov
dec
fs
cli
mov
push
cmp
test
push
or
mov
pop
popf
iret
dec
add
cmps
mov
cmp
iret
mov
retf
shr
rcr
and
xor
imul
mov
imul
push
jne
pop
dec
xchg
ror
push
mov
sbb
dec
ror
ret
call
shl
test
pop
xlat
in
cwde
mov
inc
stc
and
cmp
in
dec
(bad)
fistp
popf
int3
mov
jno
dec
imul
sub
xor
pop
and
imul
push
mov
inc
sub
and
and
mov
stos
das
std
shl
adc
fdivr
cmc
mov
shr
sbb
sub
vsubps
bound
ficom
stos
add
push
push
cmp
mov
mov
sub
and
add
jg
rcr
rcl
xor
xor
jno
addr16
push
movs
add
xor
jl
test
and
and
mov
jmp
mov
mov
ja
in
mov
lods
cmp
lock
inc
xor
sbb
mov
dec
in
(bad)
fsubp
mov
jmpw
inc
stos
inc
fs
adc
mov
inc
and
dec
mov
mov
mov
in
ret
fmul
xor
cmp
jne
shr
pop
ficom
jmp
or
adc
push
pop
(bad)
xchg
or
cmc
mov
fnstcw
pop
pop
mov
shl
pop
add
inc
mov
sahf
rol
outs
xchg
js
sub
mov
in
sahf
add
inc
dec
and
sub
xor
lods
stos
stos
xlat
js
or
ficom
fwait
ins
aad
xchg
cld
ret
and
repnz
add
daa
hlt
jmp
test
bound
cmp
pop
xchg
mov
jbe
adc
cmp
xor
push
enter
and
jnp
adc
inc
jle
inc
fs
lea
ins
cmc
test
scas
push
in
mov
xor
and
mov
ficomp
loopne
div
adc
xor
icebp
jne
mov
sub
out
jp
and
ins
jae
mov
pushf
mov
popa
xor
fbstp
mov
ins
cdq
scas
sbb
mov
retf
push
fstp
or
stos
xchg
cmp
or
sub
pop
lods
jbe
ja
ret
ds
outs
inc
ret
xchg
add
xchg
sbb
inc
jmp
mov
addr16
popa
je
lods
push
dec
or
sbb
sbb
jle
aad
ret
sub
pop
es
dec
(bad)
mov
mov
es
mov
stc
test
aas
(bad)
pop
lods
rcl
mov
(bad)
and
jae
das
xor
or
in
jl
and
pop
in
stc
jl
fsub
jno
xchg
push
gs
pop
xchg
std
fidivr
call
pop
pop
aad
and
mov
div
inc
jo
retf
int
and
aaa
dec
stc
cdq
ret
addr16
movs
cmps
sub
ror
(bad)
into
push
dec
idiv
ins
pop
js
push
add
(bad)
and
cwde
jmp
jecxz
add
pop
sti
cmps
cli
dec
or
push
pop
call
shr
xchg
sti
cmps
outs
idiv
cdq
adc
nop
mov
jno
cmp
fiadd
xchg
jb
or
loopne
retf
mul
call
mov
sti
and
inc
(bad)
into
add
and
cmp
mov
cli
or
mov
(bad)
clc
xchg
test
add
sbb
movs
outs
(bad)
ins
pop
xlat
jb
pop
shl
xor
fisubr
jb
ror
jae
push
xchg
leave
and
cwde
pop
in
xor
in
xor
push
adc
cmps
arpl
add
ja
aas
xchg
sbb
inc
push
pop
push
push
ins
int3
dec
cmp
pop
fcomp
mov
and
(bad)
popa
jecxz
mov
mov
leave
ficomp
adc
pop
imul
mov
xor
ret
sub
cmp
test
int
add
movs
icebp
xchg
cs
jnp
pop
cli
outs
adc
cmp
add
(bad)
cmp
jmp
ds
lea
mov
pop
loop
or
adc
scas
and
push
stos
icebp
std
ds
fmul
mov
push
sar
int3
cmps
ds
push
xchg
pop
in
movs
loope
into
lods
repz
into
scas
and
xchg
push
jg
movs
imul
movs
pop
dec
cmp
retf
mov
mov
lods
outs
dec
into
ror
push
inc
fwait
push
jbe
movs
repz
out
int3
xor
mov
ss
jnp
pop
add
inc
adc
scas
gs
mov
test
retf
pop
push
rcl
lods
jmp
adc
xchg
ins
cmps
and
test
and
dec
hlt
jno
mov
xchg
mov
xchg
xor
inc
inc
(bad)
dec
dec
push
jp
mov
add
pop
mov
aaa
and
out
cmp
test
mov
push
jbe
or
inc
rcr
xlat
pop
xor
jnp
hlt
sub
and
scas
xchg
into
in
dec
stc
inc
lods
xchg
stc
movs
jns
mov
and
ficomp
jne
std
cmp
in
out
jecxz
ror
jae
jmp
outs
dec
fdiv
adc
push
stos
adc
inc
jne
mov
test
sar
int3
mov
ja
mov
jbe
jbe
jecxz
xchg
adc
mov
push
pop
sub
stos
xchg
lods
nop
in
test
add
(bad)
sti
outs
in
jns
pop
mov
dec
sbb
enter
(bad)
cmp
mov
sbb
retf
pop
mov
mov
ins
std
outs
in
mov
popa
push
cmp
shl
adc
stos
sub
mov
xor
dec
xor
and
inc
add
gs
pop
gs
xchg
adc
lods
jb
ins
enter
pop
cmp
pop
jg
dec
retf
jno
stc
retf
jge
cmp
bound
gs
add
fsubr
sub
and
(bad)
sar
idiv
lahf
jmp
pop
xchg
lds
jge
popf
fs
mov
lods
fsub
shl
ds
jnp
sub
or
sub
cmp
sub
movs
inc
test
stos
in
jo
jo
sub
lea
cmps
in
fwait
repnz
mov
shr
les
sub
fdivrp
hlt
push
(bad)
jg
add
outs
ret
adc
cmp
cwde
aam
div
or
retf
fisttp
mov
mov
xchg
inc
sub
jge
push
or
cmp
clc
les
inc
dec
or
fcomp
cdq
ds
mov
cs
pop
dec
dec
xchg
mov
loopne
cld
sub
scas
loopne
pop
and
inc
and
and
lea
xchg
mov
aam
cmp
out
ror
jmp
push
dec
and
fwait
out
ret
imul
addr16
mov
loopne
cmp
push
dec
out
sub
hlt
cmp
or
sbb
outs
xchg
jnp
dec
mov
lahf
(bad)
hlt
jne
(bad)
repz
stc
jne
push
loop
and
fcomp
inc
call
cs
out
rcl
nop
xor
pop
and
sbb
jnp
add
bound
adc
enter
xor
pop
dec
loopne
adc
adc
mov
mov
bound
out
mov
inc
xor
dec
cmp
mov
add
jmp
outs
inc
sti
adc
adc
xor
add
dec
and
cmp
cmp
mov
push
ror
mov
pop
xor
cmps
mov
xchg
sbb
mov
mov
mov
inc
mov
push
adc
outs
mov
loop
xchg
aad
jp
mov
in
fimul
pop
and
push
cld
cli
adc
cmps
push
ret
into
xor
enter
mov
mov
pop
inc
adc
sahf
inc
int3
movs
push
push
mov
stos
ins
(bad)
popa
sub
je
imul
ror
add
dec
sahf
cdq
ret
lea
pop
dec
mov
aam
retf
add
ins
adc
add
xchg
in
imul
unpckhps
ja
mov
cmps
jb
xchg
sahf
out
repnz
bound
dec
stos
mul
jbe
movs
test
inc
cmp
mov
push
inc
and
aam
ss
out
jl
pop
test
scas
ror
pop
push
dec
mov
cld
fs
xchg
and
pushf
test
gs
clc
lock
mov
or
mov
pop
jne
cdq
xchg
mov
fsubr
jmp
movs
or
dec
jge
xor
or
(bad)
xchg
or
mov
xor
stc
std
sti
cmp
(bad)
mov
xor
push
or
popa
adc
in
fwait
in
ins
out
xchg
movs
sub
mov
outs
cmp
mov
mov
fwait
pop
adc
jae
xor
push
lds
outs
adc
nop
(bad)
dec
das
push
outs
add
out
xor
or
js
xor
jecxz
pmaddwd
out
outs
hlt
sbb
sbb
(bad)
call
jnp
arpl
inc
push
movs
xchg
mov
sub
and
or
(bad)
ds
xor
inc
or
add
inc
stos
pop
dec
and
hlt
push
mov
jo
fst
sbb
test
sbb
ds
lock
xchg
retf
int3
xor
xchg
push
jecxz
xor
add
hlt
iret
rcr
out
jns
clc
stos
popa
fcom
xchg
adc
mov
call
inc
or
pop
pop
or
cdq
fcmove
pop
dec
push
sub
repz
or
add
std
cmp
mov
push
and
fsub
adc
mov
out
or
cmp
and
into
stc
dec
fimul
mov
pop
fdivr
lahf
inc
sbb
into
inc
js
jmp
pop
inc
xor
mov
mov
fs
mov
dec
xchg
jmp
call
mov
mov
cmp
rcl
dec
test
pop
jne
cld
mov
sub
inc
mov
mov
pop
loopne
ds
and
mov
(bad)
cwde
pop
addr16
jns
xchg
mov
or
imul
jns
pop
rcr
pop
fidivr
int3
into
std
les
sti
aaa
test
mov
pushf
sbb
neg
mov
adc
and
popf
sahf
xor
fnstcw
ss
call
or
movs
aaa
aad
xchg
pop
xchg
adc
mov
enter
mov
fist
adc
add
cs
pop
es
and
imul
outs
sub
fwait
movs
mov
mov
adc
sbb
inc
dec
(bad)
cmc
and
push
or
jo
or
in
lahf
neg
jae
call
(bad)
mov
imul
xor
out
and
cmp
cmp
frstor
dec
cld
sbb
adc
and
fs
pop
push
dec
(bad)
ror
popf
daa
jno
mov
pop
ss
sub
add
out
in
push
or
sbb
push
xchg
ror
iret
mov
(bad)
aas
xor
pop
ja
pop
add
mov
aad
sub
push
mov
arpl
mov
and
sahf
(bad)
pop
push
int3
cmc
inc
fs
xchg
cs
mov
mov
push
dec
enter
es
sbb
cld
pop
xchg
push
ins
and
push
xchg
mov
enter
or
cmp
jmp
test
cmc
pop
rol
shl
jmp
imul
cmp
sub
jmp
cmps
es
pop
mov
rcl
push
inc
adc
outs
xchg
jp
sar
and
pop
push
repnz
or
out
fst
cmp
call
push
cmp
(bad)
cmps
into
pop
pushf
sbb
gs
sbb
in
adc
lds
rcl
cs
xor
xchg
dec
xchg
add
push
pop
push
mov
daa
sar
loop
pop
push
je
push
inc
push
popa
inc
in
dec
jmp
pop
mov
test
stos
dec
push
cmc
push
mov
xchg
test
sub
mov
das
mov
cli
jge
scas
cs
jno
push
push
ja
icebp
loop
xor
and
lea
mov
rol
cdq
mov
or
adc
out
jecxz
pusha
or
adc
pop
pop
cmps
dec
cmp
xlat
pop
dec
adc
cdq
mov
and
int
sbb
sub
dec
aam
rcl
lea
push
in
inc
shl
dec
mov
cmp
dec
shl
mov
loop
or
sub
cmp
ror
sub
mov
pop
(bad)
xlat
inc
jge
push
ins
cmp
cmps
and
adc
sub
xchg
push
in
or
pop
pop
enter
sub
inc
or
adc
repnz
call
test
push
stos
push
jge
(bad)
mov
dec
push
shl
pop
dec
(bad)
xor
inc
pop
xchg
sub
gs
xor
cld
and
retf
xchg
add
mov
sub
pop
mov
in
movs
sub
sub
mov
ins
stos
movs
jecxz
retf
jge
cmp
fisub
cmps
lods
sbb
call
and
cmp
mov
jmp
xor
sbb
loope
mov
sahf
mov
rol
or
add
xchg
pop
jns
out
(bad)
daa
pop
stc
xchg
jecxz
retf
hlt
push
iret
cld
sbb
xchg
ja
xchg
dec
and
and
jbe
xor
push
cmps
test
retf
cdq
pop
xchg
in
fild
mov
jle
fild
sbb
int3
sahf
imul
cmp
pop
and
stos
push
aaa
pop
test
enter
or
xor
ins
or
pop
or
or
push
sbb
mov
pop
enter
sti
xchg
shr
retf
dec
stc
xchg
push
sahf
jmp
mov
jmp
push
mov
iret
stc
lahf
add
enter
arpl
cmp
loop
inc
aaa
mov
test
in
adc
(bad)
pushf
jae
or
and
jns
adc
push
ret
dec
ins
hlt
cmp
push
adc
clc
mov
(bad)
push
in
lods
push
repnz
mov
push
dec
adc
popa
repnz
xchg
or
fiadd
mov
pop
sahf
sar
mov
xor
daa
imul
inc
(bad)
sub
sar
inc
or
sar
faddp
push
or
jmp
xor
repz
jp
xchg
mov
jecxz
sub
loop
mov
push
fwait
xchg
add
add
dec
test
in
dec
cwde
jns
and
fmul
int
lods
shl
cmp
xchg
in
sub
cld
and
(bad)
in
pop
fucomi
or
adc
xchg
mov
shr
inc
stc
xchg
lods
outs
add
push
fcom
imul
cmp
xor
fiadd
out
out
mov
cmp
ret
or
xor
and
mov
inc
push
dec
and
sub
push
and
daa
and
cld
add
sub
out
ja
or
outs
mov
or
mov
(bad)
addr16
popf
mov
xchg
cmc
(bad)
mov
ss
adc
inc
pusha
and
jbe
mov
imul
pop
loop
xchg
sbb
retf
jo
arpl
mov
jle
bnd
mov
in
xchg
adc
cld
mov
test
mov
fbstp
jge
dec
or
ds
push
in
xor
lea
jge
fcmovu
pushf
adc
mov
out
ja
mov
call
sub
inc
and
sub
mov
mov
fst
inc
ret
jns
xor
xchg
push
sbb
cmps
push
adc
push
push
mov
leave
outs
adc
repz
aas
pop
adc
call
les
xchg
push
cmps
out
pushf
xor
cmp
jmp
mov
das
jg
addr16
das
sar
fdiv
mov
push
sbb
push
cs
outs
pop
cmp
lea
leave
xor
cmps
in
xchg
inc
pop
pop
fsubp
sbb
lock
or
(bad)
jne
xchg
adc
jne
dec
cmp
or
cmp
add
mov
pop
(bad)
mov
into
xor
push
test
add
js
outs
xlat
fcmovnbe
shl
jl
push
inc
jns
ror
mov
clc
mov
mov
pop
pop
aam
inc
icebp
loop
xchg
jg
and
push
dec
scas
popf
add
js
xchg
cmp
dec
sub
and
clc
cwde
or
jecxz
sub
repnz
jae
shl
mov
fwait
inc
inc
cmp
fsub
inc
jmp
mov
je
test
pop
stc
jg
pop
pop
sbb
xchg
lea
adc
rol
xchg
inc
jl
test
imul
add
lea
or
and
popf
lds
or
sub
ficomp
and
ret
pmullw
jle
ja
pushf
leave
add
inc
repz
push
and
add
hlt
pop
adc
or
xor
pushf
mov
cmp
jecxz
cmc
or
cmps
push
jmp
xor
nop
adc
shr
popa
movs
push
jmp
dec
das
lock
popf
repnz
inc
and
test
xchg
jnp
jl
(bad)
stc
pop
(bad)
out
js
add
(bad)
cmp
ds
icebp
jl
inc
les
cli
inc
add
sub
mov
pop
imul
dec
mov
pop
jmp
add
sar
mov
inc
fldenv
xor
scas
lods
sti
xchg
movs
dec
adc
mov
adc
js
fs
scas
push
rol
mov
out
adc
sbb
pop
sub
repnz
cwde
sbb
inc
repz
jp
pop
mov
or
xchg
repz
fcom
push
xor
or
popa
pop
mov
out
(bad)
shr
out
and
fmul
mov
dec
or
not
xor
or
nop
iret
mov
outs
lahf
loope
jmp
pop
mov
add
or
std
mov
enter
pop
xchg
outs
into
nop
adc
mov
rcl
out
(bad)
in
xchg
xchg
cli
sar
add
call
xor
loop
fdiv
loopne
cmp
sub
jb
inc
int
retf
xor
js
mov
jnp
mov
or
xchg
jae
mov
lock
hlt
push
aas
ins
sbb
sbb
movs
adc
leave
movs
sub
inc
cmp
adc
jl
in
dec
stc
js
dec
dec
mov
test
cdq
adc
fwait
mov
popa
aam
rcl
pop
push
lds
pusha
(bad)
adc
bound
jmp
jns
pop
hlt
fmul
dec
imul
adc
mov
xchg
test
push
ss
jns
adc
mov
dec
inc
jae
movs
icebp
jg
xor
outs
pop
or
add
data16
(bad)
push
jge
cdq
xchg
pop
xchg
inc
pop
mov
fdivr
je
xor
mov
out
into
xchg
mov
jl
out
xlat
test
les
and
cmc
mov
and
rcl
lea
push
stos
xchg
aad
shl
call
add
int3
and
dec
das
or
xor
mov
ds
dec
or
(bad)
in
rcr
inc
js
xchg
loopne
into
ficomp
test
(bad)
add
scas
je
inc
mov
shl
pop
popa
mov
mov
mov
mov
push
pop
sub
sahf
dec
pop
pop
adc
xchg
xchg
cmps
xchg
xor
mov
or
mov
shl
imul
mov
shl
clc
sub
test
push
test
std
ret
fs
push
mov
adc
sbb
mov
or
xor
leave
mov
aad
stc
jnp
cld
not
cmp
call
gs
cmp
ss
int3
sub
inc
add
inc
mov
add
xchg
adc
sbb
and
call
mov
xchg
cmp
and
mov
loopne
jns
and
xadd
int
sbb
push
jns
and
stos
cli
jle
dec
sahf
out
sub
das
loopne
pop
out
ds
jo
lock
dec
leave
xchg
jae
aam
and
cmp
dec
jle
scas
mov
repnz
fs
sbb
jno
rsqrtps
xor
sub
in
into
cld
mov
ror
lods
(bad)
mov
inc
(bad)
pushf
mov
xchg
call
popf
xor
sub
dec
cld
sub
xchg
(bad)
xchg
in
in
or
std
sub
xchg
mov
pop
(bad)
sahf
(bad)
repz
push
hlt
cmp
xchg
mov
mov
cmp
pop
and
and
and
xchg
jae
inc
leave
push
fldenv
in
std
pop
xchg
jnp
test
xor
frstor
mov
adc
pop
dec
sub
sub
sbb
cs
jge
pop
adc
xchg
xchg
jae
and
mov
ror
shr
lahf
scas
aaa
jae
and
dec
cmps
out
mov
add
in
push
in
into
and
mov
inc
push
fisttp
arpl
xchg
jp
scas
ror
add
movs
loop
ja
cld
mov
sbb
sub
mov
inc
pop
mov
retf
jp
mov
push
xchg
mov
clc
cmp
scas
add
repnz
mov
sbb
sbb
ficomp
cmc
es
into
cld
rcr
dec
lea
outs
cmps
inc
popf
lahf
lea
mov
ja
movs
mov
mov
or
scas
iret
jns
xor
jns
out
repnz
test
das
mov
test
cmp
(bad)
inc
(bad)
ja
scas
mov
out
dec
adc
retf
push
cmp
or
aas
cmc
and
fist
xchg
pop
not
jne
cmp
fcmovu
push
enter
enter
icebp
add
xchg
mov
lahf
mov
clc
(bad)
retf
or
out
cmp
mov
pop
test
inc
push
in
push
push
mov
dec
fld
ret
pop
or
not
out
stc
inc
sti
mov
mov
xor
sub
aad
lods
bsf
test
scas
cmc
adc
imul
dec
xchg
movs
mov
and
sub
push
mov
mov
cli
jl
test
test
jmp
sub
mov
pop
inc
push
inc
dec
fisub
stos
mov
add
in
stos
xlat
inc
sbb
jl
jp
and
sbb
pop
cld
hlt
mov
inc
lods
xor
and
gs
jae
ss
addr16
pop
dec
adc
repz
in
movs
mov
and
(bad)
inc
push
mov
xchg
dec
or
xchg
or
and
push
rcr
sbb
add
jg
mov
je
sbb
ret
fist
dec
in
bound
pop
cld
je
and
scas
dec
adc
std
rcl
add
cld
inc
adc
daa
jns
mov
mov
jb
mov
data16
mov
cmp
inc
fmul
out
popf
and
ret
hlt
jmp
pushf
add
lds
jmp
sbb
cmps
popf
imul
ficom
jl
outs
mov
inc
rol
xor
aaa
ins
push
or
loop
pusha
movs
mov
fsubr
mov
pop
ret
loop
pop
push
(bad)
mov
(bad)
(bad)
les
call
inc
push
jns
ins
xor
dec
retf
xchg
jmp
xchg
in
scas
or
call
cwde
and
xchg
das
or
ins
inc
add
mov
push
and
out
cdq
jb
mov
mul
movs
or
ret
ret
xchg
or
(bad)
sbb
jecxz
arpl
in
sub
movs
jb
mov
shl
mov
(bad)
mov
repnz
iret
or
gs
in
mov
pop
jo
dec
jno
jle
inc
dec
lea
xchg
movs
mov
sbb
or
push
fsub
cmp
mov
mov
hlt
push
mov
adc
movs
fsubr
sbb
or
inc
inc
push
xchg
inc
pop
dec
aaa
dec
ins
inc
cmp
(bad)
out
pop
and
or
xor
xchg
pop
shl
sub
fs
and
addr16
popa
hlt
jl
or
jcxz
dec
push
add
mov
and
jno
sub
or
inc
shl
outs
dec
fbld
dec
xchg
test
loopne
ja
cmp
in
pop
pop
add
verw
out
cmp
jns
adc
or
push
jmp
fidiv
mov
ss
ins
jo
or
stos
xor
nop
and
pop
cmp
and
(bad)
cmp
call
cmp
dec
aaa
inc
xchg
push
repnz
xchg
pop
mov
inc
cmp
sti
into
into
pop
mov
pop
adc
ret
icebp
push
mov
(bad)
jle
inc
jl
jmp
sub
jp
fstp
retf
or
xchg
cmp
add
out
ss
ret
inc
ret
mov
add
test
int3
push
xor
xchg
jne
nop
pop
ret
popf
loopne
push
pushf
stc
mov
aas
lds
mov
jl
imul
retf
mov
pop
fild
xor
mov
(bad)
mov
outs
jo
or
sbb
fcomp
enter
jp
cs
loop
pop
xchg
das
sbb
xor
xchg
iret
mov
out
ss
dec
mov
sbb
dec
retf
sub
movs
mov
outs
jbe
jne
mov
rcr
sub
inc
hlt
div
sbb
mov
retf
outs
mov
xchg
or
push
fchs
cdq
mov
mov
popf
stc
mov
je
pop
pop
ja
(bad)
stc
rcl
xchg
mov
push
push
test
xor
pop
mov
pop
retf
popf
enter
adc
std
xor
sti
rcl
or
push
push
dec
aas
fstp
out
icebp
inc
in
add
inc
inc
mov
test
jo
mov
add
mov
cli
lds
rcr
les
shl
jb
mov
stc
leave
aam
cdq
inc
iret
test
mov
xchg
aam
sub
imul
and
and
jecxz
mov
dec
mov
ret
int
or
scas
and
sbb
sbb
mov
das
mov
xlat
je
div
mov
dec
or
or
sbb
jb
popa
dec
sbb
fstp
cmp
movs
retf
push
cmp
sub
add
cmp
sub
in
in
aas
mov
dec
das
pop
xchg
mov
lahf
stos
loope
dec
movs
cmps
lods
into
ss
xlat
push
int3
mov
iret
push
dec
rcr
es
in
ins
mov
arpl
or
cmps
pop
out
stc
popf
mov
cmps
push
cmp
push
push
add
xor
and
mul
(bad)
inc
aaa
(bad)
movs
sti
jbe
lahf
scas
push
mov
rcr
jmp
xchg
jo
cld
lods
mov
das
jg
stos
jge
jns
adc
sub
xchg
fnstenv
test
mov
outs
test
cmp
nop
push
popa
xchg
mov
int
mov
shr
fild
retf
lods
aaa
dec
icebp
add
mov
cmp
das
and
movs
and
mov
outs
mov
repz
dec
pop
fdivr
pop
jbe
addr16
scas
cmp
jmp
out
xor
xchg
push
push
sbb
out
push
(bad)
(bad)
mov
into
mov
push
push
xchg
xor
fisubr
fsubr
pop
pop
dec
into
xchg
mov
ror
ss
xchg
aaa
inc
mov
adc
add
dec
mov
cwde
bound
loop
jp
outs
cmp
pushf
push
in
jbe
cmps
cld
dec
jp
test
movs
bound
sub
ret
outs
jns
mul
iret
or
mov
outs
jp
(bad)
mov
mov
int
arpl
fisttp
mov
into
mov
and
adc
cmp
cmps
jns
nop
leave
loopne
inc
loope
cs
xchg
data16
push
loop
mov
das
jne
fucomp
mov
(bad)
jmp
mov
sub
pop
or
retf
push
call
jmp
push
scas
(bad)
push
xchg
aad
xchg
xor
pusha
pop
mov
sub
ss
add
mov
add
adc
js
mov
arpl
sbb
int
jmp
inc
xor
in
push
mov
xor
mov
(bad)
cmp
mov
and
iret
mov
xor
scas
jnp
lods
jp
(bad)
in
sub
or
inc
sub
or
shr
mov
push
not
sahf
inc
lock
fidiv
xcrypt-ofb
cmps
imul
add
scas
pop
cwde
mov
pusha
inc
rcr
sub
test
dec
iret
sahf
repz
jp
jg
mov
pop
cmp
pop
shl
sub
daa
xchg
mov
pop
aad
jno
push
xchg
je
pop
sub
das
pop
ja
out
dec
movs
sbb
imul
push
adc
in
pop
popa
gs
fs
es
std
pop
fnstcw
pop
push
jne
push
ins
xor
xor
test
je
sbb
call
lods
cmp
add
cmps
test
push
shr
call
test
cli
add
mov
push
dec
adc
inc
fiadd
hlt
out
jnp
ret
mov
mov
data16
inc
adc
imul
call
dec
(bad)
lea
push
xchg
and
jle
fld
enter
aam
and
out
cmp
jge
in
add
icebp
(bad)
cmps
call
jg
lea
xchg
and
shr
mov
or
mov
mov
or
mov
fwait
push
popf
arpl
pop
dec
jge
ret
fs
mov
or
repz
fstp
adc
stc
int3
jne
repnz
in
pop
jmp
fdiv
sub
pop
mov
cmp
in
sti
lods
iret
std
rcl
add
jnp
out
cmp
clc
sbb
rcr
pop
jge
dec
or
jno
and
jb
cmp
popf
popa
push
stc
mov
or
test
rcr
sub
add
inc
lock
fild
outs
mov
lock
lock
adc
mov
sub
or
imul
pop
mul
sbb
lods
mov
cmp
dec
lods
adc
jne
ins
cmp
leave
movs
shr
scas
into
jb
neg
or
test
test
jnp
test
movs
jbe
xlat
sub
pop
jmp
call
mul
jmp
cwde
mov
and
sti
sbb
jle
leave
fcmovb
out
retf
(bad)
add
or
pop
jp
cmp
mov
mov
rcr
sub
push
mov
mov
sub
pop
(bad)
xchg
or
xchg
mov
pop
inc
jp
lds
mov
pop
cs
xchg
setle
mov
into
jl
jge
or
sub
das
cmp
sbb
push
mov
xchg
fsub
fmul
aam
clc
std
hlt
or
push
jae
xchg
inc
test
aas
loop
xchg
or
call
xor
cmp
stos
arpl
dec
xchg
sub
cwde
hlt
push
push
dec
(bad)
pop
ins
and
sbb
and
pushf
or
imul
xchg
daa
or
mov
movs
das
stc
arpl
and
fs
sub
adc
fsubr
ret
fs
mov
inc
ret
shl
jp
je
cwde
push
stc
pop
addr16
lahf
mov
into
std
or
pop
mov
mov
and
cmp
stc
loopne
dec
(bad)
xchg
inc
adc
test
rcl
popa
mov
cdq
nop
shl
stc
xchg
pusha
sbb
movs
mov
ins
cmc
stos
mov
rol
fisubr
xlat
mov
rcr
dec
cmps
out
mov
ficom
sbb
(bad)
pop
aas
pop
sub
add
adc
inc
pop
jge
xchg
add
xor
test
adc
retf
and
add
xchg
jae
xor
add
pushf
inc
sbb
xcrypt-ofb
cmps
sub
jmp
cs
scas
sub
lea
(bad)
pop
xor
cmp
adc
cmp
std
xchg
xchg
mov
neg
mov
xchg
or
mov
lea
rol
test
mov
push
retf
xchg
and
cmp
pop
cwde
enter
std
out
dec
js
push
das
mov
imul
sbb
jae
rcr
test
adc
nop
jge
pop
mov
mov
lock
jmp
ds
xor
out
dec
pop
jne
sbb
leave
hlt
or
dec
nop
ret
sbb
pop
js
xor
int3
js
stos
jae
std
rcl
xor
inc
in
retf
cld
sti
out
(bad)
and
ficom
adc
(bad)
shr
mov
pop
pop
add
(bad)
ins
in
popf
pop
iret
rcr
inc
inc
pop
and
(bad)
sub
pusha
mov
pop
add
cmps
(bad)
or
repz
iret
es
push
adc
or
test
in
jg
out
push
push
stos
in
xor
repnz
push
pop
add
inc
sub
push
sbb
xchg
movs
test
stos
cmp
xchg
xchg
fild
stos
jge
mov
scas
imul
push
cld
ja
push
stos
or
out
arpl
cmp
dec
fwait
int
(bad)
xor
and
jae
and
scas
lea
sar
jo
sub
bound
inc
jp
xchg
xor
(bad)
xor
mov
clc
dec
pop
xor
fwait
(bad)
and
mov
mov
sub
xor
cdq
push
ins
pop
das
xchg
fsubr
adc
retf
mov
(bad)
jo
inc
pop
and
mov
cmc
ret
aad
rol
les
push
fsubr
out
sbb
icebp
pop
jle
xchg
jg
mov
push
(bad)
sub
add
mov
xchg
mov
(bad)
fstp
mov
fbstp
adc
dec
cmp
data16
mov
and
rol
and
je
(bad)
mov
sub
cli
dec
mov
mov
jecxz
mov
bound
adc
xor
arpl
push
adc
mov
inc
inc
pop
call
sbb
xor
out
mov
div
int
test
inc
mov
sbb
(bad)
icebp
add
jge
jmp
addr16
cmc
push
adc
cmp
adc
jb
pop
and
and
inc
loopne
inc
sub
xchg
sti
sbb
cmps
xchg
mov
sahf
daa
cmps
cmp
push
inc
cmp
retf
or
or
push
jne
xor
add
inc
(bad)
sahf
xor
jmp
aad
push
stc
sti
xor
cmp
dec
inc
pop
scas
sub
adc
add
jp
mov
push
popf
xchg
push
xor
inc
push
lahf
retf
mov
(bad)
cli
pushf
xor
adc
mov
xchg
fs
and
retf
sbb
cdq
inc
jno
jecxz
pop
jb
leave
jmp
outs
mov
popa
fsub
ficom
lahf
cmp
nop
inc
pop
mov
hlt
lea
arpl
(bad)
mov
mov
loop
int
xor
dec
cmp
lea
in
adc
in
push
xor
and
push
pop
push
xchg
movs
pop
imul
cmp
shl
je
mov
mov
retf
ins
mov
cmps
xchg
push
call
jge
repz
es
aas
shl
or
cmps
pop
push
or
in
lods
sbb
xchg
ja
push
(bad)
and
mov
jecxz
repnz
stc
jle
cli
and
xchg
in
inc
test
jecxz
jne
or
ret
std
test
fwait
jae
and
jno
dec
adc
aad
popf
popa
push
mov
mov
cs
ror
mov
jae
stos
push
mov
retf
add
mov
add
movs
and
inc
pop
push
pop
icebp
bnd
aad
add
adc
xor
sub
jp
fisub
popa
mov
and
ds
retf
(bad)
sti
and
mov
dec
push
(bad)
je
les
jmp
cmp
punpckldq
push
dec
cmp
fiadd
adc
mov
pop
mov
mov
out
pop
ror
inc
imul
retf
cmp
pop
test
jp
adc
je
mov
repz
xchg
or
sbb
and
repz
cmp
test
pop
mov
bnd
psubsb
add
xor
cmp
mov
mov
push
movs
or
or
ja
cld
inc
popf
and
and
jns
add
jmp
mov
test
rcr
xor
mov
mov
shr
sub
sbb
std
mov
dec
sbb
pusha
fwait
aas
push
xlat
jae
mov
leave
movs
adc
pop
pop
imul
sti
pusha
jle
cli
shl
popf
mov
std
inc
xchg
jl
xor
int
add
stos
fs
(bad)
in
mov
adc
adc
daa
jmp
dec
imul
mov
daa
repnz
jecxz
push
xor
int
jge
sbb
mov
mov
jl
(bad)
cmp
leave
dec
aad
cwde
mov
add
sbb
mov
bound
xlat
and
pop
lock
sub
mov
lods
test
jge
lods
sbb
test
or
bnd
cmp
(bad)
cmp
mov
jae
call
jo
mov
push
jle
xchg
in
cs
out
or
fadd
dec
test
add
sbb
cmp
sbb
std
shl
cmps
jae
sbb
repz
inc
xchg
and
sbb
jns
mov
xchg
cwde
(bad)
cmp
add
retf
movs
mov
or
iret
jns
xchg
sar
in
jle
bound
or
xchg
sub
pop
mov
mov
mov
adc
mov
mov
iret
cmp
inc
xor
test
and
test
push
imul
stos
and
mov
jmp
out
adc
xor
mov
rcl
and
clc
(bad)
jb
mov
scas
and
push
push
cld
and
cmp
jns
and
loop
ins
sub
(bad)
mov
inc
cmp
fdiv
or
arpl
add
and
ss
cmc
jne
ins
mov
movs
pop
pop
cli
ror
ret
jle
xor
mov
daa
pop
into
lea
and
cmps
jge
(bad)
sub
sbb
sub
mov
and
or
icebp
jno
push
cmp
cmp
test
push
mov
leave
mov
rcl
test
(bad)
cmps
and
mov
sub
cmp
push
movs
into
call
ret
dec
or
or
dec
int3
das
xchg
cdq
cld
pop
mov
daa
shr
inc
dec
xchg
cmps
push
sahf
fcmovne
rol
mov
push
mov
cmp
jecxz
cmc
add
push
inc
loop
and
cwde
out
jno
jmp
int3
add
enter
ret
(bad)
je
jns
cmp
inc
aam
jg
xor
sbb
into
mov
pushf
dec
sbb
lods
mul
ins
imul
sahf
xchg
inc
std
pop
add
sub
or
mov
or
retf
jb
fadd
xor
test
jge
inc
sub
fwait
xchg
es
mov
or
and
sub
aad
add
jge
cmovnp
adc
gs
adc
inc
sahf
mov
(bad)
fisttp
push
outs
aas
push
js
sbb
out
jns
in
fs
pop
jmp
mov
or
int3
push
mov
mov
shl
fnstenv
cdq
inc
inc
lea
xor
ins
repz
push
jp
sbb
rcr
xor
or
sbb
jmp
adc
cdq
dec
push
xor
aam
add
mov
mov
adc
out
shl
xor
or
int3
pop
dec
pop
inc
xor
fisttp
or
ficomp
mov
enter
and
pusha
push
retf
mov
sbb
pop
mov
add
mov
(bad)
sub
pusha
push
jae
aaa
add
jl
adc
(bad)
call
dec
aam
fistp
pop
xor
jo
xor
shl
(bad)
rcr
stos
mov
out
sahf
push
xor
ret
adc
jmp
test
aad
pop
int
mov
fisub
ja
sbb
imul
mul
(bad)
push
and
or
mov
rcr
xlat
mov
stc
jp
imul
leave
mov
adc
or
mov
push
mov
mov
test
xor
mov
std
hlt
sub
pop
leave
pop
inc
aad
cmc
push
ja
hlt
outs
push
xchg
xlat
pushf
and
neg
call
mov
lahf
out
movs
cmps
rcr
out
ss
xchg
fadd
jbe
sbb
sub
xor
(bad)
out
jne
adc
cdq
mov
pushf
pop
pop
or
les
jp
out
test
and
sbb
loop
pop
sbb
popf
out
sar
test
ret
ds
ret
push
cld
pop
gs
mov
cmp
pushf
adc
bound
movs
sub
mov
or
pop
pop
int
(bad)
scas
push
and
or
nop
pusha
sub
ret
push
test
ret
push
push
push
jg
dec
add
mov
lods
hlt
test
mov
in
push
jbe
cmp
sub
rol
sbb
cmp
stos
stos
lods
dec
out
aas
push
dec
(bad)
fdiv
retf
std
test
mov
and
inc
out
fsub
cmps
sub
push
xlat
mov
enter
jg
out
jbe
scas
jmp
mov
lahf
xchg
xlat
dec
and
out
or
repnz
push
sti
call
xor
adc
mov
mov
inc
jae
cmp
jbe
lock
data16
sub
add
loop
push
mov
sbb
cs
adc
xchg
xchg
scas
cld
jmp
movs
adc
mov
or
cli
test
out
js
mov
jnp
fcom
aad
out
jo
mov
out
imul
ins
sahf
mov
mov
int
sbb
xor
test
jmp
ds
nop
push
and
mov
inc
mov
inc
aas
cmp
push
ret
mov
push
in
xchg
pop
jns
nop
mov
push
add
test
mov
movs
cmp
imul
clc
loop
pop
and
jl
test
mov
dec
push
xlat
cmp
shl
repnz
loopne
out
add
mov
or
xor
inc
jo
or
int
inc
movs
push
pushf
std
jo
mov
daa
or
xchg
or
sbb
in
dec
jmp
pop
sbb
xor
std
icebp
jl
dec
imul
test
(bad)
mov
ret
add
iret
loope
(bad)
jno
fdivr
dec
test
je
popa
sub
jp
cmc
mov
sar
xchg
mov
sahf
xor
sub
inc
sub
lea
retf
fiadd
dec
mov
leave
mov
adc
ds
mov
cmp
lds
out
jecxz
out
cwde
add
mov
aaa
xor
lds
aaa
test
out
aam
inc
xor
inc
retf
sar
ret
ds
fild
int3
mov
add
jg
in
sub
fdivr
cs
xchg
test
cmp
mov
fbstp
xor
leave
dec
ins
cmp
xor
data16
pushw
pusha
sbb
aas
add
cmp
fist
mov
push
mov
xchg
adc
sbb
xchg
bound
inc
mov
adc
lds
lods
push
cmps
mov
arpl
data16
call
ds
pop
or
push
dec
cmp
jbe
fiadd
cmp
ins
jae
fidiv
mov
imul
inc
fisttp
dec
(bad)
out
xor
lds
pop
mov
mov
test
or
sub
jecxz
pop
xor
mov
dec
mov
pop
xchg
jb
ret
add
out
fisttp
xchg
cs
mov
jl
sahf
loopne
jl
mov
test
std
in
xor
lea
cld
pop
cmps
popa
aas
arpl
lock
stos
pop
and
pushf
dec
rcl
and
xchg
and
call
(bad)
add
pop
lods
cmp
dec
lods
sub
jl
jae
loop
cs
ret
and
push
fdiv
xor
test
mov
add
int
push
jae
adc
pop
hlt
(bad)
xlat
jo
call
jecxz
cmp
adc
xchg
pop
enter
inc
lahf
adc
sti
shl
iret
mov
pavgw
fxch
pop
jne
xchg
pop
pop
mov
pop
mov
dec
cmps
shr
xchg
xlat
pop
sbb
out
sbb
cdq
push
adc
pop
push
or
push
test
sub
sub
push
outs
sub
fistp
sbb
outs
push
lahf
mov
push
mov
dec
xor
push
lds
iret
and
xchg
lahf
and
xor
stos
adc
scas
daa
vmload
dec
out
aaa
pop
stos
inc
test
cmp
add
dec
or
jno
and
xor
fild
cmp
gs
xchg
in
in
adc
cmc
fadd
pop
sahf
or
leave
inc
ins
cwde
dec
pop
call
leave
mov
ret
jno
xor
lea
jb
repz
dec
pop
xchg
repnz
in
dec
jbe
adc
sti
xchg
test
mov
jge
repz
and
ins
hlt
(bad)
cwde
dec
daa
outs
loopne
inc
mov
(bad)
(bad)
aas
inc
addr16
popa
pop
mov
push
hlt
xchg
mov
mov
rcr
and
test
cmp
shr
mov
mov
add
adc
push
jnp
es
add
mov
fsubr
xlat
cmp
inc
rcl
sbb
xchg
add
jnp
addr16
mov
sub
ret
in
sub
xor
xbegin
leave
fist
pop
xor
pushf
add
xchg
sub
lahf
(bad)
cmp
loopne
jae
mul
push
scas
in
inc
aaa
int3
cs
fst
fwait
pop
mov
clc
(bad)
fild
cmps
push
ret
push
push
push
inc
pusha
pushf
pop
pushf
(bad)
outs
xor
and
jmp
mov
scas
or
jo
mov
jmp
movs
pop
jmp
dec
loopne
in
push
aad
ins
xchg
inc
retf
test
js
xchg
sti
mov
test
or
inc
inc
scas
inc
imul
xor
popf
cmp
dec
push
cli
imul
in
and
xchg
jne
cmps
push
mov
xor
xor
sbb
push
loopne
bound
jmp
jmp
mov
fcomp
neg
enter
mov
mov
ret
mov
push
sbb
xchg
dec
jl
cmps
jmp
lahf
les
jl
and
mov
push
outs
lahf
mov
das
mov
or
adc
leave
pop
inc
adc
jo
push
and
pushf
nop
push
sbb
jno
dec
adc
aam
fidivr
stos
sar
call
or
or
in
mul
mov
icebp
imul
and
icebp
mov
(bad)
loop
push
addr16
sub
pop
dec
retf
sub
cli
mov
add
les
push
enter
push
popa
adc
ret
enter
jo
rcl
jae
add
cmp
add
adc
push
fcmovnbe
iret
retf
sbb
push
ret
cmp
(bad)
into
dec
iret
je
jbe
or
dec
mov
pop
jbe
sbb
cmp
sahf
xor
clc
and
push
push
mov
call
into
sahf
or
repnz
fld
cmps
push
std
jmp
mov
jns
mov
rcl
fld
xor
cmp
bound
cmps
pop
ss
xchg
mov
add
ret
sbb
clc
push
mov
data16
jmp
aam
add
fst
lock
daa
mov
inc
mov
pop
push
cmp
dec
ss
sbb
push
jmp
pop
and
mov
inc
add
push
mov
mov
mov
out
sar
in
xchg
sbb
ror
push
loopne
pop
aam
mov
jp
iret
jp
(bad)
shl
dec
(bad)
into
inc
mov
dec
xchg
xchg
jo
mov
push
test
pop
test
enter
xor
mov
and
or
adc
mov
out
sbb
dec
rcl
push
stos
rcr
jle
fs
inc
leave
cld
xchg
push
(bad)
bound
fnstenv
mov
add
cmp
popa
push
sub
mov
add
cmp
cmp
jge
dec
or
pusha
push
shr
out
sub
and
cli
or
pop
jne
stos
mov
outs
shl
xchg
mov
fwait
cmp
les
xchg
loope
add
jle
in
xor
cmp
mov
mov
ror
dec
mov
in
dec
call
mov
pop
cdq
cdq
data16
add
push
or
push
in
mov
popf
add
mov
out
outs
int3
je
lds
jne
inc
call
sub
rol
xchg
sbb
xchg
imul
push
cmp
xchg
add
call
push
loop
jo
xchg
mov
out
call
fs
mov
jb
xchg
push
mov
cmps
ror
shl
mov
aaa
arpl
push
jnp
cmps
or
popa
mov
in
mov
stos
and
out
or
es
imul
cmp
stc
imul
push
sub
pop
pop
push
mov
mov
(bad)
xor
test
imul
adc
and
call
sub
call
cli
sbb
cs
dec
push
xchg
scas
or
lods
rol
pop
jmp
call
cdq
into
push
sti
test
(bad)
aad
sbb
cmp
xchg
cli
add
shr
or
sbb
jns
(bad)
sub
push
sar
sub
mov
fwait
pop
popa
lahf
dec
dec
(bad)
xchg
lods
ins
sar
jl
sbb
mov
cmp
lahf
pop
test
mov
stos
mov
cmc
add
das
(bad)
sbb
call
addr16
arpl
movs
call
mov
pop
loop
push
ret
fcmove
ins
sub
mov
mov
sbb
mov
xchg
and
aaa
(bad)
cli
out
xor
fcmovnu
xchg
icebp
pop
into
dec
mov
test
xchg
xchg
lods
jnp
push
aam
call
xlat
enter
xor
(bad)
(bad)
cld
mov
cld
cmc
dec
cwde
sbb
push
lds
dec
ins
scas
loope
adc
cwde
jnp
sbb
iret
mov
lods
std
cmp
repnz
adc
jle
data16
xchg
push
xchg
xor
xchg
cmp
add
mov
sub
pop
or
cmp
shl
cld
push
call
test
mov
push
or
sti
mov
adc
pushf
pop
mov
enter
cmps
jp
or
cs
push
push
test
cmp
jmp
out
or
cmp
loope
cli
mov
es
mov
inc
mov
push
jmp
mov
popf
data16
push
aas
push
outs
and
adc
mov
imul
test
or
shl
aas
mov
jmp
mov
ja
cmp
jo
mov
cmp
das
scas
push
cdq
mov
int
inc
inc
fisubr
lods
fs
fsubr
or
xchg
sar
jb
sbb
in
retf
pop
push
xor
add
push
js
dec
sti
mov
xchg
adc
mov
add
imul
inc
dec
sub
fstp
imul
fst
sti
mov
inc
pop
pop
rcl
mov
(bad)
stos
pop
call
stc
ret
mov
icebp
push
imul
cmp
bswap
sub
inc
jmp
lods
ror
xor
ret
xchg
les
jno
xor
(bad)
test
(bad)
push
je
inc
test
jmp
(bad)
xor
xor
xchg
push
mov
adc
stc
retf
or
popa
sbb
add
arpl
fnstcw
xor
inc
ss
sar
retf
fstp
repnz
retf
shl
or
add
test
xchg
mov
(bad)
jo
push
or
and
inc
mov
pop
xor
sbb
adc
stos
fdiv
mov
push
xchg
bound
xor
rcl
das
adc
nop
jbe
jle
adc
lods
loop
nop
test
aaa
xchg
test
pop
or
mov
push
in
(bad)
sbb
(bad)
sub
movs
fst
div
fwait
pop
call
jb
jmp
add
cmp
ins
ss
ret
js
inc
icebp
rol
lea
bound
pushf
out
inc
jmp
jg
or
les
les
jbe
adc
ins
loop
sbb
push
ins
arpl
(bad)
std
mov
add
add
ret
adc
(bad)
sub
adc
pop
mov
xchg
and
rol
fadd
int
into
int
or
mul
aad
out
loope
push
repnz
jo
sbb
mov
sub
dec
fs
rol
lahf
adc
jo
push
push
repz
dec
scas
mov
lods
daa
jne
pop
pop
mov
loope
psubb
push
sub
test
fbstp
pop
in
sbb
cdq
sbb
mov
cmp
cmp
push
mov
xchg
test
in
scas
jns
jno
das
add
dec
arpl
loop
xchg
add
cmp
cwde
adc
mov
sar
mov
mov
sub
(bad)
(bad)
enter
pop
cmp
xchg
cld
sbb
add
inc
push
das
pop
mov
(bad)
mov
test
jbe
sahf
mov
mov
cwde
or
fwait
cld
aas
mov
imul
push
pop
ins
push
dec
in
pop
xor
stc
push
js
outs
push
ss
(bad)
push
outs
mov
iret
push
add
fsub
adc
pop
fst
sbb
push
ror
jg
movs
enter
repz
mov
dec
jb
adc
xchg
mov
jno
test
in
pop
int3
fsubr
test
xchg
mov
sub
cmps
jl
inc
mov
xor
(bad)
gs
mov
mov
call
mov
fs
imul
mov
sahf
inc
(bad)
ss
sbb
imul
xchg
int
ret
pop
or
push
add
es
retf
and
inc
test
mul
pop
mov
movs
cmp
push
pop
mov
xchg
pop
outs
xchg
push
cld
sub
pop
mov
cmp
add
imul
into
or
ret
mov
mov
push
loope
adc
push
mov
nop
icebp
movs
lock
div
jl
inc
test
sub
jg
(bad)
mov
in
pop
movs
inc
fwait
loope
push
lock
call
pop
xchg
sbb
imul
inc
push
xchg
into
into
xchg
sti
ja
xchg
dec
sbb
pop
fiadd
std
cmps
sub
push
cmp
pushf
xchg
fldcw
mov
imul
in
xor
dec
dec
test
out
add
pop
fbld
(bad)
ds
sub
sub
inc
fsub
pop
mov
xchg
adc
inc
je
inc
int
icebp
or
cmps
ss
xor
add
mov
in
push
sahf
call
test
dec
jo
bound
inc
or
inc
pusha
mov
(bad)
jae
inc
adc
dec
mov
dec
and
and
leave
js
fist
ds
cwde
xchg
pop
ja
jge
sub
cwde
jae
mov
or
ins
xchg
sub
int
sbb
ret
popw
push
fs
fsub
xor
jg
lods
push
rcr
push
in
loop
jne
sub
dec
xor
inc
xor
sub
xor
mov
sub
push
into
sub
push
imul
or
nop
xchg
enter
cmp
rcr
push
jns
inc
dec
mov
ds
xor
add
repz
mov
pop
cs
mov
stos
cmp
(bad)
push
and
mov
or
pop
ins
data16
fimul
sar
pmaddwd
push
mov
jle
pop
popf
push
aaa
mov
das
xlat
sub
or
xor
pop
lds
push
jg
jge
inc
xchg
or
out
repz
xor
or
cmps
or
mov
fld
jo
pop
aad
sahf
xlat
push
ja
sbb
xchg
mov
lds
or
imul
push
out
jns
fnstenvw
mov
cmps
data16
clc
push
ins
retf
movs
jno
jl
jb
push
pop
scas
pop
(bad)
jmp
xchg
jmp
ins
bswap
mov
movs
aas
jbe
mov
cmc
push
adc
cmps
pop
out
xlat
sbb
jne
xor
push
movs
fs
sbb
(bad)
loopne
mov
ja
xlat
pop
popa
xchg
(bad)
sti
sbb
popa
sub
movs
jbe
mov
rcr
ret
xor
clc
cs
stos
fs
pop
sub
mov
push
aas
out
push
cmps
xchg
sbb
jne
ins
pop
fwait
mov
fisubr
int
jae
mov
ret
gs
adc
dec
cmps
shr
xchg
and
stos
mov
jecxz
cmp
imul
jmp
out
std
jno
neg
dec
loope
jl
mov
std
les
push
test
sbb
out
cmp
gs
or
push
sbb
xchg
loop
or
lods
dec
sub
ret
cmps
push
fdiv
js
es
das
stc
lock
jns
(bad)
pop
repnz
sub
jne
xchg
(bad)
out
call
xchg
sbb
inc
or
sbb
mov
das
sar
fcmove
xchg
xchg
fcom
pop
inc
jp
jle
cwde
jbe
lods
or
retf
pop
loope
mov
jg
lock
js
sbb
retf
and
pop
aas
pop
push
cld
inc
push
and
jne
and
fimul
add
mov
sti
loope
or
mov
shl
test
pop
jnp
shr
sbb
jbe
out
nop
add
call
push
xchg
out
push
or
push
icebp
in
stos
jno
je
dec
add
loopne
jmp
pop
cmp
mov
push
xor
jmp
sub
rcr
jmp
repnz
stos
mov
(bad)
mov
cs
fmul
dec
pop
xchg
pop
jmp
adc
or
add
stos
test
jmp
out
movs
test
pop
(bad)
cmp
mov
sbb
test
ss
inc
and
adc
test
aad
cs
xchg
mov
or
or
xor
call
test
mov
popa
mov
sub
push
pop
stc
xlat
sub
aam
ror
int3
adc
xchg
aas
xor
popf
pop
cwde
shr
jmp
push
sbb
scas
jne
or
fnstenv
and
mov
fld
in
daa
test
push
retf
(bad)
outs
sbb
mov
mov
ror
xor
xchg
xchg
push
pop
pop
lock
xchg
aaa
imul
stc
test
mov
inc
dec
or
mov
push
pop
push
jg
xchg
ja
push
je
sbb
push
sub
ins
stos
gs
dec
es
and
mov
arpl
addr16
icebp
mov
mov
cld
add
cdq
cdq
add
jo
mov
push
loope
icebp
lahf
das
pop
xchg
dec
xchg
out
scas
xor
xchg
xchg
inc
dec
mov
(bad)
mov
mov
add
sbb
popa
lea
test
pop
jns
inc
hlt
pop
cdq
scas
je
adc
sbb
sub
sub
shl
mov
in
mov
das
ins
mov
xor
jbe
(bad)
and
jb
add
lds
std
mov
or
or
adc
sar
jns
mov
inc
lods
mov
out
ins
mov
pop
movs
test
sub
int
jge
jns
dec
outs
jp
or
mov
mov
dec
sub
lahf
imul
arpl
lods
pop
lahf
cmc
in
xchg
mov
arpl
sbb
dec
jns
or
mov
sti
in
push
(bad)
pushf
sub
data16
addr16
jnp
mov
inc
daa
movs
out
push
jo
(bad)
addr16
fwait
xor
outs
lock
pop
nop
sahf
loop
pop
mov
xor
clc
pop
mov
fdivr
and
xchg
jecxz
sub
stos
cli
call
jmp
(bad)
xor
xchg
pop
and
and
mov
adc
jns
fsubr
dec
frstor
cld
add
or
cmp
(bad)
nop
jae
(bad)
pop
pop
mov
dec
adc
pop
and
inc
jecxz
fdivr
mov
push
dec
pop
in
int
fcomp
aam
add
lock
in
bswap
in
nop
cmp
rcl
jle
add
hlt
in
(bad)
mov
push
mov
daa
adc
pop
movs
adc
mov
sbb
cmp
iret
pusha
cs
mov
adc
test
pop
mov
mov
mov
loopne
ja
inc
xlat
call
movs
inc
int3
mov
ja
xlat
sub
xor
and
add
stc
cmp
sar
mul
dec
pop
pop
leave
push
fwait
out
mov
sbb
outs
adc
pop
xor
nop
cmp
(bad)
fdivr
das
mov
aad
xor
scas
adc
or
sahf
jo
adc
mov
rcl
xchg
pop
nop
dec
cld
adc
enter
popf
hlt
add
jns
cmp
push
in
jmp
enter
stos
inc
or
sub
xor
shl
mov
and
daa
pop
into
pop
lahf
add
push
les
sub
lds
add
xor
shl
mov
jp
jmp
cs
pop
jmp
aam
sahf
and
push
pop
sbb
add
and
pusha
sti
jmp
aam
cli
and
adc
repnz
rcl
clc
fwait
data16
sahf
xchg
push
aad
push
fidiv
jecxz
fwait
hlt
(bad)
pop
push
jmp
js
sub
xchg
add
jne
pop
sbb
imul
fidiv
pushf
popf
fld
add
stos
stos
inc
xor
mov
adc
test
jne
out
mov
test
and
lods
cdq
dec
push
in
sbb
cli
je
aas
jmp
or
xor
jne
popf
out
cmp
lods
mov
daa
mov
sub
inc
jne
xchg
jnp
mov
add
(bad)
inc
nop
in
outs
sub
in
fisub
sub
sub
test
sbb
adc
and
fsubr
dec
and
(bad)
xor
dec
pop
pop
or
or
inc
ins
mov
pop
scas
movs
mov
fs
and
push
stc
mov
pop
inc
push
inc
pop
adc
push
daa
adc
(bad)
ins
data16
xor
(bad)
or
pop
sbb
add
int3
test
add
xor
icebp
(bad)
in
sbb
out
out
xor
fsubr
inc
shl
fwait
in
loope
pop
or
sbb
call
push
out
and
cmp
jmp
fwait
xchg
icebp
fwait
adc
(bad)
mov
or
lods
cmp
mov
mov
and
rol
cmc
test
rol
pop
retf
mov
cmp
and
retf
jo
add
add
adc
dec
inc
dec
sti
mov
je
push
dec
outs
mov
daa
jl
jge
cli
mov
nop
mov
add
push
pop
xor
scas
xor
out
(bad)
sub
sahf
test
outs
mov
les
out
sub
or
mov
std
cmp
js
xor
(bad)
cmc
outs
stos
(bad)
jno
lahf
mov
jnp
hlt
mov
xor
rcr
imul
jo
push
jb
(bad)
push
cmp
push
add
or
xchg
push
arpl
xor
std
push
push
les
sbb
dec
push
add
sub
stos
das
out
push
mov
mov
cmp
cmp
push
xchg
mov
add
mov
mov
dec
es
ret
pusha
adc
cmp
xor
rcl
test
scas
pop
into
lea
cmp
out
dec
(bad)
aad
xor
dec
mov
xchg
or
push
rcr
and
cmp
cs
add
outs
mov
std
outs
je
push
ja
jne
mov
inc
mov
movs
add
aas
adc
(bad)
shl
cmp
sub
mov
sub
fstp
clc
push
add
aas
scas
loop
fisubr
aam
jmp
loop
xchg
outs
pop
std
push
stos
int
stos
mov
cmp
cmp
ret
fwait
mov
rcr
push
mov
inc
mov
addr16
(bad)
sbb
mov
enter
scas
hlt
mov
rol
cmp
(bad)
out
pop
std
fndisi(8087
test
pop
fiadd
push
ss
dec
in
sbb
sub
(bad)
(bad)
movs
pop
add
jne
int3
cmp
mov
mov
cmp
scas
in
fisub
sub
and
and
xchg
fcom
mov
mov
dec
scas
aam
xchg
mov
scas
pop
inc
daa
inc
xor
call
mov
xor
sub
mov
test
out
push
sbb
and
(bad)
add
jmp
pop
aam
ror
int
lods
mov
mov
jne
adc
rcr
sar
jae
and
fistp
ret
leave
pop
pusha
mov
int3
mov
jbe
jb
stos
fld
push
sub
sub
mov
out
adc
and
mov
fdivr
test
cld
cdq
mov
retf
icebp
sbb
pop
sbb
mov
int
cli
xlat
mov
sbb
push
add
loope
scas
ror
xchg
iret
icebp
sbb
adc
and
aad
or
sbb
daa
fild
sbb
jbe
aas
xchg
jo
(bad)
jmp
mov
shl
in
adc
push
imul
jno
dec
fnstenv
ret
fbstp
ins
sbb
inc
sub
dec
std
addr16
leave
mov
dec
cmp
ror
dec
les
jno
mov
xor
add
pop
out
mov
mov
push
fwait
mov
pop
or
xor
out
pop
out
mov
xchg
les
xchg
inc
mov
and
cmps
out
dec
ret
dec
pop
jmp
pop
xor
mov
test
mov
ins
test
imul
in
xlat
jp
pop
into
and
push
fwait
dec
sbb
inc
aaa
addr16
adc
bound
mov
cmps
add
and
mov
das
inc
adc
lods
fnstenv
push
rcr
push
xor
mov
lea
mov
clc
scas
ds
mov
jg
mov
pop
fsubr
fsubp
mov
cs
inc
sub
jns
lods
mov
inc
mov
int
jp
inc
mov
lods
cmp
sub
jae
jp
lahf
fsub
jge
pop
jno
jae
fwait
loop
ficomp
(bad)
sub
into
repnz
and
ja
je
gs
mov
inc
das
xchg
adc
mov
mov
cwde
daa
or
mov
pop
pop
push
es
mov
mov
mov
(bad)
jecxz
jne
ins
inc
mov
push
sub
mov
adc
loope
and
popa
push
mov
ins
shr
cs
out
dec
pop
aad
push
aaa
and
cmp
data16
cmp
ins
(bad)
(bad)
loop
lahf
push
les
sub
imul
xchg
fs
daa
adc
retf
cmp
or
push
test
push
inc
hlt
int3
adc
push
inc
and
dec
dec
jge
jb
sub
pushf
xor
(bad)
xor
jb
adc
push
jmp
pop
cmp
mov
xor
jmp
adc
dec
ficom
loop
repnz
pop
push
inc
stc
inc
(bad)
mov
mov
dec
(bad)
sub
ins
adc
imul
repz
jbe
push
and
push
push
pusha
retf
rcl
enter
(bad)
sar
aad
mov
xor
test
mov
cli
pushf
mov
dec
cmps
into
cmps
add
aaa
push
ds
push
mov
cmp
repz
push
jae
push
sub
jl
jg
sbb
dec
push
add
imul
fbld
xor
and
(bad)
push
push
inc
inc
sub
aam
cmps
jno
imul
ror
test
mov
push
sbb
push
push
(bad)
xchg
cmp
cwde
je
inc
and
pop
pop
pinsrw
neg
and
(bad)
jmp
fstp
int3
xchg
mov
mov
into
pop
mov
pushf
ficom
mov
mov
xrstors
add
jno
shl
push
outs
mov
push
sub
pop
adc
mov
loopne
mov
ror
jle
aad
or
mov
and
jecxz
mov
mov
xor
sbb
out
jb
dec
je
fcomp
dec
jno
inc
mov
int
psrlq
cdq
(bad)
mov
stos
mov
outs
and
sbb
ret
add
shl
inc
adc
add
lds
(bad)
cmps
dec
cmp
adc
inc
xchg
sbb
psrlq
rcl
int
sbb
call
jo
pop
cmp
sbb
sbb
xor
in
or
lahf
jmp
xchg
stos
xchg
pop
out
enter
div
into
xor
fcom
cmp
in
push
cmp
push
mov
inc
and
sub
mov
idiv
jb
(bad)
xor
pop
outs
mov
and
fisub
and
xchg
pop
fld
and
sbb
in
xchg
lods
dec
fidivr
pushw
xor
out
aam
push
xor
dec
jne
lods
clc
test
mov
jbe
pop
push
mov
push
push
dec
pusha
out
mov
cld
cmps
aad
aad
dec
push
xchg
es
push
ds
adc
inc
pop
in
sysret
ins
xchg
ja
mov
xchg
mov
xchg
lea
jecxz
inc
push
ret
outs
cmp
and
xchg
dec
lods
ret
jne
sbb
movs
out
and
xchg
out
pop
mov
and
mov
imul
sub
mov
push
lods
mov
pop
xchg
xor
xchg
rcl
add
movs
lds
jae
jnp
repnz
stos
cld
jmp
xor
adc
mov
iret
in
pop
pop
sbb
pop
mov
push
loopne
hlt
jg
adc
push
pop
sar
stos
xor
cmp
xor
into
inc
es
or
inc
push
sub
dec
jb
inc
gs
fld
add
mov
(bad)
in
cmp
iret
popa
pop
aad
xchg
sbb
clc
mov
pop
or
rsqrtps
test
jne
cmp
cmc
test
les
cmp
adc
mov
mov
or
sbb
cmp
inc
xchg
lods
(bad)
mov
or
ret
cmp
or
inc
hlt
hlt
xor
(bad)
ret
retf
adc
iret
add
dec
das
loopne
arpl
ins
adc
fistp
cmp
mov
push
icebp
sub
mov
int3
jge
aas
add
test
sub
jns
test
cmp
in
push
fwait
jp
or
xchg
arpl
sbb
jg
loop
jb
push
fcom
popa
retf
retf
add
rcr
push
mov
mov
in
cs
in
data16
leave
mov
pushf
mov
ror
(bad)
mov
scas
loop
push
push
push
gs
or
repnz
out
push
repz
adc
test
into
sub
(bad)
fisub
cmps
adc
ret
in
mov
push
mov
and
popa
add
not
test
ret
(bad)
dec
shrd
rol
loope
inc
or
sbb
push
mov
fs
in
xlat
in
jae
mov
or
or
push
jl
and
mov
dec
rol
xor
mov
fld
mov
sbb
mov
dec
stos
and
cmp
dec
xchg
movs
(bad)
loopne
imul
xor
xor
out
leavew
outs
fs
cmp
pop
cmp
mov
sti
out
jmp
(bad)
xchg
mov
(bad)
cwde
dec
das
scas
sub
iret
test
mov
pop
mov
arpl
sub
adc
test
out
das
in
lods
xchg
cli
or
ror
ins
and
std
ds
call
xchg
les
mov
mov
mov
out
jo
jns
sub
retf
xchg
xor
cmps
movs
inc
mov
shl
daa
out
jno
out
mov
dec
lea
gs
hlt
daa
mov
pop
repz
in
lahf
in
add
add
pop
push
add
sbb
pushf
add
ins
ret
xor
jp
push
mov
mov
sub
xor
adc
cmp
cmp
xchg
or
ror
pusha
adc
fldcw
mov
sahf
into
push
pop
cmc
xadd
jmp
ror
mov
pop
stos
in
dec
pop
jge
xor
mov
call
in
push
jne
jno
xor
add
jnp
in
data16
cmp
int3
into
jmp
arpl
ret
xchg
out
scas
lods
add
out
out
(bad)
int3
pop
or
or
stc
test
ficomp
push
mov
cmps
jg
inc
mov
retf
dec
leave
xchg
mov
dec
in
fs
mov
ret
ret
push
cmp
popf
movs
out
mov
cmc
in
icebp
mov
sbb
dec
mul
fisttp
hlt
enter
mov
or
call
xchg
in
repz
stos
jb
inc
call
nop
int
inc
sub
loope
or
int3
mov
cmp
jl
jnp
sub
jl
mov
inc
icebp
xchg
push
adc
lods
sub
shr
rcl
test
bound
inc
call
out
popa
mov
mov
mov
dec
dec
movs
cmp
sub
sub
lods
add
mov
ret
aaa
mov
mov
push
stos
rcl
jge
ret
cdq
xchg
mov
add
mov
pop
xchg
loopne
imul
cmp
add
inc
fnstenv
ror
aaa
pop
or
aaa
sub
sbb
aad
mov
aad
mov
push
dec
push
sbb
adc
retf
icebp
test
shl
(bad)
in
sbb
(bad)
ret
les
mov
lea
xor
mov
sub
aad
xor
pop
sbb
or
loop
sub
xchg
out
aad
dec
dec
sbb
jnp
lock
sbb
(bad)
mov
les
cdq
adc
mov
jmp
ss
push
xchg
rcr
add
ja
in
iret
sub
xor
ss
pop
js
rcr
mov
psraw
jl
jne
add
aam
dec
cmp
das
cmp
sub
outs
sub
jbe
mov
mov
jo
sbb
lods
xchg
movs
mov
ret
or
inc
jmp
cvtdq2ps
std
pop
pusha
div
nop
ja
add
sbb
xchg
rol
je
xor
jge
cdq
popf
fsubrp
jmp
stos
cli
or
ret
out
mov
add
loope
addr16
or
and
mov
cmp
lods
and
pop
outs
push
jg
xor
mov
out
add
xor
fimul
(bad)
out
cmps
test
pop
clc
jns
pushf
test
fbstp
pop
mov
jl
jp
(bad)
sbb
push
outs
lods
ret
js
repnz
xchg
xor
popf
in
xchg
or
in
mov
sub
test
pusha
popa
in
pop
out
ss
mov
mov
retf
stc
pop
retf
cmp
xor
jmp
sti
sub
retf
cmp
jle
adc
mov
fwait
jbe
push
xchg
mov
jg
daa
jle
out
adc
(bad)
jns
std
push
nop
(bad)
fisub
pop
mov
pop
dec
cmp
push
cmp
inc
aaa
movs
aaa
xlat
test
enter
sbb
ret
adc
iret
add
fs
or
mov
cmp
xor
inc
call
xchg
or
lods
cmp
or
inc
scas
inc
or
jb
sbb
fdivr
xchg
aas
adc
mov
test
inc
xor
or
push
and
sbb
sub
or
pop
mov
scas
aad
dec
adc
leave
mov
push
mov
add
arpl
sub
or
xlat
in
sub
inc
xchg
fcomip
ja
push
mov
cli
mov
hlt
rcl
call
xchg
push
mov
int
or
mov
inc
aam
mov
sahf
mov
movs
push
retf
outs
(bad)
(bad)
sub
xor
inc
je
xchg
mov
cmp
jl
dec
stos
pop
jb
fsubr
dec
cs
jg
outs
lock
mov
adc
xchg
adc
dec
add
xchg
popf
fwait
arpl
jne
jge
or
daa
jge
ret
push
jg
lea
in
mov
lds
xchg
repz
out
add
sub
mov
gs
es
adc
retf
shl
mov
rcl
push
pop
popf
pcmpeqw
add
jle
lahf
adc
or
sub
push
mov
or
pop
and
lds
sbb
dec
pop
sahf
pop
mov
pop
lock
jmp
or
loop
pop
add
daa
je
sub
push
push
cs
push
nop
dec
aam
push
xchg
add
adc
pop
pop
add
push
inc
adc
and
sub
push
pop
sbb
pop
xchg
mov
sbb
es
xor
sub
pop
jnp
cdq
test
jp
xor
push
mov
jb
das
aas
daa
clc
xor
das
dec
int
movs
xchg
js
repz
or
pop
dec
mov
lahf
or
or
sub
push
pop
add
sbb
and
pushf
arpl
sbb
dec
push
sahf
jb
movs
pop
nop
inc
inc
inc
mov
je
js
sti
ja
mov
cld
and
xor
cmp
push
mov
push
push
adc
pop
xchg
jno
push
cmp
ja
mov
cmps
bound
sar
js
mov
das
mov
icebp
push
pop
dec
icebp
pcmpeqw
xor
ja
mov
mov
pcmpeqw
cmp
aas
mov
push
rcl
push
or
jno
sti
ja
inc
add
rcl
sysret
mov
imul
mov
iret
adc
pop
mov
jne
push
cmp
aas
mov
push
rcl
or
mov
je
js
cli
ja
mov
rcl
push
pop
mov
jne
jl
sti
ja
mov
rcl
push
pop
mov
add
ja
mov
inc
adc
push
cmp
out
pop
push
adc
pop
mov
jb
push
cmp
pop
mov
push
out
adc
pop
mov
and
cmp
pop
mov
push
mov
psadbw
cmp
ja
mov
adc
imul
ja
mov
adc
add
push
cmp
pop
mov
push
adc
es
mov
mov
ja
mov
rcl
es
mov
sub
ja
mov
push
adc
imul
mov
rcl
sysret
mov
cmc
imul
ja
mov
rcl
or
mov
cmp
ja
mov
rcl
or
mov
and
cmp
aas
mov
push
mov
pcmpgtb
cmp
ja
mov
aam
sbb
mov
jne
jp
sti
ja
mov
jecxz
inc
jno
inc
push
aas
aas
ja
mov
rcl
push
jns
fs
cmp
jbe
sahf
aas
mov
push
inc
or
mov
sbb
test
adc
pop
imul
ins
ja
mov
out
xor
pop
mov
jecxz
adc
xchg
ja
mov
rcl
lahf
pop
aam
jg
jge
pop
push
das
mov
cmp
jnp
mov
ins
dec
js
sti
ja
mov
xlat
adc
mov
jne
imul
mov
jo
adc
pop
cmps
nop
cmp
aas
mov
push
rcl
add
rcr
ja
mov
jl
or
test
cmp
test
push
pop
mov
in
sbb
pop
xchg
add
adc
push
cmp
aas
mov
push
mov
pop
dec
js
sti
ja
mov
xlat
adc
mov
jne
jmp
or
mov
rcl
push
pop
and
adc
jb
cld
ja
xchg
aas
mov
push
rcl
pop
leave
push
jb
fcom
sti
ja
mov
pop
adc
pop
mov
cmp
movs
mov
push
push
cmp
pushw
aas
icebp
ja
mov
rcl
sbb
imul
pop
das
mov
mov
sysexit
inc
js
sti
ja
mov
aad
stos
sub
cmp
cmp
push
pop
cmps
(bad)
push
inc
mov
mov
push
rcl
add
test
sti
ja
mov
retf
adc
pop
mov
je
adc
sti
ja
mov
rcl
pusha
push
mov
je
adc
add
dec
add
paddd
cmp
daa
mov
push
push
paddd
cmp
or
xor
cld
wrmsr
imul
mov
mov
pop
adc
shld
cmp
dec
mov
push
cmp
jb
xchg
jg
ja
mov
fst
nop
pop
aam
pop
push
sbb
adc
pop
mov
(bad)
push
cmp
shl
push
mov
cmp
adc
pop
push
fmul
(bad)
push
cmp
ja
mov
fcom
addr16
mov
cmp
ja
mov
call
imul
mov
dec
adc
imul
push
imul
push
aam
cmps
imul
mov
xor
in
push
or
sahf
imul
push
xor
add
push
cmp
push
mov
push
icebp
adc
pop
mov
popf
push
cmp
jno
rcl
adc
pop
xchg
push
shr
cmp
cmps
sub
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
or
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
cli
adc
pop
mov
jne
js
stc
ja
mov
rcl
or
mov
jbe
jle
(bad)
ja
mov
ror
mov
mov
in
push
test
sar
add
das
ror
and
jbe
push
sbb
mov
xor
cmp
pop
ds
inc
pop
(bad)
jl
xor
jmp
aas
xor
cmp
dec
jns
inc
push
lea
mov
push
mov
xor
sbb
sbb
fidiv
movs
push
xor
pop
bndstx
and
ja
xchg
imul
adc
sbb
sahf
add
outs
and
push
jge
shl
push
add
sbb
ins
retf
mov
and
imul
sbb
jle
jno
mov
wrmsr
adc
dec
ds
ja
int3
inc
adc
sbb
ficomp
bound
rol
je
push
inc
sub
add
dec
retf
mov
sete
retf
cmp
push
shl
jp
(bad)
popw
pop
or
sti
and
int3
push
frstor
xchg
push
push
dec
call
push
mov
popa
adc
inc
mov
dec
rcl
out
sub
dec
or
sbb
ror
jae
rol
aam
adc
pop
inc
and
jbe
cmp
fstp
fs
(bad)
sete
fstp
pop
fiadd
add
and
inc
fisttp
push
daa
mov
pop
or
or
xchg
pop
data16
adc
outs
mov
data16
jg
sbb
inc
loope
xor
pusha
sbb
or
add
rcl
outs
aaa
mov
inc
inc
fdivr
or
dec
mov
mov
push
xor
dec
ror
outs
ds
pusha
pop
push
(bad)
lds
pop
(bad)
pop
shl
adc
ror
sbb
pop
(bad)
jne
pushf
jno
bound
inc
sahf
adc
retf
data16
arpl
cdq
mov
dec
in
dec
ss
out
test
jo
dec
fisub
mov
(bad)
leave
push
mov
pop
rol
cmps
jle
outs
fsubr
unpcklps
add
jb
mov
and
popa
add
adc
ror
ins
mov
pushw
ud2
cmp
push
shr
test
dec
jne
outs
or
cmp
push
push
mov
mov
push
push
xor
inc
fstp
shl
lea
je
bound
push
add
add
ror
add
mov
push
jecxz
sbb
sbb
mov
mov
jbe
pop
js
add
push
popf
inc
cmp
jl
shl
or
mov
fisub
lahf
jne
push
or
sbb
cld
inc
(bad)
fs
xor
push
pop
(bad)
cmp
push
aad
and
jp
or
int
shl
jp
fmul
ss
inc
int
(bad)
js
mov
jge
or
pop
mov
fistp
dec
cmp
loop
sbb
sbb
fstp
hlt
fs
xchg
(bad)
xor
inc
fstp
loope
cmp
loope
add
adc
aas
(bad)
outs
cmp
mov
or
or
xchg
pop
jnp
dec
(bad)
pusha
aaa
mov
popa
add
or
ins
(bad)
jb
cmps
bound
out
push
add
push
push
mov
data16
ud2
dec
test
shl
fs
aam
jne
sbb
retf
push
ss
dec
jle
push
push
push
call
and
popa
push
or
dec
(bad)
jb
fwait
jl
data16
bound
or
xchg
adc
add
leave
pop
xor
(bad)
mov
jecxz
pop
gs
push
lods
cmp
jbe
mov
rcl
adc
mov
je
jbe
(bad)
xor
push
push
mov
cmp
aas
mov
jae
push
or
mov
jo
jge
cli
jns
mov
sti
or
sub
xor
aaa
mov
clts
cmps
ds
jp
jmp
mov
inc
sti
push
or
mov
fs
js
jmp
mov
inc
repz
push
add
jl
cli
imul
aas
mov
inc
ret
push
push
lss
jbe
push
repz
mov
rcl
sbb
mov
aaa
cld
ja
mov
or
(bad)
xor
adc
push
jmp
mov
push
rcl
adc
mov
fs
cmp
push
mov
mov
push
rcr
mov
xor
cmp
add
sbb
daa
mov
push
jns
mov
mov
pop
ficom
jl
js
cli
gs
ss
push
sbb
cmp
gs
mov
ficom
or
jbe
jmp
mov
pop
sar
cmps
ds
sub
pop
iret
push
push
bsr
jge
ins
das
mov
xchg
add
adc
addr16
imul
ds
adc
mov
ja
imul
mov
push
fist
or
cmps
push
jnp
jo
clc
push
das
mov
mov
pop
shr
lss
jbe
gs
jg
mov
iret
adc
jb
jl
sahf
jg
mov
mov
inc
mov
add
jbe
sbb
ss
inc
jecxz
daa
or
xor
cmp
pop
pop
mov
jo
inc
xor
mov
push
add
es
push
das
mov
iret
adc
jo
jp
out
sub
ficomp
add
mov
pop
ja
and
cmp
iret
adc
jge
js
jmp
sub
rcl
push
pop
fwait
shl
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
xchg
push
sbb
dec
cwde
sbb
pop
popf
gs
mov
jp
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
xlat
mov
jns
js
mov
mov
push
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
sti
ja
mov
rcl
push
pop
mov
jne
js
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
add
cmp
add
and
add
cmp
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
