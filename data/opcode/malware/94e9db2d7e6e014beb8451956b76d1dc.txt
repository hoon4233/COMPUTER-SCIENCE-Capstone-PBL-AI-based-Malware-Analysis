movs
(bad)
(bad)
mov
call
xor
mov
and
adc
dec
or
and
out
repz
test
sub
movs
push
jmp
jmp
sti
jle
dec
jmp
mov
ja
add
add
ret
push
mov
and
sub
push
(bad)
(bad)
and
push
mov
(bad)
adc
add
sbb
call
fistp
ins
or
pop
add
or
jle
shl
push
imul
dec
fsub
cmp
add
push
push
or
jl
repz
jge
and
xor
pop
in
push
push
scas
mov
push
scas
test
jne
push
cmp
mov
mov
iret
mul
mov
lea
inc
push
sub
cmps
push
pusha
in
xor
loopne
jae
jno
and
mov
inc
retf
dec
lock
adc
rol
jne
in
pushw
pushf
jbe
sbb
ja
ret
push
fucomp
call
mov
outs
inc
outs
inc
cmp
sbb
xchg
fisttp
push
add
and
outs
in
ds
xor
inc
bound
aas
mov
jo
and
cmp
cmps
sbb
cmp
push
fucomi
dec
popa
lock
jmp
mov
push
shl
add
or
fild
rol
push
push
jae
push
inc
add
pop
pop
pop
mov
pop
ret
adc
(bad)
in
xor
push
rol
add
xor
mov
cmps
adc
mov
jecxz
fistp
adc
(bad)
push
ds
int
and
sbb
jne
out
std
div
push
push
pop
jmp
or
cld
mov
dec
loopne
dec
cld
jge
lods
sbb
call
int3
push
(bad)
jnp
fldcw
shl
mov
add
mov
or
(bad)
push
pop
lock
dec
add
in
aam
push
inc
add
ja
lods
aam
and
add
pop
lods
leave
ret
xchg
mov
push
inc
xchg
push
push
push
push
cmp
iret
sub
(bad)
int3
jo
jo
add
or
aaa
stos
outs
mov
adc
rcr
sub
in
xchg
dec
scas
or
mov
cmp
mov
pop
sti
jge
add
cs
imul
int3
call
cli
or
push
mov
jge
lea
mov
push
fdiv
xor
into
push
jnp
mov
push
mov
mov
dec
push
or
out
fs
les
ins
outs
xchg
push
cdq
popf
xchg
jne
ret
jbe
idiv
push
xor
sbb
pop
and
mov
repz
add
or
call
or
push
jge
call
movs
or
pop
jne
dec
inc
jb
sub
inc
in
push
test
cwde
ret
add
lock
pop
xchg
and
stos
add
push
data16
scas
and
shr
sub
sub
pusha
ficomp
sub
jne
push
jo
(bad)
inc
pop
mov
inc
mov
and
inc
inc
rol
dec
cmp
je
or
jge
mov
pop
add
clc
inc
mov
aas
(bad)
jae
jne
scas
add
(bad)
cmp
das
in
std
imul
mov
dec
mov
cmp
dec
jl
int
mov
ror
push
in
sub
push
or
and
mov
ss
lock
jnp
and
movs
cmp
cli
add
mov
lock
je
cmp
jne
mov
stc
adc
xchg
jl
test
je
add
pop
sar
pop
sub
je
dec
adc
or
xor
pop
fs
add
xchg
jp
and
rcr
das
push
adc
shr
push
movzx
push
push
cmps
mov
mov
cmp
dec
xor
adc
push
call
ss
push
push
out
nop
inc
sub
jl
frstor
sbb
push
jnp
jnp
or
mov
or
and
rol
or
mov
sub
je
imul
imul
and
add
div
out
push
je
cmp
dec
sub
out
mov
(bad)
sti
mov
test
sub
or
push
sub
sbb
or
or
pop
fcom
mov
mov
pushf
xor
je
mov
add
add
sub
mov
sub
sub
lahf
fst
jl
ret
arpl
test
(bad)
(bad)
jmp
or
and
xor
add
aam
fsubr
(bad)
neg
loope
test
int3
cmp
adc
data16
mov
mov
add
add
cld
(bad)
shr
mov
sbb
push
mov
jne
mov
shl
inc
shl
(bad)
test
inc
add
cmp
mov
bound
enter
jmp
out
cmc
adc
or
fadd
sbb
pusha
add
jle
fdivr
loopne
(bad)
xor
push
push
mov
call
cmc
je
out
adc
retf
xor
push
dec
cmp
pop
lock
cmp
inc
(bad)
hlt
adc
pop
leave
mov
cmp
and
mov
xor
or
sbb
push
je
mov
std
shr
inc
dec
sar
setne
es
sub
lea
mov
mul
mov
pop
(bad)
ins
sti
out
jmp
push
or
push
and
idiv
and
or
inc
jmp
sub
jmp
mov
cmp
jbe
outs
sahf
pop
inc
je
cmp
jne
pop
cmp
outs
sub
icebp
sbb
test
jmp
mov
inc
dec
movs
or
sete
mov
inc
popf
out
push
stc
sti
cli
jmp
pop
add
mov
lea
pop
mov
adc
xchg
add
or
inc
shl
pop
jb
ja
pop
sti
xchg
std
inc
jmp
mov
or
xor
jmp
mov
je
in
and
jp
or
mov
cmp
jge
mov
inc
push
and
add
pop
or
mov
push
mov
(bad)
aas
lds
shr
lea
mov
ss
or
loopne
ror
push
mov
push
or
mov
ret
mov
fmul
push
std
mov
mov
jbe
retf
pop
ret
mov
cmp
mov
push
lock
add
or
sbb
(bad)
(bad)
in
fucomip
or
rol
call
leave
push
pop
mul
seto
neg
or
in
icebp
aad
push
xchg
jbe
mov
push
pop
lock
mov
inc
cmp
jb
pop
or
loopne
mov
sbb
jb
push
mov
push
jne
fndisi(8087
jo
rol
in
scas
fwait
mov
cwde
mov
mov
add
inc
push
push
cmp
sub
outs
mov
push
xchg
push
mov
(bad)
into
mov
jb
pop
and
ret
into
jge
xchg
iret
adc
and
pop
mov
jmp
pop
ret
sub
daa
dec
pop
jnp
add
push
test
test
inc
lock
dec
sti
lahf
loope
pop
out
or
push
push
mov
cmp
inc
call
sub
mov
sar
cmp
in
loope
pop
imul
mov
add
shl
or
(bad)
inc
pop
cmp
inc
retf
add
mov
mov
adc
add
out
cs
dec
or
rcr
or
xor
data16
inc
jl
mov
mov
js
retf
rol
push
adc
rcl
cs
cmp
sub
pop
xor
xlat
cmp
(bad)
or
and
call
fs
xchg
enter
mov
or
loopne
outs
clc
push
xor
cmp
add
jp
push
lods
popf
(bad)
je
jnp
cwde
push
push
js
stc
rcr
idiv
loopne
or
cmp
push
jge
sub
push
lods
jge
sub
jmp
push
inc
fisub
push
inc
add
hlt
fst
neg
jecxz
sahf
or
or
aas
call
shl
hlt
test
mov
(bad)
fadd
test
mov
sti
push
mov
push
add
test
push
aaa
inc
push
sbb
adc
inc
ror
dec
(bad)
into
push
and
sbb
sub
sbb
mov
xchg
cmp
mov
sbb
or
ja
ror
lock
lock
or
int
add
xor
adc
stos
ins
mov
rcl
(bad)
ss
stos
not
stos
mov
sbb
es
or
add
hlt
test
test
push
dec
cmp
inc
adc
shl
sbb
or
adc
adc
in
and
adc
in
adc
cmp
add
jne
and
bnd
mov
cmp
mov
cmp
push
dec
xchg
sbb
add
xchg
test
push
xor
cmp
dec
pop
jle
jne
mov
mov
jmp
sbb
repnz
enter
add
fcomp
push
enter
mov
loope
mov
clc
jne
sbb
mov
lock
fs
rcl
dec
neg
sbb
(bad)
cs
jbe
daa
out
push
jmp
sbb
test
push
push
scas
mov
adc
popf
push
xor
loop
mov
test
or
fisttp
add
or
movs
cli
mov
(bad)
mov
popf
inc
add
adc
enter
jno
push
aas
ins
lods
add
inc
xor
cmp
push
cmp
cld
call
leave
xor
lock
xchg
cmps
jge
xor
out
push
or
pop
dec
dec
sbb
dec
(bad)
push
int3
inc
je
adc
adc
mov
pop
(bad)
sub
neg
lea
(bad)
call
dec
faddp
or
jne
mov
dec
sbb
sub
ja
mov
sbb
push
sbb
lods
adc
sub
inc
xlat
imul
adc
mov
mov
lods
dec
jg
neg
push
pop
lods
jg
clc
or
(bad)
fdiv
mov
(bad)
jmp
fcom
push
or
push
or
add
inc
lock
movs
addr16
pop
or
jmp
(bad)
and
xchg
aaa
adc
adc
jle
push
jmp
pop
imul
arpl
push
push
je
add
adc
inc
cmp
jl
aam
ret
fstp
sbb
mov
aad
adc
aad
add
rcr
sub
adc
sub
mov
js
jecxz
mov
inc
in
and
lock
loope
stos
repnz
cmp
out
cmp
push
or
mov
mov
daa
xor
cmp
xor
cmp
dec
inc
xchg
iret
jno
xchg
or
or
cmp
jne
popa
mov
inc
cmp
mov
pop
adc
inc
cmp
jl
jmp
push
cmp
pop
pop
enter
adc
les
xchg
lea
dec
cmp
je
imul
(bad)
ja
jo
pop
add
or
loopne
clc
fisub
(bad)
pop
aad
into
pop
push
repnz
in
or
inc
jo
pop
cwde
pop
lods
cmp
hlt
xor
sbb
and
cld
test
add
adc
xor
sub
jnp
adc
nop
mov
push
loop
add
cmps
pusha
into
call
inc
mov
adc
rcl
adc
jge
push
or
call
mov
sbb
inc
add
push
jbe
stos
fdivr
push
push
or
test
push
xor
dec
sahf
retf
xor
dec
bnd
sub
mov
push
push
push
sub
dec
inc
cmp
(bad)
out
pop
sbb
push
ds
add
push
js
add
shl
shr
adc
jge
inc
daa
mov
sbb
outs
jmp
push
sbb
push
cmp
cmp
cdq
fs
mov
or
xchg
out
xor
push
sbb
inc
mov
cmp
jne
ds
push
push
sbb
xchg
push
dec
(bad)
add
adc
sbb
and
fwait
or
dec
and
mov
jg
mov
mov
bound
ret
pop
es
test
inc
sahf
sar
es
add
test
dec
in
inc
mov
ja
cmp
cmp
lea
sahf
in
inc
xchg
cmp
cmp
cmp
je
and
cmp
ja
and
mov
jg
test
jmp
or
enter
adc
add
sbb
add
add
mov
in
es
and
test
popa
(bad)
adc
mov
imul
cmp
inc
adc
adc
movs
mov
sbb
adc
or
fld
inc
or
inc
add
pmaxsw
pop
test
jbe
mov
add
inc
clc
xchg
into
inc
inc
jle
jnp
xor
or
jbe
mov
in
push
xor
aam
addr16
add
ret
sbb
sub
(bad)
cmps
sub
push
sbb
inc
jl
add
push
pop
jb
jae
add
xor
sub
cli
ja
jne
jb
mov
test
push
cmp
in
lock
out
dec
ja
push
stos
in
inc
call
jge
add
pop
aam
lea
lea
xchg
jae
(bad)
add
sbb
lahf
xor
stos
jne
inc
inc
pop
mov
push
test
add
cmp
adc
and
pop
shl
cmp
push
mov
fbstp
outs
cli
movs
scas
mov
es
add
or
(bad)
bound
cmp
jae
pop
je
aaa
pop
lea
fs
in
iret
add
add
out
les
inc
cmp
sbb
adc
xor
sahf
loopne
sub
fld
fbstp
add
add
inc
or
cmps
paddusw
mov
mov
inc
mov
std
xchg
pop
inc
cmp
ret
je
push
mov
push
xor
push
mov
loopne
outs
ret
pop
or
clc
push
cld
dec
rcr
pushf
push
je
js
test
or
fadd
sti
pop
and
dec
paddb
outs
cmp
xor
pusha
xlat
je
push
test
pop
les
inc
mov
sbb
or
mov
jl
mov
stc
imul
sbb
(bad)
sub
dec
push
sbb
mov
aas
mov
push
xor
fcomp
jnp
mov
sub
pop
sbb
out
jmp
(bad)
fiadd
mov
stc
fisttp
and
out
mov
add
pusha
adc
push
jmp
add
sbb
ss
cmp
and
inc
mov
inc
pop
pop
dec
cmp
pop
call
punpckhdq
cmps
push
xor
ins
cmp
test
jne
sbb
push
stc
pop
adc
fcom
aad
cmp
push
adc
clc
cmp
jp
push
loopne
jle
mov
and
push
enter
addr16
push
aaa
push
inc
lock
jp
xchg
push
xchg
pop
(bad)
push
adc
xchg
inc
jmp
outs
cmp
adc
cmp
adc
and
sbb
pop
cmp
je
dec
jp
mov
inc
push
xchg
mov
adc
mov
pop
push
aam
ss
sub
cmp
movs
ds
mov
cmp
ss
je
shl
es
cmp
hlt
dec
cmp
jmp
movs
xchg
mov
adc
loopne
add
push
and
retf
sar
aas
cld
arpl
mov
fadd
div
pop
ret
push
inc
mov
pop
push
mov
cld
inc
jmp
ss
push
mov
aaa
mov
enter
test
jne
pop
pop
int3
or
cli
add
xor
and
enter
dec
jbe
in
cmp
add
mov
imul
(bad)
adc
push
xor
and
pop
push
add
add
mov
push
inc
push
ins
aad
add
bnd
cmps
sub
rcl
dec
push
ret
hlt
loope
aaa
sbb
test
out
(bad)
push
push
xchg
add
mov
bound
dec
sar
inc
jge
push
and
fcomp
xlat
mov
sbb
sub
dec
pop
or
dec
pusha
dec
add
popf
mov
jb
(bad)
push
(bad)
cmps
dec
sub
clc
add
mov
inc
bound
popa
stos
add
shl
push
push
jb
popa
ficomp
ret
push
mov
in
jae
xchg
data16
xor
push
lea
inc
movs
stc
mov
push
ja
and
and
push
mov
xor
cdq
aad
into
mov
adc
bound
popa
stos
and
push
int3
pop
xor
sub
fadd
fsubr
and
push
cmp
pop
push
push
cmp
scas
rcl
pop
push
sar
add
push
out
push
or
fsub
nop
lods
sbb
mov
das
inc
push
retf
or
cmp
fcomp
jge
push
add
(bad)
popa
(bad)
(bad)
daa
jbe
jo
push
jg
jmp
push
cmp
shl
push
mov
movs
push
retf
push
adc
push
addr16
add
je
adc
ins
mov
jmp
lahf
dec
jle
retf
and
jmp
pop
pop
jmp
sbb
mov
cmc
mov
in
(bad)
test
hlt
xchg
inc
mov
rol
sub
popa
rol
jne
pop
mov
sti
(bad)
fisub
je
jne
sbb
or
inc
add
and
push
stos
add
xor
lea
lea
ds
sbb
and
out
sbb
adc
in
das
inc
inc
add
pop
pusha
mov
push
pop
or
or
mov
dec
fs
fsub
shl
push
inc
jbe
stc
scas
cs
test
jg
add
lods
std
and
shl
call
or
dec
sub
not
pop
xor
int3
add
add
popa
add
mov
pop
scas
xor
bound
ror
xor
inc
daa
mov
sub
js
sbb
mov
jmp
movs
jmp
rol
jmp
or
jne
jae
jmp
push
pop
sub
and
mov
mov
test
and
fs
outs
push
or
ja
xchg
and
or
cmc
les
js
pop
xchg
dec
pop
sbb
mov
or
scas
or
es
inc
aaa
pop
xor
or
in
ret
dec
rcl
jo
aaa
aad
mov
or
jo
repnz
(bad)
mov
push
add
bound
push
adc
loope
xor
daa
cwde
cmp
stos
cmp
sahf
pop
push
sub
sub
dec
jo
inc
(bad)
in
sub
sub
pusha
or
sub
ror
sbb
in
inc
xor
and
jmp
push
add
and
cli
stos
mov
outs
sub
and
jle
add
pop
ja
pop
xchg
jne
mov
shl
jae
jbe
sub
push
dec
scas
sub
pop
sbb
cmp
or
aad
dec
lods
pop
add
push
popa
repnz
not
test
popf
mov
jnp
mov
lea
or
mov
sar
test
fcmovne
fcomp
jmp
push
sbb
fistp
mov
adc
xor
dec
jne
push
aaa
xor
ins
jnp
(bad)
jmp
and
fadd
mov
pushf
dec
adc
push
rol
sub
addr16
or
lea
inc
cmp
sub
outs
cmp
shr
cli
mov
cmp
add
push
or
or
push
int3
xchg
jo
inc
mov
out
and
adc
push
jo
adc
je
xor
je
mov
sbb
loopne
mov
mov
or
cld
cmp
inc
mov
adc
and
jl
jne
mov
push
jo
xor
push
clc
cmp
sete
lea
jne
lahf
pop
and
add
aaa
pusha
cld
or
popa
ja
push
add
add
push
push
mov
mov
cmp
dec
fwait
inc
out
sbb
rcl
test
imul
inc
mov
push
mov
js
push
mov
shr
add
or
mov
pop
mov
pop
jg
xor
inc
push
sub
sbb
mov
xor
push
sub
and
push
sbb
or
fcomp
lock
add
rcl
mov
push
lock
cmp
cmp
jae
jecxz
dec
dec
push
adc
stos
enter
and
pop
add
push
pusha
mov
mov
pop
ret
or
mov
dec
jl
inc
add
dec
push
out
add
shl
pop
fadd
mov
ret
inc
out
stc
xor
call
xchg
cmp
push
scas
mov
cmp
xor
inc
sbb
fst
adc
pop
add
xor
cmp
mov
(bad)
mov
jbe
daa
jo
sbb
add
add
or
or
mov
add
inc
cmp
add
add
mov
or
test
sbb
xchg
pop
or
jne
or
es
cmps
dec
mov
adc
pop
sbb
push
and
adc
push
add
mov
and
clc
pop
mov
mov
sbb
test
mov
bound
mov
repnz
or
retf
push
mov
adc
push
inc
push
enter
cmp
jmp
or
mov
lea
push
push
mov
jl
das
dec
adc
ret
or
sub
push
call
jle
retf
test
push
push
mov
inc
and
jmp
mov
rol
je
push
mov
xor
data16
mov
dec
movups
add
sub
or
cmp
es
mov
(bad)
mov
or
mov
xor
lods
inc
jns
sub
in
sub
or
and
cmp
out
iret
cmp
add
pop
inc
pop
loope
pop
inc
js
js
cmp
pop
adc
adc
mov
sub
jge
je
inc
mov
inc
add
add
test
mov
js
pop
adc
jmp
stos
js
nop
inc
repz
adc
and
jnp
add
and
or
push
adc
lods
and
es
pushf
es
sti
inc
fld
outs
add
adc
xor
ret
repnz
je
pop
cld
push
ja
mov
cmps
push
pop
lea
push
jmp
lds
push
jno
fcmovnbe
arpl
inc
push
pop
mov
out
pop
shl
push
(bad)
fadd
push
sbb
ret
mov
xor
sub
int3
(bad)
das
sbb
sbb
xchg
push
and
test
sbb
jno
add
imul
mov
arpl
fadd
adc
push
ins
mov
adc
cdq
rol
lods
call
xlat
inc
(bad)
js
pop
sbb
inc
or
fild
dec
icebp
push
mov
push
mov
mov
add
xor
pop
cmp
adc
je
inc
xchg
mov
retf
shl
fldcw
jecxz
fimul
and
loope
xchg
ror
adc
jecxz
inc
ja
mov
mov
xor
lock
fsub
gs
add
mov
and
and
outs
and
xchg
(bad)
cld
push
bound
add
test
adc
push
mov
adc
push
dec
and
(bad)
mov
(bad)
mul
push
shr
inc
or
jno
inc
call
cmp
enter
pop
or
fs
pop
rol
or
push
mov
adc
push
pop
das
lea
(bad)
repz
push
and
dec
ret
ds
and
xor
fs
adc
imul
ja
repnz
push
mov
push
push
punpckhbw
push
sub
je
es
clc
inc
pusha
jl
cmp
je
pop
pop
mov
push
jge
xor
inc
xor
xchg
in
mov
jmp
cmp
jge
inc
push
push
inc
xchg
sbb
or
inc
jle
jnp
adc
xchg
pop
sbb
jl
sahf
adc
pop
cmp
pop
lock
clc
xchg
sbb
add
call
mov
xor
mov
mov
call
and
mov
rcr
inc
cdq
fdiv
mov
sbb
push
iret
loope
jo
adc
mov
jne
imul
pop
sub
test
imul
neg
adc
xchg
pop
cmc
hlt
sbb
and
retf
test
xor
clc
or
cmp
je
or
(bad)
unpckhps
and
ss
jo
sub
dec
sub
call
xor
sub
loope
xor
sub
les
jle
sub
mov
inc
push
xor
add
cmp
xor
add
inc
bound
fdiv
sub
push
pusha
aas
inc
pop
mov
das
(bad)
(bad)
push
xor
xchg
push
jg
or
xor
push
adc
jo
idiv
mov
nop
sbb
sbb
movs
daa
and
add
out
inc
or
test
sub
push
fild
pop
or
pop
jecxz
retf
enter
and
or
pusha
pop
ss
inc
and
ret
bound
rcl
sbb
cdq
cs
adc
sbb
lock
nop
inc
sub
jmp
aas
mov
pop
cmc
ret
out
jecxz
mov
cmp
add
jle
sbb
pusha
adc
call
or
mov
cmp
je
cmp
jne
cmp
jne
pop
shr
call
jo
mov
(bad)
jmp
arpl
daa
cmps
dec
ds
sti
add
packuswb
xor
or
inc
outs
pop
pop
loop
outs
push
cmp
ret
fimul
les
sbb
cwde
adc
jle
mov
push
repnz
push
lea
lods
mov
pop
pop
retf
ficom
jl
dec
cmp
dec
add
jge
sbb
and
lds
and
pop
dec
imul
dec
add
adc
ret
push
push
lea
adc
ds
adc
xchg
dec
jnp
stos
add
xor
pop
shl
cmp
or
and
sti
test
add
jbe
push
or
jnp
fidivr
cmp
jmp
xor
xor
cld
and
mov
mov
movsx
push
push
adc
xor
add
lea
push
repz
dec
aam
es
aaa
out
mov
mov
sub
xor
sub
ret
fisub
hlt
mov
jl
int3
imul
adc
add
mov
pushf
lea
push
stos
imul
pop
retf
sbb
add
pushf
xchg
dec
adc
je
sbb
pop
cmp
aaa
inc
dec
adc
rol
mov
dec
sub
add
outs
fadd
ja
cmp
test
jns
pushf
xor
or
fcomp
adc
clc
push
push
mov
shl
outs
push
add
inc
add
mov
(bad)
stc
dec
pushf
fldz
fcomp
fnstsw
test
jp
fld
fmul
push
inc
jo
or
stos
or
cli
mov
inc
jns
ja
adc
mov
add
mov
test
jne
adc
addr16
mov
pop
pusha
inc
add
cmp
jle
xchg
push
pop
and
cmp
lock
call
or
sub
mov
mov
mov
push
out
mov
sbb
mov
cdq
pop
les
and
add
stc
sar
add
push
movs
(bad)
adc
push
adc
add
pop
mov
push
cld
or
pop
in
add
out
aaa
push
rcr
push
loopne
ret
jo
clc
out
call
(bad)
push
push
arpl
inc
dec
inc
sbb
mov
(bad)
cmp
shr
sub
lea
push
add
sbb
jmp
std
sti
push
add
push
dec
push
push
xor
pop
pop
sub
cmps
dec
xor
test
rcr
xchg
adc
inc
enter
loop
je
cmp
sbb
enter
repnz
adc
aam
dec
sbb
jp
aaa
outs
xor
imul
add
cmps
push
sbb
dec
fs
inc
cmp
int3
or
out
pop
push
pop
push
je
je
sub
sbb
push
dec
je
dec
dec
jne
xor
add
pusha
jmp
adc
sbb
fst
add
(bad)
out
jmp
cmp
push
(bad)
(bad)
pop
add
mov
sub
pop
jmp
mov
ds
sbb
(bad)
adc
push
leave
push
pop
(bad)
xchg
cmp
pop
mov
ins
and
add
xor
xchg
ret
enter
test
lods
mov
or
movs
mov
jg
mov
mov
sbb
imul
push
sbb
sbb
unpcklps
sbb
push
pop
sbb
sbb
sbb
adc
sbb
sbb
sbb
outs
pop
sbb
jne
jns
push
add
or
or
mov
mov
push
dec
fwait
loopne
inc
add
cmp
or
push
into
enter
ds
add
adc
cmp
jne
mov
jo
out
xor
fcomp
cmp
add
lea
and
add
outs
in
xor
cmp
icebp
mov
pop
cs
jb
mov
popa
fstp
pop
test
movs
aaa
add
add
lods
int3
or
push
push
push
cdq
(bad)
out
int
or
jbe
je
movs
or
pop
jne
xor
pop
clc
mov
jns
pop
sub
scas
(bad)
cmps
push
add
lods
jno
cmp
sbb
je
push
pop
lods
pop
ret
pop
je
cmp
sub
sbb
jp
nop
and
add
cmp
hlt
cmp
stos
mov
inc
ficomp
mov
add
lea
test
mov
cmp
inc
mov
cmp
shl
call
jmp
ja
mov
sar
xchg
or
xor
cmp
cmp
and
inc
in
cmps
sbb
rcr
add
and
jmp
inc
into
mov
pop
add
jb
dec
enter
jno
jno
inc
test
lock
adc
aas
mov
(bad)
or
jne
es
jae
or
inc
test
mov
inc
add
cmp
jl
or
ja
push
adc
jmp
scas
sar
iret
imul
add
(bad)
add
jecxz
loopne
outs
pop
sbb
jne
push
mov
jo
sbb
ret
dec
or
mov
push
inc
push
cmp
sbb
mov
(bad)
jmp
lods
fld
mov
or
int
and
es
jge
in
xor
adc
jb
(bad)
cmp
jne
xchg
xor
jnp
jle
je
sbb
push
xor
inc
ret
push
sbb
or
cmp
in
push
imul
sar
or
add
cmp
jl
pop
jg
inc
push
mov
shl
clc
mov
push
sbb
sbb
rol
dec
and
xchg
lahf
jbe
iret
fisttp
push
mov
pop
adc
(bad)
mov
pop
lock
sbb
idiv
push
add
data16
jbe
or
fcmovb
dec
inc
out
jmp
xchg
out
pop
sub
ds
faddp
shl
sub
je
inc
inc
je
mov
push
or
and
in
add
jmp
add
add
fcom
mov
adc
mov
scas
pop
mov
push
inc
push
arpl
sar
mov
lods
fstp
jmp
mov
pop
lock
test
inc
add
cmp
jl
xor
in
adc
lods
sbb
or
jo
hlt
or
sbb
dec
dec
pop
fsubr
and
jle
adc
pushf
jl
jbe
call
xor
adc
fstp
fstp
and
push
push
je
inc
sbb
adc
sbb
adc
ds
cwde
cwde
enter
add
or
sbb
sub
ret
in
dec
sbb
fisttp
mov
or
mov
adc
jl
xchg
ret
jae
mov
nop
mov
add
xor
cmps
lock
in
pusha
push
lea
popa
or
lock
add
mov
cmp
inc
cmp
or
mov
add
mov
dec
enter
sub
push
leave
dec
push
aad
(bad)
fs
mov
(bad)
jg
add
leave
lods
adc
pop
rcr
and
rcr
pop
retf
dec
pop
pop
sbb
push
loop
inc
clc
dec
icebp
mov
pop
bound
or
packsswb
mov
mov
add
es
js
loopne
popf
pop
mov
and
mov
lea
ss
fimul
pop
or
mov
lock
or
pop
ret
push
jnp
sbb
pop
cmp
sbb
lods
(bad)
add
mov
test
dec
sbb
xor
or
outs
inc
jbe
or
lahf
aas
cmp
add
sbb
push
test
cmp
out
adc
adc
push
and
jno
mov
push
mov
dec
loopne
shr
push
xchg
jo
jg
xor
call
movs
sbb
loope
inc
test
(bad)
jl
jno
adc
adc
fld
in
rcl
jl
clc
(bad)
(bad)
enter
lods
rcr
inc
pusha
dec
frstor
ret
loope
pushf
mov
test
mov
je
ret
add
stos
imul
pop
mov
inc
inc
loope
sbb
cmp
cmps
add
push
inc
jae
push
cmp
adc
nop
mov
std
mov
hlt
loopne
add
or
mov
push
in
push
shl
add
cmp
lock
push
xchg
dec
cmp
scas
mov
fdiv
ins
je
push
push
dec
pushf
(bad)
and
cdq
adc
stos
add
push
je
xchg
loop
sub
push
ret
xchg
or
daa
popa
stc
and
push
mov
in
sti
add
mov
mov
jmp
loopne
sbb
pop
pop
add
push
push
add
push
mov
dec
mov
fbld
xchg
mov
and
sub
test
jle
mov
pop
jne
pusha
xchg
pusha
cmp
test
je
sbb
and
popa
movsx
pop
imul
es
outs
push
inc
fimul
jne
push
cmp
pop
push
in
in
lea
pop
mov
sbb
pop
cwde
popa
leave
mov
(bad)
test
(bad)
and
inc
mov
inc
loopne
push
loope
cmp
cmp
jmp
les
arpl
pop
push
push
mov
lea
cmp
les
pop
inc
adc
(bad)
fidiv
int3
ret
push
push
jmp
cs
aam
inc
sbb
add
ror
fsub
cmp
jmp
outs
mov
(bad)
sub
clc
cmps
and
dec
add
jp
sbb
add
aaa
jmp
pop
test
push
je
rol
push
es
or
adc
jmp
clc
or
daa
pop
mov
jno
lahf
xor
add
add
movzx
cmp
or
and
add
imul
sbb
in
jae
mov
mov
add
ss
inc
ja
in
dec
dec
push
push
or
xchg
retf
pop
pusha
push
mov
add
mov
jle
xchg
push
not
std
or
cld
cmp
jge
in
iret
pusha
push
xor
and
shl
lea
push
(bad)
add
imul
mov
add
sbb
(bad)
stos
ds
stos
adc
add
sbb
xchg
(bad)
and
jo
repz
sbb
jb
cld
dec
sbb
push
and
out
xor
mov
push
inc
xlat
add
mov
mov
mov
mov
cmp
mov
push
mov
mov
je
cmp
aam
inc
fcmovne
xor
dec
addr16
lods
je
and
dec
cmp
movs
loope
ins
adc
push
sub
sbb
ror
pusha
cmp
pop
je
je
lock
dec
sbb
fsubr
and
xor
adc
jmp
(bad)
lds
dec
mov
and
mov
lock
push
dec
movs
dec
test
test
dec
imul
out
inc
push
sub
ins
or
push
mov
arpl
pop
sbb
pop
in
fidivr
js
mov
jo
push
add
leave
(bad)
xor
sbb
imul
fsubp
xor
nop
add
jnp
push
push
cmp
add
push
cmps
mov
das
and
add
and
mov
neg
push
mov
test
data16
enter
adc
fisttp
mov
pop
push
cdq
mov
pop
cdq
and
or
adc
nop
sbb
cmp
cmc
and
pop
mov
fs
fisub
mov
push
loope
lock
loop
xor
sbb
sub
out
add
les
sbb
cmp
repz
outs
mov
inc
mov
fwait
leave
dec
aam
xor
dec
imul
add
cdq
dec
pop
dec
cs
pop
xor
pop
inc
inc
loope
enter
popa
fsub
adc
inc
or
pusha
pop
or
push
mov
fisttp
and
mov
mov
nop
mov
xor
xor
aam
(bad)
ds
cmp
jb
jno
mov
ja
in
ja
mov
and
and
js
cmp
or
jmp
push
ins
cmp
dec
jg
test
jle
dec
or
dec
xchg
jne
push
aad
or
mov
dec
clc
cmp
jge
cld
pop
push
cdq
or
repnz
inc
stc
sub
xor
cmc
je
push
stos
cli
adc
push
pop
mov
(bad)
mov
call
cmp
je
lea
cmp
pop
mov
popf
in
add
adc
inc
mov
adc
outs
aaa
dec
rcl
outs
add
or
inc
jbe
mov
sbb
xor
test
in
sbb
adc
movs
push
and
pop
ret
mov
push
add
add
popa
add
stos
add
sbb
mov
cmp
ret
cld
mov
push
mov
cmp
je
add
les
bnd
cmp
test
adc
add
test
je
mov
inc
inc
jg
in
out
fs
lock
inc
mov
jb
stos
sbb
mov
mov
push
ins
or
je
jp
ds
adc
xchg
mov
cmp
ja
cmc
push
cmp
sub
push
sbb
enter
adc
pop
imul
mov
cmp
xor
ret
nop
adc
cmp
int
cld
xchg
adc
push
lods
xor
scas
and
aaa
mov
jo
jl
movsx
push
mov
add
add
in
mov
ret
xor
push
nop
scas
bound
inc
dec
aaa
out
jnp
push
lea
jmp
mov
hlt
cmc
pop
push
pop
call
test
data16
jne
push
push
mov
push
cmps
je
sar
pop
cmp
inc
cmp
je
cmp
jne
adc
inc
jne
mov
mov
add
adc
adc
sahf
lods
push
add
push
pop
inc
stos
rol
(bad)
push
ret
jmp
std
(bad)
adc
jns
pusha
maxps
ret
pop
out
mov
inc
ret
mov
inc
mov
outs
adc
add
jbe
call
add
pop
sub
mov
sbb
xchg
fbld
cmp
test
mov
add
add
xchg
and
jg
inc
sub
mov
dec
cmp
(bad)
test
adc
mov
xor
or
xor
out
fmul
mov
cmp
inc
pop
idiv
fisub
xor
repz
pop
jg
and
mov
mov
mov
mov
inc
retf
push
shl
cld
outs
add
pop
and
test
sbb
lods
fild
je
push
push
cld
push
inc
fxch
lods
imul
inc
push
mov
adc
ffreep
xor
sbb
imul
add
jmp
sub
into
call
dec
arpl
je
jns
es
popa
(bad)
(bad)
jno
in
pop
push
inc
add
aam
std
inc
mov
dec
pop
push
mov
mov
mov
and
call
mov
mov
test
rol
and
jb
in
cmp
enter
sbb
outs
cwde
int3
es
cld
sub
sub
daa
(bad)
pop
push
int3
test
jno
jns
ins
or
std
test
repz
test
out
sbb
sti
dec
pinsrw
jl
cmp
pop
in
pop
mov
push
jl
or
sahf
cmp
dec
push
jl
shr
jae
jb
lds
jns
cmp
inc
in
sbb
fs
and
fisubr
inc
jo
adc
or
stos
add
adc
fst
arpl
in
pushf
xchg
in
test
mov
jp
jnp
xor
and
xchg
cdq
fcomp
xor
std
adc
stc
push
data16
xor
ja
and
cwde
add
fdivr
pop
jb
pop
sub
adc
sbb
mov
mov
out
push
fnstenv
push
leave
mov
ret
mov
xor
and
push
or
jae
iret
test
adc
xchg
test
mov
push
or
add
add
add
in
pop
ss
std
(bad)
jle
movzx
jg
cwde
cdq
adc
imul
es
adc
jg
ins
adc
sbb
add
and
pop
inc
movs
cdq
push
fwait
out
mov
(bad)
std
push
pop
add
jge
div
dec
pop
dec
stc
js
aas
in
mov
cmp
out
imul
inc
jne
loopne
push
into
jmp
cmp
jl
rol
sbb
shr
push
or
or
shl
add
add
and
enter
adc
mov
(bad)
ja
lock
or
jecxz
dec
adc
xchg
push
test
jmp
movs
push
(bad)
jno
jns
jg
scas
adc
adc
pop
(bad)
push
add
imul
adc
mov
in
add
inc
or
add
jmp
cmp
add
pop
mov
mov
adc
in
aas
ins
mov
sub
leave
cmp
cmp
sahf
ror
add
shr
shl
repnz
push
bound
cmp
cmp
test
or
je
push
out
gs
push
mov
sbb
push
(bad)
push
xchg
push
push
daa
js
dec
push
imul
push
lahf
or
add
daa
xor
call
ds
mov
shr
mov
fdivr
add
out
mov
test
aaa
mov
je
adc
daa
xchg
xchg
push
daa
jne
push
enter
xchg
mov
and
mov
jbe
dec
ss
sub
sub
hlt
loopne
or
shl
add
mov
add
(bad)
dec
stos
loop
fimul
adc
pop
cld
push
push
add
out
mov
sbb
push
push
mov
adc
inc
cmp
mov
jmp
xor
inc
cmp
jl
push
sbb
and
lock
dec
add
ret
pop
jge
inc
add
scas
jle
add
pop
cld
adc
imul
push
push
push
mov
(bad)
xchg
sar
adc
mov
in
adc
cmp
(bad)
(bad)
jmp
jmp
push
mov
cwde
or
xor
stos
sub
(bad)
enter
sub
or
mov
pop
xor
cmp
icebp
repnz
in
push
add
or
shr
ins
fisub
clc
cmp
inc
jmp
out
mov
add
add
push
pop
sub
test
aad
pop
call
push
sub
sub
fnstsw
ja
cmp
imul
lock
sbb
or
or
sar
mov
adc
fstp
jmp
ret
outs
mov
mov
inc
mov
jne
sbb
pushaw
(bad)
add
jmp
xor
sbb
pop
lods
mov
and
mov
xor
xor
pop
push
mov
sbb
add
adc
mov
sub
jg
push
js
dec
mov
pop
inc
add
push
aad
cmp
mov
hlt
xor
inc
or
mov
mov
loopne
lods
loopne
popf
pop
jp
cmp
push
xlat
add
in
inc
mov
js
inc
loope
mov
(bad)
jle
add
outs
jmp
lahf
aaa
add
inc
add
xchg
add
imul
sub
mov
pop
sahf
pop
jb
and
in
xchg
and
sub
popa
pop
and
daa
mov
ret
xchg
mov
mov
push
in
lods
pop
fist
add
fbstp
repz
xor
call
mov
cmp
jae
test
mov
xor
inc
xor
test
test
int
mov
xor
in
sub
imul
nop
jne
mov
cmp
jb
pop
repnz
in
outs
mov
call
retf
push
jo
push
mov
add
add
test
test
in
adc
cs
mov
je
mov
pop
sbb
inc
out
mov
pop
inc
cmp
or
jl
push
mov
or
jne
imul
push
mov
out
arpl
push
inc
dec
mov
inc
push
out
aaa
outs
mov
cmp
jl
jle
cmp
push
jp
or
xor
repnz
nop
add
pop
jne
mov
test
pop
(bad)
pop
lahf
push
loope
ss
push
(bad)
pusha
mov
pop
or
inc
pop
cmp
pop
pop
jle
mov
jp
sub
loopne
cmp
and
push
xor
push
int
gs
clc
push
sbb
test
movsx
pop
jg
fidiv
sub
adc
sub
adc
cmc
jge
test
cli
fidiv
mov
push
ret
add
mov
sub
(bad)
cmp
mov
fst
jecxz
push
or
mov
push
pop
inc
loop
(bad)
mov
dec
and
(bad)
and
mov
xlat
mov
ficomp
push
sti
pop
mov
loopne
adc
cmp
sbb
jge
jne
sar
(bad)
out
mov
pushf
mov
clc
ss
push
jnp
push
and
loope
push
sub
and
xchg
xchg
add
xchg
lahf
js
sub
js
mov
inc
jmp
bound
add
(bad)
dec
sub
sar
clc
push
jmp
das
mov
xchg
jbe
js
push
pop
lods
pop
mov
xor
pop
dec
push
dec
add
inc
adc
jmp
push
jmp
push
stc
mov
push
xchg
retf
dec
dec
jl
push
clc
(bad)
inc
adc
jmp
fcomp
dec
jne
push
push
cmp
lods
or
xchg
push
lods
iret
hlt
rol
pop
scas
das
add
mov
add
sub
cld
(bad)
dec
push
jmp
push
shr
test
sub
jno
add
inc
popa
out
push
rcr
movs
(bad)
lods
dec
push
sub
push
sbb
cmc
xchg
stos
or
xor
rol
inc
cmpps
test
and
fistp
pop
inc
pushf
aas
cs
mov
mov
mov
test
pop
sbb
jne
in
shl
mov
mov
ror
add
add
mov
sub
adc
ja
pusha
push
repz
repnz
xor
mov
mov
mov
cmp
call
add
in
into
cmp
adc
out
movs
adc
jle
or
adc
or
or
sti
(bad)
push
inc
inc
mov
jmp
push
push
into
push
movs
cs
xchg
jae
sti
lahf
sub
gs
or
adc
add
push
cmp
sub
sar
cs
das
jle
push
pop
cmp
jle
cmp
ror
jne
or
inc
outs
les
push
jmp
push
and
or
pushf
jmp
mov
pop
add
and
scas
inc
xlat
bound
xor
les
je
add
into
iret
shl
xchg
and
and
push
fidivr
push
or
add
sub
adc
adc
gs
fbstp
stc
cmp
adc
mov
not
cmps
sub
je
daa
and
add
test
jmp
loope
(bad)
adc
push
ret
add
mov
pop
jb
cmp
ja
aaa
pusha
callw
imul
mov
push
adc
xchg
xor
pushf
sbb
(bad)
pop
sbb
push
leave
icebp
out
sub
leave
fdiv
xor
cmp
int3
mov
inc
ins
push
mov
jle
cmp
int
jl
(bad)
adc
jl
jae
mov
pop
push
daa
or
je
sub
sbb
cmp
adc
je
in
mov
test
dec
push
(bad)
jmp
xor
mov
jl
movs
cmp
jae
out
jne
stos
add
add
outs
cmp
(bad)
push
jmp
push
out
mov
outs
cmps
cmp
mov
js
mov
pop
cdq
movs
sub
sbb
imul
push
adc
pop
jl
jmp
or
mov
inc
cmp
jle
push
jg
push
sub
or
shr
sbb
add
dec
jl
dec
xor
mov
cld
sbb
pop
cs
mov
dec
mov
sub
fcom
pop
mov
cmp
add
inc
clc
clc
sbb
and
mov
mov
call
push
adc
and
mov
jg
adc
jl
xor
xor
aas
pushf
in
lea
mov
loopne
mov
xchg
add
push
and
inc
jle
(bad)
cmp
imul
popf
and
pslld
push
mov
xor
sub
push
xchg
and
nop
out
adc
jge
shl
xchg
and
cmp
push
test
loopne
adc
dec
sub
xor
or
dec
dec
or
fcomp
mov
(bad)
cmp
push
push
add
shl
xchg
inc
lock
mov
loopne
imul
inc
cmp
(bad)
jo
pop
ja
xchg
call
push
mov
dec
fsubr
je
mov
jmp
pop
and
and
push
pop
test
xor
push
fmul
iret
jg
das
inc
adc
in
xor
jl
ret
(bad)
ins
pusha
adc
dec
mov
js
and
or
jmp
inc
and
and
mov
test
pop
inc
add
int3
arpl
loopne
sbb
rol
or
pushf
cdq
push
adc
sub
adc
scas
aam
into
xchg
sbb
lock
iret
push
push
xchg
mov
loope
mov
enter
add
aam
pop
pop
push
clc
mov
pop
and
jb
rol
cdq
into
inc
rol
jns
lock
inc
jne
mov
cmp
adc
sar
(bad)
or
fsub
jne
mov
or
std
hlt
inc
inc
dec
cmp
imul
xor
stos
pop
push
adc
push
push
xchg
hlt
mov
xor
das
xchg
cli
mov
out
fisttp
loopne
scas
push
push
inc
mov
mov
xor
mov
pop
or
jne
hlt
jne
mov
outs
push
inc
cmp
es
xor
icebp
lods
or
jo
push
and
outs
out
shr
sar
sub
aaa
push
lock
pop
sbb
add
adc
jle
adc
test
fdivp
stos
data16
into
add
jp
pop
ret
jle
in
jmp
jbe
mov
in
inc
xchg
shr
sar
pop
jmp
mov
add
retf
jle
push
sub
add
test
pop
retf
je
cmps
cwde
imul
push
scas
sbb
pop
jl
aas
fsubr
mov
aas
mov
(bad)
in
add
add
pop
movsx
int
and
pop
ins
imul
nop
ds
mov
rcl
test
test
adc
fdiv
inc
jae
jecxz
ror
fld
movs
dec
mov
adc
or
out
fcmovne
sar
movs
sub
ret
mov
and
pop
or
inc
push
psubb
dec
cmp
jl
into
sar
mov
cli
(bad)
and
cmp
dec
retf
mov
lods
jl
lea
out
xchg
ins
pop
xchg
aas
xor
sub
test
lock
inc
out
push
and
xor
in
lock
push
mov
sbb
ja
test
mov
sbb
mov
shl
or
out
test
lock
sub
add
xchg
out
sub
add
add
je
loopne
xor
mov
mov
adc
aam
bound
xchg
jbe
outs
and
(bad)
and
imul
loop
push
ss
or
popf
cmp
jmp
enter
int3
adc
adc
aad
and
inc
test
iret
ja
ficom
sub
xchg
ja
push
dec
xor
pop
mul
cmp
adc
nop
arpl
in
popa
adc
imul
add
mov
cdq
cmps
enter
outs
bound
enter
add
or
daa
pop
inc
cs
xor
pop
jo
mov
pop
pop
pop
add
jmp
push
mov
adc
ficomp
jbe
mov
cmp
sbb
movs
or
(bad)
xchg
fbstp
pop
or
sbb
sbb
inc
mov
sti
or
je
inc
sbb
add
test
sti
sbb
add
arpl
test
and
ja
mov
adc
cmp
jo
push
fs
mov
mov
lahf
test
cmp
je
adc
add
(bad)
dec
adc
add
ret
dec
xor
dec
pop
mov
loopne
adc
push
push
fs
or
add
pusha
ret
aam
stc
pop
push
adc
cdq
sbb
add
dec
add
cmp
pop
call
add
call
icebp
and
pop
daa
fbld
es
mov
outs
mov
pop
mov
test
pop
test
mov
mov
sub
ja
cmp
test
cmp
xchg
sub
pop
cmp
push
cmp
in
cmp
cmp
sub
pop
sub
mov
cmp
in
xchg
mov
cmp
cmps
mov
xchg
scas
mov
ret
rcl
aas
pop
out
ret
pop
push
cmp
xchg
cmp
push
jp
fbld
das
sbb
cli
ret
gs
sti
and
mov
inc
or
xor
out
or
scas
sbb
add
fimul
or
in
fs
inc
and
xor
fnstenv
sbb
hlt
add
jno
loope
inc
scas
sbb
outs
add
push
adc
push
and
cmp
cmp
sbb
dec
jno
in
xor
in
xchg
push
adc
xchg
inc
imul
adc
fiadd
ror
inc
popa
dec
mov
push
xor
xchg
jbe
or
mov
push
adc
jae
cld
adc
mov
in
mov
(bad)
mov
push
push
je
inc
pusha
cmp
cs
or
aaa
or
retf
shl
dec
adc
pop
mov
and
repnz
pusha
pop
push
cmp
sahf
ret
popa
push
and
pusha
shl
test
inc
movs
xor
ins
loopne
pop
add
(bad)
fidivr
pop
xor
clc
dec
dec
cmp
adc
add
je
dec
int
cmp
dec
in
inc
cs
adc
adc
in
or
push
pop
cmp
xor
cmp
sub
sbb
and
or
or
in
sbb
jnp
data16
clc
adc
pushf
call
inc
sub
sahf
jnp
mov
and
adc
nop
and
mov
cdq
ss
adc
aas
ds
out
push
dec
cs
sbb
pop
jmp
das
dec
fsubr
stc
sub
sbb
scas
xor
adc
xor
rcl
cmp
dec
(bad)
xchg
xchg
lea
mov
or
sub
out
xor
cmp
stos
sahf
sbb
xchg
jmp
mov
test
or
xor
xchg
jne
test
ins
sti
adc
idiv
mov
shr
and
rol
test
mov
sub
ficom
xchg
sub
dec
or
adc
pop
inc
mov
add
imul
add
pop
xor
mov
leave
and
xor
or
imul
repnz
push
jae
sbb
push
add
add
push
sub
sbb
add
pop
adc
std
cmp
int3
and
xor
jmp
repz
movs
in
daa
push
push
shl
pop
sub
daa
lods
test
jle
push
push
scas
movs
inc
sar
(bad)
std
mov
xchg
dec
adc
fcom
dec
popa
cmp
inc
mov
sti
call
mov
dec
pop
ret
add
popa
loopne
fadd
xchg
clc
lods
(bad)
out
sti
jmp
mov
dec
xor
inc
push
mov
add
push
(bad)
hlt
add
test
or
add
or
xor
jne
(bad)
pop
mov
mov
add
jmp
lods
popf
mov
push
jmp
hlt
retf
int
jle
jmp
std
add
add
cld
loopne
loope
adc
cmp
jne
mov
js
pop
cli
retf
add
add
test
jb
data16
pop
out
and
arpl
cmp
xchg
dec
gs
ss
add
add
jb
add
or
push
jl
mov
hlt
popf
sbb
add
sti
mov
rcr
mov
or
jmp
push
std
arpl
adc
inc
imul
mov
outs
les
xchg
ja
push
in
test
inc
shl
and
push
xchg
jmp
aad
(bad)
sbb
mov
add
mov
or
or
jbe
mov
jl
add
out
xchg
push
push
mov
mov
inc
mov
mov
into
lods
sar
je
ror
pop
repz
rcl
inc
lock
mov
sti
add
jmp
cmp
pop
sbb
adc
mov
mov
cmp
sbb
and
js
fild
in
pop
or
inc
pop
xchg
jmp
inc
je
push
xchg
push
rol
or
mov
or
iret
jae
arpl
sub
push
aaa
dec
push
out
fld
xor
std
aam
push
mov
mov
outs
rol
repz
sub
sub
(bad)
pop
push
aam
repz
cmps
jnp
sbb
cmp
mov
outs
dec
sub
add
sub
mov
mov
jg
mov
mov
test
jne
neg
sbb
sbb
and
pop
movs
xchg
hlt
mov
hlt
call
mov
pop
stos
or
rol
push
cmp
loopne
mov
cmp
jae
mov
and
xor
bound
xchg
push
dec
aas
mov
not
in
daa
push
int3
cmp
int3
or
jmp
into
sbb
out
mov
sbb
ins
push
and
stc
(bad)
hlt
jmp
jb
adc
add
retf
and
xchg
sbb
fs
adc
adc
stos
add
je
mov
or
imul
mov
sbb
jmp
shl
dec
add
cmp
je
cmp
je
cmp
jnp
fstp
and
push
movs
or
sub
fs
test
adc
inc
(bad)
cmp
dec
inc
add
pop
add
ret
(bad)
jg
inc
cmp
mov
cmps
jne
outs
rol
sbb
in
pop
or
mov
push
mov
sbb
stos
sbb
xor
and
push
adc
xor
sub
add
shl
push
mov
pop
add
aas
push
cmps
ds
jbe
and
clc
and
xor
sar
jnp
in
ins
in
js
js
mov
fcom
dec
jge
retf
jne
push
push
inc
movs
lock
xor
test
mov
push
sbb
xor
rol
test
ret
xor
call
das
(bad)
pop
aaa
push
jmp
and
int3
outs
add
push
es
adc
add
adc
pop
adc
inc
adc
add
xchg
sub
rcr
add
fstp
sbb
cmps
inc
xchg
fist
push
not
mov
pop
cmps
rol
fs
dec
adc
sub
jo
ds
mov
ds
mov
js
add
inc
inc
xchg
(bad)
sbb
cmp
ss
add
cmp
push
out
inc
mov
dec
lea
pop
add
xchg
and
mov
lods
(bad)
or
pop
xchg
not
pop
jmp
bound
and
pop
sub
xor
or
in
dec
xchg
pop
and
mov
mov
add
sbb
(bad)
(bad)
and
aaa
xchg
push
or
xor
sbb
cmp
push
call
xor
mov
sahf
(bad)
jne
push
fild
jb
mov
push
(bad)
pop
sub
mov
lods
cmp
(bad)
cdq
fcomp
enter
or
pop
sub
mov
add
push
add
je
and
xor
jmp
retf
daa
adc
int
adc
push
fcomp
test
test
dec
call
ret
dec
fild
inc
add
or
js
ins
push
shr
sub
or
sbb
mov
jmp
and
cdq
pusha
mov
xchg
sbb
xlat
or
jnp
xchg
adc
sub
or
sar
mov
cs
mov
and
xor
sbb
or
loop
or
jns
jle
inc
jo
outs
cmp
mov
inc
push
pop
adc
fwait
mov
push
adc
neg
inc
add
dec
sar
mov
out
cdq
mov
mov
call
or
dec
in
loopne
cs
inc
sbb
in
sbb
cld
mov
ret
sbb
test
mov
sub
hlt
test
mov
xchg
mov
jnp
loopne
das
add
sbb
mov
iret
inc
mov
cld
aaa
pop
pop
adc
aaa
dec
pop
jns
popa
ins
add
jnp
add
add
dec
push
or
jne
lock
mov
data16
pop
jmp
or
dec
push
pop
je
lock
mov
loopne
jecxz
pop
mov
xchg
xchg
scas
dec
add
inc
cmp
push
jmp
and
and
cmps
mov
jl
(bad)
or
into
out
mov
push
mov
jmp
jns
pop
ss
cmp
or
add
and
enter
shr
(bad)
jmp
and
inc
not
cmp
push
(bad)
jge
rep
movzx
sub
shl
push
(bad)
sbb
jg
stc
add
js
add
call
pop
xchg
add
pop
mov
push
out
mov
aaa
aam
out
enter
xor
sub
es
sub
or
add
cmp
mov
inc
loope
scas
addr16
shr
data16
inc
jge
dec
pop
jbe
dec
jnp
jo
sub
and
pop
(bad)
add
test
jle
cmp
adc
cli
call
xchg
fisubr
mov
add
add
ins
or
lahf
push
ret
sub
cmp
and
xchg
(bad)
push
aad
mov
mov
jl
cld
cmp
xor
fiadd
shl
mov
dec
in
out
inc
mov
xchg
add
xchg
add
call
rcr
mov
dec
outs
call
rol
je
mov
xchg
push
push
push
push
mov
iret
popa
jmp
fwait
cmp
mov
push
loope
xchg
jbe
shr
mov
and
mov
popa
adc
sbb
cmp
test
cmp
jne
mov
mov
(bad)
jl
lea
lods
mov
cmp
mov
cmp
fdiv
and
jo
imul
mov
pop
out
pop
adc
cmp
add
sbb
or
neg
aad
fcomp
mov
in
rcl
sub
sahf
enter
add
(bad)
cmps
xor
jmp
and
cmp
movs
xchg
or
mov
test
ss
cmps
mov
sbb
cmp
ins
mov
mov
sbb
jo
jno
add
jb
ffree
fmul
xor
xchg
or
jns
je
test
or
jl
cmp
or
push
mov
loopne
sub
lock
cmp
ret
push
icebp
mul
pop
push
pop
into
add
mov
cmp
aas
cmp
test
sbb
(bad)
loope
push
dec
push
bound
ss
retf
xchg
ja
and
adc
jne
int3
scas
pop
pop
clc
inc
bound
xor
shl
xchg
push
inc
sbb
jmp
push
jo
pop
push
push
retf
push
mov
hlt
cmp
push
push
xor
dec
mov
and
test
or
cmp
lea
mov
(bad)
les
rol
je
gs
sahf
xor
jo
or
mov
in
imul
loop
sub
xlat
or
fldcw
loope
inc
jmp
outs
xor
push
add
std
fwait
movs
or
xchg
mov
pop
pop
gs
in
addr16
pop
sub
push
push
into
xchg
or
mov
aad
and
push
xchg
push
sbb
add
lahf
repnz
add
or
mov
jecxz
(bad)
sbb
out
cmp
je
in
jmp
cmp
dec
clc
(bad)
adc
inc
add
mov
sub
rcr
add
imul
inc
out
test
jmp
pop
mov
xchg
out
cmp
je
adc
or
mov
mov
inc
out
daa
xchg
push
cmp
test
cmp
imul
stos
inc
mov
and
sub
inc
push
mov
xor
ror
sub
loop
add
test
dec
mov
mov
movs
adc
or
(bad)
aam
idiv
pop
or
cmp
pushf
cmps
adc
pop
ds
dec
aam
ss
addr16
pop
sbb
lea
jmp
mov
pop
pushf
or
and
push
je
iret
or
cmp
jge
cmp
or
push
push
jmp
pop
add
cmps
clc
pushf
pop
add
jmp
inc
cli
hlt
mov
je
inc
jl
mov
out
test
les
or
pop
xor
mov
sbb
or
push
mov
vpmaxub
pop
std
movs
repz
xchg
mov
adc
jno
xor
ins
lods
add
add
shr
mov
add
mov
and
add
push
test
sbb
mov
mov
imul
xlat
jno
adc
enter
mov
daa
add
je
xchg
in
mov
cmovns
add
(bad)
sbb
pushf
and
cmp
mov
stc
xor
inc
push
rcr
xchg
jmp
icebp
cmp
add
xchg
sbb
leave
out
out
add
sub
pushf
mov
ret
lock
jg
inc
push
mov
mov
and
repz
mov
pop
mov
sub
imul
out
add
jp
pusha
and
or
cld
lea
adc
jae
lods
push
pop
add
or
mov
shr
jb
sub
sbb
xlat
popa
mov
inc
out
or
add
mov
xchg
leave
jmp
adc
add
lea
sbb
aam
inc
jbe
stc
push
aaa
or
lea
(bad)
sbb
jne
push
js
aas
fstp
and
fistp
dec
sub
sub
mov
sahf
jne
cmp
mov
cmp
inc
cmp
or
cmp
xor
dec
add
cmova
test
xor
add
cld
mov
nop
or
sub
xor
leave
cmps
lea
add
movs
out
cmps
mov
sbb
inc
push
mov
adc
sti
aam
xchg
ret
and
sar
jmp
cmp
push
push
repz
add
push
inc
fdivr
sub
jno
push
jmp
and
je
out
popa
(bad)
push
pop
sub
imul
ins
pop
fmul
cmp
ret
xor
or
push
push
sub
lea
lock
dec
in
xchg
jns
or
pop
in
aam
inc
rcl
hlt
adc
add
pop
mov
add
lea
cmp
leave
ja
sub
mov
add
jnp
sub
rcl
mov
mov
push
inc
sar
movs
sbb
in
in
pop
pop
retf
mov
mov
push
js
xor
shr
shl
fisttp
loopne
dec
jne
jbe
and
or
ins
add
gs
add
and
inc
jmp
xlat
and
sbb
div
je
add
or
sbb
and
cmp
add
sbb
or
scas
ins
lea
inc
cmp
jle
call
and
or
stos
or
inc
mov
adc
sub
jg
out
or
and
ror
ret
or
jg
cmp
jl
inc
das
scas
jg
jle
loope
mov
push
jne
xor
adc
and
xor
dec
add
iret
enter
movs
lock
lea
test
ret
jnp
mov
push
cmp
jne
cmp
jne
inc
mov
push
inc
dec
enter
mov
push
or
and
dec
mov
adc
ins
je
mov
mov
push
fld
pop
inc
call
mov
lods
enter
cli
sub
jle
xchg
lods
loopne
push
mov
mov
sub
sbb
xor
cmp
mov
call
ucomiss
mov
mov
mov
loope
or
fldcw
test
es
push
inc
mov
shr
sar
int
imul
retf
inc
mov
jge
or
cs
cmps
xor
out
adc
cwde
dec
mov
inc
add
cmp
fsubr
sbb
or
dec
clc
or
test
cmp
enter
int3
aaa
and
add
or
cwde
out
bound
xor
scas
fucomi
ds
sub
or
je
xor
cwde
sbb
sbb
into
sbb
or
int3
xchg
pop
mov
add
and
clc
in
stos
rcl
rol
repz
add
push
mov
pop
je
jbe
les
adc
lock
add
sbb
xor
xor
mov
sbb
das
mov
(bad)
(bad)
es
cmp
es
pop
pop
sub
out
pop
jp
jge
adc
pop
push
jne
add
cmp
and
adc
jno
jno
xor
dec
push
mov
fidivr
mov
inc
push
sbb
(bad)
enter
adc
push
bound
addr16
add
mov
into
int3
add
jecxz
push
je
(bad)
push
adc
or
fstp
add
sbb
xchg
xchg
test
mov
mov
call
(bad)
ja
in
jmp
test
jns
push
pop
gs
xor
loope
or
pop
add
add
and
cmps
popa
cmp
mov
ja
or
data16
add
out
mov
push
sub
sbb
and
nop
xchg
push
sbb
inc
div
pop
ret
out
pop
(bad)
jmp
jecxz
mov
lds
xor
loope
je
lahf
mov
xchg
ds
cmp
retf
loopne
dec
stc
push
hlt
xor
dec
loopne
cdq
add
movs
dec
arpl
cwde
jb
jp
mov
add
mov
jl
scas
clc
or
sbb
dec
dec
sbb
inc
xchg
es
lods
sbb
lock
add
mov
arpl
js
icebp
clc
and
adc
pop
or
adc
outs
push
dec
pop
(bad)
adc
cmp
mov
rol
je
push
(bad)
sub
dec
push
inc
lods
std
dec
and
aam
adc
xor
js
je
cli
mov
(bad)
repz
(bad)
ds
mov
test
sub
add
cmp
adc
(bad)
les
xor
fst
nop
fsubr
xor
cmp
jl
lea
sahf
mov
sub
dec
pop
retf
nop
imul
add
or
das
xor
and
scas
add
mov
ins
mov
pop
repnz
cmp
outs
push
jbe
adc
ss
sbb
or
inc
rcr
inc
pop
push
add
pop
lock
add
xchg
je
nop
inc
test
dec
mov
push
xabort
clc
or
xchg
xlat
scas
clc
push
inc
fcom
push
fwait
loop
sysenter
aad
mov
test
je
mov
dec
call
add
add
test
push
je
mov
dec
ds
test
adc
pusha
jmp
cmp
rol
sub
daa
inc
sbb
xchg
sub
adc
add
dec
cmp
fsub
cmp
fiadd
push
cdq
test
add
jb
mov
(bad)
or
jne
sbb
stc
sbb
jne
push
mov
push
cmp
jb
sub
jne
mov
mov
jnp
pop
pop
scas
sub
pop
cmc
add
mov
mov
shl
test
ret
test
mov
jmp
sbb
test
fcom
jmp
jbe
shl
jb
jl
xchg
mov
in
fist
lea
shr
aam
mov
mov
rcl
pop
add
mov
inc
inc
inc
inc
cmp
jb
pop
cmp
push
mov
lods
xchg
mov
hlt
mov
shl
mov
imul
clc
push
into
push
or
std
cmp
pop
shr
out
push
and
sbb
je
ret
aaa
sbb
mov
and
dec
inc
adc
imul
dec
jmp
inc
and
or
add
test
clc
movs
movs
push
cmp
call
xchg
push
and
add
and
fistp
push
pop
jle
std
inc
add
aam
stos
push
mov
mov
inc
cmp
jl
cmp
adc
rcl
out
mov
popa
ret
mov
xchg
and
push
or
pop
mov
push
push
ins
add
inc
push
lea
mov
xchg
mov
and
ret
or
shr
or
adc
outs
dec
mov
pop
inc
jb
stc
hlt
mov
cmp
push
imul
jl
cmp
jle
cmp
data16
adc
jmp
lods
mov
fld
or
test
cli
jne
push
cmp
and
pushf
or
sbb
jmp
push
ja
cvtps2pi
push
ret
stc
lea
push
mov
mov
fcomp
push
xchg
mov
call
ret
xor
mov
and
dec
dec
push
inc
add
cmp
cmp
dec
and
cmp
das
or
je
fbld
cmp
jl
jmp
inc
or
(bad)
(bad)
rol
sub
dec
cmp
je
or
out
aad
xlat
push
push
sbb
in
mov
call
jg
adc
jle
jne
adc
sbb
inc
add
add
sub
(bad)
aaa
stos
xchg
jne
mov
out
data16
jbe
and
adc
adc
add
sahf
inc
pop
inc
enter
and
jle
out
sub
lahf
add
push
dec
xchg
fild
add
mov
dec
pop
movzx
inc
mov
pop
cmp
mov
adc
and
mov
or
sub
in
mov
inc
mov
fsubr
add
or
add
inc
pop
cmp
jle
cmp
xor
push
sbb
push
xchg
pop
adc
rol
or
push
xchg
adc
cdq
rol
mov
jle
popf
or
inc
mov
add
(bad)
clc
std
sub
mov
inc
in
mov
xchg
dec
adc
cmp
lods
mov
outs
sbb
sbb
push
xchg
rcl
(bad)
ins
in
push
dec
in
xchg
dec
sub
retf
loope
pushf
add
das
lahf
test
add
das
push
xlat
or
(bad)
and
dec
pop
add
clc
cmp
loopne
mov
jae
add
fsin
cmp
lods
sahf
jne
push
in
adc
jg
add
mov
ret
add
pop
and
add
cwde
lea
out
cmp
and
or
call
js
xchg
dec
imul
sub
sti
or
pop
cmp
push
mov
fsubr
cmp
xchg
fs
mov
test
cmp
lea
cmp
jo
pop
shl
pop
in
loopne
xchg
push
sub
jbe
fldcw
xor
dec
aaa
jne
jl
push
enter
jl
ins
pushf
fwait
jb
mov
sbb
pop
or
sbb
pop
adc
loopne
jmp
cmp
sub
or
sub
adc
jbe
cmp
pop
cli
pop
test
pusha
mov
aas
push
sub
jae
sub
push
sub
and
sbb
sub
adc
add
jmp
je
dec
adc
lea
xchg
xchg
loop
dec
(bad)
mov
aam
pop
add
in
add
or
mov
cmps
mov
in
movs
repnz
pop
addr16
scas
add
imul
xor
ins
in
int3
push
or
pop
les
out
in
inc
inc
pop
pusha
(bad)
leave
add
fldcw
sbb
fstp
aam
movs
test
jge
sahf
out
out
sbb
loop
mov
mov
inc
jmp
repz
jne
jo
adc
ja
pushf
popf
xlat
push
inc
adc
jp
add
xchg
adc
inc
hlt
movs
loopne
daa
sahf
test
cmps
jns
shl
std
mov
lock
dec
enter
gs
pop
test
or
jbe
pop
pop
dec
pop
inc
fcom
adc
sub
scas
jno
mov
jne
rol
ret
inc
xor
mov
cmp
cmp
adc
cli
aas
mov
adc
imul
dec
inc
xlat
xlat
xlat
adc
aaa
pushf
sub
mov
add
sub
or
test
sub
int
cmp
adc
add
jmp
lock
ret
add
sti
idiv
repz
je
push
push
call
push
push
adc
daa
add
mov
call
std
fs
loop
xlat
mov
dec
add
(bad)
jae
sub
dec
bound
jno
add
cmp
jae
imul
clc
test
test
fisubr
mov
mov
test
sub
adc
repnz
mov
xor
std
cs
pop
pop
sbb
pusha
popa
jo
xor
lods
inc
por
or
pop
aas
push
aas
cmp
gs
jo
jle
scas
pop
or
or
test
nop
mov
js
leave
rcr
add
retf
icebp
dec
add
jo
cwde
cdq
ins
cmp
jae
ret
loop
sub
bound
je
adc
or
fnsave
rcr
push
mov
rol
call
cwde
ins
sub
add
je
adc
inc
push
in
and
push
sbb
sar
push
(bad)
pop
movs
imul
and
repz
adc
push
pushf
neg
push
push
loop
adc
test
push
push
mov
outs
or
dec
ds
test
add
rcr
inc
clc
daa
(bad)
mov
and
das
(bad)
mov
cmp
xor
inc
or
push
jp
cld
dec
mov
(bad)
jp
push
push
and
pop
nop
mov
sub
adc
add
mov
jle
jmp
push
stc
ins
push
ja
pop
gs
push
mov
push
jg
or
cmps
push
adc
daa
cmp
arpl
mov
dec
inc
out
push
cmp
popa
lds
inc
mov
movzx
push
shr
push
push
mov
call
leave
test
call
adc
pushf
imul
push
mov
call
dec
push
rol
setne
mov
test
imul
add
push
and
xchg
sub
or
adc
call
nop
rcl
lock
loopne
mov
scas
push
mov
cmps
jg
mov
sbb
fiadd
mov
xlat
add
js
or
mov
mul
cmps
and
std
mov
in
push
cmp
loopne
mov
mov
push
hlt
and
mov
push
lock
movs
push
xchg
add
xor
mov
pcmpgtb
and
xor
scas
call
movs
sub
(bad)
in
sub
adc
push
push
sar
push
push
test
mov
add
cwde
sbb
stc
mov
jg
lock
in
add
loopne
arpl
mov
pop
push
loopne
cli
xchg
dec
mov
push
mov
adc
(bad)
cmovnp
shl
test
mov
dec
push
and
and
(bad)
jne
cmp
int
adc
fsub
push
movs
add
ins
pusha
add
adc
les
and
add
jg
push
ret
mov
jne
neg
(bad)
jne
dec
mov
mov
dec
shr
movnti
sbb
lods
or
leave
push
and
in
in
sbb
xchg
sub
and
cmp
mov
and
(bad)
jp
push
xchg
por
sti
add
popa
aaa
mov
aad
pusha
xchg
ror
pop
cmp
cmp
pop
push
xor
add
adc
push
jns
push
in
rcl
test
mov
imul
mov
repnz
add
dec
xor
pop
cmp
in
cmp
stos
ret
adc
push
mov
adc
stos
bound
ja
cmp
out
jp
mov
in
add
jo
in
xlat
mov
ds
cmc
and
pop
nop
xchg
inc
jno
push
ins
cwde
push
xor
push
test
outs
add
mov
mov
mov
xor
je
mov
inc
jecxz
inc
adc
mov
ds
sbb
pop
xor
and
das
add
xlat
inc
xor
sub
sbb
adc
xchg
sbb
test
arpl
mov
sar
(bad)
lods
cmp
psrlq
pop
push
or
out
push
fild
scas
pop
mov
and
not
sar
cld
ficom
cld
inc
enter
lds
mov
and
adc
xchg
popf
ins
cmp
cld
jmp
in
fist
ins
popf
xor
sbb
xchg
sahf
push
mov
push
jl
scas
pop
and
xor
ss
and
daa
inc
add
pop
push
fdivr
imul
fwait
outs
fwait
ret
sbb
loop
mov
leave
adc
not
push
loope
dec
dec
xlat
je
push
or
stc
sub
rol
mov
(bad)
loopne
or
inc
mov
sub
test
or
push
inc
dec
ins
jl
push
jmp
aas
je
xor
popa
inc
mov
(bad)
dec
add
push
xor
fistp
or
xchg
jo
mov
sbb
mov
push
or
in
imul
inc
add
inc
jecxz
sahf
cmp
xor
add
push
popa
push
add
add
mov
fdiv
add
push
push
cmps
int
push
int
mov
adc
xchg
ret
test
push
(bad)
repnz
or
xchg
add
sar
inc
ins
push
inc
icebp
jne
cmp
xchg
dec
lods
sbb
cmp
adc
or
shr
xchg
sbb
add
adc
bound
add
jecxz
aam
jns
ins
push
ret
xor
or
xchg
cmps
cmp
xor
cmp
adc
(bad)
xchg
and
scas
mov
fstp
mov
jl
adc
imul
pop
test
or
test
shr
pop
pushw
lock
scas
fsub
popa
mov
adc
mov
nop
and
ret
jnp
add
push
push
mov
jle
jae
push
das
nop/reserved
test
gs
dec
inc
push
int
mov
mov
mov
cmp
mov
test
mov
bound
arpl
push
ret
in
pop
rol
mov
xchg
mov
mov
loopne
or
mov
add
inc
loopne
add
in
sbb
call
(bad)
jg
jae
jge
jg
out
mov
test
outs
mov
inc
inc
push
ins
in
mov
pop
xor
fs
xor
(bad)
mov
jne
push
push
mov
aad
icebp
pop
and
scas
push
sbb
jp
jle
enter
lds
push
daa
retf
mov
cmc
pop
pop
cmp
mov
fs
js
xchg
inc
dec
push
test
or
loop
lea
dec
inc
dec
dec
adc
enter
add
mov
idiv
bnd
push
movs
loopne
mov
or
mov
es
out
add
test
sub
shl
and
push
xchg
jnp
adc
cmp
cld
add
cmp
sbb
leave
adc
mov
push
(bad)
push
ins
cmps
(bad)
adc
push
xchg
jge
and
inc
mov
cdq
je
(bad)
cmp
sbb
push
push
sbb
adc
in
aaa
jmp
or
sub
push
lods
mov
xchg
lock
jno
fcomp
adc
mov
push
add
mov
sub
cmps
shl
mov
and
and
push
popf
jns
in
dec
clc
loop
cmps
cdq
add
(bad)
xor
add
mov
inc
push
push
repz
dec
mov
nop
inc
outs
or
or
js
packuswb
popf
out
sub
mov
add
stos
sub
pop
loope
push
adc
rcr
and
add
and
push
loop
nop
adc
add
je
mov
pop
std
and
xchg
(bad)
adc
mov
test
je
loopne
ret
pop
test
mov
mov
arpl
dec
int3
jg
cmp
jg
and
cmp
inc
ja
js
cld
cmp
and
cmc
(bad)
adc
ds
inc
idiv
or
stc
push
jmp
and
(bad)
jl
and
inc
call
mov
pop
xchg
pop
je
mov
sub
sahf
test
iret
inc
push
inc
push
lahf
adc
and
cmps
push
mov
adc
cs
and
movs
test
enter
sub
adc
inc
pusha
movs
or
(bad)
hlt
out
jge
xor
mov
sbb
out
push
lea
or
or
and
push
xchg
fisub
jns
mov
hlt
jns
add
leave
jae
lahf
add
jp
or
sbb
or
adc
mov
cmps
stc
push
rol
inc
sbb
inc
pop
jl
push
jb
or
nop
dec
push
dec
fst
jmp
push
xchg
lock
stos
movs
lock
aad
adc
leave
dec
dec
call
ret
call
mov
push
rol
inc
pusha
and
outs
adc
push
mov
sbb
or
adc
cmp
icebp
das
je
xchg
mov
or
dec
jmp
dec
mov
out
push
fidivr
jo
cld
mov
push
adc
movzx
push
sbb
jmp
outs
sbb
cmp
jne
push
push
test
gs
fist
(bad)
push
cmp
jb
cmp
ffree
jmp
lods
xor
pop
je
dec
fild
mov
xor
dec
fadd
pop
push
cli
push
leave
jmp
enter
mov
sub
(bad)
int3
adc
inc
xor
imul
adc
add
mov
push
fistp
cmp
inc
retf
pusha
lock
popa
mov
mov
push
xchg
and
pop
sub
dec
xor
inc
mov
push
outs
lds
sbb
(bad)
jle
cmp
fst
sub
test
jl
mov
push
inc
jne
mov
scas
and
mov
aas
test
loope
jne
loope
add
or
scas
inc
hlt
pop
mov
xor
add
xor
sbb
push
push
sti
push
xchg
in
ja
dec
lahf
or
jae
jo
sub
das
adc
test
xchg
or
fs
inc
push
cmp
mov
inc
add
or
movs
loop
push
add
jo
sub
cmp
sbb
push
xor
dec
(bad)
xor
das
sub
pop
or
clc
add
cs
or
push
cmp
pushf
mov
xchg
and
xchg
jp
js
setb
xor
jb
dec
sub
add
cwde
in
cmp
sub
and
ret
nop
inc
and
inc
mov
jne
ja
mov
test
dec
dec
jne
or
mov
out
jmp
push
mov
jle
sti
and
or
dec
adc
mov
int
sar
sub
push
mov
sub
pop
sahf
clc
mov
loopne
push
xchg
jge
movs
add
inc
test
(bad)
call
inc
cmp
shr
dec
jns
pop
test
ret
mov
or
cld
pop
imul
inc
add
pop
add
dec
or
lea
add
add
pop
icebp
push
push
xchg
add
and
pop
sar
dec
or
inc
mov
push
add
xor
inc
add
in
jge
jbe
xor
outs
add
cld
sbb
imul
pop
or
sub
mov
movs
adc
dec
sbb
mov
adc
fbstp
or
dec
aam
push
push
scas
push
xchg
mov
test
clc
fs
jb
push
inc
mov
test
add
xchg
inc
jbe
mov
jl
jmp
pushf
mov
test
pop
mov
inc
aaa
add
inc
inc
mov
movs
mov
add
or
leave
inc
fwait
dec
sub
xor
and
inc
inc
aaa
jmp
popa
jl
adc
jg
push
or
add
dec
shl
inc
and
movs
xchg
aam
xor
lock
dec
rol
mov
add
ss
imul
push
dec
movs
pop
sahf
out
mov
(bad)
and
add
add
adc
push
or
sbb
ret
jo
xor
pop
loopne
(bad)
hlt
push
mov
xchg
push
xchg
or
or
outs
add
outs
cmp
lea
mov
pop
inc
push
sub
push
jb
xchg
pop
cli
xor
add
inc
nop
out
adc
pop
push
mov
jbe
add
dec
add
jle
int
sbb
push
xchg
retf
cmp
push
sub
pop
or
sbb
jo
nop
je
add
es
fadd
xor
push
retf
lock
(bad)
mov
adc
add
mov
pop
push
pop
test
popa
sahf
and
cs
rcl
push
sub
mov
je
mov
outs
sub
pop
inc
mov
push
fst
push
or
fcom
jb
sti
fisubr
es
lea
gs
popa
(bad)
push
adc
jo
test
pop
pop
pop
ret
ja
jp
dec
add
jmp
pop
cld
out
adc
adc
and
jno
add
and
imul
addr16
pop
inc
loope
jo
xchg
xchg
adc
shl
fidiv
xor
push
aaa
test
in
add
sub
mov
je
jno
push
push
leave
and
mov
sar
pop
aam
arpl
xor
sbb
xchg
or
push
push
outs
out
xchg
dec
(bad)
pop
cmps
and
adc
lea
push
sub
je
dec
je
dec
and
push
out
push
jmp
sub
adc
add
jae
scas
sub
pop
xor
mov
inc
test
or
and
sbb
add
or
je
scas
dec
cld
sbb
not
or
(bad)
ret
sbb
dec
shl
pop
loop
jmp
add
and
pop
imul
das
out
mov
and
scas
cmps
adc
mov
arpl
or
test
not
or
movs
popa
imul
xor
popa
push
scas
ffreep
sub
mov
lock
jge
sub
jp
add
mov
add
or
into
fmul
add
mov
icebp
pop
push
mov
ja
add
bound
xor
and
inc
aas
hlt
inc
pop
sub
push
dec
push
lds
(bad)
mov
inc
lea
fs
sub
xchg
in
aaa
jnp
dec
inc
add
and
cmp
jae
sbb
bound
pop
xor
mov
xor
cmps
imul
pusha
sbb
xchg
add
and
cmp
add
add
aaa
push
pop
and
xor
or
mov
and
mov
dec
push
popf
clc
into
pop
movs
cmp
(bad)
mov
mov
pop
inc
lods
push
mov
mov
and
fcmovnb
out
inc
add
mov
dec
inc
push
add
xchg
sub
outs
movzx
push
cmp
add
push
les
enter
and
sub
and
or
(bad)
pop
jmp
add
or
shr
push
jnp
mov
imul
add
adc
push
stos
popa
lock
add
push
mov
test
lea
fistp
imul
inc
adc
aas
pmuludq
or
inc
add
inc
add
xor
mov
shl
int3
push
js
or
pop
add
jbe
jo
or
and
and
push
(bad)
test
add
clc
fisttp
xor
pop
lea
cmp
pop
sub
push
sub
add
add
push
add
shl
mov
push
popa
jmp
or
cmp
pop
xchg
icebp
fstp
sub
mov
imul
sahf
(bad)
adc
or
clc
cmp
jae
and
sub
ss
je
xor
out
sub
add
sub
push
lea
push
push
jae
out
mov
push
push
iret
add
rcr
sub
call
add
mov
inc
add
shl
mov
xor
mov
cmp
cmc
push
pop
adc
push
(bad)
jbe
push
imul
push
xor
cmp
inc
ja
jb
jge
jns
jmp
sub
adc
mov
or
cld
mov
jl
aad
icebp
(bad)
cmp
jg
loopne
and
xchg
push
push
inc
neg
sbb
and
retf
ret
push
inc
sub
inc
jo
adc
inc
pop
jno
xchg
push
adc
mov
push
sbb
xor
inc
cmp
jl
jmp
inc
fild
cmp
jge
adc
jmp
test
xchg
(bad)
(bad)
jmp
jge
bnd
dec
enter
pop
or
mov
mov
imul
fstp
add
jmp
dec
jns
sbb
mov
or
(bad)
or
mov
shr
xor
lahf
adc
jp
inc
stos
es
or
push
adc
sbb
mov
and
mov
adc
push
daa
sub
inc
inc
call
neg
sub
push
push
push
pusha
outs
or
sbb
push
or
jo
inc
mov
or
arpl
adc
dec
mov
pop
mov
cmp
inc
fs
(bad)
pop
and
repnz
pop
ins
push
push
dec
cmp
jne
jb
mov
mov
xchg
dec
xchg
aas
sub
ret
push
ds
and
out
pop
add
repz
add
push
xor
cmp
push
mov
ja
mov
in
push
mov
dec
cmp
je
movsx
jmp
cmps
gs
fidiv
push
cmp
popa
fisttp
loope
inc
push
xlat
sub
pop
jns
test
pop
das
pushf
dec
lahf
sar
out
push
loop
push
push
fadd
test
or
je
add
and
and
push
rcr
push
inc
lea
xchg
add
add
aas
adc
xor
je
aaa
pop
ja
mov
bnd
jle
in
pop
or
sub
add
cmps
adc
mov
in
(bad)
test
xor
adc
or
push
push
call
sub
adc
adc
adc
sub
in
lock
call
inc
sub
loope
cs
call
or
mov
xchg
mov
cwde
adc
sbb
mov
xor
adc
push
lea
add
ret
and
jecxz
or
test
and
hlt
imul
cmp
into
push
mov
jl
cmps
shl
or
cmps
add
pop
and
mov
inc
or
mov
sahf
xor
add
movs
sub
xor
pop
not
pop
inc
not
les
jge
push
fcom
int3
add
or
je
push
sub
xor
into
and
in
(bad)
sub
jne
and
inc
cmps
and
loope
push
adc
adc
out
mov
xchg
pop
sti
cmp
jne
push
or
add
push
add
imul
imul
cmps
mov
stc
add
sti
cld
std
push
mov
inc
push
loopne
cmp
dec
int
std
cs
jecxz
or
xchg
inc
sub
stos
push
jmp
ss
in
jmp
in
(bad)
in
mov
outs
jl
lahf
mov
xchg
sti
push
push
adc
inc
add
fcom
repnz
arpl
xor
inc
jno
stos
mov
jne
dec
push
push
fcmovnb
dec
or
add
cmp
(bad)
cmps
sar
jne
hlt
pop
popa
gs
cmp
je
cmp
loopne
adc
jne
call
adc
jbe
test
or
push
and
inc
mov
pop
jbe
cwde
and
jb
cmp
pop
xchg
sbb
xor
mov
push
mov
mov
das
adc
and
cmc
mov
ret
in
fimul
sub
push
push
je
add
push
push
adc
push
fs
jmp
stos
sbb
pop
push
js
lea
ja
mov
ja
je
adc
cmps
sbb
(bad)
popf
(bad)
sbb
aaa
push
or
into
sahf
push
dec
add
ja
scas
dec
cld
shl
inc
or
inc
sub
push
xchg
imul
xor
aaa
aaa
ins
test
or
jmp
add
jmp
or
sub
sub
jmp
js
push
add
cwde
inc
push
imul
and
shr
scas
mov
sbb
or
cdq
test
jbe
add
sbb
cwde
jbe
mov
pop
sub
and
out
loop
lea
add
adc
jg
leave
adc
fs
mov
mov
add
dec
or
(bad)
in
iret
repz
fucomi
out
idiv
pop
es
push
dec
add
adc
adc
loopne
adc
inc
sub
sbb
inc
mov
cmp
inc
daa
add
pop
pusha
and
dec
inc
and
pop
cdq
xchg
nop
add
push
sbb
and
adc
ror
jmp
and
shl
mov
adc
inc
xchg
push
mov
inc
int3
dec
inc
xchg
inc
mov
rep
add
movs
ret
sub
push
enter
mov
adc
loopne
sbb
std
scas
dec
mov
int
cmp
sbb
inc
add
cmp
mov
and
mov
shl
std
cmps
sub
fist
pop
sub
add
sub
dec
ret
call
nop
xlat
push
xchg
rcr
sbb
mov
push
pop
test
jle
sub
ss
inc
or
jne
ss
push
adc
inc
sbb
jo
js
push
in
clc
in
movs
rol
xchg
inc
inc
int
cmp
inc
shl
es
or
xchg
cmp
cmp
fsubr
(bad)
dec
push
inc
xor
or
and
dec
and
(bad)
mov
jbe
pusha
xor
cmp
popf
adc
sbb
rcr
add
les
sbb
shl
ins
jne
fwait
or
sub
and
sub
inc
test
aas
lods
or
inc
or
(bad)
jne
jne
test
pop
movs
movs
dec
mov
scas
add
xor
(bad)
mov
add
jne
fld
fstp
jmp
sub
cmp
fwait
cmp
or
adc
or
add
jle
jns
popf
xor
push
outs
xor
jb
add
and
lock
push
loopne
dec
push
cmps
call
out
pop
push
out
pop
xor
sub
or
jg
mov
mov
ret
push
sbb
stc
xchg
push
(bad)
and
call
mov
mov
mov
and
lea
mov
lahf
rol
adc
jmp
outs
xchg
pusha
and
rcr
(bad)
call
cmp
jne
jmp
mov
jmp
mov
dec
push
js
dec
js
mov
fs
adc
cwde
sar
bsr
cli
mov
or
out
fld
loop
jle
or
pop
mov
sahf
loopne
xor
jmp
and
or
(bad)
push
jl
loopne
aam
push
mov
mov
push
pop
jecxz
xchg
inc
cmp
jl
push
push
dec
add
inc
les
jle
(bad)
mov
sbb
push
inc
inc
xor
rcr
mov
jg
jl
mov
inc
xor
jb
push
push
clc
jo
enter
adc
push
das
dec
nop
add
xor
cmp
mov
sub
adc
lds
je
cmp
or
inc
push
mov
or
adc
fidiv
icebp
ret
jp
xor
pop
mov
sub
(bad)
push
(bad)
or
div
mov
mov
sbb
ror
mov
push
js
adc
push
add
or
add
ja
sahf
and
sbb
pop
adc
std
xor
aad
scas
mov
(bad)
mov
sub
or
sbb
adc
and
inc
cmps
shl
and
inc
xor
sbb
loop
aad
xchg
mov
and
sub
dec
or
sub
jp
popa
mov
into
add
outs
sub
mov
and
pop
test
das
mov
add
bound
push
ins
xchg
push
jnp
jmp
push
sbb
cmps
pop
push
dec
es
(bad)
lock
or
add
and
dec
dec
loop
and
and
fldcw
and
ja
jmp
mov
mov
(bad)
adc
jnp
or
inc
push
mov
sbb
sbb
push
add
lahf
fld
movs
div
test
jmp
sar
shl
loop
or
iret
jge
mov
iret
mov
push
bound
jmp
push
(bad)
addr16
lea
push
fwait
xor
jmp
push
adc
add
ret
xor
mov
jo
inc
pop
lock
cmp
push
int3
push
jmp
aad
push
add
pop
bsf
jbe
and
or
and
das
add
push
xchg
cmp
adc
push
dec
inc
mov
cmp
cmp
lock
imul
inc
inc
xor
pop
out
icebp
adc
and
(bad)
pop
and
push
test
es
ret
jle
test
mov
add
fadd
push
mov
sub
xor
cmp
cmp
inc
push
jp
lock
js
jle
fidivr
sbb
cmp
popa
stos
mov
mov
gs
mov
mov
mov
jl
clc
test
mov
std
push
and
pusha
xchg
ror
(bad)
jmp
shl
scas
push
adc
xor
ja
and
jmp
sub
mov
test
jmp
or
inc
jmp
pop
mov
pusha
inc
js
cs
fiadd
inc
dec
and
xchg
and
or
ret
push
mov
add
pop
xlat
repz
dec
dec
add
xor
add
push
dec
je
add
mov
pop
pop
xor
and
pop
inc
iret
(bad)
xchg
sub
or
and
rcl
or
pop
(bad)
mov
mov
pop
add
sbb
clc
inc
and
jne
and
inc
jmp
add
cld
(bad)
aam
cmp
das
xor
and
int3
sbb
push
jmp
jmp
jmp
test
pop
mov
(bad)
fldz
jmp
fld
adc
sub
fild
icebp
dec
rol
jg
je
dec
sub
cmps
inc
add
aaa
dec
jne
outs
data16
lods
xchg
(bad)
and
adc
cmp
stc
retf
int3
js
sar
xchg
rcr
adc
loope
call
or
adc
add
adc
cmp
aaa
sbb
jmp
dec
push
icebp
push
je
xor
es
mov
adc
(bad)
test
add
dec
ins
push
inc
sbb
pop
adc
clc
jmp
stos
jp
push
popa
push
idiv
sbb
imul
push
dec
sub
adc
dec
mov
pop
xchg
add
(bad)
cmp
cmps
shl
pop
adc
dec
dec
push
out
mov
es
sub
lock
cmp
cmp
sub
pop
mov
fwait
adc
mov
jp
lock
inc
inc
inc
pop
cmp
mov
scas
aad
dec
and
mov
aad
push
clc
mov
(bad)
sbb
fild
fnstenv
das
test
fnstcw
or
jl
jmp
dec
dec
dec
dec
shl
pop
mov
and
lods
sub
ins
aaa
inc
aam
les
dec
and
jmp
enter
sub
or
fidivr
xor
dec
(bad)
dec
in
mov
dec
daa
mov
push
icebp
test
pop
add
in
xchg
mov
or
rcl
lods
pop
pop
mov
int
pusha
push
add
test
pop
test
mov
push
test
inc
or
adc
in
mov
mov
outs
ret
adc
test
xor
push
ret
in
cmps
icebp
sbb
push
loope
adc
mov
mov
inc
jae
inc
cs
test
and
inc
inc
cmps
test
ret
popf
sbb
adc
stos
jg
mov
scas
test
cmp
pop
nop
test
mov
xchg
mov
daa
iret
repz
pop
out
sbb
ror
add
jle
push
xchg
sub
das
fdiv
dec
test
cmp
je
mov
aas
push
inc
dec
lock
push
cmp
cld
cmp
add
aas
cmp
fadd
in
sub
jns
(bad)
repnz
and
pop
fnsave
fstp
bound
lods
pusha
les
in
mov
repnz
cmp
push
pop
jmp
inc
ret
xchg
dec
popa
js
pmullw
and
pavgb
ins
mov
xchg
mov
xchg
(bad)
cmp
and
jmp
not
or
xchg
(bad)
adc
in
fs
cmp
movsx
bnd
ret
pop
fld
fucomp
sub
fdiv
pusha
ins
sub
mov
sub
mov
ds
(bad)
mov
push
pusha
add
adc
fnstcw
(bad)
aam
mov
pop
jmp
or
and
add
data16
test
int
in
mov
push
fldenv
mov
dec
gs
ret
cmps
push
shr
mov
outs
adc
sub
xor
lods
pusha
mov
repz
and
add
shl
inc
in
lea
and
or
lahf
xor
mov
out
popa
push
pop
dec
cmp
push
jmp
out
push
mov
pop
sub
je
fld
cmp
adc
push
sub
lock
jo
push
push
cmc
inc
test
xchg
mov
pushf
and
mov
neg
(bad)
and
js
pop
lea
add
cmp
jg
in
or
test
mov
and
test
push
repz
sti
jp
repz
cmp
push
add
stos
clc
or
dec
cmp
mov
xor
mov
adc
mov
loopne
fisttp
adc
mov
xchg
inc
ja
js
shl
jl
push
or
dec
mov
mov
add
test
add
cwde
lods
mov
add
shl
or
or
push
aaa
pop
jle
lds
clc
push
test
inc
mov
fs
movs
test
js
sbb
(bad)
iret
push
hlt
mov
add
push
jge
loope
pop
ror
cmp
mov
jle
loope
xor
adc
mov
scas
repz
nop
cmps
(bad)
hlt
mov
sbb
mov
jmp
add
or
lea
ret
outs
ins
xchg
ins
out
mov
arpl
lock
pop
sar
leave
push
pop
xor
lock
aad
mov
shl
mov
pop
(bad)
repz
cmp
repz
movs
lods
fistp
inc
jbe
inc
push
pop
sub
pop
fidivr
push
mov
cs
ss
enter
pop
sbb
jns
push
addr16
jnp
imul
mov
push
(bad)
jg
cmps
mov
or
jl
iret
test
repnz
fdiv
popf
sub
loopne
mov
add
mov
ins
nop
mov
mov
addr16
loop
xchg
push
sub
mov
cwde
mov
call
add
dec
and
jle
iret
and
cmp
adc
mov
dec
cmp
push
fcomp
rol
add
push
pop
ret
adc
sbb
fnstenv
push
push
fdivr
or
test
pusha
test
xchg
daa
aam
inc
test
or
xchg
jmp
cmp
std
iret
mov
push
adc
jmp
xor
clc
inc
sbb
lea
cdq
cmps
enter
sub
fcomp
and
adc
je
mov
and
das
jnp
mov
adc
movs
outs
div
adc
mov
movs
lahf
loopne
inc
lods
fadd
fstp
add
or
cmp
je
mov
jp
adc
inc
adc
ror
repz
sbb
cmp
pop
mov
mov
mov
enter
mov
sub
cli
ficomp
test
shr
int
pop
xchg
mov
jmp
rol
add
sub
sbb
lock
mov
push
test
add
adc
scas
add
adc
pop
xchg
and
(bad)
cmp
push
scas
add
int3
xor
ds
aas
call
scas
iret
in
js
xor
add
push
loopne
mov
jmp
inc
inc
rol
cdq
shl
pusha
mov
add
lock
cli
jle
pop
cmp
movs
or
xor
jbe
ds
mov
(bad)
dec
mov
movs
add
adc
out
cmp
sub
xchg
fld
cmp
frstor
aam
fistp
(bad)
add
fwait
ret
pusha
shl
mov
cmps
mov
pop
xchg
adc
or
mov
mov
pop
sbb
cmp
push
(bad)
stc
xor
adc
add
ret
or
scas
xchg
sub
or
add
add
mov
in
push
pop
jae
neg
adc
add
call
cmps
das
mov
push
mov
sub
adc
clc
ficom
lods
clc
in
cmp
adc
xor
cmp
jne
mov
popf
paddsw
fcmovu
pop
cmp
adc
pop
cs
(bad)
sbb
push
movs
and
rcl
cmp
jmp
cmp
out
adc
push
cmp
rol
mov
add
pop
add
add
add
sub
pusha
xchg
xchg
sbb
scas
push
fs
in
adc
hlt
cmp
mov
mov
mov
pop
mov
xor
mov
and
xor
sub
inc
clc
pop
mov
adc
sub
je
mov
push
ins
rol
cmp
cld
inc
xor
jns
ds
cli
pushf
pop
std
push
gs
out
inc
mov
cmp
add
je
cmp
not
push
inc
sahf
mov
mov
dec
pop
adc
mov
sti
push
jbe
cdq
fcom
xchg
inc
jne
jmp
cmp
pop
stc
(bad)
psubusb
jl
cmp
sahf
adc
mov
pushf
dec
in
dec
and
mov
push
pusha
add
jp
dec
scas
jle
push
or
aad
nop
jnp
push
mov
xor
push
in
mov
out
sub
(bad)
fs
add
dec
or
mov
fild
fcomp
fst
push
or
adc
or
adc
cmp
je
or
mov
je
test
lock
(bad)
loopne
and
test
or
mov
add
ds
sbb
xchg
add
dec
popf
inc
and
sbb
push
je
loopne
and
retf
mov
push
or
into
call
or
or
jbe
ja
clc
or
mov
sar
or
or
adc
cmp
push
test
pop
imul
inc
scas
fdivr
fsubr
xchg
mov
jmp
sub
jg
cmp
jge
fdivr
js
add
jo
sbb
je
test
push
(bad)
add
cmp
or
mov
dec
movs
aam
inc
jge
sti
and
and
pop
mov
cs
inc
mov
(bad)
jne
push
lock
test
adc
popf
shl
in
mov
arpl
push
(bad)
ins
mov
pop
pop
jo
jle
loopne
add
xor
adc
lea
jne
jae
mov
or
pop
pop
js
outs
xchg
sbb
(bad)
push
icebp
in
mov
xchg
out
inc
add
nop
add
int
jno
aaa
mov
sub
dec
bound
mov
dec
sar
push
cmp
push
cli
mov
outs
sub
or
jl
mov
mov
xchg
popa
sub
push
ret
pushf
nop
fidiv
push
push
and
call
push
rol
mov
sbb
and
push
or
call
xchg
in
xchg
hlt
jmp
add
ins
fwait
sub
pop
jmp
mov
mov
and
sub
gs
(bad)
jmp
mov
pop
ficomp
push
scas
push
sti
add
aam
pop
retf
dec
mov
mov
jle
outs
push
cwde
add
sub
sub
jle
stos
and
or
add
icebp
xchg
dec
jg
lds
lds
mov
add
sub
mov
or
mov
ror
or
inc
icebp
xor
jle
lds
xchg
ret
lods
cmp
(bad)
fnstcw
mov
add
cli
mov
adc
inc
jl
movsx
mov
and
dec
mov
dec
adc
rcr
inc
sbb
or
fsub
cwde
mov
sub
cmp
jb
push
and
and
sbb
mov
pop
mov
sbb
pop
pop
cwde
cwde
push
adc
mov
je
xor
aam
in
pop
mov
jecxz
and
jmp
add
loop
lock
cmc
pop
sbb
cld
loope
pop
mov
pop
loop
ja
adc
push
sar
nop
and
push
dec
push
inc
bound
imul
dec
or
scas
jo
jo
xor
jge
inc
mov
inc
adc
loopne
sub
(bad)
jl
pop
or
mov
arpl
xchg
sbb
out
cmp
shl
adc
cmp
jl
adc
test
loope
gs
add
and
imul
das
lock
hlt
xchg
jae
cli
test
pop
inc
jg
jle
add
mov
inc
adc
(bad)
rol
cli
dec
jne
push
es
or
and
fcomp
mov
inc
cmc
mov
xor
mov
jl
out
cmp
loope
cmps
dec
pop
push
ja
push
cmp
jge
and
push
fnstsw
cmp
rol
push
iret
cmp
sbb
out
mov
inc
or
pop
pshufw
outs
push
add
lock
cmp
(bad)
repnz
dec
(bad)
jl
mov
add
inc
js
and
mov
adc
cmp
jg
adc
or
push
call
aad
leave
push
out
sar
stos
adc
mov
xor
dec
jno
les
push
jle
aad
daa
cmp
cmp
pop
cdq
xor
adc
(bad)
jl
mov
inc
fild
scas
adc
rcl
add
push
mov
sti
jno
jp
mov
or
inc
sub
jne
mov
jb
sbb
push
mov
push
bound
daa
cmp
mov
inc
push
push
imul
or
adc
fld
push
(bad)
scas
ret
fucom
push
fnstsw
fstp
movs
jnp
and
(bad)
and
push
test
pop
mov
pop
(bad)
lock
fs
fs
or
ins
xor
xchg
or
fnstcw
clc
xor
and
mov
clc
sub
cmp
sbb
fadd
sub
dec
add
mov
aas
jg
dec
mov
shl
fdivrp
adc
jmp
fadd
cmps
mov
sub
jmp
fldenv
sbb
lods
push
pop
jg
inc
mov
mov
vmread
shr
xor
imul
and
adc
scas
sub
or
popa
fbld
xor
add
out
cmp
push
cmp
out
inc
mov
xor
push
add
and
add
fdivr
xor
fbstp
jg
cs
xor
and
push
mov
and
shr
not
mov
leave
and
xor
sahf
xor
dec
mov
sub
mov
das
stc
push
pop
mov
cld
(bad)
dec
pop
mov
xor
and
xor
and
out
neg
sbb
and
xor
xor
mov
xchg
dec
shl
mov
paddd
call
lods
pop
cmp
shl
loope
jns
pop
mov
dec
cmp
xor
shr
call
enter
out
neg
or
loope
loope
sbb
jbe
mov
loop
or
fild
jge
ret
test
sbb
pop
or
out
popa
cmp
cmp
mov
add
aaa
mov
xor
and
or
add
mov
icebp
push
div
and
sub
dec
sbb
add
retf
(bad)
adc
into
mov
mov
xor
call
sbb
and
sub
dec
sti
sar
or
pop
adc
pop
lea
jmp
push
xchg
adc
test
add
adc
ret
mov
dec
sbb
xchg
push
cs
fcom
shl
or
ins
mov
push
std
push
shr
add
test
lock
or
hlt
pop
mov
cmp
inc
dec
or
mov
pop
or
pushf
dec
(bad)
sti
imul
xor
retf
add
ins
stc
cld
push
lea
or
and
mov
sub
or
mov
adc
adc
and
loope
aam
adc
adc
jmp
(bad)
in
and
inc
test
mov
mov
mov
std
and
or
rcr
cmp
pop
xchg
call
xor
add
movs
lahf
mov
fdiv
fcomp
dec
sbb
cmp
adc
mov
xor
lods
jnp
in
push
or
push
add
pop
je
push
push
xchg
jle
push
mov
out
lea
sub
test
cwde
and
dec
not
inc
pop
lock
mov
les
or
repnz
cmps
mov
cmc
aas
jae
ja
cmps
dec
mov
add
inc
mov
mov
js
in
add
cmp
icebp
ins
xor
cmps
ins
xchg
jae
sub
xor
pop
xchg
push
jbe
xor
mov
mov
inc
test
and
aad
and
add
fnstenv
jb
pop
cmp
rcr
rcl
fnstcw
push
retf
cmp
jg
int
ret
scas
xor
adc
and
add
bswap
and
lock
sar
cmp
je
cmp
adc
sub
enter
in
ins
into
movs
ss
adc
or
fstp
movs
push
pop
fsub
mov
jmp
sbb
inc
push
pop
push
lods
out
sub
pop
jne
push
pop
nop
and
jne
push
aam
inc
xchg
or
push
mov
and
std
sub
sub
cmp
mov
sub
jmp
mov
lock
not
and
sub
add
or
pushf
into
fist
cmp
mov
mov
mov
aas
sahf
shr
inc
test
push
lods
push
btc
mov
cmp
cmp
xchg
rol
cdq
jp
cmp
sbb
pop
mov
push
sbb
mov
mov
data16
cmps
mov
mov
ins
cmp
aad
arpl
pop
pop
repnz
or
xchg
mov
jmp
scas
popa
dec
push
mov
sub
sub
xchg
div
sbb
adc
or
mov
call
sub
xor
dec
inc
fild
push
div
mov
cmp
icebp
int
cmp
fdivr
xor
retf
dec
adc
dec
fidivr
xlat
mov
stc
shl
loopne
cmp
mov
jae
push
dec
inc
call
pop
iret
shr
add
pop
sub
add
ds
push
sbb
cmc
adc
add
mov
mov
adc
dec
sbb
sub
xor
inc
cmp
jb
cli
add
popa
and
fsubr
sub
push
add
push
xchg
pop
movs
xchg
cli
aas
cdq
pushf
pop
inc
pop
das
clc
into
aam
ret
pop
add
fisttp
cmp
loope
or
adc
imul
shr
pop
push
ret
dec
movs
add
out
mov
xor
mov
sub
push
xor
sub
pop
mov
push
ret
sub
jl
mov
add
xor
push
or
dec
(bad)
adc
jl
das
or
xchg
ror
mov
pop
jle
jmp
jno
mov
out
xchg
cli
adc
lock
jne
mov
mov
mov
inc
xor
(bad)
not
and
mov
and
or
(bad)
sti
add
mov
lea
rol
(bad)
(bad)
xor
clc
cmp
xor
push
mov
call
push
or
stc
sub
mov
sti
push
adc
and
retf
shl
fimul
std
(bad)
xor
out
into
mov
repnz
cli
outs
xor
jge
not
and
or
mov
(bad)
push
scas
(bad)
cmc
mov
adc
fstp
add
int3
loopne
das
push
repnz
xchg
adc
test
aas
popf
gs
loope
add
fnstsw
jmp
sub
inc
or
inc
mov
dec
jle
loopne
pop
(bad)
jmp
loopne
sbb
mov
les
ret
and
nop
imul
data16
sti
nop
outs
(bad)
cmp
fimul
xchg
jno
std
mov
and
stc
retf
repz
push
mov
cmps
push
and
jo
lock
adc
dec
pop
inc
mov
mov
dec
jb
mov
push
cmovp
idiv
pop
dec
add
outs
loop
inc
mov
ror
clc
imul
mov
rol
clc
sub
fxch
aaa
stos
(bad)
mov
or
movs
sti
pusha
pop
aaa
cli
aad
pop
adc
(bad)
retf
in
in
ret
sub
xlat
loopne
adc
add
and
mov
stc
fwait
imul
enter
iret
imul
(bad)
xlat
out
loope
mov
repnz
lock
pop
aaa
ret
les
mov
adc
inc
lahf
and
in
add
clc
mov
out
cld
aam
add
push
arpl
out
mov
dec
(bad)
jge
stc
cmp
inc
cmp
inc
xor
cdq
shl
cmps
mov
xchg
or
(bad)
ja
mov
popf
ins
adc
xor
add
cmps
xor
mov
xor
in
mov
repnz
jmp
test
(bad)
aaa
sti
or
into
xor
add
and
ror
mov
retf
sub
push
mov
ror
xor
les
repnz
out
mov
xor
stos
shl
repnz
mov
fld
(bad)
mov
les
test
pusha
mov
int3
out
aam
jo
xor
in
dec
stc
(bad)
inc
shl
add
rol
push
fcomp
sti
cmp
aam
mov
shl
xor
cdq
dec
addr16
int3
(bad)
mov
hlt
clc
aas
sub
out
mov
jmp
movs
rcl
lods
les
repz
and
hlt
mov
sub
sahf
imul
and
scas
or
sub
mov
sahf
out
lock
cmps
and
cli
or
sti
pop
in
mov
call
ret
pop
pop
les
iret
xor
jge
out
push
jg
mov
fcomp
lahf
or
dec
jle
outs
hlt
loopne
sub
mov
mul
mov
add
out
or
ret
or
iret
fs
or
fild
push
retf
mov
cmp
outs
push
enter
adc
mov
retf
mov
mov
mov
pop
xor
fdiv
rol
or
xor
fcmovnu
lods
ret
clc
mov
cmp
enter
mov
mov
mov
(bad)
inc
add
push
push
add
(bad)
sti
outs
clc
out
iret
test
jbe
push
lea
out
add
in
scas
add
mov
or
mov
mov
adc
test
call
xor
jne
pop
and
in
mov
or
call
adc
aas
mov
dec
mov
inc
dec
sbb
dec
xchg
xor
and
out
jg
cmps
push
push
push
push
xchg
mov
mov
push
mov
ror
dec
adc
aaa
hlt
jg
pop
jns
mov
dec
jns
fidiv
push
fdivr
fistp
dec
dec
jne
push
push
pop
loopne
mov
sbb
dec
push
adc
mov
sti
sub
je
aam
and
dec
je
mov
mov
xor
imul
xchg
mov
push
add
sub
js
clc
mov
pop
arpl
or
fcom
pop
cwde
jae
pop
jl
mov
push
loopne
lock
sub
or
ss
sti
mov
inc
sub
mov
loope
or
retf
jmp
push
sahf
cld
push
push
(bad)
lahf
adc
and
nop
ret
lea
add
mov
and
cmc
dec
and
adc
xchg
add
fs
imul
sub
dec
idiv
retf
pop
fcomp
sbb
add
mov
mov
or
(bad)
aaa
adc
mov
or
mov
hlt
dec
sbb
push
scas
fadd
rol
pop
and
inc
add
fwait
push
ror
ins
sbb
or
sahf
inc
cmp
push
aam
cmp
dec
cmp
out
movs
ds
mov
jl
mov
or
nop
mov
ss
es
es
add
push
bound
mov
mov
fimul
mov
or
push
adc
pushf
and
jnp
lock
add
cmp
(bad)
push
mov
inc
sbb
jl
retf
stos
push
in
ds
test
loopne
sbb
idiv
cli
adc
icebp
or
push
jg
repnz
push
cmp
jl
dec
in
rcl
sbb
mov
pop
in
in
je
(bad)
rol
fimul
adc
and
movs
inc
add
inc
dec
jmp
aam
leave
add
pop
adc
mov
not
add
dec
fstp
add
cmp
int3
(bad)
mov
es
jbe
sub
mov
loop
pop
dec
pop
and
test
or
jb
js
mov
and
mov
out
cli
dec
push
ret
push
loope
lock
inc
push
pusha
loope
inc
mov
dec
add
cmp
adc
leave
mov
push
push
mov
lods
(bad)
and
pop
push
and
movs
push
inc
cmp
cmp
xor
dec
pop
dec
cmp
div
sub
cmps
scas
mov
outs
mov
and
jb
pop
sbb
adc
imul
jo
mov
fs
movs
cld
(bad)
movs
lods
int
test
and
or
cmp
and
dec
popa
jle
inc
add
cmp
mov
pop
lods
or
push
imul
sub
dec
and
inc
mov
pop
(bad)
gs
push
add
sub
ror
nop
inc
sbb
adc
dec
or
or
out
mov
cmc
mov
ja
push
int3
sub
inc
cmp
ds
and
add
xchg
jae
cmp
call
or
pop
fidivr
js
mov
mov
add
pop
or
and
jmp
push
popf
cmp
dec
add
jge
xchg
sahf
ja
shr
jmp
push
dec
fiadd
push
lock
lds
add
adc
push
adc
jecxz
sbb
lods
xor
pop
sbb
xchg
push
sbb
jl
bound
xor
and
test
push
stos
adc
call
and
push
stos
fwait
mov
inc
fld1
xchg
or
ret
push
movs
mov
clc
adc
xor
add
popf
push
fstp
mov
rcl
mov
add
pop
stc
jo
ret
inc
es
mov
push
push
jno
enter
adc
not
adc
cmc
sub
pop
shr
or
cmp
and
adc
imul
or
cmp
push
jp
jmp
mov
jl
push
or
or
(bad)
xor
sbb
push
dec
ret
in
mov
out
sbb
or
adc
jmp
sub
xor
jp
xor
hlt
jbe
mov
repz
lods
jmp
mov
add
mov
and
in
test
clc
and
cld
pop
pusha
pop
adc
xchg
or
add
pushf
and
jns
cmp
dec
and
fild
adc
dec
xchg
and
pop
inc
loop
ror
xor
lds
mov
popf
sbb
sub
or
jmp
and
popa
xor
not
xor
mov
fs
sub
xor
enter
push
jo
and
mov
mov
enter
or
cmp
adc
xor
jnp
inc
cmp
or
cmp
add
dec
or
push
or
mov
pop
pop
pop
pusha
fsub
jb
jo
js
lods
lock
ja
pushf
adc
or
pushf
mov
xchg
hlt
push
mov
lahf
sub
mov
or
mov
inc
lods
mov
mov
mov
mov
in
sbb
ror
aam
and
call
in
mov
js
mov
sub
or
and
inc
and
push
sbb
xor
jl
inc
jo
(bad)
rol
mov
dec
nop
mov
dec
xchg
or
or
jns
push
jl
mov
pop
in
pusha
inc
mov
pop
mov
mov
data16
mov
les
mov
cs
or
jns
sti
mov
test
or
clc
adc
sbb
int3
mov
fwait
cld
jbe
stos
movs
sbb
sbb
adc
sub
cs
leave
and
test
and
jmp
add
int3
lds
jl
lock
aaa
lea
push
mov
(bad)
pop
push
int
push
fs
sub
out
mov
mov
mov
sbb
mov
xchg
xchg
cmp
push
mov
or
loopne
in
or
popf
xor
in
or
in
inc
pop
jge
sahf
hlt
enter
inc
jl
push
and
push
imul
leave
cld
cmp
adc
xchg
int
retf
(bad)
adc
adc
sbb
rol
and
mov
retf
gs
xor
cmp
loopne
jbe
inc
dec
popa
add
pop
mov
fs
xor
pop
mov
out
sbb
xchg
jmp
pop
fisub
lods
mov
pop
cmp
jae
hlt
inc
and
sbb
fmul
fsub
cld
xchg
add
in
ret
or
cld
add
aas
fwait
xchg
(bad)
or
add
add
xchg
add
in
cmp
adc
jmp
mov
or
xor
jno
lods
sbb
dec
mov
xor
jae
push
pop
sbb
gs
dec
jl
je
js
inc
sahf
retf
jl
xor
pushf
inc
mov
jge
sbb
mov
inc
pop
jb
loopne
(bad)
(bad)
(bad)
enter
nop
out
dec
fcomp
inc
inc
pop
mov
lock
cld
enter
push
add
icebp
inc
push
push
push
push
adc
sbb
sbb
and
enter
pusha
sub
inc
mov
cmp
inc
inc
dec
or
push
in
(bad)
iret
in
sbb
je
mov
bound
cmp
mov
repz
nop
repnz
pop
pushf
ins
dec
into
lock
out
sbb
icebp
mov
mov
jno
jb
or
stc
or
loopne
enter
jns
xchg
hlt
in
inc
dec
imul
or
jb
data16
adc
mov
test
sub
lea
xor
push
jns
cmp
inc
mov
push
leave
pop
leave
pop
pop
fs
js
dec
ficom
ins
jns
je
shr
pop
sahf
jl
add
leave
jl
repnz
test
jl
in
jo
mov
jge
push
or
xchg
adc
rol
jns
inc
aam
fmul
in
sbb
shr
mov
clc
cmp
mov
ror
sahf
pop
xor
ret
and
enter
and
jno
fdiv
pop
cs
push
inc
dec
dec
push
ficom
inc
add
cs
jb
adc
sbb
mov
adc
inc
test
and
movs
in
lods
jecxz
cmp
pop
cs
add
or
hlt
aam
pop
lahf
out
pop
cmp
(bad)
call
add
loope
daa
cld
and
imul
retf
jno
retf
adc
or
stos
xor
cmp
iret
in
inc
and
add
nop
setbe
dec
retf
fwait
jb
js
add
jnp
pushf
ss
xor
jns
jno
into
rcl
mov
mov
imul
xchg
mov
in
cs
mov
and
mov
aam
xchg
inc
sahf
retf
fsub
fs
retf
jb
test
add
xchg
int
add
or
je
ret
retf
mov
in
int3
and
lea
push
sub
leave
sbb
test
jbe
repnz
outs
dec
xchg
xchg
push
jl
mov
jno
in
and
inc
sahf
retf
jl
test
pop
cs
jb
jb
mov
mov
jp
in
and
enter
inc
sahf
aam
fdiv
in
xchg
nop
int3
lock
push
hlt
dec
sbb
aam
jo
int
mov
xchg
sbb
or
int
int
jp
pop
repnz
sub
adc
mov
nop
int
mov
inc
dec
nop
xchg
jl
in
adc
fs
cmp
xchg
js
int
int
daa
cmp
jl
pushf
or
aam
stc
xchg
or
int
mov
les
push
fsub
mov
in
adc
mov
sub
fcmovnb
add
leave
hlt
int
into
inc
mov
push
or
test
adc
sbb
into
sbb
jns
pop
in
into
xor
cmp
cdq
nop
dec
push
inc
adc
out
pop
lea
pop
jecxz
xor
jmp
cs
add
dec
jo
inc
movs
test
nop
out
jno
mov
mov
mov
into
jg
pop
inc
repnz
fmul
pop
sbb
lods
sbb
imul
clc
sbb
add
pop
or
pop
jns
(bad)
jno
sbb
and
xor
push
pop
and
sub
xor
in
dec
jge
inc
lea
cmp
sub
in
and
xchg
or
pop
jl
test
retf
ja
nop
and
inc
sahf
movs
xchg
lods
lock
movs
jle
push
(bad)
int3
test
ins
dec
into
stos
jno
aam
sar
in
call
out
cmps
pop
hlt
mov
push
in
jg
inc
rcl
cmp
stos
shl
ror
and
in
and
add
xor
xchg
inc
sahf
retf
cmp
loopne
pop
cs
jb
les
daa
sbb
mov
mov
test
data16
jb
sbb
mov
repnz
add
xchg
(bad)
aam
fcom
jecxz
cmp
push
jns
add
(bad)
cld
dec
mov
loop
sar
shr
jns
(bad)
adc
mov
and
and
in
sub
xor
add
leave
cmp
ror
lea
pop
inc
fs
je
or
movs
and
xchg
shl
push
jns
rcl
or
test
push
in
push
mov
pop
in
cs
int3
aam
jo
adc
sbb
dec
adc
jl
js
in
pop
lock
push
repnz
inc
dec
cmp
push
ror
int3
ror
imul
jb
cdq
nop
out
lea
fisub
dec
nop
push
cmp
in
inc
push
mov
pop
sub
cli
cmps
push
jl
cs
jb
pop
mov
ins
nop
out
movs
movs
jno
or
cs
add
or
lods
int3
in
inc
out
mov
in
sbb
in
ror
rol
ror
in
aaa
loope
sbb
fmul
cmps
push
push
rcl
jno
int3
je
leave
and
out
(bad)
pop
fs
mov
xchg
mov
jns
sbb
and
rcl
dec
xor
jae
in
xchg
jge
jle
ffreep
jno
pop
test
in
lods
dec
dec
ds
mov
cmp
jno
leave
and
fmul
int
stc
jge
add
clc
or
jno
aam
xchg
sbb
inc
fsubr
aam
aam
aam
xchg
ss
sub
push
inc
dec
(bad)
cli
pop
cs
push
inc
adc
ins
dec
pop
jecxz
fptan
pop
cs
ins
jo
jl
jb
cmps
or
xchg
and
in
lea
pop
jb
lods
jecxz
fidivr
(bad)
int3
jo
out
jb
daa
xchg
mov
call
xchg
in
hlt
test
aas
movs
or
mov
inc
aad
adc
rcr
imul
mov
aad
xchg
cmp
cmp
jae
pushf
stos
sub
add
enter
out
out
pop
jbe
lea
ins
lods
dec
inc
xchg
jl
je
pop
test
jae
fnstenv
mov
inc
dec
xor
xchg
retf
mov
mov
in
or
in
pop
fsub
shr
dec
clc
cmp
cmp
(bad)
test
add
pop
or
inc
mul
out
(bad)
(bad)
pop
ficom
movs
nop
sub
cmp
dec
clc
in
adc
xchg
das
popf
dec
(bad)
(bad)
jno
inc
dec
xor
cld
fs
rcr
popf
js
test
add
and
mov
mov
pushf
in
pop
mov
and
mov
sahf
out
nop
retf
enter
sub
jl
inc
(bad)
mov
das
lahf
retf
in
hlt
cld
inc
and
add
sbb
push
adc
sbb
jmp
xor
jno
stos
mov
pop
inc
xlat
or
nop
dec
push
jns
push
ja
out
mov
fs
push
add
inc
jl
cmovb
pop
cs
mov
test
addr16
stc
xchg
retf
jno
add
xlat
scas
loopne
xchg
cmp
pop
in
mov
and
hlt
shl
outs
cdq
and
jno
xchg
or
add
jbe
repz
adc
repz
jns
fmul
sub
or
cmp
inc
jns
add
or
sti
xchg
push
pop
js
fs
out
pop
shr
cdq
sbb
sahf
retf
test
xor
test
ja
retf
lods
mov
mov
cmp
fcom
sbb
icebp
sbb
gs
hlt
pop
mov
cld
add
add
add
jb
xlat
or
mov
pop
fimul
and
jno
sbb
sbb
xor
push
out
neg
jmp
jns
add
(bad)
mov
ins
jo
je
xchg
ss
pop
test
xchg
cwde
xor
and
fs
jbe
lods
jns
mov
sbb
fld
or
xor
add
in
sbb
leave
ja
out
in
cdq
hlt
cwde
jns
enter
enter
adc
enter
adc
sbb
jns
fiadd
adc
xor
and
cmp
cmp
ror
enter
fs
or
pop
ins
fdiv
in
dec
(bad)
adc
mov
imul
pop
add
jb
inc
push
aas
ficom
inc
adc
mov
mov
or
(bad)
ficom
pop
iret
ja
out
add
jns
and
shl
xlat
in
rcr
fild
pop
or
sbb
fdivr
jns
(bad)
out
dec
in
fld
sub
or
cmp
push
push
pop
pusha
repz
retf
je
js
jl
retf
push
jl
test
shl
xor
dec
mov
dec
pushf
cmp
inc
mov
nop
imul
(bad)
enter
or
xchg
lock
cld
mov
jb
inc
add
cdq
fst
inc
outs
(bad)
fdiv
fadd
sbb
sbb
fadd
inc
jns
imul
out
fcomp
ds
push
fcom
add
jo
jl
jne
sahf
retf
in
mov
add
leave
ja
movs
(bad)
cs
xchg
mov
mov
enter
add
fcom
in
cmp
sbb
fisttp
mov
or
or
adc
dec
sbb
les
sbb
sbb
cld
sub
cmp
in
lea
xor
push
test
jg
inc
loope
or
pop
pop
fs
jg
jmp
cli
mov
test
jno
sbb
mov
mov
popf
(bad)
or
mov
mov
and
aad
enter
jmp
retf
add
(bad)
hlt
xor
clc
cld
add
mov
xchg
inc
sbb
push
and
and
and
(bad)
push
sub
repz
in
add
into
mov
jno
out
and
sbb
xchg
dec
push
loop
pop
fimul
pusha
leave
adc
fmul
jae
xchg
fidiv
jl
mov
hlt
xlat
xchg
pop
cwde
ficom
pushf
jns
cld
into
sbb
in
repz
adc
aam
in
xchg
retf
repz
add
hlt
and
jns
cmp
or
xchg
adc
repnz
pop
adc
sbb
xor
mov
and
jmp
cmc
xor
jae
in
xchg
lea
cmp
inc
xchg
fistp
jns
popa
clc
pop
pusha
fist
jns
push
cmp
lods
repz
out
jb
mov
push
pushf
arpl
lods
mov
in
pop
mov
js
gs
es
xchg
fdivr
in
xchg
push
(bad)
cld
fnstsw
loopne
or
dec
into
lock
mov
inc
pop
cmc
loopne
std
test
ret
sahf
dec
test
jmp
mov
fwait
in
push
fs
out
push
pop
mov
pushf
shr
je
jl
push
jns
test
mov
sbb
pop
(bad)
pushf
mov
out
shl
mov
gs
enter
pushf
out
loopne
fsubr
xchg
dec
test
cld
xchg
lock
sbb
inc
retf
inc
sbb
adc
and
and
iret
loop
cmp
sub
pop
jmp
cmp
or
or
add
sbb
je
cwde
jo
inc
jl
call
cmp
loope
pushf
and
shl
and
iret
in
les
xchg
out
xchg
ret
xchg
jno
fsub
in
ins
leave
ja
int3
out
in
inc
xchg
jb
test
outs
jmp
or
loop
dec
xchg
loop
repz
retf
gs
jno
xor
pop
push
jbe
inc
inc
push
in
push
in
pop
push
popf
pop
pop
fs
ins
add
inc
jl
and
in
lea
sbb
in
sahf
out
lods
push
mov
stos
sub
cmp
cmps
pop
int3
and
in
rcl
fadd
jno
pop
hlt
pop
clc
loop
add
mov
(bad)
call
jecxz
sbb
enter
jecxz
jno
pushf
in
dec
xor
pop
jmp
jecxz
out
fs
jecxz
jns
movs
rol
fs
sbb
je
mov
stc
add
js
xchg
cwde
pushf
movs
mov
(bad)
call
and
addr16
les
stos
mov
jecxz
cmp
out
cmp
ror
jecxz
hlt
aam
add
xchg
cld
cwde
loop
xchg
dec
movs
sbb
in
or
xchg
cmp
inc
xor
jmp
sahf
outs
sbb
cmp
mov
mov
xchg
pop
lds
cmp
ins
or
lea
mov
ja
mov
jp
aas
arpl
pushf
in
jns
add
cmp
cdq
mov
dec
pushf
out
mov
and
and
jns
in
xor
push
jns
movs
in
in
in
popf
push
fdiv
sub
retf
in
in
in
inc
push
jb
mov
add
in
sub
cmp
push
dec
push
push
and
js
pop
inc
inc
retf
ins
and
cmp
fs
out
xchg
sahf
retf
ja
jecxz
test
pop
ret
push
inc
pushf
repnz
push
jl
mov
aaa
and
jno
cmp
retf
enter
fdivr
push
in
ret
jecxz
jb
out
hlt
cld
ins
add
movs
fld
sbb
and
out
sbb
jno
out
sub
jb
mov
cmp
inc
dec
imul
pop
push
jecxz
mov
fs
out
mov
jnp
cs
add
or
xchg
movs
fld
in
cmp
cmp
and
xchg
or
pop
cs
fsub
in
test
nop
xchg
or
ret
push
add
shr
out
out
in
outs
add
sbb
or
test
cmp
jae
xor
mov
jns
and
cs
pop
cs
pop
fs
dec
jae
mov
stc
scas
and
and
test
and
xchg
cld
xor
dec
fwait
mov
movs
sub
pop
mov
mov
test
mov
or
xchg
or
jl
fsub
in
cmp
xchg
sub
cld
pop
ret
imul
call
ret
sbb
arpl
and
dec
jle
rcr
push
ret
in
sub
xor
sub
inc
xchg
loop
xchg
retf
xchg
dec
dec
push
or
cmp
imul
stc
xchg
call
in
dec
xor
retf
lea
sub
pop
lds
repz
int3
sub
xchg
ret
xor
inc
popf
in
in
and
repnz
hlt
xor
xor
jno
jmp
adc
cmp
sbb
cmp
and
inc
jne
jmp
xchg
push
mov
jmp
inc
sahf
jo
dec
rol
lea
ins
nop
xchg
or
push
je
inc
out
jb
test
pushf
fs
pop
pushf
dec
pop
jns
xchg
retf
lods
mov
mov
push
les
fmul
sbb
fs
sub
cmps
or
xchg
frstor
stos
ss
dec
add
add
(bad)
push
or
repz
ja
and
and
or
jo
xchg
or
pop
xor
cmp
ins
sbb
mov
cmp
push
nop
out
cmp
push
sbb
mov
jl
repnz
or
pushf
or
xchg
or
(bad)
inc
nop
out
mov
hlt
jnp
fs
dec
(bad)
jmp
arpl
mov
cmp
push
or
iret
in
cmp
lock
cld
enter
and
or
jno
gs
adc
sbb
sbb
and
sub
sub
std
stc
xchg
retf
lea
jmp
dec
sbb
sbb
call
mov
push
hlt
sbb
dec
push
jl
cmp
xchg
pushf
or
movs
sbb
mov
mov
cmp
and
jmp
cmp
jmp
in
enter
in
and
add
cmc
popf
add
in
in
imul
in
sub
in
jmp
stc
push
mov
and
sahf
fs
out
xor
outs
cmp
mov
test
jns
fs
ins
dec
test
outs
in
rcl
ret
jns
test
dec
inc
xchg
xchg
retf
movs
ins
jno
movs
test
mov
mov
add
cs
pop
fcmovu
imul
int3
rcl
jmp
pusha
mov
in
push
push
in
xchg
push
in
in
mov
sbb
in
pusha
mov
jb
stos
popa
in
pop
add
scas
adc
mov
je
inc
sahf
sub
xor
dec
push
cmp
aam
nop
out
js
iret
ja
movs
pop
jo
pop
jl
fiadd
add
mov
xchg
cwde
or
pop
xchg
add
retf
cmp
les
mov
rol
int3
xchg
aam
cmp
xchg
call
in
hlt
mov
and
mov
or
adc
jno
dec
mov
adc
sbb
lods
and
(bad)
outs
inc
push
into
xor
cmp
sbb
stc
cs
cmp
inc
mov
ss
pop
pusha
fs
ins
ret
cmp
mov
cmp
or
pop
mov
mov
pushf
jno
inc
lods
push
jge
out
mov
mov
mov
sbb
sbb
stc
xchg
out
jecxz
loopne
jno
loope
dec
pop
inc
cld
mov
xchg
push
imul
or
mov
xchg
add
enter
out
in
jae
jno
xor
mov
call
cmp
cmps
in
aas
mov
iret
in
push
out
jmp
test
jb
and
jae
or
ror
jns
mov
or
and
out
out
jno
enter
xor
ret
add
lock
cld
or
je
cmp
lock
xor
lock
je
pop
fldcw
lock
push
test
mov
push
inc
test
cli
pop
dec
pop
mov
ds
popa
xor
jecxz
jg
popf
out
sub
and
jno
sbb
iret
in
xchg
nop
xchg
pushf
je
and
inc
pop
lock
cmps
push
lock
jl
add
leave
int3
xchg
inc
fsub
(bad)
repnz
cs
mov
(bad)
fdiv
icebp
push
icebp
sbb
jbe
icebp
cmp
cwde
arpl
xchg
nop
sbb
stos
sub
xor
iret
mul
and
jns
test
sbb
inc
test
inc
icebp
push
push
mov
cdq
pop
add
daa
stc
into
jae
mov
ins
mov
and
inc
sahf
out
test
les
push
movs
test
daa
sbb
mov
push
retf
in
and
rcl
adc
in
inc
test
inc
add
mov
jb
hlt
repnz
or
jno
pop
repnz
out
leave
push
and
xchg
and
(bad)
jl
sub
mov
mov
loope
inc
dec
jno
xchg
or
pop
push
adc
jb
nop
push
ins
jo
xor
and
jl
test
mov
cwde
pushf
movs
and
sbb
xor
jb
rol
inc
mov
add
push
call
in
hlt
push
and
outs
repnz
in
inc
lea
repz
repz
sbb
pop
and
das
retf
test
jno
jb
inc
sahf
inc
push
pop
cs
pop
pusha
fs
sbb
sbb
je
cli
stos
repnz
les
fs
out
sbb
mov
repz
mov
sbb
stc
jns
nop
les
pop
fcomp
pop
in
and
js
mov
inc
out
pushf
int3
inc
xchg
cld
shl
hlt
pop
or
mov
in
out
div
call
push
hlt
jno
rcl
dec
dec
xchg
push
jns
xchg
push
push
pop
int3
fs
ror
push
out
or
pop
ds
test
mov
adc
lea
movs
lods
in
stc
inc
fistp
stc
jno
pop
enter
jb
aam
mov
inc
add
add
inc
lock
lock
cld
or
pmulhuw
push
dec
adc
xor
sub
sbb
sbb
and
sbb
les
sub
pop
repnz
mov
jno
dec
sub
nop
xchg
or
inc
data16
in
push
mov
mov
into
jae
cmp
stc
jno
mov
mov
pop
jecxz
loop
dec
and
stc
shl
cmc
jl
out
jb
pusha
add
push
push
cmp
and
sahf
bound
or
jecxz
in
jecxz
or
loope
ds
push
push
arpl
jno
xchg
or
pop
cmp
inc
imul
push
pop
jno
xchg
cmp
shl
mov
test
stos
jbe
xchg
jecxz
cmp
movs
fwait
or
mul
lods
cmps
or
mov
in
and
rcl
fs
inc
sahf
fcom
add
test
jno
es
add
sbb
in
xor
enter
and
sub
xor
push
adc
pop
push
pop
dec
test
jns
mov
out
or
mul
stc
xor
neg
jl
test
add
mov
xchg
xchg
cdq
fs
aam
xchg
push
jp
inc
call
popf
fs
out
loopne
sub
pop
mov
call
sbb
lock
push
or
adc
adc
sbb
test
fs
and
stos
jns
xchg
retf
xor
cmp
sbb
movs
dec
push
dec
push
pop
pusha
mov
ds
fs
sub
test
inc
jecxz
pusha
outs
repnz
cs
xchg
cmp
inc
cmps
or
cmp
mov
mov
in
and
fdiv
enter
in
in
jb
or
cmp
mov
stc
or
jo
stc
iret
or
lgs
and
inc
pop
push
xor
test
iret
stc
arpl
and
ret
jae
mov
into
mov
jecxz
(bad)
xchg
ja
retf
in
jl
mov
leave
mov
mov
movs
lods
mov
mov
inc
inc
(bad)
enter
jb
aam
fsub
inc
or
sahf
das
dec
addr16
pop
cld
enter
cmp
add
adc
aas
dec
mov
movs
cli
cli
in
and
shl
and
fisubr
jno
lea
and
into
inc
je
ins
inc
xchg
sbb
iret
dec
fmul
into
aaa
nop
ins
imul
ins
pushf
fs
out
call
retf
fsqrt
jno
daa
sbb
mov
push
mov
mov
iret
(bad)
clc
int3
lahf
repnz
pop
cli
jno
call
hlt
call
or
or
push
adc
or
mov
jo
(bad)
mov
sti
nop
sub
outs
ret
xor
sbb
enter
jno
pop
leave
and
in
fs
test
addr16
sti
xchg
inc
sahf
dec
jno
xor
fbstp
cmp
mov
test
lods
dec
push
jns
mov
mov
imul
fisub
fmul
hlt
imul
add
pop
pop
inc
and
adc
nop
cld
jmp
clc
push
push
and
sub
(bad)
pop
jle
cmp
cld
jmp
pop
dec
cld
and
ja
pop
dec
jns
jo
add
pop
jmp
add
jno
add
push
jno
cwde
or
pop
cs
movs
nop
lods
mov
push
shl
out
(bad)
int3
movs
inc
jb
mov
aam
in
in
inc
jb
loope
mov
cli
ins
cld
in
dec
enter
std
xchg
adc
mov
std
sbb
shl
pop
push
in
mov
enter
inc
ror
inc
dec
out
pop
pusha
and
cmp
fs
fdiv
dec
enter
mov
fs
out
call
jae
pop
mov
mov
and
les
jno
mov
xchg
fadd
mov
repnz
std
add
std
pop
(bad)
fld
(bad)
nop
dec
(bad)
fild
mov
sub
sub
sbb
dec
push
cmp
mov
dec
(bad)
and
ja
test
jno
sub
ds
pop
cs
cmp
dec
(bad)
mov
pop
add
nop
std
(bad)
loopne
ins
inc
mov
mov
repnz
in
and
cmp
fcomp
push
pop
cs
sbb
jo
hlt
cld
enter
pop
add
les
adc
sbb
sbb
and
enter
push
jb
sbb
inc
inc
dec
add
fidivr
xchg
retf
popf
fs
test
mov
mov
or
enter
data16
push
push
mov
mov
les
push
int3
loopne
sub
je
pop
mov
(bad)
xor
mov
leave
mov
cmp
fmul
xor
jle
lea
jle
or
sbb
inc
mov
jge
test
cmp
sub
push
enter
sbb
and
cwde
add
cmp
pop
adc
mov
mov
add
adc
pusha
nop
dec
sbb
sub
or
xor
push
vpacksswb
sbb
out
or
dec
(bad)
cmp
dec
dec
out
outs
cmp
int3
sbb
sub
gs
xor
adc
mov
jo
dec
or
xchg
ins
dec
xor
fnstenv
icebp
mov
and
push
mov
adc
or
mov
inc
jne
cmp
into
ss
push
(bad)
jmp
inc
xor
lds
repnz
xchg
cmp
mov
mov
sub
imul
test
cmp
inc
mov
ret
sti
mov
rol
push
(bad)
ds
ret
mov
mov
add
mov
sbb
xor
adc
mov
std
mov
and
sbb
loopne
les
push
dec
js
push
mov
es
inc
push
inc
sbb
jecxz
cmp
add
imul
mov
or
pop
mov
add
mov
cld
and
mov
adc
fld
stc
add
mov
or
add
nop
mov
mov
pop
aas
aad
cmp
imul
fs
adc
cld
mov
and
cwde
mov
ret
push
and
rol
aam
push
mov
fdivr
adc
or
(bad)
add
aam
mov
test
push
mov
jns
mov
in
and
or
jg
dec
add
push
lea
and
mov
xchg
ja
push
push
or
dec
or
xor
inc
std
cmp
jne
sbb
xlat
push
adc
popf
sbb
push
outs
inc
push
es
cmc
je
cmp
dec
push
sbb
dec
adc
jg
mov
jg
jg
push
jbe
add
mov
push
aam
push
out
(bad)
gs
adc
adc
jmp
inc
mov
scas
xor
push
shl
pusha
pop
adc
dec
jnp
shr
fmul
inc
cmp
sbb
aam
nop
mov
mov
dec
or
and
enter
test
nop
add
and
adc
push
xchg
pusha
add
and
clc
push
rcr
push
jno
mov
pop
xchg
outs
adc
scas
dec
push
lds
dec
sub
call
ror
retf
mov
rcl
sbb
xor
sbb
add
push
xchg
cs
xor
mov
scas
adc
and
mov
sbb
shr
push
jne
sbb
push
jmp
adc
fcmovbe
sar
mov
mov
add
dec
xor
outs
mov
mov
in
add
and
mov
add
out
push
scas
push
in
lea
mov
xchg
mov
dec
movs
add
dec
mov
lock
ss
and
mov
xchg
sbb
shl
in
mov
sbb
sbb
push
push
push
pushf
lods
sub
iret
and
adc
adc
mov
mov
xor
lods
cdq
mov
push
rol
pushf
mov
fwait
xor
in
fistp
ja
xor
outs
ja
add
xor
lock
sub
pop
xlat
or
mov
cmp
push
add
jl
push
xchg
sbb
jecxz
mov
int
je
inc
adc
sti
sub
mov
xor
adc
inc
jp
je
in
push
dec
test
ret
push
sahf
pusha
(bad)
push
pop
add
add
inc
lahf
out
dec
cmp
jne
and
dec
shl
mov
mov
inc
ret
je
or
addr16
inc
fidivr
sub
fimul
pop
pushaw
sbb
mov
and
(bad)
mov
call
mov
mov
add
je
fld
or
pop
xlat
add
xchg
fiadd
shl
fwait
repz
(bad)
cmp
jecxz
dec
(bad)
test
push
lds
inc
dec
push
adc
fadd
push
movs
add
pop
out
popa
cmp
xchg
cmp
push
in
mov
jmp
sub
mov
stos
add
fcom
adc
inc
ss
xor
lods
cmps
push
add
push
jo
bound
(bad)
mov
pop
push
jns
ins
add
dec
leave
add
xchg
arpl
mov
(bad)
rol
imul
test
pop
jp
push
mov
mov
mov
stos
dec
adc
xchg
jne
aam
sbb
lahf
or
(bad)
mov
inc
inc
je
adc
aad
mov
jg
retf
adc
ret
std
pop
jne
and
stos
inc
shl
mov
jl
sbb
movs
mov
and
in
add
jge
add
pop
jle
pop
sbb
ret
push
arpl
or
scas
mov
data16
jns
rcl
leave
jnp
fistp
or
nop
movzx
test
mov
jmp
mov
and
fld
add
cmp
das
ins
cld
and
cmp
mov
daa
cmps
fdivr
(bad)
xor
mov
push
test
iret
cmps
or
ja
inc
cmps
lahf
jmp
cmp
loop
loope
xor
jmp
pop
dec
mov
mov
imul
imul
jne
pop
push
add
push
xor
jmp
xchg
mov
and
imul
jne
push
adc
in
in
pushw
clc
fstp
pop
cmp
mov
dec
and
sub
inc
sub
and
jp
sub
pop
fisttp
jge
mov
jmp
pop
jge
fdiv
mov
or
jle
mov
adc
add
inc
dec
(bad)
fiadd
or
das
or
rcl
loopne
xchg
push
ins
inc
lock
pop
mov
adc
sub
pop
push
jmp
ins
and
dec
and
sub
cmp
jle
clc
pop
fstp
pop
je
fwait
arpl
int
xor
inc
add
jae
ja
js
fmul
rol
push
cmp
mov
or
imul
xchg
or
shl
mov
and
outs
sub
js
sbb
adc
fldcw
push
jl
pop
mov
sbb
adc
pop
jle
and
jo
das
jle
mov
retf
inc
inc
adc
dec
jae
movs
jmp
sbb
push
stos
jmp
imul
sbb
and
inc
jne
push
dec
adc
jbe
jnp
cmp
xor
je
xor
movs
jp
push
mov
int
sahf
and
dec
xchg
xchg
enter
test
(bad)
(bad)
xor
imul
shl
enter
and
add
sub
jne
push
mov
int3
sbb
mov
add
into
call
outs
adc
ja
adc
ja
inc
and
mov
loop
cmp
mov
inc
and
in
xchg
test
jmp
(bad)
and
loopne
scas
push
push
push
(bad)
fdivrp
daa
push
call
pop
bound
jge
pop
mov
sub
fld
xchg
mov
dec
mov
scas
ins
push
sbb
adc
sbb
test
das
pop
adc
inc
adc
scas
cmc
sbb
mov
ins
xchg
bound
and
lea
sar
rcl
xor
sub
cmp
jae
dec
inc
add
out
cmp
mov
jno
hlt
push
lock
mov
jbe
adc
inc
jmp
movs
xchg
or
sar
adc
fistp
and
test
add
(bad)
fst
sub
lahf
sbb
loopne
sbb
pop
sbb
xor
js
xor
pop
push
mov
enter
dec
or
sbb
pop
add
sahf
mov
mov
arpl
xor
push
(bad)
push
cmp
test
enter
retf
(bad)
fmul
xor
pusha
and
push
sbb
test
adc
add
xor
pusha
std
sahf
rcr
loopne
test
push
xor
ins
push
lahf
cmps
sbb
dec
cmp
cmp
sbb
sbb
pushf
je
lods
js
mov
mov
mov
mov
or
mov
adc
fbstp
cwde
(bad)
mov
movs
and
inc
outs
adc
mov
push
jo
mov
xchg
push
lahf
adc
inc
es
retf
push
enter
xor
int3
cs
adc
idiv
mov
call
pop
mov
xchg
mov
sub
xchg
dec
test
xor
es
daa
ja
jns
ret
inc
xor
fnsave
xchg
or
or
add
xchg
jg
jecxz
enter
dec
jecxz
mov
shr
jp
jne
add
repnz
int3
lea
pop
enter
push
imul
ror
mov
push
push
adc
loope
adc
lahf
adc
inc
call
xor
push
mov
xchg
inc
adc
fadd
shl
fmul
popf
mov
gs
xor
int3
and
fcom
and
mov
or
push
jo
je
jl
dec
ret
push
jne
add
mov
xor
clc
xchg
jo
inc
jmp
lahf
mov
or
cmp
in
adc
mov
fs
push
push
inc
dec
dec
jne
psubusw
pop
adc
sbb
cmp
ret
test
and
clc
sar
into
and
lea
pop
sub
push
mov
rol
inc
mov
pushf
ja
cmp
push
scas
ss
dec
call
loope
xor
imul
cmp
out
fsub
test
test
jl
in
ret
fs
popa
jne
mov
xchg
add
sub
or
aad
push
cmps
mov
mov
lea
popf
xchg
(bad)
fisub
push
popf
push
pop
adc
arpl
sbb
rcl
and
inc
or
cmp
ret
mov
cmp
cmp
jle
loop
test
scas
inc
call
mov
adc
mov
push
xor
(bad)
sub
les
jl
out
jl
xor
add
inc
adc
jle
and
hlt
fimul
loopne
jge
retf
je
pushf
add
movs
mov
lds
or
mov
in
sbb
ins
dec
call
or
mov
aaa
or
push
mov
mov
je
sub
add
popa
pop
fidivr
jne
push
adc
pusha
xchg
ret
mov
and
test
add
add
cwde
inc
adc
fdiv
cmc
add
sub
pop
mov
leave
aad
lea
test
(bad)
fcomp
dec
add
sbb
les
ficom
cmp
clc
loope
(bad)
dec
push
jecxz
and
jl
or
lds
jle
sbb
xor
jmp
call
jnp
call
loope
xor
or
mov
iret
jb
sahf
hlt
stc
xchg
ss
sar
and
dec
je
fiadd
sub
push
adc
push
hlt
out
jns
in
add
sbb
add
cld
test
sahf
add
add
ret
fcom
cmp
add
(bad)
fmul
test
dec
rol
ret
pop
lea
fbld
test
sbb
test
es
retf
fst
pop
test
xchg
imul
int3
movs
pop
aam
xchg
add
jbe
add
test
push
push
fmulp
shl
cmc
cmp
les
lea
sar
shl
jae
xor
add
or
sbb
inc
sub
rcl
or
retf
mov
das
or
and
nop
push
call
mov
pop
and
add
cmp
xlat
popf
out
xor
das
fs
xchg
sbb
std
mov
and
js
mov
int
nop
inc
and
or
and
mov
jns
adc
xor
xor
add
pop
cmp
pop
sahf
pop
mov
loopne
push
mov
mov
jnp
add
loop
jae
pop
jp
jae
sub
cmp
jge
clc
movs
jbe
sub
add
xor
adc
mov
pop
jl
xlat
xor
xchg
sub
add
cmp
sbb
adc
adc
shl
mov
xlat
sbb
xor
aam
pop
clc
push
dec
or
inc
mov
outs
fnstcw
mov
out
lea
push
push
mov
adc
pop
xchg
sub
and
adc
and
inc
scas
(bad)
mov
cdq
je
or
mov
ret
add
add
add
jae
pop
push
jle
xor
mov
bound
rcr
into
out
or
adc
add
xor
jbe
xchg
mov
jmp
push
jae
outs
xor
adc
shl
and
xchg
loop
and
int
ins
pop
sbb
outs
rol
test
mov
addr16
pop
cmp
mov
or
fdiv
cmp
mov
dec
int
and
pop
xchg
das
shl
jbe
inc
ret
rol
xchg
add
out
add
fild
es
cmp
pusha
push
push
mov
pop
jns
popa
popf
dec
ds
or
push
les
js
test
push
adc
adc
sbb
fmul
pop
or
jmp
test
push
push
and
xor
and
add
jl
or
pop
pop
sub
popa
or
cld
fimul
mov
or
dec
aam
push
inc
xor
rcr
test
push
add
test
inc
adc
pop
or
add
cmp
iret
in
clc
sbb
push
inc
pop
inc
and
sub
dec
shl
in
repnz
data16
mov
out
pop
xor
bound
sbb
loopne
xchg
ss
push
xor
aaa
add
and
or
sub
ror
sub
in
dec
jecxz
retf
mov
popa
ins
xchg
sbb
fisttp
push
xor
inc
or
push
fsubr
cli
lea
adc
adc
retf
push
jg
mov
or
lahf
adc
sbb
ret
mov
and
in
xchg
int3
cmp
pop
loop
mov
jg
jle
push
inc
je
mov
xchg
xor
cmps
pop
cli
mov
adc
adc
ret
bound
or
lods
push
gs
gs
hlt
xor
cli
mov
sbb
icebp
ror
pop
(bad)
nop
aad
popf
cli
shr
cli
mov
inc
adc
xor
mov
lds
sbb
cld
outs
out
jne
cmp
jne
or
jmp
popa
sub
fcomp
pop
mov
cmp
je
cmp
or
jo
and
sub
mov
lods
adc
(bad)
js
popa
push
add
adc
dec
or
push
mov
push
loopne
mov
clc
pushf
add
call
pop
xchg
mov
sub
sub
adc
scas
rol
jmp
mov
test
test
js
(bad)
cld
mov
nop
aam
enter
or
cmps
push
sub
sub
inc
in
ds
xchg
jmp
pop
clc
imul
stos
sbb
jnp
or
pop
push
ret
push
push
dec
dec
cld
enter
fsubr
aam
cmp
adc
pop
dec
ins
and
add
jp
push
push
cmps
pop
mov
xlat
mov
inc
and
adc
inc
es
add
adc
aas
mov
or
loop
or
adc
cmp
add
adc
xor
imul
adc
inc
test
or
adc
jb
das
dec
mov
cmp
add
jle
jmp
add
cld
xchg
lock
and
inc
iret
cld
arpl
cmp
add
jnp
shl
outs
das
pop
mov
and
mov
dec
shl
cmp
cmp
fs
or
jp
xchg
push
mul
sar
inc
dec
adc
mov
sti
mov
xchg
ins
sbb
mov
adc
sbb
jge
xchg
imul
sbb
pop
or
jmp
js
je
mov
pop
stos
sbb
inc
je
inc
retf
inc
test
sti
adc
jmp
sbb
inc
push
xlat
sar
mov
push
fcomp
imul
sub
add
jo
add
inc
pop
cmp
push
adc
sahf
and
mov
mov
mov
fcom
xchg
loop
div
push
jle
test
or
repnz
pop
and
cmp
mov
or
add
bound
jb
cmp
shr
(bad)
push
adc
cmp
addr16
xchg
inc
jle
push
mov
je
mov
aam
je
push
inc
stos
pop
daa
inc
or
and
xchg
hlt
sub
mov
dec
add
fcom
cwde
scas
push
vpaddb
out
fucomi
pop
pop
jb
push
test
test
mov
scas
ror
movs
retf
add
mov
in
pop
clc
pop
jl
cmp
jmp
adc
push
mov
dec
add
loop
(bad)
inc
stc
test
dec
sti
push
xchg
mov
fs
push
dec
outs
mov
jo
sub
cmp
test
jne
mov
test
jb
jl
or
add
jne
sbb
imul
out
stos
pusha
jge
jle
jne
dec
xor
lock
push
icebp
or
pop
xchg
fdivr
add
push
xor
mov
jo
pop
imul
adc
pop
in
xchg
jb
mov
lahf
call
cmp
push
mov
cmc
push
jecxz
inc
jne
repz
mov
js
jne
addr16
jmp
xor
jmp
adc
shl
push
sub
adc
movs
mov
sbb
and
js
div
adc
out
data16
pop
adc
jge
xchg
dec
ins
dec
retf
inc
pop
xchg
bound
addr16
cmp
pop
adc
push
jmp
push
les
xchg
pop
mov
retf
inc
test
pusha
xchg
int
pop
popf
and
mov
mov
and
js
(bad)
add
or
pop
fld
ret
pcmpeqb
jne
shr
add
jmp
jmp
shl
sub
pop
data16
jne
push
int3
add
sbb
adc
push
fstp
in
push
icebp
push
stc
xchg
jmp
dec
js
and
fbstp
mov
jge
scas
movs
xchg
push
mov
xchg
bound
mov
inc
and
and
ret
push
dec
mov
jnp
out
add
mov
push
xchg
cmps
(bad)
call
data16
jne
lahf
test
dec
jne
or
test
push
daa
pop
push
xor
clc
dec
sbb
add
loope
push
push
(bad)
mov
add
loope
adc
xor
enter
cmp
mov
xchg
ja
xor
sbb
pop
push
popa
xchg
mov
or
adc
and
out
or
retf
fbstp
xchg
inc
mov
lods
pop
rcpps
adc
popa
fisubr
retf
in
aad
mov
mov
add
lea
pop
and
or
not
cmps
popf
test
xchg
jno
loopne
and
dec
cwde
adc
or
inc
test
mov
mov
inc
adc
adc
vmread
out
dec
ss
xlat
jmp
sbb
pop
ins
jmp
lea
mov
test
pop
sbb
dec
xor
push
push
xchg
dec
adc
cld
sbb
fwait
xchg
add
cwde
jmp
push
push
push
sbb
inc
mov
test
ins
in
jmp
cmp
jmp
push
dec
clc
repz
cmp
call
ds
add
jp
jmp
push
arpl
mov
in
iret
sub
dec
or
dec
pusha
call
xchg
add
imul
cmp
jbe
retf
mov
or
sahf
lahf
clc
lds
cmc
das
sahf
retf
mov
imul
push
xor
xchg
call
fmul
xchg
xchg
sub
and
sub
cmp
xor
push
xor
pop
mov
and
sbb
outs
test
scas
stc
or
nop
cmp
add
cli
cmp
enter
ds
movs
inc
lahf
dec
in
shr
cmp
or
jge
xor
je
mov
mov
inc
xchg
sbb
push
gs
fisub
adc
dec
das
lea
fnstcw
dec
out
jno
hlt
lds
add
pop
js
or
inc
and
mov
push
jae
imul
fsubrp
test
mov
push
xor
jns
out
cmp
inc
pop
adc
sahf
xor
inc
cmp
add
sbb
ja
jbe
adc
and
retf
push
and
adc
mov
mov
nop
cmp
leave
cmp
jmp
sub
xchg
xor
xor
push
ror
dec
cld
or
movzx
adc
xchg
sbb
and
test
or
ret
sahf
call
cwde
push
loope
xlat
movs
outs
pop
scas
clc
xchg
sti
push
mov
pop
test
push
push
push
push
mov
jbe
xchg
push
push
adc
mov
add
dec
nop
add
bound
sbb
in
cmps
add
icebp
or
nop
add
loopne
sbb
outs
mov
movs
add
inc
lods
jae
cmps
retf
pop
push
cmp
sbb
jg
les
push
pop
jno
mov
inc
jnp
and
(bad)
jg
je
inc
imul
add
das
push
pushf
adc
mov
jb
jne
shl
test
or
sbb
popa
adc
jp
xchg
fisub
xchg
bsf
sub
jo
nop
enter
lds
pop
sub
shl
dec
xor
sub
mov
(bad)
sub
add
ret
sub
dec
sub
xor
push
mov
xor
dec
mov
sub
pop
out
shl
pusha
add
(bad)
and
or
cmp
jo
xlat
jl
cmp
fs
bnd
push
cmp
test
sar
xchg
xchg
loopne
mov
xor
or
ret
cmp
sub
test
mov
shl
xchg
lods
jne
pop
dec
xor
out
mov
(bad)
shr
sbb
(bad)
push
or
rcr
and
je
adc
mov
xor
mov
mov
jae
xor
adc
sub
ret
ins
test
ss
test
lods
or
ins
imul
add
js
mov
div
test
ds
nop
dec
and
sub
add
xor
cmp
cld
popa
mov
mov
mov
inc
popf
pop
ss
stc
push
cmp
jne
sub
jmp
and
movs
pop
aad
(bad)
push
cmps
mov
into
push
nop
or
push
adc
rol
ret
dec
and
ja
mov
imul
push
and
pop
mov
xchg
adc
dec
or
fs
test
pop
cmps
and
cmps
add
push
int3
or
in
adc
repnz
dec
or
pop
frstor
sbb
ss
inc
jns
fisubr
cld
pop
fisttp
dec
enter
push
jl
add
cmp
sbb
mov
push
mov
push
les
movs
mov
movs
mov
js
jg
adc
jl
lahf
loope
push
fist
cmp
adc
jecxz
push
(bad)
jb
push
repnz
(bad)
mov
mov
push
mov
(bad)
push
dec
cdq
mov
cmp
je
lock
mov
into
stos
dec
in
mov
cld
test
jne
mov
cmp
scas
xor
push
and
mov
popa
inc
cmp
dec
sub
bound
inc
pop
test
loopne
jbe
imul
inc
into
mov
nop
out
cmp
addr16
fmul
lock
ss
pop
stos
push
cmc
adc
dec
pop
or
adc
pop
sbb
add
call
pop
dec
shl
xchg
adc
add
ins
aam
gs
cmp
inc
faddp
inc
mov
mov
xor
in
popa
xor
sub
xchg
mov
nop
es
imul
pop
sub
imul
jb
test
dec
cld
push
add
and
add
or
xor
mov
jmp
loop
fidivr
bound
mov
mov
xchg
movs
push
and
mov
adc
mov
retf
lds
fdivr
fcomp
inc
adc
add
pop
cmp
add
cmp
or
dec
aaa
or
and
or
sahf
add
mov
sbb
mov
pop
or
mov
add
mov
cmp
loope
push
push
call
adc
inc
or
or
sbb
dec
or
sub
or
sub
not
stos
xor
sahf
imul
pop
xchg
add
test
retf
movs
addr16
and
dec
inc
in
push
sub
hlt
les
loop
or
push
push
cmp
mov
dec
popf
mov
int3
test
mov
push
add
mov
fwait
fs
out
xchg
imul
ins
fsub
retf
and
cmp
test
push
das
imul
lea
in
mov
jne
and
sbb
adc
pop
inc
add
imul
add
mov
push
mov
movs
aas
mov
jne
cmp
dec
adc
jbe
or
out
jo
dec
xchg
and
lods
(bad)
mov
les
rol
or
test
xchg
fidiv
push
(bad)
shr
sub
into
jo
or
inc
nop
sbb
adc
sub
loope
fadd
inc
jge
inc
mov
sub
mov
pop
frstor
cmp
rcl
fbstp
and
cmp
mov
inc
jl
add
inc
lahf
jne
xor
inc
pop
sbb
mov
xor
pop
pop
sub
push
je
inc
pusha
shl
sahf
jae
ficomp
adc
jge
pop
inc
daa
adc
pop
inc
addr16
push
push
push
pop
cmp
jne
push
call
push
je
cmp
mov
push
mov
xor
sub
fidiv
push
sbb
jmp
mov
sub
mov
lahf
retf
pop
and
cld
xchg
repnz
add
jle
ds
imul
cmp
nop
hlt
dec
jmp
or
inc
sub
jecxz
push
sub
add
jp
pop
ins
mov
add
jg
or
add
adc
or
or
ja
ins
mov
cmps
jb
sbb
inc
add
xor
mov
inc
mov
adc
push
mov
or
xchg
test
xchg
loopne
test
fnsetpm(287
clc
xor
test
or
loop
adc
push
mov
xchg
mov
cmp
jl
pushf
push
add
push
push
add
sub
add
rcr
push
dec
fbstp
imul
pop
inc
cmp
xchg
cdq
fsubr
jnp
jl
mov
lods
shr
jp
sub
(bad)
arpl
je
xchg
into
fistp
jle
retf
adc
pop
cmp
(bad)
mov
jle
fidivr
scas
push
movs
push
xor
pop
bound
push
jmp
in
enter
lock
imul
add
(bad)
jl
cmp
dec
lea
shr
pop
sub
out
fwait
xor
cmp
fbld
enter
neg
cmps
cmp
cmp
pusha
test
sub
jo
outs
xor
cmps
shl
stc
mov
(bad)
jo
add
push
call
fld
imul
push
fwait
push
mov
rcl
loop
mov
in
push
mov
test
pop
add
and
shl
or
push
stos
add
pop
mov
and
or
mov
cmc
in
sbb
xor
dec
dec
push
and
mov
data16
xor
je
popa
adc
push
push
inc
sbb
cmp
pop
ror
les
sbb
push
sub
mov
mov
sub
arpl
test
in
add
pop
in
or
dec
xchg
push
push
inc
or
push
xchg
mov
pop
or
test
jb
in
fisttp
test
ins
movs
add
in
rol
mov
aam
rol
pop
sub
jns
hlt
adc
aam
push
and
push
jmp
mov
jmp
aaa
clc
xchg
loopne
pushf
aas
ror
sbb
adc
xor
mov
fild
add
(bad)
out
push
test
and
adc
rcl
add
push
je
jmp
mov
leave
xor
adc
call
lock
sbb
pop
sbb
mov
std
call
push
adc
xor
xchg
mov
pop
imul
out
and
or
je
adc
mov
js
pop
push
fnstsw
repnz
push
dec
inc
adc
in
mov
xchg
mov
adc
mov
stos
sbb
mov
cmp
into
xor
lock
lds
jg
pop
xchg
adc
data16
push
add
std
test
call
shr
sub
mov
pop
xlat
cmp
inc
add
sbb
ins
push
aas
popa
push
ror
pop
enter
jge
pushf
adc
push
add
adc
mov
xchg
jbe
mov
nop
push
push
add
inc
aas
pop
jbe
adc
popa
pop
sbb
mov
sub
mov
xor
inc
mov
test
mov
ins
jmp
sbb
xor
pushf
cmp
enter
mov
push
cmps
push
add
mov
inc
loop
rol
sbb
jnp
aad
adc
jb
mov
gs
inc
je
push
pop
push
pop
mov
repz
jmp
push
xor
or
arpl
pop
push
push
lock
adc
or
test
imul
push
dec
out
aaa
ror
and
sub
fld
dec
dec
xor
clc
add
cmp
sbb
push
push
dec
inc
shl
or
dec
inc
loope
ret
add
dec
dec
ja
and
add
pop
push
jmp
shr
push
xchg
idiv
(bad)
daa
or
int
shl
jle
out
mov
rol
mov
cs
cs
ins
add
ficomp
jne
in
push
pop
or
hlt
cli
push
sahf
test
add
and
or
adc
fstp
les
mov
push
jne
inc
mov
xchg
adc
add
movs
add
call
xchg
adc
sbb
pop
xchg
rol
popf
xchg
les
mov
pop
sub
push
add
or
aas
outs
jg
ficomp
sar
push
push
jbe
sub
xchg
out
xchg
mov
cmp
fsub
repz
mov
jbe
mov
inc
repnz
add
add
mov
add
inc
das
sbb
push
jbe
adc
inc
enter
sahf
dec
sbb
aam
push
lods
sbb
inc
mov
mov
inc
or
rol
addr16
sub
mov
adc
add
jl
js
cwde
dec
jne
push
cwde
push
mov
lock
push
movs
push
xor
pop
loopne
inc
push
mov
out
add
nop
jns
or
xor
push
cmp
shl
jg
jb
push
push
pushf
rol
and
pop
cmp
add
jns
movs
movs
or
jmp
out
pop
imul
push
inc
push
push
rol
clc
hlt
in
and
jb
in
lock
les
icebp
and
movs
sbb
inc
hlt
ret
dec
xor
or
xchg
mov
xchg
je
cld
xor
sbb
or
clc
in
mov
pusha
adc
cld
push
dec
mov
dec
sub
adc
sub
and
jbe
push
fdivr
or
cmp
lea
ret
or
cld
and
push
int3
cld
mov
in
push
mov
mov
or
fisttp
add
sti
inc
push
push
adc
inc
jmp
in
cmp
push
mov
clc
pop
add
mov
jo
popa
jnp
inc
xchg
mov
push
arpl
mov
ss
fldenv
add
pop
mov
xchg
cmp
aad
fnsave
or
add
jge
popf
dec
pop
in
pop
push
sbb
fsubr
inc
push
mov
scas
test
mov
pop
rol
ins
fcomp
push
fcomp
sub
cmp
aas
and
daa
jecxz
xchg
add
sub
lods
inc
bound
shl
add
retf
mov
std
mov
pushf
xchg
ins
or
stc
(bad)
cli
fcom
cmp
push
xchg
pusha
jne
jne
arpl
sti
xchg
pushf
jl
xchg
pop
fwait
pminub
ins
lea
int3
sti
(bad)
les
and
adc
movs
mov
ins
imul
mov
adc
add
inc
bound
xor
pushf
sbb
ja
dec
or
push
mov
push
scas
clc
mov
cmps
and
sbb
pusha
popa
imul
and
test
pop
popa
cwde
fdivr
call
add
ja
add
xor
jns
inc
cdq
mov
jnp
aam
in
je
sbb
aas
cmp
je
outs
jl
shl
movs
xchg
push
dec
mov
push
rol
das
jo
jmp
or
xor
stos
and
es
pop
cmp
dec
push
pusha
cmps
popf
(bad)
and
mov
add
add
xchg
pop
repnz
inc
pop
repnz
lods
adc
dec
daa
mov
leave
add
es
js
pop
sti
cld
lock
pop
mov
and
inc
push
push
push
sub
sbb
sub
dec
jl
push
stc
pop
cwde
jnp
lock
jb
retf
out
xor
dec
cmp
hlt
add
adc
sar
and
push
push
push
inc
push
sub
pop
jmp
cmp
pop
inc
cwde
xor
(bad)
jmp
push
je
cmp
je
cmp
je
cmp
je
cmp
mov
jae
ds
xor
cmp
sbb
or
outs
retf
pop
rcl
or
cmp
je
cmp
mov
dec
sub
lods
sub
push
mov
add
add
cmp
or
or
inc
inc
add
test
pushf
mov
loopne
push
cmps
pop
and
mov
sbb
ret
ror
enter
ins
mov
sti
sub
or
das
xor
cmps
mov
shl
push
pop
inc
imul
mov
pusha
pop
and
call
mov
push
pop
adc
enter
and
or
xlat
adc
push
mov
mov
shl
test
jne
dec
popa
or
(bad)
fnstsw
push
in
daa
test
push
(bad)
xchg
push
sbb
sbb
test
adc
movs
ins
sbb
out
bound
add
sub
mov
or
daa
mov
adc
icebp
push
loope
je
jmp
mov
nop
movs
adc
out
push
push
xor
pop
push
push
push
test
ins
push
or
movs
inc
xor
push
aaa
cmp
inc
sbb
xor
stos
push
ins
dec
je
(bad)
fstp
add
es
inc
or
aam
cdq
sub
sub
test
add
in
hlt
or
movs
jmp
sub
mov
mov
(bad)
or
or
adc
clc
or
aas
xchg
imul
pop
jo
mov
push
dec
mov
mov
jne
xchg
je
icebp
cld
adc
add
inc
push
add
push
mov
fbstp
sar
dec
adc
imul
scas
scas
mov
leave
jae
bound
or
out
or
test
sub
ss
mov
outs
and
call
adc
ret
pop
imul
mov
dec
inc
out
inc
and
hlt
mov
movs
pop
inc
scas
retf
cmps
or
lods
in
cld
add
push
(bad)
loopne
test
pop
mov
je
cmp
cmp
xchg
mov
adc
and
dec
test
lods
lds
jbe
in
add
addr16
scas
inc
jo
mov
and
out
and
mov
xor
repz
mov
ss
outs
jae
cmp
test
pop
daa
dec
ror
jns
and
(bad)
test
push
mov
xchg
dec
sub
jae
and
clc
mov
or
xor
imul
arpl
jb
(bad)
popa
je
add
and
sub
mov
(bad)
adc
adc
sub
sbb
xchg
jle
add
adc
push
xchg
xor
mov
shr
ins
dec
enter
cwde
sbb
test
mov
or
mov
ins
fdivr
dec
or
adc
or
ins
and
movs
push
ins
hlt
lock
or
jo
mov
pop
jmp
ds
bound
mov
lds
or
cmps
xchg
fisubr
xor
mov
popf
mov
rcl
int
mov
leave
pop
imul
or
ret
ret
sub
lock
int3
push
retf
enter
out
xlat
and
inc
int
movs
add
enter
inc
pop
push
cmp
pop
inc
sbb
icebp
cmp
and
xor
cmp
loopne
xor
dec
adc
mov
cmps
or
and
cmp
inc
push
sub
xor
inc
push
jge
or
push
iret
ret
and
adc
and
cmp
sub
xchg
add
ins
mov
into
dec
lds
cld
xor
scas
shl
clc
test
jmp
pop
add
jl
mov
sub
or
push
sub
jecxz
fs
xor
add
ret
xor
mov
sub
outs
dec
lock
lock
sub
fs
scas
add
xchg
inc
rcr
inc
jmp
rcl
fs
cld
inc
es
mov
test
xchg
and
aam
nop
(bad)
jmp
push
add
movs
icebp
loopne
inc
xchg
mov
outs
(bad)
pop
xor
out
mov
loopne
add
movs
ds
mov
lock
sbb
push
add
pop
add
sbb
push
pop
push
mov
leave
sbb
or
adc
fs
jb
jmp
mov
es
aad
cmp
ret
out
jg
or
add
adc
cmp
mov
ja
or
mov
in
iret
pop
push
jl
adc
or
jmp
mov
sub
xchg
sbb
mov
add
jmp
dec
or
lahf
inc
inc
sub
pop
or
lea
inc
pop
outs
imul
push
sub
pop
je
es
mov
mov
imul
pop
ja
jns
cs
add
dec
call
popa
or
push
mov
stc
adc
mov
pop
in
and
test
psrlw
into
scas
rol
xchg
add
add
stc
cmps
add
inc
js
and
out
in
adc
shr
sar
add
pop
push
inc
stc
inc
aam
jne
push
loopne
in
cmps
lods
imul
retf
shl
push
rol
xchg
outs
fs
inc
add
enter
push
adc
sti
sar
scas
jecxz
sub
popa
add
sub
adc
add
or
mov
dec
cmp
das
mov
enter
push
imul
mov
inc
adc
xchg
pop
cmp
cmp
test
adc
xor
sub
push
push
xor
xor
repnz
fisubr
clc
push
lock
pop
leave
push
in
push
hlt
and
out
add
push
dec
push
aam
data16
sbb
mov
es
jp
adc
xchg
leave
or
sub
add
loop
nop
loopne
movs
mov
pop
in
adc
adc
inc
pusha
ss
loopne
sub
mov
movs
mov
cwde
cmp
sbb
call
out
stc
loope
scas
sub
shl
and
movs
mov
cmp
add
mov
and
add
pop
ins
add
test
add
leave
cli
mov
inc
or
xor
mov
mov
and
je
sub
in
fs
xchg
inc
or
cdq
sub
rcl
xor
call
mov
push
jge
sbb
adc
push
pop
push
popf
popa
push
and
inc
mov
aaa
mov
mov
push
neg
call
call
test
jnp
sub
mov
adc
cmc
or
sti
jg
mov
mov
(bad)
push
and
test
adc
cmps
push
and
dec
inc
cmps
mov
xor
popa
sbb
dec
rcr
dec
push
or
mov
nop
fnstsw
jb
or
and
fbld
daa
ja
ins
imul
pop
jne
pop
mov
jbe
xor
adc
fadd
ins
xchg
retf
adc
inc
pop
mov
push
(bad)
fidivr
adc
xchg
inc
push
les
fwait
and
(bad)
nop
loopne
sbb
or
dec
and
add
stos
loope
imul
out
and
dec
js
xor
mov
push
xchg
xor
or
ret
push
jle
xor
pop
jmp
sub
(bad)
loopne
adc
cdq
or
inc
lods
cmc
and
dec
outs
pop
jecxz
push
or
out
cwde
sbb
jno
sbb
pop
sbb
add
jbe
add
pusha
jecxz
inc
pop
adc
jae
add
add
dec
dec
repnz
mov
cmps
add
cmp
cmp
push
mov
xchg
push
daa
int3
aam
sbb
and
ret
mov
push
push
int
add
inc
push
push
inc
mov
js
xchg
adc
stos
inc
xor
and
jge
sbb
pusha
adc
pop
adc
mov
pushf
pusha
loopne
mov
stc
dec
out
mov
mov
mov
mov
cmps
add
ja
push
repnz
mov
jmp
or
mov
push
push
and
fisubr
pusha
call
(bad)
mov
add
lods
inc
and
ins
ret
push
les
push
mov
jo
inc
dec
adc
mov
sbb
pusha
call
lock
pop
jg
or
pop
inc
jmp
inc
mov
and
mov
fbstp
sbb
cmp
add
mov
mov
xchg
lahf
sub
add
in
jge
imul
lods
iret
test
jp
xor
fistp
and
ins
add
dec
lea
not
nop
out
jbe
lahf
iret
cs
and
add
nop
add
add
add
push
add
mov
jnp
dec
loopne
fdivp
mov
push
dec
push
push
jge
in
add
mov
xor
sub
or
je
pop
inc
jecxz
test
lahf
push
icebp
mov
out
out
scas
jmp
and
push
push
push
stos
rcl
sub
call
jnp
add
add
add
add
shr
std
cld
add
pop
or
or
add
enter
or
cdq
pop
push
fimul
and
sbb
add
add
dec
add
fs
cmps
fs
add
adc
cmps
fs
push
pcmpgtb
fs
or
cmps
fs
cmps
sbb
or
fs
adc
fs
cmps
fs
adc
rcl
lock
loopne
rcr
push
popa
and
fcom
mov
adc
cmp
ja
mov
test
push
jmp
imul
pop
mov
and
movs
xor
adc
stos
add
jns
mov
sti
test
sub
lea
into
jbe
add
jo
daa
sbb
adc
adc
inc
clc
or
pop
mov
enter
(bad)
call
sbb
push
sbb
cmp
jl
inc
jo
out
add
popa
sar
pop
inc
jle
mov
inc
(bad)
cmp
mov
push
shr
sbb
cmp
leave
dec
mov
lock
cmp
or
repz
mov
dec
bound
push
sub
clc
push
hlt
push
lea
imul
clc
inc
lock
or
inc
push
push
lea
add
push
sbb
adc
push
retf
sti
add
rol
push
(bad)
pop
or
inc
mov
clc
lods
test
mov
ror
(bad)
or
push
adc
aas
pop
dec
movs
popa
scas
test
retf
sub
or
popf
inc
lea
xor
jo
jne
inc
sbb
ins
mov
jmp
inc
jb
xchg
test
pop
mov
ja
lods
jmp
add
adc
loopne
movs
sbb
or
daa
into
cmp
add
xor
or
cmp
(bad)
cmps
in
shl
pop
pop
adc
cmps
sbb
jb
xchg
push
lea
adc
add
lds
inc
shr
and
or
adc
sub
retf
mov
cdq
rol
or
push
daa
and
xor
inc
pop
add
jbe
mov
add
inc
adc
popf
mov
adc
inc
mov
adc
pop
mov
inc
aaa
jmp
lods
punpckhdq
jae
dec
movs
fst
dec
or
inc
mov
xchg
sbb
movs
addr16
and
movs
add
fcmovbe
mov
xor
fsubr
and
mov
outs
xchg
scas
mov
cld
sbb
mov
jno
dec
int3
sbb
mov
sub
xchg
or
ss
imul
test
(bad)
fimul
xor
arpl
scas
shr
pop
out
push
(bad)
mov
and
mov
or
xchg
pop
add
jle
add
je
lds
xor
shl
aad
push
arpl
mov
jmp
add
push
xchg
stos
mov
jmp
lea
cmps
push
add
shr
hlt
add
cwde
dec
or
adc
mov
(bad)
dec
sahf
inc
cld
sub
cdq
add
inc
xlat
adc
sbb
bound
mov
add
lea
test
std
movs
pop
mov
mov
mov
inc
mov
(bad)
or
outs
sub
aad
aad
or
xchg
push
dec
inc
dec
push
sub
cmp
jbe
daa
and
scas
aaa
sbb
add
and
xchg
sub
pop
loopne
and
jne
push
push
retf
or
jmp
inc
loop
and
in
test
sub
jp
stos
adc
sbb
call
ror
gs
or
shl
rcl
add
js
leave
and
jmp
movs
inc
mov
test
adc
fdiv
push
cmp
or
imul
xor
pusha
mov
adc
push
cmp
test
test
outs
pop
movs
jge
(bad)
sbb
sar
xchg
sbb
push
adc
fsub
xor
sub
mov
jle
gs
inc
xchg
ret
mov
pop
cmc
es
and
test
jmp
jecxz
jmp
nop
adc
jle
nop
and
add
push
pusha
xor
adc
enter
not
lock
rol
aad
outs
or
jl
add
jne
ret
jne
push
and
xor
pop
adc
retf
dec
movs
sub
push
enter
test
mov
add
add
psubusb
mov
neg
fs
or
inc
in
cld
or
(bad)
lods
xchg
test
jbe
pop
xor
adc
(bad)
inc
sub
jmp
lods
adc
inc
add
popa
inc
call
cmp
push
cmp
cmp
dec
and
js
xchg
push
fdiv
fimul
push
sbb
ret
into
dec
aam
test
test
add
push
not
mov
push
and
push
pop
push
inc
pop
jno
pop
popf
mov
movzx
(bad)
inc
fcom
jns
data16
dec
sbb
jecxz
mov
je
cmp
test
adc
mov
and
sub
outs
jbe
jge
mov
stc
sbb
ret
xchg
ret
stc
inc
or
shr
inc
iret
lods
aaa
push
cdq
cmp
scas
mov
ror
sbb
lock
aam
add
or
mov
inc
hlt
cmp
mov
xor
xchg
nop
inc
inc
mov
andnps
or
pop
or
repnz
xor
(bad)
fdecstp
cmp
jne
cmp
repnz
jle
sub
xchg
addr16
out
shl
push
daa
mov
push
adc
or
in
retf
add
dec
and
rcl
cmp
jo
mov
inc
shld
jo
fidiv
test
push
in
dec
popf
add
dec
imul
mov
inc
jl
mov
ret
fcmovbe
cmps
retf
icebp
xor
sar
jae
cmp
jmp
cmp
pusha
pop
sbb
pop
dec
sar
or
mov
test
sbb
push
movs
adc
retf
add
(bad)
mov
je
sbb
movs
xor
pop
jg
add
cmp
push
inc
mov
rcl
loope
or
add
dec
push
add
jnp
jo
inc
imul
jno
xlat
pop
sub
or
and
mov
push
rol
ret
push
loopne
aam
or
(bad)
es
dec
mov
mov
pop
or
inc
dec
ja
jb
and
sub
push
ja
or
jmp
in
xchg
add
fwait
js
dec
dec
push
inc
inc
dec
or
pop
and
ffreep
pop
cmp
adc
and
pop
movs
add
dec
mov
adc
pop
pop
adc
leave
push
mov
cmps
push
xchg
or
inc
mov
push
popa
mov
popa
jnp
add
cld
retf
outs
das
and
scas
bound
cmp
mov
and
fwait
not
inc
loope
imul
push
xor
data16
nop
and
mov
xchg
fstp
dec
enter
rcl
or
dec
lods
dec
mov
pop
sub
mul
stos
xchg
cwde
dec
movs
call
mov
je
sbb
add
dec
dec
or
adc
xchg
cmp
(bad)
movs
arpl
dec
jb
fisttp
fst
lods
jge
or
shl
dec
inc
sub
cs
mov
or
add
js
jmp
sub
add
test
das
je
imul
xor
inc
add
sub
mov
jecxz
pop
fimul
cdq
mul
out
push
and
sub
dec
mov
mov
inc
dec
(bad)
mov
push
sar
cmp
ret
and
push
mov
mov
sbb
jmp
clc
jmp
sbb
loopne
push
adc
dec
dec
push
lock
xor
popf
je
inc
gs
movs
xor
xor
sub
jo
in
outs
adc
and
pusha
push
call
cs
cmp
mov
adc
nop
cmp
adc
xor
test
das
and
fldcw
jle
cld
fbld
pop
sub
inc
cdq
idiv
adc
xlat
push
pop
adc
imul
sbb
in
pusha
jmp
and
int
xchg
sahf
daa
fs
fcomp
push
inc
or
out
mov
fadd
fldz
xchg
je
fmul
mov
mov
ins
lds
or
xor
repnz
xor
adc
mov
adc
adc
jne
adc
adc
arpl
adc
jnp
movs
dec
repz
and
fadd
or
push
jne
mov
sbb
jmp
cmps
sbb
imul
push
test
(bad)
(bad)
ds
add
mov
sbb
in
inc
xchg
mov
jnp
cwde
or
fadd
(bad)
jmp
inc
push
rcr
mov
pop
pop
cmp
push
pusha
jno
cmp
push
iret
mov
scas
mov
addr16
or
lea
sbb
in
imul
cmp
mov
push
inc
cmp
loop
pop
add
push
sub
add
jae
sub
fnstcw
xor
add
or
fistp
stc
push
and
bound
rcr
push
add
dec
add
inc
dec
pop
pusha
pop
mov
dec
push
and
fchs
fld1
fld
fld
xor
int3
adc
and
retf
lahf
test
cmp
loope
loop
fld
inc
pop
mov
push
dec
or
in
pop
jnp
sbb
fyl2x
imul
fimul
std
inc
ret
std
(bad)
xchg
cli
push
cmp
fstp
xor
outs
nop
popa
ret
(bad)
adc
repnz
mov
mov
fcom
jbe
enter
fcmovu
loope
fsubr
leave
fmul
fsubrp
jmp
push
sbb
sub
shl
loopne
das
adc
mov
sti
jne
leave
or
fdivrp
dec
call
mov
fidiv
push
icebp
sbb
xchg
push
add
fmulp
test
inc
or
or
retf
mov
hlt
add
cld
bound
add
sbb
rol
or
cmp
jmp
sub
adc
shr
push
or
pop
fmul
(bad)
cmp
pop
in
ret
mov
jns
gs
pop
retf
mov
xchg
sbb
add
mov
sub
jns
adc
push
xor
or
jle
rcl
adc
cwde
loopne
(bad)
psubd
xor
and
xor
push
add
xchg
and
adc
mov
mov
sub
dec
loopne
adc
or
hlt
call
fistp
ds
dec
xor
mov
rcr
adc
in
pusha
adc
inc
push
leave
or
add
pop
xor
xor
and
push
popa
and
test
and
outs
loopne
or
inc
or
data16
jne
push
push
rcr
and
push
add
ins
sub
fldenv
sbb
push
pop
push
jne
outs
add
test
ret
and
push
or
xchg
sub
mov
shl
or
int
add
adc
rcl
or
stos
sbb
test
das
jmp
aam
call
mov
add
fdivr
outs
icebp
adc
sub
ret
inc
(bad)
popf
in
push
je
xchg
je
out
out
mov
aad
push
imul
add
jae
sub
shl
push
sub
retf
cli
sub
fnstenv
cmp
sub
xchg
(bad)
jle
fisubr
fldenv
adc
outs
mov
into
pop
mov
jg
jl
addr16
jo
xchg
in
clc
xchg
lea
std
mov
sbb
sub
scas
add
inc
lods
add
xchg
add
lea
mov
add
jecxz
mov
int3
xor
sub
jl
rcl
mov
rcl
loope
into
pop
(bad)
jns
in
pop
or
and
cld
sbb
push
dec
sbb
ins
adc
add
outs
adc
mov
aam
call
cmp
cmp
xchg
inc
aaa
loope
inc
pop
push
inc
adc
mov
or
pop
lock
ds
dec
fsub
pop
enter
or
mov
hlt
add
cmovo
add
cmp
xchg
xchg
inc
or
jl
sub
call
rcr
and
mov
mov
or
adc
cli
imul
push
popa
pop
push
inc
adc
push
cmp
push
inc
and
addr16
mov
add
and
iret
or
sbb
jbe
push
adc
in
inc
cmp
or
popa
daa
cld
jbe
sub
fisubr
cmp
pop
inc
mov
stc
mov
mov
add
mov
xchg
xchg
pop
icebp
jnp
(bad)
pusha
sbb
push
pop
sbb
pop
cmp
add
mov
fmul
data16
adc
sub
or
sub
mov
jmp
mov
leave
mov
stos
adc
push
prefetcht1
add
rol
iret
or
sub
inc
sub
sbb
pop
pushf
mov
cmp
jo
or
or
rcr
xor
or
pop
or
lahf
nop
addr16
iret
mov
loopne
push
ret
loope
int3
adc
lock
push
out
or
add
add
clc
idiv
xor
(bad)
std
xor
imul
fcomp
and
add
xchg
add
mov
out
sbb
(bad)
pop
arpl
movs
add
sub
cmp
movs
pop
mov
dec
xor
adc
hlt
int3
pop
push
lea
lods
cld
pusha
push
js
dec
push
test
pop
cmp
or
inc
daa
jae
verr
or
stos
ror
xor
cmc
mov
sti
push
and
sub
dec
or
adc
mov
ror
jmp
or
jo
call
retf
and
inc
mov
and
sub
cmp
cmp
jp
or
push
in
pop
push
test
std
xchg
push
nop
sub
sbb
xchg
pop
inc
test
mov
jl
imul
je
push
cmp
loope
ins
test
mov
jo
mov
mov
test
in
adc
add
(bad)
and
xchg
ret
adc
enter
(bad)
inc
push
gs
xchg
inc
push
pop
xor
test
push
or
mov
wbinvd
lahf
adc
ret
test
inc
adc
cld
jmp
pop
cmc
or
push
cmc
ds
fcomp
push
and
mov
cmp
mov
pushf
icebp
fld
cmp
dec
push
and
mov
shl
xor
cmp
sub
sahf
outs
add
xchg
mov
ret
sub
sub
add
or
daa
or
iret
ret
or
and
pop
or
in
jbe
fistp
push
jnp
push
adc
pop
pop
sar
lea
in
push
add
inc
sbb
push
xor
ret
stos
mov
push
shr
jo
scas
sub
call
clc
in
daa
sbb
and
mov
gs
adc
out
dec
add
pushf
push
cwde
repz
xchg
out
jb
mov
mov
in
sbb
dec
add
add
stos
aad
inc
je
imul
aad
jmp
je
xchg
pop
dec
push
dec
jb
pop
scas
cwde
dec
lea
push
lea
push
adc
mov
jle
inc
loope
fisttp
xor
aam
push
js
jne
jns
outs
in
bound
je
push
sub
ret
cmp
push
inc
fsub
sub
out
loopne
cs
fcomi
adc
inc
out
ret
push
callw
pop
mov
test
mov
mov
dec
push
mov
data16
push
movs
call
inc
xchg
loopne
rcl
js
jne
retf
adc
test
mov
mov
in
js
in
les
xor
les
nop
add
clc
add
fiadd
test
dec
sub
outs
aam
cmp
jl
dec
push
mov
stos
or
dec
jmp
push
rcl
jb
lock
enter
aam
sub
dec
aam
imul
in
in
dec
nop
pop
test
xlat
jmp
dec
mov
in
(bad)
(bad)
(bad)
add
pop
push
dec
dec
(bad)
push
in
pop
test
pop
jle
xchg
xchg
cmp
mov
add
scas
sar
add
add
or
out
call
enter
bound
dec
sub
inc
movs
cmps
cmp
pop
xor
xor
outs
mov
mov
pop
les
test
das
add
mov
sub
rcr
add
leave
add
(bad)
fcmovnb
or
or
cmps
scas
sar
adc
add
sub
adc
mov
add
jp
and
sub
pusha
cmp
push
xchg
inc
push
cmp
adc
lea
cmps
or
out
aaa
inc
pushf
imul
and
xchg
and
push
pop
lock
inc
or
scas
out
xor
push
cmc
out
cmp
mov
movs
xchg
mov
test
fmul
test
inc
in
inc
sbb
cld
mov
add
xor
mov
sbb
shl
sbb
inc
inc
push
push
lods
push
pushf
movs
xchg
pop
popf
dec
cmp
hlt
cmp
data16
movs
cdq
mov
fwait
inc
push
stos
sub
cmp
inc
call
xchg
ins
movs
jns
jne
lock
xchg
add
xor
cmp
add
adc
mov
add
push
mov
enter
bound
ret
ins
push
out
sbb
push
mov
sub
inc
xchg
fwait
push
inc
stc
add
aas
jmp
adc
mov
xor
movs
add
cmp
cmc
xor
not
ret
(bad)
push
and
fadd
adc
jbe
enter
mov
cmp
adc
add
clc
mov
imul
jb
push
arpl
or
or
mov
cmp
sar
bound
jb
mov
jbe
adc
aam
sbb
and
mov
aaa
outs
ja
mov
add
mov
sti
jmp
movzx
jle
add
add
out
in
dec
sub
cmp
and
sub
mov
or
fsincos
sar
jbe
sub
int3
sahf
mov
add
ret
add
pop
pop
jmp
fisub
cli
retf
mov
push
push
loopne
and
pop
int3
sub
xor
pop
pop
cld
rol
inc
sbb
and
cld
jle
jp
inc
scas
stos
test
push
adc
(bad)
jns
dec
or
inc
mov
dec
loope
ins
cmps
inc
and
mov
jmp
data16
jmp
addr16
inc
rcl
xchg
push
dec
add
and
(bad)
call
xor
or
mov
shr
add
in
out
push
push
sbb
push
or
ror
sbb
bound
dec
xor
shl
adc
arpl
imul
jne
in
sub
lods
add
xor
adc
inc
cmp
data16
lods
ins
jle
mov
push
in
mov
imul
add
(bad)
mov
pop
add
inc
push
add
push
aaa
push
(bad)
ja
cmp
jb
cld
ja
retf
mov
and
jb
or
jbe
add
inc
jnp
xchg
js
xchg
inc
sar
adc
in
dec
mov
mov
jmp
inc
shl
mov
popa
and
add
or
dec
cmp
push
sbb
pop
push
mov
enter
fstp
pop
jmp
gs
or
dec
pusha
push
pop
shl
dec
push
int3
hlt
je
jg
imul
stos
jmp
sar
popa
and
cmp
bound
and
xor
sub
sub
cmps
hlt
and
data16
push
inc
fdiv
leave
mov
xchg
add
or
push
and
xor
mov
loopne
adc
xor
fld
push
add
push
sub
xor
int3
adc
add
in
repz
jle
je
mov
push
push
rol
pop
cmp
xor
xor
jmp
push
inc
jnp
adc
ins
push
push
cld
in
pop
push
pop
sbb
fisubr
dec
push
movs
pop
sahf
outs
push
push
lahf
jne
dec
pop
mov
(bad)
int
cli
jge
jno
adc
je
add
in
mov
adc
inc
push
out
pop
cs
xchg
push
mov
call
inc
or
sub
push
jmp
adc
(bad)
retf
stos
movzx
imul
and
mov
cld
inc
js
mov
inc
inc
cmps
jmp
mov
cmp
xchg
lock
imul
push
push
shr
add
add
mov
stos
mov
retf
movs
outs
add
jae
sbb
scas
adc
jle
mov
clc
dec
or
cmovge
adc
(bad)
adc
add
sbb
and
xor
lock
jb
ds
clc
(bad)
loopne
enter
and
push
stos
sub
sub
inc
pushf
push
mov
sub
cmp
or
add
dec
(bad)
add
adc
mov
adc
es
add
pusha
push
fpatan
imul
ja
inc
sub
shl
rol
pop
fadd
ret
loope
dec
push
jecxz
xor
add
icebp
fmul
cmp
mov
push
mov
and
and
cmps
or
or
or
mov
pop
ror
fucomip
mov
(bad)
xor
add
adc
fldcw
cmp
call
mov
dec
cmp
push
inc
gs
clc
or
pop
jmp
(bad)
jne
fadd
inc
or
xor
dec
shl
sub
outs
or
adc
add
stc
jne
fs
xor
inc
adc
in
dec
int3
nop
mov
mov
mov
mov
and
jae
inc
push
aas
add
push
xchg
in
jo
pop
cli
or
jnp
push
add
loopne
inc
and
pop
dec
enter
adc
inc
sbb
movs
out
xchg
jns
clc
add
jb
push
movs
cmp
jbe
bts
jecxz
rol
inc
sub
clc
jo
jle
mov
adc
mov
inc
pop
lea
mov
nop
jns
in
and
mov
pop
mov
push
sbb
dec
dec
xor
ret
xchg
dec
xchg
sub
(bad)
inc
iret
or
sbb
mov
aas
ror
or
add
sbb
push
dec
jb
jp
les
rcr
adc
dec
(bad)
std
or
dec
push
inc
jns
jge
jo
jmp
ss
lock
outs
push
lea
push
or
std
sbb
fwait
add
mov
enter
xchg
inc
cmp
test
jbe
xlat
add
jl
inc
or
jg
rcr
loopne
add
idiv
sub
jmp
int
inc
sbb
mov
dec
add
mov
les
push
push
add
bound
push
cmp
pop
das
shl
add
jl
cmp
gs
inc
push
adc
inc
pop
adc
retf
mov
add
push
sub
xor
add
sub
mov
cmp
cmp
in
mov
push
jge
shr
xor
xchg
clc
and
push
add
and
jmp
or
ret
sub
leave
iret
cmp
xchg
sub
and
mov
and
sbb
(bad)
sub
sub
mov
jp
sub
jmp
fnsave
sub
sub
add
sbb
leave
in
fstp
pop
jo
in
sbb
jg
add
scas
or
jne
sbb
mov
lock
dec
sbb
adc
cwde
sub
push
push
pop
inc
push
sbb
dec
enter
cmp
fs
les
ins
call
fst
mov
test
add
add
push
mov
sbb
mov
inc
cld
or
je
jo
jo
mov
xor
enter
sub
dec
push
xchg
imul
dec
and
popf
mov
ins
ins
dec
cmp
imul
lock
adc
adc
mov
sub
adc
xor
mov
mov
dec
fdiv
das
and
fmul
sbb
inc
bound
test
add
pushf
adc
adc
cmp
adc
and
inc
lea
daa
bound
and
add
and
shl
add
push
xchg
outs
xchg
add
jno
push
inc
or
pop
daa
mov
repz
xor
imul
add
(bad)
lock
aam
add
jmp
bound
test
in
xor
push
adc
add
cmp
add
fcomp
in
imul
and
cmp
jle
repz
je
mov
in
mov
adc
and
aas
add
add
push
push
test
xor
lods
push
jge
mov
adc
mov
outs
mov
jp
iret
cmp
xor
mov
dec
test
and
inc
add
or
mov
add
cmp
adc
es
adc
hlt
stos
pop
ret
push
sbb
dec
scas
and
jnp
jbe
xchg
jmp
and
or
fdiv
add
or
or
fs
dec
nop
and
cmp
mov
sbb
sub
jae
out
call
mov
jo
dec
dec
in
add
call
fwait
daa
adc
and
cmp
or
mov
cdq
mov
pop
jnp
fidiv
movs
xchg
pushf
sbb
inc
sub
xor
sbb
or
pusha
mov
stos
push
dec
or
push
iret
nop
popa
xor
test
push
jo
cmp
mov
xchg
adc
and
shr
retf
dec
or
jmp
inc
cld
and
clc
xor
and
sbb
pushf
aad
(bad)
call
pop
cmp
sbb
mov
ret
push
pop
cmps
fstp
or
sub
pop
xchg
push
jl
jle
mov
sub
out
jb
pushf
mov
xchg
ret
sub
cmp
sub
push
pop
inc
mov
xchg
ins
lods
mov
cdq
push
push
pop
idiv
push
in
hlt
push
push
sbb
push
inc
mov
jbe
ror
or
push
push
pop
adc
or
out
mov
add
add
jne
mov
bound
les
pop
xchg
out
lds
imul
mov
inc
test
or
xchg
xchg
ss
sub
and
xor
ins
xchg
pop
pop
cmp
scas
push
popa
or
jo
test
in
jl
das
xor
cmp
(bad)
stc
inc
or
test
xor
scas
dec
retf
sbb
push
lock
adc
sbb
lds
inc
sbb
push
add
adc
mov
ss
inc
hlt
or
mov
fs
jle
pop
or
xor
xor
(bad)
cmps
xchg
jb
pop
add
stos
mov
add
adc
jb
cmp
lods
add
hlt
mov
or
jb
add
imul
add
(bad)
ror
data16
dec
pop
or
ret
dec
push
add
xor
jo
jp
fisttp
xchg
add
pop
sub
or
xor
push
jnp
retf
jo
sbb
std
and
or
iret
and
adc
jmp
xchg
push
dec
fsub
and
fadd
sub
lock
sbb
add
jns
lea
or
outs
sbb
fs
jl
dec
stos
add
imul
popa
stos
mov
test
dec
aad
dec
add
cdq
(bad)
mov
dec
push
jns
iret
mov
loopne
jg
mov
xchg
jnp
rcl
push
and
mov
inc
out
pop
or
sahf
fs
dec
mov
test
stos
cmp
sbb
aaa
push
and
or
push
js
out
cmp
adc
and
aaa
adc
jge
into
cmps
adc
in
movs
je
adc
pop
adc
jne
test
adc
mov
inc
and
test
sbb
push
pop
push
inc
add
pop
add
add
int
fs
cmps
mov
pusha
adc
call
inc
pop
mov
add
in
mov
sbb
les
xchg
addr16
adc
aam
in
jns
fadd
add
add
push
jmp
gs
mov
lock
clc
and
push
inc
cld
test
dec
add
or
lock
dec
clc
nop
js
clc
cli
ja
sub
push
cmp
or
push
jle
or
jg
jmp
lods
leavew
mov
pusha
pop
lods
sbb
or
adc
xor
jmp
add
adc
xchg
push
mov
add
xchg
jb
add
pop
push
in
cmp
mov
and
iret
fild
fldz
fcomp
jecxz
adc
or
fdivr
dec
test
xor
(bad)
rol
out
fidiv
pop
and
mov
lods
test
pop
daa
in
cmp
and
mov
cmp
ficom
das
sbb
movs
sub
dec
add
stos
les
xor
dec
add
adc
dec
add
je
push
das
and
mov
cmp
call
bound
push
mov
pop
inc
add
mov
push
sbb
test
xor
jmp
leave
mov
shl
jmp
xor
sub
or
das
adc
xchg
adc
je
cmp
push
or
ss
jmp
push
cmp
push
adc
inc
loopne
sahf
push
js
adc
aaa
jle
xchg
rcl
or
dec
icebp
cmps
jp
jbe
(bad)
add
adc
pop
lods
mov
gs
loope
xchg
and
ret
clc
push
cli
inc
retf
aam
inc
push
push
ja
sub
loopne
in
shl
dec
cmps
cli
add
lea
cmps
mov
jne
int
xor
mov
es
push
push
mov
add
push
inc
inc
or
jmp
jge
test
cmc
fs
jmp
add
or
add
loope
mov
sub
push
pusha
es
test
movs
adc
inc
pop
rcr
jmp
mov
adc
cwde
or
push
out
push
xchg
add
pusha
and
ins
call
retf
push
out
pop
imul
enter
lock
mov
in
test
pop
jae
push
push
pop
out
lock
and
sti
wrmsr
ficomp
ins
cmc
mov
dec
add
adc
leave
xchg
add
rcl
add
inc
add
xor
sbb
mov
fwait
(bad)
xor
popa
mov
pop
out
push
scas
adc
in
mov
mov
loopne
add
jbe
xor
lock
sub
pop
popa
add
jecxz
bound
mov
lahf
js
adc
sbb
jg
xor
icebp
inc
mov
push
cmp
xor
sub
jb
add
inc
xchg
pop
hlt
and
xchg
sub
or
sahf
inc
mov
into
and
pusha
popa
push
mov
popf
(bad)
dec
adc
ret
sti
sub
jecxz
inc
adc
xor
das
and
test
push
pusha
inc
mov
ins
cdq
fcomp
test
js
in
mov
mov
sub
xor
or
iret
mov
ss
mov
enter
mov
ds
mov
andps
lahf
pop
jbe
mov
pop
push
and
ds
adc
lahf
je
nop
and
cmp
jge
movs
sbb
mov
in
xchg
and
jns
jmp
cmp
in
test
xchg
and
out
cmp
iret
mov
mov
sub
add
mov
dec
repnz
les
and
push
into
xor
inc
push
rcl
fmul
xor
jp
fadd
dec
cdq
addr16
sub
adc
in
push
jp
and
clc
cwde
xchg
popw
outs
loope
sbb
or
sub
cmp
adc
iret
jae
push
mov
mov
movs
or
or
lea
inc
adc
test
mov
sbb
js
and
daa
pushf
and
int3
fcom
jne
pop
sbb
movs
ja
push
scas
pop
cmps
enter
push
push
repnz
push
movzx
pop
je
xchg
xchg
mov
enter
pop
movs
ficom
stc
jbe
outs
movs
stc
jo
add
cwde
adc
repnz
sbb
and
and
enter
xor
inc
jae
mov
dec
or
into
sbb
pop
jns
push
fisub
mov
dec
inc
fmulp
sbb
test
pusha
mov
sbb
mov
inc
xchg
cmp
iret
enter
adc
mov
adc
lods
mov
mov
mov
dec
hlt
xor
inc
sub
rcl
outs
in
fcom
in
in
jl
add
call
lahf
xchg
and
sub
scas
sub
je
dec
xor
jg
inc
std
push
cmp
je
bound
je
ins
bound
jmp
mov
inc
repz
add
and
push
lea
jmp
jo
dec
xor
xor
aas
sti
jge
lea
dec
jmp
jle
(bad)
frstor
fidivr
jl
ret
or
(bad)
dec
loop
aaa
and
inc
test
pushf
icebp
popa
jbe
mov
xchg
jne
sub
test
mov
pop
add
push
push
das
mov
xor
retf
loope
add
add
adc
or
cmp
push
push
sbb
add
pop
les
adc
scas
mov
movs
inc
and
dec
mov
(bad)
ins
or
push
dec
je
adc
or
jnp
stc
imul
sub
adc
add
pop
fst
add
je
dec
add
popf
pop
loop
add
inc
push
mov
inc
adc
daa
push
(bad)
cmc
sbb
push
les
cwde
test
fadd
retf
inc
es
pop
mov
or
movs
add
ins
mov
jmp
bound
xor
sub
add
push
mov
push
movs
rcr
nop
lahf
(bad)
loop
rcr
xchg
or
inc
dec
jle
sub
xchg
jo
mov
outs
and
mov
cmc
push
or
mov
inc
mov
xchg
call
push
add
pop
or
or
or
jmp
mov
retf
mov
push
mov
mov
das
pusha
sar
test
out
outs
xchg
push
or
add
add
add
jb
xlat
cmp
sub
mov
mov
cmp
xchg
cmp
sbb
popf
jne
ret
pusha
pop
stc
cvttps2pi
and
adc
pop
push
bound
add
add
dec
cli
ins
je
(bad)
xchg
rcr
or
adc
in
push
mov
out
iret
imul
push
and
js
jle
xlat
std
call
push
or
jb
fild
scas
jbe
cmps
pop
pop
push
or
jge
retf
test
or
mov
gs
xor
or
ror
push
jo
and
pusha
call
mov
pop
push
cld
outs
mov
mov
sar
bound
daa
inc
sub
fadd
dec
mov
or
or
repnz
gs
inc
(bad)
sbb
mov
sub
cmps
cmp
dec
and
(bad)
xchg
nop
stos
retf
ror
fiadd
jle
(bad)
imul
out
cmp
test
push
adc
add
inc
add
pop
ficomp
and
xchg
data16
adc
add
add
inc
movs
push
sub
sbb
inc
pop
sbb
mov
xchg
test
aaa
inc
aas
retf
sub
(bad)
add
ins
out
mov
icebp
daa
inc
fistp
fstp
rol
jne
mov
adc
push
and
push
ror
in
rcl
aas
or
or
jae
jae
inc
fnstcw
aas
and
aaa
mov
rcl
add
adc
in
mov
push
adc
iret
xchg
sub
ret
cwde
pop
inc
xor
jnp
mov
repnz
push
jne
jne
or
in
or
jnp
fs
idiv
dec
repz
mov
sub
pop
lods
sbb
mov
sub
pop
retf
xor
fdiv
sbb
and
mov
ins
inc
imul
adc
jo
test
dec
ds
sub
dec
adc
cmp
sub
js
or
mov
je
sbb
loopne
push
dec
cmp
and
cmp
aaa
lock
loopne
add
push
sub
(bad)
sub
adc
mov
not
xchg
scas
xchg
cmp
xor
or
retf
sub
cmp
or
and
xor
add
and
rcl
jle
mov
inc
pusha
jnp
xor
movs
loopne
and
jmp
cmp
add
mov
add
in
jns
add
addr16
or
inc
add
nop
dec
push
(bad)
push
daa
push
or
add
jmp
and
push
pusha
cdq
add
clc
(bad)
add
mov
pop
cmp
shl
sbb
add
mov
and
rcl
pop
adc
inc
cld
shr
cmp
jbe
inc
pop
or
xchg
sub
dec
sbb
inc
aam
mov
or
mov
mov
sbb
mov
jmp
jnp
xchg
jne
mov
(bad)
adc
add
or
out
xor
inc
in
sub
add
test
cmp
push
fnstsw
push
cdq
xor
jne
inc
inc
sub
jne
and
sar
mov
lock
ds
jmp
clc
mov
icebp
mov
imul
add
cli
pop
cmp
add
enter
cs
pop
into
pop
cdq
adc
(bad)
push
rol
movs
fcom
push
mov
mov
into
mov
test
mov
push
mov
(bad)
sbb
mov
inc
cmp
movs
pop
sbb
inc
add
or
sub
imul
add
jge
cmpxchg
cmps
push
sub
mov
fbstp
lea
daa
lods
popf
mov
sbb
cmp
clc
pop
ss
jo
(bad)
stc
test
adc
data16
add
aas
popa
or
ret
sar
jle
outs
ds
sar
dec
inc
loopne
dec
iret
dec
clc
jl
jmp
add
aaa
sub
jp
jg
mov
adc
(bad)
outs
push
mov
in
dec
or
ret
mov
jno
ja
outs
adc
jmp
cmp
push
push
jecxz
xor
inc
inc
(bad)
in
mov
sar
adc
mov
mov
sbb
addr16
mov
pop
push
sbb
fs
push
inc
jns
push
or
sahf
cmp
push
cmp
jb
rol
xchg
retf
xchg
inc
push
jle
mov
add
loope
leave
icebp
add
mov
loope
ins
add
dec
ror
xchg
fild
icebp
xchg
fucomi
pop
shl
lock
mov
cmps
mov
lea
lea
inc
cmp
jmp
add
push
sbb
rcr
xchg
mov
pop
inc
nop
push
inc
and
mov
or
sbb
adc
outs
mov
int
pop
pusha
adc
aad
pop
or
or
push
inc
xchg
pop
adc
les
pop
or
rol
iret
not
xchg
test
pop
jmp
arpl
lds
push
add
dec
adc
imul
fisubr
and
adc
push
mov
sub
xchg
stos
xchg
jp
loope
test
inc
sbb
or
or
sbb
ret
cwde
adc
test
inc
fld
mov
adc
lock
adc
push
mov
cmp
lahf
lock
loopne
add
inc
and
push
push
cmp
loope
les
jne
mov
(bad)
clc
add
clc
sub
inc
sbb
xchg
pusha
in
add
repnz
jbe
cmp
je
and
sbb
xor
jmp
push
inc
pop
inc
loop
or
lock
pop
gs
enter
pop
ins
pop
rol
adc
es
push
inc
push
outs
addr16
xchg
enter
daa
add
rol
and
clc
or
icebp
xor
adc
rcr
fcom
adc
lods
add
repnz
push
xlat
repz
sbb
and
jmp
fiadd
test
inc
mov
ins
inc
mov
and
xchg
xlat
or
daa
loope
movups
jb
add
mov
xlat
test
lods
adc
xor
les
loope
inc
hlt
inc
push
cmp
jns
loopne
sar
add
xor
iret
push
imul
pop
dec
mov
adc
push
js
sar
stos
dec
and
push
in
and
adc
rcr
add
cmp
je
icebp
xchg
xor
and
and
adc
lock
outs
push
mov
fs
mov
mov
add
sti
xchg
mov
sub
loop
mov
push
inc
and
rol
pop
xchg
push
pusha
add
jmp
push
jbe
inc
ret
pop
push
cli
push
or
mov
ficomp
sbb
sbb
jne
and
ja
ds
cmp
cmp
mov
add
je
cmp
jmp
xchg
clc
sub
or
loope
add
adc
pop
iret
inc
or
out
sub
shl
test
inc
pop
sub
add
jle
hlt
sub
movs
adc
dec
add
fmul
popa
and
rcl
idiv
inc
cmp
adc
test
enter
or
dec
or
dec
xchg
ret
add
push
and
inc
sbb
and
and
bound
sub
sbb
shl
ret
sti
sbb
rol
fiadd
add
les
into
lahf
cmp
pop
mov
or
test
xor
sub
jne
test
or
push
fcom
sub
shl
add
cmp
test
add
test
arpl
mov
jl
mov
daa
mov
ds
je
test
dec
push
add
sbb
mov
sub
push
sbb
cld
add
fwait
or
and
pop
or
or
pusha
add
xor
nop
arpl
inc
add
and
xchg
fiadd
je
cwde
or
adc
mov
sbb
xor
or
push
and
stos
jg
aam
adc
call
mov
icebp
dec
add
in
or
and
push
mov
sub
out
sahf
push
jmp
dec
push
add
imul
jo
and
fwait
xchg
js
cmp
mov
push
ror
sub
jno
in
xchg
xchg
and
dec
and
mov
push
xor
add
or
mov
or
ror
in
and
mov
dec
cs
clc
hlt
cld
(bad)
ins
fstp
jp
and
das
sub
je
pusha
loope
or
adc
xchg
in
loope
and
test
adc
lods
dec
mov
es
test
test
call
test
add
push
aas
push
test
jbe
push
mov
retf
sar
je
adc
push
out
inc
jmp
pushf
or
push
push
rcr
push
loopne
sbb
clc
dec
sbb
pop
cmp
call
jp
add
push
mov
cmp
mov
(bad)
and
add
adc
ins
and
stos
fcmovnb
xor
inc
(bad)
cmp
or
inc
inc
(bad)
fistp
inc
xor
retf
or
lock
call
pop
mov
xchg
mov
je
push
pop
xchg
sub
xchg
stc
or
dec
push
sub
mov
cwde
xlat
jmp
jno
(bad)
(bad)
cwde
scas
aaa
jno
fsub
adc
sbb
inc
jp
and
sbb
xchg
jge
ret
repnz
dec
loopne
or
jb
or
std
add
mov
adc
and
pop
add
jg
sub
jmp
ficom
fld
stos
dec
fmul
stos
push
add
or
adc
shr
dec
fs
in
xchg
es
test
lods
mov
cmp
mov
in
add
leave
mov
push
rep
js
mov
scas
aam
sbb
pushf
push
inc
enter
pop
mov
sbb
in
dec
xchg
hlt
je
daa
push
xor
dec
dec
stos
sbb
add
mov
fiadd
cwde
dec
xor
inc
mov
dec
and
imul
lock
push
push
ins
adc
inc
inc
or
cmp
mov
mov
adc
inc
clc
call
sub
pop
inc
push
push
scas
add
pop
or
cmp
frstor
cwde
cmp
adc
in
cmp
iret
loopne
sbb
sub
push
dec
jne
jae
push
ret
mov
sub
dec
stos
or
pop
add
add
cmp
sbb
into
stos
mov
jmp
inc
push
mov
push
fiadd
enter
add
(bad)
shr
mov
out
mov
(bad)
sti
mov
sub
repz
mov
xor
movs
cs
push
cmps
loop
mov
mov
adc
test
xchg
aas
inc
push
not
push
(bad)
scas
movs
stos
setg
push
movs
aad
stos
stos
xor
or
and
push
xor
daa
in
cdq
jo
jl
ja
js
push
dec
or
pushf
nop
js
xchg
ret
jmp
lds
je
in
pop
ret
mov
les
cmp
nop
jmp
and
adc
pop
leave
je
adc
ret
push
enter
adc
rol
sbb
xor
push
mov
fsub
daa
inc
bound
add
loopne
sbb
push
push
call
or
adc
jg
jbe
push
jmp
ror
fcmovu
push
add
xlat
and
adc
add
jno
test
shr
xor
inc
popa
jl
sub
mov
xor
test
add
adc
sbb
add
lea
pop
push
cmps
cmps
test
popa
or
pop
lock
inc
add
mov
xchg
mov
dec
loop
push
push
dec
sbb
mov
nop
jns
es
mov
pop
add
jle
popa
fs
out
and
cmp
inc
sbb
mov
cmp
push
mov
inc
(bad)
rcr
mov
cmp
add
xor
xor
inc
push
lock
pop
jmp
push
or
test
loop
out
add
jmp
fisubr
add
xlat
cmp
add
hlt
ficomp
stos
sbb
retf
or
(bad)
sub
xor
push
xchg
adc
daa
or
inc
add
ins
mov
lock
dec
add
into
jae
lods
les
nop
and
cwde
jmp
mov
clc
shl
and
mov
pop
or
imul
loopne
jle
inc
pop
adc
fdiv
pop
mov
sub
inc
ret
push
fdivr
or
inc
mov
inc
imul
adc
pop
add
inc
inc
adc
or
mov
fcmovb
push
ins
lods
sbb
sbb
dec
xor
mov
(bad)
neg
test
add
cmp
popf
sbb
sub
push
mov
mov
rol
push
fdivr
movs
push
adc
movs
nop
mov
mov
ss
mov
ds
iret
int3
mov
mov
fs
add
push
sub
dec
rcr
mov
fsubr
leave
shr
jne
adc
mov
add
ja
in
cmps
add
imul
mov
add
pop
repz
out
sti
inc
je
sub
mov
pop
push
pop
rcl
adc
fsubr
hlt
add
or
push
js
add
and
mov
dec
xchg
aam
mov
push
sti
adc
jo
add
cmp
jae
sar
push
lods
hlt
xor
je
daa
sbb
mov
mov
loopne
jo
enter
lock
stos
addr16
dec
cli
mov
out
repnz
imul
in
ins
test
shl
stos
push
add
sub
jno
es
loope
test
das
call
popf
add
ja
sub
fisub
cmp
pusha
hlt
and
sub
or
fxtract
test
mov
mov
xor
sbb
dec
shl
cmp
add
or
stc
push
push
repz
test
ret
sub
lds
push
add
(bad)
data16
xor
(bad)
cmp
mov
push
pop
adc
inc
and
in
call
push
int3
adc
push
inc
push
inc
sbb
in
inc
and
add
pop
js
add
cld
mov
add
pusha
lds
sbb
and
pop
inc
mov
pop
inc
fcomp
bnd
out
ins
and
adc
enter
and
mov
and
dec
lock
adc
and
cld
cmp
loopne
pop
sub
mov
fndisi(8087
push
add
femms
mov
xchg
shl
ins
xchg
into
sbb
das
sbb
jge
add
outs
jmp
int3
or
push
sbb
aaa
movs
call
dec
dec
push
sbb
sbb
(bad)
mov
pop
adc
jmp
fdivp
mov
jne
mov
jne
push
stos
cmp
fs
ret
xchg
shl
arpl
sbb
jg
ret
(bad)
cmp
fcomp
cmp
cmp
je
dec
cdq
inc
das
xor
test
pop
or
test
mov
das
imul
(bad)
shl
ja
fmul
xlat
and
and
popa
jecxz
hlt
in
test
cli
mov
mov
xchg
in
sub
adc
or
adc
inc
adc
nop
jmp
fldenv
mov
(bad)
pop
mov
cmp
add
or
add
daa
mov
shr
xchg
jno
test
xor
mov
xchg
dec
and
inc
imul
mov
inc
lock
sti
int3
cmp
mov
jbe
fimul
adc
outs
or
adc
add
cmp
test
mov
dec
idiv
mul
leave
shr
mov
add
lock
scas
push
push
shl
pop
inc
sub
add
push
sub
or
test
or
dec
mov
mov
mov
retfw
icebp
jo
fsub
jbe
aam
mov
jp
rol
dec
(bad)
adc
or
jno
jmp
movs
cs
ins
(bad)
dec
fdivr
mov
push
pop
enter
rol
test
sub
call
jmp
mov
or
push
xchg
movs
test
push
test
push
hlt
add
push
iret
dec
mov
push
stc
icebp
mov
and
fbld
cmp
sqrtps
pabsw
push
call
loopne
lods
std
mov
pop
ja
or
aam
js
or
inc
cmp
xchg
mov
repz
cmp
loope
jae
pop
pop
pusha
mov
adc
push
enter
push
pop
jmp
loop
xlat
leave
adc
mov
fdivr
rol
mov
cmp
hlt
cmp
xchg
sbb
sub
dec
add
(bad)
cmp
mov
and
xor
sbb
cmp
repz
mov
test
and
push
cmp
dec
sbb
xchg
hlt
push
pusha
or
pop
mov
nop
not
jmp
push
xor
bound
inc
sub
or
jne
dec
pop
or
inc
or
pop
push
pusha
dec
clc
cmp
ja
jge
mov
mov
pop
sar
and
rol
jl
sub
and
daa
jo
adc
repz
push
lock
sub
jo
nop
cmp
shl
or
and
inc
cmp
ds
pop
in
push
rep
movs
xlat
or
clc
pop
push
popa
sub
push
push
int
das
push
and
loopne
xor
(bad)
xlat
jne
xchg
mov
adc
in
ret
clc
cs
inc
sti
xchg
cwde
or
pop
mov
push
adc
es
mov
or
xor
adc
xor
inc
mov
jnp
mov
sbb
pop
adc
pusha
sbb
inc
xor
pop
cmps
inc
adc
add
adc
cld
dec
jo
jne
test
jge
js
sar
(bad)
push
or
add
push
movs
and
or
les
or
cwde
loopne
pop
inc
imul
inc
test
jmp
push
mov
rcl
pop
test
xor
push
mov
pop
mov
jb
push
jl
push
jmp
int
test
adc
mov
xchg
mov
xor
jmp
lods
test
mov
mov
and
xchg
or
or
int3
xchg
mov
add
shl
jbe
test
mov
or
jo
push
sub
sub
mov
xor
adc
(bad)
pop
mov
add
mov
sar
stc
ret
cli
cmp
mov
and
pop
ret
dec
ins
fadd
ror
or
xor
test
retf
popa
arpl
mov
add
or
mov
mov
movs
popf
jge
rol
dec
push
and
dec
jne
cld
push
or
adc
push
adc
fisttp
add
fisttp
add
push
mov
cmp
rcl
inc
pop
sub
push
sbb
adc
out
fadd
adc
sub
lods
arpl
ins
inc
inc
mov
xor
jb
adc
mov
xchg
xor
add
add
push
imul
cs
mov
sahf
test
mov
js
xor
popf
sbb
adc
sub
enter
lods
lds
pop
sbb
inc
cmp
test
test
inc
add
sbb
(bad)
sub
pushf
aas
add
outs
fcom
xor
xchg
movs
cmc
movs
imul
and
push
sub
push
arpl
push
sbb
loopne
adc
mov
jae
es
push
pop
push
inc
dec
jmp
and
add
add
fbstp
xchg
dec
jmp
test
xor
sub
aas
dec
mov
sbb
mov
sbb
push
movs
pop
les
jmp
int3
or
pop
popa
mov
cmovl
hlt
arpl
(bad)
int
pusha
sbb
stos
sbb
and
mov
cmp
mov
xchg
sub
cwde
or
xor
mov
jge
xor
retf
les
mov
sbb
jg
mov
(bad)
push
out
pop
and
aas
adc
sbb
or
rol
popf
mov
jns
ins
push
or
pop
push
pop
push
xchg
aas
fwait
adc
inc
or
(bad)
rol
and
je
aaa
nop
adc
jne
rcl
xor
into
push
sbb
jns
fiadd
cdq
adc
xor
or
xor
jmp
pop
test
jl
leave
mov
jb
pop
lods
push
jle
pop
xor
cli
sub
sbb
or
push
shl
sub
adc
dec
loopne
test
dec
xor
adc
sbb
sub
and
popf
mov
ss
and
xchg
sti
xchg
mov
xchg
jne
push
sub
sbb
imul
add
ret
mov
xchg
xchg
lods
sbb
xor
loopne
adc
or
int
xor
adc
xchg
sub
adc
jmp
sub
ret
sub
push
test
xchg
push
inc
push
dec
fidivr
or
jecxz
shl
loop
ret
sbb
adc
neg
jbe
fldcw
fadd
push
and
cmp
je
or
ret
inc
and
shr
sbb
sub
add
or
jne
xchg
add
cmps
lods
sbb
push
mov
rcl
and
pop
loope
add
test
xchg
mov
push
push
adc
adc
xchg
jne
pop
xchg
rcr
xchg
and
icebp
sub
out
adc
mov
lds
mov
or
sbb
sub
push
mov
nop/reserved
inc
push
popa
retf
div
push
test
jo
sbb
fisub
mov
inc
xor
out
sbb
les
add
pop
dec
lock
mov
inc
cmp
ins
or
(bad)
sti
add
xor
call
jmp
arpl
mov
in
out
sub
inc
add
jecxz
ds
ss
call
leave
rcl
jo
test
jns
xchg
cmp
xchg
add
cdq
shl
xor
ins
mov
or
por
mov
jl
(bad)
dec
or
int3
mov
aas
and
pusha
pop
out
cld
xchg
pop
int
add
mov
mov
mov
adc
jecxz
mov
ror
(bad)
rcr
mov
sbb
test
cld
mov
mov
or
lea
aas
mov
inc
xchg
xor
mov
adc
inc
xor
movs
and
mov
add
(bad)
jb
mov
xor
push
or
xchg
pop
sbb
or
aam
or
push
pushf
and
xchg
shl
xlat
je
push
addr16
dec
les
mov
mov
add
mov
mov
or
jl
add
xor
pcmpgtd
or
push
popa
adc
sbb
ds
adc
sub
js
cmp
test
arpl
or
add
aam
cmp
xchg
or
jp
in
jo
mov
xchg
add
test
sti
jge
adc
arpl
pop
das
xor
call
xor
xchg
in
adc
mov
push
je
and
clc
jo
cmp
push
push
push
mov
test
clc
push
into
adc
pop
out
push
outs
mov
dec
int
inc
pop
arpl
shl
jp
stos
stos
ss
jbe
call
push
lock
inc
test
adc
aas
js
push
jmp
ins
in
shl
push
cmps
inc
and
xchg
add
jmp
imul
or
je
sub
inc
loop
xchg
add
add
push
cmp
mov
out
or
pushf
mov
int3
es
mov
add
xor
mov
sbb
pop
add
shl
or
push
outs
mov
jge
mov
adc
push
push
imul
dec
(bad)
adc
mov
ja
mov
mov
repz
sub
pop
or
nop
int
(bad)
push
adc
jne
inc
cmp
loop
cmp
pop
dec
xor
push
push
ret
neg
push
and
adc
retf
das
add
into
mov
pusha
jne
into
ds
addr16
enter
or
push
in
cwde
movs
jno
add
call
inc
mov
ret
adc
push
icebp
jo
fimul
push
xor
mov
inc
cmp
je
cld
xor
add
idiv
nop
inc
push
sub
adc
imul
loope
pop
jne
add
fsub
pop
inc
xor
pop
mov
movs
inc
mov
bound
dec
add
sbb
les
pop
repz
or
mov
inc
adc
stc
dec
push
pop
mov
sub
inc
jmp
mov
ret
aas
adc
xchg
dec
pop
push
sub
add
lock
dec
shr
xchg
cdq
and
dec
pop
cwde
pop
clc
jge
test
adc
call
aaa
je
jmp
or
push
push
sub
add
sub
add
into
inc
pop
pop
icebp
jl
xchg
and
push
pop
iret
sub
mov
mov
push
inc
xor
sbb
adc
test
mov
test
nop
(bad)
ss
int
sub
in
xchg
mov
jl
mov
not
ret
and
ret
ins
xor
clc
adc
pop
and
rcr
inc
shl
adc
and
sbb
(bad)
adc
clc
lea
add
push
int3
mov
mov
jecxz
iret
call
dec
in
inc
je
and
and
sbb
aam
sar
or
adc
add
jne
addr16
mov
(bad)
mov
test
lds
mov
outs
(bad)
sti
mov
jg
add
sbb
rcr
cmp
xor
loope
shr
(bad)
jge
xchg
push
or
scas
xor
test
shl
inc
dec
dec
stc
fisttp
(bad)
push
dec
lea
inc
add
outs
cmps
sub
xor
mov
xchg
push
xchg
lods
sbb
jbe
js
stos
mov
jp
mov
or
cmp
mov
nop
ror
sub
mov
adc
pop
lods
in
jb
das
(bad)
jecxz
loopne
mov
iret
lock
push
push
out
dec
inc
mov
mov
adc
mov
add
ror
cmp
sbb
push
cmp
pop
int3
rcr
and
mov
in
sbb
adc
mov
add
and
outs
push
adc
push
pop
fwait
add
imul
loop
sbb
dec
pop
fidiv
(bad)
jg
das
mov
pop
fwait
mov
stc
shl
sbb
push
test
xor
sub
ror
test
sti
mov
cmps
imul
sub
add
(bad)
mov
pop
outs
ror
test
inc
jnp
push
test
cmp
cmp
add
ss
adc
inc
and
add
retf
dec
rcl
cld
mov
add
mov
jb
fadd
bound
inc
jo
loope
jmp
add
add
fldenv
es
xor
push
dec
jg
xor
pop
add
jmp
or
jmp
inc
cwde
jmp
lods
pop
or
cmps
push
pop
jp
pop
or
mov
sub
pop
scas
push
movs
clc
add
adc
or
jbe
push
call
dec
sbb
ret
shl
ja
sbb
fadd
sub
or
fdivr
cmp
sbb
cmp
and
je
sbb
sub
inc
idiv
popa
nop
mov
aad
ret
mov
add
dec
or
sub
sbb
lods
mov
push
loopne
cmp
xor
fs
cmc
or
pop
cmp
xchg
out
push
sub
jmp
jns
dec
dec
xor
mov
or
mov
fld
push
mov
loope
mov
call
mov
hlt
pushf
and
lar
ret
push
add
das
pop
dec
fld
and
add
push
push
or
mov
mov
divps
dec
iret
sub
mul
pop
jno
cmp
jb
xor
xor
jbe
fs
pop
dec
add
adc
pop
xchg
and
pop
or
mul
sbb
mov
cmp
std
xchg
movs
out
push
and
pusha
gs
mov
pop
push
add
sbb
or
lea
adc
pop
(bad)
rcr
out
test
mov
or
call
xor
shr
add
push
loopne
pop
and
inc
xor
xor
or
and
or
push
cmp
aam
outs
or
loopne
push
cmp
into
inc
movs
xor
sti
or
pop
push
dec
push
inc
std
inc
ret
cmp
push
aad
ret
mov
xor
mov
adc
mov
add
ins
je
das
jae
sub
ja
add
xchg
shr
fsub
adc
ja
mov
(bad)
mov
cld
mov
mov
repz
call
out
(bad)
fist
fnstenv
or
xlat
dec
mov
push
ja
push
or
sbb
enter
hlt
mov
jo
push
js
ror
jl
ret
cmp
cmp
fst
pop
out
sbb
pop
jno
sahf
push
push
retf
or
xor
in
jg
jns
ret
aas
sub
jno
mov
push
xchg
xlat
push
cmp
rcr
aas
aas
pop
or
xchg
inc
cmp
push
arpl
sbb
sbb
rol
mov
dec
mov
jp
pop
and
or
sub
mov
jns
scas
fadd
frstor
push
and
inc
(bad)
push
rcl
push
sbb
inc
jo
ror
loope
lea
add
repnz
xlat
xor
pop
sbb
mov
xor
xchg
mov
pop
jmp
not
daa
xchg
add
push
sub
pop
pop
or
icebp
out
add
jno
xor
lods
fild
repnz
cmp
mov
cmp
data16
shl
stc
enter
mov
add
lods
ins
popa
out
mov
push
adc
or
sbb
popa
mul
scas
sub
call
sbb
sbb
push
add
retf
push
push
sbb
icebp
mov
xchg
test
sub
jne
push
push
mov
jp
add
je
neg
mov
and
push
mov
and
test
addr16
xchg
lods
dec
sub
mov
and
pop
mov
mov
cmp
sbb
jns
mov
push
jno
cmp
jo
jmp
mov
inc
add
fist
fs
inc
jns
mov
mov
mov
fcom
nop
jp
ret
inc
pop
xchg
dec
cmp
loopne
adc
jns
fwait
lods
inc
jge
icebp
and
mov
mov
or
inc
iret
retf
or
and
cmps
in
ret
mov
xchg
cmp
inc
xor
je
(bad)
sbb
outs
(bad)
mov
outs
test
ds
sub
sub
mov
in
imul
mov
mov
xor
jne
cmps
sub
push
dec
inc
test
mov
jbe
enter
jmp
jo
dec
mov
movs
and
xor
mov
mov
fcmovb
sbb
cmp
pop
lahf
mov
mov
pop
addr16
or
mov
mov
sub
cmp
fcom
add
iret
mov
int3
dec
(bad)
sar
inc
pop
loop
rcr
test
xchg
jo
inc
imul
xchg
imul
in
sbb
imul
xor
xchg
(bad)
xchg
xor
mov
inc
daa
fwait
mov
cmp
cmp
fs
jo
cmc
dec
ds
push
add
adc
mov
je
pop
or
inc
out
and
inc
fucomp
mov
or
lods
cmp
ret
push
mov
jae
jecxz
pop
or
inc
je
or
je
cmc
das
hlt
call
sub
jne
cmp
pushf
(bad)
or
aas
pop
fsubr
in
jmp
jmp
int
sbb
in
jl
xor
jmp
inc
xor
mov
stos
sbb
sar
and
loopne
add
test
add
sbb
mov
(bad)
jg
sub
and
mov
sbb
icebp
int3
jg
adc
and
add
gs
dec
inc
or
xchg
add
jge
jl
and
jecxz
lock
mov
xor
or
xchg
inc
mov
sbb
pop
(bad)
push
lahf
mov
shr
shl
cmps
sbb
xchg
hlt
sbb
retf
retf
movs
sbb
adc
adc
test
enter
cmp
ret
push
inc
adc
cmp
nop
pop
mov
inc
jle
test
xor
test
add
in
jne
rcr
aam
lods
stos
fild
jg
jmp
rcr
mov
cdq
add
and
lock
aam
cwde
aad
mov
add
int3
adc
and
int3
rol
sti
xor
add
inc
or
sbb
or
ins
mov
imul
xor
sbb
sbb
push
inc
(bad)
(bad)
jle
mov
mov
xchg
jmp
rcl
test
pop
out
aam
cmps
sar
loopne
cmp
je
aam
xor
into
dec
in
nop
and
mov
jg
daa
sub
out
scas
add
add
pop
push
xor
push
push
jne
jb
sbb
paddq
or
push
xchg
pop
mov
mov
sti
rcl
pop
jp
into
cmp
adc
ror
add
mov
cmp
sbb
pop
jle
out
inc
loope
stos
push
jmp
addr16
push
xor
cmovs
xchg
inc
inc
add
xchg
(bad)
je
cmp
call
sbb
xor
popf
arpl
pushf
gs
mov
inc
dec
cmp
lahf
mov
fnsave
movs
push
test
jb
adc
sbb
rol
repnz
xor
and
xchg
test
pop
mov
out
cmp
pop
stos
xor
stc
adc
pushf
mov
cwde
(bad)
and
add
fidiv
jg
out
inc
movs
ror
outs
out
test
mov
jmp
pop
mov
push
push
dec
test
in
mov
inc
ds
addr16
sub
jmp
adc
cmps
push
test
xchg
sahf
stos
aam
out
dec
jae
jnp
dec
pop
mov
out
call
jns
out
scas
mov
jge
out
loopne
leave
cmps
(bad)
pop
push
jmp
dec
in
and
pop
push
xor
pop
scas
test
cmc
rcl
xchg
hlt
xchg
cmp
push
hlt
xor
imul
into
rcr
sbb
sub
shr
inc
shl
cmp
inc
loopne
(bad)
add
call
sti
outs
mov
fsubr
jns
and
dec
pcmpgtb
ret
stos
sub
mov
fldcw
dec
and
and
aam
jle
icebp
jbe
ret
add
mov
lods
js
call
imul
inc
test
cdq
or
sbb
rcl
inc
test
cmp
xchg
xor
ret
fild
fld
mov
test
scas
cmps
cmp
xor
(bad)
xor
mov
out
out
fisttp
pop
test
iret
xlat
mov
loop
add
cmp
mov
sub
clc
mov
sub
mov
pop
inc
add
mov
dec
gs
xchg
loop
adc
mov
js
xor
or
sar
and
sbb
pop
mov
pop
sar
je
push
jbe
aas
iret
push
jne
gs
mul
jne
in
or
fs
jns
and
push
push
add
mov
inc
xchg
lock
out
jmp
iret
adc
mov
mov
mov
adc
jbe
enter
repz
cmp
jne
mov
jmp
ffree
push
stos
div
movs
jne
add
movs
iret
(bad)
scas
inc
xchg
add
xor
loopne
es
and
cmp
mov
mov
add
cdq
add
push
mov
cs
aas
jmp
fmul
fcom
inc
jno
call
call
hlt
and
mov
pushf
dec
pop
cmp
jge
movs
add
or
ins
mov
cmp
cs
or
movs
pushf
and
lock
inc
dec
clc
pop
ds
mov
nop
mov
int
xor
adc
test
outs
push
(bad)
(bad)
xchg
xor
rol
ds
push
rcl
xor
fdivr
mov
and
sbb
rcl
pushf
in
daa
and
mov
and
jne
sbb
rcl
push
sbb
inc
sub
fcomp
retf
ja
inc
js
call
pusha
fcom
cmp
xchg
or
push
cmp
jnp
sbb
mov
mov
aas
dec
dec
jnp
or
mov
xor
sub
(bad)
pop
add
inc
jecxz
jp
loopne
inc
fstp
scas
jl
jmp
jnp
sbb
adc
clc
leave
test
sahf
mov
and
cld
jle
push
and
and
cmp
aam
sbb
cmp
lods
cmp
jb
cmp
pop
or
cmp
dec
ror
sbb
sbb
xor
jmp
mov
add
jmp
xchg
int3
mov
rol
push
pop
stc
pushf
cld
push
dec
inc
sar
adc
or
mov
enter
mov
jp
adc
fsubr
(bad)
pop
scas
clc
inc
retf
or
out
retf
jne
sub
mov
or
mov
sbb
xlat
push
retf
xor
jmp
dec
pop
adc
mov
jle
lea
push
jle
movs
add
aad
sub
(bad)
test
cmp
add
add
lods
mov
loope
clc
xchg
add
sahf
mov
xchg
cmp
movs
inc
stc
sbb
and
sahf
loopne
xchg
jo
jge
shl
sbb
xchg
test
sub
lods
add
ds
ja
adc
pop
add
imul
dec
jp
xor
or
fadd
int3
dec
and
mov
(bad)
outs
in
jb
ins
into
xchg
push
add
add
shr
scas
jne
xor
aam
push
dec
adc
stos
cmp
jne
mov
scas
lods
movhps
push
mov
jp
aam
pop
les
or
movs
xor
jo
aam
sbb
not
pusha
aam
imul
shl
add
imul
sub
pusha
test
int3
push
pop
clc
fisubr
cmp
mov
mov
cld
mov
add
movs
movs
push
aas
pop
mov
jmp
mov
sbb
sbb
rcl
jbe
push
jg
mov
jb
xchg
add
bnd
sbb
sbb
fsubr
(bad)
dec
lahf
inc
mov
sbb
jne
cdq
inc
in
ins
and
xchg
(bad)
aad
gs
add
or
mov
jg
adc
clc
outs
icebp
inc
sub
fcomp
mov
cmp
and
xchg
mov
cmp
sahf
sub
cmp
push
movs
pop
hlt
push
lods
push
add
gs
loope
sub
add
push
dec
pop
jns
adc
jne
push
retf
inc
loope
dec
out
pushf
jmp
cmp
xchg
bound
dec
add
mov
pushf
sbb
jne
cs
ja
sbb
stos
js
ja
mov
ins
jnp
xchg
mov
cmps
sahf
cmp
pop
jne
push
pop
mov
xchg
inc
add
cmp
add
movs
xor
loop
mov
xchg
add
xor
jo
in
sbb
mov
and
mov
ret
aaa
lahf
xchg
sti
and
(bad)
add
ss
xchg
dec
pop
xchg
test
mov
mov
iret
push
inc
pop
test
inc
and
pop
mov
sbb
int
push
popf
callw
sbb
dec
mov
push
hlt
dec
ror
mov
sub
cwde
enter
push
retf
add
push
push
fsub
add
inc
jge
jbe
subps
pop
pop
cld
jne
fmul
rol
sub
(bad)
repnz
test
enter
add
adc
lea
xor
rcr
adc
rol
cmp
arpl
mov
mov
jmp
mov
jmp
sub
xchg
xchg
fdiv
xor
dec
adc
fstp
paddusw
add
sbb
jno
lock
hlt
dec
mov
aad
leave
jne
adc
mov
push
cmp
ret
movs
test
add
add
sbb
ror
jp
sub
nop
fmul
push
pop
(bad)
cmc
xchg
jle
or
or
test
sub
sbb
loopne
push
stc
js
imul
jne
dec
(bad)
jb
jne
sbb
pop
jne
dec
jmp
je
ss
fist
pop
clc
xor
push
ins
dec
pusha
sbb
push
mov
adc
add
out
fild
push
jle
push
repnz
or
rol
xor
add
pop
sub
rol
in
dec
add
enter
push
add
retf
dec
arpl
ret
and
call
push
in
xchg
sbb
sbb
repz
jecxz
xchg
cmp
ins
popa
pop
add
adc
or
adc
cmps
jmp
mov
xchg
push
enter
add
push
rol
stos
mov
ins
lock
das
in
into
xor
or
lock
xchg
or
add
or
das
or
jl
pop
dec
mov
bound
jne
add
imul
xor
shl
adc
sub
cmp
push
jmp
xor
lahf
pop
in
jne
inc
movs
mov
push
sbb
inc
sti
dec
mov
adc
pop
add
xchg
xor
mov
hlt
fist
sbb
jb
xchg
mov
punpcklwd
fstp
mov
cs
shl
sbb
sbb
imul
adc
(bad)
leave
fcompp
mov
ret
aad
stos
(bad)
das
pop
sbb
adc
xchg
jb
cmp
pop
loope
inc
lock
mov
jle
aaa
scas
enter
test
ja
in
imul
test
test
xor
push
mov
xchg
mov
movs
js
sbb
outs
lea
pop
dec
add
test
add
fcomp
rcl
ja
hlt
cmc
xor
mov
stos
ss
xor
pushf
lea
fwait
adc
jb
hlt
fmul
xchg
pop
dec
test
cmp
je
lahf
cmp
push
dec
add
xchg
cmp
or
push
stc
nop
push
iret
jmp
adc
inc
mov
jmp
loopne
push
add
rcl
(bad)
xchg
mov
arpl
push
push
jo
sbb
add
imul
jne
shl
sar
jmp
lock
mov
add
push
mov
test
cmps
adc
xchg
sbb
lods
inc
aas
add
mov
xor
xor
or
dec
jmp
leave
loopne
dec
mov
aam
pop
rcl
jns
retf
dec
xchg
rcl
push
aas
mov
shl
ins
add
(bad)
aas
or
gs
enter
adc
shl
add
and
mov
out
in
loopne
daa
sub
jmp
and
mov
sar
xchg
clc
sub
push
rol
(bad)
(bad)
stos
inc
sub
and
and
rol
pop
xchg
outs
pop
add
in
adc
test
xor
or
lock
cmp
sbb
enter
pop
push
push
ja
adc
cmp
jb
add
xchg
and
sbb
(bad)
clc
mov
icebp
pusha
call
push
lock
mov
push
pusha
and
and
ret
std
and
and
pop
fld
push
loope
push
add
pop
mov
fadd
fldenv
pop
xchg
mov
ret
push
pop
jns
ds
cdq
add
fisttp
fisub
shl
jecxz
movs
mov
xchg
sti
push
push
dec
sahf
imul
inc
jg
inc
fcomp
adc
test
xchg
pop
outs
ret
pop
or
lock
in
jle
mov
mov
fsub
fmul
ss
jl
or
ins
sbb
xchg
xor
cmp
add
xor
push
pop
pushf
enter
adc
xchg
jae
sbb
mov
lahf
xchg
mov
sbb
push
mov
sti
cld
add
adc
sbb
cmp
test
add
mov
pop
jne
push
sbb
pop
(bad)
lock
add
or
mov
xor
sbb
cwde
(bad)
jge
inc
shl
dec
or
and
pop
jp
or
cdq
(bad)
call
js
lahf
hlt
hlt
inc
push
xor
daa
test
sbb
cmps
push
mov
arpl
stos
adc
test
movs
xchg
sub
inc
pusha
mov
in
scas
nop
xchg
test
add
dec
movs
add
and
std
add
aad
retf
mov
adc
push
mov
xor
xlat
sbb
jne
or
jbe
xor
push
in
mov
loopne
les
lods
cmp
jns
les
in
iret
rdpmc
scas
lods
sub
pop
xchg
xor
push
push
ss
into
(bad)
enter
push
icebp
adc
push
movs
jnp
addr16
jmp
aaa
outs
aad
fst
hlt
jle
lea
jne
mov
lock
pop
mov
xor
inc
push
sub
test
push
mov
mov
add
clc
out
int
push
sub
shl
dec
enter
stos
shl
or
add
ss
xchg
out
cwde
imul
fldenv
mov
push
mov
pop
inc
pop
dec
add
cmps
push
mov
nop
sub
fcomp
xchg
or
pusha
xor
add
mov
lock
call
int3
mov
loopne
jmp
ja
rol
(bad)
cmc
test
fld
pop
pop
pop
inc
adc
adc
arpl
sbb
push
mov
xchg
xor
jo
xor
sbb
cmp
add
mov
out
cmp
cld
push
lods
sub
xor
fwait
retf
lods
hlt
dec
push
sub
sti
sti
cmp
test
ins
and
push
jbe
add
mov
imul
jns
hlt
or
loop
test
xchg
mov
inc
dec
jmp
add
sbb
mov
fadd
enter
fldcw
clc
jg
fcomp
lahf
push
inc
jb
clc
ins
cmp
sbb
arpl
gs
sbb
mov
in
mov
rol
aas
mov
cwde
or
mul
or
push
repz
inc
stos
mov
lock
or
mov
mov
cld
stc
jno
sbb
cmp
jg
bound
cmc
out
jmp
or
pop
jge
push
push
jmp
dec
cmc
in
cdq
sbb
xor
mov
rol
aad
movs
jnp
adc
clc
or
je
or
or
shr
pushfw
imul
push
icebp
add
push
inc
sbb
or
sahf
dec
jne
add
rcl
jmp
or
call
das
mov
dec
pushfw
mov
jno
adc
or
sub
jo
in
mov
nop
or
push
add
adc
pop
adc
jle
mov
pop
je
add
mov
inc
ja
mov
sbb
pop
add
inc
add
inc
or
xor
pop
dec
pmullw
arpl
mov
add
mov
mov
retf
mov
int3
mov
mov
adc
movs
mov
test
mov
add
push
add
xchg
or
ss
aam
je
xchg
into
fwait
clc
sbb
aam
in
ror
mov
mov
aam
fiadd
inc
sub
xchg
lock
and
add
xor
es
scas
ins
dec
mov
add
iret
inc
hlt
call
sbb
pusha
cmps
jns
nop
inc
shr
mov
jmp
push
lock
dec
jmp
push
(bad)
jne
sbb
cmp
je
jmp
dec
iret
push
inc
mov
dec
jmp
mov
xchg
inc
retf
leave
leave
les
pop
lahf
mov
sbb
repnz
push
shl
mov
pop
lods
dec
xlat
jle
fadd
sbb
dec
int3
inc
inc
clc
adc
mov
sbb
jle
push
pushf
rcr
mov
xchg
cli
xchg
jne
pop
inc
mov
cmp
or
cs
les
push
lods
cmps
loop
call
clc
adc
imul
xchg
xchg
add
fs
xchg
in
cmp
add
jge
mov
pop
jb
mov
sub
xor
cmp
int3
and
mov
mov
mov
xchg
add
(bad)
xor
xlat
ror
dec
inc
in
dec
sti
ds
sahf
and
mov
and
add
(bad)
enter
(bad)
(bad)
loopne
das
enter
cdq
jp
adc
push
std
lea
cmp
inc
aam
mov
fbld
jb
cwde
or
mov
out
inc
loopne
adc
fst
cdq
xor
adc
mov
mov
or
add
or
mov
je
push
sub
fadd
jmp
cmc
and
shl
scas
add
rcl
ss
add
cmp
add
mov
bound
mov
aam
shl
jp
cmp
jl
cmp
dec
test
pop
cld
sbb
test
stc
cld
xor
inc
mov
xor
inc
xlat
bound
pop
cmp
sub
retf
(bad)
imul
push
repz
jo
out
sbb
push
add
pop
call
je
pusha
cmp
(bad)
outs
xor
je
dec
ja
out
adc
push
mov
sbb
retf
xchg
dec
sbb
jae
mov
cdq
mov
movs
or
mov
rol
pop
inc
ror
inc
fmul
jecxz
aam
sbb
jp
push
cmc
sub
lock
jo
cmp
sub
(bad)
adc
aam
or
lods
iret
clc
call
inc
pop
fwait
sub
push
dec
inc
fwait
(bad)
imul
bound
mov
je
add
dec
mov
add
xchg
sbb
or
test
sbb
test
fmul
mov
pop
loop
(bad)
mov
in
add
sub
xchg
sbb
add
add
fadd
mov
lea
mov
out
add
(bad)
jge
cmp
xor
jmp
call
pusha
mov
shl
addr16
jne
nop
or
push
shr
loope
loope
(bad)
sti
fsubr
and
adc
adc
(bad)
leave
adc
aam
les
fcomp
push
add
jge
push
jnp
pop
add
xor
inc
adc
fcmovb
push
jmp
and
or
sub
jno
add
adc
jmp
test
add
or
and
or
push
sbb
adc
stc
mov
push
js
test
adc
push
in
cdq
jae
mov
shr
add
cmp
nop
push
xchg
lock
pop
arpl
pop
addr16
xor
or
push
mov
mov
adc
popf
(bad)
sub
sbb
mov
mov
cli
and
inc
cmp
ret
add
add
cwde
adc
push
daa
xor
les
es
adc
adc
jnp
xchg
and
jne
cmp
jnp
nop
loope
gs
xor
mov
loopne
(bad)
adc
ret
in
adc
push
dec
fldpi
xor
cmc
push
mov
and
xor
or
test
cwde
xchg
test
movs
test
sub
adc
and
sti
add
dec
ret
add
movs
and
pop
add
jns
add
mov
mov
movs
out
ja
and
hlt
adc
and
fwait
pop
inc
push
cs
or
inc
(bad)
cmp
mov
aam
mov
or
add
xchg
ret
mov
cmpps
xor
test
fucomip
sbb
sbb
jmp
addr16
es
cmp
inc
mov
inc
push
jl
push
cs
fadd
pop
leave
inc
lods
add
or
sub
mov
clc
retf
jbe
lds
retf
jae
loopne
or
jg
lds
cwde
call
dec
popa
aas
imul
cmc
jo
pop
daa
hlt
dec
daa
or
cmps
jb
hlt
test
xor
inc
cmp
cmp
jecxz
js
mov
sbb
push
popf
push
enter
mov
xchg
fs
inc
sbb
xchg
ret
dec
adc
imul
dec
clc
push
or
jmp
pop
imul
cdq
data16
enter
add
shl
shl
data16
sahf
push
ja
sbb
cmps
xor
inc
nop
rcr
gs
push
fcom
cmp
sbb
dec
into
(bad)
sub
(bad)
cmc
hlt
mov
mov
repnz
adc
and
or
adc
rcr
lods
aam
push
rol
pop
sar
ret
push
cmp
mov
test
xor
xor
ret
cs
retf
push
xchg
test
sbb
sub
les
popf
fcomp
dec
pop
or
jo
ret
or
rcl
int
sbb
ret
mov
push
fcom
inc
sbb
cmp
das
mov
mov
cld
push
inc
or
jecxz
mov
inc
popa
lds
xor
mov
jmp
sbb
cmp
aam
scas
fwait
dec
pop
dec
mov
jecxz
mov
jmp
inc
in
mov
inc
pop
push
rol
mov
les
add
push
mov
add
enter
push
in
jo
add
add
mov
fcomp
or
pop
adc
test
pop
mov
xchg
into
and
(bad)
cmp
inc
add
jne
out
cmp
(bad)
add
dec
jmp
inc
sub
bound
jne
or
pop
ds
mov
sub
inc
(bad)
int3
scas
xor
mov
dec
pushf
test
jo
xchg
(bad)
mov
lock
lods
push
push
in
and
fldenv
dec
loopne
arpl
lock
ds
xor
xchg
add
xor
add
xchg
inc
clc
fmul
fisub
jle
test
jnp
add
cmp
hlt
sbb
inc
jp
mov
mov
mov
mov
or
jnp
in
pop
test
add
jmp
icebp
xchg
test
xchg
push
add
repnz
sar
retf
aam
enter
std
sbb
sub
iret
mov
imul
not
pop
pushf
cmps
and
(bad)
cli
inc
std
pop
out
mov
pop
jl
enter
mov
mov
aad
(bad)
push
cmp
dec
add
jne
outs
adc
jo
out
or
pusha
inc
adc
xchg
mov
fucomi
(bad)
mov
scas
pop
sub
jge
cli
sub
jae
les
xchg
push
push
mov
inc
inc
fimul
jle
dec
adc
mov
push
jo
lock
or
pusha
rcr
stc
imul
fisttp
or
sar
imul
retf
inc
adc
rcl
add
dec
or
inc
shl
add
push
inc
(bad)
lock
mov
not
xchg
int
cwde
idiv
add
loopne
cld
dec
mov
cmp
enter
jb
bound
adc
cmp
and
mov
and
xor
nop
mov
push
dec
mov
push
jle
jnp
enter
addr16
xchg
sbb
push
iret
cdq
stos
and
adc
aam
movs
jns
pop
xchg
mov
pusha
sub
and
fdivr
mov
mov
call
hlt
dec
and
inc
repnz
or
jb
mov
push
dec
xchg
outs
and
sub
fs
pop
enter
pop
jmp
jnp
das
sar
or
hlt
push
inc
or
enter
dec
dec
fisttp
sub
or
push
inc
push
or
sbb
sbb
sbb
add
or
gs
div
and
jno
enter
jmp
neg
or
rol
adc
ins
add
xor
je
(bad)
loopne
cs
test
fwait
push
push
movs
mov
mov
dec
sti
jbe
je
add
or
in
push
push
cmp
xchg
add
jge
push
outs
sub
pop
adc
jne
adc
xchg
(bad)
and
fs
loopne
jmp
in
movs
es
in
in
lods
jmp
xor
push
fs
mov
in
and
xchg
ins
pop
push
jne
xor
adc
je
push
and
in
clc
les
lahf
cmp
imul
push
and
ins
push
lahf
adc
std
jno
or
(bad)
rol
jmp
and
popa
fldenv
xor
and
and
xchg
ror
fisubr
cmp
cmp
fisubr
sbb
sub
mov
inc
imul
es
pushf
xor
fnstenv
and
loop
cdq
fcomp
pop
ins
(bad)
push
inc
push
mov
pop
sbb
lods
mov
jmp
es
(bad)
jmp
popa
jbe
pop
mov
mov
es
cmp
int3
das
mov
js
les
hlt
xor
add
jns
clc
add
adc
cmp
int3
cmp
xchg
and
mov
fwait
inc
mov
cmp
push
cmp
(bad)
adc
mov
and
push
mov
push
jecxz
push
rol
adc
cmp
int
psraw
lods
lea
adc
dec
inc
loopne
jle
rcr
pop
je
dec
jns
jbe
repnz
adc
cld
sbb
xchg
sbb
mov
in
dec
mov
add
sbb
movzx
jns
test
icebp
cmp
sub
cld
in
aas
ret
jbe
fild
adc
inc
sti
xor
nop
fadd
out
fiadd
fwait
push
cmps
enter
cmp
out
jmp
call
ret
add
xor
out
xchg
and
mov
loope
out
sahf
not
(bad)
out
imul
dec
out
sbb
and
repz
xor
das
cmp
cmp
repz
aas
inc
dec
push
mov
pop
jbe
cdq
movs
scas
repz
out
mov
loopne
ins
ds
jmp
fucom
scas
in
out
sahf
out
in
push
pop
cmps
stc
cmp
ins
fdivr
outs
in
int
stc
sahf
lods
loopne
aaa
out
mov
push
jl
out
or
pop
jecxz
pop
out
cmp
rcr
sub
cmp
data16
movs
out
dec
cmp
icebp
sbb
pop
push
jmp
adc
jnp
cwde
add
sbb
dec
rol
mov
jne
push
in
stos
or
lea
mov
inc
frstor
push
or
repnz
or
and
push
adc
xor
or
(bad)
movs
push
xor
xchg
test
add
aam
pop
cmc
cmp
mov
sti
push
test
and
(bad)
jnp
movs
imul
inc
add
add
jl
scas
cmp
movs
add
adc
or
mov
add
jne
js
and
adc
out
fstp
xchg
and
mov
or
xchg
js
sbb
leave
dec
pop
adc
adc
imul
add
mov
mov
adc
pop
pop
and
sbb
sbb
add
in
dec
xor
aas
(bad)
jmp
es
xor
push
frstor
jo
xchg
pop
fisub
pop
shl
jno
outs
sti
xchg
test
jg
add
sub
add
dec
dec
test
pop
repnz
loop
mov
jmp
jge
lock
bound
hlt
add
call
xor
jg
das
or
ds
outs
push
mov
addr16
pcmpeqd
sub
out
or
loope
imul
or
arpl
ret
mov
sbb
mov
xor
fcomi
adc
inc
xlat
inc
fsubrp
mov
push
or
add
push
loop
fwait
mov
in
mov
push
sbb
adc
add
mov
or
sub
xchg
fsub
add
in
or
lea
jbe
push
cmp
mov
sar
mov
(bad)
(bad)
mov
mov
push
push
mov
push
add
stc
icebp
mov
shr
pop
add
loopne
or
leave
inc
nop
pop
push
mov
xchg
sbb
outs
pop
es
xchg
test
xor
test
mov
push
(bad)
mov
or
mov
jb
divps
rol
jmp
jns
xchg
fwait
pushf
pop
test
pop
(bad)
scas
ja
inc
mov
inc
xchg
mov
adc
push
cdq
scas
sbb
cmp
stos
or
add
fist
cli
add
and
push
jp
stc
or
dec
jo
clc
dec
jbe
dec
test
es
pop
xor
js
push
imul
lock
lahf
mov
ret
and
js
inc
das
pusha
test
push
dec
or
div
and
jo
pop
(bad)
mov
bound
xchg
lods
cmp
cmp
loop
enter
scas
in
aam
scas
sti
mov
mov
cs
dec
push
leave
test
test
icebp
inc
add
mov
adc
adc
push
push
sub
loope
mov
xchg
or
cmc
inc
(bad)
xchg
dec
movs
imul
adc
rol
push
test
or
lock
je
or
and
xchg
adc
rol
mov
sar
or
sub
and
fs
sbb
adc
and
adc
dec
xor
inc
clc
cdq
push
and
imul
(bad)
mov
ds
cld
inc
mov
sub
adc
stos
xor
popf
pop
push
les
push
cli
shl
cmp
or
mov
hlt
xor
mov
add
ins
adc
adc
push
pusha
out
adc
lock
add
adc
test
retf
ret
dec
dec
adc
call
adc
push
ret
sbb
or
push
jle
sbb
in
test
xor
sub
or
inc
xchg
jne
test
adc
jns
ss
call
dec
inc
and
xor
pop
adc
adc
xchg
push
test
xor
push
and
cmps
and
dec
mov
mov
inc
outs
mov
adc
in
mov
or
or
mov
inc
push
in
jmp
pop
imul
pop
sbb
cmp
inc
imul
(bad)
stos
cmp
mov
shr
mov
test
adc
fldcw
and
nop
cmc
rol
in
(bad)
fs
call
repz
icebp
inc
retf
cmps
stc
push
jmp
cmp
repz
mov
pop
int
push
mov
sti
imul
xchg
lock
jae
adc
add
jns
psubb
jmp
add
popf
cmp
stos
sub
ja
rcr
cmp
pop
neg
and
mov
dec
mov
leave
das
jmp
jmp
push
xor
sub
pop
sub
fisubr
and
add
sahf
push
add
retf
je
(bad)
rol
(bad)
daa
add
and
into
dec
retf
adc
stos
and
mov
mov
test
loope
mov
adc
enter
xchg
add
loopne
std
push
xchg
scas
push
cmp
test
sahf
cmp
sbb
ret
sbb
inc
(bad)
mov
mov
dec
jle
out
lock
pusha
push
test
je
popa
call
js
adc
mov
adc
bnd
test
add
test
fld
sub
mov
xchg
xor
out
and
mov
jnp
leave
sub
cmp
mov
ret
jl
adc
retf
add
sub
movs
mov
push
pop
fcom
pop
dec
push
call
add
(bad)
or
je
jmp
fmul
popa
repz
sub
inc
jne
(bad)
pop
adc
sbb
call
xor
dec
arpl
add
and
call
adc
pop
aam
outs
sbb
mov
adc
dec
push
inc
jecxz
bound
xchg
cmp
pusha
xchg
out
sub
push
shr
inc
lock
jmp
push
std
cli
inc
pop
jl
push
inc
sbb
and
mov
xchg
sbb
in
add
jmp
adc
out
lods
idiv
push
mov
out
xor
sar
dec
mov
push
aaa
cli
out
cmc
adc
push
dec
and
ins
ffreep
test
sbb
fnstcw
js
loop
(bad)
or
mov
(bad)
and
movs
and
push
mov
rcr
jbe
add
sbb
jge
je
and
adc
sbb
loope
add
jmp
test
daa
or
mov
sbb
push
or
pop
in
das
loop
push
push
lock
adc
leave
movs
enterw
push
aam
mov
mov
push
dec
pop
les
push
hlt
and
xor
mov
dec
and
xchg
push
and
mov
push
or
mov
je
scas
pop
mov
cld
in
add
out
and
fs
cmp
dec
add
mov
sbb
rol
lahf
and
rol
cmp
sbb
jno
push
add
pop
and
loop
mov
or
les
je
sub
adc
jne
fisub
lods
push
data16
pop
xor
push
push
inc
jns
jb
cmp
lock
adc
jne
fnsave
fiadd
push
pusha
jl
loopne
lahf
inc
pop
add
mov
add
cli
cmps
or
push
into
add
imul
aaa
or
repnz
sbb
mov
and
mov
cmp
neg
adc
nop
fild
test
popa
jecxz
rol
push
inc
cmp
push
pop
shl
jb
enter
dec
sub
scas
in
cwde
cmp
rol
xchg
mov
push
xchg
xor
sub
xor
and
ror
push
dec
aam
push
popa
or
mov
imul
fcomp
add
mov
bound
sbb
push
popf
test
jnp
push
cs
add
adc
sub
repz
xchg
aam
stos
rol
xor
mov
cmp
mov
add
push
push
mov
mov
call
mov
shl
and
pop
call
jbe
xchg
push
(bad)
in
(bad)
repz
pop
fild
dec
ror
push
cmps
aaa
xchg
pop
lods
add
and
mov
pushf
daa
pop
nop
add
aaa
mov
ret
push
sti
adc
sbb
rol
in
and
ficomp
movs
(bad)
fcomp
in
xor
test
xchg
push
sbb
or
mov
aam
push
push
shl
add
lods
xor
sub
lods
mov
or
pop
xchg
lea
movs
mov
xchg
xchg
add
pop
sub
pop
cdq
and
add
adc
dec
pop
mov
cwde
mov
xor
pusha
and
xor
or
dec
add
push
pop
es
inc
pusha
cmc
(bad)
and
xor
lahf
and
dec
shl
push
mov
jo
push
sbb
aas
push
mov
shr
add
cmp
dec
sub
or
xor
shl
adc
sbb
lds
rcr
sub
pusha
jmp
mov
cli
adc
ret
out
repz
mov
imul
cmp
mov
test
inc
je
push
lea
push
lea
ds
or
retf
js
mov
pop
(bad)
push
jle
and
shl
adc
arpl
cmp
pusha
cmp
scas
pop
add
and
xor
(bad)
sub
lahf
mov
push
xlat
ret
mov
mov
push
enter
dec
scas
sub
mov
(bad)
jge
push
outs
and
or
push
add
push
push
cmp
xor
popa
adc
es
cmp
add
and
cmp
and
cmp
in
and
add
sbb
dec
mov
push
cmp
ror
inc
cmp
cmp
rol
cmp
dec
repnz
sbb
sbb
sbb
movs
push
test
hlt
je
stos
stos
leave
mov
mov
and
mov
pop
jb
dec
inc
dec
out
mov
mul
jmp
mov
adc
cmp
xchg
add
mov
xchg
add
nop
std
add
(bad)
lds
lahf
fisttp
mov
daa
imul
retf
add
and
retw
or
test
cmp
lods
ins
push
ror
gs
ins
leave
jnp
leave
inc
dec
and
out
jge
push
xchg
sbb
jp
stc
je
adc
fstp
add
dec
push
mov
pop
cs
or
call
xor
es
inc
dec
xchg
fwait
push
add
xchg
pop
inc
hlt
push
imul
(bad)
sub
push
pop
jo
and
addr16
cdq
daa
mov
dec
data16
or
dec
mov
mov
fcomp
mov
mov
push
dec
sub
push
mov
or
jl
in
cdq
push
sub
scas
push
cmp
pusha
imul
inc
xchg
add
adc
and
mov
nop
adc
sub
and
jne
or
push
imul
and
sub
dec
mov
loope
xchg
mov
push
inc
movs
xchg
jo
mov
add
sbb
jmp
clc
cmp
shl
add
sahf
popa
ret
xor
cmc
dec
es
push
push
enter
cmp
neg
push
push
mov
xchg
ficom
xor
sbb
mov
inc
in
mov
push
retf
sub
and
inc
jle
jmp
xchg
jb
sbb
and
loope
inc
aad
rcr
sub
lods
dec
mov
inc
ins
mov
sub
lahf
push
inc
add
xor
rcr
fisubr
mov
outs
add
xchg
loopne
mov
jl
mov
sbb
xchg
dec
and
pop
add
adc
stos
sbb
mov
inc
mov
inc
inc
les
enter
jmp
int3
and
fadd
pusha
fsubr
jne
push
xor
and
ret
xor
sub
int3
mov
mov
push
addr16
sub
aam
push
fisttp
mov
jmp
fdivr
pushf
cmp
push
add
inc
sub
jae
pop
shr
sbb
or
outs
fcom
les
jl
cmp
push
adc
sbb
jae
aad
inc
loop
dec
je
add
pop
pop
mov
cmc
add
movq
cmp
femms
out
pop
cmp
and
xor
sub
inc
out
out
or
push
pop
inc
adc
sbb
adc
cmp
enter
pushf
sub
jnp
out
mov
mov
cmp
mov
movs
or
jnp
cwde
inc
dec
sub
xchg
cmps
rcr
xor
aad
xchg
xchg
retf
and
rcl
out
add
sahf
addr16
in
inc
inc
pop
xchg
cwde
or
out
sar
sbb
cmp
adc
xchg
cmp
sub
xor
xor
rcr
sbb
stos
loop
or
clc
sub
sbb
and
dec
ret
sbb
sub
mov
adc
or
cmps
and
aaa
fimul
adc
adc
mov
sub
adc
xgetbv
in
dec
xor
clc
add
pop
rol
mov
fimul
and
add
(bad)
inc
adc
pop
xor
inc
or
sbb
jg
add
dec
(bad)
sbb
jl
sti
inc
add
push
sbb
and
or
mov
ret
adc
cmp
clc
adc
inc
jb
sub
add
clc
pusha
scas
sar
inc
jg
jmp
in
push
xor
pop
pmuludq
add
enter
aam
jmp
push
in
add
js
retf
pusha
push
inc
mov
stos
push
xchg
sbb
inc
mov
popa
push
mov
ror
inc
dec
push
pusha
and
dec
mov
or
lods
add
fisttp
sub
popf
cld
inc
push
push
push
les
jne
test
test
adc
ins
push
xor
inc
outs
ins
inc
lea
ins
(bad)
clc
je
add
arpl
jo
loop
aaa
cmp
(bad)
leave
xchg
dec
add
(bad)
sbb
cmps
or
pop
fdivr
call
mov
stc
sbb
lds
add
rol
dec
stos
movs
xchg
xchg
adc
mov
mov
scas
mov
movs
cs
std
cmps
push
aad
stos
stos
and
in
(bad)
rcl
movs
ds
lock
mov
xchg
(bad)
jo
out
xchg
adc
or
test
or
repz
inc
jmp
shr
mov
and
push
jns
mov
add
imul
les
(bad)
rcr
in
cld
add
lea
dec
ror
adc
addr16
push
stos
pop
arpl
adc
imul
movs
mov
xchg
jle
inc
pop
jo
jne
mov
test
fcom
stos
sbb
xchg
mov
or
xchg
fmul
cwde
popf
add
push
lods
push
mov
cs
andps
jo
jb
mov
xor
sbb
or
aam
and
jae
or
xchg
xchg
in
call
push
fiadd
clc
cld
cmp
xchg
mov
mov
adc
pop
or
nop
lods
jl
gs
mov
dec
mov
sub
sub
or
inc
cmp
ds
push
cs
cmps
inc
dec
or
dec
inc
movs
repnz
or
retf
pusha
movs
lods
call
imul
aam
jno
xor
or
inc
shr
mov
add
out
mov
imul
mov
mov
je
enter
xchg
push
int
cmp
mov
pop
nop
inc
add
inc
js
cmc
ins
out
adc
add
add
leave
xchg
rol
jl
pop
jae
rcl
cmp
setl
imul
adc
nop
loopne
mov
add
inc
pop
mov
or
sbb
pushf
add
fcom
jmp
ins
fwait
pop
enter
nop
mov
inc
es
mov
cmp
sub
dec
and
clc
loop
xchg
xor
adc
sub
push
mov
ret
and
fcomp
dec
icebp
inc
fsubr
pushf
lahf
mov
add
sub
inc
gs
or
sub
lock
add
sub
sub
sub
lock
add
mov
inc
adc
add
sub
jl
push
je
mov
std
xchg
jne
leave
jmp
jl
pusha
adc
adc
cmp
scas
push
es
inc
test
jbe
and
popf
inc
gs
xchg
(bad)
jo
xchg
aam
lock
add
add
xor
adc
add
dec
cmp
add
mov
adc
push
clc
adc
dec
movs
repz
pop
rol
mov
mov
je
add
sbb
addr16
in
dec
cmp
push
mov
pushf
ja
int3
sub
in
push
adc
add
call
into
es
retf
loopne
mov
lds
mov
add
gs
test
jmp
sbb
icebp
fistp
pusha
(bad)
fstp
pop
ds
jl
aaa
fidivr
mov
and
jecxz
loope
loop
jae
mov
push
push
jp
xchg
push
mov
or
cwde
fdiv
xchg
add
retf
adc
loop
in
lods
adc
into
dec
(bad)
fistp
push
add
call
or
movs
pop
data16
xor
mov
adc
and
addps
mov
xchg
dec
ret
adc
xor
sbb
pop
xor
and
inc
inc
es
mov
mov
pusha
mov
or
dec
js
mov
or
sbb
sub
jge
lahf
enter
xchg
enter
dec
popa
add
pop
sub
mov
push
mul
and
das
fwait
mov
pop
dec
jne
cmp
daa
repnz
addr16
mov
xchg
je
xor
push
nop
sub
jle
mov
cmp
fcomp
xor
mov
jmp
inc
mov
aam
call
jle
adc
out
mov
test
push
stc
repnz
add
lock
mov
or
call
cmps
rol
mov
push
xor
aas
ja
into
movsx
adc
jmp
mov
mov
mov
cdq
push
sub
movzx
push
(bad)
mov
imul
and
mov
xor
dec
cmp
xchg
test
iret
data16
or
jnp
bound
add
xor
push
cmp
loopne
xor
add
rcl
add
fwait
xchg
les
retf
adc
or
or
in
or
inc
scas
test
jae
push
leave
jmp
dec
push
cmp
push
lds
or
cmps
pop
(bad)
iret
repz
mov
iret
leave
repz
pop
scas
jl
xor
repz
int3
in
adc
jmp
sbb
rol
jbe
push
cmp
lahf
stc
xchg
or
jb
pcmpeqw
in
and
push
imul
cmp
cmps
mov
ins
lahf
or
jg
cmp
mov
adc
or
and
push
or
xchg
imul
mov
repz
push
mov
and
mov
push
fldcw
cmc
fst
shl
call
dec
sbb
inc
mov
mov
lods
(bad)
jmp
jmp
dec
lock
stos
sbb
imul
mov
add
mov
(bad)
or
mov
inc
and
repnz
or
adc
sbb
xchg
sbb
shl
xchg
scas
and
and
sub
sbb
xor
xchg
(bad)
les
popf
cmp
jno
cs
inc
int3
inc
jns
sub
ror
popf
push
xor
pop
and
pop
(bad)
cmp
pop
mov
fsub
sbb
jo
jmp
pop
fiadd
pop
dec
jp
inc
adc
mov
jge
jle
nop
mov
xchg
rcl
std
leave
xor
cwde
stos
pop
pushf
fxam
cmps
pop
idiv
dec
test
mov
fidiv
shl
lods
(bad)
retf
clc
add
or
dec
inc
int3
add
sub
and
jnp
or
inc
push
and
pop
adc
test
jge
and
jl
mov
retf
jmp
stos
adc
and
inc
add
hlt
inc
add
icebp
test
jl
(bad)
cmp
push
add
xor
push
pop
movs
push
adc
stos
loopne
lods
mov
ror
add
push
inc
daa
popa
jl
or
mov
sar
clc
je
mov
cmp
popa
or
or
loop
arpl
inc
inc
pusha
out
inc
pop
or
jl
push
inc
retf
pop
jno
inc
addr16
push
sbb
cmps
and
pusha
pop
cmp
test
stos
jne
(bad)
mov
fadd
aam
dec
cmps
push
add
jmp
push
inc
hlt
sbb
pop
dec
adc
adc
push
inc
call
pop
cmps
or
push
dec
inc
cld
xor
or
movs
and
inc
add
int
fcom
jl
mov
adc
jg
sahf
add
mov
pop
ret
nop
out
lahf
pop
xor
lds
fadd
in
cmp
and
xor
popa
xchg
jb
into
xlat
or
je
dec
jmp
mov
push
loopne
xchg
mov
scas
pop
inc
in
ins
push
icebp
cmp
push
dec
popf
stos
push
push
(bad)
aaa
jge
jmp
mov
int
mov
ret
imul
and
push
xor
mov
jmp
(bad)
in
jbe
lock
out
repz
add
mov
lahf
add
outs
mov
xchg
and
test
and
dec
pop
or
adc
lds
adc
loop
jns
push
aaa
push
test
aaa
add
mov
adc
and
cmp
mov
jmp
pop
push
out
sbb
and
adc
cdq
pop
lods
fwait
inc
mov
xchg
test
ret
push
pushf
aas
cmp
lods
sub
xchg
sub
mov
pop
dec
push
mov
lahf
jmp
sbb
fidiv
lea
adc
stos
sbb
rol
shr
cli
aas
adc
push
cmp
jg
cmp
jl
pop
sbb
mov
cmp
repnz
inc
rol
shl
add
ror
jno
cmp
je
pop
pop
fcmovnb
call
jecxz
sbb
add
or
mov
mov
adc
loop
fcom
and
or
mov
add
or
cdq
ret
iret
cmp
adc
in
push
rol
cmp
imul
push
add
cmp
jmp
mov
and
add
and
and
sbb
sbb
push
pop
imul
add
scas
and
mov
push
add
pop
push
popf
iret
dec
xor
icebp
ss
(bad)
test
cmp
test
out
imul
push
pop
dec
sbb
dec
loopne
mov
shl
fld
jae
jg
fst
dec
sbb
and
and
je
cmp
mov
sbb
cmp
ror
scas
or
das
sub
add
and
sbb
aad
cwde
cmp
or
fcmovnbe
push
mov
es
cmp
mov
sub
movs
add
dec
cmp
push
or
push
jmp
mov
fstp
fld
jle
sub
enter
mov
dec
push
sbb
sub
bound
sbb
xchg
mov
mov
xor
fisub
scas
int3
cmp
or
or
xor
movsx
sbb
mov
mov
mov
or
loopne
loop
adc
push
mov
add
xor
das
test
xor
sar
xchg
adc
pop
les
and
mov
sbb
clc
mov
stos
cmps
or
mov
jae
xor
imul
add
enter
imul
hlt
outs
sbb
sub
fnsave
in
jge
loop
jmp
test
push
xchg
mov
sub
outs
sbb
sbb
test
mov
sub
pop
jecxz
adc
or
jae
mov
add
adc
add
xchg
add
sub
popa
and
adc
sbb
dec
xchg
fcmovu
jmp
and
sub
jg
lds
add
ret
inc
jge
add
jo
mov
in
push
adc
cmp
test
push
cmp
jno
sbb
pop
inc
ss
dec
pop
js
inc
push
pop
or
dec
sbb
inc
outs
(bad)
mov
pusha
jno
sbb
push
mov
xor
inc
or
call
or
inc
bound
jo
add
push
aas
ja
dec
lea
pop
cmc
or
cdq
adc
or
inc
sbb
jl
mov
and
sbb
xor
cmp
xor
mov
add
sub
jecxz
or
fs
xor
popa
add
sbb
add
pop
test
or
cmp
jne
lods
fcmovu
adc
les
enter
ds
test
pop
add
cs
jmp
add
adc
(bad)
xor
push
fnstcw
pop
neg
imul
inc
mov
sub
sub
lahf
mov
xor
sbb
lea
sub
retf
sbb
lods
adc
or
mov
mov
aas
fisub
xor
or
retf
mov
cmc
cmp
cli
sub
xlat
xor
push
(bad)
mov
xor
jnp
add
int3
daa
sbb
mov
fs
(bad)
dec
ror
fcom
push
nop
dec
sub
leave
dec
sbb
in
pop
sbb
cwde
lock
xor
push
movs
dec
test
or
xor
retf
add
fsub
pop
cmp
in
add
push
xor
cs
loopne
fs
test
sbb
in
and
adc
nop
and
out
add
cmps
inc
and
adc
data16
les
cwde
dec
mov
jg
std
inc
enter
mov
mov
sar
add
or
add
inc
nop
and
std
je
sub
cmp
xchg
or
add
out
into
xchg
sbb
inc
dec
add
les
xchg
add
sbb
push
aaa
mov
cwde
test
adc
add
xor
xor
sub
inc
or
dec
mov
adc
pop
dec
sbb
arpl
push
add
lahf
mov
loop
mov
ret
iret
pop
dec
ret
outs
pop
aas
pusha
cmp
pop
mov
mov
push
test
jge
dec
push
pop
inc
push
xchg
or
icebp
inc
mov
inc
shl
nop
push
dec
inc
push
inc
dec
push
frstor
inc
out
sub
push
sbb
sbb
pop
xor
and
pop
mov
(bad)
ror
xchg
cwde
cli
add
jo
jmp
rol
or
xor
cmp
or
pop
jne
(bad)
lock
xchg
mov
or
inc
mov
mov
jle
out
adc
jne
in
retf
adc
bound
cmp
adc
adc
add
xor
mov
add
cmp
mov
ret
ret
add
out
xchg
mov
dec
mov
in
je
das
add
and
adc
loope
sbb
mov
das
adc
sbb
(bad)
push
xchg
stos
pop
adc
mov
mov
fadd
fs
cwde
or
mov
pop
pop
cmc
dec
add
cdq
mov
pusha
push
jne
push
cwde
mov
or
in
and
add
and
mov
mov
(bad)
xor
mov
xor
xchg
mov
shl
mov
loope
or
clc
mov
(bad)
sbb
push
int3
push
test
sub
cmps
loope
inc
mov
dec
enter
mov
movd
sub
jae
jmp
xor
bound
(bad)
xchg
add
pop
jp
fs
test
adc
and
or
daa
adc
cdq
lods
inc
imul
enter
cwde
jo
inc
fmul
push
into
dec
adc
adc
sbb
out
push
lock
cmp
pop
cld
lock
(bad)
fisttp
(bad)
inc
push
sbb
sbb
mov
pop
xor
pop
mov
cdq
ret
popa
cwde
outs
xchg
mov
imul
push
sub
xor
test
adc
or
ret
push
sbb
jno
cld
scas
and
push
inc
mov
fsub
pop
mov
mov
cmp
mov
cmp
sar
out
xlat
dec
adc
dec
movs
sbb
mov
jl
dec
je
inc
inc
lahf
push
sub
ret
pop
cs
push
sbb
inc
add
or
jl
inc
and
pop
inc
and
stos
cmps
popa
sub
sub
inc
jo
stc
cmp
fwait
ret
ins
rcr
sbb
aaa
jae
and
push
push
fild
and
mov
push
inc
adc
inc
jne
cmc
cmp
sub
cmp
mov
cmp
add
xor
inc
ret
jecxz
gs
mov
sbb
cmps
add
add
xchg
or
jecxz
inc
sbb
mov
cmp
sbb
or
pop
inc
or
sbb
fcomi
or
xor
mov
adc
xor
mov
rcr
sub
test
push
pop
xchg
mov
jb
lods
mov
sti
sbb
pop
sub
test
call
jb
cmp
mov
clc
rol
fmul
xor
dec
and
lock
cdq
mov
sbb
sub
mov
test
rcl
fdivr
ret
fdiv
jnp
dec
rcl
sub
je
bound
lods
mov
mov
xchg
cmps
(bad)
add
mov
adc
jne
inc
(bad)
aaa
add
sbb
test
ret
xor
sub
(bad)
or
adc
pop
inc
sub
or
loope
dec
cmp
adc
mov
hlt
leave
mov
cs
aas
les
sbb
in
or
dec
adc
push
enter
cmp
retf
mov
adc
jl
enter
sub
lock
popf
hlt
inc
jecxz
ror
mov
scas
lds
hlt
int3
call
lea
mov
dec
mov
fucomi
bound
cmps
pop
mov
xchg
jno
jg
dec
add
mov
sbb
mov
cmp
mov
ja
xor
inc
dec
in
inc
inc
cmps
mov
clc
call
in
(bad)
aas
fmul
push
inc
sahf
out
fsubr
in
cmp
fdivr
sub
in
cld
in
adc
push
xchg
in
int3
nop
mov
cmp
fstp
push
xchg
cld
les
scas
popa
pop
sti
xor
mov
inc
dec
add
and
add
fild
inc
mov
xchg
xchg
xchg
in
xchg
xchg
xchg
dec
cld
int3
fsubr
pop
fbstp
add
jp
xor
inc
sub
or
inc
inc
dec
jecxz
jp
jmp
in
push
push
lock
and
popf
mov
cwde
ss
or
stos
das
add
mov
adc
mov
ret
add
test
inc
inc
push
test
jp
loope
mov
ins
mov
ret
outs
dec
dec
les
adc
and
movs
ret
imul
mov
mov
cs
mov
mov
and
pop
test
and
xor
sbb
adc
fadd
cmp
add
and
xchg
pusha
mov
inc
mov
xchg
and
xchg
les
rol
add
add
push
cmp
repnz
jl
lock
mov
sub
sbb
lds
jge
test
sar
or
mov
mov
add
ret
inc
cmp
fdiv
or
sti
mov
out
sub
pop
add
enter
jnp
jmp
stos
add
adc
test
fst
mov
ret
mov
out
push
(bad)
push
jge
inc
movs
sbb
clc
push
sub
aad
nop
loopne
pop
repz
pop
mov
cmc
pushf
ficom
dec
sbb
adc
sub
(bad)
mov
pop
mov
lds
cmp
sub
mul
mov
lods
mov
fsub
lea
mov
sub
jae
cmps
dec
pop
dec
clc
and
(bad)
jmp
push
retf
jmp
test
je
or
inc
fld
jle
sbb
por
fild
(bad)
push
xchg
pusha
and
mov
std
xchg
les
arpl
mov
mov
sbb
sub
je
push
mov
mov
dec
leave
ret
pop
cmp
rol
sub
dec
sub
push
add
jp
add
dec
xchg
dec
add
ret
imul
xor
or
test
push
mov
bound
mov
adc
adc
(bad)
es
sbb
sbb
xchg
ss
mov
sbb
jge
mov
jmp
jge
adc
mov
movs
pusha
or
rcl
out
and
or
not
mov
popa
mov
or
shl
sbb
mov
xor
sbb
sub
mov
or
leave
dec
pop
adc
mov
inc
sub
sbb
xor
movs
cmps
aam
push
js
test
jl
cmp
mov
inc
xchg
mov
inc
ss
mov
mov
clc
adc
in
mov
sbb
sti
sti
sub
stc
add
out
push
cmp
pusha
pop
stc
sub
xchg
xchg
in
dec
popa
dec
or
cmp
lea
ror
cmp
jg
test
mov
outs
aaa
add
ret
cmp
add
and
stos
pusha
push
out
lds
xlat
mov
shr
mov
mov
clc
add
into
push
jb
sar
popa
ffreep
sti
mov
xor
adc
aaa
call
test
or
inc
cmp
xor
in
add
jge
lods
push
loop
push
jle
jp
xor
mov
or
inc
mov
or
add
bound
inc
xchg
sbb
xchg
in
nop
mov
push
sub
ins
push
loope
add
fist
and
and
jl
mov
loopne
and
shl
fld
cmps
mov
cmps
cs
(bad)
push
jecxz
adc
imul
push
push
cmp
loop
mov
test
aam
ss
cmc
cmp
jmp
cdq
pop
xchg
std
jns
std
push
and
sar
and
inc
inc
sub
push
(bad)
in
mov
jo
inc
adc
cmp
jne
or
mov
in
and
pop
inc
int3
add
out
add
lea
jne
test
and
add
pop
popa
adc
cdq
push
push
mov
inc
lods
lds
imul
xor
inc
sbb
sbb
fwait
das
jle
ror
push
add
inc
inc
cmp
adc
bound
jne
push
jns
add
xchg
jg
or
push
fcomp
(bad)
aad
jnp
in
sbb
cwde
mov
dec
sti
cmovb
ror
call
jne
in
fidivr
sbb
jp
xor
mov
xchg
fwait
cmp
test
add
stc
stc
cld
sar
(bad)
sub
movs
mov
mov
add
xor
add
sbb
jb
dec
jl
pop
mov
clc
add
cmp
dec
into
jne
cmp
add
xor
ret
fild
lods
pop
test
je
inc
jmp
cmp
mov
jb
push
push
and
sub
dec
pop
inc
xchg
mov
ja
mov
jns
xchg
add
and
mov
ins
ss
xor
sub
clc
ja
jecxz
pop
data16
popf
pop
add
inc
mov
cmp
add
sti
fld
pop
inc
or
(bad)
adc
and
jmp
inc
jmp
xor
inc
xchg
in
inc
mov
stos
inc
mov
(bad)
jge
fisubr
mov
ss
es
add
(bad)
mov
xchg
dec
mov
inc
inc
cmp
or
mov
mov
xlat
pop
movs
adc
add
call
lods
inc
rol
dec
adc
add
sbb
push
movs
mov
fsubr
and
push
mov
popw
loopne
or
inc
jl
jp
or
sub
cmc
loopne
pop
(bad)
jge
(bad)
in
adc
enter
add
imul
clc
stos
sti
inc
add
add
dec
push
mov
test
add
jb
or
and
xor
lock
adc
jnp
jne
rcl
call
jbe
add
js
rcr
outs
add
je
pop
and
push
or
push
adc
cld
(bad)
push
add
das
sar
call
mov
cwde
mov
cmp
dec
pop
pop
fsubp
sub
add
push
nop
into
imul
out
je
sbb
aas
sub
out
test
jmp
mov
into
cld
bound
and
lds
icebp
sub
or
mov
fucomp
ja
push
inc
popa
aam
sub
inc
add
lods
lods
and
sbb
loop
loope
push
inc
loopne
cmps
pop
fadd
or
inc
push
in
add
sub
daa
rol
inc
(bad)
and
xor
and
jne
retf
daa
outs
(bad)
push
in
adc
retf
bound
aaa
movs
(bad)
outs
add
mov
lock
dec
push
adc
adc
(bad)
pop
xor
jne
ret
xor
xchg
adc
loopne
loopne
inc
inc
sbb
daa
jno
mov
inc
ror
or
xor
sahf
jl
mov
xlat
xor
pushf
pop
inc
(bad)
push
or
mov
pop
jl
jle
outs
adc
jbe
push
dec
test
je
je
ret
sar
jb
clc
js
or
jecxz
add
inc
pop
jne
pop
(bad)
mov
add
dec
xchg
jecxz
mov
mov
clc
shr
sub
and
lock
jb
push
pop
out
in
out
ret
ror
dec
ins
scas
clc
fidivr
dec
jg
sti
inc
jmp
adc
icebp
cmp
popa
xchg
je
rcr
sub
push
jbe
sbb
pop
pop
je
clc
push
fcomp
in
push
in
shl
inc
sub
das
sbb
mov
sbb
pop
or
push
sahf
add
rcl
(bad)
pop
push
adc
popa
mov
fiadd
cmp
jo
mov
je
cmp
add
das
and
fsubrp
mov
mov
fsubr
xor
retf
loopne
loopne
fst
aad
mov
mov
cwde
bound
js
bound
mov
popa
mov
adc
inc
daa
jne
jl
popf
mov
enter
sbb
or
cmp
xchg
popa
inc
in
je
push
xor
add
fcmovnbe
inc
add
mov
dec
adc
ds
and
or
out
jbe
push
dec
mov
add
fs
nop
es
push
sub
xchg
test
cmp
retf
mul
je
push
inc
mov
jecxz
das
enter
add
add
jb
int
int3
add
jl
aas
mov
add
lea
pusha
inc
adc
xchg
push
dec
icebp
add
sahf
(bad)
cwde
jmp
je
pop
push
or
inc
lock
cmp
je
lock
and
fist
or
lds
scas
lock
int
ins
jmp
inc
mov
ror
or
dec
or
cmp
mov
push
xor
push
loopne
jl
push
push
sbb
mov
lock
int3
jne
rol
and
inc
jmp
inc
xor
lods
lds
sub
jmp
push
aaa
sbb
mov
je
sub
cmp
ja
jmp
(bad)
pop
mov
bound
pop
ret
inc
das
shl
cdq
lods
jmp
daa
mov
cdq
nop
and
call
inc
or
dec
push
cmp
aas
ror
dec
data16
nop
lds
sbb
jmp
sub
loop
xlat
(bad)
pop
ret
pop
int
pop
mov
cmovle
fldcw
out
jmp
pop
je
gs
aaa
push
mov
inc
mov
inc
and
sbb
inc
js
pop
loopne
xor
ret
sub
add
adc
adc
ins
sub
mov
ret
pop
cld
js
into
or
mov
call
or
push
add
jg
je
adc
je
ret
outs
or
adc
dec
sub
push
test
fwait
jb
arpl
mov
(bad)
dec
ds
mov
ds
out
or
and
int3
call
pusha
in
(bad)
or
jne
jge
rcr
or
jbe
xor
adc
sub
or
xchg
loopne
mov
and
jno
dec
sub
fld
dec
push
ficom
push
sub
dec
ficomp
cmp
sub
shl
jg
retf
mov
cmp
mov
adc
or
xor
pusha
or
fimul
jmp
or
jmp
mov
jmp
and
test
pop
aam
adc
mov
mov
cld
outs
outs
loope
outs
cmp
sbb
cmp
sbb
into
cs
sbb
nop
push
aaa
cmc
inc
and
and
lea
sbb
rcl
int
xor
and
jge
in
xchg
jmp
or
call
pusha
aad
dec
push
or
fs
sub
das
sbb
or
sbb
cmp
pop
test
repz
and
aam
or
and
add
imul
cmp
sub
lods
or
es
inc
mov
sub
or
lock
adc
cmp
mov
ret
pusha
and
dec
dec
bound
test
adc
leave
sbb
pop
add
outs
gs
ror
lods
push
adc
or
div
dec
sub
mov
aam
jl
sub
xor
lods
adc
fcmovb
cmp
add
inc
jg
outs
mov
pop
pop
ds
jmp
rcl
mov
rcr
rol
jmp
loop
cdq
push
dec
and
sbb
(bad)
repz
loopne
fild
ds
mov
dec
add
(bad)
dec
jo
push
sbb
loop
mov
push
and
add
cmps
jle
inc
cmp
jmp
mov
popf
ffree
cmp
pop
or
mov
icebp
xchg
or
in
arpl
jno
cmp
xchg
fcom
and
jae
push
mov
inc
push
xor
or
fbld
popf
shl
(bad)
lea
cmp
not
je
mov
jmp
mov
leave
push
sbb
mov
xchg
cmp
(bad)
fild
and
hlt
cwde
xor
pop
(bad)
sar
int
xlat
xor
adc
or
mov
dec
mov
inc
jns
dec
add
dec
dec
push
push
push
cmp
add
pop
(bad)
jl
inc
or
and
je
pop
push
adc
and
cld
xchg
pop
jbe
dec
or
dec
inc
movhps
inc
inc
push
int3
push
mov
mov
jns
add
icebp
jne
dec
jne
xchg
rol
data16
and
sub
scas
mov
icebp
sbb
and
dec
popa
mov
pop
icebp
or
jge
inc
jno
mov
add
sub
ffreep
test
add
mov
cmp
mov
sub
jecxz
mov
je
pop
inc
pusha
inc
mov
scas
inc
cmp
pop
mov
inc
les
dec
jbe
stos
xchg
sbb
lods
popa
in
rol
(bad)
in
sbb
jnp
inc
dec
sbb
(bad)
or
lock
pop
or
scas
push
add
xor
xor
xor
push
jg
sub
mov
sub
je
dec
xor
cld
jb
jp
push
or
add
repz
jo
pop
xor
mov
sbb
pusha
mov
adc
jnp
jne
add
repz
pop
add
and
ss
mov
add
push
mov
aaa
out
xchg
push
pop
pusha
adc
adc
icebp
and
retf
add
sbb
adc
xchg
mov
std
push
inc
or
sbb
and
dec
(bad)
loopne
lahf
add
stos
adc
or
call
dec
dec
daa
xor
xchg
dec
and
push
push
or
sbb
lds
nop
leave
in
addr16
cs
(bad)
cld
mov
aas
pop
and
ins
add
repnz
add
loopne
lds
popa
jge
add
sbb
ja
inc
add
pop
jbe
pop
movs
fbstp
add
jg
add
mov
and
sti
mov
ret
inc
fnsave
mov
mov
pop
mov
push
add
inc
and
ins
leave
(bad)
jno
enter
iret
jl
ror
jb
nop
sar
jns
dec
or
add
lock
jmp
inc
lods
(bad)
gs
dec
(bad)
mov
inc
add
lahf
in
jne
mov
es
push
sbb
icebp
mov
push
push
(bad)
dec
cld
(bad)
sub
mov
movs
ret
push
call
cld
inc
pop
xchg
mov
mov
and
push
jmp
pop
hlt
lahf
mov
push
lea
cmp
ja
call
push
add
push
sbb
icebp
add
sub
jo
dec
cmp
mov
dec
inc
jne
add
xchg
daa
add
rol
add
jo
rcl
cmp
call
add
xchg
inc
test
int3
push
sar
xrelease
xchg
shr
call
hlt
mov
xchg
fiadd
push
shl
fnstsw
pop
jmp
and
or
push
hlt
jmp
dec
jge
push
push
fdivr
dec
push
(bad)
push
aas
fdiv
mov
xchg
push
jno
add
inc
mov
cmps
cmps
pop
cdq
div
in
mov
aaa
shr
or
and
test
js
ins
sub
add
inc
mov
pop
xchg
jo
js
xchg
psubb
scas
popa
add
mov
cmp
pop
aaa
fidivr
cmps
test
shl
jp
out
sbb
inc
pop
push
xor
mov
push
push
pop
fimul
sub
cmps
or
rcr
inc
jge
push
add
lds
jnp
daa
or
movs
gs
adc
or
xchg
jp
in
ret
iret
mov
nop
out
out
ret
mov
adc
cmp
add
adc
push
sbb
xlat
jbe
push
pop
mov
or
push
xor
(bad)
push
add
jb
push
push
bound
adc
add
cmp
in
xor
adc
add
cmp
pop
retf
or
loope
(bad)
nop
and
add
inc
cmp
cwde
faddp
je
clc
or
mov
rcr
inc
mov
movs
xor
push
rol
pop
add
adc
test
inc
por
(bad)
and
and
jmp
es
jne
mov
mov
test
sbb
push
imul
push
shr
or
pop
ins
repz
xor
ret
sar
ret
push
jmp
push
add
ss
or
in
add
and
and
and
loope
mov
cmp
inc
pushf
pop
pop
push
lock
leave
xchg
mov
cld
sub
bound
mov
add
bound
daa
sbb
adc
mov
int
adc
push
xchg
mov
mov
lods
pop
dec
ds
imul
and
add
inc
inc
adc
icebp
sbb
loope
aaa
lds
cmc
sbb
cmps
pop
test
gs
push
ds
out
fmul
and
push
inc
inc
jno
mov
and
das
push
dec
mov
sbb
add
rcr
cs
xchg
push
mov
stc
ret
inc
add
adc
mov
mov
push
daa
fidivr
rcl
mov
or
adc
cmp
sub
lahf
inc
pop
sub
and
cmp
or
mov
rcr
xor
jo
jge
and
pop
mov
mov
outs
lea
jl
pop
sbb
add
and
xor
push
div
mov
xor
xchg
cmp
inc
or
or
jp
xchg
daa
not
lods
dec
pop
popf
test
sbb
push
lea
fmul
icebp
and
out
pop
and
aaa
ret
in
repz
loope
or
leave
xor
fld
push
dec
add
xchg
in
(bad)
(bad)
push
cmp
inc
je
add
dec
ins
xor
jbe
ja
push
jg
sbb
lock
add
add
outs
retf
popa
dec
loopne
or
stos
inc
stc
add
fs
fsubr
cdq
cmp
cld
hlt
inc
ss
cdq
inc
mov
cmp
fnsave
push
push
xchg
inc
xchg
mov
ss
adc
hlt
(bad)
and
sub
mov
in
sub
mov
fs
add
inc
stos
mov
jb
jns
push
cmp
sub
add
hlt
add
xor
and
xchg
or
out
push
and
fnstenv
xchg
jo
push
pop
popf
and
loop
mov
mov
or
mov
inc
jnp
(bad)
les
mov
ret
mov
rol
add
add
out
mov
add
cmc
loopne
xchg
scas
dec
inc
test
gs
loop
mov
xchg
(bad)
cmp
xor
adc
call
push
stc
(bad)
sbb
cmc
(bad)
ror
sbb
inc
sbb
jmp
aam
push
jge
push
mov
dec
push
data16
lock
sub
xchg
jne
jp
std
jmp
popf
sbb
pop
jns
rol
pop
ds
jno
add
mov
sub
mov
pusha
jae
mov
inc
or
lods
add
and
cmp
dec
cmp
push
pop
in
mov
add
repnz
lock
inc
movs
loopne
push
mov
in
retf
xchg
sti
scas
or
mov
or
fxch
dec
arpl
and
(bad)
sbb
sbb
stc
dec
add
add
add
adc
inc
pop
and
loop
mov
fwait
xchg
dec
jecxz
mov
jb
das
mov
sbb
fs
or
cmp
add
mov
jae
fs
(bad)
and
jb
ret
jmp
pop
xchg
shl
dec
je
jmp
jno
jne
mov
mov
add
pop
cli
dec
(bad)
shl
dec
aad
add
mov
(bad)
xchg
dec
sbb
push
fbstp
mov
sub
imul
into
(bad)
and
and
shl
lea
cmp
arpl
xor
clc
or
out
or
push
sub
dec
movs
jmp
(bad)
push
push
sbb
pop
and
adc
fisubr
push
adc
sti
enter
dec
add
in
imul
or
push
add
inc
xor
mov
xchg
mov
loopne
mov
mov
enter
push
shl
leave
adc
mov
clts
jmp
push
pop
adc
or
aam
mov
adc
pop
push
imul
nop
mov
gs
cmp
std
push
push
add
cmp
and
sub
or
adc
test
daa
jne
jnp
push
mov
sbb
lods
test
xor
std
ret
mov
adc
pop
and
mov
dec
cmp
(bad)
sbb
mov
push
mov
mov
mov
and
mov
rcl
je
outs
jecxz
imul
sahf
mov
in
mov
and
inc
push
push
loope
shr
or
aaa
lods
xor
fwait
imul
ret
xor
mov
xor
adc
jns
adc
enter
pop
adc
xor
inc
enter
mov
ret
outs
mov
xor
sub
inc
test
js
cmp
push
push
jb
push
xor
pop
pop
adc
test
fisubr
jnp
add
add
sahf
dec
adc
push
push
adc
adc
ret
enter
jno
dec
cmp
push
sbb
popa
push
shl
and
and
add
xchg
add
rcr
arpl
adc
outs
in
shl
mov
sti
dec
call
out
retf
pop
outs
fld
fld
out
add
or
outs
ins
ins
fcom
in
push
push
sub
sub
mov
and
jne
xchg
fs
mov
ins
cmc
push
add
dec
push
sub
xor
stc
mov
movs
jp
pop
dec
dec
or
and
mov
aam
sub
xor
or
jmp
dec
pop
push
std
out
and
ror
push
aam
sub
xor
and
and
pop
mov
xchg
push
retf
(bad)
inc
daa
xlat
and
sar
inc
push
jb
rol
xchg
fiadd
sub
and
dec
jp
adc
add
sbb
hlt
movs
xchg
icebp
pop
mov
fidiv
sbb
mov
jg
jge
push
pop
push
nop
jno
sbb
push
push
xor
jo
mov
je
lock
jb
cmp
mov
lock
mov
cld
dec
rcr
jg
inc
jmp
xchg
mov
test
stos
mov
or
dec
ficomp
sbb
jne
mov
mov
or
xor
push
adc
mov
mov
cmp
icebp
test
nop
nop
mov
mov
inc
mov
and
mov
dec
adc
jg
push
sbb
pop
sbb
add
loope
(bad)
sar
add
or
and
add
and
dec
dec
dec
sub
inc
popa
hlt
xor
punpckhbw
xlat
inc
rcl
xor
adc
dec
mov
ds
sahf
cmp
dec
mov
xor
jmp
mov
mov
push
sbb
rcl
or
inc
cmp
dec
xchg
into
dec
cdq
or
and
mov
and
inc
iret
sbb
mov
or
fcom
sbb
or
or
stos
mov
push
repz
nop
sbb
cmp
aas
pop
nop
inc
add
push
cmp
(bad)
jg
push
pop
pop
inc
mov
jo
add
ds
add
cmp
add
push
lods
jne
push
sti
push
add
mov
push
mov
test
pop
xchg
pop
xchg
stc
pop
push
push
xchg
push
pop
mov
lea
sub
sub
jno
push
inc
mov
and
shl
inc
ror
pop
cmps
out
sbb
outs
push
mov
xor
jmp
dec
pusha
aad
sub
ret
dec
je
inc
out
je
(bad)
jmp
inc
pop
add
icebp
push
mov
mov
xchg
test
in
sub
inc
mov
add
and
hlt
clc
dec
mov
mov
pop
test
icebp
inc
rcr
gs
jns
push
sbb
cmovb
push
jmp
adc
push
push
sbb
aam
daa
or
push
push
stc
fidiv
sbb
xor
and
push
jo
xor
cwde
mov
rcl
inc
ins
add
jecxz
or
sub
and
or
xor
lock
push
jne
pop
aaa
mov
movs
addr16
sub
add
xchg
mov
loope
mov
and
pop
push
jb
push
inc
and
aaa
and
adc
sub
call
push
inc
in
je
gs
sub
lss
pop
call
out
or
push
je
sbb
and
js
out
cmp
cmp
ins
push
inc
xor
sbb
rcl
xor
adc
enter
sub
fiadd
dec
ja
pop
add
xchg
lock
push
cmps
popf
sub
(bad)
push
je
sti
or
fld
or
cmp
mov
xchg
out
and
pop
dec
pop
or
shl
adc
adc
push
or
push
cmp
les
aas
mov
xlat
ss
sbb
jmp
pop
or
mov
mov
and
push
pop
jnp
cmps
jp
sub
add
mov
lock
push
push
and
lahf
jbe
daa
sbb
adc
sub
xor
pushf
push
inc
pushf
sub
mov
sub
inc
inc
inc
in
jmp
adc
inc
pop
and
xor
mov
adc
jle
adc
sbb
xor
imul
mov
xor
pop
aaa
add
sub
icebp
in
or
cmps
nop
add
(bad)
fwait
jnp
test
cmp
rcl
adc
dec
adc
scas
ins
cmp
mov
pop
outs
and
pop
jle
xchg
sbb
push
sub
inc
hlt
clc
aaa
sbb
push
mov
test
and
sbb
push
cwde
aaa
and
shl
out
rcl
and
push
shl
jnp
mov
js
sub
(bad)
icebp
jecxz
push
cmps
jo
lahf
imul
lods
enter
and
adc
xor
idiv
(bad)
dec
ret
(bad)
jnp
cmc
icebp
scas
or
push
mov
xor
clc
clc
dec
fld
sti
fs
push
cmp
mov
cwde
jb
xchg
push
jnp
je
xor
xor
sbb
adc
push
xchg
test
push
xchg
sbb
cli
or
add
pop
rcr
lods
pop
in
inc
adc
xor
cmp
pop
fcom
ret
xchg
popf
mov
frstor
jmp
jo
(bad)
jmp
mov
and
push
icebp
(bad)
and
ds
add
push
sbb
sbb
cld
inc
adc
or
es
add
sub
jge
jae
mov
imul
push
ds
push
xchg
rcl
retf
add
xchg
and
cwde
xchg
mov
lea
out
dec
cmp
ins
frstor
dec
adc
int
jmp
enter
jne
and
mov
cmp
mov
fcomp
cmp
inc
(bad)
ins
sar
movs
mov
dec
push
cmp
mov
pop
dec
push
add
jne
mov
push
mov
jae
xor
cmp
movs
or
loop
add
push
xchg
inc
fwait
das
mov
icebp
jo
ret
scas
adc
hlt
cwde
sbb
pop
mov
dec
or
imul
sub
test
inc
cld
mov
or
cli
sub
adc
dec
jne
xchg
jns
and
or
fimul
pop
xchg
pusha
pop
add
sbb
push
mov
std
add
retf
pop
pusha
add
call
mov
push
or
lahf
outs
imul
(bad)
scas
popf
addr16
dec
inc
inc
sub
sub
imul
les
stos
fs
mov
mov
jbe
into
or
mov
cdq
pop
jno
sar
imul
shl
mov
cmp
adc
ins
add
cmp
pusha
ins
add
ret
fdiv
popa
pusha
sbb
loopne
adc
jne
lock
stos
sar
jno
fadd
mov
je
mov
jle
jo
inc
repz
jl
jb
les
rol
xchg
retf
jo
dec
adc
stc
add
sbb
pop
sub
add
sahf
cmp
arpl
inc
adc
retf
fadd
add
or
mov
mov
jmp
pop
mov
jmp
cmp
or
push
inc
inc
shr
hlt
and
mov
popf
cld
scas
pop
cmp
adc
add
fidiv
mov
cmp
pop
inc
repz
xor
dec
data16
jae
mov
mov
or
lds
lock
and
push
mov
adc
mov
dec
adc
cwde
pop
mov
xor
aam
pop
inc
sti
(bad)
cmp
jne
cmps
shl
test
aas
adc
test
repnz
xor
rcr
mov
pop
rol
or
dec
or
(bad)
pop
adc
gs
jmp
push
adc
and
add
rcl
loope
pop
fadd
mov
jp
jne
repnz
daa
or
inc
xchg
sbb
and
xor
out
adc
add
sbb
sub
push
dec
mov
movs
aad
jmp
ins
mov
sbb
sbb
in
dec
ret
loope
out
ins
sub
xor
add
sub
hlt
ja
inc
and
scas
test
fidivr
sub
loopne
imul
cmp
mov
das
push
mov
test
sbb
fwait
in
or
mov
and
adc
out
push
test
int3
sub
jns
sub
lock
cmps
inc
ror
add
push
inc
rcl
in
mov
test
clc
or
cmp
mov
mov
int
add
push
push
fs
jno
xor
sub
sbb
sbb
and
(bad)
mov
mov
push
outs
pop
pop
jo
ja
pop
sbb
(bad)
bnd
jb
xchg
inc
clc
inc
ret
clc
aam
cmp
fld
xor
adc
mov
dec
vunpcklps
push
push
lock
adc
out
test
and
mov
in
push
ins
jmp
dec
outs
std
xor
push
jno
arpl
inc
push
push
pop
xchg
cmp
or
jecxz
leave
add
jmp
push
or
sbb
and
stc
push
inc
loopne
fidivr
sbb
cmp
sti
push
arpl
test
ret
clc
and
inc
push
shl
xor
or
or
mov
ins
sbb
push
dec
dec
sub
popf
cmps
jge
add
inc
adc
adc
mov
sbb
ins
sbb
sti
and
pop
push
mov
mov
or
pushf
cmp
sahf
or
adc
repnz
lods
mov
sbb
iret
inc
and
mov
(bad)
scas
fwait
clc
inc
and
lea
mov
add
adc
push
inc
xchg
sbb
rcr
mov
rcr
rol
(bad)
gs
inc
adc
sbb
jb
inc
sub
pop
out
or
adc
rcr
retf
push
mov
les
fist
push
mov
pop
and
jg
rol
sub
push
xor
das
dec
sub
push
mov
adc
enter
fisttp
mov
and
lods
(bad)
cmp
test
mov
enter
loopne
lea
mov
pop
pop
pop
adc
push
push
cld
and
push
and
dec
jmp
or
cmp
outs
adc
push
inc
inc
xchg
test
cmp
xchg
cmp
sub
push
imul
jg
or
sbb
shr
cwde
adc
dec
sbb
mov
cmp
sahf
ds
mov
sub
call
push
sysenter
xor
mov
or
sub
movs
movs
jbe
pushf
sub
lods
and
inc
and
push
jp
add
call
ins
outs
pop
lods
cwde
dec
sete
add
mov
sbb
push
imul
xor
push
push
fcomp
fwait
or
cwde
and
mov
add
or
es
xchg
es
ja
test
jns
push
pop
pop
sbb
dec
add
sti
aaa
repnz
and
xor
xchg
cmp
adc
xor
pushf
sub
in
shr
dec
or
pop
lock
or
je
out
xchg
mov
popa
xor
call
sbb
inc
sbb
or
das
mov
sub
mov
and
push
out
mov
fcomp
call
mov
inc
rcr
je
sub
fiadd
pop
(bad)
neg
cmp
push
aaa
sbb
mov
pop
xor
jmp
sbb
out
push
and
aam
jle
xor
push
add
cdq
ss
push
sub
mov
fcmovbe
ss
add
dec
add
ins
dec
jo
mov
ret
mov
inc
mov
dec
pop
sbb
(bad)
fisttp
mov
and
push
push
shl
cld
push
jb
jmp
cmps
pusha
(bad)
mov
mov
jae
mov
call
inc
mov
or
int3
movs
jnp
cld
add
ja
imul
adc
jl
imul
sbb
nop
aaa
sub
in
mov
inc
adc
add
push
shl
fmul
call
xor
jns
sbb
mov
jle
mov
mov
test
push
cld
(bad)
clc
push
mov
and
mov
sub
ret
ds
and
popf
or
loop
xor
push
les
add
cli
sahf
xchg
mov
test
les
push
xor
jge
mov
std
loop
mov
mov
jle
cwde
and
and
push
adc
bound
lods
add
rol
sbb
jmp
pusha
lea
mov
mov
jne
lods
int3
xchg
fsubr
push
inc
test
dec
dec
ret
lock
int3
xchg
cmp
cmp
clc
adc
mov
sbb
push
push
je
adc
test
or
mov
mov
or
popf
or
inc
adc
das
jmp
sub
cmp
mov
fist
fcom
adc
rcr
jmp
push
stc
adc
pop
pop
inc
dec
and
fsub
fadd
pop
cli
lock
sub
sub
mov
mov
sti
mul
fbld
and
imul
xor
pop
stos
or
xor
fisub
jecxz
popa
mov
jle
jle
xchg
test
xchg
mov
sahf
pop
je
icebp
ss
test
fisubr
dec
sbb
(bad)
adc
add
xor
sbb
inc
sbb
shr
dec
mov
jle
test
push
mov
fbld
dec
push
jbe
shl
xor
mov
call
loopne
cld
cs
das
lea
cmp
cld
inc
in
or
xchg
out
adc
sub
push
push
inc
loope
aas
loopne
mov
sahf
add
dec
js
jle
mov
mov
push
xchg
sub
inc
push
xor
sub
jb
retf
and
test
push
pop
adc
or
add
jle
scas
mov
nop
or
leave
jnp
ins
sbb
push
sub
(bad)
iret
repz
dec
push
pop
outs
movs
iret
repz
push
xor
add
or
or
les
mov
mov
imul
or
mov
push
mov
sub
mov
repnz
add
add
loop
jp
aas
push
shl
mov
mov
jnp
mov
inc
push
xor
adc
int3
jl
pop
push
jmp
add
out
sbb
mov
dec
jo
stc
adc
je
or
mov
inc
sub
or
xchg
jmp
std
mov
add
mov
je
or
je
ror
adc
cmp
mov
sete
push
pop
clc
mov
aam
push
cmp
sahf
std
inc
jo
pop
jne
push
cmp
in
inc
pop
xor
in
cmp
scas
dec
and
out
and
and
mov
dec
out
cmp
cmp
adc
jmp
into
imul
adc
cs
loopne
or
cmp
pop
into
sub
mov
and
mov
mov
push
test
scas
out
inc
or
push
mov
imul
(bad)
mov
push
pop
and
mov
xor
gs
adc
mov
(bad)
or
cli
add
jns
std
cld
lea
(bad)
ror
rep
dec
clc
or
sbb
retf
dec
mov
add
sbb
sti
in
or
je
or
and
pop
adc
shr
sbb
and
cmp
imul
cmps
shl
add
and
in
inc
push
cmp
push
mov
add
sbb
add
mov
adc
adc
cmp
xlat
add
push
cmp
test
inc
or
push
in
retf
or
adc
dec
movs
popf
mov
sbb
jne
push
mov
fwait
jnp
adc
dec
adc
in
adc
or
sbb
inc
outs
pop
adc
or
sbb
(bad)
scas
sbb
pop
add
int3
mov
mov
dec
xor
jbe
aam
sub
and
cld
xchg
inc
in
push
daa
test
lods
jno
sahf
or
and
sub
jp
pop
sub
add
daa
jo
xchg
je
pop
dec
(bad)
or
fisttp
test
add
mov
add
push
push
sbb
adc
push
or
xchg
add
sub
inc
cmp
mov
add
mov
add
int
jbe
lds
or
and
mov
mov
push
dec
in
inc
mov
repnz
mov
(bad)
(bad)
mov
xchg
push
test
jl
mov
xchg
retf
or
ins
je
fcomip
pop
js
sub
xor
cmp
popa
mov
stos
inc
(bad)
mov
mov
sbb
jb
es
add
push
sub
call
push
pusha
nop
xchg
xor
add
adc
ins
stos
loop
jne
or
sub
fdivr
into
dec
add
xchg
and
add
push
inc
and
test
shr
lea
sbb
bound
scas
adc
xor
mov
jmp
cmp
jl
mov
je
das
or
xchg
ret
jne
mov
les
mov
scas
ret
pop
pop
retf
arpl
mov
mov
push
icebp
sub
adc
add
(bad)
cmp
(bad)
jmp
pop
jmp
mov
mov
mov
push
xchg
test
jecxz
test
add
xchg
mov
add
push
dec
pop
sub
and
mov
sbb
sub
call
dec
mov
mov
dec
mov
cmp
cdq
call
rol
addr16
add
cmp
(bad)
push
xor
jle
std
mov
into
sahf
adc
clc
(bad)
push
retf
xor
outs
mov
sbb
or
movs
mov
or
cwde
(bad)
cmps
je
je
mov
pop
push
inc
cmp
retf
adc
repnz
jmp
cli
stos
lods
xchg
push
out
and
test
adc
xor
cwde
sbb
leave
mov
xor
dec
mov
inc
xor
movs
pop
push
xor
(bad)
sub
lds
xchg
ficomp
mov
sbb
sbb
fcomip
and
clc
or
cmp
adc
or
jne
mov
inc
fisttp
jle
mov
int
adc
or
not
push
adc
xchg
cwde
ss
repnz
xor
adc
lahf
bound
sahf
xor
(bad)
pushf
cmp
fcom
ds
xchg
mov
dec
push
es
add
mov
sbb
add
inc
mov
ret
xor
rcl
les
retf
lock
push
sub
ret
mov
xchg
adc
xor
pop
sub
push
cmp
rcl
cdq
push
repnz
adc
or
mov
mov
loopne
add
cmp
cmp
ins
mov
jl
lea
cmc
or
jecxz
mov
scas
movs
daa
je
ss
jmp
aas
mov
sbb
mov
adc
dec
push
add
nop
inc
dec
add
enter
cdq
je
mul
add
or
je
mov
add
inc
or
cmp
cmp
ss
pop
in
add
neg
push
cmp
sbb
mov
dec
test
ins
xor
je
or
sub
sub
aaa
cmps
stc
jle
jmp
jge
setb
inc
mov
test
or
push
adc
dec
sub
inc
mov
jmp
push
cmp
das
xor
dec
jmp
dec
and
push
(bad)
aaa
and
fnstenv
movs
pop
pop
pop
or
inc
xchg
cmp
adc
push
inc
inc
or
adc
shl
test
in
and
pop
add
cmp
inc
add
out
popa
or
pop
pop
push
mov
sbb
sbb
and
fmul
xor
imul
cmp
cs
mov
adc
adc
sub
dec
in
inc
adc
add
xchg
and
frstor
jg
xor
pushf
and
jo
adc
add
inc
and
jge
mov
mov
add
pop
cmp
push
lss
jge
adc
add
shl
ret
push
cld
mov
and
test
and
imul
mov
mov
or
jg
mov
das
cwde
jg
sub
jg
push
ret
or
adc
repnz
jo
inc
in
out
es
retf
adc
push
rol
(bad)
or
sbb
les
nop
add
ret
adc
pop
fisttp
jl
push
push
adc
sbb
xchg
popa
xor
cwde
add
pop
add
sub
aam
shr
add
out
inc
lods
dec
sub
push
dec
out
push
lahf
adc
ins
or
(bad)
out
wrmsr
mov
nop
out
sbb
xor
ret
push
shr
inc
or
mov
adc
dec
push
in
call
sti
lods
rol
loop
and
loope
adc
mov
add
xor
xchg
lods
dec
mov
jg
mov
xchg
(bad)
mov
xor
shl
je
dec
jne
sub
push
mov
call
out
dec
in
sar
hlt
sbb
xor
xchg
(bad)
or
gs
push
push
outs
nop
mov
iret
sub
rol
or
es
fsub
rcr
inc
push
aam
mov
nop
push
push
mov
loopne
dec
and
jg
loope
sbb
rcr
retf
mov
dec
mov
or
jmp
inc
inc
retf
fld
mov
mov
cmp
call
push
in
or
(bad)
mov
inc
fstp
mov
fwait
mov
xchg
dec
arpl
or
mov
or
push
pop
or
xchg
add
pop
adc
enter
add
and
mov
push
push
or
xchg
outs
cmps
sbb
cdq
adc
push
or
ss
add
rol
std
adc
push
push
cmp
lahf
cmp
pushf
fadd
inc
push
test
(bad)
fisubr
lds
or
mov
imul
pop
scas
mov
sbb
mov
sbb
outs
xor
mov
add
fs
shr
push
push
gs
cmp
lods
call
mov
retf
(bad)
loopne
icebp
sub
cmp
lea
loope
sub
inc
pusha
pop
xor
add
sar
shr
clc
clc
lahf
stos
ins
add
push
add
mov
or
enter
xchg
(bad)
ss
and
iret
and
cmp
leave
leave
jnp
cdq
daa
leave
add
out
xchg
rol
inc
cs
(bad)
xchg
push
and
or
or
mov
lock
inc
sub
jbe
std
lahf
movs
movq
adc
or
pop
dec
cld
sub
mov
shr
dec
mul
mov
jg
loop
add
mov
into
add
add
ins
test
and
mov
add
or
adc
movs
into
mov
adc
hlt
push
mov
je
sbb
xor
jne
sbb
test
fst
adc
xchg
ficomp
or
cmps
sbb
push
push
sub
ret
jae
bound
xor
xchg
push
xchg
mov
pop
xchg
inc
sbb
push
mov
clc
outs
push
mov
cli
ds
mov
xor
mov
and
clc
mov
sahf
xchg
cmp
ds
into
(bad)
(bad)
push
mov
push
setns
push
and
adc
lock
push
adc
fmul
rcl
or
add
mov
push
push
adc
aam
movs
sub
and
inc
mov
jmp
retf
aas
pushf
cmps
add
ret
sbb
inc
loopne
push
or
cmps
jecxz
(bad)
std
cmp
cmp
adc
je
enter
add
js
int3
jle
push
lods
jge
mov
jle
in
push
dec
enter
dec
lods
movs
cmc
push
push
cmp
mov
xchg
retf
ret
sub
fild
ss
mov
pop
mov
(bad)
movsx
or
xchg
adc
inc
dec
jmp
jno
xor
stos
push
call
sbb
xlat
xchg
add
xor
lods
push
jmp
sub
adc
add
movs
(bad)
or
jmp
adc
nop
lock
movs
adc
aas
adc
adc
sbb
test
fucomi
pop
sub
jg
je
test
jl
adc
jle
or
inc
retf
clc
fwait
xor
jne
lea
push
pop
mov
das
bound
(bad)
cmc
rol
jo
je
xchg
js
cdq
mov
fs
js
je
jle
or
jle
or
mov
jns
dec
xchg
adc
(bad)
ins
dec
push
fcomp
ss
or
cli
add
cmp
inc
adc
clc
shl
sti
mov
sti
pushf
and
sub
or
xor
ds
mov
mov
add
pop
mov
lods
jl
rcr
pop
jle
hlt
and
push
jl
mov
or
pop
pop
rcl
sub
jp
lods
pop
bound
jno
sbb
mov
add
in
push
push
stos
push
aaa
(bad)
xchg
jno
ss
pop
mov
retf
lea
mov
loope
xor
(bad)
xchg
dec
sub
push
(bad)
dec
add
mov
test
mov
test
in
aad
daa
mov
inc
push
shl
inc
jae
gs
and
cmp
jne
jae
mov
adc
dec
hlt
loopne
faddp
adc
sbb
fucom
sbb
mov
add
push
js
adc
cmp
or
imul
jle
out
push
inc
xor
daa
scas
stos
xor
xor
stos
inc
xchg
out
dec
adc
neg
and
mov
cs
pop
loop
jge
aaa
push
xor
mov
pop
call
dec
fmul
call
fwait
inc
fld
xor
sub
sbb
lods
add
push
jns
add
mov
lds
mov
sub
inc
cmp
jecxz
push
pop
test
mov
cmp
jne
cmp
jne
imul
push
outs
ror
cwde
xor
cwde
mov
je
mov
movs
cdq
mov
mov
rcl
pop
mov
xchg
fs
int3
fcom
add
movs
sbb
ret
mov
sub
jle
clc
shr
xchg
sub
lock
push
push
hlt
jne
push
mov
and
adc
xchg
sub
cmc
pop
js
xor
jns
inc
cmp
jo
jns
adc
pop
inc
xor
test
cld
adc
fldenv
push
and
or
lea
loopne
jne
or
mov
push
lock
adc
mov
and
ja
push
push
cmp
dec
mov
or
(bad)
push
sbb
mov
jne
aas
mov
adc
movs
mov
ret
hlt
hlt
mov
aam
inc
int
dec
dec
pop
enter
popa
and
push
or
ret
inc
les
push
and
and
xor
push
in
cwde
dec
mov
xchg
adc
inc
in
shr
mov
sbb
sahf
add
inc
inc
sub
mov
mov
push
and
movs
dec
xor
add
sub
inc
call
mov
adc
in
cmovl
adc
push
dec
dec
icebp
sbb
cmp
jg
shr
aaa
cmps
cmp
sti
inc
jmp
cmp
enter
mov
mov
inc
cmps
jle
xchg
push
ret
in
adc
mov
or
test
sbb
jmp
call
add
jno
push
sub
jo
xchg
movs
fimul
je
push
ss
mov
mov
les
pop
or
retf
jmp
push
xor
je
sub
push
stc
in
add
sub
pop
mov
add
mov
fdivr
sbb
and
(bad)
movs
push
imul
retf
gs
jne
or
aas
inc
or
ret
pushw
pop
inc
clc
test
push
jge
sub
sbb
js
adc
pop
cmp
lea
xor
aas
mov
dec
bound
fstp
and
sbb
push
xor
rol
dec
adc
jne
adc
jne
or
test
adc
lods
fidiv
or
cdq
ds
(bad)
and
pushf
mov
adc
cmp
aam
add
mov
jp
cmps
lock
adc
daa
lock
push
idiv
stos
call
jne
push
ins
ins
push
dec
repz
sbb
retf
mov
mov
jae
xor
ret
mov
es
loopne
or
jo
cmp
dec
dec
jl
lea
stos
push
push
cmp
sbb
dec
and
push
push
enter
cmc
inc
shl
ret
in
jle
cmp
mov
in
push
sbb
ins
mov
int
hlt
iret
jg
shl
pop
es
pop
lea
mov
adc
dec
pop
scas
mov
popf
xor
sub
push
pop
movs
test
or
add
and
call
sub
add
add
push
mov
push
inc
sqrtps
push
cmp
jno
push
clc
outs
mov
in
test
xchg
xor
xor
jmp
push
push
out
jnp
xchg
xor
xor
lock
das
cs
xor
add
add
push
or
push
pop
test
adc
call
mov
ins
es
sbb
ins
jmp
fild
adc
dec
dec
call
call
sbb
add
adc
popa
movs
add
pop
push
cmp
rcr
call
inc
adc
inc
or
daa
call
adc
dec
mov
jmp
or
xor
nop
xor
inc
mov
sbb
xchg
or
fwait
pop
and
mov
jge
jbe
ret
mov
or
sbb
imul
or
mov
mov
jno
ins
mov
pop
xor
push
xor
outs
push
jp
icebp
fcomp
cmc
mov
(bad)
fld
add
jmp
cmps
sbb
adc
and
sbb
mov
lea
rcl
cs
sbb
sbb
icebp
push
test
push
(bad)
adc
ja
xor
xor
xchg
xor
sbb
pop
(bad)
mov
in
dec
or
mov
rcl
and
push
or
mov
adc
or
and
adc
je
jle
stc
and
push
pop
push
mov
or
dec
ds
sbb
test
push
sbb
mov
into
or
pop
clc
push
adc
pushf
xor
inc
pop
sbb
cmp
mov
leave
xchg
sub
test
adc
pop
mov
imul
jo
or
jl
jmp
arpl
movs
push
pop
je
mov
pop
push
pop
add
add
pop
je
dec
cmp
push
push
(bad)
(bad)
and
enter
jmp
(bad)
fcom
push
sbb
adc
and
and
inc
inc
sar
cmp
dec
or
mov
ja
mov
inc
jae
test
cmp
mov
shr
fist
ror
sbb
xor
xchg
ror
pop
test
add
les
lock
into
(bad)
fisttp
mov
mov
cmp
les
sbb
das
and
cmp
imul
data16
mov
sub
int
push
cmp
or
hlt
or
push
sub
xchg
(bad)
xchg
adc
adc
or
pop
inc
jb
adc
popf
pusha
and
cli
add
jg
cmp
loope
inc
mov
inc
iret
sub
push
and
xor
mov
or
daa
aad
push
push
push
jmp
test
out
jne
add
aas
inc
invd
inc
out
push
js
dec
int
(bad)
nop
inc
hlt
fcom
push
sub
rcr
or
out
and
call
pop
fcom
lods
and
inc
or
iret
or
xacquire
cdq
pop
test
pusha
jbe
aam
(bad)
je
pusha
loope
sbb
jmp
aad
pop
(bad)
push
popa
dec
mov
test
push
jns
mov
push
sub
(bad)
ss
xchg
retf
(bad)
mov
and
mov
mov
pop
pusha
xor
xchg
push
xchg
sub
(bad)
push
mov
xor
jo
in
dec
movs
call
mov
adc
icebp
ds
inc
add
cmp
sub
and
inc
xor
xor
pusha
xor
cld
push
rol
jns
add
fucomi
fcmovnbe
sbb
xor
mov
dec
in
rcr
js
pop
call
xor
test
mov
mov
dec
repnz
xchg
pop
aam
mov
lea
fist
pop
aaa
loopne
outs
cmp
mov
test
and
add
sub
mov
pop
movs
inc
sub
and
add
inc
test
pop
cmp
test
jge
ret
pop
mov
dec
jnp
rcr
lahf
jmp
pop
pop
fwait
int3
and
imul
test
mov
nop
push
popf
jbe
ret
pop
xchg
rol
push
pop
les
push
(bad)
cmp
ss
add
pop
push
js
test
or
add
add
push
or
or
or
add
jo
mov
dec
adc
cmp
popa
xor
(bad)
sub
jb
push
fistp
push
cmp
test
and
imul
mov
dec
xchg
ds
js
jno
xor
push
into
clc
daa
ss
xchg
add
pop
sub
or
js
adc
inc
or
data16
jo
ret
or
add
(bad)
mov
je
adc
shl
out
dec
xor
xor
add
and
cmp
xor
cli
ins
aaa
out
dec
sub
(bad)
out
sub
pusha
adc
sub
mov
jle
dec
cmp
jg
sub
pusha
sbb
jbe
pop
inc
(bad)
(bad)
icebp
add
mov
(bad)
leave
dec
dec
jne
mov
push
xor
cmp
sub
jbe
inc
imul
rcr
sbb
push
adc
cmp
cmp
or
xchg
les
dec
mov
inc
jmp
inc
add
cmp
mov
mov
es
into
pop
push
xor
push
add
mov
ins
adc
cwde
data16
push
sbb
push
pushf
jae
or
add
sub
mov
lock
arpl
jmp
hlt
push
sar
inc
bound
mov
repnz
or
push
or
fcmovb
pop
cmp
mov
test
int3
lods
mov
mov
dec
xchg
loope
movs
or
pmaddwd
push
stos
pop
mov
cmps
inc
xor
xor
push
mov
pop
sub
xor
mov
mov
add
mov
pop
cli
push
mov
jge
jne
push
jae
(bad)
bound
or
and
je
jbe
inc
into
scas
mov
xor
dec
adc
pusha
cmp
rcr
lahf
push
stos
inc
adc
jl
data16
cmp
dec
or
sub
sbb
mov
test
ret
sub
fild
pusha
shl
popa
push
push
outs
gs
adc
xchg
sub
cs
and
cmp
lock
pop
sub
(bad)
and
sub
mov
inc
xor
push
loop
sub
mov
pop
adc
sub
and
popf
mov
push
push
xchg
or
jge
adc
dec
jmp
push
ficom
stos
add
sbb
or
stos
add
shl
(bad)
repz
cli
pop
adc
lea
pop
mov
sub
test
adc
inc
push
sbb
sub
lock
cmps
push
pusha
in
inc
imul
or
rcr
gs
mov
sub
and
xchg
(bad)
mov
mov
push
sbb
pop
outs
mov
out
mov
and
xor
es
dec
adc
pop
cmp
sub
pop
loopne
jne
xchg
sbb
sar
xor
jmp
cmovne
(bad)
ror
cmp
shl
fs
lock
sub
inc
or
or
loope
retf
ja
call
mov
inc
ins
rcl
and
xlat
sbb
jl
cmp
sub
sbb
sub
iret
mov
xchg
shr
pop
cmp
jp
and
call
and
inc
and
dec
rol
dec
in
adc
leave
and
jb
sub
ins
or
imul
cmps
or
and
xor
push
sub
call
sbb
stos
push
call
adc
shr
jl
push
pushw
jne
cdq
out
sbb
add
xor
pop
adc
stos
sub
jne
retf
lds
push
add
push
pop
je
adc
sbb
and
in
sti
xor
or
pop
pop
icebp
leave
inc
mov
rcl
adc
imul
and
xor
sar
sub
xor
mov
cmp
inc
lods
mov
mov
push
ins
or
ret
xchg
ds
jecxz
push
aam
cli
sub
fsubr
fmul
mov
scas
daa
mov
out
leave
push
xchg
les
push
sub
sub
test
mov
ds
push
and
cmp
and
adc
or
fidiv
inc
xor
add
test
data16
dec
shr
add
jne
and
loope
fist
cmp
xor
push
les
out
sbb
cmps
lea
loopne
push
sbb
or
les
js
(bad)
xor
pop
ss
loopne
push
gs
ins
cmp
add
pop
in
mov
and
sub
das
mov
bound
dec
push
(bad)
inc
xchg
rcr
and
xchg
das
(bad)
mov
pop
and
fadd
inc
inc
xlat
pop
aam
repnz
dec
mov
and
adc
inc
fcomp
xor
retf
nop
(bad)
xchg
iret
rcr
fstp
fwait
sub
dec
pop
sbb
cmp
outs
cmp
(bad)
push
mov
retf
fbld
cmps
mov
das
push
mov
cmp
ja
xor
sbb
loopne
mov
mov
dec
(bad)
clc
and
clc
push
int3
outs
cwde
std
add
std
push
dec
adc
push
in
cmps
in
dec
xchg
jmp
ja
mov
fstp
and
push
in
inc
push
xor
clc
push
jb
pop
cmp
xchg
dec
out
mov
mov
std
into
lock
mov
shl
loope
mov
into
dec
sbb
jge
pop
icebp
sub
cmp
push
outs
and
call
pop
fs
sub
and
scas
jnp
cs
in
push
mov
fcmovu
xchg
icebp
mov
mov
inc
or
scas
mov
popf
jbe
imul
pop
cmc
mov
inc
jo
sub
test
fmul
mov
adc
sahf
cmp
push
ss
pop
jne
cmp
fst
loope
mov
sub
push
in
mov
aad
push
adc
test
pushf
and
lock
and
pop
xchg
call
add
hlt
pop
sub
pushf
mov
rol
pop
sbb
adc
mov
sbb
lds
cmps
sub
loop
mov
xor
bnd
imul
push
and
sbb
adc
dec
and
adc
fmul
sbb
adc
mul
jl
mov
sahf
and
xor
mov
cmp
cmp
(bad)
push
cdq
xchg
into
cmp
jae
ins
push
fs
rol
aam
int3
or
cmp
mov
stos
or
mov
push
jae
test
sub
std
jbe
jmp
rol
cli
push
sbb
iret
repz
cmp
jle
out
ds
jnp
rcl
push
ret
(bad)
jnp
out
imul
cmp
push
sahf
div
inc
jg
ins
xchg
sar
push
mov
dec
mov
mov
inc
adc
les
mov
and
imul
in
add
push
lea
adc
push
arpl
bound
fninit
push
mov
pop
cmp
fldz
inc
cs
push
push
int3
cdq
pop
mov
mov
and
cli
sbb
addr16
out
sbb
shl
int
mov
outs
mov
inc
call
xor
es
add
sub
inc
dec
mov
or
or
jb
pop
nop
pusha
mov
jne
inc
add
pop
mov
cmp
(bad)
push
and
clc
ins
sar
(bad)
sbb
shl
sub
enter
f2xm1
fst
mov
in
loopne
rol
pop
mov
mov
ds
clc
mov
mov
outs
xchg
(bad)
adc
and
mov
test
cs
ins
jne
mov
adc
in
cmp
shl
push
push
mov
les
lock
idiv
add
sub
add
push
imul
mov
data16
jne
sbb
pop
scas
lock
xlat
sub
cmps
push
and
mov
sbb
lock
sub
ret
stos
outs
and
and
imul
je
xchg
sub
push
dec
or
dec
hlt
retf
cmp
sub
mov
push
cs
daa
push
pusha
data16
inc
je
push
sbb
out
mov
es
inc
pop
repnz
push
sub
pusha
lods
inc
add
dec
adc
add
test
or
cdq
mov
xor
sub
sbb
arpl
pop
test
add
and
sub
movs
xor
pop
sub
adc
mov
rcr
lea
mov
or
es
sub
(bad)
out
fsubr
or
clc
ja
mov
mov
lea
int3
adc
dec
(bad)
fmul
leave
pop
dec
(bad)
push
in
adc
test
cmp
push
js
adc
xor
rcpps
pavgw
cmp
xchg
ret
push
pop
jg
je
adc
call
data16
(bad)
ror
xor
outs
jl
shl
xor
xor
add
mov
push
cmp
push
adc
inc
and
pushf
pop
or
stos
xor
int3
pusha
je
sub
outs
outs
or
je
sbb
out
push
mov
cs
mov
lock
inc
xchg
push
ret
enter
or
out
cli
in
aas
mov
pusha
retf
sbb
ret
int
sbb
in
pop
je
ds
mov
add
jo
(bad)
into
mov
or
add
ds
daa
in
pop
stos
jb
pop
mov
jmp
scas
adc
cwde
fidiv
mov
mov
out
out
and
dec
adc
xor
mov
rcl
mov
repz
push
xchg
or
adc
adc
pop
pop
hlt
add
cmp
add
int
je
aas
fwait
popa
sub
pop
test
in
or
inc
sbb
cmp
sbb
ficom
mov
popa
push
xlat
mov
jnp
sbb
sub
repz
push
ret
jbe
cmp
pop
movs
xchg
mov
popa
out
adc
adc
nop
push
pop
shl
add
push
std
ins
inc
adc
jne
inc
mov
jo
jl
mov
addr16
pop
and
pop
mov
mov
add
xchg
inc
dec
pop
je
sbb
fcom
lea
or
cmp
push
mov
xor
cmc
jl
sub
xchg
popf
cmp
push
xchg
dec
adc
add
or
aam
call
cmp
fmul
ja
popa
pusha
stos
mov
retf
loope
(bad)
in
jl
and
and
popa
add
add
cmp
push
add
pop
rcl
mov
add
dec
add
sub
mov
popa
add
pop
imul
sub
cld
mov
dec
add
enter
mov
or
jle
add
xor
add
or
scas
add
mov
cmp
mov
cmps
mov
test
cmp
lods
and
adc
jns
sub
mov
es
mov
mov
push
jae
xchg
push
or
xor
xchg
loopne
fst
push
add
bound
sub
and
mov
mov
jp
dec
popf
outs
inc
xor
rcr
dec
pop
inc
xchg
xchg
pop
jae
(bad)
mov
mov
mov
cmp
das
mov
rcr
push
pop
retf
inc
sbb
jecxz
add
sub
push
ret
or
add
push
jmp
xchg
add
mov
or
push
push
mov
sbb
(bad)
dec
stos
pop
dec
je
inc
jb
sbb
mov
ins
sbb
xor
jle
outs
imul
lock
(bad)
pop
addr16
cmc
pop
pop
pop
push
mov
mov
mov
mov
xor
cmps
test
adc
pop
outs
loopne
adc
dec
sub
push
mov
push
push
add
pushf
mov
rcr
jae
loopne
sub
ret
(bad)
mov
or
jl
sub
push
test
mov
(bad)
movs
in
push
sbb
or
jne
cli
outs
imul
jmp
movs
push
lock
mov
push
jl
lea
mov
dec
inc
and
mov
inc
add
cmp
inc
scas
jb
test
mov
cmp
pop
shl
imul
add
push
cmp
scas
loop
inc
lock
mul
xor
mov
ror
and
cmps
dec
inc
fimul
or
into
add
lods
stc
and
or
xor
xor
dec
inc
adc
push
inc
sar
jo
or
not
and
sub
pop
xchg
or
mov
adc
ret
lds
jp
sar
rcl
and
adc
pushf
push
fistp
add
imul
lds
push
xchg
sub
xchg
sbb
fist
and
xchg
lds
fisubr
xor
jge
adc
xor
jp
lods
push
shr
mov
lods
out
test
je
pop
inc
xchg
test
(bad)
pop
adc
push
jmp
(bad)
nop
ret
clc
mov
pusha
sbb
dec
xor
or
jne
repz
and
xor
sbb
rol
add
push
pop
add
xor
(bad)
xor
adc
mov
pusha
xchg
or
cmp
mov
out
jo
sbb
cld
push
mov
pop
xchg
add
ret
and
pop
outs
and
pop
jl
dec
and
push
and
jo
sub
sbb
nop
stos
inc
and
xchg
pop
inc
loopne
add
or
add
fdivrp
xchg
push
xor
inc
les
jae
inc
add
ret
adc
stos
mov
shl
inc
add
aaa
aaa
test
xlat
fimul
aad
mov
or
sbb
pop
std
add
jno
push
cmovb
mov
xor
sbb
add
(bad)
aas
or
lock
sbb
cmp
je
or
sbb
push
dec
xchg
and
add
add
mov
adc
enter
add
mov
and
inc
xchg
sbb
and
xchg
and
and
sti
ret
rol
jne
jns
shl
push
mov
pop
ret
mov
mov
(bad)
loopne
lock
and
add
cmp
ds
(bad)
and
cmp
lea
je
pop
mov
xor
inc
fld
add
mov
xor
popa
cmp
jmp
mov
dec
sbb
dec
push
or
mov
inc
push
ins
ds
xchg
push
add
jle
adc
dec
sbb
ror
mov
fmul
cs
mov
push
mov
cmps
jge
movs
(bad)
popf
xor
and
add
pop
fnstcw
scas
call
and
mov
or
or
mov
adc
cmp
lds
imul
idiv
cmp
stc
lea
sub
sbb
push
sahf
in
js
jle
xor
adc
inc
sbb
jge
mov
and
inc
(bad)
into
shl
and
jae
xor
dec
jle
or
dec
mov
sub
sub
and
push
sbb
mov
cld
push
push
push
shr
popa
or
cs
out
or
and
pop
add
xor
mov
mov
push
cmps
push
mov
or
rol
inc
or
lods
mov
in
shl
loope
push
sbb
or
add
in
push
daa
cmp
hlt
add
mov
pushf
add
push
push
sbb
mov
xchg
add
xchg
mov
inc
push
cs
rol
lahf
pusha
xchg
sub
mov
cmp
adc
inc
inc
push
aam
adc
fsubr
xor
pop
repnz
(bad)
and
imul
stc
xor
adc
rcl
mov
clc
dec
sub
pop
dec
inc
cmps
push
sahf
and
mov
rol
mov
(bad)
cld
pop
add
dec
gs
out
outs
add
leave
ins
cli
fnsave
(bad)
and
fisubr
pop
xchg
mov
xchg
iret
repz
push
push
push
ret
push
mov
adc
xchg
jnp
sub
ror
pop
ins
fidivr
es
push
push
sbb
adc
and
ret
lahf
xchg
dec
pop
out
jne
shl
les
push
jne
jg
add
sbb
rcr
aas
aaa
push
ins
push
mov
add
adc
wbinvd
popf
(bad)
ret
push
or
mov
call
add
adc
push
pushf
lods
movs
stc
aas
jp
dec
jne
test
jne
cwde
inc
loopne
cmp
aad
or
push
sbb
int
jle
dec
add
gs
xor
adc
(bad)
xchg
xchg
adc
jne
call
pusha
or
push
xchg
xchg
pop
xchg
hlt
mov
inc
outs
dec
sbb
fnstenv
jmp
sbb
jl
inc
clc
inc
rcl
cmp
idiv
ins
in
sbb
aas
rol
out
mov
pop
inc
int
out
cmps
test
mov
sub
jge
push
sub
clc
cmp
cwde
jl
add
cmp
xlat
jmp
cmp
fld1
and
(bad)
mov
mov
jo
mov
push
sub
pushf
mov
int3
gs
call
or
pusha
cmp
push
scas
icebp
inc
in
retf
ret
and
or
nop
mov
sbb
and
push
sbb
mov
push
mov
ficomp
push
clc
push
adc
xor
clc
xor
inc
adc
fld
mov
jo
rol
push
or
and
and
push
pop
dec
xor
ret
inc
mov
xchg
pop
sbb
sub
ror
adc
add
movs
shr
mov
mov
adc
(bad)
bound
repz
dec
mov
sub
sub
cld
xchg
mov
xchg
sub
and
pusha
mov
mov
xchg
ss
push
daa
mov
mov
cmps
test
pop
and
sbb
add
in
(bad)
inc
push
aam
cs
shld
or
inc
sbb
lock
jle
imul
or
mov
push
add
or
lods
pop
test
ss
jne
add
or
cmp
fdivr
dec
sub
xchg
inc
add
mov
call
inc
outs
mov
add
push
sbb
xchg
adc
pushf
add
adc
call
aaa
loop
mov
adc
sub
fld
adc
(bad)
out
push
sbb
push
imul
push
xchg
and
jno
push
das
push
pop
dec
movs
leave
repnz
xchg
sahf
fld
add
cmp
cmp
dec
jne
mov
scas
add
cmp
(bad)
mov
or
pop
push
push
push
icebp
mov
inc
in
sti
sbb
push
ds
outs
icebp
movs
push
or
and
lods
xor
add
mov
cdq
mov
push
jg
movs
xchg
lahf
mov
ins
inc
pop
push
mov
gs
push
je
loop
mov
test
cmp
popa
je
or
pusha
mov
mov
jbe
shl
inc
dec
popf
push
lods
(bad)
sbb
loopne
jo
lods
cmps
or
sub
push
add
pop
mov
loop
inc
add
mov
add
push
adc
add
aam
jno
mov
mov
mov
pop
je
pop
pop
cmps
retf
xchg
rep
mov
sub
jmp
cmps
loopne
add
in
(bad)
enter
push
bnd
jne
jmp
or
or
or
add
jns
loopne
lods
add
imul
fisttp
xchg
rcl
adc
inc
cmps
push
xchg
add
out
sahf
adc
and
mov
jecxz
ins
scas
or
dec
adc
sbb
add
cmps
adc
(bad)
inc
xor
ins
dec
shl
sbb
retf
jle
and
test
push
jne
push
push
jb
pop
test
pop
adc
aam
cmp
add
les
or
stc
mov
int3
inc
push
xchg
xchg
and
jnp
aas
daa
push
or
adc
fmul
test
mov
cmp
and
add
push
sbb
mov
xchg
push
mov
inc
je
fcomp
ret
out
cmp
loop
mov
push
or
push
push
je
push
xchg
push
sbb
xor
inc
jo
pop
fs
or
mov
push
sbb
mov
js
jae
mov
aaa
pop
out
sbb
dec
mov
inc
pop
test
or
push
fs
xor
pop
sbb
xchg
popa
mov
inc
das
daa
test
mov
into
xchg
xlat
jl
and
inc
cmp
ds
xor
inc
daa
xor
call
sbb
or
push
adc
shl
imul
pop
rcl
push
mov
pusha
ret
call
sbb
and
mov
or
xchg
hlt
fst
add
push
shr
add
dec
or
sub
dec
jl
adc
rol
pop
pop
cmp
fisttp
cli
in
push
and
js
arpl
mov
or
inc
sub
and
xor
imul
out
fisub
or
jge
inc
mov
mov
sub
or
nop
xchg
or
mov
fisttp
mov
je
cmp
rol
test
fimul
scas
stc
push
repnz
orps
xchg
dec
mov
out
test
xlat
xor
xor
fxch
popf
lock
xchg
cmps
mov
movs
push
adc
jb
mov
mov
jle
sbb
xchg
and
xor
es
inc
mov
pusha
sbb
(bad)
sti
arpl
out
fstp
data16
or
mov
lds
inc
mov
pushf
and
add
in
dec
hlt
mov
out
hlt
jle
add
jl
inc
or
mov
imul
push
inc
je
inc
je
mov
mov
movsx
push
daa
adc
push
sbb
push
jg
shr
je
(bad)
lock
and
call
ror
inc
jnp
pop
cmp
dec
add
mov
adc
inc
test
mov
pop
and
mov
jo
ins
and
inc
aam
fsub
jmp
cs
(bad)
mov
mov
stos
sti
ror
add
sbb
add
test
sbb
call
lds
je
jp
inc
ret
or
scas
cmp
fadd
sbb
pop
or
push
in
inc
outs
jg
ficom
adc
test
mov
leave
enter
pop
stos
push
lock
mov
push
mov
cmp
or
cdq
int
adc
mov
mov
sbb
mov
pop
add
mov
jle
shl
add
ss
push
stos
pop
je
adc
jmp
and
lods
jmp
je
add
add
mov
outs
ret
gs
add
and
pop
cmc
sbb
jb
xchg
jno
jb
je
pop
lock
hlt
inc
add
int
dec
push
mov
mov
mov
push
sub
push
sub
or
lock
cli
shl
lea
and
loopne
ja
adc
mov
push
sbb
add
mov
sahf
mov
xlat
out
js
add
xchg
mov
xchg
inc
inc
pop
clc
call
or
and
mov
push
push
xchg
dec
loopne
in
dec
mov
and
js
or
or
dec
test
or
and
add
int
iret
in
test
les
jno
push
sahf
push
and
xor
movs
mov
je
cmp
pop
data16
sub
jl
xor
jmp
add
mov
pusha
ins
stos
add
dec
mov
aaa
out
jne
jmp
ficom
into
sub
pop
mov
inc
inc
in
repz
mov
xchg
ins
std
cmp
push
adc
inc
ss
sub
add
ret
add
xor
push
fisub
add
xor
adc
sbb
or
adc
lea
je
cmps
rcr
inc
or
jle
xchg
inc
pusha
(bad)
dec
rcr
sub
les
cs
sti
scas
and
pxor
(bad)
add
push
pop
cmp
pop
les
inc
push
xor
bound
sub
movs
pop
adc
enter
mov
cmp
and
mov
add
add
pusha
xchg
lahf
push
add
add
setns
mov
or
mov
xchg
or
adc
arpl
sub
dec
das
push
leave
and
cs
xchg
dec
dec
dec
or
aaa
out
call
rol
add
adc
jne
(bad)
push
and
lea
or
inc
mov
inc
push
sbb
icebp
and
test
sbb
add
fdiv
ret
cmp
(bad)
mov
add
mov
dec
into
inc
jle
leave
inc
mov
xchg
push
mov
adc
dec
add
mov
(bad)
imul
inc
pusha
pop
lea
pop
mov
sub
mov
xor
in
push
push
mov
cld
imul
loopne
mov
mov
inc
jmp
cmps
jg
test
sbb
ja
or
(bad)
cmp
ss
xor
inc
add
push
push
(bad)
cmp
or
add
mov
jne
pop
pop
inc
inc
push
das
xor
je
rol
fst
push
adc
ret
cmp
dec
inc
push
lock
cli
push
test
clc
shl
ficom
adc
push
push
inc
dec
outs
cmp
push
das
push
aaa
sub
dec
push
dec
adc
clc
jmp
or
jg
sbb
and
mov
sbb
fs
pop
add
cmps
xchg
xor
pusha
and
pusha
cwde
(bad)
xor
xor
hlt
ins
or
and
ret
inc
jns
(bad)
inc
and
add
and
jae
push
fwait
aaa
pop
leave
rol
repz
and
jl
mov
dec
lea
dec
mov
or
enter
inc
je
inc
add
ret
jne
cmps
mov
xchg
dec
add
repz
ret
xor
sub
sbb
xchg
jle
jae
xor
add
enter
movs
push
or
push
and
jo
push
adc
ret
mov
je
movs
push
je
add
les
test
je
inc
cmps
ficom
jle
enter
or
outs
adc
adc
mov
cmp
cwde
dec
in
mov
add
out
test
aaa
lea
adc
mov
es
or
push
inc
push
mov
inc
test
jmp
out
push
adc
add
or
lea
mov
sub
cmp
jmp
fimul
mov
add
xor
add
cmp
add
mov
inc
inc
ins
mov
inc
mov
push
add
adc
jecxz
retf
mov
fs
mov
push
cmp
pusha
loop
pop
or
sar
mov
std
push
push
je
inc
cmp
xor
add
push
adc
pop
test
dec
aaa
mov
mov
jne
mov
fadd
and
xor
mov
lds
mov
shl
xor
adc
out
xor
dec
inc
cli
add
lea
ja
push
add
add
les
add
push
jo
test
retf
clc
fnstcw
xchg
inc
cdq
xchg
lods
lahf
adc
mov
mov
enter
dec
fld
movs
push
data16
add
gs
dec
adc
movs
jnp
mov
test
in
cmp
push
fdivr
jae
inc
mov
lds
adc
stos
inc
(bad)
mov
pop
sar
push
loop
sbb
movzx
push
sub
popa
sub
push
push
push
or
imul
push
cmps
sbb
cmp
js
repz
or
dec
push
push
sbb
daa
je
cmp
mov
(bad)
fst
ja
mov
push
stos
nop
shr
or
rcr
push
sub
repnz
push
jnp
popa
cmp
mov
shl
or
adc
shl
and
cmc
mov
sbb
mov
pop
fnstcw
shl
inc
mov
add
dec
outs
cmp
add
push
inc
adc
inc
cmp
pop
fild
adc
and
mov
add
cmp
ja
inc
inc
push
cmp
jnp
sub
jne
scas
fimul
pop
sub
pusha
scas
cmp
sub
add
jne
cmp
cvtps2pd
and
mov
int3
cmp
sub
fadd
or
inc
arpl
xchg
test
outs
cld
xchg
and
xchg
push
cwde
std
mov
fstp
sub
mov
jl
or
dec
cmp
movups
push
cld
(bad)
nop
push
add
xchg
cmps
ss
push
cmp
or
icebp
mov
add
jae
mov
pop
fist
add
repz
push
test
jmp
(bad)
jo
dec
add
mov
or
and
clc
xor
mov
outs
loop
movs
fs
or
imul
shr
fs
dec
rcl
or
xor
or
adc
mov
pop
sbb
lods
arpl
movs
pop
stos
hlt
dec
or
mov
mov
fadd
out
gs
mov
lea
out
mov
test
push
xor
imul
bound
adc
cmp
xchg
xor
ds
pop
scas
mov
xor
imul
dec
xor
dec
pop
sbb
push
cmp
jle
ins
xchg
adc
push
dec
stc
xchg
sbb
retf
mov
push
cli
js
shl
call
adc
dec
push
in
xchg
iret
adc
lds
adc
mov
les
sbb
jecxz
mov
mov
out
je
add
js
xacquire
pop
inc
popf
int3
push
lods
pop
push
test
sti
pop
adc
mov
mov
mov
lock
push
jo
push
movs
adc
inc
mov
movs
pusha
add
arpl
lock
and
cmp
hlt
test
inc
pop
add
xchg
jne
push
sub
test
sbb
adc
popa
mov
jbe
dec
cmp
sbb
jle
pusha
ins
daa
or
lock
push
ficomp
push
push
cmp
fidivr
jno
cmp
dec
and
or
hlt
jle
sti
ficomp
adc
cs
data16
mov
add
adc
xor
inc
mov
add
or
dec
shl
jo
adc
sbb
cmp
mov
pop
sbb
fidivr
mov
mov
js
jnp
push
and
lods
nop
icebp
xchg
or
hlt
lock
daa
add
test
push
add
mov
ins
jo
push
loope
mov
repnz
fbld
or
cmc
dec
sub
mov
cmp
jb
loop
call
les
push
ins
clc
lock
pop
add
bound
mov
ins
retf
pop
int
movs
in
cmp
dec
outs
mov
add
xor
mov
retf
pop
cmp
out
(bad)
aam
or
mov
jl
cmps
adc
sub
sub
sub
mov
cmp
in
push
(bad)
push
cmp
and
movs
inc
xor
ins
movs
xchg
cmp
sub
pushf
xor
dec
adc
je
xchg
inc
lock
xlat
xor
mov
mov
mov
push
or
gs
xchg
and
rol
mov
lods
dec
sbb
pop
into
add
or
pushf
or
pop
test
lahf
mov
je
add
sub
push
outs
add
mov
jne
adc
dec
sub
push
pop
or
stos
mov
inc
lods
add
jo
cld
fnsave
sbb
inc
sub
mov
aam
pusha
push
rol
push
sbb
cmp
pop
inc
xor
(bad)
mov
sbb
test
or
or
mov
ror
sbb
test
xchg
dec
sbb
pushf
adc
dec
add
movs
dec
mov
cmps
jno
dec
mov
mov
or
push
mov
scas
inc
bound
and
mov
nop
mov
sub
or
jb
pop
inc
or
pop
and
fild
and
cld
mov
xchg
test
jge
bound
repz
inc
cmp
inc
push
daa
cmp
jl
clc
push
nop
imul
mov
push
push
es
lods
or
inc
inc
lahf
in
fcmovu
cmp
sub
jo
or
and
and
mov
adc
xor
and
les
lock
ins
push
push
adc
outs
daa
xchg
jne
push
jne
inc
enter
into
scas
pushf
adc
push
xor
add
and
gs
push
in
jne
add
aaa
sbb
out
push
pushf
arpl
addr16
push
jmp
inc
inc
lahf
fcmovnbe
xor
sbb
sub
adc
ss
adc
mov
mov
adc
or
mov
xchg
mov
call
and
div
out
mov
push
push
mov
ins
sbb
mov
js
jl
jnp
jne
lods
xlat
adc
pop
ds
addr16
sub
or
cmp
scas
jae
adc
inc
push
cmp
shr
popf
loopne
pop
xlat
fild
adc
mov
and
(bad)
fst
mov
push
mov
inc
push
cmp
sahf
xchg
jo
jo
inc
sbb
add
push
pop
pop
inc
sub
push
aad
or
repz
cmp
sbb
xchg
adc
or
push
push
rcr
mov
cs
cmp
jp
(bad)
adc
dec
jae
push
int
pop
loopne
jl
daa
and
push
pop
jmp
xchg
and
jle
inc
mov
pop
js
and
test
sub
push
dec
mov
test
or
sbb
jp
adc
mov
add
jns
fs
loope
xor
sub
js
jl
hlt
push
jle
fsub
mov
xor
mov
inc
jbe
cmp
mov
push
add
or
or
pop
xor
dec
mov
cmp
data16
mov
rcl
bswap
ficomp
sub
dec
and
xchg
jne
sbb
mov
pushf
pshufw
inc
cmps
jg
push
lock
in
add
fimul
add
push
push
jmp
pop
push
scas
into
xchg
(bad)
jmp
add
jmp
dec
and
(bad)
ss
xor
mov
jl
add
add
sbb
je
jmp
jl
es
rcl
stc
xor
shl
bound
dec
pop
pop
cmp
das
ds
xor
call
retf
dec
add
cmp
cli
scas
popf
add
pop
jg
cwde
or
icebp
loope
pop
lsl
(bad)
xor
cmp
add
jmp
push
push
or
cmp
cwde
xchg
mov
xor
lds
int
movs
push
mov
call
lds
jbe
add
or
add
push
ror
retf
push
stos
int
sti
jle
xor
add
lea
sbb
add
pushf
mov
inc
xchg
jl
cwde
sub
mov
int3
cmp
imul
pop
xchg
repz
rcr
xchg
repz
xchg
adc
sub
dec
nop
cmp
retf
push
adc
test
xor
icebp
dec
cmp
cmps
mov
pushf
or
and
pop
cmp
sbb
cmp
or
dec
xchg
push
(bad)
cld
cmp
leave
sbb
and
adc
jb
mov
mov
mov
arpl
pop
inc
add
adc
sub
pop
mov
cwde
in
test
inc
xchg
inc
(bad)
jmp
and
dec
sbb
mov
or
sbb
leave
dec
outs
fcom
call
pop
sbb
cmp
push
and
jns
test
fldcw
sbb
mov
cli
nop
inc
or
cwde
xchg
repz
pop
movs
cmp
mov
inc
dec
xor
hlt
pop
loope
ss
es
inc
xor
add
dec
dec
lock
or
cmp
inc
xchg
pusha
adc
enter
jmp
fs
shl
and
lea
ins
add
cmp
jb
sahf
pop
pop
hlt
mov
jo
and
mov
adc
loop
dec
test
jmp
adc
aaa
push
push
mov
cmp
xchg
repz
sub
sbb
lahf
ret
add
(bad)
or
les
jnp
pop
cmp
add
and
jne
int
or
pop
mov
rol
rol
outs
enter
add
mov
cmp
mov
pmaxsw
cs
or
add
(bad)
sub
fsubr
cmp
and
dec
shr
cs
aam
movs
or
sub
(bad)
sub
or
mov
sub
and
sub
je
and
sub
adc
add
popf
push
xor
jne
add
sbb
sbb
and
push
jmp
icebp
ret
dec
aam
loope
out
icebp
imul
jl
pop
pushf
outs
aam
xor
sbb
data16
adc
mov
xchg
sub
xchg
or
mov
jo
xor
and
pusha
scas
jne
fisubr
push
jle
sub
dec
pop
dec
shl
sub
and
pop
xor
clc
in
dec
hlt
push
push
or
lods
ror
adc
rcr
add
mov
xor
adc
mov
(bad)
xor
mov
fs
ror
lea
xor
sbb
fidiv
sbb
cwde
ffreep
nop
je
shl
xor
aas
ins
(bad)
and
leave
or
and
inc
jecxz
jmp
cmp
(bad)
repnz
mov
mov
mov
ins
outs
xor
sbb
fbld
sub
cmp
push
popa
stos
dec
inc
mov
aas
inc
fwait
das
mov
popf
sub
push
jne
cs
ror
mov
push
sub
add
fs
mov
and
or
or
sub
sub
sbb
add
adc
sub
xchg
push
pushf
aad
ficomp
add
cmp
sbb
ja
or
and
add
jp
iret
aaa
and
sbb
fld1
test
sub
adc
dec
push
lea
mov
mov
inc
adc
sub
push
dec
mov
add
mov
or
sub
and
dec
inc
sbb
push
lods
cmp
or
ror
sbb
inc
push
sbb
lods
jle
and
dec
ja
mov
or
or
aaa
sbb
cmp
pop
clc
js
test
add
bound
(bad)
pmaxub
mov
fsubr
out
scas
or
je
mov
push
(bad)
fcom
cmps
or
scas
and
mov
cwde
inc
inc
fst
aad
or
es
mov
or
in
or
pop
cmp
fld
cmp
xchg
movs
add
cmp
lods
lds
or
shl
dec
mov
inc
adc
pusha
sub
xchg
pop
add
add
loope
mov
sbb
inc
inc
or
fnstcw
adc
fwait
jmp
jg
pop
sub
push
and
lahf
add
jno
fistp
jb
add
pop
pop
dec
dec
cli
dec
call
push
mov
pop
xchg
xlat
and
adc
or
dec
push
adc
inc
add
inc
fmul
mov
fadd
mov
add
stos
mov
jnp
sbb
add
scas
(bad)
add
movs
sahf
xchg
fadd
jle
dec
sub
jnp
es
push
rcr
or
xor
js
nop
pop
(bad)
jmp
dec
test
dec
mov
inc
test
add
es
mov
add
push
jmp
ins
mov
retf
sub
fnstenv
push
in
push
push
sub
cld
pop
ja
rcr
jb
shr
(bad)
dec
test
sbb
dec
add
jne
in
sbb
adc
jl
xchg
add
fadd
out
ret
leave
cld
(bad)
and
das
mov
call
jne
hlt
and
push
mov
and
fsub
jbe
icebp
xchg
fiadd
sub
push
data16
call
je
xor
add
add
jmp
push
in
xor
mov
or
inc
cs
sub
loopne
in
rcr
sbb
push
or
jae
daa
clc
add
push
or
sbb
inc
cmp
lock
or
add
rcl
add
mov
add
push
outs
fsub
and
ret
test
retf
(bad)
shl
mov
push
jg
int3
test
retf
mov
mov
jo
repnz
adc
in
push
sbb
and
mov
mov
adc
cld
mov
jecxz
call
pop
xcrypt-ecb
cmps
retf
pop
in
xchg
out
imul
dec
xor
mov
inc
ficom
mov
push
inc
push
outs
add
cmps
fdiv
pop
jl
push
mov
adc
or
sahf
(bad)
(bad)
or
cld
mov
sahf
fist
outs
ins
xchg
push
fsubr
mov
push
pop
lods
imul
ret
pop
pop
icebp
jae
mov
adc
lock
and
push
add
sbb
add
ret
adc
sbb
pop
dec
enter
mov
push
(bad)
pop
or
lock
mov
mov
out
outs
ja
sbb
mov
ret
sbb
and
pusha
les
les
jno
mov
call
cmp
mov
push
mov
(bad)
mov
std
je
sbb
add
and
(bad)
push
xor
inc
jg
lea
push
jnp
lods
ret
mov
sbb
outs
hlt
jge
add
cld
sbb
inc
mov
or
mov
sahf
adc
pop
adc
and
jmp
cmp
jo
test
push
xchg
or
push
dec
jo
mov
inc
add
hlt
mov
dec
mov
sbb
jo
mov
loopne
jg
push
adc
inc
lea
and
(bad)
mov
sub
jb
test
and
das
nop
repz
out
(bad)
cmps
mov
lods
lods
mov
test
lahf
aam
jg
push
push
mov
addr16
pop
mov
iret
nop
or
mov
jle
add
lea
dec
arpl
sub
mov
cmp
test
jbe
int
hlt
shl
jbe
or
icebp
jmp
pop
sbb
or
adc
push
or
jmp
jl
adc
add
jge
clc
iret
adc
dec
or
loop
dec
dec
pusha
mov
scas
fsubr
add
loopne
add
ins
cmp
push
sahf
popf
push
mov
rol
movs
jns
test
in
sahf
mov
aaa
push
xchg
dec
or
adc
in
out
popa
(bad)
test
xchg
cmp
dec
lds
and
dec
xchg
xchg
xchg
mov
pop
cwde
xor
(bad)
call
out
loopne
movs
jmp
es
fwait
inc
pop
push
inc
add
add
push
fsubr
jge
loope
add
retf
or
adc
add
leave
jmp
nop
dec
call
cmp
movs
add
out
in
popf
add
and
mov
or
cmp
hlt
cmp
mov
cmp
push
(bad)
retf
or
pop
fcomp
lea
std
fild
test
fstp
or
fstp
push
nop
fild
jl
je
push
mov
push
das
into
cmp
hlt
sbb
cmc
pushf
add
add
ins
jmp
stc
mov
jecxz
add
leave
rcl
sbb
hlt
ret
aad
popa
fstp
test
jge
lods
cs
push
mov
out
add
nop
imul
loopne
pop
jmp
ja
push
out
pop
or
fwait
ret
shl
jmp
lea
pop
add
add
sub
push
sub
fcom
bound
adc
inc
xor
mov
adc
push
pop
adc
jbe
ja
shl
in
sub
sub
std
fadd
mov
pop
lahf
jbe
movs
mov
data16
nop
enter
sbb
xchg
adc
adc
mov
adc
test
mov
mov
sbb
(bad)
je
sar
retf
mov
mov
mov
popf
adc
jnp
cdq
or
stos
sub
jmp
push
push
jl
push
push
xlat
in
ficom
mov
sub
in
add
je
sbb
inc
dec
je
sbb
je
ss
jecxz
dec
mov
stos
dec
sub
push
hlt
pmaddwd
inc
xor
scas
xor
and
xchg
sub
aaa
cwde
xor
push
mov
cmp
jnp
call
or
mov
xchg
sti
ds
mov
imul
push
add
push
pop
(bad)
xchg
jo
shr
or
sbb
jp
dec
js
or
fsub
adc
xor
add
rdpmc
jge
imul
loopne
aas
scas
cmp
cld
jle
cmps
xchg
shl
push
add
call
xor
jne
dec
or
inc
cs
cmp
mov
xor
jl
les
jmp
lahf
add
test
fild
cld
push
sub
ins
mov
jl
scas
pop
shl
xor
or
fcomp
fnstsw
inc
sbb
pop
fstp
add
stc
push
fsub
iret
pusha
add
cmp
inc
sbb
icebp
jmp
or
icebp
add
xchg
fdivr
fisubr
pop
and
sbb
adc
push
fadd
clc
ds
cli
cld
loopne
mov
dec
sbb
and
rcr
sahf
in
sub
pop
das
mov
cmp
shl
mov
xor
or
pop
sbb
mov
cmps
jbe
retf
and
test
and
jns
jg
sbb
add
je
xor
movs
pop
popa
sbb
pop
pop
outs
add
sub
sub
dec
or
or
add
lock
pop
mov
leave
fxch
retf
aaa
cld
mov
push
push
cmc
push
and
ins
dec
adc
movs
loope
in
call
xor
or
push
jns
sbb
pop
sbb
test
imul
push
dec
push
jne
xchg
mov
cs
add
dec
add
push
call
cmp
repnz
adc
adc
into
mov
pop
in
add
sti
sub
lods
pop
or
pop
pop
ret
xor
xchg
adc
jl
jmp
jb
or
cs
test
mov
xchg
retf
in
js
add
mov
xchg
cwde
pop
cs
retf
pushf
mov
xchg
out
lea
fwait
or
movs
jae
sbb
mov
pop
mov
jmp
xchg
nop
repnz
jmp
push
xor
adc
jmp
mov
push
inc
cmp
jge
clc
mov
in
xor
aas
and
mov
mov
test
push
and
shl
mov
fucomi
pop
dec
add
dec
or
jbe
jg
dec
fimul
or
adc
fnstenv
mov
sar
mov
ja
ss
js
jge
xor
leave
lds
push
gs
pusha
fstp
(bad)
fadd
sbb
je
jle
push
or
sti
movs
mov
push
daa
ret
cmp
pushf
in
std
mov
shl
or
jmp
add
jmp
ror
test
bnd
cld
jmp
jl
mov
adc
jl
sti
pop
or
sbb
and
push
pop
sub
adc
call
pop
out
xor
inc
cmp
jb
cmp
sbb
mov
add
sar
daa
mov
or
lock
and
repz
pop
xor
xchg
out
push
push
sub
and
sbb
xchg
push
lock
push
addr16
sub
xchg
adc
je
adc
add
inc
add
push
shl
dec
nop
adc
sub
inc
mov
test
push
popa
jl
out
and
es
push
inc
mov
inc
stc
add
sub
add
es
sar
or
cmp
jne
test
fist
lahf
push
sahf
push
inc
inc
xchg
jle
jnp
mov
rcr
rcr
or
and
cmps
adc
cmp
outs
call
icebp
add
mov
nop
mov
mov
je
mov
inc
jo
imul
imul
je
ror
pop
lea
test
das
pushw
xor
cmp
adc
push
jle
sbb
or
prefetcht1
mov
cmps
icebp
sar
sbb
xor
and
adc
mov
inc
mov
cmp
inc
sub
cmp
xchg
jge
inc
sub
sub
loopne
mov
sti
and
leave
ins
add
(bad)
imul
adc
jge
mov
pop
in
mov
(bad)
xor
lea
test
cdq
inc
mov
and
test
xchg
push
shl
cli
mov
push
cmp
jg
sub
outs
call
adc
inc
inc
stc
bnd
addr16
xor
pop
test
push
or
jl
cmp
jg
cmp
jge
sbb
sti
dec
sbb
or
add
push
inc
icebp
push
fmul
and
cmp
jne
inc
mov
pop
rcl
push
xchg
and
xor
push
sub
xor
jne
pop
mov
cmp
fimul
or
or
lods
adc
cdq
retf
mov
icebp
jg
xchg
loop
sub
cmp
pushf
(bad)
aad
or
add
mov
jmp
jmp
inc
mov
push
jne
hlt
cmp
or
and
mov
push
add
adc
push
cli
mov
and
cmp
jne
inc
je
adc
sbb
or
bound
add
push
ins
xchg
adc
xlat
je
push
or
mov
pop
jne
inc
stc
xor
movs
loopne
jg
je
aaa
mov
adc
or
and
jne
das
xchg
sbb
xor
push
mov
sbb
and
mov
add
inc
jmp
in
ins
inc
lea
mov
test
jle
pusha
jg
es
cmp
cmp
inc
mov
dec
add
dec
rol
cmp
push
inc
test
sbb
ss
xchg
pop
rcl
fisub
mov
dec
ret
jg
cwde
loope
push
jg
or
shl
pop
fidiv
aad
adc
mov
or
fs
add
lock
ins
mov
pop
adc
sub
mov
mov
add
loopne
jle
inc
clc
test
aas
cwde
sub
mov
cli
nop
and
imul
cmp
je
cld
popf
imul
xchg
lea
aas
inc
mov
cmp
aaa
inc
dec
in
sahf
inc
add
or
lock
dec
dec
pop
int
cmp
mov
mov
xchg
sbb
or
add
adc
test
shl
xchg
or
ins
aam
xor
adc
fild
stos
ins
loop
and
jb
cmp
jbe
jbe
mov
inc
jbe
cmp
ja
fs
add
shl
push
stos
adc
push
stos
mov
jns
jp
ud2
xor
add
scas
scas
stos
push
call
jl
add
push
push
add
add
add
push
and
jmp
inc
dec
jne
inc
adc
cmps
sbb
pop
jne
add
addr16
daa
cmp
or
in
xchg
or
push
call
or
jle
sbb
and
int
push
int3
shl
aas
enter
retf
lock
ficom
jmp
dec
dec
je
jmp
into
lods
leave
fadd
cmp
inc
push
out
adc
sub
es
ins
dec
sub
movs
push
cmp
or
je
dec
xor
mov
cmp
(bad)
ror
and
sahf
inc
and
or
jp
jbe
inc
jbe
push
sbb
jo
push
rcr
push
push
add
call
jmp
fs
sub
pop
test
sub
cli
pop
bnd
rol
daa
dec
mov
sbb
jbe
mov
add
out
pop
sbb
(bad)
push
push
out
enter
jo
mov
lock
sbb
ret
or
imul
push
pop
push
dec
add
loope
dec
jns
add
out
fidivr
pop
or
add
xor
sbb
pop
add
adc
pop
movs
paddd
sub
jmp
fcmovnu
jo
push
popa
or
adc
pop
add
(bad)
ja
enter
test
jne
xchg
retf
add
pop
sub
rcr
outs
(bad)
clc
pop
push
cmp
jne
or
push
dec
inc
xchg
and
loope
out
ds
mov
and
sbb
jbe
dec
adc
daa
cmps
jo
jg
dec
add
ja
jae
lea
mov
xchg
ins
fdiv
mov
cmps
mov
xor
jmp
or
scas
sbb
sar
add
pusha
push
add
and
pop
push
out
cld
sbb
mov
dec
call
or
xor
mov
inc
push
ds
fwait
cli
call
sub
inc
sar
mov
sub
inc
add
sub
dec
add
sar
mov
nop
jno
mov
sub
mov
sub
mov
push
push
add
inc
add
adc
mov
jge
cmp
sbb
and
xchg
push
test
inc
xchg
add
adc
call
cmp
das
mov
or
aaa
and
ror
mov
cwde
push
jnp
cmps
test
movs
inc
bound
mov
mov
inc
bound
and
sub
sbb
repz
sub
lock
out
dec
push
push
push
push
push
jge
inc
add
ficomp
dec
and
sbb
ds
cs
cmp
scas
inc
mov
(bad)
je
dec
test
push
jne
pop
sub
(bad)
sub
cmps
add
pop
arpl
call
sub
std
sbb
fcmovbe
jecxz
inc
adc
mov
aas
shl
dec
or
das
inc
push
popf
repnz
cmp
xchg
aas
repnz
je
cmp
ret
cmp
shl
xor
mov
or
mov
jae
jg
and
mov
add
add
sbb
dec
je
dec
jne
jg
push
push
cmps
dec
(bad)
mov
add
sub
sbb
mov
(bad)
and
enter
or
(bad)
in
jnp
jne
push
loop
lahf
(bad)
dec
pop
sbb
sbb
loopne
fstp
cmp
jmp
movs
mov
pushf
das
add
mov
test
cmp
fld
xchg
mul
xchg
xor
fisub
pop
or
fidivr
mov
push
xor
stos
cmps
icebp
and
push
jo
pop
hlt
hlt
inc
mov
inc
mov
dec
into
outs
cmp
(bad)
cmp
adc
adc
xchg
shl
loop
ficom
fidivr
fs
or
sub
jle
adc
test
arpl
aas
inc
ror
stos
pop
or
pop
enter
jl
xchg
(bad)
and
mov
mov
jg
shr
clc
xor
lsl
mov
(bad)
das
dec
sub
in
inc
out
rcl
mov
inc
(bad)
mov
adc
mov
cmps
popf
mov
push
sbb
or
mov
je
jb
std
(bad)
jmp
cmp
repz
sub
jl
je
add
mov
xchg
or
icebp
sti
or
inc
add
or
stc
es
push
mov
cmp
loope
sub
add
xchg
inc
es
jp
sbb
dec
and
mov
call
cmp
scas
and
push
aad
js
pop
mov
or
add
fadd
xor
shl
or
dec
adc
jmp
out
sbb
mov
push
add
push
daa
mov
and
adc
mov
jne
les
ins
xor
cmp
shl
push
xor
xor
xchg
jo
xor
fcom
rol
pop
dec
add
sub
sbb
push
push
jb
data16
or
mov
dec
fsub
cmp
cmp
dec
jne
sub
push
rcr
sub
pop
out
adc
sbb
push
add
mov
xlat
xlat
push
loopne
adc
add
mov
mov
je
cdq
push
sbb
pop
and
jo
cmp
or
ffreep
aam
cmp
inc
and
xchg
faddp
and
mov
(bad)
(bad)
push
movs
or
in
dec
or
neg
jge
adc
inc
xchg
mov
js
xchg
test
fcmovne
in
sub
sub
je
(bad)
jnp
or
pop
mov
inc
and
adc
retf
mov
je
dec
fdiv
jl
xor
div
or
cmp
jecxz
fidivr
jne
xor
mov
adc
jae
xchg
xor
xchg
jae
hlt
(bad)
fwait
mov
les
(bad)
jmp
sbb
gs
sbb
je
add
adc
push
jo
xor
int3
shr
inc
add
or
data16
(bad)
pushf
add
rol
jo
in
cmps
jne
adc
test
dec
add
push
pusha
jmp
xchg
sbb
add
and
lods
push
adc
out
pop
and
and
inc
xor
js
nop
and
daa
ins
and
pop
inc
data16
lock
iret
inc
adc
jle
sub
test
jnp
and
es
daa
mov
sub
fsubr
mov
jge
cmp
mov
ss
cmp
out
cmp
pop
movs
sbb
imul
xor
lods
mov
(bad)
fcmovb
inc
add
push
jae
and
bound
mov
sbb
add
cmp
lods
adc
addr16
pop
jp
cmp
daa
mov
cmp
test
daa
jmp
shr
sahf
cmp
inc
lods
xor
adc
sub
lods
repnz
call
add
add
loop
add
jl
sbb
add
dec
jbe
test
inc
push
rcl
xor
rol
cmp
jbe
std
sar
jle
sub
cmp
inc
test
xor
fistp
sbb
test
int
dec
cli
jg
ja
jle
fdivr
je
mov
arpl
add
push
xchg
cmp
jl
fwait
ret
aas
adc
(bad)
addr16
pop
adc
dec
add
inc
add
sub
ret
or
iret
loope
sbb
fs
sbb
inc
mov
push
mov
ins
pop
mov
fadd
(bad)
sbb
retf
push
retf
pop
inc
cmp
pop
jl
and
or
mov
fucomip
xlat
sar
loope
call
push
push
cmp
jl
sub
dec
push
lahf
add
add
xor
push
pop
xor
jo
push
pop
je
sub
jne
ret
jb
push
mov
jle
add
fadd
mov
mov
fisubr
cmp
stc
mov
pop
add
mov
fst
loopne
pop
cwde
and
sbb
push
(bad)
scas
loopne
cmp
ret
icebp
xor
lea
sub
adc
push
dec
call
sub
xor
pop
adc
push
lods
(bad)
pop
jne
jp
test
push
inc
out
push
and
adc
or
pusha
jnp
xchg
sub
and
jl
test
cmps
mov
cli
add
inc
mov
cmp
mov
jle
inc
inc
mov
pop
ins
sbb
cmp
pop
add
push
jp
cmp
or
or
pop
add
jmp
and
clc
mov
jp
cmp
push
mov
imul
or
outs
or
sbb
push
pop
mov
sbb
sub
mov
or
inc
push
dec
dec
ins
test
out
je
jae
int
inc
and
add
add
or
(bad)
call
xchg
jne
xchg
pop
outs
xor
in
outs
cmp
mov
loopne
or
adc
add
fld
das
inc
cmp
jo
push
sub
cmp
inc
xor
test
dec
dec
je
add
mov
inc
and
fild
dec
loope
shr
and
push
adc
adc
add
pushf
js
cmp
sbb
xchg
(bad)
mov
out
jmp
mov
leave
test
retf
sub
fs
ja
pcmpeqw
repnz
test
adc
sahf
cmp
je
inc
outs
jbe
scas
ds
sub
add
or
cmp
jo
and
lds
dec
add
inc
pop
sbb
jmp
imul
je
pusha
addr16
add
jmp
adc
nop
cli
call
push
ins
cmps
jg
cmp
inc
inc
mov
sub
rol
xor
clc
inc
cmp
push
sbb
xchg
add
sbb
push
ss
push
cmps
ret
pop
inc
xor
or
jl
arpl
and
shl
dec
push
push
mov
aas
mov
xchg
call
clc
sbb
sub
adc
mov
cmc
ds
sub
int
push
fild
adc
xchg
adc
sbb
pop
shl
sbb
xchg
and
pop
xor
xchg
test
inc
cmp
int
sub
retf
je
pop
or
repz
inc
je
ret
retf
sbb
sub
push
dec
cmp
push
popf
pusha
in
dec
jne
cmps
sub
jl
or
jl
js
push
sub
pop
cmp
pop
lods
push
dec
cmp
adc
jmp
or
pop
sbb
dec
push
scas
ror
add
add
cld
push
jge
mov
jbe
cmp
std
push
mov
push
xor
cwde
push
xor
mov
sub
inc
inc
cmps
or
add
mov
push
dec
ret
les
sahf
scas
inc
sbb
pop
aam
jg
gs
inc
mov
push
aaa
ss
push
les
leave
dec
loopne
jbe
lods
add
pop
sub
je
or
inc
lea
cmp
and
lahf
xchg
push
fdivr
jne
mov
ss
or
test
nop
xor
scas
mov
or
pusha
pusha
pop
push
fisub
ja
jmp
repnz
mov
xor
xor
push
pop
cmp
jmp
mov
xchg
adc
cmps
push
sub
mov
jmp
(bad)
shl
or
xchg
icebp
add
pop
push
cmp
inc
cs
ret
ins
and
adc
jo
add
dec
push
pusha
retf
mov
jb
fidivr
sub
pop
call
pop
mov
aam
mov
mov
inc
int3
or
dec
dec
in
or
or
push
hlt
mov
int3
cmp
dec
inc
inc
ja
(bad)
test
shr
and
clc
mov
and
pop
pusha
int3
push
fiadd
or
test
push
pushf
add
loope
adc
sbb
or
in
jbe
pop
xchg
stc
imul
ins
inc
retf
xchg
rcl
add
or
inc
fdivr
enter
jne
sahf
iret
mov
scas
add
sbb
xchg
xor
(bad)
sti
push
je
or
jge
cmp
je
bound
add
loopne
or
inc
rcr
or
es
rol
push
test
push
stos
int
mov
dec
and
daa
(bad)
(bad)
mov
add
movs
pop
adc
or
test
dec
call
fiadd
adc
and
mov
jl
pop
stos
hlt
jo
and
dec
mov
hlt
test
xchg
fwait
cwde
jne
les
xchg
mov
fwait
int3
add
shl
and
les
or
add
pop
ret
jno
xchg
push
mov
mov
lods
test
sbb
ss
pop
inc
mov
dec
iret
inc
call
cmp
add
adc
cmps
push
add
jo
es
sub
adc
pop
in
fwait
mov
ror
mov
sub
and
mov
add
xchg
push
dec
mov
je
cmp
sub
pop
pop
sbb
cld
sub
and
add
cmp
add
and
or
test
sar
or
test
pop
stc
mov
stos
dec
stos
push
sub
push
pop
inc
jl
and
fstp
mov
inc
mov
imul
stos
inc
shl
jge
shl
or
cmp
xchg
push
pushf
or
inc
xor
push
xchg
clc
mov
xchg
cmps
adc
add
pop
jge
div
call
cmp
aaa
je
cmp
adc
in
mov
and
pop
test
inc
outs
cmp
rcr
push
push
xchg
xor
ficom
out
mov
stos
sub
xor
and
clc
pop
jne
sbb
xor
xor
inc
add
adc
ds
test
jge
pushf
lea
rep
adc
test
rcr
ss
jo
jle
add
pop
sub
imul
and
and
ss
cdq
mov
xor
arpl
push
inc
mov
sub
mov
mov
inc
cmp
mov
push
or
pop
lods
cli
add
pop
lods
push
inc
xchg
sbb
add
dec
cmc
out
inc
xlat
inc
pop
xor
cs
loope
inc
add
or
or
bswap
ret
enter
(bad)
retf
test
or
mov
pop
cmp
adc
mov
add
and
jbe
push
fmul
aas
fsubr
aam
adc
add
mov
xor
jg
push
mov
shl
mov
shr
add
sar
(bad)
mov
mov
or
dec
jl
xor
add
bound
mov
or
dec
inc
nop
and
and
shl
daa
push
dec
call
add
movs
mov
jo
adc
and
and
adc
push
not
or
inc
(bad)
mov
dec
in
in
jmp
sub
adc
mov
or
rcr
pusha
jns
fwait
js
xlat
fist
mov
add
push
shr
or
addr16
jecxz
fimul
or
inc
and
cmps
(bad)
jmp
adc
push
jmp
retf
mov
pop
add
or
loope
pusha
sub
stc
out
push
shr
and
sbb
pop
add
inc
int3
(bad)
pop
cmps
imul
inc
and
sbb
or
or
or
mov
pop
dec
xor
das
mov
retf
int
xor
or
je
pop
loopne
sub
pusha
sbb
cmp
xchg
mov
out
or
mov
aaa
pop
pop
cmp
sub
lock
cs
cmp
in
neg
neg
clc
rol
(bad)
fstp
enter
push
out
add
sub
ret
adc
jne
pushf
into
shl
fimul
js
es
sub
push
and
mov
xchg
or
sub
daa
(bad)
jle
ret
pop
je
sbb
push
jne
inc
adc
pop
cs
jmp
pop
loope
add
enter
imul
cmp
cmp
jne
mov
xlat
pushf
jmp
sar
cli
mov
jl
pop
out
add
or
add
in
or
xchg
cmp
loope
je
push
hlt
sub
dec
dec
xor
fdiv
sbb
or
aam
push
aam
push
pusha
cld
push
or
test
test
scas
lock
adc
mov
cmp
(bad)
jo
push
lahf
adc
jle
jg
cmps
add
push
cdq
inc
pop
call
add
dec
bound
popa
pop
pop
cmp
add
add
push
pop
adc
sub
imul
repnz
jg
xor
mov
loope
or
ins
out
daa
pop
fstp
test
or
je
push
idiv
mov
loope
mov
shl
sar
push
push
mov
jl
add
pop
(bad)
icebp
inc
sahf
or
rcl
mov
in
dec
push
dec
inc
cmps
jle
xchg
scas
xor
push
nop
sub
add
test
add
jns
and
and
call
jmp
cmps
test
clc
or
test
movs
scas
xor
cmps
adc
xchg
jge
mov
xchg
sti
mov
out
je
and
dec
aad
sub
push
mov
jo
sti
test
dec
aas
and
or
(bad)
or
cmp
aas
add
jno
call
push
xor
or
mov
outs
xchg
push
pop
movs
push
not
int3
in
mov
(bad)
jl
cmps
mov
mov
inc
fmul
add
minps
adc
ds
mov
or
add
in
inc
cmps
(bad)
or
pushf
nop
and
dec
inc
inc
jmp
sub
or
inc
rcl
mov
icebp
stos
xor
repnz
je
and
or
push
sbb
add
push
jle
or
push
xor
ret
sub
inc
lea
lea
or
mov
jle
cmp
lods
rep
lea
mov
pushf
clc
test
das
mov
lock
add
add
mov
mov
stos
lods
add
mov
push
rep
pop
mov
xchg
out
pusha
dec
cmc
jmp
ds
cmps
mov
pusha
cmps
adc
jne
mov
dec
sub
test
clc
and
xor
and
add
aam
bound
int3
inc
sub
mov
ins
sub
inc
rcr
mov
add
movs
mov
add
mov
aas
cmp
enter
inc
mov
xor
dec
adc
dec
add
pop
adc
jne
sub
cmps
add
cmp
add
xor
jle
pop
ror
ins
jb
xor
repnz
les
nop
inc
fmulp
jae
sar
rcl
test
inc
or
mov
pusha
shr
cmp
dec
sub
adc
pop
add
lock
xor
jl
pop
xor
sub
sub
jne
jp
pusha
lods
sub
pop
and
ds
jecxz
ret
icebp
inc
popa
push
rcr
jge
pop
cdq
add
shr
(bad)
pop
xor
jnp
add
push
inc
adc
inc
mov
push
dec
pop
add
push
sbb
add
sbb
shl
pop
dec
dec
add
ficom
hlt
cs
pop
push
xchg
test
aaa
retf
dec
add
or
sbb
rcr
bound
inc
add
push
mov
jmp
ja
and
ret
(bad)
cmp
pop
scas
cmp
pop
gs
jae
fsubr
(bad)
popf
imul
jle
nop
aaa
push
(bad)
cld
enter
imul
ret
mov
inc
cdq
test
adc
fisub
push
jne
jb
or
or
mov
pop
mov
dec
pusha
xchg
cld
or
popf
jecxz
xchg
stc
(bad)
pop
add
pop
xor
mov
ret
rol
inc
inc
test
imul
mov
ret
dec
sbb
adc
and
sub
shl
(bad)
pop
inc
add
xchg
mov
sbb
bnd
dec
mov
adc
mov
sbb
pop
xor
out
(bad)
adc
and
inc
xchg
mov
dec
add
rcl
adc
add
add
add
jne
sbb
xor
push
dec
out
cld
bswap
inc
inc
cmp
jb
and
or
and
or
xor
cmp
ret
inc
loop
repz
les
sub
mov
dec
and
jge
mov
adc
test
jle
jne
add
stos
sti
sub
sbb
add
inc
fs
add
pusha
loop
mov
stc
and
scas
cmp
lock
sub
add
les
inc
pop
inc
mov
std
mov
mov
push
add
scas
xlat
or
jg
ficomp
dec
retf
adc
retf
and
call
mov
in
scas
jae
push
mov
add
adc
js
outs
mov
jbe
inc
adc
cmps
out
popa
sub
(bad)
cmps
inc
addr16
inc
repz
or
dec
dec
or
add
lahf
mov
inc
(bad)
or
or
movups
adc
jne
xor
fimul
xor
mov
leave
add
loop
sub
or
movs
push
les
dec
(bad)
into
push
nop
ret
jbe
xchg
inc
bound
loopne
dec
jmp
dec
pop
div
adc
push
mov
pop
xchg
mov
add
mov
add
add
cmp
fdiv
sub
xlat
je
js
js
std
rol
jo
inc
(bad)
mov
pop
inc
ret
dec
iret
mov
push
pop
pop
pop
jb
movs
ret
pop
movs
mov
popf
test
push
adc
push
add
sub
(bad)
fidiv
addr16
inc
fsub
bound
aad
lea
sar
enter
and
aas
cwde
jbe
scas
inc
cmp
mov
jmp
xchg
jl
cwde
or
lea
pop
push
int
sbb
fcomp
cmp
or
inc
mov
out
sbb
pop
mov
outs
je
xchg
push
jecxz
pop
sub
or
push
inc
mov
cdq
adc
mov
sub
dec
cld
sub
or
adc
shl
xchg
or
iret
and
leave
loope
je
pop
pop
retf
cmp
mov
shl
and
cmp
jne
mov
pop
ret
jno
ror
(bad)
cs
mov
jmp
mov
call
mov
sub
and
es
adc
mov
and
push
das
and
jmp
and
je
out
jbe
and
outs
xor
push
sub
bound
and
mov
cmp
push
push
lock
pop
lock
and
add
fdiv
call
lock
retf
or
mov
dec
push
int
in
div
jmp
scas
aas
jmp
or
jmp
cmp
aad
int
add
into
inc
cwde
sbb
inc
movs
pop
pusha
mov
adc
fcomp
out
and
nop
mov
sbb
and
pusha
jae
or
sbb
sub
cmp
sbb
sbb
jb
pop
sbb
sub
jp
add
pop
jns
and
lods
mov
out
add
hlt
jno
retf
pusha
dec
pop
push
adc
call
adc
cs
sub
pop
cs
dec
in
adc
or
cmp
dec
xchg
loopne
fs
pop
sub
leave
ret
stos
inc
mov
xor
test
push
mov
and
fcom
adc
cmps
jmp
lock
dec
push
ret
sti
jno
lea
sbb
lea
sub
ins
test
mov
jb
ss
adc
inc
and
mov
cs
mov
test
sahf
scas
or
pop
inc
cmp
push
jno
mov
xor
lds
sbb
in
or
xor
mov
sub
movs
or
in
das
dec
mov
cli
cmp
ds
pop
push
inc
jmp
mov
mov
or
sub
fdecstp
popa
jmp
movs
xor
or
jae
adc
add
xor
jecxz
test
or
add
push
sub
or
jno
push
pop
push
test
jl
cmp
paddw
fiadd
or
clc
cmp
jne
jb
sub
push
les
loopne
hlt
shl
dec
pop
fcom
lods
push
or
fist
cli
push
jp
add
hlt
dec
xchg
ss
mov
mov
(bad)
adc
jl
and
inc
call
adc
(bad)
jg
cmps
dec
inc
gs
loopne
add
pop
jbe
aad
les
xchg
ret
and
cmp
inc
adc
sub
push
add
mov
ret
or
fisubr
mov
xor
push
sub
or
inc
and
cmp
test
rol
add
or
call
outs
mov
fs
or
inc
inc
imul
push
adc
call
inc
jbe
or
aaa
xor
jge
xor
lock
adc
jp
or
xlat
pop
adc
and
pop
xchg
mov
add
dec
sub
push
sbb
sbb
pop
fs
retf
push
pusha
fimul
sub
arpl
cmp
add
ss
rol
add
push
mov
es
push
jge
sub
jp
sub
and
push
mov
shl
das
xor
fucomip
lock
xor
push
or
jecxz
adc
pop
dec
jno
push
or
xor
mov
(bad)
(bad)
test
lahf
sbb
mov
jg
je
jae
jnp
sbb
or
jle
sbb
pop
adc
and
inc
inc
adc
or
adc
pop
mov
adc
jmp
inc
add
rcl
inc
dec
je
ds
or
or
and
pop
das
paddd
and
sete
push
push
ja
jl
inc
xor
stos
mov
ror
stc
mov
xchg
push
mov
leave
inc
call
push
fcom
lea
xchg
cmp
push
xchg
cld
arpl
mov
mov
sbb
push
stos
push
in
adc
fld
mov
mov
adc
mov
rcl
ds
lahf
unpcklps
mov
add
sub
or
shr
dec
jne
test
cwde
sbb
lds
or
or
cmp
push
cmc
pop
pop
xchg
ficomp
mov
outs
push
sub
pushf
je
cmp
pop
dec
or
cmp
imul
xchg
xor
jmp
mov
outs
mov
jle
jmp
push
ret
pop
in
sbb
cmp
or
mov
cs
or
sub
cmp
imul
movs
add
mov
popf
add
push
enter
adc
add
ss
adc
ret
sub
dec
sti
add
push
push
adc
call
adc
and
or
mov
xor
mov
cmp
dec
push
mov
loope
jmp
mov
push
xchg
jmp
add
pop
add
shl
cmps
call
adc
jg
add
push
inc
push
inc
cli
rol
xchg
push
jmp
ins
jle
push
adc
data16
push
sahf
addr16
sbb
jmp
inc
push
inc
and
fild
add
push
sbb
mov
push
mov
jle
cli
fst
mov
(bad)
or
push
adc
add
push
cld
push
(bad)
js
add
call
test
lock
mov
clc
push
loope
push
lock
add
push
enter
outs
repnz
cmp
dec
or
cmp
call
scas
dec
loopne
push
mov
out
popa
icebp
sahf
test
pop
sub
lock
inc
sbb
fcomp
push
add
xchg
enter
js
adc
and
jo
or
push
fisubr
or
push
je
add
cli
push
adc
sub
jecxz
push
retf
sbb
push
je
jmp
das
test
sbb
xor
cmp
int
daa
cmc
and
ret
in
bndldx
popa
xchg
dec
mov
cwde
xchg
stos
lods
test
fwait
jmp
iret
add
mov
mov
or
inc
sbb
movs
call
(bad)
jge
cmp
adc
mov
in
or
or
push
stos
add
jno
nop
sub
sbb
or
xlat
cdq
or
sub
inc
push
jle
fdiv
inc
lahf
fstp
adc
add
push
inc
in
out
add
leave
mov
push
push
mov
pop
test
dec
pop
loope
xor
xchg
fs
adc
cmps
mov
xor
pop
and
retf
rcl
aam
sub
add
add
add
je
mov
cmps
retf
pop
mov
pop
fldcw
push
dec
push
pop
push
mov
arpl
and
ja
jg
out
inc
jl
jg
push
sbb
call
mov
add
push
mov
imul
out
adc
dec
or
rol
hlt
aaa
xor
dec
dec
push
shr
or
add
loopne
pusha
push
test
sbb
cmp
inc
mov
scas
pop
and
jmp
outs
mov
adc
jmp
or
nop
mov
mov
in
(bad)
bound
inc
loopne
loopne
pop
iret
repz
push
push
iret
repz
mov
xor
clc
pop
or
bound
dec
clc
mov
inc
push
sub
cmp
jle
mov
inc
retf
cs
and
xchg
mov
dec
and
add
test
pop
dec
inc
cmp
jne
cmps
jmp
jmp
mov
mov
sub
(bad)
sti
popf
xor
icebp
jmp
jle
adc
clc
sub
inc
xchg
add
jae
imul
and
mov
add
shl
or
cmp
xor
dec
jl
add
call
data16
into
outs
inc
ins
lea
inc
mov
mov
xchg
mov
inc
sbb
push
adc
cmp
les
test
xchg
or
mov
xchg
pop
push
jb
xchg
mov
or
or
test
push
scas
lea
push
movs
(bad)
sti
ss
or
mov
movs
sbb
or
and
je
cmp
or
je
or
add
outs
xchg
jne
je
enter
inc
add
mov
pop
and
(bad)
cmp
add
jmp
cmp
dec
aam
cmp
sub
repnz
xchg
xchg
jne
jp
push
and
adc
dec
adc
jno
test
lock
xlat
adc
fimul
wrmsr
add
pusha
inc
jbe
mov
je
lea
sub
or
sahf
pop
popa
push
test
dec
xor
lods
mov
or
loope
jne
je
add
inc
inc
cmps
loope
and
dec
cdq
mov
loopne
adc
xor
ins
retf
or
push
das
call
push
sbb
cs
movs
pop
(bad)
adc
(bad)
(bad)
adc
mov
nop
jmp
(bad)
fld
icebp
mov
mov
inc
cmp
dec
shl
(bad)
(bad)
(bad)
adc
cmp
jb
dec
mov
and
(bad)
fisttp
cmp
jmp
sub
cmp
sub
cmp
pop
mov
cmp
aas
pusha
shr
cmp
or
enter
pop
jmp
push
push
add
xor
pusha
mov
mov
call
imul
test
or
mov
mov
aad
sub
mov
ret
xchg
xchg
push
and
jge
inc
dec
movs
loope
ror
nop
push
adc
sub
push
je
xchg
mov
pop
dec
and
daa
xchg
add
(bad)
(bad)
loop
pop
and
jmp
mov
dec
add
or
pushf
cs
inc
dec
mov
clc
or
and
xchg
jo
push
rcr
fldenv
ss
rcr
adc
push
cmp
lds
retf
push
stos
push
movs
stos
popf
or
and
mov
inc
cmp
popf
outs
xchg
or
push
jp
js
pop
enter
cs
addr16
movs
dec
call
cmp
enter
or
push
push
jno
imul
inc
add
xchg
sahf
sbb
xchg
push
mov
cmc
push
add
or
dec
lods
fdiv
cmp
jl
sub
sub
adc
mov
mov
clc
ins
dec
mov
dec
mov
push
dec
lods
fidivr
sbb
je
cmp
imul
leave
cs
jmp
pushf
stos
ret
or
or
ins
pop
mov
mul
ror
add
cs
adc
call
sbb
cmps
pop
push
and
xchg
sbb
clc
loope
xchg
lea
push
push
mov
jmp
mov
push
sbb
enter
std
pop
rcr
and
into
and
(bad)
and
cmp
in
inc
scas
shl
cmc
add
out
js
fcomp
sbb
inc
hlt
fsubr
in
inc
push
push
sbb
lods
or
enter
inc
jecxz
in
push
push
jmp
cs
shl
mov
loop
mov
sbb
clc
jle
dec
jae
adc
cdq
or
push
adc
push
mov
and
xor
sbb
pushf
xchg
dec
mov
or
or
mov
pop
xchg
lock
jne
ret
popa
movs
ja
fsub
sbb
mov
in
mov
mov
jns
mov
psllw
and
cmp
leave
jbe
push
test
jmp
out
lods
jge
mov
sbb
cmps
add
loope
stc
ins
(bad)
xchg
mov
cmp
rol
or
sub
cli
ins
or
mov
rcl
inc
es
mov
repz
pop
clc
and
in
jl
call
adc
inc
cmp
or
sbb
pusha
mov
fdiv
sub
(bad)
adc
stc
push
jo
cmp
jp
or
or
les
rol
iret
pop
or
not
or
dec
fcomp
mov
mov
or
imul
add
ret
and
sub
cs
shl
out
push
or
mov
xor
xchg
xchg
or
cmp
xchg
cwde
jmp
inc
add
or
imul
cmps
test
ins
xor
(bad)
and
mov
and
sar
mov
mov
mov
test
bnd
jo
repnz
xchg
inc
cmp
xchg
mov
pop
mov
scas
add
mov
pop
pop
ret
push
inc
(bad)
in
loope
ss
sbb
push
and
mov
and
inc
lea
cli
repz
mov
xchg
cmp
and
hlt
mov
sbb
clc
push
sub
cmp
add
out
inc
out
jg
pop
push
in
or
enter
add
repz
and
mov
repz
push
dec
xor
xor
out
fcomp
xor
stos
inc
jae
add
stos
inc
dec
pop
pop
ds
stos
inc
dec
xor
in
or
repz
push
stos
gs
jb
lahf
ret
xchg
or
lahf
in
pop
inc
stc
xor
push
daa
and
out
add
sub
les
stos
jle
cmp
push
add
das
js
(bad)
xor
xchg
mov
jge
xchg
lea
cmps
and
iret
xor
add
and
shr
into
ret
pop
fcomp
adc
cmp
cmp
int3
lahf
leave
test
jge
xchg
shl
daa
push
inc
xchg
cmp
mov
or
xor
sbb
inc
movs
add
int
(bad)
add
and
bound
and
(bad)
pusha
outs
enter
jmp
dec
leave
mov
jno
popf
movs
lods
mov
pop
adc
je
mov
loopne
pop
fmul
call
call
loopne
sub
jnp
jle
inc
fadd
add
dec
and
clc
xor
xor
shl
adc
gs
es
and
nop
push
mov
push
cs
inc
mov
push
addps
arpl
sbb
inc
fmul
stc
mov
cmp
ss
sbb
pop
aas
and
or
fdivr
aam
jg
dec
jbe
fmul
adc
xchg
xchg
inc
shl
xor
out
mov
nop
add
fmul
mov
pop
jl
movs
jle
push
loopne
sub
in
dec
and
shl
or
test
jle
dec
pop
mov
adc
into
adc
mov
dec
lds
fs
xor
sub
push
push
mov
mov
xor
mov
xor
push
push
sub
jb
push
sbb
inc
cmp
xor
call
inc
mov
scas
(bad)
adc
ins
fsub
sbb
sar
lds
mov
aam
xchg
pop
jle
(bad)
adc
jno
movs
jl
dec
fadd
icebp
sahf
push
add
sub
mov
js
pusha
jb
push
or
nop
fdivr
(bad)
xchg
mov
push
mov
pop
cmp
add
loopne
lods
es
jnp
fsubr
xor
jl
data16
cmp
pusha
sbb
sbb
or
aam
mov
shr
cmp
pop
and
ror
sbb
mov
dec
and
clc
dec
push
add
mov
in
sahf
push
int
jecxz
xor
(bad)
rcr
movs
lock
add
adc
pop
lds
pushf
cmp
gs
inc
clc
jb
sbb
sub
enter
mov
sub
adc
sar
add
loopne
or
shr
and
mov
lock
inc
dec
sbb
adc
inc
sahf
add
add
shl
ins
jmp
jle
and
push
and
pop
add
add
fcomi
push
xlat
adc
ss
push
cmp
data16
jmp
sbb
pop
pop
inc
jmp
cmps
call
nop
add
inc
jae
jns
cs
shl
jmp
mov
sub
mov
pop
cmp
xor
sub
test
or
jge
cmp
loop
push
aad
add
inc
add
sbb
pop
mul
jle
push
push
inc
pop
or
xchg
inc
scas
sbb
retf
ja
sub
push
pop
sbb
(bad)
push
ret
jnp
and
sbb
mov
sub
(bad)
push
dec
add
inc
dec
dec
jle
cmp
adc
mov
ins
in
test
fimul
sub
hlt
sub
sbb
pop
xchg
jne
mov
jl
mov
mov
jb
jmp
dec
dec
sub
ins
sbb
and
mov
mov
hlt
push
popa
or
mov
cmp
cmps
pusha
add
jmp
push
pop
(bad)
jmp
cmp
adc
jae
jo
inc
inc
jo
cmp
inc
bound
test
cmps
inc
push
xchg
pop
arpl
and
mov
lea
jp
jae
popa
or
xor
xchg
mov
xchg
retf
and
sub
adc
bound
in
enter
(bad)
jmp
sbb
adc
hlt
or
inc
ins
inc
add
clc
jno
jmp
push
arpl
cmp
or
retf
ret
adc
bound
xor
pop
xchg
sbb
push
stos
add
cmp
jnp
cmp
mov
ds
movs
push
hlt
stos
xchg
pop
fnstcw
ss
push
cdq
imul
push
mov
int
dec
jmp
or
xor
or
cmp
dec
test
pop
xchg
xor
fwait
add
ja
mov
scas
jne
mov
push
es
jns
fs
pop
cmps
sbb
xchg
inc
fbld
je
daa
movs
mov
add
in
loopne
xor
outs
out
or
mov
xchg
jmp
pushf
pop
ror
stc
jl
mov
push
inc
cs
cld
clc
jbe
iret
jle
cmp
mov
sar
shl
adc
test
cmp
dec
pop
pop
jbe
xchg
lds
test
in
pop
add
repnz
in
pushf
lahf
or
rcr
jle
lea
lods
sub
push
fucomip
xchg
rol
xor
lahf
adc
out
push
mov
ds
ins
jle
fwait
jle
inc
cmp
enter
adc
int3
push
dec
imul
cmps
inc
mov
fwait
jl
nop
add
clc
clc
jb
mov
push
clc
(bad)
clc
xchg
adc
jmp
mov
mov
pop
ja
jle
(bad)
jle
pop
add
rol
sahf
iret
cmp
sbb
inc
xchg
jo
adc
dec
push
test
add
and
mov
and
add
and
out
mov
adc
dec
cmp
nop
push
leave
sub
mov
rcl
loop
mov
sub
popa
lea
mov
jbe
and
fisubr
or
test
dec
movs
repz
add
aas
sbb
jae
adc
push
xor
dec
pop
fiadd
pop
ret
stos
inc
cmp
mov
das
inc
jnp
mov
xchg
pop
popa
test
sar
cmp
lahf
adc
mov
cmp
ins
mov
(bad)
into
mov
fnsave
call
ror
or
pop
mov
sbb
push
push
or
jmp
dec
outs
xor
sbb
cli
add
and
mov
pushf
mov
cmovae
rcl
add
jne
xor
out
xchg
shr
jo
clc
adc
or
ror
daa
cmp
in
mov
ror
retf
in
jmp
push
lods
in
movs
(bad)
movs
push
jbe
mov
and
xchg
pusha
rcl
mov
and
test
push
dec
xchg
ins
ret
cmp
sub
jne
add
sbb
inc
test
and
lea
and
inc
sub
jo
pop
push
push
mov
mov
and
inc
or
jge
xlat
add
push
cmps
cmp
test
adc
xor
sbb
sbb
dec
push
jb
lock
in
or
(bad)
or
add
ficom
cwde
mov
in
test
adc
lahf
dec
ins
test
in
add
inc
cmps
ins
inc
or
das
or
es
push
jle
outs
sar
fidiv
cmp
push
or
pop
lock
inc
add
inc
or
xchg
mov
fmul
shr
ss
out
cmp
or
sbb
push
mov
and
cmp
jle
and
inc
(bad)
mov
fld
xor
ins
cmp
pop
cs
push
xor
retf
les
push
fs
push
in
jl
dec
test
dec
mov
xchg
adc
or
js
and
sbb
sbb
inc
xchg
cmp
xor
test
mov
repnz
adc
jbe
push
fmul
out
mov
idiv
shl
add
pop
ret
adc
sbb
xor
push
xlat
test
pop
sbb
pop
daa
xchg
cmc
jnp
or
fst
add
xchg
push
dec
leave
cmp
call
jb
and
jmp
pop
inc
push
jns
sbb
rol
and
arpl
add
mov
bound
enter
lea
lock
adc
in
push
add
inc
push
fs
in
inc
in
das
xchg
es
or
adc
mov
jmp
sub
and
sets
and
sub
or
pop
js
inc
test
bound
inc
popf
mov
cmp
mov
rol
adc
dec
xchg
test
mov
loope
push
mov
cdq
add
imul
add
out
add
add
push
inc
jb
add
add
push
and
add
add
leave
dec
and
adc
mov
add
add
and
repz
jae
mov
or
pop
dec
xchg
hlt
add
or
loopne
mov
popf
add
mov
and
add
fstp
outs
cmps
nop
and
cmps
(bad)
sub
loope
rcr
retf
push
jne
inc
sbb
add
encls
sbb
mov
int3
adc
js
inc
out
or
mov
loopne
add
xchg
sbb
bound
add
mov
enter
mov
arpl
jno
jge
jbe
add
inc
cmp
dec
imul
jmp
inc
pop
push
je
xchg
adc
enter
sbb
pop
cmps
cwde
pushf
je
lds
fsubr
xchg
pushf
cdq
xchg
add
adc
add
loop
out
add
push
add
jp
es
cmps
mov
test
inc
loopne
adc
add
imul
mov
aam
pop
mov
test
xor
and
or
in
call
and
push
jb
(bad)
and
ins
lock
inc
pop
fwait
push
mov
je
adc
and
loop
stos
test
mov
and
push
mov
mov
push
loopne
pop
ja
lock
scas
shl
fdiv
jne
mov
cmp
arpl
imul
push
inc
lea
test
jmp
sbb
push
inc
mov
mov
clc
cmp
push
or
fwait
pop
cmp
out
or
fisubr
cmp
dec
inc
fdiv
or
shl
inc
and
mov
adc
xchg
popa
push
sbb
cwde
in
and
or
sbb
xchg
add
push
pop
test
shl
add
ror
dec
test
adc
pop
add
sub
xor
mov
add
inc
mov
pop
pop
mov
mov
mov
in
aaa
pop
dec
mov
dec
enter
je
adc
mov
ds
mov
sbb
xchg
mov
sub
push
cli
inc
fmul
inc
jg
lea
jmp
add
push
pusha
je
enter
push
(bad)
and
ds
jbe
enter
adc
adc
adc
lods
push
and
clc
call
sbb
ret
add
cmps
pop
push
popa
fild
mov
or
aad
loope
outs
pop
icebp
ret
pop
je
jmp
popf
mov
scas
(bad)
cli
lea
cmp
jo
pop
cmp
ret
push
lock
test
scas
mov
cmps
jo
js
or
jge
or
add
outs
bound
cmps
cmp
xor
mov
clc
jge
cdq
sub
and
loopne
pop
test
xor
adc
ins
and
int3
adc
iret
test
std
loop
scas
adc
in
mov
and
sub
dec
loop
es
pusha
ret
mov
arpl
mov
mov
jp
sbb
xor
pop
cdq
fimul
out
jl
mov
leave
mov
stc
push
repnz
mov
sbb
enter
call
inc
inc
test
mov
test
push
xchg
loop
(bad)
shr
ret
dec
and
cld
xor
mov
movs
dec
mov
mov
dec
cmp
push
jge
fisub
shr
pop
adc
loopne
repnz
or
xor
sti
sub
adc
es
out
adc
adc
test
(bad)
dec
aam
or
inc
add
add
xor
loopne
sub
shl
sbb
scas
movs
inc
mov
fcomp
adc
loopne
cs
xor
inc
cmp
pop
push
and
dec
cli
mov
jle
test
shr
xor
or
aas
outs
add
not
add
sbb
stc
stc
ins
ins
lods
popa
dec
jo
jns
xor
pop
mov
sub
and
(bad)
push
cmp
adc
push
and
xor
addr16
mov
sub
retf
or
aaa
addr16
test
sub
jb
sbb
test
add
mov
psubusw
movs
add
jbe
jb
movs
ret
push
xchg
mov
adc
push
ret
ss
or
out
dec
or
inc
test
mov
add
xlat
add
or
or
adc
push
mov
push
push
clc
cmc
ror
test
popf
or
(bad)
mov
stc
test
inc
push
movs
jp
xchg
push
pop
xor
push
inc
sahf
and
js
ja
in
out
pop
(bad)
and
push
push
shl
mov
lahf
imul
pop
nop
cld
add
pop
push
aam
push
je
pusha
in
add
sbb
adc
or
repnz
cmc
(bad)
push
push
fld
xor
xlat
cmc
pushf
inc
or
jo
fmul
or
outs
into
ret
mov
xor
mov
test
add
dec
dec
push
sub
jo
movs
pop
test
adc
xchg
std
jg
jmp
inc
mov
xchg
imul
pop
add
adc
push
add
fsub
mov
xor
add
ror
outs
fbstp
hlt
sub
and
jmp
xor
mov
bound
sbb
je
sub
jmp
retf
inc
hlt
loopne
(bad)
hlt
sbb
adc
sub
pop
sar
jl
sub
jmp
repz
sub
stos
jbe
pop
jmp
inc
shl
or
dec
xchg
inc
inc
ficomp
into
repz
and
adc
jmp
adc
jmp
sbb
push
mov
sub
xor
dec
add
into
push
out
push
cld
jno
ins
pushf
sahf
jno
mov
cmp
add
jle
jb
in
fidivr
int
ja
je
loopne
jl
outs
fistp
sti
push
adc
push
xchg
jl
push
and
jne
and
jnp
out
xor
add
push
imul
iret
in
cli
add
sahf
cmps
stc
mov
push
loop
xchg
fnstcw
bound
js
xchg
imul
sub
and
jge
int
in
mov
inc
xchg
cs
ins
ins
adc
push
adc
inc
fistp
nop
jmp
cmp
or
push
movups
adc
adc
add
push
pop
sbb
sbb
sbb
sbb
xchg
jmp
and
and
and
cmp
sub
sub
cs
xor
ja
xor
add
xor
ss
add
cmp
nop
test
adc
data16
pop
mov
lahf
cmp
mov
cmp
neg
fld
or
test
mov
push
cld
lea
sahf
mov
jge
(bad)
out
nop
pop
cs
ficom
imul
push
enter
sub
dec
push
out
pop
pop
xchg
push
iret
repz
jbe
sub
push
inc
pop
imul
test
(bad)
int
mov
stos
sbb
cli
add
test
push
and
push
shr
jo
sbb
dec
push
inc
dec
xchg
inc
pusha
aaa
leave
sub
push
and
dec
ror
(bad)
fiadd
inc
sbb
nop
mov
or
xchg
into
in
mov
fld
cmp
or
jmp
cmp
jne
test
fcmove
sub
push
icebp
mov
xchg
and
cmp
jb
movs
dec
pusha
or
adc
adc
ret
dec
push
mov
push
pusha
push
jns
outs
push
add
or
dec
test
or
or
adc
test
scas
or
cmp
int3
(bad)
into
pusha
adc
sbb
lock
neg
mov
pusha
in
mov
pusha
repnz
pop
or
add
cmp
cmp
sbb
push
xchg
aam
and
sbb
pop
cmp
ret
inc
sbb
scas
enter
dec
dec
retf
ins
ins
jp
push
inc
jo
or
push
xor
mov
neg
mov
rcl
mov
push
mov
adc
loopne
dec
jnp
push
in
loopne
mov
mov
add
loop
push
add
ds
or
push
dec
(bad)
dec
mov
and
scas
cli
dec
movs
jmp
and
jo
imul
push
inc
rcl
mov
jmp
sub
es
xchg
inc
jb
push
ror
or
fstp
adc
add
push
adc
shr
stc
mov
dec
repz
cmp
cmp
xchg
push
inc
push
sahf
push
mov
push
pop
xor
and
pop
jo
ficomp
mov
jle
mov
inc
and
je
cmp
xchg
cmc
aas
add
jge
mov
adc
xchg
inc
adc
cli
outs
outs
(bad)
mov
mov
sub
cdq
pop
idiv
push
mov
inc
and
cli
cdq
pop
or
mov
rcl
or
icebp
add
mov
test
fs
inc
mov
xchg
mov
call
pop
xchg
or
imul
jo
xchg
push
sar
inc
lea
sub
sbb
adc
cs
jae
mov
inc
je
mov
sub
add
fdivr
dec
cmp
les
push
jmp
data16
aam
or
pusha
fmul
scas
dec
xor
shl
shl
retf
into
pop
lea
push
adc
jp
pop
sub
push
cdq
call
pop
cli
mov
lods
mov
mov
sub
xchg
stc
jae
sub
dec
mov
mov
rep
pop
cmp
cmp
push
aam
cs
jae
add
nop
cmc
test
mov
mov
sar
in
and
sub
cmp
ja
mov
cmp
push
sbb
(bad)
push
xor
sar
push
lock
xchg
cs
mov
push
push
jl
cmp
and
mov
jl
iret
xor
add
mov
pop
in
and
mov
cmp
push
loop
adc
xor
jbe
rcl
dec
and
jbe
push
pop
and
sub
outs
es
xor
(bad)
cmp
jb
mov
dec
inc
jne
scas
sub
pop
dec
add
loopne
mov
jle
or
or
jne
sub
sbb
ret
in
test
and
sbb
sub
enter
pusha
pop
push
and
call
addr16
push
jnp
les
inc
push
sbb
push
in
push
adc
call
add
retf
inc
sbb
inc
or
int3
mov
scas
add
dec
je
or
je
sub
inc
out
xchg
dec
clc
aaa
or
sub
push
pop
test
push
xor
cwde
inc
hlt
add
retf
push
loopne
mov
mov
mov
or
and
jle
je
mov
mov
or
pop
mov
ret
mov
add
aad
imul
xchg
dec
ror
icebp
push
cmp
jae
inc
sar
retf
lock
push
inc
out
push
jmp
mov
adc
fst
repnz
jo
or
adc
mov
sub
xchg
pop
aad
fimul
shr
push
dec
ret
es
cmp
and
cdq
arpl
inc
dec
add
fwait
outs
scas
div
add
push
sar
or
js
push
scas
mov
cmp
dec
inc
sub
retf
test
dec
int3
xchg
outs
sti
movs
and
imul
mov
dec
js
retf
push
add
sub
imul
push
jmp
adc
movs
je
add
movs
inc
push
js
jl
test
movs
or
sbb
add
fcomp
cli
out
push
or
jne
cli
add
fs
sbb
sub
scas
lods
xor
mov
pop
ret
jmp
mov
adc
xor
dec
or
loopne
retf
retf
out
shl
loope
sar
pushf
add
push
dec
(bad)
or
inc
mov
lods
nop
loopne
sbb
pop
mov
in
ret
mov
pop
dec
dec
cmp
xchg
sbb
and
fistp
push
ins
jmp
ins
jmp
dec
or
pop
or
out
je
add
fstp
sbb
daa
and
sub
inc
nop
mov
pop
or
sub
mov
clc
es
mov
cld
inc
push
das
xchg
push
mov
sbb
fld
and
pop
cmp
mov
sbb
repnz
pop
mov
cmp
mov
mov
jl
adc
sbb
fidivr
mov
adc
mov
or
out
sbb
in
in
mov
fld
daa
cdq
sbb
ds
add
dec
push
jne
aas
push
and
sbb
cmp
jne
movs
and
jbe
jl
mov
push
ins
fwait
add
mov
jle
push
aam
inc
push
aas
or
mov
dec
sar
dec
pop
jg
pop
mov
call
pop
or
mov
inc
xor
jge
(bad)
jge
cmp
xor
or
sub
je
cli
sahf
adc
lahf
adc
xor
push
mov
add
adc
(bad)
and
in
dec
cmp
fimul
addr16
xchg
fidiv
and
outs
inc
std
rcl
push
jmp
cld
jne
test
call
das
cmp
or
mov
push
and
jb
xor
loopne
and
in
inc
test
mov
jg
test
je
inc
push
stos
pop
mov
jmp
ret
cmp
aam
lds
adc
mov
dec
add
push
loop
add
loope
and
shl
jb
ret
pop
mov
js
cmp
mov
je
nop
mov
adc
dec
add
(bad)
movs
jge
in
add
or
mov
pop
dec
adc
pop
sahf
arpl
inc
jmp
inc
sahf
inc
adc
push
sbb
sbb
sbb
and
(bad)
xchg
int3
scas
je
sub
je
pusha
or
push
add
inc
dec
pop
and
hlt
xchg
mov
add
mov
bound
(bad)
mov
or
inc
add
int3
add
loopne
mov
lds
in
sbb
jbe
repnz
sub
pop
aaa
test
retf
push
and
cmp
mov
inc
loop
inc
cmp
jl
iret
sbb
fwait
jmp
mov
jmp
pop
add
and
mov
shl
cmp
mov
mov
and
ins
push
dec
cmp
lock
sub
mov
pop
and
or
jmp
inc
(bad)
and
adc
inc
jmp
or
xchg
dec
jmp
mov
or
into
dec
inc
test
and
dec
rol
and
pop
dec
ins
clc
push
or
or
dec
fmul
or
jo
pop
dec
arpl
inc
into
add
sub
or
gs
sub
inc
jo
jne
add
xchg
mov
fistp
or
popf
icebp
rcl
dec
mov
push
stc
lock
or
jbe
dec
xchg
inc
fcom
ficomp
sub
or
mul
add
sbb
cmp
xor
into
aam
or
add
jns
or
cmp
pop
mov
xchg
xor
cmps
pop
jo
pop
ja
imul
sub
and
cmp
in
adc
mov
out
retf
xchg
and
dec
ficom
test
pop
cmp
inc
loop
cmp
test
je
sub
hlt
pushf
xchg
imul
pop
add
push
bound
clc
jne
cmp
pop
push
add
fild
sub
je
pop
pop
jmp
or
aaa
sub
mov
or
into
or
lea
cmp
push
call
je
mov
cmps
add
and
add
add
cmp
push
stos
add
cmp
rol
je
mov
push
fadd
call
test
je
test
mov
int
(bad)
jmp
or
jl
int
jmp
std
jmp
cld
enter
mov
ins
loop
scas
shl
pop
add
shr
mov
jnp
lods
sbb
xlat
in
mov
(bad)
sub
(bad)
bound
inc
test
out
adc
ffree
jo
xchg
xor
ficomp
adc
pushf
add
mov
aas
mov
xchg
loope
pusha
push
sbb
or
adc
push
xchg
inc
sbb
adc
sub
pop
aad
das
push
sbb
pop
sbb
adc
fld
sub
mov
test
xchg
sbb
push
ret
push
push
mov
pop
(bad)
fbld
pop
test
ins
push
sub
punpcklbw
xchg
add
fbld
ins
jl
or
(bad)
inc
retf
loope
push
std
push
sub
inc
lea
push
int
push
jnp
ret
mov
inc
pop
jle
aas
int
cmp
int3
push
cwde
adc
mov
jp
pusha
dec
or
ins
loop
adc
mov
lock
out
js
xchg
mov
jne
push
rcr
(bad)
or
jmp
test
outs
push
mov
dec
mov
xchg
xchg
div
xlat
mov
sub
enter
xchg
sbb
or
dec
inc
mov
fdiv
sub
adc
push
mov
push
xlat
inc
push
or
cmps
stos
adc
sub
ins
icebp
mov
push
or
jae
mov
or
div
rcl
sub
push
ins
dec
adc
mov
or
and
or
cmp
mov
adc
and
dec
(bad)
cld
and
pop
cmp
icebp
add
cld
mov
mov
adc
inc
push
sbb
inc
add
mov
push
fsubr
add
lods
scas
retf
(bad)
cmp
jb
cmp
xchg
inc
hlt
sub
aas
jns
fisubr
(bad)
mov
mov
test
dec
rcr
mov
sub
vunpckhps
jno
push
pusha
cmp
jl
or
dec
cmps
iret
out
in
stc
and
add
add
fucomi
mov
sbb
sub
or
pop
xchg
xchg
xchg
out
push
or
or
push
cmps
cs
fwait
push
xchg
mov
push
ja
pop
js
add
popa
mov
fnstenv
jmp
arpl
(bad)
push
imul
adc
add
lahf
jl
repz
call
mov
inc
xchg
or
call
add
lock
cdq
dec
sub
or
add
(bad)
out
in
xor
(bad)
ja
inc
add
add
sar
mov
dec
mov
jb
pop
jmp
or
loope
mov
or
add
jne
outs
aam
clc
or
test
or
mov
push
sub
shl
or
adc
mov
add
push
ret
rol
addr16
ror
fdiv
mov
sar
dec
mov
mov
sub
pop
sbb
lea
sub
mov
test
jne
cmp
jg
jl
or
jae
dec
cmp
paddusb
ret
cmp
(bad)
lock
sbb
sub
ret
shr
sub
push
or
cmp
and
jns
or
cmp
jne
sub
add
and
dec
or
inc
idiv
jne
mov
or
add
ret
xchg
mov
mov
cmp
mov
mov
out
dec
jnp
fsubr
add
push
push
dec
in
lds
repnz
jp
add
scas
ins
mov
sub
mov
les
sub
cmp
lods
cmp
adc
aaa
sub
jne
jnp
jbe
mov
fist
jmp
pop
arpl
cmp
jne
mov
push
cmp
int
fdivr
jne
(bad)
es
jne
call
add
xor
movs
mov
jns
push
sub
jmp
adc
lahf
out
stc
(bad)
jmp
std
std
jmp
cld
cld
jmp
lock
sub
jmp
fimul
inc
inc
test
inc
fstp
aad
sub
push
leave
push
xor
and
lock
add
sub
xor
into
xchg
retf
loopne
adc
std
cld
mov
sub
inc
call
ret
nop
push
es
mov
lds
daa
(bad)
loopne
ror
mov
and
stos
adc
js
loopne
sbb
dec
arpl
sub
mov
mov
outs
and
add
push
push
neg
call
inc
cdq
dec
pop
scas
div
adc
pop
cmp
inc
pop
sub
pop
(bad)
or
xor
or
mov
and
(bad)
mov
dec
idiv
fsubr
and
mov
push
data16
(bad)
inc
and
stos
bound
or
sbb
loop
sbb
(bad)
or
cmp
les
ud1
mov
int
je
mov
sub
sub
dec
mov
pusha
ja
arpl
dec
adc
(bad)
xchg
inc
jmp
xchg
les
cdq
push
or
arpl
ror
cmp
xor
dec
sub
ja
mov
add
push
and
cmps
pop
lock
dec
sbb
js
call
mov
and
adc
call
pop
inc
cli
fild
fimul
js
push
cli
neg
pop
jae
cmp
(bad)
push
and
or
cmp
jb
adc
mov
inc
xor
sahf
xchg
mov
inc
je
sar
push
mov
jnp
lea
mov
out
xchg
bound
pop
adc
daa
cmps
pop
push
dec
fld
sub
dec
js
rol
jg
pop
sbb
push
les
loopne
cld
adc
(bad)
push
push
mov
sub
sub
pop
mov
dec
add
dec
push
mov
les
jecxz
and
dec
adc
sbb
cmp
push
stc
pop
fiadd
je
cwde
sub
mov
mov
pop
lock
mov
cmp
je
push
mov
or
adc
add
lahf
in
pop
sbb
ins
pop
sbb
adc
imul
add
dec
add
in
inc
push
daa
add
adc
or
add
jnp
xor
jo
jno
je
call
fld
add
xchg
add
sbb
xchg
pop
push
pop
cmp
cmps
bnd
or
or
enter
dec
or
cmp
sub
or
xor
or
loop
mov
or
call
add
addr16
push
push
ja
inc
push
inc
nop
push
rcr
jae
adc
pusha
adc
sub
adc
cmp
push
inc
adc
adc
add
and
mov
add
pop
call
cmp
enter
push
push
push
push
mov
pop
xor
cmp
movs
sbb
call
sbb
call
cmp
sbb
adc
sbb
and
je
pop
sbb
push
nop
out
jle
cmp
in
push
push
inc
push
nop
mov
jne
add
cli
cmp
jae
pop
and
add
cmp
rol
mov
jae
inc
pop
sub
xchg
push
in
push
in
repnz
sub
repz
cmp
ret
adc
aad
sbb
in
in
out
jns
nop
out
out
mov
in
fcom
call
nop
adc
dec
dec
cwde
jmp
and
sub
xor
jmp
jmp
and
out
in
in
in
cdq
add
cs
in
inc
in
sbb
iret
enter
jge
test
out
sbb
pop
add
lock
xchg
xor
icebp
bswap
add
sbb
repnz
std
test
repz
std
hlt
add
int3
test
hlt
fwait
jb
sahf
xchg
mov
and
enter
pop
not
(bad)
idiv
std
clc
in
or
adc
outs
stc
inc
stc
lock
cli
iret
enter
iret
sti
sti
sub
cld
cld
pop
repnz
outs
cld
je
cld
push
(bad)
out
xor
std
xor
cmp
adc
dec
loop
add
sbb
add
adc
push
or
rcl
loope
pop
cmps
(bad)
imul
and
std
sti
in
in
mov
fdiv
or
xchg
stos
inc
mov
xchg
inc
xchg
sti
out
out
inc
push
fsub
cdq
outs
call
(bad)
dec
sti
sub
imul
jmp
jne
rol
cdq
(bad)
in
repnz
add
sbb
pop
sbb
add
movs
out
out
cdq
push
mov
adc
lock
cli
jb
pusha
leave
push
cli
sbb
nop
cmps
repz
sar
push
stc
les
scas
dec
push
cmp
div
neg
jno
sbb
fwait
xor
add
stc
out
clc
imul
clc
sti
sti
aaa
jb
push
sti
cdq
mov
push
nop
cld
or
popa
mov
dec
and
xor
sub
mov
fld
xchg
pop
icebp
mul
pop
rol
scas
idiv
or
mov
out
out
and
ins
out
(bad)
out
and
mul
neg
sti
imul
jmp
neg
(bad)
mov
imul
inc
add
sbb
popa
imul
cmp
pop
pop
and
push
adc
add
sbb
rcl
jno
les
xchg
cmc
loop
repnz
pop
xlat
movs
test
div
jns
jne
cwde
fwait
and
jbe
inc
clc
clc
jecxz
(bad)
sbb
hlt
jno
imul
loop
push
xchg
hlt
pop
jne
adc
xchg
push
hlt
sbb
das
jle
data16
frstor
idiv
jo
pop
xor
push
(bad)
sti
lahf
pusha
imul
mov
push
iret
movs
loope
loope
repz
mov
repz
or
pop
mov
test
xchg
repz
repz
jno
xchg
and
or
sbb
(bad)
jmp
jno
mov
xchg
repnz
pop
je
jo
sbb
dec
in
in
popf
dec
push
jno
and
add
add
pop
je
loope
sbb
mov
and
nop
outs
div
icebp
and
icebp
test
call
cmc
cmc
xchg
inc
fcomp
add
aam
and
jns
mov
ret
popf
lock
dec
push
stc
stc
cmc
mov
lock
lock
sbb
scas
jne
and
test
or
test
ret
ja
adc
xchg
scas
push
sub
out
mov
enter
in
xchg
add
jne
inc
ds
add
sbb
inc
sahf
add
stos
add
loop
mov
add
push
jnp
and
push
ins
add
cmp
inc
in
adc
dec
add
sahf
(bad)
and
ficom
(bad)
jns
add
dec
dec
or
clc
(bad)
ins
jl
into
adc
xchg
int
(bad)
xor
cmp
push
jne
ss
data16
shl
icebp
iret
ds
repz
adc
mov
ins
out
(bad)
retf
hlt
ror
out
sahf
pop
cmp
lds
(bad)
mov
inc
push
sbb
xor
add
inc
call
dec
xor
adc
inc
add
sbb
clc
sbb
adc
(bad)
mov
(bad)
xor
cmp
fs
add
cli
or
and
pop
sar
sub
sub
repnz
jne
jg
push
inc
and
dec
sbb
pop
pop
mov
cmp
add
adc
cmp
jmp
jmp
pop
lock
jo
push
dec
(bad)
out
cmp
add
adc
xor
jne
add
and
and
or
jl
add
add
cmps
lock
je
push
sbb
jmp
mov
fdiv
loope
cmp
adc
pop
sub
in
adc
push
mov
stos
je
mov
cmp
jnp
add
cs
mov
mov
enter
mov
or
js
sbb
adc
lods
and
add
aaa
sbb
repnz
add
or
add
inc
jge
cmps
test
jbe
and
dec
and
add
pop
add
ins
xor
out
dec
pop
pop
adc
xchg
cmp
mov
mov
xchg
sub
jb
rep
jmp
adc
fs
mov
loope
inc
loopne
add
mov
sub
jecxz
aas
loope
fdivp
push
test
cmp
fs
mov
shl
test
ds
out
mov
int
add
adc
repnz
dec
add
add
add
xchg
mov
jns
mov
lock
call
repz
ror
mov
mov
call
cmp
in
lock
call
clc
clc
cld
or
sub
(bad)
add
fld
sub
xchg
jns
cmp
mov
inc
pop
sti
popa
xor
and
pop
jno
fcomp
lea
jl
cld
or
mov
(bad)
cld
out
mov
neg
enter
adc
pusha
xchg
daa
stc
div
retf
ficomp
les
call
mov
jl
mov
fst
sahf
inc
xchg
push
ficom
push
add
imul
pop
add
jmp
fs
push
je
test
(bad)
mov
out
sahf
sbb
sbb
adc
out
adc
or
int
nop
out
add
rol
out
or
push
fsubr
(bad)
push
push
mov
pop
cmpps
sbb
pop
cmp
xchg
and
lods
test
adc
inc
inc
inc
lods
add
outs
rcl
movs
add
enter
fisub
imul
pop
popf
xchg
mov
xchg
nop
or
mov
sahf
jo
inc
push
rcr
movs
int3
add
int3
add
rcr
or
and
adc
push
std
jns
leave
push
shr
or
out
clc
nop
daa
jno
pop
leave
or
fdiv
out
xchg
pop
sub
sti
pop
jno
add
adc
sbb
sbb
push
call
je
dec
inc
ror
inc
or
mov
sbb
repz
push
dec
inc
cmp
ja
retf
scas
adc
cmp
mov
test
add
sub
inc
push
call
nop
inc
mov
ret
mov
fldcw
jo
ret
lahf
call
adc
push
add
and
pop
je
into
fsubr
pop
loop
jle
inc
pop
jne
hlt
or
sbb
movs
jo
cld
mov
jbe
push
inc
cwde
dec
js
(bad)
icebp
imul
cmp
dec
ret
shl
pusha
sti
mov
adc
dec
cmp
inc
shl
or
jbe
sbb
in
gs
call
test
jbe
push
inc
cld
and
jne
add
or
jne
in
and
mov
adc
fs
and
pusha
add
sub
sub
push
clc
push
push
pop
cmps
mov
hlt
pop
xchg
mov
retf
clc
jne
push
pop
inc
rcr
jmp
push
push
ret
retf
cdq
mov
rcl
test
sbb
sbb
fst
jae
je
adc
jecxz
lahf
and
pusha
bound
adc
add
int
add
test
vmread
int3
mov
push
stos
lahf
mov
push
je
cwde
(bad)
call
mov
jns
inc
and
or
outs
outs
sbb
int
je
or
add
add
dec
and
xor
call
push
jmp
mov
dec
mov
cmp
sub
inc
in
and
out
mov
dec
pop
pop
push
jne
cmps
cdq
clc
in
mov
pop
pop
push
adc
adc
mov
adc
xor
leave
push
push
add
into
sub
test
outs
imul
rcr
mov
pop
mov
or
dec
dec
inc
movs
push
pop
or
out
test
repz
sbb
add
loopne
nop
push
add
ret
les
or
pop
cmp
sub
das
punpcklwd
or
mov
or
push
xchg
adc
les
xchg
int
mov
je
ins
nop
dec
ret
xchg
jne
lahf
and
leave
jae
push
or
lods
test
cmps
loop
adc
mov
int3
stos
fs
add
(bad)
dec
aaa
or
ja
in
or
xor
and
push
ret
mov
aad
pop
test
mov
and
push
and
dec
pop
pop
sbb
ja
jl
es
cmp
xchg
dec
call
cmp
and
mov
aam
sub
mov
add
adc
xchg
outs
fsub
xchg
or
inc
jecxz
sub
sub
dec
jne
cmp
mul
ds
les
jbe
movs
push
add
push
std
xchg
or
add
xor
sub
out
test
adc
jmp
rcr
je
adc
mov
loopne
cdq
mov
jmp
arpl
rcl
lods
(bad)
jmp
cdq
cmp
(bad)
call
add
dec
arpl
add
sub
push
xor
leave
push
mov
(bad)
pop
xchg
inc
push
xchg
push
or
aas
mov
sbb
push
adc
jbe
push
mov
push
add
add
mov
push
inc
cmp
dec
jmp
shl
cmc
dec
sbb
mov
popa
popf
mov
je
xchg
or
push
fwait
dec
pop
sub
in
cwde
mov
mov
lock
(bad)
mov
imul
test
js
outs
(bad)
inc
pusha
daa
rol
push
inc
mov
out
mov
or
mov
push
pop
dec
into
test
xchg
inc
sub
mov
ror
mov
cmp
sub
icebp
inc
fisubr
fild
mov
add
dec
xor
push
addr16
or
add
outs
je
call
xchg
cli
jge
fadd
retf
add
ret
and
ja
fwait
xchg
enter
sbb
nop
inc
jb
hlt
das
fcom
jo
cld
out
dec
and
cmp
jbe
retf
jg
mov
and
aas
rcr
fadd
push
aam
and
add
stos
ss
or
mov
dec
(bad)
mov
out
test
and
or
int3
mov
xchg
or
push
repz
(bad)
outs
xchg
mov
cwde
ret
sub
nop
scas
popa
jmp
sbb
mov
inc
or
jmp
imul
je
push
sbb
xor
scas
sub
push
loope
fs
aad
push
mov
inc
sbb
cs
sbb
or
push
inc
push
out
or
and
add
minps
add
in
xchg
fist
aas
mov
(bad)
jns
xlat
pop
jmp
sbb
les
dec
jbe
xor
and
and
inc
or
and
scas
or
jne
cmp
je
adc
iret
mov
sahf
and
or
push
jp
(bad)
inc
mov
in
lock
lock
movs
jb
hlt
jmp
shl
cmp
fs
loopne
retf
sub
mov
cld
add
clc
add
popa
push
sub
xchg
xor
jge
fsubr
push
hlt
jb
les
lods
popf
int3
or
mov
sub
or
adc
add
and
cmp
cmp
movs
(bad)
xchg
push
pop
pop
mov
outs
push
add
add
dec
pop
sbb
sub
push
fidiv
and
test
dec
mov
hlt
test
mov
dec
jmp
shl
ror
aas
pop
adc
cmps
lock
ret
in
xchg
stos
push
mov
and
dec
pop
push
dec
ja
pop
jmpw
adc
mov
mov
jmp
out
loop
or
push
sbb
sbb
or
sub
xlat
addr16
adc
stc
ins
push
push
pop
scas
imul
dec
ins
outs
sub
imul
jmp
pop
pop
mov
xchg
and
ret
xchg
popa
adc
aad
lods
jne
repz
je
aaa
in
cmp
add
mov
cwde
cs
(bad)
je
sar
lea
jecxz
dec
cmp
pop
imul
add
in
pop
in
mov
test
adc
inc
and
jne
mov
popa
adc
adc
pop
pop
or
mov
jb
cmp
shr
aam
push
pop
sub
ficom
or
sbb
loopne
and
js
mov
sbb
aad
lock
push
fsub
push
cdq
mov
adc
push
cli
frstor
add
mov
push
pop
and
jmp
inc
fild
pop
add
xor
cmp
(bad)
xor
or
pop
jne
adc
mov
dec
ret
mov
nop
in
or
add
mov
sbb
inc
push
push
xchg
pushf
hlt
in
hlt
in
sahf
out
fild
ror
shl
test
mov
hlt
in
jmp
stos
test
sub
mov
inc
push
inc
out
xchg
out
pop
mov
outs
nop
movs
push
enter
mov
nop
out
nop
out
sahf
out
(bad)
push
pop
mov
je
out
mov
inc
mov
and
aam
int3
out
mov
out
inc
xor
inc
push
rol
aam
cmp
repnz
aaa
cmp
mov
sahf
je
sub
mov
cmp
push
xchg
add
sub
or
arpl
lds
pop
push
dec
dec
xor
loopne
shr
and
pop
int
(bad)
or
loope
cs
aas
add
sbb
cmp
jp
clc
or
in
int
mov
pop
mov
push
mov
push
pop
cli
inc
jmp
movs
adc
movs
loope
loope
mov
sbb
fs
fs
add
push
dec
cli
or
sbb
sub
or
and
xchg
rol
push
pop
xlat
mov
loopne
repnz
mov
mov
xchg
aad
lds
mov
test
test
rcr
rep
pop
mov
pop
sbb
retf
iret
mov
shl
shr
push
jmp
test
js
aam
sbb
push
or
or
mov
ror
jmp
(bad)
rcr
mov
test
jne
mov
jmp
xor
or
in
xor
inc
shl
shl
inc
adc
jecxz
test
outs
nop
inc
cdq
add
loop
pop
and
pop
xor
pop
es
cmp
gs
mov
mov
cmp
pop
je
imul
inc
lea
jmp
or
inc
add
push
inc
and
ror
rcl
inc
pop
push
xor
fbstp
repz
repnz
add
es
or
add
mov
sbb
add
xchg
dec
adc
adc
fwait
mov
sub
sar
call
jmp
xor
adc
xchg
std
or
rcl
dec
std
shl
rol
or
test
imul
ror
ds
lock
cmp
sub
(bad)
and
pop
pushf
in
in
sbb
nop
inc
in
jecxz
jl
cmp
dec
add
xor
pop
sub
(bad)
(bad)
out
mov
cmp
imul
pop
test
fisub
adc
test
(bad)
sub
xor
bt
push
pop
sahf
dec
in
mov
fcom
xchg
jecxz
push
add
popa
fwait
cmp
push
stos
xchg
push
rol
push
popf
aas
in
adc
add
aam
or
fwait
push
cmps
add
adc
jno
inc
mov
and
inc
cmp
push
jne
cmp
inc
lods
add
imul
push
add
jne
fsub
cmp
cli
retf
mov
sub
sub
push
sub
mulps
mov
push
pop
mov
mov
push
es
pop
cmp
xor
div
and
pop
test
(bad)
xor
out
mov
add
imul
pop
fidivr
mov
(bad)
fisub
sbb
add
popa
mov
sbb
mov
icebp
push
mov
loopne
and
fidivr
call
jg
fs
inc
mov
cmp
mov
cli
data16
and
mov
shl
adc
dec
sysexit
jne
ja
add
sub
jmp
inc
jmp
popa
mov
pusha
push
mov
mov
pop
dec
add
mov
mov
jae
dec
add
inc
inc
dec
and
add
icebp
pop
push
jb
rol
out
sub
add
mov
sbb
adc
push
add
and
mov
xor
or
je
nop
ds
adc
jo
mov
mov
or
shl
push
adc
lea
mov
div
retf
inc
xor
lock
xor
(bad)
iret
xor
ss
pusha
and
or
rol
jne
sbb
inc
cld
add
sub
jecxz
daa
cmp
and
out
and
fadd
add
repz
aam
xchg
pop
addr16
or
dec
cmps
mov
fst
add
movs
inc
cmp
test
or
bts
jmp
add
mov
es
(bad)
sub
fdiv
jae
or
fdiv
pop
cli
test
sub
xor
(bad)
mov
std
repnz
cmp
(bad)
push
dec
pop
retf
cmps
cld
pop
leave
xchg
inc
or
dec
scas
adc
(bad)
dec
push
pop
or
lds
xchg
and
mov
out
inc
jo
call
lahf
jmp
sub
jp
push
adc
jae
gs
push
pop
movs
or
int3
popf
pop
(bad)
xchg
and
popf
sbb
ror
out
rol
jmp
dec
fs
int3
dec
push
push
or
pop
pop
add
or
pop
outs
and
add
xchg
or
pop
cmp
int3
icebp
inc
popa
rcl
daa
adc
and
add
push
push
icebp
sub
push
je
stc
add
ins
inc
or
push
inc
retf
cmps
sub
jle
stos
inc
add
inc
xor
add
int3
adc
and
jo
mov
sbb
scas
pop
inc
dec
or
xor
je
call
(bad)
xchg
cmp
jae
pusha
mov
sub
fdivr
pushf
and
push
push
xor
and
cmp
add
int3
movs
cmps
movs
daa
shr
lock
daa
sbb
sbb
shl
and
pop
gs
outs
test
inc
clc
pop
mov
push
xor
sub
add
adc
sbb
call
jmp
lods
and
push
das
push
sbb
sub
popa
cdq
inc
jne
(bad)
push
or
add
and
dec
out
stc
add
gs
or
dec
dec
popa
test
add
add
dec
or
repnz
jmp
bound
aas
sbb
and
data16
shl
repnz
mov
pop
rcl
mov
or
rol
sbb
pusha
cwde
pop
adc
dec
or
sbb
data16
fdivr
jl
je
jno
add
add
push
(bad)
imul
and
mov
fsubr
lahf
add
dec
mov
cmps
add
xor
cld
inc
sub
xchg
cwde
add
(bad)
push
xor
push
pop
mov
mov
and
shl
or
xchg
or
enter
cmp
or
dec
out
popa
push
pop
cmp
pop
jmp
pop
pop
adc
push
sbb
or
sub
ins
call
dec
inc
sub
test
push
clc
and
cli
add
dec
in
test
add
cmps
out
or
sub
mov
pop
cmp
or
ss
cmp
jb
xchg
jmp
movs
pusha
test
js
adc
xor
sub
add
(bad)
clc
pusha
cmp
fistp
sar
jne
or
add
adc
cmp
push
fwait
leave
pusha
mov
and
adc
mov
cmp
(bad)
mov
aam
aas
popa
clc
sbb
add
stos
pusha
cmp
aam
pop
sti
loopne
pop
dec
lods
inc
cmp
ja
aas
push
sbb
loopne
es
sub
sub
dec
aam
push
dec
fdiv
and
out
leave
or
sbb
and
jne
icebp
ins
dec
and
mov
mov
es
cmps
pop
clc
pop
psrlq
mov
adc
pusha
and
sub
sbb
out
sbb
or
add
adc
pusha
xor
(bad)
jns
add
xor
and
or
mov
mov
mov
pop
popa
adc
pop
leave
pop
popa
clc
das
pusha
mov
push
mov
enter
dec
sub
mov
bound
xchg
push
mov
and
cmc
xor
cld
mov
sbb
mov
adc
inc
jmp
cmps
jge
add
mov
(bad)
mov
in
arpl
les
mov
xor
sbb
scas
push
or
jle
ret
call
sub
(bad)
pop
pop
jne
jns
push
mov
(bad)
cmp
mov
add
xchg
or
push
add
mov
fild
mov
into
pop
ret
or
cwde
mov
cmp
js
jmp
xlat
push
xchg
push
add
mov
and
lods
mov
hlt
sbb
adc
sub
test
and
(bad)
adc
push
mov
push
inc
xchg
std
and
dec
push
cmp
ror
pop
fprem
push
cmp
icebp
pop
and
pop
data16
mov
inc
ins
out
jno
je
jge
pop
arpl
pop
sti
pusha
sbb
adc
leave
mov
js
add
clc
jmp
shl
jbe
xchg
out
fldenv
mov
movzx
add
inc
xchg
icebp
pop
cmps
nop
mov
add
or
mov
mov
(bad)
loope
lock
and
cmp
or
push
sub
shr
test
dec
sub
push
les
int
push
or
sub
ret
les
pushf
dec
loopne
and
jne
xor
imul
loopne
daa
sbb
sbb
leave
out
xor
mov
fs
pop
sar
cs
cmp
mov
retf
popa
and
retf
add
jmp
fs
push
pop
pop
push
jmp
adc
pop
or
dec
or
fcmovb
scas
mov
iret
jae
mov
es
add
sub
mov
xchg
jbe
aam
shl
adc
cmps
in
or
xor
push
nop
xchg
hlt
xchg
add
aaa
daa
pop
xchg
clc
iret
mov
jl
adc
or
push
je
mov
fcom
and
add
adc
fnstsw
sub
scas
imul
push
mov
(bad)
adc
sbb
or
aam
neg
push
lock
imul
jge
popa
imul
fcom
xor
inc
call
mov
loope
push
jl
int
push
sbb
mov
push
mov
fistp
sbb
push
mov
push
push
push
push
mov
push
mov
dec
sar
les
pop
call
adc
mov
add
ins
or
push
push
jp
xor
outs
jb
shr
or
sbb
adc
sbb
or
pop
cmp
sbb
xlat
pushf
jl
jg
jbe
pop
sbb
cdq
pop
idiv
add
test
sbb
sbb
cld
jle
inc
or
popa
out
dec
lea
sbb
int3
dec
inc
dec
mov
(bad)
push
jg
add
sbb
add
inc
adc
lea
out
jmp
pop
fsub
repz
sar
xchg
pop
not
pop
and
in
or
leave
push
popa
test
mov
push
dec
and
ins
mov
push
dec
cmp
out
sbb
xor
scas
push
mov
shl
add
or
push
pop
mov
leave
dec
(bad)
jne
pop
ret
push
in
or
retf
aaa
setae
and
push
pop
and
jmp
sbb
adc
and
enter
lea
mov
inc
cmps
in
jg
jbe
inc
jmp
pop
fstp
jne
fnstcw
mov
and
clc
jg
pop
mov
push
xchg
xchg
push
nop
jg
or
add
ja
cmp
ins
or
fst
cdq
je
push
jmp
movs
clc
adc
pop
and
push
fwait
mov
je
or
fldcw
cmp
dec
(bad)
ficomp
les
push
mov
rcr
and
mov
jp
leave
xor
fcmovnu
fprem1
pop
clc
fstp
ins
jmp
test
inc
push
outs
pop
repnz
sbb
pop
adc
xor
shr
test
xchg
pop
and
push
popf
pop
call
fdivr
inc
pop
sahf
pop
jb
sbb
push
xor
jb
inc
lahf
test
pop
cmp
xor
jns
adc
ret
pop
sbb
pop
ja
pop
jne
mov
sbb
mov
les
mov
cld
pop
fdivr
push
or
lea
push
or
sbb
sar
push
aas
jmp
mov
out
pop
sar
cmp
je
aad
rol
dec
ins
ds
cmp
dec
scas
ja
push
clc
cmp
rol
bound
outs
call
call
cmp
or
push
clc
shr
fadd
ret
mov
mov
mov
div
cmp
fidivr
cmp
pop
adc
inc
jecxz
je
jecxz
fbstp
push
out
and
adc
test
pop
xor
lahf
and
push
lahf
sbb
mov
js
push
mov
and
jb
out
cmps
cmp
(bad)
fild
out
test
fimul
add
sub
cmp
fist
xchg
test
popa
test
add
inc
jb
adc
es
add
aam
aam
ret
push
push
loop
jbe
fwait
jae
std
push
and
ja
mov
cli
cmp
push
lea
adc
mov
sbb
xchg
pop
fsub
call
fistp
movs
add
and
rol
xchg
ficom
or
xchg
ja
sbb
or
push
or
dec
clc
pusha
sub
nop
je
movs
push
add
push
push
cwde
sbb
arpl
add
fmul
stos
add
mov
fadd
mov
loopne
sti
xchg
dec
dec
jne
lea
mov
xor
ja
and
lea
jb
jnp
loopne
clc
cmp
mov
push
add
sahf
sub
jge
test
xchg
aam
test
dec
adc
mov
mov
and
pop
mov
mov
add
ja
loope
lds
or
ret
push
inc
fmul
fmul
jbe
enter
cmps
add
sbb
cs
and
cmp
cmps
aam
inc
adc
pop
dec
pop
fld
mov
dec
dec
(bad)
test
and
icebp
dec
push
sbb
adc
push
mov
and
fiadd
adc
imul
dec
lea
mov
sub
push
lea
pop
(bad)
mov
add
sbb
mov
and
lods
xchg
xchg
jl
and
and
and
jg
and
or
dec
mov
je
or
add
movs
lods
inc
xchg
mov
mov
push
inc
jo
jg
dec
scas
(bad)
nop
hlt
ja
sub
and
mov
add
xor
fisttp
scas
push
xchg
xchg
xchg
inc
jno
(bad)
xor
cmp
mov
ins
inc
jecxz
jns
jl
shr
sar
(bad)
add
push
and
dec
cdq
fsub
or
mov
bound
push
std
jne
inc
and
jmp
sub
sar
in
mov
jmp
and
xor
inc
jge
pop
dec
add
or
inc
mov
cld
xchg
sbb
ins
cs
add
int3
mov
or
push
rol
xor
out
scas
shr
std
mov
pop
sub
call
cmps
and
and
and
push
push
push
mov
repz
in
inc
jle
(bad)
add
xchg
test
lock
out
movs
iret
hlt
jne
mov
xor
sbb
int3
dec
leave
movs
lahf
das
(bad)
inc
add
leave
xor
test
fmul
sub
and
ds
xor
(bad)
pusha
loopne
sub
cmp
test
dec
jbe
sahf
inc
adc
inc
add
add
aad
(bad)
adc
es
push
xchg
outs
out
adc
mov
mov
xor
mov
push
retf
sub
cs
and
inc
movs
push
dec
or
(bad)
jbe
mov
shr
push
push
push
mov
inc
mov
jne
fsubr
add
nop
cmps
jae
sbb
adc
jmp
cmp
or
xchg
fisubr
inc
push
add
mov
pusha
lods
xor
scas
and
loopne
sbb
into
clc
dec
imul
push
xchg
lods
pop
push
hlt
test
fs
add
add
jmp
test
cld
aas
jne
cmp
fimul
adc
cmp
dec
sbb
mov
lahf
and
jmp
pop
add
fucom
jb
sub
and
test
clc
add
stc
or
mov
test
add
sahf
mov
or
js
sti
mov
call
or
mov
jmp
retf
add
sub
out
inc
out
and
sbb
mov
jg
add
cmc
test
jmp
fsub
cmp
mov
mov
and
add
mov
push
hlt
push
and
pop
pop
mov
pop
or
mov
(bad)
push
je
cmp
es
movs
jne
shl
pop
sbb
pop
adc
mov
stos
cmps
or
sub
leave
movs
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
jp
and
mov
pop
(bad)
and
jnp
test
pop
cmp
pop
xrelease
test
aaa
ins
jg
fadd
out
lea
mov
in
std
pop
cmp
pop
cld
or
mov
add
outs
jo
inc
add
cmp
popa
mov
jne
(bad)
or
jg
aad
xchg
inc
xor
imul
mov
leave
rcr
push
pop
cmp
mov
das
cmp
xor
cmp
adc
fdiv
cdq
es
adc
or
je
sbb
or
adc
adc
or
test
mov
inc
dec
rcl
sub
add
xor
call
adc
cmc
enter
jmp
cmp
jo
cld
retf
lock
jo
and
ins
lods
inc
push
cwde
xchg
mov
fadd
and
mov
push
enter
and
push
inc
fdiv
mov
fwait
pusha
add
aaa
inc
outs
rol
push
push
imul
cmp
lock
mov
xor
jbe
push
push
daa
sub
push
xor
fld
jecxz
test
mov
or
add
or
jo
or
and
push
jo
pop
push
cmp
mov
clc
add
push
add
sbb
test
inc
sbb
xor
inc
pop
jbe
add
and
push
rcl
pop
in
cld
popf
xchg
dec
xchg
fild
fnstsw
fild
das
jbe
adc
sbb
mov
cmp
mov
push
(bad)
loopne
ror
or
xchg
push
push
outs
ja
imul
jmp
iret
dec
pop
and
mov
add
nop
(bad)
popa
in
jecxz
jecxz
lock
mov
add
mov
jo
(bad)
pusha
sbb
scas
sbb
inc
in
xchg
sub
loope
mov
mov
inc
or
add
in
push
test
pop
ins
push
mov
cli
push
push
jns
jne
int
call
push
xchg
loop
mov
add
add
mov
mov
test
cmp
mov
shl
fcom
dec
loope
jnp
add
fistp
shr
stos
popf
add
pop
mov
sub
and
adc
or
lods
adc
(bad)
(bad)
jne
pusha
dec
and
icebp
jb
pop
rcr
sub
cmp
jb
pop
inc
dec
pop
inc
test
mov
xor
loopne
push
(bad)
js
retf
push
movs
or
faddp
lods
or
inc
jbe
fcomp
inc
test
pop
cmp
xchg
mov
jge
test
sbb
enter
or
pop
pop
pop
push
sti
push
and
je
gs
jne
sbb
mov
xor
test
pop
cmp
or
push
mov
pop
mov
shl
or
imul
rcr
inc
xor
ror
frstor
mov
xchg
mov
mov
int
es
adc
mov
xor
test
outs
pop
enter
nop
jns
inc
sub
ja
rcr
xchg
mov
test
loop
mov
dec
mov
inc
mov
gs
mov
ret
jae
fincstp
push
dec
push
dec
inc
test
mov
dec
pop
xor
and
fdivp
xor
iret
pop
pop
imul
sub
sub
test
mov
movs
loop
or
rcl
xchg
sbb
retf
jbe
xchg
cmps
jge
data16
xchg
shr
fistp
push
inc
ins
gs
test
mov
lods
mov
xchg
outs
(bad)
and
movs
add
imul
push
mov
mov
(bad)
call
cmp
in
aas
adc
inc
movs
push
loopne
daa
mov
aad
jmp
sub
std
loopne
ret
pop
push
or
lea
fcmovb
int
test
jns
les
sti
jne
pop
add
loopne
adc
lock
mov
add
pusha
jmp
std
dec
sbb
jb
lea
push
adc
nop
pop
cli
and
add
jge
push
sub
add
and
or
push
or
jmp
and
add
or
or
in
add
pop
rol
inc
ror
std
push
mov
ret
adc
dec
jge
add
sti
xor
add
jo
ret
xor
daa
dec
adc
test
in
push
aaa
sbb
jae
push
mov
xchg
pop
jp
inc
sbb
aas
jo
popa
loopne
int3
mov
inc
dec
jno
sub
cld
ror
push
jmp
jbe
dec
(bad)
mov
rcl
sbb
pop
and
enter
or
xlat
pop
xchg
add
or
loope
nop
adc
arpl
sbb
popf
imul
xor
jge
sbb
lock
push
inc
cmp
or
js
xor
adc
ret
sahf
shl
int
cmp
in
scas
hlt
inc
cli
test
push
sti
cld
add
jecxz
in
adc
inc
cs
enter
loope
push
jae
retf
sbb
sub
cld
pop
scas
sub
out
push
mov
call
ins
mov
sub
jno
cmps
or
xchg
dec
aas
sub
sub
add
pop
enter
mov
ja
xchg
lea
pop
cmps
jb
sbb
pop
mov
cmp
push
in
pop
nop
or
xor
hlt
jmp
imul
fadd
inc
(bad)
fld
add
adc
test
pop
adc
xor
mov
add
(bad)
rcr
test
push
adc
and
scas
shl
or
je
in
add
jl
pop
jne
push
xlat
cmp
mov
cmp
cmp
lods
in
push
(bad)
test
xchg
jle
cli
mov
push
mov
sbb
xchg
push
mov
hlt
and
mov
mov
push
sbb
push
fst
dec
sub
xor
sub
mov
pop
mov
mov
lods
ret
jo
fcom
xor
and
push
aas
out
push
rcl
mov
(bad)
push
loopne
fiadd
sbb
xor
inc
data16
push
sbb
or
adc
push
pop
pop
cmp
or
jmp
push
daa
cmc
push
clc
neg
jl
add
push
push
daa
adc
push
ds
pop
jne
adc
xchg
nop
(bad)
jb
(bad)
pop
lea
sbb
int3
aam
ret
adc
aad
or
lea
es
or
enter
dec
mov
dec
mov
push
sahf
mov
mov
int
sbb
push
mov
mov
rcl
int3
mov
loope
out
sub
push
jb
cmp
xchg
fs
add
cmp
mov
xlat
add
cmp
dec
retf
sbb
add
lahf
dec
inc
add
and
inc
and
test
push
bound
dec
inc
pop
cld
sbb
shl
fwait
inc
imul
add
les
ret
sub
out
xchg
in
aad
xor
push
push
and
fs
lock
inc
daa
cwde
dec
jns
mov
(bad)
mov
cmp
lods
adc
jo
repz
adc
push
retf
out
and
and
mov
inc
inc
and
call
call
dec
sahf
mov
or
(bad)
ret
or
ins
xchg
add
test
arpl
xor
ds
ins
push
lea
loopne
cld
int
mov
data16
cdq
ror
scas
push
or
mov
inc
mov
mov
cld
dec
inc
gs
xor
shl
mov
xor
call
ins
mov
add
or
and
sbb
sbb
jmp
sbb
sub
(bad)
xor
and
push
loop
sub
inc
lds
je
push
lock
adc
leave
inc
sub
push
adc
sbb
cwde
in
xchg
inc
jg
dec
sar
pop
jb
jne
fcmovnbe
push
rol
sub
xor
out
add
adc
push
arpl
loopne
sub
outs
add
push
add
and
sub
mov
push
inc
add
jl
fs
sub
push
fadd
enter
xchg
pop
std
or
push
cmp
or
sub
dec
(bad)
jb
mov
retf
mov
ja
sub
inc
test
jnp
js
push
daa
loop
cdq
shl
jge
fisttp
sub
es
inc
or
xor
mov
hlt
cs
mov
push
cmp
xchg
loop
add
imul
test
push
pop
mov
cmp
jb
imul
ret
pop
xchg
or
and
inc
clc
cdq
sar
add
push
mov
ret
enter
fisub
xchg
aam
sbb
mov
ret
retf
pop
push
test
or
call
add
cmp
jge
imul
jle
cmp
xor
pop
stc
cmp
and
loop
add
cwde
push
sbb
repnz
dec
cmp
and
cmp
lea
sbb
cmp
popf
sub
mov
fs
popa
adc
mov
push
(bad)
shl
push
sbb
xchg
or
cs
outs
inc
dec
mul
xor
cmp
cmp
mov
xchg
movs
(bad)
push
shl
jecxz
push
add
icebp
add
push
dec
ror
ss
push
cmp
add
fdivr
inc
sar
or
push
push
dec
mov
push
gs
aam
or
ret
fwait
out
movs
add
jne
adc
fst
clc
push
inc
(bad)
scas
rcr
add
mov
ja
mov
mov
push
sbb
cmp
pop
add
push
pusha
xchg
push
sub
sub
add
scas
mov
jmp
cmp
cmp
mov
dec
or
shl
sub
inc
and
cmp
mov
push
loope
pushf
mov
adc
cs
and
(bad)
sub
je
(bad)
mov
add
(bad)
jp
push
inc
or
inc
div
and
mov
sti
icebp
(bad)
or
retf
jge
inc
xlat
push
and
adc
sbb
fstp
push
mov
sbb
mov
sbb
push
call
ins
sbb
mov
mov
xor
jbe
aaa
or
shl
(bad)
sub
and
shl
rcl
adc
adc
loope
mov
xor
dec
mov
inc
mov
pop
(bad)
cmp
cmp
mov
cmp
rol
pop
mov
add
ss
sbb
cmp
mov
jg
add
push
sbb
cmp
inc
cmp
jb
and
sub
hlt
sbb
xor
jg
adc
js
xchg
cmp
adc
je
push
fbld
push
sub
and
jle
loope
movs
neg
cs
test
shr
inc
push
pop
push
mov
fistp
rcr
shr
rcr
or
jne
div
pop
dec
ja
sub
dec
ins
fdivr
sti
ja
jb
cmp
or
xor
and
std
cmp
sub
or
fcmovbe
pop
es
mov
pop
fxch
(bad)
jmp
dec
lods
jl
in
pushf
add
push
adc
aaa
xor
mov
mov
cli
ds
fdiv
iret
sbb
xchg
fcomp
mov
or
stos
in
push
mov
mov
xchg
ja
aaa
jmp
ret
inc
sbb
pop
or
push
aaa
pusha
inc
and
mov
inc
jmp
cmp
sbb
sbb
sub
sub
dec
push
sbb
(bad)
mov
outs
inc
adc
(bad)
aaa
pop
sub
jge
test
push
or
ss
push
mov
or
adc
neg
push
or
push
push
(bad)
add
add
lds
adc
mov
mov
jbe
dec
pushf
mov
sbb
mov
dec
mov
jmp
jle
and
sub
add
retf
dec
adc
sbb
popa
or
mov
retf
sbb
call
test
sbb
xor
sbb
dec
dec
mov
and
sub
scas
pop
adc
xchg
xchg
xchg
sbb
or
sub
ror
in
ja
les
xchg
lods
out
cld
jbe
cmp
mov
not
mov
cdq
popa
adc
or
xlat
movs
(bad)
cld
fdiv
adc
mov
test
jge
sbb
loop
sbb
mov
ror
dec
inc
add
and
shl
jp
sub
mov
xor
cmps
enter
and
add
sub
paddq
shl
jg
lock
test
pop
enter
ret
enter
jno
push
cmp
jle
sbb
cmp
mov
enter
mov
jne
ja
cwde
sub
sub
shl
sbb
cwde
call
push
fnstcw
xor
and
add
sbb
xor
xchg
or
(bad)
out
nop
pushf
pop
cdq
push
add
fwait
pusha
mov
pop
cwde
xor
jbe
sahf
and
mov
jno
(bad)
fwait
rol
(bad)
icebp
sub
test
(bad)
inc
push
mov
sub
cmp
shr
lea
ret
inc
dec
xor
call
mov
clc
into
nop
fst
call
mov
or
es
xor
pusha
loopne
pop
sar
sub
cmp
pop
cmp
push
ret
ins
add
add
dec
adc
clc
out
cwde
lods
pop
pop
sub
cmp
jo
push
dec
push
pop
cs
or
push
push
add
mov
ja
jb
scas
xchg
jne
adc
adc
jb
ja
adc
jbe
ins
or
xchg
push
xor
inc
or
sub
(bad)
shl
or
pop
sbb
pop
shr
or
loopne
adc
rol
neg
aaa
sbb
aam
add
mov
cmp
xor
and
xchg
mov
xor
sub
push
sbb
and
or
xchg
jb
imul
push
test
jne
dec
mov
and
cdq
fmul
clc
js
add
cmp
ss
fmul
inc
jne
dec
mov
into
and
and
fcomp
or
inc
ror
add
adc
sahf
mov
xlat
retf
clc
dec
dec
dec
add
sbb
sar
xchg
add
and
push
(bad)
aaa
lods
jns
cld
or
pushf
shr
outs
dec
fldcw
add
icebp
push
je
pushf
push
int
xchg
out
add
jb
inc
sub
mov
movs
loope
push
adc
lods
or
test
shr
or
or
inc
rol
push
lock
add
or
add
or
add
push
dec
push
das
and
lock
test
or
shl
adc
and
out
pop
lods
inc
push
add
mov
jmp
sub
mov
jmp
imul
cs
cmp
push
sub
aas
fwait
pop
xor
cmp
sar
push
xor
addr16
js
hlt
sbb
fwait
push
call
sbb
cmp
(bad)
sbb
mov
ins
movs
jne
add
shl
mov
push
loopne
or
jne
icebp
adc
xchg
cmp
jae
xchg
mov
sub
nop
adc
jle
cmps
inc
lahf
pop
and
je
int
cdq
dec
rcr
(bad)
sub
in
mov
push
and
nop
and
dec
dec
xchg
mov
jmp
xchg
adc
push
adc
lods
mov
sub
push
out
pop
sbb
or
jle
mov
and
cmp
ret
xchg
call
rsm
add
out
ss
inc
sub
add
rcl
pop
sub
pop
int
inc
add
cs
rcl
pop
aam
cmp
sahf
jp
sub
leave
xchg
sub
pop
sbb
jnp
daa
xor
adc
ins
out
add
add
movs
cmp
cli
push
and
push
pop
loop
jg
pop
inc
out
outs
sub
nop
jg
pop
ror
push
sbb
sub
repnz
addr16
dec
push
sub
sbb
pop
mov
aaa
pop
sub
push
xor
ins
je
ja
push
jno
shr
pop
inc
cmp
loope
mov
xor
push
xchg
pop
xchg
and
add
inc
pop
jae
push
jb
lahf
cmp
xor
sbb
add
mov
cmp
push
movs
test
outs
cmc
jne
shr
js
pop
fld
dec
adc
dec
inc
push
in
jbe
cmp
cmps
fimul
daa
(bad)
ror
pop
cmp
(bad)
push
lods
push
add
push
push
stos
dec
pop
test
adc
inc
push
or
inc
cmp
outs
je
lock
call
mov
or
outs
ins
xlat
ror
cmp
loopne
call
sub
sub
jne
in
nop
lods
jmp
and
mov
mov
test
or
retf
cmp
sbb
ds
and
rol
push
xor
sub
shl
mov
sbb
daa
ds
sbb
aas
ins
jl
fmul
frstor
imul
ins
jmp
mov
ds
cmp
rcl
shl
sar
cmp
xchg
cs
mov
mov
adc
aaa
mov
nop
loopne
push
push
mov
mov
jo
mov
gs
jmp
add
adc
push
add
outs
jne
add
or
add
inc
dec
jg
std
adc
aaa
jo
and
cli
ffreep
inc
add
aam
push
xor
add
aam
push
or
test
jnp
or
push
mov
movs
jns
dec
mov
add
jno
loope
xchg
dec
rcl
addr16
xchg
shl
or
xor
xchg
jle
lea
sahf
push
(bad)
pop
loope
or
sub
inc
jmp
shl
cwde
mov
inc
inc
loope
jp
(bad)
jge
popa
aam
bound
or
jmp
xor
push
into
loopne
ins
sub
in
inc
(bad)
sti
shl
push
cwde
and
jne
jae
mov
in
or
adc
or
push
sbb
inc
jg
test
sub
cs
push
push
out
mov
xor
xor
cmp
cmp
pop
cdq
mov
jnp
cmp
leave
mov
cmp
add
(bad)
ds
leave
add
daa
mov
les
aas
adc
mov
inc
cs
push
inc
imul
jge
sbb
cdq
jmp
sub
add
popf
add
sbb
(bad)
jg
add
les
(bad)
add
fisubr
push
cli
(bad)
jecxz
nop
mov
jmp
sbb
das
adc
xor
inc
pop
sub
or
and
lea
or
retf
mov
dec
fcomp
push
retf
(bad)
shl
shl
cmp
cwde
mov
jp
sub
xchg
sbb
lea
ja
mov
sahf
fadd
dec
mov
cwde
add
pop
call
fiadd
add
es
data16
push
jne
or
aam
mov
arpl
stos
pop
adc
loop
addr16
and
mov
fsub
movs
sub
xchg
ret
std
loope
lea
sub
or
add
les
pop
in
sub
add
and
test
popa
pop
aam
mov
scas
inc
and
cmp
push
dec
xchg
cmc
pushf
ror
or
or
push
inc
push
xor
pop
or
jle
outs
clc
fdiv
lock
xor
mov
push
add
jnp
(bad)
jne
nop
inc
push
inc
push
jne
cmp
scas
sti
test
rcl
inc
jnp
xchg
cwde
cli
shr
mov
or
shl
mov
jl
je
add
movs
and
lods
mov
clc
sub
add
and
mov
aam
shl
mov
and
ror
cmp
push
clc
add
xor
push
jnp
pusha
ds
repz
or
cmp
fmul
or
leave
je
add
and
mov
mov
mov
xchg
add
outs
es
mov
jmp
cld
cmp
jb
cmp
inc
aad
std
ja
add
cmp
adc
(bad)
cmp
inc
add
adc
add
sar
scas
push
neg
mov
pop
xchg
pop
out
(bad)
sub
(bad)
ds
or
cmp
scas
sbb
jo
out
mov
into
inc
sub
fbld
lock
cli
(bad)
shl
jb
push
pop
mov
std
das
clc
mov
xor
fwait
arpl
sub
gs
leave
sub
nop
mov
pop
xchg
lahf
adc
add
mov
mov
leave
push
rcr
jb
ror
out
add
mov
push
out
xchg
out
aam
aam
mov
or
pop
sbb
pop
scas
cmps
mov
push
cmps
jne
and
adc
and
xchg
xor
rol
xchg
jecxz
lock
push
movs
adc
add
and
cmp
in
mov
adc
mov
or
leave
adc
mov
inc
cmps
adc
push
or
push
jle
repz
add
nop
sub
call
adc
(bad)
sub
adc
mov
out
sub
fiadd
inc
data16
inc
fmul
dec
mov
test
push
push
lea
adc
xchg
dec
stos
push
cld
repnz
inc
adc
ret
ret
je
cli
add
cmp
or
pop
movs
xlat
and
cli
and
inc
std
out
int
sbb
dec
add
std
add
inc
dec
test
and
jmp
lea
retf
(bad)
xor
jl
ret
push
push
dec
pop
fidiv
jb
and
sbb
or
cld
es
push
imul
jmp
std
jle
popa
hlt
jmp
jne
and
sti
add
ins
arpl
and
mov
imul
rcr
test
cmp
dec
scas
jno
mov
cmp
mov
shr
not
and
add
dec
add
and
xor
clc
push
mov
dec
loopne
mov
xor
push
jle
or
mov
pop
add
inc
add
mov
inc
mov
and
mov
int3
inc
or
jnp
mov
dec
or
adc
ret
aas
ins
pusha
mov
mov
inc
mov
push
xchg
ds
call
inc
(bad)
push
fisttp
dec
or
jmp
dec
adc
(bad)
push
mov
or
ret
imul
or
dec
or
push
les
and
adc
mov
xor
fmul
scas
jp
(bad)
sti
div
or
sbb
ins
cmp
sub
dec
inc
lock
adc
inc
dec
nop
xchg
ret
push
fiadd
and
mov
imul
and
adc
enter
adc
ja
mov
push
stc
or
fimul
jp
cs
cmps
outs
xchg
rcl
jg
xor
mov
cmp
or
xor
xor
inc
in
xor
outs
popf
loopne
fs
add
xchg
js
cmps
pop
cmps
cmp
mov
scas
(bad)
pop
push
add
aad
jbe
je
repnz
pop
xor
xor
cmp
add
sbb
sbb
test
add
call
or
inc
push
push
xchg
jno
add
inc
sahf
stc
mov
(bad)
xchg
repnz
rol
pop
mov
adc
add
int
shl
pop
sar
sahf
adc
jns
mov
mov
add
sub
add
cli
aaa
mov
ret
cmp
call
das
test
lea
mov
inc
cld
lock
fistp
call
dec
jne
clc
or
ret
add
mov
and
into
les
adc
fs
inc
add
(bad)
mov
inc
mov
in
jge
aam
aam
mov
mov
add
ins
adc
shl
enter
enter
movs
icebp
add
xlat
sub
dec
repz
xor
push
push
lock
cmp
push
mov
and
push
movs
mov
inc
mov
ret
jmp
fnstenv
mov
in
sar
stc
aas
aam
pop
inc
ret
jbe
xchg
pop
hlt
pop
shr
in
mov
inc
cmp
xbegin
mov
add
das
movs
add
mov
sbb
add
adc
ss
daa
mov
add
and
xchg
sar
push
fdivr
xor
aad
xlat
popa
(bad)
pop
mov
lea
clc
pop
jg
or
je
jle
sbb
pop
cmp
shl
pop
adc
pop
adc
adc
jmp
data16
and
jo
mov
imul
mov
ins
xor
out
out
call
and
clc
shr
aas
js
xchg
or
sbb
mov
mov
inc
dec
ins
pop
fadd
push
sar
bound
sbb
pop
in
leave
rol
push
clc
lock
cmp
(bad)
sbb
push
fisttp
and
fld
fbstp
fcmovb
add
add
mov
loope
lea
mov
and
stc
popa
mov
dec
add
cs
repz
push
paddd
(bad)
test
out
cmp
or
push
cmps
rdmsr
cmp
adc
pushf
adc
push
push
cld
adc
outs
or
lock
movs
dec
sbb
loope
dec
push
dec
or
push
jge
or
shr
or
xor
sub
adc
mul
or
fst
mov
cmp
and
push
xlat
pop
mov
adc
test
daa
pusha
jb
or
ds
pop
sbb
jne
jmp
add
test
sub
jns
(bad)
es
lock
or
pop
dec
fisub
bound
cli
mov
inc
mov
cmp
and
mov
stos
pop
xchg
sbb
push
jle
adc
in
sbb
ficomp
mov
sti
fdiv
inc
daa
lock
mov
dec
xor
aaa
pop
iret
jne
imul
xor
cdq
ret
(bad)
xchg
xor
jmp
shr
dec
mov
aam
out
shl
jne
mov
js
or
inc
test
inc
push
rcl
or
icebp
cmp
inc
or
pop
jb
hlt
jl
add
dec
pop
cmp
jmp
iret
dec
adc
cmp
sti
jmpw
and
mov
dec
jp
mov
and
jmp
xchg
cmp
jbe
mov
pop
jo
sti
dec
pop
dec
bound
dec
push
and
inc
clc
into
sub
jns
ins
sub
jp
cmp
shr
inc
mov
xchg
or
pop
das
or
je
test
imul
aas
out
or
inc
cld
or
push
hlt
pop
pop
inc
or
in
or
mov
scas
add
or
adc
jmp
shr
or
hlt
adc
or
push
sbb
das
mov
cmp
add
and
fs
xchg
test
mov
adc
xor
outs
ret
adc
fmul
push
test
cmovbe
add
xchg
ins
xchg
inc
mov
dec
and
das
ret
or
and
push
jb
fs
(bad)
mov
adc
cs
enter
push
stos
pop
sub
jmp
mov
pusha
adc
adc
add
(bad)
inc
jmp
lea
fsub
outs
push
push
dec
adc
push
and
jg
(bad)
out
push
dec
and
push
jg
outs
inc
or
lahf
out
jge
jbe
jle
xor
jg
jg
and
loop
jg
jo
mov
adc
nop
mov
dec
mov
mov
sub
push
mov
or
sub
prefetch
aam
and
xor
sub
mov
test
call
sar
mov
je
sub
push
jnp
into
ins
int
daa
jp
call
jge
rol
shr
push
in
add
add
xor
clc
in
stos
add
rep
push
jmp
push
xor
mov
adc
in
stos
and
and
rcl
xchg
push
arpl
mov
sbb
les
push
push
jmp
dec
xor
pop
xor
cli
arpl
add
outs
push
lea
in
mov
and
mov
mov
aas
adc
jb
inc
clc
mov
enter
mov
cs
mov
pusha
pop
ss
lods
and
scas
xchg
sub
mov
add
inc
hlt
inc
lods
fwait
jne
sub
push
and
jno
sbb
daa
pop
mov
mov
leave
or
mov
push
add
adc
add
adc
push
adc
sbb
sbb
leave
push
cdq
push
push
jb
movs
pop
push
push
call
sub
mov
std
dec
pusha
xor
dec
dec
in
xor
xor
pop
nop
push
ins
and
mov
push
xchg
movs
lods
scas
push
add
ret
pop
push
and
jge
sbb
cmp
popa
push
scas
inc
fsubr
push
cmp
retf
movs
and
les
xor
adc
xchg
dec
fisub
jns
push
ins
sbb
push
inc
xor
jne
and
fmul
dec
fadd
(bad)
pop
inc
ins
and
adc
das
dec
in
xchg
sub
daa
and
sti
adc
stc
cs
jae
mov
fld
inc
pop
adc
jbe
sbb
mov
push
add
adc
sub
scas
and
and
fisttp
rol
pop
mov
inc
sub
xchg
add
and
or
mov
adc
mov
pop
or
sub
mov
movs
call
clc
mov
mov
fild
pop
daa
push
pop
add
mov
or
icebp
and
fs
pop
push
lods
add
sbb
lods
or
add
inc
jl
out
scas
jmp
nop
add
or
xchg
dec
movs
push
xor
pusha
jo
shl
lods
stos
push
loop
jl
and
nop
dec
mov
sbb
push
sub
mov
(bad)
xchg
sub
inc
add
ret
nop
aam
push
clc
loop
stos
add
movs
xor
jmp
(bad)
mov
sub
cli
out
mov
adc
enter
outs
arpl
adc
pusha
and
push
push
mov
jne
pop
mov
dec
fcom
dec
scas
dec
push
iret
sub
lds
adc
mov
pop
adc
or
adc
mov
popa
add
pop
gs
xchg
sbb
push
fwait
cmps
cdq
stos
jbe
adc
adc
lahf
and
sahf
rol
mov
pop
jecxz
add
or
rol
rcr
rcl
es
xchg
sar
fsub
xor
int
repnz
call
ret
pop
aas
mov
int3
mov
mov
test
push
fnclex
inc
jl
mov
adc
lea
dec
cmp
mov
add
push
mov
or
adc
mov
pop
icebp
scas
pop
jl
jle
inc
push
out
lods
mov
cmp
dec
mov
or
or
xor
(bad)
add
stos
test
and
xor
push
dec
loop
ja
mov
jp
and
mov
mov
cmp
jmp
mov
sub
push
xor
mov
or
mov
cs
in
mov
jmp
cmps
mov
mov
cmp
punpcklbw
xchg
cmp
lods
jmp
adc
push
xor
jg
sub
(bad)
jmp
dec
push
mov
adc
stos
stos
push
test
inc
(bad)
bound
pushf
xchg
pushf
call
clc
or
sbb
jg
mov
jae
aam
or
mov
xor
pop
pop
inc
dec
mov
push
into
shl
pop
cmp
lock
jnp
out
fbstp
nop
add
jne
jmp
mov
push
sbb
or
mov
or
cmp
and
push
fisubr
call
mov
xchg
fsubr
ja
mov
sub
gs
or
pop
pop
pop
add
sbb
pop
stos
mov
mov
sub
cmp
jbe
jo
test
mov
mov
inc
scas
call
sti
je
mov
xchg
mov
mov
sbb
fadd
dec
js
adc
add
inc
test
xor
inc
jmp
ror
rol
cmp
cmp
jmp
cld
pop
jmp
cli
and
push
push
push
jle
lock
rol
or
std
jecxz
popa
mov
and
out
pushf
jmp
push
cwde
mov
xor
inc
shr
aas
dec
hlt
jb
pop
sbb
jne
mov
xchg
adc
call
add
mov
or
movs
ficomp
xlat
test
cmp
outs
xor
mov
adc
mov
(bad)
and
retf
les
jle
data16
xor
or
adc
and
into
xchg
(bad)
lods
sar
sbb
pop
loop
fcomp
cmps
cs
inc
xchg
call
cmp
jne
mov
jnp
daa
jmp
mov
ret
cdq
test
outs
into
mov
test
mov
cmp
add
je
xlat
adc
pusha
stos
lea
pop
push
(bad)
movs
cdq
dec
call
mov
xor
inc
mov
enter
loop
mov
stos
mov
adc
jmp
and
inc
in
cmp
and
or
cmp
cmp
jne
mov
sti
and
xchg
dec
in
cwde
shr
xchg
add
pop
test
adc
dec
test
pop
mov
nop
xchg
jo
push
or
not
push
ret
mov
jle
sbb
scas
retf
sbb
cmp
jb
cmp
ins
or
dec
push
mov
mov
push
add
sub
inc
push
int3
mov
pushf
add
mov
cld
push
in
pusha
cwde
and
mov
push
or
pop
and
fcomp
aam
gs
jmp
fstp
fadd
jmp
fdiv
jg
adc
dec
sub
inc
fld
cmp
hlt
add
in
jge
mov
mov
mov
pop
shl
fnstcw
lods
adc
sahf
sbb
aam
sar
jne
je
pop
inc
sbb
lods
push
adc
rcl
dec
out
push
sbb
dec
or
or
bound
fisub
add
ficomp
fiadd
pop
fidiv
rol
fimul
push
pop
add
jmp
ficomp
(bad)
cmp
xor
pushfw
(bad)
pop
jnp
int3
(bad)
or
(bad)
es
push
retf
into
sbb
adc
(bad)
int3
cmp
add
xor
push
icebp
in
or
rol
jl
jbe
dec
pusha
xchg
or
jmp
cmp
mov
stos
cmp
mov
movups
inc
ret
and
and
or
loopne
mov
xchg
mov
mov
icebp
jns
out
popa
push
inc
add
cmp
sub
xchg
mov
(bad)
in
xor
cwde
mov
inc
(bad)
pop
andnps
pop
shl
push
add
icebp
add
nop
jge
adc
push
dec
xor
sub
cwde
jg
jl
xchg
test
adc
or
ds
sbb
dec
dec
mov
ins
dec
dec
stc
push
pop
add
pop
inc
pusha
mov
sar
push
adc
inc
outs
mov
jne
cmp
cdq
fcomp
or
push
add
enter
mov
or
test
mov
push
gs
movs
add
mov
icebp
xchg
ds
test
jmp
push
fcomp
inc
add
lods
cmp
call
nop
pop
stos
(bad)
clc
mov
ds
ja
pop
test
loope
aas
dec
cmp
adc
and
leave
dec
xchg
jecxz
loopne
cs
mov
daa
cmp
test
fwait
mov
jg
mov
test
jb
xor
or
mov
(bad)
mov
je
lea
dec
bound
stos
or
lods
or
mov
xor
jae
dec
movs
cmp
or
dec
xor
test
test
push
rcr
inc
ins
push
jp
and
adc
sub
adc
test
call
add
(bad)
xchg
or
int
mov
test
js
icebp
dec
mov
push
test
pop
push
cmp
mov
rcl
sub
add
pop
mov
rol
inc
and
daa
leave
sahf
jne
cmp
push
ss
ins
retf
cmp
xlat
add
nop
cmc
test
cwde
dec
cmp
and
out
out
cmp
sub
cmps
or
sbb
pop
sbb
pop
cwde
sbb
out
rol
jecxz
adc
enter
cwde
pop
xchg
retf
test
push
and
inc
or
aam
sbb
popf
outs
lahf
dec
mov
test
out
call
add
imul
mov
adc
xor
fadd
jo
(bad)
or
movs
cmp
stc
push
shr
loope
and
je
add
pop
cmp
aam
je
push
push
add
push
mov
pop
stos
in
loopne
ret
dec
(bad)
repz
nop
sbb
aad
shl
push
jge
mov
mov
inc
push
jo
pop
sub
or
add
sbb
pop
inc
int
jge
fcomp
shr
inc
push
xchg
dec
adc
and
push
sbb
stos
jge
jne
test
sbb
shl
dec
adc
jb
test
add
movs
xor
mov
call
xor
dec
jne
or
scas
mov
popa
add
outs
mov
add
sbb
jg
dec
js
loop
scas
xchg
xor
xchg
inc
mov
ret
jo
data16
add
add
movs
push
daa
adc
pusha
push
lods
dec
lods
mov
test
pop
ins
ror
jo
imul
pop
adc
and
or
or
nop
in
or
jo
add
sti
xchg
jae
adc
call
adc
js
fs
rol
or
into
dec
xchg
ret
sbb
les
call
mov
add
lods
jo
mov
ins
inc
and
push
ret
mov
(bad)
aas
je
mov
pushf
stos
in
cmp
dec
stc
ror
mov
retf
sbb
mov
inc
hlt
or
gs
add
xchg
fsubr
test
inc
cmp
jae
xor
adc
inc
rol
inc
mov
adc
cmp
out
jb
shl
mov
cmp
mov
add
sbb
jb
and
add
retf
xor
rcr
cmp
add
test
add
inc
or
xchg
mov
adc
mov
add
or
nop
daa
and
xchg
jmp
sub
dec
movs
mov
jne
or
pop
dec
sub
mov
push
pop
xchg
movs
add
inc
or
add
and
add
adc
mov
add
mov
icebp
dec
push
push
add
mov
push
and
push
or
push
cmovno
xchg
dec
mov
in
ret
(bad)
popa
xor
stos
push
nop
mov
lods
es
mov
push
jg
jmp
xchg
inc
sbb
movs
je
push
shl
mov
cmp
sub
rcl
push
not
push
(bad)
(bad)
or
cmp
sub
sub
push
ficomp
lods
je
add
push
add
jmp
ror
daa
adc
pushf
pop
dec
cmp
pop
sbb
sahf
inc
push
mov
adc
xor
pop
out
sbb
xor
imul
add
cmc
sbb
cmp
fwait
or
repnz
xchg
jmp
scas
sbb
leave
and
or
pop
or
stos
ins
in
daa
add
jmp
(bad)
add
inc
or
lea
data16
mov
pop
jne
je
sahf
and
jo
neg
cmp
pop
adc
sbb
dec
xchg
call
jns
adc
bound
inc
lods
arpl
cmp
cmp
jp
mov
(bad)
std
pop
(bad)
call
mov
nop
push
imul
call
push
sahf
push
pop
push
dec
sbb
sbb
movs
pop
sbb
and
je
mov
dec
add
test
neg
pushf
popa
retf
cmp
sbb
adc
push
hlt
lahf
stos
mov
xchg
(bad)
lea
popa
outs
pop
(bad)
cmp
sbb
mov
pusha
mov
sbb
sub
fnstenv
sbb
jo
jne
xor
jle
dec
das
cs
(bad)
and
and
retf
sbb
test
inc
add
cmp
ins
loopne
dec
les
les
scas
popa
dec
push
or
pop
jp
sbb
sub
mov
adc
adc
push
mov
inc
rcr
xchg
cwde
pusha
mov
mov
adc
add
lds
imul
in
xor
popf
sbb
movs
pop
mov
cs
ror
or
adc
mov
push
add
push
cmp
pusha
scas
inc
adc
or
mov
add
fidiv
cmp
sbb
rol
inc
dec
push
jbe
and
movs
aam
not
cld
sbb
add
jle
rcr
andnps
xor
and
xor
push
shr
xchg
cdq
clc
and
adc
add
loopne
lods
cmps
and
bound
or
push
xchg
or
dec
sbb
xchg
add
(bad)
cmp
mov
sub
add
test
je
mov
or
adc
mov
xor
fidivr
pop
imul
push
cld
lock
ins
add
pop
dec
sub
dec
push
and
repnz
dec
xchg
movs
push
add
push
test
dec
mov
loopne
add
or
or
test
jae
(bad)
jl
adc
mov
bound
test
ja
push
js
imul
xor
add
inc
add
hlt
hlt
push
nop
or
sub
and
mov
cmp
ror
adc
adc
xchg
xchg
push
or
add
ja
mov
push
sbb
sub
lea
add
loopne
or
mov
cmp
ret
ins
dec
jo
inc
jmp
ins
inc
and
adc
inc
call
push
mov
dec
sar
or
pop
and
add
push
xor
add
xor
lods
shl
add
push
enter
loope
inc
pushf
adc
add
fs
test
jbe
push
fist
mov
mov
mov
test
gs
js
inc
mov
inc
fistp
add
adc
jb
mov
push
or
mov
adc
(bad)
in
retf
mov
sub
inc
mov
jo
fst
(bad)
popa
and
and
jo
mov
mov
and
jne
es
sub
sub
ficom
and
rcl
cwde
popa
cmp
repnz
call
jae
jne
add
mov
pop
addr16
xchg
add
iret
or
pop
jecxz
fwait
and
fs
(bad)
sbb
inc
leave
data16
fisttp
aam
xchg
rol
mov
jmp
and
icebp
stc
sub
sub
adc
cmp
jl
fcom
mov
or
xchg
adc
dec
add
fisttp
mov
stos
call
enter
xchg
and
sbb
sub
push
add
aam
mov
stos
jge
jecxz
add
pop
clc
cmps
leave
cmp
adc
and
lods
(bad)
jmp
jge
push
cmp
(bad)
gs
pop
inc
xchg
pusha
sub
scas
sbb
push
push
xchg
add
add
xor
ror
pop
getsec
hlt
mov
pop
out
inc
or
and
mov
arpl
in
mov
adc
test
(bad)
out
rcl
cmp
inc
and
cli
adc
add
mov
xchg
call
adc
and
xlat
push
mov
sbb
adc
xor
test
push
dec
scas
dec
pop
hlt
adc
inc
test
imul
xchg
push
mov
push
popf
add
fyl2x
jmp
scas
pop
xchg
sbb
call
sub
sub
cld
dec
ins
ins
cld
inc
repz
push
pop
scas
in
pop
mov
retf
push
fimul
into
loope
lea
push
mov
inc
retf
xor
out
or
or
push
and
in
aam
or
lods
lods
pusha
movs
mov
data16
xchg
add
test
pop
jmp
jno
xchg
cmp
sbb
and
and
push
or
push
movs
push
add
sar
add
add
lea
mov
and
or
out
aas
js
add
inc
cmp
xchg
sahf
pop
push
adc
in
data16
arpl
push
mov
add
dec
popa
sub
mov
cld
cmp
xchg
add
int
add
jnp
aaa
mov
pusha
mov
xchg
lea
sub
dec
mov
loopne
push
mov
int3
jl
and
xor
outs
cmps
inc
in
push
or
jmp
(bad)
xchg
add
aam
(bad)
das
popa
das
shl
jg
jp
inc
add
ret
push
aas
push
aaa
xor
ds
psubb
or
mov
or
js
or
je
and
mov
jl
xchg
sbb
and
push
in
and
popa
xchg
nop
mov
mov
sub
mov
sbb
test
jno
xor
jg
pop
inc
fwait
daa
push
mov
pop
cwde
push
or
add
outs
call
scas
sbb
jge
ret
push
or
iret
pop
inc
pop
sbb
(bad)
je
add
push
inc
dec
push
sub
push
add
sub
movnti
dec
xor
xor
adc
pop
xor
sbb
and
sub
das
enter
(bad)
cmps
cmp
int3
pushw
and
js
sbb
push
add
or
inc
imul
mov
or
js
mov
mov
call
and
adc
(bad)
popa
je
sub
ja
in
addr16
adc
sti
cmp
or
jb
js
or
push
add
and
ret
inc
fdiv
rcl
xor
xor
sub
xchg
popa
mov
xor
push
call
or
adc
inc
shr
or
or
push
mov
pop
fadd
or
inc
adc
sub
sbb
dec
psadbw
inc
inc
das
xor
dec
mov
and
pop
push
push
imul
cld
push
in
out
jo
or
and
jne
ret
mov
push
jl
add
aas
(bad)
mov
daa
test
add
dec
inc
xchg
stos
or
lods
and
cmp
sub
mov
and
xlat
dec
mov
and
pop
and
ret
adc
xor
mov
shl
ds
leave
fstp
cdq
cmp
push
test
ret
rol
fsub
jmp
add
push
dec
enter
push
test
rcl
or
and
inc
pop
adc
mov
sub
lods
push
fisubr
add
pop
mov
imul
dec
lock
adc
sbb
inc
das
mov
imul
test
jnp
popa
and
pop
(bad)
and
mov
pushf
mov
loop
cdq
add
pusha
inc
std
push
adc
adc
pop
pop
inc
gs
addr16
data16
mov
ret
cmc
int
mov
or
jge
jmp
mov
mov
push
sub
xchg
out
push
int3
add
out
arpl
(bad)
call
sub
and
pop
cmp
mov
retf
add
icebp
sbb
in
push
int
bound
out
cmp
les
and
push
and
add
or
dec
adc
ins
enter
jp
add
sbb
push
mov
and
rol
push
jbe
push
adc
xchg
(bad)
icebp
push
pop
add
fs
sbb
pop
jmp
adc
adc
xor
cli
adc
adc
lea
lea
or
add
mov
fild
fisttp
pop
jo
sub
mov
pop
(bad)
retf
sub
inc
mov
jbe
shl
mov
fadd
sbb
add
or
mov
jo
xchg
push
mov
inc
mov
add
call
imul
sbb
sbb
push
ret
add
mov
jl
loopne
shl
sbb
shl
cmp
xor
out
add
pop
je
jae
clc
or
jbe
ins
retf
or
sbb
add
mov
stos
popa
pop
add
or
arpl
call
clc
and
dec
cwde
lods
je
mov
sbb
inc
lahf
and
sub
shr
gs
mov
cmp
or
addr16
icebp
or
jl
inc
jo
pop
jg
push
and
in
jae
inc
sub
adc
add
sub
inc
fcomp
imul
cmc
jmp
(bad)
jmp
and
pop
retf
or
mov
cmp
(bad)
pop
cmp
push
mov
mov
add
sbb
xor
mov
add
inc
ret
push
or
jmp
push
sbb
inc
mov
or
pop
jl
maxps
fdiv
mov
adc
and
sbb
bound
xchg
lea
xor
pop
mov
add
rol
push
mov
cdq
fmul
outs
or
push
sbb
mov
cmp
in
out
ficom
add
sbb
push
rol
cmp
add
push
test
and
outs
add
sbb
scas
shl
or
fiadd
lods
stos
aas
imul
inc
mov
push
mov
movs
dec
add
sbb
add
push
in
pushf
stos
sbb
adc
pop
jmp
add
cmp
daa
sbb
es
cli
pusha
out
and
pusha
sub
out
and
dec
xor
pop
movs
out
sub
sbb
outs
mov
mov
outs
popa
out
dec
sbb
(bad)
adc
cmp
push
sbb
out
dec
add
movs
scas
jns
jmp
movs
inc
jno
sbb
aaa
jbe
lea
hlt
jae
jg
or
jl
push
ffree
out
cmps
pop
xchg
mov
lea
pop
push
or
push
pop
add
inc
jne
add
imul
or
push
add
or
sbb
shl
xor
mov
push
ds
aad
sub
or
pop
cmp
test
dec
arpl
or
add
jnp
inc
cmp
add
mov
add
test
push
call
jne
scas
mov
and
xor
mov
pop
ret
mov
add
sub
icebp
jb
push
dec
cmp
xchg
push
and
(bad)
sbb
or
add
out
pop
push
sbb
add
stos
xlat
mov
fwait
test
dec
and
inc
or
lods
mov
mov
movs
call
daa
ficom
sbb
pusha
add
xchg
stos
out
jmp
mov
push
xor
pop
div
mov
pop
adc
aas
or
mov
dec
ror
jecxz
mov
fcomp
mov
mov
xchg
dec
or
mov
inc
es
adc
pop
mov
int
dec
dec
test
jl
adc
loop
xor
test
imul
dec
clc
fimul
jo
lds
xchg
sbb
popf
in
shl
mov
dec
adc
push
push
jno
ins
rcl
fdivr
jnp
cmp
lods
into
aas
jb
hlt
cmp
je
mov
push
push
sbb
sbb
push
mov
inc
push
jmp
adc
je
cmp
loopne
push
movs
test
adc
inc
outs
xor
retf
mov
test
adc
pop
push
mov
cmp
dec
inc
or
dec
outs
cmp
lock
inc
ja
adc
push
jp
dec
ret
sahf
xchg
je
sahf
sub
cs
fcom
xor
sbb
scas
or
ja
enter
xchg
(bad)
cld
cmp
je
mov
sbb
push
mov
bound
fisub
sbb
hlt
jecxz
pop
adc
push
lock
mov
push
inc
and
aam
add
lock
ret
jns
or
push
stos
pop
add
mov
pop
xchg
mov
mov
cli
cmp
xchg
xchg
pop
(bad)
lea
sbb
push
shl
fisubr
adc
add
jo
dec
ret
sub
ss
mov
fsubr
push
or
dec
and
das
xlat
fild
bound
imul
scas
es
fnsave
or
push
inc
add
loopne
sub
and
or
or
mov
clc
(bad)
sub
jp
lock
fs
es
and
push
int3
and
mov
pop
mov
enter
push
adc
mov
sub
dec
pop
push
xchg
xchg
int
xchg
xchg
bound
out
push
jp
int3
in
mov
mov
pop
push
push
int
call
les
inc
fadd
cld
and
sbb
sbb
jo
enter
or
mov
dec
test
push
out
or
je
adc
dec
in
xchg
leave
retf
aas
in
call
sub
cmp
or
pop
add
jmp
adc
dec
rol
push
dec
jnp
inc
push
or
cli
outs
and
adc
or
bound
das
add
lods
fsub
std
push
adc
xchg
test
and
cs
dec
xchg
add
or
or
nop
fld
adc
fcmovne
outs
or
adc
or
jb
nop
or
jmp
sbb
add
dec
mov
and
fld
pop
inc
dec
or
cmp
adc
test
add
(bad)
xlat
or
mov
jp
add
adc
or
sbb
sub
or
clc
inc
dec
mov
pop
adc
lock
and
mov
dec
cmc
popf
mov
jl
and
jecxz
jge
fdivr
int3
out
or
jo
sbb
xor
pop
fwait
mov
mov
sub
and
sub
sbb
pusha
and
(bad)
xchg
aam
fldcw
pusha
mov
add
pop
sub
dec
and
sub
xchg
jecxz
pop
fstp
shl
pusha
pusha
(bad)
shl
add
ins
in
pop
mov
test
adc
adc
pop
jns
dec
sti
add
add
test
adc
cli
xor
mov
push
movs
ja
sub
mov
imul
or
or
scas
push
push
fs
sbb
pop
or
dec
mov
movs
test
ins
jae
push
data16
jnp
lods
xor
push
and
inc
add
adc
add
inc
fld
fstp
jmp
fld
pop
fcmovnbe
pop
or
sbb
and
sub
adc
movs
adc
xchg
pop
scas
fimul
sub
xor
cmps
jmp
or
(bad)
or
cmp
push
pushf
and
lea
enter
bound
movs
mov
xchg
add
(bad)
ds
in
lods
sbb
add
sub
sub
jmp
sub
inc
dec
push
jp
push
or
psubusw
xchg
out
add
adc
int3
movs
xor
in
aam
aam
leave
cmp
mov
pop
cmp
or
outs
mov
inc
or
jmp
pop
jnp
into
outs
jge
ret
push
clc
cdq
and
mov
adc
mov
xor
jl
dec
or
mov
mov
push
xor
les
sbb
pop
dec
xchg
ins
lock
inc
xor
push
lock
int3
ins
jo
push
loopne
or
scas
loop
cwde
jmp
pop
pop
sub
out
and
and
gs
std
pop
sbb
das
mov
push
out
dec
or
cwde
sahf
pop
cli
or
adc
mov
add
jmp
and
aam
push
push
sti
fsub
push
mov
(bad)
xor
in
push
dec
call
push
mov
or
mov
je
inc
and
jl
sbb
adc
mov
and
add
sbb
or
les
add
inc
sbb
(bad)
xchg
and
outs
std
rol
popa
mov
adc
ret
je
pop
(bad)
or
mov
fsubrp
fwait
jno
mov
dec
inc
and
cmp
pop
rcr
mov
pop
and
or
cmp
stos
adc
jo
and
dec
adc
in
in
or
push
dec
loopne
add
xor
inc
(bad)
push
lods
mov
loopne
int3
pushf
cmp
adc
popa
cmc
addr16
add
adc
mov
sub
pusha
sbb
inc
retf
test
and
sbb
loop
gs
rol
and
sbb
xchg
mov
sub
push
fstp
mov
pop
mov
fnclex
pop
dec
cmp
sub
fstcw
dec
push
or
jae
test
cmps
jl
fldcw
fs
cld
leave
inc
js
push
push
push
adc
xchg
scas
or
sub
sbb
mov
cdq
inc
ret
and
adc
mov
and
and
test
or
sbb
fstp
sbb
add
jb
nop
or
ds
(bad)
fsubr
dec
jge
aam
sbb
icebp
inc
inc
add
add
cmp
(bad)
sbb
sub
stos
and
xor
cs
mov
push
xchg
mov
add
sbb
adc
inc
inc
xchg
sbb
inc
and
mov
daa
xchg
retf
sbb
pop
adc
jbe
dec
cwde
(bad)
adc
(bad)
jg
popa
fild
or
jae
shld
shl
ret
stos
sub
aam
push
loop
shrd
rcl
jmp
shr
in
adc
pop
dec
add
mov
sub
cmp
push
jge
test
fs
test
mov
inc
cmp
adc
sub
sbb
loopne
dec
and
jmp
sub
xor
sub
mov
or
pop
push
fwait
mov
or
mov
sub
push
jp
and
outs
adc
xchg
jp
push
push
cmp
and
jns
jnp
retf
xor
movs
xchg
cmp
adc
mov
sbb
mov
push
fstp
mov
inc
pop
inc
cmp
(bad)
imul
fistp
pop
push
addr16
jne
mov
or
adc
jb
cmp
je
addr16
loopne
xor
sub
std
jp
mov
xlat
fmul
sahf
or
mov
inc
jo
ret
outs
jbe
fldcw
scas
inc
loopne
mov
(bad)
inc
inc
jmp
das
and
loope
int3
add
pop
dec
add
and
cmp
jge
stc
and
fcomp
fmul
daa
pop
jb
pop
add
jbe
adc
mov
mov
mov
shl
adc
sbb
lea
scas
movs
movs
sub
sbb
sbb
jge
sbb
pop
mov
push
push
or
inc
push
push
jbe
loop
or
mov
pop
sub
xchg
mov
add
push
data16
xor
jne
or
sbb
push
mov
movs
or
cli
push
neg
ins
imul
add
jns
push
pop
call
xchg
and
iret
add
jmp
fisttp
jb
pop
aad
or
sub
mov
fxam
mov
push
ds
cld
jg
shl
loope
stc
rol
mov
and
xlat
and
dec
mov
add
cdq
bound
int3
and
sub
out
fisub
das
and
rol
mov
sub
pop
ror
or
pop
out
jmp
sbb
adc
imul
ret
or
out
fstp
or
test
call
ret
stgi
add
sahf
or
pop
or
pop
pop
faddp
inc
or
test
sti
pop
xor
cmp
jg
js
or
test
add
loopne
add
xchg
rcr
push
add
mov
shl
pop
add
adc
push
test
ret
shr
loopne
lock
mov
dec
and
push
addr16
xchg
hlt
cmps
xor
and
sbb
inc
sub
pop
fmul
in
fisttp
inc
sbb
sub
push
adc
add
jmp
mov
(bad)
adc
jno
mov
sub
or
jb
mov
rcl
fld
es
out
jge
stc
adc
das
ret
or
aas
div
dec
fsub
push
fdivr
adc
sub
and
jmp
push
push
and
(bad)
or
sbb
or
adc
xchg
adc
scas
ins
push
lea
shl
(bad)
pop
cdq
xchg
add
or
movs
cwde
sub
mov
dec
pop
out
xor
or
retf
pop
jb
retf
not
xchg
adc
(bad)
jge
fisub
das
pop
enter
retf
retf
outs
xchg
add
jnp
dec
adc
(bad)
jge
in
rcl
out
xor
add
int3
mov
sbb
mov
adc
(bad)
mov
imul
add
int
in
cs
int
pop
mov
xchg
or
mov
pop
mov
xor
add
ins
jb
xchg
into
iret
into
cmp
or
mov
lods
pop
fisub
out
xor
das
push
cmp
or
test
mov
jg
or
loopne
cmp
jle
add
add
cmp
gs
outs
sub
sub
inc
mov
push
mov
fcomp
inc
sub
seta
lock
push
cdq
fisttp
fnstsw
add
or
fmul
pandn
addr16
add
inc
(bad)
and
enter
add
add
jl
xor
and
push
arpl
pop
ins
addr16
pop
cmp
push
xchg
push
sub
mov
test
test
jo
pop
sub
jno
inc
ficomp
es
cs
sbb
popa
test
ss
adc
ficomp
ja
sar
xor
ja
xchg
cmp
xlat
xor
js
hlt
sub
mov
ss
rcr
adc
sub
mov
es
fwait
shr
or
test
(bad)
mov
jb
loopne
fstp
jmp
lock
xor
aaa
es
ret
xchg
xor
mov
cdq
mov
movs
cmp
(bad)
aas
mov
ret
add
add
ins
ficom
sub
shl
pop
sub
call
or
adc
fstp
and
fld
jb
stc
adc
xor
je
fchs
jmp
das
push
cmp
fnsave
xchg
and
add
push
fcmovbe
jl
xor
enter
sbb
test
xor
or
fs
inc
or
bound
or
add
(bad)
jns
push
xor
aaa
aas
mov
mov
test
test
add
push
mov
jb
jns
pushf
jecxz
icebp
out
add
repnz
sub
(bad)
cmp
dec
add
sti
xchg
sbb
mov
adc
jmp
jns
movs
loopne
or
and
inc
push
shl
sbb
outs
ret
inc
jb
and
imul
and
mov
das
adc
jns
dec
or
mov
repz
ret
push
push
cmps
pop
enter
(bad)
mov
push
adc
add
xchg
sub
or
add
in
cmps
mov
fdiv
leave
aaa
fsubr
push
cmps
xchg
dec
(bad)
mov
adc
inc
mov
jbe
repnz
imul
cmp
test
inc
les
jle
mov
push
gs
cmp
ins
push
xor
jecxz
cmc
pop
mov
sub
pop
cmp
xor
mov
inc
jo
jmp
test
push
rcr
inc
jl
inc
ret
sub
or
sar
pop
xchg
add
into
sbb
pushf
mov
sub
cmp
ret
adc
mov
call
outs
scas
and
test
push
and
push
push
sti
mov
aas
push
xor
mov
and
int3
mov
stos
orps
ds
test
adc
outs
mov
movs
jo
adc
loopne
pop
mov
stc
adc
inc
add
or
sbb
dec
jno
mov
adc
imul
xchg
fdiv
(bad)
(bad)
nop
and
mov
loope
or
mov
inc
inc
fidiv
lea
jmp
int3
cmp
mov
pusha
adc
adc
push
mov
rol
fisttp
lock
stos
ficom
out
add
xor
sbb
sub
cmp
push
sub
add
xor
push
sbb
dec
and
in
in
cmovbe
(bad)
fisub
popa
cmps
loopne
add
rol
aaa
or
and
pop
xor
(bad)
xor
add
and
jns
sub
loope
jo
lahf
nop
push
mov
mov
fs
out
sub
sahf
mov
xchg
jo
ins
mov
movs
div
or
jo
fst
pop
sub
lea
mov
pop
dec
mov
cmp
sub
mov
lods
jnp
adc
imul
push
xchg
and
xor
pushf
or
stc
js
pop
dec
retf
inc
push
sbb
add
push
sbb
out
stc
jmp
adc
adc
ror
pop
stos
pop
(bad)
pop
sbb
add
push
push
or
pop
dec
inc
sub
jmp
icebp
xchg
push
ins
and
sbb
mov
pop
push
std
repz
jne
imul
dec
and
and
leave
call
cwde
adc
inc
adc
xor
movs
dec
or
inc
pushf
dec
pop
xchg
cs
test
or
inc
gs
jg
ja
mov
adc
add
sbb
pop
cmp
inc
adc
push
ret
repz
pop
mov
xchg
xor
xchg
mov
test
nop
adc
pop
mov
xchg
ret
shl
xlat
cmp
data16
fdivp
mov
or
cvtpi2ps
out
jne
adc
and
inc
out
mov
pop
push
push
push
push
and
mov
fimul
aam
retf
pushf
jge
int3
cmpxchg
(bad)
movhps
cmp
ror
shl
js
mov
mov
lock
push
sbb
inc
jb
fbstp
out
xor
push
adc
mov
and
jge
cmp
xchg
fldcw
es
sar
push
jle
ins
sub
and
dec
data16
push
jle
test
push
movs
or
or
add
mov
pop
xchg
xor
(bad)
dec
enter
test
jb
mov
rol
or
mov
push
xlat
mov
xor
inc
test
xor
ret
or
fsub
sbb
cmps
add
or
fs
jo
mov
and
add
xchg
mov
and
push
mov
retf
push
fmul
es
add
and
add
loop
pop
ror
push
ror
mov
xor
and
add
xlat
sbb
inc
lea
aad
lea
adc
pusha
add
add
jmp
sbb
scas
lea
and
mov
mov
push
jno
(bad)
sbb
push
mov
and
and
adc
fwait
jg
mov
push
mov
outs
or
add
mov
jne
mov
or
fcmovnu
daa
inc
add
outs
jmp
ss
mov
push
leave
or
xchg
test
pop
rol
push
cmpps
or
or
xor
fadd
adc
add
add
inc
xor
inc
enter
mov
and
mov
mov
jp
aas
gs
mov
mov
adc
xchg
mov
sbb
out
sbb
lock
call
mov
cmp
inc
inc
retf
sub
daa
or
cmp
movs
mov
mov
or
cmp
mov
mov
dec
repz
or
fs
loopne
mov
adc
or
fdiv
fiadd
mov
or
sbb
jo
lods
adc
adc
inc
clc
xor
jmp
(bad)
shl
shl
xor
dec
ds
adc
cmp
shr
mov
and
movs
adc
xor
and
sbb
add
dec
jmp
popa
cmova
inc
xor
push
xchg
push
cmps
dec
js
adc
push
or
pusha
iret
cmp
sbb
push
or
call
xor
add
sub
or
and
inc
inc
jne
inc
in
ror
xchg
dec
sub
push
add
jmp
mov
xchg
pusha
ds
jne
pop
das
rcr
pop
or
adc
(bad)
data16
fisttp
jmp
pushf
cmp
adc
mulsd
push
adc
fld
sbb
adc
jo
fst
cmp
int
add
sub
sar
loop
in
and
xchg
or
int
jecxz
js
js
ins
fsub
loop
call
mov
rcl
cs
jns
imul
js
pop
sbb
jnp
iret
pop
sar
repnz
push
pop
ror
aaa
jb
mov
loopne
push
xor
out
fadd
outs
pop
or
iret
cld
jecxz
jae
jnp
cmc
mov
in
dec
adc
cmp
mov
fisttp
int
into
unpckhpd
ins
js
sub
or
mov
loopne
(bad)
pushf
imul
push
and
pop
dec
inc
call
or
aas
fwait
cmp
fsub
f2xm1
fld1
(bad)
pop
jae
enter
pusha
xchg
push
inc
push
ret
ffreep
(bad)
adc
mov
out
fld
add
cmc
add
add
add
(bad)
out
push
push
sbb
or
movs
enter
or
cli
sub
and
fstp
test
and
ret
jge
mov
pop
pop
ret
or
dec
ds
je
or
hlt
push
mov
mov
push
jbe
sub
xor
cmps
jbe
adc
je
xlat
pop
mov
sti
retf
and
jne
sbb
mov
leave
jl
add
or
push
jae
fcom
lods
and
mov
sub
add
movs
xchg
jg
inc
cwde
je
loopne
dec
call
add
dec
or
aas
xchg
call
loopne
sbb
idiv
jge
ins
or
add
sub
cli
leave
test
pop
pop
jb
add
add
nop
add
push
pop
mov
pop
pop
xchg
shr
and
cmp
cmp
loopne
inc
dec
inc
mov
xor
(bad)
dec
sbb
dec
jp
cmp
mov
js
stos
mov
jle
cmps
cmp
or
and
cmps
ds
rcr
sub
(bad)
jmp
lods
inc
add
push
mov
and
inc
add
mov
data16
dec
or
adc
ja
xchg
in
or
dec
(bad)
popf
and
and
inc
jl
js
xchg
stc
and
fs
or
(bad)
dec
mov
pusha
jmp
push
je
sub
int3
pushf
xor
mov
mov
push
mov
jne
mov
sahf
or
mov
mov
add
js
inc
fstp
outs
jecxz
inc
lock
jg
test
mov
inc
cmp
dec
mov
push
pop
popa
mov
popf
mov
je
push
push
mov
icebp
mov
add
das
sub
lods
inc
mov
xchg
les
mov
mov
jl
cmp
outs
imul
jp
sub
push
or
add
or
dec
shl
jno
and
adc
mov
adc
pop
inc
and
pop
sbb
xchg
mov
add
pop
dec
sub
mov
ror
retf
stc
inc
daa
mov
mov
je
into
fisttp
popa
jmp
test
jne
fnstenv
mov
movs
fcomp
movs
mov
(bad)
jmp
mov
sub
dec
jmp
xor
push
or
mov
adc
add
mov
or
add
mov
or
pop
sbb
mov
stc
sbb
xchg
and
js
and
mov
xchg
std
jbe
adc
add
sbb
icebp
xchg
cli
je
xor
add
clc
sub
push
inc
je
dec
xor
mov
xchg
add
into
inc
add
xor
icebp
jp
test
dec
lock
pop
popa
shl
jp
popa
adc
mov
ins
ficom
sbb
sbb
dec
and
popa
xchg
sub
sbb
and
loope
push
idiv
fadd
adc
ss
test
xchg
test
jg
cmp
fisttp
icebp
inc
or
lods
add
femms
add
mov
xchg
lock
sub
mov
in
(bad)
push
push
or
xor
xchg
iret
nop
xor
dec
sub
inc
pusha
fistp
pop
jne
cdq
sub
mov
cmp
mov
adc
and
pusha
pop
inc
outs
jmp
sbb
movs
in
jmp
lods
mov
mov
add
adc
jne
jmp
repnz
ror
push
and
jecxz
or
je
cmp
fisubr
lods
mov
test
jge
sub
and
fidiv
sbb
(bad)
les
mov
jmp
cmp
push
inc
pusha
mov
push
loop
test
push
test
or
mov
pop
xor
or
lock
(bad)
iret
xor
cmp
mov
inc
mov
sar
pusha
fst
mov
and
jg
lods
push
push
mov
cmp
jmp
cmps
cmp
push
shl
jle
jmp
push
stos
in
dec
call
xor
push
enter
xchg
and
jo
fcmovu
ss
mov
sbb
jne
ins
sbb
jmp
test
fcom
or
mov
not
push
shl
adc
test
mov
pop
rol
push
or
add
call
xor
xor
sub
mov
add
add
pop
sbb
dec
push
test
stos
sbb
cmp
mov
adc
imul
push
in
push
shl
pop
es
push
sbb
ins
aam
cmp
jne
pop
sbb
adc
sub
xor
cwde
xchg
dec
test
adc
adc
add
inc
cmp
push
sbb
push
(bad)
cdq
mov
in
rol
mov
fmul
sub
sub
repnz
ins
(bad)
lea
mov
adc
mov
adc
add
imul
or
cmp
cmp
adc
ss
and
and
sub
in
in
xor
cmp
inc
and
leave
leave
leave
in
inc
cmovs
jb
leave
push
pop
add
jb
fs
jb
je
jl
in
sbb
imul
test
mov
and
pushf
mov
movs
test
sub
adc
sbb
call
inc
fidiv
and
or
xor
pop
push
jg
nop
ss
pushf
and
sub
movs
cdq
adc
sbb
cdq
nop
or
adc
or
movs
cmp
xor
and
out
pop
out
adc
pop
push
jo
add
icebp
xchg
int3
mov
pop
xchg
mov
movs
sti
add
xor
cmp
retf
rcl
add
dec
inc
add
scas
jne
je
mov
mov
inc
inc
lods
dec
cdq
enter
repz
mov
ret
mov
or
xor
into
mov
fisub
xchg
inc
sub
movs
les
sub
or
ror
push
fsubr
adc
je
adc
pop
outs
mov
aad
imul
sets
jmp
adc
mov
inc
ss
mov
mov
loop
iret
rol
push
jmp
sbb
mov
out
jns
mov
mov
pop
dec
(bad)
pop
fcom
or
or
lea
push
sub
nop
xor
shr
xchg
add
rol
add
add
push
pop
add
sub
jbe
mov
or
adc
or
add
mov
mov
jne
sub
stc
sbb
shr
lds
inc
push
fisub
pushf
mov
pop
mov
inc
test
push
or
fwait
jns
shr
mov
arpl
push
xchg
das
mov
jnp
in
pusha
mov
rol
adc
and
add
lods
lock
popa
jnp
imul
cmps
add
sub
or
inc
or
jns
or
out
nop
push
ins
adc
dec
sbb
push
adc
fcmovb
push
jg
sbb
ror
loopne
in
mov
jne
inc
pop
add
lock
add
or
sub
and
ins
cmp
xor
call
cld
je
mov
sbb
push
test
dec
pop
das
adc
dec
or
add
dec
jl
cli
adc
jne
mov
cli
nop
or
sbb
mov
inc
and
lea
hlt
push
fbld
mov
push
fs
adc
inc
mov
push
jg
and
and
xchg
or
test
adc
and
outs
lods
xor
cmp
or
or
or
clc
add
aam
mul
fs
repnz
add
in
add
adc
add
mov
in
popa
test
lea
mov
push
push
jl
and
mov
ret
add
jle
xlat
jmp
std
cld
sub
cmc
adc
mov
push
lahf
cmp
mov
jmp
test
fcom
dec
(bad)
xchg
popf
int
scas
into
(bad)
ds
sbb
or
sbb
push
pop
dec
movs
mov
(bad)
lods
int3
cmp
jne
pop
fwait
shl
pop
sub
push
adc
add
(bad)
stos
mov
push
loopne
sbb
fdivr
dec
sbb
shr
dec
sub
add
or
jecxz
nop
push
jle
mov
adc
adc
add
and
cdq
push
xor
adc
ss
lock
mov
test
fisttp
mov
adc
cmc
fs
add
inc
loopne
ins
cmps
lea
mov
pop
or
test
int
and
adc
jg
add
mov
retf
dec
push
xor
push
xchg
mov
bound
push
sahf
(bad)
fisttp
test
adc
add
push
sub
ss
pinsrw
in
lds
jge
sub
scas
adc
shr
jmp
and
cld
and
xor
fsubr
add
jmp
and
fiadd
aaa
push
xchg
imul
je
ss
adc
mov
bound
nop
retf
je
jbe
sbb
xor
mov
imul
jbe
or
leave
adc
add
sar
adc
jbe
push
pop
sbb
movs
nop
pop
mov
jne
xchg
or
jo
jmp
popa
ss
int
push
jecxz
and
ja
xchg
dec
add
or
lock
sbb
ja
mov
push
rol
or
pop
sbb
cmp
int
jne
push
add
mov
jge
cmp
dec
imul
or
pop
fs
aaa
shl
test
mov
adc
adc
adc
or
clc
cs
leave
adc
cmp
cmp
jge
and
mov
cwde
call
add
xchg
loopne
xor
pop
push
ja
daa
inc
dec
mov
imul
test
mov
rcl
adc
pop
mov
inc
daa
mov
dec
cli
nop
push
xchg
loopne
mov
pop
dec
lahf
pushf
jnp
out
into
vcvttss2si
bnd
es
hlt
and
push
push
jns
and
loopne
adc
(bad)
sar
pop
(bad)
xor
add
js
imul
cmp
adc
push
cmp
adc
push
sub
loope
sar
mov
rcr
and
ja
dec
adc
push
add
add
xor
pop
sbb
push
lds
call
test
mov
jle
imul
shl
or
jbe
pop
sbb
imul
mov
adc
repnz
or
js
add
mov
sub
test
(bad)
mov
inc
into
mov
repz
imul
mov
push
shl
scas
jmp
pop
rcl
pop
aam
sub
dec
shl
dec
cld
dec
cld
mov
enter
popf
pushf
pop
sub
add
popf
ds
cmp
add
cld
xchg
or
push
data16
pop
div
xor
js
stos
ins
test
add
pusha
mov
adc
out
cmp
mov
mov
adc
add
mov
or
inc
dec
out
leave
les
push
cwde
push
mov
mov
sbb
lock
ficom
jo
movs
rol
dec
push
or
lods
fnstenv
dec
sbb
jp
add
jo
shr
mov
jl
js
adc
lea
enter
jb
jb
imul
and
lods
cmps
add
add
inc
push
test
ret
xchg
adc
in
inc
jbe
lea
xchg
and
(bad)
imul
sbb
pop
jmp
inc
jl
add
cmp
sub
xor
push
pop
mov
inc
and
add
pop
jb
not
or
arpl
into
mov
add
and
adc
cld
sbb
sar
lds
add
adc
xchg
scas
imul
cmps
fldcw
mov
add
sub
adc
mov
add
sbb
or
inc
sbb
add
inc
call
jne
cwde
mov
mov
dec
loop
bound
add
add
retf
add
add
test
and
sub
push
or
add
add
(bad)
pop
sbb
cmps
mov
sti
add
adc
inc
loop
xlat
call
pop
fbstp
push
add
add
mov
sbb
and
stos
pop
pop
shr
loopne
aam
lea
xor
xor
sub
shr
add
fs
sub
pop
mov
pop
js
retf
or
call
gs
jae
loop
loop
rol
inc
push
adc
or
cld
cdq
ins
pop
and
ret
jmp
sti
mov
out
mov
inc
mov
fwait
or
dec
mov
cmp
add
or
and
jmp
push
sub
sbb
cmp
cmp
lods
in
ffree
add
dec
mov
adc
ret
sbb
retf
adc
shl
adc
push
jp
sbb
dec
add
je
mov
or
dec
stos
aam
popa
jge
mov
leave
js
xchg
and
mov
dec
xor
cmp
es
ror
or
lods
or
out
sub
add
popf
sbb
test
xor
ret
add
shr
or
and
and
mov
or
dec
mov
ror
xor
jo
mov
mov
sub
adc
int
mov
jl
mov
out
pop
xor
pop
hlt
test
push
adc
xor
or
mov
push
lea
jb
shr
ss
icebp
push
or
cmp
inc
and
pop
sub
cli
imul
add
jo
add
mov
ret
loope
icebp
dec
dec
int3
jae
cmp
and
or
cmovp
adc
mov
out
rcl
push
jge
pop
or
and
xchg
push
cmps
into
out
mov
aam
test
and
into
sub
dec
push
out
and
dec
sub
inc
or
mov
mov
rcl
ror
scas
shl
mov
js
rol
add
fldcw
icebp
sub
or
int3
xchg
in
mov
push
push
and
mov
sbb
add
cmp
rcr
xchg
add
mov
mov
or
xchg
mov
pop
cmp
and
pop
mov
mov
adc
adc
enter
inc
lods
imul
or
shr
js
dec
sbb
sub
push
mov
dec
inc
shr
ror
repz
push
loope
or
mov
xchg
adc
dec
add
mov
hlt
test
ins
jg
or
je
jmp
xchg
test
mov
or
xchg
dec
add
mov
jmp
mov
cmp
pop
jne
lock
loop
inc
inc
inc
mov
jne
mov
fistp
mov
fldz
call
inc
popa
jp
add
lock
retf
jo
sbb
pop
je
jne
push
add
or
xor
or
add
xor
std
sbb
xor
push
sbb
cmp
test
add
ins
add
add
push
add
std
mov
pop
ret
shl
cmps
sbb
adc
jmp
rcl
dec
sbb
fcom
dec
aas
and
sub
pop
add
pop
rcr
sbb
js
mov
es
or
add
std
jb
ror
or
mov
sub
and
and
jle
sub
mov
xchg
push
call
and
rol
mov
lea
inc
inc
inc
jl
jle
call
cmp
ret
pushf
lock
scas
add
add
enter
and
sbb
or
push
loope
mov
inc
lahf
(bad)
sbb
dec
add
inc
mov
mov
inc
or
neg
rcr
jl
cdq
xchg
retf
(bad)
idiv
add
mov
push
or
xor
add
test
and
xor
add
inc
jmp
mov
stos
xor
push
js
push
sbb
shl
push
aam
xchg
push
xor
sbb
cmp
add
add
dec
gs
pop
jmp
call
or
fwait
adc
adc
sbb
fndisi(8087
jge
scas
sub
adc
lahf
inc
test
out
adc
sbb
xor
push
enter
mov
ret
or
cmp
and
sbb
inc
mov
xor
cmps
push
adc
push
push
loope
pop
js
and
add
mov
dec
fdiv
and
dec
repnz
idiv
push
mov
fnstsw
fsubr
popa
call
enter
jecxz
fdiv
or
and
inc
adc
shr
fidiv
cli
add
adc
fs
and
aam
push
test
sbb
adc
lock
add
outs
adc
lahf
jnp
sbb
ret
pop
mov
into
or
mov
icebp
and
cmp
std
xchg
push
mov
enter
js
dec
xor
adc
call
fisttp
inc
loopne
mov
add
fisub
xchg
xor
out
shr
js
xor
mov
ss
dec
fwait
rol
sub
inc
pop
loopne
sti
pop
jl
lock
ret
daa
xor
or
jne
pop
cmp
sub
es
sub
add
pop
or
adc
test
pushf
gs
or
neg
or
adc
(bad)
cmp
adc
jb
or
xchg
adc
dec
and
add
(bad)
shl
adc
inc
outs
inc
and
and
xchg
loop
add
cmp
das
rol
fadd
into
ins
cld
or
add
shrd
push
jle
mov
les
enter
out
jge
sbb
cwde
or
shr
(bad)
cmp
xor
out
ret
xchg
mov
add
loopne
ror
mov
inc
call
loop
js
xor
pushf
mov
mov
xchg
lock
ret
mov
fsub
pop
and
sub
pop
sbb
jle
aam
js
ret
jb
push
sub
inc
clc
pop
mov
neg
and
xchg
cmps
(bad)
lock
mov
jg
shl
push
(bad)
out
add
xchg
test
lock
mov
jg
mov
jb
fs
mov
inc
inc
pop
dec
pop
or
jo
mov
or
sbb
xor
addr16
adc
adc
mov
lods
inc
or
add
mov
fwait
test
(bad)
leave
repz
jbe
xor
sbb
and
adc
cmp
add
cmp
mov
and
lea
mov
and
shl
sbb
xchg
test
xchg
add
inc
daa
jp
jge
mov
jne
jl
xor
pop
and
and
dec
adc
pop
dec
add
call
or
cdq
fs
sbb
nop
push
xchg
sbb
cmp
mov
cmp
add
sbb
xchg
add
jo
push
nop
dec
ds
shl
jne
cmp
mov
rcl
mov
jbe
pop
dec
sub
mov
sbb
cmp
pushf
pop
sub
pop
ror
imul
jmp
ins
cmp
jo
jl
jbe
push
ret
dec
mov
or
mov
das
rol
push
cmp
xor
scas
pop
gs
ds
clc
gs
or
pop
data16
mov
jae
es
leave
clc
dec
inc
popa
je
mov
ins
fs
je
dec
retf
xor
mov
jmp
cmp
sub
scas
retf
test
push
dec
or
push
ret
cmp
ja
(bad)
dec
ja
adc
(bad)
push
sti
mov
fld
fdiv
fmul
ins
add
sbb
data16
push
push
(bad)
ror
push
in
inc
jmp
and
push
mov
rcl
enter
jns
pop
into
popa
mov
scas
xchg
dec
adc
prefetcht2
and
clc
add
popa
mov
add
lea
or
and
shr
sar
jp
adc
(bad)
outs
and
sub
shr
or
lock
add
or
bound
cmp
lods
lock
int3
push
xchg
sti
in
mov
hlt
fs
sbb
fild
push
cwde
inc
adc
mov
adc
mul
test
ja
or
dec
test
movs
push
mov
jo
push
fidiv
adc
pop
dec
enter
jp
adc
icebp
push
adc
adc
sub
mov
jecxz
in
mov
iret
icebp
sahf
pop
cmp
rol
ror
push
xor
xchg
pop
or
rol
xor
ret
xchg
pusha
mov
push
cli
mov
sbb
push
not
mov
ret
push
push
loop
sbb
pushf
je
add
or
loopne
mov
sbb
push
sar
(bad)
dec
sub
imul
or
test
or
je
data16
mov
test
or
adc
pop
outs
xchg
or
repnz
cmp
mov
cmc
mov
push
push
push
jmp
dec
and
push
sbb
sub
data16
jne
pop
dec
out
adc
ror
fadd
xchg
rcl
pop
push
jnp
push
sub
lock
sbb
(bad)
push
push
xchg
pop
or
push
push
lods
mov
jecxz
adc
pop
mov
je
popa
inc
sbb
inc
popa
inc
ret
data16
push
aam
aas
test
mov
addr16
inc
mov
mov
dec
or
in
add
pop
cmps
fcmovbe
jge
mov
jle
mov
cmp
ret
push
push
or
add
add
xchg
pop
pop
push
adc
mov
jb
sub
push
push
(bad)
adc
mov
xchg
addr16
or
rol
push
nop
adc
fdiv
cmovno
mov
add
dec
sbb
xchg
xor
stos
retf
loope
add
push
inc
pop
cli
test
jmp
xchg
mov
dec
pop
add
test
mov
fcomp
ret
shl
xchg
inc
add
retf
test
dec
cmp
gs
mov
mov
or
aam
xchg
dec
push
aad
out
aam
adc
xchg
loopne
sbb
cdq
push
mov
xchg
nop
(bad)
xor
imul
jo
xchg
inc
add
and
xor
pop
shl
cmp
je
or
test
push
dec
push
adc
(bad)
aam
push
add
aas
test
pop
jmp
mov
sahf
xor
sub
cmp
inc
sbb
xchg
out
or
or
cmp
jbe
shr
pop
inc
je
adc
sub
jecxz
and
(bad)
fcomp
mov
add
icebp
mov
int
enter
push
cmp
sti
test
aaa
push
sub
sub
jne
cmp
ficomp
and
xlat
lock
jae
adc
repnz
or
enter
adc
cmp
xor
shl
cmp
sub
popf
xor
push
pop
outs
cdq
add
ror
xchg
fiadd
in
das
adc
fidiv
es
sbb
movntq
in
cmps
push
gs
pusha
psubsw
inc
cld
cmp
test
push
hlt
or
dec
cmp
test
shr
mov
dec
clc
sbb
fsub
xchg
rcr
lock
lahf
dec
add
jge
push
pop
inc
push
int3
adc
div
mov
sbb
add
fs
(bad)
test
sub
pop
les
mov
push
dec
fcom
ds
clc
and
mov
ins
fs
pop
popa
aam
sub
stos
fnstsw
jbe
test
sub
xor
ss
(bad)
clc
adc
sub
xor
pop
dec
and
mov
xor
cmp
test
mov
mov
or
cld
add
or
aad
loopne
mov
test
and
dec
pusha
pop
xchg
add
lods
ss
add
and
mov
mov
test
and
or
mov
add
sub
call
add
xor
pop
dec
sti
jmp
cmp
je
cmp
and
shr
clc
jecxz
cli
sti
adc
stos
lock
or
jmp
xor
add
push
test
ficomp
xor
mov
and
imul
adc
sbb
mov
xchg
or
call
add
pop
xchg
les
jne
mov
cwde
lods
in
add
or
add
mov
dec
add
or
clc
mov
popa
ror
adc
clc
mov
fcomp
inc
xchg
cmps
lea
adc
add
cmps
test
inc
inc
jecxz
mov
xor
and
xor
inc
or
add
jmp
and
or
cmp
dec
pop
mov
inc
and
movs
sbb
push
call
mov
iret
lds
(bad)
jecxz
mov
push
icebp
adc
shr
jmp
out
inc
sub
and
pop
ret
out
(bad)
sub
push
pop
pop
add
ficom
ret
fmul
and
inc
inc
dec
or
add
pop
pop
les
je
popf
and
pop
aad
mov
lds
(bad)
xlat
test
fwait
and
xchg
add
push
or
xchg
push
and
mov
pop
push
xchg
aad
fs
xor
and
xor
pop
loope
scas
dec
xchg
or
cmp
pop
imul
pusha
ds
clc
cld
xor
cmps
lods
inc
add
cmp
es
call
sub
aam
aaa
fimul
mov
stos
jp
or
cmp
dec
daa
fdivr
jge
imul
inc
out
icebp
jne
rcr
int3
into
xor
and
mov
mov
pop
xor
jecxz
sbb
(bad)
pop
adc
test
(bad)
pop
inc
and
mov
cmp
mov
ud0
je
adc
sbb
mov
shl
repz
dec
add
rol
rcl
cmp
cmps
cmp
stos
inc
mov
push
mov
xchg
mov
mov
and
aaa
in
sbb
pop
div
mov
pop
ins
adc
fiadd
je
adc
(bad)
jne
not
neg
shl
add
fisubr
cmp
jo
and
stos
add
push
pop
or
adc
push
push
mov
mov
mov
into
sbb
pop
les
mov
ins
inc
scas
fst
sbb
add
dec
push
push
sbb
cmc
ret
pop
arpl
addr16
int
or
data16
call
rol
(bad)
jmp
push
ror
sbb
cld
inc
mov
mov
or
adc
rol
push
and
add
or
scas
or
pop
js
inc
ror
enter
sbb
add
call
data16
xchg
dec
(bad)
fwait
in
das
or
dec
xor
ret
adc
sqrtps
mov
dec
scas
fimul
and
gs
clc
or
aam
(bad)
push
jmp
hlt
cmp
es
rcl
mov
xchg
cmp
adc
stc
mov
rol
test
call
add
cmp
pop
test
loop
(bad)
jmp
bound
xchg
push
mov
mov
xlat
or
mov
dec
cmp
rol
push
jnp
mov
mov
mov
jle
adc
pop
clc
jl
dec
ret
adc
push
movs
out
es
or
je
dec
in
inc
add
daa
inc
adc
lock
into
mov
dec
or
xor
mov
inc
sbb
push
imul
popf
(bad)
xor
dec
cld
or
inc
push
xor
push
push
and
jne
stc
dec
(bad)
ficomp
les
ret
jecxz
rcl
sbb
enter
pop
push
lea
mov
sub
cmp
sbb
cmp
mov
cwde
and
mov
mov
cmps
(bad)
mov
inc
js
push
pop
inc
mov
daa
or
jmp
ins
inc
(bad)
mov
add
jns
pop
enter
mov
push
or
push
enter
inc
movs
push
push
mov
stos
mov
enter
inc
sbb
or
push
push
pop
pop
pop
pop
ds
mov
aaa
mov
jbe
mov
sbb
jle
push
cmp
cwde
or
jg
pop
pop
add
pop
pushf
pop
cmp
mov
mov
inc
pop
dec
pushf
sahf
jbe
out
sbb
mov
js
jno
ror
xor
cmp
cmp
push
xchg
repz
cmps
sbb
sub
ss
push
mov
test
je
cmp
push
ins
call
push
adc
push
adc
rol
adc
pushf
cs
outs
cmps
call
or
dec
add
mov
test
cmp
dec
adc
xor
add
add
fadd
mov
or
stos
adc
cld
shl
popf
mov
pop
and
cmp
mov
scas
or
movs
int
push
push
pop
int
fdivr
sbb
inc
cs
hlt
dec
movs
jno
fdiv
jp
mov
(bad)
daa
push
lea
inc
or
lahf
(bad)
je
sub
enter
rol
ret
xor
cmc
mov
in
in
or
jl
push
pop
or
js
in
push
xor
fsubr
repnz
xor
daa
cmp
cmp
cmp
xor
pop
call
pusha
nop
add
je
nop
add
cmp
pop
adc
rcr
das
int3
je
inc
push
dec
sub
xor
inc
(bad)
jno
add
outs
add
movs
push
dec
and
adc
mov
lods
or
iret
jle
add
sbb
or
jns
mov
pop
sbb
ss
adc
mov
inc
jae
and
es
test
bound
sbb
je
or
jnp
in
lods
xor
add
inc
and
in
in
sbb
dec
and
add
pop
loopne
mov
push
dec
or
ror
or
add
in
popa
add
inc
jmp
add
push
mov
call
push
pop
dec
add
mov
adc
push
inc
push
loope
jecxz
adc
adc
push
pop
call
hlt
and
inc
iret
xchg
inc
mov
outs
dec
addr16
(bad)
jmp
call
mov
jecxz
inc
or
add
jae
and
dec
sbb
xchg
fisttp
in
xchg
pop
sbb
ret
es
push
jbe
cmp
sub
push
fisub
or
pusha
or
sbb
push
pop
push
clc
popa
inc
mov
push
stc
sub
rcr
hlt
ret
pop
retf
add
test
push
push
mov
push
ret
test
inc
repnz
mov
pop
outs
dec
inc
out
pop
sub
ss
(bad)
sti
outs
push
imul
push
adc
jmp
pop
inc
cmp
or
inc
daa
ror
iret
int3
je
xor
push
sahf
add
mov
bndldx
fadd
dec
sub
add
pop
aad
in
fsubrp
push
push
int
push
sub
inc
jne
push
jle
sub
adc
pop
call
add
das
loopne
pop
mov
call
add
add
ss
inc
in
add
pusha
and
adc
pop
sahf
dec
or
jne
sti
ffree
add
rcl
movs
fnsave
mov
jle
lea
loopne
add
ja
pusha
pop
xor
xor
add
retf
sbb
leave
inc
xor
jg
adc
jmp
adc
xor
jmp
je
(bad)
clc
inc
inc
and
iret
inc
outs
adc
push
pop
lods
xor
jnp
loope
adc
adc
inc
push
push
mov
push
push
inc
add
and
sbb
iret
mov
or
jmp
xlat
push
inc
and
imul
idiv
sub
and
sub
and
add
add
push
jmp
shl
dec
add
cld
xchg
ins
adc
enter
shl
test
add
pusha
or
mov
mov
mov
fcmovu
add
outs
or
add
mul
(bad)
pop
or
push
mov
ins
clc
ret
stos
sbb
adc
ds
jo
ss
mov
add
xor
and
sbb
clc
and
sahf
dec
dec
movs
pop
shr
test
or
les
inc
push
fmul
mov
mov
and
es
push
add
dec
sub
dec
imul
cmp
in
inc
cmp
inc
inc
sub
sub
sbb
cs
ss
sbb
leave
dec
jns
jecxz
inc
cmp
jmp
idiv
and
test
or
fimul
clc
jecxz
add
or
pop
pushf
add
rcr
out
je
pop
mov
sbb
push
adc
fnsave
daa
jg
mov
ins
mov
mov
movs
or
fs
gs
add
mov
and
dec
xchg
std
mov
jne
in
out
mov
fsubr
in
mov
pop
add
sbb
jo
ins
xor
inc
lods
das
push
xor
cmp
sbb
js
or
ins
jl
icebp
cld
mov
push
shl
jbe
xchg
shl
mov
movs
test
out
push
xor
or
mov
repz
and
loope
out
sbb
push
jg
jb
je
pop
ror
pop
xchg
jo
inc
mov
mov
nop
rol
adc
or
hlt
sti
mov
hlt
jmp
cmp
jg
jl
jae
push
pop
and
gs
dec
ret
cmps
add
test
cdq
adc
inc
outs
in
push
jae
jne
mov
push
aaa
mov
and
dec
repz
cmps
mov
in
call
fnstcw
push
jmp
loop
add
jge
xor
xchg
adc
pop
mov
and
pop
push
sub
addr16
cmp
ret
sbb
xor
sub
jmp
sbb
mov
or
movs
xchg
mov
add
jp
and
pop
scas
sbb
in
sbb
stc
xor
adc
jmp
mov
std
clc
and
xchg
enter
or
shl
(bad)
jle
leave
inc
dec
jge
lea
(bad)
and
arpl
push
icebp
ror
xchg
pop
in
fs
pop
dec
dec
mov
(bad)
jmp
adc
rcr
aaa
pop
mov
cmp
or
sbb
cmp
or
mov
add
mov
dec
sbb
or
bound
xor
lock
call
push
push
jns
push
dec
dec
xchg
jo
and
push
jle
inc
pop
mov
cmp
inc
sbb
and
xchg
loopne
imul
or
in
test
mul
(bad)
push
cmp
cmc
hlt
or
adc
and
adc
push
jle
inc
or
push
mov
xchg
loopne
inc
aas
mov
sbb
jbe
jmp
cld
ss
push
fbstp
ss
adc
bound
pop
or
inc
outs
(bad)
lea
jg
jp
popa
shl
mov
push
gs
dec
leave
inc
std
lock
(bad)
jmp
add
push
fld1
in
add
dec
call
loop
add
rol
movs
cld
out
adc
jne
inc
or
inc
inc
cmp
jp
lock
je
pushf
add
cmp
push
dec
retf
enter
dec
adc
dec
ins
out
sahf
test
ror
push
rcl
rcl
lahf
out
sahf
aad
xlat
fcomp
(bad)
add
fstp
outs
mov
adc
add
lock
xchg
shl
dec
popa
aam
jbe
mov
and
pop
xchg
mov
mul
movs
or
push
add
push
add
dec
pushf
adc
adc
test
sbb
xor
gs
mov
cvttps2pi
inc
adc
push
iret
xor
mov
cmp
stc
adc
das
or
push
in
(bad)
shr
inc
jg
stos
add
sub
ror
push
cmps
push
pop
jmp
mov
adc
jmp
mov
jmp
sbb
or
sbb
or
hlt
push
mov
dec
loope
xchg
test
fild
pop
adc
and
loop
cmp
add
push
fstp
test
stos
push
les
xchg
bound
(bad)
and
add
es
fs
inc
push
inc
push
ds
pushf
sbb
adc
or
fmul
dec
pushf
mov
mov
or
adc
xchg
retf
movs
mul
(bad)
and
xor
pop
adc
and
ins
pop
aaa
mov
imul
sbb
xor
and
xchg
sbb
gs
jne
inc
imul
xor
loopne
(bad)
es
hlt
or
add
inc
cwde
jl
pushf
jnp
ror
cmps
jb
push
inc
call
cmps
shr
movs
mov
fadd
add
jae
sub
pop
lea
movs
jo
outs
test
dec
push
lea
mov
cmp
lods
data16
sub
jo
dec
scas
(bad)
(bad)
nop
js
pop
imul
ret
not
out
dec
bound
inc
test
adc
shl
inc
loop
imul
clc
jg
add
mov
clc
or
or
lock
dec
pop
jle
or
jb
ror
(bad)
mov
icebp
mov
sub
retf
push
sub
lods
add
je
stos
shl
add
mov
cmp
sbb
ins
(bad)
fdiv
mov
cmps
out
mov
shr
mov
mov
iret
mov
shl
push
pop
jns
push
lock
movs
test
cli
xchg
call
imul
repnz
jge
call
adc
or
loop
or
push
out
dec
ret
push
sbb
jmp
jbe
call
xor
(bad)
call
sub
std
icebp
call
je
aas
mov
rol
dec
and
(bad)
mov
clc
arpl
clc
mov
loopne
and
leave
xchg
rcr
clc
test
pushf
inc
es
cld
inc
mov
les
mov
(bad)
cmc
cmps
rcl
inc
movs
sub
jmp
jne
fmul
aam
mov
push
retf
mov
aam
lods
lods
push
cld
clc
adc
mov
in
cmps
push
sub
aaa
pop
pop
(bad)
mov
cmp
cmps
fidivr
mov
add
movs
mov
xchg
pop
pusha
cmp
push
push
cmp
jle
stc
xchg
retf
cs
fisttp
fcmove
mov
lods
and
jno
mov
jecxz
int
clc
(bad)
neg
pop
add
lahf
test
leave
xchg
push
pop
jmp
fimul
pop
je
xchg
sar
push
cdq
xor
outs
lock
jne
(bad)
bound
icebp
adc
xchg
inc
enter
push
jb
pop
das
add
pop
dec
repz
retf
inc
inc
inc
inc
dec
repz
loopne
xor
mov
mov
or
jo
and
adc
daa
sbb
imul
lds
fwait
inc
rol
jnp
add
xchg
inc
into
sahf
xchg
pusha
jmp
out
sahf
push
pop
cmp
xchg
push
in
je
out
cmp
sub
mov
test
mov
loopne
call
pop
sahf
adc
inc
dec
dec
rcl
dec
ss
dec
out
or
jp
xor
fcompp
jle
inc
(bad)
into
stos
frstor
push
loopne
data16
adc
sbb
imul
cmps
inc
xor
movs
stos
clc
lea
lock
clc
push
mov
pop
cmp
gs
in
xchg
loopne
sbb
or
or
adc
xor
or
ret
enter
mov
add
pop
cmps
nop
sbb
fcomp
xchg
clc
mov
inc
dec
enter
cmp
loop
shl
add
sub
xchg
jmp
pop
jne
lods
pop
mov
neg
cmp
jge
call
cwde
dec
nop
inc
in
push
pop
add
xor
inc
(bad)
mov
cmp
outs
ror
add
dec
cmp
jae
inc
syscall
jecxz
or
add
fadd
pop
push
loope
add
xchg
jmp
jp
and
and
int
and
dec
and
add
push
add
inc
test
mov
mov
inc
scas
cmps
rol
jle
add
add
add
test
mov
sub
test
push
sbb
push
mov
stos
and
scas
sub
mov
or
or
or
adc
or
or
cli
pop
jne
or
or
lods
out
adc
cmp
je
push
jbe
or
jge
mov
test
adc
or
jae
add
test
mov
rol
mov
iret
xor
test
inc
and
push
pop
mov
pop
and
dec
cs
pop
sub
mov
pop
adc
or
pop
pushf
or
and
ret
or
add
test
fnstcw
jmp
adc
sub
or
retf
or
jo
dec
push
add
add
push
enter
(bad)
mov
lahf
(bad)
mov
cs
sub
inc
jg
or
jmp
pop
jmp
add
jmp
mov
sbb
jo
icebp
sahf
pusha
xchg
sbb
mov
and
shl
ret
fisub
jo
ret
sub
nop
dec
(bad)
mov
imul
adc
rol
push
xchg
adc
xchg
dec
pusha
add
xor
cmp
jnp
inc
mov
sbb
mov
enterw
retf
dec
stos
and
into
xchg
inc
sbb
fisttp
test
or
add
or
js
dec
add
add
pusha
into
loop
push
pusha
adc
sar
sbb
shl
mov
jne
dec
sbb
sub
retf
repz
mov
js
outs
pop
sub
push
pop
mov
add
test
xchg
in
mov
ins
add
or
jle
mov
sti
(bad)
fs
push
in
sub
ja
pop
test
sub
rcr
add
popf
retf
xor
retf
in
mov
shl
and
(bad)
cdq
add
ror
xlat
(bad)
jg
xchg
daa
daa
retf
ins
jb
sbb
shl
shl
pop
add
hlt
ror
adc
imul
clc
push
jae
pop
loopne
fimul
rol
cli
mov
sbb
push
sbb
add
inc
ins
and
inc
or
loopne
mov
adc
push
xchg
ss
mov
push
mov
cwde
and
add
aaa
mov
jle
loop
test
sbb
jle
ret
mov
xchg
xor
mov
pop
xchg
ret
sub
mov
data16
ret
ret
(bad)
pop
sub
cmp
xor
dec
sbb
xchg
xlat
mov
dec
rcl
lock
repnz
and
sub
or
ins
add
and
push
cs
inc
sbb
mov
mov
and
add
mov
out
je
mov
adc
xor
push
dec
pop
push
sbb
shl
pop
sbb
idiv
lds
dec
sbb
out
call
or
pop
fmul
xchg
jns
jmp
and
lods
into
(bad)
sbb
or
add
xor
jge
add
test
mov
into
inc
or
repz
movs
push
lds
xchg
test
dec
pop
repnz
test
loopne
mov
arpl
mov
addr16
dec
pop
ds
sbb
inc
ror
test
in
ret
popf
adc
inc
push
cmp
rcl
test
or
jle
push
xor
mov
out
and
stos
inc
enter
aaa
loopne
test
jb
sub
jge
imul
sbb
pop
add
sub
fcomp
sbb
or
mov
cmp
xchg
inc
sbb
stos
xor
in
(bad)
mov
cld
xchg
inc
cwde
lea
je
fs
mov
imul
sub
push
inc
test
outs
and
mov
out
cmp
popf
scas
push
shl
add
pop
(bad)
dec
ds
lods
ficom
adc
push
mov
push
xlat
push
and
sub
sub
mov
(bad)
xchg
sub
and
leave
add
test
and
push
int3
cmp
sbb
fidivr
mov
add
mov
or
xchg
repz
add
mov
fidiv
imul
jne
fldenv
xchg
or
fild
add
(bad)
push
adc
cmp
jmp
(bad)
and
xor
sub
sbb
ins
in
sbb
fbld
repz
cmp
sub
test
add
fiadd
add
cmp
cmp
mov
hlt
mov
sub
cmp
push
mov
pop
mov
dec
mov
dec
je
mov
test
xchg
xor
and
mov
add
cld
pop
cmps
fisub
inc
mov
dec
lea
push
mov
pop
retf
cmp
loope
jle
ins
test
in
inc
dec
mov
pop
add
dec
pop
test
mov
or
jl
retf
je
jmp
push
loop
mov
add
(bad)
jl
push
sub
leave
push
test
ja
sub
pop
sar
mov
xchg
sbb
dec
and
mov
adc
inc
dec
in
adc
pop
push
das
push
xor
xor
mov
adc
sub
push
enter
push
movs
scas
loopne
imul
adc
sbb
retf
bound
dec
mov
add
sub
sbb
fldcw
shl
inc
pop
inc
jle
cmp
dec
adc
cmp
push
movs
push
or
sbb
fild
and
jo
push
push
add
pusha
mov
(bad)
imul
push
xchg
or
jmp
je
and
gs
cmp
xor
pusha
mov
out
adc
loop
mov
mov
add
daa
cmp
or
ins
add
push
or
sbb
clc
ror
jbe
dec
mov
push
push
mov
aaa
push
add
sbb
pop
jle
and
or
pop
rol
dec
and
(bad)
ins
mov
out
adc
add
and
or
xor
inc
inc
inc
int3
or
cmp
enter
ficomp
xlat
inc
scas
push
pusha
imul
or
add
push
adc
test
add
dec
test
jne
push
push
add
add
jo
mov
(bad)
je
push
(bad)
bound
add
adc
inc
and
add
je
add
sub
into
mov
sub
fisttp
(bad)
jmp
pop
jp
push
mov
sbb
test
push
dec
mov
add
dec
mov
sbb
jae
xchg
add
es
loop
xchg
je
xchg
adc
push
push
addr16
push
add
jo
(bad)
push
jae
push
or
add
push
lods
mov
cmp
jp
and
sbb
or
mov
cdq
inc
stos
loope
xchg
lods
in
aas
in
add
push
loope
mov
push
dec
inc
in
cmps
loopne
xor
mov
int
sbb
jb
or
sub
jno
mov
pop
xchg
data16
data16
pop
iret
shl
sbb
and
ret
call
inc
daa
xor
sbb
je
mov
xor
sbb
daa
mov
lahf
cli
inc
pop
mov
inc
loopne
div
lea
enter
js
push
cmps
mov
dec
pop
int
push
imul
shl
movs
add
xchg
(bad)
jo
push
imul
mov
jmp
test
and
sub
push
push
adc
adc
mov
pop
test
jmp
cwde
sbb
int3
add
sub
sar
cvttsd2si
push
xchg
mov
test
je
pop
push
push
dec
les
xor
mov
fistp
cmps
xchg
mov
idiv
jmp
fnstcw
or
xor
aam
test
fs
adc
fdivr
mov
test
add
(bad)
outs
add
jg
push
push
mov
adc
cmc
stc
jmp
aas
mov
dec
or
adc
push
push
push
and
jno
dec
and
sub
xchg
in
cmp
mov
movs
sbb
xor
jmp
not
sbb
mov
mov
mov
shl
sub
or
sti
sbb
push
adc
sub
fst
adc
dec
sbb
sub
out
lds
and
sub
inc
ficom
lock
out
not
xor
aaa
cmp
sbb
mov
cmp
sti
xchg
inc
cmp
pop
jb
jp
mov
mov
pop
mov
mov
and
aam
add
push
sub
(bad)
adc
ror
jns
pop
adc
or
adc
jge
mov
add
add
cmp
repz
imul
add
stos
in
cmp
repz
in
data16
aas
idiv
inc
add
adc
xchg
dec
pop
les
lods
xchg
nop
inc
sbb
inc
add
add
(bad)
(bad)
(bad)
inc
jne
addr16
jb
jae
outs
je
pop
and
and
je
outs
ins
aaa
repz
jmp
gs
and
and
outs
jo
imul
popa
mov
sti
mov
xor
dec
outs
sub
jne
bound
cmps
mov
pop
mov
jae
je
and
push
dec
dec
or
mov
jae
shl
popa
sbb
popa
and
ins
ss
jmp
xor
popa
jmp
in
sbb
outs
jle
je
call
or
jb
(bad)
dec
xor
mov
into
repz
and
jbe
jne
push
pop
imul
imul
jge
adc
adc
jne
jo
arpl
jne
fs
test
mov
ins
pop
fstp
lods
ja
imul
add
je
jbe
jne
add
or
ins
inc
mov
xor
aaa
aaa
push
mov
and
inc
sub
jl
fs
add
jle
outs
sub
add
ins
xchg
pusha
add
dec
inc
sub
aaa
fsubr
js
ins
retf
xor
call
(bad)
pop
xor
jle
in
sub
jae
shr
sub
or
ja
and
je
sahf
pusha
add
in
jo
add
or
jl
data16
pusha
lahf
ret
add
jge
jo
and
cmp
sub
sub
push
pop
and
push
xchg
outs
test
xchg
push
imul
jb
das
je
aad
xor
mov
sub
jns
js
sub
mov
adc
js
out
dec
and
imul
out
push
outs
imul
sbb
sub
push
inc
inc
jne
js
jl
js
arpl
je
ins
fs
push
imul
or
xchg
ror
imul
lds
sti
js
cmp
js
sahf
retf
jmp
and
and
xor
call
outs
gs
neg
push
ins
dec
push
sub
jne
adc
ror
ins
xor
mov
adc
jae
out
movs
rcl
call
sub
lds
jno
mov
add
push
jo
cmp
stos
lods
inc
out
cmc
mov
cmp
jae
push
pop
ja
outs
data16
cmps
pop
jl
adc
loop
xor
cmp
adc
into
dec
push
dec
pop
dec
jbe
jnp
test
or
mov
cmc
pop
pop
addr16
xor
xchg
push
and
js
mov
shr
xchg
sub
add
and
sbb
xor
xchg
sub
inc
or
adc
mov
mov
cwde
inc
jo
imul
lock
mov
(bad)
cmp
outs
lock
fadd
sub
push
pop
mov
push
popaw
sbb
mov
jns
inc
add
sub
xchg
fisttp
rol
aas
call
xchg
adc
addr16
rol
pusha
push
sub
icebp
outs
jnp
pushw
inc
jp
ret
scas
sbb
dec
dec
(bad)
pop
adc
int3
xor
add
out
push
das
icebp
icebp
arpl
cmp
lea
pop
rol
xor
inc
fild
pop
ja
rol
cmp
adc
sub
xchg
pop
in
cmp
dec
call
sbb
push
push
adc
lahf
cwde
addr16
jo
ret
jecxz
sahf
into
and
push
cmp
ins
push
es
je
pop
push
or
mov
xchg
mov
popf
jnp
mov
or
xor
xor
jae
sbb
and
dec
mov
fsub
call
dec
gs
in
sub
jnp
pop
sub
push
jmp
or
dec
in
cli
pop
shr
jo
cmp
xor
xadd
mov
dec
push
xor
pop
(bad)
sub
std
imul
arpl
(bad)
call
addr16
jb
ins
or
cmp
cmp
cmp
cmp
sbb
hlt
fs
call
jmp
(bad)
in
push
(bad)
stc
das
idiv
inc
cld
or
add
pop
add
inc
(bad)
fnstsw
add
push
call
add
pop
or
repnz
repz
or
das
imul
or
test
ins
push
fs
repz
push
dec
push
inc
cmp
repz
xor
and
add
rol
dec
or
dec
dec
or
pushf
pop
sti
(bad)
pusha
pop
mov
mov
and
dec
das
add
ja
jb
xchg
inc
rcl
add
and
pop
and
and
add
fcom
aas
add
xor
and
sub
sahf
ja
loop
add
pop
jae
jo
or
imul
scas
sahf
arpl
sub
addr16
stos
jl
dec
push
ret
out
cmp
popa
outs
popa
gs
jne
jne
inc
mov
push
imul
ja
pop
jbe
sub
xor
add
mov
mov
out
fisub
les
sub
xchg
push
outs
push
ins
or
popf
imul
cmps
push
ds
mov
push
pop
push
and
into
(bad)
repz
outs
imul
cmp
sti
fst
push
pushw
gs
mov
es
jae
cmp
fmul
je
cmp
fs
cld
js
dec
fcmovne
jbe
aam
dec
addr16
scas
dec
outs
push
fiadd
outs
gs
cmps
jne
dec
xor
push
jb
or
imul
std
push
outs
push
gs
mov
ins
(bad)
dec
push
dec
jne
jns
out
outs
ins
ins
mov
ja
test
cmp
ins
bound
retf
pop
out
mov
es
dec
push
pushw
pop
outs
jae
call
sbb
push
repz
outs
adc
fs
test
mov
dec
lock
bound
push
push
sub
jmp
dec
add
jne
ins
jne
mov
fcompp
push
(bad)
pop
bound
movsx
cmp
arpl
xchg
iret
je
outs
sahf
jecxz
shl
add
outs
jo
inc
gs
adc
jecxz
jno
pop
add
mov
ins
ins
aas
push
mov
mov
pop
outs
adc
daa
cmps
mov
sub
push
out
adc
setl
push
ja
push
sub
out
ret
pop
inc
bound
es
out
push
lods
popf
mov
nop
out
adc
mov
mov
stos
outs
fsub
push
ret
sbb
dec
popa
ins
inc
(bad)
outs
sahf
pop
jbe
xor
popa
bound
inc
dec
add
add
add
add
iret
push
int3
or
jnp
add
mov
push
imul
or
pop
push
call
push
add
jge
mov
loopne
out
out
clc
cld
pop
push
pop
psrlw
add
pop
jb
add
cmp
(bad)
xor
add
pop
mov
sbb
add
add
jmp
add
xor
pop
sar
xchg
jle
fcomp
inc
aam
xchg
mov
setle
das
or
rol
mul
retf
add
lods
(bad)
add
repnz
pushf
add
add
or
push
loopne
in
add
add
add
pop
dec
xor
and
add
retf
xchg
das
pop
add
add
into
lahf
test
xor
nop
repnz
add
sbb
int3
pop
add
jl
into
loopne
iret
push
das
shr
mov
mov
mov
add
cld
cdq
push
iret
add
pop
add
add
cmp
sub
outs
and
jl
js
or
je
rcl
mov
push
cmps
and
aas
xchg
jne
or
(bad)
ds
ret
imul
inc
movd
sub
or
sub
xor
xor
sbb
push
sub
sub
pop
retf
pop
ret
pop
adc
or
adc
add
into
xchg
adc
add
hlt
xor
(bad)
push
or
inc
add
add
loopne
xchg
fdivr
aam
sub
pop
pop
push
shr
pop
add
cs
comiss
ds
nop
mov
outs
aas
xor
test
xor
rdpmc
loope
in
add
add
pop
dec
xor
pshufb
add
xchg
das
cmp
inc
pop
(bad)
add
sti
cs
cmp
dec
xor
sbb
nop
or
cmp
add
or
or
or
adc
pop
out
add
add
inc
loopne
ret
mov
iret
add
test
cmp
ds
inc
or
movs
add
push
addr16
imul
outs
mov
jae
jne
ja
jns
pop
pop
(bad)
aas
lds
cmps
pusha
aas
jnp
jge
jg
add
dec
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
(bad)
(bad)
(bad)
jmp
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
(bad)
(bad)
(bad)
dec
leave
retf
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
(bad)
cld
(bad)
(bad)
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
mov
push
add
inc
inc
inc
sahf
arpl
dec
dec
dec
dec
dec
dec
dec
outs
push
push
or
pop
pop
(bad)
fiadd
cmp
jle
jle
mov
mov
lods
out
pop
inc
mov
ins
fadd
xchg
shl
aas
or
clc
pop
xor
ja
xor
test
fstp
mov
inc
add
sbb
jge
stc
outs
jge
add
pusha
adc
stos
pop
mov
add
enter
rol
add
pop
enter
adc
mov
test
mov
mov
or
add
jb
test
add
outs
and
(bad)
mov
sbb
mov
inc
inc
jo
dec
dec
jns
aas
add
or
jnp
mov
(bad)
fisttp
stos
mov
push
mov
xor
pop
sar
in
inc
(bad)
(bad)
cmps
stos
fcmovne
adc
push
add
adc
rcl
xchg
dec
add
scas
(bad)
lods
dec
ret
jmp
add
cld
out
scas
or
popa
fs
add
mov
popa
xchg
ficomp
ffreep
mov
add
inc
js
je
jb
gs
mov
mov
cs
les
add
jo
ins
mov
clc
(bad)
sbb
ins
imul
ret
pop
mov
into
inc
push
dec
addr16
ins
or
xor
inc
(bad)
push
lahf
fcomp
(bad)
aas
inc
ins
jae
mov
gs
es
inc
stc
mov
ja
push
mov
inc
imul
jmp
ds
(bad)
add
stos
std
add
pop
jb
ins
int
dec
cmp
push
push
sbb
(bad)
push
dec
dec
inc
sbb
lods
data16
and
push
xor
add
scas
jo
dec
pop
sbb
cwde
cmc
mov
cmc
aam
xor
popa
pop
retf
add
adc
out
adc
pusha
mov
std
mov
jns
or
and
mov
add
arpl
mov
dec
ins
xchg
clc
push
mov
inc
cs
aas
xor
add
dec
jns
add
rol
xchg
mov
add
jb
bound
jne
test
mov
gs
mov
add
and
jp
outs
or
add
js
and
cmp
jns
je
and
loopne
pushf
in
ds
(bad)
imul
add
ss
(bad)
jne
jo
rcr
fmul
adc
sub
mov
jb
test
sbb
dec
popa
sub
mov
in
mov
cmp
popa
imul
out
xor
pusha
lods
and
xchg
sub
and
pusha
call
popa
pop
mov
add
mul
aam
sub
push
mov
inc
cs
aaa
xor
shl
xor
xchg
cmp
fmul
add
dec
dec
aaa
inc
popa
push
add
ja
outs
enter
outs
ss
mov
jo
cli
jbe
add
test
xchg
push
mov
xor
sbb
xchg
or
lds
xor
out
shr
outs
push
or
arpl
and
sub
cs
aad
inc
aaa
ins
xchg
inc
add
adc
imul
iret
test
imul
sbb
jmp
pop
push
push
leave
nop
sub
mov
or
fnstsw
adc
push
inc
in
xor
and
sbb
push
inc
add
movs
mov
out
push
add
scas
xor
dec
inc
into
xor
add
jmp
arpl
shl
inc
sub
pop
aad
dec
or
add
add
test
push
ins
mov
ins
xor
inc
inc
and
inc
dec
sbb
cs
and
(bad)
outs
iret
adc
gs
inc
fstp
outs
inc
outs
js
add
jne
ins
xchg
loope
rol
push
call
cmp
push
adc
add
add
add
add
mov
dec
add
and
push
pop
pop
or
aaa
sti
or
mov
bound
pusha
and
add
xlat
add
jmp
add
movs
jbe
add
arpl
adc
jae
outs
lahf
(bad)
sub
mov
dec
inc
daa
dec
dec
inc
dec
inc
xlat
pop
add
adc
inc
je
push
adc
jns
push
xor
loope
mov
test
inc
pop
push
jne
inc
mov
fs
cmp
in
fimul
xchg
mov
test
add
sbb
test
and
repz
push
popa
xor
add
mov
dec
addr16
out
ficomp
sub
sub
dec
xor
(bad)
jo
add
and
adc
ror
lock
push
pop
sbb
test
(bad)
fs
sub
cmp
jne
mov
shl
out
and
dec
inc
bound
inc
test
int
or
dec
add
inc
pop
loop
pop
mov
dec
outs
jbe
cmp
(bad)
jg
lock
xor
pop
cs
sub
cld
inc
ds
push
lods
xchg
mov
mov
and
pop
and
mov
push
xchg
sar
jg
sub
xchg
imul
test
(bad)
fcomp
jge
mov
jns
cli
jae
cmp
cmp
dec
repnz
fisub
mov
lds
xchg
lds
psubw
cmp
(bad)
loope
and
push
dec
inc
repz
in
pop
push
jns
retf
jmp
mov
sahf
mov
mov
and
int3
xor
call
pop
adc
loope
add
dec
mov
mov
jmp
aas
dec
pushf
nop
jg
pop
repnz
popf
mov
mov
in
xor
cmp
jmp
or
iret
imul
sub
clc
lods
jbe
mov
(bad)
push
inc
lahf
out
mov
xchg
aas
(bad)
(bad)
(bad)
call
addr16
push
pop
sbb
test
pop
bound
push
fidivr
jmp
pop
pcmpgtw
shl
jge
inc
aas
mov
adc
fild
jg
add
aas
loopne
mov
mov
(bad)
aas
mov
loope
mov
mov
mov
(bad)
mov
mov
aas
call
jg
mov
(bad)
aas
mov
jmp
jmp
mov
(bad)
jg
cmp
add
cmp
xchg
and
or
inc
or
mov
es
mov
ss
and
mov
(bad)
mov
xchg
or
fwait
pop
mov
shl
mov
test
es
jg
in
dec
scas
(bad)
cmp
mov
mov
adc
jg
push
adc
call
mov
mov
jg
sbb
(bad)
inc
jg
cmp
sub
(bad)
jg
pop
push
(bad)
jg
mov
jg
push
adc
mov
inc
call
shr
(bad)
jg
imul
add
(bad)
sbb
adc
sub
add
std
outs
(bad)
sub
push
mov
jecxz
(bad)
ds
cli
ds
in
test
leave
ins
xor
dec
cmp
pusha
sbb
nop
cmp
inc
push
sti
and
jae
add
mov
arpl
and
pusha
inc
inc
mov
sbb
adc
out
push
aas
jg
xor
fimul
leave
ds
or
mov
xchg
push
xchg
mov
jae
in
pop
and
sub
in
stc
sub
adc
add
adc
add
adc
push
add
add
adc
add
add
fild
ja
in
je
or
add
mov
pop
sub
push
test
out
adc
inc
push
push
xor
mov
inc
test
inc
dec
dec
cmp
cmp
sahf
lahf
mov
fs
dec
and
jns
arpl
das
das
adc
sahf
ret
inc
dec
outs
sbb
stos
xchg
pop
jne
scas
adc
outs
adc
or
daa
pusha
push
bound
push
pushf
adc
arpl
inc
jne
or
daa
ficom
into
mov
xchg
cmp
sahf
outs
jns
jg
addr16
popa
loopne
mov
xor
inc
bound
mov
push
jne
dec
cmp
jle
push
jne
xchg
pop
pusha
xor
js
jo
out
aam
ja
je
sbb
pop
cmp
push
pop
dec
bound
and
add
and
popa
ret
ja
ss
popa
add
push
retf
fisub
daa
pop
lea
mov
outs
js
push
push
inc
push
inc
aaa
mov
ja
push
add
add
mov
inc
add
adc
call
xchg
inc
pop
fst
jle
pop
push
push
mov
jnp
jb
push
pop
js
jo
add
cmp
sub
add
and
aas
sar
gs
and
inc
inc
dec
jae
cwde
mov
scas
gs
fiadd
(bad)
rol
and
scas
xor
jo
gs
or
daa
cmp
dec
xor
jns
mov
popf
test
dec
inc
movs
and
daa
daa
pop
mov
loope
xor
push
jns
mov
cmps
jo
movs
and
arpl
mov
cmp
sbb
inc
and
push
inc
inc
jo
sbb
jmp
fnsave
(bad)
push
push
lahf
test
stos
and
ret
frstor
enter
retf
pop
cmp
push
push
adc
mov
dec
lahf
jecxz
scas
mov
popa
and
xchg
frstor
fld
pop
pop
and
push
stos
aas
cmp
call
jne
imul
in
pop
ja
mov
data16
mov
or
les
push
push
push
dec
test
pop
sbb
outs
enter
lods
xchg
(bad)
fild
dec
jge
cmps
push
push
sbb
test
aam
xchg
call
add
xchg
outs
jae
inc
and
fs
xchg
jg
loope
je
popa
dec
push
jbe
bound
jg
sub
push
or
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
out
dec
jnp
cmp
cmp
add
ds
push
das
push
sub
imul
sub
xlat
popf
out
ds
add
outs
add
sub
cvtps2pi
pop
iret
mov
add
and
cmp
and
add
mov
pop
jne
call
fs
jb
imul
or
sahf
sbb
sbb
sbb
jae
popa
pop
push
inc
jo
jo
inc
out
mov
jl
cmp
or
(bad)
sub
push
adc
sahf
out
or
push
in
imul
(bad)
ins
sbb
add
dec
repz
gs
mov
push
iret
sar
inc
push
push
lods
push
movs
mov
pushf
nop
mov
jnp
push
je
jo
ds
out
mov
push
ins
push
fs
pop
pop
push
outs
out
sahf
out
push
dec
dec
inc
sahf
out
sahf
inc
cmp
xor
sub
sahf
out
sub
or
imul
fadd
movs
test
cmp
fs
and
inc
push
out
mov
repz
out
xor
clc
addr16
repz
call
xor
cmps
stc
cmp
in
enterw
iret
lock
xor
inc
dec
dec
dec
push
push
and
xor
push
out
xor
test
dec
inc
add
ds
adc
dec
out
inc
jbe
mov
inc
adc
inc
es
cmp
mov
push
dec
sub
mov
push
add
aaa
dec
push
dec
bound
mov
sbb
das
inc
mov
jnp
push
inc
push
outs
inc
pop
jmp
xchg
cmp
aas
and
add
fdivp
pop
inc
mov
dec
dec
mov
dec
bound
mov
or
je
jne
dec
mov
cs
and
push
hlt
adc
xor
dec
inc
xor
push
push
fild
adc
loopne
xchg
addr16
pop
pop
mov
mov
je
mov
cmp
shl
fisubr
push
pminsw
fcom
push
pop
fbld
push
fimul
inc
das
sbb
data16
sbb
add
jnp
int
daa
inc
js
arpl
daa
push
pop
inc
push
sub
cli
imul
inc
out
sysret
in
xor
xor
mov
dec
sbb
jo
xor
sbb
push
fcomp
lahf
push
cmps
pop
pop
add
jnp
xchg
push
idiv
and
mov
xor
ret
in
cmp
mov
popf
jmp
jb
aaa
xchg
push
test
pushf
push
rcl
sub
imul
or
ds
ins
jle
or
xchg
inc
push
push
cmovle
sbb
inc
xchg
push
inc
dec
(bad)
in
pop
push
(bad)
jae
jne
(bad)
(bad)
das
pop
adc
push
dec
push
bound
cmps
cdq
sub
inc
cmp
neg
in
inc
inc
call
not
mov
test
inc
pushf
xchg
out
mov
lea
jne
or
sbb
lea
cwde
outs
or
inc
xor
ins
ror
outs
popa
pop
push
sbb
xchg
addr16
jp
cmp
repz
xchg
mov
cmovge
push
outs
inc
push
push
jp
pushf
mov
ds
fidiv
fist
push
in
unpckhps
ss
aas
(bad)
iret
repz
push
stos
mov
fisubr
in
cmp
cmc
cmp
sbb
call
sub
pushf
fdivr
maskmovq
test
sahf
dec
pop
push
into
push
frstor
neg
xchg
addr16
(bad)
push
imul
aas
test
push
push
fld
icebp
outs
ja
xor
fisttp
mov
jae
inc
push
jno
cmp
sahf
ins
out
je
mov
or
mov
and
push
cwde
mov
pop
xchg
aas
sahf
shl
adc
and
fwait
pushf
aam
and
and
cs
jp
adc
es
or
fs
aad
fnstcw
or
and
lock
and
xor
fwait
pop
jo
push
pop
scas
into
push
push
sbb
or
iret
int
mov
imul
scas
and
xchg
add
loopne
add
pop
(bad)
cwde
sub
in
jge
pop
mov
sub
or
js
add
cmp
pop
cmp
cmps
sbb
xchg
mov
mov
popa
pop
xor
mov
cs
dec
popa
imul
outs
pusha
sub
js
fld
jge
and
jae
mov
jbe
mov
pop
push
mov
outs
dec
fwait
mov
and
out
nop
mov
adc
sub
cmp
add
mov
scas
mov
or
pusha
and
sub
test
je
mov
push
jae
loope
add
sbb
mov
adc
push
dec
sbb
adc
cmp
inc
arpl
dec
outs
push
adc
jp
inc
add
push
movs
cmove
dec
or
sti
mul
dec
push
jae
out
sub
sub
sub
or
sahf
mov
push
dec
and
add
jmp
cmp
inc
push
sbb
bound
or
pop
xor
inc
push
sbb
push
dec
mov
call
push
xor
xor
inc
dec
push
pop
(bad)
jle
cmp
dec
les
pop
push
and
or
imul
push
test
pop
push
push
inc
add
pusha
nop
push
dec
sub
pushf
fcmovnb
jbe
push
pop
(bad)
pop
lods
pop
out
xchg
ins
or
inc
push
and
pop
dec
dec
dec
imul
jnp
pop
inc
inc
dec
push
push
dec
inc
push
daa
ficomp
ins
push
inc
push
es
sti
pop
dec
xor
add
rol
push
bound
inc
inc
dec
xchg
dec
jbe
cli
mov
cld
(bad)
push
dec
inc
inc
mov
mov
push
xor
dec
push
sub
addr16
(bad)
rsqrtps
pop
prefetch
pop
push
xchg
out
sbb
and
push
inc
xor
jbe
mov
hlt
stos
pop
cmp
leave
leave
leave
leave
cmp
ss
xor
xor
add
add
xor
pushf
dec
(bad)
mov
ror
mov
mov
dec
dec
sbb
pop
shl
ret
inc
and
push
inc
inc
pop
nop
ja
int
shl
dec
push
inc
inc
xor
rcr
fld
aas
jb
push
mov
ret
add
xor
jns
int
cmp
cmp
ss
jns
xor
pop
mov
mov
(bad)
cmp
cdq
and
pop
fidiv
xsaveopt
lahf
mov
push
and
dec
xor
retf
loopne
out
xor
(bad)
out
push
sub
ss
out
mov
enter
cs
fucomip
jne
jo
xlat
sbb
adc
outs
fadd
push
adc
push
pop
push
hlt
movs
pop
pop
xor
aas
push
xchg
cmp
inc
js
xchg
(bad)
dec
fistp
int
mov
mov
(bad)
mov
add
imul
xchg
sbb
(bad)
stc
leave
pop
retf
jge
into
je
jo
pop
loopne
not
or
mov
mov
mov
mov
in
xchg
xchg
or
(bad)
(bad)
and
jb
jle
or
add
loopne
shl
aaa
aaa
push
push
aad
clc
or
es
add
add
(bad)
sbb
outs
jae
daa
mov
lods
pop
add
sbb
outs
pusha
popa
scas
xchg
push
push
add
mov
add
sub
jbe
add
xchg
mov
sub
call
pop
popa
push
(bad)
pop
dec
jnp
sbb
jo
xchg
in
adc
xchg
daa
test
pop
inc
xor
fsubr
mov
mov
push
jo
outs
inc
dec
stos
pop
xchg
inc
xor
pop
push
ins
ins
popa
je
mov
inc
outs
fs
adc
push
fist
and
mov
scas
mov
or
cmp
stc
inc
mov
push
push
movs
icebp
add
sbb
rcl
enter
fisttp
outs
cld
mov
push
outs
jle
push
outs
xchg
push
sub
jo
xlat
mov
dec
ds
sub
lahf
(bad)
ds
add
inc
mov
(bad)
jo
sbb
sub
imul
dec
pop
rcl
inc
add
dec
inc
out
scas
cmps
sub
push
dec
add
mov
sbb
mov
shl
aas
push
push
push
dec
dec
inc
cmp
or
inc
mov
and
or
pop
or
cmp
push
loope
inc
push
mov
call
pop
mov
les
dec
pop
mov
sub
pop
addr16
push
daa
pop
cs
xor
jge
cld
pop
push
dec
sti
sbb
imul
push
ins
push
xchg
push
(bad)
dec
and
sbb
ja
or
adc
xchg
adc
iret
xor
inc
cmps
in
add
jns
cli
fld
dec
gs
push
cdq
cli
out
ds
loopne
adc
xor
mov
mov
pop
add
and
pop
mov
push
inc
xor
inc
jb
jecxz
pop
inc
and
push
push
nop
loopne
sahf
bound
ss
push
inc
sub
cmp
je
sub
les
push
and
cdq
es
pop
mov
stc
cmp
rol
push
addr16
push
push
dec
inc
dec
enter
push
inc
stos
push
or
adc
and
in
add
cmp
sub
xor
arpl
pop
cmps
push
push
push
fsubp
cmp
pmulhuw
mov
repz
inc
pop
adc
pop
inc
inc
xchg
sub
push
inc
pop
push
push
icebp
call
dec
mov
mov
and
punpckhbw
add
mov
inc
pop
arpl
fstp
cmp
adc
jb
dec
sbb
dec
dec
jg
fadd
jmp
test
inc
inc
push
push
and
pop
lods
les
mov
inc
in
dec
cmp
ret
push
xchg
dec
dec
je
ret
add
aaa
dec
dec
push
push
imul
out
pop
xchg
push
mov
push
adc
pop
pand
jo
sub
out
push
pop
inc
pop
popa
imul
fisubr
hlt
mov
sysenter
lahf
push
mov
aad
xor
paddusb
fwait
imul
(bad)
pop
mov
pop
retf
push
mov
adc
jmp
push
fidivr
push
lods
outs
dec
inc
pop
lahf
div
cmp
dec
inc
inc
inc
xor
fst
pop
or
cwde
loopne
pop
pop
cmps
lods
or
ins
cmps
pop
not
push
sbb
mov
push
sub
push
pop
push
mov
ficom
push
mov
dec
pop
dec
out
sbb
inc
pop
and
push
movs
pshufw
push
push
loopne
inc
push
js
sub
outs
pop
fsub
xchg
enter
push
ss
pop
div
push
and
daa
mov
pop
add
push
push
cmps
daa
xchg
jge
fcmovnb
pop
(bad)
mov
push
ficom
push
icebp
daa
or
and
ficom
and
pop
fcom
pop
loope
ins
sub
pop
inc
pusha
dec
jnp
ja
add
js
sbb
(bad)
fimul
scas
mov
and
add
pop
imul
inc
or
mov
pop
scas
or
movs
(bad)
xchg
aaa
and
mov
inc
ficomp
shl
loopne
jg
pop
inc
pop
and
stc
inc
nop
jg
xchg
push
cmc
pop
push
or
out
push
dec
xchg
and
push
jmp
js
mov
and
add
inc
xchg
push
mov
sub
dec
or
mov
div
mov
jno
xor
(bad)
call
add
dec
push
daa
dec
or
adc
inc
push
ja
inc
mov
das
cld
dec
aaa
sub
das
ss
into
das
dec
inc
mov
fist
push
ds
adc
inc
pop
push
aas
push
inc
inc
dec
bound
daa
rol
push
xor
adc
mov
pop
repnz
jbe
pop
in
daa
sub
adc
daa
push
dec
ror
pop
inc
push
dec
push
outs
adc
lds
sbb
in
xor
push
dec
sbb
mov
mov
jl
inc
dec
bound
pop
sar
mov
mov
mov
arpl
inc
nop
pop
outs
movs
movs
sub
push
ins
xlat
add
pop
dec
and
pop
imul
sub
mov
or
(bad)
xor
sbb
pop
mov
nop
mov
pop
dec
lock
xchg
and
sbb
inc
scas
not
not
push
daa
gs
ret
mov
iret
lahf
pop
not
sbb
sbb
imul
pop
aaa
pop
dec
inc
dec
or
push
nop
push
pop
push
test
lds
shr
div
stos
dec
ins
stos
pop
pop
push
xchg
pop
mov
push
or
push
fisttp
push
pop
addr16
add
pop
sbb
add
push
das
push
arpl
mov
fisttp
ins
ins
xchg
jge
xor
retf
adc
dec
jg
pop
cmp
or
rcl
push
adc
push
mov
push
fild
pop
add
ret
dec
jb
add
push
fstp
btr
mov
outs
add
adc
push
(bad)
jge
push
inc
loopne
mov
ins
push
mov
lods
push
fist
inc
iret
ins
add
inc
cmp
pop
rol
mov
fwait
pop
sbb
ss
pop
pop
xchg
pop
mov
push
dec
out
popa
adc
fstp
loope
inc
pop
or
pop
loope
lods
test
push
ja
lea
push
pop
xchg
aaa
push
mov
push
mov
shl
cmp
ins
mov
pop
mov
inc
jb
push
mov
mov
ds
pop
movs
xchg
add
pop
aas
push
inc
sbb
fwait
test
lahf
xor
dec
das
pop
or
push
push
fimul
loop
mov
pop
pop
les
pop
imul
(bad)
dec
jecxz
push
(bad)
adc
push
cmp
pop
addr16
inc
test
outs
pop
and
sub
push
addr16
sub
test
ficomp
pop
sub
sbb
push
fnstsw
push
pop
mov
push
push
es
cmp
sub
mov
or
call
sbb
mov
(bad)
adc
inc
outs
sub
add
pop
add
fldenv
push
push
stos
mov
xchg
shl
fistp
pushf
pop
pop
call
pop
cli
push
enter
adc
push
dec
inc
xor
inc
dec
dec
sbb
push
pop
lods
pop
lods
pop
sub
sub
lods
mov
sbb
fdiv
jbe
pand
aas
push
push
push
pop
mov
pop
dec
pop
dec
dec
mov
ins
outs
stos
pop
daa
pop
popa
mov
push
add
or
fld
jmp
or
pop
push
dec
pop
xchg
push
lock
aaa
pop
push
push
(bad)
push
add
cwde
jae
add
push
and
pop
pop
mov
cmps
xchg
adc
inc
pop
or
push
push
pop
ja
and
fimul
mov
(bad)
push
xlat
sbb
out
push
pop
test
push
mov
pop
loope
(bad)
pop
pop
js
cmp
ficom
out
ror
push
retf
mov
adc
pop
mov
into
ins
ret
pop
cmp
dec
push
mov
rcr
adc
daa
xchg
daa
mov
adc
daa
movs
pop
jb
outs
push
push
mov
popa
(bad)
cdq
pop
lahf
imul
pop
fiadd
pop
fidivr
push
jae
adc
mov
sbb
push
loope
aas
das
xchg
xchg
sbb
loop
pop
push
inc
push
inc
push
cmps
arpl
inc
push
sbb
adc
fst
jo
xchg
cmp
lods
inc
aaa
ss
aas
push
jno
jne
nop
pop
aaa
pop
inc
xchg
test
pop
xor
add
dec
lods
enter
mul
pop
xchg
add
mov
jge
mov
ret
pop
pop
xor
outs
lds
movntq
repnz
movs
push
sbb
in
dec
add
adc
dec
daa
jb
int3
mov
pop
call
fwait
mov
pop
pop
or
ins
pop
cmp
fisttp
jg
mov
and
pop
adc
xchg
and
imul
add
cs
outs
leave
adc
dec
dec
mov
sbb
dec
inc
push
pop
pop
sbb
mov
mov
adc
aaa
and
add
xchg
call
inc
xchg
jg
cdq
inc
add
push
jo
add
fisub
pop
push
and
loopne
lock
sub
fwait
arpl
add
xchg
or
mov
inc
jbe
push
dec
mov
mov
ins
shl
popa
ins
or
fdiv
pushf
jae
cmp
pop
adc
rcr
and
(bad)
mul
stos
popa
jne
xlat
mov
xchg
push
je
fstp
push
bound
push
sub
dec
push
push
inc
cs
inc
push
adc
adc
or
ret
repnz
cmp
js
das
ins
js
aaa
push
dec
pop
aaa
add
in
or
and
pop
pushf
mul
and
or
cmp
or
xchg
icebp
xchg
(bad)
(bad)
push
sar
pop
dec
inc
push
movs
inc
js
jge
mov
imul
mov
add
cmp
jns
mov
mov
lahf
mov
jnp
bound
cmp
add
mov
cmp
aam
lods
pop
es
jae
mov
sbb
add
inc
outs
ins
cmps
inc
and
push
xchg
shl
push
mov
out
mov
xor
inc
es
or
idiv
outs
add
jbe
pop
sub
push
popa
jb
push
(bad)
loopne
je
js
xchg
jb
loope
bound
icebp
mov
cmps
and
or
mov
popa
mul
push
arpl
clc
es
inc
jbe
dec
xor
push
xor
das
movs
xor
(bad)
(bad)
jp
or
xor
mov
inc
imul
mov
push
ss
xor
mov
aaa
daa
or
adc
popa
aaa
jnp
xchg
fs
adc
add
and
inc
pop
or
ret
daa
sbb
imul
daa
daa
push
lahf
pop
ins
jg
push
jo
push
sbb
add
jmp
hlt
bound
pop
inc
mov
leave
adc
imul
dec
(bad)
ret
shl
dec
xor
sbb
xchg
daa
stc
mov
xchg
push
sahf
test
(bad)
lahf
pop
test
push
and
or
fld
mov
mul
dec
adc
das
xor
(bad)
ret
push
mov
push
sbb
mov
pop
sub
ins
mov
xor
aaa
dec
or
adc
test
mov
sub
and
js
fucomip
lods
test
mov
sbb
call
dec
out
adc
mov
push
and
and
pop
inc
je
mov
sbb
(bad)
(bad)
hlt
daa
push
cli
mov
xlat
int3
sbb
dec
or
(bad)
mov
inc
inc
push
bound
mov
outs
inc
or
mov
scas
in
mov
(bad)
out
cmps
inc
jmp
push
sub
inc
adc
ins
inc
daa
sahf
outs
retf
dec
mov
push
push
daa
xchg
daa
and
inc
inc
xchg
inc
rcr
fs
shl
inc
ins
sbb
imul
adc
sbb
sub
push
push
je
sbb
pop
imul
inc
pusha
pop
push
pop
adc
test
sahf
outs
push
fisub
inc
push
push
inc
pop
inc
pop
adc
xor
sbb
pop
addr16
xchg
sar
push
aaa
push
lock
add
xchg
popf
and
sbb
push
push
ins
inc
jle
jne
or
mov
rcr
add
sbb
or
pop
inc
push
lock
xchg
sub
mov
ins
pop
outs
lock
cmc
cmp
fild
mov
mov
jae
jbe
dec
cmp
sub
push
mov
cmp
dec
imul
inc
jl
dec
jno
adc
(bad)
cmp
inc
out
mov
imul
mov
daa
adc
pop
add
pop
gs
jp
jnp
outs
add
fld
ja
das
inc
jo
pop
imul
or
pop
jnp
fbld
and
aaa
bound
add
jnp
push
mov
cs
pop
adc
add
pusha
mov
mov
mov
(bad)
mov
inc
push
cmp
cmp
xor
sbb
and
shl
inc
imul
loopne
shl
jns
sbb
sub
(bad)
movs
ja
pop
ret
cmp
mov
das
outs
mov
outs
and
and
stos
adc
xchg
call
jbe
cmp
inc
pop
mov
sbb
dec
shr
cmp
push
lahf
pop
sbb
adc
out
dec
aad
into
xor
not
push
fsub
nop
pusha
add
mov
xor
sbb
push
push
adc
fmul
mov
scas
imul
inc
(bad)
dec
sbb
push
dec
ss
hlt
xchg
mov
pop
or
(bad)
pop
dec
inc
stos
enter
aas
push
dec
inc
repnz
sbb
dec
xlat
or
into
mov
and
xor
xor
push
mov
sub
mov
dec
inc
mov
jl
cmp
loopne
ss
push
or
cmp
dec
push
dec
push
ins
out
movaps
das
inc
push
dec
dec
inc
(bad)
aam
add
daa
sbb
aas
jnp
(bad)
lods
daa
loopne
daa
cmp
pop
jae
inc
mov
mov
xchg
lods
cmp
(bad)
daa
adc
icebp
xchg
pusha
call
test
out
pop
push
stc
push
adc
mov
xchg
cli
sahf
dec
jo
pop
movs
pop
(bad)
adc
push
mov
inc
daa
fisttp
mov
xchg
inc
pop
dec
sbb
out
ffreep
push
or
in
gs
loope
and
pop
and
in
test
ret
xchg
cmps
jg
sub
dec
movs
push
sbb
je
popa
aaa
pop
fnstenv
ja
gs
jno
or
pop
sbb
inc
xchg
iret
fsub
scas
sub
and
ins
in
mov
test
pop
daa
dec
pop
jnp
add
jnp
cmp
pop
jge
lea
aaa
mov
push
(bad)
dec
pop
or
ss
or
mov
mov
loope
and
add
cmps
pop
and
pop
or
push
or
iret
push
xor
pop
adc
add
jb
jno
std
xor
cmp
inc
jne
outs
je
dec
add
add
fst
add
call
idiv
xchg
and
ins
xor
mov
and
jo
pop
mov
adc
das
xlat
add
arpl
inc
pusha
iret
add
popa
jbe
(bad)
daa
sbb
mov
pop
aas
std
and
aaa
popf
icebp
pusha
dec
push
dec
and
sbb
pop
sub
xor
ss
ss
sbb
mov
xchg
shr
ins
lods
lahf
dec
xor
pop
xchg
pop
or
inc
mov
lock
mov
cmp
outs
pop
xor
xor
das
pop
push
daa
xor
xor
cmp
mov
dec
repz
xchg
jne
ja
jmp
and
cwde
pop
adc
pop
dec
ins
dec
pop
(bad)
xor
pop
xchg
(bad)
outs
xchg
arpl
xor
add
or
pop
xor
mov
js
pop
adc
or
or
aas
adc
mov
ficom
ins
bound
aaa
sub
adc
xchg
push
outs
out
out
jne
sbb
jne
fbld
(bad)
dec
pop
ja
push
add
in
xchg
cmp
or
pop
pop
ror
fmul
adc
js
scas
xchg
mov
jnp
(bad)
jg
call
adc
xor
scas
mov
fs
jmp
cmc
inc
mov
sbb
push
add
push
ror
inc
mov
mov
dec
add
(bad)
int
mov
push
push
pop
dec
push
push
call
out
mov
jmp
inc
aaa
inc
je
pushw
popa
outs
push
daa
push
sub
adc
out
adc
pop
out
adc
mov
sub
mov
lods
cmp
lds
shr
jmp
js
gs
addr16
daa
adc
sbb
xchg
xchg
ret
aam
sbb
sub
sbb
and
js
and
or
or
arpl
pop
mov
(bad)
movs
ficom
add
pop
mov
imul
sbb
scas
xchg
jno
push
or
(bad)
mov
mov
pop
cmps
lock
addr16
into
xor
setae
fadd
xor
xor
shr
adc
ins
push
dec
adc
les
jo
aam
inc
dec
pop
push
xor
xor
mov
arpl
not
mov
xor
lock
int3
push
retf
sbb
scas
cwde
mov
fsubr
shr
jns
fs
test
push
bound
(bad)
gs
mov
inc
mov
das
pushf
or
ins
je
pop
bound
nop
sbb
loopne
movs
push
push
shl
es
aad
mov
imul
pop
dec
dec
pop
sub
mov
out
fstp
fld
fsub
lahf
inc
outs
ror
mov
jne
cmp
ds
popa
bound
rcl
data16
sub
pop
push
push
mov
xlat
cdq
add
xor
rol
mov
pand
int
push
sti
and
inc
loopne
mov
ins
lahf
loopne
dec
dec
adc
inc
aas
cmp
rol
dec
in
ss
inc
(bad)
pop
mov
or
leave
out
mov
das
mov
push
aas
cdq
add
(bad)
adc
sbb
movs
pop
mov
mov
cwde
push
mov
inc
add
cwde
outs
and
push
repnz
cmps
ja
das
imul
shr
fsubr
mov
test
mov
pusha
mov
ds
bswap
jnp
(bad)
jno
inc
push
nop
repnz
xchg
sub
dec
mov
cmp
inc
daa
(bad)
ror
rcr
inc
aas
aam
popf
dec
pop
pop
sar
jg
xchg
adc
fdivr
shl
jae
pushf
dec
dec
and
out
jmp
shl
ss
inc
jb
popf
mov
in
dec
in
loopne
aas
int3
pop
imul
adc
pop
pop
sub
or
jnp
bswap
dec
bound
inc
inc
inc
add
pop
retf
or
adc
fild
cmovne
les
rcl
aam
push
enter
rcr
fmul
sbb
jle
mov
adc
mov
cmp
dec
and
ret
test
mov
ror
cmps
nop
pop
(bad)
sub
sub
jecxz
cmp
dec
push
scas
data16
movs
pop
in
jb
inc
popa
test
adc
push
out
push
ins
inc
ins
jg
jae
les
pushf
mov
aas
aas
inc
pop
enter
xlat
js
dec
push
cmp
iret
jg
(bad)
sahf
xchg
xchg
mov
adc
or
pop
mov
and
dec
and
call
bound
or
adc
(bad)
ret
out
(bad)
cld
jmp
fisttp
add
sub
adc
inc
add
das
cmp
repz
rcr
repz
cs
test
fs
out
cmp
and
sub
out
test
push
int
sbb
sub
movs
jo
repz
cs
push
cwde
out
mov
and
scas
sub
sar
repz
je
adc
sub
out
les
cmp
out
enter
sub
sar
mov
mov
fcomp
inc
cmpxchg
imul
pop
cs
inc
push
pop
sbb
inc
mov
mov
mov
aaa
(bad)
mov
xor
add
aaa
test
add
add
adc
adc
(bad)
push
adc
lea
dec
mov
daa
mov
fsubr
es
adc
stc
(bad)
xlat
arpl
sbb
adc
mov
add
add
or
mov
inc
and
push
jno
jmp
les
add
movs
add
pusha
cmp
cmps
fbld
repnz
mov
shr
cmp
call
iret
mov
in
call
ja
jle
adc
push
ficomp
mov
cmps
in
fidiv
rcr
fsubp
stc
jb
jle
inc
inc
call
inc
mov
adc
lods
add
xchg
pop
call
and
mov
jnp
out
jle
push
xlat
inc
daa
out
push
mov
mov
(bad)
lahf
push
sahf
out
sahf
add
or
cmp
jns
or
aaa
or
or
daa
adc
dec
aaa
jns
adc
and
xchg
inc
inc
push
addr16
das
push
loopne
mov
pop
imul
cmp
out
and
jb
pop
jb
pop
jo
or
repz
jo
pop
xchg
sub
mov
aas
movs
loope
in
into
aas
xlat
sbb
data16
bound
lock
js
mov
inc
inc
push
dec
push
lahf
out
sahf
or
inc
cmp
repz
les
mov
repz
cmp
adc
jns
iret
sbb
inc
sbb
jl
pop
pop
clc
inc
and
and
inc
and
jnp
out
js
jns
jp
loopne
lods
inc
push
cld
and
(bad)
call
xchg
add
imul
aas
add
mov
inc
pushf
mov
ror
push
add
xchg
pushf
cmp
lea
mov
nop
xchg
xchg
(bad)
aad
xchg
xchg
add
pop
add
fisttp
out
push
enter
(bad)
mov
in
pushf
clc
sbb
push
add
je
or
and
jmp
out
or
sbb
lahf
clc
call
push
sbb
mov
adc
xor
jns
xlat
sbb
sbb
pop
sbb
adc
jl
out
or
add
cld
dec
repz
ror
hlt
adc
add
in
loopne
fsub
cmp
repz
or
or
repz
repz
iret
repz
mov
test
mov
cmp
pop
nop
and
mov
and
jl
jo
adc
dec
xchg
add
loopne
dec
test
mov
xchg
or
or
add
call
or
cs
retf
addr16
aaa
dec
fld
inc
(bad)
sub
mov
jecxz
jg
mov
repz
xor
mov
call
add
jns
cmp
outs
out
sahf
out
xchg
lods
mov
iret
sar
(bad)
adc
iret
repz
jbe
mov
repz
fcomi
cli
sbb
cs
pop
jp
sahf
out
sahf
cdq
sahf
mov
iret
sar
and
iret
repz
mov
ds
loope
push
xchg
mov
mov
imul
lock
daa
jb
rol
push
cmp
dec
cmp
repnz
push
jns
data16
bound
nop
mov
out
jl
jo
sahf
out
sahf
pusha
push
dec
inc
xor
jns
out
sub
and
sbb
jns
out
adc
or
in
repz
add
arpl
call
iret
repz
push
rol
enter
repz
repz
cwde
xchg
mov
mov
call
and
inc
pop
jg
adc
cs
xor
les
jg
iret
lds
cmp
adc
add
cmp
arpl
enter
inc
pushf
nop
psubw
and
adc
cmp
push
and
sbb
sub
ret
inc
and
sahf
mov
sub
inc
rcr
and
call
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
cmp
cmps
iret
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
div
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
(bad)
(bad)
(bad)
jmp
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
(bad)
(bad)
inc
gs
or
add
cmps
xchg
cmp
xor
dec
cmps
in
cmp
(bad)
(bad)
cmp
pop
cmps
lock
mov
popa
sar
mov
(bad)
dec
stc
(bad)
xchg
clc
repz
mov
sub
fwait
xchg
and
loope
pusha
les
int3
add
(bad)
push
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shr
jmp
pop
pop
mov
icebp
aas
ror
and
cmps
mov
mov
ins
jmp
cmp
add
cmp
aad
mov
(bad)
out
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
(bad)
(bad)
inc
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
mov
pop
sar
jl
mov
das
lea
mov
inc
inc
aas
movs
jmp
(bad)
(bad)
(bad)
jmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
(bad)
(bad)
call
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
(bad)
(bad)
(bad)
cmp
test
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
and
cmps
mov
mov
cmps
push
lahf
inc
pop
mov
(bad)
(bad)
(bad)
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
mov
(bad)
mov
dec
dec
gs
std
or
pop
ficomp
frstor
and
sbb
(bad)
repz
push
cmp
pop
js
repz
xchg
mov
repz
repz
jge
xor
add
push
pop
iret
repz
ja
mov
repnz
dec
ins
or
dec
cmp
repz
mov
push
add
test
add
icebp
cmp
pop
data16
ins
iret
repz
cld
ins
in
push
or
or
adc
cmp
mov
mov
jl
jo
repz
repz
push
dec
cmp
stc
cmp
sub
or
sahf
loopne
out
sahf
int3
mov
jns
out
push
repz
out
sbb
add
popf
iret
repz
in
in
enter
iret
repz
xor
cmp
repz
cmp
sbb
out
sahf
out
pushf
lock
enter
sahf
mov
cmp
jns
fs
dec
inc
out
sahf
out
xor
adc
div
add
fwait
in
push
rcl
ja
sahf
div
mov
out
sahf
out
jl
pusha
dec
lahf
out
sahf
cmp
and
cld
call
fist
aad
ins
add
adc
sbb
jg
or
xchg
fisubr
push
jge
or
ffree
popa
add
cs
mov
dec
adc
lahf
xor
push
or
jg
dec
push
cdq
dec
push
or
dec
dec
mov
sub
or
sub
mov
sub
mov
mov
push
push
add
or
jnp
pop
pop
inc
inc
pop
pop
cmps
movs
mov
or
and
mov
(bad)
iret
repz
outs
jl
sbb
or
clc
jnp
call
jns
aam
enter
sahf
out
mov
out
sahf
mov
jns
out
push
dec
inc
cmp
out
lahf
out
and
jnp
jnp
je
ja
jnp
push
call
push
jg
dec
cmp
jno
cmp
xchg
push
and
xor
or
mov
das
xor
xor
xor
add
fist
push
outs
bound
je
and
jecxz
sub
and
mov
out
push
lods
test
cwde
xchg
out
sahf
out
mov
jns
je
ins
push
out
pop
pop
push
push
dec
out
sahf
out
cmp
sub
lahf
out
sahf
sbb
adc
clc
jbe
iret
repz
in
aam
repz
repz
cmp
cwde
nop
mov
repz
pop
dec
inc
xor
cmp
repz
sbb
or
jns
iret
add
jne
call
sahf
enter
test
out
push
sar
sub
or
je
iret
repz
in
les
cmp
cmp
repz
repz
push
dec
cmp
pop
jne
iret
xor
add
rcr
sub
out
dec
mov
or
sbb
jb
sahf
out
sahf
je
jbe
js
dec
sahf
out
jp
and
and
and
daa
and
out
sahf
out
sub
pop
xchg
sahf
out
sahf
nop
add
adc
popa
jns
out
bound
gs
sahf
out
push
out
sahf
ins
outs
outs
pop
mov
jns
movs
mov
sahf
out
cmps
cmps
test
sahf
out
sahf
stos
stos
lods
lods
scas
scas
shl
mov
xor
xor
add
cs
add
aaa
push
movhps
push
or
mov
ja
and
das
add
adc
fcomip
inc
push
fs
inc
xchg
outs
(bad)
jmp
push
es
rcl
push
sub
fsubr
(bad)
aas
xor
sub
jmp
popa
inc
gs
imul
ins
cld
push
jns
outs
dec
and
push
mov
push
adc
adc
or
inc
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
dec
push
add
dec
cmp
nop
pop
push
adc
push
add
xor
cmps
add
sub
sub
add
pop
adc
cli
push
das
pop
or
push
add
or
(bad)
(bad)
dec
or
add
les
jle
fisubr
frstor
or
jo
push
inc
sub
or
inc
add
or
add
cli
jmp
ret
jb
ins
jle
dec
fsub
out
and
jmp
outs
cmp
add
repnz
push
push
aas
bound
cmp
call
push
add
retf
add
push
mov
jo
cmp
sahf
or
aaa
clc
inc
xlat
sbb
dec
std
adc
mov
xchg
dec
add
aaa
cmp
maxps
out
add
arpl
push
pop
push
data16
push
out
pop
jecxz
nop
addr16
mov
mov
bound
shr
mov
(bad)
not
daa
and
inc
or
fs
dec
sub
shl
shl
out
jno
push
das
or
dec
sbb
jo
push
popa
frstor
daa
arpl
out
push
sub
ret
inc
adc
inc
mov
jb
add
jnp
ins
or
dec
sub
jg
(bad)
push
les
push
iret
xchg
mov
in
mov
push
jg
xchg
push
ins
or
sbb
popaw
xchg
jmp
cmp
xchg
daa
inc
or
in
and
pop
das
push
jae
les
in
out
pop
sbb
arpl
add
pop
sbb
sar
nop
jae
xchg
add
adc
inc
(bad)
outs
push
pop
sbb
push
xor
fistp
sub
pop
push
mov
sub
retf
pop
sub
fnstsw
movs
xor
push
bound
dec
cmp
xor
dec
jne
xchg
or
jmp
fsub
push
(bad)
or
das
es
cld
rcpps
add
(bad)
or
mov
test
sar
out
bound
dec
lea
fnstcw
test
sbb
ins
shr
fsub
inc
push
bound
push
push
loopne
pop
das
adc
je
mov
xor
js
jo
fcomip
mov
popa
xchg
cmp
(bad)
jmp
div
imul
sbb
sub
in
gs
inc
(bad)
sbb
xchg
xchg
cs
int
stos
push
jo
mov
push
movs
movs
sub
addr16
daa
sti
mov
pop
inc
and
sub
jbe
push
mov
das
ret
fisubr
push
pop
sub
ja
add
pop
sub
scas
cs
bound
push
pop
call
call
pop
stos
ror
push
push
das
cmp
push
xchg
cmp
pop
arpl
call
ficom
outs
push
jge
gs
loopne
jns
push
jg
adc
add
ss
inc
loope
and
rol
std
daa
pop
out
push
in
das
lahf
xchg
xchg
dec
gs
call
dec
repz
bnd
adc
adc
sub
or
imul
lock
je
outs
aaa
dec
aaa
push
or
mov
dec
pop
adc
pop
pop
mov
mov
retf
daa
pop
es
addr16
dec
push
xchg
mul
xor
js
ins
inc
mov
das
jmp
mov
push
div
xor
push
cmp
pop
pop
mov
das
dec
das
jbe
mov
and
ins
imul
mov
push
shr
bound
jecxz
pop
mov
jne
push
iret
arpl
sub
sub
sti
dec
pop
mov
imul
or
pop
dec
jnp
fild
cmp
(bad)
push
xor
or
jg
dec
push
push
pop
or
outs
dec
or
push
cmp
cmp
xchg
cmp
push
push
jo
call
mov
pop
not
or
dec
push
imul
sbb
cli
enter
and
pop
add
pop
jo
cmps
maxps
push
mov
popa
push
fld
fwait
inc
adc
add
lds
lods
in
pop
jnp
sahf
scas
xadd
adc
sti
out
sub
xchg
dec
cmp
imul
in
pushf
outs
ja
adc
xor
out
cmps
stc
pop
popa
mov
mov
inc
push
mov
icebp
fbstp
inc
mov
push
cmp
adc
dec
pop
adc
mov
pop
xchg
adc
push
or
clc
add
ds
adc
(bad)
ret
push
add
ins
rcl
popa
jle
jbe
lea
add
ja
gs
(bad)
cld
fnstenv
str
xchg
mov
cli
dec
dec
push
out
(bad)
aaa
mov
ja
mov
aaa
or
ret
mov
(bad)
cmp
daa
push
aaa
(bad)
iret
sub
enter
imul
push
pop
sar
ja
je
stos
jns
jb
add
push
mov
push
push
stos
outs
test
mov
(bad)
ins
call
push
je
ja
push
test
xchg
mov
sub
je
vmread
cmps
jnp
ins
or
(bad)
push
dec
(bad)
adc
jnp
dec
push
dec
outs
out
mov
xlat
mov
or
(bad)
sti
pop
sub
jae
pop
dec
imul
inc
add
or
ret
sar
add
add
sbb
cmp
push
daa
pop
dec
jmp
xchg
mov
ins
inc
es
fcmovne
jo
add
imul
and
sbb
mov
dec
add
sub
fisttp
jne
push
call
push
aas
sub
sub
adc
and
movs
xor
xchg
lods
nop
jmp
ds
popw
dec
movs
or
mov
jns
push
ficom
mov
movs
add
inc
pop
push
nop
pop
jae
es
cmp
jge
nop
shl
adc
dec
outs
jbe
sub
dec
sub
cmp
outs
jo
sub
xor
dec
mov
xchg
test
xlat
leave
jns
pop
and
push
ror
inc
add
leave
scas
sbb
mov
ds
mov
mov
inc
jge
push
xor
pusha
cmp
out
jb
or
out
cmc
sbb
sub
sbb
push
push
mov
out
dec
outs
cmp
jno
fwait
lea
and
repz
data16
jo
push
and
xor
add
repnz
sub
mov
sar
push
xchg
je
sbb
push
sub
and
inc
or
sub
fld
dec
neg
call
mov
imul
cmp
test
inc
(bad)
in
das
xor
jno
bound
dec
pcmpgtd
(bad)
push
push
sub
bound
stos
sbb
ins
cmp
jmp
push
or
and
int3
jno
in
adc
mov
xchg
dec
inc
arpl
sbb
sbb
jnp
mov
cmp
movs
retf
dec
xchg
adc
outs
shl
push
popa
push
syscall
push
pop
sbb
push
outs
ins
sbb
xchg
jbe
sub
push
call
and
rcr
and
ins
js
sub
jb
stos
jb
shl
add
(bad)
mov
test
test
ret
push
imul
dec
mov
in
(bad)
xchg
push
sbb
(bad)
outs
add
xchg
sbb
push
imul
push
jmp
cmp
imul
jle
ficom
cmp
and
jo
leave
push
inc
push
or
xchg
sub
call
pushf
sbb
pop
test
inc
fdiv
aam
inc
xchg
mov
pop
mov
xor
push
pop
adc
inc
dec
jmp
push
inc
add
mov
imul
inc
mov
xchg
lea
push
push
xchg
xor
push
popa
adc
stos
aad
xchg
inc
lea
sub
xchg
mov
add
add
enter
xor
xchg
in
bound
lods
daa
dec
xchg
mov
test
xor
pop
push
scas
jo
mov
sub
pusha
out
arpl
popf
sub
sbb
xchg
push
jmp
bound
push
and
dec
sub
gs
jmp
shr
jp
pop
and
inc
aad
push
fild
push
ins
adc
xchg
outs
inc
out
fs
dec
jo
mov
leave
xlat
sbb
mov
sbb
loopne
shl
ins
fst
pushf
pop
ins
push
ja
xlat
lds
xchg
sbb
xor
jns
lods
and
cli
outs
jns
outs
je
push
pop
xlat
jmp
(bad)
pusha
pop
jmp
lock
loope
pop
je
ja
lods
jmp
pop
xor
or
jae
cmp
push
out
stc
inc
jne
data16
inc
push
sar
jmp
lods
pop
lock
lahf
in
xchg
push
cmc
pop
imul
bound
pop
jo
icebp
arpl
sbb
dec
pop
push
xchg
sbb
loope
dec
sbb
push
mov
pop
sbb
add
fs
adc
clc
dec
ins
mov
data16
pop
dec
je
fidivr
add
jnp
inc
inc
sbb
dec
xchg
and
cmp
push
jae
mov
sbb
mov
iret
xchg
jecxz
imul
push
adc
imul
(bad)
sar
pop
and
cmc
adc
sbb
and
xor
outs
dec
dec
fist
dec
sub
push
js
bound
sub
push
jb
jb
jp
mov
movs
push
fsub
jecxz
movs
nop
scas
loop
lods
cmp
dec
ins
jle
test
add
adc
sar
pop
test
inc
push
daa
sub
inc
push
or
adc
or
sub
pop
setno
sub
add
push
stos
add
leave
and
dec
iret
lahf
adc
mov
inc
add
xchg
mov
xchg
icebp
lea
jb
inc
or
or
jo
add
xchg
ja
ds
push
cmp
xchg
into
dec
popa
dec
jae
in
rol
push
test
sbb
imul
or
lods
not
mov
pop
jmp
push
cmp
cmps
fst
mov
jecxz
cmp
loopne
mov
je
cmp
add
push
mov
mov
ret
mov
inc
jmp
and
mov
sbb
or
scas
ret
and
push
inc
dec
out
inc
not
addr16
and
inc
inc
ror
cmp
dec
push
or
in
cmp
push
inc
aas
mov
mov
mov
sub
fmul
hlt
dec
mov
cmp
mov
call
loopne
lods
cli
cli
jl
adc
adc
xor
pop
push
mov
sub
cmps
cdq
inc
daa
xor
inc
push
xchg
cmps
and
aam
leave
rcr
in
mov
(bad)
or
mov
push
inc
inc
add
out
pop
jns
or
or
scas
and
mov
and
sbb
fnsave
or
dec
outs
dec
rcl
mov
dec
inc
dec
mov
push
add
dec
dec
mov
pusha
jne
push
test
adc
pop
test
ja
mov
and
popf
scas
xchg
movs
mov
stc
dec
outs
mov
sbb
mov
js
mov
and
add
imul
sub
imul
pop
fcom
xor
sar
add
sar
adc
(bad)
push
fcomp
mov
inc
jne
(bad)
inc
test
fimul
adc
retf
mov
cmp
dec
dec
and
and
xor
sub
mov
outs
pop
jns
dec
popa
jmp
stos
test
dec
add
neg
outs
stos
data16
inc
inc
sub
sub
cmp
or
cld
adc
and
pop
dec
add
ins
mov
mov
call
jnp
shl
jmp
or
gs
ror
add
or
add
or
ds
mov
pop
aad
push
test
imul
jae
loope
mov
outs
sbb
dec
push
add
mov
cmp
mov
ins
addr16
add
push
popf
xor
retf
je
mov
ss
jne
pop
inc
mov
sub
lods
pop
and
gs
icebp
aad
jb
inc
test
jne
dec
js
sqrtps
ins
mov
xchg
(bad)
cmp
jb
ins
push
inc
sbb
and
pop
or
lahf
mov
sub
push
aas
fidiv
movs
cli
lods
and
xchg
retf
xchg
lahf
or
je
mov
sub
pop
cli
rcr
arpl
rol
sar
pop
jge
std
sub
pop
jnp
test
leave
in
push
cmp
sbb
inc
pop
movs
add
push
outs
test
addr16
cdq
jne
loope
dec
jno
rol
inc
pop
jmp
dec
ds
lahf
in
xor
inc
push
mov
mov
cwde
imul
xor
xchg
call
popa
sti
jnp
sub
xchg
cmp
lods
xlat
dec
lea
add
dec
wrmsr
aam
inc
jmp
loopne
and
pop
loop
or
inc
push
int3
jb
popf
push
push
pop
arpl
or
inc
out
js
enter
xchg
outs
add
adc
sub
sar
jecxz
pop
mov
cmp
out
pusha
or
and
nop
and
fld
or
xchg
ror
fpatan
sbb
test
jmp
in
push
xchg
gs
add
sub
jmp
aad
lds
aas
sbb
shl
xchg
mov
dec
or
test
pop
and
arpl
ins
adc
sbb
lods
cmps
outs
clc
gs
mov
jnp
sbb
mov
sbb
jne
outs
ja
pop
dec
xchg
retf
jb
push
sbb
imul
ret
inc
das
inc
jae
add
arpl
push
sbb
data16
lea
mov
cwde
call
ins
mov
cmc
cmp
push
dec
out
jnp
add
sbb
das
or
inc
iret
pop
ret
xor
pop
in
sbb
pop
(bad)
cdq
push
jne
mov
and
sbb
push
ror
in
out
sub
popa
cmps
push
cmp
cmps
mov
mov
mov
push
enter
xchg
sub
xor
sbb
jecxz
nop
ss
jae
imul
imul
int
stos
jns
inc
ret
push
rol
push
repnz
inc
rol
inc
push
add
push
sbb
fstp
dec
pop
ret
mov
xor
xor
dec
mov
pop
ja
mov
push
xchg
fs
imul
inc
mov
mov
pop
lods
and
inc
push
push
mov
mov
dec
imul
sbb
mov
push
sahf
adc
ja
push
sub
and
push
and
inc
(bad)
imul
dec
mov
push
add
adc
imul
(bad)
imul
xor
call
movs
adc
add
jmp
sbb
loopne
add
or
ds
adc
dec
push
push
add
cdq
xchg
daa
push
or
or
push
(bad)
xor
nop/reserved
(bad)
es
cmp
div
sahf
sbb
ja
nop
add
inc
pop
gs
pop
cmp
rcr
and
add
outs
and
pop
cmp
adc
add
or
mov
adc
cmp
adc
loopne
push
push
repnz
push
add
sahf
add
dec
js
loope
nop
mov
add
xchg
and
add
add
add
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
cmp
add
js
add
mov
add
add
add
adc
add
mov
sbb
add
enter
add
or
add
add
test
add
rol
add
clc
add
add
add
add
add
add
jo
add
cwde
add
or
add
rol
or
add
call
add
add
add
add
add
or
add
rol
add
add
or
add
call
(bad)
add
add
add
or
add
add
add
or
test
add
or
add
cmp
add
mov
or
test
add
or
add
pusha
add
add
add
inc
add
or
add
mov
add
mov
add
add
add
or
add
mov
add
add
add
or
add
add
add
inc
or
sub
add
inc
outs
ins
add
add
or
add
add
add
in
dec
or
add
ins
add
add
or
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
add
inc
outs
ins
add
add
or
add
push
jg
add
add
call
add
add
add
add
add
inc
outs
ins
add
add
or
add
test
add
pusha
jg
add
add
add
add
add
add
or
add
and
add
dec
add
or
add
jo
add
cwde
add
or
add
add
add
add
add
add
inc
outs
ins
add
add
or
add
adc
add
push
or
call
add
add
ins
add
add
or
add
cmp
add
cmp
add
inc
outs
ins
add
add
or
add
pusha
add
add
or
pushf
add
add
ins
add
add
or
add
mov
add
pusha
test
add
add
add
ins
add
add
or
add
mov
add
pop
mov
add
add
add
ins
add
add
or
add
fadd
add
push
mov
add
add
add
add
and
sub
add
add
add
inc
outs
ins
add
add
or
add
sub
add
add
add
inc
outs
ins
add
add
or
add
push
add
add
dec
or
add
ins
add
add
or
add
js
add
fmul
add
add
add
add
mov
add
add
add
add
ins
add
add
or
add
mov
dec
or
add
add
add
add
add
add
add
add
add
add
inc
outs
ins
add
add
or
add
clc
add
add
add
or
add
adc
add
and
add
add
and
add
add
add
adc
pop
adc
push
push
pop
adc
adc
adc
pop
adc
pop
adc
adc
adc
adc
adc
add
add
add
or
add
add
rol
popf
pushf
popf
out
add
add
loop
xchg
jecxz
xchg
xchg
out
xchg
xchg
out
xchg
xchg
out
movs
movs
faddp
ret
ret
fldenv
jns
add
add
pop
popa
sar
out
dec
inc
inc
lock
xor
inc
inc
inc
stc
pusha
pop
pop
jmp
pusha
stc
ins
imul
bound
push
imul
mov
(bad)
(bad)
retf
daa
sub
add
sbb
sbb
xor
xor
cmp
cmp
inc
inc
dec
xor
xor
lea
test
rol
inc
inc
inc
dec
inc
inc
inc
dec
inc
inc
inc
inc
sub
sub
or
dec
dec
push
(bad)
enter
lods
stos
in
stos
test
movs
test
cmps
fbstp
mov
scas
out
mov
mov
mov
test
loope
stos
cmps
loopne
test
loop
mov
movs
mov
mov
inc
sub
pop
push
das
jmp
xor
gs
xor
jmp
aaa
jmp
cmp
imul
outs
pusha
jmp
cmp
dec
(bad)
enter
gs
scas
inc
or
push
cmp
sbb
pop
inc
sbb
jmp
and
jmp
sub
addr16
sub
push
push
sub
pop
inc
sbb
cmp
mov
fs
dec
adc
pop
inc
push
call
and
jmp
das
jmp
xor
jo
aaa
push
push
cmp
jae
cmp
jb
cmp
push
sub
(bad)
(bad)
fsub
data16
dec
adc
pop
dec
and
arpl
jmp
push
push
(bad)
js
aas
(bad)
jge
inc
(bad)
jge
inc
(bad)
jnp
inc
(bad)
js
aas
jmp
xor
nop
xchg
ret
vpsubusb
enterw
push
imul
test
dec
and
xchg
mov
cwde
mov
xchg
mov
xchg
test
mov
jmp
enter
gs
sar
xchg
call
mov
pushf
nop
jne
mov
fwait
jg
stos
sahf
cmp
mov
mov
scas
mov
test
mov
mov
dec
int
fsub
data16
fdivr
call
jmp
mov
(bad)
push
scas
xchg
(bad)
mov
mov
(bad)
mov
mov
push
ret
iret
iret
rcr
addr16
jmp
stos
cwde
push
lahf
(bad)
mov
mov
test
ret
mov
scas
inc
mov
test
call
int
call
rcl
fldenv
fs
(bad)
(bad)
push
jmp
out
push
repz
push
repz
push
repz
hlt
repnz
hlt
repz
hlt
repz
cmc
repz
cmc
repz
cmc
repz
repz
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovu
fneni(8087
sbb
sbb
arpl
push
addr16
addr16
addr16
imul
dec
add
add
add
add
inc
add
or
sub
add
sbb
add
xor
add
add
and
adc
adc
sub
sub
aaa
cmp
cmp
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
sub
sub
sbb
xor
and
cmp
adc
sbb
add
add
inc
pop
in
call
fdivr
ror
sar
retf
jmp
test
test
lods
lods
jmp
mov
push
mov
push
mov
mov
inc
ret
ret
dec
int
clc
fcomp
fdivr
fnstsw
(bad)
cmp
cmp
add
add
sbb
sbb
int3
int
std
idiv
call
pusha
popa
push
cs
es
push
sub
push
das
xor
sub
cmp
cmp
inc
inc
inc
(bad)
cmp
dec
dec
call
push
call
pop
jmp
pop
jmp
jmp
addr16
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
push
push
es
jbe
push
push
push
lahf
dec
dec
dec
mov
gs
dec
dec
mov
cmp
mov
dec
dec
mov
test
ret
mov
mov
test
jb
ja
ja
ja
ja
arpl
mov
jl
mov
add
or
or
add
or
or
add
add
or
or
or
or
or
or
push
push
push
xor
das
xor
rcl
clc
arpl
cmp
cmp
in
(bad)
dec
dec
dec
push
add
or
or
or
or
or
or
pop
pop
pop
add
add
add
add
or
or
add
add
push
push
and
ret
fstp
mov
mov
fnstcw
mov
mov
inc
(bad)
(bad)
mov
aad
mov
mov
mov
fidiv
mov
mov
fcmovb
mov
jno
jb
cmp
cmp
in
in
push
cdq
nop
call
popf
xchg
call
sahf
xchg
call
sahf
xchg
call
popf
xchg
jmp
cdq
(bad)
jmp
mov
cwde
jmp
mov
xchg
jmp
test
jmp
lods
scas
scas
lds
cmp
ds
jmp
jge
jno
cmp
push
inc
or
dec
xor
push
dec
adc
dec
cmp
call
push
call
sbb
push
inc
sbb
push
inc
sbb
pop
inc
sbb
call
push
call
pop
call
push
call
sbb
push
inc
sbb
push
inc
push
call
xor
aam
(bad)
stos
stos
lods
mov
in
in
inc
ss
push
ds
call
call
sbb
call
and
pop
dec
and
jmp
sub
gs
sub
push
push
sub
jmp
das
jmp
jmp
sub
jmp
jmp
cmp
jmp
cmp
ds
in
inc
adc
push
inc
sbb
push
inc
sbb
call
and
pusha
dec
daa
jmp
sub
push
push
das
jmp
xor
ins
pop
xor
ins
pop
xor
outs
pop
jmp
xor
outs
pop
xor
ins
pop
xor
imul
push
sub
imul
(bad)
fcmovu
jmp
cmp
call
xor
push
inc
sbb
call
and
bound
jmp
jmp
xor
ins
pop
xor
ins
pop
xor
jb
cmp
jb
cmp
jne
cmp
je
cmp
jae
cmp
jae
cmp
jae
cmp
jo
aaa
jmp
xor
jb
inc
(bad)
fcomp
fdivrp
lods
lods
lods
mov
jmp
call
adc
pop
inc
pop
call
call
jmp
sub
addr16
sub
push
push
cmp
jbe
cmp
ja
cmp
(bad)
js
aas
(bad)
jp
inc
push
cmp
push
cmp
jno
push
(bad)
(bad)
loopne
lods
scas
scas
mov
jmp
icebp
dec
inc
sbb
pop
dec
and
jmp
das
jmp
xor
push
aas
(bad)
jns
inc
(bad)
jnp
inc
inc
jo
inc
jno
inc
jno
(bad)
jg
inc
(bad)
jl
inc
push
cmp
(bad)
fcmovu
loope
scas
scas
mov
cmp
cmp
out
repnz
call
arpl
jns
dec
(bad)
jg
push
inc
jns
dec
and
test
xchg
cwde
mov
fwait
lea
fwait
lea
pushf
mov
fwait
lea
pushf
lea
xchg
mov
xchg
xchg
xchg
and
sub
in
push
cmp
ds
jmp
js
dec
and
test
xchg
mov
mov
popf
xchg
je
lahf
xchg
jbe
mov
cwde
jnp
test
fwait
jg
stos
popf
cmp
test
cdq
jge
movs
xchg
jnp
mov
xchg
jg
jmp
mov
idiv
sti
push
test
xchg
mov
fwait
(bad)
jne
popf
xchg
js
mov
cwde
jle
test
cmp
lahf
test
lods
mov
mov
mov
mov
mov
(bad)
push
test
mov
mov
mov
mov
mov
stos
lahf
test
stos
mov
repnz
cmp
ds
cli
cld
(bad)
mov
xchg
jnp
mov
pushf
test
test
mov
mov
mov
xchg
push
xchg
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
push
scas
pushf
push
hlt
idiv
mov
mov
cmp
cmp
sti
cld
(bad)
inc
ret
test
mov
scas
movs
nop
push
stos
xchg
push
call
mov
inc
mov
inc
mov
cmps
inc
mov
lods
inc
mov
test
ret
mov
mov
(bad)
mov
clc
cli
(bad)
mov
cmp
(bad)
call
ror
(bad)
mov
mov
(bad)
mov
mov
scas
inc
mov
mov
mov
dec
shl
leave
les
dec
lds
dec
les
dec
ret
mov
mov
(bad)
mov
cmp
aas
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
(bad)
sti
icebp
lock
cld
stc
cli
(bad)
std
std
(bad)
(bad)
std
std
(bad)
(bad)
std
std
(bad)
(bad)
std
std
(bad)
(bad)
std
std
(bad)
(bad)
std
std
(bad)
(bad)
std
std
(bad)
(bad)
std
std
(bad)
(bad)
std
std
(bad)
(bad)
std
std
(bad)
(bad)
std
std
(bad)
(bad)
std
std
(bad)
(bad)
std
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
adc
adc
mov
scas
mov
mov
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
clc
adc
add
add
add
add
add
add
add
and
push
push
push
or
push
jp
arpl
bound
mov
ins
pushf
jnp
jge
jge
jg
add
add
add
add
add
test
scas
test
scas
add
test
scas
add
dec
dec
dec
jne
dec
dec
js
dec
dec
js
(bad)
prefetchnta
add
add
add
push
mov
icebp
repnz
out
jmp
(bad)
in
jecxz
iret
iret
sar
cmps
cmps
cmps
jmp
lods
lods
jmp
mov
push
mov
push
mov
mov
(bad)
mov
rol
ret
inc
(bad)
mov
leave
dec
leave
leave
call
rcl
(bad)
fcmovnu
fdivr
out
lock
sti
cld
cld
inc
enter
(bad)
movlps
add
add
add
add
jbe
div
repz
out
jmp
dec
dec
dec
push
jno
sbb
adc
sbb
and
jmp
es
sub
jmp
sub
jmp
sub
xor
xor
cmp
cmp
ds
inc
inc
inc
inc
dec
dec
dec
dec
call
push
call
pop
call
push
push
je
in
in
in
push
repnz
std
std
std
call
add
add
adc
adc
out
loop
lds
ss
jle
jl
pop
pop
pop
call
push
inc
aas
inc
inc
inc
inc
call
dec
call
pop
jmp
imul
imul
(bad)
jp
jns
jle
jge
add
xchg
jl
jge
mov
stos
push
icebp
icebp
jmp
out
clc
xchg
add
sub
sub
xor
xor
inc
inc
push
push
push
gs
dec
dec
cmp
cmp
ss
gs
cmp
in
fcmovnu
jmp
jo
push
aad
test
int3
in
push
pop
pop
fs
pop
pop
gs
pop
pusha
gs
pop
pop
gs
inc
inc
imul
push
push
push
push
xor
xor
mov
stos
rcr
ror
jmp
pop
push
and
enter
mov
or
or
add
add
js
jns
mov
mov
lods
mov
leave
lods
mov
leave
stos
lods
lods
retf
test
retf
cmps
retf
cmps
retf
movs
retf
movs
cmps
movs
retf
movs
cmps
movs
int
mov
jmp
cmps
movs
rol
enter
(bad)
cmps
movs
shl
movs
mov
retf
movs
cmps
movs
retf
cmps
cmps
movs
retf
cmps
test
retf
cmps
test
test
leave
mov
mov
lods
scas
scas
ret
cmp
sbb
sbb
rcl
shl
loope
out
(bad)
jecxz
fninit
in
(bad)
jecxz
(bad)
in
(bad)
in
(bad)
in
(bad)
jecxz
(bad)
in
(bad)
in
(bad)
jecxz
rcr
(bad)
iret
fcomp
(bad)
fsub
loop
fabs
loop
rcr
(bad)
rcr
(bad)
(bad)
jecxz
fninit
in
fninit
in
fsub
in
fninit
in
fsub
in
fsub
out
fsub
out
fsubp
out
fsubp
out
fsubp
in
lock
cmc
inc
pop
and
int
in
xlat
(bad)
push
ins
call
inc
jmp
inc
jmp
jmp
inc
jmp
inc
jmp
dec
jmp
dec
jmp
dec
jmp
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
push
push
jmp
dec
push
push
push
push
jmp
dec
push
push
jmp
dec
push
dec
jmp
dec
jmp
jmp
push
(bad)
mov
out
out
inc
push
push
and
into
into
jmp
loopne
call
aas
(bad)
cmp
push
inc
or
dec
ss
dec
dec
adc
dec
cmp
call
adc
push
inc
sbb
push
inc
sbb
push
inc
sbb
pop
inc
push
call
sbb
pop
dec
push
call
call
push
call
and
pop
dec
pop
call
call
and
pop
inc
sbb
pop
dec
push
call
sbb
push
inc
sbb
push
inc
pop
push
repnz
push
push
and
iret
into
jmp
loope
call
inc
inc
adc
dec
cmp
sbb
push
inc
sbb
push
inc
sbb
pop
inc
and
pop
inc
and
pop
dec
and
pusha
dec
call
jmp
sub
gs
sub
arpl
jmp
sub
jmp
sub
push
xor
gs
sub
jmp
jmp
sub
addr16
sub
jmp
call
sub
mov
mov
out
repz
pop
pop
and
iret
iret
jmp
loop
call
inc
dec
adc
push
aas
sbb
push
inc
sbb
push
inc
sbb
call
call
call
and
jmp
sub
addr16
sub
push
push
jmp
xor
imul
jmp
xor
push
xor
ins
pop
xor
imul
jmp
xor
gs
sub
imul
push
hlt
cmc
inc
pop
pop
and
rcl
jmp
jecxz
jmp
inc
dec
adc
push
inc
sbb
push
inc
sbb
call
and
pop
dec
and
jmp
sub
addr16
sub
jmp
xor
ins
pop
xor
ins
pop
xor
jno
aaa
jmp
xor
push
cmp
outs
pop
xor
jmp
xor
jno
jmp
xor
ins
pop
xor
imul
pop
push
push
div
inc
pop
pop
and
rcl
jmp
jecxz
jmp
inc
call
push
call
call
pop
call
call
and
bound
jmp
sub
gs
sub
imul
imul
push
aaa
jmp
push
cmp
jno
cmp
ja
cmp
push
push
cmp
push
cmp
outs
pop
push
cmp
imul
push
xor
mov
mov
repz
dec
pop
pop
and
aam
jmp
in
jmp
inc
call
pop
call
push
call
and
pusha
dec
call
jmp
sub
push
sub
jmp
xor
push
cmp
jae
cmp
jae
cmp
jp
inc
push
cmp
push
ds
jl
inc
(bad)
jns
inc
push
cmp
push
cmp
jbe
cmp
outs
pop
xor
push
clc
cli
dec
pop
pop
and
aad
jmp
in
jmp
inc
call
push
call
push
call
and
popa
dec
call
jmp
sub
push
pop
das
push
jmp
xor
push
push
cmp
(bad)
jns
inc
(bad)
jg
inc
(bad)
jp
inc
inc
push
inc
(bad)
jns
inc
push
cmp
push
aaa
jmp
cmp
mov
clc
sti
dec
pop
pop
and
aad
jmp
in
jmp
dec
call
and
bound
jmp
jmp
jmp
push
push
inc
push
inc
(bad)
jg
dec
(bad)
jge
dec
inc
dec
dec
jns
inc
jge
dec
jge
inc
jnp
inc
je
(bad)
jg
dec
(bad)
jge
inc
jmp
aas
(bad)
mov
stc
cld
dec
pop
pop
and
(bad)
jmp
jmp
inc
push
push
(bad)
jg
push
inc
ja
dec
jle
dec
xchg
xchg
test
cwde
mov
xchg
mov
popf
mov
pushf
mov
pushf
mov
mov
mov
mov
lea
mov
mov
(bad)
outs
call
mov
test
inc
mov
dec
pop
pop
and
fcmovu
jmp
out
bnd
je
dec
jnp
dec
and
test
xchg
mov
xchg
mov
pushf
(bad)
jno
call
call
cwde
jp
mov
cdq
jnp
test
jge
cmps
cwde
jnp
stos
popf
jg
movs
xchg
jp
test
jge
mov
cdq
jp
sahf
xchg
je
mov
test
retf
(bad)
(bad)
(bad)
(bad)
dec
pop
pop
and
(bad)
jmp
icebp
hlt
call
jle
call
test
xchg
mov
cwde
mov
pushf
(bad)
jae
sahf
xchg
ja
sahf
xchg
ja
movs
cdq
jge
mov
popf
cmp
scas
mov
test
mov
mov
scas
mov
mov
scas
movs
mov
lods
mov
mov
stos
lahf
test
scas
mov
cmp
sahf
cmp
xchg
jp
into
iret
iret
(bad)
(bad)
(bad)
(bad)
dec
pop
pop
and
(bad)
jmp
hlt
idiv
mov
mov
pushf
nop
ja
fwait
nop
ja
mov
xchg
jge
movs
cdq
jg
cmps
pushf
cmp
pushf
cmp
mov
xchg
mov
(bad)
jmp
stos
nop
push
scas
xchg
push
cdq
push
lods
xchg
push
stos
nop
push
cmps
(bad)
push
popf
xchg
rcl
sar
(bad)
(bad)
(bad)
dec
pop
pop
and
loopne
jmp
idiv
jmp
xchg
jl
movs
fwait
cmp
call
test
mov
mov
scas
movs
mov
mov
xchg
push
scas
cwde
push
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
push
cmps
xchg
(bad)
fcomp
fdivr
(bad)
(bad)
(bad)
dec
pop
pop
and
loope
jmp
clc
cli
push
sahf
mov
scas
movs
(bad)
jmp
test
push
stos
xchg
(bad)
mov
lods
cdq
(bad)
mov
mov
(bad)
mov
mov
inc
mov
movs
inc
mov
test
les
stos
inc
mov
cmps
inc
mov
mov
(bad)
mov
mov
(bad)
(bad)
fdivr
(bad)
(bad)
(bad)
call
and
and
loop
jmp
stc
sti
push
movs
nop
push
stos
xchg
push
scas
pushf
push
mov
(bad)
mov
mov
(bad)
mov
mov
movs
inc
mov
test
enter
les
inc
mov
scas
inc
mov
stos
inc
mov
test
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
call
and
and
jecxz
jmp
sti
std
dec
retf
leave
inc
ret
(bad)
inc
ret
mov
inc
lds
dec
(bad)
mov
dec
mov
dec
leave
ret
enter
retf
int3
leave
ret
retf
ret
dec
leave
ret
dec
retf
(bad)
dec
retf
into
retf
(bad)
dec
leave
ret
retf
ret
dec
enter
retf
retf
mov
(bad)
jmp
(bad)
(bad)
call
push
push
and
jmp
repz
(bad)
(bad)
(bad)
(bad)
div
(bad)
std
repz
(bad)
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
pop
or
jmp
shr
in
int3
in
in
(bad)
in
out
call
in
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
loopne
jecxz
push
push
pop
add
add
push
push
push
pop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
pop
(bad)
clc
ud0
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
push
push
push
or
sbb
sbb
aas
push
sbb
xor
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
outs
cmp
cmp
cmp
jo
sub
dec
add
add
sub
or
sub
or
sub
or
sub
or
sbb
add
add
adc
pop
mov
mov
into
leave
leave
std
int3
(bad)
enter
(bad)
cld
ret
stc
rcl
aam
(bad)
fdivr
fcomp
(bad)
(bad)
loop
jecxz
out
jecxz
out
jecxz
out
jecxz
out
jecxz
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
call
jmp
call
call
jmp
jmp
call
(bad)
call
jmp
jmp
jmp
jmp
in
inc
leave
leave
out
lea
mov
mov
mov
mov
mov
mov
pop
pop
add
add
add
add
add
add
or
in
in
(bad)
jmp
call
jmp
fnstsw
(bad)
fcom
aad
(bad)
fdivr
loopne
loopne
mov
mov
xchg
xchg
xchg
call
call
sahf
popf
sahf
jmp
mov
mov
jmp
cmps
test
test
stos
stos
jmp
scas
jmp
mov
push
mov
push
mov
(bad)
mov
mov
mov
(bad)
mov
mov
sar
(bad)
cld
out
out
div
idiv
hlt
hlt
hlt
push
div
push
repnz
add
add
jmp
in
loope
out
loop
jecxz
fdivrp
mov
popa
(bad)
dec
pop
pusha
call
adc
sbb
jmp
and
jmp
and
sub
sub
push
sub
das
push
xor
cmp
(bad)
cmp
cmp
inc
aas
inc
inc
inc
dec
inc
dec
dec
dec
dec
call
dec
call
push
call
push
call
push
call
pop
call
call
pop
call
dec
leave
leave
push
repz
jmp
push
div
call
add
add
sub
xor
(bad)
xlat
cmc
out
jmp
call
mov
inc
inc
push
je
sbb
and
jmp
and
sub
push
sub
push
das
das
push
xor
push
xor
(bad)
cmp
(bad)
cmp
cmp
inc
aas
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
call
push
call
call
push
call
pop
call
pop
call
pop
call
pop
jmp
popa
call
aad
(bad)
out
out
out
(bad)
jmp
jmp
hlt
hlt
hlt
call
(bad)
(bad)
jmp
dec
dec
dec
pop
iret
int3
int
lock
push
out
lock
mov
sub
inc
inc
call
dec
dec
call
dec
dec
dec
inc
inc
inc
inc
inc
dec
inc
inc
inc
call
push
call
push
call
pop
jmp
jmp
imul
bound
jmp
jmp
outs
push
jne
js
js
jp
jp
jge
jge
jg
jg
add
inc
xchg
call
repnz
clc
clc
clc
push
div
call
aad
out
inc
inc
dec
sbb
sbb
dec
dec
dec
pop
pop
pop
pop
bound
jle
pop
pop
mov
popa
popa
mov
xchg
xchg
xchg
mov
xchg
xchg
mov
test
mov
pop
pop
mov
pop
pop
mov
pop
pop
mov
add
fcmovnu
(bad)
rol
jecxz
cwde
call
retf
loopne
loopne
loope
loope
mov
mov
mov
mov
cmps
mov
cmps
cmps
mov
cmps
test
mov
mov
fs
lods
lods
lods
mov
ins
ins
ins
jno
pop
pop
push
push
push
pop
pop
pop
pop
and
add
add
pusha
imul
(bad)
dec
add
add
add
add
(bad)
jmp
fstp
inc
inc
dec
push
push
push
data16
sar
fcmovbe
sar
cmp
xchg
xchg
nop
mov
aam
(bad)
fcom
iret
(bad)
aas
ds
add
imul
mov
fwait
mov
mov
test
sahf
add
lahf
add
lahf
add
jle
jge
jnp
mov
int3
enter
(bad)
jmp
jp
mov
mov
lods
in
mov
leave
mov
xchg
xchg
nop
sar
mov
jle
jp
jle
jp
jg
jl
jg
jl
cmp
add
mov
add
lahf
add
fwait
mov
mov
inc
inc
dec
jb
jb
div
idiv
loope
in
(bad)
in
loopne
in
loopne
in
loopne
in
fucom
loopne
fsub
loopne
fsub
(bad)
fneni(8087
fdivrp
fneni(8087
fdivrp
fneni(8087
fdivrp
(bad)
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fdivr
(bad)
(bad)
aam
(bad)
dec
ror
dec
ror
call
aam
(bad)
fcomp
(bad)
xlat
(bad)
dec
rcl
dec
into
int3
dec
iret
int
rcr
aad
fcomp
(bad)
fcomp
(bad)
fcomp
fdivr
(bad)
fdivr
(bad)
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fdivrp
fneni(8087
(bad)
fsub
loopne
fsub
loopne
fucom
loope
fsubp
loop
jecxz
out
jecxz
out
jecxz
out
in
out
out
(bad)
(bad)
fxtract
and
and
cdq
cdq
cdq
lods
in
out
retf
aam
dec
fcom
call
(bad)
call
(bad)
call
(bad)
call
fnstsw
call
(bad)
call
fnstsw
call
fnstsw
call
fnstsw
call
(bad)
call
fnstsw
call
loopne
call
(bad)
call
loopne
call
(bad)
call
loopne
call
(bad)
call
loopne
call
loopne
call
loopne
call
loopne
call
loopne
(bad)
fsub
jecxz
xlat
loopne
call
loopne
(bad)
fsub
jecxz
fsub
jecxz
fsub
jecxz
xlat
loopne
(bad)
fsub
jecxz
fsub
jecxz
fsub
jecxz
fsub
jecxz
fsub
jecxz
fabs
in
fsub
jecxz
fsub
jecxz
(bad)
in
fsub
jecxz
xlat
(bad)
call
fcmovu
call
fcmovu
jmp
out
inc
aas
inc
add
add
call
call
fcmovu
push
js
(bad)
jns
jo
jl
jb
jnp
jo
jge
jno
jge
jo
jge
jno
jle
jno
jge
jo
jg
jb
jle
jno
cmp
inc
jge
inc
jg
inc
xor
jle
inc
jle
inc
jg
inc
xor
jle
inc
je
cmp
add
inc
jle
inc
jg
inc
jge
call
fdivr
(bad)
(bad)
jmp
out
inc
inc
dec
add
add
cdq
cdq
cdq
lods
in
out
aam
fdivr
call
push
sub
inc
push
(bad)
cmp
or
inc
xor
inc
or
inc
xor
inc
or
inc
xor
dec
adc
inc
xor
call
adc
dec
xor
pop
dec
adc
push
inc
pop
call
adc
call
sbb
dec
cmp
call
push
call
push
call
sbb
push
inc
sbb
push
aas
sbb
pop
dec
pop
call
pop
call
pop
call
call
sbb
pop
inc
sbb
call
sbb
call
pop
call
sbb
dec
cmp
dec
adc
jno
popa
call
fstp
call
fstp
jmp
out
inc
inc
dec
add
add
cdq
cdq
cdq
lods
in
call
call
xor
dec
sbb
inc
aaa
adc
push
inc
sbb
dec
cmp
call
call
sbb
push
inc
sbb
pop
inc
sbb
call
and
push
inc
sbb
pusha
dec
and
call
and
call
and
push
sub
pop
dec
and
push
sub
pusha
dec
and
jmp
sub
pop
dec
jmp
call
jmp
sub
call
daa
jmp
sub
jmp
sub
bound
call
and
push
sub
pop
dec
and
pop
inc
pop
(bad)
jp
push
xlat
fstp
(bad)
fcomp
fdivrp
out
out
inc
inc
inc
dec
add
add
fwait
fwait
fwait
lods
out
jmp
call
xor
inc
adc
dec
adc
push
inc
sbb
dec
cmp
call
sbb
call
sbb
call
call
and
push
inc
push
jmp
sub
pop
dec
and
pusha
dec
sub
bound
call
jmp
sub
jmp
jmp
jmp
sub
push
das
call
sub
imul
arpl
jmp
sub
call
sub
imul
popa
push
sub
popa
push
sub
push
dec
and
push
sub
pusha
dec
and
(bad)
jnp
imul
fsubp
(bad)
fcmovu
(bad)
out
call
dec
add
add
fwait
fwait
fwait
lods
out
jmp
call
xor
dec
push
call
sbb
dec
cmp
dec
pop
call
pop
call
sbb
pop
inc
and
pop
dec
and
push
inc
and
bound
call
and
gs
sub
pop
dec
and
bound
jmp
sub
pop
dec
sub
imul
pusha
dec
sub
push
xor
push
push
sub
jmp
sub
outs
pop
xor
imul
push
xor
bound
jmp
xor
push
push
sub
ins
pop
xor
pop
dec
daa
jmp
sub
call
sbb
(bad)
fcmovu
loope
fcmovnu
loopne
out
call
dec
add
add
fwait
fwait
fwait
lods
out
jmp
fcomp
(bad)
sahf
mov
adc
dec
cmp
sbb
dec
cmp
push
call
sbb
pop
dec
and
push
inc
sbb
pop
dec
and
pop
dec
and
pop
dec
and
fs
sub
pop
dec
and
addr16
sub
popa
push
daa
jmp
jmp
sub
jmp
xor
fs
sub
ins
pop
xor
ins
pop
xor
push
das
push
aaa
jmp
jmp
jmp
xor
push
xor
jb
cmp
push
jmp
jmp
xor
arpl
jmp
xor
gs
sub
arpl
jmp
call
pop
push
(bad)
fneni(8087
loope
fsub
loope
call
inc
inc
dec
add
add
fwait
fwait
fwait
lods
call
loopne
call
xor
call
sbb
push
inc
sbb
push
aas
sbb
pop
dec
push
call
sbb
pop
dec
and
push
inc
sbb
call
and
pop
dec
and
push
sub
pop
dec
and
jmp
sub
push
jmp
jmp
push
jmp
das
jmp
xor
jmp
xor
je
cmp
imul
outs
pop
aaa
push
jmp
xor
je
cmp
ins
pop
xor
imul
jae
cmp
push
push
jmp
xor
arpl
jmp
xor
pop
dec
and
jne
push
(bad)
fsub
loope
jmp
inc
inc
dec
add
add
popf
fwait
fwait
lods
jmp
loopne
call
xor
call
sbb
push
inc
sbb
push
inc
sbb
pop
dec
pop
call
call
and
jmp
sub
pusha
dec
call
jmp
sub
jmp
jmp
sub
push
pop
xor
push
das
push
cmp
ins
pop
xor
outs
pop
push
cmp
push
xor
ja
cmp
jmp
cmp
jns
cmp
push
cmp
jmp
xor
jmp
xor
outs
pop
aaa
push
aaa
jmp
push
jmp
push
push
(bad)
fsubp
jecxz
jmp
dec
add
add
popf
popf
popf
lods
jmp
in
(bad)
fndisi(8087
loope
sahf
mov
adc
pop
inc
sbb
call
push
call
and
push
inc
push
jmp
daa
call
and
arpl
jmp
daa
call
sub
imul
pusha
dec
sub
outs
pop
xor
imul
push
cmp
push
fs
jo
jmp
cmp
jp
jmp
xor
push
cmp
jo
cmp
jge
inc
jmp
push
push
cmp
ins
pop
ss
jp
aas
push
jmp
push
cmp
imul
jmp
cs
js
imul
fsubp
jecxz
jmp
jmp
inc
inc
inc
dec
add
add
popf
popf
popf
lods
in
out
out
(bad)
fucom
jecxz
sahf
mov
adc
pop
dec
push
call
sbb
pop
dec
and
pop
dec
and
push
inc
and
fs
sub
pop
dec
and
push
sub
arpl
jmp
sub
ins
pop
xor
bound
push
jmp
jmp
xor
jbe
cmp
push
xor
js
push
cmp
jo
cmp
jle
inc
push
cmp
jnp
inc
(bad)
jp
aas
push
cmp
sub
jne
cmp
jbe
aas
(bad)
jge
inc
jmp
aaa
(bad)
jnp
inc
push
cmp
ins
pop
aaa
(bad)
jp
aas
jmp
xor
jmp
xor
jns
push
fucom
in
(bad)
in
in
in
in
inc
inc
dec
add
add
popf
popf
popf
lods
in
out
out
(bad)
fsubp
in
sahf
mov
adc
pop
dec
pop
call
sbb
pop
dec
and
pop
dec
and
pop
dec
and
push
sub
pop
dec
and
push
push
sub
fs
sub
jmp
push
cmp
outs
pop
xor
ins
pop
ss
jns
cmp
(bad)
jp
inc
push
cmp
inc
bound
jl
inc
(bad)
jg
inc
push
inc
push
inc
bound
(bad)
jp
inc
(bad)
jl
inc
jmp
aaa
(bad)
jnp
inc
push
cmp
imul
jb
ss
jnp
imul
loop
jmp
jecxz
(bad)
in
in
in
inc
inc
dec
add
add
popf
popf
popf
lods
in
out
lock
(bad)
in
sahf
mov
adc
call
sbb
pop
dec
and
pop
dec
and
pop
dec
and
push
sub
pop
dec
and
imul
jmp
push
xor
push
sub
push
xor
(bad)
jnp
jmp
ss
jnp
inc
(bad)
jp
aas
push
cmp
xor
js
ds
jnp
inc
inc
fs
(bad)
jle
inc
push
aas
inc
aas
push
inc
inc
pusha
cmp
jp
inc
(bad)
jnp
inc
jmp
push
aaa
(bad)
jl
ins
(bad)
(bad)
out
loope
out
in
in
in
inc
inc
dec
add
add
lahf
lahf
lahf
lods
out
lock
(bad)
in
popf
sahf
popf
inc
call
push
call
sbb
pop
dec
and
pop
dec
and
pop
dec
jmp
sub
pop
dec
daa
jmp
xor
push
pop
xor
jne
cmp
imul
jp
inc
push
cmp
jae
cmp
push
inc
outs
inc
(bad)
jns
inc
dec
outs
inc
(bad)
jg
dec
dec
imul
jne
inc
imul
ins
inc
push
inc
inc
fs
(bad)
jg
inc
jmp
jmp
xor
jge
ins
(bad)
(bad)
out
loop
out
out
out
out
inc
inc
dec
add
add
lahf
lahf
lahf
lods
out
icebp
bnd
out
jmp
sub
ins
pop
xor
push
push
cmp
(bad)
jnp
dec
push
inc
inc
outs
dec
inc
jp
inc
jg
dec
jp
call
jnp
call
xchg
lea
call
test
xchg
and
(bad)
imul
and
mov
fwait
mov
mov
call
xchg
mov
call
jle
inc
sbb
jns
inc
dec
in
jmp
out
push
lock
inc
inc
dec
add
add
lahf
lahf
lahf
lods
cmc
div
jmp
jmp
jno
dec
(bad)
jg
dec
(bad)
jp
dec
inc
jo
inc
pop
inc
sbb
jp
dec
test
mov
xchg
mov
xchg
test
nop
and
mov
xchg
test
cdq
lea
lahf
nop
outs
call
xchg
jae
sahf
nop
outs
call
cwde
ja
popf
mov
pushf
(bad)
jno
movs
xchg
jbe
cdq
mov
mov
xchg
jb
xchg
mov
mov
(bad)
outs
call
(bad)
jo
xchg
mov
mov
cwde
xchg
mov
call
in
out
push
hlt
repz
inc
dec
add
add
mov
stc
stc
(bad)
jmp
(bad)
jns
push
inc
jae
dec
jne
dec
jle
dec
xchg
lea
call
dec
mov
cdq
mov
xchg
mov
mov
mov
sahf
xchg
je
movs
xchg
ja
fwait
mov
cmps
cwde
jp
movs
xchg
js
lahf
xchg
je
stos
popf
jle
movs
xchg
js
mov
sahf
jg
mov
xchg
js
test
jnp
popf
(bad)
jb
mov
xchg
ja
cwde
mov
mov
xchg
jno
pop
mov
jmp
in
out
push
cmc
cmc
inc
inc
dec
add
add
mov
cli
sti
(bad)
jmp
inc
jp
inc
and
jl
call
test
mov
outs
call
mov
popf
nop
jb
xchg
mov
mov
xchg
jne
pushf
(bad)
je
test
jge
mov
xchg
jnp
stos
sahf
jg
mov
sahf
cmp
lahf
cmp
scas
mov
cmp
cdq
jg
mov
xchg
test
jg
cmps
cdq
jle
scas
mov
jl
movs
cwde
jl
stos
sahf
cmp
xchg
ja
mov
call
popf
call
in
out
icebp
push
div
inc
dec
add
add
mov
cld
std
(bad)
in
out
icebp
(bad)
mov
jle
dec
sub
mov
mov
jno
xchg
mov
xchg
mov
lahf
xchg
ja
cdq
lea
sahf
xchg
js
mov
(bad)
jbe
cmps
fwait
jg
movs
cwde
jl
mov
mov
jg
test
cmp
movs
mov
cmps
fwait
cmp
mov
mov
test
test
push
lahf
mov
mov
nop
jmp
sahf
test
mov
mov
lods
mov
cmp
movs
mov
test
cmp
cwde
jg
lods
mov
js
mov
out
lock
out
lock
idiv
inc
dec
add
add
mov
std
(bad)
(bad)
out
lock
ret
sar
test
xchg
mov
xchg
mov
call
call
nop
ja
fwait
nop
js
movs
cdq
jle
sahf
xchg
jp
movs
cwde
cmp
pushf
cmp
xchg
jle
lods
mov
test
cmps
pushf
cmp
cmps
mov
lods
mov
mov
mov
nop
jmp
test
push
mov
xchg
push
movs
nop
push
stos
xchg
jmp
lods
xchg
push
mov
(bad)
jmp
sahf
test
mov
mov
cmps
fwait
cmp
out
out
repnz
repnz
stc
clc
stc
inc
dec
add
add
mov
(bad)
(bad)
push
repnz
inc
mov
call
xchg
jl
mov
xchg
jp
movs
call
mov
lahf
xchg
movs
cdq
cmp
lods
mov
test
mov
mov
mov
mov
lods
mov
xchg
push
cmps
(bad)
(bad)
mov
test
xchg
(bad)
mov
stos
xchg
(bad)
mov
mov
push
mov
(bad)
mov
test
(bad)
mov
scas
xchg
push
scas
xchg
push
mov
xchg
jmp
stos
movs
push
icebp
repz
repz
(bad)
cli
cli
cli
inc
dec
add
add
mov
(bad)
(bad)
push
repz
dec
retf
cdq
nop
jge
lahf
xchg
jle
movs
fwait
test
movs
fwait
test
mov
mov
xchg
test
mov
mov
(bad)
jmp
cmps
(bad)
push
mov
xchg
push
xchg
(bad)
mov
lods
xchg
push
mov
(bad)
mov
mov
inc
mov
(bad)
mov
mov
inc
mov
mov
inc
mov
pushf
(bad)
mov
mov
push
mov
(bad)
mov
stos
xchg
push
stos
xchg
push
repnz
push
cmc
idiv
sti
sti
sti
inc
dec
add
add
movs
movs
movs
lods
(bad)
(bad)
(bad)
push
hlt
cmc
dec
int
call
pushf
xchg
stos
mov
mov
test
mov
mov
xchg
jmp
nop
push
movs
nop
push
lods
cwde
push
mov
(bad)
mov
lods
cdq
inc
mov
(bad)
mov
mov
inc
mov
mov
inc
mov
movs
(bad)
mov
mov
test
mov
mov
movs
(bad)
mov
mov
sahf
(bad)
mov
mov
fwait
(bad)
mov
mov
(bad)
mov
repz
push
div
(bad)
cld
cld
cld
inc
dec
add
add
movs
movs
movs
lods
(bad)
(bad)
(bad)
push
cmc
idiv
rcl
iret
jmp
mov
xchg
jmp
cmps
xchg
push
test
push
fwait
push
mov
(bad)
mov
scas
fwait
(bad)
mov
mov
(bad)
mov
mov
mov
inc
mov
cmps
inc
mov
scas
inc
mov
stos
dec
ret
ret
inc
mov
mov
ret
mov
cmps
dec
shr
mov
inc
mov
mov
(bad)
mov
mov
cmc
push
idiv
(bad)
cld
cld
std
inc
dec
add
add
movs
movs
movs
lods
(bad)
(bad)
(bad)
push
cmc
idiv
rcl
sar
stos
movs
xchg
push
scas
fwait
push
call
scas
fwait
(bad)
mov
mov
(bad)
mov
mov
inc
mov
mov
inc
mov
cmps
dec
shr
mov
scas
dec
shr
(bad)
mov
leave
shl
into
(bad)
mov
leave
shl
into
(bad)
mov
leave
shr
int
mov
enter
ret
mov
scas
inc
mov
cmps
inc
mov
mov
push
idiv
(bad)
std
std
std
inc
inc
dec
add
add
movs
movs
movs
lods
(bad)
(bad)
(bad)
push
idiv
call
(bad)
(bad)
jmp
stos
lahf
push
lods
mov
push
scas
mov
(bad)
mov
mov
(bad)
mov
mov
push
mov
stos
(bad)
mov
mov
stos
(bad)
mov
mov
lods
(bad)
mov
mov
scas
(bad)
mov
mov
mov
mov
mov
scas
(bad)
mov
mov
lods
(bad)
mov
mov
lods
(bad)
mov
mov
inc
ret
cmc
div
(bad)
clc
clc
cli
(bad)
(bad)
(bad)
(bad)
inc
inc
dec
add
add
movs
cmps
movs
lods
(bad)
(bad)
(bad)
push
cmc
idiv
out
out
lock
jecxz
jmp
jecxz
jmp
jecxz
jmp
loop
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loopne
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loopne
jmp
loopne
jmp
loope
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
(bad)
call
idiv
(bad)
stc
stc
cli
(bad)
(bad)
(bad)
(bad)
inc
inc
dec
add
add
movs
movs
movs
lods
(bad)
(bad)
(bad)
push
div
push
repz
stc
out
out
(bad)
stc
lock
(bad)
stc
out
out
(bad)
stc
div
(bad)
cli
sti
cld
(bad)
cli
cli
sti
(bad)
cli
cli
sti
(bad)
sti
cli
cld
(bad)
sti
cli
cld
(bad)
sti
cli
cld
(bad)
sti
cli
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
cli
sti
cld
(bad)
cli
sti
cld
(bad)
sti
sti
cld
(bad)
cli
sti
cld
(bad)
cli
sti
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
sti
cli
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
sti
cli
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
cld
sti
std
(bad)
cld
sti
std
(bad)
cld
sti
std
(bad)
cld
sti
std
(bad)
cld
sti
std
(bad)
cld
sti
std
(bad)
cld
sti
std
(bad)
cld
sti
std
(bad)
sti
cli
cld
(bad)
clc
idiv
(bad)
cli
stc
sti
(bad)
(bad)
(bad)
(bad)
inc
dec
add
add
add
(bad)
(bad)
(bad)
clc
hlt
(bad)
jmp
(bad)
jmp
loopne
jmp
(bad)
(bad)
stc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
hlt
hlt
cli
daa
daa
daa
sub
add
add
adc
test
scas
lods
stos
stos
mov
test
test
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
stos
stos
stos
scas
lods
lods
lods
mov
movs
movs
test
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
clc
add
add
sldt
(bad)
jmp
xchg
inc
add
jmp
xchg
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
or
sub
add
inc
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
sub
add
add
add
add
add
mov
retf
test
xchg
mov
stos
scas
scas
repnz
scas
scas
rep
scas
scas
rep
scas
scas
rep
scas
scas
rep
scas
scas
rep
scas
mov
lods
scas
mov
lods
scas
mov
lods
scas
mov
lods
scas
mov
lods
scas
mov
scas
scas
mov
scas
scas
mov
scas
mov
repz
mov
repz
mov
repz
mov
repz
mov
repz
mov
repz
mov
repz
mov
repz
mov
repz
mov
repz
mov
repz
mov
repz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
arpl
inc
inc
inc
sbb
pop
pop
pop
cmps
pop
pop
pop
cmps
pop
pop
pop
cmps
pop
pop
pop
cmps
push
push
push
pushf
or
or
sbb
sbb
xlat
rcl
clc
icebp
in
in
(bad)
out
jmp
jmp
jecxz
(bad)
fcmovu
(bad)
loop
in
loop
in
loop
in
jecxz
in
jmp
out
(bad)
in
out
lock
out
lock
(bad)
out
lock
(bad)
in
lock
(bad)
out
lock
(bad)
out
lock
(bad)
out
lock
(bad)
out
icebp
repnz
out
icebp
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repz
push
repz
repz
repz
push
repz
push
repz
push
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
idiv
hlt
cmc
idiv
repz
idiv
cmc
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
leave
leave
repnz
out
in
(bad)
jmp
jmp
out
icebp
lock
mov
or
push
push
push
push
or
jmp
out
in
loop
in
loop
out
loop
out
loop
fcom
sar
(bad)
aam
fstp
(bad)
(bad)
fdivrp
aam
aad
popf
pushf
popf
dec
(bad)
call
xchg
xchg
call
xchg
xchg
call
xchg
cwde
call
call
popf
pushf
popf
call
lahf
mov
jmp
mov
movs
jmp
cmps
test
test
stos
stos
jmp
lods
lods
jmp
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
mov
mov
mov
jmp
out
mul
out
cld
out
out
out
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
push
div
jmp
gs
add
add
jmp
loope
in
loope
in
loope
out
loop
aad
iret
jmp
mov
xchg
xchg
xchg
push
xor
call
pop
pop
jmp
sbb
and
and
and
and
jmp
es
daa
sub
sub
sub
xor
das
push
xor
xor
xor
(bad)
cmp
ss
cmp
cmp
cmp
(bad)
aas
cmp
inc
aas
inc
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
call
push
call
push
call
call
push
call
pop
call
pop
call
call
pop
call
pop
dec
sti
cld
(bad)
jmp
jmp
jmp
(bad)
jmp
dec
leave
leave
fisttp
push
push
adc
add
add
cmp
loop
jmp
loop
jmp
loopne
jmp
loopne
jmp
loop
(bad)
(bad)
fdivr
popa
pop
pop
call
push
pop
call
sbb
call
dec
dec
jmp
daa
sub
sub
sub
xor
das
push
xor
(bad)
cmp
(bad)
cmp
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
push
call
push
call
pop
call
pop
call
pop
call
pop
jmp
pusha
jmp
(bad)
jmp
arpl
gs
jmp
popa
jmp
div
(bad)
jmp
jmp
jmp
jmp
repnz
push
add
add
add
add
xchg
mov
(bad)
call
loopne
jmp
loop
jmp
(bad)
inc
push
and
and
xchg
call
sbb
jmp
and
jmp
and
sub
daa
jmp
sub
push
sub
das
push
xor
aaa
xor
push
xor
aaa
xor
(bad)
cmp
aaa
(bad)
cmp
cmp
cmp
inc
cmp
inc
ds
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
call
push
call
push
call
pop
call
pop
call
pop
call
pop
jmp
pusha
jmp
popa
call
pop
push
hlt
cmc
(bad)
jmp
jmp
stc
stc
stc
call
add
add
add
add
or
push
xchg
xchg
xchg
cmps
jmp
out
out
push
out
out
push
jmp
jmp
sbb
jmp
sbb
push
jo
call
inc
aas
inc
inc
inc
(bad)
cmp
inc
cmp
inc
ds
inc
inc
inc
inc
inc
dec
inc
dec
dec
call
dec
call
push
call
push
call
pop
call
pop
call
call
pop
call
call
pop
jmp
pusha
jmp
jmp
push
jmp
jmp
outs
push
jo
jno
jno
jae
jae
jne
je
ja
ja
jl
jge
jle
jle
jp
jnp
jp
jnp
add
(bad)
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
cmc
cmc
jmp
or
sldt
add
cmp
cmp
je
mov
mov
push
jmp
nop
(bad)
nop
out
retf
out
mov
mov
mov
out
fs
imul
out
ins
imul
ins
push
lock
sahf
mov
call
aam
call
aam
dec
enter
enter
leave
retf
out
rcl
shl
(bad)
(bad)
fstp
fdivrp
(bad)
loopne
fcmovu
(bad)
iret
rcl
out
rcl
aam
aam
aad
aad
xlat
out
(bad)
xlat
fsubr
fcomp
(bad)
(bad)
(bad)
(bad)
fucomi
fcmovnu
fucomp
rcl
shr
test
cmc
(bad)
fucomp
fcmovu
fdiv
fcomp
ftst
mov
mov
mov
(bad)
popf
xchg
push
pop
add
add
add
add
and
and
es
and
and
and
and
and
and
and
and
and
cmp
int
out
loop
jmp
loope
call
aam
icebp
inc
inc
inc
inc
and
and
jno
jmp
out
in
loopne
jmp
mov
and
and
and
and
and
and
and
and
adc
adc
es
sbb
adc
adc
mov
aad
(bad)
(bad)
sar
leave
ret
shr
sbb
pop
dec
dec
dec
pop
(bad)
fdivr
(bad)
rcl
(bad)
(bad)
(bad)
call
add
add
mov
(bad)
ror
call
iret
int3
inc
mov
pop
sbb
add
add
add
add
dec
pop
fcmovbe
sar
ror
retf
(bad)
fcmovbe
sar
lea
add
or
or
pop
pop
pop
gs
pop
pop
addr16
pop
pop
addr16
pop
pop
addr16
pop
pop
addr16
pop
pop
addr16
pop
pop
push
pop
pop
pop
imul
imul
imul
ins
pop
pop
pop
ins
pop
pop
pop
ins
pop
pop
push
ins
pop
pop
push
ins
pop
pop
push
outs
pop
pop
push
outs
pop
pop
push
outs
pop
pop
push
outs
push
push
push
outs
gs
mov
leave
dec
retf
enter
mov
xchg
push
jno
push
push
jo
add
retf
dec
retf
(bad)
jmp
push
push
jo
push
push
jb
push
push
jb
push
push
jno
push
push
jno
push
push
jo
pop
push
jo
push
push
outs
pop
pop
push
outs
pop
pop
push
outs
pop
pop
push
outs
pop
pop
push
outs
pop
pop
push
ins
pop
pop
push
ins
pop
pop
push
ins
pop
pop
pop
ins
pop
pop
pop
ins
pop
pop
pop
push
pop
pop
addr16
pop
pop
addr16
pop
pop
addr16
pop
pop
addr16
push
push
pop
sub
add
add
or
or
lock
jmp
(bad)
call
jmp
call
in
jmp
loope
jmp
loopne
(bad)
(bad)
fdivrp
(bad)
(bad)
fstp
fdivr
(bad)
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovu
fdivr
(bad)
fdivr
(bad)
xlat
(bad)
fcomp
(bad)
call
fcom
call
xlat
aam
aad
sar
retf
retf
leave
dec
retf
(bad)
dec
leave
(bad)
dec
retf
rcl
int
rcl
iret
call
ror
dec
int3
enter
sar
(bad)
(bad)
leave
retf
rcl
into
call
ror
call
ror
call
aam
call
aad
call
aad
call
(bad)
sar
(bad)
xlat
aam
xlat
fcom
(bad)
fcomp
(bad)
(bad)
fcomp
xlat
(bad)
(bad)
xlat
(bad)
fcmovu
fdivr
fcmovnu
fcos
fcmovnu
(bad)
(bad)
(bad)
fstp
fdivr
loopne
loopne
jmp
jmp
(bad)
jmp
jmp
(bad)
out
out
out
(bad)
jmp
add
add
add
add
aaa
aaa
aaa
inc
lock
(bad)
(bad)
int3
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
(bad)
aam
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
iret
xlat
aad
iret
(bad)
aad
iret
(bad)
aad
iret
xlat
aad
iret
(bad)
(bad)
dec
(bad)
aad
rcl
(bad)
dec
(bad)
aad
iret
(bad)
aad
iret
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
xlat
(bad)
call
xlat
(bad)
call
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
call
xlat
(bad)
call
xlat
(bad)
call
fcom
call
fcom
call
fcom
call
xlat
xlat
call
xlat
fdivr
rcl
xlat
call
fcom
call
fcom
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
fcomp
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
fcomp
push
icebp
icebp
push
add
add
add
add
dec
pop
out
out
out
call
(bad)
aad
int
aad
into
(bad)
aad
aad
(bad)
xlat
loope
call
loope
(bad)
fsub
loopne
xlat
loopne
(bad)
fsub
loope
fsub
loope
fsub
loope
fsub
loope
fsub
loope
fsub
loope
fsub
loope
fsub
loope
fabs
loope
fabs
loope
fsub
loope
fabs
loop
(bad)
loop
fabs
loop
fabs
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
fninit
jecxz
fninit
in
fninit
in
fninit
in
fninit
in
fninit
in
fninit
in
fsub
in
fninit
in
fsub
in
fsub
in
fsub
in
fsub
in
fsub
in
fsub
in
fsub
in
fsub
in
aam
fdivr
rcr
(bad)
rcr
fcos
jecxz
out
ret
ret
ret
fmul
or
push
add
add
dec
dec
dec
pop
out
out
out
call
xlat
(bad)
dec
xlat
(bad)
dec
aad
jmp
xchg
call
call
xchg
cdq
cwde
call
call
xchg
call
xchg
call
xchg
call
cwde
call
xchg
call
cwde
call
cdq
fwait
cdq
call
call
cdq
fwait
cdq
call
fwait
call
call
cdq
fwait
cdq
call
fwait
call
fwait
cdq
call
fwait
call
fwait
call
fwait
cdq
call
pushf
call
fwait
call
pushf
call
fwait
call
mov
iret
call
fcmovnu
call
fcmovu
jmp
in
inc
ret
ret
fisttp
push
push
adc
add
add
dec
pop
out
out
out
call
xlat
(bad)
call
fcom
dec
rcl
call
inc
(bad)
cmp
adc
xor
das
adc
(bad)
cmp
adc
inc
xor
inc
(bad)
cmp
adc
inc
cmp
inc
adc
aas
xor
dec
sbb
inc
cmp
dec
sbb
dec
cmp
inc
adc
push
aas
push
dec
sbb
inc
ss
call
pop
dec
sbb
inc
aaa
sbb
push
inc
and
push
inc
sbb
call
and
push
inc
pop
dec
sbb
push
inc
and
push
inc
and
dec
cmp
dec
and
push
inc
and
dec
cmp
push
call
and
dec
sbb
push
inc
and
push
inc
push
dec
sbb
push
inc
and
push
inc
pop
dec
sbb
dec
cmp
and
dec
cmp
inc
sbb
push
inc
sbb
(bad)
mov
(bad)
call
fcmovu
jmp
out
inc
(bad)
(bad)
fimul
add
add
dec
pop
out
out
out
call
xlat
xlat
call
fcomp
dec
rcl
call
inc
inc
adc
inc
xor
dec
sbb
dec
cmp
inc
call
sbb
push
aas
push
dec
adc
pop
inc
sbb
push
inc
push
dec
adc
pop
dec
sbb
dec
pop
call
and
pop
inc
sbb
push
inc
sbb
popa
dec
and
call
jmp
call
and
push
inc
sbb
jmp
and
pop
inc
push
jmp
jmp
sub
pop
dec
and
popa
push
sub
imul
call
and
jmp
and
pop
dec
and
imul
arpl
call
and
push
push
daa
call
and
popa
dec
daa
jmp
sub
pop
dec
and
pop
dec
and
push
dec
and
push
inc
sbb
bound
call
sub
mov
(bad)
call
fcmovu
jmp
out
inc
(bad)
(bad)
fimul
add
add
dec
pop
out
out
out
call
fcomp
call
(bad)
dec
aam
call
inc
inc
adc
inc
xor
dec
sbb
dec
cmp
inc
adc
push
inc
sbb
push
inc
pop
dec
adc
pop
inc
push
call
dec
pop
call
call
sbb
push
aas
sbb
pop
dec
and
pop
dec
pop
call
sbb
bound
call
and
push
inc
push
jmp
sub
pusha
dec
and
jmp
jmp
sub
pop
dec
and
arpl
jmp
sub
pop
dec
and
jmp
das
jmp
daa
call
jmp
jmp
sub
pop
dec
jmp
xor
push
sub
pop
dec
and
push
sub
call
and
jmp
call
and
jmp
sub
call
pop
call
call
xor
mov
(bad)
call
fcmovnu
jmp
out
inc
(bad)
(bad)
fimul
add
add
dec
pop
lock
fcomp
call
(bad)
dec
aam
call
inc
adc
inc
xor
call
sbb
dec
adc
push
inc
sbb
dec
call
and
push
inc
sbb
dec
ds
pop
dec
and
pop
inc
sbb
jmp
call
and
push
inc
push
jmp
call
and
push
inc
and
gs
sub
arpl
call
and
gs
sub
push
dec
and
jmp
das
jmp
daa
call
sub
outs
pop
xor
arpl
call
sub
outs
pop
xor
addr16
sub
pop
dec
daa
jmp
xor
push
call
daa
jmp
sub
ins
pop
xor
bound
call
jmp
jmp
call
and
fs
sub
push
sub
pop
dec
and
pop
inc
and
push
dec
xor
mov
loopne
call
(bad)
jmp
call
(bad)
or
add
dec
dec
dec
pop
icebp
icebp
lock
(bad)
call
fcmovu
dec
aad
call
inc
inc
adc
inc
aaa
adc
dec
push
dec
adc
call
pop
dec
sbb
pop
dec
and
push
inc
sbb
push
inc
sbb
pusha
dec
and
call
sbb
call
and
push
inc
and
gs
sub
popa
dec
call
and
addr16
sub
call
and
push
jmp
jmp
daa
jmp
sub
outs
pop
xor
fs
sub
pusha
push
sub
jo
xor
call
sub
outs
pop
xor
jmp
sub
push
xor
outs
pop
xor
arpl
jmp
sub
jo
xor
push
sub
pop
dec
daa
jmp
xor
imul
jmp
sub
ins
pop
xor
pusha
dec
and
call
(bad)
mov
loopne
(bad)
fcomp
(bad)
out
call
fimul
add
add
dec
pop
icebp
icebp
icebp
call
fcmovu
call
fcmovnu
dec
aad
call
inc
inc
ud0
adc
dec
adc
dec
cmp
call
pop
call
pop
call
sbb
pop
dec
and
push
inc
sbb
push
inc
sbb
bound
call
pop
call
pop
jmp
call
and
pop
inc
and
addr16
sub
call
and
push
push
sub
pop
dec
daa
jmp
das
jmp
xor
bound
jmp
sub
jmp
sub
bound
push
aaa
jmp
xor
popa
dec
sub
outs
pop
jmp
xor
fs
sub
addr16
xor
jae
aaa
jmp
jmp
sub
jb
aaa
jmp
das
jmp
sub
push
xor
outs
pop
xor
arpl
call
sub
outs
pop
xor
gs
sub
pop
dec
and
dec
inc
cs
mov
loope
(bad)
fcomp
(bad)
out
jmp
fimul
add
add
dec
pop
icebp
icebp
icebp
call
fcmovu
call
fcmovnu
dec
aad
call
inc
inc
ud0
push
call
sbb
dec
cmp
sbb
pop
dec
and
push
inc
sbb
push
inc
sbb
pusha
dec
and
push
inc
sbb
push
inc
push
jmp
sub
pop
dec
and
push
inc
and
gs
sub
pusha
dec
and
jmp
das
jmp
sub
pop
dec
and
jmp
jmp
sub
addr16
das
push
xor
gs
sub
fs
push
jmp
das
jmp
sub
jmp
xor
fs
sub
push
aaa
jmp
xor
push
xor
jbe
cmp
ins
pop
xor
bound
push
cmp
outs
pop
xor
gs
sub
push
das
push
jmp
sub
jmp
xor
imul
dec
sub
mov
loope
(bad)
fcmovu
fdivrp
call
vpminub
add
add
dec
pop
repnz
call
fcmovu
call
(bad)
dec
(bad)
xlat
call
inc
inc
ud0
sbb
pop
inc
sbb
dec
cmp
sbb
pop
dec
and
push
inc
sbb
push
inc
push
jmp
and
call
and
gs
sub
pop
dec
and
pop
inc
and
push
push
daa
call
and
jmp
sub
pop
dec
daa
jmp
xor
ins
pop
xor
fs
sub
addr16
xor
jae
aaa
jmp
das
jmp
das
push
cmp
outs
pop
xor
gs
das
push
push
aaa
jmp
xor
ins
pop
push
cmp
ins
pop
xor
push
xor
js
cmp
jmp
push
cmp
jae
cmp
imul
push
cmp
ins
pop
xor
popa
push
sub
imul
outs
pop
xor
arpl
dec
cs
mov
loope
(bad)
fcmovu
(bad)
call
vpminub
add
add
dec
pop
repz
fcmovnu
call
(bad)
call
(bad)
xlat
call
inc
inc
push
call
sbb
pop
inc
sbb
dec
cmp
push
call
and
push
inc
sbb
push
inc
and
bound
call
push
call
and
addr16
sub
pop
dec
and
pop
dec
and
push
das
jmp
call
jmp
xor
imul
jmp
xor
jo
xor
push
sub
push
cmp
imul
push
xor
ja
cmp
jmp
xor
jne
cmp
jbe
cmp
ins
pop
xor
ins
pop
xor
push
jmp
xor
js
push
jmp
xor
outs
pop
aaa
(bad)
js
cmp
jmp
push
cmp
jo
xor
push
sub
push
jmp
sub
push
inc
das
(bad)
mov
jecxz
(bad)
fcmovu
loopne
call
mov
or
add
add
dec
pop
repz
fcomp
(bad)
xlat
(bad)
call
aad
call
inc
inc
push
call
sbb
dec
pop
call
and
pop
dec
and
push
inc
sbb
pop
dec
and
popa
push
call
pop
call
and
push
dec
and
jmp
jmp
sub
pop
dec
sub
outs
pop
xor
ins
pop
xor
bound
jmp
xor
jmp
das
jmp
xor
jns
cmp
outs
pop
xor
push
push
cmp
push
xor
jne
cmp
jp
push
jmp
(bad)
jle
inc
push
jmp
xor
js
aas
(bad)
jns
cmp
outs
pop
xor
(bad)
jl
inc
push
jmp
xor
je
cmp
je
cmp
imul
gs
das
push
cmp
imul
push
dec
xor
mov
in
(bad)
fcmovnu
loope
jmp
mov
or
add
add
dec
pop
hlt
hlt
hlt
(bad)
(bad)
fdivr
fcomp
(bad)
rcl
xlat
call
inc
dec
ud0
pop
call
sbb
dec
cmp
and
pop
dec
and
push
inc
sbb
pop
dec
and
call
and
pop
dec
jmp
sub
call
jmp
xor
push
sub
pusha
dec
sub
jno
jmp
xor
fs
sub
outs
pop
aaa
push
jmp
xor
push
xor
jnp
aas
push
jmp
xor
jnp
inc
(bad)
js
cmp
push
(bad)
jle
inc
push
cmp
ins
pop
cmp
jg
inc
(bad)
js
cmp
push
ds
jge
inc
push
cmp
imul
jge
inc
push
cmp
imul
outs
pop
cmp
jp
cmp
jmp
das
push
push
xor
push
dec
xor
mov
in
(bad)
(bad)
loope
jmp
fimul
add
add
push
pop
cmc
cmc
cmc
(bad)
fcmovu
(bad)
(bad)
fdivrp
rcl
fdivr
push
dec
inc
dec
adc
pop
dec
and
push
inc
sbb
dec
ds
pop
dec
and
pop
dec
and
push
inc
sbb
jmp
daa
call
and
pop
dec
sub
imul
popa
dec
daa
call
sub
outs
pop
xor
push
push
sub
jae
cmp
outs
pop
xor
push
push
cmp
ja
cmp
ins
pop
xor
imul
jge
inc
push
jmp
xor
(bad)
jl
aas
push
cmp
jae
cmp
sub
ja
cmp
outs
pop
cmp
sub
jl
inc
push
cmp
jae
cmp
push
cmp
ins
pop
ss
jge
inc
(bad)
jp
aas
jmp
aaa
jmp
(bad)
jle
inc
push
aaa
jmp
xor
jno
cmp
jne
aaa
call
xor
mov
in
(bad)
fsub
loop
jmp
fimul
add
add
push
pop
cmc
cmc
cmc
(bad)
fcmovu
(bad)
(bad)
(bad)
rcl
fcos
push
dec
inc
dec
adc
pop
dec
and
push
inc
sbb
push
aas
sbb
pusha
dec
call
and
push
inc
sbb
jmp
sub
pop
dec
and
popa
push
sub
imul
bound
jmp
sub
jb
xor
jmp
sub
je
cmp
jno
jmp
xor
jno
cmp
jns
cmp
jmp
(bad)
jg
inc
push
cmp
ins
pop
ss
jge
inc
(bad)
jle
inc
push
push
cmp
(bad)
jnp
inc
jmp
cmp
sub
push
cmp
inc
push
cmp
jnp
inc
(bad)
jle
inc
push
jmp
(bad)
jle
inc
push
cmp
ins
pop
xor
ins
pop
ss
jnp
cmp
push
dec
xor
mov
in
(bad)
fucom
jecxz
in
in
in
dec
leave
leave
fimul
add
add
push
pop
div
idiv
fcmovnu
fdivrp
fcmovu
(bad)
rcl
fcos
push
dec
inc
dec
call
and
push
inc
sbb
push
inc
sbb
bound
call
call
pop
jmp
sub
fs
sub
pop
dec
and
arpl
jmp
jmp
sub
bound
push
jmp
xor
fs
push
cmp
jae
cmp
imul
(bad)
jnp
aas
push
cmp
ins
pop
aaa
inc
jmp
cmp
jge
inc
inc
push
inc
ins
inc
push
cmp
jg
inc
inc
inc
push
cmp
(bad)
jge
inc
push
cmp
ja
inc
inc
cmp
(bad)
jl
inc
(bad)
jl
aas
push
aaa
jmp
xor
jl
aas
call
aaa
(bad)
mov
in
(bad)
fsubp
in
in
in
in
dec
leave
leave
fimul
add
add
push
pop
div
idiv
fcmovnu
(bad)
fcmovnu
loopne
rcl
fcos
push
dec
inc
dec
push
call
and
push
inc
sbb
push
inc
push
jmp
sub
pop
dec
and
push
inc
and
push
sub
call
jmp
jmp
xor
arpl
jmp
push
cmp
ins
pop
xor
push
das
(bad)
js
cmp
jmp
xor
jae
cmp
jge
inc
push
jmp
cmp
xor
jl
inc
push
cmp
jl
inc
inc
imul
xchg
inc
gs
(bad)
jge
inc
inc
imul
bound
inc
data16
push
inc
imul
jns
inc
inc
arpl
jmp
xor
jp
call
cmp
mov
out
(bad)
fsubp
in
in
out
out
dec
retf
or
add
add
push
pop
div
idiv
(bad)
(bad)
fsub
loope
aam
(bad)
push
dec
inc
call
sbb
pop
dec
and
push
inc
sbb
push
inc
push
jmp
daa
call
pop
call
pop
jmp
sub
fs
daa
call
and
addr16
jmp
jmp
sub
arpl
push
jmp
jmp
das
(bad)
js
cmp
jmp
push
cmp
jle
inc
push
cmp
outs
pop
cmp
xor
jle
inc
push
(bad)
jp
inc
inc
imul
arpl
inc
jno
(bad)
jns
inc
(bad)
jp
inc
dec
outs
inc
push
inc
dec
(bad)
jnp
inc
push
cmp
(bad)
jle
inc
push
push
cmp
test
push
cmp
ins
pop
xor
jmp
cmp
mov
out
(bad)
(bad)
in
in
out
out
dec
retf
or
add
add
push
pop
div
idiv
fsub
(bad)
fsub
loope
aam
(bad)
dec
dec
inc
call
sbb
pop
dec
and
pop
inc
and
pop
dec
sub
push
xor
arpl
jmp
push
cmp
outs
pop
aaa
jmp
xor
(bad)
jp
inc
push
aas
push
inc
inc
push
inc
dec
jne
(bad)
jle
dec
inc
jle
inc
jo
call
jle
inc
jns
call
jle
inc
xchg
xchg
sbb
jp
dec
mov
(bad)
jg
inc
jge
call
js
(bad)
jge
dec
dec
jns
(bad)
jg
dec
push
inc
dec
outs
inc
push
push
cmp
arpl
(bad)
mov
out
(bad)
(bad)
in
out
out
out
dec
retf
or
add
add
push
pop
clc
clc
clc
(bad)
(bad)
loop
loope
in
fcmovu
(bad)
addr16
push
inc
push
inc
push
inc
push
dec
inc
ins
dec
(bad)
js
dec
inc
jae
(bad)
jnp
dec
dec
jnp
inc
ja
call
jl
inc
call
jl
dec
mov
xchg
test
mov
call
push
xchg
test
xchg
test
mov
mov
xchg
and
xchg
jo
mov
mov
xchg
xchg
movs
xchg
je
sahf
(bad)
outs
call
mov
mov
mov
nop
and
ins
call
xchg
mov
call
xchg
mov
inc
outs
pop
inc
(bad)
call
out
push
icebp
icebp
dec
retf
retf
fimul
add
add
push
pop
sti
sti
sti
jmp
out
jmp
call
jecxz
jbe
push
jle
dec
(bad)
jg
push
(bad)
js
dec
inc
jbe
(bad)
jg
push
(bad)
jge
push
dec
ja
(bad)
jg
push
dec
pop
inc
jnp
call
and
jnp
call
mov
pop
call
mov
nop
and
xchg
jb
lahf
xchg
outs
call
mov
cmps
cdq
ja
lahf
xchg
jo
xchg
mov
mov
xchg
jbe
sahf
nop
jo
xchg
mov
cwde
js
mov
lea
cwde
mov
cmps
cdq
js
sahf
nop
jo
xchg
mov
cdq
mov
movs
xchg
jae
call
call
nop
outs
call
jg
inc
retf
int
jmp
out
(bad)
call
div
dec
int3
int3
fimul
add
add
push
pop
cld
cld
cld
jmp
call
jmp
jbe
inc
je
(bad)
jl
push
inc
jp
inc
jbe
call
jnp
inc
call
jge
dec
mov
xchg
test
mov
jo
fwait
lea
xchg
xchg
xchg
mov
xchg
jne
pushf
mov
xchg
xchg
mov
xchg
jbe
popf
(bad)
jno
call
jmp
jb
mov
popf
jge
movs
xchg
ja
pushf
mov
stos
pushf
jle
test
jnp
mov
(bad)
jb
stos
popf
jge
movs
xchg
ja
popf
(bad)
jb
fwait
mov
test
xchg
jae
cwde
mov
cdq
lea
movs
xchg
jbe
fwait
lea
xchg
test
jl
gs
int3
into
(bad)
in
out
lock
jmp
div
dec
int
fimul
add
add
push
pop
std
std
std
(bad)
call
jmp
cmp
jnp
inc
je
dec
pusha
inc
jge
call
(bad)
dec
mov
xchg
mov
nop
and
xchg
sahf
nop
jno
xchg
mov
test
mov
xchg
jae
cdq
mov
call
jmp
lea
cmps
call
mov
xchg
ja
scas
mov
jge
mov
cwde
jl
mov
test
test
xchg
js
lods
lahf
cmp
mov
jl
mov
mov
jg
mov
xchg
jbe
lods
lahf
cmp
cdq
jp
lahf
xchg
je
call
jmp
mov
cmp
int
sar
out
out
icebp
(bad)
jmp
dec
iret
int
or
add
add
push
pop
(bad)
(bad)
(bad)
(bad)
jmp
jmp
jmp
in
inc
and
jge
inc
xchg
xchg
and
jg
dec
mov
xchg
test
mov
jb
call
call
xchg
ja
pushf
(bad)
jb
xchg
mov
movs
cdq
jnp
movs
xchg
jns
sahf
xchg
jne
sahf
xchg
js
lods
lahf
cmp
sahf
xchg
js
stos
sahf
cmp
test
jle
mov
movs
mov
scas
mov
cmp
fwait
cmp
scas
mov
cmp
mov
mov
lods
mov
jge
mov
xchg
mov
xchg
test
xchg
jp
scas
mov
cmp
popf
xchg
js
stos
lahf
cmp
mov
xor
rcl
(bad)
out
lock
jmp
out
(bad)
clc
stc
stc
dec
iret
iret
fimul
add
add
push
pop
(bad)
(bad)
(bad)
(bad)
jmp
in
(bad)
jmp
out
jmp
out
dec
test
mov
call
mov
test
xchg
mov
pushf
nop
jae
xchg
mov
xchg
mov
mov
xchg
jne
cdq
lea
pushf
xchg
js
cmps
call
fwait
nop
ja
test
pushf
jg
mov
xchg
jle
mov
mov
stos
popf
cmp
xchg
jle
lods
mov
mov
lods
mov
cmp
test
push
mov
xchg
mov
xchg
push
mov
mov
mov
xchg
push
popf
test
mov
mov
mov
(bad)
jmp
call
mov
mov
stos
sahf
cmp
xchg
jge
lods
mov
test
cmps
cdq
jge
lea
sar
lock
repz
in
out
lock
cli
cli
cli
call
ror
fimul
add
add
push
pop
(bad)
(bad)
(bad)
(bad)
in
in
out
(bad)
in
out
out
jmp
out
call
mov
xchg
xchg
xchg
xchg
pushf
nop
jbe
cdq
lea
xchg
mov
fwait
nop
ja
mov
(bad)
jne
cwde
lea
movs
cdq
jg
mov
xchg
jns
mov
sahf
cmp
cdq
jle
mov
mov
test
cmps
fwait
cmp
mov
mov
scas
mov
test
scas
movs
mov
mov
(bad)
push
lahf
xchg
mov
xchg
(bad)
mov
cmps
mov
lods
mov
cwde
push
movs
nop
jmp
mov
push
mov
mov
mov
mov
test
jmp
mov
mov
(bad)
jmp
pushf
cmp
mov
mov
stos
sahf
cmp
mov
rcl
aad
icebp
repnz
(bad)
out
out
icebp
(bad)
sti
sti
sti
call
rcl
fimul
add
add
push
pop
(bad)
(bad)
(bad)
(bad)
in
out
out
(bad)
in
out
lock
call
mov
call
call
xchg
jl
popf
xchg
js
cwde
mov
mov
cwde
jle
lahf
xchg
jnp
popf
xchg
jl
test
call
cmps
pushf
test
lods
mov
test
movs
call
mov
mov
stos
lahf
xchg
stos
mov
xchg
push
mov
(bad)
(bad)
mov
stos
nop
jmp
scas
xchg
(bad)
mov
stos
xchg
jmp
mov
(bad)
mov
stos
xchg
push
mov
(bad)
mov
test
xchg
(bad)
mov
lods
xchg
push
movs
mov
mov
test
jmp
mov
xchg
push
xchg
test
aam
xlat
push
repz
(bad)
out
lock
cld
cld
cld
call
rcl
fimul
add
add
push
pop
(bad)
(bad)
(bad)
(bad)
out
lock
out
lock
(bad)
call
xchg
nop
call
xchg
jns
pushf
xchg
jl
cmps
call
pushf
xchg
jl
cmps
pushf
test
test
test
mov
cwde
cmp
mov
xchg
movs
fwait
test
stos
mov
(bad)
jmp
mov
mov
xchg
push
(bad)
jmp
mov
push
cmps
nop
push
mov
(bad)
mov
test
(bad)
mov
mov
(bad)
mov
stos
cwde
(bad)
mov
mov
(bad)
mov
stos
call
mov
push
stos
xchg
inc
mov
(bad)
mov
lods
xchg
push
mov
(bad)
mov
test
jmp
scas
xchg
push
cwde
mov
xlat
xlat
fcos
repz
push
icebp
repz
std
std
std
call
rcl
fimul
add
add
push
pop
(bad)
(bad)
(bad)
push
lock
push
icebp
repnz
jmp
pushf
xchg
jmp
xchg
jg
mov
mov
cmp
cwde
cmp
mov
mov
cmps
popf
xchg
cmps
sahf
mov
mov
nop
jmp
mov
nop
push
cmps
nop
jmp
scas
xchg
(bad)
mov
test
xchg
(bad)
mov
mov
push
scas
cdq
inc
mov
fwait
push
mov
inc
mov
mov
inc
mov
test
push
mov
cmps
(bad)
mov
lods
fwait
inc
mov
mov
push
mov
(bad)
mov
scas
xchg
push
mov
(bad)
mov
popf
(bad)
(bad)
(bad)
(bad)
hlt
hlt
idiv
repnz
(bad)
(bad)
(bad)
(bad)
call
rcl
fimul
add
add
push
pop
(bad)
(bad)
(bad)
push
icebp
repnz
repnz
jmp
jmp
call
lods
mov
mov
cmps
popf
mov
mov
nop
jmp
mov
mov
mov
xchg
push
movs
nop
push
cwde
push
test
(bad)
mov
mov
push
lods
cdq
inc
mov
sahf
(bad)
mov
mov
inc
mov
mov
(bad)
mov
mov
movs
(bad)
mov
mov
scas
inc
mov
movs
inc
mov
stos
inc
mov
mov
inc
mov
mov
inc
mov
inc
mov
popf
push
mov
(bad)
mov
mov
(bad)
cmc
cmc
idiv
repz
(bad)
(bad)
(bad)
(bad)
call
rcl
fimul
add
add
push
pop
(bad)
(bad)
(bad)
push
repnz
repz
(bad)
jmp
out
jmp
mov
mov
scas
movs
xchg
push
movs
nop
jmp
stos
xchg
push
cmps
xchg
push
mov
push
test
(bad)
mov
mov
(bad)
mov
lods
cdq
(bad)
mov
mov
(bad)
mov
mov
inc
mov
mov
(bad)
mov
mov
movs
(bad)
mov
mov
lods
inc
mov
test
ret
mov
mov
ret
mov
test
dec
shr
mov
mov
stos
inc
mov
mov
inc
mov
mov
(bad)
mov
mov
fwait
(bad)
(bad)
(bad)
div
clc
push
hlt
idiv
(bad)
(bad)
(bad)
call
rcl
fimul
add
add
push
pop
(bad)
(bad)
(bad)
push
repnz
repz
(bad)
in
in
out
jmp
movs
nop
jmp
stos
xchg
push
test
jmp
scas
pushf
push
stos
xchg
push
mov
push
mov
(bad)
mov
mov
inc
mov
movs
(bad)
mov
mov
inc
mov
cmps
inc
mov
(bad)
mov
ret
(bad)
mov
cmps
inc
mov
mov
(bad)
mov
stos
inc
mov
mov
(bad)
mov
lods
inc
mov
mov
(bad)
mov
test
dec
ret
scas
inc
mov
cmps
inc
mov
lods
inc
mov
mov
inc
mov
mov
push
div
push
hlt
idiv
(bad)
(bad)
(bad)
call
rcl
fimul
add
add
push
pop
(bad)
(bad)
(bad)
push
repz
push
hlt
cmc
(bad)
in
out
out
push
test
xchg
(bad)
mov
mov
push
lods
pushf
(bad)
mov
mov
push
mov
inc
mov
mov
inc
mov
cmps
(bad)
mov
mov
inc
mov
test
inc
mov
scas
dec
shr
mov
mov
retf
inc
mov
lods
call
leave
mov
retf
les
inc
mov
mov
inc
shl
ror
mov
retf
les
inc
mov
mov
retf
ret
scas
inc
mov
stos
dec
les
inc
mov
cmps
dec
shr
(bad)
push
idiv
push
cmc
idiv
(bad)
(bad)
(bad)
call
rcl
fimul
add
add
push
pop
(bad)
(bad)
(bad)
push
hlt
cmc
push
cmc
idiv
out
out
lock
test
jmp
scas
sahf
push
stos
call
mov
push
lods
pushf
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
inc
mov
test
mov
mov
inc
mov
stos
inc
mov
test
enter
lds
stos
inc
mov
mov
(bad)
mov
lods
inc
mov
mov
mov
scas
inc
mov
mov
mov
lods
inc
mov
mov
(bad)
mov
stos
(bad)
mov
mov
lods
inc
mov
movs
inc
mov
cmps
jmp
loopne
(bad)
clc
clc
stc
push
div
(bad)
(bad)
(bad)
(bad)
call
rcl
fimul
add
add
push
pop
(bad)
(bad)
(bad)
push
cmc
idiv
cmc
cmc
idiv
icebp
icebp
repnz
leave
enter
mov
inc
sar
ret
inc
sar
ret
inc
sar
(bad)
ret
ret
ret
inc
ret
(bad)
ret
ret
ret
ret
(bad)
(bad)
inc
ret
sar
ret
(bad)
inc
ret
sar
ret
sar
ret
sar
(bad)
(bad)
ret
sar
ret
sar
(bad)
vcmpps
(bad)
ret
sar
(bad)
vcmpps
(bad)
ret
sar
(bad)
mov
inc
(bad)
ret
sar
(bad)
(bad)
ret
ret
ret
vcmpps
(bad)
ret
sar
ret
(bad)
(bad)
jmp
clc
stc
push
idiv
(bad)
(bad)
(bad)
(bad)
call
rcl
fimul
add
add
push
pop
(bad)
(bad)
(bad)
push
div
push
div
push
div
push
stc
cli
push
stc
sti
push
stc
sti
push
stc
sti
push
stc
cli
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
(bad)
clc
clc
cli
push
idiv
(bad)
clc
clc
cli
(bad)
clc
idiv
push
idiv
push
idiv
(bad)
(bad)
(bad)
(bad)
call
aad
fisttp
push
push
adc
add
add
dec
push
(bad)
(bad)
(bad)
push
div
push
div
push
cmc
idiv
imul
out
push
out
in
push
out
in
push
out
in
push
out
out
push
cmc
idiv
div
stc
push
idiv
push
idiv
push
idiv
push
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
clc
clc
stc
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
(bad)
(bad)
(bad)
call
rcl
fmul
or
or
aaa
cmp
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
cli
cli
(bad)
clc
repnz
push
fmul
push
ror
push
ror
push
ror
push
(bad)
int3
push
out
in
(bad)
stc
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
stc
stc
cli
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
inc
ret
ret
enter
add
add
add
pop
pop
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
sti
(bad)
(bad)
cli
clc
(bad)
(bad)
sti
clc
(bad)
(bad)
sti
clc
(bad)
(bad)
cld
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
repnz
pop
pop
pop
push
push
push
or
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
daa
daa
daa
sub
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
add
add
pop
clc
add
add
add
paddd
add
add
add
jmp
add
add
pop
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
or
sub
add
dec
add
add
add
add
push
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cs
das
jne
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
xor
push
push
adc
add
adc
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
add
add
add
jl
js
mov
mov
hlt
mov
mov
mov
mov
mov
mov
mov
mov
scas
scas
scas
repnz
rcl
aam
rcl
aam
rcl
sar
rcl
sar
rcl
sar
rcl
sar
rcl
aam
rcl
aam
rcl
aam
rcl
aam
rcl
aam
rcl
aam
rcl
aam
rcl
aad
rcl
aad
rcl
aad
rcl
aad
rcl
aad
rcl
aad
rcl
(bad)
call
aad
call
aam
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
jmp
addr16
jbe
js
mov
(bad)
fmul
mov
fmul
push
add
jp
ja
cmc
lock
(bad)
in
call
jmp
jmp
jmp
fstp
(bad)
(bad)
fdivrp
fstp
fdivrp
(bad)
(bad)
fsubp
loope
out
jmp
jmp
(bad)
jmp
jmp
(bad)
call
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
in
(bad)
jmp
in
(bad)
jmp
out
(bad)
jmp
out
(bad)
in
in
out
(bad)
in
out
out
(bad)
in
out
out
(bad)
in
out
out
(bad)
in
out
out
(bad)
in
out
out
(bad)
in
out
lock
in
out
lock
out
out
lock
out
out
lock
out
lock
(bad)
out
icebp
icebp
(bad)
out
icebp
icebp
(bad)
out
icebp
icebp
push
icebp
icebp
(bad)
out
icebp
icebp
push
icebp
icebp
push
repnz
repnz
repnz
repnz
repnz
repnz
icebp
repnz
icebp
repnz
repnz
jmp
out
jmp
loope
(bad)
lock
icebp
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
div
push
jne
push
dec
push
imul
fnstsw
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loope
(bad)
(bad)
fdivr
ror
into
(bad)
fcmovbe
(bad)
(bad)
fcmovnbe
fdivr
(bad)
(bad)
int3
retf
int3
call
xchg
dec
mov
dec
nop
nop
call
xchg
xchg
call
xchg
xchg
call
xchg
cwde
call
call
popf
pushf
popf
call
lahf
mov
jmp
mov
movs
jmp
cmps
cmps
jmp
test
stos
jmp
scas
jmp
mov
push
mov
push
mov
push
mov
mov
mov
mov
mov
(bad)
mov
call
fcomip
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
out
out
(bad)
fcomp
fsubr
pop
pop
pop
sub
add
add
and
xlat
clc
out
loop
in
loope
in
loope
in
loope
out
loop
fcmovbe
aam
mov
cwde
call
stos
lods
push
and
call
pop
call
sbb
jmp
sbb
jmp
push
pop
jmp
and
and
and
jmp
and
daa
jmp
sub
jmp
sub
push
cs
xor
push
xor
xor
aaa
xor
(bad)
cmp
ss
cmp
cmp
cmp
cmp
cmp
aas
cmp
aas
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
call
push
call
push
call
pop
call
pop
call
pop
call
pop
call
pop
(bad)
mov
clc
cli
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jg
jg
add
add
cmps
mov
jmp
jmp
loopne
jmp
loopne
jmp
loop
jmp
(bad)
call
and
jmp
xor
jmp
cmp
jmp
and
jmp
daa
daa
jmp
sub
sub
push
sub
push
sub
das
push
xor
(bad)
cmp
(bad)
cmp
aaa
(bad)
cmp
cmp
cmp
(bad)
aas
cmp
inc
aas
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
push
call
push
call
push
call
pop
call
pop
call
pop
call
pop
jmp
pusha
jmp
popa
jmp
arpl
fs
jmp
jmp
gs
iret
sar
repnz
jmp
(bad)
jmp
push
lock
rcl
call
inc
aas
aas
dec
jecxz
(bad)
call
loopne
jmp
loopne
jmp
loop
jmp
(bad)
push
sub
jmp
and
jmp
sub
cmps
movs
cmps
dec
dec
jmp
daa
daa
jmp
sub
sub
push
sub
push
cs
das
xor
xor
xor
(bad)
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
aas
cmp
inc
aas
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
push
call
push
call
push
call
pop
call
call
pop
call
pop
jmp
pusha
jmp
popa
jmp
arpl
fs
jmp
jmp
push
fstp
fdivrp
lock
jmp
(bad)
jmp
push
lock
pop
add
add
ins
ins
ins
jg
in
push
in
in
(bad)
jmp
jmp
loop
inc
mov
xor
jmp
and
call
call
adc
sbb
jmp
and
sub
sub
das
push
das
xor
xor
push
xor
(bad)
cmp
xor
push
xor
xor
xor
(bad)
cmp
ss
cmp
cmp
cmp
cmp
cmp
(bad)
aas
cmp
inc
aas
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
call
push
call
push
call
call
push
call
push
call
pop
call
pop
call
call
pop
call
pop
jmp
outs
(bad)
jmp
in
push
lock
(bad)
in
in
in
(bad)
out
out
out
push
repz
hlt
hlt
(bad)
jle
jle
add
add
dec
dec
dec
pop
mov
scas
(bad)
(bad)
(bad)
repnz
(bad)
loop
fdivrp
aad
iret
jmp
pusha
(bad)
cmp
xor
cmp
xor
fwait
call
mov
dec
xchg
call
push
call
push
call
push
call
push
call
pop
call
pop
call
pop
dec
mov
call
fwait
pushf
call
lahf
mov
call
xchg
cwde
call
call
test
stos
stos
jmp
scas
jmp
mov
push
mov
push
mov
push
cdq
call
mov
mov
(bad)
(bad)
(bad)
div
clc
(bad)
call
jmp
into
into
into
loope
ins
ins
ja
add
add
add
add
sub
cmp
cmp
cmp
inc
dec
dec
dec
pop
outs
imul
jo
mov
je
mov
mov
mov
mov
mov
mov
mov
jno
popa
pop
popa
mov
arpl
fs
gs
fs
fs
movs
cmps
jmp
call
in
(bad)
in
in
in
(bad)
(bad)
fucomp
stos
lods
lods
mov
lods
lods
mov
stos
lods
mov
mov
out
std
icebp
lock
push
icebp
repnz
repnz
dec
leave
leave
iret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
stos
mov
push
push
ret
popa
mov
mov
mov
mov
mov
nop
nop
nop
xchg
dec
dec
dec
push
cmp
cmp
ds
ss
pop
pop
sbb
add
add
fstp
(bad)
(bad)
aad
loop
(bad)
stos
movs
movs
lds
add
add
aad
cli
fstp
xlat
(bad)
(bad)
aad
loopne
fcos
dec
dec
dec
pop
add
add
add
add
add
add
xlat
aad
(bad)
ror
(bad)
(bad)
aam
movs
mov
add
xor
xor
ror
int
xlat
rcl
call
ror
(bad)
fcmovbe
sar
dec
dec
dec
pop
fwait
fwait
cwde
mov
ror
retf
ror
jmp
add
add
sub
cli
ror
retf
call
int
call
ror
dec
inc
push
sbb
sbb
aas
inc
aas
dec
dec
dec
dec
push
dec
dec
dec
push
dec
dec
dec
push
dec
dec
dec
push
dec
dec
dec
push
dec
dec
dec
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
scas
scas
stos
aad
iret
int3
dec
retf
(bad)
call
into
retf
lods
test
dec
dec
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
push
enter
leave
(bad)
dec
enter
retf
(bad)
push
je
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
pop
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
inc
inc
inc
push
dec
dec
dec
push
dec
dec
dec
push
dec
dec
dec
push
dec
dec
dec
push
dec
dec
dec
push
ss
or
push
pop
pop
push
out
in
in
in
in
in
in
in
in
in
in
in
in
in
loopne
loopne
fcmovnu
fcos
fcmovu
fcos
(bad)
fdivr
fcomp
(bad)
(bad)
fcomp
(bad)
call
xlat
aad
xlat
xlat
aam
(bad)
(bad)
sar
aad
sar
aam
sar
aam
sar
rcl
sar
rcl
iret
call
ror
call
ror
call
ror
dec
iret
int3
dec
retf
leave
enter
enter
mov
dec
retf
(bad)
dec
retf
retf
inc
mov
ret
inc
sar
ret
mov
(bad)
dec
retf
retf
retf
(bad)
dec
int3
(bad)
dec
int3
enter
leave
dec
into
retf
into
retf
call
iret
int3
call
ror
call
ror
call
ror
call
ror
call
rcl
call
rcl
call
aad
call
aad
call
(bad)
aam
(bad)
xlat
aam
fcmovu
fcos
in
jecxz
in
in
in
in
in
in
in
in
jecxz
jecxz
mov
mov
and
and
(bad)
(bad)
unpcklps
retf
retf
in
out
in
call
(bad)
call
(bad)
aad
rcl
(bad)
call
xlat
(bad)
call
xlat
(bad)
call
xlat
(bad)
call
xlat
(bad)
call
xlat
(bad)
call
(bad)
aad
rcl
aam
rcl
aam
iret
aad
call
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
(bad)
aam
iret
(bad)
aam
iret
(bad)
aam
iret
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aam
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
aad
dec
aam
dec
aam
dec
aam
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
aad
dec
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
(bad)
aad
rcl
aad
rcl
aad
rcl
aad
rcl
(bad)
call
(bad)
(bad)
call
xlat
(bad)
call
xlat
(bad)
call
xlat
(bad)
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
(bad)
(bad)
fdivrp
std
std
std
(bad)
jl
jl
sub
sub
fcmovnu
fcomi
fcmovu
fdivr
int3
aam
dec
aad
dec
(bad)
aad
iret
fcom
dec
fcom
dec
fcom
dec
fcom
dec
fcom
call
fcom
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
fcmovu
call
fcmovu
call
fcmovu
call
fcom
(bad)
in
in
in
call
add
add
add
add
cs
fstp
clc
(bad)
(bad)
int
aam
into
(bad)
aad
into
(bad)
aad
iret
fcom
dec
xlat
fdivr
rcl
fdivr
iret
fcomp
dec
xlat
fdivr
iret
fcomp
call
fcomp
dec
xlat
fcos
iret
fcomp
dec
fcomp
dec
xlat
fcos
iret
xlat
fcos
rcr
fcos
rcl
fcos
iret
xlat
fcos
iret
fcomp
call
xlat
fcos
iret
xlat
fcos
rcl
fcos
rcr
(bad)
iret
fcomp
dec
fcomp
call
fcomp
call
fcomp
dec
fcomp
call
fcomp
call
fcomp
dec
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
xlat
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
fcos
jmp
mov
add
add
das
das
das
cmp
(bad)
clc
(bad)
(bad)
into
(bad)
aad
rcr
fdivr
mov
imul
arpl
bound
bound
push
arpl
arpl
push
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
jmp
pop
jmp
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
jmp
pop
push
pusha
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
jmp
pop
jmp
popa
jmp
pop
jmp
jmp
jmp
pusha
jmp
pop
jmp
pop
jmp
pusha
jmp
pop
jmp
pop
jmp
pop
jmp
pusha
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
pop
jmp
fdivrp
aam
(bad)
rcr
fcos
jmp
jmp
cmps
cmps
cmps
mov
add
add
das
xor
cmp
(bad)
clc
(bad)
(bad)
into
(bad)
aad
rcr
fcos
mov
mov
(bad)
cmp
or
xor
pop
(bad)
cmp
or
inc
xor
(bad)
cmp
or
cmp
or
dec
aaa
adc
inc
das
or
cmp
or
dec
cmp
inc
or
inc
cs
dec
adc
dec
cmp
inc
inc
push
call
adc
inc
call
call
adc
dec
ud0
pop
call
sbb
dec
cmp
dec
adc
pop
inc
sbb
dec
adc
push
inc
sbb
pop
inc
sbb
dec
call
call
sbb
dec
cmp
call
call
pop
dec
call
and
push
inc
sbb
dec
cmp
sbb
pop
dec
and
push
inc
sbb
dec
cmp
push
inc
sbb
pop
inc
sbb
dec
adc
push
inc
sbb
push
inc
sbb
dec
cmp
inc
adc
push
inc
sbb
inc
xor
(bad)
(bad)
loopne
aad
(bad)
aam
fcos
jmp
jmp
cmps
cmps
cmps
mov
add
add
das
xor
cmp
(bad)
clc
fcmovu
fdivr
iret
(bad)
(bad)
call
fcmovu
push
cmp
dec
push
inc
adc
dec
cmp
dec
sbb
inc
aaa
adc
dec
cmp
call
sbb
dec
adc
pop
inc
sbb
dec
call
push
call
sbb
call
sbb
pusha
dec
and
push
inc
sbb
push
inc
sbb
popa
dec
call
and
push
inc
sbb
jmp
call
pop
call
and
push
sub
popa
dec
and
call
sub
push
dec
and
pop
dec
and
push
push
sub
pop
dec
and
pop
dec
daa
jmp
das
jmp
call
and
addr16
sub
addr16
sub
pop
dec
and
pop
dec
and
imul
call
and
pop
dec
and
call
and
push
inc
pop
call
daa
jmp
sub
pop
dec
and
push
inc
sbb
call
and
cwde
call
(bad)
fcmovnu
call
fcmovu
(bad)
jmp
jmp
cmps
cmps
cmps
mov
add
add
das
xor
cmp
(bad)
clc
fcmovu
fdivr
rcl
xlat
call
(bad)
push
cmp
inc
adc
dec
dec
sbb
inc
aaa
adc
dec
cmp
call
sbb
dec
cmp
dec
adc
call
sbb
dec
cmp
call
push
call
sbb
push
inc
sbb
call
sbb
jmp
daa
call
and
push
inc
push
call
jmp
sub
pop
dec
and
push
inc
and
addr16
sub
call
and
pop
dec
sub
push
jmp
call
and
push
push
sub
pop
dec
and
jmp
jmp
call
and
fs
sub
push
jmp
daa
call
and
imul
call
and
jmp
das
jmp
daa
call
and
pop
dec
and
push
dec
and
push
inc
pop
call
call
call
loope
call
(bad)
call
fcmovnu
(bad)
in
in
in
jmp
add
add
add
add
xor
cmp
loopne
clc
fcmovu
(bad)
rcl
xlat
call
(bad)
push
cmp
inc
adc
inc
xor
dec
sbb
push
ds
dec
aaa
adc
dec
ds
push
inc
sbb
dec
cmp
push
call
call
sbb
dec
cmp
call
and
pop
dec
pop
call
sbb
push
inc
pop
jmp
call
push
call
sbb
call
and
pop
inc
and
pop
dec
jmp
sub
pop
dec
and
push
inc
and
push
push
sub
pop
dec
and
pop
dec
sub
ins
pop
xor
arpl
call
and
jmp
jmp
sub
pop
dec
daa
jmp
xor
addr16
sub
pop
dec
daa
jmp
sub
outs
pop
xor
fs
sub
pop
dec
and
jmp
jmp
daa
call
and
push
xor
push
sub
pop
dec
and
jmp
das
jmp
sub
pop
dec
and
pop
inc
and
push
inc
sub
cdq
call
xlat
(bad)
call
(bad)
(bad)
in
in
in
jmp
add
add
add
add
das
das
cmp
loope
clc
fcmovnu
(bad)
rcr
fdivr
aad
(bad)
mov
mov
inc
adc
inc
xor
sbb
dec
adc
push
inc
sbb
push
inc
sbb
dec
cmp
sbb
pop
dec
and
push
inc
sbb
dec
cmp
and
pop
dec
and
push
inc
sbb
push
inc
and
arpl
call
and
push
inc
pop
jmp
sub
popa
dec
call
and
pop
dec
daa
jmp
sub
call
and
push
das
jmp
sub
pop
dec
daa
call
sub
outs
pop
xor
push
sub
pop
dec
daa
jmp
xor
outs
pop
xor
fs
sub
pop
dec
sub
outs
pop
xor
push
das
jmp
sub
popa
push
sub
jno
xor
call
sub
gs
jmp
xor
gs
sub
pop
dec
and
jmp
das
jmp
sub
pop
dec
and
addr16
jmp
sub
pop
dec
and
pop
inc
and
push
inc
daa
call
loop
(bad)
fcomp
(bad)
xlat
(bad)
(bad)
in
out
in
jmp
add
add
add
add
das
das
cmp
loope
clc
fcmovnu
(bad)
rcr
fdivr
aad
(bad)
mov
mov
dec
adc
inc
aaa
adc
push
inc
sbb
dec
adc
push
inc
sbb
push
inc
sbb
dec
cmp
sbb
pop
dec
and
push
inc
sbb
dec
ds
pop
dec
and
call
sbb
pop
dec
and
fs
sub
pop
dec
and
push
inc
and
push
sub
call
and
pop
dec
sub
imul
bound
call
jmp
xor
imul
popa
push
sub
pop
dec
sub
jno
xor
jmp
sub
push
pop
xor
call
sub
outs
pop
xor
jmp
sub
push
aaa
jmp
xor
arpl
jmp
sub
jb
jmp
sub
jmp
sub
jmp
sub
pop
dec
jmp
sub
ins
pop
xor
popa
push
daa
call
and
dec
inc
and
(bad)
fsubp
jecxz
(bad)
fdivrp
fcomp
fdivr
in
out
out
jmp
add
add
add
add
xor
cmp
loope
clc
(bad)
fdivrp
rcr
fcos
(bad)
(bad)
push
aaa
and
dec
adc
push
inc
sbb
push
ds
call
pop
call
sbb
push
ds
call
sbb
call
sbb
push
inc
sbb
popa
dec
daa
call
and
push
inc
push
call
and
gs
sub
pop
dec
and
push
inc
and
push
push
sub
pop
dec
and
jmp
xor
gs
sub
pop
dec
daa
jmp
xor
ins
pop
xor
fs
sub
pusha
push
sub
je
aaa
jmp
jmp
jmp
xor
je
cmp
imul
popa
push
sub
outs
pop
push
aaa
jmp
das
jmp
sub
jae
cmp
outs
pop
xor
push
push
sub
je
cmp
ins
pop
xor
gs
sub
popa
push
sub
jae
aaa
jmp
jmp
sub
pop
dec
sub
jo
xor
push
sub
pop
dec
and
call
jecxz
(bad)
(bad)
fdivrp
(bad)
(bad)
out
out
out
jmp
add
add
add
add
xor
cmp
loop
clc
fstp
(bad)
rcr
fcos
xlat
(bad)
push
aaa
and
dec
push
call
sbb
dec
adc
call
sbb
push
ds
push
inc
pop
call
and
push
inc
sbb
push
inc
sbb
call
and
push
inc
pop
call
jmp
sub
pop
dec
and
pop
inc
and
push
das
jmp
sub
pop
dec
daa
jmp
sub
jo
xor
addr16
sub
pop
dec
sub
ins
pop
xor
jo
xor
addr16
sub
push
jmp
xor
addr16
jmp
xor
ja
cmp
ins
pop
xor
fs
jmp
push
cmp
ins
pop
xor
arpl
push
cmp
jae
cmp
push
xor
bound
push
cmp
jo
xor
jmp
sub
jae
aaa
jmp
xor
gs
sub
pop
dec
sub
jo
xor
push
jmp
sub
dec
cmp
call
jecxz
(bad)
fcmovu
(bad)
(bad)
(bad)
out
lock
jmp
add
add
add
add
xor
cmp
loop
clc
fstp
(bad)
rcr
(bad)
fcomp
(bad)
mov
mov
dec
adc
dec
ds
pop
inc
sbb
dec
call
and
pop
inc
sbb
push
ds
pop
dec
and
pusha
dec
and
pop
inc
sbb
jmp
call
and
pop
inc
and
pop
dec
daa
jmp
sub
call
and
jmp
sub
jmp
sub
jb
xor
jmp
sub
ins
pop
xor
jb
jmp
xor
bound
push
push
aaa
jmp
xor
addr16
xor
jns
cmp
jmp
xor
imul
jns
push
xor
jmp
cmp
ja
cmp
outs
pop
xor
fs
das
push
cmp
jne
cmp
ins
pop
xor
arpl
jmp
aaa
push
jmp
call
sub
ins
pop
xor
jmp
sub
dec
aas
and
xchg
cdq
cdq
(bad)
(bad)
in
fcmovnu
loopne
fcmovu
fdivrp
out
lock
jmp
add
add
add
add
xor
cmp
jecxz
clc
fsubp
(bad)
aam
(bad)
(bad)
(bad)
mov
aaa
and
dec
aaa
ud0
sbb
pop
inc
sbb
dec
ds
dec
sbb
pop
dec
and
push
inc
sbb
push
aas
sbb
pop
dec
and
popa
dec
and
pop
inc
push
call
and
push
sub
pusha
dec
and
jmp
sub
push
jmp
sub
pop
dec
jmp
xor
push
das
jmp
sub
arpl
push
jmp
xor
arpl
jmp
push
cmp
ins
pop
xor
arpl
push
cmp
jne
cmp
ins
pop
xor
addr16
xor
jp
aas
push
cmp
ins
pop
xor
imul
push
cmp
push
xor
ins
pop
ss
jnp
aas
push
jmp
xor
outs
pop
aaa
(bad)
jns
jmp
xor
push
jmp
push
cmp
ins
pop
xor
fs
sub
imul
jmp
sub
call
in
(bad)
fcmovnu
loopne
fcmovu
fdivrp
lock
add
add
add
add
xor
cmp
jecxz
clc
fsubp
(bad)
aad
(bad)
fcmovu
(bad)
mov
mov
dec
adc
push
inc
sbb
pop
inc
sbb
push
aas
pop
call
sbb
pusha
dec
and
push
inc
sbb
push
inc
sbb
pop
dec
and
call
pop
call
and
push
dec
call
and
arpl
jmp
jmp
sub
pop
dec
daa
jmp
xor
ins
pop
xor
fs
sub
gs
push
cmp
ins
pop
xor
gs
jmp
ss
js
cmp
outs
pop
xor
gs
xor
jbe
cmp
jmp
xor
(bad)
jnp
inc
push
cmp
outs
pop
jmp
xor
jle
inc
push
cmp
outs
pop
jmp
ss
jg
inc
push
jmp
xor
ins
pop
ss
jl
inc
push
aaa
jmp
xor
imul
push
xor
jmp
das
push
cmp
ins
pop
xor
push
inc
daa
call
in
(bad)
fsub
loope
fcmovnu
(bad)
lock
lock
add
add
add
add
xor
cmp
in
clc
(bad)
loope
(bad)
fcmovnu
(bad)
fneni(8087
loopne
mov
aaa
and
dec
cmp
call
pop
call
sbb
push
ds
push
inc
sbb
pusha
dec
and
pop
inc
sbb
jmp
daa
jmp
and
call
and
imul
call
and
fs
sub
jmp
sub
pop
dec
sub
jno
jmp
xor
push
jmp
xor
ja
cmp
outs
pop
xor
push
pop
aaa
(bad)
jp
push
jmp
xor
jbe
cmp
push
cmp
push
xor
jl
inc
(bad)
jnp
aas
push
cmp
ins
pop
ss
jg
inc
(bad)
jp
aas
push
cmp
ins
pop
ss
jg
inc
(bad)
js
cmp
jo
aaa
jmp
xor
push
cmp
outs
pop
jmp
xor
jnp
aas
push
jmp
jmp
push
cmp
jno
xor
push
inc
sub
xchg
cwde
cwde
jmp
in
(bad)
fsub
loope
(bad)
loopne
icebp
icebp
icebp
jmp
add
add
add
add
xor
cmp
in
clc
loopne
loope
(bad)
(bad)
(bad)
fndisi(8087
loope
mov
aaa
and
dec
cmp
call
and
push
inc
sbb
push
ds
push
inc
pop
jmp
and
pop
inc
sbb
jmp
sub
popa
dec
call
and
pop
dec
and
imul
arpl
call
jmp
das
jmp
xor
push
sub
pusha
dec
sub
jb
aaa
jmp
xor
push
push
xor
jns
cmp
jmp
xor
outs
pop
cmp
jl
inc
push
cmp
push
xor
jbe
ds
jg
inc
push
cmp
ins
pop
ss
jnp
inc
(bad)
jg
inc
push
cmp
ins
pop
aaa
(bad)
jle
inc
(bad)
jle
inc
push
cmp
ins
pop
aaa
(bad)
jle
inc
(bad)
jl
inc
push
jmp
xor
(bad)
jnp
aas
push
aaa
jmp
xor
jns
aas
(bad)
js
cmp
outs
pop
xor
push
cmp
jbe
cmp
push
dec
sub
xchg
cwde
cwde
jmp
in
(bad)
fucom
loop
(bad)
loope
icebp
icebp
icebp
jmp
add
add
add
add
xor
cmp
in
clc
loope
loop
xlat
(bad)
(bad)
fsub
loope
mov
ss
dec
cmp
pop
dec
and
push
inc
sbb
dec
ds
pop
inc
and
popa
dec
and
call
jmp
jmp
daa
call
and
pop
dec
jmp
xor
fs
sub
pop
dec
jmp
xor
outs
pop
xor
addr16
sub
push
push
jmp
xor
push
push
cmp
ins
pop
xor
outs
pop
cmp
jg
inc
push
cmp
ins
pop
aaa
push
inc
cmp
pop
cmp
jp
inc
inc
jmp
cmp
jge
inc
inc
jmp
cmp
jge
inc
inc
gs
(bad)
jnp
inc
(bad)
jg
inc
push
cmp
push
xor
(bad)
jl
inc
push
aaa
jmp
xor
outs
pop
aaa
(bad)
jnp
cmp
call
out
(bad)
fsubp
jecxz
fstp
loope
repnz
add
add
add
xor
xor
in
in
loope
loop
fcomp
(bad)
fucom
loop
mov
ss
dec
cmp
call
and
push
inc
sbb
push
aas
sbb
pop
dec
and
popa
dec
and
pop
inc
pop
call
and
addr16
sub
arpl
call
and
pop
dec
sub
ins
pop
xor
gs
sub
pop
dec
daa
jmp
xor
jo
xor
push
push
sub
jne
cmp
jb
aaa
jmp
xor
imul
push
cmp
outs
pop
jmp
cmp
sub
push
cmp
jne
inc
aas
push
cmp
jns
inc
inc
imul
jnp
inc
inc
imul
jp
inc
inc
inc
push
cmp
jbe
aas
inc
jmp
cmp
jo
cmp
sub
jmp
xor
(bad)
jle
inc
call
das
call
out
(bad)
fsubp
jecxz
fstp
loope
repz
add
add
add
xor
xor
out
out
loope
jecxz
(bad)
fdivrp
fsubp
jecxz
mov
xor
sbb
pop
dec
and
push
inc
sbb
push
aas
sbb
pop
dec
jmp
and
pop
inc
and
push
inc
and
push
push
daa
call
jmp
sub
outs
pop
xor
push
sub
pop
dec
sub
ins
pop
xor
jb
jmp
xor
fs
push
cmp
je
cmp
ins
pop
xor
imul
push
cmp
jo
cmp
outs
pop
cmp
xor
jp
aas
push
cmp
je
inc
imul
arpl
dec
ins
inc
push
ds
jns
inc
dec
ins
inc
push
cmp
dec
imul
arpl
inc
imul
outs
pop
cmp
xor
jns
push
cmp
push
imul
push
xor
xchg
xchg
cwde
jmp
out
(bad)
(bad)
in
fsubp
loop
repz
add
add
add
xor
xor
out
out
loop
jecxz
(bad)
fdivrp
fsubp
jecxz
mov
xor
call
sbb
pop
dec
and
push
inc
sbb
push
inc
sbb
popa
dec
daa
jmp
and
pop
inc
and
pop
dec
and
push
jmp
sub
pop
dec
and
bound
jmp
xor
push
sub
pop
dec
sub
outs
pop
xor
jb
jmp
xor
fs
das
(bad)
js
cmp
jmp
xor
push
xor
jle
inc
(bad)
js
cmp
jmp
cmp
test
(bad)
jl
inc
push
push
cmp
(bad)
jg
inc
push
push
inc
dec
outs
inc
(bad)
js
aas
(bad)
js
inc
dec
outs
inc
(bad)
jns
aas
push
inc
dec
outs
inc
(bad)
js
inc
push
cmp
xchg
(bad)
jg
inc
push
cmp
inc
ins
inc
push
jmp
xor
jns
aas
jmp
xor
jmp
out
(bad)
(bad)
in
fsubp
jecxz
hlt
hlt
hlt
jmp
add
add
add
add
xor
cmp
out
clc
jecxz
in
fcmovu
(bad)
(bad)
in
mov
xor
call
sbb
pop
dec
pop
call
call
sbb
popa
dec
call
and
push
inc
push
call
and
push
sub
call
and
push
xor
push
dec
sub
outs
pop
aaa
push
jmp
xor
addr16
xor
jnp
inc
(bad)
jns
push
cmp
ins
pop
cmp
xor
jge
inc
push
push
cmp
inc
addr16
push
inc
dec
dec
(bad)
jl
inc
(bad)
jns
inc
dec
jb
(bad)
jle
inc
(bad)
js
inc
dec
dec
(bad)
jge
inc
push
inc
dec
jno
(bad)
jl
inc
push
cmp
test
inc
jmp
aaa
(bad)
jl
inc
inc
fs
ins
pop
xor
jae
cmp
arpl
call
call
in
(bad)
in
hlt
hlt
hlt
jmp
add
add
add
add
xor
cmp
out
clc
jecxz
in
fcmovu
(bad)
(bad)
in
mov
cmp
call
and
call
daa
call
sub
outs
pop
cmp
imul
push
pop
cmp
jnp
inc
push
inc
jmp
ds
jns
inc
inc
imul
inc
inc
ja
inc
ins
dec
dec
jl
inc
jae
call
jg
dec
ja
call
and
jl
dec
mov
xchg
xchg
nop
sbb
jl
call
xchg
xchg
sbb
pushf
mov
xchg
xchg
sbb
cdq
mov
xchg
xchg
(bad)
jle
inc
sbb
sbb
js
(bad)
jle
dec
inc
jge
inc
addr16
push
jmp
call
call
in
(bad)
in
cmc
hlt
hlt
jmp
add
add
add
add
xor
cmp
out
clc
out
out
(bad)
jecxz
in
call
call
(bad)
jns
inc
(bad)
jp
dec
push
inc
push
inc
outs
dec
(bad)
jns
dec
(bad)
jge
push
dec
jae
(bad)
jl
dec
inc
jge
inc
jae
dec
sbb
xor
xchg
test
xchg
test
mov
dec
mov
xchg
xchg
xchg
and
jg
call
mov
xchg
xchg
pop
jno
popf
(bad)
outs
call
and
xchg
jae
mov
mov
xchg
and
xchg
jae
mov
mov
xchg
and
nop
jo
mov
mov
xchg
and
mov
mov
mov
xchg
and
arpl
sahf
(bad)
outs
call
and
jns
(bad)
jge
pop
jmp
in
out
jmp
out
jmp
in
push
div
jmp
add
add
add
add
xor
cmp
jmp
jmp
jecxz
out
out
jmp
enter
addr16
push
inc
jo
(bad)
jns
dec
(bad)
jp
dec
inc
jae
(bad)
jl
dec
inc
jl
inc
push
dec
and
jnp
inc
and
test
lea
dec
mov
xchg
mov
xchg
and
jg
call
mov
xchg
nop
and
xchg
jae
sahf
nop
outs
call
test
mov
xchg
jae
pushf
mov
xchg
xchg
movs
xchg
jbe
movs
xchg
jne
sahf
nop
jo
xchg
mov
mov
cwde
ja
lahf
xchg
jo
xchg
mov
popf
nop
jb
cmps
cwde
ja
popf
(bad)
outs
call
mov
movs
xchg
jne
pushf
mov
xchg
mov
pop
jno
fwait
lea
xchg
lea
inc
lods
scas
(bad)
in
out
icebp
(bad)
call
jmp
sti
jmp
add
add
add
add
xor
cmp
jmp
in
jmp
out
(bad)
call
int3
into
jmp
inc
jae
(bad)
jl
push
inc
jl
inc
push
dec
and
jnp
inc
and
test
jg
dec
mov
xchg
mov
xchg
test
mov
call
ins
call
and
xchg
je
lahf
xchg
jno
call
jmp
jne
popf
(bad)
jno
xchg
mov
movs
cwde
jp
cmps
call
call
jmp
xchg
jbe
fwait
mov
movs
xchg
jns
stos
popf
jge
mov
(bad)
jb
sahf
xchg
je
stos
popf
jge
mov
(bad)
jno
cwde
mov
test
jp
mov
mov
xchg
xchg
mov
xchg
jae
call
(bad)
jl
pusha
jmp
out
lock
jmp
jmp
sti
jmp
add
add
add
add
xor
cmp
jmp
out
jmp
dec
int
push
pop
dec
ja
inc
jns
dec
jnp
inc
and
test
jg
inc
xchg
xchg
mov
nop
and
jg
call
lea
xchg
mov
nop
sub
xchg
jne
lahf
xchg
jb
cdq
mov
xchg
mov
movs
xchg
js
mov
xchg
jb
cwde
mov
cmps
call
mov
mov
test
jle
lods
lahf
jg
movs
cdq
jp
sahf
xchg
jne
test
mov
jnp
mov
cwde
jl
mov
cmp
fwait
jl
mov
xchg
ja
scas
mov
jnp
mov
mov
test
call
cwde
mov
lahf
xchg
jbe
cmps
cdq
jp
sahf
nop
jb
cdq
mov
jle
arpl
mov
mov
out
lock
jmp
(bad)
std
std
std
jmp
add
add
add
add
xor
cmp
jmp
clc
out
out
out
jmp
jmp
out
dec
into
sar
jns
dec
jnp
inc
call
jg
inc
xchg
xchg
xchg
nop
and
jg
call
mov
xchg
mov
pop
call
mov
xchg
mov
mov
xchg
ja
popf
nop
je
cwde
mov
cmps
fwait
jle
cmps
call
pushf
(bad)
jne
test
lahf
cmp
call
stos
sahf
cmp
mov
jg
mov
popf
cmp
cmps
mov
lods
lahf
cmp
cdq
jg
cmps
cdq
cmp
test
jmp
fwait
jg
mov
movs
xchg
lods
mov
jge
lahf
xchg
js
stos
popf
cmp
cmps
cdq
jnp
lahf
xchg
ja
sahf
xchg
ja
lods
lahf
cmp
lahf
xchg
jne
xchg
push
icebp
repnz
jmp
out
(bad)
jmp
jmp
add
add
add
add
xor
cmp
jmp
clc
out
lock
call
out
out
dec
rcl
inc
test
mov
(bad)
call
mov
test
mov
jo
cwde
mov
xchg
mov
test
popf
xchg
jne
popf
nop
je
cwde
mov
xchg
mov
mov
xchg
js
popf
xchg
jne
cwde
lea
fwait
jg
cmps
call
pushf
xchg
js
stos
lahf
cmp
sahf
cmp
cdq
jle
mov
mov
xchg
stos
lahf
cmp
cwde
jle
lods
mov
mov
scas
mov
cmp
lahf
xchg
mov
(bad)
push
sahf
xchg
cmps
pushf
test
mov
xchg
push
mov
cmp
mov
mov
lods
mov
jle
stos
sahf
test
mov
mov
stos
popf
cmp
mov
mov
jg
movs
xchg
jnp
mov
mov
lock
in
out
out
(bad)
in
in
out
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
xor
cmp
jmp
clc
lock
lock
jmp
call
rcl
inc
mov
nop
test
mov
jno
cwde
mov
xchg
mov
nop
test
pushf
xchg
jne
pushf
nop
je
cwde
mov
xchg
mov
mov
xchg
jns
pushf
nop
jbe
cdq
lea
cmps
call
mov
xchg
jns
stos
lahf
test
stos
sahf
cmp
cdq
jg
mov
mov
xchg
stos
sahf
test
movs
cdq
cmp
mov
mov
scas
mov
cmp
mov
nop
push
mov
mov
mov
test
jmp
lahf
mov
mov
stos
xchg
push
popf
xchg
mov
(bad)
push
movs
mov
stos
lahf
test
test
stos
mov
scas
mov
cmp
xchg
jg
scas
mov
xchg
test
cmp
mov
mov
mov
(bad)
out
out
lock
in
out
out
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
xor
cmp
in
in
clc
lock
icebp
(bad)
jmp
in
(bad)
out
lock
call
aad
dec
mov
xchg
mov
xchg
xchg
popf
xchg
ja
fwait
nop
je
xchg
mov
xchg
mov
mov
xchg
jns
pushf
(bad)
jbe
cwde
lea
cmps
call
mov
xchg
jp
stos
lahf
test
test
cdq
cmp
xchg
jle
scas
mov
xchg
test
cdq
cmp
cmps
mov
mov
mov
scas
mov
test
mov
mov
mov
xchg
push
mov
(bad)
(bad)
mov
stos
xchg
push
mov
fwait
push
test
jmp
call
test
mov
mov
xchg
(bad)
mov
test
mov
stos
lahf
mov
mov
test
jmp
pushf
test
scas
movs
mov
mov
mov
lods
mov
jl
mov
repz
(bad)
out
lock
(bad)
out
out
lock
(bad)
(bad)
(bad)
jmp
add
add
add
add
xor
cmp
in
in
clc
repnz
in
in
out
(bad)
out
icebp
bnd
(bad)
fdivr
lea
jne
cwde
lea
mov
mov
xchg
jp
fwait
nop
js
cwde
(bad)
js
cmps
call
lahf
xchg
jnp
popf
xchg
jl
stos
lahf
test
cmps
pushf
cmp
cwde
cmp
xchg
cmp
mov
xchg
test
test
movs
call
mov
mov
lods
mov
xchg
mov
nop
push
cmps
(bad)
jmp
xchg
(bad)
mov
stos
xchg
push
test
(bad)
mov
scas
xchg
push
xchg
(bad)
mov
mov
push
cmps
xchg
(bad)
mov
mov
push
cmps
xchg
push
mov
(bad)
mov
test
jmp
scas
xchg
(bad)
mov
cmps
mov
lods
mov
(bad)
push
movs
mov
pushf
xchg
cmp
mov
cmc
(bad)
out
lock
out
out
icebp
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
xor
cmp
in
in
clc
repz
in
out
lock
bnd
fcomp
call
xchg
jp
pushf
xchg
jp
fwait
xchg
jnp
movs
fwait
cmp
cwde
jg
lahf
xchg
jle
sahf
xchg
jg
stos
mov
cmp
cwde
cmp
scas
mov
mov
test
xchg
movs
fwait
xchg
mov
(bad)
push
mov
mov
mov
xchg
push
cmps
(bad)
jmp
lods
xchg
(bad)
mov
stos
xchg
push
lods
xchg
(bad)
mov
scas
xchg
push
stos
xchg
inc
mov
(bad)
mov
scas
call
mov
(bad)
mov
mov
push
mov
inc
mov
(bad)
mov
lods
call
mov
call
cmps
nop
(bad)
mov
mov
push
cmps
nop
jmp
mov
push
cdq
xchg
rol
push
hlt
idiv
icebp
icebp
repz
lock
(bad)
(bad)
(bad)
push
add
add
add
add
xor
cmp
in
in
clc
hlt
hlt
hlt
(bad)
out
out
icebp
push
repz
(bad)
fcomp
(bad)
xchg
nop
test
mov
xchg
jg
mov
lahf
mov
cmps
fwait
test
mov
cdq
test
lods
mov
xchg
cmps
pushf
xchg
movs
pushf
xchg
mov
(bad)
jmp
mov
mov
mov
xchg
push
movs
(bad)
jmp
xchg
(bad)
mov
stos
xchg
jmp
mov
(bad)
mov
scas
xchg
push
scas
cdq
inc
mov
(bad)
mov
scas
cdq
push
mov
mov
push
mov
test
mov
scas
mov
inc
mov
mov
push
mov
lahf
(bad)
mov
stos
xchg
(bad)
mov
mov
(bad)
mov
lods
xchg
push
mov
(bad)
mov
sahf
mov
ret
push
cmc
idiv
repnz
push
repnz
(bad)
(bad)
(bad)
push
add
add
add
add
xor
cmp
out
out
clc
cmc
cmc
hlt
(bad)
out
lock
repz
(bad)
fcmovu
(bad)
call
jmp
pushf
xchg
lods
mov
mov
cmps
sahf
mov
cmps
lahf
mov
mov
nop
jmp
mov
(bad)
push
test
jmp
movs
nop
(bad)
mov
lods
xchg
push
cmps
xchg
(bad)
mov
mov
push
test
sahf
inc
mov
(bad)
mov
scas
cdq
(bad)
mov
mov
mov
(bad)
mov
mov
movs
(bad)
mov
mov
inc
mov
lods
(bad)
mov
mov
(bad)
mov
mov
test
mov
mov
inc
mov
movs
(bad)
mov
mov
(bad)
mov
mov
sahf
(bad)
mov
stos
xchg
(bad)
mov
mov
jmp
(bad)
div
clc
push
repz
push
repz
(bad)
(bad)
(bad)
(bad)
push
add
add
add
add
xor
cmp
out
out
clc
div
idiv
lock
hlt
cmc
(bad)
(bad)
(bad)
sahf
cdq
(bad)
jmp
popf
mov
stos
mov
xchg
jmp
mov
nop
push
xchg
jmp
cmps
xchg
(bad)
mov
lods
xchg
push
test
(bad)
mov
mov
push
stos
xchg
(bad)
mov
mov
(bad)
mov
lods
call
mov
mov
(bad)
mov
mov
movs
(bad)
mov
mov
dec
mov
stos
inc
mov
movs
inc
mov
mov
ret
mov
test
dec
ret
lds
cmps
(bad)
mov
mov
test
(bad)
mov
mov
inc
mov
mov
(bad)
mov
mov
inc
mov
xchg
inc
(bad)
enter
stc
push
hlt
idiv
hlt
repz
(bad)
(bad)
(bad)
(bad)
push
add
add
add
add
xor
cmp
out
out
clc
cmc
cmc
idiv
icebp
repnz
hlt
cmc
(bad)
(bad)
(bad)
mov
mov
(bad)
jmp
stos
xchg
push
movs
xchg
push
scas
cdq
push
test
push
mov
push
lods
cdq
push
mov
(bad)
mov
lods
pushf
inc
mov
mov
(bad)
mov
mov
cmps
inc
mov
(bad)
mov
mov
dec
shr
mov
movs
dec
shr
les
inc
mov
mov
lds
stos
(bad)
mov
ret
mov
enter
les
inc
mov
lods
inc
mov
movs
(bad)
mov
mov
test
shl
(bad)
mov
mov
pushf
dec
leave
leave
push
idiv
push
hlt
idiv
repz
(bad)
(bad)
(bad)
(bad)
push
add
add
add
add
xor
cmp
out
out
clc
div
idiv
icebp
repnz
hlt
idiv
(bad)
loopne
cmps
mov
xchg
jmp
lods
cdq
push
stos
cwde
push
lods
fwait
(bad)
mov
scas
fwait
push
popf
(bad)
mov
mov
(bad)
mov
mov
inc
mov
mov
(bad)
mov
mov
cmps
inc
mov
mov
inc
mov
test
sar
dec
ret
mov
(bad)
mov
stos
inc
mov
mov
retf
ret
mov
(bad)
mov
lods
inc
mov
mov
leave
shl
sar
dec
les
inc
mov
lods
dec
lds
inc
mov
cmps
inc
mov
lods
inc
mov
movs
(bad)
mov
mov
mov
push
idiv
push
hlt
idiv
hlt
hlt
cmc
(bad)
(bad)
(bad)
(bad)
push
add
add
add
add
xor
cmp
lock
clc
div
idiv
repnz
push
cmc
idiv
(bad)
loop
test
lods
cdq
push
mov
(bad)
mov
mov
push
mov
(bad)
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
cmps
inc
mov
movs
dec
shr
lds
test
enter
int3
les
inc
mov
lods
dec
(bad)
mov
int3
les
inc
mov
mov
ror
mov
int3
lds
dec
shl
into
(bad)
mov
retf
les
dec
enter
leave
mov
int3
lds
dec
mov
mov
int
mov
retf
inc
mov
mov
iret
(bad)
mov
retf
inc
mov
test
retf
(bad)
mov
int
push
idiv
push
cmc
idiv
cmc
cmc
idiv
(bad)
(bad)
(bad)
push
add
add
add
add
xor
cmp
lock
clc
clc
clc
push
hlt
cmc
push
div
jmp
loop
jmp
cmps
call
stos
lahf
push
test
pushf
push
lods
mov
jmp
lods
mov
push
mov
(bad)
mov
mov
push
lods
mov
(bad)
mov
mov
push
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
stos
(bad)
mov
mov
inc
mov
lods
(bad)
mov
mov
(bad)
mov
mov
stos
(bad)
mov
mov
inc
mov
stos
(bad)
mov
mov
(bad)
mov
mov
test
mov
mov
(bad)
mov
scas
movs
dec
iret
iret
(bad)
clc
clc
stc
push
div
push
cmc
idiv
(bad)
(bad)
(bad)
push
add
add
add
xor
xor
lock
clc
clc
clc
push
hlt
idiv
cmc
cmc
idiv
in
in
in
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
jmp
in
(bad)
clc
idiv
push
idiv
push
div
(bad)
(bad)
(bad)
(bad)
push
add
add
add
add
xor
cmp
lock
stc
stc
cli
push
div
push
div
push
idiv
(bad)
cli
cld
(bad)
(bad)
cli
cld
(bad)
(bad)
cli
cld
(bad)
(bad)
cli
cld
(bad)
(bad)
cli
cld
(bad)
(bad)
cli
sti
std
(bad)
cli
cli
cld
(bad)
cli
cli
cld
(bad)
cli
cli
cld
(bad)
cli
cli
cld
(bad)
cli
cli
cld
(bad)
cli
cli
cld
(bad)
cli
cli
cld
(bad)
sti
cli
cld
(bad)
sti
cli
cld
(bad)
sti
cli
cld
(bad)
cli
cli
cld
(bad)
cli
cli
cld
(bad)
cli
sti
cld
(bad)
sti
sti
cld
(bad)
cli
cli
cld
(bad)
cli
sti
cld
(bad)
cli
sti
cld
(bad)
cli
sti
cld
(bad)
cli
sti
cld
(bad)
cli
cli
cld
(bad)
cli
sti
cld
(bad)
cli
sti
cld
(bad)
sti
sti
cld
(bad)
sti
cli
cld
(bad)
sti
cli
cld
(bad)
sti
cli
cld
(bad)
sti
sti
std
(bad)
sti
cli
cld
(bad)
sti
cli
cld
(bad)
sti
cli
cld
(bad)
sti
cli
cld
(bad)
sti
sti
cld
(bad)
sti
cli
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
sti
sti
cld
(bad)
sti
sti
std
(bad)
sti
sti
std
(bad)
sti
sti
std
(bad)
sti
sti
std
(bad)
cld
sti
std
(bad)
sti
sti
std
(bad)
sti
sti
std
(bad)
sti
sti
std
(bad)
cld
sti
std
(bad)
cld
sti
std
(bad)
cld
sti
std
(bad)
sti
sti
std
(bad)
stc
stc
sti
push
idiv
push
idiv
push
idiv
(bad)
(bad)
(bad)
(bad)
push
add
add
add
add
in
in
idiv
sti
sti
push
div
push
idiv
push
hlt
cmc
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
repz
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
idiv
push
idiv
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
sbb
and
out
out
(bad)
(bad)
(bad)
(bad)
clc
clc
clc
push
clc
stc
push
call
(bad)
push
ror
push
rol
push
ror
push
rol
push
loop
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
idiv
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
(bad)
push
icebp
(bad)
push
icebp
(bad)
push
icebp
(bad)
push
lock
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
stc
stc
cld
dec
dec
dec
dec
or
push
xchg
lahf
mov
movs
movs
stos
movs
cmps
cmps
stos
movs
cmps
cmps
stos
movs
cmps
cmps
stos
movs
cmps
cmps
stos
movs
cmps
cmps
stos
movs
movs
cmps
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
movs
movs
movs
stos
lahf
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
clc
cmp
cld
(bad)
inc
add
(bad)
(bad)
(bad)
clc
sbb
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
clc
cmp
(bad)
(bad)
inc
add
loopne
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
clc
fisttp
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
or
adc
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
mov
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
inc
data16
pushf
popf
jmp
pushf
pushf
jmp
pushf
pushf
jmp
pushf
pushf
jmp
pushf
pushf
jmp
pushf
pushf
jmp
fwait
pushf
jmp
call
rol
dec
into
iret
dec
into
iret
dec
into
iret
dec
into
iret
dec
into
iret
dec
into
iret
dec
into
iret
dec
into
iret
dec
into
iret
dec
into
sar
int
sar
int
sar
int
sar
int
sar
int
sar
int
sar
int
sar
into
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
aam
call
aam
call
aam
call
aam
call
aam
call
aam
call
aam
call
aam
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
fcomp
dec
sub
bound
ins
les
ins
enter
(bad)
imul
imul
imul
pop
pop
pop
test
or
pop
cmp
cmp
fdivr
jmp
out
jmp
in
(bad)
jmp
in
(bad)
jmp
out
(bad)
fcompp
fcos
int3
int
(bad)
(bad)
fdivr
xlat
fcmovu
(bad)
fcomp
fdivr
fcomp
fdivr
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
(bad)
fdivr
(bad)
fdivr
fcomp
fdivr
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
fcmovu
fdivr
fcmovu
fdivr
fcmovu
fdivr
fcmovu
(bad)
(bad)
(bad)
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
fcmovu
fdivr
fcmovu
fdivr
fcmovu
fdivr
fcmovu
fdivr
fcmovu
fdivr
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
fstp
(bad)
fstp
(bad)
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
(bad)
(bad)
fdivrp
loope
jecxz
mov
mov
mov
out
(bad)
(bad)
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
(bad)
loop
in
mov
add
add
sbb
retf
int3
out
jmp
loope
jmp
loop
jmp
loop
jmp
loop
jmp
loop
(bad)
call
fcmovu
std
rcl
sar
(bad)
fdivr
(bad)
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
jecxz
in
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
in
(bad)
jmp
in
(bad)
jmp
in
(bad)
jmp
out
(bad)
in
in
out
(bad)
in
out
out
(bad)
in
out
out
(bad)
in
out
out
(bad)
in
out
out
(bad)
out
out
lock
out
out
lock
out
out
lock
out
lock
(bad)
out
lock
(bad)
out
lock
(bad)
out
lock
out
icebp
repnz
icebp
repz
icebp
repnz
repnz
repnz
repz
repz
push
repz
push
repz
push
hlt
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
cmc
push
cmc
idiv
hlt
cmc
idiv
hlt
cmc
idiv
hlt
cmc
idiv
cmc
div
push
div
push
div
push
div
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
cmc
cmc
(bad)
mov
mov
icebp
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
icebp
icebp
call
pop
ins
or
or
mov
in
jmp
fnstsw
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loope
(bad)
fcmovbe
aad
into
(bad)
ror
int3
call
int3
int
ror
sar
rcl
sar
rcl
aam
mov
mov
jl
jl
jp
jns
jl
jl
jge
jl
jg
jle
cmp
add
cmp
add
xchg
dec
mov
dec
mov
mov
(bad)
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
xchg
cwde
call
cdq
call
fwait
pushf
call
sahf
call
lahf
mov
jmp
mov
movs
jmp
cmps
cmps
jmp
test
jmp
stos
stos
jmp
stos
lods
jmp
lods
jmp
lods
scas
jmp
scas
scas
jmp
mov
(bad)
jmp
clc
loopne
(bad)
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
out
out
out
inc
mov
sbb
add
add
out
jmp
fnstsw
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loope
call
leave
retf
dec
ret
(bad)
ret
mov
inc
ret
(bad)
leave
retf
fcomp
jmp
imul
sbb
sbb
call
sbb
jmp
sbb
push
jmp
pop
and
and
and
and
jmp
and
jmp
and
jmp
and
daa
jmp
sub
sub
sub
jmp
sub
push
sub
push
das
xor
xor
xor
xor
xor
xor
(bad)
cmp
(bad)
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
(bad)
aas
cmp
inc
ds
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
push
call
push
call
push
call
call
push
call
push
call
push
call
pop
call
pop
call
call
call
call
pop
push
std
(bad)
(bad)
in
in
in
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
push
dec
dec
dec
gs
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
out
loop
(bad)
sar
mov
scas
inc
inc
(bad)
cmp
inc
cmp
inc
aas
inc
push
add
and
daa
jmp
daa
sub
sub
sub
jmp
sub
xor
push
das
das
push
xor
xor
xor
(bad)
cmp
(bad)
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
inc
inc
aas
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
push
call
call
push
call
push
call
push
call
pop
call
pop
call
call
pop
call
pop
call
pop
jmp
pusha
jmp
popa
jmp
(bad)
jmp
arpl
fs
jmp
jmp
jmp
inc
(bad)
clc
clc
stc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
inc
(bad)
(bad)
fist
adc
adc
adc
mov
out
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loop
(bad)
(bad)
(bad)
push
sub
jmp
sbb
jmp
and
push
sbb
call
sahf
lahf
jmp
sbb
and
jmp
daa
sub
sub
sub
jmp
sub
xor
push
das
das
push
xor
xor
push
xor
(bad)
cmp
(bad)
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
push
call
call
push
call
push
call
push
call
pop
call
pop
call
call
pop
call
pop
call
pop
jmp
pusha
jmp
popa
jmp
arpl
arpl
jmp
jmp
jmp
jmp
jmp
push
push
div
(bad)
jmp
jmp
jmp
(bad)
jmp
(bad)
out
out
out
call
push
add
add
push
push
push
push
out
jecxz
in
loope
in
loope
in
loope
in
loope
out
loop
fcompp
(bad)
lds
inc
jmp
and
jmp
es
jmp
and
(bad)
jge
jl
mov
mov
sub
jmp
and
jmp
daa
daa
jmp
sub
sub
sub
jmp
sub
xor
push
das
das
push
xor
xor
push
xor
(bad)
cmp
(bad)
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
push
call
call
push
call
push
call
push
call
pop
call
pop
call
call
pop
call
pop
call
pop
jmp
pusha
jmp
popa
jmp
arpl
fs
jmp
jmp
jmp
jmp
ins
jmp
jecxz
push
repnz
jmp
jmp
jmp
(bad)
jmp
jmp
div
idiv
cdq
cdq
cdq
lods
add
add
add
add
out
jmp
in
loope
in
loope
in
loope
out
loop
loopne
fdivr
into
(bad)
enter
push
jmp
es
jmp
and
jmp
push
jmp
sub
jmp
sbb
and
sub
jmp
and
daa
jmp
sub
sub
jmp
sub
push
sub
push
cs
das
xor
xor
xor
xor
xor
push
xor
(bad)
cmp
ss
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
pop
call
pop
call
call
pop
call
pop
jmp
pusha
jmp
popa
jmp
(bad)
jmp
arpl
arpl
call
pop
push
jb
out
out
out
(bad)
out
out
lock
jmp
(bad)
jmp
(bad)
jmp
jmp
div
idiv
mov
mov
pop
pop
pop
sbb
push
push
push
or
(bad)
cmc
icebp
in
in
(bad)
out
jmp
jmp
out
call
rcl
jmp
call
sbb
jmp
and
and
sbb
dec
dec
dec
dec
retf
int3
jmp
push
das
push
sub
das
push
xor
push
xor
aaa
xor
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
inc
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
call
push
call
push
call
push
call
push
call
pop
call
pop
call
call
pop
call
pop
jmp
pop
jmp
pusha
jmp
popa
jmp
(bad)
jmp
jmp
jmp
push
push
jae
outs
outs
outs
jmp
imul
ins
ins
jmp
imul
ins
ins
call
std
(bad)
push
repnz
icebp
icebp
push
lock
icebp
icebp
push
hlt
hlt
push
cmc
cmc
push
and
daa
cmp
aaa
inc
mov
mov
iret
retf
retf
call
ror
into
jmp
enter
mov
push
dec
dec
dec
dec
push
je
fcomp
(bad)
fsubp
loope
leave
retf
rol
inc
ret
ret
inc
(bad)
(bad)
mov
mov
pop
call
pop
call
pop
jmp
pop
jmp
pop
jmp
pop
jmp
popa
jmp
jmp
pop
(bad)
jp
jnp
rol
inc
(bad)
enter
enter
leave
dec
leave
retf
rcl
call
aad
call
aad
call
xlat
fdivr
fcomp
fcos
rcl
sar
into
into
iret
dec
iret
sar
rcl
sar
rcl
sar
rcl
aam
(bad)
(bad)
fnstsw
loope
loopne
loope
loope
loop
loop
in
jecxz
in
jecxz
out
in
out
in
out
out
call
(bad)
jmp
jmp
jmp
in
jmp
jmp
loopne
jmp
cmps
cmps
call
aad
(bad)
in
in
out
(bad)
jmp
in
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
in
in
out
cmc
xlat
xlat
xlat
jmp
xlat
xlat
in
fcomp
fsubr
rcl
shl
mov
jno
jle
(bad)
movlps
add
add
or
or
pop
push
push
and
sbb
sub
bound
cmp
mov
mov
xchg
xchg
xchg
mov
xchg
xchg
mov
cdq
fwait
mov
sahf
sahf
mov
popf
sahf
mov
popf
sahf
mov
lahf
mov
mov
outs
outs
mov
outs
jo
jo
jo
jo
jb
jb
jb
jae
jb
jae
je
jb
jae
jle
jg
(bad)
call
call
jmp
jmp
loop
imul
cmps
scas
cmps
test
mov
test
mov
test
mov
xlat
xlat
in
out
icebp
(bad)
out
in
out
(bad)
out
out
lock
out
out
lock
lock
dec
enter
stos
lods
scas
scas
scas
scas
mov
scas
mov
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
cwde
scas
inc
inc
inc
ret
ds
jns
jns
mov
mov
mov
mov
mov
mov
mov
ja
js
cs
xor
push
push
and
pop
pop
and
and
and
sbb
sbb
or
or
add
add
sub
sub
(bad)
aad
(bad)
fdivr
fstp
(bad)
(bad)
fstp
(bad)
jmp
fcmovnu
inc
mov
adc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fst
(bad)
(bad)
(bad)
fdivr
pop
pop
pop
push
add
add
add
add
add
add
sub
sub
fcmovbe
aam
fcom
sar
fcom
sar
fcmovnbe
aad
mov
adc
add
nop
xchg
nop
test
fcom
sar
fcom
sar
fcom
sar
fcmovnbe
aam
pop
push
push
imul
add
add
sub
das
enter
xlat
ror
call
ror
call
ror
(bad)
fcom
sar
mov
pop
pop
sbb
add
add
add
add
(bad)
sar
aad
int
aad
int
aad
int
xlat
ror
call
push
imul
add
and
and
mov
out
ror
retf
call
int3
leave
call
int3
leave
call
iret
int3
(bad)
mov
adc
adc
add
add
rcl
call
int3
leave
call
int3
leave
call
int3
leave
call
into
retf
call
push
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
push
push
sbb
push
push
sbb
push
push
sbb
pop
pop
sbb
pop
pop
pop
sbb
pop
sbb
push
pop
pop
pop
push
sbb
pop
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
push
push
sbb
enter
ror
retf
int3
leave
call
int3
leave
call
into
retf
(bad)
mov
sub
sbb
sbb
sbb
sbb
and
sbb
and
xchg
xchg
mov
ror
dec
retf
leave
dec
int3
leave
dec
int3
enter
retf
arpl
sbb
pop
sbb
sbb
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
pop
sbb
sbb
sbb
pop
pop
pop
pop
pop
push
pop
pop
pop
push
pop
pop
pop
sbb
pop
pop
pop
sbb
push
push
push
sbb
push
push
sbb
adc
sbb
adc
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
adc
add
add
sub
xor
mov
into
mov
enter
(bad)
loopne
mov
loopne
mov
loopne
mov
ffreep
ret
mov
mov
mov
loop
mov
mov
jecxz
mov
mov
in
mov
mov
mov
mov
mov
mov
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
(bad)
std
retf
dec
enter
enter
enter
(bad)
sar
mov
jmp
mov
stos
out
mov
out
scas
stos
out
mov
mov
inc
sar
ret
mov
icebp
mov
stos
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
in
mov
out
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
mov
mov
mov
mov
mov
mov
mov
loope
mov
loopne
mov
loopne
mov
loopne
vpand
imul
push
push
push
push
mov
stc
stc
(bad)
out
out
out
jmp
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
(bad)
(bad)
(bad)
fcmovnu
(bad)
fcmovu
(bad)
fcmovnu
fcos
(bad)
fcos
(bad)
fdivr
fcomp
fdivr
fcomp
xlat
call
fcom
call
fcom
call
xlat
aad
(bad)
(bad)
aam
(bad)
(bad)
aam
aad
aam
aam
sar
aam
sar
aam
sar
rcl
sar
rcl
sar
rcl
sar
rcl
iret
call
ror
call
ror
dec
ror
dec
retf
leave
leave
(bad)
dec
leave
(bad)
enter
enter
enter
int
dec
int
dec
int
dec
int3
enter
enter
sar
les
inc
ret
mov
inc
(bad)
sar
leave
(bad)
int3
enter
enter
leave
dec
into
leave
dec
into
retf
into
retf
dec
iret
int3
dec
ror
call
ror
call
ror
call
ror
call
ror
call
ror
call
rcl
call
aam
call
aam
call
aam
call
aad
call
(bad)
sar
aad
sar
(bad)
(bad)
aam
(bad)
fcom
call
fcom
call
xlat
(bad)
(bad)
fcomp
(bad)
(bad)
fcomp
xlat
(bad)
fstp
fdivr
in
in
in
in
in
in
in
in
in
in
in
in
call
repnz
div
(bad)
jl
jl
add
add
push
push
push
push
out
out
jmp
jecxz
call
aad
dec
rcl
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
(bad)
aam
into
aad
dec
(bad)
aad
iret
(bad)
aad
into
(bad)
aad
iret
(bad)
aam
iret
(bad)
aam
iret
(bad)
aad
iret
(bad)
aad
iret
(bad)
aad
iret
(bad)
aad
iret
(bad)
aad
iret
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
xlat
(bad)
call
xlat
(bad)
call
xlat
xlat
call
xlat
(bad)
call
xlat
(bad)
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
fdivr
rcl
fdivr
rcl
fdivr
rcl
xlat
call
(bad)
(bad)
in
in
jmp
iret
iret
iret
out
sbb
pop
js
jns
in
out
in
(bad)
fcmovu
(bad)
int3
rcl
dec
aad
dec
aad
dec
aad
dec
(bad)
aad
int
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
iret
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
xlat
dec
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
fdivr
rcl
fdivr
rcl
xlat
call
xlat
xlat
call
fcom
call
fcom
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcom
jmp
loop
jmp
loope
div
xor
cmp
add
add
in
in
call
(bad)
dec
aad
dec
(bad)
aad
into
(bad)
aad
into
(bad)
aad
rcr
fdivr
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcr
(bad)
aam
(bad)
aam
(bad)
aam
(bad)
rcr
(bad)
rcr
(bad)
aam
(bad)
aam
(bad)
aam
(bad)
aam
(bad)
aam
fdivr
aam
fdivr
aam
fdivr
aam
fdivr
aam
fdivr
aam
fdivr
aad
fdivr
aad
fdivr
aad
fdivr
aad
fdivr
aad
fdivr
aad
fdivr
aad
fdivr
aad
fdivr
aad
fdivr
aad
fdivr
aad
(bad)
aad
(bad)
aad
(bad)
aad
(bad)
aad
(bad)
(bad)
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
fcmovnu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcomp
(bad)
(bad)
fdivrp
out
out
inc
inc
inc
dec
xchg
in
call
(bad)
dec
aad
dec
(bad)
aad
into
(bad)
aad
int
aam
leave
iret
iret
inc
int
inc
int
inc
int
inc
into
into
inc
int
inc
int
inc
int
inc
int
inc
int
inc
int3
into
inc
int
inc
int
inc
int
inc
int3
into
inc
int3
into
inc
int
inc
int
inc
int3
into
inc
int3
into
inc
int3
iret
inc
int
inc
int3
iret
inc
int3
into
inc
int3
iret
inc
int3
iret
inc
int
inc
int3
into
inc
int
inc
int
inc
int
inc
int
inc
int3
into
inc
int
inc
int
inc
int
inc
int3
into
inc
int3
iret
inc
int
inc
int
inc
int
inc
int3
into
inc
int3
iret
inc
int
inc
int
inc
int3
iret
inc
int3
into
inc
int
inc
int
inc
int
inc
int
inc
int
inc
int
inc
int
inc
into
sar
(bad)
int
inc
int
inc
int
inc
into
sar
(bad)
into
iret
inc
int
inc
int
dec
int
dec
into
sar
leave
into
sar
enter
enter
leave
iret
sar
leave
iret
sar
leave
iret
sar
enter
enter
leave
iret
sar
leave
iret
sar
leave
iret
sar
enter
leave
iret
sar
retf
call
fcomp
call
fcmovu
call
fcmovu
call
fcmovu
call
fcomp
(bad)
(bad)
fdivrp
out
out
inc
inc
inc
push
mov
in
call
(bad)
dec
(bad)
aad
iret
xlat
(bad)
call
(bad)
dec
iret
into
jmp
outs
call
inc
call
call
inc
call
inc
call
dec
call
dec
call
call
inc
call
dec
call
dec
call
inc
call
inc
call
inc
call
dec
call
dec
call
inc
call
inc
call
dec
call
dec
call
dec
call
inc
call
dec
call
dec
call
dec
call
dec
call
inc
call
dec
call
dec
call
dec
call
dec
call
dec
call
call
dec
call
dec
call
dec
call
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
dec
call
call
dec
call
dec
call
dec
call
dec
call
call
inc
jmp
popa
(bad)
mov
fstp
call
fcmovnu
call
fcmovnu
call
(bad)
(bad)
(bad)
fdivrp
out
out
inc
inc
inc
dec
mov
in
(bad)
fcomp
fcos
iret
(bad)
aad
iret
xlat
(bad)
call
(bad)
dec
into
into
dec
inc
push
sub
cmp
or
xor
adc
inc
xor
(bad)
cmp
or
xor
xor
dec
adc
inc
das
or
cmp
or
ds
dec
cmp
or
inc
xor
(bad)
cmp
or
dec
cmp
dec
adc
inc
xor
inc
or
inc
ss
push
inc
pop
dec
adc
inc
xor
or
call
adc
inc
push
dec
call
sbb
dec
adc
inc
xor
call
sbb
dec
adc
dec
adc
call
sbb
push
ds
dec
adc
push
inc
sbb
pop
dec
and
push
inc
sbb
push
cmp
adc
pop
inc
and
pop
dec
and
push
inc
sbb
dec
ds
dec
push
call
and
pop
inc
push
call
sbb
dec
cmp
dec
push
call
and
push
inc
sbb
push
aas
push
dec
adc
dec
cmp
call
and
push
inc
sbb
dec
cmp
adc
dec
cmp
call
dec
adc
dec
ss
inc
ss
pop
inc
sbb
inc
xor
mov
(bad)
call
fcmovnu
call
fcmovnu
call
(bad)
(bad)
fnstsw
(bad)
call
inc
inc
dec
mov
in
(bad)
fcomp
fcos
iret
(bad)
aad
rcl
xlat
call
(bad)
dec
into
iret
dec
dec
inc
push
dec
sbb
inc
xor
inc
adc
push
inc
pop
dec
sbb
dec
cmp
inc
xor
call
sbb
push
inc
sbb
dec
adc
dec
cmp
pop
call
pop
call
adc
call
and
pop
dec
sbb
dec
push
call
push
jmp
and
pop
inc
sbb
push
inc
sbb
push
aas
sbb
arpl
jmp
and
pop
inc
push
call
sbb
pop
dec
and
addr16
sub
pop
dec
and
pop
dec
and
push
inc
sbb
jmp
sub
pop
dec
and
pop
dec
and
push
inc
and
imul
fs
sub
pop
dec
and
pop
inc
and
pop
dec
daa
jmp
jmp
daa
call
and
pop
inc
and
arpl
jmp
jmp
daa
call
and
jmp
das
jmp
sub
call
and
push
inc
and
push
das
jmp
sub
pusha
dec
and
pop
dec
and
push
inc
and
push
push
sub
pop
dec
and
pop
dec
and
push
inc
pop
jmp
sub
gs
sub
pop
dec
and
pop
inc
push
call
sbb
gs
sub
pop
dec
and
dec
inc
cmp
mov
(bad)
call
fcmovnu
call
fcmovnu
call
(bad)
(bad)
fnstsw
(bad)
call
inc
inc
dec
mov
in
(bad)
(bad)
(bad)
iret
xlat
(bad)
call
fcom
call
fcmovu
dec
iret
iret
dec
inc
inc
adc
inc
cmp
inc
adc
inc
xor
dec
dec
adc
inc
xor
call
sbb
dec
adc
dec
sbb
pop
dec
pop
call
sbb
dec
ds
call
and
pop
dec
push
call
dec
pop
call
pop
jmp
and
pop
inc
sbb
dec
sbb
arpl
jmp
and
pop
inc
pop
call
call
and
push
dec
and
pop
dec
and
push
inc
push
jmp
sub
addr16
sub
pop
dec
and
pop
dec
and
push
inc
and
push
das
jmp
sub
pop
dec
and
pop
dec
and
pop
dec
jmp
jmp
jmp
and
jmp
sub
ins
pop
xor
arpl
jmp
call
and
gs
sub
jmp
daa
call
and
jmp
sub
jmp
call
and
push
inc
and
arpl
jmp
sub
call
call
jmp
sub
push
dec
and
pop
dec
and
push
inc
sbb
pop
dec
jmp
and
dec
inc
cmp
mov
(bad)
call
fcmovnu
call
(bad)
call
fcmovu
jmp
loopne
(bad)
call
inc
inc
dec
mov
in
(bad)
(bad)
(bad)
rcl
xlat
call
fcomp
call
fcmovu
dec
iret
iret
dec
inc
inc
adc
inc
cmp
inc
adc
inc
ss
call
pop
dec
dec
adc
inc
xor
call
sbb
dec
adc
dec
cmp
call
sbb
pop
dec
pop
call
sbb
push
ds
dec
push
call
and
pop
dec
push
call
sbb
dec
ds
push
inc
and
bound
call
push
call
sbb
push
inc
sbb
fs
sub
popa
dec
and
call
push
call
and
imul
call
call
and
arpl
jmp
sub
call
call
and
imul
push
dec
call
and
pop
dec
and
jmp
sub
bound
call
and
pop
dec
sub
outs
pop
xor
push
sub
popa
push
daa
call
and
bound
jmp
xor
gs
sub
popa
dec
daa
call
and
arpl
jmp
xor
arpl
jmp
and
jmp
sub
ins
pop
xor
bound
call
and
push
inc
and
pop
dec
jmp
das
jmp
call
call
pop
call
and
bound
dec
cmp
mov
(bad)
call
(bad)
call
(bad)
call
fcmovu
jmp
loopne
(bad)
call
inc
inc
dec
mov
out
(bad)
(bad)
(bad)
rcl
xlat
call
fcomp
call
fcmovu
dec
iret
iret
dec
inc
inc
adc
inc
aaa
adc
dec
sbb
push
inc
push
dec
pop
dec
adc
inc
ss
pop
inc
push
call
dec
adc
dec
cmp
call
call
and
push
inc
sbb
push
ds
dec
sbb
pusha
dec
and
pop
dec
pop
call
sbb
dec
ds
pop
inc
and
fs
daa
call
and
push
inc
sbb
jmp
sub
arpl
call
call
pop
call
and
imul
popa
dec
call
and
push
inc
and
arpl
jmp
das
jmp
daa
call
and
jmp
xor
push
jmp
sub
pop
dec
call
and
jmp
jmp
sub
pop
dec
daa
call
sub
jo
xor
imul
call
call
sub
jno
xor
jmp
call
call
sub
jo
xor
addr16
sub
bound
call
and
pop
dec
sub
outs
pop
xor
push
sub
pusha
dec
and
call
and
ins
pop
xor
gs
sub
pop
dec
and
pop
dec
and
push
inc
and
popa
push
daa
dec
cmp
(bad)
fcmovu
(bad)
xlat
(bad)
call
(bad)
call
fcmovnu
jmp
loope
(bad)
jmp
inc
inc
dec
mov
out
(bad)
(bad)
(bad)
rcl
xlat
call
fcomp
call
fcmovnu
dec
iret
iret
dec
inc
inc
adc
dec
cmp
inc
xor
dec
sbb
push
inc
push
dec
push
dec
adc
dec
cmp
pop
dec
pop
call
sbb
push
ds
call
push
call
call
call
sbb
dec
ds
popa
dec
call
and
push
inc
sbb
push
aas
sbb
pop
dec
and
fs
sub
pop
dec
and
pop
inc
push
call
push
jmp
sub
fs
sub
pop
dec
and
pop
inc
and
pop
dec
and
jmp
sub
pop
dec
and
jmp
sub
outs
pop
xor
fs
sub
pusha
dec
daa
call
and
jmp
jmp
sub
popa
push
sub
pop
dec
jmp
xor
ins
pop
xor
gs
sub
pusha
dec
sub
pop
dec
sub
jno
xor
jmp
sub
pop
dec
sub
pop
dec
sub
jae
xor
jmp
sub
pop
dec
daa
call
push
xor
jmp
call
call
and
jmp
jmp
daa
call
call
and
push
das
jmp
sub
call
call
and
pop
dec
call
ds
mov
loope
(bad)
fcomp
(bad)
fcomp
(bad)
xlat
fcmovnu
jmp
loope
(bad)
jmp
inc
inc
dec
mov
out
(bad)
fcmovu
(bad)
rcr
xlat
call
(bad)
call
fcmovnu
dec
into
iret
dec
inc
(bad)
aas
xor
dec
adc
inc
xor
dec
sbb
push
inc
sbb
dec
cmp
dec
adc
dec
cmp
call
call
call
push
dec
adc
call
and
push
inc
sbb
push
aas
sbb
push
inc
sbb
bound
call
and
push
inc
sbb
call
and
gs
sub
pop
dec
and
pop
inc
pop
call
jmp
sub
call
and
pop
inc
and
pop
dec
and
jmp
jmp
call
and
bound
jmp
xor
gs
sub
bound
call
and
jmp
xor
addr16
sub
fs
sub
pop
dec
daa
jmp
xor
outs
pop
xor
addr16
sub
arpl
call
push
jmp
xor
push
push
sub
pop
dec
sub
jb
jmp
xor
addr16
sub
arpl
call
push
xor
jmp
sub
arpl
call
and
jmp
xor
fs
sub
popa
dec
sub
pop
dec
and
gs
sub
jmp
sub
pop
dec
and
call
and
push
dec
aas
(bad)
mov
loope
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
loope
loope
jmp
dec
mov
out
(bad)
fcmovu
(bad)
rcr
xlat
call
(bad)
call
fcmovnu
dec
into
iret
dec
inc
(bad)
aas
xor
dec
adc
inc
xor
call
sbb
dec
adc
dec
sbb
pop
dec
and
push
inc
sbb
push
ds
dec
push
call
and
pop
dec
and
push
inc
sbb
push
inc
sbb
push
inc
sbb
call
and
pop
inc
push
call
sbb
pop
dec
and
call
and
pop
dec
and
push
inc
and
imul
jmp
and
call
push
xor
push
sub
bound
call
and
push
xor
jmp
call
daa
jmp
xor
jb
xor
jmp
sub
pop
dec
sub
outs
pop
xor
jae
jmp
das
jmp
sub
pop
dec
sub
outs
pop
push
jmp
das
jmp
sub
push
push
jmp
das
jmp
sub
pop
dec
sub
outs
pop
xor
jb
jmp
jmp
sub
pop
dec
jmp
xor
jb
xor
jmp
call
jmp
sub
outs
pop
xor
addr16
sub
popa
dec
daa
call
and
push
inc
and
push
dec
aas
(bad)
mov
loope
(bad)
(bad)
fdivrp
(bad)
fdivrp
fcomp
(bad)
loope
loope
jmp
dec
mov
out
(bad)
fcmovnu
fdivr
rcr
fcos
rcr
(bad)
aad
fdivr
retf
dec
inc
(bad)
aas
xor
dec
adc
inc
xor
push
call
sbb
dec
cmp
adc
push
inc
sbb
pop
dec
and
push
inc
sbb
push
ds
dec
call
and
pop
dec
and
push
inc
sbb
push
inc
sbb
push
inc
pop
jmp
sub
pop
dec
and
pop
inc
pop
call
sbb
jmp
sub
pop
dec
and
pop
dec
and
push
inc
and
push
das
jmp
sub
popa
dec
call
call
push
xor
push
push
sub
pop
dec
daa
jmp
sub
jb
jmp
jmp
sub
pop
dec
sub
imul
jmp
xor
addr16
sub
jmp
push
cmp
ins
pop
xor
push
dec
sub
outs
pop
xor
jmp
jmp
jmp
sub
ins
pop
xor
jmp
jmp
das
call
sub
imul
jbe
cmp
imul
addr16
sub
jmp
sub
jmp
das
jmp
sub
pop
dec
sub
pop
dec
daa
push
xor
jmp
sub
pop
dec
daa
call
sbb
(bad)
mov
loop
(bad)
(bad)
fdivrp
(bad)
fdivrp
fcomp
fdivr
loop
loop
jmp
dec
mov
out
(bad)
fcmovnu
fdivr
rcr
fcos
rcr
(bad)
aad
fdivr
retf
dec
inc
inc
push
dec
adc
inc
aaa
adc
pop
inc
pop
call
dec
adc
dec
cmp
push
inc
sbb
pop
dec
and
push
inc
sbb
push
aas
sbb
dec
cmp
and
call
sbb
push
inc
sbb
push
inc
and
gs
sub
pop
dec
and
pop
dec
and
push
inc
push
jmp
sub
push
dec
and
call
and
ins
pop
xor
imul
call
and
push
jmp
jmp
sub
pop
dec
sub
bound
push
cmp
imul
addr16
sub
jmp
xor
jbe
cmp
ins
pop
xor
imul
jmp
xor
ja
cmp
ins
pop
xor
push
xor
bound
jmp
xor
js
cmp
outs
pop
xor
push
xor
bound
jmp
xor
js
cmp
jmp
xor
bound
jmp
xor
js
cmp
outs
pop
xor
imul
jmp
sub
jbe
cmp
outs
pop
xor
addr16
sub
call
daa
jmp
xor
jmp
sub
popa
push
sub
push
inc
and
inc
inc
cmp
mov
loop
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fdivr
loop
loop
jmp
dec
mov
lock
fcmovnu
fdivr
rcr
fcos
aam
(bad)
(bad)
(bad)
dec
into
iret
dec
inc
inc
or
dec
adc
call
sbb
dec
ds
call
push
call
and
push
inc
sbb
push
inc
sbb
dec
aas
sbb
popa
dec
call
and
pop
inc
push
call
sbb
push
dec
and
addr16
sub
pop
dec
and
pop
dec
and
push
inc
pop
jmp
sub
imul
call
and
pop
inc
and
ins
pop
xor
imul
fs
sub
pop
dec
daa
call
sub
jae
jmp
xor
push
sub
popa
dec
sub
bound
push
cmp
outs
pop
xor
imul
jmp
xor
ja
cmp
outs
pop
xor
jmp
jmp
xor
jp
push
xor
jmp
jmp
xor
jns
push
aaa
jmp
xor
push
das
jmp
xor
jns
push
aaa
jmp
jmp
das
jmp
cs
jns
cmp
jmp
xor
push
dec
sub
je
cmp
jb
jmp
das
jmp
sub
pop
dec
sub
push
xor
jae
jmp
sub
call
and
dec
inc
cmp
mov
loop
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fdivr
loop
jecxz
jmp
jmp
inc
inc
inc
dec
mov
lock
fcmovnu
fdivr
rcr
fcos
aam
(bad)
(bad)
fstp
dec
iret
sar
dec
dec
inc
inc
or
dec
call
pop
call
sbb
push
ds
dec
adc
call
and
push
inc
sbb
push
inc
sbb
push
inc
sbb
fs
daa
call
and
pop
inc
push
call
sbb
pop
dec
and
push
dec
and
pop
dec
and
push
inc
and
fs
sub
push
jmp
daa
call
and
jmp
xor
ins
pop
xor
fs
sub
pusha
dec
sub
pop
dec
sub
jne
aaa
jmp
jmp
sub
jmp
sub
push
xor
imul
fs
sub
(bad)
js
cmp
jmp
xor
push
jmp
xor
jl
inc
push
aaa
jmp
xor
addr16
xor
addr16
xor
jl
aas
push
cmp
outs
pop
xor
imul
(bad)
jnp
aas
push
cmp
outs
pop
xor
imul
(bad)
js
cmp
jmp
xor
push
xor
pusha
dec
sub
outs
pop
aaa
push
cmp
ins
pop
xor
push
push
sub
fs
push
cmp
imul
push
sub
pop
dec
and
dec
inc
cmp
mov
loop
(bad)
fcmovnu
loopne
fcmovnu
loopne
fcmovu
(bad)
loop
jecxz
jmp
jmp
inc
inc
inc
dec
mov
icebp
(bad)
(bad)
(bad)
aam
fcos
aad
(bad)
xlat
fstp
dec
iret
sar
dec
dec
inc
inc
or
call
sbb
pop
dec
pop
call
sbb
push
ds
dec
push
call
call
and
push
inc
sbb
push
inc
sbb
push
inc
sbb
call
and
pop
dec
pop
call
call
jmp
sub
call
and
push
inc
and
gs
sub
jmp
sub
pop
dec
daa
call
push
xor
ins
pop
xor
push
sub
bound
call
sub
jbe
cmp
outs
pop
xor
push
das
jmp
sub
push
cmp
jno
jmp
jmp
das
jmp
xor
jnp
aas
push
jmp
xor
imul
(bad)
jge
inc
push
cmp
jo
xor
jmp
xor
jl
inc
push
cmp
jno
jmp
jmp
xor
jp
inc
(bad)
js
cmp
jmp
jmp
push
cmp
jns
cmp
jmp
jmp
sub
(bad)
jns
cmp
jmp
xor
gs
sub
push
cmp
outs
pop
xor
imul
dec
cmp
mov
jecxz
(bad)
fcmovnu
loopne
fcmovnu
loopne
fcmovu
(bad)
jecxz
in
jmp
in
inc
dec
mov
icebp
(bad)
(bad)
(bad)
aam
fcos
aad
(bad)
xlat
fstp
dec
iret
sar
dec
dec
inc
inc
or
call
sbb
pop
dec
pop
call
sbb
push
ds
dec
call
and
pop
dec
and
push
inc
sbb
push
inc
sbb
push
inc
pop
jmp
sub
pop
dec
and
pop
dec
and
push
inc
push
call
daa
jmp
sub
call
and
push
inc
and
addr16
das
jmp
jmp
jmp
daa
call
push
xor
jmp
sub
call
sub
jbe
cmp
jo
xor
jmp
jmp
das
(bad)
jns
push
jmp
xor
push
push
xor
jl
inc
push
cmp
jo
xor
jmp
xor
jle
inc
(bad)
js
cmp
jmp
xor
(bad)
jl
inc
(bad)
jp
aas
push
cmp
outs
pop
jmp
xor
jns
aas
(bad)
jl
inc
push
cmp
outs
pop
jmp
xor
jno
cmp
jl
inc
push
cmp
outs
pop
xor
push
xor
push
xor
jl
inc
push
aaa
jmp
jmp
das
call
sub
jb
cmp
jae
aaa
jmp
xor
pusha
dec
daa
dec
cmp
mov
jecxz
(bad)
fcmovnu
loopne
fsub
loope
fcmovnu
fdivrp
in
jecxz
jmp
in
inc
dec
mov
icebp
(bad)
(bad)
fdivrp
aad
(bad)
(bad)
(bad)
(bad)
fcomp
fdivrp
retf
iret
sar
dec
dec
inc
inc
or
dec
cmp
call
push
call
call
sbb
push
ds
dec
sbb
popa
dec
call
call
sbb
push
inc
sbb
push
inc
and
push
sub
pop
dec
and
pop
dec
and
push
inc
push
jmp
sub
imul
call
and
jmp
xor
ins
pop
xor
gs
sub
popa
dec
sub
pop
dec
sub
jb
aaa
push
xor
imul
jmp
sub
ja
cmp
jb
aaa
jmp
jmp
xor
fs
xor
jp
aas
push
cmp
jo
xor
jmp
xor
jge
inc
(bad)
jp
push
aaa
jmp
xor
(bad)
jge
inc
(bad)
jnp
aas
push
push
aaa
jmp
xor
jnp
inc
(bad)
jle
inc
push
cmp
jno
cmp
addr16
xor
jne
cmp
push
cmp
jno
aaa
jmp
xor
outs
pop
cmp
sub
jbe
cmp
jo
jmp
xor
fs
xor
jp
aas
push
cmp
outs
pop
xor
imul
popa
push
sub
outs
pop
push
cmp
ins
pop
xor
arpl
dec
cmp
mov
in
(bad)
fsub
loope
fsub
loope
fcmovnu
(bad)
in
jecxz
jmp
in
inc
dec
mov
repnz
fsubp
(bad)
(bad)
fcmovnu
call
(bad)
(bad)
(bad)
fdivrp
retf
iret
sar
dec
dec
inc
inc
or
call
and
pop
dec
push
call
sbb
dec
ds
dec
aas
sbb
bound
call
call
sbb
call
and
addr16
sub
pop
dec
and
pop
dec
and
push
inc
pop
jmp
sub
push
jmp
daa
call
call
and
imul
ins
pop
xor
push
sub
arpl
call
sub
jae
cmp
jno
xor
jmp
jmp
sub
push
cmp
outs
pop
xor
push
xor
gs
xor
jp
inc
(bad)
js
cmp
jno
aaa
jmp
xor
(bad)
jge
inc
(bad)
jl
inc
push
cmp
jno
cmp
push
push
(bad)
jle
inc
push
cmp
jae
cmp
imul
inc
data16
jae
cmp
push
xor
jb
cmp
xor
js
cmp
je
cmp
ins
pop
xor
inc
push
cmp
ins
pop
xor
push
cmp
push
jmp
xor
gs
jmp
xor
jp
push
jmp
sub
dec
inc
cmp
mov
in
(bad)
fsub
loope
fsub
loop
(bad)
loopne
in
in
in
in
in
inc
dec
mov
repz
fsubp
(bad)
(bad)
fcmovnu
call
(bad)
(bad)
(bad)
(bad)
retf
rcl
dec
inc
inc
or
call
call
push
call
dec
sbb
push
inc
sbb
call
call
sbb
call
jmp
sub
pop
dec
and
pop
dec
and
push
inc
and
fs
sub
imul
arpl
jmp
daa
call
and
jmp
xor
addr16
sub
fs
sub
pop
dec
sub
je
cmp
jb
jmp
xor
addr16
das
jmp
sub
push
cmp
outs
pop
xor
ins
pop
xor
gs
xor
jnp
inc
(bad)
jp
aas
push
cmp
outs
pop
jmp
xor
jge
inc
(bad)
jg
inc
push
cmp
jb
cmp
imul
inc
cmp
bound
jmp
xor
inc
aas
push
cmp
ins
pop
aaa
jmp
cmp
xor
jnp
inc
push
cmp
jo
cmp
addr16
xor
jg
inc
(bad)
jle
inc
push
cmp
jo
aaa
jmp
xor
jb
cmp
jle
inc
push
jmp
xor
jmp
xor
jnp
aas
push
jmp
sub
(bad)
mov
in
(bad)
fucom
loop
fucom
loop
(bad)
loopne
in
in
in
in
in
inc
dec
mov
repz
fnstsw
(bad)
xlat
(bad)
(bad)
fcomp
(bad)
fcmovu
(bad)
int3
rcl
dec
inc
inc
or
call
and
pop
inc
push
call
dec
sbb
push
inc
pop
jmp
daa
call
and
pop
inc
push
call
sbb
pop
dec
sub
addr16
sub
pop
dec
and
pop
dec
and
push
inc
and
addr16
jmp
das
jmp
jmp
sub
pop
dec
jmp
xor
outs
pop
xor
push
push
sub
pusha
dec
sub
jbe
cmp
jae
cmp
ins
pop
xor
imul
(bad)
jns
aas
push
cmp
jo
jmp
xor
push
xor
jnp
inc
(bad)
jl
inc
push
push
cmp
addr16
xor
jge
inc
inc
cmp
bound
jmp
ss
jns
inc
inc
aas
push
cmp
push
inc
imul
cmp
pusha
cmp
ins
pop
cmp
test
(bad)
jg
inc
(bad)
js
cmp
jmp
xor
jge
inc
inc
gs
jae
cmp
push
xor
inc
data16
jno
jmp
jmp
das
push
cmp
jmp
das
dec
cmp
mov
in
(bad)
fucom
loop
fucom
loop
(bad)
loopne
in
in
out
in
in
inc
dec
mov
repz
fnstsw
loopne
xlat
fcmovnu
(bad)
fcomp
(bad)
fcmovnu
loopne
int3
rcl
dec
inc
inc
or
call
and
pop
inc
sbb
dec
sbb
push
inc
and
fs
daa
call
call
pop
call
sbb
jmp
sub
pusha
dec
and
call
and
imul
jmp
jmp
sub
pop
dec
jmp
xor
jo
xor
imul
jmp
sub
jbe
cmp
je
cmp
ins
pop
xor
push
xor
arpl
jp
inc
(bad)
js
cmp
jmp
xor
(bad)
jl
inc
(bad)
jg
inc
push
cmp
jb
cmp
imul
inc
push
cmp
(bad)
js
inc
inc
imul
push
cmp
jno
cmp
mov
(bad)
jg
inc
(bad)
jp
push
jmp
cmp
xor
xor
jp
aas
push
cmp
(bad)
js
inc
inc
push
cmp
outs
pop
aaa
jmp
xor
(bad)
jp
aas
push
cmp
outs
pop
jmp
xor
jno
cmp
jl
aas
jmp
dec
(bad)
mov
in
(bad)
fsubp
jecxz
fsubp
jecxz
fstp
loope
out
in
out
out
out
inc
inc
dec
mov
repz
loopne
(bad)
fcomp
fdivr
(bad)
fdivrp
fcmovnu
loopne
int3
iret
sar
dec
dec
inc
inc
or
jmp
and
pop
inc
sbb
dec
sbb
pop
dec
and
fs
daa
call
call
pop
call
push
jmp
jmp
sub
pusha
dec
call
and
push
inc
and
push
xor
ins
pop
xor
gs
sub
bound
call
push
push
xor
jmp
jmp
sub
push
cmp
outs
pop
xor
imul
fs
xor
jnp
inc
(bad)
jp
aas
push
cmp
jo
aaa
jmp
xor
jl
inc
inc
cmp
bound
jmp
ss
jnp
inc
inc
push
(bad)
js
jmp
cmp
jbe
inc
dec
ins
inc
(bad)
jnp
inc
push
push
cmp
mov
inc
push
push
jmp
cmp
xor
(bad)
jl
inc
(bad)
js
jmp
cmp
jae
cmp
(bad)
jle
inc
push
cmp
jno
cmp
push
ins
inc
(bad)
jg
inc
push
cmp
jno
cmp
imul
(bad)
jg
inc
jmp
xor
(bad)
mov
in
(bad)
fsubp
jecxz
fsubp
jecxz
fstp
loope
out
in
out
out
out
inc
inc
dec
mov
hlt
jmp
loope
(bad)
fcomp
fdivr
(bad)
fdivrp
fneni(8087
loopne
int3
rcl
dec
inc
inc
or
jmp
and
pop
inc
sbb
push
inc
sbb
dec
ds
pop
dec
jmp
call
call
and
push
inc
push
jmp
sub
jmp
call
and
jmp
xor
ins
pop
xor
push
sub
bound
call
sub
jae
aaa
push
xor
jmp
das
jmp
sub
push
cmp
jo
xor
jmp
xor
jnp
inc
(bad)
jnp
inc
push
cmp
jno
cmp
push
push
inc
addr16
push
cmp
(bad)
jns
inc
dec
ins
inc
(bad)
jp
aas
push
cmp
jne
aas
dec
jo
(bad)
jl
inc
push
jmp
cmp
mov
inc
imul
push
cmp
jge
inc
dec
ins
inc
(bad)
jp
inc
push
cmp
outs
pop
cmp
xchg
inc
push
cmp
imul
inc
push
cmp
ins
pop
xor
(bad)
jg
inc
push
dec
cmp
mov
out
(bad)
(bad)
in
(bad)
in
fsubp
loop
out
out
out
out
out
inc
inc
dec
lea
cmc
jmp
loop
(bad)
(bad)
(bad)
fcmovu
(bad)
fsub
loope
int
sar
dec
dec
inc
(bad)
aas
xor
call
pop
jmp
and
push
inc
sbb
push
inc
sbb
dec
ds
popa
push
daa
jmp
call
call
pop
call
pop
jmp
jmp
sub
bound
call
and
jmp
xor
outs
pop
xor
push
sub
arpl
call
sub
je
cmp
jb
aaa
jmp
jmp
das
jmp
cs
jp
aas
(bad)
js
cmp
jno
jmp
xor
(bad)
jl
inc
(bad)
jge
inc
push
cmp
jae
cmp
push
ss
jnp
inc
inc
inc
(bad)
js
jmp
cmp
js
inc
dec
outs
inc
(bad)
jl
inc
push
cmp
dec
jb
(bad)
jle
inc
(bad)
jns
inc
push
cmp
xchg
dec
outs
inc
(bad)
jl
inc
push
cmp
jp
inc
dec
inc
(bad)
jl
inc
push
jmp
cmp
xchg
test
(bad)
jnp
inc
push
cmp
push
inc
push
push
cmp
jo
cmp
gs
xor
jnp
inc
(bad)
js
cmp
dec
dec
ds
mov
out
(bad)
(bad)
in
(bad)
in
fsubp
loop
out
out
out
out
out
inc
inc
dec
lea
cmc
jmp
loop
(bad)
(bad)
(bad)
fcmovu
(bad)
fsub
loope
int
sar
dec
dec
inc
(bad)
aas
xor
call
and
pop
dec
and
push
inc
sbb
push
inc
sbb
push
inc
sbb
arpl
jmp
call
call
and
push
inc
and
push
das
jmp
sub
bound
call
call
and
jmp
jmp
sub
arpl
call
sub
je
cmp
jb
aaa
jmp
jmp
xor
arpl
(bad)
jp
aas
(bad)
jns
cmp
jmp
xor
(bad)
jnp
inc
(bad)
jle
inc
push
cmp
je
cmp
push
xor
inc
push
(bad)
jns
aas
push
cmp
jne
aas
dec
outs
inc
(bad)
jge
inc
push
aas
push
dec
je
(bad)
jg
inc
(bad)
jnp
inc
push
cmp
xor
mov
inc
imul
arpl
push
inc
dec
jb
(bad)
jge
inc
(bad)
jns
inc
jmp
cmp
xor
xchg
(bad)
jle
inc
(bad)
jns
aas
push
cmp
outs
pop
cmp
test
jg
inc
push
cmp
jb
cmp
addr16
xor
jne
ds
jnp
notrack
ds
mov
out
jmp
jecxz
jmp
jecxz
(bad)
(bad)
jecxz
out
out
out
lock
inc
inc
dec
lea
idiv
loope
loop
(bad)
fdivrp
fcmovnu
loopne
fucom
loop
int
sar
dec
inc
inc
inc
ud0
and
pop
dec
and
push
inc
sbb
push
inc
sbb
push
inc
sbb
fs
sub
pusha
dec
and
pop
dec
pop
call
push
call
and
push
jmp
sub
popa
dec
and
call
and
jmp
jmp
sub
fs
sub
pusha
dec
sub
jne
cmp
jae
cmp
outs
pop
xor
push
xor
fs
xor
jge
inc
(bad)
jnp
inc
push
push
cmp
push
ss
jle
inc
inc
push
aas
jmp
cmp
jl
inc
dec
outs
inc
(bad)
jl
inc
push
push
inc
dec
je
inc
push
push
dec
js
inc
ins
inc
push
inc
inc
jnp
inc
inc
(bad)
js
inc
push
aas
dec
je
inc
imul
jl
inc
dec
ins
inc
(bad)
jp
push
cmp
ins
pop
aaa
inc
jo
(bad)
jns
push
jmp
xor
outs
pop
cmp
jnp
inc
call
aas
(bad)
mov
out
jmp
jecxz
jmp
jecxz
(bad)
(bad)
jecxz
call
lock
inc
dec
lea
idiv
loope
loop
(bad)
fdivrp
fcmovnu
loopne
fucom
loop
int3
iret
sar
dec
inc
inc
inc
ud0
and
call
push
call
pop
call
and
push
xor
push
sub
jmp
sub
bound
push
push
cmp
outs
pop
cmp
ins
pop
cmp
push
cmp
xor
jl
inc
(bad)
js
inc
push
inc
push
inc
inc
je
(bad)
jg
dec
(bad)
jl
dec
(bad)
js
dec
dec
jnp
inc
jae
(bad)
jl
dec
dec
sbb
jnp
dec
jb
dec
mov
sbb
xchg
inc
mov
xchg
xchg
xchg
sbb
test
call
mov
xchg
sbb
sbb
js
dec
lea
xchg
test
nop
jg
dec
jae
call
xchg
lea
dec
jo
inc
test
jns
inc
dec
push
inc
inc
dec
(bad)
jle
inc
(bad)
js
inc
push
cmp
imul
jnp
inc
call
aas
(bad)
mov
out
jmp
jecxz
jmp
jecxz
(bad)
(bad)
in
call
lock
inc
inc
dec
mov
idiv
loop
loop
fcmovu
(bad)
fucom
loope
loopne
in
rcl
aad
pop
pop
push
call
sub
jbe
inc
push
push
cmp
push
inc
inc
ins
dec
(bad)
jns
dec
push
dec
push
dec
dec
je
(bad)
jg
dec
(bad)
jnp
dec
(bad)
jnp
push
dec
jns
inc
push
(bad)
jle
push
call
jle
dec
ja
inc
xchg
test
mov
dec
jbe
call
push
call
jnp
call
xchg
outs
call
xchg
and
mov
(bad)
ins
call
xchg
mov
call
xchg
jb
fwait
lea
cwde
mov
xchg
and
jmp
call
mov
xchg
xchg
lea
call
xchg
jno
fwait
mov
xchg
mov
nop
and
jg
jmp
lea
xchg
xchg
xchg
and
jp
call
lea
xchg
test
lea
inc
outs
push
dec
pusha
push
(bad)
mov
jmp
out
loop
out
loopne
in
call
lock
inc
dec
lea
idiv
out
out
loope
in
loop
out
in
jmp
jmp
jmp
inc
inc
ins
dec
(bad)
js
dec
push
(bad)
js
dec
inc
jo
(bad)
jge
dec
push
dec
(bad)
jnp
push
dec
jne
inc
outs
push
(bad)
jge
push
call
jnp
inc
jne
inc
test
pop
pop
dec
jbe
call
xchg
nop
and
jg
inc
mov
pushf
lea
xchg
xchg
xchg
test
jg
call
xchg
jno
call
call
and
xchg
jno
fwait
lea
mov
nop
and
(bad)
jo
cmps
xchg
jbe
lahf
nop
outs
call
xchg
xchg
xchg
cmps
cwde
ja
mov
mov
cdq
mov
nop
and
mov
movs
xchg
jne
popf
(bad)
outs
call
xchg
lea
jb
lahf
xchg
outs
call
xchg
mov
jmp
mov
xchg
xchg
xchg
and
jnp
dec
jo
inc
enter
in
out
jmp
jmp
jmp
in
jmp
push
icebp
icebp
inc
inc
dec
lea
stc
(bad)
jmp
out
jmp
out
jmp
jmp
fdivr
outs
ins
push
inc
outs
dec
(bad)
jnp
dec
push
dec
(bad)
jge
push
dec
jae
inc
ins
dec
inc
jg
inc
jbe
(bad)
jg
push
inc
test
mov
dec
js
inc
call
dec
jle
inc
mov
mov
xchg
xchg
xchg
and
jge
call
xchg
jo
call
call
mov
cmps
cwde
jne
sahf
nop
jo
fwait
lea
mov
xchg
test
movs
xchg
ja
movs
xchg
jbe
lahf
xchg
jno
pushf
mov
xchg
xchg
popf
xchg
jb
test
xchg
je
lahf
xchg
jno
call
jmp
cdq
js
mov
(bad)
jo
xchg
xchg
pushf
lea
test
xchg
jae
popf
(bad)
outs
call
test
mov
xchg
jne
pushf
(bad)
outs
call
test
mov
jae
sahf
nop
outs
call
xchg
lea
dec
je
inc
leave
retf
out
lock
call
jmp
out
out
out
push
repz
inc
dec
lea
cli
(bad)
jmp
jmp
out
jmp
jmp
jno
imul
push
pop
inc
jo
(bad)
js
push
inc
jl
inc
push
(bad)
jge
push
inc
and
jnp
inc
jne
inc
mov
pop
pop
dec
jl
call
xchg
xchg
test
and
popf
mov
fwait
mov
xchg
mov
xchg
xchg
lea
jo
mov
mov
call
call
fwait
jp
mov
nop
jo
fwait
mov
xchg
xchg
cwde
jns
test
xchg
jne
lahf
xchg
jae
cwde
mov
sahf
xchg
je
lods
lahf
jg
cmps
cwde
jns
mov
xchg
jb
cwde
mov
test
popf
jl
mov
xchg
je
call
jmp
js
mov
(bad)
jno
xchg
xchg
lahf
xchg
je
test
xchg
je
popf
(bad)
jo
cwde
mov
sub
xchg
je
mov
mov
xchg
mov
xchg
test
mov
push
imul
retf
in
out
lock
call
jmp
out
out
out
push
repz
inc
dec
mov
sti
(bad)
jmp
jmp
call
in
(bad)
fcmovu
(bad)
jne
outs
(bad)
jp
push
dec
jne
inc
outs
push
dec
jg
inc
js
inc
jge
call
jle
dec
jns
dec
mov
xchg
test
pop
(bad)
dec
outs
call
xchg
xchg
test
lea
jae
sahf
xchg
jae
call
call
xchg
jae
cmps
xchg
js
lahf
xchg
jae
popf
(bad)
jo
xchg
mov
xchg
mov
lods
sahf
jle
movs
xchg
jns
mov
xchg
jae
cwde
mov
cmps
call
movs
cwde
jns
mov
(bad)
jae
mov
mov
jge
movs
cwde
jns
mov
lea
stos
sahf
jg
scas
mov
jnp
movs
xchg
jns
lahf
xchg
jne
pushf
mov
lods
mov
jle
movs
xchg
js
mov
lea
popf
xchg
je
lods
lahf
jg
movs
cwde
jns
mov
(bad)
jno
xchg
xchg
sahf
xchg
je
cmps
call
fwait
mov
xchg
mov
mov
push
imul
out
out
icebp
(bad)
jmp
(bad)
jmp
lock
push
repz
inc
dec
mov
cli
(bad)
jmp
jmp
out
jmp
(bad)
jmp
(bad)
(bad)
js
jae
xor
jle
inc
ja
(bad)
jg
pop
dec
and
jge
dec
ja
dec
xchg
pop
arpl
mov
pop
outs
call
xchg
pop
push
call
mov
xchg
nop
test
mov
xchg
jbe
popf
(bad)
jb
fwait
mov
xchg
mov
mov
fwait
jl
mov
xchg
jne
fwait
mov
call
jmp
xchg
jns
mov
mov
pushf
jg
scas
mov
jle
cmps
cdq
jnp
mov
xchg
jp
mov
xchg
scas
mov
jle
cmps
cdq
jl
sahf
xchg
ja
stos
sahf
cmp
movs
xchg
stos
sahf
jg
test
jge
mov
nop
jbe
scas
mov
cmp
call
lahf
xchg
jbe
popf
nop
jne
scas
mov
jle
mov
xchg
jbe
cdq
lea
pushf
nop
jne
stos
popf
jle
movs
xchg
jns
lahf
xchg
je
fwait
mov
xchg
test
jns
outs
dec
int
(bad)
in
lock
(bad)
jmp
(bad)
jmp
push
hlt
hlt
inc
inc
dec
mov
sti
(bad)
in
in
in
jmp
call
jmp
jmp
fstp
(bad)
jl
ja
test
dec
jl
inc
jbe
call
test
mov
dec
jnp
call
mov
xchg
test
nop
and
jle
call
nop
jb
xchg
mov
xchg
mov
xchg
test
xchg
xchg
xchg
ja
popf
xchg
jae
call
call
cwde
jnp
movs
xchg
jp
lahf
xchg
jbe
sahf
xchg
jne
xchg
mov
mov
sahf
cmp
cwde
jnp
mov
xchg
jbe
pushf
nop
ja
scas
mov
cmp
movs
cwde
jl
lahf
xchg
js
test
cmps
mov
lods
mov
cmp
cwde
jge
mov
cmps
mov
mov
xchg
lods
lahf
cmp
pushf
cmp
test
test
test
stos
sahf
cmp
fwait
jg
lahf
xchg
js
scas
mov
xchg
stos
sahf
cmp
mov
xchg
ja
scas
mov
cmp
call
sahf
xchg
ja
fwait
(bad)
jbe
lods
mov
jle
mov
xchg
jbe
xchg
mov
jge
jb
int3
into
into
(bad)
out
lock
(bad)
in
in
out
(bad)
in
in
out
(bad)
jmp
push
cmc
cmc
inc
inc
dec
mov
sti
(bad)
in
in
in
(bad)
call
jmp
(bad)
jmp
out
(bad)
fstp
loopne
add
call
jle
dec
jnp
call
xchg
nop
and
and
xchg
mov
call
call
sub
mov
mov
mov
cdq
mov
xchg
mov
xchg
mov
movs
cwde
jl
mov
nop
jne
call
jmp
fwait
jle
mov
xchg
jns
call
jmp
fwait
jg
cmps
cdq
jge
mov
xchg
jp
mov
mov
scas
mov
cmp
mov
lahf
test
mov
mov
scas
mov
test
test
cmp
cwde
cmp
test
(bad)
jmp
mov
cmp
sahf
xchg
mov
cmps
mov
scas
mov
test
mov
mov
mov
scas
mov
cmp
fwait
jg
mov
mov
mov
stos
sahf
cmp
mov
nop
js
lods
mov
cmp
cdq
jge
mov
mov
jge
dec
into
sar
out
lock
in
in
out
(bad)
in
in
out
(bad)
jmp
in
push
icebp
icebp
push
cmc
cmc
inc
inc
dec
mov
std
(bad)
out
out
out
(bad)
call
jmp
(bad)
jmp
out
(bad)
fsubp
loope
xchg
call
and
and
and
mov
xchg
mov
xchg
xchg
xchg
test
mov
jae
pushf
(bad)
jae
xchg
mov
xchg
mov
xchg
xchg
fwait
(bad)
jbe
mov
xchg
jne
pushf
(bad)
je
xchg
mov
cdq
mov
test
jg
movs
xchg
jnp
mov
xchg
ja
call
jmp
cdq
jge
movs
cwde
jl
sahf
xchg
jp
cmps
pushf
cmp
movs
mov
stos
lahf
cmp
popf
cmp
mov
test
push
mov
test
movs
cdq
cmp
mov
cmps
mov
mov
mov
lods
mov
test
mov
xchg
push
cmps
(bad)
jmp
sahf
xchg
test
scas
xchg
push
mov
scas
mov
cmp
mov
xchg
push
mov
test
movs
xchg
jg
scas
mov
(bad)
jmp
sahf
cmp
call
stos
lahf
test
mov
xchg
test
call
test
sar
lock
repz
in
out
lock
in
out
lock
in
in
out
push
repnz
cmc
cmc
inc
inc
dec
mov
std
(bad)
out
out
out
(bad)
jmp
(bad)
in
out
lock
(bad)
loop
mov
imul
mov
xchg
test
mov
ins
call
jno
xchg
mov
xchg
mov
nop
test
mov
xchg
ja
call
call
jp
movs
cdq
jge
mov
xchg
js
call
jmp
call
lahf
xchg
jnp
popf
xchg
jp
scas
mov
test
test
cmp
mov
sahf
test
mov
mov
scas
mov
test
test
cdq
cmp
mov
mov
mov
mov
scas
mov
test
lods
mov
xchg
push
cmps
(bad)
jmp
popf
mov
mov
xchg
(bad)
mov
test
xchg
jmp
mov
mov
lods
xchg
push
cmps
mov
stos
lahf
mov
lods
mov
xchg
push
movs
mov
scas
mov
test
stos
mov
nop
push
mov
test
mov
sahf
test
mov
mov
lods
mov
cmp
xchg
jl
mov
push
repnz
(bad)
out
out
icebp
(bad)
out
out
icebp
(bad)
in
out
out
push
repz
div
inc
inc
dec
(bad)
(bad)
(bad)
sahf
std
std
std
(bad)
out
out
out
(bad)
jmp
(bad)
in
out
lock
loope
dec
xchg
xchg
mov
xchg
mov
xchg
xchg
xchg
mov
lahf
xchg
jns
fwait
(bad)
jne
cwde
lea
xchg
mov
xchg
mov
mov
xchg
jp
popf
xchg
ja
fwait
nop
js
xchg
lea
mov
fwait
cmp
mov
xchg
jp
mov
mov
cmp
call
mov
movs
mov
scas
mov
test
stos
sahf
test
mov
mov
(bad)
push
mov
xchg
cmps
pushf
test
mov
xchg
(bad)
mov
cmps
(bad)
push
mov
mov
mov
lods
xchg
push
cmps
nop
jmp
stos
xchg
(bad)
mov
lods
xchg
push
xchg
jmp
mov
(bad)
mov
stos
xchg
push
movs
(bad)
jmp
cwde
(bad)
mov
test
mov
lods
mov
mov
mov
stos
(bad)
push
mov
test
test
test
mov
(bad)
push
mov
cmp
rcl
aam
repnz
(bad)
out
lock
(bad)
out
lock
(bad)
out
out
lock
repz
div
inc
inc
dec
(bad)
(bad)
(bad)
sahf
(bad)
(bad)
std
push
lock
(bad)
jmp
out
(bad)
in
out
out
(bad)
out
lock
jmp
jecxz
dec
mov
call
call
ja
mov
xchg
jns
fwait
nop
ja
cdq
mov
cwde
mov
cmps
pushf
cmp
mov
xchg
jnp
call
jmp
cdq
cmp
cdq
cmp
xchg
jle
mov
movs
mov
stos
mov
test
cmps
fwait
cmp
cwde
cmp
cmps
(bad)
push
mov
mov
cmps
fwait
test
lods
mov
xchg
push
cmps
mov
scas
mov
mov
mov
scas
xchg
push
stos
(bad)
push
movs
mov
mov
mov
push
stos
xchg
jmp
lods
cdq
(bad)
mov
mov
push
stos
xchg
jmp
mov
(bad)
mov
scas
call
cmps
xchg
jmp
mov
(bad)
mov
lods
xchg
push
mov
lods
mov
xchg
(bad)
mov
test
push
mov
mov
mov
xchg
push
movs
mov
test
mov
push
repz
(bad)
out
lock
out
lock
out
out
lock
hlt
hlt
push
div
inc
inc
dec
(bad)
nop
nop
sahf
(bad)
(bad)
(bad)
push
icebp
lock
in
out
out
(bad)
in
out
lock
out
icebp
bnd
in
call
lea
pushf
xchg
js
call
call
cdq
cmp
xchg
jl
sahf
xchg
jnp
fwait
xchg
jnp
fwait
xchg
jl
stos
lahf
test
cmps
fwait
cmp
xchg
jg
mov
xchg
jge
test
mov
test
cmps
pushf
test
mov
popf
xchg
mov
(bad)
jmp
mov
xchg
cmps
fwait
xchg
mov
nop
push
mov
scas
movs
mov
test
cmps
(bad)
(bad)
mov
stos
xchg
push
(bad)
jmp
xchg
(bad)
mov
lods
xchg
push
test
push
mov
(bad)
mov
scas
cdq
push
test
push
mov
mov
push
cmps
xchg
(bad)
mov
mov
(bad)
mov
scas
fwait
push
xchg
(bad)
mov
mov
(bad)
mov
lods
xchg
push
mov
mov
mov
push
test
mov
test
lods
xchg
(bad)
mov
test
mov
xchg
nop
mov
aam
(bad)
push
hlt
cmc
push
icebp
repnz
icebp
repz
lock
push
hlt
hlt
push
div
inc
inc
dec
(bad)
nop
nop
sahf
(bad)
(bad)
(bad)
push
icebp
icebp
(bad)
in
out
lock
out
out
icebp
(bad)
out
icebp
repz
in
call
nop
jp
lahf
xchg
jl
popf
xchg
jnp
cdq
nop
jp
mov
pushf
test
mov
xchg
jg
sahf
xchg
jle
mov
mov
test
movs
call
mov
mov
mov
stos
lahf
mov
test
call
mov
xchg
push
mov
mov
test
mov
mov
xchg
push
test
push
mov
xchg
(bad)
mov
scas
xchg
push
stos
xchg
jmp
mov
(bad)
mov
mov
(bad)
mov
stos
xchg
push
mov
mov
(bad)
mov
stos
call
mov
movs
(bad)
mov
mov
push
mov
inc
mov
mov
push
test
(bad)
mov
mov
pushf
(bad)
mov
lods
xchg
push
scas
cdq
(bad)
mov
mov
push
test
mov
mov
xchg
(bad)
mov
lods
xchg
jmp
xchg
mov
aad
xlat
push
hlt
idiv
icebp
icebp
repz
icebp
repz
lock
cmc
cmc
push
clc
clc
inc
inc
dec
(bad)
nop
nop
sahf
(bad)
(bad)
(bad)
push
repnz
out
out
icebp
(bad)
out
lock
push
bnd
in
call
xchg
jle
mov
xchg
cmp
xchg
jg
cmps
pushf
xchg
test
fwait
test
movs
call
mov
movs
(bad)
jmp
sahf
xchg
cmps
pushf
xchg
movs
call
mov
(bad)
jmp
mov
mov
scas
movs
(bad)
push
test
(bad)
jmp
mov
cwde
(bad)
mov
stos
xchg
push
xchg
push
popf
(bad)
mov
scas
xchg
push
test
(bad)
mov
mov
pushf
(bad)
mov
scas
cdq
push
mov
movs
(bad)
mov
mov
push
scas
lahf
inc
mov
test
(bad)
mov
scas
lahf
(bad)
mov
mov
cmps
(bad)
mov
mov
push
mov
inc
mov
mov
(bad)
mov
stos
xchg
(bad)
mov
mov
pushf
(bad)
mov
lods
xchg
push
stos
xchg
(bad)
mov
scas
cwde
push
xchg
nop
call
fcomp
push
cmc
idiv
repnz
push
repnz
push
icebp
repz
div
push
clc
clc
inc
inc
dec
(bad)
nop
nop
sahf
(bad)
(bad)
(bad)
push
repnz
out
lock
(bad)
out
lock
repnz
jmp
out
call
cmp
fwait
test
mov
xchg
test
stos
mov
mov
cmps
sahf
xchg
cmps
popf
xchg
mov
lahf
mov
mov
nop
jmp
mov
mov
cmps
sahf
mov
mov
xchg
push
cmps
(bad)
jmp
mov
xchg
(bad)
mov
stos
xchg
push
cmps
xchg
jmp
mov
(bad)
mov
lods
xchg
push
test
push
mov
popf
(bad)
mov
mov
push
lahf
inc
mov
mov
(bad)
mov
lods
call
mov
movs
(bad)
mov
mov
push
mov
lods
(bad)
mov
mov
(bad)
mov
mov
inc
shr
sar
(bad)
mov
mov
inc
mov
movs
(bad)
mov
mov
(bad)
mov
scas
call
mov
(bad)
mov
mov
push
test
lahf
(bad)
mov
lods
xchg
call
(bad)
push
div
push
repz
push
repz
push
icebp
repz
div
push
clc
clc
inc
inc
dec
nop
nop
nop
sahf
(bad)
(bad)
(bad)
push
repz
out
icebp
repnz
icebp
repnz
repnz
jmp
out
call
call
cmps
pushf
mov
mov
movs
(bad)
jmp
mov
mov
cmps
popf
mov
lods
movs
(bad)
push
nop
jmp
mov
mov
mov
xchg
push
test
push
movs
nop
push
mov
(bad)
mov
lods
xchg
push
test
(bad)
mov
mov
(bad)
mov
mov
push
pushf
inc
mov
mov
(bad)
mov
scas
call
mov
mov
(bad)
mov
mov
inc
mov
stos
inc
mov
cmps
(bad)
mov
mov
inc
mov
scas
inc
mov
stos
(bad)
mov
mov
inc
shl
ret
inc
mov
mov
dec
mov
cmps
inc
mov
mov
(bad)
mov
mov
movs
(bad)
mov
mov
(bad)
mov
stos
cwde
inc
mov
inc
mov
cdq
jmp
fcmovu
push
idiv
push
repz
push
repz
push
repnz
div
(bad)
stc
stc
stc
inc
inc
dec
nop
nop
nop
sahf
(bad)
(bad)
(bad)
push
repz
push
icebp
repz
repnz
repz
jmp
out
jmp
popf
mov
stos
mov
mov
cmps
lahf
mov
mov
xchg
push
movs
(bad)
jmp
mov
mov
xchg
push
test
xchg
jmp
movs
xchg
(bad)
mov
scas
call
stos
xchg
jmp
scas
fwait
(bad)
mov
mov
(bad)
mov
lods
call
mov
(bad)
mov
mov
(bad)
mov
scas
pushf
(bad)
mov
mov
movs
(bad)
mov
mov
(bad)
mov
mov
stos
inc
mov
movs
inc
mov
(bad)
mov
mov
scas
inc
mov
test
(bad)
mov
shl
les
lods
(bad)
mov
mov
dec
shl
les
test
mov
mov
dec
shr
mov
movs
(bad)
mov
mov
inc
mov
test
ret
(bad)
mov
mov
push
mov
inc
mov
sahf
jmp
fcmovnu
push
idiv
push
hlt
idiv
hlt
hlt
idiv
repz
push
div
(bad)
stc
stc
clc
inc
inc
dec
nop
nop
nop
sahf
(bad)
(bad)
(bad)
push
repz
push
icebp
repnz
repnz
repz
jmp
out
jmp
(bad)
jmp
(bad)
jmp
stos
xchg
push
cmps
xchg
jmp
mov
cwde
push
stos
xchg
push
test
jmp
mov
(bad)
mov
lods
cdq
push
test
sahf
(bad)
mov
mov
(bad)
mov
scas
pushf
push
mov
mov
(bad)
mov
mov
(bad)
mov
mov
cmps
inc
mov
mov
inc
mov
lods
inc
mov
cmps
inc
mov
mov
dec
ret
mov
(bad)
mov
stos
inc
mov
cmps
inc
shl
(bad)
mov
lods
inc
mov
test
dec
ret
mov
(bad)
mov
stos
inc
mov
movs
dec
shr
mov
cmps
inc
mov
mov
dec
shr
sar
(bad)
mov
mov
inc
mov
mov
(bad)
fcmovnu
fdivr
div
clc
push
hlt
cmc
push
hlt
cmc
push
repnz
push
div
(bad)
stc
stc
stc
inc
inc
dec
nop
nop
nop
sahf
(bad)
(bad)
(bad)
push
hlt
hlt
push
repnz
repnz
repz
(bad)
call
cmps
movs
jmp
cmps
xchg
jmp
cmps
xchg
push
lods
cwde
push
test
xchg
push
mov
push
scas
cdq
push
lods
fwait
(bad)
mov
mov
(bad)
mov
scas
sahf
push
mov
inc
mov
mov
(bad)
mov
mov
inc
mov
cmps
inc
mov
movs
(bad)
mov
mov
dec
shr
mov
cmps
(bad)
mov
mov
scas
inc
mov
stos
inc
mov
cmps
inc
mov
mov
leave
shr
les
stos
inc
shl
leave
ret
(bad)
mov
scas
inc
mov
mov
int
mov
leave
ret
(bad)
mov
stos
inc
mov
scas
dec
lds
inc
mov
test
inc
mov
scas
inc
mov
cmps
inc
mov
mov
dec
mov
cmps
jmp
fstp
(bad)
clc
idiv
push
hlt
idiv
cmc
hlt
idiv
repz
push
div
(bad)
stc
stc
stc
inc
inc
dec
xchg
xchg
xchg
sahf
(bad)
(bad)
(bad)
push
hlt
cmc
push
repnz
push
repz
push
hlt
cmc
(bad)
jmp
stos
cmps
jmp
stos
xchg
jmp
stos
call
scas
pushf
push
lods
fwait
push
mov
(bad)
mov
mov
(bad)
mov
lods
popf
push
mov
mov
(bad)
mov
scas
lahf
(bad)
mov
mov
movs
(bad)
mov
mov
(bad)
mov
mov
stos
inc
mov
test
mov
mov
dec
ret
(bad)
mov
stos
inc
mov
test
ret
mov
mov
leave
ret
(bad)
mov
lods
inc
mov
scas
dec
(bad)
mov
int3
les
inc
mov
lods
dec
shl
retf
les
mov
lods
dec
shl
int3
les
(bad)
mov
stos
inc
mov
mov
retf
ret
mov
enter
(bad)
mov
test
dec
les
inc
mov
test
(bad)
mov
shr
lods
stos
movs
(bad)
(bad)
(bad)
div
clc
push
cmc
idiv
cmc
cmc
idiv
hlt
hlt
cmc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
inc
inc
dec
xchg
xchg
xchg
sahf
(bad)
(bad)
(bad)
push
cmc
cmc
push
repz
push
hlt
hlt
push
cmc
cmc
(bad)
jmp
push
scas
fwait
push
mov
(bad)
mov
mov
(bad)
mov
scas
sahf
push
mov
inc
mov
(bad)
mov
mov
(bad)
mov
mov
inc
mov
cmps
inc
mov
(bad)
mov
mov
inc
mov
lods
inc
mov
test
sar
dec
shr
(bad)
mov
lods
inc
mov
stos
dec
(bad)
mov
int3
ret
mov
leave
shr
lds
call
leave
mov
into
(bad)
mov
int3
ret
mov
retf
ret
(bad)
mov
mov
ror
mov
dec
lds
mov
mov
aam
mov
dec
(bad)
mov
int3
lds
retf
ret
mov
aam
mov
dec
(bad)
mov
retf
les
dec
shl
ror
mov
int3
les
inc
mov
lods
dec
(bad)
mov
into
(bad)
mov
retf
ret
enter
lds
test
dec
ret
mov
test
(bad)
loopne
clc
idiv
push
cmc
idiv
div
idiv
cmc
hlt
idiv
clc
clc
clc
(bad)
stc
stc
stc
inc
inc
dec
xchg
xchg
xchg
sahf
(bad)
(bad)
(bad)
push
div
push
hlt
cmc
push
hlt
cmc
push
cmc
idiv
jmp
jmp
cmps
call
test
push
stos
popf
jmp
test
jmp
mov
push
stos
sahf
jmp
stos
mov
push
mov
jmp
mov
(bad)
mov
mov
push
scas
mov
(bad)
mov
mov
(bad)
mov
mov
push
mov
(bad)
mov
mov
(bad)
mov
mov
push
mov
(bad)
mov
mov
test
(bad)
mov
mov
inc
mov
lods
(bad)
mov
mov
(bad)
mov
mov
inc
mov
scas
(bad)
mov
mov
(bad)
mov
mov
inc
mov
lods
(bad)
mov
mov
(bad)
mov
mov
inc
mov
stos
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
test
mov
mov
push
mov
(bad)
mov
lods
test
fnstsw
loope
clc
clc
stc
push
div
push
div
push
cmc
idiv
stc
stc
stc
(bad)
cli
cli
cli
inc
inc
dec
xchg
xchg
xchg
sahf
(bad)
(bad)
(bad)
push
div
push
hlt
cmc
push
hlt
idiv
cmc
cmc
idiv
in
in
out
dec
leave
leave
(bad)
mov
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
(bad)
(bad)
(bad)
out
(bad)
clc
clc
stc
push
idiv
push
idiv
push
cmc
idiv
stc
stc
stc
(bad)
stc
cli
stc
inc
inc
dec
xchg
xchg
xchg
sahf
(bad)
(bad)
(bad)
push
div
push
hlt
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
clc
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
div
(bad)
stc
stc
stc
(bad)
cli
cli
cli
inc
inc
dec
(bad)
(bad)
(bad)
popf
(bad)
(bad)
(bad)
push
clc
clc
push
cmc
idiv
div
idiv
div
idiv
div
idiv
idiv
cli
push
stc
cli
push
stc
cli
push
stc
cli
push
stc
cli
push
stc
cli
push
stc
cli
push
clc
stc
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
push
div
(bad)
cli
stc
stc
(bad)
cli
sti
sti
dec
dec
push
mov
(bad)
(bad)
stc
clc
clc
push
cmc
idiv
div
idiv
div
clc
push
cmc
idiv
hlt
out
out
push
in
in
push
out
in
push
out
in
push
out
in
push
in
in
push
in
in
push
repz
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
idiv
(bad)
clc
idiv
push
div
(bad)
cld
cld
cld
push
div
cld
inc
inc
inc
inc
ja
ja
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
push
div
push
cmc
idiv
div
idiv
cmc
jmp
repz
push
ror
push
ror
push
ror
push
ror
push
ror
push
(bad)
push
cmc
cmc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
div
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
in
in
in
hlt
cs
das
xor
add
add
inc
push
cld
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cli
cli
sti
(bad)
cli
sti
sti
(bad)
clc
out
in
push
fcmovbe
push
xlat
into
push
(bad)
into
push
aad
push
(bad)
into
push
xlat
into
push
fmul
push
jecxz
(bad)
cli
clc
clc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
dec
into
into
(bad)
movups
adc
add
add
push
push
or
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
pop
pop
pop
pop
add
dec
dec
pop
add
mov
popf
popf
popf
mov
popf
sahf
lahf
mov
popf
sahf
lahf
mov
popf
sahf
lahf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
popf
popf
popf
mov
xchg
xchg
xchg
pushf
jb
jb
das
das
das
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
clc
add
add
add
add
add
add
add
pop
clc
add
pop
cld
add
paddb
add
cld
add
pop
inc
add
inc
add
inc
add
rol
add
add
add
add
push
add
(bad)
(bad)
(bad)
(bad)
cld
add
jg
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
jg
(bad)
(bad)
(bad)
clc
add
pop
loopne
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
or
add
and
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
adc
add
add
adc
xor
and
and
jae
and
es
and
es
and
es
and
and
pusha
and
pop
jle
inc
inc
mov
push
push
shr
push
push
push
shr
push
push
push
shr
push
push
push
shr
imul
push
shr
imul
push
shr
imul
push
shr
imul
push
shr
imul
push
shr
imul
push
shr
imul
push
shr
imul
push
shr
imul
imul
imul
imul
imul
imul
imul
imul
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
ins
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
imul
data16
sub
sub
add
add
add
add
add
aaa
add
add
add
aaa
add
add
add
add
add
add
add
add
add
js
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
cld
mov
rcl
(bad)
fsubp
loope
fsubp
loop
fsubp
loope
fsubp
loope
fsubp
loope
fsubp
loope
fsubp
loope
fsubp
loope
fsubp
loope
fsubp
loope
fsubp
loope
fsubp
loope
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
loopne
in
loopne
in
loopne
in
loopne
in
loopne
in
loopne
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
jecxz
out
jecxz
out
jecxz
out
jecxz
out
jecxz
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
out
call
jmp
call
call
jmp
call
call
jmp
call
call
jmp
call
call
jmp
call
call
(bad)
jmp
loope
sbb
inc
pop
pop
pop
mov
cmp
jle
loopne
jle
loopne
jle
loopne
jle
loopne
jle
loopne
jle
loopne
jle
loopne
jle
loopne
jle
loopne
jle
loopne
add
add
add
add
sub
in
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
out
jecxz
fcom
aam
retf
std
(bad)
fcomp
call
rcl
call
aam
call
aam
call
aam
call
aam
call
aam
call
aam
call
aam
call
aam
call
aam
call
aam
call
aam
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
(bad)
xlat
call
(bad)
xlat
call
(bad)
xlat
call
(bad)
xlat
call
(bad)
xlat
call
(bad)
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
fdivr
aad
fdivr
aad
fdivr
aad
fdivr
aad
fdivr
aad
fdivr
(bad)
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
rcl
shl
dec
dec
dec
mov
leave
enter
aad
iret
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
call
fcmovu
call
add
or
add
add
xor
push
loope
(bad)
jmp
loop
jmp
loop
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
(bad)
call
jecxz
(bad)
jmp
stc
mov
mov
fcmovu
fdivrp
fcmovu
(bad)
fcmovnu
fdivrp
fstp
(bad)
fstp
loopne
fstp
(bad)
fstp
loopne
fstp
loopne
fstp
(bad)
fstp
(bad)
(bad)
loopne
(bad)
loopne
(bad)
loopne
fnstsw
loope
fnstsw
loope
fstp
(bad)
fcmovnu
fdivrp
fcmovnu
fdivrp
fcmovnu
fdivrp
fcmovnu
fdivrp
fcmovnu
fdivrp
fcmovnu
fdivrp
fcmovnu
fdivrp
fcmovnu
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
fstp
fdivrp
fstp
fdivrp
fstp
fdivrp
fstp
fdivrp
fstp
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
(bad)
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
(bad)
(bad)
fsubp
loopne
fsubp
loopne
fsubp
loopne
fsubp
loopne
fsubp
loopne
fsubp
loopne
fsubp
loopne
fsubp
loopne
fsubp
loopne
fsubp
loopne
fsubp
loopne
(bad)
loope
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
fnstsw
loopne
fsubp
loopne
fstp
(bad)
enter
jo
jo
call
icebp
icebp
push
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
icebp
push
repz
dec
arpl
add
add
and
aam
shl
out
loop
in
loopne
in
loopne
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
jecxz
(bad)
(bad)
fdivrp
fstp
(bad)
fcmovbe
xlat
(bad)
fcmovbe
(bad)
call
rcl
(bad)
fcom
(bad)
(bad)
fcom
xlat
(bad)
(bad)
fdivr
(bad)
fcos
(bad)
(bad)
out
jmp
jmp
call
jmp
jmp
in
out
out
(bad)
in
out
out
(bad)
in
out
out
(bad)
in
out
lock
in
out
lock
out
lock
out
lock
(bad)
out
lock
(bad)
out
lock
icebp
repz
repnz
repnz
repnz
repz
push
repz
push
hlt
hlt
push
hlt
cmc
push
hlt
idiv
repz
idiv
hlt
cmc
idiv
cmc
cmc
idiv
cmc
div
push
div
push
idiv
push
idiv
push
idiv
push
clc
stc
push
clc
stc
(bad)
clc
stc
stc
(bad)
clc
stc
stc
(bad)
stc
stc
cli
(bad)
stc
cli
sti
(bad)
stc
cli
sti
(bad)
cli
cli
cld
(bad)
sti
sti
cld
(bad)
cli
sti
cld
(bad)
cli
sti
std
(bad)
sti
cld
std
(bad)
sti
cld
std
(bad)
cld
std
std
(bad)
cld
std
std
(bad)
std
cld
(bad)
(bad)
std
std
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
fcomp
(bad)
mov
in
in
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
out
out
out
inc
(bad)
(bad)
fisttp
or
sbb
add
add
or
push
mov
in
jmp
fnstsw
jmp
fnstsw
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loop
(bad)
fcmovbe
aam
retf
dec
ret
retf
(bad)
(bad)
dec
(bad)
enter
retf
retf
into
int3
into
dec
iret
sar
enter
xchg
jmp
push
jmp
push
ins
push
jmp
ins
jmp
ins
jmp
ins
jmp
outs
push
outs
push
outs
push
jno
jb
jno
jae
jb
je
jae
jne
je
jbe
jne
ja
jne
ja
ja
js
js
jns
jns
jp
jns
jnp
jp
jnp
jnp
jl
jnp
jge
jge
jle
jge
jg
jg
jg
jg
cmp
inc
add
inc
test
dec
xchg
dec
mov
dec
lea
dec
(bad)
nop
call
xchg
xchg
call
xchg
xchg
call
xchg
call
xchg
xchg
call
cwde
cwde
call
cdq
call
fwait
pushf
call
popf
call
popf
sahf
call
lahf
lahf
call
lahf
mov
jmp
mov
mov
push
idiv
push
cmc
idiv
fcmovu
fcomi
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
push
repz
outs
xchg
add
add
in
out
jmp
fnstsw
jmp
fnstsw
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loope
call
(bad)
leave
dec
rol
aam
into
(bad)
fcmovbe
(bad)
(bad)
fcmovbe
(bad)
(bad)
fcmovnbe
fdivr
(bad)
(bad)
(bad)
fdivr
fcomp
(bad)
stos
test
sbb
sbb
sbb
sbb
sbb
call
sbb
jmp
sbb
jmp
sbb
jmp
sbb
pop
jmp
pop
and
and
and
and
and
jmp
and
jmp
and
jmp
and
jmp
daa
sub
sub
sub
sub
sub
sub
sub
jmp
sub
jmp
sub
push
sub
das
push
das
xor
xor
xor
xor
xor
xor
push
xor
(bad)
cmp
(bad)
cmp
ss
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
aas
cmp
(bad)
aas
cmp
cmp
inc
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
push
call
push
call
call
push
call
push
call
push
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
xlat
fcos
(bad)
(bad)
(bad)
(bad)
out
out
out
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
out
out
out
dec
int
out
adc
and
add
add
push
jbe
out
jmp
fnstsw
jmp
fnstsw
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loop
call
into
sar
int
(bad)
jmp
jbe
(bad)
jge
jns
jg
jnp
jge
jp
mov
into
push
es
jmp
and
sub
jmp
daa
daa
jmp
sub
sub
sub
jmp
sub
jmp
sub
xor
push
cs
push
das
das
push
xor
xor
xor
push
xor
cmp
(bad)
cmp
ss
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
inc
inc
aas
inc
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
dec
call
push
call
push
call
push
call
call
push
call
push
call
push
call
push
call
pop
call
pop
call
pop
call
pop
call
call
pop
call
pop
call
pop
call
pop
jmp
pusha
jmp
popa
jmp
(bad)
jmp
arpl
fs
jmp
jmp
jmp
jmp
jmp
jmp
push
loopne
loop
sti
sti
cld
(bad)
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
push
hlt
hlt
jmp
ins
test
add
add
sbb
sub
retf
retf
out
out
jecxz
in
loopne
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
out
loop
(bad)
sar
ror
retf
bound
adc
call
sbb
call
sbb
call
sbb
call
cdq
call
xor
jmp
and
jmp
daa
daa
jmp
sub
sub
sub
jmp
sub
jmp
sub
xor
push
cs
push
das
das
push
xor
xor
xor
push
xor
cmp
(bad)
cmp
ss
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
inc
inc
aas
inc
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
dec
call
push
call
push
call
push
call
call
push
call
push
call
push
call
push
call
pop
call
pop
call
pop
call
pop
call
call
pop
call
pop
call
pop
jmp
pop
jmp
pusha
jmp
popa
jmp
(bad)
jmp
arpl
fs
jmp
jmp
jmp
jmp
jmp
arpl
je
je
out
out
out
push
idiv
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
push
lock
mov
sbb
add
add
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loope
jmp
jecxz
(bad)
(bad)
(bad)
call
retf
test
jmp
sbb
jmp
es
jmp
es
jmp
jg
call
fcomp
inc
inc
jmp
pop
jmp
and
jmp
daa
daa
jmp
sub
sub
sub
jmp
sub
jmp
sub
xor
push
das
das
push
das
das
push
xor
xor
xor
push
xor
cmp
(bad)
cmp
ss
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
aas
cmp
inc
inc
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
dec
call
push
call
push
call
push
call
call
push
call
push
call
push
call
push
call
pop
call
pop
call
pop
call
call
call
pop
call
pop
call
pop
jmp
pop
jmp
pusha
jmp
popa
jmp
(bad)
jmp
arpl
fs
jmp
jmp
jmp
jmp
jmp
popa
(bad)
jg
cmp
hlt
hlt
cmc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
out
out
out
call
push
bound
add
add
and
xor
rcl
lock
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loope
jmp
loop
(bad)
(bad)
(bad)
ror
int3
call
and
jmp
and
daa
jmp
es
jmp
and
jmp
ins
(bad)
fstp
(bad)
pop
pop
pop
jmp
sbb
jmp
es
es
daa
daa
jmp
sub
sub
sub
jmp
sub
jmp
sub
xor
push
das
das
push
das
xor
xor
xor
xor
xor
push
xor
cmp
(bad)
cmp
ss
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
aas
cmp
inc
inc
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
push
call
push
call
call
push
call
push
call
push
call
push
call
pop
call
pop
call
pop
call
call
call
pop
call
pop
call
pop
jmp
pop
jmp
pusha
jmp
popa
jmp
(bad)
jmp
arpl
fs
jmp
jmp
jmp
jmp
jmp
pusha
call
std
std
push
icebp
icebp
(bad)
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
push
div
call
add
add
add
add
pop
je
call
in
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
loop
loope
(bad)
ror
int3
jmp
es
jmp
and
sub
daa
jmp
es
jmp
and
call
pop
(bad)
(bad)
(bad)
jae
jb
and
jmp
es
daa
daa
jmp
sub
sub
sub
jmp
sub
jmp
sub
xor
push
das
das
push
xor
xor
xor
xor
xor
push
xor
cmp
(bad)
cmp
ss
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
aas
cmp
inc
inc
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
push
call
push
call
call
push
call
push
call
push
call
push
call
pop
call
pop
call
pop
call
call
pop
call
pop
call
pop
call
pop
jmp
pop
jmp
pusha
jmp
popa
jmp
(bad)
jmp
arpl
fs
jmp
jmp
jmp
jmp
call
pop
jmp
(bad)
(bad)
(bad)
out
out
out
(bad)
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
inc
mov
sbb
sbb
jl
jnp
in
jmp
out
in
loope
in
loope
in
loope
in
loope
in
loope
in
loope
in
(bad)
ror
int
mov
xor
jmp
and
jmp
es
jmp
sub
sub
and
dec
inc
inc
call
fcomp
dec
adc
and
sub
jmp
and
daa
jmp
daa
sub
sub
sub
sub
sub
jmp
sub
push
sub
push
sub
push
das
das
push
das
xor
xor
xor
xor
xor
push
xor
cmp
(bad)
cmp
ss
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
inc
inc
aas
inc
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
push
call
push
call
call
push
call
push
call
push
call
push
call
pop
call
pop
call
pop
call
call
call
pop
call
pop
call
pop
jmp
pop
jmp
pusha
jmp
popa
jmp
(bad)
jmp
arpl
fs
jmp
jmp
arpl
pop
pop
pop
push
(bad)
(bad)
(bad)
in
in
in
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
dec
int
loop
sub
add
add
imul
icebp
repz
out
(bad)
in
call
jecxz
out
loop
in
loope
in
loope
in
loop
aad
iret
dec
(bad)
(bad)
inc
aas
jmp
push
pop
jmp
and
daa
jmp
and
cmp
retf
mov
aas
jmp
es
and
jmp
and
sub
jmp
daa
sub
xor
(bad)
cmp
ss
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
aas
cmp
inc
inc
aas
inc
aas
inc
ds
cmp
ss
cmp
ss
cmp
aaa
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
aas
cmp
inc
inc
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
dec
call
push
call
push
call
push
call
call
push
call
push
call
push
call
push
call
pop
call
pop
call
pop
call
call
pop
jmp
jmp
jmp
arpl
pusha
pusha
pusha
jmp
popa
jmp
(bad)
jmp
(bad)
jmp
popa
jmp
push
(bad)
fcmovu
(bad)
sti
sti
std
(bad)
jmp
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
jmp
lock
stc
stc
stc
dec
leave
leave
fld
sub
sub
sub
lea
enter
jecxz
lock
push
in
in
push
in
in
push
out
out
jmp
(bad)
(bad)
fcmovnbe
(bad)
jmp
jmp
sbb
pop
jmp
pop
and
xor
xor
mov
fstp
dec
iret
sar
mov
mov
cmps
test
jmp
stos
stos
jmp
lods
lods
jmp
call
push
call
pop
call
call
call
pop
call
pop
call
pop
jmp
pop
jmp
pop
jmp
pusha
jmp
popa
jmp
pop
push
jb
scas
scas
scas
push
mov
push
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
sar
rol
rol
inc
rol
ret
inc
ret
(bad)
inc
(bad)
(bad)
(bad)
(bad)
inc
(bad)
enter
enter
leave
dec
leave
retf
leave
retf
dec
retf
retf
dec
retf
int3
dec
int3
int
int3
int3
int
int
into
dec
into
iret
dec
into
sar
iret
iret
sar
rcl
sar
rcl
sar
rcl
sar
rcl
sar
aam
aad
(bad)
(bad)
(bad)
(bad)
mov
int3
int
aad
(bad)
call
rcl
call
rcl
call
rcl
call
rcl
(bad)
fstp
(bad)
hlt
hlt
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
div
push
div
push
div
push
div
push
div
push
repnz
fcmovu
(bad)
mov
sbb
pop
pop
pop
sbb
ds
dec
pop
pop
pop
imul
ins
jnp
imul
imul
mov
movs
cmps
jmp
mov
cmps
(bad)
mov
fcmovnu
(bad)
fstp
loopne
loop
in
out
jmp
in
out
(bad)
jmp
out
(bad)
jmp
out
(bad)
out
out
lock
jmp
xchg
push
outs
push
push
jae
jbe
je
ja
jne
ja
jbe
jns
ja
jns
ja
jp
js
jp
jns
jnp
jp
jbe
jne
xchg
in
out
out
repnz
in
out
icebp
(bad)
out
out
icebp
(bad)
out
lock
(bad)
out
lock
push
repz
(bad)
cli
sti
std
(bad)
cli
cld
(bad)
(bad)
sti
std
(bad)
(bad)
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
push
idiv
push
div
push
idiv
push
clc
cli
push
idiv
push
stc
sti
(bad)
clc
stc
cld
(bad)
stc
sti
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
pop
pop
pusha
push
ja
push
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
div
clc
mov
ja
outs
outs
outs
jp
jo
jnp
jo
jnp
jno
jge
data16
dec
dec
push
and
add
add
add
sub
sub
dec
dec
dec
push
pop
pop
pop
addr16
pop
pop
gs
pop
pop
gs
pop
pop
gs
push
push
gs
push
push
gs
push
push
gs
push
push
gs
push
push
gs
push
push
gs
push
push
gs
push
push
gs
push
push
gs
push
push
gs
pusha
pusha
gs
pop
pop
gs
pop
pop
gs
pop
pop
gs
pop
pop
gs
pop
pusha
gs
pop
pusha
gs
pusha
pusha
gs
pusha
pusha
gs
pusha
popa
gs
popa
popa
gs
pop
pop
popa
add
(bad)
(bad)
(bad)
loopne
fdivrp
loopne
fdivrp
loope
fdivrp
in
loop
retf
enter
pusha
popa
ins
pop
pop
pop
fs
pop
pop
gs
pop
pop
gs
pop
pop
gs
pop
pop
arpl
push
fcomp
fsubr
in
jecxz
jecxz
loope
in
loop
in
loop
in
loop
in
jecxz
fstp
fdivr
je
je
pop
pop
pop
bound
pop
gs
pop
pusha
gs
pop
pusha
gs
pop
pusha
gs
pusha
popa
gs
pusha
popa
gs
pusha
popa
gs
popa
popa
gs
popa
popa
gs
popa
popa
gs
popa
bound
popa
bound
popa
bound
bound
bound
bound
bound
gs
inc
dec
bound
sbb
jl
xor
sahf
adc
adc
push
push
push
bound
bound
bound
gs
dec
dec
push
xor
xor
or
or
add
xor
xor
(bad)
(bad)
(bad)
fst
(bad)
(bad)
fst
(bad)
(bad)
fst
(bad)
(bad)
fst
(bad)
jmp
(bad)
push
add
add
add
add
(bad)
movups
mov
(bad)
(bad)
aad
(bad)
aad
(bad)
aad
(bad)
aad
fcompp
xlat
call
retf
sbb
sbb
cmp
inc
fcmovu
(bad)
(bad)
fcmovbe
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
xlat
push
or
add
sbb
sbb
(bad)
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
fcmovnbe
aad
iret
leave
enter
es
add
cmp
cmp
aad
(bad)
fcom
sar
xlat
rcl
call
rcl
call
rcl
call
rcl
(bad)
fcmovnbe
aam
mov
scas
xlat
push
or
add
sbb
sbb
fcmovbe
sar
xlat
rcl
call
rcl
call
rcl
call
rcl
(bad)
(bad)
sar
int
(bad)
es
add
cmp
inc
rcl
int
aad
int
aam
int3
call
iret
int3
call
iret
int3
call
iret
int3
(bad)
fcom
sar
mov
stos
xlat
or
add
add
sbb
sbb
xlat
ror
call
iret
int3
call
iret
int3
call
iret
int3
call
iret
int3
call
ror
dec
(bad)
and
add
aaa
cmp
inc
ror
int3
(bad)
ror
leave
call
retf
enter
leave
call
int3
enter
leave
call
ror
jmp
or
push
pop
sbb
sbb
iret
int3
call
int3
leave
call
int3
leave
call
int3
leave
call
int3
leave
call
into
retf
inc
rol
and
and
add
add
iret
(bad)
ror
retf
int
call
int3
leave
call
int3
retf
int
call
ror
jmp
push
push
or
add
add
adc
pop
mov
ror
call
int
call
int
call
int
call
int
call
iret
int3
inc
ret
and
pop
sub
add
add
cmp
dec
pop
pop
pop
outs
ja
js
js
js
js
jns
js
jns
js
jns
js
jns
js
jns
js
jns
js
jns
js
jns
js
jns
js
js
js
ja
ja
ja
js
ja
ja
ja
ja
ja
js
ja
js
ja
js
ja
ja
ja
js
ja
js
ja
js
ja
js
ja
jns
ja
js
ja
js
ja
js
ja
ja
ja
js
ja
js
jne
js
ja
jns
ja
jns
ja
jns
jbe
js
jbe
js
jbe
js
ja
js
ja
js
jne
js
ja
jne
je
mov
retf
dec
int3
leave
dec
int3
leave
dec
retf
enter
enter
(bad)
dec
int3
leave
(bad)
mov
jge
mov
jp
ja
jp
jbe
jp
ja
js
jne
add
cmc
retf
leave
(bad)
mov
dec
mov
dec
leave
(bad)
(bad)
xchg
jns
jbe
jns
ja
jns
ja
jns
ja
js
ja
jns
jbe
jns
ja
jp
ja
jns
ja
ja
ja
jns
ja
jns
ja
jns
ja
js
js
js
ja
js
ja
js
ja
js
ja
js
jbe
jns
jbe
ja
ja
ja
ja
ja
ja
js
jne
js
jne
ja
jne
js
ja
js
ja
jns
js
js
ja
js
ja
js
ja
ja
jbe
ja
ja
js
js
js
js
js
jns
js
jns
js
jns
js
jns
js
jns
js
jns
js
jp
jae
je
push
push
push
data16
das
das
cmp
add
add
add
add
inc
aas
push
mov
call
hlt
push
hlt
hlt
push
repz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
out
in
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loop
jmp
loope
jmp
loopne
jmp
loopne
jmp
loopne
jmp
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
fstp
fdivr
(bad)
fdivr
fcmovnu
fdivr
fcmovnu
xlat
(bad)
fcmovnu
(bad)
(bad)
(bad)
aad
(bad)
aad
fcom
aam
fcom
sar
xlat
(bad)
sar
xlat
(bad)
sar
(bad)
aad
call
aad
call
ror
dec
enter
mov
inc
mov
mov
sar
(bad)
mov
retf
int
dec
int
dec
int
dec
int3
(bad)
dec
int3
(bad)
dec
retf
rol
inc
mov
mov
(bad)
mov
mov
mov
dec
leave
(bad)
int3
(bad)
dec
int3
(bad)
dec
int
dec
int
dec
into
retf
iret
retf
ror
call
ror
call
ror
call
ror
call
ror
call
ror
call
ror
call
aam
call
aam
call
aad
call
(bad)
sar
xlat
(bad)
sar
xlat
(bad)
sar
fcom
sar
fcomp
aam
(bad)
(bad)
(bad)
fcmovu
aad
fcmovnu
(bad)
(bad)
fcmovnu
xlat
(bad)
fcmovnu
xlat
(bad)
(bad)
fdivr
(bad)
fcos
fstp
(bad)
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
(bad)
fdivr
loopne
fdivr
loope
fdivrp
jmp
jmp
push
repnz
repnz
repnz
repnz
repnz
repnz
hlt
repz
cmc
cmc
push
repz
jmp
loope
cli
popf
popf
popf
mov
sbb
and
add
add
aam
repnz
idiv
in
in
in
jmp
jecxz
(bad)
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
xlat
xlat
xlat
call
aam
call
aam
call
aam
call
rcl
call
rcl
call
rcl
call
rcl
call
ror
call
ror
call
ror
call
ror
dec
ror
dec
ror
dec
iret
int
into
iret
int
iret
iret
int3
dec
iret
int3
dec
iret
retf
dec
iret
retf
dec
int
dec
into
retf
int
dec
int
dec
int
dec
int3
leave
dec
int3
leave
dec
int3
enter
enter
enter
(bad)
dec
retf
leave
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
leave
(bad)
enter
enter
enter
mov
inc
mov
inc
mov
inc
mov
vcmppd
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
(bad)
inc
(bad)
mov
inc
mov
mov
ret
inc
enter
enter
enter
enter
leave
(bad)
leave
(bad)
leave
(bad)
dec
leave
(bad)
dec
retf
retf
dec
retf
(bad)
dec
retf
enter
enter
leave
dec
int3
leave
dec
int3
retf
int
dec
int
dec
int
dec
into
retf
dec
into
int3
dec
iret
int3
dec
iret
int3
dec
iret
int3
dec
ror
dec
ror
dec
ror
call
ror
call
ror
call
ror
call
ror
call
xlat
aad
fcmovu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
(bad)
fdivrp
in
in
out
out
out
(bad)
sti
sti
sti
jmp
add
push
je
jae
repz
(bad)
jmp
fstp
call
aam
dec
aam
dec
rcl
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
aam
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
aam
dec
aam
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
rcl
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
rcl
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aad
dec
aad
dec
aam
dec
aad
dec
aam
dec
aam
dec
aad
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aad
dec
aad
dec
aad
dec
aad
dec
(bad)
aad
iret
(bad)
aam
into
(bad)
aam
iret
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
(bad)
aad
iret
(bad)
aad
iret
(bad)
aad
iret
(bad)
aad
rcl
(bad)
call
(bad)
aad
rcl
aad
rcl
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
aad
rcl
(bad)
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
(bad)
(bad)
call
xlat
xlat
jmp
loopne
(bad)
in
in
in
jmp
in
std
xor
xor
popf
sahf
sahf
mov
jecxz
jecxz
rcl
aam
int3
aam
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
(bad)
aad
int
aad
int
aad
int
aad
int
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
xlat
aad
into
(bad)
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
xlat
dec
xlat
xlat
dec
xlat
xlat
dec
xlat
xlat
dec
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
fdivr
rcl
fdivr
rcl
fdivr
rcl
fdivr
rcl
fdivr
rcl
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fdivr
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fdivr
rcr
fdivr
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fdivr
rcr
fdivr
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
fcos
rcr
(bad)
rcr
(bad)
rcr
(bad)
rcl
fdivr
xlat
(bad)
jmp
out
push
lock
pop
push
add
add
pop
pop
or
out
out
out
jmp
loopne
call
aam
dec
aad
dec
aad
dec
aad
dec
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
iret
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
(bad)
call
xlat
xlat
jmp
loope
push
icebp
icebp
push
jno
or
or
mov
in
in
(bad)
(bad)
(bad)
iret
aad
dec
aad
dec
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcom
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
fcomp
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
(bad)
call
xlat
xlat
jmp
loopne
(bad)
out
out
out
inc
add
add
or
adc
in
in
(bad)
fstp
(bad)
rcl
sar
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
into
(bad)
aad
iret
xlat
(bad)
call
fcmovu
call
fcmovnu
call
fcmovnu
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
fstp
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
(bad)
fcomp
fdivrp
fcomp
fdivrp
fcomp
fdivrp
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
xlat
(bad)
call
(bad)
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
(bad)
call
xlat
fdivr
loopne
(bad)
out
out
out
inc
add
add
or
mov
in
in
(bad)
fstp
(bad)
rcl
aam
iret
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
call
fcom
dec
into
int
mov
nop
xchg
dec
xchg
xchg
dec
xchg
xchg
dec
nop
xchg
dec
xchg
xchg
dec
xchg
xchg
dec
nop
xchg
dec
xchg
xchg
dec
xchg
xchg
dec
nop
xchg
dec
nop
xchg
dec
xchg
xchg
dec
nop
xchg
dec
nop
xchg
dec
xchg
xchg
dec
nop
xchg
dec
nop
xchg
dec
xchg
xchg
dec
nop
xchg
dec
nop
xchg
dec
xchg
xchg
dec
nop
xchg
dec
nop
xchg
dec
xchg
xchg
dec
(bad)
xchg
dec
nop
xchg
dec
xchg
xchg
dec
(bad)
xchg
dec
nop
xchg
dec
nop
xchg
dec
(bad)
xchg
dec
nop
xchg
dec
nop
xchg
dec
(bad)
xchg
dec
nop
xchg
dec
nop
xchg
dec
(bad)
xchg
dec
nop
xchg
dec
nop
xchg
dec
nop
xchg
dec
(bad)
xchg
dec
nop
xchg
dec
xchg
xchg
dec
(bad)
xchg
dec
nop
xchg
dec
xchg
xchg
dec
nop
xchg
dec
nop
xchg
dec
xchg
xchg
dec
nop
xchg
dec
nop
xchg
dec
lahf
lahf
dec
int3
int3
call
(bad)
call
fcmovu
call
fcmovu
call
fcmovu
call
fcmovu
call
fcom
jmp
loopne
(bad)
out
out
out
inc
add
add
or
mov
in
in
(bad)
(bad)
(bad)
rcl
aam
iret
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
call
fcmovu
inc
mov
jmp
and
push
sbb
cs
push
jmp
and
jmp
and
push
sub
sbb
xor
adc
jmp
and
push
sub
(bad)
cmp
sbb
xor
sub
xor
adc
push
sub
sbb
ss
push
sub
das
es
cmp
sbb
cmp
sbb
aaa
sub
adc
push
sub
(bad)
cmp
cs
aaa
cs
push
sub
(bad)
aas
xor
sbb
cmp
sbb
cmp
pop
push
pop
inc
pop
(bad)
aas
xor
sbb
cmp
sbb
aaa
sub
sbb
inc
ss
inc
ss
(bad)
cmp
xor
(bad)
cmp
sbb
xor
sbb
aas
ss
inc
aaa
and
xor
(bad)
cmp
sbb
ss
push
inc
(bad)
ds
sbb
cmp
sbb
aaa
cs
cmp
sbb
inc
cmp
inc
and
xor
cmp
xor
push
sub
and
inc
cmp
(bad)
ds
(bad)
cmp
sbb
cmp
sbb
aaa
sub
sbb
inc
push
(bad)
cmp
xor
(bad)
cmp
sbb
xor
aaa
and
inc
cmp
(bad)
cmp
xor
(bad)
cmp
sbb
ss
sbb
inc
cmp
(bad)
aas
xor
(bad)
cmp
sbb
cmp
sbb
cmp
push
(bad)
cmp
sbb
inc
ss
(bad)
cmp
and
call
push
(bad)
mov
(bad)
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovu
call
(bad)
jmp
loopne
(bad)
out
out
out
inc
add
add
or
mov
in
in
(bad)
(bad)
fdivrp
rcl
aam
iret
xlat
(bad)
dec
xlat
(bad)
dec
xlat
(bad)
call
fcmovu
inc
leave
enter
inc
(bad)
cmp
dec
sbb
inc
xor
inc
adc
cmp
push
inc
adc
push
inc
sbb
dec
cmp
inc
adc
inc
xor
(bad)
xor
call
sbb
dec
cmp
adc
dec
ss
inc
xor
call
sbb
push
ds
dec
cmp
dec
inc
push
call
call
sbb
push
inc
adc
push
aas
adc
dec
cmp
dec
adc
pop
dec
and
pop
dec
sbb
call
push
dec
adc
dec
cmp
jmp
jmp
and
pop
inc
sbb
push
inc
sbb
push
inc
push
dec
pop
jmp
jmp
and
pop
dec
sbb
pop
inc
sbb
push
inc
sbb
dec
cmp
daa
jmp
call
and
pop
dec
sbb
call
sbb
arpl
jmp
sub
bound
call
push
call
push
call
sbb
pop
dec
and
ins
pop
sub
call
and
pop
dec
pop
call
sbb
push
inc
sbb
jmp
sub
popa
dec
and
pop
dec
and
pop
inc
push
call
sbb
addr16
sub
imul
arpl
call
pop
call
call
sbb
push
inc
pop
jmp
jmp
daa
call
and
pop
dec
push
call
sbb
jmp
daa
jmp
sub
bound
call
call
sbb
call
sbb
push
push
and
call
sbb
push
inc
sbb
dec
cmp
sbb
push
dec
and
inc
xor
dec
dec
(bad)
mov
(bad)
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovu
call
(bad)
jmp
loope
push
lock
add
add
or
mov
in
in
(bad)
(bad)
fdivrp
rcl
aad
iret
xlat
(bad)
call
xlat
xlat
call
xlat
xlat
call
fcmovu
inc
leave
leave
dec
dec
(bad)
cmp
adc
inc
inc
adc
cmp
ss
push
inc
pop
dec
sbb
dec
cmp
inc
ss
inc
xor
dec
sbb
push
inc
pop
call
sbb
dec
cmp
inc
call
pop
call
sbb
dec
adc
inc
adc
pop
dec
and
pop
dec
pop
call
call
pop
dec
push
dec
pop
jmp
and
call
sbb
push
inc
sbb
push
ds
dec
ds
fs
sub
popa
dec
and
call
sbb
dec
sbb
fs
sub
arpl
call
call
pop
call
push
call
sbb
arpl
jmp
sub
pusha
dec
and
pop
dec
and
pop
inc
and
push
inc
sbb
pusha
push
sub
push
das
jmp
sub
pop
dec
and
pop
dec
and
push
inc
pop
call
and
ins
pop
xor
push
sub
pop
dec
and
pop
dec
and
pop
dec
and
push
inc
and
imul
jmp
daa
call
and
pop
dec
and
push
inc
pop
jmp
sub
ins
pop
xor
fs
sub
pop
dec
and
pop
dec
and
pop
inc
and
push
inc
and
imul
push
dec
and
call
and
push
inc
push
call
and
jmp
call
and
pop
dec
and
push
inc
pop
dec
sbb
bound
jmp
sub
popa
dec
and
call
pop
call
sbb
dec
aas
sbb
gs
sub
gs
daa
inc
adc
(bad)
mov
(bad)
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovu
call
(bad)
jmp
loope
push
lock
add
add
or
mov
in
in
(bad)
(bad)
fdivrp
rcl
aad
rcl
xlat
call
xlat
xlat
call
xlat
xlat
call
fcmovu
inc
leave
leave
dec
dec
(bad)
cmp
sbb
inc
ss
(bad)
cmp
adc
dec
cmp
call
pop
dec
sbb
dec
cmp
inc
ss
inc
xor
call
push
call
push
dec
sbb
dec
cmp
dec
cmp
inc
ss
pop
dec
pop
call
sbb
call
adc
dec
adc
pop
dec
and
pop
dec
pop
call
sbb
push
inc
sbb
dec
cmp
sbb
popa
dec
call
and
push
inc
sbb
push
inc
sbb
push
aas
sbb
dec
ds
fs
sub
bound
call
and
pop
inc
push
call
sbb
jmp
sub
fs
sub
pop
dec
and
pop
dec
and
push
inc
pop
call
sbb
jmp
sub
popa
dec
call
and
pop
dec
and
push
inc
push
call
sub
ins
pop
xor
fs
sub
pop
dec
and
pop
dec
and
push
inc
and
push
inc
and
ins
pop
xor
push
dec
call
and
pop
dec
and
push
inc
and
addr16
jmp
jmp
jmp
and
call
and
pop
dec
sub
outs
pop
xor
push
sub
pusha
dec
call
and
pop
dec
and
push
inc
and
imul
jmp
sub
pop
dec
and
pop
dec
and
push
inc
and
push
inc
and
ins
pop
xor
addr16
sub
pusha
dec
and
pop
dec
and
pop
dec
and
push
inc
sbb
jmp
jmp
daa
call
and
pop
dec
and
push
inc
push
dec
sbb
pusha
dec
sub
push
cmp
call
dec
(bad)
mov
(bad)
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
fcmovu
call
(bad)
jmp
loope
push
lock
add
add
or
mov
in
in
(bad)
(bad)
fdivrp
rcl
aad
rcr
xlat
call
fcom
call
fcom
call
fcmovnu
inc
leave
leave
dec
dec
(bad)
cmp
dec
inc
inc
adc
cmp
adc
dec
cmp
call
dec
dec
adc
inc
ss
inc
xor
call
call
sbb
dec
adc
inc
adc
pop
dec
and
pop
dec
sbb
call
push
dec
adc
jmp
and
pop
dec
and
push
inc
sbb
push
inc
sbb
dec
ds
dec
cmp
call
and
pop
inc
sbb
call
sbb
dec
aas
sbb
push
sub
bound
call
and
pop
inc
pop
call
push
dec
sbb
push
sub
push
sub
pop
dec
and
pop
dec
and
pop
inc
and
push
inc
sbb
jmp
jmp
daa
call
and
pop
dec
and
push
inc
pop
call
sub
outs
pop
xor
push
sub
popa
dec
and
call
and
push
inc
and
outs
pop
xor
push
jmp
sub
pusha
dec
call
call
and
gs
jmp
xor
push
sub
bound
call
call
and
pop
dec
push
xor
imul
jmp
call
and
push
inc
and
gs
sub
jmp
sub
popa
dec
call
and
call
jmp
xor
push
jmp
daa
call
and
pop
dec
and
push
inc
pop
call
and
imul
push
sub
pop
dec
and
pop
dec
and
pop
inc
and
push
inc
sbb
pop
dec
and
ins
pop
sub
call
dec
(bad)
mov
(bad)
call
(bad)
call
(bad)
call
(bad)
call
fcmovnu
call
fcmovu
jmp
loop
push
lock
add
add
or
mov
in
in
(bad)
(bad)
fdivrp
rcl
(bad)
call
fcomp
call
fcomp
call
fcomp
call
fcmovnu
inc
leave
leave
dec
dec
(bad)
cmp
dec
inc
adc
(bad)
cmp
inc
push
call
sbb
dec
adc
dec
aaa
adc
inc
xor
call
push
call
sbb
push
aas
push
dec
adc
dec
cmp
dec
adc
call
sbb
call
pop
dec
adc
jmp
and
call
sbb
push
inc
sbb
push
ds
dec
aas
sbb
arpl
jmp
and
pop
inc
push
call
sbb
call
sbb
push
sub
arpl
call
call
and
push
inc
pop
call
sbb
jmp
sub
pop
dec
and
pop
dec
and
pop
dec
and
push
inc
pop
jmp
sub
ins
pop
das
jmp
call
and
call
and
pop
dec
daa
push
xor
addr16
sub
bound
jmp
call
call
and
ins
pop
xor
ins
pop
xor
gs
sub
bound
call
call
and
bound
push
xor
push
push
sub
popa
dec
daa
call
and
push
dec
and
jmp
jmp
sub
bound
call
call
and
pusha
push
sub
jno
xor
push
push
daa
jmp
call
call
and
addr16
jmp
xor
fs
sub
pusha
dec
and
pop
dec
and
pop
inc
and
push
inc
pop
jmp
das
jmp
sub
call
and
pop
dec
and
push
inc
push
call
and
ins
pop
das
dec
sbb
push
dec
dec
(bad)
mov
(bad)
call
(bad)
call
(bad)
call
(bad)
call
fcmovnu
call
fcmovu
jmp
loop
push
lock
add
add
or
adc
rol
out
out
out
(bad)
(bad)
(bad)
rcl
(bad)
call
fcomp
call
fcomp
call
fcomp
call
fcmovnu
inc
leave
leave
dec
dec
(bad)
cmp
dec
sbb
inc
ss
inc
xor
(bad)
aas
xor
call
call
dec
push
dec
inc
adc
inc
xor
pop
call
sbb
push
aas
push
dec
adc
dec
cmp
dec
cmp
call
and
pop
dec
push
call
sbb
push
inc
pop
dec
push
dec
jmp
call
and
push
inc
sbb
push
inc
sbb
push
ds
dec
aas
sbb
fs
sub
pusha
dec
and
pop
dec
pop
call
push
call
sbb
push
inc
sbb
jmp
sub
pop
dec
and
pop
dec
and
pop
inc
pop
call
sbb
jmp
sub
pusha
dec
call
and
pop
dec
and
push
inc
pop
jmp
sub
outs
pop
xor
push
sub
pusha
dec
call
and
call
daa
push
xor
push
das
jmp
sub
bound
call
call
and
ins
pop
xor
outs
pop
xor
push
sub
arpl
jmp
sub
pop
dec
and
pop
push
sub
jb
xor
jmp
jmp
sub
pop
dec
call
and
outs
pop
xor
outs
pop
xor
push
push
sub
popa
dec
daa
call
and
pop
dec
sub
jb
xor
jmp
jmp
daa
call
and
jmp
sub
jno
xor
addr16
sub
popa
dec
call
and
call
pop
jmp
jmp
jmp
sub
pop
dec
and
pop
dec
and
push
inc
and
push
inc
push
jmp
sub
call
dec
(bad)
mov
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
(bad)
fcomp
(bad)
jecxz
loop
icebp
icebp
icebp
inc
add
add
or
adc
rol
out
out
out
(bad)
(bad)
(bad)
rcl
(bad)
call
fcomp
call
fcomp
call
fcomp
call
fcmovnu
inc
enter
dec
dec
(bad)
cmp
dec
inc
adc
inc
xor
inc
adc
push
inc
and
push
inc
sbb
dec
cmp
dec
inc
adc
inc
cmp
pop
dec
and
push
inc
sbb
push
aas
push
dec
adc
dec
jmp
and
pop
dec
sbb
call
sbb
dec
cmp
dec
sbb
arpl
call
and
push
inc
sbb
push
inc
sbb
push
aas
sbb
dec
aas
sbb
gs
sub
popa
dec
call
pop
call
pop
call
call
sbb
jmp
sub
pop
dec
and
pop
dec
and
pop
inc
and
push
inc
push
jmp
jmp
jmp
daa
call
and
pop
dec
and
push
inc
and
popa
push
sub
outs
pop
xor
addr16
sub
bound
jmp
daa
call
and
pop
dec
push
xor
jmp
sub
arpl
call
daa
call
and
push
xor
jb
xor
imul
jmp
sub
pop
dec
call
push
jmp
xor
push
sub
fs
sub
pusha
dec
sub
push
inc
and
push
xor
push
jmp
sub
bound
call
and
push
xor
jmp
sub
arpl
call
daa
call
and
pop
dec
daa
push
xor
push
jmp
sub
popa
dec
call
and
call
sub
outs
pop
xor
addr16
sub
pusha
dec
call
and
pop
dec
and
push
inc
push
jmp
sub
push
inc
and
push
dec
dec
(bad)
mov
loopne
call
fstp
(bad)
fcomp
(bad)
fcomp
(bad)
xlat
(bad)
(bad)
fcomp
(bad)
jecxz
loop
icebp
icebp
icebp
inc
add
add
or
adc
rol
out
out
out
jmp
loopne
call
xlat
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
inc
enter
dec
inc
(bad)
cmp
dec
inc
adc
inc
xor
inc
adc
pop
inc
and
push
inc
sbb
dec
cmp
dec
dec
adc
dec
cmp
call
and
push
inc
sbb
push
aas
push
call
adc
dec
sbb
popa
dec
and
pop
dec
push
call
call
sbb
dec
cmp
dec
sbb
fs
daa
call
and
push
inc
sbb
call
sbb
push
inc
sbb
jmp
call
and
pop
dec
pop
call
sbb
jmp
sub
jmp
and
call
and
push
inc
pop
jmp
jmp
das
jmp
sub
pusha
dec
and
call
jmp
sub
jno
xor
imul
jmp
sub
pop
dec
and
push
jmp
xor
addr16
sub
fs
sub
popa
dec
sub
pop
dec
and
push
popa
jmp
das
jmp
sub
arpl
call
daa
call
sub
je
aaa
jmp
xor
push
push
sub
popa
push
sub
pop
dec
jmp
das
push
jmp
jmp
sub
fs
sub
pop
dec
daa
call
and
push
xor
jmp
jmp
sub
pop
dec
and
push
xor
ins
pop
xor
push
sub
bound
jmp
call
and
pop
dec
and
jmp
das
jmp
daa
call
and
pop
dec
and
push
inc
and
pop
dec
and
call
dec
(bad)
mov
loope
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
xlat
(bad)
(bad)
fcomp
(bad)
jecxz
loop
icebp
icebp
icebp
inc
add
add
or
adc
rol
lock
lock
loopne
call
xlat
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
inc
enter
dec
inc
(bad)
cmp
dec
push
dec
adc
inc
xor
inc
pop
call
and
push
inc
sbb
dec
cmp
dec
adc
dec
call
and
push
inc
sbb
push
aas
push
call
push
dec
adc
push
inc
sbb
arpl
call
push
call
sbb
push
inc
sbb
dec
cmp
call
sbb
call
and
pop
inc
sbb
call
sbb
push
inc
push
jmp
sub
bound
call
call
and
push
inc
push
call
jmp
das
jmp
sub
pusha
dec
and
call
and
push
inc
and
addr16
jmp
xor
fs
sub
popa
dec
call
call
and
pop
dec
sub
jb
xor
push
das
jmp
jmp
sub
pop
dec
call
push
aaa
jmp
xor
push
push
sub
arpl
call
and
push
cmp
ins
pop
xor
addr16
sub
gs
sub
pusha
dec
sub
pop
dec
daa
push
aaa
push
xor
jmp
sub
arpl
call
jmp
push
cmp
outs
pop
xor
push
push
sub
popa
push
sub
pop
dec
and
push
jmp
xor
push
sub
fs
sub
pop
dec
daa
call
and
outs
pop
xor
jno
xor
push
push
sub
bound
call
and
jmp
xor
ins
pop
xor
push
sub
pusha
dec
and
call
and
push
inc
and
push
inc
and
push
dec
dec
(bad)
mov
loope
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
(bad)
(bad)
jecxz
loop
repnz
add
add
or
adc
rol
lock
lock
loopne
call
xlat
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
inc
enter
dec
inc
(bad)
cmp
push
dec
dec
adc
inc
xor
dec
sbb
pop
inc
and
push
aas
sbb
dec
cmp
dec
inc
adc
push
aas
sbb
pop
dec
and
push
inc
sbb
push
inc
pop
call
pop
dec
adc
push
inc
push
jmp
and
call
sbb
push
inc
sbb
dec
cmp
pop
jmp
sub
pop
dec
and
pop
inc
push
call
sbb
call
pop
jmp
sub
arpl
call
and
pop
dec
and
push
inc
and
push
inc
and
push
das
jmp
sub
call
and
pop
dec
and
push
inc
and
push
pop
xor
gs
sub
bound
jmp
daa
call
and
pop
dec
sub
jae
jmp
xor
gs
sub
fs
sub
pop
dec
sub
pop
dec
push
push
xor
jmp
sub
fs
sub
pop
dec
daa
jmp
(bad)
js
cmp
outs
pop
xor
imul
jmp
sub
pop
dec
daa
push
aaa
push
aaa
jmp
xor
push
push
sub
call
sub
js
cmp
jb
xor
jmp
sub
call
daa
jmp
das
push
cmp
outs
pop
xor
push
push
sub
popa
dec
sub
pop
dec
and
push
bound
jmp
xor
gs
sub
fs
sub
pop
dec
daa
call
and
addr16
xor
jo
xor
push
push
daa
jmp
call
and
push
inc
and
push
inc
and
push
push
dec
(bad)
mov
loope
(bad)
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
fcomp
(bad)
(bad)
(bad)
jecxz
loop
repnz
add
add
or
rol
fucomi
out
out
jmp
loope
call
fcomp
call
fcmovu
call
fcmovu
call
fcmovu
call
fstp
inc
enter
inc
inc
push
sub
dec
adc
inc
xor
dec
sbb
pop
dec
push
call
sbb
dec
ds
dec
cmp
inc
adc
push
inc
sbb
pop
dec
and
push
inc
sbb
push
inc
pop
call
pop
dec
adc
push
inc
and
bound
call
pop
call
sbb
push
inc
sbb
dec
cmp
and
push
dec
and
pop
dec
pop
call
push
call
sbb
push
inc
and
imul
call
and
pop
dec
and
push
inc
and
push
inc
and
imul
imul
jmp
and
call
and
push
pop
xor
addr16
sub
arpl
jmp
sub
pop
dec
and
push
aaa
jmp
jmp
sub
gs
sub
pusha
dec
sub
pop
dec
push
push
jmp
xor
push
push
sub
pop
dec
daa
jmp
sub
push
xor
jmp
jmp
call
daa
jmp
xor
jmp
xor
push
das
jmp
jmp
sub
pop
dec
sub
ja
cmp
je
cmp
ins
pop
xor
imul
call
sub
popa
push
sub
push
xor
jmp
sub
fs
sub
pop
dec
jmp
sub
jmp
xor
addr16
sub
gs
sub
popa
push
sub
pop
dec
and
popa
push
sub
jae
jmp
xor
fs
sub
bound
call
and
inc
sbb
push
push
dec
(bad)
mov
loope
(bad)
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
fcomp
(bad)
(bad)
(bad)
in
jecxz
repnz
add
add
or
rol
fucomi
out
out
jmp
loope
call
fcomp
call
fcmovu
call
fcmovu
call
fcmovu
call
fstp
inc
enter
inc
inc
push
sub
dec
cmp
inc
adc
push
inc
sbb
pop
dec
push
call
pop
dec
adc
dec
cmp
inc
ss
push
inc
pop
call
and
push
inc
sbb
push
inc
pop
call
sbb
dec
cmp
jmp
call
pop
call
sbb
push
inc
sbb
dec
ds
push
inc
and
addr16
sub
pop
dec
and
pop
dec
and
pop
inc
and
push
inc
sbb
jmp
jmp
call
and
pop
dec
and
pop
inc
and
push
inc
and
ins
pop
xor
imul
fs
sub
popa
dec
call
and
jmp
xor
jno
xor
push
push
sub
arpl
call
call
sub
jne
cmp
outs
pop
xor
push
push
sub
bound
call
daa
push
aaa
push
cmp
ins
pop
xor
imul
jmp
sub
pusha
push
sub
jns
cmp
jae
aaa
jmp
jmp
das
jmp
call
sub
imul
jp
cmp
jmp
xor
imul
call
sub
jne
cmp
ja
cmp
outs
pop
xor
imul
push
push
sub
pop
dec
sub
js
cmp
je
cmp
ins
pop
xor
imul
call
sub
pop
dec
sub
ja
cmp
jo
xor
jmp
sub
arpl
call
call
daa
push
jmp
xor
addr16
sub
arpl
call
daa
call
(bad)
cmp
adc
dec
dec
dec
(bad)
mov
loop
(bad)
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivr
in
in
repnz
add
add
or
rol
fucomi
out
out
jmp
loope
call
fcomp
call
fcmovu
call
fcmovu
call
fcmovu
call
fstp
inc
enter
inc
inc
(bad)
cmp
or
dec
cmp
dec
adc
inc
xor
call
pop
call
push
call
pop
dec
adc
dec
cmp
call
and
pop
dec
and
push
inc
sbb
push
inc
sbb
push
aas
sbb
dec
cmp
call
jmp
call
pop
call
sbb
push
inc
sbb
dec
cmp
and
addr16
sub
pusha
dec
and
pop
dec
and
pop
dec
and
push
inc
push
call
and
imul
gs
sub
pusha
dec
and
pop
dec
and
pop
inc
and
push
inc
and
outs
pop
xor
ins
pop
das
jmp
jmp
daa
call
call
and
imul
jmp
jmp
sub
fs
sub
pop
dec
daa
call
sub
jbe
cmp
jo
xor
jmp
sub
call
jmp
ss
js
cmp
outs
pop
xor
push
das
jmp
das
jmp
sub
pop
dec
sub
jns
cmp
jmp
xor
imul
push
dec
sub
push
push
cmp
ins
pop
xor
imul
push
das
call
sub
jno
cmp
jns
push
jmp
jmp
xor
fs
sub
push
cmp
jbe
cmp
outs
pop
xor
push
jmp
jmp
sub
pop
dec
sub
jne
cmp
jne
aaa
jmp
jmp
sub
gs
sub
pop
dec
sub
pop
dec
and
push
xor
jmp
jmp
sub
pop
dec
daa
inc
dec
dec
(bad)
mov
loop
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fdivrp
(bad)
fdivr
in
in
repnz
add
add
or
adc
rol
icebp
lock
loope
call
fcomp
call
fcmovu
call
fcmovu
call
fcmovu
call
fstp
inc
enter
inc
inc
(bad)
cmp
or
dec
cmp
dec
adc
inc
xor
pop
call
sbb
call
adc
dec
adc
call
and
push
inc
sbb
push
inc
sbb
push
aas
sbb
dec
cmp
call
and
call
and
pop
inc
sbb
dec
sbb
pop
dec
jmp
sub
pusha
dec
and
call
and
push
inc
push
call
and
ins
pop
xor
push
sub
pusha
dec
and
call
and
push
inc
and
outs
pop
xor
ins
pop
xor
gs
sub
arpl
jmp
sub
push
inc
and
imul
jmp
das
jmp
sub
gs
sub
pop
dec
sub
pop
dec
sub
ja
cmp
jb
jmp
xor
imul
call
sub
ins
pop
ss
js
cmp
jno
jmp
jmp
xor
gs
sub
(bad)
js
cmp
jmp
xor
jmp
xor
bound
jmp
xor
jnp
inc
push
cmp
outs
pop
xor
ins
pop
xor
push
dec
sub
ins
pop
ss
jnp
aas
push
cmp
ins
pop
xor
imul
push
das
call
sub
jno
cmp
jns
cmp
jno
jmp
xor
push
das
jmp
sub
jmp
aaa
(bad)
js
cmp
outs
pop
xor
imul
jmp
sub
pop
dec
jmp
xor
jne
aaa
jmp
jmp
sub
fs
sub
popa
dec
sub
inc
cmp
dec
dec
(bad)
mov
loop
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fdivrp
fcmovu
fdivr
in
in
repz
add
add
or
adc
rol
icebp
lock
loope
call
(bad)
call
fcmovu
call
fcmovnu
call
fcmovnu
call
(bad)
inc
enter
inc
inc
(bad)
cmp
or
dec
cmp
dec
adc
inc
aaa
adc
pop
dec
and
pop
inc
sbb
push
aas
pop
call
adc
dec
push
call
and
pop
dec
and
push
inc
sbb
push
inc
sbb
push
aas
sbb
dec
cmp
jmp
daa
jmp
call
and
pop
inc
sbb
dec
sbb
pop
dec
daa
jmp
sub
popa
dec
and
call
and
push
inc
pop
call
and
jmp
sub
popa
dec
jmp
call
and
push
inc
and
outs
pop
xor
outs
pop
xor
push
sub
fs
sub
popa
dec
sub
pop
dec
and
imul
jmp
jmp
sub
jmp
sub
pop
dec
sub
js
cmp
je
cmp
ins
pop
xor
push
das
jmp
das
call
sub
ins
pop
xor
push
cmp
outs
pop
xor
imul
addr16
das
call
sub
ja
cmp
push
aaa
jmp
xor
imul
fs
jmp
xor
jl
inc
(bad)
js
cmp
jno
jmp
xor
imul
bound
jmp
xor
jge
inc
push
cmp
jo
xor
ins
pop
xor
imul
jmp
xor
push
jmp
xor
ins
pop
xor
push
dec
sub
push
push
xor
jmp
jmp
call
jmp
push
cmp
outs
pop
xor
push
push
sub
fs
sub
dec
cmp
dec
dec
(bad)
mov
loop
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
fdivr
in
in
repz
add
add
or
rol
fcomi
icebp
icebp
jmp
loop
call
(bad)
call
fcmovnu
call
fcmovnu
call
fcmovnu
call
(bad)
inc
enter
inc
inc
(bad)
cmp
or
dec
cmp
dec
adc
dec
cmp
call
sbb
push
inc
pop
call
push
dec
dec
sbb
popa
dec
and
call
sbb
push
inc
sbb
push
aas
sbb
dec
cmp
jmp
jmp
call
and
pop
inc
push
call
push
dec
sbb
pusha
push
sub
imul
call
and
pop
dec
and
push
inc
pop
call
jmp
xor
push
push
daa
jmp
call
and
pop
dec
and
jmp
xor
addr16
sub
gs
sub
bound
call
jmp
xor
jbe
cmp
ins
pop
xor
imul
jmp
sub
pop
dec
sub
jbe
cmp
jbe
cmp
outs
pop
xor
imul
push
dec
sub
push
xor
jl
aas
push
jmp
xor
ins
pop
xor
push
dec
sub
jne
cmp
jl
aas
push
cmp
outs
pop
xor
ins
pop
xor
addr16
xor
bound
(bad)
jl
inc
(bad)
jp
push
cmp
outs
pop
xor
ins
pop
xor
gs
das
jmp
xor
jle
inc
(bad)
js
cmp
jmp
xor
imul
arpl
jmp
xor
jle
inc
push
cmp
jo
xor
ins
pop
xor
imul
jmp
das
(bad)
jnp
aas
push
jmp
xor
push
das
jmp
sub
call
sub
js
cmp
jae
jmp
das
jmp
sub
gs
sub
dec
cmp
dec
dec
(bad)
mov
jecxz
(bad)
fcmovnu
loopne
fcmovnu
loopne
fcmovnu
loopne
fcmovu
(bad)
fcmovu
(bad)
in
in
hlt
hlt
hlt
inc
add
add
or
rol
fcomi
icebp
bnd
loop
call
(bad)
call
fcmovnu
call
fcmovnu
call
fcmovnu
(bad)
fcomp
fdivrp
(bad)
inc
inc
(bad)
cmp
or
dec
ds
dec
call
and
push
inc
sbb
push
inc
pop
call
pop
dec
dec
sbb
bound
call
and
push
inc
sbb
push
inc
sbb
push
aas
sbb
dec
ds
gs
sub
arpl
call
call
pop
call
push
dec
sbb
bound
jmp
sub
call
and
pop
dec
and
push
inc
and
pop
dec
sub
outs
pop
xor
imul
jmp
sub
pop
dec
and
push
push
xor
imul
jmp
call
jmp
xor
js
cmp
outs
pop
xor
push
das
jmp
das
jmp
call
sub
ja
cmp
jmp
xor
ins
pop
xor
push
xor
popa
push
sub
push
ins
inc
push
cmp
jno
jmp
xor
push
xor
popa
push
sub
(bad)
jle
inc
push
cmp
jno
jmp
xor
jmp
cs
jp
inc
(bad)
jge
inc
push
cmp
jo
xor
jmp
xor
arpl
jl
inc
(bad)
jnp
aas
push
push
xor
jmp
das
jmp
das
(bad)
jle
inc
(bad)
jns
cmp
jmp
xor
ins
pop
xor
gs
call
sub
jp
aas
push
cmp
jo
xor
jmp
xor
fs
sub
pop
dec
sub
je
cmp
jbe
cmp
ins
pop
xor
push
push
sub
dec
dec
(bad)
mov
jecxz
(bad)
fcmovnu
loopne
fcmovnu
loopne
fcmovnu
loopne
fcmovu
(bad)
fcmovu
(bad)
in
in
hlt
hlt
hlt
inc
add
add
or
rol
fcomi
icebp
bnd
jecxz
call
(bad)
call
fcmovnu
call
fcmovnu
call
fcmovnu
(bad)
fcomp
fdivrp
(bad)
inc
inc
(bad)
cmp
or
push
ds
dec
sbb
pop
dec
and
push
inc
sbb
push
inc
pop
call
pop
dec
adc
jmp
daa
call
call
sbb
push
inc
sbb
push
aas
sbb
dec
inc
sbb
push
sub
bound
call
call
pop
call
pop
call
sbb
fs
sub
push
jmp
daa
call
and
pop
dec
and
push
inc
and
pop
dec
sub
jo
xor
imul
jmp
sub
pop
dec
call
push
push
xor
imul
jmp
call
jmp
xor
jns
cmp
jo
xor
jmp
das
jmp
sub
(bad)
js
cmp
push
jmp
xor
imul
arpl
jmp
xor
jg
inc
push
cmp
jb
aaa
push
xor
jmp
push
cmp
sub
js
cmp
push
jmp
jmp
cs
js
aas
inc
data16
jb
aaa
push
jmp
xor
bound
(bad)
jnp
inc
(bad)
jg
inc
push
cmp
jno
jmp
jmp
xor
popa
push
cs
jnp
inc
(bad)
jnp
aas
push
jmp
xor
outs
pop
xor
push
dec
sub
jbe
cmp
push
aaa
jmp
xor
imul
push
call
jmp
ss
jns
cmp
outs
pop
xor
push
das
jmp
dec
sbb
(bad)
mov
jecxz
(bad)
fcmovnu
loopne
fcmovnu
loopne
fsub
loope
fcmovnu
loopne
fcmovnu
(bad)
in
in
hlt
hlt
hlt
inc
add
add
or
rol
fcomi
icebp
bnd
jecxz
call
(bad)
call
fcmovnu
call
fcmovnu
call
fcmovnu
(bad)
(bad)
fdivrp
(bad)
inc
inc
(bad)
cmp
or
dec
cmp
adc
push
inc
sbb
call
sbb
push
inc
pop
call
sbb
dec
cmp
jmp
call
call
sbb
push
inc
sbb
push
aas
sbb
push
inc
push
jmp
sub
popa
push
call
call
and
pop
inc
pop
call
push
jmp
sub
jmp
sub
pusha
dec
and
call
and
pusha
dec
sub
jno
xor
push
jmp
sub
arpl
call
daa
call
daa
push
aaa
push
xor
jmp
sub
call
sub
imul
push
jmp
xor
imul
push
das
call
sub
js
cmp
push
aaa
jmp
xor
ins
pop
xor
push
das
jmp
xor
sub
jnp
push
push
jmp
xor
jmp
cmp
sub
jns
aas
push
cmp
jb
aaa
jmp
xor
push
inc
push
cmp
jb
cmp
ins
pop
xor
push
inc
cmp
popa
aaa
push
aaa
jmp
xor
bound
push
inc
gs
jno
jmp
xor
push
xor
pusha
push
sub
jo
cmp
jle
inc
push
cmp
outs
pop
xor
ins
pop
xor
push
dec
sub
push
xor
jp
push
aaa
jmp
xor
imul
push
inc
pop
dec
dec
(bad)
mov
in
(bad)
fsub
loope
fsub
loope
fsub
loope
fcmovnu
loope
(bad)
(bad)
in
in
hlt
hlt
hlt
inc
add
add
or
rol
fcomi
repnz
in
call
fcmovnu
call
(bad)
call
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
(bad)
cmp
or
dec
cmp
adc
pop
inc
pop
call
and
push
inc
sbb
push
inc
sbb
push
inc
sbb
dec
cmp
call
and
fs
call
call
sbb
push
inc
sbb
call
pop
jmp
sub
arpl
call
call
and
push
inc
and
push
inc
push
jmp
das
jmp
jmp
daa
jmp
and
call
and
popa
push
sub
jno
xor
push
das
jmp
sub
fs
sub
pop
dec
daa
call
sub
jne
cmp
jae
jmp
xor
imul
call
sub
imul
push
aaa
jmp
xor
ins
pop
xor
push
dec
sub
js
cmp
push
push
xor
jmp
xor
gs
xor
jg
inc
(bad)
jge
inc
push
cmp
jb
aaa
jmp
jmp
xor
imul
jno
(bad)
jl
inc
push
cmp
je
cmp
jo
aaa
jmp
xor
jno
cmp
test
(bad)
jl
inc
push
cmp
je
cmp
outs
pop
aaa
jmp
xor
jb
cmp
test
(bad)
jnp
aas
push
push
cmp
ins
pop
jmp
push
cmp
xor
jp
push
cmp
jno
jmp
jmp
jmp
xor
push
cmp
jno
jmp
xor
imul
fs
sub
popa
push
sub
push
cmp
ins
pop
xor
ins
pop
xor
push
inc
and
dec
dec
dec
(bad)
mov
in
(bad)
fsub
loope
fsub
loope
fsub
loope
fcmovnu
loope
(bad)
(bad)
out
out
cmc
cmc
cmc
dec
add
add
or
rol
fcomi
repnz
in
call
fcmovnu
call
(bad)
call
(bad)
call
(bad)
(bad)
fcmovu
(bad)
(bad)
inc
inc
(bad)
cmp
or
dec
cmp
adc
pop
dec
and
pop
dec
and
push
inc
sbb
push
inc
sbb
push
aas
sbb
dec
cmp
call
and
arpl
call
call
sbb
call
sbb
push
inc
and
push
sub
call
and
pop
dec
and
pop
inc
and
push
inc
pop
jmp
das
jmp
jmp
sub
popa
dec
call
call
and
bound
push
xor
jmp
sub
gs
sub
pusha
dec
sub
pop
dec
sub
jbe
cmp
je
aaa
jmp
jmp
das
jmp
call
sub
imul
push
cmp
outs
pop
xor
outs
pop
xor
imul
push
ds
jge
inc
push
cmp
jno
jmp
jmp
xor
gs
xor
sub
jg
inc
(bad)
js
cmp
push
cmp
push
xor
push
inc
ins
inc
push
cmp
jne
cmp
jno
cmp
imul
inc
ins
inc
push
cmp
jne
cmp
jno
cmp
push
pop
cmp
test
(bad)
jge
inc
push
cmp
je
cmp
jo
aaa
jmp
xor
push
inc
imul
arpl
push
aaa
jmp
jmp
xor
fs
xor
sub
jp
push
cmp
outs
pop
xor
ins
pop
xor
addr16
das
call
sub
jbe
cmp
push
xor
call
dec
dec
(bad)
mov
in
(bad)
fsub
loope
fsub
loope
fucom
loop
(bad)
loop
fstp
fdivrp
out
out
cmc
cmc
cmc
dec
add
add
or
adc
(bad)
(bad)
fcomi
repz
in
call
fcmovnu
call
(bad)
call
(bad)
call
fstp
(bad)
(bad)
loopne
(bad)
inc
inc
(bad)
cmp
or
dec
cmp
dec
adc
call
call
sbb
push
inc
sbb
push
aas
sbb
dec
cmp
call
and
arpl
call
and
pop
inc
sbb
dec
sbb
pop
dec
and
push
sub
call
and
pop
dec
and
pop
inc
and
push
inc
and
imul
imul
fs
sub
bound
call
call
and
fs
sub
jmp
xor
addr16
sub
push
sub
pusha
dec
sub
pop
dec
sub
ja
cmp
je
cmp
ins
pop
xor
imul
imul
jmp
xor
jle
inc
push
cmp
jo
xor
outs
pop
xor
push
xor
popa
push
sub
(bad)
jg
inc
push
cmp
jb
aaa
push
aaa
jmp
xor
fs
xor
jg
inc
inc
push
cmp
jae
cmp
ins
pop
xor
inc
inc
(bad)
jp
push
cmp
jae
cmp
ins
pop
jmp
aaa
inc
outs
inc
(bad)
jns
aas
push
cmp
jae
cmp
imul
imul
test
(bad)
jg
inc
(bad)
js
cmp
push
cmp
push
xor
addr16
xor
xor
sub
js
cmp
push
aaa
jmp
xor
popa
push
das
(bad)
jge
inc
(bad)
jle
inc
push
cmp
jo
xor
jmp
xor
pop
dec
sub
jo
cmp
jl
aas
push
cmp
jo
xor
push
inc
and
dec
dec
dec
(bad)
mov
in
(bad)
fucom
loop
fucom
loop
fucom
loop
fsub
loop
(bad)
fdivrp
out
out
div
idiv
mov
add
or
adc
(bad)
(bad)
fcomi
hlt
hlt
jmp
in
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fneni(8087
loopne
(bad)
inc
inc
(bad)
cmp
dec
adc
jmp
and
pop
dec
and
push
inc
sbb
push
inc
sbb
push
ds
dec
cmp
jmp
jmp
call
and
pop
inc
push
call
push
dec
sbb
pop
dec
jmp
sub
call
and
pop
dec
and
pop
inc
and
push
inc
and
ins
pop
xor
imul
fs
sub
bound
call
daa
call
and
gs
das
push
aaa
jmp
jmp
sub
jmp
sub
pop
dec
sub
js
cmp
jne
cmp
outs
pop
xor
ins
pop
xor
imul
jmp
xor
jle
inc
push
cmp
jo
xor
jmp
xor
bound
push
cmp
(bad)
js
push
cmp
jb
cmp
ins
pop
jmp
xor
jle
inc
inc
imul
push
jmp
aaa
jmp
xor
xor
xor
jl
inc
push
cmp
jne
cmp
outs
pop
cmp
imul
inc
push
(bad)
js
cmp
jne
cmp
outs
pop
cmp
push
jb
inc
imul
je
cmp
ins
pop
aaa
jmp
xor
sub
xor
jnp
aas
push
cmp
jae
cmp
ins
pop
xor
push
inc
addr16
push
xor
imul
bound
jmp
xor
jg
inc
push
cmp
jb
call
and
dec
dec
dec
(bad)
mov
in
(bad)
fucom
loop
fucom
loop
fucom
loop
fsub
loop
(bad)
fdivrp
out
out
div
idiv
mov
add
or
or
ret
(bad)
(bad)
fcomi
hlt
hlt
jmp
in
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fneni(8087
loopne
(bad)
inc
inc
(bad)
cmp
dec
adc
jmp
and
pop
dec
pop
call
call
call
sbb
dec
cmp
daa
jmp
call
and
pop
inc
push
call
push
dec
sbb
pop
dec
sub
push
jmp
daa
call
and
pop
dec
and
pop
inc
and
push
inc
and
outs
pop
xor
imul
fs
sub
arpl
jmp
sub
pop
dec
and
addr16
xor
jne
aaa
jmp
xor
push
push
sub
call
sub
js
cmp
jmp
xor
ins
pop
xor
push
xor
bound
jmp
xor
jle
inc
push
cmp
jb
aaa
push
jmp
jmp
das
push
inc
push
cmp
jae
cmp
outs
pop
aaa
jmp
xor
jl
inc
inc
inc
push
cmp
push
cmp
push
jno
inc
imul
addr16
push
cmp
imul
inc
ins
inc
(bad)
jns
push
push
cmp
push
jo
inc
imul
gs
push
cmp
addr16
xor
jp
inc
inc
imul
fs
je
cmp
outs
pop
cmp
push
xor
outs
pusha
cmp
xor
jnp
inc
push
push
jmp
xor
addr16
xor
arpl
(bad)
jle
inc
(bad)
js
cmp
call
and
dec
dec
dec
(bad)
mov
in
(bad)
fucom
loop
fucom
loop
fucom
loop
fucom
jecxz
fstp
(bad)
call
div
dec
add
add
or
ret
(bad)
(bad)
fcomi
hlt
hlt
jmp
in
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fcomp
(bad)
fsub
loope
(bad)
inc
inc
(bad)
cmp
or
dec
cmp
jmp
and
pop
dec
push
call
sbb
push
inc
sbb
dec
ds
dec
ds
fs
sub
bound
call
and
pop
inc
push
call
pop
call
sbb
popa
push
sub
push
jmp
sub
pop
dec
and
pop
dec
and
pop
inc
and
pop
dec
and
jno
xor
ins
pop
xor
gs
sub
arpl
jmp
sub
pop
dec
and
push
arpl
jmp
xor
imul
jmp
sub
pop
dec
sub
jns
cmp
push
xor
jmp
xor
arpl
jmp
xor
sub
push
cmp
jb
aaa
jmp
xor
push
cmp
test
(bad)
jl
inc
push
cmp
je
cmp
outs
pop
cmp
addr16
xor
jnp
inc
inc
ins
inc
(bad)
jns
push
cmp
jmp
xor
inc
ins
inc
(bad)
jp
aas
(bad)
js
push
cmp
push
jo
inc
ins
inc
(bad)
jp
aas
(bad)
js
push
cmp
imul
inc
outs
inc
(bad)
jns
ds
js
cmp
jmp
xor
inc
ins
inc
(bad)
js
cmp
push
cmp
imul
inc
inc
push
cmp
jb
aaa
push
jmp
xor
popa
push
cs
jp
aas
(bad)
jl
push
cmp
pop
dec
and
(bad)
mov
in
(bad)
fsubp
jecxz
fsubp
jecxz
fsubp
jecxz
fucom
jecxz
(bad)
(bad)
jmp
div
dec
add
add
or
ret
(bad)
(bad)
fcomi
hlt
hlt
jmp
in
(bad)
(bad)
fdivr
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
fsub
loope
(bad)
inc
inc
(bad)
cmp
or
dec
cmp
push
inc
sbb
call
pop
call
sbb
push
inc
sbb
dec
ds
push
inc
sbb
push
sub
bound
call
and
pop
inc
pop
call
pop
call
sbb
fs
sub
imul
arpl
jmp
and
pop
dec
and
pop
inc
and
pop
dec
push
xor
ins
pop
xor
push
sub
fs
sub
pusha
dec
sub
pop
dec
and
push
cmp
outs
pop
xor
push
das
jmp
jmp
sub
pop
push
sub
jp
ds
js
cmp
jno
jmp
xor
ins
pop
xor
gs
das
jmp
xor
(bad)
jp
aas
push
cmp
jae
cmp
outs
pop
aaa
jmp
xor
jb
cmp
test
(bad)
jge
inc
push
cmp
jbe
cmp
jno
cmp
push
push
dec
inc
push
push
cmp
imul
dec
outs
inc
(bad)
jl
inc
(bad)
jp
aas
push
cmp
(bad)
jge
inc
dec
jo
(bad)
jl
inc
(bad)
jp
inc
push
cmp
(bad)
js
inc
dec
jo
(bad)
jnp
inc
(bad)
jp
push
jmp
jmp
cmp
mov
inc
imul
je
cmp
ins
pop
jmp
xor
sub
sub
push
push
aaa
jmp
jmp
das
push
cmp
sub
addr16
dec
(bad)
mov
out
(bad)
fsubp
jecxz
fsubp
jecxz
fsubp
jecxz
fucom
jecxz
(bad)
(bad)
jmp
div
dec
add
add
or
ret
(bad)
(bad)
fcomi
cmc
cmc
jmp
out
(bad)
(bad)
fdivr
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
fsub
loope
(bad)
inc
inc
(bad)
cmp
or
dec
cmp
push
inc
and
bound
call
pop
call
sbb
push
inc
sbb
dec
ds
push
inc
pop
jmp
sub
popa
dec
and
call
pop
call
pop
call
push
jmp
sub
jmp
sub
pusha
dec
and
pop
dec
and
call
daa
push
xor
ins
pop
xor
push
sub
fs
sub
popa
push
sub
pop
dec
jmp
(bad)
js
cmp
outs
pop
xor
push
das
jmp
das
jmp
jmp
sub
jnp
aas
(bad)
jns
cmp
jmp
xor
ins
pop
xor
gs
xor
imul
(bad)
jp
aas
push
cmp
je
cmp
jo
cmp
push
xor
jo
cmp
xchg
jle
inc
(bad)
js
cmp
push
cmp
imul
dec
jo
(bad)
jl
inc
(bad)
jp
aas
push
cmp
(bad)
jnp
inc
dec
dec
(bad)
jge
inc
(bad)
jl
inc
push
jmp
cmp
jns
inc
dec
dec
(bad)
jle
inc
(bad)
jl
inc
push
jmp
cmp
jae
aas
dec
dec
(bad)
jge
inc
(bad)
jp
aas
push
jmp
cmp
imul
xchg
inc
imul
cmp
arpl
outs
pop
cmp
push
xor
jl
inc
inc
push
push
cmp
jae
cmp
outs
pop
jmp
xor
imul
sub
jl
aas
call
dec
(bad)
mov
out
(bad)
fsubp
jecxz
(bad)
in
(bad)
in
fsubp
in
(bad)
loopne
call
div
dec
add
add
or
ret
(bad)
(bad)
fcomi
cmc
cmc
jmp
out
(bad)
(bad)
(bad)
(bad)
fdivrp
fcmovu
(bad)
fcmovu
(bad)
fucom
loop
(bad)
enter
inc
inc
(bad)
cmp
or
dec
cmp
call
and
popa
dec
and
pop
inc
push
call
sbb
push
inc
sbb
dec
ds
push
inc
and
addr16
sub
popa
dec
and
call
and
push
inc
pop
call
push
jmp
das
jmp
jmp
daa
jmp
and
call
and
pop
dec
sub
jae
xor
jmp
sub
gs
sub
bound
call
jmp
xor
jmp
xor
imul
push
xor
gs
sub
(bad)
jl
inc
(bad)
jns
cmp
push
xor
jmp
xor
imul
(bad)
jl
inc
push
cmp
jne
cmp
jno
cmp
push
pusha
cmp
mov
inc
push
push
cmp
imul
jbe
inc
dec
jb
(bad)
jge
inc
(bad)
jl
inc
push
jmp
cmp
ja
inc
dec
jae
(bad)
jle
inc
(bad)
jge
inc
(bad)
js
aas
jmp
cmp
jne
inc
dec
je
(bad)
jg
inc
(bad)
jge
inc
(bad)
jns
inc
push
cmp
outs
pusha
cmp
mov
inc
ins
inc
(bad)
jl
inc
(bad)
jns
aas
push
cmp
imul
inc
ins
inc
(bad)
jp
aas
(bad)
js
push
cmp
addr16
xor
jbe
inc
inc
ins
inc
(bad)
js
cmp
push
cmp
imul
inc
ins
inc
call
sub
dec
dec
dec
(bad)
mov
out
(bad)
(bad)
in
(bad)
in
(bad)
in
fsubp
in
(bad)
loopne
call
div
dec
add
add
or
(bad)
vpand
div
jmp
out
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fucom
jecxz
mov
inc
(bad)
cmp
or
dec
cmp
call
and
pusha
dec
and
pop
inc
sbb
call
dec
sbb
pop
dec
and
addr16
sub
popa
dec
and
pop
dec
and
pop
dec
and
push
inc
pop
call
pop
jmp
xor
push
jmp
jmp
call
call
and
pop
dec
sub
je
jmp
xor
addr16
sub
push
sub
bound
call
daa
push
push
cmp
jo
xor
jmp
xor
fs
jmp
cs
jge
inc
(bad)
jp
push
push
jmp
jmp
xor
push
inc
inc
push
cmp
jne
cmp
jb
cmp
push
xor
dec
outs
inc
(bad)
jnp
aas
(bad)
jp
aas
push
cmp
push
dec
dec
(bad)
jg
inc
(bad)
jl
inc
(bad)
jns
inc
push
cmp
jne
inc
dec
jne
inc
ins
inc
(bad)
jp
inc
push
cmp
jb
inc
dec
jbe
inc
ins
inc
(bad)
jnp
inc
push
jmp
cmp
mov
dec
outs
inc
(bad)
jl
inc
(bad)
jp
aas
push
jmp
aaa
inc
js
inc
imul
je
cmp
imul
jo
cmp
xchg
inc
push
cmp
jae
cmp
ins
pop
xor
(bad)
jnp
inc
inc
push
sub
(bad)
mov
out
(bad)
(bad)
in
(bad)
in
(bad)
in
fsubp
in
fsubp
loopne
jmp
clc
clc
dec
add
add
or
(bad)
fcomi
div
jmp
out
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fucom
jecxz
mov
inc
(bad)
cmp
or
dec
cmp
and
call
sbb
call
dec
sbb
pop
dec
and
jmp
and
pop
dec
and
pop
dec
and
push
inc
and
push
inc
and
ins
pop
xor
push
jmp
jmp
call
call
and
pusha
push
sub
jne
aaa
jmp
jmp
sub
jmp
sub
pop
dec
daa
push
cmp
ja
cmp
jno
jmp
xor
imul
gs
das
jmp
cs
jge
inc
(bad)
jnp
aas
push
cmp
jb
aaa
jmp
jmp
xor
push
xor
(bad)
jle
inc
push
cmp
push
cmp
imul
outs
pop
cmp
mov
inc
push
(bad)
jnp
inc
push
push
cmp
jb
dec
dec
inc
imul
push
cmp
jb
aas
dec
ja
inc
ins
inc
(bad)
jl
inc
push
push
dec
js
inc
outs
inc
(bad)
jge
inc
push
aas
jmp
cmp
mov
dec
dec
(bad)
jle
inc
(bad)
jl
inc
push
inc
jmp
(bad)
jns
inc
dec
dec
(bad)
jge
inc
(bad)
jp
aas
push
cmp
jmp
aaa
inc
jb
(bad)
jge
inc
push
cmp
je
cmp
outs
pop
aaa
jmp
xor
je
cmp
jmp
xor
dec
dec
dec
(bad)
mov
out
(bad)
(bad)
in
loopne
in
loopne
in
(bad)
in
fnstsw
loope
jmp
clc
clc
dec
add
add
or
(bad)
fcomi
div
jmp
out
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovnu
loopne
fcmovnu
loopne
fsubp
in
(bad)
enter
inc
inc
push
sub
dec
sbb
arpl
call
and
pop
inc
sbb
call
dec
sbb
pusha
dec
daa
jmp
sub
pop
dec
and
pop
dec
and
pop
dec
and
push
inc
pop
call
and
outs
pop
xor
push
push
sub
bound
call
call
and
arpl
push
aaa
jmp
xor
push
push
sub
bound
call
daa
push
cmp
ja
cmp
jo
xor
jmp
xor
gs
das
jmp
cs
jge
inc
(bad)
jl
aas
push
push
jmp
jmp
xor
imul
(bad)
jle
inc
(bad)
jns
cmp
push
cmp
ins
pop
xor
dec
jno
(bad)
jge
inc
(bad)
jnp
aas
push
cmp
jmp
cmp
mov
dec
outs
inc
(bad)
jge
inc
(bad)
jl
inc
push
push
cmp
dec
jno
(bad)
jg
inc
(bad)
jge
inc
push
jmp
cmp
mov
dec
jae
inc
ins
inc
(bad)
js
aas
jmp
cmp
xor
mov
test
inc
imul
addr16
jmp
cmp
jb
aas
dec
je
(bad)
jg
inc
(bad)
jnp
inc
(bad)
js
push
cmp
imul
inc
ins
inc
(bad)
js
cmp
push
cmp
push
pop
cmp
xchg
jmp
xor
dec
dec
dec
(bad)
mov
call
in
loopne
in
loopne
in
(bad)
in
fnstsw
loope
jmp
clc
clc
dec
add
add
or
(bad)
fcomi
div
jmp
out
(bad)
fcmovu
(bad)
fcmovnu
loopne
fcmovnu
loopne
fcmovnu
loopne
fsubp
in
(bad)
inc
push
sub
call
sbb
fs
daa
call
and
pop
inc
sbb
call
sbb
dec
cmp
sub
push
sub
pop
dec
and
pop
dec
pop
call
and
push
inc
sbb
jmp
xor
push
dec
jmp
and
call
and
fs
sub
jmp
xor
push
push
jmp
call
sub
je
cmp
jns
push
cmp
outs
pop
xor
jmp
xor
push
xor
sub
(bad)
js
aas
push
cmp
jmp
cmp
outs
pop
cmp
mov
inc
inc
(bad)
jl
inc
(bad)
jns
inc
push
cmp
dec
ja
inc
outs
inc
(bad)
jge
inc
push
inc
push
inc
call
jl
inc
jb
inc
imul
xchg
jg
dec
jne
inc
jo
(bad)
jl
inc
push
inc
dec
jle
dec
jno
inc
push
push
cmp
jle
inc
call
jne
inc
ins
inc
(bad)
jp
inc
push
cmp
ins
pop
cmp
mov
dec
outs
inc
(bad)
jnp
aas
(bad)
jns
push
cmp
push
push
dec
outs
inc
(bad)
jns
push
cmp
jb
cmp
push
xor
addr16
xor
test
jmp
xor
dec
dec
dec
(bad)
mov
call
in
loopne
in
loopne
in
(bad)
in
fnstsw
loope
jmp
jmp
dec
add
add
or
(bad)
fcomi
div
jmp
out
(bad)
fcmovu
(bad)
fcmovnu
loopne
fcmovnu
loopne
fcmovnu
loopne
fsubp
in
(bad)
inc
inc
push
or
push
inc
sbb
call
call
sbb
pop
inc
sbb
call
push
jmp
xor
push
das
jmp
jmp
sub
bound
call
sub
gs
xor
jp
inc
push
push
cmp
jo
cmp
outs
pop
cmp
imul
inc
dec
(bad)
jp
inc
(bad)
jp
inc
push
inc
push
inc
inc
jnp
inc
jae
inc
ins
dec
(bad)
jp
dec
call
sbb
jns
inc
jb
inc
mov
xchg
test
(bad)
jg
dec
jnp
inc
push
call
call
sbb
mov
inc
imul
mov
xchg
mov
xchg
test
xchg
and
jge
inc
mov
nop
ins
call
test
xchg
and
jle
inc
mov
mov
mov
xchg
test
xchg
sbb
test
dec
vpshlq
pop
dec
jns
inc
imul
pop
call
push
inc
jb
(bad)
jl
inc
push
inc
(bad)
jns
inc
dec
jne
(bad)
jle
inc
(bad)
js
push
jmp
jmp
(bad)
jg
inc
jmp
xor
dec
dec
inc
(bad)
mov
call
out
loope
out
loope
out
loopne
out
fnstsw
loope
jmp
jmp
dec
add
add
or
vshufps
div
(bad)
call
fstp
(bad)
fcmovnu
loopne
fsub
loope
fsub
loope
(bad)
in
enter
dec
dec
dec
inc
sbb
addr16
xor
jae
cmp
outs
pop
cmp
ins
pop
cmp
ins
pop
cmp
imul
push
aas
(bad)
jg
dec
(bad)
jle
dec
(bad)
jns
dec
(bad)
js
inc
(bad)
js
dec
push
inc
(bad)
jns
dec
dec
jne
(bad)
jg
dec
(bad)
jg
dec
(bad)
jl
dec
push
dec
inc
pop
dec
jne
inc
jno
(bad)
jp
dec
dec
sbb
jl
dec
js
inc
jb
call
xchg
pop
pop
dec
jbe
inc
mov
cwde
mov
xchg
and
sbb
and
jnp
inc
(bad)
ins
call
mov
xchg
test
xchg
and
jg
inc
xchg
outs
jmp
lea
xchg
mov
xchg
xchg
xchg
and
jl
call
xchg
jb
popf
mov
mov
xchg
mov
xchg
test
mov
call
xchg
je
lahf
nop
outs
call
mov
xchg
xchg
mov
dec
xchg
je
mov
mov
cwde
mov
xchg
mov
xchg
and
jp
call
xchg
outs
call
xchg
xchg
test
pop
pop
inc
mov
cwde
mov
xchg
and
jge
dec
jb
push
dec
inc
imul
mov
jmp
out
loope
out
loope
out
loopne
out
fnstsw
loope
in
jmp
stc
dec
add
add
or
vshufps
div
(bad)
call
loopne
(bad)
(bad)
in
loope
in
loope
in
in
jmp
jmp
call
cmp
jnp
dec
inc
outs
dec
(bad)
js
dec
push
dec
push
inc
push
dec
inc
jae
(bad)
jl
dec
(bad)
jnp
dec
(bad)
jns
dec
push
dec
(bad)
jge
push
dec
jne
inc
jno
(bad)
jl
dec
push
dec
inc
jg
dec
jbe
inc
jb
(bad)
jnp
push
dec
and
jle
dec
jp
inc
je
call
xchg
nop
and
sbb
jge
dec
ja
call
push
xchg
test
test
xchg
and
jge
inc
nop
outs
call
mov
xchg
mov
xchg
test
nop
and
jnp
call
xchg
jb
popf
(bad)
outs
call
mov
xchg
test
mov
call
jne
mov
lea
fwait
mov
xchg
xchg
mov
imul
mov
mov
mov
cwde
mov
xchg
and
popa
jmp
jb
popf
(bad)
ins
call
mov
xchg
test
jl
call
jb
popf
(bad)
ins
call
xchg
xchg
and
pusha
inc
(bad)
ins
call
mov
xchg
test
xchg
and
jg
inc
jg
dec
ins
push
mov
(bad)
jmp
out
jmp
call
jmp
out
jmp
jecxz
(bad)
in
jmp
(bad)
stc
stc
stc
dec
add
add
or
vshufps
clc
clc
(bad)
in
in
jmp
jecxz
in
jecxz
out
jecxz
out
in
call
call
rcl
jmp
push
(bad)
jg
push
inc
ins
dec
(bad)
jns
dec
(bad)
js
dec
push
dec
push
dec
inc
je
(bad)
jle
dec
(bad)
jle
dec
(bad)
jnp
dec
push
dec
inc
jle
inc
je
inc
jno
(bad)
js
push
dec
sbb
jl
inc
js
inc
jno
call
xchg
sbb
jle
dec
jns
inc
imul
xchg
test
and
and
xchg
call
mov
cwde
mov
xchg
xchg
xchg
test
pop
popa
jmp
xchg
jno
pushf
mov
mov
cwde
mov
xchg
xchg
mov
jmp
cwde
jbe
mov
lea
lea
mov
pop
jo
test
xchg
jae
sahf
nop
outs
call
mov
test
xchg
xchg
stos
pushf
jp
movs
xchg
jne
lahf
xchg
jo
popf
(bad)
ins
call
xchg
lea
jbe
cmps
cwde
ja
mov
lea
mov
xchg
pop
push
jmp
lea
mov
xchg
xchg
nop
and
pop
call
xchg
jno
fwait
lea
xchg
xchg
test
and
mov
xchg
jmp
imul
enter
in
lock
call
jmp
in
jmp
call
call
(bad)
cli
cli
cli
dec
add
add
or
mov
(bad)
cli
cli
(bad)
out
in
in
jmp
in
jmp
out
jmp
out
jmp
out
jmp
jmp
push
push
popa
push
inc
inc
push
(bad)
jle
dec
(bad)
jl
dec
(bad)
jp
dec
push
dec
(bad)
jnp
push
dec
jbe
inc
jb
(bad)
jge
push
push
dec
inc
sbb
jp
inc
jbe
inc
outs
push
dec
test
lea
dec
jl
inc
je
call
mov
xchg
and
and
mov
inc
mov
call
call
dec
jle
jmp
nop
jo
fwait
mov
mov
xchg
mov
xchg
test
mov
jmp
xchg
je
sahf
nop
jo
fwait
lea
fwait
mov
xchg
mov
mov
jae
test
xchg
jne
lahf
xchg
jo
sahf
nop
jo
call
call
popf
jl
cmps
cwde
ja
mov
xchg
jno
pushf
(bad)
outs
call
mov
popf
jl
test
jns
mov
xchg
jno
sahf
nop
jno
cdq
mov
xchg
test
mov
pushf
jnp
movs
xchg
jne
lahf
xchg
jo
sahf
nop
outs
call
xchg
pop
js
movs
xchg
jne
lahf
xchg
jo
fwait
mov
mov
xchg
xchg
mov
call
xchg
jne
lahf
nop
jo
cdq
mov
xchg
mov
xchg
test
lea
pusha
inc
jno
dec
leave
retf
out
lock
call
jmp
out
jmp
out
jmp
(bad)
cld
cld
cld
dec
add
add
or
mov
(bad)
cli
cli
(bad)
out
in
in
jmp
in
jmp
out
jmp
out
jmp
out
(bad)
call
aam
jmp
jmp
inc
dec
jbe
(bad)
jg
push
(bad)
jle
push
(bad)
jl
push
push
dec
(bad)
jg
push
dec
pop
inc
je
(bad)
jg
push
(bad)
jp
push
dec
and
xchg
inc
jne
(bad)
jle
push
call
xchg
pop
pop
dec
jp
inc
mov
cwde
mov
xchg
test
xchg
and
and
jge
dec
nop
jo
popf
(bad)
outs
call
xchg
xchg
xchg
pop
jmp
xchg
jb
pushf
(bad)
outs
call
mov
xchg
xchg
lea
jbe
cmps
cdq
js
mov
(bad)
outs
call
mov
xchg
test
lahf
xchg
je
stos
popf
jge
cmps
cwde
js
mov
xchg
jb
pushf
(bad)
jno
xchg
mov
mov
lods
mov
jnp
movs
xchg
jbe
mov
xchg
jae
call
jmp
jge
movs
cwde
js
mov
xchg
jae
fwait
mov
xchg
mov
lahf
xchg
jne
lods
lahf
jg
cmps
cdq
jns
mov
xchg
jb
pushf
(bad)
jo
cwde
mov
test
cmps
call
mov
(bad)
outs
call
imul
test
xchg
test
cmps
cdq
js
mov
mov
cwde
mov
xchg
mov
xchg
and
jg
inc
jb
enter
in
out
lock
call
jmp
call
call
out
(bad)
cld
cld
cld
dec
add
add
or
mov
(bad)
cli
cli
(bad)
out
out
in
jmp
out
jmp
call
jmp
(bad)
call
aam
jmp
outs
jmp
dec
dec
js
inc
jae
(bad)
jle
push
(bad)
jns
push
inc
sbb
jp
inc
pop
inc
jo
dec
and
jle
dec
jnp
inc
jne
call
mov
xchg
and
popa
dec
jl
inc
mov
fwait
mov
xchg
xchg
xchg
xchg
xchg
test
lea
jmp
xchg
jb
call
call
test
lea
ja
movs
xchg
jbe
lahf
xchg
jb
pushf
mov
pushf
mov
xchg
mov
sub
xchg
js
stos
pushf
jnp
mov
xchg
jae
lahf
xchg
jae
pushf
(bad)
jno
xchg
mov
lahf
xchg
jbe
scas
mov
jl
movs
xchg
js
mov
xchg
je
call
jmp
sahf
jg
test
jnp
movs
xchg
ja
mov
nop
je
cwde
mov
stos
lahf
cmp
mov
jl
movs
cwde
js
movs
xchg
ja
lahf
xchg
jne
cdq
mov
pushf
nop
je
scas
mov
jl
movs
xchg
js
mov
xchg
je
fwait
lea
xchg
xchg
movs
xchg
jns
lods
sahf
jge
movs
cwde
js
mov
xchg
jb
fwait
lea
xchg
mov
test
cmps
cdq
jns
movs
xchg
js
mov
lea
cdq
mov
xchg
xchg
xchg
test
js
pop
push
jb
retf
(bad)
out
out
icebp
(bad)
jmp
(bad)
jmp
(bad)
call
lock
cld
cld
cld
dec
add
add
or
adc
mov
sti
sti
sti
(bad)
out
out
out
jmp
out
jmp
jmp
jmp
in
in
call
aad
push
jo
outs
gs
dec
jp
inc
push
inc
jo
dec
and
jge
inc
jns
inc
jae
call
xchg
mov
pusha
dec
jnp
inc
mov
cwde
mov
xchg
xchg
xchg
and
dec
arpl
popf
(bad)
jo
pushf
(bad)
outs
call
mov
xchg
xchg
nop
and
and
xchg
jbe
mov
(bad)
jo
call
call
test
cmps
cwde
jp
cmps
cwde
jns
mov
xchg
jb
sahf
nop
jno
call
jmp
sahf
jle
cmps
cdq
jp
mov
xchg
jbe
lahf
xchg
je
cwde
mov
mov
mov
jg
cmps
call
mov
nop
je
pushf
(bad)
je
mov
test
scas
mov
jle
cmps
cdq
jp
cmps
cwde
jns
mov
lea
stos
popf
cmp
movs
test
lods
lahf
jg
cmps
call
mov
(bad)
je
fwait
(bad)
je
mov
test
lods
mov
jnp
movs
xchg
js
mov
xchg
je
xchg
mov
mov
mov
jl
mov
xchg
jne
sahf
xchg
jae
cdq
mov
xchg
xchg
cwde
jns
test
xchg
ja
sahf
nop
jno
pushf
mov
cdq
mov
xchg
mov
jno
push
jae
retf
int3
int3
(bad)
out
lock
(bad)
jmp
(bad)
jmp
(bad)
jmp
icebp
icebp
(bad)
std
std
std
dec
add
add
or
adc
mov
sti
sti
sti
(bad)
out
out
out
jmp
out
jmp
jmp
jmp
in
in
call
(bad)
(bad)
push
jae
je
push
call
jl
inc
js
inc
jb
dec
test
mov
dec
jl
inc
ja
call
xchg
xchg
test
mov
arpl
mov
inc
lea
cdq
mov
xchg
mov
xchg
xchg
xchg
test
mov
call
xchg
jb
call
call
test
xchg
test
movs
xchg
jns
movs
xchg
ja
mov
(bad)
jno
fwait
mov
xchg
mov
xchg
xchg
cmps
call
movs
xchg
js
mov
xchg
jne
popf
(bad)
je
xchg
mov
cmps
cdq
jl
scas
mov
jge
movs
xchg
jns
movs
xchg
jns
mov
mov
xchg
jns
mov
xchg
lods
mov
jle
cmps
fwait
jl
movs
cwde
jnp
mov
nop
jbe
mov
xchg
mov
xchg
lods
mov
jle
test
xchg
jp
popf
nop
jbe
test
cmps
mov
scas
mov
jle
test
cwde
jnp
mov
(bad)
jne
mov
xchg
mov
test
stos
popf
jg
cmps
call
mov
lea
sahf
xchg
jbe
mov
test
lods
sahf
cmp
cdq
jnp
mov
xchg
ja
popf
nop
je
xchg
mov
mov
lahf
jg
cmps
cdq
jnp
mov
xchg
jae
fwait
mov
cdq
mov
test
(bad)
jns
ja
retf
int3
into
(bad)
in
lock
jmp
(bad)
jmp
(bad)
jmp
(bad)
std
std
std
dec
add
add
or
adc
mov
cld
cld
cld
push
out
out
jmp
call
jmp
out
jmp
out
jmp
jmp
push
jne
jns
pop
call
jle
dec
jp
inc
jne
call
xchg
mov
popa
dec
jnp
inc
mov
xchg
mov
xchg
test
xchg
test
pop
dec
nop
jb
fwait
mov
xchg
mov
xchg
mov
xchg
xchg
nop
sub
sub
xchg
jbe
mov
(bad)
jno
cdq
mov
cdq
mov
xchg
mov
xchg
xchg
cmps
call
mov
xchg
je
sahf
xchg
je
call
jmp
popf
jg
cmps
cdq
jnp
mov
xchg
js
lahf
xchg
jbe
cwde
mov
cmps
call
stos
sahf
cmp
call
movs
xchg
jnp
sahf
xchg
ja
mov
cmps
mov
mov
xchg
lods
lahf
cmp
test
jle
mov
xchg
js
mov
mov
mov
mov
scas
mov
cmp
popf
cmp
mov
fwait
cmp
mov
xchg
lods
mov
cmp
fwait
jg
mov
xchg
jbe
mov
xchg
mov
mov
scas
mov
jg
test
jle
movs
xchg
jnp
mov
nop
ja
mov
xchg
scas
mov
jle
movs
cwde
jp
movs
xchg
jp
mov
mov
pushf
xchg
ja
scas
mov
jle
movs
xchg
jns
mov
xchg
jne
pushf
(bad)
jae
xchg
(bad)
jnp
jns
int3
int
(bad)
out
icebp
repnz
in
in
out
(bad)
in
in
out
(bad)
in
in
out
(bad)
jmp
out
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
adc
mov
cld
cld
cld
push
lock
call
jmp
(bad)
call
jmp
(bad)
jmp
out
call
fcomp
(bad)
jns
js
jle
pop
call
and
jge
dec
jp
inc
ins
call
and
and
jle
dec
mov
cdq
mov
xchg
xchg
xchg
xchg
xchg
test
mov
push
call
lea
cwde
mov
xchg
mov
xchg
xchg
xchg
xchg
jp
mov
xchg
je
pushf
(bad)
jae
fwait
mov
xchg
mov
xchg
mov
test
fwait
jge
mov
xchg
ja
mov
(bad)
jne
xchg
mov
stos
sahf
cmp
test
jg
movs
cwde
jnp
movs
cwde
jnp
mov
(bad)
jbe
cmps
fwait
cmp
cmps
mov
lods
mov
cmp
pushf
jg
cmps
call
mov
test
mov
scas
mov
cmp
sahf
cmp
cdq
jg
mov
movs
mov
mov
(bad)
push
mov
test
test
cmp
xchg
jle
cmps
call
mov
mov
scas
mov
test
stos
lahf
cmp
call
scas
mov
mov
mov
xchg
lods
mov
cmp
mov
xchg
js
mov
mov
mov
mov
lods
lahf
cmp
fwait
jle
cmps
call
popf
xchg
ja
call
jmp
jge
mov
xchg
jns
mov
jg
(bad)
jle
jl
int
iret
(bad)
out
lock
in
in
out
(bad)
in
in
out
(bad)
in
in
out
(bad)
jmp
out
(bad)
jmp
in
push
repnz
(bad)
(bad)
(bad)
dec
add
add
or
adc
mov
cld
cld
cld
push
icebp
icebp
(bad)
call
jmp
(bad)
jmp
jmp
(bad)
in
out
out
call
(bad)
(bad)
jl
jl
test
call
and
and
dec
jl
call
mov
xchg
xchg
xchg
test
nop
sub
and
sub
fwait
mov
xchg
mov
xchg
mov
xchg
mov
test
nop
test
xchg
jns
mov
(bad)
jb
call
call
jo
cmps
cdq
jge
movs
cwde
jnp
mov
xchg
jne
popf
xchg
jbe
cdq
lea
mov
sahf
cmp
cmps
cdq
jge
mov
xchg
jp
sahf
xchg
jns
cdq
mov
lods
mov
xchg
stos
sahf
cmp
fwait
jle
cmps
call
popf
xchg
jns
cmps
pushf
cmp
test
xchg
lods
mov
cmp
popf
cmp
mov
stos
mov
mov
mov
mov
mov
scas
mov
xchg
test
xchg
jg
mov
mov
mov
test
push
mov
xchg
cmps
call
mov
stos
nop
push
mov
xchg
test
xchg
jg
lods
mov
nop
push
xchg
lods
mov
cmp
cdq
cmp
xchg
jnp
scas
mov
mov
scas
mov
cmp
popf
cmp
call
fwait
(bad)
js
scas
mov
xchg
stos
sahf
cmp
movs
xchg
jl
mov
sub
cmp
iret
sar
out
icebp
repz
in
out
out
(bad)
in
out
out
(bad)
in
out
out
(bad)
in
in
out
(bad)
in
in
in
push
repnz
(bad)
(bad)
(bad)
dec
add
add
or
mov
(bad)
std
std
push
icebp
icebp
(bad)
jmp
jmp
(bad)
jmp
jmp
(bad)
in
out
lock
fcomp
(bad)
jg
jle
mov
call
test
pop
dec
dec
jb
cwde
mov
xchg
mov
xchg
xchg
test
lea
ins
jmp
nop
je
cwde
mov
cwde
mov
xchg
mov
xchg
xchg
xchg
mov
movs
cwde
jl
mov
xchg
jne
pushf
nop
je
fwait
(bad)
je
xchg
mov
xchg
mov
test
jg
cmps
call
mov
xchg
jns
fwait
(bad)
jbe
call
jmp
jg
movs
cdq
jge
movs
cwde
jge
mov
xchg
jns
scas
mov
mov
lods
mov
cmp
cmps
call
test
test
mov
cmps
mov
scas
mov
test
lods
lahf
test
cmps
fwait
cmp
cwde
cmp
lods
nop
push
cmps
mov
mov
mov
scas
mov
xchg
movs
cdq
cmp
movs
(bad)
(bad)
mov
stos
xchg
push
movs
mov
lods
mov
xchg
movs
fwait
test
mov
lods
xchg
push
mov
mov
mov
lods
mov
cmp
lahf
xchg
mov
stos
(bad)
push
mov
test
test
cmp
xchg
jge
lods
mov
(bad)
push
mov
cmp
popf
cmp
cwde
jg
pushf
xchg
jp
stos
lahf
test
mov
mov
lods
mov
cmp
call
xchg
xchg
add
push
icebp
repz
in
out
lock
in
out
lock
in
out
lock
in
in
out
(bad)
in
in
in
push
repz
(bad)
(bad)
(bad)
dec
add
add
or
mov
(bad)
std
std
push
repnz
jmp
(bad)
jmp
out
(bad)
jmp
out
(bad)
out
lock
(bad)
(bad)
(bad)
add
jo
xchg
xchg
test
nop
test
mov
ins
call
lea
xchg
mov
xchg
mov
xchg
mov
pop
jno
mov
xchg
jbe
call
call
mov
xchg
mov
call
lahf
xchg
js
lahf
xchg
ja
popf
xchg
js
cwde
lea
call
jmp
cwde
jle
mov
xchg
jl
popf
xchg
jns
pushf
xchg
jp
scas
mov
xchg
stos
popf
cmp
pushf
cmp
fwait
cmp
xchg
jle
popf
xchg
jl
mov
mov
mov
mov
scas
mov
test
lods
lahf
test
test
cwde
cmp
sahf
xchg
mov
test
mov
scas
mov
xchg
stos
sahf
test
cmps
call
mov
test
(bad)
push
mov
xchg
scas
movs
mov
mov
lods
xchg
push
cmps
nop
jmp
mov
mov
mov
mov
push
cmps
nop
push
mov
mov
test
xchg
mov
lods
xchg
push
movs
mov
mov
mov
lods
mov
cmp
sahf
xchg
mov
test
mov
lods
mov
test
test
cmp
xchg
jle
cmps
pushf
test
mov
mov
mov
mov
stos
lahf
test
test
popf
cmp
test
sar
icebp
repnz
(bad)
out
out
icebp
(bad)
out
out
icebp
(bad)
out
out
icebp
(bad)
in
out
lock
in
out
out
push
hlt
repz
(bad)
(bad)
(bad)
dec
add
add
or
mov
std
push
repz
jmp
(bad)
jmp
out
(bad)
jmp
out
(bad)
out
lock
(bad)
fcmovu
fdivr
add
call
mov
xchg
xchg
xchg
xchg
mov
jno
lahf
xchg
js
fwait
(bad)
jne
cwde
mov
xchg
mov
xchg
mov
xchg
xchg
xchg
lea
movs
cwde
jl
mov
nop
jbe
pushf
nop
jbe
cdq
mov
xchg
mov
call
jmp
xchg
jnp
mov
xchg
jp
call
jmp
sahf
cmp
call
mov
xchg
jl
sahf
xchg
jge
mov
mov
mov
mov
lods
mov
cmp
popf
cmp
cdq
cmp
xchg
jle
mov
mov
mov
(bad)
push
mov
xchg
stos
lahf
xchg
movs
call
mov
stos
nop
push
cmps
mov
mov
mov
lods
mov
test
mov
mov
push
test
push
movs
(bad)
jmp
mov
pushf
(bad)
mov
stos
xchg
push
cmps
xchg
jmp
sahf
mov
mov
cwde
(bad)
mov
lods
xchg
push
test
push
mov
mov
mov
mov
push
cmps
mov
mov
mov
scas
mov
xchg
test
test
mov
lods
nop
push
mov
mov
stos
sahf
test
movs
call
mov
cmps
mov
scas
mov
test
stos
lahf
test
xchg
lea
mov
sar
icebp
repnz
(bad)
out
out
icebp
(bad)
out
out
icebp
(bad)
out
out
icebp
(bad)
out
out
icebp
(bad)
out
out
out
push
hlt
repz
(bad)
(bad)
(bad)
dec
add
add
or
mov
std
push
repz
jmp
in
(bad)
jmp
out
(bad)
jmp
out
(bad)
jmp
out
(bad)
out
lock
(bad)
fcmovu
fdivr
xchg
outs
call
jb
xchg
mov
xchg
mov
nop
xchg
cdq
lea
mov
xchg
js
call
call
mov
fwait
nop
jns
cmps
fwait
jg
mov
xchg
jns
sahf
xchg
jns
pushf
xchg
jns
cwde
lea
popf
xchg
jnp
stos
lahf
test
cmps
pushf
cmp
mov
xchg
jge
popf
xchg
jnp
sahf
xchg
jge
scas
mov
xchg
test
fwait
cmp
mov
xchg
cmp
cmps
mov
mov
mov
scas
mov
xchg
stos
lahf
test
test
test
mov
cmps
(bad)
push
cmps
mov
mov
mov
scas
movs
mov
lods
mov
test
stos
mov
xchg
(bad)
mov
test
mov
mov
(bad)
jmp
sahf
xchg
mov
mov
(bad)
mov
stos
xchg
push
cmps
xchg
jmp
nop
(bad)
mov
mov
(bad)
mov
stos
xchg
push
xchg
jmp
lods
cdq
(bad)
mov
mov
push
stos
xchg
push
movs
(bad)
jmp
mov
(bad)
mov
scas
xchg
push
test
(bad)
jmp
popf
xchg
mov
scas
xchg
push
cmps
mov
mov
mov
lods
mov
xchg
mov
stos
xchg
push
cmps
mov
lods
mov
xchg
fwait
nop
jnp
mov
aam
repnz
(bad)
out
lock
out
lock
out
lock
out
out
icebp
(bad)
out
out
out
push
hlt
hlt
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
mov
(bad)
push
repz
in
in
in
(bad)
in
out
out
(bad)
in
out
out
(bad)
in
out
out
(bad)
out
icebp
repnz
fcmovnu
(bad)
mov
jno
sahf
xchg
ja
cwde
lea
lea
xchg
mov
xchg
mov
popf
xchg
jp
mov
xchg
jnp
pushf
xchg
js
pushf
nop
ja
call
call
popf
cmp
cwde
jg
mov
xchg
jl
lahf
xchg
jnp
call
jmp
popf
test
movs
call
mov
xchg
jle
mov
movs
mov
scas
mov
xchg
test
test
cmps
popf
test
movs
cdq
cmp
cwde
cmp
test
(bad)
push
mov
mov
test
cdq
test
mov
nop
(bad)
mov
stos
nop
push
cmps
mov
scas
movs
mov
stos
lahf
mov
lods
mov
cwde
(bad)
mov
stos
xchg
push
test
mov
stos
mov
xchg
inc
mov
(bad)
mov
lods
xchg
push
stos
xchg
jmp
movs
xchg
(bad)
mov
mov
(bad)
mov
lods
cdq
push
test
xchg
push
mov
(bad)
mov
lods
xchg
push
cmps
xchg
jmp
scas
cdq
inc
mov
(bad)
mov
lods
xchg
push
test
(bad)
jmp
scas
xchg
(bad)
mov
lods
xchg
push
mov
mov
mov
lods
mov
test
mov
xchg
(bad)
mov
test
mov
mov
mov
sahf
xchg
jle
mov
aam
repnz
(bad)
out
lock
out
lock
out
lock
out
out
icebp
(bad)
out
out
out
push
cmc
cmc
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
(bad)
leave
leave
(bad)
(bad)
(bad)
push
hlt
repz
in
in
out
(bad)
in
out
lock
in
out
lock
in
out
lock
repnz
(bad)
fdivrp
mov
je
lahf
xchg
jp
fwait
nop
ja
call
call
xchg
jle
movs
cdq
cmp
xchg
jge
sahf
xchg
jnp
sahf
xchg
jnp
pushf
xchg
jp
xchg
mov
mov
sahf
test
cmps
fwait
cmp
xchg
jg
mov
xchg
jle
pushf
xchg
jl
movs
cdq
cmp
movs
mov
stos
lahf
xchg
cmps
pushf
cmp
pushf
cmp
fwait
cmp
xchg
cmp
mov
mov
mov
mov
lods
mov
xchg
stos
lahf
xchg
cmps
pushf
xchg
movs
fwait
xchg
mov
xchg
push
cmps
mov
scas
movs
mov
scas
movs
mov
stos
mov
mov
mov
xchg
(bad)
mov
lods
xchg
push
nop
push
mov
mov
mov
mov
(bad)
mov
lods
xchg
push
test
jmp
scas
cdq
inc
mov
(bad)
mov
mov
(bad)
mov
lods
cwde
push
movs
xchg
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
lods
call
stos
call
mov
(bad)
mov
scas
fwait
push
test
xchg
push
mov
fwait
(bad)
mov
lods
xchg
push
cmps
xchg
jmp
stos
xchg
inc
mov
(bad)
mov
lods
xchg
push
(bad)
push
sahf
mov
mov
nop
(bad)
mov
lods
xchg
push
cmps
mov
mov
(bad)
(bad)
call
aam
push
hlt
cmc
push
icebp
repnz
icebp
repnz
icebp
repz
icebp
repnz
lock
cmc
cmc
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
(bad)
leave
leave
(bad)
(bad)
(bad)
push
repz
in
out
out
(bad)
in
out
lock
in
out
lock
out
out
icebp
push
repnz
(bad)
fstp
(bad)
mov
ja
mov
xchg
jp
pushf
xchg
jp
fwait
xchg
jp
cwde
lea
movs
call
mov
xchg
jge
mov
xchg
jge
call
jmp
popf
test
movs
cdq
cmp
call
sahf
xchg
jg
cmps
popf
xchg
mov
mov
lods
mov
xchg
test
popf
xchg
mov
popf
mov
mov
xchg
push
movs
mov
scas
mov
mov
test
popf
mov
mov
lods
xchg
push
mov
mov
(bad)
jmp
lahf
mov
mov
xchg
(bad)
mov
scas
xchg
push
stos
xchg
push
(bad)
jmp
mov
(bad)
mov
mov
(bad)
mov
scas
xchg
push
xchg
(bad)
mov
mov
mov
(bad)
mov
scas
fwait
push
xchg
(bad)
mov
mov
mov
(bad)
mov
scas
popf
push
stos
fwait
inc
mov
movs
(bad)
mov
mov
(bad)
mov
lods
cdq
push
lods
cwde
inc
mov
lahf
(bad)
mov
scas
xchg
(bad)
mov
stos
xchg
push
test
sahf
(bad)
mov
scas
xchg
push
stos
xchg
push
mov
nop
(bad)
mov
scas
xchg
push
test
test
xchg
xchg
nop
call
aad
push
hlt
idiv
icebp
icebp
repz
icebp
repz
icebp
repz
icebp
repz
lock
div
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
(bad)
leave
leave
(bad)
(bad)
(bad)
push
cmc
repz
in
out
out
(bad)
out
out
icebp
(bad)
out
out
icebp
(bad)
out
out
icebp
push
repnz
(bad)
(bad)
(bad)
nop
nop
nop
call
cwde
jg
lahf
xchg
jl
sahf
xchg
jl
pushf
xchg
jl
call
jmp
call
mov
xchg
cmp
xchg
jle
stos
mov
mov
test
pushf
test
cmps
pushf
test
movs
call
stos
mov
(bad)
jmp
mov
mov
test
fwait
xchg
test
lods
xchg
push
cmps
mov
scas
movs
(bad)
jmp
mov
mov
mov
scas
xchg
push
test
xchg
jmp
mov
xchg
(bad)
mov
mov
push
lods
xchg
push
cmps
xchg
jmp
mov
inc
mov
(bad)
mov
mov
(bad)
mov
lods
xchg
push
scas
call
mov
(bad)
mov
mov
(bad)
mov
lods
fwait
push
mov
inc
mov
cmps
(bad)
mov
mov
(bad)
mov
lods
pushf
push
mov
cmps
(bad)
mov
mov
(bad)
mov
scas
pushf
push
stos
cwde
inc
mov
mov
(bad)
mov
scas
cwde
push
test
push
mov
pushf
(bad)
mov
scas
xchg
push
stos
xchg
push
mov
fwait
(bad)
mov
lods
xchg
push
pushf
xchg
xchg
xchg
xchg
call
(bad)
xlat
push
cmc
idiv
repnz
repnz
repnz
icebp
repz
lock
div
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
(bad)
leave
leave
(bad)
(bad)
(bad)
push
cmc
hlt
(bad)
out
out
lock
out
lock
(bad)
out
lock
(bad)
out
lock
push
repz
(bad)
(bad)
loopne
xchg
xchg
xchg
call
call
mov
xchg
jg
sahf
xchg
cmp
stos
mov
test
movs
call
mov
xchg
cmp
mov
mov
stos
mov
xchg
test
pushf
xchg
mov
movs
mov
mov
xchg
jmp
mov
mov
stos
mov
mov
lods
mov
xchg
push
test
push
cmps
nop
jmp
mov
cdq
(bad)
mov
lods
xchg
push
stos
xchg
push
mov
cdq
inc
mov
(bad)
mov
scas
cwde
(bad)
mov
lods
xchg
push
xchg
inc
mov
mov
(bad)
mov
mov
(bad)
mov
stos
xchg
(bad)
mov
mov
movs
(bad)
mov
mov
(bad)
mov
mov
push
mov
inc
mov
test
(bad)
mov
mov
push
lods
popf
inc
mov
stos
inc
mov
mov
(bad)
mov
scas
fwait
push
mov
movs
inc
mov
popf
(bad)
mov
mov
push
cmps
xchg
inc
mov
mov
(bad)
mov
scas
cwde
push
test
nop
(bad)
mov
mov
(bad)
mov
scas
xchg
jmp
xchg
xchg
call
xlat
fdivr
cmc
cmc
idiv
repnz
push
repnz
push
repnz
push
repnz
push
icebp
icebp
push
div
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
(bad)
leave
leave
(bad)
(bad)
(bad)
push
cmc
hlt
(bad)
out
out
lock
out
lock
out
lock
out
lock
repz
jmp
loopne
call
xchg
jg
cmps
pushf
test
movs
call
lahf
xchg
cmp
cwde
test
lods
movs
(bad)
jmp
mov
cmps
popf
xchg
cmps
popf
xchg
movs
fwait
xchg
mov
cmps
(bad)
push
mov
mov
stos
mov
mov
movs
pushf
xchg
mov
xchg
push
cmps
xchg
jmp
movs
(bad)
jmp
mov
xchg
(bad)
mov
lods
xchg
push
xchg
push
movs
xchg
jmp
mov
(bad)
mov
scas
cwde
push
lods
xchg
push
xchg
(bad)
mov
mov
popf
(bad)
mov
mov
(bad)
mov
lods
cwde
push
mov
mov
(bad)
mov
mov
(bad)
mov
lods
call
mov
cmps
inc
mov
mov
(bad)
mov
lods
sahf
(bad)
mov
mov
lods
(bad)
mov
mov
cmps
(bad)
mov
lods
lahf
inc
mov
lods
inc
mov
cmps
(bad)
mov
mov
(bad)
mov
lods
call
mov
mov
(bad)
mov
mov
(bad)
mov
test
mov
inc
mov
(bad)
mov
mov
(bad)
mov
stos
xchg
jmp
mov
inc
mov
(bad)
mov
mov
jmp
cdq
cwde
call
fcomp
push
div
push
repz
push
repz
push
repz
push
repnz
push
repnz
div
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
retf
(bad)
(bad)
(bad)
push
div
(bad)
out
out
icebp
push
icebp
repnz
icebp
repnz
icebp
repnz
repz
jmp
loope
call
xchg
cmp
sahf
xchg
cmps
pushf
xchg
movs
pushf
xchg
mov
fwait
mov
mov
nop
jmp
mov
mov
test
popf
mov
movs
pushf
mov
mov
xchg
push
movs
(bad)
jmp
mov
(bad)
jmp
stos
xchg
push
stos
xchg
push
test
jmp
mov
xchg
(bad)
mov
scas
cwde
push
stos
xchg
push
xchg
jmp
mov
(bad)
mov
mov
(bad)
mov
scas
cdq
push
test
(bad)
mov
mov
mov
(bad)
mov
mov
(bad)
mov
stos
cwde
inc
mov
movs
inc
mov
mov
(bad)
mov
mov
(bad)
mov
mov
stos
inc
mov
movs
(bad)
mov
mov
(bad)
mov
mov
dec
ret
lds
stos
inc
mov
test
push
mov
scas
inc
mov
test
sar
(bad)
mov
scas
popf
inc
mov
stos
inc
mov
mov
(bad)
mov
mov
push
mov
inc
mov
mov
(bad)
mov
mov
(bad)
mov
stos
xchg
push
mov
lahf
(bad)
mov
mov
call
idiv
push
repz
push
repz
push
repz
push
repz
push
repnz
div
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
retf
(bad)
(bad)
(bad)
push
div
(bad)
out
lock
push
icebp
repz
icebp
repz
icebp
repz
repz
jmp
loope
call
xchg
test
stos
mov
mov
cmps
sahf
mov
movs
fwait
xchg
cmps
lahf
mov
mov
xchg
jmp
mov
mov
stos
mov
mov
test
mov
mov
xchg
push
xchg
jmp
movs
nop
jmp
mov
xchg
(bad)
mov
lods
xchg
push
stos
xchg
push
movs
xchg
push
mov
(bad)
mov
scas
cdq
push
lods
xchg
push
test
mov
(bad)
mov
mov
(bad)
mov
scas
call
mov
inc
mov
mov
(bad)
mov
mov
(bad)
mov
lods
call
mov
movs
inc
mov
mov
(bad)
mov
mov
dec
shr
lds
cmps
inc
mov
cmps
(bad)
mov
mov
dec
les
inc
mov
stos
inc
mov
test
mov
mov
mov
(bad)
mov
stos
inc
mov
cmps
(bad)
mov
mov
inc
mov
lods
inc
mov
movs
inc
mov
mov
(bad)
mov
mov
dec
mov
movs
inc
mov
lahf
(bad)
mov
mov
push
lods
fwait
inc
mov
mov
jmp
sahf
pushf
(bad)
fcmovu
(bad)
div
clc
push
hlt
cmc
push
hlt
idiv
hlt
hlt
idiv
hlt
repz
push
repnz
clc
div
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
retf
(bad)
(bad)
(bad)
push
div
push
lock
repnz
repnz
repnz
hlt
cmc
jmp
loop
call
cdq
mov
lods
mov
(bad)
jmp
sahf
mov
lods
mov
xchg
push
movs
nop
jmp
mov
(bad)
jmp
scas
cdq
push
test
xchg
push
movs
xchg
jmp
mov
(bad)
mov
scas
cdq
push
lods
cwde
push
cmps
xchg
push
mov
(bad)
mov
mov
(bad)
mov
scas
fwait
push
cdq
inc
mov
mov
(bad)
mov
mov
(bad)
mov
lods
fwait
(bad)
mov
mov
movs
inc
mov
inc
mov
(bad)
mov
mov
push
mov
stos
inc
mov
movs
inc
mov
movs
(bad)
mov
mov
dec
ret
leave
shr
ret
mov
stos
inc
mov
cmps
(bad)
mov
les
inc
mov
lods
inc
mov
stos
(bad)
mov
mov
mov
leave
shl
ret
mov
test
(bad)
mov
mov
dec
les
inc
mov
movs
inc
mov
mov
(bad)
mov
shr
ret
mov
mov
(bad)
mov
mov
push
mov
movs
inc
mov
cwde
jmp
fcmovu
push
idiv
push
hlt
idiv
hlt
hlt
idiv
hlt
hlt
idiv
hlt
hlt
cmc
push
repz
clc
clc
idiv
(bad)
(bad)
(bad)
dec
add
add
or
retf
(bad)
(bad)
(bad)
push
div
push
lock
push
repnz
repnz
repnz
hlt
cmc
jmp
loop
call
fwait
mov
lods
movs
(bad)
jmp
mov
(bad)
jmp
lods
xchg
push
cmps
xchg
jmp
movs
xchg
jmp
movs
xchg
(bad)
mov
lods
cdq
push
test
xchg
push
movs
xchg
(bad)
mov
mov
(bad)
mov
lods
cdq
push
stos
cwde
push
scas
popf
inc
mov
(bad)
mov
mov
(bad)
mov
mov
push
lods
fwait
inc
mov
movs
(bad)
mov
mov
(bad)
mov
mov
push
mov
dec
mov
cmps
inc
mov
movs
inc
mov
(bad)
mov
mov
inc
mov
lods
inc
mov
cmps
inc
mov
movs
(bad)
mov
mov
dec
ret
retf
ret
(bad)
mov
stos
inc
mov
test
(bad)
mov
les
mov
lods
inc
mov
stos
(bad)
mov
mov
dec
les
(bad)
mov
stos
inc
mov
cmps
(bad)
mov
mov
dec
les
inc
mov
cmps
inc
mov
movs
(bad)
mov
mov
dec
shr
lds
inc
mov
(bad)
mov
mov
push
mov
cmps
inc
mov
cdq
jmp
fcmovnu
push
idiv
push
hlt
cmc
push
hlt
cmc
push
hlt
cmc
push
repz
push
repnz
clc
idiv
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
retf
(bad)
(bad)
(bad)
push
div
push
lock
push
repnz
repnz
repnz
hlt
cmc
jmp
jecxz
jmp
sahf
mov
mov
xchg
jmp
movs
xchg
jmp
stos
xchg
push
stos
xchg
push
test
xchg
jmp
xchg
(bad)
mov
mov
push
stos
xchg
push
test
xchg
(bad)
mov
mov
(bad)
mov
scas
pushf
(bad)
mov
scas
fwait
push
mov
inc
mov
mov
(bad)
mov
mov
push
scas
sahf
inc
mov
cmps
inc
mov
mov
(bad)
mov
mov
(bad)
mov
shr
mov
cmps
inc
mov
movs
(bad)
mov
mov
scas
dec
mov
test
inc
mov
cmps
(bad)
mov
ret
mov
int
mov
leave
shl
(bad)
mov
stos
inc
mov
test
dec
lds
inc
mov
scas
inc
mov
stos
(bad)
mov
(bad)
mov
int3
lds
inc
mov
lods
inc
mov
test
mov
les
dec
shr
mov
cmps
(bad)
mov
mov
dec
mov
lods
inc
mov
cmps
inc
mov
movs
(bad)
mov
mov
inc
mov
stos
inc
mov
popf
jmp
fdivr
div
clc
push
hlt
cmc
push
hlt
idiv
hlt
hlt
idiv
hlt
repz
push
repnz
clc
idiv
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
retf
(bad)
(bad)
(bad)
push
div
push
icebp
repnz
repnz
repnz
push
repnz
push
hlt
idiv
jecxz
in
movs
mov
nop
push
test
jmp
movs
xchg
push
mov
push
stos
cwde
push
stos
cwde
jmp
lods
fwait
(bad)
mov
mov
push
scas
fwait
push
lods
call
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
lods
pushf
(bad)
mov
mov
movs
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
test
inc
mov
cmps
(bad)
mov
mov
inc
mov
scas
inc
mov
test
inc
mov
cmps
(bad)
mov
mov
mov
leave
shr
(bad)
mov
stos
inc
mov
cmps
dec
ret
mov
into
(bad)
mov
retf
les
inc
shr
ret
mov
stos
dec
lds
dec
les
mov
scas
inc
mov
stos
dec
(bad)
mov
into
(bad)
mov
retf
les
dec
shr
ret
mov
test
retf
les
dec
ret
scas
inc
mov
stos
inc
mov
cmps
(bad)
mov
mov
mov
leave
shr
ret
mov
cmps
inc
mov
(bad)
mov
mov
dec
shr
mov
cmps
cmps
(bad)
(bad)
(bad)
clc
idiv
push
hlt
idiv
cmc
hlt
idiv
cmc
hlt
idiv
hlt
hlt
idiv
repz
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
retf
int3
int3
(bad)
(bad)
(bad)
push
div
push
icebp
repz
repz
push
repz
push
repz
push
cmc
idiv
in
in
cmps
cmps
cmps
jmp
stos
cwde
push
test
cwde
(bad)
mov
mov
(bad)
mov
lods
fwait
push
lods
fwait
push
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
lods
pushf
push
cmps
inc
mov
mov
(bad)
mov
mov
push
mov
test
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
lods
inc
mov
test
ret
inc
mov
movs
inc
mov
mov
enter
(bad)
mov
stos
inc
mov
test
inc
shr
retf
ret
leave
shr
(bad)
mov
stos
inc
mov
mov
ror
mov
int
mov
retf
dec
ret
mov
scas
inc
mov
mov
ror
mov
dec
ret
leave
ret
mov
scas
inc
mov
mov
ror
mov
int
mov
retf
dec
ret
enter
lds
test
call
(bad)
mov
int3
les
dec
shr
les
inc
mov
mov
retf
ret
mov
enter
lds
stos
inc
mov
cmps
(bad)
mov
shr
mov
test
fdivrp
clc
clc
stc
push
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
hlt
idiv
hlt
hlt
hlt
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
retf
int3
int3
(bad)
(bad)
(bad)
(bad)
clc
div
push
repnz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
div
jmp
out
jmp
movs
xchg
push
lods
fwait
push
stos
fwait
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
scas
sahf
push
mov
inc
mov
mov
(bad)
mov
mov
push
mov
inc
mov
cmps
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
lods
inc
mov
test
sar
(bad)
mov
mov
dec
shr
(bad)
mov
stos
inc
mov
test
inc
mov
mov
retf
dec
shr
(bad)
mov
lods
inc
mov
mov
ror
mov
int3
lds
dec
shr
(bad)
mov
stos
dec
les
dec
(bad)
mov
int3
les
dec
ret
mov
scas
dec
lds
dec
enter
les
retf
inc
shl
int3
lds
dec
enter
lds
leave
ret
(bad)
mov
lods
dec
ret
ror
mov
into
(bad)
mov
retf
les
dec
shr
ret
inc
mov
mov
int
mov
retf
inc
mov
lods
inc
mov
test
dec
shr
mov
lods
stos
(bad)
(bad)
(bad)
clc
clc
cli
push
cmc
idiv
div
idiv
div
idiv
cmc
cmc
idiv
cmc
hlt
cmc
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
retf
int3
int3
(bad)
(bad)
(bad)
(bad)
clc
clc
clc
push
repz
push
hlt
cmc
push
hlt
cmc
push
hlt
cmc
push
div
jmp
out
jmp
test
sahf
(bad)
mov
scas
popf
push
mov
mov
(bad)
mov
mov
(bad)
mov
scas
lahf
inc
mov
test
sar
(bad)
mov
mov
(bad)
mov
mov
inc
mov
stos
inc
mov
cmps
inc
mov
cmps
(bad)
mov
mov
scas
inc
shr
lds
inc
mov
test
dec
les
dec
shr
(bad)
mov
stos
inc
mov
mov
iret
(bad)
mov
int3
les
dec
ret
mov
enter
les
mov
aam
mov
dec
(bad)
mov
into
lds
dec
ret
(bad)
mov
mov
(bad)
into
mov
call
enter
(bad)
mov
iret
(bad)
mov
retf
ret
mov
mov
mov
(bad)
iret
mov
call
enter
enter
(bad)
mov
retf
les
into
(bad)
mov
xlat
iret
mov
call
leave
mov
iret
(bad)
mov
into
(bad)
mov
retf
les
dec
ret
mov
aad
mov
call
enter
lds
dec
ret
(bad)
mov
lods
call
leave
mov
ror
mov
iret
(bad)
mov
retf
les
dec
shr
sar
call
leave
mov
ret
jmp
fnstsw
(bad)
stc
clc
cli
push
div
push
div
push
div
push
cmc
idiv
cmc
hlt
cmc
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
retf
int3
int3
(bad)
(bad)
(bad)
(bad)
clc
clc
clc
push
repz
push
hlt
cmc
push
hlt
cmc
push
hlt
cmc
push
div
jmp
out
jmp
sahf
cwde
jmp
mov
call
cmps
sahf
jmp
movs
popf
jmp
mov
fwait
jmp
cmps
lahf
jmp
cmps
sahf
jmp
movs
popf
jmp
movs
popf
jmp
test
mov
jmp
cmps
sahf
jmp
movs
sahf
jmp
mov
jmp
mov
jmp
cmps
lahf
jmp
stos
mov
jmp
test
mov
jmp
movs
push
stos
mov
jmp
test
mov
push
scas
movs
push
lods
mov
jmp
test
jmp
mov
push
lods
movs
push
lods
movs
jmp
test
movs
push
scas
cmps
push
lods
movs
push
stos
movs
jmp
stos
movs
push
scas
cmps
push
lods
movs
push
stos
mov
jmp
mov
push
lods
movs
push
stos
mov
jmp
cmps
mov
push
lods
movs
jmp
stos
mov
jmp
mov
push
cmps
lahf
jmp
fnstsw
(bad)
clc
clc
cli
push
div
push
div
push
div
push
cmc
idiv
cmc
cmc
idiv
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
retf
int3
int3
(bad)
(bad)
(bad)
(bad)
clc
clc
clc
push
repz
push
hlt
idiv
hlt
hlt
idiv
hlt
hlt
idiv
div
idiv
jmp
in
dec
leave
leave
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
ret
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
(bad)
inc
ret
rol
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
rol
inc
ret
rol
inc
ret
ret
inc
ret
ret
inc
rol
rol
inc
ret
rol
inc
ret
rol
inc
ret
rol
inc
rol
rol
inc
ret
rol
inc
ret
rol
inc
ret
rol
inc
rol
rol
inc
rol
rol
inc
ret
rol
inc
ret
rol
inc
rol
rol
inc
rol
rol
inc
ret
rol
inc
ret
rol
inc
rol
rol
inc
rol
rol
inc
rol
ret
inc
ret
ret
inc
rol
rol
inc
rol
rol
inc
ret
ret
inc
ret
ret
inc
rol
rol
inc
rol
ret
inc
ret
ret
inc
ret
ret
inc
ret
rol
inc
ret
enter
out
out
clc
clc
cli
push
idiv
push
idiv
push
idiv
push
idiv
push
cmc
idiv
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
retf
int3
int3
(bad)
(bad)
(bad)
(bad)
clc
clc
clc
push
hlt
cmc
push
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
hlt
hlt
cmc
push
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
cmc
cmc
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
cmc
cmc
idiv
div
clc
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
div
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
retf
(bad)
(bad)
(bad)
(bad)
stc
stc
stc
push
cmc
cmc
push
cmc
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
clc
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
stc
clc
cli
(bad)
clc
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
div
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
adc
mov
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
push
cmc
cmc
push
div
push
div
push
div
push
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
push
idiv
push
div
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
dec
add
add
or
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
cli
cli
push
cmc
idiv
div
idiv
div
idiv
div
idiv
div
clc
push
div
push
lock
out
out
push
out
out
push
out
out
push
out
out
push
out
out
push
out
out
push
out
out
push
out
out
push
repnz
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
push
idiv
push
div
(bad)
cld
sti
sti
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
ret
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
clc
div
push
div
push
cmc
idiv
div
idiv
div
idiv
cmc
jmp
iret
push
aad
push
aad
push
aam
push
aam
push
aam
push
aam
push
aam
push
aad
push
fcmovbe
push
out
in
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
clc
stc
(bad)
clc
clc
stc
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
(bad)
clc
idiv
push
idiv
push
idiv
push
idiv
push
div
(bad)
stc
stc
stc
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
(bad)
jmp
imul
add
(bad)
(bad)
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
idiv
push
div
push
div
push
(bad)
push
rol
push
aam
push
rol
push
rol
push
into
(bad)
iret
(bad)
rol
push
rol
push
aam
push
rol
push
out
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
clc
div
(bad)
clc
div
(bad)
clc
clc
clc
(bad)
cli
cli
cli
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
std
dec
dec
push
dec
dec
dec
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
repz
loope
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
fst
push
(bad)
push
(bad)
push
(bad)
push
in
(bad)
sti
div
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
std
std
std
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ftst
adc
add
add
add
push
(bad)
(bad)
(bad)
movs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
push
push
push
pop
add
add
call
leave
rcl
rcr
aam
aam
xlat
xlat
xlat
loopne
xlat
xlat
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
xlat
fchs
xlat
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
xlat
xlat
loopne
aam
fmulp
iret
iret
(bad)
xchg
aaa
add
add
(bad)
(bad)
unpcklps
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
ud0
inc
add
cld
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
rol
add
add
jmp
add
jmp
add
(bad)
clc
pop
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
cld
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
ror
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
ror
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
ror
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
ror
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
ror
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
ror
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
add
pop
loopne
add
loopne
add
loopne
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
paddd
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jl
add
add
add
add
add
add
add
add
add
add
rol
add
jmp
jns
jmp
pavgb
sub
fild
cs
fadd
sub
xlat
add
sbb
add
outs
add
mov
pop
inc
mov
inc
sub
add
out
cmp
int3
add
add
cdq
add
add
add
add
add
mov
add
add
or
add
and
mov
add
pop
lock
add
add
add
add
push
jp
add
add
add
add
add
add
imul
add
add
add
push
pop
add
aam
add
in
add
or
add
add
add
add
add
(bad)
inc
add
inc
add
jecxz
add
mov
add
pop
add
clc
aas
add
cld
aas
add
clc
pop
add
icebp
pop
add
mov
add
inc
add
inc
add
jge
add
add
add
add
add
add
add
add
add
add
rol
add
jmp
jns
jmp
pavgb
sub
fild
cs
fadd
sub
xlat
add
sbb
add
outs
add
mov
pop
inc
mov
inc
sub
add
out
cmp
int3
add
add
add
add
inc
add
inc
add
inc
add
pop
add
fcomip
add
fcomip
add
fdivp
add
fdivp
add
fdiv
add
fdivp
add
fdivp
add
fcomip
add
fcomip
add
rol
add
inc
add
inc
add
mov
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
and
mov
add
add
and
add
add
and
test
add
add
xor
add
add
and
test
add
add
inc
inc
add
add
and
sub
add
add
add
add
add
add
add
and
test
add
pop
add
add
add
or
add
add
add
or
add
add
add
adc
or
add
add
sub
add
or
or
add
add
adc
add
add
sub
add
or
cwde
lea
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
fadd
add
add
xor
cmp
xor
cmp
xor
xor
bound
xor
add
sub
add
add
inc
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
add
add
add
add
push
add
add
outs
add
jo
imul
add
arpl
jb
imul
add
inc
add
je
outs
add
je
and
jbe
xor
and
push
add
jb
imul
and
cmp
and
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
mov
cmp
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
or
and
je
jo
cmp
xor
and
and
jo
outs
arpl
jae
jb
jb
push
je
jb
cmp
or
and
and
jbe
jb
imul
xor
xor
xor
or
and
outs
popa
ins
gs
outs
dec
je
and
or
gs
jb
jo
imul
outs
dec
je
jbe
cmp
fs
jb
jo
imul
or
cmp
sub
outs
je
data16
je
and
jo
imul
and
arpl
imul
imul
jae
and
or
jb
jae
dec
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
jae
arpl
imul
or
gs
gs
gs
jb
jbe
ins
gs
or
or
gs
gs
gs
js
arpl
imul
ins
or
or
ins
gs
ins
cmp
outs
jbe
imul
or
or
jne
inc
arpl
jae
cmp
jae
and
ds
cmp
jb
jno
gs
gs
jb
jbe
ins
gs
or
das
jae
arpl
imul
das
je
jne
je
outs
outs
ds
cmp
sub
outs
je
data16
je
and
jo
imul
and
outs
fs
arpl
jae
and
or
gs
outs
fs
arpl
or
fs
outs
fs
je
jae
gs
bound
or
cmp
jae
gs
bound
fs
je
je
or
or
gs
xor
and
or
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
or
jb
imul
xor
xor
xor
or
or
addr16
addr16
or
or
or
outs
arpl
jae
jb
jb
push
je
jb
cmp
or
or
or
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
das
ds
das
fs
outs
fs
je
jae
gs
bound
or
fs
outs
fs
arpl
or
jae
gs
bound
or
add
int3
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
or
add
push
or
add
push
or
add
or
add
add
add
push
push
or
add
or
add
push
or
add
add
mov
add
add
push
or
add
push
or
add
push
or
add
push
or
add
pop
or
add
add
add
add
push
pop
or
add
pop
or
add
pop
or
add
pop
or
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
ins
add
dec
inc
push
dec
xor
cs
ins
add
ins
fs
xor
cs
ins
add
dec
xor
cs
ins
add
push
cs
ins
add
xor
cs
ins
add
inc
inc
push
push
xor
cs
ins
add
inc
dec
dec
xor
cs
ins
add
inc
push
xor
cs
ins
add
push
push
dec
dec
dec
cs
ins
add
dec
dec
dec
cs
ins
add
dec
inc
dec
xor
cs
ins
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
push
gs
ins
outs
jae
dec
gs
add
dec
ins
popa
addr16
imul
popa
je
add
inc
gs
popa
jbe
inc
imul
add
dec
imul
push
dec
gs
jae
inc
outs
outs
outs
arpl
outs
inc
add
inc
outs
dec
outs
imul
add
inc
jb
addr16
imul
inc
gs
inc
add
add
jb
jne
jb
push
popa
ins
jne
inc
add
je
ins
gs
gs
imul
add
ins
dec
test
xchg
dec
jge
push
xor
inc
inc
xor
inc
scas
popa
fidivr
jp
xchg
pop
push
call
retf
lods
add
out
and
stc
jge
in
fnsave
mov
sub
adc
in
adc
jo
mov
add
push
lds
mov
adc
stc
movs
enter
retf
fwait
pop
pushf
icebp
ret
lods
cmps
inc
(bad)
mov
xchg
cld
xchg
adc
jmp
jae
repz
mov
adc
cli
inc
jp
mov
popf
ds
jae
leave
dec
jl
adc
push
mov
jmp
add
jno
add
mov
jmp
shr
enter
mov
add
idiv
or
shl
repnz
mov
cmc
movs
add
ss
and
cmp
sar
in
mov
add
aaa
cs
xor
inc
add
cdq
not
mov
and
test
imul
stos
out
test
out
ins
push
js
pop
mov
ins
loop
and
cs
aad
mov
cwde
jb
jmp
xor
aad
or
and
dec
adc
hlt
pop
push
scas
inc
movs
stos
or
lock
jb
loop
loop
add
xchg
ins
movs
sahf
ins
lods
adc
cmp
leave
dec
jl
mov
sub
leave
(bad)
mov
cmp
jmp
mov
sub
add
jg
mov
repz
cmc
stos
int
outs
cli
mov
mov
xchg
mov
adc
push
mov
pop
jl
add
or
ins
sahf
adc
fld
mov
xchg
adc
imul
jne
adc
and
mov
inc
lods
mov
inc
mov
jb
ds
sar
add
inc
adc
cmp
adc
inc
data16
mov
and
push
pop
sahf
jae
std
xchg
cmc
loope
or
pop
sahf
push
xor
mov
mul
stos
mov
cmp
mov
ds
mov
sbb
inc
xchg
neg
rol
sbb
xlat
scas
push
xchg
icebp
sahf
in
push
shl
mov
popf
mov
mov
fucom
nop
mov
aas
push
lea
xchg
pop
(bad)
pop
rcl
cli
cmp
pushf
fbld
in
scas
lods
add
or
jmp
dec
mov
(bad)
call
cmps
lods
or
rcl
jp
push
jecxz
mov
cwde
aas
in
outs
mov
push
iret
push
lahf
mov
sub
outs
in
mov
ins
je
or
stc
mov
data16
dec
jnp
outs
(bad)
lock
and
add
push
iret
adc
je
into
call
les
movs
jg
sbb
arpl
sub
mov
int3
jmp
lock
rol
mov
and
(bad)
pop
mov
shl
sahf
pop
dec
fld
dec
cmp
mov
xchg
fstp
outs
or
iret
out
and
xchg
int
dec
aam
mov
(bad)
ret
repz
pop
and
cmp
jmp
cwde
lock
stos
inc
pop
imul
rcl
and
mov
int
inc
and
add
ds
clc
lea
ret
rol
mov
add
push
aad
out
xchg
cmps
stc
cmp
pop
and
mov
pop
sub
fcomp
lds
add
jb
adc
sub
add
popa
stos
lds
push
sub
jbe
lds
sbb
sar
mov
in
pusha
ins
add
ins
push
and
scas
xor
mov
or
adc
add
add
sbb
mov
inc
fs
enter
pop
push
adc
push
outs
and
pop
sti
add
(bad)
fild
lock
test
dec
call
inc
cmc
outs
(bad)
jg
fdiv
mov
pop
sahf
retf
push
sbb
into
std
fistp
xchg
pop
adc
xchg
dec
in
jne
lock
in
adc
cli
add
push
lods
test
push
(bad)
cli
fcmovnbe
sti
bswap
xchg
inc
add
out
pop
push
out
and
icebp
mov
call
jno
sub
jae
rcr
jmp
mov
addr16
xor
pop
mov
ret
(bad)
cli
mov
dec
sahf
les
sbb
jmp
loope
or
and
sbb
xchg
fsubr
dec
mov
adc
jge
jo
jne
aaa
loope
ficomp
inc
xlat
xchg
and
xlat
xchg
mov
outs
cs
mov
mov
fcomp
dec
stc
enter
cmp
or
xchg
(bad)
push
idiv
add
fsubr
xchg
mov
mov
fcomp
push
sub
push
cmp
ds
imul
pop
add
movs
out
in
adc
xchg
sub
fst
dec
jb
imul
jb
cs
sbb
push
pop
push
daa
retf
fiadd
(bad)
mov
dec
sub
add
mov
mov
mov
test
sub
add
xchg
mov
fcomp
lock
mov
mov
cli
out
ins
div
xchg
fisttp
and
outs
mov
push
icebp
(bad)
(bad)
out
inc
retf
test
call
mov
pop
sbb
adc
lds
xchg
sub
lea
outs
push
arpl
sub
jl
hlt
fs
cmc
pop
xor
pop
mov
(bad)
sbb
dec
and
mul
in
pop
cmp
ins
aas
pop
xor
aam
and
das
or
or
stc
adc
xor
rol
es
or
jae
pop
loopne
movs
push
cmp
popf
imul
mov
or
cmps
xchg
jnp
mov
adc
mov
inc
push
sbb
cdq
mov
jbe
cmps
repz
lds
jbe
xor
sbb
cmps
lock
mov
popf
sub
push
sbb
dec
popf
mov
sub
sbb
popf
cs
loope
in
mov
cmp
jno
lods
add
adc
jae
addr16
xor
test
cmp
(bad)
and
loope
sub
push
adc
cld
mov
das
shrd
int
dec
test
or
shr
out
sahf
test
add
rcl
icebp
ret
pop
clc
push
loope
pop
leave
enter
push
mov
xor
es
push
jle
pop
sub
pop
mov
pop
or
rcr
rcl
add
dec
adc
mov
add
mov
int
rcl
push
out
mov
push
scas
jp
cmp
xchg
jb
neg
xor
inc
hlt
cli
jmp
mov
std
sti
(bad)
and
mov
ret
imul
push
xchg
lods
movs
push
jbe
inc
mov
mov
pop
dec
je
xor
adc
sahf
popf
or
les
pop
fwait
repnz
aas
lock
adc
cs
sub
aam
repnz
daa
inc
or
dec
cmp
push
popa
sub
shl
jg
aaa
xor
mov
jb
jb
dec
sar
xor
es
rcl
rcr
or
in
retf
scas
adc
sar
push
mov
dec
xor
push
xchg
dec
sub
jne
imul
int3
push
xor
xchg
icebp
aam
lds
pop
(bad)
outs
cmp
push
and
pusha
cmp
add
scas
dec
int3
jnp
dec
loopne
call
xor
and
xlat
and
mov
bound
jg
fdiv
cmp
xor
dec
sub
lahf
hlt
test
shl
add
add
jne
das
repnz
call
lahf
test
dec
mov
add
clc
cmps
repz
push
into
clc
adc
sub
pushf
mov
ins
jg
mov
sub
scas
mov
sub
scas
(bad)
aaa
xlat
mov
bound
int
test
jbe
(bad)
ss
sbb
ins
xor
in
outs
xchg
mov
add
clc
fsubr
inc
es
mov
cmps
dec
sbb
ret
call
or
xor
lock
retf
stc
sub
rol
imul
push
mov
enter
and
add
iret
and
aaa
xor
mov
mov
mov
(bad)
cmc
cld
mov
outs
ficomp
(bad)
stc
fisubr
push
jb
outs
inc
mov
sbb
inc
adc
fdiv
lods
lock
ds
or
push
jg
in
xchg
cmp
push
pushf
dec
cmp
sahf
test
ror
and
add
jmp
dec
dec
ins
mov
pushf
and
jmp
mov
mov
ds
xchg
inc
xchg
jg
loope
loop
adc
xor
jle
icebp
mov
mov
loop
xchg
dec
(bad)
pop
(bad)
retf
mov
arpl
jns
lea
popa
add
mov
stos
mov
jmp
iret
push
push
call
es
std
dec
inc
jmp
xor
sub
mov
bound
xor
jo
jae
mov
jg
daa
or
fstp
cmps
(bad)
fnstcw
lods
mov
aas
push
push
xchg
div
dec
sbb
ins
out
(bad)
mov
push
mov
mov
push
es
add
popa
out
into
push
in
shr
ror
(bad)
aas
adc
add
xor
test
jnp
bound
cld
mov
and
iret
aas
mov
ss
dec
push
shr
out
int3
or
jecxz
mov
or
fiadd
push
(bad)
loope
sub
jmp
dec
mov
mov
outs
inc
rol
fcmovne
(bad)
lahf
sbb
xchg
sbb
mov
mov
add
pop
movs
imul
or
adc
push
sub
mov
mov
dec
fst
jmp
push
xor
push
aas
or
ja
adc
push
icebp
lea
dec
fwait
retf
int
into
bound
rcr
lods
in
mov
or
pop
push
loop
sub
imul
adc
push
stc
mov
repz
hlt
cmp
test
(bad)
adc
bound
in
jmp
xor
shr
mov
push
scas
out
pop
or
add
sbb
push
adc
out
mov
adc
lea
mov
(bad)
cmp
inc
xor
dec
es
jnp
and
fisttp
lods
dec
out
cli
sar
cld
mov
or
stos
sbb
int
dec
(bad)
and
pop
rcr
not
sti
mov
imul
dec
stos
(bad)
xchg
cli
add
into
jns
pop
push
(bad)
xchg
xor
movs
push
les
fcom
pop
std
jp
movs
clc
mov
or
add
shl
iret
xor
inc
jbe
sub
pushf
mov
cmp
pushf
es
adc
adc
cld
sub
call
push
mov
mov
pop
cmps
test
enter
not
and
or
push
into
push
pop
rcr
outs
mov
jbe
add
adc
pop
mov
sbb
test
hlt
cmp
jbe
inc
xor
shr
inc
pop
out
nop
iret
jae
outs
jae
addr16
pop
(bad)
pop
xor
pop
adc
lock
les
dec
arpl
data16
push
adc
out
add
push
mov
push
add
lds
sub
cmp
out
loopne
outs
sub
xchg
mov
ror
jle
pushf
rol
pop
xor
fiadd
std
iret
mov
and
test
mov
xchg
call
sub
jae
cwde
(bad)
out
mov
sub
dec
and
push
ret
movs
dec
ds
sbb
pop
xor
mov
mov
push
outs
push
lahf
adc
sub
xchg
dec
xor
mov
mov
scas
outs
pop
scas
jg
mov
cld
clc
fdiv
dec
lods
hlt
icebp
or
or
mov
out
retf
cdq
imul
test
mov
jecxz
int
cmps
dec
push
jne
mov
cmp
xor
xchg
mov
inc
inc
cmp
sbb
jp
std
leave
out
lahf
inc
push
rcl
je
pop
in
push
xor
jno
mov
iret
sahf
inc
mov
fadd
loop
fsub
or
or
mov
and
add
cmc
push
xor
sub
inc
shl
pop
(bad)
clc
cmp
mov
pop
push
dec
daa
inc
inc
pop
mov
mov
mov
cmps
dec
push
dec
std
inc
sti
ins
cmp
dec
xchg
add
or
ds
js
jl
sti
fcomp
mov
jne
xchg
outs
jno
mov
sbb
fs
xor
push
fild
or
mov
and
dec
push
jae
mov
pop
cmc
clc
adc
das
adc
lds
pusha
jne
xchg
xchg
xor
jo
mov
cli
mov
mov
in
sbb
cmp
dec
jp
test
jle
cld
in
in
add
cli
loop
cmp
dec
aam
push
cwde
loop
popf
mov
lahf
mov
sbb
pop
jae
(bad)
imul
scas
fist
ja
stos
and
lahf
clc
push
out
or
inc
bound
add
rcl
lods
xlat
and
or
xchg
mov
(bad)
dec
cmps
out
outs
push
adc
cdq
(bad)
xchg
sbb
inc
pop
(bad)
fdiv
xchg
xchg
cmp
loop
enter
loope
mov
jae
and
rcl
inc
adc
adc
stc
cli
lahf
sbb
test
xchg
xor
inc
xor
cdq
xchg
stos
push
sub
pusha
add
ficomp
and
xor
(bad)
jne
pop
out
mov
jne
rcl
push
cmp
clc
jbe
cld
xchg
inc
not
sub
mov
mov
dec
in
ss
add
cwde
outs
iret
pop
mov
push
adc
ds
add
stos
xor
js
test
mov
and
mov
cld
add
push
inc
mov
cwde
out
and
sub
cmps
test
pop
data16
aas
jmp
push
fadd
mov
sahf
adc
cs
(bad)
cmps
jo
dec
push
or
nop
popf
and
sbb
jg
int
jl
or
inc
or
fcom
xchg
mov
leave
les
mov
jmp
push
cmp
fwait
mov
cmp
iret
sub
cli
add
(bad)
xor
rol
idiv
loopne
or
mov
pop
in
adc
lods
sbb
mov
xchg
pop
stc
std
mov
imul
dec
xchg
retf
leave
xchg
scas
push
mov
inc
stos
test
add
add
pop
xor
add
ins
inc
xor
loopne
rol
add
int3
test
gs
pusha
test
sbb
add
jge
cmp
aaa
cmp
icebp
stc
lds
adc
lods
add
mov
out
inc
adc
pop
lock
(bad)
mov
jecxz
nop
push
push
xchg
push
mov
sub
sub
fsub
cs
xchg
mov
aad
daa
icebp
pop
add
pop
cmc
and
in
cld
and
cmp
shl
or
or
outs
cld
ror
jne
adc
mov
test
cmp
inc
pusha
sub
ds
jns
xchg
adc
adc
xchg
inc
fst
sub
mov
and
pop
add
ror
or
popf
fsubp
or
xchg
xor
repz
les
aas
add
xchg
xchg
outs
pop
mov
dec
pop
iret
dec
out
mov
imul
stos
(bad)
dec
mov
shl
jg
adc
jae
ja
int3
leave
fmul
xor
idiv
add
in
push
push
loope
shr
out
pop
popf
aad
loopne
mov
mov
xchg
mov
jecxz
sub
hlt
icebp
cmp
fmul
lock
(bad)
in
jg
jae
aas
pop
mov
adc
mov
in
cmps
aad
push
outs
mov
sub
sub
cmp
jnp
pop
xchg
icebp
das
or
jae
adc
pop
pop
addr16
mov
inc
jmp
push
mov
pop
mov
mov
in
ss
or
mov
push
xchg
repz
bound
push
sti
jge
dec
inc
mov
shl
add
ss
lds
outs
dec
and
jnp
std
(bad)
in
push
in
adc
cmp
arpl
stos
xor
inc
(bad)
cmp
fs
sub
sahf
pop
mov
std
push
int3
sbb
inc
inc
sbb
mov
popf
gs
sbb
lods
ss
push
inc
out
call
shl
cs
adc
pop
adc
jmp
int3
rol
in
jle
push
leave
dec
mov
arpl
add
inc
sub
pop
pop
lds
fdivr
mov
dec
fwait
inc
ret
out
push
xchg
scas
ss
call
push
into
cmp
rol
call
xor
dec
jae
in
add
dec
dec
loope
jns
cwde
pop
xor
loopne
push
or
xchg
mov
dec
shr
or
adc
add
test
into
int3
push
jecxz
mov
mov
adc
rcr
popf
adc
std
mov
jecxz
retf
mov
cmp
das
jbe
sbb
or
pop
in
cmp
movs
jmp
mov
jmp
aas
or
push
pop
pop
ins
stos
je
iret
int3
dec
or
or
push
push
jbe
dec
push
pop
and
jg
shl
push
mov
pop
sbb
add
xchg
jbe
jno
mov
push
cmp
sub
sub
popa
and
xlat
push
js
(bad)
jbe
imul
push
adc
or
sub
jb
test
dec
sbb
pop
test
cdq
jbe
dec
dec
xor
dec
push
adc
xchg
xlat
adc
cmps
je
cld
xor
mov
push
int
jecxz
les
push
sub
movs
xchg
mov
xchg
add
int3
xor
test
out
pop
adc
cmps
rcr
xchg
xor
pop
daa
or
test
call
cmp
mov
sub
call
es
in
gs
cmp
sbb
adc
hlt
pop
popa
pop
dec
clc
jbe
and
outs
test
scas
test
cmp
(bad)
call
xor
fmul
pop
adc
in
xchg
cpuid
push
aad
dec
and
xor
cmp
jmp
mov
sbb
push
or
jge
cmp
push
jnp
or
and
(bad)
clc
in
stos
movs
ja
pop
push
shl
push
(bad)
rcl
add
lahf
or
js
cdq
sti
mov
inc
jb
xchg
mov
dec
(bad)
fsubr
and
fcomp
call
das
rol
fs
mov
jl
imul
lock
cmp
leave
repnz
out
sbb
cwde
es
push
scas
cmps
inc
jae
inc
push
sub
and
ja
and
mov
or
data16
adc
and
inc
adc
(bad)
in
in
inc
sbb
adc
ins
push
ins
or
jp
(bad)
call
pop
or
jecxz
sub
shl
nop
inc
fisubr
adc
les
jb
int3
pop
or
mov
xor
shl
pop
scas
(bad)
mov
loop
or
gs
hlt
stos
sbb
or
xchg
gs
cmp
test
mov
loop
daa
cmps
jb
sub
mov
mov
shl
popf
adc
scas
stos
sub
fsub
mov
cmp
sahf
cmps
cmp
mov
jp
cmp
add
mov
sti
pushf
cmp
adc
sub
push
fisubr
or
sar
cmp
fild
cdq
pop
pusha
inc
jle
jmp
mov
sbb
jecxz
pop
cdq
and
xchg
pop
sbb
jge
hlt
dec
in
aad
cs
ret
mov
jmp
in
cdq
shl
fcomip
gs
sbb
pop
daa
dec
lahf
jno
xchg
mov
mov
cwde
arpl
popa
mov
fwait
rcr
call
jne
out
(bad)
mov
mov
xchg
dec
movs
xchg
or
adc
xchg
imul
ja
loopne
out
mov
cmp
mov
daa
xor
lea
inc
int
and
sub
cmp
xor
test
xchg
stc
test
stos
xchg
xor
mov
cmc
nop
sar
or
sub
dec
mul
out
mov
cwde
cwde
in
xchg
mov
mov
scas
mov
pusha
cmp
mov
adc
dec
push
test
(bad)
sub
sub
cmp
jmp
fld
call
daa
lods
and
dec
imul
mov
mov
je
jge
into
ds
test
out
sub
add
inc
lods
pop
jmp
sub
rol
add
adc
fwait
imul
sti
sahf
not
out
into
into
iret
push
xor
adc
and
lds
cdq
daa
and
and
mov
pop
pop
int3
daa
mov
call
call
dec
mov
push
jmp
dec
dec
test
pushf
push
stos
std
iret
mov
adc
adc
xchg
ret
jno
sahf
imul
enter
ds
xlat
push
aas
imul
mov
jne
loope
sahf
ja
mov
and
scas
test
jnp
xor
cmp
and
int
stos
retf
pop
push
loope
pop
cmp
adc
movs
xchg
in
xor
test
jb
add
stc
add
pop
cmc
(bad)
nop
adc
xor
nop
ds
clc
in
sbb
mov
lock
cs
dec
xchg
out
add
pop
into
rol
fst
arpl
jb
jg
sbb
leave
xor
push
mov
fild
loope
cmp
aas
xchg
push
pop
ins
test
adc
xlat
mov
xor
retf
or
jmp
arpl
inc
push
mov
test
adc
cld
pop
mov
inc
(bad)
in
gs
push
pop
push
sbb
mov
pushf
mov
or
adc
xchg
mov
(bad)
in
jb
test
sub
sub
xor
lahf
leave
mov
js
(bad)
push
push
fcom
shl
das
xor
mov
cmps
xchg
fs
mov
cld
lods
push
shl
xchg
pop
into
mov
popf
mov
ds
gs
push
fst
ret
jmp
pop
ss
popa
dec
add
in
mov
sbb
lahf
retf
std
mov
cmp
push
xchg
mov
stos
sbb
or
cmp
mov
aam
sub
jno
jb
test
add
or
adc
mov
int3
rol
pusha
inc
mov
jmp
ds
int
popf
jge
clc
sbb
xchg
inc
add
mov
jnp
pop
adc
dec
push
aas
sbb
mov
push
jne
add
jle
std
push
repz
push
es
in
mov
daa
jmp
jnp
mov
xor
cmp
add
adc
sub
dec
out
pop
call
and
pop
(bad)
mov
xchg
sbb
xor
mov
cmp
jns
or
xor
mov
outs
mov
mov
test
jnp
mov
pop
pop
(bad)
shr
out
lods
outs
movsx
lds
inc
imul
pop
jle
fwait
cmps
sbb
or
mov
popa
(bad)
add
loopne
lahf
sahf
ret
test
leave
into
xor
cmc
pop
cmp
jnp
ret
(bad)
mov
cli
ret
adc
xor
xchg
and
mov
jo
mov
pusha
jno
leave
cmp
out
cdq
or
sub
sub
loopne
xchg
sbb
into
call
and
cwde
test
lea
xchg
loop
stos
call
jmp
int3
call
psadbw
mov
call
mov
enter
cmps
mov
or
jns
add
jne
ror
push
loop
add
jg
cmc
or
scas
push
xor
clc
mov
xchg
movs
adc
movs
ror
popa
stos
sbb
xchg
test
jmp
cmc
xchg
cmp
loope
mov
mov
bound
sub
loope
in
lock
test
ret
pop
jmp
and
arpl
mov
in
movs
es
cmp
add
push
retf
cmp
and
loopne
jae
mov
cmps
sbb
sahf
movs
fidiv
loop
ds
adc
movs
pop
pop
mov
adc
push
popa
mov
push
repz
(bad)
pop
xchg
push
adc
mov
mov
dec
es
pusha
sbb
fidivr
or
fs
push
lea
or
cmp
xor
lods
outs
and
dec
xchg
mov
jno
fstp
leave
adc
sub
mov
shl
lds
mov
mov
jne
repz
adc
test
stos
sub
dec
in
mov
inc
or
(bad)
add
or
(bad)
shr
sub
stos
mov
enter
add
jne
pop
dec
xlat
pop
jecxz
pop
in
rdmsr
mov
jmp
movs
cdq
aas
lahf
push
neg
xchg
pop
shl
pop
mov
aad
(bad)
xchg
cmp
daa
push
inc
out
popf
dec
(bad)
xchg
push
adc
test
xchg
inc
sbb
aaa
out
cwde
inc
xchg
mov
jae
dec
data16
shl
mov
in
leave
pop
retf
or
mov
or
add
mov
mov
(bad)
aaa
in
push
xor
call
mov
pop
jns
out
cmp
cmps
aaa
ror
pop
push
sbb
inc
xor
push
arpl
std
cdq
stos
mov
inc
aaa
mov
pop
inc
pop
clc
adc
outs
xor
js
mov
bound
icebp
in
stos
push
jb
rol
cli
jne
mov
push
out
dec
and
cmp
inc
leave
call
add
dec
in
xor
adc
mov
mov
jae
mov
mov
sbb
out
jle
xor
sbb
rcr
hlt
or
xor
push
fdivr
cmp
fwait
sbb
add
div
mov
fs
in
loopne
xor
cmc
xor
add
ret
repz
loop
(bad)
fcmovbe
cmps
xchg
fwait
(bad)
push
and
fldz
sbb
jl
dec
call
ja
pop
in
loop
xor
mov
repz
sub
sub
add
lahf
imul
dec
sahf
cmp
out
jp
adc
fdivrp
(bad)
retf
dec
mov
xor
mov
lock
xlat
outs
stos
int3
retf
lds
pop
fstp
xchg
cmps
lock
and
pushf
scas
adc
xor
jl
xor
sahf
adc
pop
loope
mov
jl
and
into
push
xchg
and
mov
jmp
iret
mov
pop
push
jmp
scas
(bad)
fcom
push
mov
pop
aas
adc
(bad)
cli
mov
pop
imul
gs
adc
into
mov
cli
push
sbb
pop
js
pop
in
aaa
jl
dec
pop
or
das
and
hlt
aas
xor
mov
aad
ins
ds
scas
mov
and
or
pop
ds
out
(bad)
fdiv
jb
in
push
xchg
push
(bad)
icebp
leave
retf
jle
pop
or
pop
neg
pop
outs
mov
xor
mov
call
bound
pushf
mov
push
or
je
iret
push
sti
fld
xchg
mov
dec
stc
setns
adc
inc
popf
enter
dec
retf
(bad)
pop
push
inc
ins
cmps
popa
dec
adc
ss
mov
xlat
pop
(bad)
xor
loopne
mov
aas
or
jecxz
cdq
adc
mov
sbb
js
sbb
movs
adc
cld
jle
scas
dec
mov
mov
aad
imul
out
xor
scas
gs
pusha
test
xor
sbb
jno
xor
pop
into
pop
sub
js
dec
push
xor
(bad)
scas
xor
(bad)
retf
scas
mov
cmp
jp
ss
inc
mov
lock
mov
xchg
and
lea
out
xchg
ds
inc
push
gs
leave
mov
out
cmp
lds
jne
cmp
aas
dec
cli
jmp
add
loop
sub
cmp
mov
aas
xchg
test
jne
inc
adc
or
and
fimul
mov
cmp
out
loop
retf
adc
adc
pop
add
jp
push
or
ss
fwait
and
jle
fcmovbe
loope
xchg
movs
call
dec
xchg
sub
ret
xor
xchg
dec
cwde
cmc
repz
dec
popa
loopne
xchg
loope
into
push
aam
lea
adc
fild
call
mov
pop
movs
cld
fsub
(bad)
in
out
or
jae
pop
(bad)
fild
out
lahf
add
and
mov
dec
test
hlt
fs
jne
mov
out
sar
sbb
in
push
(bad)
in
rcl
call
adc
enter
inc
pop
pop
dec
sub
jo
cmp
push
dec
xor
cmp
xor
mov
mov
jno
retf
or
leave
rdpmc
rol
inc
ss
sub
imul
xor
pop
push
add
dec
out
movs
mov
xchg
lea
pop
mov
lods
mov
call
frstor
call
push
adc
push
mov
mov
sub
cs
aas
xor
sbb
test
lods
xchg
aam
push
push
dec
test
fstp
mov
mov
and
test
jno
or
xor
xchg
repz
addr16
pop
mov
sub
bound
push
cmp
inc
push
xor
cmp
cmp
mov
xchg
neg
adc
sub
cmp
aas
sub
mov
es
adc
xor
jg
fcmovne
lock
ins
push
lods
push
dec
aaa
cdq
xchg
and
jb
xchg
pop
sbb
add
xor
mov
cmp
daa
(bad)
popa
aaa
in
dec
cs
adc
xor
dec
or
xor
pop
cmp
dec
mov
out
call
imul
xchg
jl
inc
inc
lds
jle
fwait
cmp
mov
add
addps
sti
xor
dec
dec
inc
push
gs
nop
aas
xchg
popa
mov
push
xchg
movs
inc
or
xchg
inc
inc
jmp
jecxz
sbb
adc
xchg
mov
cmp
xor
sub
add
xchg
ins
out
push
leave
inc
fsub
add
loope
loopne
in
ret
sub
jmp
push
mov
lds
add
shr
or
test
fidivr
stos
loopne
jns
in
loop
cmp
rcr
in
test
ja
into
xchg
push
aam
dec
iret
xchg
push
aad
add
(bad)
or
or
and
add
mov
jl
mov
add
cmc
(bad)
jl
out
jae
xor
test
cmp
mov
mov
sub
into
ss
xchg
adc
xchg
add
push
fwait
test
shr
xchg
adc
cmps
(bad)
pop
(bad)
in
sbb
mov
cvttps2pi
jae
mov
sbb
pop
or
int3
pop
push
dec
pop
dec
or
mov
or
and
loopne
xchg
mov
int3
xor
sub
or
je
add
outs
sbb
popa
ficom
dec
xor
jle
fild
sub
sbb
or
push
push
push
test
loope
outs
das
shl
repnz
mov
aam
mov
jae
movs
pop
sub
ins
call
or
jnp
dec
sbb
fdivr
cmp
int3
bound
adc
add
pop
push
cli
xchg
xchg
dec
shl
das
das
and
pop
mov
fsubr
into
push
xchg
jmp
ret
xchg
xor
mov
or
dec
xchg
xor
pop
scas
call
cmp
test
pop
into
ins
mov
jns
out
jg
(bad)
sbb
pop
addr16
loope
lds
clc
adc
cmp
gs
jnp
dec
popf
cmps
rol
ror
mov
xchg
dec
sbb
jbe
cs
iret
daa
xlat
add
(bad)
xor
mov
lods
push
mov
xor
sahf
push
jb
and
in
xchg
loope
push
push
mov
fwait
jge
js
push
sbb
mov
cs
dec
es
out
mov
jo
xchg
adc
popf
sub
movs
xor
pop
pusha
add
das
adc
jnp
fidivr
pop
fwait
mov
adc
rcl
or
mov
xchg
es
fsubr
rol
add
mov
jo
fwait
scas
jb
or
dec
gs
cmp
xor
or
push
xchg
das
mov
sbb
mov
pop
xor
add
iret
mov
push
dec
bound
out
adc
mov
push
iret
in
push
lea
mov
clc
pop
sbb
hlt
inc
sbb
mov
in
test
div
pop
loopne
jg
mov
call
sahf
mov
repnz
(bad)
cmp
push
jp
ret
dec
xor
lahf
xchg
push
push
aas
aam
repz
cmp
bswap
mov
or
dec
or
and
pop
int3
inc
xor
inc
jecxz
jne
retf
dec
jmp
xchg
jle
js
mov
sbb
loopne
fs
adc
jge
xor
or
test
inc
adc
in
mov
rol
push
xchg
mov
and
cmp
add
test
mov
pop
fimul
(bad)
clc
(bad)
push
pop
mov
in
pop
cmp
out
fild
and
stc
mov
dec
adc
call
arpl
push
or
mov
rcl
sub
sub
jno
mov
add
adc
xchg
jbe
adc
mov
push
cld
int3
je
aaa
or
jns
leave
in
mov
sub
adc
sbb
add
push
dec
test
imul
push
dec
jns
adc
mov
cmps
push
pop
popf
mov
jbe
jle
and
ret
sub
or
and
fiadd
push
les
xor
or
push
cs
int
xchg
arpl
sar
test
dec
fstp
cmp
ja
jo
cwde
int
leave
ret
jge
lods
cli
aad
mov
push
test
cmc
jb
xchg
add
(bad)
sbb
popf
xchg
jb
inc
scas
(bad)
pop
or
xchg
mov
cli
stos
add
push
loope
mul
add
xor
test
test
mov
ja
enter
fwait
mov
adc
jns
add
das
addr16
mov
or
int3
inc
and
sbb
fdiv
push
jmp
xchg
adc
pop
js
arpl
outs
repz
hlt
int
dec
xor
imul
(bad)
inc
fdiv
cmp
push
cmp
in
push
jle
ds
and
and
pop
mov
(bad)
dec
retf
pop
iret
mov
xchg
sub
mov
js
lods
jae
fcomp
nop
xchg
jmp
stos
mov
(bad)
pop
jne
addr16
retf
and
add
jae
popa
adc
mov
xchg
(bad)
sbb
adc
les
push
jbe
dec
or
push
dec
mov
scas
mov
cwde
stc
fisubr
adc
cwde
mov
fcmovnb
les
jmp
xchg
xchg
sub
fild
mov
mov
cmp
inc
pop
add
int
je
and
repz
out
cmp
loop
push
pop
sti
pop
lock
push
add
lock
push
adc
jp
sub
scas
out
mov
push
int3
pop
xor
lods
test
pushf
fidivr
jmp
sbb
movs
inc
(bad)
in
xor
loope
(bad)
xor
ss
push
and
jae
push
xor
xor
out
pop
inc
push
ins
xchg
cmp
jno
inc
stos
mov
mov
int3
repnz
test
das
inc
sbb
pop
xor
out
mov
int3
or
out
inc
pushf
dec
xchg
and
inc
es
push
sti
(bad)
dec
enter
sbb
lods
xchg
sub
mov
dec
sahf
sbb
popf
repz
cli
hlt
cmps
aam
mov
in
retf
sub
aas
out
bound
mov
pop
add
push
ret
std
cmp
aas
enter
sbb
enter
cmc
fnstcw
les
dec
icebp
pop
cmp
loop
out
jb
push
fisub
cli
mov
sub
cmc
mov
inc
jl
xchg
sbb
and
in
pushf
xor
xor
lds
cs
enter
les
lds
arpl
inc
dec
push
loopne
dec
fnstcw
sar
repnz
push
lock
mov
push
add
sahf
out
inc
pop
in
test
ret
jle
mov
cs
and
jg
(bad)
cmp
imul
stc
push
push
ret
xchg
xor
pop
das
inc
les
mov
retf
push
jge
clc
sub
mov
dec
push
push
cmp
or
push
cmp
icebp
fbstp
push
scas
adc
inc
jmp
mov
popf
icebp
mov
repz
pop
mov
jne
ficom
rcl
mov
inc
movs
xor
shl
jbe
mov
scas
cmps
lahf
sti
aas
cmp
mov
jae
rcl
out
sub
push
jp
pop
sub
dec
call
arpl
bound
ss
add
fwait
pushw
xchg
jb
jmp
add
adc
lods
mov
cld
sbb
je
xlat
fcmovnbe
or
cmp
cs
mov
int3
pop
in
jl
jnp
aad
cmc
push
(bad)
aam
shl
xchg
jge
mov
aas
adc
push
cld
xor
lds
fadd
out
retf
inc
cmc
jbe
jmp
sub
mov
push
pop
mov
or
mov
gs
into
retf
rcr
gs
and
mov
jae
movs
inc
fisubr
mov
lds
lea
jg
les
je
out
sub
dec
xor
mov
aam
call
xor
fistp
aam
xchg
(bad)
sbb
popa
mov
mov
sbb
cmps
adc
xor
sub
jp
icebp
sub
fs
mov
sbb
xchg
(bad)
int3
mov
cmp
add
add
cld
jp
xor
scas
cmps
lock
cmp
scas
inc
call
repz
adc
jno
xor
cmps
push
xchg
clc
push
xor
inc
ja
mov
xchg
mov
adc
jmp
jb
mov
inc
cmc
lods
retf
adc
les
cwde
xor
movs
into
inc
add
jle
inc
aas
mov
sbb
aam
dec
or
cdq
(bad)
sub
loope
xor
sbb
gs
jae
mov
int
add
add
(bad)
xor
jns
mov
mov
or
stc
mov
sub
imul
sti
pop
and
sti
pop
enter
dec
shr
add
and
adc
frstor
xchg
and
jmp
mov
popf
test
sbb
push
sbb
cli
jns
jns
jno
pop
cmp
jne
or
jmp
clc
out
imul
inc
dec
lods
std
test
bound
mov
enter
sbb
and
daa
push
cmp
sbb
test
push
mov
sbb
adc
pushf
jnp
add
fcom
sbb
mov
mov
jg
fsub
aam
dec
dec
cmp
xor
ret
dec
out
in
xchg
ffree
cmp
sahf
push
lods
test
mov
mov
and
pop
lods
test
cli
jmp
xchg
mov
adc
jo
pop
cs
test
and
fs
sub
ja
sub
xchg
repz
neg
mov
push
shl
aas
sub
(bad)
aad
xor
(bad)
sbb
push
out
xchg
sub
xlat
stos
rol
scas
mov
or
rol
push
or
enter
clc
and
mov
ret
sub
add
cwde
daa
rol
jmp
jmp
dec
cmps
mov
sti
dec
div
call
mov
shl
and
cmp
fnstsw
pushf
add
les
cmp
xchg
lahf
push
shl
jg
cmc
ins
hlt
mov
popa
(bad)
xchg
cli
sar
cdq
das
cdq
adc
dec
push
fmul
(bad)
icebp
pop
xchg
cmps
xchg
cwde
cs
scas
or
fwait
sbb
sahf
mov
and
mov
adc
jmp
mov
mov
xchg
cs
and
ror
push
mov
stos
(bad)
sbb
jae
xchg
xlat
repz
lods
mul
lahf
sbb
callw
outs
sbb
mov
lods
adc
jb
sub
inc
push
pop
dec
add
fist
mov
gs
mov
dec
xor
test
inc
mov
mov
adc
cld
push
pop
sub
jl
inc
ds
fs
faddp
xchg
ret
mov
into
dec
fdiv
jae
push
dec
add
xor
cmc
lods
loop
clc
jmp
(bad)
test
jae
retf
push
dec
aad
scas
out
mov
xor
ja
ins
invd
mov
inc
pop
add
mov
push
mov
fidiv
sub
adc
(bad)
ins
jns
sahf
add
rol
fwait
loop
scas
adc
shl
mov
loope
fcomi
pop
mov
popa
ins
jae
xchg
add
mov
pop
push
syscall
test
popf
mov
cdq
cmp
or
mov
cli
add
xchg
mov
add
jae
popa
fwait
mov
mov
push
mov
fstp
mov
xchg
lea
jle
pop
lods
loop
fimul
lods
inc
(bad)
push
ins
mov
dec
lea
dec
call
mov
out
leave
mov
es
lds
xchg
pop
mov
sar
mov
or
adc
(bad)
and
imul
int3
aaa
sbb
cwde
jo
retf
push
jmp
sub
dec
adc
xchg
sbb
mov
ret
pop
or
std
xchg
inc
xor
xor
mov
ja
retf
stos
adc
sti
popf
pop
sbb
jle
not
stc
stos
bound
sub
ret
loop
cmp
jmp
adc
in
push
leave
(bad)
scas
sbb
or
or
and
mov
cmps
sbb
xchg
cmps
out
fdivr
retf
sahf
sub
push
push
in
enter
mov
cs
outs
cmps
adc
rol
test
dec
and
pop
mov
ret
loope
ds
cmp
mov
mov
jmp
xor
inc
mov
cmc
movs
int3
imul
mov
jb
cmp
xchg
jecxz
retf
repz
dec
adc
xchg
in
mov
pop
ror
outs
push
stos
imul
and
sub
jge
rol
sbb
lods
(bad)
hlt
shr
(bad)
jge
nop
add
jo
xchg
lock
mov
and
ins
inc
scas
dec
push
fadd
jecxz
mov
inc
loopne
leave
adc
retf
pop
int
dec
aam
int3
into
jg
pop
in
jnp
xchg
in
cmp
or
pop
mov
mov
inc
inc
addr16
movs
mov
or
adc
inc
jb
push
push
ret
xor
xchg
retf
icebp
dec
lods
shr
sbb
mov
inc
repz
xor
pop
mov
lds
dec
inc
mov
mov
xchg
test
aas
xchg
jmp
or
mov
sahf
xor
mov
mov
add
inc
fwait
scas
scas
je
(bad)
and
xor
cli
hlt
sbb
and
call
fs
push
sub
ficom
xor
dec
bnd
outs
xchg
fstp
push
xor
cmps
fs
add
sbb
add
lds
(bad)
movs
icebp
inc
imul
call
sub
xchg
sbb
mov
pusha
popf
sbb
inc
fld
adc
mov
mov
add
sub
mov
out
test
aas
outs
add
sub
sbb
dec
sbb
neg
sbb
adc
xlat
pop
pop
add
sub
btc
cmp
push
mov
lahf
pop
pop
pop
jmp
aam
push
sub
lahf
pop
pop
pop
or
push
or
mov
jmp
sbb
sbb
pop
mov
pop
mul
pop
enter
pop
inc
rcl
inc
cmp
push
dec
mov
cmps
cmc
in
aad
retf
sar
adc
aam
sub
(bad)
sti
xlat
jne
mov
nop
js
push
jne
out
out
cmps
div
je
adc
jo
fdivr
pushf
dec
imul
xlat
sbb
int
repz
ret
cdq
or
pop
cmps
xchg
stc
imul
jp
test
sbb
mov
add
adc
xor
jmp
pop
hlt
fisubr
push
mov
arpl
mul
daa
movs
mov
xchg
or
dec
addr16
and
(bad)
pop
mov
icebp
int3
dec
sub
int3
aas
fild
jbe
popf
jmp
shr
jbe
or
fistp
movs
lock
sbb
mov
dec
mov
cmp
mov
mov
jg
inc
pop
in
and
or
mov
and
stc
mov
xchg
popa
xchg
fdivr
sub
and
jbe
das
mul
jecxz
ja
movs
mov
pop
sbb
(bad)
pop
lea
mov
test
and
dec
and
or
pop
mov
aaa
rcr
ins
fs
repnz
into
cdq
out
push
push
jmp
hlt
aad
jg
fnstsw
cwde
out
mov
jnp
mov
popf
jle
mov
int3
mov
jne
xchg
jmp
mov
xchg
mov
inc
popa
add
retf
dec
ins
ja
inc
retf
cli
(bad)
mov
and
ror
imul
or
pushf
hlt
mov
jle
jle
cli
(bad)
not
jns
pop
inc
aas
push
mov
sahf
sub
mov
call
sub
sar
sar
imul
cmp
dec
jg
into
pop
shl
lods
mov
mov
inc
push
mov
adc
icebp
addr16
cs
jecxz
(bad)
sahf
sub
(bad)
xchg
arpl
pop
and
out
and
jno
push
push
or
sbb
daa
jbe
xchg
imul
movs
or
jbe
test
out
ror
jo
pop
(bad)
sbb
inc
xchg
jl
jnp
dec
ds
mov
ins
fisubr
add
out
daa
ss
jns
dec
gs
cmp
xchg
sub
je
mov
pop
pop
popf
out
ret
fidiv
and
inc
sbb
mov
in
xor
or
shl
cwde
add
repz
add
inc
nop
adc
add
push
push
jp
pop
test
or
pop
xchg
mov
mov
cmps
ins
imul
mov
(bad)
xchg
aas
out
push
(bad)
cmps
shl
cmp
add
loopne
inc
(bad)
(bad)
(bad)
out
aad
sub
js
fimul
inc
add
inc
out
out
jge
pop
fdivr
mov
pop
push
mov
icebp
pop
or
add
into
add
mov
pop
cwde
mov
and
mov
add
call
mov
mov
xor
(bad)
or
shl
scas
push
jne
shl
xor
fs
mov
hlt
cmps
outs
cmps
ins
sub
mov
xor
in
in
dec
ja
xchg
pop
(bad)
xchg
aas
pushf
cld
aas
and
popf
es
pop
les
ins
in
imul
pop
jne
mov
xor
add
or
daa
inc
mov
pop
loope
(bad)
shl
jo
pop
dec
and
sbb
fimul
cmp
aaa
outs
shr
adc
add
mov
mov
cmp
jns
push
jmp
sti
or
add
int
(bad)
mov
add
cmp
cli
ffree
push
cli
xor
retf
jecxz
gs
jne
(bad)
in
sub
sbb
or
cld
cs
stos
test
mov
scas
and
adc
jl
pop
(bad)
aad
adc
sahf
sar
xchg
push
xor
out
mov
cmps
call
sbb
push
fld1
or
push
ficomp
dec
jae
lahf
stos
repnz
shl
pop
push
xchg
mov
jmp
mov
arpl
cld
sbb
sub
pop
stc
hlt
fistp
pop
sbb
shl
inc
jecxz
(bad)
pop
ret
pushf
movs
stos
xchg
and
mov
aaa
call
xchg
push
loopne
sub
xchg
cmps
leave
cdq
mov
pushf
inc
popa
xor
arpl
loope
dec
push
cmps
mov
(bad)
pop
dec
adc
call
adc
and
push
fisubr
mov
leave
test
adc
jnp
(bad)
cmp
scas
pusha
xor
test
dec
pop
les
add
lods
out
in
mov
and
mov
dec
adc
popf
sub
bound
adc
hlt
repz
loop
jnp
xor
inc
stos
rcl
jmp
in
push
sbb
cmp
jecxz
stc
cmp
repz
into
(bad)
dec
movs
int3
enter
data16
jbe
lods
add
jg
push
imul
iret
jl
mov
push
movs
add
jecxz
imul
jmp
xchg
inc
(bad)
xor
or
imul
call
pop
pop
or
push
clc
inc
jo
push
aad
call
das
shl
jp
push
loopne
pop
cmps
push
ja
pop
movs
shl
js
push
ret
xchg
add
dec
push
inc
popf
jmp
cmps
retf
inc
cmp
dec
int3
cmp
pop
out
das
sbb
je
in
lods
pop
pop
lods
not
dec
gs
fstp
inc
add
push
push
xor
pop
pop
cmp
mov
sub
and
fidiv
call
jo
and
push
mov
push
fld
adc
sti
jbe
adc
and
xchg
(bad)
fwait
dec
(bad)
sub
das
or
jns
hlt
in
xchg
sub
mov
stc
mov
sub
and
ins
lahf
in
rol
jnp
inc
fadd
or
xor
mov
not
(bad)
ins
les
addr16
jae
pop
mov
fnstcw
dec
push
or
pop
daa
iret
repz
push
or
fiadd
retf
adc
es
ja
mov
xchg
mov
cmps
xchg
out
mov
out
xor
jnp
add
push
inc
(bad)
cmp
in
and
test
int
out
pop
loop
xor
push
pop
or
mov
cmp
mov
sub
add
jmp
jnp
or
das
xchg
out
add
sub
call
pop
enter
dec
pop
(bad)
or
and
jge
sbb
daa
sub
in
movs
mov
pushf
repnz
mov
push
jmp
mov
xchg
push
(bad)
out
cdq
xor
cmp
mov
dec
pop
add
push
adc
mov
add
adc
push
arpl
mov
rol
sbb
vpaddsb
iret
push
inc
push
sub
std
mov
cmps
cmp
cmp
outs
or
loop
mov
mov
mov
mov
pop
and
mul
cs
stos
imul
inc
sbb
push
(bad)
push
xor
mov
add
outs
jecxz
ret
xchg
inc
pop
mov
sbb
retf
push
lods
lea
push
push
imul
shl
mov
test
inc
inc
xchg
hlt
cmp
es
dec
out
mov
mov
popa
pop
arpl
sbb
cmps
push
pop
pusha
jb
sub
daa
push
or
fst
cmc
inc
push
pop
scas
cmp
mov
jb
clc
mov
repz
repz
pop
jmp
dec
xor
dec
mov
pmaxub
mov
mov
dec
inc
pusha
rcl
sbb
add
adc
popa
aaa
mov
fcmovbe
add
pop
cmp
popf
xor
fwait
push
sti
movs
mov
mov
inc
pop
je
xor
fidivr
mov
(bad)
sub
xchg
pop
sbb
jle
mov
jb
les
mov
sti
jno
xlat
dec
shl
enter
and
xchg
inc
push
retf
out
or
lds
jmp
hlt
mov
jl
adc
jg
mov
sti
or
xchg
or
jae
int
pop
pop
push
dec
cmp
pop
pushf
jns
cmps
cwde
dec
xlat
cmc
cmp
mov
arpl
adc
and
xchg
sbb
push
sar
push
and
lock
pusha
sub
outs
mov
jg
dec
mov
popf
out
mov
dec
mov
aad
mov
ror
stc
pop
mov
jbe
icebp
add
inc
nop
add
inc
in
xlat
adc
(bad)
ins
(bad)
out
adc
add
adc
jge
das
retf
xor
js
add
call
mov
mov
clc
mov
sbb
out
xchg
xlat
or
pop
jb
mov
pop
mov
add
pop
test
(bad)
(bad)
das
pop
pop
jbe
loopne
sub
es
mov
push
or
stc
in
push
add
mov
mov
sub
sahf
hlt
jmp
shl
pop
and
es
test
std
sub
mov
inc
mov
jno
iret
fs
pop
dec
dec
cmp
ss
lods
call
mov
jns
inc
fiadd
or
xchg
sbb
xchg
mov
pop
call
rcr
xchg
pop
inc
push
repnz
test
(bad)
xor
fisttp
into
or
xchg
xchg
pop
or
xchg
push
es
push
sbb
xor
mov
dec
cld
inc
in
fstp
sbb
push
in
and
adc
mov
gs
add
xor
jo
fsubr
sub
push
pop
ret
aaa
cdq
scas
jns
push
outs
in
loopne
push
or
outs
push
pop
pop
fldenv
xchg
sbb
pop
jg
bound
aaa
loopne
mov
retf
push
cmp
in
push
test
or
inc
mov
add
std
push
push
and
dec
xor
in
mov
loopne
push
aas
retf
pop
popf
inc
cmps
sub
iret
daa
jo
ins
std
and
shl
xor
adc
je
mov
pushf
inc
in
sub
cwde
or
pop
fistp
ficomp
imul
popf
out
outs
or
fisttp
jb
call
cli
adc
out
push
xchg
fbstp
(bad)
cmps
mov
repz
and
inc
jno
call
scas
dec
call
(bad)
dec
fs
dec
call
loope
fcom
push
repz
fdivr
push
lock
sub
pop
out
(bad)
push
loope
gs
movs
fnstsw
add
pusha
clc
mov
cli
mov
mov
ret
repnz
mov
add
xor
add
dec
sar
sbb
cmp
ins
(bad)
sub
repz
add
mov
add
ss
shr
aam
pop
sub
gs
jb
dec
add
add
cmp
jl
fdiv
stc
mov
pop
in
xchg
ds
cwde
fucom
mov
xor
movs
jecxz
std
xchg
mov
lock
movs
pop
imul
in
sub
pop
mov
loop
xor
mov
aas
pushf
cmp
(bad)
fs
dec
mov
cwde
dec
loope
cli
sbb
push
or
das
outs
xlat
js
aam
pop
ins
pop
retf
sti
and
sub
daa
dec
in
int3
dec
xchg
int3
repnz
retf
inc
dec
rcr
add
stc
sub
daa
loopne
aad
fbld
in
pop
mov
ins
js
or
xor
fwait
iret
jmp
push
dec
icebp
mov
scas
mov
cmp
inc
ins
std
push
out
adc
or
xchg
xlat
ret
shl
jb
stos
xor
inc
(bad)
xchg
call
dec
aad
sub
dec
cmps
in
jle
mov
inc
push
lea
xchg
add
and
jl
jns
cli
or
or
mov
mov
es
sbb
ins
aaa
fdivr
xor
or
addr16
inc
lods
cmc
adc
test
out
adc
pop
cdq
aaa
pop
cwde
add
dec
cdq
dec
scas
or
xlat
add
push
(bad)
nop
lods
in
dec
(bad)
fs
sub
jg
movs
xchg
mov
iret
in
mov
repnz
ss
icebp
shl
aaa
mov
jb
pop
in
jp
pop
jecxz
adc
xchg
sbb
imul
jb
jmp
push
or
jns
(bad)
sar
mov
dec
(bad)
pop
in
dec
mov
leave
cmp
inc
pushf
cmp
daa
xor
xor
jne
xor
jne
ffree
mov
scas
inc
or
or
sahf
inc
or
jo
xor
mov
cmp
or
mov
inc
test
sahf
xchg
rol
pop
dec
pop
fidivr
test
icebp
ret
mov
adc
mov
inc
and
cld
sbb
cmc
pop
xchg
pop
scas
mov
popa
js
cwde
xor
int
in
inc
je
pop
cmc
or
cld
imul
push
movs
push
pop
sbb
push
xor
xchg
add
and
jae
ret
sub
popf
dec
jae
rcl
dec
mov
pusha
imul
xchg
cld
cmp
js
mov
fimul
dec
int
(bad)
mov
outs
push
or
mov
xchg
inc
in
ins
sbb
stos
pop
push
sbb
dec
arpl
push
fmul
imul
dec
retf
adc
scas
add
adc
fld
adc
shl
mov
pop
cld
sub
xchg
add
test
rcl
push
push
jg
fisttp
ret
sub
(bad)
fsubr
push
push
lock
retf
sub
imul
xor
fisubr
daa
push
(bad)
ss
wrmsr
xor
test
pushf
mov
ja
push
scas
mov
jmp
sub
and
or
mov
ja
jmp
ds
(bad)
pop
push
cmps
or
inc
mul
je
mov
push
mov
shl
stc
jbe
and
mov
mov
mov
dec
push
mov
mov
xor
(bad)
sbb
jmp
push
push
ja
cmc
int
mov
xchg
pushf
jnp
sbb
call
dec
sti
and
pop
scas
fxch
mov
ret
shl
cmp
pusha
add
out
dec
mov
fs
(bad)
sbb
test
xor
daa
aad
aam
push
mov
add
lock
jmp
inc
inc
iret
mul
out
inc
cmp
(bad)
daa
fisttp
aam
push
or
sbb
cmp
adc
and
push
cmp
push
lods
rcl
pusha
call
sub
les
test
or
mov
jmp
cmc
dec
xor
push
cdq
mov
sbb
aad
sub
popf
cmp
ja
pop
dec
xchg
lods
hlt
js
pusha
jecxz
and
leave
fcompp
mov
mov
push
push
mov
xchg
dec
outs
lock
xor
(bad)
in
push
stc
dec
mov
sub
pushfw
mov
test
out
mov
cmp
cs
xor
push
dec
inc
add
jnp
dec
adc
dec
xchg
loope
arpl
cs
je
push
and
xchg
shl
fld
loop
mov
scas
addr16
or
in
pop
clc
aas
cmps
mov
(bad)
es
aam
cld
loop
jno
fld
jns
rcr
enter
loopne
add
push
xchg
mov
(bad)
int3
lods
mov
iret
enter
cdq
sbb
add
pusha
xor
push
mov
sbb
fwait
and
lock
test
inc
loopne
adc
mov
fadd
int3
mov
fs
sbb
js
test
push
cmp
iret
mov
inc
retf
call
int3
mov
loop
(bad)
sar
int3
adc
jnp
loopne
daa
jp
(bad)
mov
cmp
repz
in
inc
aad
push
div
push
sub
cmp
fwait
mov
aad
ins
mov
scas
es
mov
movs
aam
mov
je
outs
aaa
pop
jnp
(bad)
outs
adc
jg
push
mov
adc
inc
jo
xor
and
imul
arpl
loope
(bad)
ror
stc
ins
nop
mov
jb
push
int
jb
xchg
loopne
shl
addr16
je
icebp
and
jecxz
jbe
jnp
fadd
adc
fiadd
icebp
pop
dec
add
in
(bad)
jo
sub
fistp
fst
jbe
mov
mov
xor
push
dec
inc
mov
dec
xor
outs
outs
xchg
inc
or
add
dec
sub
in
add
ret
adc
jo
or
pop
fmulp
xor
push
pushf
jp
sti
mov
pushfw
push
in
add
mov
mov
push
fisttp
add
shl
mov
add
sbb
pop
lods
fild
pusha
inc
(bad)
mov
sti
ret
aam
test
or
pop
and
ja
mov
cwde
sar
imul
xor
mov
cmp
mov
push
cmp
xor
inc
jle
repz
lds
jl
inc
(bad)
loop
call
icebp
and
ja
or
int
neg
aas
cs
in
addr16
dec
aam
or
lahf
dec
aam
push
jecxz
add
lods
or
push
pop
call
fimul
mov
sbb
sub
pop
in
jnp
xor
pop
cli
xor
xchg
iret
ret
dec
xchg
mov
outs
aas
or
ss
(bad)
mov
or
mov
sub
in
xchg
inc
aas
in
jo
cmp
push
movs
mov
idiv
fst
icebp
push
rcl
ins
dec
movs
inc
out
jp
dec
cmp
test
mov
arpl
jne
daa
sbb
and
out
push
mov
test
rol
ja
fcomp
adc
mov
ja
fimul
pop
fwait
mov
add
jecxz
sub
jge
int
dec
xchg
add
ds
std
es
scas
(bad)
test
sub
xchg
inc
cmp
stos
dec
retf
push
cdq
int3
int
pop
ins
fbld
push
push
pusha
je
adc
or
inc
pop
lea
xchg
data16
hlt
(bad)
xchg
(bad)
fcom
shl
enter
(bad)
adc
adc
add
sar
xchg
mov
ja
aad
pop
pop
mov
cmps
adc
inc
cmove
xchg
pop
adc
imul
addr16
push
mov
call
mov
fild
js
out
or
pusha
(bad)
int
jle
icebp
lock
xchg
(bad)
sub
sar
jge
xchg
cmp
scas
mov
frstor
je
int3
(bad)
lea
pop
call
div
outs
mov
call
jp
retf
sbb
in
call
repnz
xor
mov
stos
jg
test
cli
std
xchg
cwde
jl
push
dec
xchg
das
jo
inc
or
pop
test
stc
inc
test
int
cmp
pop
jne
call
arpl
je
out
and
cmp
(bad)
adc
mov
jmp
retf
stos
jns
iret
je
jmp
push
lea
jle
mov
imul
mov
ins
xor
jecxz
adc
bound
push
neg
ins
call
jmp
xchg
pop
test
movs
push
xchg
out
xchg
dec
shl
imul
mov
repz
scas
imul
shr
cmp
mov
leave
cwde
loop
mov
mov
inc
mov
pop
cld
test
mov
and
mov
out
aas
and
cmp
mov
ins
or
inc
dec
adc
popa
test
hlt
cmp
shr
cmp
add
gs
sbb
sub
xchg
lods
in
and
inc
inc
add
push
mov
adc
std
xchg
mov
div
ja
dec
cmps
repz
pusha
sbb
mov
dec
inc
pop
cs
icebp
jge
mov
mov
push
fdivr
dec
adc
xchg
xor
addr16
add
out
adc
gs
jmp
mov
sbb
xor
nop
push
fst
cdq
dec
pop
sbb
cli
push
les
xor
lods
int
stos
je
fcom
test
gs
clc
(bad)
adc
fisubr
sub
ret
sbb
or
push
(bad)
imul
nop
push
(bad)
popf
jle
jo
fwait
dec
out
and
rol
pusha
push
inc
fiadd
or
mov
mov
(bad)
push
adc
jg
js
lods
inc
dec
cli
mov
fisub
retf
mov
sub
sti
es
fdiv
(bad)
mov
jp
in
retf
and
shr
and
xor
js
imul
dec
sub
adc
push
mov
lods
sbb
and
jne
mov
sbb
js
jecxz
sahf
mov
mov
imul
pop
sbb
dec
arpl
pop
cdq
mov
mov
std
retf
loopne
aaa
in
idiv
fldcw
pop
call
jno
in
in
fs
push
jmp
sub
mov
sub
scas
jbe
fs
in
add
sbb
push
es
leave
sbb
outs
dec
cmp
mov
jae
cmp
cmp
out
data16
push
(bad)
scas
scas
lods
xor
mov
jmp
inc
aam
adc
inc
dec
push
push
xor
or
mov
movs
inc
jbe
jmp
sub
out
fs
ins
pop
xor
cwde
adc
into
mov
xchg
sbb
jle
bound
ins
or
bound
gs
add
lahf
ss
push
iret
and
repnz
out
xchg
jg
adc
dec
jge
dec
dec
dec
mov
loop
xor
or
xchg
push
and
in
icebp
inc
xor
neg
jb
sbb
repz
test
sub
imul
test
loope
fild
ins
xor
jmp
inc
(bad)
sub
leave
jae
push
cli
iret
(bad)
nop
and
ja
dec
push
pop
(bad)
xor
adc
test
repnz
xchg
popf
adc
pop
inc
mov
test
outs
mov
ins
enter
lods
cmp
hlt
push
aam
mov
mov
mov
in
es
push
xchg
pop
push
call
push
xlat
call
scas
mov
xchg
sbb
sub
sub
xchg
and
or
mov
aaa
aam
in
and
push
push
sub
xchg
ja
ja
xor
sbb
retf
mov
xchg
mov
out
(bad)
fisttp
mov
add
or
pop
add
mov
sub
(bad)
lds
imul
and
cli
mov
jb
stc
pushf
cmps
lock
sbb
dec
aas
out
test
cmc
xchg
into
rol
fs
xchg
fimul
xchg
cmp
iret
mov
xor
fstp
jae
push
popf
add
push
jns
cdq
push
test
fisubr
js
cmc
or
push
outs
mov
imul
test
pop
enter
jmp
push
sub
lods
push
mov
pop
cmp
xor
call
dec
xor
rol
add
and
retf
mov
sub
retf
ins
mov
xor
jns
outs
fdiv
cli
jmp
in
xlat
cwde
cmps
lahf
dec
fsub
es
stc
mov
adc
add
idiv
dec
and
jo
divps
pop
in
push
push
push
(bad)
xlat
jmp
xchg
call
ins
dec
(bad)
mov
dec
lods
popa
idiv
add
jecxz
sub
jle
out
adc
add
(bad)
call
in
(bad)
jne
and
bound
xor
addr16
jp
push
mov
cmp
dec
and
pop
xor
mov
mov
imul
add
push
xor
fmul
push
nop
les
jae
jmp
sub
ret
jle
add
jge
les
call
sti
cli
shl
sub
mov
lods
cli
hlt
jnp
adc
or
jle
scas
mov
push
loope
mov
push
pop
repnz
ret
aaa
cmc
xor
scas
out
loop
inc
pusha
std
js
sbb
cmp
and
rcl
mov
cmps
icebp
fiadd
or
scas
inc
mov
ins
out
out
adc
in
add
xor
add
jl
and
repz
nop
jmp
in
pop
sub
ins
sar
jb
dec
jmp
add
jecxz
ret
jp
cmps
jl
cli
sub
test
dec
imul
mov
push
fiadd
cmp
mov
push
mov
arpl
fs
test
icebp
cwde
loopne
inc
push
or
test
dec
jne
std
pop
cmp
cmp
sub
inc
mov
(bad)
push
adc
jl
lock
jecxz
jae
inc
push
aam
repnz
and
jle
push
ins
lods
inc
out
lods
inc
data16
or
mov
or
jl
and
rsqrtps
dec
or
aad
ficom
pop
xor
pusha
jne
aad
enter
repz
retf
stos
and
sub
out
movs
mov
outs
inc
stos
mov
out
stos
or
dec
and
adc
(bad)
jnp
adc
xchg
mov
out
cmc
or
std
rcl
adc
xor
(bad)
fimul
and
and
sub
push
inc
iret
xor
xchg
mov
pop
dec
push
out
add
pop
retf
inc
pop
sub
mov
and
push
and
or
imul
cwde
adc
pop
mov
jle
push
icebp
daa
push
outs
mov
sbb
jg
add
cmp
pop
xor
inc
xor
mov
xchg
pusha
and
je
and
pop
push
mov
and
or
jae
stc
lds
out
fld
sbb
sub
(bad)
push
jp
ret
and
ss
jns
push
and
out
stc
stc
je
mov
stos
mov
mov
mov
jns
rcr
outs
repnz
popf
rcr
ins
shl
ret
jae
scas
or
stos
mov
mov
mov
ror
ss
das
cwde
mov
cs
cmp
jle
or
sub
cmp
pushf
fs
stos
stos
std
dec
adc
lahf
mov
cmps
mov
cmps
xchg
mov
jle
aaa
mov
jns
inc
clc
jb
cmp
jae
add
jbe
daa
push
xchg
idiv
(bad)
cli
and
jg
dec
dec
push
hlt
dec
retf
das
out
dec
sbb
jg
or
push
xchg
call
fwait
loopne
rcl
ins
cdq
xchg
mov
cmp
xlat
xchg
enter
dec
aam
stos
mov
mov
icebp
jb
xchg
xchg
mov
jnp
aad
test
cmp
les
adc
jge
push
mov
ret
sub
sub
xor
into
dec
shl
mov
sbb
in
jnp
nop
xchg
sbb
jmp
cld
popa
enter
clc
int3
xchg
movs
pop
(bad)
cmp
ins
imul
cmp
mov
adc
cmps
popa
mov
in
push
daa
popa
sbb
dec
push
jbe
mov
ins
push
inc
jmp
xchg
int
stc
pop
cmp
and
jecxz
scas
pushf
sbb
test
mov
mov
adc
imul
or
scas
pop
jbe
push
pop
lods
xchg
dec
(bad)
shl
xlat
(bad)
sbb
jecxz
fstp
pushaw
jns
movs
leave
inc
push
jle
pop
jmp
xchg
dec
push
fild
aaa
lahf
scas
mov
or
lahf
cdq
push
push
pop
aad
mov
jne
out
jl
iret
test
or
inc
neg
popf
xchg
stos
xchg
xor
pop
pop
xchg
pushf
out
loope
ja
mov
add
sar
pop
mov
mov
cmp
dec
xchg
jb
cs
mov
popf
mov
cli
xor
inc
or
dec
mov
mov
fs
cli
and
fiadd
cmps
add
xchg
retf
xchg
outs
sub
pusha
pusha
in
pop
and
fnstcw
push
mov
jmp
mov
add
in
addr16
test
pusha
dec
mov
pop
retf
mov
adc
call
(bad)
pop
and
cmp
fisttp
mov
push
inc
dec
pop
jl
clc
xchg
stos
and
cmp
adc
mov
jmp
mov
retf
in
shl
push
push
ins
loop
movs
pop
cwde
dec
and
cmp
data16
(bad)
call
shl
fwait
dec
pop
test
icebp
loopne
fcmovu
jno
aaa
inc
mov
fnstsw
pusha
xor
mov
and
xchg
xor
ss
rol
and
mov
inc
es
push
gs
add
or
outs
dec
cs
cmp
cld
inc
dec
outs
stos
movs
jns
pop
pop
js
fidiv
cld
loope
dec
in
in
adc
push
cmp
mov
out
cmp
imul
jmp
mov
push
dec
stc
jge
adc
out
xlat
fwait
pop
addr16
mov
xchg
repnz
push
xor
jge
out
lock
mov
shr
outs
mov
stos
jecxz
sbb
mov
rep
push
jbe
mov
adc
test
cwde
xchg
sahf
clc
or
xchg
inc
xchg
mov
stc
lahf
jnp
les
add
xlat
outs
and
cli
mov
jmp
adc
cmp
leave
popa
cmp
or
ja
adc
inc
mov
imul
xor
dec
int
cmps
hlt
shr
into
xchg
cs
adc
test
sub
mov
fisttp
rcl
push
(bad)
(bad)
movs
es
dec
pop
in
adc
xchg
and
popf
push
fistp
ja
cmp
in
inc
mov
push
leave
jae
cmp
jbe
lock
xor
jecxz
outs
sub
fs
jle
mov
inc
je
push
pop
sbb
cmps
fsub
jb
and
lods
mov
cmp
cli
sbb
andps
test
mov
addr16
arpl
leave
inc
xchg
mov
repz
sub
sar
add
cdq
cmp
clc
cmp
mov
aaa
ret
mov
ret
pusha
jp
sub
dec
dec
sahf
mov
sub
or
aas
xchg
mov
add
jne
add
inc
jnp
or
jl
lods
push
jne
cli
mov
in
mov
mov
inc
xchg
out
push
push
data16
sub
push
push
xchg
cwde
cmp
and
loopne
fsubr
(bad)
gs
and
adc
retf
add
cmps
cmps
adc
jb
sbb
cmp
fcom
sbb
iret
popa
dec
iret
ret
cmp
(bad)
stc
mov
pusha
int3
es
loope
dec
pop
outs
jmp
stos
or
jle
scas
pop
sub
pop
ror
cmps
in
dec
mov
xchg
gs
leave
mov
daa
out
loop
test
dec
xchg
leave
daa
dec
sbb
push
retf
jnp
movs
cmps
jle
push
jg
mov
add
sub
dec
not
cwde
push
add
pop
ss
push
in
dec
mov
pop
or
stos
hlt
jb
imul
test
sub
pop
call
in
inc
fild
out
popa
jae
mov
in
daa
ja
mov
fistp
add
cmp
scas
xchg
cdq
push
pop
rcl
pop
mov
jge
and
adc
pop
push
sar
mov
(bad)
shl
(bad)
push
mov
loope
jecxz
push
push
sbb
mov
std
mov
dec
aas
pop
ret
mov
inc
and
std
adc
xchg
mov
pop
push
ds
mov
sbb
mov
stc
mov
cmp
sbb
rol
mov
leave
jge
sub
lahf
(bad)
mov
mov
repnz
dec
push
lds
daa
inc
adc
mov
in
pop
mov
test
fdiv
sbb
mov
mul
sbb
stos
pop
lea
jns
dec
retf
push
fcom
mov
rol
jnp
mov
mov
jg
in
out
jnp
push
push
movs
aad
mov
ja
or
push
xlat
xchg
add
(bad)
data16
ss
xchg
fldenv
dec
int3
call
mov
dec
rcl
mov
push
pop
mov
inc
jmp
mov
xchg
pop
in
ret
in
cmp
shl
pop
mov
xor
cwde
xchg
pop
or
xchg
std
lds
imul
rcl
fwait
mov
mov
inc
loope
push
inc
inc
sbb
add
cmp
shl
cmps
lock
stos
daa
stc
mov
pop
shl
sbb
js
repz
cwde
mov
hlt
lahf
xchg
inc
jecxz
scas
jmp
retf
in
adc
inc
sub
inc
call
or
fidiv
fsub
scas
je
(bad)
imul
push
das
ins
lods
inc
ror
sbb
jae
push
daa
int
in
push
xchg
or
fcom
(bad)
mov
xchg
ss
sbb
xchg
shl
pcmpgtd
(bad)
in
int3
mov
aad
jno
or
lea
pop
adc
cmc
dec
cli
xchg
xchg
stos
and
add
jo
add
ror
(bad)
push
jbe
fdivr
dec
inc
cmc
and
ror
xor
sub
mov
or
push
jecxz
test
loope
push
and
in
stos
lods
into
push
(bad)
loopne
xor
or
cmp
fdivr
in
mov
pop
cmp
hlt
xlat
mov
(bad)
out
js
or
aaa
sahf
cdq
ja
xor
out
imul
fwait
sub
and
fbld
sub
add
sbb
pop
das
cmp
out
stos
xchg
test
std
inc
xchg
xchg
xor
fwait
jmp
cmp
add
cmps
aas
mov
jbe
adc
or
and
push
ins
fs
jae
scas
xchg
push
lock
pop
fmul
inc
aas
xor
jle
sbb
push
sbb
mov
stos
dec
xor
xchg
dec
lods
lock
loop
stc
cs
mov
dec
xchg
test
es
cs
dec
sub
add
sub
mov
leave
jae
ret
xchg
jle
and
mov
jno
xor
das
sbb
lea
jmp
shr
cmp
fs
pop
int3
pop
out
lock
and
test
xor
dec
inc
leave
es
sub
(bad)
pop
ja
fdiv
adc
mov
call
cmp
sbb
fcomp
xchg
popa
mov
jmp
cld
lods
cmp
rcr
cmp
jl
loopne
adc
mov
daa
jle
push
adc
mov
arpl
pushf
push
pcmpeqb
sbb
ins
nop
cmp
cli
lea
cmp
jge
inc
in
xchg
sub
fs
jge
add
jne
mov
dec
push
ror
in
pop
push
int
lods
and
jbe
dec
sub
les
in
ja
out
lds
leave
jmp
cmps
sbb
add
cmps
push
loop
add
mov
inc
sbb
cmp
inc
outs
ret
xchg
push
xor
mov
or
and
pop
mov
cdq
stos
int
mov
out
shr
cdq
pop
sahf
pop
jb
dec
popf
or
sub
xor
push
or
xor
sbb
push
mov
xor
cmps
mov
hlt
dec
pop
pop
mov
js
xor
mov
or
out
xor
inc
rcr
in
mov
cmc
add
cmc
es
adc
mov
imul
fisttp
adc
adc
adc
dec
jo
dec
xchg
test
xchg
ja
cmp
add
inc
sti
out
sub
and
pop
sub
mov
nop
loope
lods
cdq
ss
rol
and
pop
cli
aaa
mov
add
add
inc
out
push
or
xor
add
cs
popf
out
pop
cmp
cmp
mov
ret
(bad)
lock
je
mov
imul
xchg
les
mov
aam
mov
lods
dec
mov
leave
inc
inc
push
cmp
ins
ret
mov
pushf
scas
add
mov
pusha
mov
inc
into
push
(bad)
mov
xor
cmp
out
cmp
jno
pusha
imul
add
mov
ret
cmp
adc
aas
pop
(bad)
scas
addr16
gs
and
mov
jae
add
dec
pop
push
nop
test
cmp
jb
loopne
inc
mov
and
mov
mov
push
sbb
rcl
push
imul
popa
jns
add
cmp
repnz
rcr
scas
ret
sbb
mov
out
cli
sub
add
xchg
and
push
mov
cmc
outs
loop
mov
ret
adc
or
jp
pushf
shl
sub
sub
ret
inc
movs
jmp
mov
jle
xchg
popf
outs
push
push
adc
ins
jp
mov
xchg
cmp
sbb
jg
shr
push
or
fiadd
popf
or
jge
mov
xchg
add
inc
popa
test
data16
in
dec
les
add
pop
xlat
pop
xchg
lds
jo
outs
aad
aad
in
and
sbb
mov
sbb
lods
out
ds
mov
inc
(bad)
push
push
in
xchg
mov
or
inc
or
mov
or
clc
and
nop
cmp
sub
xor
pop
inc
push
std
arpl
inc
into
mov
jbe
mov
and
add
jp
ror
jb
fdiv
(bad)
fucom
xchg
inc
cdq
fmul
mov
cmp
push
inc
push
stos
repz
mov
scas
and
xchg
xchg
imul
fwait
xchg
adc
mov
add
cmp
lods
adc
pop
popa
mov
jo
test
mov
retf
mov
je
aad
or
jnp
pop
lea
mov
shl
mov
cmp
(bad)
imul
test
sub
dec
aas
mov
push
and
lds
push
imul
mov
pop
mov
pop
and
fs
mov
in
out
test
sbb
jp
mov
cli
cld
xor
pop
dec
push
pop
dec
cmps
jne
fistp
sbb
adc
cmp
cwde
imul
inc
or
hlt
mov
push
or
mul
ja
and
pop
xchg
repnz
cmp
push
ret
lahf
push
daa
into
pop
adc
aam
or
cmp
ins
adc
xor
jno
ret
les
inc
les
xchg
and
cmps
enter
inc
jmp
dec
push
enter
cs
dec
inc
sub
in
mov
aaa
lods
aam
cld
jmp
cwde
mov
aas
push
pop
pushf
jmp
pushf
inc
stos
mov
inc
xchg
fwait
in
ret
or
in
aam
ret
mov
mov
out
out
(bad)
nop
and
mov
retf
push
mov
dec
hlt
adc
aam
lods
retf
adc
pop
(bad)
mov
or
in
xchg
or
out
stos
or
cmc
pop
ret
cmp
lea
sbb
ins
xor
ins
out
mov
out
sti
(bad)
dec
loop
nop
or
test
lods
cwde
xor
dec
outs
(bad)
sahf
add
lods
add
repz
push
ret
bound
xchg
enter
sub
push
mov
sub
and
push
ss
or
and
inc
(bad)
aas
loope
sbb
dec
pusha
adc
stos
push
add
mov
sub
and
inc
bswap
pushf
addr16
ja
or
cwde
xchg
arpl
cwde
inc
les
mov
pop
dec
(bad)
cdq
mov
xchg
adc
add
retf
repz
jmp
sbb
adc
aas
test
(bad)
and
iret
push
pop
cmp
mov
repnz
das
fsub
jno
jp
aaa
leave
ins
jo
inc
xchg
mov
jmp
fwait
loopne
push
cwde
push
in
pop
ds
push
addr16
mov
add
xor
jg
outs
ror
loop
add
sub
mov
mov
xor
dec
lods
shr
add
out
cwde
sar
and
lahf
outs
das
rcl
jns
inc
sub
inc
push
lahf
dec
xchg
(bad)
push
inc
retf
push
fst
ficom
jne
sahf
js
cdq
rcl
xor
add
sub
push
xchg
js
mov
inc
je
stc
call
and
test
jg
test
in
into
and
xchg
and
scas
jge
pop
jno
mov
dec
xchg
mov
xchg
inc
jmp
inc
push
fs
jecxz
push
mov
pop
adc
pop
jl
mov
pop
shr
mov
aam
clc
xchg
rcl
loopne
cmp
std
test
in
jle
mov
cmp
push
in
test
or
mov
adc
aaa
daa
and
ror
or
xchg
repnz
xor
aas
out
inc
in
(bad)
lods
pop
xor
out
push
jp
pop
outs
les
retf
jge
inc
stc
dec
cmc
mov
test
adc
jno
mov
lods
xchg
mov
jne
adc
dec
mov
je
xchg
retf
push
mov
and
xlat
cdq
sbb
and
xor
movs
in
(bad)
(bad)
sub
and
push
sbb
stos
scas
(bad)
pop
enter
add
call
daa
sub
stc
dec
popf
pinsrw
(bad)
cld
cld
cwde
inc
and
int3
fbstp
mov
or
in
xor
outs
xchg
sbb
test
lods
dec
inc
push
pop
ss
js
cs
fdiv
or
(bad)
out
je
add
movs
dec
adc
mov
in
mov
test
clc
and
in
iret
mov
sbb
jo
lds
retf
cmp
cmp
pop
sar
(bad)
mov
jecxz
loope
fild
push
ins
mov
xchg
xor
pop
das
addr16
ins
mov
and
add
cmp
ficomp
mov
scas
pop
push
push
sbb
mov
sub
int3
and
cs
xor
mov
push
cmp
xchg
out
out
lods
push
or
push
and
add
daa
arpl
add
mov
pop
add
xor
imul
fist
mov
mov
jae
jmp
fdiv
out
fsubp
xor
aam
inc
(bad)
retf
pop
jle
mov
xchg
pop
adc
aad
pop
add
nop
(bad)
sbb
push
or
nop
push
xor
inc
push
push
xor
jmp
add
cdq
pop
dec
or
int
(bad)
js
cwde
mov
test
in
mov
mov
pop
imul
movs
test
push
push
inc
jae
(bad)
in
loope
mov
add
mov
ja
cmc
xchg
inc
shr
sahf
pop
xchg
fisttp
or
mov
shl
cmp
rcr
retf
ror
sub
rol
or
sub
or
xor
icebp
mov
rol
das
inc
jge
cmp
or
push
movs
aaa
inc
fsubr
mov
push
out
mov
xor
add
xchg
retf
pop
ins
adc
jmp
xor
and
ret
push
jle
les
ror
jne
cdq
ss
arpl
pop
jge
or
or
retf
fdiv
jns
fwait
mov
jle
mov
ja
mov
push
mov
inc
jl
into
loop
ins
lahf
clc
pop
pop
dec
jb
xchg
loope
leave
dec
jmp
sub
inc
aas
scas
je
xor
add
cdq
pop
push
data16
(bad)
std
lods
mov
test
cmp
dec
neg
push
popa
(bad)
jo
cmp
mov
popf
inc
lods
ins
sbb
gs
sub
cmp
xchg
inc
cmp
cmp
cmp
cmovs
cmp
mov
ja
cli
xor
scas
out
sar
test
push
dec
nop
jo
xchg
pop
mov
not
movs
sub
push
or
mov
into
mov
cmp
in
in
lock
xor
daa
imul
icebp
(bad)
mov
inc
arpl
jmp
lods
xor
scas
add
mul
sub
cmp
in
leave
ss
cmps
pop
clc
mov
cli
enter
test
in
jecxz
dec
stos
addr16
jg
pop
stos
in
rcr
mov
pop
popa
jecxz
push
ffreep
(bad)
dec
adc
std
jbe
jnp
cld
cs
fwait
dec
add
(bad)
inc
adc
mov
push
gs
xchg
jge
mov
sub
cmc
dec
imul
js
test
mov
xor
mov
ds
repnz
ficom
inc
or
cmp
push
pushf
lods
ins
inc
stc
mov
xchg
dec
mov
in
and
push
and
and
stc
push
fld
mov
sbb
xchg
push
inc
cmp
jmp
mov
inc
sbb
cmp
sbb
cmp
mov
sahf
sar
aaa
stc
dec
add
int3
inc
arpl
loop
fidivr
gs
mov
aad
loope
ins
jp
xor
dec
sub
xchg
cwde
or
xchg
and
scas
mov
inc
ins
jl
arpl
fsubr
cmp
data16
pop
xor
xchg
rcl
retf
jge
add
scas
std
cmps
pop
rcl
dec
and
cmps
out
jle
pop
lea
cmp
xor
mov
loope
dec
sbb
xor
popa
jne
mov
xchg
retf
cmps
retf
imul
mov
iret
cmp
mov
call
dec
push
aaa
mov
icebp
jge
jecxz
movs
pop
mov
mov
neg
xchg
xor
inc
pop
push
sbb
mov
popa
popa
dec
push
pop
xor
jge
and
mov
daa
stc
and
or
mov
push
call
adc
xor
mov
sti
sar
sti
dec
pop
gs
or
jp
out
cmp
test
not
ror
xchg
sub
iret
(bad)
xor
mov
ss
ja
inc
test
fsub
mov
rcl
mov
mov
xor
jbe
nop
dec
sub
in
mov
xchg
fldenv
rol
stos
inc
pusha
push
jg
inc
shl
(bad)
daa
cmp
and
dec
jg
inc
cmp
vmovddup
and
inc
aas
dec
retf
int
ins
sar
sub
enter
sub
pop
adc
push
movs
dec
or
mov
out
sbb
ds
fmul
ret
(bad)
out
dec
data16
dec
sbb
push
test
xchg
xlat
or
cmc
rcl
ret
cli
jmp
mov
mov
js
dec
cs
jp
scas
mov
dec
movs
pop
and
ret
fsub
lods
dec
jp
out
int
inc
inc
push
xor
es
add
ret
jmp
scas
adc
ss
push
popa
jmp
retf
cmp
psllq
ret
mov
mul
lods
cmp
adc
je
jns
push
cwde
test
and
jecxz
stc
jae
popf
test
dec
or
push
add
mov
mov
or
mov
cwde
dec
cmp
loope
add
mov
inc
shl
and
dec
mov
adc
fs
xlat
pop
fild
mul
push
xchg
stos
adc
xor
ficom
loopne
pushf
fild
inc
dec
jg
xor
and
adc
cmc
and
retf
dec
popa
lods
mov
fisubr
mov
scas
push
and
xchg
mov
xor
cmp
out
and
lods
lea
nop
xchg
xor
or
xchg
ror
push
jns
in
std
es
(bad)
or
mov
cmp
mov
or
jg
adc
mov
cmps
xchg
mov
sbb
or
fidivr
fcmovne
enter
pop
mov
bound
ret
and
cmp
loope
xchg
mov
jne
sub
and
repnz
mov
lock
dec
pop
cmp
sbb
in
jne
mov
inc
jg
pushf
test
mov
lock
ss
dec
test
aaa
sub
push
xchg
pop
xchg
mov
dec
mov
jge
test
mov
jb
repz
xchg
xor
arpl
and
mov
cmps
(bad)
pop
xchg
xor
inc
mov
call
jmp
test
je
movs
push
mov
fst
lods
in
test
xor
je
push
adc
and
rcr
shr
daa
inc
mov
scas
xchg
in
xchg
sbb
xor
mov
pop
and
adc
or
es
call
jae
and
and
mov
test
imul
sbb
jp
cwde
jge
loope
dec
addr16
push
or
add
loop
adc
lea
repz
pop
lock
bsf
stos
outs
inc
mov
add
test
push
pusha
retf
outs
std
repz
mov
call
ins
into
jecxz
shr
or
aaa
aas
xchg
pop
cmps
sti
cmc
xchg
out
ret
or
(bad)
xor
iret
adc
lds
xchg
sbb
das
pop
mov
repnz
ret
mov
adc
and
cli
pop
popw
jp
mov
and
xchg
xor
mov
mov
pop
sub
pop
in
mov
cmp
mov
push
mov
hlt
inc
daa
or
sub
xor
shl
push
ficomp
sti
xor
xchg
cmps
cwde
push
out
or
loope
jle
mov
fisub
lods
mov
int
fwait
inc
fimul
sbb
movs
je
gs
dec
lods
retf
or
jnp
ja
and
sub
mov
lahf
stos
scas
xlat
xor
bound
int
inc
retf
(bad)
ret
cwde
sbb
xchg
mov
push
cmp
dec
dec
jae
cmp
pop
icebp
rcl
or
cmp
sub
xchg
push
and
out
mov
(bad)
aad
add
pop
outs
jmp
fs
imul
pop
int3
enter
mov
lock
in
jnp
cwde
xchg
bound
dec
dec
leave
ficom
lock
jne
stos
push
jne
dec
xchg
mov
add
popf
adc
std
(bad)
push
stos
icebp
out
and
lods
dec
push
xchg
adc
jbe
mov
or
test
daa
adc
or
and
cmp
xchg
push
out
xor
and
test
ds
fs
cmc
pusha
stos
sub
inc
adc
sbb
xor
xchg
pushf
enter
dec
jo
and
cld
cli
retf
cmp
movs
mov
fdivr
cmp
test
jg
ds
ss
pop
and
cli
in
and
js
fiadd
jp
push
lock
xor
js
cmps
fisttp
arpl
mov
test
xchg
or
(bad)
jmp
mov
daa
cld
shl
movs
xchg
int
jae
push
sub
pop
cdq
add
or
mov
mov
dec
inc
cmp
into
jae
movs
fdivrp
or
fadd
sub
test
pop
or
out
jl
dec
out
(bad)
movs
cmc
cmp
push
aad
lds
inc
pusha
sub
call
frstor
fwait
push
sub
xchg
(bad)
cwde
dec
call
scas
movs
outs
mov
loopne
shr
cmp
inc
dec
aaa
das
mov
fst
and
xor
retf
xor
pushf
test
data16
sub
ins
imul
xchg
xchg
popa
inc
dec
add
rcr
std
mov
cmp
out
and
test
movs
or
push
cmp
stc
loop
pop
out
push
jle
out
or
mov
js
imul
cmp
inc
or
fbstp
sub
mov
ds
adc
scas
dec
pop
hlt
mov
xor
xor
int
mov
xor
sbb
les
push
lods
and
rol
retf
adc
mov
ins
shl
aam
push
mov
(bad)
rcr
fxam
test
xchg
prefetch
or
popa
jno
pop
aaa
lock
jp
lea
cld
jl
push
push
mov
aaa
in
sub
daa
dec
add
mov
fisttp
int3
(bad)
lods
cdq
std
sub
jge
or
sar
stos
dec
sub
cmc
mov
ror
and
jbe
inc
ja
pusha
lahf
dec
shl
mov
sub
jle
mov
fst
inc
jb
pusha
jns
ret
(bad)
out
inc
in
xlat
call
mov
sbb
mov
pop
scas
fs
mov
out
(bad)
and
xchg
aad
push
mov
mov
sbb
mov
test
cld
int
cs
add
ss
ret
and
mov
ins
push
dec
out
jge
out
out
je
scas
xchg
inc
das
add
xchg
mov
fstp
push
icebp
push
adc
(bad)
imul
idiv
push
pop
sub
jnp
(bad)
call
sar
xchg
xchg
sbb
jle
cmp
out
jnp
cdq
push
sub
or
dec
adc
test
pushf
in
mov
iret
jecxz
mov
repz
shr
or
jo
inc
cs
(bad)
and
and
(bad)
in
xor
cld
pop
cmps
(bad)
fild
sbb
mov
xor
in
or
jno
add
inc
dec
add
sbb
push
xchg
pop
iret
jp
ficomp
sub
push
xchg
xchg
sub
loope
out
int
cmc
adc
clc
pop
xchg
sub
iret
mov
call
cmps
shl
jo
arpl
cmp
jnp
xchg
dec
inc
retf
xchg
nop
dec
or
leave
mov
movs
repz
and
mov
adc
sbb
daa
hlt
out
add
and
xor
sub
aam
into
sub
test
(bad)
cli
cdq
mov
movs
retf
fmul
lods
jo
inc
xchg
jbe
vpmulhuw
js
mul
sub
iret
out
push
idiv
pop
sub
mov
les
enter
add
div
imul
dec
loop
es
pop
pusha
mov
and
mov
dec
outs
mov
in
push
jno
adc
mov
xchg
xchg
sti
call
push
pushf
ins
cmps
call
test
sub
mov
scas
cmp
xchg
cmps
push
adc
cli
xchg
mov
pushf
iret
fwait
dec
sub
mov
shr
int
xor
sbb
fidivr
pcmpeqw
sbb
out
fisub
out
call
cmp
jno
push
jg
xchg
cmovnp
lahf
aam
in
jg
aam
aaa
test
imul
push
inc
pop
aam
les
inc
int
push
mov
scas
ja
and
dec
push
(bad)
scas
cmp
jb
out
ds
xor
push
ret
push
ds
(bad)
mov
imul
std
sahf
or
cs
addr16
repz
sbb
inc
test
mov
call
cmp
scas
dec
push
pmaxub
std
fild
int3
iret
stos
inc
cdq
ins
imul
or
xchg
sub
xchg
pop
popa
push
(bad)
push
lds
outs
repz
iret
sub
out
dec
xchg
inc
aas
lods
or
arpl
mov
je
les
popf
jmp
add
jne
test
mov
mov
sbb
movs
mov
inc
mov
xchg
jl
mov
test
out
mov
addr16
fcmovb
out
jg
sahf
test
jns
in
mov
repz
shl
mov
test
ja
or
gs
mov
and
sub
int3
fisub
inc
xor
jne
dec
gs
sub
enter
inc
dec
sbb
xchg
lods
inc
adc
dec
icebp
js
jge
cmps
(bad)
mov
mov
es
out
jg
jbe
ins
je
cmp
and
mov
out
mov
fwait
xchg
rol
shr
rcr
(bad)
push
cmc
or
sub
push
sahf
and
mov
dec
sbb
in
mov
jmp
jle
xchg
xor
jb
xor
dec
push
push
arpl
push
enter
fwait
out
mov
or
outs
or
add
dec
(bad)
aaa
mov
mov
test
mov
nop
ds
jge
dec
jmp
popa
fwait
xlat
adc
daa
call
call
imul
lds
shr
div
idiv
mov
sete
ins
jmp
arpl
outs
mov
nop
retf
push
cmps
jns
add
inc
and
mov
dec
jbe
or
jne
repz
pop
(bad)
movs
push
loope
sub
inc
test
shr
cmc
mov
rol
fld
jne
aas
jge
push
sbb
rcl
retf
jle
pop
cmp
mov
call
iret
or
jle
ins
(bad)
outs
and
lods
and
xchg
bnd
or
xchg
xor
jmp
pusha
sbb
ins
cmps
lock
sbb
sbb
add
ret
and
scas
cmp
add
cmp
(bad)
lods
inc
pop
into
ins
popf
jbe
pop
cmp
sti
jmp
loopne
retf
cli
inc
or
repz
or
dec
test
fimul
push
scas
stos
jbe
push
mov
dec
popa
jge
sub
mov
xor
jb
lahf
adc
cmp
rcr
inc
dec
mov
mov
inc
inc
xor
(bad)
enter
fldcw
mov
daa
xor
(bad)
cs
dec
and
add
adc
sub
and
xor
inc
xor
out
push
inc
out
aam
dec
cdq
ret
cmps
les
push
push
sti
ins
mov
inc
sbb
popa
or
cmc
aam
movs
mov
sbb
mov
stos
clc
imul
cmp
leave
addr16
retf
movs
(bad)
and
sub
clc
ss
inc
sar
or
jae
and
push
or
dec
xchg
and
sub
cmp
and
xchg
add
xor
(bad)
push
fcom
inc
sub
and
cmp
enter
xor
add
push
lods
ja
and
nop
fcomp
leave
sub
mov
loopne
sub
adc
(bad)
enter
mov
in
dec
ret
push
adc
clc
aad
sbb
pushf
xchg
xchg
lahf
jmp
mov
sub
jmp
sub
daa
adc
loopne
addr16
cmp
jnp
push
cmp
(bad)
adc
cmp
leave
and
sbb
ror
and
(bad)
fwait
inc
pop
icebp
push
stos
fimul
loopne
push
adc
jmp
les
inc
xor
mov
xor
sbb
nop
mov
mov
test
sub
bnd
mov
fprem
push
mov
jnp
dec
add
cmp
sbb
push
mov
mov
mov
mov
loope
test
mov
cmp
test
mov
or
clc
psrlq
mov
or
fwait
outs
xchg
adc
fimul
jo
sahf
adc
scas
aas
popa
add
cmp
mov
fmul
jb
adc
loopne
inc
imul
xchg
push
(bad)
repz
ret
push
push
ret
das
aas
cmp
cmp
dec
mov
fwait
mov
fistp
pop
xchg
adc
add
data16
and
or
pop
or
out
lods
div
fidivr
retf
sbb
push
sbb
pop
and
pop
outs
cmp
cmc
or
rol
cs
mov
(bad)
repnz
loop
mov
ja
sub
not
cmp
push
sbb
inc
loop
aam
jmp
inc
ja
js
retf
jae
cmp
adc
jns
jo
mov
jbe
jae
daa
mov
inc
dec
mov
fs
and
in
pop
test
push
mov
mov
imul
daa
out
inc
sbb
mov
std
push
sar
mov
pop
cmp
and
jns
push
inc
push
inc
test
test
add
sub
int
push
outs
cmp
nop
inc
xchg
and
pushf
mov
into
(bad)
in
imul
push
les
(bad)
adc
(bad)
sub
mov
push
xor
xor
and
shl
(bad)
jecxz
sbb
pusha
clc
dec
rcr
ds
push
cli
xchg
fisttp
fdivr
rcl
push
sahf
jo
jno
add
retf
or
not
gs
cdq
addr16
dec
rcl
mov
add
or
add
cmps
xor
nop
int3
lods
test
or
test
test
pop
mov
xor
stc
add
pop
(bad)
ins
cmps
mov
cmp
test
mov
stos
ins
mov
cmc
cmps
bound
sbb
jecxz
fs
push
fnstsw
(bad)
cld
cmp
cmp
and
(bad)
mov
sbb
pop
pop
cs
jne
xchg
sahf
sbb
dec
(bad)
fcmovnb
int3
mov
mov
fild
mov
in
popf
clc
jb
xchg
or
or
(bad)
xor
push
and
loop
hlt
ins
in
ret
cld
mov
clc
jmp
xchg
lea
jecxz
addr16
(bad)
(bad)
and
int
dec
dec
mov
sub
add
(bad)
push
imul
loope
xor
and
icebp
pop
cmp
pop
xchg
add
jb
lock
jne
jnp
jne
add
jb
inc
mov
mov
xchg
hlt
mov
dec
je
push
pop
adc
cmp
sub
shl
push
pop
test
loope
xor
xor
out
inc
add
mov
push
xor
jp
push
lods
je
sub
dec
mov
pop
jl
jnp
dec
or
out
fwait
mov
pop
fsubrp
mov
sbb
bound
or
jae
dec
xchg
int3
out
adc
daa
pop
not
push
cmp
and
inc
mov
lahf
es
in
add
cs
rcr
jbe
loop
push
dec
int3
cmp
inc
lods
jns
adc
mov
rcl
push
cmp
sub
mov
pop
in
lea
xchg
mov
xor
rol
mov
push
outs
pop
mov
mov
jbe
xlat
sub
iret
js
mov
mov
sti
das
fmul
xor
in
mov
pop
or
imul
push
mov
sbb
sub
lods
xchg
stc
jnp
bound
ret
xlat
xchg
and
loope
inc
mov
out
je
cmp
xchg
scas
je
lods
add
aaa
mov
jecxz
jnp
add
cwde
jnp
xchg
adc
sar
leave
daa
pop
mov
aad
and
test
jmp
ficomp
js
sub
loop
mov
cmp
sub
ret
dec
cli
(bad)
fisttp
clc
mov
mov
xor
es
xor
call
mov
jno
pushf
add
adc
(bad)
in
fs
cmp
add
(bad)
loopne
and
(bad)
sti
xchg
in
mov
cmps
imul
cmp
cmp
or
int
pop
push
and
shl
cli
(bad)
cli
cmp
int
xchg
jnp
dec
sti
or
shl
pop
out
or
jmp
mov
inc
cmp
add
icebp
inc
fisttp
xor
mov
push
enter
pop
test
pop
pop
add
les
pop
out
sub
and
mov
sar
dec
add
or
pushf
stos
dec
mov
into
sbb
stos
push
in
pop
xchg
loop
pop
fwait
ret
loope
loop
or
and
mov
(bad)
neg
loopne
push
(bad)
in
gs
and
popf
mov
fadd
imul
ficomp
outs
(bad)
call
dec
inc
inc
inc
test
xchg
dec
in
arpl
movs
add
ja
jle
jo
mov
add
not
sbb
ret
adc
add
stc
cmp
mov
xchg
sahf
stos
enter
sbb
dec
cmp
push
pop
jmp
inc
dec
or
lock
ins
mov
scas
inc
cdq
in
outs
aad
or
ins
mov
into
jp
pop
sbb
pop
pusha
pop
inc
xchg
xor
or
leave
std
cmp
in
pushf
fnstsw
mov
icebp
mov
sbb
pop
pop
or
aad
dec
or
mov
sub
inc
or
in
pop
sub
xchg
pop
movs
je
bound
jmp
jg
mov
ror
and
rcl
xor
out
into
mov
add
jl
add
xchg
adc
popa
jle
outs
sub
es
sti
or
pop
sbb
nop
cmp
pop
pop
arpl
cdq
xchg
cwde
imul
xor
(bad)
xlat
es
rcr
push
inc
pop
adc
jne
std
sti
and
mov
mov
push
sub
fdivrp
outs
pop
test
pop
sub
ds
inc
push
je
popa
aad
(bad)
sar
mov
mov
pusha
shl
sub
dec
xchg
pop
out
mov
outs
call
and
mov
mov
cmps
jge
out
in
inc
adc
repnz
or
cmc
ror
loopne
mov
ins
les
fdivr
xlat
loope
xchg
int3
fld
xchg
ret
cmp
lea
xor
mov
fisttp
jns
ds
iret
sub
mov
mov
add
daa
push
xor
inc
xchg
mov
lds
cmp
pushf
jp
cmp
adc
pop
das
xchg
mov
mov
cmp
jle
jecxz
rol
inc
pop
inc
jnp
mov
xchg
inc
test
add
(bad)
shl
xor
sbb
cmc
and
xchg
or
push
push
sub
mov
jle
sub
call
jmp
(bad)
aam
jge
push
xor
inc
inc
xor
add
dec
push
push
add
push
add
push
add
push
add
push
add
push
add
push
add
inc
push
push
push
loope
int
in
push
dec
xchg
pop
cmp
outs
sub
xor
jae
jne
imul
outs
imul
fs
je
and
xor
jo
dec
push
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
adc
push
push
add
push
push
add
push
add
push
push
add
push
add
push
add
push
add
push
add
push
add
push
add
adc
dec
inc
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
inc
add
push
add
push
add
push
add
push
push
add
push
push
add
push
add
push
push
add
push
add
push
add
push
add
jnp
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
xor
push
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
push
loopne
xor
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
push
loopne
daa
daa
jb
push
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
push
rol
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
je
inc
push
jo
dec
push
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
je
inc
push
push
add
pop
or
add
(bad)
lods
aaa
in
xchg
push
pop
cmc
dec
push
lea
dec
push
jb
dec
pop
scas
out
mov
mov
inc
pusha
jle
dec
add
(bad)
jmp
jmp
pop
xor
stos
mov
inc
pop
vmaxsd
push
or
or
ja
jmp
mov
out
pop
sub
push
push
cmp
mov
dec
sbb
(bad)
repz
inc
lock
js
mov
in
push
dec
sbb
add
aam
mov
dec
aad
or
aas
push
push
fcom
retf
sbb
jae
inc
or
pop
mov
cdq
xor
mov
sahf
jecxz
mov
adc
hlt
add
push
add
mov
add
add
adc
out
sub
aad
sbb
scas
xchg
pop
add
loop
mov
add
push
add
test
mov
mov
aas
add
pop
dec
es
mov
lds
push
push
add
fmul
mov
or
sti
fstp
test
xor
ss
or
cmovge
xor
xor
cmp
stc
(bad)
and
adc
xchg
aam
fs
xchg
xor
xchg
cs
in
fwait
dec
hlt
outs
cmc
sahf
aam
sbb
data16
push
fs
push
fbstp
aad
mov
stos
jmp
push
push
mul
daa
mov
sub
jno
cmp
(bad)
fstp
adc
mov
repz
push
test
and
inc
inc
imul
dec
pop
cdq
jb
jo
js
dec
sbb
clc
hlt
dec
adc
fidivr
push
inc
aad
cdq
aas
inc
(bad)
jle
push
and
mov
daa
jmp
inc
inc
push
dec
neg
jo
outs
and
pop
nop
push
mov
dec
and
call
adc
dec
push
lock
stc
inc
(bad)
jno
jg
push
call
stos
arpl
pushf
mov
adc
push
pop
rol
push
or
fild
add
push
cdq
pop
push
enter
rol
js
fnsave
mov
adc
mov
lahf
test
and
fdivp
fs
nop
jo
(bad)
fcmovnb
inc
push
pop
adc
sbb
xchg
sub
xchg
inc
ficom
(bad)
jns
leave
(bad)
cmp
shl
xchg
xchg
inc
cmps
pop
push
dec
lods
addr16
and
fcomp
icebp
jno
mov
push
mov
pop
dec
adc
enter
mov
rcr
fs
or
inc
lods
jns
dec
jne
dec
in
xor
sbb
iret
dec
jecxz
nop
cs
ss
mov
js
sti
loope
pusha
cmc
pop
push
push
xchg
in
inc
pop
ins
jo
aaa
sbb
aaa
mov
jge
pop
jne
mov
push
mov
je
icebp
push
ss
(bad)
out
adc
add
aas
sub
xor
dec
xchg
rcl
or
pop
jmp
sbb
lock
sbb
pop
adc
sub
push
retf
jmp
sub
pop
push
inc
adc
add
jne
sbb
and
ficomp
call
push
ja
outs
sub
(bad)
bnd
fnstenv
mov
outs
push
and
xchg
stos
adc
mov
xor
loope
push
pop
(bad)
fnstcw
test
xchg
imul
add
inc
jecxz
imul
in
add
mov
mov
inc
addr16
arpl
shr
dec
fld
adc
mov
xchg
pop
lock
fisub
mov
jae
pop
mov
pop
mov
test
icebp
cmp
test
ins
mov
mov
xchg
ds
es
not
dec
pop
inc
mov
mov
es
loopne
daa
data16
aad
fs
mov
in
arpl
mov
dec
jne
pop
je
inc
dec
aaa
es
pop
into
cdq
ror
mov
xor
xor
jnp
push
shl
nop
js
add
dec
rcr
pop
push
pop
jns
and
ins
jno
jb
mov
adc
je
cmp
addr16
addr16
arpl
sahf
mov
jge
jp
xor
(bad)
stos
cmc
sbb
add
scas
out
inc
pop
(bad)
jnp
adc
fwait
mov
mov
ret
pop
ret
loopne
cdq
fldcw
ficom
dec
add
fnstenv
or
dec
imul
lfs
xlat
loopne
add
push
out
or
mov
sbb
fist
pop
cmp
add
sub
sub
(bad)
cmp
xchg
cmp
push
test
adc
popf
xchg
rol
pop
enter
push
mov
mov
pop
adc
out
adc
push
ss
or
rol
mov
push
push
ds
jo
push
mov
ds
bnd
jg
cwde
jl
jo
push
inc
jne
pop
hlt
arpl
pop
pop
pop
rol
mov
pop
sbb
rol
jns
xchg
imul
fs
jp
inc
or
inc
cmp
inc
loopne
(bad)
or
movs
mov
or
out
dec
sahf
pop
cmp
stos
xchg
push
lahf
loope
push
mov
jle
adc
xlat
out
pushf
xor
cmp
push
in
fadd
sub
pop
outs
pushf
push
add
and
enter
push
xchg
jmp
dec
push
mov
pop
pushf
(bad)
dec
dec
icebp
mov
mov
stos
jns
shr
mov
cdq
fistp
jbe
bnd
cwde
sar
out
je
xlat
in
fsub
xchg
mov
push
ret
dec
ds
dec
ror
jmp
and
cmp
pop
shl
test
push
push
add
and
outs
cmps
ins
adc
push
push
sub
mov
add
in
repz
add
enter
enter
or
or
call
xor
mov
push
cs
ror
cwde
(bad)
xchg
scas
xchg
pushf
int3
movs
lods
stos
ins
cmps
std
xor
mov
(bad)
dec
arpl
dec
out
cld
xor
scas
pop
cmp
dec
push
imul
push
scas
fild
inc
push
jae
pop
push
jb
bound
sub
jg
jne
cli
and
shl
(bad)
imul
mov
jne
xchg
into
or
test
xor
aam
mov
dec
hlt
and
pop
in
sub
rol
adc
mov
jecxz
or
and
push
test
movs
dec
nop
inc
iret
mov
push
pop
mov
adc
scas
sahf
cmps
push
push
pop
sbb
cmp
pop
pop
push
sar
push
push
ins
jno
jne
bound
test
fild
call
push
dec
ss
aad
xchg
mov
jne
mov
xchg
pop
or
shr
mov
mov
fs
xor
mov
xor
cmps
es
fistp
mov
aad
jl
mov
inc
pop
or
inc
data16
fsubr
cmps
sub
mov
loopne
ja
jnp
pop
cdq
stos
cld
mov
jno
ja
test
daa
mov
ret
push
call
mov
push
mov
mov
popf
xor
jp
int3
imul
push
sub
fmul
loopne
jecxz
jns
sub
inc
pop
inc
fcmovnu
xchg
fisttp
repz
pop
and
push
out
lds
xor
inc
or
and
push
cmp
lahf
ds
fs
pop
shl
add
pop
arpl
test
je
lea
add
in
cmp
shl
sbb
mov
and
add
pop
xor
je
add
int
movs
ss
mov
inc
xchg
fcmovnu
std
sti
in
addr16
je
push
dec
shl
retf
fmul
ss
fcom
xlat
je
push
nop
lods
and
add
in
jnp
das
dec
adc
scas
xchg
push
sbb
loopne
add
inc
rol
test
and
pushf
pusha
mov
inc
mov
cwde
icebp
fcomp
aas
pop
je
fwait
jle
les
enter
clc
aas
imul
mov
xor
(bad)
jns
call
imul
xor
and
cmc
or
sti
js
mov
dec
dec
inc
loope
pop
rol
xchg
loopne
add
retf
pop
call
and
in
(bad)
xlat
retf
mov
push
into
mov
sub
gs
push
jmp
adc
xor
pop
aad
and
jmp
je
dec
rol
std
xchg
call
mov
jl
lea
int
xchg
dec
pop
jae
inc
or
out
push
fimul
sbb
(bad)
lock
xchg
aad
ret
iret
repnz
pop
jnp
cld
dec
adc
daa
aam
push
jecxz
ja
push
and
push
out
dec
inc
inc
xor
push
add
sti
lea
retf
push
imul
push
sbb
sbb
dec
cld
xor
pop
dec
or
pop
das
adc
inc
fist
add
ret
jnp
shl
adc
sqrtps
js
adc
bound
xor
je
jbe
test
fld
fucomi
ins
sbb
data16
xor
push
jl
(bad)
cmp
jp
cmps
add
loop
adc
sbb
push
inc
cmp
cmp
and
dec
push
(bad)
je
scas
add
adc
cmp
xchg
sysenter
dec
add
sbb
test
jmp
ret
jmp
test
popa
cmp
xor
cmp
jo
cmp
outs
mov
jne
sub
lods
dec
dec
or
mov
mov
xor
jae
xor
jo
xchg
jmp
(bad)
ds
pop
ss
ret
sbb
mov
out
pop
jmp
push
push
sub
in
dec
sub
pop
sbb
dec
cmp
lock
dec
jb
loope
pop
lds
je
inc
or
and
into
adc
jne
clc
ret
in
mov
mov
clts
call
es
cmp
mov
inc
mov
mov
mov
mov
movs
int
dec
ins
pop
mov
ror
div
pop
arpl
jbe
das
(bad)
mov
in
inc
mov
xor
jp
aam
mov
inc
mov
out
mov
sahf
lods
mov
shl
dec
jns
lock
enter
jb
mov
mov
mov
jge
fsubr
mov
shl
pop
mov
mov
movs
lods
jmp
hlt
jne
jne
aam
pop
stc
dec
test
add
push
add
xchg
cmps
mov
sti
(bad)
sub
ins
pop
inc
or
or
sar
mov
jbe
dec
shl
xor
js
mov
sbb
add
sub
xchg
add
mov
jno
popf
inc
push
call
xor
adc
mov
call
and
data16
or
cmps
push
sub
cmp
jnp
pop
fstp
dec
aam
das
out
mov
dec
or
jg
imul
push
cmp
push
push
and
ins
and
mov
cmp
jl
xchg
push
pop
jno
(bad)
cli
lock
fwait
je
imul
shr
hlt
and
ins
loope
cmp
data16
bound
mov
jb
pop
mov
stos
jo
and
int
and
cmp
retf
ds
dec
mov
pop
jg
inc
inc
cmp
inc
xor
pop
std
xchg
out
adc
jnp
xor
mov
iret
adc
pop
pop
sbb
mov
push
out
add
jo
add
sbb
and
or
lahf
std
movs
ret
les
mov
jo
imul
sub
sub
mov
movs
pop
push
xchg
lea
and
jp
adc
pop
pop
stos
daa
pop
or
xor
fs
push
popf
jg
sub
push
(bad)
retf
xor
fldenv
(bad)
cmp
mov
xor
pop
xchg
aam
mov
and
mov
inc
xchg
dec
and
sbb
lock
ins
mov
inc
adc
xchg
aam
mov
push
xchg
push
mov
(bad)
rcr
fisubr
pop
push
aas
jns
int
push
push
fiadd
in
cmp
cmp
or
movq
pusha
dec
cmp
fimul
adc
mov
ret
test
lock
push
add
sbb
rcr
loopne
popf
aad
add
jae
dec
dec
sbb
push
mov
xchg
mov
lahf
outs
dec
push
es
pop
push
dec
inc
popf
xchg
mov
jg
pop
in
and
xchg
sub
jne
fld
inc
sub
mov
rcr
adc
and
shr
sbb
mov
jne
jne
ss
or
adc
lea
and
push
cmp
js
cmp
push
pop
push
xchg
xchg
sti
jne
mov
in
and
xchg
pop
and
inc
mov
push
inc
vmwrite
add
cmp
iret
mov
pushf
dec
push
adc
jae
pop
iret
add
dec
adc
icebp
cmps
cmps
dec
sub
inc
lock
rcr
and
ds
(bad)
xor
arpl
dec
cld
cmp
jmp
pop
push
hlt
xor
inc
inc
jo
jp
ror
add
in
cmp
pop
jecxz
dec
sbb
push
lea
mov
test
inc
push
mov
pop
not
and
and
adc
add
pop
call
push
xor
mov
or
sub
je
xor
sbb
push
lahf
dec
(bad)
daa
sub
out
add
aam
sbb
jo
imul
push
addr16
adc
repz
lea
push
add
shr
inc
addr16
sti
(bad)
addr16
add
and
leave
pop
cmp
push
call
jmp
sub
(bad)
sub
and
mov
sub
retf
mov
data16
das
cmp
xor
fsub
pop
push
pop
inc
or
cmps
and
inc
xchg
sub
fwait
pop
aas
and
outs
fmul
scas
mov
cmp
mov
push
pop
fistp
pop
js
mov
inc
outs
xchg
adc
pop
inc
test
push
jo
dec
sbb
ficom
out
pushf
nop
in
cmp
dec
pop
inc
pop
pop
push
call
add
inc
push
mov
ins
dec
mov
push
mov
gs
fisubr
push
inc
adc
push
fld
push
dec
sbb
jno
dec
stos
jmp
or
iret
inc
pop
add
jp
sbb
push
(bad)
mov
ret
int
mov
into
xchg
xor
(bad)
mov
xchg
xchg
inc
xor
push
inc
call
push
sub
fadd
dec
fwait
cmp
or
and
pop
jae
out
push
add
pop
jecxz
xchg
in
pop
push
sbb
retf
jbe
sub
(bad)
fimul
sub
xchg
popa
pop
pop
mov
ds
fild
push
xlat
cli
push
pusha
idiv
xor
and
jne
mov
push
js
imul
mov
xor
dec
sub
outs
push
adc
test
cld
pop
push
les
or
fcom
loopne
pop
inc
inc
jne
pop
in
sbb
stc
sar
sar
xor
inc
jne
pop
movs
and
push
mov
aas
test
sti
bound
popa
call
and
fisttp
dec
sbb
jp
sbb
rcl
in
leave
inc
sbb
push
fwait
ins
stos
sbb
loop
sub
push
setge
idiv
cld
pop
inc
call
dec
jge
in
ins
mov
mov
xchg
imul
and
inc
push
cmp
jno
idiv
ins
movs
in
lahf
in
and
pop
lahf
add
inc
ja
jle
mov
cmp
sbb
mov
mov
dec
adc
pop
pop
inc
adc
pop
pop
pop
call
imul
sbb
stc
ss
data16
mov
gs
mov
pop
or
pop
mov
add
mov
push
ins
pop
fnsave
fs
mov
dec
add
mov
arpl
fnstsw
push
dec
addr16
pop
pop
inc
push
mov
sbb
test
jl
sub
add
sub
in
jg
dec
sub
mov
inc
daa
das
inc
cmp
ja
dec
and
xor
mov
aas
jl
stc
push
cdq
sub
or
adc
or
xchg
pop
mov
inc
xchg
js
pusha
mov
adc
shl
adc
popa
cmc
add
jnp
push
clc
add
cmp
lods
mov
push
mov
mov
mov
mov
lock
push
pop
lock
add
into
loop
xchg
mov
nop
sub
dec
nop
jp
or
hlt
inc
ins
or
out
ror
xor
ss
mov
aas
sbb
push
retf
ins
jle
adc
rol
ds
stos
inc
fbstp
add
jb
xor
inc
inc
adc
cdq
cmp
fs
xchg
imul
cmps
inc
dec
rsqrtps
(bad)
and
pusha
push
jmp
inc
sbb
push
mov
push
movs
push
dec
push
pop
test
ins
add
add
inc
(bad)
jnp
bound
sub
popa
and
pop
jo
mov
mov
pop
mov
add
mov
xlat
clc
dec
sub
xor
cmp
push
mov
imul
or
fmul
aam
xchg
mov
adc
adc
adc
mov
cdq
pop
cmp
ins
cdq
aad
dec
test
inc
dec
fcmovne
lods
sub
daa
pop
sub
inc
ret
(bad)
imul
repnz
mov
push
test
push
sbb
xor
sub
xchg
dec
add
mov
shl
sbb
pop
and
dec
push
inc
sbb
pop
cwde
enter
imul
adc
call
add
push
aad
or
dec
enter
or
repnz
cs
and
xor
sbb
ss
js
and
xlat
pop
adc
adc
add
lea
dec
cs
dec
imul
jns
aam
out
aad
mov
cmp
adc
hlt
adc
pushf
retf
je
jno
ins
push
imul
and
push
sub
mov
push
jmp
lods
je
push
rol
sbb
jg
cmp
push
mov
xor
dec
imul
and
mov
iret
mov
or
sub
sub
dec
mov
xchg
add
ins
sub
stc
push
sub
out
push
pop
dec
(bad)
jbe
sub
push
and
jnp
jns
das
push
ins
cmp
pop
sub
or
sbb
dec
fcmovb
fcom
fwait
xchg
jne
add
outs
pop
nop
jns
ret
pop
mov
ret
add
sbb
aad
dec
sbb
call
jae
mov
push
jno
shl
es
cmp
sahf
pusha
push
aaa
leave
clc
addr16
jae
xlat
out
es
jmp
enter
cwde
repnz
dec
fcom
sbb
jg
adc
add
icebp
cli
jo
ja
xchg
dec
xchg
fild
(bad)
jb
jg
les
repz
test
ins
add
adc
(bad)
inc
sub
xor
jae
retf
lods
je
inc
and
dec
pop
pop
push
div
add
pop
lods
mov
push
(bad)
in
cmp
push
inc
sub
stc
ror
icebp
inc
add
repnz
inc
pop
(bad)
add
and
and
sbb
jns
sub
dec
or
sub
jno
sub
test
mov
sar
mov
rcr
rcl
test
retf
popf
jmp
or
add
fdivp
and
pop
mov
lods
repz
cmp
sbb
imul
jl
add
pop
adc
pop
mov
sbb
dec
xor
sub
pop
ror
ins
les
cmp
outs
xor
jge
mov
jecxz
or
push
inc
stos
ror
adc
and
pop
cmp
icebp
mov
push
movs
enter
(bad)
in
ins
mov
movs
mov
ret
stos
jmp
popf
fiadd
jns
cmp
adc
loopne
push
sbb
rol
aam
jp
loop
mov
fld
jo
lds
add
imul
xchg
inc
mov
add
xor
std
sbb
or
and
cmp
sbb
pop
dec
push
push
sub
(bad)
xchg
jb
jb
adc
dec
xor
mov
pop
sbb
stos
or
fdivr
cmova
iret
into
add
das
pop
jmp
jo
out
nop
inc
xlat
jne
push
dec
and
add
mov
cdq
movs
push
push
sbb
int
inc
loop
mov
mov
inc
cmp
sub
sbb
inc
push
sbb
into
pushf
sub
stc
mov
test
jle
fs
or
sub
and
js
adc
mov
sti
inc
sub
outs
data16
push
movs
fcmovb
inc
fisub
mov
loop
sbb
cs
pop
vpaddb
in
sbb
pop
psubusb
mov
xchg
push
cmc
jo
add
inc
cmps
push
int3
push
jns
mov
enter
neg
or
js
(bad)
push
xor
je
fcomp
jp
jno
mov
pop
ins
(bad)
push
push
retf
pushf
sub
adc
inc
enter
push
push
clc
adc
fadd
inc
jns
fmul
push
(bad)
mov
inc
shl
xchg
ror
in
or
push
mov
xor
outs
shl
loopne
rcr
add
int
sbb
pop
push
sub
mov
add
(bad)
jecxz
(bad)
lds
leave
pop
xlat
jmp
sbb
jns
pop
mov
jno
pop
out
mov
push
add
outs
xchg
jne
pop
pop
add
out
mov
adc
ds
dec
ss
shr
mov
and
repz
inc
pop
retfw
test
movs
stos
xchg
loopne
(bad)
pushf
pop
mov
sbb
sbb
imul
adc
enter
mov
adc
add
fisttp
push
pop
dec
fistp
or
pop
add
test
dec
sub
pop
mov
or
ins
and
ds
sbb
add
pop
add
push
xor
xor
loop
xor
test
ds
(bad)
lods
add
mov
jmp
xchg
call
lea
in
or
hlt
shr
pop
jg
pop
leave
hlt
inc
daa
mov
shl
dec
push
div
sub
and
clc
cmps
inc
pop
pop
pop
pop
test
dec
daa
jbe
inc
and
jae
xor
leave
sbb
inc
pop
jp
lods
add
into
xor
add
push
dec
hlt
xchg
jp
xor
dec
push
pop
jno
push
or
add
leave
ror
cwde
mov
mov
ins
mov
(bad)
jns
sbb
sub
sbb
inc
data16
and
movs
jb
xchg
push
in
push
mov
loopne
adc
rcl
call
fucomi
jo
jle
hlt
inc
cmp
dec
sar
mov
inc
mov
and
jmp
pop
call
dec
inc
ffreep
pop
jnp
xchg
mov
pop
sbb
pop
sbb
pop
mov
mov
lock
jae
pop
jno
retf
adc
aam
or
xchg
ret
adc
add
arpl
inc
imul
fwait
or
jno
inc
es
jb
xchg
push
pop
mov
hlt
call
add
lahf
push
xor
add
fs
out
adc
fist
arpl
pop
dec
setae
adc
fadd
adc
push
pop
mov
stos
inc
xchg
mov
pusha
ja
jae
jns
ret
mov
dec
jo
cmovl
add
lock
repnz
mov
or
mov
out
mov
icebp
push
dec
test
or
xor
pop
inc
mov
push
mov
sar
pop
sbb
arpl
es
push
nop
xchg
movs
jo
dec
sub
pop
stc
ss
sub
inc
out
loop
in
enter
sbb
dec
dec
cmps
push
push
je
cld
push
(bad)
dec
pop
push
inc
push
adc
sub
and
lods
push
int
xor
js
es
lods
xor
rol
push
mov
out
es
cdq
adc
dec
movs
push
pushf
pop
mov
push
adc
or
mov
arpl
pusha
push
inc
jge
pusha
mov
retf
cmp
xchg
inc
movs
dec
inc
addr16
aas
xlat
pop
rol
inc
fiadd
cmp
xor
jmp
push
addr16
inc
jl
imul
push
jmp
inc
fst
xchg
fwait
inc
in
adc
jmp
jmp
add
sbb
fstp
shl
mov
retf
mov
ins
and
inc
push
pop
out
loope
pop
clc
ss
stos
in
sub
imul
dec
mov
push
cmp
pusha
sbb
xor
push
out
xlat
mov
xor
mov
div
pop
dec
pop
or
dec
loopne
outs
jmp
je
iret
xchg
mov
and
sbb
loope
call
clc
mov
fisttp
adc
cld
or
pop
add
push
inc
fbstp
pop
mov
(bad)
xor
inc
in
out
dec
xchg
ror
fcomip
mov
imul
xor
les
(bad)
std
cmp
ds
add
xchg
(bad)
jmp
mov
xor
jns
mov
jno
sub
jg
adc
pop
mov
push
mov
mov
fadd
dec
pop
mul
sbb
adc
cwde
push
test
xor
pop
stos
fcom
adc
xor
and
aad
cmp
inc
fcomp
adc
mov
adc
sti
ja
xor
jns
data16
mov
scas
push
data16
jle
sub
cmp
in
xor
imul
iret
xchg
sbb
int3
mov
xchg
inc
or
mov
fcom
cmp
jecxz
rol
sbb
fsub
cmp
adc
mov
les
fistp
push
pop
cmp
or
inc
fincstp
push
in
jb
add
lods
aas
jae
jle
aas
cs
aaa
adc
loopne
jnp
xchg
(bad)
pop
jne
pop
sub
fwait
mov
stos
mov
int
ins
or
mov
cld
sub
adc
jle
push
pop
xor
inc
adc
push
push
xchg
rcr
inc
mov
or
pop
mov
aam
(bad)
sub
jnp
cdq
pushf
mov
jl
lods
inc
push
jnp
mov
push
mov
cmps
jmp
das
ins
push
jl
pop
in
call
jbe
inc
scas
fwait
jnp
sbb
xchg
pop
jbe
jo
push
pop
addr16
inc
(bad)
sub
push
mov
inc
std
(bad)
mov
pop
mov
mov
push
dec
int
xchg
ret
dec
enter
add
dec
gs
cmp
movs
test
retf
in
cdq
jmp
cmc
popa
stos
ret
in
dec
outs
push
les
add
push
cmp
rol
inc
pop
cmp
enter
int3
xor
stos
mov
mov
ds
jle
jmp
adc
test
push
mov
shr
ins
mov
or
dec
sbb
(bad)
cmp
dec
xchg
xchg
sahf
mov
mov
ja
adc
iret
and
sub
jg
adc
cli
push
push
add
jne
into
aad
push
sbb
dec
fsubr
(bad)
mov
jg
sub
push
push
cdq
xlat
scas
sbb
mul
or
cmp
(bad)
test
aam
pop
pop
and
add
es
test
popf
fadd
mov
inc
outs
and
inc
xlat
and
cmp
test
cmp
ins
mov
bnd
clc
sbb
mov
aam
test
xchg
imul
ds
inc
dec
mov
mov
adc
addr16
sub
or
or
cmps
inc
dec
dec
jne
mov
push
inc
div
enter
add
pop
je
push
mov
jp
lods
or
add
enter
mov
fmul
jae
pop
aas
test
sub
xlat
inc
or
aad
hlt
rcl
popf
add
and
add
pushf
push
add
mov
scas
jl
xor
(bad)
pop
push
mov
pop
adc
loopne
pop
jge
jge
dec
mov
dec
mov
add
retf
push
inc
inc
xor
cmp
ret
mov
xchg
add
adc
lahf
test
dec
inc
mov
rcr
ror
mov
fwait
pop
int3
and
jle
inc
stc
ret
gs
xchg
daa
clc
into
push
jno
sti
adc
(bad)
in
cli
int
in
pop
adc
jo
mov
dec
dec
into
rcl
dec
(bad)
sub
loope
dec
push
mov
cwde
mov
ins
jne
mov
cmp
adc
push
lods
dec
jne
mov
mov
jmp
add
sub
shr
test
mov
sbb
es
pop
jge
ror
pushf
jo
adc
ins
pop
ud1
cmp
mov
fld
mov
and
popf
or
not
hlt
pop
and
mov
inc
add
cld
add
(bad)
xlat
in
ins
pop
iret
mov
pop
adc
leave
sub
xor
pop
pushf
adc
xlat
mov
and
mov
sub
and
add
inc
stos
mov
cdq
das
mov
push
fisttp
inc
(bad)
call
fs
enter
inc
add
add
test
xchg
sbb
jmp
add
pop
div
push
xchg
mov
cmc
push
call
cmovne
test
rcr
sbb
fdivr
and
sub
cmp
and
cmp
pop
pusha
loop
mov
pop
pop
jns
push
pop
jle
aad
mov
(bad)
sbb
and
or
fbld
push
xor
fscale
cmp
out
leave
test
adc
outs
out
push
enter
push
add
inc
inc
dec
pop
jge
or
gs
pop
inc
mov
and
gs
dec
dec
inc
jae
push
push
sbb
xor
add
cmp
add
jns
pop
mov
push
pusha
add
adc
inc
sub
add
cmp
lds
pop
das
sbb
sub
inc
jmp
je
jmp
add
push
lods
pushf
in
mov
xchg
je
jns
ja
out
pop
retf
dec
(bad)
enter
ror
ja
sbb
fisttp
dec
sub
lods
das
(bad)
pop
pop
jmp
mov
test
das
push
fiadd
test
test
fcomp
sbb
mov
dec
lahf
push
mov
sbb
pop
clc
stos
xor
cld
or
xchg
push
ds
gs
lock
ss
(bad)
adc
lods
jnp
pop
icebp
inc
dec
adc
dec
jns
push
push
xor
add
dec
test
cld
fld
aas
inc
xor
das
push
neg
add
mov
push
mov
lods
cmp
dec
loopne
add
out
mov
pushf
mov
pop
sub
in
mov
popa
aam
pushf
and
sub
pop
bound
imul
sub
cmp
pop
sbb
les
sbb
fsub
xor
sub
ins
xchg
or
into
cli
pop
inc
adc
pushf
mov
sub
ret
aas
sub
int
push
add
adc
enter
mov
mov
imul
dec
xor
test
or
pushf
pop
and
inc
jbe
pop
push
pop
pop
push
sub
push
les
sbb
lds
out
fist
pop
xor
xchg
das
adc
pop
mov
mov
jl
scas
arpl
dec
call
dec
xchg
mov
jp
lods
xor
cmp
mov
xor
(bad)
adc
rcr
mov
mov
adc
outs
jle
cmp
sbb
inc
cmp
and
and
push
rol
xchg
cwde
mov
sub
ins
lods
test
or
ins
push
push
adc
gs
loop
cdq
pop
add
sub
or
int3
sbb
aam
out
mov
clc
out
sub
jne
fimul
les
xchg
cld
(bad)
out
loopne
sbb
xchg
jae
pop
add
std
arpl
clc
out
xchg
mov
push
jmp
cmp
ficomp
pop
data16
nop
xor
je
push
mov
xchg
pop
stos
stos
or
push
lock
les
lahf
xor
jo
mov
mov
pop
ja
xor
mov
scas
or
add
adc
fstp
outs
xor
mov
lahf
push
test
cmps
dec
in
das
sbb
push
mov
inc
pop
dec
popa
int
rcr
movs
mov
dec
cmp
inc
push
mov
and
cs
sbb
inc
xchg
mov
fst
dec
sbb
adc
fdivr
inc
cli
push
aaa
add
addr16
pop
loopne
in
(bad)
mov
push
(bad)
xor
hlt
and
fld
dec
adc
pop
inc
mov
in
add
push
(bad)
(bad)
popa
sbb
mov
and
push
cdq
dec
lods
inc
cdq
imul
push
and
or
movs
inc
or
aam
sbb
retf
push
push
ja
xchg
and
in
add
and
stc
(bad)
lahf
xchg
cwde
fs
add
xchg
popf
jbe
or
arpl
mov
and
or
ds
dec
call
cdq
jno
xchg
clc
jae
popa
add
inc
scas
or
xor
push
in
adc
ficomp
xchg
clc
dec
and
push
and
mov
test
ret
jmp
sub
cmp
dec
js
cmps
and
cli
mov
mov
gs
push
inc
je
stos
sahf
je
mov
rol
jno
popf
xchg
jno
dec
pop
mov
adc
popf
pop
add
jno
sbb
pop
(bad)
out
ins
aam
or
jno
push
shr
add
(bad)
push
inc
or
add
inc
fbld
in
jl
fucomip
rol
sub
push
and
xor
inc
test
sub
or
and
repz
sub
dec
pop
test
aas
pop
push
js
dec
lods
add
sub
xor
mul
out
(bad)
jo
xchg
dec
push
or
pop
push
pop
jo
xor
xchg
or
xor
xchg
jnp
or
dec
jmp
inc
pop
inc
mov
xchg
mov
out
push
dec
mov
test
pop
lahf
loope
mov
lahf
inc
pop
adc
ins
mov
jne
cmp
mov
push
mov
stos
fs
pop
into
jl
mov
ss
xor
xor
je
adc
xor
es
(bad)
adc
or
sbb
sbb
sbb
fdivp
test
sub
pop
cmp
lds
adc
add
push
addr16
pop
lds
push
shl
sbb
pop
mov
addr16
adc
sbb
push
cmps
or
shl
xchg
mov
sub
sbb
aad
mov
(bad)
pop
repnz
movs
cmps
repz
mov
pushfw
and
test
dec
or
push
mov
mov
out
std
enter
daa
push
push
gs
push
adc
and
aas
inc
cmp
lea
outs
adc
es
mov
push
mov
xor
lea
sbb
(bad)
ficomp
push
and
add
pop
pop
das
mov
stos
xor
or
cmp
xchg
cmp
push
outs
stc
push
sub
xor
xchg
loope
out
xchg
xor
sbb
pop
pop
cvtpi2ps
jmp
xor
sbb
imul
dec
add
aaa
and
jmp
cld
push
xor
sbb
ins
sub
jns
arpl
jl
pop
sbb
dec
sbb
mov
aas
dec
add
mov
test
sbb
mov
aas
aas
das
push
push
outs
and
pop
nop
ins
test
pop
and
and
popa
daa
cmp
add
push
pop
cmp
in
dec
push
inc
jb
push
inc
ins
aas
cmp
dec
iret
pop
pop
pop
or
in
xchg
fst
and
mov
fisttp
cli
cmp
inc
pop
xchg
adc
leave
push
lahf
test
dec
xchg
jl
xchg
arpl
fidivr
xchg
mov
and
xor
or
xchg
xchg
cmp
ds
or
and
push
loope
jb
push
dec
gs
push
push
ins
dec
add
xor
pop
stos
xor
inc
bound
mov
or
inc
pop
sbb
add
jecxz
add
mov
jge
fs
mov
jo
dec
push
cmp
push
popf
xor
rcr
inc
ds
push
push
jbe
or
pop
or
mov
add
je
mov
leave
pop
test
icebp
dec
jno
dec
push
pop
pop
jl
xchg
push
mov
mov
sub
repnz
jl
dec
push
pop
jg
lds
or
pop
stos
add
pop
mov
movs
arpl
jl
mov
or
pop
pop
es
fisubr
xor
pop
movs
mov
mov
jae
cwde
cmp
or
cmp
pop
and
pop
cmp
rcr
jp
mov
push
push
cmp
ficom
or
ins
jmp
lock
in
retf
loope
sub
call
sub
sbb
or
daa
repnz
xor
dec
ja
and
test
dec
addps
daa
test
inc
aaa
out
and
lahf
and
addr16
je
and
out
leave
sub
mov
std
and
movs
mov
adc
mov
mov
or
push
xor
scas
push
inc
(bad)
daa
sbb
outs
add
call
xchg
mov
lock
stos
push
push
xor
pop
movs
mov
dec
popa
add
mov
fs
cmps
xor
jbe
jg
das
or
rcr
(bad)
xor
and
mov
call
out
and
adc
cwde
or
push
xchg
ins
fcmovu
xchg
sub
jmp
pop
inc
pusha
call
into
loopne
mov
popf
sub
inc
cmps
pop
bound
mov
dec
sbb
mov
dec
pop
xor
cmp
inc
nop
mov
mov
sbb
popa
pop
cmp
add
inc
push
xor
adc
push
test
cmp
inc
and
xchg
out
fist
push
and
mov
cmp
sbb
fidiv
jge
cmp
dec
inc
cmp
push
mov
lods
sbb
outs
mov
xor
or
or
or
inc
pop
mov
cs
cmps
adc
jo
jbe
pop
mov
sub
sub
fcom
jg
(bad)
cmp
dec
mov
pop
bswap
push
push
lods
dec
es
sub
xor
pusha
jno
leave
cmp
sti
mov
jp
dec
fistp
out
ss
pop
fs
mov
in
mov
inc
lea
int
enter
mov
les
mov
xor
(bad)
mov
das
xor
(bad)
mov
loop
lock
(bad)
sub
in
push
or
je
and
lock
dec
(bad)
jo
mov
cmc
xchg
inc
mov
inc
mov
pop
in
pop
fld
push
fcom
inc
push
into
fstp
dec
push
sahf
add
cli
(bad)
pop
sub
fsubr
mov
mov
inc
mov
push
mov
in
mov
mov
ret
test
jae
cld
mov
xor
outs
xor
jno
xchg
mov
cs
lock
adc
fcmovbe
inc
xchg
mov
call
in
inc
cmps
mov
push
mov
inc
xor
add
mov
jo
cld
popa
xlat
shr
popf
adc
inc
mov
push
jb
push
xchg
aad
push
(bad)
shr
int
dec
fs
idiv
sub
adc
mov
cmp
pop
sub
(bad)
adc
add
push
dec
xchg
dec
mov
xchg
adc
ja
sbb
jno
push
push
add
cs
mov
mov
mov
std
fimul
shl
sub
push
inc
inc
sub
sub
push
fidivr
neg
repnz
retf
pop
aad
sbb
outs
js
dec
xchg
rcr
scas
adc
pop
js
add
pop
mov
cmp
adc
dec
adc
not
pop
pop
and
push
mov
and
inc
movs
push
stos
mov
jp
mov
rol
jge
(bad)
call
pop
jno
add
mov
and
scas
stos
and
enter
hlt
addr16
cmps
retf
push
adc
pop
jbe
loop
loopne
inc
mov
outs
xchg
je
lods
mov
cli
ja
push
xor
cdq
enter
inc
jno
rcr
sbb
jb
adc
xor
lods
add
outs
push
or
cmp
sbb
shl
sub
(bad)
push
loopne
rol
pushf
fnstenv
mov
cwde
inc
popa
mov
adc
outs
pop
dec
rcl
inc
dec
pop
fcmovnbe
add
inc
retf
jmp
lods
push
das
inc
sub
jle
inc
ins
imul
inc
pop
xor
jbe
mov
fscale
test
fisttp
pop
jb
mov
ret
cmp
mov
retf
inc
je
pop
aas
fcmovnbe
in
or
popa
aad
or
js
loopne
cmp
push
and
cmp
push
xchg
cmp
mov
jo
or
mov
ficom
pop
inc
push
adc
ja
adc
femms
ds
ror
cwde
jp
mov
dec
xor
ficomp
jno
mov
push
in
xchg
fptan
push
mov
js
xchg
in
fwait
cmp
ret
push
popf
sbb
and
mov
pop
and
push
fmul
call
arpl
ja
mov
not
inc
sub
xor
pop
dec
out
aam
lds
les
sbb
add
add
dec
jbe
es
or
cmp
push
xlat
psraw
stc
and
outs
aad
imul
pop
push
aaa
outs
sub
adc
sbb
dec
adc
add
dec
xchg
fld
das
jge
addr16
push
push
jne
jns
push
cmp
adc
imul
push
xlat
pop
jne
mov
inc
(bad)
push
mov
sub
jbe
push
popf
adc
inc
xor
xor
fnstcw
mov
cmc
arpl
and
adc
push
sahf
dec
pop
and
movs
dec
sbb
fiadd
loopne
jmp
pop
adc
std
mov
jno
xor
loope
jb
push
sar
ins
loop
push
xor
cmp
sti
bound
and
pushf
ret
pop
int3
mov
push
add
mov
push
(bad)
call
and
les
mov
fwait
es
inc
dec
cdq
mov
fild
dec
fdiv
sbb
and
pop
(bad)
out
ficom
sti
rol
mov
push
jecxz
sti
push
xchg
jbe
(bad)
dec
dec
ins
pop
mov
push
xor
push
dec
push
(bad)
cmp
xchg
outs
jbe
in
outs
lsl
in
cmp
dec
cmp
mov
ret
(bad)
nop
inc
clc
cmp
sbb
imul
es
dec
or
out
adc
sub
or
ins
cmp
and
pop
xchg
pop
sar
push
dec
or
dec
cmc
or
jp
xchg
enter
sub
fsubr
icebp
arpl
aaa
out
xor
inc
mul
pop
inc
das
cs
mov
adc
xchg
(bad)
addr16
mov
mov
aas
push
push
je
mov
xchg
cmp
dec
or
ja
sub
ss
and
inc
push
push
outs
aaa
(bad)
icebp
lahf
inc
cld
xor
mov
xchg
mov
adc
bound
jnp
fisub
inc
enter
lods
les
inc
fs
es
jle
out
inc
sbb
pop
push
xor
xchg
les
jb
cmp
inc
push
sub
(bad)
jl
push
mov
sub
pop
cld
jmp
jno
test
pop
sub
dec
fdivr
jnp
pop
xor
inc
bound
outs
(bad)
popa
jae
push
cmp
push
jl
sub
jns
cmp
and
pop
mov
sbb
mov
pop
ds
jae
jl
sar
mov
mov
movs
jo
mov
xchg
mov
add
sub
sub
cmp
push
cmp
dec
adc
pop
js
ins
in
rcl
inc
or
sub
popf
dec
pop
sbb
cdq
adc
das
jmp
or
mov
rcr
retf
or
hlt
or
jl
mov
and
add
add
or
pop
div
js
cmp
fld
fidivr
adc
sbb
push
inc
sbb
add
cdq
inc
cwde
sub
out
std
cmp
jae
pop
xor
or
outs
add
fimul
dec
mov
rol
in
and
xchg
pop
or
ja
mov
out
or
push
cdq
mov
adc
xchg
xchg
jecxz
sub
das
ss
pop
les
popf
fs
test
imul
rcl
cmps
fdivr
xchg
test
xor
sti
jae
add
cmp
or
push
adc
stos
outs
mul
sbb
jl
jae
fnstsw
inc
sbb
inc
and
cld
ins
cmp
xchg
sbb
daa
mov
in
inc
inc
movs
les
fs
loopne
scas
(bad)
pop
iret
cmp
ds
lock
push
sbb
and
jp
leave
cs
sbb
fisttp
or
imul
mov
or
popf
jnp
xchg
pusha
retf
pop
cmp
mov
sbb
ret
xchg
dec
or
pmaxub
aaa
pop
sub
nop
pop
add
jne
jnp
in
mov
cmp
pop
mov
data16
push
test
jns
xchg
js
scas
xlat
retf
cld
xchg
(bad)
push
outs
rcr
or
fstp
movs
cmp
cmps
inc
loopne
mov
push
pop
leave
(bad)
adc
inc
pop
pop
pop
sub
xor
sar
add
pop
fcomp
inc
cmp
or
pop
fwait
mov
adc
adc
or
xchg
loop
scas
(bad)
mov
xor
dec
push
iret
jae
inc
test
xor
clc
push
(bad)
sub
xor
es
icebp
and
data16
enter
cmp
pop
sub
pop
js
adc
xchg
std
icebp
inc
bound
cmc
test
adc
push
das
mov
nop
into
aam
outs
retf
fwait
push
jecxz
ins
lds
mov
cdq
cmp
sbb
push
clc
add
mov
jl
jmp
xchg
movs
add
inc
dec
inc
jo
sti
sbb
xlat
dec
add
fcomp
fimul
stc
xor
push
punpcklbw
or
pop
aaa
inc
push
ror
fistp
fcom
(bad)
xor
inc
pop
xchg
add
jmp
pop
nop
sub
(bad)
xor
sub
hlt
dec
or
cmps
inc
cmps
sbb
movs
pop
sub
add
add
push
push
sbb
mov
mov
xor
or
lods
xor
(bad)
push
xchg
cdq
stc
and
pop
push
push
inc
mov
hlt
dec
es
inc
add
and
(bad)
xor
push
and
cmp
jo
cmp
pop
dec
xchg
test
cmp
les
and
sbb
pop
adc
adc
lods
jecxz
cld
scas
dec
test
dec
adc
mov
js
jl
push
arpl
rol
ret
nop
ret
bound
push
and
loopne
inc
sbb
mov
ficomp
xchg
imul
push
repz
sbb
call
cwde
or
xchg
in
loope
ror
sub
call
push
mov
rcr
pop
jmp
ins
push
and
sub
jns
add
cmp
rol
aaa
push
dec
and
inc
jno
and
out
rcr
or
jecxz
xor
repnz
sbb
pop
add
ins
sub
int
mov
pop
sbb
and
adc
out
inc
imul
retf
ins
add
xor
adc
jg
lds
pop
push
mov
mov
es
mov
pop
inc
jo
and
adc
jbe
cdq
inc
test
xchg
adc
mov
outs
fld
sbb
pusha
lods
jl
in
push
icebp
in
inc
push
adc
pop
xor
cmp
mov
pop
adc
test
ja
inc
xchg
test
int
dec
fwait
lods
inc
and
nop
inc
dec
or
jmp
push
pop
fs
ja
popf
sar
jne
in
es
dec
pop
outs
ins
xor
shr
push
jge
fs
imul
xor
fst
push
push
inc
paddsw
adc
outs
and
mov
and
push
dec
mov
xchg
xor
adc
rcr
ret
add
adc
dec
test
dec
mov
mov
rcl
pusha
or
add
cmp
mov
and
mov
jae
push
push
xor
pop
cmp
mov
mov
adc
sub
sub
mov
fwait
jb
retf
hlt
ja
fwait
in
shl
lahf
dec
dec
sub
icebp
mov
add
pop
push
dec
fdivp
pop
mov
fidivr
movs
cmps
mov
data16
xor
xor
cmp
(bad)
mov
add
stos
xor
test
xchg
clc
jl
sub
jle
icebp
arpl
push
cmp
sti
xlat
sub
inc
add
xchg
nop
shl
repz
sti
inc
mov
ins
in
cmp
jae
stos
sbb
nop
and
imul
dec
jb
addr16
and
push
push
stos
jns
sbb
retf
std
sbb
stos
(bad)
xor
mov
push
xchg
mov
enter
enter
lea
dec
(bad)
and
(bad)
xchg
mov
pop
dec
lods
push
loopne
outs
inc
cmp
cdq
or
pop
cmc
aad
dec
inc
and
sahf
add
std
pop
inc
ja
push
xchg
out
inc
nop
sbb
outs
imul
pop
push
xchg
stos
push
sbb
aad
jmp
jecxz
rol
mov
push
pop
jmp
pop
aad
dec
ds
aam
push
sbb
or
cmp
out
pop
jle
sub
push
inc
rol
xlat
jns
cmp
ds
push
movs
inc
add
popa
mov
sbb
mov
cmp
std
dec
stos
sbb
retf
sub
push
adc
jo
or
adc
outs
(bad)
gs
loopne
mov
pop
popw
pop
cmp
mul
add
push
push
pop
call
cdq
mov
xchg
call
outs
aas
xor
inc
inc
adc
sbb
xor
inc
sbb
add
repnz
ja
nop
xchg
std
aas
lods
jmp
popa
and
rcl
dec
mov
in
jae
out
popa
adc
xchg
dec
(bad)
mov
dec
jge
rcr
ja
xor
in
add
in
push
int3
push
pop
std
cwde
inc
hlt
pop
jmp
stos
scas
mov
jbe
pop
inc
popa
jno
pop
rol
or
mov
iret
mov
iret
xchg
xor
or
sbb
ret
sub
jl
ja
cmp
and
fmul
push
xchg
stc
std
mov
stos
hlt
mov
fld
cdq
fisttp
push
xor
push
push
xor
stc
(bad)
into
add
rcr
cmp
rol
inc
gs
sbb
cmp
push
dec
xor
loopne
or
mov
lock
inc
not
mov
repz
lds
std
push
shl
lds
cmps
dec
sahf
sub
aas
imul
dec
adc
mov
push
mov
dec
xchg
cwde
push
dec
sub
add
cmp
sub
retf
pop
aas
and
cmp
sbb
xchg
pop
fcomip
add
jle
sub
gs
inc
xchg
pop
jg
test
dec
add
xchg
xchg
sbb
popf
add
xor
add
xchg
mov
ja
mov
out
js
mov
xchg
rcl
inc
cmps
shl
xor
pop
jmp
out
adc
xchg
out
(bad)
xor
cmps
dec
jo
inc
xlat
fldenv
pop
and
sahf
cdq
mov
cmp
(bad)
jbe
sub
dec
lea
pop
aas
inc
fld
jne
test
or
pop
pop
sub
outs
movs
ds
xchg
push
push
adc
or
inc
iret
ins
mov
pop
add
lock
iret
js
push
xchg
(bad)
hlt
and
xchg
mov
les
imul
(bad)
sub
sbb
ficomp
mov
push
sub
add
les
adc
(bad)
dec
int
cwde
aas
arpl
push
and
dec
inc
sub
inc
outs
pop
push
outs
sbb
jl
adc
cmp
inc
push
xor
dec
mov
or
pop
push
test
push
adc
mov
out
push
adc
out
pusha
(bad)
js
adc
dec
push
jns
fwait
iret
ins
rcr
push
mov
mov
cmps
push
pop
adc
jbe
lods
ror
add
jo
aaa
cmp
xlat
jmp
call
sbb
pop
sub
pop
dec
jnp
lock
fwait
(bad)
fadd
fwait
loope
retf
dec
(bad)
xor
xchg
sub
and
sbb
dec
lahf
fwait
mov
mov
sub
ds
push
push
sub
adc
sub
push
(bad)
hlt
xchg
psllq
xchg
dec
je
daa
icebp
push
aas
adc
pop
jb
xor
addr16
pop
test
cmp
sbb
adc
xor
mov
adc
mov
in
cmp
add
and
inc
xor
daa
jg
pop
pusha
shl
or
gs
sbb
lahf
cmp
mov
js
inc
xchg
retf
push
fcmove
cmp
cmp
cmp
push
mov
mov
jmp
cld
std
mov
cmp
ins
ficom
xor
in
dec
push
inc
or
mov
cld
inc
inc
data16
push
out
adc
push
cmps
adc
inc
xchg
sub
push
add
push
iret
fs
pop
mov
addr16
add
sub
adc
shr
xchg
loop
and
mov
mov
fcom
mov
sbb
mov
jb
pop
pop
inc
int
lock
(bad)
mov
inc
cmp
(bad)
adc
lds
mov
je
lds
mov
inc
test
fs
jns
retf
dec
xlat
test
xchg
or
lea
push
rol
leave
nop
pop
dec
call
rcl
repz
daa
rol
adc
lods
(bad)
fadd
or
pop
add
repnz
add
add
push
inc
cmp
or
adc
jne
out
fcom
and
fist
xbegin
and
sub
cmps
cmp
or
xor
inc
pop
inc
push
jbe
retf
ja
popf
leave
pop
aas
jge
mov
pop
rol
jnp
inc
jnp
retf
push
or
pushf
repnz
dec
and
mov
sbb
scas
movs
jb
cmp
push
xor
cmp
and
ret
fnsave
mov
dec
lahf
aam
dec
sub
les
scas
jo
rcr
xchg
rcr
aaa
(bad)
lds
mov
add
(bad)
push
jb
cmp
push
retf
cmp
nop
sub
test
inc
test
pop
adc
push
je
call
aas
cmp
popa
daa
push
xor
cmc
adc
cs
(bad)
loopne
dec
daa
fs
push
pop
das
push
movs
fs
sbb
or
push
mov
xchg
add
jnp
mov
(bad)
enter
jg
pop
mov
fdiv
push
and
aas
gs
xchg
aas
(bad)
pusha
add
cmp
test
sub
gs
add
inc
ret
jl
adc
sbb
addr16
or
test
(bad)
inc
pop
arpl
add
jp
fcom
push
mov
pop
bound
sahf
retf
push
aam
push
std
jbe
dec
pop
call
xor
cmp
mov
xor
ret
inc
fistp
xor
(bad)
push
scas
adc
push
movs
xchg
ror
fmul
sbb
pop
or
lahf
test
dec
push
adc
mov
dec
push
push
add
in
and
jg
retf
lods
jmp
pop
psubq
ror
mov
pop
shl
neg
pop
mov
sub
jno
pop
mov
es
not
jae
fisub
inc
xchg
out
push
sbb
cmc
jmp
popa
(bad)
neg
add
add
xor
push
push
xor
pop
add
jp
popa
scas
cmp
(bad)
jmp
adc
inc
and
sub
fnstsw
dec
xchg
repz
aam
jg
sub
dec
adc
out
mov
adc
into
mov
push
adc
xchg
retf
shl
pushf
jl
inc
sub
lds
in
dec
mov
sbb
pop
hlt
or
addr16
sub
inc
jmp
iret
add
stos
mov
add
adc
mov
adc
jae
rcl
iret
add
xchg
mov
pop
ret
mov
or
xchg
cld
es
scas
jl
pop
dec
nop
out
repnz
dec
cmps
iret
imul
cmp
sbb
mov
and
xor
jae
push
jg
cmps
test
imul
jbe
add
stc
sub
or
cmp
and
imul
adc
mov
dec
pop
push
push
sbb
sti
js
adc
ss
and
pop
push
push
shr
jne
cmc
xor
pop
push
pop
add
retf
mov
sub
sub
inc
push
xor
jnp
add
or
mov
test
or
pop
test
pop
xor
push
push
out
cmp
mov
fmul
scas
addr16
cmp
mov
dec
xor
shl
pop
fistp
mov
sub
xchg
pop
out
push
jmp
sub
push
mov
push
hlt
out
mov
icebp
push
test
push
es
les
aam
mov
xor
adc
pop
sub
dec
test
rcr
call
xor
pop
adc
std
iret
in
adc
int
adc
aam
add
sbb
or
pop
enter
stos
rcl
cmc
mov
ror
in
aam
jmp
lahf
lahf
fisub
bound
cld
cmp
lds
lds
test
fadd
fsub
push
or
jle
push
aas
adc
inc
add
push
push
push
pop
mov
xor
or
xchg
test
loopne
and
dec
jno
fnstsw
dec
popa
aam
(bad)
repz
jb
push
sub
pop
ret
ins
inc
sbb
sar
ret
sar
or
and
mov
ja
pop
sub
xchg
and
push
pop
rcr
lds
adc
ds
push
mov
out
(bad)
push
je
jns
ds
je
dec
push
inc
cmp
cs
pop
jmp
ret
data16
test
jmp
add
inc
xor
data16
adc
ss
push
and
ret
jmp
jo
sub
retf
mov
loop
xchg
(bad)
dec
int
adc
pop
pop
cmp
add
pop
add
sti
pop
leave
add
and
mov
jecxz
pop
(bad)
xchg
das
sbb
mov
push
nop
mov
lds
jmp
xlat
jge
fmul
dec
lea
fimul
inc
mov
dec
xor
pop
nop
pop
mov
add
dec
nop
pusha
pop
xor
(bad)
xchg
bound
xor
mov
push
xor
mov
int
pop
cmp
shl
je
sub
cli
or
hlt
imul
enter
push
imul
pop
add
xchg
pop
jo
xchg
or
stos
sbb
inc
xor
xor
pop
dec
mov
ja
int
or
fisub
push
adc
mov
shr
inc
inc
xor
xchg
or
cmp
sbb
sbb
dec
nop
pop
adc
mov
sub
aas
jno
je
push
scas
push
cmp
mov
push
mov
adc
push
mov
or
or
xchg
ret
or
sbb
icebp
fidiv
out
(bad)
mov
(bad)
cmp
(bad)
push
push
test
int
mov
push
inc
xor
mov
enter
adc
add
mov
adc
cmp
sbb
mov
sub
mov
push
inc
fcmovb
jbe
dec
jg
jnp
sub
push
inc
arpl
pop
mov
ret
xchg
push
or
or
push
mov
mov
dec
push
push
push
or
mov
inc
call
push
add
push
inc
xchg
hlt
push
(bad)
pop
sub
dec
push
mov
dec
test
(bad)
pop
add
xchg
dec
adc
lock
pop
add
jnp
sbb
imul
cmp
mov
aaa
mov
or
jl
inc
(bad)
pop
fwait
aad
mov
ds
aaa
mov
mov
and
push
cmp
mov
add
out
push
mov
cs
jne
jae
inc
cmp
(bad)
(bad)
movq
fnstsw
dec
xchg
and
mov
test
cmp
cmp
dec
push
fistp
add
out
dec
push
push
push
rcl
outs
pop
sahf
jae
dec
(bad)
push
and
mov
jbe
jle
jo
gs
rcl
inc
jp
xor
sub
inc
test
push
shl
retf
test
rcl
or
adc
repz
mov
in
pop
adc
dec
scas
es
mov
mov
push
push
inc
fst
retf
sbb
dec
inc
ret
add
lods
out
push
cmp
sbb
enter
int3
lods
sbb
shr
(bad)
ds
push
into
adc
push
pop
jns
test
das
push
dec
mov
into
pop
popf
sar
cmp
or
jnp
xchg
cmps
mov
ss
mov
cmps
movs
xor
lea
or
add
in
iret
inc
xchg
rcr
cmp
ja
xchg
into
jo
xchg
inc
stc
jb
mov
retf
sbb
addr16
clc
or
dec
je
mov
ret
stos
inc
jo
outs
retf
xchg
adc
idiv
mov
clc
inc
jmp
or
pop
dec
arpl
xchg
pop
lock
mov
test
ror
ja
sbb
push
push
cmp
mov
sbb
cmove
xor
aas
rcl
sbb
dec
jp
dec
sub
xchg
ja
lock
dec
jecxz
mov
sbb
aad
std
pop
or
mov
xchg
mov
jecxz
push
call
adc
aad
out
arpl
sub
inc
pop
or
lea
in
pop
(bad)
pop
lea
sbb
inc
inc
inc
adc
push
int3
mov
push
ret
stc
mov
out
repnz
fistp
mov
mov
push
pop
inc
or
js
inc
inc
mov
repz
sub
cmp
rol
iret
jecxz
mov
mov
push
fld
inc
mov
stos
jne
repnz
movs
fs
std
aas
icebp
inc
or
fst
mov
adc
add
enter
cmp
lahf
iret
stos
inc
xor
or
jge
mov
mov
cli
popa
xchg
movs
xchg
(bad)
lods
mov
std
pop
inc
jo
aam
mov
mov
mov
repnz
push
add
jecxz
fld
or
push
sbb
imul
pop
mov
pop
push
add
daa
add
not
xlat
stc
sti
outs
sahf
jne
in
rol
xchg
stos
add
cmp
xor
clc
in
fmul
fnstenv
and
mov
shl
std
and
es
and
jecxz
fld
div
movs
xor
adc
test
push
cld
push
nop
std
and
in
push
push
shl
call
mov
adc
imul
adc
mov
pop
sahf
out
add
or
mov
stc
push
lahf
imul
fs
test
mov
sbb
dec
std
sub
push
gs
adc
dec
test
adc
ret
cmp
outs
and
sub
inc
shr
mov
add
dec
in
pop
out
dec
(bad)
push
push
pop
or
add
push
clc
hlt
cmp
dec
xor
fst
mov
jp
mov
adc
cwde
sbb
fcomp
(bad)
cmp
outs
pop
sub
xchg
(bad)
fdiv
sub
ret
test
mov
gs
sbb
pop
lea
retf
xor
adc
loop
or
cmc
cmp
dec
cmp
dec
or
pop
inc
lock
push
in
push
sbb
jg
push
jne
jnp
or
mov
sub
sbb
in
pop
adc
xor
dec
mov
push
out
repnz
xchg
imul
cmps
inc
or
outs
inc
jno
push
adc
adc
movs
xor
lods
ret
(bad)
sbb
mov
imul
pop
shl
xor
leave
jmp
retf
dec
fs
test
es
sbb
rcl
sbb
xor
pop
fist
mov
mov
add
and
hlt
pop
and
or
inc
jnp
nop
or
ins
mov
push
or
jo
dec
pusha
xchg
inc
rcl
rcr
(bad)
je
out
pusha
leave
dec
outs
push
addr16
push
sti
pop
cs
push
mov
cs
xlat
push
push
pop
and
jns
xchg
neg
jle
loopne
pushf
and
lods
js
les
add
lods
jno
rol
outs
xchg
or
sub
xchg
arpl
mov
fild
popa
std
pop
imul
out
mov
inc
dec
add
cmc
xchg
mov
cwde
push
pop
xchg
sbb
lods
pop
push
fs
sub
repnz
xchg
pop
pop
repz
inc
ja
pop
pop
dec
cwde
sbb
loopne
lock
dec
inc
in
shl
jge
adc
scas
lds
pop
das
or
inc
push
into
add
push
aaa
push
sbb
ins
fs
aaa
inc
ss
xor
and
cmp
es
and
lahf
jp
pusha
sub
popa
aam
inc
pop
sub
xor
rcr
and
add
pusha
rol
(bad)
cmp
adc
or
cmp
mov
jle
arpl
adc
jno
and
mov
sbb
scas
ror
adc
push
adc
adc
std
pop
inc
mov
inc
sbb
dec
ret
jnp
test
shr
dec
pop
aam
or
add
inc
and
mov
scas
jg
push
test
xor
sbb
and
add
fadd
mov
inc
inc
pop
push
arpl
into
sub
ja
fs
mov
push
adc
mov
push
mov
push
pop
lea
pop
fistp
gs
outs
dec
mov
jecxz
jmp
push
mov
and
stc
pop
adc
lods
jle
lock
jae
pop
dec
dec
push
scas
ret
shr
aas
cli
fst
inc
xor
mov
jle
mov
stos
mov
fisttp
(bad)
or
into
push
pop
outs
daa
sub
pop
dec
fistp
inc
ins
mov
sbb
mov
cmp
inc
dec
sbb
mov
in
fdivr
mov
std
xchg
mov
sbb
daa
dec
push
(bad)
xchg
or
(bad)
cmp
push
add
push
mov
not
call
lods
loope
push
adc
push
stos
mov
pop
and
add
stos
rol
(bad)
stos
inc
scas
fld
mov
push
xor
and
movs
push
push
jb
push
daa
pop
pop
es
add
pop
test
shl
out
pop
dec
adc
imul
retf
out
hlt
and
mov
push
ror
push
pop
aam
test
push
fstp
cmp
aam
inc
stos
and
cmp
dec
gs
push
popf
ja
push
and
pop
fmul
fiadd
or
sub
adc
pop
stos
add
inc
fadd
mov
push
sub
cdq
mov
pop
push
lods
jae
sbb
out
xor
scas
nop
pop
jns
add
adc
loopne
stos
stos
popa
add
imul
jp
sbb
cmp
cmps
inc
fwait
das
mov
or
mov
cmps
pop
xchg
xchg
mov
stc
(bad)
xlat
jl
in
add
jg
stc
push
clc
mov
and
xchg
hlt
xchg
or
int3
dec
ficomp
retf
mov
stos
inc
not
dec
mov
popf
(bad)
sti
and
nop
add
test
push
push
xchg
jecxz
into
cmp
dec
mov
push
add
aas
mov
movs
movs
mov
dec
je
cdq
inc
sub
ret
repz
push
or
xchg
fld
jns
dec
ins
outs
pusha
mov
sbb
or
mov
mov
aam
popa
pop
popa
mov
xchg
aas
mov
push
ins
push
clc
or
pop
lahf
inc
inc
mov
cmp
gs
nop
push
mov
xchg
cmp
xor
push
mov
sbb
xlat
add
jge
and
jb
mov
stos
and
add
and
iret
inc
enter
retf
outs
idiv
pushf
dec
dec
loopne
lds
and
rep
pop
loopne
adc
ins
inc
cmc
push
cmp
mov
inc
arpl
mov
jne
imul
cmp
mov
cmp
add
clc
mov
loopne
sbb
ins
lds
je
adc
gs
call
fs
xor
imul
mov
or
jns
push
out
pop
add
fiadd
adc
dec
and
pop
add
add
adc
mov
in
ret
or
outs
or
mov
pop
add
sub
call
cmp
repz
push
add
adc
and
jg
mov
(bad)
sbb
mov
sets
mov
loopne
or
mov
or
add
jmp
loop
rcl
mov
dec
aas
aam
pop
dec
add
inc
mov
inc
adc
dec
dec
jg
je
push
(bad)
test
js
leave
mov
call
pop
xor
out
inc
dec
data16
push
pop
or
es
fmul
iret
inc
xor
ret
add
xchg
mov
add
push
hlt
dec
dec
cli
jge
pop
mov
pop
and
imul
repnz
push
inc
pop
leave
sbb
fstp
dec
push
and
push
dec
sub
adc
sbb
jecxz
push
push
fcomp
mov
dec
cmp
bound
xor
jecxz
adc
xor
or
aas
dec
and
(bad)
imul
hlt
or
and
test
loopne
sbb
(bad)
mov
push
stos
xchg
push
and
(bad)
in
pop
mov
or
pop
stos
sbb
aaa
int
mov
repnz
in
inc
(bad)
out
pop
xchg
ret
fs
outs
scas
hlt
jmp
xlat
pop
pop
pop
je
(bad)
push
jb
das
add
out
lods
call
test
cli
cmps
fst
adc
adc
imul
add
sub
ja
mov
pusha
mov
neg
lods
adc
and
dec
outs
cdq
imul
add
loope
jp
pop
out
jae
fwait
adc
cmp
mov
(bad)
cmp
mov
mov
push
jb
xchg
pop
mov
in
mov
(bad)
retf
pop
movs
das
in
inc
out
sub
outs
(bad)
xor
pop
cs
push
push
xchg
popa
jb
lds
jmp
aam
loopne
jge
ret
mov
(bad)
test
frstor
sub
inc
hlt
gs
enter
cmp
fs
xchg
or
ins
xlat
ret
das
sbb
push
loopne
push
push
stos
adc
dec
push
sub
and
sbb
jmp
adc
or
loopne
cmp
cmp
pop
inc
jmp
sti
push
sbb
ret
stos
push
cmp
push
push
sbb
jbe
gs
jb
(bad)
call
push
pop
push
sub
dec
and
xor
push
or
push
dec
push
(bad)
bound
cmp
(bad)
xchg
jo
cwde
add
xor
ja
test
sbb
cmp
inc
push
inc
sbb
nop
lock
xor
stos
adc
call
inc
das
and
mov
push
inc
pop
xor
and
pop
pop
ret
std
loopne
jns
jns
adc
sub
pop
push
push
push
and
cmp
iret
mov
add
xor
cmp
adc
add
push
adc
adc
je
adc
popa
sub
xor
mov
cmp
arpl
mov
xchg
fmul
popa
daa
pop
add
int
les
shr
inc
push
(bad)
adc
ins
jmp
mov
add
xchg
test
(bad)
rcr
jo
adc
test
and
lock
push
sub
and
out
lea
jmp
xchg
jmp
inc
pop
dec
sbb
sub
cmp
retf
pushf
int
add
or
pushf
fist
sar
repz
mov
jl
outs
xchg
push
push
push
xor
stos
std
stc
push
and
adc
mov
and
inc
movs
or
xor
fstp
cmp
push
iret
movs
(bad)
div
xor
loope
lds
les
add
lods
stos
(bad)
outs
push
pop
or
cs
and
push
push
fs
inc
ds
clc
push
icebp
gs
pop
add
add
stc
push
lahf
ret
sti
dec
push
or
lock
mov
dec
loope
addr16
mov
clc
mov
inc
loope
inc
addr16
daa
(bad)
test
adc
and
mov
push
and
and
xlat
int
ds
dec
cmp
sbb
mov
push
pop
imul
xor
cmp
sub
mov
pop
adc
aaa
or
repnz
cmp
mov
movs
and
mov
es
and
es
(bad)
mov
and
sbb
pop
push
jge
and
out
or
jmp
sub
cmc
xor
xor
dec
adc
or
cli
fs
iret
jns
push
sub
ins
(bad)
imul
ja
dec
cmp
aad
adc
xchg
mov
hlt
into
es
adc
xor
aam
retf
xchg
pushf
mov
ins
ror
test
xor
push
addr16
and
mov
and
inc
add
sbb
fs
js
arpl
int3
or
cmp
cmp
mov
ret
xchg
sub
push
hlt
sbb
or
sbb
adc
jne
push
add
xchg
jns
fld
push
or
jbe
inc
retf
or
pop
neg
shl
adc
mov
lds
xchg
je
and
test
cdq
outs
inc
mov
add
inc
push
repnz
outs
fs
packssdw
in
cs
inc
push
pop
rol
xchg
ds
add
(bad)
xlat
pop
pop
cld
xor
not
sub
or
add
adc
cdq
sub
pop
xor
add
push
inc
je
mov
dec
jle
jb
iret
pop
scas
dec
dec
nop
gs
pop
mov
sub
pop
repnz
and
test
jecxz
push
jbe
inc
add
adc
push
cmp
pop
or
out
push
sbb
mov
es
push
push
mov
cmp
iret
sbb
lds
push
mov
iret
cs
popa
sub
cmp
loope
and
sbb
xchg
push
push
sub
pop
and
dec
in
add
add
fsub
rol
and
and
xor
mov
inc
inc
outs
shl
ins
mov
sti
das
and
add
pop
cmp
mov
xor
pop
inc
inc
pop
or
push
sub
pop
pop
mul
mov
adc
xor
or
push
push
sbb
xchg
jne
sub
cmp
fs
outs
add
pop
addr16
outs
imul
(bad)
pop
(bad)
pop
sti
jp
loopne
push
inc
stos
pop
xor
(bad)
stos
inc
pop
xchg
pop
outs
add
adc
inc
push
dec
push
aam
or
les
jmp
push
dec
cli
push
mov
repz
dec
pop
mov
je
sub
xchg
push
adc
adc
ins
inc
add
pop
je
jle
or
or
fst
(bad)
push
mov
xor
fbld
xor
mov
aas
inc
push
pop
(bad)
and
add
dec
in
je
jne
pop
inc
test
dec
sbb
out
inc
push
gs
cdq
xchg
add
mov
and
pop
dec
push
push
nop
add
xor
popa
ss
ins
xor
pop
pop
inc
push
adc
dec
add
pop
dec
push
sbb
push
sbb
pop
push
push
add
pop
sub
ficom
(bad)
jno
jo
mov
pop
push
xchg
push
sub
bound
test
pop
js
or
shl
inc
dec
jb
add
inc
mov
clc
out
mov
push
fcom
xor
inc
mov
xchg
lds
ja
mov
mov
test
call
push
cmp
test
inc
sub
pop
jbe
inc
jmp
push
jns
or
adc
es
mov
sbb
loope
xor
cwde
fisub
mov
pop
fistp
adc
ss
shl
jnp
stos
sahf
and
pop
rol
inc
xlat
cmps
mov
add
loope
xor
inc
ss
ret
cdq
xchg
aam
jns
add
push
sbb
pop
scas
sub
or
cwde
fiadd
mov
adc
(bad)
outs
rol
xchg
(bad)
jne
cmps
aad
add
add
and
push
mov
xor
xor
sbb
xchg
pushf
adc
inc
out
cmc
ja
mov
jl
cmc
and
dec
mov
hlt
dec
or
cli
jae
dec
movs
dec
sbb
cmp
test
jae
mov
add
pop
or
xchg
or
inc
or
push
outs
(bad)
sbb
add
in
cdq
cwde
in
imul
pushf
adc
cmp
dec
sbb
push
xor
dec
movq
aaa
ins
pop
push
inc
add
lods
gs
push
dec
jbe
enter
stos
push
(bad)
inc
add
sub
(bad)
sahf
push
test
xchg
sub
push
pop
mov
dec
cmps
push
xor
sub
or
push
out
jle
pop
adc
ror
inc
dec
mov
add
mov
mov
int3
pop
sahf
clc
pminsw
add
mov
mov
scas
add
lea
mov
lods
test
(bad)
ins
(bad)
xor
or
mov
add
inc
pop
jecxz
cli
push
inc
xor
sti
int3
shl
inc
dec
and
(bad)
adc
mov
cmp
cmp
jcxz
pop
stos
ja
loop
mov
jns
in
dec
fnstsw
dec
scas
xor
xlat
pop
xor
push
jg
fild
out
push
loope
mov
mov
sbb
jge
jge
sub
sub
inc
neg
jmp
mov
push
mov
jle
movs
xor
(bad)
sub
mov
and
jmp
inc
jmp
outs
push
ja
mov
jne
ins
jp
pushf
dec
call
dec
xor
aaa
push
mov
sub
dec
stos
jns
pop
outs
and
lods
jmp
mov
ficom
ins
pop
(bad)
sbb
(bad)
or
aad
or
ja
mov
std
inc
inc
push
jl
jnp
mov
add
xchg
je
outs
ficom
and
cmps
daa
cmp
dec
mov
cmp
sbb
mov
push
push
jns
xor
add
mov
popf
add
push
fild
outs
push
dec
or
dec
and
dec
pusha
or
and
cmp
dec
popf
xor
xor
cdq
dec
je
fs
xor
and
gs
fcmovnu
dec
pusha
fsub
mul
mov
stos
rcl
jecxz
stc
mov
outs
push
xor
jno
or
add
(bad)
addr16
lock
popf
enter
sub
xor
or
sbb
or
jno
retf
ss
xor
or
cmp
gs
ins
retf
cmp
mov
inc
(bad)
sbb
inc
out
jbe
inc
imul
inc
add
xchg
mov
push
lea
add
jnp
jnp
inc
mov
push
(bad)
push
pop
adc
xchg
xlat
je
loopne
or
sti
nop
repz
add
or
add
fld1
cmp
lock
mov
mov
loop
shr
mov
xor
ins
je
cmp
mov
lea
adc
pop
daa
push
adc
adc
jmp
and
js
inc
or
vpunpckhdq
mov
mov
mov
xor
and
sub
stos
pop
add
push
jo
retf
sbb
(bad)
loopne
stos
or
nop
mov
fbstp
jge
imul
dec
into
adc
dec
push
(bad)
mov
and
or
xchg
mov
add
js
cdq
pop
xchg
or
pop
jmp
xor
test
dec
mov
push
lahf
mov
leave
(bad)
aas
imul
and
and
xor
jg
inc
in
xchg
pop
sub
mov
pop
pop
inc
jae
into
adc
and
pop
div
in
rol
mov
push
push
imul
hlt
dec
jae
sub
mov
imul
mov
stos
pop
add
pop
mov
pop
call
ret
leave
sbb
pop
jp
sbb
fldenv
or
mov
cmp
pop
mov
add
mov
push
pop
es
add
stos
std
add
lods
sahf
dec
popa
pusha
mov
sub
push
shl
mov
pusha
aam
ins
push
add
mov
adc
out
mov
test
scas
aad
(bad)
and
rol
or
cld
fimul
sar
and
bound
add
ror
or
cli
sahf
dec
inc
ja
das
(bad)
push
cmp
loope
mov
inc
and
jne
add
jp
adc
push
retf
mov
jecxz
or
hlt
pop
aaa
push
test
and
inc
test
xor
or
sahf
jbe
in
imul
les
cmp
pop
outs
test
ret
call
sahf
mov
dec
aam
call
sub
mov
repnz
fbld
into
pmulhuw
inc
cmp
dec
adc
or
enter
lock
outs
clc
sbb
and
mov
adc
push
and
(bad)
sub
loope
cmc
pop
dec
scas
xchg
sbb
ja
inc
and
bound
pop
call
pushf
lock
or
cmp
jnp
ret
inc
or
pop
or
js
ss
(bad)
cmps
outs
dec
jae
pop
push
mov
pop
mov
sbb
pop
fadd
and
gs
adc
aad
outs
add
sub
jl
and
pop
or
mov
pop
(bad)
(bad)
push
in
mov
push
fcomp
out
dec
pop
push
rcr
and
adc
mov
in
out
aaa
les
pop
add
retf
xor
add
test
movs
out
lods
xor
mov
push
dec
cmps
mov
jecxz
(bad)
lahf
add
or
adc
stos
pop
push
in
jecxz
mov
or
xor
pop
xor
scas
std
push
adc
cmp
xchg
sub
and
add
ja
das
movs
fnstcw
paddb
push
(bad)
inc
mov
or
xchg
push
adc
push
adc
inc
aas
xchg
cmp
hlt
xor
pop
sub
test
xor
push
div
ins
(bad)
cmp
jp
cmc
xor
xor
xor
shl
add
cmp
mov
outs
mov
in
pop
inc
enter
imul
pop
cmp
pop
cdq
sub
daa
adc
fnstenv
mov
(bad)
les
inc
call
inc
fcmovnbe
ror
shl
cmc
in
fidiv
mov
jae
and
xchg
fst
xchg
ret
add
les
rol
xor
pop
mov
push
stos
mov
jne
mov
inc
(bad)
sub
mov
and
push
pop
pop
(bad)
or
test
or
adc
add
adc
xchg
jp
jb
scas
shr
pop
mov
add
inc
add
push
jp
pop
jle
sub
jno
adc
retf
fs
clc
mov
or
sbb
fcomp
jno
out
xchg
test
adc
nop
hlt
imul
pop
test
div
loop
adc
jge
xchg
inc
xchg
ret
adc
outs
clc
and
adc
sub
or
xchg
in
pop
(bad)
xchg
jns
js
(bad)
fsubr
or
xchg
push
inc
arpl
lea
int3
jno
jmp
jle
gs
pop
cmp
outs
pop
test
mov
mov
out
dec
and
dec
fadd
adc
das
dec
neg
mul
dec
push
repz
loop
sbb
push
cmps
jmp
and
pusha
jno
xchg
shr
dec
mov
pushf
outs
mov
jmp
dec
mov
iret
std
sbb
adc
sbb
pop
fiadd
sub
in
xchg
sbb
and
rcr
outs
sub
repz
add
jno
imul
ja
lods
jg
test
push
aam
inc
xchg
or
(bad)
iret
dec
sbb
cmps
inc
and
clc
mov
repz
fidivr
push
int
cmp
test
pop
mov
mov
sub
push
inc
lods
or
inc
and
or
jae
push
mov
mov
and
ret
aaa
inc
adc
fnstenv
inc
mov
int
cld
inc
or
mov
sub
mov
dec
outs
mov
rcl
jnp
push
repz
call
push
sub
dec
mov
pop
packuswb
xchg
addr16
loope
adc
adc
pop
cld
lock
fmul
push
and
inc
jno
mov
in
jne
push
dec
jbe
mov
lods
sbb
enter
std
stc
push
push
mov
les
xor
and
(bad)
sub
scas
paddw
in
mov
adc
pop
ins
mov
inc
or
movs
or
in
pop
repnz
pop
xchg
loope
inc
in
pop
loopne
and
sub
test
dec
sbb
clc
and
dec
iret
ins
or
xor
cmp
jno
retf
inc
js
sub
outs
mov
add
dec
shr
dec
pusha
xor
aaa
arpl
push
push
push
cmp
inc
aam
mov
xchg
dec
mov
push
jo
push
imul
and
outs
movs
sar
mov
xchg
xadd
fidiv
push
mov
ins
xchg
adc
and
lods
mov
dec
mov
mov
loope
dec
daa
and
sub
dec
jg
dec
call
inc
inc
idiv
in
add
mov
push
pop
mov
pop
jmp
popa
mov
popf
jne
xor
xchg
dec
rol
outs
xchg
sub
loopne
sbb
ins
repnz
clc
cmps
xchg
pusha
fs
mov
mov
leave
xor
test
es
xlat
dec
lods
sub
lods
xlat
call
outs
(bad)
movs
int
adc
cmp
sbb
fist
dec
push
sub
adc
cld
lods
int3
inc
push
xor
loopne
stc
fucom
and
movs
or
inc
lock
lahf
inc
push
adc
cmps
xchg
xor
ret
out
push
fimul
addr16
or
dec
pop
fist
mov
inc
inc
push
dec
xor
dec
(bad)
loop
into
(bad)
imul
mov
mov
div
jb
leave
mov
js
add
xchg
push
test
das
outs
and
lahf
mov
pop
add
bound
rcr
retf
mov
pop
sbb
xor
mov
mov
sbb
adc
ja
push
je
(bad)
sub
and
pop
dec
(bad)
js
test
shl
psraw
adc
test
inc
inc
lods
int3
inc
add
(bad)
jle
inc
std
xor
xor
fistp
jbe
sbb
sub
jmp
cmp
mov
push
mov
xor
ss
push
dec
push
xchg
add
or
repnz
push
outs
shr
and
inc
in
fisub
mov
fistp
mov
xchg
add
sub
scas
or
je
xchg
test
push
mov
inc
das
jge
cli
pop
dec
mov
pop
xchg
(bad)
addr16
ret
ficom
fsubr
pop
push
int3
jg
mov
adc
mov
rcr
imul
add
fdivr
test
nop
xchg
outs
pop
ret
mov
lock
inc
mov
fsub
int
adc
cs
stos
lahf
cs
xor
pop
int3
xor
and
push
pop
or
cmp
add
pushf
mov
dec
(bad)
jb
xor
inc
mov
or
xor
ja
push
inc
cmp
js
push
ret
pop
add
dec
sar
js
pop
(bad)
fisttp
or
or
aad
nop
xor
push
je
xchg
sbb
and
adc
xchg
add
push
push
data16
cmp
les
jne
jae
sti
xor
push
mov
pop
dec
aam
jmp
aam
mov
mov
dec
mov
or
dec
jecxz
das
sub
sti
ror
ins
(bad)
sbb
push
mov
dec
in
jns
sbb
or
sbb
mov
sbb
cld
arpl
jmp
inc
in
pop
mov
add
arpl
cmp
not
ret
sub
sub
fcom
sub
fs
shl
data16
in
dec
not
push
xchg
fst
or
dec
popa
js
ret
push
or
jb
and
cmp
add
je
xor
outs
add
or
mov
lea
sbb
pop
mov
in
daa
and
sub
push
fldcw
push
pop
(bad)
sub
pop
mov
adc
adc
sti
aad
mov
adc
ja
and
popf
test
cmc
imul
cmp
jnp
jbe
(bad)
addr16
out
fldenv
mov
push
jecxz
inc
jae
mov
xchg
pop
sbb
push
adc
popa
and
pop
repz
sub
es
mov
(bad)
pop
mov
cmp
add
push
jmp
inc
std
jecxz
and
jne
adc
push
add
leave
cmp
out
ret
fs
dec
dec
xor
test
jle
jg
ins
jnp
push
inc
fistp
pop
mov
neg
mov
nop
stos
add
into
adc
adc
arpl
add
inc
inc
es
loopne
cmp
pusha
outs
dec
inc
retf
jl
mov
pop
sahf
ds
or
outs
mov
add
push
adc
call
adc
loop
or
or
gs
repnz
pop
pop
(bad)
or
push
(bad)
pop
xchg
shufps
loope
(bad)
cld
ret
aas
popf
inc
int
arpl
xor
jns
sub
les
inc
mov
xor
dec
ret
int
and
mov
idiv
inc
js
inc
adc
cld
ds
data16
(bad)
and
and
jno
pop
dec
sbb
mov
add
inc
and
sbb
mov
movs
add
fs
sbb
pop
lods
dec
or
outs
sub
mov
mov
adc
add
mov
sbb
mov
das
sub
xchg
jmp
dec
inc
mov
or
dec
add
iret
push
mov
mov
stc
xchg
ret
sub
dec
(bad)
dec
pop
cmp
inc
jp
push
rcr
mov
xor
sub
mov
enter
in
dec
out
sbb
gs
loopne
mov
enter
push
adc
mov
push
cmps
cdq
dec
inc
ret
cdq
les
or
push
adc
test
sub
push
ss
std
(bad)
mov
push
pop
pusha
and
and
add
(bad)
(bad)
call
mov
clc
and
je
(bad)
adc
lods
xlat
push
adc
inc
push
aas
lea
(bad)
mov
ret
jne
cmp
sub
(bad)
ins
push
xchg
mov
test
inc
dec
push
dec
adc
pop
ret
mov
mov
fcmovb
push
adc
sub
ror
into
lods
dec
xchg
push
sub
ret
aad
add
pop
adc
pop
xor
int3
or
pop
fs
je
ret
(bad)
push
mov
ret
pop
cmc
pop
mov
xor
add
dec
popa
cmp
rol
and
mov
sbb
out
gs
fst
rdtsc
xor
cs
push
sbb
adc
push
pop
scas
cmp
leave
rol
jle
in
fist
test
jb
mov
ficom
mov
add
sbb
adc
cmp
in
fild
add
pop
cmp
fld
sbb
sub
xchg
dec
das
fs
or
sub
sbb
pop
cmp
(bad)
pop
and
jmp
fld
inc
popa
push
mov
cdq
shl
xor
(bad)
pop
pop
inc
push
push
or
inc
jb
fwait
hlt
popf
add
inc
sbb
mov
ror
jo
or
xor
pop
jno
ja
dec
leave
sbb
sub
adc
stos
enter
ret
add
adc
aad
and
addr16
(bad)
clc
arpl
inc
dec
dec
scas
(bad)
popf
dec
pop
stos
arpl
loop
mov
add
adc
test
xchg
pop
mov
pop
les
dec
xor
and
in
ret
imul
xchg
mov
test
push
sti
add
shl
push
pop
(bad)
int
fdivr
in
ins
xor
je
adc
jne
push
fnstenv
jne
cmp
push
dec
inc
test
xchg
in
dec
sub
pop
(bad)
xchg
cld
clc
(bad)
or
dec
int
ja
mov
mov
mov
movs
add
cwde
push
and
inc
movs
daa
jp
xor
xor
pop
dec
inc
mov
ins
call
xor
jb
enter
jae
dec
xor
xor
dec
test
lahf
dec
jmp
sar
push
jno
loop
push
mov
pop
inc
pop
mov
mov
adc
sbb
(bad)
sbb
(bad)
nop
jno
(bad)
test
jmp
dec
shr
test
scas
mov
movs
enter
sub
push
loop
cld
pusha
lock
test
inc
xchg
das
and
sbb
push
std
adc
nop
mov
jae
push
push
inc
hlt
xchg
xor
outs
or
dec
push
cli
cld
cmps
rcr
sub
mov
ror
add
(bad)
fnsave
pop
jmp
inc
sbb
pop
dec
push
ret
xchg
jae
push
mov
sbb
pop
addr16
pop
fcomp
push
push
cld
mov
xchg
jns
jmp
pushf
test
mov
test
inc
push
add
sub
dec
test
mov
test
inc
dec
dec
push
in
jne
mov
and
in
inc
pop
je
mov
fstp
jp
call
repnz
push
add
in
and
into
jno
push
pop
mov
or
add
scas
pop
pop
sub
sub
shr
enter
pop
adc
mov
das
aas
inc
dec
adc
push
jle
daa
(bad)
ficomp
or
and
xor
mov
je
pop
popa
mov
cld
sbb
push
out
loope
stos
mov
pusha
dec
lea
or
adc
jecxz
dec
mov
inc
fadd
adc
stc
(bad)
aas
mov
push
pop
jmp
aaa
nop
push
jp
je
sbb
dec
lock
je
adc
std
mov
xor
fmul
int
jge
push
push
in
(bad)
mov
or
jbe
je
scas
xchg
inc
inc
es
retf
jbe
push
xchg
clc
push
sti
adc
mov
aas
sub
scas
cmp
mov
inc
dec
mov
or
outs
fwait
xor
int3
mov
(bad)
pop
xlat
dec
ficomp
test
out
lock
or
sub
(bad)
dec
movs
bound
pop
retf
sub
lock
xor
lods
pop
cli
jp
or
stos
push
ds
add
je
in
dec
lahf
mov
outs
daa
pop
aaa
sub
or
push
push
aaa
(bad)
mov
stos
(bad)
or
dec
sub
ror
pop
dec
aad
push
(bad)
lods
push
sub
sar
mov
popa
leave
lahf
icebp
push
(bad)
adc
sahf
test
mov
xlat
inc
add
test
jg
sbb
in
js
movs
push
outs
push
or
popa
retf
pop
pop
xchg
movs
inc
add
inc
mov
cmc
dec
or
lods
fsub
pop
jecxz
adc
xchg
pop
enter
add
dec
or
in
ror
sbb
pushf
sbb
call
jle
xchg
ds
inc
jb
xchg
lea
jge
ficom
lea
mov
or
and
pop
retf
sbb
mov
sar
dec
fucomip
mov
cld
and
jl
xor
cmps
aaa
ins
repnz
retf
xor
sub
xor
sbb
jo
and
rcr
jne
fistp
mov
gs
jp
push
cli
add
add
push
in
or
into
fbld
idiv
sti
aam
sbb
pusha
gs
imul
(bad)
dec
or
jl
test
pop
push
push
xchg
pop
adc
push
repz
mov
cmp
mov
pop
xor
jae
pop
clc
mov
ficomp
mov
jnp
xchg
adc
pop
fs
adc
pop
arpl
push
pop
fwait
ins
or
les
sub
mov
nop
std
in
call
cmps
add
rcl
adc
je
sub
aad
push
movs
sbb
jbe
(bad)
cmp
or
ret
jl
ret
pop
sbb
ss
inc
in
jbe
or
(bad)
push
stos
pop
mov
adc
test
inc
mov
lods
jmp
xchg
pop
popa
push
and
(bad)
dec
cdq
pop
xchg
cmp
pop
inc
jl
push
data16
mov
cmp
jbe
fadd
add
xchg
push
dec
aam
fnstcw
fisttp
div
push
shr
jbe
shr
adc
ret
pop
enter
add
sbb
push
xor
or
popa
push
ins
pop
push
jb
(bad)
pop
push
and
aam
jnp
inc
or
jae
or
dec
sub
xchg
js
cdq
and
push
push
sub
mov
fimul
repz
pusha
jns
xchg
fcom
push
and
sub
mov
in
dec
loop
jnp
call
sbb
jnp
jb
pop
call
lock
push
or
aad
dec
sub
mov
(bad)
or
push
pop
lods
ja
cld
pop
push
mov
nop
dec
into
xchg
jne
xor
ret
leave
jbe
jne
jl
rcl
inc
test
cmc
dec
sahf
mov
xchg
dec
push
cwde
fidiv
dec
ret
lds
xor
and
cmps
push
mov
cmp
push
sbb
scas
mov
dec
mov
call
sub
pop
pop
push
cmp
fld
enter
shr
or
aam
mov
adc
scas
lods
mov
xor
push
mov
add
outs
js
dec
lock
bswap
outs
scas
inc
mov
push
add
clc
inc
test
inc
inc
push
pop
jg
or
loopne
add
leave
mov
inc
sbb
or
jle
daa
cmp
push
sub
aas
inc
ins
sub
pushf
adc
mov
pop
sbb
outs
pushf
arpl
mov
and
add
push
dec
icebp
(bad)
dec
or
push
imul
fs
inc
popa
stos
mov
xchg
jne
js
jnp
xchg
inc
push
out
cld
cmps
push
je
add
xor
adc
xlat
(bad)
retf
push
xor
or
into
push
push
mov
pusha
jg
xor
push
add
inc
push
lea
mov
packsswb
xchg
mov
mov
repnz
pop
aad
popf
mov
push
cmp
adc
jbe
mov
retf
or
mov
popa
ret
xchg
sbb
test
js
mov
neg
aam
sbb
rcl
lahf
stos
std
jb
rcr
out
movs
add
push
scas
dec
mul
and
jo
cmc
sub
into
rcr
add
je
imul
cld
cmp
and
push
push
test
mov
add
outs
push
mov
mov
add
fnstsw
clc
data16
rol
pop
aad
mov
xchg
rcl
sub
pop
xor
clc
xchg
xor
mov
cs
mov
inc
push
loopne
sub
adc
push
or
xor
xchg
push
into
iret
test
je
movmskps
(bad)
rol
movs
pusha
mov
hlt
push
pop
jo
push
pop
push
and
adc
add
inc
(bad)
aad
lods
jbe
mov
mov
shr
sti
pop
add
jbe
xor
xor
js
inc
adc
lods
inc
in
inc
aam
jle
inc
sbb
jno
call
enter
and
jnp
push
fld
data16
dec
sub
bnd
pop
shl
mov
pop
mov
mov
data16
mov
cmp
jo
push
xchg
push
enter
cmp
jb
in
mov
mov
ja
pop
shl
pop
hlt
out
enter
das
push
mov
mov
inc
jp
xchg
inc
lock
(bad)
pusha
enter
scas
or
cmps
jmp
sbb
mov
jmp
out
sbb
(bad)
dec
add
mov
lea
jmp
push
cmps
test
sar
push
stos
mov
shl
mov
mov
popa
inc
js
dec
adc
cmp
pop
pusha
fisttp
inc
iret
cmp
ficom
or
dec
dec
adc
hlt
or
inc
adc
pop
cmp
mov
clc
add
push
push
gs
jge
inc
push
repz
inc
add
inc
add
fnsave
or
dec
mov
sbb
push
push
movs
in
movs
ds
rcr
push
pusha
add
and
call
out
dec
shl
pusha
mov
or
mov
lahf
retf
adc
test
ss
mov
sar
mov
bts
ret
push
push
loop
inc
mov
add
add
pop
jecxz
les
daa
mov
pop
sbb
jno
pushf
addr16
imul
dec
je
mov
pop
loopne
retf
push
and
or
mov
jg
inc
mov
mov
cmps
push
push
or
mov
push
mov
or
mov
dec
in
push
test
and
or
ins
dec
xor
sbb
popf
int
add
dec
or
inc
dec
aas
pop
and
sbb
in
add
jle
xlat
pop
sbb
push
xchg
and
into
out
inc
cmp
jbe
les
popa
push
aam
dec
pop
xlat
popa
sbb
inc
fst
aaa
seto
xor
popa
mov
in
add
popf
adc
cmp
icebp
mov
fnstcw
cmp
clc
and
xchg
inc
sub
dec
loopne
fist
fiadd
xchg
ja
and
cmp
aam
cmp
sar
push
in
jno
mov
addr16
push
(bad)
(bad)
pushf
retf
inc
mov
pop
inc
movs
jns
dec
jb
mov
pop
inc
jbe
jg
out
shr
cmp
enter
sbb
pop
nop
dec
mov
fisttp
or
arpl
pop
sbb
mov
and
ins
mov
inc
push
xor
(bad)
out
mov
mov
add
ret
call
push
inc
mov
pop
and
adc
mov
pop
cmp
mov
add
inc
mov
mov
js
cmp
push
cmp
mov
pop
sahf
jae
es
sub
cmps
pop
and
pop
and
add
mov
sub
pop
or
(bad)
jne
pop
out
fimul
push
daa
xor
icebp
xchg
fcomp
jle
sbb
sbb
pop
cmc
dec
inc
dec
jb
scas
iret
repz
pop
sub
hlt
xor
pop
xor
(bad)
loopne
adc
pop
out
mov
mov
jge
mov
and
and
jae
pop
xor
aam
bound
inc
mov
push
jg
test
addr16
xchg
les
mov
in
popf
push
out
sub
fimul
push
sahf
xchg
jle
cmp
pop
(bad)
push
sub
cmp
outs
adc
xchg
push
mov
shr
xor
std
push
inc
lods
jne
ds
jmp
(bad)
and
mov
lea
xor
andnps
sub
xor
and
or
adc
repz
or
mov
sbb
jnp
push
popa
or
sbb
lds
add
dec
out
cmp
loope
cdq
xchg
jmp
sub
scas
push
cmp
mov
fdivr
dec
call
imul
jae
dec
inc
sub
lea
pop
mov
loopne
fcomp
pop
dec
outs
and
inc
lods
mov
or
push
ins
fld
cs
xchg
js
sti
fstp
inc
jge
imul
dec
nop
je
fisttp
mov
scas
scas
sbb
retf
push
popa
mov
adc
push
inc
add
adc
jnp
push
mov
sbb
shl
push
mov
lods
into
rol
aaa
jno
repnz
imul
call
push
mov
jns
fadd
adc
mov
add
cld
pop
ds
inc
pop
nop
jmp
not
mov
inc
jmp
test
jcxz
pop
push
sub
loop
shr
inc
mov
cmp
inc
ja
loope
pop
push
inc
cli
sbb
sbb
dec
rcl
inc
fwait
adc
in
sub
or
push
inc
push
pop
inc
aad
sub
adc
lods
pop
cmp
dec
jb
add
inc
adc
add
mov
lock
mov
sbb
ja
adc
jl
gs
inc
push
pop
aam
(bad)
mov
mov
lds
arpl
push
or
push
sub
xor
xlat
rol
lds
out
into
xchg
pop
jl
pop
push
add
inc
mov
mov
dec
adc
retf
inc
or
adc
aad
pusha
leave
(bad)
(bad)
jb
shr
or
sub
sub
push
push
xchg
inc
xchg
retf
adc
rcl
(bad)
jns
xor
or
ins
lods
sub
lock
mov
adc
adc
pop
jns
dec
fld
(bad)
jno
idiv
add
mov
ins
sbb
mov
lahf
adc
push
push
outs
sub
pop
sldt
jge
stos
imul
call
jmp
adc
xchg
sub
aad
mov
jle
inc
dec
cld
or
push
jp
dec
adc
retf
sbb
mov
ins
mov
or
outs
adc
jbe
add
inc
dec
nop
inc
outs
dec
sbb
pushf
ret
clc
idiv
mov
push
pushf
movs
mov
xchg
cld
push
lahf
sub
xor
aad
cs
jns
sbb
jo
ja
and
scas
inc
je
movs
scas
add
mov
shl
stos
push
pop
adc
dec
and
xrelease
fs
sar
test
sub
je
sub
mov
js
aas
adc
stos
mov
rcr
add
mov
inc
popf
xchg
loop
in
push
dec
jmp
fisttp
inc
pop
push
push
movs
ret
nop
jge
or
sub
movs
pop
xchg
xchg
fs
add
xchg
movs
arpl
push
cwde
mul
dec
inc
jae
das
dec
clc
push
sbb
jl
adc
into
cmps
mov
inc
dec
or
cmp
cmps
and
add
push
xchg
lock
mov
lods
xor
xchg
mov
imul
scas
adc
xchg
sbb
lahf
add
or
aas
and
jns
mov
retf
js
in
jne
cli
test
adc
xor
jl
jmp
shl
es
mov
add
mov
retf
adc
cmp
test
aam
pop
test
mov
add
dec
ds
mov
sub
inc
repnz
sbb
mov
dec
out
dec
xchg
dec
les
and
sbb
or
xor
jge
sbb
jge
sbb
push
pop
dec
jae
scas
stos
not
pop
add
and
je
cmp
jae
xor
gs
jle
and
loop
nop
push
dec
inc
add
cmp
dec
jl
(bad)
lahf
push
mov
pop
push
and
or
pop
pop
sbb
xor
mov
push
sbb
push
and
inc
push
idiv
push
or
pop
iret
jmp
hlt
enter
pop
arpl
int
ret
sub
dec
inc
sbb
pop
adc
movs
mov
ss
dec
or
jb
imul
xchg
dec
dec
pushf
xor
jmp
cmp
daa
push
mov
sub
pop
outs
push
push
pop
out
std
cmp
jb
push
sbb
and
test
mov
pop
pop
inc
sbb
sub
cmp
addr16
pop
arpl
sub
daa
adc
daa
pop
ja
pop
dec
or
add
jge
mov
jae
xor
cmp
push
ja
pop
push
mov
out
push
addr16
push
push
pop
sahf
(bad)
mov
std
in
adc
add
and
pop
or
push
je
cli
inc
xchg
or
movs
je
dec
pop
pop
push
push
ss
sub
add
sbb
cmp
pop
xor
sbb
adc
jmp
mov
adc
inc
push
cdq
psrlq
jge
push
cmps
shl
sbb
gs
addr16
mov
iret
sub
push
data16
or
or
pop
sar
dec
(bad)
mov
push
pop
es
inc
cmp
or
xor
scas
mov
cld
dec
pop
push
jmp
pop
or
dec
daa
aaa
xchg
sbb
push
mov
pop
or
pop
(bad)
sbb
pop
addr16
or
xor
(bad)
or
je
or
mov
ja
sub
mov
mov
cmp
cmp
out
xor
fcomp
adc
inc
add
les
sbb
cmovae
xor
outs
mov
aaa
sar
mov
repnz
pop
retf
mov
xchg
arpl
nop
mov
jnp
sti
loop
xchg
and
sbb
jle
pop
mov
sub
mov
xlat
push
in
gs
(bad)
sub
pop
push
loopne
test
nop
xchg
push
adc
push
outs
sbb
push
xchg
adc
inc
cmp
cs
cmp
mov
loopne
dec
lock
add
les
aas
cwde
stc
mov
xchg
test
push
sbb
inc
push
adc
pop
xchg
cmps
or
mov
push
fist
cmp
push
push
push
and
lods
mov
rol
inc
mov
popf
daa
pop
lods
xor
sbb
inc
jno
add
outs
(bad)
fdivr
xchg
cmp
push
push
pop
outs
push
pop
rcr
imul
jo
cwde
mov
loopne
push
mov
inc
rcl
sub
dec
dec
adc
push
bound
pop
cmp
push
mov
mov
pop
mov
ja
mov
imul
jo
sbb
add
imul
or
and
jne
push
inc
jnp
clc
(bad)
jmp
xor
add
out
hlt
inc
cli
out
inc
mov
xchg
out
jge
mov
or
sub
pop
dec
rcl
xlat
retf
pop
test
cdq
jo
ret
rcl
adc
xor
in
(bad)
and
and
pop
daa
rcr
call
test
and
je
shl
aas
stos
dec
mov
daa
jb
ins
or
push
and
sbb
sbb
xor
push
adc
xor
dec
pop
pop
jbe
push
pop
pop
pop
or
add
push
cmp
inc
sub
cmp
call
scas
dec
inc
cdq
mov
push
popf
adc
ins
popf
pop
adc
jo
xchg
xchg
ss
call
(bad)
mov
jge
je
sub
(bad)
popa
mov
sbb
cmps
pushf
xchg
xchg
or
ins
es
shr
fcmovnu
neg
dec
imul
fadd
push
jno
daa
ins
js
or
jl
mov
xchg
test
ds
(bad)
mov
fucomp
inc
mov
sbb
sti
pop
inc
leave
(bad)
push
inc
jl
adc
jo
bound
dec
sbb
mov
add
adc
cmp
je
outs
jns
cmp
jo
jmp
pop
test
sbb
mov
test
ror
int3
jp
movs
test
mov
inc
not
cld
dec
loop
xchg
mov
pop
jmp
jmp
lds
out
adc
dec
mov
lods
outs
push
jg
pop
jg
inc
data16
daa
ins
mov
sahf
shl
fcom
ror
dec
sub
inc
add
mov
dec
cs
and
adc
int3
in
sbb
cs
or
push
pop
or
daa
and
sbb
sbb
repz
(bad)
nop
xor
adc
call
(bad)
adc
cmp
pop
mov
jmp
mov
sbb
shr
div
and
sbb
out
push
pop
rcr
fst
sbb
or
lea
imul
add
dec
or
add
ja
rcl
jae
push
push
jge
ja
add
mov
test
je
mov
jns
xchg
test
push
xlat
and
imul
fbstp
mov
cmp
pop
cmps
add
inc
adc
mov
loope
(bad)
fucomp
add
sbb
pop
mov
jne
pop
cwde
inc
dec
pushf
cld
cmps
pop
add
lock
(bad)
mov
dec
js
adc
sbb
dec
iret
mov
pop
stos
jbe
es
js
add
pop
jne
or
push
ins
aas
loope
(bad)
aas
dec
stos
inc
dec
sar
mov
and
enter
cmp
jo
push
inc
xor
sub
out
sbb
and
push
cmp
xor
js
and
xchg
xchg
push
xchg
fdiv
pop
inc
daa
dec
out
inc
sub
stc
cmp
sbb
add
mov
adc
sti
pop
and
test
or
aaa
inc
cmc
jp
ins
cld
push
pop
or
loope
je
cmp
mov
xchg
retf
push
cmp
ins
mov
fwait
inc
sub
push
dec
sub
sub
add
and
jo
xor
cs
adc
popw
adc
pop
lods
imul
cdq
or
and
fistp
push
pop
cmp
outs
cmp
and
inc
lods
adc
inc
adc
arpl
es
test
and
out
inc
(bad)
xchg
popf
or
push
or
lock
jb
pop
xor
add
and
add
out
retf
pop
pop
sbb
sbb
push
dec
xor
jp
(bad)
out
push
mov
cmp
xchg
inc
sbb
out
pop
sbb
fwait
sti
shr
fldenv
pop
jnp
lds
push
out
inc
scas
outs
inc
sub
pop
movzx
and
sbb
aam
cmp
les
add
sub
adc
xchg
jle
in
mov
and
inc
jne
addr16
(bad)
sahf
mov
ret
ss
jecxz
xchg
jg
inc
push
inc
arpl
retf
scas
ret
dec
aas
je
ss
dec
popa
out
mov
jge
sbb
adc
dec
daa
or
and
outs
xor
int
stos
(bad)
xlat
rcl
sbb
pusha
in
fisttp
dec
xlat
cmp
pop
shr
jle
inc
cdq
fiadd
les
mov
push
adc
add
dec
(bad)
adc
inc
add
push
push
add
mov
inc
out
inc
push
sbb
sbb
in
push
push
or
xor
sbb
pusha
inc
sbb
or
or
gs
push
inc
dec
or
add
jb
mov
pop
sbb
or
inc
or
and
mov
inc
aaa
inc
add
out
adc
sbb
adc
cmps
sub
nop
add
push
add
dec
add
gs
sub
xchg
mov
cmp
or
add
and
jmp
sbb
pop
push
xchg
or
push
add
inc
or
add
or
fcomp
add
sbb
adc
push
out
and
jnp
cmc
cmps
arpl
push
aaa
jmp
test
repz
cmc
ja
mov
ja
sbb
fcomp
aam
lea
outs
jl
push
aad
mov
movs
jl
inc
call
dec
inc
push
aam
pop
iret
(bad)
out
mov
pop
push
inc
mov
test
jo
ret
push
pop
mov
fild
push
sub
imul
test
cdq
out
inc
imul
dec
xor
and
stos
pushf
xchg
xchg
test
pop
dec
jns
inc
inc
push
mov
add
add
enter
pusha
mov
xchg
idiv
test
push
inc
sti
ror
add
inc
and
sub
push
pop
push
aam
dec
dec
js
push
jns
xor
push
pushaw
enter
aas
jne
lods
imul
inc
sbb
push
add
es
je
and
jae
outs
inc
pop
js
or
push
test
loope
pop
jp
add
inc
popf
mov
fs
dec
or
cmp
ins
xor
jb
xchg
sbb
cld
pusha
dec
call
iret
ret
cdq
push
jge
gs
adc
push
mov
sti
add
cs
or
jo
scas
inc
inc
imul
dec
rcl
push
repnz
icebp
mov
xchg
mov
xchg
sub
(bad)
hlt
outs
add
aas
pop
fld
neg
push
adc
mov
call
mov
dec
sub
xchg
or
int3
jmp
(bad)
das
(bad)
xchg
es
cmp
shl
cmp
push
nop
enter
inc
push
push
cli
sti
cmp
out
fwait
mov
pop
inc
lds
addr16
push
xor
dec
leave
or
ja
push
pop
jmp
adc
shl
inc
in
jmp
aaa
sbb
idiv
fs
dec
in
stos
ficomp
in
lock
mov
fstp
popf
test
sbb
dec
mov
xor
std
lea
mov
dec
lea
mov
dec
pop
mov
add
dec
mov
mov
retf
gs
rol
jo
aaa
and
outs
adc
ret
rcr
push
jae
or
xchg
(bad)
lahf
mov
dec
ja
adc
pop
mov
test
sub
adc
or
fsub
jp
je
push
jnp
jl
sbb
aas
retf
adc
or
push
fwait
sar
or
pop
out
imul
idiv
jo
test
js
inc
xor
pusha
daa
and
fbstp
push
xchg
nop
add
ins
shr
mov
fsubr
pop
mov
dec
je
pop
cmp
fcomip
lea
rol
jnp
test
cmp
ins
cmp
inc
les
pop
inc
clc
jb
jecxz
bound
mov
or
sub
xor
or
or
shl
adc
sbb
jle
and
xchg
add
push
inc
adc
shl
xchg
or
(bad)
cmp
jb
push
adc
in
outs
outs
rol
(bad)
push
(bad)
or
jecxz
adc
adc
outs
imul
cdq
shl
push
enter
lock
add
outs
test
mov
xor
xor
sub
xchg
imul
jne
pop
mov
out
push
test
leave
in
les
aad
sbb
dec
and
pop
retf
mov
add
adc
fdiv
daa
fnop
xchg
push
mov
rol
ret
cmp
pop
pop
inc
or
mov
cmp
push
cmps
or
mov
cmps
or
(bad)
lahf
jno
pop
lea
and
imul
jnp
mov
pushf
push
cmp
add
shl
loopne
push
mov
jne
cmp
sub
jmp
test
fs
dec
and
dec
mov
cmp
push
pop
ins
clc
push
fs
dec
inc
add
ret
cli
mov
call
dec
aaa
or
cs
loope
shr
or
in
and
cmp
cmp
adc
cmc
aad
aaa
pop
add
adc
or
push
xlat
inc
pop
jno
adc
fwait
js
bound
mov
and
cmp
lds
mov
xor
cmp
dec
sbb
aam
sbb
or
pushf
xchg
scas
xchg
inc
clc
mov
ins
stos
adc
sub
sbb
mov
pop
mov
inc
(bad)
cmp
ss
mov
adc
(bad)
mov
imul
pop
adc
cli
das
lea
mov
lahf
mov
je
scas
mov
aaa
push
aaa
jl
cmc
or
pop
out
loope
push
adc
fisub
or
xchg
inc
addr16
add
(bad)
std
loop
dec
stos
je
mov
mov
gs
or
cmp
adc
pop
dec
or
adc
mov
jg
dec
push
pop
sub
push
div
outs
nop
loope
add
inc
push
int
pop
push
sub
xlat
call
sbb
sahf
mov
clc
pop
add
enter
add
in
loope
retf
ja
add
pop
dec
(bad)
xchg
mov
or
mov
add
sar
je
mov
and
xor
adc
(bad)
dec
cld
xchg
fcomp
inc
dec
adc
lea
mov
rol
stc
xchg
test
mov
adc
inc
xchg
adc
xchg
add
daa
sahf
dec
and
sub
or
sbb
loopne
mov
add
mov
or
fcom
in
push
lods
and
or
add
mov
sub
(bad)
cmp
jb
or
fwait
or
mov
lods
pop
push
adc
sahf
push
xlat
add
cmp
popf
cmp
cmp
daa
add
sub
and
mov
pop
mov
mov
pop
not
cmp
push
jb
lock
push
imul
mov
add
inc
cmp
or
jb
push
pop
push
xor
dec
and
sub
pop
into
xchg
lds
adc
popf
rcr
add
inc
repz
es
dec
into
sar
jbe
lea
icebp
movs
rcr
pop
fild
mov
sub
add
push
sbb
out
rol
(bad)
into
enter
mov
ds
sbb
daa
mov
push
test
rcr
cli
push
dec
jmp
pushf
neg
pop
pop
sbb
(bad)
arpl
(bad)
movs
jbe
inc
lds
cs
xchg
push
fild
add
imul
add
adc
mov
push
inc
fist
enter
sbb
dec
idiv
adc
aaa
or
ss
xchg
inc
dec
scas
sub
add
ror
neg
sub
or
push
pop
adc
sub
pop
inc
rcl
(bad)
or
adc
jge
xchg
or
xor
pop
add
pop
mov
cmps
adc
sbb
fadd
and
ins
pop
cmp
xor
adc
inc
jle
arpl
(bad)
adc
xchg
aaa
dec
xchg
inc
enter
jmp
ja
xchg
sbb
(bad)
popf
push
mov
or
pop
cmp
mov
pop
jg
push
aas
push
push
stc
jbe
mov
and
pop
mov
(bad)
aas
inc
into
cmp
je
std
mov
dec
add
push
mov
mov
pop
mov
fcmovnb
repz
cmps
js
add
pop
iret
je
adc
or
loop
inc
imul
clc
(bad)
sbb
(bad)
sub
push
push
add
les
pushf
into
pop
mov
je
add
mov
mov
cs
jo
mov
fisubr
(bad)
pop
fst
dec
push
fisttp
cmc
push
mov
dec
jl
jo
inc
cmp
in
pop
ins
je
adc
and
inc
mov
push
dec
inc
jge
mov
mov
cmp
(bad)
mov
inc
cmp
cmp
lea
dec
je
cli
or
sbb
pop
pusha
mov
in
fsubr
sbb
nop
in
or
mov
xor
mov
aas
xor
ret
pop
call
dec
jecxz
lds
cmp
cmp
rcl
test
into
sub
pop
jg
xchg
sti
xor
jmp
pop
add
xchg
pop
sub
hlt
ja
mov
jge
enter
lods
cs
es
jge
cmc
add
push
(bad)
pop
xor
cs
ds
sahf
push
xchg
pop
lods
cmp
xchg
sbb
mov
dec
ror
mov
(bad)
clc
jecxz
sbb
leave
or
mov
mov
or
js
jecxz
jl
leave
jno
xor
ja
sbb
xor
inc
loopne
clc
sbb
jnp
dec
mov
dec
mov
shl
push
(bad)
xchg
jle
push
and
pusha
dec
outs
jge
xor
add
jbe
dec
inc
jbe
xor
inc
cmps
movs
rcpps
jnp
sbb
movs
lea
xor
jmp
rol
stc
adc
sbb
fs
add
mov
mov
mov
inc
mov
outs
aam
cmp
mov
push
je
push
and
pop
pop
push
leave
cdq
shl
xor
jmp
jmp
or
ins
xchg
loop
arpl
jno
int
pop
daa
push
push
and
mov
sub
dec
pop
push
pop
xchg
pavgb
fisub
jle
add
mov
push
ret
lea
push
push
ror
adc
add
adc
mov
jo
mov
xor
adc
pop
fld
retf
xchg
je
aaa
das
les
imul
stos
fcmovnb
adc
iret
push
fstp
adc
fadd
ror
pop
adc
inc
mov
and
jge
pop
out
or
mov
pusha
inc
jg
inc
ficom
mov
fwait
adc
sbb
cwde
(bad)
neg
not
aas
xchg
mov
xor
xchg
imul
jp
mov
sub
sbb
push
jp
inc
mov
mov
dec
out
ret
fimul
bound
loopne
imul
sar
scas
sti
(bad)
sti
test
or
clc
inc
stos
(bad)
clc
stc
push
mov
call
sub
xor
xchg
pusha
mov
xor
pop
adc
sbb
jmp
add
or
sbb
inc
xchg
push
(bad)
in
pop
and
imul
sub
test
mov
pop
enter
push
enter
pusha
dec
pop
pop
mov
ret
xor
xchg
outs
pusha
pusha
sbb
adc
xchg
fsubr
leave
adc
enter
and
cmps
adc
push
lods
cmp
mov
sub
lods
lods
(bad)
jp
jae
pop
or
pop
add
mov
push
in
or
sbb
add
mov
test
ins
or
loop
cmc
mov
jae
jbe
icebp
push
cli
push
sbb
pop
rcl
mov
mov
add
jmp
xchg
dec
je
inc
sbb
dec
mov
ins
es
jl
mov
pop
ins
pop
in
nop
pop
add
pop
mov
ins
push
or
add
cwde
adc
push
xor
popa
sbb
mov
outs
cmp
jmp
cmc
cmp
lock
ds
add
and
jbe
cmp
push
ss
ds
(bad)
repz
push
das
pusha
aaa
loopne
xor
nop
dec
dec
pop
sar
xlat
pop
les
pop
add
inc
popf
mov
retf
mov
gs
inc
sbb
inc
inc
cld
stos
mov
jae
ret
push
push
mov
icebp
cmc
add
push
push
and
inc
mov
dec
adc
mov
push
aam
jg
mov
mov
imul
rcl
sbb
shl
pop
sbb
cs
(bad)
cmp
in
xchg
pop
lds
add
mov
inc
int
in
loope
pop
pop
int
movs
push
loop
mov
pop
adc
sbb
push
sti
in
movs
scas
aad
xchg
dec
in
push
mov
mov
lgs
ret
ss
push
mov
sub
aad
or
leave
rcr
aam
pop
jl
data16
pop
sub
xlat
mov
cli
and
jge
movs
add
push
pop
aaa
scas
jmp
es
xchg
sub
or
push
sub
mov
popf
pop
push
cmp
pop
xchg
loope
jle
pop
xor
or
mov
fsubr
or
xchg
mov
loope
pop
mov
cmp
gs
mov
mov
push
or
push
retf
scas
inc
(bad)
and
mov
inc
mov
sub
mov
jmp
push
inc
imul
scas
std
mov
lods
or
pop
dec
push
mov
pop
mov
fisttp
mov
adc
pop
rol
arpl
cmc
enter
sbb
fst
adc
jg
aaa
xlat
pusha
xchg
push
mov
ins
add
mov
dec
jae
mov
(bad)
and
daa
fwait
xor
push
or
jmp
dec
dec
pop
retf
and
push
pop
test
in
fild
push
push
add
adc
adc
shr
(bad)
(bad)
pop
sbb
sbb
aam
xchg
imul
push
push
popf
cmp
xor
test
leave
and
inc
std
cwde
pop
and
sbb
hlt
push
push
loope
mov
sti
pop
add
push
cmp
clc
ret
push
xor
gs
jle
xchg
sbb
test
add
xor
adc
into
int
push
pop
add
data16
(bad)
add
xchg
fst
gs
loopne
jbe
jae
and
icebp
and
aaa
push
fiadd
or
add
sub
das
mov
lock
into
sub
ret
mov
mov
add
and
lds
aas
ds
mov
mov
push
hlt
xor
pop
push
sub
fdivr
pop
mov
inc
mov
mov
and
inc
push
lock
push
in
push
daa
inc
mov
leave
pop
js
dec
jg
jae
and
mov
inc
xor
sub
nop
cmp
inc
dec
or
or
dec
push
dec
jae
inc
pop
push
call
and
cmp
pop
pop
inc
sub
push
pop
fld
add
and
fsubr
loop
ror
test
dec
sbb
xchg
xchg
fld
add
mov
mov
(bad)
movs
dec
pop
rcl
jno
dec
aaa
xchg
in
jmp
xchg
pop
mov
inc
push
imul
mov
push
cmp
push
outs
fistp
pop
cmp
mov
lods
pop
mov
sbb
fistp
aad
inc
adc
dec
test
push
stos
inc
dec
js
es
xor
adc
stos
mul
push
ss
test
stos
inc
sbb
(bad)
or
aam
dec
stc
fist
lea
out
or
inc
outs
jne
cwde
xchg
mov
adc
ret
mov
das
and
in
mov
cdq
ja
dec
mov
fsubr
in
mov
cmp
popf
jecxz
mov
in
aad
inc
mov
fcom
arpl
cdq
and
js
xchg
inc
mov
mov
mov
cmp
(bad)
pop
push
and
loop
push
or
or
movs
popa
addr16
aam
fmul
aas
sub
repnz
inc
jb
cmp
(bad)
fisttp
or
xor
jg
jmp
out
dec
out
push
loopne
repz
arpl
out
ror
push
adc
or
xchg
stos
inc
push
(bad)
js
out
add
mov
push
jo
pop
mov
cmp
xchg
adc
xchg
pop
lods
ret
inc
movs
push
jbe
push
scas
in
adc
or
mov
pop
sbb
retf
(bad)
clc
js
pop
gs
enter
xchg
rol
push
sbb
popf
or
inc
xor
je
cmc
inc
(bad)
stos
push
sub
pop
adc
mov
mov
dec
push
les
adc
pop
aaa
dec
mov
jbe
jne
dec
add
cdq
pop
jb
push
xor
mov
lahf
cs
jne
aas
and
or
jecxz
(bad)
or
add
adc
pop
pushf
push
cmc
loope
or
dec
or
es
outs
mov
imul
sbb
dec
cli
and
pop
popf
es
sbb
add
dec
pop
and
pop
and
pop
push
(bad)
cmps
(bad)
push
pop
fwait
shl
sub
jge
sbb
add
add
sahf
cmp
es
sub
add
stos
add
data16
lds
xlat
mov
inc
pop
add
pop
(bad)
pop
jns
sub
inc
popa
enter
cmp
or
pop
fistp
cmc
mov
jo
lds
push
clc
sbb
pop
xchg
and
ret
or
(bad)
not
addr16
push
or
sub
pop
push
ror
dec
adc
mov
pop
pop
shl
lock
js
es
cmp
sbb
push
or
push
shl
add
adc
jge
mov
mov
loopne
xor
sbb
pop
push
inc
xor
pop
jge
push
jbe
xchg
stos
dec
adc
or
mov
mov
aaa
xchg
les
(bad)
repnz
loopne
leave
adc
or
add
scas
mov
pop
push
bound
call
mov
(bad)
sahf
pop
je
jo
mov
outs
sub
mov
inc
add
adc
pop
push
rcr
adc
shl
pop
xchg
fimul
dec
xchg
pop
mov
out
or
push
inc
inc
pop
pusha
mov
stos
dec
cmps
inc
push
adc
inc
mov
inc
inc
sbb
inc
inc
addr16
(bad)
pop
jmp
test
mov
add
fisubr
pop
push
ror
out
or
cmps
xchg
in
mov
dec
cwde
mov
xor
add
mov
push
and
inc
out
int
ins
scas
repz
ret
jnp
nop
dec
into
imul
les
fnstsw
(bad)
mov
shl
or
lock
stos
pop
add
and
dec
jg
sbb
push
push
xor
pop
inc
mov
mov
jb
xchg
inc
pop
xor
xor
inc
fild
add
push
jns
out
cmc
mov
sbb
je
or
pop
or
cmp
sbb
inc
ss
imul
inc
pop
push
adc
inc
dec
inc
lods
movs
scas
call
xlat
jns
pop
pop
xchg
pop
leave
test
call
mov
lods
dec
jmp
cmp
lock
jge
adc
test
cmp
push
add
inc
shl
fdivr
pushf
sbb
inc
arpl
inc
xor
cmp
loope
and
or
clc
scas
inc
jne
xchg
adc
mov
cli
sub
push
sbb
fwait
dec
dec
js
call
dec
stos
or
xchg
inc
pop
lds
sub
push
mov
push
inc
jne
and
fxch
sahf
ins
enter
pop
mov
cld
fld
les
push
pop
sub
xchg
add
dec
shl
dec
push
sub
and
sar
mov
imul
sub
rcl
cld
rol
and
pop
jae
or
mov
pop
pushf
std
outs
cmp
cmp
lds
and
xchg
or
jns
in
pop
std
jns
xchg
aad
or
dec
loope
ja
jl
pop
(bad)
adc
es
out
mov
or
test
popf
fsub
pop
in
in
mov
sbb
inc
sub
or
add
rcr
mov
(bad)
push
mov
fcom
cmp
dec
push
xchg
pop
dec
jmp
mov
mov
dec
popa
sti
popf
xor
mov
(bad)
jle
loope
add
xor
and
aas
dec
add
inc
pop
push
inc
outs
jge
cmp
jbe
add
cmps
cmp
or
jmp
in
clc
pop
and
xchg
dec
cmp
inc
repz
xchg
dec
pop
inc
xor
mov
out
adc
adc
call
sbb
clc
clc
or
ds
cmp
aad
ds
cmp
pop
xchg
fdivr
sti
outs
je
jno
out
ret
sub
dec
and
jns
xor
xchg
jae
(bad)
data16
mov
aad
xor
cmps
push
pop
fdiv
jge
and
mov
cwde
mov
std
in
pavgb
test
cmp
pop
and
dec
inc
rcr
pop
lods
into
xor
rcr
dec
xor
repnz
in
fadd
or
aaa
ret
mov
push
push
pop
repz
icebp
dec
inc
or
repnz
mov
add
cmp
dec
dec
mov
inc
ror
fadd
outs
je
stos
jmp
stc
outs
test
and
adc
je
jg
pushf
ret
ret
pop
jl
not
imul
psubb
push
(bad)
lea
jge
inc
pop
sbb
adc
xchg
leave
push
push
jae
inc
pop
call
dec
pop
or
xchg
mov
data16
nop
mov
(bad)
fmul
test
push
lods
icebp
adc
add
fisub
mov
test
cs
lods
aas
loop
xlat
mul
int3
dec
pop
push
mov
mov
std
jge
xor
les
iret
mov
push
es
adc
inc
xchg
lds
js
ins
sub
pop
inc
int
add
jnp
push
mov
push
and
rcr
mov
inc
push
mov
popa
pop
retf
js
movs
xchg
lds
add
xor
xchg
mov
mov
rcl
adc
fwait
add
or
mov
pop
pop
push
mov
mov
repz
popa
jge
test
movs
sar
push
int3
cmp
pop
hlt
retf
sub
rcr
push
push
sbb
ret
cmp
push
popa
dec
ss
ins
jns
pop
mov
divps
pop
(bad)
mov
sub
inc
mov
pop
jmp
adc
pop
ficom
xchg
and
pop
adc
int
dec
xchg
cmp
and
sahf
and
(bad)
(bad)
pop
out
sub
enter
adc
nop
jle
jae
dec
mov
in
inc
pushf
and
out
enter
cmp
cmps
cmp
mov
je
imul
sbb
dec
(bad)
out
inc
fst
sbb
js
pusha
pop
add
rep
xchg
jmp
int3
fs
std
lea
adc
and
es
dec
cmp
jb
or
loopne
mov
sbb
xlat
add
dec
imul
in
(bad)
fbstp
xor
pop
fxch
sbb
inc
in
sahf
push
sbb
cmc
push
fs
cmp
cmc
pop
loopne
pusha
dec
jne
mov
push
(bad)
idiv
movs
(bad)
aaa
push
sbb
add
cmp
sbb
rcl
xchg
(bad)
bound
inc
mov
test
push
lods
xchg
push
mov
pop
sub
call
(bad)
pop
ss
je
das
(bad)
neg
ss
aam
daa
mov
fsubr
cmc
arpl
jae
push
push
fisub
cmp
pop
mov
enter
xchg
inc
mov
outs
imul
stos
push
inc
(bad)
psubb
rol
loop
push
push
pop
out
sub
jl
call
jl
stc
ins
lods
mov
push
dec
js
lock
fwait
dec
xchg
and
div
add
push
in
pop
retf
mov
and
ins
sbb
into
push
(bad)
push
pop
mul
mov
or
mov
pop
dec
test
mov
adc
or
mov
outs
fist
jnp
inc
sbb
sbb
cmp
fs
lock
pop
fwait
es
sbb
clc
xor
es
ret
add
adc
retf
jne
adc
pop
push
mov
jmp
adc
push
add
cs
ror
push
cmp
mov
push
cmp
sub
add
inc
(bad)
push
test
add
pop
jb
mov
aas
fstp
adc
call
dec
mov
sub
sub
jnp
pop
adc
or
adc
and
mov
ret
add
aas
mov
jg
rcr
fucomi
add
je
outs
(bad)
fmulp
sub
sbb
mov
pop
and
ds
push
les
cwde
mov
and
inc
mov
(bad)
lods
adc
mov
mov
cmp
or
adc
inc
cld
dec
in
dec
jae
(bad)
or
shl
cmovo
inc
outs
addr16
stc
inc
mov
dec
dec
pop
mov
xor
pop
or
dec
pop
jg
shl
sbb
push
adc
xor
fimul
xchg
push
clc
pop
and
test
push
sbb
or
imul
test
pop
add
ds
pop
or
adc
adc
mov
cmp
inc
adc
imul
pushf
imul
and
mov
jae
push
in
jle
dec
jl
test
add
popf
or
in
ja
clc
xor
inc
ds
js
lea
jle
pop
push
jecxz
dec
jl
cmps
sbb
(bad)
fsub
cmp
mov
pop
ret
jle
rcr
cmp
fst
xor
mov
push
add
ds
adc
fwait
mov
movs
pop
pop
inc
fcomp
fs
push
inc
xor
aaa
push
jge
jmp
fcomp
pop
fsub
leave
mov
je
add
sub
ins
push
mov
sub
fidiv
outs
fwait
add
jge
cmp
call
add
(bad)
jno
xchg
ror
mov
xchg
arpl
adc
std
sbb
fst
sbb
xchg
and
sub
jmp
pop
mov
inc
xor
push
je
xor
mov
out
and
ret
add
not
imul
jbe
xchg
and
fisub
inc
mov
xor
inc
inc
cmp
push
pop
inc
cmp
jns
test
test
(bad)
cli
mov
add
xchg
fidiv
jne
xchg
scas
aad
jle
dec
inc
inc
jg
ins
lods
mov
or
xchg
loopne
(bad)
call
mov
xor
lods
xor
mov
push
mov
sbb
cmps
add
arpl
or
xor
inc
or
fiadd
push
lods
inc
pop
cwde
loopne
xor
test
cmp
daa
cmps
das
and
mov
push
sbb
pop
ss
jne
inc
dec
dec
cmp
pop
sti
mov
pop
push
jmp
xor
mov
mov
and
in
dec
add
test
cld
push
sub
mov
inc
outs
or
test
in
aas
int
adc
daa
pop
sti
mov
gs
jnp
sbb
cli
push
mov
retf
dec
inc
xor
xchg
mov
and
or
sub
fadd
lahf
dec
je
dec
call
in
cmp
fdivr
cwde
sbb
xor
ror
(bad)
bound
xlat
pop
daa
sub
jle
pop
out
inc
rcr
xchg
push
cmp
mov
push
sub
jmp
sbb
aad
add
xchg
les
sbb
shl
jne
cmp
scas
push
in
jae
pop
pusha
mov
cli
push
or
add
gs
jne
xchg
sub
mov
fcomip
pop
popa
aam
sbb
cmp
es
pusha
sbb
test
and
adc
push
mov
xchg
or
or
push
xchg
push
ret
push
shl
jns
(bad)
sub
popa
sub
not
mov
jnp
gs
inc
mov
and
cmps
popa
leave
into
adc
jnp
mov
leave
xor
out
pop
daa
xor
xchg
das
and
les
add
xchg
(bad)
push
jno
pop
push
inc
and
rcl
inc
push
pop
ficomp
ret
and
inc
sub
mov
dec
pop
fdivr
ret
stc
ror
int
pushf
rol
inc
outs
cmc
push
jmp
jl
or
pusha
adc
data16
cmp
jbe
leave
push
nop
movs
add
jmp
adc
js
push
xchg
pop
jae
cmp
push
mov
mov
xor
dec
call
sbb
add
retf
add
bound
loop
jnp
and
or
adc
dec
xor
stos
mov
adc
add
add
mov
retf
pop
inc
mov
pop
je
or
iret
push
adc
pop
jb
arpl
jns
and
xchg
pop
inc
dec
sub
fild
cwde
pop
add
mov
popa
mov
daa
pop
cmp
or
add
lds
sbb
xlat
and
repnz
jnp
push
(bad)
call
mov
loopne
sbb
or
push
into
test
fmul
ds
pop
pushf
sbb
sub
add
mov
inc
push
aad
fild
jo
sahf
test
in
cdq
and
lahf
or
(bad)
adc
pop
cmp
add
jg
mov
and
mov
and
add
sbb
cmp
dec
fsubr
inc
movs
dec
and
adc
add
push
and
mov
add
pop
out
mov
inc
push
lds
cmp
dec
xchg
and
lods
je
jae
mov
out
inc
(bad)
int
pop
add
sti
mov
adc
xchg
sahf
and
jnp
mov
push
push
les
sbb
inc
pop
in
into
je
popf
aas
sbb
imul
sar
dec
jae
adc
xchg
or
call
stos
and
jnp
inc
scas
inc
pop
xor
jnp
in
or
xor
pop
(bad)
sub
aad
add
test
popf
lock
jp
jg
fist
in
mov
pop
adc
mov
sbb
fs
dec
push
loopne
jno
inc
in
dec
push
scas
jmp
cmc
push
ror
scas
pop
mov
or
inc
movs
push
dec
inc
adc
and
push
pop
or
mov
push
dec
rcr
push
push
or
fwait
jno
mov
ficom
ja
aas
adc
outs
xor
icebp
movs
push
mov
push
adc
cmp
lds
dec
sbb
add
and
push
xor
rcl
in
dec
ds
mov
jmp
dec
inc
push
jno
xchg
sub
xor
jecxz
adc
jno
movs
mov
pop
adc
pop
jge
mov
pop
jle
add
push
stos
mov
outs
dec
jae
je
jne
(bad)
int3
out
dec
sub
push
jge
and
push
jg
cmp
sub
and
sbb
mov
cbw
int
and
pop
pop
push
sub
movs
ficomp
mov
daa
and
(bad)
push
je
hlt
adc
nop
inc
adc
or
cld
adc
jb
fild
fs
push
add
std
push
pop
pop
mov
stc
mov
sbb
pop
mov
push
add
sbb
clc
pop
mov
mov
mov
mov
add
or
mov
inc
aam
push
aaa
cli
jge
push
inc
cdq
dec
jb
adc
and
call
(bad)
addr16
dec
ins
ins
inc
sbb
mov
jge
jmp
pop
sahf
adc
sbb
mov
icebp
mov
cmp
movs
jle
js
dec
fild
lea
pop
or
je
test
or
dec
pop
ror
dec
sbb
(bad)
or
push
pusha
bound
nop
and
adc
adc
mov
pop
inc
inc
jne
xor
or
mov
mov
pop
into
jne
inc
fcomp
inc
sbb
xchg
inc
pop
mov
jbe
adc
rol
rcl
ds
loopne
or
lahf
inc
ins
jnp
push
and
push
js
cmps
and
inc
test
(bad)
popf
xor
or
neg
or
mov
pop
sub
cmps
mov
fcom
add
add
cld
mov
loop
jne
xchg
xchg
dec
push
daa
and
cmp
das
sub
mov
mov
mov
sub
fmul
(bad)
shl
push
pop
inc
push
and
rcr
sub
ss
fdiv
cwde
push
movs
mov
es
mov
and
inc
jnp
ins
fcmovnb
dec
add
movs
arpl
inc
add
sub
jno
lea
jg
push
adc
xchg
outs
inc
les
mov
jne
pusha
jne
scas
and
add
pop
inc
cmp
rdtsc
mov
outs
cdq
xchg
sbb
jecxz
cld
sub
push
jb
aad
popa
push
pop
cmc
loop
popf
pop
cs
cdq
mov
stc
les
enter
ins
aad
mov
mov
xchg
repnz
dec
inc
imul
mov
push
xchg
into
pop
pop
mov
adc
and
ins
and
pop
inc
(bad)
pusha
inc
push
lock
or
in
xlat
adc
xchg
pop
xchg
in
mov
out
pop
clc
cmps
repnz
sub
pushf
mov
push
(bad)
daa
cli
jnp
rol
in
ror
push
mov
jno
or
sub
ja
sbb
test
xor
dec
dec
mov
sub
js
add
jmp
lock
int
ja
or
push
mov
leave
daa
je
and
pop
sbb
loop
cmp
xlat
dec
or
sbb
ret
mov
mov
nop
jmp
add
pop
cmp
fwait
les
popa
enter
inc
cmc
inc
push
rcr
sbb
xchg
jmp
sbb
ret
mov
outs
pop
inc
and
inc
into
mov
loope
cmc
pop
adc
cmp
inc
ficomp
mov
jmp
pop
mov
inc
or
add
mov
rcl
inc
adc
add
fs
retf
add
fidivr
in
and
fdivr
push
inc
mov
jg
pop
jnp
and
xbegin
iret
hlt
mov
popa
arpl
mov
aaa
push
mov
push
xor
add
pop
push
push
push
test
enter
inc
pop
mov
cld
js
push
inc
enter
adc
push
ret
call
sub
inc
sub
push
adc
pop
jecxz
stc
sbb
sbb
sub
pop
ror
adc
pop
dec
jecxz
rol
cmp
dec
sbb
ret
xchg
mov
dec
pop
adc
ins
ja
xchg
jno
retf
sahf
fld
clc
in
xor
pop
sbb
mov
push
pop
aaa
dec
dec
xchg
add
mov
inc
into
fs
aad
add
shr
mov
(bad)
mov
add
test
stc
imul
mov
scas
cli
push
dec
dec
push
aas
push
leave
pop
into
mov
mov
fsubr
pop
les
sar
adc
xor
push
xchg
clc
and
sbb
xchg
jg
xor
and
test
adc
push
fstp
sbb
or
dec
and
dec
push
and
xor
out
add
outs
dec
ins
das
out
in
push
cmp
jg
pusha
pop
imul
jp
add
pop
test
push
fist
dec
mov
or
add
out
and
pop
adc
test
shr
inc
adc
inc
or
neg
push
push
sbb
mov
xchg
add
ins
push
add
cmp
dec
add
pop
add
outs
repz
and
int
xchg
hlt
ins
push
in
pop
add
retf
add
pop
fisttp
dec
push
dec
push
dec
mov
and
jl
pop
push
cmp
mov
sbb
jnp
les
add
inc
jne
imul
std
hlt
push
fwait
in
or
and
adc
test
fs
jo
pop
push
in
pop
adc
fist
or
ss
add
call
inc
ror
dec
push
push
inc
add
adc
jmp
sbb
pop
shr
xor
stos
lds
mov
ret
cs
out
int
push
ds
mov
sbb
jl
pop
push
pop
loop
jae
dec
cmp
hlt
pop
dec
pop
out
and
cdq
cmp
jae
ins
dec
fst
sbb
pop
pop
imul
dec
inc
mov
xor
test
push
sbb
push
adc
pop
dec
std
and
sbb
ins
nop
cmp
push
cmp
adc
dec
fadd
div
sbb
je
pop
and
js
test
mov
jge
dec
ds
xchg
sbb
in
adc
push
dec
out
jnp
shl
addr16
add
out
cdq
dec
dec
loop
add
xor
adc
int
sbb
push
xchg
sub
(bad)
push
adc
pop
jno
or
pop
inc
inc
ss
test
cld
dec
or
cmc
mov
aad
call
add
pcmpeqd
add
jbe
or
cmp
pop
add
call
shr
inc
lahf
push
pop
fdivr
shl
inc
dec
cwde
aam
popa
and
retf
outs
int
xor
jecxz
mov
xor
cmps
ss
push
fld
addr16
daa
aaa
fisub
dec
shl
icebp
mov
popa
repnz
xor
mov
les
push
imul
jae
sub
dec
pushf
push
dec
lods
push
jge
dec
daa
xor
push
loopne
inc
into
sbb
xchg
aam
jns
fstp
idiv
pop
dec
not
aaa
jge
mov
adc
jle
jnp
sub
ins
push
jg
test
cmp
push
xchg
push
in
stc
lods
ds
add
int
push
or
js
daa
mov
mov
in
mov
mov
dec
repz
push
xchg
dec
sub
push
ret
cmp
mov
push
fs
ja
jnp
push
div
inc
out
movs
xor
and
mov
sbb
pushf
mov
or
mov
ja
lods
test
mov
xor
ds
push
xchg
jae
sbb
lahf
inc
cld
jne
adc
pop
jl
jge
push
ins
jns
adc
inc
je
jo
fnstcw
fcmovu
xchg
jg
and
mov
ins
xor
test
aam
add
push
or
inc
xor
retf
dec
inc
stos
push
and
pop
pop
mov
fnstenv
arpl
push
daa
gs
and
int3
icebp
aam
dec
pop
add
mov
sub
pop
sti
inc
in
dec
or
cmp
dec
clc
mov
push
cmp
imul
dec
pop
xchg
xchg
scas
ss
mov
sub
imul
inc
fwait
pop
dec
sar
adc
out
or
xchg
cmp
push
popa
(bad)
mov
jbe
jmp
or
popa
xor
dec
add
imul
mov
and
(bad)
call
and
push
push
sub
sbb
fxch
cmp
fmul
sbb
lock
movs
or
push
or
repnz
xchg
es
test
push
pop
enter
xchg
cdq
or
push
cwde
shl
push
push
push
xor
fneni(8087
ss
cdq
std
les
js
and
lods
out
sti
(bad)
in
(bad)
icebp
(bad)
fld
fnstenv
jbe
mov
int
xor
es
and
xchg
sbb
jne
icebp
mov
mov
cli
(bad)
and
xchg
and
or
push
inc
add
xchg
movs
popf
jno
pop
push
pop
xor
sub
lea
xor
xor
ins
cmp
shl
push
adc
fwait
les
jg
or
sahf
jle
inc
cmc
push
ffreep
mov
or
add
xchg
addr16
cdq
jl
out
cld
push
and
cmp
into
mov
push
mov
out
sub
pop
and
add
pop
dec
dec
sbb
cmp
mov
icebp
mov
stos
add
push
dec
ss
cld
mov
mov
jmp
cmps
ror
not
hlt
idiv
mov
and
push
ret
dec
shr
rcr
or
lods
pushf
inc
stos
or
or
ins
dec
sub
add
push
sbb
jmp
dec
adc
inc
pusha
push
push
or
sub
(bad)
mov
and
push
inc
adc
inc
rcr
dec
pop
push
loop
adc
(bad)
shr
xor
xchg
sbb
add
(bad)
ins
int3
sub
aas
lock
dec
(bad)
push
cmp
push
jb
push
mov
push
outs
adc
inc
cmps
mov
inc
pop
and
or
adc
addr16
push
pop
inc
or
repz
pop
xor
jg
pop
dec
and
push
sbb
dec
sbb
and
and
dec
xor
add
in
shr
aas
pop
jno
jo
jns
jo
inc
int3
(bad)
push
dec
std
mov
int
cmp
ret
xchg
and
inc
ss
push
jno
ins
and
je
(bad)
pusha
mov
adc
or
jae
rol
cmp
inc
inc
enter
jge
dec
or
js
cmps
cmps
nop
aad
pop
adc
mov
xchg
xor
pop
dec
adc
dec
gs
and
and
mov
movs
std
inc
mov
push
jbe
jp
pop
in
xor
enter
lods
out
inc
push
retf
push
sbb
cmp
push
jl
add
push
out
jno
iret
xor
adc
jae
cmp
cmp
pop
call
cmc
imul
pop
inc
call
xor
stc
pop
add
in
pusha
xchg
lods
push
retf
pushf
add
mov
stc
popf
mov
jbe
(bad)
cmps
iret
mov
sbb
or
lahf
push
push
jmp
popf
dec
maxps
loopne
jmp
dec
cmp
cmp
pop
mov
dec
pop
lods
pop
cmps
mov
call
mov
inc
inc
cdq
out
stos
cmp
mov
adc
mov
stos
adc
push
adc
fwait
js
adc
push
pop
mov
hlt
and
push
mov
sbb
push
in
dec
mov
dec
out
push
sub
lea
adc
jg
ins
push
cvtps2pi
iret
das
call
xchg
xchg
stos
(bad)
outs
add
(bad)
retf
ss
adc
inc
stos
cmp
push
xlat
dec
pop
or
ficomp
xor
(bad)
test
or
cmp
inc
sub
adc
jmp
mov
(bad)
pop
cmp
cmp
inc
add
pushf
push
cmp
mov
mov
in
mov
ins
add
mov
pop
dec
inc
arpl
ja
mov
push
pop
mov
pop
dec
ins
pop
jmp
add
inc
pop
xor
push
mov
pop
jno
nop
inc
pop
jnp
pop
adc
xchg
dec
inc
aaa
mov
push
add
mov
fwait
pandn
pop
jo
adc
pop
fmul
inc
push
bound
les
stos
in
adc
mov
dec
inc
sbb
adc
rol
aaa
ins
push
sbb
push
fdiv
pop
push
es
outs
dec
mov
dec
dec
les
jo
jo
add
dec
retf
leave
je
pop
inc
or
dec
or
jne
sbb
mov
std
sub
jl
xor
push
xor
ja
lods
stos
pop
stc
and
cmp
add
lods
sbb
(bad)
or
cmps
adc
jnp
mov
jno
out
je
ins
jb
adc
push
xchg
sti
int
xor
mov
adc
outs
jns
add
and
push
push
push
addr16
jns
dec
out
fisttp
les
add
ja
(bad)
mov
push
mov
sbb
xor
sub
push
cmp
xchg
fs
ins
push
inc
data16
jns
mov
dec
addr16
jae
inc
push
jns
pusha
or
(bad)
pop
xor
les
(bad)
or
out
adc
ins
inc
and
retf
lock
mov
and
inc
push
nop
lock
loope
jo
pop
lds
std
loopne
neg
and
add
(bad)
dec
(bad)
adc
fldcw
js
or
adc
iret
and
mov
fisubr
fsubr
cld
or
inc
push
pop
inc
xor
dec
arpl
add
shl
pop
or
imul
dec
aam
pop
jo
leave
push
inc
inc
inc
jns
pop
pop
push
push
pushf
adc
push
pushf
sbb
pushf
adc
add
push
jns
jbe
push
popf
add
jo
inc
imul
imul
arpl
imul
imul
addr16
dec
outs
push
jp
dec
addr16
jb
fs
xor
xor
push
xor
add
daa
bound
dec
popf
push
enter
mov
sti
mov
or
pop
pop
sbb
repz
leave
outs
fild
add
add
adc
xchg
mov
pop
pop
dec
add
inc
sub
lods
dec
hlt
mov
sub
movups
in
jb
and
pusha
or
adc
popa
adc
or
(bad)
loopne
pop
jnp
sub
and
lock
mov
cmp
sbb
inc
lds
cmp
fild
jnp
call
fucomi
lahf
push
aaa
or
push
or
xchg
mov
pop
stos
jb
xor
mov
dec
mov
jo
inc
leave
or
inc
pop
xor
cmp
popf
add
inc
push
cmp
adc
push
pop
adc
inc
repnz
test
jo
data16
pop
pop
fdivr
stc
and
es
push
jo
add
add
daa
sub
or
pop
sbb
or
xchg
outs
push
pop
add
adc
repz
jecxz
inc
jbe
push
rcl
sbb
cmps
jecxz
fist
out
inc
int
add
ds
pop
jmp
jno
jl
sbb
ror
pop
scas
and
lock
aam
push
xor
outs
jne
jnp
into
sub
push
xor
dec
sbb
mov
aaa
or
loopne
jg
adc
adc
test
fsubr
dec
movs
mov
jecxz
add
(bad)
mov
retf
stos
sub
mov
mov
sub
and
ins
add
sbb
repz
sub
cmp
mov
pop
stos
jns
and
or
cdq
dec
push
push
int3
cmps
sbb
add
push
or
out
test
cmp
nop
lods
es
mov
int
jg
ss
xlat
push
push
sub
or
ins
in
pop
dec
jle
sub
stc
call
in
aam
mov
dec
jne
push
jmp
(bad)
jmp
jl
mov
sub
pop
add
adc
or
imul
sbb
inc
mov
in
mov
in
mov
add
mov
in
mov
in
(bad)
(bad)
stos
mov
(bad)
clc
stos
out
cli
dec
add
call
cmp
mov
sti
(bad)
cld
stos
dec
cmp
cdq
mov
in
push
pop
mov
xor
mov
test
dec
mov
fdiv
pop
dec
scas
pop
push
push
push
inc
inc
xchg
jne
adc
mov
pop
push
mov
push
mul
std
cli
fcomi
or
clc
pop
inc
aas
sbb
sbb
and
mov
pop
icebp
push
add
push
imul
in
push
dec
pandn
mov
dec
cs
cmc
push
lods
and
mov
lods
push
sub
out
and
js
sub
add
jno
xor
enter
jnp
push
cld
add
repnz
(bad)
test
pop
pop
xor
jbe
dec
jno
add
pop
mov
iret
pushf
js
or
ins
mov
cdq
pusha
xchg
in
stos
ret
mov
stos
out
push
nop
and
out
jb
sti
inc
ja
xor
mov
arpl
inc
fmul
push
rcl
leave
inc
xor
sub
mov
loopne
dec
rol
inc
call
push
add
lea
shl
pop
loope
mov
popa
in
add
std
push
addr16
loop
out
jl
add
outs
push
cmp
nop
or
add
push
adc
inc
push
out
std
sbb
add
pop
inc
cmp
mov
add
pop
push
adc
lock
in
push
lahf
push
push
out
mov
dec
mov
mov
sub
out
imul
mov
lock
sub
push
js
dec
jnp
push
pop
push
jo
xor
adc
pop
push
jns
in
and
dec
dec
jbe
xor
push
out
sub
cmps
aad
push
lock
mov
popf
push
cmp
test
inc
bnd
push
or
push
adc
fcomp
movaps
or
fsub
jnp
dec
inc
cdq
loopne
mov
icebp
call
cmps
in
loop
(bad)
inc
mov
pop
retf
pop
je
jo
adc
call
ja
adc
bound
adc
fiadd
inc
jno
mov
fwait
dec
push
icebp
fstp
adc
leave
imul
mov
xchg
ffreep
jae
repz
sbb
arpl
cmp
adc
dec
jl
add
pop
add
inc
mov
and
pop
neg
mov
jbe
push
jge
aad
aad
and
jo
bound
lods
ins
push
mov
imul
inc
cmc
mov
cmp
pushf
add
pop
iret
jge
fs
hlt
adc
inc
mov
inc
rol
sbb
pop
adc
pop
cmp
setno
aaa
xchg
fimul
xchg
mov
pop
mov
call
dec
stos
pop
ins
fsub
xor
es
dec
cmp
jno
inc
push
arpl
call
jne
and
mov
js
je
fsubr
mov
adc
js
sub
aam
aas
push
sub
cmc
sbb
sbb
push
ret
dec
sub
cmovge
jl
lea
add
push
xchg
in
stc
ins
shld
jmp
mov
dec
cmp
jp
(bad)
or
mov
push
stos
pop
xchg
fcom
mov
add
hlt
pop
fiadd
pusha
mov
inc
pushf
dec
jp
leave
add
lds
(bad)
jae
and
fst
lds
div
jb
cwde
and
mov
js
addr16
in
push
push
stos
stc
adc
jp
(bad)
xchg
es
adc
inc
pop
mov
xlat
bound
xchg
pop
add
loopne
mov
mov
adc
push
and
and
add
aad
add
pop
adc
fadd
adc
mov
mov
pop
xchg
add
mov
push
add
fmul
mov
sub
mov
fnsave
or
dec
xor
pop
mov
pop
cmp
mov
sbb
ret
(bad)
(bad)
nop
scas
fst
not
pop
add
jns
or
add
pushf
or
cmp
movs
test
cwde
inc
push
mov
mov
mov
and
or
push
mov
pop
inc
inc
jbe
out
and
iret
inc
(bad)
clc
push
and
xor
mov
out
inc
inc
neg
xor
aaa
(bad)
pop
(bad)
ficom
lods
test
movs
adc
mov
xchg
rol
or
iret
frstor
jb
scas
int3
test
mov
nop
daa
ror
sub
xchg
push
sahf
aad
add
push
xor
cwde
sbb
inc
push
inc
adc
mov
dec
adc
das
sub
mov
jnp
std
mov
repnz
sub
add
aas
outs
and
or
inc
aam
inc
inc
push
adc
xor
sbb
pop
add
push
aam
imul
cs
mov
cdq
std
or
test
add
pop
adc
out
in
push
(bad)
push
pusha
dec
mov
pop
pop
mov
xchg
xchg
mov
mov
push
popa
in
push
fimul
mov
leave
mov
xchg
loopne
fs
add
push
into
frstor
jecxz
cs
dec
bnd
mov
inc
je
pop
and
iret
sbb
jp
call
jbe
popa
mov
(bad)
xor
pop
stc
sbb
adc
pop
dec
rcl
sbb
jbe
outs
in
inc
push
or
or
mov
jae
into
dec
sub
push
adc
push
add
push
push
fiadd
popa
repnz
pop
repnz
iret
aam
shr
loopne
dec
daa
adc
pop
xchg
or
push
pop
jp
and
je
cwde
jns
scas
arpl
int
push
push
mov
xor
pop
imul
ja
sar
mov
out
xchg
das
dec
dec
push
pop
push
inc
ret
sub
outs
inc
xchg
add
inc
add
mov
cmp
push
inc
dec
dec
and
movs
stos
add
sbb
std
lds
test
fdivr
jg
enter
push
add
test
fdivr
mov
cld
jl
push
push
add
adc
addr16
int
add
sbb
and
pop
fcmovnb
gs
push
out
sar
ret
xor
out
into
faddp
(bad)
int3
jge
pop
inc
(bad)
and
cmc
call
dec
(bad)
sbb
loope
movs
push
outs
lods
test
inc
add
aas
sbb
sub
(bad)
cmc
or
xchg
arpl
add
push
sbb
dec
enter
add
sbb
clc
pop
outs
fdiv
ja
loopne
jmp
inc
jne
adc
inc
jmp
mov
(bad)
das
dec
lock
xor
add
jb
jl
in
loope
add
fst
add
sub
jl
scas
cmp
mov
fst
mov
jmp
ficomp
adc
(bad)
and
dec
add
retf
adc
scas
es
int
das
stos
jecxz
lds
xor
jmp
mov
sub
mov
adc
bound
out
rcl
mov
in
sub
je
les
inc
cmp
cmps
xchg
dec
dec
jns
pop
ror
xchg
(bad)
and
inc
aas
mov
jle
lea
pop
pop
inc
jmp
and
push
and
test
ds
mov
mov
push
dec
mov
push
loopne
stos
pop
and
aas
push
in
iret
js
lea
pop
add
push
cmp
fisttp
fmul
xor
dec
ret
dec
test
add
mov
or
sbb
add
js
or
xchg
xor
retf
or
inc
imul
pop
test
jae
sub
stos
loop
loopne
push
xlat
dec
(bad)
fstp
mov
fisubr
xor
dec
movs
outs
mov
push
aas
or
xor
dec
jno
adc
rcl
push
test
dec
rcr
xor
scas
jb
ficomp
fisubr
jge
xor
retf
movs
fadd
push
cmp
int
mov
pop
pop
xchg
jo
into
int3
popf
aad
repz
je
mov
cmp
clc
repz
xchg
jb
xor
test
or
inc
je
pop
dec
retf
jne
or
or
add
aad
pop
xchg
push
out
gs
sub
push
jae
daa
pop
jecxz
daa
cmp
add
sbb
push
pop
xor
arpl
dec
lods
dec
jae
cmp
inc
pop
xchg
push
pusha
cmp
dec
cli
sbb
mov
sbb
in
hlt
neg
ret
lds
clc
and
push
sar
and
call
or
stos
inc
mov
adc
dec
push
jno
es
push
aam
jns
mov
cmp
das
jle
mov
lock
mov
adc
cs
mov
mov
adc
cwde
sub
and
js
ldmxcsr
cdq
sub
pusha
push
inc
jmp
add
push
dec
dec
or
pop
push
(bad)
repnz
pop
jle
mov
and
add
push
mov
cmp
jge
js
rcr
aas
dec
loopne
fist
add
mov
adc
adc
pop
push
push
addr16
daa
test
cmp
or
dec
loope
imul
daa
xor
pop
fadd
js
test
pop
ret
xchg
retf
es
push
inc
mov
ss
mov
mov
aam
xor
or
(bad)
adc
aaa
dec
sub
inc
stc
(bad)
loop
xlat
(bad)
mov
(bad)
sbb
js
push
sbb
mov
scas
pop
dec
(bad)
lds
mov
mov
psubw
test
push
sub
push
jno
cdq
das
push
ins
shl
(bad)
xor
ins
xchg
jnp
jl
add
int3
sub
cmp
enter
pop
push
or
mov
sub
and
jo
arpl
cmp
aam
pop
fcomp
xor
jnp
into
stos
sub
jb
mov
test
loop
add
jle
and
rcl
inc
mov
cwde
push
push
adc
sub
xchg
jecxz
add
xchg
mov
mov
xchg
push
(bad)
(bad)
or
(bad)
mov
ret
xchg
push
push
cli
push
mov
sub
jmp
mov
dec
aas
dec
cmp
mov
shl
inc
inc
inc
aas
push
in
rol
sub
fmul
mov
inc
add
xchg
arpl
mov
aad
adc
adc
in
pop
inc
mov
mov
not
dec
jmp
nop
icebp
xlat
arpl
adc
int3
push
fwait
add
rol
cmp
sub
jg
mov
inc
rcr
jmp
pop
aad
jns
sbb
cmp
add
inc
sub
xor
cli
cmc
or
mov
test
xchg
or
int3
jecxz
add
outs
sbb
fsub
pop
push
and
clc
pushf
jnp
adc
dec
bound
cdq
cwde
inc
in
sbb
add
nop
or
add
push
test
cdq
dec
sahf
jle
(bad)
jnp
xchg
xchg
fcomp
ds
ret
xor
outs
fist
mov
push
in
push
push
clc
push
test
in
(bad)
adc
cdq
xchg
jne
out
sub
dec
xlat
cmp
pop
lea
mov
push
(bad)
mov
push
xor
inc
ror
int3
in
cmova
push
push
aad
sbb
or
fstp
or
sub
fisttp
sbb
pop
fdiv
pop
cmp
sar
sub
outs
ins
cld
repnz
xchg
fsub
jo
scas
inc
push
cwde
mov
sub
dec
mov
push
sti
pop
int
outs
push
jno
dec
rol
cdq
out
(bad)
and
add
cli
pop
add
je
inc
fisttp
and
nop
ins
rcr
bound
icebp
cmp
pushf
jmp
mov
bound
inc
inc
pop
adc
mov
pop
pop
xchg
stos
(bad)
outs
ficom
inc
cmps
das
fadd
or
or
push
ficomp
cmps
cli
mov
adc
jle
lea
aad
popa
mov
test
ss
sub
popf
leave
pop
fadd
cmp
sub
fidivr
lock
popa
or
pusha
mov
adc
sti
jns
aas
sbb
xchg
and
cmp
pmuludq
(bad)
xor
rcr
arpl
ret
ror
mov
xchg
inc
adc
pusha
sbb
cmp
pop
jecxz
fld
mov
pop
test
jle
in
xor
xor
and
in
add
cmp
sbb
pop
inc
dec
out
out
(bad)
cdq
loope
cmps
dec
hlt
out
jo
cmp
hlt
lea
arpl
xchg
or
js
cli
ins
push
mov
bound
fcom
xor
push
adc
pop
or
xchg
mov
clc
push
jecxz
fwait
inc
test
mov
cmp
jmp
cmp
hlt
push
cmp
jecxz
dec
sub
sbb
mov
pop
imul
cmp
xchg
mov
mov
imul
pop
mov
dec
xchg
ror
xor
hlt
mov
jno
pop
cmc
mov
xchg
jae
pop
mov
test
jmp
dec
lea
out
lock
adc
mov
inc
(bad)
mov
or
stos
cmp
add
ins
dec
inc
xor
clc
ror
movs
aam
xchg
in
adc
adc
jp
movs
nop
aam
mov
add
push
cmp
(bad)
adc
stos
dec
(bad)
iret
push
lock
add
lds
mov
sti
dec
and
movs
push
dec
sbb
add
test
xlat
aaa
stos
mov
mov
icebp
jl
jb
pushf
pop
jo
pop
push
xor
adc
pop
mov
enter
ret
sti
lods
lock
adc
(bad)
and
sub
addr16
ja
pop
pop
adc
fistp
mov
sub
cld
and
lds
ret
push
xchg
mov
movs
cmps
movs
retf
dec
pop
iret
in
and
mov
add
sbb
xchg
pop
jmp
out
shl
or
(bad)
and
lea
sbb
repz
rcr
jne
paddsb
pop
xchg
and
icebp
xor
push
dec
aas
shl
add
shr
mov
fcomp
xor
adc
push
test
in
mov
test
mov
push
mov
neg
mov
mov
push
xor
dec
addr16
xchg
jbe
lods
inc
dec
add
mov
aad
ss
mov
imul
ror
inc
push
add
xlat
out
enter
stos
sbb
es
push
jmp
test
popf
jge
shr
inc
inc
(bad)
(bad)
inc
mov
aad
and
mov
adc
in
enter
es
push
jmp
aam
ret
fucomp
and
inc
cmp
jg
jbe
xchg
in
push
cmp
dec
or
shl
mov
add
inc
xchg
dec
or
jae
clc
inc
push
pushf
movs
sbb
cmps
cmp
daa
shl
pop
mov
jg
dec
outs
pop
push
cmps
jns
adc
loope
test
in
sbb
les
push
mov
sahf
adc
or
retf
pop
sbb
loop
push
adc
ret
mov
popf
rcl
pop
dec
in
push
mov
lea
mov
add
(bad)
mov
jecxz
jbe
pop
mov
jl
or
(bad)
int3
nop
mov
dec
cld
push
inc
xchg
into
sbb
jmp
xor
inc
pop
gs
rol
out
popa
add
xchg
(bad)
mov
lock
movs
mov
or
jmp
dec
sub
push
sbb
inc
xchg
mov
sbb
mov
out
xor
in
fbstp
lock
pop
aam
aam
xor
xchg
js
ror
and
inc
lods
mov
push
popa
mov
repz
fist
(bad)
clc
mov
jae
nop
mov
(bad)
cmp
pop
sub
xchg
push
jge
xchg
cmp
fldcw
push
dec
pop
je
nop
out
out
aaa
adc
xlat
adc
xchg
xlat
adc
push
adc
mov
xor
push
dec
add
jl
dec
ret
cwde
pop
arpl
gs
movs
xchg
pop
inc
mov
adc
jae
mov
inc
fmul
into
add
enter
lds
mov
cmc
add
aad
in
fnstcw
sub
push
cli
pop
loopne
dec
(bad)
adc
mov
jg
adc
jnp
test
loopne
cld
aas
loopne
(bad)
fmul
pop
clc
not
aas
jo
cmp
or
rcl
out
dec
jmp
sbb
pop
and
mov
rol
les
push
dec
xor
and
inc
shl
mov
clc
dec
fdivr
mov
push
push
ins
pop
jne
sub
xor
mov
sbb
xlat
pop
dec
cli
pop
jl
jecxz
push
add
jae
ficom
pop
cli
fild
cmp
xchg
mov
out
pop
xchg
xor
mov
enter
mov
imul
push
jge
jne
or
mov
test
xchg
sub
inc
push
fst
jmp
jae
mov
sbb
mov
(bad)
rcr
inc
mov
imul
push
sub
rcr
push
in
div
ins
sbb
mov
jg
in
fist
rcr
js
movs
cmp
mov
dec
(bad)
or
js
mov
scas
rcl
cmp
(bad)
shr
push
cmp
jle
and
inc
sbb
fs
pop
sbb
cli
pop
dec
push
mov
and
jo
sbb
jae
adc
and
mov
lock
mov
xor
xor
sub
jg
jmp
dec
push
stos
mov
fmul
jmp
aaa
inc
add
nop
cmc
inc
xor
inc
inc
jbe
jmp
cmp
mov
inc
inc
push
leave
xchg
(bad)
or
sbb
inc
fistp
push
push
sub
aam
mov
adc
stos
and
pop
add
or
not
adc
mov
fdiv
outs
(bad)
cmp
js
movs
mov
popa
sbb
pop
sar
jecxz
xor
dec
out
mov
in
and
mov
loop
push
jnp
leave
mov
cmp
jb
add
sbb
popf
(bad)
and
push
gs
jo
inc
in
add
or
retf
and
enter
lods
mov
fiadd
or
jo
stos
pop
bound
inc
xchg
adc
dec
push
xor
lahf
mov
outs
jne
adc
jl
pop
or
call
outs
ins
jns
mov
dec
out
pop
inc
or
sbb
cmp
rcl
pushf
xlat
or
and
dec
neg
enter
or
adc
sbb
addr16
sbb
retw
fsub
xor
pop
xlat
mov
mov
or
adc
push
mov
jmp
leave
fs
mov
or
mov
pop
inc
sbb
out
fwait
dec
dec
ret
inc
in
in
arpl
sbb
mov
xor
pop
outs
inc
enter
xor
and
push
inc
ret
in
nop
and
dec
(bad)
(bad)
xor
cmc
jmp
cli
hlt
inc
mov
xchg
mov
inc
call
popf
pop
retf
ins
inc
pop
and
dec
inc
test
mov
iret
mov
cs
cs
mov
addr16
mov
cmp
sub
jns
inc
dec
mov
cmp
cmp
fist
(bad)
cli
retf
jns
xor
dec
call
xor
fidivr
mov
mov
xchg
arpl
mov
lds
add
int
dec
inc
pop
sahf
mov
mov
imul
push
jo
ins
pop
ret
stc
rcr
add
or
pop
sbb
std
rol
in
push
test
lds
ins
xor
or
push
push
pop
int
add
jns
add
inc
and
es
scas
jo
ror
test
pop
push
(bad)
js
ret
imul
mov
mov
arpl
pop
in
call
jle
xchg
aam
outs
add
fidivr
leave
scas
jo
mov
jno
leave
jg
fdivr
das
(bad)
xchg
mov
cmp
mov
aam
inc
(bad)
sbb
(bad)
cmp
cdq
fdivr
ret
push
mov
or
pop
jns
add
or
push
mov
add
cmps
fild
stos
retf
(bad)
jmp
jns
addr16
and
mov
adc
loop
ins
test
fmul
and
jb
js
je
leave
scas
pop
inc
mov
xor
fst
movs
mov
jp
outs
mov
jo
add
sbb
in
pop
jno
xchg
sahf
mov
out
inc
pop
retf
pop
pop
xchg
(bad)
fucomi
in
cmps
jns
adc
inc
mov
sub
sub
ss
stos
adc
and
mov
mov
cld
fdivr
jge
and
push
mov
stos
mov
push
mov
daa
call
sbb
cmc
(bad)
sbb
dec
imul
imul
fisttp
je
mov
sbb
popa
pop
in
cmovg
rcl
out
push
outs
retf
scas
inc
aad
sbb
mov
inc
jb
sub
(bad)
fcmovnb
fxch
ficom
add
loope
enter
(bad)
pop
pop
inc
inc
mov
sub
push
and
xchg
cmp
loopne
out
adc
xchg
aad
mov
dec
pop
dec
inc
es
ret
xchg
sbb
arpl
inc
cdq
je
dec
push
popa
dec
jo
inc
sbb
inc
popa
xor
xlat
bound
dec
and
cmps
mov
adc
fiadd
sbb
addr16
push
push
push
sbb
inc
fild
dec
pop
mov
dec
fbld
in
fdivr
jns
xor
mov
call
fadd
mov
xchg
inc
sbb
xchg
aam
ds
(bad)
shr
cwde
xor
jo
jle
or
dec
add
pop
scas
cs
pop
pop
hlt
mov
adc
mov
daa
push
loope
mov
iret
pop
jb
dec
lock
mov
fadd
pop
mov
add
adc
iret
pop
push
jo
div
cmps
rcl
cmp
out
lahf
out
pop
imul
add
push
push
lods
in
mov
or
lock
xchg
rcl
jo
sub
pop
push
add
sbb
sbb
or
cmps
sub
dec
ins
ja
clc
fcom
or
iret
pop
mov
jbe
les
dec
mov
je
jl
push
mov
pop
test
in
es
mov
adc
adc
add
sub
or
cmps
jmp
(bad)
mov
xor
mov
inc
and
sub
xchg
mov
xchg
inc
and
das
pop
mov
sbb
xchg
cdq
popa
add
not
je
ja
push
movs
jns
(bad)
cdq
mov
inc
sbb
iret
inc
or
sbb
jo
adc
retf
mov
xor
mov
inc
ss
sub
add
inc
into
hlt
aaa
push
mov
and
mov
add
mov
lds
out
cmps
push
mov
pop
lock
cli
loopne
ins
mov
xchg
add
sbb
cmp
fsubr
shl
cld
push
pop
(bad)
or
push
js
lods
push
lods
push
mov
fstp
jle
es
movs
fstp
jno
pop
push
mov
cmc
push
push
pop
mov
in
pop
or
and
aam
mov
pop
fs
xlat
pop
leave
mov
nop
inc
test
mov
es
inc
outs
push
pop
mov
rcr
addr16
push
mov
pop
pop
xor
ret
adc
mov
sar
sub
xchg
mov
adc
cmp
fldcw
(bad)
(bad)
popw
(bad)
fdiv
ja
push
jl
dec
lds
out
ins
xchg
les
push
dec
(bad)
(bad)
push
sub
aas
cs
pop
ftst
pop
push
outs
cmc
movs
and
or
add
dec
icebp
inc
jo
inc
std
or
xlat
mov
push
xor
icebp
adc
xor
mov
jbe
cmp
pop
mov
icebp
enter
cmp
out
xchg
(bad)
mov
arpl
sar
jp
jecxz
xchg
and
add
adc
mov
push
jb
and
(bad)
dec
aam
sbb
and
xlat
es
rol
mov
add
call
inc
push
add
mov
ins
jl
xchg
push
xchg
(bad)
and
out
pop
sub
add
pop
push
jne
mov
mov
dec
pop
inc
cli
fldlg2
add
or
pop
pop
aam
daa
mov
jmp
or
repz
stos
popf
test
jp
sub
jo
test
adc
out
sbb
pop
mov
or
push
ins
inc
xor
pop
jmp
loop
mov
adc
out
pop
es
inc
xor
push
jb
adc
or
xor
mov
jg
mov
xor
inc
xor
div
jno
int3
aaa
add
or
push
mov
aam
addr16
mov
pop
pop
rcr
jmp
rol
inc
or
push
jle
clc
lds
pop
imul
xor
pusha
sub
push
fnstcw
dec
sbb
(bad)
gs
loope
add
push
int3
(bad)
jne
inc
imul
adc
popf
hlt
ja
push
adc
aas
popf
rcl
push
mov
add
push
xchg
popa
or
lds
xchg
sti
(bad)
adc
adc
xor
(bad)
(bad)
and
shl
or
xor
xchg
enter
mov
ja
sbb
out
cmp
or
push
jb
push
pop
dec
pop
sub
loop
shr
or
sbb
or
and
aas
or
ret
repz
fmul
ret
mov
dec
sbb
pop
aaa
mov
pusha
(bad)
adc
aas
in
xor
push
mov
test
fs
js
shl
enter
adc
nop
xor
inc
adc
push
xchg
pop
jb
mov
enter
pop
jmp
rcpps
inc
sar
or
dec
inc
mov
push
push
sbb
dec
pop
ror
fs
push
xor
stos
lods
in
dec
ror
inc
push
clc
inc
verr
mov
call
sbb
push
out
or
clc
pop
push
cmp
inc
add
xor
ins
mov
pop
lods
retf
psubusb
rol
fldenv
outs
retf
pop
imul
call
call
pop
jnp
(bad)
adc
fadd
push
ja
push
mov
das
xchg
xor
lods
xchg
retf
sub
(bad)
jmp
fdivp
jg
leave
pop
mov
and
sahf
lock
sub
cmp
push
and
jl
or
mov
ror
push
ja
sbb
arpl
and
sbb
and
or
xchg
mov
jl
ins
outs
mov
dec
(bad)
es
repnz
cs
out
and
push
or
adc
xchg
add
js
rol
jne
push
or
dec
ja
pop
popa
ds
shl
mov
hlt
jns
sub
les
stc
pop
dec
ror
fld
mov
push
sbb
lods
sahf
fimul
add
or
pop
pop
pusha
bound
imul
push
cmp
jg
push
fist
sub
shr
sbb
nop
fstp
jae
push
inc
xchg
jecxz
inc
std
aam
push
jmp
and
adc
dec
cmp
ja
jns
pusha
push
push
pop
int
add
pop
adc
inc
jae
jge
add
jns
dec
xchg
in
out
or
pushf
cmp
and
pop
or
leave
shr
dec
xlat
mov
shl
or
std
imul
push
div
dec
mov
clc
std
std
(bad)
jmp
(bad)
xor
inc
jl
or
aam
inc
ficomp
sub
ja
retf
jmp
dec
jns
xor
lea
adc
lods
push
bswap
jecxz
mov
sbb
xchg
inc
enter
xchg
aaa
loope
shr
test
jmp
pop
pop
aaa
std
adc
jge
leave
jne
inc
dec
mov
add
or
push
and
push
push
(bad)
sbb
and
xchg
js
cmp
xor
inc
js
mov
int3
shl
xchg
dec
jl
mov
stc
dec
out
add
aam
bound
jbe
cmp
push
add
dec
dec
mov
pop
push
add
sti
fwait
mov
stos
jne
adc
add
mov
mov
leave
outs
fstp
add
pop
fmul
mov
jne
cmc
push
jno
cmp
jp
in
js
idiv
mov
push
adc
pusha
push
dec
jmp
mov
inc
int3
outs
imul
inc
jnp
pop
mov
out
add
icebp
inc
or
add
push
dec
sbb
push
pop
out
mov
sbb
ror
add
movq
sbb
add
jb
push
xchg
call
adc
mov
mov
push
add
sub
or
test
ins
inc
or
jns
push
adc
dec
ins
add
bound
push
aas
inc
ret
rol
outs
jp
pop
adc
add
push
test
push
add
pop
call
mov
xchg
sub
fimul
xchg
ins
iret
mov
adc
in
aaa
jno
int
cmp
push
adc
dec
mov
sub
jae
inc
or
call
stc
mov
xchg
adc
push
clc
imul
popf
xor
cmps
push
jnp
loopne
dec
sbb
repz
or
push
mov
mov
test
sbb
xchg
in
outs
dec
outs
test
and
in
dec
and
aaa
mov
in
(bad)
adc
enter
push
js
or
xlat
js
sti
pop
out
jmp
dec
adc
jmp
xor
out
jo
loop
pop
icebp
add
outs
mov
retf
and
and
in
mov
sbb
cmp
(bad)
adc
pop
pop
and
push
add
push
adc
sbb
mov
or
ds
add
or
aaa
mov
aam
or
jle
(bad)
into
dec
dec
mov
xchg
mov
xlat
mov
inc
dec
adc
pushf
or
jo
lods
les
aad
mov
add
pop
or
adc
xor
jecxz
sbb
and
imul
lahf
fidiv
clc
(bad)
cmp
int
cmp
test
sub
inc
pop
ja
out
test
pop
mov
jle
fstp
sub
and
inc
inc
jbe
jmp
sbb
pcmpeqw
leave
lods
xor
(bad)
jmp
fs
adc
add
out
sbb
sbb
popf
pop
dec
mov
lock
xor
push
mov
push
cmp
sbb
cmp
pop
push
sub
push
add
rcl
or
pop
hlt
inc
pop
ret
or
xor
and
lea
aas
pop
jp
xchg
rcl
fsubp
or
adc
push
clc
pop
and
xchg
and
outs
jne
fcom
cmps
nop
jg
out
dec
out
xchg
sbb
outs
fs
xchg
dec
dec
adc
cs
pop
sbb
jo
loop
rol
mov
cmp
xchg
popf
mov
xor
pop
in
mov
stos
fs
sbb
sub
sub
leave
stos
push
aam
test
jb
int3
ja
stc
push
loop
push
ins
les
leave
pop
fiadd
call
add
mov
sar
cdq
aad
pop
(bad)
fstp
mov
xor
retf
icebp
jle
ins
sub
out
sar
ins
push
sti
dec
test
jle
aad
push
pushf
push
and
and
stos
xor
cwde
push
lea
sbb
dec
lock
in
movs
xor
xor
stc
pop
pop
mov
loopne
add
push
scas
or
mov
pop
mov
ins
xlat
mov
jo
ins
je
pop
sbb
push
test
je
clc
icebp
and
jne
push
imul
in
xlat
fdivr
xor
fild
pop
call
shr
mov
mov
inc
lods
pop
out
cmp
mov
cmps
popa
xchg
bound
lock
loopne
imul
add
scas
xchg
sub
outs
mov
sahf
push
(bad)
ins
(bad)
pop
js
mov
test
push
inc
adc
popf
shr
push
and
dec
ins
in
cmp
xchg
fs
mov
push
dec
lea
mov
or
pop
jbe
xchg
mov
(bad)
xchg
push
or
ja
nop
add
push
lods
push
setb
aad
push
sbb
mov
movs
outs
in
mov
mov
xchg
xor
mov
mov
sbb
sub
fptan
push
mov
dec
sbb
arpl
ins
into
sub
ret
jae
les
outs
xor
outs
pop
cld
add
push
mov
ja
jne
push
push
and
outs
je
mov
out
jne
(bad)
(bad)
maxps
jb
and
nop
push
call
xor
adc
outs
push
mov
stos
in
hlt
shr
jge
retf
pop
int
mov
or
and
clc
(bad)
shl
mov
xor
dec
jmp
add
mov
pushf
fldenv
sar
fcmovne
je
jo
dec
lock
pop
and
das
faddp
xchg
mov
xor
sbb
inc
push
inc
xchg
add
add
or
push
sbb
mov
into
cmps
xor
stc
xlat
xor
call
pop
mov
imul
sbb
mov
outs
inc
mov
cdq
push
imul
mov
repnz
inc
push
jnp
dec
out
or
add
or
mov
adc
mov
push
dec
and
pop
add
ins
movs
pop
and
dec
sbb
jae
iret
int3
sahf
push
pop
or
push
mov
mov
das
dec
jg
push
mov
xchg
mov
push
add
push
pop
mov
pop
or
and
cmp
ficom
lds
(bad)
jbe
call
mov
jne
pop
and
imul
popf
(bad)
jmp
dec
dec
call
add
enter
aaa
cli
fs
std
rol
pusha
int
push
mov
test
shr
neg
fs
push
dec
call
and
into
aaa
and
pop
sahf
jmp
popa
(bad)
cmp
adc
les
xor
cs
inc
stos
cld
je
dec
popa
sub
dec
pop
fwait
mov
outs
xor
push
das
push
lods
push
push
in
bound
xor
fwait
xchg
sbb
outs
sbb
pushf
sti
shl
leave
dec
push
inc
in
sbb
outs
add
pop
sbb
pusha
sub
inc
xor
call
(bad)
hlt
or
mov
jbe
in
inc
pop
push
fdiv
(bad)
movs
nop
xchg
pop
jnp
mov
or
xlat
mov
int3
sbb
les
and
sahf
adc
rcl
or
dec
lahf
adc
cli
pop
fist
cmps
push
sub
jle
add
dec
jp
add
and
fld
fld
scas
jo
push
mov
and
cmp
loop
es
inc
dec
sub
xchg
fstp
ins
mov
adc
loopne
js
cmp
pop
inc
sbb
sar
rcr
jl
test
and
mov
xchg
sbb
sbb
nop
jno
outs
dec
push
test
aas
add
daa
fs
popa
add
cdq
enter
jae
in
lahf
fld
daa
jns
xlat
aam
dec
aam
mov
or
sub
add
or
and
pop
add
jne
fcom
inc
mov
xor
imul
sub
pop
dec
sub
div
mov
ins
xor
mov
dec
dec
ds
and
outs
xlat
jmp
dec
jg
and
add
push
bound
pop
inc
sbb
jbe
and
loope
inc
loopne
mov
xor
mov
loop
shr
add
daa
into
or
and
dec
movs
jle
and
test
sbb
icebp
sbb
outs
test
das
pop
and
or
mov
and
rol
dec
push
or
xor
mov
adc
pop
push
clc
jmp
mov
test
lods
pop
ficomp
mov
inc
adc
jecxz
nop
inc
aaa
popa
mov
inc
jnp
mov
push
mov
add
pop
pop
out
fprem1
mov
add
dec
pop
adc
or
pop
cmp
add
outs
inc
movs
push
pop
dec
push
push
dec
cs
mov
lar
(bad)
pop
pop
ja
pop
dec
jae
push
sub
pop
cdq
fadd
pop
test
movs
retf
pop
dec
xor
inc
loop
inc
js
xchg
jo
ror
inc
sbb
sti
adc
cmp
out
adc
retf
shl
add
inc
mov
push
jns
xor
pop
fild
or
xchg
mov
repnz
dec
loopne
imul
call
aaa
cwde
adc
lock
inc
cmps
xlat
shr
xor
jne
inc
jg
psubw
cmc
lds
mov
leave
inc
xchg
inc
rol
nop
in
pop
shr
add
or
push
jl
inc
pushf
in
push
popa
aaa
add
lds
aad
adc
push
dec
jbe
push
adc
sub
jg
mov
das
lods
rol
sbb
add
pand
push
push
(bad)
rol
shl
mov
fcmove
push
push
retf
pop
cmp
movs
mov
mov
arpl
pop
push
xor
fist
mov
jno
outs
nop
or
or
loopne
jg
call
ror
ror
sub
sbb
xchg
and
addr16
jbe
dec
dec
xor
in
sbb
(bad)
add
or
adc
push
aad
inc
lock
mov
clc
inc
inc
adc
rcl
jae
pop
mov
lods
cmp
scas
aam
pop
(bad)
fwait
imul
pop
aad
cmp
pop
ds
add
pop
dec
fs
push
mov
div
popa
xor
repz
dec
or
pop
jg
dec
pop
adc
mov
fisttp
mov
imul
aad
jmp
stos
fnsave
xchg
ret
je
mov
push
sub
fidiv
xchg
sub
push
je
add
sbb
mov
enter
shl
mov
arpl
mov
or
fisub
pushf
and
lods
imul
bound
ss
inc
mov
outs
retf
inc
enter
pop
stc
(bad)
jge
sar
mov
dec
mov
ins
xchg
in
js
mov
dec
loopne
cmp
xor
loopne
dec
jmp
mov
dec
adc
mov
xchg
je
mov
push
mov
scas
imul
inc
pop
scas
sbb
xchg
push
sbb
add
addr16
inc
mov
pop
sub
adc
mov
repnz
inc
rcl
bswap
jne
adc
(bad)
jle
fild
inc
mov
imul
mov
iret
(bad)
add
push
lods
std
sbb
pop
ss
adc
adc
dec
adc
pop
adc
sbb
iret
pushf
push
pop
jge
(bad)
aam
dec
push
pop
push
sbb
inc
hlt
imul
mov
in
dec
mov
out
in
fldenv
add
adc
mov
jg
in
push
popf
add
or
push
icebp
add
add
push
popf
pop
inc
daa
adc
ins
dec
(bad)
mov
dec
add
dec
and
addr16
ds
pop
push
xor
xchg
inc
cmp
jnp
outs
(bad)
lock
jp
dec
ret
test
inc
mov
lods
ret
inc
add
out
mov
in
adc
into
inc
adc
sbb
out
add
push
out
sub
mov
pop
mov
aam
cmps
cmc
pop
mov
loop
or
jge
jbe
loop
pop
mov
neg
(bad)
mov
inc
push
adc
xor
dec
adc
adc
inc
fidiv
mov
jne
push
cmp
pop
fidiv
mov
mov
gs
pop
es
lock
out
sub
mov
outs
inc
or
sub
fldenv
and
mov
aad
call
inc
mov
scas
jb
lea
dec
push
and
rcr
inc
add
inc
loope
push
je
inc
inc
dec
push
mov
daa
xchg
cwde
rcl
cmp
xchg
in
outs
push
pcmpgtd
sub
mov
bound
call
(bad)
fisubr
dec
movs
test
inc
sbb
xor
std
adc
dec
arpl
inc
dec
push
lock
push
cwde
je
xchg
aam
sub
cmc
xor
xor
sbb
dec
and
push
jmp
push
icebp
add
std
(bad)
fcom
or
test
push
nop
sbb
lock
push
scas
lods
cmp
jo
mov
movs
inc
dec
or
mov
pop
mov
retf
and
dec
aad
mov
in
ret
test
ss
add
pop
adc
cmc
js
mov
movs
mov
add
cmp
push
dec
imul
adc
adc
aas
pop
ret
pop
(bad)
cwde
into
inc
sub
sub
or
push
retf
push
dec
and
popa
add
stc
pop
outs
mov
mov
pop
lds
inc
call
nop
in
cmp
adc
dec
pop
dec
mov
jge
jnp
and
and
adc
add
push
bound
in
xor
push
es
xchg
xchg
jge
jne
sub
fist
mov
inc
popf
(bad)
pop
mov
jp
in
dec
mov
popf
add
sub
lahf
pop
mov
leave
cs
mov
pop
inc
fisttp
pushf
add
sbb
daa
sub
adc
pop
rcl
sbb
das
ror
and
jmp
icebp
(bad)
data16
add
rsqrtps
push
not
test
dec
push
and
push
pop
into
inc
mov
mov
adc
pop
movs
je
pop
pushf
add
adc
fisubr
adc
cmps
dec
aas
adc
inc
js
xor
imul
cmp
sbb
in
adc
pop
mov
add
or
out
adc
xchg
jge
add
xor
movs
stos
int3
cmp
les
jbe
xchg
je
add
pop
adc
adc
and
and
into
imul
repnz
outs
push
daa
pusha
push
lahf
dec
out
mov
dec
cmp
std
aam
cmp
adc
fist
call
call
mov
xchg
sbb
xchg
xchg
push
cmps
lock
in
inc
push
movs
daa
int3
sbb
or
nop
pusha
into
jbe
xchg
mov
aad
or
add
mov
push
hlt
clc
fbstp
or
out
nop
pop
gs
pop
neg
fcmovnbe
fldl2e
aam
pop
push
ja
cld
data16
dec
cmps
mov
(bad)
(bad)
mov
xchg
(bad)
(bad)
sbb
in
pop
xchg
pushf
fs
or
pusha
sbb
inc
jmp
daa
(bad)
mov
push
stos
and
in
add
retf
ins
xor
dec
mov
and
adc
dec
cmp
cmp
dec
test
cs
sub
add
mul
add
xchg
xor
out
sbb
push
call
mov
dec
jno
cmp
cmp
xchg
ja
clc
mov
jecxz
pop
test
addr16
ffree
mov
add
push
mov
lea
lods
icebp
jbe
aam
xor
xchg
fadd
xor
test
stos
and
inc
add
mov
push
mov
not
aas
and
mov
daa
sub
push
lahf
mov
sbb
inc
mov
outs
inc
out
or
arpl
push
mov
test
aaa
mov
retf
nop
ror
sbb
mov
sbb
retf
push
inc
inc
dec
out
les
xor
es
and
xor
stos
scas
dec
xlat
cmp
rol
sbb
mov
push
inc
dec
lods
pushf
add
jo
clc
cs
mov
mov
in
imul
in
(bad)
cmp
fsubp
mov
adc
xchg
and
adc
test
outs
ins
push
push
into
ficom
rcr
dec
icebp
pop
jmp
cmps
inc
dec
dec
out
sub
push
repnz
push
jae
push
fisttp
push
or
in
push
leave
xchg
fsubr
in
cmp
lea
adc
xchg
push
mov
push
push
leave
pop
pushf
jae
dec
jge
popa
dec
inc
jmp
popa
sbb
lock
xor
push
adc
jge
pusha
ins
dec
gs
inc
push
jb
popa
jmp
jl
push
cmp
sub
push
ror
hlt
lahf
dec
xchg
enter
jo
bound
shl
fs
aad
push
inc
sar
pop
rol
fcomp
push
fmul
mov
inc
adc
mov
outs
fucom
sub
int
(bad)
jne
(bad)
stos
jb
xchg
or
pop
outs
jns
in
xor
mov
push
rcl
adc
das
fld
fst
leave
arpl
jle
or
push
sbb
aas
cdq
out
add
cmp
addr16
mov
mov
jle
retf
dec
addr16
mov
inc
fnstsw
lods
add
xor
icebp
adc
mov
xchg
bound
jbe
ins
push
jo
cmp
mov
xchg
push
data16
jp
xor
xor
stc
push
pop
pop
push
cmc
adc
jp
sbb
adc
cmp
rol
jb
xor
push
jge
mov
sbb
pop
dec
dec
retf
or
dec
adc
(bad)
mov
jl
fst
jae
sti
ud2
addr16
xchg
das
adc
jmp
inc
fwait
adc
jbe
jl
retf
mov
jge
pop
pop
jle
or
pop
jg
jmp
cmp
lods
push
addr16
rcr
pop
in
mov
adc
ret
pop
in
dec
cmp
inc
rol
add
push
xor
jmp
jp
xor
mov
popa
fmul
pop
xor
addr16
xor
pop
sub
push
dec
adc
push
or
test
mov
xor
enter
inc
jns
je
outs
jge
mov
add
or
inc
aam
or
mov
(bad)
pop
loope
pop
mov
(bad)
adc
ins
ror
inc
pop
pushf
add
sbb
cmp
int3
inc
(bad)
pop
mov
mov
inc
outs
fs
and
shl
adc
jo
pop
mov
pop
enter
inc
push
add
or
dec
mov
fsub
call
imul
push
add
inc
shr
int3
sub
push
mov
imul
and
es
fldcw
sub
(bad)
inc
and
aas
pop
and
push
xor
jne
mov
pop
pop
pop
loop
pop
mov
mov
ucomiss
test
push
jmp
sbb
scas
mov
jle
sar
stos
mov
les
cmc
stos
cmc
(bad)
add
sar
dec
add
lock
paddb
or
js
loop
fs
pop
clc
inc
push
mov
sbb
addr16
mov
xchg
outs
ins
or
mov
push
jp
mov
ret
mov
test
jmp
pop
push
cli
add
push
mov
add
cmp
(bad)
jae
cmc
test
out
inc
(bad)
cmp
push
push
ss
dec
adc
mov
dec
push
jg
or
adc
icebp
fcom
sub
movs
popa
pop
dec
arpl
jae
ja
sbb
dec
xor
cs
mov
or
rol
scas
ss
fld
jecxz
dec
lea
fcmovnbe
lds
test
mov
into
or
ror
sbb
push
add
ret
mov
std
adc
(bad)
xchg
mov
mov
clc
mov
inc
fldenv
sbb
leave
sbb
and
popa
out
pop
in
jns
push
data16
push
leave
adc
mov
movs
sti
test
inc
mov
mov
pushf
pop
or
cs
js
leave
xor
cmp
or
inc
and
je
or
mov
push
dec
ins
pop
pop
or
sub
adc
das
jne
popa
xor
and
jl
loop
xchg
or
pop
je
daa
das
dec
lds
fdiv
lock
or
in
dec
daa
xor
sbb
out
inc
icebp
push
stos
fmul
out
jle
dec
out
pop
imul
push
jne
pop
call
inc
leave
rcr
dec
sub
mov
cmp
xor
add
leave
xor
lock
pop
push
sub
inc
push
rcr
fidiv
xchg
jl
mov
mov
add
stos
sbb
retf
jp
push
imul
adc
jge
jbe
xor
cmp
dec
jp
jo
inc
sar
rcr
(bad)
ror
adc
inc
pop
clc
fnstenv
push
ins
ret
mov
jmp
and
jle
ja
test
or
fs
iret
jno
sbb
or
mov
adc
push
xchg
push
lea
jae
sub
jno
rcl
cmp
cmp
test
sbb
mov
jmp
xchg
stc
push
shl
mov
push
mov
inc
movs
push
mov
mov
push
cmp
inc
aas
add
in
or
jmp
outs
jle
cmp
popa
paddq
(bad)
imul
inc
leave
inc
sbb
xor
adc
enter
cmp
push
lahf
jle
cmp
and
out
pusha
gs
or
adc
mov
dec
mov
lds
enter
hlt
sub
add
or
push
mov
fst
fmul
xchg
outs
jl
cmp
(bad)
popf
loopne
loopne
(bad)
and
jnp
js
jle
pop
push
pop
inc
adc
sbb
enter
push
jp
mov
mov
add
mov
pop
int3
out
xor
cmp
pop
inc
test
cmp
push
sub
inc
cmp
jne
pop
jl
mov
ficomp
add
cmp
and
mov
and
push
and
shr
pop
pusha
dec
cwde
and
outs
arpl
push
mov
movq
push
jl
movs
cmp
push
inc
inc
mov
jge
cmps
and
push
pop
pop
and
lds
inc
in
push
mov
sbb
jbe
mov
lods
mov
mov
pop
xor
fnsave
push
and
inc
call
aad
mov
cwde
pop
lock
dec
jae
cld
xchg
shr
shr
push
sbb
sub
adc
pop
adc
fwait
push
aaa
xor
mov
ja
push
mov
mov
movs
jge
fwait
test
and
lods
xor
loopne
adc
inc
clc
push
fidiv
inc
jmp
sub
add
retf
loope
out
sbb
adc
mov
fsub
push
loopne
mov
pusha
aad
xor
xchg
pop
shr
inc
addr16
ss
pop
ja
mov
dec
add
mov
push
push
cmp
addr16
aad
dec
retf
inc
ins
mov
and
aam
inc
push
push
shr
pop
popf
xchg
push
lea
loop
fsubr
mov
mov
rol
leave
inc
mov
pop
push
adc
push
pop
dec
pop
inc
xor
jl
and
push
das
mov
dec
jmp
sbb
ror
out
outs
aam
js
mov
sbb
and
pop
push
cmp
push
xchg
push
cld
cmps
inc
sub
ins
ret
add
inc
icebp
push
inc
addr16
sub
les
les
push
pop
inc
(bad)
push
sub
inc
sbb
aaa
pop
push
push
cmp
inc
inc
fisttp
jo
dec
pushf
or
pop
mov
cmp
pop
xchg
push
push
cmp
xor
adc
mov
imul
cmpps
outs
and
sbb
pop
jle
add
cmp
pop
xchg
add
les
pop
inc
(bad)
sub
ins
bound
sbb
and
enter
cmp
push
push
(bad)
aad
push
mov
mov
retf
pop
xchg
sbb
lods
(bad)
test
pop
ja
mov
mov
push
std
xor
xor
inc
sti
jb
pop
or
jnp
je
mov
fld
dec
bound
sti
xchg
pushf
jb
push
pop
sbb
add
(bad)
cmp
sbb
push
xor
cli
sub
fs
xor
dec
ins
jge
sbb
lods
aas
punpcklwd
adc
iret
add
push
fimul
push
push
xchg
xchg
push
and
push
adc
out
push
dec
sbb
sbb
adc
test
sub
xchg
pop
dec
push
stos
jbe
push
stos
push
push
inc
mov
pop
fs
pop
sub
jnp
sbb
(bad)
push
push
add
aaa
add
aaa
push
fistp
sbb
push
int3
cmp
sub
jmp
stos
sub
push
jg
push
xchg
inc
push
jecxz
(bad)
fistp
or
mov
out
(bad)
fadd
pop
inc
push
adc
fst
adc
xchg
or
push
inc
fld1
push
stos
stos
inc
jle
cmp
or
and
aas
das
mov
add
and
sbb
or
dec
or
sbb
(bad)
pop
hlt
xchg
jne
pop
fsubr
and
mov
and
cmc
shl
psubusw
jmp
fs
(bad)
mov
pop
inc
(bad)
pushf
shl
gs
das
(bad)
jmp
jns
dec
(bad)
ficom
and
scas
mov
ja
cli
outs
push
je
pop
xchg
nop
inc
stos
jge
leave
cmp
pusha
and
adc
fimul
aad
bound
inc
xchg
dec
in
or
aam
adc
sub
fwait
pop
sar
adc
dec
adc
dec
add
push
rcr
shl
push
les
and
add
ret
push
or
mov
adc
rcr
rol
fisttp
iret
(bad)
fadd
xchg
and
dec
rcl
into
pop
fidiv
jg
add
mov
jne
pop
cmps
inc
jmp
fwait
xchg
outs
lds
jnp
pop
mov
(bad)
and
pop
scas
test
add
adc
adc
mov
push
or
dec
cmp
or
movs
sbb
or
push
cmp
push
xor
daa
cmp
(bad)
push
lock
pop
enter
mov
dec
dec
mov
stos
lds
in
add
idiv
jne
inc
mov
sbb
or
ins
jns
xlat
jne
dec
ror
jmp
cwde
loop
xor
outs
push
lea
dec
jo
sbb
jmp
pop
pop
jg
stos
repnz
imul
test
fistp
inc
not
lock
xchg
add
and
dec
mov
fsubr
xlat
and
loopne
loop
pop
xor
std
xor
test
gs
rol
loopne
stos
das
inc
sub
jl
retf
and
pop
inc
iret
aaa
dec
scas
adc
mov
imul
aam
inc
lahf
xchg
int3
pusha
dec
stc
cdq
pop
cld
loope
push
sti
pop
dec
mov
sub
push
jmp
outs
mov
es
pop
(bad)
fstp
(bad)
nop
inc
(bad)
pop
(bad)
arpl
push
je
ret
loopne
push
ret
mov
ss
ror
js
out
xor
push
push
pop
inc
dec
sub
sub
jnp
js
js
test
(bad)
ja
aam
in
test
dec
hlt
dec
mov
jae
icebp
xchg
cmp
es
jne
sub
inc
pop
inc
add
and
test
dec
pop
or
inc
mov
loopne
jnp
loope
sbb
sub
popf
pop
xchg
jno
out
stos
inc
jp
imul
cmp
fsubr
rcl
push
push
or
push
push
imul
cmp
mov
cmp
lods
cmp
mov
pop
bswap
hlt
push
dec
aas
cli
out
xor
or
adc
inc
cdq
shl
mov
mov
inc
push
add
push
adc
ins
das
jne
jb
retf
pop
push
enter
jl
push
adc
push
imul
xor
inc
aaa
lods
push
sub
push
push
into
mov
push
cmp
mov
xchg
add
cdq
out
iret
inc
mov
xor
cmp
cmp
sub
xchg
cmps
xchg
leave
imul
(bad)
pop
retf
retf
sub
shl
add
jae
xchg
rol
addr16
push
or
pop
sub
xlat
pusha
ror
jne
fsubr
out
outs
les
lods
cmps
lea
dec
sub
xor
dec
jb
push
pop
test
sbb
jmp
jo
add
lea
call
add
fldcw
js
push
mov
push
je
nop
out
and
push
aaa
or
push
sbb
aam
pop
inc
(bad)
aad
pop
adc
arpl
mov
ins
dec
inc
sub
mov
inc
push
iret
cmp
jbe
loope
add
popf
pop
or
mov
mov
(bad)
dec
dec
mov
retf
inc
sbb
mov
stos
jae
dec
stc
ffree
sub
fsubr
je
in
xlat
int
mov
lds
or
jmp
punpcklwd
push
xchg
dec
aam
fcom
lea
js
push
mov
push
int3
cmc
lea
mov
jecxz
int
je
je
push
or
out
into
or
sbb
inc
or
in
or
jge
movs
mov
jno
cmp
fmulp
or
(bad)
push
imul
dec
and
mov
fsubr
jg
dec
pop
jg
ds
mov
out
out
pop
cmps
icebp
mov
and
jo
(bad)
add
xor
jle
shl
xchg
daa
test
and
loopne
sbb
push
cmp
inc
add
adc
cmc
aas
retf
aad
push
dec
push
pop
adc
retf
imul
mov
and
imul
jmp
inc
nop
jmp
movs
add
sbb
nop
int3
cmp
gs
inc
jmp
dec
and
or
and
sub
cmp
push
or
inc
das
or
pop
sbb
call
ins
aas
xor
je
jnp
ins
daa
or
je
inc
xor
popa
std
jbe
in
push
imul
cmp
adc
jbe
push
psubusb
rcl
shr
add
mov
jae
push
mov
push
lods
repz
add
dec
popa
fs
push
ins
call
cmp
arpl
mov
dec
sar
aaa
lods
or
mov
out
retf
shl
xor
inc
jae
pop
push
sub
popf
add
xor
inc
test
xchg
std
inc
jae
mov
ret
inc
stc
jo
pop
in
movs
add
add
jne
dec
lods
gs
cmps
push
inc
pop
test
pop
push
outs
daa
jb
and
cmp
or
aam
add
cmp
push
stos
(bad)
jne
ret
mov
mov
aas
xchg
pop
mov
ja
xchg
movs
cmp
mov
shl
rcl
and
push
jns
jbe
cmps
mov
cmp
adc
sub
jno
ret
or
or
aam
push
inc
out
retf
lea
adc
sbb
adc
dec
xchg
cdq
jbe
and
inc
sub
xor
repz
in
ds
and
mov
cld
dec
ror
fidivr
repz
retf
out
into
sbb
xor
fisub
and
cs
push
add
add
adc
and
lds
aam
and
scas
push
jle
loope
(bad)
jns
fidivr
mov
call
add
xor
inc
jmp
sub
sahf
fstp
sahf
(bad)
add
ret
test
sbb
sub
sub
adc
ds
scas
ins
fld
mov
push
xchg
mov
add
push
xchg
push
call
xchg
add
into
inc
je
rcl
jnp
xchg
push
ror
out
mov
(bad)
push
mov
in
pop
or
int3
std
push
sub
dec
jbe
mov
push
jbe
ins
(bad)
addr16
rcl
and
sub
daa
dec
fbld
pop
inc
cli
(bad)
pop
push
(bad)
jne
test
ds
jle
mov
idiv
add
sub
stc
rcl
sbb
sahf
and
ret
int3
push
aad
shr
out
aas
aad
xor
(bad)
push
sbb
or
xor
sub
jo
loop
sub
ds
sub
shr
jne
out
sub
outs
cdq
aam
imul
add
jp
jbe
ffreep
inc
pop
xor
or
jae
dec
in
adc
ds
and
(bad)
mov
pushf
xchg
and
mov
lea
mov
mov
xor
pop
pmaxsw
inc
pop
lods
arpl
inc
inc
jae
fwait
mov
imul
inc
pop
repz
or
push
xchg
push
dec
sbb
pop
inc
mov
and
push
lods
pop
add
lods
imul
xchg
lahf
add
loope
xchg
push
ror
inc
or
mov
repz
adc
sbb
cmp
retf
stos
jle
adc
pop
jns
xchg
inc
aam
or
xchg
cmp
in
ret
jmp
loopne
sti
push
jb
jecxz
and
adc
test
add
push
dec
inc
jno
popa
dec
add
add
scas
jg
dec
sbb
add
xor
test
mov
out
mov
sbb
pop
out
push
movs
push
pop
sbb
sbb
dec
push
cs
mov
int
cmps
sbb
mov
pop
pop
mov
(bad)
call
aam
or
mov
push
xor
das
inc
adc
shl
mov
(bad)
jge
ret
clc
adc
sub
mov
dec
js
(bad)
jl
pop
mov
push
push
or
push
xchg
jle
data16
ror
sbb
sahf
fadd
cmp
mov
push
dec
ja
ds
xchg
fsubr
adc
dec
jbe
add
xor
push
mov
adc
ins
adc
push
push
pop
cdq
cmp
test
or
sub
dec
jno
push
adc
ja
enter
jmp
jmp
push
(bad)
and
pop
lods
rcr
sbb
xchg
push
mov
adc
aad
out
inc
pop
mov
jl
push
cmp
jp
xchg
aam
sbb
push
vpminsw
sbb
inc
sbb
and
sub
jnp
ins
push
or
xchg
sbb
or
xchg
pop
or
je
shl
popf
and
imul
mov
popa
xchg
(bad)
jae
lods
mov
cs
jmp
fadd
jecxz
jmp
imul
retf
ja
cli
or
outs
or
xchg
inc
inc
ja
xor
es
add
or
push
int3
and
sbb
jbe
or
inc
xor
jno
jle
pop
(bad)
in
mov
push
mov
inc
pushf
pop
mov
(bad)
or
in
mov
sbb
nop
xchg
cmp
sub
lock
movs
gs
addr16
add
push
xchg
add
xchg
cmp
xchg
pop
mov
fwait
and
adc
les
sub
mov
data16
push
lods
mov
add
sub
dec
xchg
in
xchg
dec
in
sbb
jge
ret
pinsrw
push
and
inc
pcmpeqw
adc
jnp
mov
cmp
sahf
pop
inc
fisttp
and
rcr
call
add
in
sub
rcr
adc
mov
push
inc
lahf
out
pop
add
in
add
fadd
jg
fsubr
dec
xsaves
fs
push
dec
and
test
and
jne
pop
stos
and
add
repnz
jb
rcl
mov
mov
ins
pop
cmc
bound
sbb
mov
add
mov
adc
mov
sub
leave
xchg
test
fnsave
add
std
cmp
mov
jmp
mov
lods
sub
mov
or
aam
mov
pop
in
sub
inc
add
and
jo
adc
fcomp
mov
jmp
add
sub
stos
cmp
(bad)
adc
add
sub
in
pop
pop
fs
push
aaa
inc
cmp
pop
pop
xchg
push
pop
and
adc
and
ss
adc
sar
xor
ins
(bad)
mov
shr
(bad)
clc
fadd
sub
mov
ds
ret
bswap
das
leave
jecxz
daa
sbb
pop
movs
test
add
rcl
loopne
xor
movs
inc
out
pop
ja
pop
push
sahf
add
lock
outs
push
repz
dec
inc
aam
daa
ss
jle
fxtract
cmps
pop
pop
and
sub
adc
and
pop
inc
xchg
aad
xor
mov
push
retf
das
scas
scas
ffree
adc
or
rcl
and
out
xchg
retf
lods
mov
inc
lds
into
adc
mov
mov
pushf
or
adc
dec
mov
add
xchg
or
dec
or
movs
and
adc
jmp
ja
cmps
fidiv
inc
inc
shl
fnsave
xlat
loop
rol
(bad)
and
cli
dec
jns
pop
(bad)
std
mov
hlt
pusha
mov
cmps
jns
into
mov
add
add
dec
inc
loopne
xor
arpl
shl
hlt
pop
pop
aad
mov
jae
movs
ins
adc
jae
test
ins
or
(bad)
call
ins
push
in
xchg
(bad)
mov
loopne
and
(bad)
and
rol
pop
fst
xchg
in
scas
dec
sub
test
stos
shl
pop
or
inc
clc
add
mov
stos
lea
pop
xchg
imul
inc
push
push
xor
enter
mov
mov
js
pop
dec
jb
add
stos
inc
add
push
mov
xor
mov
mov
and
add
jns
mov
and
or
dec
push
sbb
xor
ret
cmp
jge
mov
sbb
test
bound
retf
data16
pop
push
add
dec
cs
mov
inc
or
jo
bound
and
jmp
inc
push
inc
sbb
dec
dec
sbb
inc
add
mov
jle
ss
xchg
sub
dec
in
inc
nop
cld
(bad)
pop
ss
hlt
neg
push
es
rol
sahf
popf
loop
sbb
mov
je
inc
inc
inc
xchg
sbb
add
pop
mov
xchg
test
pop
dec
inc
mov
aam
inc
or
ror
dec
mov
adc
jnp
sub
das
dec
jl
pop
xor
add
lods
fisttp
cwde
dec
js
dec
pop
push
mov
ja
jecxz
mov
aad
test
cwde
dec
cmp
pop
out
out
fadd
jg
sbb
ret
dec
pop
jae
or
or
mov
push
aas
in
test
add
jecxz
pop
sub
jae
inc
outs
push
shl
push
push
outs
mov
mov
adc
sub
mov
ins
repz
lea
js
outs
xchg
pop
sub
dec
je
ins
xchg
or
mov
addr16
xchg
ds
mov
push
fucomi
movs
dec
fwait
push
xlat
imul
add
int
inc
pop
dec
mov
fs
push
push
repnz
add
jg
or
add
test
push
fidiv
or
jle
inc
arpl
mov
sbb
and
lds
sbb
pop
xchg
call
mov
adc
imul
js
jno
inc
ja
push
pushf
pop
xor
xchg
into
pop
mov
std
in
in
or
jnp
out
nop
ficom
mov
movs
xchg
jecxz
mov
mov
nop
xchg
aaa
sbb
add
push
dec
add
mov
ja
lods
clc
xchg
les
jecxz
push
popa
icebp
or
mov
push
daa
adc
and
loopne
call
std
mov
test
dec
inc
mov
dec
fimul
inc
xor
jg
adc
inc
sbb
popa
cmp
out
dec
and
inc
add
and
(bad)
or
and
pop
add
push
or
xor
dec
inc
mov
cmc
icebp
je
dec
xor
jnp
inc
add
push
pop
sbb
jp
add
pop
pop
jo
xlat
or
or
pop
and
jne
lods
add
inc
cdq
iret
push
adc
adc
inc
mov
dec
pop
push
test
retf
push
xor
ret
fcomp
(bad)
dec
cpuid
imul
push
and
lahf
pop
add
(bad)
cmp
test
and
mov
or
test
push
adc
inc
inc
es
push
pop
or
push
adc
sub
mov
and
add
adc
inc
imul
inc
adc
cmp
adc
cmp
movs
pop
push
or
fdiv
dec
bound
ins
cmp
movs
retf
addr16
cld
xor
sbb
push
aaa
jo
jge
imul
mov
out
arpl
push
push
push
mov
push
data16
pop
add
push
push
out
sbb
idiv
aaa
mov
dec
sub
pop
loopne
add
dec
adc
popa
daa
pop
inc
shl
mov
push
xor
xchg
cmp
xlat
pop
add
adc
(bad)
cmp
inc
pop
dec
xor
sbb
inc
and
in
ja
push
ja
(bad)
call
nop
dec
jmp
cmp
pop
mov
inc
(bad)
in
mov
lods
and
sub
loop
iret
sub
sub
shr
sbb
push
aad
xchg
sub
retf
push
pop
into
pop
mov
daa
in
loopne
jg
pop
(bad)
xchg
repz
inc
ret
push
out
jnp
cmp
cwde
inc
shr
add
sub
push
inc
test
sub
dec
inc
or
inc
inc
mov
dec
cmps
inc
add
cmps
pop
sbb
enter
fwait
pop
dec
into
inc
add
rcl
repz
fwait
iret
xor
iret
in
dec
push
enter
xor
xlat
rcl
icebp
cmp
adc
into
and
sub
ret
push
pop
sbb
push
sub
out
ror
xchg
inc
ins
mov
mov
xor
push
cld
mov
add
xchg
mov
adc
mov
add
xchg
xor
scas
push
mov
pop
daa
and
movs
popf
les
push
std
fwait
aas
pop
and
pop
imul
sbb
inc
push
ds
xchg
es
xor
adc
xlat
adc
das
iret
in
jg
popf
jmp
aad
aaa
sub
add
adc
lar
popf
jg
inc
jge
cdq
mov
and
cmp
pop
push
push
fdiv
fstp
push
push
sub
jle
scas
rcr
add
loopne
cdq
pusha
sub
jmp
daa
dec
pop
ja
int
sbb
imul
in
or
add
cmp
ja
push
cmp
add
push
lods
shl
ins
push
cmp
div
adc
ins
push
push
dec
cmp
or
ficomp
sbb
sub
in
add
xchg
dec
sbb
xor
push
mov
adc
dec
dec
shr
(bad)
std
pop
packssdw
xchg
mov
xlat
or
lea
shl
ins
sub
fst
dec
fwait
mov
dec
ret
out
add
pop
inc
in
dec
jno
loope
jo
fldl2e
jne
outs
and
inc
leave
dec
push
sar
dec
push
mov
xchg
pop
or
add
inc
pop
add
rol
sbb
add
mov
add
sub
ins
mov
rol
pop
xchg
dec
xchg
pop
mov
daa
mov
pop
movs
sti
pushf
inc
push
call
ja
pop
pop
add
adc
pop
fstp
pop
clc
cmp
cmc
(bad)
stc
adc
lea
mov
mul
(bad)
or
cld
add
jne
inc
fs
mov
popf
add
add
pop
rol
push
loop
cdq
cmp
test
imul
jnp
aam
push
cmc
pushf
shl
pop
mov
push
(bad)
clc
nop
sti
xchg
and
xor
and
add
fs
cmp
dec
mov
jbe
xor
sub
jo
std
lds
popa
xor
data16
call
daa
push
or
push
mov
shl
or
outs
add
jae
add
hlt
add
and
aad
cs
pop
push
stos
inc
cdq
lahf
push
or
sbb
and
push
or
cmp
inc
xchg
js
push
push
mov
fmul
nop
jns
cmp
hlt
xor
push
daa
pop
inc
mov
in
js
(bad)
in
icebp
popa
push
in
sbb
not
add
or
or
dec
push
push
add
pop
add
stos
xchg
outs
push
push
cwde
dec
dec
push
inc
dec
pop
in
adc
ss
sti
pop
in
popa
stos
stos
and
gs
sti
inc
in
sti
dec
in
sti
imul
out
cmps
stos
mov
jmp
stos
ret
ret
scas
stos
mov
test
mov
stos
stos
mov
loop
stos
jg
stos
mov
xchg
stos
(bad)
call
stos
sub
inc
imul
lahf
lods
xchg
jmp
stos
fwait
add
sub
dec
mov
xor
loop
clc
dec
inc
push
not
in
push
jo
mov
addr16
push
adc
iret
cli
mov
fwait
popa
push
cmp
ds
outs
sub
xchg
mov
cld
inc
es
jne
mov
repz
dec
call
pop
hlt
clc
and
out
and
loopne
movs
out
xchg
aas
mov
(bad)
push
push
or
int3
pushf
pusha
jmp
cmc
out
fadd
stc
inc
xor
mov
mov
add
cmp
call
in
nop
dec
fild
mov
ds
icebp
xchg
shl
popa
jo
mov
aad
add
cmp
imul
add
jns
(bad)
cmp
mov
xor
aam
ret
movs
ret
add
or
push
pop
or
movs
out
mov
addr16
cmp
cmp
and
fwait
dec
mov
push
cmps
or
imul
and
sahf
call
outs
mov
hlt
fbld
pop
lods
stc
dec
mov
add
push
xor
pop
cmps
push
pop
pop
or
sub
lock
(bad)
not
lahf
or
dec
jns
in
xor
ins
lock
adc
add
push
adc
jns
mov
push
adc
adc
into
outs
push
adc
xlat
.byte
