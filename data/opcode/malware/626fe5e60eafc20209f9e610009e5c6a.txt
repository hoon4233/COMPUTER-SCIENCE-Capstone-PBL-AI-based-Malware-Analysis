mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
(bad)
jmp
add
jb
gs
push
jns
je
ins
add
mov
xor
add
inc
outs
jae
inc
push
popa
jb
inc
xor
cs
or
(bad)
mov
push
push
outs
je
sahf
iret
push
stc
cmp
(bad)
jg
aaa
ins
popa
ins
ins
add
scas
xor
cmp
mov
gs
(bad)
(bad)
int3
pop
jnp
xor
das
add
jns
aas
adc
shr
push
int3
fs
call
std
jle
outs
imul
push
sub
out
scas
test
adc
mov
jg
cmp
push
out
loope
imul
inc
pop
ds
into
ror
mov
test
push
jg
mov
cli
outs
fs
jne
add
bnd
mov
jb
outs
arpl
mov
add
jb
mov
push
lahf
jge
mov
int3
das
push
imul
in
or
push
sbb
push
mov
and
adc
outs
outs
addr16
lahf
or
adc
inc
adc
jae
mov
pop
xor
push
or
or
or
or
gs
add
push
push
popa
push
popa
in
(bad)
outs
adc
(bad)
in
push
push
inc
ins
popa
jae
add
add
inc
push
push
lods
clc
or
dec
push
cs
add
adc
mov
call
fs
xor
sbb
push
xchg
fnstenv
add
sbb
xlat
or
jle
outs
mov
jb
popa
arpl
adc
and
or
push
andps
jns
loopne
mov
add
fsub
adc
push
popa
shl
adc
mov
mov
and
es
ins
jo
inc
mov
add
xchg
ja
lock
inc
scas
add
push
mov
dec
inc
(bad)
rcl
pop
jns
pop
imul
sahf
pop
push
cdq
jbe
mov
cld
int3
fs
in
add
mov
sbb
popa
je
jge
jbe
add
in
xor
pop
das
nop
adc
push
xor
iret
sar
push
dec
push
out
or
pusha
push
ja
add
inc
add
(bad)
mov
inc
and
cmp
xchg
push
dec
vmread
cmp
jns
in
pop
cmp
cmp
cmp
jns
leave
repz
xchg
sar
sbb
jae
sbb
xchg
in
retf
xchg
sub
idiv
dec
clc
jmp
stc
call
cli
inc
sbb
inc
cmc
jl
daa
mov
dec
add
jmp
cmc
loope
loop
adc
bound
arpl
inc
adc
inc
sbb
sbb
add
add
stc
or
inc
gs
add
dec
add
jno
cmps
cwde
inc
ds
push
imul
bound
push
fsub
mov
push
(bad)
test
add
dec
jnp
add
cmovae
lds
xor
sub
push
or
mov
inc
lock
and
dec
dec
popa
ins
outs
in
jns
inc
adc
adc
add
not
or
push
adc
into
lea
dec
jno
add
add
push
popa
ret
jno
inc
sbb
push
fisub
ds
mov
push
in
sub
cmp
and
jp
push
pushf
cmp
adc
push
push
outs
ror
sub
mov
inc
add
out
ja
add
or
jns
cmp
jp
in
in
pushf
adc
add
sub
out
mov
je
aas
bound
loopne
add
mov
popa
add
pusha
pop
out
inc
imul
and
mov
imul
mov
push
sahf
mov
xlat
add
mov
imul
in
add
cmp
cli
imul
dec
ss
jmp
or
xchg
push
or
fnstsw
add
pop
and
inc
xchg
adc
add
and
push
inc
sbb
ret
or
jno
sub
aaa
and
test
push
mov
fisttp
push
ins
or
and
and
adc
gs
jecxz
pusha
and
jo
imul
nop
jae
or
inc
(bad)
jbe
jmp
repz
lahf
push
ins
mov
out
daa
loop
jne
mov
sub
push
pop
pusha
ins
inc
outs
jb
inc
gs
sbb
adc
inc
imul
dec
(bad)
into
mov
pop
dec
sbb
or
pop
fnstsw
jnp
(bad)
enter
ret
jne
scas
outs
fs
jb
inc
xor
dec
gs
dec
add
(bad)
or
ret
or
xor
rep
jns
(bad)
sbb
jmp
xchg
shr
inc
(bad)
dec
xchg
xor
shl
push
ins
(bad)
pop
int3
add
jmp
adc
fiadd
pop
cmps
arpl
ins
popf
mov
js
or
and
sbb
fcomp
xor
sbb
sub
enter
inc
add
jo
adc
mov
xchg
add
sub
and
inc
sbb
in
sbb
call
xor
jae
rol
leave
or
aam
pusha
pushf
add
push
jo
sbb
pop
inc
fs
ins
scas
loop
mov
imul
(bad)
mov
sbb
adc
push
and
mov
dec
das
or
jns
shr
nop
es
add
push
inc
popa
lea
cmp
push
imul
push
push
sbb
mov
jb
jns
cmps
in
iret
int3
in
sub
fisubr
aaa
sahf
(bad)
ja
clc
adc
ins
arpl
adc
sbb
imul
xchg
mov
jo
ret
push
add
inc
call
or
iret
adc
sbb
sub
add
stos
ins
xchg
or
retf
adc
or
jno
ins
jns
or
push
jns
pop
mov
cwde
xor
and
add
add
sub
dec
jae
jbe
cmc
add
cmp
jmp
adc
cdq
hlt
or
push
stc
es
adc
xchg
sahf
pop
push
mov
js
nop
in
dec
(bad)
pushf
mov
and
push
data16
loope
xchg
mov
xchg
pop
scas
rcl
xchg
scas
jge
lea
outs
dec
ins
lods
and
jne
movs
cmp
imul
fs
in
mov
mov
jbe
popf
xchg
movs
and
inc
ins
clc
inc
jo
xchg
cdq
sub
or
dec
adc
or
(bad)
nop
in
scas
and
jns
call
push
shl
push
ins
mov
shl
sub
and
fbld
mov
popa
ja
icebp
stc
xchg
fbld
and
push
js
and
push
and
out
inc
outs
mov
and
push
je
mov
lock
das
adc
movs
imul
inc
dec
and
dec
push
movs
test
ss
adc
dec
outs
stos
mov
and
xor
adc
outs
cmp
jns
push
or
add
mov
pop
enter
bound
fs
or
fsub
loopne
(bad)
fs
mov
sbb
pop
les
push
or
cli
dec
gs
clc
mov
pop
or
das
xor
xchg
scas
das
adc
pusha
fucompp
lds
sub
push
sub
sti
or
mov
xchg
and
mov
sti
adc
and
mov
push
or
and
xchg
pop
dec
jo
ffreep
add
jg
sahf
cld
outs
je
imul
add
movs
(bad)
popf
mov
and
push
js
in
in
jo
push
fs
pusha
pop
pop
leave
leave
leave
leave
push
push
dec
dec
fs
leave
inc
inc
test
cmp
in
in
cmp
leave
in
in
movs
sub
mov
leave
leave
leave
and
adc
xchg
xchg
fist
iret
or
add
mov
xchg
add
clc
push
hlt
daa
daa
daa
daa
lock
cwde
xchg
daa
daa
daa
daa
nop
call
daa
daa
test
daa
daa
fcom
rcl
(bad)
(bad)
jle
les
and
or
call
test
je
dec
jnp
dec
mov
and
mov
inc
inc
pop
ret
jle
int3
push
mov
in
sbb
pop
stos
inc
popa
jae
dec
dec
and
xchg
mov
inc
imul
and
xor
xor
sub
div
(bad)
push
nop
jb
and
imul
outs
mov
sbb
push
push
je
popa
inc
inc
gs
test
cs
mov
fdiv
gs
ins
aas
lock
enter
imul
jmp
test
inc
adc
fnstenv
shl
cmp
adc
mov
loop
pop
lock
popaw
dec
leave
xor
mov
sbb
bound
test
fld
test
pop
pop
jge
add
arpl
or
pop
neg
inc
cmps
mov
xor
iret
mov
mov
mov
mov
dec
add
inc
or
cmps
imul
or
or
imul
imul
cmps
jge
sub
push
xor
cs
jp
rcl
imul
inc
and
xor
sub
inc
jbe
imul
lahf
imul
pop
stos
popf
bound
or
inc
inc
imul
jmp
inc
dec
add
neg
jns
fistp
add
jl
push
cmp
add
data16
out
adc
and
mov
inc
pop
add
in
out
inc
xor
mov
add
fidivr
jl
nop
call
cmp
mov
mov
jmp
dec
jmp
mov
and
fucomip
jne
pop
mov
and
sub
fwait
nop
add
jmp
and
add
out
lea
cmp
mov
add
imul
loopne
enter
(bad)
sbb
loopne
cmp
addr16
outs
mov
cld
add
or
adc
xor
add
clc
cmp
jne
sti
push
dec
pop
mov
cld
sub
fdivr
sbb
mov
mov
mov
push
mov
inc
sbb
push
push
idiv
add
push
call
sub
mov
outs
mov
push
mov
mov
psubusb
loop
mov
sar
ret
mov
sub
mov
mov
sub
out
push
sbb
xor
mov
cmp
pusha
add
sub
push
(bad)
sti
clc
mov
add
dec
test
push
nop
jle
push
push
mov
lea
inc
inc
dec
add
and
in
fwait
and
xchg
mov
mov
or
pushf
sbb
rol
pop
rcr
mov
rol
sbb
add
test
pop
pop
pop
pop
faddp
add
mov
mov
out
adc
(bad)
jle
adc
mov
push
and
xchg
fisttp
test
jne
push
fstp
xor
jmp
or
cmp
in
push
push
leave
lods
xor
lea
inc
je
push
call
add
and
cmp
jbe
sub
add
jmp
test
jne
jecxz
mov
mov
add
fimul
cs
scas
dec
mov
add
nop
inc
sub
repnz
sub
pusha
cmp
and
jmp
sti
inc
outs
inc
fidivr
loope
pop
shl
add
cmp
jbe
shr
out
mov
adc
xchg
loopne
test
pop
sub
mov
jo
fs
mov
stos
inc
fnstsw
int3
outs
push
cmp
jae
mov
add
dec
and
cmp
cmp
jae
fdiv
pop
je
popa
loopne
iret
lea
rcl
clc
int
js
add
push
pusha
or
lds
sbb
push
std
sub
add
jbe
ret
push
imul
iret
xchg
mov
sbb
or
js
shr
cmp
jb
add
repnz
jmp
dec
(bad)
and
je
jle
mov
cmp
push
add
pusha
bound
inc
dec
ja
je
loopne
loope
aas
push
lea
mov
inc
or
ds
fisub
mov
std
jmp
(bad)
and
add
jmp
adc
mov
add
sar
or
jbe
mov
cmp
fimul
fs
adc
es
mov
lods
pusha
and
and
cmps
sub
fs
xor
ds
aas
je
mov
jae
lods
cmp
cmp
rcr
and
xchg
push
jl
ins
inc
or
mov
icebp
out
sub
mov
add
lock
leave
cld
mov
cmp
add
outs
add
push
add
cmp
jne
mov
movs
ret
test
btr
mov
push
jle
pusha
or
ins
mov
add
mov
cli
lea
mov
mov
sbb
mov
mov
sbb
add
iret
sub
sub
cmp
and
inc
sbb
outs
mov
cmps
mov
mov
and
cld
mov
push
mov
xor
das
mov
mov
mov
jl
adc
adc
push
or
imul
iret
mov
adc
rcl
addr16
fisttp
and
jge
mov
movs
or
fadd
cmp
mov
lea
pop
hlt
loopne
or
push
and
or
dec
loope
rol
or
jmp
mov
mov
sub
ror
jl
mov
push
bsf
mov
shl
xor
push
js
jb
adc
fdiv
xchg
mov
jmp
mov
dec
cmp
scas
mov
or
aaa
int
xchg
inc
inc
cmp
mov
xchg
adc
test
push
pop
xor
xor
mov
setno
(bad)
shl
in
pushf
test
pop
fdiv
sub
nop
and
mov
test
jl
sub
rol
test
add
mov
jne
fldenv
lds
sub
ror
sub
fadd
data16
call
mov
daa
push
xor
stos
fiadd
aad
inc
adc
cmp
jne
push
push
or
ins
push
mov
iret
xor
add
jns
xchg
imul
scas
jmp
cmp
in
outs
xor
jmp
aaa
add
sub
adc
call
loop
fmul
cli
inc
jb
scas
test
jne
or
ret
mov
or
cmp
inc
xchg
pop
xor
xchg
mov
xlat
or
rol
mov
add
cmp
addr16
or
into
sub
sub
jne
in
mov
adc
ret
stos
fst
fdiv
ds
sbb
add
mov
mov
mov
loopne
lds
call
dec
dec
rol
in
or
in
out
adc
enter
sub
xor
retf
jb
jns
jb
jg
add
mov
ret
jg
rol
aaa
mov
lea
jg
or
push
mov
loop
rol
add
hlt
outs
fneni(8087
add
mov
or
sbb
clc
xor
popf
rcr
retf
mov
jle
jmp
cmp
push
xchg
cvttps2pi
cmp
jb
sti
adc
adc
jae
push
cmp
add
and
jp
fisttp
xor
xchg
dec
sbb
cmp
jbe
fcomp
push
or
mov
cld
or
mov
push
mov
int
dec
mov
jne
or
adc
pop
pop
pop
cmc
(bad)
clc
mov
rol
xlat
sub
mov
jno
clc
add
jo
mov
lea
nop
lahf
add
mov
push
icebp
(bad)
cmp
imul
add
popa
sbb
cmp
cmp
dec
fild
xchg
sbb
pop
xor
out
push
shl
xlat
xlat
je
iret
pop
es
ja
cmp
mov
pop
mov
shr
add
xor
sub
adc
fiadd
add
lea
ja
and
jno
neg
add
push
jle
sbb
ss
push
lea
jl
mov
push
dec
add
loope
add
and
fisttp
mov
jecxz
rcl
xchg
aas
ds
iret
push
gs
loop
cmp
push
clc
jge
xor
and
sub
push
jecxz
(bad)
(bad)
lea
or
push
ins
sti
cdq
jae
neg
fldz
fst
add
js
or
fmul
outs
mov
mov
hlt
mov
std
iret
sbb
ret
test
jne
xor
push
dec
sbb
stos
icebp
cmp
jb
mov
and
rcl
setl
mov
jg
jbe
push
push
into
ret
and
adc
mov
out
dec
cmp
jbe
mov
mov
sub
sbb
adc
sub
mov
mov
dec
mov
or
es
mov
mul
ins
push
push
cld
lods
xchg
jmp
ins
(bad)
sbb
enter
mov
loopne
stc
fcmovu
push
out
scas
inc
sbb
wbinvd
shr
xchg
dec
aaa
retf
add
sbb
sbb
sbb
pop
adc
jb
add
push
cdq
inc
sub
aas
fcom
xor
fcomip
ins
adc
inc
add
icebp
mov
cmp
aas
xchg
xor
pop
sub
xchg
mov
mov
dec
mov
mov
inc
ds
js
mov
mov
mov
fs
rcr
xor
test
add
push
push
cld
push
fcom
push
in
cmp
ja
pop
or
push
lock
push
jae
ss
mov
push
adc
std
lea
mov
js
add
push
adc
fild
jne
push
test
je
adc
call
add
fimul
sahf
in
sbb
mov
dec
cmp
gs
adc
shr
fucomip
nop
popa
and
xor
ja
mov
test
daa
dec
mov
lea
and
cmp
sub
sti
push
cmp
jle
daa
mov
inc
pop
sbb
lock
xor
mov
pop
mov
dec
pop
loopne
rol
loopne
fmul
movs
sbb
xor
jp
xchg
cmps
imul
call
mov
cmp
aas
inc
sbb
adc
fidivr
add
mov
mov
mov
lock
jno
fild
pop
(bad)
stos
sbb
enter
pop
mov
cmp
jne
outs
mov
adc
mov
and
mov
xor
add
dec
jne
mov
loope
addr16
(bad)
cld
mov
(bad)
js
ret
test
inc
add
lea
dec
dec
fadd
and
mov
sbb
div
call
xor
dec
jo
and
pushf
push
dec
or
sti
or
cmp
je
aaa
sub
test
call
inc
scas
add
minps
pop
(bad)
hlt
adc
mov
adc
add
push
fld
hlt
inc
imul
ror
hlt
add
mov
fild
sbb
xor
mov
ja
mov
jecxz
jg
dec
sahf
arpl
jl
sbb
ss
jle
adc
cmp
mov
mov
hlt
js
cmp
jae
add
dec
aam
fdiv
mov
add
and
in
mov
fisttp
in
adc
retf
xlat
cdq
fild
xchg
das
mov
fnstcw
fidiv
or
jnp
inc
fidivr
movq
xchg
clc
(bad)
inc
fiadd
add
or
xchg
cld
ret
push
mov
cs
ret
push
dec
jne
bound
loopne
stos
lea
jnp
mov
jl
sbb
and
pop
inc
add
clc
movs
call
les
mov
sub
pop
and
rep
jb
call
clc
cmps
lahf
data16
add
or
sub
pop
jmp
mov
lea
jge
and
data16
test
xor
(bad)
pcmpeqd
inc
mov
mov
call
and
mov
add
sub
jb
ss
jp
jno
aaa
dec
adc
in
jae
in
xchg
scas
mov
xchg
push
pop
xchg
sti
cli
je
dec
mov
jnp
jl
cmp
neg
lock
pusha
leave
or
fdivr
lea
sar
mov
adc
xchg
sahf
mov
mov
dec
out
in
loope
outs
add
mov
mov
mov
(bad)
(bad)
scas
cmp
cli
mov
xchg
cmp
xchg
div
mov
imul
push
not
add
outs
push
or
ja
es
dec
rol
imul
ret
in
in
adc
(bad)
pop
fcmove
imul
or
xchg
add
cmp
dec
je
jmp
std
jo
enter
inc
mov
mov
sbb
or
inc
cld
addr16
nop
loop
inc
push
js
xchg
dec
dec
mov
mov
add
xchg
mov
sbb
pop
cmp
or
cmp
sbb
jg
je
push
in
cmp
mov
(bad)
popf
mov
inc
inc
xor
jae
xchg
cmp
mov
dec
cdq
add
ja
inc
add
dec
jne
mov
jl
fld
push
ror
mov
adc
sar
cmp
push
mov
xor
mov
clc
iret
es
test
jne
mov
mov
add
add
mov
std
cmp
jbe
mov
cmc
bound
rol
sar
and
nop
scas
mov
mov
mov
push
mov
inc
in
inc
clc
xchg
aad
jge
call
inc
in
shl
rol
add
add
ja
fnsave
mov
shr
cmp
in
call
mov
and
scas
enter
loop
push
in
loopne
add
jg
xchg
push
cld
into
out
(bad)
xor
loope
lea
sbb
and
jae
mov
or
mov
call
mov
xor
div
imul
mov
or
mov
adc
repz
ret
push
(bad)
xor
add
dec
call
in
cli
xchg
inc
cmp
or
repz
rcr
sar
pop
push
push
mov
add
adc
outs
add
push
mov
cmp
jne
mov
fwait
mov
adc
add
inc
or
inc
cmp
dec
or
and
mov
sbb
ror
push
ror
mov
jnp
test
fimul
cmp
outs
mov
push
xor
repnz
mov
push
fsubr
sub
fcomp
popf
lea
shl
cmps
pop
sbb
xor
sub
fucomp
test
call
add
ret
mov
fidiv
pop
fisub
imul
nop
aas
push
mov
add
sbb
imul
sbb
enter
or
pop
repz
mov
xor
jmp
cmp
imul
rcr
arpl
sbb
dec
xchg
cld
cmp
inc
stc
sbb
mov
mov
and
sbb
push
or
pusha
sti
inc
addr16
rol
out
jmp
out
push
jge
gs
mov
xchg
mul
shl
fadd
or
push
jmp
mov
jge
cmp
or
jmp
push
jmp
cmp
ja
movzx
add
jl
rol
xor
add
mov
jg
cmc
adc
push
push
push
and
or
jne
retf
mov
mov
pop
outs
dec
mov
rcl
das
jo
jg
shl
stc
and
sub
jg
jmp
mov
sub
sub
or
pusha
or
adc
adc
dec
mov
jnp
icebp
inc
dec
jb
js
jg
xchg
mov
test
inc
add
jbe
out
inc
dec
or
adc
fld
pop
mov
cmc
pushf
sbb
ret
jle
or
shr
jg
jo
retf
adc
adc
add
inc
fld
pop
inc
cmc
pop
push
aad
mov
or
inc
add
jle
mov
cmps
and
add
add
jnp
in
cmp
cmp
push
add
scas
cmp
adc
ret
mov
jmp
in
pop
pop
pop
add
cli
and
or
mov
(bad)
and
js
or
cmp
loopne
mov
imul
and
pop
jmp
inc
imul
out
and
sub
ins
ret
pop
mov
and
mov
(bad)
jmp
pop
jmp
push
pop
push
neg
test
adc
jmp
cmp
ins
call
adc
push
jb
push
mov
mov
xor
iret
fmul
lahf
fdiv
sbb
cld
pop
cmp
(bad)
stos
add
jmp
pop
pop
pop
pop
adc
jo
nop
jmp
pop
xor
dec
fs
add
or
test
push
add
push
pop
push
dec
test
jne
adc
jmp
push
pop
adc
loope
cs
pusha
test
push
mov
mov
je
clc
and
scas
inc
sub
jmp
and
clc
aad
call
or
or
mov
mov
iret
mov
mov
or
fldcw
cmp
pop
push
sub
es
adc
or
fnstcw
lods
jns
add
add
fldcw
add
fldcw
pop
inc
jbe
dec
aad
xor
or
mov
pushf
or
push
dec
ss
lods
jle
mov
cmp
jb
or
data16
sub
mov
jbe
je
mov
inc
cmp
or
add
inc
sbb
inc
mov
pop
or
push
sbb
push
xor
cmps
mov
or
mov
or
adc
or
lea
mov
push
adc
inc
pop
xor
push
dec
push
adc
cmp
jne
or
pop
fdivr
push
adc
adc
fs
xchg
test
or
fnstsw
stos
ficom
pop
adc
push
pusha
push
fcomp
or
xchg
mov
int3
cmp
mov
outs
aaa
movs
test
nop
and
mov
add
xlat
adc
sub
add
fidiv
outs
cmp
or
push
outs
or
sub
jmp
add
daa
das
inc
imul
jae
ins
or
mov
fidiv
jle
js
das
add
sub
push
lea
mov
ret
dec
push
sbb
cmp
div
adc
cmp
test
dec
dec
dec
inc
scas
mov
out
out
sub
add
js
xchg
push
aaa
je
mov
mov
scas
ror
pop
jle
jo
pop
dec
mov
imul
jmp
push
xchg
sub
sbb
out
dec
jne
jmp
lea
or
push
cld
add
imul
push
cmp
mov
adc
hlt
jmp
cmc
movs
dec
je
div
adc
cmp
adc
or
or
ins
xchg
lods
add
xor
imul
aas
xchg
adc
inc
push
add
sub
fmul
aad
mov
xor
xor
mov
mov
(bad)
lea
xchg
aam
mov
hlt
mov
pop
mov
inc
dec
sub
pop
cmovns
adc
call
mov
jmp
sbb
fucomi
pop
cmp
cmp
aad
add
jmp
sbb
cmp
aaa
xchg
add
das
ja
sbb
adc
push
mov
jl
inc
sbb
in
and
(bad)
stos
cmp
lahf
jmp
cmp
mov
xor
pop
fcomp
cmp
jbe
mov
mov
inc
push
push
mov
sbb
xchg
movs
dec
add
sub
cmp
jne
dec
je
loopne
pop
loop
pop
add
cmp
jmp
adc
ret
fild
and
je
mov
cmp
jne
push
adc
sub
(bad)
adc
add
std
fbstp
add
pop
cmp
cmp
jne
shr
shr
test
add
js
jge
lock
or
push
adc
push
hlt
mov
inc
push
add
mov
cmp
jne
mov
ret
adc
(bad)
outs
sar
pop
cmp
je
dec
mov
mov
aas
pop
or
push
add
mov
fld
fst
fst
mov
and
in
xchg
or
push
add
neg
sub
data16
mov
jg
test
jle
mov
and
inc
lea
iret
sub
push
sbb
sahf
out
sahf
push
adc
adc
or
fnstsw
inc
push
or
sbb
idiv
xlat
sub
(bad)
iret
aaa
sbb
jnp
inc
sub
push
push
push
mov
aaa
pop
call
cmp
pop
je
xor
pop
inc
pusha
mov
je
ss
inc
mov
loopne
test
jo
inc
jmp
or
pop
pop
jb
mov
pop
mov
cmps
clc
or
inc
(bad)
int
mov
mov
bound
mov
xlat
out
mov
xchg
mov
pop
hlt
jle
mov
dec
adc
rol
push
adc
jl
mov
inc
cmp
push
cmp
sub
outs
stos
je
test
dec
jg
jmp
into
inc
bnd
add
pop
cmp
jne
dec
sub
jmp
or
jle
loop
fsubr
test
je
sub
icebp
test
ins
add
pushf
pop
cmp
(bad)
mov
add
jmp
cmp
nop
push
out
pop
sub
sbb
pop
sbb
xor
jle
loopne
push
xor
ja
jne
mov
pop
gs
add
sub
loop
scas
cdq
mov
xchg
daa
or
loopne
pop
add
pop
inc
(bad)
push
fdivr
pusha
or
sbb
std
dec
add
cmp
je
mov
push
sub
stc
stc
or
je
and
je
je
pop
je
scas
xchg
outs
sti
xor
arpl
push
push
data16
mov
scas
daa
sub
sub
ja
cmp
ja
lea
add
add
gs
dec
push
jmp
out
add
or
stos
neg
jle
js
pop
sub
jmp
adc
lds
xchg
fsubrp
je
sahf
popa
jb
mov
mov
add
(bad)
add
(bad)
mov
retf
cmps
xor
xor
shr
mov
addr16
call
out
mov
mov
test
cmp
mov
rol
sub
jae
or
push
pop
xlat
inc
pop
inc
dec
stos
and
mov
xor
xchg
or
push
cmp
cmp
jne
dec
sar
xor
mov
or
sbb
mov
inc
or
inc
dec
jne
push
sub
mov
xchg
cmp
ror
jl
loope
icebp
xor
call
stos
push
or
lods
push
repz
mov
leave
mov
jns
pcmpeqb
loope
mov
das
sub
je
and
mov
jmp
pushf
xchg
jge
mov
stc
sbb
fcomi
mov
fcomp
stos
jmp
fldz
in
mov
xchg
xchg
jg
aas
daa
pop
jns
mov
cli
or
jl
leave
pushf
or
ret
mov
adc
repnz
push
and
sbb
add
jge
retf
xchg
and
inc
mov
jo
cdq
jle
sub
es
test
out
sub
pop
jecxz
jg
in
add
leave
sbb
mov
cmp
jg
out
fidivr
call
mov
bound
mov
jp
mov
xlat
fadd
outs
xor
xchg
push
or
push
push
test
into
sbb
ror
mov
push
pop
test
enter
mov
jmp
push
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
pop
inc
fisttp
add
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
(bad)
(bad)
(bad)
aad
iret
dec
js
inc
mov
stos
mov
cmp
or
mov
(bad)
(bad)
jmp
mov
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
jmp
dec
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
inc
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
(bad)
(bad)
push
imul
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
(bad)
(bad)
(bad)
inc
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
loopne
push
movs
mov
popa
mov
fsub
clc
repz
mov
or
xchg
and
and
outs
bound
xor
fninit
fwait
rol
je
fidiv
imul
ret
inc
sbb
enter
(bad)
push
xor
clc
mov
add
(bad)
repnz
push
lea
test
mov
push
pop
aam
sub
pop
cmp
mov
inc
int3
aas
pushf
lock
cmp
hlt
mov
inc
or
repz
mov
pop
pop
mov
loopne
pop
iret
adc
xor
push
cwde
add
mov
sbb
sub
cmp
sbb
add
outs
test
out
fimul
mov
mov
fs
mov
repz
mov
dec
xor
sar
lock
pop
mov
mov
call
ret
add
xlat
stos
mov
push
push
inc
add
dec
stos
pop
and
mov
mov
sub
add
pop
sar
retf
xchg
jmp
cmp
je
pop
mov
(bad)
sbb
mov
or
inc
mov
mov
push
sbb
cmp
sar
and
mov
mov
push
mov
ins
fmul
jmp
jae
pop
mov
rol
hlt
out
jae
paddd
pmaxsw
xor
jmp
push
jbe
push
xor
js
ins
adc
xlat
cmp
jg
adc
and
scas
hlt
xor
mov
add
(bad)
push
xchg
fcomp
push
dec
add
icebp
push
(bad)
mov
xor
push
cmp
sbb
cmps
pop
in
mov
push
add
push
lea
jnp
sbb
sbb
aad
js
(bad)
js
cmp
push
jmp
mov
add
add
jl
mov
cmp
std
pop
or
add
add
retf
je
call
ror
add
pop
ret
frstor
adc
ja
mov
cmp
cmp
pop
jl
xor
xor
jb
cmp
adc
or
jne
or
jle
loop
dec
dec
(bad)
lds
xchg
lods
xchg
repnz
inc
cmp
pop
adc
movs
sbb
movzx
add
adc
inc
jmp
mov
das
fs
test
outs
ins
arpl
sub
xor
xor
cmp
je
mov
clc
test
repz
adc
add
jle
(bad)
call
dec
or
add
repnz
je
pop
or
idiv
pop
add
sub
inc
cld
pop
ficom
cmps
ja
mov
inc
enter
jmp
pop
mov
arpl
test
lock
jne
das
rcr
outs
out
rol
shl
(bad)
mov
push
sub
sbb
pop
push
data16
or
pop
mov
cmp
rol
add
mov
xor
lock
or
(bad)
cmp
push
jne
push
or
push
jae
mov
test
daa
(bad)
inc
mov
inc
add
inc
fcom
lods
mov
push
xor
mov
jb
rcl
pop
lds
lods
mov
mov
xor
xor
mov
add
inc
cmp
cmp
retf
mov
cmp
fbstp
cld
out
and
add
dec
jne
cmp
jmp
pop
jmp
inc
or
push
lea
xchg
xchg
adc
jmp
xor
test
jne
xchg
adc
fld
(bad)
cmps
mov
mov
neg
inc
bswap
call
aam
(bad)
adc
in
xchg
inc
inc
and
or
iret
xor
mov
pop
or
les
jl
adc
cmp
je
push
add
test
(bad)
add
loopne
push
mov
push
cli
fucompp
cmps
or
aaa
repnz
(bad)
push
lds
cld
add
sub
je
pop
ret
pop
jmp
mov
xor
call
scas
push
dec
xchg
jecxz
iret
push
pop
add
leave
sub
add
jg
aas
push
push
push
test
jl
dec
hlt
xor
lea
mov
mov
mov
aam
push
cli
mov
or
or
fwait
js
ficom
or
or
inc
or
outs
movs
iret
add
or
jg
call
jp
or
push
add
or
xor
inc
sub
push
xchg
or
mov
fbstp
or
lods
pop
xchg
push
jg
push
ja
pop
or
pushf
sbb
or
pop
xchg
(bad)
ins
ret
xlat
ror
mov
imul
add
and
push
add
ret
xchg
jl
ret
adc
add
cmps
sub
add
cmp
(bad)
in
push
call
sub
or
nop
es
cmp
sbb
cs
cs
add
fisubr
xor
or
les
xlat
pop
loopne
jnp
push
push
and
leave
sahf
inc
add
cmp
push
movsx
inc
inc
add
cmp
push
addr16
(bad)
push
jecxz
pop
xchg
dec
adc
mov
push
aas
loop
fiadd
push
test
adc
xor
(bad)
pop
test
cwde
jne
fiadd
push
sbb
outs
mov
je
cmp
adc
je
adc
shl
out
jo
dec
mov
into
cli
out
mov
shl
push
je
daa
enter
sub
jge
test
lea
inc
jl
pop
push
pop
mov
xor
in
fsubr
xor
adc
fs
jns
fsubr
cli
fidiv
mov
pop
and
jp
push
cmp
sub
or
mov
sti
mov
push
cmp
add
mov
fsub
add
test
dec
or
sti
std
std
aas
mov
mov
inc
ins
inc
xchg
dec
fist
inc
sahf
or
je
dec
or
add
outs
jecxz
call
inc
dec
inc
or
sub
(bad)
clc
cli
dec
cmc
jno
mov
jl
inc
mov
in
ret
sbb
int3
cmp
cmp
cmc
popf
test
push
enter
inc
add
dec
outs
cmp
inc
mov
xchg
mov
rcr
adc
cs
adc
inc
jmp
sbb
xor
inc
daa
push
adc
and
adc
ins
or
and
adc
pop
adc
sar
or
jmp
movd
sbb
call
ret
mov
mov
xor
add
push
push
ror
lods
adc
jbe
mov
out
jecxz
and
push
inc
and
das
sbb
test
in
pop
xchg
or
mov
or
push
add
jo
fsubr
call
push
mov
loopne
pop
mov
dec
inc
push
(bad)
sbb
cmp
jo
add
adc
or
loop
xor
clc
mov
dec
into
or
add
nop
cmps
xor
or
lea
xor
inc
add
or
lea
in
mov
pusha
add
xlat
or
hlt
sbb
scas
lods
cmp
adc
adc
loopne
repz
pop
mov
sahf
or
pop
xchg
loop
xor
nop
or
les
outs
push
or
scas
sti
dec
ror
cmp
je
cmp
jbe
adc
push
sub
je
jmp
(bad)
pop
les
add
je
jmp
cmp
outs
lods
bnd
sub
add
jmp
sub
(bad)
(bad)
fisttp
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
(bad)
call
mov
jmp
mov
jmp
mov
jmp
mov
dec
retf
mov
mov
push
or
pop
pop
outs
daa
pop
ret
daa
mov
pop
(bad)
nop
jno
add
jb
dec
pop
or
pop
xor
mov
adc
inc
sbb
cli
pop
test
jmp
xchg
inc
cmp
mov
inc
mov
adc
push
int3
inc
lock
or
pop
sbb
cmps
fmulp
hlt
mov
pop
pusha
jbe
adc
and
aad
push
or
inc
cmp
sub
push
xchg
pop
sub
out
or
jne
sub
sub
pcmpgtd
adc
mov
mov
dec
adc
dec
sub
fstp
dec
mov
je
add
pop
push
repnz
and
xor
adc
jmp
std
repnz
push
rcr
or
xor
inc
scas
rcl
cmp
jle
mov
fadd
or
sti
jg
cmp
in
mov
mov
add
mov
adc
sbb
call
mov
pop
push
inc
rcl
jmp
sbb
cld
imul
addr16
out
(bad)
mov
in
mov
xchg
sbb
bound
cmps
inc
mov
lods
push
test
(bad)
sub
push
sub
sbb
jmp
mov
mov
add
mov
pop
dec
in
push
(bad)
bswap
leave
hlt
jmp
or
dec
jmp
inc
jae
jg
add
dec
jne
pop
pop
xchg
jg
add
mov
dec
in
sahf
mov
shl
mov
mov
cdq
div
add
enter
and
and
mov
hlt
mov
dec
mov
add
loopne
test
mov
inc
add
push
ror
mov
push
iret
(bad)
mov
ins
mov
jl
adc
ja
add
aaa
mov
cmps
rep
xor
xchg
rol
adc
inc
push
add
sub
push
mov
aad
clc
test
or
or
push
push
add
xor
add
fs
pop
ret
push
xor
adc
cwde
jb
out
nop
fiadd
and
jecxz
js
pop
pop
jmp
lahf
fdivr
add
adc
jne
sbb
movs
push
xor
add
sbb
mov
in
das
mov
push
js
jnp
and
(bad)
jnp
iret
aam
pop
sub
jne
xor
jne
xchg
add
in
cmp
add
cli
fwait
sbb
je
mov
pusha
sbb
sub
dec
xchg
jne
cmp
je
in
sbb
(bad)
push
push
xchg
mov
add
in
jno
add
mov
or
mov
mov
mov
add
sti
fwait
adc
dec
push
push
mov
test
dec
pop
jo
push
jns
xor
push
test
loop
and
int3
inc
cmp
inc
dec
add
pop
call
pushf
adc
out
push
add
pop
xor
clc
mov
cmp
rol
in
or
cs
mov
mov
mov
rcl
sbb
push
or
push
mov
in
addr16
push
jl
movs
xchg
fsub
cmp
lahf
shl
lods
call
xchg
pusha
dec
clc
dec
jl
lock
jne
push
lea
pop
jbe
cld
or
adc
push
sbb
add
je
ret
push
dec
dec
jne
ja
dec
cmp
push
or
pop
(bad)
sahf
inc
jg
pop
mov
cmp
push
mov
dec
cld
cwde
push
jmp
xor
and
and
jg
jle
push
add
jo
out
jmp
repnz
ins
pop
add
inc
clc
les
dec
retf
hlt
data16
inc
xor
add
shl
(bad)
stos
and
sub
mov
jne
xor
xor
loope
mov
cmps
arpl
pop
dec
jns
sub
mov
rol
pop
or
push
jge
pop
inc
cmp
gs
xchg
sbb
push
inc
mov
sbb
mov
jg
add
cs
ja
add
adc
and
pop
or
cmp
push
sub
jle
push
mov
icebp
add
push
mov
sub
cmp
xchg
gs
repnz
push
push
jle
jg
clc
add
(bad)
adc
push
dec
sub
sbb
es
adc
xchg
dec
scas
jmp
jo
pop
lds
leave
mov
sbb
pop
in
push
dec
pop
adc
dec
das
dec
pop
sub
sbb
pop
jmp
addr16
daa
xchg
push
movs
adc
or
ret
fmul
add
je
enter
neg
call
pop
sub
jmp
fimul
cmp
or
or
push
jnp
mov
jmp
or
add
dec
ds
and
lahf
adc
call
push
or
fld
jb
cmp
jl
(bad)
mov
in
fld
and
cmp
jbe
dec
mov
inc
add
enter
loope
jp
mov
cmps
pop
xchg
add
mov
add
mov
test
mov
push
pop
push
cld
mov
push
cmp
and
sub
mov
inc
push
mov
mov
fadd
push
cld
add
jo
mov
dec
hlt
pop
dec
lods
inc
push
dec
sub
sub
jle
add
int3
jmpw
in
xlat
rcl
cli
or
xor
shl
jo
mov
jmp
mov
inc
jle
lea
rol
pop
pop
adc
mov
popf
jmp
and
dec
cmp
push
mov
add
(bad)
cmp
adc
dec
dec
mov
dec
inc
mov
ror
cmp
daa
or
sahf
cmovge
pop
inc
pop
(bad)
int
jmp
pusha
xchg
and
js
mov
jmp
mov
xchg
jnp
push
xor
xor
or
xor
adc
fimul
cwde
rol
jl
cmp
push
add
(bad)
push
jmp
icebp
jb
cmp
jl
pop
mov
icebp
movaps
sub
jns
xor
pop
push
mov
iret
clc
and
pop
sub
push
push
das
mov
aas
push
add
jg
jnp
out
daa
in
daa
push
cmp
inc
mov
call
and
or
jge
mov
test
ins
fimul
push
mov
call
in
icebp
ins
loope
lods
jmp
lea
(bad)
(bad)
aad
cmp
push
inc
push
cld
out
test
mov
leave
std
or
xor
mov
pop
mov
add
rcr
jne
fsubrp
add
sub
sub
ins
dec
dec
dec
inc
jo
lock
adc
dec
call
scas
sbb
sbb
xor
inc
xchg
jb
pop
lods
addr16
ins
jbe
sbb
jmp
push
or
fidivr
fldpi
dec
adc
pop
jle
xchg
stc
and
adc
jb
mov
or
dec
mov
rol
pop
shr
scas
test
inc
inc
nop
sub
cmp
inc
inc
inc
push
and
movs
stc
pop
clc
scas
dec
sub
ja
add
push
shr
push
mov
into
(bad)
jns
inc
dec
dec
add
pop
xor
(bad)
or
jo
rcl
add
and
sub
push
add
inc
and
shr
xchg
jmp
cmps
or
mov
mov
adc
and
loope
xlat
pop
mov
jp
sub
add
xor
jmp
dec
cmp
sub
fisub
icebp
scas
js
xor
sub
cmp
and
in
or
rol
ror
sahf
lock
mov
sub
or
xor
addr16
test
addr16
mov
xor
dec
pop
or
xor
idiv
lock
into
shl
pop
pushf
pop
dec
xchg
stc
repz
inc
pop
sbb
movs
pusha
sub
dec
mov
scas
daa
(bad)
sbb
lods
push
sub
jecxz
scas
push
sbb
fcom
scas
nop
mov
nop
wrmsr
adc
in
mov
ret
mov
test
shl
mov
ficom
ret
mov
fdiv
cs
pop
cmp
stc
add
jmp
pusha
test
bound
bound
pop
loopne
loope
inc
xchg
or
in
ret
push
stos
inc
push
add
(bad)
stos
jb
in
je
test
push
push
xchg
fcom
mov
fstp
hlt
rcr
rcr
scas
pop
clc
js
dec
arpl
ret
test
xor
sti
adc
xchg
or
test
or
or
pop
xor
ret
mov
jmp
ja
or
lds
xchg
js
adc
std
jl
call
jb
ja
push
inc
push
(bad)
sbb
dec
sub
cmps
sub
mov
dec
pop
les
and
test
ret
ins
jmp
jge
push
cmp
lea
lea
push
xchg
xchg
cmc
xchg
jb
mov
out
pushf
xchg
stos
mov
aam
(bad)
dec
movs
adc
push
add
adc
push
mov
mov
jo
lea
push
pop
and
add
jge
and
sub
in
sti
push
rcl
mov
aam
fcom
out
inc
or
ds
test
sbb
pop
xlat
jp
ror
xor
pop
add
or
dec
pop
mov
mov
xor
adc
mov
push
push
out
or
dec
pusha
push
arpl
mov
pop
add
rcl
adc
xor
jo
sub
jnp
mov
ss
cmp
mov
adc
add
test
mov
or
fst
mov
add
in
or
test
popa
xor
xchg
test
add
dec
clc
cdq
mov
pop
and
int
fs
push
mov
or
add
adc
rol
popa
xchg
mov
fs
mov
fs
and
add
ds
loop
cmp
jne
fisubr
inc
cld
dec
jmp
clc
jmp
push
add
and
(bad)
shr
in
je
push
xchg
xchg
add
shl
jne
xchg
cmp
test
les
push
sub
ja
inc
jge
push
shl
add
dec
loopne
(bad)
ss
inc
push
inc
popf
add
repnz
and
rcl
add
jne
mul
aam
in
push
fsub
test
xor
dec
ret
inc
pusha
stos
push
cmp
std
test
pop
and
pop
pop
adc
loopne
sti
ror
cmp
cmp
xor
fdiv
add
inc
cli
jmp
push
mov
cmp
jne
imul
jbe
cs
add
xchg
nop
test
loope
retf
or
adc
mov
pushf
push
xor
iret
nop
dec
pop
sub
fdivrp
das
xor
add
outs
(bad)
pop
mov
cmp
fadd
push
cmp
(bad)
imul
jae
adc
or
jmp
mov
out
pop
inc
ror
shl
cmps
sti
push
loope
and
popf
pinsrw
and
add
jmp
ds
add
repnz
loopne
cdq
mov
test
jne
(bad)
adc
test
add
(bad)
jl
test
mov
ds
dec
push
sub
sub
mov
pop
call
adc
sub
loop
inc
or
or
xchg
and
or
inc
(bad)
sub
or
js
jge
and
jle
mov
jne
imul
pop
fdivr
jmp
(bad)
(bad)
cmp
jge
outs
int
call
inc
repz
loopne
push
dec
movs
push
jge
or
sbb
mov
movs
cmp
stc
add
int
or
mov
jle
dec
sub
mov
stos
js
jge
adc
push
adc
sbb
jbe
fwait
jmp
and
push
xchg
fnstsw
and
push
out
dec
adc
xchg
push
retf
sub
cmp
dec
and
inc
push
xor
or
repnz
loop
dec
add
pop
pop
adc
fild
(bad)
cmp
shl
ja
xor
sbb
test
push
adc
lahf
adc
bound
pop
ds
push
push
ss
mov
push
stos
xchg
push
dec
js
mov
add
sar
xchg
clc
cs
fisttp
cmps
pop
cmps
mov
jmp
pop
ret
pop
mov
xchg
clc
sub
shr
jecxz
cli
dec
or
lock
mov
fisttp
inc
not
push
jl
push
call
adc
lock
or
add
add
jle
dec
mov
inc
jecxz
in
out
int
sub
xor
dec
xor
add
stos
aad
or
stos
pusha
call
xor
mov
pop
pushf
adc
xchg
inc
out
out
aas
push
call
mov
sbb
xlat
call
pop
or
cmps
neg
jbe
repz
and
out
scas
pop
pop
lods
fs
pop
sbb
and
add
push
(bad)
nop
(bad)
aam
xor
jl
leave
loope
or
push
mov
jl
je
or
sbb
sbb
mov
fstp
inc
test
out
pop
push
sub
mov
(bad)
xor
mov
clc
das
xor
mov
xchg
inc
es
je
cmp
je
scas
clc
mov
push
je
cmp
je
cmp
test
je
icebp
or
sub
mov
mov
test
adc
mov
cdq
push
add
or
adc
jmp
push
mov
mov
mov
add
mov
adc
out
into
mov
call
mov
sub
push
push
addr16
jmp
push
scas
ins
cmp
cmp
pop
call
jp
mov
call
add
add
arpl
inc
jb
pop
xchg
ret
movs
or
push
mov
mov
inc
fdivr
aad
sub
mov
pop
xor
pop
lods
pop
mov
pop
(bad)
rol
mov
outs
es
jb
mov
jmp
ins
cmp
push
cs
call
xor
sbb
cmp
ja
call
jmp
test
push
jae
pop
adc
push
fs
sbb
lss
jle
mov
jl
or
xor
xor
in
sbb
push
call
enter
lock
add
jge
(bad)
inc
add
outs
outs
or
or
je
adc
pusha
outs
outs
or
popa
or
pushf
out
mov
sete
pushf
(bad)
clc
jo
inc
pop
mov
imul
add
outs
mov
in
popa
das
jmp
and
ins
(bad)
loop
test
outs
push
mov
sti
push
push
mov
inc
(bad)
(bad)
fimul
outs
lods
pop
jmp
aas
add
sar
cwde
popf
or
xor
mov
adc
and
ja
add
es
in
mov
test
or
or
or
in
(bad)
sbb
mov
mov
and
dec
pop
ins
jl
data16
nop
stos
mov
mov
and
sub
add
in
mov
cmps
cmp
sub
pop
setne
push
add
test
push
sahf
clc
or
ja
cmp
inc
jle
jl
call
xor
add
fnstcw
cli
cmp
add
in
sub
mov
cmp
dec
ret
push
sub
sbb
(bad)
inc
cmps
adc
aam
test
push
adc
pop
daa
add
xlat
push
add
ja
(bad)
adc
and
mov
adc
shr
lock
adc
pop
pop
loop
mov
dec
dec
adc
(bad)
(bad)
mov
lock
sub
sbb
sar
(bad)
xor
xor
sub
sbb
jne
cmp
retf
(bad)
jb
mov
repnz
xchg
add
or
inc
sahf
shr
fwait
push
sbb
ins
js
jmp
mov
std
bsr
shrd
add
shl
(bad)
push
mov
imul
push
in
mov
sub
call
cwde
jbe
adc
scas
(bad)
call
dec
jmp
sbb
leave
jne
or
je
or
je
pop
sub
(bad)
pusha
ficomp
add
(bad)
clc
jg
pop
neg
neg
sbb
mov
mov
fild
rcl
rcl
rcl
cmp
jb
sbb
fidiv
jg
inc
inc
loop
adc
ret
clc
mov
lea
dec
xchg
push
jmp
xchg
push
popa
cwde
in
rcr
ficom
cmp
mov
add
add
ror
jne
cmp
jne
inc
mov
cmp
je
mov
push
in
iret
fist
jne
add
es
sub
dec
mov
and
dec
xor
mov
push
movzx
sub
(bad)
rol
lahf
push
and
xor
pop
dec
je
jcxz
pop
in
test
adc
push
or
xchg
jae
xlat
or
aad
mov
icebp
sub
test
stos
adc
jg
sbb
mov
shl
jb
adc
std
mul
out
jmp
inc
icebp
sub
jmp
cmp
jmp
push
xor
add
inc
idiv
push
shr
fild
jbe
jmp
jg
add
pop
lea
ins
lock
movs
sbb
inc
push
add
pusha
lds
and
mov
inc
xor
hlt
adc
mov
jae
shl
mov
mov
rcl
(bad)
fimul
xchg
cmp
(bad)
push
xchg
adc
out
jae
and
inc
sbb
call
or
rcl
lock
sbb
jg
sub
and
jl
mov
cmp
shl
sbb
pop
sub
adc
add
ret
retf
sbb
or
xchg
test
pushf
sar
push
or
dec
cmc
add
add
pop
sti
jmp
cmp
dec
movs
adc
test
add
and
dec
ins
and
push
push
inc
cld
fidivr
shl
jne
dec
ud0
xchg
or
test
hlt
nop
fisttp
mov
into
sub
mov
mov
pop
test
mov
sbb
pop
mov
sbb
(bad)
loopne
mov
pop
pushf
in
clc
out
sahf
sub
push
push
movzx
add
(bad)
(bad)
mov
lods
push
add
in
push
inc
ret
call
ins
in
inc
loopne
or
idiv
cmp
je
and
ja
outs
in
loopne
shr
mov
fdivr
jge
jge
jle
cld
dec
add
ret
in
sub
mov
or
fdivr
dec
ss
jmp
push
xchg
mov
cmp
fsubrp
mov
push
call
imul
in
adc
repz
or
lock
inc
shl
dec
test
mov
mov
push
in
lahf
sahf
or
clc
arpl
fadd
ret
cmps
or
jle
mov
add
pop
sbb
lods
dec
mov
leave
and
je
test
int3
call
dec
jne
out
fild
mov
push
add
cmp
in
xchg
jmp
adc
adc
jne
push
data16
sbb
or
pop
rcr
sbb
inc
mov
jl
push
shl
(bad)
icebp
retf
clc
pop
pop
pop
mov
jle
pop
loope
repz
in
sbb
add
sub
test
adc
sbb
xchg
das
mov
sub
jne
push
out
arpl
enter
mov
adc
push
xor
xchg
xor
or
pop
nop
adc
ds
bound
cmp
push
out
adc
or
cmp
mov
push
sbb
(bad)
jo
and
(bad)
jp
sub
jg
imul
je
dec
gs
inc
push
pop
je
mov
popa
outs
ins
pop
outs
bound
add
shl
inc
jns
ins
push
sub
sub
out
neg
sub
push
push
fs
jbe
imul
push
push
jae
inc
jno
es
jns
jle
sub
outs
pop
popa
sub
popa
addr16
dec
retf
cmp
outs
outs
paddusb
fnstenv
pop
pop
fist
fs
mov
xor
inc
sub
sub
push
ss
and
xor
mov
pop
fs
daa
jg
je
ins
sbb
dec
jle
(bad)
sub
jb
dec
inc
repnz
push
inc
lods
popf
rcl
ins
push
or
xchg
das
in
dec
bound
inc
inc
pop
push
inc
fwait
pop
mov
xchg
popa
aaa
outs
retf
mov
div
outs
aaa
cmps
dec
enter
sbb
cmps
jae
push
not
sbb
aaa
outs
outs
cmps
aaa
dec
punpckldq
pop
push
lock
adc
mov
jmp
and
mov
clc
push
setae
mov
enter
push
pusha
or
adc
retf
cmp
xor
or
add
or
dec
fs
or
jb
push
inc
add
jne
je
dec
shl
jb
add
or
cmp
push
ins
xor
(bad)
push
in
movs
push
ja
inc
inc
or
sub
scas
and
adc
xor
xor
inc
inc
jmp
mov
and
cwde
or
jno
ins
mov
sub
aas
pop
clc
dec
add
push
nop
shl
fld
mov
pop
test
leave
push
add
ins
mov
sub
jle
(bad)
pusha
les
push
aam
jmp
(bad)
fisttp
sub
inc
dec
jne
aam
pop
push
sub
fucomp
inc
push
push
loopne
lods
xchg
add
mov
nop
fwait
js
push
mov
mov
sti
pushf
fwait
jnp
mov
lods
sbb
loop
push
lock
dec
fidiv
stos
daa
mov
push
push
(bad)
lock
pop
cld
or
jnp
add
aas
add
xlat
test
(bad)
mov
ins
js
and
pushf
ror
mov
ror
dec
clc
xchg
cmp
lods
call
mov
sub
jge
jb
mov
add
shr
cmp
fst
rol
(bad)
jae
mov
dec
jmp
sbb
jmp
std
(bad)
adc
stos
jl
jmp
jbe
(bad)
int3
cmp
jne
test
repnz
and
nop
and
pop
out
and
nop
push
push
ficomp
fprem1
push
in
daa
mov
pushf
sahf
fdivr
xchg
push
mov
mov
dec
sbb
sub
mov
add
(bad)
xchg
add
mov
adc
sub
push
fimul
jno
xor
test
or
mov
inc
inc
xchg
lock
mov
into
adc
pop
push
sbb
shr
stos
mov
add
out
xor
call
lods
lock
stos
hlt
cmp
adc
add
add
dec
push
sbb
outs
and
(bad)
in
dec
pop
ins
inc
outs
inc
push
loop
je
jmp
jg
xlat
shl
fwait
es
leave
inc
mov
(bad)
es
dec
or
and
add
loop
shr
cld
add
cmp
(bad)
pushw
or
jo
mov
call
mov
mov
cmp
push
inc
mov
or
bound
push
rcl
mov
and
push
inc
fs
int
js
lock
mov
dec
cmp
jne
movs
ins
fidivr
aaa
adc
push
retf
gs
inc
push
xlat
xor
jno
jg
xchg
(bad)
jl
leave
and
cmp
je
push
dec
(bad)
adc
sub
sbb
ja
ret
leave
mov
sbb
and
or
jg
jmp
adc
xor
js
inc
sub
or
lods
sbb
pop
push
retf
arpl
xchg
sub
mov
pop
inc
xchg
pop
dec
inc
or
jae
xor
add
add
cwde
xchg
push
icebp
cwde
cli
hlt
fsubr
or
mov
xor
cmc
mov
jne
stos
xchg
cdq
imul
pop
and
xchg
test
add
out
dec
xchg
mov
jge
cmps
mov
ds
inc
test
cmp
pop
sbb
push
(bad)
xchg
pusha
sub
(bad)
call
js
pop
mov
jecxz
and
sbb
dec
sub
scas
inc
add
adc
scas
aam
jmp
mov
mov
cld
sar
jns
adc
shl
in
jb
add
push
sub
sar
pop
fiadd
cld
rol
add
inc
cmp
xor
and
inc
push
push
adc
pop
imul
adc
and
daa
xor
(bad)
clc
rcr
inc
lea
jle
jg
inc
fdiv
out
outs
test
pop
add
push
push
fucomi
mov
adc
add
mov
mov
xor
sub
(bad)
jg
push
pop
sbb
push
push
add
je
sbb
daa
mov
in
scas
push
and
test
sbb
add
cmp
mov
mov
sti
ja
fldcw
and
les
push
pop
cmp
mov
mov
inc
ja
adc
inc
and
sub
shl
dec
sbb
mov
sbb
jns
sar
mov
inc
add
std
sub
and
lock
add
push
fild
clc
push
and
std
jmp
mov
pop
ins
popf
das
mov
cdq
out
xor
pop
int3
lahf
xchg
mov
and
sbb
pop
push
or
sub
xchg
mov
mov
mov
mov
ja
popa
push
push
sub
mov
adc
and
imul
mov
inc
adc
pusha
test
addr16
mov
add
xor
sbb
call
pop
adc
call
push
fild
sbb
call
sbb
xchg
int
jo
std
add
pop
ret
pop
sbb
jl
adc
xchg
mov
dec
fs
popf
inc
xor
xchg
movs
add
lds
jmp
pusha
adc
xchg
jnp
jb
or
adc
test
je
fwait
stos
xor
and
lahf
inc
and
and
adc
dec
mov
mov
sti
ret
stos
inc
xor
fadd
mov
mov
jne
data16
aad
loope
les
jno
pushf
retf
sbb
gs
push
enter
add
sub
mov
cwde
movzx
adc
fs
mov
fcom
sar
popf
push
sahf
aad
in
pop
dec
test
mov
add
cmp
mov
xchg
mov
adc
or
loopne
xchg
in
dec
jno
sbb
cmp
in
mov
mov
push
or
mov
inc
shr
add
jb
push
mov
in
lods
pop
mov
fnstenv
cmp
jne
adc
add
xchg
das
mov
sub
sar
inc
out
pop
not
xor
arpl
push
cmp
inc
fs
sub
xchg
in
lods
cmp
cmps
pusha
fsubr
or
and
call
fsubr
inc
mov
sbb
call
inc
call
std
add
imul
adc
sub
push
and
sahf
test
ja
addr16
nop
lahf
jbe
and
(bad)
mov
pop
add
adc
mov
sbb
and
cmp
jne
or
mov
dec
mov
(bad)
cmp
sub
xor
dec
jne
mov
pop
adc
push
mov
dec
jp
sbb
(bad)
pop
mov
add
push
fwait
sub
cmp
mov
dec
(bad)
jno
(bad)
mov
mov
cmp
jmp
fwait
sub
mov
cmp
mov
fimul
scas
add
add
mov
adc
jne
shl
push
ret
js
xchg
call
sub
jp
mov
push
add
pop
mov
(bad)
mov
dec
add
mov
pop
add
test
and
mov
clc
or
outs
xchg
push
push
push
mov
mov
test
and
shl
mov
out
adc
test
push
call
fisub
mov
push
xchg
pop
call
jecxz
xor
test
or
sbb
or
je
jle
adc
dec
jp
fldenv
(bad)
or
xchg
stos
xchg
inc
ret
mov
lock
xlat
fucom
jecxz
cmp
push
push
stos
add
push
push
sub
aad
xor
clc
jb
cmp
dec
cli
fisttp
jne
jmp
dec
cmp
and
jbe
clc
sti
in
pop
test
adc
mov
push
loop
cmp
fild
sub
(bad)
sub
sbb
rcr
cld
out
sbb
push
dec
push
cmp
push
dec
dec
cmp
jb
push
imul
sbb
out
out
push
and
or
add
or
sub
adc
sub
adc
sub
pop
call
repnz
xchg
sub
add
jno
and
jmp
pop
jo
lea
xor
div
sbb
mov
cmp
ds
popa
bound
popa
push
inc
inc
rcr
repz
rol
pop
or
loopne
mov
dec
mov
mov
lahf
push
pusha
jb
or
cdq
imul
or
setg
lods
test
fcomip
inc
add
les
lahf
jno
xchg
mov
add
call
sar
dec
push
repnz
jb
movs
push
scas
lahf
lahf
or
pop
push
mov
outs
mov
imul
jecxz
in
sbb
or
popa
inc
pop
faddp
pop
jbe
sub
icebp
lea
mov
les
sbb
pushf
jmp
popf
jbe
es
loopne
sbb
fist
xchg
add
adc
rcr
add
pusha
lock
ss
in
(bad)
cld
or
mul
add
push
(bad)
nop
js
push
test
and
and
add
and
js
sbb
jge
dec
mov
js
pop
sbb
fnstsw
ret
xor
ret
movs
xor
(bad)
or
add
ror
(bad)
(bad)
and
ror
gs
sbb
loopne
push
xor
or
cmp
cmc
imul
add
add
add
sar
or
mov
push
mov
adc
inc
or
fsub
test
inc
hlt
dec
or
data16
mov
cmp
dec
xor
shl
daa
call
push
push
adc
orps
lock
rcl
xor
mov
in
inc
leave
subps
mov
xor
add
adc
jnp
jmpw
in
or
in
dec
repnz
and
rol
clc
add
mov
loopne
jg
jne
mov
sub
mov
push
xchg
stos
pop
shl
test
loope
push
sbb
or
es
or
pop
mov
out
add
rcr
cmp
jne
sbb
inc
ins
cmp
dec
rol
and
dec
neg
rcl
sbb
push
and
mov
xchg
adc
aam
mov
je
push
sbb
or
jbe
loopne
xchg
jmp
jmp
adc
inc
add
push
or
jl
pop
loopne
rcr
inc
inc
jl
dec
xchg
sbb
in
dec
in
inc
cmp
into
sbb
or
sbb
repnz
and
jne
lea
push
push
jmp
shl
or
fmul
sbb
inc
(bad)
in
lock
aaa
dec
jmp
add
and
adc
inc
aad
mov
jle
(bad)
cmp
and
push
mov
cmp
xor
mov
jmp
jle
rcr
aam
dec
sub
pop
call
mov
add
dec
imul
inc
or
xor
sub
mov
cmp
sub
repnz
jne
push
pop
pop
outs
cmp
dec
test
push
mov
fidivr
or
cmp
jmp
xchg
in
jae
dec
adc
int
inc
enter
sbb
hlt
hlt
jg
xor
jno
or
pop
stos
push
push
lock
push
push
jg
cmp
xor
pop
cmp
cmp
sub
in
inc
pop
sbb
push
mov
and
dec
jecxz
jge
ror
sar
popf
xlat
pop
sbb
fcomp
xchg
cld
or
call
adc
loopne
sbb
mov
push
lea
sbb
jmp
jle
xor
(bad)
cli
in
sbb
cmps
inc
mov
pusha
xchg
aaa
jns
dec
loopne
clc
or
lods
xor
jmp
cmp
add
or
clc
out
retf
fsubr
mov
mov
int
pop
mov
sti
out
and
shl
rcr
mov
xchg
movs
fs
jmp
push
mov
mov
ret
mov
inc
ret
es
call
mov
int3
fsub
fcmovnb
mov
ds
push
jbe
mov
pop
scas
xchg
test
add
cmp
in
lahf
(bad)
or
mov
mov
add
lods
xchg
add
push
das
push
dec
js
inc
add
adc
inc
loope
pop
pop
aam
fnsave
fnstsw
arpl
daa
call
ret
mov
push
add
gs
mov
push
outs
jo
daa
movs
jo
add
aas
or
je
jnp
outs
fld
and
mov
in
or
inc
mov
test
je
addr16
dec
pop
inc
test
add
bndldx
test
xchg
outs
or
fisttp
je
add
dec
push
clc
outs
es
mov
hlt
push
call
shl
sub
jb
je
dec
loop
pop
push
inc
sbb
and
pop
jmp
sahf
sub
rcl
hlt
or
inc
sub
cld
push
add
mov
ins
and
mov
mov
ror
sub
jmp
popa
push
fcomp
add
dec
dec
mov
std
cmps
add
fadd
cmp
pop
adc
cmp
enter
adc
push
cmp
inc
or
push
add
inc
and
inc
(bad)
repnz
out
sub
xchg
neg
adc
or
data16
sbb
cmp
mov
bound
dec
xlat
add
add
mov
adc
std
sbb
add
add
push
mov
sar
dec
(bad)
sti
ins
xor
sub
ror
dec
stc
ror
mov
and
jne
or
or
adc
adc
push
ret
push
cmp
inc
add
loopne
sub
pop
inc
mov
mov
ficom
sub
icebp
mov
fmul
or
ds
push
mov
int
pop
and
adc
shr
or
push
adc
inc
or
or
data16
imul
ror
add
push
push
jb
clc
xchg
lock
lds
cs
cmp
add
mov
and
jle
ins
pop
and
or
outs
cmp
xor
repz
push
push
push
adc
daa
add
fdiv
pop
cmp
jle
or
call
rcr
inc
add
or
xor
not
test
add
push
cmp
test
xchg
les
call
push
out
fsubr
addr16
dec
dec
push
push
pop
inc
dec
neg
or
dec
sahf
shr
sahf
imul
add
xchg
sbb
mov
dec
inc
and
fwait
push
ins
imul
and
leave
nop
inc
aas
sbb
jne
idiv
frstor
dec
fs
push
sbb
inc
push
dec
push
dec
inc
inc
adc
inc
inc
dec
dec
pop
inc
inc
inc
push
inc
and
pop
pop
push
pop
xor
add
outs
jb
les
mov
inc
or
sbb
pop
add
or
fsubr
adc
arpl
push
mov
adc
push
popa
fst
sbb
jle
ss
jo
cmp
sbb
fild
adc
xchg
lock
ret
stc
cmp
add
or
push
in
push
pusha
cmp
movs
loopne
jb
add
push
adc
dec
ja
sbb
loopne
loopne
xchg
or
jo
outs
je
pop
pusha
xor
leave
inc
les
cmp
dec
push
dec
inc
rcr
les
inc
mov
dec
inc
push
xor
push
push
dec
scas
mov
das
add
inc
sub
or
daa
add
sub
enter
das
test
retf
dec
inc
dec
push
pushf
or
dec
aaa
adc
dec
mov
dec
int3
data16
rcr
dec
dec
(bad)
icebp
jno
in
xchg
je
mov
mov
push
fild
push
adc
push
jl
pop
inc
fisub
xor
mov
sahf
add
outs
dec
sub
push
pop
adc
jo
inc
scas
sub
mov
adc
inc
sub
icebp
push
mov
jl
or
dec
mov
pop
adc
(bad)
or
xchg
push
xor
cwde
lock
mov
ret
pop
push
bound
mov
stc
pop
and
or
test
icebp
ins
mov
gs
xchg
retf
test
daa
adc
test
call
gs
pusha
add
sub
ja
in
adc
bound
inc
and
in
sub
or
imul
and
aaa
adc
es
push
daa
cmps
xor
test
pop
sub
cmps
fnstenv
lods
add
add
out
sbb
enter
push
mov
or
daa
pop
retf
and
test
jb
jae
sub
popf
inc
or
jo
popa
cmps
loopne
loope
mov
jbe
add
dec
outs
push
mov
cs
retf
lahf
mov
or
fs
fsub
jge
and
pop
fs
ja
arpl
movs
ins
pop
mov
pop
push
gs
inc
sbb
popa
cmovbe
xor
inc
stc
fs
mov
inc
dec
pushf
pop
inc
js
xchg
dec
xor
cmps
or
cmp
xchg
mov
scas
xor
push
outs
repnz
pop
push
sub
shl
push
or
imul
aas
pop
xchg
mov
push
cmovae
imul
ret
dec
push
dec
gs
jb
mov
push
jb
push
mov
mov
jne
mov
fwait
nop
ins
sahf
mov
inc
jne
daa
adc
pop
cdq
outs
or
bound
or
dec
jo
fs
or
aas
mov
scas
push
inc
shr
scas
or
push
addr16
js
xor
jae
test
ret
push
fucomi
popa
sbb
das
lods
pop
repz
dec
mov
sub
cmp
add
popf
xor
xchg
retf
and
jne
dec
ja
xchg
int
dec
inc
dec
dec
xor
push
cmp
xor
jae
les
popa
pusha
dec
push
jl
xchg
inc
dec
jmp
int3
mov
mov
sbb
loopne
je
outs
cwde
adc
adc
inc
pusha
in
in
aam
pop
lods
mov
fsubr
xlat
addps
mov
and
inc
pop
push
aaa
push
fs
int3
scas
xchg
inc
ins
rcr
mov
js
push
pop
imul
pop
dec
mov
clc
mov
fimul
sbb
sub
fsubr
bound
je
jns
dec
push
inc
sbb
hlt
lods
add
lock
push
adc
jge
nop
inc
and
push
ja
ins
mov
ins
and
adc
adc
jo
or
je
mov
add
cmp
or
mov
xchg
ret
or
nop
jns
pop
js
adc
push
ds
push
cmp
inc
outs
arpl
jecxz
(bad)
ss
dec
xlat
adc
jg
test
test
dec
outs
inc
arpl
or
adc
or
(bad)
jnp
inc
jno
xor
(bad)
outs
ins
bound
outs
js
mov
push
pop
lods
or
ds
inc
push
andps
inc
adc
xor
inc
cmp
je
nop
jnp
cmp
cmp
mov
dec
inc
pop
test
pop
cmp
mov
inc
inc
push
push
push
push
inc
or
ret
stos
ret
rcr
ja
inc
scas
and
cs
push
push
popa
fwait
or
ja
mov
push
ror
fs
pushf
pushf
pushf
pusha
pop
pop
push
pushf
pushf
pushf
pushf
push
dec
dec
inc
pushf
pushf
pushf
pushf
inc
cmp
xor
pushf
pushf
pushf
xor
and
leave
leave
test
adc
leave
leave
leave
adc
add
fs
add
iret
clc
hlt
dec
dec
cs
in
call
pop
rcl
daa
sub
push
cmps
dec
loopne
dec
dec
dec
outs
psubusb
ror
dec
dec
dec
dec
enter
dec
dec
dec
dec
mov
dec
dec
dec
test
mov
dec
cwde
xchg
push
sbb
pop
pop
or
xor
pop
mov
inc
mov
test
or
and
ret
or
fadd
inc
mov
xlat
sbb
pop
xchg
nop
jb
mov
iret
js
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
jb
jb
push
dec
dec
inc
jb
jb
inc
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
sbb
add
into
clc
hlt
pop
jb
jb
lock
call
jb
(bad)
aam
jb
jb
int3
enter
jb
mov
jb
cmp
lods
test
movs
mov
pushf
cwde
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
push
jb
jb
dec
dec
inc
inc
jb
jb
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
cmp
sbb
int
hlt
lock
cmp
in
call
cmp
(bad)
aam
cmp
cmp
int3
enter
cmp
cmp
cmp
lods
test
mov
pushf
cwde
xchg
nop
cmp
cmp
mov
cmp
jl
je
cmp
cmp
ins
push
cmp
pop
pop
push
push
cmp
cmp
dec
dec
inc
xor
jo
cmp
sub
loop
ss
pop
pop
xchg
ret
out
int
in
in
and
adc
in
in
or
add
xor
in
cld
int3
clc
hlt
pop
in
in
lock
call
in
(bad)
aam
fsubr
in
int3
bswap
les
mov
test
leave
leave
movs
mov
leave
leave
xchg
nop
mov
test
leave
leave
je
ins
push
fs
pop
pop
leave
leave
leave
leave
push
push
dec
dec
leave
leave
leave
leave
inc
inc
cmp
leave
leave
leave
leave
xor
sub
leave
leave
leave
leave
and
sbb
leave
leave
leave
leave
adc
or
fs
leave
add
cld
retf
clc
in
in
hlt
lock
call
in
retf
mov
mov
ror
xchg
xchg
or
enter
nop
xchg
xchg
mov
jb
jb
test
movs
mov
pushf
cwde
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
bswap
leave
leave
leave
push
dec
dec
inc
leave
leave
leave
leave
inc
cmp
xor
sub
leave
xor
mov
push
nop
cs
xchg
retf
pop
sbb
pushf
pushf
fmul
sbb
or
pushf
pushf
pushf
or
cld
retf
dec
inc
clc
hlt
lock
dec
dec
dec
dec
call
in
inc
fcom
shl
in
in
enter
xchg
or
mov
xchg
xchg
mov
test
add
xchg
xchg
mov
loope
xlat
dec
cld
(bad)
push
dec
jg
ins
mov
jns
push
adc
repz
adc
sbb
and
js
sgdtd
mov
pop
mov
scas
xor
lock
and
clc
retf
lods
xor
nop
fsubr
les
lds
into
ss
or
scas
nop
push
(bad)
or
cwde
mov
sbb
mov
mov
pop
or
add
movs
ds
xchg
imul
jae
rol
adc
xchg
xchg
pushf
ror
pop
mov
sbb
sub
push
mov
add
inc
add
in
mov
jne
jae
pop
pop
inc
pop
(bad)
mov
dec
das
inc
aas
cmp
dec
aam
inc
push
push
outs
add
push
xor
(bad)
(bad)
mov
push
or
pop
push
inc
xor
push
(bad)
test
(bad)
movs
cmp
in
mov
in
adc
or
test
and
out
fild
adc
sbb
mov
bound
xor
jl
mov
clc
and
inc
je
inc
aas
add
mov
(bad)
mov
(bad)
imul
xchg
and
dec
jae
push
jns
and
add
ja
in
dec
and
mov
imul
pop
imul
daa
mov
dec
imul
add
daa
dec
ret
or
lods
or
dec
clc
dec
ret
sbb
call
dec
gs
nop
xchg
and
mov
inc
fcom
outs
fild
pushf
push
mov
ret
jmp
or
push
call
shl
jnp
inc
int3
popf
ins
hlt
sub
ins
and
adc
dec
cwde
stos
dec
and
dec
(bad)
sti
test
push
push
inc
dec
es
inc
or
adc
arpl
inc
gs
and
and
pop
daa
(bad)
pop
aad
scas
sub
out
sub
sbb
lods
das
pop
xchg
popa
sub
jb
or
and
add
push
jne
test
mov
push
cdq
jge
mov
fs
inc
or
and
test
fisttp
add
sbb
sub
adc
add
ror
add
mov
jmp
je
shl
jp
push
cmp
sbb
into
adc
ja
pop
inc
lds
push
or
push
icebp
pushf
in
ja
dec
arpl
leave
or
gs
and
sub
js
in
fs
ror
add
xor
in
cld
sar
hlt
jb
jb
lock
call
jb
(bad)
aam
jb
jb
int3
enter
jb
sar
mov
test
jb
jb
mov
jb
jb
mov
mov
psllw
in
in
repz
cmc
in
in
div
clc
stc
in
in
cli
sti
cld
std
in
in
(bad)
jmp
loope
in
in
jecxz
in
in
in
out
jmp
jmp
in
out
rcl
in
in
rcl
aam
in
in
(bad)
xlat
fcomp
in
in
fcmovu
(bad)
in
in
(bad)
rol
in
in
ret
(bad)
(bad)
in
mov
leave
in
in
retf
int
in
in
iret
mov
in
in
mov
mov
in
in
mov
mov
in
mov
in
mov
in
in
mov
in
cmps
cmps
test
in
in
stos
stos
lods
lods
in
in
scas
scas
nop
xchg
in
in
xchg
xchg
xchg
xchg
in
in
xchg
xchg
cwde
cdq
in
in
call
in
lahf
add
add
xchg
in
mov
mov
in
jb
je
in
in
jbe
js
in
in
jp
jl
in
in
jle
pusha
popa
in
in
bound
gs
in
addr16
in
in
imul
in
outs
outs
push
push
cld
out
in
push
push
add
sub
jae
mov
imul
sub
jne
rcr
adc
sahf
rcl
mov
cmp
mov
and
push
je
rcr
or
sub
add
movs
sub
es
sar
out
add
mov
xchg
or
rcl
jae
pop
dec
cmp
aaa
jmp
dec
pop
sub
xor
xchg
in
bound
push
pop
je
in
add
cmp
adc
out
gs
and
cld
(bad)
mov
add
inc
das
iret
ret
cdq
xor
mov
ja
jns
mov
sub
mov
or
xchg
neg
add
mov
adc
adc
cmp
call
and
cmps
pusha
jl
adc
movs
add
sub
inc
adc
inc
outs
push
inc
cs
inc
sub
fstp
mov
rcl
or
pop
dec
scas
push
dec
jl
ss
dec
ror
ret
xor
pop
pop
(bad)
adc
push
sub
pop
inc
sar
icebp
mov
mov
sub
dec
test
mov
jl
pushf
inc
cld
(bad)
ja
add
shl
add
shl
add
mov
fsubr
shl
fisttp
clc
sbb
sub
inc
test
gs
fiadd
jb
adc
jecxz
ret
and
pop
mov
add
test
and
xchg
jle
es
cld
je
or
jne
jg
outs
cmps
(bad)
outs
add
mov
sbb
cld
(bad)
(bad)
cmp
jne
cmp
jge
mov
sbb
jne
push
fiadd
cs
xchg
retf
call
adc
add
imul
add
ds
jo
push
adc
push
int3
pushf
call
adc
sbb
xor
clc
mov
push
je
ins
jae
(bad)
pushf
rol
popa
cmp
mov
shl
(bad)
mov
add
test
dec
fdivr
xor
push
ret
ror
cmps
add
bound
xor
xor
cmp
adc
ins
bound
fist
add
adc
test
lock
adc
jecxz
xor
dec
sbb
mov
sbb
or
or
sti
mov
adc
dec
fld
and
test
sar
xchg
icebp
sub
out
js
loop
scas
rol
jo
mov
inc
adc
mov
jp
sti
and
inc
jne
or
dec
pop
inc
das
loop
ins
jo
js
inc
and
xchg
arpl
inc
loopne
popf
xor
std
xor
sbb
push
call
imul
mov
push
inc
inc
arpl
imul
sub
in
leave
leave
cmp
in
pop
ins
adc
jae
repnz
inc
pop
xchg
pop
retf
sbb
add
mov
jecxz
pusha
idiv
inc
adc
wbinvd
das
xor
mov
les
dec
xchg
sub
(bad)
rcr
cmp
add
jae
or
je
add
dec
movs
mov
pop
mov
rcr
aad
add
ret
repz
outs
nop
and
call
mov
nop
out
xor
or
and
inc
movs
stc
nop
dec
add
lds
cmp
(bad)
or
add
pop
rcl
mov
js
or
jbe
pop
mov
daa
out
add
xchg
retf
pop
add
aaa
mov
add
dec
adc
fs
daa
lods
add
inc
fnstenv
jmp
jmp
inc
popa
jae
imul
pop
xor
xor
pop
shr
dec
test
push
popa
imul
push
inc
fisub
sub
mov
rol
outs
ja
pop
pop
cmp
push
fidivr
add
pop
mov
or
push
push
ret
cmp
push
ret
xchg
or
mov
jns
xor
fwait
push
retf
xor
add
shr
cmp
or
xor
loopne
or
fisttp
in
ss
rcl
add
pop
fcomp
aas
and
add
inc
jb
rcr
addr16
mov
(bad)
mov
daa
lea
cmps
js
xchg
adc
dec
movs
fild
leave
js
sbb
test
aam
dec
cmps
mov
mov
in
fidiv
clc
sub
xor
(bad)
pop
(bad)
mov
inc
xor
or
(bad)
scas
pop
cmp
aad
push
push
xor
das
add
call
push
inc
dec
outs
je
daa
(bad)
pusha
sar
nop
mov
adc
dec
xchg
mov
inc
mov
xchg
jns
inc
sar
xlat
pop
inc
mov
and
jno
pushf
nop
adc
dec
fmulp
ins
ficom
test
fisub
xchg
xor
cmp
iret
and
and
pop
or
push
fild
mov
adc
nop
scas
pop
sbb
pop
outs
out
mov
nop
push
lods
das
mov
push
and
ret
jns
mov
fbstp
ins
ins
outs
ja
add
enter
(bad)
fbld
inc
dec
gs
jo
add
mov
xchg
cmp
jnp
in
fbld
jg
push
adc
out
loopne
in
das
mov
test
out
fbstp
push
jo
or
lods
xor
(bad)
xchg
fidivr
pusha
pusha
add
xlat
fisub
jg
and
cmp
call
rdmsr
xchg
adc
ret
or
dec
and
mov
pop
pop
daa
cmp
and
outs
or
fcom
add
sti
cwde
shl
dec
xor
stos
xchg
and
jne
xor
pop
adc
or
loop
mov
nop
and
sub
push
outs
js
add
ja
pop
xor
dec
adc
or
addr16
dec
mov
jecxz
jecxz
and
bound
int3
leave
xchg
mov
xor
imul
pop
enter
int3
fsub
js
es
or
inc
jns
popa
mov
ins
dec
outs
nop
mov
and
inc
jecxz
inc
jo
push
pop
in
je
cwde
adc
sar
inc
arpl
mov
and
shr
mov
xchg
dec
enter
in
sub
pop
pop
or
dec
mov
(bad)
sbb
pop
sub
pop
add
or
nop
nop
pop
test
push
(bad)
mov
cwde
in
and
mov
(bad)
cmps
mov
data16
and
out
sub
jb
dec
add
inc
out
out
adc
cmp
in
jbe
lods
jnp
dec
fs
jo
mov
and
pop
enter
in
rcr
inc
leave
test
movs
fdiv
inc
inc
retf
fdiv
inc
add
jmp
pop
and
xor
out
jo
loope
xchg
pushf
pusha
out
mov
(bad)
mov
and
shl
and
in
pop
xchg
pushf
mov
jle
out
hlt
out
fadd
push
outs
fs
nop
mov
and
xchg
fsubr
pop
jle
or
inc
leave
mov
setne
xor
sbb
add
lods
call
push
not
cmp
pop
push
push
sub
sbb
or
inc
dec
or
xchg
pop
pop
inc
jmp
or
ins
nop
shl
xchg
dec
push
cdq
fdivr
pop
or
dec
int3
mov
sar
adc
push
pop
jmp
pushf
fs
lock
push
imul
xor
sbb
pmaxub
jmp
jmp
shl
jbe
lods
mov
nop
mov
and
pop
rcl
fistp
jb
mov
pop
mov
nop
mov
bound
xchg
pop
repnz
push
in
inc
in
arpl
push
mov
mov
imul
inc
xor
pop
sahf
sbb
imul
in
pop
cmp
or
dec
xor
in
or
inc
mov
jo
aaa
pop
mov
in
and
loop
adc
popa
mov
or
xchg
pushf
nop
adc
or
inc
sub
adc
add
dec
xchg
push
or
or
push
fnstsw
pop
sub
pop
or
enter
xchg
mov
adc
cmp
aas
enter
lods
push
add
dec
out
xchg
push
daa
jno
addr16
jge
es
or
push
das
inc
xor
jmp
pop
pop
sub
enter
cld
out
push
sbb
add
aad
dec
cs
xor
scas
movs
lock
mov
lods
imul
imul
pop
and
ja
dec
add
cmp
daa
pop
icebp
cdq
and
jb
icebp
dec
lock
add
sbb
xchg
iret
pop
cmp
pop
add
repnz
add
or
and
jo
mov
inc
in
and
inc
imul
xor
push
and
jo
xor
adc
add
ja
outs
adc
push
fisttp
mov
repnz
(bad)
out
das
fstp
or
movs
repnz
or
ss
(bad)
sti
cmp
fild
test
pop
hlt
inc
daa
inc
sbb
mov
pcmpeqb
cdq
pop
sub
cmp
inc
and
push
ins
sbb
add
xor
hlt
sub
sbb
or
pop
xor
push
daa
mov
adc
adc
fdiv
jo
outs
inc
add
xchg
or
lds
adc
jae
add
push
mov
shr
(bad)
stc
or
ins
outs
jae
or
je
mov
mov
add
jmp
xchg
and
cmp
or
enter
aam
out
imul
push
or
push
aad
push
in
(bad)
cmp
dec
push
mov
jnp
sbb
push
loopne
dec
frstor
adc
sub
cmc
div
repnz
nop
cmc
mov
neg
mov
add
ret
icebp
mov
inc
or
shr
outs
lock
or
or
inc
push
adc
data16
dec
push
imul
inc
xor
das
sbb
js
inc
popa
sar
rcr
dec
xchg
cmps
sbb
add
or
lds
pop
and
loopne
repnz
adc
out
jbe
jnp
push
dec
call
ret
not
jmp
pushf
lahf
adc
cmp
pusha
mov
sub
ds
dec
inc
imul
xchg
xchg
jns
arpl
enter
push
jp
or
and
push
fwait
inc
mov
xor
mov
dec
sub
mov
popf
stos
inc
gs
in
out
jae
lahf
lods
popf
inc
outs
fs
imul
sahf
or
call
(bad)
out
sahf
scas
sub
in
or
inc
xor
cmps
pop
xor
repz
dec
add
adc
push
or
add
push
jbe
push
and
adc
cmp
dec
ret
add
add
in
pop
movs
or
das
sar
add
push
cwde
mov
mov
ret
in
xchg
clc
add
and
pop
ret
add
call
repz
popa
js
popa
jo
arpl
inc
or
cmp
loope
pop
sti
pslld
in
inc
jne
or
daa
daa
iret
xor
lods
loop
xchg
xchg
xchg
xchg
std
dec
xor
mov
leave
mov
jb
in
xchg
enter
outs
sbb
jb
fld
add
cmp
cmp
sbb
pop
inc
sahf
pushf
pushf
pushf
loopne
add
dec
dec
dec
lods
lock
js
xchg
daa
daa
mov
enter
int3
adc
push
fs
leave
cwde
jmp
pop
mov
in
aaa
or
movups
dec
into
or
push
fldcw
jne
cmp
push
or
sub
inc
cmp
dec
add
movs
jecxz
dec
popa
outs
test
pop
sbb
push
popa
jl
out
stos
dec
fisttp
enter
add
push
xchg
xor
dec
fisubr
mov
inc
pop
xchg
xchg
ins
add
dec
xor
bound
mov
and
push
jmp
cld
outs
fsub
fldcw
(bad)
outs
mov
add
leave
fldcw
movs
mov
in
jns
movs
dec
mov
leave
ror
imul
and
pushf
cmp
adc
leave
and
sub
add
movs
or
inc
fs
ret
and
xchg
or
jl
adc
adc
sbb
in
lahf
idiv
inc
repnz
mov
inc
leave
xchg
mov
jl
add
shr
mov
shl
retf
pop
xchg
mov
jo
rcl
movs
jmp
in
pop
mov
adc
add
scas
xchg
ja
bound
sub
nop
and
add
mov
div
push
(bad)
and
jl
aas
loopne
sbb
jns
and
jns
nop
retf
push
outs
adc
add
leave
(bad)
or
sbb
jbe
push
arpl
sub
stos
push
outs
jae
outs
add
cmc
add
test
add
pop
and
jno
xor
in
or
rol
sbb
push
loope
lods
or
ret
in
mov
inc
xor
inc
or
inc
dec
in
sub
aaa
inc
xor
xchg
js
push
leave
push
or
sub
xchg
sub
mov
lods
push
leave
pop
adc
scas
cmp
inc
adc
xchg
or
mov
shrd
fs
xchg
int3
adc
mov
or
push
cmp
mov
xor
add
aaa
pusha
add
arpl
daa
imul
ins
sti
or
pop
xor
jmp
gs
outs
jbe
jecxz
sbb
call
cmp
add
dec
ins
mov
jle
dec
ins
fs
add
ja
sub
sub
inc
adc
xchg
or
cmp
cwde
mov
sub
push
xor
outs
and
xlat
arpl
push
add
leave
das
rcr
rcr
sub
add
fbld
or
outs
jo
and
pop
movs
sahf
mov
jmp
push
lds
es
mov
movs
fldcw
mov
cmp
mov
and
add
pop
lods
out
mov
outs
arpl
imul
add
push
aas
xlat
pushf
or
inc
or
or
es
add
or
jg
test
push
test
add
std
or
hlt
or
cmp
(bad)
push
and
lock
and
add
repnz
int
push
or
iret
inc
mov
dec
dec
outs
setl
xor
jb
xchg
daa
daa
icebp
das
adc
in
adc
in
outs
adc
sahf
push
retf
syscall
add
adc
add
dec
fwait
wbinvd
push
aaa
mov
sub
call
inc
mov
inc
cmp
or
push
pop
and
test
jne
mul
sbb
pop
ins
ror
and
adc
push
mov
test
ror
test
sbb
jecxz
xor
aaa
int3
push
or
mov
(bad)
shl
fadd
xor
xor
push
(bad)
fcmovne
inc
add
inc
sub
aam
jae
jl
lds
and
cmp
retf
cmp
sub
or
in
pusha
mov
ja
push
test
inc
jae
popa
add
push
dec
and
jne
pop
jp
xor
sbb
hlt
aaa
nop
aaa
cwde
add
js
adc
or
pop
dec
fisub
or
in
add
aaa
add
and
and
push
rol
aaa
fcomp
sbb
xor
xor
add
(bad)
movs
and
scas
jno
jecxz
push
push
js
jno
mov
es
fwait
add
jne
xor
and
cmp
rcl
xchg
mul
ror
sub
jge
ja
mov
add
retf
jb
xor
or
lods
sbb
or
adc
gs
out
xchg
dec
or
das
add
int
sbb
cmp
shl
push
test
push
mov
pop
in
test
or
aad
ror
jns
and
inc
or
or
push
sahf
es
lahf
push
jnp
jnp
add
jno
adc
ror
sub
push
(bad)
and
sub
add
mov
retf
push
pop
cmp
test
dec
mov
push
xor
add
or
test
xchg
movs
out
cmpps
int3
nop
scas
pop
dec
mov
inc
adc
push
mov
or
iret
pop
mov
lods
repz
call
push
or
mov
add
push
jmp
cmp
dec
inc
push
outs
push
inc
cwde
fstp
xor
xor
cli
mov
scas
mov
jg
or
out
add
inc
ins
pop
(bad)
sbb
syscall
add
pop
or
xor
xchg
es
dec
sbb
mov
push
inc
mov
xchg
add
inc
sti
mov
hlt
outs
adc
add
xchg
inc
jno
adc
push
or
iret
cmp
call
and
in
iret
lea
and
cs
sub
sysret
sub
movs
push
loop
mov
add
sbb
fsubp
inc
enter
shr
fs
out
ins
test
cmp
sub
or
shl
(bad)
aaa
dec
syscall
mov
push
inc
aaa
or
mov
sbb
cmp
sbb
mov
xchg
adc
jns
enterw
call
sbb
sub
jb
cmp
pop
sbb
pop
xor
fwait
rol
fcomp
nop
call
add
nop
sbb
sbb
sbb
push
cmp
dec
sbb
and
fadd
xor
ror
and
inc
and
pop
jmp
cmps
mov
sbb
pop
push
jp
lock
adc
push
pop
mov
rol
pop
clc
cmp
repz
ror
xchg
and
sbb
in
sbb
push
jmp
scas
in
jne
ror
sbb
adc
or
add
test
inc
push
and
push
mov
icebp
dec
mov
add
jg
jb
enter
sbb
sbb
sbb
cmp
sar
adc
es
push
inc
imul
stos
outs
sbb
rcr
add
add
sbb
in
sbb
inc
adc
and
shr
data16
sub
fadd
pop
aaa
push
retf
ret
js
cld
mov
mov
fs
jmp
mov
out
push
adc
pop
or
add
ds
jo
or
rcr
into
inc
data16
mov
adc
mov
add
and
test
and
or
mov
mov
xor
(bad)
sbb
sub
xchg
and
add
adc
ss
add
cdq
cli
das
inc
cdq
cli
add
cmps
sbb
and
(bad)
in
es
and
add
jne
pop
lods
adc
cli
pop
or
xor
call
outs
xchg
add
sub
inc
inc
add
or
bound
sub
add
(bad)
pop
lock
in
out
add
lock
add
mov
std
in
loopne
pop
out
(bad)
mov
leave
push
rol
and
mov
cmps
mov
xor
(bad)
rcl
xor
(bad)
enter
loopne
je
pop
sub
jmp
push
and
jmp
xor
sub
push
adc
and
sub
sub
cs
xor
inc
adc
pop
pop
pop
mov
mov
or
les
int
push
pop
ja
pop
retf
in
pop
cld
pop
ret
bsf
shr
fild
fnstcw
cmps
adc
ins
cld
and
pop
jmp
or
dec
sbb
scas
or
inc
cmp
mov
or
sub
inc
sub
in
cs
pop
clc
add
ror
jg
(bad)
addr16
pop
jb
push
fiadd
jg
fistp
lods
fild
pop
mov
adc
std
iret
and
jle
cmp
jg
adc
mov
stc
push
jg
and
push
pop
and
mov
pop
jg
mov
pop
cmp
add
or
and
mov
mov
mov
neg
ret
(bad)
add
push
fs
mov
dec
adc
push
add
jmp
sar
xchg
adc
and
dec
or
dec
cmp
je
data16
and
sub
jl
or
mov
and
and
fdiv
jae
and
outs
and
mov
adc
xor
pop
jb
jl
mov
pop
in
mov
fcomp
test
dec
adc
or
(bad)
and
push
sbb
pop
or
js
jbe
or
dec
jmp
cmp
or
and
nop
mov
les
inc
jne
adc
xchg
cmc
mov
popa
mov
test
test
or
mov
and
or
inc
pop
sub
pusha
nop
cmp
adc
das
and
shr
adc
nop
clc
lock
call
clc
ins
ins
sahf
inc
lock
out
ss
test
or
adc
(bad)
fadd
add
int3
shl
or
or
test
in
shr
mov
mov
ret
and
fldenv
inc
push
jle
icebp
pop
adc
cmp
jl
(bad)
sti
sub
popa
pop
(bad)
and
es
out
inc
add
inc
jo
pop
cwde
mov
retf
inc
mov
or
retf
test
jg
hlt
add
mov
dec
sar
xchg
cli
sbb
mov
imul
mov
or
jle
int3
loopne
jo
lods
inc
and
push
js
jmp
xor
hlt
push
imul
and
inc
adc
sub
dec
and
push
push
cmc
pop
cmp
push
push
add
ins
adc
xor
clc
lods
inc
cli
jl
in
xor
push
in
lock
push
add
inc
push
sub
xlat
mov
or
mov
test
in
jo
cdq
sub
cmps
push
push
lds
daa
lock
mov
xchg
js
and
dec
ret
sub
into
test
les
cmp
jne
add
cs
xor
jmp
sub
sar
out
jne
adc
xchg
or
or
xor
and
fwait
jle
out
or
shr
aad
test
or
dec
or
out
lds
test
pop
inc
and
xor
dec
adc
out
call
pop
or
(bad)
std
call
add
popa
xor
mov
xchg
jno
inc
enter
dec
ficomp
push
or
xchg
adc
fnop
xchg
outs
push
(bad)
js
imul
or
mov
enter
out
das
loopne
or
je
and
or
sar
out
add
mov
jnp
fld
pop
(bad)
not
push
je
ucomiss
inc
dec
jne
jmp
repz
test
or
fidivr
movs
test
fiadd
or
inc
mov
leave
jne
or
jns
neg
mov
int
xor
inc
dec
mov
ret
mov
xor
sti
sbb
cmp
jb
push
pop
mov
push
ja
(bad)
push
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
push
rol
inc
sahf
sbb
sub
dec
inc
pushf
add
data16
fstp
lods
data16
dec
scas
in
jmp
mov
ins
jp
add
mov
fistp
in
adc
leave
push
mov
adc
xchg
adc
ret
out
push
and
(bad)
cwde
jmp
ret
sub
pop
sub
test
sbb
ret
and
add
lea
pushf
and
div
jl
adc
jno
add
ja
xor
ins
ins
or
test
clc
or
sbb
adc
cmp
mov
(bad)
and
add
or
push
xchg
add
test
test
sbb
push
inc
scas
or
mov
out
(bad)
fst
pop
popf
xchg
daa
and
jg
or
fild
and
mov
shl
test
pop
imul
shr
push
mov
add
mov
lahf
std
mov
cmp
rcr
(bad)
jp
add
ret
ffree
ffree
ffree
pop
ret
push
in
sar
in
jmp
cld
in
nop
(bad)
xor
dec
and
and
mov
dec
inc
pop
test
mov
mov
sbb
add
cmp
add
add
loope
and
(bad)
add
aaa
or
and
adc
mov
and
das
inc
lahf
iret
mov
inc
push
loop
movs
xor
out
dec
and
retf
inc
mov
cmp
push
nop
loop
mov
lea
or
mov
pushw
je
push
pop
sahf
les
call
imul
(bad)
repnz
mov
ins
jmp
mov
fcom
outs
push
jb
mov
inc
mov
add
add
test
repnz
popa
hlt
ja
xor
mov
leave
lds
mov
ins
cmps
inc
sub
mov
jmp
push
push
xor
pop
and
aaa
(bad)
adc
mov
push
repnz
inc
sti
mov
cld
add
mov
add
mov
cmp
add
push
retf
rol
inc
add
ins
xchg
fild
add
cmp
ror
fld
fcomp
not
pop
dec
setne
jmp
add
out
aaa
cmp
pop
add
test
inc
cs
and
js
inc
add
dec
pop
xor
pop
movs
in
add
pop
fdivr
adc
and
ss
clc
sahf
mov
(bad)
adc
dec
mov
mov
mov
outs
push
je
call
in
add
mov
add
sub
jne
pop
das
xchg
xor
ficomp
pop
cmp
cmp
jo
jo
mov
fs
sbb
scas
sbb
adc
adc
clc
in
xor
outs
aaa
test
mov
sahf
pop
xchg
mov
mov
rcr
xchg
test
outs
add
dec
rol
sub
jle
cld
out
and
add
inc
ja
mov
and
inc
cmp
ja
push
push
jo
mov
sub
int3
ret
mov
push
mov
(bad)
cmp
hlt
fild
xchg
dec
cmp
add
out
mov
push
adc
clc
xor
rcl
add
dec
sub
fsub
push
stos
or
imul
or
and
cs
js
push
mov
mov
je
cld
adc
js
push
cld
lods
out
adc
(bad)
(bad)
sahf
retf
inc
inc
(bad)
loopne
cdq
test
or
dec
jl
adc
dec
cmps
jge
sbb
(bad)
popa
int3
adc
push
or
inc
sbb
les
add
mov
outs
jnp
or
xor
mov
jae
inc
pop
ret
lds
fcom
push
call
inc
mov
jne
nop
pop
mov
fucomi
adc
fdiv
jae
in
aaa
xor
jmp
push
ja
out
sub
cmc
sub
movs
or
in
push
xchg
jno
sahf
shl
hlt
in
pop
lods
jns
mov
push
adc
add
xor
loop
daa
jl
push
mov
inc
or
and
jl
leave
and
add
(bad)
jge
cmp
adc
lds
mov
push
sub
mov
loop
cmp
xchg
call
xor
dec
mov
nop
inc
imul
sub
js
call
push
adc
and
push
and
nop
inc
push
movs
in
xor
add
mov
cmps
cmp
push
push
hlt
mov
add
(bad)
xchg
push
mov
aam
push
fst
sub
pop
and
loopne
inc
mov
mov
test
push
or
mov
test
add
idiv
ret
jle
outs
add
ss
inc
sbb
sahf
cmp
adc
repnz
hlt
clc
es
hlt
cld
push
jnp
cmp
ins
inc
mov
sahf
in
mov
xor
ret
sbb
outs
mov
add
pop
mov
sbb
push
rcl
add
bound
rol
movs
add
mov
neg
push
ss
xchg
or
ret
call
jmp
je
test
jne
push
in
lods
ja
inc
or
hlt
pop
ins
bound
xor
inc
neg
add
aaa
aas
adc
retf
mov
ret
test
jno
not
ret
push
je
mov
sbb
add
mov
or
add
stc
push
mov
call
nop
lods
mov
cmp
in
pop
cwde
in
mov
jmp
inc
push
adc
fnstsw
(bad)
sub
sar
add
jb
or
mov
pusha
adc
push
les
mov
push
sbb
push
retf
and
adc
aad
sbb
aaa
sbb
push
outs
xchg
es
outs
test
mov
pop
xchg
ret
idiv
or
sub
or
push
data16
add
dec
sbb
sub
rol
mov
fimul
lods
out
inc
call
cmp
jae
js
pop
out
sub
rcl
ret
adc
add
movs
push
inc
push
jb
fs
mov
push
fs
pop
pop
pushf
push
cdq
dec
in
dec
and
mov
sbb
repnz
mov
rcl
sbb
pop
rcl
dec
aam
push
je
(bad)
adc
or
or
jae
(bad)
imul
inc
pop
jnp
pushw
cmp
cs
icebp
xchg
pop
call
inc
mov
pushw
popf
call
cli
sbb
ror
xor
(bad)
sub
jbe
push
lea
mov
lods
and
daa
sbb
jne
mov
push
mov
ret
jne
lea
adc
add
sub
pop
pop
and
mov
pcmpgtw
or
cmp
aaa
mov
shr
popa
push
fisubr
stos
push
xchg
adc
pop
and
or
push
sbb
retf
call
jo
push
mov
data16
stos
xor
add
cmp
mov
sbb
fcom
sub
lahf
or
(bad)
loope
(bad)
(bad)
cs
in
lock
sti
pop
or
shl
mov
mov
nop
out
fldenv
pop
jbe
mov
sbb
jb
dec
pop
xor
je
sbb
or
popa
rol
hlt
cmp
js
mov
push
or
js
adc
shl
sub
arpl
imul
jmp
imul
fsubrp
inc
ret
add
and
test
fst
test
xchg
pop
fld
dec
pop
add
nop
gs
xchg
pop
add
push
test
cmp
or
loope
push
addr16
mov
cmp
add
dec
ss
and
fild
pcmpgtw
mov
sbb
or
cmp
jmp
or
and
call
or
mov
loopne
xor
sub
fwait
inc
add
pop
dec
jl
icebp
mov
aad
xchg
adc
mov
imul
push
inc
sbb
(bad)
aad
inc
push
inc
xchg
inc
fild
movs
fnstcw
cmp
call
call
pushf
aam
cwde
(bad)
cmp
sub
cmp
clc
(bad)
pop
lods
sbb
mov
dec
xor
cmp
retf
and
shl
out
mov
xor
add
xlat
xor
pop
inc
in
icebp
sub
add
lea
out
sbb
dec
sbb
push
fadd
in
scas
or
ficom
stos
dec
jne
mov
sub
repnz
rol
cmp
jecxz
(bad)
or
cld
scas
data16
jmp
adc
aam
cs
test
rcr
adc
mov
neg
in
stos
xor
mov
push
push
sbb
pop
mov
add
sub
je
jge
sub
push
sub
jae
add
xor
out
movs
xchg
sbb
xchg
mul
and
and
jmp
fmul
je
sub
xor
jb
add
js
push
cmp
mov
cmp
add
and
pop
pop
(bad)
rcr
push
or
dec
jb
jl
out
or
dec
(bad)
int3
inc
clc
ret
and
mov
sbb
outs
sbb
inc
xor
mov
sahf
out
fnstsw
push
add
and
add
or
dec
xlat
cmp
inc
sbb
mov
xor
clc
test
mov
push
push
push
jno
inc
lds
push
sti
out
bound
fmul
dec
sbb
out
mov
sub
je
imul
pop
sbb
or
movs
fstp
mov
out
bound
cmp
aas
jno
jmp
mov
xor
dec
cmp
test
lock
into
mov
pop
jmp
and
ret
sbb
dec
pop
add
add
mov
mov
pop
ds
xor
inc
sub
movs
je
mov
adc
xor
or
aas
or
pop
mul
cld
call
pop
jg
std
in
sbb
(bad)
mov
and
push
jmp
daa
fstp
inc
cmp
ja
or
fstsw
jecxz
add
popf
ins
ret
dec
dec
mov
and
inc
push
xchg
lods
clc
and
add
in
pop
mov
shl
ret
fidiv
inc
je
mov
and
outs
or
je
mov
inc
je
mov
dec
loope
xor
mov
add
adc
or
mov
div
jne
fmul
add
cmp
mov
adc
imul
fcmove
lock
jno
mov
or
xor
add
cmp
rcl
imul
inc
pop
cmp
jmp
in
inc
dec
std
add
stos
mov
shr
in
loop
xchg
jg
sar
push
mov
neg
jmp
or
outs
mov
inc
xchg
push
push
mov
cwde
add
mov
cmp
push
mov
inc
dec
mov
in
or
jg
cmp
add
mov
dec
std
cmp
sbb
inc
popa
or
mov
adc
adc
jle
mov
jl
mov
mov
adc
in
pop
cmp
jo
add
jle
clc
sbb
mov
daa
dec
jge
push
mov
pop
mov
fcmovu
test
dec
jp
xor
sbb
push
sub
in
jae
pop
cs
shl
scas
ds
lea
(bad)
jmp
outs
rol
dec
inc
fld
mov
je
add
sub
mov
add
or
add
outs
cdq
cld
imul
cmc
sub
inc
push
mov
sbb
inc
push
inc
sbb
or
jge
add
stos
pop
sbb
dec
fiadd
and
clc
cmp
jl
js
xor
test
mov
neg
and
pop
jmp
outs
inc
movs
je
js
loop
sub
rcl
push
stos
xor
or
xchg
retf
mov
call
mov
mov
call
leave
mov
mov
xor
jmp
mov
cmp
push
jg
cli
adc
mov
ja
loopne
fsubr
fdivp
je
mov
mov
into
div
mov
inc
mov
lock
jne
shl
loop
jb
jmp
fist
and
add
or
dec
adc
pop
js
jne
jno
les
adc
inc
ja
sbb
mov
nop/reserved
sub
aaa
inc
lea
loop
inc
(bad)
sbb
cld
je
push
push
cmp
or
or
aas
push
push
or
mov
fld
push
mov
test
inc
mov
push
in
cs
inc
add
and
fcomi
jge
and
adc
and
sub
inc
sub
fdivr
jbe
sub
sbb
into
cmp
sub
sub
jns
fs
xor
sub
xor
leave
dec
add
push
jmp
dec
inc
nop
test
(bad)
add
icebp
cmp
xor
adc
ror
sbb
and
or
jne
test
jl
add
cmp
sbb
mov
ss
sar
mov
rcl
nop
push
xlat
push
js
les
fabs
push
add
(bad)
dec
aas
aas
xor
frndint
xor
scas
cld
cli
fcomp
(bad)
neg
or
mov
cli
(bad)
std
pop
call
call
or
mov
mov
shr
sub
xor
jmp
add
(bad)
jns
cli
xor
cmp
jge
cli
or
cmp
jb
mov
fnstsw
dec
js
dec
and
pop
mov
add
leave
jmp
mov
pop
xchg
sub
push
scas
shr
cmp
outs
fimul
ret
sbb
ret
adc
add
fadd
ror
into
mov
jmp
pop
sub
mov
test
or
nop
xor
jmp
pop
adc
jl
mov
cmps
sbb
jae
mov
add
ins
mov
or
mov
sbb
mov
xchg
inc
mov
lea
or
jg
push
sub
mov
and
jne
out
mov
push
jmp
mov
add
stos
aas
and
pop
lock
push
jmp
enter
cmp
pop
xor
(bad)
div
pop
jmp
jecxz
rcl
sbb
stos
cmp
xor
push
or
(bad)
mov
mov
pop
pop
sti
mov
f2xm1
fwait
dec
pop
das
push
mov
push
call
cmp
je
or
icebp
daa
rol
mov
pusha
jne
inc
sbb
jnp
icebp
je
and
fistp
sub
pop
add
jg
cmp
mov
jmp
inc
push
outs
and
mov
dec
fistp
jmp
lods
les
test
mov
xor
lods
and
add
and
push
add
and
sbb
or
fimul
mov
fiadd
jmp
aaa
mov
neg
(bad)
es
push
inc
imul
call
cmp
add
(bad)
and
dec
repnz
jl
xlat
push
lea
inc
std
dec
retf
xchg
test
push
inc
pop
addr16
in
test
cmc
push
adc
mov
sbb
nop
pop
push
or
sbb
pusha
pop
add
xor
sub
add
lock
int3
cmp
scas
xor
or
rcr
das
adc
sub
push
push
add
scas
daa
nop
(bad)
mov
and
fucomi
daa
mov
sub
(bad)
ja
and
out
nop
test
add
ror
fstp
fwait
mov
jg
jecxz
pop
(bad)
mov
mov
mov
push
repnz
pop
sbb
scas
in
sbb
dec
sbb
mov
inc
push
leave
(bad)
jle
pop
sub
div
sub
fist
fld
inc
adc
xchg
hlt
shl
frstor
div
push
adc
adc
mov
fbld
je
clc
ss
call
dec
or
cmp
inc
stc
inc
sbb
jae
ins
jl
mov
out
ss
imul
fwait
(bad)
add
adc
call
sbb
sbb
fild
xor
clc
push
faddp
sbb
test
retf
movs
dec
mov
xchg
xor
sbb
push
or
add
inc
psubq
add
(bad)
or
or
daa
inc
retf
mov
cmp
push
and
call
jae
or
enter
loopne
call
and
pop
ret
mov
inc
hlt
mul
adc
mov
les
and
andnps
(bad)
jbe
add
les
dec
movs
jg
inc
test
pop
shl
pop
jo
(bad)
lods
add
adc
(bad)
ja
and
jb
or
mov
jb
sti
ins
je
cmp
ja
adc
xchg
or
add
inc
dec
jne
ucomiss
mov
aas
cdq
idiv
imul
or
cs
ret
inc
sar
add
sub
ds
ds
add
ins
popf
mov
jnp
shl
push
gs
std
std
jmp
xchg
push
mov
mov
retf
xor
mov
mov
jg
(bad)
(bad)
fisub
and
(bad)
cli
add
add
pusha
adc
pop
push
les
arpl
dec
data16
stc
mov
mov
add
lods
retf
add
ret
lds
mov
cdq
jmp
add
or
dec
in
sub
imul
xor
imul
sub
mov
mov
pop
inc
cmp
sbb
add
ss
sub
sub
inc
cld
inc
cld
or
sbb
inc
ret
jbe
cmp
ins
(bad)
dec
cs
(bad)
out
in
or
jp
sbb
fistp
sbb
lock
inc
adc
aad
adc
sub
cmps
mov
mov
(bad)
(bad)
push
adc
pop
sbb
mov
inc
outs
cmp
das
test
mov
test
push
cld
adc
test
add
aas
test
xor
outs
fidiv
hlt
out
xor
and
add
retf
sbb
adc
aaa
and
add
loope
dec
out
nop
push
and
xchg
inc
test
mov
sbb
scas
iret
ror
and
les
mov
aam
pop
fmul
push
popf
xchg
mov
fs
pop
pop
ror
leave
cmps
mov
cmp
pop
mov
in
sub
shr
and
mov
dec
out
cmp
ret
lock
ret
in
fs
fbld
cmp
jne
xchg
sti
jbe
inc
xchg
push
lea
or
cmps
(bad)
(bad)
in
scas
mov
add
xor
outs
pop
push
repnz
jge
test
stc
pop
fwait
lock
nop
(bad)
xor
jmp
add
sbb
imul
cwde
inc
add
adc
dec
retf
iret
xor
push
inc
shl
mov
stos
lock
mov
and
mov
aad
push
xchg
es
call
and
div
and
mov
ss
xor
mov
sbb
mov
cmp
push
adc
push
hlt
cmps
mov
clc
(bad)
jbe
cmp
rcl
jns
in
add
add
xor
mov
in
sbb
xor
sub
jns
jge
push
dec
(bad)
je
mov
adc
mov
xchg
push
and
daa
pop
sub
cmp
adc
and
xor
inc
push
or
xor
sar
dec
jns
inc
cs
add
push
xchg
ins
mov
add
das
es
fucomip
jo
(bad)
aam
fcom
push
adc
sub
or
mov
inc
cmp
pop
inc
mov
loop
dec
fdiv
inc
lock
fidivr
jmp
add
jb
movlhps
div
cmp
imul
rcr
mov
pop
jmp
call
adc
or
fsub
dec
jne
mov
push
ss
loopne
inc
fiadd
ja
add
movzx
test
test
add
push
dec
mov
inc
push
rol
add
cmps
jge
dec
or
adc
push
cmps
fnstcw
sar
test
mov
xor
out
push
dec
rcr
jle
cmp
inc
push
mov
xor
loope
push
adc
and
popa
jp
jl
mov
or
ds
adc
scas
sub
popf
dec
push
lea
in
in
jmp
inc
aam
push
enter
aam
dec
mov
scas
add
inc
sbb
xor
call
in
sub
xor
xchg
xor
leave
mov
pop
xchg
mov
je
add
jmp
out
pop
mov
push
pop
in
loop
(bad)
rcr
add
dec
sbb
mov
inc
mov
push
dec
adc
ins
pop
sahf
faddp
in
xor
fst
inc
sub
add
push
jle
xor
push
add
adc
shr
lea
and
add
push
jmp
or
fistp
sub
jmp
cmp
dec
mov
std
push
inc
sub
cmp
mov
movs
repnz
dec
rol
push
mov
xor
mov
out
or
aam
pop
push
fnstenv
(bad)
or
leave
jo
cs
push
and
add
or
or
add
outs
cmp
mov
add
or
enter
hlt
dec
pop
test
push
add
pushf
jb
and
mov
xchg
dec
repnz
xchg
xor
sub
clc
in
xchg
xchg
dec
movs
or
mov
cmp
and
push
icebp
sbb
xchg
inc
jns
cdq
nop
retf
add
add
loopne
push
xchg
xor
jae
iret
xchg
jns
mov
and
dec
es
xor
adc
sbb
add
cmp
rcr
and
push
shl
add
sub
cmps
jns
test
(bad)
jmp
lods
or
cs
pop
or
outs
or
and
push
enter
imul
stc
stos
adc
nop
jmp
mov
and
scas
mov
cmp
adc
push
dec
jmp
fadd
and
xor
sbb
mov
loopne
jmp
(bad)
or
cmc
pop
sbb
jmp
dec
mov
adc
test
iret
popa
or
sbb
aam
inc
arpl
cmp
jne
push
dec
jo
or
adc
dec
and
add
adc
(bad)
clc
adc
aas
clc
pushf
repz
xor
ret
xchg
aaa
les
xchg
push
sbb
js
call
js
dec
mov
inc
add
pop
push
test
inc
dec
jp
jl
add
push
es
inc
inc
neg
pop
nop
mov
into
adc
cli
jecxz
push
jb
outs
idiv
add
sti
add
xchg
dec
mov
pop
sbb
pop
(bad)
rol
mov
add
(bad)
clc
jmp
inc
or
sbb
div
cmp
jle
js
sub
xchg
pop
mov
mov
ins
mov
in
enter
fistp
push
xchg
or
adc
(bad)
dec
pusha
repnz
cmp
pop
cmps
push
jnp
inc
xchg
mov
add
xor
sbb
je
dec
iret
lea
mov
and
mov
add
mov
je
mov
inc
call
sub
scas
and
dec
cmp
jl
mov
cmp
jne
inc
pop
sbb
ror
rcl
dec
ins
ss
(bad)
mov
fild
and
dec
je
adc
stos
cli
out
or
or
push
jmp
mov
and
sbb
push
adc
inc
scas
jb
mov
(bad)
pop
push
inc
adc
dec
push
or
ret
pop
jmp
frstor
data16
(bad)
sar
mov
jbe
pop
shl
dec
sti
cwde
add
mov
jnp
adc
adc
inc
add
cmp
sbb
xchg
sub
retf
inc
mov
add
push
jl
and
(bad)
mov
or
sub
add
cvtps2pd
out
mov
(bad)
jmp
ret
mov
jne
mov
dec
nop
ins
mov
jne
cmp
xchg
xchg
jp
jg
mov
ins
(bad)
mov
sub
add
pop
add
fs
mov
cld
add
div
lock
add
adc
aam
cld
stos
imul
(bad)
mov
xchg
stc
add
(bad)
(bad)
ror
in
loopne
ret
fwait
lock
out
add
pusha
cmp
rcr
and
adc
mov
adc
jne
lods
xor
inc
cmp
dec
or
int3
sbb
jno
idiv
mov
enter
mov
out
mov
push
fsub
pop
or
sub
dec
and
jb
fiadd
or
in
cmps
dec
(bad)
jmp
add
call
add
out
sub
jb
sti
imul
es
sub
loope
loopne
in
out
jmp
cmp
jmp
in
jecxz
push
cmp
add
mov
dec
sbb
stos
(bad)
and
inc
outs
mov
cmp
shr
sbb
xor
jmp
add
push
adc
cmp
jle
and
mov
jno
push
add
or
or
ja
mov
sbb
arpl
jae
imul
sbb
pop
xchg
(bad)
adc
leave
adc
mov
ret
aaa
clc
adc
push
test
mov
and
mov
fcom
push
push
sub
out
adc
aas
sti
add
je
pop
and
and
cwde
aam
cwde
loopne
or
jne
je
pop
stos
cmp
cmp
pop
out
lds
add
mov
(bad)
hlt
(bad)
mov
adc
(bad)
out
out
(bad)
jmp
pop
and
add
jmp
cwde
repnz
mov
jo
je
or
pop
mov
dec
call
gs
and
xlat
or
push
cwde
cmp
or
add
pop
lds
or
int
dec
add
xor
or
and
cmp
jle
je
test
add
enter
xlat
push
cmp
push
(bad)
clc
loopne
test
jbe
mov
je
sahf
push
inc
dec
or
ds
adc
mov
sbb
data16
cmp
push
cli
mov
pop
cmp
jl
inc
adc
inc
xlat
daa
push
add
jecxz
or
cld
imul
or
mov
add
adc
retf
cli
gs
rol
mov
je
icebp
cmp
inc
out
dec
sub
pusha
push
pushf
not
dec
cmp
data16
xchg
pop
adc
inc
push
sbb
cmp
or
xchg
or
dec
pop
repnz
mov
inc
ds
sub
mov
nop
hlt
mov
sahf
adc
push
push
dec
loopne
and
cmps
mov
imul
add
lock
fild
adc
imul
jge
inc
jge
fwait
fwait
ret
dec
inc
sub
inc
mov
cwde
sbb
dec
dec
adc
add
mov
ss
bound
xchg
outs
lock
ret
xor
test
test
bound
int
xchg
pop
aas
sbb
push
mov
jmp
lock
dec
sub
push
pop
fcomp
f2xm1
cwde
sbb
dec
fucom
jge
std
inc
loopne
sbb
push
sbb
outs
aaa
mov
jmp
sbb
outs
nop
gs
cmps
mov
(bad)
or
cmp
dec
jmp
scas
je
sar
pop
sahf
xlat
push
aam
mov
(bad)
call
xor
test
test
inc
jmp
fcom
(bad)
shl
jb
or
xchg
mov
mov
scas
mov
adc
test
xchg
out
mov
in
xchg
aam
aad
sahf
daa
push
or
jecxz
xchg
pop
dec
xlat
aas
inc
dec
pop
dec
add
popa
add
xchg
inc
xor
push
movs
cmps
cs
dec
bound
push
adc
ret
movs
hlt
dec
dec
add
ret
or
dec
xchg
and
(bad)
das
push
push
add
or
and
cwde
push
inc
in
inc
xchg
ror
or
or
mov
xchg
xor
inc
inc
dec
iret
hlt
pop
and
ja
inc
(bad)
xchg
inc
lock
dec
mov
mov
inc
out
xlat
adc
sti
or
lea
or
call
in
sbb
fsub
shl
in
dec
call
pushf
sub
call
or
lds
push
pop
cli
ret
push
imul
mov
push
jl
je
xchg
mov
popf
sub
enter
adc
pop
fbld
jmp
std
jmp
xchg
adc
mov
stos
add
lods
in
mov
clc
mov
out
in
cmps
ins
mov
push
cmps
mov
push
mul
cwde
inc
aam
pop
inc
mov
fcmove
jbe
cmp
pop
sub
push
push
daa
push
or
xor
cs
cmps
retf
hlt
push
jb
inc
xchg
push
scas
adc
das
xor
inc
dec
jecxz
jb
outs
jnp
dec
or
mov
hlt
adc
or
xchg
hlt
movs
jb
push
and
lock
leave
ja
je
dec
sbb
dec
pusha
hlt
mov
or
je
pushf
in
movs
push
shl
adc
pop
add
ror
xor
adc
aaa
jle
push
pop
jbe
sub
and
(bad)
jmp
in
jmp
iret
mov
lea
pop
nop
jb
in
xlat
inc
pop
inc
adc
sub
addr16
mov
pop
in
pop
in
add
jmp
mov
lods
xchg
jmp
in
repnz
jle
pop
je
jne
inc
sub
jb
popfw
int3
jne
call
jle
pop
outs
arpl
add
cmps
ins
push
lea
scas
add
stos
fbld
jb
fild
add
add
(bad)
adc
sub
or
pushf
stc
scas
dec
mov
cmp
mov
test
cmp
out
inc
fadd
jne
jnp
call
cmp
mov
and
add
gs
fcomp
rcr
test
sub
mov
dec
mov
jle
jbe
adc
mov
fadd
pop
nop
mov
or
mov
nop
add
rol
and
adc
pop
xchg
adc
jecxz
or
push
or
stc
call
sub
sub
aas
es
lea
cmp
inc
inc
pushf
and
movs
iret
in
cmp
and
lods
or
pop
call
xchg
out
retf
mov
rcr
lea
dec
js
xchg
xor
mov
mov
sbb
xchg
inc
jno
mov
sbb
mov
mov
inc
scas
push
(bad)
cmp
xchg
dec
and
dec
call
test
movs
jb
and
ds
lea
enter
jae
fisubr
cmp
mov
fs
stc
xor
adc
mov
push
push
add
stos
sahf
pop
adc
inc
in
shl
clc
push
gs
and
aaa
push
shl
xchg
ds
mov
das
xor
ror
mov
pop
xchg
push
mov
cdq
cld
pop
arpl
jecxz
sbb
je
clc
out
lods
jb
push
dec
push
dec
jo
pop
inc
lods
and
enter
or
mov
inc
add
push
(bad)
retf
push
xchg
sub
sub
and
push
scas
push
push
jp
push
dec
or
sub
inc
jge
jae
xor
mov
xchg
dec
iret
xchg
dec
rcr
icebp
and
xchg
and
fcmovb
nop
addr16
add
shl
scas
sbb
mov
and
sub
sub
adc
cmps
je
xor
or
ja
xor
jb
pusha
mov
daa
cmp
test
inc
xor
inc
inc
or
mov
jbe
(bad)
or
push
or
add
test
mov
call
sub
xchg
ja
inc
(bad)
mov
mov
mov
scas
or
add
or
or
sub
push
lea
mov
std
addr16
je
or
push
jle
hlt
jbe
adc
rol
adc
cmc
fld
jp
ret
or
imul
test
movs
jae
inc
mov
push
cmp
or
push
pop
pop
cwde
in
sub
xchg
inc
outs
and
add
daa
test
loope
clc
mov
cmps
jle
xor
imul
cmps
cmp
sbb
test
and
daa
les
push
push
adc
xchg
xor
adc
add
ss
add
dec
rcl
stos
mov
rcl
clc
cmp
pop
or
ins
cmp
push
mov
cwde
mov
es
or
sub
add
dec
mov
mov
daa
and
or
xor
fs
push
jg
and
fidiv
sbb
xor
shl
call
jmp
pop
lods
or
es
clc
fcom
sbb
inc
jp
add
dec
adc
outs
ret
adc
cmps
cmp
or
or
push
adc
or
add
test
ret
dec
and
or
ret
inc
inc
jp
shl
pop
mov
shr
loopne
sbb
adc
fadd
fs
push
sbb
cmp
mov
inc
pop
or
ror
leave
inc
rol
sub
push
dec
jmp
test
mov
mov
xchg
jnp
push
or
add
pop
push
inc
pop
(bad)
dec
cmp
fidivr
push
adc
jmp
xor
lods
test
xchg
mov
jmp
push
mov
movzx
and
in
mov
jl
cwde
test
and
jle
pop
adc
aam
imul
cmps
fimul
pop
loopne
add
jmp
cmp
xor
ss
mov
cmp
mov
in
fild
sbb
mov
mov
or
jge
jns
popf
push
loopne
sub
mov
loopne
adc
cld
int3
inc
repnz
loopne
cli
and
mov
or
aas
add
ins
xor
int3
pop
mov
fsubr
mov
gs
sub
mov
arpl
test
mov
inc
(bad)
in
push
push
cmp
je
jmp
mov
je
jmp
xor
dec
jnp
jae
sbb
sub
xor
or
or
adc
or
test
pop
add
or
jno
dec
xchg
mov
or
xchg
xor
push
sbb
cld
pop
cld
add
(bad)
cmp
pop
push
push
dec
(bad)
inc
loopne
mov
push
fs
jne
adc
inc
jl
in
sti
nop
mov
mul
std
adc
test
mov
pop
inc
pop
push
(bad)
sub
int3
and
jnp
jae
xchg
dec
jnp
adc
(bad)
enter
and
mov
lods
shl
xchg
pop
out
rol
add
jmp
sub
xchg
xchg
mov
pushf
mov
movs
nop
add
mov
xchg
adc
xor
add
pop
inc
jecxz
lahf
sti
gs
adc
sbb
sub
push
mov
mov
sub
outs
inc
mov
jae
pop
adc
mov
ins
jecxz
arpl
adc
(bad)
lock
jecxz
(bad)
stos
xor
stc
pop
popa
xchg
js
aaa
push
popa
inc
sbb
or
rcl
push
iret
mov
mov
mov
mov
mov
fsub
pop
cmp
and
push
add
mov
ja
sbb
sub
mov
add
in
dec
dec
fdivr
adc
pop
mov
in
sub
inc
mov
lods
out
in
adc
push
mov
fnstsw
mov
pop
fidivr
lea
add
push
or
movs
popf
push
aaa
push
outs
jb
inc
mov
adc
and
dec
xchg
jge
add
inc
in
inc
lods
adc
xchg
or
sbb
push
mov
sub
push
mov
aad
pop
cmp
jne
cmps
outs
push
outs
lahf
lock
jnp
in
cmp
jne
jg
lahf
mov
xor
mov
sub
jl
dec
(bad)
push
pop
push
sbb
push
sar
add
lods
jp
push
jno
in
lock
pop
push
inc
pop
fmul
dec
jne
movs
xchg
mov
cmp
push
push
or
addr16
mov
jne
es
cli
push
ret
mov
pop
(bad)
leave
push
pop
(bad)
mov
fdiv
sahf
push
jl
mov
add
sub
push
in
rcr
push
popf
test
cs
ins
sbb
mov
ret
or
fistp
dec
lock
shr
and
dec
push
fadd
jmp
add
pop
sahf
jp
cld
retf
fisub
mov
add
xor
dec
add
cdq
cmp
pop
mov
fisttp
test
mov
cwde
(bad)
(bad)
mov
aaa
mov
lock
jae
mov
stos
lds
fs
cmp
pop
push
cmp
inc
push
inc
cmp
or
fldz
cmp
and
out
lea
push
and
or
adc
xchg
push
enter
shl
xchg
jl
enter
pcmpeqw
cmps
retf
add
call
mov
xor
adc
and
imul
jae
test
popf
imul
repnz
imul
pop
add
xchg
or
ja
xor
mov
xchg
in
jmp
inc
push
jne
mov
test
repnz
inc
xchg
add
xchg
sub
or
call
add
bound
add
pop
pop
jb
sar
push
jnp
dec
(bad)
fisttp
xchg
mov
mov
mov
and
dec
xchg
cs
sub
sub
das
add
std
ja
push
or
cmps
psllq
test
cli
and
pop
mov
adc
sub
mov
push
clc
repnz
cli
(bad)
inc
xchg
mov
clc
jg
lea
xchg
jb
pushf
mov
and
retf
mov
push
adc
fadd
mov
mov
clc
aaa
and
repnz
mov
(bad)
or
and
add
dec
mov
cmp
jle
dec
dec
ffreep
nop
sahf
xor
jge
clc
jl
or
pushf
or
jne
cmp
push
jbe
or
push
push
lock
cmp
sbb
add
cmps
ins
fisttp
add
pop
sub
sbb
and
add
dec
outs
retf
mov
ja
nop
hlt
jle
mov
sti
push
dec
jle
repnz
mov
xor
dec
repnz
int
mov
mov
mov
ret
jge
mov
ficom
arpl
jno
add
cmp
pop
mov
sti
mov
into
lock
jg
(bad)
(bad)
jp
jb
aad
cli
jo
rol
ret
in
xchg
and
jg
sbb
or
pop
dec
jmp
ret
in
push
(bad)
outs
inc
cmps
mov
nop
mov
ret
sbb
push
daa
xchg
loopne
jb
add
test
xor
add
jae
and
and
cmps
mov
pop
inc
enter
mov
pop
lods
inc
push
dec
pop
pop
lea
jo
mov
(bad)
pcmpeqw
lods
call
nop
or
call
push
add
push
fs
in
or
and
iret
clc
mov
cmp
push
push
sbb
ins
mov
jecxz
xor
lds
sub
sub
sub
cs
ret
add
mov
or
and
mov
movaps
sub
into
fdiv
pop
or
push
cmps
test
push
sub
js
cmc
movzx
pop
aaa
pop
sub
loop
lods
movs
(bad)
jp
stos
add
jne
(bad)
sbb
retf
jne
out
dec
sbb
fistp
pop
or
pop
jne
outs
call
mov
inc
jmp
add
or
or
or
in
dec
sbb
dec
call
add
stos
sub
push
mov
cmp
jmp
adc
add
nop
(bad)
jmp
jne
mov
push
mov
and
or
aam
or
out
je
retf
add
sbb
dec
jne
push
popa
je
mul
push
xchg
rol
pop
xor
sbb
je
cli
and
mov
mov
rcr
pop
mov
out
adc
cwde
mov
fcmovb
call
xchg
repz
nop
mul
sub
bswap
mov
repnz
in
xor
and
in
jae
sbb
test
xchg
pop
jns
(bad)
sbb
mov
shl
aam
mov
inc
imul
mov
movs
imul
leave
add
test
sub
mov
ss
inc
in
sub
mov
xchg
sbb
hlt
or
or
enter
call
ins
inc
adc
ss
add
ret
pop
jb
add
and
movs
and
clc
mov
jbe
add
push
mov
or
mov
adc
mov
lea
xchg
sar
ja
add
frstor
scas
fs
xchg
ins
push
or
outs
add
inc
sub
pop
nop
mov
inc
daa
jo
mov
mov
push
inc
inc
add
fcmovnu
ret
das
sub
dec
das
adc
cmp
daa
lds
jnp
jae
add
clc
jecxz
dec
in
push
lahf
sbb
jns
xchg
test
pop
add
call
mov
xchg
adc
adc
mov
std
adc
lock
popf
mov
test
outs
hlt
jne
add
jmp
pop
loop
stos
adc
inc
or
push
add
repz
fs
sbb
add
mov
aam
test
mov
cmp
or
ror
call
add
xchg
add
xor
(bad)
push
sbb
jge
mov
call
mov
in
jb
rcr
add
shr
dec
and
(bad)
push
push
pop
je
lds
inc
or
adc
push
sub
inc
xchg
or
test
repnz
ss
push
push
pop
les
fdivr
shr
jb
jbe
and
adc
or
add
adc
or
add
mov
adc
add
fs
add
fiadd
ins
pop
psubsb
and
jns
sbb
xchg
sbb
repz
sbb
inc
or
vmulps
xor
pop
or
neg
rol
hlt
inc
add
or
xchg
into
cli
xchg
stos
dec
(bad)
lock
call
or
sub
push
push
cld
and
jbe
in
cmp
dec
dec
sub
mov
xor
fisttp
enter
mov
shr
or
mov
aam
xor
adc
jmp
adc
push
(bad)
sub
scas
lods
sbb
shl
rcl
add
mov
fcom
or
clc
jg
inc
jl
pop
jg
or
xor
inc
jmp
pop
cs
push
xchg
mov
(bad)
adc
test
mov
cmp
adc
mov
out
ss
inc
cmp
test
mov
inc
pop
jns
mov
adc
stos
jne
pop
mov
mov
mov
inc
add
call
and
lea
cmp
cdq
jmp
lods
fadd
lods
and
adc
cli
dec
cmp
inc
lea
push
inc
ret
dec
jg
xchg
mov
in
sahf
or
cmp
dec
mov
popf
sub
dec
mov
xchg
cmp
outs
(bad)
mov
xchg
adc
inc
in
adc
push
adc
outs
adc
sbb
jo
xor
pop
mov
test
shr
aam
stos
test
mov
mov
push
repz
movs
cmp
and
test
das
mov
lahf
sub
pop
rol
sbb
fcomip
add
hlt
out
pop
sub
ss
mov
arpl
mov
mov
ret
repz
cli
cwde
inc
in
sub
xor
nop
push
leave
bnd
mov
xor
mov
mov
pop
sub
jne
mov
fistp
xchg
push
add
jmp
jg
mov
das
icebp
call
mov
sbb
or
mov
pop
loope
sub
xlat
sub
shr
jle
inc
mov
push
cli
shl
inc
add
add
dec
scas
xor
das
sbb
xchg
popf
mov
inc
mov
js
mov
add
jb
repz
push
cmp
inc
sub
or
call
inc
push
xchg
ret
scas
lds
mov
enter
jle
push
xor
and
xchg
dec
test
cdq
sbb
cmp
mov
aas
add
add
add
sub
inc
jne
pop
jnp
fnstenv
adc
pop
call
lods
popf
or
inc
(bad)
ins
ds
cmp
fs
inc
mov
sbb
dec
neg
in
ret
mov
daa
add
mov
xchg
jne
xchg
inc
add
pop
or
and
mov
stos
ss
pop
xor
cs
sahf
xchg
xor
(bad)
sbb
and
jo
clc
lea
dec
mov
call
or
cmp
jb
mov
mov
inc
jnp
pusha
ror
fwait
inc
adc
sbb
in
into
xor
xchg
push
mov
(bad)
out
mov
movs
paddq
fist
pop
sbb
fisubr
in
ins
(bad)
mov
stos
push
pop
lods
sub
in
adc
push
aaa
pop
or
ss
adc
push
sub
ins
xchg
rol
pop
sub
outs
sub
sub
xlat
push
pop
or
xchg
ss
mov
push
sub
ror
int3
or
mov
sbb
or
mov
xchg
mov
mov
sar
das
out
fmul
cmp
mov
inc
(bad)
pop
adc
stos
mov
push
or
dec
jnp
push
(bad)
mov
fadd
inc
stc
ret
cmps
pop
xor
in
adc
push
pop
lahf
mov
cmp
mov
mov
inc
and
inc
push
clc
xchg
mov
inc
jecxz
fs
cmp
pop
fidiv
dec
ret
in
push
ror
jg
dec
or
push
int
leave
dec
in
inc
xor
(bad)
or
iret
ror
cmp
push
push
dec
(bad)
hlt
adc
or
inc
pop
pop
xor
add
mov
push
lahf
bound
or
pop
popa
xor
or
(bad)
push
xchg
cmp
adc
out
push
loop
dec
mov
popa
xchg
ror
iret
or
mov
push
jne
cmp
jb
ret
(bad)
sahf
mov
adc
add
xlat
fdiv
push
xchg
push
lahf
fnstcw
and
(bad)
loopne
inc
cmp
outs
dec
aam
jmp
mov
sbb
ret
mov
push
inc
or
out
xchg
adc
mov
inc
sbb
stos
sbb
enter
xchg
fcomp
(bad)
pop
sbb
and
nop
js
jecxz
xchg
sub
ds
test
and
xchg
neg
cmc
push
repnz
add
dec
mov
pop
ins
mov
jae
or
mov
jae
add
mov
lahf
push
adc
scas
or
mov
les
add
push
mov
frstor
addr16
nop
push
and
nop
inc
sub
mov
xlat
test
inc
or
sbb
scas
mov
push
pop
jg
test
lods
push
or
jge
mov
mov
in
add
call
dec
ret
xlat
retf
and
(bad)
mov
xor
pop
sbb
add
pop
adc
nop
aas
lds
add
in
rcl
sbb
xlat
mov
jmp
sub
mov
sar
mov
xor
scas
mov
sbb
movs
lods
dec
cld
jp
adc
pop
call
arpl
fistp
in
hlt
push
movs
push
mov
and
ficomp
movs
ja
wbinvd
cmc
mov
add
add
je
inc
movs
nop
push
jb
fistp
mov
adc
adc
sbb
xchg
pop
jl
sub
test
push
mov
lods
xchg
xchg
xlat
add
movs
fstp
inc
or
scas
jns
add
and
sbb
inc
push
shr
lahf
ja
add
xchg
shl
lahf
mov
cmps
inc
int3
cmps
dec
push
and
in
xor
pop
cmps
mov
cmps
jl
mov
xlat
inc
(bad)
add
fidivr
push
aaa
add
mov
jno
sbb
outs
dec
mov
inc
or
inc
add
aaa
popw
cmp
fidivr
pop
or
pusha
test
jb
mov
cmp
pop
pop
not
mov
add
push
sub
mov
outs
inc
push
loopne
inc
and
pop
pop
or
(bad)
sbb
push
mov
inc
outs
fimul
adc
and
mov
call
icebp
add
jle
adc
jne
call
and
push
jle
loopne
xchg
movs
stos
mov
pop
mov
fisttp
add
cmps
dec
call
fidivr
imul
ss
movq
dec
push
xor
inc
xchg
pop
dec
(bad)
jg
sub
pop
fstp
cmp
adc
mov
(bad)
cmps
inc
ins
stos
and
(bad)
imul
adc
adc
std
mov
clc
push
pop
add
cmp
inc
pop
cmp
fcomp
jmp
dec
pop
sub
cdq
mov
repnz
mov
les
mov
dec
pop
bound
sub
pushf
add
fwait
mov
imul
push
mov
sub
outs
push
adc
cmc
pop
movs
pushf
cwde
cmp
jae
xor
push
pop
mov
mov
add
sub
scas
aaa
dec
addr16
cs
les
inc
xchg
ficom
(bad)
jbe
aad
(bad)
out
cmp
cwde
jne
adc
mov
add
dec
das
dec
lahf
out
(bad)
add
sub
lock
scas
fild
adc
sub
jae
aas
xchg
pushf
pop
cmp
ret
fistp
add
jb
icebp
out
(bad)
popf
mov
out
lods
rol
rol
inc
hlt
sub
imul
lods
and
sbb
shl
test
scas
pop
(bad)
jne
jmp
sbb
push
and
mov
sub
imul
adc
ror
(bad)
mov
aas
jmp
into
inc
and
or
std
inc
cmp
adc
enter
(bad)
test
pop
push
dec
repz
test
mov
scas
push
push
add
pop
add
push
scas
(bad)
mov
mov
xchg
inc
push
or
loopne
arpl
add
or
(bad)
jmp
mov
ror
loop
xchg
and
inc
push
jnp
sub
sub
inc
ret
adc
mov
add
fdivr
push
mov
or
rol
loopne
dec
not
icebp
adc
call
bswap
in
sub
aaa
mov
and
xchg
mov
mov
or
(bad)
(bad)
xchg
mov
pop
and
mov
sub
mov
push
pop
adc
nop
aas
scas
nop
add
dec
mov
push
mov
mov
std
pop
mov
xchg
stos
mov
movs
cs
outs
je
pop
movs
aaa
xchg
jmp
mov
(bad)
pop
(bad)
lods
(bad)
movs
es
pop
push
pusha
inc
cmp
sub
jle
mov
add
nop
test
call
xchg
mov
or
arpl
xlat
xor
aam
adc
fmul
sbb
pop
mov
mov
xchg
sub
cmp
mov
jb
pop
fdivr
fcmovu
aaa
js
jmp
pop
iret
push
cld
pop
retf
out
pop
iret
push
add
or
cmps
icebp
or
dec
jne
add
arpl
cmps
or
mov
push
add
push
push
adc
inc
and
sub
mov
sub
jp
fisub
and
shl
nop
nop
sub
dec
pop
push
sar
nop
adc
push
pop
pop
or
and
push
leave
pop
mov
push
cmp
push
dec
gs
aad
leave
jp
ins
sbb
lds
pop
or
adc
ss
inc
into
xor
push
jecxz
popa
or
mov
mov
push
sub
add
addr16
cli
dec
or
daa
out
or
shl
aad
scas
mov
adc
rol
enter
lods
sar
nop
out
ins
pop
hlt
mov
ret
cmp
jle
ret
mov
sar
enter
push
mov
mov
popf
sahf
and
add
sbb
icebp
push
push
in
stos
lea
add
pop
in
out
xchg
jns
leave
call
cvtpi2ps
or
xchg
gs
jo
or
jge
jne
mov
dec
ret
inc
popf
mov
les
in
hlt
push
jecxz
loopne
or
inc
in
or
es
movs
mov
call
xchg
cmps
xor
int3
les
mov
mov
(bad)
cmc
inc
hlt
loope
xchg
mov
xchg
data16
ss
cmp
push
(bad)
cmp
ret
cwde
mul
push
and
mov
(bad)
cmc
fmul
pusha
jns
xor
xchg
adc
sub
add
(bad)
dec
(bad)
mov
pop
jmp
push
nop
dec
pop
int3
ins
or
jo
in
or
mov
adc
jb
fcom
jne
ror
cli
xor
cmovb
ror
xchg
pop
jmp
cmps
nop
or
ja
cmp
jge
call
movs
dec
or
push
lea
rcl
clc
sbb
add
pop
pop
gs
mov
mov
adc
pop
data16
pop
pop
mov
dec
jo
mov
and
mov
ret
sub
enter
pop
mov
fmul
mov
out
sub
nop
mov
cmp
pop
push
jne
rol
push
cdq
stc
push
imul
dec
test
sbb
rcr
nop
mov
pop
dec
in
fistp
(bad)
push
mov
int
cmp
adc
or
inc
jl
loop
sbb
or
add
xor
inc
xchg
mov
jb
leave
gs
loop
(bad)
mov
sub
push
test
and
add
movs
and
loope
and
mov
pusha
jne
pop
call
cmps
xchg
cs
test
dec
(bad)
hlt
add
test
pop
push
test
sar
add
add
adc
push
xor
fsub
cmps
lock
cmp
inc
jbe
cmp
jle
push
lock
or
pop
add
mov
or
pop
clc
adc
data16
push
or
sbb
push
call
dec
inc
or
pop
aam
int3
dec
repnz
push
sar
add
mov
fild
jo
or
fsub
outs
xchg
shl
fadd
mov
(bad)
test
hlt
repnz
adc
and
rcl
int3
adc
add
(bad)
mov
call
xchg
(bad)
stc
adc
push
test
xchg
cwde
enter
cwde
nop
nop
ror
and
stc
stos
or
in
sbb
dec
in
sbb
fdivr
sub
test
mov
add
push
loop
xor
fdivr
sahf
call
call
pop
(bad)
cmp
pop
fsubr
add
add
add
push
dec
popa
push
xlat
add
nop
pop
push
sbb
cmp
mov
and
add
scas
push
cmp
js
mov
xor
xchg
(bad)
and
mov
daa
dec
imul
(bad)
hlt
lock
xor
jae
pop
adc
bound
dec
inc
in
shl
and
cld
dec
fidiv
inc
cld
cmp
aaa
retf
sar
in
xchg
and
mov
(bad)
fsubr
sub
or
popf
add
cmps
ror
jns
outs
dec
pop
inc
pop
rcl
ja
mov
dec
retf
dec
sbb
adc
popa
push
mov
cmp
mov
(bad)
cmp
test
xor
ins
add
test
mov
add
or
in
(bad)
jno
das
(bad)
xchg
inc
or
(bad)
xchg
test
mov
mov
loop
cwde
mov
iret
adc
and
inc
mov
or
add
idiv
and
ds
jo
pop
arpl
mov
(bad)
ds
cmp
pop
xor
and
in
stc
cmp
pop
or
clc
mov
fcomp
(bad)
arpl
push
fdivr
cmps
add
es
cmp
adc
cmp
shr
(bad)
cmp
jle
addr16
pop
iret
add
dec
or
jb
cmps
sbb
push
push
xchg
mov
and
push
(bad)
mov
popf
fdivr
push
(bad)
xchg
sub
pop
(bad)
pop
mul
jns
mov
mov
inc
dec
push
int3
(bad)
pop
push
xchg
out
pop
cld
clc
xlat
cmp
dec
push
gs
or
mov
icebp
add
stc
xor
ror
clc
mov
pop
inc
sbb
cld
push
dec
clc
sub
push
sub
add
jbe
pop
add
jb
nop
cdq
shl
jo
jb
aad
pop
(bad)
and
cmp
pop
aaa
add
(bad)
ror
cmps
lea
or
adc
adc
lock
test
dec
cmp
popa
ins
into
add
sub
leave
fs
shl
stos
ins
sub
inc
add
pop
and
jge
pop
or
fs
sbb
and
or
bound
dec
jl
sub
clc
or
pop
add
mov
test
and
or
cmps
mov
xchg
xchg
sub
mov
mov
xchg
test
enter
repnz
(bad)
mov
lds
int
iret
rcl
arpl
enter
xchg
cld
xor
int
or
pop
pop
pop
cwde
pop
and
cwde
mov
mov
cmp
adc
mov
test
sub
nop
and
cwde
adc
mov
aam
jb
inc
sub
cmp
push
and
mov
add
mov
rcl
mov
ror
sahf
dec
lea
inc
and
push
dec
pop
(bad)
mul
push
push
pop
mov
xchg
xor
sub
leave
shl
nop
ins
or
inc
es
pop
rcl
mov
mov
sbb
stos
add
ss
mov
stos
rcl
out
inc
add
or
cs
js
adc
(bad)
lods
add
inc
imul
lods
stos
xor
ret
add
and
loop
ret
pop
mov
push
mov
sbb
cmp
scas
push
ins
popa
stc
cmps
mov
and
aas
test
add
push
push
inc
nop
inc
mov
push
or
mov
dec
scas
pop
lock
cwde
mov
inc
loop
add
arpl
sti
mov
mov
or
mov
repz
add
lods
push
mov
ds
push
rol
jno
movs
aaa
fnstenv
(bad)
sbb
sbb
mov
jecxz
in
sub
dec
pop
push
fnstcw
dec
or
cmp
mov
xchg
cdq
jp
inc
(bad)
(bad)
pop
adc
add
cmp
dec
(bad)
sbb
clc
stos
dec
cld
sbb
jmp
mov
arpl
es
and
adc
jne
jno
aas
inc
fst
dec
mov
lods
std
dec
test
jl
inc
pop
xor
shl
or
mov
push
ss
dec
jne
jle
or
add
das
dec
sbb
pop
jmp
enter
jg
movs
xor
and
add
clc
enter
push
lock
xchg
pop
call
enter
sub
xor
movs
fwait
cmp
enter
inc
(bad)
xor
popf
mov
cs
test
dec
fmulp
jo
push
rcr
daa
out
nop
push
loopne
cs
or
jae
fdivr
jo
repnz
mov
daa
iret
leave
xor
push
clc
dec
out
cmp
add
in
cmp
int3
mov
mov
das
fsubr
pop
in
repnz
pushf
pop
int3
hlt
pop
outs
retf
les
(bad)
into
repz
out
sahf
xchg
outs
in
pop
lods
mov
leave
jae
dec
movs
push
fsub
iret
pushf
pusha
cwde
mov
pop
xchg
iret
leave
jae
and
fst
push
les
inc
jl
cmps
js
repnz
fmulp
jo
cmps
add
mov
ins
mov
fs
out
in
ins
pusha
push
cld
pop
pop
test
pushf
push
inc
pop
sbb
dec
sahf
push
sbb
pop
dec
cmp
out
in
inc
mov
inc
or
stc
pushf
cmp
pop
cmp
cmp
fbstp
xor
xor
jns
fmulp
(bad)
out
sub
ror
cmp
cs
shl
imul
push
popa
nop
cmps
mov
xlat
inc
test
jne
and
addr16
or
jg
mov
xchg
stos
dec
std
int3
inc
adc
mov
xor
mov
cmp
adc
xchg
sbb
movs
mov
repz
add
in
sahf
lea
and
push
nop
dec
test
jo
pop
ins
lods
pop
enter
mov
cmp
out
inc
xchg
jns
sub
ja
jnp
scas
mov
rol
ds
xor
and
sbb
shl
xor
dec
sub
out
test
mov
sbb
js
dec
push
push
jl
adc
mov
mov
pop
cmps
dec
adc
dec
jp
(bad)
and
jg
es
or
dec
loopne
mov
ffree
xchg
adc
lock
retf
sbb
sub
cmovb
out
sar
mov
add
and
sub
or
ftst
inc
enter
cld
and
ficom
sbb
and
xor
sub
stc
clc
lea
push
aam
add
sbb
adc
mov
std
pushf
clc
push
dec
add
xlat
mov
fdivp
shl
or
mov
sbb
pop
adc
in
fninit
lods
sub
fild
sbb
out
dec
pop
jo
jecxz
or
add
pop
lock
pop
data16
test
int3
data16
or
xchg
jp
leave
push
mov
neg
mov
sub
enter
and
cmp
rol
cld
inc
cmp
push
jne
out
inc
add
ret
or
punpckhbw
jo
adc
mov
mov
xor
jg
add
sbb
mov
es
fs
je
jl
dec
es
es
fs
mov
xchg
dec
pushf
shl
enter
cdq
mov
mov
rol
aam
fsubr
fmul
es
in
pop
es
push
fst
jl
fucomip
mov
xchg
in
sub
and
das
xchg
push
cs
hlt
sbb
push
cs
cmp
clc
mov
cmp
xchg
inc
sub
popa
jb
into
sub
adc
leave
inc
push
or
gs
retf
xchg
fbld
movq
fs
jne
das
mov
jne
inc
imul
fs
pop
push
cdq
pop
outs
dec
jb
pop
outs
jb
ins
jge
adc
fild
pop
push
cmp
fisttp
xchg
and
or
fidivr
aaa
nop
cmp
inc
jae
pop
inc
jns
(bad)
xor
outs
add
mov
jo
add
push
mov
xor
add
fwait
ins
or
dec
sub
sub
jae
pop
pop
adc
outs
call
inc
push
mov
sub
mov
shl
jp
push
arpl
and
mov
jns
(bad)
adc
retf
cmp
loopne
inc
fs
and
inc
mov
push
mov
nop
pop
add
sub
jns
cmps
std
lods
pop
inc
add
push
mov
in
pop
and
ds
cmp
loopne
test
ins
inc
test
rol
aaa
and
inc
add
sbb
sbb
and
outs
pop
mov
loope
jg
push
add
pop
scas
cld
out
add
add
add
jecxz
add
jle
adc
out
or
cld
or
test
push
push
add
push
inc
jne
ins
sti
lea
add
inc
pop
sub
es
dec
add
adc
sub
gs
dec
leave
(bad)
outs
lods
pop
inc
int
pop
sub
bt
dec
jae
mov
iret
adc
data16
add
outs
fs
stos
add
add
mov
add
push
push
or
jnp
xor
xchg
rcl
or
inc
pop
or
sub
int3
stos
dec
call
push
in
mov
adc
pop
add
adc
add
dec
ss
inc
pop
jne
das
and
or
mov
push
lods
jb
dec
jo
dec
gs
out
pushf
aaa
and
inc
ret
not
inc
pop
push
stos
aas
jmp
add
pop
or
retf
or
aas
adc
or
jae
jo
cmp
scas
jmp
add
xchg
push
adc
xor
xchg
xchg
test
jg
pusha
push
xor
fcmovu
push
fisubr
sbb
pop
imul
or
neg
into
lds
mul
add
dec
xchg
push
je
or
add
pop
cmp
push
rol
in
iret
jl
dec
enter
out
out
cmp
sub
adc
dec
push
aas
jmp
sar
pop
jb
pop
rcl
hlt
fcom
or
loope
push
or
cmp
nop
adc
push
jl
mov
pushf
test
pop
aad
inc
dec
imul
or
fnstcw
cmps
inc
data16
jb
mov
pop
xor
pusha
adc
inc
popa
push
adc
cmp
dec
push
cmp
pop
fadd
add
cs
es
in
push
pop
inc
dec
and
repnz
cmp
pop
mov
fnstenv
pop
xor
jb
push
nop
jmp
or
push
adc
test
push
pop
inc
xor
and
jmp
pop
inc
jmp
xlat
pop
inc
inc
or
xor
pop
and
clc
adc
inc
mov
push
pushf
(bad)
pop
iret
pop
cmp
mov
test
imul
inc
xor
test
pop
add
mov
cmp
adc
inc
add
lds
sub
and
or
aaa
or
and
mov
inc
iret
pop
cmp
cwde
and
and
lods
push
adc
mov
xchg
pusha
inc
xor
jo
and
jne
ja
pop
inc
aaa
cmp
imul
jmp
mov
ret
popa
xor
dec
pop
add
lds
out
in
add
sub
cmp
retf
ss
das
add
add
add
cmp
call
adc
in
lock
in
cdq
nop
dec
cld
mul
dec
or
add
jmp
nop
inc
jo
fild
jo
daa
nop
or
or
cmp
dec
push
in
mov
push
xor
pop
pop
add
add
out
lock
and
mov
fisttp
jmp
xchg
lock
adc
aad
repnz
rol
or
jg
jmp
sbb
mov
cmps
es
sub
add
sti
neg
loop
sub
dec
je
sbb
mov
cmp
(bad)
es
jbe
add
je
es
or
lods
mov
pop
jnp
jns
aam
dec
pop
retf
xor
movs
clc
clc
mov
arpl
push
dec
imul
call
inc
add
xchg
in
mov
lahf
inc
in
cwde
jmp
dec
call
sub
fucomi
cmp
call
loopne
xchg
adc
sub
(bad)
hlt
sub
add
int3
(bad)
les
ret
out
enter
fdiv
shl
or
cmps
(bad)
inc
ds
mov
loopne
mov
pop
stos
mov
(bad)
in
mov
fadd
push
adc
or
push
xchg
sub
jne
jmp
adc
and
enter
in
or
xor
mov
xor
(bad)
jmp
sbb
jmp
add
and
xlat
div
pop
enter
pop
test
std
pop
and
lods
data16
pusha
add
pop
jg
loopne
daa
add
add
adc
mov
cmp
or
and
mov
div
inc
test
cmp
inc
or
fstp
mov
(bad)
xchg
jne
pushf
xchg
xor
or
xchg
inc
jnp
add
mov
add
loop
or
add
or
test
adc
and
push
add
pop
in
dec
mov
pxor
ret
or
test
xchg
xchg
pop
mov
jmp
and
and
push
imul
mov
or
push
in
stos
nop
add
into
(bad)
sub
int3
add
lea
shl
or
adc
dec
inc
jbe
inc
adc
jmp
inc
mov
push
lea
(bad)
push
repnz
repz
dec
jnp
dec
sti
clc
in
pop
sub
call
xchg
sub
retf
xchg
neg
push
clc
(bad)
pushf
enter
jecxz
aas
add
pop
out
jae
push
aas
loop
adc
jmp
jp
jne
pusha
imul
movs
jns
sub
pop
sub
adc
outs
mov
inc
inc
add
pop
inc
or
sbb
cmp
adc
xor
je
or
aam
dec
aam
cmp
and
hlt
gs
jbe
jmp
jmp
ins
adc
jb
mov
subps
push
cmp
movs
pop
ret
outs
out
call
lea
or
jns
mov
mov
call
or
adc
jb
(bad)
call
call
pop
xor
in
addr16
cld
std
enter
popa
cmp
sub
mov
je
nop
cmps
repnz
enter
imul
push
clc
sub
cmp
xchg
shr
addr16
add
adc
ds
pop
movs
mov
cmp
jg
(bad)
addr16
add
(bad)
cmps
fnsave
push
push
ja
add
cmp
add
ds
ret
mov
pusha
aas
add
add
ds
imul
inc
add
sub
mov
sahf
adc
cmps
test
inc
(bad)
cld
push
xor
mov
mov
adc
repnz
jb
sahf
rol
ins
add
push
enter
arpl
retf
movs
loopne
(bad)
call
leave
(bad)
mov
sbb
jp
cmc
adc
mov
inc
jmp
or
and
mov
call
cmp
mov
iret
xchg
mov
fdivr
sub
cmp
lea
fs
stos
or
xor
and
fisub
push
sti
in
daa
pusha
adc
cmp
mov
dec
push
or
inc
outs
stos
(bad)
xchg
push
push
lods
repnz
inc
push
cmp
pop
push
or
pop
rcl
leave
mov
xchg
push
jns
push
jmp
inc
icebp
mov
nop
inc
cs
cld
or
mov
repnz
add
xchg
adc
sub
(bad)
(bad)
xchg
xchg
push
push
loop
dec
push
push
mov
pusha
adc
sbb
and
fnsave
push
jae
xor
enter
push
pop
push
or
push
(bad)
xor
add
cmp
or
call
pop
jmp
inc
adc
xchg
sar
sbb
es
sbb
xlat
stc
push
aaa
cld
xor
jmp
shr
add
das
jns
mov
rol
cmp
jne
loope
adc
inc
pusha
aad
or
sahf
or
lock
in
out
jl
rcl
adc
int
xor
mov
push
clc
add
sbb
repz
dec
bound
(bad)
push
inc
inc
movs
dec
cmp
daa
out
mov
jecxz
or
loopne
or
push
sub
cmp
rol
les
rol
adc
pop
jecxz
ret
in
daa
clc
imul
imul
mov
icebp
sbb
push
pop
repnz
cld
fstp
fwait
pop
sbb
cmp
xor
pusha
clc
(bad)
and
lahf
xchg
pop
je
cmp
cmp
and
in
js
push
stos
(bad)
mov
add
adc
cmc
cmp
leave
xchg
enter
jl
fcomp
nop
xchg
clc
and
stc
add
jbe
cld
push
push
push
cs
out
test
fs
add
and
push
das
jmp
pop
sbb
cmp
hlt
adc
jmp
or
sbb
and
int3
sub
cmp
adc
mov
xor
dec
in
sar
aam
daa
add
adc
push
aaa
rol
pop
daa
and
push
xor
cmps
fsubr
xor
push
adc
mov
push
sti
(bad)
std
jg
sub
xor
and
lea
int3
or
bound
xchg
sbb
or
data16
mov
daa
test
or
xor
jl
xchg
add
xlat
push
inc
test
lahf
push
pop
and
cmp
adc
mov
hlt
loopne
ds
inc
jmp
in
xor
push
or
in
and
shr
rol
das
pop
fstp
pop
or
pop
(bad)
scas
push
call
mov
fldenv
xor
test
outs
mov
popf
(bad)
xlat
jle
jb
adc
push
add
adc
packssdw
add
push
cmps
add
mov
dec
add
stc
cmp
repz
mov
loopne
lar
jl
cmps
xor
sub
cmp
fsub
fisttp
xchg
cmps
push
or
jns
mov
(bad)
push
aad
dec
sti
jo
(bad)
mov
sub
rol
xor
sbb
or
fld
pop
cmp
pop
in
ret
dec
sub
and
mov
lock
push
cmp
(bad)
jo
xor
ins
inc
ins
sbb
mov
or
xor
aam
add
cmp
ds
push
and
or
dec
je
dec
ins
adc
xor
arpl
loopne
test
(bad)
pop
push
mov
and
mov
(bad)
ss
add
ds
repz
inc
push
mov
xor
rol
push
pop
daa
xlat
into
sar
push
stc
or
or
cmc
mov
mov
(bad)
sub
mov
inc
inc
mov
sbb
je
jo
(bad)
jmp
sub
sub
cmp
daa
mov
jg
fcom
jp
sbb
pop
out
jne
sbb
push
lods
mov
fneni(8087
dec
sub
xchg
mov
inc
sub
mov
or
dec
dec
or
add
pop
push
test
jg
adc
mov
fnsave
mov
pop
or
pop
adc
sbb
movs
mov
mov
inc
pusha
adc
xor
and
sbb
jb
adc
ja
or
push
cmp
pop
xchg
xchg
inc
push
push
dec
pop
pop
or
xchg
or
nop
adc
push
inc
adc
adc
addr16
add
adc
jns
sti
add
push
mov
mov
leave
clc
sbb
add
mov
sub
push
and
adc
add
jmp
pop
sbb
push
xchg
xchg
xchg
or
pop
jns
sti
and
add
jl
jb
popf
out
test
adc
and
loopne
call
call
add
pop
inc
sub
push
jns
out
mov
jle
nop
in
pop
icebp
cdq
or
or
push
push
imul
mov
inc
int3
or
test
rol
xlat
adc
nop
push
and
data16
ret
sbb
cmp
shl
loop
shr
into
and
adc
pop
bound
cwde
pop
aaa
sub
cmp
xor
aaa
sbb
adc
ret
(bad)
sub
push
xor
rol
sbb
(bad)
push
loope
test
adc
fsub
fdiv
test
shr
retf
push
shl
imul
hlt
pop
add
add
fnsave
mov
xor
enter
mov
adc
and
popa
lds
xchg
call
call
(bad)
or
and
mov
mov
push
or
int3
fdivr
pop
sub
sub
enter
cmc
or
jbe
out
sbb
outs
(bad)
outs
stos
adc
imul
cmp
push
repnz
out
push
ins
mov
push
push
arpl
int
jns
(bad)
xlat
push
jmp
adc
es
mov
add
push
rol
and
fisttp
xor
loopne
arpl
add
cwde
sub
dec
fisub
mov
stos
dec
leave
mov
mov
and
push
or
lock
je
push
jo
sbb
in
clc
mov
adc
fsubr
mov
data16
pop
ret
lahf
sahf
out
(bad)
jae
pop
xor
dec
pop
imul
out
cdq
mov
aad
pusha
daa
jmp
call
(bad)
push
inc
xor
outs
das
fisttp
les
addr16
inc
imul
mov
sub
push
sbb
push
push
stos
js
mov
data16
add
push
(bad)
mov
jmp
inc
aas
inc
adc
cld
add
or
daa
and
gs
adc
imul
adc
mov
in
xchg
or
out
out
add
(bad)
inc
push
push
jg
cmps
loope
cmc
jns
retf
add
stos
push
sbb
push
fwait
xor
push
aaa
and
daa
mov
cmc
stos
push
jne
jo
lock
jle
jmp
jb
adc
xor
push
sbb
pop
rcl
xchg
adc
inc
push
mov
dec
pushf
and
jb
popf
sti
push
push
pop
aad
daa
in
shr
or
adc
adc
and
sub
or
rol
test
xchg
mov
out
enter
pop
out
mov
ret
out
and
and
int3
pop
cmps
das
adc
dec
dec
xor
adc
or
lahf
mov
out
add
xchg
push
adc
outs
push
ja
iret
repz
movs
mov
(bad)
or
xchg
cmps
sbb
mov
push
pop
cmps
inc
jge
adc
xchg
and
jnp
iret
or
xchg
sbb
sbb
inc
or
sbb
sub
fadd
in
fild
pusha
mov
adc
add
sbb
sbb
adc
mov
add
fnstenv
and
push
nop
ret
push
shl
jg
adc
mov
pusha
mov
add
ror
inc
popa
xor
in
or
addr16
pop
repz
jae
push
jno
cwde
mov
mov
inc
out
push
pop
pop
jns
out
add
xor
out
mov
lds
sbb
add
sub
adc
dec
adc
mov
cmp
ja
jmp
pop
jno
sbb
loopne
or
js
cmp
push
repnz
xor
jmp
lahf
jmp
jo
lods
sub
add
test
pop
dec
nop
aam
lock
(bad)
in
add
sbb
push
sub
jmp
addr16
aas
sbb
ret
fld
fstp
fwait
jmp
cmp
and
and
pusha
sbb
push
or
outs
add
shl
or
mov
(bad)
mov
or
jle
add
inc
or
sbb
movs
pusha
pop
clc
pop
cmp
mov
jnp
imul
cmp
push
out
sahf
out
call
jl
repz
sbb
je
adc
fwait
daa
mov
popa
pushf
out
out
stc
cmps
push
(bad)
sbb
enter
add
inc
fild
or
fcmovnu
xor
or
add
imul
dec
sbb
(bad)
jnp
pop
mov
adc
push
sub
xor
sbb
jmp
movs
in
pusha
mov
cli
fild
inc
dec
jb
sbb
adc
dec
test
fs
push
pop
sbb
mov
fadd
and
cmps
and
push
or
adc
pop
nop
push
sbb
or
jno
xchg
sbb
cmp
mov
sbb
push
xor
xchg
aaa
in
pop
sbb
push
or
out
cwde
push
scas
ret
fsub
fadd
rol
add
fst
push
fcmovbe
or
inc
out
mov
inc
add
bound
jno
mov
mov
and
sub
jb
add
aaa
pop
push
inc
pop
push
sbb
pop
dec
cmc
jmp
out
cmps
shr
sbb
adc
pop
pop
add
sub
add
adc
jae
inc
push
js
scas
or
and
sbb
repnz
push
out
dec
jno
jmp
adc
push
hlt
add
push
and
fistp
mov
push
ins
sbb
mov
add
aas
enter
outs
fistp
fwait
sbb
dec
mov
add
(bad)
in
lock
sub
mov
retf
(bad)
fidivr
fild
xor
jb
fwait
pop
or
dec
fs
dec
iret
lods
jo
cmps
push
push
mov
and
pop
daa
xor
or
aaa
retf
add
mov
add
mov
loopne
in
jb
and
adc
add
and
in
popf
adc
and
inc
xor
loopne
ret
pop
xor
mov
mov
in
in
pop
arpl
pop
pop
and
aam
leave
inc
ins
jecxz
jl
int
data16
adc
pop
mov
out
ret
inc
push
fwait
dec
js
xchg
pop
pop
out
ret
add
call
pop
leave
stos
and
xchg
nop
dec
xchg
cmp
and
jl
mov
lock
(bad)
and
xchg
ja
shr
cmp
pop
and
fistp
push
ins
push
sub
daa
xor
push
stos
rcr
and
xchg
cmp
das
adc
dec
push
adc
inc
fiadd
mov
push
popa
enter
xor
or
sub
xor
out
dec
mov
sbb
rol
adc
inc
imul
daa
and
fcomp
add
or
test
mov
mov
scas
sub
and
cmps
jge
xor
and
pop
push
sbb
daa
outs
xchg
popf
mov
rol
adc
mov
fistp
pop
add
enter
mov
ins
push
popa
and
popa
test
test
pushf
rol
addr16
and
jns
pop
adc
jl
and
adc
push
(bad)
push
out
and
movs
pop
mov
pop
xor
cmp
gs
and
or
push
adc
in
jb
add
push
inc
push
leave
inc
push
fild
or
push
push
das
xchg
add
fild
xchg
pushf
in
fistp
daa
fild
and
sahf
out
ficom
sub
inc
int
jns
push
fs
sub
test
pop
sub
lahf
mov
push
aad
adc
sub
test
mov
int
mov
je
and
ds
(bad)
push
js
ficom
pop
cmovae
adc
inc
das
mov
xor
sbb
mov
pop
push
imul
jae
ja
sub
xor
les
repnz
les
jno
nop
fidivr
sahf
xchg
cmps
cmp
sub
jbe
(bad)
cmps
jge
sub
push
lea
out
mov
add
push
inc
cmp
imul
add
sub
aad
mov
or
mov
or
shl
dec
ins
inc
fbstp
cmp
mov
sbb
fist
sub
je
xor
inc
dec
aas
mov
pusha
stos
test
sub
cs
push
outs
dec
push
in
mov
pop
jl
mov
cld
sub
or
adc
pop
xchg
or
inc
inc
mov
mov
pop
dec
je
and
inc
pushf
(bad)
sub
lahf
(bad)
(bad)
add
adc
mov
shr
inc
lock
sbb
movs
stc
push
dec
hlt
add
adc
movs
sub
sub
push
ret
mov
inc
jg
ret
cdq
sub
jb
ret
add
push
les
in
inc
and
adc
std
adc
out
inc
mov
ins
cmp
push
adc
and
bswap
leave
sbb
inc
ror
mov
add
cs
xor
mov
add
outs
mov
mov
adc
test
popf
or
sbb
lds
adc
pop
cmc
loopne
xor
or
xor
movs
cs
xchg
test
arpl
dec
xor
stos
cmps
add
stos
inc
das
push
dec
int
jns
jnp
mov
mov
ins
xor
cmp
mov
push
aam
push
xor
jb
dec
enter
loop
add
sbb
sbb
cmps
ins
pushf
adc
repnz
aas
and
data16
ret
aaa
hlt
hlt
jb
leave
ror
lock
fiadd
jae
add
mov
pop
rol
pop
sub
inc
mov
and
lods
ficomp
pop
dec
push
pop
rcl
lods
jo
lods
inc
ds
out
int3
jno
aaa
xor
fsub
xor
aas
xchg
sbb
aam
xchg
std
shl
sbb
mov
int3
inc
int3
enter
sub
shl
das
les
or
rcr
sub
inc
js
(bad)
cmp
fisub
cdq
inc
inc
sbb
rcr
pop
sub
imul
inc
and
adc
jne
pop
call
xor
iret
rcr
repnz
mov
imul
bound
inc
js
xchg
adc
sub
xor
sbb
xor
adc
or
test
rcr
adc
cs
or
sub
test
sti
mov
test
ror
mov
inc
xlat
mov
dec
add
fs
fnsave
dec
sbb
lods
outs
call
test
pusha
mov
inc
mov
popf
pop
fdivr
repz
and
je
pushf
inc
mov
add
inc
cwde
dec
mov
cmps
add
xchg
xchg
adc
nop
inc
nop
mov
push
sbb
enter
shld
cmp
cmp
imul
imul
and
gs
pop
ret
lea
test
push
xor
mov
add
mov
mov
rol
(bad)
shl
add
scas
or
fwait
mov
mov
repnz
xor
or
cs
movs
or
mov
xchg
aas
call
adc
lods
cld
xor
push
mov
(bad)
xor
mov
inc
jb
pusha
xor
inc
rcr
fmul
fist
jmp
and
in
test
in
test
sbb
fsubrp
inc
and
ja
aaa
daa
adc
pop
fmul
xor
repnz
cmp
imul
popf
scas
cmc
push
add
sub
iret
repz
jg
mov
out
cmp
repnz
mov
pop
out
sahf
out
sub
jl
ss
les
sub
mov
or
or
dec
popa
inc
mov
sub
inc
inc
dec
dec
adc
cmp
test
ja
test
push
sbb
sbb
sti
in
loopne
and
je
inc
fsub
fdiv
mov
inc
rcl
aam
cmps
mov
lods
or
add
rol
and
or
pop
aaa
stos
pop
dec
inc
sbb
mov
xchg
leave
xchg
hlt
ret
dec
cmp
(bad)
retf
dec
pop
cmp
cmp
fdivr
repz
cmps
cmc
adc
xor
jbe
pop
cmp
xchg
cmp
cmp
jb
cmp
leave
and
inc
loop
jo
sub
mov
aaa
mov
lea
mov
rol
inc
xor
sbb
sar
cmp
das
pusha
pop
adc
pop
test
adc
rol
ss
or
cmp
cmp
cwde
cwde
lds
sbb
jno
nop
adc
push
pop
fld
cmp
sbb
ds
mov
jmp
jg
imul
adc
mov
rcr
pop
test
pop
fsub
les
pushf
add
int3
in
cmp
test
nop
ja
cmp
mov
cmp
jno
and
or
sbb
jo
fsub
or
ds
xchg
mov
ds
mov
mov
inc
mov
xor
push
aas
push
sub
cmp
repz
outs
mov
iret
call
inc
push
sub
xor
mov
pop
pop
inc
inc
pusha
jnp
jecxz
iret
xchg
mov
mov
push
xor
mov
es
dec
push
xor
push
xor
(bad)
inc
jbe
push
push
cmp
dec
fld
push
cmp
dec
imul
rcr
xor
push
pop
push
xor
dec
xor
pop
sar
imul
jmp
cmps
pop
mov
adc
mov
movs
outs
ins
pop
movs
lods
inc
dec
sbb
sub
sub
(bad)
cs
outs
nop
adc
inc
pop
adc
iret
repz
dec
ins
(bad)
scas
adc
dec
sti
int
inc
fiadd
sub
and
rol
push
movs
adc
les
pop
xor
inc
dec
stos
pop
dec
jmp
stos
fistp
or
lods
and
lods
lea
mov
lods
lods
movs
lea
mov
lds
imul
pusha
hlt
mov
(bad)
sbb
(bad)
cs
into
outs
pop
cmp
pop
push
xchg
es
lea
xor
mov
pop
call
add
call
lahf
(bad)
sbb
popf
inc
mov
lock
ss
call
pop
inc
pop
or
inc
shl
push
cli
jnp
in
dec
(bad)
aas
jmp
sub
or
or
clc
or
cmp
ss
arpl
js
or
cmp
jl
fisttp
dec
jge
push
repnz
jmp
lods
add
mov
adc
adc
xor
xor
dec
(bad)
jae
or
retf
ret
sub
dec
adc
inc
xor
pop
gs
sub
outs
inc
ins
and
inc
push
repnz
je
or
and
add
push
hlt
cmps
sahf
(bad)
test
push
mov
mov
add
pop
sbb
inc
dec
push
jo
mov
add
jp
and
add
sbb
sub
adc
mov
push
in
inc
rcr
cmp
xchg
adc
dec
and
cdq
add
push
dec
pop
sbb
add
adc
fstp
lock
or
pop
mov
push
mov
mov
push
pop
add
jbe
sbb
js
sti
sub
repnz
dec
xor
add
pop
or
push
daa
pop
push
add
js
adc
cmp
push
xchg
xor
loope
imul
sbb
dec
pop
xor
push
mov
mov
pop
dec
stos
push
test
mov
or
cmc
push
and
sbb
mov
pop
or
pusha
mov
jp
mov
and
and
dec
int
mov
add
jno
test
pop
push
cmp
movs
cmp
mov
(bad)
js
leave
and
mov
fadd
movs
push
scas
dec
jp
aaa
rcl
or
ret
aam
mov
cmp
or
cli
add
xchg
push
cmp
call
mov
add
push
je
dec
je
dec
adc
cmp
mov
or
aas
loope
or
mov
test
jl
sbb
add
add
movs
test
xchg
out
jle
or
jmp
xchg
jmp
mov
adc
aaa
inc
int
pop
bnd
adc
sub
sbb
mov
fisttp
sbb
mov
mov
mov
outs
cmp
or
jge
add
cli
dec
inc
jne
add
push
xor
adc
cdq
pop
and
xor
sbb
jbe
mov
push
pop
cmps
dec
add
daa
jbe
pop
inc
aaa
inc
fstp
pop
or
pop
test
pop
push
fild
add
cmp
jae
xchg
arpl
ficomp
aas
sbb
nop
dec
ror
rcl
jnp
test
popf
js
or
cmp
nop
cmp
mov
add
jne
push
jecxz
inc
cmp
call
dec
fisub
pop
xor
pop
(bad)
jg
dec
lea
adc
out
out
xchg
mov
in
cld
dec
dec
cmp
repz
mov
ds
repz
or
push
sbb
repnz
int3
sbb
pop
retf
sbb
call
fnsave
(bad)
xchg
outs
mov
aaa
call
sub
adc
cmp
imul
fist
adc
scas
retf
mov
pop
inc
imul
sbb
xor
dec
push
lods
movs
idiv
jmp
aas
or
enter
dec
repnz
jo
icebp
hlt
jmp
cmp
imul
pop
movs
movs
cmp
inc
repz
xor
add
prefetchnta
js
fcom
sbb
test
dec
mov
(bad)
movs
repnz
add
loopne
or
adc
fwait
icebp
sahf
sub
cmp
jmp
pop
icebp
cld
and
or
in
adc
xchg
mov
push
cmp
je
pop
cmps
push
cmp
or
dec
das
push
int3
cmp
aam
sbb
dec
mov
cmc
push
aam
movs
movs
(bad)
add
je
push
adc
sbb
or
mov
add
inc
icebp
push
push
xor
push
repnz
into
test
adc
xchg
sub
add
ret
mov
cmp
stos
sbb
lds
push
repnz
mov
clc
mov
xor
mov
(bad)
out
push
jo
stos
push
scas
add
or
nop
sub
out
je
mov
xchg
mov
add
loope
mov
rcl
cdq
call
xchg
pop
ss
imul
or
or
mov
daa
mov
mov
sub
and
and
sbb
adc
movs
push
push
push
xor
lock
add
push
call
or
push
pop
jae
fucomp
xor
out
mov
adc
inc
add
ds
scas
or
inc
inc
sbb
pop
or
fadd
mov
mov
scas
or
mov
jo
jns
ret
pop
dec
add
out
mov
pop
or
xor
imul
pop
xor
jb
push
pop
repnz
add
inc
adc
mov
jb
gs
pop
outs
push
push
jbe
out
dec
fwait
and
(bad)
or
jo
cmps
push
das
jecxz
xchg
fadd
out
inc
es
outs
aaa
div
imul
inc
imul
imul
ja
inc
call
mov
and
mov
add
push
xor
inc
add
das
push
imul
lds
add
cmps
add
push
xor
and
add
mov
push
jge
outs
fwait
sbb
adc
xlat
add
js
adc
loope
rcl
mov
xor
fidivr
and
out
jl
add
add
ret
js
xor
xchg
jb
xchg
and
cmps
sar
push
mov
inc
and
push
loope
xchg
adc
mov
xor
sbb
sub
push
mov
mov
and
jl
inc
test
dec
retf
push
push
add
dec
and
xor
pop
or
mov
mov
jns
inc
ja
xor
daa
aaa
push
dec
xlat
jmp
data16
jmp
call
push
stos
test
push
cwde
rol
call
add
sti
sub
cmps
int
push
sbb
inc
cmp
je
or
jne
add
push
outs
sbb
sub
addr16
adc
in
out
fstp
loopne
jmp
in
shl
ins
xor
and
enter
movups
or
test
arpl
xchg
add
aaa
mov
sbb
lea
or
imul
movs
jns
lods
or
add
mov
mov
jmp
dec
nop
das
gs
add
and
push
cmp
shl
jl
xlat
dec
mov
sub
or
or
or
dec
js
mov
dec
and
fiadd
adc
xchg
lds
sbb
outs
test
ins
cmp
and
inc
inc
xchg
scas
or
xor
add
cdq
rol
aad
dec
mov
std
je
sub
(bad)
aad
dec
cmps
add
push
jge
xor
sbb
cwde
cmp
test
test
fdiv
stos
lea
mov
inc
pop
fist
xchg
imul
add
or
jae
pop
add
mov
clc
inc
cmp
je
push
pop
xor
call
xchg
fcomp
hlt
xchg
jmp
pop
mov
das
fisttp
dec
push
mov
cld
adc
mov
push
add
aas
arpl
or
mov
sti
xchg
sub
push
or
adc
ss
dec
mov
dec
adc
or
or
(bad)
or
pop
dec
sub
add
dec
mov
dec
mov
loopne
in
sbb
and
ret
aam
sbb
and
push
loope
fwait
repz
pop
inc
sub
pop
mov
sub
jge
adc
push
jo
mov
push
cmp
ficom
mul
add
ret
jmp
add
es
int3
pop
imul
mov
dec
add
push
mov
in
test
out
jle
xchg
pop
cs
in
mov
mov
xchg
out
dec
pop
inc
out
ficomp
dec
pop
sub
jl
mov
mov
mov
fs
cmps
movs
jne
jb
(bad)
mov
int
inc
jmp
add
int3
push
ret
add
ss
xchg
cwde
add
cmp
loop
mov
inc
mov
xchg
cwde
push
(bad)
and
in
xor
pop
pusha
mov
nop
das
sub
dec
mov
daa
dec
mov
sub
xchg
movs
daa
dec
cs
jge
retf
dec
imul
inc
add
and
inc
shl
adc
inc
inc
pusha
fs
jnp
pop
sbb
and
mov
mov
sub
push
leave
jbe
dec
out
pop
cmp
push
fist
fisub
data16
retf
out
fs
in
sub
into
jecxz
sub
out
fst
enter
xor
pop
mov
dec
xor
ret
push
sti
inc
jmp
lods
(bad)
rcr
xchg
gs
rcl
cmps
push
jo
rcl
lahf
mov
cmp
es
push
fisub
leave
xchg
inc
push
inc
loope
pop
sbb
adc
pop
or
and
jl
pusha
inc
popa
and
daa
cmp
add
aas
add
mov
sbb
xchg
sub
sbb
mov
adc
in
ins
mov
es
or
rcl
dec
jne
leave
push
xchg
inc
iret
inc
pusha
pop
cmp
add
sub
jecxz
push
add
call
ret
rcl
out
pusha
inc
and
jne
adc
jo
add
add
loopne
push
push
clc
sar
push
push
add
xor
test
inc
test
mov
sbb
jbe
mov
ret
and
or
gs
adc
shl
or
outs
jne
in
(bad)
inc
sbb
pop
sbb
outs
adc
idiv
add
adc
or
sub
iret
mov
jnp
dec
push
jo
xor
adc
dec
xchg
xor
ins
scas
gs
inc
or
xchg
fs
aad
push
inc
jns
xlat
mov
test
data16
jp
pusha
aaa
sub
jne
jp
rol
sub
hlt
popa
inc
clc
call
bound
mov
adc
sub
sub
cs
or
push
push
add
add
out
pop
add
and
or
push
and
jo
js
ds
xchg
sbb
or
dec
or
xlat
sti
pop
test
xchg
add
or
xor
sbb
xor
pushf
xor
lods
adc
and
sbb
sbb
dec
mov
jmp
jg
jae
add
add
leave
or
fwait
push
hlt
lea
or
js
dec
aaa
xor
std
push
add
adc
xchg
shr
mov
ds
lock
mov
sub
or
add
mov
je
dec
mov
jge
mov
xchg
xchg
push
test
push
pop
jg
je
out
dec
cwde
aad
mov
pop
push
adc
sbb
(bad)
mov
add
fs
adc
shl
sbb
(bad)
cmps
fs
pop
pop
dec
push
sahf
cmp
xor
js
in
xorps
repnz
cdq
fldcw
dec
xor
push
xchg
xor
sar
push
xor
mov
sbb
pop
push
inc
xchg
jle
push
add
adc
data16
dec
test
cmp
or
push
adc
or
add
mov
cmp
jne
mov
fnstcw
(bad)
mov
movups
fbstp
dec
jne
jmp
mov
jle
pop
dec
test
ror
push
test
sahf
xor
cmp
jle
(bad)
pop
push
mov
push
gs
mov
test
(bad)
push
mov
mov
xchg
mov
nop
jbe
(bad)
aaa
sub
or
iret
and
(bad)
and
hlt
add
push
xor
ret
sub
push
aas
fcmovb
mov
ror
sar
sbb
sub
xor
sbb
mov
jl
or
xchg
push
or
pop
sub
in
out
test
test
dec
fstp
aam
fbstp
fistp
retf
je
mov
dec
push
sbb
sub
mov
div
ins
in
scas
movs
and
cmps
sbb
loop
mov
imul
ret
jge
xor
adc
(bad)
jne
jmp
clc
shl
mov
cld
sbb
pop
setg
mov
xchg
sbb
dec
dec
or
addr16
leave
adc
mov
xchg
push
nop
lock
cmps
jns
popf
in
or
stos
mov
push
dec
fistp
jmp
lea
sbb
mov
jg
cs
cmp
xchg
mov
bndstx
jmp
xchg
mov
test
adc
lds
or
ror
pop
cmp
ins
or
dec
ja
ja
mov
push
adc
or
mov
xchg
cmp
aas
pop
je
aaa
jl
ins
xchg
push
lar
ja
push
fcomp
sbb
mov
add
push
add
add
mov
or
movsx
ror
iret
pop
es
add
dec
mov
sub
fisttp
cmp
data16
mov
mov
cmp
ja
jb
add
xchg
out
test
call
(bad)
out
mov
xor
mov
or
push
pop
lock
sub
mov
shr
xchg
adc
or
ins
cmp
(bad)
adc
push
dec
jge
popf
(bad)
mov
mov
(bad)
enter
mov
das
imul
and
adc
sbb
in
add
adc
pop
popa
adc
mov
push
pop
add
add
aas
add
mov
push
es
or
lods
bound
push
xor
pop
aaa
mov
jl
sbb
pop
adc
into
sbb
rep
push
mov
cmps
sbb
sbb
mov
jb
inc
cmp
pop
push
data16
or
test
fisub
inc
mov
or
lods
cmp
repnz
stos
rcl
fmul
dec
jns
ins
fldcw
sub
pop
or
out
aam
sbb
push
mov
arpl
push
cmc
inc
add
dec
call
sbb
cmp
sbb
mov
and
jo
lahf
and
ret
and
enter
ss
mov
scas
pop
clc
inc
jge
pop
sbb
(bad)
std
imul
xchg
pop
pushf
bound
in
mov
outs
add
inc
pop
lods
mov
pop
arpl
mov
add
in
pop
mov
pop
sbb
and
je
pop
cmp
ins
popa
bound
lock
(bad)
lods
(bad)
addr16
sbb
in
push
scas
dec
or
adc
cwde
scas
xor
jmp
loop
fnstcw
adc
lods
sub
cmp
pop
pusha
ret
and
aaa
aad
jbe
dec
xchg
sbb
dec
adc
retf
je
adc
loopne
inc
jmp
pop
or
mov
in
icebp
xchg
in
daa
test
cld
add
push
add
cdq
add
inc
jge
mov
ret
(bad)
xchg
ja
sub
dec
in
sub
int3
add
rol
xor
push
push
ret
mov
mov
mov
dec
cmp
jne
jmp
jmp
jmp
inc
clc
cmp
aad
sbb
push
ss
(bad)
fld
push
adc
pop
xchg
mov
lods
outs
loop
push
movs
stos
aas
and
popa
push
sub
hlt
fnstsw
iret
adc
mov
pop
xor
inc
cmp
hlt
cwde
je
ins
(bad)
and
xor
jp
lock
shl
leave
lock
adc
ficom
xor
cmp
mov
adc
pop
push
jne
xchg
cmp
add
iret
lods
pop
test
outs
lock
xor
pop
lock
idiv
test
mov
cmp
dec
adc
jno
cmp
aaa
pushf
pop
stc
leave
inc
repnz
jmp
cld
pop
dec
jmp
jno
dec
es
hlt
hlt
mov
aaa
pop
rcr
clc
clc
hlt
jmp
jno
xchg
sbb
mov
fsub
dec
xor
lods
add
add
xor
mov
push
or
sub
test
es
out
sub
movs
mov
mov
sub
in
ds
add
in
and
cmp
sbb
(bad)
mov
sbb
pushf
test
ss
jl
sub
dec
push
inc
xchg
in
fwait
adc
cmp
mov
xlat
pop
hlt
(bad)
sbb
leave
add
(bad)
repz
xor
pop
arpl
lea
ret
popa
aam
and
es
call
(bad)
in
pusha
les
cdq
add
push
out
lea
sbb
add
dec
ss
loopne
jo
mov
daa
test
xor
in
scas
cmp
xchg
clc
retf
and
cwde
cmc
or
(bad)
mov
jbe
push
mov
cmp
push
sbb
cmp
aam
repz
int3
fld
fstp
fs
fst
mov
inc
data16
ins
in
dec
fild
jmp
push
fdiv
test
push
jmp
test
sbb
mov
rol
retf
popa
dec
mov
add
mov
sub
jmp
lea
xor
or
scas
jecxz
ror
test
pop
pop
or
adc
fwait
loope
xchg
jns
loope
cmp
dec
xlat
es
ja
mov
jnp
out
ror
out
(bad)
fstp
aaa
xor
sub
adc
(bad)
fimul
ffreep
add
inc
ds
adc
or
sti
mov
inc
fistp
pop
fmul
xchg
mov
retf
add
mov
mov
test
mov
xchg
xchg
xor
or
jns
out
data16
cmps
les
fwait
and
fisttp
sub
adc
push
fistp
mov
mov
neg
sub
in
test
jo
clc
xor
sub
shl
sbb
sub
dec
or
arpl
lds
inc
out
outs
or
sbb
jae
dec
mov
or
inc
jg
sub
movs
(bad)
jle
add
jmp
add
ror
mov
mov
aam
sbb
xor
pop
add
cmps
cmc
xchg
neg
jp
out
inc
fistp
jno
push
clc
outs
ins
imul
cmp
jmp
retf
in
ds
jb
add
idiv
inc
js
lahf
mov
ret
int
mov
pop
adc
or
or
dec
add
test
xchg
pop
(bad)
hlt
add
push
add
dec
xor
je
jno
retf
add
inc
adc
ret
push
or
sahf
inc
and
aas
sbb
(bad)
sbb
pop
push
xchg
push
mov
imul
fsub
xchg
fstp
idiv
call
mov
je
lock
or
add
inc
or
cmp
int3
into
cld
xor
add
pop
rol
arpl
cmp
js
pop
mov
adc
aas
out
xchg
das
inc
xlat
add
or
loopne
xchg
mov
imul
add
push
push
or
or
or
ret
dec
jnp
pop
push
add
add
outs
dec
pop
in
(bad)
out
sub
inc
ins
jle
ins
fdiv
jo
test
add
pop
and
dec
push
imul
or
div
cdq
(bad)
pushf
lahf
add
or
push
inc
imul
jne
out
lods
push
outs
lea
nop
adc
in
rol
sub
pop
dec
or
outs
ins
jns
ins
inc
lock
ficom
push
push
or
fwait
or
push
fcmovb
mov
xor
and
pop
leave
adc
jae
jl
sbb
or
add
repz
cmp
push
cmp
je
or
jb
or
data16
dec
imul
lds
outs
jne
repnz
sahf
push
int3
movs
push
or
retf
rcr
push
add
and
add
fadd
cmps
sbb
xchg
push
xchg
pop
jbe
add
aas
add
out
test
jbe
mov
adc
push
push
(bad)
inc
or
inc
ins
jbe
inc
cmp
je
inc
popa
dec
dec
ss
or
add
inc
jbe
push
or
push
cmp
and
(bad)
jge
sbb
mov
sbb
xchg
adc
mov
lahf
sbb
shl
xchg
mov
add
add
out
pop
nop
pop
add
mov
or
cwde
das
movs
jl
xlat
bound
pushf
jnp
or
adc
lock
sub
inc
or
inc
loope
push
and
inc
add
cmp
jo
inc
imul
ret
or
lds
in
test
idiv
jl
mov
pop
adc
fidivr
pop
sub
push
cmp
jle
adc
jne
dec
or
pop
cmps
push
jo
and
sub
icebp
bound
rol
fcomp
enter
dec
aam
or
das
fcom
lods
sub
pushf
nop
comiss
jo
cmp
in
jg
jle
inc
lods
jne
push
fsub
pusha
sub
not
jle
in
daa
mov
xor
push
push
ret
xor
and
pusha
pusha
and
sub
sub
lock
xchg
mov
jecxz
fstp
pop
sub
add
xor
cmp
sub
or
ins
or
cmp
sbb
xor
jbe
pop
fcomp
les
(bad)
movs
inc
xor
lods
pop
dec
mov
inc
daa
sub
push
mov
aaa
(bad)
(bad)
cmp
imul
adc
sub
daa
add
repnz
imul
pop
and
daa
out
pop
rol
aam
add
frstor
inc
dec
cmp
shr
xchg
pushf
nop
adc
and
inc
inc
test
push
and
cmovne
outs
cwde
inc
or
repnz
or
popa
(bad)
and
cmp
adc
jae
pop
sub
sbb
and
ds
loopne
test
in
pushf
test
inc
pusha
adc
jne
fadd
mov
mov
ss
push
add
in
sbb
je
inc
mov
or
cmps
in
ret
hlt
adc
loop
xor
or
xor
shr
cld
pop
mov
push
mov
mov
lods
std
or
popf
mov
into
mov
mov
push
inc
push
cld
and
cmp
add
sbb
add
unpcklps
xor
inc
arpl
inc
out
cmp
or
fxam
repz
add
push
push
or
cmp
mov
fadd
pop
xchg
add
inc
push
add
dec
jb
pop
outs
jb
push
and
xchg
xor
or
xchg
sbb
(bad)
xchg
ins
xchg
push
add
(bad)
cdq
mov
xchg
das
mov
add
lock
inc
push
inc
sbb
(bad)
pop
jge
or
mov
xchg
iret
jnp
xchg
clc
push
inc
and
por
and
add
ret
dec
mov
or
add
xchg
dec
push
inc
and
shl
clc
fcom
push
sub
les
dec
jbe
inc
inc
xchg
push
dec
adc
inc
or
inc
hlt
and
jo
push
dec
push
imul
ins
inc
stos
push
das
xor
add
cs
mov
inc
push
movs
cmp
ja
sbb
(bad)
sbb
sub
cmp
fs
fs
push
mov
rol
fsubr
ss
xor
loopne
fwait
cmp
movs
loop
mov
mov
jns
or
lods
fiadd
xchg
and
pop
mov
push
movq
loope
push
dec
push
iret
jnp
xor
dec
mov
test
xchg
daa
daa
iret
inc
int3
repnz
mov
cwde
(bad)
leave
leave
enter
lods
cmc
in
fs
mov
js
xor
push
pop
push
mov
sbb
cld
dec
add
xor
xor
jmp
inc
add
add
sub
inc
or
cmp
inc
stos
inc
loopne
inc
push
push
dec
inc
add
mov
dec
adc
(bad)
mov
cmp
dec
mov
aas
pop
mov
lods
mov
or
jle
mov
dec
mov
sub
cmp
mov
out
(bad)
sbb
dec
test
lea
push
xor
mov
mov
jo
stos
jp
sub
or
ds
stos
xchg
xor
stc
mov
and
sub
dec
xchg
aaa
or
dec
xor
ss
es
add
sub
fs
mov
dec
mov
aaa
adc
movs
cwde
mov
push
movs
pushf
mov
mov
add
jb
sbb
cmp
aas
add
popa
sub
cmp
jo
adc
add
inc
nop
iret
and
inc
hlt
inc
or
mov
pop
or
int3
data16
pushf
add
sub
cmp
into
inc
push
das
lea
xchg
mov
cmp
mov
push
adc
js
cmp
xchg
or
ins
cmp
ret
jle
mov
xchg
push
xchg
mov
add
daa
mov
cmps
and
pop
dec
sbb
xor
(bad)
enter
add
mov
jmp
inc
sbb
mov
pushf
jno
arpl
daa
add
loopne
es
sbb
or
push
nop
xlat
xchg
push
daa
inc
dec
js
xchg
das
(bad)
sub
daa
in
loope
inc
pop
pusha
pop
sbb
and
and
imul
xchg
pop
(bad)
cli
or
in
or
sbb
xchg
arpl
mov
in
xchg
and
mov
or
jo
cmp
pop
xchg
daa
or
popa
js
pop
xchg
inc
cmp
add
ss
add
adc
cwde
pop
retf
movs
inc
sub
sbb
inc
fs
push
rol
rol
cdq
sub
outs
jbe
ins
adc
push
outs
ins
push
cmp
pusha
xchg
aad
inc
mov
out
mov
mov
mov
scas
or
outs
xor
push
daa
ss
dec
xchg
aas
mov
inc
inc
dec
cs
add
pop
adc
mov
dec
push
xchg
xor
scas
pop
mov
mov
mov
xlat
inc
inc
aad
jo
jb
xchg
dec
push
mov
stos
inc
mov
mov
stos
je
sbb
xchg
arpl
pop
or
jb
inc
inc
mov
xchg
int3
add
mov
repz
jp
outs
mov
mov
inc
push
shl
nop
jnp
xor
xchg
outs
jecxz
into
test
and
dec
fisttp
pop
inc
pop
les
push
lea
js
sub
daa
(bad)
jbe
cmps
xchg
xchg
les
stc
push
add
or
mov
cmp
xchg
loop
add
sub
sbb
inc
jle
xchg
rol
sbb
in
loopne
dec
push
adc
inc
pushf
sub
mov
in
sub
add
gs
sar
push
jae
jge
and
xchg
ja
or
test
sbb
clc
push
cs
xchg
inc
xchg
in
xor
movs
xchg
inc
push
lock
xchg
sub
xchg
and
or
xor
cmp
dec
or
call
pop
inc
dec
leave
fcmovnb
(bad)
ficom
and
add
pushf
or
or
add
or
xor
and
push
mov
not
pop
pop
daa
push
lea
mov
out
adc
cwde
mov
rol
aaa
xor
out
push
mov
mov
mov
inc
sub
jo
jb
sbb
xor
in
xchg
inc
push
sbb
xor
cwde
or
sti
add
aaa
test
xchg
push
xchg
out
fidivr
fimul
test
pop
jle
and
inc
jne
push
and
fadd
cwde
and
sbb
xor
add
push
push
mov
dec
jg
sub
push
xchg
popf
popa
add
in
xor
or
sbb
and
and
xchg
or
retf
repz
js
cmps
adc
loopne
pop
xchg
mov
repnz
jle
call
call
out
les
mov
inc
sub
inc
leave
stos
mov
(bad)
fcomp
aam
and
test
fcomp
cmp
outs
adc
or
(bad)
loopne
push
push
fwait
lock
mov
and
nop
push
add
sti
push
cmps
retf
pushf
push
cmps
rcr
pop
jno
mov
sahf
out
into
or
adc
dec
enter
or
inc
dec
adc
add
pop
jecxz
mov
add
sub
pop
sub
adc
jo
sub
mov
(bad)
mov
lea
iret
xor
int3
pushf
inc
add
popf
xlat
sub
arpl
popf
outs
mov
jle
stos
paddb
das
cli
comiss
das
or
pop
sahf
mov
mov
dec
addr16
pop
pushf
std
(bad)
cld
(bad)
sti
loop
pop
repz
dec
jo
cwde
aam
xchg
push
(bad)
scas
mov
stc
sub
cmp
add
cmp
cld
dec
jecxz
push
jno
add
dec
and
dec
mov
push
mov
leave
sub
or
sub
pop
test
push
add
enter
and
int3
dec
sub
sub
or
add
push
outs
dec
add
aad
xor
push
sbb
mov
jmp
dec
lods
lds
push
or
mov
sub
adc
mov
pop
fld
retf
and
call
mov
mov
push
xlat
sub
rol
cmp
pusha
mov
dec
scas
aam
cmovns
or
add
add
pushf
jae
push
rcl
sahf
cmps
add
scas
cmp
pop
cmp
or
(bad)
imul
jle
(bad)
mov
mov
imul
adc
push
daa
adc
loopne
push
inc
jp
int3
pusha
pusha
lahf
cld
imul
add
sub
js
inc
pop
mov
outs
je
add
fs
add
mov
xor
mov
div
mov
pop
lock
icebp
inc
mov
jge
inc
mov
jno
xchg
pop
adc
cmp
xor
mov
int
inc
jnp
js
mov
sbb
cmp
mov
gs
push
test
stos
pop
(bad)
aam
stc
mov
mov
cs
push
test
into
nop
pop
inc
and
movs
mov
das
jmp
inc
pop
dec
les
lods
dec
adc
addr16
gs
push
inc
daa
push
bswap
push
ss
lods
sbb
pop
push
fcomp
pop
clc
pop
addr16
jmp
pusha
inc
add
gs
data16
in
mov
outs
pop
mov
mov
ds
lea
dec
push
jl
shr
out
out
imul
mov
xor
mov
iret
add
arpl
rol
sbb
mov
je
add
pop
dec
cmp
sub
pop
add
test
ins
dec
outs
sub
or
mov
stc
adc
cmps
and
dec
add
inc
iret
movs
sub
adc
jbe
push
jae
das
(bad)
sbb
movs
movs
jns
movs
sbb
repnz
sar
mov
add
pop
dec
cmps
pop
push
retf
add
out
fisubr
fimul
adc
pop
cmps
pop
mov
sub
mov
adc
sbb
std
sbb
pop
retf
pop
sbb
icebp
xchg
das
push
dec
sbb
das
test
add
in
or
pop
add
xchg
sub
and
imul
cwde
adc
shl
push
add
stos
cs
add
and
and
(bad)
aam
inc
std
or
test
mov
sub
push
add
xchg
and
sbb
mov
add
cmp
or
mov
rcr
sbb
dec
leave
xchg
dec
or
push
mov
dec
movs
push
mov
or
and
cmp
lods
inc
mov
leave
ins
push
mov
dec
loopne
test
dec
jne
adc
nop
push
mov
mov
mov
aam
scas
daa
push
mov
add
stos
dec
xor
inc
cmp
push
fwait
imul
add
ins
inc
pop
or
adc
sub
mov
daa
mov
dec
sbb
add
lods
or
stc
xor
adc
or
sbb
popa
fs
mov
dec
rol
push
sbb
push
adc
out
or
outs
and
mov
mov
dec
and
jnp
in
push
push
inc
sbb
in
mov
mov
xchg
or
mov
push
ret
test
ja
xor
cmp
or
mov
dec
or
test
pushf
mov
xor
jmp
add
movs
stos
or
jecxz
jmp
jb
ss
sbb
sahf
(bad)
jmp
cmp
inc
dec
mov
dec
stos
pop
div
dec
in
inc
inc
call
jg
(bad)
mov
ror
adc
iret
dec
push
inc
fsub
aaa
enter
xlat
dec
test
and
xchg
cmp
fbstp
and
out
les
gs
out
test
add
test
add
lea
xchg
mov
das
add
pusha
xchg
push
(bad)
mov
lock
cmps
inc
xchg
sbb
or
rcl
and
loopne
push
sub
push
pop
sub
pop
add
scas
inc
lahf
inc
push
out
sbb
sub
xchg
nop
fbld
mov
inc
enter
dec
adc
dec
push
and
mov
call
ror
mov
out
or
(bad)
xlat
push
mov
ja
out
push
dec
and
mov
dec
jnp
imul
out
aaa
mov
imul
out
stc
xor
idiv
push
les
xor
ret
dec
mov
addr16
xchg
imul
mov
cmps
cld
push
xor
sbb
mov
push
add
mov
cmp
and
adc
or
(bad)
call
push
jae
pop
sbb
push
sub
jecxz
jl
pop
jnp
mov
outs
jge
out
jbe
sub
mov
mov
mov
ja
lds
cmp
dec
rcr
retf
retf
jg
lods
mov
movups
pop
mov
cld
repnz
add
xchg
daa
add
mov
out
mov
out
mov
inc
mov
mov
and
add
in
and
ins
cld
mov
jb
cmp
and
push
rcr
movs
stos
(bad)
jns
daa
in
mov
data16
mov
add
or
mov
in
(bad)
add
sbb
and
and
xor
rep
cmp
mov
jecxz
jbe
jo
jbe
ret
add
cld
mov
inc
xchg
imul
push
push
cld
mov
imul
mov
sub
inc
ficom
sbb
sub
scas
out
leave
cld
test
xor
add
push
inc
add
dec
mov
or
sbb
loopne
mov
sub
test
add
ficomp
push
daa
test
jl
repz
mov
pminub
add
rcl
loopne
and
dec
inc
repnz
nop
inc
dec
inc
sbb
sbb
lods
nop
test
cmc
push
js
or
and
rol
mov
mov
rol
outs
ja
add
mov
inc
mov
call
(bad)
add
mov
cmovo
mov
test
adc
inc
sahf
pushf
(bad)
sub
and
mov
push
pop
jo
sbb
mov
xor
in
and
in
or
mov
fld
add
pop
imul
rol
rol
int3
rol
mov
adc
lods
sbb
sub
xchg
cmp
movhps
xchg
fmul
bound
loopne
push
imul
inc
movs
lods
mov
pop
in
sub
js
push
push
test
stos
adc
pop
sti
dec
or
or
mov
adc
dec
ins
xchg
sub
rcr
loop
cmp
jl
ror
data16
(bad)
jno
push
add
add
sbb
adc
or
bndstx
inc
xchg
daa
mov
dec
enter
movs
lar
sub
sub
jae
movs
pop
inc
push
js
rol
movs
adc
add
stc
inc
and
or
sub
sbb
xor
dec
cmp
pop
loopne
jl
and
fisubr
jne
repz
sub
add
(bad)
inc
test
xlat
mov
inc
inc
add
mov
and
stc
out
sub
inc
or
mov
mov
into
icebp
rol
outs
nop
cmp
and
dec
xor
outs
ja
mov
mov
jbe
push
lods
es
das
jmp
or
xchg
push
sub
inc
sbb
push
xor
jbe
(bad)
push
cmp
adc
movs
adc
jecxz
fs
mov
pop
(bad)
ds
jae
add
mov
xor
pop
ja
add
mov
popa
sbb
mov
sub
xchg
cmovb
mov
sbb
test
popa
xchg
sbb
pop
sub
out
cs
fst
repnz
clc
inc
or
scas
push
in
rcr
in
cs
mov
adc
jns
in
mov
xchg
mov
xchg
sub
out
in
jge
mov
mov
mov
inc
inc
add
adc
loopne
xor
mov
jmp
es
push
adc
add
hlt
xchg
push
psllq
sbb
adc
mov
add
inc
stos
inc
xchg
pop
xor
fcomp
adc
shr
mov
imul
test
and
dec
jns
aad
(bad)
test
in
pusha
pop
fistp
iret
jecxz
xchg
dec
pop
or
rol
xor
mov
fs
rol
jbe
scas
mov
nop
inc
aad
adc
and
and
sub
and
and
nop
and
and
or
mov
mov
das
xor
jmp
fs
mov
mov
push
setl
or
adc
das
inc
push
repnz
(bad)
sbb
inc
frstor
dec
repnz
jnp
cmp
xchg
cmps
jbe
inc
adc
add
out
xlat
push
ret
ret
paddusw
stc
pop
sahf
sbb
mov
add
add
lods
or
xor
jp
mov
cmp
inc
(bad)
test
ds
jp
adc
dec
push
and
(bad)
xchg
jp
ret
ror
js
cmp
or
mov
mov
(bad)
cwde
ret
nop
pop
sbb
xchg
scas
pop
pop
pushf
shl
lahf
ja
and
out
addr16
mov
add
pop
jge
pop
dec
pusha
and
hlt
jge
and
jno
pop
or
jmp
xor
inc
ins
outs
bound
(bad)
fisttp
pushf
sti
fwait
(bad)
xlat
cmc
rcpps
retf
pusha
daa
into
jno
mov
push
mov
add
imul
jb
(bad)
inc
dec
repnz
loopne
inc
out
xchg
and
pop
pusha
jnp
sahf
aam
or
dec
inc
mov
in
pushf
and
mov
test
dec
hlt
jge
arpl
(bad)
lds
shl
and
dec
mov
xchg
push
nop
and
push
(bad)
mov
add
lds
fiadd
push
dec
fs
xchg
mov
pop
jb
or
or
jb
pop
jb
sbb
jb
pop
and
mov
sub
push
add
mov
ss
movs
sahf
daa
mov
mov
loop
jns
out
shl
sahf
out
jnp
xchg
movs
(bad)
lock
pop
or
cs
in
sub
(bad)
and
inc
and
adc
stc
gs
mov
inc
push
add
xor
cmps
push
xchg
cld
add
int
clc
add
adc
pop
push
xor
and
pop
call
and
adc
jg
lock
leave
mov
loop
mov
retf
syscall
add
into
add
mov
(bad)
xchg
mov
jmp
push
dec
jge
lea
test
jge
jb
loopne
int3
cdq
add
mov
mov
mov
adc
scas
outs
jecxz
ins
int3
imul
and
sbb
repz
mov
push
jo
inc
arpl
mov
pop
xchg
inc
push
pop
jo
jnp
push
pop
mov
pop
and
inc
cwde
cmp
mov
mov
cmp
sub
sub
fs
imul
lds
ja
and
inc
test
adc
inc
adc
inc
lock
add
lea
add
or
xchg
(bad)
in
cld
sub
add
or
add
lea
and
jne
mov
add
add
aaa
adc
pop
mov
push
mov
dec
fild
call
xchg
sub
mov
std
or
or
cmp
int
or
mov
(bad)
adc
sub
int3
sbb
xchg
fld
mov
stos
pop
or
mov
dec
rol
dec
enter
xor
enter
xlat
fbstp
push
jcxz
pop
xlat
and
jo
pop
sub
mov
outs
adc
inc
movs
loop
xchg
pop
and
aam
pop
push
ja
aam
and
outs
push
ja
push
mov
or
fwait
call
ja
ror
ja
ss
or
xor
arpl
or
dec
xchg
movs
mov
and
dec
int
jne
push
outs
into
push
daa
arpl
xchg
in
add
or
mov
in
test
outs
jne
jae
das
aas
loopne
int
call
jo
not
inc
in
je
mov
icebp
push
into
xor
sub
outs
add
mov
push
sbb
add
adc
test
stc
mov
or
add
pop
test
push
xor
mov
inc
in
cmp
fwait
xor
jnp
movs
jmp
cmp
mov
add
shl
rol
into
iret
xor
pushf
sub
dec
std
adc
xor
jbe
aam
div
outs
or
or
outs
je
pop
xor
xorps
test
xor
adc
pusha
adc
aaa
and
ja
push
leave
je
outs
and
int3
ds
mov
lods
or
(bad)
push
dec
imul
popf
xor
mov
outs
mov
outs
push
iret
add
add
jb
push
or
mov
dec
pop
sbb
test
cwde
xor
jle
mov
pop
movs
xchg
push
inc
push
jmp
in
sub
ja
out
in
push
or
adc
int3
or
adc
sbb
cmp
pop
sub
and
loopne
scas
cmp
and
rol
pushf
xchg
pop
sub
out
repnz
repnz
test
xchg
pop
fisubr
retf
call
dec
(bad)
rcr
jnp
add
into
es
das
sbb
push
mov
push
jle
mov
sbb
push
xchg
or
add
mov
pop
or
or
ins
sub
inc
nop
(bad)
movs
fcomp
movs
mov
push
outs
outs
je
sbb
push
jmp
mov
movs
sub
adc
jg
mov
and
xor
clc
cmps
adc
sbb
jb
or
shl
lea
aaa
mov
stos
retf
cmovbe
xlat
loop
cwde
jecxz
gs
or
or
push
push
movs
ror
mov
jmp
push
jle
or
pop
pop
xor
or
dec
test
shr
lods
bound
dec
cmp
inc
sahf
adc
or
cmp
shl
push
pop
and
movs
mov
loop
add
enter
out
adc
or
test
push
scas
adc
lahf
pop
and
rcl
xor
rol
aam
sub
sub
mov
je
xchg
mov
pop
or
aad
nop
sub
sti
or
inc
and
or
and
adc
nop
pop
adc
push
popa
loopne
xor
ret
nop
lods
or
push
add
js
cmps
mov
imul
bound
sub
mov
push
mov
es
add
sub
xchg
out
mov
int3
or
adc
out
mov
and
or
add
add
or
or
adc
add
dec
and
loopne
push
pop
inc
add
popf
and
shl
pop
hlt
adc
adc
add
and
inc
add
mov
(bad)
into
push
push
aaa
inc
mov
inc
adc
rol
arpl
push
adc
fisttp
outs
ret
adc
sbb
sbb
xchg
lahf
stc
xchg
xchg
push
mov
mov
adc
sbb
nop
inc
xlat
xchg
iret
dec
adc
jae
xor
cmp
test
shl
inc
sub
add
rol
pusha
stc
mov
sbb
sti
dec
popa
mov
cdq
ja
out
push
bound
fcomp
sbb
add
cmp
push
mov
add
mov
push
popa
mov
mov
jl
push
popa
aas
popa
sbb
or
cmp
push
(bad)
fwait
jbe
or
outs
in
ret
mov
iret
mov
data16
and
(bad)
adc
xchg
nop
pop
inc
(bad)
add
add
and
imul
dec
add
dec
sbb
adc
test
cmps
rcl
mov
inc
and
call
ja
fsub
xor
das
pusha
pop
stc
lahf
clc
pop
out
jb
or
das
cmp
inc
add
rol
xchg
push
loopne
clc
mov
mov
mov
jl
imul
inc
aaa
add
test
mov
push
int
jp
adc
adc
pop
popf
xor
push
inc
pusha
mov
xchg
aam
lea
out
xor
mov
inc
dec
or
cmp
adc
lock
adc
in
(bad)
adc
push
add
nop
xlat
push
jl
cmps
pusha
or
sbb
mov
fwait
inc
shl
adc
aad
cmp
inc
fidivr
leave
mov
or
sbb
in
test
mov
mov
adc
mov
adc
repnz
stos
and
fisub
pop
loopne
bswap
fisub
fucomi
mov
pavgb
loopne
mov
pop
push
imul
xchg
xchg
xchg
daa
and
leave
enter
loop
and
lods
fld
jecxz
lock
in
mov
test
setns
fs
retf
add
cmp
aad
in
rcl
cmp
iret
in
jp
or
js
psubw
jae
cmp
adc
aad
and
jmp
stos
adc
les
das
xchg
cmps
loopne
inc
cld
in
sbb
dec
stos
loope
pop
adc
push
ret
jns
sub
aad
into
mov
mov
pop
push
or
xchg
into
adc
pop
in
lea
pop
xor
push
mov
inc
xchg
inc
mov
cdq
add
add
cwde
jle
inc
or
mov
ficom
add
mov
add
or
rol
mov
inc
add
push
cmps
cmp
jmp
and
add
xchg
sti
bound
leave
cld
in
push
mov
add
mov
loopne
add
ret
cmp
pop
xchg
mov
mov
xor
push
adc
gs
mov
xor
and
adc
js
ins
mov
das
lods
cwde
lds
popa
cmp
sub
cld
lods
shl
jl
pop
push
xor
cdq
test
add
cmp
enter
fcomp
cmp
stc
popa
pop
inc
fwait
repz
xor
fwait
es
pop
lods
jmp
push
out
lods
cmp
sbb
mov
or
inc
int3
mov
mov
iret
xchg
dec
in
(bad)
popa
xor
or
dec
dec
imul
aas
movs
xchg
adc
add
es
or
or
pusha
adc
mov
pop
je
sub
sub
sbb
ror
imul
cmps
stos
pop
mov
push
lds
lods
inc
fwait
sub
lahf
ss
mov
sub
popa
shr
js
pop
jb
push
js
mov
mov
ret
add
push
mov
das
mov
cmp
jo
push
xor
popf
jp
mov
mov
mov
xchg
jmp
or
out
inc
inc
cs
jne
int3
nop
add
inc
clc
daa
movs
push
(bad)
mov
(bad)
mov
sub
dec
test
inc
or
push
das
cmp
pushf
jl
movs
sbb
cmp
xchg
sar
bound
imul
or
test
popf
(bad)
cmp
xchg
mov
lods
mov
popa
(bad)
or
mov
cli
push
fild
sahf
xchg
fst
adc
sbb
jo
call
or
scas
xor
push
sbb
pop
daa
or
call
sbb
add
cwde
add
or
inc
or
xor
sub
pusha
out
pop
push
xchg
sub
pop
xchg
syscall
xchg
fs
ins
add
fcmovnb
lods
gs
pop
repz
jmp
mov
fstp
adc
test
test
mov
stc
add
arpl
stos
xchg
test
adc
adc
vmwrite
mov
and
jmp
sbb
mov
js
call
ins
mov
mov
or
dec
push
or
cmps
push
push
jnp
mov
stc
pop
push
sbb
cmps
sbb
xor
or
lock
xchg
cmp
dec
push
pop
call
(bad)
hlt
dec
jmp
or
mov
push
sub
bsr
dec
jl
push
retf
pop
jp
sbb
and
dec
in
aaa
mov
shl
mov
mov
out
pop
xchg
iret
dec
dec
inc
sahf
pop
out
pop
xchg
int3
daa
daa
and
lock
jns
xchg
xchg
daa
daa
out
sbb
xchg
xchg
mov
mov
pop
daa
nop
push
and
repnz
xor
xchg
sbb
fdiv
inc
leave
test
or
out
jnp
mov
dec
sub
sub
dec
sub
test
ins
adc
(bad)
dec
cmp
add
push
jp
arpl
adc
dec
push
inc
pop
jae
mov
push
mov
loopne
in
or
sahf
das
fs
cmp
sbb
es
ins
ret
inc
add
pop
arpl
mov
xchg
sahf
or
adc
pop
ficom
or
cmp
mov
mov
push
mov
inc
mov
pop
jae
test
adc
les
sub
add
aas
ja
into
pop
xor
xchg
push
inc
jno
adc
dec
ret
jle
dec
hlt
outs
or
add
mov
inc
inc
mov
or
jmp
push
add
dec
or
push
int
mov
mov
xor
xor
push
push
push
lods
xchg
cmp
repnz
pop
dec
or
cmp
xor
pop
or
adc
fild
pop
shl
fimul
fadd
dec
dec
jae
push
add
loopne
jnp
enter
cld
xlat
or
shl
jne
js
push
loope
into
pop
mov
stos
cld
inc
mov
and
inc
or
outs
xchg
ret
or
mov
add
dec
adc
mov
mov
mov
cdq
adc
(bad)
hlt
pmulhuw
(bad)
pop
hlt
push
hlt
movs
add
pop
inc
fnsave
jo
(bad)
and
loopne
test
aas
dec
mov
les
nop
mov
movups
dec
in
cmc
inc
xor
add
push
sbb
adc
into
mov
push
cmp
je
dec
sbb
sahf
les
sbb
fwait
cmp
and
rol
jge
ins
adc
and
sub
adc
les
pop
cmp
loope
cmp
push
sbb
push
ins
and
sbb
sbb
adc
sbb
and
pop
jno
sub
sbb
ret
push
mov
add
inc
or
repz
adc
mov
(bad)
mov
sub
push
push
push
jle
das
dec
xor
out
clc
inc
aas
test
inc
push
sbb
mov
xor
fist
and
cmp
and
mov
and
(bad)
test
icebp
or
push
jne
outs
push
les
inc
aaa
or
mov
cmp
repz
mov
xchg
inc
outs
mov
push
gs
ins
fisttp
imul
push
sub
outs
jnp
mov
mov
ret
sbb
fstp
sbb
int3
jle
(bad)
push
inc
sar
push
adc
jbe
retf
and
add
mov
popa
clc
mov
imul
stc
sub
repz
pushf
push
jnp
mov
fs
cli
cmp
js
jb
repnz
cmp
pop
je
test
mov
aam
or
cld
shld
sub
in
add
test
or
sar
neg
inc
jae
dec
cmp
sub
mov
outs
dec
mov
ins
dec
jecxz
adc
and
push
sahf
mov
loopne
pop
sar
aaa
cmp
mov
mov
mov
inc
adc
or
dec
icebp
pop
jmp
jge
jae
lods
sbb
mov
movs
and
loopne
or
mov
mov
xchg
in
or
adc
movs
out
adc
cmp
jno
es
or
mov
add
js
inc
rcl
adc
loop
jp
add
(bad)
int
push
add
repnz
mov
mov
addr16
pop
loop
xchg
add
fimul
lock
fisub
adc
fstp
mov
or
xchg
adc
and
test
adc
add
add
popw
dec
add
test
imul
fisub
jb
std
sub
inc
fs
mov
add
sub
or
add
xlat
push
add
or
stc
sbb
ror
(bad)
push
and
inc
aaa
out
test
fiadd
clc
inc
call
adc
in
cdq
xchg
test
adc
push
or
jmp
add
test
or
dec
pusha
sbb
xor
pop
call
xor
js
daa
fs
cmp
adc
sub
xchg
inc
mov
adc
stc
adc
or
sub
cmp
sbb
enter
(bad)
jg
fcmovnbe
mov
adc
lods
or
and
add
sbb
out
push
inc
call
push
scas
mov
test
sub
pop
sbb
icebp
std
mov
push
outs
jo
pop
test
sbb
xadd
lahf
out
sahf
imul
adc
jnp
cs
xchg
or
sbb
sbb
cmp
xchg
or
push
or
or
jbe
adc
sub
out
adc
bound
add
lahf
in
std
xor
push
fst
lea
int
add
mov
out
stc
xor
inc
fdivr
add
lods
loope
xchg
jo
(bad)
mov
js
dec
or
mov
xor
and
(bad)
cdq
cmp
out
push
xlat
mov
jg
out
jns
add
out
clc
out
js
mov
dec
arpl
xchg
pop
xor
push
sbb
popa
movs
adc
fild
pop
push
pop
add
pop
(bad)
fist
pop
pop
call
rcl
stos
mov
ror
or
mov
mov
cli
add
test
aam
movs
cmp
das
inc
adc
sar
push
add
repz
lods
lea
push
cmps
out
mov
xchg
pop
inc
(bad)
int
dec
add
fcomp
sbb
cmp
mov
xor
out
aas
push
mov
add
and
in
push
fdivr
inc
enter
repz
imul
clc
push
adc
push
sar
(bad)
call
mov
adc
pop
in
mov
or
mov
xor
add
add
iret
push
dec
popa
ins
add
push
popa
addr16
adc
(bad)
xor
xor
unpcklps
mov
xchg
pop
imul
dec
add
pusha
rcr
enter
xchg
jne
jae
and
fnsave
or
jnp
fsub
data16
or
xlat
(bad)
adc
add
dec
push
pop
outs
mov
xor
add
popa
push
jnp
out
out
bsf
push
add
(bad)
stc
xor
jb
jns
lock
stc
mov
(bad)
inc
aas
icebp
or
mov
fcomi
mov
(bad)
ldmxcsr
or
dec
lar
loopne
mov
ss
add
(bad)
dec
push
push
jmp
and
mov
scas
adc
js
jns
out
push
push
pusha
adc
popf
div
dec
xor
or
add
jnp
adc
(bad)
sbb
add
pop
push
leave
scas
or
enter
out
add
cmc
scas
or
mov
jne
les
mov
test
cmps
lock
or
inc
or
cmp
ret
cmps
sbb
adc
or
pavgb
dec
cli
movs
test
jmp
sbb
dec
aas
add
les
push
sbb
xlat
add
jo
pop
push
int3
push
lods
mov
or
xchg
lods
lock
mov
jbe
mov
(bad)
loopne
fimul
and
and
out
pop
ret
xor
adc
add
sbb
nop
test
xor
pushf
or
add
ret
aam
and
test
sub
adc
or
sar
add
test
or
dec
mov
push
mov
pushf
sbb
push
dec
ins
and
xchg
fdivr
inc
push
cmp
jns
or
aaa
cmp
xor
test
dec
pop
out
jae
and
test
mov
inc
dec
data16
lods
add
cmp
push
dec
dec
or
adc
add
sub
bound
daa
mov
lahf
scas
adc
out
or
ret
outs
mov
adc
add
movs
sbb
add
push
or
ret
fucom
or
mov
or
in
enter
out
or
in
enter
ror
scas
bound
xchg
and
ror
shl
adc
pop
loopne
inc
adc
push
cwde
lock
inc
jne
adc
xor
mov
push
(bad)
test
xor
retf
mov
jge
add
xor
push
or
mov
stos
jmp
sbb
hlt
data16
mov
es
das
dec
push
sbb
mov
add
push
xor
repz
out
nop
fs
mov
dec
push
add
into
pushf
add
and
and
and
daa
dec
pop
or
je
jg
add
push
hlt
nop
sub
inc
adc
imul
out
aaa
in
sahf
inc
test
sbb
imul
dec
pusha
ins
and
inc
sbb
or
mov
pop
stos
mov
pop
rcr
add
(bad)
enter
push
pop
or
add
fimul
cmp
int
or
jge
mov
clc
cmps
cmp
data16
cmps
push
mov
invd
pop
(bad)
and
in
add
add
and
pop
add
inc
sbb
inc
jns
cmps
test
pop
movs
stc
mov
xor
adc
add
xor
push
loop
mov
cmp
sub
(bad)
xchg
cmp
clc
add
dec
inc
das
jg
out
add
in
push
out
(bad)
scas
movups
jmp
xchg
adc
lock
cmp
fisubr
lea
int
aas
adc
push
sbb
or
ss
and
adc
jne
imul
stos
ret
(bad)
or
pop
popa
dec
sub
(bad)
aas
inc
test
push
dec
mov
add
(bad)
es
add
pop
in
pop
fistp
push
push
push
add
mov
ds
mov
addr16
jb
jae
lods
inc
jo
out
pop
sar
cld
jp
push
outs
jg
and
inc
nop
ret
je
pop
loope
repz
imul
inc
cmp
pop
or
inc
xchg
mov
cmp
cmp
dec
sahf
pop
and
pop
dec
dec
or
test
adc
shr
sub
fisubr
and
cmps
xor
outs
inc
(bad)
mov
mov
ja
sar
popa
lods
adc
add
mov
call
outs
imul
add
test
lock
or
push
push
arpl
adc
cwde
inc
push
test
(bad)
wrmsr
push
cwde
fwait
adc
dec
xlat
mov
add
adc
aam
test
cwde
add
sub
or
or
mov
call
dec
fwait
mov
adc
adc
jmp
push
adc
adc
in
sti
inc
pop
inc
daa
in
dec
adc
xor
inc
push
pop
mov
add
or
cmp
fldcw
or
push
aam
ins
imul
popf
pop
and
shl
push
jg
push
push
test
adc
scas
push
mov
xchg
adc
cmp
cmp
sahf
pushf
pushf
mov
or
call
std
cmp
adc
jne
jnp
lods
movs
adc
out
ins
fimul
add
sbb
inc
fst
in
and
add
popf
fdivr
inc
xor
add
dec
fdivr
add
or
and
mov
pusha
loopne
cmp
inc
in
in
xor
cmp
inc
xor
lock
add
push
ret
pop
adc
push
cmp
and
hlt
mov
jns
inc
iret
push
add
js
sub
popa
inc
sbb
xchg
and
dec
sti
int
and
adc
sbb
push
outs
jb
add
pop
inc
add
jno
mov
pop
sub
das
inc
icebp
adc
out
jmp
dec
sub
call
add
daa
and
das
movs
push
sub
lods
in
daa
mov
stos
sub
pop
aad
scas
inc
mov
cmc
mov
cld
sbb
fwait
pop
call
vmread
cmp
mov
out
sub
arpl
enter
es
jbe
movs
mov
inc
pop
leave
pop
cdq
mov
push
fwait
(bad)
fsub
jbe
popf
add
xor
cmp
test
jmp
mov
and
sbb
hlt
loope
(bad)
jbe
and
push
add
jne
sub
and
or
adc
or
inc
add
xlat
inc
sbb
jae
jmp
adc
and
adc
and
xchg
jb
or
cmp
xchg
or
lock
mov
inc
dec
stos
cld
and
adc
es
cmp
adc
add
jmp
aas
sbb
push
mov
stos
adc
or
sub
mov
xchg
add
xor
pushf
cmp
add
pop
cmp
and
bound
repnz
dec
jge
adc
mov
add
lds
shr
iret
popf
mov
xor
mov
call
mov
ret
ja
sub
(bad)
jne
pop
enter
and
jmp
sbb
jmp
push
(bad)
(bad)
add
pop
das
lds
daa
fild
and
inc
sbb
or
call
pop
nop
and
and
dec
rcl
ret
xlat
outs
mov
rsqrtps
dec
call
test
mov
sbb
out
cmp
pop
mov
(bad)
sub
add
pop
sbb
and
or
add
xor
(bad)
xlat
js
add
pop
and
dec
cli
adc
adc
and
and
inc
mov
fwait
std
dec
mov
xor
out
inc
stos
es
cmp
jno
aaa
call
add
push
sub
leave
ds
outs
push
cmp
xchg
call
or
inc
(bad)
out
inc
cmp
xchg
add
cmp
inc
ror
cmp
in
lds
or
fistp
dec
scas
outs
in
add
shl
mov
hlt
cld
cmp
fild
inc
inc
xor
pop
add
cmp
je
ins
imul
and
dec
(bad)
and
inc
push
jo
jmp
sbb
scas
add
mov
mov
lea
mov
push
push
or
jmp
(bad)
and
xor
or
imul
lods
or
(bad)
inc
arpl
imul
xor
pop
lea
ja
jle
sbb
push
pop
xchg
cmp
sahf
mov
stc
dec
dec
or
cmp
jl
call
(bad)
jne
sbb
loop
shl
push
pop
mov
data16
push
add
ds
pop
movups
xor
sbb
push
cmp
jecxz
cmps
sar
xor
or
call
xlat
cwde
bound
aas
or
jno
fs
or
adc
sbb
mov
cmp
(bad)
xor
xchg
lods
scas
add
pop
nop
mov
pop
xchg
loopne
pop
jb
jmp
scas
jle
mov
add
sub
add
mov
call
xor
into
and
add
and
pop
fadd
cmp
aad
pop
leave
in
mov
inc
loopne
adc
in
imul
and
js
xlat
outs
fs
pop
add
add
sar
add
inc
or
and
or
stos
xchg
sbb
inc
cmps
sbb
sub
inc
adc
or
aas
xor
sar
shr
out
test
inc
sub
sbb
push
and
aas
push
in
and
cmp
xor
dec
vpcmpeqw
xor
dec
and
aad
xor
xchg
inc
mov
ficomp
jne
dec
cmp
clc
mov
pusha
dec
dec
pop
nop
outs
and
inc
xchg
pop
cmp
adc
mov
push
xchg
test
and
call
add
pop
pop
inc
jle
pop
adc
jmp
aam
cmp
dec
add
call
test
movs
outs
adc
mov
push
sbb
int3
fldenv
(bad)
cli
cmc
and
dec
dec
lods
mov
mov
mov
push
in
cmp
pop
rcl
lock
call
(bad)
stos
lock
jecxz
fidivr
mov
push
or
or
xor
or
mov
(bad)
call
mov
fstp
mov
icebp
mov
mov
xor
inc
or
cmp
aas
add
sbb
or
cdq
shl
pop
test
xchg
nop
imul
fild
jge
in
int
shr
dec
hlt
je
scas
scas
stos
add
sub
pusha
mov
xor
add
jnp
pop
mov
cmp
or
sbb
mov
sub
(bad)
and
add
sbb
icebp
sbb
push
xchg
mov
inc
mov
mov
push
test
in
aam
dec
inc
and
adc
mov
xor
xchg
and
cld
cmp
jnp
sbb
scas
jo
sub
xor
nop
mov
aam
enter
xchg
daa
push
rcr
in
in
sub
pop
daa
sbb
pop
aaa
bound
sbb
mov
sub
xchg
movs
xor
or
hlt
in
call
sub
gs
out
push
outs
pop
jbe
cmp
sub
and
lock
fdiv
pop
push
dec
jae
clc
mov
call
adc
pop
xor
jns
out
sub
in
and
mov
adc
pusha
mov
ror
sbb
and
shl
mov
jg
hlt
mov
xchg
sub
add
hlt
or
ins
xlat
int3
dec
sti
push
scas
ja
in
rol
pop
test
jmp
lahf
push
adc
sbb
iret
neg
add
jne
sbb
inc
or
sbb
sbb
adc
lahf
sbb
test
pop
pop
mov
leave
mov
shl
xchg
sub
packsswb
daa
push
sub
pop
adc
(bad)
mov
iret
adc
mov
push
mov
imul
inc
pop
or
jb
lahf
cmp
dec
in
pushf
jbe
jecxz
aam
inc
sub
shr
movs
push
add
push
cmp
sti
push
adc
mov
mov
add
pop
jmp
sbb
movs
gs
sar
stos
sub
adc
and
shl
arpl
repnz
add
mov
jnp
data16
in
sub
int3
lods
retf
add
cmc
test
stos
or
or
repz
mov
sub
test
add
and
or
add
imul
sahf
xchg
cmps
bound
xchg
sbb
je
pop
lods
xor
(bad)
push
sub
pop
or
xor
or
pop
rcr
pop
jo
movs
mov
sbb
in
jecxz
test
js
sub
dec
out
pop
cdq
dec
es
fimul
add
or
pop
add
mov
inc
lea
mov
mov
dec
adc
lods
dec
loopne
mov
cld
mov
jmp
das
loope
xchg
push
pusha
ret
xchg
mov
inc
sbb
bound
sbb
gs
mov
jmp
jge
sub
mov
or
test
xor
fild
add
mov
adc
scas
test
mov
adc
sub
cmps
cmp
lods
data16
push
sub
sbb
popa
sti
shl
xlat
mov
push
hlt
mov
out
sub
pop
ret
sub
popa
mov
sbb
cmp
pop
jg
jle
and
or
int
pop
mov
call
xor
(bad)
jge
push
fld
xlat
test
push
adc
push
cld
popa
cmp
add
ins
push
xor
sbb
adc
aaa
jo
add
inc
fdivr
mov
nop
push
cdq
loope
in
jl
aas
fisttp
pop
data16
ret
push
mov
mov
jmp
mov
loope
call
int
mov
push
or
and
inc
adc
arpl
fadd
loopne
lahf
jl
pop
fs
pop
sbb
xor
cmp
in
je
mov
pop
call
fsub
cwde
pop
dec
sbb
cld
sub
mov
js
or
ja
clc
in
leave
cld
pop
push
and
or
pop
ret
gs
rol
ins
pop
mov
sbb
(bad)
or
aad
inc
nop
jo
std
sbb
and
call
xchg
jo
inc
test
outs
jbe
mov
mov
and
push
jno
or
or
push
and
imul
cmp
in
push
aam
dec
loope
jp
dec
mov
outs
aam
(bad)
ds
int
es
outs
ss
in
(bad)
(bad)
fstp
inc
dec
xor
nop
xchg
inc
je
fs
push
xor
sbb
mov
or
mov
pop
sbb
mov
jmp
dec
push
popf
out
push
pop
das
sar
jl
or
adc
jo
xor
bound
dec
int
call
cmp
dec
or
xchg
xor
push
push
and
retf
or
sub
js
push
add
mov
add
sub
inc
(bad)
mov
cmp
mov
clc
inc
pop
xor
iret
add
push
sbb
sub
push
push
nop
push
push
and
push
push
push
stos
cmp
pusha
cld
adc
mov
inc
aam
imul
xor
and
lods
add
mov
cmp
inc
pop
push
or
sub
stos
in
add
test
adc
sub
lds
mov
jnp
push
mov
mov
push
ins
sbb
aaa
add
or
cdq
inc
inc
jae
add
mov
add
pop
xor
push
mov
add
cmp
mov
mov
add
imul
inc
into
sbb
mov
add
fcomi
xchg
cmp
add
mov
and
mov
adc
nop
mov
popa
mov
or
push
(bad)
(bad)
out
add
loope
xchg
les
xchg
scas
fadd
xchg
adc
and
outs
inc
push
push
inc
or
sbb
loopne
sbb
test
into
rol
inc
inc
sti
sar
jmp
and
xor
inc
xchg
mov
ret
popf
mov
int3
div
shl
mov
adc
je
das
sbb
xor
(bad)
push
call
pop
(bad)
push
shr
sbb
bound
xchg
ss
or
je
adc
jne
mov
xchg
jge
mov
jmp
push
rol
les
aam
mov
push
inc
sar
out
gs
es
nop
cld
ret
jmp
adc
je
jo
mov
call
clc
push
bound
xor
mov
push
(bad)
push
fidiv
pop
je
sbb
je
xchg
cs
pop
mov
jl
ret
adc
cmp
popf
ret
out
adc
and
enter
loopne
sahf
rol
and
les
test
add
inc
sbb
add
js
cmp
mov
icebp
sbb
mov
cs
cmp
jmp
jmp
sbb
cs
mov
sub
inc
adc
cwde
clc
ja
pop
sub
jl
mov
adc
jl
and
pop
fld1
pop
in
push
pop
scas
test
clc
xchg
adc
push
ds
mov
adc
or
jle
test
jle
js
xor
adc
or
xchg
das
aas
ins
fs
cmp
test
sub
jg
dec
sbb
adc
nop
(bad)
jge
add
sar
add
or
pop
not
mov
mov
enter
dec
cmp
loope
loope
inc
sbb
cmp
adc
mov
hlt
sbb
aam
cmps
hlt
mov
add
sub
out
loopne
imul
jmp
pop
jg
sbb
push
and
call
inc
mov
call
xor
xor
inc
dec
cmp
jo
mov
cmp
sub
inc
push
cmp
pop
mov
hlt
jl
adc
adc
or
lock
mov
sub
data16
xor
lock
(bad)
and
add
dec
adc
movs
jns
sahf
rcr
add
rcl
mov
mov
movs
sbb
dec
or
cmp
in
lock
and
mov
xchg
cmp
mov
lods
pop
xor
lods
add
and
imul
xchg
arpl
cmp
(bad)
adc
jmp
jle
and
jle
mov
clc
cmp
or
cwde
pop
inc
mov
rcr
test
and
cmp
push
fisub
rol
mov
rol
das
sub
not
js
in
jp
dec
test
adc
dec
aam
mov
xchg
lods
adc
xchg
or
rcr
push
popa
in
mov
mov
es
and
clc
xor
adc
xor
mov
hlt
lahf
sub
clc
add
dec
mov
(bad)
xor
out
push
iret
add
outs
cmc
inc
adc
dec
mov
or
inc
ret
enter
mov
mov
adc
ja
es
sbb
mov
sbb
aaa
inc
jne
sub
fsubr
enter
add
adc
rol
stos
imul
mov
mov
push
or
mov
retf
xchg
dec
adc
ror
cmp
add
pop
fstp
pop
arpl
mov
nop
pop
enter
inc
jb
cmps
clc
aas
ror
xor
add
inc
icebp
pop
shr
test
or
aas
push
add
jg
adc
(bad)
aaa
adc
lea
jae
inc
call
inc
and
push
sub
push
inc
ss
push
enter
sbb
add
(bad)
or
pushf
out
ret
add
mov
push
loop
xor
leave
push
inc
cmp
ror
imul
push
dec
add
(bad)
or
pop
test
inc
lods
adc
psllq
pop
fist
ret
inc
jne
frstor
outs
pop
leave
cmps
mov
inc
cmps
ror
inc
retf
cmp
or
mov
cmovb
loopne
xchg
mov
pop
cmp
push
xchg
pop
jo
xor
add
or
cmp
add
loope
and
mov
mov
mov
cmp
add
test
mov
mov
pop
aad
cmps
jge
sar
mov
xor
call
in
add
out
je
inc
daa
mov
push
(bad)
pop
xchg
retf
add
xchg
cmp
add
je
es
push
sbb
push
out
shl
addr16
popa
sahf
jno
adc
sbb
add
cmp
mov
repz
imul
leave
je
stos
movs
jne
ins
btr
cmp
sbb
push
push
inc
adc
cmp
sahf
jmp
mov
shr
dec
sbb
enter
jmp
je
sbb
and
cmp
ja
ss
clc
es
pop
ds
or
ret
mov
jl
adc
push
inc
cmp
jne
inc
clc
jne
jb
xor
les
mov
repnz
aaa
xor
xchg
add
and
or
xor
or
xchg
dec
push
popa
jb
inc
xor
cld
fadd
push
cmp
add
pop
jnp
call
adc
mov
pop
imul
sub
sub
push
inc
sub
and
rol
jo
push
xchg
in
and
in
inc
xlat
das
ret
mov
jmp
jmp
jp
xchg
ss
test
fadd
pop
test
aaa
cs
imul
ins
adc
inc
push
inc
inc
inc
daa
or
mov
adc
pusha
push
inc
and
dec
mov
mov
mov
movs
and
lahf
mov
mov
stos
mov
mov
mov
xor
dec
sbb
movs
mov
cwde
cmps
out
test
inc
fs
xor
jmp
cmps
inc
test
je
addr16
or
push
push
pop
es
sub
add
or
adc
push
mov
neg
(bad)
pop
mov
adc
inc
mov
add
sub
or
push
daa
out
pop
adc
sbb
and
inc
mov
mov
sbb
jmp
sub
outs
add
mov
leave
rcr
cmp
out
sbb
div
push
out
push
(bad)
lock
mov
dec
lea
xor
nop
inc
in
in
xor
rol
dec
addr16
rcr
add
xchg
jne
aaa
test
mov
inc
adc
xor
or
dec
sahf
dec
in
pop
add
pop
or
push
mov
xchg
cwde
test
push
dec
sbb
mov
loop
ds
es
cmp
in
add
aaa
test
(bad)
rol
imul
outs
pop
add
mov
cmp
test
add
(bad)
out
mov
(bad)
pop
pop
mov
or
xor
rol
dec
mov
or
dec
stos
ss
or
cli
dec
xor
cmp
cmp
mov
fmul
add
fisub
and
push
jne
add
aam
add
rcl
stos
pop
sbb
inc
ret
cmp
cmp
enter
(bad)
fwait
dec
(bad)
cmp
inc
mov
lds
idiv
jg
push
pop
inc
xor
inc
or
mov
mov
cmc
or
and
mov
lods
mov
and
add
cmc
es
xor
daa
or
ret
jmp
push
cmp
mov
dec
cld
jle
in
push
add
and
mov
sub
dec
rol
sti
add
mov
pop
movs
xor
or
add
or
rol
cmps
pop
pop
adc
dec
sub
fmul
push
aas
xchg
cdq
cmp
ds
lock
ja
(bad)
(bad)
movs
hlt
icebp
in
cmp
mov
dec
jbe
push
or
sbb
rol
mov
addr16
inc
daa
push
clc
or
aad
rol
clc
inc
sub
aaa
outs
lea
lods
inc
inc
das
pop
nop
or
retf
dec
vmaxsd
lods
push
adc
cmp
mov
and
in
or
icebp
or
fwait
shl
test
shl
add
inc
mov
adc
sub
dec
dec
sub
adc
iret
inc
fs
adc
jae
push
ins
inc
sti
dec
inc
adc
inc
mov
ret
inc
cmp
pop
or
sub
pop
mov
cmp
sbb
loopne
inc
out
add
xor
lahf
fwait
inc
dec
jne
mov
movs
adc
jge
in
das
rol
lods
push
pop
rcl
aad
inc
dec
inc
dec
(bad)
loopne
lods
xchg
rcl
adc
push
in
add
jb
or
add
fwait
sbb
shl
sbb
push
mov
daa
call
sub
sub
jp
xchg
cmp
dec
retf
fisub
icebp
mov
cmps
push
scas
add
push
push
rol
or
cmps
addr16
movs
ins
cmp
mov
jmp
jmp
arpl
icebp
(bad)
push
sbb
push
rcr
sub
jb
fmul
data16
sbb
aam
pop
mov
cmp
je
adc
xchg
cdq
mov
push
outs
into
cld
fisttp
push
mov
scas
sub
jo
scas
pop
pop
sub
mov
stos
adc
mov
jb
add
dec
mov
or
or
cmp
mov
inc
push
aas
aad
push
dec
test
sub
dec
mov
cmp
loopne
clc
icebp
push
xchg
sub
cmp
cmp
enter
cmp
(bad)
push
sahf
sbb
arpl
push
inc
push
repz
hlt
ret
ror
inc
fnstenv
test
imul
dec
hlt
repz
cs
fld
adc
in
or
push
scas
pop
pop
test
xchg
jo
cmp
xor
mov
push
shr
inc
inc
pop
fadd
or
dec
mov
sbb
out
loop
pop
ret
mov
sub
dec
je
daa
daa
adc
pop
(bad)
dec
clc
sar
(bad)
inc
mov
adc
sub
lahf
ret
adc
inc
js
dec
bound
mov
push
push
push
push
mov
loopne
pop
push
jge
dec
adc
cld
xchg
es
dec
adc
js
ins
sub
hlt
inc
cmc
adc
cwde
mov
sub
movs
jb
popf
xor
cld
lock
mov
in
test
dec
clc
push
dec
xchg
outs
sbb
mov
in
mov
xlat
inc
and
adc
sub
das
push
ffree
mov
mov
aaa
mov
and
je
adc
and
mov
scas
cmp
dec
dec
sbb
sub
cld
repz
popa
out
xchg
(bad)
xor
dec
add
dec
test
pop
sub
and
test
imul
ror
movs
bnd
clc
sahf
push
dec
push
add
add
jg
bound
mov
cmp
add
call
push
pop
adc
dec
stos
mov
inc
jbe
movs
push
and
cmp
and
dec
fild
inc
cmp
push
adc
pop
jmp
push
sti
mov
fmul
push
xor
pop
mov
jmp
add
add
in
cmps
add
imul
ret
add
leave
jne
lea
rcl
push
push
aaa
mov
loopne
or
nop
push
enter
mov
les
mov
or
int3
inc
xor
and
js
lea
pop
fwait
mov
sbb
mov
xor
nop
jge
shl
fs
leave
sub
cmp
sti
xchg
movs
aas
sub
jne
jl
lods
mov
xor
mov
cwde
pusha
mul
(bad)
outs
dec
loopne
mov
inc
push
mov
and
add
enter
xor
add
dec
imul
ror
jmp
inc
shl
push
je
xchg
outs
add
or
mov
jp
movlhps
dec
inc
dec
mov
jecxz
push
inc
jbe
nop
adc
jne
cmp
or
dec
push
dec
inc
clc
add
inc
add
mov
mov
mov
rcl
pop
add
inc
dec
mov
add
inc
imul
aas
xor
inc
or
inc
push
cmp
pop
mov
dec
(bad)
dec
xchg
inc
sahf
sub
sbb
inc
inc
xchg
mov
mov
lock
adc
push
test
add
pusha
outs
bound
movs
mov
lea
push
icebp
inc
pop
inc
in
in
fdivr
hlt
push
mov
pop
and
mov
jnp
fidiv
add
push
jne
lods
and
iret
in
dec
call
imul
loopne
out
fld
xchg
imul
adc
push
sub
test
stos
mov
loopne
sbb
repnz
adc
les
jmp
fcmovnbe
mov
xchg
push
and
fild
test
cwde
loope
fs
sub
dec
cld
xor
or
sahf
clc
fdiv
mov
pop
mov
adc
sub
in
xlat
and
pop
jno
addr16
repnz
add
mov
add
push
test
xor
cmovns
and
and
ror
shl
stos
ror
pop
rol
push
pop
les
test
jecxz
fbld
add
inc
pop
inc
xchg
dec
push
adc
call
movs
pop
mov
push
leave
dec
mov
mov
push
cmp
hlt
xchg
xor
mov
and
xor
push
std
les
push
sbb
jo
xor
out
les
jo
sbb
retf
shl
inc
cmps
and
sub
pop
add
(bad)
push
scas
cs
ffree
pop
div
pop
out
mov
clc
cmp
sbb
ret
cmp
push
push
daa
xchg
cmp
aas
ja
imul
dec
fmul
add
ret
adc
adc
mov
dec
sub
test
(bad)
stc
pop
and
ror
sbb
ja
in
ret
int
and
adc
ss
pop
inc
sbb
dec
ret
push
xchg
push
enter
jnp
pop
aam
je
mov
pop
xchg
outs
fist
jg
adc
mov
scas
daa
mov
test
test
scas
inc
pop
(bad)
pop
mov
hlt
push
call
pop
mov
leave
popa
rcr
pop
xchg
pop
int
repnz
mov
mov
scas
dec
daa
xchg
call
push
jmp
dec
leave
add
in
cmp
pop
(bad)
xchg
popa
or
mov
mov
loop
add
loope
jo
mov
fwait
mov
sbb
sub
adc
test
push
sar
and
test
daa
out
pusha
jb
outs
lock
dec
and
xchg
hlt
popf
add
lahf
mov
ret
dec
add
inc
fst
popa
sub
popa
pop
jno
mov
pop
cmp
lds
lea
outs
and
sub
sbb
add
lahf
test
fwait
pusha
xor
lods
mov
cmc
push
inc
inc
or
dec
pop
and
ins
sub
inc
repnz
inc
or
xor
xchg
es
popa
clc
and
loopne
adc
xor
jl
or
inc
xor
rcl
push
xor
sub
add
les
jg
add
or
sahf
pop
mov
xchg
mov
adc
in
in
or
call
inc
ds
repnz
in
jl
and
sbb
inc
jle
xchg
dec
ins
push
ins
jmp
pop
add
push
lock
jne
sbb
scas
pop
add
or
test
in
and
and
sbb
ret
aaa
call
inc
xor
dec
into
pop
mov
xchg
lea
xchg
xchg
into
push
movs
outs
pop
adc
imul
aad
push
mov
inc
dec
sub
aas
lea
inc
jle
das
pop
sub
jns
add
cld
call
add
pop
or
and
dec
dec
and
outs
out
jb
jmp
pop
xor
sbb
pop
sub
jle
outs
in
push
mov
cmp
rcl
dec
and
and
cmp
cwde
mov
lds
lds
mov
rcr
lahf
aaa
(bad)
dec
mov
fnstenv
or
or
loope
scas
adc
sub
or
fs
outs
dec
ja
add
inc
add
test
push
lahf
pop
lock
pop
cmp
sar
xor
pop
cdq
lods
mov
add
jae
and
aaa
adc
adc
xor
sub
jae
jne
sub
pop
xor
or
push
scas
fdivr
add
dec
or
imul
jns
or
add
out
imul
cmp
cmp
add
pop
or
xor
loopne
adc
aas
cmp
les
(bad)
push
xor
add
pop
fwait
scas
pop
sub
xor
cmp
shl
mov
inc
jmp
push
pop
pop
mov
out
and
cmp
push
shl
xchg
xchg
repz
pusha
xor
iret
ss
das
ror
leave
mov
(bad)
mov
stc
mov
and
das
ret
push
mov
pushf
jl
ret
pop
sbb
xor
mov
add
jge
mov
loope
mov
movs
daa
pop
(bad)
cwde
mov
shl
push
jecxz
data16
dec
bound
xor
xor
cmp
mov
loopne
push
sub
and
push
jno
xchg
scas
inc
push
in
dec
dec
jae
retf
loope
and
and
inc
movs
loope
xchg
ret
xchg
nop
daa
and
sub
mov
xchg
ffreep
out
inc
jle
lea
outs
dec
push
fsubr
xchg
cs
sbb
dec
adc
or
add
out
and
and
iret
and
pop
pop
pop
mov
pop
pop
not
mov
push
pop
mov
mov
dec
add
pop
dec
pusha
add
bound
out
call
xor
pop
test
mov
dec
sub
sbb
cmp
dec
adc
(bad)
jmp
xor
shr
adc
adc
nop
lea
cmp
inc
adc
ins
and
dec
jmp
cld
fwait
cli
out
imul
jne
xchg
add
mov
scas
inc
repz
jle
mov
cwde
xor
jb
mov
mov
repnz
add
and
inc
and
imul
(bad)
in
pop
inc
push
and
repnz
(bad)
push
sar
mov
dec
std
inc
pop
(bad)
dec
cmp
mov
sbb
pop
js
into
xor
dec
xchg
or
fld
daa
mov
cmps
je
and
jle
or
sub
(bad)
stos
xchg
or
sti
xchg
adc
js
push
repnz
sbb
sub
cmp
in
lock
test
add
lahf
stc
nop
cdq
mov
nop
cmps
xchg
mov
push
scas
test
and
mov
pop
adc
and
rcr
test
arpl
aas
jns
sbb
inc
and
mov
and
cmp
dec
lahf
mov
fistp
jne
mov
or
or
push
rcl
xor
mov
sbb
xor
je
xor
lea
idiv
sbb
pop
inc
sbb
sub
push
sub
and
in
sahf
mov
aam
or
cmp
fwait
pop
popw
nop
inc
mov
adc
sbb
or
xor
jmp
add
call
pop
dec
xchg
sub
and
hlt
add
push
stos
dec
pop
add
push
inc
rol
loopne
js
jle
xor
movs
or
push
pusha
jg
ja
(bad)
nop
mov
movs
jge
inc
adc
sbb
ja
jle
sub
cwde
cmp
je
mov
hlt
mov
lock
adc
sbb
jo
mov
cmp
test
pop
out
push
sub
test
es
ja
mov
or
or
add
push
sub
sub
fistp
add
push
test
cmp
jecxz
sbb
or
jb
fnop
repnz
adc
lock
add
mov
and
or
pop
arpl
cwde
fidivr
add
and
pop
(bad)
outs
or
push
ins
in
pop
ret
mov
cs
cmp
stos
mov
data16
lods
test
in
lea
or
add
test
in
mov
dec
lods
or
mov
hlt
arpl
pop
mov
sbb
pop
ins
pop
cmc
sar
xchg
in
jae
inc
mov
scas
xlat
or
rol
psrlw
int3
mov
or
scas
add
add
add
dec
xchg
cmps
fstp
je
adc
das
mov
movs
mov
inc
add
add
ror
adc
dec
leave
in
pop
xchg
pop
iret
xchg
mov
std
popf
or
or
pop
sbb
(bad)
mov
or
bound
or
xor
sti
add
add
rcr
jbe
or
aam
and
sub
outs
nop
push
(bad)
call
cdq
jg
add
or
add
add
rcr
adc
xor
ret
cdq
sub
push
fsubr
mov
mov
aad
jns
(bad)
pop
in
mov
inc
add
xchg
dec
(bad)
mov
cmps
dec
adc
pusha
nop
jae
(bad)
clc
push
mov
rcr
int
test
cmp
mov
jne
jecxz
jg
popa
mov
mov
xchg
je
hlt
jg
push
mov
dec
and
(bad)
stc
pop
add
sub
dec
retf
call
jae
or
int3
jne
xor
adc
inc
test
xor
push
mov
adc
pop
std
rcr
dec
inc
xor
popf
lea
mov
call
mov
popa
xchg
aas
(bad)
jle
adc
adc
push
mov
dec
mov
std
mov
adc
mov
outs
or
inc
inc
arpl
add
movs
mul
data16
out
cmp
push
push
mov
sub
ror
and
inc
or
in
cmp
lea
cs
std
push
test
xlat
xchg
inc
clc
cld
adc
pmaxsw
add
cld
fs
push
fs
sti
clc
adc
imul
sbb
adc
das
aam
jg
or
lea
adc
in
nop
sbb
push
imul
je
(bad)
sub
cmp
jno
rol
(bad)
imul
js
mov
neg
sub
dec
or
ror
shl
idiv
push
inc
sub
neg
pop
jle
test
mov
lods
sar
pop
jno
or
bound
mov
jmp
out
sub
lea
fisttp
cmp
inc
and
add
test
imul
lods
out
xor
repnz
xchg
mov
add
fdivr
in
sbb
(bad)
and
sub
jae
je
push
adc
mov
push
adc
add
xchg
cmp
xor
(bad)
data16
and
or
dec
mov
push
sub
push
cmp
nop
mov
xchg
ret
pop
or
js
push
aas
mov
rol
push
mov
xchg
mov
push
test
int3
mov
and
mov
sar
sub
sub
cdq
dec
loope
fiadd
cld
lods
outs
push
or
sub
add
addr16
test
xor
into
xor
icebp
repnz
out
pusha
mov
cmp
dec
mov
jl
or
add
mov
mov
inc
and
shl
dec
or
xchg
and
jne
stos
xchg
lods
dec
call
ss
inc
adc
sub
fisttp
les
pop
cmp
fimul
stc
shl
fdiv
enter
cdq
nop
loopne
fcomp
pop
rcr
dec
cmp
out
js
adc
fldenv
cmps
or
adc
hlt
and
test
cwde
or
shl
into
jnp
inc
adc
or
xchg
and
xchg
popw
(bad)
(bad)
arpl
aad
add
inc
rcl
add
and
xchg
les
or
jmp
adc
(bad)
add
add
sbb
mov
xlat
sbb
ret
jbe
ficom
sub
fdivr
xor
or
loope
fisubr
jp
add
pop
mov
test
repnz
jno
in
or
or
add
ror
adc
add
add
add
daa
xchg
das
fcom
push
jecxz
call
xchg
push
pop
nop
arpl
push
adc
arpl
movs
sub
add
add
sbb
ret
add
xchg
adc
push
sub
ins
mov
push
inc
pop
mov
mov
jl
pushf
pop
jmp
retf
add
scas
psraw
js
ss
mov
(bad)
cli
push
add
loop
dec
ins
ror
pop
fcom
lock
pop
ja
jmp
cmp
lea
add
into
jle
mov
ins
ins
or
jle
xchg
and
sub
adc
add
lds
das
pop
or
dec
sbb
aas
cmps
pusha
test
or
and
cmps
scas
or
mov
test
bound
in
ror
loop
and
aaa
rol
lahf
push
cld
inc
mov
adc
and
sub
add
test
pop
cmp
test
rcl
xor
imul
scas
xor
lea
mov
outs
mov
cli
lea
lods
into
addr16
test
aad
mov
stos
popf
lods
add
bound
dec
inc
sbb
sub
pop
test
cmp
sbb
or
inc
sub
fs
fdivr
fcom
mov
push
test
jg
or
test
popf
mov
xor
or
add
repz
nop
dec
sbb
mov
sub
or
inc
rcr
sub
push
dec
inc
rol
lods
jl
jg
push
or
inc
dec
out
and
stc
call
sbb
sbb
test
xor
add
cdq
or
test
fimul
add
cmp
and
sub
or
xor
in
sbb
cli
(bad)
adc
or
test
xchg
and
adc
test
aad
stc
jbe
pop
call
pop
(bad)
shl
or
(bad)
(bad)
sbb
pop
or
add
dec
int
add
add
fisubr
or
adc
push
cmp
push
out
pop
and
and
adc
rcl
ret
xor
out
pop
or
push
mov
mov
xor
cmps
cdq
lea
adc
lea
movs
cmp
mov
clc
pusha
inc
adc
mov
out
scas
jno
and
enter
mov
call
add
sub
fnsave
out
adc
lea
int
inc
sbb
(bad)
ja
dec
addr16
mov
mov
push
or
mov
add
push
mov
mov
add
adc
or
sub
push
jl
mov
pusha
in
xor
sahf
push
in
push
outs
jle
push
adc
adc
inc
cmps
xchg
or
ror
(bad)
add
or
cmps
mov
shl
or
dec
hlt
dec
ret
sti
push
hlt
std
clc
dec
daa
xor
adc
lods
test
test
popa
daa
popf
ret
cs
xchg
ds
push
xchg
nop
jno
add
mov
dec
sbb
mov
(bad)
lea
and
jl
inc
mov
sar
clc
cld
outs
daa
jmp
cmp
mov
shr
shr
add
push
xchg
dec
inc
add
clc
xor
test
stos
mov
inc
rcl
dec
(bad)
(bad)
dec
or
xor
sbb
popa
imul
xchg
xchg
js
fst
(bad)
adc
ja
push
loopne
push
sub
cmp
inc
sbb
jne
adc
jb
test
inc
or
lock
test
imul
daa
sbb
mov
jae
pop
sar
sbb
jg
jmp
push
cmp
jl
test
mov
int3
lea
iret
push
pop
dec
ror
dec
push
and
loope
jg
push
fpatan
fucom
adc
xchg
test
fstp
and
push
xchg
popa
and
lahf
enter
retf
cmp
jp
popf
rol
xchg
inc
lock
jp
lods
or
stos
lock
xor
fwait
jmp
pop
cmp
push
or
mov
mov
push
inc
mov
popa
je
pop
or
sub
cwde
and
xlat
sub
out
leave
push
push
pop
retf
std
mov
and
cmp
pop
psrlq
ja
xchg
mov
pop
adc
or
stos
sbb
in
rcl
mov
pop
pop
add
jg
jmp
sub
inc
enter
sbb
nop
in
inc
jae
push
add
jmp
aas
imul
divps
aas
xor
sbb
xor
mov
pop
popa
jl
lds
adc
add
je
popf
mov
and
dec
into
add
sub
data16
adc
loopne
call
lea
(bad)
adc
pop
mov
add
mov
mov
jmp
dec
pop
jle
das
inc
sbb
mov
sub
stos
sti
push
mov
xor
loop
xchg
push
sbb
sti
test
hlt
aaa
scas
push
xlat
rol
dec
mov
or
cmp
retf
xchg
add
pop
dec
fld
(bad)
out
fs
dec
xchg
jge
mov
xor
xor
mov
hlt
bound
lds
push
push
push
retf
dec
call
pop
adc
adc
add
mov
dec
clc
rcl
inc
nop
jo
jmp
ss
inc
not
push
or
inc
jmp
shl
fcomp
repz
mov
pop
and
fbld
sub
mov
sbb
mov
cmc
pop
sbb
into
pop
xor
pop
pop
pop
pop
aad
adc
fistp
jnp
lds
sub
xor
cmp
jne
push
or
jne
stos
sbb
xchg
xor
cmp
mov
cld
call
dec
shl
fcomp
hlt
inc
xor
jge
sub
adc
cmp
neg
or
or
jns
pop
inc
fs
mov
dec
test
nop
mov
mov
fdivr
adc
pop
sbb
jp
lods
jmp
xchg
in
jl
js
or
jmp
imul
or
mov
or
lock
dec
sub
mov
add
or
xchg
daa
jge
mov
or
jnp
sbb
inc
xor
lods
sbb
imul
bound
or
inc
inc
sbb
mov
xor
or
and
and
xor
hlt
mov
adc
mov
add
inc
push
sbb
add
fsub
movsx
jge
push
sub
enter
pusha
and
mov
add
mov
retf
xor
jp
mov
test
cmp
sahf
jne
pop
add
addr16
inc
add
xchg
sbb
test
pop
pop
or
jmp
rol
jne
push
adc
ret
cmp
data16
jo
add
mov
shr
hlt
dec
jbe
adc
mov
scas
and
xor
fld
fst
retf
dec
dec
mov
cmp
invd
enter
cld
rep
mov
inc
std
(bad)
mov
movs
pop
or
jne
pop
call
loopne
dec
mov
add
adc
or
sar
xor
sbb
outs
lahf
cmp
pushf
and
ret
cmps
mov
mov
loopne
dec
jle
or
sub
and
xor
(bad)
in
fwait
and
mov
push
push
test
inc
pop
lods
sub
fwait
inc
arpl
inc
nop
lods
movs
inc
jnp
ja
dec
inc
sub
inc
in
das
mov
jae
mov
rcl
mov
xchg
fldenv
add
ror
leave
mov
and
jb
nop
push
xor
or
call
xor
or
ret
daa
aad
outs
movs
add
lock
rol
sbb
inc
and
pop
pop
int
inc
mov
jecxz
scas
ins
xor
inc
mov
xchg
nop
inc
imul
in
mov
cld
push
cdq
inc
xchg
xlat
mov
and
mov
rcr
add
cmp
pop
xor
sbb
sbb
or
add
pushf
fs
xor
not
and
aaa
int3
ret
push
es
add
xchg
mov
mov
adc
enter
fiadd
pusha
sub
cmp
pushf
adc
push
popf
xchg
loop
sbb
inc
lods
and
call
stc
add
sbb
and
int
sub
jb
int
fsincos
loope
xchg
jo
imul
push
je
jo
clc
pop
jno
mov
sub
fwait
int
xchg
mov
mov
dec
xor
cwde
fistp
adc
ret
xchg
pop
dec
sub
retf
xchg
adc
mov
pop
mov
(bad)
cwde
and
mov
and
clc
lds
jecxz
addr16
push
pop
ror
push
or
mov
dec
sub
pop
lock
aaa
dec
aam
adc
add
pop
and
or
jne
in
test
dec
inc
pop
leave
sub
inc
xchg
enter
cs
xor
adc
cmps
mov
sbb
xor
repnz
test
mov
push
call
outs
xchg
xchg
icebp
sar
movs
out
call
das
lock
lods
adc
push
fcmovbe
jbe
inc
sub
fcom
sbb
fsub
xor
xchg
fdiv
dec
xor
test
or
cld
pop
jmp
adc
push
jmp
sbb
push
(bad)
cmp
shl
pop
push
mov
mov
movs
inc
mov
pop
push
ret
bnd
jne
and
pop
xor
adc
hlt
xchg
scas
mov
add
xchg
pop
inc
icebp
sbb
add
arpl
xor
sub
dec
jecxz
adc
or
sahf
push
stc
aam
ret
push
sbb
fld
xor
mov
or
pop
aaa
mov
cmp
mov
(bad)
jne
and
or
cmp
into
and
pop
aad
sub
fmul
inc
out
ret
out
xchg
inc
test
pusha
and
sbb
adc
push
add
or
dec
sub
sbb
cmp
vmread
sbb
cld
pop
outs
or
iret
or
out
or
or
cmp
push
fldenv
and
adc
cs
sub
aaa
sub
jo
jns
cmp
imul
iret
pusha
sub
cmp
push
sbb
shr
hlt
sbb
sub
jne
lods
add
lahf
adc
push
sub
mov
nop
outs
lock
dec
cs
adc
or
pop
cwde
or
in
leave
ins
adc
jl
and
add
fld
and
and
adc
add
mov
fmul
ins
xor
and
shl
adc
mov
ja
call
inc
or
rol
(bad)
rol
push
icebp
or
inc
sahf
neg
sti
popa
add
jo
sub
push
pop
push
sub
jo
imul
aaa
adc
aaa
push
dec
idiv
cwde
cmp
test
out
sbb
sbb
mov
dec
cmp
mov
shl
addr16
fwait
mov
and
lods
test
mov
pushf
(bad)
mov
mov
and
jno
scas
stc
and
test
call
xchg
mov
push
jb
and
mov
sub
adc
push
ss
ret
jecxz
js
popf
movsx
call
mov
imul
call
xlat
out
adc
in
popf
push
inc
popa
dec
adc
popa
faddp
js
mov
push
pop
bound
xor
and
cmp
jne
ret
ret
fld
(bad)
test
mov
pop
mov
mov
enter
inc
push
loopne
imul
adc
adc
push
(bad)
xor
(bad)
and
inc
sub
test
out
mov
add
push
push
or
mov
add
mov
cmp
push
aas
mov
adc
bound
adc
sbb
mov
aam
idiv
xor
cmp
sbb
sbb
mov
sub
sbb
stos
adc
(bad)
or
mov
clc
add
jmp
cs
inc
gs
movs
test
lock
add
mov
mov
sub
dec
mov
test
sbb
jge
mov
(bad)
mov
add
inc
(bad)
cmp
shl
(bad)
and
adc
inc
cmp
jae
in
cmc
pushf
and
sub
and
or
in
mov
xor
lea
jnp
stos
sub
sub
nop
fsubr
cmp
sbb
dec
cmps
mov
push
ficomp
out
jae
ins
dec
cmp
mov
inc
mov
push
mov
xor
xor
clc
pop
push
in
xchg
test
inc
add
rol
sbb
(bad)
call
test
cmps
into
mov
push
cld
jno
mov
ret
mov
xor
clc
xchg
jle
cmp
mov
pushf
and
in
push
or
mov
test
lods
stc
sub
xor
in
mov
mov
pop
imul
sub
mov
lods
or
fdivr
or
test
into
aaa
add
adc
clc
jge
cmp
dec
clc
out
lods
sub
jo
retf
fldenv
sbb
mov
mov
dec
test
test
and
lods
imul
cmp
xchg
(bad)
adc
(bad)
mov
call
add
div
xchg
imul
mov
pop
fcmovnbe
jl
jl
add
jb
daa
xchg
ja
sahf
mov
push
xlat
inc
ror
mov
push
mov
or
dec
call
push
xor
xor
xor
xor
movzx
jg
(bad)
adc
xor
mov
xchg
out
mov
loopne
loopne
in
inc
cmps
dec
mov
sbb
sti
lods
in
xchg
dec
fadd
xchg
cmp
adc
jnp
push
jnp
push
lea
adc
cwde
int3
dec
hlt
add
sbb
push
and
dec
popf
lods
push
das
or
xor
xchg
push
jl
push
adc
int3
sbb
imul
sbb
dec
popa
pop
movs
addr16
pop
call
adc
data16
sbb
mov
cmc
in
aaa
(bad)
imul
iret
sbb
pop
rol
jne
push
push
cwde
jle
imul
pop
cmp
fisttp
fwait
iret
aam
fcomp
push
inc
adc
xor
push
aaa
dec
(bad)
rcl
test
inc
aam
or
mov
jo
ror
jne
in
cmp
or
adc
pop
fs
iret
pusha
xor
add
fadd
pop
push
loopne
adc
int3
cmps
cdq
mov
xor
adc
adc
mov
cld
mov
xor
and
fdiv
sahf
sar
sub
mov
adc
mov
fdiv
inc
sub
mov
jge
jne
loope
add
xor
rcr
aam
xchg
inc
aam
add
test
mov
push
lock
push
js
das
loopne
jo
push
adc
adc
pop
xchg
xchg
and
sub
call
movs
pop
lods
cmp
inc
xor
ror
and
xchg
cmps
sbb
add
push
das
mov
(bad)
sub
shl
loopne
push
or
and
lock
or
pop
hlt
lods
dec
adc
xor
fbld
mov
imul
mov
jo
or
jns
mov
stos
add
sub
cmp
test
xchg
jmp
pop
sub
sub
shl
mov
pop
mov
pop
cmp
sar
sar
test
fcmovu
or
or
imul
out
js
iret
mov
mov
mov
jmp
test
pop
in
jge
(bad)
shl
jnp
dec
cmp
xor
and
test
fsubr
es
add
sub
mov
jmp
imul
adc
dec
and
cmp
sbb
jmp
sar
loopne
stos
ret
jmp
mov
je
cmc
movs
cwde
mov
sub
sbb
jle
add
test
pop
scas
pop
dec
cmp
or
xor
sti
mov
sbb
ins
sub
sti
call
sbb
xor
adc
cmp
or
imul
std
sbb
xor
jne
sub
out
jne
mov
shl
push
mov
push
push
je
push
adc
mov
xchg
mov
xchg
add
cmp
mov
mov
inc
adc
in
in
call
pop
lods
inc
dec
jle
push
push
jne
scas
or
add
mov
or
and
es
daa
lock
cli
shl
ss
cmps
dec
ss
imul
in
xor
push
stos
dec
leave
and
mov
hlt
in
in
or
inc
test
shl
imul
ror
movzx
inc
pop
and
sub
repnz
loope
mov
lods
leave
loope
test
fild
out
ret
repz
xchg
gs
cmp
out
xor
push
cwde
lahf
mov
and
scas
rcl
movs
push
mov
mov
adc
rcr
nop
mov
push
(bad)
std
mov
loopne
sbb
stos
test
xchg
cmp
lds
lds
inc
pusha
(bad)
pop
lods
out
fcmovbe
inc
xor
scas
push
inc
push
push
jp
ds
pushf
lods
iret
jnp
in
lds
into
push
(bad)
in
sti
pop
popf
idiv
sbb
es
das
push
pusha
mov
jbe
loopne
pop
sbb
and
add
xor
leave
or
add
mov
(bad)
cmp
xor
cmp
pusha
aas
pop
gs
jmp
mov
dec
shl
cmp
or
or
xchg
sbb
scas
sub
add
xor
shr
movs
lahf
sbb
sub
cmp
push
cmp
push
hlt
ret
add
int3
inc
into
leave
fmul
getsec
sbb
pop
sbb
inc
idiv
jle
ret
daa
mov
aaa
fs
dec
mov
add
mov
fiadd
xchg
retf
rol
cmp
mov
aaa
mov
pop
je
ds
les
(bad)
pop
jle
jnp
outs
mov
mov
jne
outs
dec
xor
or
dec
cmps
jg
movs
cwde
mov
(bad)
imul
and
cwde
dec
shr
sbb
lods
or
gs
xor
jecxz
dec
mov
in
sub
mov
mov
movs
inc
xor
push
mov
mov
pop
push
jb
mov
movs
or
popf
mov
mov
mov
in
lahf
fcomp
inc
mov
mov
sub
fbstp
mov
inc
inc
outs
dec
push
leave
xor
sbb
lock
xor
mov
and
jmp
daa
push
adc
jg
fs
xchg
mov
pop
xor
sahf
xor
jmp
clc
frstor
and
in
xchg
xchg
sub
pop
and
pmulhuw
mov
addr16
xchg
sbb
mov
mov
(bad)
in
mov
jp
add
mov
loope
mul
fmul
push
sbb
sar
dec
aad
(bad)
hlt
adc
nop
dec
pop
es
ret
xchg
dec
jmp
sbb
in
sbb
mov
pop
enter
mov
(bad)
and
mov
das
in
cmp
mov
sbb
or
xchg
(bad)
movs
inc
xchg
les
cld
(bad)
cld
or
mov
pop
cmp
adc
and
nop
pop
adc
scas
test
cwde
mov
xor
sbb
js
or
push
rcl
mov
push
aas
mov
dec
dec
mov
rcr
in
add
push
push
push
sbb
cmp
add
mov
int3
inc
sbb
push
xchg
je
or
sbb
push
imul
ins
push
(bad)
je
adc
xor
push
push
push
pop
inc
adc
sbb
test
mov
add
or
iret
add
sahf
pop
or
jmp
mul
ss
loopne
ss
jg
js
xchg
(bad)
sbb
add
test
inc
add
mov
adc
in
sub
cmp
call
inc
and
pop
add
inc
hlt
sub
mov
push
add
fucomi
xchg
push
push
nop
mov
mov
or
xchg
imul
push
add
ret
lock
cmp
into
inc
add
pop
mov
loopne
mov
daa
loopne
pop
les
add
lea
add
enter
in
sub
lock
cs
hlt
dec
call
cmp
std
call
pusha
addr16
inc
pop
sub
aas
sub
add
sbb
xor
outs
pop
sbb
popf
fs
pushf
mov
call
pop
push
push
cmp
iret
mov
shr
(bad)
push
(bad)
adc
aaa
in
xchg
mov
test
mov
out
mov
jge
in
je
pcmpgtb
mov
fild
movsx
mov
xor
cmp
cs
push
repnz
xchg
ret
cmp
xor
test
clc
ret
and
xor
ins
jge
jmp
mov
or
ret
jmp
push
pop
mov
(bad)
retf
movs
pushf
pop
sbb
jmp
sub
lahf
inc
add
sub
popa
lods
cmp
loopne
sar
fild
adc
jbe
sub
loope
retf
fadd
out
ins
out
or
ja
dec
inc
adc
sbb
es
out
stos
adc
jg
ret
inc
fld
inc
sub
lea
pop
xchg
data16
add
mov
fmul
(bad)
push
push
loop
sbb
nop
fbstp
add
inc
mov
(bad)
push
iret
lds
(bad)
jg
pop
xchg
pop
inc
sar
repnz
dec
shl
or
add
retf
add
xor
sbb
outs
(bad)
jecxz
repz
(bad)
dec
or
dec
clc
xchg
sbb
(bad)
inc
outs
sub
push
mov
add
add
mov
lods
retf
ret
pop
cmp
mov
lds
shl
sahf
mov
rcl
iret
cld
leave
clc
pop
mov
inc
sub
mov
(bad)
jge
pop
pop
add
adc
mov
and
sti
or
or
ret
mov
jbe
or
jno
rcl
fist
mov
enter
(bad)
retf
and
xchg
and
div
pop
iret
xor
das
add
addr16
mov
cld
or
fmul
cs
inc
lods
or
cmp
mov
push
add
cmc
fisttp
outs
loope
jmp
and
ret
add
or
or
(bad)
imul
adc
idiv
lock
lahf
mov
xor
cmp
jl
jo
mov
je
add
lods
add
aam
das
cmp
cmp
cmp
pop
mov
inc
push
inc
mov
popa
and
xor
in
jg
xor
sub
cmp
xchg
pop
and
adc
in
cmp
jmp
lock
xlat
rol
js
mov
ret
adc
ja
ficom
inc
ret
jl
rcr
mov
arpl
mov
lock
cmp
pop
sbb
adc
ret
and
sti
(bad)
lock
dec
sbb
sbb
int3
dec
mov
mov
fild
jmp
or
repz
add
pop
xor
fisttp
xchg
jge
inc
cmps
icebp
jle
sbb
xor
pop
stc
int3
lds
repz
jmp
outs
cmp
lock
inc
inc
jns
xchg
mov
pop
adc
xchg
xchg
push
sub
test
or
jmp
or
push
inc
fiadd
or
adc
and
push
addr16
push
imul
cmp
dec
jns
pop
call
pusha
in
sbb
rcr
xor
aaa
fadd
cmp
mov
dec
sahf
add
shl
test
sbb
adc
mov
ins
push
es
mov
dec
jle
test
pop
mov
pop
pop
or
xchg
and
add
shl
push
mov
loopne
in
shl
fmul
in
cmp
je
ins
sahf
mov
jne
mov
jmp
or
sub
cmp
xchg
lods
dec
ret
or
adc
add
out
int3
fstp
loopne
popf
mov
add
mov
shr
xor
lods
push
jmp
sub
or
or
outs
add
inc
(bad)
in
inc
push
add
or
adc
mov
mov
pusha
jnp
aas
or
or
mov
xchg
ud2
mov
jmp
mov
enter
shr
(bad)
push
mov
adc
push
cmps
mov
mov
sbb
xchg
or
fld
cmp
jg
mov
pop
adc
daa
movs
adc
or
and
and
(bad)
and
jg
mov
push
add
pop
mov
mov
add
xchg
cmp
jg
aaa
sbb
mov
mov
jbe
add
xor
movs
pop
push
inc
icebp
mov
cs
lds
inc
or
mov
cmp
xchg
mov
add
add
sbb
xor
pop
and
add
call
cmp
push
push
mov
inc
out
inc
stc
xor
jns
lock
enter
cmp
sbb
and
adc
mov
(bad)
movs
data16
add
repz
push
(bad)
lods
inc
sub
dec
aam
enter
jmp
ficom
pushf
or
adc
add
cld
adc
push
lahf
add
in
js
ror
mov
lock
jl
stos
or
mov
sub
pusha
lds
sub
nop
popa
jmp
arpl
jge
fwait
mov
pop
inc
shl
push
and
(bad)
jmp
stos
loopne
enter
and
mov
cdq
lods
mov
addr16
out
push
iret
movs
popa
or
into
add
add
cmc
add
pushf
mov
in
add
repz
mov
pop
pushf
leave
and
mov
adc
cmp
ret
ficomp
aam
xchg
sbb
test
inc
repnz
les
mov
in
out
pop
mov
sbb
pop
xor
repnz
mov
jne
xchg
add
mov
pop
cmp
and
lds
pop
fdivp
sbb
or
inc
push
stos
sbb
fimul
cmp
xchg
call
ins
lods
push
and
aam
inc
mov
jno
or
jmp
add
aaa
and
adc
mov
sbb
sar
repz
or
mov
leave
jne
sub
cwde
pop
cli
(bad)
jecxz
jnp
add
sub
mov
cmp
bound
bound
mov
and
lock
or
cmps
push
pushf
lea
adc
test
mov
sbb
ins
retf
sahf
in
dec
mov
mov
jl
jne
xor
sbb
cmp
cmps
loope
cwde
and
push
ds
fs
or
test
test
dec
add
sbb
mov
clc
clc
aam
add
add
stos
push
outs
adc
mov
je
popf
movs
call
sub
bnd
sub
pop
ins
in
add
jp
xchg
clc
data16
cli
mov
jl
pop
cmp
pop
lock
je
and
sub
dec
and
pop
sub
addr16
(bad)
test
dec
or
scas
or
inc
sbb
aas
and
and
cmp
movs
(bad)
inc
dec
cmp
push
adc
sub
adc
call
inc
in
dec
les
push
sub
lahf
loopne
jnp
add
ins
(bad)
xchg
daa
push
and
ja
mov
or
jge
sub
add
xlat
add
cli
jmp
jno
jne
cdq
js
in
ret
cmp
sar
iret
les
add
aas
sbb
call
retw
inc
ror
add
(bad)
fild
or
add
jne
retf
sahf
out
sub
mov
push
push
sub
dec
adc
test
cmp
xchg
pusha
sub
cmp
outs
test
mov
nop
jne
sbb
sub
retf
int
or
add
mov
imul
ror
scas
xchg
or
into
hlt
mov
mov
or
or
pop
adc
jae
enter
scas
(bad)
div
or
aam
and
and
dec
lods
in
xchg
cmps
aaa
stc
push
jle
mov
sbb
je
pushf
sbb
jecxz
out
xor
dec
mov
fstp
shr
cmp
lahf
jo
sti
push
sbb
dec
xor
mov
push
je
or
jmp
mov
mov
pop
pop
push
pushf
or
pushf
out
ja
and
data16
xlat
imul
jns
sbb
jle
push
push
xor
push
ret
popf
imul
pop
adc
xchg
mov
pop
jmp
adc
inc
lock
cmp
adc
sub
es
ffree
ret
mov
aam
mov
xor
enter
jns
jmp
rcl
mov
add
shl
xlat
xchg
sbb
mov
test
sbb
lahf
add
repz
pushf
aaa
sub
loop
shl
sub
(bad)
fmul
test
enter
popa
ror
pop
lods
or
mov
call
fadd
jne
sbb
shl
nop
adc
jno
add
xchg
xlat
add
iret
and
movs
push
push
inc
pop
mov
inc
gs
jg
test
jnp
pop
(bad)
push
sbb
js
add
fs
dec
adc
inc
or
ret
or
dec
arpl
or
add
sar
mov
mov
add
js
mov
or
jg
fsub
sar
push
sub
and
repnz
je
sbb
add
loop
loope
lods
(bad)
repnz
rol
or
sbb
scas
sbb
and
sbb
adc
jle
add
test
cmp
and
push
adc
push
mov
adc
mov
pusha
mov
js
das
xlat
mov
inc
mov
jo
mov
push
xchg
rcr
xor
sbb
push
dec
out
xor
fimul
or
rcr
dec
sbb
jmp
jmp
pop
mov
ficomp
cmp
lea
mov
sbb
stos
aad
dec
test
sbb
dec
rol
push
enter
ret
push
js
mov
and
xor
cmp
adc
pop
dec
sbb
data16
dec
hlt
jno
lahf
(bad)
lahf
hlt
ss
cld
xchg
push
das
add
pop
fs
fs
dec
and
adc
(bad)
jae
movs
cdq
dec
aaa
sbb
lock
mov
xbegin
jb
(bad)
xchg
lahf
inc
dec
popa
lock
sbb
in
xchg
xor
cld
cld
sbb
pop
popf
clc
sbb
sti
add
jb
(bad)
cmp
loopne
mov
dec
add
call
not
mov
dec
cmp
xchg
movs
xchg
add
out
or
pop
jns
sbb
mov
mov
out
outs
add
sub
push
mov
sahf
retf
aam
out
xlat
pop
call
jmp
adc
jo
in
jbe
mov
sub
ret
lds
sbb
inc
adc
pop
leave
pop
popa
stos
les
in
(bad)
les
into
stos
aam
mov
mov
sbb
test
adc
ja
pop
jg
movs
push
int
imul
push
jne
bnd
(bad)
iret
xor
jns
rcl
fldcw
(bad)
(bad)
push
jo
push
adc
push
dec
mov
imul
jl
add
fld
and
mov
or
je
pop
add
mov
pusha
mov
sbb
call
mov
rcl
into
xor
aaa
dec
inc
pop
sub
add
cdq
mov
xor
bound
cwde
jns
dec
inc
and
cld
loope
clc
or
js
or
or
and
loopne
fsub
cs
fdivr
jne
fadd
nop
push
sub
mov
add
popa
push
adc
xor
pop
pop
cmp
enter
mov
mov
cmp
cmp
pop
call
fiadd
popf
test
inc
cmps
in
sub
aaa
sbb
pop
xor
rol
in
call
fldlg2
in
and
popa
mov
add
call
lock
clc
dec
enter
clc
pop
sub
lock
cmovle
inc
(bad)
fistp
(bad)
int3
xor
pop
add
inc
jmp
jns
xchg
fdivr
sub
lea
adc
stos
sub
(bad)
adc
push
adc
xor
xchg
ins
sbb
mov
push
ins
mov
cmp
jmp
sbb
xor
mov
jne
out
fcom
sbb
xchg
mov
rcl
add
dec
adc
inc
sbb
sub
inc
mov
arpl
cs
mov
adc
inc
arpl
inc
icebp
mov
cmp
or
mov
xchg
sbb
rcl
daa
mov
mov
xor
gs
mov
xchg
pop
stos
add
push
pop
add
or
imul
xchg
cmp
fiadd
(bad)
shl
pop
in
xchg
das
outs
add
inc
leave
mov
popa
je
rcl
inc
mov
fnsave
or
es
jl
int
jmp
mov
add
cmovge
iret
sbb
dec
lods
jae
mov
je
push
fst
loopne
add
sbb
movs
mov
xor
(bad)
sub
sbb
adc
jmp
mov
or
loopne
ss
ror
ds
or
movs
aas
dec
call
mov
xor
mov
mov
push
mov
add
pop
pop
sub
inc
sub
add
addr16
stos
jle
fadd
jecxz
or
pop
(bad)
mov
sub
add
dec
adc
shl
push
push
mov
inc
popa
cmp
jle
fwait
or
rol
pop
jb
pop
push
icebp
arpl
pop
sub
add
mov
dec
xor
xor
outs
retf
dec
shl
jae
sbb
out
adc
push
and
add
dec
add
fsubr
and
out
loopne
(bad)
jmp
jle
push
pop
aaa
push
mov
clc
push
xchg
loope
and
or
adc
pop
add
add
cmp
jg
test
pusha
sub
adc
loope
shrd
mov
popf
neg
inc
sbb
add
out
test
fucompp
div
mov
push
jle
pop
push
div
sub
add
dec
jo
ret
daa
jle
or
push
(bad)
adc
sub
or
sbb
popa
loope
pop
aaa
lock
xchg
std
dec
sbb
dec
jmp
adc
(bad)
int
leave
push
in
push
push
mov
sbb
jmp
shl
ret
popf
clc
add
out
rol
hlt
ins
cmp
and
ins
jmp
or
dec
bound
out
mov
jno
fsubr
adc
add
inc
adc
rol
shr
add
and
test
pop
mov
jmp
xor
aam
in
and
inc
xor
xor
add
sbb
or
mov
xchg
adc
es
(bad)
or
(bad)
jge
in
shl
in
inc
pop
push
loope
fimul
adc
inc
pushf
test
cmp
sub
inc
cmp
daa
test
adc
fdiv
cld
pop
pcmpeqw
pop
(bad)
into
add
jp
inc
sub
fwait
les
lock
lds
and
pop
push
adc
push
adc
jle
jnp
cmp
or
add
push
push
push
mov
push
sbb
jne
mov
lock
aad
loop
xchg
pop
xor
adc
xor
add
sbb
cmp
push
test
adc
inc
ja
inc
push
lock
outs
adc
jnp
and
adc
add
or
pop
fbstp
and
jmp
jne
mov
arpl
(bad)
add
test
cmps
push
sub
or
xlat
cmp
adc
loope
lahf
sub
cmps
xchg
cmp
dec
ds
loope
pop
add
pop
cmp
out
pusha
lods
in
push
shr
imul
lods
into
push
sbb
or
and
loop
sub
push
fdiv
out
or
and
or
adc
pop
ss
mov
xor
call
add
cmp
cli
pop
jne
mov
jmp
imul
or
je
cmp
push
sti
out
cmp
inc
push
add
jo
stos
pop
inc
fsub
je
out
or
outs
push
jl
lods
(bad)
rcl
clc
clc
enter
lea
adc
fiadd
cmp
push
dec
pop
nop
sbb
inc
push
mov
dec
lock
add
sbb
and
iret
jecxz
sbb
cwde
test
or
dec
push
pop
scas
adc
mov
loopne
rcr
jo
and
jo
js
sub
xor
or
inc
dec
sbb
inc
ds
lods
jmp
xchg
lods
nop
jmp
gs
dec
into
adc
call
and
xchg
jmp
and
lods
shl
xor
dec
popa
rcr
push
push
pusha
and
xor
dec
jmp
int
mov
dec
or
push
jmp
sub
por
xlat
push
push
inc
jb
and
jne
repnz
jl
(bad)
pop
add
ret
dec
dec
push
push
push
cmp
sbb
ret
lods
loop
das
adc
jne
jno
lds
sar
ror
loope
jmp
or
ret
iret
mov
sub
fild
js
or
push
push
push
push
add
loop
aas
es
popa
outs
pop
xchg
cmps
adc
cmp
adc
mov
bound
cs
sti
jmp
mov
push
js
aas
sbb
or
jle
rcr
cli
(bad)
fldlg2
inc
and
xor
in
outs
sbb
mov
neg
adc
push
adc
sub
loope
popf
and
aad
pusha
cmps
aas
outs
cmp
add
inc
sbb
adc
or
push
imul
dec
push
and
xchg
in
cmp
mov
add
sahf
mov
sbb
cmp
xor
xor
adc
sbb
adc
dec
mov
movups
pop
and
cmp
mov
test
in
ss
mov
test
push
jae
cs
mov
fwait
or
xchg
inc
adc
mov
movs
and
in
out
lahf
lock
mov
adc
and
jns
and
movs
shl
xor
sbb
in
scas
stos
leave
lods
sbb
ror
rol
sbb
cmps
and
loopne
fisttp
or
clc
xchg
lock
sbb
clc
jecxz
add
mov
xchg
add
dec
inc
inc
or
loopne
loopne
in
pop
cwde
out
jecxz
(bad)
jmp
rol
or
hlt
or
adc
hlt
loopne
dec
in
lahf
out
loopne
and
pushf
sbb
in
nop
mov
lock
or
test
adc
sub
mov
lock
clc
retf
pop
jb
pop
cmp
je
adc
jge
push
pop
and
test
jg
in
(bad)
aas
repz
pause
dec
dec
adc
jg
psrld
pop
neg
rol
or
out
cli
and
test
sbb
ja
jecxz
retw
inc
dec
rcr
sbb
loopne
and
xor
mov
mov
xchg
pop
mov
adc
and
dec
add
sbb
dec
and
xchg
lods
pop
sub
and
inc
test
xor
call
or
sbb
mov
dec
and
sbb
push
sbb
add
retf
sbb
mov
pop
psrld
and
jmp
fmul
pushf
add
movs
and
sub
les
xor
dec
adc
xor
in
dec
push
mov
mov
dec
ss
mov
js
dec
frstor
pop
das
clc
popa
cdq
cmp
mov
jge
add
xchg
ja
mov
ins
inc
inc
xchg
inc
lods
aad
inc
shl
and
xor
mov
in
mov
fdiv
xor
repz
imul
pop
fild
in
ja
out
out
or
les
adc
sbb
mov
fcomi
or
fcom
adc
je
jmp
fmul
add
or
push
je
add
jg
lea
fist
aas
mov
dec
mov
add
mov
lods
imul
adc
adc
or
mov
in
push
add
cmp
enter
in
outs
xor
sub
sbb
bound
(bad)
nop
add
sbb
je
push
push
adc
repz
cmp
add
jmp
cli
dec
bound
lea
ss
add
adc
aaa
dec
xor
adc
sub
mov
xlat
adc
sub
outs
addr16
pop
adc
sbb
arpl
pop
sbb
ja
test
repz
cmc
fadd
xor
inc
lahf
rol
push
rol
xlat
ret
xor
adc
loop
push
movs
jecxz
nop
ss
or
and
and
enter
xor
(bad)
popf
and
in
or
mov
test
and
mov
xchg
and
add
push
sub
jmp
add
clc
lock
xchg
or
and
adc
push
test
or
mov
lea
in
(bad)
pop
adc
mov
inc
bound
adc
ficomp
ss
jbe
sub
dec
movs
xchg
rol
push
aam
adc
push
adc
aam
cld
adc
inc
mov
mov
daa
(bad)
call
adc
push
adc
mov
adc
sub
push
out
cmp
out
mov
cmps
popa
lock
sbb
hlt
ror
(bad)
jae
out
adc
adc
mov
je
ja
scas
cwde
cwde
mov
test
inc
jl
jno
(bad)
(bad)
push
jge
inc
ins
mov
and
pop
mov
cmp
push
inc
mov
nop
out
sub
aas
mov
xchg
sar
jns
mov
inc
jl
inc
inc
xchg
dec
(bad)
mov
clc
xor
add
push
ins
hlt
adc
mov
push
add
or
and
push
stos
xchg
inc
adc
std
loop
punpckldq
adc
nop
inc
ins
outs
gs
addr16
mov
iret
pop
arpl
xor
dec
mov
test
fld
lock
pusha
movs
jge
adc
inc
(bad)
mov
cmp
arpl
scas
sub
jo
fnsave
sub
dec
into
jecxz
leave
pop
rcl
xor
or
add
adc
add
pop
scas
mov
or
push
bnd
inc
xchg
xor
hlt
cmp
push
hlt
jmp
hlt
hlt
xor
ds
push
dec
sub
inc
pop
push
cs
(bad)
fidiv
cli
pop
aas
xor
xchg
jecxz
jne
iret
jmp
enter
pop
dec
cmp
stc
adc
jmp
or
pop
mov
and
adc
and
dec
sahf
xchg
shl
popf
or
mul
adc
add
xor
or
mov
sbb
xchg
dec
xchg
fs
adc
mov
add
mov
mov
mov
sbb
mov
mov
and
dec
sub
call
cmps
addr16
or
inc
xor
or
sub
in
(bad)
jl
lea
fadd
les
pop
ss
sub
inc
pop
adc
arpl
inc
sbb
js
push
xchg
jmp
jge
pop
dec
push
adc
ret
imul
int3
test
into
mov
lahf
daa
jo
pop
push
sub
fdiv
lea
fs
popf
mov
adc
pop
add
sub
mov
scas
(bad)
jmp
sbb
mov
mov
in
pop
and
loopne
outs
pop
pop
iret
clc
adc
inc
call
js
es
push
push
mov
sub
adc
pop
xlat
adc
jmp
xchg
adc
adc
bound
inc
mov
cmps
adc
rcl
or
and
add
pop
xor
mov
test
stos
jno
cmp
jg
push
dec
cmp
pusha
xlat
cmp
ja
rep
gs
(bad)
loope
popa
pop
push
(bad)
pop
adc
bound
outs
inc
aaa
xor
mov
gs
out
dec
fdivr
or
jl
loope
mov
or
jne
(bad)
pop
(bad)
adc
sbb
(bad)
js
cmp
add
mov
inc
or
(bad)
inc
or
and
inc
or
cdq
push
inc
pusha
out
ror
and
test
hlt
call
or
dec
inc
test
adc
aas
xchg
clc
pop
mov
cmp
loope
add
sbb
out
dec
enter
jo
and
cmp
add
push
sub
add
xchg
mov
add
mov
clc
sub
or
adc
jmp
jge
or
add
or
sbb
shr
or
jmp
push
push
cmp
jbe
and
and
ins
add
inc
pop
inc
aas
push
out
xchg
mov
adc
addr16
xor
or
inc
cmp
out
mov
stos
inc
mov
mov
repz
test
test
movs
sbb
add
and
(bad)
jmp
adc
cwde
push
stc
mov
call
xor
jmp
xchg
add
in
dec
fwait
add
inc
test
xlat
scas
arpl
and
adc
mov
add
cmps
adc
test
int
cmp
pop
scas
pop
rcl
test
mov
mov
mov
or
lods
xor
cmp
push
retf
push
inc
sbb
shl
mov
and
sub
inc
dec
ret
inc
add
adc
pop
mov
mov
dec
or
add
cwde
clc
(bad)
jl
pop
cmp
js
xlat
daa
cmp
shl
sbb
hlt
(bad)
adc
(bad)
sub
arpl
lea
les
xchg
cmovae
mov
push
loope
xor
pusha
mov
ret
or
dec
ja
add
pusha
push
dec
mov
mov
popf
mov
dec
test
lahf
aaa
dec
stos
and
and
sbb
shufps
inc
inc
mov
push
jl
cmp
cmp
ror
mov
adc
out
ret
ins
mov
bound
gs
and
or
mov
sbb
pop
(bad)
xlat
mov
shl
adc
adc
add
arpl
(bad)
push
aas
das
xor
cmp
pop
push
or
in
jmp
fimul
mov
inc
xor
mov
cmp
push
jnp
adc
pop
pop
fcom
and
push
add
and
pop
dec
mov
mov
and
stc
xor
dec
adc
aam
cmc
cmp
outs
adc
inc
mov
pextrw
nop
loopne
in
or
mov
dec
iret
jecxz
nop
dec
adc
add
sub
push
dec
fistp
cmp
push
jo
aad
add
imul
sbb
call
cmp
dec
popa
add
aam
push
test
add
push
dec
int
mov
adc
sti
leave
mov
jmp
push
mov
pop
fisubr
adc
or
dec
daa
sub
add
mov
ss
cmps
out
into
movs
mov
add
gs
ins
pop
mov
cmp
or
in
mov
or
push
retf
pop
adc
add
sbb
add
adc
out
nop
outs
mov
inc
mov
js
inc
jg
loope
(bad)
aad
pop
mov
mov
push
push
mov
jle
pop
and
mov
jne
xor
lock
pop
inc
mov
mov
popa
xor
push
in
test
fadd
inc
mov
test
cmp
btc
push
stos
fmul
loopne
sbb
pop
dec
pop
push
and
push
shl
add
stos
(bad)
sub
jg
sbb
xor
rcr
push
jp
or
sub
ret
std
ja
adc
cmps
or
mov
sbb
sbb
loopne
add
call
fsubr
int
ret
test
rol
sahf
pop
or
fsub
xchg
pop
pop
cld
pop
cmps
inc
scas
mov
add
add
and
int
jge
not
jg
mov
test
inc
jecxz
inc
cmp
lea
sub
or
je
dec
movs
sbb
and
sub
jns
leave
inc
imul
(bad)
bound
and
(bad)
(bad)
mov
adc
inc
pop
pop
xchg
mov
ins
ja
sbb
fbstp
shr
inc
xor
inc
add
adc
pop
movs
test
lahf
xchg
add
lock
mov
hlt
add
push
shl
add
ds
mov
push
lea
mov
pop
add
xor
inc
sahf
stc
dec
mov
jae
mov
inc
pop
or
add
dec
lock
mov
mov
or
fidivr
push
out
cmp
fisttp
lods
test
mov
mov
pop
stos
push
or
pop
lods
(bad)
adc
xchg
pop
sub
sbb
mov
test
ja
and
pop
mov
cmp
jle
in
iret
dec
jne
pop
movs
sahf
js
pop
pop
add
pop
mov
imul
lea
cmp
dec
aas
and
cmps
inc
add
stc
dec
inc
add
and
xor
in
dec
mov
sti
das
lds
mov
cmp
sub
sub
push
xor
pop
stos
sub
mov
mov
call
mov
push
mov
inc
pusha
push
jb
pusha
or
imul
outs
add
xor
pop
pop
fsubr
lock
add
fidivr
jle
mov
add
les
out
in
dec
je
sbb
inc
pop
push
mov
push
inc
movs
mov
push
dec
inc
add
mov
rcr
sbb
mov
in
push
outs
push
aas
adc
retf
(bad)
push
push
cld
push
cmp
cdq
cmps
call
push
lods
mov
scas
aas
pop
xor
sti
xor
jmp
pop
call
call
out
sbb
inc
sub
or
and
(bad)
call
mov
icebp
jo
mov
enter
mov
aad
in
inc
or
add
push
adc
jg
jae
js
mov
inc
sbb
add
push
div
xor
popa
pusha
dec
cmp
or
sub
mov
push
add
popa
lods
push
pop
jo
xchg
fldlg2
jp
into
and
lahf
lahf
pop
sub
dec
sbb
add
ins
dec
sub
mov
pop
pop
jmp
fild
cmps
mov
lock
fmulp
ds
cld
test
mov
dec
aas
outs
xchg
jb
inc
sbb
loop
or
push
popf
nop
xchg
push
jbe
ret
(bad)
pop
or
sbb
pop
pop
mov
icebp
aas
dec
into
push
adc
pop
xor
mov
dec
adc
xchg
ds
cs
cmove
push
mov
sar
shr
mov
xchg
jno
mov
xor
rcl
jae
mov
fild
push
adc
dec
rcr
sbb
aam
inc
mov
add
(bad)
xor
test
in
arpl
jp
ret
enter
or
add
les
adc
shl
push
cdq
xchg
fist
push
cmp
add
and
mov
dec
in
pusha
or
push
adc
adc
cwde
ror
or
xlat
iret
mov
inc
retf
push
not
inc
mov
xor
cs
fs
or
xor
test
out
xor
add
xor
retf
aaa
push
adc
aam
sbb
into
in
pop
pshufw
mov
outs
mov
push
jp
sti
dec
jg
dec
cmps
sete
xor
sbb
mov
pop
jns
inc
jecxz
jns
adc
jb
dec
mov
dec
mov
xor
push
iret
pop
adc
mov
adc
dec
add
or
add
inc
push
mov
jb
in
lods
ins
or
adc
outs
jne
or
inc
cdq
push
movs
movs
bound
pusha
jnp
jmp
ja
push
push
dec
dec
not
add
mov
iret
aaa
(bad)
push
dec
loope
and
adc
lds
adc
jae
lahf
adc
adc
inc
add
je
repnz
dec
adc
cmove
sbb
ret
push
sub
mov
aad
(bad)
xor
lahf
xor
movs
outs
sub
or
dec
dec
jne
or
nop
push
push
ds
xchg
mov
adc
inc
aam
js
push
push
inc
or
pop
push
push
mov
in
adc
ins
and
jne
test
outs
dec
cmp
sbb
mov
and
pop
(bad)
outs
shl
dec
adc
cwde
add
sbb
packssdw
cwde
dec
sub
and
js
sbb
sar
and
pusha
leave
add
fs
inc
ins
ins
sub
ror
pop
mov
pop
ja
dec
test
inc
xlat
nop
jg
stc
mov
dec
push
lds
xchg
out
es
or
add
dec
add
les
pop
sbb
pop
shr
hlt
adc
rol
push
sti
adc
daa
iret
xor
xchg
push
mov
mov
inc
add
adc
sbb
popa
rcl
cmp
cmp
and
inc
popa
in
dec
adc
mov
xlat
gs
dec
data16
or
or
rcr
adc
int3
stos
sbb
jne
fstp
push
inc
or
sub
aam
iret
add
push
push
nop
sbb
ins
push
loope
adc
push
ja
push
lahf
sbb
mov
pushf
es
aas
loope
out
push
shl
sub
add
enter
mov
pop
xchg
aas
jo
sub
push
pop
xlat
jns
mov
ds
enter
push
push
mov
inc
test
push
inc
pop
pop
cmp
dec
add
fwait
push
sub
or
movs
dec
xor
mov
mov
call
and
cdq
inc
pop
movs
lea
dec
loop
xor
pop
pushf
mov
pop
dec
adc
(bad)
imul
adc
scas
jnp
stc
sub
sbb
ds
mov
add
sbb
push
cmp
push
(bad)
add
mov
jl
mov
mov
mov
out
xchg
xor
fs
popf
push
call
shl
mov
lods
pop
jo
jge
scas
aaa
outs
sbb
cs
push
mov
daa
push
in
jb
sysexit
loop
popa
push
push
inc
inc
ds
mov
and
jae
mov
mov
cld
fistp
and
push
aaa
inc
push
push
scas
xchg
into
adc
sub
lea
add
push
cld
dec
mov
xor
mov
sbb
jmp
test
adc
sbb
aaa
and
ss
add
dec
jp
add
pop
mov
jmp
sbb
add
dec
mov
shl
jb
add
cld
cmp
jae
sub
mov
mov
adc
pusha
push
sti
adc
push
or
dec
dec
sbb
or
fwait
test
(bad)
movs
sub
(bad)
outs
out
mov
sub
(bad)
stc
btr
add
push
neg
xor
jo
dec
cmp
and
fmul
or
js
(bad)
sbb
and
adc
add
movs
mov
xor
xchg
and
mov
hlt
ret
dec
inc
lea
push
sub
in
mov
ds
js
adc
aas
push
(bad)
jg
or
push
mov
jmp
pop
inc
push
dec
test
xchg
fadd
loope
fsubr
inc
ds
push
mov
fiadd
mov
adc
and
fstp
je
sub
and
jmp
xchg
jle
add
mov
push
inc
pop
or
iret
or
and
and
pop
xlat
mov
stc
cld
movs
cmps
rol
and
aas
cmp
movs
out
xor
xor
jbe
pop
and
call
dec
mov
std
je
add
sbb
call
loope
fild
push
adc
shl
test
mov
std
leave
push
xor
dec
das
hlt
or
shr
push
push
or
sbb
jmp
or
lock
jle
inc
mov
fisub
shl
adc
xor
mov
dec
nop
push
sbb
or
adc
mov
pop
mov
xor
les
push
push
jge
test
in
js
adc
mov
test
les
mov
adc
adc
iret
out
add
jmp
or
or
jmp
add
jbe
jne
xchg
add
fistp
add
mov
xor
add
xor
add
pop
push
dec
dec
xlat
adc
fbstp
(bad)
push
xchg
jge
sub
xor
inc
jb
jmp
mov
ret
or
inc
fsubr
xor
clc
or
adc
loopne
mov
das
xchg
adc
mov
push
pop
push
outs
jo
pop
out
mov
lods
iret
ins
dec
push
les
xchg
mov
mov
and
sbb
mov
xlat
or
sbb
sbb
jo
or
dec
les
adc
scas
mov
aam
pop
test
xlat
mov
ror
rol
clc
test
lea
or
daa
pusha
mov
sbb
ret
xlat
mov
shl
in
push
js
adc
xlat
pop
cld
int3
xor
fst
sub
call
ds
jecxz
adc
mov
aaa
jne
imul
out
cmp
loopne
or
pusha
jecxz
lahf
add
push
loopne
cmp
bound
and
mov
mov
sbb
test
pop
dec
add
lahf
add
icebp
jl
or
outs
rdmsr
into
pop
xor
dec
js
cli
enter
push
push
xor
jge
cmp
out
ret
enter
jmp
pop
and
or
das
lahf
nop
scas
and
push
jno
and
sbb
lock
jmp
fild
sub
in
fcomp
and
pop
and
mov
add
iret
sub
dec
sbb
repnz
out
leave
add
loopne
int
mov
mov
les
fld
mov
sbb
mul
push
je
pop
dec
inc
sahf
mov
sbb
xchg
push
inc
pusha
test
out
mov
push
mov
adc
shl
or
jp
jo
jae
cmp
adc
pop
xchg
fldenv
mov
mov
or
inc
mov
pushf
lds
inc
adc
pop
rcr
sbb
mov
push
scas
mov
in
sub
push
dec
mov
adc
mov
pusha
sbb
dec
sub
jbe
test
std
cwde
or
fs
xor
push
popa
sbb
jne
arpl
nop
sub
addr16
hlt
bound
jge
movs
nop
inc
icebp
jne
or
daa
inc
ds
and
and
push
sbb
lods
lods
sub
add
mov
in
sub
hlt
mov
add
push
rol
mov
xchg
push
xor
imul
pop
jp
mov
ss
imul
stos
ins
sti
(bad)
imul
fiadd
jmp
scas
pop
jnp
push
adc
jo
inc
movs
adc
movs
mov
and
adc
xchg
mov
xchg
xchg
jbe
in
es
mov
push
mov
lahf
adc
inc
mov
cmp
adc
adc
jnp
addr16
sbb
in
xchg
aam
mov
enter
rol
int3
enter
rcl
fcomp
enter
loopne
call
enter
cld
enter
add
enter
adc
sbb
enter
and
sub
enter
xor
cmp
enter
inc
dec
dec
enter
push
push
pop
pop
enter
pusha
fs
enter
add
adc
mov
jmp
lea
mov
arpl
push
das
mov
sub
retf
cmp
mov
add
and
and
nop
retf
enter
sub
int3
mov
dec
aam
xlat
clc
fadd
xchg
dec
cs
and
nop
retf
in
gs
sub
call
or
in
or
hlt
dec
gs
sub
je
add
mov
push
movs
xor
add
or
retf
call
push
movs
jb
xor
sbb
sbb
sub
push
mov
test
or
gs
sub
in
xchg
add
das
xor
test
ins
movs
xor
xchg
cmp
push
inc
int3
inc
cs
sbb
dec
push
jns
push
sub
inc
gs
sub
push
fs
add
shl
cld
sub
xchg
add
mov
movs
xor
jo
je
(bad)
xchg
inc
push
sub
xlat
cmp
inc
xchg
fidivr
and
mov
mov
cmps
push
out
jo
aaa
inc
std
add
adc
outs
inc
cmp
mov
jb
ja
inc
arpl
les
and
ja
dec
push
push
push
or
or
jge
mov
jbe
(bad)
aad
out
inc
iret
jae
addr16
in
or
mov
push
push
pop
xchg
dec
push
jo
sbb
loop
jae
shl
stos
addr16
push
sti
push
clc
mov
jle
jae
pop
mov
xor
aaa
push
out
push
dec
xchg
adc
imul
adc
bound
fmul
ja
jmp
cmp
out
outs
jb
aaa
arpl
mov
shl
xchg
add
adc
fadd
pop
mov
imul
or
dec
pop
inc
cs
cmp
push
xor
xchg
xor
mov
(bad)
push
icebp
mov
push
mov
pop
out
mov
loopne
jbe
dec
ds
or
aaa
sub
loope
popa
scas
push
push
dec
inc
lahf
pop
mov
jl
push
sti
ja
nop
and
pop
icebp
mov
jnp
inc
push
into
jae
dec
mov
xchg
inc
inc
push
jne
push
push
jnp
push
mov
stos
imul
sub
pop
push
rol
fild
inc
jg
imul
(bad)
jbe
and
inc
lock
xor
cmps
xlat
xlat
sahf
(bad)
adc
retf
mov
stos
jne
xadd
push
mov
mov
mov
pop
pop
imul
push
scas
sbb
add
sahf
(bad)
jbe
inc
rol
fwait
xor
cmps
(bad)
mov
pop
mov
sar
sbb
xchg
and
adc
pop
sbb
xor
idiv
and
push
jmp
adc
inc
pop
xchg
adc
pop
inc
pop
push
ins
out
(bad)
in
jge
pop
les
sub
es
lahf
adc
push
jmp
mov
retf
test
loopne
outs
pop
ret
push
nop
in
lahf
ror
idiv
lock
das
inc
push
(bad)
pop
push
adc
lods
xor
inc
inc
lock
fadd
sbb
arpl
add
push
xor
lahf
push
inc
les
sti
cs
or
dec
dec
ror
jb
call
xor
pop
leave
or
sbb
add
sysexit
mov
aam
aaa
add
je
shl
movs
jno
sbb
inc
mov
aaa
(bad)
ins
add
test
jecxz
out
adc
xchg
in
inc
xchg
and
sbb
add
jo
sbb
add
sub
scas
mov
add
mov
outs
outs
je
jb
jnp
jno
cmps
add
mov
inc
js
pop
and
ss
push
push
ins
pop
dec
cwde
cmp
test
shr
and
clc
push
and
into
addr16
mov
add
bnd
std
loopne
rcr
sbb
push
jg
test
jecxz
imul
or
jge
mov
inc
add
inc
cwde
or
dec
ret
or
comiss
stos
mov
loopne
jo
(bad)
jg
shr
xchg
cld
mov
pop
rcl
mov
inc
push
jns
cmp
inc
aaa
add
test
enter
inc
ror
adc
sbb
xchg
fistp
imul
push
add
mov
mov
movs
fnstenv
or
rcl
sti
(bad)
fist
popa
addr16
add
ret
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
sbb
mov
outs
add
mov
push
adc
lea
mov
(bad)
iret
pop
cmp
retf
xor
fstp
mov
inc
ror
ins
inc
xor
cmp
call
fmul
mov
hlt
inc
push
das
inc
pusha
mov
and
push
ds
in
xchg
and
sar
cmp
ja
sti
fcomp
fsub
push
cwde
data16
mov
mov
jle
sbb
aaa
repz
cmps
cmc
std
cmp
xchg
iret
repz
push
pop
arpl
jnp
iret
repz
and
xor
repz
repz
test
xchg
stos
sbb
enter
std
call
out
gs
pop
call
xlat
popf
rol
loopne
sub
enter
xor
dec
loop
push
inc
mov
movs
leave
aam
pop
pop
push
stc
dec
and
pop
and
adc
pop
sbb
(bad)
(bad)
dec
mov
in
inc
cmp
push
cs
or
pop
ss
push
cmp
xor
cmp
inc
outs
sbb
inc
add
push
xor
sar
adc
sub
outs
adc
inc
cmp
rcr
dec
imul
sbb
adc
fwait
adc
out
in
push
cmp
jb
add
cmp
enter
cmp
(bad)
cmp
in
in
fld
jb
repnz
adc
cmp
data16
enter
pop
xlat
and
and
cmp
inc
push
push
pop
ins
dec
dec
add
or
sbb
xor
or
pop
outs
xchg
(bad)
mov
inc
dec
and
push
punpckldq
jbe
add
inc
jbe
push
loopne
outs
ja
out
retf
pop
or
inc
add
fbstp
pop
sub
add
pop
jb
movs
push
gs
add
bound
push
jo
mov
xor
xor
aam
adc
fimul
xchg
mov
pop
ins
mov
loopne
fs
push
arpl
lahf
and
add
ror
or
gs
or
and
arpl
xor
mov
xchg
not
mov
enter
inc
xchg
sub
push
jmp
sbb
jecxz
dec
dec
dec
aaa
mov
dec
cmp
mov
xor
lds
sbb
inc
jae
in
push
sbb
dec
add
xor
dec
test
sub
add
push
call
popf
sahf
mov
push
jmp
cwde
mov
inc
call
or
push
inc
sub
pop
add
cmp
(bad)
in
inc
push
push
push
pop
mov
push
dec
fldcw
add
inc
mov
cmp
pop
inc
jns
jmp
inc
mov
das
push
push
jmp
jmp
dec
inc
xchg
test
cmp
lock
sbb
out
pop
jb
or
outs
ret
stos
inc
dec
or
push
add
inc
cld
cwde
adc
iret
ja
pop
aaa
pop
test
and
pop
push
shr
pop
mov
repnz
add
mov
ret
and
jnp
inc
xor
inc
aaa
dec
outs
push
loopne
dec
lods
dec
xchg
inc
int
inc
pusha
fsubr
imul
test
mov
xchg
add
loope
add
call
hlt
sub
xchg
lea
add
xchg
mov
pop
mov
xchg
ret
shl
mov
adc
rcpps
rcr
add
mov
dec
pop
shl
test
adc
add
push
mov
or
and
mov
xchg
fnstsw
xchg
xor
adc
and
jg
push
pop
or
shl
cmps
mov
xor
adc
and
(bad)
fs
ret
js
loop
jno
and
dec
ret
jp
fst
stos
pop
int3
xor
xor
nop/reserved
or
push
inc
iret
mov
lea
sbb
(bad)
fs
mov
ja
jbe
popf
fs
scas
or
push
pop
mov
xchg
adc
inc
and
pop
pop
mov
inc
add
fsincos
nop
push
xor
xchg
movs
add
xor
adc
not
(bad)
jmp
cmp
int3
das
sbb
and
imul
xchg
lea
mov
dec
mov
adc
inc
sub
sbb
push
sbb
mov
fcomip
or
dec
cwde
cld
xchg
enter
mov
and
add
add
or
sbb
pop
in
bound
sub
sub
cmp
ret
movs
in
jl
mov
lea
clc
dec
and
jnp
scas
push
adc
(bad)
cmp
clc
div
(bad)
rcl
(bad)
mov
or
add
xchg
int
call
sub
add
sub
dec
pop
adc
int3
inc
lds
lods
adc
vpunpcklwd
dec
pop
xchg
xchg
mov
fistp
fdivr
jne
push
mov
lock
in
dec
outs
or
fsub
inc
pop
cmp
push
fsubrp
je
lahf
fcmovnbe
and
push
inc
jmp
xchg
sbb
jb
dec
ret
jns
inc
mov
arpl
or
test
sub
sbb
cmp
sbb
sbb
cmp
xor
mov
fisttp
inc
inc
in
jno
xor
lock
jge
inc
jg
out
popa
xchg
inc
stos
call
stos
fdiv
mov
jl
pop
fwait
adc
cli
cld
sbb
mov
and
dec
xor
ret
pusha
pusha
and
or
dec
inc
cmp
push
data16
nop
rol
and
xor
adc
dec
inc
nop
rcl
and
add
dec
add
lods
arpl
or
dec
aas
push
sbb
dec
xadd
movs
add
xor
cs
loop
imul
mov
sub
ss
je
sahf
xor
jns
sbb
fisttp
mov
adc
int3
inc
sbb
ss
leave
hlt
fdiv
mov
ds
adc
sahf
cmp
cmp
xor
pop
fdivr
mov
or
jb
ss
pop
or
cmps
cmp
lock
pop
sub
arpl
mov
xchg
mov
cmp
add
sub
test
rol
jg
arpl
les
or
out
enter
fdiv
xor
sub
mov
adc
cmp
test
ret
fcom
push
iret
push
xchg
or
int3
int3
pop
repnz
ret
jmp
pop
mov
rcl
stos
fwait
push
gs
pop
and
adc
adc
jnp
adc
aaa
hlt
push
dec
loop
retf
stos
sar
ret
sbb
jbe
jmp
fld
hlt
cmp
xchg
xchg
mov
xchg
je
sbb
test
retf
ret
mov
xor
or
sbb
fwait
jmp
out
dec
push
pop
push
pop
xchg
in
and
push
mov
push
sub
pop
nop
(bad)
test
fs
fmul
packsswb
and
or
mov
in
pop
mov
rcl
mov
xor
sbb
or
push
lds
adc
mov
movs
cmova
xor
mov
mov
sub
xchg
popa
test
or
sub
das
adc
cs
imul
xor
and
xor
jmp
cmp
jmp
mov
(bad)
and
or
mov
jg
pop
clc
and
add
cmc
imul
xchg
pop
fcomp
out
add
out
jecxz
je
or
hlt
adc
dec
adc
ds
cmp
repz
nop
cs
cmps
ins
mov
adc
cmps
out
inc
pop
pop
loop
rcr
or
add
xor
retfw
mov
mov
inc
fcom
jno
adc
loopne
test
movs
sub
dec
test
call
or
cdq
dec
sahf
adc
adc
lods
pop
in
and
inc
mov
push
sub
cwde
or
jae
in
in
sbb
lds
call
gs
push
xlat
call
cs
mov
jns
push
call
call
inc
push
scas
inc
std
sbb
push
xchg
and
push
mov
cmps
add
add
inc
fstp
push
stos
inc
mov
mov
cmp
and
adc
push
dec
push
mov
push
dec
push
setb
xchg
inc
add
pop
pop
and
pop
or
enter
inc
inc
or
test
inc
mov
ror
add
push
push
pop
adc
adc
inc
clc
dec
jmp
out
dec
jne
mov
dec
push
and
leave
and
mov
push
xchg
or
inc
ds
mov
push
xor
push
nop
push
and
in
push
leave
inc
cs
push
es
jmp
neg
mov
cdq
aas
cs
dec
xchg
test
xchg
xchg
jns
mov
pop
push
inc
nop
and
pop
xchg
adc
adc
push
jmp
in
test
push
leave
inc
push
push
(bad)
or
dec
sub
xor
and
inc
jmp
and
jne
sbb
sbb
xchg
adc
popf
mov
cmp
adc
pop
dec
inc
mov
add
addr16
(bad)
aam
icebp
push
mov
or
pop
clc
push
into
add
jg
adc
xchg
dec
dec
dec
dec
push
dec
push
pop
cmps
shr
xbegin
or
push
push
jecxz
mov
sar
ret
cmp
rol
mov
pop
dec
xor
jp
jae
mov
sbb
xchg
pop
aas
xchg
or
or
dec
and
test
inc
mov
scas
jmp
xchg
retf
sub
mov
jmp
shl
add
add
(bad)
sbb
mov
repnz
outs
add
jl
shr
mov
xor
sub
pop
ficom
mov
xchg
dec
data16
enter
cmps
mov
jl
mov
shr
pop
push
jmp
fst
jmp
mov
adc
adc
add
sbb
sub
cmp
sbb
push
push
push
movs
(bad)
enter
das
adc
scas
mov
imul
or
sub
lock
out
inc
mov
pop
cwde
fsub
push
inc
xadd
sahf
push
pushf
xor
or
xchg
dec
sti
xor
or
adc
in
dec
mov
add
push
pop
inc
add
add
mov
adc
and
xchg
jg
inc
aas
ror
ins
and
inc
ror
test
add
add
cmp
xor
inc
mov
mov
mov
jnp
or
sub
adc
ja
pusha
jmp
and
nop
inc
ror
cmp
scas
xchg
dec
adc
lahf
adc
xchg
pop
sbb
pop
pushf
add
ret
pushf
fwait
push
cmp
fsubr
ss
add
ret
dec
dec
and
lock
xchg
out
jl
jl
inc
or
enter
ja
adc
jbe
adc
xlat
cld
jne
hlt
in
jge
nop
pop
stc
ins
inc
or
pop
mov
xchg
fdivr
jne
pop
add
and
jp
jb
pop
out
xor
int3
mov
dec
xor
sub
xchg
adc
push
int
inc
aas
adc
jle
add
and
jb
push
or
loopne
stos
mov
sub
out
push
mov
sbb
dec
or
cmp
and
mov
jb
push
add
dec
dec
mov
sub
mov
push
add
daa
and
in
pop
aam
dec
in
out
mov
pop
lods
inc
adc
pop
pop
mov
out
cmc
adc
pusha
pop
les
sub
add
hlt
xor
popf
mov
in
or
sar
jns
in
sbb
gs
leave
shl
lods
push
sbb
pusha
ds
rcl
clc
mov
mov
pop
sbb
mov
push
add
lds
jl
push
sub
in
dec
aas
xchg
jne
sahf
sub
lock
adc
mov
rol
push
sbb
daa
adc
das
cmp
mov
dec
pop
or
in
xchg
add
inc
cmp
xchg
js
cwde
cmp
out
repnz
adc
mov
mov
pop
adc
push
das
sahf
lods
mov
push
push
test
dec
add
(bad)
jnp
push
adc
dec
inc
adc
popf
mov
adc
(bad)
and
call
xchg
test
dec
mov
inc
sti
xchg
or
push
ss
(bad)
out
arpl
aaa
test
or
jecxz
or
and
push
add
daa
enter
pop
dec
aam
rcl
xchg
into
xor
push
push
pop
xchg
xchg
xchg
xchg
pop
pop
pop
pop
xchg
xchg
xchg
xchg
pop
pop
pop
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
xor
xor
xor
xchg
xchg
xchg
xor
xchg
xchg
xchg
cmp
cmp
xchg
xchg
xchg
cmp
xchg
xchg
xchg
and
and
xchg
xchg
xchg
and
xchg
xchg
xchg
sub
sub
xchg
xchg
xchg
sub
xchg
xchg
xchg
adc
adc
xchg
xchg
xchg
adc
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
sbb
xchg
xchg
xchg
add
add
xchg
xchg
xchg
add
xchg
xchg
xchg
or
or
call
mov
iret
pop
add
sahf
cs
push
das
or
inc
das
jno
fidivr
jle
mov
push
mov
lea
xchg
push
add
push
add
sbb
or
mov
push
dec
and
aaa
adc
enter
pop
aam
bound
ret
pop
test
rcl
inc
cmp
(bad)
fbld
test
inc
push
into
xchg
lods
ins
out
push
pop
(bad)
inc
pop
test
and
inc
push
jne
and
adc
dec
or
jns
dec
adc
ficomp
and
cdq
push
mov
cmp
adc
and
lock
pop
into
pop
pusha
adc
push
test
hlt
pop
lock
add
in
fs
cmc
pop
je
sub
pop
sub
dec
push
xor
xchg
pop
sub
jl
popa
cmc
cmp
push
inc
dec
add
ficomp
iret
mov
xchg
lahf
shr
(bad)
adc
push
ret
push
fdiv
in
add
mov
or
lods
mov
sub
in
adc
cmp
scas
cmp
movs
push
(bad)
push
and
xchg
es
fadd
mov
mov
lea
mov
out
mov
pop
dec
xchg
cs
rcr
out
fucomp
test
out
sbb
fcmovbe
ret
mov
mov
ret
push
xchg
add
fst
mov
adc
add
sahf
pop
test
dec
seta
push
dec
adc
mov
ins
idiv
add
jnp
mov
pop
in
xchg
jmp
cmp
jge
xor
ins
es
sub
pop
push
jne
xor
push
idiv
inc
pop
pop
ds
cmp
jo
dec
xor
fsub
add
leave
retf
pop
retf
ret
call
pop
xchg
cmp
inc
dec
mov
int
mov
test
xchg
mov
repnz
(bad)
sbb
inc
mov
ss
jae
std
test
add
or
cld
mov
das
dec
mov
cmp
or
add
or
add
or
(bad)
xor
cmp
nop
cli
xor
das
mov
jmp
xchg
sub
arpl
(bad)
mov
inc
cli
out
pop
jns
js
ret
emms
push
popa
lods
inc
or
hlt
sub
addr16
pop
sub
dec
jmp
jle
and
pop
cmp
rcr
sbb
adc
adc
cmps
and
inc
and
sub
xchg
lock
and
jle
and
inc
ftst
pop
xor
imul
cmp
int3
sbb
mov
lds
stc
push
imul
dec
daa
inc
data16
xor
les
arpl
lock
aas
outs
xor
jb
or
xor
sub
and
sar
sub
sub
jbe
jmp
push
adc
lea
and
test
adc
dec
pop
dec
dec
int
mov
adc
lods
adc
push
or
dec
sbb
xor
pop
retf
fsubr
sub
aaa
call
or
test
(bad)
pop
fsubr
jae
sbb
bt
dec
jmp
xlat
nop
inc
es
cmp
push
iret
inc
jl
fst
fbstp
pushf
loop
inc
inc
inc
test
mov
fnstsw
jge
cld
mov
sbb
or
mov
rcr
xchg
cmp
or
imul
adc
popa
jns
adc
inc
xchg
xor
adc
test
push
enter
imul
inc
inc
push
sub
xor
mov
jbe
jne
or
jne
and
jle
push
mov
jmp
dec
fbld
and
in
sbb
sub
jbe
rcr
shl
inc
ins
and
xchg
xchg
xchg
ins
in
jge
aas
push
mov
ficom
bound
pop
fadd
fcomp
mov
sub
xchg
push
in
repnz
adc
push
adc
pop
xchg
push
test
pop
xor
mov
and
lahf
xchg
daa
cld
push
les
fld
xor
outs
inc
inc
and
pop
pop
outs
pusha
mov
pop
push
data16
pop
mov
xchg
jle
pop
idiv
mov
add
imul
js
loopne
and
sub
cmp
or
pop
es
pop
dec
mov
mov
jnp
push
stc
sbb
push
outs
inc
dec
push
inc
mov
pusha
mov
pmuludq
mov
(bad)
add
jno
add
mov
retf
xchg
pop
pop
add
jb
add
add
retf
fild
or
pop
jae
(bad)
add
mov
add
verr
adc
aaa
jne
aaa
cmps
add
inc
imul
jbe
adc
jno
das
adc
aas
movhps
add
add
pusha
pop
xchg
jo
dec
sbb
ret
sar
jl
add
push
dec
rcr
enter
ds
outs
ret
xchg
or
or
add
in
jge
fiadd
push
loope
xchg
cld
xor
js
frstor
and
pop
and
aaa
push
mov
pop
or
retf
inc
add
ds
loopne
call
sbb
dec
scas
add
and
imul
or
mov
addr16
in
xor
popa
add
or
popa
jl
(bad)
fsub
aas
fld
or
pop
jl
ins
and
bound
xchg
add
inc
ret
sub
adc
mul
scas
mov
add
push
mov
push
ret
add
sbb
sbb
shl
jl
and
xor
push
push
xchg
mov
outs
xor
lods
pop
add
or
xchg
add
xchg
inc
and
pop
inc
js
shl
ret
push
adc
rcl
rol
jae
cwde
mov
dec
add
and
xchg
call
adc
sub
adc
cmp
adc
jae
inc
inc
jb
push
test
xchg
jmp
dec
add
add
shl
unpcklps
or
ins
rcl
pop
xor
add
call
out
inc
clc
les
jmp
(bad)
dec
test
sbb
adc
push
popa
(bad)
hlt
ja
adc
add
cmp
cmpxchg
ds
lods
in
sbb
in
iret
aaa
fs
inc
int
push
jns
mov
lods
push
aaa
in
and
add
sbb
push
mov
jns
mov
and
add
cdq
xchg
jns
xchg
jg
lahf
cli
lar
push
jp
add
adc
ficom
add
add
sbb
daa
repnz
nop
push
test
in
daa
nop
lahf
dec
push
dec
mov
jnp
in
and
int
pop
mov
jnp
mov
jnp
inc
and
fadd
lea
in
xlat
arpl
jnp
adc
mov
(bad)
push
enter
xchg
and
addr16
jnp
inc
xchg
pop
push
xor
popf
nop
dec
aam
sbb
mov
in
push
cmp
sbb
adc
retf
jne
mov
xchg
and
aaa
mov
clc
int
jge
mov
xchg
rol
xchg
xchg
jle
ss
mov
push
push
js
pop
jecxz
push
imul
es
or
mov
inc
mov
cld
shl
mov
sbb
inc
mov
movs
push
xor
lds
dec
adc
sub
lods
rcr
xchg
push
jle
shr
add
jb
xchg
mov
cmp
pop
(bad)
sub
xchg
push
lods
cs
sbb
dec
add
and
pushf
sbb
add
adc
mov
push
sbb
xor
add
ss
daa
in
enter
push
enter
and
retf
inc
xor
cmps
sub
test
cmp
leave
or
enter
sub
bound
nop
adc
inc
add
imul
mov
mov
push
add
pop
(bad)
adc
xor
xor
push
dec
and
cmp
es
mov
add
inc
ret
sti
adc
shl
add
add
daa
pop
xor
ficomp
stos
cmps
hlt
mov
hlt
repnz
cmps
or
push
rol
sti
lods
add
or
sti
inc
push
adc
div
into
pop
test
dec
sbb
xor
mov
adc
jmp
fs
push
test
jle
cmp
lods
fsub
sbb
or
dec
stc
(bad)
pop
shl
dec
jg
rol
inc
add
adc
xchg
mov
push
sbb
mov
mov
mov
je
jecxz
test
mov
or
sbb
pusha
inc
jns
add
xchg
sub
int
test
or
test
push
jle
xchg
ror
add
adc
xchg
ins
(bad)
fwait
lea
xchg
xor
pop
add
mov
or
add
cdq
inc
jb
icebp
jle
in
fcomp
repnz
xchg
cmp
xor
mov
outs
mov
xor
mov
mov
and
lock
and
xchg
cmp
jp
into
shl
in
mov
in
sbb
fldenv
adc
pop
cmp
sub
in
xor
inc
repnz
out
mov
pusha
xchg
xchg
xchg
aam
push
in
sub
and
ja
xor
scas
push
sub
shl
xchg
mov
ja
adc
xor
inc
dec
call
pop
xor
adc
and
or
cwde
add
dec
pop
or
sub
sbb
sbb
mov
fisttp
xchg
arpl
jecxz
mov
repnz
cmp
jne
mov
mov
pop
dec
lock
mov
leave
aam
ss
das
mov
pop
push
push
or
inc
push
add
(bad)
jns
or
ret
pop
push
sbb
add
xor
cmp
imul
retf
(bad)
cwde
adc
xor
inc
inc
outs
xchg
mov
shufps
cmp
fisubr
les
jbe
lods
movzx
cwde
sub
ret
stos
adc
daa
push
call
pop
ja
ins
inc
movs
push
xchg
fild
jns
scas
push
jp
mov
cmp
enter
mov
mov
mov
inc
inc
cmp
add
cmp
in
aas
pop
adc
cmp
add
mov
imul
inc
mov
mov
aas
dec
(bad)
xor
push
mov
shr
inc
ror
sub
mov
ror
sbb
mov
xor
inc
sbb
cmp
push
ss
cmp
in
xor
jns
cld
dec
test
clc
dec
mov
ins
xchg
mov
ss
in
aam
pop
and
adc
pop
fist
add
or
pop
sub
jne
stc
arpl
fnstsw
test
fs
push
call
or
shr
jb
sub
xor
shl
in
daa
and
mov
call
mov
cmp
rdpmc
out
and
xchg
pop
dec
cmp
sbb
das
sub
fidiv
in
stc
add
ins
and
pop
jl
retf
aaa
dec
addr16
outs
inc
mov
mov
lock
mov
pop
inc
sti
sub
jns
inc
hlt
(bad)
hlt
inc
sbb
test
cmp
cli
arpl
xor
pop
movs
call
adc
repz
push
add
cmps
push
push
in
fs
xchg
hlt
shr
jns
(bad)
hlt
sbb
jge
cmp
loopne
retf
sbb
ja
rol
lock
inc
xchg
add
and
pop
and
inc
inc
inc
cmps
fmul
inc
ffree
sti
int3
ret
add
aaa
pop
add
cmp
cmp
lds
or
xchg
pop
jb
test
(bad)
nop
pushf
popf
mov
pop
movs
imul
aas
sub
(bad)
pop
test
push
mov
popa
mov
pop
out
test
lock
cs
and
cmp
mov
ins
push
inc
dec
add
mov
mov
or
sub
or
jmp
mov
sub
mov
inc
imul
adc
loopne
inc
adc
inc
add
push
push
pushf
push
ret
add
cmps
lock
adc
or
push
adc
in
and
inc
xor
xchg
aas
inc
mov
xchg
dec
mov
xor
mov
pop
pop
inc
add
pop
sub
add
stc
mov
pop
je
push
mov
mov
mov
test
mov
add
fadd
mov
or
xor
enter
sub
jmp
lods
sub
add
xor
int
mov
aaa
(bad)
clc
or
lods
sbb
dec
pop
add
das
arpl
int3
ret
xchg
pop
xor
outs
push
adc
push
ja
movs
daa
and
fist
xchg
daa
add
xchg
xchg
mov
sbb
leave
xchg
lock
cwde
jae
xor
in
or
jb
mov
and
cmp
dec
inc
sahf
pushf
rcl
pushf
dec
test
and
iret
sub
xchg
xchg
daa
add
enter
lahf
or
dec
pop
add
enter
ins
xor
ret
dec
xchg
test
pop
jno
(bad)
mov
and
or
scas
or
das
sar
mov
aaa
cmp
add
mov
ins
imul
fiadd
and
adc
or
outs
push
inc
and
adc
ins
push
push
rol
lods
jns
and
or
add
fwait
adc
pusha
xchg
cs
inc
or
pop
or
jecxz
add
add
adc
setbe
add
add
and
dec
repz
cmp
lock
in
hlt
pop
jns
adc
fwait
inc
jb
add
xchg
popf
jnp
fwait
add
or
(bad)
fdivr
inc
je
push
mov
inc
dec
shl
jmp
pop
add
add
add
sub
add
sti
aam
pop
add
mov
popf
cmc
enter
mov
add
and
push
cld
mov
fs
lock
add
sub
fisubr
scas
push
popaw
outs
ins
jg
cmps
mov
inc
loope
dec
mov
pushf
inc
cmp
int3
mov
stos
pop
adc
test
aas
pop
add
ret
in
ja
mov
sub
xchg
add
or
adc
fcomp
or
and
adc
inc
sub
loop
ins
xor
test
shr
test
dec
bound
xor
in
inc
dec
scas
pop
outs
add
or
and
and
repnz
test
push
loope
lods
sbb
dec
bswap
xor
adc
cwde
cld
adc
sub
push
dec
inc
sbb
add
dec
arpl
push
jno
mov
mov
inc
add
cli
fcom
inc
add
jno
dec
xor
scas
jne
repz
test
das
aas
dec
jmp
add
sar
ret
mov
bound
add
mov
pop
clc
mov
cwde
mov
push
outs
lea
cmp
loope
mov
add
mov
mov
jno
mov
xor
scas
movs
xchg
cmovne
sbb
inc
mov
imul
jg
mov
xchg
dec
mov
cmp
pop
dec
add
mov
mov
mov
and
mov
cmc
cmc
js
ret
dec
sbb
or
push
add
pop
scas
xor
sbb
sub
or
fwait
push
lea
or
pop
push
test
sbb
jb
out
sub
dec
pop
cmc
or
fs
arpl
ror
xchg
cdq
imul
mov
adc
xor
ja
outs
or
ror
stos
xor
fsub
stos
into
inc
add
inc
mov
mov
xchg
and
inc
add
xchg
loopne
add
jmp
push
pop
sbb
push
scas
inc
mov
pop
test
xchg
and
fwait
rol
repz
push
adc
ffreep
mov
adc
sbb
add
add
adc
mov
clc
add
add
cmps
repnz
dec
repz
add
jmp
add
push
dec
test
daa
cmps
or
mov
cmp
pop
mov
scas
mov
xor
jecxz
nop
sbb
push
imul
mov
mov
(bad)
dec
and
mov
mov
lea
and
outs
dec
fbld
add
mov
push
sbb
adc
mov
push
ror
mov
dec
sbb
add
inc
jb
icebp
sbb
loopne
mov
fsub
ds
sub
mov
aad
pusha
mov
inc
add
pushf
inc
xor
outs
and
sbb
add
aam
aas
push
(bad)
sbb
push
push
loop
adc
mov
adc
sub
jmp
lea
aaa
add
and
test
push
repnz
arpl
sahf
and
jnp
scas
inc
jl
je
adc
add
add
jae
mov
dec
dec
or
cmp
push
mov
sub
push
sbb
pusha
add
into
cmp
mov
aaa
nop
icebp
mov
outs
add
jo
pusha
(bad)
aaa
inc
or
cmp
fdivr
in
loope
loopne
les
mov
sbb
inc
mov
or
adc
shl
in
arpl
lea
or
shl
mov
dec
jo
dec
je
rol
or
adc
jmp
adc
pop
push
leave
and
shl
je
lock
mov
sar
xchg
adc
dec
or
jge
xchg
test
in
push
lds
enter
inc
cli
jmp
stos
loope
pop
lock
imul
inc
rcr
jae
cli
xor
inc
rol
add
in
pushf
cmps
movs
adc
and
clc
cs
(bad)
dec
inc
dec
cmps
dec
leave
test
sub
push
push
mov
test
js
clc
or
xchg
add
or
jmp
xor
fnstcw
or
adc
das
test
out
dec
jmp
cmp
(bad)
xchg
or
ins
in
scas
pusha
daa
dec
loope
adc
cwde
or
jns
test
addr16
les
rol
pop
rol
(bad)
add
fisubr
fld
jp
dec
add
rcl
movs
adc
pop
movs
xor
nop
fst
and
test
adc
pop
scas
or
xchg
mov
pop
enter
jb
adc
mov
mov
pop
popa
iret
out
xchg
xchg
in
inc
jmp
sbb
hlt
in
les
imul
or
push
sub
mov
sub
mov
in
fsubr
dec
jo
push
ins
frstor
cmp
add
mov
or
push
mov
das
pop
jmp
pop
sbb
add
add
imul
jp
shr
push
mov
cmp
hlt
cmp
and
rcl
sbb
scas
add
push
add
add
or
and
sbb
clc
rol
or
loop
mov
je
xor
cld
mov
test
jp
hlt
cld
mov
es
push
mov
and
int3
and
cmp
arpl
push
mov
popa
popa
ins
add
(bad)
jno
push
call
jmp
adc
and
mov
push
add
dec
outs
sub
push
add
popa
fnstcw
sbb
push
fiadd
adc
shr
mov
dec
push
inc
ss
jbe
add
xchg
pop
or
push
in
push
inc
inc
mov
sti
movs
mov
cs
push
push
push
mov
adc
dec
adc
inc
scas
sbb
inc
or
inc
shl
sar
add
and
adc
cmp
pop
dec
loope
or
out
or
scas
shr
leave
loopne
ins
inc
add
adc
lods
and
fistp
push
or
addr16
out
add
xor
stos
xor
add
rcl
rol
jno
add
test
pop
int3
dec
popf
fadd
call
pop
dec
add
dec
push
stc
and
mov
and
add
or
adc
enter
xor
add
or
push
enter
scas
inc
pop
dec
xchg
lea
xchg
(bad)
or
xchg
idiv
add
aas
pushf
aad
sahf
xor
jle
retf
ffree
iret
mov
adc
pop
rol
adc
enter
loop
cmc
push
or
cmp
ret
fild
mov
mov
push
nop
lock
leave
ret
mov
add
and
or
xor
aaa
sbb
xchg
sub
push
psubusw
(bad)
xor
sti
jne
mov
mov
adc
or
test
jecxz
dec
xlat
cmp
test
(bad)
shr
cwde
iret
inc
std
push
sub
fist
rcl
je
dec
ins
and
cdq
mov
mov
or
les
loopne
icebp
(bad)
jg
sub
mov
xchg
inc
neg
push
mov
shl
jno
and
ins
dec
call
ins
ja
mov
pop
clc
popf
cmp
rcr
push
cmp
mov
jmp
or
lods
xor
das
and
add
imul
test
push
fs
and
cmp
psrlw
mul
mov
add
cmp
pushf
and
fisubr
(bad)
xor
push
xchg
clc
pushf
fisubr
cmc
outs
sbb
push
loope
cmp
sbb
fcmovu
iret
or
retf
scas
into
hlt
or
or
or
or
out
or
sub
push
fild
lgs
inc
mov
sub
not
out
adc
popa
inc
dec
cmp
(bad)
or
cwde
cmp
xor
pop
dec
test
jb
js
jmp
enter
or
and
jne
add
(bad)
jg
pop
test
je
sbb
inc
mov
cs
cli
xchg
mov
jp
xchg
mov
bound
enter
test
push
(bad)
hlt
fidiv
sbb
add
(bad)
cmp
outs
sbb
nop
mov
and
fbld
adc
adc
(bad)
sub
push
setge
int3
retf
xor
dec
sub
add
mov
mov
jno
mov
mov
inc
xchg
nop
inc
mov
inc
(bad)
jp
cmp
fs
fprem
add
mov
xchg
and
shl
cmp
popa
lock
sub
pop
fmul
or
and
inc
inc
adc
or
sbb
sbb
or
xor
pusha
icebp
add
mov
dec
xor
push
xor
adc
jo
les
cmps
bound
mov
repnz
mov
sub
jne
dec
add
in
mov
sub
pushf
mov
sbb
pushf
dec
mov
xchg
inc
adc
dec
ret
and
jo
xor
sbb
outs
dec
sbb
xor
push
push
jle
or
or
xor
lea
xlat
jecxz
cdq
shl
jne
jl
add
outs
jle
fnstenv
call
aaa
mov
sti
cwde
cmp
adc
icebp
sahf
jnp
adc
cmp
add
mov
movs
test
dec
and
call
movs
push
clc
xchg
add
xlat
mov
mov
les
pop
das
cmp
mov
adc
fdiv
movs
inc
ins
and
hlt
push
ins
nop
jbe
fist
mov
push
jge
push
xor
mov
fidivr
add
(bad)
(bad)
rcr
pop
inc
adc
add
xor
aam
movs
add
loope
cwde
and
repz
rcr
dec
popa
dec
pop
fdivr
push
stc
nop
nop
pop
loopne
aam
inc
xchg
add
ret
in
in
imul
ror
dec
imul
cmp
movs
lahf
out
mov
dec
adc
punpckhwd
and
mov
fnstenv
mov
dec
fidivr
mov
pop
movs
rcl
mov
xor
xor
push
ret
jno
inc
lods
fs
xlat
movs
rol
xor
add
loopne
push
cmps
lea
push
mov
xchg
cmp
mov
pushf
or
sete
and
shr
pop
sti
cmp
stos
loopne
pop
lods
and
popa
rcr
xlat
mov
arpl
cli
mov
adc
mov
cmp
add
xor
call
jno
add
adc
lahf
push
pop
lods
or
data16
enter
pop
jnp
and
add
mov
fadd
and
addr16
ret
push
push
cmp
or
rcl
mov
xchg
repnz
cwde
test
inc
mov
or
clc
test
mov
fnstsw
adc
pop
dec
jns
adc
in
shl
inc
dec
xlat
in
mov
sbb
ror
adc
nop
pop
shl
and
xchg
add
adc
imul
mov
push
fcom
imul
sar
and
add
add
pop
xlat
pop
inc
xchg
rcl
imul
jae
xchg
pop
popa
dec
das
add
aad
mov
xchg
xchg
outs
outs
je
imul
test
or
mov
inc
jo
add
in
mov
push
gs
cs
or
mov
in
or
lods
dec
push
mul
addr16
not
and
retf
jae
test
xor
data16
pusha
retf
je
xchg
pusha
pop
add
or
movs
mov
dec
sbb
push
pushf
sub
adc
imul
ins
or
ins
mov
push
retf
add
mov
test
jo
out
mov
mov
ds
xchg
pop
push
scas
mov
jno
icebp
je
dec
sub
jecxz
pop
xchg
jmp
dec
add
and
cmp
rol
mov
or
push
push
mov
ret
add
in
pusha
mov
fcomip
std
icebp
mov
outs
push
jo
jae
add
or
je
sbb
or
push
mov
or
fnstenv
enter
or
lock
push
inc
ins
inc
popa
dec
xor
or
movs
add
or
(bad)
shr
imul
pop
imul
pop
jo
push
dec
outs
jo
dec
div
in
je
push
inc
jns
sbb
or
ins
mov
or
cmp
sbb
mov
mov
adc
xor
fistp
push
aas
mov
or
jne
loopne
out
pop
adc
mov
hlt
add
mov
adc
inc
ds
out
mov
mov
lds
xchg
xchg
in
or
popa
imul
inc
in
mov
inc
push
les
repnz
add
dec
mov
pop
shl
jp
fimul
sbb
or
inc
inc
imul
mov
jae
es
adc
fs
or
iret
inc
retf
add
loopne
shl
div
pop
mov
loopne
add
pop
dec
xor
(bad)
cmc
scas
loopne
test
cs
aaa
hlt
sbb
clc
call
pushf
mov
or
lds
push
or
xor
mov
outs
xchg
pop
xchg
mov
add
xlat
adc
xchg
adc
fwait
pop
pop
mov
daa
fninit
add
sbb
lds
push
xor
or
xor
cmp
dec
pop
pop
push
pop
les
sub
inc
sti
xor
pop
add
adc
mov
or
popa
fs
add
dec
ret
pop
loopne
ja
push
pop
dec
or
(bad)
das
dec
ror
popa
lods
cs
and
xchg
dec
adc
sub
enter
(bad)
mov
lods
push
pusha
stc
out
add
add
and
mov
inc
gs
mov
sub
add
mov
cmps
sbb
add
(bad)
das
scas
and
mov
cmps
inc
xchg
sbb
jbe
imul
add
push
ror
push
fimul
and
sub
inc
push
sub
mov
inc
cwde
sub
int3
push
es
pop
ss
loop
pop
ds
cs
sbb
inc
add
or
push
clc
mov
mov
jp
fcomp
jns
inc
iret
jns
lods
xchg
pop
jnp
leave
inc
ins
leave
sub
or
aas
add
cmp
add
int3
leave
mov
inc
dec
and
or
sub
adc
in
leave
inc
inc
scas
pop
inc
ja
or
ins
and
ins
xor
loope
rol
iret
dec
dec
add
jmp
lods
fnstenv
jmp
out
int
jmp
dec
xor
inc
sbb
pop
or
add
pop
inc
sub
xor
ja
pop
arpl
ret
pop
repnz
jbe
mov
xor
pop
pop
jl
mov
or
or
mov
in
leave
push
retf
enter
outs
xchg
mov
ret
rol
popa
xchg
add
stos
popa
or
dec
ret
inc
fs
pusha
sub
bound
out
mov
nop
or
fstp
add
loopne
sbb
xor
mov
dec
xor
sbb
outs
jl
das
add
pop
enter
cdq
pop
push
int3
jl
mov
xor
sbb
xor
nop
pop
repnz
dec
xor
int3
leave
sub
jl
fmul
push
cmp
fs
ds
dec
push
enter
xor
add
jle
jmp
sti
add
or
cmp
jno
popf
lock
in
clc
add
cs
mov
or
inc
pop
inc
pop
add
push
enter
sbb
pop
(bad)
jae
dec
fcomp
sub
dec
sbb
es
jns
cld
xor
enter
in
dec
into
jne
pushf
into
push
lods
cmp
push
(bad)
movntps
and
jb
dec
enter
aaa
aam
xchg
and
out
xchg
pop
repz
jo
and
(bad)
(bad)
inc
daa
adc
clc
cmp
add
(bad)
pop
ins
pushf
push
iret
cmp
into
adc
sbb
mov
cmp
pop
mov
fdivr
int3
cmp
or
nop
pushf
iret
das
imul
add
test
or
xchg
nop
fdiv
push
inc
popa
jo
xor
add
mov
int
ss
or
(bad)
jl
dec
pop
or
or
(bad)
jnp
sbb
idiv
sar
aaa
dec
add
adc
jg
rol
outs
pop
dec
repnz
rcr
int3
xchg
into
inc
inc
adc
lea
xchg
test
jle
or
or
mov
ins
arpl
add
daa
outs
std
(bad)
inc
xchg
imul
xchg
cmp
add
adc
sbb
ins
add
dec
aad
fadd
push
and
push
test
ror
inc
mov
nop
jnp
or
rol
adc
cs
cmp
push
jge
push
int3
not
dec
sbb
dec
add
ficom
or
leave
xchg
sbb
pushf
es
shl
add
(bad)
sbb
clc
fsub
sbb
mov
sti
sbb
ds
push
fsub
dec
dec
out
adc
pop
mov
sbb
jmp
dec
xor
inc
sbb
and
sub
mov
adc
push
add
verr
cli
inc
(bad)
sti
sbb
das
jnp
rcl
stc
pop
xlat
pop
mov
add
adc
test
pcmpeqb
(bad)
repnz
hlt
rcr
sbb
repnz
bndstx
and
xor
inc
jle
fwait
jg
das
push
add
pop
add
lods
fidivr
repnz
add
fisub
add
(bad)
test
dec
push
and
mov
adc
in
push
ficom
aaa
bswap
cmps
retf
or
add
inc
jb
pop
mov
sbb
xor
push
imul
xor
iret
leave
jae
xor
adc
pushf
cmp
or
or
sbb
xor
pop
add
mov
mov
pop
add
lahf
adc
in
fld
push
imul
fldenv
cmp
mov
retf
test
fs
add
es
mov
ins
add
add
test
add
pop
cmp
pop
add
sub
pop
and
ja
lea
xchg
and
pusha
xchg
or
jp
pop
in
xchg
repnz
outs
dec
cmp
jl
or
cmps
push
out
or
push
add
or
xor
ror
fadd
cmpxchg
push
nop
pop
add
fadd
sub
push
pop
mov
pop
popa
mov
cwde
jecxz
jmp
nop
fistp
and
cmp
movs
push
loop
xor
push
outs
(bad)
nop
das
fs
cmps
nop
cmp
gs
jae
lods
dec
outs
jbe
movs
sub
xchg
pop
push
push
add
pop
lods
jns
sldt
sbb
mov
adc
int3
sbb
inc
gs
jno
xchg
ja
add
and
pop
add
mov
loopne
sub
adc
jns
aaa
add
push
fbld
add
mov
or
push
jl
add
ins
push
or
fwait
mov
cmp
xor
ror
xchg
dec
xor
shl
pop
mov
in
call
inc
jne
add
or
popf
or
in
push
pop
sbb
mov
cld
(bad)
push
les
cmp
je
pop
or
inc
fwait
push
clc
inc
leave
mov
cmp
clc
mov
test
mov
test
add
repz
and
and
retf
adc
xchg
mov
outs
enter
pop
add
push
jno
mov
inc
sub
or
pushf
in
pop
addr16
cmp
jns
mov
inc
rol
cmp
aas
mov
repz
fdiv
movs
mov
add
push
fst
or
xchg
add
adc
adc
cmp
push
pop
push
and
dec
or
jns
or
mov
in
xor
ins
loopne
fild
xor
sub
mov
or
test
dec
repz
xchg
adc
sub
add
pextrw
sbb
out
(bad)
push
xchg
pop
jg
pop
and
sbb
cmp
inc
push
pop
dec
push
pushf
dec
in
data16
out
adc
iret
pop
dec
push
loopne
ins
ss
int
cmp
mov
inc
cmp
iret
shl
hlt
pushf
cs
out
ds
shr
inc
cmp
inc
jl
aam
ret
mov
push
and
into
add
or
cmp
xchg
or
xor
cmps
add
xchg
sbb
out
and
push
xchg
mov
call
imul
in
and
adc
xor
mov
push
mov
pushf
mov
sbb
lods
loope
loope
pop
(bad)
xor
push
loop
loop
jecxz
xor
adc
das
push
dec
adc
aas
in
add
add
adc
pop
in
add
add
pop
mov
or
movhps
inc
sbb
leave
sbb
xlat
repnz
xchg
das
sbb
out
add
sbb
or
pop
mov
arpl
add
add
in
xchg
call
add
and
sub
adc
cmps
fwait
es
cmp
mov
or
in
cmp
cmp
ror
sub
adc
arpl
cs
repnz
push
cmp
or
mov
cld
dec
ss
aas
inc
aad
sbb
push
mov
or
enter
or
shl
ss
sar
mov
dec
rcl
repz
dec
adc
imul
aam
test
inc
cmp
mov
jo
inc
inc
xor
lods
or
leave
inc
adc
scas
aad
xchg
hlt
inc
inc
test
addr16
and
lods
in
inc
inc
das
enter
pop
das
loop
ins
add
add
rol
icebp
dec
sub
ja
test
repnz
test
inc
add
mov
cmp
inc
inc
add
inc
leave
pop
repnz
inc
mov
pop
and
push
mov
cmp
test
test
push
test
dec
mov
xor
adc
in
sbb
inc
or
dec
inc
pop
push
sbb
sahf
mov
fldenv
sub
shl
in
ret
(bad)
mov
sbb
push
push
ret
lahf
call
pop
pop
arpl
cmp
push
or
test
sbb
mov
cmp
rcl
and
out
retf
js
jp
retf
add
mov
or
and
mov
ja
dec
dec
dec
and
aaa
inc
pop
js
add
adc
jne
and
pusha
test
je
dec
ins
or
or
xchg
add
xchg
xchg
les
mov
push
add
mov
mul
adc
inc
xchg
test
adc
ja
movs
outs
mov
adc
push
add
push
jp
out
dec
lods
xchg
cmp
push
cmp
push
and
jmp
test
add
and
test
retf
xchg
std
dec
inc
(bad)
mov
push
pop
sti
je
inc
or
pop
clc
mov
sbb
retf
ins
xor
fcom
int3
add
jmp
out
add
mov
push
adc
cmp
mov
es
sbb
call
mov
lock
jl
imul
fst
add
lock
in
imul
sahf
mov
sub
add
jno
bound
inc
repnz
scas
or
and
popa
pop
pop
nop
bound
cmp
mov
adc
fstp
mov
jg
pop
repnz
arpl
shr
add
ja
cmp
dec
sub
push
out
or
loopne
loopne
xchg
ins
cmps
test
stc
jo
stos
mov
xlat
das
and
dec
shl
retf
dec
in
in
inc
retf
(bad)
cmc
call
out
pop
out
sti
cdq
out
pop
pop
inc
xlat
out
adc
jl
pop
jbe
psubd
out
pusha
std
push
bound
mov
imul
sub
fwait
mov
xchg
lock
sbb
in
jns
lock
outs
cmp
sbb
icebp
ja
xor
repnz
or
adc
push
push
mov
jns
mov
imul
dec
add
imul
xchg
add
adc
dec
dec
pop
or
xchg
push
je
sub
xor
add
adc
int
add
and
(bad)
pop
add
pop
mov
pop
stos
sbb
dec
cmc
cdq
xor
out
pop
out
daa
in
sub
xchg
or
add
pop
mov
icebp
xchg
xchg
xchg
xchg
dec
outs
(bad)
mov
lods
dec
xchg
xlat
out
add
inc
pop
clc
add
and
add
sub
cmp
call
or
xlat
and
xchg
int
and
and
jne
push
ret
push
sub
mov
or
dec
xor
sub
adc
popa
add
movs
inc
or
and
daa
and
dec
test
arpl
adc
xor
push
adc
and
aas
jb
mov
fmul
gs
pcmpgtd
and
mov
fcomp
imul
dec
push
repnz
mov
sub
repz
xchg
repnz
jns
in
jae
mov
push
cs
add
out
xor
xor
aam
inc
jb
fadd
jbe
sbb
daa
add
sub
out
lock
adc
add
jno
or
pop
jae
mov
push
repnz
fdiv
jmp
cmp
push
push
inc
(bad)
bswap
loop
mov
cmc
fwait
inc
jecxz
xchg
fucomi
or
sbb
pop
mov
jmp
sbb
enter
add
ja
fs
pop
hlt
push
repnz
jno
in
inc
imul
lods
jae
dec
push
and
mov
ja
cld
mov
inc
lods
not
mov
lods
not
int3
pop
pop
rcl
add
adc
mov
lods
mul
pop
push
and
xor
rol
mov
push
sub
ins
call
inc
das
sub
jo
ss
mov
add
out
add
pop
mov
sub
mov
push
inc
add
push
xor
inc
stos
popf
sbb
outs
cwde
shl
and
cs
ins
xor
mov
clc
xor
aas
cmp
or
mov
cmovge
or
add
clc
xor
and
mov
and
stc
and
jns
dec
and
mov
jb
jbe
xor
inc
xor
push
in
nop
rcr
or
cmp
imul
mov
sub
mov
bound
pop
(bad)
int3
call
movs
pop
ins
sbb
imul
or
stc
or
cmp
lds
sar
or
and
pusha
push
add
icebp
add
or
or
stos
sar
cli
xor
loop
inc
or
ja
and
pusha
fwait
sbb
mov
xor
push
push
pop
sub
sub
dec
stc
sbb
add
sbb
ins
movs
pop
leave
cmp
inc
movs
pop
and
xlat
movs
inc
push
pop
adc
or
lea
arpl
(bad)
mov
sbb
jo
jle
ficom
cmp
inc
push
push
lods
mov
cmp
ret
pop
jne
or
push
in
jge
shr
or
mov
das
out
push
xor
add
inc
lock
inc
push
in
and
mov
jge
cmp
or
xchg
push
je
dec
mov
ins
push
lods
add
mov
test
xor
idiv
mov
pop
loopne
inc
cwde
lods
pop
sub
inc
xor
not
mov
mov
or
stc
cld
pop
std
loope
outs
(bad)
inc
std
shr
call
fmul
push
push
dec
(bad)
retf
retf
push
(bad)
mov
push
jmp
adc
int
sbb
fimul
adc
push
call
lock
xchg
xchg
jp
inc
sub
xor
ins
test
and
cmp
and
leave
int3
jmp
xchg
or
push
jb
adc
out
leave
stos
fs
dec
mov
int3
jmp
and
ret
inc
jb
sub
xchg
mov
pop
jne
sar
pop
mov
inc
pop
ret
mov
adc
test
int3
lods
or
mov
dec
fdiv
and
push
xchg
fs
jns
mov
inc
popa
xchg
inc
(bad)
add
sub
cmp
cmp
inc
xchg
test
leave
sar
inc
fcomp
and
sbb
push
inc
enter
jns
add
jo
loopne
ret
mov
repz
push
pop
cs
or
adc
push
mov
or
(bad)
and
mov
cmp
stos
adc
ins
jmp
test
xlat
add
jae
inc
adc
mov
into
sti
jmp
je
(bad)
mov
push
xor
and
ret
add
sbb
ret
fs
jmp
sbb
add
sbb
mov
fist
test
das
nop
ds
repnz
jbe
inc
inc
jg
ror
dec
dec
loopne
pop
jnp
sub
xor
jo
and
push
adc
(bad)
ror
pop
sbb
jb
sub
xor
fprem
and
jp
pop
repnz
inc
ins
jo
popa
add
test
mov
adc
ret
adc
das
add
loopne
jb
xchg
pushf
dec
cmps
jbe
adc
add
cmp
xor
jne
pop
mov
pop
sub
pop
xor
es
add
mov
ins
call
test
out
popf
add
das
adc
lahf
ja
mov
test
xchg
lods
xor
dec
jnp
push
mov
push
add
pop
cdq
push
out
shr
stos
ds
pusha
mov
cli
xor
les
adc
(bad)
add
or
xor
repz
xor
add
jo
mov
jae
sub
xor
sub
xor
adc
push
ret
cmp
pop
adc
aad
ss
cmp
das
int
push
mov
shl
inc
dec
push
(bad)
out
adc
push
push
stos
cmovb
xchg
rcr
push
loop
mov
push
lock
pushf
mov
inc
xchg
hlt
cmp
inc
mov
or
mov
pop
lds
nop
cmps
inc
sub
or
mov
cmp
call
test
dec
pop
in
mov
pushf
dec
outs
je
mov
scas
mov
inc
adc
or
into
test
arpl
ins
and
adc
sub
add
test
aas
and
mov
pop
data16
ror
dec
mov
aad
inc
sbb
dec
sahf
das
call
add
push
in
cwde
gs
adc
movs
les
add
jno
mov
jne
outs
cmp
xchg
inc
or
and
sub
adc
inc
adc
adc
daa
imul
add
push
add
sub
inc
test
xchg
inc
or
mov
ret
mov
stos
cld
shl
add
je
xchg
or
xor
add
sub
xor
xor
enter
pop
imul
hlt
mov
mov
das
and
add
pop
inc
movs
inc
cdq
addr16
mov
fidivr
je
add
or
mov
or
cdq
and
aad
call
cwde
mov
push
cmp
cmp
sbb
bound
sub
xchg
fwait
ins
loopne
dec
fdiv
imul
inc
leave
pop
mov
pop
pop
por
push
test
sub
into
dec
or
sbb
neg
aam
dec
push
nop
das
pushf
push
sbb
cmp
mov
mov
(bad)
and
or
mov
inc
pop
add
scas
rcl
push
dec
adc
cmps
or
push
and
xlat
enter
or
or
or
in
inc
or
inc
ficomp
push
rcr
es
das
fs
mov
gs
iret
enter
rol
mov
shr
dec
jnp
rol
scas
mov
xchg
inc
cmp
inc
jo
je
rcr
xor
mov
push
push
vaddsubps
jecxz
in
adc
mov
xchg
cmpxchg
mov
pop
nop
push
mov
bound
push
in
verr
sysret
push
(bad)
fisubr
das
mov
adc
in
repnz
(bad)
adc
adc
jmp
mov
mov
adc
adc
in
xchg
sar
xor
outs
cld
inc
push
push
sahf
pusha
ror
jns
mov
mov
cmp
lods
nop
push
mov
sbb
push
sub
fs
jb
cmp
lds
push
lds
sbb
mov
inc
clc
ret
push
add
jle
pop
mov
xchg
arpl
jne
dec
out
pop
scas
dec
jne
or
or
dec
xchg
xchg
fbstp
push
push
dec
inc
xchg
push
jg
std
iret
test
inc
ins
jo
push
outs
addr16
dec
jo
addr16
sub
inc
imul
push
dec
push
push
dec
or
add
mov
add
adc
loopne
mov
push
adc
inc
push
push
jns
adc
out
enter
(bad)
fadd
loop
and
adc
inc
push
pop
push
sbb
pusha
retf
rol
out
nop
mov
cmps
cmp
into
es
pop
repnz
dec
(bad)
movs
pop
inc
add
clc
xor
push
or
sub
ja
add
cmc
in
xor
mov
or
daa
dec
pop
cmp
push
enter
int
adc
inc
shr
mov
(bad)
mov
loopne
inc
int
add
mov
cld
sbb
add
adc
adc
lsl
jmp
push
adc
mov
clc
sbb
test
push
cmp
scas
in
enter
lds
push
enter
es
enter
retf
sub
int3
ja
fs
jns
adc
icebp
inc
into
push
add
sub
icebp
movs
loop
sbb
jmp
pop
push
scas
(bad)
and
dec
retf
mov
enter
jmp
inc
jl
sub
or
test
rcl
addr16
cmp
adc
jns
call
test
push
xlat
mov
das
mov
out
retf
push
mov
mov
mov
scas
adc
add
xchg
test
outs
aaa
lock
shl
adc
(bad)
in
popa
add
sbb
inc
aas
sbb
fdivr
jge
btc
sbb
mov
dec
(bad)
adc
and
in
sbb
inc
sbb
dec
loopne
jns
pop
fsubr
fistp
mov
dec
in
jo
sti
ror
shr
ins
xor
leave
or
jnp
sbb
shl
adc
and
sbb
add
in
push
mov
jmp
lods
test
or
lahf
sub
mov
push
jno
into
sbb
adc
push
pop
leave
(bad)
push
fcom
stc
inc
pop
or
lods
push
ins
dec
aaa
mov
push
jecxz
fadd
(bad)
sbb
inc
enter
sbb
call
push
iret
in
adc
lods
jnp
rol
cmp
test
mov
mov
xor
data16
push
dec
push
xor
inc
dec
jne
sbb
jle
mul
dec
and
mov
ror
ins
popa
test
xlat
fld
xor
or
push
pop
or
push
loope
into
mov
add
xor
add
dec
bound
mov
loop
je
pop
dec
mov
jne
mov
dec
rcr
neg
pop
inc
push
ror
inc
cmp
xor
rol
xchg
outs
dec
(bad)
jbe
test
aam
inc
cmp
mov
or
adc
or
pusha
push
adc
dec
mov
inc
dec
jmp
or
sbb
mov
out
add
fidiv
add
add
in
in
leave
pop
or
xor
jge
jp
xchg
mov
xor
xchg
leave
sub
cmp
jmp
stos
or
xchg
and
and
ins
fdiv
xchg
call
outs
add
outs
add
pop
mov
inc
push
push
ja
mov
lods
ret
inc
mov
mov
(bad)
or
push
dec
add
cmp
out
ret
pop
add
or
mov
sbb
(bad)
or
and
adc
cmp
adc
pop
hlt
sti
loop
or
mov
add
cmp
add
or
cmp
push
adc
sub
rcl
pop
jp
ins
sub
ins
adc
push
icebp
and
jge
push
nop
repnz
jno
jno
cmp
or
and
and
dec
mov
jmp
pop
ins
ins
test
push
or
fldcw
mov
adc
mov
cmp
mov
xor
or
adc
jl
cli
cmp
pop
pop
cld
push
push
imul
sub
jle
imul
push
pop
arpl
rol
enter
and
inc
scas
aaa
mov
pop
inc
mov
outs
aaa
dec
push
fidivr
cdq
jbe
scas
push
dec
xor
popf
cmps
jbe
push
add
out
push
sti
add
cs
aaa
mov
adc
cmp
ins
pop
jb
mov
push
xor
outs
test
cmp
cmp
jecxz
mov
stos
ja
jne
or
outs
ja
xor
ja
out
loope
add
mov
add
mov
addr16
xchg
push
icebp
xor
call
mov
inc
inc
mov
(bad)
ins
ja
push
fist
push
add
xor
xchg
out
ins
call
inc
sahf
jo
(bad)
push
jae
jo
push
mov
or
retf
shl
rsqrtps
ficomp
je
inc
xchg
out
lods
or
push
sbb
je
or
les
imul
or
pop
dec
(bad)
movs
hlt
add
adc
nop
imul
pop
pop
fs
add
gs
sbb
stos
imul
dec
or
or
pop
xor
jnp
aam
(bad)
push
aaa
inc
js
cmps
xchg
or
cs
je
cmp
pusha
jb
aaa
adc
mov
add
adc
(bad)
aad
xchg
inc
xchg
sub
mov
lahf
push
mov
add
daa
(bad)
jne
lahf
mov
aaa
daa
jb
in
mov
or
sbb
pop
pop
dec
pop
mov
add
je
adc
outs
pop
or
pop
dec
data16
pop
sub
xor
pop
(bad)
aas
loopne
xchg
cmp
inc
ins
and
xor
rcl
test
and
push
lea
mov
xor
pop
push
in
ret
aaa
dec
inc
push
or
(bad)
retf
imul
pop
xchg
pop
stos
add
mov
ret
mov
nop
aas
add
rcr
aaa
push
inc
pop
loop
mov
in
loope
mov
inc
sub
push
bound
outs
add
into
cmp
in
sub
dec
push
scas
or
cmp
lock
dec
push
push
push
out
push
push
aaa
dec
add
lock
lds
inc
mov
inc
inc
xor
or
fcom
into
inc
adc
outs
dec
jp
setge
idiv
jnp
push
xor
dec
outs
push
sar
addr16
xchg
stc
jo
or
inc
jbe
(bad)
or
cs
mov
mov
mov
adc
jb
ss
adc
ds
cs
pop
dec
xchg
lea
push
fcmove
dec
lods
jmp
push
mov
dec
cmp
jecxz
aaa
in
adc
pop
inc
sub
push
mov
mov
jo
and
mov
jne
cwde
cmps
add
stos
or
xchg
mov
(bad)
cmp
inc
data16
or
imul
adc
mov
sbb
or
mov
jle
dec
call
movs
iret
cmp
jmp
push
es
mov
push
cmp
mov
add
or
dec
jl
or
jmp
add
les
xchg
xor
inc
mov
mov
test
(bad)
mov
mov
or
sbb
ss
mov
pop
inc
test
outs
or
ins
push
(bad)
loop
sub
fistp
push
sbb
mov
ret
pushf
pop
(bad)
aas
sub
ror
pop
lahf
xor
mov
fnstsw
leave
mov
mov
ret
das
xchg
and
xchg
sbb
adc
sbb
xor
mov
jns
sub
add
cld
or
and
lock
movs
inc
adc
mov
lea
inc
cmp
push
cli
xlat
push
adc
add
sbb
push
jnp
loopne
and
ret
jb
push
sbb
std
jle
xchg
cwde
or
add
mov
cmovns
inc
jmp
sub
push
inc
shl
jne
bound
inc
inc
imul
test
into
test
das
xor
dec
aad
pop
repz
xchg
sbb
cwde
add
dec
fisttp
je
mov
(bad)
jmp
adc
add
pop
xchg
xchg
retf
add
or
popa
inc
push
cmp
adc
fisttp
lods
xchg
or
icebp
cmp
inc
ret
mov
sbb
clc
mov
push
fisub
fidivr
pop
lods
mov
(bad)
daa
shr
and
xchg
inc
clc
and
test
clc
outs
push
xor
mov
cwde
cmp
loop
stos
xor
mov
pusha
imul
jge
loop
mov
outs
adc
add
push
push
push
or
or
stos
add
loopne
aam
add
jecxz
push
mov
dec
pop
or
or
cwde
imul
sub
test
mul
je
jge
add
sbb
mov
repnz
ret
aam
push
pop
ret
jo
je
ins
and
ret
pop
mov
add
cmp
fadd
dec
xchg
inc
cdq
pop
pop
sbb
unpcklps
dec
inc
paddd
push
ret
cs
push
shr
lock
and
fcom
dec
and
ror
pop
add
push
push
pop
sbb
push
shr
sub
in
jp
sar
(bad)
neg
jmp
js
pop
push
sbb
out
outs
push
jo
jmp
xor
cmp
je
adc
scas
and
(bad)
mov
adc
hlt
and
fsub
icebp
mov
paddsw
fwait
call
or
xchg
push
(bad)
out
mov
es
in
or
or
jno
inc
add
mov
dec
add
adc
mov
test
jmp
push
pop
jo
inc
imul
jbe
add
ror
loop
clc
add
push
jmp
jo
jl
jle
add
mov
dec
push
push
mov
rol
xor
scas
mov
and
mov
or
adc
adc
sub
sbb
ror
call
mov
or
stos
sub
cwde
push
js
mov
dec
push
dec
xor
dec
es
daa
cmp
xchg
cmp
retf
test
es
add
xor
sub
add
and
adc
push
xor
xor
cmp
test
ret
pop
out
push
leave
cmp
inc
or
inc
mov
and
and
jo
mov
jp
dec
dec
dec
adc
mul
enter
jb
pop
cdq
cmp
mov
xor
dec
add
jo
inc
sub
shl
jns
fistp
int
pop
test
push
sub
add
push
mov
dec
push
add
jbe
and
leave
and
xchg
xchg
inc
xchg
mov
jbe
sbb
jb
jne
movs
fdiv
(bad)
xchg
jns
pop
(bad)
xor
je
push
push
push
std
push
leave
push
fs
call
sbb
shr
inc
cvtps2pd
lahf
cwde
pop
enter
mov
cmp
add
sbb
and
pop
fadd
add
je
push
mov
iretw
mov
retf
jmp
aad
dec
addr16
push
(bad)
inc
(bad)
int
js
test
aaa
and
stos
aaa
ror
push
cmp
jb
or
pushf
cmp
dec
inc
cmp
out
das
out
(bad)
out
mov
jmp
push
mov
stos
pop
inc
cmps
jne
xchg
sbb
sub
fimul
pavgw
and
daa
aam
int3
retf
push
pop
or
add
les
mov
sub
pop
push
std
dec
pop
jl
mov
mov
pop
mov
add
pop
popa
mov
mov
mov
or
adc
sub
addr16
adc
rcr
sub
(bad)
in
call
jo
cmp
xchg
sbb
sub
outs
xor
cmps
inc
cmp
call
sbb
mov
adc
ja
inc
xchg
int
popf
daa
cwde
outs
push
pop
xchg
pop
(bad)
ins
jae
xor
je
das
daa
adc
pushf
push
inc
jmp
and
xor
sbb
dec
sti
loop
aad
push
inc
xor
ficom
pusha
loopne
ret
jno
ret
je
scas
ins
or
push
or
cmp
adc
add
call
dec
jl
js
rol
xor
push
push
push
dec
fild
bound
cmp
adc
push
test
add
test
pusha
mov
inc
pop
(bad)
fst
dec
or
pop
dec
ror
sub
sbb
es
dec
stos
dec
dec
sbb
test
adc
and
xchg
cmc
add
inc
sub
sub
clc
(bad)
test
and
mov
or
enter
(bad)
int
mov
call
mov
stc
add
inc
xor
add
or
jmp
repz
cmp
xor
inc
dec
lea
or
adc
xor
pop
dec
adc
xor
pop
int
pop
enter
dec
outs
and
dec
lods
add
dec
dec
mov
or
push
imul
adc
mov
add
add
sub
mov
pop
add
xchg
adc
mov
int3
sub
push
inc
or
je
adc
jnp
cmp
sbb
ins
jmp
hlt
jae
fmul
sar
and
je
fadd
cmps
cmp
loopne
push
call
xor
dec
std
movs
test
(bad)
or
js
mov
or
cwde
fsubr
sub
cmp
daa
loopne
mov
dec
xor
(bad)
call
inc
dec
repnz
mov
adc
outs
addr16
add
add
ss
pop
pop
push
(bad)
mov
push
inc
add
das
pop
push
cmp
inc
add
icebp
mov
ja
scas
inc
and
lods
fsub
cmp
inc
pop
loop
ins
and
cs
sbb
push
call
mov
fsubr
xchg
nop
ret
or
mov
fadd
ins
push
xor
cmp
(bad)
outs
ror
ret
push
jno
mov
sub
push
call
mov
or
jae
inc
pop
xor
push
inc
pop
outs
or
dec
mov
je
(bad)
xchg
inc
push
push
push
mov
push
add
sbb
pop
or
or
cmp
push
popf
cmps
xor
push
and
sub
push
mov
(bad)
inc
or
or
movs
cmp
dec
add
fs
pop
push
js
repz
push
xor
and
sub
fcomp
and
mov
and
mov
(bad)
pop
call
mov
pop
add
dec
or
nop
retf
jle
inc
xlat
xor
and
dec
enter
sbb
adc
xchg
daa
ins
inc
scas
adc
or
mov
dec
cmps
arpl
lock
ret
aad
stc
or
cmp
push
or
pop
inc
inc
dec
dec
add
inc
repnz
sbb
or
jl
inc
cmp
push
mov
imul
(bad)
ficom
movq
neg
lods
or
enter
inc
inc
in
add
lods
sbb
fwait
inc
jnp
jns
add
dec
mov
jb
sub
xor
cmp
js
lods
pop
test
nop
push
lds
rol
pusha
inc
cmps
scas
push
xchg
add
or
jecxz
or
ret
unpckhps
div
arpl
inc
sbb
cmp
dec
inc
xchg
rcr
aas
clc
jmp
dec
dec
inc
in
inc
inc
add
inc
das
dec
fistp
xchg
push
retf
inc
or
push
adc
add
sbb
sub
add
adc
push
dec
xor
xor
mov
sub
pusha
shl
in
stos
pop
push
repnz
inc
or
aaa
inc
lea
sub
xor
dec
fld
dec
xchg
mov
leave
adc
jnp
or
lock
and
je
sbb
test
ret
add
push
adc
and
or
or
pop
add
cmp
mov
sar
push
int
and
add
or
push
or
mov
jg
cmp
jne
imul
test
xor
sub
sbb
int3
int3
inc
scas
mov
loopne
pop
dec
test
stos
inc
ins
xor
mov
mov
sbb
iret
cmps
enter
jo
(bad)
xchg
scas
sbb
add
xchg
add
popa
retf
push
dec
sub
jg
icebp
dec
cmps
add
inc
inc
frstor
mov
mov
dec
and
lock
pop
pop
add
lods
or
dec
adc
xchg
(bad)
pop
dec
mov
or
or
push
pushf
jo
mov
daa
push
add
movs
or
or
xor
add
leave
xchg
cmp
ja
dec
push
iret
xchg
or
int
push
inc
fcmovnb
xchg
add
dec
jae
pop
dec
dec
add
fwait
dec
not
and
mov
cmp
xchg
jge
add
pusha
add
iret
sbb
jnp
adc
ins
mov
xchg
jo
hlt
xlat
fistp
rcr
inc
aas
adc
movs
aam
sbb
adc
dec
pmaxub
pop
push
sbb
arpl
sub
adc
sub
push
dec
push
sbb
repz
xchg
in
pop
cmp
shl
sbb
or
jns
aam
ret
je
test
daa
inc
call
jle
add
mov
push
rep
jge
pop
sbb
push
add
add
pop
cmp
xor
les
in
les
scas
inc
inc
and
or
bound
and
(bad)
inc
push
sbb
mov
mov
scas
pusha
imul
mov
sbb
jge
mov
jle
adc
rcr
push
adc
cwde
bound
cs
adc
sub
add
inc
icebp
shl
push
adc
std
lods
or
retf
mov
add
mov
xchg
or
mov
and
rol
pop
mov
push
push
sbb
nop
xlat
ss
pop
dec
repnz
aaa
cmps
dec
inc
cwde
pop
in
jns
ins
test
dec
inc
dec
or
frstor
popf
ror
mov
push
pop
cdq
mov
push
adc
pop
push
sbb
adc
das
lea
mov
and
in
aaa
xchg
lea
(bad)
jmp
mov
stc
aam
mov
jmp
leave
scas
inc
cmp
cmp
cmp
in
and
in
mov
mov
push
test
mov
mov
pusha
add
hlt
cli
pop
add
test
retf
add
fwait
and
imul
movs
pop
lock
bound
adc
clc
movs
mov
push
je
jne
add
call
outs
setnp
sbb
cmp
xchg
jle
push
out
pop
sbb
imul
lea
shl
or
mov
mov
mul
retf
sbb
aas
rol
ja
mov
push
or
rcr
sbb
enter
pop
push
aas
dec
sbb
cmp
add
not
and
sbb
dec
ret
and
out
ret
push
js
sub
(bad)
jne
addr16
sub
popf
jne
fs
loop
xchg
sbb
adc
nop
ds
gs
aas
enter
adc
push
push
fwait
mov
push
inc
mov
and
add
xchg
cwde
je
fsub
dec
jge
push
addr16
lea
sub
mov
jl
sbb
adc
jmp
lock
jmp
popa
imul
jns
pop
dec
dec
xchg
sbb
lods
loope
xor
push
das
and
xchg
sub
adc
test
push
cmp
inc
hlt
cdq
inc
and
dec
fstp
leave
cmps
mov
dec
inc
or
cld
popa
push
dec
cmp
ret
adc
xor
sub
xchg
add
push
lea
lea
add
dec
pop
add
int
mov
add
mov
ret
jle
movs
add
inc
adc
mov
daa
adc
cmp
aas
pop
sub
push
sub
mov
lea
cmps
stc
adc
lea
pop
pop
pop
pop
shr
ret
push
inc
dec
jne
retf
lock
jge
jge
adc
adc
adc
mov
cmps
test
push
rcl
sbb
xchg
sub
fdivr
dec
hlt
dec
js
sub
mov
setb
mov
dec
jns
jmp
call
(bad)
mov
movs
push
out
pop
mul
or
jmp
test
sldt
adc
fcom
ret
sbb
cmp
inc
aad
push
push
sbb
adc
mov
ret
dec
add
or
cld
sub
rol
jne
ds
fiadd
push
xchg
inc
movzx
lea
mov
cmp
dec
jnp
and
daa
jmp
fsub
xchg
xchg
out
or
jno
and
movs
push
cld
(bad)
icebp
push
es
pop
push
push
dec
fisub
stc
fidiv
ja
clc
movs
inc
movs
ret
in
push
add
(bad)
and
inc
ret
sub
jmp
test
mov
add
rcr
mov
adc
pop
cld
sbb
mov
or
add
pop
inc
cmp
pop
push
push
pop
clc
(bad)
pusha
pop
inc
in
cmps
fwait
xor
aas
push
inc
add
dec
mov
sbb
stos
sub
add
lods
cmp
lock
push
les
mov
mov
aaa
push
add
and
les
adc
js
xor
lods
fwait
nop
mov
cdq
aam
and
aaa
jl
push
jge
fwait
rol
cmp
popa
pop
je
inc
push
outs
push
dec
test
or
shl
int3
ror
mov
lea
cmp
add
pop
ins
add
jnp
aas
in
imul
je
pusha
ret
or
push
das
les
sub
or
inc
js
pop
ds
push
jge
loope
or
int3
or
rol
lock
jge
inc
jbe
mov
cwde
and
push
or
bound
mov
cmp
and
or
add
adc
and
push
sbb
add
jle
or
and
adc
loopne
fadd
and
and
push
push
aad
adc
xor
popf
fdiv
push
sub
and
dec
mov
mov
cmc
xchg
pop
add
or
pop
dec
jne
ss
jmp
inc
cmp
shl
inc
dec
or
mov
cmp
jg
test
jle
cmp
retf
es
aaa
mov
or
add
add
adc
push
xor
div
ror
or
and
push
push
dec
push
push
pusha
sbb
sub
pop
adc
mov
mov
jne
push
push
and
mov
push
pop
pusha
push
xchg
jle
stos
adc
call
fdiv
pop
xchg
(bad)
ins
add
dec
pop
and
and
or
xor
aad
in
or
sub
mov
mov
pop
dec
ds
jnp
adc
loopne
test
xlat
xor
jl
mov
sahf
ret
ret
fwait
ror
cmp
jg
or
jl
push
inc
shl
loope
adc
pushf
adc
add
mov
sub
loopne
add
mov
dec
inc
mov
fldl2t
int3
cmp
xchg
adc
loope
sbb
sar
ss
add
add
sub
(bad)
js
lods
cmc
adc
or
scas
pop
push
jl
adc
dec
enter
or
test
inc
ins
mov
enter
mov
pushf
mov
imul
ins
mov
mov
fisttp
mov
add
ret
xor
rcl
shl
rol
repz
push
mov
mov
inc
adc
adc
sub
add
dec
xchg
lods
ja
or
lea
mov
xchg
popa
sbb
sahf
fstp
cmp
shl
mul
sbb
aas
sbb
mov
jmp
mov
inc
or
push
mov
adc
xor
inc
(bad)
or
push
rol
push
push
(bad)
repz
or
or
adc
mov
loope
call
jno
daa
lods
rol
inc
xchg
not
push
push
int
pop
xchg
js
cs
inc
jl
mov
pop
sbb
and
mov
out
dec
dec
adc
sub
add
sub
lods
mov
aam
dec
or
jle
adc
sub
jmp
aam
je
in
sub
and
retf
and
sbb
mov
adc
ins
and
adc
xor
mov
jae
and
and
sub
push
sub
jl
mov
xor
xchg
xor
adc
push
add
jne
ret
push
dec
adc
dec
dec
loopne
out
adc
lds
je
add
jmp
pushf
ss
mov
and
or
push
mov
ins
sbb
jmp
dec
ins
add
ret
pop
inc
loop
mov
dec
or
pop
pusha
mov
hlt
xchg
inc
push
dec
xchg
add
mov
pop
dec
into
lods
popa
shl
xor
jo
inc
call
fcomp
clc
hlt
inc
inc
dec
dec
hlt
adc
fs
ins
mul
popa
lods
ja
mov
and
cmps
lods
mov
outs
loop
mov
jns
nop
push
sbb
adc
mov
push
dec
add
pusha
jo
add
cmp
push
in
hlt
int3
xchg
in
sub
and
fadd
xchg
stos
ret
adc
in
cmp
hlt
loopne
fmul
adc
mov
adc
sub
push
shl
loopne
add
pop
pop
pop
push
(bad)
xchg
pop
or
lock
push
mov
call
adc
inc
fmul
fisub
(bad)
mov
cmp
mov
or
lods
ret
and
out
adc
mov
mov
and
ins
mov
mov
mov
or
jl
add
xor
jae
push
loopne
lods
sbb
in
sbb
xor
(bad)
cmc
arpl
cmp
dec
jae
mov
fcom
sub
lock
dec
mov
out
call
cmp
push
mov
iret
mov
add
out
dec
and
jle
aaa
pop
fiadd
in
inc
sbb
cmp
pusha
mov
xchg
dec
adc
das
mov
out
dec
push
xor
nop
test
sub
xor
adc
and
add
jb
add
or
aaa
lock
ror
aad
cdq
iret
xchg
or
scas
jns
test
xor
(bad)
push
je
sub
imul
cmps
lock
add
int3
inc
mov
adc
dec
(bad)
clc
daa
pop
dec
inc
jne
hlt
test
dec
sub
hlt
mov
in
mov
inc
push
adc
mov
inc
push
inc
fld
push
jp
test
in
movs
sub
and
sbb
pop
pop
call
adc
add
pop
pop
ja
dec
imul
pusha
xor
shl
mov
imul
scas
push
xlat
inc
mov
pusha
xchg
cdq
add
jmp
xchg
mov
leave
adc
mov
popa
(bad)
je
pop
and
mov
ins
pop
jae
dec
pusha
fcom
loope
or
into
xor
or
jae
loop
xor
or
mov
dec
fistp
or
ret
push
pusha
ins
jae
test
icebp
test
sub
fwait
cmp
pop
enter
inc
add
mov
jge
push
aam
inc
pop
add
cld
cmp
pmuludq
sbb
pushw
push
mov
test
xchg
xchg
pushf
nop
push
fsub
push
dec
pop
add
imul
bound
ror
int3
add
xor
out
(bad)
push
add
xchg
sbb
sbb
pop
outs
outs
dec
add
add
jbe
enter
sbb
dec
push
movs
leave
mov
or
xor
dec
outs
add
or
dec
push
cs
jo
sub
inc
adc
adc
add
retf
or
push
push
or
push
or
sub
mov
test
fbld
xlat
pop
mov
push
sbb
ret
sub
or
call
xchg
leave
adc
jl
mov
inc
add
lods
pop
sub
enter
js
or
hlt
mov
test
mov
and
repnz
mov
sub
mov
mov
mov
pop
jns
outs
cmp
add
add
rcl
int3
cmps
pop
ja
ins
xchg
sbb
add
daa
sar
outs
mov
loop
push
jns
jbe
push
cmps
bound
scas
adc
clc
adc
inc
add
aam
aaa
adc
inc
dec
jne
and
ffree
shl
addr16
pop
sbb
inc
ss
popf
cmp
add
fidiv
mov
fist
xchg
sbb
sbb
mov
das
and
inc
sahf
inc
sub
imul
nop
(bad)
cwde
mov
cmp
xchg
sub
clc
clc
jmp
(bad)
and
and
fs
adc
jmp
push
mov
mov
add
das
or
shl
pop
mov
sub
push
inc
xchg
xor
iret
xchg
fcmovbe
pop
je
fdiv
test
mov
pusha
cmp
mov
pop
mov
push
push
xor
arpl
(bad)
pop
in
dec
shl
mov
sub
xchg
fst
ss
inc
bound
stos
in
fs
clc
cdq
sbb
add
push
fsubr
xor
les
lock
dec
ins
in
and
xlat
xor
int3
sbb
jl
dec
sti
(bad)
lods
mov
in
retf
jmp
rol
cmp
pop
adc
sbb
hlt
out
gs
mov
mov
pop
fld
xchg
inc
dec
xor
xchg
and
outs
mov
ins
inc
xor
cmps
stc
pop
dec
xor
push
push
rol
outs
fimul
dec
enter
sar
push
push
or
pop
stos
cs
add
dec
(bad)
nop
or
mov
stc
sub
inc
rcr
jo
shl
and
adc
mov
mov
addr16
aaa
movs
xchg
lods
adc
test
xchg
sub
in
dec
mov
xchg
enter
inc
cmps
(bad)
dec
add
out
cld
(bad)
and
sub
jl
or
cwde
sahf
jae
ret
cmovg
or
or
outs
inc
adc
ins
push
push
jo
arpl
sahf
add
out
gs
mov
or
imul
lahf
out
jle
data16
das
aas
out
movs
outs
retf
outs
or
inc
and
add
push
pop
test
test
rcr
dec
dec
enter
jo
ficomp
jno
mov
rol
push
fs
mov
inc
add
icebp
mov
or
fwait
lea
push
repnz
js
jo
sbb
pop
and
or
mov
idiv
inc
xchg
popa
pop
mov
and
rcl
nop
neg
and
lds
mov
movs
(bad)
imul
js
jmp
lods
add
add
cmp
stos
sub
sbb
dec
shr
push
and
adc
mov
mov
fld
and
popf
dec
test
ffree
jl
add
loopne
inc
das
push
mov
test
add
ins
sub
mov
ror
cmp
sbb
mov
dec
jmp
ret
adc
adc
mov
popa
and
xchg
push
sub
leave
or
inc
xchg
fisubr
test
jge
xlat
push
je
ret
sub
aas
lods
or
inc
arpl
jnp
ret
gs
mov
sub
fld
bound
cmp
call
in
pop
push
xchg
call
aam
and
sbb
inc
adc
ret
sub
adc
jg
fist
loope
xchg
bound
cwde
imul
cld
inc
sbb
and
sub
dec
lods
jo
sbb
jno
daa
fcom
add
add
and
sub
cmp
sbb
lods
sbb
int3
(bad)
jae
pop
adc
cmps
sub
aad
pop
and
dec
or
xchg
cwde
dec
inc
push
and
retf
aam
inc
sub
ret
cmp
and
sbb
xor
mov
sbb
push
mov
repnz
pop
mov
(bad)
cld
sub
clc
out
add
xor
sbb
mov
mov
pop
or
popa
nop
xor
ret
je
in
es
dec
popa
popf
jle
hlt
popa
mov
pop
xor
(bad)
sub
out
inc
jl
lock
ds
int3
or
pop
fwait
icebp
jne
inc
and
push
call
mov
push
add
push
mov
jp
cmp
movs
fist
shl
pop
mov
sbb
(bad)
pop
pushf
push
xor
mov
call
push
inc
lods
or
sub
mov
mov
adc
fist
cmp
and
sub
aaa
pop
pop
xchg
inc
in
xor
jns
push
pop
fs
into
sub
sbb
ss
inc
xor
pop
pusha
test
sahf
jmp
sub
imul
out
sbb
cmp
adc
sbb
xchg
(bad)
mov
(bad)
and
mov
call
ja
push
xchg
lock
mov
push
ja
arpl
test
clc
ins
es
repz
aaa
xor
adc
push
iret
pop
dec
leave
hlt
jmp
inc
movs
hlt
out
pop
jle
pop
or
gs
or
mov
sbb
test
jo
sub
xor
push
and
push
aam
jmp
dec
xor
daa
pop
pop
jns
jnp
add
clc
rol
and
jno
lahf
pop
std
adc
cmps
imul
inc
jp
pop
pop
cmp
imul
(bad)
push
push
mov
dec
daa
fimul
fld
dec
xchg
cmp
je
sbb
sahf
push
or
jns
add
add
cmc
push
fwait
dec
pusha
dec
push
xchg
inc
sub
movs
test
adc
aas
add
add
fs
dec
xor
and
jnp
mov
das
and
add
and
addr16
test
test
and
add
scas
or
add
sub
push
and
and
jg
add
(bad)
call
xchg
sub
xchg
sti
imul
div
js
xchg
dec
(bad)
pop
push
push
pushf
inc
sub
inc
sub
adc
lods
inc
scas
push
xor
inc
pop
(bad)
es
shl
repz
inc
sub
clc
shl
add
push
cmps
xor
not
or
add
out
add
mov
stc
je
cmp
add
retf
add
popa
or
mov
sbb
(bad)
mov
dec
adc
ror
repz
sbb
adc
sbb
inc
inc
dec
arpl
push
mov
xor
sbb
dec
inc
inc
test
rcr
movs
mov
xor
lods
and
mov
mov
xchg
pop
dec
sbb
iret
inc
addr16
jns
cs
dec
mov
add
add
inc
jo
imul
ficom
fdivr
push
(bad)
xor
(bad)
(bad)
pushf
aas
jne
imul
sbb
test
dec
push
or
lock
xor
push
daa
nop
imul
adc
imul
dec
cmps
or
cmp
pop
dec
call
jnp
call
fs
clc
dec
mov
leave
movzx
ret
adc
pop
das
rcl
adc
outs
fsubr
imul
cwde
ja
lock
lods
mov
xchg
data16
xchg
xchg
in
data16
mov
add
ss
dec
or
popa
ja
xor
ret
rcl
adc
or
ins
and
or
test
xchg
add
outs
fsubr
sbb
and
jae
ss
aaa
jo
mov
xchg
inc
das
add
test
add
in
test
dec
pop
pop
mov
(bad)
(bad)
jmp
cmc
fbld
cmp
mov
dec
and
adc
mov
push
push
aad
push
cwde
addr16
inc
out
jge
push
inc
dec
inc
je
dec
xor
mov
stos
push
nop
popf
in
or
dec
dec
enter
add
cdq
pop
inc
in
cmp
mov
jb
mov
jb
push
(bad)
sub
mov
add
or
mov
inc
adc
xor
xchg
cld
or
iret
push
push
lods
fidivr
add
(bad)
call
data16
test
lock
xchg
repnz
sub
sar
lods
dec
js
hlt
pop
adc
xchg
xor
mov
in
data16
mov
popa
fisub
sub
hlt
popa
in
pop
call
push
push
in
ret
cmp
xchg
out
out
into
dec
aaa
add
(bad)
push
arpl
sbb
call
mov
cmps
fs
xchg
pop
mov
or
in
bt
add
sub
or
pop
mov
jne
lea
rcl
fwait
das
adc
dec
mov
jo
repz
mov
rol
adc
mov
pop
sub
add
sbb
jae
pop
out
cs
push
mov
adc
je
jbe
out
xor
leave
ja
daa
pushf
xlat
repnz
push
cli
sbb
aad
push
cmp
mov
add
mov
jo
sbb
les
jmp
adc
and
xor
or
and
(bad)
les
or
sbb
ja
xor
imul
or
(bad)
aas
pop
push
(bad)
push
cmp
ds
xor
and
aas
int
push
fldenv
getsec
inc
aaa
in
xor
pop
adc
pop
mov
dec
mov
push
outs
add
dec
dec
jb
je
je
out
movs
jmp
or
sbb
inc
jg
inc
push
cdq
nop
sbb
push
nop
je
pop
and
movs
and
adc
addr16
mov
fs
shl
hlt
cdq
sbb
mov
cmp
cdq
inc
enter
push
ror
fsubr
push
xor
sbb
gs
ror
jmp
(bad)
dec
sbb
xchg
loopne
jecxz
or
inc
stos
pusha
cs
invd
sti
adc
or
pop
shr
data16
sbb
sbb
and
add
inc
sbb
out
push
cmps
gs
mov
inc
sub
test
jmp
pushf
es
shl
pop
inc
dec
dec
jmp
sub
lahf
adc
mov
xchg
lahf
adc
dec
jo
adc
int
mov
aas
sub
and
in
rcl
sub
pusha
or
xor
and
xor
sbb
fcomp
sub
mov
push
add
pop
adc
jb
inc
adc
jle
jns
pop
jbe
sahf
push
test
push
inc
sub
icebp
push
loope
adc
xchg
push
repnz
dec
mov
enter
and
pop
push
sub
and
adc
fstp
or
jl
aas
xor
ins
ret
jae
lods
loope
adc
cmp
stc
shl
add
xor
jno
mov
call
push
lods
pop
addr16
xor
call
test
xchg
daa
adc
shl
push
mov
sar
pop
mov
adc
sar
shl
lea
add
adc
push
retf
push
pop
mov
out
pop
scas
fadd
enter
test
inc
add
or
dec
or
adc
add
adc
inc
xor
ret
mov
mov
jnp
push
pop
push
add
loop
into
sbb
loope
cmp
adc
dec
or
and
mov
dec
add
pusha
dec
pop
add
add
xchg
mov
mov
imul
add
jmp
inc
push
nop
movlps
lea
dec
pop
loope
pop
sub
xchg
sbb
jl
push
jle
les
mov
push
or
nop
mov
scas
push
add
gs
pop
cmps
xchg
push
add
icebp
dec
add
cs
dec
in
xchg
je
pop
xor
inc
inc
sahf
ret
stc
gs
mov
sbb
add
pop
or
xchg
movs
loopne
add
jb
leave
add
in
sbb
(bad)
es
cli
mov
pop
or
or
(bad)
repnz
or
pop
lea
xor
fwait
sbb
and
rol
ror
inc
dec
or
inc
lods
fld
jb
jmp
dec
mov
pushf
mov
cdq
push
inc
jbe
mov
sbb
sub
std
punpckhdq
xor
inc
loopne
cmp
add
push
imul
(bad)
xchg
sbb
mov
dec
pop
out
mov
adc
mov
out
add
adc
cwde
aaa
pushf
push
inc
call
jo
and
hlt
pusha
ficom
add
cld
add
pop
jmp
gs
loopne
ss
dec
adc
aam
cmp
jge
and
pop
pusha
sub
repnz
jmp
(bad)
je
inc
dec
inc
add
and
sub
out
and
add
or
pop
mul
push
or
push
jmp
push
jne
xchg
int3
(bad)
cwde
cmc
es
add
mov
ins
arpl
add
and
push
inc
outs
mov
jbe
or
or
pop
ins
in
or
adc
xor
pusha
arpl
dec
cmp
imul
and
pop
dec
and
xchg
adc
jmp
pushf
or
icebp
mov
sahf
movs
(bad)
mov
xchg
nop
test
push
inc
nop
(bad)
dec
aam
cmp
xlat
lods
adc
jno
xor
je
cmp
jne
mov
push
imul
mov
loop
inc
loopne
dec
pop
add
in
jmp
cmp
jne
add
add
lods
dec
fidivr
push
mov
pop
loope
xchg
je
adc
sub
in
sahf
iret
sbb
sbb
fbld
outs
add
add
jae
add
movs
nop
rcr
movs
xor
dec
xor
push
sub
push
mov
call
imul
jmp
jae
loop
icebp
das
dec
push
or
mov
xchg
or
sahf
movs
out
adc
push
jg
push
cli
pusha
ret
fistp
mov
rcl
add
inc
xor
not
add
stos
loopne
sub
outs
push
lahf
and
push
mov
inc
sbb
pop
es
push
fmul
movlps
mov
xor
and
lods
ss
fiadd
int3
sub
shl
sub
fsubr
push
sbb
add
pop
arpl
rcl
(bad)
ins
mov
cmp
adc
loope
mov
je
scas
ds
and
cmp
and
stc
ins
fisubr
add
sbb
std
sub
dec
jmp
outs
cmp
je
out
rcl
daa
sub
push
adc
cmove
inc
mov
xchg
and
push
fdivr
jne
sbb
dec
or
aam
push
mov
ss
test
mov
(bad)
cmp
jne
mov
xor
test
xchg
outs
inc
xchg
dec
cmp
movs
rcl
(bad)
lea
pop
adc
xchg
add
dec
pop
es
sbb
bound
outs
jg
retf
int
fnsetpm(287
imul
cli
and
push
mov
push
adc
inc
jno
cmp
(bad)
out
push
cmps
xor
sub
scas
mov
rol
scas
lods
in
fsub
sbb
and
mov
sbb
sbb
jge
add
sub
jmp
push
aad
daa
int3
inc
adc
popf
mov
xor
lahf
adc
xchg
loopne
dec
mov
sbb
ret
push
ret
inc
fcom
add
xor
add
dec
and
dec
mov
stos
push
mov
cmp
xchg
shr
bound
xor
aam
jae
xor
cmp
jecxz
sbb
and
(bad)
call
sbb
fist
jl
in
push
xor
into
mov
lock
push
push
out
int
mov
ret
aam
inc
in
and
ss
fwait
push
cs
inc
fcomp
adc
and
sub
int
push
gs
pop
adc
enter
add
nop
inc
rcr
movs
push
rol
or
pop
arpl
cdq
pop
stos
ret
iret
mov
mov
out
add
inc
js
lock
ds
jne
push
jle
fisub
lock
mov
leave
hlt
mov
cdq
movs
pusha
dec
dec
or
pop
test
or
xchg
les
cmps
movs
adc
(bad)
fwait
mov
enter
xlat
sub
lock
push
stos
mov
dec
mov
ins
imul
mov
push
ins
imul
stos
hlt
js
cmp
shl
popa
popa
out
lahf
ret
int
mov
or
fadd
dec
inc
jecxz
xchg
test
mov
and
inc
cmp
xchg
sbb
inc
ins
inc
mov
stos
cmp
inc
int
xor
out
test
pop
or
mov
jno
sub
dec
push
movs
xchg
pop
test
lock
jl
das
add
xchg
popa
pop
fsubr
adc
jo
aaa
push
xlat
xor
add
sub
pop
movs
xchg
pop
and
and
xor
cmc
loopne
cmp
addr16
cwde
xchg
mov
jo
cmp
jmp
(bad)
dec
stos
and
adc
lock
fldenv
fistp
mov
dec
loope
sbb
sub
ret
or
and
movs
inc
movs
jne
inc
(bad)
(bad)
repnz
mov
xchg
or
ret
adc
stos
test
cmp
(bad)
mov
clc
mov
xchg
movs
or
dec
imul
adc
scas
xor
mov
push
pop
mov
fwait
xor
add
push
rcl
and
inc
mov
xor
xor
push
adc
lahf
cmp
fbld
test
aaa
or
ret
js
inc
pop
outs
call
inc
lea
add
push
hlt
and
retf
outs
inc
jmp
pop
bswap
add
push
push
mov
mov
cwde
jno
adc
and
pop
xlat
cmp
fmul
adc
add
push
dec
sbb
jmp
mov
add
inc
ins
in
scas
rol
sbb
cmp
clc
fnstenv
add
sar
hlt
mov
add
das
mov
jns
cwde
add
add
imul
leave
xor
(bad)
mov
ret
adc
std
dec
je
xchg
jne
fist
xchg
call
dec
push
call
out
pop
and
sub
sbb
retf
fs
lock
and
dec
xchg
add
mov
jae
imul
or
imul
loopne
and
fwait
loope
loop
cmps
movs
mov
movs
mov
in
fsubp
inc
sbb
sbb
sub
or
and
pop
cld
stos
inc
jmp
xor
inc
mov
xchg
loope
adc
sbb
jno
sbb
and
push
pushf
and
mov
xchg
mov
inc
and
mov
out
and
dec
inc
push
and
icebp
push
xor
mov
push
ja
mov
ret
ret
(bad)
sub
nop
or
hlt
bound
add
sbb
and
mov
pop
(bad)
mov
icebp
and
(bad)
dec
(bad)
pcmpgtb
dec
lods
xor
sub
nop
call
fidiv
clc
sub
xchg
or
retf
cmc
repz
sbb
add
pop
sbb
or
cmp
cmp
test
vprotb
mov
mov
pop
dec
sbb
addr16
add
cmp
jne
inc
push
out
loope
adc
add
mov
adc
repnz
or
sub
adc
rcr
ficomp
scas
movs
pop
dec
add
pop
cmp
push
loop
dec
es
mov
add
xor
xor
push
mov
sbb
outs
sbb
adc
daa
dec
je
sub
je
sub
inc
or
ror
jmp
je
or
je
jmp
out
and
xor
add
jmp
mov
not
mov
or
mov
fcomp
or
sbb
mov
(bad)
pusha
cmps
das
cli
mov
or
aaa
lock
mov
sub
mul
lahf
cmp
jle
sub
mov
or
jg
pop
mov
push
imul
add
dec
or
ret
(bad)
mov
dec
sub
test
cdq
mov
pop
inc
js
dec
ret
in
sbb
hlt
inc
rol
dec
adc
sub
pop
mov
pop
and
add
cmp
adc
push
push
add
mov
daa
push
mul
xor
ror
or
pop
add
mov
push
sub
inc
inc
cmp
ja
jg
into
xor
xor
adc
loop
jl
add
sbb
or
jmp
add
outs
(bad)
push
sub
mov
xor
outs
inc
sub
ret
push
jg
enter
sar
je
cs
lock
xor
push
cmp
gs
push
or
xchg
sbb
adc
cdq
mov
or
sysenter
cmp
xchg
jne
jnp
shr
call
sbb
pop
enter
cmc
add
sub
push
pop
das
pop
sub
sub
dec
inc
pop
outs
adc
fcomip
dec
xchg
int3
inc
or
rol
pop
or
(bad)
mov
imul
aas
stos
pop
add
add
dec
adc
dec
bound
ja
fmul
dec
jae
pop
test
vfrczps
sub
adc
xor
ret
dec
shr
lea
outs
imul
and
aad
and
hlt
add
test
int3
in
mov
cmp
xchg
dec
sbb
(bad)
ds
xchg
fcomp
push
inc
mov
ret
jmp
aad
fs
js
nop
ror
cwde
sbb
sub
fild
ss
xchg
jae
adc
add
call
rcr
je
nop
xchg
ficom
gs
sub
das
rcr
jle
xor
dec
inc
cmps
adc
inc
mov
pusha
adc
push
adc
pusha
(bad)
dec
mov
push
xor
or
sub
jg
movs
jmp
in
xchg
adc
mov
adc
(bad)
mov
mov
pop
add
mov
inc
jne
pop
mov
dec
popa
shl
add
or
sahf
stc
adc
inc
jp
pushf
lock
push
sub
jmp
mov
(bad)
cmc
dec
add
ret
jmp
push
add
aam
jmp
adc
lods
add
sub
loope
test
jmp
xchg
arpl
sub
jne
(bad)
call
inc
and
mov
retf
not
lds
shl
into
pop
xor
and
mov
cld
jnp
jmp
xor
stos
add
sbb
pusha
movs
push
ror
mov
mov
inc
ret
dec
ins
lods
cmp
push
retf
mov
or
lods
or
jo
cdq
hlt
mov
pop
daa
loope
pop
int
or
push
jno
lock
pop
cmp
add
ins
test
ins
fst
cmovp
lods
inc
sub
clc
cwde
push
and
lods
and
push
fcomp
mov
(bad)
ret
dec
lahf
lock
stos
xor
or
adc
lds
xchg
push
imul
mov
or
cmc
sahf
ins
pop
pop
mov
pop
ds
fs
mov
rcl
div
mov
mov
(bad)
out
loopne
push
sbb
mov
inc
or
or
pushw
or
pop
sbb
or
sahf
call
push
call
add
push
(bad)
fimul
add
add
popa
call
pop
add
sub
aam
push
repnz
push
data16
and
mov
shr
pop
and
xor
daa
mov
xor
addr16
fst
rcr
daa
daa
(bad)
pop
xchg
pop
inc
stos
cmp
(bad)
neg
xchg
(bad)
ret
push
dec
push
add
movs
jne
or
add
pop
sbb
sbb
jo
test
push
sub
add
mov
sbb
add
xchg
mov
(bad)
push
test
sub
cmp
or
or
ins
or
or
jbe
retf
and
lods
xor
adc
cs
imul
mov
push
xor
pop
mov
sub
jbe
adc
add
lds
rol
hlt
sbb
movs
adc
inc
mov
rol
repz
add
mov
sbb
in
dec
add
push
nop
mov
into
imul
xlat
add
push
or
js
aam
pusha
repz
int3
jmp
jbe
xadd
add
cld
addr16
mov
aas
sar
sub
pop
std
lods
add
push
push
pop
stos
cwde
enter
mov
sahf
ins
pusha
xor
iret
mov
int3
fbstp
sbb
pusha
and
cmc
pop
mov
shl
mov
mov
nop
cmp
inc
in
inc
inc
mov
add
jno
sbb
js
repnz
jno
enter
push
or
in
pop
jbe
adc
lds
data16
pop
dec
and
inc
inc
stos
push
push
fs
mov
adc
ins
dec
repz
sbb
sub
pop
call
dec
dec
sbb
cmc
sub
mov
call
movs
xor
ret
pusha
adc
or
fdivr
jno
aaa
ins
mov
xchg
mov
mov
test
mov
pusha
xor
or
es
shr
adc
inc
js
adc
mov
into
pusha
fs
xchg
or
iret
sub
add
scas
scas
and
inc
dec
xchg
sub
sub
adc
stc
scas
and
or
cdq
ror
add
adc
push
jmp
sbb
sub
cmp
in
or
in
add
xor
movs
push
aaa
pop
and
and
sbb
or
shrd
lahf
add
mov
add
cmp
push
jg
stc
shr
add
pop
movs
repnz
push
and
jnp
pop
mov
inc
sar
mov
inc
add
in
sti
rcl
sub
push
jo
push
loop
push
jo
icebp
(bad)
outs
adc
adc
push
jno
outs
jo
sbb
mov
and
jmp
ror
push
and
repz
xchg
lea
sbb
jae
add
push
sbb
out
push
mov
cmp
pusha
inc
adc
rol
jecxz
and
daa
push
shr
pop
push
in
nop
or
pushf
neg
clc
test
mov
xchg
jmp
pop
rol
or
inc
add
mov
mov
xor
xor
pop
push
out
dec
out
and
(bad)
mov
mov
fs
adc
sub
inc
pusha
lds
(bad)
xlat
adc
cdq
mov
aas
inc
js
push
lock
adc
dec
dec
add
sbb
fstp
mov
mov
imul
cmp
mov
push
adc
mov
xlat
pop
adc
mov
arpl
xchg
xor
xchg
sub
pusha
xlat
ja
inc
push
adc
push
mov
inc
lea
jno
xchg
cmps
into
mov
push
mov
or
mov
add
mov
dec
push
cmps
sbb
dec
dec
push
es
or
fadd
stos
(bad)
es
pop
clc
xor
mov
add
xor
dec
add
inc
sbb
or
mov
push
inc
cmp
sub
jmp
(bad)
retf
add
sbb
inc
out
jmp
shl
push
xor
js
loope
sbb
mov
jb
mov
clc
and
jmp
xor
cmp
cmp
inc
mov
or
mov
shr
pop
inc
test
cmp
je
std
xchg
cmp
jmp
data16
and
and
jmp
mov
xor
popf
add
loop
daa
dec
or
and
cmp
ins
sbb
mov
int3
sbb
xor
psubd
add
dec
pop
ins
btr
add
xor
pop
stos
cmp
push
and
sahf
jle
je
mov
cmp
sbb
sub
inc
xchg
push
xchg
fcomp
or
push
arpl
aas
aam
mov
push
adc
test
arpl
add
call
pop
rol
ds
xchg
imul
add
push
add
xlat
adc
or
sub
imul
icebp
cmc
pusha
adc
or
jmp
sar
mov
cmp
add
ins
sub
xor
jne
mov
call
(bad)
sub
adc
sar
push
mov
sar
mov
mov
adc
or
movd
sbb
out
daa
and
mov
push
jle
mov
lods
ret
pusha
inc
loopne
mov
cmp
xor
scas
cdq
lea
and
or
xor
inc
pop
test
or
sub
(bad)
dec
repnz
jmp
inc
sti
daa
dec
sti
push
xor
test
je
fmul
adc
jns
jno
mov
or
and
fidivr
nop
xor
and
add
rcl
or
jl
out
je
sub
ror
inc
jp
pop
je
pop
dec
imul
push
(bad)
and
mov
popf
dec
fs
xor
xlat
(bad)
pop
sbb
inc
test
push
je
dec
push
mov
inc
and
in
popa
sub
pop
ffreep
loopne
and
adc
add
mov
lea
mov
imul
mov
jo
and
mov
js
je
loopne
jns
dec
pusha
ins
mov
push
sbb
loope
cmc
and
xchg
mov
aas
cmp
pushf
ror
mov
dec
das
mov
or
rcr
ror
scas
sar
pop
(bad)
sbb
pusha
mov
adc
add
mov
inc
pop
xor
jnp
fsub
sbb
daa
push
push
movs
inc
cmps
add
arpl
xor
add
fst
xor
pop
shr
rcl
adc
loop
xor
add
push
or
adc
(bad)
sub
xchg
dec
adc
mov
dec
push
icebp
adc
mov
xchg
fdivr
icebp
pop
scas
sbb
push
neg
inc
dec
cmp
mov
sar
jl
sub
ins
mov
push
cmp
mov
lock
jl
scas
or
(bad)
(bad)
fist
repnz
cmp
mov
cld
pop
pusha
lods
or
test
and
ins
or
sbb
push
inc
mov
clc
call
sbb
popa
rcr
and
xor
mov
and
add
mov
aam
retf
rol
pop
aas
mov
dec
jne
bound
shr
lods
mov
sbb
add
mov
jb
dec
jecxz
test
or
dec
or
mov
test
(bad)
loop
aam
retf
rol
add
jb
push
sbb
or
pop
push
mov
or
mov
push
push
shl
pop
push
cld
or
xor
lods
pop
imul
sbb
adc
or
jb
lock
dec
add
dec
pop
xor
adc
push
add
int3
hlt
and
xchg
les
mov
jb
cmps
jnp
jb
ror
pop
pop
pop
adc
cmps
fimul
push
inc
inc
or
and
outs
popw
inc
cmps
dec
dec
dec
pop
push
or
ins
sub
or
and
dec
ret
bound
pop
xor
pop
pop
stos
xor
push
sub
jmp
add
lock
add
mov
aam
retf
jmp
sub
inc
mov
sub
jmp
or
pop
inc
and
retf
dec
popa
pop
not
xchg
mov
mov
or
loope
test
(bad)
in
and
loopne
add
dec
jo
push
in
imul
push
adc
dec
(bad)
ret
push
add
data16
jmp
aaa
sbb
push
fimul
jmp
rol
dec
pushf
jne
mov
xchg
jnp
xchg
push
shl
push
js
push
lahf
pop
sub
or
inc
fsub
sbb
push
push
movs
push
add
add
rol
icebp
shr
push
ja
mov
cmp
push
add
xor
inc
jo
or
push
xchg
rol
sub
ret
movs
inc
loope
(bad)
in
xor
pusha
jle
or
xchg
mov
popa
dec
ins
popa
pop
jg
jne
hlt
push
xlat
leave
xchg
mov
cmp
call
mov
jo
and
mov
and
shr
or
data16
adc
adc
mov
sbb
(bad)
adc
jmp
xchg
jns
and
xor
mov
dec
pop
push
pop
sti
or
mov
pop
xlat
push
push
imul
ja
cmp
imul
mov
and
mov
push
in
mov
mov
out
das
sub
adc
nop
test
test
out
cmc
inc
add
rol
jb
rcl
in
(bad)
dec
push
push
dec
inc
xor
sub
or
mov
hlt
adc
imul
sbb
leave
xor
and
and
shl
fnstsw
loope
dec
pusha
cmp
xchg
mov
add
xchg
push
push
adc
popa
add
addr16
inc
xor
xor
mov
xlat
dec
pusha
inc
cwde
dec
jo
es
je
pop
lods
or
int
shr
inc
pop
scas
add
pop
xor
mov
push
push
xchg
(bad)
frstor
mov
out
shr
(bad)
jmp
test
add
add
cmp
dec
mov
or
fs
mov
movs
loop
pop
mov
dec
add
daa
(bad)
xor
xchg
push
jo
nop
mov
mov
cdq
popa
push
repz
and
mov
cmps
add
pop
inc
adc
scas
movs
push
jo
and
or
pop
cmp
aam
mov
mov
les
out
icebp
pop
mov
add
push
inc
loopne
adc
retf
or
inc
dec
clc
xor
adc
hlt
js
jbe
cmps
jmp
and
pop
mov
lods
sahf
jno
and
and
out
inc
bnd
jmp
movs
rol
shr
xor
xor
rol
neg
fimul
jb
into
and
xor
sbb
inc
xor
dec
pusha
aad
pop
lea
rcl
daa
or
mov
retf
xor
or
add
xchg
add
push
jmp
jae
test
call
or
(bad)
fld
shl
test
dec
js
rol
call
mov
and
aaa
xor
retf
dec
ret
and
nop
nop
add
inc
enter
mov
cmp
repnz
arpl
and
inc
xor
and
repnz
(bad)
inc
pop
inc
xor
push
or
inc
(bad)
rep
xchg
ret
mov
push
pop
(bad)
stc
hlt
cmp
in
and
in
je
pusha
dec
aas
sbb
pop
push
and
inc
xchg
xor
fisub
or
inc
sub
jl
mov
or
add
stc
retf
inc
and
push
xor
out
daa
out
add
push
stos
mov
fisubr
(bad)
jns
retf
sbb
xchg
jmp
clc
out
lock
sahf
mov
loope
cmp
ret
sbb
push
(bad)
shl
and
lock
or
(bad)
pop
sub
xor
push
mov
fcomp
adc
outs
cmp
fnsave
sbb
mul
cmp
aas
sbb
jge
push
fcomp
sbb
pop
pop
das
fs
sub
mov
pop
fs
shl
cdq
test
jbe
pop
mov
and
aaa
inc
or
out
mov
cmps
jne
into
mov
sbb
leave
mov
push
into
sbb
cmps
movs
fwait
xchg
outs
cmp
test
or
dec
mov
loopne
cs
pop
ret
les
ss
and
push
push
mov
test
pusha
sub
lea
in
mov
mov
je
cmp
jmp
mov
sbb
cmps
ins
pop
aas
and
push
mov
xor
and
jmp
mov
mov
aas
fs
shl
not
xor
dec
adc
ja
sahf
out
ret
push
outs
jg
add
mov
stc
ret
push
and
cmp
movs
sbb
pcmpgtb
adc
dec
aas
imul
adc
test
mov
js
(bad)
mov
cmp
sbb
pop
push
inc
xor
mov
pop
cwde
xlat
hlt
call
cld
sub
dec
fistp
rol
or
cld
fldenv
add
add
sub
jmp
mov
leave
xchg
clc
cmp
fnstcw
or
mov
sub
dec
loop
clc
push
test
mov
adc
enter
fidivr
enter
jecxz
xchg
cmps
or
in
pusha
loopne
fcom
mov
xchg
rol
mov
fisttp
or
ins
cmps
pop
scas
das
sbb
ffreep
dec
pushf
jp
xor
pop
pop
xchg
mov
pop
sub
jge
add
inc
hlt
das
jns
adc
inc
mov
add
and
dec
fs
pop
xchg
jge
pop
inc
ret
mov
xchg
inc
dec
jecxz
sti
xchg
test
mov
cmp
int
adc
ins
jmp
in
push
or
push
adc
mov
and
sub
sar
das
xor
jne
mov
rol
(bad)
aam
dec
xor
sahf
push
mov
inc
add
ret
fist
or
loopne
rol
cmp
movs
clc
fwait
outs
dec
xchg
add
fist
xchg
pushf
int3
push
imul
lahf
cwde
setae
sbb
xor
adc
sbb
ins
push
in
sbb
popa
bound
ror
ins
das
xchg
call
dec
push
sahf
and
ret
push
cmp
nop
push
ss
xor
pop
pop
and
stos
xor
pop
dec
bound
retf
push
push
jb
imul
and
push
dec
(bad)
addr16
jne
jae
outs
push
and
push
aaa
push
inc
push
xor
jmp
adc
push
imul
xchg
pusha
rcr
jbe
shl
push
or
mov
mov
leave
mov
in
jecxz
mov
inc
imul
gs
les
or
addr16
cmp
(bad)
fld
daa
mov
inc
fdiv
fidivr
xor
arpl
push
or
jge
dec
test
sub
(bad)
inc
das
enter
inc
sbb
aaa
test
in
or
mov
sub
retf
and
aaa
inc
mov
adc
jg
xlat
mov
leave
or
shl
xor
sbb
jbe
push
mov
test
adc
mov
push
mov
rcr
rol
fldcw
dec
mov
adc
fdivr
mov
mov
mov
(bad)
movs
mov
nop
xchg
in
fcomp
push
or
jmp
loop
jne
rcr
xchg
xor
jge
js
or
into
stc
enter
icebp
inc
pop
pop
sbb
les
fst
mov
mov
lods
sbb
aaa
ret
dec
jb
lahf
pop
fnstenv
rcr
lods
lea
push
cmp
cmp
sbb
xor
dec
arpl
add
int3
gs
xor
sub
pop
push
retf
loop
add
pop
rol
inc
ror
sub
dec
or
inc
adc
js
jb
das
or
fwait
sub
inc
add
or
jno
test
cmp
shl
mov
push
add
fwait
jmp
popa
sub
dec
sub
mov
ret
lea
jmp
and
nop
rcl
aam
hlt
add
jecxz
fwait
test
arpl
in
and
xchg
(bad)
jnp
sub
push
mov
pusha
pop
sbb
shl
xor
mov
xor
addr16
push
or
inc
imul
add
repz
adc
xor
arpl
pop
inc
adc
add
ja
adc
xchg
movs
(bad)
pop
mov
and
popf
pop
movs
adc
sub
and
adc
inc
test
xor
sbb
adc
pop
push
or
cwde
movs
es
aas
inc
les
arpl
popa
stos
loope
enter
dec
push
jbe
dec
loopne
dec
or
push
movs
mov
addr16
and
jae
mov
pop
enter
dec
add
inc
or
inc
inc
outs
fwait
imul
ja
xchg
inc
or
fist
popa
pushf
ja
inc
mov
xor
jnp
loope
inc
and
ja
pop
push
ins
mov
mov
push
inc
add
ret
sahf
neg
bound
push
adc
cs
jae
out
enter
imul
push
stos
jo
fadd
push
jns
jo
sbb
push
push
cmps
test
and
mov
push
outs
mov
sbb
push
mov
js
fs
push
jp
jmp
xor
and
inc
jge
and
stos
push
mov
dec
outs
out
out
ret
imul
inc
cmp
outs
lods
test
out
adc
pop
cld
add
arpl
mov
jg
or
inc
mov
scas
jae
call
inc
js
jmp
adc
imul
fiadd
loop
(bad)
or
cmp
or
inc
ins
in
cmp
fist
push
sbb
mov
ds
lods
or
xchg
imul
rcl
pop
inc
mov
test
ins
push
retf
jnp
or
cmp
inc
retf
(bad)
shl
ss
adc
jmp
ror
xlat
je
loope
sub
arpl
lods
and
mov
jae
inc
fimul
shl
sbb
push
inc
sahf
gs
out
div
jb
mov
xchg
scas
push
jne
xchg
mov
and
xchg
add
aam
push
and
xchg
jne
jo
mov
pop
cmps
push
mov
inc
cmps
sbb
daa
dec
imul
sbb
pop
pop
test
lods
pop
(bad)
cmp
jecxz
push
and
(bad)
je
mov
sub
pop
inc
xchg
push
adc
cmps
cmp
mov
mov
push
xor
das
adc
pop
sub
ins
sub
pop
pop
cmps
popa
pusha
pop
push
lahf
retf
push
call
dec
scas
imul
dec
inc
mov
inc
adc
or
(bad)
jecxz
push
lahf
mov
push
aas
adc
fist
adc
(bad)
ins
movlps
daa
adc
inc
pop
aaa
push
shl
adc
jne
bound
addr16
push
push
or
pop
jp
mov
xchg
inc
or
jo
addr16
test
sbb
push
fbstp
lds
add
cld
js
mov
outs
inc
mov
stos
test
pop
mov
sbb
push
push
pop
push
shl
inc
push
stos
add
gs
fiadd
or
push
outs
mov
xor
xor
push
or
mov
repz
in
test
cmps
jmp
push
dec
push
mov
call
icebp
pop
in
adc
outs
and
mov
cmp
inc
data16
pop
adc
xchg
pop
mov
lea
daa
xchg
jae
add
push
loop
addr16
adc
sub
mov
xor
sub
outs
pop
movs
xor
cwde
lock
pop
dec
sub
cmp
or
cmps
xor
push
add
and
aaa
adc
push
ret
mov
aas
pop
mov
fild
or
ficom
out
stos
and
rcl
div
fbld
xchg
ins
pop
push
add
(bad)
js
ret
push
mov
lods
jmp
mov
adc
lock
xchg
je
fwait
in
rcl
not
ret
push
lahf
xlat
imul
sbb
addr16
dec
xor
je
sub
xor
aas
or
push
ins
push
not
cmps
adc
sub
stos
imul
test
push
mov
xchg
sbb
aaa
push
out
and
(bad)
jns
or
add
and
daa
les
xor
push
inc
cmp
movs
test
sbb
repnz
mov
sbb
cmp
fwait
jb
mov
mov
ins
inc
in
push
add
and
mov
inc
dec
jg
cmc
sub
jns
mov
shr
fnsave
inc
push
sbb
or
aas
inc
pop
adc
push
je
lahf
or
and
mov
dec
rep
xchg
xchg
mov
and
push
or
fnstcw
inc
(bad)
test
mov
adc
dec
pop
repz
push
stos
push
dec
scas
pop
rcl
sub
dec
inc
inc
xchg
mov
add
jno
or
movs
lahf
pusha
adc
jle
add
push
or
push
cmps
inc
add
sub
pop
shl
mov
push
jp
pop
mov
(bad)
mov
mov
inc
push
adc
hlt
ins
neg
jle
out
mov
push
push
and
aam
int3
xchg
mov
or
lock
pop
rcr
or
mov
in
inc
or
mov
xchg
out
inc
test
je
(bad)
mov
fnstcw
push
push
mov
sbb
mov
jl
loopne
jmp
mov
push
dec
push
push
cmps
dec
or
not
shr
sub
cwde
icebp
sbb
dec
mov
mov
add
not
popa
test
mov
pop
cmps
hlt
mov
sub
mov
mov
imul
jns
xor
inc
fst
and
push
mov
push
loop
dec
and
ja
push
mov
and
in
rol
ja
les
pop
cmp
mov
ja
or
sub
js
inc
push
push
jg
shl
push
xor
movntq
or
adc
inc
lahf
enter
adc
ds
(bad)
push
add
push
mov
inc
dec
dec
mov
sub
pop
cld
add
lods
and
push
push
(bad)
clc
ss
repnz
push
(bad)
adc
dec
ins
frstor
ins
mov
ja
add
jno
test
push
retf
enter
adc
xor
enter
or
sbb
push
mov
inc
enter
add
call
pop
xor
cdq
or
adc
push
neg
sbb
pop
adc
daa
pop
js
push
push
cmp
push
pop
adc
mov
call
pop
add
mov
inc
pushf
add
cmps
jne
adc
lock
and
xchg
add
xchg
add
jecxz
mov
test
jp
or
jmp
xchg
or
movlps
cs
fcomp
cwde
shl
inc
sub
mov
(bad)
or
xor
adc
xor
xor
xrelease
stos
test
sub
mov
ret
mov
cmp
lds
je
cwde
or
pop
dec
cli
jmp
addr16
and
mov
mov
ror
dec
idiv
and
inc
sbb
movs
(bad)
sub
test
sub
(bad)
jmp
xchg
xchg
or
xor
imul
sbb
add
xor
sbb
and
int
movs
jl
clc
mov
cli
mov
or
xchg
mov
adc
inc
call
arpl
repz
ins
mov
push
and
or
jmp
pop
xor
cmp
or
or
and
in
js
mov
jl
mov
push
fdiv
push
and
outs
jo
jo
jne
and
lods
add
or
shr
mov
and
test
test
movs
lods
sub
inc
or
es
or
idiv
test
push
(bad)
in
daa
jl
adc
push
js
ss
push
mov
inc
lahf
pop
std
pop
sbb
test
je
das
sti
sub
imul
icebp
test
push
jae
mov
adc
and
dec
mov
sub
sub
dec
xor
dec
mov
and
pop
fwait
push
push
push
scas
fs
mov
jmp
sbb
sub
inc
repz
sbb
adc
mov
cs
xchg
cmp
or
dec
loopne
das
jns
or
sub
clc
clc
mov
add
xchg
inc
test
adc
or
or
in
mov
sub
dec
push
xor
jae
out
jns
xor
inc
sub
xor
cvtdq2ps
call
adc
aad
inc
sub
shl
fcom
push
cs
cwde
inc
dec
enter
in
xor
jl
out
ror
add
push
stc
inc
push
ds
add
jmp
dec
xor
inc
or
cmp
repnz
jne
dec
lock
stos
mov
or
xchg
cwde
add
dec
(bad)
sbb
xchg
xchg
xchg
xchg
pop
jge
ret
retf
xchg
in
stc
daa
dec
xchg
xchg
xchg
xchg
jb
mov
retf
add
retf
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
das
push
jp
xchg
retf
xchg
xchg
shl
cld
es
xchg
xchg
xchg
dec
jno
mov
loopne
std
sub
xchg
xchg
jbe
ret
xchg
xchg
retf
or
cli
inc
pop
pop
or
push
stos
adc
adc
(bad)
jle
xlat
dec
mov
xchg
outs
dec
(bad)
and
xor
(bad)
mov
mov
and
jmp
popf
nop
push
cmps
pusha
adc
les
dec
lock
retf
push
pusha
add
inc
sub
inc
cmp
mov
xchg
sbb
shl
inc
and
pop
or
adc
pusha
mov
sbb
rcl
mov
lods
mov
adc
pusha
sbb
add
or
push
je
stos
push
sub
adc
icebp
jg
add
hlt
and
add
xor
add
jmp
nop
adc
and
xchg
scas
inc
repnz
stos
dec
inc
lock
sbb
lock
dec
mov
or
and
(bad)
icebp
je
fmul
enter
cmp
and
and
fild
arpl
and
inc
xchg
icebp
fnclex
xor
sti
jne
or
iret
fisttp
push
lods
mov
fs
in
cmp
enter
mov
test
sub
or
out
movzx
mov
addr16
add
mov
sbb
cmp
loopne
pop
sbb
xor
jecxz
adc
jmp
je
shl
or
mov
push
cmp
mov
rcl
sub
push
fidiv
sub
data16
adc
js
setg
(bad)
xor
inc
mov
sub
adc
clc
dec
and
inc
cmp
add
sub
shl
pop
adc
(bad)
jl
fwait
sub
shl
mov
xor
mov
pop
xor
test
lock
mov
mov
cld
aad
or
add
and
xchg
rcl
inc
scas
pop
add
ret
cmps
and
xchg
dec
add
add
dec
fsubr
mov
and
loop
inc
dec
or
popa
add
xor
xlat
jbe
popa
test
push
fstp
and
jno
(bad)
(bad)
push
sub
pop
or
(bad)
mov
bound
setg
inc
(bad)
clc
jo
push
jg
jl
push
in
je
adc
hlt
mul
or
or
pop
js
dec
inc
lods
adc
mov
cmp
jmp
cmp
aam
dec
inc
aad
repz
mov
or
xor
nop
xchg
cli
rol
push
lea
sbb
aaa
ds
sub
lds
pop
inc
movs
inc
xor
dec
pop
sbb
aas
push
add
jmp
sub
push
add
xchg
lods
sbb
mov
das
or
dec
inc
mov
dec
les
sub
call
push
add
test
or
shl
icebp
scas
pop
ret
push
imul
fmul
(bad)
and
or
loop
add
leave
fwait
push
test
jno
and
pop
inc
ins
popf
pop
or
sub
test
or
pop
pushf
movs
fs
add
dec
pushf
push
sbb
xor
sbb
dec
inc
imul
ja
outs
lahf
cmp
cvtdq2ps
push
rol
nop
cs
inc
(bad)
in
lock
in
push
cmp
push
inc
xchg
(bad)
imul
push
inc
les
inc
mov
nop
lock
pop
enter
cmp
rol
bound
pop
das
(bad)
mov
jo
xchg
test
mov
or
sbb
or
cmps
jne
or
adc
fsub
inc
jb
mov
xchg
lds
mov
cmp
sbb
adc
push
out
shl
cmp
cmp
adc
fcomp
test
sbb
adc
cmps
lock
lock
or
xor
(bad)
pop
lock
sub
push
test
dec
imul
inc
mov
sti
pop
xor
pop
inc
mov
shl
loopne
test
scas
mov
add
fimul
and
sbb
lock
pop
adc
es
adc
nop
call
pop
je
push
jb
mov
pusha
pop
addps
nop
loop
mov
ins
pop
sub
add
cmp
jne
and
pop
jmp
push
mov
cmps
xor
sub
inc
cli
jl
je
or
outs
neg
fnstcw
inc
adc
inc
mov
adc
scas
mov
outs
push
outs
jb
fidivr
adc
mov
popa
jo
(bad)
clc
das
imul
imul
xor
ror
or
sub
scas
(bad)
ins
ins
pop
movs
test
cmps
push
adc
add
push
inc
add
push
adc
(bad)
dec
jns
data16
sbb
imul
or
std
and
stc
lea
inc
outs
outs
je
sbb
lea
mov
iret
or
in
push
adc
or
or
inc
jmp
jg
sbb
sbb
and
xor
outs
add
sbb
pop
jmp
aam
fcom
sbb
push
sbb
dec
dec
sub
inc
cmp
cdq
pop
sub
jl
xchg
jnp
jno
push
inc
mov
leave
in
lds
in
adc
cmp
ror
stc
mov
sub
xchg
xchg
pmulhuw
inc
sbb
jnp
sbb
and
dec
mov
repz
add
pop
cdq
hlt
dec
and
sbb
xor
dec
cld
inc
jmp
inc
loopne
mov
lods
fwait
jo
jl
ss
inc
cmp
or
sub
inc
aas
and
jns
mov
nop
and
push
adc
sub
sbb
inc
add
dec
adc
fidiv
push
int
pusha
out
mov
aaa
pop
js
mov
adc
ja
dec
dec
popa
mov
leave
fld
or
hlt
inc
pop
inc
pop
test
sub
or
or
add
les
inc
imul
pop
lods
mov
and
dec
mov
leave
test
cmp
ret
ins
xor
lea
dec
inc
add
jns
dec
cmp
dec
dec
or
add
push
(bad)
lea
sub
xor
mov
push
pop
icebp
xchg
or
mov
sub
mov
test
mov
ret
fidiv
pop
retf
aam
cmp
imul
push
rcl
or
cmc
sbb
test
xor
mov
stc
sub
(bad)
cli
push
retf
mov
push
or
adc
jge
mov
pusha
pmuludq
or
or
add
fmul
loope
xor
xor
call
push
adc
imul
das
add
adc
dec
or
inc
pop
outs
dec
or
lods
sbb
inc
push
popa
and
push
or
imul
in
fild
mov
push
imul
es
adc
cs
aad
push
cdq
or
imul
sub
and
and
dec
dec
jae
nop
sbb
int
scas
add
pop
test
sbb
jo
inc
(bad)
out
addr16
mov
pusha
hlt
adc
inc
bound
adc
or
xor
inc
mov
ret
adc
sbb
or
push
ss
push
imul
stc
cmp
or
add
stos
mov
aam
ja
sub
(bad)
call
ds
das
inc
pop
and
sbb
pop
inc
repnz
sub
pop
and
add
inc
(bad)
mov
and
or
popa
cmp
pop
or
jo
or
adc
mov
push
sahf
pop
scas
adc
push
push
mov
out
add
bound
mov
ins
mov
pusha
mov
inc
mov
xchg
(bad)
loopne
and
inc
add
sub
repnz
and
or
sub
push
nop
push
pop
cli
sbb
or
outs
test
inc
push
das
pop
mov
xchg
fiadd
rol
or
mov
push
test
sti
mov
pusha
push
add
push
ins
inc
and
sub
iret
std
jae
cmp
add
loop
jle
lock
sub
push
sbb
xchg
aas
sub
retf
or
loopne
nop
std
dec
in
push
or
xor
sbb
outs
and
dec
fild
push
sub
adc
adc
leave
les
stc
jne
call
push
push
lock
mov
pop
call
mov
cmp
and
mov
mov
cli
retf
std
cld
and
scas
and
das
cmp
jle
mov
and
sti
push
mov
(bad)
fistp
inc
outs
scas
adc
movlps
mov
loopne
sti
add
or
xlat
repnz
aad
pop
adc
test
add
loopne
and
pop
scas
and
mov
inc
out
add
aas
jno
dec
sub
push
sbb
push
in
mov
(bad)
pop
push
test
or
loopne
cld
jmp
pushf
pop
dec
and
in
(bad)
ret
jge
(bad)
jnp
pop
and
mov
pop
adc
das
xor
or
cmp
ja
js
or
sbb
add
jns
dec
jmp
(bad)
out
add
adc
adc
push
sbb
jle
cmp
shr
add
pusha
bound
or
lods
xchg
div
or
add
and
fdiv
cwde
mov
and
or
ret
fwait
popa
popf
add
jo
es
add
inc
sbb
stc
and
and
push
sub
mov
push
fistp
pop
loop
sahf
cmc
push
cmp
jns
mov
test
add
add
add
add
fadd
retf
add
jbe
mov
(bad)
pop
or
imul
dec
scas
push
test
inc
push
(bad)
inc
sub
icebp
(bad)
and
adc
mov
jmp
adc
pop
adc
inc
cmp
outs
and
sbb
and
or
mov
clc
add
inc
xor
nop
js
or
ficom
add
test
inc
push
mov
and
(bad)
inc
jge
jne
cmp
cld
adc
pop
std
lock
mov
cld
test
outs
iret
cmp
mov
test
mov
bound
scas
adc
in
inc
fcomp
popf
es
and
mov
adc
pop
jge
inc
adc
and
into
adc
push
aad
call
test
adc
mov
push
inc
imul
or
push
pop
sbb
nop
xor
jno
or
shl
fdivr
push
or
mov
pop
es
push
inc
(bad)
aad
mov
xchg
call
xchg
aam
sbb
xor
adc
xlat
adc
pop
jmp
push
mov
mov
push
mov
jns
test
sub
push
js
jo
sbb
dec
jge
lock
push
cmp
pop
repz
push
inc
scas
dec
jmp
or
xchg
mov
dec
inc
movs
inc
pushf
mov
stos
enter
leave
adc
call
cmp
mov
mov
rcr
and
lea
sbb
or
sub
sbb
and
dec
add
inc
test
mov
sbb
and
sbb
jle
dec
aas
mov
mov
add
loopne
vmwrite
inc
dec
and
loopne
mov
xchg
mov
add
or
mov
std
aas
adc
push
test
adc
(bad)
dec
movs
jl
jle
adc
loope
lock
loope
addr16
push
dec
aas
pop
icebp
sbb
pop
je
sbb
push
or
clc
xor
jbe
add
sbb
test
fldcw
add
pop
lea
sub
retf
ss
ja
inc
mov
add
or
sub
cmp
in
fisubr
les
ret
fadd
(bad)
ins
jae
inc
nop
and
push
cdq
(bad)
fcom
adc
mov
or
or
adc
test
add
repz
ja
in
dec
mov
jge
push
or
or
outs
jmp
out
sbb
mov
call
nop
jnp
test
cmp
and
mov
ins
movs
or
add
push
inc
push
ss
xor
push
dec
call
or
rol
or
fimul
lods
leave
adc
ins
adc
fimul
mov
jmp
mov
cmp
mov
aam
push
mov
or
and
(bad)
fmul
add
fstp
dec
popf
cli
adc
aas
ins
adc
add
shr
loop
outs
adc
bound
fstp
sub
lods
pop
jns
mov
inc
jbe
out
(bad)
stc
dec
xlat
aam
xchg
xchg
adc
or
loopne
stc
daa
inc
add
push
mov
push
add
in
popa
outs
scas
out
mov
dec
je
adc
sbb
pop
add
in
loopne
(bad)
mov
in
rol
fs
daa
sar
fcmovne
jbe
fsub
mov
inc
(bad)
cmps
cmp
hlt
in
enter
mov
shr
jmp
push
fist
punpckldq
lock
or
cmp
fimul
(bad)
popf
and
test
ins
and
sub
fcomp
mov
cli
call
push
dec
jne
xor
jecxz
add
push
test
(bad)
sub
aam
add
aam
mov
inc
cmps
and
mov
dec
jnp
or
push
arpl
call
bound
iret
pop
pop
scas
xchg
cmp
pop
dec
mov
sar
fmul
shr
sub
add
daa
push
jecxz
pop
lods
fstp
mov
inc
inc
pop
test
ins
jo
pop
jnp
jmp
sub
add
push
mov
mov
cwde
int3
jg
dec
jecxz
push
inc
inc
push
mov
jns
stc
dec
add
jecxz
mov
sub
mov
inc
fwait
xor
jl
out
or
or
pop
enter
mov
push
rcl
enter
rcl
popf
dec
cmp
pop
mov
xchg
xchg
popa
ins
enter
xor
add
add
les
add
lds
or
add
mov
setg
in
sbb
or
sub
and
rcr
lock
inc
icebp
rcl
lods
rcr
pmullw
cld
sub
inc
inc
jle
sub
ins
add
call
xchg
sbb
xor
push
and
(bad)
and
bound
xchg
jg
sbb
adc
and
ror
adc
and
not
adc
sub
adc
sbb
nop
pop
test
push
(bad)
aam
adc
adc
inc
sbb
enter
push
mov
add
sbb
fsubp
dec
and
mov
dec
and
or
pop
jb
dec
pop
sar
or
xchg
mov
dec
test
or
pop
xchg
aas
and
jb
pop
and
daa
push
xor
enter
sub
in
shr
in
fisttp
add
das
inc
ins
fcom
dec
adc
mov
xor
add
dec
xor
sub
xchg
pop
and
out
adc
push
xchg
xchg
xchg
xchg
sub
sbb
xchg
xchg
xchg
movs
(bad)
call
xchg
xchg
ss
and
push
das
ret
or
inc
mov
or
xor
rol
mov
add
xor
inc
jecxz
out
es
push
outs
push
jbe
ret
test
out
cwde
dec
ja
dec
inc
mov
mov
loope
mov
or
in
mov
inc
cmps
sbb
add
data16
inc
jecxz
jns
ja
ins
add
addr16
jl
sbb
daa
add
jge
iret
mov
fisub
sub
mov
adc
test
dec
movs
cmps
mov
ins
call
pop
aad
xchg
add
sbb
imul
xchg
loope
fwait
add
mov
sbb
fisttp
xor
add
aas
add
std
xor
or
test
push
fdiv
mov
enter
xor
or
cmp
mov
inc
mov
test
loopne
cmp
sub
dec
je
aam
dec
fisub
sub
xchg
push
inc
nop
pop
(bad)
cld
push
pop
jge
xchg
inc
push
clc
sahf
dec
loopne
mov
cmp
xor
les
sbb
test
push
out
xor
call
push
mov
inc
fdivr
pop
inc
es
popf
push
jg
imul
fadd
inc
inc
or
ret
lock
sahf
cs
push
xchg
js
js
xchg
inc
and
and
dec
shr
add
ds
(bad)
scas
iret
call
jne
shl
dec
push
dec
lds
loopne
add
pop
fstp
ret
das
sub
dec
add
and
(bad)
adc
xchg
mov
pop
cmp
xchg
adc
inc
popa
xor
out
dec
jp
dec
fst
mov
mov
add
push
adc
or
xor
xchg
jle
jnp
push
add
push
cmp
xor
adc
mov
test
iret
repz
clc
or
ss
mov
push
sub
outs
and
stos
mov
adc
dec
test
add
ds
mov
stc
jmp
mov
les
ss
jne
push
dec
in
lahf
bound
in
push
push
adc
dec
jne
cmp
xor
mov
das
push
push
push
cmp
inc
sub
mov
dec
mov
hlt
pop
inc
scas
or
fld
shl
push
scas
adc
in
adc
push
fwait
add
jns
xchg
sti
mov
retf
or
lock
int3
mov
ins
pop
push
xchg
fst
xlat
in
in
pop
add
leave
and
test
call
pop
jb
cmp
js
pop
pop
add
push
add
sbb
xchg
sbb
movs
add
pop
dec
es
imul
enter
push
mov
inc
aas
cs
or
push
jae
jno
fdivr
(bad)
in
lods
push
fmul
dec
hlt
retf
pusha
mov
imul
xchg
adc
dec
mov
daa
inc
leave
mov
and
mov
jae
and
test
add
sub
imul
xchg
fisttp
mov
add
sub
xor
jo
jmp
sub
push
ror
test
stos
adc
add
xchg
out
inc
sub
(bad)
fadd
dec
push
repnz
lock
fdivr
add
dec
mov
(bad)
test
das
xor
push
adc
mov
test
push
xor
mov
and
and
and
mov
push
xchg
push
sbb
adc
repz
pop
je
call
xor
inc
ret
add
pop
lods
call
rcl
add
iret
pop
mov
adc
pop
rcr
xchg
and
js
adc
(bad)
(bad)
jge
(bad)
loope
pop
inc
inc
dec
mov
jp
fs
movs
mov
inc
cmp
cmp
jp
cmp
inc
sahf
jbe
dec
mov
adc
aas
pop
push
mov
rol
nop
cmps
push
lock
or
arpl
dec
dec
clc
clc
sub
nop
inc
sbb
dec
cs
inc
cmps
xchg
stos
in
inc
inc
nop
mov
dec
ins
add
mov
inc
movs
js
nop
or
push
js
fimul
sub
dec
js
inc
adc
fst
repnz
dec
add
xchg
sar
xor
dec
dec
and
and
dec
dec
add
pop
dec
adc
nop
aaa
and
inc
call
push
dec
daa
xor
nop
add
sub
mov
fst
cmp
mov
cmp
or
cmp
js
pop
mov
xor
cdq
mov
loop
cmp
push
mov
loope
mov
cmp
inc
ins
mov
adc
aaa
pusha
test
int
adc
xor
scas
fmul
aas
dec
ja
mov
inc
mov
call
pop
inc
xor
movs
retf
mov
out
adc
pop
loope
shl
add
dec
and
and
and
push
or
sbb
and
add
cmps
dec
pushf
inc
mov
dec
mov
inc
or
push
pop
movs
popf
out
fsub
imul
adc
jnp
sbb
inc
mov
mov
push
push
dec
enter
pop
faddp
in
fadd
call
hlt
loop
inc
sub
inc
xchg
imul
hlt
xchg
inc
mov
jmp
mov
xchg
pop
mov
and
inc
jmp
xor
pop
pop
fnsave
inc
xor
push
inc
les
das
inc
or
pop
push
mov
xchg
xchg
int3
cmp
adc
xchg
repnz
nop
mov
fprem
ds
pop
clc
dec
inc
pop
and
push
lahf
jl
(bad)
and
xchg
mov
dec
adc
icebp
xchg
adc
inc
pop
xchg
sbb
or
mov
jae
imul
ins
popa
call
push
inc
sbb
rol
ret
fxtract
cmps
imul
mov
outs
cmp
mov
and
cmp
jg
cmp
mov
je
idiv
pop
jb
ror
repnz
(bad)
lahf
push
pop
pusha
push
push
adc
stc
frstor
fwait
push
and
imul
je
ret
sti
fstp
or
clc
lea
mov
push
add
dec
xor
pop
or
sub
push
xchg
pop
and
adc
fadd
or
xchg
sbb
and
ror
sub
out
mov
or
xchg
xor
pop
push
(bad)
push
mov
mov
pop
jo
inc
jae
xchg
mul
fcomp
nop
jo
icebp
mov
inc
sub
adc
enter
push
jp
movs
cmc
adc
fild
xchg
dec
das
lods
mov
mov
inc
cld
popa
dec
dec
push
repz
push
xchg
repz
mov
xlat
push
sti
(bad)
pop
add
mov
(bad)
push
add
daa
sbb
sub
adc
or
int3
pop
jmp
xor
mov
leave
inc
ins
js
inc
stos
sub
mov
out
pop
popa
jbe
test
cdq
ror
jnp
inc
push
jne
and
std
sbb
jle
push
imul
fcom
pop
and
cdq
and
cmc
or
leave
dec
cmp
sti
out
mov
add
ins
mov
outs
sub
cmc
call
fstp
outs
fdivr
mov
mov
bound
ror
nop
cli
es
das
loop
lock
cdq
inc
xor
jl
stc
pushf
jge
add
jmp
cmp
jae
les
sahf
ins
movs
jne
xchg
xlat
sub
sub
and
(bad)
xor
mov
dec
jne
push
dec
lds
addr16
rol
dec
fcmovne
mov
sbb
movlps
sbb
dec
cmp
outs
and
jno
or
fsubr
sub
mov
and
xchg
jo
jg
movs
dec
and
or
push
scas
cmp
jo
sar
cmps
leave
sti
xchg
lock
ror
sbb
shr
ret
movs
sbb
pop
cmp
dec
movs
add
cmp
cmp
pop
rcr
rcl
dec
mov
rol
xchg
jl
mov
pop
popa
rcl
and
or
pop
loop
adc
sahf
inc
push
inc
cmp
mov
sub
jmp
popf
jg
aam
test
jl
adc
jl
mov
hlt
mov
ins
push
ret
in
cmc
call
and
dec
ins
inc
jbe
es
pop
inc
sub
or
mov
xchg
cmps
inc
repnz
and
inc
mov
xor
pop
out
push
add
sub
jae
adc
mov
push
mov
xor
cmp
arpl
sub
inc
loope
add
mov
add
pop
add
pop
xor
es
(bad)
xlat
jmp
(bad)
adc
aas
popf
ss
inc
and
xchg
push
push
dec
sbb
inc
vpmacsdd
fiadd
sbb
retf
dec
jne
js
sub
mov
pop
adc
scas
lea
movs
out
cmp
adc
mov
xor
adc
dec
push
jecxz
pop
xchg
mov
or
push
push
push
push
in
cmp
push
jp
pushf
xchg
push
mov
jne
popf
inc
ds
ret
jmp
or
or
and
xchg
scas
cmp
and
mov
mov
scas
call
inc
rcl
pop
dec
dec
push
or
scas
or
or
jmp
dec
push
rcr
xlat
retf
add
cmps
retf
or
shl
ror
mov
movs
sbb
or
pushw
clc
arpl
and
pop
jle
add
test
sub
imul
add
mov
out
jae
adc
fdiv
mov
gs
jmp
xchg
jmp
fiadd
or
aam
test
pop
inc
sbb
call
enter
xchg
pusha
xchg
in
aad
out
repnz
xor
cdq
add
push
and
and
and
xor
sbb
fucom
repnz
fst
cmp
pop
adc
outs
fsubrp
add
cmp
or
add
gs
jg
movs
jge
repnz
inc
sahf
test
adc
add
je
and
lods
scas
sub
jp
lahf
add
or
and
mov
int3
pop
pop
lahf
push
lds
repnz
fistp
je
sbb
(bad)
cmp
push
pop
test
adc
mov
xchg
data16
stc
push
adc
lock
hlt
leave
clc
or
sub
push
inc
mov
sbb
inc
cld
xchg
popf
pop
xchg
sbb
das
clc
adc
push
inc
dec
inc
clc
ss
rol
das
push
inc
lods
inc
(bad)
mov
cld
push
call
(bad)
jnp
and
lock
repnz
sbb
das
out
mov
(bad)
xor
pop
sub
xchg
imul
jne
bound
adc
jne
imul
xor
fadd
rol
jp
fidiv
adc
jp
adc
dec
xchg
lea
adc
jne
dec
stos
cmp
(bad)
mov
(bad)
lahf
sub
inc
dec
mov
dec
repz
lock
sub
pop
mov
and
loopne
and
sbb
push
mov
mov
popf
(bad)
sar
or
xchg
jecxz
push
loopne
in
inc
xlat
mov
imul
stc
add
jnp
xchg
jl
or
or
scas
pop
add
pcmpeqw
xchg
push
push
mov
sahf
lods
inc
mov
push
sbb
neg
mov
add
or
test
jp
mov
push
nop
push
je
arpl
jg
sbb
cmps
or
fldpi
jns
dec
push
sbb
jo
sbb
pop
push
pusha
push
jne
icebp
cmc
cmp
and
cld
mov
out
mov
sub
sub
jne
mov
lods
dec
fdiv
jne
mov
push
pop
cwde
push
inc
sub
jmp
arpl
movs
imul
in
jl
xor
int
cmps
or
lods
push
mov
xchg
popf
xchg
sub
cdq
xchg
or
inc
ins
pop
retf
sbb
inc
sub
dec
mov
pop
popa
stos
or
mov
outs
mov
adc
ss
jl
out
mov
push
or
mov
push
and
int3
push
mov
inc
sar
sub
add
mov
ret
mov
push
lahf
ins
pop
mov
push
das
jo
into
imul
jo
int3
jp
sti
push
cmp
mov
dec
and
pop
lar
cmp
aam
pushf
es
push
inc
bound
rol
and
mov
xor
or
out
ins
(bad)
mov
and
and
lds
iret
pop
stc
adc
sub
in
sub
lahf
cwde
push
adc
aaa
jo
mov
add
inc
inc
dec
mov
jno
pusha
mov
inc
or
lods
pop
setne
test
leave
add
or
dec
sbb
loop
cld
test
test
mov
scas
dec
add
scas
jae
or
adc
lahf
mov
add
pop
pop
adc
pop
(bad)
and
not
cmp
mov
mov
dec
pop
and
adc
or
sbb
and
pop
inc
dec
cmp
xor
jno
dec
or
iret
pop
xchg
jl
or
inc
add
shl
mov
cwde
shl
xlat
ins
call
mov
pop
inc
test
and
call
sbb
lea
fldcw
stos
xchg
das
sbb
fs
jnp
pop
and
pushf
xchg
push
xchg
add
in
push
mov
por
iret
push
add
pop
push
loopne
inc
add
add
fs
cmp
sbb
add
dec
push
cmp
push
pop
scas
sub
add
pusha
out
inc
mov
imul
and
jbe
pop
push
(bad)
jp
cmc
mov
scas
test
rcr
sbb
out
fs
sar
dec
in
sub
(bad)
imul
pop
cld
cmp
sahf
aaa
jl
adc
adc
jmp
mov
les
popa
or
ss
dec
popf
les
mov
pushf
fs
ins
dec
mov
push
fstp
aaa
and
mov
add
pop
add
add
and
add
inc
enter
pusha
inc
in
inc
dec
or
add
xor
xor
jae
mov
retw
pop
sbb
call
cmp
or
pop
adc
(bad)
lahf
inc
out
ret
cdq
sbb
push
dec
popa
mov
loopne
mov
pop
dec
or
and
add
loope
push
or
push
cmp
inc
je
pop
cmp
out
test
test
cmc
cwde
ret
movs
xor
cld
inc
movs
pop
xor
push
push
imul
inc
pop
cs
sub
pop
pusha
add
imul
arpl
lea
push
stos
retf
mov
movs
rcl
enter
mov
xor
pop
movs
push
dec
loopne
add
mov
mov
cmp
loope
sbb
adc
adc
jle
in
test
jne
and
xchg
aam
xor
jnp
mov
or
sub
pop
test
or
add
push
add
pop
pop
mov
push
mov
push
add
dec
add
cwde
pop
mov
push
push
out
jmp
sbb
mov
call
pop
clc
addr16
add
pop
pusha
sub
adc
xor
push
ja
push
jecxz
popa
mov
sbb
push
call
jne
or
jnp
pushf
xor
xor
lock
mov
ret
fild
std
add
sub
adc
dec
mov
sar
outs
pop
or
pop
add
jae
push
mov
dec
sub
sub
xchg
cmc
pop
(bad)
ins
cs
add
fwait
cwde
adc
jns
dec
stos
push
bound
cmova
ja
pop
push
push
aaa
or
cmp
popa
adc
cwde
dec
arpl
mov
inc
mov
pusha
arpl
mov
mov
xchg
push
lods
sub
add
mov
inc
mov
fnstsw
shl
sbb
inc
mov
je
loope
sub
pop
shl
sub
neg
arpl
ins
add
ret
pusha
ret
inc
or
loope
mov
or
sub
push
sub
rol
mov
retf
js
in
in
sub
dec
xchg
add
pop
mov
push
cmp
cs
push
mov
push
pop
push
dec
inc
sub
xor
popf
dec
cs
inc
enter
fld
pop
cmp
inc
cmp
in
mov
in
(bad)
xchg
cmp
out
sub
xor
push
mov
mov
mov
push
pavgw
inc
pushf
mov
lods
mov
add
ret
mov
sar
adc
in
jbe
loop
gs
lock
pushf
paddusb
iret
test
cmps
inc
sahf
dec
inc
bnd
shr
nop
cld
movs
dec
add
mov
cmp
inc
ret
mov
cmps
cmp
dec
adc
mov
sbb
sub
scas
inc
repnz
and
and
inc
add
outs
loopne
jo
js
bound
adc
pop
mov
cli
pop
lock
or
xchg
test
imul
addr16
xchg
xor
sub
(bad)
mov
es
push
mov
les
sbb
pop
enter
sub
mov
xor
mul
loop
cwde
inc
int3
push
jns
jb
js
pushf
clc
xchg
out
pop
mov
push
push
sbb
gs
add
cmp
sub
nop
add
cmp
int3
mov
adc
sbb
mov
or
adc
inc
pusha
test
dec
pop
mov
sub
ret
mov
lds
rol
or
push
push
mov
adc
(bad)
push
mov
inc
ja
inc
popa
sub
addr16
mov
push
pop
xlat
push
cmps
cmp
and
mov
pop
xor
or
push
cmps
push
mov
pop
push
pop
pusha
inc
push
test
mov
stc
dec
outs
jne
pop
and
xchg
jb
add
add
add
mul
sub
adc
test
push
ins
bound
pop
or
enter
or
popa
jb
mov
or
enter
cmp
add
daa
or
pusha
add
(bad)
adc
mov
xchg
push
sti
inc
inc
jp
inc
and
add
inc
popf
in
sbb
imul
cdq
rcr
data16
shl
pop
inc
push
and
test
adc
out
xchg
gs
in
fiadd
push
jb
jno
dec
mov
dec
mov
popa
mov
stos
sub
sbb
jbe
fs
loopne
inc
xchg
push
add
fsubr
sar
lds
ins
adc
or
or
add
sub
add
out
add
pop
outs
add
out
or
mov
sbb
adc
lea
sub
neg
sub
mov
or
das
or
fst
inc
cwde
or
adc
lds
fcom
sub
call
outs
shl
jmp
dec
add
and
je
dec
scas
pop
jns
jo
inc
mov
sar
mov
in
push
sbb
mov
mov
nop
lods
dec
add
and
out
shl
adc
imul
push
or
push
dec
jo
nop
add
mov
addr16
emms
or
mov
sub
nop
fild
shl
mov
sub
push
js
xchg
add
nop
sub
jo
(bad)
retf
push
xor
mov
add
jecxz
imul
add
outs
sbb
inc
add
jnp
push
sbb
mov
and
cmps
ins
jo
add
inc
jp
add
inc
push
and
sbb
mov
pushf
inc
inc
mov
dec
dec
lock
addr16
dec
mov
cmp
jle
jo
or
mov
jno
push
add
repz
dec
je
jne
mov
fbld
push
loop
fchs
mov
mov
mov
push
nop
fmulp
or
ja
pushf
fs
data16
jl
push
ins
js
xchg
jo
rol
rol
adc
xor
xor
inc
xchg
nop
jne
xchg
cmp
fs
add
push
lods
(bad)
cmp
repnz
je
jns
das
cmp
mov
rcl
sbb
jecxz
fisttp
popa
fs
movs
ss
outs
mov
mov
call
and
dec
(bad)
sahf
xchg
push
mov
cld
scas
inc
hlt
or
hlt
sub
dec
add
add
push
pop
push
inc
xchg
and
adc
rcr
pop
dec
retf
cmp
inc
cmc
and
jne
fs
ins
dec
mul
fs
and
add
xchg
test
jb
sbb
or
inc
push
sbb
retw
inc
sub
aaa
inc
sbb
xchg
sbb
clc
fsub
outs
push
jne
xchg
inc
jae
aam
or
cmp
rcl
es
loope
or
sbb
pushf
cmps
cwde
adc
out
mov
retf
mov
jl
sub
adc
jne
mov
push
cmp
push
int3
dec
inc
and
push
jl
(bad)
xlat
(bad)
ja
adc
mov
push
push
outs
pop
cmps
das
shl
inc
pop
xor
mov
sub
call
cmpxchg
xchg
xchg
xchg
daa
xor
outs
pop
fst
jns
clc
ret
cmc
add
mov
call
shr
sar
push
sbb
ss
add
fld
lods
lods
in
in
pushf
ins
das
cmp
push
lds
pop
adc
sar
inc
add
mov
das
test
jp
cmp
pop
dec
xor
in
rol
push
xchg
pop
and
mov
inc
addr16
jb
dec
shl
pop
xchg
cwde
lock
inc
shr
ss
js
add
test
imul
or
leave
add
es
loop
ret
pop
jae
(bad)
adc
loop
and
or
or
sbb
dec
add
sbb
cld
ins
cmp
or
inc
adc
add
data16
jno
out
ret
scas
sub
cli
pop
fist
je
xor
lds
test
sub
push
inc
test
rcl
add
loope
popa
ins
adc
in
adc
ss
adc
pushf
jmp
in
ds
inc
add
test
and
pop
push
pushf
test
cmp
add
repnz
inc
adc
adc
dec
out
xor
(bad)
sar
jne
mov
and
popa
xor
dec
je
sub
movs
pop
jnp
ins
xor
mov
mov
adc
or
ins
(bad)
push
mov
shl
sbb
push
test
push
imul
cmps
inc
jp
dec
movs
add
adc
sbb
push
sbb
cmp
inc
gs
add
mov
lods
test
loope
loope
or
sub
cdq
outs
add
mov
out
add
mov
ror
adc
add
push
pop
jnp
in
std
xor
clc
into
inc
popa
mov
in
push
xchg
jbe
sub
or
add
inc
mov
or
mov
nop
dec
jl
fadd
or
(bad)
in
or
or
or
mov
mov
out
inc
sub
jl
xchg
xor
or
and
and
or
cmp
call
push
rol
je
push
lds
inc
push
dec
in
adc
pop
inc
(bad)
sar
mov
cmp
xor
int
adc
ret
adc
rcr
fdiv
push
in
das
inc
in
aam
adc
sbb
dec
xor
and
pop
adc
popa
xor
inc
sbb
adc
pop
cmp
push
mov
cwde
rcl
pop
rcr
xor
add
or
mov
xor
jle
pusha
or
stc
xor
add
and
clc
sbb
xor
xor
pop
jge
(bad)
xor
xor
push
jl
push
xor
xor
js
mov
cmp
jge
push
xor
add
push
enter
push
or
stc
dec
nop
push
out
movs
rol
fwait
pop
or
or
and
inc
aam
js
or
ja
mov
test
mov
push
and
(bad)
jle
mov
push
nop
pop
or
jle
test
call
arpl
push
sbb
cmp
int
mov
fldcw
enter
push
fidivr
sbb
dec
les
call
push
dec
fdiv
jle
(bad)
adc
dec
inc
call
cld
repnz
pop
cli
mov
shr
ret
ret
es
cmp
retf
rcr
cmp
inc
or
sub
bswap
adc
adc
sbb
outs
mov
or
xor
call
or
sub
mov
adc
les
inc
mov
sti
lea
or
(bad)
mov
mov
sbb
dec
mov
cmp
and
movs
out
pusha
push
lea
(bad)
or
enter
inc
test
xchg
push
imul
test
imul
dec
or
stc
inc
add
test
jmp
mov
pop
dec
cmp
sahf
ror
mov
scas
cmp
or
inc
retf
adc
jecxz
inc
imul
and
sbb
test
mov
mov
pop
add
xor
pop
and
(bad)
fdiv
sub
or
inc
aas
cmps
mov
or
sbb
gs
ins
xchg
sbb
inc
inc
xor
mov
fs
sbb
imul
sti
cmp
fadd
jl
adc
cmp
or
imul
enter
push
pop
sub
mov
and
cmp
and
fidiv
nop
in
or
mov
lahf
enter
fst
xor
bound
repz
leave
aam
push
ds
mov
sahf
outs
popf
pop
jge
(bad)
aam
call
in
jnp
in
neg
or
jmp
xor
repz
sbb
mov
fisttp
shr
mov
add
sbb
es
repnz
or
(bad)
or
push
xchg
test
das
out
shl
adc
enter
mov
push
or
mov
cmp
xor
adc
cmc
mov
cmp
and
mulps
or
mov
fidiv
nop
fadd
pop
jb
xchg
add
xor
and
sub
cli
xor
and
cdq
jo
add
push
add
sub
pop
not
push
mov
aam
push
mul
add
sbb
xchg
sub
shl
pop
fcmovnu
bound
pop
test
dec
push
sbb
add
sub
jnp
cmp
call
adc
sub
push
add
inc
xor
sub
les
add
add
or
pushf
or
xchg
xchg
out
scas
xchg
pop
mov
xchg
xchg
mov
adc
push
pop
mov
andps
cdq
pop
cmp
jo
mov
fs
xlat
jo
push
(bad)
mov
add
xlat
mov
xchg
arpl
ret
rcl
in
ins
cmps
sub
je
xor
adc
retf
in
outs
repz
pop
shr
cmps
lea
sub
cmps
aam
jns
popa
sbb
cmp
sbb
and
push
pop
ret
push
sbb
aad
dec
mov
fadd
lds
ror
js
or
rcr
mov
and
enter
movs
adc
inc
push
add
cs
xchg
aam
ja
mov
ror
imul
push
pop
lods
imul
popa
or
mov
or
push
or
inc
repz
mov
jnp
cdq
or
lds
repnz
rcl
mov
mov
in
in
add
loopne
je
lods
movs
in
inc
add
ret
pop
xchg
imul
or
js
mov
push
ss
xchg
(bad)
or
jmp
or
add
out
ja
imul
push
pushf
push
mov
xor
fmul
or
dec
mov
and
fisttp
test
push
jno
add
mov
test
mov
jo
pushf
popa
inc
sbb
jns
ins
inc
js
repnz
mov
(bad)
adc
out
pop
xchg
xchg
retf
fisttp
mov
retf
or
xor
retf
xchg
xchg
xchg
call
mov
xor
push
push
add
ins
inc
xor
rdtsc
or
imul
cmp
add
(bad)
movs
fsubrp
es
scas
push
aam
dec
lahf
and
out
sub
inc
adc
dec
add
ss
nop
btr
or
cmps
inc
pop
and
nop
arpl
add
adc
jo
rcl
imul
inc
repz
and
and
adc
push
loope
push
xchg
pop
xlat
add
cld
das
or
out
adc
xchg
xor
pop
xchg
sbb
or
add
sar
jg
loopne
fld
loop
sub
dec
pop
cdq
xchg
adc
pop
fs
iret
das
and
mov
xor
cdq
lods
ss
cld
cmp
xor
inc
sbb
mov
pop
adc
cmovle
push
or
mov
ja
call
inc
pop
lahf
add
dec
mov
adc
push
fcmovnb
jecxz
push
add
(bad)
cmp
inc
sar
sub
mov
(bad)
xchg
push
pop
push
add
jb
sub
inc
jmp
inc
push
mov
cmp
shr
inc
push
fwait
mov
adc
enter
add
adc
inc
add
sbb
adc
add
sbb
dec
or
ror
shl
sbb
loopne
(bad)
mov
sbb
add
das
inc
lea
aam
add
in
add
dec
xor
jecxz
jge
sbb
int3
in
leave
ins
push
jp
jb
dec
sub
or
or
test
push
inc
jge
rcl
mov
shr
mov
or
sar
mov
pop
cli
push
sbb
mov
mov
or
xor
sbb
mov
mov
ret
add
jl
cdq
jg
jmp
sub
mov
inc
arpl
imul
ret
pusha
mov
push
inc
inc
or
pusha
sub
cmp
jl
adc
inc
mov
aam
retf
or
push
fs
std
add
push
popf
mov
xchg
out
dec
sbb
daa
inc
add
sub
gs
sbb
mov
mov
add
pop
xor
fwait
push
xor
or
or
(bad)
xor
pop
inc
mov
or
sbb
out
ret
aam
aaa
mov
cmp
enter
and
or
in
loop
mov
push
test
cmp
rcr
jmp
xchg
mov
mov
scas
(bad)
mov
out
fcom
test
popa
call
dec
mov
sub
stos
sub
arpl
push
in
xchg
ds
shl
inc
pop
(bad)
icebp
in
fwait
adc
sti
jmp
inc
(bad)
sti
push
add
dec
(bad)
sub
sub
xchg
test
add
jo
dec
pop
push
mov
or
or
add
adc
xchg
xchg
push
cs
pusha
test
bound
stos
sbb
push
shl
aas
call
and
popa
fild
adc
xor
push
add
inc
ins
gs
add
inc
imul
jg
cmps
dec
dec
inc
or
lea
enter
or
xchg
loopne
adc
push
retf
mov
aad
ss
arpl
test
jmp
and
adc
enter
cmp
loope
pusha
das
add
jne
jle
outs
outs
xlat
cs
sub
cmp
push
(bad)
and
push
std
repnz
fnstsw
xchg
pop
xor
jmp
cmp
je
in
and
aaa
add
pop
rcr
inc
mov
in
in
fist
or
jne
jbe
shr
pop
dec
or
adc
lea
ds
les
pop
and
in
lods
sbb
xchg
daa
adc
(bad)
mov
test
in
sbb
cmp
and
or
pop
or
and
push
fs
dec
jmp
sahf
imul
inc
outs
cmp
ins
in
out
rcl
inc
imul
pop
xchg
retf
add
push
fisttp
cmp
je
cmp
mov
push
nop
(bad)
mov
and
dec
in
imul
cmp
pushf
and
fldenv
stos
or
aas
cmp
fbstp
add
push
addr16
push
rol
inc
pushf
add
push
paddusb
movs
xchg
aaa
push
xor
add
mov
les
mov
sub
clc
shl
ret
inc
int3
jb
sbb
lock
dec
mov
fimul
xchg
clc
sbb
and
(bad)
aas
js
sbb
xchg
sub
mov
xor
mov
pusha
jecxz
cmp
or
dec
nop
cmp
aas
cmp
sbb
aas
aam
mov
inc
mov
jne
sub
dec
jg
adc
xor
mov
mov
push
pop
repnz
addr16
rol
mov
push
ds
pop
sub
cmp
add
pop
fsub
outs
jo
xor
inc
inc
or
psubw
mov
pop
dec
js
pop
cmp
pop
sbb
shl
mov
rcl
fld
dec
push
push
repnz
xlat
sbb
mov
sub
sbb
add
jmp
fadd
test
jl
mov
jg
cmp
fild
pushf
mov
add
pop
sbb
ja
inc
cs
inc
push
data16
ret
mov
adc
sub
inc
dec
pop
jmp
fistp
not
mov
jne
mov
repnz
xor
fs
add
stos
jle
out
cmps
mov
aam
dec
cmp
inc
aas
add
pop
fdivr
jnp
mov
inc
fwait
es
jne
adc
gs
fld
lea
mov
cmp
test
jecxz
cmp
xor
ins
popa
cwde
scas
or
add
push
shl
bswap
out
cmp
aas
sbb
mov
pop
add
idiv
xchg
sub
inc
mov
pusha
push
and
or
adc
inc
and
cmc
aaa
mov
mov
call
inc
je
push
addr16
leave
cmps
xchg
out
mov
jne
or
xlat
rol
scas
cmps
xor
mov
sbb
outs
pop
adc
jbe
test
mov
push
cmp
dec
ja
in
repz
push
test
adc
loop
inc
cmp
mov
xor
mov
xchg
sahf
push
add
cdq
mov
ss
adc
cmp
cmp
jp
pop
or
push
ins
nop
data16
test
sbb
or
dec
add
cmp
sbb
clc
adc
fadd
mov
xchg
add
cmps
std
push
or
push
in
jmp
xlat
call
mov
call
imul
or
pop
dec
sti
pop
dec
inc
or
xchg
or
push
lea
dec
pop
jo
and
sub
push
int
(bad)
in
mov
adc
pop
pop
mov
jecxz
xor
mov
sti
aaa
sahf
fdivr
test
out
jecxz
xor
shl
cmp
xchg
push
test
mov
(bad)
cdq
mov
cmps
cmp
inc
ins
mov
push
and
adc
mov
fwait
inc
ret
xchg
mov
xor
sbb
push
mov
fstp
call
in
lea
add
jnp
mov
jnp
call
or
test
fbld
add
inc
jecxz
ins
out
dec
jl
sahf
pop
and
and
or
pop
test
dec
inc
jo
add
add
adc
mov
xchg
mov
and
push
fwait
sub
cmp
jo
daa
iret
imul
sti
fprem
mov
dec
nop
aam
and
add
inc
pop
mov
add
(bad)
adc
rcl
sub
clc
dec
mov
cmp
jae
mov
in
push
inc
or
jbe
sbb
push
ret
pop
mov
jl
cmp
jo
sub
popa
push
test
add
movs
jnp
or
mov
lods
sub
fisttp
sbb
out
push
push
push
pop
mov
adc
out
ss
popa
fisttp
mov
jecxz
inc
inc
push
or
fidivr
outs
cmps
xchg
(bad)
push
or
add
clc
dec
cs
inc
sub
and
ret
sub
jmp
ds
push
and
jbe
lods
push
add
push
hlt
xchg
push
test
je
gs
mov
popf
and
daa
inc
push
test
pop
(bad)
out
dec
or
pushf
loopne
sub
mov
and
and
add
leave
gs
push
rcl
adc
clc
sti
or
xchg
push
addr16
cmp
and
inc
cmc
mov
xor
push
cld
mov
push
repz
enter
and
sub
test
jne
fiadd
fwait
mov
pop
icebp
mov
mov
push
test
xchg
outs
push
sub
frstor
or
cmp
mov
mov
leave
push
test
inc
sub
outs
adc
js
or
les
push
jb
and
and
mov
sub
dec
lock
xchg
or
pop
inc
je
les
test
mov
push
test
push
cmp
inc
sub
jb
and
xlat
mov
push
das
pop
test
add
(bad)
push
xor
add
inc
jns
xor
retf
inc
mov
inc
int
inc
pop
jns
rcr
mov
fsubr
jnp
mov
inc
xchg
jle
push
adc
mov
mov
out
pop
call
call
daa
dec
jmp
imul
dec
leave
cmps
mov
xchg
xchg
mov
jno
cwde
das
dec
mov
adc
nop
mov
inc
mov
or
jge
dec
test
inc
sub
xchg
iret
push
jg
dec
mov
cmovo
inc
mov
jne
nop
mov
fsubr
mov
push
imul
setne
push
(bad)
fiadd
lea
in
cmps
mov
lods
xor
lds
push
call
dec
mov
and
push
lock
pop
imul
outs
stc
cmps
adc
mov
sbb
pop
push
adc
(bad)
imul
cmp
sbb
or
and
pop
push
sbb
ret
xor
cmps
cmc
fdiv
push
xor
in
or
out
js
iret
add
add
xor
cmp
fadd
ins
dec
clc
add
sbb
push
push
jge
sub
sub
push
lea
lea
dec
adc
dec
sub
push
ficom
aam
je
aam
imul
xor
mov
inc
inc
in
xor
add
xor
leave
push
inc
call
jmp
sub
or
sub
add
sbb
and
push
mov
adc
out
jo
mov
and
nop
ror
add
fiadd
or
stos
popa
cmp
rcl
push
mov
int3
je
add
mov
jmp
and
sub
fmul
shl
sub
mov
dec
or
sbb
inc
iret
add
cs
adc
lock
sub
ins
mov
sub
jge
js
movs
push
mov
adc
loope
cmps
push
aaa
cmp
dec
mov
js
or
in
clc
jl
xor
gs
push
imul
xchg
test
ror
stos
into
dec
adc
clc
ret
data16
dec
ss
pmulhuw
sbb
jns
push
mov
in
(bad)
in
retf
std
es
bnd
sub
push
add
push
cmp
dec
mov
imul
call
xor
div
dec
cmp
lds
push
loop
xor
lahf
jne
sbb
(bad)
jmp
test
nop
or
ret
ins
outs
or
adc
adc
inc
push
adc
mov
adc
push
test
adc
pop
lods
jp
dec
and
cmp
sub
lods
test
jl
jo
add
and
add
(bad)
jne
in
and
cmps
movs
pop
rcr
(bad)
lahf
movs
dec
dec
lea
add
cmp
add
push
dec
add
daa
push
lods
xchg
pop
add
rol
push
fisttp
push
ror
adc
add
adc
mov
outs
sub
arpl
dec
add
loope
cmps
ret
aam
lahf
lock
adc
mov
or
leave
sub
add
call
fiadd
sbb
xor
sub
push
fnstsw
mov
push
std
add
test
aas
xchg
add
iret
pusha
dec
sbb
inc
sti
or
push
sar
clc
and
add
or
ror
arpl
fwait
lods
pop
gs
int
retf
addr16
es
mov
mov
xor
fcom
xchg
loopne
loope
dec
fimul
int
movd
cdq
in
pop
les
dec
mov
test
(bad)
jbe
sub
cli
aad
mov
pusha
jmp
xchg
adc
into
pop
rcl
push
add
mov
push
or
gs
clc
sub
add
dec
and
push
and
rol
inc
add
jmp
add
sub
ret
push
and
xchg
hlt
jmp
fldenv
jmp
xchg
or
mov
test
movs
int
cld
stc
ret
mov
psubusw
mov
pop
nop
lahf
xor
stos
mov
sbb
mov
xor
and
xchg
and
loop
jns
or
jno
dec
aas
adc
cdq
imul
adc
or
sub
push
sbb
je
add
jb
or
popf
sbb
sbb
xor
test
pop
pop
inc
in
sub
push
mov
and
jne
inc
pop
movs
lods
mov
test
test
pop
inc
imul
sbb
fdivr
test
push
jo
mov
push
(bad)
(bad)
dec
push
and
out
int
add
popf
mov
and
add
dec
rcl
mov
dec
add
in
in
pop
pusha
inc
cdq
jo
dec
adc
(bad)
mov
pusha
in
jno
ret
int
popa
test
push
fcomp
test
add
mov
dec
add
inc
cmp
mov
out
leave
cld
ror
cmps
jecxz
retf
and
paddsb
dec
dec
mov
push
sbb
inc
loopne
in
dec
push
or
pop
outs
dec
(bad)
jo
cmp
push
push
inc
adc
(bad)
adc
sbb
xchg
ins
lahf
test
xchg
lods
push
lods
dec
fldcw
retf
ficomp
dec
aas
push
sbb
lods
mov
mov
jbe
fadd
adc
pop
in
(bad)
in
data16
sub
xor
pop
mov
inc
push
xor
add
call
rol
xchg
(bad)
cmps
inc
xor
or
out
pop
jmp
outs
ret
mov
jp
dec
retw
cmc
sub
in
and
dec
cmp
add
push
pop
add
xor
(bad)
retf
in
iret
in
mov
inc
in
into
in
shl
and
retf
mov
xchg
jmp
sub
mov
hlt
or
test
push
sbb
out
pop
or
leave
loopne
sub
push
mov
or
mov
ds
hlt
mov
psraw
ror
cmps
sbb
movs
loopne
push
add
loope
jge
dec
dec
clc
mov
add
mov
push
stos
add
mov
cmp
pop
inc
xor
push
bound
inc
lock
ret
sbb
mov
repnz
add
jne
inc
add
out
ins
sbb
leave
or
lock
mov
es
retf
push
popa
adc
and
inc
mov
bound
aam
mov
add
daa
sbb
adc
mov
add
sub
lea
jmp
or
cmp
xchg
mov
test
jo
jne
test
or
fs
xchg
xor
mov
mov
mov
mov
stc
add
stos
mov
aas
jmp
pop
adc
inc
(bad)
adc
pop
sub
in
dec
call
xchg
xchg
xor
mov
sub
adc
fwait
xor
inc
repnz
les
pop
enter
loopne
pop
mov
loopne
nop
push
and
dec
loopne
inc
nop
pushf
dec
call
and
pop
shl
sub
sub
pop
or
ret
arpl
push
mov
bsf
stos
sbb
sub
or
and
test
add
bound
stos
in
(bad)
sbb
or
cmp
je
jo
aam
sub
sbb
sti
jo
or
inc
xchg
cmp
dec
(bad)
dec
xchg
xor
jle
inc
arpl
xchg
dec
jae
lods
shl
rcl
mov
mov
aam
jp
rol
int
stc
popa
out
dec
jg
adc
mov
stos
add
pop
mov
or
loop
stos
in
add
cld
mov
add
push
jmp
out
mov
jp
call
add
sub
ins
imul
push
sbb
xor
push
call
and
pop
imul
sub
test
pop
imul
shl
in
lock
mov
push
sbb
jmp
test
cmp
loop
fsubr
push
pop
xchg
and
xlat
jl
stc
aas
adc
inc
pop
adc
and
lods
rcr
xor
and
sub
mov
es
adc
pushf
mov
push
push
ficom
loopne
mov
repz
or
sub
pusha
mov
sub
or
push
inc
arpl
test
and
mov
sub
xchg
loopne
push
sbb
in
jl
fsub
or
mov
cmc
or
push
mov
bnd
int3
cmp
inc
shl
and
daa
call
mov
or
jnp
or
pop
push
cmp
fcom
dec
ins
(bad)
mov
into
jae
jae
jle
sbb
mov
sbb
lods
pop
push
call
or
add
ins
inc
jo
jnp
sub
ret
pushf
mov
or
xor
and
icebp
dec
aas
add
mov
add
shl
inc
in
nop
jl
push
or
movs
fdivr
test
fmul
mov
jo
and
xor
in
ins
inc
stos
je
fs
adc
mov
fwait
jnp
adc
movq
mov
jmp
lahf
in
test
push
jne
shr
aam
push
xchg
lods
pop
ins
pop
mov
jo
data16
pcmpgtd
xlat
lea
mov
mov
add
test
adc
es
out
test
push
and
inc
pusha
push
js
add
push
cmp
dec
int3
xchg
les
or
mov
or
lock
push
pusha
sbb
inc
fsubr
or
jne
mov
(bad)
int3
test
lea
xor
jo
and
aas
or
push
push
clc
rcr
ret
sub
in
(bad)
or
mov
xchg
pop
sar
fs
push
mov
push
add
test
imul
jb
das
pop
ror
lods
iret
jg
pop
or
or
fwait
pusha
mov
jae
and
push
ss
jb
xor
cmp
jb
mov
sbb
mov
icebp
gs
sbb
mov
test
push
sub
cdq
popa
pop
or
addr16
sbb
push
or
fsub
mov
int
sub
rol
pop
or
loopne
sbb
pop
ret
shl
mov
mov
fmul
adc
inc
add
jnp
push
cmp
xchg
mov
mov
dec
adc
mov
sbb
dec
les
adc
fild
sbb
inc
xchg
fxch
shl
pop
dec
pop
les
push
sahf
or
jb
(bad)
mov
xor
lea
pop
inc
ret
push
fbstp
icebp
dec
xchg
or
dec
and
sbb
dec
sub
inc
mov
lea
dec
js
mov
(bad)
and
push
dec
cli
aas
cmp
faddp
inc
sub
push
jmp
fild
je
mov
mov
popf
adc
push
add
stos
and
or
(bad)
int
ret
scas
js
fild
mov
cmps
cmp
sbb
jg
test
jg
stos
loopne
inc
and
(bad)
jmp
add
scas
jl
push
xchg
retf
aas
je
sub
addr16
(bad)
adc
popa
les
and
xchg
call
mov
fst
dec
xchg
dec
cmp
cs
jnp
je
push
or
punpckhbw
push
or
out
pop
test
push
fadd
or
outs
sub
out
ds
inc
push
inc
inc
addr16
xchg
inc
ins
dec
je
adc
leave
outs
vmovntdq
mov
dec
xor
sbb
mov
inc
(bad)
jg
nop
cmp
push
ror
lea
fiadd
jnp
mov
in
inc
add
rol
sbb
mov
arpl
ficomp
jae
adc
ins
jecxz
mov
xor
imul
ds
cmp
je
js
push
retf
es
fs
mov
xchg
xlat
push
pop
mov
fwait
xor
fimul
(bad)
sbb
dec
sbb
dec
not
adc
mov
fs
enter
push
add
adc
pop
mov
and
mov
xor
sub
aad
mov
sahf
push
popa
inc
aas
jbe
and
push
dec
mov
ins
inc
(bad)
and
or
daa
jo
pop
out
sahf
fwait
mov
or
adc
jns
sub
xchg
pop
je
add
sbb
adc
push
nop
(bad)
push
xchg
push
jo
and
daa
push
or
xor
repz
add
test
cmp
hlt
inc
mov
call
xchg
inc
and
jne
xor
adc
jno
jb
(bad)
movs
fimul
jb
sub
or
xchg
or
adc
adc
call
fisub
mov
push
arpl
outs
mov
iret
adc
rcr
cmp
pop
iret
int
into
adc
mov
mov
data16
xor
cmp
pop
push
call
jg
movs
inc
xor
or
jns
sbb
mov
js
(bad)
xchg
adc
xchg
push
js
dec
push
pmullw
push
push
pop
or
fldcw
mov
pop
push
(bad)
lea
jmp
inc
and
inc
mov
inc
ss
inc
in
mov
xchg
cmps
push
call
push
not
(bad)
mov
mov
jmp
pop
mov
cmp
pop
dec
add
je
dec
and
jecxz
aam
cmp
mov
ja
add
out
push
xor
stos
or
inc
test
enter
ja
cli
repnz
pop
js
jg
cmp
add
out
inc
sbb
push
mov
push
pushf
aaa
ins
or
cmp
shr
sbb
push
push
retf
mov
test
jne
push
dec
idiv
inc
xor
test
dec
ret
repz
sbb
shl
sub
xor
stos
mov
movs
xchg
xchg
xor
aas
lock
ret
mov
mov
jne
loop
lea
sub
add
mov
(bad)
cwde
jnp
retf
fcom
adc
pop
mov
ror
adc
pop
adc
xchg
pop
or
xor
clc
push
jle
pop
mov
mov
test
aam
add
mov
xchg
push
iret
and
or
cmps
pop
fst
adc
xchg
inc
add
(bad)
sbb
cmp
pop
xor
scas
mov
dec
push
in
adc
xor
iret
xchg
sbb
add
leave
inc
jb
cmp
jb
pop
and
inc
and
leave
inc
inc
or
pop
and
(bad)
retf
je
mov
jmp
(bad)
mov
adc
jle
add
push
pop
daa
mov
fimul
in
xor
cmp
adc
js
rol
int
ins
(bad)
xor
add
sub
retf
outs
sbb
movs
or
in
lahf
repz
push
cmp
pop
leave
loopne
push
push
and
xchg
icebp
(bad)
jl
push
js
jns
jge
in
inc
mov
adc
mov
outs
or
js
outs
xor
inc
pop
lock
push
push
shl
jb
mov
inc
enter
inc
pop
adc
fadd
adc
call
xchg
test
push
dec
jae
and
adc
in
pop
mov
pop
dec
push
dec
shl
mov
mov
add
push
and
push
movs
jg
arpl
pop
sbb
or
in
aaa
popf
jo
pushf
xor
sub
jne
add
sbb
cwde
pop
ror
mov
pop
or
add
sbb
fadd
test
inc
inc
jno
adc
js
mov
jle
mov
add
imul
je
push
lea
push
add
loop
add
stos
pop
push
aam
aad
xor
inc
pop
mov
dec
mov
mov
xchg
pop
sub
jne
mov
mov
mov
nop
push
jmp
mov
inc
cmp
mov
dec
adc
dec
inc
add
dec
or
mov
sub
inc
push
adc
cmps
inc
cs
pop
add
pop
es
dec
pop
jmp
xor
mov
mov
loopne
pop
mov
call
mov
sub
sbb
shr
call
or
imul
daa
sbb
aam
jle
add
leave
sub
jmp
or
mov
icebp
stc
mov
inc
rcr
aaa
ss
ins
mov
nop
shufps
and
cmp
ins
int3
popa
cmp
popa
cmp
mov
or
les
mov
push
jne
dec
push
popa
dec
xor
rcl
test
aam
jmp
push
dec
popf
gs
push
outs
jge
pop
push
daa
ins
or
sbb
sahf
mov
dec
sti
shl
shl
push
clc
sub
pop
outs
(bad)
pop
or
push
dec
and
bound
dec
and
cmps
dec
ds
pop
xchg
ds
in
xor
mov
inc
pop
ins
mov
gs
in
add
dec
icebp
xor
or
add
rol
test
fwait
loopne
push
loopne
outs
jmp
inc
nop
cmp
loope
ins
mov
sub
je
mov
or
cmpxchg
mov
retf
pusha
ror
or
push
mov
aam
mov
jmp
js
push
mov
pop
push
imul
pop
ror
sar
ror
adc
test
in
and
sub
jmp
inc
idiv
test
push
jns
aam
(bad)
std
scas
js
add
push
js
cmp
jle
jne
pop
jb
add
aad
stc
sub
fcomi
add
ret
xor
clc
dec
cli
fdiv
mov
outs
xor
call
and
test
pop
leave
xchg
mov
scas
ret
xchg
mov
stos
scas
mov
push
fsub
dec
(bad)
mov
ds
dec
xchg
adc
(bad)
adc
mov
das
add
xor
push
aam
xor
in
or
arpl
es
mov
dec
mov
mov
fld
sub
or
xchg
xor
sbb
lods
out
nop
adc
add
rcl
dec
push
in
push
lds
test
push
adc
add
test
imul
fcmovb
sbb
inc
push
retf
jno
retf
in
mov
lea
mov
push
pop
adc
mov
shr
inc
push
mov
mov
clc
dec
dec
pop
adc
dec
jne
je
pop
aas
movs
loope
outs
mov
sub
mov
js
cdq
push
pushf
fimul
xor
sbb
hlt
ffree
push
sbb
mov
repz
dec
xchg
add
jmp
inc
mov
lea
sbb
(bad)
out
inc
fld
mov
dec
repz
(bad)
and
inc
cmc
mov
pusha
cmps
add
mov
sar
push
movs
add
jne
cmp
mov
jg
pop
push
xor
icebp
ret
sbb
push
push
jle
leave
outs
sbb
push
popa
ja
add
and
or
inc
xchg
out
add
or
sbb
xchg
shr
pop
or
clc
dec
sub
jl
inc
add
or
mov
scas
mov
into
rcl
mov
ret
or
inc
sbb
push
adc
jge
or
inc
test
sbb
push
xchg
add
pop
jne
mov
dec
fabs
xor
fsub
test
jg
dec
jle
inc
xor
adc
rcl
add
sbb
fidivr
add
test
pop
bound
inc
fs
dec
cmp
loope
mov
mov
movs
xchg
rol
cmp
or
sbb
out
xor
inc
cmp
push
mov
or
sar
push
cmp
xchg
pop
jo
push
add
repz
inc
inc
pushf
iret
push
and
sbb
mov
mov
mov
adc
or
mov
or
inc
test
loopne
jno
rol
shl
popf
repz
push
push
inc
stc
xor
hlt
bound
mov
mov
pop
push
and
sbb
and
jns
call
push
and
inc
inc
jo
sub
mov
sbb
jne
pusha
cmp
dec
pop
hlt
popa
or
rcr
add
cmps
shl
jp
inc
lods
dec
or
je
pop
and
and
adc
inc
out
sub
aaa
and
jmp
pop
pop
dec
inc
mov
loopne
mov
imul
inc
inc
jbe
push
pushf
adc
mov
icebp
test
cmp
and
aad
fstp
inc
fs
js
add
add
mov
sar
pop
aaa
mov
fld
jge
dec
mov
cdq
mov
push
cmp
dec
fidiv
jmp
xchg
jb
or
(bad)
out
retf
adc
or
xchg
adc
and
aas
push
icebp
sub
clc
pop
add
cmp
lahf
xor
mov
call
fwait
mov
scas
jmp
inc
push
sbb
mov
pop
xor
xor
rcr
or
ret
cmp
mov
xor
and
jae
in
data16
dec
xor
repnz
pop
mov
mov
hlt
push
mov
push
hlt
mov
lock
xchg
add
jp
add
test
imul
in
inc
hlt
shr
lods
dec
push
sahf
(bad)
mov
jnp
ja
rcr
adc
push
gs
inc
jl
gs
push
loopne
sbb
and
les
add
cmp
movs
jmp
test
test
ret
adc
test
jmp
fadd
int
movs
out
xor
pusha
inc
inc
and
adc
xchg
mov
sub
mov
sbb
and
sbb
mov
pop
and
jns
inc
or
inc
pop
or
and
ins
fucomp
mov
cmp
adc
out
mov
arpl
inc
jo
shl
and
dec
mov
cwde
leave
mov
mov
fdiv
pop
sub
je
cwde
fisubr
mov
mov
ret
cmp
lock
push
inc
cmp
loop
push
popf
aas
mov
les
and
and
inc
and
add
fbld
je
cmp
pop
test
jle
hlt
jmp
mov
xor
rcr
inc
and
ror
pushf
mov
add
sub
push
add
jbe
push
jne
mov
shr
fwait
push
push
cli
arpl
add
sub
cld
imul
add
xchg
mov
sub
cmp
pop
test
pop
and
repz
add
xchg
popa
cmps
data16
jp
jbe
inc
jle
popf
shl
inc
xchg
add
mov
push
add
mov
pop
mov
(bad)
or
adc
frstor
(bad)
movs
(bad)
(bad)
fwait
sub
fdiv
movhps
and
in
inc
mov
dec
mov
ja
packuswb
push
cli
bound
movs
(bad)
add
add
push
sub
clc
and
push
inc
and
adc
mov
nop
push
jle
xchg
pop
aaa
or
xor
sbb
pop
aas
xor
push
ror
sbb
popf
push
cmp
(bad)
cmps
and
and
mov
xlat
mov
sub
mov
mov
cdq
lock
add
enter
enter
and
adc
cli
cmps
mov
ret
push
or
(bad)
fadd
shl
inc
sub
fstp
pop
mov
scas
mov
xor
cmp
imul
push
mov
ss
test
mov
jmp
jo
hlt
jmp
sub
(bad)
call
adc
jecxz
enter
sar
push
out
sbb
add
inc
push
mov
add
sbb
fstp
ds
dec
inc
push
fs
add
add
imul
jge
mov
or
int3
sub
pop
arpl
scas
cld
sti
mov
push
cli
pop
test
bound
cmp
push
sbb
pusha
loopne
pop
cmp
cmp
rcr
xchg
aam
xchg
jg
add
lock
(bad)
sbb
add
pop
mov
nop
out
or
sbb
pop
dec
shl
shl
je
cmc
xor
cmps
fbld
inc
mov
lods
dec
sub
xor
add
cmp
out
jno
loope
arpl
mov
jbe
add
test
dec
push
inc
lods
iret
clc
jecxz
cmps
aas
jae
xchg
loope
jle
sub
sbb
jnp
mov
jle
or
pop
dec
pop
add
mov
push
cwde
outs
or
xor
fcomp
sub
inc
inc
sub
and
or
xchg
sbb
(bad)
fprem
mov
cmp
in
pusha
xchg
sbb
xor
inc
dec
inc
dec
push
daa
and
jno
shl
mov
push
and
adc
dec
dec
or
inc
imul
je
push
mov
or
inc
mov
loopne
add
xor
jb
xchg
cmp
leave
shl
aaa
jo
imul
push
xor
outs
retf
inc
pop
xchg
lsl
icebp
test
xor
xor
(bad)
out
push
mov
and
jge
dec
jl
sbb
pop
xor
adc
mov
adc
mov
add
xchg
lahf
add
and
pop
add
push
inc
adc
inc
xor
xor
repnz
loope
(bad)
adc
cmp
aas
div
lock
sbb
aaa
call
push
xor
or
sbb
inc
xor
inc
inc
or
add
cmp
cmc
in
(bad)
jecxz
inc
mov
nop
sub
(bad)
(bad)
jmp
sbb
inc
repnz
lock
or
out
mov
add
mov
dec
stc
or
jl
adc
inc
jno
sbb
dec
jnp
xchg
mov
jp
mov
in
ds
and
or
pop
rcl
jmp
sub
sbb
adc
jno
pop
push
in
aaa
in
pop
(bad)
inc
jmp
push
xor
cs
xchg
and
sub
ss
test
cmp
(bad)
popa
es
pusha
inc
inc
and
pushf
sub
std
mov
fdiv
mov
ja
scas
dec
or
dec
ror
push
adc
clc
es
pop
jp
pop
mov
js
lahf
je
dec
cmp
or
or
inc
inc
movs
fistp
inc
jle
add
and
pop
shl
sbb
add
adc
xchg
in
cmps
(bad)
pop
les
mov
dec
inc
stos
lock
push
xchg
xor
(bad)
cmp
pushf
into
sub
add
cdq
lea
add
cmps
inc
cmp
jle
or
jg
je
mov
or
test
popa
adc
les
addr16
cmp
cmp
mov
pop
cli
fadd
bound
arpl
adc
js
sbb
dec
xchg
sbb
xor
jb
sbb
push
pusha
push
mov
fst
dec
dec
push
or
ja
and
inc
js
outs
push
retf
push
xchg
add
and
mov
(bad)
in
mov
int
clc
pusha
data16
adc
mov
test
add
sar
and
or
pop
inc
shl
xor
and
nop
mov
call
xchg
sbb
jmp
xchg
mov
sub
sbb
cmps
fild
call
push
ret
call
inc
imul
and
fisub
jmp
call
mov
popa
popf
xor
push
js
add
add
stos
ins
or
cmps
cmps
xchg
mov
or
and
sub
je
lea
aad
xchg
aaa
lock
inc
outs
jmp
add
lea
mov
push
push
loopne
add
(bad)
scas
nop
scas
xor
and
leave
mov
xchg
and
or
mov
jl
sbb
gs
cdq
inc
sub
sbb
dec
repz
fnstsw
push
inc
lea
pusha
aas
clc
xor
daa
sbb
jg
ss
xchg
in
push
inc
fs
out
push
sbb
jbe
xor
(bad)
and
pop
jne
test
dec
enter
add
adc
or
addr16
sub
add
cmp
jle
nop
ss
je
or
daa
clc
pop
or
pop
adc
mov
inc
jl
das
jecxz
or
cmc
jl
push
rol
scas
push
mov
cmp
shr
mov
jg
xor
loop
test
into
shl
inc
and
add
jo
add
aas
xchg
adc
mov
sub
jmp
cmp
sub
in
and
sbb
jmp
(bad)
js
test
mov
push
pop
pop
stos
xchg
cmp
shr
pop
adc
and
sub
inc
leave
sub
cld
pop
mov
add
into
or
mov
jb
or
sub
daa
mov
inc
push
mov
and
pop
xor
inc
les
mov
jge
inc
jg
xchg
shl
push
push
sub
mov
mov
pop
test
mov
repnz
fs
in
xor
pop
dec
cmps
loope
dec
sbb
pop
enter
aam
pop
fnstcw
mov
inc
cs
clc
in
cmp
int3
sbb
jo
call
add
add
add
imul
jo
mov
push
push
lea
std
lds
fistp
mov
or
xchg
add
xchg
xchg
sbb
adc
xchg
add
sbb
int
popa
retf
(bad)
and
xchg
dec
(bad)
inc
imul
xor
inc
cmp
rol
xor
lock
fmul
fsub
mov
xor
dec
or
fcomp
mov
jge
lea
pusha
ja
push
into
not
and
cmp
call
stos
scas
xchg
dec
sti
cmps
inc
inc
and
int3
dec
ja
and
test
inc
and
mov
cli
in
jmp
mov
aas
sbb
shl
and
jge
enter
push
lahf
or
enter
cli
adc
add
jo
addr16
int
pop
call
sbb
push
xlat
cmp
inc
pusha
adc
lods
xchg
inc
fs
dec
mov
rcr
push
imul
das
in
add
mov
imul
int3
or
or
mov
push
xlat
in
pop
adc
invd
daa
and
mov
inc
push
fisttp
push
(bad)
std
out
jnp
cmp
lea
add
mov
push
jmp
xchg
iret
xor
xchg
xor
cld
cld
jl
jns
cmp
ror
cmp
enter
adc
rol
loop
ret
lods
sbb
loope
test
out
test
pusha
test
outs
repnz
jge
icebp
xchg
add
mov
cmp
xchg
push
xor
adc
gs
loopne
or
shr
or
sub
sbb
mov
sub
daa
mov
sbb
shl
or
jo
call
sbb
push
movs
xor
pushf
pop
dec
mov
adc
cmp
jge
or
fs
inc
xor
and
dec
jg
add
xchg
jo
call
test
mov
aam
fdivr
mov
mul
cmp
rol
sbb
sti
push
mov
sub
inc
or
je
adc
or
xchg
ror
sbb
jbe
xchg
(bad)
in
mov
inc
or
sti
mov
dec
add
sub
aaa
pop
pusha
ret
push
das
fs
add
lods
fisubr
mov
test
js
adc
sub
push
push
push
rol
push
xor
inc
dec
push
and
and
pop
repz
std
add
adc
daa
lods
ror
into
popf
push
daa
sbb
lds
gs
fs
sahf
add
jae
gs
jnp
cld
sub
xor
or
add
lea
xchg
sub
or
or
ja
or
and
add
jno
nop
lods
popf
aad
push
int
out
or
pop
inc
xchg
adc
jle
inc
xor
int3
and
lock
push
inc
inc
test
or
inc
inc
sbb
and
mov
outs
inc
dec
or
jo
jnp
add
inc
mov
in
inc
pop
sbb
sub
dec
jl
inc
sub
int3
fadd
imul
push
cmps
int3
mov
sbb
xchg
and
pop
mov
mov
pop
jmp
fisttp
adc
mov
add
push
xchg
neg
add
out
sbb
mov
pop
sbb
dec
mov
sbb
mov
mov
iret
push
dec
push
mov
adc
mov
fcomp
pop
fdiv
repnz
aam
pop
sar
int3
lods
enter
out
in
les
sar
repnz
adc
leave
cmp
mov
lods
push
ins
int3
and
iret
test
out
dec
std
or
ins
or
cmp
ins
sub
int3
adc
mov
inc
cmp
es
adc
or
jl
add
add
aas
mov
sbb
aas
pop
push
or
mov
sub
(bad)
cmps
sub
push
xchg
mov
pop
(bad)
adc
outs
mov
pop
and
push
xchg
popa
add
mov
or
iret
mov
or
xchg
and
in
dec
sub
adc
(bad)
outs
cwde
xchg
sub
outs
ins
add
push
outs
xchg
mov
in
and
adc
ds
jg
ins
popa
jo
cmp
daa
mov
sbb
mov
adc
push
sub
mov
add
push
sbb
adc
mov
outs
mov
pop
sbb
std
std
aam
adc
sbb
inc
jbe
lea
xor
jbe
sbb
je
adc
xchg
out
push
pusha
addr16
push
sbb
xor
and
xchg
es
push
lock
jmp
rcr
cmp
adc
sbb
imul
inc
xor
lds
cmp
mov
cmp
dec
mov
mul
push
mov
mov
xor
xchg
inc
mov
ret
mov
mov
push
rcr
jle
cmp
xchg
test
popa
sub
sub
scas
xor
in
fsubr
add
xor
fs
mov
mov
cmp
or
mov
test
or
push
pop
mov
int3
sub
mov
push
popa
and
sub
(bad)
adc
popa
ins
push
add
mov
scas
or
aaa
sti
fidivr
push
movs
mov
inc
and
add
(bad)
call
rol
cmps
sbb
push
xor
test
push
dec
pushf
neg
push
mov
or
add
adc
ja
jns
ja
fst
int3
xchg
inc
add
inc
es
jp
ins
ins
scas
mov
frstor
imul
cmps
pop
cs
cmps
sub
or
mov
pop
and
push
call
mov
push
popa
in
mov
adc
jo
js
sub
icebp
or
and
loop
outs
adc
pop
test
inc
adc
das
and
mul
mov
syscall
add
add
pop
mov
or
aam
inc
or
js
sub
ss
xchg
xchg
cmp
inc
cmp
inc
push
ror
pop
xchg
mov
mov
or
push
aaa
fld
add
dec
ret
leave
iret
pop
in
leave
adc
test
push
retf
test
cli
jecxz
movs
and
push
mov
test
(bad)
repz
pusha
push
sbb
fisubr
cmps
ins
add
xlat
mov
or
push
nop
mov
inc
pop
sub
xor
dec
rcl
imul
dec
cmps
and
dec
dec
or
imul
add
movs
retf
pop
mov
or
lods
dec
mov
jmp
dec
xor
sub
push
pop
fiadd
adc
out
adc
fiadd
push
mov
int3
das
or
dec
push
sub
mov
sbb
sbb
clc
pop
add
bound
scas
add
rcr
div
pop
out
das
adc
sbb
push
int3
adc
aam
push
cs
mov
add
mov
and
and
adc
mov
call
inc
push
dec
dec
jne
mul
aad
inc
pop
in
and
and
aam
dec
cmovge
aaa
sub
shl
icebp
push
fadd
aaa
in
or
fimul
cmp
push
jae
xor
sbb
adc
js
add
inc
rcl
icebp
or
repz
es
into
aam
nop
ret
jmp
add
(bad)
call
inc
dec
or
loopne
mov
nop
adc
xchg
adc
adc
or
add
cmp
not
adc
inc
js
int3
cdq
adc
mov
adc
add
cdq
jecxz
sbb
enter
push
lahf
cmp
push
pop
push
jl
push
pop
jno
cwde
jo
sbb
enter
ss
cmps
stc
fidiv
push
add
sub
push
pop
cwde
add
lods
in
inc
sbb
inc
test
pop
loop
in
pop
sub
in
aad
and
push
les
mov
lods
sbb
popa
mov
test
xlat
arpl
aaa
call
div
psraw
mov
xchg
clc
push
pop
pop
leave
bound
cwde
ret
scas
in
and
ret
adc
pop
sbb
scas
pop
push
add
clc
dec
call
fnstcw
mov
xchg
retf
adc
and
cmp
sub
inc
jnp
adc
add
mov
lods
inc
or
iret
leave
or
adc
jmp
mov
dec
dec
push
push
fdiv
cmp
xchg
xchg
add
add
cmp
bound
nop
loopne
out
pushf
jmp
pop
and
sub
out
adc
xor
push
(bad)
enter
sbb
pop
in
mov
sub
les
inc
push
push
nop
scas
pop
xchg
std
rcl
and
dec
cmp
pop
nop
sbb
fisttp
stc
retf
sti
sbb
add
(bad)
inc
mov
or
sub
inc
sbb
xor
pusha
shl
inc
xor
pushf
dec
jmp
push
jbe
cwde
fdiv
rol
in
and
je
cmp
bound
add
jmp
pop
or
and
sub
mov
test
jae
adc
rcr
(bad)
or
movs
aam
cmp
xchg
call
push
mov
inc
adc
out
and
dec
cmps
mov
add
clc
into
mov
inc
clc
push
inc
mov
adc
or
xor
and
mov
cmp
adc
nop
sysret
xor
bound
push
in
mov
xchg
add
or
xchg
dec
or
mov
outs
push
dec
and
add
inc
fiadd
pop
mov
mov
in
adc
mov
fcomp
daa
mov
cdq
ja
fld
add
mov
inc
and
inc
pop
jnp
jns
lods
lods
push
push
hlt
push
sahf
ja
iret
mov
enter
jecxz
in
add
or
inc
push
sub
adc
es
xor
cwde
loopne
out
(bad)
push
sub
sub
dec
push
or
dec
fst
xor
add
adc
pop
lods
sub
pop
xor
pop
cdq
jo
mov
jns
dec
pop
or
inc
push
xor
es
cmp
inc
and
shl
sub
sbb
jo
push
call
adc
(bad)
stc
adc
jnp
test
or
into
adc
adc
cmp
pop
mov
je
push
inc
ret
fidiv
shl
test
fcomp
je
or
arpl
add
das
inc
les
adc
mov
and
xchg
pushw
or
pop
loopne
das
sub
aaa
xor
and
aam
or
jle
jae
cmp
dec
add
fadd
adc
sbb
or
test
or
and
dec
out
add
outs
sub
in
sbb
jno
mov
adc
mov
fdivr
loope
or
cmp
push
dec
outs
fstp
das
xor
jmp
(bad)
fild
test
or
xor
mov
push
shl
out
jecxz
scas
sub
ins
jmp
lds
jge
xor
jmp
dec
pop
add
jae
mov
mov
and
xchg
xchg
int
ins
and
lods
and
mov
or
and
test
mov
dec
popf
inc
jno
bound
mov
adc
sub
fsubrp
cmp
adc
add
ins
adc
adc
bound
or
and
adc
aas
out
and
or
or
add
mov
or
fimul
pusha
fmul
adc
outs
mov
dec
stc
sbb
jae
push
shl
lea
push
or
loopne
and
stc
nop
in
addr16
movs
maskmovq
test
cs
imul
daa
and
outs
add
imul
xchg
clc
mov
adc
push
mov
push
and
xor
stc
dec
and
add
imul
or
push
jae
mov
jmp
cmp
or
cmp
pushf
imul
adc
daa
push
mov
in
mov
rcr
push
sub
or
mov
sub
popa
imul
push
sahf
add
and
ds
cmp
(bad)
mov
andps
pusha
xchg
test
cmp
xchg
and
jnp
rcl
es
push
pop
cmp
bound
and
cs
jns
fadd
push
or
hlt
les
push
add
or
mov
inc
inc
pop
xchg
jo
jnp
adc
inc
push
in
outs
adc
outs
add
mov
push
adc
xchg
aaa
and
and
and
cmp
mov
fwait
mov
cmp
cmps
sub
add
cmc
lock
fld
dec
push
or
jmp
add
leave
and
adc
or
dec
add
add
and
scas
and
aaa
add
and
add
mov
xchg
and
mov
inc
iret
cld
es
mov
xor
sbb
(bad)
daa
mov
jge
cmp
dec
call
jmp
push
or
pop
pop
fist
pop
or
xchg
mov
(bad)
mul
(bad)
pop
adc
and
(bad)
cli
into
(bad)
cmp
hlt
repz
xchg
sub
les
dec
xchg
push
repnz
fimul
call
shl
and
and
ins
adc
in
mov
nop
sub
and
add
sbb
in
adc
adc
push
adc
or
and
push
pop
call
or
or
add
mov
adc
cmps
sbb
add
xor
inc
xchg
adc
add
push
pusha
inc
xchg
pushf
lods
push
pop
dec
xor
sti
inc
dec
push
mov
pop
push
sbb
add
dec
cmp
dec
xor
cmp
add
int
ins
das
xchg
(bad)
aaa
pop
imul
rol
or
or
ja
(bad)
in
repnz
adc
cmp
sub
fs
mov
cmps
xor
or
dec
ss
sbb
add
aam
pop
xchg
inc
xchg
or
xor
fs
and
retf
rcr
push
or
imul
and
push
jmp
dec
cmp
dec
push
and
and
inc
sbb
dec
inc
(bad)
(bad)
movs
es
mov
jmp
push
fcomp
xchg
cmp
pop
and
mov
mov
adc
enter
sbb
and
seto
sbb
add
inc
pop
sbb
add
enter
sub
or
fst
pop
shr
push
mov
icebp
inc
add
sti
and
mov
(bad)
ss
adc
pop
xchg
jle
xchg
pop
xchg
sti
sub
or
cwde
cmps
mul
push
push
mov
or
test
mov
aaa
mov
cmps
lock
test
or
xor
xchg
add
pop
daa
pop
movs
mov
cmps
movs
sub
outs
or
xchg
adc
mov
push
cmp
or
gs
js
call
push
sbb
loopne
pop
sub
ins
cmps
out
mov
xor
mov
daa
movs
aas
je
ss
and
sub
xor
(bad)
xlat
mov
shl
and
mov
ins
daa
dec
add
xchg
push
dec
lock
jge
es
and
or
fidiv
inc
jge
outs
adc
cs
ficomp
xor
xor
das
add
loopne
das
jle
push
jae
jno
xchg
push
fnstcw
adc
or
and
adc
mov
daa
ror
adc
repz
sbb
loope
mov
pop
cmps
push
loope
mov
push
aas
adc
pop
xor
inc
and
pusha
retf
imul
sbb
jns
add
adc
lahf
imul
scas
call
test
jae
mov
xchg
rcr
sub
aaa
data16
sbb
repnz
or
jno
mov
xor
and
cmp
inc
and
sbb
aam
fdivr
push
xchg
dec
cmps
inc
or
sbb
sub
std
and
inc
ret
enter
add
and
retf
adc
daa
loopne
outs
sub
sbb
je
sub
or
xchg
sub
inc
push
jp
dec
aas
inc
popa
adc
add
xchg
(bad)
stc
in
xor
mov
jb
push
or
ffreep
dec
ficom
(bad)
(bad)
push
repnz
jp
xor
cmp
pop
and
jae
sub
add
inc
cmp
stos
(bad)
xor
aaa
rcl
push
jne
or
cs
inc
out
push
and
das
xor
pop
(bad)
jp
lds
adc
xchg
adc
shl
in
das
adc
and
adc
jo
add
push
add
test
inc
(bad)
xchg
sub
and
jo
bound
js
xchg
sub
sub
aas
add
push
jl
inc
cmp
mov
xor
cmp
fldcw
jge
xor
pop
js
test
sbb
jno
sub
repnz
push
nop
jle
jae
and
add
add
and
xchg
and
leave
adc
cmp
mov
lock
add
prefetchwt1
mov
or
or
push
pop
nop
js
inc
dec
push
and
outs
mov
fcom
fisttp
xchg
dec
sbb
pop
lea
lock
mov
(bad)
fistp
push
xor
dec
push
movs
jecxz
loope
xor
inc
xor
in
out
sbb
xchg
mov
retf
add
dec
push
cmp
pop
adc
xor
push
out
sub
push
adc
add
push
sti
dec
aam
mov
clc
or
push
gs
add
js
or
stos
(bad)
js
das
inc
ds
sub
mov
push
cmp
out
sbb
cmp
inc
cmp
adc
mov
test
pop
dec
cmps
int3
push
test
call
push
dec
jo
jge
lds
cmp
or
dec
pushf
test
fwait
ror
jnp
push
sbb
cmp
std
sub
add
xorps
jge
push
or
adc
pop
pop
jno
inc
xor
jns
xchg
cmp
pop
adc
aam
push
add
push
or
push
loope
add
(bad)
fdivr
out
es
out
ds
ds
jno
mov
cmp
xlat
and
sub
dec
add
outs
jle
retf
add
inc
and
jmp
add
or
mov
adc
pop
les
out
or
sbb
lods
or
xchg
add
pop
aaa
(bad)
mov
push
jge
sbb
push
pushf
sbb
push
ins
test
cmp
cmp
test
in
movntps
daa
scas
lock
push
xchg
sub
adc
or
jo
pop
dec
push
dec
sub
dec
jno
push
iret
fisttp
add
adc
cdq
pop
adc
js
or
aas
add
(bad)
jns
imul
popa
cmp
jge
not
dec
add
jb
mov
push
lock
inc
cmp
dec
or
mov
and
inc
or
and
std
(bad)
ds
adc
dec
fidivr
add
or
fs
jg
loope
and
jb
inc
mov
jno
pop
enter
rol
and
sub
shl
pop
push
das
sbb
scas
push
cmp
stos
jmp
lods
push
adc
mov
adc
jl
aas
adc
mov
and
je
add
and
jno
jge
in
mov
push
int3
mov
ins
pusha
xchg
lods
pop
and
add
cmp
add
cmp
rol
sub
inc
add
in
enter
add
cmp
add
add
in
xor
add
ret
or
daa
inc
lock
call
sti
fadd
ds
xchg
xlat
sub
push
xchg
inc
push
push
mov
xor
test
cmp
dec
pop
add
add
cmc
enter
jl
sbb
je
add
ins
ja
push
xor
loopne
xchg
pop
ss
inc
jle
push
or
xchg
mov
or
inc
adc
push
ins
test
cmp
adc
mov
out
sub
fsubr
nop
lods
mov
pop
xchg
pop
lds
jo
rcr
inc
add
sub
or
or
imul
popf
add
ss
xchg
pop
lods
push
sbb
push
into
sbb
inc
xchg
movs
jmp
add
jle
dec
nop
or
lds
add
or
dec
inc
cs
aas
fild
dec
rol
dec
out
nop
cmp
mov
adc
push
pop
inc
inc
or
mov
fisubr
and
or
mov
adc
sbb
add
xchg
and
bound
jmp
dec
sbb
sub
add
sub
jnp
and
inc
adc
xchg
hlt
das
ret
mov
test
pop
or
xor
jecxz
push
dec
or
mov
or
jg
movs
ins
or
sub
or
xor
sbb
(bad)
sbb
pop
stos
pop
les
mov
sahf
dec
outs
arpl
inc
mov
push
inc
inc
lds
pop
xor
aas
dec
mov
jmp
nop
mov
cmps
push
dec
or
inc
adc
xchg
cmps
or
fs
lds
or
mov
cmp
xor
add
sbb
sbb
jb
xlat
(bad)
ins
rcr
dec
xchg
ins
sbb
leave
sub
clc
push
push
push
fimul
not
push
add
dec
or
(bad)
sar
push
inc
nop
inc
jl
adc
add
or
inc
outs
add
sub
mov
cmps
sub
xchg
xor
mov
lods
stc
sub
xchg
and
stc
retf
test
pop
jo
add
push
adc
div
xor
loopne
rol
xor
cmp
mov
aaa
add
pop
lds
ins
or
outs
and
inc
adc
sub
push
lods
pusha
pop
jno
das
jg
and
shl
push
dec
adc
js
adc
fcmovnbe
mov
sti
pop
mul
repz
fcmovu
inc
out
(bad)
or
bound
hlt
mov
lahf
mov
dec
jle
add
add
mov
push
or
push
and
mov
in
pop
mov
mov
inc
xor
movs
lods
xor
or
or
es
lahf
dec
adc
adc
test
or
mov
add
sub
cmp
dec
adc
mov
scas
adc
cmp
outs
dec
outs
cmp
add
dec
daa
scas
outs
pop
imul
lahf
test
fcomi
gs
sahf
push
in
push
push
dec
pop
sub
jne
ins
lods
add
nop
das
and
mov
inc
mul
adc
pop
xchg
aaa
and
jo
push
jno
sub
adc
call
xchg
les
fld
inc
sub
enter
mov
mov
stos
push
repz
sbb
or
push
mov
mov
cmps
ret
xchg
adc
imul
push
leave
xchg
mov
fwait
sbb
pop
ret
pop
xchg
jmp
mov
in
add
pop
add
pop
sub
cmc
add
jae
dec
sbb
pop
ficomp
bound
enter
mov
or
mov
aam
push
jmp
inc
add
jl
xor
into
add
mov
shl
cmp
pop
cmp
and
inc
repnz
pop
(bad)
and
test
icebp
cmp
mov
sub
push
repz
in
ficom
mov
cmp
movs
vpunpckhqdq
dec
mov
rep
sbb
loopne
test
xchg
neg
mov
mov
jne
rol
outs
mov
je
xchg
mov
jl
sub
mov
in
test
sbb
push
push
popf
mov
xor
mov
pop
test
je
cs
(bad)
mov
cs
cs
je
sub
mov
imul
dec
pop
rol
das
push
jmp
add
fild
inc
(bad)
sub
push
or
loope
jmp
ror
and
cmp
outs
mov
fnstcw
pop
mov
xor
add
or
aaa
dec
sub
(bad)
inc
add
xor
mov
addr16
xor
xchg
lods
dec
adc
xor
mov
sbb
mov
repnz
and
xor
dec
adc
je
push
sub
mov
pop
mov
add
push
ds
pusha
add
mov
fs
sub
push
xchg
mov
or
push
jge
mov
jo
fprem1
pusha
xchg
adc
enter
add
ret
js
or
shl
out
adc
push
fidivr
mov
leave
jae
or
adc
mov
cmc
arpl
add
or
fcom
mov
pushf
ja
sbb
push
mov
nop
psraw
test
movs
lods
cld
aaa
lea
add
pop
inc
imul
nop
pop
fisttp
or
cmp
push
lods
push
push
add
push
sbb
daa
mov
push
retf
jmp
scas
pmaxsw
in
xchg
mov
call
repnz
aas
stc
or
into
(bad)
add
inc
mov
pop
aas
leave
push
popf
clts
pusha
out
sahf
pushf
mov
pusha
outs
and
int3
ficomp
push
lss
bound
ja
add
clc
jle
leave
(bad)
addr16
inc
arpl
add
das
(bad)
call
sar
or
sbb
fwait
pop
xchg
bsr
gs
pop
ins
cmp
add
add
push
add
int
call
bound
add
add
ror
push
or
mov
ror
mov
mov
mov
(bad)
(bad)
push
adc
cmp
cmp
mov
cmp
mov
in
(bad)
in
(bad)
jmp
jmp
jmp
inc
jmp
jmp
jmp
jmp
jmp
push
(bad)
fdivrp
(bad)
fsub
(bad)
(bad)
fcos
fdivr
xlat
cmps
call
call
call
jbe
sar
sar
adc
into
dec
jmp
retf
xor
imul
mov
push
adc
push
mov
idiv
jmp
adc
mov
sahf
out
int
adc
push
push
lods
call
cwde
adc
and
(bad)
ss
push
jl
jle
iret
repz
or
push
js
pusha
ds
(bad)
cmp
inc
in
sbb
pushf
stos
test
clc
and
call
pcmpeqd
std
inc
sti
int
pop
adc
and
push
in
push
and
test
imul
cli
xor
shl
sub
sbb
idiv
rcr
mov
outs
div
jnp
mov
hlt
ds
inc
push
jp
pop
es
jnp
sti
mov
xchg
jo
clc
ds
jbe
cmp
(bad)
adc
pop
cs
call
xchg
cmp
mov
fild
xor
adc
inc
cmp
pop
int3
mov
stos
or
or
add
lds
sub
inc
mov
and
jg
call
and
call
push
mov
sbb
xor
aad
dec
adc
push
ins
test
jmp
cwde
xlat
push
jno
enter
test
nop
cmps
pop
fs
nop
cmp
cmp
or
add
inc
sbb
std
xor
in
mov
dec
add
pop
xor
sbb
or
ret
call
nop
adc
and
or
loopne
pop
out
mov
inc
movs
jae
call
repnz
(bad)
add
cmp
retf
sub
sub
les
shl
imul
and
popf
mov
xor
mov
rol
add
ins
xchg
cld
mov
clc
inc
ror
lea
mov
sub
clc
lds
scas
push
and
cmp
and
xchg
les
mov
pop
pop
ins
pop
movs
div
test
and
scas
and
adc
pop
popa
push
adc
mov
pop
cs
inc
out
mov
imul
mov
dec
adc
and
mov
pop
pop
(bad)
lea
mov
shr
push
rol
cmp
rcl
or
jp
pop
inc
and
in
xor
sbb
push
lock
stc
inc
push
add
mov
int3
jbe
add
pop
or
push
test
inc
sub
dec
nop
jl
push
dec
xlat
dec
test
mov
mov
ins
fadd
fs
sbb
add
inc
ds
add
jbe
sub
mov
mov
fsub
dec
(bad)
jl
aad
mov
and
xchg
and
xor
mov
add
movs
daa
in
aas
call
or
sub
inc
xor
push
mov
inc
mov
sbb
adc
mov
in
test
xor
mov
nop
nop
ja
pop
test
adc
iret
imul
xchg
out
sub
ins
pop
xchg
(bad)
cmp
mov
and
lock
adc
or
sub
jbe
fs
add
ins
xchg
test
popf
and
dec
jbe
and
enter
and
in
xchg
cmp
pop
cmp
in
push
xchg
adc
ret
mov
in
mov
and
sub
jmp
lds
enter
cmp
cmps
repz
dec
cmp
or
test
dec
dec
and
cmps
and
sar
dec
add
in
pop
or
outs
inc
push
repz
add
arpl
and
mov
dec
nop
fwait
dec
retf
or
pop
fisub
ja
mov
jno
jmp
inc
dec
sbb
lea
inc
sub
dec
inc
cmc
dec
dec
dec
and
sbb
jl
cmp
hlt
fs
or
cmps
push
daa
aam
aad
jmp
push
xor
mov
xchg
jne
stos
push
and
xchg
imul
and
and
and
and
push
js
leave
and
imul
and
and
mov
and
cwde
xchg
and
and
xchg
and
out
or
and
dec
ins
lea
cmc
sbb
rcl
call
in
sti
(bad)
call
add
dec
and
and
test
(bad)
inc
dec
std
call
xor
call
js
xchg
cmp
cmc
mov
cmp
ds
xlat
cdq
xchg
push
test
dec
inc
push
pop
idiv
in
dec
or
xchg
xor
in
jmp
test
and
adc
arpl
dec
push
add
dec
jnp
dec
mov
mov
lods
les
pop
ins
call
dec
mov
dec
pop
add
imul
or
and
add
add
fstp
add
into
inc
push
or
adc
lods
or
les
mov
das
cmp
inc
js
xchg
mov
arpl
popa
push
dec
jge
sahf
outs
jns
dec
test
ins
pushf
movs
adc
cwde
mov
mov
in
dec
inc
jecxz
push
ins
inc
inc
xor
(bad)
mov
aad
test
mov
or
jo
not
pop
push
sub
test
jb
sbb
leave
inc
and
pusha
and
push
xchg
and
imul
xchg
stc
dec
mov
xchg
stos
lods
aaa
jo
push
xor
movs
add
inc
gs
or
jge
mov
dec
and
adc
pusha
pop
das
mov
push
and
in
loop
or
mov
or
mov
inc
cmove
jb
push
dec
popa
je
xchg
inc
push
push
gs
clc
addr16
ins
pop
xor
push
xor
enter
adc
rol
enter
ins
test
mov
shl
mov
dec
imul
add
lock
inc
cs
outs
push
shl
ins
sbb
test
jmp
outs
iret
cmp
add
das
jmp
bound
or
mov
add
xor
sub
pop
or
xor
and
cmp
retf
sti
cdq
sbb
gs
lahf
mov
bound
mov
sub
push
add
adc
add
pop
or
imul
data16
int3
xor
ret
les
mov
xchg
cmps
inc
xchg
sar
jns
sbb
fnsave
mov
outs
imul
jno
and
add
stos
mov
add
dec
cmp
icebp
imul
inc
ja
loop
xchg
inc
jne
ins
and
repnz
jno
stc
and
fwait
iret
daa
add
adc
add
mov
or
add
pop
fwait
cmp
pop
add
dec
fwait
icebp
or
adc
pop
rcl
fstp
push
outs
shr
inc
add
or
jge
nop
sbb
shl
inc
sub
sbb
pop
sub
addr16
and
mov
jae
xor
dec
dec
je
sbb
jb
mov
push
ret
jns
jl
inc
and
out
mov
inc
push
in
nop
es
dec
loopne
dec
push
in
dec
movs
sub
cmp
pop
ja
inc
sbb
mov
inc
sub
loope
push
cmps
int
xor
rol
and
and
ret
inc
in
adc
int3
lods
cmp
sbb
push
mov
sub
xor
nop
sbb
dec
ins
scas
add
int
mov
fld
cmp
(bad)
mov
jb
add
xchg
xchg
pop
or
in
and
rol
pushf
les
les
(bad)
ret
popa
sub
xor
ret
xchg
int3
stos
retf
add
daa
shl
repz
aam
sub
fisttp
jg
fcomp
mov
mov
(bad)
mov
sub
add
(bad)
pop
sub
xor
jne
jp
xor
jmp
pop
mov
xchg
jo
jmp
sub
adc
adc
adc
out
mov
adc
stos
dec
inc
out
sbb
js
push
pop
dec
mov
or
lea
xchg
dec
and
test
test
mov
adc
movs
addps
icebp
adc
cs
pop
shl
or
ss
inc
sub
fist
mov
fld
addr16
test
pusha
inc
sbb
pop
js
dec
das
shl
das
lods
inc
adc
or
aas
aaa
push
sub
shr
sbb
dec
xor
mov
push
xor
test
push
add
mov
sbb
sub
cli
test
xor
and
aas
pop
repnz
adc
xchg
mov
stc
jle
ins
add
and
scas
jl
sub
pop
in
inc
loopne
jge
jne
retf
call
jge
mov
cld
jge
jle
test
pop
and
sub
enter
loop
mov
and
test
dec
std
dec
dec
sti
paddsw
sbb
inc
loope
fcmovnu
(bad)
sub
fs
frstpm(287
in
or
icebp
pop
cs
retf
xchg
sbb
pop
cmp
or
inc
jp
push
sbb
dec
ja
push
mov
mov
dec
popf
shl
adc
adc
mov
adc
inc
(bad)
div
add
add
add
fisub
mov
std
mov
xchg
sbb
add
add
add
call
push
add
add
add
add
mov
mov
mov
mov
(bad)
dec
stos
or
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
dec
test
and
mov
mov
mov
add
push
mov
xor
dec
sub
jg
add
pop
mov
mov
mov
mov
out
in
(bad)
jmp
add
(bad)
inc
inc
inc
inc
or
(bad)
mov
mov
mov
mov
stc
sub
mov
add
xor
repnz
push
data16
inc
and
sar
pop
clc
pop
iret
repz
sbb
mov
ds
cmp
imul
add
neg
out
clc
sbb
push
nop
outs
xchg
outs
push
pop
fnstcw
nop
mov
jle
mov
imul
push
pop
pop
ins
jge
fucom
jl
bound
adc
push
rcl
jle
push
mov
push
xor
out
dec
pop
mov
and
jnp
jnp
dec
push
pusha
loopne
and
ss
out
imul
push
lock
push
mov
jl
div
pushf
push
ror
jbe
repz
shr
cmp
inc
push
call
call
push
push
movs
fnstcw
push
sub
js
ss
int
mov
les
push
or
ds
inc
out
ds
gs
mov
data16
mov
pop
ins
cmp
fnstcw
xchg
xchg
jl
jg
fistp
es
dec
cs
outs
rol
out
js
movs
ss
and
or
pushf
test
imul
pop
pop
mov
xchg
gs
inc
pusha
dec
push
outs
and
in
and
xchg
pop
test
ror
xchg
add
inc
mov
movd
xchg
push
loope
or
popa
arpl
popa
clc
jo
add
sub
xchg
retf
jle
dec
in
inc
add
add
mov
and
jge
dec
push
cdq
mov
(bad)
dec
adc
lsl
sbb
gs
or
sbb
push
and
and
xor
jae
jo
xchg
or
jl
mov
or
or
adc
loopne
dec
aas
and
dec
call
movntps
movs
fisub
icebp
in
jge
mov
fdiv
sub
sub
mov
push
fimul
aas
mov
pusha
nop
push
push
stc
xor
or
stos
daa
sub
xchg
push
test
jne
repnz
mov
jl
xor
and
or
pop
dec
jns
jg
adc
imul
adc
jp
ins
jmp
ret
leave
pushf
test
out
xchg
inc
pop
popf
ret
shl
pop
cld
and
dec
add
push
js
sar
or
xchg
loop
aam
nop
xchg
dec
and
jno
jb
cdq
ds
adc
add
adc
cmp
xchg
std
jns
push
ss
pop
jmp
retf
pop
dec
cmp
gs
mov
(bad)
and
jne
inc
adc
add
adc
ret
fwait
jnp
movs
psubusw
addr16
push
mov
test
or
js
dec
pushf
test
pop
jl
cmp
sti
movs
es
jle
xor
pop
dec
xor
in
pop
daa
adc
adc
adc
pop
std
and
mov
dec
inc
std
xor
xchg
xchg
(bad)
xchg
xchg
retf
add
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
cmp
pop
sbb
addr16
xor
inc
pop
adc
or
call
add
xor
push
pop
mov
movs
xor
cmp
inc
aaa
or
popf
outs
mov
push
sbb
add
lods
in
or
mov
mov
add
cmp
mov
mov
sub
lea
imul
(bad)
dec
add
inc
xchg
push
add
mov
dec
test
sbb
(bad)
(bad)
(bad)
jmp
inc
add
dec
dec
and
push
idiv
mov
sbb
xchg
stc
mov
les
cmp
cld
and
stc
adc
mov
mov
adc
sub
ret
and
in
mov
lahf
dec
ins
mov
and
ins
add
mov
pop
pop
pop
jecxz
nop
adc
sahf
hlt
mov
cmps
cmp
mov
call
mov
fs
add
or
add
and
stos
daa
mov
sub
aaa
mov
pop
jo
sub
mov
repnz
push
(bad)
xor
lods
lods
in
xor
imul
jne
mov
mov
dec
add
sub
mov
sahf
cmps
cmp
push
dec
mov
outs
in
jne
enter
mov
add
and
adc
popf
in
test
hlt
cmps
add
inc
ficomp
mov
cmp
jl
xor
xchg
fsubp
add
fsubr
mov
mov
add
add
pop
pop
xlat
inc
ror
clc
into
jmp
mov
add
dec
mov
cmps
push
in
adc
or
mov
rol
popf
add
xchg
jge
dec
add
arpl
aas
je
ss
or
and
test
ds
sub
ins
fs
inc
xchg
and
dec
xor
lock
pop
pop
arpl
mov
mov
mov
sub
out
sbb
dec
cli
or
out
xor
movs
xchg
mov
dec
push
pop
cmp
mov
pop
dec
shl
in
ja
jmp
addr16
call
hlt
or
inc
cs
add
xor
or
inc
(bad)
inc
lods
test
and
xchg
xlat
xchg
pop
fdiv
add
loope
ss
sub
push
xchg
cmp
lods
pop
and
adc
mov
mov
sub
outs
dec
pop
jge
pop
js
dec
inc
cld
pop
xchg
mov
inc
mov
sub
in
mov
movs
addr16
ds
nop
jl
sub
outs
je
jo
retf
mov
or
dec
clc
jb
loope
add
fcmovu
or
jno
xchg
xchg
fist
movs
jecxz
xchg
outs
pop
xchg
into
xor
imul
fmul
cmc
stos
mov
dec
mov
cmp
in
and
fwait
loope
dec
sub
push
add
add
dec
les
sbb
rcr
mov
stos
aaa
xor
pop
movs
sbb
mov
push
ret
xor
push
call
into
cmp
mov
inc
sar
pop
and
push
jo
adc
and
imul
ret
pop
add
push
sbb
xchg
repz
pop
adc
or
cmp
pusha
pop
and
push
push
stos
loopne
test
push
lods
push
inc
sub
pop
imul
inc
adc
mov
mov
sahf
and
sbb
or
cwde
cmps
add
dec
shr
cmc
jno
sub
sub
mov
pop
das
test
je
mov
nop
inc
loopne
push
push
or
push
pop
and
or
scas
or
adc
dec
push
add
loope
xchg
inc
ret
push
push
not
dec
sbb
mov
dec
add
jp
dec
arpl
cmp
cmp
lock
mov
pop
or
add
les
pop
cmp
push
inc
xchg
dec
inc
mov
xchg
call
aaa
test
xor
movs
jb
popa
inc
sub
popa
leave
popf
ja
mov
cmps
mov
sbb
xchg
in
xlat
adc
push
ss
mov
in
sbb
inc
and
xchg
cli
fnstenv
xchg
pop
pop
pop
inc
jecxz
mov
add
retf
xchg
xor
sbb
sbb
lahf
sar
sbb
jecxz
xchg
scas
aam
cmp
das
js
daa
cmps
cwde
das
jmp
cmps
pop
jo
add
or
sbb
mov
push
xor
sub
sbb
or
test
outs
add
push
adc
adc
mov
dec
pop
adc
dec
jle
mov
jb
jbe
sub
nop
mov
je
mov
jb
inc
ret
ins
imul
add
push
or
repnz
in
(bad)
call
pop
ror
test
lods
xchg
xor
pusha
pop
and
mov
mov
add
pop
jns
mov
mov
jg
test
add
mov
enter
popa
test
sbb
test
sub
pop
push
arpl
sbb
in
fist
or
call
shl
add
pop
add
jbe
out
pop
mov
dec
jbe
mov
dec
out
iret
pop
sbb
add
or
add
call
or
inc
inc
inc
inc
mov
in
pop
add
pushf
lods
lods
xchg
pop
fwait
scas
or
fsub
lods
arpl
cs
xor
xor
xchg
sbb
sbb
pop
popf
and
dec
fs
sbb
or
iret
mov
pusha
add
add
in
cmp
sar
or
movs
aaa
jmp
add
push
pop
xchg
sar
ja
aas
add
aaa
out
call
cmp
fsubr
or
adc
fs
push
and
cmp
fs
xor
ror
sub
cmps
jge
das
int3
in
push
test
popf
push
jno
iret
repz
xchg
mov
repz
outs
ret
or
js
mov
inc
push
add
enter
mov
sahf
es
lock
test
mov
fwait
dec
sub
jo
push
mov
sti
mov
sti
cmp
mov
ret
es
data16
inc
in
ss
and
dec
mov
(bad)
mov
hlt
add
movs
(bad)
fist
adc
cmp
inc
out
adc
pusha
xchg
jge
adc
bound
add
sbb
jae
outs
pop
and
(bad)
pop
pop
push
xor
imul
xchg
cmps
nop
push
inc
out
ins
rcl
pop
jmp
xchg
dec
test
mov
loopne
lods
imul
mov
fiadd
hlt
popa
test
test
pop
(bad)
pop
or
inc
jge
sub
add
aas
pusha
sub
rcr
loop
and
daa
sti
xor
pop
pop
pop
mov
or
ins
or
outs
and
test
or
cmp
sbb
jmp
cli
lahf
adc
xor
loopne
shr
stos
inc
adc
nop
add
xchg
mov
cmp
jl
jno
inc
call
push
and
ret
xchg
cwde
push
es
ss
mov
fldcw
sbb
adc
inc
or
bound
cmps
cdq
cmp
aas
xor
mov
sub
sub
and
pushf
mov
es
cmps
jl
mov
jbe
xor
repz
sahf
outs
push
xchg
(bad)
and
push
fidiv
push
jp
jb
fsubrp
inc
in
aaa
cli
ror
add
mov
xchg
(bad)
xchg
sub
xor
movs
sbb
ret
push
pop
adc
push
add
movs
and
inc
jne
push
jae
loopne
ja
pause
push
add
cli
xor
inc
mov
ins
imul
add
mov
inc
daa
sub
das
push
push
cmp
fisttp
and
xor
sbb
mov
inc
movs
mov
push
add
fdivr
push
leave
cmp
or
push
lock
ret
les
mov
(bad)
push
or
push
adc
adc
das
sub
sub
add
in
or
imul
and
add
and
arpl
or
mov
sub
imul
pop
sub
or
push
movs
jge
push
and
add
adc
ffree
xchg
sbb
cmps
mov
xchg
fisubr
dec
enter
lea
fisttp
push
je
cmp
mov
add
in
movs
ret
inc
adc
push
adc
nop
(bad)
push
sbb
sbb
push
inc
or
imul
mov
xlat
jmp
jb
cmps
dec
jae
in
fs
(bad)
or
ficomp
xchg
add
mov
xlat
inc
add
push
xor
pop
or
or
add
add
dec
sbb
xor
adc
sbb
mov
js
or
inc
call
(bad)
test
and
push
push
adc
xchg
mov
and
lea
mov
cmps
add
iret
jno
retf
aad
adc
ins
cmps
cs
bound
add
xchg
adc
push
inc
lods
push
jae
fisubr
mov
pop
mov
or
stos
js
cmps
fld
push
stos
mov
adc
jns
leave
sbb
pushf
in
mov
and
in
push
adc
es
out
add
sahf
lods
fld
add
cmp
gs
aas
add
inc
bound
mov
mov
popf
push
pop
lods
jne
pop
inc
inc
clc
inc
repnz
loopne
stos
daa
mov
clc
jns
stos
popf
inc
(bad)
mov
arpl
es
xor
mov
cmp
in
push
mov
xor
in
add
and
push
sbb
imul
mov
call
cmp
adc
mov
adc
cdq
mov
test
xor
nop
in
adc
inc
sbb
cdq
inc
inc
pop
das
push
aaa
loopne
xchg
retf
aaa
mov
mov
lahf
mov
das
inc
mov
rcl
loope
push
rcl
cmp
dec
fdiv
mov
mov
dec
bound
xor
push
fsubp
ror
fst
dec
lods
fisubr
or
add
in
inc
xor
dec
adc
sbb
sbb
adc
dec
fist
add
(bad)
aaa
mov
fwait
add
imul
clc
mov
mov
inc
cmp
xchg
inc
xchg
mov
and
scas
mov
ret
mov
jecxz
sbb
dec
jmp
pop
cmp
xor
pop
add
call
in
cmp
pushf
push
jnp
enter
or
ret
adc
ficom
loopne
cmps
mov
xchg
(bad)
imul
stos
inc
ins
mov
cld
cmp
cmp
xor
pop
pop
(bad)
mov
pop
push
sahf
jecxz
pushf
outs
cmps
fdivr
cmp
push
repnz
dec
mov
inc
repnz
fsubr
js
dec
in
test
lock
sub
daa
adc
inc
xchg
add
push
les
sbb
and
or
(bad)
cmp
sub
jno
test
rcl
cmps
imul
dec
loope
push
mov
ins
xlat
ja
adc
loop
push
sub
dec
or
mov
push
sub
push
je
push
inc
loop
fstp
pop
mov
cmp
dec
aaa
sbb
pop
mov
xchg
xchg
pop
or
push
mov
daa
daa
and
in
fld
cmp
mov
push
mov
mov
add
jns
and
jne
pop
mov
mov
push
jb
lock
cmps
bound
aaa
dec
ret
ds
add
push
pop
mov
aaa
jbe
hlt
ins
pop
rol
cmp
ins
movs
xchg
inc
adc
enter
adc
shl
int
cmp
xor
imul
lods
or
jge
in
aad
arpl
add
cmp
pop
pop
adc
add
pop
mov
mov
xchg
push
pop
movs
push
outs
pop
popa
test
jb
rol
inc
sub
adc
jmp
daa
dec
pop
cdq
add
loope
(bad)
mov
int
dec
mov
js
movs
fwait
mov
ror
pop
mov
fidiv
mov
or
and
ror
loope
add
sub
dec
jo
add
mov
movs
or
and
aas
xchg
add
jge
sub
sbb
pop
mov
cmp
rcr
cs
push
mov
sbb
xor
inc
(bad)
xor
dec
sbb
and
cld
mov
shl
jnp
or
and
mov
std
add
lock
or
hlt
in
ss
and
pop
sbb
cdq
adc
jns
add
cmp
push
push
sbb
ret
push
sub
rol
xchg
loope
xchg
mov
popf
or
fwait
add
div
mov
push
push
idiv
sbb
les
xchg
xlat
cdq
popf
cld
mov
adc
ret
pop
push
sti
nop
imul
xor
clc
ins
dec
jecxz
lea
inc
jne
adc
mov
sbb
sahf
das
jo
cmps
mov
or
arpl
cmp
dec
adc
add
loopne
or
cs
jns
popa
popa
loope
pop
test
fnstsw
mov
and
and
xchg
aas
inc
test
push
aad
push
test
jae
call
inc
imul
mov
mov
loope
inc
cmp
push
xchg
or
push
xchg
cmp
push
inc
push
aas
add
add
dec
aam
xchg
or
jne
popaw
fidiv
pop
add
push
jg
ss
ja
dec
inc
mov
jmp
mov
aas
pop
cs
add
pop
mov
adc
or
add
sub
adc
adc
adc
add
adc
adc
sub
inc
add
or
mov
or
cs
aas
push
jno
mov
cmp
adc
push
in
lds
aaa
or
mov
sbb
add
fcomp
jmp
inc
retf
dec
push
mov
sub
in
xchg
test
ror
add
sti
cmp
push
add
push
cmovo
lea
lods
lock
rcl
mov
dec
pop
cmc
dec
inc
gs
adc
adc
mov
retf
mov
add
adc
adc
adc
jecxz
push
scas
stos
pusha
fsub
int3
or
push
push
mov
rol
pop
xor
mov
aam
pop
dec
movs
(bad)
mov
mov
sub
icebp
or
push
adc
add
(bad)
mov
(bad)
fdivr
add
adc
mov
rol
mov
and
cmp
inc
pop
cmps
adc
shl
or
xor
mov
sub
out
rcl
jl
adc
loopne
cmps
xchg
mov
in
pop
mov
test
or
push
pop
pop
adc
les
dec
and
pop
call
xchg
mov
movs
repz
or
addr16
test
test
mov
movs
pop
xor
dec
std
mov
add
push
in
lods
pop
pop
outs
inc
stos
xchg
lea
call
xor
ins
jecxz
pushf
(bad)
mov
lahf
mov
sbb
and
mov
push
push
daa
jo
or
and
and
sub
mov
sbb
sbb
mov
lahf
inc
outs
jp
ins
or
jne
in
hlt
inc
and
cmp
cmp
xor
mov
dec
mov
jae
fist
sbb
or
dec
add
mov
cmp
call
and
mov
dec
shl
adc
sbb
sbb
sub
xor
shr
xor
xor
xor
inc
xor
push
push
sub
add
and
pop
push
pop
rcl
xchg
add
sti
mov
sbb
das
rol
adc
aaa
sbb
jp
and
push
js
hlt
je
arpl
add
sub
out
dec
je
and
mov
push
or
repnz
and
enter
in
add
icebp
aam
mov
mov
fadd
jmp
hlt
adc
lods
jmp
mov
and
inc
inc
outs
jg
popa
sbb
inc
cmp
jne
push
add
cmp
sub
pop
adc
or
sbb
cmp
sub
sub
movs
pop
add
add
pop
add
cmp
push
dec
scas
inc
xchg
sub
mov
mov
repz
sahf
push
(bad)
in
sub
rol
inc
fisttp
sbb
shl
call
pop
jne
mov
scas
movs
mov
sbb
arpl
mov
push
mov
dec
mov
mov
and
xor
push
test
fild
push
daa
pop
pop
out
test
arpl
imul
jno
iret
sub
cmp
lahf
mov
add
or
jp
and
inc
out
dec
mov
mov
dec
push
in
scas
inc
call
cmc
ins
dec
pop
pop
adc
hlt
mov
jge
lock
dec
mov
(bad)
and
bound
outs
xchg
pop
test
push
push
dec
mov
jo
mov
adc
cmp
mov
xor
pusha
mov
sbb
jns
sub
fs
inc
inc
mov
hlt
inc
adc
sbb
sbb
daa
pop
out
sbb
mov
mov
ss
ret
in
es
xchg
mov
pop
ret
or
repnz
rol
and
jle
divps
sub
jbe
inc
xlat
dec
adc
dec
or
adc
push
sbb
mov
add
add
fldenv
adc
or
dec
idiv
inc
push
push
inc
daa
fadd
in
pop
dec
mov
cmp
mov
pusha
test
lods
and
and
add
in
sar
cmc
lea
sbb
call
int3
add
push
inc
adc
jmp
cmp
cmp
push
push
mov
mov
dec
jecxz
mov
xor
and
icebp
mov
xor
cmp
dec
lea
sbb
pusha
mov
in
xor
xor
enter
sub
push
mov
cmp
mov
xor
or
cmp
jo
dec
jmp
or
sbb
mov
in
sub
push
xor
adc
xchg
sbb
mov
pusha
or
cmp
clc
sbb
xchg
xchg
call
xchg
mov
lds
pop
ret
or
xor
mov
(bad)
repz
jl
daa
rol
fnstcw
push
push
mov
daa
ins
push
mov
ja
je
adc
or
arpl
xlat
pop
cs
push
and
dec
dec
pop
stc
mov
jle
xchg
ja
sub
fdiv
adc
cmps
loope
sub
cli
inc
std
test
repz
sar
cmp
scas
test
das
repnz
scas
add
and
cmp
outs
test
jmp
jl
sub
pop
dec
rcl
test
pop
in
ror
call
lock
inc
sar
call
fsubr
add
rol
fmul
or
push
jno
cld
mov
push
inc
mov
movs
sub
scas
inc
cmp
push
loope
mov
or
xchg
and
fbld
jnp
inc
test
mov
inc
xchg
jne
and
stc
adc
les
ret
shl
test
push
jp
cmp
sbb
cld
fwait
(bad)
fisubr
add
sbb
hlt
or
lock
fnstsw
mov
ins
fsubr
dec
call
push
or
add
lock
sub
add
inc
imul
xchg
test
in
out
pop
stos
or
(bad)
ins
sbb
add
(bad)
mov
add
loopne
daa
mov
cmps
sbb
jmp
pop
popf
test
sub
mov
jmp
or
sbb
sbb
and
or
push
ret
lahf
inc
movs
mov
pop
lds
outs
les
mov
icebp
inc
cdq
xchg
mov
mov
sar
cdq
and
or
out
add
mov
mov
clc
adc
or
stos
lock
bound
xchg
cmp
add
mov
add
scas
inc
ret
aam
xchg
mov
xchg
dec
cli
jmp
push
xchg
cli
add
add
repz
jnp
cs
fcmovnbe
sub
mov
lds
mov
sub
add
pop
mov
sti
push
mov
popa
inc
fs
shr
mov
sbb
jb
mov
push
jbe
xor
lea
fld
mov
popf
mov
adc
mov
xchg
popf
cmp
mov
je
add
cmp
rcpps
adc
adc
sbb
int3
call
loope
inc
pop
mov
pop
icebp
add
adc
inc
div
sbb
inc
add
sbb
mov
test
inc
jmp
lds
and
jne
dec
fnstcw
test
jne
mov
je
push
adc
scas
mov
sahf
pop
or
mov
push
dec
dec
movs
adc
mov
arpl
call
mov
and
mov
adc
leave
test
lock
pop
sbb
push
imul
adc
jmp
clc
lock
call
cwde
and
lea
test
daa
pop
ficom
adc
imul
cmp
(bad)
dec
loop
scas
dec
add
push
fs
js
adc
push
cmp
xor
ins
aad
sbb
adc
mov
adc
add
fs
loope
addps
dec
or
sub
cmp
loopne
add
adc
add
fst
aaa
fsub
mov
aam
cmp
aam
mov
lea
js
push
xor
stc
push
jle
jp
adc
or
or
ror
add
adc
pop
sub
or
(bad)
add
cmp
add
and
pop
mov
jnp
adc
cli
imul
push
ins
fisub
mov
add
add
pop
push
adc
shr
enter
sbb
or
jmp
sub
mov
push
inc
or
mov
xor
pop
test
cmp
enter
mov
clc
pop
rol
sub
add
sbb
in
(bad)
mov
dec
mov
jo
enter
adc
lds
cmp
sbb
iret
arpl
xor
and
adc
popf
cmp
xchg
in
sbb
mov
mov
pop
and
mov
sbb
call
(bad)
adc
call
ds
xor
dec
movs
loopne
lock
mov
test
mov
imul
test
pop
in
fnstsw
sbb
dec
ins
call
push
push
adc
xor
in
loopne
in
mov
cmp
cwde
mov
cmps
dec
ins
add
lock
ja
mov
(bad)
pop
jne
dec
jae
xor
shl
sbb
arpl
aas
push
xchg
loope
out
outs
xor
jb
scas
or
push
mov
push
fistp
(bad)
call
addr16
push
test
test
ror
inc
cmp
dec
enter
push
mov
and
adc
sbb
scas
sbb
int3
shr
call
add
je
sub
add
and
sbb
pop
outs
mov
or
jmp
and
jg
hlt
sar
cmp
jp
push
dec
jne
(bad)
daa
pop
dec
test
xchg
in
xchg
arpl
xlat
adc
pop
adc
push
mov
and
nop
nop
inc
cmp
loopne
pop
dec
xor
imul
cmps
sub
cmp
add
fisttp
push
cmp
pusha
add
xor
sahf
and
ja
and
lahf
add
(bad)
pop
inc
sbb
in
mov
dec
cli
sbb
mov
gs
sbb
gs
adc
xchg
add
pop
not
sub
inc
push
adc
adc
and
and
sbb
add
sbb
test
xchg
sub
mov
(bad)
retf
enter
cs
mov
and
fcom
cmp
pop
push
xchg
mov
fs
add
sub
cld
cmp
and
adc
mov
je
je
add
inc
daa
aas
mov
mov
add
sbb
icebp
test
out
enter
jg
test
xchg
mov
jl
mov
sub
xlat
mov
retf
sbb
cmp
pop
xchg
pop
and
pusha
aam
mov
adc
call
add
jle
or
mov
sbb
push
xor
jp
dec
dec
add
rol
add
push
mov
mov
test
or
(bad)
push
or
mov
pop
push
in
mov
enter
inc
adc
xchg
sbb
lock
lock
rcr
pop
(bad)
ins
jecxz
mov
xor
dec
inc
jge
and
dec
adc
into
aad
aaa
pop
xchg
lea
pop
dec
pop
clc
sub
jo
in
sub
hlt
adc
ret
(bad)
imul
push
out
pusha
add
ins
lock
or
int
jmp
pop
ss
outs
add
leave
dec
xlat
data16
ret
inc
or
pusha
mov
mov
scas
aam
out
cmp
inc
add
push
xlat
inc
pushf
mov
imul
push
pop
adc
mov
mov
nop
out
add
jno
sub
test
rcl
inc
adc
mov
arpl
sbb
iret
ret
add
pop
lahf
es
mov
mov
(bad)
pop
and
pop
call
pop
fiadd
and
xchg
mov
mov
xor
and
and
loop
dec
shl
or
adc
out
or
inc
and
jo
add
add
xor
cmps
aaa
or
add
je
dec
sub
movs
outs
add
jmp
cmp
mov
add
jbe
push
adc
dec
jae
xor
cmp
push
or
pop
xchg
retf
pop
je
and
(bad)
pop
jbe
cmp
cmp
mov
je
cmp
or
and
test
inc
mov
in
cmp
xor
adc
fstp
or
xchg
mov
pop
mov
xchg
scas
mov
(bad)
push
cmp
sub
jmp
mov
dec
sbb
js
gs
jne
shr
add
(bad)
das
inc
retf
ja
mov
add
mov
not
cld
fld
inc
stos
adc
leave
jo
out
pop
add
add
movs
lods
jno
add
fist
and
inc
adc
xchg
and
loopne
or
or
in
jecxz
scas
push
(bad)
jg
sbb
lods
jae
pop
cmp
push
mov
lods
in
out
and
or
sbb
fbstp
popf
sbb
adc
jns
nop
movs
jl
lods
inc
gs
add
add
mov
adc
fimul
inc
pop
sbb
out
or
repz
loope
pop
push
xlat
je
sbb
adc
add
add
repnz
pop
pop
loopne
retf
dec
jb
adc
adc
jo
push
mov
mov
into
add
push
test
cmp
(bad)
bound
or
pusha
cmp
mov
test
idiv
xor
xchg
rol
mov
cmp
in
retf
out
pusha
add
rcr
pop
test
aam
mov
or
pop
jne
les
mov
in
dec
xchg
js
out
cmp
push
xor
mov
xchg
add
inc
or
push
loope
ins
call
sbb
lods
pop
stc
sub
push
cmp
fstp
je
and
inc
ins
xor
sar
mov
push
pop
pop
pop
or
sub
rol
jp
push
shr
mov
lds
je
(bad)
add
xchg
jg
and
push
adc
adc
adc
add
ror
fiadd
pop
mov
or
stos
sbb
fcomip
bound
nop
out
jg
or
aam
xchg
inc
lahf
push
and
enter
mov
gs
mov
mov
int3
pop
sti
test
imul
push
lea
movs
add
jo
fadd
fs
xor
or
sub
mov
pop
lea
adc
jecxz
add
push
aaa
mov
pop
shl
sbb
sub
retf
nop
or
int
das
push
fisttp
out
add
loope
mov
neg
rol
inc
mov
cmp
adc
lea
sbb
sti
sbb
and
or
push
rcl
cmp
sbb
mov
ror
pop
pop
add
push
inc
ret
cmp
nop
dec
mov
add
pop
arpl
mov
add
pop
add
jo
loope
dec
xlat
mov
pop
adc
xchg
cmp
xchg
test
and
inc
jne
sub
mov
es
and
jo
mov
jg
add
mov
addr16
cmp
dec
out
ss
push
iret
push
mov
adc
imul
mov
push
enter
iret
test
fld
lea
sbb
or
in
dec
and
push
sub
shr
mov
mov
xor
cmp
inc
fst
loop
dec
in
popf
cmp
adc
cmps
sbb
fstp
cmp
push
or
dec
shl
popa
loopne
dec
mov
add
push
jmp
pop
xchg
pushf
mov
or
pop
aad
scas
pop
call
cdq
or
aas
in
mov
retf
in
in
dec
xor
test
scas
jg
rcl
inc
xchg
mov
mov
js
and
js
add
push
out
mov
xor
mov
or
xor
cmp
xchg
pop
cmps
sub
dec
push
dec
pop
and
shrd
dec
gs
xlat
dec
push
ins
sub
sbb
cmp
mov
jbe
mov
xchg
and
jmp
loopne
pop
mov
sar
or
ret
repnz
pmulhuw
push
imul
push
ret
pop
nop
scas
sar
rcr
leave
test
adc
jg
xchg
pop
push
jmp
mov
adc
add
or
xchg
adc
shl
mov
add
lods
adc
mov
push
dec
dec
mov
pop
mov
ja
movs
clc
and
call
and
add
ret
push
das
inc
or
call
xlat
or
xor
cmp
adc
fcomp
jo
(bad)
xchg
xchg
xchg
rcr
xchg
sti
sub
sub
dec
mov
inc
mov
lds
fs
dec
mov
pop
int
add
jno
inc
call
lods
xchg
enter
push
jo
movs
mov
cmp
and
cld
push
neg
xlat
ret
inc
xor
mov
(bad)
mov
test
add
or
loope
je
add
call
pop
sub
mov
push
xor
outs
dec
pusha
(bad)
test
add
xchg
cmp
ror
push
(bad)
jo
adc
add
adc
cmp
push
shr
push
push
in
outs
mov
je
add
add
push
inc
mov
sub
push
xchg
fimul
jo
mov
pop
push
pop
mov
push
xor
lea
pop
ss
dec
add
dec
inc
fild
add
movs
loopne
ins
and
fbld
cdq
fdiv
retf
inc
imul
push
pop
imul
add
dec
pushf
push
movs
sbb
or
test
adc
icebp
shr
cwde
xchg
outs
add
mov
sub
aas
test
pop
fcomp
inc
xchg
hlt
mov
aad
pusha
mov
cwde
mov
gs
mov
or
nop
mov
call
adc
adc
mov
sbb
xor
nop
jbe
jnp
das
arpl
test
add
mov
sar
sbb
fcom
pusha
push
adc
pop
mov
mov
imul
jne
sbb
or
jbe
and
mul
aam
(bad)
fucomi
or
stc
les
movs
push
ret
jo
pop
pop
pop
test
mov
inc
pop
pop
cmp
xor
mov
cmp
jbe
(bad)
mov
dec
test
sti
fistp
and
or
dec
add
imul
adc
sbb
dec
icebp
retf
add
push
and
sub
adc
dec
adc
out
adc
rol
inc
mov
dec
pop
fiadd
inc
xchg
cmps
les
add
fs
cld
out
pop
mov
dec
ins
xor
mov
adc
push
inc
lods
add
jmp
xor
shr
and
or
dec
dec
outs
ja
inc
add
or
add
adc
ret
add
adc
push
loopne
fiadd
xchg
xchg
inc
add
outs
or
jo
imul
mov
add
pop
xlat
enter
and
jb
add
xchg
cmp
jb
or
add
xor
ss
or
les
or
cmp
cmp
cmp
addr16
inc
dec
push
sub
dec
shr
in
retf
lods
shl
xor
cwde
or
out
fisttp
xlat
pop
cmp
xchg
mov
adc
in
inc
add
inc
and
adc
jnp
cld
retf
mov
mov
sub
sub
sub
aad
cmp
out
arpl
inc
sahf
mov
sbb
cwde
lock
adc
mov
call
outs
inc
dec
xchg
fist
retf
inc
jne
dec
jo
jb
adc
cmp
movs
jmp
xchg
xor
mov
add
sub
adc
pop
sub
std
scas
jb
lods
sbb
and
out
or
fstp
xchg
mov
or
retf
dec
adc
gs
xor
mov
mov
cs
or
sub
lock
push
cwde
repz
lea
pop
mov
xchg
lds
push
enter
jb
pop
cmp
inc
cs
xchg
mov
je
pop
fs
enter
rcr
movs
xchg
add
mov
inc
or
push
cmp
je
mov
push
daa
push
and
add
inc
push
and
and
push
jne
adc
adc
add
add
iret
xor
or
das
push
scas
je
jae
data16
mov
sub
leave
sbb
js
mov
dec
test
add
or
ins
sti
fnstcw
xchg
fbld
icebp
je
cmp
outs
inc
call
mov
adc
std
or
rcl
adc
cmp
mov
jmp
arpl
mov
mov
das
or
je
mov
push
addr16
inc
call
add
mov
pushf
mov
sar
dec
mov
repz
inc
call
mov
cwde
xchg
jl
daa
and
jo
and
xor
aad
push
nop
dec
or
ss
push
adc
jo
add
js
dec
pushf
test
mov
std
fsubr
jmp
add
mov
adc
xor
xlat
nop
icebp
inc
data16
xchg
and
lock
(bad)
cmp
test
add
pop
sbb
fs
hlt
cmps
xchg
cmp
call
and
movs
sub
xchg
sbb
(bad)
popa
or
movs
das
inc
imul
pop
adc
ficomp
xor
pop
je
mov
shl
daa
jns
push
push
aas
or
nop
mov
mov
shufps
movs
or
setnp
call
nop
pusha
inc
fcmovnb
push
mov
(bad)
cmp
je
mov
fidiv
push
and
js
inc
push
adc
sbb
xchg
fmul
or
scas
pop
pop
pop
xchg
push
pop
xchg
or
(bad)
fsubr
sub
cmp
jge
enter
maxps
(bad)
hlt
push
stos
sub
and
push
dec
outs
pop
jecxz
in
dec
clc
jae
sbb
adc
jle
iret
sbb
xor
sub
ja
push
adc
out
(bad)
mov
push
mov
daa
mov
or
lea
add
mov
push
(bad)
sbb
push
push
xchg
into
imul
sbb
dec
shl
leave
je
xchg
test
mov
mov
rcl
int3
stos
mov
(bad)
fs
enter
jae
mov
mov
inc
shl
mov
pop
retf
xor
bound
jle
mov
pop
inc
push
js
shr
ret
and
je
cmp
int3
xor
lock
pop
xchg
dec
cmc
dec
lea
add
in
or
push
jnp
int3
mov
sbb
fdivr
add
cmp
add
or
push
inc
add
sbb
cwde
fs
or
call
sbb
adc
rcl
push
rcl
xchg
repnz
push
sbb
jb
push
or
push
add
pusha
add
nop
mov
and
lock
jge
(bad)
pop
aas
rcr
sbb
push
pop
cmp
xor
inc
js
mov
nop
outs
stc
daa
ins
rol
mov
mov
dec
lock
xchg
xor
dec
sub
daa
scas
loop
and
push
data16
or
mov
or
std
int
or
sub
mov
push
or
dec
dec
push
dec
jmp
sbb
push
inc
ss
adc
jp
dec
add
and
fcomp
xchg
jne
inc
adc
adc
hlt
cmp
je
or
mov
mov
mov
jecxz
pop
js
inc
or
xchg
loopne
ret
addr16
push
inc
mov
or
scas
cmps
test
inc
push
dec
push
add
xchg
or
lds
lock
add
adc
outs
xchg
mov
push
ret
push
adc
xor
sbb
test
inc
loop
xchg
push
pop
rcr
xchg
mov
xor
cmp
push
or
xchg
clc
bound
jmp
add
push
popa
add
sbb
outs
ss
lock
xor
ret
or
cwde
dec
fxch
mov
xor
in
push
cmp
dec
pop
add
xlat
popa
add
add
mov
fdiv
je
cmp
add
jmp
xchg
aas
cmp
mov
cmp
pop
or
and
ficom
sub
ins
icebp
fisttp
cmp
and
test
xor
in
sbb
or
or
sub
les
loop
ins
shl
or
dec
add
loop
add
stos
or
mov
mov
into
pusha
xor
push
or
jno
jmp
inc
xor
add
push
fmul
mov
pushf
lea
mov
je
stc
mov
loop
xor
xchg
sbb
pop
call
dec
in
and
inc
imul
adc
pop
lods
push
fsubr
test
lods
fsubp
push
add
inc
fsubr
add
mov
xor
pop
(bad)
or
or
and
cwde
or
or
adc
pusha
adc
add
add
add
xchg
xchg
cmp
xchg
inc
adc
mov
out
test
(bad)
fbld
shl
inc
fmul
fild
fsubp
or
inc
sbb
daa
xor
ss
dec
inc
or
imul
nop
adc
mov
add
mov
ins
adc
cmp
jmp
xchg
push
clc
adc
xor
and
mov
outs
push
mov
and
je
mov
sbb
or
(bad)
xchg
nop
rcl
mov
cli
cld
clc
mov
pop
repnz
sar
(bad)
pop
fstp
sbb
xchg
lock
pop
adc
aas
and
pop
mov
dec
aas
loopne
sub
ffreep
inc
stos
push
or
(bad)
sbb
loopne
push
push
dec
loop
sub
cmps
mov
cmp
adc
loopne
adc
inc
out
push
add
repz
xor
fisub
inc
mov
pop
mov
lahf
mov
bound
and
ret
inc
adc
mov
enter
pop
or
sti
and
ins
xchg
add
jmp
jge
inc
scas
sub
jge
in
dec
adc
lahf
jl
add
popw
add
mov
dec
pop
lds
test
cwde
rcl
push
push
fsubr
dec
dec
pop
addr16
sub
push
push
push
lods
inc
bound
mov
es
push
mov
dec
std
push
cld
fs
or
lahf
jmp
sbb
pop
or
push
out
mov
scas
mov
or
inc
add
adc
dec
and
in
mul
push
stos
sub
sub
cmp
push
test
and
mov
dec
adc
sub
ja
std
fidivr
(bad)
aaa
call
inc
loopne
dec
in
jge
in
or
inc
in
push
xor
or
sbb
inc
pusha
test
xchg
inc
or
inc
mov
shl
scas
mov
mov
out
mov
pop
addr16
nop
push
rcl
mov
imul
mov
xchg
fisttp
adc
vxorpd
push
cmp
xchg
add
add
push
je
push
lock
sbb
xchg
cmp
adc
mov
or
ret
movs
pop
or
inc
adc
loopne
ja
pop
cmp
sbb
xchg
or
sbb
pusha
mov
sub
xor
in
xchg
movs
les
pop
retf
add
cmp
pusha
mov
pop
xor
jle
and
outs
sbb
add
jmp
les
inc
jae
adc
sbb
jp
adc
aam
pop
push
jbe
inc
fadd
les
push
mov
pop
cwde
inc
fdiv
xchg
mov
jne
jle
xchg
out
xor
(bad)
jmp
addr16
and
sbb
and
xor
fisub
or
xlat
inc
pop
sbb
hlt
inc
add
dec
jmp
or
jne
call
std
push
out
or
or
mov
and
jmp
inc
aad
adc
push
lea
jne
pop
mov
(bad)
les
into
mov
(bad)
xchg
xchg
pcmpeqd
xchg
xor
jmp
pop
mov
pusha
jne
rcr
or
mov
add
dec
mov
add
dec
jge
sub
push
and
or
xor
xor
sbb
jno
push
mov
inc
inc
fsubrp
adc
or
jo
or
pop
jg
jno
push
lahf
xchg
or
xor
cdq
and
adc
in
push
lds
sub
and
or
xor
icebp
pop
add
or
dec
in
arpl
loop
(bad)
lock
outs
xor
adc
jge
push
rol
icebp
or
pop
pusha
add
jp
aad
mov
mov
inc
test
push
push
out
mov
inc
dec
push
cld
outs
sbb
add
jmp
mov
call
addr16
push
sub
ret
mov
and
cmc
arpl
push
pop
add
and
inc
test
test
shl
xchg
add
push
pop
cmps
add
test
push
or
add
or
or
pop
sbb
jmp
mov
ret
loopne
cld
daa
test
cdq
push
rol
push
jmp
pop
add
mov
sbb
jb
mov
cdq
mov
rcl
popf
jno
int3
mov
jb
add
sbb
cmp
xchg
mov
add
push
and
lock
jecxz
(bad)
jo
test
jbe
out
sub
ins
mov
or
adc
mov
sub
sub
mov
or
sub
cmp
or
sbb
push
adc
cmp
fs
sub
cmp
call
rcl
sahf
retf
or
push
jmp
hlt
loope
repz
push
add
push
or
movs
test
mov
xchg
adc
(bad)
call
pop
dec
jp
addr16
add
mov
pop
fiadd
inc
loopne
pop
shl
(bad)
arpl
pop
and
int
repz
int
sbb
and
or
inc
and
bnd
pop
jae
imul
xchg
jmp
retfw
mov
div
int3
inc
add
or
sbb
sub
mov
and
or
dec
xlat
in
push
cmp
mov
jmp
mov
out
mov
sbb
push
xchg
and
sti
and
ja
and
imul
cmc
cmp
cdq
js
xchg
inc
jns
ds
mov
adc
sbb
push
inc
mov
ucomiss
jne
sub
mov
or
fisub
push
fwait
les
add
clc
pop
push
imul
cmp
mov
mov
or
sub
inc
inc
jo
es
(bad)
jmp
sti
retf
cmp
mov
clc
dec
and
ja
pop
daa
dec
adc
xlat
sbb
and
xor
and
push
xor
mov
adc
or
jmp
xor
xor
pop
clc
scas
mov
push
pusha
push
(bad)
cmps
sbb
out
mov
lock
sbb
je
rol
cs
and
cld
dec
sbb
sar
aas
cmp
scas
neg
shr
or
cmp
and
pop
jg
adc
pop
add
cmp
cdq
pop
cld
sbb
push
test
inc
xor
gs
xor
and
xchg
or
push
or
jmp
push
mul
ret
mov
adc
out
out
mov
retf
gs
and
inc
bound
cmp
daa
adc
in
stc
test
mov
cmp
loop
add
mov
ret
test
mov
addr16
fist
movs
addr16
outs
into
add
mov
sbb
adc
shl
dec
cmp
pusha
dec
mov
mov
sbb
adc
movs
push
push
retf
dec
fmul
das
jle
mov
xor
adc
pusha
push
stos
mov
add
add
icebp
and
cmp
in
and
and
or
xchg
in
push
shr
enter
dec
cmp
mov
add
or
xor
(bad)
mov
cmp
fldenv
es
jne
ret
int3
pop
add
pop
imul
(bad)
add
xlat
pop
(bad)
clc
or
jne
xor
and
xchg
jmp
in
mov
dec
and
cwde
inc
sub
dec
and
pop
inc
add
pop
xor
nop
dec
mov
xchg
add
mov
add
pop
cmp
add
pop
into
xor
lods
pop
mov
push
push
stc
mov
cli
mov
push
dec
cmp
dec
and
mov
sahf
sub
(bad)
mov
leave
jmp
mov
mov
fs
and
jb
int3
in
and
add
add
lods
add
add
movs
mov
jno
mov
or
daa
or
adc
add
push
je
stos
or
sub
or
push
or
out
dec
mov
ret
xor
push
and
pop
fcmovnbe
inc
add
adc
adc
adc
pop
lahf
xchg
adc
adc
push
fwait
mov
arpl
pop
mov
in
or
popf
xor
or
les
rcr
pop
adc
sbb
shr
xchg
icebp
add
jl
jle
push
jg
adc
add
jle
(bad)
mov
hlt
mov
leave
push
cmp
cs
sub
enter
dec
out
xchg
aad
movsx
or
pop
and
shl
fsub
lods
sar
mov
sbb
jecxz
sbb
test
or
loop
xor
mov
fmul
cld
sahf
add
push
test
ror
or
pusha
dec
in
fimul
xlat
push
jmp
jl
scas
jmp
mov
xchg
mov
mov
(bad)
clc
cwde
mov
gs
cdq
test
pop
dec
std
push
mov
repz
aas
dec
mov
arpl
hlt
dec
fwait
sbb
pusha
imul
xlat
repz
pop
aas
ror
pop
repnz
adc
dec
sub
push
in
in
xor
scas
pop
retf
push
scas
mov
movs
retf
movs
enter
sbb
mov
psrad
push
sub
(bad)
mov
dec
xor
push
mov
pop
inc
daa
lea
daa
mov
push
movsx
test
pop
inc
aaa
rol
shr
sub
or
repnz
dec
mov
pop
inc
stos
xor
push
sbb
and
shr
std
ret
jnp
shl
or
sub
sub
sub
shrd
inc
ds
or
xor
mov
out
pop
inc
xlat
push
push
xor
int3
lock
or
adc
inc
mov
xchg
and
sbb
push
xchg
jp
xchg
and
or
cmp
pop
push
xchg
nop
mov
push
outs
push
inc
inc
jl
push
lods
popa
push
outs
xor
les
or
adc
mov
jle
inc
jo
push
or
adc
cs
cmps
es
jle
adc
or
xchg
cmps
xor
adc
shr
cmp
push
mov
mov
push
(bad)
div
call
int3
dec
pop
jo
xchg
add
pop
add
call
add
test
add
add
push
bound
mov
and
daa
adc
pop
sub
mov
(bad)
or
jg
movs
in
xor
pop
cwde
je
cmp
in
sbb
inc
scas
adc
and
xlat
sar
cmp
test
ret
push
pop
or
dec
ret
test
test
lods
scas
hlt
push
and
(bad)
(bad)
dec
dec
pop
mov
dec
ins
push
add
adc
push
test
add
mov
ja
adc
push
push
test
popa
cmps
mov
outs
aam
push
cmc
or
mov
cmp
push
dec
mov
jo
pop
add
(bad)
pop
add
(bad)
out
add
mov
daa
cmps
mov
and
imul
pop
sbb
adc
jl
jmp
into
push
loop
scas
fsub
inc
icebp
push
jg
or
nop
inc
cmps
std
sar
mov
push
xor
inc
fidivr
sbb
pushf
mov
loop
sub
pop
sub
movs
sti
out
ret
hlt
jmp
push
and
sahf
or
test
(bad)
sub
ins
cmovns
adc
push
add
push
jno
adc
jecxz
push
sub
inc
or
(bad)
inc
fdivr
push
ror
xchg
cmp
int
mov
(bad)
sti
adc
(bad)
lahf
(bad)
xor
xchg
sbb
xor
repnz
xor
enter
mov
cmp
and
and
dec
xchg
jge
cmp
push
pusha
lock
inc
add
xor
xchg
lock
push
pop
pop
dec
ins
scas
fs
push
adc
mov
or
jns
xor
push
jmp
adc
adc
loopne
dec
js
pop
sub
fimul
sub
jbe
cmp
dec
stos
addr16
push
pop
inc
ins
xor
in
mov
adc
mul
xchg
inc
aad
jnp
pop
dec
pop
addr16
push
or
loopne
jmp
xor
pusha
ins
cli
mov
dec
jae
fbstp
jne
jb
fs
pushf
xchg
dec
push
sub
add
push
dec
or
add
sub
or
sub
sbb
and
mov
push
or
lods
adc
out
push
xchg
or
mov
mov
add
xor
enter
popf
sbb
jl
test
sbb
jl
sti
imul
and
sub
lods
inc
sub
aam
aaa
imul
sar
pop
pop
loope
or
aam
dec
test
dec
scas
or
sub
stos
gs
adc
pop
enter
pop
pop
loopne
and
nop
and
add
add
and
js
jmp
xchg
adc
daa
dec
daa
aam
(bad)
cmp
xchg
(bad)
pop
cmp
mov
jmp
cmps
push
aas
sub
inc
jb
pop
xor
pop
leave
or
adc
or
push
(bad)
ror
inc
mov
sub
sbb
cmp
cwde
push
pop
mov
xchg
mov
sbb
lods
rcl
adc
add
jns
or
fs
rol
test
push
mov
or
add
fcomp
inc
mov
add
fiadd
dec
dec
adc
adc
scas
sub
pusha
push
push
js
(bad)
(bad)
in
cmp
add
or
dec
dec
jg
add
retf
fistp
push
add
ins
cmp
push
add
gs
ds
lock
cmp
jns
(bad)
or
ss
sub
jae
mov
xor
and
dec
jmp
xchg
cdq
add
mov
or
pop
mov
je
add
fs
in
les
imul
out
mov
cs
sbb
fs
and
add
sub
add
test
jbe
dec
push
push
dec
dec
inc
or
sub
adc
out
and
cs
(bad)
sbb
add
ss
ret
loopne
sub
outs
shl
or
push
outs
push
pop
mov
sbb
pop
movs
xor
push
push
cmp
mov
sub
fistp
fs
pushw
and
out
pop
(bad)
cmp
je
dec
adc
adc
cmp
jnp
ds
sbb
mov
fcom
pop
sbb
add
mov
ror
adc
aaa
inc
call
(bad)
sub
add
mov
adc
dec
mov
jmp
cmp
xor
add
aam
push
dec
cmp
push
lods
sub
loope
jnp
cmp
jae
scas
xor
or
mov
jl
cmp
adc
xlat
enter
pop
ss
push
pop
pop
cmp
and
adc
movs
shl
and
push
add
fsub
das
retf
outs
pop
xchg
jo
call
call
in
and
int3
and
ds
adc
jo
adc
pop
add
mov
(bad)
in
dec
mov
and
add
js
mov
add
inc
add
xor
adc
add
mov
inc
add
or
cmp
scas
xchg
sbb
call
rol
and
movs
or
push
add
pop
fsub
push
mov
sub
and
add
and
pop
outs
in
dec
cmp
cmps
mov
mov
inc
icebp
pop
ret
mov
and
add
mov
imul
push
ret
push
rcl
sbb
dec
loop
add
adc
jmp
arpl
push
inc
jne
jmp
and
mov
xchg
out
cwde
dec
pushf
dec
mov
out
add
mov
sub
mov
(bad)
dec
pushf
cwde
cs
mov
cmp
inc
lahf
leave
or
lods
mov
and
rol
int
pop
push
clc
adc
sub
and
push
fwait
iret
sub
stc
push
pop
add
xchg
cmp
mov
and
adc
je
add
cmps
adc
or
mov
int3
add
adc
jns
and
lea
shl
pop
sbb
pusha
sti
scas
imul
cmp
dec
shl
scas
add
xchg
sbb
scas
add
push
dec
dec
rcr
sbb
js
out
out
inc
sub
mov
inc
nop
mov
aaa
xchg
ss
cwde
add
aam
or
lods
sub
ret
movs
jp
push
jge
adc
and
mov
lea
ds
mov
clc
mov
lea
adc
or
add
jmp
jmp
psraw
mov
aaa
xchg
or
int3
cmp
bound
les
sub
fldenv
inc
enter
pop
inc
or
cmp
sub
ins
push
jne
or
inc
inc
add
leave
push
pop
add
rol
jmp
or
mov
dec
cmps
adc
push
push
and
mov
cld
cmc
mov
popa
repnz
std
sbb
dec
inc
push
jo
sub
adc
inc
fucomip
pop
adc
pop
sub
dec
mov
nop
mov
ins
sub
(bad)
pop
jge
enter
addr16
shr
pop
inc
imul
(bad)
xor
(bad)
add
push
and
xor
mov
xor
jge
sbb
mov
repnz
dec
pop
ret
fcom
test
add
pop
pop
push
dec
adc
push
ds
adc
cld
inc
ss
aas
pushf
or
mov
or
or
dec
add
adc
dec
or
push
xchg
movs
rcl
loop
pop
or
xchg
fmul
aam
add
test
pop
adc
pop
or
scas
popf
cmp
dec
mov
adc
mov
jb
aaa
pop
lock
pop
in
mov
ret
add
out
fisub
xchg
jl
ret
inc
das
adc
hlt
jmp
imul
leave
dec
or
inc
inc
push
in
xchg
fsubrp
movs
push
pop
pop
or
add
add
nop
sub
dec
xor
imul
nop
dec
or
fadd
je
idiv
mov
and
jbe
shr
test
les
jb
test
mov
cmp
test
aam
out
icebp
jecxz
push
xlat
cmps
lock
sbb
lock
icebp
jl
in
jb
sub
test
movs
mov
call
or
repz
add
fist
mov
std
dec
sub
out
imul
daa
xchg
not
dec
sbb
dec
push
sub
jbe
call
mov
push
jmp
or
xor
jno
or
or
sbb
push
cmp
lea
fdiv
xor
ret
mov
adc
cmp
pop
and
cmp
jns
pop
pop
test
add
ja
push
adc
pop
sbb
sub
dec
lods
loopne
sub
outs
sub
push
add
cmps
pop
pop
in
push
loopne
add
mov
pop
or
sub
mov
push
test
les
jmp
and
pushf
adc
sbb
or
fstp
xor
mov
(bad)
les
xchg
push
ds
pop
sbb
sub
and
cld
outs
sbb
sub
adc
mov
ds
out
sti
cmp
or
xchg
mov
mov
cmps
push
iret
push
sbb
push
mov
xlat
jns
out
ficomp
and
pushf
sar
mul
add
outs
xchg
pop
dec
loopne
dec
inc
fdivr
repz
lods
sub
and
sub
pop
ds
retf
nop
pop
jnp
lds
clc
and
mov
sbb
xchg
les
cwde
dec
lock
add
xchg
das
lar
mov
sbb
or
and
sbb
push
fstp
iret
and
ret
cli
stos
movs
and
and
lock
or
sbb
icebp
aas
jnp
mov
pop
xor
cmp
jne
mov
fdiv
ret
icebp
fwait
jmp
mov
clc
mov
or
adc
idiv
es
cmp
mov
push
mov
pop
cli
je
arpl
neg
fcomp
rol
cmp
xchg
repz
imul
movs
sbb
and
mov
fst
xor
and
sbb
dec
add
xchg
or
shl
scas
inc
xor
ret
hlt
jnp
addr16
mov
int
into
pop
adc
push
nop
pop
cmps
jne
or
push
add
push
pop
add
xchg
movs
lock
lods
test
add
jp
add
sub
xor
jne
and
(bad)
call
mov
cdq
sahf
cmp
xor
les
pop
(bad)
inc
enter
add
inc
pusha
xchg
xor
xor
push
jl
mov
in
aaa
cmp
fidiv
sub
movs
pop
jo
push
cmp
daa
idiv
(bad)
and
pusha
xor
in
fdiv
nop
or
lea
test
add
fndisi(8087
xor
xchg
and
or
sbb
jno
mov
or
add
adc
push
mov
pop
or
ret
push
push
pop
push
dec
lahf
inc
or
pop
xor
push
add
in
jnp
sbb
repz
test
add
leave
ins
enter
shl
sar
add
adc
loopne
das
adc
clc
mov
imul
or
arpl
jne
cmp
xchg
xchg
or
dec
cmp
adc
aam
pop
test
scas
push
adc
xor
push
jg
imul
mov
test
scas
ins
test
inc
(bad)
leave
sbb
cdq
and
add
cmp
adc
dec
cmp
push
mov
aaa
xchg
nop
adc
shl
or
cmp
and
outs
sub
jge
dec
push
pop
push
imul
jecxz
sbb
mov
repnz
mov
xor
sbb
sbb
popf
pop
das
sub
cld
sub
mov
xchg
and
push
add
push
mov
xchg
cmp
das
sub
imul
test
(bad)
in
mov
inc
mov
xor
push
xor
test
fcomp
push
sbb
repnz
add
int3
inc
add
ret
in
dec
pop
jmp
and
pop
cli
popa
fnstcw
dec
out
sbb
and
push
jo
pop
enter
xor
adc
xchg
and
(bad)
call
push
cmp
mov
loop
mov
ret
je
mov
jne
adc
test
scas
inc
or
jmp
mov
and
xor
sub
movs
jae
pop
lea
out
fnsave
dec
adc
jmp
ffree
cmp
mov
jne
and
xchg
xor
push
add
gs
popa
jge
(bad)
xor
test
inc
mov
lods
inc
pop
imul
rcr
cli
xchg
xor
sub
sub
popa
cmp
cmp
xchg
and
dec
(bad)
jo
dec
leave
jecxz
push
in
ins
aaa
mov
add
stos
outs
pop
jns
add
cmp
lahf
cmp
add
xchg
ins
mov
das
inc
fistp
adc
(bad)
rcl
inc
aam
mov
imul
xchg
push
icebp
mov
pop
add
mov
ins
add
sbb
adc
inc
jmp
and
or
in
add
cmp
xchg
xor
cmp
imul
fdiv
into
xchg
xor
add
cmc
push
lea
add
ror
retf
pop
inc
adc
ins
aam
daa
jbe
fstp
test
les
fsubr
or
xchg
fmul
ss
test
les
retf
shl
out
push
add
sar
sbb
push
or
push
idiv
ins
ins
jne
fnsave
mov
mov
mov
and
shr
dec
test
add
mov
xor
add
inc
adc
sub
adc
cmp
adc
push
or
cwde
xchg
sar
lods
je
jecxz
enter
es
iret
pop
cli
arpl
or
pop
add
mov
mov
ficomp
add
sbb
or
dec
mov
mov
sub
std
push
inc
inc
xchg
and
mov
and
mov
pop
stos
mov
jle
in
cmp
dec
lahf
lods
jle
lds
jne
sub
sbb
jns
jne
sti
fisttp
add
sbb
ret
mov
jo
stos
and
cmps
ja
daa
jo
and
xchg
add
add
cmp
mov
or
pop
pop
sbb
xlat
into
ss
inc
and
movs
dec
(bad)
adc
mov
xor
or
pushf
ja
or
xchg
push
or
and
inc
sahf
add
sbb
add
xlat
cs
sub
sub
dec
push
cmps
fisub
mov
inc
jmp
mov
std
and
call
sub
mov
add
dec
sub
test
xor
mov
mov
and
sti
fs
xchg
or
call
adc
iret
ror
stos
sbb
jmp
sbb
or
aam
add
dec
xor
mov
lods
ficom
cdq
enter
inc
pop
iret
aaa
add
push
xor
les
repnz
lock
and
xchg
scas
adc
xchg
add
call
jns
scas
aas
xchg
xor
pop
jno
add
mov
lock
call
adc
pop
push
sub
mov
dec
je
ja
test
ins
dec
loopne
(bad)
jmp
les
out
call
ror
sti
cmp
outs
aas
sub
push
jbe
mov
push
cmp
push
sub
out
and
jl
xchg
adc
jnp
(bad)
je
cmovge
mov
cmp
and
jl
xchg
rcl
pop
pop
xchg
mov
fs
test
add
push
xchg
mov
scas
xchg
ret
inc
add
pop
sar
hlt
sub
mov
sahf
nop
adc
mov
ret
clc
jl
lea
inc
add
or
add
adc
popf
cmp
sub
adc
xchg
test
adc
add
fs
dec
add
out
movs
xchg
jmp
mov
sahf
adc
sbb
adc
fsub
mov
push
or
inc
or
mov
mov
scas
push
jb
std
shl
in
inc
sbb
les
push
push
push
scas
and
test
push
mov
arpl
mov
push
test
out
or
or
add
cdq
call
jp
retf
fimul
lahf
sub
xchg
sub
xchg
add
scas
enter
cmps
cmp
xchg
cs
push
cmp
dec
cmp
les
cs
arpl
lods
aad
loopne
nop
sbb
loopne
and
aad
inc
push
rol
mov
dec
pusha
or
std
add
pop
out
fs
cld
aas
dec
cmp
or
mov
fadd
fstp
inc
mov
jg
mov
je
inc
call
js
jge
mov
mov
dec
(bad)
shr
or
les
hlt
mov
mov
sbb
mov
add
and
(bad)
outs
and
ja
movs
enter
enter
add
xchg
mov
scas
mov
mov
aad
out
scas
call
push
rol
inc
dec
std
fdivr
mov
mov
ret
mov
jne
inc
pop
outs
sub
loop
adc
jmp
push
retf
popa
adc
scas
push
fld
jecxz
mov
repz
test
and
xchg
out
mov
sub
(bad)
mov
fsqrt
and
mov
fnstenv
ror
mov
imul
(bad)
dec
sbb
adc
or
adc
popf
and
jne
xlat
movs
sub
pop
xchg
ins
mov
ret
call
stc
jne
pop
js
(bad)
xchg
xchg
pop
pop
xchg
inc
daa
out
aas
rcl
adc
cmp
sahf
xchg
ret
pop
jne
push
imul
jb
cmp
adc
or
dec
dec
push
stos
and
push
pusha
mov
pop
scas
push
aaa
or
ret
movs
je
ins
mov
dec
push
jmp
push
and
cld
push
sbb
push
push
test
setne
mov
inc
cld
push
push
adc
inc
jo
enter
fld
xor
test
cmp
adc
sahf
fcom
push
inc
mov
pop
adc
cmp
sub
mov
or
out
sbb
movhps
adc
jmp
pop
adc
je
(bad)
pop
in
push
and
and
test
push
and
pusha
add
jno
jo
in
dec
rcl
xchg
or
shl
ins
adc
test
or
xor
jl
jmp
push
xchg
(bad)
mov
test
das
scas
and
and
sbb
aaa
add
movs
adc
pop
add
test
ja
xor
pusha
mov
out
pop
add
pop
cld
ins
aam
std
jmp
mov
cmp
retf
ja
fwait
cwde
pop
out
test
pop
push
nop
push
add
movs
inc
loopne
mov
adc
ror
sbb
add
cmps
adc
aam
dec
repz
xchg
ret
nop
out
add
xor
push
retf
jb
dec
push
push
mov
cmp
lods
mov
mov
loop
pop
shl
push
mov
mov
add
ret
mov
xchg
mov
test
mov
push
cmps
aad
lods
in
dec
fstp
mov
ucomiss
dec
lods
sbb
jo
sub
test
add
sbb
fs
je
mov
(bad)
std
dec
sub
scas
sub
inc
xor
adc
and
jne
lock
es
ficom
loopne
pusha
add
adc
adc
pop
imul
ins
pop
mov
mov
mov
dec
or
xchg
jo
scas
ss
hlt
jbe
lock
mov
pop
sbb
mov
dec
add
sbb
call
dec
mov
or
loopne
sub
cmp
inc
xchg
retf
data16
sub
xor
movs
add
loope
rcr
mov
sbb
aad
mov
push
inc
sar
loopne
mov
jne
xchg
sub
sub
ins
fsubr
jo
loop
ror
fiadd
pop
repnz
add
and
out
pop
adc
mov
add
xlat
test
and
dec
push
movs
cmp
or
adc
movs
mov
mov
imul
mov
rol
inc
fs
adc
adc
or
inc
adc
mov
out
(bad)
push
ja
sbb
clc
push
test
ins
sbb
clc
adc
add
(bad)
pop
shl
jo
adc
sbb
aam
or
cmp
or
repnz
mov
jl
or
jmp
and
sbb
add
sbb
cmp
or
sub
pop
loop
retf
xor
push
or
ja
scas
inc
cmp
and
cmp
add
or
mov
shl
dec
fbld
sbb
or
inc
int
mov
ret
mov
fist
add
adc
or
lea
and
jp
push
into
adc
push
data16
das
stos
mov
add
fimul
jo
inc
xchg
adc
rcr
addr16
sub
xchg
jge
cmp
jg
lods
push
add
adc
imul
dec
add
xor
loopne
ret
ds
lods
jb
add
test
cmp
jmp
imul
mov
mov
arpl
inc
jge
xor
rcl
lods
test
sub
xchg
jle
pop
imul
push
dec
or
mov
dec
add
ja
shl
fisubr
stos
lods
cmp
add
add
or
neg
adc
mov
out
mov
addps
add
add
jnp
std
add
mov
ins
popa
fild
sub
test
push
or
sbb
sub
movs
add
mov
in
test
shr
adc
enter
dec
cmp
pushf
jnp
test
icebp
dec
add
dec
add
shr
icebp
adc
loopne
and
cmc
ins
mov
add
test
jge
lods
adc
cmp
test
inc
or
pop
inc
ret
pop
popa
ins
push
loopne
rcl
pop
fmul
fild
das
xor
inc
push
aas
push
cmp
out
add
dec
or
mov
adc
cmp
pop
xchg
jmp
popa
imul
pop
push
and
movs
das
and
bound
or
sub
in
sbb
xchg
mov
adc
push
jl
cmp
sub
add
sbb
add
int3
mov
mov
mov
test
or
pop
pop
test
sub
jmp
je
in
inc
pop
scas
mov
jge
lds
ja
call
sub
adc
ret
(bad)
nop
mov
xor
fdiv
mov
sub
mov
shr
ret
pop
xor
les
dec
nop
xchg
or
fimul
ror
mov
sti
stos
dec
enter
in
mov
adc
leave
add
pusha
add
and
mov
mov
cmp
(bad)
or
pop
push
push
xor
and
mov
fimul
clc
xlat
xor
mov
or
pop
inc
adc
pop
or
dec
test
pop
push
add
inc
retf
ins
jns
xor
nop
fs
inc
add
les
mov
push
xor
push
lea
cmp
sar
jae
pop
cmp
xchg
and
movs
rol
pop
nop
clc
or
or
xlat
cmp
stc
cld
pop
das
xor
test
add
mov
sbb
fmul
outs
add
and
or
jp
ja
pop
inc
sbb
pop
xor
xor
pop
dec
push
je
push
addr16
je
sub
mov
inc
rcr
jo
pushf
pushf
shr
push
mov
pop
jnp
data16
test
dec
sbb
scas
xchg
imul
aaa
pop
xor
(bad)
movs
inc
pop
sub
shl
push
mov
(bad)
adc
lock
push
push
add
add
in
dec
je
cmp
and
aad
inc
sbb
inc
inc
lock
fisubr
js
aaa
xor
cmp
push
mov
adc
(bad)
fstp
inc
and
stos
pop
xor
mov
push
jge
push
xor
outs
xor
xor
mov
nop
xor
(bad)
fst
sub
es
jmp
clc
pop
xor
xchg
test
adc
ret
inc
adc
adc
mov
in
inc
pop
sub
test
fimul
ret
jle
js
mov
xor
mov
daa
and
sub
out
push
add
mov
or
mov
call
aaa
mov
xor
(bad)
loop
movs
stc
dec
or
push
pop
daa
shr
or
loopne
jae
push
mov
ret
xchg
add
out
or
retf
call
add
push
fiadd
out
pop
cwde
inc
mov
fnstsw
add
sub
enter
clc
push
aas
cmp
stos
jg
cdq
jnp
ret
mov
mov
jge
int
in
push
test
mov
repz
lock
pop
cmp
or
jbe
rcl
push
mov
push
sub
jo
fisttp
pusha
push
stos
shr
adc
xchg
dec
inc
or
into
inc
dec
sub
iret
sti
add
push
scas
mov
in
out
fiadd
mov
push
dec
and
dec
daa
lods
mov
dec
call
inc
sahf
test
or
sub
or
leave
ret
dec
adc
mov
call
movs
add
daa
les
pop
sbb
ror
stc
nop
scas
mov
add
adc
or
cld
movs
movups
inc
fs
jno
cmps
or
mov
pop
cld
mov
fmul
push
add
xchg
(bad)
in
nop
mov
fwait
xchg
dec
dec
test
movs
xchg
mov
(bad)
cld
cld
add
sub
cmp
mov
les
je
mov
xor
in
ret
cli
stos
mov
sti
or
or
les
stos
push
cmps
repnz
or
dec
lea
cli
dec
inc
sbb
mov
addr16
xchg
js
cmp
jbe
inc
ss
push
push
jne
xor
push
dec
or
lods
cmp
cmp
push
test
or
sub
jge
test
or
push
hlt
push
cmp
push
adc
or
dec
adc
or
(bad)
add
jb
sub
adc
test
pushf
pusha
or
mov
xlat
mov
push
xor
and
aaa
lods
ret
mov
push
xor
adc
xor
pop
jns
maxps
pop
or
inc
test
inc
push
jp
jmp
lods
pop
inc
ss
xor
pop
xor
pop
sbb
les
je
(bad)
js
movs
mov
in
xchg
add
add
inc
add
mov
mov
outs
outs
push
or
test
add
mov
ret
daa
sub
sub
icebp
es
call
adc
lock
sbb
push
inc
dec
xchg
mov
lock
test
test
adc
jnp
mov
push
mov
rcl
cs
jns
dec
xor
pop
lock
and
movs
pop
adc
pop
push
inc
nop
js
fcomp
loop
mov
arpl
aas
inc
inc
or
fsubr
and
cmp
sub
test
popf
or
inc
cmp
adc
ret
shl
es
adc
or
inc
inc
nop
inc
sbb
xchg
or
add
xor
pop
aaa
retf
pop
or
jecxz
sbb
adc
inc
and
add
and
rcl
pop
cmc
pop
add
retf
cmp
clc
inc
xor
out
lock
pop
jns
stos
fsubr
push
jecxz
loopne
std
call
ins
gs
js
cmp
jo
xor
add
xor
aaa
push
add
inc
add
popa
imul
lahf
jle
dec
push
adc
inc
jo
mov
sbb
loopne
ficomp
or
sub
sbb
add
mov
test
add
or
push
adc
mov
push
push
(bad)
mov
(bad)
push
cmps
sbb
mov
adc
arpl
jne
shl
adc
push
pop
push
mov
out
popa
xor
sbb
inc
rol
adc
push
adc
sbb
xchg
and
fiadd
adc
xchg
sub
imul
pusha
mov
iret
push
sbb
add
cmp
dec
sbb
mov
add
or
mov
inc
pop
inc
test
mov
sbb
call
rol
mov
(bad)
mov
call
loope
dec
cmps
cs
sar
icebp
inc
loopne
outs
push
call
dec
jmp
mov
mov
movs
mov
je
mov
jns
js
inc
jnp
loopne
mov
pusha
popf
or
add
sbb
data16
jp
adc
leave
cmp
or
shl
add
push
aaa
mov
push
adc
lea
inc
ret
jl
jg
push
arpl
lods
aaa
mov
xchg
sub
scas
pop
movs
jno
scas
and
ret
inc
shl
mov
ret
lods
or
test
adc
and
xchg
in
xlat
add
or
sbb
inc
jmp
ds
cmp
mov
sub
fs
cmp
xor
pop
push
push
add
xchg
stos
in
fld
pop
lock
clc
scas
imul
sub
stos
(bad)
dec
inc
sahf
outs
cld
mov
mov
cmps
xchg
adc
lods
movs
sbb
icebp
pop
pop
and
cmp
pop
jo
xchg
test
gs
adc
fdivr
or
push
clc
clc
push
push
shl
xchg
mov
pop
push
sbb
xchg
push
shl
add
xchg
mov
je
cmp
je
retf
add
aas
or
push
sub
aaa
jns
add
xor
cdq
gs
add
pop
add
xchg
add
or
pop
add
or
add
dec
xchg
out
mov
add
jl
adc
lods
xlat
arpl
repnz
sub
aaa
aad
or
jb
lock
or
pop
and
outs
add
adc
pop
loopne
outs
clc
lods
xchg
push
jbe
mul
jns
out
shl
mov
cmp
jmp
cld
pop
ror
pop
mov
inc
clc
push
push
or
fmul
cmp
std
xor
push
or
cmp
cmp
fld
sti
mov
add
test
and
ret
inc
fwait
cmc
arpl
pop
outs
push
les
sbb
or
(bad)
das
es
sub
jne
mov
icebp
addr16
or
mov
xor
push
add
jb
imul
pop
push
cmp
and
mov
adc
cmps
popa
loopne
mov
mov
test
sbb
lea
fbld
(bad)
xchg
test
push
cdq
out
test
call
dec
hlt
pop
xor
daa
adc
lea
push
xchg
fsub
rcl
test
cmp
loopne
jne
loope
or
push
es
mov
(bad)
pop
pusha
fild
sub
mov
xor
cmp
cwde
fist
lahf
push
je
and
or
js
push
pavgb
xchg
adc
dec
mov
jb
xchg
cmp
and
xor
dec
dec
mov
mov
jno
xchg
sbb
jno
pop
imul
push
pusha
add
jo
out
add
or
fst
fxch
push
xchg
push
mov
(bad)
fdivr
lea
std
dec
push
aaa
stc
dec
push
jnp
inc
cwde
or
lahf
mov
xor
cmp
mov
xchg
dec
pop
or
addr16
pop
add
ds
push
dec
rcl
(bad)
or
mov
aas
xchg
xchg
repz
stc
push
jp
sbb
retf
test
test
or
jne
cmp
and
pop
imul
add
cmp
dec
mov
or
mov
cmp
cmp
aaa
push
push
push
xor
sbb
sbb
scas
xchg
sbb
sbb
mov
call
xor
pop
push
cmp
je
cmp
loop
dec
(bad)
pop
dec
je
jge
add
dec
dec
add
xor
(bad)
int3
pusha
push
sub
dec
imul
xor
ins
mov
add
sub
inc
push
int
sbb
daa
bound
add
cmp
push
sbb
and
mov
pop
push
xor
das
add
outs
nop
retf
xchg
or
sub
xor
sbb
mov
sbb
push
leave
push
pop
cmp
cmp
lods
in
movs
loope
cmp
and
inc
nop
loopne
cmps
repz
xchg
test
or
pop
sub
sbb
adc
jae
cmps
pop
push
pop
dec
push
cmp
xchg
and
mov
jg
pop
push
adc
and
les
les
xor
loop
test
mov
je
ins
xchg
xor
and
jne
pusha
test
gs
or
fdiv
sti
adc
push
les
mov
ror
and
test
aad
mov
and
ret
mov
or
cmp
add
cmp
stos
adc
and
add
jl
dec
pusha
sub
shl
rol
pop
mov
jae
les
push
or
or
shl
xstore-rng
cmps
test
ss
(bad)
test
or
adc
jo
mov
(bad)
popa
mov
sar
fild
icebp
mov
xchg
xchg
push
inc
add
das
add
push
push
(bad)
ins
push
das
jno
movs
pop
retf
pop
iret
lock
sbb
test
xor
adc
test
jne
sbb
loop
inc
jo
scas
or
sub
push
or
fucom
nop
mov
ds
cli
add
push
inc
or
inc
aas
and
adc
inc
or
mov
and
loopne
cmc
or
out
pop
pop
sbb
call
dec
or
ret
in
xchg
fistp
adc
add
or
mov
(bad)
jns
not
sbb
jo
push
inc
adc
cmp
sbb
mov
jmp
pop
inc
pop
add
or
inc
inc
push
add
dec
dec
pop
xchg
shl
push
inc
jp
sbb
fmul
mov
(bad)
ror
daa
xlat
aad
test
push
or
jl
add
jne
pusha
or
cmc
mov
xchg
leave
fwait
addr16
adc
test
xchg
add
add
aaa
(bad)
lods
rol
mov
push
mov
in
je
xor
pusha
in
pop
or
push
(bad)
add
(bad)
push
adc
dec
enter
imul
js
adc
enter
and
sub
lods
data16
fdiv
add
pop
test
dec
and
(bad)
imul
mov
sub
xor
icebp
je
jle
or
and
sub
push
dec
and
pop
iret
ficom
add
fs
jle
add
adc
add
push
xor
jp
adc
or
test
mov
adc
dec
sbb
in
out
jbe
enter
gs
xor
sbb
call
pop
or
iret
mov
fistp
inc
add
add
push
add
and
jnp
enter
test
xchg
mov
mov
xchg
sub
jle
(bad)
aas
test
jne
jne
inc
sub
fsub
scas
inc
jg
adc
jmp
inc
jmp
push
mov
add
push
cli
push
add
or
aam
and
movsx
push
cmp
imul
test
mov
xor
dec
ret
movs
sbb
cld
lea
and
mov
call
repz
test
imul
xchg
jnp
push
cs
xor
push
dec
dec
add
cs
leave
mov
test
push
sbb
loopne
jo
jg
lods
mov
sub
nop
(bad)
pop
jmp
enter
push
in
sub
add
adc
adc
and
add
sub
dec
cmp
in
mov
daa
test
addr16
mov
mov
push
sbb
imul
and
inc
push
jle
(bad)
dec
push
pushf
pop
test
jmp
add
mov
iret
adc
mov
jb
fdivr
test
sub
mov
xchg
mov
mov
js
and
mov
mov
out
das
jmp
enter
sub
inc
add
inc
outs
dec
push
ror
dec
in
dec
je
push
mov
cwde
dec
jecxz
and
adc
mov
test
pop
mov
sahf
movs
mov
cmp
add
ror
add
fsubr
ret
or
test
pop
push
lods
outs
clc
push
rol
inc
sbb
xchg
and
dec
sub
xchg
xchg
lea
jne
lock
(bad)
xchg
xor
pop
enter
jp
or
push
jne
je
dec
test
xchg
push
cmp
cmp
(bad)
mov
sbb
jo
imul
ja
xchg
add
lea
je
ds
popf
inc
push
jmp
(bad)
(bad)
dec
(bad)
sbb
push
xchg
imul
scas
push
xor
cmps
int
and
loop
push
adc
and
lods
adc
mov
mov
movs
add
addr16
lods
dec
ret
mov
and
sub
or
inc
js
fistp
popf
mov
sar
shl
pushf
leave
adc
outs
rep
add
inc
sbb
cdq
mov
pushf
xchg
(bad)
jl
jmp
sbb
adc
lock
cmps
add
outs
inc
add
inc
adc
push
and
xchg
dec
mov
or
mov
das
(bad)
sbb
add
dec
push
stos
push
or
mov
inc
sahf
add
jb
sub
jo
cmp
clc
fst
inc
or
adc
rol
mov
jmp
cs
je
adc
fdivr
sub
cmp
(bad)
daa
mov
das
xor
nop
mov
jmp
ins
iret
mov
sub
and
xor
xchg
pop
retf
imul
xchg
lds
mov
adc
push
je
mov
test
mov
fs
xlat
adc
add
fidiv
lods
push
ret
xchg
or
(bad)
fist
push
xor
jmp
sbb
push
jbe
ins
test
sbb
xchg
out
push
test
dec
or
mov
(bad)
pop
or
xchg
fist
(bad)
push
adc
dec
and
or
mov
push
inc
and
sub
add
pop
ret
or
and
ret
mov
inc
add
rol
and
jne
(bad)
rol
cmps
add
lods
les
and
fcom
popa
xchg
inc
lea
mov
arpl
add
adc
daa
pop
lea
cli
add
pop
add
push
xor
jno
dec
rcr
rcr
pusha
or
sub
pop
mov
jne
adc
pop
daa
jae
rcl
sbb
mov
ret
adc
shl
ja
or
mov
(bad)
sub
xor
test
xchg
xlat
call
mov
test
add
cmovs
xchg
mov
pop
sbb
loop
(bad)
mov
lods
and
popf
cmp
imul
test
mov
aaa
cmp
jge
sbb
or
adc
xchg
dec
retf
sbb
scas
test
call
push
aas
lods
cdq
dec
cs
fwait
cmps
test
jle
inc
mov
xchg
fcmovu
shld
xor
xchg
xor
xor
scas
xor
add
pop
sbb
push
jge
jne
push
push
mov
adc
xchg
stc
jmp
jmp
mov
repnz
xor
push
xchg
int3
in
dec
adc
xchg
push
jle
add
out
pop
leave
dec
daa
mov
in
adc
xor
and
mov
mov
popa
jb
movsx
xchg
arpl
add
push
pop
xor
ror
ret
cmc
adc
cmp
add
cmp
aad
xlat
(bad)
lock
fcom
mov
lods
je
pop
dec
cmp
cli
dec
in
inc
dec
cmp
sbb
sub
xchg
test
mov
shr
push
cmp
sbb
jae
lahf
sar
jl
xchg
jmp
add
das
mov
stc
icebp
test
je
xchg
add
add
ret
and
lods
cmp
adc
pcmpgtd
inc
pop
mov
xor
sbb
sbb
push
and
xor
or
bnd
cmp
and
xor
clc
xor
ins
push
push
dec
cmp
pusha
or
outs
pop
in
or
nop
adc
mov
sbb
pop
mov
inc
inc
xor
adc
adc
jmp
jle
adc
inc
inc
inc
inc
sub
ret
push
out
dec
ins
sub
xchg
and
test
test
jp
popa
xor
add
popa
ins
pop
add
xchg
xchg
mov
mov
(bad)
aad
(bad)
rol
add
lods
mov
in
xchg
xchg
xor
xchg
mov
mov
sbb
(bad)
sbb
sbb
or
pop
repz
sbb
ins
imul
mov
inc
xor
inc
pop
cwde
es
stos
int3
push
push
hlt
adc
xchg
cmc
xchg
and
push
or
add
jmp
mov
bound
inc
mov
jge
add
cwde
pushf
or
add
les
mov
mov
jo
jo
cmps
inc
push
xchg
adc
call
daa
test
and
rol
add
or
lea
xchg
icebp
adc
add
mov
sub
repz
jecxz
push
repz
aas
and
fs
mov
pop
jo
pop
push
sbb
inc
or
pop
push
movs
adc
mov
sbb
fsub
or
mov
in
aaa
pop
or
dec
ins
push
lods
add
sbb
iret
sbb
data16
out
jbe
je
xor
add
cmp
jle
add
(bad)
or
or
jbe
das
adc
cmp
mov
or
cwde
mov
jmp
iret
cwde
mov
and
push
aam
add
std
mov
dec
sbb
mov
jp
pop
push
adc
dec
call
and
push
and
inc
inc
inc
dec
stc
int
fisttp
das
add
call
cwde
(bad)
loopne
jle
push
sub
dec
sti
cmp
adc
lock
dec
or
or
inc
nop
popf
dec
loopne
adc
or
les
push
test
pop
sub
pop
add
sub
xor
adc
cld
push
dec
mov
mov
lods
dec
add
ins
mov
add
push
push
lods
jmp
add
sub
jo
(bad)
cmp
and
inc
xchg
stos
lods
and
dec
inc
in
sahf
aam
mov
adc
call
add
mov
arpl
push
add
sub
mov
add
inc
jae
jmp
add
add
and
stos
stos
retf
jae
enter
mov
cmp
dec
or
adc
scas
loopne
sub
xchg
mov
jbe
and
retf
add
jge
adc
push
fiadd
inc
cs
jle
repz
mov
and
jle
adc
jmp
sbb
mov
stos
mov
push
sub
mov
mov
rcl
shr
sub
lods
or
ins
xchg
xchg
dec
or
add
pop
movs
dec
cmp
jmp
cmps
mov
stos
fcomp
fadd
push
call
jle
sbb
shl
aam
in
jmp
dec
or
dec
rol
outs
mov
sbb
imul
sbb
shr
or
hlt
nop
or
cmp
mov
adc
cmp
add
pop
hlt
test
invd
or
inc
pop
fnstsw
push
adc
mov
(bad)
retf
mov
loopne
mov
add
pop
dec
outs
and
enter
mov
jge
daa
jmp
test
aas
pusha
xor
sub
test
sbb
add
enter
dec
mov
fld
cwde
ror
or
push
ret
jae
jge
sub
in
fisubr
push
or
push
lock
push
jne
jge
(bad)
hlt
xor
(bad)
fmul
sbb
mov
inc
test
(bad)
dec
xchg
sub
in
bound
and
(bad)
dec
and
dec
adc
push
loop
ret
xor
rcl
dec
add
or
test
cs
enter
add
sub
cmp
iret
push
lds
movs
jmp
aam
inc
sub
and
movs
add
xchg
xor
adc
or
out
mov
mov
mov
rcl
sbb
lods
and
inc
repz
ret
adc
test
imul
mov
test
add
mov
mov
imul
call
je
out
sub
aaa
xor
add
inc
or
or
push
arpl
rcl
xchg
jb
jecxz
xlat
mov
mov
xchg
sub
pop
push
outs
sub
and
and
xchg
jl
aam
fcom
rcr
push
in
cmp
ret
or
cld
dec
shr
cdq
lea
lea
xor
sub
xor
shl
cmp
aam
pusha
pop
adc
mov
mov
rcl
and
adc
test
jmp
cmp
adc
loopne
xor
aad
clc
icebp
mov
scas
nop
or
push
stc
jge
imul
lock
cs
mov
adc
sbb
loopne
sbb
jb
add
jne
or
cli
repz
fisubr
adc
sar
mov
aam
and
loopne
leave
sub
dec
mov
adc
mov
fimul
add
lock
shl
cmp
shl
cmps
loopne
fcom
push
es
jno
or
ud1
inc
das
push
daa
aam
inc
mov
push
fisttp
in
aad
lea
xchg
mov
sbb
dec
sub
jae
mov
mov
cmp
inc
out
add
add
jmp
(bad)
cmp
or
aaa
inc
sbb
xchg
push
jmp
add
movs
ret
cli
(bad)
xor
add
push
mov
adc
mov
mov
add
push
and
les
adc
and
adc
or
or
and
sub
push
ja
push
dec
js
or
adc
push
rcl
push
fiadd
in
xlat
addr16
sbb
push
hlt
jnp
cs
fbld
scas
lds
dec
push
sub
fidivr
cmp
inc
and
or
xchg
fwait
test
add
and
add
add
sub
je
or
xchg
fistp
and
mov
mov
and
inc
ins
adc
arpl
add
inc
adc
mov
imul
xchg
jno
gs
jmp
sbb
(bad)
push
sub
xchg
or
outs
jns
add
push
call
mov
push
add
xchg
xor
or
mov
out
sbb
xor
pop
sub
sub
mov
and
inc
sahf
adc
or
add
mov
sbb
cmp
jle
add
add
sub
ins
stos
pusha
push
inc
push
sbb
inc
adc
je
mov
or
and
mov
mov
push
xchg
ds
mov
dec
dec
pop
mov
jae
fs
jmp
or
iret
enter
mov
cmps
sar
ins
shl
imul
dec
(bad)
out
dec
mov
mov
or
scas
mov
add
add
cmps
mov
push
add
mov
(bad)
rol
jmp
std
ds
mov
imul
inc
xchg
pop
scas
bound
test
lods
mov
pusha
loope
call
xor
adc
dec
adc
ins
pop
or
loopne
popa
pop
mov
int
push
out
fadd
sbb
hlt
mov
adc
fimul
imul
jmp
and
lods
daa
pop
ins
sahf
ja
xchg
(bad)
shl
push
aam
jb
jge
cs
jmp
push
sub
sti
cld
jle
fdiv
push
or
sub
arpl
clc
dec
pusha
jmp
test
mov
mov
xchg
rcr
dec
xor
add
jbe
cmc
neg
mov
or
dec
je
int
mov
jmp
push
inc
xor
dec
adc
cld
call
jp
push
inc
mov
int3
or
(bad)
(bad)
jg
mov
lock
inc
test
leave
cld
pop
test
lock
jo
inc
cmp
lock
call
and
data16
test
xchg
ror
daa
jmp
in
xchg
pop
inc
movs
(bad)
imul
sub
xchg
add
ins
cwde
jo
leave
movs
xchg
sbb
sbb
pop
inc
inc
push
ins
(bad)
or
(bad)
jmp
push
pop
fild
int3
mov
ins
mov
shl
mov
mov
pusha
lock
dec
in
out
adc
shl
loop
in
out
sbb
mov
dec
dec
adc
inc
in
mov
pop
adc
out
addr16
xor
push
mov
fwait
pop
jmp
js
cmp
outs
xor
xchg
and
fwait
xor
les
cmp
retf
xchg
packsswb
fwait
sbb
lods
hlt
and
add
(bad)
sbb
xchg
inc
mov
or
cmp
add
mov
mov
add
call
lds
retf
daa
xor
pmovmskb
or
pop
mov
push
cld
dec
inc
adc
stc
dec
adc
sbb
ins
ret
mov
sub
sbb
and
or
das
or
adc
xor
ss
or
sub
jae
cmp
mov
test
ins
cwde
xor
adc
sbb
out
inc
push
add
int
stos
jp
lds
and
xchg
int
mov
sbb
pushf
push
xor
int3
lds
sbb
stos
mov
adc
emms
push
cli
adc
mov
pop
add
or
shl
dec
or
jmp
push
dec
mov
and
ins
and
or
and
sbb
mov
xor
xchg
add
and
or
mov
mov
jmp
dec
xor
mov
xor
or
jmp
inc
jg
xchg
xor
gs
dec
mov
aaa
and
push
pop
mov
lock
add
sahf
fnstenv
and
enter
or
les
test
mov
pop
das
mov
mov
or
dec
gs
(bad)
fild
add
and
xchg
shl
call
adc
fcom
sbb
ficomp
add
test
js
jo
cmp
add
jmp
push
rcl
cmp
shl
pop
imul
jo
aas
or
pop
and
sbb
leave
mov
lahf
out
int3
mov
ret
ins
mov
arpl
call
add
or
pop
test
dec
clc
push
mov
mov
fwait
xchg
cmc
or
lods
inc
xchg
ja
mov
mov
outs
fisttp
cmp
and
sbb
mov
nop
inc
(bad)
cmp
xchg
mov
cs
cmp
or
mov
dec
addr16
test
add
or
and
push
ror
xchg
test
and
cmp
(bad)
jg
outs
add
fnstsw
cmp
or
adc
rcr
pop
mov
adc
stc
dec
jbe
or
push
add
sub
add
inc
pop
retf
xor
cwde
sbb
rol
jne
jecxz
loope
xchg
mov
lock
mov
sbb
int3
stc
dec
cwde
adc
rcr
adc
xor
fild
arpl
push
lea
push
xchg
cmp
test
fmul
add
inc
cmp
sbb
sbb
inc
fcomp
fisub
pop
push
pushf
xchg
loopne
(bad)
cmps
and
sub
add
and
or
push
sbb
or
stc
xor
jge
out
mov
adc
shl
cld
xchg
sub
inc
int3
mov
out
ror
inc
add
imul
dec
xchg
xchg
test
cmp
add
jl
dec
test
add
adc
shl
inc
pushf
scas
ror
push
or
push
cmp
push
repnz
push
pop
sbb
movs
dec
inc
cli
imul
cmp
test
adc
fld
inc
push
push
jb
clc
clc
sub
add
xor
movs
dec
xchg
dec
dec
and
movs
aam
lods
inc
lods
nop
sub
ss
mov
add
xchg
ror
mov
loope
add
pop
push
and
sbb
loopne
in
movs
js
in
fdivr
test
pop
or
nop
jp
popa
mov
sbb
xor
(bad)
aas
pop
dec
pop
xchg
ins
inc
push
jl
sub
lea
xor
clc
jns
add
sbb
clc
jge
cmp
jle
jae
push
xchg
inc
nop
dec
add
jo
cmp
neg
fnsave
mov
xor
push
jle
adc
dec
int
lock
pop
test
xchg
nop
and
aam
adc
fcmovne
inc
sbb
nop
inc
enter
ins
or
jmp
or
dec
jmp
fisttp
sub
adc
sub
in
call
push
and
sbb
mov
sbb
call
or
inc
push
stos
cmp
xchg
pusha
repnz
push
and
lea
jl
jge
sar
into
cmps
ror
mov
inc
loopne
jmp
jmp
and
daa
mov
add
and
call
push
das
outs
or
stc
ret
fistp
lock
push
inc
cld
rcl
sbb
add
push
or
inc
(bad)
add
xchg
mov
(bad)
ss
cmps
adc
mov
ret
jne
push
jno
movs
push
test
cmp
push
push
ds
sub
mov
scas
or
mov
sub
loopne
ror
or
jb
test
and
and
shl
mov
inc
int
and
rol
mov
cmp
inc
cmp
push
mov
dec
jbe
sbb
mov
popf
clc
mov
dec
dec
arpl
shl
leave
and
add
push
jp
fs
rol
retf
push
mov
adc
rcl
pushf
(bad)
in
ror
(bad)
test
adc
add
repz
rcr
cmp
or
mov
xchg
mov
cwde
pusha
push
and
and
cdq
cmp
cmps
data16
(bad)
pop
fidivr
and
inc
fs
dec
xchg
enter
lahf
clc
add
cmc
mov
jl
xor
mov
jl
retf
add
sbb
add
jl
ds
or
lds
or
add
cmc
adc
jnp
retf
jl
inc
popa
mov
inc
arpl
pcmpeqd
loope
dec
and
mov
fst
or
xor
mov
imul
ror
or
das
arpl
push
shl
xchg
cmp
in
sub
(bad)
mov
(bad)
fwait
xor
jo
mov
test
iret
and
jecxz
adc
mov
jno
push
push
inc
pcmpeqb
cmps
dec
xchg
(bad)
sbb
daa
fstp
arpl
mov
add
lods
xor
lods
sbb
shr
sti
stos
cmp
enter
retf
in
add
add
ror
scas
pop
jmp
and
inc
sub
pushf
loopne
or
push
cmp
add
es
sbb
inc
fs
adc
and
sbb
or
mov
push
jns
or
aas
or
dec
shl
(bad)
lods
xor
xchg
data16
pop
movzx
jmp
mov
popa
lock
sub
inc
xchg
jbe
mov
sbb
test
fadd
shl
mov
dec
adc
lods
icebp
dec
movs
or
mov
inc
mov
mov
leave
inc
in
xchg
sbb
(bad)
sahf
and
sub
cmp
pop
sbb
sbb
ins
adc
(bad)
xor
inc
adc
sahf
xchg
pusha
add
fcmovu
fdiv
mov
mov
addr16
pop
fldenv
push
mov
or
pop
and
(bad)
dec
or
mov
push
scas
jnp
push
ds
and
pop
lock
inc
xor
rcr
jo
(bad)
(bad)
data16
sub
inc
cmps
mov
inc
repz
mov
sbb
in
data16
ja
add
add
push
adc
inc
xchg
fld1
sub
repz
mov
push
inc
pop
(bad)
stos
mov
shl
call
sbb
call
jmp
cmp
push
add
inc
or
rol
popa
lds
dec
or
xor
adc
lods
xor
mov
add
(bad)
push
pop
add
mov
and
mov
dec
and
pop
pop
inc
pop
add
adc
mov
add
aaa
lock
sbb
jno
ss
daa
sbb
pop
lods
sar
pop
leave
xchg
jecxz
dec
or
lods
mov
pop
adc
push
fs
mov
loop
icebp
popa
aas
mov
fdivr
add
clc
sbb
dec
(bad)
rcr
mov
mov
add
inc
ror
xor
xor
cmp
mov
mov
push
rol
cdq
mov
ss
xor
movs
or
pushf
lock
jmp
xchg
jne
mov
pop
xchg
rcl
out
jmp
inc
call
push
adc
xchg
mov
adc
movs
push
adc
add
inc
js
fmul
(bad)
push
sbb
iret
mov
cmp
adc
push
call
sbb
pop
or
adc
aam
push
jne
push
cmc
xchg
mov
sub
jmp
add
mov
adc
push
push
cmp
je
clc
in
fs
dec
push
or
mov
adc
dec
push
push
mov
xchg
xor
lock
mov
pop
push
add
or
inc
xor
clc
lds
inc
push
sub
aas
adc
inc
pushf
dec
jne
nop
mov
xchg
(bad)
js
mov
add
dec
imul
call
jge
jle
dec
les
adc
inc
jns
out
in
nop
jne
das
pop
ins
dec
push
and
dec
fiadd
(bad)
pusha
jle
sar
sbb
in
jle
push
push
data16
mov
ret
mov
cmp
xlat
(bad)
leave
pushf
sub
pop
sbb
sub
dec
or
hlt
fs
mov
add
dec
fbstp
xor
psubusb
sbb
mov
fsub
cmp
push
sbb
and
jl
clc
ins
sub
mov
xor
ret
frstor
inc
and
popa
mov
in
or
lock
popa
pusha
sbb
inc
cmc
lahf
scas
sub
xchg
push
xor
add
dec
out
dec
cmp
cmp
rcr
cmp
and
sub
les
or
inc
mov
and
pop
pushf
or
popa
or
fs
test
dec
cmp
cmp
fild
(bad)
aas
pop
add
add
add
js
mov
ins
ret
dec
inc
jg
pop
dec
enter
shr
push
jp
or
pop
or
adc
or
enter
aam
add
or
add
jb
fbstp
fwait
inc
adc
sbb
fs
cli
xor
push
out
clc
mov
test
mov
lods
shr
movs
cli
pop
pop
test
or
mov
test
mov
adc
xor
add
mov
shl
(bad)
test
or
add
inc
mov
adc
ins
mov
xchg
in
sbb
xor
stos
adc
jnp
push
test
enter
aaa
out
push
push
sbb
stos
push
inc
out
cmp
mov
jo
add
nop
test
es
movs
mov
add
jge
jne
loopne
jns
call
rcl
cmp
pop
sbb
push
gs
addr16
pop
xor
sbb
test
rol
pop
psraw
cmp
xchg
push
add
dec
dec
rol
cmp
frstor
mov
inc
pop
test
aam
mov
push
add
(bad)
sub
jg
cmp
and
push
fcom
sub
or
push
es
dec
dec
loopne
or
pop
dec
jne
adc
out
or
jo
or
xchg
js
scas
push
push
sub
(bad)
cmp
and
inc
inc
push
add
dec
add
popf
mov
pop
(bad)
mov
push
js
sub
adc
add
sbb
mov
push
push
repnz
loopne
mov
sbb
sbb
mov
lds
inc
rcr
shl
aaa
dec
jmp
sbb
leave
fadd
test
adc
mov
call
inc
inc
dec
xchg
inc
inc
inc
loopne
into
hlt
sbb
icebp
xor
push
or
pop
dec
sbb
scas
jae
ret
and
pusha
movs
retf
inc
push
and
jmp
xor
and
fwait
imul
push
fild
inc
push
mov
sbb
pop
sbb
or
xchg
ja
(bad)
dec
add
or
test
inc
sbb
sbb
dec
imul
or
or
add
cmp
cmp
or
pushf
pop
std
loopne
adc
push
mov
jo
fld
js
pop
mov
sbb
jbe
xor
sub
jb
add
(bad)
jae
or
push
bound
seto
sbb
and
add
ss
inc
pop
add
jle
int
shl
or
jo
add
mov
push
xor
adc
mov
outs
add
inc
adc
mov
mul
sbb
mov
(bad)
mov
push
add
cmp
lods
mov
and
mov
add
cmp
sub
fs
and
das
or
adc
or
adc
pop
in
or
add
jl
or
fucomip
dec
adc
add
ret
idiv
(bad)
loopne
scas
arpl
clc
and
sub
outs
loopne
inc
add
ret
adc
xchg
imul
mov
inc
push
pop
call
retf
or
sub
or
clc
adc
jecxz
xchg
or
dec
add
mov
pop
(bad)
cmp
xor
mov
fsubr
hlt
sub
aam
js
fcom
jecxz
in
jmp
xchg
or
test
jne
add
pop
nop
and
ret
call
hlt
inc
xor
inc
pushf
push
rcl
cmp
std
mov
cs
adc
or
mov
add
add
push
movs
and
ret
push
cli
adc
stos
xchg
jl
dec
push
fild
cmp
stc
push
cmp
mov
sub
sub
xor
scas
xchg
add
or
push
adc
in
(bad)
sbb
or
outs
jb
add
jno
jne
mov
in
jp
push
xor
jle
push
js
dec
inc
lods
nop
cmp
fadd
adc
xchg
sbb
movs
add
mov
mov
or
xchg
lods
into
clc
pop
lahf
je
sbb
or
add
sar
sub
in
jne
pop
(bad)
outs
push
xchg
xchg
rcr
mov
jo
in
dec
jo
jne
lea
repz
fild
pusha
pop
jmp
pop
or
mov
enter
push
and
rol
or
int3
pop
inc
data16
add
retf
push
or
popa
add
jb
pop
enter
and
fs
push
push
hlt
test
add
sub
(bad)
pop
in
cmp
call
out
jne
test
loopne
call
and
loopne
and
add
xchg
enter
push
retf
imul
cmp
jl
sbb
ins
clc
mov
push
adc
mov
outs
ret
push
and
add
pop
mov
sbb
adc
push
aaa
mov
sbb
or
imul
inc
bound
and
push
aas
outs
push
jle
adc
push
inc
js
dec
inc
jbe
mov
shl
stos
js
jae
dec
cmp
test
jmp
pop
jle
sub
push
inc
cmp
push
inc
jge
data16
mov
shr
test
inc
lods
jo
cwde
mov
inc
jb
leave
out
and
fdiv
lods
inc
or
cmp
repz
pop
jae
push
push
movs
shl
mov
adc
loope
adc
sti
sar
push
adc
mov
mov
nop
ror
jne
dec
cmps
push
mov
dec
adc
xchg
dec
sub
add
inc
dec
mov
dec
pusha
mov
es
xor
in
pop
inc
dec
or
pop
push
or
add
sub
sub
inc
neg
(bad)
in
and
and
mov
out
xor
or
outs
and
adc
inc
retf
dec
xor
lea
(bad)
jnp
in
mov
sbb
stc
inc
sub
add
and
cmp
adc
and
les
(bad)
ret
repnz
jae
mov
inc
push
cmp
mov
out
sub
add
inc
or
or
dec
(bad)
sub
sti
jecxz
push
imul
outs
ror
dec
push
sbb
add
pop
inc
ja
inc
call
inc
sbb
scas
add
xchg
or
lahf
cwde
inc
enter
or
adc
add
push
aaa
out
js
add
and
mov
imul
in
add
inc
adc
mov
pop
js
jo
and
lds
add
das
stos
inc
rol
mov
(bad)
cmps
mov
popf
retf
(bad)
clc
cs
fldenv
adc
fnstcw
cmp
retf
dec
shl
ins
xchg
push
add
inc
cmp
outs
xchg
ret
xchg
test
mov
push
add
shl
fdivr
iret
sbb
xchg
(bad)
mov
inc
js
push
add
imul
shr
cmp
(bad)
sbb
enter
(bad)
mov
pop
jecxz
mov
gs
out
add
push
push
or
xchg
js
cmps
mov
pusha
mov
dec
xor
int3
pop
mov
dec
movs
mov
xor
and
pop
or
add
or
push
movs
xor
lock
ficom
mov
inc
sbb
dec
adc
mov
sbb
dec
xchg
mov
imul
jne
rcl
das
hlt
add
or
mov
xor
push
cld
sti
pop
jecxz
rcl
push
daa
imul
cmp
lods
aam
mov
xchg
xchg
ins
mov
outs
dec
mov
xor
sbb
sbb
push
or
sbb
mov
(bad)
or
loope
mov
and
aas
pop
aad
clc
comiss
cmp
jne
(bad)
jmp
ds
push
inc
ret
mov
add
push
cmp
mov
addr16
cwde
sub
and
mov
sub
ins
cmp
lods
adc
in
aas
add
in
mov
push
and
lock
jg
dec
mov
bound
lea
js
mov
add
mov
pop
sbb
fidiv
outs
movs
fwait
fs
(bad)
dec
mov
popf
pusha
out
mov
mov
je
dec
pop
not
das
aam
cmp
mov
retf
inc
jg
cmp
jle
jecxz
aam
in
test
ins
inc
adc
pop
je
pop
mov
cmp
dec
jb
repnz
mov
pusha
sub
aad
call
pop
outs
out
fwait
inc
jp
or
inc
adc
rol
shr
adc
cmp
jmp
outs
inc
sub
movs
sbb
xchg
push
popa
or
pop
mov
shr
mov
ss
push
ja
int
and
mov
ror
and
jecxz
mov
rol
ins
ins
mov
add
mov
rol
adc
adc
shl
aam
not
daa
sub
nop
fadd
test
lea
les
dec
jae
(bad)
and
sahf
pop
fwait
gs
cmp
adc
lods
xchg
es
xor
fnstsw
movs
mov
sub
sbb
and
adc
sub
xorps
add
xchg
xrstors
mov
sub
or
sahf
cmp
and
xor
lods
movs
(bad)
mov
pop
stos
dec
inc
rol
bound
fmul
dec
mov
xchg
push
push
fsub
dec
clc
xchg
scas
retf
mov
nop
int3
dec
sbb
ins
sbb
ror
(bad)
int3
ins
jg
clc
mov
mov
push
adc
jg
add
test
pop
sbb
xor
mov
mov
and
push
loopne
mov
adc
or
(bad)
int
test
mov
iret
xor
add
xor
cmp
or
push
aaa
and
or
or
inc
and
adc
pop
xchg
adc
lock
pushf
push
push
inc
sub
retf
push
push
dec
dec
rep
int
lock
add
adc
ds
iret
dec
lea
jno
leave
test
cmp
retf
fisttp
pushf
je
xchg
inc
mov
or
pop
mov
out
fs
mov
and
std
into
sub
cmc
xor
xor
jae
xchg
adc
dec
ret
(bad)
or
adc
or
sub
call
and
rcr
add
mov
mov
out
stos
arpl
jge
xchg
in
loop
inc
sahf
inc
in
add
call
xor
jecxz
test
or
adc
lock
in
push
xor
jbe
inc
or
mov
sub
mov
jo
jne
repz
cmp
inc
cmc
cmps
test
mov
lods
and
dec
shl
daa
cld
and
pushf
pop
add
adc
pop
clc
push
dec
and
jnp
adc
retf
gs
push
ret
xor
sub
inc
cmp
mov
cmps
and
rcr
add
push
adc
addr16
adc
icebp
pop
lods
mov
sub
mov
xor
dec
int3
aam
adc
ss
pop
push
mov
inc
push
inc
pop
pop
sbb
jle
push
push
ret
sar
push
xchg
cmp
mov
pop
add
test
push
adc
call
jmp
sub
adc
add
pop
mov
push
mov
ss
dec
sbb
in
push
cmp
fadd
(bad)
minps
push
mov
dec
pop
rol
xchg
mov
aas
and
jecxz
and
or
pop
xchg
sub
add
push
cmp
and
inc
inc
push
sahf
es
sub
push
shr
xor
and
xchg
and
cmp
or
rol
mov
pop
cmp
add
xor
adc
(bad)
stos
lea
in
clc
push
iret
pop
cld
je
jg
mov
mov
xor
sub
lahf
jle
aas
dec
add
jp
pop
pop
loope
jo
push
(bad)
jle
pop
xor
ret
xchg
nop
movs
and
xor
pop
pop
and
icebp
adc
or
xchg
inc
sub
ret
movs
inc
popf
js
xchg
add
inc
cli
es
jnp
loopne
mov
add
push
pusha
mov
mov
cwde
dec
popa
movs
or
adc
or
jl
pavgb
jo
loopne
jge
fisub
ss
ss
es
push
xor
adc
aaa
(bad)
push
inc
mov
adc
and
cmovae
cwde
mov
push
int
jmp
loop
pop
add
pop
pop
rcr
mov
mov
add
mov
jo
cdq
fld
test
pop
sbb
sub
and
mov
jmp
mov
fld
aaa
add
ss
arpl
(bad)
cmp
mov
xor
mov
loop
push
cs
and
movs
jge
lock
shl
inc
and
test
and
add
cdq
jg
ds
fmul
adc
rcr
repnz
fadd
xchg
loop
mov
imul
pop
mov
retf
mov
ret
and
push
push
jmp
adc
pop
jmp
inc
cmp
and
inc
(bad)
jle
jbe
xor
mov
xor
test
cmps
inc
(bad)
sbb
call
and
push
cmp
xor
sbb
cmp
adc
and
pop
hlt
xchg
mov
loop
(bad)
std
push
inc
stc
repz
retf
lods
sahf
jno
add
loop
out
sub
adc
test
movs
or
cmp
sbb
mov
int3
mov
sub
imul
inc
add
mov
dec
mov
adc
ja
jg
or
adc
add
add
add
lahf
sbb
adc
in
adc
lods
xchg
imul
xor
jne
xchg
enter
xor
pop
jne
mov
adc
cwde
adc
mov
adc
and
inc
sbb
adc
test
inc
in
inc
xor
push
xor
outs
xchg
cmp
xor
sub
push
or
into
mov
ins
mov
in
cld
imul
cmps
test
addr16
pop
loop
sub
xor
mov
inc
and
push
mov
pop
pop
mov
js
mov
mov
fmul
ja
(bad)
sbb
lods
mov
jp
ret
and
sub
shl
fsubr
push
inc
add
add
adc
sub
pop
dec
sub
clc
ss
push
and
or
sub
dec
add
lock
cmp
or
dec
bound
es
mov
pop
add
dec
mov
inc
adc
lock
out
inc
fisub
and
test
aam
xor
cmp
cmp
out
(bad)
adc
mov
retf
in
inc
cs
call
sub
mov
loopne
(bad)
fstp
cmp
xchg
jmp
leave
jne
loop
ins
mov
xchg
adc
sti
inc
and
xchg
test
ins
fisttp
and
pop
mov
arpl
xchg
ror
or
push
popa
jmp
adc
ds
or
dec
mov
or
test
ror
sub
sbb
lods
pop
xor
xor
add
pop
xor
xor
or
inc
jg
jmp
push
xchg
ss
xchg
push
push
xor
ret
pop
invlpg
pusha
push
in
jae
adc
ja
pop
pushf
mov
clc
(bad)
push
mov
push
ins
retf
xor
mov
dec
ret
pop
dec
in
dec
mov
mov
retf
mov
xor
mov
push
push
or
xor
jne
test
or
(bad)
mov
add
hlt
adc
or
and
cmp
(bad)
xchg
dec
push
addr16
add
or
dec
sbb
or
or
xor
pavgb
jmp
out
int3
jmp
cli
add
call
adc
inc
test
cmps
int
and
push
mov
inc
inc
mov
dec
xor
adc
inc
loopne
xor
clc
xchg
and
and
inc
shl
adc
dec
sub
push
(bad)
call
jp
push
repz
ins
sbb
or
sbb
int
adc
fisttp
mov
dec
adc
xchg
movs
add
add
mov
sub
ror
ret
add
jnp
sbb
sar
adc
xor
lock
call
push
ficomp
push
in
ret
or
inc
sub
rol
inc
sub
mov
iret
ret
add
xor
aaa
push
gs
inc
add
loopne
xor
addr16
or
fwait
sub
add
adc
cmp
push
imul
xor
inc
loope
mov
aad
pop
in
pop
mov
inc
mov
sbb
and
fiadd
dec
push
sub
inc
lds
lea
inc
clc
fadd
addr16
or
inc
cmp
sbb
mov
inc
adc
xchg
es
int
inc
cmp
mov
fwait
jmp
push
pinsrw
push
mov
fadd
lock
adc
inc
sahf
sub
sub
fsub
mov
jmp
into
pusha
cmp
add
jmp
adc
ins
sub
adc
xchg
jmp
bound
or
xchg
add
ret
daa
pop
add
call
cmp
sbb
adc
mov
and
dec
sbb
(bad)
cmp
imul
and
push
mov
sahf
retf
push
mov
nop
retf
sub
xchg
sub
push
mov
es
push
sbb
push
dec
in
push
dec
mov
test
rcr
dec
fld
push
test
jmp
mov
jp
dec
cs
imul
sub
add
ins
mov
dec
daa
arpl
js
push
ins
mov
ja
call
gs
jbe
arpl
jge
sbb
jne
add
push
add
div
cmps
push
jo
or
outs
sbb
pop
xor
push
pop
inc
retf
push
es
scas
mov
lds
or
daa
add
mov
dec
bound
ret
in
jns
and
inc
cmc
sbb
push
fsub
sbb
dec
(bad)
dec
shl
adc
test
fcom
shl
rol
(bad)
sbb
popf
neg
push
stos
inc
mov
shr
jnp
or
dec
nop
cwde
fld
xlat
jns
jmp
adc
das
ja
sub
loope
sahf
xchg
jbe
ret
mov
mov
add
and
or
pusha
lahf
inc
push
add
mov
and
pop
push
imul
mov
cld
pop
in
push
sub
mov
test
sub
clc
adc
xor
push
inc
xchg
dec
hlt
ficomp
dec
mov
xor
cmps
lahf
test
scas
cdq
(bad)
mov
push
pushf
ror
or
popa
push
hlt
jnp
ja
out
sub
dec
cld
ret
mov
jno
add
adc
call
jp
gs
and
popa
cmp
mov
ror
mov
popf
and
sub
add
cmps
push
cld
sbb
(bad)
mov
add
mov
and
jge
das
mov
scas
and
or
cmps
enter
movq
dec
mov
mov
sub
in
cmp
lock
out
or
mov
je
sar
(bad)
(bad)
inc
or
imul
out
ret
add
push
adc
popa
jno
sbb
mov
fdivr
out
adc
scas
push
cs
dec
sbb
add
mov
mov
gs
mov
mov
mov
je
push
pop
out
pop
inc
push
outs
cmp
clc
push
mov
add
xchg
aad
mov
mov
pop
mov
xchg
or
push
pop
fbstp
test
dec
xchg
test
daa
mov
mov
out
iret
movs
dec
mov
xchg
nop
movs
push
push
cs
ins
xlat
add
adc
dec
dec
movs
es
pop
xchg
inc
push
xor
jbe
sbb
mov
fcmovb
cli
stos
aaa
mov
push
inc
inc
or
shl
aas
jo
sbb
daa
dec
je
jmp
cmp
daa
or
sub
pop
xchg
(bad)
or
je
pop
xchg
and
ret
inc
pop
and
jbe
sahf
or
test
or
pusha
repnz
retf
cli
jmp
aaa
add
or
test
les
aas
jne
jmp
adc
movs
stc
pushf
inc
ret
and
movs
pop
add
sub
and
ja
stos
mov
es
xor
add
dec
rol
es
adc
dec
add
adc
idiv
push
fldcw
push
(bad)
cld
lahf
pop
ficom
pop
(bad)
add
xor
mov
xlat
arpl
mov
scas
jne
lods
fdiv
cli
cmp
adc
(bad)
and
ret
scas
repz
pop
sub
mov
je
iret
cmp
push
stos
push
sar
and
imul
rol
ret
or
adc
dec
inc
sub
cmp
repz
int
jnp
dec
inc
or
xor
sahf
dec
add
call
or
sar
sar
push
sbb
jl
in
in
dec
xor
cwde
or
pop
adc
daa
cmp
pushf
push
jmp
sbb
pop
dec
sub
or
sbb
add
jmp
lea
faddp
cmps
push
fcom
jmp
pop
mov
fcomp
jae
dec
adc
cmp
inc
in
ror
xchg
shl
fstp
add
or
adc
push
cmp
aam
xchg
fdivp
push
mov
loopne
sub
and
dec
mov
lahf
les
jo
ins
adc
xchg
dec
dec
or
xchg
scas
popf
ss
cli
sbb
hlt
cmp
pop
fnsave
(bad)
bound
lock
out
adc
ins
aaa
jo
rol
sub
(bad)
loopne
dec
lods
xchg
or
inc
fisubr
inc
ret
xor
test
inc
sub
or
loopne
dec
cmp
out
cmps
and
lock
rcl
ror
xor
into
adc
mov
push
pop
xchg
cmp
sar
out
inc
push
sub
cdq
out
ja
outs
ss
push
repnz
xchg
lea
and
icebp
and
jle
sbb
inc
rol
xor
adc
xor
shl
mov
mov
rol
lock
sub
mov
lds
xchg
mov
push
adc
out
sbb
add
lods
pop
or
loop
fnstcw
xlat
push
xor
jns
jge
stos
pop
dec
in
and
jne
mov
and
mov
pop
cmpxchg
loope
mov
pop
adc
jbe
rol
adc
pop
mov
lods
add
cmp
dec
hlt
xchg
stos
bound
push
and
in
dec
cmp
aam
pop
jp
jmp
sbb
test
mov
std
mov
inc
and
dec
out
pop
jne
xchg
ss
push
add
pop
push
imul
mov
dec
or
jbe
test
movs
not
push
cmp
add
inc
movs
pop
jmp
call
sti
nop
jo
ret
popa
add
inc
and
mov
popf
mov
push
jg
aam
xor
outs
rcr
sbb
and
add
in
lods
xor
dec
mov
push
fs
test
cmp
and
sub
leave
test
add
xlat
repnz
push
ins
push
mov
sbb
mov
sub
aam
repnz
mov
mov
mov
and
les
dec
data16
xor
cmp
pop
sbb
inc
xlat
xchg
cdq
jno
mov
ror
push
and
and
and
add
cs
out
les
mov
std
ret
fnsave
sbb
xchg
ds
push
cmp
sbb
adc
movs
cmp
mov
cmp
mov
adc
push
cmp
outs
xor
push
mov
xchg
and
cmps
in
sar
sbb
inc
dec
jle
jmp
dec
or
mov
cmp
sub
and
ret
dec
and
or
push
cmp
fld
add
xor
xor
adc
jns
out
fcom
fldenv
outs
pop
xchg
loopne
and
push
dec
sbb
mov
mov
sahf
xchg
inc
mov
inc
cli
and
sub
push
aam
pop
fld
lods
in
adc
adc
pushf
inc
addr16
(bad)
imul
cmp
mov
mov
inc
hlt
sbb
mov
loopne
ins
adc
add
int3
and
add
xor
add
jg
inc
mov
jae
fmul
mov
mov
inc
test
aaa
lea
dec
add
push
pop
or
aad
inc
and
test
dec
push
sbb
outs
les
add
jecxz
pop
adc
and
inc
popa
mov
dec
cmp
xchg
mov
add
(bad)
mov
inc
xor
js
xor
cmp
push
xchg
push
sub
arpl
adc
lock
mov
jecxz
push
aam
loopne
sbb
daa
and
push
push
mov
hlt
loope
in
retf
ins
add
adc
int3
pop
ds
loop
call
out
pop
cmps
mov
xchg
push
xor
xor
push
push
inc
cld
lock
sbb
outs
xchg
sbb
sub
and
mov
or
and
ret
fbld
and
(bad)
mov
jle
mov
inc
jl
add
add
out
sbb
dec
nop
outs
fmul
shl
mov
imul
adc
stc
(bad)
xchg
jle
mov
sbb
jecxz
and
adc
push
and
jne
push
in
dec
adc
movs
loopne
cmp
sbb
pop
call
shl
add
jmp
es
xchg
cli
fsub
dec
mov
mov
je
jns
inc
imul
mov
mov
fdiv
dec
jae
bound
ret
add
test
add
nop
or
xor
dec
repnz
push
inc
cmp
aam
jb
rcl
dec
call
test
pop
add
dec
sbb
mov
xor
sbb
rcl
cmps
test
push
cld
cmp
cld
fwait
dec
cld
pop
(bad)
loopne
aam
push
jns
cmp
add
addr16
inc
cld
mov
xor
int3
int3
seta
sbb
pop
and
xor
xchg
jge
(bad)
prefetcht1
cmp
imul
loope
mov
and
and
inc
dec
ja
xor
pop
popa
sub
pop
icebp
aad
adc
and
adc
add
dec
rcl
or
sub
cli
(bad)
test
add
scas
jecxz
lea
dec
cmps
(bad)
repnz
mov
inc
or
push
or
or
data16
jbe
loop
leave
imul
xor
sbb
mov
xor
test
data16
adc
adc
jns
push
lea
jo
push
inc
add
mov
mov
out
aas
push
dec
push
inc
nop
ja
inc
inc
(bad)
pusha
push
jno
add
ror
xor
sub
test
or
adc
xor
jle
pop
pop
daa
cmps
xchg
jg
mul
xlat
mov
(bad)
daa
movs
xchg
pop
leave
mov
add
xchg
cmc
jg
inc
pop
xchg
cmc
or
pop
aaa
pusha
add
xchg
sbb
(bad)
je
and
(bad)
sub
je
mov
xchg
jp
mov
sub
popa
in
or
or
fs
push
xchg
push
out
movs
xor
fcmovnbe
inc
add
dec
push
movs
jno
popw
push
dec
cs
push
add
not
and
pop
inc
cmp
inc
mov
int3
test
mov
pop
pop
das
lea
push
dec
loop
mov
mov
hlt
je
sahf
nop
cmps
push
or
ror
mov
jns
les
cmp
lock
or
mov
push
or
inc
push
add
xor
bswap
or
sbb
in
add
inc
mov
cdq
mov
sub
mov
sub
mov
dec
sahf
inc
cmp
push
push
add
dec
sbb
push
mov
mov
pop
sbb
and
fcomp
data16
mov
bound
push
adc
add
out
cmp
gs
pusha
retf
jp
or
jge
mov
dec
or
xor
dec
jae
les
test
jne
add
or
pop
inc
and
xor
mov
jne
add
sbb
push
mov
or
jb
outs
outs
ins
push
imul
sahf
sub
push
jbe
cmc
lock
(bad)
mov
push
or
xor
es
or
ins
add
je
sub
or
movs
add
and
dec
aam
fcmovb
ds
mov
and
int
inc
push
bswap
adc
pusha
pop
dec
inc
imul
js
inc
adc
push
outs
arpl
daa
mov
xlat
sbb
jbe
mov
jmp
ss
adc
cmp
shl
xor
push
mov
xlat
sbb
add
and
mov
aad
rcr
sub
mov
xor
mov
mov
sub
pop
(bad)
mov
imul
push
jnp
push
and
inc
cwde
popa
scas
adc
movs
and
gs
xchg
stos
mov
mov
or
mov
les
stos
lahf
repz
hlt
mov
push
arpl
mov
add
movs
arpl
xchg
lods
or
movs
in
or
jge
cmps
getsec
ins
cmp
rep
add
add
xchg
ss
and
or
adc
dec
push
pop
and
fstp
das
pop
add
iret
adc
cmp
cmp
imul
aas
adc
scas
xor
and
adc
mov
mov
inc
add
iret
dec
fimul
sbb
shr
inc
lods
or
and
or
aam
adc
cmp
add
popf
and
ss
int
bound
lods
adc
mov
sbb
push
stos
xor
sub
xchg
xor
dec
xchg
fcom
sub
and
jnp
fiadd
(bad)
and
pop
adc
pop
pop
ins
xor
pop
ror
inc
ss
pusha
sub
or
into
ins
ins
sbb
and
mov
xor
or
or
mov
xor
fadd
bound
fistp
jo
add
gs
push
pop
out
out
loopne
nop
pop
popf
adc
xor
mov
bound
cmp
cmp
xor
sub
imul
mov
mov
or
sbb
sbb
xlat
or
or
push
fadd
xlat
and
mov
and
dec
mov
mov
and
sbb
push
loopne
fldcw
fldenv
test
sub
ja
fimul
mov
push
add
in
push
js
fmul
cmp
cs
jo
xor
add
mov
add
fdiv
or
or
or
mov
xchg
and
push
dec
and
ror
int
xor
stc
or
inc
jmp
imul
pushf
inc
jmp
pop
ds
inc
or
fld
out
cmp
cmp
ins
daa
adc
adc
fwait
adc
inc
adc
imul
lahf
xchg
or
push
rol
sbb
or
jbe
outs
or
inc
adc
and
add
clc
ja
dec
cmp
pushf
shl
imul
sbb
and
jno
pop
cmp
pop
xlat
adc
sbb
retf
pop
pop
or
addr16
fsubr
ins
push
test
sbb
ffree
pop
jae
pop
(bad)
fnsave
sar
xor
add
mov
xchg
test
jg
cmp
adc
and
fidiv
lock
push
or
call
or
ja
push
add
jb
ins
xchg
js
nop
fstp
test
jb
imul
or
push
sbb
sbb
or
mov
or
cmp
imul
ud1
mov
inc
adc
mov
and
xor
xchg
mov
fisub
mov
xchg
adc
sub
aam
jle
fsub
imul
clc
jae
pop
js
mov
daa
xor
inc
je
fisttp
and
sbb
ins
dec
or
ins
mov
sub
and
mov
and
jbe
dec
adc
cmps
sub
cmps
sub
pusha
jno
sub
and
adc
jne
bound
adc
push
and
movs
pusha
push
sub
adc
cmps
outs
sbb
mov
das
xor
ins
or
sub
shl
shr
ficomp
xlat
mov
jo
sub
pop
es
shl
adc
outs
and
das
ins
ins
inc
adc
sub
outs
mov
ret
add
push
mov
pusha
pop
or
or
aam
sbb
sub
test
mov
and
xor
rol
scas
out
and
sbb
mov
lock
daa
cmps
sbb
cmps
jae
jae
xchg
pop
xor
jae
or
and
add
pop
jae
jae
adc
sbb
(bad)
jl
adc
sbb
xor
popa
adc
outs
or
sbb
and
out
pop
in
mov
sbb
xor
lods
mov
or
xor
ret
mov
mov
mov
and
sub
(bad)
sbb
dec
jo
lea
inc
push
adc
jae
sub
sub
leave
sti
add
das
or
or
add
(bad)
push
(bad)
mov
pop
and
ins
jno
sti
ss
inc
(bad)
and
push
or
or
in
dec
jg
pop
into
or
out
stc
adc
leave
sub
jle
and
xlat
mov
mov
arpl
(bad)
pop
mov
movs
push
cmp
inc
test
outs
pop
and
popf
inc
sar
std
ins
mov
fisubr
ret
shl
jecxz
xor
xor
adc
xor
stc
arpl
push
or
push
je
ins
mov
sub
xor
and
in
xor
adc
(bad)
lods
cmp
mov
and
add
mov
lods
xor
xor
sub
mov
pusha
mov
cmp
aaa
jns
ficom
aaa
adc
(bad)
xlat
cmp
xor
sbb
sub
jmp
sub
mov
add
hlt
mov
fs
pusha
sbb
das
sti
lea
fsub
jne
rol
daa
dec
or
cmp
jne
push
sbb
adc
add
pop
sbb
sbb
dec
outs
dec
adc
in
loopne
sbb
push
jb
add
js
ja
test
mov
or
or
mov
fwait
push
xor
das
into
ins
sbb
xor
mov
and
mov
daa
inc
sub
dec
sar
mov
and
das
pop
sbb
mov
pop
xor
xor
sbb
cmps
or
jb
repnz
fadd
xchg
and
sub
xchg
nop
adc
ins
add
sub
dec
add
push
pusha
repz
add
in
sbb
sar
jns
xor
and
not
ins
add
xchg
shl
inc
adc
or
adc
mov
sub
add
mov
or
test
inc
cmc
mov
pop
pop
mov
out
push
imul
xchg
stos
pop
and
xor
push
movs
mov
xor
pop
add
jg
cmp
fisubr
outs
xchg
movs
or
outs
imul
adc
mov
pusha
inc
pop
pusha
shl
adc
popf
(bad)
das
sub
fwait
xor
sbb
mov
or
das
or
dec
and
and
inc
and
pop
mov
or
outs
mov
dec
mov
arpl
mov
and
fwait
(bad)
adc
leave
and
jp
and
mov
sub
push
sub
ins
es
enter
mov
in
imul
fcmovnu
sub
dec
lea
dec
jne
ins
fcomp
mov
adc
mov
mov
push
mov
fwait
dec
lea
daa
fcmovnu
add
imul
xchg
stos
jno
inc
pusha
(bad)
xchg
and
mov
mov
mov
xchg
fidivr
(bad)
outs
xor
adc
pop
sbb
pop
jb
dec
addr16
repnz
mov
inc
(bad)
sub
pop
push
fsubr
fldenv
push
xchg
pop
data16
cmp
add
stos
aas
or
ja
inc
ins
jns
push
fsub
sbb
or
stos
and
and
mov
mov
call
fnstenv
mov
mov
push
push
or
mov
adc
adc
dec
outs
popa
and
ja
jbe
add
push
sub
inc
mov
sub
(bad)
push
adc
mov
sbb
sbb
das
mov
xchg
inc
jb
adc
popa
js
cmp
jae
adc
js
adc
inc
mov
mov
adc
jg
daa
fidiv
and
jnp
sbb
daa
mov
stc
sbb
pop
pop
out
rcr
pop
xchg
and
push
sbb
jmp
clc
mov
adc
inc
mov
push
cmp
and
bound
sti
dec
inc
dec
xchg
adc
cwde
mov
mov
push
sub
mov
mov
xor
loopne
pusha
in
cdq
inc
xor
mov
jo
xor
cdq
jo
pusha
sub
xchg
push
xor
popa
js
ins
and
js
lea
mov
mov
cmc
xchg
adc
xchg
fcmovu
sub
dec
cdq
adc
or
cmps
adc
pop
mov
mov
mov
pop
rcl
inc
mov
mov
in
sub
ror
ins
mov
push
lods
xchg
fcmovbe
mov
mov
xor
pop
sub
lods
gs
add
inc
dec
sub
int
mov
bound
retf
sub
push
or
inc
imul
movs
xchg
cmp
xchg
add
inc
sub
dec
rol
mov
lds
cmp
ins
push
pusha
inc
cmc
and
inc
lods
and
and
nop
inc
and
and
and
add
arpl
nop
inc
and
lea
add
or
jno
add
sbb
cmp
(bad)
or
(bad)
jmp
aam
sbb
fs
aas
sbb
mov
les
ja
inc
xchg
jg
sbb
les
or
inc
add
pusha
xor
inc
mov
mov
or
not
or
inc
test
sti
cmp
adc
dec
adc
xor
fidiv
movs
or
or
pusha
movs
push
mov
and
into
mov
das
cmps
xor
je
fiadd
xlat
inc
data16
fadd
and
fld
sbb
ja
add
and
xchg
das
cmp
xchg
add
(bad)
lock
pop
sub
ins
or
mov
sbb
adc
push
das
inc
sbb
mov
or
das
pop
cmps
add
(bad)
dec
xor
in
jbe
packssdw
inc
xor
jns
xor
sahf
mov
xor
adc
dec
xor
ror
pop
movs
icebp
cmp
leave
mov
and
ins
jb
repnz
add
sbb
jmp
pushf
pushf
mov
cmp
mov
dec
dec
inc
sahf
dec
cmp
xor
leave
push
or
inc
inc
lock
jo
jb
ins
fadd
movs
pop
leave
add
or
sbb
xchg
inc
les
mov
inc
jo
jns
pop
sahf
inc
loopne
cmp
cmp
mov
inc
inc
mov
fadd
imul
inc
pop
add
cmp
sub
mov
pop
mov
jmp
and
add
les
add
sub
xlat
ins
sub
sbb
and
mov
xor
idiv
loopne
xchg
push
add
aaa
sbb
and
or
fmul
inc
mov
jb
fbld
or
add
mov
mov
or
mov
add
inc
jle
enter
outs
outs
push
inc
adc
or
sbb
jp
fld
dec
daa
test
fld
push
adc
ss
or
push
es
sbb
pop
dec
add
das
push
xor
xor
shr
in
stos
xchg
adc
sbb
(bad)
shl
out
lock
xchg
mov
jl
adc
pop
aam
inc
mov
sti
add
or
adc
sbb
ins
add
adc
cdq
xor
test
pop
sub
leave
in
in
dec
add
add
adc
movs
test
push
dec
add
or
sbb
adc
iret
push
add
cmp
jno
add
fist
dec
push
inc
push
cmp
or
or
inc
jb
xor
in
dec
sbb
inc
jb
in
dec
pop
or
cmp
pop
leave
inc
enter
fadd
xchg
pop
and
cmp
and
and
test
pmuludq
push
test
dec
sbb
push
test
fs
sbb
test
push
mov
nop
cmp
dec
pop
int3
dec
cmp
sbb
in
sbb
loopne
enter
cmp
enter
mov
and
push
nop
and
nop
add
sub
inc
push
cmp
mov
adc
adc
retf
add
jb
add
or
adc
arpl
repz
or
outs
and
(bad)
movs
pusha
or
dec
push
cs
add
sbb
jo
dec
call
in
pop
or
jecxz
pop
xchg
(bad)
add
fld
sbb
in
bound
aas
or
ss
and
pop
xchg
test
push
and
inc
pop
jmp
sub
test
and
add
pop
scas
and
fild
fld
jb
arpl
jp
test
add
mov
mov
adc
es
fld
jp
pop
arpl
push
in
xor
add
ss
push
or
pop
add
pop
js
das
fstp
div
icebp
loopne
es
jb
bound
movs
pop
dec
xor
shr
jmp
jbe
es
call
js
mov
pop
jb
addr16
pop
pusha
iret
push
mov
mov
adc
pop
daa
push
jnp
out
push
jg
sub
ins
das
mov
sbb
xchg
pop
fisttp
and
cmp
mov
mov
xchg
mov
jns
mov
das
add
ja
sbb
call
imul
cmp
or
pop
and
cmovno
jno
jae
cmp
lods
push
mov
add
arpl
push
xchg
mov
inc
xchg
ins
sub
mov
xchg
call
pop
add
inc
add
dec
(bad)
fisubr
setae
push
imul
inc
ins
fist
movs
mov
iret
iret
or
pop
(bad)
xor
mov
out
jle
mov
unpcklps
xor
jl
or
sti
and
push
mov
or
dec
mov
pusha
cdq
out
inc
mov
mov
xchg
or
jl
and
in
test
test
mov
adc
nop
test
sti
pop
pop
or
sbb
xchg
or
jp
sbb
sub
inc
add
cmp
and
jns
inc
jmp
and
dec
push
inc
pop
out
mov
dec
outs
inc
pop
in
sub
mov
outs
icebp
adc
mov
push
push
mov
xchg
mov
fwait
mov
pmuludq
mov
sbb
enter
fwait
add
adc
das
pop
xor
ins
xchg
or
mov
rol
mov
fild
push
jb
pop
test
mov
mov
ror
and
cmc
data16
and
mov
inc
xor
xor
xchg
enter
aaa
pop
or
and
setp
mov
loopne
sbb
mov
sbb
xchg
jbe
shr
das
loopne
and
xor
mov
mov
sahf
pop
mov
(bad)
jae
pop
or
jb
or
jb
jmp
sbb
add
or
or
and
loopne
fadd
inc
add
dec
in
cmps
and
sbb
pop
in
push
sahf
xor
mov
movs
push
sahf
dec
sbb
ss
bound
or
rol
push
or
or
xor
push
dec
add
add
push
cmps
add
jo
mov
outs
adc
sbb
xchg
ss
add
div
add
and
xchg
xchg
fidivr
add
imul
pop
or
or
iret
rep
mov
ret
cmp
push
and
push
popa
outs
jge
and
iret
repz
cmps
mov
imul
jmp
add
xchg
add
(bad)
push
push
sahf
outs
nop
ja
sbb
adc
pop
adc
and
pop
xor
or
or
test
or
add
fild
jb
push
sbb
lods
loopne
mov
repz
ret
add
add
or
mov
or
sbb
xchg
fcomp
test
mov
push
or
or
or
mov
pop
cmp
xchg
out
mul
pop
push
sbb
pop
ret
jns
cmp
inc
dec
adc
and
push
dec
add
jns
xchg
mov
mov
or
enter
add
push
push
pop
jb
or
(bad)
and
push
or
sbb
and
add
mov
or
adc
es
dec
arpl
rol
pop
add
ds
repz
mov
mov
inc
xchg
add
pop
and
test
ds
and
mov
add
jmp
iret
repz
or
xchg
loopne
sahf
out
ficom
bound
mov
test
(bad)
ror
scas
inc
push
cmp
adc
add
push
or
pop
mov
shl
push
sti
push
inc
and
or
sub
or
stos
loop
inc
or
fwait
and
stos
or
dec
push
dec
pop
repnz
pop
mov
ret
aam
jns
iret
xrelease
sbb
js
jl
ss
dec
sar
jne
pop
loopne
and
sbb
retf
ret
dec
(bad)
or
or
dec
gs
or
or
adc
movs
ud2
adc
ret
push
pop
xlat
sbb
sub
and
push
xchg
xchg
and
sub
ror
dec
shl
test
inc
mov
mov
repnz
cmp
fs
out
jb
mov
adc
aas
mov
sbb
or
push
sbb
sbb
enter
adc
shl
adc
xchg
cwde
adc
outs
adc
adc
in
dec
ja
jb
or
xor
push
push
pop
jmp
push
rcl
push
adc
jns
sbb
push
push
out
repz
pop
push
movs
repnz
xchg
xchg
xchg
fst
dec
sub
sahf
xchg
pop
data16
jns
push
es
pop
add
or
(bad)
or
rcr
add
push
scas
add
or
fbld
push
rcl
jns
loopne
iret
mov
jns
out
ds
pop
push
jbe
xchg
push
iret
inc
mov
pushf
add
sbb
sbb
jb
sbb
adc
sbb
adc
adc
sbb
adc
or
aaa
push
dec
adc
aaa
div
cmp
or
add
movups
adc
jns
out
adc
push
pop
sbb
jns
out
sbb
sbb
push
pop
and
and
and
push
outs
xor
iret
repz
mov
imul
push
sbb
sahf
out
sahf
cmp
jg
jns
out
mov
dec
add
sbb
push
push
xor
shl
push
push
push
push
cmp
inc
mov
xchg
and
or
mov
jb
or
dec
push
adc
adc
dec
sub
in
retf
sbb
mov
or
or
and
and
dec
sub
xchg
retf
adc
adc
jb
in
cmp
test
inc
push
inc
sub
sbb
xchg
dec
sbb
jb
in
push
sbb
xor
movs
pop
sbb
xchg
inc
sub
bound
nop
retf
and
movs
xor
and
push
test
push
pop
hlt
xor
and
mov
xchg
lods
add
sbb
sub
dec
test
sbb
retf
fwait
xor
sub
fadd
mov
scas
pop
dec
sub
nop
je
adc
js
mov
lea
popa
or
jle
dec
aaa
pop
push
imul
add
and
adc
adc
pop
or
xchg
imul
ror
xor
in
dec
fistp
mov
push
ins
je
inc
xchg
pop
dec
in
sahf
jge
jno
or
(bad)
test
dec
int3
rcr
add
pusha
neg
dec
xchg
jb
lea
dec
pusha
jo
mov
push
das
push
pop
inc
bound
sbb
mov
loopne
fmul
dec
ja
dec
push
daa
pusha
pusha
xor
sub
and
xor
test
push
xor
dec
push
add
enter
pop
push
sbb
fimul
cmp
sub
dec
xor
mov
and
mov
push
repz
mov
sub
push
daa
mov
les
fbld
pusha
test
adc
stos
mov
mov
dec
push
add
je
mov
aad
mov
stc
sub
pop
test
gs
loopne
bound
cmp
shl
mov
add
add
retf
pop
pop
sbb
aad
stos
icebp
inc
add
iret
jo
push
adc
or
ja
or
das
cmp
sti
or
or
dec
inc
cwde
sbb
sub
mov
out
jle
or
clc
mov
imul
imul
mov
xor
outs
mov
or
out
cmp
xor
jb
pop
cdq
sar
daa
push
addr16
das
ret
jg
call
fisubr
cld
xor
ins
(bad)
nop
pop
iret
xchg
movs
pop
sub
ins
pop
fisttp
mov
pop
push
arpl
loopne
adc
xor
inc
dec
xchg
out
sbb
jae
add
sahf
add
nop
or
repz
fdecstp
push
push
jae
jmp
add
add
adc
ins
or
add
arpl
inc
xor
arpl
adc
dec
stos
adc
mov
fisub
cmp
xor
imul
jb
xor
xor
pop
idiv
push
pop
clc
jb
es
cmp
pop
pusha
(bad)
iret
add
scas
popa
or
repnz
jo
int3
xchg
adc
rcl
cmp
adc
(bad)
dec
sbb
or
test
in
sub
push
add
jno
mov
mov
lods
xor
and
xchg
fist
xor
pop
mov
mov
or
push
push
gs
fwait
sub
pop
jnp
push
fld
sub
dec
es
and
out
xchg
cwde
inc
cmp
scas
iret
inc
mov
add
pusha
dec
push
push
shr
dec
enter
cmp
inc
ds
pcmpeqb
repnz
inc
sahf
pushf
ret
ror
xchg
daa
and
and
leave
in
in
les
adc
stc
gs
repnz
fmul
mov
push
test
pushf
mov
iret
pop
push
mov
jmp
ror
xor
daa
and
sub
icebp
ret
mov
or
rcl
jo
ss
push
enter
dec
dec
jbe
sbb
repnz
cmp
jae
add
add
add
inc
xchg
(bad)
push
adc
fwait
pop
sub
dec
add
dec
mov
sbb
mov
loope
sub
sbb
popf
cmp
jmp
jbe
pop
and
xchg
mov
xchg
inc
test
and
cmc
sbb
(bad)
push
call
or
lea
mov
sbb
es
mov
pop
add
sbb
sbb
dec
cdq
xchg
pop
nop
rcr
jl
fld
dec
and
leave
jnp
hlt
ins
dec
push
add
je
jg
cmp
xor
bswap
or
ret
sbb
xchg
pop
mov
mov
jecxz
xchg
add
inc
sahf
nop
xor
add
xchg
xor
lods
add
lds
or
or
push
or
mov
xchg
js
adc
test
and
or
pop
pop
mov
or
pop
and
add
mov
sbb
nop
test
leave
adc
and
sbb
js
pop
std
mov
add
mov
and
pusha
mov
retf
hlt
xor
test
cmp
mov
in
inc
mov
inc
gs
add
leave
shl
add
adc
cli
inc
and
(bad)
mov
pop
std
dec
enter
mov
ds
cdq
inc
pop
mov
sbb
imul
je
sub
push
sub
imul
jmp
pop
mov
cld
jg
rol
movs
sbb
xor
mov
cmp
mov
sahf
nop
add
xchg
retf
mov
mov
inc
pop
xor
add
pop
xchg
or
xchg
add
or
inc
pop
push
mov
and
in
mov
adc
(bad)
pop
push
add
or
adc
push
scas
jns
inc
pop
xlat
or
mov
imul
or
adc
enter
test
ins
dec
add
pushf
add
das
dec
add
sub
lahf
daa
pushf
mov
sbb
sbb
or
lods
cmp
int
lods
mov
cmp
or
adc
dec
shr
mov
movs
or
movs
sub
or
xor
aaa
fadd
nop
(bad)
ins
dec
pushf
mov
mov
dec
pop
je
nop
outs
pop
ret
adc
mov
jne
push
pop
or
and
jecxz
outs
sub
and
and
mov
fcos
pop
outs
mov
push
sub
push
and
mov
xchg
popa
inc
xor
(bad)
imul
inc
sbb
ret
in
or
es
(bad)
jmp
push
repnz
jo
ret
dec
pop
inc
(bad)
(bad)
(bad)
inc
xchg
mov
jmp
sub
(bad)
call
test
inc
push
aaa
cmp
jmp
test
(bad)
or
mov
xchg
push
xor
je
sub
push
inc
jo
push
aas
dec
adc
(bad)
and
dec
imul
xor
pop
dec
ins
xor
bound
pop
mov
leave
cmps
(bad)
mov
add
jbe
inc
xor
popf
xor
movs
mov
jecxz
das
daa
loopne
sahf
or
mov
fwait
push
dec
push
sbb
outs
add
and
adc
sub
vcvtsi2sd
cmovno
and
scas
add
dec
jbe
or
jecxz
push
and
add
xor
sub
mov
mov
outs
fs
mov
mov
rcr
das
mov
enter
or
nop
fcom
test
std
push
push
push
popa
pop
pop
dec
push
add
jno
xchg
fld
push
sub
jne
or
(bad)
shl
loopne
ins
add
ret
(bad)
call
jecxz
mov
xlat
mov
sub
sbb
dec
sub
inc
add
les
jo
push
mov
add
inc
inc
or
cmc
pop
dec
movs
je
outs
clc
xor
not
cwde
(bad)
sbb
pop
push
ss
popa
mov
ss
sahf
xchg
cmp
push
inc
je
mov
aas
cmp
sub
retf
cmp
aad
mov
fdiv
mov
pop
xchg
lahf
mov
ja
xor
mov
push
push
leave
cmp
icebp
push
movs
mov
out
and
les
xchg
cmp
test
ret
hlt
adc
addr16
out
ins
popf
es
jbe
mov
inc
inc
or
pop
and
out
jmp
inc
(bad)
and
xor
out
js
xor
adc
add
aas
rol
or
test
ret
dec
imul
jl
push
mov
cmp
jbe
test
fdivr
adc
neg
pop
push
cmp
mov
push
enter
pop
fs
cmp
mov
xchg
movs
test
outs
clc
sbb
jne
xor
jle
push
mov
js
sbb
mov
jmp
dec
shl
int
jg
and
mov
jg
call
cmp
mov
jne
mov
mov
lock
or
stc
xor
mov
adc
push
sbb
mov
pop
aaa
jo
ins
mov
or
les
test
shl
pusha
aam
xchg
lahf
jbe
xor
xor
adc
ret
inc
mov
popa
gs
push
mov
mov
(bad)
xor
xor
repnz
adc
or
push
xor
shl
cmps
jbe
and
xchg
lahf
jne
mov
inc
rol
inc
shl
shl
ret
push
jecxz
and
jg
or
cmps
sub
jg
sbb
ret
repnz
setg
cmp
fwait
or
pop
sbb
push
sbb
shr
aaa
mov
jge
sbb
outs
or
push
inc
or
scas
cwde
xor
xchg
xor
stc
lods
cli
dec
cs
dec
push
or
push
in
push
inc
or
arpl
dec
(bad)
xor
int
shl
cmps
sbb
push
jns
and
js
dec
dec
ds
sar
mov
std
pop
mov
add
imul
add
stos
lock
jb
mov
sbb
arpl
fwait
xchg
mov
adc
call
mov
cmp
fnstenv
ins
sbb
rol
sbb
cmps
mov
(bad)
scas
nop
setno
cmp
ja
add
hlt
mov
sbb
inc
lds
mov
movs
test
fnsave
mov
lock
pop
test
dec
call
jb
lock
es
inc
dec
adc
inc
in
mov
pop
push
pushf
bound
jnp
cmp
popa
call
sbb
xor
loopne
inc
jnp
ins
jmp
sbb
add
cmp
xor
xor
push
push
mov
scas
or
adc
add
push
loopne
push
cmp
jnp
mov
dec
fs
in
jl
in
jmp
pop
inc
ins
jecxz
mov
add
add
jne
cs
adc
movups
sbb
xchg
ss
ret
or
ret
xor
mov
push
dec
imul
daa
les
cmp
loop
movs
cdq
mov
mov
adc
cmp
push
pushf
js
call
xchg
fadd
mov
inc
scas
fisub
test
inc
imul
add
mov
sbb
cdq
(bad)
or
mov
mov
aad
jmp
inc
push
inc
mov
lds
cmp
stos
push
mov
ficom
and
mov
mov
inc
xor
mov
or
mov
push
pop
push
retf
jbe
add
add
ja
and
cmp
movs
pop
test
add
or
mov
lds
or
and
push
or
shufps
push
adc
loope
jno
inc
dec
inc
xchg
and
fwait
or
xor
jmp
sbb
or
outs
xor
or
and
cmp
fwait
cwde
sbb
add
les
sti
push
ret
fisubr
loope
iret
inc
sbb
xor
movs
xlat
adc
sahf
arpl
enter
fwait
lods
dec
xchg
(bad)
rol
mov
test
adc
shl
rcr
rcl
lea
xchg
(bad)
stc
retf
sbb
pop
je
les
outs
jmp
je
xchg
inc
push
add
mov
stos
xor
inc
cmp
cmp
popa
xor
mov
push
enter
sbb
rol
add
sbb
lahf
cmp
inc
clc
add
fbstp
in
outs
call
icebp
xchg
fwait
adc
call
and
call
jmp
xor
ret
mov
stos
or
pop
leave
sbb
dec
sbb
sbb
cmp
fbld
mov
ret
movs
sub
sar
jle
clc
jo
mov
mov
mov
or
adc
sahf
mov
sub
add
push
cs
xor
lock
sbb
jne
(bad)
lods
sbb
xchg
cmp
cmps
les
xor
leave
ja
jno
ficomp
in
push
retf
add
sub
add
sub
movs
shl
test
xchg
sub
cmp
(bad)
aas
push
mov
xor
stos
push
lds
xor
push
mov
lea
cld
or
or
stos
ins
jl
fist
adc
mov
xchg
sbb
mov
in
mov
fcomp
sbb
sbb
jmp
pusha
add
loopne
push
pop
sar
idiv
outs
dec
sub
je
out
and
push
adc
xchg
pop
js
and
dec
sar
hlt
out
add
(bad)
jg
dec
jp
add
sub
jle
inc
jne
clc
out
ins
or
std
add
mov
jo
or
jle
(bad)
(bad)
call
adc
dec
fwait
rcl
pushf
push
aas
fisttp
lahf
jmp
retf
pop
movs
lods
pop
pop
cmps
sub
dec
sub
add
inc
cld
jns
xchg
mov
ret
cmp
mov
add
push
xor
jbe
sub
cmp
es
adc
push
(bad)
xchg
daa
or
cmp
(bad)
fsubr
adc
inc
xor
or
xor
test
ror
xchg
xchg
xlat
dec
push
push
inc
cli
mov
arpl
ds
add
retf
or
movs
data16
dec
or
pop
fisttp
jno
sbb
loopne
sti
sbb
push
xchg
pop
fs
imul
push
mov
sub
mov
or
inc
test
adc
retf
data16
test
add
stos
pop
dec
inc
sti
cmp
inc
sbb
stc
mov
cmp
xchg
shr
mov
push
popa
jns
call
jmp
inc
jecxz
sub
or
jl
or
wrmsr
or
sbb
shr
inc
cmp
les
pusha
mov
mov
into
mov
js
inc
xchg
add
or
sti
cmp
pop
dec
lahf
add
cmp
cmp
ss
bound
inc
and
mov
push
adc
ret
repnz
inc
and
dec
add
adc
iret
jne
sbb
push
add
shr
cmp
pop
outs
fsub
xchg
repnz
jg
inc
adc
jb
in
inc
cmp
jg
inc
xor
mov
in
inc
dec
mov
jne
dec
push
push
les
inc
jl
cs
mov
add
mov
add
sub
xor
jl
movs
or
xor
and
lahf
dec
imul
arpl
or
pop
xor
arpl
add
fdivr
pop
adc
dec
jp
cmp
cmp
and
es
ror
movs
jb
mov
mov
adc
lock
nop
scas
add
mov
push
sbb
and
and
stc
call
adc
mov
and
ret
hlt
mov
dec
adc
iret
lea
xchg
mov
ins
sbb
cmc
dec
lods
test
fist
das
inc
es
fadd
ja
sub
aad
push
fcomp
sbb
dec
sub
add
add
xor
mov
xor
cdq
push
xor
aaa
mov
pusha
in
imul
sub
lea
sbb
iret
add
mov
or
xchg
pop
test
xor
into
in
pop
jmp
push
xor
mov
push
mov
pusha
jb
repnz
movs
add
sahf
inc
imul
sbb
add
adc
adc
rcr
push
mov
aaa
pop
enter
in
mov
inc
add
inc
leave
imul
call
loopne
or
add
adc
cmps
aam
cmps
cmps
or
sar
fs
clc
lds
mov
cmp
xor
pop
test
add
lahf
mov
cmp
jns
and
cmp
jnp
or
sbb
add
ficom
pop
sub
mov
lock
dec
leave
mov
sub
jne
dec
cmp
dec
pop
xor
daa
je
xor
or
xchg
mov
cmp
dec
cmp
push
shl
lock
(bad)
mov
(bad)
not
cmp
pusha
and
addr16
movs
adc
pop
inc
lods
inc
and
adc
jp
lock
sbb
ins
or
add
sub
out
xchg
pop
dec
and
rol
dec
jne
inc
dec
or
ja
(bad)
jle
jmp
adc
mov
xor
xor
pop
add
inc
(bad)
sbb
cmp
and
das
add
push
cmc
dec
cmp
test
clc
push
push
loop
ds
adc
cmp
pop
nop
xchg
mov
cld
cmps
xchg
enter
pop
push
je
dec
or
xor
adc
in
adc
jmp
mov
adc
jne
loope
movs
add
in
xchg
dec
neg
rol
dec
xor
add
pop
push
movs
push
test
add
pop
pop
mov
inc
pusha
ret
call
jle
dec
pop
or
pop
lea
add
xchg
xor
jns
add
ss
xchg
in
push
xor
repz
xchg
inc
xchg
jbe
les
sub
out
or
jl
dec
in
movs
dec
xor
pop
int3
xchg
iret
add
je
ins
add
mov
aaa
cmp
pop
and
mov
xchg
into
xchg
rol
aad
mov
xchg
xchg
das
ja
mov
call
(bad)
jle
out
ficom
into
inc
jb
inc
add
dec
xor
call
lods
fisub
adc
(bad)
in
dec
(bad)
sub
int
mov
movs
in
cmps
dec
dec
test
xchg
int3
movs
dec
arpl
stos
add
push
fldcw
jg
mov
test
inc
xchg
or
adc
ins
(bad)
rcl
arpl
mov
outs
or
loopne
push
mov
push
adc
mov
mov
outs
pop
add
pop
je
adc
dec
pop
xchg
sbb
jbe
and
xor
and
fmul
nop
xchg
in
cwde
add
jo
sbb
sbb
sbb
xchg
dec
enter
dec
or
jb
call
xchg
cmp
sbb
cmps
pop
fcom
fld
aam
push
in
movs
jecxz
cmps
dec
call
push
repnz
loop
cmps
dec
dec
xchg
xchg
dec
lds
icebp
stos
add
xchg
(bad)
repz
push
sbb
pop
inc
pop
or
pop
sbb
sbb
mov
or
add
dec
ins
call
jg
mov
add
lahf
int3
loopne
sub
sbb
adc
adc
imul
mov
or
add
scas
pop
cwde
fidiv
and
pushf
es
cdq
push
(bad)
and
jns
ins
scas
xchg
sbb
test
movs
test
bound
int
sub
stos
(bad)
dec
mov
add
jno
stc
or
xor
jae
enter
cmp
adc
and
nop
inc
cmp
dec
add
and
mov
or
mov
mov
daa
lods
pusha
in
xchg
or
cmps
jg
pop
leave
adc
std
call
iret
ins
ret
paddd
xchg
mov
or
ror
sub
cmps
sub
xchg
push
cmp
daa
sub
lods
lods
push
sub
and
mov
dec
stos
dec
cmp
dec
push
arpl
add
add
test
daa
rcr
stos
dec
push
add
pop
cmp
dec
cmp
sub
push
inc
daa
push
outs
dec
pop
cmp
sbb
xchg
fldenv
fwait
scas
or
and
sbb
sbb
mov
mov
mov
(bad)
jmp
ror
cmp
rcl
sahf
inc
push
mov
out
pusha
pusha
mov
jo
daa
mov
pop
sbb
sub
shl
into
mov
inc
and
inc
je
dec
jmp
sub
int3
push
inc
cmp
imul
jne
adc
pop
lods
popf
dec
inc
add
mov
(bad)
jae
sbb
dec
cwde
push
dec
out
pop
mov
popa
shl
or
pop
(bad)
and
add
dec
clc
or
cmps
pusha
cmps
inc
dec
xor
adc
sub
adc
inc
adc
and
sub
mov
(bad)
cwde
sahf
dec
lock
mov
mov
push
in
push
and
xchg
cdq
add
add
mov
mov
xchg
js
mov
adc
inc
mov
jae
iret
dec
dec
arpl
lods
push
adc
movs
cmp
pop
push
popa
sbb
enter
inc
pop
sbb
inc
add
dec
enter
mov
mov
je
add
lea
pop
sbb
xchg
jl
cmp
xchg
xor
jb
or
test
fdivr
retf
pop
movs
test
pop
mov
xor
jae
xchg
dec
fisttp
icebp
mov
adc
dec
pop
enter
add
mov
cwde
mov
add
das
aas
mov
pop
mov
mov
mov
or
loope
push
loopne
or
and
xor
lods
leave
adc
push
ins
mov
push
inc
outs
fild
mov
mov
push
repnz
test
nop
xlat
pop
popf
sbb
jbe
pop
sqrtps
int
or
jb
out
mov
fs
mov
jb
movs
xor
and
fsubr
push
mov
inc
cmp
cmp
fdiv
in
pushf
add
add
adc
(bad)
push
stos
pop
fucom
mov
adc
and
nop
jl
stc
loopne
mov
popa
bound
cmp
and
and
js
push
cmp
ja
sub
and
mov
jmp
lock
test
and
int3
dec
mov
ror
ins
outs
call
inc
int
leave
sti
dec
push
xchg
pop
sahf
mov
push
imul
jnp
push
nop
int3
push
add
xchg
xor
cmp
enter
lods
sahf
out
sahf
into
push
push
push
sahf
out
mov
repz
out
add
repz
adc
sbb
or
or
fdiv
and
sbb
lods
inc
adc
nop
pop
cmp
pop
call
adc
push
xor
add
retf
jl
mov
fstp
add
sbb
xchg
add
sbb
ss
push
xchg
nop
addr16
xchg
add
xchg
lods
dec
pop
mov
and
xor
pusha
sbb
jecxz
sbb
lea
mov
xor
sub
add
adc
cdq
sbb
xlat
and
sbb
leave
(bad)
(bad)
mov
pop
lock
aam
shl
dec
xor
lea
jo
and
xchg
lock
repnz
or
scas
sbb
pop
push
jns
ror
xor
inc
sahf
cwde
and
inc
dec
cmp
pop
add
sub
or
es
xor
rol
sbb
sbb
xchg
inc
cmp
or
dec
xor
pop
shl
(bad)
jmp
inc
xor
mov
lea
sbb
adc
and
sub
imul
loopne
sbb
sub
xor
dec
pusha
or
adc
je
mov
mov
jb
(bad)
out
or
mov
xchg
xchg
xchg
mov
xchg
jecxz
dec
cmp
or
retf
cmp
cmp
ret
fisttp
jne
add
and
mov
mov
xor
jle
imul
test
sbb
hlt
xor
and
mov
lods
sbb
pop
idiv
push
adc
sub
push
inc
out
inc
push
fimul
add
push
mov
outs
dec
aaa
mov
loopne
xchg
mov
lea
inc
sbb
cmp
push
adc
cwde
sbb
pop
add
pop
add
jae
or
lods
add
push
and
or
mov
fistp
add
push
and
sbb
push
dec
push
mov
wrmsr
cmp
out
mov
movs
in
aad
movs
pushf
inc
mov
retf
push
mov
lods
add
jno
mov
adc
lahf
dec
push
and
push
sbb
sbb
mov
and
push
(bad)
or
call
cs
(bad)
mov
es
movs
cdq
xchg
pop
in
cmp
inc
add
imul
and
aas
les
add
mov
xor
xchg
fucomp
jge
adc
jmp
inc
sbb
mov
inc
push
xchg
retf
aam
fs
inc
cmps
dec
push
shl
bound
push
mov
sbb
jecxz
push
aas
icebp
movs
mov
mov
xor
xchg
push
rol
test
jbe
add
adc
sahf
or
push
xchg
jb
push
add
or
adc
outs
push
(bad)
cwde
loope
movzx
std
sahf
dec
push
fs
inc
push
push
call
mov
xchg
fnstcw
push
push
jo
in
push
mov
dec
xchg
in
adc
pop
lods
movs
(bad)
xchg
test
mov
xor
xchg
lods
idiv
xchg
cs
fidiv
add
das
cmp
or
mov
dec
shl
dec
dec
cmp
or
cmp
cmp
rcr
xchg
dec
cmp
xor
adc
pop
imul
dec
mov
ror
jp
add
mov
or
loop
scas
ins
push
cmps
sub
push
leave
lods
jle
pushf
pop
or
(bad)
sar
cdq
enter
add
daa
pop
aas
or
pop
lea
cs
push
pop
repnz
mov
cmp
push
xchg
inc
icebp
jmp
rcl
pop
leave
or
repz
push
fiadd
jle
jle
out
push
jnp
sbb
movs
inc
pop
mov
lods
(bad)
arpl
cwde
mov
push
ins
xor
sahf
jns
rol
shl
add
add
ror
aaa
and
icebp
dec
das
dec
fadd
je
arpl
push
pop
clc
or
adc
jmp
call
sub
mov
fisttp
add
int3
pop
cwde
je
push
mov
dec
xor
xchg
pop
lods
mov
jo
inc
xor
mov
out
in
mov
mov
inc
inc
aad
mov
movs
pusha
ss
xor
pop
das
je
xchg
retf
inc
pop
xchg
je
add
xor
push
enter
outs
or
cmp
jne
rcr
ins
jns
push
imul
test
mov
mov
jg
cmps
test
test
add
inc
fnstenv
adc
jge
add
sbb
lea
shl
sbb
int
inc
push
pop
push
cmp
or
not
mov
daa
add
adc
nop
adc
aad
inc
cli
mov
jns
pushf
mov
dec
sbb
(bad)
mov
cmp
or
push
xor
out
imul
sub
sub
adc
adc
dec
push
enter
or
xchg
inc
rcl
pop
mov
daa
aas
test
mov
inc
mov
xor
mov
mov
mov
in
enter
inc
mov
(bad)
push
xor
add
or
mov
call
sbb
data16
mov
sbb
inc
dec
jne
and
xchg
jmp
js
clc
lock
xor
sub
adc
cmp
bound
add
bound
adc
xor
xchg
or
dec
outs
arpl
daa
push
dec
mov
pop
add
scas
cmp
push
cmp
rol
jne
ss
adc
ror
fdivr
add
fwait
jge
sbb
lds
adc
(bad)
dec
(bad)
xor
adc
push
add
mov
shr
xor
or
or
cmp
push
xor
punpcklwd
lock
lods
shr
lods
sub
icebp
cmp
add
dec
int3
sbb
and
sub
jmp
jl
push
ja
mov
mov
jb
and
xor
ret
and
pusha
ror
add
push
sub
adc
sub
sbb
mov
cs
push
dec
popa
jns
cmp
adc
imul
sbb
icebp
pop
mov
imul
mov
sub
cs
movups
call
stc
push
and
inc
jb
mov
xchg
push
mov
inc
push
xchg
int
in
mov
enter
das
dec
jae
ficom
arpl
mov
iret
pop
addr16
imul
add
xchg
pop
add
fiadd
sbb
jge
dec
je
pop
inc
dec
or
leave
inc
sub
sbb
call
or
imul
adc
sbb
sub
add
or
in
pop
or
add
xor
add
dec
jo
xchg
dec
push
mov
pop
pop
lods
and
xor
out
enter
sbb
xchg
arpl
xor
mov
pop
retf
imul
test
add
add
add
lods
lods
and
mov
mov
sbb
(bad)
and
sbb
mov
sbb
mov
es
inc
mov
lods
xor
sti
cmp
sub
int
pop
mov
ja
ret
(bad)
adc
imul
mov
enter
ins
sbb
shl
sar
ins
or
mov
or
cmp
repnz
cmp
dec
aam
dec
add
dec
mov
inc
dec
add
sub
dec
test
cmp
add
test
xchg
pop
dec
push
ret
jno
push
cmp
idiv
sbb
js
imul
stos
sub
cmps
lock
mov
(bad)
imul
gs
mov
mov
iret
mov
inc
add
out
in
cmp
pop
push
pop
add
sbb
in
inc
xlat
(bad)
mov
ret
push
int3
jo
nop
push
mov
cli
dec
cmp
retf
inc
mov
popf
int3
mov
test
fadd
fwait
nop
mov
out
ss
pop
das
add
repz
cmovne
add
enter
or
adc
pusha
call
sub
jmp
adc
sbb
cmova
inc
adc
(bad)
fmul
retf
pop
enter
mov
adc
add
add
clc
mov
ror
or
jo
daa
stos
popa
and
push
push
bound
or
sub
ret
and
add
div
adc
inc
mov
and
xor
out
rol
add
jle
push
nop
pop
dec
prefetchw
cmp
add
sbb
imul
xor
inc
std
das
mov
popa
or
push
cmp
sub
shl
int
mov
(bad)
iret
mov
mov
add
iret
mov
and
repnz
add
movs
inc
or
xchg
push
xchg
pop
jbe
mov
xor
inc
inc
pusha
jns
or
add
adc
les
dec
cld
or
xchg
pop
mov
out
sbb
lahf
jb
push
add
into
jl
imul
sahf
or
cmp
js
xchg
jl
dec
push
mov
jae
loopne
mov
xlat
pop
fwait
dec
xor
pop
call
pushf
dec
push
bound
aaa
test
(bad)
mov
adc
and
and
jo
enter
shl
fimul
jge
hlt
pop
or
retf
or
and
popf
mov
sbb
adc
xor
mov
or
adc
add
or
lds
ret
imul
in
(bad)
xchg
lock
pop
ficomp
stc
ret
xor
outs
nop
jae
add
cmc
or
pop
adc
je
sbb
sar
xor
xchg
rol
lahf
cmp
mov
les
add
cmp
and
adc
popa
jo
cwde
mov
les
push
push
ror
cmp
imul
jno
sbb
retf
lock
or
imul
sbb
pop
xchg
mov
test
mov
dec
movs
fist
ffreep
pop
jp
inc
ins
lds
adc
pop
pop
jo
adc
inc
int3
enter
and
mov
mul
imul
cmps
sbb
jae
loopne
add
ss
lods
outs
sbb
fsub
cmp
(bad)
push
or
xor
lds
stos
es
push
cdq
mov
daa
adc
cdq
shl
ds
or
daa
mov
scas
(bad)
es
sub
and
stmxcsr
push
cmp
(bad)
add
js
sub
dec
pop
les
xor
into
call
ins
mov
add
xor
and
cwde
fldenv
dec
and
les
adc
inc
xchg
add
pop
(bad)
aad
in
push
jo
dec
inc
push
mov
test
dec
add
mov
or
and
ret
les
pop
mov
mov
je
enter
xor
jnp
inc
out
clc
or
or
inc
cmp
test
xor
xchg
or
sub
adc
adc
xchg
clc
push
in
sbb
mov
stos
sub
xchg
inc
pop
dec
je
inc
xchg
push
ds
enter
mov
aaa
leave
fs
pop
push
adc
adc
(bad)
in
or
leave
not
(bad)
lock
pushf
dec
xlat
adc
and
sbb
out
inc
xor
dec
mov
ins
hlt
fcomp
add
adc
jb
mov
shr
jo
cs
(bad)
(bad)
and
push
cdq
and
jb
and
or
xchg
mov
clc
out
ficom
(bad)
std
adc
inc
fadd
cmp
and
dec
add
(bad)
leave
mov
sbb
xchg
sub
or
or
pop
and
xchg
fdiv
leave
or
and
nop
out
add
and
sbb
neg
in
sti
push
rcl
push
outs
rol
dec
shl
aam
data16
mov
and
mov
test
dec
add
mov
inc
js
dec
sub
lods
push
call
xchg
lods
push
dec
and
dec
add
inc
in
ds
dec
dec
hlt
push
dec
xchg
dec
lock
(bad)
push
dec
div
jb
mov
pop
lods
jo
xchg
je
js
jbe
and
bswap
add
add
lock
dec
jl
in
and
adc
pop
inc
adc
mov
mov
push
xlat
add
repz
mov
sbb
cld
push
push
add
mov
dec
fistp
xchg
dec
retf
dec
ret
xor
dec
xchg
dec
cmc
add
cdq
out
push
test
das
jmp
add
cmp
aas
push
sbb
mov
xchg
push
mov
popf
add
sahf
mul
shr
inc
sub
lahf
add
mov
inc
mov
pop
jl
mov
xor
mov
xor
les
mov
call
adc
sbb
jae
lods
jns
pop
xlat
push
test
mov
sbb
inc
xchg
ins
dec
mov
mov
mov
bswap
mov
fidivr
mov
adc
fld1
sbb
es
cld
or
and
add
cmp
mov
mov
xor
jo
jae
rcr
es
sub
or
aaa
fsub
js
lods
inc
cmp
dec
mov
call
loopne
adc
and
fnsave
iret
popf
adc
in
mov
fwait
adc
(bad)
repnz
jge
ins
clc
or
xchg
lods
xor
mov
fsubr
leave
push
adc
fisub
lods
les
daa
jb
or
out
mov
xor
daa
pushf
or
sub
or
inc
test
repz
repnz
xchg
sub
inc
adc
inc
add
inc
jl
add
jge
lds
sub
inc
ficom
pop
shl
fimul
in
pop
fwait
sub
jmp
mov
jae
pop
add
push
test
enter
ds
xchg
jle
mov
dec
adc
gs
xor
dec
std
xor
mov
add
push
aaa
mov
inc
cmp
push
jge
pop
(bad)
in
popf
adc
mov
popa
xor
iret
ins
addr16
inc
rcr
gs
cmp
int3
adc
dec
ja
or
imul
jne
les
retf
and
movs
loope
retf
inc
(bad)
int3
test
mov
cmp
sbb
std
aam
aad
in
fild
inc
add
mov
adc
sti
not
icebp
paddb
xor
das
or
adc
pop
push
xlat
xchg
fcmovnu
in
repnz
xlat
jns
popf
das
movs
(bad)
fcomp
xchg
fcomi
retf
leave
call
rdseed
sbb
xchg
out
sub
fistp
cmovae
xchg
fxch
das
pop
data16
mov
add
(bad)
add
ins
push
fcomp
inc
mov
daa
inc
dec
inc
movs
out
sub
and
add
add
add
add
mov
lods
shl
sub
add
sub
bound
pop
add
inc
sub
out
sub
mov
mov
and
add
sbb
mov
mov
dec
mov
mov
mov
mov
mov
jmp
cmp
jmp
jmp
jmp
hlt
stc
jmp
mov
neg
nop
test
jns
push
dec
xchg
nop
xor
aam
es
out
mov
push
sub
dec
mov
jns
js
hlt
cld
jo
sar
clc
movs
lea
push
sub
out
push
nop
push
movs
call
xchg
(bad)
out
jnp
sbb
pop
ds
jo
nop
imul
fwait
dec
repz
adc
xor
xchg
jl
pushf
ja
iret
rep
hlt
pop
pop
xchg
add
sahf
cmp
enter
cmps
push
xor
fwait
out
sahf
or
test
ss
repz
pusha
fcom
test
loopne
mov
test
sbb
arpl
ins
adc
dec
lods
test
adc
shl
cmp
sbb
or
fimul
or
or
fs
or
or
cmp
inc
jne
ins
jns
sbb
add
mov
add
mov
bound
stc
or
mov
aas
mov
and
jl
dec
pusha
and
rcr
dec
push
jmp
jge
xchg
cmp
adc
rcr
add
mov
or
adc
mov
repnz
or
or
jle
add
jge
inc
sub
and
dec
mov
nop
adc
fisubr
popf
or
push
cmps
mov
mov
sub
pop
jb
inc
mov
dec
inc
adc
push
cmp
stos
xor
rcr
jo
push
add
xor
sbb
and
mov
or
test
rcr
dec
xor
pop
adc
sub
and
inc
adc
pcmpeqw
(bad)
stos
dec
inc
jae
cmp
inc
mov
add
dec
retf
fmul
inc
inc
xor
dec
fstp
cmp
stos
mov
ss
or
and
js
dec
popa
sbb
or
dec
mov
pop
mov
pop
stos
cmp
or
sub
fist
jmp
push
dec
sbb
loopne
and
mov
or
add
sbb
(bad)
pop
or
movs
adc
sbb
scas
rol
cmps
mov
jg
loop
mov
out
mov
mov
sub
pop
(bad)
call
js
add
dec
xor
or
cmp
xchg
mov
add
sbb
jmp
or
or
enter
(bad)
call
enter
outs
xchg
enter
mov
enter
inc
addr16
mov
in
enter
fild
repz
mov
mov
xchg
out
rcr
gs
adc
sahf
cs
xchg
xchg
loopne
sbb
pop
push
inc
adc
fldcw
popa
add
or
mov
gs
and
sub
or
(bad)
call
push
pop
pusha
movs
inc
sbb
jne
imul
icebp
pop
adc
or
test
call
push
into
pop
push
adc
dec
popf
inc
dec
sbb
sub
aam
pop
movs
xchg
inc
mov
dec
xchg
call
mov
int3
mov
or
jp
fs
add
adc
pop
mov
dec
mov
or
jno
int
sub
scas
retf
int
push
out
int
pop
xor
and
test
sbb
inc
pop
mov
push
mov
ins
sub
mov
add
push
pop
xchg
sub
add
in
in
inc
out
movs
fisttp
pop
mov
jg
call
sub
add
je
loopne
daa
daa
daa
mov
cmovno
add
inc
sub
scas
adc
bound
(bad)
gs
mov
add
scas
fwait
cmp
jae
and
dec
and
mov
inc
sub
mov
pop
xor
sahf
in
xchg
add
mov
enter
scas
pop
mov
sar
outs
mov
add
int
xchg
and
nop
add
shl
sub
and
test
push
mov
dec
cwde
push
inc
inc
xchg
dec
mov
sbb
mov
rcl
sbb
inc
and
je
popa
sbb
and
mov
sub
rol
loope
pop
adc
sbb
lock
adc
push
inc
adc
add
dec
stc
push
mov
pop
add
dec
mov
and
cld
sbb
and
sub
and
xchg
sbb
fcom
push
dec
and
sbb
sbb
in
mov
jnp
sbb
les
pop
cwde
adc
test
and
pop
es
pusha
and
adc
daa
dec
rol
ror
mov
out
sub
inc
cmp
sub
or
mov
sub
xchg
test
add
sub
sbb
les
push
add
pop
cmp
das
inc
rcl
or
icebp
xor
and
dec
inc
xchg
add
add
dec
dec
addr16
pop
adc
xor
jge
gs
in
adc
and
dec
push
or
pusha
xor
adc
xor
nop
or
mov
mov
add
jmp
jns
xor
mov
sbb
fadd
js
push
mov
add
mov
test
push
and
sbb
cmp
repz
xchg
dec
adc
out
mov
das
cmp
pop
pusha
or
jns
add
test
sbb
sub
movs
loop
sbb
mov
mov
mov
imul
push
fisub
add
add
add
xchg
data16
dec
and
xchg
nop
mov
repnz
gs
sbb
das
pop
cmp
dec
or
xchg
mov
ret
or
in
dec
dec
pop
enter
inc
add
rcr
loope
pusha
outs
bound
inc
dec
dec
cmp
push
xchg
rol
mov
dec
cmp
rol
inc
dec
dec
or
mov
mov
xlat
or
inc
mov
pushaw
dec
inc
push
stos
pop
aam
xchg
retf
dec
and
and
mov
mov
sti
dec
or
inc
add
add
jge
push
in
push
dec
jge
cmp
ret
cs
inc
loope
cs
inc
add
push
rcr
xchg
stos
in
icebp
push
push
mov
xchg
shl
xor
cmps
jne
rol
dec
push
cmps
call
in
fstp
cs
nop
push
adc
pop
xor
mov
or
inc
jno
adc
push
leave
and
adc
add
iret
mov
and
sbb
cmc
pop
out
mov
pop
es
add
and
or
pop
xor
inc
xor
add
xor
inc
enter
or
cwde
shl
dec
push
pusha
inc
add
in
or
pusha
jb
or
dec
dec
or
test
data16
sbb
dec
push
aad
jae
addr16
push
dec
into
inc
jno
sbb
or
adc
inc
ins
add
inc
mov
imul
and
pop
add
sub
mov
pop
xor
xor
or
ins
push
add
jge
or
mov
shl
repnz
cmp
sbb
sbb
stos
rcr
mov
jecxz
bound
sbb
sbb
sbb
jb
mov
loope
in
sbb
sbb
push
jns
mov
jecxz
out
dec
sbb
sbb
ins
(bad)
mov
sbb
out
gs
sbb
sbb
or
scas
pop
mov
daa
jge
dec
test
jo
add
xchg
add
add
pop
mov
and
scas
add
add
add
ret
add
add
fsub
mov
add
jne
xchg
and
and
and
and
pop
and
lock
and
and
xchg
and
and
and
mov
and
xchg
out
aas
mov
fild
es
sub
(bad)
mov
dec
mov
shl
pop
pusha
sbb
dec
pop
lds
lods
push
jae
xor
add
jmp
add
cwde
sub
add
outs
jge
xchg
adc
das
punpckhbw
fdiv
pop
push
xchg
inc
jne
sbb
aaa
call
psubusb
aas
test
ror
sbb
mov
mov
les
jge
in
sbb
or
js
mov
inc
mov
ss
ret
xchg
loopne
lea
mov
out
fs
dec
or
cdq
or
xlat
repnz
pop
nop
nop
or
cmps
adc
stos
in
add
shl
clc
or
inc
jle
mov
dec
scas
inc
and
(bad)
push
add
aaa
add
adc
pushf
inc
or
mov
fcomp
daa
into
test
adc
jb
sub
add
movs
xchg
jge
mov
mov
cli
push
sbb
sbb
sbb
fldenv
shr
pop
or
mov
inc
in
and
dec
sub
mov
bound
imul
adc
enter
mov
sbb
test
inc
jl
ret
in
xchg
cmp
mov
inc
and
or
jmp
push
cmp
mov
or
add
sbb
js
or
add
xchg
push
jmp
push
or
lea
jmp
jne
sub
add
mov
mov
cmps
loopne
adc
xor
test
pusha
mov
or
cmps
add
adc
pop
push
je
lea
stc
xchg
mov
mov
jge
lock
ret
cld
das
fimul
lock
pop
adc
pusha
mov
xor
int3
mov
in
add
cmp
add
sbb
mov
dec
mov
addr16
cs
inc
sahf
out
scas
inc
adc
shl
push
ror
fidiv
add
daa
dec
cmp
add
push
sbb
ror
das
pop
mov
adc
les
aad
fimul
sub
dec
jle
pusha
add
mov
adc
cmp
ud2
arpl
or
in
jo
adc
xlat
add
fsubr
jae
mov
push
aaa
mov
xor
or
mov
sub
sub
mov
test
movs
adc
mov
mov
inc
xchg
or
das
mov
dec
ds
(bad)
rcl
cmps
xchg
mov
imul
sbb
pop
pop
adc
inc
mov
(bad)
fwait
push
test
pop
in
mov
lods
outs
fist
loop
imul
daa
icebp
sbb
sub
mov
in
inc
(bad)
mov
pushf
mov
dec
sbb
and
pushf
dec
pusha
mov
mov
cmp
push
sub
pusha
call
push
push
jbe
dec
adc
in
pop
dec
or
test
mov
or
push
scas
or
out
dec
fiadd
int3
lods
cvtps2pi
adc
pop
add
jge
leave
adc
lods
inc
and
ret
inc
mov
add
or
add
pop
adc
mov
mov
push
outs
pop
sub
test
and
and
add
pop
and
and
sub
and
add
xchg
and
and
and
and
push
jl
int3
and
add
and
and
push
and
retf
les
and
aam
sub
sbb
or
dec
adc
rol
and
add
cmp
jbe
xchg
xchg
mov
popf
or
enter
das
dec
mov
sbb
mov
nop
xor
outs
xchg
aam
push
pusha
cmp
dec
ret
call
or
mov
mov
retf
lods
jb
push
or
repnz
int3
or
pop
mov
sbb
mov
or
fmul
stos
xchg
and
xchg
retf
popa
inc
inc
push
fdiv
mov
push
inc
mov
test
in
or
in
pop
xchg
jo
aaa
rol
mov
pop
inc
xor
inc
push
and
adc
mov
lods
and
mov
xor
push
leave
in
add
add
adc
xlat
sub
je
jmp
mov
add
xchg
mov
push
test
shl
mov
xchg
pop
push
xchg
push
sub
jecxz
int
mov
lds
test
mov
retf
call
add
or
ror
cmp
push
dec
xchg
cmps
das
mov
pavgb
add
ret
lea
or
test
push
(bad)
and
mov
xor
loopne
leave
push
adc
pop
add
push
popa
jae
sub
scas
adc
jae
daa
jmp
dec
adc
and
out
push
pop
pop
xchg
mov
lods
mov
lods
sbb
xor
(bad)
movaps
fidivr
ror
inc
or
mov
inc
add
aas
push
(bad)
cld
(bad)
dec
mov
add
xchg
or
ins
lods
das
lahf
cmp
jne
fsub
inc
pop
xchg
push
xchg
scas
outs
adc
push
sub
imul
mov
push
adc
nop
mov
cmp
sbb
and
mov
inc
(bad)
int3
sbb
pop
lahf
adc
imul
nop
and
adc
sub
mov
bound
push
mov
fimul
sbb
mov
movs
add
pusha
add
es
or
pop
jo
xchg
and
popa
test
add
imul
push
push
js
test
jno
inc
fldlg2
je
ror
rol
(bad)
hlt
push
clc
sbb
or
das
(bad)
adc
stos
add
xchg
and
mov
add
out
mov
cmp
lea
dec
pop
mov
andps
js
xor
sbb
pop
xchg
sub
or
lock
and
repz
push
sub
rol
sub
push
cmc
mov
cmp
rol
and
sti
dec
or
lods
dec
add
sbb
or
les
pop
js
ret
and
daa
pop
adc
pop
xchg
jae
fcom
push
arpl
jo
mov
fs
adc
dec
xchg
aad
pusha
sub
test
mov
fisubr
outs
xchg
pop
mov
popa
xor
js
jns
mov
add
ins
(bad)
leave
movlps
mov
imul
or
inc
inc
pop
enter
fmul
in
adc
jns
or
inc
sub
cmps
movs
xor
jp
in
add
popa
stc
push
xor
add
sbb
int
pushf
cs
mov
or
mov
inc
movs
popa
and
pop
pop
mov
sbb
add
(bad)
pop
jae
cmp
popa
test
or
mov
lods
xlat
mov
mov
pop
add
mov
out
inc
leave
sbb
or
repz
lods
vpcmpgtw
inc
pop
mov
stos
lahf
(bad)
push
inc
mov
gs
add
popa
stc
mov
stc
pop
sub
xchg
add
xchg
adc
imul
popa
mov
and
shl
dec
push
dec
stos
movs
scas
rol
push
push
sbb
rcr
inc
adc
sbb
cs
cmp
ror
or
test
dec
xchg
cmp
mov
dec
mov
add
clc
fmul
mov
test
outs
dec
faddp
add
adc
ss
xchg
push
dec
sahf
pop
inc
add
cs
clc
pushf
adc
mov
dec
xchg
dec
jae
bound
sahf
fiadd
xor
or
adc
xor
xlat
or
pop
jge
mov
hlt
stos
fdiv
sub
mov
push
xor
or
add
inc
call
aaa
mov
mov
sub
jb
sub
add
pusha
sub
push
adc
sbb
adc
add
icebp
mov
popa
adc
pop
xchg
movs
ins
cmp
or
xor
dec
rcl
push
push
call
shr
dec
push
cmp
scas
fistp
inc
call
xor
jae
daa
and
jmp
daa
daa
sar
dec
pop
enter
xchg
leave
leave
cmp
enter
leave
stc
sub
imul
in
sbb
jb
jb
mov
cmp
sbb
or
dec
leave
or
loopne
int
sbb
dec
push
and
iret
ins
sub
psrld
add
mov
sub
mov
dec
fld
cld
add
rcr
test
outs
jge
(bad)
push
lea
inc
push
ins
cmp
dec
jg
cmp
aad
ret
or
cmp
and
cmp
xchg
or
or
inc
popa
pop
aad
sbb
aad
(bad)
jmp
test
push
push
in
push
add
ret
mov
mov
cmps
adc
movs
xor
dec
adc
and
mov
jl
inc
outs
or
or
enter
mov
sbb
inc
out
dec
ret
push
push
cwde
adc
cmp
movs
jge
xchg
jl
xchg
and
or
push
mov
scas
mov
test
std
call
add
repz
mov
inc
loope
iret
add
mov
cmp
or
add
jo
mov
adc
fisttp
cli
out
mov
mov
in
jne
dec
ja
add
cmc
pop
push
jb
xchg
jmp
add
mov
std
dec
jecxz
pop
dec
cmp
movs
sti
dec
inc
mov
adc
cmp
dec
or
adc
dec
sbb
in
(bad)
push
in
movs
xor
sbb
fadd
adc
mov
push
jp
inc
in
cmps
jo
sub
and
xor
(bad)
leave
push
sbb
pop
jmp
loope
(bad)
ret
aad
xchg
aam
push
add
inc
xor
push
lahf
add
add
adc
and
into
in
jno
popf
jae
in
adc
das
sub
mov
inc
retf
sar
cld
ins
stos
in
inc
ja
add
and
stc
add
enter
neg
xor
dec
(bad)
outs
mov
mov
movs
dec
dec
out
or
cmp
push
lock
test
pop
inc
cmovne
into
dec
loopne
in
int
mov
dec
xchg
ds
push
adc
adc
pop
jp
mov
retf
push
jbe
push
dec
or
xor
and
sbb
fmul
rcl
or
pusha
inc
xor
inc
imul
out
xor
mov
loopne
push
lods
retf
adc
sbb
sbb
sub
mov
and
(bad)
jle
cmp
xor
mov
cs
or
push
cs
inc
inc
inc
inc
jge
int
inc
inc
cs
sub
dec
jo
inc
inc
inc
inc
mov
jmp
and
inc
cs
outs
xchg
mov
out
and
inc
jg
int3
repz
inc
cs
sbb
cmp
gs
inc
inc
shr
and
or
sbb
and
sbb
sbb
mov
mov
push
push
dec
mov
es
inc
ror
stos
xor
arpl
add
inc
push
cmp
cmp
cmps
pop
popa
test
ret
(bad)
or
mov
and
int3
pop
adc
or
rol
xchg
cmp
push
sub
cli
cmp
mov
mov
in
push
shl
loope
sahf
and
mov
xor
mov
ret
inc
sbb
add
rcr
sbb
ror
in
adc
xchg
fwait
(bad)
adc
and
scas
mov
cmp
cmc
cmp
ins
sbb
add
xor
mov
dec
js
xchg
push
shr
jl
mov
cmc
xchg
sbb
call
add
in
dec
add
push
jmp
inc
sbb
push
js
pusha
or
adc
sbb
sbb
sbb
xchg
sub
xchg
push
dec
and
push
aaa
inc
in
nop
sub
inc
rcl
dec
and
dec
sahf
inc
inc
psubusw
icebp
add
xor
cmp
pop
mov
or
rcl
aad
pusha
mov
cmp
lods
add
leave
rcl
pop
pop
adc
jns
aad
pop
pop
pop
into
sbb
xchg
xor
and
xchg
sbb
sub
shr
mov
xor
adc
mov
movs
sub
xchg
jmp
clc
iret
pop
test
add
mov
loope
xor
lods
in
jmp
outs
inc
and
mov
jns
jp
sahf
jg
or
and
mov
push
repnz
mov
stos
popa
xchg
xchg
lods
and
movs
adc
xchg
pop
or
lods
in
sbb
enter
nop
pusha
enter
pop
or
(bad)
add
icebp
jno
and
setae
call
push
jae
dec
and
test
mov
sti
mov
sbb
adc
pop
or
sbb
ret
sbb
fld
add
push
dec
sub
mov
pop
mov
cmp
lea
sub
scas
jmp
in
adc
jle
je
and
cmp
mov
(bad)
and
dec
add
mov
inc
popf
cdq
jnp
loopne
shl
(bad)
pushf
je
push
xlat
mov
jo
test
or
sbb
and
pop
test
addr16
xchg
or
xor
in
mov
or
add
jmp
jb
jmp
or
jb
push
sbb
or
xchg
call
imul
mov
cmps
mov
pop
in
adc
out
and
pusha
in
xchg
rol
mov
cmp
adc
pusha
jg
dec
adc
ret
shr
dec
scas
pusha
(bad)
mov
or
iret
add
jae
jecxz
not
mov
mov
daa
jg
scas
push
sub
pusha
xor
add
daa
int
test
popf
pop
mov
xchg
and
retf
sbb
mov
mov
add
dec
loope
adc
mov
sbb
pop
mov
popa
cmp
mov
fcmovnbe
fs
sbb
aam
pushf
das
xchg
xchg
dec
sub
xchg
inc
ss
jl
test
test
cmp
sbb
jne
mov
or
loopne
push
adc
push
add
(bad)
pop
pusha
sub
je
mov
dec
cmps
pop
ss
sbb
pusha
or
nop
xor
xor
or
aas
xor
mov
cmp
push
xchg
(bad)
mov
ret
add
dec
mov
pop
jg
iret
jmp
xchg
aas
adc
xor
push
jne
and
call
adc
mov
jecxz
xor
xchg
mov
ja
fwait
dec
inc
push
sub
and
loopne
sbb
or
icebp
(bad)
call
stos
mov
jo
jns
sub
adc
sbb
sbb
or
lds
push
or
fidiv
push
and
pusha
adc
loopne
fstp
aaa
stc
push
xchg
mov
shl
in
sti
lock
enter
fs
mov
dec
jae
cmp
into
add
or
rcl
pop
call
push
enter
pop
add
mov
cmps
lock
in
loop
or
repnz
add
pop
pushf
mov
(bad)
loope
cld
mov
daa
pop
sub
or
adc
adc
add
mov
int
add
add
add
rol
and
(bad)
mov
dec
sub
nop
and
pop
jne
sbb
(bad)
in
mov
pop
fadd
fadd
js
sub
add
pop
ret
mov
xchg
leave
mov
jge
mov
sub
je
pop
int3
lahf
cmp
add
sbb
add
mov
xchg
rol
jb
add
sub
popf
cwde
sub
dec
or
and
add
mov
mov
or
dec
or
push
inc
or
jns
fcom
and
or
ss
jo
mov
inc
add
push
sbb
into
inc
pop
xor
or
cwde
mov
out
mov
sub
jb
add
fist
adc
stos
rcl
int3
add
add
push
je
sbb
dec
pop
inc
xor
ret
add
stos
(bad)
adc
jg
or
adc
or
mov
cmp
pop
inc
or
inc
jmp
jb
and
jb
adc
xor
shl
sub
cmp
lods
sti
jo
add
or
push
inc
add
adc
jp
cmp
jl
loop
sub
inc
inc
add
imul
sub
add
add
push
adc
inc
enter
nop
xchg
inc
test
xchg
xor
dec
or
out
ins
imul
pop
sbb
popa
xchg
in
push
outs
or
inc
vunpcklps
adc
std
jge
or
cmp
cmp
push
test
jns
ficomp
mov
sub
sub
inc
add
xor
add
cmp
add
adc
sub
add
shl
inc
nop
mov
and
or
adc
inc
add
lock
jae
popa
lahf
mov
mov
(bad)
and
sub
xor
adc
fisubr
ds
and
sbb
(bad)
xchg
mov
test
neg
jmp
add
test
fcmove
and
out
xchg
sbb
das
cli
cmp
adc
push
push
test
fist
mov
and
and
add
nop
lock
add
(bad)
(bad)
ins
in
jge
adc
jmp
cmp
mov
pop
inc
fxtract
pcmpgtd
mov
add
je
dec
push
ret
fwait
out
leave
cmp
sub
aaa
and
stos
sub
sbb
int
pusha
minps
neg
and
add
call
aam
dec
call
push
repz
sti
jne
adc
test
pmaxsw
stos
lods
sahf
pop
mov
push
mov
call
mov
or
and
xor
mov
push
out
add
push
ret
movlps
jmp
inc
inc
or
xor
push
scas
pop
cmp
sti
adc
sti
jmp
jecxz
jno
rcl
sub
dec
or
jo
jae
test
xchg
popf
and
(bad)
aad
and
ret
pushw
ja
ins
or
dec
ss
sti
jo
shr
sti
jmp
and
add
adc
es
bound
ror
imul
pusha
mov
enter
ss
jmp
rcl
sub
push
cdq
adc
dec
jmp
and
pop
sub
lahf
out
sahf
inc
bound
push
mov
xor
cdq
cmp
and
shl
add
call
inc
jne
not
add
mov
adc
jle
push
dec
rcr
sti
sub
rol
and
nop
push
sbb
dec
inc
xor
jno
sbb
pop
gs
adc
sub
xchg
enter
push
and
inc
xor
pop
or
lods
retf
adc
xchg
push
add
out
sbb
mul
jmp
add
dec
sub
mov
call
arpl
sub
mov
jl
sub
or
pushf
adc
cld
jo
sahf
ds
test
jbe
or
and
add
jle
adc
dec
mov
test
jge
(bad)
pusha
cmp
dec
push
cmp
cmp
je
pop
das
pop
cmp
clc
adc
ret
mov
sub
enter
ins
pop
mov
cli
pop
lods
test
enter
mov
mov
(bad)
push
lods
mov
xlat
dec
adc
mov
push
data16
nop
and
sbb
jno
js
sbb
cmp
mov
ret
test
(bad)
jp
ins
adc
fwait
adc
inc
data16
add
or
dec
fnstcw
add
sbb
xchg
test
dec
xor
daa
xchg
adc
xor
mov
sbb
lea
and
mov
les
adc
out
sub
xor
jl
pop
jb
cmp
xor
or
xor
sub
add
pop
mov
pop
ret
iret
sti
or
sub
shl
add
fist
stos
call
mov
call
push
mov
mov
and
clc
sbb
pop
or
mov
and
pop
add
fwait
adc
or
pop
mov
lahf
inc
and
inc
or
mov
test
es
push
jno
dec
neg
jne
ror
xchg
cwde
push
inc
div
mov
cli
lds
inc
inc
sar
push
in
cld
rol
jnp
je
mov
or
daa
shr
out
std
test
adc
aam
arpl
popa
inc
mov
adc
mov
push
sub
xchg
and
cmp
pop
push
mov
mov
pop
test
cmps
jo
and
xchg
inc
dec
fisub
and
ins
sbb
pop
imul
pop
and
outs
push
rol
add
test
jne
out
push
mov
cmps
add
jo
push
sbb
js
and
push
test
adc
xchg
or
push
fistp
lock
lahf
stos
pop
aaa
lock
dec
test
sysret
mov
and
xor
rcr
mov
addr16
(bad)
fisttp
sub
stc
and
aaa
inc
and
adc
jno
and
bound
inc
cs
ss
pop
adc
sbb
mov
push
pop
add
xlat
push
pop
xor
add
retf
cmp
mov
stos
jg
cmp
popa
mov
test
neg
adc
cmp
and
mov
dec
add
push
sbb
mov
sub
fst
xor
adc
jg
and
das
pop
jmp
add
push
mov
dec
add
dec
cmp
daa
inc
mov
jg
adc
push
xchg
sar
cmp
pmaxub
popa
(bad)
or
outs
inc
sbb
in
bnd
add
mov
adc
test
dec
daa
mov
fs
cmp
out
test
mov
icebp
icebp
and
add
jns
in
xchg
and
xlat
and
pop
dec
enter
outs
mov
les
sbb
or
out
cmp
test
mov
pop
ds
push
inc
sub
add
push
es
ret
out
ins
imul
sub
mov
sbb
dec
nop
xlat
cmp
or
je
scas
or
mov
jp
mov
pop
add
popa
retf
mov
test
or
movs
add
dec
pop
mov
cld
pop
dec
add
test
cld
xchg
push
pop
std
push
jmp
sub
add
or
inc
add
or
movs
in
push
sbb
push
scas
push
add
sbb
adc
out
int3
add
push
push
lea
loopne
dec
(bad)
push
mov
mov
popa
add
dec
inc
pop
mov
outs
das
xchg
(bad)
cmp
jge
sbb
out
sbb
mov
cmp
jno
push
jle
ins
cmps
inc
pop
sub
mov
fidiv
and
mov
sbb
xchg
mov
pop
mov
add
add
jge
inc
and
outs
adc
push
std
adc
pop
shr
xchg
cmp
or
mov
fs
enter
sahf
xchg
gs
mov
mov
in
add
add
inc
jbe
sbb
cs
push
sub
jg
xor
retf
inc
and
dec
imul
sub
and
test
jbe
je
test
add
pop
fisub
inc
add
aaa
and
in
call
jae
enter
sbb
test
jge
test
pop
jne
mov
jnp
(bad)
clc
jb
test
pop
out
sub
or
and
xchg
popa
ja
dec
mov
inc
mov
test
rol
push
add
xchg
xor
xor
movs
in
sbb
test
cmps
sbb
cli
push
(bad)
enter
fisub
inc
adc
aas
and
and
je
add
pusha
dec
ja
rcl
or
ret
inc
popa
xor
push
sbb
es
sub
push
(bad)
arpl
popa
or
jb
pop
lds
add
pop
or
retf
xchg
imul
add
cmp
sub
cld
push
inc
sub
mov
mov
minps
ss
xchg
inc
leave
push
adc
nop
mov
sub
pop
adc
push
xor
das
enter
daa
mov
inc
cld
sbb
cmp
and
inc
test
adc
xchg
inc
adc
enter
push
ds
ja
and
jne
test
add
jmp
popf
mov
push
jns
pop
out
xchg
dec
and
clc
fs
fsubr
sbb
sbb
inc
xchg
sbb
test
add
js
je
cli
stc
push
ret
mul
add
mov
mov
mov
jecxz
aaa
mov
add
pushf
adc
dec
mov
rol
inc
in
imul
inc
lods
pop
add
pop
mov
popf
sbb
xor
or
adc
cmp
adc
dec
dec
inc
adc
movs
lahf
add
mov
(bad)
mov
dec
pop
inc
push
mov
push
call
mov
pusha
retf
sbb
or
aaa
pushf
inc
jg
nop
(bad)
stc
mov
fbstp
pop
and
inc
and
adc
sbb
int3
or
adc
inc
cmp
pop
jecxz
loop
rcl
dec
test
(bad)
push
add
ins
lds
jecxz
mov
shl
les
stos
test
xor
adc
or
sub
dec
adc
rcl
sbb
dec
and
cmp
xchg
int3
cmp
or
cmp
aas
nop
push
xor
sbb
inc
sbb
stos
inc
outs
cs
mov
sahf
movs
adc
inc
dec
pop
add
push
mov
jno
xchg
inc
inc
les
das
push
call
movs
inc
sub
add
adc
push
adc
movs
aaa
inc
or
add
xchg
xor
dec
or
xchg
inc
pop
xchg
and
add
dec
pop
sub
pop
xor
cdq
and
mov
jmp
jnp
pop
test
popa
dec
not
inc
or
sbb
sub
in
xchg
movs
and
xchg
sub
xchg
mov
mov
mov
cmp
jbe
pop
stos
sbb
sbb
test
or
aad
sti
dec
inc
xor
push
cli
test
xor
cwde
pop
addr16
fadd
lods
dec
push
adc
outs
sbb
(bad)
fcomi
mov
mov
mov
mov
or
stc
sar
push
rol
sub
and
rcr
je
add
mov
pop
jl
mov
mov
ds
fist
leave
add
int3
pop
add
adc
add
pop
adc
push
pand
loopne
cmp
mov
lahf
push
popa
ins
or
or
mov
aam
mov
mov
push
jo
call
popf
push
dec
stc
fcomi
scas
and
jns
push
adc
pop
fmul
adc
adc
push
or
inc
fwait
adc
leave
dec
je
daa
push
inc
stos
mov
jo
inc
popf
fadd
cmp
iret
pop
mov
inc
sub
lahf
cmp
icebp
cmp
inc
rcr
mov
push
fidiv
adc
mov
nop
jl
(bad)
lock
fs
add
and
mov
sub
sbb
pop
or
and
enter
inc
test
or
or
xchg
push
pop
shl
fimul
pop
add
je
mov
inc
inc
inc
jge
sub
mov
and
add
or
dec
and
jmp
les
or
add
fcomp
push
dec
pusha
add
mov
fdivr
fld
cwde
adc
fld
sbb
das
or
mov
jmp
ds
dec
inc
dec
pop
call
dec
test
test
adc
add
retf
ret
xchg
cmp
sbb
cmps
xlat
pop
pop
nop
push
and
rcl
cmp
xchg
push
jb
xchg
pop
addr16
pop
in
or
cmps
add
jecxz
adc
and
add
movsx
xchg
out
inc
ret
nop
aas
adc
test
(bad)
cmp
daa
or
icebp
push
inc
mov
xor
pop
inc
pop
xchg
xchg
push
sbb
pop
and
sbb
xor
call
add
dec
inc
shr
push
and
push
imul
inc
push
int3
lds
cmp
mov
dec
test
shl
sti
adc
mov
add
jb
jo
mov
in
fadd
push
xor
xchg
push
clc
ins
sbb
sub
ja
in
dec
dec
sub
(bad)
mov
dec
adc
adc
pop
cmp
pextrw
add
arpl
retf
outs
push
push
xor
mov
xchg
loope
test
pop
test
rol
adc
repnz
and
aas
adc
mul
jl
adc
adc
sub
mov
leave
gs
xor
push
frstor
adc
dec
int3
add
cmp
cmp
mov
sub
inc
or
rcr
dec
or
push
push
mov
inc
and
and
mov
sbb
adc
cmp
dec
cmp
inc
mov
popf
mov
ss
xor
stc
icebp
mov
push
inc
pushf
xlat
(bad)
dec
or
aad
mov
pop
pusha
test
push
xor
outs
mov
bound
out
jne
and
add
sbb
lahf
xor
rol
stos
mov
adc
lds
jmp
adc
popaw
and
add
jne
sbb
mov
je
xlat
(bad)
dec
in
add
sub
sbb
loope
push
enter
cli
jne
dec
mov
inc
pop
outs
dec
or
pop
cmp
adc
xchg
add
cmp
mov
jo
or
push
mov
pop
addr16
sbb
in
dec
or
clc
lea
pop
mov
or
mov
jmp
and
push
outs
push
cmp
je
adc
cli
loope
mov
xor
pop
rcl
outs
fist
add
enter
sub
add
fst
aaa
ins
jo
out
add
inc
push
mov
lea
outs
inc
dec
(bad)
xchg
rcr
push
push
xchg
jo
pop
fwait
ror
pop
push
in
mov
inc
test
ins
rcr
in
dec
xchg
jns
xchg
retf
(bad)
xchg
lock
nop
mov
(bad)
mov
outs
xchg
test
inc
das
add
inc
mov
mov
das
add
mov
sbb
pop
sti
test
sub
add
call
sub
pop
add
inc
out
stos
in
and
sub
(bad)
imul
sbb
mov
outs
inc
dec
clc
add
add
mov
pop
xlat
add
sub
add
loopne
test
sbb
xor
test
and
mov
lods
jnp
lds
out
out
aad
fadd
or
mov
lahf
cmps
sti
movd
not
and
add
test
int3
jo
in
sbb
xor
mov
cmps
lods
add
test
repnz
scas
mov
shl
(bad)
sti
cmp
in
call
(bad)
outs
xchg
push
adc
xor
mov
push
jmp
in
mov
mov
jle
js
inc
sar
adc
xor
xor
js
xchg
adc
aas
push
ret
add
push
daa
ja
cmp
add
scas
inc
add
sbb
inc
mov
out
inc
icebp
mov
nop
pop
dec
jmp
add
sbb
push
loopne
mov
adc
adc
push
cmp
fcmovbe
dec
mov
mov
sbb
test
add
ret
adc
sbb
idiv
dec
cmp
fs
mov
or
pop
cmp
or
inc
sbb
xor
add
cmp
push
dec
call
add
fs
inc
add
gs
call
xor
push
dec
mov
mov
xor
mov
pop
test
inc
jae
cmp
inc
ror
lods
add
dec
dec
push
and
jmp
push
ret
daa
pop
xor
and
loope
or
xchg
xchg
and
and
sbb
xor
push
nop
and
xchg
cmps
jmp
cmp
or
and
fs
xor
or
mov
jae
popa
int3
les
iret
ins
nop
fstp
adc
or
and
lods
sub
mov
or
imul
and
sbb
sub
sub
push
and
call
loop
sbb
mov
cdq
mov
inc
call
sub
stos
inc
add
add
add
(bad)
movs
and
ret
cmp
and
out
add
or
rol
and
push
adc
sbb
mov
dec
movs
adc
mov
inc
lea
or
inc
inc
fidivr
ret
push
push
mov
rcl
loopne
popa
mov
add
mov
or
es
xor
popf
jp
add
icebp
pop
pop
inc
es
sbb
adc
dec
mov
cdq
and
nop
enter
test
dec
test
movs
neg
in
add
stos
add
retf
mov
pandn
call
into
xchg
push
mov
jno
js
retf
clts
inc
mov
cmp
mov
bound
adc
add
push
push
push
js
cwde
mov
mov
in
and
lods
or
daa
ret
cmp
(bad)
push
or
out
xchg
add
fsubr
in
push
add
ins
dec
lods
add
das
dec
lock
fwait
or
adc
pop
push
or
sbb
sahf
fsubr
fnsave
ins
dec
add
or
cmp
or
fistp
mov
add
arpl
jno
clc
sub
add
loop
adc
mov
dec
(bad)
inc
imul
cmp
pop
(bad)
mov
pusha
or
arpl
cmp
test
sub
sub
adc
jns
popa
cmp
jmp
pop
push
mov
inc
add
pop
and
jne
or
call
out
add
mov
fiadd
inc
and
retf
arpl
ror
mov
fstp
sbb
mov
adc
clc
fistp
prefetcht0
jbe
adc
das
inc
or
ror
inc
rol
push
adc
pop
and
push
jp
add
push
fild
es
pop
adc
mov
test
inc
sti
add
push
sahf
cld
fild
cmp
add
rcr
outs
jg
sbb
and
sbb
fs
ret
pop
or
push
add
add
and
sbb
pop
sbb
imul
jns
or
pop
inc
cmp
or
sub
stos
dec
pop
mov
jns
inc
rol
pop
mov
scas
dec
inc
scas
add
or
dec
out
jns
fs
cmc
xor
mov
popa
adc
sub
pop
in
and
add
sub
fst
stos
je
mov
sub
or
push
jmp
or
push
xchg
pop
dec
push
inc
lds
and
cmp
jle
mov
cmp
xlat
jae
out
and
aad
loopne
add
sub
push
cmp
cmp
lods
adc
push
scas
lea
sar
cmp
retf
test
in
lock
mov
xor
jne
rol
ins
xchg
push
jae
ins
lahf
push
je
aaa
mov
or
mov
leave
add
outs
(bad)
push
jg
mov
mov
inc
add
or
out
mov
fwait
mov
or
dec
add
arpl
mov
mov
pop
sub
ss
ja
add
xor
push
dec
std
jle
mov
cmp
jmp
xchg
cmp
jo
or
pushf
or
pushf
neg
inc
cmp
jg
cmps
xor
(bad)
loope
xchg
imul
sub
and
sbb
(bad)
(bad)
test
ffreep
push
xchg
nop
push
xchg
mov
cmp
jl
jge
mov
xor
jp
mov
cmp
cld
dec
push
mov
(bad)
call
pusha
scas
mov
fmul
mov
pop
(bad)
dec
stos
gs
sbb
stos
adc
imul
cwde
inc
and
test
dec
cmps
mov
sub
push
adc
mov
je
adc
mov
push
cmp
in
or
daa
xchg
add
and
xchg
mov
daa
jmp
sbb
sub
jmp
(bad)
stos
icebp
dec
fmul
and
paddw
jmp
or
lea
cs
and
icebp
inc
lea
push
test
cmp
jl
dec
push
sbb
xchg
cmp
loop
or
mov
das
or
sub
inc
test
dec
sbb
ret
mov
ja
mov
add
cmp
add
cmp
push
test
push
(bad)
push
aas
loopne
js
mov
lods
xchg
pop
add
mov
inc
cmp
sar
push
das
and
inc
add
jle
xor
jo
add
comiss
(bad)
stc
lahf
cmp
sahf
dec
push
add
or
add
sub
into
imul
pop
pop
mov
sbb
xchg
or
rcl
fcomp
(bad)
lods
hlt
xchg
retf
in
mov
push
repz
jne
lahf
add
loope
cmc
pop
jl
call
es
lock
push
dec
sahf
add
call
xor
pop
xor
mov
loop
xchg
add
lahf
mul
pop
sub
pop
mov
cmp
dec
adc
jg
scas
xchg
int
xor
and
push
xchg
ffree
je
dec
cmc
push
mov
nop
pop
or
ret
push
push
push
and
test
lds
pop
xor
enter
jecxz
xchg
add
out
jmp
(bad)
mov
pop
mov
and
cs
ret
clc
lahf
pop
nop
scas
adc
sbb
add
jmp
pop
xchg
int3
inc
cmp
icebp
inc
daa
fdiv
int
or
xchg
cld
or
cld
jne
rol
out
loop
inc
or
sbb
or
f2xm1
mov
enter
xor
test
fsubr
dec
or
xchg
mov
adc
test
mov
jno
imul
dec
ret
sbb
add
hlt
jnp
or
sbb
or
js
ss
sub
mov
imul
(bad)
or
in
add
and
dec
inc
or
mov
dec
test
cmovs
adc
out
imul
xchg
call
dec
push
aas
cmp
and
sub
iret
pop
xchg
or
dec
push
add
or
push
push
aad
push
and
jbe
test
sub
jno
jl
out
sub
add
push
repnz
aas
and
adc
stos
dec
rcl
jne
add
xlat
mov
nop
dec
add
ret
je
push
push
and
cmps
loop
or
scas
pusha
inc
add
push
in
dec
inc
cs
shl
dec
add
sbb
add
stos
les
neg
pop
push
cmp
jle
cmp
xor
adc
lods
xlat
xchg
(bad)
clc
and
push
ins
pushf
sub
retf
shr
or
push
sub
pop
cmp
adc
hlt
jmp
(bad)
ficomp
je
or
daa
fcmovnb
sbb
cmp
jo
in
mov
add
add
push
xchg
cdq
sbb
push
sahf
call
cld
jne
cmp
push
xor
push
fdiv
test
mov
fisttp
mov
adc
mov
cmp
push
jp
sbb
adc
adc
in
lods
xchg
jg
jns
add
jo
pop
in
in
fs
test
adc
sahf
inc
je
sub
ja
inc
pop
aas
cmp
xchg
mov
adc
sti
ret
sub
lidtd
add
test
cmp
push
xor
sub
test
or
pop
cmp
mov
sub
pop
sbb
fadd
jge
aas
dec
and
sub
and
dec
dec
pop
fild
ret
sbb
clc
dec
into
push
dec
leave
sbb
rcr
inc
mov
(bad)
(bad)
in
sar
rcl
fsub
xchg
sbb
dec
leave
inc
nop
dec
ret
push
jne
pop
std
xor
ins
or
xor
sub
add
add
mov
test
push
sub
mov
js
in
and
ret
gs
jne
mov
repz
dec
lds
and
mov
adc
jle
dec
jb
(bad)
dec
cmp
mov
pop
rcr
dec
cmp
mov
jle
jne
aad
inc
dec
or
push
or
gs
rol
sub
adc
push
test
loopne
test
pop
inc
inc
and
adc
mov
mov
js
inc
and
fist
xchg
dec
sbb
mov
sub
adc
das
sbb
add
add
mov
sar
pop
or
movs
mov
push
enter
stos
push
sub
jmp
mov
jno
das
pop
add
mov
je
push
add
fs
inc
stos
inc
int3
and
mov
cmp
sbb
mov
out
pop
sahf
fadd
je
ds
fs
push
cmc
cwde
mov
and
jo
add
dec
test
adc
in
mov
and
rol
or
cmc
sub
push
fsubr
jle
jg
movs
and
mov
xchg
jmp
pop
dec
sbb
jg
adc
pusha
inc
xor
sbb
jo
mov
pusha
fistp
ss
jg
(bad)
into
pop
(bad)
jbe
pop
fistp
or
adc
dec
adc
(bad)
and
pop
aas
pop
jmp
lods
cmp
jo
imul
cmp
adc
add
je
in
add
fstp
xchg
dec
cwde
mov
daa
popf
je
pop
jle
cwde
cmp
inc
cmp
nop
or
push
dec
adc
jne
das
jmp
inc
dec
sar
mov
sub
xor
loope
pop
jo
cmp
pop
por
push
ret
adc
in
cld
mov
mov
sub
dec
stc
mov
add
xor
adc
pusha
jne
(bad)
dec
movs
jns
nop
ins
or
or
movs
add
pop
lea
lea
test
pop
push
mov
and
shr
sbb
pop
or
mov
(bad)
pop
xchg
pop
jne
adc
sbb
das
cmp
cmp
pop
xchg
lods
je
int
and
test
mov
add
fs
xlat
test
sbb
pop
inc
loopne
aad
shr
aas
jmp
or
sub
inc
loope
xor
or
or
xor
sbb
adc
push
adc
ror
pop
sti
jne
in
fs
scas
lea
xor
xor
jne
or
mov
loope
sub
xchg
and
int3
and
adc
xor
int3
xchg
jg
rol
pop
in
cmp
mov
sbb
das
jo
push
dec
lahf
rcl
sahf
push
pop
loopne
sti
or
xlat
lods
rcl
adc
movs
dec
sub
or
dec
or
xor
push
or
mov
sbb
mov
aaa
adc
and
nop
js
add
mov
jne
ja
push
or
cmps
sbb
xor
push
jns
pop
cmp
xor
sbb
jno
(bad)
leave
mov
outs
cdq
cmp
sub
in
push
jno
dec
retf
or
or
std
inc
mov
or
mov
sbb
inc
lock
cld
push
inc
pushf
or
pusha
inc
gs
sbb
pop
movs
cs
jo
ins
jmp
inc
xchg
dec
or
in
call
mov
leave
xchg
int3
jns
cwde
sahf
ins
push
stos
adc
arpl
add
push
jmp
xchg
and
pop
icebp
mov
call
mov
inc
or
call
adc
xchg
imul
or
push
in
rol
repz
aam
clc
xchg
or
enter
mov
sti
and
inc
lahf
das
mov
mov
and
ret
or
sar
or
mov
dec
xor
push
add
lock
pop
lods
xchg
fistp
repz
pop
inc
add
stos
test
lods
pop
add
xor
cmp
cmp
sbb
clc
and
mov
push
jnp
rcl
or
out
and
xchg
and
(bad)
sub
add
popa
lock
movs
push
(bad)
or
mov
inc
sti
push
add
push
mov
mov
aad
push
movs
adc
cdq
push
pop
(bad)
xor
shr
mov
xchg
add
stos
adc
cmp
jne
and
xor
test
int
cmp
jae
sbb
xor
fwait
lods
bound
nop
jl
cdq
je
sub
and
and
sbb
ins
adc
popf
xor
jnp
enter
pop
mov
jmp
aas
std
or
or
scas
mov
add
loopne
fadd
jne
sbb
xchg
fistp
into
adc
add
loop
jmp
mov
rcr
mov
jne
cmps
mov
addr16
loopne
sbb
sbb
or
xor
das
cmp
mov
mov
or
out
fwait
add
outs
call
jg
add
retf
shr
add
or
cld
xchg
jo
daa
xor
pop
jp
mov
test
shl
xchg
idiv
and
iret
in
xor
add
fs
jmp
xor
push
(bad)
into
sub
adc
inc
push
adc
or
mov
fwait
andps
and
mov
rcr
add
ins
mov
sbb
je
xor
or
push
xchg
daa
jno
mov
retf
xchg
(bad)
xchg
fimul
sbb
jmp
xchg
out
inc
push
jmp
mov
xor
jg
movs
jmp
pop
xor
lahf
inc
jne
mov
in
jnp
dec
dec
sbb
cmp
push
outs
xchg
adc
mov
mov
mov
push
add
inc
or
inc
pop
inc
lock
ror
inc
mov
sub
pop
sbb
dec
adc
cmps
repnz
push
or
inc
add
dec
inc
xor
imul
test
and
ret
or
ret
sub
and
retf
and
lods
movs
cmps
jmp
ds
adc
(bad)
mov
call
inc
adc
pop
mov
sahf
adc
add
fld
push
or
inc
aaa
inc
rcr
jbe
push
repz
(bad)
pusha
jne
sub
push
call
mov
or
xor
or
adc
add
adc
and
addr16
mov
les
push
adc
shr
add
shl
mov
xchg
mov
cmp
ret
cmp
je
jg
adc
or
jnp
mov
pop
and
pop
mov
loopne
jbe
cmp
shl
jo
mov
clc
sbb
add
call
dec
(bad)
or
fisub
fisub
icebp
dec
adc
adc
clc
pop
adc
out
push
cmp
sub
add
ds
fwait
sbb
fadd
xchg
push
mov
pushf
popf
jb
sbb
sub
enter
pop
add
add
pop
jns
add
add
or
sbb
shr
shl
shl
in
dec
cmp
out
fadd
aaa
popf
and
and
add
mov
jmp
jmp
or
rol
mov
push
inc
and
repz
mov
and
mov
or
push
xchg
call
or
jmp
fstp
jne
sub
(bad)
cmp
xchg
xor
sub
add
or
(bad)
sub
test
lods
nop
jge
dec
dec
outs
sub
sub
jecxz
mov
ja
sbb
fnsave
test
es
xchg
leave
pop
cmp
add
jecxz
or
inc
jnp
push
mov
(bad)
pop
add
fcmovne
adc
nop
push
pop
fimul
cmp
add
cmp
mov
xchg
add
or
push
ret
lea
mov
pop
xchg
or
pop
inc
xchg
jp
xchg
xor
cwde
cdq
xor
mov
(bad)
jne
push
(bad)
or
jecxz
add
push
xor
ss
pushf
and
or
mov
daa
xchg
push
dec
or
jmp
push
sub
xchg
and
rcl
and
push
adc
imul
xor
adc
fcomp
mov
lds
inc
mov
das
fst
jne
shr
add
pop
jne
stc
jns
and
cmc
dec
mov
ss
outs
and
jmp
nop
mov
cwde
cdq
out
fild
dec
repz
and
int3
push
mov
cmp
sub
mov
fwait
add
sub
xor
arpl
sbb
add
xchg
lock
add
adc
or
ror
xchg
js
gs
pop
pop
or
test
xor
pop
or
cld
or
mov
lahf
or
or
add
das
scas
xor
imul
popa
or
push
push
fwait
mov
push
dec
push
fadd
mov
int
repnz
pop
jmp
jnp
pushf
xchg
aad
sub
xchg
repnz
imul
mov
sub
(bad)
dec
xor
push
jnp
jl
adc
add
cmp
inc
adc
add
jmp
mov
in
push
inc
jle
inc
or
mov
test
mov
inc
sbb
das
sbb
hlt
push
mov
imul
or
jge
add
adc
lea
dec
lahf
dec
push
rol
popf
pop
clc
pop
sub
fwait
and
and
fcomp
inc
jle
inc
enter
aas
mul
or
jbe
pop
lods
jge
sub
jo
mov
mov
popf
sub
or
inc
leave
dec
hlt
scas
or
leave
movs
dec
rol
nop
mov
xlat
mov
push
xor
cld
mov
push
or
outs
pusha
mov
mov
imul
sub
aam
adc
cli
data16
sub
adc
inc
mov
inc
push
clc
aam
or
retf
adc
clc
fstp
or
sub
pop
movs
push
jmp
pop
jmp
sbb
sub
inc
jge
mov
gs
add
mov
xchg
add
data16
(bad)
ret
dec
clc
push
test
pop
cmp
outs
cmps
or
mov
xor
push
push
inc
adc
scas
jmp
xchg
xchg
loope
push
loop
push
jnp
pop
inc
sub
das
push
push
pop
adc
jl
mov
ret
add
push
jecxz
inc
popa
test
inc
loopne
pop
or
cmp
sbb
and
dec
scas
inc
sbb
dec
ja
lock
sar
and
sub
int3
cmp
adc
push
add
in
ins
mov
xor
cdq
pop
mov
sbb
adc
sub
or
push
call
xor
pop
jl
nop
aas
or
sbb
or
or
or
add
ss
cmp
sub
movs
fidivr
(bad)
push
sbb
test
scas
daa
and
jae
imul
or
inc
cmp
sub
add
je
les
mov
daa
mov
mov
lock
call
popa
loopne
xchg
dec
add
stc
add
leave
leave
sbb
rol
mov
pop
xchg
push
xchg
sub
mov
jno
dec
inc
cmp
ds
lods
adc
fbld
je
pop
scas
test
pusha
add
cmp
inc
adc
mov
iret
sub
jne
fs
mov
fisubr
jne
jmp
add
sbb
scas
adc
sub
call
dec
lahf
popf
inc
nop
dec
loope
or
adc
push
cmp
mov
push
mov
mov
xor
or
or
sbb
jo
ds
inc
inc
(bad)
xchg
xchg
jg
mov
inc
or
pop
fadd
mov
mov
adc
ins
mov
sub
and
jg
fcom
cli
imul
inc
rol
sbb
inc
nop
push
or
ror
cmp
loop
push
push
rcl
sbb
xchg
(bad)
or
sub
in
pop
or
jmp
lea
(bad)
jl
jo
jecxz
jmp
sbb
hlt
popa
and
inc
or
dec
nop
dec
mov
fwait
js
add
cmp
xchg
inc
jo
push
pusha
bound
out
mov
cwde
add
mov
sub
inc
call
movs
add
sbb
sbb
test
push
js
loopne
pop
mov
push
mov
sub
rcl
hlt
scas
test
sub
mov
(bad)
loope
or
out
aad
mov
dec
inc
cmp
scas
nop
sbb
xchg
js
repz
lods
mov
imul
push
push
(bad)
xchg
jp
ins
adc
mov
int
sub
adc
repz
push
sbb
int3
stc
push
mov
shr
sbb
aaa
test
inc
and
or
and
retf
sub
mov
pop
adc
or
shr
test
inc
mov
inc
loop
inc
dec
push
std
sub
(bad)
into
sub
push
dec
sub
mov
pop
fiadd
xor
sbb
hlt
ins
jmp
outs
sub
or
add
repnz
jg
nop
mov
add
aaa
pop
jmp
adc
add
pop
call
add
inc
imul
(bad)
call
(bad)
jge
fdiv
pop
imul
mov
rol
add
jle
jno
jl
inc
xor
cmp
mov
cs
ret
xchg
mov
adc
push
sar
js
add
iret
call
test
adc
mov
shl
fwait
and
repz
xor
dec
pusha
cmp
fdivr
out
push
or
jb
jmp
push
inc
xchg
sbb
popf
clc
mov
test
push
gs
inc
or
sub
xor
and
sti
shl
or
je
push
dec
cmp
xchg
imul
bound
dec
and
inc
(bad)
out
dec
repnz
scas
outs
call
(bad)
je
sbb
or
jmp
add
push
call
add
and
pop
mov
xchg
stos
stos
adc
mov
jne
in
pusha
xchg
addr16
and
push
outs
and
adc
ins
in
jne
pop
add
mov
jo
retf
mov
aaa
fidiv
clc
hlt
je
sar
cmp
mov
push
loopne
jg
nop
mov
mov
mov
jge
imul
push
mov
inc
or
out
xor
push
dec
ds
clc
add
fld
cmc
mov
xchg
jecxz
mov
jmp
pop
ffreep
adc
stc
mov
add
adc
inc
pop
jne
mov
add
xchg
xchg
idiv
adc
test
mov
ss
test
lock
cmp
movs
dec
dec
clc
jmp
xchg
or
movs
mov
add
push
dec
(bad)
cmp
and
popa
xchg
cmp
leave
mov
push
imul
add
nop
repz
sbb
xor
dec
clc
sub
add
cmp
mov
cwde
inc
call
ja
and
xlat
popf
xchg
icebp
jmp
test
cmp
jno
add
dec
mov
arpl
call
pop
test
dec
mov
add
lods
xchg
pop
push
add
push
adc
adc
fldenv
ret
mov
push
fld
movs
or
add
jne
hlt
fcmovb
sub
mov
sar
mov
mov
jmp
das
inc
cmovbe
sbb
add
stos
nop
mov
cmp
call
jne
mov
call
and
adc
fs
lea
mov
sub
add
sbb
sbb
dec
cmovl
push
push
je
lea
rcr
or
ins
(bad)
(bad)
jmp
and
sbb
mov
add
jecxz
push
xor
add
dec
pop
mov
cmp
adc
xchg
stos
aas
mov
ss
push
adc
pop
and
stos
test
or
(bad)
or
leave
aam
lods
or
cmp
sti
adc
test
daa
mov
mov
pushf
sbb
sub
xchg
xor
test
inc
mov
fild
add
sbb
and
cwde
cld
mov
dec
in
cli
add
dec
movs
adc
cld
clc
xchg
sub
sbb
pushf
dec
pop
ret
scas
adc
jge
daa
xor
adc
in
jmp
push
sbb
call
and
adc
inc
int
add
mov
adc
sbb
sahf
pop
mov
test
and
push
pop
cmp
dec
rcl
and
or
push
out
sbb
push
xor
cmc
popf
dec
lock
sub
into
mov
and
pop
or
xlat
cld
nop
dec
xor
mov
mov
fcomp
mov
sbb
or
mov
cmp
mov
das
sub
mov
or
ins
jne
jecxz
mov
inc
ins
mov
and
int
xor
fisub
mov
pop
and
add
xor
and
adc
inc
dec
dec
fmul
inc
push
push
push
les
sbb
mov
repz
pop
jge
xchg
or
jmp
push
xchg
adc
in
(bad)
jmp
or
imul
mov
push
adc
mov
mov
clc
test
fucom
ds
test
sbb
pusha
loop
lea
or
adc
jp
pop
pop
add
test
sar
jne
inc
imul
cmp
out
(bad)
adc
lods
and
out
pop
inc
cmp
mov
inc
xchg
inc
lods
je
test
dec
pop
jne
adc
rcl
leave
or
ss
sub
jmp
aad
mov
mov
arpl
shl
mov
xor
pop
or
test
jne
jnp
sub
mov
cmp
adc
sub
imul
shl
mov
mov
xor
rcl
add
loopne
pop
pop
add
leave
and
ret
cmps
and
inc
or
pusha
gs
test
imul
pop
movs
mov
mov
outs
loop
icebp
pop
sub
pop
shr
xor
inc
or
in
dec
mov
sbb
add
or
imul
and
imul
gs
xor
hlt
stos
adc
nop
pop
sti
xchg
jp
fs
and
loopne
test
inc
sbb
sbb
movs
cmovs
mov
mov
cmp
aam
mov
leave
add
xor
(bad)
fdiv
xor
push
jae
or
inc
inc
ret
and
push
out
xor
add
(bad)
sbb
or
sbb
xadd
inc
ins
or
clc
ror
pop
push
inc
jno
xchg
pop
addr16
(bad)
sbb
cmp
xchg
movs
leave
or
add
push
loop
shl
jecxz
inc
mov
xchg
mov
ror
inc
add
mov
mov
ret
data16
adc
xor
push
xor
addr16
mov
bound
sub
sub
xchg
shl
pop
adc
xchg
inc
xchg
mov
pusha
mov
add
sbb
popa
inc
mov
(bad)
mov
test
xor
leave
sar
mov
mov
xlat
adc
mov
xor
push
loope
out
shl
fnstcw
jmp
(bad)
sbb
(bad)
retf
gs
or
adc
or
adc
call
aas
jo
hlt
jo
dec
push
mov
ret
test
push
mov
dec
push
stos
das
jne
shl
sbb
mov
adc
inc
(bad)
repz
inc
xchg
and
sbb
mov
push
lds
pop
lods
sub
fwait
fs
pop
adc
cmp
and
aam
test
adc
clc
ja
xor
addr16
or
dec
pop
or
xchg
mov
and
in
jmp
retf
je
pusha
cmps
inc
push
or
inc
mov
shl
or
xchg
mov
xchg
inc
loop
test
xchg
pop
iret
aam
rcl
(bad)
into
push
pop
mov
ins
cmp
sub
mov
or
aad
sbb
sbb
ret
xchg
into
shl
pop
pop
push
mov
mov
adc
push
and
ss
jnp
mov
xchg
sbb
push
int3
cmps
jo
cdq
adc
mov
icebp
fcomip
adc
pushf
and
and
sub
inc
push
push
cmp
or
xchg
(bad)
and
xchg
test
lock
add
movs
pusha
add
int
xchg
repnz
mov
pop
out
shl
inc
inc
pop
add
jmp
xor
pop
cmp
mov
or
push
pop
pop
cli
mov
or
test
or
push
dec
retf
call
loopne
xchg
xor
push
ins
das
jnp
sbb
call
out
lods
lea
aam
push
add
in
jne
out
nop
fidiv
mov
xchg
pmaxub
push
dec
arpl
leave
sbb
pop
sbb
lea
out
sti
les
pop
xor
xchg
pusha
loope
ret
and
mov
rcl
ret
nop
jbe
adc
or
mov
call
mov
sub
push
seto
rcl
xchg
lock
sar
mov
sub
inc
ins
inc
push
xchg
fsubr
movs
or
pop
in
std
popa
xchg
xor
js
pop
add
sub
and
js
push
inc
stos
mov
aad
sbb
and
mov
xor
mov
sbb
add
add
adc
ja
sub
call
xlat
adc
pop
pop
adc
or
icebp
xchg
inc
push
inc
push
icebp
sbb
mov
dec
ins
or
add
inc
sub
loope
and
or
sbb
pop
xchg
pop
inc
cmps
invd
or
cli
fiadd
dec
cdq
mov
jmp
sbb
es
adc
jne
pop
adc
(bad)
push
nop
imul
pusha
jmp
push
pop
jb
push
jnp
xchg
adc
and
add
adc
(bad)
inc
or
xchg
and
dec
mov
xor
dec
mov
dec
add
adc
daa
sub
daa
bound
enter
adc
call
or
hlt
mov
add
icebp
cmp
mov
sti
sbb
jl
add
jg
or
xchg
hlt
adc
dec
aad
mov
stc
pop
mov
mov
pop
and
clc
dec
ins
loop
pop
ror
add
inc
js
push
fisttp
sub
adc
mov
out
mov
outs
fisttp
fstp
pop
push
mov
push
mov
mov
outs
push
push
pop
outs
or
and
or
adc
scas
add
nop
mov
xchg
pushf
pop
dec
loopne
xchg
or
test
add
sub
rol
push
jecxz
xor
mov
dec
inc
test
inc
jnp
gs
add
fldcw
outs
ret
adc
call
test
test
push
jo
in
mov
dec
stos
ss
ret
inc
xor
scas
inc
adc
in
xchg
mov
push
jecxz
cmps
xchg
test
jge
shl
push
rcr
nop
mov
clc
dec
add
or
mov
and
add
push
movs
or
dec
sub
push
fwait
add
cmp
cmp
rcr
lods
mov
and
fisttp
mov
xchg
jmp
sub
xchg
daa
inc
cmp
pop
fisttp
js
xor
mov
mov
push
mov
jl
jae
daa
icebp
fadd
mov
xchg
inc
pop
stc
mov
daa
icebp
nop
dec
(bad)
mov
xchg
sub
push
and
test
mov
jno
cs
jo
lahf
nop
je
test
push
mov
data16
dec
stos
dec
(bad)
retf
ret
mov
add
pop
and
push
add
sti
cmp
sub
nop
mov
mov
xchg
ret
jnp
movs
test
cwde
cmps
test
cwde
(bad)
add
xor
hlt
and
mov
xor
dec
pop
cmp
xchg
mov
and
fisttp
aas
repz
retf
add
push
sbb
add
add
jmp
ret
mov
das
movs
not
dec
mov
aaa
mov
es
daa
push
xchg
cs
sub
pop
xchg
test
test
pop
adc
cmp
pop
push
test
and
sbb
popa
pusha
aam
mov
movs
push
adc
fsubr
and
inc
ret
aad
jne
jmp
ja
push
xor
test
or
xchg
lods
inc
(bad)
or
adc
lahf
mov
test
or
push
mov
push
dec
sbb
xlat
stos
cmp
mov
inc
es
es
js
pusha
pop
xchg
outs
and
lods
inc
dec
pop
push
mov
xor
mov
scas
jmp
shl
xchg
mov
gs
sti
sar
retf
mov
mov
adc
pop
pop
ins
pusha
mov
cmp
test
dec
test
inc
jl
test
lds
jb
test
push
and
jb
xor
popa
loop
jo
ins
pop
and
or
ins
push
add
inc
clc
icebp
call
pop
cmps
in
or
jecxz
push
mov
adc
adc
pop
jb
dec
dec
dec
dec
inc
pop
test
loope
mov
aas
push
nop
test
sub
push
push
xor
inc
add
push
jno
adc
push
fild
aaa
push
int3
inc
loopne
pop
cmp
mov
shl
mov
adc
pusha
ins
sbb
cmps
ins
call
iret
and
adc
mov
nop
xor
cmp
mov
pop
push
pop
cmp
pop
and
and
or
xchg
sbb
dec
nop
pop
ficom
adc
jl
aas
cwde
inc
pop
adc
fistp
inc
imul
jp
out
jl
or
and
sub
aaa
ins
mov
icebp
push
mov
dec
fmul
mov
sub
push
outs
sbb
push
mov
mov
inc
int
nop
add
jmp
rcl
scas
pop
xor
cmp
call
sub
mov
push
das
add
icebp
pop
(bad)
dec
imul
inc
(bad)
or
fadd
or
inc
inc
xor
(bad)
bound
sbb
push
stc
clc
pop
dec
pop
fisttp
rcl
sbb
loopne
pop
dec
push
push
and
xchg
loope
jo
adc
ss
dec
out
pop
dec
pusha
cld
jbe
jns
nop
jb
or
dec
or
imul
sub
cmp
imul
push
xor
xor
pop
lock
int3
mov
(bad)
int3
jmp
adc
xchg
sub
fistp
fsub
test
cmp
sbb
aam
sar
das
and
jl
out
cmps
test
inc
xchg
jo
stos
outs
or
inc
or
pop
inc
push
cld
hlt
frstor
or
add
dec
adc
in
xchg
cld
sbb
xchg
mov
pop
jecxz
push
cmp
dec
lock
adc
inc
test
sbb
cmp
jnp
jmp
inc
sub
rcl
mov
and
or
das
inc
or
ret
aaa
and
dec
lods
movs
mov
dec
pop
pop
cs
ror
xchg
pop
call
jne
cmp
push
outs
mov
loopne
(bad)
mov
pop
fwait
xor
xor
cmp
mov
mov
aam
repnz
cmc
adc
push
xchg
push
into
dec
adc
adc
pop
add
mov
pop
scas
adc
jne
(bad)
call
pop
(bad)
mov
lahf
dec
add
push
sbb
sub
inc
adc
pop
test
sub
mov
or
stos
push
and
adc
mov
adc
inc
dec
daa
xor
inc
not
pop
sub
test
add
test
push
or
inc
pop
btc
mov
xchg
dec
ret
adc
dec
or
mov
jb
inc
xor
rcr
or
pop
cmp
movs
add
and
nop
push
fisub
ror
leave
loopne
push
jp
and
cmps
test
arpl
in
test
(bad)
pop
shr
mov
xor
inc
dec
xor
mov
std
dec
jecxz
pusha
mov
dec
test
pop
xor
daa
mov
xchg
pop
jae
or
jbe
pop
pop
mov
xor
mov
push
inc
sbb
movs
mov
inc
push
mov
nop
add
data16
popa
jmp
test
out
outs
mov
les
fisttp
sahf
sbb
mov
and
test
mov
mov
cmp
add
es
sbb
pop
dec
pop
cmp
xor
ins
xor
int3
sbb
mov
dec
das
cmp
mov
cs
lock
jbe
push
push
mov
pop
pop
js
mov
and
push
sub
or
inc
add
sub
mov
stos
and
shl
jecxz
movs
sub
jne
cmp
sbb
mov
pop
movs
push
loop
fs
call
fld
xchg
dec
scas
dec
imul
div
jmp
sbb
push
or
add
sbb
pop
sbb
xor
sbb
pushf
and
jo
adc
mov
jno
dec
xchg
push
test
rol
sub
hlt
sub
mov
mov
cmp
or
ja
out
lods
add
push
les
push
outs
dec
out
sahf
jg
pushf
test
lahf
dec
push
sub
inc
and
pusha
xor
lock
ins
shl
inc
jmp
sbb
pop
ins
imul
sub
aas
movs
push
loope
lock
enter
pop
and
and
je
arpl
cs
and
clc
and
inc
dec
push
(bad)
in
pop
inc
dec
in
mov
xchg
clc
mov
enter
sub
jmp
fidivr
hlt
arpl
loop
mov
dec
les
enter
pop
lock
push
push
adc
(bad)
dec
sbb
test
(bad)
retf
sbb
pop
pop
(bad)
sub
sub
retf
les
xor
push
jnp
mov
pop
outs
adc
fbld
rol
mov
xor
jl
jo
(bad)
scas
mov
(bad)
xor
pop
inc
xchg
or
jae
ret
inc
add
enter
js
in
push
fidiv
les
out
(bad)
dec
enter
or
sbb
add
in
gs
(bad)
push
inc
pusha
mov
test
or
mov
pusha
mov
pop
jae
push
add
sbb
lahf
or
push
xchg
mov
jo
jp
outs
xchg
out
pop
xchg
mov
sbb
mov
stos
and
xchg
add
push
add
and
add
and
pushf
add
mov
mov
mov
jle
(bad)
fnstenv
sbb
xor
nop
adc
cmp
enter
je
adc
imul
add
nop
ds
mov
adc
and
dec
stos
mov
fimul
call
ret
dec
shl
cmp
cmp
icebp
and
ins
fwait
lock
cdq
sti
mov
mov
cmp
jl
nop
adc
sub
aaa
inc
add
mov
add
inc
sub
add
cmp
inc
or
jmp
xor
or
pop
fistp
out
ss
or
mov
adc
scas
test
or
into
sbb
sbb
jo
in
ret
(bad)
clc
call
lods
(bad)
arpl
pop
pop
out
adc
push
fimul
dec
jae
ins
push
xor
xchg
push
push
and
adc
jnp
xor
je
fucomp
or
popf
dec
cld
mov
rcr
push
retf
je
pop
mov
stos
adc
dec
std
je
xor
and
inc
add
les
cmp
add
or
addr16
and
inc
fnsave
mov
retf
pop
ja
mov
out
mov
sub
dec
and
push
out
pop
push
and
add
shl
ins
loopne
fincstp
sub
out
popf
mov
cmc
sbb
mov
rcl
cmp
mov
pop
lods
lea
or
mov
push
adc
push
cmpxchg
pusha
inc
outs
test
nop
xor
(bad)
pop
push
mov
bound
cmp
adc
dec
(bad)
clc
aaa
aas
or
dec
dec
push
push
mov
push
push
popa
(bad)
scas
lods
dec
sub
pop
inc
pop
adc
push
pop
and
pop
adc
lock
push
sbb
xlat
sub
in
dec
pop
pop
xor
sub
inc
mov
mov
or
or
in
jnp
jb
sbb
mov
and
push
aas
and
cwde
inc
add
mov
cmp
ja
sar
shr
loop
nop
test
sub
xor
dec
push
pop
pop
xor
inc
ficomp
test
push
lock
sbb
xor
lods
or
add
cmp
adc
les
xchg
mov
aaa
into
inc
cmp
adc
cdq
pop
dec
nop
mov
jno
cmp
xor
inc
sub
int
or
add
(bad)
push
retf
cmps
push
cmp
push
inc
in
clc
dec
cwde
cmp
sar
xchg
icebp
pop
test
daa
xchg
std
pusha
mov
lea
sub
inc
cs
rcr
mov
push
cdq
push
cli
cmp
pop
lea
icebp
shr
push
push
sar
push
sbb
loope
cld
and
imul
jmp
data16
aaa
fmul
xor
in
movs
jge
adc
pop
xor
not
rol
dec
(bad)
xchg
pop
adc
lods
dec
pop
add
add
xadd
pop
or
sbb
pop
cwde
dec
in
fiadd
pop
push
das
mov
ja
inc
sbb
sbb
scas
sub
xchg
test
push
xchg
and
hlt
mov
pop
pop
fs
shr
outs
mov
dec
popa
fisub
ss
cmp
mov
mov
psraw
dec
sub
cmp
cmp
dec
jbe
push
ds
inc
dec
les
imul
cwde
and
dec
mov
cmp
add
jl
xchg
add
adc
xor
dec
aas
aam
aam
xchg
leave
ror
retf
loopne
adc
test
sbb
nop
or
pop
inc
adc
dec
(bad)
inc
into
sar
cmp
inc
push
cdq
adc
test
mov
les
xchg
aam
cmps
rol
xor
add
sub
or
push
mov
cmp
rol
dec
jo
add
adc
jo
xchg
xchg
popf
add
in
shl
xchg
xor
popf
test
fidiv
leave
or
sbb
rcl
or
xor
stos
mov
dec
fstp
inc
adc
sbb
push
pusha
ja
or
add
pusha
sbb
push
jmp
push
push
and
je
(bad)
pop
add
es
ja
or
sbb
xor
xor
movs
lock
sub
pop
retf
pusha
pop
mov
dec
mov
inc
(bad)
push
jo
lods
and
xchg
cli
dec
test
dec
xor
mov
pop
push
sbb
jae
dec
cmc
inc
add
dec
push
cmp
xchg
adc
and
lahf
cli
cmp
aad
mov
mov
pop
cmp
inc
test
push
or
and
pop
push
xor
inc
or
pop
add
push
fld
lods
and
in
(bad)
cs
push
fwait
xor
or
push
inc
add
mov
mov
rol
mov
call
push
sub
es
inc
inc
add
or
add
shl
inc
ret
inc
mov
add
xchg
imul
mov
pop
inc
adc
loopne
call
add
cwde
push
xor
les
or
inc
xchg
push
enter
aas
fcom
adc
fsubr
lahf
mov
movs
sub
jne
push
sub
jle
or
and
ja
or
es
adc
in
xor
sbb
cmps
js
imul
mov
je
push
outs
mov
jge
mov
loopne
push
and
dec
stc
sub
and
and
mov
pop
retf
sub
lods
mov
dec
or
adc
call
pushf
icebp
cmc
jmp
aad
jle
aaa
mov
adc
icebp
mov
or
dec
and
add
jl
mov
hlt
repz
cs
and
out
sub
pop
loopne
xchg
enter
mov
or
ins
and
add
and
cmp
adc
sub
movs
and
sbb
mov
scas
and
rol
clc
repnz
xor
test
retf
dec
stos
mov
jg
sub
or
and
in
xchg
xor
fadd
int3
test
popa
xchg
idiv
cs
adc
ror
repnz
imul
jmp
shl
pop
cmps
dec
jb
push
gs
inc
pop
dec
iret
and
jb
add
and
jge
jmp
sbb
nop
(bad)
popa
movs
sub
imul
aas
rcl
fwait
cwde
pop
rcl
in
bound
cdq
std
daa
and
sub
xchg
ret
jl
mov
clc
cld
adc
loop
jnp
fwait
and
(bad)
into
xor
xor
outs
add
pop
or
ret
call
dec
or
adc
in
jg
icebp
xchg
mov
sbb
rcl
cmp
push
pop
dec
fisttp
push
jns
fcomp
xchg
fadd
dec
inc
neg
fsubr
sub
mov
add
adc
adc
ss
imul
mov
fwait
(bad)
loopne
jne
sbb
fs
ins
push
add
shl
or
lea
ss
mov
loopne
xor
loope
inc
xor
nop
dec
gs
add
push
add
in
bnd
es
add
add
mov
dec
pop
mov
add
fwait
xchg
mov
ret
repnz
xor
xor
sahf
jb
mov
dec
jl
rol
dec
fdivr
sar
(bad)
adc
popa
sbb
and
arpl
fadd
das
jle
pop
cmp
pop
pop
add
shl
or
mov
sbb
pop
and
mov
xor
pop
(bad)
leave
sub
mov
or
xor
pop
xor
stos
sub
dec
or
lds
add
in
add
add
mov
pop
or
int3
les
cmp
jne
leave
ins
mov
enter
adc
mov
mov
mov
mov
pop
test
rol
inc
inc
lock
jne
inc
or
pusha
push
in
sub
xchg
mov
push
adc
or
shr
jo
mov
je
pop
push
jno
jnp
cmp
mov
call
mov
xor
sbb
mov
sbb
jge
sub
jno
pusha
add
mov
fsub
clc
test
add
cmp
(bad)
cmp
add
frstor
mov
cwde
xor
test
or
adc
jmp
mov
test
xor
fldenv
push
cmp
xchg
add
push
inc
xor
mov
cmp
out
inc
jl
add
pop
les
pop
aam
lea
and
adc
inc
cmp
inc
inc
jo
jl
adc
dec
xchg
jmp
mov
aad
jg
add
outs
call
es
cmp
add
js
add
add
imul
loope
popf
enter
or
add
dec
ins
cmp
inc
das
mov
inc
inc
div
(bad)
popa
mov
push
shl
cmp
enter
fwait
es
sar
ret
popa
sub
pop
fidivr
jns
xor
xchg
je
sbb
and
lock
xlat
or
and
jo
pop
shr
sub
mov
adc
jmp
cmc
lock
int
push
push
inc
dec
and
jg
dec
aam
cdq
push
or
daa
push
mov
pop
in
mov
dec
fldenv
inc
pop
dec
push
and
push
popf
shl
les
mov
in
mov
push
shr
out
add
xchg
loopne
add
jp
pop
pop
adc
jne
cmp
into
cmp
ins
add
adc
push
pop
call
push
fld
cmp
and
popf
xor
dec
loope
lods
sbb
or
movs
inc
jo
add
sub
mov
push
in
daa
gs
das
and
retf
sub
adc
sbb
or
into
and
add
and
push
mov
pshufw
lods
push
cmp
mov
or
lods
pop
add
push
lea
ret
xor
ja
adc
cmc
cs
push
arpl
cli
retf
fadd
jbe
cmp
mov
cmp
(bad)
mov
add
cld
std
mov
and
dec
lds
mov
popf
dec
adc
add
add
sbb
rcr
sbb
sub
ja
std
mov
cmp
je
mov
stos
push
stos
push
jge
test
mov
les
iret
cmp
sub
jo
popa
jecxz
shr
mov
pop
or
dec
loope
pop
dec
movs
sbb
inc
cdq
jne
fild
lds
cmp
sub
xchg
int
jo
add
daa
nop
xchg
ret
adc
add
and
loopne
add
push
and
mov
pop
xor
and
cmp
fst
sbb
cdq
ret
push
pop
inc
fisttp
aas
retf
(bad)
jb
xchg
movs
out
dec
fistp
mov
sbb
test
pop
test
jne
push
call
movs
pop
sbb
lea
cmps
sbb
xor
sub
add
ins
pop
rcl
pop
jne
jbe
clc
xor
mov
popa
xor
pop
cmp
lahf
inc
ds
xchg
cmp
sbb
sbb
movs
imul
loop
pop
call
sub
sub
outs
adc
mov
popf
(bad)
inc
shl
jbe
setnp
dec
lods
jns
aad
xor
inc
jno
jnp
and
rol
sub
test
adc
inc
and
xor
or
xlat
repz
aam
push
mov
cmp
cmp
mov
cwde
ret
mov
xchg
pop
ins
xchg
or
mov
xchg
sub
adc
das
dec
sbb
lahf
xor
cmp
adc
cs
jecxz
add
sub
sbb
ss
inc
push
inc
out
fwait
jmp
ins
or
cmp
aas
xchg
ds
shl
mov
lock
or
pop
sbb
in
push
fld
sub
fld
push
repnz
adc
push
xchg
fisub
xor
je
sub
sub
jmp
mov
shr
inc
stos
adc
xchg
cs
push
sbb
mov
call
jno
sbb
push
jo
fidiv
jne
daa
(bad)
sub
sbb
jns
or
xor
loopne
inc
aaa
inc
and
imul
scas
ja
popf
fwait
jle
scas
xor
xchg
in
lock
repnz
in
les
add
das
or
out
and
jmpw
dec
das
rcr
sbb
jno
or
jl
xor
mov
dec
lods
in
adc
or
rol
adc
sbb
add
es
cmp
sti
xor
jne
inc
pusha
sbb
nop
push
add
dec
or
outs
mov
cmp
adc
push
mov
test
sbb
dec
aad
inc
cmp
cs
dec
jecxz
fs
fwait
and
or
xor
cmps
jge
rol
movs
in
(bad)
xchg
les
xchg
adc
mov
jmp
test
test
cmp
cmps
sub
or
cmp
dec
packssdw
push
lods
shr
pop
xor
aaa
mov
mov
sub
or
dec
aas
adc
sbb
iret
adc
or
add
lods
push
and
xor
mov
pop
push
and
mov
and
push
add
je
popa
aad
mov
dec
mov
fs
lods
add
mov
add
xor
add
sar
repnz
mov
sbb
sbb
clc
adc
mov
jge
fs
(bad)
push
out
inc
cmp
ret
or
outs
int
xor
dec
pop
inc
daa
adc
call
xchg
add
and
mov
fs
xchg
mov
test
movs
mov
test
inc
lods
add
lock
mov
test
lahf
xor
adc
add
xor
leave
inc
sbb
outs
add
outs
sub
inc
or
mov
cdq
cmp
popf
xor
cmp
pusha
lea
(bad)
mov
push
adc
and
fnstsw
cmp
mov
cli
push
dec
inc
repnz
sbb
ret
jmp
mov
loopne
push
lahf
test
add
xchg
push
xchg
loopne
dec
test
mov
dec
dec
(bad)
mov
mov
pop
lock
outs
fisub
cmps
jle
ret
call
pop
xchg
mov
mov
in
fbstp
xor
ret
sbb
mov
push
fsub
imul
dec
call
out
inc
jne
sbb
rcr
xor
fwait
les
pop
and
lock
aam
xchg
ficom
imul
adc
and
dec
dec
xor
aam
loopne
bound
push
les
sub
push
push
aas
icebp
dec
xchg
and
test
je
cmp
push
fimul
pop
js
jmp
jmp
mov
inc
pop
and
push
nop
xchg
jle
out
jbe
push
mov
dec
push
sub
pop
jnp
pop
jns
dec
adc
pop
pop
les
jo
and
adc
movs
cmp
test
pop
cmp
nop
adc
pop
push
cmp
js
pop
pop
js
or
pop
test
and
cwd
clc
add
ss
xor
dec
jae
cmp
and
add
out
sbb
jle
cmp
dec
test
ffree
icebp
lods
(bad)
or
jmp
rol
jae
(bad)
push
add
push
aam
ins
inc
add
rcr
jle
adc
sub
push
fwait
xchg
les
mov
xchg
out
jne
cld
push
xchg
out
mov
push
push
add
mov
inc
or
daa
hlt
inc
adc
mov
and
pop
lea
add
sti
movs
cdq
je
mov
or
sti
jo
add
or
data16
inc
lods
mov
sub
jmp
and
push
sbb
ins
adc
fidiv
xor
dec
push
sub
aas
dec
pop
sub
dec
mov
daa
movs
and
mov
adc
pop
pop
hlt
in
xchg
xlat
ret
dec
xchg
push
xchg
xchg
xor
xchg
clc
pop
addr16
push
enter
adc
add
outs
hlt
nop
xchg
fiadd
(bad)
hlt
aas
leave
add
repnz
cmc
ins
pop
fmul
int
push
xchg
lock
sbb
xchg
xchg
loope
and
dec
lahf
or
xor
inc
out
cwde
mov
dec
std
loopne
les
cmp
inc
xor
push
daa
mov
les
clc
or
pop
add
jmp
adc
cmps
cmc
push
jmp
xchg
pop
pop
xor
sar
nop
daa
rcr
adc
rcl
nop
jmp
mov
ret
dec
jecxz
lahf
mov
cs
sub
adc
or
push
and
scas
daa
stos
push
imul
test
dec
or
mov
(bad)
and
loope
cwde
and
mov
pushf
rcl
(bad)
adc
inc
and
jns
jae
push
dec
lock
ins
clc
or
rol
je
ret
mov
add
pop
aaa
or
fs
mov
fdiv
dec
cmps
xor
sub
mov
xchg
pop
sar
adc
xchg
xchg
xchg
imul
pushf
dec
cmp
outs
xchg
xor
jae
add
inc
xchg
sub
add
dec
(bad)
cld
cmps
inc
test
xchg
cmp
cmp
clc
dec
nop
mov
push
aaa
dec
retf
adc
loopne
mov
aad
mov
daa
sub
adc
and
stos
outs
sar
mov
pop
ins
loope
xchg
xor
xchg
pop
mov
lds
add
mov
jge
sub
aam
lods
cmc
fidivr
jbe
pop
(bad)
mov
xchg
mov
nop
hlt
aad
push
shr
fs
push
cmp
ret
jnp
stc
test
sbb
inc
xor
int
(bad)
loop
or
and
adc
cmp
neg
cmp
stos
push
xor
and
dec
or
dec
push
jmp
push
mov
fcmovb
loop
sbb
jb
fidivr
inc
je
inc
mov
fld
jno
mov
sub
daa
adc
and
jo
aaa
jp
call
or
sbb
fisttp
add
or
or
cmp
cmp
dec
lods
leave
pop
jge
js
inc
ror
mov
mov
pop
mov
push
scas
cmp
xor
(bad)
out
adc
or
lahf
data16
sub
sbb
loopne
xchg
les
pop
xor
jbe
mov
sub
push
test
inc
xor
push
enter
and
lds
pop
inc
mov
scas
mov
lods
das
add
in
mov
aaa
cmps
repnz
outs
mov
adc
nop
xchg
and
sbb
pop
fcmovu
xchg
call
imul
pop
cmps
jno
lock
int
and
push
mov
(bad)
xor
scas
push
adc
mov
xor
cs
inc
imul
mov
cld
pop
fcom
lock
xor
cmp
mov
jbe
cmp
mov
mov
jne
lods
retf
daa
in
cld
jmp
pop
mov
jg
sbb
pusha
stos
ins
push
and
inc
sub
dec
and
xor
and
mov
pushf
push
je
xor
in
ds
and
pusha
scas
test
pop
add
pop
inc
mov
push
jl
data16
into
push
mov
mov
mov
pop
repz
mov
mov
mov
cmps
xchg
jnp
(bad)
sti
or
stc
scas
or
aad
mov
stc
and
(bad)
pusha
and
mov
cwde
add
mov
push
add
nop
lds
add
jo
xor
ds
xor
push
lock
nop
mov
jne
jmp
or
push
imul
add
and
jecxz
dec
adc
sar
jne
push
dec
mov
cs
mov
sub
dec
add
mov
popa
jne
ins
loopne
pushf
jmp
or
mul
jbe
dec
mov
xlat
inc
pusha
jecxz
add
pusha
inc
clc
in
adc
sub
int3
dec
pop
mov
mov
add
call
xor
in
inc
mov
and
sbb
dec
popa
aaa
stos
jmp
push
push
daa
ret
cmp
sbb
push
pop
or
and
les
js
jae
mov
mov
jnp
xchg
add
add
xchg
mov
cmp
inc
jno
repz
cmp
jae
rol
dec
popa
add
inc
out
pusha
or
add
add
pop
dec
pop
push
add
mov
jo
dec
test
cmp
xchg
or
sbb
mov
lods
sub
scas
inc
jo
into
int3
and
push
or
sub
mov
add
mov
pop
inc
hlt
leave
sbb
add
inc
(bad)
mov
adc
mov
or
add
push
out
push
leave
adc
or
sbb
sub
js
jne
adc
inc
rcl
loope
cmp
xor
shl
les
in
out
lods
add
aaa
sahf
and
pop
aas
ror
in
mov
inc
xchg
dec
sub
(bad)
xor
movs
or
jo
xor
sar
jbe
into
aas
jmp
cs
push
inc
test
ja
pop
or
add
xchg
adc
ins
xchg
dec
mov
xor
xlat
dec
xor
mov
retf
mov
jae
adc
xchg
jo
test
fdiv
adc
pop
sub
sti
mov
adc
jg
push
je
scas
out
bound
popf
clc
push
push
sbb
sbb
cmp
cs
mov
mov
shl
fs
mov
cmp
xchg
pusha
push
or
sub
dec
add
mov
mov
imul
repz
pop
push
xor
xor
add
repz
mov
push
test
pop
in
nop
push
das
dec
int3
je
sub
les
dec
test
jle
pop
adc
hlt
fs
add
sub
cwde
xor
xor
aam
adc
test
stos
push
adc
add
fsubr
add
pop
cmp
pop
fmul
mov
lea
sub
or
push
in
add
sub
push
sbb
jno
push
aad
out
add
add
rcr
nop
add
fistp
lock
and
into
shr
ins
mov
call
fs
mov
cmp
dec
inc
out
xchg
sub
adc
rcr
leave
call
cmp
or
into
dec
cmp
in
out
cld
add
lea
or
mov
or
lahf
pop
mov
jg
pushf
and
(bad)
fcmovnb
mov
add
mov
pop
push
adc
pushf
loope
arpl
fisttp
mov
mov
in
push
push
movs
imul
outs
mov
mov
or
ret
jmp
inc
unpcklps
ins
mov
mov
or
mov
(bad)
dec
xor
mov
fprem
push
jmp
pop
cmp
loopne
mov
pop
xor
pop
jnp
dec
dec
loope
pop
or
test
mov
jmp
sahf
lea
pop
loop
or
outs
adc
sar
inc
cmp
je
test
aaa
lds
in
lods
arpl
add
jne
inc
pop
pop
add
add
pop
sbb
into
test
xchg
int
jnp
rcr
mov
add
cs
xchg
retf
loopne
sbb
in
call
push
mov
je
add
dec
dec
leave
push
jb
pop
xor
mov
or
cmp
push
bound
jmp
xchg
mov
call
mov
sbb
loope
dec
or
inc
cmps
dec
mov
mov
add
rcl
mov
mov
mov
cmp
test
jg
inc
pop
mov
push
pop
fs
fs
sub
push
ins
sbb
cmp
pusha
push
push
xchg
push
mov
outs
adc
rcr
mov
dec
and
enter
stos
(bad)
movs
fsubr
pop
and
xchg
sbb
mov
cmp
xchg
jbe
xchg
pop
push
inc
push
dec
pop
pop
push
xchg
sbb
sub
dec
das
gs
dec
in
hlt
sete
pop
xor
rol
retf
pop
mov
xchg
push
push
leave
in
hlt
inc
das
fdivr
jno
or
mov
sahf
pop
push
or
inc
pop
loopne
dec
ins
xchg
xchg
loopne
retf
push
icebp
cmps
icebp
pop
cs
imul
test
ja
push
mov
adc
mov
push
sbb
xchg
nop
mov
pop
inc
push
xor
push
dec
clc
or
adc
sbb
adc
sbb
sub
scas
sub
inc
or
or
add
add
adc
shl
in
pop
adc
fabs
mov
dec
enter
loope
inc
lods
ins
jmp
les
aad
dec
xlat
cmp
(bad)
or
add
push
and
dec
cmp
ror
push
adc
add
add
or
sbb
and
jg
repz
mov
mov
xchg
(bad)
cdq
outs
jecxz
sub
xor
xchg
and
sahf
dec
loop
xchg
scas
dec
loope
push
and
xor
or
xchg
inc
or
jl
push
iret
and
out
pop
or
mov
and
add
inc
xchg
dec
jo
push
sbb
mov
in
(bad)
adc
mov
and
mov
jg
js
cmp
or
push
pop
push
je
push
shl
cmp
call
push
pop
dec
cmp
or
jne
(bad)
imul
je
adc
cs
jae
and
sbb
outs
sbb
add
add
ins
(bad)
cmp
jp
push
xor
inc
(bad)
jmp
dec
adc
sbb
inc
adc
loope
pop
ret
jnp
mov
push
sub
push
push
add
add
xchg
mov
jecxz
cmp
pop
mov
dec
adc
pop
push
dec
lahf
daa
popf
(bad)
(bad)
dec
fs
push
inc
push
xchg
das
and
and
pop
xchg
inc
add
movntq
xor
sbb
xchg
and
dec
jmp
jl
and
rol
stos
or
scas
or
inc
inc
movs
daa
out
mov
nop
(bad)
pusha
jo
mov
adc
loope
jo
addr16
pop
mov
inc
add
sbb
dec
or
cmp
div
or
xchg
add
push
inc
retf
add
retf
add
mov
push
arpl
cmp
mov
inc
and
gs
xchg
(bad)
shl
xor
mov
add
or
add
push
adc
addr16
xchg
adc
or
jb
xchg
add
adc
push
pop
scas
mov
jg
pop
xor
push
xor
imul
ja
cmp
inc
sysret
test
mov
cli
xchg
mov
das
dec
adc
dec
pop
stc
daa
loop
rcl
add
ins
frstpm(287
scas
jo
dec
add
pop
dec
and
les
sti
(bad)
or
daa
push
push
sub
sbb
jo
out
mov
dec
add
sub
inc
pop
dec
add
fsubr
scas
stc
data16
pushf
daa
sub
mov
mov
repnz
xlat
and
add
xor
mov
in
das
xor
rol
cwde
jnp
push
fwait
aam
sub
push
ss
or
adc
cmp
jae
pop
ds
xlat
jl
inc
cs
or
mov
fild
jbe
popa
sbb
add
or
test
arpl
inc
aad
cs
push
sahf
pusha
inc
mov
xchg
jns
dec
push
or
push
gs
cdq
push
pop
pop
or
pop
jmp
jg
(bad)
or
pop
pop
cli
in
and
dec
fist
das
pop
dec
pop
add
add
adc
and
sbb
shl
es
dec
push
test
ins
and
nop
clc
jo
repnz
or
adc
aas
dec
sub
push
hlt
psadbw
inc
dec
inc
lahf
or
bound
add
test
pop
adc
rcl
mov
in
inc
shld
mov
and
add
dec
movs
adc
push
pop
leave
sub
imul
sub
mov
fsubr
dec
or
adc
pop
add
pusha
sbb
iretw
movs
mov
pop
and
inc
inc
and
inc
sbb
nop
cwde
or
loop
xor
mov
mov
aaa
xlat
pop
aas
add
shl
sbb
std
or
xor
sbb
rcl
lock
mov
dec
movs
icebp
add
add
ds
xor
adc
and
sbb
add
inc
(bad)
xlat
sub
mov
push
sbb
imul
adc
stos
ins
sbb
adc
test
sbb
mov
test
dec
pop
pop
xchg
aam
inc
mov
mov
sub
cs
mov
sbb
jo
fistp
movs
add
xlat
mov
js
(bad)
in
and
or
and
loopne
dec
xor
mov
hlt
fadd
mov
inc
adc
or
lds
movsx
add
or
shl
icebp
push
push
push
mov
call
add
ds
cmps
jns
inc
add
call
dec
je
pop
cmp
dec
ror
js
dec
lea
and
and
call
rcl
(bad)
push
fisub
sbb
cmp
stos
xor
cmp
lahf
add
cli
and
xchg
cs
int
dec
cmp
(bad)
arpl
adc
push
stc
pop
cs
or
sub
dec
inc
push
rcl
and
aas
aad
mov
fidivr
repnz
enter
mov
pop
lods
push
and
add
sbb
ret
cmps
sbb
push
and
aaa
dec
in
loope
and
sbb
dec
pop
cli
push
jmp
outs
fild
fild
add
fdivrp
sbb
inc
xor
rcr
lods
sbb
push
adc
push
cmp
iret
mov
push
(bad)
popf
shr
xchg
dec
and
or
cli
push
loopne
pop
enter
pop
ja
les
adc
pop
js
sbb
sbb
ss
and
out
es
cmps
fcomp
nop
les
add
mov
cmp
mov
mov
loop
mov
sub
or
cli
sbb
mov
call
iret
sub
adc
add
sub
sahf
add
adc
lods
jge
and
xor
sbb
jno
call
push
cdq
movs
lods
lods
(bad)
nop
push
add
pop
cmp
stc
mov
je
cmp
into
mov
push
cs
ds
add
pusha
mov
ficomp
(bad)
and
adc
je
enter
(bad)
sub
jo
inc
push
and
mov
imul
dec
add
mov
lods
jmp
xchg
mov
je
xchg
sbb
icebp
or
mov
cmp
test
or
jo
cmp
(bad)
xor
cdq
or
popf
inc
loopne
popf
inc
sbb
add
and
orps
daa
or
cmp
push
fstp
dec
fldenv
not
lea
fisubr
mov
mov
loopne
xchg
in
sbb
mov
add
jl
sub
out
or
fadd
add
mov
lods
pusha
pop
jmp
fwait
pop
sub
test
fs
xlat
xor
push
sub
and
call
movntq
in
adc
xor
cmp
fcmovu
out
sub
inc
adc
in
and
rol
cmp
mov
adc
sbb
add
add
pop
and
push
sub
mov
inc
pusha
pusha
pop
xor
mov
fwait
aas
and
shr
aad
ret
or
inc
xchg
or
stc
cmp
fs
inc
inc
fmul
(bad)
fs
fdiv
into
rcl
pop
(bad)
sub
dec
mov
add
adc
ret
inc
pop
dec
mov
lahf
mov
add
or
and
mov
or
jge
mov
enter
lahf
addr16
cmp
imul
add
rcl
sub
cld
cmp
jb
fdiv
inc
jns
cmc
xchg
pop
xor
pusha
dec
inc
aaa
sub
aaa
mov
add
and
dec
loopne
jmp
cmps
inc
out
ror
ins
mov
adc
add
push
pop
and
lods
(bad)
mov
enter
inc
in
cmp
cmp
fidiv
or
cmps
push
test
sbb
movs
inc
vextractps
mov
xor
mov
adc
push
arpl
xor
ror
adc
pop
adc
add
lock
and
fdiv
xor
or
call
lock
add
mov
inc
mov
loopne
daa
in
sbb
inc
or
pop
xchg
sbb
add
xchg
(bad)
sub
sub
addr16
fdiv
stos
cmps
jne
pusha
pop
add
and
push
rol
into
into
lods
call
test
dec
shl
jl
ins
xlat
in
mov
jb
adc
cli
dec
push
push
mov
add
push
lea
(bad)
push
inc
pop
test
and
(bad)
adc
adc
xchg
sbb
mov
fisubr
test
add
sub
or
repnz
pushf
and
and
sbb
sub
movs
ds
pushf
pop
rcr
sti
jmp
mov
add
or
adc
popa
call
jp
push
int
push
rcr
adc
out
adc
and
rcr
mov
cmp
and
in
adc
cmp
xor
inc
xor
add
xor
push
imul
add
sub
es
fwait
div
(bad)
fimul
dec
inc
jg
mov
xor
push
or
cmp
mov
iret
xchg
mov
xor
or
jmp
cmp
pop
test
xor
rcl
mov
sbb
mov
lds
stos
fmul
dec
adc
lods
retf
push
mov
cmp
out
stos
lods
xchg
and
pop
adc
sbb
push
test
iret
movs
sti
cld
test
pop
sbb
cmp
std
adc
test
xor
xchg
or
aaa
das
or
xor
jbe
pop
cmc
push
popa
and
xlat
dec
icebp
mov
jmp
ss
js
mov
sub
add
push
mov
push
and
or
add
push
stos
rol
xchg
add
mov
xor
push
push
sbb
adc
sub
scas
or
fs
adc
call
sbb
add
dec
mov
mov
inc
push
cmp
xchg
and
cdq
std
shl
lahf
call
js
adc
sub
std
or
wbinvd
clc
adc
add
aam
adc
stos
inc
hlt
add
jg
or
xchg
sbb
and
pop
dec
push
xor
adc
pop
xor
sbb
and
mov
icebp
test
js
daa
add
add
aas
retf
bound
fidiv
mov
add
inc
into
push
mov
sbb
in
dec
adc
add
mul
adc
xor
push
mov
adc
pop
and
sub
add
mov
mov
push
and
sbb
in
xor
dec
mov
std
lea
pop
rol
leave
xor
cmps
ret
push
or
adc
mov
jo
inc
adc
je
inc
iret
das
or
mov
(bad)
jmp
adc
lahf
retf
add
xchg
sub
xchg
push
sbb
das
inc
retf
mov
push
push
(bad)
and
jo
out
push
add
xchg
xchg
(bad)
aad
(bad)
cmps
fistp
mov
pusha
xor
fadd
inc
clc
inc
push
push
shl
sub
adc
dec
sub
push
fs
leave
inc
add
xchg
sub
and
mov
cmp
call
xor
sub
lock
pop
and
inc
sbb
xor
mov
mov
sub
inc
sub
xchg
popa
dec
ds
inc
cmp
jb
loope
adc
retf
or
add
sub
dec
add
les
lds
pop
or
scas
and
dec
jecxz
call
mov
push
dec
pop
test
ror
in
sbb
repz
xor
push
lock
mov
adc
dec
adc
cmp
mov
jmp
loop
xor
mov
cmp
mov
xchg
aaa
dec
dec
mov
mov
sbb
sahf
and
cmps
(bad)
rol
rol
jo
fisttp
mov
mov
ficomp
xor
push
(bad)
scas
cmp
sub
xor
mov
xchg
movs
mov
inc
jmp
clc
add
repz
sbb
call
(bad)
dec
fnsave
out
mov
add
mov
push
mov
mov
xor
mov
fcmovnb
nop
mov
je
inc
pop
dec
mov
(bad)
and
call
adc
out
fcom
mov
sbb
imul
ficomp
push
jmp
inc
add
inc
pusha
inc
pop
ret
cmp
add
inc
jb
test
and
rcr
add
and
jl
push
xor
adc
xchg
outs
mov
enter
and
or
fidiv
push
inc
inc
mov
fiadd
loopne
(bad)
cmp
or
sub
dec
adc
add
push
ins
push
add
aaa
adc
adc
les
pop
popa
loop
sub
(bad)
mov
mov
sub
pop
sub
jp
xor
and
push
aas
inc
inc
inc
xchg
xchg
cmps
adc
dec
push
dec
push
mov
pop
cmp
jp
push
dec
push
push
ins
pop
push
add
or
push
cmp
add
adc
repnz
xchg
leave
inc
ret
inc
and
sub
and
jmp
neg
or
pusha
add
inc
je
ins
pop
cwde
out
pushf
sub
aad
xor
je
add
jl
out
(bad)
mov
mov
add
out
add
cmp
in
ror
add
inc
jno
adc
sub
xor
or
test
cmc
sbb
cmp
jnp
ror
sub
or
(bad)
pop
push
add
or
jl
cmp
in
out
mov
addr16
xchg
int
into
mov
or
call
inc
shl
pop
jae
ret
in
mov
inc
adc
adc
rol
adc
jns
and
xor
add
sbb
add
gs
pop
sub
movs
je
ret
sbb
add
mov
ss
jmp
sbb
add
addr16
les
adc
scas
xchg
and
test
pop
fidiv
cmp
sub
add
dec
jl
or
jl
pop
cmp
adc
(bad)
xlat
mov
sar
nop
add
add
push
test
mov
sahf
test
fdivrp
hlt
out
fs
xchg
fs
dec
test
add
push
and
test
retf
cmp
pop
(bad)
loope
jbe
in
add
xor
mov
nop
and
inc
and
mov
pop
sti
xor
mov
mov
dec
push
loop
js
cmp
dec
cld
inc
push
pop
or
or
test
mov
sub
sbb
mov
add
jo
sbb
jb
fsub
mov
or
mov
test
lds
mov
lds
dec
ficom
dec
cmp
dec
add
add
mov
sub
adc
and
sbb
pop
push
push
push
jecxz
inc
or
dec
test
xchg
call
movs
fstp
mov
pop
jne
adc
inc
daa
or
movs
fs
inc
sbb
mov
mov
push
pop
inc
add
imul
das
mov
xor
cmp
mov
ins
ss
pop
adc
mov
ss
jbe
dec
jns
push
cmp
and
mov
hlt
jne
adc
jne
cwde
clc
daa
mov
and
lods
call
adc
ret
sub
movs
fild
xor
jb
dec
xor
inc
stos
pop
inc
cmps
pusha
inc
ret
mov
push
loopne
xor
mov
xor
dec
cmp
mov
pop
mov
and
jecxz
leavew
rol
jmp
mov
inc
dec
ja
sub
in
push
out
push
mov
add
call
ret
dec
retf
inc
dec
cwde
push
push
or
test
and
sub
mov
aam
push
fadd
iret
dec
dec
cs
dec
dec
dec
sub
fstp
add
add
and
rcr
mov
push
ret
sbb
(bad)
push
enter
push
cdq
lock
fld
and
pop
push
rol
ret
loop
call
arpl
les
mov
(bad)
ret
pusha
shr
xchg
mov
cmp
pop
mov
pop
mov
cdq
idiv
xor
lods
pop
in
sub
sub
mov
out
xor
ror
pop
dec
adc
and
push
mov
je
or
(bad)
cmp
push
xor
adc
out
mov
adc
push
dec
xor
cmp
sbb
xor
cs
mov
rol
jb
sbb
dec
mov
dec
aaa
jb
outs
jecxz
and
jmp
and
aaa
add
test
aaa
jl
inc
ret
mov
push
mov
mov
(bad)
into
sahf
es
jle
or
adc
mov
mov
sub
cmp
jl
adc
sbb
fnstenv
add
popa
call
mov
fwait
pop
scas
push
or
jbe
cmps
mov
dec
add
or
push
xor
sub
and
add
add
(bad)
pop
aad
movs
or
inc
test
or
mov
adc
ja
add
out
push
rol
ja
adc
clc
jbe
cmp
push
or
pop
pop
inc
dec
xor
adc
scas
inc
add
out
push
add
int
ret
cmp
ss
add
es
sub
xchg
sbb
mov
jae
jae
adc
div
sbb
inc
add
or
push
and
test
sub
(bad)
jbe
pusha
add
mov
retf
and
jmp
or
dec
shr
inc
cdq
push
lods
popa
(bad)
je
pusha
sub
add
add
push
inc
test
add
add
add
inc
add
(bad)
lea
xor
ja
pop
pop
and
outs
adc
pop
adc
jl
mov
into
test
dec
push
sbb
lea
add
sbb
je
add
push
inc
(bad)
cmp
in
push
inc
dec
dec
fcom
or
mov
or
or
cmp
pushf
pop
sub
fisub
cmp
mov
add
std
retf
nop
test
addr16
xor
fld
xor
sub
jae
jne
jl
inc
mov
(bad)
lock
ffree
sub
test
mov
jae
hlt
rcl
(bad)
mov
mov
dec
cmp
inc
int
or
adc
test
cmp
lods
je
add
dec
sbb
cmps
xchg
mov
lds
sbb
mov
mov
xchg
sub
xor
or
or
xor
in
retf
adc
xor
les
aaa
test
mov
and
cmp
dec
cmp
das
pop
call
movs
cli
mov
loopne
dec
mov
and
and
pop
inc
retf
and
push
dec
mov
mov
cmp
cmovl
push
loop
pop
inc
shl
jle
scas
add
movups
jmp
imul
sub
lods
mov
sbb
push
sub
and
xor
sti
pop
sbb
xchg
and
jge
xchg
in
pop
or
cmp
sbb
jbe
bound
sbb
add
and
cmp
loopne
mov
mov
jmp
es
jb
mov
or
fist
lods
pusha
arpl
mov
dec
mov
sahf
jb
mov
fst
and
pop
lock
xchg
adc
cmp
idiv
out
out
and
inc
and
jle
shl
jmp
pusha
mov
xchg
ror
dec
sahf
das
das
and
dec
imul
pop
(bad)
out
xchg
imul
inc
es
daa
mov
fldcw
mov
mov
scas
push
or
inc
mov
inc
xchg
sbb
fadd
arpl
dec
or
or
retf
cdq
pop
mov
pop
jno
(bad)
dec
lods
and
dec
jmp
mov
(bad)
(bad)
push
and
adc
cmp
push
inc
aad
mov
or
test
rol
rol
pop
fs
add
push
loope
mov
bound
loope
out
xchg
das
cmc
add
xchg
pop
or
xor
pop
test
mov
in
or
dec
or
jge
xor
das
clc
out
inc
and
or
mov
xor
mov
mov
and
imul
pop
lock
mul
dec
movs
pop
test
sub
dec
jo
ss
push
push
jb
xchg
cmp
inc
jle
iret
or
sbb
inc
sbb
ret
fwait
mov
inc
aam
push
sbb
mov
jl
xchg
push
add
jns
xchg
jge
mov
mov
jg
mov
add
jle
cwde
jae
sub
ret
shl
xor
mov
imul
add
push
or
or
imul
mov
dec
cwde
cs
fs
mov
or
cmc
or
(bad)
gs
pop
jmp
xor
mov
adc
inc
jg
add
add
cmc
fwait
add
pop
push
push
(bad)
ins
sbb
jle
mov
(bad)
xor
dec
es
dec
(bad)
iret
jmp
loop
cld
repz
into
sbb
pop
sahf
mov
in
xchg
xor
dec
pusha
adc
sbb
fstp
pusha
je
cmp
in
mov
xchg
mov
(bad)
in
push
mov
or
aas
xchg
inc
test
and
and
xor
add
jno
pop
push
adc
out
mov
ja
mov
js
mov
lods
(bad)
add
or
loopne
jmp
sub
adc
push
adc
lock
sbb
push
push
mov
popa
test
adc
les
lods
ja
in
xchg
add
push
sahf
add
scas
and
aam
add
xchg
lock
fscale
mov
adc
ret
dec
jg
cmc
call
xchg
test
mov
jle
jmp
push
xor
sub
iret
xor
jo
add
mov
jg
add
sub
xor
jmp
scas
(bad)
mov
fmul
jbe
outs
adc
mov
sub
fisub
pushf
inc
pop
gs
and
inc
pushf
sbb
and
retf
sbb
lods
ds
and
add
(bad)
jl
and
jo
fucomp
cmp
or
popf
xchg
pop
adc
retf
push
retf
adc
and
aaa
adc
xor
and
mov
and
sub
call
add
into
dec
js
dec
cmpxchg
or
in
push
not
ins
sub
test
inc
add
xor
mov
ins
fwait
pop
pop
and
in
pushf
movs
mov
inc
mov
jmp
lods
sbb
push
shl
clc
xchg
ret
push
(bad)
arpl
out
enter
loopne
je
dec
aam
add
mov
loope
dec
jo
loop
lahf
int3
in
dec
loop
dec
inc
mov
je
rcr
mov
loopne
stc
test
mov
in
jmp
aas
jnp
retf
and
push
xor
inc
xchg
inc
xor
push
addr16
push
lds
mov
or
sub
dec
outs
mov
and
out
mov
into
cli
pop
lahf
pusha
sbb
add
scas
mov
fistp
jns
ror
mov
or
or
adc
sub
cmps
iret
int3
clc
sbb
and
ror
iret
xchg
inc
lock
sbb
mov
xor
add
sbb
add
push
ror
pop
test
lahf
xchg
jg
pop
cmp
inc
ret
call
test
pusha
jnp
ja
sub
jne
or
cmps
out
cld
sub
js
scas
nop
fcomp
call
pop
add
ss
adc
punpcklbw
xor
or
mov
jmp
js
ins
pop
xor
sbb
jb
cmp
add
or
loopne
ja
mov
dec
pushf
fdivr
mov
je
sub
cdq
add
sub
inc
add
int3
mov
add
imul
sub
enter
hlt
popf
mov
mov
cmp
das
dec
mov
jo
(bad)
daa
jmp
add
test
jge
enter
jl
add
pop
nop
xchg
mul
jp
sar
xor
mov
mov
jle
mov
loope
lods
cmp
xor
pusha
imul
imul
loope
mov
or
cmp
sbb
push
sub
mov
or
adc
jb
or
sbb
imul
xor
adc
push
and
add
mov
push
sub
movs
add
push
dec
add
stc
mov
add
call
js
inc
push
or
pushf
rol
inc
mov
mov
pop
and
sub
and
cmp
xchg
lea
test
mov
cmp
int
(bad)
mov
inc
inc
cmp
stos
ja
xchg
mov
(bad)
jmp
outs
jno
jnp
hlt
push
push
sbb
ror
scas
inc
jl
aad
sbb
push
(bad)
lds
inc
test
call
cmp
add
test
pop
mov
add
dec
or
test
pop
xchg
adc
add
ja
mov
and
cmp
add
mov
adc
add
cmps
or
test
or
push
fdivr
add
mov
dec
aam
sbb
mov
xchg
adc
lock
rcl
enter
ss
ja
ins
pop
jne
xor
pop
inc
jmp
xchg
mov
or
adc
js
sahf
pusha
sbb
mov
fild
sbb
xchg
dec
aam
pop
push
xchg
jmp
jne
inc
loop
idiv
cwde
add
cmp
dec
push
lods
add
jo
mov
lods
sbb
jl
push
xlat
adc
mov
bound
pusha
movs
push
inc
mov
shl
movs
inc
retf
cmp
mov
mov
xchg
add
or
je
push
jp
sbb
sub
xor
pop
iret
pop
dec
fcomp
retf
test
clc
icebp
add
or
inc
ins
jne
pop
prefetch
mov
mov
and
mov
cmps
jns
imul
movs
out
call
xchg
pop
shl
add
inc
enter
sbb
fsubr
retf
shl
mov
push
adc
pop
add
or
dec
push
aam
packuswb
add
add
dec
mov
mov
cmp
mov
stos
add
and
add
movs
(bad)
mov
push
sbb
test
push
int3
movs
adc
push
pop
daa
pop
or
cmp
and
sub
movs
loope
dec
sahf
mov
push
nop
push
retf
lods
add
(bad)
pop
daa
pop
cld
lea
dec
adc
dec
inc
std
pop
loop
pop
clc
dec
jecxz
or
in
hlt
das
inc
sbb
add
cmp
scas
test
cmp
push
loope
cmp
cmp
push
jp
fdiv
inc
or
ror
js
je
xchg
cwde
xchg
jbe
push
in
push
dec
push
pushf
add
or
enter
mov
push
mov
push
sbb
and
jp
mov
xchg
or
rcr
mov
mov
add
loope
loopne
mov
int3
je
shl
add
(bad)
in
add
push
nop
push
push
or
or
aas
fcom
lea
xor
hlt
sbb
pop
int3
sbb
sbb
mov
nop
add
or
adc
imul
push
dec
add
xchg
push
sbb
out
push
cld
mov
cli
add
repz
push
push
das
in
mov
repz
pop
lods
push
xchg
lea
push
in
xor
adc
mov
pop
pop
and
mov
and
lea
dec
dec
sub
or
adc
sub
clc
mov
push
cmp
enter
shr
pop
adc
(bad)
gs
call
dec
xchg
inc
pop
or
adc
fs
push
mov
mov
inc
xchg
mov
clc
add
outs
sbb
mov
test
jle
sbb
enter
fisttp
ret
out
lock
ds
mov
mov
or
test
xchg
pushf
ret
mov
sbb
cmp
xchg
xor
jns
sahf
es
je
pop
adc
xor
xor
adc
retf
ins
and
or
and
xchg
dec
inc
(bad)
mov
in
mov
or
jo
test
lods
mov
add
mov
pop
mul
sbb
inc
sar
cdq
mov
xchg
add
push
push
aas
sub
cmp
xchg
sub
ret
adc
inc
out
jge
adc
femms
imul
dec
je
sub
dec
or
cmc
stos
xchg
cmp
outs
test
mov
sbb
aam
push
add
sub
imul
mov
sub
or
outs
inc
fincstp
into
push
push
in
sbb
imul
mov
fidivr
push
cmp
repz
sar
sbb
shl
dec
and
cmp
je
jge
(bad)
popf
mov
add
pop
cmp
scas
shl
test
pop
test
inc
(bad)
cli
cmp
pop
mov
mov
xlat
(bad)
call
daa
sbb
xchg
repz
(bad)
cmps
cmp
test
pop
inc
mov
or
sub
jle
push
cmp
cmp
add
add
les
rcr
cwde
das
int3
adc
ins
daa
or
lahf
shl
mov
out
or
js
sar
stc
jecxz
cmp
or
cwde
nop
lock
or
push
mov
push
fidivr
jecxz
lock
sub
push
push
jp
mov
cmp
jo
(bad)
repnz
aaa
pop
cmp
dec
psubq
mov
aad
ins
test
arpl
mov
lea
sti
popa
sub
sbb
mov
sub
and
sbb
mov
ja
push
push
ret
pop
xchg
sub
(bad)
jge
xchg
fdiv
mov
sar
out
pop
jno
je
sub
cmp
xchg
sub
test
sbb
pusha
pop
out
dec
and
mov
xchg
jg
cmps
cmp
pop
out
dec
out
push
jge
jl
inc
jmp
push
cmovle
or
test
pop
mov
into
mov
lods
xor
repz
push
and
imul
sub
(bad)
mov
js
(bad)
push
out
push
imul
pop
mov
and
cs
mov
pop
sub
adc
inc
adc
dec
mov
dec
push
xor
pusha
loop
ss
add
sbb
add
fwait
mov
movs
js
inc
mov
jl
inc
xchg
adc
dec
push
xchg
in
inc
xor
inc
icebp
hlt
push
push
stos
jge
ret
shl
pop
(bad)
clc
push
mov
cli
sar
test
int
fiadd
or
add
and
(bad)
cmp
jo
popa
outs
xor
dec
push
aad
push
push
ficomp
or
inc
adc
and
pop
mov
xor
xor
fs
inc
and
push
mov
shl
fnstcw
push
or
js
and
imul
add
test
in
sar
xor
jo
cmp
ud0
xor
sub
push
scas
xchg
int
clc
sub
sbb
int3
xor
or
mov
jecxz
dec
fs
cmp
add
cmp
(bad)
cmc
jo
add
cmps
cmp
cdq
in
inc
mov
in
xchg
lods
in
frstor
sub
xchg
mov
cmp
jp
das
fld
mov
out
sar
push
dec
lods
add
iret
push
jbe
adc
push
ja
xchg
jl
jge
push
and
pop
es
pop
cmp
jo
or
retf
ss
pop
or
add
wrmsr
push
inc
and
int
sbb
xor
jmp
sbb
movs
rol
lods
(bad)
pushf
pop
not
call
dec
mov
xchg
push
add
mov
lds
adc
and
push
dec
jl
(bad)
mov
xor
movsx
and
jne
inc
dec
sub
add
add
loopne
ficomp
or
add
pop
dec
je
xchg
mov
mov
push
jl
das
cmp
sub
sbb
push
int3
stos
ins
xor
cld
std
outs
fsub
movs
ret
cdq
fisttp
scas
xchg
lea
pop
add
test
dec
cs
or
rcl
pop
dec
jno
xchg
push
push
inc
in
xor
test
jo
out
inc
pop
out
jmp
sbb
shr
(bad)
xchg
dec
jle
cwde
pop
daa
aam
sbb
cld
mov
outs
push
dec
scas
and
cmp
shr
add
mov
jp
mov
dec
inc
ror
out
cmp
dec
and
cdq
adc
xchg
ins
js
xchg
rcr
fsub
sbb
icebp
inc
fsubr
xor
mov
out
scas
mov
call
das
aas
fiadd
or
cwde
hlt
jp
xchg
or
lea
or
xor
std
or
adc
mov
adc
mov
lea
sub
lea
outs
retf
and
pop
xor
add
push
sub
jg
xor
fistp
js
dec
lea
jmp
mov
ja
in
mov
xchg
jmp
sub
xor
mov
inc
fisub
sbb
xchg
call
lods
xchg
outs
xchg
push
js
mov
add
js
mov
sub
xchg
pop
add
movs
pushf
cli
aam
add
je
mov
xchg
cwde
xchg
dec
push
and
adc
enter
inc
dec
icebp
jge
movs
sbb
shl
jge
adc
add
sbb
les
imul
mov
std
sub
mov
sbb
push
add
push
imul
mov
or
push
ret
and
add
in
push
mov
shl
add
add
push
mov
cli
xor
ret
jle
or
dec
mov
es
lods
dec
call
or
(bad)
mov
jp
in
jne
inc
inc
sti
adc
jle
(bad)
mov
add
mov
(bad)
out
or
push
cli
xchg
inc
lea
or
mov
add
icebp
je
mov
add
lahf
adc
cmp
jg
icebp
sbb
pop
dec
add
inc
and
sbb
adc
mov
(bad)
pop
push
dec
jmp
(bad)
cmp
call
jae
cmps
rcr
loopne
mov
add
sub
dec
mov
inc
mov
imul
add
inc
stos
mov
add
add
add
dec
dec
clc
push
add
dec
xchg
or
xchg
xchg
add
ror
push
adc
fdivr
int3
icebp
shl
in
push
inc
or
(bad)
fild
js
adc
loope
pop
aam
ss
lods
fiadd
xchg
jle
mov
into
(bad)
div
aam
mov
mov
inc
inc
jg
ins
sub
rcr
xor
dec
call
loopne
imul
fild
push
push
pushf
xor
loopne
push
jge
jb
sub
movd
jbe
fs
cwde
pop
jl
xor
pop
aaa
fcomip
sbb
jne
or
mov
test
mov
sbb
(bad)
loope
pop
mov
and
pop
or
push
mov
add
sbb
(bad)
test
jne
pop
je
xchg
loope
mov
cmps
cli
inc
imul
or
loopne
ret
inc
out
or
pop
ror
fnstsw
mov
daa
out
adc
xor
lock
shl
mov
gs
adc
mov
jb
ret
pop
jmp
aas
dec
or
add
cdq
addr16
and
mov
push
loop
ins
push
daa
or
aad
jo
in
push
mov
dec
inc
movs
outs
ins
and
or
jne
(bad)
sbb
mov
mov
mov
neg
fimul
daa
push
mov
lods
add
sar
or
cmp
push
or
inc
push
jno
out
(bad)
cmp
jg
cmp
cmp
int3
jl
jno
stos
pop
or
loope
pusha
aaa
mov
jge
inc
xor
sahf
xchg
mov
or
sbb
mov
or
or
xchg
adc
inc
lea
aas
(bad)
ror
pop
mov
ror
lods
and
and
cmp
push
mov
add
je
in
sub
dec
inc
sub
xchg
retf
xor
dec
dec
repz
dec
out
lea
and
(bad)
jmp
imul
mov
addr16
pop
dec
xor
(bad)
pop
jle
xchg
adc
mov
sub
adc
test
fwait
push
test
push
push
xchg
sbb
retf
in
xchg
je
into
mov
mov
push
push
mov
push
sar
std
push
inc
add
je
inc
mov
les
xor
adc
sub
js
sub
and
scas
nop
(bad)
push
(bad)
cmp
dec
sbb
retf
shr
xchg
inc
mov
rol
ret
push
and
push
fs
push
cs
inc
add
aaa
xchg
xchg
inc
jmp
scas
(bad)
sti
daa
je
add
cmovne
(bad)
mov
xor
sbb
dec
enter
sbb
sbb
and
sub
jne
fistp
jne
imul
cmp
sti
xlat
call
adc
xor
js
pop
sahf
mov
add
dec
add
test
mov
xor
push
mov
mov
push
xor
(bad)
lock
call
adc
add
pop
idiv
sahf
les
lea
loop
xchg
cmp
adc
sub
push
fistp
push
pushf
mov
jmp
mov
outs
or
stc
mov
xchg
mov
dec
adc
dec
xor
pop
adc
lods
repnz
sbb
inc
and
mov
inc
mov
mov
sbb
pop
test
ret
inc
in
dec
push
test
imul
sub
dec
lea
outs
add
lea
and
lock
cmps
sbb
(bad)
mov
add
shr
jmp
mov
add
cmp
jae
icebp
add
or
sub
add
adc
push
and
or
ret
call
test
inc
add
sar
add
sub
pop
jne
adc
fadd
adc
adc
rcl
lods
cs
and
inc
mov
sar
leave
adc
push
(bad)
jne
mov
and
cmps
mov
shl
or
mov
pop
add
pop
retf
call
or
retf
add
mov
mov
jmp
inc
dec
ins
fidiv
movs
cmp
mov
mov
push
in
jne
xchg
sub
mov
mov
or
pop
ficom
in
loopne
clc
lea
mov
mov
adc
or
xor
adc
add
inc
ror
xchg
test
je
adc
rcl
or
in
shr
loop
jmp
jne
int3
dec
sub
or
dec
mov
jnp
sti
adc
push
je
xor
imul
or
sbb
push
aad
push
fcmovnb
ret
pop
rcr
xor
xchg
push
or
mov
mov
mov
mov
mov
cmp
cmp
fsubr
in
add
imul
shr
adc
imul
or
mov
pop
call
loopne
in
hlt
mov
in
xchg
enter
ss
adc
dec
jbe
mov
lea
jae
cmp
rcr
mov
lea
pop
dec
les
sbb
loopne
pop
or
loopne
call
inc
int
mov
pop
or
dec
nop
add
movs
sbb
ds
inc
push
repz
and
jns
inc
xchg
int3
dec
push
daa
adc
or
push
lods
mov
mov
mov
and
add
dec
mov
pop
add
sbb
inc
or
or
xor
or
xlat
xor
jecxz
popa
and
add
mov
cld
fadd
mov
xchg
pop
inc
retf
cmp
addr16
push
cmp
push
inc
cmp
sbb
push
fisubr
jl
or
js
jmp
inc
pop
push
cmp
lods
or
sub
or
adc
in
push
or
ds
int3
fst
dec
adc
call
fld
cmp
fucompp
xchg
adc
stos
push
pop
pop
imul
mov
adc
imul
lock
jmp
xchg
ret
pusha
pop
ret
cwde
ds
push
fimul
les
mov
jo
mov
mov
call
inc
jge
xor
stc
icebp
repz
sbb
sar
xchg
push
loopne
jmp
div
xchg
mov
nop
mov
jns
jne
xchg
fsub
jb
push
dec
mov
and
push
fwait
movs
add
fidivr
mov
mov
mov
inc
sbb
xor
ja
push
dec
add
sti
or
gs
inc
repz
inc
pop
aam
adc
(bad)
inc
inc
call
sub
sub
sbb
rcl
pop
mov
repz
xchg
test
stos
mov
sbb
ss
pop
fadd
es
ror
or
das
push
gs
cs
loopne
fcom
test
inc
push
jno
fmul
(bad)
rcl
test
enter
pusha
adc
loop
or
dec
push
lock
enter
sbb
sub
mov
xchg
or
aam
aas
mul
(bad)
mov
inc
add
add
mov
arpl
fimul
loopne
and
inc
loop
mov
push
es
and
enter
jecxz
xor
push
add
jmp
pop
lock
pop
inc
sub
(bad)
mov
mov
ja
xor
inc
sbb
je
adc
cmp
add
xchg
fisubr
sub
je
adc
mov
sub
pop
rol
loop
pop
bound
adc
cwde
or
mov
adc
retf
lods
and
adc
imul
rol
mov
imul
test
adc
das
dec
sbb
pop
xor
adc
mov
aas
xor
jne
adc
cmps
xor
and
aaa
enter
jmp
add
enter
add
jmp
js
inc
xor
add
es
cmp
icebp
dec
sub
sub
push
imul
or
jl
sar
mov
adc
dec
clc
nop
call
or
inc
pusha
fidivr
and
mov
popa
fild
inc
js
jge
inc
inc
cmp
jl
retf
inc
shl
and
jge
dec
adc
outs
cmp
cmp
enter
aad
mov
jl
inc
repnz
adc
sahf
mov
mov
dec
fsubr
je
dec
ret
push
js
or
sbb
fldenv
xor
add
dec
retf
mov
cdq
idiv
push
xchg
shl
fwait
push
mov
sar
inc
xchg
adc
retf
mov
jne
lea
imul
mov
push
shl
outs
xchg
lock
ret
(bad)
mov
pop
lsl
dec
dec
push
dec
aam
shl
fild
inc
jge
shr
int3
pop
add
ret
push
rcl
add
shl
add
data16
push
add
and
sbb
fimul
xor
lea
jae
and
and
pop
dec
pop
call
jmp
inc
or
mov
sbb
loopne
pop
std
call
lea
punpcklwd
inc
gs
xor
adc
and
mov
psraw
out
push
hlt
add
arpl
clc
cmps
ficom
scas
push
pop
rol
add
cmp
cmps
pop
fild
mov
add
add
inc
rcr
pop
sbb
pop
add
daa
lock
add
dec
cmc
adc
sbb
cs
mov
js
mov
jg
out
loopne
test
xor
xor
pavgb
jb
sub
(bad)
shr
sbb
sub
pop
mov
out
adc
clc
inc
sbb
mov
pop
out
or
lds
or
shl
adc
jmp
xchg
mov
mov
jo
mov
lods
mov
xchg
orps
in
add
adc
pop
mov
test
cmp
dec
iret
mov
mov
ret
jge
mov
dec
inc
sbb
xchg
retf
cs
movs
sbb
sub
adc
adc
sbb
js
shr
ss
les
lahf
sar
neg
add
mov
scas
outs
adc
mov
jns
inc
adc
jmp
mov
or
inc
je
popa
or
push
pop
lods
cmps
or
aas
sub
or
pusha
hlt
sti
out
jns
mov
retf
shl
dec
push
popf
fsub
lock
add
mov
and
adc
ror
xchg
push
shl
cmp
add
xchg
inc
in
mov
pop
sahf
jl
lea
inc
imul
and
sub
mov
clc
sahf
inc
mov
sub
ds
ror
(bad)
and
fidivr
cmp
push
or
sbb
and
push
dec
dec
dec
loopne
mov
mov
and
mov
cmp
pop
js
mov
or
mov
pop
sbb
js
int
inc
test
sbb
mov
fcom
jge
add
js
sbb
push
mov
push
cmp
sbb
or
mov
push
inc
add
jl
cmp
inc
ret
pop
add
sub
loop
and
add
ins
push
pop
adc
add
mov
les
call
in
xchg
inc
mov
xchg
out
outs
bound
cmps
imul
lock
and
mov
adc
pop
or
test
jbe
cmp
push
je
dec
sub
jle
inc
cmp
adc
inc
or
pop
ja
lock
pop
add
xor
aaa
push
lock
enter
and
mov
int3
or
push
call
(bad)
into
aaa
sub
test
mov
fisubr
mov
sbb
test
aam
add
jp
ror
in
jge
add
xor
push
sbb
pop
(bad)
or
inc
stos
cwde
xor
or
push
lock
loop
fild
das
sbb
jle
mov
dec
lea
pop
add
fs
pop
mov
loopne
(bad)
xor
ret
xor
fsub
ins
or
rol
in
jl
mov
jns
add
xor
int3
fcomp
or
xor
jno
call
push
sub
lock
lea
sub
lock
cmp
pop
push
xchg
cmp
ficom
int3
sbb
xor
mov
rcr
das
dec
cmp
mov
xchg
or
adc
iret
adc
clc
mov
hlt
lds
aad
or
and
xchg
loopne
sbb
call
iret
sub
loop
cmp
mov
test
push
call
mov
sar
aaa
mov
rol
popa
inc
fadd
enter
sbb
dec
push
pop
call
add
mov
sahf
ins
push
inc
push
mov
rcl
imul
cmp
jae
add
inc
adc
push
fsubr
and
and
xor
repnz
add
or
inc
xchg
dec
fdivr
fmul
adc
js
jmp
dec
xor
movs
xchg
sbb
xchg
scas
in
adc
xor
imul
out
pop
push
mov
ins
cmp
enter
add
and
out
fdivr
in
(bad)
and
adc
xor
das
ins
ret
retf
pop
shr
dec
add
add
sub
sbb
and
jno
jne
fs
dec
(bad)
push
retf
push
adc
ja
outs
jmp
push
dec
mov
fsubr
push
jne
mov
mov
or
pop
add
iret
shl
mov
ror
pop
mul
sbb
push
jo
rol
xchg
xchg
xor
out
jo
add
or
nop
test
push
jnp
jl
cmc
fwait
or
sbb
adc
add
arpl
mov
fcomp
test
mov
dec
je
clc
ins
repz
push
mov
ret
js
add
fdiv
mov
aaa
cmp
and
xchg
push
int
les
xlat
fild
dec
imul
sbb
ins
jmp
dec
cmp
imul
inc
ins
(bad)
or
retf
in
movs
add
inc
(bad)
lds
rol
aad
(bad)
out
jmp
inc
mov
aaa
ret
push
rcl
lods
dec
enter
jge
call
jle
dec
jmp
add
aaa
xchg
cmc
cwde
movs
fwait
cmp
cmp
add
cmp
pop
add
aas
or
dec
mov
arpl
sbb
cmp
dec
push
push
ds
retf
clc
cmp
dec
js
sub
jo
scas
sar
data16
add
shl
xor
(bad)
sub
mov
add
adc
inc
push
test
add
mov
jl
call
mov
nop
sbb
dec
ror
ficom
adc
jle
fiadd
jae
test
sar
(bad)
push
adc
dec
in
push
scas
test
xchg
mov
adc
es
cmp
sbb
inc
arpl
bnd
pop
ss
adc
dec
xchg
out
sbb
dec
hlt
test
mov
jge
add
add
fs
cmp
pop
loop
mov
cmp
jo
inc
(bad)
jg
jmp
shl
push
push
fs
add
sbb
fdivr
cmp
sahf
xor
sbb
add
out
movs
xchg
jge
inc
jge
rol
mov
das
mov
dec
jne
les
nop
mov
pushf
cld
cli
or
sub
and
enter
or
xor
sub
aaa
jbe
inc
cld
mov
pop
lahf
jnp
jle
sar
and
ret
xor
or
mov
pop
or
xor
adc
lahf
pop
jmp
adc
jl
xor
mov
xor
xor
dec
dec
sar
fs
cs
gs
fisttp
inc
mov
or
pop
mov
retf
and
les
add
sub
loopne
icebp
jmp
inc
add
loope
arpl
ffree
in
push
or
cmp
cmp
adc
cmp
cs
sbb
(bad)
fst
ja
loopne
sbb
rcl
xor
fmul
loope
sub
scas
fcomp
or
hlt
shl
sub
call
ret
mov
add
sar
add
mov
jb
jl
loop
mov
push
std
inc
inc
rcl
jno
sub
imul
cmp
out
inc
sbb
stos
mov
fimul
outs
adc
adc
xor
test
mov
mov
(bad)
(bad)
imul
xchg
movs
mov
xchg
add
dec
stos
dec
or
clc
or
or
test
xchg
inc
sub
das
jmp
shl
loop
imul
(bad)
push
out
push
js
test
add
out
inc
pop
clc
adc
sbb
imul
add
push
mov
les
adc
sub
sub
inc
out
jmp
sub
adc
cs
cmp
xchg
in
mov
sbb
movs
or
and
xchg
dec
sbb
iret
push
sub
mov
or
pop
in
sbb
pop
popf
retf
or
pop
adc
jb
stos
in
dec
out
sbb
and
jb
xlat
or
adc
cmp
shr
cli
jae
jl
not
add
(bad)
jmp
add
push
adc
and
shl
mov
sbb
add
(bad)
in
rcr
jmp
cs
movs
pop
add
jne
aam
sbb
movs
sar
mov
add
pop
call
add
and
sub
lea
shr
adc
mov
or
lods
adc
add
and
dec
pop
dec
push
adc
push
pop
(bad)
push
or
mov
mov
dec
xor
adc
push
and
jnp
pop
push
jae
mov
adc
dec
add
aam
sbb
add
pusha
mov
dec
mov
(bad)
sti
mov
and
repz
adc
pop
rcr
xor
jae
mov
clc
sbb
sub
in
clc
in
loopne
or
imul
call
cmp
test
pop
outs
outs
es
mov
jp
push
dec
enter
shl
int3
jp
push
retf
mov
adc
cdq
shr
or
xchg
jae
or
ret
sub
rcl
lock
pop
ss
and
xor
jle
aad
and
in
xchg
ss
jb
or
outs
call
clc
sub
cmp
jnp
adc
mov
sti
add
mov
retf
jmp
inc
in
jle
sbb
int
clc
and
idiv
daa
or
mov
fcmove
or
out
imul
xchg
call
sbb
call
fmul
and
jg
outs
push
dec
mov
adc
dec
aam
into
or
or
sbb
ret
push
aas
movs
fwait
ror
idiv
lea
test
retf
mov
jg
mov
out
sbb
cmp
adc
js
jl
sar
ins
add
std
(bad)
out
cmp
lea
dec
sub
xchg
sbb
push
push
inc
and
pop
(bad)
fist
fsubr
or
out
arpl
xchg
sub
loop
mov
push
imul
jmp
or
test
add
pop
cmp
xlat
lods
mov
(bad)
int3
inc
push
add
adc
jge
push
or
in
in
add
add
add
out
test
jnp
in
enter
fdiv
or
sbb
scas
adc
xor
in
fild
xchg
pop
jne
lods
dec
cmp
jge
mov
push
jge
mov
add
mov
imul
jge
inc
imul
or
rol
aam
xchg
cmps
aam
sub
push
mov
jge
or
adc
mov
pop
add
or
push
ins
mov
xchg
jge
add
clc
add
add
or
xor
add
out
out
shl
js
mov
mov
fistp
sbb
jbe
sbb
mov
shl
(bad)
push
arpl
shl
gs
or
in
fisub
(bad)
jp
xor
xchg
jp
shl
or
adc
inc
mov
add
pop
fcomp
inc
retf
and
enter
adc
adc
fcomp
enter
or
pushf
(bad)
pop
adc
add
mov
push
cmp
into
inc
fs
(bad)
mov
inc
sar
mov
cmp
add
sar
lds
xor
popa
push
rcr
icebp
repnz
ins
or
push
or
cmp
push
cs
lock
mov
hlt
sub
mov
xchg
jp
lahf
ja
rcl
or
loop
loopne
ss
nop
adc
inc
push
movs
nop
mov
clc
xchg
mov
mov
inc
lods
fisub
mov
inc
fimul
add
mov
xchg
dec
pushf
jb
nop
lock
call
repnz
data16
push
and
enter
imul
dec
and
pop
mov
ins
or
ret
or
mov
popf
std
sub
or
mov
and
paddusb
jp
ds
and
push
push
ja
mov
sub
sub
mov
je
add
fsubr
daa
mov
(bad)
xchg
jno
mov
add
add
mov
jbe
ror
jmp
add
movsx
repnz
pop
add
ficomp
sar
ret
push
dec
sub
push
js
call
dec
out
mov
fdivr
or
int3
mov
xlat
lods
mov
fist
xchg
test
add
cmp
adc
push
adc
xchg
add
(bad)
ss
loope
dec
sbb
and
adc
xchg
cmp
retf
icebp
mul
jne
sub
into
test
scas
retf
jno
arpl
mov
dec
push
in
adc
sbb
mov
pushf
sub
mov
inc
ss
fsub
dec
test
clc
mov
pop
adc
pushf
add
dec
(bad)
sub
cmp
out
and
push
fadd
lock
(bad)
shr
push
mov
sbb
retf
push
ret
push
in
pop
aam
fdiv
jnp
xchg
rcr
ss
adc
ret
pop
ja
dec
rcr
shl
cmp
shl
sar
push
jmp
dec
mov
mov
shl
mov
nop
xchg
mov
call
cli
mov
pop
push
clc
pusha
out
push
push
popa
jl
call
dec
sub
aad
rcr
adc
mov
neg
mov
lahf
mov
sub
jmp
lea
push
xor
cmp
cmp
aaa
inc
daa
add
mov
push
test
fistp
push
sbb
sub
cwde
pop
pop
ret
add
push
adc
jne
retf
cdq
lods
mov
xchg
bound
pusha
push
jmp
(bad)
pop
add
cmp
mov
push
pop
data16
ds
push
in
mov
sbb
mov
test
mov
or
sti
push
dec
jg
jnp
mov
jle
add
lea
push
cmc
or
imul
ret
or
mov
repz
rol
pop
sbb
push
and
je
lock
mov
in
pop
xor
lods
or
and
sbb
dec
and
out
les
fldenv
mov
adc
js
sahf
test
lds
add
sbb
mov
pusha
pusha
pop
and
and
div
loop
adc
push
jnp
sub
jge
cmp
dec
push
imul
sub
adc
fld
and
add
leave
pop
push
test
es
rol
or
cs
aam
scas
sub
fcom
and
adc
js
jge
xchg
(bad)
nop
call
jo
inc
pop
add
mov
stos
push
popa
sub
cmps
push
dec
inc
(bad)
push
in
test
cli
mov
test
test
fcomp
mov
clc
ins
mov
mov
adc
nop
mov
dec
addr16
jmp
mov
sub
cmps
imul
jl
lahf
add
push
and
in
shl
cmc
adc
push
gs
and
dec
arpl
and
xchg
add
add
loope
mov
jo
cld
nop
and
or
sbb
inc
cmp
pop
rcl
imul
bnd
jl
sbb
mov
scas
rol
out
mov
mov
adc
xor
add
cmp
(bad)
jl
jp
inc
fld
cli
dec
adc
stc
add
outs
fistp
cmp
sub
push
mov
inc
aaa
push
pop
dec
inc
ss
push
xchg
jns
rol
adc
mov
mov
clc
mov
pop
ret
dec
fcomp
jg
lods
out
adc
xchg
and
inc
ret
data16
(bad)
adc
jne
ret
dec
adc
pop
cmp
cwde
and
add
pop
mov
adc
repnz
sub
mov
add
sub
mov
lock
add
mov
sti
(bad)
outs
add
arpl
gs
mov
mov
jno
fstp
and
lods
pop
gs
retf
add
adc
ficomp
enter
ds
inc
inc
inc
ror
jnp
sar
cmp
sbb
add
jo
call
lea
sub
and
test
add
daa
dec
aaa
adc
ins
inc
jb
ds
sbb
test
add
cmp
lock
jo
adc
ror
xchg
jmp
xor
xor
ror
call
loopne
dec
add
xor
adc
das
aam
sahf
push
ja
mov
arpl
out
jo
inc
mov
imul
push
call
pop
mov
sub
xchg
mov
xor
add
adc
inc
jb
adc
pop
clc
test
sti
and
cmp
pop
or
cmp
sub
add
jae
int3
dec
dec
dec
cdq
inc
dec
clc
mov
inc
xor
pop
push
dec
pop
int
xchg
mov
xlat
xchg
gs
and
jecxz
sub
pop
adc
fild
mov
das
inc
sahf
cmp
adc
(bad)
loopne
xchg
push
out
push
fiadd
(bad)
jb
dec
addr16
add
jae
retf
xor
push
xchg
inc
sub
lods
loope
mov
sbb
retf
or
fadd
fiadd
add
adc
scas
test
mov
pop
test
sub
pop
mov
inc
adc
cmps
jns
cmp
jge
das
mov
xor
xstore-rng
cmps
add
lahf
jmp
lea
clc
jmp
mov
mov
jmp
jo
mov
add
dec
fadd
dec
and
mov
add
ret
sbb
inc
and
mov
fld
xor
jle
or
xor
dec
cmp
scas
ins
imul
mov
inc
dec
pop
or
stc
dec
jle
pop
pop
icebp
mov
retf
in
mov
(bad)
push
inc
and
(bad)
(bad)
and
mov
or
mov
out
xor
pushf
int3
sub
pop
outs
(bad)
jmp
xchg
inc
push
mov
push
xchg
rol
push
and
pop
add
mov
cmp
mov
inc
clc
add
mov
jl
clc
push
xchg
fs
inc
pop
push
adc
sbb
rol
scas
dec
xor
xor
add
add
test
fcmovbe
or
jmp
std
push
jmp
lea
rcl
sbb
xor
out
or
ret
xor
or
rcl
or
xor
(bad)
call
mov
leave
sub
dec
sub
sub
push
stc
loopne
sub
fwait
pusha
int3
inc
std
or
mov
ror
mov
xchg
adc
or
push
enter
jl
test
mov
sub
sbb
mov
shr
mov
xchg
sbb
jmp
cmp
jnp
inc
dec
jl
adc
clc
sub
sub
and
dec
cmp
movs
add
sub
dec
enter
sbb
pop
fadd
ins
xlat
out
adc
adc
and
sbb
adc
push
cmp
push
mov
jb
cmp
adc
dec
or
cmp
test
jmp
push
or
out
aaa
mov
and
pop
xchg
test
pop
dec
rcl
cmp
or
cwde
push
xchg
mov
jnp
cmps
fs
jp
out
sbb
jmp
mov
iret
push
jecxz
js
mov
and
xor
sub
mov
icebp
fmul
push
mov
inc
or
adc
push
dec
xchg
push
adc
jmp
lds
sub
xor
daa
adc
mov
and
cmp
add
cmps
jge
xchg
mov
clc
pop
mov
lea
inc
cwde
inc
or
and
jg
cmps
inc
inc
les
dec
xor
jmp
jo
mov
pop
(bad)
mov
cmps
lds
sbb
enter
adc
ja
and
pop
mov
or
or
sti
out
adc
int
inc
nop
fsubrp
mov
push
adc
cmp
sahf
cmp
dec
mov
pop
sar
or
lea
push
jns
call
(bad)
sbb
xor
mov
cwde
jl
daa
fsubr
in
adc
push
jbe
xlat
xchg
loop
lea
stos
jge
push
mov
mov
dec
pop
not
xor
jmp
nop
push
test
lods
inc
cmp
or
push
ret
cmp
mov
or
inc
test
dec
inc
ins
pop
div
jg
dec
push
lock
icebp
in
nop
add
inc
sub
test
add
push
ss
ret
cmp
dec
jmp
icebp
into
add
scas
into
aam
jmp
fidivr
scas
or
or
sbb
adc
(bad)
push
or
add
xor
rcl
stos
stos
ret
dec
push
push
and
push
sbb
pop
sub
sahf
and
test
xor
in
pop
lahf
hlt
fwait
cwde
mov
xchg
fistp
mov
js
cdq
nop
sub
mov
sub
aad
mov
dec
jo
jae
add
je
or
or
and
das
xchg
mov
(bad)
ficom
and
or
repz
repz
jle
dec
pop
add
pop
fnstenv
add
xchg
addr16
or
ret
mov
mov
out
pop
inc
mov
mov
cmps
aaa
xchg
loopne
cdq
sub
sub
jle
fisttp
pop
xchg
hlt
inc
fmul
and
mov
inc
test
pop
out
dec
clc
xor
sub
inc
out
arpl
pusha
push
jno
cmp
fmul
mov
cmp
imul
add
cmp
ja
imul
stc
lds
dec
sub
or
call
sbb
pop
xor
ret
inc
call
clc
js
pop
pusha
daa
xor
cmp
sbb
adc
add
add
dec
jmp
cmp
or
cmp
or
mov
push
jle
(bad)
dec
push
pushf
jbe
shr
ffree
add
push
sub
popf
adc
ds
mov
dec
fadd
mul
or
jmp
xor
xchg
or
jno
dec
mov
call
mov
mul
add
pop
push
scas
dec
adc
inc
fidiv
lods
push
fsubr
nop
adc
add
pop
fwait
cmc
adc
inc
push
jmp
inc
inc
mov
and
lods
ins
inc
adc
cmc
retf
pusha
mov
(bad)
xor
cmp
sbb
es
push
stos
sti
js
scas
retf
and
enter
sysenter
add
sub
add
ror
mov
add
xchg
addr16
push
dec
dec
cld
dec
xor
jo
out
xchg
fisttp
jno
push
mov
xor
mov
int3
cmp
jo
and
(bad)
push
cwde
stos
mov
repnz
pushf
adc
mov
push
cmp
jge
into
test
mov
cdq
inc
pop
adc
xor
xchg
push
pop
push
add
xchg
cmc
ret
cld
cld
sub
mov
mov
push
js
das
rcr
sbb
sbb
jbe
and
mov
mov
adc
sub
dec
std
cmp
leave
clc
xor
lock
pop
push
shr
int
mov
lods
add
jb
lds
jmp
sub
jb
and
or
fsub
call
test
loopne
xchg
je
test
or
fs
cdq
mov
arpl
or
mov
add
add
shr
ret
rcr
cmp
ins
ins
arpl
adc
dec
mov
test
sub
repnz
xor
js
inc
add
in
cdq
push
sub
mov
fisub
stos
ror
in
pushf
add
inc
stos
shr
je
enter
mul
and
adc
xor
push
lea
and
sbb
add
push
jne
mov
das
push
test
loopne
jae
inc
add
sub
rol
daa
xor
and
pop
(bad)
test
cmp
cmp
daa
cmp
xor
sbb
jl
cmp
sbb
setb
sub
push
pushf
pop
lock
mov
dec
add
adc
jo
icebp
mov
sbb
iret
outs
test
mov
cwde
jo
push
mov
xchg
das
xor
pop
mov
push
mov
cmp
sub
in
into
rcr
cwde
add
inc
sar
arpl
cmp
popf
rcl
pop
mov
fwait
sbb
dec
push
scas
ins
bound
add
add
dec
fmulp
cmp
fadd
fldcw
loopne
jne
jl
jmp
cdq
out
pop
jmp
adc
fidiv
mov
cmps
outs
jg
dec
je
add
jmp
adc
cmc
sbb
les
hlt
div
ror
pop
jo
call
mov
pop
jmp
aam
les
dec
mov
inc
shl
mov
jne
inc
stos
out
sub
sub
or
add
test
ins
jne
cmp
add
scas
cmp
es
ret
scas
push
jmp
sbb
or
xchg
in
dec
bound
push
inc
hlt
ret
add
mov
mov
adc
lds
and
sbb
sub
imul
dec
xchg
push
fsub
cdq
inc
int3
or
jnp
lods
jns
adc
pop
xchg
cmps
dec
cmp
sub
je
out
jl
(bad)
cli
push
int3
add
adc
iret
cli
test
fidivr
fs
add
jmp
push
fwait
ret
push
mov
aas
sbb
cmp
xchg
sahf
shl
repnz
or
cmp
inc
push
sub
sbb
mov
pusha
repz
or
add
lods
arpl
shl
pop
inc
dec
lahf
rcr
or
cmp
(bad)
pop
into
mov
sahf
inc
mov
in
and
mov
fstp
imul
lea
fwait
pop
out
inc
je
pushf
and
jnp
add
jmp
mov
jmp
dec
js
sbb
jns
or
mov
es
cld
push
cmp
xchg
popf
test
pop
loop
test
xor
add
push
inc
sar
add
pop
fdivr
xchg
and
movs
jae
inc
call
clc
ret
stos
xchg
sbb
in
mov
or
pusha
mov
je
push
mov
mov
xor
add
jmp
cmp
mov
push
ss
inc
and
mov
mov
sbb
xor
xor
sbb
mov
add
pop
or
mov
shl
add
cli
sbb
das
inc
sub
adc
pop
cmp
test
fisttp
popa
or
mov
pop
imul
inc
nop
dec
mov
pushf
les
sbb
push
mov
dec
cmp
aaa
xchg
mov
mov
movsx
inc
fidiv
loop
push
or
and
sti
and
lods
xchg
out
add
xlat
push
data16
jmp
cmp
xchg
shl
lea
mov
sbb
inc
shr
rcl
loopne
in
pop
cli
inc
inc
fmul
fmul
mov
mov
imul
or
push
mov
adc
nop
in
lds
movss
push
mov
inc
retf
mov
add
xor
pop
dec
jg
jmp
sbb
add
inc
add
xchg
gs
and
mov
pop
ret
mov
stos
adc
push
and
shr
mov
pop
add
cmp
cmps
pusha
in
outs
xlat
inc
or
push
call
or
fs
jecxz
popa
xchg
in
enter
push
ret
lock
ret
leave
cmp
inc
bound
push
add
dec
xor
(bad)
sbb
dec
psubsb
retf
js
push
xor
inc
mov
sbb
jmp
lods
sub
adc
imul
pop
adc
push
or
jbe
in
xchg
sbb
scas
sbb
(bad)
adc
push
(bad)
fxch
(bad)
sub
jne
or
cdq
add
pop
rcr
int
(bad)
cmps
or
pop
aam
xor
pop
arpl
aaa
mov
clc
(bad)
aam
pop
or
mov
(bad)
jne
pop
bound
inc
ret
in
inc
in
lea
pop
and
repz
test
fild
jp
mov
push
inc
sti
and
adc
or
sub
cmp
add
sub
adc
adc
push
cmp
sub
mov
cmp
cmps
arpl
mov
mov
mov
add
jg
adc
add
jne
add
inc
pop
mul
or
mov
push
cli
cmp
jbe
mov
inc
mov
sbb
xchg
ja
mov
jg
jl
dec
gs
ror
fwait
or
add
mov
adc
add
inc
mov
ins
jb
or
cmp
fcom
inc
pop
data16
xchg
pop
pusha
inc
inc
imul
jo
test
lock
scas
mov
jg
ja
mov
pop
xor
hlt
lock
adc
add
add
push
retf
ja
inc
sub
shr
inc
out
out
jno
sub
jbe
mov
cmp
mov
push
add
inc
loop
rcr
inc
sbb
gs
(bad)
dec
jae
jo
in
jbe
mov
fimul
push
adc
inc
xor
jnp
mov
sub
adc
aas
inc
cwde
dec
vrcpps
pop
or
push
xchg
mul
jge
push
(bad)
dec
in
cmp
cmps
push
fadd
mov
mov
fisttp
adc
in
adc
stos
fadd
ficomp
cwde
cs
rcr
xchg
cs
dec
push
popa
xor
sub
lods
mov
xor
(bad)
xchg
mov
in
jbe
mov
and
call
pop
test
or
in
test
add
jp
xor
mov
lea
inc
jge
ja
push
cwde
mov
data16
jecxz
outs
(bad)
hlt
jge
jl
push
scas
aam
dec
add
(bad)
pop
sbb
mov
push
test
add
scas
dec
sbb
cmps
adc
clc
adc
sub
pop
or
test
dec
ret
jnp
xchg
inc
outs
add
ins
or
sar
add
mov
cmp
pusha
pusha
std
mov
adc
pop
std
arpl
js
lea
mov
cmps
lock
and
jmp
or
xor
popa
enter
adc
pop
mov
add
add
fnstsw
ret
push
mov
push
fisub
jp
sbb
mov
cld
cmp
scas
cmp
pop
mov
iret
jl
scas
scas
adc
pop
mov
fnstcw
shr
add
cmp
sar
pop
inc
fidiv
sbb
jo
jns
or
push
xchg
sub
jecxz
hlt
jmp
mov
xlat
inc
das
adc
stc
and
adc
mov
fdivr
push
mov
cmp
clc
mov
jmp
es
dec
mov
fwait
push
rcl
inc
jecxz
movs
add
outs
loope
ret
xchg
test
imul
fistp
sti
(bad)
push
mov
xchg
pop
pop
adc
sbb
lahf
mov
out
arpl
push
lock
push
ror
pop
popf
jne
or
jae
cmps
jns
cmps
ins
inc
gs
pop
xchg
mov
call
xor
sbb
fsubr
data16
or
dec
and
inc
pusha
mov
enter
mov
jo
fadd
test
sahf
cwde
(bad)
fidiv
and
dec
inc
adc
inc
fdivr
scas
xchg
cmps
imul
fldcw
push
imul
pushf
clc
dec
imul
shl
fmul
dec
shl
aam
adc
fucomip
call
adc
mov
imul
adc
xor
call
push
mov
loopne
sub
adc
imul
shl
inc
movs
loopne
mov
dec
push
mov
sbb
int3
fld
shl
sbb
sbb
cmps
loopne
ror
mov
cmps
in
ficom
push
in
call
sbb
push
sbb
inc
fwait
inc
or
in
into
pop
and
hlt
arpl
pop
jae
ficom
sub
mov
xchg
pop
ins
dec
gs
pusha
push
cmp
jp
xchg
inc
adc
js
sub
or
sub
xor
jne
pop
sbb
test
inc
or
sbb
shl
repz
adc
adc
enter
adc
arpl
rcl
or
and
(bad)
cmp
fisttp
pop
in
push
sbb
add
inc
sub
push
aaa
cmp
cmp
mov
add
sub
je
mov
inc
inc
add
xlat
cmp
dec
stos
sbb
(bad)
push
add
aas
pop
sub
aam
mov
jne
daa
rol
aad
sbb
pop
cdq
fdiv
or
sub
lea
pop
(bad)
(bad)
in
jp
repz
gs
pop
xor
xor
repz
push
dec
pusha
inc
cmps
dec
inc
repz
cli
scas
lods
mov
scas
or
rol
pusha
mov
pop
lods
movs
jae
dec
ror
inc
jne
pop
push
stos
in
add
sbb
in
inc
inc
sahf
jbe
pop
and
pusha
rcl
lods
and
call
ds
cmp
(bad)
push
pusha
fdivr
out
or
sti
sbb
jge
(bad)
mov
into
repz
int3
xor
loopne
cmp
mov
and
mov
and
push
jns
fdiv
mov
(bad)
loopne
jle
loopne
jge
dec
mov
mov
sub
push
es
mov
push
arpl
sti
shl
cmps
sub
or
(bad)
push
dec
int
adc
adc
add
out
loopne
adc
mov
inc
lods
cdq
ja
into
add
xor
add
sub
sbb
sahf
ja
sbb
sub
or
sub
imul
add
inc
push
sub
ja
inc
loopne
push
mov
sub
sub
sti
dec
inc
or
jl
(bad)
std
xor
cmp
cli
dec
rcr
add
xchg
hlt
inc
inc
jmp
inc
imul
dec
shl
ss
hlt
add
loope
pop
enter
fisttp
mov
mov
add
add
push
pop
hlt
and
iret
add
fld1
ficom
push
mov
das
(bad)
add
xchg
inc
add
(bad)
jns
sbb
xor
fldenv
dec
add
inc
and
sti
dec
sbb
pop
or
add
adc
enter
cdq
pop
pop
dec
jecxz
sbb
or
pop
in
fisubr
add
enter
cwde
cwde
loop
outs
sub
mov
sbb
enter
push
dec
inc
call
xchg
cmc
xor
sub
and
retf
pop
jmp
fwait
pop
(bad)
fchs
les
inc
in
call
push
sub
mov
xor
jmp
pop
jnp
or
cmp
xor
repz
push
sub
push
sbb
cmp
adc
and
inc
pusha
push
mov
aaa
(bad)
stos
pop
sub
push
push
into
inc
retf
jmp
jle
(bad)
icebp
shl
or
loop
lea
add
(bad)
lods
out
(bad)
neg
lea
shl
neg
imul
sub
fisttp
call
add
mov
out
mov
sbb
xor
in
fiadd
rol
pusha
inc
xor
stos
imul
mov
in
jns
cmp
aaa
xor
movs
inc
call
in
pop
mov
and
jne
ret
imul
in
int
sub
jl
js
push
ja
sbb
add
lock
scas
les
push
sub
clc
add
add
and
dec
and
inc
and
sbb
fdiv
repnz
ds
(bad)
fsub
add
push
in
mov
cmp
xor
daa
(bad)
out
pop
stos
xchg
xor
loop
mov
mov
test
push
add
add
mov
mov
mov
movs
shl
arpl
retf
retf
popf
mov
sti
neg
(bad)
not
fucomip
and
nop
xchg
push
arpl
shl
shl
aam
adc
push
add
push
pushf
jns
cmc
add
out
pop
(bad)
nop
sub
retf
retf
imul
pop
retf
pop
sti
jmp
cmps
inc
scas
or
push
jns
(bad)
fld
imul
xor
aaa
or
dec
scas
push
dec
add
pop
daa
test
dec
add
push
push
sbb
cmp
scas
sbb
or
add
xchg
xchg
xor
das
lods
push
outs
lods
movs
scas
push
fdivr
mov
dec
ror
add
sahf
retf
jns
or
and
repz
xor
pop
push
sbb
inc
jae
shl
rcr
pop
pop
cmovb
jo
adc
imul
mov
and
mov
nop
mov
xor
and
xlat
(bad)
call
lock
jno
and
add
or
loope
sub
cmp
ficomp
ror
dec
cmp
scas
clc
push
imul
sub
adc
shr
dec
xchg
pop
mov
xchg
jle
adc
or
hlt
xor
lods
loope
mov
and
repz
sbb
pop
add
js
dec
push
sbb
imul
mov
js
or
pop
add
inc
push
jnp
and
adc
fiadd
aaa
add
inc
dec
sub
lock
jnp
push
mov
or
mov
sub
jg
fmul
mov
mov
adc
ror
pop
out
and
data16
test
inc
xchg
or
mov
and
mov
out
mov
cmps
loope
sub
xchg
sub
data16
pop
add
sbb
sbb
je
cmp
sbb
and
adc
or
fmul
jb
scas
add
dec
cmp
sbb
cwde
inc
sti
add
fdivr
gs
je
ret
call
js
add
mov
in
mov
cs
inc
js
dec
sub
push
add
int
mov
and
dec
inc
cmp
and
and
sbb
push
mov
push
sbb
in
ins
sbb
ds
pop
ins
xchg
mov
shr
or
and
xchg
push
or
cmp
cmp
jbe
or
xchg
mov
push
jg
and
jne
jo
cmp
jmp
popa
lods
and
push
inc
push
shr
add
call
aaa
xchg
lds
pop
mov
cmp
add
dec
loopne
mov
mov
xor
add
int3
das
(bad)
in
popf
sub
or
push
ja
popa
xchg
adc
fnstcw
dec
adc
mov
pop
or
or
mov
and
dec
push
xor
mov
cmp
cmp
in
lods
icebp
call
scas
js
imul
lock
sbb
int
data16
cmp
adc
inc
pop
jl
dec
sar
pop
add
pop
xor
dec
pop
push
add
mov
adc
addr16
jl
add
out
ds
push
xchg
test
loope
cmp
mov
sti
or
or
or
mov
ss
rol
pop
shr
or
cld
push
je
inc
xor
or
out
leave
add
sub
sbb
adc
inc
popa
xchg
lock
jmp
nop
nop
dec
adc
sbb
push
push
mov
or
jnp
int
and
into
add
stos
ins
leave
js
and
ret
sbb
dec
nop
mov
add
mov
add
imul
mov
test
and
mov
mov
add
adc
(bad)
cmps
faddp
call
push
retf
push
popf
mov
dec
mov
add
clc
popa
fdivr
pop
pop
add
sub
xor
mov
sbb
stos
(bad)
repz
push
mov
xchg
pop
jns
dec
add
sbb
jmp
add
(bad)
xor
inc
mov
mov
add
js
push
sub
dec
pusha
popa
pop
pop
bound
jle
bound
lock
push
cmps
push
mov
int
clc
push
cmp
sbb
and
dec
jae
cs
rcr
sbb
sbb
push
inc
aam
retf
jge
xor
leave
mov
and
and
and
xor
ret
rol
or
sahf
mov
mov
or
fs
cli
jge
jno
jno
adc
jae
add
jl
scas
sub
(bad)
fucomp
mov
or
or
pop
dec
in
out
add
into
xor
add
jns
jl
iret
push
test
mov
pop
test
push
(bad)
int3
add
sub
adc
popf
test
in
sub
push
xor
(bad)
lea
aad
(bad)
push
cmp
fwait
loop
jp
mov
jo
js
iret
sbb
arpl
call
popa
adc
pop
or
xchg
push
inc
stos
popf
push
pusha
popa
mov
imul
loopne
mov
fistp
inc
xor
test
pop
enter
sub
test
dec
sbb
sbb
jns
sti
pop
dec
or
dec
pop
(bad)
sbb
and
jo
add
mov
add
pop
popf
add
adc
adc
cmc
pop
call
dec
and
xchg
push
push
fadd
sub
sar
jo
push
js
sbb
shr
lock
dec
cmp
(bad)
int3
push
pop
imul
mov
sub
mov
push
(bad)
and
adc
sar
or
cmp
sti
mov
xchg
loope
std
vpmuludq
aaa
ret
lds
repz
test
push
add
gs
fwait
mov
(bad)
adc
cmp
xor
jo
ins
push
add
xor
ret
sub
loopne
imul
adc
add
mov
cmp
inc
cwde
loopne
xor
cmp
push
mov
lds
outs
mov
mov
ja
or
and
jge
add
push
sub
test
dec
jnp
ja
jnp
inc
adc
dec
es
aas
sar
sahf
add
add
aaa
fadd
xor
mov
mov
mov
xchg
sbb
pop
mov
xor
add
inc
or
data16
and
jmp
inc
cld
cs
enter
xchg
scas
cmp
test
ja
xchg
sub
sbb
add
push
inc
loope
mov
scas
inc
out
iret
xor
imul
mov
movs
or
cli
jo
push
fwait
movs
sbb
add
or
test
xor
fs
mov
imul
sub
inc
cmp
test
test
push
pop
jle
dec
mov
pop
arpl
mov
loop
mov
stos
add
xor
mov
add
sbb
lock
adc
aas
jg
out
je
dec
je
ss
aad
cmps
cmp
xor
or
add
cdq
fs
pop
cmp
sbb
imul
sbb
hlt
cmp
ror
test
cmp
cmp
adc
add
add
jmp
xchg
add
jne
pop
inc
add
call
sub
pop
or
or
imul
xchg
addr16
xchg
cld
clc
hlt
jl
sbb
fs
dec
popa
test
push
cmc
mov
sub
inc
push
sub
mov
inc
daa
arpl
sbb
pop
(bad)
pop
or
xlat
xchg
daa
js
add
mov
pusha
dec
ins
mov
fadd
int
jl
ss
loopne
push
imul
cmp
ror
mov
pop
jae
test
and
adc
and
mov
jb
jmp
xchg
sahf
pop
or
or
sub
xlat
adc
sbb
xor
(bad)
into
and
mov
pusha
pop
rol
xor
push
les
dec
mov
mov
inc
add
dec
(bad)
movs
fwait
test
push
aaa
and
inc
sbb
lods
cmp
sbb
dec
and
ror
das
jno
xor
fs
xchg
mov
add
fisubr
out
retf
pop
pop
rol
ins
mov
push
sahf
iret
lds
push
adc
adc
add
sbb
das
lods
cmp
pusha
mov
sbb
loope
ins
adc
aam
cmp
xchg
push
aam
loopne
fisttp
rcl
loop
mov
jno
test
lock
sub
mov
jns
pop
lock
inc
jmp
cmp
and
add
nop
jl
jo
push
ss
sub
sti
test
in
jmp
arpl
lea
xor
mov
adc
out
pop
ficomp
xlat
dec
fstp
pop
add
mov
popa
jne
jae
or
mov
inc
dec
inc
fwait
data16
adc
movs
and
or
adc
bound
jmp
(bad)
and
push
mov
cmp
or
clc
or
push
adc
sub
adc
adc
int3
jmp
ss
pop
aad
inc
icebp
push
sub
xor
(bad)
push
adc
inc
xor
sbb
pusha
call
xchg
and
adc
inc
xor
dec
push
int3
imul
fdivr
test
sub
call
and
sbb
in
dec
and
xchg
mov
and
add
pushf
push
in
xchg
pop
sti
nop
daa
ret
or
mov
mov
stos
xchg
or
jo
cmp
push
jg
push
add
retf
mov
mov
inc
dec
cmp
lea
(bad)
inc
rcr
or
enter
cmp
lds
test
leave
mov
cmps
or
aaa
inc
cmp
push
jo
fcom
sub
push
pop
jge
adc
cmps
adc
mov
(bad)
pop
pop
fisub
lds
sub
mov
mov
push
and
fadd
mov
lds
(bad)
jge
and
xor
call
test
sub
cmp
retf
mov
cdq
adc
add
lahf
dec
cli
int
jge
push
lds
rcr
ret
je
jg
push
add
inc
(bad)
inc
cwde
nop
sbb
in
iret
cmp
push
xchg
jbe
dec
dec
fldcw
push
stc
imul
add
fisttp
sub
pop
repnz
(bad)
in
fist
xchg
or
adc
adc
pop
stos
pop
push
add
add
inc
and
xor
pop
or
push
mov
mov
xchg
lahf
es
js
push
das
in
not
push
dec
add
imul
mov
xor
stos
xchg
mov
push
test
mov
retf
mov
pcmpgtb
xchg
sub
lahf
xor
cmc
jle
xchg
fucomip
retf
add
mov
push
test
xchg
je
xchg
mov
mov
mov
aaa
dec
fmul
dec
popa
addr16
sbb
enter
retf
pop
xchg
lds
sub
sbb
cdq
inc
pop
dec
or
jne
pop
jg
and
push
xor
in
push
push
add
or
repnz
jne
sub
or
aas
adc
mov
das
xchg
push
adc
adc
pop
or
and
mov
outs
ror
cmp
inc
sahf
mov
jmp
jns
inc
or
xor
sar
pop
push
sbb
jl
sub
jle
inc
xchg
mov
lea
adc
jnp
mov
loope
hlt
add
nop
out
xor
fidiv
sub
or
cdq
(bad)
jg
xchg
or
push
sbb
test
je
add
cmps
push
call
js
add
mov
xchg
mov
adc
enter
mov
repnz
jae
out
jae
adc
adc
movs
aaa
add
xor
mov
mov
clc
loopne
inc
and
add
call
or
adc
cwde
pusha
inc
xchg
pop
test
fistp
jl
dec
and
pop
jb
retf
shl
pop
dec
cmc
push
jbe
sub
cmp
jge
mov
rol
adc
sub
mov
pop
add
nop
push
jae
mov
dec
movs
es
es
and
dec
jae
outs
pop
je
inc
add
addr16
xor
sbb
inc
dec
jl
inc
je
add
out
adc
daa
jle
mov
inc
pop
mov
sar
xchg
dec
ins
stc
in
or
rcr
ja
mov
rcr
pop
pop
and
xchg
xchg
lea
jmp
inc
(bad)
test
shr
lahf
scas
add
inc
cld
lahf
lea
add
adc
icebp
add
fdivrp
jle
sahf
sub
(bad)
xor
movs
es
cwde
mov
jae
fdivr
inc
inc
popa
pop
mov
mov
or
push
xchg
sub
push
and
jg
xchg
lock
xchg
or
lock
or
xchg
fld
inc
pop
js
movs
(bad)
mov
mov
add
jle
mov
inc
sub
mov
mov
sbb
lods
xor
mov
mov
daa
push
ret
dec
out
cmp
pushf
adc
rcl
sub
sbb
cmp
data16
or
inc
div
iret
pop
sbb
ds
mov
test
imul
lock
fwait
adc
adc
or
xor
xchg
pop
sbb
adc
ret
popa
adc
ds
push
jbe
mov
fmul
jo
jmp
adc
jae
mov
add
or
popf
adc
ret
popf
pop
mov
jb
cwde
xchg
dec
mov
ficomp
retf
clc
pop
push
xor
pop
imul
xchg
dec
ins
scas
shl
rol
and
cmp
mov
icebp
push
xor
dec
mov
mov
ret
xchg
push
mov
ret
and
mov
xchg
add
aad
je
fwait
shl
mov
fs
jg
pop
fdivr
jmp
add
mov
and
ret
movs
add
push
rcr
(bad)
pop
xchg
imul
clc
xchg
push
xor
sub
(bad)
popa
inc
popa
xor
add
add
adc
cmp
and
dec
or
mov
sbb
dec
adc
test
xor
(bad)
xchg
lahf
inc
lock
daa
push
or
adc
retf
daa
mov
xor
add
movs
repnz
push
push
mov
jo
je
dec
add
jne
inc
inc
out
or
mov
movs
fmul
pop
sub
inc
je
inc
cmp
or
add
je
mov
mov
mov
mov
into
ds
add
aas
xchg
mov
xor
add
ret
sub
xor
xchg
xchg
xchg
add
add
add
xchg
adc
aam
retf
(bad)
dec
xlat
aam
mov
and
out
jnp
pop
xchg
ss
adc
push
sar
push
ret
nop
dec
scas
div
or
outs
jns
or
push
and
mov
sub
mov
addr16
lahf
push
adc
add
repz
jmp
int3
inc
cmp
pop
push
daa
nop
dec
cdq
mov
mov
cmp
dec
out
push
iret
jae
xchg
xor
es
jb
js
mov
jb
mov
and
popf
add
sti
cmps
inc
sbb
add
leave
add
pusha
and
mov
fimul
adc
cmp
pusha
add
add
inc
std
dec
push
sbb
dec
mov
xor
pop
add
in
cld
dec
jno
test
inc
movs
shr
mov
lods
popa
cld
add
sbb
adc
cmp
add
or
sub
add
jbe
sub
add
into
mov
inc
mov
or
inc
cmp
inc
sub
pop
les
jno
xchg
fadd
adc
and
jne
and
ja
in
push
add
jle
addr16
in
or
or
jge
js
push
mov
inc
jg
addr16
out
and
(bad)
jbe
jg
mov
add
sbb
or
push
jo
dec
mov
mov
rol
jmp
push
clc
mov
js
test
clc
add
arpl
cmp
adc
push
leave
inc
jnp
(bad)
inc
jne
inc
cmp
mov
and
jmp
es
or
add
je
or
rcl
jp
out
jecxz
mov
xor
xchg
cmp
mov
and
jge
sbb
add
mov
addr16
scas
mov
(bad)
mov
ror
sahf
or
mov
push
test
movs
and
ror
out
pusha
movs
inc
lods
gs
and
inc
and
sub
aas
add
repz
xchg
mov
mov
add
test
mov
push
dec
add
fbstp
add
arpl
mov
ja
inc
pop
shl
add
push
mov
push
(bad)
dec
ja
add
ins
xor
sbb
jnp
jle
fs
sub
mov
sbb
int3
daa
jmp
daa
mov
xor
dec
loop
cli
jmp
mov
adc
sbb
fsub
adc
or
aaa
inc
sbb
fist
and
push
inc
inc
adc
lods
xlat
loop
sub
movlps
stos
cmp
mov
pop
les
leave
mov
cmp
add
call
cwde
(bad)
out
pop
push
xchg
xchg
jb
add
xchg
jb
add
and
je
xor
mov
daa
out
inc
arpl
lea
or
and
pop
pop
(bad)
mov
dec
or
or
xchg
xchg
add
xchg
imul
ds
mov
imul
mov
fiadd
bound
xchg
adc
adc
lds
fidiv
cs
add
push
mov
daa
cmp
push
lods
sub
addr16
imul
es
pop
and
jmp
out
adc
mov
mov
push
jecxz
scas
xor
push
or
sbb
mov
imul
push
adc
movs
pop
or
adc
push
pop
and
(bad)
adc
rcr
fstp
or
sbb
push
adc
fstp
mov
sub
add
cld
jbe
xlat
inc
add
in
pop
push
or
push
imul
bnd
fild
mov
lods
or
dec
ret
add
cmp
adc
or
daa
mov
aaa
mov
pop
pop
or
cwde
or
std
fidivr
std
mov
sbb
xor
or
mov
pop
adc
sahf
xchg
in
aaa
in
xor
or
inc
pop
jecxz
add
daa
clc
cwde
pop
adc
sar
add
pop
mov
pop
dec
add
push
adc
lock
mov
ret
iret
inc
ret
in
test
fucom
mov
cmp
or
dec
sbb
cmps
hlt
sub
ins
xchg
test
das
ja
mov
adc
enter
inc
adc
mov
add
nop
push
add
inc
xor
inc
addr16
push
sbb
mov
push
leave
cwde
test
add
dec
add
add
jg
shl
add
jecxz
or
push
stos
dec
push
add
add
fsincos
into
je
pop
jmp
xor
or
xchg
sub
in
or
iret
jl
or
add
push
xchg
sbb
xor
add
adc
jmp
std
rol
adc
jmp
lea
(bad)
mov
push
adc
jle
adc
daa
cs
add
adc
adc
jmp
lock
ret
or
jg
mov
sbb
cwde
imul
push
xchg
les
xor
adc
adc
scas
xor
xor
xchg
dec
fs
jmp
mov
icebp
sub
push
xor
push
and
adc
cmp
ret
mov
inc
jo
pop
push
jbe
pop
cwde
or
mov
adc
or
cmp
or
inc
ja
fimul
xchg
lock
retf
and
idiv
ins
shr
lea
aaa
inc
push
aad
ins
fs
jb
or
pop
push
sbb
inc
lods
inc
push
adc
mov
add
movs
inc
jbe
in
ss
stos
(bad)
jl
or
or
sbb
test
xchg
push
cs
loopne
pop
mov
xchg
jl
mov
xchg
fisttp
sbb
and
mov
movs
out
(bad)
mov
shl
cs
pop
outs
bound
mov
gs
repz
push
sar
dec
cmp
or
pop
out
cli
fisttp
sbb
adc
test
movs
cmp
mov
or
mov
jg
iret
mov
test
cmp
pop
sub
int3
mov
imul
inc
push
fdiv
ja
pop
add
adc
loope
movs
in
stos
inc
ds
iret
loopne
repz
xchg
in
jmp
mov
jnp
jle
ss
add
sbb
jge
ficomp
paddsb
dec
clc
and
in
ins
push
mov
popa
push
out
jmp
aad
ret
dec
mov
or
rcr
nop
jo
inc
packuswb
push
push
xor
jmp
imul
int
je
and
ret
ret
pop
mov
ror
dec
adc
enter
and
shl
or
add
popf
xchg
xchg
(bad)
add
pop
push
adc
std
adc
out
pop
dec
cmps
inc
jno
fst
mov
call
fwait
shl
jle
add
mov
add
dec
es
arpl
or
jne
add
dec
pop
pop
cdq
nop
and
stc
and
or
or
or
sti
adc
adc
stc
add
fadd
sbb
test
adc
leave
pop
ins
cmp
jle
and
and
push
leave
aam
and
cld
add
inc
movs
es
fs
mov
in
pop
xor
mov
in
in
in
in
in
lahf
add
add
add
ins
cwde
(bad)
jo
adc
add
add
add
add
arpl
or
mov
and
inc
and
in
lds
pop
cmc
sbb
push
pop
mov
arpl
lods
xchg
adc
or
(bad)
mov
mov
and
jmp
or
sbb
je
mov
dec
xor
pop
les
add
add
cmp
pop
or
mov
or
xchg
loopne
pop
sbb
inc
jmp
repz
aaa
mov
dec
xchg
cmp
imul
pop
push
mov
or
mov
push
lock
sub
adc
add
push
cmp
dec
dec
ret
cmp
xchg
movs
rcr
adc
pusha
fistp
cld
jg
cli
cmps
adc
(bad)
test
add
cld
aaa
adc
dec
inc
xor
ret
ror
in
pop
mov
jl
or
mov
push
and
adc
lds
nop
adc
add
sbb
sbb
pop
adc
in
cmp
test
add
or
and
adc
jge
push
rcr
cli
dec
add
shr
add
jbe
inc
bound
lea
push
jg
add
push
loopne
xchg
cmp
fdiv
pop
and
sub
sbb
add
add
mov
cs
push
inc
jl
mov
jge
clc
loopne
xchg
adc
jne
mov
xor
xchg
sub
inc
cmp
push
lds
push
pushf
and
enter
retf
call
mov
cmp
cmp
cmp
ret
push
pop
push
sub
xadd
cmp
or
hlt
push
pop
push
jne
xchg
cmp
lahf
xchg
test
xor
sbb
lods
call
mov
jns
and
jl
adc
fist
fnstsw
dec
adc
cmp
jl
add
shl
(bad)
out
add
mov
enter
jl
push
xor
adc
(bad)
or
dec
mov
sbb
sbb
push
movs
add
inc
push
pop
jmp
cmp
ins
stos
lods
outs
dec
and
adc
or
lea
xor
inc
dec
movs
pop
clc
push
xchg
cmp
addr16
add
in
and
int3
sbb
push
icebp
test
aas
pop
rcr
push
lock
mov
leave
enter
or
inc
or
jg
in
adc
mov
xor
or
(bad)
add
add
cdq
nop
xchg
add
add
or
inc
sahf
sbb
add
movs
inc
mov
shl
inc
xor
or
dec
leave
movs
or
lock
enter
mov
pop
into
add
mov
adc
cmp
or
inc
xchg
dec
inc
xor
mov
inc
mov
idiv
cmps
sbb
cmp
cmp
repz
sub
nop
das
test
pusha
inc
xchg
out
jns
push
adc
fs
cdq
into
push
sbb
jle
dec
dec
sbb
sub
push
sub
adc
pop
pop
sub
adc
lds
and
in
test
mov
outs
sbb
dec
(bad)
inc
jnp
ror
sbb
test
pop
adc
or
daa
movs
sar
dec
sbb
sbb
and
or
shl
jle
or
or
xchg
sub
clc
mov
or
ror
mul
sahf
xchg
xor
pop
dec
jo
sbb
and
je
push
rol
mul
inc
sbb
sub
aam
cmp
dec
and
lea
and
dec
fadd
out
xor
or
sahf
and
nop
mov
ret
sbb
out
push
jmp
or
or
out
(bad)
xor
es
or
or
or
push
pop
xor
mov
xlat
cwde
push
sbb
mov
add
frstor
xchg
in
and
jno
mov
or
stos
ror
or
bound
add
rol
addr16
mov
dec
movs
dec
add
or
xchg
jmp
mov
movs
fbld
push
push
add
xor
or
push
push
add
xchg
push
add
jne
inc
inc
dec
mov
scas
call
adc
cli
ins
inc
dec
aas
jmp
add
mov
clc
sub
xor
xchg
(bad)
jp
aas
fucomi
or
xchg
cmp
push
sbb
jb
scas
js
dec
mov
fcmovne
dec
add
les
addr16
cmp
ror
call
sbb
pop
xor
mov
lock
push
xor
(bad)
and
inc
xchg
shl
push
js
sbb
cmps
dec
and
loop
cwde
xor
cmp
ret
cmp
pop
mov
xor
popf
or
sbb
lea
push
xchg
or
add
inc
xor
xchg
and
and
xchg
or
(bad)
dec
add
xor
retf
lock
dec
dec
add
add
xor
dec
les
push
lea
sar
push
dec
push
mov
mov
rcr
add
dec
add
pop
adc
test
xor
lea
popa
or
aad
sub
pushf
test
pop
add
inc
cli
(bad)
stc
pop
inc
rol
fisttp
clc
cdq
jl
jne
push
ins
xchg
or
clc
or
push
or
pusha
dec
test
or
mov
mul
scas
or
lahf
(bad)
loop
mov
inc
jecxz
inc
popa
sbb
enter
or
sbb
cmp
daa
aaa
push
add
jo
ins
or
sbb
inc
neg
jae
daa
or
adc
stc
outs
or
mov
in
cwde
stos
in
rcl
mov
pop
xor
dec
hlt
movs
adc
jae
dec
retf
out
lock
sub
loop
xchg
mov
dec
stos
and
mov
xchg
(bad)
jne
pop
(bad)
cld
cwde
xor
dec
add
jmp
inc
neg
push
xor
fcom
inc
enter
in
inc
loop
cmp
jle
fld
mov
lahf
cmp
dec
add
cmp
jp
das
add
mov
xor
inc
sub
mov
and
jbe
xor
retf
cdq
inc
repnz
cmp
outs
add
push
fimul
push
and
imul
dec
cmp
xchg
mov
mov
inc
fdiv
popf
cmp
or
cld
dec
sbb
fnstenv
add
pop
adc
or
push
ficom
add
jae
adc
sbb
or
push
xchg
mov
sub
pop
sub
push
mov
sbb
xchg
std
xchg
mov
push
xchg
(bad)
mov
adc
imul
and
call
popf
jle
push
fadd
push
push
fwait
(bad)
call
add
idiv
add
cmp
mov
push
cwde
push
aas
xchg
pop
mov
push
popf
(bad)
sbb
jecxz
mov
xor
jb
js
mov
and
push
jl
sahf
adc
jl
dec
pop
cmp
(bad)
mov
adc
bound
pusha
add
and
and
or
stos
sti
addr16
test
dec
sbb
push
stos
xchg
pop
fcom
push
imul
push
xchg
stos
adc
mov
mov
push
sahf
push
adc
cmp
jg
mov
dec
cmp
jbe
mov
and
pop
mov
sub
or
jg
lods
push
(bad)
out
add
dec
je
dec
mov
adc
push
adc
pusha
xchg
mov
nop
pop
add
inc
dec
adc
rcl
das
inc
inc
imul
sbb
retf
push
add
invd
and
in
add
adc
or
fimul
sub
or
xchg
sahf
jmp
hlt
xor
inc
js
jle
mov
arpl
or
push
push
inc
inc
push
inc
mov
inc
adc
pop
xor
xchg
or
loope
cwde
imul
jb
cmp
fisttp
jge
arpl
add
push
sbb
shl
push
or
fimul
and
rcr
and
fst
mov
add
dec
xchg
push
pop
and
fst
sub
shl
fcmovnu
retf
jmp
rol
les
mov
mov
xor
lahf
adc
out
aaa
out
inc
ret
mov
xchg
popa
lea
mov
scas
adc
stc
cmp
enter
push
mov
jo
xor
jo
call
push
ds
mov
or
cmp
cmp
and
cmp
lahf
retf
test
and
pop
jno
jmp
out
mov
xchg
aaa
ins
pushf
xor
sub
(bad)
repz
or
mov
cdq
mov
and
or
je
inc
movs
push
nop
sbb
sbb
mov
add
lea
es
mov
add
lods
inc
xor
mov
or
pop
push
test
int3
add
imul
and
and
sub
pop
xchg
ss
jae
dec
loope
cmps
mov
daa
adc
repz
(bad)
pop
jle
int3
adc
mov
nop
or
or
adc
and
xchg
shl
push
and
mov
ret
fs
(bad)
push
sbb
in
sbb
inc
or
test
push
mov
xchg
outs
inc
add
(bad)
lock
pop
in
or
(bad)
jle
mov
sub
dec
adc
adc
xor
jmp
pushf
cmc
loopne
mov
loopne
sbb
test
adc
jp
mov
inc
jmp
and
add
sbb
or
aad
inc
push
cmp
mov
inc
cmp
pushaw
push
inc
fdiv
jp
rol
mov
sahf
aam
lds
dec
jae
inc
add
sub
jp
or
xor
int
jns
mov
sbb
sub
std
sbb
push
int3
jecxz
pop
xor
add
popa
inc
call
and
sub
inc
lock
adc
inc
sub
stc
add
lock
mov
sub
or
in
add
adc
inc
xlat
xchg
(bad)
inc
cmp
xlat
clc
mov
cmp
sub
(bad)
mov
push
push
xor
pop
inc
ffree
pusha
rol
test
movs
dec
adc
or
(bad)
daa
mov
add
mov
push
xchg
push
cdq
out
add
imul
aas
mov
jp
aas
push
mov
jle
push
push
inc
loopne
inc
mov
shr
popf
mov
sbb
push
inc
xchg
mov
xor
add
and
sub
mov
xor
adc
pop
in
int3
movmskps
jg
adc
rcl
(bad)
jmp
sbb
inc
cmp
push
lea
loop
test
push
inc
jb
arpl
pusha
stos
in
jb
lock
inc
pop
jne
cmp
jno
and
pusha
std
lods
adc
mov
xchg
mov
lea
mov
adc
sar
loopne
sbb
addr16
in
xchg
pusha
mov
fdiv
inc
jl
xor
les
xchg
xor
fwait
mov
xchg
enter
dec
xor
data16
leave
and
enter
mov
pop
mov
fst
xchg
sbb
in
dec
cmps
xchg
adc
sar
adc
add
test
adc
fldenv
inc
sbb
pop
push
call
call
xchg
(bad)
push
cmps
sahf
and
out
inc
sahf
cmps
fchs
mov
mov
sbb
dec
or
dec
or
ins
sahf
jns
in
int
les
jle
ror
mov
ins
popf
sbb
fadd
ds
call
mov
in
sub
fcom
shr
in
inc
push
scas
not
out
jno
inc
mov
push
std
pop
sub
sub
mov
xchg
push
retf
iret
add
sti
xor
nop
test
and
xchg
add
cmp
loop
inc
movs
cmps
fsub
mov
je
jno
cmps
sbb
pop
jne
xchg
add
aas
xor
pop
aaa
mov
dec
cld
arpl
sbb
mov
(bad)
out
sbb
mov
or
cld
mov
and
cmp
jge
lods
ror
fiadd
xor
jae
inc
mov
and
push
mov
cld
or
imul
aam
scas
pop
not
pop
cwde
sbb
inc
xchg
or
movs
lods
in
sub
add
test
aas
sbb
cmp
sbb
push
sbb
xchg
mov
dec
add
cmp
pop
or
mov
adc
sbb
addr16
mov
push
adc
add
enter
dec
or
push
mov
fnstcw
cdq
ins
and
xchg
push
xor
pop
add
sbb
ficomp
cmps
and
es
mov
cdq
push
cwde
les
sbb
into
inc
and
or
mov
jne
inc
jecxz
push
out
hlt
lods
not
push
jle
sub
bound
cdq
clc
pop
mov
lock
(bad)
cmp
add
adc
clc
inc
mov
ds
sbb
call
or
ror
mov
daa
mov
or
ret
call
add
sbb
idiv
(bad)
call
shl
aaa
or
jl
cmp
ins
test
or
mov
push
int3
ror
addr16
push
jae
clc
cmp
sub
or
add
jno
cdq
call
das
es
(bad)
mov
imul
aas
in
fdiv
aam
push
adc
sbb
ret
sub
call
pusha
mov
or
movs
sub
dec
xor
pop
mov
je
aam
in
add
push
jle
out
jge
ins
pop
pop
sbb
call
inc
adc
mov
push
jge
mov
add
inc
inc
push
jl
inc
dec
jl
loopne
in
fcmovb
rcr
and
loopne
aam
add
adc
(bad)
add
jb
cmp
mov
int3
inc
shr
or
lock
jmp
sub
cmp
cli
jmp
cmp
push
xchg
jo
pop
add
xchg
mov
cmp
or
aas
xor
leave
inc
add
xor
pop
mov
cmp
adc
push
out
gs
dec
nop
outs
cs
or
inc
cmp
mov
call
mov
adc
adc
sbb
inc
inc
les
mov
icebp
add
sti
and
lahf
or
cmp
push
push
adc
lock
clc
jg
jae
dec
or
call
add
call
adc
add
jb
xchg
lock
ins
xlat
push
and
inc
sbb
or
or
ret
xor
out
rol
inc
or
dec
adc
push
cmp
lea
push
lock
adc
imul
into
jnp
and
pop
icebp
mov
adc
cs
adc
(bad)
(bad)
hlt
push
cs
je
aam
adc
ss
fidiv
adc
loop
mov
cs
add
pusha
mov
popa
add
mov
add
pop
xor
sbb
or
or
or
dec
mov
ret
push
adc
add
outs
test
sub
push
mov
mov
call
fwait
jge
jge
push
pop
loopne
and
push
xor
test
cmps
ret
mov
add
push
or
and
push
jp
push
pop
push
add
dec
sub
dec
dec
xchg
dec
pop
jmp
inc
adc
fcomp
push
fsub
std
cdq
imul
mov
dec
adc
in
adc
dec
or
adc
push
cmp
xor
into
rol
dec
sub
cmp
ret
adc
push
push
aam
dec
or
or
clc
out
inc
das
rol
outs
sbb
pushf
and
add
or
jb
xor
out
movs
fmul
rcl
sub
dec
ret
cmp
mov
add
call
add
in
add
fbstp
push
xor
xor
repz
mov
sub
jne
fdiv
and
in
repz
add
push
jmp
adc
enter
sbb
mov
fild
ja
mov
sub
push
add
jbe
imul
or
and
mov
add
fwait
and
stos
daa
out
cmp
inc
test
and
adc
xchg
dec
push
stc
fs
call
dec
test
add
das
or
adc
movs
sbb
jp
sbb
in
das
adc
mov
jmp
shr
rcr
dec
adc
sbb
jbe
dec
push
add
ds
and
xor
rcl
and
adc
and
inc
js
add
popf
xchg
(bad)
dec
enter
or
sbb
(bad)
int
sbb
cmp
add
xor
or
ret
dec
adc
push
mov
adc
xchg
sub
mov
ds
popf
fdiv
adc
or
movs
and
aam
test
call
rcr
cmps
retf
nop
ret
movs
cld
pop
xchg
cdq
inc
jge
test
push
cmp
or
addr16
mov
or
stos
mov
ret
jmp
cmp
push
add
idiv
dec
or
pop
push
fiadd
aad
outs
in
cmp
mov
fisttp
loopne
loope
add
dec
or
scas
add
and
cmp
jl
ret
inc
push
xchg
xchg
pushf
and
xchg
pop
sub
mov
movs
dec
(bad)
jb
jno
ins
and
retf
mov
outs
xor
pop
mov
fistp
sbb
fmul
fsub
mov
fdivr
inc
sbb
adc
ss
or
aas
dec
and
or
add
mov
(bad)
sti
jp
(bad)
pop
inc
adc
and
pop
cmp
jle
sbb
mov
aam
inc
xor
push
push
nop
add
popa
test
mov
leave
and
pop
cmp
mov
add
inc
or
mov
adc
xor
mov
cmp
add
sub
call
sub
dec
cwde
in
adc
enter
add
ja
aam
fs
ds
call
lock
test
jg
push
sbb
inc
ret
pusha
shl
xor
stos
and
sbb
adc
add
das
adc
mov
rol
inc
xchg
pop
enter
sbb
xchg
inc
call
adc
mov
fisub
sti
mov
sub
loopne
or
jnp
cs
fmul
enter
aam
enter
rcl
mov
mov
int3
dec
das
sub
repnz
enter
or
or
clc
cwde
cmp
popf
int
mov
call
sbb
retf
in
fs
test
push
and
pop
or
mov
pop
(bad)
inc
ret
adc
in
call
es
test
pop
mov
jg
add
xchg
mov
pusha
gs
enter
dec
pop
ffree
mov
sbb
cmp
scas
movs
in
add
sbb
add
sbb
cwde
stos
shl
sbb
sub
arpl
mov
xor
in
(bad)
jnp
or
add
fidivr
adc
pusha
mov
mov
xor
mov
call
leave
pavgb
clc
xor
adc
push
and
lea
xor
cmp
ins
dec
inc
test
ss
or
push
xor
mov
(bad)
dec
adc
jae
mov
jno
aam
cmp
imul
push
or
lahf
push
add
and
ss
xor
mov
and
push
mov
mov
push
pop
xchg
inc
rol
(bad)
adc
xchg
or
(bad)
push
and
pop
(bad)
fnstsw
mov
cmp
cs
mov
dec
adc
stc
jle
sbb
je
adc
or
sbb
jno
push
pop
rol
imul
(bad)
(bad)
imul
sub
cmp
mov
int
sub
or
mov
stos
mov
pop
inc
adc
sbb
xor
xchg
adc
pop
dec
adc
fcmovb
pop
pop
shr
add
jae
clc
cmp
inc
add
xor
nop
jge
mov
dec
push
in
imul
imul
popf
jg
ror
push
xchg
adc
outs
or
rcr
mov
lock
or
sbb
movsx
test
xchg
add
sub
sbb
mov
das
mov
(bad)
dec
inc
(bad)
ja
fsubr
jbe
lods
js
add
sar
jne
test
rol
test
or
cwde
jle
sub
fnstcw
push
popa
movs
sub
cmp
inc
inc
(bad)
fild
mov
sub
vmptrld
mov
int
mov
(bad)
sub
ret
adc
ins
cmp
jle
and
movs
and
pop
inc
and
cmp
jne
in
ror
inc
push
and
inc
sbb
or
scas
or
lea
and
mov
push
inc
mov
mov
jle
out
dec
adc
push
push
leave
lea
or
dec
dec
iret
mov
cmps
xchg
mov
xchg
repz
sbb
gs
dec
sub
push
sbb
neg
jmp
pop
xor
jmp
nop
iret
aam
jle
push
int3
lock
jbe
push
adc
icebp
fcmovnb
and
hlt
retf
iret
lock
mov
jg
sbb
mov
dec
push
test
pop
push
push
or
dec
pushf
dec
pop
dec
sub
or
push
scas
cwde
push
mov
ds
jl
stos
inc
adc
dec
jmp
mov
jnp
ret
cmp
pop
add
imul
sbb
loope
fadd
(bad)
sbb
xchg
cmp
outs
das
push
inc
jp
inc
add
dec
adc
neg
gs
loopne
not
adc
push
mov
inc
jmp
jb
pop
or
dec
jle
mov
adc
jae
out
sub
cmps
and
add
inc
sar
std
or
xor
sub
push
div
daa
jle
and
add
jns
int
sbb
add
add
inc
pop
sbb
cmp
cmp
jl
add
rcl
mov
dec
adc
retf
enter
jnp
inc
arpl
add
xor
ja
inc
jb
mov
cli
sahf
mov
or
in
fadd
pop
stos
mov
(bad)
rcl
cli
imul
cmp
ficomp
push
push
dec
sub
addr16
in
lods
adc
push
ins
aaa
jmp
dec
xor
(bad)
jnp
and
dec
add
or
xor
popa
je
lahf
push
mov
pop
stos
je
or
js
jo
xor
jl
or
outs
test
jmp
jge
neg
sbb
out
std
test
jne
mov
or
jle
jecxz
in
(bad)
imul
cmp
push
or
sbb
dec
xchg
and
xchg
aam
sbb
repnz
inc
or
pop
xchg
adc
aad
ins
xchg
add
call
or
std
loopne
xlat
jle
pop
jle
mov
loop
inc
ret
shl
mov
add
iret
jne
sahf
test
inc
fstp
xor
jge
push
xchg
and
xchg
data16
add
adc
inc
pop
out
jae
xchg
out
pop
in
je
(bad)
cmp
add
or
add
gs
jb
aaa
fwait
inc
nop
fild
xor
push
dec
or
add
mov
xlat
sub
xor
dec
mov
imul
mov
scas
les
sbb
lods
and
mov
adc
pop
sbb
inc
ins
(bad)
lock
stc
cmp
jl
push
jmp
or
enter
icebp
leave
fild
outs
call
and
xor
or
or
fld
mov
xchg
sti
es
xor
ins
enter
dec
inc
lahf
mov
inc
dec
icebp
ins
lods
adc
mov
aam
mov
sbb
jmp
jno
outs
aaa
pusha
test
adc
out
(bad)
(bad)
xor
add
add
lods
cmp
dec
cmp
dec
add
push
adc
jmp
mov
cmps
(bad)
adc
add
sub
lea
sub
stc
cmp
lea
or
adc
push
pop
pop
mov
xchg
add
or
ins
lea
sub
dec
int3
xchg
cmp
add
pop
sbb
(bad)
jmp
push
jge
and
jae
mov
add
sar
adc
push
aam
aas
sbb
nop
add
lea
pop
sbb
fistp
add
sti
mov
pop
or
dec
cmp
cmps
jne
test
(bad)
xchg
adc
cmp
idiv
and
(bad)
(bad)
lock
lock
xor
loope
xor
push
shr
arpl
nop
or
mov
add
outs
jns
xor
pusha
pop
pusha
add
push
or
test
jge
mov
dec
sbb
loopne
pushf
int3
jo
add
adc
mov
arpl
rcr
fld
fadd
fstp
push
(bad)
retf
shl
add
sbb
add
scas
imul
test
es
adc
mov
cmp
clc
adc
neg
fs
sbb
push
mov
cs
and
sub
and
sbb
aas
out
repz
sub
sub
or
ins
out
dec
xor
sub
pop
or
cmps
sbb
(bad)
adc
rcr
jne
cmp
push
sbb
lods
sub
jge
fld
icebp
inc
and
out
cmp
sub
and
cmp
in
sahf
sbb
push
inc
fs
cs
repz
jbe
pop
adc
fs
inc
adc
add
fs
test
inc
and
nop
fwait
shl
or
adc
stc
and
rcr
mov
sbb
inc
mov
pop
ror
xor
sbb
mov
call
inc
call
call
pusha
and
jmp
dec
inc
(bad)
(bad)
out
aas
adc
mov
cmps
aas
xlat
lock
sub
pop
pop
test
add
push
and
iret
movs
xchg
inc
xor
sbb
inc
in
sub
add
cmc
xchg
sub
test
out
inc
js
mov
xor
retf
add
xor
mov
jl
(bad)
mov
int
cmp
pop
sbb
pop
jae
pop
mov
outs
lods
xor
adc
pop
out
adc
aaa
and
sub
iret
jl
dec
xchg
repz
test
dec
cmp
mov
xor
sbb
inc
mov
icebp
xchg
in
loope
mov
loope
and
pop
adc
sar
inc
add
xor
or
or
push
inc
push
adc
and
add
and
add
dec
sub
sbb
or
or
stc
pop
sub
dec
pusha
aam
xlat
inc
js
mov
add
icebp
inc
mov
jl
enter
inc
sub
push
movsx
fbstp
imul
xchg
popf
repz
adc
inc
lock
dec
rol
dec
call
and
das
sti
in
(bad)
pushf
lods
(bad)
add
mov
les
lods
pop
xchg
int3
mov
cmp
ud0
adc
(bad)
leave
add
es
mov
jge
clc
aaa
adc
loopne
xor
or
imul
movs
or
sub
inc
inc
pop
add
jo
mov
sbb
mov
mov
sbb
pop
shl
xlat
test
add
dec
pop
cmps
sahf
adc
call
mov
int
adc
mov
add
comiss
sbb
cmp
sbb
ret
cmp
dec
push
shr
inc
enter
add
dec
mov
gs
movs
push
lods
push
jmp
inc
or
inc
mov
sahf
fisubr
xchg
dec
fstp
les
xchg
sbb
(bad)
fs
pusha
mov
imul
sbb
cmp
pop
inc
xor
xor
or
mov
aaa
inc
fdiv
cmc
mov
in
inc
jne
ja
or
adc
loop
inc
dec
addr16
aaa
add
movd
arpl
mov
popf
or
add
xchg
push
mov
sub
pop
jg
jp
(bad)
xor
xchg
jne
sbb
add
sbb
and
ret
adc
mov
push
xchg
adc
call
mov
mov
lds
cs
cs
mov
jb
arpl
adc
inc
in
xchg
sub
scas
das
call
pop
in
adc
sbb
mov
xor
mov
mov
adc
xor
or
pop
and
mov
scas
dec
or
or
xor
pop
push
jne
jmp
pop
push
add
lods
adc
popa
sbb
push
(bad)
and
sub
adc
inc
nop
lods
xor
inc
xchg
jp
lea
cmc
ss
cmp
shr
call
test
mov
and
ret
ins
popa
sbb
mov
fisttp
add
add
push
or
jae
mul
jge
or
inc
pusha
or
arpl
ret
icebp
jge
inc
and
xchg
jmp
xor
mov
lods
(bad)
and
or
pop
pusha
sub
xchg
add
add
xchg
jne
enter
dec
jo
call
add
sbb
fwait
jns
jns
sub
push
sbb
add
add
fist
cli
jbe
jp
cmp
inc
(bad)
inc
mov
lods
cmp
stos
cmps
add
jp
ja
nop
push
inc
mov
js
(bad)
repnz
xor
add
retf
sub
into
mov
and
mov
dec
pop
lahf
loop
out
(bad)
hlt
mov
mov
fiadd
and
mov
sti
sub
mov
add
cmp
or
test
add
cli
mov
inc
xor
sbb
pop
sbb
and
xor
movs
mov
out
hlt
rol
fwait
jo
data16
lea
sub
add
xchg
or
shr
push
adc
mov
xor
push
or
inc
mov
adc
mov
lods
daa
jmp
and
add
ins
shr
inc
ds
mov
mov
ins
iret
or
mov
stc
jl
dec
ret
(bad)
out
xor
in
out
retf
outs
mov
xor
cmp
jl
ret
je
mov
rol
push
imul
scas
mov
dec
pushf
js
test
mov
in
test
mul
xlat
cmp
jnp
jge
mov
cmp
rcl
test
xor
push
cmps
(bad)
xchg
xchg
xchg
clc
and
adc
daa
ins
push
inc
jne
or
sar
mov
jmp
mov
adc
push
stc
and
inc
inc
dec
jbe
scas
or
dec
dec
jbe
rol
sbb
pusha
jbe
dec
dec
dec
cmp
sbb
push
cmc
xchg
adc
xchg
push
scas
mov
inc
xor
sbb
inc
inc
mul
in
inc
movs
add
ss
aad
push
cwde
or
adc
cmp
shl
mov
or
adc
fs
or
adc
xchg
iret
imul
out
push
push
inc
sub
mov
xchg
dec
ret
push
mov
movs
movs
(bad)
mov
sub
dec
stos
pop
push
dec
xor
retf
dec
(bad)
mov
add
test
or
rcl
fisub
movlhps
adc
aaa
jl
jp
ds
and
out
xchg
add
data16
mov
lods
mov
outs
add
jge
push
sub
retf
sub
call
inc
test
fs
add
movs
mov
in
movs
jb
retf
dec
aam
xchg
add
push
fadd
fsub
xchg
and
enter
push
movs
xor
test
mov
lock
push
fdivr
clc
loop
mov
in
sbb
nop
xchg
or
shr
dec
mov
movs
add
test
or
out
fwait
push
push
outs
popa
push
jae
cwde
enter
je
dec
arpl
das
add
fwait
add
add
sub
jg
pop
add
and
push
push
(bad)
cwde
or
and
push
add
ins
pusha
mov
fstp
dec
ficom
jmp
push
dec
push
inc
aaa
cmp
fild
lea
pop
in
or
sub
outs
inc
add
fidiv
outs
push
cli
test
ja
mov
xchg
cmps
push
xchg
mov
enter
pop
int3
int3
dec
or
outs
pop
mov
push
push
inc
dec
sub
dec
mov
sub
push
and
enter
mov
add
movs
test
mov
rol
int3
pop
aas
daa
daa
rcl
push
add
lea
push
aas
xor
add
or
nop
and
mov
or
and
sub
mov
add
not
pushf
popa
push
mov
pop
mul
xor
inc
xlat
rol
clc
inc
add
fld
xchg
fsubr
jmp
push
cmc
icebp
and
xor
mov
addr16
sti
jg
mov
loope
add
mov
adc
(bad)
lahf
int3
push
cdq
sub
movs
dec
gs
popa
xor
test
and
comiss
lods
xchg
shl
or
xchg
out
inc
lds
pushf
mov
outs
sbb
jae
mov
dec
or
imul
movs
aam
xchg
xchg
and
cmp
ficom
ins
ins
shl
in
inc
xor
aaa
les
in
mov
xor
pushf
out
dec
aaa
rcl
mov
cmp
aam
dec
or
icebp
dec
test
neg
xchg
outs
sub
mov
cmp
call
or
and
mov
push
or
imul
mov
add
call
jg
add
adc
adc
or
das
pop
dec
jmp
jge
or
mov
dec
dec
psubusw
sbb
jecxz
dec
mov
add
push
xchg
pop
call
outs
lahf
mov
idiv
mov
sti
xor
jns
daa
add
ins
mov
cmp
sbb
sahf
or
pop
push
push
fcmovnbe
jbe
xor
inc
push
idiv
mov
or
jo
push
cmp
pop
mov
and
xchg
fldcw
mov
jg
sub
aas
jge
mov
fdivr
iret
mov
mov
dec
and
inc
and
add
adc
dec
rcl
shr
dec
cmp
pop
pop
out
or
movs
in
inc
sub
push
ret
ret
lea
add
test
mov
inc
movs
inc
push
jns
add
adc
mov
xchg
xchg
sub
ins
mov
test
dec
cmp
adc
jmp
or
dec
adc
inc
pop
rol
ds
pop
(bad)
or
lods
mov
push
jo
out
add
and
sub
add
sbb
dec
sbb
push
ins
jne
in
popa
pop
ds
push
inc
sub
xor
pop
dec
mov
jp
stos
js
dec
jmp
popw
rol
sub
pop
cmp
mov
pop
xor
jo
outs
enter
cmp
dec
pop
push
add
stos
pusha
repz
lods
cmp
and
js
push
cdq
stc
fcmovnbe
push
sar
jb
push
dec
rcl
aaa
sbb
adc
enter
inc
mov
jmp
sbb
cwde
mov
or
dec
push
dec
fmul
fs
mov
mov
jmp
push
sbb
dec
lods
nop
hlt
pop
les
adc
in
movs
sub
clc
in
or
cmp
pop
dec
and
fdiv
jo
and
sub
dec
(bad)
or
push
jae
movs
mov
pop
add
dec
jne
test
cmp
cmp
xor
inc
enter
mov
dec
mov
jmp
(bad)
in
xchg
pop
jecxz
push
mov
lock
jmp
dec
jl
test
das
pop
lock
sub
inc
sbb
jno
xor
adc
adc
in
test
clc
adc
loope
(bad)
xor
pop
js
out
(bad)
add
or
dec
loop
mov
or
jmp
loopne
pop
and
or
xchg
pop
mov
push
inc
mov
jmp
jg
data16
(bad)
add
pusha
add
adc
in
mov
sbb
sbb
in
jne
pop
hlt
or
and
and
mov
pop
retf
xchg
ins
aam
ins
(bad)
loop
adc
or
out
mov
mov
jmp
lea
repz
test
bound
add
idiv
test
push
jge
retf
retf
push
mov
or
sub
cmp
inc
push
adc
mov
sub
mov
jae
add
inc
stc
push
pusha
inc
mov
adc
mov
pusha
(bad)
hlt
xchg
lods
mov
dec
movs
dec
fsub
jb
test
sbb
xchg
lods
call
lock
ss
aad
rcr
int3
mov
and
int3
das
enter
add
out
in
push
mov
jmp
ror
adc
adc
cmp
push
shr
xor
push
pusha
push
ret
cld
int3
dec
ins
retf
or
test
xor
xlat
fs
cmp
lock
pop
fdivr
mov
dec
arpl
loopne
mov
clc
mov
ins
or
sub
dec
pop
mov
movs
jo
push
mov
dec
shr
ds
inc
hlt
mov
arpl
iret
mov
lods
pusha
pop
jo
or
dec
and
or
mov
ins
or
movs
ds
xor
mov
in
sar
arpl
add
inc
mov
shr
xor
add
cwde
jo
pop
repnz
inc
cwde
xchg
xchg
mov
lahf
jmp
leave
lock
shl
xor
nop
int3
mov
fisttp
imul
test
mov
pop
lock
sbb
cli
aas
bound
push
sub
push
sbb
int
(bad)
outs
xchg
pop
loopne
mov
mov
enter
xlat
xchg
mov
inc
jp
push
or
dec
call
arpl
or
call
test
cmps
fsubr
or
dec
add
loopne
ret
popf
int
mov
sub
imul
and
ret
enter
mov
scas
sbb
jae
mov
gs
hlt
sbb
push
and
jns
add
popf
mov
sbb
mov
cli
xor
outs
and
fist
push
repnz
lods
and
mul
push
rol
icebp
lahf
and
pusha
or
inc
add
data16
xchg
jbe
out
pusha
push
cmp
mov
add
test
test
mov
pop
add
cmp
jb
and
mov
dec
les
or
in
pop
or
or
adc
rol
push
xor
mov
and
jecxz
cs
mov
jnp
jo
inc
es
inc
dec
shr
add
adc
and
call
fiadd
jg
adc
xor
push
and
add
popa
pusha
adc
pop
xor
pop
xor
sub
stc
scas
push
das
pop
shl
add
xlat
scas
mov
xlat
sub
or
adc
mov
sub
jmp
xchg
and
mov
adc
sub
cmp
sub
jne
(bad)
jecxz
inc
enter
mov
gs
stos
jb
sbb
jae
bound
jle
push
jo
jb
or
xor
pop
stos
cmps
loop
pop
push
outs
(bad)
adc
inc
mov
jo
out
xchg
das
jae
jno
mov
(bad)
dec
push
addr16
sbb
push
imul
in
arpl
dec
aaa
xchg
or
popa
jo
iretw
mov
shl
fistp
push
sub
sbb
add
ins
xor
xchg
cmp
mov
or
lahf
xor
(bad)
fwait
div
dec
outs
lock
inc
and
pop
ss
retf
xor
inc
mov
inc
arpl
rcr
and
sub
dec
out
loopne
mov
pop
cli
pop
scas
mov
xchg
mov
push
(bad)
(bad)
(bad)
call
shl
ins
enter
push
push
out
in
jle
pop
lds
sub
push
in
xchg
dec
outs
dec
ret
out
sub
daa
mov
mov
cs
mov
enter
fmul
mov
int3
xor
and
adc
cmp
mov
pop
sub
scas
and
aaa
or
je
sti
adc
add
push
and
add
in
or
enter
enter
iret
sbb
adc
sbb
jnp
pop
in
inc
scas
mov
or
enter
or
sbb
das
jl
sbb
pop
ss
adc
addr16
aaa
push
enter
out
in
dec
sti
(bad)
mov
xchg
retf
mov
mov
in
test
sti
shr
out
(bad)
(bad)
out
test
pop
mul
mov
call
lea
add
mov
enter
dec
enter
xchg
sbb
rol
mov
cdq
mov
add
mov
add
mov
sbb
adc
xor
xor
fs
loopne
lods
cmp
cmp
sub
(bad)
fsubr
icebp
push
aaa
mov
test
and
cmp
int3
in
adc
sbb
enter
test
jb
and
hlt
sbb
adc
nop
inc
dec
ins
imul
adc
mov
jae
mov
ins
or
out
push
mul
es
test
xchg
dec
inc
imul
mov
ja
sub
pop
cmps
inc
pop
pop
pop
mov
push
sbb
inc
cwde
or
xor
and
ins
outs
js
xchg
pop
popf
test
sti
pop
adc
sbb
push
imul
and
loope
and
ror
repz
inc
pop
xor
dec
fs
mov
xchg
add
xor
dec
and
sbb
pop
fisubr
dec
daa
push
clc
and
push
jne
cwde
dec
popa
fld
fdivr
and
je
and
dec
cmp
inc
sub
xor
push
and
movs
add
xor
stc
mov
mov
pop
aam
add
sahf
hlt
pop
sbb
ins
mov
sbb
psubb
ins
xchg
mov
loopne
ins
rcr
call
push
adc
std
pusha
hlt
adc
dec
or
adc
pusha
(bad)
xchg
adc
stos
nop
mov
xor
sub
fwait
and
xor
stos
ins
xlat
adc
inc
inc
dec
sub
inc
xbegin
pop
pusha
loope
pusha
push
sbb
outs
(bad)
je
push
daa
imul
addr16
mov
xchg
xlat
or
pusha
xchg
into
cli
push
popf
and
cmps
cmp
adc
sub
mov
jmp
mov
dec
fs
in
or
sahf
or
jnp
and
xchg
adc
or
adc
aad
cmp
pop
or
add
add
xlat
test
(bad)
dec
mov
jae
dec
or
jmp
in
adc
mov
mov
mov
sub
hlt
lds
outs
dec
push
imul
add
sbb
mov
mov
mov
hlt
push
sbb
jbe
push
add
pop
and
bndldx
add
push
pop
or
fwait
imul
jo
dec
mov
adc
test
sbb
cmp
jo
cmp
test
dec
aad
(bad)
loopne
fsub
shl
sbb
fwait
jno
ret
xadd
cmc
mov
jb
sbb
push
mov
adc
test
es
mov
xchg
bound
pop
adc
or
es
inc
cwde
mov
mov
mov
push
inc
sar
inc
daa
or
inc
or
call
mov
xlat
or
push
test
(bad)
out
jg
push
mov
xchg
sar
out
sub
lahf
sub
inc
add
or
daa
sbb
or
pop
push
adc
mov
mov
push
and
xor
sbb
jmp
add
add
inc
mov
call
pushf
jae
cmp
xor
xor
pop
add
cmps
je
nop
cs
mov
cmp
push
adc
and
loop
cmp
push
push
in
sbb
cmps
jmp
jne
dec
lock
shl
sbb
and
adc
xchg
or
and
mov
pop
adc
sub
sbb
adc
sbb
ja
jbe
in
pop
add
sub
jns
ja
pusha
hlt
jbe
or
loopne
push
nop
mov
sub
in
aaa
mov
mov
push
enter
ja
mov
aam
jns
ins
mov
imul
push
es
pop
add
push
outs
je
xor
mov
cmps
inc
cmp
push
icebp
sub
xchg
sti
jle
bndstx
pop
push
add
sub
dec
scas
test
das
xor
loopne
push
cmps
push
fild
push
mov
out
sbb
push
mov
dec
sbb
jg
aaa
xchg
lock
cs
jbe
(bad)
push
daa
and
jmp
out
dec
cmp
int
push
push
es
outs
xor
ficom
bound
dec
sbb
pop
imul
fcom
fisttp
xchg
add
add
xor
(bad)
ds
or
nop
sub
inc
call
movs
in
push
ror
daa
(bad)
pop
ss
test
mov
adc
and
xchg
adc
jp
call
iret
push
loop
sub
dec
xchg
call
les
and
rcr
pop
xchg
or
cwde
jnp
enter
inc
add
jecxz
mov
mov
xor
(bad)
fidivr
jl
enter
jl
pusha
jl
in
arpl
je
add
jl
leave
test
cmp
adc
or
dec
and
(bad)
cmp
xlat
inc
add
cmps
xor
or
sbb
dec
mov
test
scas
pop
mov
xchg
pushf
shl
dec
add
cmp
daa
dec
pusha
push
mov
and
(bad)
fld
pop
(bad)
sbb
xchg
mov
dec
pop
fcomp
sub
and
jb
inc
add
adc
push
and
cld
lods
pop
pusha
(bad)
loopne
aaa
dec
nop
xlat
or
dec
mov
test
(bad)
push
mov
jae
inc
outs
jne
pop
jmp
nop
mov
js
cdq
or
or
ror
or
jg
fiadd
add
mov
loop
push
and
pop
js
gs
sbb
pop
and
aam
cwde
mov
dec
pushf
in
jmp
pop
hlt
in
inc
hlt
pop
push
push
sub
test
sub
imul
(bad)
push
or
dec
add
push
popa
push
push
sar
push
push
pop
loope
pop
push
imul
rol
bound
xchg
inc
in
shl
es
stos
mov
stos
push
jne
push
sbb
pop
adc
or
iret
imul
adc
mov
or
mov
mov
dec
jl
push
rcl
gs
cmps
xchg
xchg
mov
jno
dec
loopne
push
daa
in
dec
push
add
ins
popa
push
dec
push
shl
inc
cmp
mov
inc
jnp
mov
shl
adc
cmp
add
adc
daa
dec
movd
jo
or
popa
cld
add
jne
push
pop
pusha
cmp
test
push
in
in
pop
int3
or
or
enter
lea
fwait
js
test
repz
and
adc
adc
test
xor
shl
jns
inc
or
jnp
fadd
sub
xchg
sbb
add
and
and
dec
sub
mov
and
or
fwait
pop
adc
and
les
or
inc
loop
pop
cmps
push
mov
adc
repnz
jb
mov
mov
dec
fdiv
inc
(bad)
lea
(bad)
xor
pop
or
cwde
js
adc
sub
push
mov
inc
pusha
nop
inc
(bad)
pushf
sub
mov
jns
js
into
jle
push
pop
shl
scas
add
adc
xor
add
mov
jno
sbb
out
loopne
cmp
div
mov
sbb
aaa
lock
jg
sbb
xor
jns
mov
and
mov
or
jge
mov
xor
and
push
add
mov
into
adc
inc
(bad)
inc
cmp
mov
mov
adc
mov
inc
cld
push
jno
push
push
fiadd
shl
or
xchg
js
ret
pop
or
retf
and
fist
test
inc
dec
adc
repnz
pop
into
gs
loopne
or
pop
xor
sti
gs
and
and
aas
adc
mov
push
sub
pop
movs
imul
(bad)
jecxz
jae
les
xchg
xor
iret
adc
cmp
aam
jmp
es
ja
dec
in
cmp
addr16
push
xor
adc
rol
pop
ja
mov
dec
sbb
ror
adc
pop
sbb
add
mov
push
xlat
xor
outs
psubsw
test
mov
in
and
scas
mov
sub
jo
mov
push
aas
pop
or
mov
cmps
jmp
comiss
adc
sub
push
bound
sbb
push
jo
ja
mov
sbb
stos
xchg
mov
sub
pop
fld
call
push
ffree
imul
add
push
sbb
push
inc
ins
inc
add
push
outs
aaa
mov
dec
add
xchg
inc
das
xor
mov
loope
(bad)
add
aas
cvtdq2ps
mov
mov
push
xor
add
nop
fwait
ds
jo
mov
lds
lods
mov
nop
and
inc
lea
mov
inc
(bad)
pusha
pushf
loopne
xor
push
sar
push
mov
xchg
push
fmul
int
inc
imul
cmp
movs
push
sti
es
mov
test
icebp
mov
xchg
retf
dec
cmp
dec
push
test
int3
or
pushf
int3
int3
aam
pop
or
or
jne
retf
out
pop
aaa
in
and
xchg
pop
mov
push
call
les
nop
or
cmps
aam
mov
rcr
sar
nop
movs
or
xchg
sub
fcomp
inc
clc
mov
inc
mov
ss
lds
cwde
mov
sbb
and
call
mov
adc
jne
nop
inc
inc
sub
or
sbb
and
dec
jae
mov
loopne
sti
outs
lock
and
jmp
out
mov
clc
popa
faddp
in
jne
push
int3
das
adc
fwait
mov
or
push
jmp
daa
mov
out
pop
xor
mov
popa
pop
nop
fist
xor
test
xchg
scas
popf
jmp
push
movs
mov
dec
cmp
mov
and
aaa
push
cwde
aam
mov
pushf
pushf
mov
shl
lods
cwde
js
xchg
and
jae
xchg
mov
out
fdiv
clts
pop
add
aad
mov
pop
outs
hlt
sbb
std
test
and
push
push
test
or
mov
sub
adc
pop
ins
or
and
mov
pop
test
enter
dec
enter
xchg
dec
adc
jbe
outs
scas
jmp
sub
cmp
fsub
(bad)
dec
sar
daa
lock
es
adc
ret
or
fnstcw
sub
movs
push
mov
push
sar
sti
xchg
inc
outs
dec
pop
scas
mov
push
in
nop
nop
inc
cs
sti
jmp
push
int3
lds
mov
retf
aam
es
shr
mov
add
xlat
sbb
xor
jmp
adc
inc
ja
dec
and
sbb
jmp
mov
sbb
push
and
(bad)
and
or
push
test
pusha
and
outs
arpl
ja
or
adc
sub
scas
or
mov
lea
jmp
sub
fwait
mov
pop
daa
dec
in
sbb
jne
mov
and
add
sti
stos
data16
addr16
xchg
push
gs
loopne
jb
std
mov
in
not
bound
xor
or
sbb
mov
push
ss
rol
fdiv
pop
mov
outs
add
jge
daa
dec
ds
mov
mov
cli
loope
in
jle
out
add
lds
add
lahf
push
push
js
or
add
jo
in
add
sbb
dec
jmp
xlat
jl
imul
add
pop
lock
push
mov
jl
mov
mov
xchg
out
push
repz
push
bound
mov
inc
sbb
xchg
dec
or
cmc
xchg
dec
pop
adc
inc
add
movs
inc
nop
fstp
xor
pushf
scas
push
jmp
out
xchg
mov
xor
scas
sbb
movs
sub
lock
xchg
imul
cmp
cmp
outs
sbb
mov
jl
pop
clc
mov
or
call
sahf
xor
adc
dec
je
mov
enter
test
push
and
add
pop
lods
add
sub
test
mov
cs
aaa
(bad)
out
push
jmp
daa
nop
test
in
test
pop
fwait
pusha
ins
in
add
loopne
lock
pop
enter
fcom
adc
fsub
pop
inc
es
fdivr
je
std
mov
and
dec
loope
shl
cmp
ds
enter
pop
stc
xor
je
fs
scas
ins
mov
fst
mov
fisub
movs
sbb
add
mov
jb
das
fs
push
sti
inc
push
int3
xor
retf
enter
pusha
gs
pusha
mov
pop
xchg
and
rcl
fmul
in
cmp
ins
lahf
clc
movs
adc
mov
int
dec
loopne
shl
mov
push
sbb
jae
mov
leave
xchg
mov
dec
rol
cmp
push
sub
imul
mov
aas
nop
nop
dec
sub
addr16
mov
movs
mov
es
lods
mov
cmp
xchg
dec
rol
mov
in
jns
pop
bnd
imul
or
push
inc
add
push
in
bnd
movs
cmps
clc
sub
dec
pop
dec
bnd
jae
xor
push
cmps
mov
movs
es
xchg
dec
movs
xor
shl
dec
or
push
aas
and
and
mov
sub
xor
lock
in
enter
mov
or
pushf
cwde
mov
int
and
adc
mov
loop
pop
pop
pop
add
dec
jmp
or
call
mov
add
push
jmp
push
pop
and
xchg
call
popa
add
and
and
push
jo
sub
mov
dec
or
dec
fcomp
dec
dec
or
outs
js
pop
cmp
dec
sub
gs
pop
dec
jg
out
dec
in
mov
push
adc
test
popa
pop
and
xchg
sahf
and
xchg
stos
test
cmp
sub
lahf
sbb
rol
xchg
or
sub
and
and
(bad)
cli
fistp
xchg
xor
gs
xchg
mov
fdivr
data16
inc
mov
ja
aaa
std
xchg
test
push
fistp
out
push
iret
in
out
ror
in
enter
sbb
jae
loope
adc
arpl
data16
add
add
lds
adc
push
scas
add
mov
and
test
and
pop
add
sub
sbb
scas
jbe
push
aas
out
inc
sub
inc
xchg
das
mov
sub
mov
inc
sub
inc
pop
adc
dec
xor
ja
inc
and
aam
mov
into
das
pop
push
jnp
or
inc
addr16
and
pusha
ins
leave
push
sbb
aam
cmp
xlat
jne
inc
test
mov
mov
dec
mov
leave
adc
ja
mov
and
rol
(bad)
enter
(bad)
aam
enter
loopne
or
and
enter
or
test
cmps
push
dec
enter
rcl
pop
push
sub
out
or
bound
rcr
aaa
enter
test
or
add
das
mov
ret
xchg
mov
jge
aam
xor
pop
bt
dec
pusha
test
test
(bad)
call
fdiv
mov
enter
je
loopne
and
in
mov
push
lods
call
and
xchg
lock
jl
dec
and
fs
repnz
mov
scas
dec
sub
xchg
in
add
dec
dec
inc
pop
mov
jl
inc
add
push
add
pop
psubusw
adc
jne
movs
pop
loopne
inc
cmp
mov
in
jnp
in
pushf
in
jmp
lea
and
mov
clc
das
jae
mov
aad
mov
fadd
fs
les
aam
loopne
push
sbb
add
nop
int3
xor
pushf
call
inc
rcl
sub
cld
std
mov
sbb
nop
out
xchg
xor
add
xor
sbb
cwde
(bad)
in
cmp
aam
loopne
enter
and
sbb
add
fcom
scas
(bad)
mov
movs
es
or
add
outs
aas
jo
ja
add
xchg
jmp
sbb
mov
inc
and
add
sbb
dec
clc
inc
sbb
call
mov
int3
js
sti
jg
lock
outs
xchg
scas
loope
cld
outs
pop
arpl
(bad)
dec
jb
push
clc
scas
lock
cmp
inc
bound
addr16
jne
bound
ror
ds
ss
test
test
ret
mov
dec
add
int
scas
mov
jae
cmp
xchg
(bad)
daa
(bad)
das
repnz
clc
push
cmp
push
ja
fisttp
add
aas
pop
adc
enter
push
rep
jae
repnz
add
sub
ins
jg
push
pop
mov
add
push
push
push
sbb
pushf
add
push
jnp
adc
lods
sub
out
push
pop
mov
test
sub
jp
out
and
js
shl
loopne
call
out
pop
xor
les
sbb
test
ffree
xchg
pop
dec
push
mov
sar
mov
push
or
jo
movs
cmp
mov
in
fdivr
stos
aam
jnp
enter
mov
or
or
sar
sbb
cmp
shr
pushf
add
outs
adc
inc
test
push
in
rep
xchg
outs
pop
push
sbb
shl
or
ins
lods
push
movs
test
inc
rol
pop
nop
retf
fdivr
adc
xchg
sbb
jbe
pop
enter
mov
int3
inc
clc
arpl
add
das
pop
sbb
mov
repnz
sub
or
inc
fcmovbe
and
imul
lea
pop
je
or
js
cmp
popf
loopne
xor
fs
xor
sub
lea
ss
std
and
mov
push
stc
xor
add
pop
cmps
sbb
dec
jo
popa
add
adc
or
cmc
push
inc
push
push
nop
xchg
leave
or
in
add
enter
mov
rcl
xchg
retf
jge
pusha
mov
pusha
jmp
jnp
or
pop
addr16
call
add
adc
test
adc
adc
add
or
and
pop
sbb
movs
push
div
add
push
or
imul
js
sub
sbb
movs
adc
(bad)
mov
das
retf
mov
mov
jbe
ret
jb
(bad)
dec
cmovp
inc
pop
push
sbb
cmp
int
sbb
mov
xor
xchg
sub
dec
dec
inc
(bad)
xchg
jbe
add
mov
push
add
jmp
and
fs
mov
mov
sub
adc
xchg
and
and
das
lock
or
idiv
pop
adc
and
mov
push
out
nop
push
adc
outs
adc
add
(bad)
popa
das
(bad)
sub
aaa
sub
pop
jne
sub
shl
sub
arpl
xor
mov
push
inc
and
xor
sbb
xor
cmp
mov
push
aaa
sub
dec
inc
or
loop
scas
sub
femms
push
add
ins
xchg
xor
sti
popa
arpl
ss
mov
and
jo
pop
fs
and
add
mov
push
or
inc
pop
pop
mov
add
and
add
inc
push
dec
inc
push
pop
push
inc
inc
pop
push
push
dec
dec
push
repz
and
outs
arpl
and
sub
mov
pop
and
arpl
in
push
mov
and
dec
add
mov
pop
push
dec
or
cli
and
pop
inc
jnp
inc
fsub
sub
fdiv
and
xor
in
xchg
sbb
inc
movs
ror
push
and
dec
fsubr
cwde
loopne
push
sub
and
adc
inc
pop
punpckhbw
out
sbb
pop
cld
cmp
push
jl
dec
les
push
lods
sub
aad
and
ja
jbe
and
push
mov
inc
jg
push
push
mov
(bad)
pop
out
dec
push
jl
inc
iret
push
and
mov
fnstcw
and
daa
scas
imul
hlt
mov
outs
fisub
les
cmp
inc
jg
fwait
in
fdivr
loopne
pushf
imul
and
add
inc
pusha
pop
pop
sub
mov
xor
test
mov
fcomp
sub
or
neg
scas
stc
mov
push
cwde
push
clc
imul
pop
ror
xchg
sub
shr
pop
sti
jno
cmp
enter
idiv
sbb
dec
leave
sub
mov
cs
idiv
add
sub
sub
fild
(bad)
int
dec
sub
dec
dec
inc
fdivr
jecxz
mov
dec
ins
push
mov
inc
pop
pop
mov
xrelease
lock
out
dec
call
push
lods
jmp
adc
push
shl
enter
cs
shr
scas
aam
add
mov
pop
push
in
into
pop
shr
mov
repz
sbb
inc
add
inc
lods
pop
adc
xor
mov
aaa
cmp
push
push
sti
outs
iret
push
mov
cmps
int3
popf
fsub
push
loopne
scas
das
js
push
dec
adc
int3
das
inc
and
push
mov
dec
cwde
mov
cmpxchg
sub
mov
mov
je
mov
dec
mov
mov
sub
or
(bad)
sbb
shl
out
in
test
movs
je
xor
mov
fidiv
push
dec
sbb
in
adc
xor
ja
jnp
jg
push
fs
push
sti
pushf
mov
enter
push
stos
clc
cmp
inc
push
fs
cmps
jge
outs
mov
pushf
mov
or
push
and
dec
jo
xchg
mov
aaa
sub
fbld
and
xchg
cmp
enter
push
inc
(bad)
out
bound
pop
fild
daa
add
add
pop
xchg
pop
aas
fsub
outs
and
sub
and
pop
and
les
xchg
sub
(bad)
lods
and
ins
fistp
cwde
sahf
mov
inc
fnstcw
fwait
inc
scas
in
fisub
imul
fcomip
fcomip
push
jl
int
xchg
loopne
loope
loop
inc
jecxz
popf
in
rcr
jo
es
push
cmp
frstor
out
call
dec
ins
lahf
repz
js
adc
mov
in
(bad)
in
add
cmps
xchg
test
mov
mov
into
dec
jl
pop
sbb
(bad)
mov
aaa
inc
ret
repnz
movs
outs
mov
and
sub
xor
and
or
sbb
dec
sbb
pop
push
or
sbb
imul
inc
push
push
push
mov
pop
movaps
sahf
adc
or
lock
jnp
mov
ja
jnp
inc
ror
aaa
int
inc
mov
push
loopne
add
and
jmp
jle
ins
movs
push
cmp
aam
sbb
dec
add
cmp
ja
add
push
add
mov
adc
(bad)
pushf
mov
push
loop
mov
(bad)
xchg
inc
(bad)
mov
sub
aas
mov
cwde
(bad)
je
call
pop
mov
mov
stos
lods
mov
sahf
mov
scas
push
xor
cld
mov
mov
ficom
jno
mov
dec
sti
sub
(bad)
sbb
out
ja
movs
test
pushw
cwde
iret
pop
push
clc
mov
cmp
cmp
sub
push
mov
mov
fnsave
test
pusha
aad
push
pop
(bad)
dec
xlat
push
nop
cmp
cmps
stc
sbb
rol
or
sbb
call
call
jl
popf
pop
hlt
mov
fist
fild
cmc
cld
and
ss
pusha
add
fadd
ja
lahf
hlt
cmp
inc
push
push
enter
(bad)
das
hlt
inc
adc
lock
sub
aaa
mov
das
pusha
push
cmps
and
pop
push
loopne
jp
leave
pop
leave
inc
or
and
push
(bad)
das
mov
mov
xchg
inc
loop
pop
pop
and
bound
and
add
jmp
rol
push
adc
popa
push
push
or
aas
push
mov
mov
xchg
or
mov
dec
es
leave
fs
leave
or
add
inc
dec
out
mov
push
or
int
nop
lock
inc
aas
sahf
out
inc
push
clc
push
sbb
pusha
lods
adc
or
mov
xchg
shl
sahf
mov
rol
test
loopne
repz
add
push
push
fistp
ret
sar
pusha
(bad)
sahf
in
repz
cwde
(bad)
jle
enter
test
xlat
cwde
iret
pop
aam
xor
mov
mov
jns
pushf
sar
mov
ret
out
push
neg
(bad)
or
cli
mov
sti
dec
inc
loop
dec
add
push
int3
int
repz
add
add
or
or
and
outs
sahf
adc
sbb
inc
iret
in
add
inc
pushf
add
jle
push
les
(bad)
or
xor
adc
aaa
lahf
(bad)
push
mov
adc
fs
adc
cmp
adc
aas
adc
push
rol
ins
pop
ror
sub
push
or
out
push
rcr
or
cmp
ss
out
clc
sbb
nop
ror
dec
adc
addr16
jo
outs
loopne
dec
pop
sbb
push
ss
int
cmp
pop
hlt
and
dec
repz
mov
repz
add
dec
repz
sub
mov
mov
inc
ror
mov
xchg
seta
fwait
int
adc
adc
adc
push
jo
fcompp
fnstcw
ds
aam
invd
and
and
iret
rol
test
pusha
and
and
idiv
mov
push
mov
test
mov
sub
or
addr16
fwait
push
sub
sbb
inc
fnstcw
mov
in
add
es
dec
fistp
aaa
adc
push
je
ins
mov
mov
daa
jo
inc
inc
data16
inc
mov
into
test
inc
push
cmp
inc
mov
call
dec
jbe
dec
call
fs
dec
dec
call
movs
dec
outs
dec
mov
sahf
cmps
jge
addr16
xor
inc
mov
out
fidivr
jo
push
jl
fadd
cmp
adc
lods
inc
ss
inc
mov
mov
(bad)
mov
int
xchg
ins
je
nop
mov
ins
daa
sub
test
in
push
scas
mov
sbb
fidivr
or
nop
mov
mov
push
ror
fdivr
push
mov
mov
mov
sahf
cmps
jl
call
ret
lahf
out
into
les
mov
(bad)
fwait
in
repz
mov
leave
rcr
cmp
and
fdiv
sub
push
fsubr
(bad)
push
add
ja
clts
xor
xchg
clc
imul
int
pop
pushf
xor
test
sbb
and
xlat
setb
cli
jo
cmps
mov
cmps
mov
push
add
pop
pop
cmp
inc
add
hlt
dec
or
bound
outs
inc
adc
or
imul
cmp
push
lods
xchg
int
idiv
daa
lods
popf
push
fcomp
push
in
push
movs
dec
ja
push
push
aam
jge
sti
imul
ins
push
mov
push
mov
call
inc
jp
call
inc
test
xchg
pushf
loopne
xchg
int
dec
mov
mov
push
xchg
xchg
repz
or
or
push
clc
sar
xor
mov
pop
and
xchg
or
push
jg
adc
scas
adc
add
(bad)
xor
mov
mov
in
inc
dec
mov
pop
sbb
mov
div
movhps
fwait
inc
and
push
rol
pop
inc
test
cmovg
and
mov
xchg
scas
add
adc
adc
arpl
mov
nop
mov
jae
ss
adc
jno
outs
adc
arpl
shl
ss
xchg
icebp
repnz
dec
jae
xchg
and
fisub
test
mov
not
pop
adc
pop
dec
dec
pop
add
add
pop
adc
or
stc
xor
and
dec
dec
add
fidiv
inc
mov
cmp
ins
or
leave
pop
test
or
adc
jb
dec
xor
sbb
out
xchg
jo
jnp
or
dec
fmul
push
and
or
das
fiadd
or
loope
pop
dec
shl
shl
or
pop
mov
rcr
ja
inc
imul
and
sub
or
ficomp
mov
add
push
outs
jo
clc
or
xchg
pop
and
pop
add
gs
or
ficom
or
pop
sub
ins
cmp
(bad)
or
add
bound
push
add
popf
and
or
push
add
jae
lea
sub
fs
xor
push
xchg
pop
or
push
push
jb
dec
je
inc
xor
mov
add
ins
inc
jo
movs
and
cmc
in
(bad)
je
or
push
add
add
or
xor
in
aas
fist
jp
mov
mov
fs
push
pusha
ja
in
dec
mov
in
add
and
leave
imul
pop
mov
adc
cld
gs
stc
mov
mov
mov
xchg
mov
push
add
xchg
mov
adc
inc
mov
mov
jge
or
mov
cs
stc
fisttp
das
movs
(bad)
ret
ds
outs
add
pop
pop
and
pop
imul
in
pop
rcl
push
lods
mov
cmp
movs
jo
sub
jo
pop
ret
dec
fwait
push
mov
enter
mov
jo
inc
or
ret
inc
inc
jns
and
or
push
add
gs
and
inc
jns
mov
dec
enter
mov
ds
mov
mov
in
add
xor
(bad)
idiv
int3
pop
mov
sbb
lods
mov
xor
cs
xor
aaa
mov
xchg
inc
lock
in
xchg
repz
enter
repz
fild
xchg
xchg
inc
jle
mov
in
pop
rol
pop
mov
jl
adc
cmc
dec
les
push
out
test
jg
xor
inc
test
mov
jmp
sbb
movs
and
dec
cmp
cmp
pop
(bad)
movs
cld
nop
sub
cwde
int
xor
sbb
and
cmps
push
add
frndint
sub
push
js
adc
cmp
inc
repz
mov
in
out
test
aaa
mov
xchg
ret
sub
pushf
cmp
mov
daa
loopne
aad
add
and
sti
sahf
add
les
add
(bad)
pop
retf
sub
cmp
cmp
sahf
int3
sbb
arpl
pop
cmp
fstp
sub
inc
add
adc
push
add
xchg
daa
dec
or
add
repnz
pop
adc
adc
adc
xchg
daa
dec
sahf
push
or
or
or
sbb
push
mov
and
daa
dec
sahf
cmp
adc
adc
adc
repnz
xchg
adc
xor
dec
sahf
cmp
xor
xor
sbb
sbb
leave
xchg
daa
cmp
sahf
cmp
repnz
and
inc
ds
jl
xchg
push
cmp
in
or
mov
clc
inc
bound
or
sub
neg
(bad)
clc
fs
inc
dec
clc
clc
clc
nop
inc
push
sbb
clc
clc
inc
push
sbb
clc
push
sbb
clc
clc
clc
sbb
clc
clc
clc
fs
inc
push
clc
clc
clc
nop
inc
push
sbb
clc
clc
inc
push
sbb
clc
push
sbb
clc
clc
clc
sbb
clc
clc
clc
jns
in
adc
inc
das
inc
cmp
dec
sahf
cmp
cmp
ds
aas
dec
dec
jb
xchg
pop
push
push
clc
mov
jnp
push
hlt
xchg
pusha
add
daa
pop
jbe
hlt
sub
jnp
in
das
adc
push
aas
or
mov
fdivr
sbb
add
leave
adc
fnsetpm(287
push
cmp
aas
xchg
lock
pop
ja
daa
lods
mov
ds
push
pushf
les
in
fsubp
out
mov
clc
mov
pop
ins
add
outs
bound
ins
call
repz
adc
call
add
dec
mov
xor
(bad)
pop
add
call
dec
or
mov
mov
in
call
ror
jo
test
cs
pop
push
mov
scas
clc
push
fstp
mul
sbb
fld
push
dec
inc
mov
test
xchg
mov
out
data16
sbb
loopne
push
xor
pop
sar
mov
sahf
jle
pop
and
mov
add
retf
and
and
sub
sub
jge
icebp
sub
test
xlat
xor
mov
retf
pusha
mov
aas
mov
pop
daa
push
scas
ret
out
cwde
repz
loope
sub
retf
jo
xchg
add
bound
sub
aas
ret
rcr
xchg
xchg
or
dec
out
js
xor
sub
cmp
rol
pop
mov
cmp
sub
or
xchg
fist
repz
jl
repz
or
jbe
mov
mov
fsub
or
in
sti
div
mov
mov
cmp
mov
stc
call
mov
push
push
or
fadd
jg
push
sar
in
test
jnp
sub
ins
cmc
aaa
repz
jge
jb
aas
or
jo
add
xor
push
xor
movs
mov
mov
inc
cmp
repz
inc
mov
sub
int3
cwde
nop
inc
or
adc
loopne
shr
(bad)
scas
fdivrp
loopne
sub
xor
mov
add
xchg
out
cmp
adc
mov
adc
and
fcomi
in
jmp
pop
mov
out
cwde
retf
mov
arpl
mov
fisubr
jl
into
lds
push
and
scas
and
pop
push
das
mov
cmc
ss
pop
lock
(bad)
inc
sub
out
dec
xchg
mov
hlt
dec
adc
pop
test
jns
jo
mov
ret
(bad)
sub
fdivr
mov
int3
xchg
dec
jl
rcl
push
xor
fisub
shl
pop
sbb
imul
clc
dec
clc
dec
clc
or
add
or
jbe
jne
sub
pop
pusha
xchg
xor
inc
add
shl
sbb
jp
pop
call
jle
mov
dec
cmps
sub
add
shl
stos
cmc
out
mov
add
mov
movs
fs
push
lock
jle
dec
xor
cmps
sbb
xor
sar
repz
dec
push
icebp
adc
mov
dec
adc
aaa
add
mov
jge
sbb
cwde
mov
adc
mov
call
ins
jmp
cmp
jb
jb
sub
das
loope
and
call
inc
and
sbb
mov
shl
add
mov
jmp
xor
jbe
aaa
pop
add
(bad)
jg
push
mov
into
movs
cmp
jne
xchg
es
out
mov
add
or
add
out
and
xor
xchg
adc
sbb
and
and
aam
clc
inc
or
dec
fiadd
in
push
xor
and
cs
mov
jo
and
mov
cs
mov
mov
cs
shl
lock
inc
repnz
add
xchg
pop
and
and
pop
leave
inc
jb
pusha
xor
and
rcl
add
mov
pop
mov
in
loopne
and
xchg
mov
dec
and
and
mov
inc
jb
pusha
add
loopne
push
adc
repnz
enter
push
or
or
sar
push
clc
sub
cmps
fldcw
push
je
mov
(bad)
(bad)
inc
retf
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
jmp
nop
sar
dec
and
mov
lahf
or
or
dec
fidiv
and
popa
je
xor
adc
push
out
(bad)
jmp
mov
rol
(bad)
or
test
iret
repz
mov
cmp
repz
push
call
pop
cld
push
cmps
stc
cmp
adc
and
xor
inc
sbb
pop
jns
out
cs
jns
out
pop
nop
pop
pushf
sahf
(bad)
cmp
test
mov
sahf
(bad)
pop
adc
fdivr
in
aas
adc
mov
adc
sbb
dec
movs
sub
cmp
push
call
and
and
call
test
ins
imul
push
outs
daa
jo
jo
je
xor
ins
mov
and
js
sbb
xchg
js
js
fild
push
jl
jl
push
sub
fidivr
adc
jl
jl
jl
leave
or
jl
mov
adc
lahf
in
mov
add
push
push
adc
or
add
or
inc
(bad)
push
adc
add
(bad)
sti
jge
mov
sbb
sbb
(bad)
mov
(bad)
jle
adc
adc
std
sbb
mov
sbb
push
pop
jl
push
ss
add
adc
mov
das
call
push
stc
xor
cmps
sbb
pop
cdq
and
daa
test
pop
test
push
mov
or
aas
mov
mov
es
cmp
sub
int3
xchg
push
pushf
movs
lods
iret
repz
mov
(bad)
int3
aam
ds
repz
in
hlt
cld
add
jns
out
or
sbb
sub
jns
out
cmp
dec
push
sahf
out
sahf
pop
fs
je
test
out
mov
or
mov
add
add
jb
jb
fs
jl
jnp
jecxz
in
hlt
sub
shl
out
out
and
ss
int
in
cwde
int3
push
dec
cmp
mov
ss
out
icebp
(bad)
icebp
inc
jns
or
sysret
cmp
cmp
or
or
cmp
push
cmp
cmp
movups
adc
push
dec
cmp
(bad)
pusha
add
stc
sbb
daa
push
add
xor
cmp
out
pop
add
xor
cmps
add
not
daa
push
jle
or
popf
fidivr
or
adc
adc
pusha
add
dec
call
fst
and
mov
or
(bad)
scas
lea
push
add
add
add
aam
ds
cmps
add
push
add
cs
push
jmp
pop
pop
or
or
fbstp
add
add
or
or
or
or
xor
or
mov
int
push
call
pop
iret
repz
jl
mov
call
call
jp
out
movs
mov
out
out
add
add
pop
adc
push
cmp
ss
push
ins
add
and
and
(bad)
dec
inc
and
and
cmp
lahf
add
add
cs
mov
jbe
push
or
pop
lds
cmps
push
mov
add
fidiv
cmp
pushf
jge
add
mulps
inc
les
dec
aam
jle
repnz
xchg
adc
inc
mov
fimul
fdiv
or
cld
mov
jmp
nop
fs
jecxz
cli
jl
aas
jno
(bad)
(bad)
(bad)
inc
int
aaa
inc
pop
scas
scas
stos
movs
in
bound
dec
mov
mov
push
xor
cmp
jmp
(bad)
dec
sbb
mov
dec
jge
dec
pushf
sbb
aam
mov
push
jp
inc
mov
(bad)
inc
imul
lds
cmp
ret
(bad)
dec
dec
test
push
pop
ds
dec
jge
shl
push
hlt
or
loopne
push
adc
(bad)
pop
ds
jae
xchg
mov
imul
nop
arpl
mov
call
or
popa
outs
jae
jb
inc
jp
xchg
mov
dec
pop
inc
icebp
fs
imul
mov
aas
add
add
push
adc
scas
(bad)
mov
push
push
mov
push
and
retf
xchg
sar
loopne
cld
jg
aas
int
fistp
and
cmps
retf
inc
(bad)
sti
pusha
mov
jnp
add
pushf
push
add
or
call
cmovs
jns
out
push
sar
mov
outs
sbb
sahf
out
push
sbb
adc
sahf
or
adc
xor
fs
repz
mov
in
add
sahf
cmps
jne
and
dec
push
test
fistp
pushf
push
and
push
adc
add
and
inc
or
cmc
shl
push
add
jns
out
pusha
dec
mov
out
loopne
pop
sub
sub
jl
out
mov
sub
cmp
sar
into
repz
cwde
out
sar
arpl
sub
rcl
in
inc
outs
or
inc
and
sbb
push
pop
ins
jns
int
add
inc
adc
or
or
test
or
mov
add
push
add
adc
sbb
nop
pop
(bad)
adc
cmp
sbb
mov
imul
adc
pop
cli
cli
rep
je
push
fild
outs
(bad)
cmc
add
call
das
dec
psubb
add
aas
fild
cmc
sbb
cli
jmp
add
repz
add
inc
nop
clc
mov
loope
scas
call
fisttp
lahf
push
pop
jns
aad
push
in
add
fidivr
xchg
in
fisttp
and
push
lock
push
push
(bad)
cli
int
push
call
les
sbb
fisubr
jmp
mov
mov
iret
rcl
lods
add
mov
jle
stc
cmp
and
int
pop
add
jb
jl
push
paddb
lahf
lods
xlat
outs
mov
fcom
add
mov
sub
loope
imul
pusha
add
jp
mov
push
out
pop
movs
xchg
cmovne
(bad)
stc
out
loop
mov
and
dec
mov
add
push
sub
lahf
jg
test
add
jmp
mov
mov
out
call
aas
call
pop
push
mov
push
and
jmp
aaa
int
sbb
inc
in
out
nop
out
loopne
pop
aam
push
mov
ror
and
in
out
in
cld
jmp
out
mov
push
add
int
add
jl
mov
fdivr
data16
cdq
or
adc
into
cmp
jno
mov
out
lahf
jg
mov
add
out
fs
add
int
out
cmp
outs
(bad)
(bad)
jns
jg
mov
call
hlt
and
scas
and
cs
out
pop
push
loopne
mov
jae
jle
lods
fsub
(bad)
call
fs
in
scas
ja
add
dec
push
dec
and
ret
iret
mov
int3
add
xchg
data16
jmp
jmp
xlat
loope
jle
inc
imul
cwde
push
fidivr
stc
sbb
jo
(bad)
into
rol
hlt
pop
sahf
mov
mov
fld
jl
mov
fbstp
push
nop
int3
pop
add
in
jmp
(bad)
stc
xchg
add
add
cdq
xor
add
push
or
(bad)
fimul
adc
jo
stc
outs
push
xchg
mov
mov
(bad)
imul
jo
add
adc
add
(bad)
sbb
add
sub
fidiv
add
lahf
jg
mov
mov
mov
mov
ror
adc
mov
fiadd
xor
out
add
ja
cdq
add
idiv
add
lock
or
repz
inc
push
push
int
ins
jo
nop
ds
cmc
jnp
into
pusha
add
push
pop
lock
imul
(bad)
icebp
mov
cmp
iret
add
dec
dec
add
jmp
pushf
enter
scas
repnz
add
add
inc
sbb
out
adc
push
add
sbb
cmps
pop
or
test
pop
inc
wrmsr
jg
pusha
into
repz
push
jmp
jmp
test
mov
xchg
pushf
lods
sahf
out
sahf
mov
(bad)
int3
aam
sar
fsub
popa
inc
add
or
and
push
ins
mov
pushf
mov
fdiv
xchg
dec
sbb
pop
dec
nop
lahf
push
(bad)
or
test
or
movs
lods
cmp
inc
add
dec
add
push
movs
imul
out
add
xlat
dec
outs
ret
dec
add
add
daa
add
das
daa
or
cwde
loop
fwait
add
aaa
pop
or
nop
daa
test
push
movs
push
std
rcr
cli
clc
stc
sbb
cmp
repz
cmp
pusha
div
cmp
repz
hlt
les
loopne
add
sahf
and
inc
out
fs
jmp
in
pushf
in
(bad)
mov
jmp
jmp
mov
xchg
add
in
pusha
add
call
mov
push
pop
seta
mov
fisttp
mov
mov
push
mov
fadd
loope
imul
push
cvtps2pd
jmp
or
or
add
sahf
out
(bad)
mov
aas
push
mov
dec
repz
adc
xor
repz
repz
pusha
ins
or
mov
out
add
sub
movs
xchg
jbe
push
add
and
mov
jbe
outs
pop
adc
rcl
adc
mov
jmp
jo
ins
lahf
and
jae
jbe
or
xchg
mov
mov
ja
pop
add
sahf
cmps
cmp
jg
xchg
mov
mov
sti
cld
std
out
sahf
out
inc
add
sahf
out
sahf
add
xor
jns
ror
add
jo
ret
push
inc
or
iret
hlt
lods
shl
dec
scas
push
clc
sahf
mov
cmp
add
loope
inc
lds
inc
pop
cmp
lods
bound
adc
cmps
(bad)
outs
rcl
and
add
jns
out
std
push
stc
icebp
loope
repz
out
add
cld
clc
add
loopne
dec
shl
or
cmp
add
xor
jmp
aas
jmp
jo
dec
mov
jae
dec
mov
shr
(bad)
(bad)
(bad)
call
and
adc
das
out
pop
fbld
ins
pushf
pop
mov
outs
lahf
pop
or
cmp
add
(bad)
(bad)
(bad)
push
or
cmp
pop
(bad)
aaa
test
dec
mov
ja
call
(bad)
(bad)
(bad)
call
sub
sbb
daa
out
xlat
test
cwde
pop
movs
fs
push
stos
imul
add
xor
push
into
(bad)
(bad)
(bad)
(bad)
inc
shl
or
inc
mov
mov
jle
inc
mov
lea
jge
loop
shr
out
(bad)
(bad)
(bad)
call
fisub
loope
shr
bound
pop
mov
ins
popf
pop
or
cmp
push
(bad)
(bad)
(bad)
(bad)
push
test
cmp
add
dec
mov
jbe
dec
mov
jne
jmp
(bad)
call
(bad)
sub
sbb
and
push
pop
cmps
xchg
push
test
gs
push
push
lds
push
inc
dec
push
dec
xor
pop
and
fistp
push
jle
sbb
push
bound
mov
neg
data16
pop
push
sbb
push
and
mov
mov
outs
push
ss
and
sbb
or
mov
push
sbb
and
cmps
mov
ss
(bad)
(bad)
call
lock
out
popa
dec
mov
xor
aas
retf
xchg
scas
out
aas
stos
adc
shl
aas
cld
(bad)
inc
aas
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
adc
or
ds
lods
adc
cmp
add
repz
repz
xor
and
repz
sbb
iret
repz
sbb
sub
repz
repz
xor
and
repz
sbb
and
sub
cmp
xor
cmp
repz
iret
repz
xor
aaa
jo
repnz
aas
adc
or
sub
xor
or
dec
cmp
aaa
in
pop
mov
ds
cmp
mov
scas
push
xchg
fsubrp
jbe
aaa
and
addr16
in
in
and
inc
cs
push
jno
xor
outs
jae
cmp
jns
js
dec
pop
pop
pushf
cmp
bound
arpl
adc
pop
fld
das
daa
pop
aaa
adc
out
inc
aas
sbb
cmp
cmp
stos
or
add
add
popa
dec
mov
add
add
add
add
neg
add
add
add
int
(bad)
inc
adc
pop
and
xor
inc
mov
adc
xor
adc
dec
ret
sbb
sbb
sub
sar
call
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
ja
test
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
movs
movs
cmps
cmps
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
shl
(bad)
(bad)
call
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
push
add
test
gs
adc
adc
lahf
adc
push
int
mov
adc
or
xchg
mov
lock
add
and
adc
inc
sub
ror
gs
loope
dec
push
data16
ins
aad
(bad)
xor
mov
into
push
cld
aam
push
inc
dec
dec
xor
(bad)
xchg
sbb
les
popa
outs
iret
(bad)
mov
xor
mov
xor
int3
push
jmp
push
mov
xor
neg
or
dec
or
xchg
push
int3
dec
and
push
pop
push
les
ret
lods
push
mov
in
clc
out
xor
ficom
inc
pushf
out
sahf
mov
jl
dec
dec
mov
out
jnp
out
imul
jbe
ss
sbb
neg
sub
mov
push
xor
ds
xor
(bad)
xchg
orps
int
(bad)
mov
ds
int3
retf
popa
lock
retf
push
cmp
outs
js
loopne
push
mov
shl
dec
pop
hlt
cmp
call
cmp
sbb
cmp
movs
dec
sub
pop
outs
mov
out
je
push
jnp
div
push
xor
in
cs
mov
loopne
pop
(bad)
ss
add
dec
cmp
mov
or
das
scas
pop
mov
mov
ds
pop
adc
imul
mov
push
data16
neg
fcomp
inc
inc
xchg
lea
(bad)
dec
mov
shl
jl
das
push
or
push
iret
repz
xchg
cdq
inc
ret
lods
mov
iret
mov
enter
and
sub
into
out
pop
data16
sbb
xor
pushf
es
dec
mov
(bad)
sahf
les
or
scas
dec
dec
fidiv
sahf
or
ss
scas
hlt
jle
scas
scas
and
jnp
jns
xor
clc
push
adc
lods
(bad)
hlt
cs
out
pusha
push
push
in
adc
out
push
xchg
call
fs
ds
lock
out
cs
xlat
inc
mov
push
aam
dec
sar
xor
int
je
mov
mov
mov
or
fidiv
in
test
mov
loope
call
sub
jl
sub
push
xor
cs
inc
inc
fs
inc
push
add
ret
mov
aas
and
je
push
mov
fdivr
push
pop
pop
xor
idiv
outs
pop
dec
cmp
(bad)
shl
push
fdivr
push
(bad)
pop
pop
into
cld
dec
or
xchg
ret
lods
outs
inc
jbe
aaa
ds
in
inc
jg
outs
pushf
mov
mov
imul
dec
enter
imul
sar
add
inc
data16
inc
dec
das
mov
xchg
pop
push
mov
aaa
sbb
js
xchg
(bad)
ins
cmp
pop
push
cmps
das
xchg
cmps
out
add
data16
es
retf
sub
xchg
scas
mov
in
(bad)
aas
lock
test
jbe
movs
or
popa
hlt
jbe
idiv
hlt
mov
dec
pop
push
outs
sbb
cmp
inc
pop
ins
pop
(bad)
cmp
in
jmp
test
mov
es
aam
push
jbe
test
mov
push
sub
lea
push
mov
into
aas
mov
sub
adc
add
nop
inc
add
add
mov
mov
dec
mov
add
push
cmp
je
add
add
repz
mov
add
test
jns
xchg
jbe
adc
xchg
sahf
out
mov
pushf
jns
test
pop
mov
xchg
out
jl
ret
inc
add
adc
and
push
int
xor
pop
inc
xchg
mov
(bad)
(bad)
jmp
fiadd
adc
into
push
adc
jbe
cmps
jmp
inc
or
jb
xor
inc
pop
sub
add
ins
add
outs
imul
shl
sub
xor
xchg
sub
pop
ss
and
jns
outs
adc
sbb
adc
out
dec
test
js
and
rcr
int
addr16
pop
stos
adc
push
jae
inc
mov
mov
and
mov
cmps
inc
icebp
mov
inc
push
push
(bad)
std
shl
dec
cmp
dec
jae
push
push
add
popa
jmp
(bad)
sbb
mov
inc
add
inc
mov
add
test
add
push
dec
inc
pop
add
cwde
(bad)
and
or
test
pop
out
add
adc
cmp
mov
push
and
adc
sti
and
inc
push
xchg
enter
nop
inc
add
inc
push
add
add
popa
bound
sub
inc
xor
daa
add
pop
add
mov
dec
mov
les
pop
pop
pop
dec
inc
adc
pop
cmp
ds
cs
push
or
sbb
mov
dec
stos
inc
jle
bound
push
jae
or
or
push
and
pop
push
sub
push
inc
aad
dec
sahf
or
mov
mov
or
mov
int
mov
push
push
push
shl
mov
ins
xor
or
and
and
outs
and
popa
loope
or
sbb
xor
add
aaa
std
push
or
or
xor
push
xchg
add
mov
add
add
not
adc
or
pusha
adc
add
mov
and
rol
fisubr
ins
and
or
adc
les
push
scas
les
shr
dec
jle
adc
or
or
cmp
push
pop
xor
and
add
jns
mov
loopne
jg
test
jmp
add
jae
push
mov
dec
sub
dec
pusha
shr
jmp
xor
xor
iret
and
sbb
xchg
jmp
(bad)
mov
test
add
out
mov
or
and
sbb
add
enter
fnop
pop
enter
(bad)
leave
(bad)
inc
(bad)
push
inc
xor
inc
pop
push
or
(bad)
jg
dec
add
push
jnp
pop
(bad)
(bad)
jg
test
ins
(bad)
ins
add
out
(bad)
jge
aaa
mov
fild
cmps
sbb
in
push
mov
pushf
call
cs
out
sti
inc
imul
(bad)
call
pop
xchg
jb
pop
pop
xor
mov
(bad)
(bad)
inc
push
sub
add
in
add
add
adc
dec
(bad)
jle
stc
aas
cmp
push
push
or
jns
xchg
ret
inc
add
data16
test
sti
mul
add
sar
xchg
cli
pop
inc
ret
xchg
sar
add
jbe
jns
inc
mov
add
or
fistp
push
(bad)
inc
push
(bad)
mov
int3
sbb
ret
in
or
add
push
push
(bad)
xchg
jg
(bad)
(bad)
(bad)
jmp
add
add
cmp
xchg
add
dec
cmp
inc
dec
outs
cmp
ret
rol
inc
je
push
jae
push
js
or
or
daa
cwde
or
test
xor
daa
popa
push
lods
call
xchg
push
ins
xchg
popa
dec
(bad)
mov
mov
(bad)
ins
sti
mov
ins
call
daa
in
mov
jg
(bad)
(bad)
(bad)
aas
add
adc
push
inc
mov
std
leave
xchg
or
adc
add
ds
scas
add
(bad)
(bad)
mov
xor
inc
add
int3
add
push
xor
inc
pop
add
xor
add
push
push
outs
inc
mov
jb
sub
cld
(bad)
dec
inc
(bad)
or
push
sbb
xchg
lahf
loopne
xor
add
mov
fbld
push
push
popa
jo
pushf
adc
dec
repz
sbb
call
mov
pop
nop
and
mov
and
pop
add
pop
lock
les
std
stos
scas
pop
jp
add
jmp
rcl
out
pop
push
fcom
push
jbe
fs
in
pop
mov
cli
push
xor
in
jge
into
fcomi
jbe
(bad)
(bad)
(bad)
jmp
or
das
add
call
and
sub
int
cmp
cmp
pusha
fs
cmp
(bad)
(bad)
cmp
push
jbe
lock
hlt
dec
inc
outs
push
push
push
inc
cmp
js
pushf
fmul
jmp
mov
push
mov
dec
dec
outs
mov
out
or
leave
jnp
push
aas
push
lods
fimul
test
inc
sar
(bad)
push
outs
test
std
stc
or
cli
pop
sti
cwde
xlat
inc
out
cld
sar
ja
push
movntq
cmp
jg
fsub
pop
mov
cmc
ds
inc
int3
fsub
popa
lahf
nop
icebp
mov
pop
mov
(bad)
jmp
pop
cdq
(bad)
out
add
inc
ds
push
test
stos
mov
adc
int
imul
rol
jnp
enter
mov
in
jne
xor
sub
jg
sub
jle
cmp
push
add
pusha
in
retf
fcomip
xor
dec
popa
mov
xlat
mov
add
cmp
or
mov
cld
jmp
sar
jno
lock
sub
(bad)
(bad)
jmp
imul
outs
ret
or
pop
in
in
sub
sub
and
push
cmp
pop
icebp
add
test
and
push
ins
mov
(bad)
(bad)
jmp
jae
jle
inc
sub
dec
ja
ja
inc
sbb
mov
jbe
mov
and
jne
fs
xor
arpl
mov
pop
sbb
inc
aas
add
out
in
add
dec
inc
sti
dec
cld
or
imul
sar
push
jo
lds
inc
jae
cs
mov
rcr
das
pusha
push
adc
and
xchg
xchg
out
fs
mov
cld
(bad)
jbe
shr
pusha
(bad)
mov
fcmovu
xchg
jp
inc
inc
scas
mov
xor
lods
out
popa
dec
or
aas
or
sbb
pop
adc
jp
mov
(bad)
(bad)
jmp
sbb
add
add
push
sub
dec
mov
push
mov
mov
push
or
jg
outs
mov
icebp
ja
push
cmp
cmp
stos
cli
(bad)
aas
ret
test
mov
loopne
add
aaa
or
jmp
lahf
xchg
retf
ret
sub
jo
ss
pop
adc
cwde
inc
xor
ins
loop
(bad)
call
les
das
popa
pusha
adc
sub
ins
call
pop
test
ret
rcr
pop
dec
nop
push
fmul
jg
push
dec
jno
pop
push
(bad)
enter
pusha
adc
jb
sub
addr16
xor
out
aaa
add
call
clc
pusha
aaa
push
or
rep
jns
lods
xor
(bad)
bound
pop
jmp
jb
(bad)
mov
or
xchg
cmps
ret
add
(bad)
mov
mov
mov
dec
mov
sbb
dec
add
(bad)
aam
(bad)
call
inc
pop
add
mov
int3
mov
call
inc
out
stc
jmp
add
xchg
outs
daa
out
push
mov
aas
es
(bad)
(bad)
dec
mov
aas
sar
xchg
aaa
inc
push
and
mov
push
loopne
mov
icebp
and
sbb
(bad)
(bad)
dec
inc
push
or
xor
leave
add
sti
icebp
push
add
cli
xor
loope
fisttp
(bad)
(bad)
call
pusha
and
mov
xchg
sub
loopne
je
pop
inc
gs
push
push
xchg
and
and
mov
adc
push
cmp
xor
push
inc
inc
fs
jb
cmp
sub
scas
fisttp
lahf
(bad)
adc
out
cli
dec
push
and
push
cmp
sbb
ret
sub
and
push
push
push
fisubr
jecxz
stos
mov
sub
push
add
jg
push
adc
and
adc
adc
or
sub
pop
test
stc
sbb
push
push
sbb
scas
xchg
push
or
or
sbb
sub
or
adc
aaa
or
xor
or
or
(bad)
(bad)
mov
imul
clc
add
pop
ja
daa
sbb
push
or
dec
adc
dec
adc
push
test
or
(bad)
call
cmp
sub
sub
xor
dec
adc
cs
push
push
jno
add
ja
xchg
mov
dec
fist
and
(bad)
(bad)
inc
jno
or
mov
enter
sub
sub
or
push
inc
cwde
retf
and
dec
test
lahf
dec
and
xor
jne
out
pop
es
sub
pop
inc
inc
daa
fs
mov
fld
imul
pop
(bad)
(bad)
call
cwde
shl
clc
cdq
sub
adc
pop
xchg
pop
jg
xchg
lods
loopne
or
jle
addr16
sub
(bad)
sbb
mov
pop
pop
dec
add
xchg
sahf
xchg
fld
add
ss
push
sub
fbld
(bad)
(bad)
inc
push
dec
movs
xchg
cld
xchg
call
push
inc
aam
or
call
lahf
jmp
mov
jmp
addr16
sub
xchg
push
adc
lods
mov
call
mov
cmp
call
jns
jge
mov
push
push
mov
call
pop
adc
(bad)
(bad)
(bad)
dec
fs
cwde
adc
fwait
je
test
adc
xlat
gs
clc
adc
loop
(bad)
(bad)
(bad)
cmp
or
das
or
mov
sub
das
adc
ins
rol
dec
or
xor
das
ret
or
(bad)
(bad)
push
xchg
inc
sbb
push
sub
push
pop
dec
sti
adc
push
or
(bad)
(bad)
out
pop
jge
mov
fisttp
aam
xor
imul
into
mov
push
xchg
pop
xor
or
dec
test
cmp
jl
js
cmp
jo
push
cmp
enter
lahf
mov
pop
push
push
les
cmovs
dec
cmp
cld
std
out
sub
fsubr
sub
sbb
pushf
sbb
aas
cs
cmp
pop
(bad)
cmp
lfs
or
mov
mov
psubb
icebp
mov
pushf
lock
mov
mov
push
jb
adc
inc
mov
ret
fcmovne
idiv
inc
mov
ja
call
fwait
in
add
rcl
(bad)
mov
mov
mov
xchg
dec
ins
(bad)
mov
mov
jmp
cmp
mov
test
xor
inc
xor
das
and
lock
out
cmp
push
je
popa
inc
push
(bad)
inc
into
cli
mov
jo
gs
mov
(bad)
es
enter
call
jmp
xchg
jo
mov
jge
test
jae
or
(bad)
(bad)
(bad)
fdiv
arpl
lahf
add
pop
mov
xor
sahf
cmp
dec
leave
sub
in
(bad)
(bad)
call
pop
outs
and
test
xor
pop
scas
xor
or
mov
push
test
mov
fstp
cmp
and
sub
mov
sar
les
outs
in
push
daa
and
sub
std
call
or
inc
call
shl
adc
add
ja
or
(bad)
cs
(bad)
mov
(bad)
in
fistp
sbb
sub
aas
inc
and
pusha
int
sub
jp
nop
inc
into
lock
clc
xor
dec
dec
sub
push
jp
rcr
cmp
pop
in
pop
cmp
ror
into
sub
(bad)
(bad)
aas
dec
cmps
das
jl
ins
add
jl
push
cmp
ins
(bad)
ss
dec
inc
xor
cli
dec
pop
mov
mov
mov
(bad)
xchg
fs
out
push
or
add
rcr
fistp
jp
jmp
fdivr
jmp
leave
sub
cmp
pop
mov
and
push
mov
inc
cld
mov
dec
cli
retf
adc
call
icebp
cwde
test
adc
les
(bad)
fnstcw
loopne
(bad)
sbb
(bad)
jg
ret
aad
ret
cmp
adc
test
fist
cmp
adc
xor
inc
out
sbb
loopne
cmp
dec
pop
mov
sti
sbb
pop
sbb
xor
jp
mov
pusha
fcomip
(bad)
mov
push
lods
jne
add
add
push
and
test
neg
(bad)
mov
fbld
sub
sbb
dec
lock
push
lods
mov
loop
mov
sar
pop
mov
call
and
cmp
sub
mov
aad
mov
call
or
sub
sbb
retf
pop
mov
or
nop
cmp
(bad)
push
rcr
call
test
dec
xchg
pop
or
aam
sbb
mov
xor
jle
inc
jle
inc
mov
mov
neg
dec
cld
xchg
sbb
(bad)
mov
sar
adc
mov
pushf
sbb
mov
(bad)
mov
pop
mov
test
mov
or
out
fild
cld
out
in
mov
jle
fistp
pop
mov
or
(bad)
out
(bad)
dec
xchg
loop
jns
xor
jae
shl
call
retf
mov
inc
(bad)
out
add
leave
lods
add
jne
push
cmps
and
cmp
(bad)
aas
sbb
mov
jecxz
and
fisubr
and
adc
sub
dec
add
call
cmps
xchg
sub
pusha
cmp
and
jmp
fiadd
jle
mov
ds
bound
cmp
jmp
lock
cs
gs
clc
sar
in
cmp
cmps
mov
add
vmovdqu
cld
mov
stos
inc
push
cmp
ja
repz
(bad)
(bad)
aas
jle
aas
dec
and
cmp
cmp
lods
and
jo
iret
lea
sub
pop
aam
xor
push
mov
xor
dec
inc
jmp
jle
cmp
or
push
sbb
(bad)
out
xor
lods
rol
iret
xchg
mov
psrlq
adc
adc
or
retf
cmps
js
(bad)
(bad)
call
dec
(bad)
and
mov
jle
mov
add
and
daa
fs
(bad)
cmp
fucomp
mov
(bad)
loopne
inc
test
hlt
neg
(bad)
push
or
or
sbb
xor
jg
(bad)
stos
add
mov
fisub
sub
ret
dec
test
add
(bad)
mov
sbb
or
dec
jo
cmp
call
pop
adc
add
mov
lods
pusha
and
and
cwde
scas
cmp
pause
jns
clc
inc
cmc
fsub
call
jmp
cmp
cli
(bad)
jmp
cmp
dec
sti
push
sbb
sub
mov
or
repnz
or
test
call
and
cld
call
add
cli
(bad)
push
push
test
add
cmp
sar
movs
ret
push
fcomip
jg
inc
fcmovne
add
mov
loop
ins
movs
add
pusha
sbb
jg
mov
dec
sar
cli
inc
push
sbb
das
cmp
jb
scas
rol
es
inc
iret
enter
jg
mov
jmp
ds
sbb
mov
push
rcl
call
mov
(bad)
mov
fwait
aaa
cwde
xchg
das
xchg
mov
enter
mov
adc
loope
mov
addr16
fild
(bad)
mov
push
sub
inc
pop
fidivr
lea
ja
clc
fadd
ret
loope
cmp
sbb
cli
mov
cmps
pop
fcom
and
dec
loope
shl
out
pusha
sbb
mov
cmp
sub
rcr
cwde
xchg
xor
fadd
dec
adc
loopne
push
xor
mov
shl
cmc
lock
inc
rcl
dec
mov
or
adc
inc
cmp
adc
(bad)
(bad)
(bad)
dec
cmp
cmp
test
push
pop
or
xor
setno
jbe
fs
div
neg
popa
scas
call
pop
inc
inc
push
xchg
push
adc
adc
xor
jg
rol
lds
mov
(bad)
call
fldenv
jmp
inc
inc
xor
ret
pop
data16
xchg
dec
push
call
pop
mov
mov
daa
cmps
ficom
push
fiadd
add
jmp
cmp
jne
sub
push
and
(bad)
(bad)
cmp
iret
push
xor
add
add
popf
imul
push
cmp
mov
ins
cld
in
or
aam
jl
sub
call
dec
inc
(bad)
cld
adc
out
loop
fmul
jne
(bad)
(bad)
(bad)
mov
test
jne
or
add
ret
in
call
mov
(bad)
push
imul
push
inc
adc
and
lock
(bad)
(bad)
call
push
jp
retf
cmp
pop
dec
clc
sahf
into
in
fsubr
into
sub
adc
push
in
mov
lahf
jge
ret
stos
fchs
(bad)
(bad)
jg
jo
mov
sahf
movs
mov
mov
sub
sbb
mov
sbb
out
push
movs
in
or
in
in
mov
in
repz
es
sub
jb
cmp
call
add
or
fiadd
test
imul
sbb
clc
(bad)
jg
jns
and
repz
push
sub
mov
test
(bad)
(bad)
out
lods
sbb
clc
xor
jl
jle
retf
mov
add
push
stos
(bad)
rcl
xlat
movs
cmp
imul
dec
xchg
pop
sbb
jmp
iret
movs
jb
les
and
jmp
aad
stos
jmp
(bad)
(bad)
call
mov
inc
jnp
push
mov
les
add
or
sbb
jmp
ror
mov
or
push
xor
mov
dec
jg
data16
pop
data16
cld
loop
jg
mov
sub
clc
je
mov
cs
sahf
sub
(bad)
jmp
xchg
mov
mov
(bad)
adc
call
dec
data16
loope
pop
push
sbb
pusha
cmp
es
(bad)
(bad)
jmp
dec
fistp
iret
pop
xor
out
push
sti
lea
sar
iret
pusha
adc
call
ja
cmp
loopne
push
pop
mov
add
pop
mov
fiadd
hlt
(bad)
movs
xchg
ret
push
cld
(bad)
(bad)
call
push
jle
mov
lea
jl
mov
adc
jg
es
add
push
dec
loop
ret
pop
dec
iret
push
gs
shl
adc
adc
cmps
sub
frstor
idiv
lea
movs
mov
(bad)
jmp
jle
imul
icebp
arpl
jp
xchg
stos
xchg
xchg
imul
(bad)
stc
jg
pop
jecxz
fwait
hlt
mov
in
mov
std
add
sahf
pop
lea
sbb
inc
push
hlt
and
(bad)
add
sbb
(bad)
fcomip
hlt
and
cwde
ret
sbb
fidivr
jmp
push
into
ret
and
scas
mov
(bad)
jmp
(bad)
ficomp
or
shl
add
mov
pop
cmp
or
mov
scas
es
ret
xchg
popf
movs
mov
mov
loop
or
sbb
add
jg
popf
not
ss
loopne
stc
fisubr
(bad)
fcomip
inc
sbb
jb
mov
sbb
pop
enter
add
(bad)
jmp
sbb
es
retf
jg
movs
xor
aaa
cmp
mov
sar
push
adc
inc
add
icebp
hlt
(bad)
and
mov
dec
inc
xor
mov
inc
(bad)
pop
sub
enter
or
sbb
(bad)
(bad)
sub
sub
ins
pop
fbstp
in
rcr
xor
add
pop
test
shr
mov
lods
js
arpl
push
ficomp
(bad)
fild
xor
aaa
adc
push
push
jae
movs
mov
sti
sbb
test
mov
mov
out
push
clc
adc
sbb
jmp
icebp
adc
add
add
fstp
(bad)
popf
fimul
idiv
xchg
xor
lods
dec
loopne
jge
mov
mov
push
(bad)
shr
ret
sub
sbb
mov
mov
inc
adc
(bad)
mov
int3
jne
push
cld
push
dec
inc
cmp
(bad)
fwait
mov
in
mov
sbb
cwde
and
aas
jg
pop
dec
adc
mov
sbb
dec
pop
in
sbb
pop
ins
push
sub
sbb
(bad)
call
xor
mov
sub
mov
dec
mov
push
call
adc
shl
and
shr
add
mov
mov
xor
int3
pusha
jo
fwait
mov
sbb
call
inc
pop
(bad)
inc
outs
es
mov
or
sub
dec
mov
xor
mov
loope
addr16
(bad)
cld
mov
call
das
sbb
inc
es
and
idiv
call
lods
jb
sub
inc
xchg
jmp
pop
jo
imul
sub
dec
dec
dec
inc
aas
ja
adc
repnz
sub
add
sub
mov
add
push
jbe
(bad)
(bad)
(bad)
frstor
jnp
inc
hlt
adc
mov
adc
add
sbb
push
sub
or
lock
pop
lock
jb
fsubr
sbb
xor
mov
je
in
(bad)
sub
call
dec
sahf
arpl
jl
pusha
js
cwde
jle
adc
inc
pop
jle
and
fistp
jecxz
and
add
mov
jecxz
(bad)
mov
jbe
mov
mov
jns
leave
enter
jmp
xchg
in
xlat
push
jbe
(bad)
(bad)
call
out
adc
stc
sub
xchg
das
mov
inc
(bad)
jg
xchg
add
in
fstp
mov
sar
(bad)
(bad)
jle
movq
inc
fiadd
add
sbb
das
shl
jl
stos
icebp
or
push
mov
cs
loopne
(bad)
dec
or
sbb
imul
aam
xchg
les
jae
and
(bad)
mov
lock
mov
icebp
pop
test
push
mov
dec
sub
push
jg
shr
(bad)
sbb
std
add
(bad)
call
inc
je
push
leave
sub
pop
jmp
mov
std
adc
aaa
sbb
inc
and
int3
mov
sbb
(bad)
mov
mov
aaa
jnp
jmp
ret
jecxz
ret
cdq
jne
in
push
(bad)
(bad)
(bad)
inc
jb
ss
imul
aaa
dec
adc
pop
jae
in
xchg
scas
mov
pop
xchg
push
movs
mov
or
(bad)
adc
data16
mov
xor
dec
pop
movs
xchg
neg
std
enter
call
and
popf
jbe
pop
mov
dec
xor
push
mov
dec
out
in
loope
ja
cmp
das
xor
jg
test
lods
inc
mov
scas
loop
(bad)
call
hlt
popa
inc
cmp
sbb
sub
jne
shl
add
add
call
push
cmp
push
(bad)
(bad)
(bad)
inc
or
ja
pushw
push
push
mov
and
jo
ret
mov
push
(bad)
stos
call
jmp
or
xchg
xchg
xchg
dec
mov
xor
(bad)
aas
push
std
jo
inc
aaa
sub
sub
inc
movs
and
(bad)
(bad)
(bad)
inc
xor
sub
push
xchg
dec
add
adc
add
xchg
mov
xor
sbb
ret
hlt
and
js
sub
out
imul
push
popa
popa
push
cvtps2pi
cmp
ja
sbb
mov
adc
je
adc
add
call
mov
(bad)
inc
imul
jmp
js
adc
and
(bad)
(bad)
fiadd
pop
retf
adc
push
cs
xor
test
sbb
cmp
mov
mov
jbe
(bad)
stos
dec
rcl
add
fdivr
sysret
imul
nop
in
clc
inc
sub
push
mov
bound
mov
(bad)
aas
dec
cdq
or
repnz
mov
gs
pop
cmc
jg
xchg
rcr
je
sbb
add
out
jnp
jae
mov
or
repnz
jno
pop
aad
push
scas
inc
data16
sub
out
and
ins
popf
sbb
out
and
lahf
shl
jae
mov
fst
ins
sbb
aas
push
rcl
push
sub
mov
(bad)
(bad)
jmp
mov
push
or
(bad)
adc
(bad)
xor
hlt
loope
pop
xor
sub
adc
inc
in
mov
pop
cmp
(bad)
out
and
repz
jno
not
aam
hlt
jg
das
pop
push
push
mov
nop
xchg
cmp
xchg
cdq
add
dec
inc
sbb
fwait
mov
push
mov
mov
pop
cmp
fadd
add
dec
or
and
stos
in
mov
call
mov
mov
nop
out
jbe
or
and
jnp
xor
jns
cmp
test
cmp
loope
hlt
mov
loopne
mov
addr16
cmp
mov
pop
call
jge
sub
hlt
(bad)
(bad)
call
sbb
lea
pop
loopne
xor
dec
test
jmp
mov
adc
aad
xor
nop
push
add
xor
(bad)
jmp
jle
pusha
dec
jae
cmp
addr16
sti
call
adc
in
mov
ins
mov
inc
mov
xor
(bad)
jmp
jne
mov
bound
rcr
arpl
and
jo
dec
xchg
ds
loopne
jl
call
sbb
mov
add
aas
pop
stos
push
and
imul
scas
push
jo
loopne
rol
rcr
sar
(bad)
jmp
fsubp
adc
and
gs
add
add
push
mov
fneni(8087
jp
les
pop
ror
mov
adc
or
outs
cwde
push
cmp
movs
sub
in
(bad)
(bad)
dec
add
cwde
movs
js
pop
inc
xor
scas
xor
mov
pushf
call
lea
(bad)
std
add
test
sub
test
loopne
rcl
ffree
(bad)
push
std
jmp
mov
sub
jle
or
ins
push
(bad)
(bad)
jle
jb
xchg
sbb
retf
dec
mov
fnstcw
or
sbb
sub
xor
dec
pusha
imul
dec
or
adc
pop
or
jnp
fwait
ss
sbb
pop
movs
test
imul
pop
sbb
mov
sbb
pop
sub
push
pusha
inc
cmc
pop
jmp
dec
mov
mov
xchg
or
mov
inc
cmp
pop
cmps
mov
and
add
rcr
push
add
ret
(bad)
hlt
stos
into
mov
pop
movs
xor
add
data16
inc
rcl
add
or
es
mov
or
jne
mov
movs
dec
in
xlat
dec
sub
and
pop
lock
fisubr
mov
push
int
(bad)
call
ins
mov
and
xor
xlat
mov
(bad)
jmp
pop
jmp
push
test
call
inc
xchg
jmp
daa
cmp
scas
(bad)
jmp
fiadd
sbb
adc
cmp
jg
pop
pushf
(bad)
(bad)
jmp
shl
and
fnstsw
aas
pop
fsubr
push
and
clc
mov
popa
sub
stc
adc
inc
push
cmp
std
dec
mov
jmp
or
outs
clc
push
jmp
test
sub
mov
or
lea
cmp
movq
neg
pop
and
mov
out
cmp
call
sub
adc
fdivrp
scas
push
or
or
psubusw
test
stc
hlt
jle
push
xor
push
cmp
std
dec
xor
ror
pop
or
dec
add
mov
mov
jb
or
stos
stos
jo
add
sub
cld
sbb
jmp
outs
or
stos
(bad)
and
jecxz
je
or
cld
cld
add
pusha
lods
mov
es
(bad)
(bad)
in
xor
fisttp
push
sbb
ss
daa
xchg
mov
xlat
in
fbstp
hlt
scas
jb
or
adc
jne
call
sbb
mov
jo
mul
fcomip
push
cmps
sub
stos
sub
mov
pop
xchg
idiv
shl
xchg
inc
jmp
lods
aaa
addr16
mov
sbb
std
adc
jmp
adc
sbb
outs
(bad)
jnp
into
dec
xor
cli
or
loop
push
sbb
adc
mov
lods
call
mov
loopne
imul
inc
jne
inc
repz
ins
pop
cmp
cmp
pusha
adc
add
call
or
(bad)
fstp
mov
add
or
adc
dec
pop
ror
mov
rol
call
sbb
not
jl
inc
stos
pop
xor
dec
cs
(bad)
mov
das
test
inc
push
fidivr
ret
cs
cmp
xlat
out
dec
repz
push
adc
out
push
adc
or
pop
mov
xchg
push
or
inc
and
or
stos
adc
add
xor
mov
int3
add
std
sbb
mov
je
jle
(bad)
(bad)
inc
or
je
and
je
je
pop
je
loop
fstp
jne
arpl
push
push
jmp
jecxz
das
inc
inc
jmp
or
sub
call
outs
ins
jmp
gs
loopne
int
adc
cmp
shl
cmp
rcr
dec
jmp
mov
mov
popa
jb
sar
inc
and
pusha
jg
jmp
inc
inc
dec
mov
retfw
inc
inc
jmp
mov
add
test
das
add
fwait
push
xchg
jg
mov
jae
or
inc
dec
mov
mov
ds
inc
sub
xor
push
cmp
call
mov
or
daa
sti
(bad)
(bad)
aas
in
sbb
push
xchg
pusha
retf
ror
jl
fcomp
push
adc
(bad)
(bad)
inc
mov
hlt
fld
leave
in
mov
sub
je
das
cmp
(bad)
(bad)
call
add
popa
and
mov
push
test
xchg
jge
mov
xor
and
xor
xchg
and
jg
push
out
in
xchg
dec
mov
add
ds
enter
das
(bad)
or
or
ret
(bad)
jl
xchg
mov
adc
pop
jbe
mov
xchg
sbb
or
scas
inc
hlt
push
mov
aam
jnp
adc
mov
inc
inc
out
inc
add
repz
mov
sbb
mov
push
push
rcl
aaa
rcl
shl
xor
jo
sub
inc
xor
inc
xor
inc
xor
in
inc
mov
push
inc
outs
mov
fst
enter
dec
dec
popf
lds
inc
mov
adc
mov
xor
inc
ins
xor
xchg
inc
jne
or
ds
jmp
or
jb
inc
sub
mov
pop
cmc
adc
(bad)
dec
ss
enter
(bad)
adc
cmp
clc
push
xor
jge
add
inc
addr16
dec
push
add
fwait
inc
inc
mov
and
lea
push
xor
push
pop
pop
sub
retf
inc
movs
sub
clc
push
popf
clc
lahf
mov
call
(bad)
(bad)
jg
push
call
ficomp
movs
adc
in
or
xor
dec
(bad)
(bad)
(bad)
call
jmp
inc
add
fadd
mov
mov
div
shl
xor
push
(bad)
(bad)
(bad)
push
pop
aaa
les
push
test
ror
test
retf
cmp
out
inc
xchg
push
movups
fs
mov
cmp
jle
in
mov
lock
mov
xor
add
push
inc
xchg
inc
xor
push
pop
loopne
call
mov
loop
lods
xchg
scas
add
cmp
xchg
call
outs
ret
(bad)
sbb
outs
cli
(bad)
inc
or
pop
push
sbb
cmp
or
push
lods
call
sbb
lods
or
in
mov
add
sar
jmp
std
or
call
lgdtd
xor
jp
add
(bad)
(bad)
push
jmp
sub
sar
mov
xor
push
jg
adc
outs
scas
hlt
sbb
add
loop
jmp
clc
cmps
aas
in
lods
enter
mov
aas
clc
jg
add
shl
mov
add
cmp
mov
loopne
cwde
add
mov
sar
(bad)
fmul
in
ins
hlt
aad
loop
(bad)
jmp
push
adc
(bad)
push
cwde
push
jmp
rcl
cmp
(bad)
pop
add
inc
mov
or
or
mov
push
jne
(bad)
(bad)
inc
mov
xchg
repz
lods
push
inc
sub
mov
ret
mov
inc
lods
cmp
cmp
push
xor
lods
mov
sbb
(bad)
(bad)
(bad)
(bad)
ficom
push
or
jne
push
dec
shl
or
inc
loop
je
popa
sub
lds
lods
lods
(bad)
pop
mov
or
push
inc
xor
dec
or
fadd
adc
and
adc
mov
mov
inc
xchg
mov
inc
test
jle
sbb
mov
mov
call
inc
es
cmc
aaa
push
aas
aad
dec
(bad)
ja
aaa
push
jle
(bad)
fild
les
or
idiv
xor
sbb
cli
(bad)
(bad)
jmp
push
out
cmps
ja
mov
inc
mov
out
mov
arpl
test
ss
xor
out
or
sahf
push
je
mov
outs
out
rol
(bad)
(bad)
jmp
mov
push
sub
sbb
pop
push
data16
or
pop
mov
mov
push
rol
mov
jecxz
ds
xor
lock
(bad)
mov
pushf
mov
call
icebp
call
loopne
jle
sub
push
shr
cmp
les
es
clc
fnstsw
push
cmp
cmp
jp
jmp
shr
or
rcl
pop
dec
inc
or
ror
rcl
icebp
mov
adc
cdq
push
push
add
jg
imul
iret
lock
xlat
jmp
pop
cli
jg
sbb
call
sub
push
or
out
(bad)
xor
xor
(bad)
call
push
mov
add
cmp
jbe
aam
mov
cld
inc
adc
pop
bound
push
xlat
iret
xor
mov
pop
cmp
sbb
mov
cmp
push
ss
mov
add
and
inc
push
std
(bad)
(bad)
mov
push
and
cli
fucompp
cmps
add
(bad)
push
lds
cld
add
push
or
pop
jmp
mov
add
retf
out
sbb
jecxz
iret
cmp
aas
test
iret
mov
inc
inc
aas
dec
call
mov
mov
inc
inc
inc
or
and
(bad)
dec
pop
mov
inc
movs
into
sub
aaa
popf
or
std
dec
mov
rcl
pop
stc
or
pop
inc
loopne
lock
aas
ss
xlat
push
shl
jno
pop
xor
mov
inc
in
xchg
cwde
add
or
or
ja
jmp
std
add
push
jg
cwde
sar
jbe
ficom
nop
sbb
and
inc
(bad)
jmp
fs
push
push
sub
pop
int3
add
jnp
and
and
add
(bad)
jmp
idiv
int3
xchg
inc
ficom
add
ja
jge
cli
mov
add
mov
lea
mov
aaa
or
dec
dec
call
(bad)
(bad)
jmp
imul
imul
add
ins
mov
or
imul
push
push
and
add
dec
sahf
sub
mov
jmp
(bad)
jg
sbb
push
int3
(bad)
test
addr16
jecxz
sub
(bad)
push
push
xchg
mov
push
aas
sbb
fs
test
adc
mov
std
push
je
sub
icebp
add
test
jg
dec
cmp
icebp
inc
mov
adc
outs
cmp
and
loopne
std
push
js
(bad)
rcl
imul
mov
pop
mov
aam
sub
fisubr
pop
ins
sbb
cli
mov
test
push
push
inc
or
mov
fild
pop
jbe
test
sbb
push
push
adc
adc
xlat
call
fsubrp
jmp
jb
xor
push
cmp
sub
inc
mov
jp
and
push
call
jo
(bad)
jnp
pop
push
lods
add
jne
xchg
and
pusha
jl
cmc
(bad)
(bad)
mov
mov
ds
js
shl
push
outs
in
xchg
xchg
imul
(bad)
dec
add
inc
shl
call
jmp
dec
movs
cmp
cmc
xchg
jl
inc
mov
in
sbb
or
das
inc
inc
mov
ja
jmp
push
enter
xchg
loopne
inc
mov
and
shl
mov
mov
mov
outs
push
vpshuflw
out
(bad)
(bad)
call
and
sbb
mov
adc
adc
test
add
pop
and
call
loop
(bad)
les
push
inc
jo
add
(bad)
sbb
cli
fcomip
pushf
sbb
loop
dec
fdiv
and
adc
xor
(bad)
jg
dec
add
(bad)
rcr
loop
inc
call
and
stos
aad
lods
adc
out
(bad)
(bad)
inc
jecxz
and
sbb
dec
idiv
inc
mov
xor
xor
(bad)
jmp
out
mov
jecxz
jo
or
fcom
push
push
push
pmaxub
sar
call
add
mov
add
push
int
xlat
sbb
(bad)
jmp
shl
pusha
call
or
push
retf
mov
inc
test
dec
(bad)
into
std
(bad)
call
jns
or
and
cmps
xor
and
loopne
push
xor
inc
das
inc
jg
or
dec
sti
or
inc
mov
shl
mov
or
mov
cs
pop
mov
stc
dec
out
add
xchg
jae
xlat
outs
lock
or
pop
std
push
out
xor
xor
and
call
movs
jmp
mov
xchg
cmp
std
xor
inc
mov
xchg
mov
fbld
xchg
inc
cmp
cmps
or
adc
sub
push
or
sbb
jmp
push
pop
mov
mov
sub
or
add
(bad)
(bad)
(bad)
mov
pop
ret
cmps
mov
ret
(bad)
xchg
add
enter
dec
pop
xchg
stos
adc
xchg
scas
sbb
pop
mov
adc
shr
ror
pop
jmp
sub
test
sbb
lahf
sbb
mov
or
(bad)
(bad)
inc
pushf
test
mov
cmp
xor
test
push
mov
inc
lock
or
sbb
adc
call
push
pop
xor
outs
clc
or
enter
mov
cmp
ja
or
pusha
xchg
mov
outs
out
xchg
lock
pop
push
pop
clc
inc
mov
stc
inc
call
push
arpl
je
inc
sub
pop
hlt
(bad)
(bad)
fild
pop
lock
sub
out
jmp
std
sub
scas
repnz
int3
ret
add
iret
push
rcr
inc
das
jl
dec
xor
imul
aam
mov
xor
(bad)
(bad)
(bad)
fadd
xlat
ss
xlat
or
mov
sbb
add
mov
(bad)
(bad)
dec
mov
nop
rep
pop
add
cld
or
mov
add
(bad)
jg
popa
pop
mov
mov
and
leave
adc
cld
fbstp
shl
(bad)
call
mov
jb
lock
pop
push
dec
inc
or
add
outs
xor
dec
pop
cmps
push
and
ret
push
cmp
add
adc
push
out
(bad)
(bad)
inc
push
mov
adc
adc
jl
mov
or
and
inc
adc
(bad)
(bad)
jmp
xchg
(bad)
hlt
xlat
dec
add
dec
xor
aaa
in
cmp
dec
mov
jge
jecxz
not
int3
(bad)
mov
movs
push
mov
dec
pop
mov
les
pop
cmps
dec
pop
dec
clc
repnz
or
xor
or
adc
push
sub
push
in
pop
out
lock
das
mov
and
pop
lock
or
mov
pop
dec
sbb
push
adc
xchg
mov
inc
sbb
sbb
mov
(bad)
mov
pushf
mov
jg
xchg
call
out
(bad)
rol
cwde
mov
and
and
or
push
mov
dec
mov
jg
jg
push
inc
adc
mov
mov
and
sar
push
lahf
(bad)
mov
jbe
mov
popa
imul
xor
add
or
add
(bad)
call
mov
add
pushw
dec
mov
loopne
ret
jecxz
sar
sub
jecxz
push
fsub
call
cmc
mov
lock
adc
jne
(bad)
out
clc
cmp
add
cmps
jbe
mul
popf
dec
jae
jge
cmp
pop
add
(bad)
(bad)
jg
loopne
hlt
sbb
dec
loopne
inc
xchg
adc
mov
fstp
(bad)
(bad)
jmp
test
cmp
pop
mov
fsubr
adc
add
out
xor
xchg
scas
cli
mov
adc
sub
jne
jle
pop
leave
fdivrp
pop
inc
pop
mov
push
outs
data16
xor
call
xor
pusha
sbb
mov
mov
pop
jmp
call
into
ds
jmp
pop
cli
(bad)
jmp
loopne
popf
add
sbb
xor
mov
loopne
jmp
scas
and
scas
mov
lods
dec
pop
adc
movs
cmp
rcl
dec
rcr
(bad)
mov
cmp
jns
in
test
pop
push
push
loop
adc
rcl
dec
mov
retf
adc
or
aas
lahf
clts
dec
dec
test
clc
mov
xor
cmpps
(bad)
call
out
pop
popf
xor
fs
adc
push
add
(bad)
(bad)
(bad)
call
or
push
ins
shr
sahf
push
sar
push
dec
adc
mov
not
sbb
lahf
mov
push
dec
cmp
pop
sbb
pusha
lea
rcr
or
(bad)
(bad)
(bad)
call
adc
adc
push
sbb
add
pop
push
push
or
test
cmp
add
(bad)
call
fstp
mul
add
shr
lahf
inc
jg
lea
and
(bad)
(bad)
call
push
or
pop
push
dec
cld
mov
jmp
push
push
adc
adc
jp
xchg
or
jle
or
rol
xchg
fdivp
and
(bad)
jmp
nop
inc
adc
sub
pop
xor
rol
inc
clc
les
pop
cmps
ins
iret
(bad)
jp
bound
neg
lock
jmp
or
sub
pop
mov
adc
dec
(bad)
iret
mov
xchg
sub
cmp
push
stos
sub
xor
cmp
push
adc
inc
lock
inc
retf
pop
or
imul
inc
fs
icebp
clc
pop
test
jo
dec
(bad)
loop
movs
pop
not
shl
bound
xchg
mov
add
mov
fmul
aaa
adc
(bad)
(bad)
(bad)
mov
pop
dec
mov
adc
in
add
arpl
or
ret
loopne
and
enter
cli
(bad)
mov
cmp
jo
push
in
adc
retf
jmp
int3
pop
cli
popa
xchg
or
ficom
dec
das
xchg
test
dec
data16
dec
pop
sub
jge
call
mov
push
ins
or
dec
pop
dec
das
mov
sbb
ins
ins
pop
scas
pusha
cli
inc
(bad)
(bad)
xor
fistp
outs
stos
push
pop
xchg
sbb
aaa
xchg
clc
call
or
or
je
or
outs
ja
jmp
dec
sub
mov
addr16
(bad)
call
pop
xchg
pop
or
fcmovu
stos
fdivr
(bad)
(bad)
dec
or
outs
or
in
add
fnstcw
jo
or
nop
test
(bad)
lahf
add
call
fisubr
cld
sub
mov
dec
sub
fld
out
push
js
je
scas
xor
fldln2
test
pop
sub
xchg
outs
push
es
(bad)
scas
and
sar
out
in
rol
rcl
dec
nop
push
jmp
arpl
leave
out
xor
or
pop
es
push
je
bound
cmp
mov
(bad)
jmp
dec
dec
dec
dec
inc
inc
sbb
pop
mov
xchg
push
push
(bad)
(bad)
call
xchg
(bad)
and
fcmovne
xor
sbb
and
adc
adc
or
jmp
call
pop
sbb
xor
(bad)
fidiv
hlt
sbb
nop
mov
pop
mov
(bad)
(bad)
(bad)
(bad)
call
(bad)
jp
push
inc
movs
add
push
xor
jmp
fwait
mov
jmp
clc
push
clc
call
mov
pusha
cmp
call
loopne
(bad)
(bad)
(bad)
clc
dec
jo
fst
or
push
dec
ja
push
push
das
and
pusha
and
addr16
push
jmp
add
cmps
dec
in
js
mov
aas
pop
xchg
xor
jecxz
sub
je
sbb
(bad)
(bad)
inc
fiadd
repz
pushf
xchg
out
xor
dec
pop
push
cld
cmp
(bad)
outs
adc
fcom
dec
xchg
mov
scas
and
jge
(bad)
(bad)
(bad)
call
cmp
test
mov
ret
or
ficom
lea
adc
retf
push
inc
(bad)
cmp
sbb
xlat
cdq
fisub
pop
pop
call
(bad)
call
add
mov
jnp
jno
inc
dec
pop
mov
cdq
add
leave
push
sbb
(bad)
out
sbb
ja
push
mov
(bad)
(bad)
(bad)
cmp
int
nop
fist
mov
sbb
cmps
(bad)
push
mov
or
rcr
js
xchg
jmp
adc
pop
jbe
lock
std
adc
inc
push
test
adc
jb
push
mov
cli
dec
clc
call
call
stc
in
push
mov
inc
dec
dec
add
sbb
das
aam
fisubr
in
adc
shr
add
inc
(bad)
aas
ss
mov
pop
inc
(bad)
(bad)
(bad)
cmp
cmps
or
pop
sbb
or
adc
or
xor
or
movs
rol
mov
stc
(bad)
(bad)
push
test
cmp
cmp
mov
sbb
jmp
repz
cmp
and
pop
mov
adc
xor
pusha
pusha
addr16
bound
dec
inc
push
retf
push
pop
xor
or
push
xchg
shl
push
cmp
call
into
sub
pop
push
and
dec
lock
sbb
xchg
mov
add
popf
(bad)
(bad)
(bad)
call
dec
dec
or
sbb
or
jno
inc
pop
inc
test
nop
nop
dec
push
fsub
into
(bad)
(bad)
(bad)
jmp
shld
mov
add
test
stos
jp
cwde
shl
jg
or
pop
cmps
push
call
add
add
in
mov
pop
and
(bad)
(bad)
(bad)
call
pop
mov
cmp
ret
aaa
pop
add
inc
sub
daa
pop
xor
jo
mov
inc
push
test
fsub
cmp
(bad)
(bad)
mov
push
enter
xchg
aam
push
jo
(bad)
loopne
bound
out
push
mov
jg
xchg
scas
pop
jnp
(bad)
(bad)
(bad)
jg
arpl
ret
test
pop
pushf
ret
lahf
or
test
or
xor
cld
(bad)
(bad)
inc
fistp
or
lds
sub
jecxz
mov
test
xchg
lock
(bad)
call
cli
mov
jae
xor
or
cmp
add
das
(bad)
cmp
lock
mov
add
(bad)
mov
or
fwait
and
add
stos
pop
jge
mov
push
jge
push
jmp
lea
movs
mov
add
mov
ret
in
nop
mov
pop
in
cli
(bad)
(bad)
push
pop
nop
aam
sub
and
adc
js
and
mov
sbb
and
cli
(bad)
(bad)
call
push
sub
and
dec
sbb
loope
mov
or
push
lock
xor
adc
inc
jns
adc
stos
(bad)
call
add
and
pop
inc
dec
jle
fdiv
repnz
cwde
pop
jnp
mov
out
cmp
data16
idiv
(bad)
jg
movs
fcomp
jp
and
fisttp
(bad)
or
fwait
sbb
pop
(bad)
(bad)
(bad)
inc
or
ins
xor
ffreep
adc
mov
fwait
or
xchg
cs
push
jmp
mov
(bad)
(bad)
(bad)
loopne
add
inc
jnp
add
in
cmp
push
mov
aaa
je
lock
pop
push
pop
cwde
scas
ror
pop
lock
sub
fs
ret
fs
push
jnp
mov
cmp
inc
xchg
mov
shl
in
cmps
inc
pop
aas
loopne
fidiv
sbb
dec
test
mov
popa
or
xchg
add
test
adc
retf
(bad)
dec
or
or
push
mov
(bad)
push
push
or
mov
xchg
xor
sub
gs
xchg
(bad)
jmp
and
fimul
lods
cli
cmp
sbb
or
(bad)
push
mov
jmp
dec
sub
xchg
dec
(bad)
(bad)
fisttp
inc
lea
xchg
push
movs
daa
fcom
xchg
(bad)
jg
iret
sbb
pop
mov
mov
sbb
fld
inc
jg
jg
push
rol
pop
in
add
dec
mov
sbb
(bad)
call
repnz
fidivr
(bad)
in
push
fsub
test
add
xor
mov
pop
push
jl
dec
inc
push
adc
mov
jmp
pop
pop
adc
loopne
pop
aas
ins
jg
cmp
push
sbb
test
mov
xor
mov
gs
xchg
jbe
(bad)
(bad)
cmp
add
or
jg
and
shr
xchg
add
into
sbb
pop
jle
pusha
(bad)
(bad)
inc
mov
into
pop
push
aad
popf
iret
jg
inc
inc
push
mov
inc
(bad)
dec
push
and
cmp
das
jbe
mov
(bad)
inc
xor
call
call
mov
call
push
inc
shl
cmps
loopne
pop
arpl
addr16
pinsrw
and
and
add
cmp
(bad)
xor
scas
bnd
mov
test
xor
sub
adc
ds
in
sub
sub
(bad)
test
pop
xchg
rcl
mov
mov
ja
shr
add
or
mov
and
cs
ss
pop
xchg
sub
arpl
adc
dec
xchg
xor
inc
sbb
in
(bad)
push
cmp
pop
push
in
cmp
sub
push
xchg
add
(bad)
(bad)
inc
loopne
movs
or
ds
and
sar
je
jmp
fwait
clc
(bad)
call
add
fcmovne
test
jle
dec
sub
sub
adc
or
es
adc
push
mov
cvttps2pi
fcomp
das
push
xchg
arpl
inc
xchg
cmps
xchg
cwde
push
std
jg
pop
dec
clc
sahf
xchg
xchg
sub
imul
jmp
bswap
in
inc
std
sub
(bad)
dec
mov
pusha
push
inc
sbb
cmp
cmp
push
adc
popf
cmps
call
aam
push
inc
push
cmps
mov
call
mov
pop
clc
out
mov
shl
cmps
mov
push
mov
or
jecxz
rol
rcl
call
out
cli
jbe
inc
aas
aaa
data16
imul
xor
fmul
adc
lock
add
(bad)
xchg
mov
sub
(bad)
stos
adc
dec
sahf
xor
(bad)
pusha
adc
add
inc
cwde
dec
and
aad
xchg
es
stos
(bad)
(bad)
(bad)
dec
cmp
adc
pop
sahf
shl
xor
ins
repz
out
aas
push
call
test
pusha
es
xchg
inc
jmp
jmp
push
xor
xchg
cmps
test
cld
repz
push
xor
(bad)
(bad)
(bad)
jg
push
retf
idiv
sbb
jns
pop
xchg
jle
push
add
cmp
movs
or
adc
pop
xor
shr
fdivr
es
jb
mov
pop
xchg
mov
aaa
arpl
dec
(bad)
jge
pop
in
jg
push
mov
(bad)
(bad)
popa
out
push
xchg
xchg
adc
scas
clc
call
test
(bad)
(bad)
fistp
jno
mov
sub
mov
or
inc
jg
xchg
add
adc
cmp
gs
jbe
push
jl
cmp
pop
xchg
cmp
(bad)
mov
dec
sub
xor
pop
jmp
push
scas
addr16
mov
jns
(bad)
(bad)
call
push
add
outs
jne
ret
add
push
(bad)
ror
dec
push
jo
adc
jmp
sub
(bad)
(bad)
(bad)
dec
jae
inc
jb
pop
xchg
sbb
push
mov
movs
adc
push
or
out
(bad)
(bad)
fcomip
sbb
and
pop
movs
cmp
and
push
dec
pop
sbb
ja
pop
xchg
(bad)
mov
es
sbb
add
pop
push
cs
sar
in
jmp
mov
(bad)
fbld
test
cmp
fwait
xor
je
stos
(bad)
jmp
sbb
adc
or
xlat
jg
mov
(bad)
jl
(bad)
adc
xor
push
xchg
icebp
shl
stos
xor
push
mov
shl
cmp
inc
pop
outs
jp
jmp
pop
mov
lea
stos
sbb
pop
push
or
dec
ror
pop
sub
(bad)
(bad)
(bad)
(bad)
mov
pop
sbb
mov
sub
xchg
sbb
mov
nop
sbb
pop
xor
movs
sbb
shl
xchg
mov
adc
jo
loop
dec
push
(bad)
icebp
and
add
sar
(bad)
xchg
xchg
(bad)
gs
pop
ret
lahf
movs
add
std
call
test
or
pop
or
inc
or
popa
in
jl
inc
mov
or
test
repz
xchg
aam
sub
enter
aam
inc
ds
es
pop
hlt
(bad)
(bad)
call
jge
push
jo
lea
mov
sub
retf
sbb
and
mov
xor
mov
jns
cwde
lea
xchg
mov
mov
push
xchg
loopne
jne
add
sahf
mov
or
mov
sbb
sbb
mov
pop
push
xchg
or
sub
sbb
adc
call
inc
cs
ins
jl
stos
xchg
fs
push
and
mov
jne
sub
(bad)
(bad)
jmp
int3
popa
xor
sub
jmp
inc
cmp
adc
jo
push
sub
inc
(bad)
dec
cmp
cmp
pop
outs
test
or
ja
cmp
inc
inc
call
fidiv
mov
xor
fsubr
mov
ret
(bad)
xchg
cmp
cmp
jmp
iret
sbb
adc
popa
push
add
(bad)
(bad)
jmp
or
sub
lea
jmp
push
push
or
lods
pop
lahf
loopne
adc
pop
hlt
and
call
push
pop
movs
imul
add
jns
stos
adc
shl
ins
mov
ds
(bad)
(bad)
dec
fimul
push
test
shl
add
aaa
cmp
or
iret
aas
sbb
ins
mov
rol
sbb
and
dec
(bad)
mov
cmps
or
or
movs
xor
ins
rcl
or
addr16
stos
aam
(bad)
(bad)
dec
xchg
in
push
mov
ins
add
daa
sti
outs
or
aas
ins
push
sti
mov
mov
push
call
fmul
mov
rol
data16
add
adc
push
ror
pop
dec
enter
lds
iret
bound
(bad)
stc
jg
cs
test
sar
div
xchg
add
imul
test
js
cmp
(bad)
or
fild
pop
fild
shl
jmp
add
nop
in
add
test
enter
sub
cwde
lock
data16
or
jg
addr16
jbe
jmp
in
call
inc
movs
push
xchg
mov
mov
in
or
xor
dec
dec
mov
gs
loop
mov
dec
and
loopne
test
mov
dec
xchg
pop
inc
sar
push
jmp
push
rcr
fsubr
push
push
imul
call
pop
push
fimul
enter
sar
push
jne
icebp
inc
xor
jno
inc
mov
jmp
arpl
and
sub
jg
cli
push
sbb
jbe
jne
mov
mov
adc
inc
push
sbb
pop
or
xor
add
cmp
jae
adc
cld
or
nop
(bad)
and
sbb
rcr
jcxz
jne
(bad)
aaa
ins
jnp
js
or
xlat
or
aad
sbb
sub
cli
(bad)
(bad)
jmp
les
sub
lea
xor
lea
rcl
das
int
pop
cs
adc
cli
(bad)
stc
push
jb
out
jmp
in
mov
inc
shr
clc
iret
xor
fstp
jno
mov
inc
idiv
shl
mov
and
adc
adc
pop
lock
push
adc
shld
add
cli
(bad)
(bad)
cli
stos
es
inc
adc
mov
cld
lds
inc
xor
hlt
jo
(bad)
(bad)
jmp
xor
add
xchg
jne
fimul
lahf
push
inc
sar
aad
lock
push
jae
adc
mov
setle
js
pop
cmp
mov
lock
sbb
jg
inc
push
lods
sub
mov
shl
(bad)
(bad)
(bad)
call
jmp
sbb
movs
add
lods
jl
xchg
sbb
or
xchg
test
pushf
xor
rol
(bad)
(bad)
(bad)
mov
rol
mov
xor
pop
sti
add
or
push
sub
retf
jns
std
and
clc
xor
(bad)
jmp
aad
dec
ud0
dec
and
nop
lods
dec
std
add
xchg
pop
fadd
xchg
(bad)
push
in
cwde
pop
add
sar
(bad)
cmp
repnz
mov
ss
js
or
lods
cmps
jae
adc
push
in
(bad)
mov
add
push
pop
(bad)
(bad)
(bad)
jmp
push
add
in
push
loopne
fcom
push
push
test
ins
in
loopne
call
dec
dec
dec
shr
(bad)
push
push
xchg
(bad)
es
rcr
cld
dec
scas
aaa
add
push
ins
dec
fcomip
fdivr
call
pop
jmp
(bad)
(bad)
(bad)
fbld
test
bound
sbb
push
call
mov
mov
(bad)
call
push
fcom
scas
sbb
data16
sbb
ret
and
rcr
add
popa
mov
pop
pop
mov
or
sub
lahf
sahf
cmp
push
push
adc
int
fisub
dec
mov
mov
leave
push
inc
mov
lea
hlt
add
push
dec
jne
out
adc
call
adc
ds
ja
movs
loop
aaa
inc
std
call
lds
pop
mov
popf
add
(bad)
(bad)
(bad)
jg
call
sub
test
shl
mov
cmps
call
clc
les
(bad)
(bad)
(bad)
call
xlat
cmp
jle
repnz
dec
push
xchg
call
rcl
lock
cmps
jmp
sahf
jmp
and
xor
push
mov
in
and
sbb
xor
(bad)
(bad)
jmp
adc
pop
shl
pop
ret
pusha
xchg
dec
push
or
leave
int3
(bad)
(bad)
(bad)
jg
out
xchg
pop
xor
mov
ds
jmp
call
pop
ret
sub
or
out
outs
dec
push
adc
(bad)
(bad)
call
inc
test
mov
inc
in
or
sbb
push
imul
jg
or
push
call
stos
movs
pop
pop
fcomp
call
xchg
loopne
jecxz
nop
or
hlt
(bad)
(bad)
call
fwait
aad
inc
add
popf
push
and
pushf
test
scas
jne
fcmovnb
dec
retf
dec
mov
ffreep
dec
jne
dec
jbe
jmp
jle
dec
std
push
sbb
mov
mov
xchg
xchg
xor
push
sub
sahf
out
aaa
cmp
ss
(bad)
call
pop
jl
mov
push
and
jae
or
push
xor
inc
or
or
lods
jmp
sbb
jo
xor
xchg
aas
push
daa
or
jmp
in
je
dec
gs
mov
gs
and
sar
or
call
and
dec
mov
mov
jmp
pop
push
jne
ins
or
dec
dec
fcmovne
jbe
push
push
xchg
sbb
mov
inc
push
ror
jo
push
popa
dec
inc
push
jo
jo
(bad)
outs
adc
sub
outs
pop
(bad)
(bad)
dec
xchg
pop
ss
dec
jae
outs
sbb
jae
pop
pop
sti
cs
sar
(bad)
(bad)
fist
fs
inc
inc
sub
sub
push
add
cwde
xor
jne
inc
jbe
add
mov
jg
in
jo
push
push
xchg
je
ins
sbb
pop
fdivr
lock
dec
inc
mul
cmovle
jae
push
test
or
xchg
add
dec
jae
mov
jb
inc
inc
pop
push
inc
mov
popa
xchg
popa
aaa
idiv
fcomip
push
outs
mov
cmps
aaa
sbb
int3
mov
out
test
aaa
outs
outs
cmps
cmp
dec
(bad)
das
aaa
dec
dec
inc
das
pop
push
xchg
push
adc
add
dec
loope
mov
je
ja
adc
ja
xchg
std
inc
cmp
aam
enter
push
pop
or
(bad)
nop
fwait
cwde
mov
cmp
push
jns
sbb
ret
cmp
mov
push
data16
(bad)
(bad)
fistp
dec
push
cwde
jne
push
mov
xchg
jae
jb
add
or
add
loop
(bad)
jmp
(bad)
into
adc
test
push
nop
ss
sub
xor
pop
(bad)
(bad)
aas
or
pop
sub
or
adc
daa
lea
adc
in
fcomp
jl
shl
sbb
add
test
cld
inc
jmp
rcr
sub
xchg
sub
pushf
pusha
cmp
mov
xor
push
clc
ja
push
sbb
add
add
sbb
scas
les
sub
mov
int
inc
sbb
test
push
sar
add
mov
add
cmp
mov
dec
and
mov
dec
les
sbb
clc
dec
cmp
sar
scas
push
mov
jo
icebp
inc
pop
add
ins
and
ja
(bad)
(bad)
(bad)
aas
test
(bad)
outs
adc
and
mov
cwde
sub
and
fcomip
(bad)
clc
xchg
cmp
mov
jb
mov
mov
add
mov
cmp
inc
xor
or
sbb
jb
fsub
adc
and
pop
mov
add
cmp
mov
push
mov
mov
fidivr
jmp
rcl
push
fisubr
jmp
ins
js
mov
in
cmps
(bad)
(bad)
push
jbe
push
mov
iret
add
cwde
imul
cwde
add
adc
fmul
movs
movs
and
push
(bad)
(bad)
(bad)
(bad)
mov
pop
call
sbb
cvtps2pi
sub
mov
mov
rcl
mov
sbb
(bad)
mov
mov
in
push
shr
cli
add
xor
sbb
hlt
cmp
jmp
call
icebp
test
(bad)
call
dec
dec
xchg
outs
inc
mov
fdiv
movs
xlat
shl
pushf
fs
mov
(bad)
dec
pop
sub
inc
mov
mov
pop
mov
fsubrp
inc
hlt
jnp
ds
add
(bad)
call
not
pushw
or
jo
xor
mov
push
mov
push
dec
xchg
push
and
popf
sbb
cli
adc
mov
push
sub
cmps
out
pop
and
pop
dec
jae
sahf
pop
dec
sub
sbb
out
mov
hlt
sub
(bad)
call
popa
(bad)
mov
push
push
push
in
push
adc
or
push
sbb
(bad)
(bad)
(bad)
jmp
mov
sub
test
idiv
sbb
loope
ret
je
lahf
retf
mov
(bad)
dec
fnstcw
cmp
aaa
adc
out
loopne
push
or
sbb
pop
cwde
or
std
(bad)
mov
push
pusha
sub
mov
mov
mov
push
ja
js
enter
xor
jg
dec
dec
adc
push
or
bound
sbb
mov
push
jmp
(bad)
(bad)
(bad)
inc
call
sub
pusha
retf
mov
and
xor
and
pop
pop
cmps
(bad)
(bad)
(bad)
dec
test
adc
xor
scas
mov
sbb
push
(bad)
(bad)
cld
cmp
adc
pop
mov
sbb
mov
push
mov
mov
ds
and
xchg
mov
daa
fild
icebp
sahf
xchg
mov
nop
(bad)
call
test
push
arpl
out
call
sbb
test
imul
daa
and
(bad)
xor
push
sub
mov
ret
mov
push
pop
and
push
cmp
stc
ss
inc
int3
std
rcr
cmc
or
mov
inc
test
(bad)
(bad)
(bad)
call
and
ret
dec
push
mov
add
fisttp
xor
inc
add
test
(bad)
jmp
sub
ds
shl
cmps
push
popa
(bad)
cmp
daa
inc
in
retf
test
pop
mov
int
pop
ror
iret
out
mov
jmp
sub
cmp
or
sub
(bad)
jmp
mov
mov
lea
pop
popa
not
mov
call
(bad)
(bad)
(bad)
jge
pop
cmp
inc
ja
fadd
lods
or
or
mov
sbb
jns
(bad)
(bad)
jg
scas
int3
push
inc
add
std
mov
and
shr
push
push
pop
(bad)
(bad)
(bad)
(bad)
mov
std
fs
pop
(bad)
dec
mov
stos
push
jnp
push
cdq
out
adc
je
(bad)
(bad)
dec
mov
loopne
loope
cmp
inc
or
mov
and
js
mov
push
push
inc
and
adc
and
ins
push
pop
in
and
inc
adc
or
jbe
addr16
mov
hlt
fnsave
aas
test
add
adc
addr16
(bad)
(bad)
dec
pop
mov
lock
inc
and
inc
test
cmp
ins
sbb
sub
or
jp
dec
xor
(bad)
(bad)
(bad)
mov
and
test
dec
popf
test
imul
inc
jne
mov
rcr
inc
mov
test
add
(bad)
je
mov
xchg
mov
mov
add
pop
cmp
dec
xchg
mov
push
nop
fwait
neg
jns
xchg
imul
test
add
fimul
(bad)
mov
add
fadd
pop
adc
fisttp
imul
jmp
sbb
jae
mov
cli
adc
push
fnsave
cmp
or
rol
sbb
fdivr
(bad)
call
inc
pop
mov
sar
cmps
mov
sar
test
not
js
adc
jbe
dec
data16
(bad)
(bad)
(bad)
(bad)
cmp
in
rcr
repz
push
cmp
mov
out
in
rcr
push
pop
sub
movs
popa
adc
inc
into
loopne
lea
pusha
fist
sub
mov
in
sub
stos
dec
enter
cmp
or
stos
add
xchg
sbb
mov
sar
pusha
cs
dec
ds
ret
call
cmp
sub
(bad)
(bad)
inc
call
mov
loopne
mov
dec
cmp
das
jbe
(bad)
jl
cmp
lock
fcomp
dec
cmp
(bad)
jg
jle
ret
imul
ja
and
les
fcomp
test
fisttp
inc
test
(bad)
(bad)
jmp
sbb
or
imul
dec
aam
pop
xchg
(bad)
(bad)
jmp
xlat
call
mov
push
movs
jmp
addr16
lods
lock
ror
hlt
xor
push
mov
mov
xchg
mov
and
and
push
sbb
mov
cmp
iret
mov
pop
out
imul
dec
mov
mov
aad
lods
inc
pop
adc
push
mov
dec
jmp
(bad)
(bad)
fldcw
adc
add
pushf
pushf
mov
pop
sbb
test
sub
(bad)
call
hlt
add
cld
mov
jne
loopne
sbb
movs
cmp
and
out
rcl
std
dec
iret
js
mov
mov
sti
fs
jmp
mov
lods
icebp
(bad)
(bad)
inc
sbb
ins
mov
jmp
shl
add
and
sbb
clc
ffree
or
call
repnz
inc
inc
pop
lock
mov
js
mov
jbe
add
lods
(bad)
dec
and
mov
test
mov
jne
sbb
arpl
mov
push
cld
mov
pop
ret
sbb
out
adc
imul
push
xchg
hlt
cmp
outs
(bad)
cmp
jp
push
jecxz
xchg
fmul
dec
(bad)
add
(bad)
(bad)
call
and
xchg
mov
pop
fldenv
inc
fistp
or
(bad)
(bad)
call
cmp
xlat
lock
push
jns
xor
movs
push
or
add
test
shl
pop
psubd
cli
push
xor
or
push
cs
(bad)
fist
clc
nop
std
inc
and
pop
jb
inc
aam
adc
daa
nop
or
adc
hlt
or
fild
inc
xor
inc
pop
push
(bad)
jg
call
inc
inc
(bad)
shr
jle
lods
add
test
inc
sbb
xchg
(bad)
cli
push
(bad)
mov
pop
push
fdivr
(bad)
(bad)
jnp
fs
imul
ror
and
or
sbb
add
sub
adc
pop
cdq
pop
pop
adc
aaa
dec
adc
adc
loopne
mov
adc
xor
pop
mov
hlt
(bad)
mov
(bad)
(bad)
call
mov
nop
sub
nop
or
(bad)
inc
inc
sbb
ds
adc
ret
push
push
(bad)
call
cld
test
and
aam
add
mov
dec
mov
jo
sbb
pop
lahf
push
(bad)
(bad)
mov
jo
stos
fcomp
dec
inc
fsubr
stos
pop
lea
and
cmp
(bad)
(bad)
jmp
mov
xor
or
fcomp
adc
mov
add
loopne
dec
pop
add
dec
test
pop
and
scas
loop
inc
(bad)
(bad)
(bad)
jmp
adc
je
cmp
ret
bound
stc
ror
pop
and
repnz
(bad)
(bad)
(bad)
call
mov
sbb
fsubp
push
jo
les
test
popa
add
fcomip
(bad)
(bad)
call
stos
jbe
adc
cmp
adc
mov
test
sbb
scas
(bad)
(bad)
(bad)
fistp
inc
mov
inc
scas
xchg
adc
jno
(bad)
jb
scas
mov
dec
jp
sbb
(bad)
(bad)
(bad)
push
cmp
dec
add
push
cmp
cld
cld
(bad)
adc
(bad)
jns
aam
push
pop
fisttp
hlt
(bad)
push
fadd
mov
lock
jo
hlt
cdq
sub
(bad)
(bad)
call
mov
in
jge
mov
sbb
pushf
test
rcr
sub
add
or
add
out
sbb
fwait
xlat
mov
fcom
inc
(bad)
(bad)
inc
mov
and
push
xor
add
or
stc
jl
lock
rol
(bad)
aas
and
jae
adc
iret
mov
(bad)
(bad)
(bad)
jg
sbb
call
scas
fmul
fcom
cmp
test
pop
inc
or
sbb
inc
(bad)
(bad)
(bad)
call
xchg
fstp
jno
cmp
mov
dec
loopne
aad
fisubr
inc
cmp
push
(bad)
(bad)
(bad)
dec
aas
ret
push
xchg
or
sti
mov
clc
mov
ficomp
add
mov
sub
sbb
ror
sbb
lahf
add
push
jg
jmp
push
add
jmp
push
in
push
popf
pop
dec
repnz
mov
adc
xchg
enter
add
psubq
hlt
inc
jbe
fs
mov
bound
test
and
mov
push
data16
pop
fs
jg
fcomp
es
fist
xor
in
or
sar
sbb
je
(bad)
inc
and
rcl
clc
dec
mov
mov
push
and
jne
sbb
push
push
xchg
mov
in
rcr
aaa
ret
or
clc
sti
push
jmp
(bad)
jmp
add
loopne
mov
int
add
inc
sbb
sub
push
mov
or
cmp
pop
pop
fild
or
jl
call
dec
es
or
test
push
rcl
dec
cli
mov
(bad)
call
adc
adc
add
push
sbb
cmps
cmp
mov
stos
xchg
out
repnz
and
push
mov
and
mov
jle
ret
retf
out
sahf
fcomip
jmp
jle
(bad)
cmp
pop
mov
or
and
clc
std
pusha
hlt
dec
loopne
cmp
(bad)
inc
imul
(bad)
loopne
dec
xor
cmp
aas
inc
xchg
push
pop
sbb
pop
outs
lods
mov
dec
test
sti
and
call
inc
xchg
or
(bad)
jmp
cwde
lods
ds
repz
repz
sbb
hlt
hlt
xor
jno
jg
or
std
cmc
outs
pop
sub
(bad)
jmp
fs
jo
push
jg
outs
pop
pop
cmp
xor
jmp
adc
and
sub
(bad)
(bad)
(bad)
call
push
sub
cmp
push
jecxz
push
inc
and
adc
pop
jne
mov
add
jmp
sar
mov
add
mov
xor
fwait
xchg
cmps
cmp
(bad)
(bad)
inc
loopne
sbb
imul
pop
xchg
add
sub
std
imul
jl
push
jmp
dec
jnp
cli
jne
(bad)
(bad)
mov
push
das
push
aaa
inc
fst
in
fucomip
or
daa
xor
xor
mov
jmp
cmp
push
pushf
pusha
xchg
repz
out
mov
and
mov
pushf
sets
xchg
call
(bad)
(bad)
(bad)
jb
in
xchg
hlt
ja
cmp
adc
js
push
ficom
mov
loop
mov
sub
cli
xchg
and
or
push
push
jb
out
scas
clc
aaa
sbb
push
aaa
retf
pop
pop
loope
into
push
(bad)
(bad)
jmp
adc
dec
adc
(bad)
fidivr
push
sub
je
dec
fcomp
adc
inc
outs
dec
xor
mov
pop
(bad)
dec
or
bound
sub
mov
jbe
(bad)
jmp
pop
nop
add
mov
cmp
ret
out
xchg
mov
mov
(bad)
push
jne
mov
add
mov
inc
mov
sub
sbb
cmc
or
jmp
(bad)
push
inc
xor
push
ds
(bad)
mov
mov
call
icebp
mov
jb
sbb
retf
sub
std
(bad)
pop
rol
loop
sahf
mul
out
(bad)
push
xchg
cwde
fs
jmp
repnz
out
out
rcl
ud2
outs
inc
or
bsf
outs
inc
ror
fcmovu
(bad)
(bad)
rol
pop
mov
sbb
sub
pop
mov
bswap
retf
int3
int
iret
out
inc
or
mov
outs
pslld
inc
or
mov
mov
mov
shr
mov
bswap
rsm
stos
lods
lods
dec
or
sub
out
clc
(bad)
jg
lods
sub
cdq
aam
push
push
daa
test
les
add
dec
add
call
sub
cmp
les
pop
in
add
out
cli
popf
push
daa
adc
jle
gs
add
jg
mov
aas
add
cmp
mov
mov
(bad)
mov
cdq
rol
ret
imul
ja
adc
jmp
and
test
jae
sub
jns
outs
loopne
xchg
ds
cmp
dec
jl
pop
adc
pop
in
jne
jae
add
add
jge
out
jge
movs
add
stc
fistp
sbb
or
(bad)
std
push
mov
mov
sub
hlt
adc
hlt
sub
rcr
clc
(bad)
fmul
or
push
add
dec
ins
adc
xor
call
jns
fisttp
in
fild
dec
rcr
add
inc
pop
cmp
fbld
call
mov
add
push
inc
dec
(bad)
push
push
cmp
dec
or
ds
add
add
inc
pop
mov
(bad)
mov
mov
pushf
fcom
jmp
xor
dec
xor
sub
sar
add
cwde
xchg
mov
and
call
std
sbb
add
mov
lds
js
(bad)
ins
xor
dec
(bad)
aad
lods
and
adc
xor
shl
inc
add
(bad)
stc
ror
iret
(bad)
cli
and
jle
aam
fwait
js
jmp
dec
sub
jne
or
inc
cmp
xchg
mov
pop
cmp
in
scas
xchg
xor
sub
mov
test
jg
push
push
or
ds
push
or
les
sbb
mov
push
gs
call
adc
add
inc
dec
test
retf
(bad)
(bad)
(bad)
call
jge
rcl
pop
ficomp
push
jb
rol
lock
nop
lock
div
cmp
fs
ss
sbb
and
(bad)
(bad)
(bad)
jle
xor
inc
inc
in
mov
pop
xchg
loopne
inc
adc
xchg
inc
test
repz
cmp
or
fistp
leave
mov
mov
dec
pop
(bad)
(bad)
(bad)
jg
nop
sbb
sbb
out
fnsave
adc
cmp
sub
or
xor
add
cs
(bad)
(bad)
push
add
out
add
push
and
popf
cmp
mov
sahf
adc
sahf
adc
call
pop
sbb
mov
out
and
sahf
imul
(bad)
(bad)
call
pop
add
push
dec
inc
mov
imul
push
gs
fist
add
lahf
xchg
xor
(bad)
(bad)
nop
outs
adc
iret
fstp
cmp
cmp
sbb
lock
inc
ds
inc
(bad)
(bad)
call
mov
leave
repz
pop
pop
sbb
pop
xor
mov
adc
(bad)
push
mov
fsubr
push
jb
mov
add
mov
ud2
xor
push
adc
leave
(bad)
(bad)
(bad)
inc
out
pusha
jae
push
jae
fmul
dec
and
xor
cmp
out
into
(bad)
xor
(bad)
inc
jo
add
or
fistp
ror
mov
adc
mov
(bad)
inc
cmovs
in
push
dec
popa
adc
jb
add
or
dec
ja
je
fcom
std
(bad)
dec
push
or
jo
outs
xor
ror
xor
(bad)
inc
xor
dec
add
dec
inc
inc
inc
inc
dec
xor
rcl
mov
dec
push
or
out
xor
jge
enter
mov
nop
inc
xchg
(bad)
(bad)
call
sub
sub
pushf
neg
cs
xor
aam
jbe
das
push
lock
in
xchg
and
int3
(bad)
call
mov
shr
loopne
or
push
(bad)
test
ror
enter
xor
push
or
sti
(bad)
jne
ss
(bad)
dec
mov
js
ins
xor
mov
dec
test
pop
pop
inc
fimul
pop
(bad)
(bad)
(bad)
mov
out
movs
add
outs
dec
pop
addr16
bt
xchg
inc
scas
arpl
xchg
(bad)
push
adc
enter
inc
bound
add
or
(bad)
mov
inc
(bad)
mov
mov
(bad)
fs
shl
mov
(bad)
(bad)
jmp
push
call
adc
fsub
sbb
jb
adc
repz
(bad)
inc
bound
push
mov
sahf
ins
sub
dec
gs
fsub
sbb
mov
push
in
adc
adc
cwde
fisub
adc
inc
(bad)
(bad)
sar
outs
push
sub
xlat
mov
in
mov
mov
(bad)
dec
inc
push
push
sub
arpl
outs
leave
or
xlat
xchg
sub
je
test
jmp
daa
or
rol
or
test
sub
(bad)
call
adc
or
dec
fsub
sbb
addps
enter
hlt
scas
pop
cmc
xor
cmp
or
retf
xchg
outs
cmc
(bad)
(bad)
(bad)
mov
push
cmp
and
aaa
cli
(bad)
fcomip
mov
pop
push
shl
gs
in
mov
movs
add
icebp
ins
sbb
(bad)
or
jmp
cwde
pusha
sub
shl
inc
xlat
and
out
ins
lods
pop
jg
(bad)
mov
mov
cmovbe
ss
out
pusha
adc
stc
push
jecxz
rol
(bad)
(bad)
dec
les
clc
dec
or
jae
imul
pop
or
sbb
pop
scas
xor
leave
arpl
inc
push
test
stc
ss
(bad)
(bad)
call
pushf
push
cmps
(bad)
out
adc
or
sbb
push
sets
push
adc
ja
dec
xchg
ret
xor
xchg
cmp
mov
mov
js
sub
push
jne
(bad)
(bad)
dec
mov
nop
ins
lahf
cdq
mov
inc
jne
fdivr
pusha
push
ror
pop
not
std
(bad)
(bad)
inc
bound
or
stos
daa
mov
jl
add
xlat
xchg
call
xchg
cmps
dec
push
xor
loope
addr16
jae
clc
test
fld
lock
sbb
das
lods
pop
fwait
je
cmp
(bad)
(bad)
push
inc
pop
mov
adc
pop
xchg
cmp
adc
lds
mov
dec
(bad)
mov
mov
fld
shl
cmp
mov
sub
(bad)
jmp
imul
fwait
data16
jo
(bad)
(bad)
(bad)
push
mov
mov
je
adc
add
or
pop
pop
repz
pusha
add
mov
xor
push
cmps
inc
push
loope
dec
push
or
jg
push
test
pop
mov
xchg
inc
mov
cmp
push
enter
add
mov
inc
mov
mov
sbb
push
dec
jae
inc
sub
pop
les
jae
loope
or
mov
js
xchg
mov
(bad)
call
(bad)
fbld
es
jmp
adc
call
ins
and
ss
push
rcl
lock
repnz
add
test
(bad)
(bad)
aas
cwde
fiadd
ds
jne
push
or
(bad)
dec
or
adc
call
jns
es
mov
xor
sbb
mov
arpl
(bad)
jo
adc
imul
adc
test
pop
cmc
jg
scas
in
dec
iret
mov
lods
or
jnp
pop
and
fmul
(bad)
mov
inc
dec
loopne
mov
lods
adc
or
(bad)
call
pop
or
ja
mov
add
mov
std
inc
aaa
and
dec
inc
pop
mov
cmp
sbb
stos
cmps
add
sub
jg
push
rcr
fcomip
push
push
push
push
popa
fwait
or
sahf
mov
adc
pushf
mov
add
push
push
fs
pushf
add
push
cmovl
inc
stc
in
sub
sub
and
add
leave
(bad)
push
mov
pusha
dec
dec
cld
clc
hlt
jge
push
xchg
jmp
jl
in
sub
push
fdivrp
stc
dec
lock
bswap
call
fcom
ror
enter
(bad)
call
lods
or
(bad)
test
pop
or
leave
pop
dec
rol
jb
std
pop
cld
jne
cmp
add
add
adc
out
repz
inc
nop
pushf
and
xor
movs
jb
cmp
jb
movs
mov
test
cmp
outs
ror
(bad)
mov
in
ja
inc
mov
xor
and
sbb
adc
ins
inc
mov
cmp
dec
pop
hlt
and
fdivr
mov
push
(bad)
ror
xlat
int3
pshufw
retf
mov
movs
mov
cmp
add
(bad)
jo
pop
out
push
add
setae
xchg
out
sar
setae
add
pand
pop
add
setne
loope
dec
xchg
lock
jb
fmul
mov
add
add
add
sidtd
add
push
into
rcr
sidtd
add
(bad)
jg
pop
xor
cmp
dec
sub
dec
int3
cmp
mov
out
push
cmp
xor
(bad)
sbb
xchg
fld
dec
mov
add
dec
cld
clc
fsub
mov
fild
xchg
add
setne
xchg
jno
pushf
mov
mov
loopne
fdivr
ins
mov
sbb
dec
divps
out
add
divps
lahf
jg
pop
pop
mov
leave
xchg
xchg
xchg
dec
cld
ds
repz
fmul
leave
mov
mov
mov
push
shr
jb
mov
mov
rcr
mov
enter
pop
dec
dec
dec
dec
push
shl
mov
push
mov
jb
sti
push
pop
nop
aaa
cmp
pop
hlt
xchg
xor
inc
sub
sub
mov
mov
add
out
out
stc
dec
cs
lock
add
sub
mov
mov
ret
inc
cld
call
das
cs
fdivr
neg
push
adc
adc
and
and
les
mov
push
cmp
(bad)
(bad)
mov
lea
clc
mov
inc
les
sahf
into
adc
mov
xor
(bad)
(bad)
push
push
add
and
jmp
ja
push
push
gs
sti
dec
cmps
or
or
aas
inc
push
mov
inc
pop
pusha
(bad)
xor
int
jae
pop
mov
sti
ins
cmp
imul
and
int3
jne
ret
adc
add
xchg
mov
pop
idiv
out
dec
pop
pop
inc
(bad)
inc
ja
imul
aas
cmp
push
push
add
imul
dec
call
xor
or
xor
sti
sbb
jb
push
dec
aaa
cmp
test
(bad)
dec
leave
push
mov
sub
dec
xor
sbb
push
js
(bad)
jg
stos
fcomp
and
cmps
repnz
mov
or
or
xor
aas
and
mov
and
dec
loope
(bad)
dec
cmp
and
mov
mov
aas
dec
outs
and
xchg
xchg
sets
mov
setle
mov
mov
mov
jo
jb
je
out
push
add
jl
test
retf
jg
popa
bound
sar
push
ins
ins
ja
sar
or
jns
pop
jb
sub
jne
fild
jne
in
push
call
sbb
mov
cwde
or
mov
loopne
dec
(bad)
(bad)
(bad)
call
pusha
data16
mov
call
clc
pop
ret
nop
push
push
or
add
add
sbb
call
out
fnsave
loopne
shl
jg
xchg
and
xchg
out
sbb
cmps
mov
fist
or
jmp
ret
ret
(bad)
(bad)
jmp
je
jp
xor
inc
pusha
pop
mov
cmp
loopne
nop
fnstsw
cmps
(bad)
dec
rol
adc
pop
dec
sbb
dec
(bad)
push
ret
mov
and
xchg
inc
mov
enter
push
dec
rol
and
mov
mov
(bad)
push
or
retf
pop
adc
adc
cmps
sub
or
adc
call
or
fiadd
or
pop
push
(bad)
(bad)
(bad)
call
mov
pop
xchg
add
pop
(bad)
ja
iret
scas
dec
sub
(bad)
mov
scas
dec
clc
dec
fimul
push
mov
test
cld
xchg
out
xchg
inc
add
xchg
jmp
dec
xchg
cs
(bad)
mov
xor
inc
shl
mov
mov
scas
nop
push
popa
sub
inc
lock
mov
xor
cmp
mov
mov
fdivr
dec
push
and
outs
mov
cdq
movs
sub
cld
jecxz
adc
inc
and
mov
mov
std
jle
cld
je
or
jne
inc
cmp
adc
add
ss
sbb
jle
idiv
jg
std
(bad)
(bad)
call
jne
ror
pop
add
jl
ret
mov
cmps
mov
call
xor
(bad)
(bad)
call
xor
add
or
jecxz
add
adc
popf
xchg
sti
out
adc
lea
or
mov
jle
aam
test
or
(bad)
(bad)
push
sahf
cdq
enter
mov
lock
push
push
test
push
nop
or
fisttp
(bad)
(bad)
push
mov
mov
adc
add
sbb
xchg
(bad)
aas
xor
fstp
sbb
adc
add
test
jb
jecxz
dec
in
push
add
sub
pop
imul
cld
(bad)
call
pop
add
pop
push
or
movs
mov
outs
shr
ror
pusha
pop
dec
cmps
(bad)
(bad)
call
fsubp
push
lock
push
ja
add
shr
and
inc
mov
lock
dec
inc
aad
ret
stos
dec
mov
cmc
xchg
ret
jl
cs
mov
inc
loopne
std
loopne
sbb
stc
or
pop
ret
arpl
add
arpl
(bad)
jmp
jmp
dec
ficomp
call
mov
repnz
push
xchg
and
mov
pop
mov
mov
sub
mov
mov
lods
(bad)
inc
call
sti
ret
sbb
push
dec
or
sbb
sub
jmp
push
inc
in
xchg
mov
sbb
mov
xchg
out
and
or
pop
mov
call
dec
mov
add
inc
jae
in
sbb
mov
lods
sar
clc
jmp
adc
enter
and
cld
pop
jl
lds
in
adc
(bad)
(bad)
inc
(bad)
sub
inc
inc
adc
les
repz
or
adc
or
or
int3
aaa
bnd
adc
pop
cmp
mov
push
leave
out
inc
sub
adc
xor
pusha
ins
xor
(bad)
jmp
(bad)
add
sub
add
call
leave
icebp
dec
jmp
vmovmskps
das
cli
inc
dec
jne
and
lods
stos
sub
xor
fcom
mov
imul
nop
pop
pop
daa
sub
xchg
inc
es
push
mov
into
add
gs
mov
sbb
xchg
push
sbb
or
dec
std
inc
dec
jbe
push
xor
jns
call
push
icebp
(bad)
(bad)
mov
test
inc
repnz
add
mov
pushf
xchg
shr
call
xor
fist
add
push
mov
push
sub
icebp
scas
inc
mov
sti
adc
jne
lock
mov
fdiv
jmp
add
test
pusha
fisttp
dec
mov
mov
push
sbb
(bad)
jmp
mov
pop
sub
(bad)
fadd
dec
mov
and
nop
ss
(bad)
(bad)
dec
push
faddp
ins
push
push
sub
mov
mov
pushf
pop
xor
(bad)
sbb
dec
enter
(bad)
cld
mov
ins
adc
fcomi
push
add
pop
sub
mov
lods
cli
pop
(bad)
xor
cmc
arpl
jecxz
push
js
xchg
cmps
add
(bad)
cmp
fwait
ds
inc
cmp
add
xchg
sbb
push
jmp
(bad)
push
shl
xchg
jo
pushf
nop
lock
test
dec
out
movs
(bad)
(bad)
(bad)
push
gs
or
and
xor
mov
enter
push
xor
(bad)
call
lds
xchg
pop
add
adc
inc
popf
loopne
or
dec
and
pop
lods
xchg
(bad)
(bad)
inc
daa
cmp
inc
leave
inc
outs
leave
add
add
mov
pop
outs
outs
mov
(bad)
jg
push
and
add
rcr
inc
and
pop
xor
retf
or
pop
lock
(bad)
add
enter
and
mov
(bad)
(bad)
push
pop
leave
test
das
retf
mov
lods
or
leave
cwde
movs
mov
and
leave
jmp
hlt
sbb
ja
dec
push
inc
jb
or
retf
mov
aas
push
stos
ins
xchg
nop
mov
or
retf
std
std
(bad)
dec
ror
push
push
das
add
in
and
mov
jo
cmp
(bad)
(bad)
push
inc
int3
push
push
test
sub
lds
pusha
in
rol
jg
cmc
sbb
and
ins
int
jb
dec
int
or
aam
mov
push
xchg
inc
ret
xlat
(bad)
and
out
in
inc
or
pushf
mov
(bad)
inc
xchg
movs
(bad)
int3
lods
mov
jbe
fs
jo
inc
jo
neg
(bad)
les
test
cmp
xor
dec
cmp
mov
das
movs
retf
jmp
xor
fadd
fiadd
div
inc
inc
int3
in
test
adc
ror
in
sub
mov
mov
clc
call
js
sahf
test
push
pop
mov
mov
xchg
pop
(bad)
(bad)
aas
sub
clc
rcl
cmp
setne
push
inc
and
adc
push
cwde
xor
and
adc
mov
mov
pop
inc
stos
or
xor
push
add
push
inc
pop
sub
lods
pop
test
std
(bad)
(bad)
fild
add
pop
add
xchg
cmp
xchg
adc
fisttp
test
push
cld
(bad)
(bad)
push
dec
xor
leave
jg
je
inc
fiadd
mov
push
xor
bound
movs
or
xlat
mov
scas
cli
pop
inc
sbb
sbb
(bad)
mov
sub
inc
shr
jecxz
std
inc
fisttp
push
jmp
addr16
int3
pop
in
cmps
or
lods
les
(bad)
mov
fdivr
pop
inc
mov
jb
sbb
xor
aam
jmp
add
pop
dec
movs
mov
test
adc
adc
ss
ins
sub
std
add
xchg
cmps
cld
in
ror
fisub
popaw
inc
imul
call
inc
mov
pop
scas
push
push
pushf
mov
rol
cld
xchg
push
or
(bad)
jbe
pusha
mov
sbb
cs
(bad)
scas
mov
jmp
pop
cmp
or
aas
inc
add
cmp
and
je
push
cld
(bad)
aas
shl
mov
hlt
push
enter
inc
mov
jmp
(bad)
mov
(bad)
and
xlat
cld
(bad)
(bad)
push
nop
sbb
or
retf
xor
outs
(bad)
out
pop
repnz
pop
scas
fsub
call
ss
or
lea
or
xor
je
mov
hlt
xlat
lock
dec
lods
ror
sbb
mov
rcl
xor
in
sub
and
fsubr
fstp
or
jo
pusha
push
sbb
dec
inc
lds
cli
sub
jo
fist
lods
fcomp
mov
lock
test
jg
or
fnstcw
(bad)
push
daa
in
andnps
repz
mov
in
std
ja
add
and
ficomp
or
add
or
(bad)
(bad)
(bad)
(bad)
fidiv
(bad)
int
jge
fidiv
das
adc
sbb
jne
mov
popa
inc
retf
push
inc
xchg
mov
or
(bad)
aas
sbb
sub
(bad)
(bad)
push
jo
mov
(bad)
push
adc
cmp
cmps
loopne
inc
add
inc
sub
(bad)
(bad)
(bad)
inc
js
mov
fisttp
(bad)
pushf
mov
fist
arpl
pop
pop
or
call
mov
add
push
jns
adc
es
dec
hlt
push
or
add
jle
(bad)
sbb
or
lds
loopne
jmp
mov
je
and
imul
sti
xchg
xor
movs
ins
imul
or
into
(bad)
cmps
outs
bswap
sar
jg
add
jo
jle
das
jo
aam
xchg
adc
or
imul
jae
dec
push
pop
mov
dec
dec
mov
push
idiv
daa
sub
mov
adc
sub
addr16
push
(bad)
mov
aam
or
add
push
mov
(bad)
(bad)
(bad)
inc
outs
push
int3
cli
loope
or
imul
sub
mov
inc
gs
xor
and
retf
icebp
sar
rcr
push
mov
call
je
in
sbb
pop
and
jb
iret
push
mov
adc
inc
jnp
and
ror
push
sti
aaa
rcl
lahf
fiadd
(bad)
(bad)
mov
and
dec
int3
push
shl
jne
xchg
cmp
jmp
and
sub
in
aam
test
es
enter
xchg
in
sub
(bad)
(bad)
call
sbb
dec
sub
or
push
xor
mov
in
lahf
xor
popf
adc
dec
sub
(bad)
(bad)
(bad)
call
xor
sub
and
mov
xor
cmps
pop
xor
ror
retf
cli
(bad)
jmp
cdq
fbstp
bound
xchg
pop
retf
or
jnp
mov
or
xor
pop
sahf
jmp
pop
jnp
or
mov
ins
aaa
loopne
pop
pop
icebp
clc
(bad)
(bad)
call
push
ss
xchg
xchg
jp
loop
adc
and
mov
outs
mov
in
mov
pushf
add
jmp
test
cld
jge
mov
repz
xor
std
dec
popa
push
int
std
test
std
(bad)
jmp
push
enter
push
jnp
jmp
jecxz
sub
in
jb
push
mov
cmc
cmp
sub
leave
pushf
pushf
sbb
(bad)
out
mov
(bad)
cld
and
shl
pop
cmp
jle
call
aad
dec
leave
sbb
mov
jmp
and
fwait
dec
sub
in
in
pop
mov
mov
in
inc
test
out
or
retf
out
pop
pusha
stos
das
lock
mov
rcl
fcmovnb
lock
imul
cli
dec
lods
inc
mov
fs
call
lea
(bad)
(bad)
(bad)
(bad)
mov
sub
outs
jo
in
mov
push
popa
xchg
push
mov
dec
push
(bad)
(bad)
(bad)
inc
fisttp
mov
popf
dec
mov
and
inc
pop
xchg
add
adc
stos
or
loope
imul
add
leave
push
lock
(bad)
(bad)
push
lods
mov
xlat
outs
xchg
jo
push
pop
mov
in
ret
add
stos
sbb
std
(bad)
inc
mov
cmp
sub
sbb
stos
mov
(bad)
out
clc
dec
adc
and
cmps
mov
xchg
mov
std
(bad)
(bad)
jmp
cwde
pop
jb
cmps
sub
or
add
inc
mov
cmp
leave
call
ja
xor
and
xor
int3
imul
loopne
dec
inc
mov
push
lahf
or
retf
add
jmp
outs
pop
xchg
test
rcl
mov
sbb
stos
jmp
dec
loopne
mov
cmp
cmp
or
mov
pop
adc
sub
sbb
dec
push
or
push
inc
(bad)
(bad)
(bad)
dec
and
mov
loop
jb
jns
test
inc
push
jbe
bound
outs
dec
xchg
add
call
or
pop
cmp
add
dec
or
(bad)
adc
daa
inc
add
adc
hlt
jmp
retf
lea
push
fld
in
lods
movs
jno
jo
inc
icebp
je
in
inc
xchg
shr
(bad)
(bad)
(bad)
cmp
mov
dec
and
and
and
or
xchg
enter
push
sub
(bad)
xchg
adc
fnstcw
aaa
sub
nop
sbb
adc
(bad)
jmp
push
enter
xchg
pushf
inc
pop
or
cwde
pop
pop
vpmacsdqh
je
push
aas
cmp
fs
fcom
xchg
jg
(bad)
inc
or
cmp
and
movs
xchg
and
cwde
sbb
popa
adc
sar
call
xor
fst
xchg
cmp
bound
xchg
push
and
movs
jbe
(bad)
jmp
cmp
add
sbb
or
arpl
cdq
adc
push
es
cld
(bad)
(bad)
push
imul
clc
imul
push
adc
mov
jg
dec
pop
sbb
(bad)
(bad)
(bad)
jg
ret
int3
in
and
mov
rcr
cmp
jbe
jne
xchg
and
mov
dec
(bad)
cwde
daa
mov
adc
(bad)
call
fstp
ret
(bad)
(bad)
jmp
inc
mov
dec
pop
push
pop
or
sub
(bad)
(bad)
(bad)
(bad)
jmp
test
movs
pop
movs
sahf
mov
jmp
add
inc
call
sbb
outs
cli
test
fstp
sahf
cmp
xchg
inc
or
add
je
or
(bad)
repnz
cmp
cmp
add
adc
(bad)
call
fimul
ja
xchg
dec
pop
add
or
jg
rol
inc
mov
push
ins
ss
std
add
movs
mov
pop
call
xchg
push
gs
(bad)
(bad)
call
mov
bswap
test
cs
scas
retf
pop
std
not
inc
movs
out
inc
mul
clc
push
pop
pop
mov
(bad)
stc
fs
retf
add
(bad)
dec
xchg
push
test
psraw
aaa
data16
mov
push
bound
mov
mov
call
xor
mov
(bad)
mov
and
xor
retf
test
adc
sub
add
dec
(bad)
jmp
jae
xor
adc
fwait
adc
mov
aaa
pop
mov
adc
ret
pop
dec
xor
pop
xor
push
(bad)
adc
ins
inc
cli
(bad)
(bad)
call
mov
hlt
movs
lods
add
scas
mov
xchg
add
xor
push
and
cmp
stos
out
clc
bound
mov
jbe
aam
sub
pop
mov
test
ror
hlt
jne
mov
or
add
lds
sar
aaa
cmps
jl
push
sub
pop
cmps
je
(bad)
(bad)
call
and
pop
and
inc
test
jmp
test
ja
cli
aaa
popa
jg
dec
xchg
xchg
dec
gs
push
in
add
jno
ret
sbb
or
sub
xlat
xchg
jl
jns
stos
pop
adc
jno
shl
lods
lods
jecxz
je
xchg
mov
or
not
inc
sub
jne
pop
repnz
add
xor
sbb
call
pushf
fiadd
cmps
(bad)
sub
loopne
mov
sub
inc
cmp
(bad)
(bad)
(bad)
mov
scas
iret
enter
sti
iret
adc
sbb
add
(bad)
(bad)
(bad)
mov
mov
jo
inc
cmp
push
inc
iret
ret
push
repz
fsubr
cmp
subps
(bad)
(bad)
push
sub
xchg
pop
test
repnz
sub
adc
ss
push
push
sub
(bad)
(bad)
jmp
jmp
in
push
daa
jmp
fchs
inc
shl
push
sbb
add
sub
daa
(bad)
call
pushf
sbb
push
pop
dec
sbb
sub
mov
(bad)
cmps
pop
and
nop
(bad)
(bad)
(bad)
inc
or
cwde
adc
ja
shr
cmovle
mov
cld
inc
push
out
sbb
stos
lock
sbb
loop
xor
push
mov
cs
mov
jl
test
add
jmp
xchg
(bad)
dec
mov
cmp
inc
push
out
ret
(bad)
(bad)
(bad)
inc
(bad)
std
dec
std
and
or
ret
dec
mov
movs
in
pop
inc
pop
or
(bad)
inc
xor
sbb
add
data16
push
(bad)
out
shl
jo
dec
in
add
outs
jl
call
call
xor
push
adc
pusha
fst
inc
push
xchg
popa
loope
pop
lods
or
(bad)
jmp
push
add
push
sub
sub
sub
(bad)
jmp
xchg
push
enter
dec
sub
add
jnp
sub
dec
xchg
call
(bad)
jg
mov
push
aam
hlt
mov
outs
xchg
adc
add
cmp
jno
loope
jl
call
test
mov
and
mov
imul
add
in
rcl
mov
jno
jno
cmc
(bad)
mov
or
and
pop
jns
pop
cmp
int
call
fistp
test
add
verw
(bad)
(bad)
lods
dec
ret
repz
push
std
push
dec
fdiv
push
add
inc
movs
sti
push
mov
push
cmp
mov
push
popa
and
jb
scas
call
imul
fiadd
push
jecxz
adc
jmp
(bad)
jmp
lds
inc
add
push
mov
pop
fnstcw
cmp
(bad)
(bad)
jmp
lock
xchg
push
mov
xchg
outs
add
add
mov
push
and
mov
add
(bad)
(bad)
push
stos
ret
jne
add
retf
adc
pusha
push
jne
jne
inc
add
(bad)
idiv
pop
add
cmp
icebp
dec
std
mov
pop
pop
push
dec
xor
xchg
fild
(bad)
xor
das
in
sbb
dec
inc
and
(bad)
(bad)
jg
push
mov
cmp
fdiv
or
mov
(bad)
in
inc
add
xchg
stos
outs
or
add
xchg
push
lods
pop
test
in
adc
push
sbb
adc
clc
push
fs
ins
in
fistp
add
pop
outs
jmp
cli
jecxz
xor
enter
or
(bad)
(bad)
call
xchg
adc
adc
mov
xor
ror
scas
clc
jmp
(bad)
or
dec
sbb
dec
ja
shl
call
mov
mov
jbe
sub
mov
fistp
sub
xchg
mov
mov
arpl
and
or
jmp
clc
ins
jle
push
ret
mov
xor
jb
mov
dec
jmp
sar
jns
mov
add
and
adc
(bad)
(bad)
push
and
and
add
jne
pop
imul
xlat
mov
jmp
std
pop
hlt
inc
test
(bad)
and
inc
adc
or
sbb
(bad)
(bad)
(bad)
call
pop
shl
push
(bad)
jmp
(bad)
pop
cmp
jns
out
add
lock
outs
(bad)
(bad)
inc
jg
loopne
pop
out
(bad)
mov
leave
push
cmp
xor
inc
push
lea
loop
add
test
arpl
push
sbb
and
test
shr
add
call
jg
cmc
and
sar
jg
inc
inc
bound
cld
cs
mov
dec
push
shl
and
xchg
xor
inc
inc
fild
pop
mov
iret
and
cld
outs
pop
(bad)
jecxz
pop
data16
adc
ret
jne
test
cli
call
sbb
adc
pop
sub
xchg
sub
fisttp
cmp
popf
inc
inc
outs
out
and
cdq
inc
inc
dec
into
inc
stos
jb
push
ficom
hlt
sub
cli
mov
push
mov
call
push
or
sti
lahf
inc
outs
sub
push
icebp
aaa
or
call
stc
push
jg
and
and
mov
cmp
fdiv
or
adc
gs
mov
xchg
xor
neg
ret
(bad)
mov
xor
push
mov
cmp
(bad)
call
jb
sub
test
xchg
hlt
jmp
fdiv
out
dec
jge
mov
jmp
or
and
bound
jl
or
mov
and
push
and
sbb
(bad)
(bad)
call
outs
and
xchg
pop
or
mov
jno
enter
arpl
jmp
pop
pop
call
int
loop
fmul
call
dec
or
sbb
sbb
add
pop
or
fiadd
pop
or
push
and
loop
lods
mov
or
(bad)
(bad)
(bad)
push
inc
ret
inc
jo
dec
push
mov
adc
push
sub
mov
sbb
sbb
or
clc
fcom
aaa
mov
jp
adc
(bad)
(bad)
(bad)
(bad)
cmp
dec
ret
xor
or
mov
ss
in
mov
add
dec
sub
stos
sbb
cmp
jmp
jecxz
adc
(bad)
xchg
in
xchg
add
test
mov
leave
retf
jmp
or
push
jp
and
call
mov
mov
ret
popa
sar
call
es
jno
mov
or
and
inc
jo
cmp
outs
(bad)
push
mov
and
stos
or
outs
xlat
inc
loop
xchg
hlt
or
mov
sbb
(bad)
push
or
or
(bad)
(bad)
call
nop
add
test
jb
fst
cmps
jo
retf
jmp
adc
dec
xor
hlt
push
inc
or
and
xchg
mov
cld
and
in
push
sbb
mov
inc
or
pop
push
push
(bad)
mov
pop
adc
sbb
rol
ret
mov
jl
mov
dec
outs
(bad)
dec
repnz
sub
std
inc
push
xlat
add
push
es
xchg
repz
(bad)
(bad)
mov
imul
inc
cdq
movs
jo
adc
sbb
(bad)
call
jecxz
movs
add
cmps
jmp
test
mov
push
imul
xchg
rcr
loop
fsubrp
inc
pop
inc
call
jmp
jne
adc
mov
pop
or
fwait
and
adc
cmp
(bad)
(bad)
(bad)
std
fcmovu
mov
(bad)
test
and
sub
enter
movs
cmp
bound
add
inc
adc
js
loope
add
call
scas
cmp
(bad)
(bad)
inc
std
aad
je
xor
call
fcom
jb
dec
xchg
pop
test
adc
aaa
out
loop
(bad)
call
fcmovb
add
in
add
cmp
add
gs
test
mov
inc
inc
inc
(bad)
mov
(bad)
(bad)
inc
xor
jns
aaa
add
test
pop
jne
iret
and
jl
mov
and
and
loope
call
inc
(bad)
(bad)
jmp
sahf
out
mov
pop
(bad)
test
mov
or
(bad)
jg
inc
fpatan
mov
in
adc
mov
lock
adc
scas
clc
or
(bad)
js
add
hlt
mov
mov
push
xchg
rol
jecxz
adc
xchg
(bad)
inc
fist
mov
mov
int
push
in
cmp
into
icebp
dec
test
scas
or
push
(bad)
das
or
pop
jns
push
sbb
dec
test
clc
or
inc
pushf
add
mov
(bad)
(bad)
push
es
mov
cdq
mov
cdq
lods
dec
scas
in
jmp
jbe
scas
and
xor
mov
sahf
mov
aaa
mov
mov
call
call
aad
mov
add
sbb
cmc
(bad)
(bad)
push
ins
clc
jb
ret
adc
pop
and
mov
lahf
scas
and
mov
jne
dec
push
sbb
jo
cmp
nop
sar
push
hlt
rol
xor
test
je
mov
(bad)
jmp
ret
aas
imul
pop
or
push
add
push
push
and
dec
xchg
(bad)
(bad)
(bad)
inc
inc
add
and
push
or
mov
fcompp
push
add
adc
nop
sar
(bad)
sti
in
and
fisttp
fistp
sub
imul
clc
xlat
sub
cmp
scas
das
xchg
mov
push
mov
mov
xor
cmp
mov
cld
push
cmp
aas
fsub
jmp
(bad)
cmp
and
sbb
in
sbb
push
enter
sar
sbb
xor
adc
xchg
(bad)
push
xchg
push
imul
add
dec
sub
sbb
loope
cdq
cmp
(bad)
call
push
xor
inc
out
lea
in
xchg
cmp
and
pop
aaa
(bad)
int3
mov
jbe
inc
push
push
pusha
xor
cmp
call
and
hlt
add
rcl
mov
add
mov
(bad)
(bad)
out
and
int3
xor
add
inc
adc
pusha
or
rol
imul
cmps
adc
push
cmps
push
mov
nop
jo
and
aas
outs
imul
outs
nop
inc
inc
push
inc
fmul
(bad)
and
lahf
dec
xor
mov
test
lock
rcr
into
adc
addr16
(bad)
(bad)
(bad)
mov
shl
ret
das
jmp
push
jl
add
cld
inc
sub
sub
add
mov
inc
js
xor
or
mov
js
fist
test
push
dec
aaa
mov
push
ror
je
pop
or
mov
(bad)
cmp
pop
bound
mov
outs
loope
cmp
neg
stos
cmp
jg
nop
iret
push
inc
dec
setne
cmp
adc
(bad)
(bad)
call
push
dec
adc
in
jg
mov
mov
and
push
pusha
cs
(bad)
mov
dec
xlat
pop
xor
mov
inc
(bad)
test
pop
scas
fdivr
add
fcom
(bad)
(bad)
(bad)
call
mov
(bad)
adc
sahf
mov
adc
mov
daa
shl
push
or
(bad)
(bad)
push
or
ret
div
add
mov
xchg
pop
ja
add
jb
mov
sbb
(bad)
inc
(bad)
(bad)
mov
sbb
pop
pop
adc
mov
retf
add
mov
cdq
sbb
fmul
inc
sbb
adc
adc
sub
pop
in
push
scas
add
(bad)
(bad)
(bad)
(bad)
mov
push
xchg
lods
ficom
sbb
test
stos
cdq
in
ins
push
sbb
jmp
addr16
add
das
(bad)
xchg
repz
adc
hlt
pop
std
push
fbld
cmps
ja
jo
scas
pop
test
add
outs
and
call
lods
enter
mov
movs
push
stos
xor
scas
and
int
sub
rol
mov
(bad)
jge
push
data16
and
lock
test
pop
xchg
and
dec
dec
pop
xor
inc
enter
sbb
lods
inc
pushf
pop
fwait
or
std
pop
push
mov
inc
(bad)
(bad)
(bad)
(bad)
jp
call
add
ds
dec
add
jmp
pop
imul
call
add
cdq
mov
pop
inc
dec
and
sub
xchg
cmp
sbb
fistp
adc
or
fcomi
scas
pop
dec
or
loop
xchg
mov
add
jl
sar
push
mov
cmps
nop
adc
lods
jmp
popa
and
stos
adc
push
loopne
in
test
movs
scas
ret
fdiv
adc
inc
outs
xchg
xor
push
ja
pop
(bad)
(bad)
jmp
mov
and
xchg
mov
jns
mov
jnp
mov
dec
or
mov
cmps
(bad)
(bad)
dec
sbb
mov
test
stc
and
push
jg
(bad)
(bad)
mov
xor
push
dec
mov
js
in
jo
sub
cs
stos
lea
inc
js
adc
ret
dec
mov
add
sbb
inc
adc
(bad)
cmp
imul
outs
and
rol
add
(bad)
jbe
pushf
es
push
adc
(bad)
inc
jl
test
inc
mov
sbb
push
stos
outs
mov
jbe
imul
pop
int3
pop
or
xor
and
and
outs
add
ss
jl
rdseed
(bad)
jg
rcr
daa
add
xchg
push
push
hlt
(bad)
js
jns
cld
push
movs
in
sti
imul
mov
mov
sbb
inc
inc
ret
in
dec
ret
add
mov
adc
pop
adc
adc
sar
pop
xor
sbb
cmps
or
(bad)
mov
add
(bad)
(bad)
(bad)
inc
or
push
fiadd
cmp
hlt
pusha
push
push
mov
mov
data16
cmp
sti
pushf
jg
adc
(bad)
bound
push
aam
stos
add
push
xor
xchg
(bad)
dec
push
sub
test
out
mov
mov
sbb
(bad)
dec
cmp
and
cmp
mov
mov
clc
(bad)
dec
xchg
mov
xor
sar
jecxz
add
sub
mov
and
or
(bad)
(bad)
jmp
dec
fpatan
movs
or
movs
mov
rol
pop
pop
pop
aas
bound
into
cmp
(bad)
(bad)
jmp
cmp
(bad)
sub
push
and
fcmove
sbb
stc
mov
(bad)
cmp
mov
push
outs
sub
sbb
mov
mov
and
push
(bad)
(bad)
(bad)
(bad)
cmp
enter
push
pushf
and
test
add
shl
(bad)
mov
cmp
iret
cmp
jp
add
add
jmp
call
cmp
data16
rol
cmp
sub
xor
test
pop
sbb
push
(bad)
(bad)
(bad)
mov
push
push
sbb
movs
mov
and
sbb
adc
js
pop
test
(bad)
fisttp
sub
sub
(bad)
(bad)
(bad)
(bad)
jmp
sub
mov
push
pop
pop
pushf
push
cdq
dec
jbe
adc
mov
mov
sbb
repnz
mov
and
sbb
loopne
sbb
pop
pusha
mov
(bad)
jg
mov
lock
imul
inc
popf
xor
sbb
icebp
add
call
adc
xchg
and
inc
push
xor
cs
aad
jg
mov
ror
add
sub
or
call
lods
and
stc
sub
popa
mov
push
mov
enter
pop
lock
pop
sbb
jge
mov
shl
sub
inc
cwde
(bad)
(bad)
(bad)
dec
cmp
(bad)
aad
lock
and
pop
(bad)
nop
dec
imul
and
je
(bad)
(bad)
push
cmp
pop
aas
pop
fnstenv
xor
ins
mov
lock
jmp
fcomp
dec
jne
dec
pop
sub
jmp
inc
mov
cld
or
pop
mov
scas
and
scas
jge
mov
aas
add
mov
ret
sar
(bad)
call
call
loope
bound
inc
xchg
sti
ja
rol
lock
and
adc
or
(bad)
(bad)
(bad)
dec
add
mov
sub
jp
js
and
jnp
sub
inc
stc
jg
push
ror
inc
ret
pusha
ficomp
xchg
mov
adc
nop
cmp
(bad)
(bad)
das
jge
xchg
xchg
pop
mov
xchg
add
fild
loop
sub
jne
loop
dec
sub
xor
mov
mov
inc
out
cmp
xor
adc
cmp
inc
fild
and
call
pcmpgtw
js
or
mov
jmp
addr16
mov
js
add
fs
neg
cmp
adc
push
sbb
mov
(bad)
(bad)
dec
sub
icebp
mov
nop
mov
aad
xchg
or
adc
mov
cmp
xor
and
jecxz
rcr
or
fbstp
xchg
xor
jo
shl
and
shl
add
xchg
adc
inc
pusha
add
call
jo
mov
(bad)
(bad)
push
and
clts
adc
push
xor
xchg
adc
push
ja
loop
enter
cmp
adc
call
daa
popa
mov
jb
pushf
mov
push
out
mov
sub
inc
clc
mov
das
loopne
push
sub
retf
test
mov
push
sar
cmps
push
sbb
add
pusha
adc
or
inc
(bad)
cmp
sar
add
mov
adc
(bad)
(bad)
(bad)
jmp
out
dec
mov
push
sub
pop
dec
jge
and
ins
fwait
daa
add
shr
adc
sub
fbld
out
xor
cs
stos
xor
fwait
call
mov
mov
(bad)
fistp
jle
jmp
sbb
xchg
idiv
dec
cmp
mov
jns
loop
fdiv
inc
jmp
cmp
sub
cdq
sub
ret
mov
ds
and
pop
pop
leave
retf
fsub
hlt
aas
fdivr
push
cli
rol
sbb
fistp
jne
fsubr
inc
imul
pop
pusha
loop
fisubr
adc
sub
shl
fistp
call
mov
and
cmp
daa
mov
add
cs
sar
(bad)
dec
repz
mov
daa
push
push
push
sbb
jno
push
pop
fisubr
ins
adc
jg
push
and
enter
sub
jge
(bad)
dec
shr
sub
xlat
jmp
test
ret
aas
int
or
(bad)
inc
push
imul
jo
je
jno
jmp
(bad)
call
mov
mov
xor
stc
mov
pop
jmp
loop
(bad)
and
push
mov
sbb
ja
mov
sub
outs
fdiv
inc
(bad)
(bad)
(bad)
jmp
fdivr
bound
jmp
or
pop
jecxz
fdivr
or
repz
jb
aas
sub
std
in
inc
fild
or
add
daa
js
sbb
fstp
dec
lods
jp
push
mov
or
mov
xor
xchg
es
repz
test
js
(bad)
push
jno
pop
or
pop
fs
in
dec
mov
mov
adc
add
call
or
je
call
mov
je
or
(bad)
jo
and
shl
jo
mov
push
div
jne
fcomp
pop
add
call
and
(bad)
call
mov
cmp
pop
add
dec
iret
pop
xlat
cmc
adc
ret
(bad)
jg
and
pushf
xchg
sub
test
lock
jl
ror
pushf
sbb
int3
push
jb
scas
andnps
inc
or
jmp
dec
adc
add
stos
xchg
cli
fist
test
or
cmp
xchg
and
loopne
add
or
call
paddusb
or
add
push
mov
shl
pop
(bad)
(bad)
call
add
sub
rcr
cmp
sbb
mov
fdivr
nop
jbe
cmp
les
data16
out
adc
xchg
mov
clc
call
mov
es
cmp
idiv
pop
cmc
jge
cwde
lock
push
ds
dec
jge
xchg
cdq
pop
(bad)
jg
jmp
fcmovu
les
sar
ret
add
sub
fild
or
cs
pop
pop
test
adc
shl
hlt
jmp
inc
fucomp
fbld
je
(bad)
(bad)
mov
js
ins
mov
add
outs
imul
mov
mov
push
retf
push
sub
sub
test
sti
xor
inc
push
inc
lods
or
push
jmp
mov
in
pusha
das
mov
xchg
xor
or
dec
push
(bad)
xchg
xchg
fwait
(bad)
sub
xor
data16
mov
push
sar
stos
neg
and
(bad)
je
jge
je
sahf
and
cmc
adc
and
fisttp
push
stos
xor
test
pop
hlt
or
pop
xchg
mov
inc
sub
sub
test
call
adc
test
dec
ins
ret
jg
retf
jmp
adc
in
retf
jae
or
cs
hlt
mov
and
sbb
mov
mov
mov
dec
lock
(bad)
dec
lock
loop
jp
mov
je
and
in
and
add
int3
ss
(bad)
dec
inc
jne
jno
mov
stos
adc
jne
mul
inc
ja
sbb
cli
(bad)
mov
and
or
lea
loopne
mov
push
or
or
adc
stos
test
sub
movs
les
mov
sub
sub
and
mov
(bad)
stc
adc
and
sub
inc
sub
sub
es
es
sbb
and
sub
(bad)
mov
outs
adc
jmp
push
sub
sub
(bad)
ret
sar
mov
adc
(bad)
add
jmp
or
adc
xchg
inc
ja
adc
and
and
or
idiv
stos
jmp
clc
adc
push
cmp
pop
or
add
jg
(bad)
fld
sub
inc
in
(bad)
adc
inc
jl
jmp
cmp
add
loope
add
sub
inc
mov
push
das
(bad)
cmps
cld
xor
scas
cli
clc
dec
lods
aad
adc
pusha
add
call
jg
cld
data16
cmp
and
aad
adc
in
sbb
jmp
cmps
hlt
ins
mov
push
mov
stc
call
cli
sub
cmp
cmovb
or
mov
inc
call
push
and
out
pusha
xor
(bad)
(bad)
fbld
push
push
mov
xor
das
dec
adc
(bad)
dec
push
hlt
shr
mov
or
loopne
add
sbb
ret
dec
cmp
jl
fdivr
jg
call
pop
push
pop
ror
into
mov
and
add
jno
mov
test
or
mov
(bad)
mov
adc
push
inc
sub
push
mov
(bad)
mov
sbb
mov
xchg
test
or
adc
aam
cmp
mov
fs
sub
and
sbb
sbb
sub
cli
or
inc
sub
aas
jg
cmp
inc
or
jmp
add
pop
into
cmp
div
add
jmp
mov
sbb
adc
fs
dec
scas
stos
test
and
cwde
outs
mov
rol
fwait
sti
call
and
out
push
mov
or
call
jle
daa
mov
ret
mov
pusha
jne
inc
sbb
dec
push
fidivr
push
mov
loop
sbb
or
xor
pop
inc
push
adc
fchs
xor
xchg
mov
inc
pop
fs
mov
xor
add
sub
push
add
or
dec
add
add
cmps
mov
call
add
jmp
adc
in
mov
cmp
cli
xchg
jb
add
(bad)
(bad)
jmp
adc
and
arpl
push
xlat
xchg
jb
ss
jp
call
jecxz
sub
push
inc
movs
and
movs
mov
xchg
test
mov
es
sbb
retf
outs
and
(bad)
(bad)
jmp
fsub
mov
loopne
sar
mov
adc
dec
scas
lea
addr16
or
and
sub
loopne
xor
inc
xchg
add
ja
and
add
ror
shr
adc
lahf
imul
xor
pop
sub
and
inc
add
mov
xchg
inc
call
mov
dec
(bad)
(bad)
(bad)
jmp
add
xor
test
popa
push
call
mov
scas
adc
or
xor
in
mov
adc
pop
std
inc
loopne
scas
jl
add
addr16
ds
bound
xchg
inc
fmul
cli
push
xchg
stc
inc
int3
xor
(bad)
(bad)
mov
imul
cdq
(bad)
imul
mov
cmp
dec
ins
fild
xor
fidiv
mov
enter
mov
sti
pop
cld
movs
add
push
stos
dec
inc
sbb
call
mov
add
aas
mov
pushf
adc
shl
(bad)
jmp
push
push
cmp
pop
out
xor
and
mul
outs
sbb
dec
adc
add
(bad)
stos
jle
cmp
ins
not
icebp
sbb
push
(bad)
(bad)
(bad)
jmp
frstor
sub
les
cld
movs
jg
scas
sub
mov
ror
pop
test
(bad)
lods
add
neg
in
cld
pusha
and
jb
or
sti
ins
adc
adc
jle
sti
outs
setno
mov
mov
enter
hlt
inc
push
loopne
mov
aas
xchg
inc
call
neg
or
push
sbb
(bad)
dec
ds
sub
pop
popa
ds
add
ret
or
out
jnp
rol
std
inc
ja
les
push
std
cdq
xchg
fcom
ret
mov
std
push
xchg
popa
adc
ss
fcom
pop
js
dec
ret
and
dec
pop
(bad)
mov
(bad)
stos
adc
(bad)
mov
ror
inc
inc
pop
inc
fild
es
data16
popa
ja
xchg
loope
(bad)
(bad)
(bad)
aas
movs
inc
add
push
add
and
jge
shl
lods
mov
les
jmp
or
dec
sub
cmp
or
div
(bad)
(bad)
(bad)
jmp
mov
pop
sbb
mov
movs
in
cmp
ss
sub
xor
test
(bad)
inc
ds
mov
sbb
adc
fsubr
cmp
jb
sbb
outs
in
adc
sbb
pop
xchg
(bad)
fbstp
sbb
lock
and
(bad)
(bad)
call
call
add
pop
(bad)
jbe
cmp
fwait
xor
mov
outs
cmp
inc
cld
mov
neg
or
or
dec
sub
and
jg
das
test
clc
mov
sub
(bad)
cmp
inc
out
push
adc
inc
ret
jg
adc
and
xchg
sub
(bad)
(bad)
jmp
pop
add
xor
xor
lods
js
fisubr
jg
inc
push
in
adc
and
adc
xor
or
mov
jmp
ficom
loopne
cmp
std
(bad)
(bad)
dec
sbb
(bad)
lock
leave
ret
pop
dec
es
sbb
dec
add
or
or
loop
push
(bad)
jg
or
add
clc
inc
in
(bad)
std
shl
jg
out
jne
ja
(bad)
jg
fs
lea
or
(bad)
jb
push
cld
cmps
(bad)
fldcw
pop
sub
push
outs
outs
pop
dec
xor
xor
push
(bad)
(bad)
(bad)
(bad)
jge
pop
sub
hlt
neg
jns
loop
(bad)
mov
call
jg
and
iret
addr16
call
sbb
(bad)
(bad)
(bad)
dec
repnz
in
test
adc
imul
jae
les
pop
lea
xchg
(bad)
call
ret
mov
add
jmp
les
xchg
pop
push
push
inc
or
pop
cli
fcomip
dec
or
test
sti
jno
cmp
pusha
(bad)
(bad)
dec
scas
push
or
mov
clc
inc
inc
xor
xchg
(bad)
jmp
push
call
in
outs
int
fwait
sbb
(bad)
(bad)
(bad)
dec
add
aaa
iret
imul
jno
out
sbb
es
add
mul
adc
(bad)
(bad)
push
or
fst
jg
adc
mov
cmp
stos
loop
inc
(bad)
(bad)
(bad)
sub
add
jne
rcr
sub
in
aam
pop
cmp
std
mov
(bad)
inc
add
movs
mov
add
das
daa
test
nop
dec
aam
(bad)
(bad)
(bad)
jg
leave
pop
ret
inc
(bad)
rol
int
pushw
clc
std
mov
xor
add
fnsave
sbb
and
inc
pop
hlt
mov
inc
mov
test
or
push
fxsave
icebp
(bad)
(bad)
jmp
sub
data16
out
int3
arpl
fcmove
imul
pop
jmp
jmp
aad
jmp
es
mov
or
pop
inc
ins
push
fsub
pop
ss
fs
push
test
sbb
and
mov
jmp
xchg
cli
mov
cmp
dec
or
xor
cwde
mov
int3
sbb
cmps
add
add
movs
ficomp
add
retf
mul
cld
(bad)
call
mov
jb
rcr
sbb
cmp
push
cmp
std
fbld
jl
retf
cld
aas
jno
loope
shl
pop
push
mov
push
pop
push
call
and
cmps
out
mov
or
bound
adc
inc
mov
call
push
in
ss
inc
scas
nop
out
fcomp
lock
call
adc
in
int3
or
out
push
ja
jo
sbb
in
mov
test
lahf
adc
call
in
(bad)
push
(bad)
(bad)
(bad)
inc
cli
mov
pop
popf
jo
mov
jae
mov
and
imul
(bad)
jmp
cmp
shl
sbb
inc
pop
and
ficom
in
xor
mov
lods
jo
inc
call
cwde
or
push
mov
sub
mov
adc
xchg
adc
shr
mov
bound
jmp
sub
popa
je
sub
sbb
imul
dec
sar
(bad)
jp
aam
movs
mov
mov
cmps
jge
mov
sahf
push
test
jg
jne
jne
pusha
scas
les
add
push
mov
(bad)
call
or
xor
pop
mov
dec
xor
dec
fldcw
or
int3
imul
outs
sub
cli
sbb
jmp
outs
mov
or
mov
fmul
div
or
inc
mov
add
aaa
inc
scas
in
test
dec
leave
and
add
repnz
push
or
xchg
div
leave
test
(bad)
(bad)
(bad)
jmp
xor
aam
js
into
sbb
and
iret
mov
xchg
inc
or
add
(bad)
call
aaa
nop
add
lock
fmul
iret
pushf
pop
jmp
and
enter
or
(bad)
push
std
hlt
mov
or
popa
and
dec
mov
shl
mov
(bad)
(bad)
(bad)
dec
sbb
mov
out
loope
in
or
or
jmp
push
clc
inc
retf
add
loop
hlt
fcmovnbe
les
mov
pop
lock
fs
cdq
pop
cld
(bad)
mov
dec
cwde
pop
das
mov
js
jmp
cmps
dec
test
ja
(bad)
dec
dec
adc
add
add
fnsave
adc
aas
sub
cmp
call
inc
call
xchg
pop
(bad)
inc
sbb
das
cmp
dec
mov
or
add
xor
or
(bad)
inc
inc
int3
fs
sbb
inc
push
lds
call
out
test
and
add
(bad)
clc
mov
and
aad
mov
adc
(bad)
les
fld
inc
scas
rcr
lea
inc
ret
jns
xchg
push
test
(bad)
inc
inc
inc
(bad)
mov
add
adc
adc
xchg
loope
push
into
or
or
(bad)
(bad)
fild
inc
mov
cmp
inc
cmps
lock
pushf
mov
bound
nop
sbb
mov
(bad)
call
lods
and
data16
adc
jb
aas
sbb
push
cmp
idiv
mul
pop
mov
js
sub
add
(bad)
(bad)
jg
movs
jno
ins
mov
in
inc
(bad)
shl
popa
dec
mul
fbld
and
xchg
das
sub
push
aad
(bad)
or
add
pop
mov
(bad)
(bad)
call
fidiv
push
vmovlps
repz
jno
pop
or
push
mov
jo
ss
(bad)
dec
stos
inc
call
and
dec
sbb
cld
inc
adc
mov
shr
cli
(bad)
(bad)
jmp
test
cdq
or
pop
push
dec
scas
jae
adc
mov
mov
je
adc
jg
mov
je
es
aad
or
and
sbb
inc
adc
push
push
sbb
adc
scas
jb
mov
inc
and
xlat
sub
pop
inc
push
pop
xor
data16
(bad)
sar
(bad)
(bad)
(bad)
inc
enter
shl
xchg
sti
lock
or
push
enter
gs
(bad)
(bad)
inc
jl
ror
push
mov
test
adc
add
mov
iret
clc
hlt
add
mov
(bad)
mov
xchg
mov
sub
mov
pushf
and
mov
jmp
and
(bad)
inc
shr
loop
push
jge
cli
(bad)
mov
stos
adc
and
lahf
pop
ror
cwde
ret
call
test
mov
jmp
shr
adc
nop
jle
adc
push
add
into
cld
adc
ret
(bad)
push
pop
jne
dec
ds
xchg
lea
mov
out
(bad)
(bad)
(bad)
push
test
ror
in
loopne
out
add
inc
and
out
pusha
test
js
adc
dec
fs
bound
pop
in
shl
inc
cmp
dec
cwde
mov
dec
jnp
(bad)
(bad)
(bad)
push
dec
cmovne
sbb
lea
aad
popa
mov
or
jg
and
mov
sar
sbb
push
into
jmp
dec
nop
xor
dec
enter
(bad)
jmp
loope
xchg
loop
into
add
(bad)
out
mov
out
add
stos
imul
jne
es
cli
sbb
mov
and
loope
nop
or
jle
out
jmp
jmp
in
jecxz
mov
xchg
call
js
xor
adc
aam
inc
outs
mov
loope
(bad)
dec
sub
(bad)
cmp
xor
data16
lock
xor
jbe
jl
sbb
inc
std
aas
xchg
mov
or
(bad)
(bad)
jg
push
test
(bad)
ja
or
sbb
sub
push
movs
cmps
ret
dec
in
and
inc
fadd
mov
xchg
retf
loop
jmp
stos
push
sub
clc
adc
test
adc
jne
jmp
loop
(bad)
(bad)
(bad)
mov
pushf
jecxz
movs
shr
pop
pop
mov
and
xor
aam
arpl
mov
(bad)
(bad)
dec
xor
cmp
stos
ret
mov
out
pop
dec
mov
lods
push
cld
(bad)
jmp
adc
faddp
out
dec
scas
fstp
jmp
pavgw
cmps
out
jne
jecxz
dec
dec
repnz
pop
cmp
pushf
gs
sar
(bad)
(bad)
fld
test
arpl
adc
scas
daa
cmp
in
add
push
cmp
call
mov
cli
pop
daa
fimul
adc
and
dec
add
push
and
imul
or
fucomi
int
(bad)
jmp
imul
or
push
enter
add
sbb
(bad)
call
mov
sub
stc
fild
inc
(bad)
ja
xchg
sbb
pop
(bad)
out
stos
clc
adc
sbb
push
xor
cmp
in
inc
adc
pushf
push
pop
sub
(bad)
jmp
js
arpl
push
mov
mov
fbld
test
(bad)
jmp
xor
in
jbe
jbe
retf
js
pushf
retf
pop
inc
xor
sbb
(bad)
(bad)
(bad)
inc
mov
cmp
pushf
loope
and
ja
dec
jge
cmp
lea
dec
dec
push
dec
call
std
dec
dec
or
jo
add
mov
(bad)
jg
jg
pop
and
push
popa
jnp
neg
push
ss
or
in
jno
imul
xchg
(bad)
push
fwait
lock
inc
(bad)
std
push
sar
cmps
(bad)
(bad)
mov
jo
arpl
pop
and
push
outs
ret
dec
inc
sub
adc
push
cld
leave
and
bound
add
leave
sub
add
shl
or
adc
(bad)
cli
ins
in
sub
ror
and
test
xor
cmc
fmul
ja
mov
jg
cld
or
in
rcl
jmp
push
lock
sahf
mov
pop
jg
test
fdiv
push
jbe
dec
inc
(bad)
jg
inc
push
sbb
int3
cmps
(bad)
mov
sbb
push
xchg
adc
mov
cli
(bad)
(bad)
(bad)
mov
or
dec
dec
add
dec
ja
inc
fisttp
popa
loope
stc
push
or
jno
push
push
and
(bad)
jg
mov
jmp
std
jle
je
adc
or
inc
mov
xchg
popa
mov
dec
ja
and
(bad)
sar
call
test
cmp
stos
adc
and
cs
jo
pop
or
aaa
jno
(bad)
push
ret
lahf
add
dec
sub
and
jp
adc
das
popf
sar
pop
lock
adc
sbb
lock
xchg
sbb
mov
cdq
(bad)
nop
pop
(bad)
(bad)
(bad)
(bad)
jg
addr16
mov
pop
mov
mov
sbb
test
push
xchg
(bad)
inc
(bad)
out
sbb
or
sahf
inc
inc
dec
into
push
or
(bad)
xchg
or
lock
test
dec
movs
dec
sub
iret
ret
or
(bad)
(bad)
aas
sar
mov
pop
add
jecxz
call
jnp
sar
mov
loop
sbb
enter
mov
sbb
push
loope
(bad)
cmp
push
push
push
pop
lea
mov
cmp
pop
je
(bad)
(bad)
(bad)
mov
mov
nop
daa
pusha
shl
and
shl
lea
sbb
aaa
add
(bad)
(bad)
(bad)
jmp
pop
mov
adc
sti
(bad)
sti
add
mov
ins
mov
push
sbb
and
mov
jmp
in
mov
jge
mov
es
or
fimul
or
(bad)
fst
xchg
fimul
mov
std
sbb
loopne
push
in
aam
and
daa
push
mov
rol
(bad)
cmps
sbb
push
outs
mov
mov
out
or
inc
bound
and
xchg
ficom
ret
jb
push
or
jnp
test
jmp
push
sub
std
hlt
fwait
outs
loopne
movs
push
or
aaa
clc
(bad)
(bad)
dec
inc
repz
in
je
sub
inc
dec
mov
lds
or
inc
je
or
je
(bad)
push
push
pop
add
or
mov
retf
adc
(bad)
(bad)
(bad)
dec
or
dec
ficomp
push
lods
div
gs
inc
test
pop
js
dec
and
movs
(bad)
add
or
test
cmp
(bad)
(bad)
(bad)
fmul
iret
mov
mov
into
add
aaa
inc
sub
inc
addr16
into
dec
std
gs
mov
adc
enter
lods
ins
(bad)
(bad)
(bad)
dec
adc
lods
push
je
jne
dec
das
mov
inc
xchg
jmp
int3
cmp
xchg
call
clc
mov
push
adc
push
call
arpl
js
outs
add
jb
in
mov
cmps
ins
aas
sub
(bad)
mov
xchg
loopne
pop
pushf
sub
or
adc
xlat
(bad)
(bad)
push
pop
shr
retf
cmp
lock
sbb
in
mov
add
test
cs
sbb
in
sub
aaa
lea
call
sar
jmp
out
or
popf
gs
dec
mov
(bad)
(bad)
inc
xchg
mov
jb
dec
ret
rcr
pop
or
fadd
fs
mov
ja
(bad)
call
sahf
inc
jl
rol
jecxz
add
daa
call
fistp
jmp
ret
sbb
or
inc
and
dec
sub
ds
pop
in
mov
cmp
stc
std
and
movs
adc
out
(bad)
(bad)
push
xchg
test
or
mov
add
ret
push
mov
xchg
(bad)
(bad)
mov
mov
loopne
call
js
stos
push
push
lea
mov
(bad)
(bad)
push
jne
in
ret
test
and
push
jo
cmp
add
and
xor
push
push
in
dec
js
(bad)
(bad)
push
or
jnp
xor
and
aas
cli
and
aam
cmp
pop
xor
(bad)
(bad)
(bad)
(bad)
(bad)
fdiv
sahf
(bad)
(bad)
xor
xor
hlt
cmp
gs
loopne
add
push
add
adc
jg
(bad)
(bad)
mov
jb
mov
jecxz
and
adc
push
imul
inc
cmp
(bad)
jmp
add
xor
push
mov
cdq
rol
jns
call
inc
aaa
mov
jecxz
sbb
pop
rol
or
dec
je
sub
dec
imul
(bad)
(bad)
(bad)
jg
cs
mov
push
pop
jmp
sub
xor
nop
inc
add
or
or
faddp
mov
inc
mov
jle
push
out
pop
pop
jp
daa
sbb
dec
or
add
les
ret
pop
xor
sbb
inc
mov
aas
fdiv
pop
mov
sbb
add
aad
jmp
cli
mov
enter
repnz
clc
lds
add
(bad)
(bad)
(bad)
(bad)
jmp
mov
xchg
mov
daa
xor
xchg
sbb
pusha
shl
pop
pop
mov
sub
xor
pusha
scas
xor
inc
mov
push
inc
jp
scas
call
dec
push
pop
sub
add
and
cmps
adc
je
or
push
(bad)
in
(bad)
jg
lahf
ret
or
jg
xchg
mov
and
leave
in
(bad)
(bad)
fcomip
and
inc
mov
sub
test
sub
lea
jp
cmp
sbb
and
sbb
(bad)
ds
xor
dec
ror
inc
adc
push
xchg
or
sub
cld
scas
bound
loop
fld
xor
push
test
xlat
inc
xchg
push
add
add
jbe
ins
jmp
jmp
cs
test
std
pop
cmp
cmp
sbb
push
jo
jb
and
out
clc
push
cmp
nop
adc
or
push
pushf
add
sub
(bad)
(bad)
call
cmp
fsub
ss
pop
cwde
shl
xchg
(bad)
xchg
ds
sbb
pop
or
push
dec
jp
shl
js
mov
or
push
jecxz
enter
retf
and
mov
sub
add
inc
push
or
cli
(bad)
dec
cmp
mov
(bad)
popa
sbb
ins
add
and
(bad)
(bad)
out
ins
mov
jnp
mov
icebp
sbb
dec
outs
jbe
enter
push
loopne
sbb
jne
push
push
xchg
and
push
push
jmp
addr16
in
inc
pusha
ret
loop
icebp
cmp
add
(bad)
fidivr
pop
es
push
xor
xchg
les
or
mov
(bad)
call
add
or
jmp
jecxz
jo
ror
inc
jo
mov
cdq
jp
mov
(bad)
(bad)
(bad)
push
push
cs
push
leave
mov
sub
test
adc
ss
pop
mov
mov
ja
in
(bad)
(bad)
call
add
adc
cmp
xor
mov
inc
mov
or
ins
push
or
push
inc
pop
test
adc
adc
cs
sub
outs
xchg
lock
pop
push
inc
lods
loop
xchg
fistp
push
ror
jg
adc
push
ja
test
std
lahf
push
mov
lock
xor
mov
or
cmp
mov
inc
add
test
in
pop
js
fld
(bad)
(bad)
jle
pop
adc
call
repnz
cli
cld
outs
add
enter
pop
shl
(bad)
jmp
mov
dec
out
and
js
mov
pop
test
dec
adc
dec
xor
lock
clc
int3
in
jecxz
(bad)
mov
loopne
cmp
loopne
aam
pusha
sahf
aad
pop
sbb
test
or
add
or
ins
(bad)
jbe
dec
push
mov
pop
cmp
(bad)
inc
sub
sbb
shl
aad
adc
imul
leave
int3
jmp
sbb
stc
xchg
push
inc
push
in
in
sub
jmp
and
hlt
shl
leave
mov
call
jg
adc
dec
xor
out
arpl
mov
dec
push
scas
mov
lahf
mov
cmp
jb
xor
xchg
adc
mov
mov
add
bound
push
cld
ss
popa
in
hlt
fdivr
mov
retf
sub
(bad)
inc
push
ins
ins
sbb
sbb
into
pop
cli
inc
mov
(bad)
mov
int3
mov
mov
popa
loopne
(bad)
(bad)
(bad)
call
mov
and
std
hlt
mov
or
jl
nop
and
or
icebp
jl
mov
adc
les
call
cld
or
lods
shl
loope
getsec
sar
lea
jg
(bad)
(bad)
call
js
in
lock
sub
sbb
movs
nop
in
dec
jae
mov
js
in
(bad)
(bad)
(bad)
in
adc
jb
sub
dec
cmp
(bad)
fs
ret
ds
test
pop
dec
ret
inc
or
xor
xor
(bad)
push
mov
push
nop
jae
mov
and
fisubr
push
jae
(bad)
mov
xor
jecxz
ss
in
inc
lock
leave
movs
cmp
stc
add
call
ss
sbb
adc
xor
int
jmp
out
ja
push
(bad)
(bad)
(bad)
dec
xchg
popa
outs
(bad)
dec
fisttp
push
nop
scas
sahf
dec
sbb
aaa
pop
add
add
das
(bad)
cwde
push
jmp
loopne
xchg
and
mov
xchg
out
loopne
popa
cld
adc
test
lods
jmp
add
sub
fisttp
enter
les
jbe
gs
lock
(bad)
dec
out
not
mov
sub
xor
jne
dec
dec
cld
push
out
cmp
dec
nop
pop
adc
addr16
push
aaa
inc
mov
add
fild
dec
pushf
ins
nop
test
test
es
pusha
xor
adc
mov
xor
iret
addr16
ret
or
mov
or
xchg
loopne
ja
iret
aad
test
mov
scas
rol
adc
aam
scas
inc
jae
lock
cmp
jne
jg
xchg
ds
(bad)
dec
inc
and
sub
sub
cmp
lds
call
sub
pop
add
popf
mov
dec
jne
movs
pop
pop
lods
stos
or
movs
cmp
inc
jl
pop
sbb
mov
inc
aam
(bad)
(bad)
jmp
add
xor
daa
xchg
push
pop
dec
push
mov
add
xor
call
int3
jb
retf
mov
outs
rcr
push
mov
call
fwait
cmp
or
pop
(bad)
icebp
xchg
mov
js
add
xor
mov
xor
or
add
(bad)
jmp
sbb
push
sbb
pushf
add
jle
(bad)
(bad)
mov
mov
and
or
add
cdq
jge
or
add
mov
push
call
and
mov
mov
lahf
mov
sar
(bad)
(bad)
(bad)
jmp
sar
mov
loopne
popa
aas
pop
push
sub
sbb
inc
or
sahf
mov
lea
and
les
dec
pop
adc
inc
pop
add
adc
adc
out
rol
jno
cmp
(bad)
movs
pop
(bad)
(bad)
dec
jne
cmps
retf
add
call
outs
loop
push
lea
addr16
call
fist
push
arpl
mov
fcomp
mov
pop
sbb
lock
lock
(bad)
(bad)
jmp
fisttp
pop
add
sbb
xchg
or
ja
xor
mov
dec
adc
pop
or
imul
cmp
jne
sbb
ret
push
(bad)
pop
jmp
or
imul
and
add
lock
(bad)
jmp
cmc
ins
lock
add
sbb
ret
cs
hlt
xchg
clc
(bad)
(bad)
push
jmp
and
or
loope
cmp
sbb
sbb
cmp
(bad)
inc
jg
call
stos
mov
adc
movs
and
icebp
(bad)
(bad)
(bad)
dec
sbb
xchg
push
adc
imul
aaa
outs
or
mov
cdq
push
daa
mov
inc
push
adc
retf
jmp
ja
jp
adc
jge
clc
jl
call
jne
sbb
aad
(bad)
out
jns
pop
dec
cli
adc
mov
ror
mov
and
je
(bad)
(bad)
(bad)
call
and
ins
sub
sub
outs
jmp
jl
ror
cmp
test
pop
data16
mov
loop
add
dec
mov
jmp
mov
sahf
inc
leave
jne
dec
popa
sbb
outs
xchg
sub
dec
fidiv
outs
repnz
jmp
sbb
in
nop
int
mov
add
mov
movs
(bad)
inc
bound
ficom
arpl
push
mov
cld
(bad)
(bad)
mov
rol
add
arpl
das
outs
(bad)
adc
add
mov
mov
push
in
(bad)
or
sbb
out
fadd
ror
fild
push
sbb
jb
dec
jg
sbb
call
(bad)
(bad)
jmp
xchg
push
sbb
call
sbb
add
add
out
(bad)
fbstp
sbb
(bad)
pop
ficom
ins
and
sub
fld
add
daa
fwait
dec
loopne
and
add
and
and
(bad)
(bad)
inc
adc
add
xor
mov
in
adc
sbb
das
ins
or
or
(bad)
daa
test
push
adc
cmp
cmp
cdq
adc
repz
jmp
jmp
pop
pop
(bad)
jg
push
pop
xor
inc
jb
int3
mov
fiadd
(bad)
(bad)
mov
adc
jecxz
jbe
mov
rol
inc
call
es
jg
xor
xor
test
and
pusha
sti
jle
xchg
jg
jg
cmps
pop
or
pop
jne
movs
loope
iret
cs
mov
dec
shr
ins
or
in
rol
mov
inc
cmps
mov
retw
push
jmp
and
std
fnsave
aam
outs
test
jmp
mov
cmp
pop
aam
or
icebp
jg
iret
inc
adc
pop
jo
sbb
(bad)
(bad)
push
add
mov
mov
mov
inc
or
es
pop
inc
test
adc
add
hlt
addr16
rol
sti
icebp
inc
mov
std
call
mov
sub
dec
lods
add
shl
(bad)
(bad)
mov
adc
pop
xor
out
lock
xor
test
(bad)
(bad)
cmp
ins
cwde
les
push
jae
scas
mov
enter
shl
test
mov
(bad)
(bad)
(bad)
cmp
xchg
in
pop
dec
push
mov
dec
push
in
jb
sbb
mov
pop
std
sub
aam
out
push
shl
mov
aam
jg
xchg
loopne
pop
lock
and
fcomp
xchg
movs
push
fidivr
push
cwde
test
je
ret
cs
mov
pushf
(bad)
(bad)
dec
cmp
int3
inc
sub
sub
fisub
inc
xchg
mov
xchg
add
dec
(bad)
(bad)
(bad)
(bad)
ds
ja
fsubr
inc
sbb
xchg
ss
add
ret
pop
jb
add
inc
pop
(bad)
(bad)
(bad)
(bad)
mov
aaa
push
cld
push
cdq
movs
mov
add
cmp
(bad)
(bad)
(bad)
jmp
or
push
inc
jb
mov
mov
nop
xchg
fistp
or
push
fnstsw
lds
(bad)
ins
add
shr
outs
or
fidiv
jo
push
inc
push
(bad)
(bad)
(bad)
jmp
pop
xor
mul
sti
das
les
sbb
sub
cmps
not
rol
inc
cmps
daa
or
js
mov
xchg
and
test
ficom
mov
jg
aas
and
xchg
aam
ja
es
fcom
adc
call
add
or
add
and
adc
fadd
adc
sub
xor
in
mov
popf
loopne
imul
fcmovbe
inc
mov
(bad)
call
inc
loopne
fidiv
jg
je
pop
dec
cs
jmp
std
js
adc
push
dec
inc
iret
jbe
dec
jg
sbb
shl
movs
fimul
outs
(bad)
(bad)
(bad)
call
lock
loope
ins
jo
push
add
push
in
in
loopne
repnz
je
inc
add
sbb
mov
fnstcw
hlt
add
daa
call
add
jmp
xchg
arpl
and
inc
bound
add
adc
std
call
or
nop
pop
pop
gs
jb
sbb
xchg
mov
add
sti
inc
xor
push
ins
jl
dec
jb
lock
or
pop
pop
sub
cli
jmp
nop
or
fcomp
loopne
jle
inc
or
or
xor
(bad)
call
in
pop
outs
arpl
popa
push
cli
js
jg
and
adc
(bad)
(bad)
call
sbb
add
xchg
fmul
jne
mov
aaa
test
mov
mov
les
add
sbb
(bad)
(bad)
mov
push
loopne
fldpi
or
push
mov
mov
xchg
pop
dec
add
test
cmp
cmp
(bad)
jmp
xor
push
rol
fwait
pop
mov
dec
cmp
lea
push
xchg
(bad)
sbb
inc
cli
dec
ret
mov
mov
jbe
mov
(bad)
nop
inc
or
sub
mov
in
mov
(bad)
xchg
cmp
xchg
adc
pop
outs
(bad)
xor
adc
js
mov
mov
outs
inc
or
sub
(bad)
(bad)
jmp
js
cmp
dec
push
out
mov
in
mov
and
dec
out
and
(bad)
(bad)
(bad)
inc
push
aaa
out
mov
sbb
inc
das
pop
mov
sub
mov
aam
add
xchg
adc
push
pop
mov
enter
jmp
retf
dec
js
lock
stos
jnp
xchg
xor
pop
(bad)
(bad)
jmp
movs
push
fisub
push
mov
xor
mov
dec
ss
cdq
(bad)
(bad)
(bad)
push
or
icebp
sub
mov
cmp
mov
push
(bad)
cmp
inc
push
cmps
push
inc
or
dec
fimul
(bad)
(bad)
jl
sti
and
xor
jl
push
imul
lods
or
sub
movs
outs
sbb
and
mov
mov
add
imul
mov
(bad)
lea
arpl
jmp
add
inc
adc
mov
or
push
add
ins
pop
adc
(bad)
(bad)
fistp
mov
add
mov
and
add
repz
sbb
and
jle
sub
jle
cmp
call
inc
in
or
es
aaa
sbb
pusha
push
std
(bad)
call
inc
shr
dec
fild
sahf
loope
test
jl
cmp
dec
loopne
imul
and
dec
xchg
inc
in
push
(bad)
dec
push
adc
loope
mov
sbb
mov
sub
ins
es
je
mov
inc
add
xchg
loope
lahf
fs
inc
mov
stos
mov
mov
ret
mov
daa
lods
pop
rcr
add
add
add
(bad)
xchg
(bad)
or
push
and
aaa
fist
jb
or
add
sub
xor
out
push
mov
adc
dec
popf
push
pop
mov
and
(bad)
(bad)
push
rol
xor
jb
inc
popf
sub
inc
adc
sti
enter
or
(bad)
dec
fisub
scas
dec
rol
dec
xchg
fistp
ret
(bad)
jmp
dec
cmp
jno
adc
fild
xchg
loop
(bad)
mov
lods
push
xchg
retf
mov
pop
nop
adc
(bad)
(bad)
(bad)
push
in
pop
push
aaa
lods
or
adc
cwde
sub
pop
mov
push
frstor
ss
jmp
cmp
(bad)
fmul
add
or
xchg
lahf
inc
push
cmc
inc
and
(bad)
call
hlt
or
push
mov
cmp
sbb
pop
test
loopne
push
leave
(bad)
jne
mov
jge
push
retf
sub
in
inc
clc
and
cli
jmp
pushf
pop
adc
push
leave
dec
or
(bad)
call
adc
enter
stc
ret
mov
or
mov
ja
(bad)
call
loopne
pop
cmp
mov
packuswb
mov
sar
push
add
xchg
jle
(bad)
(bad)
fucomi
movs
adc
push
inc
jecxz
fisub
xchg
pop
xor
fcom
stos
pusha
xchg
jno
(bad)
(bad)
(bad)
jmp
or
dec
or
dec
in
fistp
inc
sar
push
or
or
mov
sbb
add
inc
fild
(bad)
(bad)
in
mov
pop
js
adc
push
call
adc
les
test
or
(bad)
push
jmp
pop
inc
pop
xchg
in
inc
inc
leave
hlt
loop
in
and
(bad)
xor
adc
je
out
clc
mov
sub
add
jne
or
mov
popa
fisubr
fcom
sub
mov
mov
fidiv
(bad)
and
add
jne
sbb
(bad)
jmp
(bad)
call
lea
out
test
movs
shl
enter
out
cmp
daa
pushf
mov
inc
sbb
cmps
push
mov
loope
mov
sbb
or
xchg
and
ret
adc
cmp
sub
add
sub
aaa
loop
movs
aas
cmps
(bad)
(bad)
jg
les
loope
leave
cmp
push
pop
dec
sub
inc
pushf
dec
cmc
push
bnd
shr
(bad)
inc
ret
inc
pop
hlt
jae
or
rol
adc
fs
outs
push
nop
pop
(bad)
(bad)
jg
mov
(bad)
outs
loope
push
or
sbb
pop
shr
call
dec
test
inc
dec
xchg
inc
sub
push
leave
test
sub
adc
fcomip
pop
es
sub
adc
test
daa
xor
mov
icebp
jg
mov
mov
bound
xchg
push
loope
mov
jnp
xor
daa
retf
(bad)
(bad)
mov
int3
sbb
ret
pusha
or
and
inc
mov
(bad)
(bad)
inc
pop
lds
aas
lds
sbb
sbb
sub
or
push
aam
pop
(bad)
(bad)
(bad)
(bad)
jmp
or
bound
das
and
enter
rcl
add
fild
jmp
test
pusha
mov
pop
nop
scas
push
je
popa
mov
ficom
and
mov
mov
push
adc
in
mov
imul
cmp
rcl
(bad)
push
fild
movs
push
(bad)
(bad)
jmp
sbb
ja
(bad)
lock
push
cdq
(bad)
(bad)
call
inc
xor
imul
or
mov
mov
pop
fisttp
(bad)
call
mov
scas
lods
scas
adc
and
mov
imul
push
inc
jbe
fsub
add
in
add
or
sub
(bad)
push
pushf
mov
dec
(bad)
out
mov
push
ror
(bad)
xlat
adc
sub
inc
(bad)
(bad)
(bad)
(bad)
fcmovu
fdivr
add
fld
aas
dec
inc
or
ins
aas
aad
int
lea
add
popf
shr
cld
scas
push
lahf
aad
push
hlt
xchg
jmp
push
jp
xor
push
call
push
adc
jo
or
cli
movs
xchg
pop
js
int3
outs
inc
enter
retf
aad
(bad)
(bad)
(bad)
call
mov
outs
mov
mov
mov
inc
outs
fs
add
out
add
in
(bad)
(bad)
(bad)
(bad)
call
jnp
add
shl
jle
adc
(bad)
dec
jo
dec
mov
test
sbb
(bad)
(bad)
(bad)
call
push
push
push
adc
lods
xor
mov
push
or
outs
inc
pop
leave
and
outs
push
das
(bad)
ja
(bad)
jg
inc
cli
imul
popa
movq
call
push
xor
dec
(bad)
jg
mov
(bad)
inc
mov
nop
mov
cs
xor
stos
mov
or
(bad)
aaa
cld
pop
cld
imul
daa
sub
daa
jmp
push
cmp
(bad)
jmp
sbb
and
add
dec
mov
fldcw
fnstenv
cld
inc
sub
(bad)
(bad)
in
push
rcl
aaa
mov
adc
je
nop
rol
lds
push
inc
mov
jmp
mul
add
lahf
mov
sub
in
adc
stos
imul
sub
test
pop
adc
jmp
sub
and
daa
sub
add
scas
aaa
stos
mov
fisubr
add
pop
aad
jge
in
(bad)
(bad)
out
(bad)
(bad)
mov
push
or
inc
mov
les
add
retf
(bad)
jg
(bad)
mov
jge
adc
outs
mov
or
jbe
sbb
push
mov
(bad)
(bad)
std
pop
push
mov
iret
(bad)
jo
les
(bad)
nop
cmp
inc
leave
sub
ja
leave
(bad)
(bad)
(bad)
call
bound
push
push
sbb
(bad)
fistp
inc
scas
nop
sub
push
pop
and
nop
xor
sbb
(bad)
aas
push
xor
pop
xchg
(bad)
jmp
loopne
cmp
fs
push
or
je
add
and
add
xchg
dec
inc
push
(bad)
(bad)
(bad)
dec
add
dec
jge
sbb
jp
sub
sub
jmp
test
push
mov
mov
idiv
mov
cmps
adc
inc
dec
mov
das
xchg
xchg
stos
sar
dec
repz
mov
xor
(bad)
sub
push
adc
xchg
cmp
push
adc
mov
retf
aaa
stos
push
scas
(bad)
mov
mov
(bad)
(bad)
call
push
or
xchg
aaa
jmp
arpl
add
xor
clc
jmp
cmp
(bad)
pop
loop
lods
jb
jbe
icebp
sbb
and
sub
pop
adc
dec
sub
imul
pop
push
jecxz
add
repnz
mov
outs
(bad)
jmp
scas
xchg
push
addr16
dec
not
nop
mov
pop
mov
(bad)
(bad)
(bad)
call
mov
(bad)
repnz
out
sbb
fst
pop
push
setne
(bad)
(bad)
(bad)
jmp
inc
push
lea
adc
shl
sbb
fdivr
xchg
sub
xor
mov
add
or
out
push
movs
inc
and
adc
(bad)
(bad)
dec
xchg
dec
pop
(bad)
dec
jp
aaa
lods
pop
aam
mov
mov
mov
(bad)
(bad)
jmp
dec
test
(bad)
fsubr
xchg
in
stc
mov
cwde
or
dec
cwde
mov
adc
xlat
dec
clc
pop
aaa
xor
(bad)
(bad)
(bad)
(bad)
push
mov
(bad)
fdivr
pop
xchg
aam
sub
lea
lods
jle
fcmovu
add
push
(bad)
(bad)
(bad)
inc
or
iret
push
cld
lods
and
inc
loope
inc
icebp
or
ficom
retf
fdivr
(bad)
cmp
(bad)
les
xchg
(bad)
stos
push
shr
push
push
or
ja
loope
push
cwde
outs
out
loopne
and
or
(bad)
(bad)
call
std
ins
cmp
and
push
in
add
dec
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
lods
inc
mov
sbb
cdq
in
call
gs
pop
cmps
loopne
pop
rol
not
(bad)
call
repnz
sub
retf
test
js
or
fisttp
cwde
shr
or
jmp
inc
cmp
mov
xor
jecxz
sub
dec
or
addr16
nop
dec
sbb
mov
mov
(bad)
dec
ss
adc
ret
mov
test
test
lock
sub
cmps
jmp
cmp
(bad)
inc
mov
mov
pop
rol
enter
and
jg
add
lods
push
jo
sahf
movs
jo
shr
sar
push
hlt
sub
xchg
dec
sub
cmps
add
leave
call
(bad)
(bad)
push
adc
sti
push
data16
fwait
outs
xchg
adc
inc
dec
mov
call
dec
mov
adc
or
fcom
out
iret
dec
paddd
(bad)
(bad)
(bad)
jg
sbb
adc
es
fcmovb
popa
mov
inc
dec
and
hlt
aam
mov
call
jno
out
push
and
or
cmp
push
stos
push
cwde
(bad)
(bad)
(bad)
push
mov
jb
popf
jl
inc
test
fdiv
fmul
add
pop
mov
inc
inc
adc
(bad)
(bad)
(bad)
jge
dec
pop
shr
adc
jnp
sub
jmp
or
int3
pop
pop
jo
fnstsw
sub
dec
fcom
jne
cmp
cld
(bad)
(bad)
(bad)
(bad)
jae
test
mov
and
sbb
mov
imul
jle
aas
movs
add
sub
fistp
sub
pusha
(bad)
stos
sbb
aad
adc
push
call
fdivr
jg
pop
jo
jmp
(bad)
arpl
sbb
loope
sbb
sahf
loopne
repz
(bad)
(bad)
dec
pusha
push
leave
pop
mov
sbb
pop
pop
inc
ror
inc
js
inc
pop
inc
push
jne
fbld
inc
out
mov
xchg
adc
xchg
mov
(bad)
jmp
add
push
arpl
(bad)
cmp
movs
push
add
mov
ret
fcmovnu
mov
jo
jmp
inc
add
push
fistp
sub
inc
int
cmp
add
popa
loopne
adc
int3
add
sbb
pop
add
movs
cmp
or
xor
(bad)
jg
aad
mov
jecxz
enter
sub
jo
pop
mov
int3
or
or
repnz
lods
and
cmc
sub
pop
mov
lods
xchg
(bad)
mov
mov
xchg
or
sbb
dec
push
dec
(bad)
adc
imul
jb
add
push
je
sbb
(bad)
(bad)
jmp
mov
mov
sbb
popa
lock
sbb
pop
add
add
and
aaa
ficomp
lock
dec
test
call
or
sar
(bad)
push
cmp
and
cmp
out
mov
(bad)
add
inc
ja
and
(bad)
(bad)
call
mov
jl
mov
in
pop
add
in
test
pop
rcl
daa
mov
(bad)
(bad)
call
push
je
sbb
dec
pop
fadd
and
adc
or
adc
adc
(bad)
(bad)
jmp
sbb
adc
jle
sbb
xchg
repnz
inc
jl
jg
mov
(bad)
(bad)
call
adc
inc
dec
push
cmp
xchg
test
mov
(bad)
(bad)
(bad)
(bad)
cmp
int
cmp
add
cmp
add
push
fisttp
cmp
cli
(bad)
dec
pop
mov
push
mov
xor
adc
adc
fcmovu
and
stos
(bad)
inc
mov
inc
add
and
call
jmp
pop
js
(bad)
(bad)
inc
mov
xchg
(bad)
lea
push
add
cmp
pop
mov
xchg
add
push
clc
sub
(bad)
cmp
movs
or
test
adc
hlt
inc
cli
mov
inc
sub
test
mov
ret
add
in
nop
rol
dec
mov
sub
adc
(bad)
(bad)
(bad)
jnp
push
add
sub
xchg
mov
test
mov
cmp
sub
daa
pushf
add
sub
int3
add
pop
dec
ds
(bad)
(bad)
jmp
das
in
fprem1
icebp
ror
dec
mov
test
and
stos
fwait
or
add
(bad)
call
call
mov
cmps
cmps
out
push
adc
pop
(bad)
dec
cmps
not
push
xlat
call
and
adc
repnz
sub
mov
js
stos
mov
in
xchg
cmp
add
add
(bad)
(bad)
inc
dec
sub
cmps
stc
das
test
mov
mov
xchg
xor
cld
mov
push
add
adc
jmp
(bad)
inc
popa
loop
test
out
adc
inc
sbb
fcomp
xchg
in
icebp
out
mov
cld
(bad)
(bad)
jmp
inc
repnz
xchg
(bad)
in
xchg
inc
inc
imul
(bad)
js
shl
(bad)
call
mov
sbb
cmps
push
add
push
es
pop
sub
iret
cmp
cmp
rol
ror
(bad)
mov
pop
(bad)
add
dec
or
loop
sub
cmps
test
and
(bad)
jmp
dec
mov
cmps
adc
cmps
cmp
(bad)
popf
or
gs
adc
mov
(bad)
fist
jmp
call
sbb
stos
jmp
sar
and
icebp
or
test
lods
cmp
inc
inc
dec
inc
ds
(bad)
(bad)
jmp
cmps
cld
retf
xchg
clc
xor
push
cmc
stos
hlt
daa
cmp
xchg
or
sbb
push
or
cmp
adc
add
jo
or
pop
aaa
inc
mov
or
xor
mov
(bad)
(bad)
(bad)
push
fild
or
test
sub
fisttp
and
call
push
mov
or
call
jle
push
dec
pop
ins
cs
shl
inc
cs
dec
sbb
add
push
jo
lods
(bad)
(bad)
mov
xor
sbb
and
or
bound
hlt
adc
push
bound
(bad)
(bad)
inc
sbb
add
dec
or
(bad)
dec
xor
(bad)
(bad)
call
mov
push
adc
sub
mov
iret
js
scas
pusha
add
inc
ror
(bad)
(bad)
jmp
sbb
data16
scas
rcl
stos
or
mov
jne
sti
pop
add
mov
in
mov
call
adc
(bad)
dec
pop
mov
mov
test
sub
inc
inc
sub
xchg
mov
cmps
(bad)
cmp
je
sets
repnz
je
je
movs
je
call
inc
pop
fsubr
pop
imul
pop
jb
dec
inc
sbb
es
sbb
cmp
xor
adc
fwait
mov
adc
sar
or
mov
sub
pop
mov
addr16
pop
adc
xchg
adc
pop
inc
ins
lds
xchg
call
call
mov
adc
inc
mov
xor
pop
adc
(bad)
sti
mov
std
int3
(bad)
outs
(bad)
jmp
ficom
sub
sbb
das
(bad)
mov
lds
pop
pusha
retf
inc
lods
or
(bad)
push
addr16
mov
(bad)
(bad)
push
xchg
ret
add
and
retf
out
rol
adc
xor
call
mov
(bad)
(bad)
dec
pop
shl
mov
sbb
mov
push
xchg
sub
aas
mov
inc
sahf
push
adc
sbb
xor
jmp
push
or
in
pop
fadd
cwde
(bad)
lea
fistp
and
lock
inc
add
pop
mov
mov
repz
(bad)
(bad)
(bad)
jmp
cmc
pusha
mov
push
rol
mov
pusha
ret
sbb
retf
sbb
adc
jecxz
dec
(bad)
dec
inc
pusha
outs
lods
fsub
int
test
loop
repnz
out
xchg
call
pop
aam
(bad)
(bad)
pop
and
sbb
cmp
dec
dec
sbb
inc
(bad)
pop
xor
xor
sub
sub
(bad)
call
xchg
inc
adc
jne
jno
aas
xor
sub
sti
lea
(bad)
mov
test
popa
inc
push
imul
cmc
jmp
es
push
in
fcom
(bad)
jg
test
inc
stos
popa
cdq
in
(bad)
daa
call
(bad)
(bad)
(bad)
jmp
or
or
hlt
push
fadd
pop
in
mov
cwde
in
pop
fadd
(bad)
in
fs
aam
pop
jmp
jecxz
(bad)
movs
pop
les
jb
jbe
xchg
lods
cs
iret
leave
call
call
in
movs
jl
pushf
fcom
popf
fstp
xchg
jbe
shl
fwait
test
mov
(bad)
jmp
cmps
je
fs
(bad)
add
aam
fs
popf
cmp
cld
inc
pop
sbb
inc
cmp
add
(bad)
(bad)
jmp
inc
xchg
cmp
ss
enter
adc
loopne
mov
fdiv
pop
shr
test
enter
mov
out
sar
sti
das
sub
mov
scas
lods
cmp
push
dec
pop
test
nop
das
movs
or
out
mov
fsubr
or
sahf
cwde
pusha
ja
mov
mul
mov
(bad)
jmp
mov
lock
cmp
test
cmp
jl
cmps
js
es
dec
jne
dec
cmps
jo
(bad)
dec
jae
outs
sbb
lods
pop
fs
fistp
pop
pop
(bad)
(bad)
jg
ja
ds
pop
cs
mov
(bad)
(bad)
mov
nop
aad
fist
inc
inc
in
sahf
popa
cmp
cmp
cmp
leave
out
fcomp
(bad)
xor
inc
cmp
(bad)
(bad)
or
sub
jg
popf
call
mov
(bad)
shr
push
sbb
mov
add
rcr
lock
mov
inc
in
sar
clc
inc
pusha
or
mov
mov
(bad)
(bad)
(bad)
inc
pop
sahf
sub
ret
cmp
push
in
sbb
cmp
es
pop
out
cmp
add
sbb
and
pushf
sbb
enter
loop
xlat
xchg
(bad)
jmp
mov
mov
mov
movs
mov
sub
sub
inc
cmps
sub
ds
(bad)
(bad)
mov
pop
nop
sti
nop
or
in
test
mov
add
cmps
add
sahf
jl
(bad)
(bad)
jmp
mov
les
mov
mov
test
nop
(bad)
out
xor
and
and
cmps
lea
push
or
dec
mov
stc
jp
push
sub
dec
push
mov
retf
(bad)
jg
outs
cmp
mov
dec
imul
or
dec
ret
or
(bad)
xchg
push
mov
lock
adc
cmc
mov
mov
(bad)
jmp
mov
inc
scas
arpl
fs
dec
xor
fild
push
xor
jno
sub
pushf
fbstp
push
(bad)
(bad)
(bad)
dec
jmp
jbe
stc
dec
pop
sbb
imul
int3
jb
jnp
mov
mov
and
(bad)
jmp
daa
out
inc
pusha
xchg
mov
mov
fild
mov
test
pop
push
call
ja
arpl
test
shl
cmp
(bad)
(bad)
(bad)
push
adc
add
frstor
test
pop
ss
push
dec
dec
and
pusha
and
mov
movs
xchg
(bad)
(bad)
(bad)
(bad)
cmp
test
loope
arpl
pusha
mov
iret
les
or
enter
fs
mov
push
test
cmc
pop
xchg
lock
jmp
lahf
or
jb
sub
aaa
(bad)
mov
push
inc
push
mov
(bad)
jg
push
inc
dec
inc
add
push
jle
push
mov
(bad)
mov
mov
pusha
xor
in
mov
inc
mov
mov
in
adc
and
call
xchg
or
and
sub
fadd
jb
ret
adc
add
mov
or
mov
jmp
jnp
imul
inc
imul
lock
dec
std
add
ins
fs
jg
ret
add
jmp
(bad)
(bad)
(bad)
mov
lahf
push
mov
arpl
jp
add
pop
pop
in
xor
(bad)
(bad)
ficom
ja
jb
cmps
or
ds
mov
jnp
xor
or
adc
outs
inc
sbb
push
(bad)
call
loopne
pop
inc
push
cli
inc
adc
jmp
lea
inc
xchg
push
je
addr16
cmc
push
cmc
mov
inc
pop
inc
inc
sub
adc
add
push
data16
sbb
or
dec
mov
daa
pop
adc
ins
test
or
mov
mov
or
or
jns
xchg
(bad)
xor
adc
loopne
(bad)
(bad)
call
test
adc
add
jo
out
test
stos
(bad)
lock
mov
jo
outs
sbb
mov
inc
cld
push
in
pusha
sbb
lock
mov
lds
out
push
daa
sub
sbb
cmp
out
and
mov
inc
xchg
ja
inc
ds
mov
ret
addr16
mov
mov
pop
in
or
ins
sbb
push
mov
jmp
pop
lock
call
add
jae
inc
stc
adc
shl
retf
(bad)
(bad)
call
sbb
mov
pop
mov
pop
imul
adc
into
xor
(bad)
(bad)
(bad)
inc
(bad)
mov
and
jg
dec
sbb
scas
sub
adc
nop
jbe
unpcklps
(bad)
(bad)
(bad)
fdivr
pop
movs
push
mov
inc
push
ja
outs
addr16
stos
shr
fist
jp
(bad)
(bad)
(bad)
jg
pop
mov
fild
sti
frndint
pop
pop
or
jnp
mov
stos
fist
add
dec
inc
push
xchg
xchg
test
xchg
add
jb
mov
call
ror
jg
ret
jge
dec
je
dec
inc
xor
mov
jmp
inc
adc
adc
adc
sar
adc
ret
ret
xchg
dec
jnp
popa
jmp
cld
add
or
push
or
and
sub
imul
and
mov
mov
or
dec
mov
add
pop
adc
xlat
add
add
add
les
add
repz
mov
lock
sub
add
(bad)
push
rol
or
sub
mov
xor
enter
sub
adc
lods
cmp
xchg
add
mov
or
aaa
mov
mov
push
push
dec
mov
sbb
mov
hlt
adc
jb
sub
(bad)
(bad)
push
mov
dec
or
ffreep
retfw
sbb
sbb
inc
inc
or
jecxz
ins
mov
call
(bad)
dec
cmp
rcr
add
adc
nop
inc
lea
adc
mov
loopne
ret
clc
mov
cpuid
mov
in
add
inc
inc
inc
loopne
daa
rcr
push
inc
pushf
inc
(bad)
push
test
test
push
inc
adc
(bad)
ror
shl
cmp
aas
sbb
mov
loopne
xor
and
push
or
loopne
ret
ins
jle
mov
pop
mov
mov
aam
mov
in
leave
mov
(bad)
mov
cwde
ror
mov
and
int3
mov
aam
out
fistp
dec
enter
pop
fsubr
fsub
mov
clc
loopne
ret
fs
cdq
movs
push
fadd
dec
push
pop
cdq
in
les
lock
adc
adc
pop
es
(bad)
clc
xchg
inc
xchg
cld
mov
or
add
add
push
mov
lods
outs
(bad)
pop
mov
(bad)
(bad)
(bad)
(bad)
jp
pop
inc
test
mov
jg
int
js
dec
test
je
cmps
es
(bad)
(bad)
(bad)
cld
rcpps
sbb
ja
and
adc
fst
outs
dec
jb
gs
in
pop
(bad)
(bad)
(bad)
jmp
pop
inc
ins
jo
fiadd
pop
push
pop
das
push
or
cmp
push
adc
aas
les
(bad)
(bad)
(bad)
(bad)
fcom
jp
inc
xchg
pusha
outs
mov
pop
dec
add
(bad)
pop
lods
mov
outs
inc
das
xchg
mov
jl
add
mov
cdq
cs
add
ds
(bad)
push
sbb
push
pop
pop
mov
push
nop
adc
or
inc
mov
mov
jmp
or
fs
(bad)
and
out
(bad)
mov
shl
int3
int3
cmps
leave
push
(bad)
loopne
sbb
iret
cs
adc
jnp
outs
(bad)
(bad)
(bad)
(bad)
(bad)
jo
push
pop
iret
shl
push
mov
rcr
enter
outs
xor
or
add
mov
(bad)
(bad)
(bad)
push
cld
cmp
push
push
cwde
outs
and
(bad)
push
mov
fidivr
xor
and
sbb
(bad)
(bad)
(bad)
(bad)
jmp
mov
pop
and
or
mov
movs
std
dec
jecxz
aam
int
jg
add
dec
pop
sahf
or
xlat
sub
xlat
xchg
or
sar
aaa
cld
into
adc
pop
imul
or
jle
jmp
mov
das
sbb
es
cwde
pop
and
(bad)
(bad)
jmp
iret
mov
adc
add
adc
or
je
popa
inc
xchg
pop
jmp
frstor
iret
daa
lea
adc
mov
push
inc
loopne
inc
pop
jae
adc
je
idiv
ins
add
add
(bad)
jg
imul
push
in
xchg
mov
retf
add
popa
pop
das
clc
(bad)
dec
stos
dec
or
add
cmp
arpl
rcr
add
in
jb
and
call
jmp
les
xchg
push
or
mov
inc
test
pop
dec
inc
mov
aam
int
shr
loopne
out
clc
ss
lods
pushf
jp
xor
movs
cmovb
push
stos
jns
call
add
adc
daa
retf
fdivr
(bad)
scas
sbb
(bad)
mov
xor
add
or
sub
xor
imul
sti
(bad)
(bad)
cmp
stos
sbb
mov
jge
sub
(bad)
hlt
cdq
int3
call
(bad)
pop
adc
and
pop
mov
sub
movs
add
inc
mov
sbb
jg
add
iret
add
rcl
outs
lea
int3
cmp
inc
mov
or
push
mov
and
mov
outs
(bad)
call
rol
or
(bad)
mov
iret
cs
nop
pop
dec
push
sub
(bad)
push
lods
pop
nop
push
sub
mov
push
or
lods
or
aad
mov
or
sub
or
jmp
jg
push
test
add
fsub
rcl
mov
sbb
js
pop
mov
and
(bad)
mov
mov
push
push
sbb
sti
(bad)
fild
and
lods
out
xlat
pop
inc
xor
or
aad
inc
push
push
mov
jo
outs
shl
shl
jo
and
cmp
sahf
inc
addr16
(bad)
jg
add
adc
mov
add
(bad)
(bad)
out
in
pop
pop
les
nop
or
test
test
dec
add
mov
mov
nop
and
shr
(bad)
jg
jo
xchg
xor
mov
jne
daa
push
sbb
add
fs
mov
shr
pop
dec
push
jmp
call
pop
loop
xor
or
enter
inc
(bad)
mov
and
and
in
lock
rcr
pop
add
sub
pop
add
(bad)
jmp
push
and
pop
ja
mov
inc
cmp
out
mov
imul
(bad)
(bad)
(bad)
fldenv
mov
rcr
add
push
ficom
sub
or
fldcw
popa
aaa
add
(bad)
call
and
jbe
test
add
in
shl
inc
retf
and
cld
repz
es
mov
call
adc
in
clc
in
sbb
mov
mov
add
loopne
sbb
dec
jmp
outs
and
sub
pop
cmps
cmp
(bad)
fbld
fmul
sub
pop
sar
mov
add
inc
fist
fist
lock
(bad)
(bad)
dec
popf
add
sbb
cmps
pop
fucom
add
or
dec
sub
add
hlt
call
add
sub
jle
add
pop
scas
jo
xor
ja
sub
push
sbb
dec
dec
loopne
fs
(bad)
loopne
(bad)
push
rcl
adc
not
pop
(bad)
(bad)
(bad)
inc
in
ret
clc
retf
clc
pop
das
daa
lahf
mov
hlt
aam
hlt
rcl
lock
(bad)
(bad)
jg
scas
bound
sbb
aam
add
cmp
aad
call
and
push
cld
call
push
in
imul
xor
jae
mov
jb
rcl
sbb
and
cld
push
lahf
mov
add
lock
(bad)
les
(bad)
shl
(bad)
test
outs
mov
neg
shl
cmp
and
pop
fld
push
repnz
(bad)
jmp
into
icebp
or
pushf
push
cmp
inc
mov
jno
inc
mov
xor
(bad)
(bad)
call
aad
jmp
adc
pop
dec
ret
addr16
sbb
xchg
retf
js
outs
es
aaa
jl
cld
adc
and
add
xor
inc
push
rcr
add
cld
scas
clc
push
push
sahf
out
cmp
jmp
shr
xchg
pop
enter
stos
add
or
data16
les
adc
fild
add
jg
adc
xchg
outs
xchg
xchg
sbb
jg
add
push
sub
jge
fmul
or
out
cmp
fs
cmp
cmp
xchg
mov
pusha
gs
inc
pushf
(bad)
xchg
jne
pushf
xchg
into
(bad)
lea
push
cld
sbb
in
fstp
mov
adc
pop
in
pop
mov
out
mov
cld
scas
in
test
adc
aam
icebp
pop
scas
push
xchg
add
(bad)
cwde
inc
inc
sub
adc
(bad)
(bad)
aas
and
cmps
adc
sti
test
xor
sub
(bad)
dec
and
and
movs
pop
popf
or
imul
inc
mov
push
in
loopne
stos
(bad)
inc
ret
push
pcmpeqd
mov
(bad)
lock
lock
clc
pop
xor
stos
gs
pop
pop
inc
adc
jmp
ret
push
jbe
inc
mov
(bad)
fbld
pop
push
or
dec
dec
sti
clc
lds
sbb
sub
call
test
or
in
mov
push
ins
dec
jne
push
clc
ret
inc
jg
sbb
mov
add
inc
mov
cmp
jl
(bad)
(bad)
jg
mov
test
pop
sub
inc
inc
call
out
inc
cs
mov
xor
sbb
data16
adc
jmp
je
or
in
xlat
push
popf
cli
lds
mov
mov
jle
jmp
jmp
inc
rol
pop
jb
mov
pop
in
xchg
(bad)
(bad)
(bad)
jmp
es
movs
pop
ret
outs
in
push
push
loop
fadd
cli
jecxz
mov
mov
dec
bound
add
(bad)
mov
je
pop
or
or
mov
sbb
enter
call
jmp
pop
xor
(bad)
retf
ret
push
jno
sbb
popa
dec
das
mov
sbb
sub
pop
loopne
and
ror
test
in
mov
loopne
call
sub
mov
xchg
pop
rcr
add
(bad)
jmp
xchg
pop
nop
(bad)
in
pop
fnstcw
xchg
(bad)
imul
push
add
(bad)
call
jmp
push
clc
adc
ja
pop
cmp
sbb
inc
sbb
outs
lahf
ds
(bad)
(bad)
dec
or
push
push
aam
add
add
ds
add
add
or
(bad)
cmp
xor
lods
add
sahf
adc
jge
std
sbb
mov
jp
mov
loop
pusha
pop
aaa
(bad)
(bad)
pusha
mov
lock
adc
ins
jb
add
xchg
cmp
mov
(bad)
mov
(bad)
retf
movs
loopne
sub
(bad)
mov
jne
retf
mov
mov
(bad)
(bad)
mov
dec
rol
bswap
test
outs
test
or
dec
mov
out
or
fdiv
xor
jo
shl
xor
adc
shr
loop
repnz
out
(bad)
pop
emms
jno
cmp
push
test
je
(bad)
(bad)
(bad)
sti
out
or
mov
in
or
dec
out
pop
add
test
and
mov
(bad)
(bad)
(bad)
push
fwait
push
pop
add
and
mov
mov
es
and
mov
sbb
inc
dec
mov
mov
in
(bad)
xchg
out
dec
push
push
xor
out
(bad)
(bad)
push
enter
jle
push
xor
shl
test
cmp
loopne
aaa
or
or
xchg
(bad)
(bad)
(bad)
(bad)
dec
xchg
push
test
inc
pop
push
push
sahf
sbb
inc
aam
(bad)
pusha
adc
(bad)
cmp
jae
pop
push
(bad)
call
push
push
sub
push
retf
imul
add
sahf
(bad)
mov
neg
mov
inc
(bad)
mov
mov
scas
into
sbb
es
aaa
add
sti
mov
(bad)
(bad)
call
jmp
mov
mov
cmps
lea
cmps
rol
cmp
scas
sbb
cmp
ja
es
jle
adc
sub
jmp
(bad)
mov
push
es
call
into
adc
inc
dec
popa
jbe
nop
stc
xor
rep
(bad)
fsubrp
jmp
pminsw
sub
cmc
(bad)
jg
inc
push
fs
inc
loopne
test
cmp
add
(bad)
call
imul
rcl
mov
adc
mov
bnd
add
add
stos
shl
(bad)
dec
jns
in
pusha
xor
or
ja
clc
sbb
test
fnsave
push
jo
(bad)
(bad)
(bad)
(bad)
mov
add
leave
pushf
or
enter
adc
out
inc
mov
icebp
adc
loopne
(bad)
(bad)
inc
xor
dec
push
push
rep
je
out
inc
dec
hlt
dec
xchg
jmp
retf
neg
stc
cmp
jmp
jmp
das
sub
sbb
out
jmp
jmp
push
and
ret
call
call
and
rol
sbb
call
pop
(bad)
pop
test
(bad)
(bad)
inc
xor
jmp
aaa
rol
stc
daa
cdq
inc
jmp
xor
std
pop
pop
add
adc
inc
test
hlt
mov
sub
inc
add
xchg
fwait
(bad)
ror
pushaw
test
jmp
aad
push
shr
or
adc
xchg
sub
(bad)
and
fcom
add
stos
pop
or
push
adc
mov
je
adc
leave
pop
sar
movs
adc
(bad)
(bad)
(bad)
(bad)
in
and
and
ins
push
in
pop
xchg
xor
inc
cld
or
test
hlt
cmp
mov
mov
stos
mov
pop
jae
(bad)
(bad)
(bad)
jmp
xchg
sbb
or
es
mov
imul
dec
push
lock
add
out
pop
jns
hlt
jg
rol
xchg
dec
push
cmp
in
sbb
ss
(bad)
jg
(bad)
js
cmp
out
je
retf
sahf
mul
out
std
push
or
ins
(bad)
(bad)
jmp
cmps
out
lock
mov
or
mov
mov
std
inc
(bad)
mov
fld
mov
test
(bad)
call
out
inc
in
ret
mov
xor
lock
(bad)
(bad)
push
enter
inc
ficomp
mov
pusha
add
or
data16
xor
mov
je
inc
cmp
enter
mov
jg
xor
jae
or
lods
mov
shr
mov
movs
mov
pop
je
jo
jmp
inc
rcl
or
clc
mov
mov
retf
enter
inc
mov
dec
cmp
pop
ins
(bad)
mov
lods
cmp
pop
(bad)
jmp
stos
pop
call
xor
bound
shl
lahf
and
(bad)
(bad)
dec
add
test
sub
sbb
xchg
mov
test
ds
inc
jmp
adc
mov
jmp
sub
repz
(bad)
jmp
sbb
outs
mov
jg
sbb
retf
add
pop
in
jo
aaa
adc
dec
imul
sub
fcmovnbe
add
retf
fidiv
pop
pshufw
(bad)
(bad)
jg
cmps
pop
clc
dec
sbb
and
pop
adc
mov
xor
pop
hlt
dec
add
jg
ins
leave
jne
jo
mov
aas
add
sub
sub
shr
jl
lods
push
inc
and
inc
fsubr
cmp
jmp
jb
(bad)
scas
or
cdq
ret
addr16
jbe
xor
jb
(bad)
mov
repnz
jb
or
adc
push
inc
adc
or
clc
jmp
add
add
(bad)
call
(bad)
gs
not
jnp
retf
push
shr
cmc
(bad)
cs
mov
mov
xor
bound
add
imul
adc
in
xor
mov
xchg
sbb
dec
add
enter
int3
push
add
jb
repz
repz
shr
(bad)
mov
repz
sub
push
sar
and
adc
and
(bad)
(bad)
(bad)
push
dec
scas
call
pop
das
rcl
mov
leave
retf
pop
mov
bound
(bad)
jl
movs
lods
mov
mov
sub
jns
outs
add
cli
adc
pusha
sbb
sub
mov
inc
dec
push
adc
test
sahf
fcom
(bad)
xlat
adc
sub
dec
xchg
inc
outs
call
cmp
sub
or
sahf
rcr
(bad)
(bad)
inc
hlt
es
push
adc
add
jns
cmp
ret
push
daa
mov
jne
loope
aaa
sbb
cld
(bad)
jmp
rcl
das
adc
inc
clc
and
add
pop
mov
dec
sbb
(bad)
(bad)
jmp
aad
jno
jecxz
sar
fsub
(bad)
(bad)
jo
fsub
jmp
test
mov
jo
cdq
or
push
mov
hlt
and
push
in
leave
aam
fnsave
mov
and
mov
(bad)
(bad)
(bad)
mov
retf
xor
cmps
sbb
fldenv
xor
movs
xor
inc
push
jns
mov
push
xor
xor
loope
inc
push
push
sbb
pop
loopne
xor
sub
test
add
cmp
and
ins
nop
and
lock
pop
leave
dec
sti
repnz
push
idiv
(bad)
out
jbe
clc
daa
xor
mov
sahf
mov
out
cwde
out
jnp
stos
push
stc
sbb
or
(bad)
fild
inc
pop
outs
add
sti
in
mov
or
push
and
mov
mov
mov
frstor
jae
ja
arpl
shl
cmc
loopne
sub
enter
sub
jnp
sub
or
(bad)
(bad)
(bad)
jmp
inc
lock
je
xchg
or
sbb
clc
mov
adc
push
xor
fcomip
xor
pop
ret
lahf
cmp
daa
cli
and
sti
mov
pop
(bad)
dec
movs
mov
inc
mov
sbb
dec
inc
fbld
call
adc
xor
das
(bad)
(bad)
cmp
rcr
inc
inc
imul
mov
sbb
push
stos
sub
(bad)
dec
mov
mov
dec
mov
dec
or
dec
jmp
inc
jmp
pop
dec
lods
stc
sbb
test
mov
push
mov
jmp
mov
jne
aaa
das
lock
ret
push
fdivr
sub
imul
pop
icebp
inc
push
sahf
(bad)
(bad)
adc
sub
jne
jle
(bad)
(bad)
(bad)
jmp
fwait
and
jne
mov
push
scas
sub
jo
jmp
test
repnz
jae
pop
cmp
adc
clc
inc
jb
nop
pop
rcl
xchg
inc
inc
and
repnz
(bad)
(bad)
dec
jecxz
ins
clc
mov
and
and
test
push
pop
aad
add
movs
or
dec
(bad)
(bad)
(bad)
(bad)
cmp
pop
and
cmps
or
add
mov
enter
pop
out
(bad)
call
out
movs
mov
mov
test
(bad)
(bad)
(bad)
call
call
es
sbb
or
lahf
adc
mov
out
in
hlt
xor
inc
mov
stc
jns
cmp
push
push
(bad)
add
je
mov
jo
mov
mov
mov
fwait
xchg
fiadd
add
or
xor
ficom
mov
test
pop
cmp
cmp
add
ret
cmp
ins
bound
push
jne
arpl
dec
pop
es
call
or
out
dec
pop
rcl
push
xor
(bad)
(bad)
push
(bad)
push
sbb
rol
adc
sub
or
ja
ins
sahf
push
add
enter
neg
clc
cs
das
adc
push
sub
aaa
mov
push
popa
outs
sub
cmp
mov
mov
pop
push
sbb
outs
push
jne
(bad)
les
cld
jmp
sbb
pop
lds
mov
jnp
pop
jno
das
sar
sbb
mov
js
cmp
jno
aam
inc
xor
jmp
push
popf
mov
lahf
jmp
jo
hlt
test
je
push
add
push
jne
or
ins
add
add
stos
mov
lock
(bad)
jmp
(bad)
rol
jmp
addr16
(bad)
fldenv
inc
das
aam
fwait
clc
sub
pop
enter
mov
(bad)
ffree
pop
add
popf
frstor
aam
add
fimul
sub
fwait
shl
data16
or
or
mov
xor
call
push
mov
sbb
mov
fwait
outs
mov
pop
and
ret
sar
xchg
gs
rcl
mov
and
std
mov
sbb
push
call
outs
jle
mov
push
mov
ficom
out
push
sub
push
cmp
(bad)
inc
clc
sub
or
add
rcr
loop
pop
fcmovnb
lea
pop
fldenv
push
imul
nop
fcom
push
call
neg
pop
dec
pop
dec
adc
push
sub
mov
pop
sub
(bad)
mov
sbb
fild
pop
inc
loope
inc
dec
cdq
pushf
sbb
mov
mov
pop
fadd
call
add
xchg
fwait
and
dec
repnz
ret
push
add
int
and
and
inc
in
or
inc
iret
dec
pop
dec
mov
(bad)
movs
mov
push
fs
push
add
push
or
and
xchg
pusha
add
(bad)
(bad)
(bad)
inc
(bad)
sbb
pop
xor
inc
pop
sbb
inc
out
mov
and
or
mov
es
pusha
adc
sub
push
inc
ret
(bad)
jmp
inc
jno
cmc
jmp
out
jmp
add
add
ss
add
sub
xchg
jb
(bad)
(bad)
(bad)
jmp
inc
dec
ret
push
mov
or
fld
push
xchg
and
pop
push
jmp
fisub
push
or
cmp
imul
add
or
or
pop
jl
push
mov
cmp
add
mov
sbb
mov
hlt
fwait
test
push
imul
mov
lock
dec
add
cmp
aam
mov
call
movs
nop
push
mov
jb
pop
mov
lods
mov
cmps
add
push
ror
pop
mov
or
(bad)
out
es
(bad)
(bad)
push
xchg
or
push
pop
and
mov
cmp
xor
repnz
sub
retf
adc
jmp
inc
scas
in
in
dec
fcmovb
dec
lock
xor
loopne
mov
mov
push
mov
xchg
push
dec
and
pusha
fsub
cmp
or
add
xlat
out
ins
xor
(bad)
(bad)
(bad)
mov
lock
inc
push
xchg
mov
test
ret
hlt
xchg
inc
pop
xchg
ret
dec
das
pop
push
nop
dec
and
or
in
and
and
dec
jb
(bad)
push
or
mov
jg
call
push
push
jns
ficom
jno
fidiv
jns
repz
push
pop
clc
dec
push
and
jo
cdq
in
xchg
pop
inc
pop
pop
das
icebp
(bad)
(bad)
cmp
mov
inc
movs
sub
or
push
nop
add
sub
cmp
lock
ret
xor
cmp
jno
leave
(bad)
dec
adc
mov
pop
inc
or
daa
add
jl
pop
pop
or
pusha
and
clc
or
call
adc
push
pop
ins
pop
iret
jl
inc
mov
inc
jg
(bad)
pusha
daa
mov
into
in
adc
mov
sub
dec
(bad)
jmp
call
rcr
fldcw
sub
ins
stos
or
loope
cs
push
add
in
mov
pop
mov
in
or
mov
xor
cmp
pop
push
jb
add
adc
push
push
std
call
mov
lock
push
in
xor
and
add
push
push
cmp
cmp
pop
mov
jg
mov
add
adc
add
push
and
push
(bad)
add
clc
sub
nop
pushf
dec
xor
cs
add
cmp
adc
push
aad
xor
dec
sahf
addr16
repz
push
adc
data16
out
jns
mov
inc
js
adc
enter
pop
enter
out
cli
jmp
out
push
sbb
stos
shl
push
ins
sub
push
inc
neg
or
(bad)
(bad)
push
outs
dec
je
(bad)
adc
pop
cmovae
xchg
sub
pop
pop
mov
pop
lock
nop
enter
cmp
imul
jae
sbb
sub
pop
adc
(bad)
(bad)
jmp
inc
sbb
xor
and
fcomp
inc
pop
adc
or
sub
adc
scas
push
jecxz
xchg
mov
push
aad
(bad)
call
cmp
rcr
pop
cvttps2pi
xor
mov
jmp
ds
jno
mov
sar
pop
adc
and
loopne
push
sub
inc
fbld
call
fisttp
call
clc
clc
rcr
fbstp
cmp
jo
add
out
or
sub
(bad)
mov
xchg
cmps
shl
cs
inc
sbb
mov
dec
bound
add
(bad)
(bad)
call
inc
popf
push
xchg
aam
mov
lock
ds
mov
add
push
mov
fmul
jmp
das
ror
inc
dec
push
mov
inc
jmp
xchg
js
es
lock
push
addr16
or
mov
push
add
(bad)
jmp
(bad)
jmp
and
xchg
(bad)
jg
adc
or
push
test
adc
mov
(bad)
(bad)
jmp
pusha
xchg
sub
mov
lea
mov
inc
mov
jg
cli
jecxz
xchg
(bad)
push
xor
shl
shl
(bad)
mov
mov
imul
shl
xor
sti
mov
or
aas
adc
addr16
add
movs
xor
fcom
scas
adc
pop
test
loopne
cmc
add
xchg
(bad)
(bad)
push
hlt
add
cs
stc
test
pmulhw
xchg
inc
dec
adc
stos
cmps
add
pop
mov
jo
mov
call
jo
sbb
mul
mov
(bad)
dec
jle
mov
cmp
and
and
dec
test
sbb
sbb
(bad)
(bad)
(bad)
mov
or
mov
pop
cmps
repnz
cmp
clc
fld
push
(bad)
(bad)
push
hlt
dec
fucomp
and
mov
or
or
sbb
rcl
push
js
push
(bad)
(bad)
(bad)
(bad)
call
jmp
pop
pushf
push
in
(bad)
lods
loopne
inc
xchg
mov
loopne
sbb
fsubr
cli
(bad)
(bad)
push
fsubr
cmp
mov
push
and
mov
mov
test
adc
sar
jbe
(bad)
(bad)
jmp
and
inc
int3
ss
mov
enter
mov
rol
mov
lds
nop
xchg
div
(bad)
(bad)
(bad)
inc
dec
mov
cmp
out
cdq
push
add
neg
adc
pop
cmps
jge
pop
call
cli
cli
cdq
jbe
ins
push
or
sahf
add
jg
cmc
inc
sbb
pop
out
iret
icebp
push
adc
fld
(bad)
(bad)
fistp
bound
xchg
adc
and
inc
cwde
sub
dec
adc
pop
cmc
jmp
pushf
test
inc
mov
adc
dec
out
ins
icebp
inc
inc
(bad)
call
nop
jbe
inc
xor
test
xor
mov
and
jae
(bad)
(bad)
call
mov
dec
and
xchg
or
mov
xor
push
or
lods
shl
das
arpl
jbe
inc
push
mov
sub
jge
sub
movs
repz
and
dec
mov
inc
xor
scas
cwde
push
cwde
dec
xor
pop
xchg
xchg
adc
push
nop
mov
(bad)
(bad)
mov
add
jl
push
add
mov
xor
sbb
nop
cmps
dec
(bad)
push
cld
dec
inc
pop
push
in
pop
sbb
push
imul
pop
push
outs
xchg
fld
ins
pushf
(bad)
sbb
mov
mov
(bad)
cmps
pop
adc
add
push
inc
rcr
mov
pop
call
popf
and
cmp
or
cli
(bad)
call
loope
mov
and
mov
xor
(bad)
(bad)
jg
pop
dec
jbe
and
xor
mov
pop
jno
pusha
iret
leave
mov
(bad)
jmp
(bad)
iret
dec
pop
mov
cs
test
jns
in
lock
je
(bad)
(bad)
mov
enter
fisub
les
and
test
fdivr
mov
and
jno
scas
call
and
sub
and
int3
cmp
(bad)
mov
call
sahf
int
and
(bad)
(bad)
(bad)
dec
call
cmps
(bad)
leave
inc
cmp
gs
xor
and
test
mov
push
clc
(bad)
inc
and
dec
mov
adc
push
xor
mov
and
push
pop
sub
shl
sub
mov
sbb
inc
add
pop
sti
in
xor
(bad)
loopne
(bad)
(bad)
fdivr
fdiv
loope
inc
rcl
mov
lods
adc
or
cmps
jmp
int3
scas
loopne
push
jo
enter
pop
repz
(bad)
call
scas
outs
jae
stos
push
aam
out
add
xchg
and
mov
and
and
dec
mov
(bad)
call
cmp
movs
iret
mov
cmps
in
mov
imul
dec
in
jecxz
stos
mov
mov
mov
mov
aaa
sbb
clc
(bad)
call
lea
or
fst
inc
mov
jno
sub
(bad)
(bad)
mov
cmp
in
adc
das
pusha
push
cwde
inc
xor
loope
pop
test
mov
(bad)
push
movs
push
movs
aad
fadd
test
lods
pop
or
ins
or
and
xor
(bad)
(bad)
call
mov
jno
nop
adc
push
fld
cmp
sbb
ds
mov
dec
mov
push
(bad)
or
loop
push
mov
xchg
rcl
(bad)
jmp
jo
clc
pop
test
(bad)
xchg
sbb
pop
scas
mov
nop
cmp
sub
mov
and
sub
jno
les
(bad)
push
in
sub
call
dec
js
scas
jg
call
xchg
dec
mov
sbb
into
push
pop
mov
sub
push
dec
mov
sub
repnz
xor
sub
pusha
push
jb
push
dec
xor
adc
lea
test
fdivrp
(bad)
(bad)
(bad)
jg
inc
cwde
imul
test
push
adc
fadd
push
inc
push
pop
dec
(bad)
call
into
cmp
push
cmp
push
imul
imul
mov
pop
loope
imul
stos
dec
inc
rcl
sub
inc
sub
mov
pop
les
movs
inc
fimul
mov
mov
mov
sar
fdivr
(bad)
fbstp
pop
sub
jo
in
jns
test
cs
leave
sub
outs
das
sbb
ret
movs
test
pop
aaa
std
or
inc
repz
(bad)
scas
pop
fadd
lock
cmp
and
nop
call
pop
rcl
xchg
push
aad
cmp
mov
cdq
fisttp
cmp
add
(bad)
lods
push
mov
aad
jmp
or
adc
call
jb
mov
or
pop
das
aad
(bad)
fucomip
clc
xchg
rol
mov
dec
shl
adc
add
ja
lahf
and
outs
clc
(bad)
call
inc
imul
lock
js
sar
jb
mov
add
cli
sbb
daa
inc
push
cmps
fild
imul
pop
aam
mov
jg
inc
gs
push
loope
inc
out
sub
jbe
jmp
(bad)
(bad)
(bad)
call
mov
js
or
cmp
sbb
test
sbb
adc
movs
sbb
lea
add
fdiv
add
mov
cmps
or
add
dec
ret
mov
daa
xchg
mov
pop
xchg
jg
dec
push
outs
inc
ins
or
inc
xor
(bad)
(bad)
call
or
mov
or
xchg
(bad)
ins
push
add
mov
xor
(bad)
(bad)
(bad)
push
pop
pop
(bad)
adc
sub
test
inc
sbb
and
dec
retf
add
ja
cli
jg
call
mov
add
aas
mov
jmp
ins
push
jg
sub
or
pop
xchg
sub
call
pushf
mov
or
adc
cdq
xchg
cmp
(bad)
(bad)
or
in
add
pop
es
adc
dec
pop
mov
jge
add
dec
or
mov
clc
(bad)
call
push
and
add
xchg
add
dec
retf
xchg
sbb
ror
push
data16
jg
(bad)
je
and
lods
add
sbb
js
scas
retf
lods
mov
jmp
(bad)
retf
pop
push
(bad)
mov
pop
pop
push
push
stos
push
scas
aas
(bad)
or
(bad)
jg
pop
sbb
pop
pushf
or
aad
or
push
or
xchg
mov
push
add
(bad)
(bad)
push
retf
fild
jmp
jno
mov
aam
inc
scas
lahf
xlat
or
jbe
test
or
sub
out
and
pushf
ss
push
ss
adc
ja
xchg
ret
(bad)
out
cmp
jo
or
mov
(bad)
jmp
push
pop
aaa
out
adc
shr
add
les
sub
rol
mov
das
sar
and
je
mov
cmp
dec
fild
xchg
cmc
(bad)
(bad)
call
call
repnz
test
je
xor
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
jmp
jg
and
pop
cmp
in
jb
and
adc
dec
push
dec
leave
int3
jbe
adc
(bad)
(bad)
(bad)
(bad)
jmp
dec
js
add
jmp
inc
add
aam
ins
xchg
stos
fdivr
mov
rol
jmp
(bad)
push
mov
mov
cld
dec
sub
adc
and
cmovne
add
jge
and
call
mov
(bad)
mov
and
and
jecxz
cmp
cli
arpl
sar
push
inc
inc
and
sti
xor
adc
xchg
or
pop
ret
cmp
sub
inc
adc
or
in
pop
jne
ins
xor
mov
std
(bad)
(bad)
ds
int
inc
or
cmp
shl
scas
dec
lods
cmp
fbstp
(bad)
call
inc
push
in
icebp
pop
inc
adc
outs
and
inc
(bad)
jle
cmp
cmp
inc
stos
pushf
cmp
xchg
mov
and
add
js
neg
add
xchg
adc
xchg
pop
mov
dec
or
cli
adc
adc
sti
or
scas
jmp
sbb
adc
mov
sbb
adc
call
inc
sbb
pop
cmp
mov
inc
cmp
(bad)
cmp
xchg
or
outs
push
test
je
adc
ins
xchg
mov
jmp
test
adc
dec
cdq
mov
push
jne
inc
jg
jle
xchg
daa
adc
stos
(bad)
(bad)
(bad)
dec
fs
stos
adc
adc
cwde
or
jecxz
idiv
shl
cmp
(bad)
(bad)
mov
leave
iret
lods
and
inc
cli
cmp
fiadd
push
xor
or
jge
(bad)
(bad)
jg
adc
bound
jbe
outs
popf
xor
mov
fstp
fld
sar
fcomp
mov
outs
or
div
xchg
(bad)
(bad)
(bad)
(bad)
fst
xor
push
jae
cmp
jb
jmp
mov
mov
clc
sahf
push
cld
(bad)
(bad)
call
pop
and
and
jmp
test
pop
shld
gs
cmp
cmp
(bad)
call
inc
pusha
mov
rcr
xor
xlat
les
xchg
ficom
out
jmp
ret
out
push
cmp
sub
cmp
jecxz
push
jl
out
adc
das
sar
rol
jle
cs
xor
(bad)
sbb
pop
imul
js
xchg
pop
jg
push
pop
jbe
xor
pop
fcmovu
in
outs
clc
mov
sub
mov
imul
jo
xchg
xchg
je
sbb
or
fnstcw
mov
adc
jmp
inc
dec
clc
(bad)
scas
jno
sbb
mov
imul
sub
xor
fbld
adc
jo
xor
add
call
outs
jge
hlt
jne
(bad)
(bad)
(bad)
jg
pop
add
xor
cmp
jecxz
push
jo
sbb
lock
mov
inc
pop
jns
jmp
mov
in
into
inc
add
enter
iret
mov
pop
(bad)
and
push
js
xchg
fmul
dec
in
add
ret
lods
mov
cmp
add
mov
(bad)
(bad)
cmp
jl
cmps
ds
pop
pop
lods
push
sti
dec
jp
ret
(bad)
mov
dec
gs
sbb
inc
lods
dec
clc
jmp
and
or
or
pushw
(bad)
cmp
add
inc
ins
or
bound
fadd
xchg
dec
add
(bad)
(bad)
mov
or
cmp
add
push
sbb
xor
xor
add
inc
retf
lods
push
mov
out
aad
leave
(bad)
out
push
jo
mov
sub
(bad)
fcomip
pop
fld
ror
out
mov
pop
add
aam
push
cli
jmp
cmp
mov
pop
add
jae
imul
sbb
mov
dec
push
or
aam
inc
add
nop
sub
cs
test
inc
xor
mov
rep
push
push
jo
push
(bad)
fbld
push
inc
dec
jnp
(bad)
dec
jns
call
leave
ja
mov
push
jmp
ds
(bad)
(bad)
call
data16
mov
bound
out
aam
outs
mov
cmp
add
and
adc
push
xchg
rcl
fild
jo
pusha
test
bnd
(bad)
(bad)
dec
add
pop
or
mov
jns
popa
xor
jl
ret
ret
gs
xor
scas
jb
push
jno
out
frstor
add
jne
pop
bound
out
xor
(bad)
(bad)
push
jb
gs
iret
icebp
cmps
jbe
jbe
out
dec
fwait
xor
cmp
push
cmps
aad
mov
dec
pop
(bad)
mov
es
bound
mov
popf
aam
outs
aaa
mov
es
imul
jbe
(bad)
(bad)
push
inc
call
mov
and
sub
ins
ret
push
dec
fistp
inc
sub
(bad)
push
sbb
das
push
imul
rcl
dec
cs
pop
or
lds
(bad)
call
sbb
push
arpl
jne
xor
jg
out
add
sub
outs
(bad)
out
sub
sti
mov
xlat
lea
sub
sbb
inc
push
outs
jmp
(bad)
js
and
aad
mov
add
sub
pushf
push
les
gs
call
nop
sahf
sbb
ret
and
dec
cmps
sbb
push
(bad)
(bad)
(bad)
jg
and
dec
jmp
mov
shl
paddusb
hlt
mov
int
(bad)
(bad)
call
test
mov
fsub
je
adc
pop
shl
(bad)
dec
inc
add
retf
xor
fdivr
inc
aas
inc
es
mov
ja
and
mov
push
data16
jmp
std
(bad)
(bad)
(bad)
call
fidivr
je
xchg
icebp
and
lock
cdq
ret
xchg
xchg
je
sti
sub
jge
sub
or
nop
push
add
je
or
(bad)
(bad)
push
jne
inc
add
push
outs
sbb
jmp
mov
xor
aam
mov
mov
(bad)
sahf
push
movs
ret
pop
movs
out
cmp
(bad)
(bad)
cmp
je
sbb
lods
push
imul
add
xlat
int
inc
(bad)
jmp
inc
xor
push
mov
dec
adc
pop
pop
and
(bad)
call
inc
push
jo
sub
ins
pop
sub
movs
in
dec
pop
push
and
adc
mov
(bad)
out
cmp
jle
(bad)
jmp
push
and
iret
xchg
sub
sbb
mov
aam
inc
xor
pop
sbb
repnz
cmp
and
and
sub
or
std
call
inc
mov
sbb
or
sar
sub
mov
add
xchg
push
adc
and
mov
in
xchg
fstp
adc
or
imul
sub
movs
(bad)
and
test
dec
or
mov
(bad)
call
cmp
jle
inc
dec
cld
nop
fwait
add
inc
inc
dec
adc
pop
clc
fsub
cmp
jmp
inc
xchg
mov
mov
mov
adc
add
or
xor
xor
dec
fwait
movs
(bad)
push
lea
and
mov
test
(bad)
call
cmp
xchg
pushf
sbb
scas
rol
sub
arpl
push
pusha
jo
call
dec
xor
out
fs
aam
jne
xchg
lea
cmps
aam
xor
mov
clc
add
(bad)
(bad)
(bad)
jnp
mov
xchg
pop
ja
push
dec
jge
and
cld
(bad)
xchg
pop
pop
in
cs
inc
clc
push
inc
aas
fwait
fs
sub
(bad)
inc
add
cmp
(bad)
mov
mov
jo
mov
ret
pop
test
loopne
mov
push
(bad)
push
and
adc
push
xor
into
sub
psrad
push
jae
call
pop
mov
pushf
cmp
add
out
call
(bad)
push
mov
or
mov
push
jbe
mov
adc
xchg
test
arpl
push
inc
sub
(bad)
adc
fs
(bad)
jg
inc
adc
xlat
jg
jmp
in
loop
mov
mov
fsub
adc
or
loopne
or
(bad)
(bad)
jg
push
adc
pop
leave
push
inc
mov
inc
fisub
sbb
adc
inc
mov
or
mov
dec
and
fild
movs
(bad)
cmps
push
mov
inc
out
clc
(bad)
(bad)
jle
push
dec
jns
lahf
mov
cli
push
out
dec
pop
lea
mov
mov
loopne
paddsb
mov
cmovns
push
(bad)
(bad)
(bad)
push
sbb
stos
rcl
sbb
inc
bound
add
add
push
call
(bad)
(bad)
call
or
mov
cmp
pop
jmp
push
cmp
(bad)
call
inc
dec
xchg
mov
add
mov
daa
ins
jmp
add
out
(bad)
(bad)
jmp
add
inc
and
fild
lea
mov
sbb
dec
(bad)
mov
test
mov
cdq
dec
add
sbb
push
std
dec
dec
add
scas
cwde
fild
mov
enter
jge
sub
mov
ins
mov
(bad)
(bad)
call
jl
mul
inc
test
push
jg
or
add
inc
cmp
sahf
dec
loope
jle
pop
xchg
add
mov
dec
pop
enter
std
mov
dec
leave
adc
movsx
mov
mov
inc
fld
adc
jg
cmp
(bad)
(bad)
call
je
jecxz
adc
push
adc
ret
mov
cs
inc
mov
(bad)
inc
dec
mov
jg
call
lea
push
jle
jne
or
daa
cmp
(bad)
(bad)
call
mov
inc
dec
bound
call
ret
sub
js
pop
sub
(bad)
(bad)
push
ds
and
adc
sar
xor
jl
cld
adc
es
(bad)
mov
call
cmp
pop
jmp
test
cmp
sub
lock
adc
push
add
data16
and
(bad)
mov
push
(bad)
(bad)
(bad)
jg
xchg
or
inc
push
dec
push
jne
int3
inc
loop
fwait
out
cwde
adc
ss
or
(bad)
(bad)
inc
(bad)
jge
retf
lds
xor
add
pop
sbb
pop
lock
pop
or
or
mov
cmp
sub
(bad)
push
test
sub
mov
ror
push
jge
call
cmc
stos
mov
mov
sbb
push
jle
adc
leave
pop
adc
push
inc
rol
(bad)
(bad)
(bad)
adc
mov
(bad)
leave
xchg
jno
pop
jb
mov
lock
sbb
jmp
(bad)
jo
push
sti
loopne
cmps
mov
or
in
jne
jmp
adc
inc
pop
dec
sbb
mov
jle
push
jbe
sub
dec
(bad)
arpl
je
aas
mov
shr
adc
mov
rol
xor
adc
sbb
push
movs
lea
xchg
lea
push
fxtract
dec
(bad)
enter
push
dec
dec
mov
inc
std
cmp
outs
xchg
lea
or
addr16
mov
jnp
and
adc
lock
add
and
inc
dec
pop
ins
lea
adc
outs
xor
(bad)
cmp
or
adc
sbb
xchg
rcr
push
(bad)
(bad)
dec
movs
add
push
and
adc
sbb
lahf
sub
and
inc
test
(bad)
(bad)
fild
xchg
mov
movs
cmp
and
es
inc
fistp
(bad)
jmp
xor
fst
nop
inc
cdq
sbb
test
addr16
test
(bad)
(bad)
call
push
dec
xor
mov
adc
arpl
xchg
jmp
sbb
(bad)
(bad)
(bad)
(bad)
jnp
sbb
push
fild
cmp
adc
push
add
sub
mov
mov
xor
icebp
mov
mov
and
pop
(bad)
(bad)
(bad)
(bad)
jmp
pop
mov
arpl
or
mov
dec
mov
pop
push
cmc
inc
inc
sbb
je
mov
ror
mov
mov
int3
mov
popa
mov
mov
(bad)
(bad)
jmp
aad
shl
clc
call
in
lock
add
loopne
push
jmp
dec
shl
add
shl
ret
mov
dec
aam
stos
mov
fcom
jne
mov
inc
in
sbb
gs
pop
mov
out
add
dec
push
ret
xor
adc
or
(bad)
(bad)
jmp
xchg
aad
add
shr
bound
and
clc
push
clc
cld
xchg
xor
call
ficomp
dec
and
sub
mov
pop
shl
push
cmp
push
push
mov
xchg
daa
cld
(bad)
(bad)
jg
mov
shl
or
aad
lock
and
add
push
(bad)
call
xchg
push
das
pusha
mov
adc
push
mov
ins
xor
sub
sbb
(bad)
jg
adc
cwde
fstp
fwait
pop
fld
mov
mov
pop
sub
loopne
(bad)
(bad)
inc
fincstp
cwde
add
fsub
rcl
mov
ins
jno
xlat
ficom
jl
push
jmp
inc
mov
(bad)
jmp
pop
dec
dec
sbb
jmp
mov
xor
fld
sub
and
or
push
(bad)
(bad)
(bad)
push
movs
sub
(bad)
mov
mov
push
rcl
jb
jmp
dec
xchg
hlt
es
cld
push
xor
add
push
adc
add
mov
adc
or
dec
xchg
cli
(bad)
cld
das
xor
xor
stos
xor
jb
dec
xor
xchg
hlt
mul
aas
and
je
loopne
or
push
jne
outs
adc
push
popa
scas
dec
push
mov
icebp
movs
les
les
push
daa
push
test
ds
fimul
add
retf
push
rol
jno
inc
push
scas
push
(bad)
jg
jmp
pop
and
hlt
xchg
add
xor
xchg
jmp
mov
psraw
pop
mov
pusha
or
(bad)
jmp
add
push
sbb
js
(bad)
xchg
pop
sub
inc
mov
mov
sti
arpl
mov
adc
sub
or
(bad)
push
cld
outs
adc
pop
jbe
les
sub
lea
mov
rol
test
hlt
xchg
shl
test
sub
popf
cdq
add
push
stos
js
adc
repz
(bad)
jb
adc
pop
std
idiv
adc
(bad)
loopne
(bad)
(bad)
(bad)
dec
xor
xchg
cld
inc
adc
es
call
cmp
aam
in
lock
jmp
loope
mov
jl
jg
mov
push
cmp
out
cmp
fiadd
int3
xchg
sbb
fsubr
and
inc
sar
call
xchg
jbe
push
movs
pop
sti
shr
sbb
rcr
and
shr
add
add
aas
xchg
mov
add
push
shl
(bad)
je
xor
fsubr
pop
inc
(bad)
enter
daa
int3
shl
(bad)
(bad)
inc
in
sbb
add
add
shl
add
js
mov
or
or
mov
div
mov
(bad)
(bad)
(bad)
(bad)
mov
shl
popf
fcomp
fst
popa
fidiv
jne
cs
and
test
mov
in
cmc
mov
xor
inc
add
adc
push
adc
jg
dec
inc
adc
adc
jnp
sub
ret
xor
push
xor
(bad)
(bad)
jge
adc
xchg
and
or
push
movs
call
(bad)
je
(bad)
(bad)
inc
int3
adc
pop
scas
pop
pop
psadbw
sub
hlt
dec
push
pop
adc
push
(bad)
jg
call
dec
cli
sbb
mov
adc
mov
rcr
jb
jp
cmp
pop
(bad)
(bad)
(bad)
(bad)
jmp
sbb
loopne
dec
push
push
js
sbb
sbb
test
(bad)
mov
fsubr
sub
mov
ror
scas
loope
xor
es
and
(bad)
(bad)
(bad)
call
enter
pop
add
movs
mov
dec
aas
jo
dec
pusha
inc
sbb
pop
sub
sbb
ss
add
xor
test
push
mov
cs
cli
(bad)
fild
pop
in
pop
ror
pop
cli
lock
cld
ja
outs
ins
fcomp
js
push
adc
xlat
mov
xlat
adc
push
add
inc
push
and
(bad)
(bad)
(bad)
fist
mov
int3
inc
mov
mov
push
out
loopne
add
xor
lea
inc
inc
cmc
(bad)
(bad)
jmp
clc
sbb
cld
cmp
add
push
add
adc
push
push
or
dec
dec
push
ins
pop
sub
(bad)
outs
sbb
outs
adc
push
ficom
cli
push
sub
jnp
xor
sti
in
popa
enter
dec
push
adc
mov
out
scas
dec
loope
cmp
ins
ret
add
fld
cmp
out
(bad)
(bad)
jg
jp
ret
outs
dec
xchg
ret
add
sub
and
xchg
sar
(bad)
fild
mov
sar
or
pop
mov
ret
push
mov
clc
(bad)
(bad)
dec
mov
mov
sub
xchg
popa
ror
dec
das
inc
push
outs
push
sbb
les
jl
add
push
(bad)
retf
or
(bad)
(bad)
in
jmp
in
lds
popf
daa
addr16
and
sub
sbb
mov
out
or
mov
cmp
mov
movs
scas
and
push
push
or
xor
(bad)
xchg
mov
sub
sbb
adc
ret
pop
and
push
movs
rol
sbb
inc
(bad)
xor
push
push
add
inc
mov
add
(bad)
(bad)
mov
enter
icebp
mov
shl
pop
fsub
mov
outs
adc
or
push
adc
test
pop
nop
(bad)
jp
stos
imul
shr
les
mov
mov
jno
fdiv
adc
sub
inc
gs
xchg
adc
or
push
sbb
call
inc
dec
xor
sbb
adc
cli
add
sbb
pop
std
(bad)
call
sub
pusha
jmp
xor
loop
retf
pop
(bad)
xlat
add
(bad)
(bad)
(bad)
dec
aam
add
sub
clc
jnp
popf
inc
add
inc
jp
ret
pop
adc
mov
(bad)
bound
pop
dec
iret
mov
mov
mov
mov
mov
(bad)
jg
and
inc
add
pop
cmp
mov
mov
ret
sub
hlt
inc
dec
cli
(bad)
push
or
push
adc
dec
sbb
sbb
mov
push
pop
cmc
inc
out
mov
sbb
adc
ds
shl
(bad)
(bad)
(bad)
(bad)
jnp
mov
hlt
jns
jle
pop
pop
jo
xor
xor
movs
nop
lock
sar
(bad)
(bad)
push
call
dec
dec
inc
test
jp
in
xor
sub
bound
push
std
mov
dec
mov
mov
(bad)
sub
dec
xor
xor
pop
lock
out
mov
inc
mov
sub
mov
push
cmc
imul
in
push
in
inc
rcr
lods
push
imul
jg
inc
cmp
xchg
test
call
iret
jns
xor
xor
rcr
(bad)
(bad)
call
pop
jp
xchg
inc
clc
popf
mov
std
(bad)
ret
cmp
mov
cmp
js
mov
mov
mov
mov
bound
(bad)
(bad)
call
sbb
fisttp
mov
mov
or
test
arpl
das
(bad)
(bad)
(bad)
call
je
cs
icebp
dec
xor
push
mov
pop
dec
jne
stos
outs
and
and
sbb
mov
add
(bad)
xor
adc
jmp
mov
mov
mov
push
test
jo
(bad)
(bad)
jmp
mov
sub
sahf
imul
jg
daa
imul
addr16
cwde
(bad)
sbb
dec
push
test
pusha
test
lock
shl
push
pop
iret
sub
push
push
jnp
push
cmp
loopne
aas
int
jns
mov
imul
mov
pop
pushf
mov
jb
inc
add
push
pusha
jmp
cmp
jmp
(bad)
push
cmp
and
fnsave
mov
or
and
or
movs
xchg
fs
(bad)
jmp
mov
aam
(bad)
pop
(bad)
and
and
add
in
add
lock
jb
push
pop
(bad)
push
dec
clc
adc
popf
adc
call
push
es
mov
out
adc
xchg
mov
jne
movs
and
inc
jns
in
aaa
je
(bad)
jns
or
jno
je
jb
push
and
sub
in
push
(bad)
mov
jns
outs
loopne
leave
or
test
inc
adc
or
sub
sub
sbb
mov
(bad)
(bad)
call
sbb
mov
mov
cmp
out
sti
add
and
or
aam
push
std
(bad)
call
pop
mov
xchg
xchg
pop
cmp
or
repnz
leave
leave
sub
push
push
popa
add
inc
mov
stos
xchg
(bad)
call
adc
or
mov
ins
cmp
and
(bad)
inc
pop
add
imul
or
add
(bad)
(bad)
(bad)
(bad)
mov
ret
or
jge
push
adc
jg
rcr
mov
and
cmp
fnstcw
xchg
pop
pop
adc
jnp
(bad)
loope
jmp
pop
push
inc
js
cwde
sbb
dec
scas
loopne
cld
cmc
mov
int
addr16
cmc
imul
cmc
inc
adc
shr
dec
repnz
int
xor
push
cmp
jnp
lock
sbb
push
daa
sub
sbb
daa
xor
jg
or
jl
fldcw
test
or
pop
nop
cmc
cmp
test
mov
loope
or
pop
pop
add
mov
and
xor
out
(bad)
jb
inc
rcr
push
movups
inc
(bad)
pop
xchg
dec
nop
nop
inc
push
out
jge
test
sbb
inc
lea
or
cli
in
add
outs
pop
pop
test
pop
cwde
xchg
sub
not
adc
ss
pop
je
cs
(bad)
jmp
or
jg
out
inc
outs
aaa
sub
mov
push
add
movs
mov
dec
mov
ins
(bad)
push
and
aas
mov
lahf
or
mov
add
lods
aas
jb
call
cmp
xchg
jl
or
xor
mov
or
push
sbb
lds
or
inc
dec
adc
cmp
mov
scas
xchg
sbb
push
rcr
xchg
in
scas
movs
and
jbe
mov
cmps
sbb
add
cmp
imul
push
sbb
out
adc
lds
adc
or
int
and
das
out
icebp
(bad)
(bad)
(bad)
cli
(bad)
pop
adc
ret
and
hlt
add
mov
fisub
loopne
outs
pop
cld
dec
(bad)
fwait
int
mov
cmp
pop
ja
or
es
xor
or
scas
clc
aaa
repnz
dec
fnsave
sbb
sbb
add
out
jecxz
outs
and
xor
jnp
inc
cld
in
mov
sub
test
cmp
mov
xor
jl
push
pop
mov
adc
add
mov
not
dec
inc
xor
test
pusha
ss
sbb
sub
inc
(bad)
out
dec
sbb
sbb
sbb
add
dec
test
test
fucomip
das
push
inc
inc
or
add
call
js
or
aas
xor
bound
scas
or
inc
mov
pop
imul
(bad)
dec
push
fcomp
jmp
jl
sbb
(bad)
mov
and
add
in
sti
sbb
or
adc
and
pop
xchg
pop
call
add
(bad)
call
(bad)
ss
ds
mov
in
push
adc
(bad)
pop
cld
add
out
add
stos
(bad)
ja
(bad)
out
mov
or
pop
repnz
xchg
sbb
mov
(bad)
call
mov
push
adc
sbb
sub
pop
adc
popa
loop
adc
and
(bad)
(bad)
(bad)
fcomip
jno
jmp
arpl
sbb
adc
stos
inc
lods
jmp
push
sbb
rol
out
push
jle
loopne
in
add
adc
pop
mov
cmc
(bad)
(bad)
aas
and
push
inc
out
sub
je
xor
shl
imul
xchg
sbb
jns
jno
(bad)
call
mov
movs
inc
sub
(bad)
iret
cmovno
ja
lods
pop
(bad)
(bad)
(bad)
push
xor
mov
ins
loope
call
int
stos
push
add
pop
dec
popa
outs
cli
(bad)
push
fcmovnb
cmps
jge
retf
and
mov
mov
dec
fstp
ret
jne
pop
dec
sbb
add
lock
pop
mov
aam
mov
mov
add
clc
repnz
outs
(bad)
jmp
test
(bad)
jae
dec
cli
pop
(bad)
xchg
push
push
aaa
and
int
add
and
pop
aad
mov
mov
adc
(bad)
call
sbb
dec
pop
sbb
sbb
nop
mov
pop
pop
or
pop
inc
lock
mov
(bad)
jmp
mov
xchg
adc
or
(bad)
out
leave
loope
(bad)
mov
mov
jnp
fistp
je
repz
je
dec
dec
xor
push
jmp
add
pop
xchg
and
stos
dec
mov
mov
cmp
add
imul
(bad)
(bad)
ficom
or
sub
lock
(bad)
jmp
(bad)
(bad)
(bad)
jmp
jae
jb
and
xchg
mov
push
inc
mov
hlt
pop
stos
ficom
lock
cli
inc
loope
out
cmps
xor
dec
xor
pop
push
xor
(bad)
fistp
ret
fwait
add
sahf
add
adc
enter
clc
(bad)
call
test
jg
sub
sar
jle
fwait
add
sbb
in
test
fild
adc
jg
call
ds
(bad)
xor
dec
(bad)
inc
loope
test
mov
fldcw
les
dec
add
inc
ret
lods
retf
push
pop
pop
mov
xor
sub
test
idiv
call
pop
gs
sub
das
imul
xchg
sti
ret
rol
or
sar
and
jecxz
jbe
(bad)
mov
mov
jge
jno
push
loopne
push
adc
(bad)
(bad)
inc
add
mov
or
movs
je
jmp
mov
push
xchg
mov
mov
xlat
retf
mov
push
pop
mov
jmp
pop
and
mov
sbb
enter
(bad)
dec
cmp
shl
mov
mov
and
pop
xor
sbb
iret
aas
cmp
inc
(bad)
push
jmp
jmp
test
dec
pop
sti
js
(bad)
(bad)
(bad)
mov
mov
out
and
adc
lods
ja
fsubr
mov
iret
adc
sbb
cli
jne
sti
cmps
or
xchg
pop
jmp
push
call
(bad)
loopne
xor
sti
out
jbe
or
adc
test
retf
popa
(bad)
or
jns
(bad)
inc
adc
mov
ds
test
das
pop
add
or
cmovo
aaa
leave
sar
jl
add
ror
cli
je
loopne
add
fadd
adc
ret
dec
cmp
jne
in
adc
add
add
pop
and
inc
jmp
aam
jnp
xchg
dec
push
jmp
add
(bad)
(bad)
push
adc
push
adc
pop
cmps
push
inc
dec
inc
jg
int
adc
daa
and
out
pop
xor
(bad)
(bad)
(bad)
jp
daa
movs
jecxz
or
sbb
mov
jle
in
lahf
(bad)
jmp
jp
lock
ret
and
lock
(bad)
call
pop
xchg
xchg
sbb
(bad)
lock
cmp
mov
adc
jge
jne
inc
pop
(bad)
inc
idiv
loopne
add
xor
dec
pop
add
(bad)
(bad)
(bad)
cmc
jp
pop
inc
mov
and
add
jnp
and
das
out
lods
lock
js
(bad)
(bad)
push
xor
pop
(bad)
jecxz
mov
je
shl
dec
mov
and
mov
rol
jg
add
pop
sbb
dec
inc
jbe
and
xor
cmp
lock
fidiv
jg
dec
js
js
test
test
outs
push
fsub
popa
push
dec
test
mov
or
xchg
dec
add
daa
or
ret
aad
add
leave
mov
add
xor
inc
add
loopne
(bad)
fcomip
push
mov
jmp
pop
cmp
sbb
sub
test
inc
pop
cli
push
cmp
xchg
sbb
(bad)
call
loopne
lods
dec
in
xlat
das
hlt
(bad)
jo
cwde
or
jle
frstor
aaa
pop
xor
pop
jle
mul
and
lea
dec
dec
test
and
(bad)
(bad)
(bad)
(bad)
fcmovne
pop
jnp
imul
pop
add
test
jns
js
push
mov
jle
fdivr
mov
pop
push
jae
sub
push
inc
call
and
inc
call
adc
add
daa
inc
add
call
cld
popa
cmp
jbe
mov
push
fild
and
(bad)
(bad)
(bad)
jg
fst
add
inc
add
in
mov
fild
jmp
push
add
dec
adc
jg
hlt
(bad)
push
aad
das
aam
push
jmp
das
xor
clc
dec
imul
push
dec
fistp
mov
shl
cmp
(bad)
or
aas
in
pop
dec
or
rol
pop
inc
pusha
pop
(bad)
(bad)
call
pop
or
or
sbb
xor
test
or
test
pop
icebp
mov
or
or
jnp
or
sbb
dec
xlat
xor
(bad)
jg
xchg
test
dec
jg
push
aad
jmp
in
lock
add
pop
ror
jecxz
jl
fnstsw
pop
std
(bad)
call
hlt
add
(bad)
push
imul
inc
adc
or
cmp
mov
mov
xchg
mov
sub
mov
pop
bound
mov
jl
out
and
aad
inc
retf
xchg
xchg
aaa
or
push
(bad)
(bad)
(bad)
push
fwait
sub
jno
mov
(bad)
in
stos
movs
xor
mov
add
imul
imul
ins
push
jg
idiv
fistp
jo
aam
outs
xor
dec
and
sub
xchg
inc
rcr
dec
pop
jmp
sbb
push
add
jmp
xor
dec
adc
sbb
(bad)
(bad)
(bad)
(bad)
out
scas
loope
data16
xlat
cmps
inc
int
gs
shl
jge
inc
pop
add
inc
scas
mov
(bad)
fild
cwde
inc
mov
or
add
pop
add
cmp
and
ret
jae
mov
(bad)
(bad)
cmp
imul
pop
adc
xchg
and
inc
repnz
xchg
add
mov
lahf
mov
cmp
mov
(bad)
dec
lds
(bad)
adc
dec
or
das
mov
(bad)
fs
(bad)
hlt
test
(bad)
(bad)
jmp
inc
fisubr
add
inc
xchg
add
add
rcl
mov
dec
(bad)
(bad)
fcomip
add
and
repnz
inc
push
adc
push
jmp
dec
outs
(bad)
inc
sti
scas
add
(bad)
(bad)
fist
sbb
sbb
cmp
dec
fistp
mov
add
(bad)
dec
les
ret
mov
cld
stos
enter
test
pop
pop
out
fisttp
das
(bad)
(bad)
(bad)
(bad)
in
and
addr16
pop
add
jmp
(bad)
(bad)
xor
dec
push
cmp
fwait
loop
(bad)
(bad)
fcomip
or
cld
out
cmp
scas
mov
push
adc
(bad)
push
(bad)
(bad)
mov
imul
sbb
sub
outs
movs
cmps
jge
inc
xchg
icebp
lock
test
scas
sub
xor
inc
and
sub
jmp
ins
jmp
pop
or
and
inc
(bad)
(bad)
jg
sub
shl
adc
fst
fs
test
sub
call
cmps
adc
xor
in
adc
or
inc
aas
push
sbb
and
xchg
add
out
and
das
xor
sub
adc
and
outs
jmp
(bad)
(bad)
fild
xchg
ret
pop
test
dec
jne
mov
mov
out
cli
dec
jecxz
rcl
pop
sbb
add
(bad)
dec
push
jbe
adc
sbb
mov
pop
xor
(bad)
(bad)
call
and
outs
push
push
or
add
inc
mov
in
neg
rol
hlt
jmp
or
outs
ins
mov
add
mov
(bad)
adc
dec
mov
xchg
clc
(bad)
call
popa
sbb
movs
jge
gs
aaa
xchg
pop
dec
ss
(bad)
jg
sbb
popf
add
push
pop
hlt
jmp
ret
popf
mov
sbb
mov
and
sub
std
ins
adc
dec
sti
rol
cmp
scas
mov
jg
add
add
inc
adc
add
mov
xor
jo
adc
data16
xchg
aaa
jp
inc
jbe
mov
call
sub
cmp
push
je
add
jno
mov
(bad)
(bad)
jg
pop
or
add
imul
popf
xor
jne
push
mov
ror
(bad)
call
std
nop
movs
mov
iret
enter
push
sar
add
stc
add
out
or
(bad)
jmp
pop
iret
xchg
xchg
or
dec
inc
mov
test
in
sub
and
call
jnp
adc
call
jne
ret
inc
cmp
mov
out
ret
in
mov
add
(bad)
(bad)
(bad)
inc
sub
sbb
dec
fs
ins
clc
sbb
add
xchg
ins
sbb
or
imul
dec
ins
jo
jns
jl
add
aam
pop
repnz
in
lock
sbb
add
pop
aaa
call
(bad)
aas
mov
xor
sub
in
movq
mov
and
lock
js
test
adc
inc
jl
das
mov
xchg
xchg
dec
(bad)
(bad)
inc
sbb
sub
dec
loopne
pop
loopne
pop
and
aas
jo
dec
sar
jmp
jecxz
mov
pcmpeqd
leave
lock
(bad)
(bad)
inc
jp
test
add
and
test
fisttp
lock
jmp
nop
add
enter
mov
push
and
add
add
inc
loope
or
or
aas
jo
das
sar
push
mov
das
push
jmp
pop
cmp
(bad)
(bad)
(bad)
outs
test
es
mov
pop
add
int3
push
inc
das
mov
sbb
aaa
dec
push
push
scas
dec
(bad)
jb
sub
or
in
or
push
and
int3
sub
xchg
xor
lds
(bad)
lods
push
lea
push
cld
ins
mov
outs
fs
and
inc
loope
mov
fs
(bad)
mov
loopne
mov
push
sbb
mov
or
movs
inc
shr
cli
bound
sub
push
shl
pushf
push
add
(bad)
mov
inc
dec
mov
mov
add
dec
(bad)
(bad)
call
push
or
mov
mov
mov
or
(bad)
inc
jb
pop
jb
aam
imul
adc
mov
clc
invd
daa
nop
pusha
es
popa
loopne
push
or
sbb
cs
aaa
mov
inc
pop
push
sbb
xchg
xchg
add
xor
pusha
or
adc
gs
inc
dec
outs
outs
aaa
call
cld
loopne
ins
or
add
push
movs
xchg
push
rcr
dec
(bad)
jmp
or
addr16
cwde
cvtps2pd
pop
(bad)
out
in
jae
jns
sub
movs
ds
(bad)
jg
mov
jg
rol
inc
adc
jmp
data16
push
mov
mov
xchg
(bad)
xchg
xchg
and
je
mov
nop
or
outs
cs
outs
(bad)
(bad)
(bad)
call
pop
test
adc
adc
ret
xchg
(bad)
fucom
xchg
fstp
das
hlt
(bad)
aad
jmp
and
pop
pop
sbb
(bad)
jg
sbb
adc
push
ins
movs
(bad)
imul
mov
jge
add
sbb
add
popa
(bad)
(bad)
(bad)
(bad)
jg
unpcklps
add
add
enter
inc
jg
add
push
(bad)
(bad)
call
xor
add
push
pop
cmp
or
fld
imul
adc
ror
inc
or
(bad)
(bad)
(bad)
call
or
loopne
sbb
inc
jp
push
pop
adc
add
pop
xchg
dec
out
xor
inc
loop
call
daa
push
add
dec
sbb
cmp
(bad)
fistp
stc
(bad)
call
mov
adc
xchg
add
jmp
pop
lea
jmp
test
rol
sub
mov
add
repz
inc
jmp
jno
loopne
dec
dec
add
movs
or
dec
dec
push
js
movs
mov
dec
xchg
jg
and
dec
pop
fs
jno
xlat
into
inc
xchg
add
fcomip
(bad)
dec
jmp
adc
and
mov
xlat
repnz
stos
jmp
cli
cmp
js
test
pop
sbb
adc
inc
xor
jo
inc
int3
call
mov
outs
mov
adc
(bad)
mov
xor
add
shl
jmp
mov
dec
xor
mov
pop
xor
mov
push
cmp
xchg
push
scas
push
icebp
jmp
jb
repnz
inc
push
fs
lods
sar
out
jg
cdq
pop
push
js
ficomp
fwait
or
push
cld
(bad)
(bad)
fist
movs
bound
cmp
mov
xor
add
fs
xchg
add
xchg
dec
or
mov
(bad)
(bad)
call
cmp
(bad)
dec
xchg
dec
xor
or
pop
icebp
das
ss
lds
mov
stos
xchg
pop
push
sub
test
or
(bad)
(bad)
fisttp
pop
jg
sbb
sbb
jg
fst
cli
inc
sub
sahf
sbb
mov
repz
dec
call
cld
push
sbb
(bad)
es
pusha
int
in
stos
jp
fist
adc
dec
ds
(bad)
call
in
stc
dec
imul
or
stos
test
(bad)
(bad)
jg
or
xor
cs
push
fcomp
dec
sub
and
mov
pop
(bad)
jmp
inc
add
adc
leave
out
jl
clc
jg
sub
aam
mov
push
push
leave
sbb
push
sbb
and
mov
add
popa
mov
out
mov
dec
inc
lock
leave
in
mov
call
mov
inc
iret
and
pushf
push
loope
dec
loopne
xor
or
(bad)
pop
dec
lods
or
pop
aad
aad
and
(bad)
call
lock
sbb
lea
xchg
sbb
jbe
xor
cmp
imul
or
pop
(bad)
(bad)
(bad)
call
sbb
push
pusha
jecxz
xchg
or
mov
in
mov
cwde
mov
dec
outs
inc
and
dec
inc
scas
or
call
shl
adc
inc
sub
mov
dec
sbb
dec
inc
jl
adc
adc
add
nop
sahf
in
mov
scas
popf
push
daa
mov
lahf
inc
lods
jne
popf
mov
adc
pop
(bad)
dec
jno
sbb
lahf
js
sbb
ins
or
sub
or
sub
test
(bad)
nop
adc
out
push
(bad)
(bad)
(bad)
inc
nop
les
xchg
and
mov
repz
pop
int3
and
lahf
cmp
add
or
jmp
push
jl
mov
jno
mov
cmp
sahf
jno
cmp
jbe
ins
stos
sub
or
(bad)
jmp
jne
dec
jne
add
fs
cwde
add
fnstenv
mov
xchg
or
ja
xchg
hlt
(bad)
inc
or
sbb
sub
mov
call
out
mov
(bad)
push
jmp
mov
dec
inc
popa
or
scas
in
mov
inc
outs
mov
call
xchg
sbb
add
bound
stos
aas
dec
ja
movs
mov
call
and
push
push
jno
out
outs
retf
xor
mov
out
loope
mov
(bad)
(bad)
call
add
xlat
push
and
jb
adc
mov
pop
or
mov
stos
jmp
enter
fisttp
out
and
mov
pop
or
and
std
(bad)
jg
push
push
cwde
mov
mov
sahf
add
mov
std
push
ret
push
adc
pop
dec
pop
ins
inc
or
cmp
xor
test
pop
(bad)
(bad)
(bad)
(bad)
call
sbb
cld
adc
inc
dec
sub
lock
mov
pop
mov
(bad)
(bad)
call
jne
jo
imul
jg
or
ds
dec
adc
adc
adc
test
pop
in
mov
add
(bad)
(bad)
(bad)
fidivr
int3
jle
push
push
pop
fwait
mov
imul
push
in
jns
(bad)
push
mov
(bad)
(bad)
jmp
xchg
or
hlt
mov
iret
addr16
rol
inc
(bad)
adc
push
xchg
sub
adc
and
jg
jmp
cmovbe
mov
adc
dec
adc
add
adc
(bad)
jge
movs
and
enter
ins
ja
and
imul
es
(bad)
(bad)
call
or
or
pusha
adc
adc
test
or
xchg
lea
pop
daa
xor
(bad)
push
mov
out
movs
cmp
popf
test
movs
test
add
retf
repz
daa
xchg
cmp
pop
lock
call
mov
push
(bad)
xchg
cmp
rol
push
ins
(bad)
xchg
(bad)
cmp
call
dec
dec
inc
sti
test
inc
or
shld
(bad)
(bad)
(bad)
jmp
lea
push
xchg
fdivr
add
mov
inc
push
jle
push
and
cmc
jo
(bad)
inc
mov
in
or
mov
iret
pop
pop
pusha
pop
(bad)
sbb
jg
dec
cmp
ins
jecxz
add
lock
xchg
cmp
(bad)
(bad)
(bad)
mov
dec
lea
mov
sbb
mov
cmps
outs
xchg
test
aas
or
jg
(bad)
(bad)
call
movs
mov
push
cmps
pop
adc
add
push
pop
adc
fimul
cmp
cmps
cmps
shl
(bad)
(bad)
out
clc
pop
mov
jmp
or
fldcw
push
push
pop
inc
gs
inc
xchg
adc
jmp
stc
jno
inc
cmp
enter
inc
in
xor
sbb
add
(bad)
(bad)
fist
sbb
je
ins
dec
outs
pop
dec
pop
dec
js
popf
xchg
cmps
test
cld
sub
jmp
mov
or
pop
push
cwde
jge
in
sbb
push
test
dec
jno
push
adc
iret
jmp
pop
call
test
xchg
pop
(bad)
(bad)
call
ins
pop
adc
and
jecxz
arpl
xor
(bad)
(bad)
(bad)
call
retf
aam
jo
sub
mov
(bad)
mov
pop
push
xor
cmp
(bad)
jmp
in
jecxz
or
ss
dec
fimul
cld
cs
lahf
jbe
cmps
dec
or
add
setnp
ror
sti
xor
push
add
dec
push
push
js
jecxz
(bad)
(bad)
jmp
ds
mov
xchg
push
fsubr
cmp
lods
inc
mov
push
add
test
or
(bad)
(bad)
dec
xchg
pop
fadd
sbb
cld
dec
and
xchg
cmp
inc
mov
lea
push
test
sub
test
(bad)
(bad)
cmp
dec
popa
push
push
test
xchg
iret
sbb
jno
pop
xchg
dec
push
sub
inc
add
add
loopne
inc
fnsave
push
sbb
cwde
or
sbb
and
xchg
add
cwde
push
lds
cmps
push
mov
shl
pop
mov
lea
pop
lods
or
mov
add
arpl
sti
sub
mov
pop
jo
xchg
fwait
jmp
(bad)
mov
loope
push
(bad)
xor
xchg
lods
mov
movhlps
inc
xchg
dec
jae
add
sar
adc
ja
adc
add
mov
ins
add
mov
and
fwait
sub
in
ja
or
imul
fidivr
mov
adc
out
(bad)
dec
sub
out
push
inc
push
inc
(bad)
or
idiv
imul
add
jmp
sar
add
lods
pop
push
pop
or
sahf
jmp
add
imul
push
and
lods
mov
test
pop
push
pop
test
push
or
(bad)
call
xchg
adc
fs
jmp
pop
adc
push
or
leave
push
mov
(bad)
(bad)
jmp
pushf
pop
pop
pop
in
jns
push
hlt
ja
cli
pop
jo
inc
imul
ja
dec
pop
pop
lahf
pusha
loopne
stos
stc
scas
repz
adc
mov
iret
scas
call
outs
dec
mov
mov
fbld
mov
and
adc
call
inc
jmp
sbb
push
popa
xchg
(bad)
add
(bad)
(bad)
(bad)
mov
xor
ins
ins
mov
outs
xor
sbb
idiv
adc
pushf
cld
call
std
outs
lods
cmps
data16
cmp
clc
das
push
imul
(bad)
(bad)
call
imul
and
mov
clc
cmp
push
das
movs
jmp
xor
test
pop
mov
ins
(bad)
fs
add
test
lea
(bad)
(bad)
dec
dec
jnp
imul
cmps
dec
adc
mov
push
lods
fs
(bad)
mov
xor
jbe
daa
sbb
ins
inc
call
mov
shld
clc
(bad)
(bad)
call
push
lahf
adc
iret
mov
adc
mov
retf
dec
sbb
xchg
mov
add
cmc
pop
adc
(bad)
call
sbb
push
xchg
adc
pop
push
cld
pop
mov
push
dec
repz
aam
sbb
sbb
sbb
lahf
push
mov
pop
jno
adc
push
and
and
inc
(bad)
adc
mov
mov
cs
mov
call
into
dec
aaa
aad
push
pop
inc
loopne
test
and
addr16
ss
(bad)
jg
(bad)
or
inc
popa
jne
rol
jne
fld
jmp
popa
adc
jmp
sub
xchg
out
cdq
pop
enter
ins
or
sbb
add
dec
xor
push
dec
or
aaa
cld
(bad)
inc
push
jo
aaa
push
pusha
push
xor
xor
xor
scas
outs
mov
dec
push
leave
inc
pushf
fs
scas
mov
daa
pop
lods
pop
push
lods
add
push
or
(bad)
(bad)
push
push
xor
popf
inc
add
or
jo
clc
rol
add
inc
dec
(bad)
(bad)
(bad)
jg
or
lods
sbb
mov
inc
inc
push
pop
mov
daa
mov
xchg
mov
add
pop
lock
sub
stc
xor
test
cld
out
lods
pop
cld
(bad)
and
dec
ror
nop
outs
loopne
(bad)
push
loop
mov
pushf
xor
dec
jne
adc
sbb
fwait
or
push
jmp
cli
(bad)
std
jmp
(bad)
nop
dec
jnp
adc
(bad)
sbb
mov
mov
sbb
(bad)
cmp
mov
mov
or
push
outs
ret
push
ret
movs
outs
mov
mov
bound
or
aad
jmp
inc
xchg
(bad)
jmp
mov
lds
scas
push
jmp
inc
pop
xchg
lea
jmp
jb
or
push
cmp
add
retf
or
mov
inc
mov
dec
sar
push
jle
inc
pop
inc
popa
nop
inc
fsub
daa
mov
outs
add
cwde
inc
adc
mov
sar
(bad)
(bad)
jmp
pop
xchg
into
inc
mov
outs
mov
or
xor
fwait
mov
(bad)
jmp
inc
cld
jns
ffreep
inc
inc
adc
pushf
test
inc
jb
test
jmp
mov
loopne
adc
(bad)
lea
loope
mov
call
inc
jmp
xor
sub
out
or
outs
cli
(bad)
jmp
dec
mov
add
sub
xchg
pop
mov
add
sub
or
dec
pushf
arpl
dec
out
xor
fild
(bad)
jg
pop
pop
outs
mov
xor
pop
lock
mov
jle
inc
adc
leave
and
rcr
(bad)
(bad)
(bad)
(bad)
fldenv
push
ror
sbb
push
jbe
outs
add
inc
ss
scas
jb
aaa
push
push
mov
es
call
pop
aam
pop
scas
sbb
sbb
mov
push
jne
(bad)
push
std
push
sbb
pop
lods
sti
out
ja
push
push
js
sub
sbb
movs
jae
pop
inc
shr
cwde
repnz
sahf
in
inc
je
out
jmp
add
sub
out
imul
fsub
adc
(bad)
(bad)
(bad)
push
(bad)
jns
aas
aas
mov
mov
inc
jb
and
hlt
enter
push
jb
ins
ins
or
call
sahf
mul
push
jae
mov
outs
popa
pop
sbb
adc
(bad)
(bad)
dec
pop
mov
mov
mov
fisubr
add
inc
inc
fcompp
sar
cmp
stc
movsx
lea
rcl
jl
dec
adc
adc
cmps
mov
daa
mov
in
int
sbb
and
jnp
ret
dec
jle
cmp
cmps
mov
adc
jns
mov
dec
clc
adc
(bad)
(bad)
jmp
mov
movs
stos
jecxz
imul
loop
add
push
(bad)
(bad)
call
mov
(bad)
and
inc
xor
push
or
pop
push
lock
jns
imul
lods
test
pop
inc
sub
add
mov
xchg
push
push
add
add
cmp
je
inc
mov
sub
ret
lods
cmp
cs
cmp
mov
mov
push
mov
sub
ss
(bad)
(bad)
call
adc
xchg
or
and
mov
mov
sub
(bad)
jbe
jmp
jno
pusha
sub
cs
or
popf
(bad)
(bad)
(bad)
inc
in
nop
out
test
sub
fidivr
lock
sub
xor
nop
test
push
push
pminub
xchg
add
xor
and
cmp
pop
hlt
(bad)
call
mov
(bad)
pop
(bad)
xchg
cmovs
enter
(bad)
fbld
push
test
inc
push
int3
cwde
push
and
das
inc
sar
ja
push
dec
sub
dec
scas
or
dec
add
inc
icebp
pop
aam
nop
sub
out
ins
push
enter
scas
xchg
call
lds
mov
xchg
mov
test
adc
mov
pop
scas
adc
jnp
inc
ror
(bad)
(bad)
call
fdiv
adc
push
mov
push
push
mov
outs
add
pusha
push
rcl
add
inc
sub
pop
imul
movs
daa
dec
test
ret
ret
(bad)
jmp
(bad)
xchg
mov
push
rcl
sub
xchg
fadd
xchg
or
(bad)
(bad)
(bad)
jmp
sbb
cmp
lock
xchg
icebp
xor
sub
and
mov
pop
sbb
loop
movs
ficomp
stos
dec
mov
mov
sbb
mov
inc
clc
(bad)
mov
xchg
dec
inc
xor
ja
xor
jge
(bad)
call
lock
add
add
push
add
jg
bound
and
cld
adc
(bad)
jg
call
ds
pushf
pop
inc
shr
push
test
add
inc
sub
mov
(bad)
(bad)
(bad)
push
movs
inc
pushf
inc
jle
or
movs
adc
js
ror
lahf
or
inc
int
push
jg
pop
and
jmp
adc
xchg
into
pop
dec
mov
and
(bad)
(bad)
js
jg
inc
aad
jnp
adc
(bad)
call
sub
enter
jg
and
add
out
and
out
std
(bad)
(bad)
jg
xchg
dec
rcl
mov
mov
mov
push
test
outs
shl
nop
cmp
(bad)
call
push
inc
inc
adc
ja
dec
inc
sbb
(bad)
stc
pop
fidivr
leave
loopne
mov
cmps
aaa
mov
(bad)
dec
retf
or
cmp
cld
cld
xor
add
shl
push
dec
pop
clc
add
rcl
xchg
outs
in
out
cmp
adc
leave
push
dec
in
(bad)
(bad)
(bad)
dec
cmc
pop
dec
push
arpl
je
and
(bad)
leave
jmp
ins
int
sub
dec
jg
call
add
add
cmp
xchg
and
add
jg
jg
xchg
mov
out
adc
adc
retf
mov
out
clc
(bad)
(bad)
cmp
retf
(bad)
fistp
mov
shr
jno
movs
aaa
cld
(bad)
call
push
add
in
inc
add
imul
popa
adc
add
test
cdq
test
mov
cwde
test
retf
mov
adc
(bad)
dec
shl
lods
popf
or
sbb
sti
test
pop
test
int
movs
ret
or
sbb
out
clc
cmps
inc
mov
or
inc
icebp
mov
inc
lock
(bad)
inc
lock
ret
pop
in
add
(bad)
int3
jge
mov
lods
int3
leave
mov
mov
test
das
iret
lsl
sub
jne
in
xor
jno
pop
or
rcl
scas
ret
inc
int
xor
inc
add
mov
int
ror
(bad)
(bad)
call
push
mov
adc
loope
add
inc
and
mov
nop
xchg
xchg
(bad)
(bad)
(bad)
dec
mov
push
push
shl
pop
mov
or
and
pop
into
cmp
mov
loopne
jmp
xchg
mov
jl
in
cmp
aam
icebp
(bad)
iret
and
sbb
or
(bad)
mov
add
pushf
push
sbb
movs
mov
inc
xor
ss
(bad)
mov
pop
aas
push
jg
iret
push
xor
mov
ret
or
xchg
inc
sbb
xor
js
adc
(bad)
(bad)
(bad)
push
mov
xchg
icebp
inc
xchg
rcl
mov
jnp
mov
(bad)
(bad)
(bad)
(bad)
cmp
inc
inc
dec
cmps
movs
dec
mov
loopne
(bad)
and
pop
mov
adc
(bad)
(bad)
inc
pop
pmulhuw
sar
shl
rcr
inc
(bad)
shr
inc
push
adc
(bad)
inc
movs
pop
add
xor
or
test
std
or
adc
(bad)
enter
aad
retf
rcr
inc
inc
cld
test
xor
shl
std
mov
push
xchg
or
jnp
xchg
xchg
and
repnz
mov
popa
add
xor
(bad)
(bad)
(bad)
(bad)
mov
lds
pusha
(bad)
js
jno
ret
mov
dec
sahf
dec
iret
dec
shl
push
shr
jg
dec
jae
push
xor
out
aam
dec
mov
inc
and
mov
rcl
pushf
jne
push
and
gs
pop
push
dec
fs
(bad)
and
(bad)
in
cmp
or
add
add
nop
or
(bad)
dec
cmp
push
add
ins
add
iret
fild
shr
xchg
mov
(bad)
inc
aas
dec
pop
imul
xor
sub
(bad)
inc
add
cmp
daa
test
pop
aad
sbb
mov
adc
dec
jae
push
push
fild
adc
xchg
jns
jbe
clc
jmp
out
lods
pop
or
ins
(bad)
(bad)
(bad)
inc
sbb
add
xor
xchg
push
mov
adc
popf
rcl
aad
dec
(bad)
(bad)
adc
mov
dec
jg
ret
std
xlat
pop
push
add
cdq
dec
cld
push
ret
pop
fsub
aaa
lock
leave
call
fmul
dec
sub
jmp
cdq
ins
adc
xor
shl
imul
mov
cmp
loope
xchg
test
ffreep
mov
xor
(bad)
push
jmp
add
sub
stos
sar
fneni(8087
pop
jo
jnp
push
test
fs
(bad)
(bad)
call
jle
pop
in
sub
pop
pop
leave
cmp
add
or
and
imul
(bad)
pop
jmp
mov
inc
and
shr
loope
(bad)
mov
mov
jmp
jle
jne
mov
(bad)
(bad)
(bad)
mov
lods
into
add
jl
mov
stos
add
lea
push
and
enter
mov
stc
(bad)
(bad)
(bad)
push
adc
call
es
add
adc
push
inc
gs
push
xchg
call
adc
lock
or
dec
add
ror
sbb
or
addr16
push
int
icebp
lods
(bad)
loope
jmp
push
fcom
fisttp
out
out
or
xchg
fstp
(bad)
(bad)
(bad)
jmp
lods
push
les
push
jae
mov
push
inc
int3
mov
mov
jae
(bad)
(bad)
(bad)
inc
addr16
movs
jnp
push
in
xchg
xor
cwde
gs
lods
fcom
sar
test
sub
add
(bad)
(bad)
jmp
ja
push
retf
test
in
ss
add
sti
fwait
xchg
loopne
inc
and
pop
adc
outs
clc
inc
addr16
adc
or
es
mul
fistp
(bad)
(bad)
call
repnz
and
mov
mov
jg
sub
cmp
daa
push
inc
pop
fisub
inc
(bad)
(bad)
(bad)
dec
lds
xor
fld
add
mov
inc
ror
adc
neg
je
xor
rcr
enter
scas
out
fld
(bad)
arpl
pusha
or
inc
in
cmps
push
cmp
jp
pop
aas
(bad)
movs
adc
lahf
inc
inc
jmp
or
test
(bad)
call
es
add
add
xor
push
(bad)
test
aad
test
add
dec
dec
pop
(bad)
(bad)
(bad)
push
stc
pop
xor
mov
or
rcr
pop
or
mov
(bad)
(bad)
(bad)
inc
add
pusha
mov
or
jg
xchg
sub
adc
bound
push
jbe
mov
(bad)
(bad)
(bad)
jl
call
cmp
or
xor
shr
or
enter
jecxz
(bad)
mov
push
xor
adc
sub
fst
sub
pop
push
add
sbb
scas
pop
push
(bad)
(bad)
(bad)
aas
cmp
cs
pop
xchg
xor
frstor
cmp
sub
iret
sbb
outs
and
(bad)
(bad)
(bad)
push
add
and
jb
mov
or
xlat
iret
fdivr
mov
xchg
popa
inc
or
(bad)
dec
lock
ins
jo
push
inc
push
mov
ins
mov
dec
jmp
and
add
mov
(bad)
(bad)
inc
fbstp
sbb
fsubr
mov
and
frstor
fwait
movs
div
pushf
xchg
ins
push
xchg
outs
xchg
mov
cdq
xchg
outs
mov
dec
fwait
xchg
push
mov
sub
popa
std
dec
jbe
mov
fimul
cmps
fdivrp
sub
xchg
(bad)
jg
mov
call
xchg
nop
add
and
fiadd
test
call
ss
xor
dec
fs
adc
and
mov
adc
movs
jg
(bad)
and
(bad)
out
add
imul
and
mov
and
xor
clc
cmps
adc
(bad)
(bad)
fbstp
inc
ds
fild
rcl
ins
retf
(bad)
mov
push
clc
lods
sbb
(bad)
(bad)
(bad)
(bad)
inc
gs
mov
xchg
inc
dec
xchg
push
loopne
nop
imul
imul
dec
js
out
(bad)
push
call
push
push
lea
enter
sbb
or
lods
bound
les
gs
or
lods
cs
(bad)
(bad)
(bad)
inc
in
pusha
fstp
and
dec
sub
and
js
sub
fs
adc
out
cmp
in
pusha
pusha
call
jmp
cmp
jl
xor
jo
loop
push
sahf
pop
and
idiv
call
xor
inc
les
or
jecxz
or
call
int3
push
(bad)
(bad)
(bad)
fisttp
(bad)
xchg
mov
xor
fcmovnbe
adc
push
aaa
aad
cmp
push
adc
inc
inc
and
inc
jo
andps
cmp
xor
cmp
sar
push
cmp
pop
add
sub
inc
add
(bad)
(bad)
(bad)
inc
mov
ret
add
lds
sub
push
es
iret
xor
push
sbb
inc
(bad)
jmp
popa
in
and
(bad)
dec
inc
fsub
ret
add
loop
or
xchg
or
(bad)
jg
dec
rcl
or
add
mov
push
add
inc
inc
scas
inc
add
std
pop
dec
adc
imul
mov
push
(bad)
mov
or
add
test
test
adc
(bad)
(bad)
jmp
cmp
push
add
(bad)
push
push
aaa
adc
or
out
adc
sbb
adc
xchg
(bad)
call
lahf
pop
push
je
jbe
xchg
lahf
stc
pop
sub
adc
imul
(bad)
inc
adc
iret
jae
and
pop
adc
test
mov
mov
test
sub
lea
pop
(bad)
(bad)
(bad)
(bad)
std
add
hlt
ffree
stc
movs
cmp
adc
push
test
or
sbb
sbb
pop
lock
sbb
mov
or
inc
aad
add
mov
js
push
loope
jne
dec
add
mov
(bad)
in
or
(bad)
(bad)
jmp
test
pop
and
(bad)
ja
sub
jbe
add
(bad)
add
add
(bad)
call
in
fwait
mov
jne
and
dec
movs
(bad)
and
sbb
test
sbb
aad
lock
inc
(bad)
out
or
dec
push
inc
and
and
(bad)
(bad)
call
pop
xchg
sbb
push
inc
and
jo
adc
outs
cwde
out
mov
out
mov
inc
loopne
push
cs
loopne
out
and
mov
(bad)
(bad)
(bad)
inc
xchg
test
cdq
xchg
fdiv
(bad)
push
xchg
ins
rcr
js
push
les
(bad)
(bad)
jmp
test
and
adc
pop
add
mov
jmp
shl
mul
mov
out
fs
adc
in
inc
mov
adc
inc
dec
or
rcr
cmp
push
adc
(bad)
jg
cmp
mov
cmp
inc
daa
cld
(bad)
push
xlat
sub
inc
in
jo
push
aad
ss
(bad)
jns
jne
out
js
stos
arpl
leave
je
jl
in
test
(bad)
(bad)
cmp
mov
mov
in
outs
aad
movsx
push
or
std
mov
(bad)
(bad)
jmp
das
jmp
xor
jbe
sti
add
scas
and
cmps
shl
mov
icebp
ja
mov
in
dec
pop
jb
mov
sti
lahf
jg
fucomp
add
adc
arpl
daa
add
jg
(bad)
call
sub
or
or
jns
loopne
sbb
aaa
inc
js
xchg
add
fimul
ficom
pop
das
(bad)
(bad)
jg
bound
cmp
mov
and
inc
xchg
jmp
push
(bad)
(bad)
mov
push
jmp
loop
jmp
sbb
fnstsw
sub
aaa
dec
aam
add
cli
jl
xchg
test
data16
xor
mov
mov
dec
cdq
mov
xlat
pop
mov
push
mov
(bad)
(bad)
(bad)
push
or
fs
ja
inc
mov
ret
add
aam
cwde
and
lds
(bad)
(bad)
(bad)
call
xchg
fild
jle
js
stc
popa
mov
push
mov
dec
mov
sub
es
pushf
and
(bad)
(bad)
dec
push
dec
mov
push
cmps
cmp
inc
adc
mov
add
mov
(bad)
jg
inc
jl
repz
ror
xor
(bad)
(bad)
mov
push
push
inc
add
push
loop
sbb
push
pushf
mov
mov
xchg
aas
mov
sub
mov
cmp
xchg
and
push
add
xchg
pop
adc
push
js
movs
(bad)
mov
mov
lds
jb
shl
adc
pop
retf
xor
(bad)
(bad)
jmp
mov
add
stc
arpl
cmps
mov
movs
in
pushf
test
mov
(bad)
call
pop
pusha
jne
or
jmp
(bad)
sbb
jo
retf
add
jg
push
mov
cwde
test
cmp
inc
out
dec
lock
mov
imul
adc
lds
sub
sbb
outs
xor
pop
je
sub
(bad)
dec
and
add
sbb
mov
mov
push
jno
pop
mov
(bad)
(bad)
(bad)
push
cmp
das
or
xchg
jl
sub
dec
or
push
sub
mov
(bad)
inc
mov
addr16
add
pusha
push
fwait
data16
push
ret
in
das
mov
fdiv
cmps
scas
push
pop
xchg
dec
cmp
repnz
mov
or
push
add
pop
fcomi
add
imul
jg
fsub
pop
sub
dec
test
aas
sub
push
or
push
das
push
adc
aas
pop
call
(bad)
pop
(bad)
(bad)
call
add
xor
xchg
sbb
imul
icebp
test
adc
in
sbb
call
jno
ret
mov
cli
push
fist
push
pop
jnp
push
call
sti
mov
data16
jo
lods
test
push
push
lods
js
inc
lea
(bad)
(bad)
dec
jnp
cmc
inc
or
push
aam
add
add
pusha
pop
dec
or
pop
hlt
(bad)
(bad)
jp
fmul
inc
or
xor
repnz
pop
cdq
inc
loopne
mov
add
(bad)
(bad)
jmp
sub
repz
pop
rep
dec
out
push
pop
imul
adc
rol
push
fld
adc
jo
out
pop
lock
sub
mov
jb
adc
fstp
(bad)
(bad)
(bad)
mov
xchg
xchg
mov
daa
clc
cld
pop
shufps
mov
cld
add
mov
push
adc
fstp
mov
inc
call
mov
jge
jg
push
imul
stc
pop
push
in
xor
xor
or
sbb
mov
mov
push
ins
pop
cmc
cmp
cwde
cmp
mov
(bad)
(bad)
(bad)
jmp
imul
dec
adc
dec
pop
pusha
jno
push
sub
bsr
jg
mov
add
sub
stc
popf
jbe
movs
mov
pop
push
jle
or
xchg
cmp
jg
icebp
lods
lahf
jb
call
xchg
iret
std
(bad)
(bad)
(bad)
aas
(bad)
sub
into
xor
inc
adc
pop
je
pop
(bad)
fiadd
push
test
inc
adc
(bad)
(bad)
inc
mul
adc
inc
push
push
hlt
imul
inc
inc
and
idiv
fdiv
add
std
aaa
cld
inc
push
dec
outs
mov
mov
or
(bad)
jg
shr
lahf
add
rcr
ds
leave
dec
lods
aaa
std
fld
call
push
adc
push
enter
mov
push
cmc
or
jae
sbb
cwde
inc
retf
outs
cmp
clc
or
scas
and
mov
dec
and
aas
imul
aas
sahf
cmp
push
push
enter
add
test
push
xchg
je
jne
mov
jno
cmps
xor
(bad)
mov
and
pop
jae
sbb
xchg
adc
bound
adc
iret
loopne
(bad)
(bad)
ja
sub
mov
add
pop
mov
pop
out
inc
outs
fsubr
shr
jg
push
lods
(bad)
(bad)
mov
add
scas
ror
dec
push
cmp
jne
add
pop
fldcw
push
in
(bad)
(bad)
(bad)
fidiv
fsubr
int
sub
loopne
pop
push
inc
iret
push
inc
sbb
jmp
nop
es
xor
xor
push
in
sbb
(bad)
(bad)
call
mov
aaa
pop
sub
cmp
shl
(bad)
jae
xor
pop
inc
dec
push
inc
mov
scas
inc
push
inc
xor
sahf
in
pop
add
gs
pop
sbb
jg
adc
and
repnz
pop
mov
sub
or
add
inc
daa
dec
js
(bad)
enter
hlt
rol
fist
cmp
and
(bad)
(bad)
(bad)
dec
adc
adc
mov
jno
push
aaa
adc
jno
cdq
adc
or
add
(bad)
call
cmp
inc
push
cs
pop
ja
loopne
inc
(bad)
loopne
daa
xor
(bad)
(bad)
(bad)
(bad)
inc
xor
ds
test
mov
add
popa
and
and
sbb
ror
add
(bad)
(bad)
(bad)
dec
sbb
fild
rol
inc
fcomp
ret
xor
js
pop
xchg
idiv
pop
adc
dec
(bad)
(bad)
(bad)
inc
ins
adc
ins
imul
and
adc
sub
das
or
xor
fiadd
xor
or
idiv
sbb
daa
sbb
repnz
add
(bad)
(bad)
(bad)
call
ins
xor
pusha
or
xor
or
jg
pop
push
(bad)
ds
call
call
movs
shl
pop
addr16
mov
push
and
ss
daa
add
nop
das
sbb
call
push
push
icebp
(bad)
repz
das
iret
(bad)
xor
xor
fs
shl
test
dec
adc
and
pop
adc
mov
test
(bad)
(bad)
jg
enter
push
popa
fimul
int
(bad)
dec
call
(bad)
(bad)
(bad)
dec
xchg
shl
gs
lods
in
cmps
sub
popa
pop
push
add
in
dec
(bad)
(bad)
jnp
lds
popf
sbb
mov
outs
mov
cmp
push
sub
mov
call
call
cmp
and
and
add
or
push
inc
call
jge
ja
push
push
mov
sbb
dec
push
cld
sbb
inc
xchg
(bad)
jnp
pushf
pushf
pop
popf
aas
or
fwait
jecxz
push
xlat
pop
movs
movs
mov
jne
or
vmwrite
(bad)
(bad)
jmp
mov
mov
xchg
mov
movs
add
mov
sub
mov
cmp
lea
(bad)
(bad)
call
dec
mov
cld
mov
mov
ins
jecxz
cmp
sub
sbb
jmp
push
jo
lahf
jmp
push
sar
(bad)
(bad)
mov
(bad)
outs
dec
pop
inc
inc
adc
adc
inc
div
pop
js
jo
jge
jae
sar
(bad)
(bad)
jmp
and
xor
xor
mov
or
test
fild
or
(bad)
(bad)
call
xchg
adc
hlt
push
xor
or
add
add
lock
xchg
inc
mov
xchg
pop
cmp
lock
call
xor
lea
add
les
push
std
(bad)
call
(bad)
cmp
mov
adc
adc
xor
addr16
cwde
jp
(bad)
(bad)
clc
les
push
cs
mov
xor
jo
dec
xor
or
dec
retf
xchg
add
inc
loop
dec
and
or
hlt
xchg
mov
or
fild
jecxz
or
xchg
add
sbb
(bad)
or
push
cdq
cli
jmp
push
lahf
jno
add
xlat
push
add
(bad)
(bad)
(bad)
(bad)
stc
sbb
dec
sbb
dec
(bad)
rol
test
cli
pop
stc
fsub
lock
(bad)
(bad)
(bad)
push
repz
jbe
(bad)
sar
pop
or
inc
or
add
or
pusha
sbb
pop
std
jmp
mov
or
push
fstp
xchg
lods
pusha
and
(bad)
and
xlat
jne
or
pop
fst
pop
mov
rol
or
(bad)
call
and
jns
jl
or
inc
jle
fadd
lock
and
nop
(bad)
jmp
popa
rcr
dec
imul
(bad)
(bad)
(bad)
inc
ret
adc
adc
xchg
pusha
cmp
pusha
pop
xchg
nop
push
xchg
adc
into
icebp
mov
ja
call
jmp
xlat
jge
test
adc
das
mov
sbb
or
pop
add
jmp
adc
pop
(bad)
mov
ja
adc
or
push
or
adc
or
jmp
mov
out
adc
bound
call
(bad)
adc
retf
cmp
fst
lea
add
push
adc
rol
and
(bad)
jmp
add
push
(bad)
fld
add
pop
or
rcl
mov
add
in
sahf
inc
jbe
push
(bad)
mov
and
lahf
sar
fadd
xlat
es
(bad)
(bad)
jmp
cwde
add
out
fsub
dec
les
jl
arpl
xchg
pop
xor
push
test
(bad)
push
nop
inc
fdivr
push
daa
adc
inc
inc
nop
ja
stc
pop
daa
ins
jecxz
mov
push
xchg
inc
or
das
pop
adc
xchg
add
add
imul
inc
rcl
adc
jns
ja
add
dec
or
in
dec
xor
sbb
(bad)
(bad)
(bad)
(bad)
mov
sbb
ss
xor
(bad)
push
fcom
mov
push
stos
add
lahf
adc
mov
jg
dec
push
test
neg
in
pop
and
scas
pop
jns
pop
call
xor
sub
mov
push
sub
nop
push
pop
in
push
mov
push
inc
or
(bad)
(bad)
call
dec
push
or
imul
ret
inc
jl
sbb
mov
pop
inc
inc
add
movs
push
inc
outs
and
daa
ret
in
gs
(bad)
(bad)
inc
mov
adc
addr16
es
imul
fwait
add
rol
adc
jmp
mov
dec
and
(bad)
xchg
out
add
data16
adc
adc
(bad)
(bad)
(bad)
call
fcom
mov
or
mov
std
push
adc
cli
repnz
ja
(bad)
adc
jb
push
call
inc
repz
leave
ja
test
adc
sar
pop
repnz
adc
imul
inc
jmp
dec
(bad)
gs
mov
push
jmp
out
lock
mov
shl
push
sub
sub
inc
mov
add
das
and
(bad)
xor
fsubr
xchg
sar
and
mov
and
sub
pop
mov
(bad)
(bad)
call
fs
mov
or
pusha
push
inc
and
add
(bad)
push
add
jnp
adc
mov
add
mov
imul
dec
jp
sar
(bad)
(bad)
jmp
cs
add
or
scas
jne
mov
js
dec
cmp
or
inc
adc
jne
inc
test
test
out
clc
into
dec
jns
push
stos
mov
pop
jns
or
inc
xchg
add
xlat
mov
mov
add
lods
xchg
xchg
pop
loop
sub
lock
pop
sahf
sbb
cmp
adc
push
scas
cmps
out
xor
or
jmp
rol
xchg
in
push
arpl
(bad)
(bad)
(bad)
mov
jo
or
ret
inc
jnp
add
or
add
sub
out
mov
or
inc
out
test
ja
adc
or
pcmpeqw
(bad)
push
adc
test
xchg
push
stc
push
ins
lea
gs
lds
shr
xor
(bad)
(bad)
push
mov
or
xor
pop
int
cmp
or
inc
sbb
inc
dec
pop
lods
jo
pop
mov
inc
or
inc
add
mov
pusha
stos
shl
(bad)
(bad)
call
jns
add
mov
clc
adc
inc
cmp
jge
pop
outs
add
lods
and
mov
outs
movs
pusha
je
jmp
dec
sbb
mov
push
or
inc
adc
push
or
add
add
or
mov
jns
out
sbb
or
(bad)
call
mov
mov
and
es
lea
(bad)
mov
inc
sbb
push
lods
rol
pop
xchg
push
cmp
xor
(bad)
(bad)
(bad)
(bad)
mov
sbb
cmc
mov
sbb
test
bound
adc
or
test
(bad)
(bad)
(bad)
jmp
aas
sbb
in
mov
add
sub
cdq
sub
and
(bad)
(bad)
mov
or
inc
movs
js
or
inc
neg
fld1
or
dec
fadd
add
add
pop
cmp
pshufw
xchg
sahf
xchg
test
(bad)
mov
add
mov
imul
cmps
sub
mov
or
pushf
sub
popa
call
fwait
cli
jg
dec
cmp
inc
mov
(bad)
(bad)
(bad)
(bad)
out
es
push
jae
sbb
test
arpl
add
xor
test
mov
(bad)
(bad)
(bad)
jmp
imul
cmp
or
iret
jbe
push
fadd
sbb
(bad)
push
sti
cmp
call
inc
es
sub
inc
or
xor
jo
jns
inc
mov
mov
push
push
ins
mov
leave
(bad)
xor
adc
(bad)
xchg
fild
push
push
cmp
pop
jmp
push
dec
(bad)
(bad)
(bad)
(bad)
jmp
add
xor
cmp
dec
out
or
ror
sbb
sbb
pop
sbb
push
push
std
dec
mov
cwde
repz
lock
jge
call
mov
xchg
ror
loop
or
mov
popf
push
lods
and
sub
fwait
(bad)
adc
ins
or
fadd
gs
pop
jae
shl
das
xor
enter
(bad)
push
xchg
or
adc
pop
hlt
(bad)
jmp
icebp
ins
pop
jns
rol
call
(bad)
sbb
(bad)
(bad)
push
jae
scas
inc
xor
sub
adc
jg
je
jo
sub
inc
nop
(bad)
(bad)
(bad)
jmp
fistp
scas
add
adc
or
adc
fild
mov
test
std
cmp
cmp
and
jmp
mov
or
mov
mov
(bad)
(bad)
jmp
pop
jne
popa
jo
mov
and
fist
cld
push
jmp
push
outs
inc
pop
arpl
(bad)
(bad)
call
push
pop
lahf
rcl
ret
pop
sub
add
sti
push
cmps
pop
or
imul
iret
(bad)
cmps
dec
add
test
das
sar
inc
or
adc
int3
les
adc
or
mov
imul
call
lahf
inc
and
sbb
inc
fnstenv
aam
xchg
mov
or
cli
pop
and
call
jmp
les
mov
push
and
cwde
add
sub
(bad)
fiadd
hlt
rol
aas
pop
add
push
jmp
addr16
cmp
push
les
and
mov
sub
jo
jmp
(bad)
or
cli
fldenv
cmps
push
imul
or
(bad)
(bad)
dec
and
push
or
and
and
push
pop
and
pop
es
inc
mov
pop
xchg
leave
jle
and
pop
xchg
dec
(bad)
call
cwde
ret
popfw
xchg
dec
cmp
cld
sub
cmp
inc
inc
jnp
pop
pop
or
call
jns
dec
mov
sub
sbb
inc
addr16
call
aaa
and
bound
sbb
mov
inc
sub
stos
mov
add
cmc
push
jnp
add
sub
popf
iret
ror
push
pop
sub
adc
rcl
jbe
enter
and
push
lahf
sub
cmps
mov
out
add
jg
xchg
xchg
inc
jge
dec
and
js
fcom
(bad)
inc
add
jne
push
push
das
add
adc
(bad)
jmp
aad
and
mov
in
push
nop
push
les
hlt
daa
add
aam
lods
(bad)
(bad)
jmp
mov
add
add
mov
sub
(bad)
push
scas
add
and
fs
or
pop
xchg
iret
daa
sbb
inc
jle
sub
jbe
(bad)
(bad)
jmp
or
test
mov
scas
add
lock
cdq
loopne
(bad)
push
dec
out
mov
(bad)
(bad)
push
iret
popf
add
mov
pop
fld
push
add
push
sub
outs
and
outs
inc
(bad)
(bad)
(bad)
call
jbe
cmp
or
gs
jo
adc
jne
mov
ja
je
and
jno
add
dec
in
(bad)
(bad)
jmp
or
fwait
xor
sbb
clc
add
leave
cwde
dec
neg
jmp
add
jnp
pusha
ror
sbb
std
(bad)
call
mov
outs
sub
cmp
clc
inc
adc
cmp
das
imul
rol
inc
dec
xor
(bad)
fcom
sbb
stos
xor
stos
nop
rcl
jp
xor
mov
sbb
push
mov
pop
pop
add
mov
(bad)
fucomip
hlt
or
inc
fadd
test
clc
xchg
adc
dec
lods
mov
cdq
add
(bad)
(bad)
call
aad
dec
(bad)
cmp
sbb
mov
int3
and
rol
not
pop
or
je
fs
dec
push
sti
pusha
jecxz
popa
and
(bad)
scas
add
cld
add
pop
push
dec
xor
push
push
test
bound
cmp
pop
push
push
xchg
mov
jl
fcomp
cli
jne
mov
or
loopne
xor
sbb
mov
adc
(bad)
(bad)
(bad)
jg
inc
fcmovnu
push
ins
(bad)
fild
stc
in
dec
sub
mov
fisub
xchg
enter
sub
out
(bad)
call
test
and
rol
pusha
frstor
xchg
cmps
sbb
or
or
and
cmp
push
mov
(bad)
sub
sbb
and
or
(bad)
jg
sub
sub
sbb
xlat
sbb
or
add
das
dec
pop
xchg
shl
mov
and
fs
test
inc
pop
call
(bad)
(bad)
inc
call
bound
adc
mov
rcr
xchg
add
mov
daa
fisubr
dec
xor
(bad)
outs
push
loop
pop
dec
cmp
loop
call
or
xchg
inc
shl
call
(bad)
(bad)
inc
add
jmp
ins
add
sub
inc
sub
mov
loopne
(bad)
or
mov
or
outs
in
(bad)
(bad)
(bad)
cmp
push
sbb
out
hlt
popf
fild
stc
add
jne
movs
sub
mov
bts
call
pusha
sbb
test
dec
sti
jge
inc
jo
sub
call
loopne
mov
lea
add
(bad)
jg
pop
add
mov
ret
cmp
or
loope
inc
imul
sub
ficom
les
fs
push
dec
call
das
imul
das
add
jle
cld
(bad)
call
hlt
pop
adc
sbb
cmp
and
dec
add
jns
push
sub
(bad)
(bad)
cmp
push
mov
jne
sbb
and
loop
inc
loopne
aad
jmp
adc
pop
lock
mov
std
push
inc
inc
call
jbe
mov
add
mov
arpl
je
pop
cmps
(bad)
(bad)
jmp
or
sub
adc
xlat
sub
xchg
inc
mov
daa
or
ror
jno
push
std
call
mov
leave
dec
repnz
mov
scas
add
fs
xor
(bad)
jmp
lock
or
and
push
xor
pop
add
pop
(bad)
mov
jmp
rcl
inc
and
scas
jo
push
sub
jmp
adc
add
and
ss
repnz
retf
pop
xchg
add
mov
jmp
cmp
add
ja
mov
add
xlat
outs
adc
xor
mov
shl
add
inc
sar
(bad)
jmp
or
cmp
adc
mov
sub
lock
ja
(bad)
sub
dec
pusha
or
aas
xor
adc
inc
in
add
add
and
push
in
jl
push
and
(bad)
(bad)
call
leave
(bad)
adc
pop
pop
call
inc
outs
adc
and
(bad)
(bad)
(bad)
jmp
mov
pop
fiadd
jb
sbb
xchg
xchg
push
or
gs
dec
dec
mov
fisttp
mov
add
xchg
pop
xor
push
fisttp
inc
cmps
jno
xchg
test
shl
ins
jg
adc
and
rdtsc
push
hlt
add
pop
inc
jg
pop
mov
ins
imul
(bad)
jmp
aad
mov
pusha
add
call
cmps
retf
cmp
pusha
or
icebp
dec
loop
jne
(bad)
(bad)
inc
push
sbb
pushf
pop
and
jnp
rcr
scas
inc
hlt
dec
lods
mov
call
add
push
in
aam
cmp
out
rcl
inc
mov
and
add
stos
lock
or
cmp
sar
push
push
dec
xor
(bad)
mov
ja
dec
cmp
mov
jg
mov
iret
add
dec
mov
(bad)
ror
cmp
push
add
icebp
xor
push
hlt
cmp
inc
xlat
cmps
and
dec
jno
sub
shl
inc
(bad)
(bad)
in
jmp
jge
add
sub
sar
and
int
rcr
or
(bad)
(bad)
jg
cmp
mov
popf
or
sbb
jns
jnp
bound
xor
(bad)
dec
mov
xchg
aad
sub
sahf
outs
xchg
dec
inc
xor
retf
pop
xchg
stos
jnp
or
xor
(bad)
push
mov
push
dec
adc
(bad)
(bad)
(bad)
jmp
and
mov
add
or
gs
inc
dec
adc
add
xor
(bad)
(bad)
jmp
sar
js
jmp
mov
jnp
rol
cmp
xchg
sub
dec
adc
fsub
dec
lds
sub
in
and
(bad)
(bad)
call
inc
mov
adc
add
movs
mov
xchg
hlt
hlt
pop
ds
(bad)
jmp
add
jmp
or
das
pop
jbe
sub
push
mov
dec
xor
and
sub
cld
cld
mov
repnz
xor
leave
aam
and
xor
clc
in
ret
clc
inc
cld
jmp
or
inc
pusha
mov
ror
test
add
std
push
pop
scas
add
adc
hlt
add
jns
xchg
(bad)
(bad)
jg
and
inc
int3
dec
sti
js
and
ss
dec
adc
pushf
cmp
inc
arpl
mov
lahf
test
mov
jle
or
pop
ds
inc
sub
xlat
shl
ret
dec
(bad)
(bad)
(bad)
(bad)
clc
push
adc
jo
sbb
sbb
test
js
popw
loop
cmp
movs
pop
dec
push
call
mov
leave
stos
and
ja
push
pmullw
sub
(bad)
call
mov
xor
leave
fadd
cmp
or
and
push
(bad)
push
aad
into
inc
xor
cmps
fnstenv
and
aas
lahf
ficom
repnz
cld
jecxz
nop
(bad)
(bad)
(bad)
call
jno
mov
cmp
fiadd
jg
push
daa
bound
jno
push
iret
pop
cmp
(bad)
popa
xor
pop
(bad)
call
cld
pusha
mov
add
mov
clc
add
rol
push
add
fistp
shl
movs
loopne
add
inc
add
jmp
xor
data16
in
sar
je
dec
and
sub
(bad)
mov
cwde
pop
xchg
add
cmc
add
test
or
repz
loopne
in
push
pop
clc
ja
shr
xor
and
inc
or
adc
or
push
add
dec
repnz
ja
(bad)
mov
cmp
lods
add
mov
dec
xor
push
std
ins
pop
popa
in
inc
pop
ror
cmp
cmps
inc
(bad)
(bad)
(bad)
push
or
and
test
mov
add
rol
pop
and
ins
idiv
add
push
nop
lds
loope
inc
out
adc
call
mov
push
xchg
fsub
cmp
cmp
jecxz
movs
sub
pusha
ret
in
and
push
inc
test
mov
inc
push
sub
jns
or
jg
(bad)
jge
sub
adc
adc
es
ins
dec
shl
lods
(bad)
mov
adc
xor
xchg
mov
(bad)
(bad)
push
xor
inc
mov
cmps
mov
imul
mov
shr
cmp
cld
xor
inc
call
mov
add
sub
test
push
call
sub
cmp
pop
push
leave
push
fnstcw
push
sbb
loope
(bad)
fbld
sbb
push
or
and
(bad)
out
add
(bad)
call
pop
add
iret
shl
mov
jle
mov
xchg
(bad)
(bad)
(bad)
jmp
out
cmp
lea
fisttp
or
rol
inc
shr
cmp
dec
nop
sbb
jl
retf
sub
fdivr
fbld
ret
shr
pop
repz
lock
inc
arpl
out
pop
retf
dec
pop
adc
outs
add
icebp
outs
fmul
mov
fst
movs
push
dec
add
adc
sub
(bad)
call
xchg
add
leave
cmp
clc
cmp
in
je
mov
pop
jg
icebp
(bad)
jge
and
jecxz
imul
cmp
sub
rcr
dec
sbb
push
cmp
jmp
push
or
pop
push
add
add
aas
mov
repnz
mov
xchg
pop
adc
in
mov
xchg
imul
mov
xchg
push
cld
arpl
push
or
push
sbb
aas
popf
das
ds
(bad)
(bad)
jg
sbb
mov
mov
scas
sbb
loope
lea
(bad)
sub
das
in
daa
test
int3
(bad)
pushf
call
sbb
inc
aam
cmp
mov
inc
inc
xor
lea
and
jg
xor
test
and
jmp
push
pop
das
sub
popf
sar
into
pop
enter
(bad)
(bad)
push
adc
inc
iret
daa
adc
fs
push
hlt
and
mov
daa
dec
or
fs
fdiv
mov
adc
mov
mov
dec
(bad)
(bad)
push
ds
add
addr16
inc
dec
and
jmp
lods
loopne
(bad)
daa
mov
cmp
fimul
cmp
call
jmp
or
es
ja
inc
into
in
pusha
mov
push
push
mov
xor
fwait
or
call
cmp
lahf
inc
xor
inc
inc
jmp
enter
or
aaa
jae
xchg
ins
mov
mov
or
or
mov
pop
cmp
pop
pop
add
(bad)
(bad)
jmp
(bad)
idiv
push
rol
js
cmp
fwait
and
pop
out
mov
rdpmc
and
dec
sbb
adc
aad
in
aam
mov
enter
cmp
jmp
es
mov
mov
sub
ins
add
xor
add
inc
jo
ins
cmc
mov
lock
je
rol
mov
jp
dec
pop
jmp
xchg
inc
and
aad
sbb
into
sbb
push
mov
fild
or
jns
add
and
lock
pop
mov
repnz
or
sub
(bad)
(bad)
mov
ret
mov
out
add
ret
adc
les
(bad)
dec
push
mov
cmovno
and
mov
stos
test
or
outs
xchg
inc
mov
add
adc
adc
xor
adc
lods
rcr
add
dec
pop
popf
(bad)
div
rol
cmp
or
adc
push
(bad)
xchg
popa
aas
pop
loop
leave
jmp
test
xchg
clc
inc
sub
lods
data16
(bad)
(bad)
jmp
jmp
bound
xor
pop
xor
add
(bad)
call
into
jle
inc
jae
sbb
les
mov
jmp
dec
or
jmp
inc
jmp
mov
adc
lock
jmp
or
inc
jno
sbb
clc
push
bound
stos
mov
dec
jne
aaa
add
fbld
fidiv
movs
mov
out
cli
(bad)
(bad)
(bad)
(bad)
cld
scas
mov
jmp
xchg
mov
ret
and
adc
sbb
(bad)
inc
xrelease
retf
test
daa
pusha
cmps
mov
mov
in
pop
or
and
jbe
cli
(bad)
(bad)
fld
adc
sbb
mov
cs
sbb
inc
cmp
fsub
scas
stos
sti
shr
add
sub
jo
sar
jg
mov
cwde
sub
pop
add
ja
nop
push
pop
inc
jl
inc
pop
nop
pop
inc
dec
(bad)
hlt
not
(bad)
fisttp
pop
sbb
xchg
mov
aaa
lock
ds
and
(bad)
dec
jge
(bad)
rol
xchg
popaw
pusha
or
xchg
adc
inc
xchg
push
push
fdivr
das
test
jmp
or
pop
jle
retf
mov
dec
ins
mov
call
or
add
das
sti
add
movs
or
stos
cmps
push
sub
fdivr
push
cmps
and
or
dec
cmp
leave
mov
mov
dec
add
(bad)
(bad)
dec
and
nop
in
jne
leave
loope
pop
cmps
hlt
mov
add
sub
add
popa
add
adc
add
movs
cmp
stos
iret
in
jmp
push
jg
add
push
je
mov
mov
inc
mov
pop
push
std
fstp
inc
mov
cmp
add
fsub
and
in
dec
loopne
stos
adc
(bad)
(bad)
call
sbb
rcl
ja
hlt
lea
adc
add
fcmovnb
lods
es
dec
dec
dec
lock
call
xchg
sar
dec
or
adc
(bad)
(bad)
call
mov
sub
pop
mov
cmp
cmps
mov
pop
retf
sbb
aaa
cld
add
outs
test
(bad)
mov
adc
pop
shl
add
cmp
mov
adc
adc
add
es
cs
es
(bad)
(bad)
dec
js
jns
xchg
stc
mov
dec
xor
sub
cld
adc
jle
(bad)
jmp
sar
jle
mov
inc
or
pop
push
add
add
inc
xchg
mov
pop
mov
mov
inc
mov
ror
xchg
jmp
test
push
rol
push
mov
cmc
jle
js
idiv
(bad)
jmp
and
push
xchg
or
je
fdiv
adc
jmp
cli
(bad)
jmp
pop
popa
sbb
mov
les
sub
stc
add
pop
sub
add
std
jge
mov
jg
jae
cs
(bad)
jg
mov
xor
outs
scas
in
sub
rol
shr
loopne
add
jbe
and
(bad)
(bad)
(bad)
call
enter
xchg
call
div
sub
xchg
add
sbb
pusha
fstp
inc
gs
xor
cmp
jbe
adc
aam
mov
adc
sar
(bad)
(bad)
inc
stos
imul
dec
and
mov
jl
iret
adc
mov
and
add
jmp
mov
test
je
push
xchg
push
es
cmp
sar
(bad)
dec
pop
enter
sbb
cmps
dec
fcom
pushf
mov
mov
sbb
dec
(bad)
(bad)
jmp
cmp
cwde
pusha
pop
shr
aas
cwde
int3
icebp
and
idiv
ror
sub
adc
retf
inc
cmp
adc
sub
cmp
or
add
dec
mov
dec
add
mov
(bad)
(bad)
inc
loope
adc
mov
xchg
jmp
and
cmp
ja
movs
cmp
punpcklwd
push
dec
mov
daa
sbb
(bad)
retf
cli
call
adc
ret
inc
dec
aaa
or
ret
(bad)
(bad)
(bad)
jns
test
repz
jp
fs
push
fist
scas
pushf
inc
inc
jbe
popa
inc
outs
pop
leave
dec
pushf
ret
pop
cld
(bad)
jmp
push
sbb
loop
push
and
out
mov
mov
(bad)
push
loop
sahf
add
leave
leave
iret
fild
je
cli
fist
jne
int3
(bad)
pop
shl
loope
add
fbstp
xor
dec
sub
das
sub
sub
add
cli
psubsb
in
add
daa
call
sub
repnz
(bad)
mov
cmp
and
inc
xlat
push
es
push
out
rol
fs
dec
adc
out
in
aad
xor
sar
and
cwde
mov
clc
imul
fiadd
push
cmp
fwait
add
jl
jmp
push
inc
add
data16
call
dec
call
test
add
xchg
mov
fbld
push
(bad)
ss
clc
push
mov
cmc
add
loope
mov
jg
fimul
add
ret
mov
or
adc
(bad)
(bad)
(bad)
mov
adc
ret
sbb
aaa
xor
mov
xchg
mov
xor
fmul
rcl
sbb
mov
ja
xchg
push
je
xchg
addr16
clc
test
mov
cmp
and
inc
call
call
ret
rcr
(bad)
(bad)
(bad)
call
cmps
mov
add
push
call
cmps
xchg
les
pop
out
loop
push
xchg
mov
or
(bad)
(bad)
(bad)
call
das
pop
adc
mov
dec
xor
mov
adc
mov
test
jmp
or
es
dec
inc
sub
push
inc
scas
add
jne
dec
and
sub
(bad)
jmp
lock
mov
jo
test
pop
dec
aam
sub
stos
push
inc
(bad)
out
xor
je
or
inc
xor
dec
push
imul
std
mov
call
xor
aaa
adc
out
enter
test
fmul
unpcklps
aas
add
jg
loop
mov
addr16
js
mov
(bad)
(bad)
inc
inc
cs
mov
pop
push
adc
push
hlt
out
sbb
push
jnp
ficom
(bad)
(bad)
(bad)
inc
xor
mov
(bad)
mov
push
or
inc
sbb
cmps
lds
push
adc
sbb
les
inc
adc
outs
add
adc
leave
movs
mov
rcr
hlt
(bad)
(bad)
sbb
add
mul
(bad)
out
cld
(bad)
dec
loopne
arpl
int
icebp
push
stos
xlat
mov
inc
in
sbb
xchg
sar
(bad)
(bad)
push
push
cmp
or
out
push
mov
arpl
movs
push
mov
mov
cmc
xchg
push
dec
das
xchg
lock
imul
xlat
(bad)
push
int3
in
pusha
mov
mov
ins
push
add
movs
aam
test
data16
(bad)
(bad)
jmp
pop
cmp
in
xchg
cmp
ja
aam
jnp
mov
cmp
dec
rcr
call
jmp
int3
pop
pop
cmp
inc
enter
mov
mov
pop
aaa
std
jmp
aaa
jno
pop
sub
inc
lock
call
(bad)
jne
sub
jmp
sbb
sbb
stos
push
cwde
pop
or
add
push
movs
cmp
and
mov
xchg
data16
ins
loop
push
add
dec
dec
unpckhps
scas
xchg
(bad)
cmp
test
int3
ins
movs
(bad)
(bad)
call
cmp
pop
mov
push
jnp
mov
mov
mov
jg
mov
clc
sub
cdq
imul
clc
call
(bad)
call
pop
cmc
or
test
idiv
adc
and
inc
test
add
push
les
adc
push
imul
fcom
push
pop
mov
jg
icebp
jmp
cld
push
cld
jle
addr16
add
in
jae
js
jns
(bad)
das
sar
pop
or
cmps
push
sub
icebp
sbb
ret
pop
or
loopne
retf
ret
mov
cmp
test
adc
dec
cmps
adc
lock
add
push
(bad)
mov
or
les
jbe
es
mov
add
cld
hlt
icebp
cs
dec
add
pop
cmps
dec
or
mov
sbb
mov
pushf
cwde
adc
pop
dec
ins
std
(bad)
call
mov
push
adc
adc
clc
inc
(bad)
(bad)
dec
(bad)
call
mov
dec
call
xchg
jae
stos
mov
(bad)
jmp
pop
lods
push
adc
cmp
aas
push
sbb
cmp
jno
inc
adc
call
dec
cmp
sub
imul
(bad)
(bad)
jg
daa
push
ds
xchg
ins
jb
and
mov
cmp
pop
jae
int3
mov
sub
push
push
mov
(bad)
nop
(bad)
stos
gs
add
push
(bad)
(bad)
call
popa
movs
add
adc
mov
fwait
pop
inc
adc
xchg
cwde
or
mov
test
stc
push
mov
(bad)
(bad)
(bad)
(bad)
call
and
rol
push
aad
adc
ins
xchg
sub
ror
push
add
jmp
aam
or
in
add
or
repz
cmp
aam
call
add
push
iret
loop
xor
push
pop
jmp
(bad)
mov
sub
jp
dec
loop
das
jae
imul
mov
inc
rcl
cmps
(bad)
mov
jmp
mov
mov
sbb
es
js
fcmovnb
xchg
test
rcr
jb
add
mul
pop
mov
sar
(bad)
jmp
outs
xchg
leave
cmp
fbstp
pop
scas
mov
scas
pop
ins
add
fdiv
jmp
xchg
in
iret
xchg
pusha
dec
mov
lock
adc
je
xchg
(bad)
mov
push
inc
push
pop
cmp
test
hlt
dec
pop
mov
mov
xor
sub
and
ins
sub
inc
cwde
xchg
imul
and
mov
cmp
(bad)
(bad)
push
(bad)
pop
mov
cmp
repz
mov
sub
mov
push
lods
(bad)
mov
cli
mov
imul
repz
mov
loopne
xchg
cmc
add
inc
push
adc
int
pop
stos
scas
inc
cmp
xchg
and
scas
cmp
mov
in
imul
mov
dec
fs
(bad)
dec
sahf
nop
lock
add
mov
jne
inc
adc
test
xchg
data16
adc
cs
sub
sti
mov
and
clc
rcl
jmp
sub
lahf
(bad)
mov
inc
popa
or
jnp
or
push
fadd
jl
cmp
cwde
pop
(bad)
(bad)
(bad)
cmp
cmp
rol
sbb
adc
ja
or
(bad)
call
mov
ins
xor
out
lock
jno
xor
cmc
(bad)
(bad)
(bad)
dec
cld
add
jmp
xor
xchg
jae
lock
mov
sar
(bad)
(bad)
call
test
pop
jne
mov
and
iret
xor
nop
xor
ins
es
xlat
adc
or
pusha
clc
pop
sbb
add
or
and
frstor
in
es
scas
call
cdq
sub
and
cmp
pusha
xchg
pop
shl
and
(bad)
(bad)
(bad)
push
lods
mov
adc
mov
push
scas
adc
xchg
xchg
repz
test
pop
pop
xchg
(bad)
xor
dec
loop
(bad)
(bad)
jmp
sub
dec
call
and
loopne
hlt
and
popa
pop
sub
popa
jle
dec
mov
adc
fcom
pop
inc
inc
cmps
mov
mov
inc
jmp
pop
mov
in
push
sbb
(bad)
(bad)
push
push
and
imul
fbld
mov
and
push
adc
sbb
and
mov
inc
push
(bad)
jl
call
(bad)
int3
or
(bad)
fstp
jb
lock
cmps
sub
aaa
pop
mov
out
scas
push
cmps
aas
icebp
dec
push
aaa
mov
(bad)
(bad)
push
push
mov
push
iret
xchg
imul
push
push
sub
rcl
arpl
clc
pop
dec
push
call
std
(bad)
(bad)
dec
jg
sub
fcomp
jge
iret
mov
jns
mov
inc
cmp
and
out
jmp
ins
mov
jg
push
cmp
imul
test
inc
xor
neg
push
(bad)
(bad)
(bad)
jg
fs
test
mov
mov
adc
xor
push
stc
inc
cdq
out
(bad)
call
je
or
mov
dec
mov
inc
jg
mov
dec
mov
(bad)
mul
shl
outs
add
xchg
dec
(bad)
fcomip
sbb
inc
or
cdq
mov
jo
dec
push
rcr
push
inc
cs
cmp
nop
retf
ins
mov
(bad)
jg
call
or
js
cmp
test
mov
push
fs
mov
(bad)
(bad)
inc
push
ficomp
fmul
or
add
or
inc
movs
mov
aaa
outs
lods
jo
adc
add
xchg
(bad)
(bad)
(bad)
(bad)
cmp
leave
dec
mov
mov
mov
mov
jmp
inc
fcomp
mov
(bad)
(bad)
call
mov
mov
enter
sbb
mov
xchg
xor
cmp
sbb
inc
cmps
(bad)
(bad)
push
inc
pop
inc
in
in
fcom
hlt
out
stos
xor
inc
xchg
je
cdq
add
jmp
ret
add
mov
mov
(bad)
call
cmps
mov
mov
cmps
and
movs
repz
push
jo
dec
icebp
or
call
push
xor
in
loopne
mov
repnz
es
or
or
and
xor
(bad)
(bad)
out
fdiv
lds
paddb
addr16
mov
or
and
(bad)
(bad)
cmp
cwde
cli
push
xchg
or
sbb
xor
mov
sahf
clc
fsub
cmps
adc
add
mov
dec
sbb
(bad)
call
and
push
xor
repnz
push
xchg
or
jmp
es
jmp
sub
jmp
rcl
xchg
mov
aas
call
xchg
test
mov
dec
add
xchg
out
cmp
mov
push
cmc
mov
and
dec
inc
and
push
jmp
ror
mov
not
mov
xchg
ret
movs
mov
sub
lock
add
inc
das
clc
das
clc
retf
into
xor
stos
inc
mov
pop
mov
jo
dec
(bad)
(bad)
jmp
mov
jo
arpl
in
adc
sub
add
call
mov
retf
pop
pop
add
(bad)
mov
imul
imul
jle
clc
cmp
sub
(bad)
(bad)
call
sub
jo
retf
aas
sbb
jo
out
pushf
or
ret
xchg
dec
push
mov
or
inc
(bad)
(bad)
(bad)
inc
adc
in
popa
inc
dec
sub
imul
push
dec
in
cmp
loop
jns
loop
ja
fcos
(bad)
(bad)
jmp
ror
ret
push
and
dec
jns
xlat
mov
fs
xchg
sbb
and
out
(bad)
mov
push
dec
cld
xchg
test
fcmovne
pop
xlat
pop
inc
test
jg
call
mov
inc
pop
mov
sbb
imul
fild
(bad)
(bad)
push
and
mov
imul
int
int
dec
fwait
shl
daa
(bad)
(bad)
(bad)
call
call
sub
add
or
sub
mov
sub
or
pop
(bad)
call
cs
sbb
(bad)
ret
dec
pop
or
loope
and
inc
xor
jno
cmp
addr16
fmul
jle
pop
sar
arpl
add
inc
jg
(bad)
call
hlt
mov
push
in
mov
outs
dec
ret
push
or
dec
add
addr16
outs
mov
test
cmp
mov
adc
loopne
sar
(bad)
(bad)
call
pop
adc
add
jnp
dec
push
inc
aam
jo
and
sbb
or
sub
(bad)
jns
xchg
cld
add
adc
outs
fidivr
add
jg
push
xor
sub
mov
pop
lea
(bad)
xor
(bad)
ins
push
in
xchg
cmp
inc
bound
sub
iret
inc
jp
inc
test
out
add
jmp
enter
or
pop
js
add
sahf
sub
jmp
in
mov
jmp
call
jbe
pop
repnz
in
sbb
xchg
(bad)
(bad)
(bad)
cli
jecxz
inc
jb
ins
jmp
mov
sti
jne
sbb
add
inc
(bad)
(bad)
inc
jne
or
lea
and
sub
or
and
call
xchg
inc
movs
add
outs
scas
rcl
mov
sub
mov
mov
pop
rcl
xchg
jmp
in
dec
movs
outs
imul
outs
mov
pop
and
call
mov
dec
lea
xchg
jl
inc
pop
sub
jmp
movs
xchg
(bad)
hlt
add
call
(bad)
mov
(bad)
sbb
push
in
mov
jb
jmp
inc
sbb
popa
add
sbb
jg
pop
in
clc
call
sub
and
sbb
bnd
and
push
fsub
cmp
push
popf
sbb
mov
test
sbb
(bad)
mov
js
dec
in
pop
rol
aaa
sbb
dec
fnstenv
in
sub
xor
sub
pop
adc
push
sbb
inc
int
dec
ja
cli
inc
jno
sub
test
inc
add
inc
add
mov
(bad)
(bad)
jmp
mov
inc
push
fistp
push
add
xchg
sbb
scas
add
mov
scas
add
jmp
movs
mov
movs
call
xor
inc
adc
clc
popa
mov
inc
sub
or
mov
pusha
aad
(bad)
(bad)
(bad)
call
scas
push
jmp
clc
test
push
dec
or
rcl
and
add
in
add
outs
(bad)
(bad)
(bad)
call
jg
pop
adc
add
pop
or
mov
mov
or
in
aas
cmp
jb
in
mov
sub
pop
inc
scas
sbb
xor
adc
jecxz
ja
push
cmp
jo
movs
and
lods
jmp
pop
je
fs
imul
pop
(bad)
(bad)
(bad)
call
sbb
in
lock
test
fwait
pop
int3
shl
jae
mov
iret
push
leave
mov
cld
mov
sub
xor
mov
mov
sbb
pushf
pop
sbb
in
es
(bad)
in
aam
mov
add
add
aam
pop
inc
push
jp
adc
mov
(bad)
dec
add
jecxz
data16
mov
ror
dec
cli
inc
xor
xor
cmp
inc
sub
jg
lods
or
nop
jb
scas
dec
dec
jae
xchg
ret
inc
(bad)
(bad)
(bad)
jmp
and
cmp
mov
cdq
xchg
nop
aas
and
and
cmc
push
sub
push
(bad)
lea
cs
inc
push
pop
les
xchg
sbb
dec
(bad)
jg
mov
sub
add
and
and
adc
std
cmp
shl
not
mov
push
sar
and
xchg
dec
add
pop
mov
(bad)
(bad)
(bad)
out
lahf
mov
clc
or
mov
sti
add
and
cmp
dec
ss
xchg
ins
jecxz
sub
pushf
sub
lahf
(bad)
(bad)
(bad)
inc
adc
sub
add
in
jmp
cld
imul
mov
repz
jle
mov
(bad)
(bad)
dec
xor
sbb
leave
inc
sub
sahf
adc
adc
or
sbb
(bad)
push
test
push
sbb
fistp
push
and
bnd
fisubr
inc
fs
xchg
(bad)
inc
pop
rcr
xchg
mov
mov
cmps
shl
mov
jmp
cmp
cmps
adc
(bad)
fs
inc
jle
sub
shr
inc
rcl
jg
xor
dec
xor
outs
cmps
or
repnz
ins
jecxz
and
cmp
and
(bad)
(bad)
mov
mov
call
sub
fadd
in
int3
(bad)
popa
inc
and
(bad)
(bad)
in
ja
jns
adc
xchg
gs
xlat
mov
inc
sub
jns
inc
mov
push
pop
shl
push
mov
pop
outs
xor
xchg
add
xchg
jb
cmps
sub
mov
mov
std
dec
pop
fistp
popa
inc
dec
push
jmp
call
pop
adc
scas
movs
mov
and
out
xor
mov
adc
cmovae
(bad)
fisttp
adc
mov
repnz
sub
sub
or
jmp
sar
mov
xchg
ret
addr16
xchg
xor
rcl
jbe
mov
call
cmc
dec
xchg
or
push
and
inc
push
std
das
clc
xor
mov
mov
xchg
or
add
dec
(bad)
jmp
xor
dec
inc
js
ror
jle
imul
push
sbb
(bad)
(bad)
(bad)
jmp
ror
jg
gs
in
push
ja
movs
jge
mov
and
inc
adc
sbb
push
cwde
(bad)
aas
enter
test
xchg
or
jg
push
(bad)
(bad)
(bad)
push
test
add
mov
inc
sbb
(bad)
test
fld
cmc
popa
dec
(bad)
jle
add
leave
inc
(bad)
(bad)
(bad)
(bad)
fsubr
in
test
or
fimul
sub
fwait
push
fdiv
mov
(bad)
inc
outs
mov
add
push
xchg
mov
mov
cmp
mov
sub
(bad)
pop
and
adc
jle
sub
test
jmp
add
repnz
jnp
jp
(bad)
jg
aad
add
xor
mov
jmp
mov
push
(bad)
call
ds
or
scas
sbb
daa
aaa
adc
in
(bad)
add
in
or
(bad)
jmp
rcr
fdivr
add
jp
cwde
mov
jne
sbb
jnp
pop
cmp
(bad)
ds
push
sub
dec
mov
scas
scas
adc
pop
inc
out
mov
cmps
push
shl
cdq
gs
(bad)
movs
shr
lods
or
out
or
out
add
or
(bad)
(bad)
inc
pop
dec
lds
loopne
pop
cdq
pusha
(bad)
movq
sar
dec
mov
jl
xchg
or
(bad)
(bad)
mov
mov
add
sbb
int3
push
or
mov
add
cmp
xchg
fs
push
or
call
(bad)
pop
movs
cdq
jle
xor
aam
popa
xchg
leave
or
(bad)
call
or
mov
ds
mov
dec
xor
ret
cdq
sub
(bad)
call
inc
push
cmp
(bad)
in
mov
jle
and
mov
in
adc
mov
jecxz
loope
(bad)
(bad)
(bad)
(bad)
fcmovbe
bound
popf
enter
out
clc
int
ins
pcmpgtb
mov
mov
je
mov
std
jg
jmp
ret
cmps
fcom
hlt
shr
aam
cmp
jg
dec
iret
(bad)
jno
jae
add
inc
movs
movs
dec
outs
sub
xlat
add
js
popf
adc
movs
xor
in
dec
lock
test
inc
test
(bad)
(bad)
(bad)
inc
xchg
dec
aaa
aas
add
push
imul
pop
std
rcr
cmc
add
xchg
inc
(bad)
jmp
cmp
cmps
sbb
push
inc
ret
rcr
inc
jge
out
push
loopne
(bad)
(bad)
inc
add
in
xchg
rcr
or
and
dec
or
outs
arpl
add
repnz
adc
lock
movs
das
and
mov
sbb
and
cmp
add
or
jge
test
pusha
pop
jp
sbb
cmp
mov
adc
std
push
lock
fimul
add
clc
cld
adc
sti
add
rcr
aas
cld
or
dec
icebp
jns
sti
lahf
inc
jg
(bad)
cs
ret
add
pop
ret
repz
sub
out
sbb
pop
(bad)
mov
mov
aam
and
(bad)
(bad)
(bad)
mov
or
sti
call
rol
sbb
js
mov
sbb
mov
cs
(bad)
(bad)
mov
int
or
scas
addr16
pop
push
inc
sub
mov
pop
jle
add
stos
mov
cmp
aam
in
test
ror
jmp
out
sub
lea
mov
test
add
cmp
jmp
pop
dec
iret
and
(bad)
dec
jmp
push
push
pop
jecxz
dec
add
ins
pop
pusha
jns
rcr
mov
mov
jmp
ins
push
sub
movs
xchg
je
push
push
adc
(bad)
(bad)
(bad)
dec
cmp
add
(bad)
data16
mov
add
jmp
mov
outs
sub
(bad)
(bad)
(bad)
js
lea
outs
jne
push
push
jl
sahf
les
xchg
sbb
arpl
(bad)
in
enter
inc
inc
test
mov
ins
mov
pop
xor
pop
dec
jne
mov
(bad)
(bad)
(bad)
(bad)
pop
mov
(bad)
call
fdivr
push
movs
ret
ret
jge
push
inc
pop
mov
scas
jg
or
cdq
int
lock
lods
adc
sub
mov
add
push
lea
je
dec
fsub
sbb
cmp
sub
xchg
test
push
mov
ss
(bad)
(bad)
(bad)
push
add
(bad)
or
add
dec
mov
mov
inc
mov
jno
scas
push
and
shr
jo
push
sub
and
mov
ret
cmp
mov
mov
dec
(bad)
mov
and
xor
mov
enter
arpl
rcl
les
leave
test
enter
dec
repnz
stos
(bad)
mov
adc
pop
fild
cwde
into
add
(bad)
(bad)
(bad)
jmp
cmps
rcl
cmp
adc
cwde
or
jnp
inc
ret
test
(bad)
(bad)
dec
loopne
and
sub
js
cli
icebp
pusha
sbb
dec
add
or
add
(bad)
fild
jmp
ins
test
popf
loopne
leave
or
sti
mov
pushf
or
add
(bad)
inc
sbb
call
pushf
xor
enter
fld
jmp
xchg
scas
lods
xchg
hlt
dec
mov
mov
mov
ja
les
inc
daa
inc
adc
xor
adc
movs
push
loopne
(bad)
inc
loopne
xchg
loopne
das
xchg
xchg
xchg
test
lock
sub
rcr
call
hlt
dec
mov
push
fsubr
(bad)
das
mov
in
push
xchg
iret
fisubr
and
adc
push
and
(bad)
rol
sbb
sbb
dec
je
cmp
push
adc
cli
cli
(bad)
mov
push
das
clc
call
loopne
sbb
shl
push
sbb
(bad)
(bad)
jmp
sub
jne
cmovs
inc
jmp
(bad)
push
fdiv
jmp
cmp
(bad)
jg
cmp
push
xchg
xor
inc
jle
pop
sbb
push
into
jle
or
jle
or
test
(bad)
(bad)
jmp
ror
push
adc
fcom
inc
adc
lea
push
pusha
test
mov
cdq
retf
clc
(bad)
(bad)
jmp
dec
and
pushf
daa
mov
cmps
fild
add
adc
mov
outs
lock
out
cli
das
nop
sub
in
pushf
mov
and
cmp
stc
push
add
add
(bad)
(bad)
(bad)
cmp
nop
sub
call
and
ins
mov
loop
mov
fsubr
mov
pop
sar
(bad)
(bad)
call
adc
sbb
fld
bound
call
xchg
pop
add
cdq
scas
xor
(bad)
(bad)
push
test
fld
pop
outs
aaa
or
(bad)
mov
stos
lods
inc
rcr
(bad)
fcomip
inc
ss
pop
daa
das
mov
dec
inc
or
inc
lds
fld
jno
push
pop
sub
inc
nop
(bad)
sbb
adc
push
or
out
rcl
xchg
fdivr
call
push
inc
and
sbb
mov
ror
push
mov
hlt
(bad)
fcomip
xor
inc
inc
pop
or
and
inc
mov
fild
ja
pop
pop
or
xlat
or
sub
and
rcl
jl
inc
or
jmp
out
inc
and
stc
mov
or
fsubr
int
adc
or
lods
sbb
pop
ja
(bad)
mov
cli
adc
mov
(bad)
call
and
and
mov
or
add
xor
int3
ret
push
inc
rcl
out
js
dec
add
adc
xlat
sbb
les
(bad)
(bad)
call
gs
add
lea
lds
dec
test
pop
or
cmp
out
(bad)
call
shr
push
pushw
hlt
push
pop
inc
mov
inc
mov
cmp
add
call
les
sbb
nop
cmp
sbb
push
imul
(bad)
dec
and
push
lahf
cmp
pop
das
inc
ja
adc
xor
(bad)
(bad)
call
dec
or
stos
or
adc
push
pushf
js
stos
adc
cmp
pop
jl
push
pop
(bad)
(bad)
(bad)
jmp
inc
adc
cmp
push
mov
fsubr
loope
adc
add
push
imul
pop
jle
retf
inc
sbb
dec
jmp
cli
call
add
mov
shl
fdivr
(bad)
jns
ret
xchg
dec
xor
cmp
inc
into
cs
add
ret
rol
jmp
int3
xor
call
push
jle
sbb
push
(bad)
mov
add
test
nop
lea
lock
or
xchg
push
push
jmp
or
mov
scas
(bad)
(bad)
(bad)
call
or
rol
in
test
clc
mov
loope
hlt
das
daa
add
pop
push
outs
add
mov
gs
lods
jo
aas
test
(bad)
(bad)
(bad)
cmp
dec
cmps
cmp
sub
push
mov
push
xchg
nop
xchg
push
sbb
fcomip
(bad)
call
das
mov
ins
or
inc
pop
cmps
dec
cmp
scas
and
dec
imul
fdivr
outs
cmc
or
pop
or
xchg
sbb
jge
(bad)
call
or
jmp
dec
mov
pop
in
clc
xor
and
adc
jg
mov
rol
pop
cld
dec
fldcw
(bad)
(bad)
(bad)
(bad)
cmp
fs
adc
xor
xchg
inc
imul
loop
sub
xchg
adc
cmp
and
out
mov
adc
(bad)
jmp
pop
sbb
jne
loop
mov
les
sbb
or
call
ss
mov
in
imul
sar
sub
xor
or
sbb
imul
dec
or
or
test
dec
loope
dec
rcl
clc
call
pushw
fldenv
(bad)
(bad)
(bad)
mov
cmps
(bad)
xchg
xchg
add
lahf
mov
cmp
push
add
call
adc
lock
or
sub
inc
xor
data16
xchg
mov
adc
(bad)
call
inc
(bad)
ret
mov
push
mov
pop
mov
pushf
xor
or
xchg
cld
(bad)
(bad)
inc
dec
and
and
inc
xchg
adc
lods
aaa
retf
std
ficomp
(bad)
dec
dec
and
xor
jp
imul
rcl
push
xor
(bad)
inc
test
pop
add
movs
sbb
adc
push
add
sar
push
jae
xor
por
imul
xchg
xor
clc
sub
(bad)
mov
in
movs
sbb
xor
mov
pop
popa
jl
lds
add
(bad)
mov
dec
adc
add
je
xchg
pop
(bad)
push
(bad)
call
iret
and
je
adc
(bad)
inc
rcl
jecxz
jmp
sub
cli
inc
jbe
mov
pusha
xchg
adc
movs
adc
je
xor
(bad)
(bad)
dec
mov
push
mov
add
dec
pop
and
push
xchg
mov
or
mov
xchg
into
loope
dec
div
scas
pop
cs
xchg
lea
adc
(bad)
jmp
jns
xchg
add
adc
cmp
and
(bad)
inc
pop
hlt
(bad)
daa
cdq
loopne
mov
xor
push
mov
(bad)
shl
(bad)
(bad)
(bad)
jmp
adc
push
pop
push
push
retf
inc
jl
xor
adc
ss
int
pusha
jnp
cs
(bad)
call
and
inc
test
fcomp
movs
inc
pop
ds
(bad)
inc
add
ins
fisub
add
sbb
xchg
jp
adc
call
fcomp
pop
sub
and
(bad)
mov
sbb
(bad)
mov
push
cli
cmp
into
sub
adc
or
(bad)
fcomip
cmp
push
(bad)
push
adc
push
retf
cwde
aaa
mov
mov
or
fwait
mov
push
fidiv
cld
outs
(bad)
jmp
sbb
aam
stos
sbb
adc
mov
dec
sar
inc
cmp
(bad)
(bad)
push
cdq
jp
xor
repz
adc
aas
cmp
inc
ret
sub
inc
in
(bad)
(bad)
call
adc
adc
push
push
stos
mov
(bad)
mov
and
fdivr
fdivr
ret
bound
in
loopne
cli
fild
js
or
icebp
imul
test
shl
and
mov
fdivr
(bad)
(bad)
call
mov
jp
push
and
cdq
inc
or
mov
sub
cmp
sets
movs
or
xchg
pop
add
push
xor
lods
sbb
fiadd
call
add
popf
or
xchg
add
xor
pop
loop
(bad)
(bad)
jg
jo
int3
test
xor
aas
add
jmp
mov
mov
mov
(bad)
jmp
movs
(bad)
inc
xor
and
mov
(bad)
loope
xchg
outs
clc
or
push
mov
retf
cli
add
add
push
cmp
jb
jp
dec
std
jmp
mov
ins
add
cmp
ins
fsubr
test
mov
jbe
dec
jl
xor
sub
test
fs
adc
cmp
out
jg
rol
pusha
ss
iret
lock
xchg
scas
inc
cmp
data16
sub
adc
and
mov
aam
std
push
push
dec
jbe
sti
xor
cmp
cmp
sub
ss
add
mov
les
test
add
mov
std
test
loopne
(bad)
jg
lock
aam
ror
mov
and
mov
add
xor
cmp
mov
dec
adc
sbb
pushf
adc
scas
or
adc
(bad)
(bad)
jg
sbb
sbb
inc
jecxz
sub
lods
daa
jb
data16
sbb
(bad)
(bad)
(bad)
call
push
sub
add
popf
and
fnsave
outs
retf
inc
sub
inc
in
cmp
(bad)
(bad)
jg
cmps
mov
sub
mov
jmp
cmp
mov
ins
and
aaa
dec
cli
popf
daa
xchg
clc
or
(bad)
jae
(bad)
(bad)
(bad)
jmp
cmp
ja
mov
inc
inc
int
lods
dec
jp
jg
push
sbb
adc
add
adc
jl
(bad)
mov
mov
inc
and
jnp
and
(bad)
(bad)
(bad)
inc
test
xlat
ss
inc
mov
(bad)
mov
ins
and
movs
push
(bad)
(bad)
(bad)
dec
in
mov
cld
cmps
loope
shl
scas
mov
adc
inc
mov
jge
sbb
ja
shl
mov
(bad)
dec
dec
pop
push
pushf
fs
not
pop
jmp
sub
inc
sub
out
dec
xchg
pop
push
push
add
(bad)
call
or
addr16
add
lods
ins
dec
dec
mov
cmp
sub
lahf
test
sahf
je
sbb
push
(bad)
movs
xor
popf
xchg
sbb
jmp
push
adc
(bad)
jmp
(bad)
imul
in
nop
rcl
add
daa
pop
sbb
cmps
hlt
(bad)
jmp
mov
outs
pop
int
xchg
jo
imul
(bad)
jmp
out
nop
fdiv
rcl
clc
outs
pop
stos
dec
iret
push
(bad)
(bad)
call
lea
or
or
pop
dec
sub
(bad)
fild
sbb
out
das
mov
push
jg
(bad)
mov
xor
addr16
or
push
pop
mov
adc
(bad)
(bad)
(bad)
(bad)
clc
dec
sbb
mov
mul
dec
mov
frstor
pop
hlt
and
adc
cmp
(bad)
(bad)
push
in
inc
xchg
mov
mov
and
sub
adc
mov
pop
add
adc
mov
adc
mov
mov
sub
xor
push
test
ds
jmp
push
call
jae
cmp
inc
mov
add
(bad)
dec
mov
hlt
dec
sti
fisubr
cmp
je
adc
fsub
push
or
inc
imul
icebp
jg
ss
test
or
mov
cld
(bad)
push
pop
ss
mov
cmp
popf
adc
inc
cmc
push
mov
xchg
test
pop
lahf
mov
jmp
inc
sbb
sbb
sub
mov
push
aam
add
inc
and
psrld
call
and
scas
sub
js
mov
xchg
adc
push
stc
push
test
inc
xor
rcr
mov
pop
aaa
cwde
inc
in
add
sbb
xlat
in
push
xchg
or
(bad)
call
inc
pop
into
and
mov
push
ss
jp
pop
dec
add
push
sbb
(bad)
push
or
add
xor
stc
mov
jns
mov
sbb
dec
imul
push
movs
sbb
pop
outs
ret
aam
out
or
ret
ja
(bad)
jmp
(bad)
push
push
and
adc
cs
or
mov
aaa
fst
add
ja
mov
(bad)
(bad)
(bad)
js
hlt
sbb
popa
add
jae
sub
adc
mov
inc
cdq
movs
(bad)
adc
(bad)
(bad)
(bad)
jmp
xchg
pop
jmp
aam
or
push
jmp
push
sub
or
add
call
lock
loop
test
pop
sbb
or
mov
dec
push
ja
inc
xchg
add
fnstcw
xchg
add
sbb
(bad)
(bad)
or
pop
inc
fdivr
scas
sub
add
inc
lahf
add
dec
mov
add
inc
(bad)
cmps
push
add
(bad)
(bad)
dec
adc
cmps
pop
(bad)
ins
neg
add
mov
add
cmp
sub
xor
push
call
or
(bad)
(bad)
jmp
pop
imul
fisub
push
dec
mul
jl
repnz
sbb
hlt
(bad)
mov
mov
cs
mov
mov
enter
(bad)
mov
mov
enter
cwde
adc
mov
lods
scas
pop
cmps
mov
add
(bad)
(bad)
push
pop
add
pop
mov
jmp
jmp
sub
(bad)
and
pop
cmp
(bad)
fbstp
jmp
sub
ss
out
xor
mov
mov
arpl
dec
xchg
(bad)
cmp
call
das
xlat
mov
cmp
in
cmp
adc
pop
fisubr
(bad)
(bad)
call
mov
push
pop
sbb
bound
in
in
fistp
jmp
and
test
sub
(bad)
out
mov
fadd
xor
jl
rol
and
(bad)
jmp
dec
ret
xchg
and
fwait
jp
jno
mov
cld
mul
add
sub
(bad)
call
imul
push
or
fwait
(bad)
mov
xor
mov
lods
add
test
rol
bound
gs
(bad)
(bad)
call
fadd
mov
add
stos
cmp
enter
xor
cld
(bad)
inc
xchg
stos
and
jge
and
dec
cmp
rcr
and
(bad)
jg
fadd
push
inc
mov
add
ins
mov
mov
cmc
das
sar
adc
mov
add
inc
popa
jge
lods
arpl
test
pusha
bndldx
add
inc
test
(bad)
push
xchg
jae
add
test
in
cmps
sub
sahf
add
cmp
jle
jmp
mov
inc
jle
es
adc
iret
(bad)
mov
jmp
cmp
pushf
add
jmp
movs
(bad)
(bad)
jmp
call
sub
cmp
das
dec
cmp
mov
jp
fs
pop
mov
push
outs
repz
sbb
xchg
push
mov
pop
clc
pop
dec
(bad)
(bad)
push
test
cwde
inc
add
push
in
fs
mov
mov
inc
clc
sar
hlt
(bad)
(bad)
push
jnp
add
pop
pop
lahf
sub
das
sbb
add
imul
(bad)
pop
bound
(bad)
sbb
adc
dec
jge
es
(bad)
push
arpl
rol
cli
pop
imul
int3
jns
das
adc
lahf
pop
mov
or
lods
mov
(bad)
(bad)
(bad)
inc
or
into
pop
sub
addr16
mov
jl
cmp
cmps
inc
xor
mov
(bad)
mov
or
mov
retf
mov
and
push
daa
and
inc
push
xor
nop
scas
xchg
sub
pop
pop
dec
or
xor
jne
lock
(bad)
call
or
xor
and
jnp
stos
add
mov
push
pushf
push
(bad)
jmp
xor
int
scas
push
cmp
idiv
sbb
adc
push
mov
(bad)
(bad)
jmp
sahf
or
push
fisttp
dec
call
mov
xor
ds
(bad)
(bad)
(bad)
push
xor
mov
fwait
mov
mov
pushf
sbb
jne
fcmovu
in
inc
jmp
jnp
mov
(bad)
dec
push
fstp
mov
sbb
cmc
mov
aaa
mov
adc
lahf
xor
fdivr
sbb
inc
jns
cmp
adc
outs
xchg
pop
in
push
aam
and
ja
cli
(bad)
push
and
sbb
dec
fs
popf
lods
push
out
(bad)
(bad)
dec
mov
sub
popf
fs
mov
int3
int3
pusha
pop
sbb
lods
xor
(bad)
(bad)
(bad)
(bad)
mov
pop
call
pop
in
xchg
dec
rcl
jle
les
fdivr
(bad)
(bad)
(bad)
mov
daa
push
iret
mov
or
push
push
aas
pop
ror
cld
pop
xor
retf
mov
(bad)
jmp
(bad)
mov
pop
loopne
and
push
cmp
mov
cmc
and
lock
mov
(bad)
mov
cwde
test
test
addr16
das
lods
jo
outs
push
pop
fs
iret
jmp
sar
add
rcr
sub
push
loopne
adc
mov
mov
(bad)
(bad)
jmp
xor
mov
push
out
shr
imul
xor
mov
(bad)
jnp
arpl
push
sub
mov
adc
(bad)
clc
inc
mov
cmp
jne
test
sub
lar
mov
ss
rcl
sbb
mov
and
(bad)
jmp
add
(bad)
call
ds
pop
dec
add
shl
pop
jo
dec
into
lock
mov
test
mov
call
mov
call
xor
adc
(bad)
int
pop
cmp
pop
lds
aaa
cld
jbe
sub
xchg
adc
mov
and
scas
add
(bad)
(bad)
(bad)
push
and
and
and
add
sub
sar
xor
shl
jl
mov
or
mov
(bad)
js
adc
mov
pop
ret
add
cmp
retf
jmp
loope
add
fdivr
mov
cmp
mov
cs
and
(bad)
(bad)
inc
cmc
jno
or
sub
xchg
pop
cmp
mov
mov
aaa
adc
and
fcmovb
outs
sub
sub
or
cdq
xor
mov
jp
jl
daa
mov
mov
mov
push
arpl
fadd
pop
in
jge
pop
adc
dec
loope
and
or
inc
(bad)
mov
imul
mov
push
sbb
clc
push
cmps
mov
(bad)
call
dec
stos
mov
push
(bad)
push
mov
mov
shl
push
movs
sbb
mov
xchg
mov
sbb
loop
(bad)
push
adc
push
jl
js
mov
mov
add
cmps
fcmovne
mov
das
cld
or
(bad)
(bad)
mov
scas
or
pop
dec
cmp
jno
cmc
mov
sti
mov
call
cmp
fidiv
or
sbb
into
sbb
arpl
(bad)
push
adc
push
(bad)
std
jmp
(bad)
(bad)
dec
jmp
add
sub
fs
int3
or
mov
je
push
(bad)
(bad)
(bad)
call
jmp
sub
adc
jns
or
sbb
mov
ret
adc
push
inc
(bad)
inc
nop
xchg
call
mov
es
scas
rcl
add
(bad)
(bad)
inc
or
pop
daa
push
sub
adc
push
mov
dec
ss
imul
lods
scas
lods
add
jmp
stos
dec
xchg
dec
call
les
inc
mov
ret
mov
nop
inc
and
(bad)
loopne
(bad)
data16
daa
test
shl
add
mov
mov
es
jmp
mov
inc
ds
dec
xchg
mov
inc
add
out
adc
mov
lahf
fld
(bad)
(bad)
pop
and
outs
(bad)
push
ret
push
les
xor
push
clc
jmp
(bad)
std
mov
or
add
shr
and
pop
repnz
mov
sub
sub
pop
jmp
mov
jmp
dec
fdivp
xchg
out
ins
aas
inc
jl
lea
ja
xchg
pop
movs
push
scas
mov
cmp
fucomi
(bad)
(bad)
(bad)
(bad)
clc
push
push
andnps
rcr
mov
add
sub
test
call
shr
(bad)
jle
jb
xor
mov
mov
fmul
jmp
ins
bound
sub
sbb
cmps
dec
sbb
cwde
xor
and
addr16
mov
dec
(bad)
(bad)
(bad)
(bad)
cli
push
lahf
sbb
or
leave
xor
jp
push
pop
push
hlt
loopne
and
add
mov
xor
(bad)
(bad)
call
sub
aaa
lods
mov
add
push
test
push
daa
mov
test
outs
lock
(bad)
dec
fadd
cmps
add
pop
cmp
retf
bnd
adc
xor
(bad)
dec
xchg
and
sbb
sub
pop
push
imul
(bad)
fistp
retf
adc
and
bound
inc
cmp
mov
(bad)
(bad)
push
jmp
add
push
sbb
lods
or
retf
nop
popa
jecxz
mov
cld
(bad)
(bad)
jmp
out
mov
fstp
neg
arpl
stc
push
mov
mov
mov
jns
and
cwde
in
lahf
adc
in
ins
movs
idiv
add
(bad)
(bad)
inc
inc
mov
or
lods
push
ins
sub
pushf
(bad)
(bad)
(bad)
fld
imul
xchg
pop
and
mov
mov
sub
adc
(bad)
(bad)
push
movs
inc
jae
jmp
ins
repz
jmp
xor
pop
xor
jmp
fcomp
arpl
(bad)
fild
aam
pop
sar
enter
add
mov
inc
and
inc
or
sbb
or
mov
dec
(bad)
mov
(bad)
and
arpl
inc
mov
nop
pop
inc
sar
sub
dec
(bad)
(bad)
(bad)
(bad)
fisub
rol
sub
or
pop
add
inc
cmps
cmp
and
(bad)
call
pop
dec
(bad)
fidivr
jg
cmp
jno
xchg
js
pop
lock
mov
mov
jg
jmp
dec
and
push
pop
add
sar
add
call
push
sbb
(bad)
(bad)
(bad)
inc
js
sbb
(bad)
push
fidivr
push
pop
rcl
push
push
mov
dec
xor
adc
jmp
inc
bound
test
enter
(bad)
jg
push
fnstcw
pop
jno
pop
sbb
cli
sar
inc
jnp
int3
inc
sbb
dec
mov
jmp
mov
push
scas
dec
pop
retf
push
sub
ins
xor
imul
inc
dec
popa
pop
or
xchg
call
adc
(bad)
gs
shl
jle
and
jae
mov
adc
mov
sbb
mov
cmps
fsub
(bad)
(bad)
jg
xchg
or
imul
adc
les
adc
fcom
cmp
pop
cmp
call
mov
outs
mov
inc
adc
adc
(bad)
dec
ror
cmps
sbb
xchg
ret
fbld
mov
enter
pop
popa
inc
lock
ins
lea
into
cmc
sbb
cmc
push
les
pop
icebp
ins
sbb
daa
xchg
mov
stos
lds
push
call
ret
cmp
les
xor
ins
hlt
dec
call
inc
das
std
lock
mov
or
(bad)
cmp
add
(bad)
(bad)
(bad)
jg
cld
mov
repz
cmps
add
cmc
mov
(bad)
jnp
loop
sbb
sbb
scas
cli
(bad)
mov
mov
(bad)
hlt
pop
mov
iret
repz
lds
mov
(bad)
(bad)
inc
test
cmp
je
inc
daa
pop
mov
pop
jmp
mov
xor
xor
stos
movsx
xor
shl
icebp
(bad)
jmp
retf
cs
xchg
xlat
jle
movs
enter
daa
mov
xchg
sub
cli
mov
sbb
lods
adc
pop
pop
push
call
imul
outs
rol
sub
mov
xchg
push
(bad)
retf
push
push
pusha
je
(bad)
(bad)
jg
jl
dec
fs
or
push
and
scas
and
(bad)
popa
xchg
mov
nop
adc
clc
popa
push
xchg
je
loopne
enter
lea
imul
adc
ja
retf
sub
nop
inc
and
call
or
adc
jle
rcl
cwde
lock
add
outs
bound
jg
add
inc
cmp
or
push
pusha
inc
stos
lea
xor
loopne
mov
loop
jmp
xor
mov
mov
cmp
mov
(bad)
sub
hlt
push
enter
clc
call
shl
sub
retf
mov
xor
inc
pop
sub
pop
outs
(bad)
jmp
(bad)
sbb
sahf
aaa
stos
clc
xchg
sbb
xchg
leave
mov
lock
icebp
(bad)
(bad)
call
xor
pop
sbb
or
xchg
xor
enter
pop
aas
(bad)
stos
fbstp
(bad)
adc
sbb
sti
sub
ror
cld
leave
clc
pop
mov
xchg
push
pop
shl
enter
adc
or
fmul
js
sti
xor
or
ret
mov
pcmpgtw
shr
clc
(bad)
mov
enter
jmp
repnz
fistp
inc
in
add
(bad)
(bad)
call
cmps
aad
sbb
clc
xor
and
xlat
dec
push
iret
add
cmp
cmc
mov
sub
(bad)
das
add
mov
(bad)
(bad)
out
pusha
jecxz
sub
(bad)
inc
test
cmp
and
out
cmc
mov
call
call
push
inc
xor
mov
(bad)
(bad)
push
inc
or
push
inc
in
ss
cwde
adc
out
xor
xchg
retf
jg
(bad)
and
cmp
fnstenv
add
icebp
rcr
lahf
xsave
loope
inc
fstp
je
shl
(bad)
dec
cmp
in
popa
les
stc
cmp
or
mov
dec
mov
les
xor
push
std
(bad)
cmp
jg
mov
mov
ss
lods
(bad)
fwait
sub
mov
xchg
sub
or
addr16
ja
push
popa
jo
ja
retf
xchg
(bad)
jmp
mov
lock
pop
inc
xlat
rol
aam
add
aam
push
or
(bad)
iret
es
inc
inc
das
clc
(bad)
jmp
mov
dec
shl
push
push
lahf
mov
lea
aad
inc
retf
(bad)
cmps
mov
adc
test
(bad)
call
sbb
xor
loope
icebp
jmp
sbb
add
sti
dec
sbb
out
mov
mov
or
or
ret
cli
dec
add
fsubr
shl
icebp
jle
(bad)
inc
inc
sbb
xor
int3
lds
push
xchg
mov
outs
dec
cmp
fstp
js
out
in
cmp
pop
xchg
rcl
pushf
cmp
das
xor
and
push
int3
clc
add
inc
(bad)
or
pop
in
sub
js
sub
push
dec
ret
nop
jbe
out
and
sbb
add
stos
and
cdq
add
adc
(bad)
(bad)
(bad)
dec
push
out
or
mov
xor
cmp
cmp
dec
jae
loopne
into
sar
int
(bad)
(bad)
(bad)
jmp
sysenter
cmp
test
test
gs
fs
(bad)
mov
push
xor
push
add
mov
adc
(bad)
(bad)
call
lds
std
out
pop
dec
in
pop
std
out
sbb
pop
ficomp
cmp
je
(bad)
(bad)
(bad)
inc
imul
test
and
in
aas
mov
test
adc
sti
(bad)
loopne
cwde
in
sbb
jmp
cmp
neg
cmp
push
xchg
dec
cmp
daa
sub
jmp
fimul
and
in
pop
push
out
in
add
jge
mov
call
inc
pop
and
std
add
push
mov
call
cld
lock
jo
aad
adc
push
shr
or
mov
sub
xor
cdq
pop
inc
inc
push
in
(bad)
add
adc
dec
adc
xchg
adc
mov
aas
ins
cli
outs
cli
and
pusha
sti
or
addr16
aam
movs
jnp
or
jmp
jl
or
enter
fsubr
add
stos
loop
call
adc
pop
adc
and
mov
adc
sbb
push
fsubr
dec
retf
jl
or
sub
adc
mov
jg
add
or
and
(bad)
jno
push
ss
and
dec
xor
push
(bad)
(bad)
aas
call
adc
pop
inc
call
add
jbe
push
(bad)
jmp
push
fld
push
jno
cmp
pop
movs
jnp
sahf
lock
jp
dec
add
icebp
mov
fwait
shr
clc
jmp
or
mov
add
neg
adc
pop
mov
(bad)
fnstsw
mov
arpl
(bad)
icebp
ret
sbb
or
or
adc
pop
in
cmps
out
mov
ins
dec
das
or
lock
scas
add
cs
cmp
mov
push
xor
(bad)
(bad)
(bad)
push
cmp
imul
cmp
dec
pop
jecxz
inc
dec
inc
shl
add
add
lods
aam
sub
jmp
mov
mov
movs
adc
or
xchg
shl
bound
std
pop
inc
pop
cmp
mov
mov
js
cmp
mov
lock
ss
push
mov
mov
lods
dec
shl
add
stos
imul
jbe
out
sbb
inc
mov
mov
jl
sbb
cmp
and
fbld
or
(bad)
(bad)
inc
jmp
outs
add
jle
add
shl
mov
gs
out
imul
cmp
xchg
inc
dec
or
mov
(bad)
repz
(bad)
call
aam
aad
mov
or
add
pop
popa
adc
aam
adc
(bad)
(bad)
(bad)
call
mov
pop
push
dec
mov
dec
dec
sub
xor
in
test
xchg
sub
(bad)
(bad)
dec
jecxz
bnd
pushf
pop
sub
repz
loopne
loopne
pop
cmp
pop
sub
jmp
(bad)
push
int
imul
inc
push
test
push
sub
cmp
mov
clc
pop
or
ins
test
aam
lock
inc
adc
inc
add
add
dec
les
aaa
and
jmp
ja
or
inc
xchg
ins
jg
push
push
mov
(bad)
jo
xchg
loopne
or
(bad)
data16
sub
stos
jmp
(bad)
fdiv
pop
sbb
cmp
add
xor
and
(bad)
(bad)
out
xchg
sbb
clc
inc
ja
inc
adc
sbb
mov
test
call
adc
fwait
sbb
dec
fucomp
sahf
pop
dec
mov
mov
or
jg
(bad)
call
xor
cmp
sahf
xchg
cwde
cwde
xchg
hlt
movs
test
(bad)
(bad)
(bad)
(bad)
ror
jnp
and
or
sub
lock
mov
or
push
out
(bad)
jmp
clc
clc
push
jmp
pop
test
mov
sti
lea
aam
cmps
and
(bad)
(bad)
call
test
adc
ja
mov
lods
mov
pop
ret
push
jmp
mov
fist
fs
mov
mov
(bad)
(bad)
(bad)
jmp
xor
in
(bad)
repnz
add
or
dec
or
(bad)
(bad)
(bad)
jmp
enter
sub
and
and
loopne
dec
std
inc
inc
push
inc
inc
ins
movs
inc
jo
push
dec
sbb
mov
call
nop
stos
jmp
mov
adc
outs
mov
sti
lock
push
test
add
cmp
pop
(bad)
mov
add
add
hlt
adc
loope
mov
bound
(bad)
jg
in
loop
pop
cli
jmp
fisttp
test
xor
dec
lods
lea
ins
ret
(bad)
(bad)
jg
cmp
add
add
jecxz
jg
rcr
enter
mov
fcmovnbe
enter
fs
and
bound
pop
jns
jnp
stos
ins
std
(bad)
jbe
push
xor
push
sahf
out
ss
dec
(bad)
(bad)
(bad)
call
ror
dec
adc
xchg
xchg
retf
aad
sub
rcr
mov
jbe
fcom
out
xor
adc
or
test
mov
(bad)
jg
(bad)
test
or
add
mov
jnp
imul
neg
mov
ds
mov
sbb
xlat
mov
pop
push
xchg
sbb
jle
xchg
repnz
push
add
mov
mov
and
mov
and
test
idiv
inc
(bad)
shl
inc
clc
jle
aam
sbb
dec
xchg
jecxz
and
call
int3
adc
or
pop
cld
fist
nop
es
mov
sti
fcom
push
sbb
cmc
(bad)
push
ficomp
or
sbb
dec
fdiv
(bad)
sub
jg
pop
aaa
mov
fdivr
push
sbb
or
ret
(bad)
jg
xchg
scas
inc
xlat
push
mov
leave
jnp
popf
out
xchg
mov
push
mov
(bad)
(bad)
jmp
jnp
into
push
out
pop
pop
add
add
xchg
mov
adc
fisttp
dec
mov
(bad)
call
cmp
enter
imul
adc
outs
mov
mov
hlt
ds
nop
sbb
ud0
(bad)
inc
nop
jo
dec
mov
xlat
rcl
scas
and
push
cmp
lock
(bad)
(bad)
(bad)
call
cmps
jg
add
push
lahf
xor
sar
cmp
adc
cld
sub
(bad)
dec
sub
pop
push
ret
inc
sti
clc
add
xchg
aaa
mov
call
xor
push
(bad)
(bad)
(bad)
push
dec
add
arpl
rcr
push
add
mov
(bad)
pop
lods
rol
inc
aaa
push
call
cld
mov
mov
pop
lods
inc
adc
je
jbe
(bad)
cmp
(bad)
push
cmps
(bad)
(bad)
call
fiadd
adc
call
push
repz
adc
outs
(bad)
(bad)
(bad)
call
rol
cmp
or
or
add
xchg
cmp
or
pop
pop
add
pop
and
mov
mov
xor
pop
push
or
mov
fdivrp
(bad)
(bad)
push
xor
sbb
sbb
jl
or
sbb
mov
in
ja
loopne
(bad)
out
lds
add
int
add
fwait
or
sbb
xchg
int
(bad)
(bad)
mov
dec
iret
and
repz
enter
cmp
cli
jg
push
mov
inc
push
push
jp
push
out
fs
sbb
outs
ss
sbb
fbstp
xor
loope
xor
ret
je
in
(bad)
ret
scas
xchg
ret
out
xor
jecxz
push
add
pop
inc
mov
xor
dec
sbb
inc
cwde
or
fstp
fcmovnu
inc
add
xor
clc
(bad)
mov
adc
push
pop
das
or
cmps
sbb
loop
pop
and
ja
xchg
dec
arpl
test
(bad)
call
stos
add
lds
hlt
cmp
loop
pop
dec
int3
fsubr
jmp
add
lahf
hlt
jecxz
pop
ror
pop
fld
cmp
mov
dec
sar
cmp
dec
adc
sub
and
sbb
jae
sbb
(bad)
or
(bad)
(bad)
jg
jge
daa
push
nop
bound
sbb
or
fadd
popa
cld
mov
ins
cld
(bad)
push
outs
xchg
xor
ror
xor
dec
jl
lock
sti
add
(bad)
(bad)
(bad)
mov
in
imul
dec
add
retf
adc
and
clc
js
mov
std
(bad)
call
add
xchg
movs
mov
xor
retf
out
or
leave
lds
das
and
fs
das
inc
std
ins
in
push
nop
cdq
mov
imul
mov
jmp
adc
push
xor
xlat
inc
jae
sub
fbld
xchg
movs
fld
nop
sbb
(bad)
(bad)
jmp
and
nop
push
jl
dec
not
adc
jns
push
(bad)
les
mov
stos
aam
push
ins
add
push
xor
(bad)
call
adc
or
adc
(bad)
out
mov
dec
sbb
inc
or
xor
or
movs
push
add
iret
jnp
out
clc
(bad)
call
jne
in
push
movs
mov
jns
cmp
out
daa
inc
push
adc
or
(bad)
call
jns
inc
shr
mov
ds
push
or
test
mov
xchg
add
push
pop
cli
and
pop
jg
rcr
add
(bad)
call
nop
iret
mov
add
rcl
ret
adc
and
dec
fwait
sbb
xchg
hlt
cwde
xor
das
adc
xor
mov
pop
jg
jns
clc
fst
add
cmp
or
dec
sbb
push
(bad)
and
jmp
js
fsubr
sbb
enter
pop
sbb
adc
xor
pop
cli
push
loop
mov
(bad)
call
sbb
jb
enter
and
xor
stos
pop
loope
lock
jmp
add
push
inc
add
out
jb
ficom
dec
movs
(bad)
(bad)
(bad)
call
push
mov
sub
ss
sbb
pop
pop
mov
inc
fld1
fstp
pop
gs
in
(bad)
(bad)
jmp
mov
loopne
es
jmp
popf
lock
pop
sbb
fsub
sbb
call
scas
mov
lock
xchg
pusha
pop
arpl
mov
pop
call
pusha
inc
(bad)
(bad)
jmp
sub
push
jno
dec
ffree
out
(bad)
enter
push
cld
inc
xchg
pusha
mov
lea
sbb
dec
and
iret
sbb
int3
les
(bad)
(bad)
jg
xchg
pop
jo
fadd
aam
icebp
xchg
aad
sbb
test
and
ins
and
dec
sbb
sub
rcl
jmp
(bad)
jmp
jp
jno
sbb
lock
or
ins
es
sub
xor
test
hlt
(bad)
dec
sub
jle
and
jo
arpl
cmp
and
inc
jmp
movs
pusha
(bad)
(bad)
inc
add
sbb
mov
loope
dec
shr
nop
in
and
lods
pop
and
or
imul
adc
in
adc
xlat
in
enter
and
in
(bad)
(bad)
jmp
ror
icebp
jo
add
mov
adc
(bad)
jmp
enter
mov
imul
scas
hlt
lods
adc
(bad)
push
dec
hlt
mov
sbb
pusha
adc
mov
inc
loop
fisttp
es
repz
adc
and
imul
(bad)
(bad)
(bad)
mov
adc
fsub
xchg
sub
(bad)
in
(bad)
and
add
loope
mov
cmp
lea
(bad)
call
aas
pop
push
sbb
(bad)
aad
mov
mov
retf
add
call
loope
loop
je
mov
outs
xor
xor
dec
ret
std
xor
jmp
(bad)
call
adc
addr16
inc
mov
pop
fs
lods
mov
mov
pop
rcl
mov
cwde
dec
sahf
shr
pop
cdq
(bad)
jmp
fadd
out
outs
add
loopne
dec
inc
pop
xor
fcom
lods
call
ss
dec
(bad)
mov
and
jle
rcr
and
xor
call
inc
dec
sbb
or
add
addr16
add
(bad)
(bad)
mov
(bad)
jne
and
leave
adc
repnz
xor
jbe
lds
(bad)
(bad)
inc
add
and
sub
ins
add
cmc
jg
inc
adc
out
fsub
sar
mov
push
fiadd
sbb
addr16
stos
xor
xchg
fcomp
jbe
pop
fcom
mov
jmp
or
or
dec
hlt
adc
(bad)
(bad)
dec
adc
xor
cmp
pinsrw
jge
adc
(bad)
(bad)
(bad)
call
mov
xor
push
scas
es
and
jmp
out
adc
push
mov
stos
add
push
hlt
or
ret
inc
es
adc
in
ja
sbb
cmp
test
jmp
sbb
stc
push
xor
cmp
(bad)
(bad)
(bad)
jl
and
movs
dec
ds
jmp
or
sub
or
xchg
adc
inc
adc
pop
jbe
jo
sub
into
clc
(bad)
(bad)
call
inc
pop
pop
inc
sbb
pop
and
test
sub
test
or
xchg
int3
mov
sub
adc
push
and
or
(bad)
mov
sub
loopne
mov
adc
mov
aaa
cld
ror
dec
mov
inc
add
bound
xor
(bad)
in
(bad)
call
call
imul
sub
icebp
fdiv
ins
mov
(bad)
call
mov
and
mov
std
push
sbb
cld
in
jmp
int3
pop
sbb
sub
js
enter
inc
(bad)
jmp
mov
gs
ja
add
mov
push
dec
les
mov
(bad)
dec
mov
or
push
add
imul
(bad)
(bad)
(bad)
mov
imul
xor
push
jb
add
cmp
mov
(bad)
(bad)
push
and
addr16
ror
pop
imul
test
shl
ss
dec
sub
sub
push
jmp
push
push
push
inc
(bad)
stc
(bad)
or
stos
mov
add
xchg
repz
adc
mov
(bad)
call
cmp
int
mov
xchg
inc
(bad)
and
lock
(bad)
(bad)
fimul
fcomi
inc
ret
(bad)
jg
arpl
pop
in
xchg
adc
aas
or
(bad)
jg
pop
push
aaa
or
push
xchg
pop
inc
popa
je
(bad)
(bad)
jg
ret
and
push
sbb
xor
adc
cmc
hlt
dec
adc
(bad)
(bad)
jmp
adc
add
cmp
or
mov
rol
add
mov
js
(bad)
(bad)
(bad)
call
imul
iret
mul
cmp
sbb
adc
jnp
fcom
mov
js
(bad)
(bad)
inc
mov
sbb
or
test
or
js
jecxz
pop
sub
bound
(bad)
(bad)
mov
adc
inc
clc
inc
movs
rcr
cmp
and
mov
jmp
and
enter
arpl
push
mov
xor
mov
int3
dec
shl
js
mul
icebp
mov
mul
adc
jge
xor
leave
mov
enter
cmp
jmp
push
dec
and
adc
cmp
aad
jb
pop
(bad)
inc
fidiv
js
jl
pop
sub
dec
adc
push
adc
call
lds
jle
in
sbb
cwde
pusha
sbb
dec
jne
mov
push
add
xor
lods
mov
cdq
sub
xor
and
xchg
push
test
inc
pushf
loope
sub
(bad)
push
outs
xchg
cmc
int3
sub
cmp
adc
mov
pop
or
mov
(bad)
push
add
stc
add
call
or
cmp
and
xor
jg
jmp
dec
xlat
sahf
add
(bad)
es
mov
mov
jg
push
jno
out
mov
in
das
fidivr
mov
in
ret
xchg
(bad)
(bad)
(bad)
inc
sbb
mov
inc
fcom
xchg
push
sbb
imul
sar
rol
(bad)
(bad)
(bad)
dec
cmp
jno
aam
push
pop
xchg
pushf
inc
jl
sar
cmps
mov
xor
mov
(bad)
dec
xor
jno
mov
lods
shl
jmp
shl
(bad)
jmp
pusha
clc
add
mov
mov
xor
add
jp
sub
in
mov
popa
pop
dec
push
ss
mov
mov
cmc
mov
stc
cmps
fwait
loopne
lods
sub
in
ret
push
shl
adc
push
sub
xor
mov
mov
inc
ret
mov
mov
push
(bad)
jmp
ror
(bad)
shr
jg
fsubr
sbb
cmc
sbb
addr16
cli
lock
fcomip
inc
or
lea
xchg
adc
xchg
sti
adc
dec
dec
inc
(bad)
loopne
loopne
(bad)
inc
lods
or
loope
ds
cmp
(bad)
call
cmp
or
adc
or
sti
mov
in
adc
loop
pop
(bad)
(bad)
dec
pop
mov
jb
daa
cld
fs
dec
add
and
dec
jb
icebp
call
push
xor
jb
ins
test
mov
icebp
push
pop
and
mov
(bad)
aas
test
inc
repz
jg
movs
je
cli
inc
cld
xchg
daa
xor
add
push
push
ss
push
(bad)
sub
(bad)
(bad)
jmp
pop
cmp
enter
out
into
ret
rol
xchg
adc
outs
sub
mov
cld
adc
(bad)
jg
arpl
enter
fwait
(bad)
or
add
lahf
aaa
jns
sar
(bad)
(bad)
push
test
out
(bad)
xor
sub
dec
cmp
adc
lea
mov
mov
pop
ret
(bad)
mov
nop
nop
and
mov
jmp
and
adc
test
or
jge
or
(bad)
jg
and
adc
movs
and
and
mov
push
test
fidiv
lahf
dec
pop
or
test
dec
loopne
imul
mov
das
mov
popa
pop
xchg
mov
loope
lock
shl
and
aam
add
mov
mov
test
(bad)
(bad)
mov
add
rcl
call
sub
add
std
(bad)
(bad)
jmp
mov
(bad)
das
arpl
je
push
in
cmp
jnp
sbb
mov
sub
fmul
or
dec
(bad)
call
sub
add
push
adc
(bad)
test
push
push
add
(bad)
(bad)
push
adc
inc
call
loopne
and
int3
je
xor
ins
(bad)
inc
adc
lods
in
push
outs
adc
(bad)
mov
pop
and
pminsw
mov
enter
in
pop
addr16
data16
(bad)
(bad)
(bad)
jmp
sbb
add
fcomp
xchg
mov
adc
inc
sahf
push
sbb
adc
repz
add
(bad)
(bad)
cmp
es
xchg
add
mov
out
jnp
mov
imul
xchg
push
fcmovne
jle
(bad)
(bad)
push
dec
xor
add
or
ficomp
inc
test
sub
loope
dec
pop
and
adc
cmp
xor
pop
(bad)
adc
mov
mov
xor
cmc
(bad)
mov
push
ret
scas
inc
push
dec
xor
adc
les
movs
(bad)
(bad)
dec
ins
fmul
(bad)
mov
push
pop
and
and
dec
dec
or
(bad)
call
fst
mov
and
hlt
aaa
xor
jmp
push
mov
gs
clc
lock
(bad)
mov
mov
xor
xor
jmp
jb
jl
je
adc
pop
adc
mov
or
add
push
push
out
pop
(bad)
fiadd
pop
hlt
mov
or
cmp
add
test
nop
sbb
(bad)
(bad)
(bad)
aaa
jg
lock
xchg
mov
jne
(bad)
call
adc
adc
adc
xor
(bad)
(bad)
dec
xchg
mov
out
sbb
mov
adc
loopne
add
lock
ret
push
jmp
rol
jl
bnd
xchg
je
ja
cmp
loopne
sub
inc
add
push
call
std
call
xlat
(bad)
xchg
js
adc
rcr
rcr
dec
cld
push
ds
js
scas
jl
(bad)
(bad)
(bad)
jmp
sbb
int3
mov
mov
fstp
inc
nop
mov
(bad)
je
daa
or
inc
sbb
add
and
scas
and
or
daa
push
jmp
iret
out
mov
jmp
pop
push
inc
add
mov
(bad)
fdivr
out
push
adc
outs
mov
iret
inc
iret
in
dec
out
pop
mov
mov
adc
xchg
fnstcw
mov
dec
sar
inc
mul
(bad)
(bad)
(bad)
inc
sub
retf
cmp
push
and
xchg
adc
icebp
out
nop
das
jne
dec
aam
clc
add
(bad)
inc
hlt
hlt
test
iret
xorps
js
pop
mov
mov
sub
ret
hlt
mov
pop
jle
jmp
dec
adc
repz
inc
push
hlt
add
dec
xchg
push
les
pop
inc
sub
sbb
push
js
push
adc
(bad)
(bad)
(bad)
fistp
jg
fnop
xor
(bad)
jne
lods
aaa
xor
pop
sbb
dec
clc
jnp
mov
jmp
or
and
dec
mov
enter
(bad)
(bad)
dec
sbb
jns
xor
or
or
jne
jne
rol
mov
ror
mov
icebp
sub
js
push
adc
scas
cli
(bad)
inc
and
sub
mov
(bad)
(bad)
cmp
loop
mov
les
cwde
sub
cmp
cmp
call
bswap
in
or
inc
xor
pop
test
sub
in
ud0
(bad)
(bad)
fadd
les
ret
or
mov
cld
pop
or
js
mov
push
ror
pshufw
(bad)
scas
cli
call
xchg
jmp
jge
pop
xor
aam
nop
adc
(bad)
(bad)
(bad)
jmp
fmul
cmps
lahf
inc
push
pop
pop
mov
lahf
je
pusha
add
movaps
(bad)
(bad)
(bad)
jmp
xchg
inc
bound
loopne
jle
orps
xor
movs
sbb
(bad)
(bad)
(bad)
(bad)
cld
lea
jo
pop
pop
iret
ret
add
test
cmp
mov
sub
ret
sar
das
stos
cli
xor
aas
loop
into
aas
xchg
pop
dec
shr
adc
dec
ins
mov
(bad)
(bad)
push
inc
jae
xor
int
mov
dec
adc
loop
or
aas
or
sbb
or
sbb
push
and
je
mov
add
call
dec
cmp
jne
add
ins
lods
jbe
rol
dec
(bad)
dec
pop
cmps
fiadd
dec
into
jmp
or
sbb
lahf
and
(bad)
(bad)
inc
adc
dec
loope
ret
jl
inc
loope
les
mov
inc
cli
mov
sbb
hlt
cld
popa
add
adc
les
jmp
xchg
and
xlat
inc
mov
xchg
das
push
adc
push
pop
sub
dec
dec
ret
xor
mov
fcomp
aaa
mov
(bad)
jmp
test
or
dec
fcmovb
mov
adc
xor
push
add
inc
ja
(bad)
push
std
dec
mov
call
adc
stos
add
imul
(bad)
(bad)
(bad)
dec
xchg
inc
sbb
ret
xor
cmp
sar
test
adc
jge
je
inc
ins
loope
adc
dec
adc
jmp
ins
adc
jbe
xor
push
push
pop
std
(bad)
jmp
xor
mov
and
and
inc
in
(bad)
aas
or
pop
sbb
mov
(bad)
(bad)
jmp
sbb
cdq
xor
or
or
xor
stos
sbb
pop
stos
ss
push
or
adc
(bad)
(bad)
call
xchg
and
adc
add
add
rcr
mov
(bad)
ins
stc
mov
pop
adc
rcr
pop
and
sbb
dec
add
add
scas
dec
inc
add
scas
(bad)
mov
call
cmps
sub
into
(bad)
(bad)
call
pop
das
adc
test
mov
pop
sub
(bad)
(bad)
jmp
lock
icebp
jbe
out
cmp
test
stos
scas
sbb
ror
or
mov
pop
imul
mov
ret
scas
loope
dec
add
push
xor
push
or
ins
push
fadd
xchg
es
inc
mov
xlat
daa
sbb
(bad)
(bad)
call
jmp
fdiv
ds
adc
dec
sub
inc
inc
fiadd
cld
(bad)
jmp
inc
cmp
(bad)
in
mov
sbb
pusha
hlt
das
sar
add
(bad)
mov
addr16
xor
out
pusha
push
jmp
(bad)
(bad)
push
sbb
les
test
out
aaa
dec
das
pop
sbb
cmp
(bad)
jmp
push
push
jl
cmp
pusha
out
push
mov
aaa
xlat
sub
adc
(bad)
dec
add
retf
inc
adc
or
sub
or
fwait
cmp
popa
sub
(bad)
call
test
fld
hlt
push
retf
sbb
aaa
adc
xor
and
in
nop
aas
das
push
adc
push
add
(bad)
rol
pop
and
push
dec
push
or
or
push
dec
data16
(bad)
(bad)
jmp
out
or
jecxz
ret
xchg
adc
xlat
mov
cmp
sub
retf
push
call
(bad)
hlt
btc
mov
cmc
inc
in
cwde
dec
adc
fimul
mov
jge
jg
(bad)
inc
push
cs
ret
les
and
icebp
(bad)
(bad)
dec
mul
js
pop
adc
add
iret
xchg
dec
or
(bad)
inc
dec
add
adc
add
out
sub
jle
add
inc
or
inc
retf
arpl
push
dec
loope
call
or
test
add
xor
ror
jge
or
(bad)
jmp
inc
fcmovbe
xchg
rcl
jo
imul
push
adc
les
lds
inc
(bad)
(bad)
(bad)
dec
push
into
jns
push
mov
add
scas
xchg
clc
popa
push
jmp
jb
or
in
sbb
xchg
jg
sbb
(bad)
retf
pop
sbb
adc
sub
hlt
sbb
jecxz
test
push
mov
jne
(bad)
(bad)
push
js
push
jg
mov
pop
mov
or
call
cwde
mov
hlt
(bad)
(bad)
jmp
jne
mov
arpl
pop
cmps
lock
push
inc
adc
ret
(bad)
mov
and
push
in
test
and
sub
push
or
lock
in
dec
(bad)
jmp
xor
sub
pop
cli
ret
test
push
(bad)
cmp
shl
cmp
(bad)
(bad)
(bad)
jmp
repz
sbb
push
nop
pop
(bad)
push
jp
xchg
mov
ret
push
adc
sbb
jnp
(bad)
outs
mov
das
xor
call
sub
ja
(bad)
in
cmp
pop
mov
adc
rcl
call
adc
push
push
mov
shl
out
push
lock
in
pop
pop
scas
mov
jp
int3
dec
pop
adc
hlt
sub
or
xor
adc
ins
mov
arpl
sub
inc
cmp
pop
rcl
sbb
xchg
outs
call
jmp
fild
dec
jecxz
sub
sbb
mov
retf
fadd
push
or
inc
pushf
inc
sbb
das
fs
enter
ret
(bad)
(bad)
jmp
sub
fnstcw
inc
stos
sbb
add
js
rcl
adc
movs
inc
mov
cmp
(bad)
inc
pop
pop
xchg
add
or
mov
ins
cmp
cmp
dec
mov
or
lods
push
retf
push
pop
mov
mov
(bad)
jmp
sub
jg
inc
mov
mov
test
adc
lea
mov
jecxz
(bad)
adc
addr16
fimul
add
shl
or
je
fist
rcr
fmul
cmp
stos
(bad)
(bad)
(bad)
call
or
lods
shr
clc
(bad)
adc
pmulhuw
mov
mov
ins
cld
mov
mov
lods
or
pop
(bad)
(bad)
(bad)
call
retf
imul
cmp
loop
mov
jne
pop
mov
pop
fs
cmp
lock
jg
fcomp
stc
inc
and
mov
mov
sbb
sbb
or
(bad)
jg
dec
mov
lea
cmps
add
nop
jne
sub
hlt
(bad)
(bad)
call
mov
or
lods
call
jle
ds
clc
jmp
xchg
and
(bad)
jmp
push
jb
adc
addr16
loopne
ins
call
lock
xor
xor
mov
mov
push
fisubr
cmp
loopne
(bad)
jg
ins
out
sbb
inc
pop
push
mov
push
das
js
push
(bad)
(bad)
(bad)
mov
mov
xor
jo
xchg
and
pop
cmps
xor
jne
nop
mov
push
cld
call
inc
mov
cmps
adc
push
paddb
mov
add
jne
or
jo
cmp
xor
dec
xor
in
cmp
(bad)
inc
imul
mov
je
adc
ret
adc
xchg
sbb
and
jmp
add
mov
sbb
mov
push
enter
pop
ss
jg
jp
jp
jl
push
pusha
cmc
aaa
cld
pop
ret
mov
fcmovne
adc
(bad)
ja
mov
pop
cld
lds
cmp
push
pop
jmp
push
inc
ja
push
xchg
xchg
out
jnp
cmp
shr
or
(bad)
in
push
sbb
dec
cwde
out
arpl
mov
push
mov
js
sub
xchg
jb
cmps
retf
cmp
cmovg
sub
retf
cmps
ud0
cld
dec
dec
sahf
xchg
xchg
xchg
add
into
cwde
pop
sbb
cmc
jmp
fisub
or
outs
mov
lds
inc
(bad)
jmp
sbb
pop
adc
cmp
daa
popa
jl
mov
(bad)
jmp
idiv
aaa
and
leave
(bad)
pop
sub
adc
adc
das
ror
mov
ss
push
fmul
jns
fdivr
push
aas
xor
(bad)
fstp
jmp
gs
(bad)
jmp
mov
in
add
adc
mov
cwde
mov
call
and
sub
daa
leave
sahf
and
sub
es
xchg
rol
jle
hlt
sub
dec
dec
xchg
aam
(bad)
inc
cs
or
fcomp
outs
dec
(bad)
(bad)
mov
and
cwde
add
iret
xor
ror
sbb
(bad)
sbb
movs
or
sbb
(bad)
push
or
sbb
pop
adc
cwde
shl
xchg
fwait
mov
inc
push
push
inc
ret
and
cmps
cdq
mov
pusha
sti
lds
push
mov
pop
inc
out
cli
aaa
std
shl
dec
push
enter
and
mov
push
shl
enter
xchg
lods
xor
cmp
xor
(bad)
(bad)
jmp
jns
xor
hlt
mov
or
cmp
test
pop
push
add
add
aaa
(bad)
sbb
add
xchg
mov
nop
push
xchg
daa
loopne
cmp
dec
rcr
push
pop
test
jmp
dec
fwait
inc
mov
frstor
xor
iret
mov
test
popa
pop
outs
xchg
test
dec
push
push
in
push
(bad)
(bad)
mov
ror
ss
iret
stos
cmp
sub
ss
pop
cld
(bad)
call
inc
jge
add
sub
ja
scas
pop
fld
and
(bad)
(bad)
hlt
add
adc
(bad)
xor
ja
scas
(bad)
jmp
leave
pop
ror
push
add
in
call
xchg
and
test
(bad)
(bad)
push
aas
inc
and
imul
mov
ds
and
int
in
mov
dec
imul
add
push
adc
mov
(bad)
(bad)
(bad)
(bad)
aas
push
pop
aas
push
shr
lods
mov
inc
cmc
fistp
les
inc
dec
shl
(bad)
push
push
and
fld
scas
pop
push
outs
add
jb
pop
rol
and
dec
fimul
jbe
(bad)
(bad)
(bad)
dec
jg
or
ins
pop
mov
mov
push
or
inc
adc
pop
sub
gs
(bad)
(bad)
dec
fsub
xchg
mov
push
add
sub
sbb
and
(bad)
call
les
cmovbe
lock
icebp
sub
mov
movs
(bad)
out
mov
jo
pop
jb
xor
jae
add
dec
dec
adc
(bad)
(bad)
cmp
sbb
inc
cs
push
add
xchg
nop
sbb
push
cs
dec
outs
jmp
(bad)
nop
jg
stc
(bad)
call
test
add
jbe
or
(bad)
jno
xor
iret
call
lock
jmp
inc
pop
scas
cld
lahf
and
push
enter
inc
add
daa
femms
mov
std
mov
jmp
or
pop
dec
jns
push
xchg
jno
and
mov
mov
hlt
popa
xor
sbb
mov
(bad)
add
cmc
mov
sub
(bad)
inc
mov
inc
repnz
imul
push
lds
or
(bad)
jns
imul
or
(bad)
(bad)
push
sub
jae
mov
mov
mov
mov
ja
rcr
mov
es
and
fisub
push
enter
xlat
js
dec
lahf
js
xchg
shr
sbb
call
call
mov
jle
push
nop
xchg
and
mov
and
add
(bad)
jmp
in
push
repnz
sub
or
and
fisttp
mov
mov
mov
rcr
pop
and
mov
mov
ss
cld
(bad)
push
dec
and
or
clc
add
rcl
push
push
jmp
sub
sbb
sbb
div
js
(bad)
mov
jno
sub
stc
push
dec
adc
rcl
mov
add
fisttp
add
stos
or
sbb
ficom
mov
push
and
mov
sar
lods
shr
dec
pop
outs
js
xchg
(bad)
dec
jbe
popa
push
or
push
popa
mov
dec
lea
push
ja
ds
cmc
dec
and
sbb
shr
aas
sub
adc
xor
ins
aaa
mov
test
(bad)
dec
dec
inc
or
sub
push
mov
fldcw
push
or
or
xor
mov
int
mov
adc
dec
test
lods
aaa
adc
pusha
jecxz
call
and
jo
nop
add
xor
adc
dec
and
mov
shl
(bad)
call
pusha
push
xor
and
or
imul
push
(bad)
jmp
xchg
xor
dec
adc
mov
je
in
jp
retf
std
push
(bad)
inc
(bad)
outs
in
pop
adc
xlat
cmc
lock
(bad)
(bad)
(bad)
jmp
jb
ret
jge
mov
pop
dec
cmp
or
adc
adc
and
(bad)
(bad)
(bad)
pop
imul
call
mov
xlat
inc
sub
mov
cmp
fwait
sub
jmp
lock
mov
pop
hlt
mov
lea
pushf
adc
mov
fdivr
pop
and
out
movs
inc
test
mov
in
pusha
jecxz
(bad)
jmp
fadd
push
mov
data16
and
(bad)
(bad)
inc
cwde
arpl
mov
or
push
xchg
dec
ficom
jle
dec
out
and
add
pop
xchg
jo
add
add
call
pop
and
sbb
jmp
add
fsub
sub
(bad)
(bad)
cld
push
clc
aam
push
push
aas
cmp
lods
xchg
adc
loop
call
add
and
lds
xchg
pop
or
push
mov
sub
jnp
push
jno
icebp
ja
pop
inc
mov
sub
pop
call
jmp
add
(bad)
dec
(bad)
hlt
and
sub
lea
mov
dec
rol
xor
jb
shl
mov
and
(bad)
(bad)
call
adc
mov
adc
xchg
addr16
or
pop
aam
pop
mov
xchg
jmp
js
mov
push
mov
mov
(bad)
(bad)
jmp
jecxz
les
mov
scas
loop
out
jmp
or
or
add
jmp
clc
add
adc
mov
cwde
fisttp
out
jmp
inc
pop
mov
adc
pop
idiv
sub
int3
push
dec
mov
pop
add
call
mov
xchg
dec
in
out
outs
add
jbe
xor
push
adc
(bad)
(bad)
(bad)
push
inc
or
fsubr
xor
sbb
in
(bad)
or
test
loopne
cld
das
inc
mov
loope
adc
stos
sub
jmp
mov
xlat
pop
(bad)
(bad)
(bad)
jmp
addr16
sbb
mov
aas
loopne
push
dec
or
push
scas
adc
test
dec
cmps
jmp
or
int
mov
mov
aad
call
lods
fwait
nop
pop
jo
push
lds
daa
mov
cmp
dec
scas
fld
aaa
mov
inc
add
clc
test
lea
cli
push
mov
fdiv
outs
cmps
xor
fild
adc
push
or
(bad)
jmp
stos
daa
hlt
xor
sbb
inc
outs
pop
sub
loopne
dec
and
out
and
jmp
jnp
ss
mov
push
mov
je
aad
dec
(bad)
(bad)
(bad)
call
jecxz
dec
and
push
loopne
js
add
cmp
dec
and
xchg
cli
push
ret
(bad)
(bad)
jmp
(bad)
cld
inc
or
aad
pop
lahf
add
(bad)
repz
lsl
push
pop
or
pop
clc
(bad)
lea
and
mov
ins
rol
push
jl
cmp
push
cmp
jmp
xor
xor
jmp
adc
push
nop
mov
and
popa
dec
jb
cs
(bad)
(bad)
out
test
xchg
sbb
emms
add
add
shr
test
pop
ins
(bad)
(bad)
(bad)
inc
push
cmps
iret
xor
or
repnz
out
repnz
cs
gs
out
cmp
pop
push
(bad)
call
lock
sub
lock
in
or
cs
je
ins
add
ja
dec
iret
push
lea
jb
sbb
adc
(bad)
push
or
test
pop
cwde
push
inc
es
adc
jg
call
sahf
shl
xor
inc
jae
fdiv
mov
or
std
aad
gs
mov
mov
add
hlt
imul
(bad)
(bad)
(bad)
call
pop
scas
add
out
xlat
(bad)
mov
dec
mov
sub
and
mov
dec
or
retf
dec
adc
out
(bad)
call
push
nop
hlt
xlat
xor
and
mov
inc
pop
in
push
shl
ss
mov
dec
jge
inc
pop
jne
or
(bad)
call
out
xor
inc
out
push
dec
sub
out
jl
adc
rol
call
js
xchg
and
fwait
movs
js
pop
movs
rol
dec
push
fdivr
(bad)
jmp
add
rol
mov
popa
pop
jp
and
jp
inc
cmp
push
sub
cld
(bad)
(bad)
fsub
imul
mov
in
cmp
(bad)
(bad)
(bad)
(bad)
call
pop
mov
lods
and
outs
and
stc
test
daa
fisttp
xor
nop
daa
and
leave
add
std
das
mov
(bad)
shl
sahf
xor
inc
xchg
add
add
retf
cdq
std
(bad)
(bad)
jmp
ds
lea
pop
jg
xchg
mov
pop
and
das
(bad)
enter
fdivrp
add
rcl
fmul
fsub
in
in
lock
clc
xor
fwait
(bad)
cld
fild
cmp
lods
test
fidivr
xor
cmp
inc
pop
jns
xchg
dec
dec
push
push
pop
pop
pusha
fs
ret
(bad)
dec
xor
dec
add
adc
push
cmp
inc
mov
jno
loope
xchg
jp
(bad)
jg
mov
mov
(bad)
mov
and
mov
stos
aaa
rcl
les
sub
and
je
pop
(bad)
call
xor
nop
aam
sbb
add
pop
(bad)
(bad)
call
loopne
inc
mov
xlat
call
gs
fdiv
hlt
xor
lahf
add
cmp
clc
(bad)
call
sub
sar
mov
cmp
or
or
test
add
cmp
pop
retf
(bad)
sti
neg
and
push
xchg
and
stc
dec
sub
sub
add
in
xor
sbb
ins
push
dec
cmp
inc
mov
dec
add
dec
lahf
mov
movs
dec
push
cmp
retf
jo
add
repz
cld
push
push
jo
push
lahf
jl
je
js
ror
lods
xchg
inc
dec
aaa
in
mov
test
fidivr
and
inc
arpl
adc
jmp
jo
inc
jbe
jecxz
and
inc
outs
out
sbb
add
jb
ja
(bad)
(bad)
(bad)
call
sahf
imul
arpl
xor
in
xor
fs
push
inc
jnp
jo
push
ss
adc
mov
inc
clc
mov
sbb
jae
fild
add
push
push
mov
lods
jbe
inc
pop
xchg
pop
loope
or
jg
push
(bad)
(bad)
dec
stos
addr16
add
repz
push
mov
aas
pop
or
mov
or
add
out
rcl
jae
inc
icebp
cs
or
ins
push
dec
ja
add
(bad)
call
mov
outs
jb
aaa
or
pop
push
mov
sub
mov
aaa
mov
mov
add
aas
sbb
ja
and
pop
adc
inc
(bad)
call
cs
sub
stos
outs
(bad)
push
les
jecxz
movs
push
mov
jecxz
adc
out
sbb
adc
jbe
dec
ds
ret
adc
faddp
lds
push
dec
inc
lahf
fist
mov
(bad)
(bad)
inc
bound
ja
pop
and
mov
loop
mov
inc
push
into
jae
(bad)
fidivr
add
jne
push
call
mov
jnp
imul
jg
add
fcmovnbe
cs
cmps
pop
inc
(bad)
(bad)
(bad)
mov
out
fnsave
and
inc
cmps
mov
xlat
dec
jmp
lods
add
mov
pusha
or
mov
jne
xorps
mov
pop
pop
imul
inc
scas
in
cmp
stos
dec
dec
imul
out
arpl
addr16
repnz
arpl
pop
add
or
out
mov
mov
(bad)
(bad)
call
xchg
bound
ds
adc
movaps
in
nop
push
jmp
or
scas
push
pushf
push
data16
test
ficomp
jg
out
cli
jmp
push
pop
mov
xchg
out
pushw
pop
les
pop
(bad)
shl
cmp
rcl
mov
aas
fbld
inc
shr
ret
pop
pop
cmp
lahf
inc
test
add
pop
icebp
jmp
es
xor
pop
montmul
cmps
add
fcomp
(bad)
and
imul
in
xchg
add
aam
inc
movs
inc
xchg
push
lock
(bad)
inc
pop
jge
push
jmp
adc
xor
sbb
cwde
inc
xchg
inc
(bad)
jmp
xchg
pushf
xor
cdq
pop
xchg
sub
mov
aaa
(bad)
jmp
nop
sbb
pusha
pop
je
push
outs
mov
or
movs
jnp
cmp
ins
xor
(bad)
jmp
addr16
sub
rcpps
sub
jo
cld
(bad)
(bad)
call
ss
dec
and
ins
lds
in
jno
scas
mov
adc
mov
mov
mov
outs
inc
ja
push
test
(bad)
jl
dec
sbb
inc
xor
jno
add
call
ret
rcr
cmp
push
push
or
(bad)
jne
mov
sbb
jb
and
jo
(bad)
(bad)
(bad)
(bad)
cmp
nop
dec
mov
(bad)
out
mov
inc
sub
call
or
push
sbb
ja
iret
add
adc
(bad)
(bad)
jmp
xchg
mov
or
(bad)
ins
(bad)
imul
push
and
or
dec
imul
inc
cs
prefetch
clc
dec
adc
inc
aad
gs
cmps
icebp
inc
shl
loope
cmps
sti
(bad)
(bad)
push
inc
imul
test
or
jns
pusha
xor
dec
les
mov
(bad)
jg
out
cmp
and
in
gs
out
or
add
adc
jnp
sbb
(bad)
mov
inc
fisttp
loopne
(bad)
movs
popa
addr16
jmp
cli
sbb
pop
icebp
fwait
pusha
sbb
jp
imul
mov
adc
push
sbb
lock
aaa
adc
lods
dec
adc
pop
lods
add
(bad)
(bad)
(bad)
jg
push
je
xor
int
scas
fsub
pcmpgtb
fwait
pop
dec
(bad)
mov
pop
enter
cmp
pop
ror
and
jb
(bad)
(bad)
jmp
in
pop
sub
mov
pop
mov
jnp
adc
push
push
pop
cld
pop
or
test
out
sti
fdivr
jmp
fmul
test
in
xor
inc
cmp
neg
sub
sbb
sub
jg
(bad)
xchg
iret
outs
(bad)
mov
dec
push
pop
aaa
outs
aad
jmp
int
cs
and
cmps
shr
cs
cld
mov
ss
or
cmp
inc
shl
inc
jecxz
retf
xor
idiv
dec
js
dec
mov
sub
(bad)
inc
push
cmp
mov
pop
dec
push
daa
dec
add
add
mov
call
inc
push
or
mov
xor
inc
cmp
lods
dec
enter
bound
cmp
push
sub
rcr
dec
imul
sbb
loop
(bad)
mov
or
push
loope
rcl
jb
nop
dec
mov
fcomp
dec
fisttp
pop
push
clc
sub
jl
inc
sbb
pop
popf
dec
add
aaa
jg
push
pop
lods
cld
dec
test
retf
hlt
pop
(bad)
mov
idiv
ja
retf
and
cmps
in
add
fs
jmp
mov
loopne
sbb
pop
xor
add
imul
sbb
pop
outs
inc
dec
and
push
jne
fadd
fwait
shl
mov
out
pop
push
push
(bad)
fcomip
inc
fist
push
or
sub
pop
xchg
xor
packssdw
mov
or
inc
cmp
xchg
bound
(bad)
(bad)
(bad)
mov
lahf
dec
imul
pusha
sub
shl
pop
or
into
arpl
add
dec
or
mov
xor
(bad)
pop
data16
dec
add
dec
xchg
das
cli
jmp
movs
add
mov
jmp
sbb
jecxz
dec
cli
mov
mov
jmp
dec
ins
and
fwait
ror
lock
pop
mov
add
(bad)
jmp
dec
inc
jae
lds
aas
or
scas
pop
les
xchg
and
lods
mov
dec
call
or
popf
add
pop
adc
pop
es
call
add
xchg
pop
xor
mov
(bad)
jb
or
pushf
push
pop
sub
sub
(bad)
inc
add
ins
popaw
and
cmps
retf
outs
gs
dec
fldcw
bound
sbb
(bad)
inc
cmp
inc
fst
or
jmp
lock
(bad)
inc
dec
xchg
jmp
dec
or
or
pop
retf
(bad)
test
push
sub
fbstp
fild
or
add
pop
pop
les
or
call
dec
add
fstp
pop
push
push
aam
jle
mov
nop
call
ds
dec
daa
add
and
inc
sbb
mov
sbb
fcomp
clc
(bad)
(bad)
mov
or
dec
xor
sub
dec
outs
push
mov
dec
ror
fiadd
add
leave
repz
xchg
jb
adc
pop
(bad)
(bad)
(bad)
(bad)
fisttp
or
shl
mov
pop
or
xchg
cmp
sbb
jmp
mov
rcr
mov
dec
mov
dec
movs
mov
lock
(bad)
(bad)
(bad)
jmp
inc
gs
ffree
mov
push
or
je
call
loop
ins
adc
call
(bad)
call
sbb
adc
adc
push
xchg
rcl
js
adc
icebp
jmp
test
push
or
mov
fs
(bad)
call
mov
loopne
loope
jne
adc
out
sub
xchg
inc
test
mov
test
inc
inc
push
inc
sbb
dec
dec
in
mov
clc
(bad)
(bad)
(bad)
jmp
popf
test
test
adc
push
nop
sub
or
(bad)
jp
retf
push
xchg
(bad)
(bad)
(bad)
jmp
and
aaa
shr
sbb
rol
sbb
and
add
adc
pop
xchg
cmp
cmp
and
xchg
and
and
sub
sub
cs
xor
retf
test
adc
sub
push
sub
leave
push
cld
inc
ror
jmp
adc
push
hlt
inc
das
ss
add
pop
push
je
ds
(bad)
jmp
cmp
(bad)
dec
push
out
or
pop
in
add
dec
lds
mov
or
inc
repnz
retf
push
sbb
adc
push
je
das
mov
ror
pop
rcl
push
fldcw
pop
cmc
in
mov
sub
(bad)
(bad)
dec
or
or
jecxz
les
add
rcr
in
push
xchg
mov
pop
cmp
ds
clc
(bad)
fcom
fldcw
adc
xor
aam
xor
pop
cdq
pop
pop
pop
inc
loopne
mov
jecxz
fistp
push
mov
loop
ret
loopne
dec
loopne
dec
cld
test
or
dec
dec
mov
inc
pop
fld
ret
mov
sbb
pop
lock
mov
outs
ror
clc
call
add
sbb
(bad)
(bad)
(bad)
mov
jb
jns
jno
xor
lock
xor
pop
arpl
xchg
mov
sar
sbb
inc
into
cmp
retf
ror
push
movs
sbb
cmp
push
adc
dec
jg
(bad)
(bad)
(bad)
jmp
and
mov
inc
sar
inc
stos
call
inc
fdiv
mov
inc
jmp
mov
ret
retf
inc
inc
cs
jmp
dec
js
test
push
(bad)
call
jne
ins
push
and
xchg
add
shl
mov
mov
rcr
or
test
and
push
xor
aaa
lods
nop
rol
sti
or
add
inc
aas
aam
out
cli
jg
je
xchg
shr
add
mov
pusha
cmps
xchg
dec
test
addr16
int3
jge
clc
mov
dec
in
sbb
shl
xor
ss
iret
mov
cmc
arpl
call
movs
inc
imul
and
(bad)
aam
jl
xor
dec
inc
pushf
dec
ror
(bad)
(bad)
fcom
fsub
shl
pop
loopne
adc
adc
lock
sub
out
mov
mov
mov
cli
ins
mov
(bad)
rcl
adc
jno
(bad)
(bad)
jmp
jb
dec
mov
xchg
fs
(bad)
pop
xchg
scas
add
popf
rol
outs
lock
(bad)
(bad)
call
test
daa
pop
imul
dec
mov
mov
pop
enter
fild
lods
aam
aad
les
ja
mov
sbb
mov
pop
(bad)
(bad)
fild
lock
out
add
pop
loopne
mov
aad
sub
inc
in
xor
or
scas
mov
retf
(bad)
(bad)
(bad)
inc
adc
or
pop
aam
add
hlt
shl
jmp
imul
push
adc
(bad)
jmp
xchg
iret
arpl
mov
mov
pop
ins
mov
hlt
cmp
adc
mov
mov
jnp
movs
mov
les
dec
jo
adc
lock
add
(bad)
jp
mov
sbb
(bad)
(bad)
(bad)
mov
cmp
xor
sbb
pop
rcl
scas
lea
test
xchg
xlat
mov
push
test
xlat
push
cmp
fisubr
fistp
or
dec
test
xchg
cld
sahf
xchg
cmc
shl
add
ja
(bad)
call
xchg
mov
in
pop
fcom
xor
sbb
lahf
mov
call
movs
mov
sub
imul
push
(bad)
jge
sub
unpcklps
mov
or
aaa
jl
or
adc
jmp
jg
into
and
loope
push
jmp
mov
mov
sbb
adc
sbb
ret
push
out
push
arpl
aaa
dec
push
mov
call
out
jg
mov
adc
jecxz
pop
mov
add
dec
das
jecxz
hlt
fist
loopne
pop
fstp
fadd
imul
jne
mov
push
cld
cmp
add
cmps
out
inc
pop
pop
loop
imul
ss
jg
inc
push
pop
xor
ja
pop
push
int3
push
add
aad
ret
sbb
and
call
xor
push
cmp
test
mov
lods
mov
cmps
or
push
push
sbb
rcl
enter
pop
add
mov
push
dec
jmp
(bad)
inc
jmp
jne
dec
shr
call
movs
cmp
mov
movs
cmp
(bad)
call
xlat
sbb
pop
in
pop
push
add
push
pop
scas
inc
std
sub
mov
mov
or
movs
icebp
(bad)
jg
outs
push
pop
cli
pop
lock
gs
(bad)
mov
je
inc
jmp
fisubr
mov
test
and
mov
mov
jno
inc
fnstcw
(bad)
(bad)
push
stos
rcl
sbb
or
pusha
sub
adc
pop
adc
adc
and
das
fadd
call
movs
icebp
dec
jmp
out
mov
pusha
clc
outs
clc
(bad)
js
(bad)
jmp
mov
sbb
fsub
popa
push
or
pop
and
shl
add
pop
popa
jo
mov
dec
fcomip
nop
mov
mov
ret
mov
call
or
jecxz
enter
(bad)
hlt
sub
push
pop
ret
(bad)
jmp
(bad)
fsub
(bad)
int3
ret
jb
es
test
dec
and
jb
add
mov
and
(bad)
push
in
ss
cmp
fimul
mov
(bad)
inc
pop
adc
(bad)
and
sub
outs
cmp
mov
imul
add
daa
mov
rcl
fcomip
(bad)
(bad)
push
arpl
and
lea
sahf
sbb
jg
xchg
mov
sbb
xchg
xchg
(bad)
sub
(bad)
(bad)
clc
jo
enter
mov
fs
add
ret
mov
outs
clc
(bad)
mov
call
lds
mov
out
mov
(bad)
jmp
inc
mov
ss
call
xor
aas
mov
add
xchg
dec
jecxz
or
not
scas
and
mov
(bad)
(bad)
(bad)
call
cs
jl
mov
mov
pusha
inc
dec
pop
jnp
push
(bad)
fimul
adc
mov
inc
notrack
loopne
aas
mov
shl
cwde
in
je
cld
ds
push
jmp
mov
mov
call
outs
inc
dec
adc
adc
push
adc
sbb
sub
mov
and
or
das
adc
call
fsub
test
or
and
mov
(bad)
(bad)
(bad)
call
mov
imul
inc
and
and
lahf
shl
retf
lahf
dec
sbb
lock
pop
jbe
shl
xor
bound
fwait
sar
inc
dec
or
inc
ins
xchg
xchg
and
adc
dec
shl
cmp
(bad)
(bad)
jmp
retf
data16
mov
pushf
dec
in
pushf
mov
inc
fidivr
add
pop
test
push
push
mov
cmps
sub
xor
push
adc
adc
pop
sub
jmp
adc
xchg
repnz
shr
fdivr
(bad)
fcomip
movs
mov
movs
push
loope
mov
push
movs
xchg
jp
movs
mov
lahf
in
hlt
dec
sub
jge
sub
imul
or
jb
(bad)
dec
sub
sbb
xlat
cld
dec
inc
inc
call
xchg
(bad)
(bad)
push
iret
add
pop
test
cmp
std
jne
pop
(bad)
(bad)
jmp
pop
repz
add
xor
mov
or
ror
or
xchg
call
fwait
movs
icebp
adc
xchg
in
mov
dec
sbb
ds
(bad)
(bad)
(bad)
dec
fcom
test
mov
out
es
out
scas
mov
adc
or
or
pop
(bad)
(bad)
(bad)
(bad)
ffreep
in
das
inc
push
lods
xchg
cmp
in
push
dec
inc
(bad)
imul
mov
mov
adc
mov
std
push
enter
(bad)
fisubr
(bad)
(bad)
(bad)
jmp
mov
pop
mov
push
push
push
out
stos
push
popa
push
les
pop
sbb
adc
fwait
(bad)
(bad)
(bad)
jge
or
xor
fdivr
fst
pusha
mov
jo
mov
jo
ja
shr
aad
mov
jo
out
pop
(bad)
(bad)
(bad)
call
and
mov
lods
ss
sub
stos
xchg
jbe
jne
sahf
sub
loopne
add
adc
mov
push
push
add
xor
je
adc
out
call
push
jns
sub
je
mov
int
(bad)
(bad)
call
adc
mov
push
test
pop
ss
cld
lods
addr16
mov
fsubr
pop
std
outs
adc
push
repnz
ret
push
sub
push
adc
inc
pop
adc
clc
xor
dec
inc
data16
add
sub
mov
sub
and
jg
es
imul
mov
les
aaa
jbe
fwait
(bad)
call
(bad)
adc
xchg
add
imul
and
pusha
enter
and
or
mov
xor
outs
fwait
div
repz
push
push
push
or
push
pop
jns
pop
pop
pop
pop
pop
pop
inc
dec
adc
mov
xchg
ja
dec
dec
dec
dec
dec
dec
dec
xor
push
pop
jns
in
(bad)
cmp
cmp
ds
and
and
fstp
test
pop
jns
sub
sub
cs
adc
adc
adc
push
pop
dec
jns
xchg
sbb
sbb
sbb
push
pop
add
lods
dec
(bad)
push
add
(bad)
(bad)
dec
das
cs
mov
das
or
push
xor
inc
aas
outs
call
mov
jmp
int3
icebp
call
mov
fcomp
movs
dec
rcr
fcomp
jmp
xor
loopne
adc
add
push
xchg
add
push
pop
lods
inc
xor
mov
jo
push
imul
cs
mov
adc
leave
jo
nop
(bad)
call
sbb
test
push
xor
test
call
cmc
(bad)
(bad)
inc
adc
pop
mov
mov
aaa
jae
shr
mov
movs
sbb
cmp
sub
dec
pusha
(bad)
mov
test
gs
add
fstp
xchg
out
test
or
cmp
or
sub
adc
mov
mov
sub
je
enter
shl
ins
jb
push
ss
mov
mov
or
pop
xor
dec
clc
test
jb
sbb
jb
push
adc
and
(bad)
(bad)
jmp
arpl
add
or
adc
fst
mov
jne
(bad)
in
(bad)
(bad)
call
pop
inc
add
pop
and
mov
pop
add
xchg
push
ret
mov
(bad)
jmp
je
and
leave
and
test
out
lock
daa
test
and
mov
sar
jmp
sub
daa
call
jns
and
ins
pop
add
call
cmp
(bad)
(bad)
clc
sbb
leave
outs
sub
les
seta
(bad)
dec
mov
cs
jne
cmp
mov
cmovo
push
addr16
(bad)
fcom
pop
fsubr
pextrw
xor
xchg
loop
and
add
cmp
sar
cmp
push
jge
(bad)
movs
stos
xchg
int
sub
push
xchg
sar
inc
push
stc
jl
inc
cmps
lock
jg
fwait
ss
ins
movs
out
jle
lea
ins
mov
or
jmp
(bad)
inc
stos
movs
test
cmp
(bad)
ror
add
inc
(bad)
mov
add
sbb
outs
in
icebp
icebp
inc
xor
(bad)
(bad)
(bad)
push
pop
and
test
pusha
adc
mov
pop
inc
imul
lods
imul
(bad)
(bad)
cmp
xor
xchg
cwde
add
xchg
mov
(bad)
call
inc
jae
pop
test
add
push
pop
fld
sbb
aad
int3
add
(bad)
(bad)
dec
or
mov
adc
adc
ds
push
sbb
cdq
icebp
sub
fidiv
push
add
push
push
(bad)
(bad)
(bad)
fild
lds
jb
xchg
add
adc
dec
jo
or
jae
add
(bad)
(bad)
call
pop
icebp
and
into
pop
loope
cmp
shl
xchg
and
jae
jp
ror
inc
(bad)
(bad)
(bad)
inc
lahf
or
inc
xchg
sub
add
mov
and
add
lahf
(bad)
(bad)
(bad)
call
add
xchg
cmp
xchg
fnsave
sti
push
add
idiv
(bad)
(bad)
(bad)
inc
sbb
fwait
mov
ins
jg
ror
js
fimul
bound
cmp
in
pushf
adc
jb
int3
push
mov
out
shl
pushf
(bad)
(bad)
(bad)
in
test
add
cmps
sbb
js
out
add
imul
aam
xor
cmp
bound
push
push
(bad)
jmp
sbb
es
cmp
mov
jecxz
push
dec
add
ss
ret
add
and
and
fsubr
or
ss
xor
(bad)
ret
or
fistp
dec
sbb
jo
call
out
mov
cwde
mov
(bad)
(bad)
(bad)
call
pop
push
xor
test
jne
push
cs
push
push
xchg
dec
pop
sbb
jmp
sar
je
std
cdq
pop
pop
and
cdq
push
mov
dec
sbb
xchg
mov
ror
(bad)
jg
sub
or
gs
add
inc
cmp
scas
inc
mov
mov
xchg
xchg
mov
jno
xchg
dec
pop
pop
or
mov
or
push
add
(bad)
(bad)
mov
movs
add
mov
shr
addr16
and
idiv
(bad)
xchg
inc
stos
nop
or
sahf
add
js
sub
in
stos
aas
loopne
sbb
cmps
mov
mov
or
test
dec
test
push
(bad)
(bad)
push
adc
test
jns
imul
nop
dec
pop
ja
push
jmp
pop
xchg
xchg
frstor
std
(bad)
jg
dec
lock
add
stos
int3
mov
push
popf
repnz
mov
imul
or
dec
add
and
stos
sub
(bad)
push
sbb
cmp
mov
ret
fisttp
mov
(bad)
xchg
add
inc
lahf
clc
(bad)
(bad)
jg
or
dec
mov
shr
ins
inc
sub
adc
push
pop
adc
push
lods
aaa
rcr
(bad)
(bad)
inc
nop
lahf
lock
fs
dec
lea
sub
sbb
call
pop
mov
outs
mov
or
repz
push
adc
adc
jmp
(bad)
call
ret
sbb
or
in
daa
push
and
push
jb
ds
das
clc
inc
jbe
call
or
clc
add
mov
and
(bad)
jg
or
and
test
arpl
pop
icebp
(bad)
jmp
or
add
addr16
inc
jmp
fs
jbe
(bad)
dec
adc
sar
push
pop
adc
call
in
(bad)
xchg
call
aaa
adc
(bad)
shr
pop
cmp
fcomip
call
xor
inc
out
inc
jb
pop
pop
sub
dec
mov
inc
loopne
xchg
inc
jo
dec
bound
pop
movs
ja
mov
(bad)
push
xor
push
add
rcr
add
xchg
sbb
add
outs
inc
(bad)
(bad)
(bad)
jmp
call
and
scas
sub
call
ja
mov
mov
cmps
lea
out
push
sbb
jb
mov
js
adc
shr
push
or
fisttp
sub
adc
call
cld
call
adc
cmc
and
test
sbb
mov
dec
sub
loopne
cmp
dec
add
out
mov
movs
jne
(bad)
or
cmc
(bad)
(bad)
inc
lock
xchg
cmp
dec
in
cli
add
jl
push
xchg
popf
fs
popa
add
jne
sbb
stos
mov
sbb
ins
mov
nop
cmp
sbb
cmp
(bad)
jg
ins
hlt
addr16
xchg
jo
inc
(bad)
or
inc
push
icebp
(bad)
dec
cdq
add
xchg
in
push
sar
or
jecxz
xor
cmp
popf
add
rcr
(bad)
dec
rcr
pop
or
xchg
xor
sbb
(bad)
and
lods
or
cwde
addr16
push
jb
pop
dec
or
xor
(bad)
(bad)
call
cmp
add
sbb
add
pop
sbb
and
mov
or
clc
inc
movs
lds
push
sub
cmp
and
lods
arpl
mov
(bad)
call
or
adc
push
or
or
(bad)
dec
xor
inc
imul
inc
cmp
pusha
push
nop
popf
jmp
in
xor
or
std
push
repnz
lds
add
retf
mov
inc
(bad)
(bad)
(bad)
jg
mov
xchg
push
mov
inc
xchg
fcmovb
(bad)
and
stos
pop
sub
std
fld
jp
(bad)
(bad)
call
xor
sub
add
cmp
(bad)
(bad)
fst
dec
test
adc
test
push
add
aas
mov
loop
enter
inc
in
data16
push
je
adc
mov
popf
stos
add
sbb
push
cmc
push
les
jmp
push
jp
test
loopne
fldcw
call
ret
push
retf
cld
add
nop
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
jmp
cmp
das
push
sub
mov
pop
(bad)
call
ret
popa
push
popa
dec
mov
mov
push
push
jbe
jnp
or
sbb
mov
call
(bad)
loopne
pop
adc
cmp
jp
pop
pop
sub
(bad)
add
push
add
add
or
jmp
neg
cld
out
jl
ds
mov
push
push
ins
test
fdivr
jp
sar
mov
jg
dec
push
nop
mov
push
cmp
loop
sar
(bad)
mov
ss
mov
inc
xchg
(bad)
mov
adc
sbb
cmps
movs
adc
cmc
mov
inc
inc
call
pop
cli
ret
je
xor
add
or
(bad)
(bad)
fistp
fst
or
mov
outs
mov
inc
push
sbb
push
add
adc
loope
das
sar
call
inc
ss
jbe
sub
add
enter
push
inc
inc
mov
push
and
inc
push
push
ins
nop
dec
rol
adc
dec
sbb
addr16
scas
inc
fiadd
mov
in
arpl
test
sub
ds
call
jmp
adc
nop
mov
dec
int3
or
inc
out
lock
cmp
sbb
jg
dec
cdq
mov
pop
or
popa
xor
sub
jns
jp
cmp
(bad)
(bad)
fcmovne
ret
(bad)
adc
pop
adc
cmp
int3
out
jecxz
push
mov
ja
push
in
(bad)
call
add
pop
jo
adc
ret
sub
cli
adc
and
(bad)
call
xor
push
sbb
cmp
mov
nop
sub
pop
lods
in
cmp
add
push
mov
pop
test
jno
xor
adc
or
dec
or
dec
scas
pop
(bad)
call
rcr
mov
loop
ret
add
cmp
shl
mov
push
scas
cli
or
or
fimul
push
das
or
cmp
ucomiss
cli
mov
inc
sub
sbb
ss
setno
cmp
iret
cli
pop
xchg
int3
(bad)
(bad)
(bad)
call
cmp
test
mov
push
sub
jmp
inc
jno
in
mov
adc
xchg
xor
(bad)
outs
clc
(bad)
fidivr
xchg
or
fcmovnb
or
mov
xor
jp
test
(bad)
out
xor
punpckhqdq
sbb
xchg
push
in
xchg
jmp
dec
call
dec
pop
in
aaa
cmp
xchg
cmp
mov
out
ins
(bad)
gs
enter
in
psllw
(bad)
(bad)
dec
or
adc
(bad)
fcomip
aaa
adc
and
and
test
(bad)
das
pop
test
and
push
ja
mov
popa
and
cmp
mov
imul
js
ins
adc
pop
imul
shl
(bad)
(bad)
(bad)
push
fisubr
fbstp
or
pushf
hlt
mov
or
mov
loope
cmp
ret
mov
dec
sbb
xor
dec
retf
in
hlt
dec
das
in
or
xor
sub
pushf
stos
xor
sub
(bad)
(bad)
call
or
pop
loope
shl
xchg
sbb
inc
es
fnstsw
xchg
mov
sbb
pop
dec
push
or
(bad)
(bad)
(bad)
out
mov
mov
div
int
in
je
(bad)
xlat
add
or
in
arpl
push
gs
push
lods
push
outs
jmp
(bad)
(bad)
call
ror
imul
cmp
imul
cld
cdq
rol
sbb
xor
popa
stos
add
inc
cwde
and
(bad)
aad
(bad)
(bad)
jmp
es
rcl
arpl
hlt
jae
sar
aas
(bad)
fcomp
add
ret
mov
jne
and
(bad)
dec
ss
pop
or
leave
fimul
and
and
adc
xor
dec
xchg
cmp
(bad)
push
retf
test
daa
and
test
mov
add
loope
jo
and
push
std
push
fsub
call
xchg
push
sbb
arpl
sub
rcl
jge
lock
fild
sub
in
xchg
cmps
(bad)
jbe
push
sbb
mov
call
or
(bad)
leave
cmp
xchg
scas
iret
sub
clc
pusha
cwde
cmp
(bad)
(bad)
inc
jns
or
push
lea
addr16
cli
add
ret
jl
mov
(bad)
(bad)
dec
sub
sbb
mov
dec
jns
jecxz
cmps
ficomp
fnstcw
adc
jae
(bad)
(bad)
jg
or
xchg
pop
mov
nop
inc
and
cmp
sbb
sub
shr
(bad)
cdq
dec
or
add
aaa
pop
and
repnz
(bad)
in
jg
cdq
ret
mov
xor
out
daa
sbb
xor
frstor
cmps
sub
mov
sbb
adc
cmps
clts
push
icebp
or
sti
icebp
call
sub
jmp
inc
rcl
sbb
xchg
xlat
sbb
jne
inc
mov
cmp
push
lock
sar
fyl2x
(bad)
(bad)
mov
mov
mov
xor
pop
mov
push
das
dec
fdiv
cmp
pop
mov
pop
movs
pop
pop
dec
mov
mov
or
out
xor
(bad)
(bad)
dec
and
popf
pop
sub
lods
fcomp
in
xchg
addr16
pop
aam
mov
mov
addr16
jg
push
ja
and
ror
jge
jg
or
jg
mov
adc
mov
movs
lea
dec
cmp
(bad)
(bad)
mov
inc
dec
pop
add
out
rcl
lods
popf
xchg
lock
dec
pop
mov
call
jge
mov
mov
pop
xchg
or
xchg
jae
loopne
ss
push
sub
call
xchg
(bad)
adc
pop
ins
adc
call
scas
pop
lock
add
dec
imul
rcl
es
xchg
xor
imul
clc
(bad)
(bad)
jle
lahf
popf
push
lock
es
dec
or
imul
mov
pushf
ja
mov
subps
xor
dec
pusha
jns
mov
jbe
sub
sub
fist
sub
out
cli
inc
(bad)
sbb
test
jb
xchg
xor
ss
(bad)
(bad)
(bad)
mov
pop
push
mov
mov
inc
dec
adc
cmp
adc
test
mov
(bad)
(bad)
push
fdivr
in
aaa
mov
pop
pop
popf
cmp
(bad)
jmp
xchg
sahf
neg
push
cmp
frstor
fs
cmp
pusha
add
clc
jmp
clc
jb
cdq
addr16
xchg
ret
(bad)
call
ror
jecxz
sub
push
dec
mov
cdq
int3
enter
sub
(bad)
mov
adc
mov
mov
xchg
(bad)
pop
mov
mov
(bad)
sti
push
push
pop
push
loopne
out
adc
popa
mov
mov
mov
(bad)
(bad)
(bad)
call
aaa
adc
adc
mov
bswap
jne
adc
les
cld
jmp
add
xor
push
push
push
dec
(bad)
nop
aaa
mov
nop
pcmpgtw
std
jg
add
daa
dec
sbb
out
jne
test
inc
mov
leave
sub
and
sar
(bad)
jmp
push
push
inc
push
rol
sbb
sbb
(bad)
(bad)
mov
mov
pop
nop
xor
or
rcr
add
stos
add
(bad)
(bad)
(bad)
inc
mov
pop
test
cmps
je
and
movs
mov
pop
adc
or
loopne
add
push
adc
shl
outs
xchg
(bad)
fsub
repz
repnz
sbb
or
mov
call
xchg
rol
(bad)
sub
adc
lds
xor
(bad)
dec
shl
pusha
retf
je
das
add
add
or
cld
out
cli
dec
push
adc
or
add
test
lahf
das
mov
and
pop
movs
push
movlps
push
lahf
and
jmp
mov
mov
adc
shl
in
push
sbb
bts
fcmovnb
out
loopne
iret
mov
adc
mov
and
les
movs
pusha
add
jae
hlt
(bad)
out
in
push
mov
fild
pop
pop
jo
(bad)
clc
sar
push
sar
add
ret
sbb
or
push
add
inc
sahf
add
pushfw
(bad)
or
sbb
std
ret
sbb
mov
inc
pop
push
sub
movs
inc
sar
(bad)
call
mov
inc
bound
loopne
inc
pop
imul
cwde
loop
call
jo
inc
or
mov
mov
xor
sbb
imul
mov
gs
and
cmp
pop
cmc
jmp
mov
cs
adc
xor
outs
xor
aas
mov
jnp
iret
cli
(bad)
(bad)
call
loopne
out
pop
adc
test
push
ja
and
xchg
popa
jl
inc
xlat
mov
(bad)
out
test
dec
rcl
xchg
push
test
or
inc
push
push
js
add
(bad)
(bad)
jmp
sub
dec
xor
imul
inc
bound
add
dec
mov
pop
shl
jp
(bad)
clc
(bad)
dec
sbb
jbe
cdq
or
inc
repnz
pop
inc
outs
(bad)
(bad)
inc
es
pop
aas
inc
or
add
add
push
je
add
nop
push
fild
cmp
and
int
(bad)
(bad)
mov
and
dec
scas
sbb
ret
(bad)
or
outs
mov
adc
cmps
sbb
das
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
je
cld
ret
imul
pop
shr
and
test
inc
int
(bad)
(bad)
push
out
je
adc
mov
pop
sub
add
and
push
and
outs
iret
cmp
test
push
and
pop
js
mov
inc
add
xchg
dec
add
stc
(bad)
(bad)
(bad)
jmp
and
or
fistp
push
and
test
cmp
leave
or
ja
loop
push
pop
cmps
xchg
popa
nop
arpl
outs
mov
(bad)
xlat
pop
add
jo
and
loop
(bad)
(bad)
(bad)
jmp
pop
cs
or
loopne
cmp
adc
add
inc
fs
cdq
fwait
sbb
pop
(bad)
mov
rol
inc
adc
add
(bad)
push
xchg
add
and
fwait
push
rol
jbe
xchg
(bad)
(bad)
mov
push
popa
sub
inc
push
mov
mov
add
push
jo
dec
and
test
sbb
adc
(bad)
(bad)
dec
inc
mov
push
pop
(bad)
cmp
pop
inc
iret
or
jns
test
scas
stos
lea
(bad)
fcomip
call
pop
stos
mov
scas
aas
cmps
in
add
shl
ins
cdq
adc
pop
pop
(bad)
(bad)
(bad)
dec
jo
jo
or
push
mov
scas
pop
cmp
push
adc
in
or
mov
(bad)
(bad)
(bad)
push
das
in
xchg
push
iret
dec
inc
loope
push
nop
lods
push
jmp
cmp
loope
dec
aas
cli
in
push
cdq
jmp
mov
(bad)
(bad)
(bad)
(bad)
jg
xor
stos
mov
in
mov
mov
inc
inc
mov
mov
and
sub
jmp
imul
push
cwde
repz
out
jl
sahf
je
pop
stc
out
hlt
add
pop
je
call
add
sbb
enter
mov
(bad)
(bad)
push
es
popa
or
or
ins
adc
repz
call
sbb
(bad)
(bad)
(bad)
jmp
mov
inc
ja
loopne
lods
sub
scas
push
adc
dec
iret
lods
cmp
lahf
lods
jno
xchg
js
out
pop
adc
add
loopne
fwait
lahf
mov
pop
enter
(bad)
jmp
adc
add
sbb
push
test
mov
sbb
aad
or
push
sbb
lock
out
cs
repnz
adc
push
arpl
add
mov
mov
add
xor
jmp
jmp
sbb
add
add
and
add
int
push
mov
jns
ds
add
fsub
and
pop
scas
ror
(bad)
(bad)
(bad)
call
mov
adc
or
daa
mov
pop
scas
clc
push
sbb
outs
cmovl
pop
jl
adc
push
sbb
mov
jmp
(bad)
scas
hlt
adc
mov
icebp
movs
(bad)
out
cli
jg
lds
sub
sbb
sub
daa
xchg
pop
cmp
repnz
sbb
xchg
loope
(bad)
dec
pop
add
sti
scas
repz
adc
js
xor
add
mov
adc
add
addr16
mov
mul
mov
clc
pusha
rcl
sar
xchg
mov
sbb
(bad)
call
push
mov
mov
pop
ror
inc
outs
mov
(bad)
call
inc
mov
enter
dec
adc
add
(bad)
(bad)
(bad)
jg
retf
push
scas
or
(bad)
jl
dec
pop
or
or
(bad)
jnp
sbb
std
mov
push
or
sar
(bad)
mov
add
cmps
jg
dec
mov
push
es
xor
fcomp
sub
adc
push
rcl
rcl
or
push
or
stc
mov
dec
or
jnp
or
fisubr
xor
fsubr
rcr
cmp
icebp
or
push
fcom
adc
sbb
imul
xchg
sbb
cmps
jno
cmp
cwde
jae
sbb
or
add
test
and
cmps
loope
jmp
mov
or
rcl
call
mov
sti
add
jg
(bad)
(bad)
dec
add
adc
or
push
push
or
add
imul
shl
in
das
mov
fisttp
es
mov
adc
stc
xor
mov
or
scas
xchg
adc
out
shl
push
in
aas
pop
add
sbb
data16
dec
lock
sbb
test
pop
ror
push
sbb
imul
jbe
scas
clc
(bad)
(bad)
mov
retf
out
mov
into
or
dec
movs
stc
xchg
mov
ss
adc
inc
stos
or
sbb
idiv
push
pop
adc
stc
adc
pop
cmc
dec
mov
jl
movs
push
pop
into
sbb
(bad)
xchg
push
and
xor
inc
mov
cmp
cli
dec
scas
jg
in
sub
rcr
mov
push
pop
movs
jge
int3
and
(bad)
call
xor
(bad)
mov
fmul
and
fisubr
pop
(bad)
sub
and
and
mov
jb
xchg
mov
(bad)
(bad)
cmp
sti
add
leave
sbb
xor
jns
into
sbb
adc
xor
cmp
outs
(bad)
stos
jle
fcom
es
push
jmp
or
xor
sbb
inc
ret
adc
push
sbb
sbb
cmp
(bad)
(bad)
(bad)
push
retf
test
pop
es
mov
mov
movs
add
jge
jo
pop
fld
pop
inc
add
(bad)
fild
pop
add
sbb
dec
mov
sbb
(bad)
(bad)
(bad)
call
xchg
or
xchg
or
nop
inc
mov
fst
cmp
test
inc
push
mov
(bad)
inc
jne
movs
pop
jo
add
cmps
retf
push
inc
xor
xor
mov
(bad)
jmp
pop
cmp
add
test
dec
pop
sub
and
mov
ins
push
add
or
in
or
mov
cli
(bad)
(bad)
inc
or
shl
or
adc
cmp
push
cli
rol
loop
mov
sbb
push
in
gs
(bad)
sbb
ficomp
jle
mov
mov
pop
test
adc
or
fdiv
jns
nop
or
inc
sub
sbb
jp
leave
scas
push
enter
jmp
cld
or
out
(bad)
(bad)
jmp
sub
ja
inc
mov
adc
and
test
rol
mov
adc
ins
jno
or
mov
(bad)
fwait
jb
xchg
sbb
pop
adc
call
push
dec
pop
loope
and
xor
in
loopne
pop
popf
inc
pop
jg
adc
das
xchg
push
jg
(bad)
inc
test
pop
jbe
shl
add
sbb
cmp
add
(bad)
(bad)
(bad)
(bad)
jnp
inc
sbb
push
nop
push
inc
scas
rol
test
mov
and
dec
(bad)
mov
add
mov
xor
or
(bad)
(bad)
mov
adc
xchg
jno
fldcw
mov
or
add
xor
imul
xchg
lea
pop
mov
leave
sbb
add
ins
shl
sub
push
add
sbb
cmp
mov
add
mov
repnz
popw
push
jno
fidivr
push
xor
mov
or
sub
ins
and
aaa
push
or
xchg
inc
and
adc
call
inc
pop
in
inc
pop
lea
dec
add
mov
inc
mov
(bad)
mov
call
or
stos
and
push
adc
mov
mov
(bad)
(bad)
dec
push
or
imul
(bad)
lods
push
shr
ret
vmwrite
cs
aam
(bad)
(bad)
mov
cmp
add
cwde
push
sub
mov
iret
dec
cwde
iret
push
cs
mov
ins
sahf
push
jmp
test
and
iret
(bad)
clc
es
jl
mov
adc
push
sub
fwait
neg
repz
adc
adc
xchg
mov
(bad)
(bad)
(bad)
dec
and
imul
mov
cmps
add
adc
inc
fwait
mov
push
(bad)
mov
xchg
mov
sbb
pop
and
(bad)
(bad)
dec
mov
loope
jne
(bad)
push
pushf
mov
cmp
ret
int
hlt
dec
inc
sub
(bad)
(bad)
jmp
ret
ja
ret
fisttp
bound
ins
or
arpl
mov
push
adc
push
std
and
call
daa
adc
add
ins
mov
inc
(bad)
sub
pop
jbe
int
inc
dec
data16
sbb
dec
sbb
push
sbb
sbb
jmp
scas
cld
sbb
pop
js
push
and
cmp
and
and
dec
lahf
xchg
push
adc
pop
inc
sbb
cmp
rcl
icebp
out
cli
dec
adc
push
inc
push
stos
shr
push
sub
push
outs
fdiv
fistp
and
aad
mov
sbb
jp
retf
add
outs
(bad)
push
es
or
mov
rol
jb
std
mov
scas
pusha
std
xchg
add
(bad)
(bad)
jmp
xor
test
dec
push
std
jle
inc
sub
push
cmp
and
ss
add
xchg
sbb
(bad)
call
xchg
jl
push
or
rcl
inc
xchg
das
push
sub
xchg
(bad)
jmp
push
mov
aam
cmp
adc
sub
ja
test
push
cdq
mov
je
test
jmp
or
dec
test
test
test
std
(bad)
push
sub
xor
pop
adc
cmp
mov
inc
mov
adc
sbb
or
ror
jb
inc
outs
xor
sbb
push
popf
dec
sbb
sub
push
adc
in
aad
and
xor
shr
(bad)
(bad)
jmp
push
push
mov
pop
sbb
sbb
lahf
push
xchg
ror
fdivr
(bad)
(bad)
dec
pop
(bad)
call
add
jp
mov
loope
mov
sub
jge
popa
sub
(bad)
inc
ret
or
pop
fld
inc
pop
retf
jno
retf
xor
jmp
mov
cwde
mov
sbb
(bad)
push
cwde
add
dec
and
out
push
out
xchg
or
jb
add
call
adc
and
or
(bad)
shr
adc
scas
mov
mov
or
js
aaa
repnz
or
adc
inc
jl
(bad)
(bad)
(bad)
jmp
dec
push
fild
adc
ja
rcl
inc
pop
push
or
pop
fs
fprem
jmp
ror
(bad)
mov
push
pop
(bad)
imul
xchg
std
and
jmp
mov
push
sub
inc
rcl
pop
xchg
ret
xchg
sbb
in
adc
(bad)
adc
xchg
cmp
in
std
and
cmps
add
jmp
int
out
lock
add
push
fdivp
shr
mov
mov
adc
push
pushf
push
sbb
js
sahf
push
push
into
or
aad
sub
or
mov
inc
call
hlt
(bad)
(bad)
jg
inc
inc
shl
push
mov
fstp
out
sbb
and
das
add
fsubp
mov
cs
cwde
push
sub
mov
cmp
xor
retf
loopne
pop
adc
and
and
clc
pop
fadd
jmp
mov
add
clc
or
jo
dec
pop
and
add
ins
or
xor
imul
in
cli
into
out
iret
or
sbb
sbb
(bad)
mov
inc
mov
xor
pushf
sar
loop
std
dec
inc
jl
jg
dec
aas
cmp
lock
jge
mov
cmp
dec
sbb
add
push
add
add
test
cmp
sbb
sub
lea
jmp
add
xor
je
ret
jp
jb
inc
cmp
ja
add
cwde
std
add
jmp
pop
and
test
jmp
repnz
sbb
push
xor
mov
xchg
add
ror
or
movs
sbb
int
(bad)
(bad)
push
or
xchg
add
dec
sbb
mov
clc
nop
or
inc
lsl
(bad)
repnz
das
gs
inc
jne
add
call
imul
pop
out
call
out
dec
mov
aaa
loopne
cli
xor
(bad)
cmps
xor
scas
shl
out
popa
shr
(bad)
(bad)
(bad)
inc
xchg
movs
pop
pop
dec
fbld
cmp
adc
xchg
push
sub
loope
pop
(bad)
jg
jmp
xchg
jg
dec
int3
pop
mov
xlat
xchg
mov
inc
or
xchg
jmp
sbb
out
dec
pushf
xor
(bad)
mov
lds
sbb
or
(bad)
push
pop
cdq
or
sbb
sbb
and
test
adc
fcomip
dec
and
dec
push
addr16
fcom
or
cmp
jbe
shl
or
inc
push
js
fdivr
(bad)
call
xchg
fcomp
ins
and
adc
jne
shl
out
aam
push
mov
jp
(bad)
mov
in
addr16
test
pop
cmp
sub
push
push
stos
adc
es
(bad)
(bad)
call
pop
push
pop
mov
lods
rcl
nop
and
lock
and
aaa
js
push
in
stos
stos
jae
(bad)
(bad)
(bad)
dec
lods
xchg
cdq
shl
xchg
xchg
lds
aad
aad
mov
add
cs
mov
push
mov
inc
xlat
cs
mov
cmp
psubusb
imul
mul
pop
mov
(bad)
(bad)
call
push
sbb
int3
stos
push
xchg
imul
xor
mov
pop
ins
add
(bad)
push
push
mov
outs
add
adc
dec
push
shl
(bad)
mov
ins
pop
cmps
push
pop
inc
pop
inc
push
add
leave
adc
and
lea
bound
cmp
adc
add
dec
loopne
aad
(bad)
(bad)
(bad)
(bad)
fst
fsub
inc
dec
loopne
stos
adc
loopne
inc
mov
pop
pop
pop
loope
(bad)
(bad)
(bad)
jmp
add
sub
jo
and
popf
or
es
jns
sub
(bad)
(bad)
(bad)
push
in
xor
xor
xor
and
cmp
imul
in
jmp
push
or
fst
or
mov
fs
inc
cli
cmps
inc
and
inc
loop
push
cmps
jo
(bad)
fwait
mov
inc
mov
inc
mov
add
mov
pop
fmul
out
jo
lahf
cmc
(bad)
(bad)
mov
fadd
ss
adc
arpl
jecxz
pop
aas
xor
sub
(bad)
dec
cmp
inc
and
(bad)
push
dec
mov
add
cmp
pop
sahf
in
fsubr
pop
fist
sar
je
(bad)
inc
adc
and
ja
sbb
inc
jmp
(bad)
jl
xchg
movs
fcomi
scas
dec
andps
fist
pop
xor
ins
cs
cli
call
dec
pop
movs
movs
and
add
ret
(bad)
call
(bad)
andnps
push
mov
test
and
mov
arpl
add
test
mov
adc
mov
aad
jmp
inc
mov
xchg
fmul
xor
(bad)
(bad)
dec
popa
cmc
xor
pushf
xchg
scas
dec
pop
daa
or
jmp
(bad)
aad
(bad)
fst
push
xor
pop
aaa
test
jbe
push
ja
mov
(bad)
jmp
xchg
lock
jne
pop
or
jle
fst
cld
push
cld
nop
adc
int
push
pop
fwait
pushf
(bad)
out
retf
inc
push
sbb
and
(bad)
fsub
ins
inc
jg
lock
adc
or
rol
cmp
rol
dec
sbb
popa
xchg
push
mov
fstp
adc
(bad)
call
mov
adc
fwait
popa
jae
or
sub
mov
mov
(bad)
(bad)
jmp
outs
fiadd
dec
jne
mov
mov
in
popf
sbb
pop
es
loopne
pop
loopne
dec
mov
inc
scas
xchg
push
jns
bound
push
dec
scas
cmp
es
fcomip
jg
in
push
fs
adc
int
ds
push
popf
push
adc
push
imul
(bad)
(bad)
call
aam
push
cld
ins
push
scas
popa
shr
pop
cmps
jge
dec
pop
push
outs
lods
jle
icebp
mov
addr16
call
jo
jno
xchg
sub
int
jecxz
outs
and
adc
out
cld
mov
(bad)
jmp
repz
test
loope
push
push
pusha
cmps
sar
aaa
(bad)
push
pushf
sbb
sbb
inc
sbb
fisubr
sub
jne
or
or
cli
(bad)
jmp
xor
mov
jb
jo
xor
mov
loope
(bad)
dec
push
enter
js
lds
ret
xor
inc
mov
aad
stos
sbb
xchg
mov
sub
dec
out
or
add
fld
jb
(bad)
(bad)
push
int3
dec
xor
dec
jno
sbb
outs
mov
or
addr16
icebp
(bad)
jmp
sar
popf
jb
lods
push
pop
cmovp
sub
rcpps
jmp
out
mov
jecxz
add
mov
in
cmp
sub
sub
(bad)
push
adc
rcr
fild
or
sub
wrmsr
add
cmp
inc
sub
(bad)
(bad)
call
sbb
mov
popf
cmp
std
ficomp
bound
lock
or
(bad)
dec
adc
adc
es
push
ins
call
pusha
adc
jbe
leave
and
scas
or
mov
jmp
rol
in
(bad)
sub
inc
xchg
push
and
loope
jmp
sub
(bad)
(bad)
(bad)
jmp
jle
sar
mov
into
sti
add
or
mov
jno
push
xor
retf
(bad)
jmp
ret
mov
mov
add
in
lods
jae
(bad)
(bad)
push
add
mov
sti
nop
push
out
add
test
out
sbb
or
or
(bad)
(bad)
(bad)
jmp
pop
cs
xchg
das
cmp
inc
sahf
ins
aas
push
push
adc
(bad)
ror
(bad)
(bad)
(bad)
dec
xchg
fstp
sub
shl
jno
xor
jp
mov
dec
or
out
inc
ins
and
adc
(bad)
inc
out
enter
or
add
sbb
adc
ins
or
or
inc
add
mov
sbb
(bad)
adc
adc
jg
(bad)
jg
jge
mov
add
xlat
jae
jecxz
out
pop
in
adc
jmp
push
call
inc
pop
fmul
sub
ja
mov
cmp
(bad)
not
push
out
xchg
mov
callw
mov
lea
(bad)
(bad)
(bad)
mov
pushf
pusha
add
cmp
sbb
inc
les
jbe
push
xchg
je
js
adc
(bad)
(bad)
(bad)
fadd
mov
call
or
dec
xlat
js
adc
cmp
jecxz
inc
cli
jo
fidiv
xor
int
mov
(bad)
(bad)
(bad)
dec
mov
xor
mov
xchg
adc
inc
cmp
add
cmp
jg
dec
mov
in
mov
scas
leave
cmp
loop
aad
jmp
(bad)
call
pop
mov
sbb
icebp
cmp
shr
inc
push
outs
pushf
fimul
in
pusha
(bad)
(bad)
(bad)
dec
sbb
lods
rcl
in
in
cmp
inc
jno
cmps
pop
lds
aad
xor
xchg
mov
movs
or
or
pop
outs
(bad)
stos
test
not
mov
call
rcr
addr16
adc
nop
(bad)
into
mov
(bad)
out
arpl
push
and
movs
call
jmp
and
shl
mov
add
or
addr16
data16
(bad)
(bad)
(bad)
inc
and
sar
xor
retf
xchg
adc
popa
cs
push
loope
call
sbb
jb
mov
or
mov
xor
dec
and
js
aad
and
(bad)
jg
and
mov
push
add
push
inc
call
loopne
mov
and
sub
lods
push
xchg
add
dec
inc
test
xlat
add
adc
rcl
test
mov
jbe
(bad)
(bad)
test
cld
in
ds
add
mov
xchg
inc
(bad)
(bad)
(bad)
call
sti
out
es
pop
movs
outs
jge
retf
mov
(bad)
int3
cmp
dec
mov
rol
xor
adc
pop
and
or
mov
je
out
mov
fwait
inc
xchg
jge
inc
mov
outs
and
cwde
nop
cmp
dec
rcr
sub
(bad)
(bad)
dec
imul
sahf
pushf
rol
push
jne
call
xor
mov
out
clc
in
lea
and
iret
out
sar
mov
inc
jl
js
pop
and
mov
mov
adc
call
sub
xchg
jmp
mov
inc
mov
(bad)
das
or
dec
pop
cmp
xchg
xlat
enter
lock
sahf
pop
jno
jmp
(bad)
lock
mov
push
icebp
dec
inc
and
or
in
cmp
nop
out
clc
fild
push
movs
or
cmps
push
pop
inc
sbb
test
cmp
(bad)
call
push
pusha
jg
arpl
fmulp
stos
clc
lods
xor
xor
repz
rcl
(bad)
(bad)
jmp
je
movs
push
iret
mov
iret
sbb
loop
in
inc
inc
sbb
(bad)
(bad)
(bad)
mov
repnz
aas
jl
ja
bnd
inc
push
stos
pop
repnz
inc
movs
mov
sar
push
pop
adc
pop
sub
xchg
push
mov
ret
test
dec
out
add
scas
cmc
inc
(bad)
cmp
adc
push
mov
dec
arpl
or
imul
jmp
mov
lahf
test
lods
(bad)
and
fsubr
push
std
lahf
ins
add
adc
lds
stc
test
stos
sub
cmp
xlat
adc
inc
push
mov
xchg
push
adc
(bad)
jmp
test
dec
test
push
sub
test
push
(bad)
call
sub
mov
inc
arpl
ret
(bad)
jmp
stos
mov
cmc
xchg
sahf
push
push
push
(bad)
mov
test
inc
xor
out
push
pop
mul
loop
retf
dec
loopne
inc
add
std
(bad)
sbb
push
call
daa
and
push
ror
test
stc
test
rol
inc
call
aas
pusha
add
sbb
lods
pushf
iret
push
in
addr16
sbb
adc
(bad)
jg
pop
out
and
mov
or
xchg
loopne
in
out
push
sub
push
mov
mov
mov
pop
adc
cli
inc
les
push
pop
imul
dec
ret
clc
(bad)
(bad)
(bad)
jmp
clc
sub
mov
and
test
in
sbb
arpl
push
cmp
push
mov
mov
and
xchg
sub
push
dec
cmc
frstor
jb
(bad)
(bad)
(bad)
loopne
nop
jns
and
fnstcw
not
idiv
clc
and
fimul
into
adc
(bad)
call
sbb
cmp
or
xor
ret
add
dec
stc
movs
pop
jno
(bad)
call
push
inc
xchg
ret
dec
ret
and
adc
xor
xchg
bound
(bad)
out
clc
(bad)
jp
bound
mov
add
in
adc
icebp
mov
push
(bad)
(bad)
call
sub
pusha
int3
icebp
pop
movs
mov
mov
je
add
loope
cli
(bad)
dec
add
scas
mov
pop
mov
sbb
mov
push
xchg
nop
loopne
stos
add
clc
(bad)
call
test
push
int
push
or
lea
cmp
ins
add
pop
(bad)
(bad)
jmp
pop
inc
fadd
into
sti
nop
push
inc
cmp
push
pop
xchg
add
(bad)
fisttp
dec
lods
mov
shl
adc
mov
push
es
lar
int3
pusha
test
inc
jno
push
es
fs
mov
(bad)
fcmovnu
(bad)
ins
(bad)
(bad)
cld
add
mov
std
pop
sub
scas
(bad)
push
mov
inc
rcr
add
dec
mov
jg
cmps
jns
movs
or
fwait
sti
ror
rol
and
jnp
hlt
(bad)
(bad)
call
movs
jns
add
cdq
jo
and
in
add
add
jg
aad
(bad)
call
test
push
mov
sub
inc
retf
mov
pop
lods
clc
push
icebp
lods
add
loope
pop
sub
jmp
xor
adc
cwde
push
sub
ja
(bad)
mov
jle
push
ret
jecxz
stos
inc
adc
push
push
mov
shl
call
int3
inc
sub
add
scas
mov
pop
(bad)
mov
adc
push
adc
xchg
icebp
pop
push
sar
push
xor
inc
cmove
(bad)
jle
gs
cmp
inc
(bad)
movs
leave
dec
test
sbb
dec
pusha
ret
or
inc
or
sub
adc
xchg
mov
adc
dec
add
push
mov
sahf
(bad)
(bad)
(bad)
(bad)
call
cmc
sub
aam
sbb
dec
test
jmp
fst
jo
mov
push
xchg
jp
inc
cmp
xor
ins
add
push
test
(bad)
mov
and
or
adc
push
dec
and
(bad)
(bad)
call
mov
clc
inc
fs
out
je
adc
stc
call
push
imul
das
call
push
sbb
sbb
rol
nop
mov
rcl
bound
hlt
push
cmc
les
out
jg
mov
or
cmp
(bad)
(bad)
fnstenv
fld
push
xor
jmp
sub
or
shl
lea
jmp
retf
add
retf
xchg
push
pop
adc
ja
cmp
in
jnp
adc
adc
push
imul
xor
pop
in
or
cld
(bad)
jmp
sub
jg
mov
(bad)
sub
leave
add
add
mov
sbb
inc
jmp
(bad)
(bad)
call
call
or
cmp
test
hlt
js
sbb
nop
aam
adc
pop
add
or
clc
add
add
fcmovu
push
mov
adc
cs
jmp
ds
jge
fs
push
sahf
jmp
push
aaa
add
pop
sub
sub
push
cdq
cmp
push
push
dec
cmp
(bad)
(bad)
xchg
jle
push
adc
adc
sub
xchg
mov
jg
mov
clc
xor
or
mov
(bad)
fbstp
cmps
dec
pop
sbb
into
or
cmp
lock
push
scas
gs
call
ins
aad
aaa
xchg
rol
jecxz
inc
ja
adc
inc
push
cld
jmp
xor
dec
push
mov
test
out
in
arpl
pop
or
(bad)
(bad)
mov
ja
cs
aaa
mov
outs
(bad)
out
xor
fisubr
aas
add
push
xor
xchg
cmps
jbe
sar
inc
add
rcl
ja
lds
lods
mov
ja
cld
(bad)
mov
xor
push
or
push
inc
add
out
push
adc
add
fwait
(bad)
outs
mov
fisubr
fisub
pop
(bad)
jmp
cmp
mov
div
mov
xchg
sbb
(bad)
push
fiadd
dec
add
mov
mov
sahf
dec
sub
push
scas
jo
movs
mov
imul
bts
mov
je
inc
xchg
xchg
(bad)
inc
dec
enter
pop
push
or
loop
(bad)
(bad)
call
(bad)
inc
sbb
das
aas
fist
ret
fs
fbstp
retf
popa
sbb
bound
iret
loop
mov
sbb
(bad)
push
or
mov
stos
dec
or
jnp
sbb
or
test
pop
(bad)
(bad)
(bad)
dec
sub
mov
push
outs
cs
aas
adc
dec
(bad)
aaa
adc
mov
mov
adc
sbb
add
or
inc
or
aas
lahf
push
ins
adc
push
ret
cmps
daa
jb
aas
or
(bad)
mov
daa
jl
and
pop
out
add
outs
push
or
outs
pop
test
(bad)
jmp
imul
dec
jecxz
repnz
(bad)
(bad)
(bad)
push
xchg
out
aas
or
cmp
ins
cmps
dec
jno
imul
shl
gs
sub
pushf
mov
(bad)
(bad)
fisttp
xchg
or
pop
add
in
ss
xchg
pop
mov
outs
lea
scas
adc
mov
loope
int
aas
sub
push
inc
pop
call
(bad)
jg
dec
or
inc
bound
shr
es
adc
mov
(bad)
jmp
scas
sub
jnp
adc
dec
push
out
rcl
push
(bad)
fcomip
dec
inc
xchg
mov
mov
mov
cmp
inc
inc
xor
mov
(bad)
(bad)
push
out
fisttp
dec
jp
in
jns
add
dec
dec
into
sub
(bad)
call
push
xor
sar
dec
sti
scas
push
cmp
push
xor
test
cli
jg
xlat
out
test
push
ss
mov
loop
es
outs
fs
ss
out
cld
inc
ss
mov
mov
lock
dec
stos
iret
jl
(bad)
sbb
dec
push
out
cmp
ins
ficom
in
sahf
(bad)
(bad)
(bad)
jg
leave
sub
add
clc
jmp
inc
inc
cmp
sub
xchg
mov
movs
shr
icebp
call
add
jge
jp
(bad)
(bad)
(bad)
call
je
inc
mov
add
add
or
mov
mov
push
add
(bad)
dec
pop
and
dec
push
test
icebp
sti
jle
mov
je
and
(bad)
(bad)
dec
and
and
and
mov
mov
pop
or
mov
dec
dec
aad
mov
sbb
fild
cld
cmps
inc
push
mov
xchg
ja
sbb
or
test
rol
push
sbb
(bad)
jmp
add
lea
push
inc
sbb
xor
in
shl
dec
push
pop
aaa
dec
sub
jnp
inc
sbb
test
fidivr
rol
(bad)
(bad)
(bad)
inc
add
or
xchg
or
adc
ja
mov
adc
sbb
(bad)
dec
adc
mov
mov
mov
pop
loopne
pop
mov
cmp
xchg
adc
les
mov
jg
leave
push
push
cli
xlat
sbb
sub
sub
(bad)
(bad)
(bad)
in
dec
jne
mov
ror
push
cld
xchg
cmp
cwde
mov
cdq
bound
jg
call
mov
std
ret
mov
(bad)
or
test
adc
(bad)
(bad)
(bad)
call
out
mov
repnz
xlat
add
xchg
xor
push
cmp
add
inc
test
scas
call
jbe
pop
fwait
mov
cmp
test
nop
jp
sbb
xchg
lods
(bad)
jmp
jne
cwde
push
pushf
pop
add
call
(bad)
(bad)
jg
mov
cmp
add
push
sbb
or
push
lods
sbb
cld
(bad)
(bad)
(bad)
call
or
icebp
add
fnstsw
cmps
jmp
or
stos
aam
ret
pop
pop
mov
jecxz
cmp
adc
repnz
pop
jge
(bad)
mov
mov
mov
imul
clc
add
clc
daa
add
(bad)
jg
imul
and
adc
mov
inc
or
and
cmp
adc
add
call
loopne
push
or
stos
add
stos
add
push
cld
push
mov
lods
mov
loop
sar
jle
retf
loopne
call
adc
sub
or
(bad)
ds
push
mov
outs
ror
xchg
leave
clc
(bad)
inc
add
mov
mov
in
inc
imul
(bad)
dec
jbe
and
mov
dec
loop
in
ret
cwde
std
(bad)
(bad)
call
dec
stos
or
hlt
rol
or
test
sub
jmp
adc
sbb
ins
mov
inc
pop
test
jecxz
sbb
or
loop
pop
out
pop
stos
cmps
xor
push
xor
test
adc
pop
(bad)
inc
xchg
dec
mov
sub
and
(bad)
retf
(bad)
ret
(bad)
(bad)
(bad)
inc
in
lods
pop
adc
es
xchg
cmps
out
(bad)
sub
sar
in
in
xchg
pop
push
xor
xchg
cdq
(bad)
jg
lock
(bad)
inc
sbb
js
rcl
or
ret
fistp
js
loopne
outs
(bad)
xor
int3
int3
add
in
or
and
clc
xchg
test
in
mov
call
lods
adc
pop
scas
in
in
(bad)
sbb
sub
xchg
or
add
push
mov
(bad)
fcomip
push
ja
sbb
push
adc
fs
sbb
(bad)
inc
test
mov
aas
push
test
(bad)
add
(bad)
call
push
push
mov
daa
test
add
(bad)
cwde
add
sbb
stos
push
sub
(bad)
(bad)
call
aam
test
mov
sbb
dec
mov
test
push
nop
pop
push
(bad)
out
cli
jmp
xchg
pop
dec
daa
jb
push
jns
aam
pop
mov
in
pop
xchg
stos
pusha
add
ja
jmp
icebp
cs
push
enter
mov
fwait
lock
out
jbe
in
push
push
out
or
sbb
es
sbb
or
sbb
dec
mov
mov
and
mov
(bad)
jp
shl
or
(bad)
fistp
cli
in
fisub
xlat
gs
call
cld
xchg
nop
inc
adc
push
mov
xor
cld
dec
add
push
sbb
fild
or
mov
lock
cmp
push
ficom
xchg
add
cmp
adc
out
(bad)
(bad)
(bad)
call
push
add
sbb
jb
hlt
or
fdiv
jg
dec
add
push
push
dec
cmp
shr
or
sahf
inc
(bad)
ror
sub
adc
(bad)
(bad)
call
in
iret
adc
xor
mov
mov
and
push
in
call
cmp
jmp
(bad)
or
pusha
popw
mov
clc
(bad)
(bad)
jmp
pop
out
adc
push
addr16
add
jb
mov
(bad)
(bad)
(bad)
out
repnz
xchg
add
sub
push
enter
xor
pop
inc
bound
cmp
xchg
(bad)
(bad)
call
ror
aas
jle
js
cmp
mov
mov
push
push
cmps
ins
popf
clc
loope
sbb
sbb
aad
push
push
dec
inc
jns
pop
or
push
or
mov
js
pop
xor
call
push
push
sbb
xor
sub
sbb
call
js
push
rcl
jo
pop
xchg
mov
popa
mov
(bad)
mov
inc
sub
fidiv
fwait
jg
(bad)
push
push
adc
loopne
sub
leave
movs
mov
or
sbb
cmps
sub
(bad)
call
xchg
sbb
outs
inc
jg
hlt
loope
pop
sbb
adc
(bad)
(bad)
(bad)
mov
add
(bad)
sub
and
(bad)
pop
rol
mov
or
arpl
loope
(bad)
(bad)
fsub
xor
(bad)
adc
push
push
or
mov
pop
(bad)
(bad)
dec
cli
dec
test
xor
inc
sbb
xchg
push
sub
(bad)
jg
jmp
xor
pop
and
adc
cmp
adc
add
xchg
dec
jl
(bad)
(bad)
(bad)
jmp
mov
pop
xor
xchg
test
cmp
test
stos
gs
test
(bad)
(bad)
(bad)
call
or
loope
dec
mov
std
pop
or
add
pop
adc
dec
in
ins
rcr
cmp
cli
(bad)
(bad)
dec
aad
mov
lea
fld
sub
push
in
add
dec
scas
(bad)
jmp
xor
or
inc
cwde
push
stc
pop
cmp
inc
push
add
dec
(bad)
(bad)
(bad)
inc
inc
sbb
shl
push
dec
jo
inc
push
mov
rol
mov
mov
test
push
lods
or
pop
icebp
dec
or
pusha
jo
sub
fisub
repz
adc
cli
inc
inc
dec
jae
sar
mov
dec
lea
inc
sbb
push
and
jg
dec
retf
dec
push
es
call
dec
adc
fldcw
and
(bad)
(bad)
(bad)
jmp
mov
mov
xchg
(bad)
std
dec
cld
sub
ins
cmp
(bad)
and
loopne
(bad)
(bad)
jmp
add
mov
das
ror
dec
(bad)
fsubr
push
push
inc
or
mov
es
add
adc
push
jmp
and
push
pushf
test
fadd
push
cmc
(bad)
(bad)
push
nop
aaa
cmps
test
scas
push
inc
mov
dec
std
imul
mov
sbb
xor
adc
cs
adc
pop
fldenv
fwait
loopne
fadd
call
arpl
idiv
jmp
stos
imul
xor
jbe
dec
mov
push
(bad)
(bad)
(bad)
inc
test
push
push
hlt
pop
(bad)
out
mov
cmp
fcom
jns
mov
push
push
(bad)
call
inc
add
rol
push
ja
xor
loope
sub
sbb
(bad)
(bad)
call
test
push
inc
pop
loop
loopne
nop
push
fmul
(bad)
lods
push
call
test
lock
(bad)
jmp
sub
sti
xchg
loope
or
inc
sbb
jo
adc
fmul
shr
or
jmp
inc
jmp
and
push
rol
outs
jo
(bad)
(bad)
(bad)
dec
dec
pop
(bad)
xor
nop
and
add
cs
fisttp
imul
inc
leave
clc
or
mov
inc
or
push
mov
(bad)
(bad)
(bad)
push
popa
ja
dec
push
and
sub
push
push
push
pop
mov
inc
or
xchg
test
addr16
xor
mov
scas
xchg
and
(bad)
(bad)
call
mov
push
rcr
pushf
adc
test
sub
dec
movs
add
cld
(bad)
inc
cmp
cwde
add
jns
lock
push
pushf
fsub
push
dec
rcr
inc
imul
or
(bad)
dec
mov
cmp
je
popa
add
or
lods
add
daa
hlt
add
aaa
pusha
jns
xor
repnz
fmul
out
cmp
inc
push
add
scas
or
or
(bad)
call
sub
and
rcr
mov
or
cs
clc
(bad)
mov
or
cmp
sbb
invd
pop
daa
add
(bad)
icebp
test
and
inc
or
(bad)
(bad)
jmp
popa
ret
movq
push
outs
call
enter
enter
jmp
add
pop
xor
leave
inc
jg
(bad)
call
leave
adc
xchg
inc
mov
dec
xchg
enter
jo
sbb
stos
(bad)
dec
inc
mov
add
xor
in
out
je
mov
xchg
iret
arpl
pop
add
xor
(bad)
push
push
jp
adc
add
clc
mov
xchg
(bad)
push
loopne
(bad)
clc
pop
ss
push
ins
mov
es
and
test
or
mov
mov
jg
add
push
push
sub
mov
dec
mov
xchg
movs
dec
inc
loopne
call
push
jbe
push
inc
mov
or
dec
(bad)
ds
fisttp
ds
pop
sub
sbb
(bad)
(bad)
jg
or
pop
inc
lea
mov
(bad)
jmp
sub
movzx
mov
add
test
jl
(bad)
(bad)
pusha
adc
cld
push
pop
sub
mov
nop
or
cmp
fldcw
dec
push
movs
rol
lds
pusha
push
pop
cwde
xor
(bad)
dec
xor
fiadd
js
jne
movs
test
test
loop
(bad)
(bad)
(bad)
jge
and
pop
and
hlt
jg
pop
loopne
test
mov
sbb
(bad)
jg
dec
pushf
and
fcom
push
movs
ret
sub
add
js
sub
(bad)
(bad)
(bad)
jmp
jmp
xchg
rol
sub
ret
adc
sbb
xchg
sub
sti
dec
sbb
cmp
mov
inc
(bad)
lock
ficomp
dec
icebp
(bad)
(bad)
cmp
push
js
nop
mov
pop
dec
and
(bad)
(bad)
fisttp
adc
push
xor
sub
rol
lods
loopne
(bad)
push
ja
ja
daa
mov
int
sub
xchg
add
push
inc
daa
dec
jae
pop
fisttp
and
add
cli
or
ret
icebp
mov
push
jl
xchg
fcom
pop
xor
sar
or
push
jmp
dec
cli
(bad)
call
mov
movs
lea
adc
adc
dec
mov
add
push
sbb
(bad)
mov
adc
adc
push
dec
push
cmp
mov
aad
sahf
inc
xchg
icebp
(bad)
(bad)
in
jns
das
pop
or
dec
xor
jg
adc
jle
outs
imul
sub
loop
sbb
fs
fidiv
add
or
(bad)
fidiv
fidivr
call
xor
push
push
in
sar
call
push
inc
sbb
cmps
gs
cmps
repnz
loop
scas
pusha
mov
call
fdivr
sbb
jo
mov
cmps
ret
lea
adc
jmp
ret
aas
cs
add
dec
inc
cmp
push
cmp
push
adc
std
lods
aas
scas
xchg
jecxz
add
and
(bad)
(bad)
(bad)
dec
add
test
dec
dec
das
jo
push
and
dec
addr16
xor
pop
mov
movs
rcr
sbb
pop
bnd
(bad)
dec
add
pop
icebp
(bad)
call
add
das
pop
jb
gs
dec
rcl
icebp
and
mov
push
sub
jo
lds
repnz
mov
movs
test
or
(bad)
jmp
jmp
jmp
mov
lods
and
or
(bad)
(bad)
mov
sbb
ret
xor
add
popf
xchg
hlt
ss
(bad)
(bad)
push
repnz
inc
call
cmp
lods
add
arpl
int3
push
push
outs
mov
imul
(bad)
(bad)
jg
add
js
retf
or
mov
jnp
and
add
fwait
xor
dec
ins
mov
retf
in
mov
ror
xor
mov
push
je
arpl
(bad)
(bad)
(bad)
(bad)
jmp
in
lock
mov
adc
aam
sar
push
out
fld
xchg
outs
pop
in
jbe
push
in
test
xchg
cld
push
(bad)
das
mov
inc
inc
and
aaa
pop
jp
aaa
out
sub
(bad)
nop
mov
ins
(bad)
rcr
sbb
(bad)
mov
or
and
cli
inc
imul
ins
mov
aaa
dec
push
add
and
(bad)
adc
adc
ret
jl
inc
pop
out
sbb
mov
bound
mov
add
sub
test
(bad)
(bad)
call
pop
sub
popf
jo
add
sub
and
sub
xchg
fsub
mov
cmp
adc
daa
adc
arpl
add
int3
stos
xor
aam
mov
sub
or
fstp
(bad)
(bad)
inc
adc
les
shl
and
lock
dec
test
mov
daa
(bad)
(bad)
jg
cwde
xchg
aam
cmps
jl
mov
adc
jmp
lock
jmp
jns
sbb
leave
clc
mov
jmp
lock
test
inc
das
inc
pop
add
stos
popa
mov
test
mov
je
hlt
stos
(bad)
(bad)
(bad)
dec
retf
jmp
or
leave
pop
or
adc
add
xor
mov
and
or
(bad)
(bad)
mov
sbb
add
aas
test
pop
and
call
ja
aam
mov
xchg
push
fcmovnb
outs
cli
adc
adc
es
sub
cmp
aas
test
push
add
jns
(bad)
inc
(bad)
fisub
pop
pop
pop
stos
lock
xchg
icebp
or
retf
imul
add
sub
pop
push
sbb
fcmovb
mov
add
sbb
mov
and
mov
je
(bad)
(bad)
dec
loop
adc
movs
xor
cmps
adc
inc
pop
fbstp
dec
or
retf
jge
fs
(bad)
push
out
test
aas
pop
and
std
xor
jecxz
fsubr
(bad)
(bad)
dec
sub
dec
jmp
sldt
adc
push
jmp
xchg
cld
push
mov
xor
cld
retf
add
add
push
adc
push
adc
mov
scas
adc
(bad)
dec
or
push
sbb
pop
cld
call
sbb
jp
ds
ds
call
inc
movzx
(bad)
inc
arpl
add
push
cmp
ins
inc
cld
(bad)
fisub
cs
jmp
addr16
loopne
xchg
mov
cmp
out
(bad)
dec
(bad)
icebp
push
or
(bad)
addr16
cli
adc
add
sbb
xchg
and
add
(bad)
(bad)
(bad)
clc
movs
cmp
add
lods
dec
clc
adc
retf
cli
icebp
inc
das
and
add
sub
inc
add
push
jo
int
inc
mov
cs
pop
bound
push
mov
xor
or
add
inc
pop
push
mov
pop
clc
or
js
das
inc
or
in
jmp
push
xor
(bad)
mov
ret
pusha
inc
sbb
int
add
(bad)
(bad)
call
adc
cmp
out
daa
sub
add
fdiv
shl
jmp
jmp
jmp
dec
adc
cmp
mov
pop
retf
mov
fcomip
inc
sub
and
cmp
inc
push
outs
cdq
sbb
push
dec
(bad)
(bad)
jg
mov
xchg
pop
in
stos
or
or
push
idiv
xor
sub
push
(bad)
(bad)
(bad)
cmp
or
inc
sar
jg
das
dec
push
sub
loope
mov
scas
inc
pusha
in
jge
retf
or
jle
ret
(bad)
(bad)
(bad)
mov
jp
shl
test
xchg
xchg
adc
dec
push
fadd
bound
pop
pop
pop
(bad)
(bad)
(bad)
inc
xchg
out
push
rcr
pop
ja
add
cmp
shr
jle
(bad)
(bad)
jmp
or
mov
push
xchg
and
in
shr
inc
jnp
pop
xchg
jns
or
pop
jmp
popa
loopne
add
or
fs
test
inc
mov
pop
mov
out
mov
or
lods
loop
enter
(bad)
fcmovnb
dec
pop
or
dec
jne
xor
inc
cmp
and
fdiv
sar
(bad)
cmp
ret
stos
call
aaa
add
jg
call
(bad)
inc
cdq
adc
stc
or
sub
or
push
sbb
out
and
aas
inc
sbb
and
aam
sub
push
aas
sub
nop
mov
cmp
nop
sub
jmp
push
scas
mov
adc
sbb
adc
adc
fdiv
push
ret
or
sub
xchg
sbb
cli
call
dec
scas
mov
test
aam
xchg
inc
pop
add
push
cld
call
ds
adc
enter
imul
mov
xchg
dec
(bad)
inc
inc
inc
ret
dec
imul
inc
or
repz
lock
pushf
adc
add
add
dec
cmp
(bad)
dec
push
cmp
(bad)
call
lods
cmps
mov
cld
jle
rol
test
jno
or
add
call
sbb
add
das
icebp
es
adc
(bad)
(bad)
(bad)
mov
std
or
adc
dec
or
lock
inc
adc
push
test
cmp
mov
sbb
enter
cmp
(bad)
call
adc
jg
jg
push
mov
imul
xchg
sbb
add
xor
leave
xchg
or
sar
fidivr
out
add
clc
xor
xchg
mov
ja
cli
sbb
mov
shr
add
mov
push
es
add
add
mov
aam
push
lods
mov
outs
clc
das
jo
sbb
ins
loop
in
ror
inc
mov
aas
fdivr
(bad)
(bad)
push
add
aam
jmp
lock
adc
xor
fs
inc
pop
fs
pop
test
mov
or
jmp
mov
call
dec
clc
daa
lods
fs
pop
mov
leave
gs
mov
leave
mov
or
sbb
sub
jb
mov
hlt
ss
movs
sub
add
adc
fwait
xor
sbb
std
ins
in
cmovs
push
jle
ds
fisttp
sub
inc
mov
sub
and
retf
dec
dec
test
adc
fwait
scas
js
dec
sbb
push
xor
(bad)
(bad)
(bad)
(bad)
fnstenv
and
and
push
sub
retf
scas
jl
jge
adc
cmp
adc
push
(bad)
(bad)
(bad)
inc
push
stos
test
retf
cli
js
dec
out
dec
dec
aas
push
adc
add
fild
push
xor
inc
inc
clc
(bad)
inc
adc
sbb
dec
ins
add
fdiv
(bad)
hlt
popf
shl
leave
sbb
xor
out
mov
inc
arpl
pop
hlt
jmp
movs
xchg
or
test
sub
shr
pop
popa
inc
push
sub
(bad)
dec
lock
inc
pop
pop
or
es
scas
or
nop
push
call
sbb
xchg
das
add
push
jl
inc
test
lods
icebp
call
dec
or
xchg
(bad)
push
push
sbb
adc
call
mov
jg
call
mov
mov
jmp
mov
in
hlt
xor
inc
in
(bad)
(bad)
inc
and
jns
adc
lock
loopne
mov
mov
cwde
(bad)
(bad)
(bad)
jmp
mov
xor
xchg
mov
and
push
add
add
(bad)
(bad)
(bad)
jmp
mov
sahf
pop
adc
or
xor
mov
xchg
lods
in
sahf
add
push
ror
and
cli
call
mov
ret
ins
ret
out
daa
data16
(bad)
(bad)
jmp
mov
addr16
push
mov
sbb
mov
lea
mov
(bad)
(bad)
(bad)
(bad)
fadd
or
in
in
int
jp
mov
cmp
sti
mov
loopne
fcom
call
inc
push
add
xor
daa
cld
mov
jb
or
(bad)
mov
loopne
jne
pop
pop
mov
mov
int
fdiv
sbb
pop
or
loopne
add
nop
adc
push
mov
pop
nop
xchg
push
daa
or
xor
adc
(bad)
jmp
mov
in
adc
mov
dec
jg
mov
imul
cmp
inc
add
cwde
rcr
xchg
(bad)
scas
sete
xor
push
xchg
xor
inc
or
xchg
test
aam
adc
test
dec
pop
(bad)
fbstp
int3
push
xchg
and
inc
in
inc
inc
pop
lds
(bad)
dec
hlt
mov
xchg
loopne
das
inc
in
adc
(bad)
mov
cmp
das
vmovsldup
(bad)
(bad)
jmp
mov
xor
adc
and
test
push
cmps
es
(bad)
(bad)
(bad)
inc
push
test
mov
ja
in
stos
aaa
pop
ja
xchg
mov
jge
int3
pop
adc
call
push
popf
push
imul
push
daa
jb
add
(bad)
(bad)
(bad)
inc
inc
pop
inc
push
(bad)
xchg
jne
ins
imul
sub
repnz
xchg
das
or
or
ret
push
inc
arpl
cwde
xor
jmp
and
mov
addr16
iret
sbb
xor
pusha
cmp
add
sahf
add
sbb
sar
add
xor
and
pop
(bad)
(bad)
(bad)
mov
inc
stos
push
xor
test
ror
inc
pop
sbb
push
add
push
(bad)
(bad)
jmp
inc
jl
lahf
add
out
call
popf
iret
pop
rcr
call
or
dec
dec
(bad)
mov
pop
jno
(bad)
(bad)
call
dec
push
sub
les
sub
adc
dec
dec
pop
test
mov
inc
pop
loope
(bad)
cmp
jmp
push
imul
cdq
inc
add
sar
sub
retf
mov
jle
inc
jbe
xor
add
call
call
or
pop
jae
sbb
mov
mov
push
imul
das
clc
push
push
inc
inc
jo
pushf
adc
setb
dec
ja
sub
add
(bad)
fnsave
or
sub
hlt
mov
jle
mov
scas
jmp
and
pushf
and
outs
(bad)
(bad)
(bad)
push
pop
add
test
add
cmp
add
sbb
loope
shl
les
mov
(bad)
in
and
clc
cmp
mov
mov
aaa
dec
clc
daa
xchg
out
test
cmc
loopne
idiv
clc
lock
add
xchg
lock
in
xor
pop
call
js
call
xor
push
ins
and
jp
ret
push
push
inc
sub
(bad)
(bad)
(bad)
cmp
sub
ja
sub
fadd
inc
daa
gs
inc
sbb
jnp
aam
pop
jp
(bad)
(bad)
jmp
push
jecxz
in
adc
cmps
bound
daa
adc
retf
pop
adc
rcr
inc
add
scas
ret
aad
(bad)
(bad)
(bad)
inc
pusha
std
mov
inc
or
adc
xchg
inc
mov
mov
or
lea
(bad)
(bad)
dec
popf
mov
add
sbb
(bad)
jmp
inc
jb
fld
sbb
sub
pop
jo
das
dec
loope
push
mov
xor
and
adc
and
adc
(bad)
mov
pop
and
rol
and
pop
and
loopne
fs
jmp
push
sub
(bad)
(bad)
(bad)
mov
add
repz
test
leave
mov
dec
repz
sbb
arpl
fwait
add
xor
ins
dec
jmp
idiv
sbb
sub
dec
inc
jg
push
call
popa
out
mov
ss
mov
push
mov
call
jne
pop
in
dec
mov
pusha
pusha
dec
jecxz
sub
lods
add
push
push
shr
xor
and
stc
add
int3
xor
fcomip
(bad)
inc
in
adc
gs
sbb
(bad)
es
(bad)
(bad)
mov
or
shr
movs
lods
dec
sub
mov
sbb
(bad)
jg
mov
xchg
push
cmp
lds
lea
stos
sbb
push
sbb
(bad)
jg
xchg
jecxz
ret
push
adc
loopne
add
push
call
loopne
cdq
movups
push
(bad)
clc
add
push
int3
(bad)
cmps
mov
(bad)
(bad)
or
add
push
rcl
clc
mov
mov
std
dec
int3
sbb
push
(bad)
(bad)
jmp
add
push
sub
inc
dec
and
cmp
stc
sub
jo
loope
test
loopne
mov
push
and
mov
jle
nop
cmp
adc
adc
(bad)
(bad)
jg
aam
adc
aad
push
mov
cmps
in
vmovaps
and
clc
(bad)
inc
adc
xor
dec
cmps
(bad)
inc
pusha
stos
nop
mov
ja
mov
(bad)
and
add
pop
fbld
push
jae
test
sbb
dec
pop
(bad)
(bad)
(bad)
(bad)
fcom
jg
nop
lea
add
xchg
ds
daa
push
mov
hlt
xchg
mov
int3
mov
add
inc
in
sbb
aad
and
out
inc
add
call
cmp
in
sub
push
push
xchg
retf
inc
(bad)
mov
jae
pop
rcl
push
add
push
and
ror
mov
mov
inc
lock
push
pop
sbb
and
(bad)
(bad)
(bad)
inc
jno
outs
les
sub
pop
or
fwait
lea
pop
push
xchg
sbb
xchg
and
pop
and
xchg
and
aaa
das
pushf
sbb
mov
jg
aam
or
add
push
(bad)
(bad)
out
(bad)
push
nop
out
push
add
add
and
out
push
es
dec
rol
(bad)
call
clc
xchg
xchg
push
xor
cmps
sbb
imul
loopne
(bad)
push
sbb
inc
adc
xchg
xchg
xor
pop
nop
fld
adc
push
pop
in
ins
and
ffree
jl
add
add
scas
clc
push
mov
test
sbb
adc
jg
lds
xchg
add
(bad)
call
in
nop
mov
iret
inc
mov
inc
push
sub
sti
push
adc
clc
jmp
push
push
fmul
push
add
clc
scas
inc
add
in
ja
mov
inc
or
mov
pop
cmp
xchg
push
je
lods
(bad)
(bad)
(bad)
(bad)
jmp
test
test
xchg
jp
imul
mov
lds
loopne
fdivr
push
push
jo
xchg
xor
sbb
xchg
mov
mov
mov
(bad)
push
jns
add
outs
outs
out
retf
xor
mov
imul
outs
sub
mov
cmp
sbb
pop
(bad)
inc
dec
(bad)
orps
adc
adc
mov
(bad)
in
jg
clc
mov
pop
or
sbb
inc
pop
jb
int
pop
adc
lods
cwde
adc
push
xor
add
gs
sti
xor
test
(bad)
dec
dec
sbb
pop
pop
adc
sbb
loopne
hlt
dec
cmp
add
(bad)
call
icebp
cs
dec
jno
xabort
inc
jle
mov
sti
add
pop
jns
inc
mov
push
xbegin
push
jne
pop
popa
dec
push
xor
repz
test
(bad)
in
mov
popf
jle
hlt
or
sub
ret
xor
out
xchg
push
jmp
mov
or
jo
mov
add
jmp
into
shl
push
push
addr16
mov
add
push
mov
(bad)
mov
mov
call
push
stos
mov
repz
lea
cmps
mov
stos
mov
mov
pop
enter
(bad)
(bad)
fstp
rcl
mov
js
push
or
jmp
retf
and
mov
or
test
(bad)
(bad)
push
sbb
gs
dec
sub
xchg
xor
fdiv
popa
jmp
jge
or
cmp
sahf
ja
enter
inc
shl
dec
(bad)
(bad)
(bad)
jmp
js
or
adc
fimul
dec
cmps
aad
nop
fimul
(bad)
(bad)
(bad)
inc
sbb
cmp
imul
or
mov
clc
popa
xor
add
(bad)
(bad)
push
add
mov
and
stos
dec
mov
mov
xor
pop
(bad)
(bad)
(bad)
call
sbb
popa
and
shl
inc
xchg
loopne
hlt
and
push
(bad)
inc
js
xor
sbb
aaa
(bad)
loopne
stc
mov
mov
push
mov
dec
dec
push
and
inc
call
std
sub
mov
pushf
sub
and
or
mov
cmps
push
jp
(bad)
(bad)
(bad)
push
fimul
mov
push
dec
cmp
je
sbb
cmp
push
jp
stos
adc
fimul
jmp
and
push
frstor
and
and
and
push
add
inc
cmp
mov
mov
(bad)
call
jo
dec
push
or
mov
and
mov
inc
pop
fstp
jbe
mov
xor
test
inc
sbb
jg
inc
push
clc
mul
and
jbe
mov
aas
out
or
cmps
sbb
(bad)
cmp
js
mov
into
or
clc
mov
cmp
les
pushf
inc
mov
rol
mov
loopne
fldenv
push
pop
cmp
inc
or
mov
xor
pop
js
dec
inc
xchg
rol
jl
arpl
pop
push
mov
add
je
mov
jo
sbb
xchg
test
outs
mov
fs
(bad)
fist
pop
sbb
push
xor
iret
aam
push
arpl
ret
lea
(bad)
call
leave
jo
fs
cdq
inc
adc
jl
or
dec
dec
es
int3
mov
(bad)
call
sub
je
pushf
fsubr
adc
xor
fs
(bad)
(bad)
inc
sbb
in
xchg
mov
pop
mov
sub
ins
push
or
dec
ss
lods
ss
jnp
rol
je
clc
cmp
scas
jg
or
jmp
or
les
out
das
movs
icebp
call
loopne
or
xchg
xchg
jl
adc
(bad)
(bad)
(bad)
(bad)
call
test
or
(bad)
icebp
xrelease
push
add
loope
sub
push
inc
(bad)
(bad)
jmp
test
adc
daa
mov
sbb
jg
pop
cmp
and
xchg
jmp
jo
adc
add
(bad)
call
add
xchg
fistp
xor
jle
(bad)
xchg
dec
add
xchg
out
fsubr
fsqrt
aas
not
fstp
inc
sbb
(bad)
es
or
clc
mov
adc
inc
bndldx
call
jo
sbb
aaa
in
fwait
mov
adc
sar
(bad)
out
in
(bad)
dec
nop
jno
cmp
sbb
push
pusha
push
or
repz
sbb
push
(bad)
(bad)
(bad)
jg
js
popf
(bad)
sub
dec
adc
aam
xchg
jnp
and
sbb
dec
arpl
test
push
or
add
or
mov
pop
fdivr
ror
dec
adc
(bad)
call
scas
xor
pop
imul
jecxz
(bad)
jmp
mov
push
jns
cs
pop
inc
or
inc
addr16
nop
fisttp
dec
add
mov
inc
repz
adc
pop
mov
and
add
daa
lods
fsubr
add
jecxz
push
out
pop
call
jne
mov
and
xchg
xor
sbb
inc
pushf
add
ret
pop
pop
xor
daa
mov
rcl
push
adc
sti
inc
das
jmp
mov
aas
in
repnz
call
lock
call
push
cmp
(bad)
dec
inc
(bad)
cmp
scas
fsubr
imul
pusha
add
movs
dec
mov
(bad)
(bad)
(bad)
(bad)
jle
adc
xchg
xlat
cdq
mov
(bad)
sub
add
cwde
xor
imul
xchg
mov
mov
or
xchg
pop
sbb
in
dec
push
dec
or
mov
nop
or
adc
pop
call
jecxz
ins
ins
je
addr16
sbb
lock
push
add
ins
sbb
pop
sub
(bad)
(bad)
(bad)
push
aam
(bad)
xor
das
sub
pop
push
scas
test
sub
jecxz
mov
mov
call
add
sbb
in
pop
daa
cmp
inc
or
stos
mov
and
pop
(bad)
test
addr16
(bad)
call
repz
out
mov
clc
dec
and
xchg
popf
(bad)
xchg
add
pop
aam
mov
mov
jmp
enter
push
cli
(bad)
(bad)
(bad)
and
adc
mov
sub
enter
(bad)
shl
mov
sbb
sub
or
mov
xor
inc
mov
test
(bad)
mov
movs
pop
xor
push
xchg
lods
mov
cwde
ficom
mov
enter
shl
icebp
mov
jo
mov
das
retf
(bad)
dec
enter
pushf
lea
imul
scas
test
cmp
popaw
mov
data16
push
popa
jmp
cmp
in
xor
pusha
push
outs
inc
mov
retf
aam
push
call
pusha
sbb
push
jne
push
xchg
out
into
or
(bad)
fimul
sub
(bad)
(bad)
(bad)
inc
or
hlt
inc
fs
ret
sub
or
icebp
inc
add
(bad)
inc
cmps
cld
xchg
icebp
call
or
jmp
sub
ja
mov
cmp
pop
add
pop
loopne
mov
inc
ret
jne
inc
imul
pop
sub
outs
loopne
sbb
movs
add
cld
pop
dec
or
je
mov
mov
out
inc
sub
shr
or
pop
add
jmp
dec
jbe
popf
push
loope
arpl
pop
(bad)
(bad)
(bad)
fild
adc
mov
call
push
mov
pusha
addr16
sti
sub
adc
push
hlt
dec
add
call
fnstsw
rcl
jecxz
mov
sbb
(bad)
(bad)
jmp
test
ss
cmp
push
sbb
adc
sbb
push
pop
and
hlt
data16
loopne
pop
xchg
nop
inc
rcr
call
jge
jo
js
sbb
jmp
pop
push
jecxz
jo
sub
(bad)
jmp
add
movups
adc
aaa
psubusw
inc
aaa
in
ret
movs
xor
pusha
loope
pop
jmp
(bad)
jg
push
adc
push
outs
add
mov
ins
in
add
adc
cdq
nop
cmps
dec
ja
or
pusha
jo
mov
dec
adc
inc
dec
push
pop
pop
jb
mov
cwde
mov
call
ret
mov
jle
sbb
add
fs
or
popa
hlt
enter
sbb
jo
sub
(bad)
(bad)
(bad)
call
add
(bad)
clc
or
sbb
mov
cmps
mov
aaa
sbb
push
add
ins
dec
(bad)
jle
lods
aad
adc
xor
jl
sub
movs
pop
sti
adc
in
mov
data16
call
arpl
cmp
xor
out
push
test
(bad)
(bad)
(bad)
dec
test
ds
jmp
xor
cmp
and
(bad)
in
scas
or
mov
push
icebp
scas
sbb
imul
and
lahf
loop
jb
cli
(bad)
dec
dec
jo
leave
rcl
pop
pusha
adc
aas
outs
push
xchg
(bad)
(bad)
fisttp
fld
jo
and
movs
inc
test
pop
pop
and
fs
cmps
pop
loope
fucomi
aas
cdq
xor
add
adc
sbb
cld
fcomip
(bad)
jns
(bad)
fcom
push
test
inc
sub
adc
pop
test
xchg
push
repnz
mov
cmp
(bad)
cmp
lock
sub
(bad)
(bad)
call
stos
adc
pop
jg
cmp
cmp
shr
cmp
push
jg
mov
push
pop
push
cmps
outs
xchg
aas
cmps
mov
mov
pop
pushf
ret
push
lods
fwait
jp
dec
cmp
xor
call
sbb
cmps
inc
xchg
daa
adc
shl
push
mov
inc
add
enter
mov
push
fcom
pop
psrlq
sub
xor
jp
lea
or
add
(bad)
(bad)
(bad)
jg
fadd
mov
or
lds
pop
stc
pop
xchg
add
test
add
xchg
xchg
and
test
inc
jbe
push
std
push
jnp
or
cmp
xlat
jb
and
outs
iret
sbb
pop
js
jg
(bad)
(bad)
(bad)
inc
sub
or
adc
jmp
pop
sti
and
sub
mov
(bad)
(bad)
dec
sub
xchg
and
and
mov
jb
or
lock
ret
add
(bad)
jg
inc
pop
xor
inc
loope
inc
inc
popa
push
push
inc
and
or
mov
(bad)
fucomi
pop
push
add
outs
cmc
and
outs
xor
mov
imul
sbb
cmc
(bad)
jg
call
or
sar
xchg
jnp
mov
jae
(bad)
(bad)
jg
sub
ret
stos
mov
or
enter
mov
daa
jecxz
(bad)
(bad)
push
and
mov
sub
add
das
adc
test
push
push
or
and
(bad)
jmp
mov
push
fidiv
movs
(bad)
jg
jg
sub
mov
xor
ja
pop
xchg
(bad)
sbb
sub
sbb
stos
sub
mov
mov
sub
(bad)
(bad)
jg
add
out
dec
jmp
and
or
punpckhdq
xor
sbb
sub
(bad)
call
or
pushf
dec
or
xchg
leave
jne
sahf
adc
addr16
pop
mov
sbb
aas
(bad)
(bad)
(bad)
push
dec
mov
or
add
and
shl
push
jg
pop
imul
(bad)
(bad)
inc
xchg
adc
sahf
imul
pop
dec
adc
fdiv
or
push
(bad)
(bad)
jmp
shl
xor
loopne
pop
(bad)
inc
repnz
mov
inc
sub
or
scas
sub
dec
sub
inc
movs
hlt
adc
call
inc
sar
add
or
lock
adc
cmovg
jbe
je
push
cli
out
adc
xchg
mov
mov
inc
cs
ins
mov
xchg
arpl
mov
dec
fidivr
rol
xor
jmp
sbb
jo
or
pop
out
sti
iret
fbstp
adc
pusha
sahf
out
jg
in
mov
lea
(bad)
call
or
loope
js
jp
push
call
jmp
mov
(bad)
(bad)
(bad)
mov
xchg
cmc
sub
cmp
and
dec
adc
cmps
xlat
div
or
sub
jne
test
mov
hlt
pop
data16
(bad)
dec
push
or
add
loopne
dec
adc
sbb
mov
jne
mov
mov
xchg
push
sbb
pusha
fstp
or
fild
inc
dec
fbld
adc
sub
out
call
inc
aaa
enter
add
jae
add
bound
jmp
inc
call
adc
jge
push
out
mov
xchg
dec
mov
and
dec
sbb
outs
jb
popf
jmp
jae
lea
and
(bad)
(bad)
fild
ret
xor
xlat
or
inc
jge
adc
arpl
cmps
std
mov
cmps
aas
lea
sbb
in
jae
outs
ret
fadd
jnp
fld
sub
inc
mul
add
sub
or
push
jmp
test
mov
out
in
cmp
ret
(bad)
loopne
(bad)
jmp
adc
sbb
test
shl
push
and
lods
ss
fild
jo
int3
sub
cmp
mov
sub
cmp
xchg
add
push
push
fldpi
clc
(bad)
(bad)
jmp
xor
add
sbb
lea
xchg
cmp
inc
sub
in
pop
jns
mov
jp
pop
scas
sti
rcr
repz
scas
js
cmp
(bad)
(bad)
(bad)
jmp
and
cmp
neg
jns
sbb
ja
dec
jno
cmp
fild
call
or
inc
pop
daa
sub
push
adc
shl
cli
(bad)
(bad)
jg
inc
mov
add
inc
push
adc
mov
xchg
aam
push
mov
lods
ins
sbb
jle
popf
inc
xor
dec
xchg
adc
(bad)
(bad)
(bad)
fdiv
mov
xor
test
aad
in
or
je
mov
pop
jnp
jl
add
push
cld
(bad)
(bad)
pop
shl
jle
sbb
fld
test
jg
cld
fwait
mov
enter
mov
mov
xchg
sbb
(bad)
out
sbb
dec
mov
dec
inc
sub
lock
jmp
mov
jno
shl
add
nop
scas
clc
(bad)
jmp
mov
inc
bound
pop
mov
mov
psubusb
add
ret
mov
ds
int3
inc
xchg
(bad)
(bad)
dec
xor
xchg
adc
loopne
xchg
imul
repnz
in
popa
fs
pop
adc
sar
jmp
sbb
dec
int
test
dec
and
or
lods
pop
mov
mov
jp
sti
push
(bad)
(bad)
call
add
jecxz
dec
daa
jle
xor
in
arpl
jnp
push
jecxz
xor
(bad)
inc
ret
or
lock
and
js
xchg
mov
data16
xchg
dec
add
into
dec
call
(bad)
(bad)
mov
mov
iret
and
adc
jbe
and
push
inc
mov
jle
(bad)
jmp
mov
fwait
cdq
add
inc
pop
aam
sahf
push
xchg
and
sub
fs
pop
icebp
jg
push
or
lea
pop
adc
out
push
and
inc
inc
adc
add
pop
test
push
adc
adc
icebp
(bad)
(bad)
push
add
sbb
jmp
int
ins
jg
(bad)
(bad)
xchg
xor
cmp
sar
or
hlt
lock
(bad)
push
nop
push
movs
cld
inc
cmp
ins
pop
test
or
ins
loope
push
js
push
mov
(bad)
dec
cli
ret
cmp
shl
leave
rol
(bad)
jne
rcr
test
mov
(bad)
jg
add
imul
(bad)
push
idiv
(bad)
(bad)
call
adc
adc
or
mov
js
in
sub
(bad)
imul
int
jmp
(bad)
jmp
mov
aaa
fsubr
sbb
xchg
xlat
dec
ret
sub
mov
or
in
fiadd
clc
(bad)
call
retf
jmp
das
mov
and
(bad)
inc
sub
movs
mov
inc
push
test
jl
push
das
xchg
and
jo
popf
fcom
cmp
jo
nop
sbb
xor
sub
popa
fiadd
std
sub
cmp
retf
mov
call
and
and
xor
dec
cmp
(bad)
fcomip
dec
xchg
pop
cli
repnz
cmp
fs
aaa
test
cmps
pop
rcl
call
fist
les
dec
mov
or
(bad)
(bad)
jg
mov
jge
lods
sub
rcl
pop
repnz
mov
(bad)
(bad)
inc
imul
je
xor
or
mov
mov
jmp
or
sahf
push
xchg
mov
jno
mov
fld
xor
es
xor
push
and
cld
addr16
lods
xor
jg
mov
(bad)
(bad)
out
lock
fisttp
mov
inc
int3
out
aam
lock
adc
pusha
loop
and
jnp
push
or
sbb
(bad)
(bad)
inc
jp
rcr
inc
xchg
pusha
or
jb
or
jns
or
sbb
loopne
push
add
pop
jae
push
aas
cmps
idiv
push
dec
cmc
mov
clc
(bad)
mov
mov
push
sbb
jecxz
adc
movs
imul
out
xchg
adc
push
sub
test
rcl
and
(bad)
(bad)
(bad)
(bad)
cmp
and
push
ret
lock
imul
das
mov
cli
scas
or
sbb
cmp
(bad)
(bad)
(bad)
jmp
mov
out
xchg
aas
add
xchg
sub
ss
add
cmp
push
ins
or
dec
push
(bad)
(bad)
call
les
pop
sbb
sbb
inc
mov
pop
and
(bad)
(bad)
inc
sub
pusha
push
es
fs
xor
pop
dec
push
stos
add
iret
pusha
pop
add
(bad)
(bad)
inc
sbb
pop
adc
sbb
xchg
cwde
jno
dec
or
clc
pop
mov
push
loop
push
lock
(bad)
sub
mov
nop
lock
ret
mov
call
inc
in
sbb
jmp
xor
nop
add
sar
inc
das
adc
sbb
or
clc
push
aaa
ret
rol
push
pop
add
mov
inc
or
push
push
leave
js
pop
sub
(bad)
call
sub
cmp
push
push
dec
mov
add
dec
cdq
clc
(bad)
inc
cmc
dec
and
inc
daa
pop
dec
ret
clc
push
and
lds
sbb
pop
(bad)
(bad)
(bad)
jmp
pop
test
and
mov
imul
and
and
adc
stc
add
mov
(bad)
jmp
leave
shl
inc
pop
sub
sub
enter
or
ins
sub
popa
mov
aas
scas
sub
(bad)
(bad)
(bad)
(bad)
clc
loopne
add
jno
popa
std
mov
cwde
dec
sbb
pop
popf
inc
pop
ror
or
(bad)
jg
push
test
push
sub
das
adc
mov
and
xchg
xor
call
xor
xor
sar
(bad)
(bad)
(bad)
inc
or
ins
dec
jmp
loopne
jb
(bad)
sub
(bad)
or
sub
pop
mov
(bad)
or
add
fild
(bad)
cmp
ins
rcl
mov
aad
outs
(bad)
push
pop
jno
imul
mov
mov
push
shl
push
sbb
clc
(bad)
call
mov
sbb
adc
dec
dec
add
(bad)
(bad)
jg
sub
cmc
in
push
inc
int3
inc
or
je
or
call
sub
sub
xor
sub
test
bound
pop
push
push
imul
mov
jmp
imul
adc
jg
sub
or
ss
sbb
mov
je
loopne
ja
sar
or
(bad)
jp
mov
cmp
pop
pusha
pop
mov
lods
pop
adc
xor
jecxz
(bad)
jmp
and
adc
rol
sub
pop
rcl
cs
(bad)
(bad)
mov
int3
pushf
jge
or
push
push
add
mov
daa
push
and
add
add
jae
xor
pop
icebp
add
sub
sub
mov
in
dec
mov
inc
or
ret
ja
iret
inc
movs
loopne
and
inc
aam
add
mov
out
adc
sbb
xchg
dec
jns
jo
jmp
push
sub
or
or
outs
jbe
add
push
je
addr16
sbb
mov
xchg
and
cmp
xchg
movs
ds
idiv
(bad)
(bad)
fcomp
sbb
cmp
mov
cmps
jmp
xor
adc
jne
push
dec
ret
cwde
ret
sbb
pop
jne
inc
push
div
(bad)
(bad)
(bad)
call
pop
in
and
movs
add
stos
pop
rcr
test
cmp
pop
daa
cmp
inc
call
cld
cmp
clc
mov
sbb
mov
add
shl
or
xor
lods
pop
dec
pop
add
dec
inc
dec
cli
add
push
ja
jae
mov
test
mov
sub
ret
(bad)
mov
pop
cs
xchg
dec
fnstenv
sub
ins
(bad)
(bad)
jmp
inc
push
adc
xchg
in
adc
(bad)
mov
pop
data16
imul
clc
pop
sub
mov
and
fsubr
add
inc
das
add
mov
inc
push
(bad)
(bad)
jg
fld
(bad)
mov
jo
ffreep
in
mov
(bad)
and
add
add
jmp
jmp
pop
sub
cmp
push
dec
ret
add
push
add
jmp
mov
xor
dec
outs
adc
loopne
xlat
out
push
or
sbb
mov
ror
push
mov
(bad)
(bad)
call
call
sub
dec
test
adc
mov
mov
sar
rcl
adc
add
imul
ret
jbe
jp
aam
add
mov
or
add
outs
daa
loopne
sbb
jg
fild
adc
and
dec
dec
fnstcw
(bad)
(bad)
aas
jmp
mov
aam
daa
arpl
fwait
call
repz
push
mov
inc
in
xchg
out
push
fmul
cmp
add
lods
ret
and
dec
lods
sub
xchg
popa
inc
les
jg
mov
push
sbb
xor
(bad)
(bad)
jmp
dec
(bad)
or
cmps
into
mov
ins
or
ins
loope
fsqrt
xchg
cmc
stos
cwde
jp
push
shr
xchg
mov
jmp
cmps
jmp
cld
xchg
inc
xchg
inc
enter
xchg
ins
mov
(bad)
mov
sbb
dec
cdq
dec
jg
sub
mov
mov
js
add
outs
or
inc
inc
and
xchg
fisub
popa
cld
(bad)
lea
nop
sbb
outs
sbb
mov
jge
jb
into
loope
or
mov
adc
ins
lds
mov
(bad)
jmp
jle
pop
sub
push
aaa
sub
add
xchg
test
push
mov
add
dec
clc
or
mov
sbb
int
push
pop
loopne
call
pavgb
enter
jae
xchg
test
sbb
loopne
call
jmp
fist
jo
adc
cli
or
pop
add
xchg
adc
inc
hlt
inc
outs
sbb
lods
fst
ror
lds
or
push
sbb
mov
cmps
jns
add
jns
shl
ret
clc
mov
pop
xchg
pop
sbb
push
add
sbb
pop
pop
cli
inc
les
add
sub
and
clc
pop
enter
(bad)
push
and
push
ss
sbb
data16
and
push
push
in
jae
mov
fld
fiadd
pop
pop
imul
inc
daa
daa
(bad)
loop
xchg
xor
add
push
xchg
lock
fiadd
xchg
push
dec
push
loop
add
or
inc
cmp
add
lds
jecxz
lock
push
sub
xor
(bad)
mov
shl
pusha
imul
inc
adc
pop
sub
inc
cmp
je
inc
xor
jmp
add
rol
mov
cwde
or
xchg
inc
fsubr
add
jg
call
imul
cs
call
enter
mov
(bad)
mov
in
push
loopne
mov
sbb
and
mov
dec
or
inc
(bad)
(bad)
(bad)
jmp
lods
add
or
dec
or
pop
xchg
mov
mov
jno
cdq
or
imul
cmp
mov
xlat
pop
adc
aam
int3
jmp
jbe
sbb
sub
test
(bad)
fild
daa
add
shl
mov
push
in
int3
std
ins
fadd
fild
aaa
or
add
push
cld
pop
add
add
lods
inc
adc
inc
stos
add
in
push
pop
mov
pop
(bad)
(bad)
(bad)
inc
imul
pusha
mov
shr
cwde
sbb
jmp
cmp
(bad)
push
adc
mov
in
pusha
js
mov
add
test
mov
xchg
cmp
dec
in
in
dec
mov
sbb
in
loope
push
(bad)
mov
mov
mov
pop
dec
and
push
fs
jmp
test
call
sbb
adc
and
and
add
lock
sub
adc
mov
jmp
fs
push
mov
jmp
add
adc
inc
cmp
pop
pusha
or
(bad)
sub
jne
and
clc
(bad)
(bad)
push
je
push
rcr
add
inc
push
xor
and
adc
mov
(bad)
mov
pop
cdq
xchg
or
sbb
scas
fild
call
add
int
fwait
(bad)
cmp
mov
push
and
das
test
(bad)
(bad)
(bad)
mov
add
mov
xlat
push
aam
mov
mov
fmul
pop
add
add
jnp
or
int
adc
push
inc
push
sbb
ror
sar
bnd
xchg
cmp
mov
sub
pop
(bad)
dec
call
and
cmp
out
rol
push
dec
dec
pop
fwait
mov
push
jnp
mov
std
or
mov
(bad)
adc
cld
cmp
(bad)
push
fimul
or
fdivr
in
xchg
loop
xchg
popa
cld
or
dec
outs
adc
(bad)
(bad)
push
mov
pop
ja
push
jno
cwde
int
enter
xchg
mov
jg
mov
cmp
jmp
sar
mov
jne
inc
fs
or
outs
xor
push
in
add
sbb
push
nop
inc
(bad)
push
call
xor
mov
push
jecxz
and
mov
fs
mov
call
add
test
out
(bad)
(bad)
(bad)
jmp
jle
or
cmp
ror
xor
and
(bad)
mov
xchg
mov
adc
sbb
mov
inc
jo
loopne
jmp
sbb
xchg
adc
mov
ror
xlat
adc
adc
das
clc
sub
aas
inc
pusha
dec
and
mov
rol
stc
or
inc
adc
dec
cmp
(bad)
mov
jl
sbb
(bad)
or
jmp
mov
and
inc
pslld
inc
mov
in
or
add
or
jg
pop
dec
sbb
xlat
pop
inc
mov
arpl
dec
push
inc
push
and
xor
dec
rcr
push
or
(bad)
jmp
inc
sub
push
xor
add
jmp
jl
lea
mov
popa
cld
cs
clc
add
(bad)
(bad)
ficom
sbb
(bad)
mov
mov
push
lds
push
inc
leave
iret
clc
and
jne
fadd
dec
add
xor
dec
lea
add
fadd
add
push
cld
push
rcl
inc
cmp
jecxz
mov
pop
pop
inc
out
jmp
xor
jmp
mov
(bad)
punpckhbw
or
adc
sbb
push
mov
inc
push
sahf
xchg
clc
and
fwait
inc
(bad)
sbb
jg
sbb
leave
pop
(bad)
call
(bad)
dec
and
pop
sbb
mov
push
popa
or
loopne
xchg
dec
mov
mov
(bad)
call
and
cmps
cdq
ins
pop
scas
and
loope
cli
xor
aam
(bad)
(bad)
jmp
lea
pushf
mov
shl
ins
cmp
mov
das
dec
inc
popa
int3
(bad)
inc
sbb
adc
add
push
pusha
or
jmp
push
and
adc
jg
jg
xor
jmp
sub
sub
add
sbb
xchg
cmps
scas
add
pop
sub
cmp
or
cmps
enter
es
test
cmp
dec
call
jmp
add
cdq
xchg
ds
shr
cmc
xor
(bad)
(bad)
fisttp
mov
addr16
test
push
mov
scas
js
jmp
(bad)
(bad)
inc
es
or
jmp
shl
xor
push
mov
cmp
add
ficom
xor
jne
sar
jmp
inc
pusha
sub
sub
test
cmc
jmp
dec
jbe
adc
pusha
xor
sahf
push
outs
push
lock
enter
rcl
dec
daa
push
dec
aas
out
lahf
pop
rcr
cmp
dec
out
test
cmp
sub
and
je
jle
js
clc
pusha
and
jmp
and
sub
and
mov
push
bswap
imul
jg
adc
push
push
js
clc
inc
push
push
jle
fnstenv
lea
in
push
push
jecxz
cs
mov
enter
sub
pop
or
je
ss
jns
jno
int3
icebp
shr
mov
out
mov
inc
push
out
dec
inc
sbb
sbb
sar
retf
cmp
or
xchg
mov
nop
sub
sar
mov
(bad)
(bad)
(bad)
jg
push
mov
mov
mov
add
inc
pop
jp
dec
or
bound
mov
adc
loope
test
(bad)
inc
cwde
test
cmps
dec
push
sbb
and
or
(bad)
jmp
push
pushf
sbb
cld
movs
loopne
xchg
mov
rcl
sub
or
jmp
test
stos
lock
add
(bad)
jg
jns
jo
(bad)
(bad)
(bad)
mov
and
sbb
pusha
xor
cmp
dec
cmp
pop
ret
aas
and
push
add
jp
(bad)
(bad)
(bad)
(bad)
js
ret
mov
jge
(bad)
sbb
add
arpl
and
loopne
(bad)
(bad)
dec
pusha
jge
adc
xor
sub
shl
mov
rol
and
cmps
xor
xchg
xchg
dec
mov
push
mov
ins
sub
push
adc
cdq
sbb
adc
add
cld
dec
pop
adc
cld
jg
xchg
(bad)
sub
xchg
sub
jmp
jg
movs
push
mov
mov
jge
test
icebp
pop
pop
(bad)
jmp
mov
ss
(bad)
es
popa
cmp
addr16
not
mov
call
add
and
jo
mov
imul
jnp
xor
xor
(bad)
(bad)
jmp
cmps
mov
sbb
mov
or
fist
aaa
and
dec
cmp
(bad)
(bad)
(bad)
jp
xchg
movs
arpl
pop
pusha
mov
imul
xchg
xchg
clc
pushf
inc
rcr
jecxz
inc
or
dec
add
push
cmp
pop
cmps
xor
(bad)
fild
inc
ret
push
jl
retf
sysenter
in
(bad)
(bad)
(bad)
call
inc
pusha
enter
dec
jmp
dec
jne
outs
fisub
jecxz
loope
scas
enter
lds
imul
ins
fs
ret
cs
sub
ret
call
loopne
popf
inc
or
test
and
dec
add
js
xchg
(bad)
(bad)
(bad)
inc
push
pop
pop
inc
adc
add
test
mov
cmp
pop
aaa
xchg
inc
push
fcmovu
fsubr
cdq
(bad)
(bad)
(bad)
call
mov
or
ret
sbb
stos
mov
cmp
movs
cmp
(bad)
jnp
dec
sub
add
xor
(bad)
mov
push
das
pop
and
xor
retf
call
in
add
inc
out
stos
(bad)
call
push
lods
push
imul
jne
sbb
outs
popw
add
push
pop
movs
mov
or
xchg
mov
call
mov
cmc
add
fstp
sub
aas
pop
inc
shl
outs
add
add
ss
jmp
test
or
jl
mov
lea
call
dec
xchg
push
add
or
(bad)
or
cmp
inc
jge
lock
clc
(bad)
jmp
inc
pop
mov
in
rcr
xchg
or
push
test
test
ret
adc
add
and
not
imul
mov
(bad)
(bad)
(bad)
call
test
adc
add
jne
repz
(bad)
call
xchg
pop
jge
jne
pusha
movs
(bad)
(bad)
(bad)
call
adc
mov
inc
jo
ret
stos
mov
iret
sub
(bad)
jmp
in
push
or
xor
push
mov
add
(bad)
(bad)
(bad)
(bad)
cmp
push
mov
rol
icebp
inc
or
mov
mov
mov
shl
pop
sar
(bad)
inc
shl
pop
rcl
jle
mov
cwde
movs
mov
adc
(bad)
inc
mov
popa
sub
or
ja
push
jne
out
mov
push
push
adc
add
repnz
loope
sbb
(bad)
jg
sbb
adc
push
aam
or
xor
stos
call
mov
mov
push
rol
xchg
jns
add
(bad)
(bad)
inc
mov
xor
or
dec
mov
(bad)
fidiv
pop
cmp
ja
fcomp
enter
jmp
test
dec
mov
unpckhps
push
sub
pop
mov
iret
daa
push
retf
arpl
fcomip
jmp
cmc
clc
mul
repz
pusha
in
inc
xchg
add
cmp
mov
in
clc
mov
inc
test
aaa
push
cmp
adc
jmp
xor
in
xchg
aas
inc
inc
lods
sub
(bad)
call
aam
or
aam
mov
push
shl
or
sti
cmp
jmp
sbb
and
cmp
xor
sar
mov
sub
or
mov
xchg
xchg
add
test
aas
jge
xchg
jo
lds
repnz
enter
jmp
(bad)
(bad)
(bad)
jmp
pop
ror
adc
scas
add
mov
mov
(bad)
(bad)
(bad)
inc
fst
cld
and
pop
mov
push
xor
in
(bad)
movs
or
pop
or
jmp
(bad)
jg
inc
cli
scas
call
int3
inc
push
shl
sub
loopne
test
adc
(bad)
(bad)
jmp
cmp
ds
mov
test
add
nop
mov
mov
inc
cmps
inc
adc
add
scas
and
mov
movs
push
or
lods
jnp
and
xor
mov
fild
pop
movs
pusha
popa
fst
adc
jmp
(bad)
and
das
cli
lea
jo
mov
(bad)
pop
mov
jmp
xor
sbb
xor
adc
inc
mov
jmp
jecxz
mov
(bad)
(bad)
call
inc
and
jp
pop
or
adc
or
inc
repz
add
push
pop
push
(bad)
jg
(bad)
fiadd
mov
or
push
push
ss
fcomp
jno
iret
call
jb
into
and
xor
retf
cmp
push
stos
pop
les
pop
test
inc
add
xlat
adc
mov
sub
push
sti
push
shl
(bad)
inc
xchg
add
inc
jmp
fcom
(bad)
inc
push
call
xchg
test
popf
xchg
(bad)
sbb
jmp
mov
aas
(bad)
mov
out
xchg
mov
jo
add
pop
adc
leave
and
inc
and
cmps
add
cld
adc
add
movs
daa
sbb
add
push
inc
popa
in
or
push
fiadd
pop
pop
and
inc
ins
dec
pop
scas
arpl
(bad)
(bad)
(bad)
mov
imul
mov
aam
(bad)
cwde
dec
sub
or
and
in
in
daa
or
daa
je
push
fimul
inc
mov
mov
mov
sub
leave
push
sar
(bad)
inc
test
mov
inc
(bad)
rcr
sub
ret
pop
scas
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
jg
enter
imul
cmc
cmp
sbb
lods
xchg
mov
cld
(bad)
(bad)
(bad)
cli
call
iret
fcomp
jo
cmp
popa
or
jge
cmp
ins
enter
lods
call
adc
popa
sub
mov
fcomip
outs
ins
pop
adc
fbstp
mov
cmp
arpl
or
outs
(bad)
mov
mov
das
sbb
adc
and
(bad)
rcl
pop
fs
push
mov
xor
call
sbb
(bad)
(bad)
(bad)
inc
lds
aaa
mov
or
inc
or
add
dec
pushf
call
sub
mov
(bad)
lock
cld
(bad)
call
mov
xchg
iret
ret
push
xor
or
sub
pop
xlat
adc
pop
add
mov
dec
ret
or
test
xchg
pop
mov
push
vmovntps
mov
call
jnp
mov
inc
retf
ror
jecxz
std
mov
add
and
jmp
push
aam
adc
movs
stos
aad
dec
dec
in
ret
mov
sbb
mov
sub
pop
jl
aas
cmp
not
mov
inc
mov
jg
dec
mov
(bad)
sahf
test
inc
cs
push
aas
(bad)
(bad)
mov
daa
test
push
and
inc
adc
(bad)
xor
loopne
jb
and
cmovae
dec
(bad)
(bad)
(bad)
(bad)
dec
adc
scas
jne
xlat
mov
stos
mov
xchg
lock
xor
pop
mov
push
add
xor
ret
mov
scas
mov
push
ret
fisubr
sbb
xor
inc
push
or
test
addr16
jno
out
(bad)
das
cli
inc
sub
jmp
enter
clc
mov
add
mov
jnp
ins
shr
loopne
adc
dec
sbb
(bad)
(bad)
jg
call
int3
jecxz
rcl
dec
cmp
fiadd
push
fadd
or
jbe
in
mov
sub
test
movs
push
fwait
ins
data16
retf
cmc
sbb
ffreep
jno
dec
and
fldcw
repz
(bad)
inc
xor
(bad)
jo
mov
nop
or
repnz
(bad)
(bad)
mov
pop
xor
pop
mov
test
mov
pusha
mov
cmp
(bad)
(bad)
(bad)
jmp
mov
aam
jg
mov
int
test
(bad)
sbb
dec
mov
dec
push
adc
mov
sub
sub
push
pushf
xor
cmp
sahf
leave
dec
mov
les
adc
(bad)
call
adc
or
inc
mov
movs
cmp
cli
mov
clc
mov
call
xor
xor
lahf
dec
rcl
sbb
fcomip
(bad)
mov
or
adc
mov
rol
std
(bad)
cmp
xchg
enter
mov
es
cmp
test
push
outs
ror
sbb
add
(bad)
sbb
aaa
dec
xor
sub
mov
push
stos
inc
mov
xor
cmps
(bad)
(bad)
push
xor
add
add
pop
add
fiadd
push
jb
mov
(bad)
(bad)
dec
js
pop
jg
dec
add
cdq
shl
xchg
mov
inc
adc
or
jnp
(bad)
(bad)
mov
push
cmps
push
inc
push
xor
or
stos
adc
(bad)
add
jge
mov
cld
nop
add
xchg
lods
add
push
jmp
aam
push
std
(bad)
(bad)
jl
mov
nop
add
add
or
cdq
dec
xor
inc
addr16
aad
(bad)
call
push
pop
add
mov
neg
mov
pop
mov
and
dec
sub
mov
aas
test
cmovno
(bad)
(bad)
in
popf
xor
shrd
and
or
or
retf
mov
add
cmp
out
dec
xchg
shr
aam
test
ins
aaa
xchg
mov
push
popf
sub
loop
dec
lock
add
jns
dec
daa
jl
mov
scas
dec
sub
inc
mov
sbb
lods
xor
(bad)
(bad)
call
jle
sbb
adc
je
push
pop
fisubr
dec
mov
pop
dec
mov
pop
test
inc
push
mov
lods
adc
dec
cmps
mov
mov
mov
pop
and
dec
jg
aad
xchg
mov
mov
push
mov
pop
leave
mov
(bad)
(bad)
(bad)
dec
xchg
loop
jbe
fsubr
jne
add
pop
and
pop
xchg
inc
pop
mov
lods
dec
loope
pop
mov
add
int
sub
or
lea
inc
adc
in
mov
dec
cmp
pop
lahf
add
sbb
or
cmp
(bad)
(bad)
pop
mov
neg
cmp
pop
gs
or
sbb
adc
xchg
xor
add
push
ret
cs
ror
pop
xor
xchg
lea
sbb
sub
or
add
adc
or
lock
pop
adc
pop
xchg
and
shl
mov
sbb
add
hlt
retf
sub
(bad)
(bad)
dec
and
pusha
push
mov
inc
sbb
ror
jecxz
rcl
(bad)
(bad)
inc
in
inc
lea
jmp
adc
cmps
inc
xor
es
popf
ret
(bad)
(bad)
(bad)
dec
mov
xor
jl
push
pop
mov
xchg
mov
repnz
test
xchg
and
imul
(bad)
in
push
or
xor
ss
push
adc
mov
(bad)
(bad)
out
clc
sbb
(bad)
and
adc
jmp
sub
mov
lods
call
test
mov
les
adc
mov
rol
pop
pushf
or
push
test
movs
dec
sbb
xrelease
or
enter
sbb
sar
call
enter
dec
push
jbe
dec
add
ins
fiadd
call
pop
sti
jae
mov
dec
mov
inc
mov
pop
jns
or
inc
inc
(bad)
jmp
xchg
mov
sub
adc
push
imul
sub
(bad)
call
cmps
sti
nop
loope
inc
xchg
je
pop
ins
and
push
adc
push
jmp
and
ficom
sahf
test
out
dec
push
inc
mov
inc
jae
out
xor
or
outs
sub
not
stos
jo
ss
(bad)
(bad)
inc
jns
jns
jo
(bad)
mov
sbb
push
push
cmps
cmp
dec
arpl
outs
cmp
cld
aam
loop
dec
sbb
fidivr
fs
push
jp
(bad)
(bad)
out
pop
out
lahf
(bad)
out
add
ds
fs
sbb
sbb
icebp
sbb
(bad)
in
ja
scas
dec
outs
pop
mov
or
inc
cmp
in
js
outs
out
adc
loop
gs
arpl
jg
(bad)
stos
and
or
add
jae
call
ret
mov
call
cmp
mov
faddp
cmp
dec
xchg
fimul
sar
pop
test
cmp
dec
cmp
push
add
dec
das
popa
cmp
repz
daa
lahf
push
add
inc
mov
(bad)
jg
call
jle
push
cmp
cmp
cmp
retf
add
(bad)
(bad)
(bad)
jmp
mov
or
add
stos
push
mov
adc
outs
xlat
jo
adc
je
push
mov
dec
sti
arpl
(bad)
(bad)
(bad)
jns
iret
adc
(bad)
mov
arpl
mov
mov
inc
ins
or
mov
sub
push
jb
scas
mov
ds
movs
add
fs
out
xor
out
sub
popa
daa
push
push
jne
(bad)
jmp
mov
loopne
cmps
push
mov
shl
inc
test
pop
call
aaa
cmp
dec
sbb
cld
mov
push
mov
stos
cmp
test
cmp
xchg
(bad)
je
add
jmp
ret
pop
inc
cmps
ja
sub
je
mov
call
xchg
xor
inc
push
push
pop
js
shl
ins
mov
or
lahf
inc
(bad)
(bad)
(bad)
call
sbb
push
mul
mov
imul
mov
rcl
lahf
push
or
dec
mul
test
(bad)
(bad)
call
push
lahf
mov
add
sub
push
stos
inc
or
inc
lds
(bad)
ins
movlps
dec
(bad)
mov
daa
adc
sbb
aaa
push
(bad)
add
inc
adc
stos
mov
dec
lock
inc
add
sub
les
cmps
push
or
push
push
fbstp
mov
ret
adc
dec
cwde
ins
and
push
arpl
les
or
repnz
mov
(bad)
push
(bad)
mov
test
outs
stos
sbb
dec
adc
xlat
adc
stos
add
mov
mov
pop
inc
outs
mov
inc
pop
ins
(bad)
(bad)
jg
dec
or
outs
mov
xchg
push
and
xchg
pop
les
push
nop
repz
inc
ret
push
test
lds
adc
ins
adc
imul
pop
out
les
mov
xor
mov
(bad)
jmp
add
adc
jae
stos
mov
addr16
mov
(bad)
(bad)
(bad)
fisubr
aas
pusha
test
test
nop
inc
sub
ins
xor
push
pop
add
aaa
push
mov
jmp
inc
jl
popa
push
fild
les
loop
stos
call
mov
mov
or
aaa
adc
or
aas
icebp
mov
imul
inc
or
stos
add
aas
adc
jb
out
not
sub
ins
inc
fisttp
cs
push
ins
pop
push
test
ss
jg
ins
dec
pusha
pop
pop
jmp
sbb
fild
jmp
xchg
mov
fwait
test
xlat
push
inc
mov
xlat
inc
call
leave
sar
retf
jns
mov
aas
(bad)
jmp
inc
and
xor
sub
bound
push
stos
imul
(bad)
jg
(bad)
stos
mov
aaa
sub
mov
push
out
call
inc
call
fistp
jmp
dec
bound
daa
cmove
mov
jecxz
movs
mov
adc
or
jg
scas
(bad)
dec
pop
mov
pop
fst
stos
pop
lock
jne
sbb
xor
mov
ins
add
stos
push
(bad)
mov
cmp
fsub
fcomip
sub
dec
xchg
outs
mov
ror
clc
rol
dec
or
outs
jmp
jne
(bad)
call
(bad)
(bad)
call
and
ins
out
push
dec
add
dec
mov
je
sbb
adc
or
outs
mov
cmp
dec
inc
adc
nop
(bad)
ins
add
(bad)
(bad)
fidivr
mov
xlat
or
xchg
jb
imul
ss
mov
call
inc
(bad)
dec
sbb
(bad)
and
fdivr
bound
mov
or
(bad)
(bad)
(bad)
call
xlat
fsubrp
call
pop
movs
nop
jo
and
cmps
fisttp
push
adc
add
jg
(bad)
(bad)
(bad)
fild
ss
add
fdivr
rcr
dec
lahf
xor
jg
cmp
call
and
cmps
add
mov
lea
test
jp
(bad)
(bad)
call
mov
mul
xchg
push
xchg
xlat
lods
loope
jne
adc
or
test
lods
test
adc
(bad)
inc
add
jno
mov
(bad)
iret
movs
mov
sub
add
cmps
outs
imul
(bad)
inc
xor
and
inc
dec
sbb
aad
nop
cmp
clc
and
dec
clc
xor
mov
(bad)
inc
sub
mov
dec
pop
outs
or
enter
es
push
fnstsw
cmp
fisttp
sub
ficomp
or
retf
dec
fucomip
cld
dec
ins
xor
sbb
arpl
mov
fcomip
(bad)
cmp
or
inc
and
loopne
xchg
push
aam
les
(bad)
jmp
add
mov
cmp
sbb
dec
sub
in
jo
mov
(bad)
jmp
add
out
loop
add
aas
and
shl
pop
stos
and
xchg
jmp
outs
inc
icebp
push
mov
mov
loopne
push
fisubr
pop
std
add
(bad)
(bad)
inc
dec
xor
push
xchg
xchg
outs
xor
add
xchg
xchg
repz
xor
push
jnp
and
(bad)
fild
mov
fbstp
loope
dec
retf
or
mov
sub
(bad)
out
clc
inc
cld
test
xchg
push
test
sub
sbb
or
inc
test
cmp
js
aad
aam
add
(bad)
fnsave
lods
les
fs
dec
and
add
inc
inc
adc
loopne
dec
or
mov
outs
aas
dec
icebp
add
or
or
and
mov
sar
or
out
ss
sbb
sub
mov
sbb
push
icebp
xchg
or
clc
or
inc
imul
push
(bad)
(bad)
(bad)
dec
pop
ret
sahf
xor
xor
ret
aas
add
sub
cwde
test
add
(bad)
jmp
stc
sub
mov
ss
sbb
hlt
pop
dec
add
lea
aam
(bad)
sti
adc
mov
movs
cmp
retf
loopne
js
call
leave
das
sub
loop
pop
or
push
sbb
outs
push
stos
std
(bad)
jg
shr
push
adc
pop
(bad)
dec
jbe
inc
inc
inc
inc
push
inc
icebp
jmp
adc
and
and
dec
sahf
sub
ret
push
push
and
loop
imul
js
out
xor
jl
(bad)
(bad)
(bad)
call
add
or
add
push
popa
in
out
leave
add
add
add
pop
cld
aaa
rol
test
pop
add
sub
xlat
in
in
fstp
or
dec
call
or
mov
int
rol
add
inc
in
stos
inc
inc
loope
test
nop
es
(bad)
inc
clc
pop
xor
push
pop
sahf
xchg
popa
sbb
pop
imul
in
aas
out
in
test
pop
add
adc
pop
push
call
std
sbb
lfs
add
iret
mov
mov
(bad)
inc
adc
jge
repnz
(bad)
pop
or
jbe
nop
mov
sbb
loopne
stos
push
add
adc
fs
dec
push
push
jns
inc
pusha
pop
mov
sbb
sbb
jmp
cmp
movs
sub
sbb
fistp
inc
or
jg
adc
ins
adc
jnp
adc
and
(bad)
(bad)
(bad)
mov
shr
push
nop
xchg
and
push
pop
mov
jp
lahf
mov
(bad)
mov
sub
in
call
sbb
and
sbb
xor
adc
mov
jmp
inc
jmp
neg
pop
shr
pop
ins
inc
and
call
adc
push
and
das
neg
cmp
cmp
mov
cmp
and
adc
adc
dec
(bad)
(bad)
inc
mov
adc
or
call
add
dec
movs
(bad)
and
ficomp
sub
jle
cmp
sbb
adc
bound
(bad)
jg
sub
es
pop
push
dec
jbe
pop
dec
jmp
dec
cmp
(bad)
cld
(bad)
(bad)
call
sub
inc
cmp
mov
pop
adc
mov
dec
and
imul
ja
pusha
mov
lods
(bad)
fisttp
inc
pushf
cli
std
xor
icebp
sbb
pslld
test
fbld
add
and
mov
dec
clc
jb
xchg
icebp
pop
cmp
xacquire
(bad)
dec
and
sub
aad
push
push
jle
loope
pop
pushf
push
cld
loopne
and
mov
(bad)
(bad)
(bad)
inc
mov
sbb
pop
adc
adc
sbb
xor
pop
(bad)
cld
mov
(bad)
(bad)
call
movs
nop
push
add
jg
jge
lea
(bad)
(bad)
jg
push
inc
jb
xlat
xor
pop
sub
xor
cmps
imul
call
outs
jnp
xor
or
add
push
dec
adc
pushf
les
enter
jmp
adc
and
pop
push
comiss
test
shr
(bad)
(bad)
mov
or
or
scas
sbb
sbb
in
add
aad
jbe
addr16
inc
mov
jmp
ret
sbb
dec
lock
xchg
dec
fimul
fwait
loope
and
sbb
pop
inc
and
mov
cmp
push
cld
inc
push
sub
out
call
xchg
fmul
ins
test
je
push
add
push
push
cmp
pop
add
push
dec
pop
call
inc
into
inc
movs
(bad)
(bad)
aas
pop
pop
in
in
std
push
mov
movs
aaa
std
(bad)
(bad)
fcomp
cmp
inc
inc
sub
sbb
adc
mov
repz
dec
jnp
(bad)
(bad)
(bad)
jmp
jne
pop
inc
or
mov
sbb
push
add
sbb
std
clc
and
lahf
or
popf
dec
std
(bad)
das
xchg
inc
cs
(bad)
(bad)
cmp
cmps
sub
nop
imul
sbb
adc
and
cmp
sti
dec
or
cmp
jg
jne
(bad)
(bad)
(bad)
(bad)
jg
sar
push
lahf
adc
cmp
outs
call
loopne
mov
cmp
(bad)
cmp
push
in
push
ins
or
fadd
rol
inc
fcomp
nop
mov
mov
je
(bad)
(bad)
(bad)
call
jmp
adc
aad
sub
loopne
jge
fs
jne
out
sbb
ins
or
inc
(bad)
dec
lods
xchg
push
lock
idiv
(bad)
dec
scas
mov
out
or
dec
in
shl
call
popf
and
adc
std
push
lock
jp
dec
add
outs
mov
xor
mov
(bad)
fucomp
in
out
inc
mov
fstp
inc
(bad)
adc
imul
sbb
(bad)
(bad)
(bad)
push
xor
cmp
ss
add
pushf
sub
scas
pop
mov
(bad)
mov
jne
ss
imul
xchg
sub
bound
inc
sub
(bad)
push
je
in
mov
out
jmp
jl
pop
add
in
mov
call
add
rol
jns
adc
jp
sub
jmp
std
(bad)
(bad)
push
ret
push
in
icebp
inc
nop
and
or
lock
push
dec
adc
xor
adc
xchg
push
and
push
(bad)
lock
(bad)
(bad)
inc
(bad)
cmps
jle
add
mov
mov
add
and
lock
sbb
push
xchg
(bad)
(bad)
(bad)
(bad)
mov
dec
mov
mov
or
mov
xchg
hlt
xchg
clc
stc
and
ret
xchg
dec
add
jl
loope
mov
(bad)
mov
jo
paddq
dec
test
fistp
pop
mov
inc
idiv
call
cwde
in
cmp
test
imul
sti
sbb
dec
mov
push
lea
pop
pop
pop
pop
xor
(bad)
mov
movs
fwait
jge
adc
and
or
in
xor
(bad)
(bad)
(bad)
jp
inc
sbb
dec
lea
(bad)
fmul
(bad)
in
mov
test
(bad)
push
ins
loope
pop
adc
sahf
stc
icebp
hlt
dec
xor
adc
mov
add
or
loope
push
adc
jmp
sti
fwait
push
test
(bad)
(bad)
(bad)
call
rcr
js
push
call
sub
sub
cmp
sti
call
pop
or
mov
jg
dec
dec
adc
(bad)
xor
ror
lds
(bad)
aad
(bad)
jmp
dec
pop
xor
push
outs
jmp
mov
(bad)
call
ja
retf
add
and
or
sbb
cmp
sub
call
into
pop
loope
add
lock
fsub
ret
xchg
adc
mov
rcl
and
add
mov
mov
add
mov
scas
mov
mov
(bad)
cli
adc
imul
mov
rol
or
inc
dec
(bad)
call
adc
xchg
mov
xchg
push
adc
push
ds
test
aas
int3
(bad)
(bad)
(bad)
dec
xchg
aam
xchg
xchg
adc
dec
fsub
cmps
div
aaa
or
mov
inc
popa
mov
add
inc
mov
or
ss
ins
xor
mov
lahf
and
push
and
inc
cld
call
std
in
ins
xchg
jae
cli
ror
add
mov
or
jbe
sub
jmp
jg
sub
inc
push
push
xor
js
rcl
(bad)
(bad)
(bad)
call
mov
sub
sbb
repz
dec
push
icebp
push
mov
movs
jbe
jmp
mov
js
mov
jmp
ja
(bad)
call
test
jmp
fadd
imul
sar
pop
push
fdivr
(bad)
mov
and
ds
dec
jne
(bad)
mov
adc
les
nop
pop
dec
aam
sub
(bad)
(bad)
jmp
shr
mov
mov
xor
fisttp
xchg
test
aad
pop
or
add
(bad)
(bad)
(bad)
jmp
cmp
stos
inc
adc
xchg
mov
sar
inc
sub
(bad)
ds
inc
(bad)
(bad)
(bad)
inc
sub
shl
lods
ror
pop
fcmovnb
dec
mov
jne
xchg
daa
test
(bad)
push
fcomp
or
daa
(bad)
sar
or
mov
xchg
add
das
add
add
inc
or
mov
push
(bad)
(bad)
mov
lods
clc
xor
inc
jge
pop
push
jbe
sbb
push
jno
(bad)
call
mov
mul
leave
inc
or
pop
adc
jb
dec
inc
es
shl
imul
add
push
mov
push
or
cmp
pusha
adc
clc
in
add
pop
loopne
fisubr
inc
mov
aad
push
nop
add
xchg
and
inc
sbb
rcr
(bad)
(bad)
(bad)
push
or
xor
inc
push
inc
lea
sbb
sbb
dec
jl
scas
stc
jbe
daa
dec
ss
mov
stc
loopne
cld
mov
(bad)
(bad)
dec
mov
push
inc
xchg
add
add
mov
push
les
push
fsubr
fcmovu
xchg
fadd
mov
in
sbb
arpl
(bad)
jg
dec
or
cmp
jbe
push
adc
or
dec
aad
push
mov
sbb
push
ins
fisubr
pushf
mov
cmp
mov
(bad)
call
fisubr
jnp
fisubr
and
sahf
mov
dec
fistp
into
scas
lods
sbb
in
(bad)
jle
or
pushf
jbe
int
adc
cmp
cmp
push
push
xor
cs
xor
inc
adc
push
push
mov
cld
cli
mov
sub
rcr
lods
push
inc
push
pop
sar
(bad)
(bad)
cmp
mov
push
cmp
ds
sar
(bad)
push
cmp
jle
push
mov
or
mov
inc
inc
mov
out
mov
inc
je
aam
call
test
lods
fbld
stos
push
jp
cmps
outs
(bad)
dec
inc
inc
inc
mov
push
inc
push
mov
outs
sub
jl
sbb
enter
jmp
(bad)
adc
aam
inc
out
das
bound
test
das
test
mov
pop
add
(bad)
push
jo
sub
shl
xchg
fstp
iret
in
mov
or
ins
jnp
or
(bad)
addr16
push
pusha
sahf
es
xchg
mov
popa
out
mov
push
adc
and
ror
inc
push
cld
dec
cld
adc
out
ret
push
ss
push
sti
push
cs
clc
into
(bad)
(bad)
jmp
mov
adc
and
fmul
push
aad
aad
ins
mov
nop
mov
scas
nop
mov
pusha
test
sbb
and
add
or
pop
stc
push
inc
cmp
(bad)
call
lock
shl
add
push
jmp
(bad)
sbb
adc
pop
std
hlt
fbld
jmp
(bad)
ins
neg
pusha
pop
jmp
mov
jl
jno
mov
(bad)
(bad)
(bad)
push
stc
leave
rcr
push
retf
les
mov
rsqrtps
pop
mov
jg
call
popf
fstp
pop
xchg
cmp
fcom
add
xchg
fistp
sbb
call
lock
pop
add
adc
adc
sti
sub
sbb
mov
scas
jp
xor
stos
mov
(bad)
(bad)
(bad)
call
inc
fs
push
sbb
ins
pusha
(bad)
adc
jns
mov
cmp
dec
adc
(bad)
(bad)
jmp
lods
cli
fiadd
movs
js
xchg
fucomp
mov
in
xlat
dec
xchg
aas
pop
dec
jnp
stos
cld
(bad)
(bad)
mov
(bad)
(bad)
(bad)
pusha
and
jbe
scas
jl
or
add
add
mov
and
push
dec
int3
pusha
dec
or
ja
loope
ins
nop
in
push
mov
fcomp
mov
mov
cmc
mov
or
xchg
call
imul
jo
clc
(bad)
(bad)
(bad)
fst
sbb
adc
jnp
mov
inc
push
push
sar
mov
jg
inc
out
aas
jmp
movs
aaa
fwait
and
dec
or
add
jns
in
and
dec
and
xchg
popf
inc
loope
hlt
rol
add
(bad)
je
xchg
loope
add
push
cmp
outs
cli
cdq
ja
push
(bad)
test
xchg
ror
add
ja
loopne
sub
mov
(bad)
dec
xor
and
push
loopne
fld
or
jo
and
icebp
lds
add
je
(bad)
(bad)
jmp
xchg
or
and
or
add
mov
sbb
push
pop
stos
pop
add
cmove
xor
(bad)
(bad)
mov
sub
sbb
mov
leave
(bad)
sub
sub
adc
(bad)
(bad)
jmp
cdq
cvtpi2ps
push
sbb
or
adc
add
add
mov
ds
(bad)
(bad)
(bad)
call
inc
in
or
shl
dec
push
out
xor
inc
lock
cs
ins
xchg
popa
test
(bad)
call
das
(bad)
pop
ins
mov
xor
int3
dec
int3
out
jmp
dec
std
push
dec
call
(bad)
lods
jl
add
ror
sub
jo
and
je
xor
or
mov
mov
ds
xor
fld
add
loope
pop
push
lods
fs
dec
in
(bad)
fisttp
dec
xor
inc
mov
inc
jne
xor
mov
out
push
lock
fs
mov
inc
icebp
ss
adc
(bad)
(bad)
cmp
(bad)
adc
iret
mov
sub
pop
lods
jo
pushf
xor
add
xor
fild
jno
pusha
fstp
ja
sbb
clc
(bad)
jmp
xor
jl
iret
in
inc
cmp
rdpmc
pop
add
jno
or
dec
jo
push
cmp
mov
loopne
inc
xor
pop
ds
adc
sbb
ja
push
mov
jle
icebp
imul
mov
pop
push
(bad)
fsub
sahf
jecxz
ja
pop
clc
pop
fcmovnb
sbb
(bad)
(bad)
(bad)
in
push
add
sahf
lock
enter
add
cwde
clc
clc
and
(bad)
inc
in
xor
sbb
inc
sahf
pop
pusha
pop
ret
push
jmp
dec
inc
loop
add
call
dec
loopne
imul
pusha
push
cmp
dec
mov
adc
mov
mov
sub
ins
add
hlt
js
jns
int3
inc
or
jge
cmp
inc
lock
js
jmp
dec
hlt
(bad)
fcomp
int3
int3
pop
dec
inc
cmp
mov
or
cli
call
enter
or
out
mov
mov
mov
clc
(bad)
jmp
inc
xchg
dec
dec
in
add
or
mov
in
ds
ror
jns
ss
jmp
sahf
cmp
dec
mov
dec
sahf
iret
pop
adc
out
enter
in
dec
js
jmp
clc
adc
cmps
sbb
clc
pop
dec
dec
mov
jo
call
mov
xchg
pop
shl
xor
fadd
rcr
(bad)
leave
cmps
mov
inc
dec
push
mov
push
xor
fld
sub
push
xchg
int3
jbe
outs
sub
ja
dec
(bad)
jg
mov
out
call
aaa
mov
pop
and
in
push
inc
or
outs
(bad)
(bad)
jnp
ror
in
jmp
enter
jmp
push
add
xor
repz
call
xchg
or
dec
je
xor
xor
push
jg
(bad)
and
clc
add
cmp
data16
push
sub
push
movs
xchg
scas
mov
adc
pop
and
pop
(bad)
(bad)
push
xchg
or
inc
mov
adc
pop
push
mov
dec
inc
mov
(bad)
(bad)
mov
clc
popf
pop
clc
push
or
push
cwde
and
add
adc
lock
mov
add
sub
mov
cwde
idiv
(bad)
jg
adc
inc
sbb
mov
mov
out
cmps
push
retf
daa
pop
(bad)
(bad)
(bad)
(bad)
fcomp
pop
call
hlt
adc
push
jb
xlat
loopne
sbb
xchg
inc
mov
add
jl
mov
or
sbb
sbb
mov
popa
push
fs
fisttp
mov
xor
push
call
jne
mov
sub
push
jl
add
pop
scas
test
push
jne
nop
cld
jmp
clc
sub
test
mov
push
mov
(bad)
(bad)
push
add
and
inc
dec
xor
dec
dec
(bad)
aas
repz
add
jmp
push
stos
loopne
adc
aas
ret
jmp
xchg
pop
add
or
rol
push
inc
ds
(bad)
fidiv
jbe
call
or
ret
add
movs
add
add
retf
push
(bad)
(bad)
(bad)
push
xor
mov
in
inc
pop
(bad)
xor
(bad)
or
fldenv
jmp
fisttp
lea
nop
mov
jg
(bad)
call
js
dec
movs
ffreep
mov
dec
movs
push
cmp
test
scas
sub
(bad)
inc
inc
sub
in
mov
test
pop
pop
xchg
test
movs
or
inc
rcr
cld
cmp
std
cld
(bad)
or
or
ss
sub
ss
inc
mov
jge
pushf
mov
push
mov
jg
mov
dec
cmp
dec
loope
scas
ins
mov
repz
add
add
cmp
sub
sbb
fdiv
mov
cmp
adc
xor
or
sbb
jmp
pop
and
mov
mov
add
push
cs
(bad)
jg
jmp
and
je
jb
into
adc
and
sbb
jmp
mov
data16
mov
pop
and
xor
nop
shl
xchg
adc
and
xor
mov
mov
(bad)
mov
es
push
adc
test
adc
in
leave
and
(bad)
mov
lods
dec
or
cld
repnz
adc
mov
imul
mov
lock
(bad)
dec
les
les
pop
dec
add
inc
(bad)
adc
and
test
pop
inc
cmp
mov
stc
ds
(bad)
(bad)
(bad)
jge
cmp
push
mov
cld
or
cld
hlt
xlat
rol
cli
sbb
(bad)
(bad)
mov
xor
or
sbb
mov
repnz
clc
(bad)
(bad)
inc
movs
adc
in
mov
and
ror
in
xor
sar
mov
pop
loope
pop
jo
and
pop
dec
imul
sbb
xchg
sbb
or
iret
(bad)
lock
jl
(bad)
jmp
bound
adc
xlat
sub
pop
jmp
sbb
neg
inc
add
loop
lock
or
inc
fdivp
jp
stos
mov
or
jg
mov
ins
mov
add
dec
out
data16
in
or
(bad)
call
jp
ins
mov
dec
repnz
and
sbb
cs
jnp
cmp
dec
adc
cmp
gs
jae
fild
mov
pop
add
mov
jne
sub
mov
call
(bad)
sub
mov
mov
adc
cmps
adc
jecxz
(bad)
in
(bad)
push
dec
cmp
push
bnd
jl
jnp
xchg
jl
jmp
cmp
outs
sbb
mov
jne
cmp
pop
lods
inc
mov
mov
sub
mul
hlt
add
or
add
xchg
and
movs
pop
ret
(bad)
mov
push
je
lock
(bad)
jmp
rcl
out
js
test
cmp
leave
mov
xchg
fisttp
mov
movs
lahf
and
jge
movs
(bad)
jmp
or
mov
or
bound
mov
(bad)
dec
jl
or
jmp
cmp
(bad)
(bad)
mov
ins
xor
mov
fisttp
or
mov
retf
repz
dec
inc
(bad)
jg
call
ds
xor
daa
xchg
push
gs
rcl
into
cdq
loope
dec
lods
xchg
(bad)
(bad)
(bad)
jmp
or
(bad)
sub
mov
popa
dec
or
pop
mov
lock
clc
call
iret
pop
or
test
shl
imul
fistp
mov
es
sbb
push
mov
loopne
test
sub
not
inc
jmp
mov
ja
sub
dec
push
and
in
push
movs
adc
add
pop
test
fwait
inc
std
test
dec
mov
sbb
dec
or
mov
add
cmp
add
(bad)
call
push
rcl
push
push
jae
test
rol
ins
fcom
push
(bad)
(bad)
(bad)
call
adc
adc
sbb
xchg
adc
pop
mov
stos
or
loopne
aaa
or
arpl
sbb
rcl
adc
fild
stc
in
fnstcw
call
inc
sub
add
int
addr16
dec
jle
rcl
adc
shl
retf
in
(bad)
(bad)
dec
adc
enter
int
fcmovbe
lods
push
int3
pop
setne
retf
lea
(bad)
data16
adc
inc
xor
and
pop
in
(bad)
(bad)
(bad)
fild
or
push
xchg
jae
pop
repz
push
dec
clc
sti
ret
adc
adc
pop
cli
rol
stos
sub
push
dec
inc
cmps
in
mov
dec
adc
jmp
call
loope
mov
mov
sub
sbb
xchg
sbb
cwde
(bad)
(bad)
(bad)
push
cmps
inc
pop
sbb
and
jle
inc
dec
jp
sub
movs
or
and
sbb
(bad)
push
test
jne
mov
inc
dec
mov
movs
jnp
loopne
pop
mov
pop
pop
adc
(bad)
jmp
sbb
adc
or
(bad)
and
mov
and
loopne
sbb
icebp
sbb
ins
fwait
enter
push
(bad)
(bad)
(bad)
call
push
sbb
and
or
push
add
xchg
pop
xor
or
cli
(bad)
sbb
stc
xor
xchg
push
sbb
(bad)
(bad)
jmp
sub
inc
xlat
or
scas
imul
cmps
ror
jg
jne
add
mov
jmp
add
daa
push
mov
push
pop
ins
jmp
push
outs
jp
(bad)
(bad)
(bad)
jmp
or
jge
inc
call
sbb
push
add
pusha
out
outs
and
sbb
rcr
mov
push
add
mov
or
mov
rcr
push
mov
mov
(bad)
cmp
adc
xor
ficom
out
inc
push
jb
adc
and
inc
xlat
lock
inc
ins
ins
sbb
adc
ins
addr16
inc
cmp
retf
inc
mov
add
dec
in
mov
test
es
cmp
add
mov
cdq
or
jno
push
lods
mov
dec
or
(bad)
(bad)
(bad)
call
pop
pop
mov
cmp
fstp
push
push
and
mov
int3
sbb
pop
jnp
(bad)
jecxz
inc
into
jne
popa
sub
test
mov
xor
xchg
stos
dec
ret
(bad)
(bad)
(bad)
(bad)
cmp
repz
sub
enter
jnp
fdiv
mov
sar
fs
cmp
cmp
inc
mov
retf
inc
std
inc
ret
movs
test
mov
cmp
pop
inc
or
jg
inc
push
mov
mov
jg
lods
jmp
push
retf
push
outs
clc
(bad)
call
test
sbb
lods
and
jmp
jb
inc
movs
(bad)
movs
enter
pop
es
(bad)
dec
ror
rol
or
inc
add
rcr
ror
pop
sar
ins
cwde
jne
(bad)
(bad)
(bad)
mov
adc
mov
scas
and
adc
jnp
stos
and
gs
or
(bad)
(bad)
inc
push
dec
ins
sub
pop
test
cmp
xchg
push
and
inc
push
(bad)
push
mov
cwde
gs
sbb
(bad)
(bad)
(bad)
jmp
aaa
data16
daa
inc
imul
inc
ficomp
out
or
dec
pushf
xor
(bad)
(bad)
(bad)
dec
cmp
call
or
outs
std
dec
pushf
jo
or
cwde
adc
sbb
push
loopne
mov
xchg
dec
and
test
ins
test
adc
inc
mov
call
dec
(bad)
(bad)
(bad)
(bad)
jmp
ret
xor
mov
adc
in
fcomip
xor
(bad)
(bad)
(bad)
push
push
rcl
add
repnz
push
jmp
ins
lods
adc
jae
push
xchg
addr16
jg
fs
sysenter
cmp
mov
push
xor
(bad)
(bad)
(bad)
call
adc
ins
inc
mov
je
push
cmp
pop
ins
jns
dec
dec
outs
arpl
pusha
cmp
gs
(bad)
(bad)
(bad)
inc
push
pop
inc
push
push
aaa
pusha
lods
lea
cmps
cmp
cwde
mov
dec
arpl
(bad)
or
popa
div
(bad)
(bad)
dec
mov
and
pop
rol
push
int3
push
and
pop
data16
(bad)
(bad)
(bad)
movs
adc
pop
rcr
sbb
test
imul
pusha
fadd
fcom
add
jmp
(bad)
jmp
lock
arpl
ins
add
and
mov
push
mov
or
xchg
jg
adc
ds
push
push
ja
push
lods
dec
and
mov
fdivr
(bad)
test
imul
retf
int
lock
lock
fxch
das
mov
mov
adc
mov
sub
nop
mov
pop
(bad)
shl
rcl
(bad)
dec
test
(bad)
(bad)
inc
lods
out
fcomp
pushf
das
jo
or
ins
das
push
icebp
add
xchg
jne
add
inc
mov
sbb
or
loop
cmp
jl
cmp
(bad)
and
jmp
or
jecxz
sbb
pop
js
movs
mov
and
push
dec
bound
(bad)
jg
dec
es
outs
dec
aaa
inc
dec
sbb
div
ins
out
bound
ins
jbe
sahf
ja
(bad)
dec
jo
adc
bound
outs
and
sbb
push
mov
in
mov
push
cdq
and
movs
mov
pop
add
jbe
pop
xchg
mov
(bad)
(bad)
mov
pop
inc
loope
jo
ret
mov
jae
es
and
lahf
mov
dec
sbb
and
mov
(bad)
(bad)
call
add
cmp
add
adc
sti
cdq
daa
mov
es
push
sar
push
adc
jl
dec
sub
cmps
and
(bad)
jmp
in
fdiv
dec
push
in
mov
jmp
leave
adc
dec
test
lods
int3
nop
add
dec
dec
clc
sbb
mov
push
test
fdivr
and
sub
push
cli
std
(bad)
(bad)
jg
rol
mov
scas
sub
out
dec
stc
mov
dec
pop
retf
outs
pop
pop
inc
(bad)
push
mov
inc
xchg
and
repnz
jmp
push
lods
mov
or
mov
push
(bad)
(bad)
(bad)
push
test
addr16
push
nop
and
movsx
add
pusha
js
push
cli
sldt
(bad)
jmp
mov
lods
pusha
cmps
pop
shr
inc
ficom
hlt
mov
xchg
adc
and
in
not
(bad)
(bad)
jmp
or
xchg
jb
jmp
ror
or
es
push
jmp
cmp
xor
(bad)
dec
(bad)
sub
pop
or
or
popa
jb
push
out
iret
mov
(bad)
(bad)
(bad)
dec
sub
or
jg
adc
fwait
rcl
test
ror
push
dec
pop
dec
shl
jno
aam
(bad)
(bad)
(bad)
jmp
mov
inc
push
cmp
hlt
lahf
pop
jmp
or
add
and
call
mov
fmul
shl
add
jbe
data16
dec
add
push
xor
aaa
or
sub
sub
(bad)
(bad)
push
mov
mov
lods
mov
mov
(bad)
jg
pop
lods
push
add
dec
add
(bad)
(bad)
jmp
push
in
pusha
sub
(bad)
sub
push
(bad)
ins
add
dec
in
pop
xchg
or
pop
add
dec
pop
inc
pop
arpl
call
add
pop
out
mov
mov
std
sub
(bad)
(bad)
inc
add
adc
popf
ror
popa
adc
das
or
or
cli
rcr
or
(bad)
(bad)
(bad)
ficomp
std
ja
adc
or
mov
add
mov
movs
cmc
fidivr
sub
fbld
and
and
fild
push
scas
jl
scas
push
push
test
pop
rol
or
and
das
adc
and
mov
inc
data16
inc
pushf
neg
push
sub
jns
fisttp
push
(bad)
jg
push
dec
test
test
or
cmp
push
push
les
add
push
pop
(bad)
imul
push
(bad)
ins
sbb
add
and
sub
pop
cmc
dec
pusha
mov
out
(bad)
shl
js
mov
pop
add
shl
(bad)
(bad)
inc
adc
fcmovne
ja
(bad)
pop
js
push
inc
mov
adc
cmp
cmp
(bad)
call
jnp
xor
js
sub
pop
jo
push
or
rol
sbb
jmp
jns
sub
cs
pop
dec
xchg
ja
ins
cmp
fistp
nop
sar
adc
clc
(bad)
fbld
mov
fidivr
push
xor
repz
pop
push
push
xchg
dec
and
popa
fsubr
jnp
xor
mov
data16
fcom
inc
test
xchg
pushf
enter
ins
pushf
(bad)
(bad)
(bad)
push
enter
or
jae
push
out
daa
test
aaa
xchg
cmp
pop
movs
retf
mov
aam
jae
out
in
or
jns
das
cmp
(bad)
(bad)
push
inc
retf
adc
sbb
jbe
sbb
jecxz
and
fs
pop
mov
aad
jno
inc
cli
iret
daa
mov
dec
ss
ret
sbb
loopne
pop
pop
les
scas
cdq
xor
sub
jmp
ins
add
popa
test
push
sti
int3
push
lods
in
mov
jmp
sub
aaa
lods
add
sub
xchg
mov
outs
and
jge
xchg
sub
pop
int3
cmps
(bad)
adc
mov
fcom
jecxz
ss
jg
in
inc
jl
jmp
jg
fnstenv
outs
pop
je
adc
(bad)
pop
push
sbb
adc
and
inc
inc
sbb
and
sahf
fstp
xchg
inc
imul
(bad)
jmp
or
das
mov
sar
push
pushf
nop
es
fild
pushf
or
sub
jge
push
cmp
jmp
or
cs
adc
icebp
cmp
xchg
test
cmp
pop
or
shr
js
mov
xor
dec
imul
push
pop
(bad)
in
dec
movs
popf
mov
adc
(bad)
(bad)
(bad)
push
sti
leave
inc
push
add
das
mov
imul
(bad)
pop
imul
xchg
jne
dec
clc
mov
aas
popf
cmps
fisttp
cmp
cmp
xor
data16
mov
cwde
(bad)
dec
pop
sahf
mov
(bad)
fsub
imul
(bad)
inc
sbb
jbe
mov
mov
rcr
ins
aaa
(bad)
mov
aaa
pop
add
imul
push
dec
aas
ins
out
rcr
lds
add
test
cmp
jmp
add
ficomp
dec
xor
fmul
mov
(bad)
(bad)
(bad)
dec
ss
mov
das
or
inc
ins
test
xchg
dec
mov
jno
add
aad
add
add
(bad)
dec
fiadd
leave
or
ins
dec
scas
adc
or
(bad)
(bad)
call
aam
push
or
mov
inc
scas
mov
call
(bad)
(bad)
(bad)
call
jnp
movs
lea
mov
push
es
or
(bad)
adc
(bad)
call
mov
sub
loope
ret
pop
push
and
test
mov
pop
dec
pusha
call
or
iret
pop
inc
or
(bad)
(bad)
(bad)
call
mov
sub
cdq
retf
cwde
retf
sbb
call
xor
xchg
mov
shl
add
add
pusha
cwde
mov
xor
mov
mov
add
mov
je
dec
(bad)
xor
sbb
movs
std
(bad)
(bad)
push
or
(bad)
push
inc
push
push
adc
adc
push
imul
hlt
(bad)
pop
pop
cmp
and
push
push
leave
sub
imul
or
call
sar
and
xchg
cmp
sahf
enter
mov
cmp
call
or
adc
ror
dec
rol
push
dec
mov
(bad)
(bad)
mov
xchg
sub
add
adc
add
sub
sbb
outs
or
(bad)
call
mov
div
dec
or
adc
cdq
fild
sbb
and
and
std
int3
or
stc
push
mov
or
xlat
cmp
out
cmp
call
push
loop
clc
jge
scas
int
inc
mov
push
cld
bound
les
adc
ror
add
cmp
imul
mov
(bad)
(bad)
(bad)
call
and
adc
and
sbb
mov
dec
test
dec
xchg
adc
(bad)
dec
movs
sbb
jno
mov
pop
fdivr
inc
pop
or
inc
or
and
inc
cwde
ss
hlt
inc
sub
adc
push
mov
hlt
outs
sbb
adc
pop
sub
mov
cwde
call
loop
adc
mov
or
mov
sub
retf
or
and
data16
add
cdq
mov
cmp
push
jno
xchg
mov
jmp
(bad)
fistp
cmp
inc
ins
mov
mov
idiv
sbb
cmp
arpl
sar
fcomip
pop
loopne
push
dec
xchg
pushf
dec
xor
fdivr
ds
(bad)
(bad)
jmp
out
pop
aas
or
and
adc
es
dec
mov
cmp
arpl
adc
mov
pop
adc
jecxz
imul
div
fnstcw
adc
in
push
ret
hlt
imul
fcos
(bad)
(bad)
push
dec
(bad)
mov
mov
div
or
cmps
js
call
scas
mov
test
push
inc
aam
sbb
hlt
mov
aas
cmp
sar
(bad)
(bad)
(bad)
(bad)
mov
inc
pop
bswap
adc
adc
sbb
outs
mov
or
push
mov
rcr
(bad)
(bad)
(bad)
call
or
jecxz
inc
jecxz
cmps
pusha
push
aad
sti
sbb
aas
cld
jne
cmp
mov
(bad)
inc
into
dec
mov
pop
mov
xor
add
sar
inc
loope
popf
mov
test
adc
or
popa
inc
popa
sbb
(bad)
(bad)
(bad)
dec
pop
pop
xchg
xchg
push
imul
ficomp
mov
and
xor
dec
push
adc
scas
lea
std
mov
mov
mov
pop
dec
cmp
or
mov
(bad)
call
mov
and
mov
add
push
outs
sar
xor
mov
mov
call
dec
stos
push
mov
sub
pop
add
mov
push
and
(bad)
jg
(bad)
clc
arpl
fmul
or
das
sti
adc
cmp
pop
ins
(bad)
(bad)
(bad)
call
pop
xor
push
inc
ror
aas
pop
mov
adc
jb
fild
lods
cwde
xor
mov
and
or
pop
sti
inc
(bad)
int3
and
cmovne
sub
test
ja
pusha
inc
dec
mov
push
adc
add
sub
add
adc
aaa
fild
cs
out
xchg
sub
inc
inc
sti
aaa
and
xchg
jns
adc
add
outs
cdq
adc
mov
cmps
push
mov
std
into
test
mov
test
ins
and
inc
sub
(bad)
(bad)
(bad)
in
fldcw
les
cld
mov
sub
aam
cmps
in
les
test
fild
icebp
dec
push
lock
fs
repz
(bad)
(bad)
(bad)
dec
rol
bswap
iret
mov
mov
push
pusha
(bad)
fistp
(bad)
fisttp
inc
add
dec
loope
sahf
mov
inc
pop
ins
daa
push
pushf
adc
mov
adc
(bad)
mov
mov
cmp
xor
adc
fist
js
pop
inc
sub
pop
(bad)
(bad)
(bad)
(bad)
clc
xchg
test
in
cmp
xor
pushf
add
xchg
or
test
cmp
(bad)
(bad)
(bad)
push
xor
imul
mov
mov
push
inc
mov
pop
and
and
not
inc
imul
add
pop
and
inc
sti
push
mov
movs
rcr
mov
pop
lahf
jg
test
xor
stos
stos
jle
xor
imul
pop
lock
movs
pop
or
sbb
ds
lea
pop
pop
push
mov
push
cld
adc
fs
retf
adc
ja
call
cmp
or
sub
(bad)
(bad)
dec
lahf
ret
jns
jecxz
pop
xor
inc
nop
adc
sub
(bad)
(bad)
call
jo
jle
nop
jge
pop
or
jo
xchg
push
xchg
lock
fsubr
jb
or
xor
icebp
(bad)
dec
int
(bad)
or
or
pushf
mov
sbb
stc
sahf
fs
imul
and
(bad)
(bad)
(bad)
jmp
dec
movs
cs
mov
aad
js
jbe
xor
sbb
and
adc
sub
sbb
aad
or
cdq
stos
xchg
mov
or
mov
xor
dec
enter
movs
pop
add
mov
cli
cmp
jmp
in
pop
cld
das
rcr
dec
mov
outs
mov
(bad)
mov
lods
shr
pop
sbb
inc
ja
mov
jne
bound
imul
mov
stos
or
sub
mov
(bad)
push
stos
inc
mov
test
push
add
ins
add
shr
and
dec
enter
jo
in
cmp
aad
(bad)
(bad)
dec
inc
and
ins
xlat
push
push
rcr
push
add
clc
dec
push
jno
test
add
sub
jmp
adc
loope
(bad)
push
std
xchg
dec
call
add
std
add
imul
jno
mov
leave
pop
fadd
add
and
enter
mov
fisttp
cmps
push
shl
and
(bad)
call
push
inc
sub
or
adc
jo
pushf
jg
call
jb
cmp
pop
enter
inc
(bad)
gs
cs
paddw
hlt
pushf
dec
pop
dec
cmp
ins
dec
into
or
enter
std
add
mov
or
cli
dec
push
inc
ins
fiadd
scas
fcom
movs
movs
push
ins
inc
xlat
sub
(bad)
pop
pop
out
dec
xlat
dec
enter
mov
(bad)
(bad)
(bad)
fadd
neg
or
add
sbb
mov
xor
(bad)
(bad)
(bad)
mov
ins
cmp
mov
mov
adc
add
mov
dec
and
(bad)
cmp
jmp
test
xlat
mov
and
pop
(bad)
or
imul
repnz
(bad)
mov
(bad)
(bad)
jmp
or
enter
in
(bad)
lock
dec
sub
and
pop
ret
inc
rol
push
push
stc
mov
and
in
mov
or
sub
mov
mov
mov
test
loop
xchg
add
iret
jmp
pop
fs
(bad)
xor
jp
sub
stos
mov
repnz
cmp
xor
lods
gs
cmp
jmp
rol
aas
dec
repnz
aad
xor
shl
retf
push
inc
pop
call
push
pop
lar
imul
mov
sbb
mov
inc
mov
or
sbb
fadd
nop
mov
push
cmp
xor
push
dec
push
sub
add
and
jecxz
es
jmp
mov
ror
xchg
les
repnz
pop
inc
add
add
lea
add
(bad)
popa
iret
xchg
mov
cli
rcr
jo
invd
(bad)
(bad)
inc
loopne
aam
sub
gs
test
xchg
inc
mov
xchg
mov
mov
(bad)
(bad)
push
and
add
mov
mov
jge
push
inc
loop
mov
cdq
rol
out
cli
or
out
je
jge
mov
(bad)
inc
adc
inc
jmp
cmps
mov
shr
int
ds
cdq
sar
sbb
jns
mov
test
cmp
adc
leave
retf
mov
dec
push
dec
dec
jnp
mov
cmp
xor
(bad)
jmp
sub
or
ins
test
sbb
xor
inc
inc
pop
(bad)
jmp
pop
cmp
push
daa
mov
js
mov
clc
inc
mov
shr
sti
or
shl
sbb
enter
(bad)
(bad)
inc
lahf
dec
jmp
jmp
inc
xor
xor
lods
push
mov
cmp
icebp
adc
nop
add
mov
psrld
xchg
cli
scas
clc
(bad)
jg
mov
dec
sbb
pop
mov
or
pop
mov
inc
pop
je
push
(bad)
mov
(bad)
(bad)
call
es
and
shl
pop
xchg
push
sub
sbb
or
mov
jecxz
pop
aaa
mov
(bad)
(bad)
(bad)
dec
mov
inc
inc
stos
xor
push
mov
bound
adc
in
inc
(bad)
jmp
mov
and
into
pcmpeqd
dec
push
adc
inc
jmp
fdivr
(bad)
(bad)
push
mov
sub
clc
inc
sub
stos
sub
xchg
adc
rcr
cmps
sar
es
push
pop
or
xchg
(bad)
(bad)
jnp
es
iret
inc
fld
add
mov
push
inc
loopne
popa
pop
sbb
and
mov
and
cwde
dec
fmul
(bad)
(bad)
push
clc
ja
adc
nop
jo
inc
xor
inc
or
cmp
call
pop
push
call
add
push
jmp
add
mov
jbe
mov
es
imul
sub
repnz
mov
jg
push
pop
add
mov
loopne
outs
(bad)
sbb
call
test
pop
mov
xchg
adc
rcr
test
jmp
aam
adc
cmp
clc
adc
das
add
pushf
retf
shl
inc
in
jb
or
adc
push
mov
fbstp
pushf
xor
xor
pop
cmp
mov
push
fidiv
push
hlt
aaa
inc
ret
add
pop
shr
xchg
push
cmp
fild
inc
ins
loope
aaa
mov
mov
xor
jne
jbe
dec
or
(bad)
(bad)
mov
jmp
cmps
pop
push
or
mov
pop
adc
stos
xchg
sahf
inc
rol
(bad)
fsin
xor
ja
aam
or
or
or
sbb
adc
lods
and
lahf
xchg
jecxz
inc
(bad)
(bad)
call
loopne
in
mov
je
aad
(bad)
out
push
inc
imul
pop
mov
mov
(bad)
(bad)
(bad)
cmp
mov
sbb
pop
cmp
xchg
out
es
(bad)
fcomp
mov
sbb
sbb
inc
cmp
cmp
jl
pushf
sbb
push
sbb
inc
loopne
clc
mov
adc
adc
inc
push
addr16
(bad)
(bad)
call
jbe
test
sbb
ins
add
adc
leave
push
icebp
sbb
add
and
aaa
add
mov
lea
adc
or
add
push
jb
mov
dec
cmp
xchg
(bad)
cwde
pusha
pop
mov
sbb
jmp
and
aas
mov
push
enter
add
aaa
movs
cmps
mov
xor
mov
test
repz
or
es
dec
(bad)
aas
cmp
mov
(bad)
(bad)
dec
or
retf
cmp
inc
inc
(bad)
and
jg
adc
shl
fwait
adc
(bad)
(bad)
call
push
adc
shr
adc
or
add
call
mov
(bad)
inc
push
cmp
add
jne
adc
test
lock
(bad)
dec
pop
and
retf
or
inc
ja
cmc
js
pop
jge
cwde
pop
add
test
inc
dec
and
(bad)
js
mov
aam
cmc
in
mov
xor
mov
xchg
add
loop
fdivr
jbe
or
pop
mov
mov
pop
clc
dec
cmp
call
inc
imul
aam
xchg
rcr
mov
jnp
or
in
test
data16
movups
popf
and
sub
inc
dec
push
mov
sahf
xor
(bad)
(bad)
(bad)
call
pop
mov
add
inc
push
je
sar
mov
repnz
xor
and
add
stos
jle
pop
test
cmc
jg
(bad)
jg
xchg
inc
dec
pop
xor
jl
xor
adc
(bad)
(bad)
jmp
sub
loop
adc
push
mov
es
xor
sub
js
rcr
pop
icebp
(bad)
cmp
xor
push
sbb
or
mov
ja
dec
sbb
pop
sub
daa
clc
rcr
inc
xchg
jno
cmp
(bad)
mov
lds
push
stos
sahf
or
cmp
add
fs
(bad)
(bad)
(bad)
adc
aas
pop
mov
xchg
add
push
das
xchg
or
sahf
gs
loopne
jns
(bad)
jne
or
fisubr
(bad)
call
xlat
cmps
xor
sub
sub
fsubr
sbb
mov
retf
mov
cmp
mov
dec
(bad)
out
in
out
adc
movs
sbb
das
nop
fstp
movs
dec
push
mov
sbb
jne
mov
xor
cmp
xchg
mov
int3
sahf
in
xchg
test
das
sar
fcomp
inc
ins
in
inc
mov
mov
int
xchg
add
ins
pop
sahf
jae
inc
mov
mov
dec
cld
cmp
rol
inc
icebp
clc
sub
inc
inc
push
icebp
and
or
jno
xchg
add
dec
(bad)
(bad)
(bad)
jmp
sbb
mov
push
mov
aaa
mov
adc
mov
or
aaa
cli
call
mov
sti
adc
or
pop
adc
inc
mov
js
das
clc
(bad)
out
clc
cmp
pop
jns
mov
imul
je
jge
adc
(bad)
push
test
aaa
push
mov
retf
hlt
(bad)
jmp
out
psrld
shr
retf
add
push
ret
mov
out
add
pop
shl
sub
pop
jmp
cmp
(bad)
test
push
(bad)
(bad)
(bad)
push
and
ins
pop
xlat
test
mov
jl
mov
lahf
mov
xor
jg
add
jmp
pop
mov
push
push
adc
sub
ret
xchg
cmp
(bad)
retf
sub
mov
call
inc
cmp
sub
jl
mov
popa
sbb
sbb
and
and
push
dec
or
pusha
call
xor
cmp
push
inc
mov
(bad)
(bad)
jg
rcl
pop
div
sub
in
retf
pop
jge
int3
and
cmp
jo
or
daa
iret
(bad)
(bad)
(bad)
inc
sbb
mov
sbb
xor
sahf
dec
pop
or
inc
sar
fnstcw
mov
arpl
es
call
inc
inc
xor
(bad)
mov
aad
cmp
cmp
shl
cmps
popa
mov
(bad)
(bad)
call
mov
test
pop
mov
inc
movs
and
add
mov
sbb
(bad)
(bad)
(bad)
aas
or
sar
ret
gs
mov
fadd
cmp
inc
call
pop
add
cpuid
pop
mov
adc
enter
ds
or
mov
mov
fbld
js
push
cmps
hlt
add
sub
push
or
and
ret
(bad)
(bad)
(bad)
jmp
jecxz
inc
add
jmp
jmp
sub
and
add
ins
inc
dec
in
add
test
daa
stos
(bad)
(bad)
(bad)
jmp
dec
cmp
sub
jne
inc
(bad)
pop
jmp
aaa
les
in
dec
rcr
aam
inc
std
push
push
cld
add
mov
hlt
ja
adc
adc
xor
loop
mov
enter
pop
(bad)
push
and
xchg
mov
inc
pop
addr16
pop
rol
call
cmp
mov
sub
push
or
stos
cmp
cwde
enter
repz
jp
jo
push
xchg
out
inc
ja
(bad)
inc
ja
ins
std
push
fcomp
or
jmp
mov
add
and
push
test
rol
mov
es
add
push
xor
mov
or
cmp
push
(bad)
or
js
push
(bad)
jmp
or
pop
lods
cmp
iret
and
pop
cld
dec
iret
jmp
icebp
add
push
out
push
jo
fwait
js
push
xor
call
xchg
add
add
test
adc
test
loope
icebp
mov
data16
xlat
out
nop
push
adc
inc
test
(bad)
(bad)
call
push
sub
ins
or
add
(bad)
and
mov
inc
xor
inc
jmp
mov
ror
and
xchg
test
mov
push
or
shl
leave
mov
int
sbb
(bad)
jg
cmp
pop
or
mov
mov
xchg
add
movs
test
shr
or
sbb
mov
jg
push
enter
and
sbb
xor
pop
mov
movs
and
(bad)
inc
jno
adc
retf
mov
pusha
mov
xchg
mov
out
xchg
push
(bad)
push
jg
mov
push
(bad)
(bad)
jg
and
scas
push
cmp
scas
mov
les
int
mov
setne
push
(bad)
fld
dec
(bad)
(bad)
dec
inc
jbe
cmps
mov
xor
add
mov
rol
(bad)
(bad)
(bad)
(bad)
jmp
jg
cld
and
pop
xchg
xor
push
jmp
pop
outs
stc
or
xlat
enter
(bad)
(bad)
in
xchg
and
xchg
or
cmc
cmp
mov
sbb
add
pop
pushf
mov
or
ret
xor
mov
ffreep
and
aas
xchg
aam
push
out
js
sbb
dec
jnp
mov
pop
xchg
add
mov
lea
shr
ins
scas
es
dec
clc
imul
neg
and
lea
js
clc
loopne
add
mov
js
bound
jmp
pop
aam
jne
xchg
pop
push
imul
add
xor
lea
adc
or
dec
mov
loope
jno
or
or
cmc
push
sbb
call
adc
jo
ret
jge
ins
xchg
clc
mov
stos
dec
(bad)
jmp
ss
retf
pop
fcom
xchg
pop
ret
test
cmc
nop
jnp
mov
int3
je
and
fwait
pop
repz
push
pop
mov
shl
lods
ins
jmp
pushf
sbb
aas
sbb
cmc
test
and
cld
rcr
mov
adc
sub
sub
push
push
sub
sub
aaa
std
(bad)
js
lds
test
in
cli
cmp
or
inc
ret
jle
clc
pop
mov
enter
cmp
(bad)
(bad)
out
scas
jp
mov
mov
ror
stos
dec
mov
xchg
dec
test
ret
data16
pop
call
fcomp
jmp
mov
push
adc
(bad)
in
retf
std
es
repnz
(bad)
mov
retf
cmp
fwait
imul
call
mov
leave
div
dec
cmp
enter
shr
xchg
ins
lods
or
sbb
(bad)
(bad)
jg
fild
xchg
cmc
mov
or
outs
rol
repz
leave
xchg
aam
push
mov
add
sbb
sub
adc
xchg
sbb
fwait
dec
adc
pop
mov
(bad)
loop
arpl
cmp
sbb
jl
(bad)
(bad)
fcomip
jl
jo
out
aaa
(bad)
stos
and
pop
outs
mov
xchg
xor
and
pushf
popf
cmps
movs
(bad)
(bad)
(bad)
call
aaa
je
movs
cmps
rol
jmp
mov
std
int
cmp
das
jg
(bad)
dec
push
stos
adc
daa
add
fst
mov
cld
inc
adc
push
outs
aad
(bad)
call
rol
arpl
adc
adc
mov
clc
sub
arpl
aad
mov
(bad)
jg
adc
loope
cmps
lock
adc
test
dec
push
or
sub
jne
call
imul
sbb
xor
(bad)
(bad)
(bad)
cmp
sahf
push
push
push
add
add
sbb
xchg
push
sbb
dec
push
jmp
(bad)
(bad)
jmp
retf
test
or
shl
push
or
je
or
loopne
test
dec
stos
adc
int
jnp
inc
add
(bad)
(bad)
jg
dec
or
pop
stc
xor
fcom
or
jnp
gs
dec
mov
in
push
in
xlat
(bad)
jmp
pop
les
dec
mov
ret
cld
hlt
nop
fild
in
enter
test
arpl
(bad)
jmp
adc
aad
call
mov
pop
push
add
out
sub
jne
clc
sub
push
jg
(bad)
and
cmp
rol
add
fadd
je
mov
(bad)
push
dec
je
pop
push
jg
or
mov
cwde
sub
ins
in
jno
call
cmp
popa
jmp
mov
or
psubusw
in
aam
aam
stos
outs
adc
(bad)
call
push
and
cld
or
stos
jp
mov
inc
in
(bad)
(bad)
call
dec
mov
pop
add
and
xchg
xchg
jbe
dec
dec
jns
or
sahf
sbb
push
adc
call
and
sub
xor
sbb
je
pop
inc
jo
push
or
or
adc
pop
xchg
lock
je
retf
in
sub
into
mov
push
fwait
jne
mov
(bad)
call
mov
(bad)
mov
(bad)
cs
jae
cdq
jl
mov
dec
loop
xchg
jl
aas
test
push
jo
lock
jg
inc
(bad)
in
ret
mov
push
mov
xchg
add
clc
scas
mov
gs
cmp
jmp
stos
cmp
in
call
xchg
or
jg
push
dec
adc
pop
or
jae
ret
enter
test
(bad)
(bad)
(bad)
call
inc
call
push
ins
cmp
jne
mov
nop
out
dec
(bad)
and
lock
call
loopne
xchg
dec
fimul
dec
cld
mov
mov
cld
inc
xchg
push
(bad)
(bad)
(bad)
dec
xor
int3
jo
jge
sbb
mov
adc
sbb
jbe
ins
lahf
add
(bad)
push
test
fldcw
jbe
pop
lods
adc
(bad)
mov
add
shl
mov
int
adc
jmp
sbb
pop
push
adc
mov
in
repnz
cs
data16
das
sub
icebp
das
movs
inc
pop
mov
call
xchg
push
ins
rol
mov
cmps
inc
out
pop
ja
or
test
(bad)
inc
sbb
add
dec
cmp
cmc
sub
adc
sub
shr
push
pop
(bad)
(bad)
jg
mov
ret
xor
pop
iret
in
iret
fisubr
adc
in
into
in
push
cld
cmp
add
enter
mov
jmp
scas
(bad)
(bad)
jmp
xor
test
stos
xchg
sbb
mov
out
sti
push
mov
(bad)
inc
or
jb
or
sub
mov
or
adc
push
add
mov
add
fdivr
adc
enter
mov
cli
mov
ror
aam
shr
mov
ins
js
stos
test
push
adc
push
std
outs
mov
mov
inc
cmp
mov
(bad)
(bad)
(bad)
cmp
rol
ret
sbb
jb
jne
lock
mov
(bad)
mov
mov
mov
xchg
leave
arpl
or
lods
popf
jne
das
jp
and
add
(bad)
(bad)
dec
push
ret
sbb
adc
and
in
inc
sub
mov
daa
or
jmp
(bad)
fild
adc
adc
dec
inc
adc
pusha
dec
jo
adc
(bad)
(bad)
dec
and
sbb
cmp
adc
mov
mov
inc
push
(bad)
(bad)
call
push
lock
nop
xor
add
shr
mov
test
inc
mov
sbb
sub
adc
dec
call
xchg
pop
xor
mov
xchg
pop
mov
sar
(bad)
jg
in
xchg
inc
and
inc
xchg
adc
scas
inc
or
(bad)
(bad)
jp
and
add
push
pop
and
jb
or
(bad)
push
sub
push
outs
call
arpl
rol
or
call
jle
and
cmp
in
loopne
adc
pop
add
sub
jle
(bad)
mov
sbb
iret
imul
jo
push
xchg
pop
aad
jp
js
add
push
jbe
les
push
xchg
dec
xchg
test
std
inc
(bad)
jg
ss
imul
shl
out
and
test
inc
int
inc
popa
out
dec
jg
adc
or
rcl
stos
dec
or
inc
popf
or
je
stos
adc
stos
push
xor
push
and
mov
cli
(bad)
(bad)
inc
test
add
aad
rcl
dec
jbe
add
es
sbb
ins
push
pop
hlt
(bad)
jmp
xchg
jne
push
sbb
pop
pop
mov
call
and
stos
(bad)
neg
push
mov
cs
adc
pop
pop
loope
sub
(bad)
(bad)
fisttp
mov
or
cmp
jae
xor
pop
(bad)
(bad)
push
or
retf
ins
add
mov
rcl
addr16
sti
(bad)
(bad)
jmp
aas
adc
mov
or
test
adc
adc
mov
clc
(bad)
jg
cdq
mov
fistp
push
fs
xchg
repz
sub
inc
je
pop
adc
mov
sbb
ret
js
sar
and
adc
push
xchg
(bad)
(bad)
(bad)
jmp
xor
mov
and
xchg
xchg
in
jl
loopne
mov
pop
cdq
out
fsubr
scas
push
ins
repz
pushf
cli
and
sar
add
movs
inc
mov
sbb
xchg
scas
or
enter
(bad)
(bad)
mov
bound
inc
adc
call
inc
movs
and
cld
(bad)
(bad)
dec
inc
lock
add
push
clc
jnp
sub
pop
or
mov
xor
ins
mov
mov
and
push
call
(bad)
jg
mov
mov
inc
jecxz
adc
mov
sar
mov
(bad)
xor
mov
or
(bad)
jg
adc
stos
mov
enter
or
cld
cmp
pop
inc
clc
sbb
xchg
inc
ret
shr
xchg
fs
or
inc
movs
jle
pop
test
sub
lea
(bad)
mov
mov
adc
(bad)
fistp
(bad)
mov
iret
(bad)
clc
call
adc
sahf
inc
push
add
pop
(bad)
call
dec
dec
xor
adc
retf
sub
sub
inc
(bad)
call
shr
ins
dec
movs
int3
push
cmps
fisub
dec
ret
lea
loopne
clc
add
xor
loope
call
cli
imul
ja
mov
(bad)
call
mov
or
dec
mov
ror
push
inc
cld
call
or
push
mov
or
add
int3
sub
jmp
jb
das
call
loopne
iret
jg
and
or
push
js
fcomp
add
(bad)
(bad)
(bad)
jmp
mov
xchg
and
ja
out
sbb
mov
xor
aaa
stc
(bad)
(bad)
(bad)
(bad)
jp
jge
mov
or
push
sub
sub
popa
adc
ret
ror
push
(bad)
(bad)
dec
cmp
shl
sar
cmp
rol
dec
mov
sbb
dec
shl
mov
xchg
(bad)
fnstsw
sbb
or
(bad)
jg
pop
popf
push
imul
xlat
clc
sub
inc
push
pop
push
stc
mov
inc
es
lods
or
call
inc
into
dec
(bad)
fild
inc
push
mov
fild
add
rcl
xor
cmps
rcr
(bad)
(bad)
call
neg
iret
inc
sub
(bad)
arpl
inc
scas
xor
lea
aaa
loope
dec
loop
dec
xchg
push
xchg
or
(bad)
fisttp
or
sub
loop
cli
(bad)
(bad)
call
pop
inc
js
(bad)
aad
das
add
push
daa
rcl
dec
ret
xor
or
dec
leave
dec
or
(bad)
cwde
retf
dec
push
push
jmp
fild
fbstp
or
add
nop
add
repz
cmp
xor
jbe
into
popa
enter
(bad)
dec
div
scas
cmps
cmp
arpl
sar
int
dec
mov
test
cmc
inc
sbb
and
(bad)
jmp
add
and
call
dec
inc
mov
pushf
outs
in
mov
ja
je
(bad)
cpuid
(bad)
(bad)
jmp
jp
xchg
dec
and
addr16
mov
push
add
and
xchg
enter
cdq
jbe
(bad)
(bad)
fcomip
mov
sub
mov
mov
imul
pop
mov
pop
imul
adc
dec
es
je
pop
pop
popa
or
fdivr
mov
mov
ds
inc
lea
dec
call
pop
add
shl
(bad)
inc
jl
pop
pop
out
dec
xor
and
lea
sub
popa
and
ret
loope
(bad)
(bad)
in
jl
cmp
ror
sub
fstp
xchg
pop
leave
mov
jae
pop
inc
push
std
sbb
add
or
jae
test
or
movs
sbb
icebp
call
push
addr16
in
fnstsw
xor
mov
push
js
pop
mov
push
retf
and
gs
aas
xlat
push
mov
cmps
pop
(bad)
das
cli
aaa
xchg
sub
and
rol
out
(bad)
(bad)
push
xchg
mov
jne
(bad)
jle
call
and
jg
jl
jp
mov
clc
sbb
or
mov
test
add
(bad)
jmp
inc
mov
cmps
mov
and
dec
aas
inc
(bad)
call
in
lods
jp
sub
mov
sahf
sub
pop
inc
mov
lea
jg
or
sub
bound
inc
and
jmp
or
push
mov
nop
push
inc
xor
or
cwde
or
std
(bad)
inc
call
loope
cmp
(bad)
adc
inc
inc
fdivr
xor
(bad)
jg
test
jecxz
jle
clc
jno
fimul
dec
cdq
add
(bad)
jmp
and
pop
sub
or
mov
cmp
jmp
ss
out
adc
call
xor
out
sbb
mov
test
pop
jmp
in
loop
sbb
int
into
mov
mov
adc
nop
outs
xor
push
push
aad
or
pop
xor
(bad)
jg
jg
movs
inc
sbb
mov
shr
gs
xor
adc
lock
aam
(bad)
dec
call
ret
jg
push
mov
sub
xor
ins
sbb
(bad)
(bad)
mov
xor
inc
cmp
jmp
loopne
lea
inc
daa
rol
(bad)
dec
cmp
adc
jbe
inc
mov
(bad)
sbb
xchg
mov
push
cmps
inc
inc
adc
imul
pop
je
push
push
aam
sub
fdivr
(bad)
or
ret
mov
push
mov
leave
imul
aam
js
dec
lock
cmp
popa
inc
imul
mov
jbe
push
or
cld
adc
add
rcr
scas
pop
dec
sub
rol
cld
add
push
iret
(bad)
mov
add
(bad)
(bad)
(bad)
push
add
out
in
pop
inc
jno
xor
ins
push
dec
iret
fimul
cmp
ja
or
xor
mov
lea
xlat
mov
or
add
inc
or
xchg
mov
cld
call
xor
fnsave
cmp
mov
jg
mov
add
or
stos
nop
call
cmp
std
jb
xchg
xor
jle
mov
(bad)
inc
loop
fs
daa
inc
shl
adc
loop
sub
add
add
(bad)
(bad)
(bad)
jnp
sbb
bound
je
push
pop
pop
inc
lock
sti
jb
(bad)
(bad)
mov
popf
inc
and
jg
jbe
les
or
xor
sti
fwait
and
jle
pop
into
in
jbe
mov
test
or
ds
mov
xchg
movs
jmp
retf
fdiv
xor
fwait
adc
xchg
retf
pop
loopne
(bad)
jge
icebp
xor
jg
cmp
pop
xchg
movs
or
les
push
fdivp
imul
and
push
dec
dec
in
pop
inc
and
cmp
inc
jb
mov
cmp
sbb
aam
or
inc
cld
dec
je
push
cmp
jbe
or
push
adc
push
movs
jns
mov
pop
daa
ins
(bad)
(bad)
outs
and
call
jo
ds
push
cmp
adc
(bad)
dec
sub
sub
(bad)
retf
outs
sub
movs
mov
outs
push
adc
mov
inc
mov
push
(bad)
(bad)
mov
stos
je
(bad)
jl
scas
jge
pop
push
mov
push
xlat
(bad)
dec
hlt
adc
mov
jecxz
nop
sbb
nop
clc
cwde
fs
push
push
(bad)
cli
ds
push
(bad)
(bad)
(bad)
call
enter
lods
mov
icebp
clc
mov
ins
not
inc
xchg
adc
sub
sub
or
test
icebp
dec
add
or
jmp
and
push
cdq
in
pop
xchg
ins
pop
inc
rep
adc
xor
(bad)
(bad)
(bad)
inc
test
sbb
stos
xor
adc
and
dec
in
mov
inc
pop
adc
push
sub
jne
sbb
out
cmp
nop
fisttp
shr
inc
ins
ja
call
lea
mov
fwait
and
sub
mov
fistp
pop
enter
add
mov
mov
add
inc
loopne
lock
xor
push
add
cli
fwait
dec
jne
ss
dec
(bad)
(bad)
(bad)
mov
aam
dec
dec
inc
aam
sbb
mov
jo
sub
fwait
inc
(bad)
in
push
mov
xchg
in
mov
data16
pop
cmp
das
adc
(bad)
(bad)
jmp
jmp
inc
pop
push
push
push
aaa
push
dec
inc
add
adc
imul
bound
aaa
push
xchg
and
xor
leave
cs
call
call
pop
es
pop
jmp
fimul
push
or
call
idiv
inc
pop
(bad)
(bad)
mov
nop
pop
sub
sbb
cmp
sub
pop
inc
(bad)
jmp
stc
mov
pusha
hlt
sbb
push
xchg
clc
(bad)
(bad)
stos
arpl
sub
retf
(bad)
sbb
aam
add
cld
(bad)
(bad)
dec
sub
mov
fucomp
dec
cli
(bad)
ins
mov
daa
sbb
rcr
mov
fcomip
add
pop
cmp
adc
nop
adc
shl
(bad)
(bad)
(bad)
call
les
and
dec
push
popa
dec
xor
mul
je
aam
jmp
das
imul
pop
pop
cmp
(bad)
(bad)
(bad)
jmp
mov
fmul
(bad)
out
pop
shl
rol
push
int
inc
in
outs
fild
arpl
or
in
pusha
(bad)
(bad)
mov
in
push
jle
xchg
mov
adc
inc
arpl
jbe
sub
add
outs
add
les
sbb
or
or
call
aaa
mov
add
add
fist
outs
leave
icebp
push
loopne
cdq
mov
(bad)
dec
inc
pop
adc
dec
push
mov
or
xchg
ror
(bad)
cmp
(bad)
(bad)
(bad)
dec
mov
mov
pop
ds
jbe
mov
mov
sub
fwait
ss
xchg
adc
das
dec
(bad)
fbld
dec
movs
xchg
mov
loopne
ins
mov
shl
(bad)
jg
inc
mov
or
jo
loopne
neg
mov
(bad)
(bad)
(bad)
mov
mov
jmp
inc
idiv
adc
or
jae
xchg
add
sahf
sar
outs
xor
push
(bad)
and
and
(bad)
push
jp
neg
fcomi
add
mov
and
sbb
add
cmc
(bad)
call
jge
cmp
mov
call
add
pop
adc
mov
call
sub
cs
(bad)
(bad)
mov
mov
pop
mov
sub
ja
adc
loop
adc
(bad)
jmp
je
pushw
mov
aam
mov
fsubr
outs
xor
scas
ror
fcomp
add
int
(bad)
pusha
ja
dec
(bad)
sbb
aad
push
dec
pop
(bad)
or
mov
mov
imul
push
cmp
mov
inc
nop
cmp
aam
stos
cmc
in
and
mov
(bad)
inc
test
lock
or
pmaddwd
fadd
nop
(bad)
push
leave
imul
inc
retf
mov
cmp
or
xchg
fsub
inc
mov
pop
mov
test
jg
inc
dec
ins
shr
fsub
(bad)
jmp
aas
std
nop
es
jne
je
bound
lds
mov
arpl
mov
adc
jmp
mov
call
fadd
js
mov
(bad)
(bad)
(bad)
jmp
mov
test
adc
ins
ret
jle
fdiv
add
jns
fcomp
mov
lea
out
in
(bad)
outs
cmp
es
sbb
jmp
(bad)
(bad)
cmp
cmc
pop
ins
sbb
fiadd
mov
test
dec
pop
add
fbstp
inc
add
pop
push
xor
(bad)
(bad)
mov
test
ja
push
popa
ja
xchg
adc
ret
push
(bad)
(bad)
call
xchg
dec
mov
add
xchg
sahf
ins
stos
jnp
pop
pop
shl
pop
(bad)
mov
call
add
or
(bad)
(bad)
(bad)
jmp
scas
adc
into
rol
dec
add
ret
sub
pop
enter
jmp
cmc
mov
jge
mov
popa
push
daa
push
daa
add
pop
sahf
adc
xchg
jne
(bad)
out
adc
outs
loope
movs
mov
and
aaa
dec
and
xchg
or
adc
fdiv
das
xor
ror
dec
fidivr
inc
sar
(bad)
jmp
and
cmp
xchg
and
enter
fs
pop
pop
cmp
adc
(bad)
push
call
in
xchg
inc
xor
add
jns
outs
sbb
(bad)
aam
(bad)
mov
cmp
outs
jge
push
cmp
xor
loopne
bound
inc
inc
add
and
call
data16
pushf
iret
cmp
xor
(bad)
(bad)
(bad)
push
inc
pop
push
cdq
pop
rcl
pop
jne
adc
cmp
add
add
mov
add
dec
or
sbb
sub
frstor
out
stc
pop
mov
sbb
pop
test
xor
loop
ret
and
mov
jno
loope
xor
dec
jo
adc
mov
inc
push
jo
push
pop
dec
add
sbb
(bad)
(bad)
jmp
sub
ds
fmul
and
xor
xor
add
and
lea
(bad)
(bad)
call
cmp
or
mov
pop
in
cmp
inc
sub
sbb
(bad)
(bad)
mov
and
test
or
fnstenv
jmp
mov
retf
es
adc
adc
push
pop
inc
push
and
cmp
adc
es
pusha
(bad)
pop
add
sbb
push
jp
in
or
loopne
push
les
cmp
shl
mov
shl
pop
dec
(bad)
(bad)
(bad)
call
iret
aaa
mov
adc
aam
dec
mov
cdq
jb
dec
loop
jns
jne
dec
iret
ds
mov
jg
fistp
inc
movs
retf
adc
or
dec
inc
dec
or
inc
aas
enter
push
cmps
test
test
push
add
(bad)
(bad)
jmp
add
push
add
xor
sbb
std
mov
ret
push
push
(bad)
call
stc
jne
sub
das
ret
mov
or
js
enter
push
or
or
scas
fisub
dec
(bad)
stos
pushf
or
add
mov
pop
je
fwait
icebp
ja
inc
push
hlt
push
test
repz
hlt
jl
inc
mov
cwde
jmp
fcom
cmc
fcom
cmp
(bad)
jge
lods
daa
ficom
fld
fs
cmps
sbb
inc
les
pop
dec
js
(bad)
(bad)
(bad)
call
dec
mov
pop
inc
loopne
test
sete
cmp
je
add
pop
cmp
test
cmp
mov
fmul
les
lds
xor
(bad)
(bad)
(bad)
call
or
and
jecxz
xchg
push
adc
mov
sub
sub
push
dec
cmp
(bad)
jmp
sbb
and
jns
sbb
push
mov
sbb
sbb
or
cmp
gs
mov
dec
packsswb
inc
jo
or
in
xor
mov
push
sbb
push
(bad)
clc
popa
pop
cld
cmp
or
test
push
adc
loopne
xchg
add
sbb
stos
sub
(bad)
dec
push
adc
loop
push
popf
sti
daa
jbe
push
and
and
aas
and
or
sar
mov
xchg
push
cs
(bad)
(bad)
call
jle
test
out
mov
xchg
pop
cmp
sbb
(bad)
cmp
add
jmp
adc
lods
stos
or
push
lock
add
jle
sbb
jbe
push
mov
cli
(bad)
call
fwait
push
push
cli
arpl
add
sub
(bad)
push
jne
inc
lods
int3
mov
and
inc
mov
add
or
push
ret
test
sub
jp
cmp
pushf
mov
scas
shl
inc
xchg
jno
mov
add
push
rol
xchg
inc
cld
inc
pop
je
call
test
pop
sub
ret
jne
push
mov
(bad)
jg
push
xchg
movs
(bad)
(bad)
push
retf
mov
add
stos
and
xor
imul
(bad)
pop
in
dec
mov
lods
scas
mov
(bad)
ret
sbb
push
cli
bound
sbb
mov
mov
dec
push
and
ins
mov
arpl
mov
mov
adc
mov
cmp
adc
push
jecxz
xlat
inc
call
nop
mov
or
cmp
shrd
xor
mov
cli
push
cdq
das
xor
sbb
push
mov
fimul
mov
(bad)
(bad)
push
out
mov
mov
dec
add
loopne
mov
push
loopne
gs
scas
cmp
(bad)
(bad)
dec
push
xchg
mov
popa
sbb
scas
outs
pusha
cli
inc
jg
(bad)
cli
cwde
cmp
jne
mov
or
(bad)
inc
push
aas
xchg
movs
or
out
push
ins
add
sbb
test
jno
cmp
cwde
pushf
in
(bad)
(bad)
jmp
imul
xchg
pop
imul
or
inc
dec
cmps
idiv
(bad)
jg
out
call
xchg
push
mov
add
dec
pop
out
add
jg
adc
pop
cld
(bad)
(bad)
call
inc
push
mov
add
rol
mov
xchg
sub
push
ds
xor
and
inc
add
aaa
std
call
dec
dec
sbb
inc
cmp
jge
dec
push
es
sub
and
scas
(bad)
dec
test
and
dec
lds
and
cmps
popa
pop
(bad)
(bad)
(bad)
call
scas
fcomp
pop
loop
inc
add
inc
pop
mov
idiv
jo
scas
add
enter
sub
xor
xor
add
cmp
ret
pop
cmp
or
or
xchg
or
jno
iret
iret
je
mov
sar
xor
adc
mov
sub
cmp
(bad)
(bad)
jmp
cmps
leave
sub
jbe
inc
pop
adc
mov
lods
push
mov
push
nop
call
addr16
(bad)
(bad)
dec
push
scas
lods
or
aas
mov
inc
or
jle
mov
cli
mov
loopne
sbb
jnp
sahf
std
mov
jmp
nop
or
mov
adc
fcom
bound
(bad)
fist
repnz
shl
daa
add
cmc
and
mov
mov
mov
add
push
mov
add
iret
jmp
and
mov
push
xor
push
mov
mov
(bad)
fsubr
push
jge
lods
js
jle
(bad)
lea
xchg
(bad)
(bad)
call
mov
or
mov
inc
add
xor
xchg
std
mov
adc
push
cmp
sbb
xchg
add
cli
sub
push
xor
nop
sahf
pop
and
jg
inc
jmp
xchg
in
mov
and
xchg
daa
idiv
(bad)
(bad)
inc
out
push
push
push
xor
fnstsw
(bad)
mov
dec
sbb
or
inc
std
(bad)
out
adc
jno
es
adc
fisub
std
add
inc
adc
xor
int3
adc
add
test
xor
dec
cs
ret
pop
inc
xor
cli
mov
mov
jbe
mov
movs
or
in
fimul
pop
(bad)
cmps
repz
pop
scas
clc
(bad)
inc
jae
mov
push
aaa
mov
call
mov
adc
(bad)
jmp
mov
jmp
sbb
shr
(bad)
mov
mov
sahf
adc
ins
or
lds
in
inc
(bad)
call
cld
call
mov
dec
shl
inc
cld
fdiv
jns
jb
mov
(bad)
(bad)
(bad)
(bad)
ds
inc
lock
mov
dec
xchg
inc
push
inc
or
sbb
(bad)
(bad)
call
jno
pop
push
push
in
aaa
in
imul
jmp
push
out
loop
adc
and
(bad)
dec
push
ss
pop
enter
push
clc
movs
(bad)
adc
mov
xchg
(bad)
(bad)
(bad)
mov
lods
test
push
test
add
dec
iret
push
jo
pop
dec
or
dec
test
sbb
jmp
(bad)
jmp
jp
mov
test
mov
cmp
or
inc
mov
aam
pop
hlt
and
mov
add
push
inc
nop
dec
test
movs
es
jae
rcl
mov
in
outs
stos
add
mov
(bad)
cld
mov
retf
cmp
add
jmp
push
jb
mov
xor
inc
(bad)
cmps
inc
cmp
(bad)
(bad)
jmp
sar
mov
rol
mov
adc
test
mov
add
call
or
(bad)
(bad)
(bad)
push
jne
arpl
lock
sbb
xor
add
jae
adc
or
add
dec
lock
and
jb
fucomip
mov
adc
adc
push
xlat
or
push
xchg
(bad)
push
inc
js
xchg
xstore-rng
cmps
add
mov
(bad)
adc
sti
je
call
icebp
mov
xor
adc
sahf
or
mov
adc
int
or
add
(bad)
cmp
out
shl
rcr
inc
push
xchg
add
adc
jg
add
or
xchg
sbb
xchg
add
call
and
ror
pop
mov
add
es
adc
aaa
push
jl
inc
int
(bad)
(bad)
aas
adc
dec
addr16
mov
push
arpl
push
push
dec
ret
call
(bad)
inc
test
or
cs
mov
xchg
(bad)
rcr
(bad)
push
and
push
scas
inc
mov
and
mov
ret
fbstp
mov
cmp
lock
mov
ins
aam
sub
xor
xchg
sub
jecxz
(bad)
call
in
cdq
imul
cmp
add
jmp
repz
add
hlt
aad
imul
cmp
mov
ror
rol
add
pushw
inc
sub
or
(bad)
jmp
div
loope
or
mov
sbb
xchg
nop
retf
ud1
sub
pop
sub
sub
rcr
lods
clc
repnz
sar
in
sub
add
(bad)
(bad)
call
loopne
push
push
mov
daa
lods
(bad)
mov
sub
mov
out
jo
inc
cli
(bad)
(bad)
(bad)
jl
das
add
mov
mov
adc
jae
add
cmps
xor
out
cli
scas
bound
mov
mov
(bad)
mov
cli
dec
ret
repz
mov
push
add
push
fnstenv
add
(bad)
and
dec
adc
cmps
xor
jmp
(bad)
(bad)
inc
cmp
xlat
fs
add
dec
loope
sub
and
mov
mov
mov
cmp
sub
cmps
(bad)
(bad)
push
sub
out
cwde
push
pop
mov
add
mov
call
mov
push
ficom
pop
repz
and
mov
xor
rcr
xlat
mov
mov
jl
jge
js
inc
in
es
(bad)
dec
push
scas
sbb
sub
mov
or
pop
test
(bad)
mov
sbb
pop
push
lock
lods
xor
call
mov
enter
xor
pop
mov
movs
or
adc
cli
(bad)
jmp
fmul
in
xchg
dec
in
mov
inc
sbb
mov
call
dec
(bad)
scas
cmps
nop
xchg
jne
and
sub
(bad)
jg
call
push
push
lea
std
inc
dec
xchg
(bad)
rcr
retf
cli
call
mov
push
mov
push
icebp
(bad)
jmp
fs
adc
and
xchg
add
sbb
test
test
mov
fs
push
jns
adc
jmp
sbb
loop
in
xlat
push
sub
push
cld
call
in
adc
fdivr
fsub
mov
movs
out
enter
adc
inc
and
inc
pop
movs
not
jmp
nop
inc
jnp
jmp
add
aas
mov
sub
pushf
push
pop
mov
shr
inc
xor
(bad)
(bad)
call
xchg
dec
sti
cmps
and
dec
cmp
push
inc
and
cmp
mov
(bad)
(bad)
push
push
mov
aas
or
inc
or
and
enter
mov
and
mov
retf
pop
pop
fdivr
dec
int
(bad)
(bad)
call
push
mov
stos
ins
lea
movs
jo
inc
pusha
xchg
inc
fs
into
(bad)
mov
dec
mov
imul
pop
add
in
loopne
and
pop
lock
(bad)
(bad)
call
stc
sub
mov
arpl
lea
cmps
sbb
inc
cmp
mov
ret
inc
mov
push
shl
sbb
fbld
push
(bad)
xchg
mov
std
cmp
lea
(bad)
(bad)
jmp
lahf
cmp
push
mov
push
xchg
xor
add
or
outs
loop
cld
call
icebp
cwde
sub
jmp
(bad)
(bad)
(bad)
jmp
xchg
jl
pop
mov
xchg
add
pop
mov
or
jl
scas
imul
(bad)
jmp
std
or
or
jae
out
inc
cmp
(bad)
jg
dec
push
punpcklbw
add
or
mov
ins
mov
or
es
in
adc
sub
push
daa
dec
lock
cld
add
stos
ds
sbb
(bad)
inc
add
lock
ror
cld
fmul
cs
movs
xor
das
xchg
add
and
ret
adc
cmp
test
fs
inc
mov
jo
call
lock
push
cmp
xchg
jo
call
(bad)
(bad)
jmp
mov
shl
jle
sbb
not
and
mov
sbb
push
add
mov
nop
jge
dec
cmovae
clc
xchg
sub
dec
imul
pop
or
(bad)
(bad)
(bad)
(bad)
out
pop
dec
pusha
popf
jbe
mov
jle
addr16
xor
dec
add
rcl
jmp
scas
icebp
fs
leave
jb
xlat
mov
int3
les
xchg
(bad)
dec
cmp
gs
mov
inc
cmp
test
retf
xor
dec
mov
dec
cld
dec
mov
shl
mov
pop
hlt
sub
das
jp
test
mov
ret
popf
cmp
out
or
sbb
aad
mov
lds
add
add
cdq
clc
mov
cli
retf
cld
sub
movs
mov
movs
repnz
or
and
mov
into
movs
push
or
or
aad
push
inc
popa
ss
push
inc
rol
sub
aad
inc
xchg
adc
add
dec
ret
jecxz
push
(bad)
sub
adc
rol
dec
(bad)
rcr
call
in
cmp
inc
nop
or
not
add
(bad)
scas
shr
or
(bad)
push
xchg
sub
fistp
pop
(bad)
loopne
inc
jne
int3
clc
(bad)
(bad)
jg
je
xor
mov
repz
xchg
xor
sub
add
das
xchg
or
push
cvtpi2ps
ins
cmp
jne
les
ins
clc
pop
or
or
pop
das
neg
ins
or
(bad)
(bad)
(bad)
mov
xor
lds
test
mov
data16
and
pop
xor
in
jns
sub
sub
mov
pop
and
aad
and
cli
fisttp
cmp
push
sbb
pushf
mov
call
pop
adc
in
inc
das
or
add
adc
pop
out
add
mov
cld
in
clc
test
jbe
pop
(bad)
jmp
shl
int3
cmps
pop
les
js
mov
enter
jmp
adc
loopne
nop
scas
inc
pop
inc
mov
lock
daa
push
adc
mov
jle
(bad)
(bad)
(bad)
(bad)
inc
or
popa
ins
stos
add
jo
jecxz
aas
aam
pop
push
add
movs
and
cs
add
mov
jmp
daa
inc
sbb
xor
adc
pop
addr16
popa
(bad)
xchg
sbb
push
pop
mov
popa
sbb
jg
add
pop
dec
cmp
(bad)
cmp
sbb
pusha
loop
outs
mov
add
std
lahf
or
jg
mov
lods
xchg
xchg
or
jmp
outs
adc
adc
ds
mov
sbb
(bad)
push
cmp
or
or
inc
push
sbb
(bad)
enter
sub
scas
mov
(bad)
(bad)
sbb
ds
add
sbb
sbb
push
dec
push
sub
push
cmp
(bad)
mov
out
(bad)
sbb
je
adc
daa
pop
js
jae
out
push
(bad)
(bad)
(bad)
push
push
and
ds
xchg
call
dec
mov
push
lock
mov
(bad)
ds
clc
(bad)
call
push
into
xor
rcl
sbb
push
or
or
push
call
push
int3
and
or
jne
jmp
gs
btr
imul
imul
dec
gs
adc
adc
(bad)
jmp
sti
mov
inc
adc
add
je
(bad)
(bad)
mov
xlat
stos
sub
scas
xor
in
fcomp
or
loope
xor
fs
(bad)
jmp
shl
push
cmp
or
adc
fmul
retfw
gs
inc
add
movs
add
xchg
add
je
shr
cwde
or
cmp
ja
mov
add
ss
(bad)
mov
or
scas
retf
inc
ret
je
fmulp
fiadd
xor
int3
(bad)
(bad)
jmp
add
jge
sub
ins
out
stc
push
pop
jnp
jl
mov
test
jp
xor
(bad)
(bad)
push
mov
push
aam
push
sub
test
jo
popa
jns
ja
jbe
sbb
add
jne
jo
fucomip
ins
ins
scas
sub
push
test
mov
mov
jge
or
cmp
es
push
sbb
push
pop
repnz
popa
add
or
sbb
sbb
js
inc
lock
jg
adc
inc
pop
das
xor
jo
stos
retf
adc
in
lock
pop
mov
data16
hlt
push
pop
add
ss
mov
aas
fisttp
ins
cli
(bad)
dec
int
stc
inc
sbb
mov
push
pop
jo
push
test
outs
pop
and
mov
rcl
sbb
(bad)
(bad)
(bad)
jg
pop
mov
loopne
or
ins
mov
adc
(bad)
ret
shl
mov
push
adc
fld
jns
(bad)
fild
enter
sub
or
(bad)
push
cmp
test
bound
jns
mov
cmp
movs
(bad)
inc
mov
jg
(bad)
inc
div
push
loopne
or
pop
jnp
pop
lods
xor
arpl
enter
call
retf
jmp
shl
pop
pop
movs
jmp
or
xor
dec
lock
in
sub
mov
pop
(bad)
call
fsubr
imul
pop
lea
or
stos
sar
sub
mov
mov
pusha
dec
aaa
xchg
pop
outs
mov
shl
mov
out
jnp
iret
mov
call
add
pop
sbb
(bad)
(bad)
jg
cld
nop
pop
jge
jge
adc
fidiv
out
enter
mov
(bad)
call
push
dec
push
das
or
scas
sahf
es
push
jl
test
and
dec
pop
loopne
dec
sbb
(bad)
call
aaa
rcl
les
push
fucomp
sbb
xchg
or
sar
jle
scas
data16
jae
pop
pop
rcr
mov
sbb
aad
inc
pop
pushf
popf
nop
sub
(bad)
call
or
rol
aaa
iret
mov
sub
cmp
lock
stos
xor
fadd
mov
and
push
fst
inc
jg
jmp
stos
sbb
pop
mov
rol
pop
jmp
pop
dec
mov
(bad)
push
push
psrld
pushf
inc
into
jo
ja
add
and
rcl
call
loope
adc
pop
ins
cmp
add
call
push
in
mov
add
(bad)
call
bound
into
shl
aad
(bad)
(bad)
fbld
jl
stos
and
in
mov
mov
jle
mov
pop
aad
(bad)
dec
push
inc
push
pop
fadd
shr
sbb
jno
icebp
jns
or
aaa
dec
ret
adc
cmc
in
pop
sub
ficomp
jmp
(bad)
dec
test
inc
cld
mov
imul
push
cmp
imul
aam
aam
mov
aam
jecxz
loope
pop
pop
xor
aad
dec
inc
nop
lock
in
jo
mov
adc
adc
fisub
dec
and
scas
pop
clc
push
pop
sar
cmp
dec
call
fscale
(bad)
and
test
dec
ja
test
inc
cmc
out
mov
pop
aas
popa
inc
sub
pop
sar
call
mov
loop
sub
test
vunpckhps
cmp
xor
shl
inc
cmovg
jg
mov
jecxz
jbe
cmp
cwde
pushf
cmp
mov
inc
mov
repnz
scas
out
xlat
sbb
lods
addps
in
pop
dec
clc
dec
daa
fs
sar
sbb
add
jbe
add
mov
fadd
sub
sub
lods
sbb
xlat
test
inc
add
fs
das
push
(bad)
or
fdiv
fxch
and
push
fbld
push
fst
pop
xor
pop
xchg
in
adc
pop
xchg
adc
dec
dec
mov
fs
(bad)
(bad)
(bad)
call
pusha
add
cmp
pop
fwait
ror
fld
pop
les
mov
scas
ret
jmp
and
(bad)
(bad)
fild
les
dec
les
xchg
pop
push
das
xchg
adc
ret
hlt
(bad)
jmp
jle
test
popa
les
mov
fcom
lds
sub
jne
push
clc
pop
(bad)
(bad)
call
inc
cld
ret
xchg
clc
aaa
fidiv
neg
fstp
es
pop
push
mov
stc
mov
pop
sbb
jmp
(bad)
fdiv
pop
cmp
outs
add
icebp
(bad)
call
xor
mov
test
or
adc
ret
sub
rol
pop
xor
arpl
inc
mov
push
and
sti
out
bound
hlt
jmp
repnz
mov
sbb
dec
rcr
mov
(bad)
(bad)
fbld
in
mov
and
cmps
fmul
xor
dec
fst
fdiv
dec
inc
push
hlt
add
fdiv
pop
xchg
(bad)
in
daa
pop
xchg
hlt
pop
cwde
(bad)
(bad)
(bad)
inc
xchg
out
mov
addr16
add
mov
push
dec
neg
fstp
push
sub
(bad)
(bad)
inc
fs
jo
xor
inc
cdq
pop
push
wrmsr
jnp
jl
fs
push
push
push
mov
in
outs
hlt
movs
jge
xchg
add
pushf
test
(bad)
(bad)
(bad)
call
adc
adc
pop
in
popa
xor
push
pop
xor
cdq
js
mov
pop
gs
scas
frstor
sbb
inc
xor
fwait
adc
cmp
jmp
mov
cmp
or
sbb
jo
xchg
sub
cmp
stc
ja
mov
cld
arpl
dec
or
ja
aaa
cld
(bad)
jmp
adc
jb
adc
adc
cmp
jns
outs
adc
push
retf
mov
fisub
jl
loopne
mov
arpl
mov
jmp
inc
les
in
jb
(bad)
and
ficom
enter
jg
or
cwde
fisub
xor
lock
adc
popa
scas
jg
inc
cmp
fsub
push
and
sbb
in
pop
and
xor
adc
mov
or
es
mov
lock
mov
or
pop
xchg
gs
(bad)
call
mov
sbb
setle
and
test
jmp
clc
add
inc
or
cdq
(bad)
out
mov
pop
(bad)
(bad)
(bad)
out
call
push
sub
pushf
cs
jecxz
scas
inc
xchg
enter
push
pop
add
fisttp
xor
(bad)
(bad)
(bad)
ds
lods
call
dec
push
shl
mov
in
mov
or
(bad)
pop
adc
(bad)
dec
call
inc
ucomiss
mov
add
(bad)
(bad)
jmp
fnstsw
xchg
push
jbe
cwde
or
push
or
jbe
xchg
mov
dec
add
std
and
add
loopne
in
(bad)
jg
or
ss
push
jbe
inc
adc
bound
or
imul
lock
mov
mov
fisttp
and
fstp
and
or
mov
(bad)
jmp
jbe
add
and
mov
data16
inc
inc
fwait
and
pop
mov
cld
mov
pop
lods
adc
push
mov
loope
(bad)
(bad)
push
daa
cmps
mov
push
imul
das
outs
pop
add
add
mov
adc
dec
loope
adc
push
fbstp
aaa
in
push
mov
xor
and
jae
xor
xchg
xor
push
jae
fld
jne
cmp
or
mov
or
xor
outs
fmul
and
or
pop
sub
mov
jmp
sub
out
stos
add
addr16
addr16
hlt
pop
imul
bound
in
(bad)
(bad)
push
push
stc
(bad)
jo
mov
loop
push
or
dec
inc
frstor
push
mov
lods
dec
mov
pop
adc
ds
pop
jecxz
es
loope
push
addr16
jae
aas
call
xchg
js
(bad)
(bad)
call
dec
enter
mov
das
add
and
call
inc
pop
xchg
sub
ins
and
(bad)
(bad)
jmp
adc
shl
jmp
adc
adc
sub
fisub
and
add
cmp
push
(bad)
(bad)
jg
pop
cmp
xor
push
shl
mov
mov
mov
jg
add
add
shl
jo
cmc
inc
or
pop
xchg
dec
or
lea
dec
mov
jb
add
lea
clc
push
xchg
mov
stos
outs
sub
push
in
jecxz
or
in
cs
rol
inc
pop
add
push
push
xchg
inc
ret
iret
in
(bad)
push
leave
clc
out
and
sbb
sbb
mov
clc
sbb
push
movs
movs
push
(bad)
mov
(bad)
inc
in
add
and
mov
pop
adc
and
jnp
mov
sub
mov
add
sub
in
dec
out
fcom
imul
aad
lock
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pop
adc
sub
add
icebp
adc
sub
(bad)
(bad)
call
aad
add
inc
xor
or
outs
and
dec
sub
pop
call
and
stos
inc
in
sbb
push
add
mov
addr16
ror
or
es
push
lea
pop
dec
push
clc
das
clc
call
sti
sub
mov
lock
dec
out
xchg
je
adc
aaa
jmp
ja
fwait
scas
push
add
imul
xchg
je
adc
pop
push
repnz
inc
pop
call
das
xor
popf
sub
dec
jae
out
push
sbb
cdq
or
and
(bad)
(bad)
push
mov
dec
mov
in
add
aam
sti
cwde
sbb
add
dec
mov
and
sar
inc
or
pop
popf
add
js
ss
lock
add
or
or
inc
jmp
adc
pop
cmp
sbb
inc
call
call
inc
adc
clc
pusha
pmulhuw
(bad)
(bad)
(bad)
fadd
dec
jns
pushf
cmps
xor
nop
mov
mov
fiadd
and
or
xchg
sbb
mov
in
inc
xchg
sub
leave
inc
or
aaa
shr
add
jmp
rol
jmp
or
dec
and
pop
cmp
push
xchg
(bad)
(bad)
(bad)
jg
or
xchg
jle
loope
dec
sti
jg
and
jo
xor
xor
xchg
rol
pop
adc
sar
mov
je
(bad)
inc
mov
jmp
mov
mov
sbb
outs
sbb
je
stos
(bad)
stos
add
movs
mov
cmps
lds
pushf
fmul
jmp
jecxz
outs
xchg
fs
mov
xchg
jmp
sar
(bad)
call
and
dec
xchg
xchg
out
mov
adc
or
or
cmps
(bad)
jmp
in
cwde
and
daa
movs
xor
aas
je
(bad)
push
(bad)
ss
push
and
dec
push
cmp
adc
add
shr
mov
inc
mov
ins
daa
rol
dec
into
(bad)
(bad)
(bad)
inc
outs
adc
data16
test
mov
sbb
repz
inc
jge
push
ins
(bad)
(bad)
dec
xor
arpl
adc
inc
popa
sbb
dec
(bad)
(bad)
(bad)
cmp
data16
in
or
sbb
xor
adc
sub
out
lock
movs
ins
push
clc
(bad)
push
or
sub
adc
int3
jbe
or
sbb
(bad)
dec
or
loope
enter
mov
adc
in
test
or
cwde
and
dec
ins
xchg
pop
add
les
(bad)
cdq
adc
jg
ins
push
adc
dec
pop
js
scas
out
and
cld
mov
mov
mov
jno
inc
or
push
out
js
(bad)
(bad)
(bad)
fbstp
jo
xchg
jl
nop
adc
jno
clc
loope
pushf
ins
jno
addr16
cld
rol
dec
add
out
jl
(bad)
fcomip
call
and
shl
movs
or
mov
and
sbb
(bad)
inc
dec
mov
fld
mov
test
xchg
add
xor
(bad)
fist
push
mov
in
mov
adc
cmp
fild
jnp
sar
xchg
cmps
sub
imul
(bad)
inc
loope
inc
pusha
push
fcmovbe
dec
out
xchg
inc
mov
jge
pusha
inc
add
stc
enter
pop
(bad)
(bad)
jmp
in
push
or
fild
(bad)
push
and
push
sub
(bad)
(bad)
(bad)
(bad)
jl
clc
jno
shl
mov
xchg
out
loop
sub
(bad)
das
icebp
pop
lahf
dec
cmp
jbe
mov
(bad)
(bad)
push
xor
sub
test
push
pop
dec
push
fbld
shl
mov
dec
repz
hlt
push
xchg
retf
adc
lea
jbe
or
mov
arpl
push
hlt
xor
(bad)
(bad)
jmp
mov
cmc
inc
(bad)
push
call
jbe
adc
mov
jp
fsub
pop
lock
call
aas
rdmsr
pushf
jo
cmp
cmc
mov
fstp
mov
jg
add
movs
sahf
mov
xchg
outs
(bad)
(bad)
(bad)
call
mov
mov
jb
in
push
or
add
std
add
sbb
es
and
(bad)
(bad)
inc
dec
mov
or
add
jbe
in
adc
or
adc
inc
or
and
sbb
(bad)
(bad)
call
xchg
int
xchg
ret
adc
or
lea
or
loope
ja
pandn
movs
xor
sub
sbb
pop
int
rcl
jb
push
test
jae
pusha
add
push
pop
ds
adc
push
dec
neg
push
pop
dec
out
inc
pop
adc
test
aam
(bad)
call
cmp
gs
sbb
stos
test
data16
loop
add
(bad)
(bad)
call
stos
(bad)
mov
sub
mov
shl
mov
xor
(bad)
not
ja
push
mov
(bad)
(bad)
jmp
or
movs
into
push
test
bsr
cmp
cli
dec
push
add
and
(bad)
(bad)
inc
inc
test
mov
sbb
pop
add
cmp
push
je
sub
push
or
call
mov
je
fs
nop
pop
pop
(bad)
jno
cdq
mov
sar
push
fimul
dec
add
or
push
lods
add
inc
sar
cmp
jg
ja
push
mov
es
mov
sbb
cli
and
(bad)
jmp
add
movs
out
test
mov
add
dec
pop
rcl
xor
clc
and
adc
and
iret
pop
stos
pop
aas
enter
and
pop
and
sub
repnz
cmp
das
pop
aaa
jbe
aas
(bad)
(bad)
push
(bad)
mov
je
int
stc
inc
(bad)
push
ins
das
mov
cli
cmp
jmp
aas
or
cli
loopne
(bad)
arpl
scas
clc
jg
popf
out
sub
pusha
dec
(bad)
ds
mov
hlt
int
mov
dec
(bad)
call
scas
lods
lods
inc
jb
inc
sub
adc
dec
push
dec
sbb
bound
xchg
and
das
pop
and
inc
push
clc
or
mov
call
xchg
cmp
je
xor
cmp
cli
(bad)
(bad)
inc
and
lock
clc
or
mov
push
std
adc
dec
cmp
mov
inc
in
jmp
sbb
es
(bad)
(bad)
(bad)
(bad)
fdivp
or
imul
cmp
inc
shr
fwait
loop
sub
cmp
(bad)
push
push
adc
push
pop
adc
mov
enter
das
sar
mov
mov
mov
shl
jecxz
adc
ins
or
into
add
enter
les
in
(bad)
(bad)
dec
les
adc
ficom
add
pop
mov
ins
add
(bad)
inc
xchg
adc
add
adc
or
stos
push
adc
int3
dec
pop
bound
dec
jbe
mov
(bad)
imul
in
out
inc
xor
aas
mov
add
fimul
(bad)
jg
mov
imul
stos
xor
mov
mov
(bad)
inc
movs
cmp
pop
jae
add
hlt
fsubr
je
inc
xchg
jl
test
add
jbe
loop
jmp
push
lds
js
fcomp
pop
(bad)
jle
or
push
add
dec
sbb
nop
pusha
(bad)
(bad)
(bad)
jmp
add
ins
lock
pop
add
adc
mov
out
mov
adc
pop
cmp
or
xchg
and
pop
mov
xor
(bad)
in
(bad)
inc
inc
or
add
dec
dec
xchg
sub
pop
add
movs
fs
add
dec
das
cli
add
leave
lock
xacquire
push
inc
test
cli
(bad)
(bad)
jmp
add
js
scas
dec
inc
or
sbb
dec
and
jecxz
and
(bad)
(bad)
jmp
aaa
nop
mov
dec
inc
ret
push
add
mov
push
push
jno
push
fmul
(bad)
jmp
push
mov
lea
sbb
imul
(bad)
(bad)
fbld
repz
jg
inc
(bad)
sub
xchg
arpl
sub
(bad)
jg
jmp
adc
adc
call
fbstp
jo
mov
jae
adc
or
jg
out
dec
call
fistp
jmp
mov
leave
bound
add
push
rcr
dec
loopne
xor
inc
sbb
cs
pop
inc
imul
dec
push
lods
ds
pushf
dec
xor
call
pop
xor
imul
int3
mov
push
inc
sbb
(bad)
(bad)
mov
inc
fs
lds
or
mov
cmp
xor
add
(bad)
inc
xchg
stc
cmps
and
mov
mov
dec
int
movs
in
xlat
(bad)
ins
rcr
enter
cmp
xchg
inc
fldenv
lahf
ds
dec
push
retf
xor
gs
or
cld
(bad)
(bad)
fld
sbb
bound
or
xor
jl
ror
loope
or
(bad)
mov
xchg
inc
outs
add
pop
xchg
xor
cmps
ja
mov
adc
addr16
dec
mov
test
stc
ins
ret
cwde
imul
clc
retf
test
jo
dec
cmp
shr
xor
add
ja
mul
adc
nop
xchg
nop
push
mov
retf
cmp
ss
jbe
pop
(bad)
ins
inc
jno
outs
or
jne
dec
dec
inc
sub
push
lods
pusha
(bad)
(bad)
(bad)
inc
jno
das
jg
and
shl
pop
or
fld
adc
fcmovnbe
mov
(bad)
(bad)
(bad)
(bad)
sti
pop
mul
repz
inc
fcmovu
inc
out
xlat
or
adc
mov
ins
xchg
push
repnz
or
cmc
(bad)
call
and
out
adc
inc
or
leave
xchg
sbb
pop
mov
int3
mov
push
in
pop
jg
add
mov
mov
xor
out
cli
movs
lods
xor
sbb
stos
and
ja
(bad)
inc
leave
sub
fisttp
add
push
add
dec
cmp
fstp
sbb
add
scas
call
pop
or
(bad)
call
add
outs
cmp
repz
sbb
push
ror
sbb
pop
mov
cli
fmul
fisubr
fcmovnbe
push
push
and
sbb
push
loopne
(bad)
call
push
nop
push
jo
pop
fwait
mov
idiv
pop
ja
mov
jns
mov
clc
mov
pop
cdq
shl
push
or
xchg
(bad)
fldln2
jmp
push
push
cmps
int3
push
mov
pop
sub
ja
movs
ins
jmp
and
mov
ret
push
ret
mov
mov
in
pop
xchg
mov
aaa
fidiv
and
mov
adc
add
cmp
push
add
pop
inc
cmp
or
mov
in
inc
aaa
test
(bad)
(bad)
call
frstor
inc
aaa
inc
and
xor
dec
ja
mov
jecxz
ffreep
in
repnz
arpl
inc
push
mov
add
mov
cmps
dec
xchg
in
je
int3
and
popa
lods
pop
lock
push
dec
xchg
mov
fwait
sbb
pop
ret
pop
xchg
pusha
or
xchg
cmps
(bad)
(bad)
(bad)
(bad)
mov
test
or
and
(bad)
cwde
pop
sub
cmp
cmps
lea
lea
inc
cld
add
ins
test
movs
bound
ins
and
push
xchg
cdq
adc
fs
adc
mov
pop
xchg
push
push
dec
ins
mov
push
into
add
(bad)
(bad)
inc
push
dec
retf
in
daa
(bad)
sar
test
and
inc
ins
sub
dec
jl
call
mov
(bad)
and
arpl
cmp
loope
mov
sub
fdiv
fcomip
push
ins
leave
or
lods
enter
or
mov
cli
bound
addr16
cmp
test
(bad)
jmp
loopne
pop
sub
lods
push
xchg
pop
or
pop
test
fstp
cwde
(bad)
mov
push
ret
pushf
fwait
jl
sub
(bad)
(bad)
(bad)
jmp
shl
push
inc
sbb
retf
test
movs
inc
cli
enter
push
sub
movs
inc
aaa
xchg
fsubr
(bad)
(bad)
jmp
push
xor
(bad)
pop
pop
jp
pop
das
and
hlt
inc
pop
dec
adc
(bad)
(bad)
(bad)
mov
aas
outs
sbb
das
ror
dec
scas
outs
pop
aaa
pop
shl
das
push
jmp
popa
ret
(bad)
inc
dec
outs
or
sub
ss
add
ret
(bad)
loope
das
and
lock
ins
and
xchg
pop
ins
dec
ficom
adc
(bad)
dec
lock
add
lock
adc
dec
sub
and
mov
fwait
(bad)
inc
xor
jmp
js
fwait
xor
and
pop
mov
mov
inc
inc
xor
nop
out
jecxz
or
dec
sub
sbb
nop
pop
mov
and
jg
mov
shl
xchg
add
(bad)
jle
mov
std
jmp
dec
(bad)
(bad)
call
push
jge
xorps
shl
cmp
enter
and
scas
arpl
xchg
add
mov
mov
sub
jmp
push
js
test
ret
xor
(bad)
(bad)
out
cli
jbe
je
(bad)
push
mov
xor
sub
pushf
push
jns
mov
add
in
xchg
add
int
push
push
ficomp
mov
add
cmp
(bad)
out
adc
push
sbb
inc
pop
mov
push
add
movs
rcr
sbb
push
retf
mov
je
in
out
es
ds
inc
mov
icebp
aas
jmp
sti
(bad)
dec
xor
cmp
into
outs
pop
stos
ds
das
test
aad
push
ror
jl
imul
div
(bad)
(bad)
(bad)
jmp
pop
push
pop
push
mov
imul
in
ins
mov
and
push
or
xchg
clc
push
aas
and
mul
sahf
(bad)
out
inc
mov
cld
mov
cli
call
or
cmc
rol
sbb
dec
push
push
xchg
xor
in
fcomp
cmp
outs
shl
pop
jbe
jbe
and
movs
test
and
or
and
push
sub
call
bound
adc
or
imul
out
ret
int3
test
hlt
into
add
ins
(bad)
jg
dec
mov
mov
iret
in
into
sti
fcompp
shr
rcl
add
cli
(bad)
inc
cmp
ss
sti
rcl
and
inc
aam
imul
out
or
rcr
fcomip
(bad)
call
pusha
push
xor
aam
hlt
cs
fdivp
out
lods
push
nop
data16
(bad)
inc
(bad)
nop
imul
(bad)
mov
test
out
retf
pop
mov
push
fsub
push
movs
fnstcw
neg
je
fdivr
mov
mov
mov
(bad)
(bad)
(bad)
mov
fcom
(bad)
int
sahf
or
jnp
addr16
aam
iret
cmp
fs
(bad)
ds
sahf
mov
push
lahf
test
std
pop
jmp
mov
cs
es
mov
ins
loopne
adc
adc
cdq
mov
sub
adc
call
aam
adc
add
dec
dec
mov
ret
push
(bad)
(bad)
call
cmp
js
and
mov
dec
ins
push
arpl
sbb
ret
ficom
aas
popf
sar
out
cli
call
or
cmc
mov
inc
xor
fsubr
cmc
dec
cmps
pop
push
aad
pop
icebp
push
fcomp
adc
mov
sub
scas
add
repnz
(bad)
(bad)
(bad)
frstor
arpl
frstor
and
stc
(bad)
or
(bad)
pop
popa
lods
pop
std
(bad)
dec
dec
add
push
or
ret
pushf
(bad)
xor
or
(bad)
(bad)
(bad)
mov
mov
add
push
xor
and
or
dec
test
and
cld
cmp
sbb
mov
push
pop
fwait
inc
fild
loopne
cld
(bad)
(bad)
call
call
mov
inc
xchg
and
test
adc
inc
inc
jl
dec
mov
add
(bad)
jg
jb
push
out
sub
inc
xchg
test
rcl
push
xor
adc
(bad)
(bad)
(bad)
jmp
adc
push
pop
sbb
mov
hlt
mov
add
inc
cs
mov
sbb
les
clc
add
sub
movs
fisubr
xor
test
aad
jmp
and
mov
push
pop
cmc
(bad)
mov
ret
push
xor
les
or
xchg
mov
sbb
cmp
repz
(bad)
(bad)
(bad)
(bad)
jmp
mov
jmp
sar
mov
lods
adc
cmp
xchg
out
cmp
mov
cld
jns
push
ret
adc
nop
xchg
jmp
stos
dec
sbb
xor
sub
loopne
dec
dec
pop
rcr
push
pop
sub
jmp
xchg
mov
dec
mov
cmc
in
aaa
dec
mov
out
mov
push
(bad)
(bad)
(bad)
jmp
fnclex
add
dec
jb
enter
or
sbb
add
nop
push
jae
lock
jmp
mov
fidiv
outs
(bad)
popf
adc
or
dec
jbe
or
mov
dec
cmp
je
enter
in
(bad)
call
test
adc
add
movs
hlt
push
mov
jmp
movs
inc
xor
(bad)
(bad)
jmp
mov
addr16
xchg
add
adc
jmp
(bad)
(bad)
(bad)
jmp
loope
push
and
stc
cmp
xor
mov
or
add
xchg
in
data16
(bad)
(bad)
mov
pop
xchg
jl
ror
xor
jno
jmp
or
inc
sbb
or
xchg
sar
push
and
and
icebp
cmps
mov
repz
(bad)
(bad)
(bad)
inc
cmp
mov
add
outs
and
loope
fadd
cmc
inc
js
inc
sbb
(bad)
out
xor
aad
mov
nop
inc
shl
mov
adc
in
dec
(bad)
mov
and
(bad)
inc
pop
inc
add
inc
imul
cmps
aas
dec
aam
push
and
pop
xor
movs
push
jo
jmp
arpl
(bad)
in
mov
pop
in
inc
aad
pop
pop
and
std
push
push
sbb
movs
pop
cli
inc
aas
or
(bad)
(bad)
jmp
movs
movs
cmp
push
add
repnz
nop
inc
inc
xchg
mov
das
clc
inc
cmc
dec
fistp
add
add
repnz
and
into
in
pop
pushf
inc
mov
jno
dec
sub
inc
mov
push
mov
shl
jmp
test
in
xlat
dec
pusha
and
sub
cmp
(bad)
jnp
mov
sub
xor
dec
jbe
xor
sub
aas
push
bound
xor
data16
pop
js
add
je
aam
sti
hlt
arpl
dec
das
mov
das
and
nop
jp
and
or
xor
(bad)
(bad)
cli
jge
cdq
sar
popf
je
push
add
sahf
inc
mov
test
and
(bad)
(bad)
(bad)
std
outs
js
pop
shl
hlt
out
cmps
adc
xchg
imul
outs
inc
mov
test
shl
pop
or
xor
dec
sbb
out
push
stc
in
dec
or
repnz
mov
dec
es
jmp
and
push
dec
ins
jmp
test
jle
jmp
dec
and
adc
push
xchg
test
sahf
mov
or
movsx
jmp
fisubr
xchg
mov
rol
push
pushf
dec
add
dec
pop
mov
inc
pusha
xchg
xlat
add
cwde
dec
mov
inc
pusha
add
(bad)
call
fnstcw
inc
mov
mov
pusha
adc
imul
lods
sbb
mov
mov
and
pusha
ds
xchg
add
(bad)
(bad)
jmp
dec
add
push
fst
and
rcr
cmp
cwde
ins
and
(bad)
(bad)
call
add
pop
and
push
or
pop
xor
scas
aaa
xor
ins
mov
pop
dec
mov
in
pop
inc
xor
out
(bad)
(bad)
jmp
sub
ds
scas
cmp
fcomip
fmul
nop
test
or
(bad)
mov
leave
sub
mov
lods
mov
(bad)
xchg
stc
lea
inc
lock
sar
jmp
jne
mov
stos
sub
data16
dec
ins
or
fdivr
push
shl
pop
or
gs
adc
mov
mov
(bad)
mov
sbb
setl
je
cwde
jb
push
dec
cmps
sbb
and
xchg
cli
or
mov
mov
call
imul
adc
mov
sub
inc
push
fistp
jl
jge
pop
mov
(bad)
imul
test
or
stos
push
fisub
imul
jmp
push
jp
add
sbb
dec
push
int
and
or
(bad)
jmp
or
adc
repnz
dec
jge
or
bound
xchg
inc
in
loop
std
pop
gs
add
adc
into
add
sub
pop
pop
xor
or
xor
dec
je
dec
pop
add
or
cdq
es
and
jmp
xchg
adc
sub
mov
leave
in
mov
inc
add
mov
rcr
imul
ins
mov
add
(bad)
fistp
fistp
sub
mov
add
jbe
sbb
lods
ret
xchg
cwde
mov
mov
nop
gs
(bad)
(bad)
push
cmps
sbb
mov
outs
push
add
add
das
push
out
jmp
jmp
add
jmp
or
push
dec
sbb
(bad)
mov
add
adc
ins
stc
xor
push
pop
out
mov
xor
das
call
out
adc
mov
cmp
add
out
cli
inc
stos
fisub
dec
cmp
(bad)
(bad)
mov
mov
std
adc
or
adc
xchg
scas
loope
dec
or
add
sbb
ror
push
shl
std
(bad)
call
inc
stos
pop
or
adc
mov
addr16
js
mov
xor
test
(bad)
(bad)
push
fstp
sbb
push
sahf
push
ss
cmp
cmp
je
enter
or
repnz
loop
mov
xchg
adc
leave
dec
ins
mov
pop
lods
fild
enter
(bad)
clc
hlt
adc
pop
mov
outs
(bad)
ins
sub
sub
add
(bad)
das
and
jg
inc
in
jmp
add
xchg
xchg
sub
sar
inc
int
add
loope
mov
fld
(bad)
jmp
mov
sub
adc
sub
dec
imul
and
test
(bad)
jae
(bad)
(bad)
call
xchg
sub
adc
and
int3
stos
retf
jl
(bad)
add
shl
sar
mov
(bad)
dec
jg
fcomp
pusha
and
daa
fdivr
clc
dec
movs
add
(bad)
mov
in
iret
xchg
test
fs
nop
stos
xchg
neg
lock
(bad)
(bad)
(bad)
call
dec
jmp
ret
jae
ret
xor
leave
add
in
add
push
jae
adc
mov
out
sbb
sub
dec
aam
(bad)
jmp
(bad)
retf
xchg
dec
and
sub
pop
je
push
inc
sbb
jae
(bad)
(bad)
(bad)
(bad)
dec
push
jnp
sub
sahf
and
xchg
jle
add
add
adc
add
push
jmp
xchg
(bad)
pop
sub
rcl
sub
mov
loope
inc
movs
sub
(bad)
jmp
inc
adc
aas
in
adc
xchg
xor
pusha
push
outs
jb
sbb
(bad)
call
xor
and
push
or
xor
push
mov
iret
xor
cli
(bad)
inc
(bad)
dec
lock
inc
jno
push
push
cmc
add
pusha
xor
mov
pop
push
pop
mov
(bad)
inc
and
gs
add
stc
gs
ins
push
stos
and
out
jl
jmp
inc
push
pusha
inc
stos
mov
cmp
cmp
push
add
mov
or
(bad)
fstp
scas
cmp
aad
ds
std
data16
call
std
mov
imul
add
xor
(bad)
sbb
aas
pop
mov
out
clc
aad
pop
outs
mov
pushf
das
mov
fcmovne
inc
add
mov
(bad)
push
(bad)
jmp
(bad)
stos
inc
adc
inc
push
push
cmp
push
sbb
pop
and
cmp
fimul
(bad)
jnp
inc
mov
sbb
sbb
pop
shl
icebp
aad
dec
scas
xor
enter
sar
inc
cmp
lock
and
stos
sbb
clc
aaa
fcom
push
mov
push
test
or
and
imul
push
sub
or
loope
outs
retf
cld
xchg
stos
xchg
icebp
or
ret
dec
mov
lods
dec
sub
dec
out
jg
xlat
fist
push
xchg
(bad)
mov
lock
call
and
or
mov
or
stos
(bad)
inc
repnz
ins
aas
sbb
or
cmps
cmp
pusha
std
pop
or
loopne
add
rol
jl
inc
push
fnstcw
sbb
sub
repz
sub
jmp
adc
in
nop
dec
jnp
mov
sub
jle
dec
dec
sti
fidiv
test
sub
(bad)
fld
xchg
jns
lods
push
rcl
sub
fs
in
cmp
dec
pop
cs
cmp
pop
pop
mov
lods
cs
test
loop
scas
mov
mov
mov
cmps
test
call
cs
dec
push
(bad)
cs
push
idiv
(bad)
(bad)
fild
(bad)
fidivr
fwait
sbb
pop
xor
inc
xor
idiv
cmp
cld
call
pushf
(bad)
pop
push
fdiv
cmp
jl
pop
and
or
push
adc
ds
mov
sbb
(bad)
(bad)
jmp
jnp
and
and
push
cwde
add
repnz
and
dec
xor
int
ret
(bad)
(bad)
dec
daa
je
lods
sub
jno
cs
push
imul
ds
(bad)
(bad)
push
enter
js
test
inc
cmp
into
int3
movs
cmps
lods
inc
popa
hlt
loopne
sbb
pop
mov
sub
(bad)
cld
mov
sub
xchg
mov
jl
retf
or
add
dec
dec
lds
sbb
test
jg
scas
add
xchg
xor
jmp
add
div
or
sbb
fcomip
jmp
loope
and
add
retf
arpl
(bad)
jmp
sti
pcmpeqd
sub
or
iret
xchg
add
push
pop
lea
loopne
outs
clc
call
sub
add
mov
sbb
fwait
mov
outs
js
aas
dec
xor
pop
cld
jmp
xchg
push
dec
daa
jae
push
(bad)
bound
sti
pop
dec
xor
(bad)
(bad)
call
cmp
dec
mov
jno
push
add
syscall
daa
push
in
cmp
(bad)
(bad)
dec
sub
stos
inc
outs
icebp
into
fwait
test
cld
adc
cmp
xchg
sub
enter
mov
hlt
lock
(bad)
(bad)
jmp
imul
mov
jo
ret
push
add
mov
pop
xchg
jb
(bad)
jmp
stos
dec
push
dec
mov
jg
cmp
test
(bad)
mov
jl
pop
call
movs
inc
rol
ja
adc
repnz
(bad)
(bad)
fbld
inc
or
ins
and
jp
sbb
jmp
inc
dec
shr
mov
test
ror
loop
sub
outs
aad
(bad)
(bad)
inc
add
adc
mov
or
fld
out
dec
nop
adc
cmps
fsub
cdq
add
jecxz
sbb
ins
push
adc
jbe
(bad)
ret
dec
popa
xchg
loop
rcl
(bad)
(bad)
(bad)
(bad)
jns
jo
cmp
jns
xchg
cmp
popa
in
popa
mov
push
cmp
sub
(bad)
inc
add
popa
lock
and
push
ja
mov
dec
aaa
or
dec
fwait
jnp
push
xor
push
out
test
pop
push
std
(bad)
inc
pusha
and
or
add
push
or
pop
sbb
enter
pop
dec
xor
cmp
(bad)
fdivr
adc
dec
push
pop
std
dec
scas
and
in
mov
arpl
(bad)
mov
inc
fs
xchg
out
add
cmp
or
mul
mov
or
cli
inc
sbb
jb
js
xchg
mov
scas
(bad)
call
test
sub
mov
adc
imul
(bad)
(bad)
(bad)
call
mov
xchg
in
loop
test
and
fcomi
mov
fimul
(bad)
(bad)
call
mov
push
lods
in
fisub
pusha
xchg
adc
outs
pop
push
mov
(bad)
dec
ror
retf
sbb
pop
mov
inc
add
(bad)
jg
inc
and
and
mov
mov
and
mov
add
(bad)
(bad)
call
test
gs
mov
push
xor
retf
repz
enter
pop
inc
hlt
push
dec
cmp
cmp
sar
dec
addr16
mov
imul
(bad)
jmp
xchg
push
pop
leave
mov
and
cmp
fadd
mov
sti
fs
enter
cbw
push
xchg
sub
stos
push
push
fidiv
dec
inc
lock
(bad)
jg
call
fisubr
cmp
jbe
or
push
pop
inc
push
(bad)
mov
jl
mov
sahf
addr16
xor
jo
dec
and
aaa
fwait
in
add
pop
cmp
bound
fs
inc
push
sub
lods
cmp
inc
js
adc
daa
pop
dec
in
int
(bad)
(bad)
(bad)
dec
(bad)
imul
xchg
cmps
or
cmp
xchg
ds
xchg
stos
xor
sti
test
(bad)
jmp
sahf
loopne
test
dec
adc
pop
dec
scas
pop
hlt
stos
mov
shr
xor
or
adc
dec
in
push
(bad)
dec
or
or
sbb
fcomp
add
or
or
cld
loopne
(bad)
call
dec
jae
adc
aaa
mov
add
fs
call
sub
add
inc
movs
and
add
cmp
(bad)
(bad)
call
ins
and
pop
bound
mov
inc
adc
jae
xchg
(bad)
dec
sub
stos
adc
pop
mov
(bad)
(bad)
(bad)
inc
and
jno
mov
xor
sub
pushf
mov
xchg
in
push
mov
nop
ja
jle
inc
leave
mov
inc
icebp
add
cmp
jle
pop
in
mov
ins
sbb
cmps
(bad)
jmp
jb
mov
inc
xchg
lea
or
jmp
lods
mov
imul
mov
cmp
in
add
push
nop
es
nop
xchg
(bad)
(bad)
(bad)
dec
pop
in
enter
ror
inc
lock
inc
js
rcl
pop
mov
std
iret
sub
(bad)
dec
cmp
test
dec
xor
cs
dec
push
or
and
(bad)
fist
mov
cmp
mov
in
and
add
pop
dec
push
push
xchg
mov
cmp
or
push
test
mov
or
mov
push
mov
xor
dec
jne
mov
not
(bad)
cmp
call
shl
dec
retf
inc
inc
lods
xor
jno
xchg
movs
mov
sbb
aam
dec
jecxz
(bad)
fadd
inc
fwait
add
inc
pop
(bad)
mov
mov
movs
fdivrp
(bad)
call
inc
inc
add
sub
pusha
inc
jne
and
pop
or
mov
(bad)
(bad)
(bad)
dec
ret
or
jg
push
sbb
xchg
push
jmp
push
or
push
(bad)
mov
dec
popf
sub
(bad)
(bad)
push
ret
pop
shl
or
pop
push
lods
push
sub
push
sub
xor
ret
push
cmp
pop
pop
mov
sub
xchg
or
push
mov
push
ss
imul
add
mov
push
into
aad
repz
jbe
(bad)
(bad)
(bad)
dec
push
stos
in
dec
push
mov
je
outs
dec
inc
lods
outs
icebp
cmc
xchg
test
pop
add
call
or
call
in
fdiv
pop
dec
loopne
(bad)
(bad)
(bad)
call
pusha
lods
rcl
xchg
cmps
loope
or
pusha
jno
lods
push
mov
or
ret
push
jo
daa
dec
xchg
and
dec
ret
(bad)
cmp
adc
sub
cmp
push
pop
mov
cld
jns
js
mov
sub
gs
xor
sbb
inc
adc
xchg
inc
inc
cdq
outs
dec
sbb
adc
add
stc
or
sub
mov
cmp
sub
repz
xor
inc
add
nop
sbb
int3
inc
push
add
mov
xchg
push
je
sar
jmp
daa
inc
adc
cmp
fnstenv
mov
or
das
push
lock
or
not
dec
push
jbe
retf
jmp
outs
push
fwait
ret
mov
adc
dec
jno
mov
adc
push
cmp
push
push
jmp
daa
pop
push
push
pop
push
test
sub
dec
aas
jle
add
(bad)
(bad)
call
fmul
outs
push
xor
xor
pop
add
movs
add
outs
bound
or
ins
adc
(bad)
(bad)
dec
pop
adc
mov
sub
add
shl
ret
int
push
cs
adc
mov
ins
imul
or
into
push
and
sbb
stc
push
nop
inc
rcl
(bad)
mov
popf
add
mov
(bad)
(bad)
(bad)
call
lods
ins
jecxz
or
add
addr16
clc
outs
stc
or
psraw
or
sbb
add
add
push
fidiv
cmc
outs
inc
adc
les
add
add
mov
pop
lods
mov
sub
or
pop
xchg
call
rol
or
push
std
or
push
pop
push
mov
das
ins
mov
sub
inc
imul
add
imul
push
adc
pop
sbb
in
or
mov
js
push
pop
jbe
mov
add
inc
test
adc
(bad)
(bad)
jg
xchg
mov
sahf
push
xchg
icebp
addr16
cmp
popa
jmp
adc
leave
and
(bad)
jmp
xor
in
mov
mov
pop
xchg
fsubr
(bad)
mov
dec
retf
or
iret
adc
fimul
add
sbb
popa
inc
sub
jmp
clc
inc
rcr
push
adc
jmp
cmps
pop
arpl
mov
push
mov
mov
and
out
in
or
sbb
ins
jmp
mov
ins
or
and
fwait
push
cmp
les
icebp
dec
sub
mov
dec
psubw
cld
mov
loopne
pop
push
ins
repz
pop
push
(bad)
jg
and
push
sbb
jns
dec
lock
(bad)
(bad)
fisttp
not
sub
pop
and
in
mov
pop
cld
es
cmp
mov
bound
std
(bad)
jmp
push
jo
xchg
test
mov
jns
call
call
cld
(bad)
jmp
adc
sbb
xchg
pop
test
jge
cld
xchg
jne
jo
(bad)
call
inc
mov
bound
sub
push
lods
mov
(bad)
jno
dec
clc
jmp
pusha
neg
call
inc
jmp
push
in
push
jae
outs
inc
fisttp
imul
adc
jmp
xor
or
hlt
push
xchg
cmps
ja
xor
add
(bad)
dec
js
enter
outs
add
test
dec
sbb
sub
ror
cmp
or
add
daa
ins
pop
mov
xor
or
sub
(bad)
(bad)
(bad)
(bad)
out
add
or
pusha
sub
loopne
adc
pop
fs
out
cdq
jb
loop
sti
xchg
es
ins
push
push
test
mov
xor
test
movs
je
dec
aad
popa
add
pop
cmp
or
bound
pop
xchg
cli
arpl
in
or
mul
pop
clc
scas
jo
jecxz
jo
push
ror
ins
fdiv
add
jecxz
lods
or
ret
ror
adc
dec
sub
aaa
fmul
aas
jne
add
(bad)
dec
push
fild
or
jne
sub
xchg
mov
test
sub
divps
loopne
add
mov
(bad)
(bad)
outs
ja
adc
or
(bad)
fdivr
push
and
cmp
(bad)
jmp
popa
mov
sti
inc
fist
fisub
pop
pop
std
jmp
lods
clc
(bad)
(bad)
jmp
push
cmp
mov
out
xchg
sub
push
push
mov
rol
xchg
inc
mov
or
aad
push
dec
popa
dec
sub
sbb
pause
cmps
pop
(bad)
cli
sbb
cmp
and
push
pop
nop
ds
pop
pusha
dec
lock
enter
sub
inc
lock
add
pop
les
jmp
call
jecxz
or
or
cmp
cmp
mov
cmp
dec
add
movs
push
lock
aaa
mov
arpl
(bad)
(bad)
(bad)
jmp
clc
sub
(bad)
xchg
adc
sar
xor
int
pop
pop
ja
imul
sub
call
add
xor
mov
jno
mov
jno
sub
scas
cmp
jmp
mov
movs
or
mov
cli
add
push
imul
add
repnz
or
bound
pop
aam
xchg
jp
out
(bad)
(bad)
jmp
dec
clc
arpl
mov
pop
ins
shr
cmc
pop
pop
jge
pop
fcom
in
loope
mov
add
pop
push
inc
cdq
cdq
mov
inc
cmovno
mov
stc
int
jmp
and
addr16
mov
jmp
(bad)
(bad)
(bad)
jmp
push
jle
cmp
ins
xchg
sub
in
adc
les
adc
mov
cmp
bound
inc
aad
inc
or
sbb
arpl
cwde
ror
adc
imul
push
jecxz
(bad)
(bad)
call
sbb
mov
pop
lea
fld
fnstsw
mov
push
or
xor
and
stos
pusha
mov
xchg
mov
dec
jle
(bad)
jg
inc
and
cld
mov
iret
dec
adc
and
outs
xchg
enter
outs
mov
and
ror
bound
inc
push
pop
inc
push
(bad)
mov
sub
push
jle
repz
icebp
(bad)
dec
loopne
addr16
cmp
stos
inc
js
or
sub
cmps
add
fiadd
and
(bad)
(bad)
(bad)
(bad)
out
test
push
dec
ror
add
pop
sub
sub
gs
aas
jl
(bad)
(bad)
jmp
push
inc
bound
add
adc
popf
lods
xor
or
pop
movs
mov
add
(bad)
call
js
dec
sbb
loop
sbb
(bad)
scas
pop
test
(bad)
(bad)
(bad)
jmp
shl
pop
gs
or
xor
in
and
sti
jle
inc
mov
dec
pop
sub
dec
cmp
aas
inc
add
(bad)
mov
push
or
xor
and
mov
(bad)
jmp
adc
inc
or
inc
pop
das
sbb
dec
xchg
retf
in
in
push
or
(bad)
out
pop
add
push
dec
das
inc
mov
sbb
cmp
(bad)
jmp
lods
outs
popa
test
ja
jmp
lods
xchg
and
mov
(bad)
(bad)
inc
imul
push
pop
push
or
mov
add
inc
pop
adc
jmp
pop
push
or
push
dec
and
dec
fistp
icebp
and
(bad)
jg
dec
inc
and
pop
data16
movs
nop
movs
dec
inc
fst
dec
mov
dec
jae
dec
dec
jecxz
(bad)
(bad)
(bad)
jmp
inc
xor
(bad)
push
push
ja
cmp
ret
popa
jo
mov
push
popa
push
push
imul
(bad)
jmp
pop
push
jno
aas
add
and
adc
in
mov
imul
retf
jo
jg
add
cli
(bad)
call
call
pop
inc
adc
or
ret
adc
cdq
adc
js
push
ret
push
shr
add
(bad)
aas
pushf
mov
jmp
sub
or
or
fmul
add
(bad)
push
in
cli
dec
jge
dec
(bad)
mov
cmps
ins
inc
into
jbe
push
cli
and
mov
daa
ins
mov
inc
or
cmc
push
sbb
xchg
stos
mov
mov
or
sub
pop
jo
lods
dec
push
sbb
and
or
(bad)
in
or
movs
inc
xor
rcl
jno
xor
(bad)
dec
js
leave
ror
sub
sbb
retf
sbb
sub
mov
iret
fxch
loop
sub
push
add
adc
mov
dec
pushf
push
sbb
inc
mov
and
(bad)
jg
push
aad
stos
cmp
pop
jle
cmp
inc
mov
sbb
and
cmp
dec
psubb
outs
pop
push
xchg
xchg
add
mov
pop
xchg
(bad)
(bad)
(bad)
fcomip
leave
outs
adc
sub
xchg
push
fmul
mov
mov
es
and
ins
dec
(bad)
(bad)
(bad)
push
rcr
push
repnz
ins
cmps
mov
xchg
dec
sub
dec
in
nop
or
aaa
ss
or
clc
in
mov
pushf
sub
icebp
loopne
(bad)
(bad)
out
mov
adc
lds
or
int
add
mov
adc
pop
and
jge
cwde
xor
sub
add
js
xor
lea
mov
cmp
add
add
(bad)
dec
inc
les
rcr
out
dec
call
rcl
xchg
cmp
jmp
and
add
stos
jno
or
mov
int3
jno
sub
mov
fs
outs
add
arpl
jne
xchg
test
dec
mov
adc
inc
into
test
mov
add
xor
or
or
outs
mov
push
push
or
int3
jl
mov
ret
mov
fldenv
fnstsw
jmp
adc
ret
mov
cmp
push
clc
lea
push
mov
(bad)
cmp
sub
pop
dec
xor
adc
dec
xor
xor
mov
std
mov
ja
dec
cld
push
dec
sub
(bad)
(bad)
(bad)
jmp
mov
jne
sbb
and
xchg
dec
pop
and
shl
iret
and
pop
lea
fs
xchg
or
sub
and
xchg
int
pusha
mov
add
das
add
adc
(bad)
(bad)
(bad)
jmp
xchg
clc
sahf
push
sbb
sbb
rol
pushf
jne
fdiv
adc
jp
cmp
xor
or
mov
dec
jne
xor
add
les
jge
(bad)
jg
pop
ds
jne
adc
sbb
sbb
mov
pop
jb
(bad)
(bad)
(bad)
fcomp
pop
sub
enter
xlat
sub
jne
cmp
frstor
adc
les
mov
mov
mov
call
fst
daa
push
jno
mov
jmp
imul
pop
cmc
scas
mov
xor
mov
pop
sbb
mov
aaa
loopne
inc
lods
(bad)
(bad)
(bad)
inc
rcl
xchg
cmp
push
nop
cmp
in
xchg
rol
push
aas
not
jo
icebp
fmulp
(bad)
(bad)
(bad)
inc
or
jne
inc
out
inc
mov
jg
pusha
out
nop
push
jb
dec
jne
push
inc
mov
fcomip
mov
mov
je
push
popa
adc
pop
call
std
mov
mov
bound
or
mov
fcomip
add
je
test
mov
fwait
rol
pop
aaa
aas
cs
sbb
jmp
add
lods
leave
out
and
adc
adc
call
mov
and
shl
ret
add
inc
rcr
sub
add
jmp
inc
retf
dec
push
(bad)
(bad)
(bad)
inc
fmul
mov
adc
push
mov
push
test
das
or
jmp
(bad)
call
(bad)
inc
mov
(bad)
retf
outs
aas
dec
add
ret
in
inc
dec
inc
pop
sub
outs
cli
jmp
cmp
sbb
sub
pop
and
adc
mov
(bad)
call
inc
push
jecxz
fdiv
daa
sub
adc
sub
bndstx
mov
inc
mov
mov
mov
inc
pop
js
data16
sub
jns
vmread
inc
ins
ss
clc
cmp
ficomp
(bad)
(bad)
(bad)
jmp
(bad)
xchg
xchg
daa
inc
jns
sub
data16
or
jle
rol
sbb
loopne
adc
(bad)
dec
aam
jns
dec
jmp
inc
imul
cwde
(bad)
fs
pop
xor
scas
cli
(bad)
jmp
xor
inc
lahf
sub
ficom
std
rcl
and
fs
(bad)
mov
xchg
dec
inc
xchg
mov
(bad)
(bad)
call
pop
jmp
xchg
adc
lods
stc
add
call
or
cmc
add
jne
push
test
scas
idiv
(bad)
(bad)
call
add
push
or
jp
add
mov
adc
outs
nop
dec
ret
shl
hlt
mov
fwait
add
jns
pop
mov
push
mov
(bad)
into
shl
inc
xchg
inc
jbe
lock
dec
cvtpi2ps
fcmove
mov
cwde
ret
xchg
add
inc
fdivr
(bad)
(bad)
(bad)
mov
add
rcl
pop
mov
ret
jmp
fidiv
lds
(bad)
jg
and
loopne
add
cmps
sbb
jmp
dec
js
jg
jmp
ret
iret
inc
or
es
jae
test
xchg
ret
push
or
pop
mov
and
adc
inc
push
loope
ror
adc
add
pop
imul
or
ror
jg
add
sbb
sbb
sub
sub
pop
adc
mov
scas
outs
sbb
test
jl
jmp
icebp
(bad)
inc
push
lea
dec
imul
fimul
or
popf
xor
mov
mov
mov
(bad)
mov
dec
jmp
pop
pop
nop
pop
sti
call
jmp
mov
not
je
and
aaa
mov
movsx
(bad)
(bad)
mov
ret
push
ficom
out
xor
cmp
and
add
mov
addr16
adc
test
cmp
out
or
push
or
pop
sub
das
inc
push
adc
(bad)
(bad)
call
cli
sbb
retf
pusha
arpl
test
aam
add
(bad)
jmp
sub
mov
lahf
or
mov
or
jmp
sar
loope
or
dec
in
pop
(bad)
(bad)
lahf
pop
jge
sbb
inc
sub
inc
sahf
mul
ins
lods
lock
(bad)
push
cmp
pop
push
and
adc
ret
add
clc
dec
mov
(bad)
inc
jp
inc
sub
adc
dec
jmp
dec
and
xchg
adc
repz
fistp
mov
pop
xchg
and
jg
inc
loope
push
imul
loope
dec
movzx
pop
mov
jp
(bad)
(bad)
(bad)
cmp
shl
ror
xchg
outs
sbb
out
sbb
inc
gs
pop
inc
test
dec
add
(bad)
adc
les
dec
call
stc
dec
pop
sub
dec
mov
ror
(bad)
out
or
push
sub
xchg
(bad)
(bad)
(bad)
dec
xchg
push
jno
jo
jge
push
mov
enter
pop
push
repz
push
or
dec
adc
int3
(bad)
fcomip
mov
test
pop
inc
dec
dec
cli
mov
iret
pop
(bad)
or
(bad)
(bad)
dec
call
pop
loope
inc
(bad)
das
fs
movs
dec
ret
adc
call
xchg
ret
or
and
aas
repnz
xor
push
repnz
xchg
adc
jle
(bad)
(bad)
call
dec
inc
jecxz
imul
mov
xchg
sar
dec
(bad)
dec
jb
or
adc
inc
cld
(bad)
inc
inc
clc
vcmpss
neg
in
jmp
dec
inc
pop
(bad)
cld
(bad)
dec
sub
inc
push
inc
jg
fsubr
dec
push
addr16
xchg
mov
push
xchg
cmc
add
jo
mov
fadd
test
jmp
sbb
or
push
and
push
inc
dec
int
jle
(bad)
call
shr
enter
and
inc
ins
or
popa
add
xchg
mov
xchg
(bad)
(bad)
push
test
sub
es
test
or
adc
adc
jmp
adc
call
sub
mul
inc
nop
fisub
inc
mov
dec
mov
inc
inc
add
xchg
je
cmc
(bad)
mov
xchg
fcomp
pusha
movs
in
sub
dec
(bad)
fisub
push
add
shl
ins
or
movs
loope
sub
sub
inc
jp
mov
(bad)
cmp
xchg
xchg
push
push
nop
ss
sbb
xor
stc
cmps
xchg
mov
gs
ret
nop
(bad)
(bad)
call
pop
add
xchg
pop
mov
(bad)
repz
mov
les
rol
add
fild
in
cmp
shl
loop
push
repnz
enter
(bad)
(bad)
jmp
push
aas
xlat
and
or
inc
stc
out
popa
setb
jle
xchg
jae
or
(bad)
call
add
scas
xor
push
jne
add
mov
(bad)
(bad)
mov
stos
cmp
mov
xor
pop
in
jnp
add
or
mov
test
mov
icebp
fbld
cmc
push
pop
cmp
scas
(bad)
jg
(bad)
jl
test
push
imul
pop
mov
mov
lock
jg
(bad)
mov
jle
xor
sbb
jmp
mov
sbb
fmul
or
(bad)
push
jecxz
(bad)
jns
dec
push
fwait
xchg
sahf
add
mov
or
sbb
jp
push
sbb
test
jmp
dec
xchg
push
mov
retf
loope
push
rol
xchg
dec
add
dec
gs
adc
test
jecxz
and
inc
push
sbb
(bad)
call
sbb
cld
fwait
(bad)
fisubr
add
sbb
hlt
or
lock
jne
sub
ror
loopne
(bad)
dec
call
push
or
and
push
stos
mov
(bad)
(bad)
(bad)
jmp
push
inc
test
xor
clc
jne
aaa
mov
rcr
stos
add
jmp
das
or
sbb
push
mov
in
xchg
add
add
add
xor
test
sub
int
mov
jmp
call
or
retf
mov
jbe
adc
jl
mov
das
mov
(bad)
jmp
cmp
and
lods
or
push
ret
inc
movs
add
sbb
sbb
mov
(bad)
call
push
cdq
xchg
mov
icebp
or
push
dec
sbb
popf
xor
pop
add
getsec
clc
(bad)
pop
adc
or
jmp
ja
bound
push
test
dec
jne
xchg
in
rcl
inc
std
fwait
(bad)
(bad)
(bad)
(bad)
cmp
nop
jo
hlt
push
je
adc
and
int
and
xchg
pushf
cli
jmp
push
ss
jg
add
jmp
jno
outs
fdivr
(bad)
(bad)
(bad)
fcmovnbe
sub
mov
add
daa
sbb
xor
es
cmp
mov
clc
pop
or
movs
pop
add
clc
adc
lock
(bad)
jg
mov
repnz
jl
push
jnp
gs
lock
(bad)
jmp
cmp
cmp
add
mov
or
es
(bad)
(bad)
inc
pop
test
into
js
dec
sub
mov
loop
cmp
jnp
(bad)
call
adc
push
adc
xchg
xor
mov
outs
adc
repz
test
dec
adc
enter
jge
adc
test
test
xchg
mov
or
mov
or
idiv
push
(bad)
(bad)
fild
cmp
out
xor
push
adc
adc
imul
std
call
push
xchg
adc
gs
mov
fsubr
pop
pop
mov
mov
xchg
sbb
test
hlt
sub
test
xchg
sbb
(bad)
dec
push
imul
repnz
movs
fmul
cmp
lods
(bad)
jmp
and
(bad)
hlt
dec
adc
popa
daa
pop
ficom
inc
pop
xchg
outs
cli
imul
pop
sub
cmp
(bad)
dec
lock
mov
hlt
sbb
fiadd
cmps
(bad)
dec
(bad)
dec
push
pop
dec
inc
or
jb
fsubr
or
xor
adc
cld
js
test
nop
dec
aas
adc
jae
mov
xor
mov
push
clc
(bad)
cmp
clc
je
cdq
fstp
cs
pop
hlt
push
lock
mov
inc
sbb
jnp
mov
bound
and
loope
aas
and
xor
or
stc
jmp
push
aaa
adc
jg
or
dec
es
pop
pop
sbb
inc
and
mov
push
add
pop
sub
jge
add
jl
and
fcomp
imul
in
pusha
dec
mov
xor
sbb
in
(bad)
ss
ins
das
jmp
jmp
(bad)
(bad)
(bad)
call
js
cmp
push
(bad)
mov
popf
jmp
sub
xchg
ds
add
ja
inc
lds
(bad)
(bad)
call
mov
rcl
pop
mov
jg
push
inc
stc
dec
or
mov
pop
jno
ins
nop
(bad)
(bad)
call
cmp
dec
cli
inc
fiadd
aam
mov
imul
test
push
iret
fwait
sar
out
cwde
adc
in
fimul
and
(bad)
call
sar
inc
xor
hlt
jo
mov
xor
mov
dec
cld
(bad)
jmp
inc
jecxz
lds
inc
retf
sub
(bad)
sbb
aaa
in
inc
(bad)
jg
dec
ror
push
jmp
or
dec
or
in
fbstp
push
xchg
(bad)
inc
cld
in
pop
cmps
pop
dec
enter
fcomp
dec
fldcw
pop
ror
(bad)
(bad)
jmp
push
push
adc
cmp
sbb
push
or
gs
loope
pop
(bad)
mov
(bad)
(bad)
(bad)
dec
push
sub
inc
clc
ins
or
adc
daa
ja
cld
cs
mov
push
jmp
or
stos
push
sbb
dec
mov
pop
cmps
(bad)
(bad)
(bad)
jg
sbb
dec
outs
out
xor
mov
pop
dec
xor
inc
es
(bad)
jmp
fcomp
shl
test
cdq
pop
nop
sbb
movs
mov
jmp
(bad)
cmps
or
pop
mov
data16
inc
adc
mov
rcr
sub
xor
sub
dec
xchg
xor
adc
pop
add
(bad)
pop
ret
fcos
fist
jbe
outs
push
in
or
sub
adc
mov
and
(bad)
dec
jmp
jne
(bad)
adc
add
jbe
cmps
test
arpl
pop
sub
pop
outs
je
push
(bad)
(bad)
call
inc
jne
inc
dec
pop
shl
add
cmp
or
sbb
clc
jg
scas
scas
cmp
or
jmp
(bad)
(bad)
call
cmp
icebp
adc
or
or
cmp
push
arpl
cmp
and
(bad)
(bad)
(bad)
aas
ret
mov
sar
cmps
sbb
or
add
clc
in
and
jg
and
inc
push
adc
(bad)
daa
lods
cmp
aaa
adc
xchg
push
je
jb
push
and
iret
add
dec
scas
xchg
or
or
cmp
mov
fwait
(bad)
(bad)
jmp
push
test
adc
sub
push
inc
jl
mov
sbb
jbe
out
daa
or
clc
ficomp
jnp
(bad)
(bad)
dec
daa
shr
jecxz
ins
dec
imul
xor
aaa
adc
sbb
or
pop
cld
fadd
ror
(bad)
(bad)
call
shl
inc
js
mov
sub
mov
gs
sbb
add
(bad)
(bad)
(bad)
jmp
xchg
nop
adc
jmp
ins
sbb
cs
fild
and
rol
loopne
dec
sar
add
add
nop
clc
mov
sbb
cmp
mov
(bad)
dec
pause
lahf
sti
dec
loopne
loopne
sub
push
or
scas
pop
pop
(bad)
scas
fcomip
fcomip
cmp
cmp
pop
xchg
adc
outs
movs
test
ins
shl
sar
cs
mov
mov
mov
xchg
rcr
jmp
mov
clc
inc
pusha
fnstcw
aad
(bad)
call
lock
ficomp
or
xchg
mov
fsub
push
dec
aas
ins
mov
(bad)
cmps
sub
pop
lods
sbb
xchg
aas
dec
fistp
lods
adc
js
(bad)
(bad)
call
(bad)
retf
scas
xor
push
cmp
pop
jne
dec
xor
fistp
mov
jb
sub
lods
enter
inc
mov
or
jl
xchg
bound
jne
or
pop
(bad)
dec
inc
out
inc
aas
or
or
fst
and
pop
adc
out
xchg
test
dec
pop
xchg
or
pop
mov
dec
or
aaa
cdq
sar
mov
and
loopne
(bad)
inc
sbb
mov
in
loope
add
mov
xor
xchg
(bad)
pop
push
xchg
mov
mov
or
or
sar
jg
inc
adc
or
psrad
je
and
jg
call
loop
or
adc
cmp
out
mov
push
xchg
pop
and
jmp
dec
es
jmp
cmp
jmp
(bad)
jg
mov
rcr
sar
jbe
push
adc
fs
cmp
push
sub
pop
scas
test
out
mov
cmp
or
sbb
test
sbb
(bad)
(bad)
push
mov
iret
push
leave
pop
xchg
pop
outs
xor
sub
push
xchg
cli
xchg
xchg
dec
mov
xor
dec
and
xor
dec
and
cld
outs
mov
(bad)
push
cmp
test
adc
aaa
std
jg
lock
and
inc
xchg
pop
lods
push
inc
dec
xor
dec
imul
jg
xchg
icebp
(bad)
jmp
sub
lods
cmp
add
mov
and
(bad)
(bad)
(bad)
clc
rol
adc
xor
ss
fisttp
and
push
xlat
mov
mov
lods
out
add
lods
push
pop
pop
add
out
outs
inc
inc
adc
xchg
pop
xchg
lods
in
ficomp
mov
int3
pop
xlat
sbb
cmp
pop
xchg
pop
es
dec
(bad)
(bad)
call
cmp
push
imul
inc
popf
sbb
jo
and
enter
cmc
(bad)
jmp
pop
or
add
addr16
nop
adc
fimul
push
(bad)
jg
inc
fcomp
mov
out
dec
(bad)
sti
add
xlat
je
call
xlat
cmp
aaa
aas
add
mov
jae
push
ds
(bad)
dec
and
and
je
add
mov
jmp
sub
mov
cmp
pop
or
std
(bad)
jg
pop
sar
test
xchg
aas
mov
push
inc
jae
daa
sar
sbb
add
xchg
adc
(bad)
(bad)
inc
mov
in
out
and
call
mov
and
jne
scas
mov
dec
cld
mov
jmp
add
sbb
aam
dec
pop
sub
rol
or
jns
fmul
mov
cmp
imul
(bad)
(bad)
(bad)
inc
pop
xchg
out
pop
or
sub
adc
push
pusha
add
jp
push
or
mov
mov
mov
add
jg
jmp
jo
jmp
jmp
push
addr16
shl
(bad)
(bad)
(bad)
inc
add
push
mov
sbb
and
test
scas
ja
dec
mov
inc
(bad)
or
mov
add
push
and
nop
sub
mov
(bad)
jg
dec
push
cmp
hlt
mov
aam
movs
in
mov
xor
adc
movs
dec
cli
fsubr
imul
and
(bad)
(bad)
push
int
rol
xor
and
je
push
outs
and
push
es
imul
inc
clc
je
and
scas
pop
mov
iret
pop
popf
call
jmp
ret
add
nop
push
and
rol
and
enter
pop
pop
(bad)
cld
dec
loopne
movs
idiv
nop
mov
lock
push
push
dec
sub
jg
sub
and
scas
int3
cvtpi2ps
push
lds
(bad)
cmp
imul
cmp
jp
adc
pop
or
push
mov
jmp
mov
fisttp
ffreep
cmp
nop
jmp
pop
arpl
mov
das
adc
xchg
add
rcr
ins
add
push
dec
sti
dec
stos
pop
fisub
sub
js
adc
dec
clc
(bad)
jmp
int
out
jne
pushf
dec
jne
mov
sbb
or
jo
jg
lahf
ret
and
mov
dec
leave
jecxz
out
mov
call
outs
mov
jnp
add
xchg
mov
call
jnp
repnz
enter
push
xor
sub
push
or
out
adc
or
call
sub
sub
retf
lahf
jb
idiv
call
lock
lock
cmp
enter
sub
ror
cmps
sbb
mov
(bad)
fcomip
mov
or
test
ins
cmp
rcl
cld
or
in
test
push
(bad)
(bad)
call
ins
push
push
cld
pop
pop
mov
cs
pop
call
call
repnz
dec
and
and
retf
sub
mov
in
in
sbb
fst
(bad)
(bad)
(bad)
push
outs
add
or
xor
enter
xlat
inc
adc
test
jo
(bad)
fistp
mov
xor
cwde
fistp
and
cmp
jb
cmps
adc
dec
sub
adc
gs
hlt
mov
(bad)
(bad)
dec
ret
jl
pop
jne
into
xchg
and
jge
fisubr
adc
adc
xor
jmp
shr
repnz
addr16
sub
enterw
test
ret
pop
nop
dec
jg
add
lock
test
sbb
movs
adc
adc
(bad)
(bad)
jmp
mov
out
std
ret
das
loope
or
sub
cmp
adc
or
adc
inc
inc
shr
mov
dec
not
(bad)
(bad)
(bad)
(bad)
out
cwde
int3
pop
mov
movs
clc
mov
or
jmp
(bad)
xchg
pop
and
add
jmp
cli
dec
imul
push
dec
cdq
cli
sbb
stos
ds
(bad)
(bad)
fadd
push
pop
jl
fxch
mov
pop
pop
pop
push
pop
push
cmp
lods
xor
or
cld
fbstp
or
fistp
test
inc
sub
shr
adc
add
int3
ret
shl
cmp
fild
fcomp
arpl
cmp
ret
(bad)
inc
push
sub
loope
cmc
test
and
cmp
aad
inc
je
inc
scas
(bad)
(bad)
mov
ins
mov
and
sub
mov
out
dec
(bad)
dec
adc
push
push
cmc
test
pop
cmp
(bad)
sbb
mov
push
jmp
cld
(bad)
push
ret
ror
xor
iret
push
icebp
ins
inc
sub
adc
call
add
adc
cmp
fcom
and
mov
out
push
mov
je
add
jo
inc
in
mov
sub
fdiv
fmul
lock
mov
cmps
lea
ss
push
jecxz
shl
loopne
(bad)
(bad)
dec
cmp
fild
cmp
lahf
idiv
(bad)
(bad)
(bad)
jg
fbld
fs
inc
imul
add
mov
leave
arpl
dec
cdq
pusha
inc
rcr
or
mov
mov
(bad)
fcomip
mov
hlt
or
psraw
mov
aam
(bad)
(bad)
jmp
xchg
adc
adc
xchg
mov
sub
pop
and
lock
add
inc
inc
sbb
aas
xchg
or
nop
mov
sub
dec
(bad)
(bad)
(bad)
call
xchg
out
add
retf
inc
push
fs
dec
xor
aam
arpl
(bad)
(bad)
sub
(bad)
clc
add
fisubr
dec
pop
lds
sbb
pop
mov
xor
pusha
push
loopne
and
push
test
or
pop
pop
or
mov
(bad)
sbb
xor
(bad)
jmp
push
cmps
or
sub
pop
loop
dec
push
or
test
(bad)
pop
xor
(bad)
fild
adc
out
test
pop
pop
jl
xor
xlat
xor
sbb
(bad)
jmp
clc
sbb
jbe
inc
daa
cld
(bad)
mov
mov
mov
ror
mov
add
jbe
add
adc
call
add
dec
push
jle
or
into
sbb
dec
mov
iret
rol
sbb
(bad)
fadd
cmp
call
std
scas
cmp
dec
xchg
add
mov
jle
mov
(bad)
jmp
stos
fsub
push
pop
mov
pop
or
add
je
pop
adc
push
cmp
inc
pop
jne
das
inc
cmp
mov
mov
or
and
nop
nop
call
inc
pusha
mov
inc
xlat
add
cmps
shr
mov
mov
and
(bad)
jg
mov
add
ss
clc
add
xchg
inc
add
cmps
adc
cli
call
shl
lods
inc
mov
pop
or
pop
and
xlat
xchg
mov
push
xor
adc
xor
(bad)
jg
mov
je
or
or
cmp
add
scas
cmp
in
pop
(bad)
jmp
sub
push
retf
sahf
or
and
je
rcr
(bad)
inc
fisttp
add
test
jge
ins
scas
and
pop
test
push
adc
cli
(bad)
call
mov
ret
iret
jnp
cld
dec
xchg
sub
fcom
call
stos
(bad)
fcom
icebp
aad
cmp
xchg
and
(bad)
jmp
jns
cmp
push
adc
push
ror
loopne
push
cmp
mov
mov
(bad)
(bad)
push
adc
inc
js
cmp
jb
adc
cmp
pop
xchg
push
xchg
xor
mov
and
outs
sbb
cld
pop
sub
mov
sbb
sub
xchg
xor
jnp
pushf
cmp
push
jg
(bad)
inc
dec
fiadd
ror
daa
mov
mov
dec
retf
jnp
test
test
pop
mov
cs
dec
dec
aad
jecxz
mov
(bad)
mov
and
stos
push
sbb
stos
sbb
pop
mov
xchg
(bad)
(bad)
(bad)
inc
pop
push
sbb
jmp
leave
nop
pop
cmp
sbb
shr
adc
xor
rcr
inc
in
jmp
add
jecxz
call
pop
or
cs
jae
cmp
mov
shl
je
xor
mov
pop
ret
(bad)
mov
cmps
into
(bad)
call
dec
clc
push
jne
adc
adc
std
(bad)
(bad)
push
add
pusha
je
inc
pop
pop
test
ror
jmp
mov
add
add
outs
stos
aad
adc
call
fdivr
(bad)
call
ret
push
test
dec
sbb
add
mov
ret
pop
pop
sbb
add
sbb
repnz
cmp
inc
and
mov
(bad)
(bad)
(bad)
aas
pop
rdpmc
mov
div
adc
and
mov
cmc
mov
lahf
cmp
jl
add
xor
dec
mov
cmps
or
in
adc
(bad)
(bad)
call
mov
push
ftst
push
call
add
mov
push
mov
pushf
inc
pop
inc
fidivr
sar
dec
and
sar
mov
clc
jmp
lods
fsub
mov
in
iret
popf
(bad)
and
mov
(bad)
dec
or
adc
add
das
adc
(bad)
mov
inc
xor
(bad)
fisttp
xor
or
cmp
mov
sbb
push
imul
leave
xchg
lds
shl
mov
dec
(bad)
(bad)
(bad)
jg
add
pop
mov
inc
fs
sub
and
or
mov
mov
push
sar
jg
xor
push
xor
sbb
or
lock
mov
xor
inc
clc
cmps
and
push
idiv
or
fcmove
xor
(bad)
inc
mov
jge
imul
ins
enter
(bad)
jg
and
je
mov
inc
mov
setnp
pop
pop
mov
push
cmp
cmp
adc
add
outs
or
xor
mov
jmp
or
ret
je
loope
cmps
leave
xchg
fmul
or
pop
pop
movs
and
outs
and
or
mov
cmp
dec
xchg
es
cmps
js
cli
ds
maxps
ja
test
inc
or
push
add
xchg
lock
sbb
sar
push
sub
iret
bound
xchg
push
inc
or
test
icebp
sbb
push
inc
sbb
mov
(bad)
(bad)
(bad)
jmp
xor
or
xor
cmp
and
js
add
mov
movs
(bad)
out
push
push
es
inc
loopne
cld
mov
xchg
and
pop
mov
pop
hlt
sub
sbb
push
out
or
cli
xchg
lahf
add
repz
mov
rcl
push
cmp
push
inc
mov
fs
enter
mov
(bad)
(bad)
dec
lds
push
inc
inc
iret
mov
xchg
push
inc
inc
lock
dec
pop
test
dec
pop
std
call
mov
mov
add
std
jmp
add
push
mov
aaa
inc
sub
sbb
jmp
ss
sbb
mov
dec
dec
push
add
adc
stos
inc
inc
push
call
cmp
pusha
push
ss
(bad)
(bad)
call
icebp
mov
mov
nop
retf
or
jmp
xchg
and
pop
xchg
lock
jb
pop
mov
adc
push
add
repnz
push
ret
(bad)
(bad)
jg
push
xchg
xchg
add
or
xchg
lods
movs
movs
pop
pusha
pop
inc
jmp
pop
aas
push
(bad)
dec
or
clc
inc
add
movs
pop
aaa
mov
inc
xor
fild
sbb
push
mov
xor
fnstenv
mov
push
adc
or
pop
and
pop
mov
retf
push
and
fs
daa
dec
adc
(bad)
(bad)
dec
(bad)
cmp
add
push
or
fsubr
or
std
add
sub
sub
or
test
test
out
inc
(bad)
sbb
sub
outs
adc
adc
push
das
inc
fcomp
idiv
imul
xchg
sub
hlt
and
femms
or
mov
mov
hlt
mov
gs
pop
js
inc
test
ins
ret
addr16
(bad)
(bad)
push
push
inc
mov
or
scas
push
mov
inc
push
push
add
hlt
mov
pop
cmps
cmp
lock
add
(bad)
(bad)
(bad)
(bad)
in
add
xchg
mov
pop
cmps
cmp
lods
fcomp
jne
addr16
pop
test
jmp
sub
mov
loopne
fidiv
adc
gs
loop
(bad)
mov
mov
(bad)
mov
bound
mov
jmp
dec
lahf
ret
mov
ins
adc
scas
xchg
out
xor
adc
dec
or
(bad)
fnstenv
jecxz
lock
in
loope
int3
xchg
in
push
aaa
mov
pop
rol
popa
es
xchg
inc
dec
shl
xchg
out
xchg
(bad)
or
jp
test
jmp
mov
pusha
jo
shl
cmp
mov
(bad)
(bad)
call
les
mov
lods
imul
leave
leave
push
clc
cmp
dec
bound
aas
jmp
and
call
aam
ret
mov
lods
xchg
inc
mov
(bad)
(bad)
out
imul
sti
and
sub
stos
or
xor
mov
pop
mov
into
pop
push
sbb
scas
(bad)
mov
dec
loope
sbb
pop
lock
movs
test
adc
cmp
and
outs
dec
or
xor
(bad)
(bad)
(bad)
stc
mov
loop
gs
add
pop
add
(bad)
(bad)
in
popf
xchg
in
sbb
push
in
adc
pop
lods
push
sub
push
ffree
(bad)
jmp
push
add
inc
fsubr
lods
pop
or
add
pop
cld
or
(bad)
push
cwde
add
sbb
hlt
pop
sub
inc
outs
xlat
or
or
xlat
and
addr16
(bad)
(bad)
fbstp
jle
mov
jg
ins
int
or
sbb
and
fstp
mov
mov
mov
sub
ins
pop
icebp
xor
daa
xor
pop
ins
hlt
jg
mov
pop
xor
dec
(bad)
add
fst
mov
call
add
sub
inc
xchg
push
clc
adc
js
adc
(bad)
cwde
enter
mov
push
in
and
rcr
(bad)
(bad)
(bad)
out
call
jno
repnz
iret
es
xlat
mov
cli
cld
clc
mov
pop
jg
(bad)
push
aad
sar
aam
fstp
sbb
xchg
pop
sub
or
adc
(bad)
mov
dec
mov
dec
aas
loopne
jnp
mov
pop
ffreep
es
or
(bad)
sbb
(bad)
call
push
sub
adc
xlat
cmps
mov
stos
cli
loopne
movs
bnd
out
push
add
cmp
repz
xor
fisub
inc
mov
pop
mov
sub
mov
bound
and
ret
cli
sub
sub
adc
(bad)
mov
inc
sahf
mov
and
and
ins
xchg
add
sub
clc
jg
jecxz
jmp
jge
inc
scas
sub
push
jl
in
dec
adc
cld
xor
jl
pop
popw
pop
xchg
cmp
call
cmps
lock
dec
pop
std
clc
nop
rcl
push
inc
fsubr
(bad)
push
dec
dec
pop
addr16
sub
push
push
push
or
loopne
les
xchg
ror
push
(bad)
(bad)
(bad)
jmp
jns
add
jge
jmp
sbb
imul
jae
mov
adc
mov
pop
or
fs
inc
stc
xor
push
push
icebp
dec
adc
fld
loop
dec
in
test
scas
fld
inc
xchg
sub
cmp
(bad)
aaa
fidiv
(bad)
(bad)
(bad)
(bad)
call
inc
loopne
in
or
mov
aam
inc
in
push
xor
inc
pusha
xchg
retf
push
adc
es
sub
rcl
dec
xor
loop
(bad)
(bad)
(bad)
(bad)
out
mov
pop
inc
pop
add
mov
push
outs
or
ret
mov
pushf
pop
xor
ins
pop
(bad)
(bad)
call
add
jo
(bad)
add
pusha
(bad)
xchg
(bad)
(bad)
jg
dec
test
push
push
mov
push
js
and
cmp
test
add
test
clc
out
mov
fisub
pop
cmp
mov
jmp
movs
sbb
xor
pop
sbb
xor
retf
inc
pop
imul
(bad)
dec
aam
rcl
xchg
add
and
fistp
(bad)
sbb
jle
mov
call
call
enter
add
jno
mov
addr16
jmp
cmps
movs
or
les
inc
sbb
ret
cld
push
push
aam
ja
jno
iret
aam
inc
pusha
sti
cmc
and
pop
in
cli
xor
(bad)
(bad)
jmp
adc
dec
fmul
inc
sub
xchg
mov
adc
jmp
and
adc
outs
nop
hlt
mov
jmp
sub
out
and
mov
inc
xchg
mov
leave
push
loopne
xchg
pop
pop
mov
lea
jmp
or
xchg
push
std
push
lock
ror
mov
mov
xor
ror
pcmpgtw
fist
aad
mov
add
call
inc
pop
stos
fucom
mov
mov
xchg
xchg
in
xor
(bad)
jmp
cmp
shl
shr
sbb
mov
lds
loope
adc
(bad)
out
and
lahf
outs
pop
add
dec
(bad)
(bad)
(bad)
call
or
mov
cli
mov
cmp
jnp
mov
sbb
dec
aaa
cmps
pop
cmp
(bad)
(bad)
call
(bad)
jmp
sbb
add
add
lods
rol
(bad)
dec
dec
lahf
(bad)
cmp
(bad)
call
sub
adc
sbb
lds
adc
dec
xchg
or
sub
(bad)
(bad)
mov
gs
add
out
xor
adc
dec
mov
in
(bad)
(bad)
jg
mov
jo
dec
or
sbb
je
in
sbb
adc
inc
push
mov
mov
(bad)
call
or
test
xor
add
outs
push
cmps
call
aaa
mov
mov
push
addr16
mov
adc
icebp
(bad)
call
xchg
mov
push
mov
xor
inc
and
loopne
(bad)
dec
(bad)
mov
sahf
mov
mov
xor
add
in
push
inc
push
cdq
or
leave
and
cmc
or
retf
push
lock
(bad)
aas
sahf
or
mov
cmp
pop
cmp
cld
adc
(bad)
inc
ret
add
cli
cdq
xor
movs
xor
sar
shr
(bad)
(bad)
jg
inc
daa
mov
jb
cdq
mov
adc
scas
push
cmp
pop
pop
dec
int3
mov
or
dec
and
call
in
or
loopne
(bad)
(bad)
jmp
ins
mov
mov
add
dec
push
or
mov
sbb
push
jo
test
shl
(bad)
(bad)
(bad)
call
jbe
ins
mov
or
jmp
pop
iret
adc
fild
sub
in
mov
or
or
ja
mov
fisub
sbb
aam
movs
add
fild
adc
hlt
lods
out
sub
or
jge
(bad)
(bad)
mov
push
push
adc
jge
sar
jge
or
dec
iret
mov
jle
leave
rcl
(bad)
repz
add
mov
dec
xor
(bad)
inc
sbb
aaa
daa
mov
pop
fiadd
test
adc
and
adc
cmps
cmp
mov
fs
inc
xor
mov
and
push
jb
sub
and
mov
mov
or
(bad)
(bad)
jmp
inc
jmp
add
mov
add
inc
or
(bad)
add
scas
mov
es
out
sar
mov
sub
xchg
or
and
lods
jo
sar
sub
lods
sbb
mov
in
(bad)
adc
mov
mov
sbb
bound
cmps
test
jb
popf
test
inc
cmp
xchg
cmps
mov
loop
ja
fidivr
(bad)
call
cmc
xor
dec
ja
inc
jns
pop
mov
ss
fs
adc
das
cmp
dec
jg
(bad)
(bad)
dec
es
das
(bad)
add
bound
inc
clc
pop
push
imul
daa
adc
mov
inc
push
lds
pop
scas
ss
sbb
imul
(bad)
inc
mov
xchg
or
mov
sbb
cmc
add
and
jmp
dec
jp
dec
mov
imul
mov
cwde
inc
jmp
mov
push
clc
call
xchg
adc
fistp
mov
(bad)
(bad)
jmp
push
clc
scas
mov
jmp
cmps
xor
xor
jbe
mov
xor
pop
pop
(bad)
stos
or
ret
xor
xor
mov
(bad)
inc
pop
push
int3
mov
je
or
outs
jmp
(bad)
cmp
scas
inc
out
sub
cmps
std
sti
aas
jg
inc
sbb
cmp
mov
xlat
rcr
lods
sbb
dec
mov
or
test
pop
inc
ret
clc
(bad)
dec
and
test
mov
cs
push
imul
pop
mov
clc
(bad)
inc
ins
and
nop
xor
or
cmp
jg
pusha
lods
bound
mov
mov
(bad)
mov
ins
xchg
sti
in
mov
inc
cld
stos
(bad)
pop
add
xor
out
clc
mov
jp
adc
in
aam
pushf
mov
sbb
fdivrp
(bad)
(bad)
call
sub
cmps
and
xor
push
(bad)
cmp
aaa
dec
cmp
pusha
loop
adc
rcl
imul
idiv
(bad)
(bad)
jg
sub
xor
loop
cmp
fwait
je
inc
pusha
xor
push
enter
or
jmp
adc
xchg
cmp
cmp
fsub
pop
pop
lahf
mov
dec
push
(bad)
sbb
(bad)
dec
cld
inc
mov
pop
leave
cmp
imul
(bad)
push
or
adc
fldenv
xor
and
adc
(bad)
mov
xchg
jns
leave
dec
leave
dec
dec
xor
dec
adc
cdq
inc
inc
pop
jmp
mov
repz
cwde
in
push
loope
mov
inc
push
cwde
mov
xor
push
push
push
jmp
xlat
add
dec
jle
adc
jg
(bad)
mov
pop
and
jne
push
loope
add
add
jmp
gs
nop
xchg
cld
adc
mov
es
inc
(bad)
(bad)
(bad)
(bad)
cmp
outs
paddb
mov
pop
retf
cmp
mov
pshufw
fisub
test
push
aam
cmp
sub
mov
pop
pusha
enter
outs
shl
adc
js
and
cmp
fdivp
pusha
add
retf
sbb
shl
adc
mov
push
or
jno
daa
clc
xor
adc
ret
arpl
mov
add
dec
mov
xchg
clc
(bad)
inc
push
or
xlat
fisub
out
dec
adc
inc
cld
(bad)
dec
mov
mov
cmp
adc
mov
lock
call
pop
add
popa
sub
adc
nop
xchg
sbb
push
xor
out
sbb
or
sbb
inc
sahf
test
out
ret
(bad)
inc
pop
or
sbb
mov
les
rol
and
mov
push
inc
adc
and
(bad)
iret
dec
push
mov
xlat
mov
(bad)
(bad)
(bad)
jg
or
lods
or
xor
nop
pop
adc
mov
out
xchg
aad
pop
cs
(bad)
(bad)
mov
pop
shl
addr16
fcom
push
jg
mov
sbb
icebp
lock
add
jle
scas
int3
(bad)
push
adc
mov
int3
dec
(bad)
add
adc
(bad)
push
int3
or
xchg
jb
push
and
rcl
outs
cmp
adc
icebp
and
(bad)
(bad)
(bad)
mov
(bad)
adc
ret
scas
jmp
add
mov
movs
jmp
rcr
pop
pop
imul
(bad)
(bad)
jmp
cmp
jo
in
cmp
cmp
movs
dec
cmp
lods
jno
popf
dec
mov
mov
mov
pusha
cmp
dec
call
mov
xchg
or
adc
outs
dec
ror
into
sub
jae
sbb
ins
add
add
call
xor
test
jb
dec
mov
(bad)
(bad)
(bad)
jmp
mov
sar
shl
mov
shl
ds
mov
(bad)
jmp
imul
adc
call
gs
lods
pop
inc
in
call
dec
daa
mov
pop
cs
or
mov
aam
push
inc
cs
(bad)
(bad)
call
mov
scas
pop
lds
pop
icebp
add
or
nop
dec
mov
hlt
stos
push
(bad)
(bad)
(bad)
call
add
ret
dec
ss
rcr
and
adc
xchg
imul
inc
icebp
nop
pop
ret
pop
mov
lock
(bad)
jmp
sbb
out
aam
and
ret
pop
pop
enter
adc
xor
jne
adc
outs
pop
movs
fidivr
add
adc
push
xchg
sbb
xlat
adc
inc
(bad)
push
push
pop
cmps
or
and
dec
enter
mov
add
call
(bad)
(bad)
fild
popa
mov
cs
xchg
or
movs
call
call
add
or
adc
iret
rol
(bad)
(bad)
jmp
adc
jle
adc
or
dec
or
jmp
es
fstp
pop
mov
in
cmp
div
hlt
xchg
push
daa
nop
(bad)
mov
pop
mov
dec
add
jmp
aam
mov
pop
mov
(bad)
call
lock
mov
mov
adc
int3
xor
pop
std
arpl
mov
(bad)
(bad)
add
mov
sub
fimul
mov
jmp
or
adc
and
mov
adc
xchg
(bad)
mov
outs
cmp
and
add
mov
cli
cmp
sub
mov
mov
add
test
push
pop
mov
scas
adc
mov
xchg
movs
push
enter
(bad)
(bad)
inc
or
add
ja
push
test
arpl
mov
sub
shr
pop
pmaddwd
dec
(bad)
(bad)
(bad)
fstp
mov
jo
pop
add
mov
int3
xor
mov
fwait
in
daa
loop
and
add
xor
sbb
adc
jl
loop
dec
loop
(bad)
inc
jp
scas
sub
sub
push
jg
or
nop
pop
pop
sub
inc
fbstp
(bad)
inc
sub
adc
sbb
or
hlt
scas
movs
sub
pop
sub
ret
jmp
or
cmp
in
or
adc
add
xor
jmp
push
jg
(bad)
push
push
sub
mov
or
loope
inc
fdivr
cmp
fisub
pop
and
inc
mov
pop
or
push
jmp
(bad)
retf
and
jb
xor
retf
xor
xor
rol
add
push
hlt
pop
lock
cmp
push
push
xor
mov
clc
dec
cwde
jb
pop
push
pop
xchg
mov
push
(bad)
(bad)
jmp
cmp
xor
ret
sbb
pop
addr16
add
adc
(bad)
(bad)
(bad)
jmp
loope
pop
sub
cmps
pusha
mov
dec
jmp
cld
add
mov
mov
inc
mul
pop
or
mov
aas
popa
dec
sub
push
and
xor
xor
inc
dec
int
dec
pop
jb
sub
call
into
sub
cdq
rol
call
(bad)
(bad)
push
or
add
sub
aad
js
cmp
sub
jmp
(bad)
push
jp
or
xchg
mov
pop
mov
adc
(bad)
xchg
or
pop
add
(bad)
(bad)
inc
ror
and
sub
adc
iret
xchg
xchg
xchg
(bad)
call
mov
pop
dec
dec
scas
or
(bad)
bound
retf
inc
mov
sbb
or
(bad)
call
or
adc
movs
push
clc
fst
pop
adc
gs
ds
or
and
and
sub
in
cmp
adc
in
sbb
test
test
inc
loope
sub
test
xchg
mov
adc
or
pop
shr
(bad)
mov
sub
and
and
or
dec
inc
aaa
inc
and
inc
fcomi
push
fisubr
xchg
pop
dec
aas
sub
jg
xchg
ins
inc
xor
pop
pushf
add
or
jmp
pop
adc
mov
push
retf
push
cdq
cmp
pop
mov
dec
retf
mov
fcom
adc
and
fistp
mov
(bad)
mov
jmp
jmp
clc
(bad)
jmp
and
rcl
cmp
sbb
ficomp
dec
add
cmps
es
pop
add
add
adc
jo
sub
scas
mov
jo
js
popa
(bad)
dec
mov
jmp
add
xor
inc
cld
retf
fistp
push
in
push
xor
loope
(bad)
lock
cmp
inc
(bad)
(bad)
(bad)
jns
(bad)
or
ss
sub
jae
mov
xor
and
inc
jmp
and
jle
mov
mov
jmp
scas
fimul
add
jle
or
push
inc
in
not
add
push
(bad)
call
out
sbb
loop
sbb
fs
and
add
test
sub
(bad)
dec
jbe
lock
dec
push
push
mov
es
and
add
push
(bad)
int
inc
rcr
add
jmp
add
mov
jecxz
xor
inc
or
(bad)
(bad)
(bad)
mov
outs
adc
mov
or
imul
ja
push
cld
cmp
fadd
cmp
test
sub
cmp
inc
gs
in
gs
(bad)
push
sbb
xor
add
lods
mov
pushf
xchg
dec
(bad)
push
mov
adc
out
mov
sti
push
adc
mov
fcom
jle
sub
mov
mov
adc
aaa
push
aam
(bad)
(bad)
call
rcl
or
cmc
mov
mov
adc
dec
inc
ror
clc
inc
idiv
jne
xor
push
dec
and
daa
(bad)
(bad)
call
stos
inc
push
loope
mov
scas
and
or
jae
cmp
jl
(bad)
(bad)
(bad)
push
imul
mov
pop
sbb
and
cmp
into
sar
(bad)
jg
icebp
and
push
mov
mov
mov
das
jo
or
adc
fild
clc
movs
leave
add
(bad)
scas
mov
pop
fisub
sti
lods
or
or
fbstp
mov
mov
call
cmps
shl
nop
xor
sbb
add
mov
add
inc
add
xor
adc
(bad)
(bad)
(bad)
in
in
mov
or
add
xor
int3
sub
test
in
repz
dec
ds
call
pusha
pop
jmp
and
xlat
push
int3
loopne
add
push
push
mov
push
std
push
pop
fbstp
dec
dec
and
jl
dec
in
fbstp
push
sar
(bad)
inc
jns
fistp
jne
sub
mov
inc
icebp
pop
and
nop
mov
mov
ds
call
push
push
add
push
rcl
sbb
or
push
data16
(bad)
push
(bad)
ficom
pop
dec
jmp
jl
jmp
inc
int3
movs
mov
xor
dec
pushf
dec
nop
pop
add
pop
enter
pop
mov
xchg
inc
and
(bad)
mov
pop
pushf
enter
cwde
das
mov
inc
lahf
dec
lods
sbb
test
out
dec
push
(bad)
jo
div
cdq
add
inc
clc
or
dec
(bad)
(bad)
mov
cmc
jo
push
gs
add
xor
sub
cmps
add
(bad)
(bad)
push
sbb
jbe
push
int
add
or
popf
xlat
xchg
in
mov
stos
xchg
mov
xor
(bad)
jg
mov
add
les
sbb
sub
xchg
inc
inc
lahf
cmp
jmp
es
xchg
scas
cli
(bad)
(bad)
inc
mov
dec
xchg
sbb
es
jmp
inc
cmps
mov
pushf
push
call
dec
sbb
lods
cwde
test
inc
mov
(bad)
inc
lods
mov
xchg
ss
int3
movs
out
add
lods
sbb
mov
sub
jp
xchg
push
jge
sar
or
sub
outs
call
movs
ficomp
(bad)
fisttp
jecxz
test
dec
pop
cmps
jo
out
sub
push
add
inc
pop
loopne
(bad)
jmp
jmp
and
ds
adc
xchg
cmc
push
data16
(bad)
(bad)
dec
adc
call
rcr
lahf
movs
and
pop
xchg
jg
mov
inc
sub
push
jne
xchg
(bad)
push
cld
xchg
adc
ror
adc
mov
outs
adc
lods
xchg
or
xor
dec
(bad)
(bad)
inc
and
jge
xchg
mov
inc
int
mov
(bad)
(bad)
jmp
rcr
cwde
push
xor
or
xor
rcr
adc
nop
(bad)
pop
jge
addr16
sub
outs
sbb
fild
xor
or
int3
and
push
cmp
mov
pop
jmp
mov
es
call
mov
lahf
(bad)
pop
enter
rcr
inc
sub
cli
jae
cdq
adc
movs
mov
mov
or
mov
ret
xchg
lock
mov
adc
push
jmp
inc
adc
loop
(bad)
jno
mov
cmc
fidivr
dec
enter
and
ret
push
or
cmps
mov
inc
(bad)
(bad)
(bad)
call
enter
popf
cmp
mov
inc
inc
imul
popf
jno
(bad)
mov
in
dec
adc
fs
pop
call
pop
ja
sar
icebp
or
or
and
xchg
jl
inc
clc
dec
ret
inc
das
hlt
jmp
imul
lea
dec
or
push
jo
in
cdq
pop
and
push
or
add
sti
in
call
mov
out
es
jne
(bad)
nop
dec
fadd
call
imul
or
adc
adc
inc
rol
sbb
mov
or
(bad)
inc
or
aas
push
inc
(bad)
push
xor
cs
xlat
sar
(bad)
call
or
jg
xor
jo
inc
jl
jb
cs
inc
test
pop
call
(bad)
(bad)
jg
call
mov
mov
add
cmps
and
out
in
inc
gs
out
push
jg
and
mov
aad
fsubr
pop
inc
inc
adc
inc
dec
push
sub
loopne
inc
mov
jp
mov
bound
cdq
or
(bad)
(bad)
call
lea
dec
sub
bound
sub
mov
or
cmp
dec
pop
jmp
and
int
adc
loop
add
sub
lahf
clc
inc
sbb
cdq
mov
pop
or
clc
inc
push
loop
dec
mov
mov
outs
add
sub
and
or
sub
ins
sar
push
mov
cmp
mul
adc
cmp
jmp
movs
xchg
ret
pushf
jp
add
add
ret
pop
cdq
sbb
and
(bad)
(bad)
dec
pop
imul
push
ds
pop
cmps
mov
or
xor
add
xor
cwde
adc
lock
test
jl
shl
retf
repz
xchg
push
or
mov
or
jp
push
jmp
fisub
(bad)
(bad)
jmp
mov
jmp
mov
or
push
jnp
dec
dec
fdivp
jg
adc
inc
lock
shl
mov
inc
fcomp
ja
push
mov
mov
mov
and
jnp
mov
inc
lods
pusha
add
xchg
clc
sub
sbb
dec
sbb
(bad)
(bad)
inc
lock
add
ss
mov
jmp
pop
lods
outs
(bad)
push
in
neg
(bad)
dec
fadd
or
jbe
mov
(bad)
mov
push
icebp
sub
xor
inc
xor
(bad)
(bad)
fisttp
test
icebp
cmps
aaa
sub
sbb
hlt
xor
inc
pop
pop
icebp
jbe
adc
test
dec
(bad)
in
mov
adc
push
push
hlt
or
gs
cs
mov
push
pop
rol
cmp
or
xchg
inc
or
outs
fldenv
push
loopne
(bad)
jmp
sbb
xor
dec
jmp
sub
add
or
(bad)
call
sub
scas
inc
mov
push
or
hlt
adc
push
addr16
into
pop
jno
inc
adc
cwde
jmp
add
popa
jmp
pop
add
sbb
(bad)
inc
push
or
pop
loop
rol
sbb
rol
sub
dec
lods
(bad)
(bad)
(bad)
call
out
(bad)
call
call
or
jp
push
push
and
sub
mov
(bad)
jmp
sub
push
and
test
dec
out
inc
repnz
adc
out
(bad)
(bad)
mov
mov
in
jecxz
mov
mov
pop
fimul
inc
ret
js
addr16
dec
adc
jmp
xor
or
(bad)
(bad)
inc
in
div
out
retf
xchg
cs
push
daa
sbb
sbb
jno
(bad)
das
sar
push
jmp
jg
mov
jae
pop
or
out
xor
pop
push
dec
pushf
mov
push
add
test
rol
pop
std
(bad)
dec
push
push
leave
lods
in
and
cmp
rcl
dec
test
test
push
add
ins
rcr
push
xchg
add
(bad)
(bad)
jmp
sbb
call
test
loop
test
or
das
jg
aam
(bad)
(bad)
(bad)
call
push
mov
idiv
adc
pop
sub
inc
add
rol
(bad)
data16
sub
dec
ret
inc
sbb
jmp
dec
daa
mov
and
jno
(bad)
cmp
je
inc
movs
push
dec
adc
mov
cmp
add
test
or
pop
pop
outs
cmp
(bad)
jmp
pop
push
fiadd
jp
add
push
pusha
test
mov
adc
sar
or
hlt
cmp
sbb
test
mov
inc
pop
xchg
and
cld
es
(bad)
jmp
das
add
xor
aaa
cmp
or
dec
or
iret
adc
add
out
jmp
lea
(bad)
push
cmc
(bad)
(bad)
jmp
xor
mov
stc
imul
test
or
xor
lahf
xchg
lods
sub
call
outs
int
data16
inc
push
scas
call
daa
out
test
(bad)
(bad)
(bad)
cli
popa
mov
jle
sahf
pop
mov
sub
push
or
inc
enter
jle
add
mov
(bad)
(bad)
jmp
or
ffree
push
lods
jbe
aaa
je
out
mov
lds
lods
cmps
mov
call
icebp
push
jne
adc
std
pop
mov
(bad)
inc
mov
repnz
inc
cmp
cs
jmp
clc
jg
punpckhdq
mov
dec
jmp
imul
ffree
push
adc
(bad)
dec
sti
jne
and
fisubr
test
sub
(bad)
(bad)
mov
repz
cmp
or
call
and
inc
add
sub
ret
push
ret
(bad)
(bad)
call
cmps
scas
dec
cmp
and
loope
(bad)
jmp
xchg
and
push
(bad)
(bad)
jg
in
lods
inc
or
dec
sbb
fstp
sub
jmp
jns
add
ss
hlt
mov
add
das
inc
popa
xor
sbb
popf
adc
(bad)
sub
inc
repnz
aam
jg
(bad)
(bad)
mov
mov
push
and
cmp
or
mov
mov
and
(bad)
(bad)
jle
add
inc
xor
or
sbb
(bad)
jg
call
ins
xor
xor
pop
retf
mov
into
xchg
sar
dec
call
add
sub
push
add
in
add
cmp
dec
xor
sbb
adc
jmp
or
sbb
jbe
fsubr
or
xor
mov
(bad)
(bad)
(bad)
inc
daa
(bad)
jne
les
ss
in
in
or
(bad)
jp
sbb
aad
sbb
add
shl
add
push
cmp
inc
cmps
add
out
aaa
cmp
(bad)
(bad)
call
xchg
fcomip
inc
push
adc
rol
pop
push
push
dec
add
lahf
ins
test
fwait
inc
mov
push
loopne
and
(bad)
cwde
jne
pop
and
jmp
xchg
lds
pop
sub
adc
popa
pop
(bad)
(bad)
(bad)
jmp
cmp
mov
(bad)
stos
pop
sbb
mov
pop
mov
jbe
sbb
add
pop
(bad)
jg
add
xor
fdivr
mov
mov
enter
sti
std
and
jg
mov
mov
pusha
xor
(bad)
pop
stos
ret
pusha
mov
loop
cmc
and
mov
lds
(bad)
mov
js
pop
and
mov
imul
test
(bad)
aas
popa
pop
add
pop
stos
and
daa
jo
and
loopne
push
cmp
and
inc
add
mov
mov
jne
mov
sub
xlat
into
ss
inc
and
(bad)
inc
movs
add
adc
mov
and
call
ja
fcmovnb
xlat
xchg
push
or
adc
addr16
mov
inc
adc
(bad)
(bad)
(bad)
jmp
test
sub
xchg
push
aas
shl
(bad)
mov
stc
xor
pop
add
int3
dec
jl
(bad)
dec
mov
push
jne
add
lods
mov
mov
sub
add
or
mov
sub
mov
or
pop
aam
pop
dec
jg
gs
adc
adc
or
(bad)
call
loope
and
iret
jmp
add
xor
add
or
mov
push
sbb
sub
dec
push
imul
sub
es
ss
pushf
cs
push
(bad)
(bad)
jmp
and
cli
add
add
mov
nop
call
rcl
ins
or
icebp
inc
inc
pop
add
lds
call
cld
adc
push
and
dec
je
adc
add
mov
test
or
jmp
inc
les
ds
cmp
lea
push
sti
or
cmp
cmp
push
mov
jbe
jmp
mov
push
sub
pop
push
add
cmp
(bad)
jmp
jl
je
cmovge
jo
stc
call
test
pop
jg
(bad)
call
xor
gs
mov
sbb
ins
pop
jns
(bad)
(bad)
inc
xchg
imul
sub
pop
xor
push
add
push
sbb
popf
xchg
push
xor
add
add
(bad)
aad
inc
adc
xor
pop
cmp
ins
mov
or
cld
or
clc
add
mov
clc
jns
xlat
nop
adc
sbb
adc
call
xor
or
adc
ret
push
loopne
push
mov
sub
out
clc
(bad)
(bad)
dec
mov
sbb
fs
sbb
sbb
mov
push
push
add
adc
cmp
test
(bad)
inc
adc
div
in
sbb
gs
xchg
push
dec
icebp
scas
scas
dec
js
sahf
inc
mov
dec
xchg
das
push
fwait
mov
jmp
ss
lea
sub
or
mov
xchg
add
fwait
xchg
jmp
int3
lea
(bad)
call
push
jnp
cmp
push
sub
clc
dec
add
sbb
mov
jbe
mov
outs
mov
push
push
sub
xlat
add
outs
add
push
add
mov
adc
jmp
dec
clc
mov
aam
pop
call
or
hlt
(bad)
inc
outs
ret
push
jg
mov
je
inc
imul
dec
data16
dec
adc
test
jmp
(bad)
dec
jb
push
xchg
push
and
mov
data16
(bad)
mov
or
add
mov
ret
mov
(bad)
(bad)
(bad)
inc
ror
xor
call
sbb
popa
mov
(bad)
fs
add
call
std
(bad)
(bad)
(bad)
push
sbb
jno
ins
test
outs
mov
pusha
aad
pop
outs
sub
jnp
xor
(bad)
(bad)
faddp
sub
lds
dec
in
scas
push
sahf
or
xchg
pop
mov
or
push
or
mov
xor
jmp
and
sub
and
ror
fist
and
push
aam
fcos
mov
sub
popa
test
(bad)
pushf
sub
das
cmp
imul
call
mov
xchg
pop
pusha
push
pop
rol
popf
xlat
mov
add
movs
(bad)
call
loopne
lock
je
pop
inc
call
xchg
nop
add
add
loop
xchg
jl
repnz
es
clc
add
mov
adc
jne
push
push
dec
clc
dec
cmp
xor
icebp
(bad)
jmp
dec
int3
lods
and
pop
push
scas
popa
adc
add
movs
fwait
(bad)
movs
je
ins
mov
in
lods
xor
jmp
sub
mov
(bad)
(bad)
jmp
ret
mov
mov
jae
sbb
jo
push
es
jl
mov
(bad)
(bad)
jmp
push
xlat
enter
push
xor
inc
xor
mov
or
scas
sti
int
pop
mov
or
jmp
(bad)
xchg
cld
xor
in
push
cmp
mov
or
inc
jo
outs
mov
sbb
(bad)
inc
add
jp
jmp
adc
stos
lods
mov
push
call
fwait
dec
pop
push
and
inc
pop
pop
cld
call
aam
add
dec
fwait
movs
or
ins
push
lea
popa
das
mov
rcl
ror
add
(bad)
jle
out
ins
enter
xchg
clc
(bad)
inc
jo
and
mov
loope
mov
adc
and
pop
add
push
arpl
imul
repz
(bad)
loop
jmp
outs
push
test
xor
mov
dec
mov
fiadd
daa
std
jg
sub
add
ret
dec
adc
test
mov
(bad)
push
mov
rcr
mov
(bad)
outs
jae
mov
scas
xchg
adc
pop
xchg
inc
ret
jmp
pop
mov
adc
xor
dec
mov
mov
cmp
or
(bad)
out
clc
xor
addr16
retf
out
dec
push
push
pusha
adc
arpl
cwde
mov
leave
cmp
icebp
mov
(bad)
in
dec
and
push
ins
pusha
mov
and
(bad)
inc
repz
test
add
jmp
cmps
(bad)
(bad)
out
clc
add
inc
mov
or
and
sub
mov
push
push
(bad)
(bad)
mov
outs
jne
retf
cmp
push
and
test
adc
in
and
ja
push
mov
mov
(bad)
(bad)
call
fdivr
push
push
and
lock
push
popa
ins
dec
cmp
push
pusha
xor
test
sbb
or
(bad)
(bad)
(bad)
jmp
mov
sbb
lods
into
bound
(bad)
push
sbb
dec
or
nop
ror
xchg
sub
outs
xor
add
jns
icebp
rcl
sar
dec
push
sbb
ret
mov
dec
or
enter
sar
jg
js
sbb
call
loopne
dec
out
inc
fst
(bad)
(bad)
mov
mov
adc
xchg
and
or
adc
ror
sub
fild
push
(bad)
(bad)
(bad)
jmp
es
fdiv
mov
jge
mov
inc
ss
or
jne
xor
(bad)
(bad)
(bad)
call
pop
daa
rcr
fsub
and
pop
adc
jno
or
and
push
pop
mov
mov
mov
(bad)
dec
rcr
pop
loopne
add
mov
or
adc
adc
push
push
push
std
aaa
fwait
jp
mov
rol
inc
xchg
and
das
cli
inc
cmp
or
inc
adc
out
xchg
pop
adc
out
sbb
clc
fstp
fcomip
push
xor
inc
or
inc
mov
(bad)
cld
pusha
and
push
sar
mov
dec
and
push
jecxz
adc
push
cs
or
sub
push
cmc
inc
jmp
dec
sbb
cmp
sub
hlt
(bad)
dec
adc
cmp
sub
mov
sub
mov
xlat
cmp
(bad)
(bad)
(bad)
call
test
xor
sub
xor
push
data16
adc
mov
dec
xchg
aam
movs
or
add
pop
adc
sbb
sub
push
data16
idiv
or
movs
lea
xchg
fadd
xor
mov
xchg
sub
das
and
addr16
xchg
(bad)
(bad)
call
lods
sar
inc
movs
adc
inc
pop
adc
push
dec
gs
add
dec
(bad)
(bad)
(bad)
push
pusha
(bad)
or
xchg
sub
pop
xchg
xor
jg
mov
fistp
jmp
jge
pinsrw
mov
push
cli
(bad)
fild
shl
cmp
inc
pop
test
pop
inc
outs
xchg
lock
jg
xchg
and
push
ror
adc
rcr
push
jns
ins
jnp
add
stos
jecxz
pop
loopne
add
sub
pushf
cmp
aas
lock
sub
and
mov
(bad)
js
shl
pop
push
xchg
inc
jnp
std
add
sahf
arpl
(bad)
(bad)
inc
and
inc
outs
cmps
ret
ret
push
shr
push
(bad)
das
cli
or
scas
cmps
or
out
sub
clc
sbb
(bad)
enter
sbb
fcomp
iret
leave
push
or
mov
pop
push
dec
add
or
fwait
mov
repnz
(bad)
call
xor
mov
xor
push
scas
add
add
add
dec
adc
cmp
sbb
mov
(bad)
mov
dec
adc
ins
push
loopne
fmul
sub
pop
sub
(bad)
jg
jmp
xor
sahf
push
push
cmp
xor
pop
aam
xor
cmp
mov
adc
cmp
sub
or
add
push
pushf
xor
popa
imul
push
and
add
(bad)
(bad)
(bad)
dec
sbb
sub
mov
push
jne
adc
rcl
ins
mov
hlt
(bad)
jg
sub
loopne
add
(bad)
inc
aas
ror
add
cmp
cmps
popa
add
xchg
in
jno
(bad)
(bad)
(bad)
sti
test
push
sub
aam
add
jb
dec
mov
inc
pop
mov
jge
push
movs
shl
(bad)
call
std
mov
sbb
je
inc
stos
xchg
or
add
pop
xchg
inc
dec
(bad)
cld
add
das
clc
push
mov
inc
mov
test
push
test
mov
(bad)
jmp
inc
dec
inc
add
pop
push
pop
cmc
mov
mov
pop
pop
cmp
inc
mov
cmps
imul
lods
add
and
dec
xor
adc
xchg
xor
cli
call
fadd
es
push
xor
add
aad
mov
mov
push
fs
fbstp
(bad)
or
adc
mov
mov
mov
sub
std
push
and
nop
test
dec
(bad)
lods
fld
sub
mov
lods
xor
jg
cmp
scas
cmps
test
adc
js
loop
jl
pop
cmp
call
pop
pusha
into
and
fimul
jo
nop
clc
or
add
add
push
xor
(bad)
(bad)
(bad)
(bad)
cmp
adc
xor
mov
inc
popf
loope
add
add
dec
fwait
(bad)
cmp
and
sar
dec
scas
mov
mov
mov
call
idiv
jg
or
fdiv
adc
xchg
aam
adc
add
and
add
enter
(bad)
(bad)
(bad)
(bad)
jnp
inc
dec
mov
xor
dec
sbb
pop
aaa
xchg
sbb
sub
or
(bad)
(bad)
call
js
mov
mov
push
push
push
add
push
es
inc
mov
sbb
and
jp
sub
cli
(bad)
fisubr
jg
js
ret
stos
outs
add
pop
cmp
pop
cwde
dec
adc
leave
fld
les
mov
add
gs
cmp
scas
xchg
mov
pop
xor
outs
bound
mov
scas
push
mov
add
add
(bad)
(bad)
jg
jbe
cmp
clc
pop
add
dec
jmp
ret
dec
es
mov
(bad)
or
mov
xchg
cs
clc
mov
cmp
fimul
dec
jb
ds
iret
call
xor
bound
and
add
sub
out
(bad)
(bad)
(bad)
jmp
pop
test
(bad)
imul
and
pop
sahf
retf
push
movs
iret
ret
std
add
vpsubb
or
mul
(bad)
pop
mov
lock
(bad)
in
xlat
or
int3
xchg
or
add
loope
jle
(bad)
(bad)
inc
cmp
out
mov
adc
push
sub
cmovns
(bad)
(bad)
call
pop
leave
push
call
stos
jg
push
scas
pop
sbb
jnp
ret
mov
shl
in
pop
sbb
cmp
jae
lds
clc
mov
mov
adc
cmp
rcr
(bad)
dec
jne
aaa
push
aad
push
sbb
xchg
sub
xor
cmp
lods
int3
lock
and
xlat
dec
inc
sub
(bad)
(bad)
inc
shl
dec
sub
iret
mov
inc
call
inc
mov
fstp
mov
lds
dec
mov
popa
call
xlat
and
aaa
sbb
adc
inc
or
mov
addr16
dec
or
sar
xchg
pusha
nop
adc
adc
cmp
or
arpl
test
(bad)
(bad)
jg
add
scas
sbb
jns
mov
aam
or
(bad)
dec
sbb
and
mov
call
cld
(bad)
(bad)
(bad)
(bad)
and
scas
mov
cmp
inc
or
pop
pop
xchg
xchg
test
aad
or
mov
pop
into
inc
outs
mov
xor
xchg
or
icebp
or
retf
jge
shl
les
loope
lock
dec
adc
ret
sahf
jmp
push
mov
mov
mov
mov
sti
or
stos
adc
or
scas
cli
call
push
cmps
popa
(bad)
repnz
mov
lea
ins
jge
nop
gs
(bad)
(bad)
jmp
and
sbb
mov
push
sub
out
and
fwait
mov
cmp
mov
push
test
test
xchg
jmp
sahf
sub
pusha
or
loopne
jge
pop
adc
push
hlt
push
and
sbb
mov
adc
sub
dec
ds
and
push
pusha
leave
(bad)
xor
add
cmovb
sahf
push
test
xchg
(bad)
(bad)
jg
rcl
cdq
mov
aad
cld
and
adc
fwait
add
and
lods
ret
test
(bad)
test
xlat
push
cs
xor
fmul
(bad)
(bad)
jns
maxps
sar
or
aas
sbb
and
(bad)
call
pop
cmp
test
in
scas
xor
and
loopne
jecxz
mov
push
(bad)
(bad)
(bad)
dec
mov
jbe
xor
js
sbb
sub
dec
push
xchg
add
add
inc
pop
push
les
jmp
lock
repnz
inc
and
dec
repz
push
or
mov
clc
and
pop
adc
test
rcr
sub
fcomp
cmp
cmp
dec
add
test
rol
test
pop
test
xchg
clc
jp
daa
gs
inc
aad
mov
or
mov
cs
pop
cwde
xor
xchg
pop
iret
or
call
push
leave
or
shl
or
aam
pop
cmp
push
jle
inc
or
and
ss
adc
(bad)
inc
inc
lods
inc
add
add
arpl
popf
or
and
add
and
shl
es
(bad)
jmp
adc
imul
mov
in
jns
or
ds
and
mov
nop
lea
or
(bad)
fcomip
dec
fdivr
mov
sub
outs
push
push
aas
xor
adc
cmp
pop
and
push
push
std
mov
inc
xor
popa
div
xchg
ja
jmp
std
lea
pop
push
and
cwde
jbe
xchg
mov
ds
pop
mov
pop
les
inc
fwait
sbb
jne
add
xchg
cs
(bad)
adc
jmp
jg
call
inc
fmul
sbb
lock
mov
or
sbb
cmp
ficomp
or
shr
push
mov
enter
lods
inc
dec
cmp
or
add
push
adc
je
adc
push
lock
into
sbb
xor
cmp
xor
jmp
fwait
add
cli
xlat
push
fwait
cld
adc
push
and
call
and
pusha
or
aas
loop
sbb
lea
ret
leave
mov
or
xchg
push
or
inc
mov
adc
push
inc
mov
push
popa
mov
hlt
xchg
xor
je
push
rcr
ror
fild
std
imul
mov
rol
pop
(bad)
xchg
fsubr
(bad)
pusha
call
(bad)
jecxz
add
clc
sbb
cmp
(bad)
(bad)
(bad)
dec
mov
dec
dec
sub
xor
ja
adc
push
mov
call
cmp
rcl
push
adc
je
popf
test
aaa
jmp
les
push
scas
cmp
ror
(bad)
jg
inc
add
out
sbb
or
cwde
mov
lahf
cmp
mov
pop
inc
sub
inc
and
pop
push
mov
mov
data16
pop
xor
(bad)
(bad)
inc
xchg
dec
dec
adc
xchg
out
scas
leave
js
mov
and
test
ret
xchg
icebp
push
inc
add
aaa
sub
ret
lods
loopne
jle
test
adc
pop
push
xlat
add
mov
fmul
outs
mov
mov
aaa
dec
pop
das
lds
push
fcom
mov
(bad)
dec
push
and
sahf
mov
fsub
loop
scas
mov
(bad)
dec
stos
mov
outs
lock
lea
adc
and
in
mov
je
jbe
loop
stos
sahf
hlt
shr
mov
or
cmp
cmp
mov
je
and
call
fmul
xchg
test
gs
ret
jmp
mov
adc
xchg
add
sbb
xchg
xor
mov
push
dec
ds
sahf
sub
and
push
test
sbb
(bad)
(bad)
dec
nop
stos
loopne
xor
adc
int3
shl
push
aas
or
mov
cmp
mov
jne
mov
fidivr
pop
jbe
xchg
or
outs
hlt
cmp
xchg
dec
aam
jmp
dec
fild
and
or
or
test
mov
mov
cmp
std
inc
jne
or
(bad)
mov
mov
jl
add
aaa
or
and
xchg
hlt
lock
dec
pop
and
pushf
add
or
out
pavgb
ss
(bad)
(bad)
call
inc
dec
dec
es
ret
gs
pop
cld
cmp
xchg
xor
inc
jmp
sbb
xor
lock
(bad)
inc
or
sub
cmp
xor
push
fsubr
add
(bad)
cmp
pop
dec
cmps
lock
or
ins
push
or
or
popa
loope
xor
mov
pop
or
dec
dec
add
cld
lahf
xor
call
sub
jp
pop
fbstp
lea
pop
cld
jmp
mov
and
xchg
xor
repnz
(bad)
(bad)
(bad)
push
sbb
pop
or
cmps
cmp
add
pop
sub
add
(bad)
(bad)
push
dec
shl
ins
aad
mov
pop
mov
gs
adc
mov
pop
pop
push
xchg
or
clc
(bad)
dec
and
push
inc
push
fild
dec
inc
rol
cmps
or
aam
lock
loope
scas
add
or
mov
mov
(bad)
(bad)
(bad)
push
sub
imul
push
mov
arpl
and
fimul
icebp
(bad)
dec
inc
cmp
or
inc
loopne
mov
std
sar
ud1
jmp
xchg
mov
outs
cs
dec
fldenv
cmp
ss
stos
dec
mov
push
adc
xchg
ins
jg
push
(bad)
fcomip
call
push
shufps
jae
sbb
mov
out
cmps
and
push
mov
inc
test
sub
in
lea
std
dec
sbb
dec
or
mov
add
dec
add
(bad)
(bad)
(bad)
push
and
mov
dec
pop
or
adc
add
mov
icebp
es
addr16
shl
sbb
aas
xchg
mov
call
stc
pop
mov
retf
and
(bad)
xor
sub
add
es
(bad)
(bad)
mov
dec
jne
pushf
jnp
xchg
or
pop
push
xor
lea
mov
adc
cld
add
cmp
loopne
xor
mov
push
retf
stos
add
or
sbb
(bad)
dec
inc
dec
mov
inc
sub
sbb
adc
add
jle
add
inc
mov
adc
mov
fistp
mov
cli
outs
nop
or
pushf
(bad)
test
mov
loop
lds
add
and
je
int3
pusha
aaa
add
dec
dec
pop
sub
dec
imul
push
(bad)
push
fst
add
and
(bad)
ds
xor
add
int
(bad)
(bad)
jmp
and
xor
or
sbb
ja
mov
or
mov
and
out
push
mov
sub
or
jb
jg
jmp
push
imul
jae
imul
aam
in
push
cld
cmp
cmp
(bad)
idiv
call
and
cmps
repz
push
nop
icebp
xchg
movs
sbb
shr
nop
aas
mov
mov
stos
and
jle
and
rcl
sti
and
mov
add
(bad)
dec
lods
mov
es
adc
inc
mov
je
je
fcom
inc
sbb
add
push
add
mov
add
je
mov
aaa
std
call
adc
pop
xchg
jno
mov
and
je
sub
lods
mov
aam
sti
scas
push
lock
and
out
call
aad
xlat
xchg
mov
shr
icebp
pop
push
loop
lahf
jno
adc
(bad)
jmp
mov
call
aas
cmp
stos
push
(bad)
jg
pop
or
xchg
add
jl
add
fcmovu
das
xor
repnz
mov
(bad)
(bad)
(bad)
jmp
imul
outs
(bad)
outs
push
or
cmc
and
mov
xcrypt-cfb
cmps
popa
mov
xchg
cmp
sub
call
cmp
call
mov
xchg
lock
xlat
pop
dec
mov
es
xchg
call
and
neg
xor
popa
int3
mov
inc
jmp
pop
sbb
or
sbb
das
(bad)
mov
xchg
inc
jmp
(bad)
jmp
fcom
push
mov
fucom
out
cwde
lds
push
xchg
(bad)
(bad)
(bad)
call
aam
inc
aas
adc
inc
or
ret
and
mov
fsub
mov
outs
push
pusha
pop
out
pop
shl
(bad)
jmp
or
or
dec
int
pop
xchg
dec
cmp
mov
dec
pop
inc
xor
arpl
gs
inc
jns
idiv
sbb
scas
pushf
(bad)
(bad)
(bad)
call
or
push
jns
call
jmp
pop
inc
pop
sbb
inc
inc
inc
add
(bad)
(bad)
(bad)
dec
xchg
push
xchg
ja
sbb
sbb
sub
mov
jmp
mov
daa
pop
cmovle
(bad)
dec
adc
jae
and
pop
(bad)
dec
lock
pop
and
addr16
adc
enter
or
add
std
push
and
lods
sar
jbe
jne
push
xor
mov
in
je
mov
in
shr
loop
jp
jbe
sbb
cmp
movs
mov
ja
(bad)
mov
sbb
stc
js
xor
push
push
jecxz
and
sar
(bad)
mov
stos
pop
cmp
fdiv
add
mov
pop
pop
(bad)
(bad)
(bad)
call
lods
aaa
xor
cmp
cmp
in
aam
push
iret
inc
(bad)
(bad)
(bad)
jmp
dec
and
pop
mul
add
jle
push
in
cmp
push
sar
aad
(bad)
call
or
inc
sar
inc
jmp
retf
fs
test
or
and
(bad)
out
xchg
xchg
jbe
add
dec
gs
(bad)
lea
or
pop
jae
adc
call
add
pop
adc
(bad)
(bad)
(bad)
(bad)
push
jecxz
enter
aas
xchg
add
clc
pop
mov
xchg
dec
mov
or
call
loope
add
inc
sub
dec
pop
pusha
jnp
add
or
mov
mov
push
mov
dec
call
add
(bad)
push
pop
inc
sbb
add
aad
in
inc
mov
mov
shl
test
shl
push
mov
push
int
mov
mov
inc
imul
imul
jmp
xor
jns
mov
mov
movs
push
dec
(bad)
(bad)
out
jp
retf
fwait
jg
push
inc
or
pop
sbb
lods
inc
loop
and
bound
je
(bad)
adc
enter
(bad)
dec
xor
mov
lock
adc
loope
mov
cmp
(bad)
(bad)
mov
xchg
daa
mov
pop
sub
dec
sbb
and
jg
(bad)
mov
inc
push
jle
cdq
ss
dec
push
sbb
jb
adc
jmp
add
inc
mov
pusha
ret
ins
xchg
pop
movs
aas
jns
add
mov
sbb
mul
mov
lock
and
add
push
and
xchg
and
das
cdq
or
(bad)
jp
adc
ja
ret
lahf
add
jecxz
(bad)
(bad)
jmp
test
sbb
push
dec
je
mov
push
std
pop
inc
shl
push
inc
in
jns
mov
movs
mov
mov
adc
lods
or
sahf
sub
fisub
add
jmp
jmp
sub
mov
pop
sbb
aam
pop
push
clc
(bad)
inc
inc
sbb
and
dec
pop
xchg
cmps
test
xchg
pop
es
(bad)
dec
lods
test
lock
sub
scas
or
or
das
adc
push
push
jne
mul
(bad)
jg
sbb
mov
aam
imul
out
(bad)
(bad)
mov
push
mov
add
nop
push
or
pop
inc
ss
and
and
xor
cs
(bad)
(bad)
jmp
aaa
adc
imul
push
stos
inc
mov
mov
mov
loop
rcr
pop
(bad)
mov
out
push
in
outs
inc
add
jp
(bad)
(bad)
(bad)
dec
xchg
jg
hlt
js
and
lds
out
add
or
sbb
mov
jmp
cmp
sbb
mov
enter
or
add
or
or
fwait
jne
mov
enter
fidivr
xor
xor
jne
(bad)
add
pop
mov
dec
outs
cli
mov
mov
popa
xchg
xchg
pop
add
push
and
sub
(bad)
or
adc
inc
push
stos
push
pop
fidivr
jmp
add
jb
fldcw
jl
jecxz
(bad)
call
inc
adc
sub
(bad)
cmp
push
xor
cs
xor
inc
scas
pop
push
mov
dec
test
je
xor
test
mov
pusha
sbb
adc
mov
xchg
push
mov
es
and
sub
bound
daa
xlat
test
neg
retf
(bad)
(bad)
(bad)
call
lds
cmp
sub
add
ret
mul
mov
xchg
cs
movs
or
enter
or
imul
push
ret
fcomp
jecxz
pop
and
inc
dec
adc
xor
daa
adc
sbb
(bad)
(bad)
(bad)
push
inc
loope
and
push
dec
test
xor
jg
jbe
sbb
add
out
js
adc
cs
mov
adc
xlat
xor
sub
sar
aad
adc
cmp
test
shl
(bad)
xchg
inc
mov
das
jmp
js
jge
adc
call
and
cmc
aaa
rol
fistp
add
mov
pusha
xor
xor
pop
hlt
dec
pop
add
xor
xchg
ror
(bad)
sbb
push
(bad)
pop
or
(bad)
(bad)
(bad)
inc
jns
in
adc
and
mov
xchg
into
lea
icebp
push
retf
jge
(bad)
(bad)
jmp
add
gs
push
or
shl
jne
push
sbb
fwait
push
mov
mov
enter
mov
xchg
or
mov
pop
int3
test
daa
jae
shl
cs
xor
pxor
push
pop
(bad)
(bad)
(bad)
call
call
test
loop
fwait
lahf
inc
ret
cmc
jne
dec
fsubp
aaa
mov
scas
adc
addr16
test
sub
or
push
mov
(bad)
(bad)
out
xor
adc
jl
mov
aam
shl
pop
and
call
mov
cmps
xchg
sbb
pusha
aas
imul
mov
jo
sub
call
or
dec
loop
cmp
(bad)
icebp
int
cs
mov
fwait
mov
in
cmp
push
(bad)
inc
xchg
fimul
sub
(bad)
(bad)
dec
cmp
xor
adc
daa
add
sub
in
das
(bad)
(bad)
(bad)
jmp
rol
or
dec
inc
stos
in
arpl
cmp
adc
rol
xchg
cmp
dec
dec
ds
xchg
repnz
adc
sub
cli
call
mov
(bad)
data16
inc
in
adc
lods
mov
fdivr
jmp
cld
jo
ja
ds
mov
(bad)
jnp
pop
ds
arpl
outs
pop
jo
ja
into
cmp
ret
inc
gs
cmp
sbb
loopne
call
xlat
pop
pop
retf
psrld
sub
dec
mov
pop
mov
or
sahf
call
(bad)
dec
xor
sub
push
out
fdivrp
(bad)
fadd
jne
enter
cmp
mov
sbb
leave
and
pop
out
sbb
mov
pop
stc
inc
inc
or
xor
call
scas
fs
add
sub
gs
fcomp
add
push
scas
push
int3
push
sbb
mov
push
std
scas
xor
jge
and
or
imul
and
and
adc
pop
sar
jmp
inc
dec
or
mov
inc
das
dec
add
mov
cmp
pop
adc
mov
mov
adc
dec
mov
(bad)
(bad)
jmp
out
xor
test
sub
and
and
(bad)
mov
inc
pop
or
mov
push
adc
xor
mov
ja
adc
inc
(bad)
shr
push
mov
cmps
xor
(bad)
(bad)
dec
mov
cmp
inc
and
or
jae
mov
retf
dec
jle
shl
(bad)
(bad)
(bad)
dec
jns
ficom
fnstenv
ins
or
pop
lock
pop
and
or
ja
lods
push
(bad)
(bad)
(bad)
out
cli
or
push
test
xchg
adc
sbb
sbb
imul
or
cld
cld
inc
pop
je
and
shl
inc
xchg
sub
(bad)
clc
jge
rcl
dec
pop
add
jg
add
adc
lods
and
sbb
and
or
(bad)
jmp
inc
cmp
dec
push
push
(bad)
shr
lock
and
jmp
push
gs
(bad)
(bad)
inc
add
or
loop
loope
arpl
xchg
enter
xchg
jns
push
adc
(bad)
(bad)
jg
loop
das
loope
adc
ror
xor
xchg
xchg
inc
jo
jbe
and
sub
push
sbb
sbb
dec
adc
jl
add
or
(bad)
(bad)
dec
fisubr
or
or
cmp
or
rcr
add
adc
dec
fldenv
jbe
xor
sub
je
(bad)
(bad)
jmp
add
div
mov
cmp
in
cmp
mov
or
(bad)
lea
dec
popf
add
sub
pop
cwde
and
lods
and
sbb
cmp
xchg
out
mov
xor
lods
in
adc
nop
adc
inc
cwde
or
movs
adc
xchg
outs
and
adc
mov
xchg
add
add
(bad)
jg
and
or
cmp
adc
lock
xchg
out
call
outs
fimul
test
xor
lods
push
test
(bad)
rol
adc
movs
aad
lock
test
jne
sub
push
add
(bad)
(bad)
jg
out
outs
das
add
adc
dec
mov
and
push
fs
add
(bad)
push
mov
xor
outs
jg
popf
dec
mov
mov
push
mov
adc
call
in
and
dec
inc
in
xor
mov
ror
mov
daa
ins
sbb
mov
add
adc
and
push
add
add
add
adc
and
stos
jae
sub
call
pop
mov
lods
daa
or
adc
(bad)
pop
dec
out
cli
sbb
call
and
jo
cmp
mov
hlt
cmp
loope
(bad)
fdiv
add
inc
lahf
jnp
movs
cs
jle
out
push
and
fidivr
adc
jmp
sbb
push
fdivrp
stos
cmp
call
sub
mov
push
stos
sub
shl
rcr
jb
lods
enter
std
or
movs
shl
ins
xchg
int3
mov
clc
(bad)
(bad)
call
mov
test
stos
fcomp
pop
fadd
arpl
mov
sbb
dec
rcl
shr
or
call
dec
rol
sub
(bad)
(bad)
inc
cmps
popf
int3
dec
mov
and
movs
inc
cs
add
out
sub
inc
pop
movzx
or
or
pop
mov
fmul
(bad)
in
mov
sub
(bad)
(bad)
(bad)
(bad)
mov
ret
dec
push
je
add
lock
das
inc
add
adc
dec
(bad)
(bad)
(bad)
call
dec
jp
push
(bad)
push
dec
adc
in
mov
aam
xchg
pop
pop
add
shl
(bad)
(bad)
call
or
push
sbb
mov
inc
cmps
push
xchg
push
rcr
popf
or
(bad)
(bad)
call
cmp
cmp
cmp
fwait
mov
sub
adc
dec
or
(bad)
dec
out
push
push
lock
cmps
jmp
fmul
jne
mov
dec
das
mov
js
sub
enter
mov
dec
jne
push
dec
popf
cmps
mov
(bad)
call
or
add
adc
(bad)
fwait
cmps
adc
pop
dec
rcl
rcl
pop
mov
(bad)
(bad)
call
or
sub
push
add
in
xor
xor
dec
aam
mov
add
(bad)
(bad)
push
pop
movs
push
xor
out
dec
and
inc
mov
(bad)
adc
mov
rol
bts
dec
(bad)
mov
mov
aad
jmp
mov
ja
mov
pop
jg
(bad)
(bad)
mov
icebp
cmp
int
add
push
ret
dec
cmp
call
adc
setae
sbb
imul
fcomip
dec
add
push
out
pop
push
sub
out
push
or
push
jo
ror
shr
jne
add
popf
and
add
in
(bad)
(bad)
jg
cmp
in
sti
dec
mov
outs
pop
cmps
leave
pop
jno
imul
test
push
dec
fcomp
push
aam
call
inc
(bad)
inc
sub
mov
wrmsr
cmp
sbb
lock
call
push
mov
call
mov
mov
shr
cmp
adc
or
jmp
mov
scas
loope
retf
mov
or
xor
(bad)
(bad)
(bad)
jmp
imul
lock
adc
mov
fld
push
and
add
neg
jb
jne
or
dec
test
mov
push
outs
mov
fwait
adc
int
std
(bad)
call
and
ds
push
imul
mul
cld
(bad)
jmp
push
(bad)
mov
loopne
push
(bad)
test
imul
cmp
add
sub
retf
push
daa
aam
inc
and
ins
mov
cmps
xchg
scas
enter
scas
cmp
jecxz
pop
in
icebp
nop
push
mov
les
(bad)
(bad)
jmp
inc
mov
jnp
(bad)
dec
pop
rcl
add
pop
cmp
adc
xlat
xor
das
sar
or
dec
xor
fwait
push
mov
idiv
cmps
shl
jno
(bad)
(bad)
(bad)
cmp
xor
sbb
jbe
ins
xor
aad
adc
jle
iret
mov
call
push
adc
aas
fdivr
hlt
and
or
inc
and
nop
pop
ret
jg
adc
call
ret
js
jae
xchg
ja
push
sbb
add
mov
or
call
and
push
sbb
push
hlt
jnp
xchg
(bad)
ins
jne
sub
ins
xchg
pop
(bad)
pushf
push
sub
mov
ja
dec
das
fisubr
aas
xor
or
adc
cmps
(bad)
(bad)
(bad)
dec
stos
pop
mov
mov
icebp
and
xlat
xchg
fistp
icebp
(bad)
cld
mov
(bad)
dec
shl
mov
inc
ins
adc
lods
pop
or
or
mov
jg
ret
jne
repnz
dec
jmp
pop
je
push
adc
xor
sub
jmp
xor
mov
cmc
in
or
mov
sbb
jl
mov
add
cld
test
jp
call
inc
or
mov
push
(bad)
out
test
(bad)
(bad)
(bad)
push
fsub
mov
sub
sub
test
push
loop
mov
(bad)
xor
adc
test
loope
and
and
inc
cld
inc
add
mov
mov
mov
(bad)
mov
inc
call
test
outs
sbb
scas
movs
push
outs
xchg
cmp
xor
inc
shr
icebp
jo
xchg
xor
mov
xor
ja
es
pop
clc
inc
pop
stos
mov
pop
dec
cli
or
ins
imul
in
shl
push
movs
popf
add
mov
pop
sub
inc
out
pop
fbstp
add
je
jne
mov
jmp
or
pop
inc
cmp
jo
pop
dec
inc
(bad)
jmp
std
mov
pusha
sub
test
mov
push
push
das
or
adc
call
or
(bad)
(bad)
(bad)
(bad)
call
xor
add
mov
dec
adc
mov
loopne
fsub
pushf
xchg
and
iret
cmp
sbb
fwait
lods
pop
push
cs
mov
js
dec
jmp
fbld
adc
sbb
sub
rcl
int3
push
pop
cmc
(bad)
call
into
cs
ret
retf
add
sub
fdiv
not
jg
mov
loopne
leave
paddsb
push
rcr
dec
cld
(bad)
inc
mov
lahf
shr
xor
popa
and
push
fbld
jo
or
dec
je
(bad)
jmp
int
iret
push
and
xchg
jmp
push
add
push
retf
(bad)
mov
mov
jp
ja
pop
xor
mov
(bad)
call
sar
jg
push
sar
(bad)
aas
adc
fsubr
mov
and
js
mov
or
and
cmp
rol
(bad)
(bad)
call
daa
xchg
pop
cmc
test
sbb
or
jmp
mov
push
shl
inc
loopne
xchg
sub
mov
cmp
xor
dec
mov
sub
add
xor
(bad)
jmp
mov
call
push
pop
fisttp
push
int3
mov
fucomp
pop
retf
loope
lock
clc
mov
arpl
dec
shr
cmps
mov
(bad)
(bad)
(bad)
push
in
push
cdq
adc
out
rol
or
cmp
fcomp
ss
inc
in
mov
pop
cpuid
(bad)
(bad)
(bad)
jmp
adc
out
out
xchg
cld
cmp
mov
inc
jne
inc
adc
pop
add
ss
rol
cmp
add
ror
aas
dec
sub
scas
push
loopne
scas
inc
fsub
in
sub
mov
cmps
and
sbb
or
dec
dec
stos
shl
xor
mov
push
outs
xor
dec
mov
ror
fnstcw
je
or
mov
pusha
mov
adc
add
repnz
aaa
pop
push
jae
and
mov
sub
enter
xor
xor
fwait
clc
pop
adc
enter
mov
fisttp
(bad)
cmp
mov
jecxz
cld
pop
and
adc
sbb
push
mov
js
movs
inc
ret
dec
clc
mov
lds
test
mov
and
clc
aaa
je
int
jo
push
mov
call
or
ret
cli
stos
test
emms
inc
jmp
xor
dec
adc
fwait
mov
pop
xchg
enter
(bad)
jmp
xchg
add
sub
sub
(bad)
(bad)
jmp
mov
add
push
add
inc
or
cmp
call
retf
push
push
sbb
cli
push
mov
loopne
adc
cld
jle
(bad)
(bad)
(bad)
(bad)
mov
jg
call
xor
shl
mov
cwde
daa
fst
lock
mov
inc
inc
ja
into
and
dec
jg
pusha
test
cs
(bad)
(bad)
jmp
lods
outs
and
dec
adc
pop
daa
sub
dec
push
fidivr
mov
(bad)
fbld
add
(bad)
inc
shl
mov
sbb
dec
adc
nop
dec
xor
fdiv
add
jne
dec
add
mov
push
cmc
sub
psllw
inc
and
aad
dec
mov
(bad)
(bad)
inc
inc
inc
xchg
dec
sub
xchg
push
nop
inc
dec
push
push
xchg
ins
inc
add
ret
(bad)
icebp
push
and
clc
ret
pop
hlt
xchg
jmp
shr
mov
add
call
sbb
icebp
(bad)
(bad)
call
add
sub
test
lock
imul
xchg
fisub
mov
inc
mov
lock
(bad)
mov
into
adc
mov
jl
sub
(bad)
dec
cwde
add
xor
push
xchg
jno
push
daa
retf
xor
(bad)
(bad)
outs
or
cmp
gs
sub
lock
pop
xor
adc
mov
mov
int
int3
aas
mov
adc
add
xor
aaa
xor
sub
arpl
push
lea
jmp
nop
mov
jg
(bad)
inc
shl
sub
or
mov
or
movs
push
cmc
inc
inc
sti
mov
into
aam
adc
jmp
fiadd
hlt
add
push
test
(bad)
push
mul
ret
add
push
sar
fild
adc
mov
ss
sub
popa
(bad)
(bad)
(bad)
jmp
scas
push
mov
cwde
rol
inc
mov
dec
sub
loop
or
add
je
push
add
(bad)
mov
pop
ret
pop
sub
daa
movs
std
and
mov
fwait
jbe
push
push
jg
dec
cld
mov
adc
ss
sbb
(bad)
push
stos
or
push
push
js
dec
mov
popa
push
sub
cmp
(bad)
inc
xor
dec
gs
clc
jl
ror
int3
add
pop
in
jmp
out
dec
sbb
jne
imul
adc
pop
adc
jl
pop
hlt
pop
loopne
aad
xor
test
stc
and
(bad)
push
ret
xor
in
xchg
sub
icebp
add
mov
pop
or
test
add
jb
pop
fs
retf
in
xlat
aas
xchg
dec
xchg
les
call
adc
mov
fidiv
add
ror
sub
jge
cmp
add
dec
push
cdq
jae
add
dec
add
jo
fld
stos
cmp
mov
xor
cld
(bad)
mov
cdq
add
or
mov
xchg
div
lahf
xchg
mov
test
movs
lea
dec
hlt
and
pop
fcmovnb
pop
sub
mov
test
test
stos
mov
inc
(bad)
cmp
add
lds
inc
addr16
cmc
jns
add
ins
fldcw
rcr
or
jmp
inc
mov
jmp
aaa
sub
add
adc
add
ret
pusha
test
int
or
or
data16
call
add
stos
inc
aad
bound
sar
xchg
and
mov
jne
pop
and
ret
cld
dec
xchg
jg
add
(bad)
aad
push
xor
test
jmp
or
adc
or
cmp
(bad)
(bad)
jmp
call
push
mov
cld
rcl
xchg
mov
inc
fiadd
or
aad
sub
pop
mov
in
sub
clc
inc
outs
imul
mov
(bad)
(bad)
(bad)
call
retf
dec
or
leave
push
lea
outs
lds
je
ds
and
cwde
inc
sub
(bad)
clc
xor
(bad)
(bad)
call
push
mov
adc
push
aam
cmp
inc
in
aaa
sub
adc
dec
jns
ret
das
retf
clc
(bad)
dec
add
sbb
mov
adc
mov
mov
and
push
jbe
dec
and
xchg
les
lods
add
or
pop
aas
mov
ror
fiadd
in
dec
add
mov
lods
sbb
xor
xor
adc
cs
les
push
and
jp
mov
(bad)
push
(bad)
(bad)
jmp
pop
(bad)
retf
dec
add
cmp
inc
cmp
xchg
lock
call
mov
in
lahf
leave
js
push
sub
sbb
jns
xchg
cmp
call
dec
xor
popf
push
xchg
je
push
andnps
push
mov
(bad)
call
or
ret
xchg
outs
data16
enter
push
js
sbb
inc
(bad)
push
cs
inc
(bad)
(bad)
mov
(bad)
call
aas
add
add
in
add
clc
(bad)
(bad)
dec
inc
dec
loopne
and
inc
jl
in
mov
(bad)
sti
pop
fild
out
jnp
ds
(bad)
jg
mov
push
imul
mov
cmp
call
dec
and
fst
outs
clc
push
(bad)
mov
es
xor
rol
jb
cli
(bad)
out
adc
or
pop
pop
leave
add
add
cmp
clc
lds
ds
mov
jmp
fwait
sub
shl
add
pop
adc
fnsave
xchg
xchg
pop
test
(bad)
jmp
(bad)
loopne
neg
call
(bad)
dec
jo
icebp
add
mov
push
or
adc
(bad)
(bad)
fcomip
loop
ja
outs
pop
call
jl
ds
fiadd
jmp
aas
adc
test
aaa
sar
mov
pop
pushf
mov
xchg
sbb
into
nop
(bad)
(bad)
(bad)
(bad)
in
cmp
xchg
add
jno
imul
xchg
push
fucomip
add
(bad)
inc
or
adc
sub
sub
adc
add
inc
ss
inc
xchg
bound
mov
nop
stos
sbb
and
(bad)
push
xor
ins
adc
test
push
cmp
outs
int
mov
adc
jne
inc
cld
jmp
add
mov
inc
mov
aam
(bad)
out
clc
pop
popa
pop
mov
push
out
and
xor
mov
neg
adc
loopne
lods
ins
mov
mov
push
xchg
cmp
(bad)
inc
ins
xchg
mov
ficom
dec
popa
sbb
fcmovb
xchg
icebp
test
adc
add
inc
sbb
sbb
pop
xchg
pop
ins
and
xor
call
ins
nop
sbb
mov
adc
push
jne
scas
jnp
or
mov
xor
(bad)
(bad)
call
mov
push
ins
or
sub
jo
test
push
xchg
(bad)
jne
add
addr16
lods
lea
scas
xor
repz
ja
int
add
clc
data16
mov
push
xchg
loopne
(bad)
(bad)
(bad)
jmp
call
dec
mov
sahf
loop
(bad)
stos
mov
push
push
sub
or
jbe
or
dec
and
mov
mov
lods
push
add
xchg
ret
(bad)
(bad)
inc
xor
daa
xor
arpl
sbb
dec
inc
sbb
ds
(bad)
(bad)
(bad)
inc
jmp
adc
or
mov
test
ss
fcomp
retf
(bad)
(bad)
call
add
inc
ret
add
dec
rol
(bad)
daa
or
imul
mov
mov
pop
ss
push
sub
jmp
clc
pusha
mov
xor
add
or
mov
mov
stos
xor
sub
dec
(bad)
(bad)
(bad)
jmp
rol
add
pop
adc
cmp
inc
aaa
stc
jmp
sub
jb
push
xchg
call
stos
mov
dec
ins
push
inc
mov
push
daa
xchg
and
sbb
dec
mov
(bad)
push
and
adc
loope
icebp
push
nop
or
out
jecxz
sub
stos
jg
(bad)
jmp
and
outs
adc
popa
dec
popf
dec
mov
ins
push
test
xor
adc
(bad)
(bad)
call
icebp
ror
inc
jmp
sbb
add
nop
and
adc
mov
icebp
int3
push
call
sub
adc
xor
add
je
sbb
adc
adc
add
push
aam
test
not
jl
mov
cmp
in
dec
jmp
pop
add
mov
or
sbb
ss
push
call
and
xchg
or
add
lds
add
add
ss
pop
(bad)
call
push
and
or
mov
jmp
push
mov
sub
aam
movs
adc
mov
sbb
(bad)
(bad)
call
(bad)
sub
add
and
pop
adc
mov
sbb
push
and
adc
adc
ss
imul
adc
cs
jle
push
aad
(bad)
inc
mov
stc
or
ror
ret
pop
loopne
mov
addr16
pop
sbb
or
(bad)
mov
hlt
pusha
fs
fiadd
dec
fist
ret
pop
pop
jle
sbb
out
mov
dec
loope
in
mov
sub
or
mov
(bad)
(bad)
inc
push
in
movs
xor
inc
fs
dec
push
ret
ret
(bad)
(bad)
mov
xchg
fmul
or
inc
sbb
stos
and
mov
ret
lock
stos
adc
imul
sbb
mov
push
and
imul
(bad)
(bad)
call
mov
cli
mov
mov
adc
and
leave
xchg
cmp
(bad)
(bad)
(bad)
(bad)
cmp
add
inc
sub
xor
(bad)
or
inc
mov
or
pop
pushf
or
(bad)
jg
jmp
or
fs
mov
or
fist
adc
and
add
(bad)
(bad)
(bad)
inc
or
jp
sbb
mov
ins
ss
pop
setnp
ins
cmps
mov
add
cmps
inc
sbb
sbb
jmp
cdq
enter
(bad)
call
pop
aaa
or
sub
js
sbb
adc
and
fs
jge
mov
push
out
mov
icebp
imul
pop
aam
push
(bad)
rol
and
mov
aam
adc
pop
sub
sub
inc
fs
xor
add
pop
out
and
nop
(bad)
adc
inc
shl
or
inc
dec
push
repz
add
inc
pop
fist
or
ins
sbb
pop
mov
dec
fdiv
inc
dec
cmp
and
ret
jl
icebp
and
(bad)
mov
mov
pop
cmp
dec
xor
out
cmp
mov
daa
xor
add
call
call
es
pop
mov
and
adc
jns
mov
lods
and
push
pop
xor
sbb
into
outs
(bad)
(bad)
jmp
movs
add
stc
or
sbb
loope
call
aas
push
scas
inc
dec
inc
sbb
sti
jle
mov
(bad)
jg
mov
push
jo
pop
mov
push
mov
(bad)
sub
rol
movs
(bad)
jg
and
inc
adc
sub
add
gs
int
pop
or
test
pop
call
jmp
mov
add
adc
jnp
(bad)
cmp
or
test
add
inc
dec
add
cmps
add
mov
push
or
(bad)
inc
cmp
sub
adc
pop
add
lea
push
xchg
mov
or
jmp
push
jmp
push
push
cmp
jae
addr16
ret
sbb
repnz
jmp
sbb
push
sar
(bad)
push
leave
fmul
pop
inc
enter
mov
push
neg
jmp
jg
std
inc
inc
dec
xchg
hlt
pop
sbb
inc
loopne
dec
xor
dec
or
or
jmp
pop
scas
or
sbb
icebp
add
push
ret
mov
add
jmp
add
xor
push
mov
pusha
andps
das
sbb
clc
mov
ror
push
pop
(bad)
(bad)
(bad)
jmp
xor
sbb
ja
(bad)
sub
mov
dec
xchg
or
cmps
mov
movs
sbb
or
add
mov
xchg
or
cmp
lods
adc
(bad)
(bad)
jle
or
pop
adc
push
mov
sub
sub
call
bound
daa
sbb
ret
sub
daa
pop
sar
sbb
imul
push
lock
mov
fs
call
fsubr
neg
xor
loopne
sbb
add
ss
cmc
popa
sub
jmp
and
ins
fld
ror
sbb
mov
call
inc
sbb
lea
fimul
adc
pop
repnz
add
sbb
test
mov
cmp
mov
jp
rol
xor
(bad)
(bad)
(bad)
mov
ins
cmp
and
add
dec
lea
add
cmp
sub
adc
icebp
dec
pushf
test
call
inc
test
shl
imul
xchg
jl
or
mov
add
ret
cld
(bad)
jg
idiv
sbb
and
retf
(bad)
jg
mov
scas
ret
xor
or
xor
jo
iret
loopne
dec
mov
outs
inc
pusha
sub
(bad)
jmp
push
ins
and
and
popf
dec
mov
pop
cld
cmp
(bad)
(bad)
(bad)
dec
mov
jo
or
test
xchg
adc
sbb
push
adc
icebp
cmp
(bad)
jmp
fisubr
and
sub
push
jg
pop
fcom
nop
addr16
pop
jecxz
jmp
inc
retf
jne
add
sahf
add
add
inc
sbb
and
cmc
(bad)
addr16
(bad)
(bad)
fbld
sbb
push
hlt
push
jno
call
pop
adc
ja
dec
sbb
adc
nop
cmp
(bad)
sbb
out
jp
sbb
pop
adc
xor
dec
inc
jbe
jp
call
jg
sub
cmp
loopne
test
push
xchg
loopne
xor
mov
mov
ret
push
dec
(bad)
(bad)
mov
push
or
push
daa
push
sbb
or
(bad)
jns
add
mov
xor
push
xchg
xchg
test
(bad)
jle
lock
pop
and
popa
and
xchg
sti
hlt
les
lods
push
gs
call
push
xchg
pop
nop
pop
jmp
test
test
(bad)
(bad)
dec
mov
movs
jl
mov
or
lahf
je
ds
cwde
mov
mov
mov
(bad)
(bad)
push
mov
(bad)
outs
rol
mov
jo
in
int
ins
dec
jo
push
je
(bad)
(bad)
push
xchg
inc
imul
ds
pop
push
add
ret
out
or
or
or
js
push
mov
call
pop
inc
cld
or
call
retf
push
or
enter
and
sub
sbb
pop
push
hlt
pushf
inc
cmp
and
cmp
call
out
jne
test
call
call
aam
rcl
adc
ficomp
enter
je
push
inc
push
pop
dec
shl
imul
cmp
adc
sbb
je
lock
add
ins
add
(bad)
call
imul
push
and
or
push
cwde
inc
test
dec
std
ss
xor
(bad)
(bad)
(bad)
call
(bad)
pop
or
xor
dec
dec
dec
sbb
popa
add
pop
and
outs
call
sbb
jle
adc
and
xchg
xchg
push
push
jbe
stos
jge
fld
inc
mov
inc
int3
jmp
(bad)
(bad)
call
rcr
sub
push
inc
jge
data16
push
inc
fcomp
mov
sub
sub
(bad)
(bad)
inc
or
lods
jo
leave
out
and
inc
sbb
xor
repz
mov
je
pop
xchg
lock
aaa
into
icebp
fisttp
(bad)
(bad)
(bad)
inc
lods
test
rol
enter
mov
jecxz
jne
push
nop
lea
(bad)
(bad)
(bad)
inc
add
sub
add
adc
push
xor
adc
sbb
dec
loopne
xchg
ss
(bad)
(bad)
(bad)
jmp
or
ja
pop
inc
pop
ds
(bad)
xlat
mov
sbb
add
sub
xor
pop
(bad)
(bad)
(bad)
call
movs
adc
or
adc
jecxz
sbb
and
fcom
pop
dec
or
mov
(bad)
(bad)
(bad)
call
(bad)
inc
retf
sbb
(bad)
jnp
in
fdiv
aas
stc
inc
sub
or
(bad)
jmp
or
test
push
ins
mov
sti
or
dec
adc
pop
stos
(bad)
adc
or
scas
(bad)
rol
mov
test
pop
mov
jbe
or
lods
jbe
add
jg
dec
cld
push
mov
cmp
jle
sbb
call
inc
sub
mov
dec
jle
pop
mov
into
(bad)
mov
inc
cwde
add
outs
or
xor
add
rcr
mov
or
xchg
adc
test
(bad)
jmp
adc
mov
test
lahf
loopne
xor
adc
add
sahf
das
jmp
push
mov
add
pop
cmp
mov
add
xor
dec
xchg
(bad)
(bad)
mov
cmps
pop
ret
xchg
mov
xchg
mov
mov
(bad)
jg
adc
adc
and
das
dec
mov
xor
mov
outs
bound
inc
push
(bad)
(bad)
dec
cs
das
dec
pop
and
cmp
cmp
pop
adc
or
mov
sbb
or
jno
add
call
(bad)
cmp
xchg
stos
pop
test
js
int
(bad)
jmp
xor
scas
sub
pop
mov
daa
(bad)
jmp
push
xchg
jecxz
ins
sbb
or
xor
xor
(bad)
(bad)
call
scas
retf
arpl
and
add
push
sub
inc
nop
mov
add
sbb
call
add
arpl
or
cmp
imul
loop
sub
(bad)
jmp
or
icebp
pusha
mov
pop
xchg
add
pop
mov
xor
bound
and
dec
call
ror
or
mov
sahf
and
adc
add
les
das
add
mov
xor
mov
es
aas
les
jae
adc
mov
add
dec
xchg
mov
fadd
icebp
xor
sub
aas
hlt
(bad)
(bad)
(bad)
inc
pop
imul
adc
sar
pop
push
sar
mov
imul
sahf
ret
sbb
jmp
adc
sub
xchg
xchg
push
std
dec
push
adc
pop
cmp
dec
lods
jp
or
rcr
push
or
clc
pop
mov
ins
lahf
lods
sbb
cmp
mov
pushf
aas
pop
stos
xor
das
idiv
call
jge
sbb
ret
mov
add
(bad)
call
fldenv
inc
stos
inc
fidivr
xchg
sub
out
or
mov
(bad)
jmp
dec
clc
pop
and
xchg
xor
lock
aam
adc
mov
sar
cmp
rol
lods
bound
mov
adc
xor
test
or
ret
xchg
pusha
lea
movs
popf
inc
jnp
(bad)
call
clc
mov
pop
mov
shl
outs
dec
jb
mov
ror
(bad)
(bad)
jg
push
ret
pop
inc
sahf
mov
movs
cmp
shr
aam
cdq
push
icebp
xchg
(bad)
jmp
adc
div
mov
adc
js
adc
fidivr
jecxz
cld
(bad)
in
test
mov
push
cwde
cli
pop
(bad)
(bad)
(bad)
mov
mov
sahf
or
mov
push
adc
sub
mov
fiadd
and
sub
jp
loopne
enter
lods
mov
(bad)
(bad)
(bad)
call
jmp
mov
mov
sub
sbb
adc
and
(bad)
(bad)
(bad)
jmp
inc
push
push
add
jnp
test
mov
xor
rcr
das
lock
sar
(bad)
push
sbb
jg
add
mov
jo
inc
test
adc
popf
aam
test
jg
scas
mov
push
in
test
cmp
retf
push
in
push
icebp
aam
sub
push
adc
das
add
arpl
cld
or
jmp
das
inc
add
jg
jmp
int3
(bad)
xchg
dec
sub
lock
adc
ltr
mov
fwait
sub
jge
inc
std
call
lahf
xchg
js
es
dec
push
imul
mov
sti
lods
movs
(bad)
scas
(bad)
(bad)
(bad)
jmp
pop
xchg
cmp
sbb
or
jbe
xchg
mov
cmp
adc
imul
and
imul
and
mov
popf
jmp
inc
sbb
push
adc
inc
mov
ror
push
test
push
nop
test
pop
mov
and
and
push
pop
lahf
add
dec
or
int
enter
mov
and
or
das
jle
pop
retf
(bad)
jmp
and
cmp
inc
outs
xor
push
xor
push
inc
and
or
(bad)
inc
addr16
sub
lock
dec
sahf
cmps
jnp
inc
fadd
push
and
test
out
movs
hlt
call
shl
xlat
scas
pmulhuw
sub
and
(bad)
(bad)
dec
mov
sub
hlt
mov
sbb
daa
movs
mov
mov
mov
or
xchg
push
enter
(bad)
sti
mul
jbe
mov
xor
shr
ins
repnz
xor
sub
(bad)
(bad)
(bad)
call
adc
xchg
mov
mov
psraw
(bad)
cmp
sbb
pop
and
in
adc
loop
mov
push
xor
in
out
stos
arpl
mov
in
scas
loope
xchg
loop
mov
mov
xchg
push
xchg
push
idiv
clc
ja
mov
mov
fld
es
sub
popf
mov
push
adc
and
or
sub
xor
cdq
das
bnd
(bad)
jmp
jo
jne
repz
inc
cmp
mov
and
lods
je
(bad)
call
shl
and
pop
push
daa
cld
and
mov
pop
and
cmc
(bad)
(bad)
push
and
inc
std
mov
or
or
and
push
sub
stos
(bad)
call
xor
inc
and
test
inc
scas
add
dec
je
xchg
rol
sbb
add
dec
push
push
scas
mov
dec
test
jge
mov
out
or
or
cwde
dec
and
pop
xor
call
fisttp
sbb
mov
mov
outs
and
or
xchg
(bad)
dec
adc
sub
push
adc
es
pusha
sbb
(bad)
(bad)
call
mov
sahf
cmp
gs
pop
mov
inc
mov
jmp
xchg
fcom
(bad)
minps
and
add
test
pop
(bad)
(bad)
call
inc
lods
test
cmp
pop
pop
mov
add
pusha
rol
inc
adc
sub
popa
fadd
mov
sub
aaa
(bad)
das
push
adc
add
inc
adc
adc
(bad)
(bad)
(bad)
dec
retf
pop
inc
cdq
daa
jmp
adc
pop
or
xchg
fist
fisubr
idiv
fs
push
adc
fsub
sub
mov
cwde
and
pop
(bad)
(bad)
push
je
inc
mov
rcl
fadd
push
rcr
jle
aaa
or
sub
loope
pop
cmp
jle
xchg
and
jae
enter
sub
inc
call
(bad)
fistp
js
sbb
iret
dec
inc
nop
sbb
dec
pop
dec
mov
ret
xchg
xchg
xor
clc
cli
es
xchg
(bad)
(bad)
(bad)
push
das
sub
push
pusha
mov
pop
imul
in
inc
dec
push
sbb
push
adc
retf
or
push
fiadd
jo
pop
std
(bad)
jmp
daa
ss
pusha
test
ss
es
push
lahf
xchg
add
jb
fcomip
(bad)
push
(bad)
jmp
adc
and
add
cmovae
sbb
es
(bad)
mov
cmp
jmp
jle
sbb
sub
fcom
xchg
pop
or
(bad)
(bad)
mov
and
pop
cs
in
cdq
fld
pop
adc
(bad)
(bad)
(bad)
inc
jmp
push
add
nop
ret
sbb
sbb
add
push
mov
ds
outs
add
xor
sbb
adc
pop
mov
(bad)
call
movs
jge
jb
imul
pop
inc
sub
aas
mov
mov
hlt
cdq
pop
retf
(bad)
(bad)
(bad)
(bad)
jg
sbb
push
xchg
mov
adc
not
push
cmp
fadd
and
loop
dec
xchg
stos
loope
imul
inc
cmp
hlt
ret
and
push
push
fcomip
dec
or
mov
xchg
out
add
dec
or
xor
test
es
(bad)
(bad)
(bad)
inc
or
mov
test
xor
mov
out
call
or
cmp
jge
adc
jg
ins
push
mov
(bad)
call
sbb
adc
and
push
inc
mov
pop
push
inc
fsubr
jno
dec
mov
jmp
sub
mov
dec
jbe
sub
test
mov
(bad)
inc
sbb
mov
push
test
push
movs
adc
sbb
inc
adc
mov
das
sbb
or
adc
data16
xchg
cmp
loop
hlt
inc
dec
or
sub
sbb
jmp
mov
sbb
sub
add
(bad)
cmp
hlt
sub
test
inc
icebp
inc
fnstenv
call
inc
jl
and
popa
adc
rol
(bad)
(bad)
(bad)
jmp
jne
push
inc
push
inc
and
imul
add
or
and
out
cmp
sbb
sti
es
sub
push
cmp
jg
push
imul
outs
movaps
scas
dec
sbb
mov
push
(bad)
(bad)
jg
sbb
pushf
ficomp
js
mov
mov
cmp
(bad)
push
or
pop
cmp
(bad)
cli
inc
lods
or
mov
mov
ret
and
mov
jmp
out
and
adc
fucomi
pop
das
cli
(bad)
jg
push
pop
dec
sub
xchg
or
sub
dec
dec
ins
bndldx
scas
cli
call
ror
pop
hlt
mov
sub
clc
inc
inc
adc
call
bound
inc
jbe
dec
and
and
or
push
xchg
aam
xor
sbb
and
(bad)
(bad)
(bad)
call
fisttp
xor
sbb
mov
adc
jmp
in
mov
int3
jmp
leave
jne
les
jo
push
or
inc
lods
arpl
(bad)
(bad)
dec
out
and
out
jne
out
or
mov
ins
mov
xchg
jp
mov
xchg
mov
(bad)
push
pop
sbb
popa
mov
sub
ja
jmp
xor
pop
sbb
cld
(bad)
mov
adc
ss
lods
pop
scas
jns
sub
cmp
dec
push
pop
xor
ins
sub
add
fs
lods
add
inc
movs
xor
xor
daa
fnstcw
jmp
jmp
mov
or
pop
ins
xchg
or
dec
ret
ficomp
adc
pop
cli
mov
imul
push
mov
cmp
or
xor
(bad)
dec
inc
jne
adc
(bad)
je
test
cs
movs
push
outs
mov
shl
in
dec
adc
jg
inc
cld
movs
(bad)
push
mov
xor
cmps
out
xchg
dec
sbb
(bad)
mov
mov
push
out
adc
xor
inc
add
std
(bad)
jmp
sbb
ins
jecxz
xchg
call
add
data16
xor
sub
gs
sub
lds
xchg
mov
shl
pop
sbb
in
and
(bad)
call
jnp
push
repz
clc
imul
mov
cwde
inc
cmc
xchg
adc
dec
and
fiadd
jb
loop
add
ficomp
sar
(bad)
jge
daa
sbb
sub
inc
test
xor
call
mov
(bad)
(bad)
jmp
out
inc
sbb
push
jns
adc
push
push
inc
mov
sub
add
sub
lds
mov
and
mov
popa
mov
dec
add
icebp
or
inc
and
dec
aaa
xchg
mov
ja
pop
cmp
call
jl
mov
pop
mov
mov
cmp
stos
jle
stc
sbb
push
cmps
push
sub
icebp
ffreep
xchg
cmc
loope
and
sub
jmp
cli
push
int
inc
sbb
mov
inc
adc
xchg
test
adc
arpl
(bad)
(bad)
jmp
pushf
cmp
add
cld
xor
sub
xchg
push
cs
mov
clc
dec
push
or
cmps
pop
pop
push
adc
jmp
jnp
cwde
cmp
pop
ss
sbb
sbb
jmp
adc
(bad)
jg
(bad)
mov
inc
jmp
push
mov
bound
aam
xor
bound
and
cmp
and
sub
stc
pushf
cmp
or
sub
inc
fs
js
or
or
push
mov
(bad)
(bad)
inc
jnp
and
rol
xchg
cmp
cdq
xor
cmp
mov
push
(bad)
(bad)
(bad)
(bad)
jnp
sub
dec
int3
push
pop
repnz
sub
dec
in
sub
adc
(bad)
(bad)
push
jb
push
lock
sti
pushf
inc
cmps
inc
(bad)
loopne
mov
sub
jmp
cmps
add
fiadd
dec
cs
(bad)
(bad)
cmp
push
add
mov
aam
cmp
mov
mov
cld
(bad)
inc
inc
or
lds
jbe
adc
jne
and
mul
add
aaa
ins
pusha
mov
push
(bad)
(bad)
call
adc
jo
and
jne
out
pop
mov
retf
push
addr16
pop
sub
scas
fild
adc
imul
daa
dec
imul
mov
clc
scas
dec
and
out
or
jmp
and
xchg
add
mov
push
adc
or
dec
dec
mov
(bad)
sbb
pusha
xor
mov
jnp
mov
push
sub
popf
or
dec
int3
sub
cmp
(bad)
jmp
inc
and
adc
mov
loopne
xor
imul
daa
dec
mov
(bad)
(bad)
(bad)
(bad)
cmp
add
dec
mov
je
inc
push
retf
push
call
mov
push
push
(bad)
(bad)
(bad)
jmp
bound
push
sub
lods
mov
inc
icebp
push
cdq
cmp
mov
jp
aas
ret
lock
dec
xor
(bad)
(bad)
(bad)
call
adc
cld
cmp
xor
stos
je
pop
dec
pop
push
shl
and
mov
push
dec
xchg
push
ss
add
daa
retfw
arpl
or
(bad)
(bad)
(bad)
dec
mov
push
jecxz
rcl
add
mov
ins
(bad)
pusha
xchg
mov
inc
sbb
adc
cli
sub
cld
jmp
pop
sub
shl
or
cwde
dec
jge
and
(bad)
cmp
dec
clc
or
mov
sub
mov
fdivr
mov
xor
mov
push
add
(bad)
(bad)
push
int3
push
in
lds
mov
mov
xor
test
in
adc
(bad)
jg
icebp
mov
add
pusha
add
cmp
sub
(bad)
call
and
call
fisttp
pop
dec
sbb
rol
push
clc
(bad)
dec
popa
push
scas
adc
sbb
test
fdiv
arpl
or
into
cdq
and
retf
cmp
(bad)
int
xor
jo
mov
aad
mov
push
pop
jp
pop
dec
push
and
rcr
retf
mov
(bad)
cmp
inc
cs
in
inc
in
popf
push
xor
hlt
(bad)
cmp
iret
movs
jo
push
add
jg
scas
cmp
sub
inc
mov
pop
es
dec
push
in
(bad)
(bad)
(bad)
dec
dec
xchg
push
inc
push
das
cwde
sub
test
pop
mov
mov
es
or
dec
xchg
(bad)
fisttp
inc
sbb
movs
daa
dec
mov
add
jmp
jle
inc
lock
cmp
out
or
sub
fwait
sub
push
mov
jmp
xchg
lock
xor
mov
inc
(bad)
push
dec
daa
(bad)
(bad)
(bad)
(bad)
pop
sbb
pop
ins
pop
retf
movs
xor
retf
rcl
adc
or
(bad)
(bad)
(bad)
(bad)
cmp
lds
fiadd
or
jl
mov
and
and
inc
jo
or
fsub
cmps
mov
add
pop
pop
push
fdivr
xlat
xor
(bad)
(bad)
call
pop
movs
cmp
adc
dec
pop
mov
imul
movs
gs
pop
xchg
jge
dec
addr16
gs
mov
fcomp
into
mov
retf
cmp
imul
(bad)
(bad)
fistp
arpl
push
or
(bad)
(bad)
dec
adc
xchg
ins
sbb
outs
add
mov
out
je
call
jmp
sbb
cli
pop
ret
push
iret
out
push
ret
cmps
or
pop
sbb
fild
mov
add
sbb
xor
fimul
icebp
push
loope
pop
mov
xchg
inc
or
mov
mov
push
sahf
(bad)
push
dec
add
push
dec
dec
ror
dec
or
sbb
dec
mov
push
fsubr
push
sbb
jl
or
(bad)
(bad)
inc
or
pop
adc
out
add
pushf
push
jmp
sbb
and
fistp
add
sbb
(bad)
cli
test
(bad)
(bad)
(bad)
cmp
lock
or
pop
mov
mov
mov
popa
adc
inc
dec
fwait
(bad)
(bad)
(bad)
jmp
fldenv
outs
adc
sub
pop
and
(bad)
inc
cs
sub
push
sub
dec
adc
inc
adc
daa
sbb
dec
dec
inc
add
in
(bad)
call
xor
aaa
and
xchg
test
call
cmps
lock
(bad)
(bad)
(bad)
mov
das
adc
out
ror
ins
mov
cmp
xor
or
inc
fidiv
icebp
(bad)
(bad)
call
add
in
movs
in
jno
mov
shr
xchg
and
imul
cs
jmp
sbb
lods
push
cmps
cmps
or
push
ret
inc
mov
inc
je
gs
add
xor
das
and
dec
push
test
push
stos
push
test
imul
cli
(bad)
inc
mov
scas
mov
inc
loope
inc
add
rol
pop
(bad)
lock
push
std
call
sub
or
xor
fcmove
mov
sbb
call
xor
sub
sub
not
and
dec
jp
inc
pop
icebp
push
sub
xor
sbb
add
adc
and
(bad)
cmp
pop
inc
fnstenv
xor
or
leave
(bad)
(bad)
(bad)
(bad)
jmp
push
sbb
movd
or
push
cmp
rcl
cmp
(bad)
(bad)
jmp
or
aas
push
rcl
scas
cmp
mov
xchg
add
mov
fld
dec
hlt
xchg
push
clc
call
push
add
jbe
inc
scas
cmp
(bad)
(bad)
push
jp
push
mov
push
pusha
retf
jae
fld
pop
lds
or
jne
xchg
add
cld
(bad)
(bad)
mov
imul
pop
cmp
dec
push
xchg
in
add
movs
fild
movs
pop
call
(bad)
cmps
fwait
adc
aam
cwde
inc
mov
and
mov
inc
popa
adc
jg
(bad)
fld
dec
cmc
in
and
fistp
or
cmp
and
(bad)
(bad)
(bad)
dec
sbb
sub
and
jle
sbb
mov
sub
jmp
fwait
jo
or
push
xor
cmp
(bad)
push
cli
arpl
js
mov
lea
xchg
mov
pushf
movs
sub
movs
std
and
(bad)
(bad)
(bad)
jg
and
movs
jne
xlat
inc
xor
aam
test
xchg
pop
and
les
les
add
test
hlt
and
dec
aaa
xlat
or
jmp
sar
(bad)
(bad)
call
in
retf
in
mov
fldcw
hlt
push
les
pop
lds
add
mov
xchg
(bad)
mov
push
clc
sahf
xchg
lahf
sub
mov
sbb
xor
and
dec
jne
cmp
and
inc
mov
je
ret
push
cmp
call
pop
outs
xor
push
jg
maxps
inc
in
adc
or
jbe
dec
mov
inc
(bad)
jle
sub
inc
sbb
pop
bound
or
clc
punpcklwd
(bad)
call
jb
nop
push
xor
mov
fild
add
(bad)
jmp
retf
add
jl
loope
gs
mov
(bad)
or
gs
(bad)
(bad)
(bad)
mov
sahf
or
gs
sbb
pop
inc
xchg
xchg
loope
mov
(bad)
jg
icebp
aam
call
test
push
cmps
xor
add
add
push
(bad)
(bad)
(bad)
call
jmp
iret
mov
inc
addr16
sbb
or
mov
mov
inc
mov
adc
(bad)
(bad)
fcomip
and
jae
call
scas
sub
add
add
inc
sub
es
(bad)
push
inc
xor
cmp
sbb
mov
pop
(bad)
jno
mov
add
inc
add
stos
push
add
xchg
(bad)
lock
(bad)
jg
add
mov
mov
inc
fisttp
mov
fs
pop
pop
sbb
dec
add
jecxz
cmp
pop
adc
add
dec
xor
cvtpi2ps
(bad)
call
dec
js
sub
jns
icebp
and
test
sbb
test
(bad)
jle
adc
and
int3
push
sbb
imul
(bad)
jg
retf
dec
aam
mov
jecxz
sbb
and
loopne
and
add
and
das
jns
lods
pop
std
and
loope
cmp
inc
cld
dec
int3
pop
jmp
clc
scas
(bad)
(bad)
(bad)
aas
sub
mov
pop
mov
push
xor
sub
mov
dec
movs
test
add
mov
iret
sub
lahf
in
fidiv
(bad)
(bad)
jmp
xchg
xchg
pop
or
ins
sbb
daa
mov
jl
mov
sub
cmp
(bad)
(bad)
clc
scas
in
cmp
mov
lock
add
aam
xchg
inc
jl
or
push
leave
xor
and
pop
outs
enter
mov
inc
lds
(bad)
fcomip
mov
push
mov
(bad)
pop
popa
bound
add
lds
xor
cmp
dec
inc
test
adc
pop
sar
ret
cli
(bad)
(bad)
jg
rcr
xor
push
lea
pusha
(bad)
sti
or
push
sbb
sbb
(bad)
mov
scas
fdiv
nop
mov
mov
sar
(bad)
inc
fdiv
and
mov
ins
fcom
dec
mov
mov
icebp
add
xor
(bad)
push
sbb
jae
add
pop
sub
sbb
inc
lock
inc
(bad)
call
jno
aam
daa
test
push
jmp
loop
popa
pop
pop
inc
or
rcl
pop
sub
mov
cld
sub
add
scas
ins
shr
push
add
jns
clc
(bad)
push
in
add
jge
sbb
int
add
int3
cmovb
(bad)
(bad)
call
push
sub
fcomp
fs
sbb
adc
sub
imul
mov
loop
cwde
inc
jge
and
loopne
ja
jb
(bad)
(bad)
push
dec
mov
or
cmp
lahf
icebp
pop
bound
pop
clc
(bad)
(bad)
jg
push
or
sbb
push
cmp
ins
jmp
mov
add
pop
push
or
scas
xor
cwde
xor
sub
repnz
(bad)
dec
mov
hlt
add
daa
and
mov
ret
and
mov
mov
es
leave
imul
push
jnp
inc
sbb
jmp
adc
mov
push
data16
xchg
add
dec
inc
adc
loop
gs
jl
sbb
jecxz
push
pslld
mov
dec
cli
out
gs
lock
aas
jecxz
and
push
ja
cmp
(bad)
xor
mov
jecxz
ja
xlat
jno
xchg
mov
ret
aas
(bad)
(bad)
dec
js
xor
retf
push
jg
cmc
push
push
sahf
mul
xlat
in
(bad)
mov
xchg
daa
mov
cli
ror
add
cmp
popf
inc
xor
mov
jnp
test
push
aaa
pusha
ss
adc
popa
out
je
jecxz
call
fld
icebp
adc
push
lock
rcr
test
sub
addr16
fs
push
sub
sub
adc
xor
xor
cmp
ret
xchg
pop
push
xlat
call
add
xlat
sbb
dec
inc
adc
pop
pop
add
icebp
jmp
bound
jne
xchg
mov
xor
push
cld
(bad)
gs
xchg
and
mov
call
pusha
mov
(bad)
call
dec
dec
sbb
ins
fs
push
xchg
push
dec
popa
mov
push
data16
shr
retf
xchg
(bad)
jmp
mov
cdq
and
or
jle
inc
hlt
jne
xlat
(bad)
call
push
test
xor
add
or
sub
loop
xor
(bad)
(bad)
(bad)
inc
sub
enter
push
sbb
add
or
mov
pusha
xor
clc
jmp
cmp
rcr
arpl
adc
xchg
fs
pop
or
(bad)
push
push
adc
and
sub
inc
loopne
gs
pusha
pop
(bad)
(bad)
(bad)
dec
(bad)
or
push
or
popf
rol
sbb
out
inc
or
cmps
and
shl
test
call
pusha
push
jne
jge
(bad)
call
nop
or
retf
jns
sbb
or
jne
add
adc
adc
nop
adc
adc
jb
outs
test
add
adc
push
sub
jns
clc
lock
(bad)
(bad)
mov
gs
mov
ret
or
push
or
jns
rol
or
int
sub
sbb
mov
outs
call
loopne
mov
in
mov
movnti
inc
adc
clc
(bad)
(bad)
inc
daa
xchg
add
imul
fist
icebp
int3
ja
push
outs
and
pop
fsubr
bound
(bad)
(bad)
jg
cmp
sbb
xchg
call
cmp
mov
sbb
jecxz
xor
or
sbb
fistp
(bad)
sbb
mov
push
xor
sbb
cld
(bad)
push
rcr
xor
leave
pop
mov
push
pop
jnp
(bad)
(bad)
call
dec
imul
adc
mov
and
mov
sub
add
add
inc
imul
cmc
mov
mul
push
and
mov
mov
xor
push
arpl
dec
(bad)
(bad)
(bad)
hlt
sub
cmp
test
movs
outs
mov
data16
cwde
add
in
sbb
jbe
xchg
adc
xor
(bad)
pop
cld
pop
fidiv
inc
add
adc
adc
dec
push
pop
xor
pop
or
adc
or
into
add
jns
or
inc
and
(bad)
jmp
push
or
aas
adc
xor
pusha
ins
adc
and
pop
add
xchg
adc
iret
dec
jmp
mov
or
repnz
and
inc
ret
adc
pusha
sti
popf
nop
mov
ret
push
adc
(bad)
mov
sar
lea
mov
aad
in
data16
mov
xchg
nop
icebp
(bad)
push
fmul
adc
adc
in
push
sar
popf
bnd
sar
sbb
cmp
into
stos
xor
ret
sub
dec
inc
ss
sbb
call
add
mov
and
ss
stos
and
xchg
jo
pop
and
fistp
or
dec
ins
shr
das
popf
or
(bad)
(bad)
call
jb
xor
adc
mov
push
xor
mov
cmp
ins
(bad)
(bad)
inc
xor
mov
imul
mov
in
xlat
lds
fcom
xor
fs
ins
pop
lock
sub
dec
and
pop
and
daa
mov
(bad)
(bad)
inc
or
lock
fldenv
or
fild
shl
das
or
sub
sbb
pop
add
ja
add
sbb
mov
mov
xchg
fsubr
popa
add
dec
test
nop
inc
ins
das
div
push
xor
(bad)
scas
test
and
add
add
push
dec
and
(bad)
(bad)
fist
add
or
inc
outs
sbb
imul
add
sbb
dec
and
mov
js
cmp
(bad)
fbld
frstor
je
jecxz
sub
fsub
scas
adc
call
and
fidiv
outs
and
xchg
or
int3
mov
adc
jmp
dec
ret
fcomp
sbb
adc
enter
xchg
pop
addr16
or
loope
push
dec
js
call
mov
mov
pop
adc
ja
jno
(bad)
jmp
adc
mov
int
adc
sbb
adc
sbb
addr16
test
mov
mov
or
adc
lea
popa
pop
call
sub
xchg
mov
mov
and
(bad)
inc
in
pop
xor
jbe
jg
push
sub
fidiv
sbb
call
push
icebp
out
push
sub
(bad)
out
or
fisttp
and
les
leave
pop
jb
(bad)
jg
dec
fiadd
gs
aad
jb
inc
jo
or
adc
fiadd
mov
sbb
or
or
fwait
jno
imul
lock
or
push
dec
(bad)
inc
xchg
mov
int
inc
adc
mov
adc
jmp
cli
mov
mov
adc
ficomp
or
jae
adc
(bad)
xor
jb
or
ss
mov
shl
je
fisttp
and
sbb
lds
or
(bad)
jg
dec
sbb
inc
bound
and
push
dec
push
cs
sub
jmp
cmps
sub
pop
jno
loop
lds
sub
lods
pusha
mov
cmc
sub
or
push
sbb
fdiv
xor
rcl
fwait
push
push
sub
and
sub
mov
add
jp
add
std
test
shr
(bad)
enter
sub
jbe
mov
mov
mov
mov
inc
pop
inc
sub
outs
sahf
(bad)
dec
fistp
mov
test
shr
mov
xor
(bad)
inc
mov
add
pusha
jmp
test
fldcw
(bad)
jmp
lahf
aas
xor
dec
add
adc
dec
pusha
pushf
pop
adc
jo
jp
inc
test
adc
xor
cmps
push
jne
ds
test
je
cmps
repz
push
push
sbb
or
and
or
leave
and
(bad)
jmp
and
xor
lods
add
mov
adc
jmp
test
push
mov
(bad)
call
adc
outs
or
cwde
and
push
dec
out
sub
fild
cld
pop
xor
xor
call
lock
fisub
sub
pop
mov
pop
add
retf
pop
test
push
sahf
imul
or
(bad)
or
inc
push
adc
xlat
(bad)
(bad)
jmp
xchg
and
add
popf
sbb
call
sbb
sbb
xchg
push
push
mov
push
in
sbb
and
clc
inc
xchg
mov
inc
in
cld
rol
adc
leave
sub
jle
and
pop
test
jge
sbb
mov
ja
and
and
pop
and
or
es
std
mov
pop
push
inc
sbb
ror
jecxz
xor
xor
adc
dec
sub
lea
pop
sub
add
mov
stos
icebp
das
icebp
sub
jo
push
icebp
mov
repz
(bad)
imul
cmps
jmp
dec
sub
push
dec
out
sub
sbb
pop
xor
or
cmp
(bad)
dec
lods
sub
shl
push
lods
ss
retf
sbb
adc
(bad)
cmp
cmp
sbb
sub
jmp
sub
cmc
cmp
add
fcmove
add
daa
and
jmp
scas
imul
clc
bound
jp
lea
adc
imul
and
push
sbb
(bad)
(bad)
push
loopne
add
pop
sbb
xchg
ficom
mov
dec
pop
div
xor
sbb
(bad)
(bad)
jmp
add
and
and
test
out
enter
scas
and
ins
sbb
das
(bad)
(bad)
(bad)
push
push
sti
cmp
mov
mov
mov
mov
and
inc
jns
dec
mov
dec
sar
call
mov
adc
mov
and
sahf
mov
mov
lea
test
sbb
pop
repnz
and
xchg
fdivr
fcomip
(bad)
dec
add
adc
add
fstp
sub
push
repz
(bad)
(bad)
dec
and
add
jbe
add
loopne
xor
xchg
in
ins
std
jmp
rol
adc
daa
push
rol
lds
daa
lods
sbb
call
cmps
sub
mov
mov
popa
xlat
sub
das
(bad)
mov
test
pop
mov
out
xchg
pop
push
(bad)
je
push
fsub
add
call
push
movs
cmp
and
add
jg
ds
cmc
aam
pop
fidivr
inc
outs
mov
pop
sub
pop
xlat
(bad)
push
(bad)
jg
call
pusha
inc
pop
pusha
shl
or
(bad)
das
sub
xchg
or
call
lock
fdiv
xchg
clc
jno
addr16
into
and
sub
xor
(bad)
(bad)
inc
mov
jne
pop
add
mov
xchg
mov
sbb
(bad)
dec
adc
leave
xlat
xchg
ins
and
dec
sub
adc
(bad)
(bad)
(bad)
mov
(bad)
push
sub
adc
ret
enter
imul
fcmovnbe
outs
and
imul
(bad)
xor
ins
ins
gs
xor
mov
adc
mov
in
dec
in
and
mov
pop
sbb
push
popf
sub
(bad)
cs
cs
mov
adc
lds
(bad)
adc
dec
stos
jno
mov
pushf
adc
inc
cmp
push
mov
sar
jne
sub
jne
call
add
mov
mov
mov
call
and
fbld
add
fbstp
pusha
adc
icebp
(bad)
(bad)
(bad)
fldenv
push
xchg
mov
cmp
test
add
and
jbe
fisttp
add
xor
cli
sbb
popa
pop
lock
push
hlt
and
outs
jg
shl
imul
call
(bad)
and
add
imul
pop
cwde
stos
lds
dec
outs
popa
and
push
inc
dec
arpl
mov
jnp
mov
adc
rcr
fmul
and
clc
call
fidivr
mov
push
sbb
mov
popa
js
push
dec
push
jnp
and
shr
ss
push
mov
lock
push
cmps
ins
fdivr
movs
dec
inc
pop
add
fisub
dec
jg
jg
push
mov
mov
sbb
out
mov
lods
(bad)
(bad)
(bad)
jmp
test
xor
in
cmp
adc
mov
and
adc
imul
mov
and
inc
fsub
cwde
dec
stos
dec
ins
mov
push
sub
mov
(bad)
(bad)
(bad)
push
mov
and
inc
push
xor
dec
add
mov
or
dec
xor
repnz
mov
ins
fisttp
daa
cmc
xchg
cmp
add
in
xchg
dec
cdq
adc
sti
cmps
enter
jg
mov
mov
lds
shl
push
mov
loope
or
push
cmp
and
ss
push
scas
jmp
push
mov
mov
or
mov
or
add
(bad)
mov
or
pusha
inc
mov
jg
pop
ins
push
mov
push
or
or
xchg
in
(bad)
push
jo
inc
add
(bad)
and
sub
push
cmc
(bad)
cmps
sbb
cmp
pop
sub
in
nop
inc
cmc
and
sub
push
mov
imul
and
and
sbb
and
data16
call
mov
or
es
ins
mov
sbb
stos
sbb
loop
mov
jp
lods
cwde
fiadd
(bad)
cmp
adc
ss
pop
loopne
add
adc
das
call
inc
push
out
push
mov
xor
cmp
sub
push
das
jmp
fwait
push
pop
adc
pop
or
inc
push
jne
dec
xchg
pop
movs
or
mov
pop
sub
mov
mov
jmp
sub
add
fwait
xchg
call
(bad)
inc
jmp
lods
jge
or
cwde
outs
out
jg
and
add
cmps
add
ja
sbb
mov
pop
cmc
inc
cmp
cmp
add
jnp
call
adc
mov
(bad)
(bad)
(bad)
jmp
or
xor
rol
push
das
ins
jo
xchg
jne
mov
dec
add
xchg
or
adc
xor
test
push
lahf
push
cwde
push
in
or
jb
add
xor
add
ret
lock
fnstenv
repnz
aas
rol
inc
xchg
mov
rcl
sti
hlt
or
icebp
cmc
cmp
mul
ins
mov
push
popf
sbb
fucomip
jmp
or
or
lock
clc
pop
dec
mov
in
dec
or
int3
in
or
pop
(bad)
sar
jmp
iret
mov
xor
pop
adc
mov
inc
in
lods
mov
pop
sbb
mov
popa
inc
inc
imul
jge
(bad)
(bad)
dec
jno
lods
cmp
cmp
push
gs
adc
popf
pop
xor
pop
pop
and
mov
jl
sub
inc
ins
sar
jmp
mov
mov
mov
sbb
sub
call
loopne
xchg
sbb
imul
movs
and
or
mov
and
(bad)
fisttp
inc
dec
sub
(bad)
jmp
fcom
xchg
clc
movs
or
cmp
dec
sbb
repnz
ins
loopne
lock
dec
and
add
(bad)
(bad)
dec
add
xchg
in
xchg
mov
mov
push
cmp
xchg
sub
sbb
inc
xor
xchg
inc
pop
dec
je
arpl
mov
leave
out
cmp
xchg
and
add
call
imul
or
xchg
pop
gs
nop
push
dec
mov
mov
sub
pusha
lds
movs
fcom
jge
pop
aaa
sub
push
push
xchg
push
sbb
push
mov
pop
pop
add
push
jo
arpl
cmp
(bad)
mov
or
inc
and
je
inc
mov
lods
fdiv
push
iret
push
pop
dec
add
cmp
jo
in
enter
add
xchg
adc
(bad)
out
or
rol
sbb
ret
add
lds
push
les
jg
(bad)
call
nop
xchg
nop
sbb
cmp
cmp
jb
enter
leave
push
test
adc
pop
leave
enter
or
pop
retf
or
test
nop
xchg
test
mov
adc
or
sbb
add
pop
leave
adc
push
and
adc
neg
aas
clc
(bad)
out
push
xchg
add
fsubr
fsubrp
xchg
push
sub
or
pusha
js
or
mov
clc
loopne
inc
pop
fadd
(bad)
(bad)
call
rol
dec
push
jae
add
aaa
inc
jecxz
cmc
sub
pusha
aaa
push
xchg
test
dec
add
(bad)
jmp
lds
or
xchg
add
cmp
(bad)
mov
outs
movs
sub
aaa
inc
je
daa
mov
les
jecxz
pop
push
lock
pop
dec
sbb
test
movs
adc
(bad)
(bad)
(bad)
jmp
add
push
inc
inc
loopne
outs
outs
jg
nop
mov
or
add
adc
(bad)
(bad)
(bad)
call
je
dec
sub
imul
cwde
(bad)
and
outs
push
jb
std
cmp
(bad)
dec
(bad)
test
add
adc
mov
leave
(bad)
(bad)
dec
jle
push
inc
das
pop
clc
in
xor
call
sti
fiadd
shl
add
jmp
js
fistp
xchg
(bad)
scas
je
es
(bad)
(bad)
(bad)
push
jb
bound
and
clc
mov
daa
xchg
jbe
dec
ins
jmp
jbe
es
add
jo
xor
jnp
pop
jb
addr16
(bad)
push
mov
mov
fstp
jge
jg
sub
add
xor
(bad)
imul
sbb
mov
xchg
lock
jbe
xchg
mov
cmp
pop
fcom
call
ins
sbb
outs
jns
stos
das
and
push
hlt
call
dec
adc
push
xor
xchg
ss
(bad)
inc
int3
rcl
pop
loope
pop
nop
add
sbb
shr
xor
in
jmp
je
fs
cmp
push
cmp
and
sbb
dec
xor
adc
icebp
aas
push
pop
scas
inc
xor
jl
cmp
fbstp
cmc
popa
repnz
jns
adc
(bad)
(bad)
fnsave
push
stos
sub
addr16
stos
mov
popa
pop
cld
(bad)
(bad)
jmp
mov
pop
or
ds
or
(bad)
inc
loop
and
mov
mov
dec
(bad)
jg
inc
cwde
dec
mov
and
movs
aad
(bad)
(bad)
(bad)
call
add
lahf
add
sbb
cmp
nop
cmps
and
jmp
cmp
jle
aaa
repz
mov
cld
inc
xchg
and
ret
adc
pop
and
mov
(bad)
xor
push
pop
loopne
dec
jnp
jb
inc
or
aam
xor
scas
outs
icebp
mov
(bad)
(bad)
inc
cmps
adc
pop
sub
test
jno
mov
pop
ficomp
rcl
sub
and
lock
mov
enter
fwait
pop
xchg
(bad)
jmp
jb
xor
adc
push
or
xchg
or
lahf
add
(bad)
jmp
mov
xor
ins
inc
add
aad
aam
(bad)
rol
jmp
mov
fcomp
mov
sub
call
imul
adc
popa
aam
xchg
cmp
ds
test
icebp
pop
mov
inc
xlat
aaa
xor
imul
pusha
sbb
mov
inc
loope
(bad)
(bad)
inc
inc
rol
mov
shr
das
loopne
imul
inc
dec
jle
es
pop
and
clc
call
sub
sbb
xor
mov
icebp
push
ror
mov
jb
or
inc
fdivr
sbb
or
stos
add
mov
push
rol
(bad)
(bad)
in
(bad)
cmp
retf
aas
sbb
pop
xor
adc
mov
sbb
add
ins
ror
add
sub
or
outs
es
jmp
jle
or
push
ins
ret
push
mov
add
sbb
push
icebp
pop
fdiv
cmps
add
out
data16
fcomp
adc
outs
and
pop
cld
add
adc
gs
push
or
cmc
or
push
ss
cmps
or
lods
or
outs
xor
or
sbb
dec
sti
mov
ins
jge
sahf
adc
(bad)
(bad)
call
fild
cmp
inc
sub
pop
sbb
adc
ja
jg
call
sbb
dec
movs
repnz
adc
adc
mov
sbb
inc
sub
sbb
sbb
sub
jmp
addr16
sahf
test
pop
ret
(bad)
dec
cmp
xor
arpl
bound
test
rol
pop
cld
das
or
sbb
push
hlt
inc
hlt
sub
sbb
add
or
cmp
push
cs
or
xchg
pushf
mov
push
call
das
or
jle
or
mov
mov
xchg
jns
in
add
movs
nop
or
inc
pop
add
(bad)
jg
add
push
adc
inc
in
mov
and
add
xchg
adc
add
stc
jmp
iret
adc
daa
push
sbb
jns
fwait
sbb
jmp
pop
add
push
mov
iret
fnstsw
nop
or
mov
test
aas
pop
sub
xchg
fneni(8087
pop
xchg
pop
pop
add
into
repz
mov
mov
sbb
or
or
fist
loopne
nop
pop
xlat
jnp
dec
mov
outs
xor
imul
cld
add
inc
jo
leave
pop
mov
sti
push
push
jmp
dec
sbb
es
jo
sub
cs
nop
retf
xor
jmp
push
les
adc
dec
jmp
cmps
push
or
(bad)
mov
xlat
fdivrp
push
or
sbb
ss
cmp
inc
push
pusha
outs
jl
loopne
xor
das
xchg
hlt
ror
jae
jne
jns
push
imul
(bad)
or
push
fisttp
or
sbb
dec
jl
xor
ud2
rcl
push
adc
pop
inc
aas
jo
cld
(bad)
in
cmps
push
adc
push
and
mov
inc
out
or
(bad)
push
xor
cdq
(bad)
mov
cmp
cdq
nop
mov
pop
lock
popa
jb
push
clc
(bad)
jg
out
lea
(bad)
loope
lock
loop
or
add
es
or
adc
sbb
xor
mov
sub
scas
mov
xor
and
xchg
jmp
adc
push
enter
pop
movs
pop
xor
sbb
adc
push
aas
mov
ror
add
adc
pop
or
out
mov
or
imul
adc
not
sbb
fs
add
outs
cmp
sar
sbb
push
scas
add
fbld
in
(bad)
(bad)
call
jns
or
or
or
push
xchg
mov
scas
cwde
inc
stos
jp
iret
or
out
clc
jmp
out
or
pop
push
adc
sbb
xor
inc
xchg
movs
xor
loop
enter
adc
or
loop
arpl
bound
aaa
push
and
add
jg
sar
daa
jl
stos
cmp
or
add
jbe
xchg
or
dec
cs
repz
add
jno
(bad)
cmp
repz
adc
neg
fdivr
xchg
setbe
(bad)
cld
adc
(bad)
std
das
inc
push
bound
adc
xchg
cmps
mov
loop
fldl2e
clc
sub
aad
or
cmps
add
jg
ss
call
or
ins
fwait
mov
(bad)
(bad)
jmp
ins
(bad)
mov
repz
jb
adc
adc
cs
or
mov
sbb
xchg
mov
sbb
out
(bad)
dec
push
or
cmovnp
xchg
push
sub
sub
retf
adc
adc
in
(bad)
cld
repz
adc
mov
cs
dec
sbb
sbb
adc
push
sbb
xor
movs
pop
sbb
jle
inc
popa
pop
bound
and
fs
and
jg
call
and
push
pop
(bad)
mov
or
retf
ret
mov
xchg
lods
add
nop
pop
or
push
mov
mov
call
sar
jecxz
inc
jns
sahf
sbb
fadd
retf
ret
(bad)
push
xchg
adc
mov
movs
inc
xor
mov
popa
jle
outs
xchg
add
imul
push
(bad)
push
mov
and
xchg
rol
mov
and
ja
dec
dec
push
dec
jge
add
jns
xchg
mov
push
ret
out
mov
in
mov
or
mov
jo
(bad)
call
daa
xor
jno
cwde
retf
neg
xor
mov
pop
fmulp
(bad)
(bad)
(bad)
jmp
jmp
lods
test
scas
sbb
add
mov
ja
mov
pop
or
add
push
clc
sar
sbb
je
adc
push
jns
ins
mov
(bad)
(bad)
jmp
or
imul
xor
rcl
cmp
add
sub
lea
cdq
(bad)
mov
pop
and
or
rcr
adc
push
add
push
mov
xlat
or
(bad)
(bad)
dec
cdq
ret
shl
mov
cmp
or
sub
adc
jnp
daa
mov
pop
dec
lods
(bad)
(bad)
jmp
pusha
aad
push
dec
pushf
clc
mov
push
xchg
or
jo
cmp
(bad)
jg
mov
pop
xor
jne
ins
ss
(bad)
mov
ja
dec
xchg
or
pop
fcomi
fwait
loope
mov
std
(bad)
out
xchg
shl
jbe
inc
add
pop
fbstp
fadd
fs
sub
(bad)
dec
out
dec
or
add
push
xchg
xchg
jb
pop
cmc
dec
shl
pop
fisubr
adc
push
imul
imul
(bad)
dec
push
ins
add
imul
or
jne
xchg
fcom
mov
sar
mov
lods
add
inc
(bad)
ins
push
sbb
lods
add
adc
fdivr
imul
xlat
mov
lods
xchg
and
js
xchg
xor
add
(bad)
push
inc
dec
jae
add
push
adc
or
and
push
gs
cmp
push
jae
pop
adc
aaa
pusha
add
dec
or
(bad)
jmp
add
aam
out
pop
push
mov
arpl
pop
js
arpl
aam
pop
fdiv
jb
sbb
shl
mov
pop
add
data16
cmp
clc
xor
xor
sbb
bound
sub
mov
addr16
sbb
mov
pop
adc
jg
pusha
sub
rol
jbe
int3
fs
inc
mov
and
(bad)
xchg
jmp
and
or
cdq
cmp
arpl
inc
stos
sbb
aaa
cld
pop
mov
xchg
rol
inc
call
inc
xchg
jno
cs
shl
in
adc
sbb
fild
cmp
lock
and
xchg
xor
sub
mov
dec
push
and
out
clc
call
jle
das
int
sub
cmp
jno
jge
in
out
xchg
jo
hlt
cmps
(bad)
in
xlat
movs
jecxz
iret
sub
cs
mov
push
(bad)
mov
pushf
pushf
mov
xchg
bnd
sub
lds
inc
mov
sbb
stc
pop
les
and
pop
mov
retf
cld
(bad)
adc
mov
(bad)
jl
and
in
shl
loope
adc
sbb
stos
and
fldenv
aaa
cmps
pushf
push
mov
mov
daa
lock
movs
(bad)
(bad)
jg
push
or
ret
cdq
dec
mov
les
sub
mov
inc
icebp
(bad)
(bad)
(bad)
jle
dec
push
or
cmp
(bad)
push
repnz
or
stos
fld
sub
test
dec
dec
inc
pusha
inc
jmp
rol
test
out
or
mov
gs
sar
(bad)
jmp
movs
sub
sbb
or
jecxz
xor
pop
jle
and
push
into
xchg
cmc
inc
jnp
cmps
and
inc
or
and
adc
out
cmp
mov
and
inc
or
sub
push
(bad)
(bad)
push
fsubr
test
out
push
dec
lods
or
pop
popf
add
(bad)
(bad)
mov
test
out
aaa
mov
in
sub
arpl
aad
add
clc
(bad)
push
mov
cmp
mov
adc
retf
fcom
xchg
pop
mov
(bad)
(bad)
dec
sub
es
adc
mov
sbb
rcr
add
push
mov
inc
shl
(bad)
jmp
pusha
adc
sub
mov
mov
push
inc
xor
add
dec
or
push
mov
sahf
test
sahf
mov
or
std
aam
es
mov
mov
dec
adc
sbb
or
mov
sub
cmp
inc
sbb
mov
mov
dec
add
hlt
xor
(bad)
(bad)
(bad)
inc
jg
inc
ret
xor
xchg
and
in
loope
xlat
add
lahf
ins
lods
inc
sbb
mov
dec
inc
add
pusha
and
(bad)
mov
add
pusha
xchg
repz
aam
mov
(bad)
(bad)
jmp
popf
lahf
outs
leave
or
cs
mov
pop
adc
mov
call
pop
int3
or
bound
mov
bound
ror
int
js
jne
ins
cld
pop
std
inc
jle
imul
xchg
retf
retf
jg
call
xchg
and
xchg
push
add
inc
sub
xchg
mov
popa
dec
aam
add
push
and
ds
or
popf
push
mov
ret
clc
ds
push
or
fs
xlat
hlt
adc
nop
(bad)
(bad)
mov
je
(bad)
and
aas
(bad)
out
popa
adc
or
inc
add
push
xor
cmp
add
adc
mov
add
sahf
mov
inc
aam
xchg
pushf
or
pop
inc
inc
lock
(bad)
dec
inc
adc
sub
mov
ror
mov
mov
es
jmp
pop
nop
xor
int3
movs
test
cld
cmps
test
xchg
popa
nop
xor
(bad)
aaa
std
pusha
or
in
enter
aaa
push
ins
dec
cmps
(bad)
pop
rcr
je
(bad)
jnp
nop
ins
mov
call
pop
sar
inc
add
mov
idiv
fsubr
ficom
cmp
(bad)
xor
push
stos
int3
lock
cmps
repz
aaa
push
cwde
add
loop
mov
mov
outs
fwait
lock
push
adc
lea
(bad)
rcl
sbb
movs
sbb
call
adc
in
rol
pop
inc
sar
add
ss
ror
mov
jne
inc
mov
std
mov
push
fcmovb
stos
mov
cmp
sub
call
std
(bad)
(bad)
jmp
and
mov
or
test
push
adc
adc
mov
mov
push
dec
and
ins
sub
dec
or
sti
pop
sub
xchg
aaa
clc
fild
jmp
or
pop
mov
push
xor
dec
(bad)
jmp
push
inc
jmp
cmps
rcr
and
and
xchg
or
inc
inc
add
inc
inc
push
out
jge
cs
push
outs
(bad)
in
(bad)
mov
sbb
or
xlat
xlat
ror
stos
loopne
gs
jno
lock
jbe
or
push
jg
add
(bad)
jg
in
ds
rcl
gs
mov
movs
add
mov
movs
dec
call
adc
dec
pop
sub
jmp
jo
pop
fild
test
(bad)
(bad)
(bad)
(bad)
call
and
xchg
cmp
into
sub
jne
or
test
inc
ja
pop
jg
xchg
mov
sub
mov
ins
lds
push
loope
dec
sub
dec
call
xlat
cdq
mov
(bad)
dec
and
sub
sti
add
movs
sub
inc
xchg
jns
inc
ins
mov
test
movs
pop
cmc
(bad)
inc
pop
and
pop
ror
pop
clc
xchg
cdq
shl
sub
div
jbe
pop
push
sub
mov
mov
push
xchg
adc
test
(bad)
sbb
xor
push
cmp
sub
(bad)
(bad)
aas
add
or
mov
jnp
enter
ja
(bad)
(bad)
push
xor
js
push
ja
jbe
pop
(bad)
xchg
(bad)
or
call
xchg
inc
jo
and
dec
adc
mov
(bad)
call
sub
inc
jo
adc
das
push
adc
nop
js
jno
dec
cld
(bad)
jmp
inc
(bad)
and
js
xor
(bad)
jg
dec
test
jle
sbb
sub
xchg
bound
repz
shl
clc
cs
dec
dec
push
aaa
test
pop
jmp
inc
das
jecxz
xchg
mov
js
shl
ret
add
inc
fidiv
scas
into
js
push
cmp
(bad)
(bad)
(bad)
mov
shl
fs
cmp
xchg
inc
ds
jmp
cmp
jmp
jne
and
adc
xor
dec
clc
call
jmp
ins
cs
fld
int3
pop
pop
xor
xor
adc
jb
mov
mov
outs
js
and
inc
rol
add
stos
rol
mov
cmp
jl
mov
cmp
nop
xor
add
rol
inc
sbb
xor
test
push
xor
adc
mov
out
ret
sub
(bad)
(bad)
fst
loopne
shl
leave
sub
xor
sbb
adc
ja
test
xor
xchg
or
lahf
jne
inc
ret
inc
or
scas
or
in
cmp
mov
(bad)
sbb
mov
test
scas
cmp
icebp
test
jg
pop
pop
(bad)
(bad)
inc
xchg
sbb
and
lahf
sbb
adc
cld
pop
fdiv
sbb
movs
outs
(bad)
(bad)
jmp
inc
add
shr
push
cmp
push
mov
pop
adc
xlat
(bad)
(bad)
(bad)
call
inc
movs
push
js
add
rcl
cmc
xor
cs
fs
or
push
or
push
ins
adc
les
(bad)
ja
retf
int
(bad)
ins
push
dec
ins
pop
ficom
mov
imul
stos
jns
add
xor
add
sub
es
std
pop
cmp
movs
push
sbb
cmp
call
call
lock
(bad)
mov
cmps
adc
rcl
dec
inc
cli
bound
push
in
mov
add
and
(bad)
push
je
xchg
popa
sbb
ins
jo
inc
or
xor
popf
xchg
sbb
dec
mov
fstp
mov
mov
push
popa
sysexit
(bad)
(bad)
(bad)
(bad)
call
test
lock
stos
ret
sub
mov
movs
push
dec
lock
icebp
ss
(bad)
dec
cmp
inc
mov
add
xor
sbb
(bad)
adc
dec
call
(bad)
(bad)
mov
call
sbb
jnp
adc
pop
cmps
or
and
mov
sbb
inc
jl
push
push
mov
xlat
cmp
jmp
push
ret
adc
jo
(bad)
(bad)
inc
cld
push
ret
and
cmp
aaa
and
cmp
rcl
jbe
aaa
cmps
nop
les
int
push
add
cmc
call
pop
push
push
mov
(bad)
call
xchg
dec
inc
xor
sar
movs
popf
mov
or
js
mov
adc
dec
cld
rcr
fmul
cs
(bad)
push
cdq
xchg
jo
or
sub
in
dec
push
into
dec
cmp
inc
test
pushf
jp
ins
out
shl
xor
and
dec
inc
stos
aaa
test
dec
(bad)
(bad)
fbstp
test
xor
sub
dec
popf
(bad)
arpl
mov
cdq
lahf
mov
stos
scas
and
inc
mov
lds
push
add
je
inc
rcl
retf
add
dec
(bad)
call
dec
cmp
jmp
fistp
pop
push
adc
push
loopne
ret
stos
inc
pusha
add
inc
sub
stos
or
scas
les
or
fild
cmp
daa
jmp
push
lock
jecxz
or
(bad)
cmp
jno
inc
fdiv
jmp
xchg
fwait
cdq
xchg
push
mov
sub
rol
aas
sub
push
add
lods
sub
(bad)
out
xchg
lock
push
or
add
push
adc
call
call
fwait
rcl
iret
mov
rcl
inc
mov
int
out
xchg
dec
iret
inc
jge
jmp
mov
(bad)
jmp
pop
(bad)
stc
retf
sbb
inc
pop
ret
stc
pop
pop
hlt
adc
xor
retf
xor
inc
adc
hlt
call
xor
push
(bad)
adc
popa
add
inc
clc
add
cmps
fisttp
mov
pop
inc
cmp
cmp
icebp
movs
adc
das
and
inc
clc
or
lods
(bad)
fisttp
add
(bad)
repz
or
mov
outs
add
jg
call
icebp
push
xor
js
call
in
sbb
add
std
(bad)
mov
sahf
(bad)
cmp
imul
leave
push
xchg
xor
cmp
mov
pop
lds
inc
sub
pusha
leave
(bad)
fdivr
(bad)
(bad)
(bad)
call
dec
cs
test
js
push
mov
lock
jmp
adc
or
jg
and
jmp
xor
les
(bad)
jg
mov
xor
mov
pop
pop
push
and
das
mov
cmp
(bad)
fiadd
sub
pop
add
pop
mov
sbb
in
cmp
push
lock
mov
mov
(bad)
jg
leave
mov
mov
push
push
cld
call
mov
and
and
mov
inc
pop
lock
(bad)
dec
ins
xchg
adc
xor
push
rcl
sbb
mov
fisttp
pop
std
xchg
lods
fsub
repnz
aas
imul
loopne
xchg
adc
cmps
sar
(bad)
jmp
(bad)
je
cmp
leave
dec
push
cdq
js
rol
dec
add
hlt
sti
loopne
sar
clc
jle
inc
add
clc
or
(bad)
(bad)
call
or
std
pop
sub
icebp
shl
movs
mov
adc
ficomp
rcl
ficom
inc
rcr
jmp
movs
pop
pop
or
push
inc
rcl
inc
inc
push
mov
inc
pop
xchg
xor
mov
fs
(bad)
jmp
mov
adc
xor
cwde
push
pop
add
inc
jmp
leave
add
inc
outs
add
push
xchg
and
fld
jle
(bad)
jmp
fstp
pop
mov
jl
(bad)
(bad)
mov
cmp
jne
sbb
push
inc
cli
mov
inc
loopne
or
pop
and
push
adc
pop
loope
cmp
fwait
shr
call
adc
cwde
inc
pop
mov
test
jne
imul
sub
add
mov
sub
add
test
jb
cdq
sub
jmp
adc
pop
push
stos
clc
inc
loope
pusha
inc
sti
or
cmp
mov
xor
dec
mov
inc
dec
inc
test
lods
mov
add
pop
jg
sub
or
sbb
jmp
fs
pop
cmp
xor
inc
fild
xor
dec
iret
int3
mov
jnp
xchg
xor
or
push
push
push
(bad)
das
sbb
sar
shl
or
adc
rcl
sti
cmp
(bad)
(bad)
push
sbb
xor
jle
imul
(bad)
jns
push
adc
fimul
repnz
jg
pop
dec
pop
jb
aam
addr16
(bad)
push
shl
xchg
inc
dec
cmp
adc
in
pop
dec
pop
outs
fadd
jg
(bad)
pop
bound
xlat
rol
xchg
add
in
(bad)
call
and
pop
test
lahf
(bad)
cs
add
jmp
es
add
cmp
dec
jl
adc
outs
sub
push
mov
ror
hlt
jmp
out
jp
test
movs
out
les
xor
or
fdivr
push
pop
pop
cld
(bad)
mov
aam
sbb
sbb
inc
or
pusha
jmp
adc
and
jg
push
or
leave
clc
dec
hlt
inc
jmp
(bad)
(bad)
inc
loopne
and
mov
dec
push
adc
cmps
sbb
(bad)
pop
push
repnz
sub
xchg
or
es
call
fisub
dec
rol
jp
pushf
xchg
hlt
and
inc
(bad)
(bad)
(bad)
mov
adc
movs
aad
sar
adc
pop
fbstp
push
push
jbe
sub
sbb
call
or
(bad)
call
call
and
inc
test
lea
ins
or
outs
cli
inc
push
dec
pusha
iret
push
cmps
mov
(bad)
jo
pop
sbb
sbb
adc
outs
mov
lock
sbb
fist
loop
(bad)
in
imul
lea
mov
les
cmps
inc
and
push
jmp
add
xor
jb
aas
fs
push
cmp
sbb
cmp
stc
fdivrp
pop
cld
jmp
movs
add
xor
scas
xlat
sbb
ret
and
inc
xor
jmp
bound
adc
fmul
nop
in
dec
in
mov
inc
adc
inc
ret
pop
in
je
loope
cmc
(bad)
(bad)
call
sub
mov
cmp
dec
pop
dec
addr16
(bad)
fisttp
push
dec
outs
cmp
or
jecxz
sar
mov
daa
lock
cs
scas
cli
ja
xchg
push
mov
fprem1
pop
or
aaa
enter
add
fisubr
or
xchg
sub
jmp
nop
jle
sbb
fadd
lock
dec
jne
nop
pop
jg
dec
aad
add
dec
cmp
cmp
mov
out
(bad)
mov
xchg
adc
sub
push
and
nop
lock
out
mov
pop
push
adc
(bad)
jmp
push
mov
les
(bad)
push
adc
test
popa
mov
shl
lock
sbb
ret
sbb
mov
mov
hlt
cli
and
test
jge
aad
mov
ficomp
(bad)
das
clc
push
and
inc
fadd
mov
xor
push
std
dec
dec
pop
add
jne
jl
jl
das
mov
jmp
enter
dec
clc
add
mul
(bad)
mov
jecxz
jb
ss
out
lods
clc
test
xor
sub
pop
cmp
cmp
jg
jmp
dec
fisub
cmc
jns
cmp
call
(bad)
(bad)
(bad)
(bad)
mov
in
lods
inc
pop
cmp
xor
stos
pop
mov
adc
mov
jo
ror
movs
adc
leave
not
pop
inc
jmp
movs
mov
mov
and
add
jb
imul
sti
mov
repnz
mov
rcl
sbb
or
test
imul
adc
dec
sub
adc
xchg
(bad)
(bad)
(bad)
dec
dec
sbb
mov
add
and
jp
scas
jns
sbb
add
cmps
and
pusha
mov
shr
aas
inc
out
xchg
cs
adc
icebp
inc
(bad)
mov
repnz
push
mov
pop
add
mov
mov
sti
inc
xor
push
repz
xchg
icebp
dec
xor
push
pop
jmp
dec
repnz
icebp
mov
jecxz
or
inc
mov
mov
add
repz
(bad)
jg
mov
and
sbb
fs
data16
mov
push
mov
push
and
add
and
jae
xchg
dec
jo
adc
adc
xchg
arpl
push
mov
sub
(bad)
jg
push
hlt
cmps
mov
sub
ins
add
pop
and
jg
mov
sbb
mov
movs
lock
fwait
inc
jge
mov
mov
or
adc
sar
inc
stc
adc
popa
mov
cs
mov
pop
sub
retf
call
push
lods
push
dec
fst
xchg
and
das
fst
(bad)
(bad)
fild
pusha
call
ror
or
cmp
push
sbb
push
push
shr
pop
push
mov
xlat
out
dec
mov
dec
xchg
xor
popf
mov
cld
dec
ret
and
xchg
and
push
add
dec
data16
clc
jg
mov
(bad)
enter
add
pop
push
(bad)
push
sar
scas
or
cdq
dec
inc
jns
jge
sub
dec
(bad)
jmp
shr
inc
pop
dec
popf
pop
stos
push
or
icebp
stos
add
add
div
clc
(bad)
mov
call
sub
mov
sbb
push
movs
and
call
or
jg
adc
ret
shl
push
lock
add
lahf
add
in
call
push
inc
push
loopne
sbb
inc
gs
repnz
push
sbb
clc
push
rcr
mov
fist
(bad)
mov
shl
or
andnps
(bad)
(bad)
mov
sub
xor
data16
push
hlt
test
cs
xor
sar
rcl
sub
add
xchg
lahf
scas
inc
push
je
add
ret
push
cli
nop
or
(bad)
(bad)
(bad)
dec
rcr
jmp
adc
lods
pop
mov
retf
bound
push
in
push
and
push
dec
xchg
cmps
repnz
(bad)
mov
std
into
fwait
jno
push
imul
ds
sub
sbb
test
or
inc
clc
jo
arpl
adc
mov
call
add
call
sbb
cmp
inc
pop
jmp
(bad)
(bad)
push
cs
sub
pop
pop
dec
adc
add
adc
xbegin
jecxz
(bad)
jmp
add
mov
add
gs
push
push
(bad)
(bad)
(bad)
jmp
outs
retf
in
dec
lock
add
cmp
pop
xlat
ret
push
stos
cmp
in
pop
add
(bad)
mov
js
pop
lea
mov
dec
or
xlat
mov
add
(bad)
out
sub
sbb
dec
inc
cmp
and
push
(bad)
mov
call
mov
int3
nop
es
test
xor
(bad)
(bad)
(bad)
jmp
pop
in
nop
shl
or
or
push
pop
push
add
jb
push
push
sub
(bad)
(bad)
(bad)
push
sub
ret
cmps
dec
inc
xor
adc
and
adc
inc
pop
fmul
mov
push
mov
(bad)
call
rcr
repnz
movs
aad
enter
mov
pop
or
loope
mov
xlat
mov
out
out
push
pop
or
inc
jo
xor
retf
xor
cmp
iret
pop
sub
adc
add
jne
cmps
arpl
jae
pop
rol
lahf
out
(bad)
(bad)
jmp
push
dec
pop
pop
sbb
xchg
inc
jl
sub
or
mov
fs
pop
cmp
mov
cmp
or
cmp
mov
jbe
adc
(bad)
(bad)
(bad)
jg
push
sbb
pop
jnp
jecxz
and
xchg
mov
xchg
(bad)
pushf
ins
lahf
jne
ret
(bad)
(bad)
(bad)
jmp
and
sti
je
mov
xchg
push
rol
jl
in
adc
or
daa
imul
mov
push
xchg
fstp
(bad)
(bad)
jg
or
xchg
nop
pop
mov
jmp
jae
xchg
test
and
(bad)
(bad)
in
adc
data16
pop
loop
add
jmp
pushf
jmp
(bad)
(bad)
call
adc
mov
test
push
mov
inc
out
clc
(bad)
jmp
xchg
push
xchg
pop
hlt
push
jmp
push
sbb
inc
inc
outs
in
pusha
add
mov
mov
das
sbb
movs
jg
pop
sub
pop
popf
scas
bound
add
enter
bswap
fbld
adc
lods
add
iret
icebp
pop
push
mov
and
mov
sbb
push
mov
push
dec
mov
jne
push
xor
rol
pop
clc
pop
loopne
mov
adc
xchg
add
mov
push
pop
popf
push
fcomp
(bad)
inc
mov
fsub
adc
inc
std
(bad)
in
dec
ret
cmp
or
or
push
mov
das
sar
push
outs
shl
sbb
(bad)
jmp
mov
and
push
test
cmp
jo
stos
call
xchg
mov
outs
(bad)
jmp
push
pop
dec
cmps
jecxz
jb
movs
xchg
sahf
mov
lods
or
push
(bad)
stos
(bad)
push
mov
rol
cs
sbb
adc
mov
js
mov
jns
and
sbb
cmp
out
sahf
xlat
jg
and
(bad)
or
or
xor
pop
and
test
mov
(bad)
(bad)
(bad)
(bad)
stos
xor
gs
xchg
test
stos
mov
sahf
ss
mov
mov
(bad)
call
xor
test
xor
mov
xor
sub
dec
pop
add
dec
cdq
ins
loope
dec
push
cmp
popa
fnstsw
mov
enter
repnz
add
call
inc
inc
inc
xor
add
mov
loope
scas
clc
or
sub
pop
add
fnstenv
xor
cmc
or
popa
fst
(bad)
inc
lahf
sbb
call
xchg
(bad)
(bad)
mov
je
mov
mov
cdq
repz
imul
or
(bad)
(bad)
inc
test
and
cwde
adc
rcr
movs
mov
ins
xor
ja
jae
ja
lods
adc
fbld
push
movs
addr16
nop
xor
push
and
push
aas
jmp
add
call
hlt
or
mov
jno
inc
mov
(bad)
(bad)
call
pop
cmp
fsubr
dec
mov
addr16
inc
cmp
lock
cs
dec
ja
push
xor
pop
(bad)
sbb
(bad)
(bad)
mov
push
sbb
nop
sub
and
(bad)
call
(bad)
aam
jmp
dec
aas
scas
mov
adc
inc
je
imul
(bad)
(bad)
(bad)
mov
mov
js
push
out
or
enter
cmp
clc
pop
(bad)
les
add
cld
outs
jb
and
sub
cdq
sub
jne
ret
nop
(bad)
(bad)
mov
adc
or
das
add
cmp
rol
iret
mov
push
addr16
fcomip
dec
addr16
or
ja
ins
retf
hlt
fs
lods
idiv
xor
sbb
xor
inc
add
dec
jp
pop
dec
cmps
(bad)
mov
mov
and
add
xor
jmp
mov
lock
and
cmp
xor
ret
xor
arpl
enter
fidiv
inc
cwde
mov
mov
(bad)
fcomip
inc
dec
push
shl
imul
bound
cmp
sbb
rcl
rcr
call
adc
add
test
sbb
popf
call
push
jge
xchg
or
stos
pop
retf
push
mov
mov
(bad)
mov
(bad)
(bad)
(bad)
jmp
pop
dec
test
and
cmp
aam
ins
cmp
in
shl
push
push
push
xor
call
xor
jns
nop
lods
jnp
add
es
out
dec
xor
jg
in
cmp
add
add
sub
movs
and
aas
les
adc
loope
in
mov
sbb
call
out
lods
pop
pusha
push
adc
(bad)
(bad)
call
cdq
fiadd
or
test
mov
lds
push
ins
or
add
adc
cs
sbb
adc
lahf
mov
mov
das
clc
jmp
cli
inc
sbb
add
pop
adc
das
xchg
enter
pushf
sub
idiv
or
outs
inc
push
xor
out
ds
lea
cmp
mov
cmp
(bad)
(bad)
jg
les
jle
lds
inc
gs
imul
ins
adc
cmp
je
int
rcr
js
pop
cmp
(bad)
(bad)
dec
lods
jl
ins
les
cmps
xchg
outs
and
push
cmp
xchg
test
or
sbb
sbb
cmps
dec
xchg
cs
fidiv
add
das
cmp
or
sbb
sub
dec
dec
cmp
popf
mov
shl
rcl
pop
ja
dec
mov
sar
daa
ret
lods
sbb
xor
adc
clc
(bad)
fisttp
imul
gs
sub
(bad)
(bad)
jmp
sub
pop
jno
pop
mov
(bad)
enter
add
rcl
pop
xchg
aas
mov
aaa
call
mul
inc
push
int3
and
(bad)
(bad)
inc
pop
imul
iret
add
repnz
aas
add
jns
mov
cs
clc
or
jle
test
and
pop
pop
or
add
(bad)
(bad)
in
mov
out
pop
or
out
adc
loopne
je
lods
xlat
(bad)
jg
mov
ins
jo
mov
or
jo
mov
std
jg
shr
popf
icebp
cmp
ror
mov
ret
arpl
test
clc
(bad)
push
in
xor
retf
bound
test
or
outs
stos
fcomp
add
cmc
mov
cmp
(bad)
(bad)
push
in
leave
pop
lods
cli
and
mov
je
and
sub
sub
ret
inc
add
lds
push
clc
pop
lock
and
test
inc
push
mov
mov
mov
sbb
pusha
push
je
pop
push
push
mov
je
cmps
mov
pop
jl
jl
mov
pusha
sub
das
adc
inc
jne
push
fwait
popf
and
call
in
jns
jmp
pop
xor
inc
in
inc
adc
(bad)
jg
jo
pushw
rol
test
add
inc
fnstenv
push
hlt
jge
or
jmp
fist
xor
cli
sub
movs
ror
(bad)
mov
jmp
daa
cmp
aad
fwait
add
xor
pop
xor
in
mov
cld
(bad)
dec
stos
lods
jno
and
jns
dec
daa
dec
sub
xor
mov
or
jo
icebp
call
jb
jbe
cmovb
pop
or
push
pop
and
repz
mov
adc
mov
inc
jb
push
push
mov
mov
iret
xchg
inc
inc
(bad)
(bad)
(bad)
call
pop
mov
daa
pop
push
mov
inc
pop
jge
pop
add
test
add
xlat
sbb
inc
loop
and
add
je
scas
pusha
mov
cmp
jg
mov
rol
mov
(bad)
(bad)
(bad)
call
adc
leave
es
jmp
jg
test
xchg
jno
mov
add
mov
(bad)
cmp
jae
dec
scas
push
dec
add
(bad)
(bad)
inc
out
fild
push
loope
mov
and
mov
cvtdq2ps
jg
inc
leave
mov
sub
(bad)
jle
addr16
push
and
int3
pushf
cli
ins
push
cmp
(bad)
call
(bad)
jb
daa
ficom
push
je
es
jae
pop
sbb
dec
cmps
test
dec
jb
cmp
loop
push
cdq
jnp
sub
and
push
push
dec
les
movs
or
and
xor
loop
sub
mov
jbe
push
(bad)
ja
aaa
hlt
lods
ret
jbe
push
pop
test
sub
in
pop
dec
pushw
cmc
(bad)
(bad)
dec
push
outs
sbb
adc
sbb
xchg
(bad)
fist
mov
mov
add
adc
push
sub
(bad)
(bad)
dec
sub
xor
mov
sbb
mov
mov
cmp
and
dec
adc
loop
call
imul
pop
mov
add
test
arpl
add
je
(bad)
(bad)
(bad)
call
jbe
xchg
lea
je
adc
pusha
inc
and
push
enter
xor
sar
(bad)
jmp
inc
add
(bad)
push
or
int
add
mov
sub
jmp
pusha
sahf
push
pop
cmps
jmp
lock
or
inc
sub
and
add
jmp
into
xchg
ret
mov
pop
xchg
or
dec
lods
add
rcr
push
pop
and
je
(bad)
push
push
call
push
sbb
jbe
sbb
aaa
sbb
scas
or
(bad)
(bad)
dec
mov
dec
loopne
sbb
es
or
jnp
icebp
sub
cmp
or
fild
pop
enter
(bad)
(bad)
(bad)
fbstp
fmul
enter
lock
inc
mov
sbb
cmp
and
(bad)
cmp
clc
or
enter
pop
sbb
push
enter
sbb
add
cli
jl
add
inc
and
add
in
rol
je
jne
ss
(bad)
adc
pop
jnp
les
add
inc
fs
inc
mov
stc
dec
lock
jmp
loop
inc
(bad)
(bad)
(bad)
dec
ja
jo
inc
popa
cs
(bad)
pop
mov
ja
or
dec
and
ins
push
(bad)
(bad)
(bad)
jmp
js
sub
push
mov
js
clc
cmp
jnp
or
clc
push
jns
(bad)
repnz
clc
and
inc
or
ins
jecxz
hlt
sbb
bound
or
je
jp
test
(bad)
dec
xor
add
or
cmps
hlt
mov
repz
mov
push
(bad)
(bad)
(bad)
mov
test
cmp
push
(bad)
inc
inc
cli
in
scas
pop
loope
rcr
and
pop
mov
cmp
or
mov
(bad)
xchg
lock
aad
pop
and
jle
enter
(bad)
imul
call
stc
shl
cmp
fwait
cs
sub
cmp
(bad)
(bad)
inc
popf
push
xchg
ret
jge
or
push
pop
cmp
in
data16
or
inc
xlat
cs
lock
sti
loopne
cmp
cld
test
test
enter
adc
push
push
mov
push
add
(bad)
(bad)
call
les
ins
or
sub
mov
ins
pop
das
dec
cmovne
(bad)
jmp
ror
dec
outs
bound
xor
mov
sar
std
call
cmp
xor
jge
and
ins
retf
and
adc
inc
add
not
adc
or
jmp
pop
pushaw
test
add
xor
inc
mov
and
and
push
cld
es
push
(bad)
jg
inc
test
mov
lahf
jnp
bound
or
push
and
icebp
adc
sub
and
mov
and
sub
sbb
mov
dec
xchg
jl
push
iret
clc
jg
inc
mov
dec
nop
xchg
xor
(bad)
mov
push
popa
pop
push
popa
or
cwde
push
(bad)
jmp
(bad)
xchg
dec
rcr
cmps
sub
out
ins
dec
mov
inc
mov
dec
jecxz
push
or
push
or
or
repnz
add
sbb
(bad)
dec
arpl
lahf
jge
adc
xchg
(bad)
(bad)
push
cwde
add
xchg
jmp
or
add
jge
popw
or
dec
sub
lock
push
scas
mov
or
add
mov
xchg
push
or
adc
mov
jno
pop
retf
sbb
sbb
fnstsw
adc
mov
sahf
jle
push
or
(bad)
jg
dec
in
adc
aam
hlt
xor
jle
pop
inc
(bad)
jg
hlt
loopne
sub
test
jnp
adc
push
mov
cmp
(bad)
(bad)
jmp
push
jo
ins
in
dec
jno
fs
jge
fdivr
fcmovbe
and
(bad)
push
jle
outs
ret
mov
pop
jle
or
(bad)
push
mov
mov
mov
sub
adc
or
pop
fucom
rcr
sbb
(bad)
(bad)
inc
pop
clc
stos
lock
sbb
jg
push
int3
ins
loopne
and
cmp
shl
stos
or
pop
(bad)
(bad)
call
inc
or
sub
rcl
xlat
jno
add
popa
or
adc
movs
adc
outs
test
xlat
call
mov
jg
es
aam
mov
(bad)
dec
je
je
(bad)
jmp
test
push
mov
cmp
(bad)
fcomip
pop
ret
or
mov
arpl
cmp
add
dec
adc
(bad)
(bad)
(bad)
dec
add
inc
cs
xor
jns
and
mov
(bad)
test
adc
and
fwait
loope
(bad)
(bad)
inc
adc
dec
retf
ins
in
add
add
add
lods
je
dec
movs
test
dec
sbb
mov
or
(bad)
(bad)
(bad)
cmp
sahf
lds
pop
cdq
mov
xor
adc
jo
stos
push
cdq
test
daa
dec
in
jp
mov
icebp
jl
daa
sub
mov
or
push
push
xor
(bad)
(bad)
(bad)
call
adc
push
and
inc
push
ds
inc
call
je
leave
and
clc
adc
ret
(bad)
(bad)
inc
add
inc
test
mov
pop
adc
mov
dec
sbb
dec
imul
pop
loope
push
mov
loopne
(bad)
(bad)
jmp
jo
cwde
pusha
jmp
xor
push
xchg
xchg
xchg
add
or
rcr
adc
ret
ins
and
test
cwde
jno
fmul
and
cld
push
out
cmp
mov
xor
sbb
pop
xchg
or
xchg
cwde
cmp
mov
sbb
call
and
cmp
sbb
lods
int3
and
dec
icebp
and
xchg
sub
adc
sbb
dec
lock
(bad)
(bad)
call
sbb
jge
test
test
popf
aas
icebp
xchg
mov
pushf
ret
push
jb
push
and
and
push
or
fadd
fdiv
xlat
mov
push
mov
mov
and
or
(bad)
jmp
add
inc
(bad)
sbb
and
ret
mov
shr
cs
mov
push
cs
pop
(bad)
jmp
lock
and
jb
and
mov
leave
or
xor
(bad)
(bad)
(bad)
jmp
mov
fnstcw
cmp
dec
mov
cmp
add
jecxz
sbb
cld
xchg
add
and
icebp
inc
sahf
stc
movs
pop
cmp
add
out
mov
inc
repnz
add
dec
and
pushf
cmps
ins
test
fwait
add
pop
xchg
xchg
call
mov
sbb
and
test
push
ja
in
jb
or
loopne
test
push
or
jno
inc
push
or
mov
add
in
mov
add
push
push
in
push
ins
push
or
std
cmp
out
pop
jns
or
inc
or
and
sub
in
test
fild
cmp
mov
xor
(bad)
pop
add
or
jl
nop
push
sub
mov
addr16
mov
hlt
(bad)
add
or
pusha
dec
pusha
pop
add
call
cli
mov
fwait
pop
icebp
jo
std
test
(bad)
adc
mov
ror
loop
jecxz
xor
push
call
loop
mov
mov
cli
add
push
add
xor
add
aam
push
rcr
pusha
call
add
fwait
dec
js
xor
lahf
sub
lds
test
xchg
(bad)
(bad)
(bad)
jmp
sahf
push
ss
pop
sbb
adc
adc
xchg
mov
inc
sub
pop
jg
mov
dec
(bad)
leave
les
xor
mov
mov
mov
xchg
ret
in
and
ret
mov
gs
(bad)
(bad)
inc
xor
jl
adc
ins
push
addr16
adc
gs
dec
mov
mov
and
xchg
pop
(bad)
mov
mov
(bad)
fcomip
jmp
mov
cmc
shl
cld
or
les
scas
(bad)
(bad)
js
enter
in
xchg
xor
fdiv
jae
sbb
jae
movs
jns
aam
icebp
(bad)
dec
aaa
fsub
loop
inc
sbb
in
daa
inc
xor
pop
add
popf
rcl
lods
call
xor
rcl
test
in
iret
inc
sub
jp
add
fwait
lea
adc
fwait
and
inc
movs
clc
fidivr
xor
gs
out
cmc
push
(bad)
push
xor
xor
push
sbb
enter
jnp
arpl
and
retf
js
imul
dec
gs
and
xor
shl
lock
(bad)
jns
sub
movaps
xchg
inc
test
add
and
push
je
(bad)
sub
inc
add
js
jno
xchg
(bad)
inc
jge
lds
sub
mov
cmp
gs
mov
mov
jae
pop
and
movs
or
repnz
(bad)
(bad)
inc
pop
pop
cs
(bad)
dec
xor
xchg
add
and
mov
jmp
sub
mov
xchg
in
shr
adc
outs
jecxz
(bad)
call
sti
sahf
je
popa
addr16
inc
jl
inc
scas
cmp
pushf
(bad)
sbb
int3
push
ror
mov
dec
stc
jl
jne
and
lods
or
fidiv
retf
adc
cmp
jmp
mov
push
imul
fild
nop
dec
mov
or
push
cs
lods
mov
adc
xchg
add
dec
sub
xchg
ds
test
das
aad
out
xlat
movs
push
xchg
adc
inc
outs
fimul
call
(bad)
jg
adc
lahf
jbe
into
das
repnz
inc
xchg
push
inc
adc
push
addr16
xchg
(bad)
(bad)
(bad)
jmp
mov
rol
sub
fidiv
add
or
(bad)
mov
push
fcom
out
add
xor
push
sbb
(bad)
(bad)
(bad)
inc
inc
pop
inc
je
add
mov
mov
sbb
rol
dec
sub
int3
mov
inc
cmp
adc
pop
aaa
test
sbb
hlt
ds
fcmovb
pop
fild
inc
(bad)
inc
inc
inc
punpckhbw
cld
inc
or
inc
fs
(bad)
clc
mov
repz
inc
sub
sti
shr
xor
push
dec
dec
pusha
push
fnstcw
int
dec
sub
popa
dec
and
dec
add
mov
out
sahf
inc
pop
push
(bad)
das
push
pop
clc
ds
repz
es
(bad)
(bad)
(bad)
mov
inc
jnp
cmp
push
mov
cmps
push
into
sbb
mov
dec
sbb
push
jo
(bad)
(bad)
(bad)
(bad)
inc
arpl
in
jnp
int
mov
push
mov
rcr
sbb
sbb
add
call
inc
in
jnp
call
les
inc
and
push
push
test
xchg
icebp
das
adc
test
in
cwde
(bad)
aas
movs
sbb
pop
not
and
scas
inc
pop
dec
nop
inc
jbe
add
or
ret
and
jno
mov
mov
and
jmp
jmp
lahf
mov
mov
mov
dec
sub
adc
lea
pop
dec
push
mov
mov
xchg
aaa
pop
(bad)
jg
outs
push
cmp
mov
or
adc
xchg
add
or
jo
pop
outs
push
adc
clc
mov
cmp
(bad)
dec
sub
push
ins
inc
inc
mov
sub
ins
sub
pop
dec
or
popa
shr
bound
psrlq
xchg
pop
mov
ja
sub
nop
adc
lods
add
xor
or
mov
pushaw
sbb
loopne
push
inc
or
in
js
push
(bad)
push
leave
mov
add
or
mov
ins
sbb
cmps
pop
and
sbb
mov
call
outs
call
inc
pop
cmp
dec
inc
and
mov
leave
or
addr16
pop
add
call
or
inc
retf
sub
inc
pop
inc
test
ss
rol
pop
fs
test
ins
std
das
mov
or
sub
pop
retf
inc
mov
push
(bad)
(bad)
cld
dec
cmp
adc
mov
mov
adc
retf
sub
lahf
xor
push
pop
lock
call
pop
sbb
loopne
scas
add
add
movs
add
inc
or
cmps
je
std
stos
push
sbb
call
les
(bad)
jp
cmp
es
nop
cmps
pop
(bad)
sbb
mov
loopne
xchg
mov
aad
shr
hlt
mov
ret
cmps
inc
cmp
cmp
fsub
sti
push
inc
sbb
xchg
std
out
pop
retf
sub
(bad)
cwde
and
gs
jg
and
cdq
adc
push
jge
lahf
(bad)
jmp
adc
push
cmc
(bad)
(bad)
push
or
jmp
inc
stos
pop
mov
dec
pop
test
aaa
fisub
(bad)
(bad)
out
xchg
mov
lea
hlt
movs
lds
adc
(bad)
call
in
inc
out
mov
call
ja
cmp
aad
xor
cmp
test
int
inc
dec
pushf
jp
jnp
push
repnz
add
sub
aad
mov
ret
push
dec
jns
sub
enter
(bad)
jmp
scas
xchg
popf
inc
out
mov
int3
popa
sar
push
arpl
sub
xchg
inc
and
pop
jne
cli
jae
dec
daa
dec
ror
push
je
(bad)
(bad)
(bad)
dec
ror
aam
jp
pop
fcomp
jbe
sbb
dec
mov
je
push
cmp
xchg
int
jmp
mov
or
or
int
or
aam
push
out
push
jno
jmp
jg
das
cmps
inc
mov
je
arpl
add
mov
pop
aam
sub
pop
addr16
(bad)
(bad)
dec
sub
call
hlt
add
and
xchg
add
js
outs
(bad)
(bad)
(bad)
jg
(bad)
xchg
movs
addr16
les
or
push
or
xchg
lods
jmp
mov
neg
push
(bad)
(bad)
(bad)
push
sub
sub
dec
sbb
push
in
rcl
sub
or
pop
jmp
xor
cmp
push
mov
mov
in
outs
mov
add
sub
add
dec
test
adc
cdq
and
rol
sti
cs
(bad)
(bad)
(bad)
mov
sub
mov
dec
adc
and
rol
and
sti
or
add
clc
(bad)
jg
jmp
or
sbb
xor
cmps
test
dec
mov
js
(bad)
jmp
jo
mov
inc
sbb
je
lds
inc
sub
sbb
jg
dec
call
dec
pop
push
push
add
stos
add
popf
loopne
adc
fwait
es
push
das
and
sbb
(bad)
(bad)
call
or
(bad)
inc
sbb
sbb
popa
pop
and
inc
ret
cmp
mov
(bad)
(bad)
jmp
sbb
xchg
push
in
adc
ja
mov
pop
es
or
add
call
sub
and
cmp
or
push
adc
inc
jg
fcomip
dec
scas
sub
cli
scas
push
cwde
inc
mov
in
cmp
sub
ins
push
mov
iret
mov
shr
mov
js
inc
and
dec
ss
or
ror
cld
push
cmps
call
jo
mov
cmp
cmp
(bad)
call
(bad)
jmp
add
rol
jge
and
fldenv
scas
sub
mov
xor
add
xor
(bad)
call
mov
adc
adc
add
(bad)
(bad)
(bad)
inc
jo
int3
pop
xor
add
jo
cmp
sub
or
(bad)
inc
movs
dec
and
add
cmp
pop
xchg
xchg
repz
(bad)
sbb
and
pop
fidiv
add
inc
fiadd
mov
(bad)
(bad)
call
test
clc
xchg
mov
lds
dec
pusha
xor
mov
add
mov
mov
inc
pushf
pop
pushf
cmp
inc
jo
rcl
xchg
dec
inc
dec
or
or
dec
xchg
dec
fs
inc
loop
test
or
dec
xor
je
inc
pop
inc
ds
das
add
(bad)
dec
bound
mov
pop
shl
or
fcmovnb
loopne
ret
xor
inc
sbb
cwde
fwait
imul
dec
mov
test
nop
xor
inc
pushf
les
pop
or
stc
dec
imul
adc
mov
das
cli
add
loopne
dec
ficomp
sbb
xlat
mov
sbb
outs
mov
or
les
sbb
pop
inc
sti
mov
(bad)
(bad)
in
inc
jnp
pusha
sub
xchg
fisttp
mov
cwde
loope
ds
mov
or
dec
inc
push
test
mov
push
or
adc
pop
loope
push
xchg
adc
das
js
sahf
push
mov
push
mov
repz
test
adc
enter
dec
push
jbe
or
pusha
lock
inc
leave
sub
lds
inc
mov
(bad)
(bad)
jg
sbb
inc
and
cwde
or
sub
sub
cwde
push
and
jg
inc
pop
xchg
mov
push
pusha
pop
and
add
and
in
aas
cld
out
or
nop
pop
movs
or
loopne
add
mov
inc
and
jbe
lock
(bad)
outs
sahf
dec
retw
inc
add
push
push
dec
in
imul
addr16
hlt
push
cld
outs
js
repz
ins
push
dec
inc
int
inc
fiadd
push
lea
cmp
inc
test
addr16
add
push
cmps
shr
or
(bad)
jmp
add
pop
bound
dec
enter
jmp
add
retf
(bad)
jecxz
sub
jl
fs
aaa
popf
dec
push
(bad)
std
out
scas
jb
shl
or
dec
je
and
das
lock
jg
das
dec
jp
fs
mov
mov
test
sbb
pop
ja
movs
(bad)
out
mov
pop
popa
cld
int
pop
popf
(bad)
popa
mov
cmp
test
out
inc
add
and
mov
mov
or
push
xchg
sub
ds
xchg
jl
xchg
scas
mov
dec
jb
mov
dec
fucomip
xchg
scas
outs
xchg
mov
test
and
(bad)
(bad)
jmp
cmp
and
or
(bad)
mov
or
test
call
test
adc
jne
inc
xlat
ins
push
push
pop
adc
pop
sub
lock
cli
popa
mov
fs
add
sbb
push
mov
xcrypt-cfb
cmps
mov
call
jg
ins
and
lds
dec
push
or
bound
cmp
test
mov
or
(bad)
(bad)
(bad)
in
pop
sub
or
(bad)
les
mov
ror
lods
jo
clc
sahf
in
jns
sub
jmp
shr
bound
ins
(bad)
sbb
adc
enter
mov
jg
xor
cmps
mov
test
pop
cdq
and
(bad)
(bad)
(bad)
jg
adc
cmps
jp
dec
enter
cld
xor
mov
pop
mov
adc
cmps
inc
pusha
inc
icebp
add
aaa
add
sbb
or
(bad)
dec
mov
daa
hlt
(bad)
(bad)
call
push
ins
jmp
add
adc
stos
ja
pusha
mov
xchg
jge
xor
loopne
cli
inc
adc
out
inc
test
mov
dec
sbb
xor
(bad)
addr16
push
retf
stc
mov
rol
(bad)
(bad)
fist
aaa
pop
or
dec
xor
push
fisubr
push
imul
(bad)
mov
sbb
xchg
xchg
(bad)
pop
outs
test
int3
and
(bad)
(bad)
jg
sbb
push
pop
repnz
and
push
add
jno
test
push
popa
push
dec
add
call
add
jne
or
clc
inc
inc
ja
lods
(bad)
(bad)
(bad)
fild
dec
push
rol
ss
push
or
lods
outs
popf
jmp
adc
pop
test
(bad)
jmp
(bad)
mov
pop
loope
mov
add
pop
(bad)
and
jbe
cmps
xor
mov
xor
adc
mov
jns
mov
xchg
mov
push
mov
(bad)
cmp
dec
mov
or
aaa
push
pop
xor
je
and
xchg
push
(bad)
xchg
(bad)
cmp
dec
addr16
outs
ret
imul
cs
loop
jns
imul
stos
mov
and
test
jnp
(bad)
call
and
fadd
fcomi
cmps
and
das
jmp
dec
(bad)
arpl
pop
les
pop
fimul
leave
push
jecxz
sub
lock
(bad)
inc
mov
mov
leave
cmp
push
or
ins
pusha
xchg
xchg
push
jg
pop
adc
mov
jp
adc
xlat
loopne
xor
fsubr
jae
mov
fadd
lods
shl
stos
sbb
add
int
(bad)
in
jmp
adc
sbb
inc
das
ins
mov
das
dec
test
clc
(bad)
inc
xchg
call
xchg
call
repz
popa
movs
loope
jmp
inc
cmp
cdq
jb
stos
(bad)
(bad)
(bad)
push
mov
lods
outs
fistp
popa
push
sbb
dec
loop
push
sub
jecxz
push
mov
jp
(bad)
nop
popf
cli
and
(bad)
(bad)
jmp
cdq
push
clc
adc
in
and
fisubr
xchg
cmp
or
push
xor
(bad)
call
cwde
lock
std
dec
xor
adc
mov
xchg
and
cdq
test
mov
push
mov
(bad)
(bad)
(bad)
call
mov
or
out
lods
push
adc
pusha
leave
inc
movd
out
test
pop
ins
(bad)
(bad)
(bad)
call
retf
or
xchg
clc
pop
movs
pop
stos
addr16
jge
mov
or
out
popf
in
and
mov
(bad)
inc
and
icebp
push
or
test
outs
pop
sub
fadd
imul
add
xchg
mov
push
jl
loopne
retf
repz
(bad)
mov
adc
mov
dec
push
cli
ja
les
out
popa
sar
jmp
in
adc
mov
mov
adc
sar
push
push
and
jne
sub
mov
cmp
mov
scas
mov
cli
or
jp
into
and
dec
(bad)
(bad)
jp
ret
jecxz
xchg
aam
add
lods
ss
test
(bad)
jmp
mov
xchg
jb
stos
iret
sbb
xchg
test
(bad)
ret
jmp
sub
clc
mov
movs
push
popf
jne
dec
or
loopne
jmp
and
mov
push
pushf
dec
cwde
push
lods
nop
mov
int3
mov
sub
push
test
(bad)
idiv
jg
outs
inc
xchg
or
mov
mov
mov
xor
lods
pop
inc
adc
(bad)
adc
mov
xchg
inc
mov
ins
lods
dec
mov
(bad)
(bad)
inc
test
dec
nop
in
cmp
pusha
jmp
xchg
and
icebp
les
pop
clc
call
mov
in
les
test
sub
and
inc
shl
xchg
push
lock
sbb
mov
mov
inc
pop
mov
(bad)
(bad)
call
jb
lds
call
adc
pop
mov
xchg
adc
(bad)
fcomip
xchg
lods
push
xchg
pop
daa
inc
jmp
cmovo
or
clc
ja
mov
(bad)
inc
loopne
cmps
sub
xchg
daa
aaa
dec
imul
fld
xor
pop
mov
out
mov
mov
(bad)
fiadd
adc
scas
mov
nop
fiadd
or
fcom
jb
les
ins
push
push
push
and
xor
(bad)
jmp
push
sbb
shr
inc
shr
aam
test
jbe
movsx
or
dec
retf
(bad)
jmp
cmp
test
xor
ret
jl
jo
jg
push
xor
aas
push
test
add
mov
(bad)
(bad)
call
cmp
cmp
cmp
cs
js
(bad)
stos
xchg
mov
jge
jb
dec
test
(bad)
jmp
hlt
mov
xchg
pop
cld
(bad)
call
cmp
pushf
nop
dec
repz
ret
mov
inc
jb
mov
adc
adc
ret
sar
aaa
pop
les
mov
aam
push
mov
outs
xchg
sar
(bad)
jmp
mov
sub
bound
and
pop
scas
xchg
mov
adc
(bad)
(bad)
dec
adc
orps
(bad)
sti
pushf
jo
mov
and
mov
jae
daa
add
pop
dec
push
dec
mov
mov
les
and
(bad)
mov
add
mov
adc
xchg
mov
pop
dec
jbe
(bad)
jg
inc
clc
int3
mov
rol
test
jmp
(bad)
inc
imul
xchg
ja
cmp
pop
add
or
fild
xchg
mov
les
fcomp
push
pop
sub
cs
int3
add
movs
xor
lock
js
out
push
imul
fwait
and
call
pusha
inc
xor
cmp
sub
rol
rol
xchg
adc
mov
dec
pop
mov
inc
or
sbb
add
xor
pop
mov
xor
add
es
jo
scas
daa
pop
push
es
adc
inc
xchg
jae
pop
lock
std
(bad)
push
and
inc
pop
pop
js
push
loopne
(bad)
mov
mov
leave
js
dec
faddp
xchg
(bad)
inc
mov
nop
sub
dec
popf
xchg
arpl
mov
lds
add
ins
fisttp
add
xor
imul
sar
aad
or
push
mov
dec
js
fmul
pop
jl
jns
cmp
stc
or
jmp
inc
cmps
nop
push
mov
(bad)
(bad)
(bad)
jmp
test
repnz
xchg
enter
pushf
or
xchg
(bad)
(bad)
(bad)
jmp
lods
dec
loopne
pusha
das
movs
popa
and
pop
add
sub
loopne
fild
cmps
add
shr
mov
pushf
aaa
test
or
test
(bad)
pmovmskb
stos
add
cmc
outs
xor
in
xchg
fwait
sub
xchg
mov
leave
jbe
sub
adc
lds
sbb
(bad)
pusha
push
xchg
push
or
adc
pop
pop
sbb
repnz
enter
ret
push
sbb
call
mov
retf
in
arpl
movs
scas
rol
sahf
add
clc
jg
mov
fiadd
cs
mov
shl
and
cmp
mov
adc
adc
dec
xor
push
dec
fs
inc
xchg
add
add
aad
jge
or
mov
stos
sbb
xchg
pop
cmps
call
(bad)
(bad)
jmp
test
scas
popf
das
ret
(bad)
or
xor
dec
xchg
mov
pop
sub
pusha
loop
in
(bad)
inc
push
pop
aas
shr
or
movs
dec
xlat
jge
push
es
sub
(bad)
xchg
push
ins
inc
jb
stos
and
sub
mov
jns
cmp
(bad)
(bad)
call
inc
cmps
adc
inc
sub
lods
dec
sub
push
retf
pop
add
ret
(bad)
jmp
add
int
and
add
add
jecxz
sub
(bad)
(bad)
(bad)
call
movs
ins
jno
ror
xor
inc
adc
xchg
xchg
add
or
inc
and
jbe
into
in
sbb
jb
iret
adc
aas
inc
(bad)
jb
shr
ins
stos
fcom
and
xor
fwait
hlt
stc
int
(bad)
ror
rdtsc
or
rcr
dec
adc
lahf
ss
add
int
cs
mov
adc
stc
aad
push
sbb
mov
(bad)
fild
mov
or
das
adc
push
and
clc
(bad)
(bad)
call
sub
xor
outs
mov
mov
adc
add
idiv
outs
or
(bad)
call
jge
(bad)
into
or
dec
sahf
add
lahf
or
rcl
adc
inc
ins
(bad)
aam
(bad)
mov
test
leave
clc
mov
lods
popa
rcr
push
cmps
je
push
xor
test
jle
movs
sub
inc
pop
xor
(bad)
(bad)
(bad)
push
dec
inc
pop
or
mov
mov
mov
and
scas
jecxz
inc
outs
or
pop
or
or
(bad)
(bad)
inc
lods
pop
cmp
pop
test
jl
sub
nop
sbb
stc
or
pop
sub
mov
push
scas
mov
nop
lock
inc
lahf
push
mov
mov
sbb
mov
ins
fst
cmp
sub
popa
inc
mov
mov
xchg
dec
ja
mov
outs
ret
ret
xor
das
xor
adc
inc
cli
ins
lds
fsubp
scas
cwde
in
jne
shr
cwde
xor
inc
ficom
sub
add
(bad)
(bad)
inc
shr
(bad)
aas
adc
aaa
dec
push
mov
adc
sub
jo
dec
adc
push
(bad)
(bad)
(bad)
mov
lods
mov
or
sub
cmps
xchg
(bad)
adc
ret
xchg
lahf
into
mov
and
pop
call
loopne
ja
ret
rcl
add
push
fadd
test
mov
lock
(bad)
(bad)
jmp
push
adc
dec
jmp
xchg
test
inc
(bad)
int3
or
(bad)
(bad)
call
loopne
dec
xor
sub
push
clc
or
dec
pop
xor
ret
loopne
popf
das
clc
(bad)
inc
into
ins
sub
jno
xchg
pop
inc
(bad)
mov
lahf
mov
xchg
dec
aam
add
and
mov
push
test
and
sahf
bound
shl
cmovl
jle
or
(bad)
jmp
dec
mov
xor
mov
stos
add
test
dec
add
mov
cwde
push
xchg
movs
repz
div
jp
xchg
pop
dec
ret
sti
inc
add
jbe
aam
(bad)
dec
(bad)
out
cli
(bad)
in
in
sbb
call
ins
push
imul
adc
ins
pop
(bad)
(bad)
jmp
stos
add
jmp
scas
and
inc
bound
sub
call
or
pop
pushf
add
test
or
or
sbb
(bad)
fdiv
(bad)
pop
sub
std
or
pusha
or
adc
or
xchg
and
and
and
lahf
jg
sti
arpl
jmp
adc
pop
and
fcomp
scas
mov
push
mov
fld
push
jo
into
clc
fisub
inc
sar
iret
ins
das
xchg
ret
icebp
fist
xor
push
js
repnz
inc
pop
xor
mov
call
mov
pop
push
mov
pop
pop
pop
inc
rcl
cmps
arpl
add
push
es
outs
cli
out
xor
jmp
ret
(bad)
cmp
pop
call
dec
inc
seta
(bad)
(bad)
push
repz
clc
push
jmp
stos
repz
and
cmp
cli
cmp
push
mov
jmp
imul
js
pop
mov
sbb
(bad)
fild
call
sbb
es
jno
pop
mov
inc
dec
push
dec
pop
call
sub
sub
push
or
fistp
sbb
mov
jo
add
sub
add
or
inc
push
add
ins
lods
rcl
push
cmc
(bad)
(bad)
(bad)
call
add
adc
push
sbb
jmp
sub
jmp
adc
push
pushf
test
ja
ret
jp
and
jae
xchg
and
(bad)
mov
ror
dec
scas
sbb
xor
cwde
bound
mov
or
ret
test
add
cwde
(bad)
psubusw
mov
push
or
test
movs
(bad)
(bad)
jmp
sbb
xor
pop
je
sub
cmp
cwde
les
bnd
(bad)
jg
push
pop
pop
adc
outs
xor
pop
push
adc
inc
sub
xor
mov
into
dec
int3
mov
xor
push
sub
js
mov
stos
int
(bad)
call
jne
add
sub
adc
pop
sub
mov
mov
ror
pushf
xchg
stos
mov
jmp
jmp
fwait
inc
outs
sub
and
mov
(bad)
mov
nop
outs
jle
or
into
mov
mov
inc
xlat
pop
mov
or
lods
xchg
nop
cmp
add
sbb
xchg
(bad)
inc
and
or
pop
or
aaa
mov
icebp
jno
push
adc
(bad)
(bad)
(bad)
dec
fmul
lea
aam
mov
add
push
xchg
mov
sti
xchg
inc
jne
or
mov
mov
cmp
and
cmp
clc
call
cwde
loopne
(bad)
in
mov
inc
fdivr
jp
sub
pop
mov
clc
jle
scas
jmp
and
dec
in
add
mov
push
ror
je
ja
sub
cdq
mov
pushf
jo
mov
ficomp
dec
xlat
mov
ja
or
and
test
(bad)
(bad)
(bad)
jmp
cmp
mov
or
cwde
in
loope
push
jle
adc
lsl
pop
cmp
add
sti
jmp
or
cmp
push
mov
push
mov
dec
fwait
xchg
call
imul
lock
push
or
push
inc
or
rcl
mov
adc
adc
cld
adc
cmp
mov
inc
adc
mov
mov
(bad)
(bad)
(bad)
dec
into
lods
adc
mov
xchg
push
sub
mov
jae
hlt
icebp
sbb
(bad)
(bad)
dec
shr
mov
loop
dec
stc
jecxz
add
xor
std
(bad)
cmp
mov
mov
dec
dec
into
fcmovnb
mov
xchg
mov
(bad)
push
mov
stc
add
mov
clc
pop
xlat
adc
gs
fcmovnb
cmp
mov
in
add
mov
mov
or
call
loopne
xor
xor
mov
jne
je
dec
enter
sub
je
mov
and
sub
pop
(bad)
jmp
xchg
jbe
loop
(bad)
cmp
jnp
imul
movs
push
movs
(bad)
(bad)
dec
jo
ret
lds
mov
(bad)
clc
jecxz
(bad)
jg
jo
mov
add
or
add
popf
pop
sahf
rol
push
enter
test
aas
xor
outs
(bad)
(bad)
jmp
mov
or
push
or
xchg
(bad)
mov
ret
inc
js
dec
add
add
or
fs
mov
push
mov
(bad)
call
and
(bad)
jl
rcr
adc
shl
bound
outs
ja
cmp
jl
push
pop
rcr
inc
ret
dec
mov
or
jne
dec
cwde
repnz
sub
lock
dec
dec
sbb
mov
(bad)
call
je
push
ficomp
enter
jp
and
cld
(bad)
call
sbb
imul
xchg
repnz
adc
sbb
cdq
out
call
pop
data16
rcl
xor
popa
out
test
cmp
sub
clc
(bad)
into
add
or
add
out
mov
sub
add
jle
sub
jg
add
lahf
sbb
mov
pop
jae
ins
test
add
dec
ret
daa
dec
(bad)
out
adc
adc
add
mov
int
add
jmp
xor
add
inc
ins
adc
cmps
mov
imul
pop
adc
add
imul
cmp
jmp
or
mov
pop
push
xchg
xchg
mov
add
(bad)
(bad)
inc
pop
pop
ret
push
fnstenv
cmp
mov
jne
loop
test
cmp
add
leave
clc
jmp
jo
mov
push
or
scas
mov
dec
xor
lahf
pusha
and
or
(bad)
jmp
dec
mov
rol
or
pop
gs
(bad)
mov
add
xor
sbb
push
ins
xor
test
mov
call
inc
mov
(bad)
fwait
mov
inc
ss
mov
das
cmp
add
dec
mov
ds
inc
pop
or
pop
xchg
les
sub
(bad)
(bad)
(bad)
push
xchg
sub
fild
dec
mov
mov
and
push
fwait
mov
into
call
sbb
shl
ret
push
jmp
pop
fsubr
jo
adc
cmp
push
jle
sub
xor
or
addr16
je
icebp
(bad)
call
mov
jmp
add
xor
sar
(bad)
inc
cmp
mov
mov
shl
mov
(bad)
inc
add
cmps
or
rol
add
and
int3
sub
int
(bad)
mov
hlt
sub
ret
out
fistp
sub
jo
xchg
mov
das
clc
inc
mov
add
popa
push
outs
mov
inc
pusha
hlt
jge
mov
sbb
cmp
ss
mov
adc
aas
fs
call
sub
loopne
scas
cli
pop
add
pop
xor
add
iret
enter
mov
rcl
fwait
or
dec
enter
jmp
rcl
fdivr
enter
sahf
out
adc
sbb
mov
pop
retf
mov
adc
(bad)
(bad)
call
pop
xchg
push
outs
mov
adc
movs
ins
or
(bad)
or
(bad)
(bad)
out
scas
mov
adc
mov
pusha
adc
fisubr
fld
cmc
mov
mov
push
sub
xlat
mov
xchg
in
outs
dec
(bad)
loop
jmp
test
pop
and
arpl
das
or
dec
or
cmp
jmp
push
test
and
js
adc
and
icebp
fild
and
outs
daa
lock
pop
stos
sti
sub
add
(bad)
(bad)
fistp
xor
cwde
and
call
or
dec
ins
and
mov
dec
lock
jmp
cmp
xor
dec
dec
pop
addr16
xlat
stos
retf
jmp
ds
cs
xor
xor
and
mov
or
dec
sbb
push
repz
inc
mov
jne
clc
mov
push
and
(bad)
cmp
movs
add
and
xchg
mov
inc
inc
or
xlat
push
or
and
sub
jecxz
pop
call
test
xlat
rcl
sbb
sub
jmp
inc
inc
or
inc
inc
fcomip
lods
and
cmp
mov
(bad)
fist
jecxz
mov
test
sub
enter
repz
jo
popa
(bad)
(bad)
(bad)
(bad)
std
loope
jae
popf
and
(bad)
aad
or
fld
inc
push
mov
or
int
ds
dec
add
sub
aaa
leave
aam
cdq
and
jg
cmps
or
jo
dec
inc
(bad)
xor
fs
jge
pusha
mov
xor
lods
(bad)
call
push
ss
jmp
in
pop
or
add
sub
mov
stc
call
out
inc
push
call
out
or
(bad)
dec
inc
push
icebp
cmp
sub
std
aaa
add
push
mov
and
adc
(bad)
(bad)
mov
inc
fwait
pop
in
xchg
mov
mov
les
dec
ds
push
and
mov
inc
sub
push
dec
jno
(bad)
mov
nop
sbb
and
push
adc
or
clc
cmp
inc
repnz
lea
les
or
xchg
pop
add
ins
enter
(bad)
jmp
div
push
and
inc
push
out
or
push
pop
push
cmp
gs
dec
inc
mov
mov
jge
push
dec
pop
cld
test
mov
dec
xlat
sahf
ds
inc
jae
mov
jle
add
call
je
loope
and
add
or
mov
cmps
je
pop
das
sbb
jl
lock
inc
jl
enter
les
sbb
cli
pop
push
call
mov
inc
(bad)
inc
(bad)
push
xchg
dec
lods
adc
cs
clc
fild
pop
push
test
data16
dec
xor
or
mov
pop
pop
mov
mov
das
mov
jmp
and
mov
xor
(bad)
xor
xchg
(bad)
(bad)
(bad)
jmp
add
sar
outs
sub
jbe
sbb
rcl
aaa
lahf
push
rol
test
in
mov
push
mov
bound
dec
mov
push
mov
mov
sub
xor
jb
ja
inc
and
enter
and
xor
push
sub
xor
sbb
(bad)
(bad)
(bad)
call
or
inc
div
mov
sti
lea
push
pop
in
xchg
sub
movs
into
add
sbb
gs
add
cmp
mov
clc
sbb
mov
sbb
inc
push
inc
loop
xor
out
mov
pop
bnd
or
push
mov
lods
jmp
and
inc
or
add
and
jmp
icebp
push
pop
(bad)
dec
mov
fimul
push
push
mov
(bad)
icebp
fwait
cli
rcl
cld
(bad)
dec
dec
inc
fadd
out
adc
or
mov
adc
popf
retf
or
push
fisub
out
cwde
add
inc
daa
(bad)
(bad)
(bad)
dec
sub
or
inc
(bad)
mov
jmp
and
pop
mov
mov
push
sub
aaa
cld
aas
push
sbb
pop
push
call
adc
adc
gs
pusha
lea
jp
loope
add
mov
dec
xchg
and
cmp
(bad)
clc
adc
pop
add
xchg
pusha
js
mov
push
(bad)
call
mov
cmps
bound
cmps
add
loopne
sbb
jg
(bad)
inc
div
ret
mov
mov
mov
pop
pop
xchg
jmp
jmp
and
cld
call
outs
cmp
mov
pop
mov
cmp
(bad)
call
mov
(bad)
divps
ja
pusha
stc
xchg
test
xor
aaa
inc
xchg
and
cmp
mov
popf
pop
lock
cs
ss
dec
dec
js
fld
pop
sbb
loopne
push
in
pusha
loope
dec
pop
mov
out
test
daa
cs
scas
push
cli
test
add
sar
idiv
or
mov
fucompp
mov
daa
inc
mov
aaa
push
cs
cmp
jnp
(bad)
(bad)
jmp
rcr
adc
xor
xchg
out
or
das
push
fadd
mov
call
push
jb
xchg
add
or
movs
aaa
jbe
inc
sbb
push
adc
icebp
and
(bad)
(bad)
push
jmp
xchg
mov
jmp
mov
fimul
pop
sar
into
sbb
(bad)
(bad)
(bad)
dec
and
sub
and
jle
loope
fild
retf
push
pop
cs
lods
(bad)
(bad)
(bad)
mov
jl
mov
jmp
cli
nop
arpl
loope
pop
mov
repnz
inc
add
jge
xlat
and
daa
js
pop
movs
clc
(bad)
push
js
xchg
movs
xlat
xor
inc
clc
es
test
and
xchg
adc
push
xchg
push
aam
mov
add
ret
clc
int3
pop
inc
push
sub
and
ins
imul
adc
dec
nop
xlat
cmp
loop
rcl
or
je
sbb
sahf
(bad)
(bad)
inc
pop
fdiv
sub
cmp
and
(bad)
dec
sti
or
int3
ins
movs
add
(bad)
mov
cld
pop
mov
dec
add
out
std
push
push
cld
xchg
push
jmp
test
or
or
and
sahf
jge
in
retf
push
sbb
adc
scas
dec
add
pop
xlat
(bad)
(bad)
inc
out
int3
xor
push
add
outs
mov
les
ficom
popa
xor
(bad)
jg
inc
push
enter
mov
cmp
jge
sahf
mov
out
sbb
jmp
jno
sub
jle
sub
fs
cmps
ja
mov
inc
mov
sbb
fcomp
add
icebp
push
std
pop
sub
inc
mov
push
ja
sub
loopne
jmp
adc
js
and
std
adc
(bad)
call
and
pop
test
dec
mov
enter
lock
(bad)
std
mov
fs
and
add
add
cli
and
adc
inc
push
lahf
retf
inc
mov
cmps
sbb
and
(bad)
(bad)
(bad)
mov
adc
addr16
mov
or
mov
and
pop
jmp
xor
stos
push
je
xchg
(bad)
jns
mov
sahf
lahf
adc
into
mov
cmp
std
(bad)
dec
and
xchg
mov
and
ins
test
add
test
dec
enter
call
add
sub
pop
test
jns
or
or
mov
pop
xchg
fs
sbb
ret
inc
adc
clc
pop
movs
mov
inc
pop
adc
(bad)
in
(bad)
call
xchg
xor
pop
sbb
test
lahf
xchg
out
jle
cli
push
cmp
jmp
fiadd
adc
into
rol
(bad)
pop
ficomp
sub
mov
cmps
gs
hlt
xchg
and
test
shl
pushf
test
or
adc
push
lock
(bad)
dec
or
adc
sbb
ret
std
mov
ja
pop
lds
pop
out
(bad)
(bad)
fild
or
and
lods
iret
loop
mov
pop
loopne
repz
and
out
and
inc
in
xchg
leave
push
sahf
nop
mov
mov
repz
adc
adc
out
(bad)
das
add
cmps
and
enter
mov
pop
cmp
push
retf
(bad)
sahf
sbb
dec
loop
(bad)
pop
pop
enter
popa
mov
add
rsqrtps
sbb
(bad)
(bad)
fcomip
inc
sbb
mov
movs
nop
loope
call
mov
xchg
mov
(bad)
push
cld
and
xor
bound
jne
fsubr
and
(bad)
(bad)
jmp
lods
adc
mov
push
ret
test
inc
cld
je
inc
not
dec
dec
mov
add
(bad)
(bad)
(bad)
mov
xchg
or
adc
rol
mov
pop
sar
mov
(bad)
(bad)
(bad)
jmp
inc
pop
mov
inc
(bad)
mov
das
cmp
cmp
es
pusha
popa
jl
loope
stos
xor
sbb
icebp
movs
pop
xchg
hlt
(bad)
(bad)
dec
ins
and
inc
fisubr
mov
or
sbb
add
mov
(bad)
push
push
outs
jg
or
or
fdiv
dec
mov
or
(bad)
(bad)
inc
inc
cmp
loop
addr16
neg
add
sub
in
or
pop
scas
pop
scas
call
sbb
inc
pop
dec
clc
add
ins
rcl
ins
add
dec
(bad)
(bad)
jmp
mov
pusha
mov
stos
add
adc
test
xchg
mov
call
inc
test
add
fadd
push
std
nop
mov
gs
inc
ins
jae
xchg
fidivr
pop
or
xchg
int3
cmp
mov
xchg
add
mov
jle
or
(bad)
(bad)
dec
lahf
scas
cld
es
adc
xlat
adc
sbb
call
int3
or
push
pop
mov
or
ret
push
adc
les
hlt
sbb
cs
nop
pop
sub
push
je
mov
adc
adc
movs
sub
jo
mov
aaa
test
mul
jbe
(bad)
(bad)
push
sti
dec
cwde
das
lds
push
ret
pop
xor
xchg
xor
imul
enter
call
dec
jmp
xchg
inc
mov
mov
ror
enter
dec
cmp
enter
cmps
cmp
sbb
dec
(bad)
jg
push
arpl
push
call
sbb
jae
sbb
es
call
or
mov
and
stos
mov
scas
xchg
sub
sbb
enter
dec
adc
dec
aad
xchg
out
mov
(bad)
dec
rcr
aad
(bad)
(bad)
(bad)
call
bound
jbe
xor
lods
dec
jmp
dec
scas
add
mov
dec
fdivr
out
sbb
(bad)
jle
and
sbb
jle
sahf
push
test
(bad)
jg
mov
jno
hlt
sub
rcl
int
xor
lods
dec
(bad)
(bad)
jmp
int3
outs
sbb
es
xchg
jl
mov
add
xchg
push
ds
aaa
and
mov
jnp
push
push
push
add
int3
pop
sub
(bad)
(bad)
mov
adc
jo
push
add
cmp
xchg
mov
aam
xlat
xchg
(bad)
mov
xor
fwait
jns
add
xchg
aam
mov
mov
add
add
(bad)
(bad)
in
push
jne
or
popf
push
dec
dec
rcr
scas
and
hlt
jg
jns
push
adc
pop
fmul
pop
cmc
pop
or
aad
sbb
mov
cs
push
loope
push
inc
ja
(bad)
(bad)
call
jo
inc
cmp
adc
daa
sbb
cmc
xchg
fdivr
into
xchg
icebp
cmp
ins
or
cmp
sbb
jg
or
fisub
jne
test
aad
sub
je
mov
retf
rcl
pop
or
dec
outs
in
cdq
aam
inc
rcl
or
mov
repz
inc
lea
stc
out
pusha
sub
(bad)
push
jg
fs
or
jl
jge
vrcpss
sub
pop
std
(bad)
jmp
lds
inc
sbb
push
daa
std
aam
lock
gs
dec
pusha
cwde
sbb
push
and
mov
ja
xor
adc
xchg
add
adc
push
dec
imul
hlt
cld
(bad)
(bad)
jmp
js
jae
xor
sub
dec
les
mov
mov
push
dec
xchg
cwde
add
call
push
mov
mov
pop
movs
(bad)
call
loop
xlat
pop
pop
xor
adc
cmp
mov
dec
dec
and
and
sub
scas
and
or
movsx
ret
nop
aas
ja
rol
scas
loopne
cmp
(bad)
push
inc
(bad)
and
xor
js
or
mov
hlt
dec
pop
inc
stos
dec
imul
cmp
das
cli
push
jbe
pop
xchg
jmp
je
adc
ja
imul
and
(bad)
(bad)
(bad)
cmp
sub
test
bound
pop
loope
mul
inc
or
je
movs
dec
cmp
call
pusha
loopne
cmp
lds
hlt
adc
fcomp
adc
(bad)
(bad)
call
loopne
rol
je
loopne
push
adc
or
into
pextrw
and
mov
outs
(bad)
(bad)
call
or
add
sub
dec
popa
sbb
sti
js
pop
add
push
hlt
add
enter
lock
adc
lock
sub
pusha
sbb
add
ja
popf
ss
loopne
and
push
cmp
(bad)
(bad)
call
push
sub
fnstenv
lods
cdq
test
dec
sbb
push
mov
dec
loopne
int3
fwait
and
inc
loope
punpckldq
inc
inc
aam
mov
(bad)
jmp
jl
test
jle
clc
das
imul
icebp
sub
and
pushf
xlat
test
xchg
sub
(bad)
cmp
loope
out
rol
loopne
xchg
push
push
addr16
push
or
mov
add
addr16
push
call
adc
jmp
xor
adc
add
dec
sub
adc
jg
adc
xor
cwde
jno
add
xchg
aaa
mov
shl
(bad)
jmp
dec
dec
inc
or
pusha
jge
and
hlt
push
bound
(bad)
jmp
jne
inc
add
outs
add
inc
add
sub
imul
or
rcl
push
adc
inc
inc
jmp
jo
ret
mov
cld
(bad)
clc
lea
mov
outs
rol
lock
jmp
outs
push
loopne
(bad)
jmp
add
pop
cli
loope
(bad)
or
pop
adc
pop
sbb
inc
cmps
int3
push
jne
(bad)
call
pop
pop
pop
daa
push
sbb
shl
movs
add
int
pop
(bad)
(bad)
(bad)
inc
outs
xchg
mov
lods
and
adc
mov
fadd
mov
std
xchg
cmp
pop
cmp
jne
jns
xchg
lock
inc
retf
(bad)
(bad)
(bad)
jg
dec
mov
xchg
cdq
mov
fwait
(bad)
adc
ins
das
add
pushf
sahf
jmp
mov
stc
adc
add
stos
inc
and
sar
pop
call
dec
test
in
cmp
(bad)
jmp
mov
and
xor
mul
in
dec
or
add
sbb
pop
shl
jecxz
adc
add
push
xor
(bad)
jg
and
jmp
xlat
add
pushf
pop
adc
(bad)
jmp
out
sbb
xor
test
sbb
push
data16
xchg
jbe
mov
mov
mov
inc
sub
(bad)
call
xchg
aad
xor
cli
ret
or
mov
adc
adc
cmp
and
cmps
push
in
sbb
dec
jmp
nop
lea
cdq
push
fsub
or
(bad)
(bad)
(bad)
inc
inc
cmps
fistp
or
jo
shl
xor
xchg
js
pop
add
lock
inc
mov
call
test
or
in
adc
jo
lods
pop
ja
jg
and
in
and
cmp
inc
pop
loopne
(bad)
cmp
inc
ja
js
inc
sar
xor
movs
or
pop
xchg
aad
jge
cmp
into
popa
inc
mov
xchg
or
scas
shl
(bad)
(bad)
(bad)
mov
enter
inc
inc
mov
imul
rol
add
dec
cmps
(bad)
(bad)
mov
lock
imul
cmp
push
push
inc
or
cmp
dec
mov
dec
sbb
das
cdq
add
jle
push
add
loopne
sbb
idiv
test
in
jge
sub
(bad)
call
test
je
mov
dec
sub
add
popf
xor
hlt
outs
cli
(bad)
dec
adc
call
clc
cmp
mov
jl
fs
add
enter
call
(bad)
dec
shl
fstp
add
push
mov
inc
inc
mov
mov
sub
inc
idiv
call
hlt
lods
add
sub
push
out
test
imul
imul
inc
add
bound
lock
adc
push
lock
adc
or
rol
idiv
add
mov
adc
or
add
rol
jo
or
cld
cmps
jmp
aaa
sbb
mov
pop
xchg
push
mov
xor
(bad)
mov
bound
and
mov
stos
inc
ss
adc
and
fsub
xor
jno
aam
popa
or
jb
or
or
dec
lea
push
sub
xchg
jo
mov
add
(bad)
(bad)
(bad)
jmp
out
xchg
add
dec
add
call
add
mov
inc
add
movs
(bad)
xchg
jmp
clc
dec
add
std
es
or
inc
and
inc
add
add
sbb
arpl
(bad)
(bad)
(bad)
call
jns
cmp
or
cmp
jl
in
(bad)
das
dec
movs
adc
mov
inc
dec
es
rcl
or
push
mov
daa
push
push
out
mov
dec
test
adc
dec
fild
(bad)
(bad)
(bad)
dec
cdq
or
call
mov
xor
mov
js
add
pop
sub
adc
pop
inc
(bad)
(bad)
(bad)
inc
xor
ins
data16
push
add
and
sti
pop
les
jmp
stos
add
cmp
xchg
cmp
retf
adc
(bad)
nop
adc
sti
fwait
cmp
aaa
(bad)
(bad)
(bad)
jmp
xor
hlt
mov
loope
enter
mov
pop
jle
mov
push
(bad)
(bad)
(bad)
jmp
push
push
adc
adc
push
cmps
mov
out
and
ins
adc
cmp
test
sub
and
loopne
and
add
fmul
sub
out
inc
or
add
rol
lock
inc
aam
inc
(bad)
(bad)
(bad)
fist
mov
adc
test
rcl
addr16
out
and
(bad)
(bad)
out
clc
or
mov
test
clc
push
inc
cdq
les
mov
mov
adc
(bad)
in
sub
inc
lea
test
test
lea
(bad)
jmp
adc
pusha
nop
lahf
repz
movs
mov
loopne
push
add
test
push
xor
cmp
mov
lds
sub
adc
std
(bad)
(bad)
call
sbb
jmp
jecxz
sbb
add
and
inc
or
or
and
cdq
xchg
mov
loope
jg
add
mov
in
mov
push
sub
popa
(bad)
mov
mov
clc
(bad)
(bad)
(bad)
(bad)
fbstp
fxch
icebp
and
push
and
push
aaa
push
pusha
rcr
jno
and
fild
mov
pop
jo
(bad)
(bad)
(bad)
jg
arpl
mov
dec
mov
lea
sbb
mov
sahf
cld
(bad)
(bad)
(bad)
jmp
dec
xor
or
adc
pop
mov
and
or
cwde
jmp
push
add
cmps
adc
(bad)
(bad)
(bad)
dec
sbb
add
add
and
sbb
js
add
xor
push
adc
add
or
and
adc
aas
dec
js
aam
call
sbb
(bad)
call
jo
icebp
test
cmps
xor
mov
fs
ds
cmc
inc
adc
xchg
aas
mov
xchg
ja
and
dec
pushf
pusha
stos
push
(bad)
(bad)
(bad)
(bad)
jmp
mov
add
ins
popf
pop
xor
push
mov
cmc
jp
inc
outs
(bad)
test
call
rcl
sbb
adc
fadd
test
stc
fdivrp
mov
idiv
(bad)
(bad)
(bad)
clc
or
fiadd
or
int
sbb
adc
add
retf
test
mov
dec
push
dec
jmp
psubd
call
(bad)
inc
gs
scas
in
rcr
push
je
aaa
mov
or
ja
push
xchg
jmp
pop
rcl
int
jmp
dec
adc
fs
(bad)
(bad)
(bad)
jmp
inc
out
movs
not
or
retf
and
dec
mov
lods
and
(bad)
(bad)
(bad)
dec
popf
pop
pop
lahf
add
cmp
mov
mov
cmp
je
xchg
(bad)
(bad)
dec
fsubp
jle
or
aam
sub
retf
jns
inc
cmp
jg
mov
(bad)
loope
mov
(bad)
(bad)
dec
inc
lods
xchg
sub
push
mov
sub
xor
shr
jne
mov
push
(bad)
ss
mov
jge
xchg
lock
mov
cmp
fsubr
xchg
cld
dec
push
cmp
pop
mov
jae
xlat
push
sub
cmp
jmp
ret
or
outs
cli
call
and
test
adc
dec
jecxz
shl
mov
(bad)
(bad)
dec
push
movs
add
pop
adc
scas
adc
aam
adc
adc
add
push
je
add
(bad)
jmp
sub
outs
and
jmp
lock
js
cmp
jmp
dec
movs
xor
psllw
das
aad
cmp
inc
jmp
(bad)
(bad)
aas
rol
das
xor
popf
ror
cs
adc
and
sbb
lea
(bad)
(bad)
inc
pop
jl
xchg
fs
push
sbb
xor
jb
test
add
adc
inc
inc
(bad)
call
cmps
movs
or
rcl
hlt
call
xchg
adc
nop
loopne
xor
pop
add
push
das
loope
mov
jmp
arpl
jp
lods
cmps
pop
and
test
or
or
xchg
(bad)
jmp
xchg
mov
push
push
xor
cwde
pop
icebp
and
ja
add
jle
xor
adc
push
pop
comiss
test
push
inc
movs
rcr
mov
jl
add
or
sub
adc
push
jns
mov
in
pop
pop
dec
cmp
mov
xor
test
sbb
test
fwait
mov
hlt
push
aas
or
sub
push
fstp
cmc
adc
stos
popa
in
inc
add
stos
push
(bad)
fimul
rol
dec
outs
push
and
dec
call
dec
push
into
(bad)
pop
push
(bad)
and
jne
(bad)
call
pop
scas
add
sbb
pop
inc
std
movs
inc
jb
das
ja
jns
mov
pop
mov
(bad)
(bad)
call
inc
jg
scas
dec
shl
shl
push
popa
xor
dec
shr
ja
(bad)
inc
call
sbb
popa
push
lds
(bad)
cwde
enter
or
enter
mov
inc
xchg
xchg
jmp
(bad)
call
mov
daa
xchg
hlt
inc
lods
and
lahf
ret
mov
xor
adc
push
pop
mov
(bad)
(bad)
jmp
int3
inc
ret
inc
cmp
mov
daa
fdiv
sbb
sar
jmp
add
stos
or
mov
or
es
jne
shl
add
mov
(bad)
rcl
cld
dec
and
inc
or
xchg
mov
lock
xor
cmps
jp
cmp
or
and
mov
dec
int3
test
(bad)
mov
mov
dec
cs
ret
in
or
sbb
adc
sbb
lahf
mov
cli
int
ss
and
sub
adc
sub
aaa
(bad)
popf
mov
shr
(bad)
jmp
in
push
add
gs
inc
jge
dec
dec
or
rcl
adc
test
in
(bad)
jmp
push
mov
cmp
push
inc
jl
pop
fsub
pop
sbb
xchg
jo
or
test
push
nop
push
add
mov
jbe
call
jl
adc
add
out
push
out
loop
scas
mov
adc
adc
nop
stos
daa
loopne
sub
(bad)
jmp
jo
add
add
js
push
mov
rcr
sub
dec
dec
cmp
ins
std
or
imul
(bad)
call
cmp
inc
sbb
sub
xchg
dec
inc
mov
dec
mov
xor
es
and
jne
add
stos
xor
pop
outs
mov
(bad)
(bad)
(bad)
(bad)
cmp
mov
mov
mov
dec
and
push
ins
fdivrp
jmp
push
push
in
das
or
adc
sbb
sbb
inc
imul
(bad)
(bad)
jmp
daa
adc
inc
call
jb
daa
imul
xlat
mov
cmp
dec
loop
(bad)
push
mov
push
test
cmp
mov
adc
call
cld
scas
clc
call
dec
push
xchg
daa
and
jl
(bad)
frstor
(bad)
pop
cld
ja
pushf
xlat
sub
sub
test
aas
daa
dec
jp
mov
adc
call
ins
inc
xor
inc
jns
in
jno
fs
push
jecxz
(bad)
fisttp
adc
cs
jae
xor
mov
xor
pushf
icebp
inc
pop
aas
add
cmc
adc
pop
cs
inc
mov
sbb
call
cmp
add
jge
or
sub
add
or
clc
test
add
in
call
gs
push
les
adc
js
push
pop
dec
loope
cmps
pushw
(bad)
(bad)
call
dec
ret
sbb
lock
out
push
dec
leave
xor
mov
fistp
sub
call
fsub
and
pop
inc
retf
push
popa
xor
xchg
(bad)
call
mov
pop
std
xor
fistp
out
or
xor
sub
pop
add
in
jl
pop
mov
(bad)
(bad)
jmp
mov
pusha
push
push
sub
mov
mov
and
pop
add
adc
and
push
call
popa
test
adc
inc
xchg
mov
adc
dec
ja
jmp
(bad)
(bad)
(bad)
inc
pop
out
dec
xchg
mov
mov
rol
not
push
and
jg
(bad)
inc
push
xchg
adc
inc
test
popf
jmp
call
inc
and
adc
inc
and
push
mov
cmps
addr16
push
mov
and
fild
xchg
or
mov
mov
xor
imul
leave
mov
add
or
(bad)
jmp
xor
pop
clc
push
sub
inc
lahf
mov
cld
(bad)
(bad)
jmp
sub
push
into
jnp
imul
xchg
adc
movs
push
push
jle
das
movs
adc
inc
(bad)
(bad)
jmp
out
cmp
div
push
cld
jp
lock
fs
add
shr
js
fmul
mov
(bad)
(bad)
call
loope
xor
cmps
jbe
mov
mov
inc
mov
and
sbb
(bad)
call
fwait
cmp
push
jg
push
push
adc
xchg
add
or
and
xor
mov
cld
(bad)
(bad)
dec
push
xchg
outs
mov
(bad)
(bad)
pop
fbstp
jnp
pop
jne
pop
lods
sub
jg
and
(bad)
bound
enter
imul
(bad)
(bad)
inc
push
test
cli
ret
mov
stos
and
jmp
pop
and
mov
add
jno
dec
arpl
xor
daa
popf
mov
or
call
adc
lds
dec
cmp
sbb
test
mov
(bad)
add
dec
or
cmc
xchg
pop
sub
mov
scas
jns
inc
imul
and
(bad)
pusha
stos
mov
mov
sti
dec
sub
rol
js
cmps
lock
fcom
rcr
int3
iret
loop
fbstp
shr
push
sbb
dec
stos
mul
push
push
ins
or
add
push
pop
sub
call
jg
movs
add
jne
std
pop
push
xor
test
jmp
(bad)
fisttp
sbb
(bad)
pop
xchg
xchg
imul
jne
adc
les
mov
jno
mov
int3
(bad)
xor
cli
(bad)
jmp
push
sbb
loop
and
sbb
pop
push
imul
inc
shr
(bad)
jmp
sbb
aas
jmp
xchg
add
mov
in
test
push
sub
xor
sbb
adc
mov
lds
and
in
push
mov
scas
or
loope
xor
adc
pop
icebp
inc
or
(bad)
call
add
xchg
dec
loopne
adc
adc
test
pop
push
add
cmp
in
cwde
shl
lods
adc
jmp
ret
xchg
and
or
test
sahf
sti
or
scas
cmps
inc
xor
hlt
adc
stc
push
push
mov
or
xor
push
bound
mov
fwait
inc
add
mov
(bad)
jg
mov
call
outs
ins
jle
jnp
pop
jmp
ja
adc
outs
clc
aaa
movs
jae
in
sub
inc
adc
fsubr
jo
(bad)
(bad)
(bad)
dec
sbb
jno
cmp
or
test
sub
sub
in
push
loopne
pop
jmp
or
mov
mov
cmp
mov
(bad)
(bad)
dec
mov
dec
or
js
mov
inc
pushf
and
jno
gs
(bad)
(bad)
inc
neg
ret
mov
lea
or
inc
test
add
fiadd
or
rol
(bad)
(bad)
inc
in
stos
pop
xchg
stc
pop
cwde
stos
adc
dec
push
sub
pusha
or
jno
jmp
jbe
pop
push
retf
aad
mov
mov
add
jbe
add
loopne
cmps
cmp
or
call
retf
adc
sbb
cmp
and
mov
icebp
fcomip
jmp
lods
push
in
repz
adc
retf
mov
aaa
mov
jmp
sub
out
sbb
jmp
(bad)
daa
dec
cld
add
(bad)
push
shl
inc
sub
repnz
pop
mov
fdiv
push
popa
pusha
sar
(bad)
push
cmps
or
add
or
mov
pushf
pop
fisub
jo
jg
(bad)
inc
rcr
mov
dec
sbb
call
sbb
clc
(bad)
(bad)
(bad)
jmp
sub
xlat
ss
sub
mov
test
xor
pop
mov
cld
mov
cmp
sub
cmp
int3
pop
movs
push
fbstp
and
mov
adc
jg
xchg
and
(bad)
(bad)
(bad)
mov
cwde
gs
aad
push
outs
inc
repnz
push
adc
cmp
cli
loop
xor
test
push
mov
rol
(bad)
call
mov
or
test
int
cmp
inc
std
(bad)
fisttp
cmp
push
sar
(bad)
(bad)
enter
in
cdq
fild
inc
xchg
test
js
dec
and
jmp
js
push
pop
hlt
iret
adc
xchg
movs
jne
aad
int
fimul
call
in
xchg
and
mov
jp
sub
scas
and
push
push
out
cmp
cli
call
or
add
aas
add
inc
loop
add
cmc
or
and
inc
xor
xchg
ins
dec
cmps
ss
(bad)
(bad)
push
xor
pop
push
ret
popf
pop
xchg
popa
xor
inc
or
out
das
cmp
adc
push
daa
mov
repz
fwait
mov
push
les
test
call
inc
sbb
shl
add
cwde
(bad)
(bad)
dec
xchg
jge
sbb
and
jbe
push
xchg
ret
xor
std
outs
cli
dec
inc
js
setb
sbb
iret
in
mov
mov
(bad)
(bad)
(bad)
(bad)
in
mov
push
jne
jp
sbb
or
test
into
test
push
xchg
sub
clc
(bad)
jmp
add
and
or
inc
inc
add
je
push
clc
adc
lods
fistp
mov
leave
in
hlt
loope
xchg
inc
cmps
jle
mov
aad
mov
dec
stos
dec
push
jl
add
lods
inc
adc
clc
dec
pop
retf
xchg
test
(bad)
(bad)
(bad)
stc
and
mov
xchg
ret
fistp
hlt
sbb
jl
inc
pusha
or
dec
jge
jmp
xor
pusha
out
out
lahf
mov
and
lahf
push
jne
mov
sub
(bad)
(bad)
push
aaa
icebp
and
aad
and
push
push
fldcw
and
lods
mov
retw
xor
sub
mov
sbb
lds
fcom
mov
jmp
aam
outs
mov
sub
in
jl
mov
mov
dec
xchg
std
mul
cmp
push
mov
fwait
cwde
in
cdq
adc
xchg
push
test
sbb
test
mov
jmp
(bad)
(bad)
(bad)
call
jp
repz
sub
mov
mov
mov
or
lods
ficom
mov
sub
sub
sub
lods
iret
ins
jecxz
aaa
jbe
push
add
call
and
and
fcomip
(bad)
(bad)
cmp
dec
adc
sbb
cmp
aad
push
sbb
out
push
push
(bad)
and
mov
(bad)
fidivr
cmp
adc
inc
mov
std
or
xor
mov
call
xor
and
(bad)
sbb
inc
jg
adc
and
out
cmp
or
fld
add
fcmovnu
jns
shl
shl
jge
jae
jmp
(bad)
call
dec
mov
out
adc
cdq
mov
inc
fiadd
adc
call
jbe
and
sti
sub
or
clc
loop
fwait
jne
test
mov
push
xchg
push
mov
dec
cmp
push
push
call
js
and
mov
lods
cmp
add
(bad)
(bad)
inc
add
shl
pop
jmp
call
pop
in
and
(bad)
jg
or
cwde
js
pop
and
leave
fldenv
cmp
sub
je
xor
sar
xor
bswap
or
popa
sbb
idiv
(bad)
mov
adc
in
xor
cmc
js
sar
pop
jmp
add
dec
xchg
adc
or
mov
ds
pusha
or
lods
out
rcr
imul
rcl
dec
out
(bad)
(bad)
dec
fisubr
sub
adc
ins
push
retf
ficom
(bad)
(bad)
(bad)
inc
jne
shl
stos
leave
pop
push
xchg
stos
ror
mov
sub
ret
push
mov
or
add
aaa
cld
jg
jbe
clc
leave
jnp
sbb
sbb
sub
adc
add
loopne
(bad)
push
es
fcmovne
pop
adc
je
loope
push
cmp
fimul
mov
xor
(bad)
mov
sbb
loopne
cmp
test
pop
push
pop
push
inc
cli
pop
je
mov
cmp
dec
or
xchg
sub
(bad)
push
std
dec
sub
repz
add
push
in
jg
mov
adc
cmp
fcomip
call
daa
mov
cdq
or
sub
xor
push
movs
mov
(bad)
(bad)
(bad)
(bad)
fiadd
inc
inc
mov
rol
test
movs
cdq
add
dec
adc
adc
or
(bad)
(bad)
(bad)
mov
sbb
mov
les
das
fstp
or
push
or
push
add
jo
sbb
pop
and
arpl
mov
lea
out
(bad)
dec
inc
out
fist
and
int3
ins
iret
jnp
imul
shr
mov
fwait
add
loopne
fsubr
xor
outs
xlat
rcr
adc
sub
cs
sbb
xor
cmp
ror
or
outs
mov
xor
adc
pop
pop
test
inc
not
ffreep
pop
mov
fild
or
inc
popa
test
and
cli
jmp
addr16
xchg
adc
add
lods
xchg
hlt
jmp
gs
push
push
add
dec
add
(bad)
(bad)
(bad)
jmp
pop
push
out
pop
sbb
add
adc
adc
inc
jnp
int3
out
cvtps2pi
(bad)
(bad)
(bad)
jmp
push
ds
push
cmc
mov
or
dec
xor
in
add
or
call
xor
fsubr
inc
inc
pop
sbb
call
xlat
jno
lea
inc
jecxz
imul
push
adc
mov
(bad)
push
dec
repnz
adc
add
and
inc
js
sub
mov
jo
or
(bad)
(bad)
jg
or
(bad)
and
js
and
xor
or
or
inc
cwde
mov
push
imul
push
or
fcomip
(bad)
(bad)
cmp
cld
inc
aas
adc
and
cmp
lods
jo
in
aas
addr16
pop
mov
(bad)
jmp
cmp
out
aad
or
dec
push
sbb
cli
jno
movs
dec
rol
pop
push
xlat
imul
push
mov
mov
stos
adc
push
nop
aaa
sub
test
mov
fs
or
dec
push
cli
data16
or
cld
(bad)
inc
clc
push
mov
add
(bad)
retf
clc
fst
add
adc
call
rol
fld
sahf
push
mov
jmp
sbb
(bad)
(bad)
dec
call
mov
cmp
push
mov
ret
retf
movs
lock
ret
push
js
sub
pop
adc
(bad)
jp
push
es
mov
adc
call
call
push
dec
dec
xchg
xchg
push
loopne
fimul
and
adc
xlat
or
push
pop
fcomip
(bad)
call
jecxz
movs
sub
add
jecxz
sub
sbb
mov
call
and
add
adc
(bad)
call
sbb
cs
lock
xchg
fs
mov
gs
pop
cmp
adc
loopne
cmps
sub
clc
(bad)
or
(bad)
fsubr
rcr
call
adc
dec
dec
or
dec
xor
dec
loope
retf
inc
sbb
push
shl
sub
out
out
push
cmc
inc
and
cmp
jo
sbb
sub
add
xchg
(bad)
(bad)
and
inc
into
test
scas
daa
jae
sahf
cmp
cmp
push
(bad)
(bad)
(bad)
dec
or
add
xchg
add
sbb
adc
mov
push
or
pop
push
lock
or
push
(bad)
push
cdq
sbb
rol
push
stos
pop
xchg
into
rcr
cld
dec
loope
inc
push
jne
jno
push
sub
and
imul
adc
(bad)
call
js
mov
out
or
add
cmp
and
adc
or
(bad)
(bad)
jnp
sub
cdq
retf
inc
outs
out
fisubr
add
mov
jne
pop
hlt
inc
jmp
sbb
push
in
xchg
les
scas
sbb
lahf
in
add
dec
jp
cmp
mov
or
(bad)
jne
mov
adc
inc
stc
xor
dec
inc
sar
dec
les
mov
adc
and
(bad)
(bad)
(bad)
push
or
jno
ds
adc
ins
mov
sub
and
(bad)
call
aam
fs
cmps
dec
test
bound
push
add
in
xor
(bad)
(bad)
(bad)
jg
push
shr
push
and
(bad)
push
push
adc
or
and
jmp
jl
add
xor
ret
cmp
(bad)
call
loopne
push
lods
mov
dec
push
scas
xchg
dec
xor
mov
fwait
js
sbb
ret
xchg
add
xchg
call
jg
dec
ds
cmps
pop
pusha
add
fisubr
and
sbb
or
and
and
shl
jmp
(bad)
or
lea
test
pop
xchg
adc
mov
call
call
mov
rcl
scas
pop
int
sbb
inc
cmp
jmp
push
pusha
mov
pop
sbb
or
xchg
cmp
(bad)
jmp
sub
jl
add
adc
repz
pop
xchg
clc
ins
push
int3
out
(bad)
(bad)
jmp
(bad)
shr
sbb
pop
sbb
mov
dec
sub
ja
dec
inc
and
push
movs
(bad)
(bad)
push
or
call
xor
mov
xchg
adc
cld
jge
jle
push
in
(bad)
mov
enter
adc
fcmovb
movs
lock
mov
(bad)
into
sub
and
(bad)
(bad)
(bad)
jle
fiadd
and
mov
rcr
sub
jge
test
dec
ret
mov
mov
jg
pop
rol
sbb
xor
retf
xchg
pop
jmp
fnstcw
cmp
add
ss
cmp
clc
cmp
inc
dec
mov
mov
cmps
call
pusha
cmp
or
dec
movs
mov
in
sub
(bad)
(bad)
(bad)
inc
shl
fmul
and
dec
jl
test
rol
cmp
lock
jo
cli
call
inc
inc
mov
(bad)
(bad)
inc
adc
add
call
mov
shl
(bad)
(bad)
fild
rcl
fbld
push
push
repz
xor
and
jl
rcr
push
clc
inc
xor
mov
add
adc
mov
push
mov
mov
shl
shl
inc
xor
add
and
movs
nop
and
(bad)
(bad)
(bad)
(bad)
or
je
mov
xor
imul
or
adc
and
xor
outs
(bad)
(bad)
dec
aam
cmp
push
aam
pusha
fld
sub
push
or
adc
mov
mov
add
dec
(bad)
call
imul
nop
ret
jmp
add
mov
dec
ret
stos
stos
jne
pop
jle
dec
and
(bad)
(bad)
call
xchg
hlt
movs
ins
ret
push
in
cmp
pop
je
sbb
(bad)
jmp
and
adc
push
clc
cmps
ret
push
jbe
js
aam
movs
aaa
add
xor
xchg
dec
scas
in
or
jge
jge
ret
into
mov
imul
dec
(bad)
(bad)
push
out
pop
or
mov
mov
sub
mov
loope
add
(bad)
jg
jmp
push
call
les
xor
or
cli
les
(bad)
mov
inc
pop
jne
pop
mov
inc
loop
(bad)
jmp
cmp
mov
add
lock
sub
sub
lock
call
bound
jmp
(bad)
pop
or
xor
sbb
(bad)
(bad)
call
xor
dec
cmp
and
or
stos
popa
pop
mov
xor
hlt
arpl
(bad)
call
imul
pop
or
sub
cmp
xor
dec
clc
jae
dec
pop
(bad)
cmp
mov
cwde
inc
lds
in
call
mov
sar
icebp
popa
push
lods
xlat
sbb
push
neg
or
sbb
shl
lea
clc
(bad)
fbstp
add
sub
mov
push
ins
in
pushf
jmp
and
es
mov
(bad)
retf
pop
and
lods
cmp
xchg
adc
cmp
(bad)
(bad)
(bad)
call
and
or
aaa
rcl
xor
js
shl
gs
inc
jne
xchg
pop
sbb
pop
ret
ror
and
clc
cmp
(bad)
(bad)
jmp
movd
sub
out
sbb
inc
bound
adc
push
sti
adc
mov
sub
(bad)
sub
push
(bad)
(bad)
jg
sbb
ja
adc
scas
pop
lock
cmp
dec
pop
jmp
cs
das
sbb
sub
dec
inc
mov
push
(bad)
je
adc
pop
pop
sbb
sbb
or
xchg
or
pop
and
clc
mov
dec
dec
pop
(bad)
xor
inc
push
iret
adc
loope
js
(bad)
push
or
xchg
(bad)
(bad)
(bad)
push
adc
pop
paddsb
adc
xchg
sahf
or
leave
aam
lods
xchg
ret
lahf
cld
(bad)
(bad)
call
std
es
icebp
test
jmp
ss
stc
jnp
ret
sbb
mov
sbb
fcomp
jo
daa
test
jmp
or
xbegin
fild
movs
or
sar
(bad)
inc
mov
add
push
lock
mov
cli
push
sub
sub
rcl
int
sbb
lods
mov
(bad)
mov
jge
inc
sbb
sahf
pushf
por
cmp
call
push
test
dec
xchg
push
std
dec
xlat
fdiv
jns
sbb
sub
dec
sub
xor
dec
test
add
or
pop
xchg
shr
mov
xor
push
adc
test
xchg
sub
pop
sub
das
mov
icebp
dec
mov
fprem
add
fdivr
(bad)
(bad)
push
jp
nop
rcl
dec
lea
scas
das
icebp
stc
sbb
jmp
inc
sbb
xchg
jg
neg
xchg
fwait
test
pop
mov
pop
mov
xor
(bad)
mov
leave
jno
and
jo
jns
mov
push
xor
pushf
fadd
imul
push
cmp
cwde
mov
add
jmp
jo
cmp
jl
clc
adc
and
fdivr
add
xor
push
jb
(bad)
mov
daa
pop
jb
repz
pop
push
call
cwde
sti
enter
lock
and
fstp
jle
cmp
das
inc
inc
(bad)
(bad)
jmp
mov
pop
mov
and
rcr
nop
adc
xor
(bad)
call
adc
and
out
pop
test
push
jno
xor
pop
sbb
call
dec
cmp
sub
xchg
xchg
sbb
push
(bad)
cmp
xchg
lock
dec
shr
out
outs
xchg
sub
pop
or
inc
lods
scas
mov
add
mov
pop
aam
add
jbe
leave
or
rcl
cwde
xchg
xor
push
aad
and
ss
cld
jg
inc
or
out
sbb
jg
add
sbb
mov
and
(bad)
call
imul
and
loopne
leave
adc
mov
push
pop
xor
or
or
loopne
cwde
loope
test
inc
jnp
adc
pop
loop
adc
adc
(bad)
xchg
or
mov
(bad)
into
jmp
mov
add
(bad)
push
push
js
inc
mov
adc
jb
push
fmul
popf
jno
jg
sub
jb
imul
(bad)
(bad)
jmp
and
xor
out
cmp
sbb
or
aam
dec
and
dec
and
mov
pop
mov
jae
fdivr
cmp
jmp
sbb
sbb
inc
push
loope
xchg
movs
test
mov
pop
out
mov
add
retf
cmp
inc
mov
mov
ins
popa
and
sbb
or
je
mov
pop
mov
cdq
push
(bad)
dec
cmp
std
jo
gs
dec
mov
(bad)
(bad)
(bad)
mov
xor
xor
mov
inc
xchg
mov
ror
(bad)
mov
xchg
jno
bound
xchg
pop
aam
sbb
cmp
sub
pop
leave
dec
lock
fsubr
nop
pop
les
jmp
mov
in
pop
pop
push
xchg
pop
rol
prefetcht1
jle
cmp
fdiv
(bad)
call
pop
sbb
dec
jge
mov
xor
push
add
cwde
sub
inc
addr16
pop
and
loopne
hlt
(bad)
(bad)
mov
shr
jne
add
add
lods
(bad)
mov
lods
fisttp
(bad)
dec
test
jmp
mov
test
and
sbb
(bad)
(bad)
call
(bad)
xor
call
js
push
aam
mov
(bad)
xor
push
fnstsw
dec
mov
xor
or
mov
(bad)
jmp
fidiv
adc
mov
xchg
arpl
(bad)
(bad)
jmp
popa
aas
jo
jo
mov
ret
test
push
mov
sbb
stos
das
jne
(bad)
(bad)
(bad)
call
cmps
add
sbb
addr16
and
push
push
sahf
repz
pop
push
jae
sbb
ja
adc
sti
sub
and
sub
pop
imul
adc
sbb
(bad)
(bad)
cmp
stos
or
mov
cmp
ds
imul
call
sbb
or
and
outs
inc
dec
dec
lock
(bad)
push
sbb
sub
mov
cmp
outs
push
(bad)
inc
add
jl
mov
test
xlat
nop
ins
fdiv
pop
icebp
pop
mov
mov
aad
addr16
pop
iret
push
push
rcl
(bad)
into
push
pop
mov
ins
cmp
sub
fild
clc
enter
sbb
sbb
ret
cli
test
(bad)
jmp
pop
xchg
into
sub
inc
loop
mov
pop
push
mov
outs
sbb
shl
jmp
stos
sub
shl
add
adc
dec
push
(bad)
(bad)
(bad)
push
cmps
jo
sbb
dec
popa
mov
push
adc
jne
push
scas
cmps
mul
jg
push
pop
or
push
jmp
pushf
test
inc
or
cmps
(bad)
mov
add
movs
pusha
or
shr
mov
xchg
mov
push
hlt
je
xchg
pop
mov
sbb
rol
loop
mov
lods
retf
cdq
mov
(bad)
jmp
gs
mov
dec
inc
inc
mov
(bad)
(bad)
dec
push
jne
add
push
retf
inc
int
popa
sub
add
fcomip
pop
push
and
lahf
iret
sub
inc
add
mov
cmps
aaa
inc
(bad)
call
inc
clc
inc
and
lods
pop
and
cmc
(bad)
(bad)
(bad)
mov
(bad)
mov
jnp
cmp
mov
es
inc
gs
repnz
nop
ins
mov
push
sbb
(bad)
xor
and
add
rol
clc
sbb
inc
push
mov
popf
out
(bad)
cld
lea
in
xor
xchg
pusha
jp
jg
adc
xchg
dec
mov
(bad)
jmp
pop
or
add
push
call
or
push
bswap
loope
mov
dec
dec
clc
add
stos
mov
mov
push
pop
sub
movs
lock
jmp
dec
outs
pop
rcl
mov
xchg
(bad)
mov
call
(bad)
fild
nop
pop
jb
inc
cmps
mov
test
aad
movs
int
retf
jmp
adc
or
add
icebp
sahf
add
sbb
(bad)
(bad)
jmp
sub
mov
cmp
add
pop
push
add
mov
sub
test
inc
int
adc
loop
jge
rcr
dec
or
pop
xchg
inc
push
inc
gs
mov
retf
inc
icebp
sbb
and
jp
add
and
and
mov
pop
jmp
es
lea
movs
pop
xchg
invd
inc
outs
ret
pop
sub
mov
rcl
add
sbb
sbb
(bad)
(bad)
cmp
sub
lahf
pop
adc
xor
mov
(bad)
fild
and
dec
jb
imul
fwait
jg
sbb
dec
test
push
rcr
icebp
fcomip
jmp
adc
adc
mov
dec
(bad)
cmp
inc
mov
fild
fstp
push
imul
lock
mov
add
mov
lds
sti
sbb
jl
xor
int
add
dec
pop
clc
in
jg
or
(bad)
hlt
(bad)
loopne
push
enter
xor
xor
shl
sbb
call
repnz
sub
sub
cmp
mov
add
add
mov
(bad)
(bad)
(bad)
jg
rcr
inc
fs
loope
mov
mov
lea
and
mov
pop
(bad)
(bad)
(bad)
push
sbb
push
sbb
adc
enter
sub
cmp
and
and
push
or
dec
adc
and
mov
retf
cmp
add
xchg
sbb
mov
outs
nop
push
push
ret
mov
dec
pop
and
ins
in
pop
test
in
(bad)
(bad)
inc
push
ins
shl
inc
dec
pop
(bad)
hlt
ins
add
fild
pop
in
shr
or
cmp
inc
adc
or
scas
and
cmps
call
adc
pop
jmp
scas
inc
adc
and
adc
mov
mov
loope
cmps
mov
ins
mov
repz
and
aam
ds
mov
fwait
push
pop
enter
jge
mov
pop
push
jmp
loopne
inc
and
sub
mov
(bad)
inc
imul
mov
nop
aam
scas
aam
rol
scas
xlat
(bad)
aad
mov
pop
(bad)
jmp
xchg
movs
jbe
(bad)
fisttp
mov
into
lock
test
fsubr
sub
(bad)
(bad)
dec
xchg
je
lea
icebp
or
sbb
adc
or
jno
pop
mov
mov
(bad)
call
jae
pop
xlat
rcl
pop
stc
inc
loope
fdivrp
(bad)
(bad)
call
addr16
(bad)
push
pop
and
cmp
bound
ss
adc
inc
cmp
xchg
outs
adc
sahf
adc
add
call
pop
and
mov
or
sub
rol
jne
jg
(bad)
loop
(bad)
dec
mov
jo
popa
inc
jnp
sub
cmps
ss
mov
or
mov
adc
and
(bad)
(bad)
out
clc
push
and
mov
nop
xchg
es
lods
mov
ror
push
(bad)
lods
push
daa
int
in
ss
sbb
and
adc
dec
adc
sub
jmp
jmp
(bad)
pop
ret
lahf
mov
cmp
das
or
lahf
loope
test
(bad)
(bad)
(bad)
ficom
jp
xor
and
or
mov
sub
inc
rol
mov
xchg
mov
and
mov
cmps
mov
jecxz
inc
mul
jno
adc
aad
fcmovb
jbe
pop
ficomp
(bad)
shl
sbb
or
fld
push
aas
or
xor
retf
add
jmp
push
fs
(bad)
cdq
or
fistp
pushf
jbe
adc
mov
sbb
je
and
dec
inc
imul
inc
mov
in
push
pop
push
fild
pop
js
lods
call
jmp
es
aas
add
push
pop
lods
rcl
mov
(bad)
jmp
call
and
cmp
test
mov
imul
jnp
shl
jg
sub
mov
jnp
jmp
call
pop
mov
inc
test
out
xchg
test
xor
data16
jb
dec
out
dec
ins
dec
or
xchg
mov
mov
js
stos
(bad)
jmp
adc
sbb
gs
push
sub
cmp
call
repnz
(bad)
movs
adc
lds
push
mov
adc
adc
pop
jb
dec
dec
dec
dec
push
clc
mov
shl
mov
push
aas
push
xchg
test
repz
xchg
imul
(bad)
dec
push
(bad)
pusha
mov
push
xor
out
push
sbb
mov
shl
inc
pusha
ins
ins
pop
std
scas
test
leave
call
iret
inc
xchg
cmp
dec
xor
push
ret
xor
pop
nop
jne
inc
test
push
lea
pop
ficomp
imul
(bad)
(bad)
(bad)
jmp
pop
inc
xchg
sbb
pop
mov
xchg
pop
fnstcw
xchg
ret
sbb
bound
(bad)
jmp
add
ins
mov
push
dec
xchg
jg
cmp
mov
pop
inc
mov
lock
mov
(bad)
(bad)
(bad)
mov
cwde
pop
fadd
std
scas
mov
int
mov
dec
jae
(bad)
nop
add
data16
mov
and
and
(bad)
push
adc
je
int
mov
call
(bad)
jo
das
add
or
add
(bad)
shr
std
adc
inc
xor
pop
jnp
sbb
or
out
scas
or
bound
pop
dec
or
pop
fcmovnbe
and
pop
sbb
loope
jo
mov
(bad)
push
add
fcom
je
mul
xchg
adc
xchg
jl
sti
or
aam
lock
(bad)
call
in
popa
aaa
xor
fnstcw
cmp
fwait
and
xor
pextrw
push
mov
and
fnsave
(bad)
mov
outs
mov
fcomp
in
or
(bad)
call
push
pop
mov
adc
test
cmp
sbb
pop
fs
adc
or
icebp
sub
aam
sbb
int3
stos
outs
dec
in
dec
lock
jmp
lahf
pop
out
in
ins
adc
test
jmp
cmp
lea
(bad)
mov
jno
mov
push
dec
call
cmp
pushf
dec
or
xor
push
jns
fld
xchg
mov
cld
sahf
sbb
sbb
movs
push
cmp
cmp
clc
jg
jmp
mov
xchg
cmp
add
jo
add
jae
bound
(bad)
jg
outs
mov
std
mov
pop
xchg
push
inc
scas
dec
clc
xor
(bad)
(bad)
dec
xchg
and
add
movs
and
dec
mov
outs
pop
and
inc
push
mov
cmp
add
push
and
sub
lock
pop
fs
pop
inc
ror
(bad)
(bad)
cmp
pop
mov
dec
inc
mov
js
cli
cmp
stos
enter
out
cli
mov
add
cs
sub
iret
add
inc
sbb
pop
or
(bad)
dec
inc
cld
ret
mov
neg
and
sub
clc
call
mov
mov
add
xor
cdq
(bad)
bound
sub
jmp
push
shr
hlt
pop
pop
bound
and
(bad)
inc
cmp
inc
daa
and
fistp
pop
add
sar
inc
cs
mov
das
push
retf
(bad)
(bad)
fild
pcmpgtb
push
or
xchg
xchg
jge
dec
or
and
(bad)
(bad)
inc
pop
pop
add
pop
dec
add
push
jl
js
shl
nop
adc
push
adc
bound
pusha
sub
test
or
arpl
inc
test
mov
cmp
cli
inc
dec
xor
ja
cli
jmp
mov
dec
test
jle
pop
cs
(bad)
dec
mov
pop
aad
rcr
int
xchg
xor
sub
faddp
dec
test
inc
xchg
aam
adc
mov
mov
das
xor
mov
loop
mov
push
popf
les
ret
dec
dec
mov
inc
popf
dec
mov
and
dec
jg
and
jmp
mov
es
jge
dec
sbb
(bad)
(bad)
jmp
pop
dec
pop
xor
ins
cmp
addr16
push
add
sbb
addr16
das
mov
adc
inc
jo
pop
dec
ret
je
or
xor
push
or
call
sbb
loop
add
stos
jmp
inc
mov
cmp
mov
std
(bad)
jl
dec
jmp
mov
xor
aaa
dec
pop
loopne
jg
pop
sbb
sbb
cmp
loop
mov
sub
pop
loopne
fcomp
clc
inc
xchg
dec
scas
jg
jmp
sbb
mov
xor
inc
inc
mov
sub
sahf
cld
cmp
jp
sbb
sub
or
or
pop
sbb
xor
and
pushf
add
and
imul
add
inc
mov
imul
ja
sub
mov
fmul
test
dec
repnz
sbb
xchg
or
or
push
sti
cld
(bad)
call
inc
jmp
sub
sub
jmp
and
mov
xor
lock
sub
pop
ja
add
inc
jmp
shl
stos
(bad)
(bad)
(bad)
jmp
sub
xchg
or
pop
add
loope
inc
inc
pop
pop
and
and
(bad)
xlat
inc
adc
xor
add
mov
(bad)
(bad)
jg
js
mov
inc
xor
cmp
cmc
aas
arpl
(bad)
jg
and
dec
shl
push
ss
pop
movs
cmp
push
cld
and
inc
push
adc
jno
mov
cs
mov
jne
sub
or
stc
sub
xor
cdq
mov
jle
idiv
inc
fild
adc
mov
pop
jo
les
jg
push
pop
jmp
push
ret
call
call
jae
int3
dec
js
inc
add
in
push
fld
pop
and
fiadd
imul
es
push
push
(bad)
fbld
sbb
xchg
add
and
call
inc
add
out
test
ds
icebp
jg
mov
pop
jae
mov
clc
inc
and
int
(bad)
(bad)
inc
sbb
pop
(bad)
xor
xchg
test
mov
mov
out
xchg
jae
sub
(bad)
mov
scas
pushf
adc
jnp
and
les
jnp
sbb
(bad)
jmp
inc
(bad)
add
sbb
call
pushf
xchg
xor
movs
dec
pop
mov
(bad)
jmp
mov
mov
sub
outs
or
add
arpl
pop
push
xor
(bad)
(bad)
(bad)
push
mov
dec
loop
dec
fstp
add
inc
mov
dec
push
das
call
jo
(bad)
(bad)
(bad)
fisub
pusha
les
and
jno
fwait
mov
lock
pop
and
aaa
repnz
sub
push
adc
jb
cld
adc
cld
(bad)
(bad)
(bad)
bound
mov
(bad)
(bad)
mov
cmp
(bad)
(bad)
jmp
xchg
ja
adc
inc
sbb
adc
push
cld
cmps
inc
mov
mov
outs
xchg
cmp
ret
mov
dec
pushf
and
or
scas
or
push
ja
bound
sbb
mov
mov
(bad)
arpl
push
sti
call
ret
sub
mov
fist
nop
push
add
jmp
add
push
pop
mov
push
cs
mov
adc
dec
movs
pop
ret
push
retf
je
pop
or
mov
fisttp
(bad)
jmp
mov
push
jecxz
add
xor
loop
jmp
dec
cmp
xchg
cmp
dec
or
clc
fdivr
pop
ja
(bad)
(bad)
mov
mov
adc
push
aam
ficom
and
add
and
(bad)
(bad)
(bad)
inc
xchg
pop
nop
shl
ins
loopne
fincstp
sub
out
nop
mov
cmc
sbb
fadd
(bad)
(bad)
inc
mov
jl
push
cmp
mov
stos
jge
and
aas
inc
mov
dec
push
push
adc
je
retf
add
daa
loope
(bad)
push
xor
sbb
cmp
enter
outs
ss
pop
push
pop
cmp
adc
(bad)
(bad)
(bad)
mov
or
mov
fcmovne
add
push
or
pusha
aad
(bad)
scas
ja
add
(bad)
jmp
push
push
shl
push
add
shl
xchg
loopne
pop
sbb
dec
push
(bad)
mov
push
cld
(bad)
call
pop
pop
outs
or
xchg
sub
pop
mov
pop
enter
(bad)
dec
add
mov
ins
call
test
scas
mov
jmp
mov
setnp
ror
jmp
sar
sar
cld
add
xor
xchg
push
mov
mov
mov
rcl
fisttp
aam
pop
xor
dec
mov
and
stos
mov
mov
aam
lock
fimul
adc
inc
sbb
cmp
or
mov
adc
(bad)
or
js
jmp
xor
test
inc
or
add
fild
dec
pop
sub
enter
lock
stos
and
inc
or
xor
and
cwde
xlat
dec
sub
cli
(bad)
(bad)
(bad)
cli
sar
xchg
sbb
ja
int3
dec
gs
pop
out
lea
sub
gs
xchg
inc
outs
cli
aaa
rol
pop
pop
ins
xchg
cdq
xlat
sar
cmp
sbb
pop
jmp
xor
mov
adc
push
cmp
pop
sub
push
test
cld
mov
fld
(bad)
dec
data16
cmps
shl
fmul
jno
(bad)
(bad)
call
enter
loopne
mov
or
add
or
dec
push
and
xlat
jae
push
aaa
pop
(bad)
mov
(bad)
and
xor
or
dec
loopne
pop
jbe
sub
cmp
(bad)
dec
xchg
xchg
jecxz
in
cs
outs
cmp
dec
sbb
xchg
lahf
adc
and
movs
out
mov
iret
call
outs
pop
sbb
imul
dec
movs
fdiv
jo
xchg
sub
push
mov
test
mov
ret
jae
sub
adc
xor
xor
outs
add
xchg
mul
sbb
test
cmps
in
clc
(bad)
call
or
pop
in
cmp
mov
add
inc
push
(bad)
(bad)
jmp
adc
aam
aam
sbb
add
retf
adc
mov
rol
add
pop
lahf
and
and
cli
pop
dec
sbb
iret
in
(bad)
xchg
(bad)
enter
(bad)
(bad)
jmp
loop
mov
sbb
mov
xchg
aam
mov
xor
in
(bad)
dec
test
add
jae
or
fcomp
adc
mov
jo
(bad)
push
icebp
sahf
add
sub
xchg
xor
pop
in
mov
test
adc
mov
inc
add
scas
sub
sbb
mov
(bad)
fidiv
mov
dec
mov
mov
mov
jb
mov
and
or
inc
int3
inc
push
xchg
xor
(bad)
(bad)
(bad)
jg
push
pusha
mov
sbb
pusha
sbb
je
xchg
push
fs
xor
jg
(bad)
call
add
adc
ins
xor
xchg
fist
xor
movs
(bad)
(bad)
(bad)
push
mov
xchg
add
and
rcr
(bad)
or
adc
dec
inc
inc
cmps
sbb
pop
call
jmp
gs
in
lea
(bad)
inc
push
sbb
xchg
xchg
or
das
test
sbb
loop
xchg
adc
(bad)
call
xchg
mov
and
xchg
call
mov
and
inc
jns
aad
xor
(bad)
jg
pop
test
loop
test
jmp
push
pop
jmp
jo
mov
in
sub
and
popa
leave
(bad)
inc
cmp
and
aad
fld
push
call
cld
(bad)
(bad)
push
add
mov
outs
cdq
dec
adc
push
mov
xchg
or
push
movs
xor
cmp
pop
(bad)
and
mov
xchg
mov
js
jmp
and
sti
mov
mov
sub
inc
sub
xlat
sbb
pop
or
loopne
and
pop
movs
add
(bad)
(bad)
push
(bad)
rcl
push
pop
scas
jle
adc
xor
inc
inc
sub
bound
push
aas
fsubr
enter
push
cmp
lahf
pop
cmp
fild
cmps
jg
or
mov
(bad)
cld
fdiv
das
rol
movs
add
pop
jmp
lock
imul
xchg
xchg
(bad)
out
std
outs
mov
jge
mov
mov
inc
or
fisub
outs
je
sub
mov
or
mov
inc
adc
dec
or
xchg
xchg
push
(bad)
(bad)
dec
pushf
icebp
rcl
nop
or
cmps
xchg
lock
push
loop
sub
(bad)
fld
icebp
icebp
clc
jmp
add
inc
push
retf
lock
je
mov
outs
cmps
mul
or
das
push
mov
call
into
adc
xor
jle
and
(bad)
(bad)
out
dec
inc
add
xor
arpl
outs
(bad)
jg
pop
xchg
xlat
add
das
mov
pusha
mov
(bad)
xchg
test
adc
(bad)
call
aas
loop
jne
clc
je
inc
loop
pop
dec
lods
pop
nop
imul
pop
jns
mov
jne
(bad)
(bad)
push
daa
sbb
sub
cmp
test
dec
inc
bound
clc
sbb
pop
xchg
call
jne
push
out
xchg
and
xchg
mov
retf
movs
dec
jb
push
gs
(bad)
push
pop
movs
dec
xchg
imul
xchg
jmp
cwde
stos
push
add
(bad)
mov
sub
sub
mov
push
mov
adc
(bad)
dec
lock
std
and
jo
pop
mov
gs
push
nop
xchg
mov
xchg
clc
call
cs
add
(bad)
call
xor
jnp
(bad)
sub
sub
mov
jmp
in
pop
cwde
rcl
rcr
mov
retf
les
mov
in
call
mov
inc
inc
rcr
shl
jg
outs
add
push
or
in
pushf
test
xchg
dec
paddsw
mov
or
cwde
jle
data16
data16
(bad)
jg
xchg
and
add
mov
cmps
cs
lods
sub
(bad)
(bad)
(bad)
call
add
sbb
cmp
fdivr
and
cmp
jmp
dec
je
(bad)
(bad)
(bad)
push
add
push
or
movs
popf
loope
popf
sub
data16
dec
add
push
add
xchg
out
mov
sub
push
add
xchg
in
imul
ror
js
ror
cmp
pop
movs
add
adc
(bad)
(bad)
jmp
xchg
sub
mov
sbb
dec
mov
popf
ret
xchg
cld
mov
scas
test
(bad)
(bad)
(bad)
call
add
sbb
in
inc
xor
arpl
popf
inc
mov
popf
fsubr
imul
in
mov
mov
(bad)
xor
(bad)
rol
sub
push
cwde
adc
pusha
iret
ret
xchg
call
mov
mov
(bad)
xchg
pop
add
fdiv
dec
jl
add
mov
ins
pop
test
xchg
(bad)
jmp
icebp
nop
sbb
iret
pusha
test
(bad)
(bad)
call
test
repnz
int3
les
lds
ror
mov
dec
call
ret
mov
and
sbb
adc
arpl
(bad)
jmp
sub
inc
(bad)
sub
jne
push
xchg
lea
push
(bad)
(bad)
(bad)
call
add
shr
loop
retf
(bad)
(bad)
je
adc
jnp
cmps
hlt
test
mov
(bad)
(bad)
(bad)
(bad)
sub
in
pop
xor
add
outs
dec
test
jne
je
jo
jge
sub
xlat
(bad)
(bad)
(bad)
dec
push
nop
or
push
mov
test
loopne
and
(bad)
cmp
mov
mov
push
jmp
(bad)
mov
mov
adc
sbb
addr16
inc
fldcw
push
scas
outs
push
cmp
or
mov
(bad)
push
fs
add
inc
adc
les
pop
pop
lea
and
and
xor
inc
mov
jg
cmp
pshufw
adc
(bad)
(bad)
(bad)
(bad)
jl
xchg
xor
sub
int
sbb
sbb
or
sbb
cmp
fcomip
jg
mov
(bad)
cmp
lods
xchg
popf
and
into
pushf
sub
inc
sar
(bad)
jmp
imul
inc
jne
cmp
mov
mov
pop
(bad)
(bad)
mov
fsubr
ins
inc
pusha
jp
cmps
xchg
xor
inc
pop
outs
jecxz
sub
jns
mov
call
(bad)
pop
pop
or
and
dec
movs
stc
push
add
xlat
dec
xor
(bad)
(bad)
jmp
pop
dec
xchg
mov
cmp
in
inc
dec
jmp
cmc
add
adc
jmp
lock
push
daa
mov
cdq
push
(bad)
fcomip
call
push
or
push
mov
push
pop
(bad)
nop
pop
fstp
pop
fdivr
(bad)
(bad)
inc
inc
xor
push
xor
inc
xchg
loopne
inc
rep
(bad)
test
cmp
loop
push
sar
mov
xchg
mov
push
inc
cld
call
inc
xlat
leave
pop
adc
or
cmp
ins
and
adc
(bad)
(bad)
call
cdq
je
xchg
loop
push
sbb
loope
mov
mov
dec
repnz
cmp
jmp
and
mov
(bad)
call
pop
clc
sub
sbb
icebp
loopne
es
sbb
in
adc
or
and
(bad)
sahf
ror
sub
rcr
icebp
or
mov
pop
add
and
pop
sbb
(bad)
(bad)
(bad)
dec
mov
add
adc
int
push
inc
adc
imul
jbe
dec
arpl
clc
stos
(bad)
dec
ja
adc
or
dec
xchg
jmp
je
lds
outs
mov
cmp
loope
stc
adc
add
adc
sub
or
gs
jmp
daa
dec
lds
lods
out
(bad)
jg
jmp
mov
sar
add
adc
jbe
rol
mov
inc
adc
cmps
sbb
cmp
(bad)
(bad)
jg
or
les
push
xchg
adc
cmp
xchg
push
iret
cmp
adc
fild
popa
cmp
fwait
stos
bound
shr
call
and
jmp
dec
loope
pop
or
out
xor
xor
(bad)
(bad)
(bad)
(bad)
fild
lds
cmp
sub
js
xor
mov
(bad)
(bad)
(bad)
call
sub
mov
out
sub
nop
push
inc
push
and
or
push
sbb
push
mov
push
adc
cdq
scas
retf
ret
add
fisttp
aas
(bad)
jb
xchg
adc
ret
fbld
adc
fsub
test
cld
(bad)
dec
xchg
call
pop
sbb
ins
xchg
pusha
lods
and
jmp
pop
push
or
or
sub
frstor
sub
mov
jne
(bad)
jmp
cdq
pusha
pop
fcomp
int3
inc
jo
inc
fistp
push
xchg
pop
pop
xchg
cmps
test
xor
call
jg
dec
ret
imul
cwde
daa
call
dec
or
(bad)
(bad)
dec
popa
sbb
adc
aam
sub
xchg
stos
ins
ret
inc
mov
iret
aam
aad
ins
loopne
adc
inc
test
dec
jle
mov
ja
(bad)
imul
push
bound
xchg
xchg
test
(bad)
xlat
mov
mov
repz
xor
mov
movs
sbb
mov
fbstp
add
jge
jno
mov
in
sub
lods
xchg
das
dec
sbb
xchg
idiv
daa
inc
loope
inc
popa
(bad)
sbb
pusha
and
mov
push
xor
sub
cmp
(bad)
(bad)
call
dec
les
xor
mov
and
test
pop
mov
aas
xchg
inc
(bad)
das
loopne
cld
(bad)
(bad)
jmp
xor
mov
jmp
stos
cdq
shl
in
push
jne
enter
push
repnz
les
lock
xor
adc
xor
imul
ret
cwde
sub
lods
fwait
push
add
lods
sbb
adc
add
shl
outs
and
push
sbb
call
xchg
push
les
add
ret
pop
ins
sbb
mov
(bad)
(bad)
push
daa
and
mov
mov
xor
add
sbb
int3
imul
pop
cli
ficomp
mov
jmp
(bad)
call
nop/reserved
movs
aas
sbb
test
(bad)
in
add
and
fcmovnbe
pushf
daa
das
(bad)
jg
dec
sbb
ins
xchg
inc
call
pop
inc
lea
mov
or
xor
clc
jmp
mov
adc
int
mov
dec
loopne
or
rol
sbb
test
ret
fs
cs
pop
add
cdq
fadd
cmp
sahf
in
retf
sar
adc
xor
jae
inc
dec
call
or
sub
add
(bad)
rcr
aas
or
dec
and
inc
adc
jmp
jno
cmc
fwait
in
aaa
pusha
xor
retf
inc
in
jge
call
jns
sub
rol
cmps
dec
mov
xor
pusha
inc
push
jge
ins
sub
mov
dec
pusha
aaa
jle
and
sbb
popf
mov
ss
(bad)
inc
dec
push
(bad)
(bad)
(bad)
inc
adc
adc
xchg
jnp
js
or
inc
je
inc
imul
push
adc
(bad)
fcomip
jmp
out
mov
push
add
rcr
into
mov
(bad)
jmp
xor
test
push
jge
inc
mov
add
lods
add
jg
xor
aam
test
and
mov
cdq
xor
xor
dec
(bad)
clc
adc
mov
jge
fs
(bad)
stos
(bad)
(bad)
call
out
inc
cmp
ret
or
outs
int
xor
dec
pop
inc
daa
adc
call
(bad)
(bad)
call
in
push
test
mov
mov
test
add
pop
inc
movs
retf
xchg
mov
(bad)
lock
cmp
pop
(bad)
dec
sbb
test
cmp
loopne
(bad)
cmp
mov
arpl
dec
add
fild
xchg
data16
inc
push
adc
sbb
rcl
mov
or
cld
(bad)
jmp
repz
sub
retf
sti
jns
enter
(bad)
fbstp
ds
adc
(bad)
xchg
or
and
adc
add
inc
mov
sbb
inc
call
mov
xchg
loopne
xor
push
nop
cmps
inc
rcl
mov
rol
ret
gs
inc
lods
outs
mov
dec
and
and
loopne
jmp
xchg
and
xor
stos
js
sub
cmp
jae
jae
les
sbb
mov
xchg
aam
sbb
es
out
cli
inc
movs
push
adc
inc
lods
rcr
jne
sub
lahf
in
xor
sbb
(bad)
(bad)
(bad)
push
cld
pusha
mov
ja
add
cmp
mov
jns
and
cmp
ret
push
mov
loopne
mov
dec
pop
aad
pushf
test
inc
inc
adc
lods
ja
(bad)
(bad)
call
nop
xor
jle
ficom
fimul
scas
mov
jmp
jmp
stos
out
cli
call
gs
call
sub
aaa
jbe
popa
or
push
clc
cmp
(bad)
push
push
xchg
imul
(bad)
pop
pop
mov
jle
cwde
ins
add
shr
(bad)
mov
mov
sahf
sub
xor
outs
mov
cmp
jp
loop
lods
(bad)
and
add
test
mov
(bad)
(bad)
mov
adc
push
cmp
dec
ja
pop
(bad)
scas
and
dec
pop
aas
jmp
(bad)
dec
add
pop
or
addr16
in
mov
rol
mov
push
(bad)
(bad)
(bad)
mov
xor
test
loop
push
jbe
sub
jne
fwait
xchg
ret
sbb
mov
(bad)
dec
pop
dec
(bad)
xchg
out
jne
movzx
nop
cdq
lock
fcomip
add
(bad)
cmps
(bad)
jmp
lds
push
daa
hlt
push
(bad)
mov
or
div
inc
xchg
push
enter
dec
sbb
jmp
hlt
xor
int3
je
or
cmp
push
xchg
or
data16
(bad)
(bad)
(bad)
jmp
or
fs
sti
pop
add
mov
mov
sar
(bad)
add
sbb
mov
mov
pop
dec
mov
scas
push
dec
dec
lsl
(bad)
fnstenv
and
or
xchg
lock
fild
out
je
push
xchg
jecxz
xchg
ficom
(bad)
(bad)
(bad)
inc
in
or
pop
lahf
iret
adc
adc
js
or
cmps
nop
inc
repnz
aas
(bad)
(bad)
(bad)
push
add
mov
test
or
enter
add
xchg
arpl
adc
(bad)
(bad)
(bad)
cld
adc
adc
fldcw
lods
test
int3
lahf
push
cmp
out
out
push
dec
cwde
mov
dec
mov
sbb
jmp
sub
mov
xor
sub
xlat
call
inc
pop
inc
popf
mov
sti
or
loop
mov
adc
sbb
push
cmp
ret
fwait
(bad)
xchg
pop
ror
dec
xchg
cld
stos
add
daa
inc
push
call
sub
add
ins
jmp
adc
lahf
mov
js
nop
test
xchg
lods
add
or
leave
push
xchg
push
or
(bad)
call
scas
daa
mov
dec
mov
and
(bad)
(bad)
(bad)
mov
dec
or
es
or
mov
mov
adc
sbb
scas
xor
and
(bad)
(bad)
(bad)
call
ss
and
adc
enter
cmps
mov
mov
fisttp
adc
ficom
or
pop
xor
in
ss
outs
add
in
in
cmps
xor
das
clc
test
sub
(bad)
(bad)
mov
sbb
dec
jmp
cmp
inc
adc
mov
lods
ins
adc
ja
scas
cmp
jmp
or
jmp
jl
pushf
push
push
jae
sub
or
in
add
jae
xor
mov
ror
mov
mov
mov
lds
mov
mov
push
and
lock
shr
push
imul
cmp
(bad)
jmp
stos
aad
jno
ins
loope
inc
in
xor
inc
outs
xor
pop
sub
adc
mov
(bad)
(bad)
(bad)
dec
or
push
and
addr16
pop
push
aam
jbe
pop
sbb
xchg
pop
(bad)
mov
sar
cld
(bad)
(bad)
call
imul
rol
and
and
mov
xchg
xor
sbb
jg
sub
adc
mov
mov
inc
jg
adc
sbb
iret
enter
imul
adc
dec
in
add
cmp
(bad)
(bad)
(bad)
(bad)
inc
adc
in
jecxz
das
iret
int3
stc
add
call
je
fld
fidivr
fiadd
ins
add
mov
je
aaa
adc
sub
(bad)
jmp
and
and
nop
cmp
mov
mov
pop
jmp
hlt
mov
jmp
sbb
mov
mov
dec
mov
lods
leave
xor
jge
fwait
push
bound
dec
(bad)
(bad)
jmp
adc
lahf
or
sbb
mov
call
scas
pop
lea
(bad)
sbb
lahf
data16
mov
xchg
les
loop
push
aad
test
cmp
add
(bad)
mov
call
sbb
push
mov
xor
cld
add
outs
enter
les
mov
xor
mov
cmp
scas
push
jns
mov
mov
or
enter
sahf
sub
push
jp
sub
call
pop
pop
outs
lea
mov
js
mov
movs
jle
and
jnp
sbb
or
or
mov
xor
movs
sub
cld
pop
or
cmp
(bad)
(bad)
(bad)
push
sbb
test
add
adc
jbe
jmp
int
outs
push
pop
stos
jg
dec
add
push
or
ins
fdiv
pop
(bad)
inc
cld
push
ror
push
xchg
push
ins
hlt
dec
and
sti
xor
and
cmp
retf
push
je
push
or
test
cmp
invd
jbe
test
das
ss
mov
mov
pop
std
dec
pop
sbb
mov
shl
add
(bad)
jg
jnp
inc
add
aaa
fsubr
or
mov
push
mov
dec
aad
mov
add
clc
add
inc
inc
cli
mov
ds
dec
cmp
xchg
dec
push
(bad)
push
cdq
adc
xor
jo
jmp
sub
stos
jne
push
test
outs
xchg
ror
push
aaa
push
xor
les
popa
xor
mov
cs
mov
sub
jg
sub
xor
inc
ret
xlat
(bad)
mov
add
(bad)
(bad)
inc
js
test
(bad)
and
or
jb
icebp
jmp
(bad)
jg
sbb
lock
add
iret
lock
inc
sti
push
cmp
cmp
inc
xchg
ss
xchg
sbb
arpl
adc
les
add
adc
jo
dec
popa
sbb
cmc
mov
push
daa
ret
(bad)
(bad)
jmp
in
imul
or
and
bound
inc
push
fwait
pop
cmp
and
or
mov
lock
repz
push
(bad)
inc
clc
push
add
mov
ins
adc
mov
and
jmp
add
loopne
mov
cmps
movs
add
sbb
(bad)
jo
xor
in
xchg
adc
lock
push
sar
mov
cmp
inc
jo
rcr
and
inc
mov
mov
push
enter
xchg
xor
leave
mov
xchg
pusha
or
dec
hlt
icebp
pop
adc
adc
mov
scas
mov
push
add
sar
loope
inc
xchg
inc
(bad)
fxch
rol
call
pop
pop
pop
sbb
push
cmps
imul
sbb
inc
mov
add
in
push
aaa
sub
mov
cli
(bad)
call
pop
lahf
add
lods
movs
and
mov
and
and
daa
movs
fisttp
pop
adc
jle
jmp
movs
add
dec
sbb
push
adc
sbb
fsubr
(bad)
(bad)
(bad)
and
push
jae
js
lock
mov
pop
dec
sub
inc
(bad)
(bad)
dec
mov
lea
jae
adc
pop
sub
rol
sti
mov
adc
inc
push
add
cmc
adc
cwde
es
inc
retf
mov
cmp
mov
or
ja
bound
sub
(bad)
push
xchg
iret
cmp
xchg
pusha
push
or
sub
lods
jmp
xor
mov
ins
cdq
xchg
xor
nop
js
add
add
mov
(bad)
in
nop
push
das
cld
(bad)
out
clc
dec
int3
cmp
push
pusha
xor
les
inc
mov
ret
adc
hlt
pushf
cmc
mov
sub
sbb
fbld
mov
adc
push
jb
ins
cld
(bad)
call
loopne
inc
xor
mov
push
pop
jle
pop
rcl
mov
mov
and
repnz
jmp
pop
in
out
pop
mov
sbb
mov
inc
push
mov
retf
jne
es
retf
sbb
xlat
in
test
(bad)
jg
mov
dec
fcomp
xor
(bad)
jnp
repnz
push
hlt
pop
xor
and
(bad)
aas
push
data16
dec
inc
sbb
test
call
or
cld
(bad)
jmp
sbb
or
dec
aaa
cmp
ds
mov
es
xor
aas
fdivr
les
out
mov
(bad)
jmp
cmp
fild
pop
ret
push
arpl
dec
xor
add
dec
in
push
push
inc
xchg
xlat
(bad)
sub
xchg
js
(bad)
cmc
add
jmp
and
mov
(bad)
(bad)
(bad)
jg
aad
mov
dec
imul
arpl
xor
or
ins
jl
jmp
xlat
mov
sbb
aaa
xchg
add
lods
xchg
xor
iret
fisub
or
(bad)
(bad)
inc
ret
mov
retf
and
add
jno
or
or
daa
inc
pop
aaa
lds
not
xor
add
jne
(bad)
fild
lods
mov
push
icebp
sbb
into
test
or
pop
jne
inc
pusha
int
loopne
dec
mov
push
add
cs
or
in
fisttp
loopne
dec
clc
jmp
cmps
or
and
call
push
cmp
into
nop
ror
pop
jb
outs
adc
aas
sub
rol
gs
(bad)
mov
add
rcl
ret
dec
fild
call
orps
mov
enter
test
movs
adc
cmps
je
in
inc
loope
lock
(bad)
(bad)
dec
das
mov
push
push
or
imul
xlat
cmp
fsub
(bad)
(bad)
(bad)
jmp
sub
movs
dec
pop
sbb
sub
xchg
inc
movs
add
sbb
sub
call
pop
les
test
push
jno
push
and
popf
mov
ja
mov
mov
nop
and
data16
xor
and
xor
mov
or
jp
jbe
xchg
cmp
push
pushf
dec
pop
(bad)
(bad)
(bad)
jmp
mov
dec
das
adc
mov
xor
jnp
iret
nop
pop
pop
mov
xchg
push
(bad)
jmp
popa
xchg
lock
sub
jno
aam
pop
popa
adc
inc
pop
bound
test
out
push
push
mov
inc
pop
push
xlat
jb
xchg
sti
imul
xor
or
dec
xchg
sub
push
test
ss
leave
dec
test
dec
(bad)
stos
or
xchg
lea
jmp
or
and
add
adc
ficom
sbb
xchg
scas
pop
data16
adc
xchg
add
(bad)
jg
adc
push
push
adc
mov
and
mov
das
cmp
retf
sbb
outs
cmps
icebp
jmp
sub
fiadd
cmp
pop
lods
push
aam
aad
or
idiv
push
sub
add
mov
pushf
sbb
stos
imul
les
adc
(bad)
(bad)
(bad)
(bad)
inc
and
test
lock
lods
in
add
jl
inc
cli
xor
xchg
dec
lock
and
xchg
and
loope
add
pop
push
and
and
xor
in
inc
or
pop
test
or
push
and
sbb
xor
(bad)
(bad)
(bad)
jmp
(bad)
sub
xchg
stos
push
add
sub
jo
dec
adc
in
fisttp
adc
inc
sar
and
stos
cmp
pop
push
jg
or
inc
push
add
pop
jno
mov
out
or
outs
pusha
popa
push
stos
outs
lahf
inc
cmp
mov
in
fisttp
cmp
cmp
adc
jg
shl
and
sbb
(bad)
cld
(bad)
jg
push
sub
inc
inc
jae
cmp
dec
sbb
jmp
cwde
nop
push
sbb
and
iret
call
mov
add
dec
and
pop
nop
jne
jp
dec
adc
clc
lods
add
fsubp
fidiv
pop
add
inc
pop
clc
mov
pop
and
clc
mov
xchg
add
enter
dec
push
leave
(bad)
(bad)
call
adc
sub
sbb
add
cmp
jmp
push
scas
in
and
inc
test
sbb
push
or
push
int3
mov
sub
add
cmp
inc
cmp
push
pop
add
call
in
rol
das
jne
cmps
mov
(bad)
push
call
movs
sbb
imul
cwde
and
cmp
xchg
(bad)
hlt
adc
pop
sbb
dec
sbb
es
dec
stos
adc
das
fld
(bad)
mov
repz
cmp
call
or
jns
pop
push
rcl
(bad)
(bad)
inc
xchg
adc
add
nop
aaa
sbb
adc
cwde
push
test
dec
jmp
das
sbb
cwde
les
in
imul
inc
mov
(bad)
(bad)
call
stos
xchg
test
and
test
lock
(bad)
retf
or
mov
(bad)
dec
ja
or
and
jbe
mov
xchg
neg
inc
les
add
sar
(bad)
(bad)
cmp
mov
cwde
popa
jb
clc
sbb
sar
inc
cmp
sub
call
or
fcomi
dec
push
ror
pop
das
int3
push
or
xchg
and
sbb
(bad)
(bad)
(bad)
push
add
loop
push
ret
lods
or
pop
fisub
daa
push
js
movs
in
ins
sar
(bad)
inc
xor
ficom
popa
sub
sub
sub
dec
inc
(bad)
push
add
adc
add
pop
je
jo
inc
add
cmp
inc
(bad)
call
push
ins
or
cli
inc
jne
xor
sar
int3
dec
jmp
add
sub
rol
out
cmps
test
adc
ror
mov
jnp
or
popf
add
hlt
jbe
int3
sbb
imul
mov
push
adc
cmp
inc
std
push
xchg
nop
dec
add
in
pop
add
xchg
pop
out
xor
(bad)
jnp
imul
add
add
fwait
inc
(bad)
mov
jmp
mov
movs
sub
push
(bad)
int
ss
(bad)
(bad)
push
add
sbb
fcom
add
enter
xchg
int
adc
ins
inc
ja
pop
data16
(bad)
(bad)
inc
nop
and
adc
mov
add
inc
or
ins
jns
scas
mov
or
test
jmp
cld
ret
mov
rol
enter
in
sub
scas
dec
mov
and
add
or
call
hlt
add
inc
or
jns
jg
daa
loopne
or
int3
sbb
aad
adc
sub
arpl
call
(bad)
(bad)
fild
pop
and
add
jmp
pop
sub
xor
xor
retf
mov
(bad)
push
and
sub
jle
nop
jae
inc
push
jb
inc
cmp
fdiv
mov
rcl
(bad)
(bad)
(bad)
jmp
mov
arpl
shr
dec
mov
cwde
pop
daa
and
or
jb
hlt
cli
(bad)
(bad)
call
sbb
adc
shl
ror
add
lods
ins
(bad)
jmp
shl
push
(bad)
add
mov
test
jmp
mov
xor
push
(bad)
je
pop
icebp
mov
adc
imul
push
ret
(bad)
call
adc
ja
pop
mov
(bad)
cwde
push
retf
push
pop
fmul
push
(bad)
sub
sbb
sar
(bad)
dec
adc
dec
jnp
lock
xchg
repnz
push
push
out
out
lods
push
je
shl
repz
(bad)
call
mov
repz
pusha
hlt
test
and
mov
not
add
or
dec
ins
pusha
dec
pop
add
fldenv
inc
mov
inc
xchg
jb
fsubr
ja
(bad)
inc
adc
test
and
xchg
(bad)
(bad)
push
jp
das
cmp
ins
pop
jo
mov
dec
sub
adc
mov
push
and
jbe
push
(bad)
cld
inc
add
adc
iret
dec
psrlq
jo
push
mov
add
push
bound
lock
int
jns
rcl
aad
pop
xchg
icebp
(bad)
adc
lds
(bad)
(bad)
cld
call
or
or
or
ud1
fsubr
inc
add
or
adc
mov
push
jns
or
push
cwde
jo
dec
pop
mov
xchg
adc
dec
dec
repnz
fldcw
inc
scas
cli
jmp
inc
sbb
inc
cmc
sub
shl
lock
push
xchg
test
call
(bad)
dec
or
sbb
mov
xor
jb
jae
jae
out
and
push
inc
ret
scas
les
(bad)
(bad)
dec
rol
test
and
jae
cwde
or
xchg
je
inc
clc
lahf
int
push
jl
mov
inc
repz
enter
fisubr
add
aam
(bad)
(bad)
jmp
and
xor
mov
jo
rol
xor
or
and
jno
pop
xchg
fdiv
dec
pop
dec
cmps
xchg
leave
mov
dec
adc
inc
or
(bad)
fcomip
dec
adc
jb
xchg
fdiv
mov
lods
clc
add
test
inc
pop
shl
jmp
sub
mov
cmp
shl
jge
push
pop
push
sub
jno
sub
test
jb
sub
(bad)
(bad)
jmp
std
pushf
add
rcl
jne
sub
adc
inc
repz
(bad)
(bad)
(bad)
(bad)
jl
into
out
dec
push
popa
in
push
pusha
adc
push
adc
dec
cmp
aaa
add
sub
and
push
add
cmp
mov
int
or
mov
shl
(bad)
(bad)
mov
mov
sub
add
(bad)
lock
xor
into
or
imul
mov
in
int3
adc
inc
or
not
mov
ret
dec
retf
lods
or
add
(bad)
(bad)
out
clc
pop
sub
xchg
dec
aam
push
adc
adc
and
call
or
adc
mov
rol
ins
jae
push
je
and
push
pop
add
cmp
(bad)
jg
(bad)
jl
outs
xor
sbb
or
xchg
dec
mov
pop
adc
jae
pusha
dec
(bad)
call
call
cdq
or
in
or
mov
dec
add
jge
inc
or
ffreep
inc
add
push
pop
ins
pop
enter
cdq
jmp
dec
fidiv
nop
mov
and
or
shl
call
cmp
cmp
fadd
pop
fcomp
(bad)
js
or
scas
(bad)
out
clc
inc
ins
sbb
pusha
les
xchg
push
jmp
(bad)
jmp
ins
or
pop
inc
fmul
add
gs
adc
(bad)
jg
dec
inc
jmp
loop
mov
sub
retf
or
xchg
(bad)
inc
ror
mov
mov
xchg
inc
pop
or
popf
xchg
dec
stos
mov
sub
sbb
(bad)
call
rol
mov
(bad)
div
(bad)
fcomp
add
paddusb
mov
and
jl
mov
(bad)
(bad)
call
in
call
sbb
fs
xchg
jo
gs
enter
mov
idiv
(bad)
call
add
push
add
add
popa
jnp
add
push
xor
call
sub
push
(bad)
pusha
jmp
jg
les
mov
data16
add
(bad)
mov
jbe
fild
(bad)
(bad)
mov
cmp
and
inc
test
(bad)
or
push
shl
and
mov
sahf
sbb
mov
sar
mov
in
lea
cmps
add
(bad)
call
lods
push
or
mov
ins
mov
mov
sahf
retf
out
loope
(bad)
(bad)
fisttp
mov
and
repz
enter
(bad)
dec
es
xor
cmp
xchg
pop
mov
loope
pop
aam
and
adc
adc
cmp
sbb
shl
and
shl
mov
pop
sub
ror
ret
push
mov
rcl
xor
cmp
adc
in
(bad)
(bad)
call
std
xchg
cmp
add
call
add
jo
(bad)
(bad)
jmp
adc
aam
push
cmps
add
leave
add
mov
or
(bad)
in
loopne
enter
sub
fisttp
ror
adc
and
sub
rol
mov
loopne
cli
dec
inc
inc
lock
(bad)
(bad)
(bad)
push
or
add
fxch
jg
rcl
mov
cld
sub
clc
dec
adc
call
and
in
or
and
xchg
(bad)
call
arpl
(bad)
bound
outs
jmp
cdq
pusha
loop
or
or
push
inc
cmps
pusha
daa
pushf
call
stos
and
pop
inc
push
add
sahf
adc
sbb
push
aam
shr
add
(bad)
(bad)
jmp
adc
in
test
pop
scas
push
lock
pushf
and
mov
rol
rcl
ret
fldcw
cs
loope
call
adc
sub
loop
dec
jmp
adc
lea
mov
mov
dec
call
scas
dec
cdq
adc
cmp
inc
call
int
in
inc
add
pcmpeqw
jecxz
pop
pusha
sub
cmp
loope
rcl
and
jno
mov
retf
push
xchg
sbb
jp
hlt
inc
sub
add
ins
mov
sar
xor
mov
cmps
mov
sbb
(bad)
(bad)
(bad)
call
clc
aam
dec
jo
or
hlt
fwait
nop
mov
push
cmp
mov
mov
int3
scas
xor
pop
lock
and
and
jo
bnd
(bad)
(bad)
(bad)
(bad)
mov
adc
xchg
add
cmps
pop
movs
out
repnz
fdivr
xchg
xchg
xor
(bad)
(bad)
inc
rcl
in
or
push
iret
(bad)
ror
and
js
(bad)
(bad)
jmp
loop
push
or
cs
in
out
(bad)
cld
cmp
es
enter
(bad)
jmp
dec
out
xchg
or
ins
fild
and
cmp
adc
jmp
(bad)
(bad)
(bad)
jmp
pop
mov
xchg
xor
dec
ins
push
mov
jl
pop
mov
add
(bad)
mov
pop
inc
add
les
cs
xchg
inc
push
ficom
sbb
or
in
jmp
and
and
xchg
mov
mov
cmp
call
cli
dec
rcr
cdq
sbb
hlt
(bad)
frstor
mov
ss
or
sbb
in
mov
inc
mov
adc
lock
(bad)
std
pop
and
sbb
mov
dec
call
fisttp
je
cwde
out
push
loope
dec
inc
push
call
inc
adc
sbb
shr
in
xor
or
adc
mov
repz
stos
aam
sub
sbb
sub
or
dec
cmp
xor
(bad)
clc
xor
sbb
je
je
fdivr
jg
(bad)
jg
sub
add
or
leave
mov
sub
hlt
arpl
and
mov
and
and
xor
mov
inc
adc
leave
clc
(bad)
fidiv
xor
and
jb
cmp
jmp
mov
sar
lds
scas
dec
jmp
test
clc
(bad)
(bad)
call
jae
sub
call
call
in
fiadd
das
and
jns
push
sub
inc
add
xlat
call
sbb
shl
lods
leave
push
jge
ja
dec
cmp
and
sbb
call
jbe
push
add
outs
xchg
jmp
shl
(bad)
jmp
(bad)
ds
clc
add
and
jne
xchg
or
push
jmp
mov
mov
stc
dec
or
xor
loope
loopne
nop
push
adc
mov
cld
cmp
test
dec
(bad)
jg
movs
cmp
xchg
and
cmp
sbb
or
je
aaa
(bad)
in
cs
movs
mov
fcomip
(bad)
push
aam
jb
imul
xor
popf
dec
int3
mov
sar
mov
inc
pop
(bad)
push
test
test
fwait
(bad)
pop
cld
and
jo
jbe
(bad)
or
int3
or
mov
(bad)
dec
test
mov
pop
retf
mov
inc
mov
add
daa
(bad)
(bad)
mov
pop
in
(bad)
inc
jmp
ins
push
mov
mov
fcomip
dec
clc
adc
add
fidivr
adc
lds
(bad)
jmp
fadd
sub
cwde
add
cmps
sub
in
std
push
lock
clc
into
jle
or
add
lock
dec
push
xchg
xor
outs
hlt
pop
loop
(bad)
(bad)
call
inc
lahf
push
add
inc
movs
xor
xchg
fs
out
mov
mov
adc
or
or
fild
rcr
dec
(bad)
out
shl
mov
cmps
sbb
(bad)
jg
or
jp
and
imul
es
cmp
lock
repnz
inc
sbb
or
jmp
ret
dec
jmp
arpl
or
call
(bad)
(bad)
(bad)
mov
mov
mov
fst
call
mul
xlat
loope
jmp
hlt
cdq
pop
pushf
xor
jge
clc
nop
sbb
sbb
call
in
sbb
dec
sbb
lock
jl
xor
dec
in
push
pop
je
les
jb
push
xor
push
(bad)
ja
ror
inc
inc
mov
mov
call
sbb
cmc
pop
and
arpl
dec
xor
pop
pushf
in
shr
add
dec
aas
call
clc
and
cwde
mov
sub
pop
(bad)
call
xlat
adc
and
mov
pop
adc
add
in
into
fsubr
mov
mov
dec
popa
dec
add
dec
inc
lock
in
or
(bad)
out
(bad)
(bad)
(bad)
jmp
enter
iret
xor
in
push
clc
xchg
cmp
out
jnp
mov
push
push
sti
or
push
add
sub
aas
fstp
(bad)
cmp
sbb
inc
mov
pop
cld
test
call
and
or
xchg
outs
fdivp
or
cmp
imul
sbb
(bad)
(bad)
jmp
sbb
add
push
loop
mov
in
repnz
and
inc
cmp
(bad)
(bad)
(bad)
jmp
xchg
xor
mov
push
dec
sbb
pop
lahf
sbb
add
arpl
jp
mov
in
aad
add
out
adc
inc
pop
mov
pop
test
call
rcl
jmp
sbb
dec
sbb
mov
int3
adc
fisttp
not
(bad)
push
inc
lock
cld
cmp
cli
sub
push
in
inc
xacquire
cmp
scas
add
(bad)
(bad)
(bad)
call
push
xor
jg
dec
inc
stos
rcl
sbb
mov
loop
in
loopne
gs
or
lock
push
movs
sbb
adc
popf
out
pop
std
call
(bad)
pmuludq
cli
push
loop
inc
rep
repz
jb
pop
loope
mov
clc
(bad)
(bad)
(bad)
in
cmp
js
sbb
mov
fsub
adc
sub
ss
jge
(bad)
inc
adc
pop
xor
outs
int
add
sbb
mov
scas
and
jb
daa
lock
adc
(bad)
(bad)
(bad)
jmp
sbb
in
sbb
stc
lds
test
inc
push
in
outs
enter
sub
jmp
clc
nop
sbb
mov
inc
rol
push
enter
inc
addr16
or
dec
clc
add
rcl
dec
lock
dec
mov
hlt
mov
fisubr
inc
sub
cmp
or
jmp
cli
push
sbb
jl
and
inc
mov
xchg
out
les
call
mov
push
clc
jo
sbb
mul
ins
or
js
jo
mov
lea
adc
jne
mov
out
mov
std
or
push
lods
add
enter
or
(bad)
jmp
fsubr
or
int3
stos
or
adc
ins
scas
push
(bad)
jmp
inc
enter
or
mov
and
and
pop
rdpmc
sar
ja
call
push
ins
or
out
xchg
not
and
jns
(bad)
(bad)
(bad)
call
mov
pop
out
data16
pop
xor
lahf
push
xor
fcomp
fnstenv
(bad)
(bad)
(bad)
mov
mov
cmp
push
shl
into
inc
scas
mov
paddusb
mov
call
pop
imul
addr16
call
stos
scas
pop
pop
mov
mov
jo
sar
inc
jns
inc
or
adc
mov
inc
add
pop
dec
inc
addr16
add
cmp
or
or
adc
aam
adc
add
(bad)
(bad)
(bad)
stc
inc
xor
sbb
mov
imul
push
pusha
(bad)
cmp
and
pop
enter
xor
js
jmp
xchg
inc
imul
adc
pop
cmp
add
repz
les
xchg
stc
dec
add
inc
xor
push
scas
popa
mov
pusha
push
mov
les
adc
and
es
dec
and
rcr
inc
cld
call
ret
enter
loope
fcom
xor
mul
rcl
or
add
sar
cmps
ja
(bad)
push
adc
cli
push
lea
add
fnsave
mov
out
pushf
xchg
mov
dec
loopne
icebp
mov
ficomp
cs
xor
pop
lock
nop
inc
adc
or
gs
(bad)
push
push
and
xchg
inc
xchg
dec
push
xchg
xlat
inc
jno
retf
sub
out
xor
lods
outs
mov
call
and
popf
lea
fnsave
dec
mov
adc
das
and
ret
sti
test
std
xor
loop
idiv
(bad)
inc
cld
xor
sbb
adc
fwait
lods
xchg
push
(bad)
xchg
call
inc
(bad)
retf
fadd
fs
and
(bad)
mov
push
xor
fisttp
cmp
into
retf
dec
loop
adc
pop
std
pop
aaa
mov
xchg
sahf
jne
aad
pusha
and
dec
inc
and
call
std
xor
and
enter
pop
cmps
sahf
pop
add
and
pop
inc
dec
rcr
nop
cmp
adc
push
(bad)
addr16
adc
js
pusha
das
out
call
hlt
xchg
mov
(bad)
into
aam
das
push
push
pop
and
cmp
sbb
nop
mov
js
fs
xchg
add
retf
mov
clc
cmps
inc
sub
mov
repnz
fisttp
inc
aas
adc
ins
inc
pusha
jecxz
or
arpl
outs
cli
(bad)
call
or
sbb
add
mov
repnz
stc
push
jbe
(bad)
(bad)
(bad)
call
iret
arpl
repz
jb
push
sub
sbb
cmp
mov
pop
sbb
(bad)
(bad)
(bad)
fsubr
mov
fldenv
faddp
sub
cmp
pop
cmc
into
push
outs
cli
(bad)
dec
or
cld
mov
shl
xchg
add
mov
inc
dec
ins
movs
jne
mov
cmps
or
xchg
cmc
aam
jl
scas
or
jle
dec
fidivr
adc
add
cwde
push
mov
popa
adc
adc
(bad)
call
and
sub
push
pop
mov
xor
iret
mov
call
std
sub
xchg
cs
adc
cmp
and
mov
loope
ret
add
ror
jb
xchg
push
push
dec
pop
in
xlat
into
xor
add
aad
(bad)
or
mov
je
push
(bad)
add
into
lock
(bad)
jg
inc
movs
cs
add
sub
retf
and
adc
add
or
add
pop
repnz
add
xlat
(bad)
(bad)
call
pop
xor
add
fist
adc
or
nop
xor
movs
mov
xor
mov
adc
sub
adc
movs
mov
add
daa
icebp
nop
push
mov
sbb
inc
jb
sbb
mov
push
cmp
xchg
inc
mov
jecxz
test
or
sub
push
lods
outs
or
(bad)
(bad)
(bad)
jmp
sbb
sbb
in
or
into
inc
fst
push
jae
adc
(bad)
(bad)
(bad)
mov
inc
pop
hlt
mov
dec
adc
dec
fistp
call
fwait
sub
cmovae
and
in
loopne
mov
(bad)
fild
sti
jno
xchg
and
sub
fwait
mov
loope
add
xchg
xor
(bad)
(bad)
mov
add
push
dec
les
lods
mov
add
pop
dec
mov
call
or
push
add
mov
mov
fiadd
inc
mov
rol
mov
in
inc
cmp
dec
sahf
(bad)
(bad)
fcomip
adc
push
shl
jge
mov
inc
clc
dec
and
push
add
lea
ret
or
jbe
mov
loopne
adc
jmp
popa
adc
push
sub
mov
lea
or
call
es
xchg
call
aam
sub
push
jne
sub
mov
push
imul
(bad)
push
and
std
inc
cmp
scas
or
loopne
dec
adc
stos
cmp
or
xlat
rcl
and
and
jmp
and
xchg
jge
ins
mov
jl
es
mov
adc
ret
call
jbe
push
cmp
ret
mov
or
sbb
mov
mov
add
add
enter
xor
daa
inc
xor
(bad)
enter
test
inc
inc
out
(bad)
(bad)
jmp
rcl
pushf
aaa
movs
test
cs
movs
imul
push
push
scas
add
and
xchg
push
repnz
mov
push
dec
dec
pop
shl
pop
test
pushf
mov
jg
sub
lea
mov
inc
(bad)
(bad)
call
xchg
ins
mov
ret
pop
push
push
pop
pop
sub
xchg
scas
lods
sar
add
mov
enter
add
lods
dec
or
retf
daa
test
pop
mov
inc
jno
inc
inc
xor
push
mov
and
or
mov
dec
lock
cmp
das
outs
movs
push
ret
inc
lods
push
sub
out
(bad)
jg
or
xchg
shl
jmpw
lock
push
std
fbstp
or
and
adc
mov
fadd
cmp
sbb
loope
fisttp
sbb
adc
push
inc
mov
cs
push
test
jmp
jno
addr16
xchg
cmp
jb
loop
hlt
adc
jg
inc
jmp
adc
arpl
mov
or
jmp
pusha
outs
mov
jmp
repnz
mov
add
add
retf
cs
or
fild
dec
gs
adc
test
mov
fild
mov
xchg
mov
dec
push
sub
aas
inc
stos
fs
scas
xchg
es
push
mov
or
mov
mov
sbb
fistp
lock
call
jne
push
lods
movs
sub
je
sbb
lds
(bad)
(bad)
call
pop
adc
push
mov
or
or
push
aad
jno
jg
retf
add
inc
cmp
push
adc
inc
fisub
hlt
adc
cmp
(bad)
out
clc
hlt
call
hlt
inc
call
jns
movs
lock
hlt
(bad)
(bad)
(bad)
in
and
hlt
jns
xchg
mov
loope
fisubr
test
mov
and
adc
sbb
mov
dec
sub
call
inc
test
add
dec
neg
daa
stc
cmp
stos
mov
dec
inc
clc
dec
sub
jmp
cld
(bad)
jg
cmp
jle
or
push
mov
ins
in
rol
daa
shr
pop
hlt
push
(bad)
scas
push
(bad)
fstp
inc
les
retf
push
std
(bad)
xor
or
mov
and
and
sub
mov
push
(bad)
(bad)
(bad)
(bad)
jg
je
clc
jle
inc
xchg
aad
std
nop
push
les
mov
mov
fldenv
add
(bad)
jg
call
inc
add
or
les
jo
inc
call
les
daa
cwde
(bad)
fcom
(bad)
(bad)
inc
add
call
pop
stos
int3
inc
cli
or
and
aaa
mov
ror
outs
(bad)
(bad)
(bad)
push
aam
jecxz
adc
mov
rol
cmp
cdq
inc
rcr
fisttp
sti
inc
push
mov
push
push
push
adc
sub
jmp
clc
push
push
add
or
and
or
or
inc
xchg
mov
cld
inc
sahf
loope
mov
add
jg
inc
mov
xor
sti
inc
ret
mov
(bad)
(bad)
(bad)
inc
cs
sahf
mov
jge
bound
and
add
dec
mov
or
inc
dec
cli
dec
cmp
jne
mov
(bad)
mov
lods
in
mov
in
mov
jmp
pushf
mov
jne
and
(bad)
(bad)
(bad)
jnp
into
or
mov
shl
or
push
push
cwde
test
test
scas
arpl
cli
mov
or
and
lock
(bad)
call
cwde
fwait
xor
jns
cmps
imul
pop
sbb
sub
pop
adc
pop
push
add
xchg
pop
ret
call
fadd
dec
pinsrw
jmp
push
das
clc
(bad)
dec
cdq
xchg
fcomp
adc
and
mov
sbb
fldcw
push
inc
inc
cli
xor
sub
or
and
ja
inc
popa
inc
lods
cmc
je
cmp
mov
loopne
popa
in
inc
dec
loope
mov
lods
in
add
icebp
push
sbb
push
cwde
sub
mov
adc
inc
(bad)
and
mov
sbb
add
inc
xchg
and
and
fs
mov
in
mov
or
xchg
test
sub
enter
(bad)
(bad)
inc
sub
std
aad
retf
pop
movnti
sbb
iret
cld
pop
mov
jg
inc
imul
or
cmp
dec
cmps
das
add
inc
out
clc
(bad)
(bad)
jmp
retf
sbb
daa
cli
popf
adc
stc
adc
cs
fs
add
inc
add
clc
add
ins
jmp
cld
stos
into
jbe
call
adc
sbb
push
mov
and
add
add
(bad)
(bad)
fld
sbb
test
jno
or
push
mov
(bad)
cmc
(bad)
movs
jns
pusha
clc
sbb
or
(bad)
(bad)
call
adc
or
icebp
dec
sbb
out
ret
icebp
mov
mov
dec
jmp
push
dec
xor
or
movs
or
adc
jmp
xchg
pusha
mov
jg
adc
out
adc
test
mov
xlat
(bad)
jmp
adc
adc
mov
js
and
movs
scas
inc
dec
add
adc
inc
call
(bad)
call
adc
add
ja
fild
cld
and
ret
data16
or
pop
dec
pshufw
call
and
xlat
push
push
je
gs
dec
jne
mov
lock
rcl
inc
cld
mov
fwait
inc
mov
ds
sub
stc
add
ret
push
bound
or
add
(bad)
call
hlt
push
test
aad
(bad)
push
push
leave
je
inc
mov
push
(bad)
(bad)
(bad)
call
lock
and
sbb
mov
sbb
jmp
jl
imul
add
pop
sub
push
push
mov
mov
sti
nop
adc
cmp
(bad)
(bad)
(bad)
jmp
fidiv
fs
ds
out
in
lods
pop
repnz
repz
pop
sbb
mov
fstp
pop
fisttp
push
fistp
add
int
sbb
jge
daa
xchg
ins
loop
or
daa
mov
dec
out
pop
xor
test
and
mov
(bad)
inc
sub
int3
rcr
and
adc
cmp
sar
(bad)
(bad)
(bad)
(bad)
out
push
scas
and
daa
test
pop
sar
push
push
cmps
push
fdiv
add
fst
xchg
clc
(bad)
(bad)
aas
adc
dec
ret
cmc
sar
ret
or
or
(bad)
inc
mov
inc
push
repnz
pinsrw
or
adc
addr16
jns
adc
(bad)
call
pop
call
and
rcr
mov
sub
or
(bad)
push
jnp
jg
movs
push
push
daa
mov
sahf
(bad)
xor
out
and
(bad)
jg
dec
and
sbb
(bad)
in
cmp
push
dec
fcom
call
outs
mov
xchg
mov
jnp
movs
add
cmp
test
pop
imul
fiadd
push
aas
ss
fucomp
mov
sbb
mov
mov
inc
xchg
pop
fild
dec
jnp
shl
inc
js
(bad)
(bad)
push
test
cmp
inc
aaa
or
ins
adc
mov
or
loope
mov
mov
sbb
test
pop
cs
adc
ins
aaa
std
(bad)
push
sub
pop
in
daa
and
ret
pop
mov
mov
call
jmp
imul
(bad)
sub
xchg
call
push
add
xor
in
rol
cdq
xchg
cmp
shr
jg
and
addr16
cmps
es
aas
xchg
jo
outs
jb
loopne
sbb
cld
call
add
inc
repz
ds
dec
arpl
xor
iret
sbb
push
pop
addr16
add
imul
cmps
fist
push
rcl
mov
add
sub
leave
and
xchg
out
push
inc
sbb
cwde
add
hlt
or
mov
les
push
pop
and
and
inc
dec
mov
(bad)
call
mov
sbb
daa
pop
dec
mov
fbstp
les
pushf
cmp
je
inc
xchg
add
pop
pop
push
(bad)
mov
inc
adc
mov
sub
jnp
enter
or
sbb
push
jecxz
sahf
hlt
leave
rcr
add
clc
(bad)
(bad)
(bad)
call
test
jns
inc
xchg
dec
jb
loop
and
sbb
sbb
fdivr
add
pop
in
(bad)
(bad)
dec
pop
sbb
jle
sub
xlat
add
int3
sbb
xchg
and
sbb
fmul
(bad)
fcomip
jmp
imul
in
jl
dec
sbb
loopne
fimul
jae
stos
cmp
in
jle
cld
call
dec
leave
jne
and
neg
neg
add
(bad)
jg
cld
pop
push
jp
scas
nop
xchg
xchg
add
or
inc
sbb
push
or
call
imul
nop
pop
call
push
sub
(bad)
pop
cmp
(bad)
shr
inc
sub
cs
jnp
mov
jg
test
cmp
pop
or
mov
cld
das
or
dec
adc
push
ret
je
mov
adc
and
push
cmps
jns
push
dec
push
lock
pop
ins
sbb
call
adc
or
mov
jge
add
push
js
sub
add
inc
std
push
or
movs
sub
lods
lods
add
loopne
jle
dec
add
mov
bound
das
bound
lods
ja
add
movs
or
lods
push
inc
or
add
adc
mov
pop
test
int3
sub
xor
popf
rcr
aas
inc
mov
retf
sar
pop
cmp
jae
cmp
pop
xchg
pop
sub
push
ret
cmps
sbb
push
lods
fwait
out
shl
jmp
or
inc
loopne
push
jge
pop
ret
xchg
(bad)
(bad)
inc
ror
outs
dec
add
inc
pop
mov
dec
pusha
mov
jge
aam
sar
setne
lea
push
test
add
or
out
cli
(bad)
call
xchg
sub
in
inc
sbb
fadd
lock
pop
push
nop
push
cld
mov
ins
das
jp
push
arpl
mov
xor
or
jmp
test
jb
adc
mov
mov
add
aaa
mov
call
gs
mov
jg
(bad)
jmp
add
sbb
pop
into
xchg
adc
xor
adc
or
add
js
cmp
mov
sub
dec
out
mov
call
cs
cmp
xchg
inc
(bad)
(bad)
(bad)
inc
mov
ins
inc
pop
movs
test
es
(bad)
jmp
dec
inc
sub
into
fild
and
(bad)
(bad)
(bad)
dec
movs
and
sahf
or
(bad)
cmp
pop
adc
dec
xor
inc
or
retf
xchg
and
jmp
fwait
adc
(bad)
sbb
push
fwait
ins
xor
cmc
(bad)
(bad)
fist
pop
dec
or
push
push
lock
sbb
dec
mov
daa
shr
popa
mov
(bad)
(bad)
(bad)
call
arpl
test
push
mov
sub
pop
fsub
pop
fcmovb
sti
fnsave
cmp
jo
push
sar
inc
sbb
(bad)
jl
popf
mov
in
inc
add
or
retf
sbb
xor
std
(bad)
inc
push
jno
xor
loop
jno
sbb
scas
jne
or
or
jns
jmp
(bad)
call
imul
aam
jbe
int3
call
inc
ret
fs
mov
inc
sahf
sar
(bad)
(bad)
call
ja
push
jno
or
pop
clc
mov
inc
push
adc
fwait
cmp
add
jmp
in
scas
(bad)
inc
lods
nop
or
inc
cld
data16
pop
fs
pop
call
mov
repnz
(bad)
(bad)
inc
test
sbb
sbb
sub
lock
pop
shl
pusha
inc
mov
bound
mov
stos
inc
adc
ret
xchg
test
xchg
outs
xchg
pop
dec
sbb
xchg
xchg
xor
mov
mov
adc
add
dec
cmp
dec
xor
push
das
inc
pushf
xor
pop
std
aad
and
pop
mov
add
iret
cs
sbb
lods
ror
add
popf
push
add
pop
loopne
daa
rcl
fsubr
daa
test
test
ret
shl
inc
out
bound
clc
dec
sub
mov
repz
and
(bad)
(bad)
(bad)
(bad)
dec
imul
fistp
in
int3
inc
pop
stc
pop
cmp
mov
outs
js
fs
(bad)
(bad)
jmp
loop
movs
test
mov
jo
call
push
sbb
div
stos
or
(bad)
sbb
jmp
imul
je
or
jl
push
mov
int3
sub
scas
adc
sbb
(bad)
(bad)
jg
xor
mov
pop
outs
jns
aam
sub
pop
(bad)
add
cmp
ret
ss
push
jb
adc
xor
(bad)
nop
sub
xchg
ja
inc
mov
or
inc
(bad)
(bad)
dec
repnz
test
cmp
sub
clc
xchg
shl
nop
scas
ins
and
hlt
(bad)
(bad)
stc
test
xchg
xor
mov
push
xchg
aam
fild
mov
(bad)
inc
and
aam
fnsave
xchg
ins
pop
or
test
and
ins
data16
call
add
call
or
ja
adc
in
push
mov
cmps
fcom
test
cld
(bad)
mov
mov
sbb
out
mov
cmp
test
pop
xor
(bad)
call
dec
fistp
pop
push
xor
fst
jmp
aaa
pop
mov
sti
imul
fild
cmp
int
pop
imul
pop
push
add
call
cmp
mov
push
cli
jmp
sub
movs
stc
nop
push
jo
fcomp
lock
jmp
inc
inc
out
push
xchg
fs
xor
call
jmp
test
mov
xor
mov
xchg
add
dec
jmp
push
outs
adc
out
push
sub
and
mov
cmp
jbe
add
enter
sbb
or
jl
shr
mov
xchg
sub
cld
(bad)
(bad)
call
sbb
pusha
lea
ret
xchg
adc
add
sub
popa
pop
and
jg
or
aas
daa
icebp
rol
push
jo
cmp
inc
push
mov
sub
and
cmp
ss
xchg
jmp
int
xor
xchg
or
loop
ret
icebp
lds
rol
shr
and
sub
loopne
sbb
(bad)
call
jle
test
pop
aas
(bad)
adc
xchg
clc
mov
jne
push
inc
je
fmul
imul
fcmovnu
lahf
div
movs
jg
aaa
mov
or
mov
scas
pushf
jns
les
outs
pop
xchg
pop
push
pop
lea
cs
(bad)
outs
adc
sbb
jecxz
pop
push
aaa
sbb
(bad)
(bad)
call
ret
or
jl
ret
aaa
adc
dec
rol
ds
cmp
or
dec
sbb
pop
inc
shl
xor
jnp
adc
std
jmp
fld
es
sar
mov
dec
ret
cmc
jmp
pop
cmp
fadd
xor
lahf
iret
(bad)
(bad)
inc
sbb
or
in
mov
or
mov
push
cmp
lock
inc
shl
xchg
adc
xlat
aas
inc
rol
int
outs
add
(bad)
out
test
das
jo
mul
(bad)
(bad)
dec
add
push
std
mov
add
mov
pusha
xlat
push
xchg
xor
(bad)
inc
add
xor
lahf
(bad)
(bad)
(bad)
dec
add
mov
in
ficomp
mov
sar
sbb
inc
shl
sub
in
in
sbb
add
in
ret
add
(bad)
jmp
cmp
inc
pop
push
les
add
xchg
movs
add
test
adc
pop
les
mov
aaa
ret
inc
(bad)
out
(bad)
(bad)
(bad)
push
bound
pop
mov
jnp
popa
ss
jmp
int
adc
push
movs
in
adc
call
or
inc
inc
call
dec
ud0
(bad)
jmp
lods
sbb
das
imul
mov
sbb
int3
or
movs
mov
fwait
aam
mov
(bad)
(bad)
mov
inc
dec
sbb
out
test
jne
cmp
daa
adc
cmc
jg
cs
nop
jo
xor
push
cmp
(bad)
(bad)
out
les
bound
inc
pop
inc
imul
or
dec
mov
xchg
or
(bad)
mov
jmp
push
(bad)
inc
and
ss
retf
(bad)
jmp
add
and
mov
sbb
sub
cmp
xor
repnz
repnz
mov
(bad)
rcr
shr
pop
xlat
xor
mov
xchg
adc
aaa
out
pop
sbb
mov
xor
mov
jg
or
aas
in
dec
inc
inc
adc
or
mov
xor
scas
xor
push
stos
or
jmp
jmp
push
add
sub
mov
xchg
jbe
cdq
loopne
rol
(bad)
(bad)
(bad)
mov
or
jo
adc
xchg
nop
pop
add
xchg
nop
mov
xchg
xchg
stos
outs
and
mov
les
test
das
enter
and
pop
(bad)
jmp
or
in
frstor
addr16
push
mov
cmovne
xor
mov
or
push
push
add
sub
adc
push
in
adc
adc
or
outs
(bad)
(bad)
dec
not
jae
add
ja
ss
push
inc
inc
pop
jle
mov
cwde
sub
(bad)
inc
call
out
adc
leave
dec
mov
add
popa
das
mov
and
sub
fs
call
stos
adc
jae
jae
fcmovu
mov
jmp
popa
lods
iret
cmc
nop
sbb
xchg
or
add
xchg
mov
dec
das
push
add
or
sbb
jg
(bad)
(bad)
mov
sub
sbb
mov
dec
pop
or
pop
add
outs
push
inc
xchg
inc
loope
dec
inc
inc
inc
adc
pop
xchg
inc
popf
or
cli
pop
push
sub
jmp
pop
inc
pop
xchg
sub
inc
fisubr
les
push
xchg
cmp
adc
(bad)
call
cmp
loop
dec
test
movs
fwait
sub
(bad)
dec
jae
sub
arpl
cs
mov
ins
and
imul
and
xor
adc
int
mov
cmps
dec
sub
pushf
cmp
fisttp
mov
adc
repz
pop
loop
dec
sbb
pop
and
sub
dec
addr16
or
pushf
sar
(bad)
fmul
loop
xchg
mov
push
cmp
adc
cld
cmps
rol
clc
(bad)
(bad)
(bad)
jg
fs
adc
imul
mov
popa
ret
pop
xlat
fistp
mov
sbb
(bad)
(bad)
(bad)
jg
adc
lea
push
sub
push
bound
fmul
cmp
sbb
sub
retf
ror
ins
inc
push
fs
sub
mov
sub
add
xchg
movs
sub
or
ins
and
test
pop
and
outs
add
je
and
xchg
and
sbb
clc
push
sbb
mov
sub
sbb
inc
dec
std
mov
push
add
sub
and
or
and
scas
mov
cmp
adc
cmp
jl
lods
sbb
scas
loopne
(bad)
rcr
hlt
mov
or
xchg
sbb
and
push
and
fadd
xor
mov
jbe
xchg
fld
or
fs
sar
push
jo
nop
mov
es
sub
mov
ret
cmp
push
daa
xor
mov
jns
jns
adc
mov
iret
or
outs
add
or
push
out
inc
add
aam
repnz
mov
std
in
mov
adc
push
pop
out
fimul
out
cmp
sar
cmp
sbb
xor
adc
cli
fbstp
cmps
cmp
test
sahf
xor
push
mov
loopne
imul
call
adc
stos
mov
dec
jae
sbb
arpl
lea
rol
ss
adc
shr
out
pusha
or
shr
dec
(bad)
(bad)
(bad)
(bad)
call
push
sub
sbb
xchg
dec
daa
fcomp
and
fdiv
cmp
(bad)
push
in
xchg
sub
sbb
inc
daa
cmps
in
pop
in
mov
das
adc
scas
mov
(bad)
(bad)
call
add
int3
ficom
cmp
pop
inc
lahf
int
ds
inc
jo
add
mov
add
jge
inc
sbb
pop
(bad)
(bad)
(bad)
mov
or
or
dec
push
xchg
test
jo
outs
jle
pop
xchg
cmp
pslld
push
or
or
cmp
outs
pushf
xchg
mov
push
inc
arpl
add
mov
push
imul
pop
dec
(bad)
jmp
jb
scas
leave
pop
xchg
rcr
xadd
cmp
xchg
cmp
cld
jg
dec
jo
test
adc
int
adc
pusha
mov
call
or
sar
(bad)
mov
and
adc
or
arpl
or
in
jmp
mov
mov
jge
and
rcl
adc
(bad)
jmp
ret
or
shr
in
inc
scas
popa
adc
(bad)
(bad)
(bad)
jmp
or
jns
add
fidiv
jae
push
push
lock
xchg
out
cli
dec
dec
arpl
or
cmp
lods
rol
and
loop
adc
sub
lds
fimul
(bad)
dec
sahf
mov
int
jns
retf
mov
or
and
push
mov
imul
sti
add
sub
xor
cmp
push
inc
jge
btr
lock
inc
or
in
test
and
imul
call
inc
add
xchg
je
inc
and
push
jmp
(bad)
add
sub
add
jg
and
sar
jp
jnp
pushf
popf
dec
rep
(bad)
(bad)
(bad)
(bad)
jl
lods
jge
dec
sbb
and
outs
and
push
jmp
adc
push
or
inc
ins
jecxz
xchg
xor
lds
loopne
movs
mov
pop
cli
cmp
dec
sbb
les
loope
(bad)
fistp
loopne
pop
shl
mov
stos
mov
(bad)
(bad)
mov
pop
and
movs
lock
or
mov
cmc
jns
push
leave
cmp
and
sbb
xchg
jne
inc
mov
sub
sub
dec
jmp
jae
js
fsub
jl
xchg
hlt
les
jae
clc
mov
mov
mov
or
js
nop
push
sbb
out
shl
pop
icebp
(bad)
jmp
popf
clc
adc
and
inc
add
adc
in
std
inc
jg
push
in
rcr
inc
mov
add
or
push
xor
jae
adc
or
mov
rol
movs
jbe
cmp
in
das
mov
xchg
mov
xor
sbb
and
add
cmp
mov
sub
(bad)
(bad)
push
out
in
loopne
mov
jl
stos
add
gs
and
push
xor
add
xor
outs
xchg
xor
(bad)
push
jno
rol
ret
xchg
lods
inc
sbb
(bad)
(bad)
call
fsubr
jg
push
mov
dec
es
jmp
dec
or
enter
neg
inc
ret
les
add
push
pop
or
(bad)
call
dec
mov
pop
cmp
test
adc
pushf
clc
inc
ret
cld
(bad)
cmp
and
fmul
and
dec
(bad)
(bad)
jg
dec
push
xor
outs
(bad)
fs
jecxz
ins
jmp
sub
sub
inc
mov
xchg
mov
jo
imul
mov
mov
xchg
fidiv
xor
dec
ins
(bad)
(bad)
(bad)
dec
test
arpl
inc
popa
add
call
es
or
(bad)
(bad)
(bad)
(bad)
fist
adc
sub
adc
sbb
ins
adc
sbb
mov
mov
fst
jg
fcmovb
retf
imul
xchg
pop
scas
(bad)
(bad)
dec
push
loop
xchg
loope
jno
jg
mov
dec
shl
or
add
push
pop
add
cli
and
je
rcl
test
mov
or
(bad)
(bad)
(bad)
jmp
int
shl
adc
inc
dec
pop
add
mov
add
mov
pop
sbb
aas
inc
call
ror
cmp
inc
(bad)
(bad)
call
fldpi
adc
push
xchg
sub
(bad)
int
out
dec
jle
adc
pop
je
cmc
and
dec
xor
xchg
rcl
jle
pusha
xchg
movs
jno
(bad)
push
sbb
pop
or
and
call
add
mov
movs
mov
pop
mov
pushf
pop
gs
mov
xor
test
adc
movs
(bad)
push
pop
mov
pushf
mov
mov
push
js
rcl
or
jmp
add
pop
inc
adc
clc
dec
jnp
push
mov
jmp
push
mov
xchg
push
inc
jne
(bad)
(bad)
(bad)
jmp
adc
test
pop
es
(bad)
test
sbb
loope
cmp
ror
jge
push
enter
jns
cli
(bad)
(bad)
(bad)
jl
test
inc
jge
ja
dec
pop
or
push
push
add
sbb
mov
push
icebp
scas
and
sub
xchg
adc
xor
jg
adc
xor
sti
jmp
xchg
jmp
push
xor
pop
ror
dec
mov
sub
jne
sub
inc
dec
imul
push
cmp
add
lock
es
or
inc
inc
loop
mov
push
mov
cmp
test
or
jmp
adc
mov
jg
adc
dec
int3
jmp
(bad)
(bad)
jg
inc
dec
dec
jp
(bad)
and
movs
sub
sub
into
pop
adc
(bad)
or
dec
add
add
retf
(bad)
hlt
div
dec
and
fiadd
adc
adc
call
loop
shl
out
fiadd
xor
inc
inc
outs
add
test
add
clc
(bad)
(bad)
jnp
loope
dec
xchg
cdq
in
cmp
cmp
aam
outs
and
aaa
inc
push
sbb
dec
(bad)
(bad)
dec
pop
(bad)
retf
pusha
dec
mov
sub
mov
pusha
loop
push
xchg
adc
call
xchg
lea
out
pushf
pop
xchg
pop
jo
lahf
pop
aaa
(bad)
ss
test
(bad)
(bad)
jg
and
(bad)
sub
enter
and
push
jnp
dec
mov
or
fcom
push
fisub
push
clc
inc
jnp
jp
xchg
icebp
out
xchg
mov
cmp
lods
ins
leave
xchg
push
adc
cmc
sub
clc
push
aam
pop
pusha
xor
(bad)
or
dec
jmp
es
add
adc
inc
clc
inc
(bad)
ds
xor
adc
dec
adc
push
gs
or
imul
pushf
and
xlat
popa
fisttp
(bad)
jl
sbb
push
sbb
and
or
pop
xor
or
ins
jnp
add
fild
test
or
push
add
inc
jne
mov
mov
dec
js
pop
loope
push
in
loopne
mov
ja
les
lods
or
enter
nop
ret
add
jg
dec
bound
pusha
jo
cmp
jmp
movs
push
in
push
dec
sbb
leave
retf
(bad)
(bad)
js
loop
retf
jmp
fadd
bound
jno
jne
jge
daa
and
outs
test
sub
add
jo
adc
pop
pop
lods
(bad)
(bad)
call
out
ss
bound
push
sbb
pop
mov
mov
dec
xchg
(bad)
(bad)
(bad)
call
and
rcl
gs
dec
aaa
add
xchg
mov
xchg
sbb
dec
nop
mov
jmp
add
jb
or
sbb
pop
add
cmps
pop
cmc
jmp
mov
imul
cmp
imul
sub
(bad)
mov
xchg
cmp
gs
ins
jecxz
xor
push
(bad)
(bad)
(bad)
jmp
mov
es
nop
add
and
std
add
sahf
sub
jle
add
scas
fadd
lock
std
(bad)
jmp
addr16
lea
inc
add
popa
push
sbb
jle
inc
mov
mov
mov
push
mov
xlat
mov
add
test
popa
add
fstp
(bad)
(bad)
(bad)
call
add
sbb
lea
adc
mov
cmp
jmp
sub
or
pop
mov
add
(bad)
push
retf
rcl
dec
dec
xchg
inc
icebp
inc
or
jae
(bad)
add
add
inc
jg
lods
jmp
daa
mov
jb
cmovno
sub
retf
dec
call
dec
mov
xchg
xor
cdq
movs
pop
or
cs
mov
fcomip
push
pop
inc
dec
into
add
cmp
mov
shl
(bad)
inc
cmp
jmp
das
stos
pop
stos
adc
aam
les
jns
mov
sub
pop
add
mov
push
or
jnp
les
xor
(bad)
cmp
lea
mov
ret
cwde
pop
(bad)
mov
inc
cmp
push
pop
push
lea
jmp
in
jno
test
xchg
inc
test
add
jp
push
pusha
and
mov
dec
push
js
pop
dec
pusha
mov
jne
stc
or
add
(bad)
mov
ffreep
ja
adc
pop
jl
call
cmp
mov
mov
ret
mov
out
xor
jle
lock
add
push
ror
xor
mov
sbb
fdiv
ret
or
inc
cmps
das
es
ret
mov
sbb
scas
popa
and
push
imul
jo
adc
mov
and
add
clc
pop
into
xchg
adc
cmps
or
adc
mov
push
add
mov
mov
(bad)
(bad)
inc
mov
cmp
daa
nop
mov
or
jno
inc
fiadd
and
push
cmp
call
push
call
mov
fdiv
cvtps2pd
adc
xor
adc
cld
fs
aam
retf
jecxz
mov
sbb
lods
and
std
lds
adc
repnz
rol
fdiv
pop
jmp
(bad)
(bad)
push
stc
or
ret
inc
stos
and
push
fcom
js
enter
sbb
mov
test
mov
pop
push
jl
int3
push
jb
aad
in
clc
(bad)
mov
ins
loopne
adc
cmc
pop
inc
movs
cmp
inc
(bad)
in
cmp
or
fisttp
xor
fimul
jge
xor
outs
pop
cmpxchg
imul
mov
popa
add
retf
xor
and
xchg
push
movs
adc
sub
call
push
test
jecxz
and
push
cmc
movs
adc
fdivr
sahf
or
(bad)
(bad)
call
add
pop
inc
push
pop
inc
in
push
js
movs
das
fwait
or
aam
jne
fbld
sbb
(bad)
(bad)
(bad)
cmp
jno
dec
mov
jmp
adc
inc
mov
or
cmp
imul
call
push
aam
test
pushf
inc
cli
pop
dec
inc
sub
xchg
aad
and
mov
(bad)
jmp
pop
jno
mov
xor
dec
or
mov
in
or
cmp
pop
aam
jmp
sbb
test
push
mov
fucomp
nop
sahf
mov
(bad)
lea
or
mov
dec
mov
sub
ins
sbb
aam
xor
push
cmp
outs
adc
adc
push
inc
xor
sbb
dec
jl
fst
inc
adc
movs
(bad)
(bad)
(bad)
jg
daa
inc
es
adc
dec
inc
dec
cmps
jg
xchg
cmp
cmp
rol
out
mov
out
clc
(bad)
pop
loope
pcmpeqb
push
add
inc
add
repnz
or
and
(bad)
dec
adc
cmp
mov
xor
fiadd
(bad)
(bad)
(bad)
jmp
js
xor
outs
and
cmp
mov
jmp
and
(bad)
(bad)
call
aaa
inc
rcr
mov
arpl
xchg
outs
iret
out
mov
xor
stc
sub
sub
(bad)
push
adc
xor
(bad)
fstp
adc
push
mov
lds
xor
call
arpl
mov
mov
sti
(bad)
scas
mov
sbb
xchg
adc
mov
paddusb
dec
popa
shl
imul
dec
and
pop
and
popf
dec
hlt
add
add
es
sbb
and
loop
jle
adc
fcomip
(bad)
dec
sbb
movs
sub
jns
xchg
shl
(bad)
leave
mov
(bad)
icebp
inc
and
xor
mov
mov
mov
add
pop
mov
mov
je
(bad)
(bad)
(bad)
call
or
fdivrp
push
or
retf
dec
adc
scas
repnz
cmp
pop
jb
bound
cmc
sub
or
call
mov
xchg
pop
cmc
js
fiadd
push
push
lea
(bad)
popa
push
or
adc
pop
lds
sub
outs
(bad)
(bad)
(bad)
call
sub
dec
sub
lods
and
test
mov
in
and
pusha
clc
sbb
call
inc
push
xchg
popa
(bad)
mov
xor
lock
sbb
bound
rol
or
aad
sub
add
sbb
and
push
sbb
inc
push
jns
cmps
inc
xchg
adc
cmp
ret
cld
dec
hlt
sub
mov
add
adc
push
lock
gs
lea
push
iret
aaa
cld
(bad)
(bad)
cmp
or
loope
mov
cmp
stc
mov
jg
loopne
add
(bad)
dec
fwait
xchg
stos
(bad)
pop
jne
pop
inc
test
test
(bad)
xchg
cs
xchg
mov
jne
pop
jmp
mov
push
pop
(bad)
dec
es
lock
ins
sbb
mov
lods
(bad)
(bad)
call
scas
adc
xor
mov
dec
repz
ret
or
xchg
cs
sbb
(bad)
(bad)
dec
cli
addr16
sbb
ror
nop
popa
(bad)
imul
jmp
test
ss
call
fdivr
mov
mov
or
(bad)
jmp
aam
loopne
mov
sbb
or
sbb
add
daa
sti
dec
rcl
shl
xchg
imul
cmp
inc
mov
cwde
inc
and
rol
pop
in
mov
cld
int
xor
call
loope
stos
push
push
push
sbb
adc
gs
sbb
cmp
jecxz
mov
aaa
fwait
ret
test
mov
push
fst
mov
pushw
sub
mov
mov
push
jmp
add
fst
push
mov
xchg
sub
cmp
dec
push
add
out
mov
lods
push
std
push
cmp
mov
mov
or
(bad)
repnz
push
sub
icebp
jg
fsubr
in
arpl
fs
(bad)
(bad)
inc
mov
leave
in
xor
pop
add
jne
add
retf
(bad)
(bad)
(bad)
dec
stos
pop
test
or
adc
(bad)
cmp
jne
movs
add
xchg
pop
frstor
imul
test
adc
sub
imul
(bad)
(bad)
inc
push
jbe
mov
lea
mov
shr
add
inc
add
or
or
mov
jge
sbb
adc
(bad)
(bad)
(bad)
inc
mov
or
push
sub
fadd
jbe
jo
mov
push
adc
das
cmp
call
inc
and
movs
aam
pop
hlt
(bad)
dec
sbb
nop
cmps
imul
fsubr
and
add
pop
push
jmp
dec
xor
add
loope
sub
dec
(bad)
(bad)
fisttp
adc
sbb
cmp
and
iret
sar
pop
pusha
jo
outs
test
jae
mov
push
sbb
test
dec
mov
adc
adc
or
call
dec
dec
rol
retf
add
adc
adc
outs
cli
push
mov
ja
cwde
cmp
sub
sub
or
mov
sbb
ins
ins
js
cmp
push
xor
cmp
(bad)
(bad)
fistp
mul
lea
scas
mov
sub
sahf
dec
xchg
ret
loopne
and
(bad)
(bad)
push
mov
and
sbb
mov
pop
(bad)
pop
mov
ins
dec
adc
jg
or
or
out
std
in
jmp
sub
das
addr16
(bad)
inc
adc
es
jmp
int
or
adc
dec
push
add
(bad)
push
ds
adc
push
xchg
sub
call
cdq
mov
lahf
mov
(bad)
nop
jne
sub
push
ret
adc
dec
mov
loopne
mov
xor
and
daa
pop
sbb
test
hlt
mov
shl
sahf
sub
jmp
test
mov
add
loop
xor
in
adc
sahf
pop
lock
xor
mov
cld
lea
inc
xor
cmps
xor
(bad)
(bad)
dec
sub
imul
and
jge
dec
add
jnp
xchg
jecxz
push
in
push
scas
clc
ss
jmp
(bad)
aas
and
inc
mov
mov
sbb
sar
mov
and
cmp
icebp
or
pusha
sar
pop
outs
mov
inc
push
add
pop
push
add
push
jmp
pop
test
add
pop
jl
add
test
repz
call
(bad)
dec
or
ins
lods
jmp
mov
xchg
xor
inc
mov
jmp
jbe
iret
add
push
pusha
inc
call
mov
sbb
add
dec
push
or
cld
or
lock
add
push
(bad)
(bad)
(bad)
inc
push
iret
push
mov
ins
add
outs
pop
jb
pushf
cmp
inc
fadd
ins
clc
dec
inc
lock
cli
test
int3
pop
mov
or
xchg
jmp
fisttp
or
cmp
pop
dec
xlat
pop
sub
pop
pusha
test
xchg
jb
push
aad
or
(bad)
jg
sub
movs
in
fnstcw
test
ffreep
scas
and
lods
lahf
call
call
sub
lock
fcmovbe
outs
push
inc
cld
(bad)
cmp
lahf
adc
sub
dec
loop
or
addr16
add
add
imul
scas
int3
inc
popa
jmp
arpl
sbb
lods
inc
lock
xchg
push
mov
std
sar
call
loopne
push
inc
add
xor
pusha
das
dec
stc
pop
pop
(bad)
fild
repnz
sar
xchg
imul
push
sbb
cdq
xor
hlt
dec
mov
(bad)
(bad)
(bad)
dec
push
(bad)
rcr
push
cdq
ins
mov
and
jp
mov
xor
adc
jns
dec
mov
inc
sbb
(bad)
mov
aas
or
retf
shr
fidivr
xchg
cdq
or
(bad)
call
mov
or
and
inc
mov
sub
dec
push
xor
ret
sub
jg
test
mov
dec
repz
outs
mov
enter
(bad)
fld
sub
sbb
cmp
iret
jnp
daa
sbb
push
cmp
cmps
mov
sti
pop
clc
clc
xor
loopne
pusha
loop
cwde
into
xchg
cmp
inc
adc
xchg
or
mov
arpl
mov
add
movs
mov
or
(bad)
(bad)
jge
rol
jno
dec
or
mov
push
loope
push
pop
fld
sub
xor
jecxz
xor
pop
mov
fwait
(bad)
jmp
jmp
pop
mov
ret
jge
les
inc
mov
pop
cmc
push
lds
dec
jl
xchg
or
data16
mov
sbb
pop
adc
(bad)
inc
pop
(bad)
sub
xchg
push
loope
inc
or
outs
push
or
(bad)
dec
add
hlt
iret
dec
mov
push
cld
sub
adc
(bad)
(bad)
clc
dec
cwde
xchg
dec
clc
clc
xchg
inc
scas
inc
dec
pop
jmp
pop
movs
jae
push
adc
or
pop
es
popf
add
scas
push
inc
clc
sbb
ret
sub
(bad)
(bad)
jmp
add
xor
pop
push
xor
sar
mov
sbb
mov
outs
clc
(bad)
dec
adc
call
mov
sbb
mov
cmp
xor
ss
pop
loopne
sbb
in
test
lods
je
mov
pop
in
cmp
pop
sbb
aaa
sub
cdq
bound
sbb
xchg
test
xor
out
fisttp
push
push
mov
inc
dec
adc
iret
(bad)
add
jg
sbb
je
ret
xor
push
cmp
inc
test
retf
xchg
pop
nop
sbb
call
shl
aaa
mov
cdq
test
aam
inc
test
imul
mov
(bad)
(bad)
call
jecxz
add
jnp
push
loopne
or
push
push
adc
xchg
lea
fcmovnb
mov
das
clc
push
loop
gs
or
jne
test
mov
sbb
in
aaa
xchg
mov
and
inc
loop
pop
mov
call
pop
xor
shl
(bad)
jmp
repnz
push
inc
add
in
daa
ins
test
aaa
adc
xor
div
push
(bad)
pop
pusha
dec
arpl
cmps
mov
sbb
push
and
sbb
dec
and
adc
cmp
stc
and
ret
sahf
add
fcomip
push
in
xor
add
push
and
inc
movs
mov
(bad)
call
sbb
repnz
paddusw
js
into
retf
xchg
hlt
(bad)
(bad)
push
fld
ja
daa
push
mov
rol
scas
call
or
dec
xchg
bound
inc
(bad)
(bad)
jmp
inc
pop
adc
out
test
rol
shr
and
mov
mov
jo
and
mov
sbb
(bad)
(bad)
(bad)
inc
loopne
mov
inc
popa
int
cmps
inc
cmp
adc
ret
sub
push
push
out
repz
(bad)
(bad)
(bad)
inc
shl
lock
fisub
gs
add
pop
push
sbb
inc
inc
dec
pop
and
xor
jmp
sub
add
cmps
out
add
dec
mov
(bad)
(bad)
(bad)
(bad)
jbe
add
sub
mov
push
dec
push
add
rcr
inc
and
sar
in
xor
push
rol
test
(bad)
(bad)
jmp
ficomp
gs
or
pop
pop
push
out
cmps
sbb
data16
jmp
movs
(bad)
mov
mov
jbe
pop
sar
das
test
jnp
inc
add
loop
jb
(bad)
(bad)
(bad)
call
or
sbb
loope
adc
sbb
stos
xchg
mov
sub
push
or
or
rcr
xor
pop
pop
cmp
inc
dec
rcr
push
(bad)
(bad)
jmp
or
push
sub
push
or
out
clc
hlt
jb
or
jl
sti
adc
jg
inc
jp
sbb
adc
add
bound
es
add
push
arpl
movs
adc
xor
mov
pop
push
xchg
or
adc
in
(bad)
(bad)
(bad)
(bad)
jp
(bad)
cmp
add
daa
es
fstp
fcom
pop
inc
and
jecxz
sub
ja
dec
dec
jne
cmp
adc
xchg
test
aad
inc
fld
mov
ins
sbb
jg
mov
adc
xor
pop
xchg
retf
adc
xor
xchg
adc
jno
add
sbb
mov
add
sbb
cmp
(bad)
call
adc
sbb
pop
add
sbb
push
bound
daa
add
(bad)
adc
dec
xchg
clc
mov
es
les
jmp
sub
jo
arpl
adc
mov
add
xchg
retf
add
(bad)
jmp
mov
pop
xchg
in
retf
push
mov
and
or
jno
mov
mov
(bad)
(bad)
dec
jnp
and
mov
sbb
push
push
ror
mov
push
or
cdq
in
fcmovnb
call
xchg
xchg
test
mov
sub
push
(bad)
(bad)
jmp
dec
retf
pushf
inc
inc
aam
lock
cmp
sbb
dec
mov
jne
mov
test
pusha
test
add
test
or
add
sbb
ja
mov
pop
scas
dec
jae
mov
imul
mov
loop
stc
sub
in
cmp
or
shr
push
or
add
jmp
inc
push
jl
call
sub
mov
adc
xchg
lea
pop
(bad)
(bad)
out
and
loope
xchg
int
cmp
sbb
les
(bad)
(bad)
(bad)
(bad)
mov
ins
sahf
sahf
xchg
push
inc
sub
or
adc
adc
pop
fcomp
(bad)
(bad)
(bad)
aas
inc
or
pop
test
or
das
mov
and
xchg
inc
add
fidiv
xor
out
xor
sub
inc
data16
out
cmps
mov
(bad)
pusha
xchg
mov
xor
loope
std
pop
loopne
mov
movd
or
cmp
mov
outs
sar
cld
leave
aam
clc
clc
sub
jne
xchg
idiv
and
mov
movs
add
xchg
mov
fbstp
lods
mov
and
jl
or
jg
or
popa
or
pop
inc
add
call
(bad)
inc
push
fwait
inc
inc
adc
jg
add
pop
add
jmp
add
out
(bad)
add
fcmovnu
stc
add
sbb
xchg
push
inc
xchg
into
lods
cld
nop
cmp
imul
call
or
pop
test
cmovb
iret
mov
cmp
sar
(bad)
(bad)
call
pop
lods
je
cmp
inc
push
ins
mov
mov
push
push
scas
pop
pop
xlat
retf
xchg
arpl
push
(bad)
(bad)
inc
pusha
xor
xchg
mov
dec
adc
movs
adc
xchg
push
sar
call
or
sbb
cmp
or
or
movs
fisttp
sbb
dec
push
push
or
(bad)
sbb
add
mov
xor
xor
(bad)
jmp
ror
aaa
femms
ds
pop
inc
test
cdq
lahf
inc
sub
mov
dec
xchg
mov
jge
loope
ss
xchg
outs
shr
stos
add
mov
dec
and
(bad)
(bad)
mov
jno
mov
mov
hlt
sbb
ja
popa
dec
mov
or
scas
mov
(bad)
(bad)
mov
fistp
test
and
push
inc
nop
adc
dec
enter
cmps
xchg
hlt
(bad)
jg
inc
push
cmp
pop
and
ss
dec
loop
mov
sbb
in
dec
push
ret
lahf
pop
inc
xlat
jo
mov
push
push
loop
(bad)
mov
adc
mov
jp
repz
push
sbb
sub
inc
jg
mov
pop
ror
mov
push
(bad)
jmp
rol
aam
adc
aad
xchg
shl
pop
or
push
dec
sbb
pop
pop
sar
call
xor
shl
retf
sbb
sbb
stos
push
cwde
adc
(bad)
fisubr
mov
and
scas
es
mov
popf
sub
adc
inc
mov
(bad)
call
xchg
ret
cmp
iret
inc
lahf
dec
push
or
lea
mov
mov
and
cmps
nop
add
ds
fisubr
cs
mov
inc
add
and
fldenv
or
inc
out
pop
adc
xor
popa
mov
fst
(bad)
mov
fs
mul
adc
or
mov
adc
add
(bad)
(bad)
dec
jne
pusha
inc
aaa
(bad)
arpl
push
pop
xor
leave
aas
inc
shl
imul
sub
push
adc
test
fucomi
adc
dec
dec
mov
push
cmp
and
call
jae
in
mov
mov
pop
jmp
mov
pop
jnp
call
sbb
mov
(bad)
push
cld
ins
xor
leave
mov
mov
out
nop
xor
pushf
cmps
sbb
cdq
fidiv
add
jne
jmp
inc
push
mov
mov
cmc
mov
retf
push
inc
or
dec
jecxz
imul
leave
ror
cmc
add
enter
ficom
mov
push
imul
cmp
add
(bad)
ja
rcr
add
sbb
daa
adc
(bad)
mov
push
push
adc
pop
aam
and
fadd
jp
jg
xor
out
add
out
cli
ins
loopne
ins
jmp
pushf
call
mov
fstp
(bad)
(bad)
(bad)
ror
xchg
adc
adc
shl
mov
inc
and
xor
ja
ins
arpl
sbb
ins
pop
lock
jmp
dec
jb
or
and
adc
and
mov
or
adc
(bad)
(bad)
push
push
movs
test
imul
push
jb
ror
hlt
(bad)
loopne
lock
add
fdiv
push
sub
mov
shl
ins
push
ja
add
(bad)
(bad)
(bad)
inc
pop
arpl
mov
inc
pop
mov
aaa
or
test
fldenv
daa
mov
inc
loop
test
lods
jnp
dec
out
daa
sar
or
add
adc
ja
jae
sub
in
inc
cmp
or
mov
sub
sub
adc
data16
sub
pop
sar
cmps
inc
pop
mov
lods
in
cmps
mov
imul
jecxz
mov
mov
xchg
mov
cs
sahf
das
jle
xor
(bad)
(bad)
jmp
dec
pop
or
lods
xchg
push
jbe
push
xor
data16
cmp
div
mov
sbb
jo
fimul
add
fcmovu
cli
call
mov
pop
icebp
enter
mov
mov
adc
lock
fadd
aas
or
(bad)
dec
dec
xor
push
push
fbld
sub
xchg
xchg
xchg
mov
nop
push
mov
dec
and
and
or
repz
(bad)
(bad)
(bad)
jns
inc
call
cdq
sbb
gs
cdq
pop
push
mov
inc
mov
xor
sub
(bad)
(bad)
call
adc
dec
inc
mov
jmp
add
cmps
das
das
fwait
add
sahf
(bad)
aam
sti
fs
dec
push
pop
retf
(bad)
dec
mov
retf
push
cmps
adc
push
cli
pop
jo
dec
mov
inc
(bad)
push
adc
adc
lock
dec
push
ret
retf
jae
(bad)
(bad)
fbstp
or
fisub
outs
pop
jnp
rol
(bad)
scas
cmp
frstor
loop
and
mov
ret
rcr
or
push
call
or
pop
int3
mov
jbe
push
cmp
sbb
clc
(bad)
(bad)
inc
inc
inc
lods
es
cmovno
lea
sbb
and
test
add
xor
je
sub
(bad)
(bad)
call
rol
inc
adc
mov
jnp
sbb
inc
or
stos
pop
sub
pop
dec
loope
push
call
sub
and
dec
inc
(bad)
(bad)
jmp
bound
mov
pop
ins
popa
mov
dec
adc
jmp
rcr
mov
jle
fstp
xchg
mov
dec
sbb
inc
dec
xor
push
gs
and
pop
je
test
mov
sub
jmp
imul
ret
popa
fdivr
enter
inc
xor
add
je
rol
adc
inc
cmp
push
jne
and
mov
mov
cmp
mov
xor
cld
(bad)
jmp
cmp
sar
push
neg
mov
popa
not
add
cld
jmp
and
inc
pop
dec
sub
sbb
add
mov
aam
out
adc
cmp
adc
fstp
xchg
outs
xchg
mov
mov
sub
sub
rol
adc
popa
retf
sub
and
inc
imul
fstp
mov
dec
add
sub
mov
and
sbb
(bad)
jmp
xchg
ss
and
push
ret
or
jmp
int
inc
or
call
test
movs
add
pop
adc
in
gs
imul
xchg
jmp
or
sub
sar
(bad)
(bad)
inc
pop
loopne
pop
or
lock
jmp
or
xchg
jne
mov
(bad)
(bad)
(bad)
cmps
imul
or
mov
mov
push
xchg
loope
movs
test
call
pusha
int3
cli
pop
add
imul
dec
gs
das
push
hlt
inc
leave
fcmovbe
(bad)
(bad)
call
mov
loope
stos
cs
cmp
ds
inc
ss
ret
pop
rol
in
es
jmp
loope
dec
cmps
hlt
or
call
and
outs
fs
dec
aam
inc
test
rcl
inc
imul
dec
or
mov
mov
imul
pop
mov
push
adc
(bad)
jg
xchg
pop
inc
mov
movs
dec
daa
pop
push
sbb
mov
iret
jno
sbb
std
sub
pusha
out
cmp
xchg
mov
add
fst
inc
add
ds
(bad)
(bad)
call
and
dec
scas
jo
jl
mov
imul
arpl
(bad)
fild
push
ret
push
mov
mov
push
mov
add
and
outs
dec
stos
call
mov
sub
scas
and
jmp
mov
fs
dec
jmp
sub
mov
sub
(bad)
push
mov
inc
retf
pop
push
(bad)
repz
sbb
jl
ficomp
jo
xchg
mov
sahf
dec
ss
(bad)
and
push
cmps
xchg
sti
mov
mov
pop
mov
cmp
jmp
(bad)
sub
movs
mov
and
mov
xor
pop
xchg
jle
pop
mov
mov
mov
mov
loope
lods
and
jae
jge
scas
xor
repnz
shl
mov
cdq
cld
pop
and
mov
fbstp
cli
mov
jg
fwait
sar
(bad)
(bad)
jg
ror
shl
sbb
add
loope
cmp
mov
dec
daa
xor
or
or
dec
shr
push
dec
push
(bad)
(bad)
(bad)
dec
sbb
call
push
call
push
inc
inc
and
cdq
mov
inc
or
imul
push
cld
(bad)
fistp
lods
in
push
sbb
or
fwait
adc
sbb
lea
pop
test
js
(bad)
(bad)
call
ins
mov
dec
nop
xor
sbb
sbb
scas
mov
int3
or
add
lahf
mov
outs
cli
(bad)
push
adc
ret
fadd
and
pop
les
push
dec
add
arpl
(bad)
(bad)
(bad)
in
lods
xlat
mov
xchg
push
push
imul
lds
inc
inc
inc
push
inc
pop
push
enter
inc
cld
pop
jp
pop
mov
pop
or
cwde
ds
bound
inc
(bad)
jge
call
adc
repnz
dec
push
dec
dec
pop
and
(bad)
dec
sar
(bad)
jmp
pop
mov
loop
cmp
push
pop
dec
inc
push
push
push
mov
or
fdiv
(bad)
call
add
xchg
inc
mov
in
pop
and
pop
lock
fidivr
adc
fisub
pop
cmp
push
loopne
stos
or
stc
mov
sbb
ror
sar
retf
addr16
fist
dec
cld
(bad)
dec
cbw
add
je
xor
loopne
mov
retf
(bad)
pop
mov
or
mov
push
fdiv
mov
repnz
retf
inc
bound
fwait
push
jmp
shl
loopne
push
pop
dec
inc
xor
in
leave
out
mov
movs
(bad)
(bad)
call
push
mov
inc
xor
pop
outs
jb
add
fisubr
mov
test
xor
or
mov
mov
pop
mov
dec
fsubr
jmp
(bad)
push
xchg
inc
dec
dec
dec
stos
xor
rcl
(bad)
(bad)
inc
movs
mov
cdq
mov
cdq
sub
pop
fistp
fiadd
call
mov
pusha
jo
fisttp
adc
repz
mov
mov
sub
inc
or
mov
push
std
(bad)
mov
loope
add
and
or
and
sub
jb
(bad)
(bad)
(bad)
(bad)
sbb
add
jns
popf
adc
in
mov
shr
add
(bad)
(bad)
jg
retf
or
push
xor
or
jno
add
mov
pop
mov
lock
adc
mov
(bad)
jmp
les
add
mov
movs
mov
push
and
sub
ja
or
pushf
push
aaa
aam
pop
(bad)
(bad)
jg
mov
jecxz
or
gs
repnz
inc
dec
dec
or
(bad)
(bad)
fbld
xor
jno
adc
dec
xor
rol
mov
pop
mov
sub
call
mov
lods
add
adc
movs
add
aad
das
push
dec
js
push
test
or
mov
sahf
inc
dec
dec
pop
(bad)
aam
cmps
lahf
add
mov
cmp
or
pop
add
ror
xlat
and
pusha
xchg
inc
jle
outs
adc
dec
aad
sbb
add
xchg
pop
in
adc
int
(bad)
mov
add
xlat
call
add
xlat
lahf
fs
fild
fild
rol
inc
inc
out
pop
and
das
pop
add
outs
test
adc
or
dec
daa
test
mov
push
(bad)
(bad)
(bad)
(bad)
fldcw
inc
xor
test
cld
adc
dec
dec
dec
inc
sbb
in
popa
add
(bad)
(bad)
(bad)
call
out
pop
dec
into
fiadd
sub
cmc
dec
sbb
add
test
or
loopne
xchg
xchg
adc
or
push
mov
je
xor
clc
(bad)
(bad)
fdiv
xorps
rol
lea
inc
add
sbb
loope
sub
mov
sub
ucomiss
dec
sub
lock
inc
pop
test
mov
inc
ja
les
xor
cwde
or
mov
pushw
mov
out
mov
pop
fdivrp
mov
and
int
inc
mov
cwde
jo
mov
adc
cs
adc
(bad)
push
mov
dec
pop
push
cdq
push
xor
push
push
std
dec
adc
xor
dec
dec
adc
pop
inc
sbb
test
mov
(bad)
in
sub
push
clc
cdq
push
(bad)
cmc
cmp
mov
lock
xchg
jg
test
(bad)
dec
fdiv
mov
call
jo
dec
mov
inc
fwait
test
pop
pushf
add
mov
ret
mov
jle
sub
dec
or
cli
(bad)
inc
movs
out
and
inc
xchg
or
in
adc
dec
cmc
or
repnz
push
push
sub
dec
pop
imul
(bad)
push
push
scas
cmps
jne
or
arpl
hlt
cmp
ror
adc
or
ror
mov
(bad)
out
adc
push
inc
inc
push
mov
mov
(bad)
dec
es
mov
push
mov
fwait
and
adc
pop
push
cmps
add
mov
arpl
dec
hlt
push
pop
clc
(bad)
dec
sub
add
sar
fadd
sub
mov
pushw
xor
push
lods
popa
sbb
xchg
push
jns
jmp
mov
mov
inc
mov
sbb
or
(bad)
(bad)
call
jmp
push
and
push
xchg
fs
call
sbb
and
sbb
dec
ror
pop
fadd
or
add
(bad)
fistp
in
xor
adc
(bad)
out
nop
mov
(bad)
inc
pop
push
push
dec
mov
mov
or
shl
mov
(bad)
jg
in
mov
js
inc
push
inc
sub
(bad)
(bad)
(bad)
inc
sub
push
std
and
pop
and
out
mov
je
add
sbb
sbb
mov
mov
lea
ror
out
rol
mov
call
outs
xchg
shr
lock
or
xor
or
(bad)
popa
pop
mov
push
or
in
loop
xchg
or
or
and
(bad)
(bad)
call
add
inc
cs
cld
xor
push
push
mov
lahf
lahf
cmp
pop
mov
and
mov
fwait
push
outs
dec
pop
or
add
cld
dec
inc
sub
add
(bad)
(bad)
dec
dec
push
cwde
push
jo
sahf
mov
jle
xor
mov
or
or
(bad)
(bad)
jg
(bad)
loopne
push
adc
mov
adc
push
in
imul
mov
mov
mov
mov
push
ret
pop
daa
das
or
(bad)
inc
loope
adc
cs
pcmpeqb
rol
dec
aad
inc
pop
out
mov
sub
add
sub
(bad)
dec
push
mov
adc
mov
push
pop
push
push
xor
add
push
xor
pop
sbb
ret
and
sbb
ins
add
(bad)
mov
sbb
sbb
mov
inc
(bad)
(bad)
jmp
mov
pmulhuw
or
pushf
dec
or
retf
shl
add
xor
push
int
inc
rcr
mov
and
dec
clc
adc
pop
mov
clc
and
test
sti
sbb
pusha
inc
and
pop
aad
xor
(bad)
push
pop
jns
sub
adc
bound
and
mov
inc
sbb
inc
aam
dec
jbe
inc
push
lock
pushf
xchg
jo
cmc
xor
adc
xor
fstp
inc
(bad)
cmc
xor
mov
jl
sbb
adc
cwde
mov
popa
or
loopne
call
out
fwait
(bad)
jmp
pop
jl
ret
mov
call
dec
cmp
jne
mov
inc
imul
or
mov
xchg
inc
sub
test
iret
(bad)
(bad)
(bad)
fbld
(bad)
push
mov
adc
push
mov
int
inc
push
data16
push
fild
pop
leave
pop
arpl
or
(bad)
push
int3
or
dec
retf
cmp
enter
es
(bad)
(bad)
dec
rcr
into
leave
rcl
xor
mov
sbb
inc
ror
ret
scas
clc
jmp
adc
pop
mov
cmps
pop
xchg
add
and
jecxz
xor
in
push
and
out
mov
xor
(bad)
jmp
sbb
cwde
xor
mov
xor
das
ror
add
leave
cmp
(bad)
inc
sbb
adc
jb
aam
test
and
push
pop
(bad)
mov
cmp
aaa
xchg
pop
outs
push
mov
add
pusha
cld
(bad)
(bad)
(bad)
mov
jae
aaa
sbb
inc
mov
mov
dec
test
popf
(bad)
(bad)
call
or
outs
mov
cmp
es
adc
sti
push
cmp
inc
in
movs
(bad)
jg
push
call
push
jb
xchg
and
push
in
mov
in
mov
(bad)
(bad)
(bad)
out
jl
push
push
or
and
outs
pop
test
aam
sbb
adc
icebp
or
(bad)
mov
ins
addr16
add
fmul
mov
or
imul
movs
pop
inc
fadd
ror
sbb
out
adc
or
in
xor
les
ja
fbld
xor
in
ret
test
mov
(bad)
call
ret
(bad)
pop
rcl
xchg
ret
rcl
cmp
(bad)
(bad)
mov
push
push
sub
enter
dec
cmps
xchg
adc
push
mov
or
(bad)
dec
nop
inc
push
or
pusha
retf
(bad)
rcr
stos
popa
or
rol
call
(bad)
adc
inc
pop
leave
nop
(bad)
sbb
xchg
dec
fisttp
adc
and
mov
in
cld
inc
xchg
fs
fadd
fisttp
cwde
or
adc
cmp
in
enter
das
adc
xor
loope
pushf
cmp
jns
leave
xchg
ret
nop
je
cld
out
(bad)
(bad)
out
adc
pop
xor
jg
mov
mov
retf
add
enter
jmp
add
push
repnz
leave
jno
and
sub
shl
sub
push
sub
pop
cld
retf
pop
dec
test
fsub
add
call
cld
fbstp
and
int3
dec
sbb
mov
push
xchg
mov
cwde
pop
xchg
(bad)
dec
dec
push
mov
cwde
int
or
push
movs
add
cld
add
cmp
xchg
int
fs
aad
scas
test
nop
add
xchg
mov
call
into
popf
jo
cmp
fldenv
loop
stos
mov
xor
scas
clc
pop
cmc
sbb
xchg
ror
cwde
and
adc
pop
rcr
test
(bad)
inc
das
or
xchg
add
and
loopne
(bad)
mov
arpl
inc
test
mov
mov
nop
mov
adc
(bad)
jmp
push
js
lods
enter
vpminsw
fwait
lock
cdq
adc
adc
jg
add
mov
inc
xchg
shl
(bad)
inc
xchg
push
ins
nop
call
sbb
mov
in
sub
outs
rol
pop
icebp
cmc
inc
mov
shr
nop
add
int3
icebp
dec
and
movs
(bad)
call
pop
outs
sbb
lds
in
bound
clc
out
xchg
push
shl
cs
inc
cmps
jle
xor
mov
inc
(bad)
fdiv
cmps
sub
inc
shl
adc
cmp
push
(bad)
jmp
jp
enter
not
imul
aad
pop
call
jg
push
aad
test
inc
mov
dec
mul
lock
mov
(bad)
inc
xor
xchg
xlat
push
xchg
leave
inc
xchg
sahf
mov
outs
lea
xlat
adc
adc
xlat
sub
cli
call
pushf
add
add
mov
add
add
leave
sub
je
fdiv
test
mov
mov
(bad)
mov
pop
mov
cmp
mov
scas
clc
cmps
cld
cs
or
add
and
add
fst
aaa
cld
xchg
nop
cmc
add
mov
arpl
fiadd
fidivr
sar
test
sub
fild
pop
inc
push
leave
or
fisttp
xor
cli
fist
xor
enter
and
sub
outs
mov
add
dec
and
add
jg
add
adc
adc
xor
pop
add
cmp
and
outs
fisttp
call
xchg
sbb
repnz
adc
(bad)
xchg
(bad)
(bad)
fbstp
inc
jb
and
fbstp
test
or
loopne
mov
mov
push
loope
sub
mov
jmp
(bad)
loope
das
push
xor
loop
mov
loop
jb
and
dec
push
in
loop
push
nop
add
sbb
jecxz
hlt
jecxz
(bad)
dec
das
in
cmp
sub
mov
adc
sub
cmp
add
dec
in
out
add
xor
out
sub
pop
jno
leave
mov
add
movs
inc
push
out
jmp
out
inc
add
inc
cmps
xor
jae
loope
sub
adc
call
cld
scas
paddd
outs
jmp
jmp
xlat
jmp
jl
jmp
jmp
sbb
cmp
sbb
and
cdq
cmp
(bad)
dec
pop
jmp
inc
push
mov
xlat
popa
sbb
cmp
ret
push
sbb
in
fs
fisub
and
in
push
push
ret
ret
aas
inc
hlt
mov
nop
add
xchg
jne
sub
sbb
repnz
gs
push
and
cmp
cmc
sbb
(bad)
out
mov
add
inc
movs
inc
pop
out
lds
stos
arpl
scas
lock
jmp
je
in
jmp
and
inc
sbb
inc
outs
clc
(bad)
(bad)
dec
and
mov
ror
sti
inc
mov
pop
loopne
adc
push
push
mov
or
jbe
dec
nop
cmp
imul
lds
cs
mov
sub
inc
jb
mov
add
(bad)
(bad)
cmp
cmc
xchg
enter
push
inc
mov
mov
cmp
pop
push
not
pop
(bad)
jg
push
pushf
pushf
add
lahf
push
leave
add
or
or
mov
or
and
cwde
(bad)
(bad)
(bad)
(bad)
dec
loope
add
movs
rcr
push
imul
ficomp
add
and
ret
adc
jmp
and
shl
ins
sahf
nop
and
adc
or
or
inc
xor
call
inc
fldenv
dec
or
rcl
lock
add
and
call
adc
ds
and
std
sbb
xchg
movs
lock
pop
bound
ins
(bad)
dec
jmp
and
add
push
mov
test
jmp
xchg
mov
mov
scas
call
int
and
sub
pop
xchg
pop
and
mov
idiv
into
out
inc
pop
int3
cmp
(bad)
jmp
add
push
outs
in
mov
es
push
sbb
mov
mov
mov
jmp
stc
xor
mov
sub
jo
imul
inc
clc
(bad)
jmp
ja
popf
cdq
nop
inc
ret
sbb
jne
pop
xchg
stc
stos
pushf
in
(bad)
(bad)
dec
mov
(bad)
cli
sub
pop
mov
jl
mov
nop
jnp
jp
and
add
sti
push
add
(bad)
or
ins
push
ins
sar
or
dec
xchg
mov
xchg
dec
ins
int3
sub
fmul
adc
(bad)
dec
sti
sub
xor
punpckldq
jg
sbb
das
adc
or
xor
adc
(bad)
(bad)
(bad)
call
adc
lds
push
sub
mov
push
push
mov
or
sub
mov
call
jl
jge
mov
sbb
lds
sub
mov
add
popa
in
push
cmp
fild
sub
adc
fistp
aam
frstor
test
sub
push
test
adc
push
and
sub
(bad)
mov
mov
xchg
ja
push
mov
push
inc
les
jg
sbb
or
sbb
sbb
inc
inc
jno
and
lea
and
cs
adc
(bad)
(bad)
push
sbb
fsubr
cs
neg
sbb
mov
sbb
and
std
(bad)
push
mul
cmp
jle
and
and
cwde
lock
les
imul
(bad)
(bad)
call
cmp
xchg
or
pusha
mov
add
daa
aam
(bad)
sar
(bad)
(bad)
jmp
mov
sub
mov
sub
jmp
sbb
push
test
push
nop
(bad)
aaa
ret
icebp
aaa
sub
add
mov
cwde
add
(bad)
(bad)
jmp
aam
pusha
or
sbb
fcomp
lods
add
add
mov
mov
sub
mov
add
(bad)
dec
mov
add
out
add
jmp
(bad)
xor
daa
cld
mov
or
cmp
or
xor
stos
mov
jg
adc
sar
xor
pushf
xchg
std
aaa
cmp
call
mov
aam
fcomp
sub
lods
sbb
cmps
dec
adc
jecxz
xor
jnp
mov
or
pop
xor
fcom
les
fdiv
(bad)
jmp
cmp
aam
cs
jnp
sub
iret
cmp
add
add
jne
dec
in
daa
aas
adc
pop
mov
xchg
mov
call
mov
adc
mov
adc
add
xchg
push
push
mov
mov
add
dec
xchg
lods
push
repnz
addr16
daa
bound
(bad)
lahf
fild
xor
dec
pop
jne
mov
hlt
(bad)
mov
add
dec
fs
xchg
stos
mov
cmp
nop
out
popf
std
test
push
cld
push
mov
adc
js
pandn
mov
mov
inc
push
cs
pushf
add
pop
jo
repz
scas
mov
dec
inc
push
addr16
jg
jnp
stos
mov
or
daa
add
inc
pop
outs
je
cwde
scas
mov
or
ret
or
or
ins
repnz
xor
and
ins
movs
add
(bad)
call
and
aaa
shr
dec
cdq
fadd
cmp
imul
outs
mov
adc
jecxz
xchg
xor
inc
jns
xor
in
inc
xor
(bad)
(bad)
push
xchg
(bad)
inc
xlat
cmp
push
setnp
xchg
stos
sub
or
adc
(bad)
(bad)
out
xchg
mov
inc
add
pop
mov
test
retf
(bad)
(bad)
(bad)
call
imul
imul
cmp
(bad)
dec
dec
and
cmps
in
cld
es
or
clc
clc
mov
arpl
mov
test
sub
je
popf
mov
call
adc
adc
ds
sbb
pop
popf
mov
jge
mov
ss
mov
icebp
int3
pop
fiadd
jmp
push
test
adc
imul
push
add
fucomip
imul
sbb
dec
call
mov
adc
nop
xchg
or
xlat
xor
and
(bad)
fistp
cmp
test
dec
aas
jbe
ja
adc
or
inc
outs
or
lods
fdivp
push
adc
jmp
inc
xchg
pushf
or
push
cli
dec
cmp
dec
sub
ret
bnd
fadd
call
xor
(bad)
dec
ins
jno
sbb
call
sub
int3
mov
push
repnz
xor
mov
data16
mov
(bad)
fild
mov
daa
int
nop
nop
mov
call
sar
(bad)
jae
xchg
fisttp
jo
inc
jg
xor
scas
lea
bound
mov
cmp
ja
mov
in
js
pop
pop
test
add
clc
mov
push
adc
(bad)
xchg
add
loope
cld
call
adc
fsubr
test
pop
dec
or
or
and
(bad)
jg
jae
or
add
call
fadd
and
imul
(bad)
(bad)
(bad)
(bad)
mov
mov
xor
in
aam
adc
mov
sub
loop
(bad)
(bad)
jg
push
and
mov
push
imul
sbb
(bad)
call
test
les
xchg
call
or
shl
cli
cmps
mov
test
mov
pop
(bad)
(bad)
inc
add
sub
sub
or
loop
(bad)
jmp
xor
sub
das
push
test
sub
(bad)
(bad)
(bad)
mov
sbb
repnz
xchg
scas
adc
mov
jge
jmp
(bad)
(bad)
jmp
std
(bad)
sbb
fcomp
jo
jmp
pusha
inc
push
stos
xlat
pop
in
push
push
sub
(bad)
(bad)
dec
clc
adc
mov
and
mov
mov
repz
cli
push
and
xor
mov
pop
jb
mov
push
push
dec
lock
(bad)
jg
cmp
mov
call
mov
fistp
test
adc
(bad)
(bad)
jmp
xchg
movs
or
das
push
mov
inc
test
lea
adc
test
adc
push
pusha
jae
(bad)
(bad)
(bad)
dec
or
push
test
loopne
or
pop
cmp
(bad)
call
inc
int
mov
inc
jb
and
jmp
(bad)
dec
clc
js
push
das
push
mov
push
xchg
pop
add
and
mov
jecxz
sub
call
jp
fstp
mov
dec
push
jns
mov
arpl
sar
(bad)
out
or
and
shl
cli
xor
adc
pop
inc
in
hlt
(bad)
(bad)
(bad)
push
pop
jg
add
shr
imul
and
imul
adc
je
(bad)
dec
lock
movs
jae
daa
adc
push
add
es
and
fdivr
(bad)
in
dec
dec
add
cs
enter
inc
dec
mov
loope
das
add
fisttp
inc
push
lds
shl
xchg
call
clc
bound
and
ds
jmp
mov
push
and
xor
stos
and
push
inc
pop
push
pop
add
outs
mov
(bad)
sbb
xchg
xor
sbb
retf
outs
(bad)
(bad)
jg
dec
jl
dec
enter
or
xchg
mov
xlat
sub
leave
xor
jl
popa
jmp
popa
jmp
sbb
adc
lock
nop
mov
lock
daa
fistp
lock
sbb
xchg
sar
or
retf
mov
rol
sbb
push
xchg
xchg
sbb
(bad)
(bad)
sbb
pop
cli
push
fdiv
inc
repnz
sub
repnz
in
push
adc
nop
inc
leave
add
repnz
(bad)
daa
(bad)
dec
lods
cmp
in
je
inc
and
pop
xchg
leave
or
outs
mov
(bad)
(bad)
dec
sbb
push
jl
lods
(bad)
pusha
sub
test
inc
mov
cs
mov
pushf
and
jg
jbe
cdq
lds
push
cmp
jb
in
mov
and
enter
inc
out
int3
or
adc
das
and
inc
cmp
(bad)
enter
movs
loopne
nop
xor
jo
call
cld
jmp
das
shl
sahf
lea
enter
pop
lock
and
adc
enter
clc
jl
out
dec
sahf
xchg
jl
lea
sub
sbb
retf
push
sahf
fprem
and
dec
push
aad
and
scas
jmp
leave
and
and
aas
nop
pushf
in
jmp
pop
das
clc
pushf
and
jno
mov
xlat
aaa
and
sbb
sub
fwait
push
gs
push
pop
(bad)
pop
(bad)
dec
and
or
das
adc
test
es
(bad)
pop
adc
aam
es
daa
mov
add
call
xchg
xor
push
mov
add
(bad)
push
repnz
jg
jmp
pop
retf
popa
and
test
scas
sub
mov
inc
lock
(bad)
pop
inc
adc
jb
je
fldcw
sub
inc
(bad)
(bad)
(bad)
mov
imul
and
mov
bound
(bad)
call
mov
xor
xlat
sbb
sub
sbb
ins
adc
adc
inc
aad
push
push
or
pop
(bad)
(bad)
push
and
sub
mov
jecxz
and
sub
xor
je
push
ins
inc
jo
sub
es
jmp
leave
sbb
or
mov
popa
xchg
pushf
cmp
pop
js
jbe
xchg
xor
add
jb
pusha
push
shl
jmp
add
jmp
cmp
cmp
jns
push
push
repnz
mov
sub
adc
dec
mov
(bad)
in
aas
inc
sub
xor
push
cmp
xor
mov
add
sub
xor
test
icebp
(bad)
(bad)
(bad)
fidivr
cmp
leave
xor
xor
inc
enter
fisttp
xor
push
test
push
xor
mov
sbb
xor
xor
call
pop
cmps
and
fsubr
xor
add
call
scas
fld
cmps
add
jmp
(bad)
mov
inc
enter
xchg
mov
loope
aaa
push
lds
(bad)
(bad)
(bad)
call
jl
and
adc
sub
add
add
aam
movs
aas
cmp
adc
cmps
mov
inc
mov
cmp
add
aaa
std
inc
xor
ins
out
jae
test
cmp
(bad)
scas
sbb
mov
jle
push
gs
add
or
loopne
ret
mov
adc
pop
jne
jmp
cdq
cmp
div
les
add
and
(bad)
mov
in
sbb
and
sub
xchg
and
scas
add
ds
in
cmp
jg
popa
aas
std
(bad)
dec
ds
adc
and
cmp
hlt
aas
add
sub
pop
aas
cmps
daa
inc
icebp
push
jg
out
clc
aas
lods
jb
and
and
pop
(bad)
xchg
test
(bad)
push
js
inc
push
push
lock
push
hlt
xor
push
push
or
nop
call
scas
cli
adc
repnz
mov
inc
stc
adc
icebp
aaa
shl
add
xchg
inc
sub
hlt
inc
(bad)
in
scas
mov
add
mov
add
pop
int
bound
and
cmp
shl
(bad)
fild
out
inc
fadd
add
push
or
retf
in
mov
dec
mov
shr
cmp
rol
les
adc
and
or
add
daa
popf
and
popa
dec
outs
rol
(bad)
gs
aaa
sar
sub
or
ins
sbb
xor
and
mov
xor
xor
and
mov
or
push
mov
int3
mov
iret
mov
and
aam
jnp
xor
(bad)
push
or
loop
fs
lods
pushf
xor
adc
inc
sbb
pushf
subps
pop
push
cli
(bad)
inc
push
jmp
mov
and
mov
(bad)
(bad)
inc
inc
cmps
add
adc
push
in
xchg
lods
jne
xchg
add
xor
fcomip
mov
je
pop
mov
cmp
(bad)
je
mov
xor
add
xor
aam
(bad)
(bad)
jmp
test
mov
mov
xchg
pushf
pop
test
xchg
test
lods
test
xor
mov
(bad)
(bad)
(bad)
push
jns
out
iret
pop
mov
nop
push
int3
addr16
fadd
js
mov
popf
xor
jo
mov
or
pop
sub
mov
inc
pop
cmc
jmp
(bad)
mov
call
push
mov
call
cmp
inc
push
cmps
lods
dec
mov
adc
cs
(bad)
(bad)
out
sbb
sar
(bad)
aam
mov
adc
imul
or
and
xor
inc
mov
xor
ss
adc
stos
push
or
jbe
(bad)
(bad)
jg
adc
stos
test
inc
mov
fdivr
cwde
sub
das
fisubr
xchg
test
popa
push
pop
cli
(bad)
(bad)
mov
rcr
cld
out
enter
push
mov
or
call
pushf
pop
sub
ss
pop
push
fs
popf
(bad)
mov
lods
dec
outs
cmp
outs
xor
push
push
retf
mov
adc
sub
pop
clc
cwde
scas
mov
sbb
retf
cmp
push
adc
data16
pop
add
mov
push
fwait
rcl
shr
(bad)
into
jbe
mov
(bad)
enter
ret
(bad)
(bad)
(bad)
jmp
fsubr
fadd
fldenv
arpl
sbb
addr16
jmp
inc
and
add
call
xchg
sbb
lahf
js
rcl
push
bound
pop
iret
mov
mov
push
mov
outs
pop
call
sbb
mov
daa
(bad)
dec
in
add
adc
mov
shl
xor
xchg
push
(bad)
jmp
add
and
test
inc
add
add
add
call
xor
mov
xchg
int
fisub
outs
jecxz
adc
call
and
mov
xor
icebp
inc
idiv
adc
pop
mov
leave
rcl
es
adc
jg
or
mov
enter
inc
jo
(bad)
push
icebp
idiv
jg
xchg
test
sti
fdiv
add
add
stc
adc
pusha
jl
sahf
mov
mov
ficomp
xchg
or
mov
(bad)
(bad)
jmp
push
ja
test
adc
mov
or
push
imul
lods
or
es
(bad)
(bad)
mov
movs
mov
mov
lods
push
shl
add
je
adc
lock
push
push
add
push
pushf
xchg
cwde
lahf
adc
push
push
mov
mov
add
add
shl
lds
jl
or
dec
ffreep
inc
(bad)
push
jmp
fwait
int
jo
dec
in
or
int
ret
or
nop
mov
dec
loopne
rcl
jl
(bad)
call
adc
ror
(bad)
mov
jmp
mov
ja
push
aad
in
les
(bad)
cmp
(bad)
push
mov
lock
add
fnstcw
(bad)
(bad)
inc
push
xor
adc
mov
aas
icebp
push
repnz
js
ror
or
push
ficom
sbb
mov
(bad)
(bad)
jmp
pop
or
inc
stos
push
and
inc
mov
mov
cmp
adc
xchg
mov
xchg
(bad)
(bad)
(bad)
call
xchg
add
inc
cmps
pop
sub
mov
(bad)
mov
shr
call
(bad)
hlt
xchg
xor
add
adc
inc
cs
(bad)
(bad)
fsub
imul
cmp
(bad)
pop
es
inc
mov
add
sbb
jg
(bad)
(bad)
mov
nop
mov
xor
fadd
adc
adc
addr16
and
pop
mov
and
movs
sbb
loopne
jb
loopne
mov
fdivr
and
sub
int3
sub
cmp
cs
sub
sub
stos
sub
dec
cmps
cmp
push
cmp
ja
fimul
ins
jb
aam
sbb
(bad)
call
lods
dec
or
das
sbb
add
jo
cld
pop
loopne
push
sub
lods
and
pop
sbb
outs
lahf
mov
add
outs
aaa
addr16
popa
adc
inc
mov
mov
cld
scas
mov
mov
mov
addr16
dec
loopne
lea
mov
push
(bad)
pop
cs
cs
(bad)
nop
add
call
nop
fcomp
pop
sahf
div
pop
xchg
xchg
femms
cwde
sbb
xchg
sub
pushf
(bad)
push
ss
or
add
lea
xlat
add
push
dec
cli
adc
or
mov
lea
cs
mov
cmc
add
mov
adc
ss
dec
dec
leave
push
retf
pusha
into
rcr
imul
sar
dec
(bad)
neg
rep
sahf
in
fldcw
(bad)
js
loop
sahf
int
fstp
pop
loopne
loope
inc
jge
jle
loop
jle
cmp
lahf
out
iret
in
jo
in
mov
(bad)
jmp
out
ret
imul
imul
inc
pop
inc
out
mov
jp
inc
pusha
mov
shl
xor
sti
into
or
cmp
add
inc
(bad)
aam
xchg
add
cmp
enter
test
sbb
sahf
push
shr
test
pop
or
inc
lahf
sti
mov
ds
mov
push
pop
push
in
test
mov
push
pop
push
hlt
pop
and
pusha
in
xchg
add
mov
inc
adc
add
mov
mov
push
pusha
fwait
rol
rol
cs
mov
(bad)
retf
enter
and
inc
ss
iret
mov
mov
sbb
(bad)
xlat
mov
mov
int
(bad)
call
das
and
popf
sbb
stc
fdivr
mov
fild
xchg
call
jl
sbb
out
mov
enter
dec
ss
aaa
nop
sbb
in
lods
xlat
push
int
and
shl
add
loope
aad
xlat
fild
aaa
push
fcmovnb
ffree
xchg
fiadd
ffreep
hlt
(bad)
(bad)
loopne
and
test
aam
and
jecxz
mov
hlt
loop
push
movs
(bad)
(bad)
fsub
mov
adc
shr
(bad)
(bad)
mov
je
jge
lock
pop
in
in
inc
push
out
push
mov
clc
(bad)
inc
out
js
cmc
mov
test
fwait
jno
clc
and
jle
loopne
inc
aaa
sub
dec
adc
rol
ins
cmp
loopne
ins
adc
pop
cwde
jns
mov
push
cwde
pop
sub
iret
or
or
mov
js
mov
and
outs
or
scas
sub
push
sub
mov
cmps
cs
inc
cmc
cs
lds
mov
das
inc
inc
outs
inc
aam
(bad)
(bad)
call
imul
push
fdivr
pop
push
pop
neg
cmp
add
(bad)
jmp
jp
(bad)
imul
lods
and
sbb
pusha
es
or
retf
addr16
pusha
jnp
inc
outs
pop
scas
xchg
cmp
inc
jle
and
jg
not
cmps
ja
push
sar
mov
cmp
(bad)
cmp
hlt
fiadd
ins
inc
bound
pushf
es
mov
adc
cmps
mov
xor
shr
int3
cld
jg
ror
ret
aam
ret
ret
mov
out
(bad)
call
and
inc
ror
shr
pop
mov
ds
ja
cmp
add
(bad)
(bad)
call
stos
inc
add
add
adc
xor
add
lock
ror
and
call
jno
add
xchg
mov
push
xchg
lahf
pop
add
push
dec
inc
pushf
mov
add
outs
sbb
mov
push
cmp
movs
in
mov
mov
and
mov
cmp
movs
pushf
cmps
add
(bad)
mov
adc
mov
mov
mov
scas
hlt
iret
mov
pop
cmc
dec
cwde
mov
mov
mov
mov
mov
xchg
ret
add
scas
inc
(bad)
ror
push
fmul
mov
pop
sub
nop
fsubp
outs
in
cmp
jl
out
lock
mov
pop
push
cmc
inc
sbb
add
(bad)
mov
or
and
or
or
xor
xchg
add
mov
jmp
adc
add
xchg
lds
add
jg
or
shl
ja
xchg
scas
xchg
icebp
fstp
je
es
je
xchg
in
sbb
mov
adc
pop
hlt
pusha
mov
ins
xchg
or
out
cmp
inc
inc
adc
(bad)
fild
fsubr
push
xor
les
inc
jno
(bad)
(bad)
(bad)
dec
add
add
(bad)
pop
inc
add
and
push
add
rcr
mov
add
push
sbb
std
add
aas
dec
pop
mov
xchg
inc
mov
out
mov
(bad)
mov
inc
xor
in
mov
scas
scas
adc
or
(bad)
(bad)
(bad)
dec
pop
inc
or
ja
cmp
int3
pop
push
cli
sahf
mov
mov
(bad)
inc
fwait
int
or
cld
aaa
sub
xchg
and
or
jecxz
popf
rol
mov
push
pop
call
aad
mov
push
aad
sub
and
fist
rol
xchg
js
push
divps
lock
dec
fsubr
leave
add
mov
jg
imul
sbb
clc
dec
retf
cs
fist
out
retf
fsub
int3
sbb
cld
push
aaa
dec
iret
int
push
movs
push
xor
out
adc
rcr
aam
push
pop
retf
div
add
fadd
mov
sub
cwde
jo
(bad)
(bad)
call
xor
mov
mov
sbb
xor
xor
movs
or
fnsave
jae
add
cmps
xchg
xchg
sti
or
jne
(bad)
push
mov
int3
fisub
icebp
(bad)
fstp
imul
or
xchg
mov
add
sub
sbb
dec
add
mov
mov
test
ret
outs
mov
ins
adc
(bad)
jmp
push
dec
adc
xchg
add
mov
and
push
inc
ja
jle
adc
xchg
jne
nop
and
out
sahf
fist
push
addr16
adc
sbb
(bad)
cmp
jmp
inc
mov
mov
rol
outs
or
push
or
inc
fsubr
add
cs
fcom
add
(bad)
call
mov
add
or
(bad)
pusha
dec
sbb
fbld
or
cmp
add
jle
es
inc
(bad)
movs
pop
aam
xchg
adc
and
and
inc
adc
mov
imul
bound
daa
adc
cmp
mul
inc
add
mov
pop
push
rcl
jbe
pop
add
add
cmp
xor
sub
or
jb
sbb
jecxz
or
push
mov
popf
jb
pop
sti
and
ins
inc
adc
inc
jo
cwde
shr
add
push
inc
dec
js
jecxz
and
ja
(bad)
call
imul
add
or
mov
or
(bad)
dec
and
leave
nop
sub
test
rcr
push
add
(bad)
fist
add
or
loopne
jae
mov
pop
inc
or
inc
(bad)
xchg
fisubr
jmp
cld
adc
retf
call
sbb
repz
add
fdivrp
dec
nop
add
adc
xor
adc
pop
ds
pusha
mov
adc
(bad)
fcomip
push
out
adc
cmps
repnz
dec
adc
inc
(bad)
cld
call
ror
aam
mov
xchg
cmp
cmp
pop
or
adc
push
or
add
mov
or
cdq
out
hlt
das
or
add
push
das
adc
(bad)
jmp
mov
and
push
mov
cli
inc
aaa
(bad)
sbb
dec
xchg
mov
cmp
mov
(bad)
dec
fstp
cmp
icebp
cwde
imul
xchg
sbb
jb
inc
mov
adc
sub
pop
push
inc
pusha
adc
push
das
or
push
mov
dec
(bad)
(bad)
(bad)
jmp
sub
stc
fiadd
iret
fwait
add
or
mov
fimul
lahf
out
mov
sbb
mov
add
dec
aam
add
add
(bad)
dec
lods
rol
mov
sbb
jl
mov
and
sub
(bad)
jmp
dec
xchg
in
xor
das
ret
leave
cmp
add
inc
test
jo
pop
inc
jae
scas
xchg
xor
call
adc
jo
add
xchg
add
mov
mov
(bad)
(bad)
jg
or
mov
push
or
fs
inc
rol
push
mov
repz
(bad)
(bad)
jmp
add
js
mov
xor
cmps
add
pushf
pop
scas
js
sub
xchg
neg
aam
push
cld
call
xor
jo
xor
xor
call
call
mov
int3
add
cmp
(bad)
(bad)
push
sbb
sar
sar
aam
mov
or
and
int
(bad)
add
bound
std
scas
add
dec
into
inc
add
push
add
pop
inc
loopne
loop
in
xchg
add
dec
sahf
idiv
or
push
or
or
daa
sbb
sub
stc
lahf
push
and
and
and
adc
adc
adc
pop
xor
xor
mov
sbb
aaa
shr
jmp
push
ds
push
adc
loope
cmp
ds
jl
and
sbb
out
(bad)
dec
sub
inc
dec
push
sbb
clc
clc
push
sbb
add
mov
fidivr
sbb
fs
inc
mov
aaa
shr
inc
inc
das
inc
cmp
dec
xchg
hlt
out
mov
pop
cmp
adc
clc
fdiv
fnstsw
mov
hlt
push
add
mov
cli
adc
push
dec
push
jmp
pop
enter
daa
pop
call
inc
(bad)
push
leave
lock
sub
xchg
lock
xor
or
(bad)
(bad)
push
cmps
lods
cmc
add
mov
cmps
cmp
stc
fucomip
lock
add
outs
add
(bad)
dec
jnp
adc
push
and
xchg
ret
or
retf
push
hlt
es
(bad)
mov
pop
adc
clc
lahf
and
jl
stc
call
std
mov
addr16
xor
sub
jecxz
mov
mov
push
and
stc
enter
pop
test
and
scas
mov
xor
push
mov
ds
xlat
rol
(bad)
jg
mov
xor
or
or
in
dec
call
sbb
cmp
lock
(bad)
in
repz
sub
jb
fbld
enter
xchg
retf
sub
in
dec
idiv
dec
lock
xor
xor
loop
push
sar
call
loopne
and
ins
pop
je
daa
cmp
push
nop
popfw
or
pop
(bad)
fild
jb
js
add
dec
and
mov
add
test
jmp
(bad)
(bad)
(bad)
jmp
ret
(bad)
out
dec
sub
or
jl
adc
add
add
call
sub
mov
xchg
repnz
test
adc
out
push
call
das
mov
scas
xor
(bad)
call
ja
and
adc
xchg
xchg
mov
push
mov
jbe
xor
add
or
xchg
add
mov
(bad)
call
les
cmp
cwde
lea
mov
(bad)
dec
cmps
inc
xlat
jg
cmps
or
iret
fs
mov
sahf
jnp
fs
add
(bad)
call
add
shr
mov
pop
adc
push
xor
mov
enter
xchg
call
mov
pop
mov
dec
push
(bad)
pop
dec
add
mov
lock
(bad)
fild
(bad)
stos
scas
xor
jae
call
xchg
push
pop
icebp
call
dec
and
call
and
inc
(bad)
scas
jge
jl
(bad)
(bad)
dec
mov
dec
ds
mov
stos
push
or
scas
xlat
inc
stos
mov
test
cmp
in
xor
(bad)
(bad)
push
cmovbe
outs
pop
je
ss
arpl
nop
mov
das
or
mov
inc
push
cmp
outs
or
xchg
xor
(bad)
cmp
nop
mul
test
adc
popa
aam
cs
(bad)
(bad)
(bad)
call
xchg
repz
outs
test
pop
loop
or
cld
fwait
mov
call
ror
pop
mov
(bad)
(bad)
(bad)
jmp
(bad)
mov
sbb
fucomp
xchg
int3
pop
pop
adc
dec
xor
adc
adc
sbb
adc
outs
idiv
(bad)
(bad)
push
xor
add
lock
mov
call
int3
push
ins
hlt
aaa
mov
(bad)
(bad)
push
cmps
mov
mov
mov
scas
(bad)
jo
es
aad
stc
rol
push
push
mov
sbb
fimul
es
inc
rcl
inc
pushf
mov
test
dec
loopne
adc
fild
inc
xchg
mov
int3
fwait
std
push
pushf
push
pop
and
mov
fbld
lods
mov
sahf
adc
ds
(bad)
fisttp
imul
xor
aas
sbb
call
ja
pusha
cmp
test
adc
mov
mov
sub
cs
pusha
lahf
outs
mov
push
and
and
mov
aas
mov
stos
mov
leave
inc
repnz
add
sub
cmps
inc
dec
and
push
cmp
jb
mov
outs
or
jo
mov
mov
sahf
mov
div
dec
rcl
or
dec
sbb
test
dec
rol
or
imul
cmp
test
and
aaa
fld
shr
sub
sub
sbb
pusha
xchg
pusha
lods
js
jmp
or
out
mov
and
(bad)
jg
adc
push
xchg
ds
mov
jb
(bad)
out
clc
test
adc
inc
mov
sub
inc
pop
jns
enter
(bad)
call
pop
jl
mov
add
xchg
(bad)
mov
les
cs
sub
cs
dec
push
ja
pop
adc
dec
push
stc
adc
cmp
dec
add
(bad)
(bad)
push
ins
add
jl
cmp
repnz
sbb
lods
cmp
(bad)
mov
(bad)
call
sbb
in
lock
sahf
cmp
cmp
or
sub
sub
fst
xor
outs
(bad)
push
call
push
fistp
ins
dec
jo
cmp
fistp
mov
mov
js
(bad)
xlat
(bad)
aaa
cmp
ss
push
mov
cmp
mov
fisttp
jl
jl
(bad)
into
into
(bad)
call
cmps
dec
sbb
psubsb
jb
adc
jl
jl
jl
inc
mov
ins
aas
sbb
add
call
sub
stos
cmp
test
lock
(bad)
call
pop
push
push
adc
sbb
push
sbb
or
(bad)
nop
jmp
retf
and
xlat
mov
adc
call
add
ret
and
xsha1
cmps
or
adc
std
ins
mov
and
sub
push
test
shl
neg
shl
inc
repnz
push
adc
std
out
adc
sbb
loopne
sbb
push
nop
inc
pop
xlat
(bad)
pop
pusha
call
jmp
xchg
pop
sbb
mov
xchg
and
(bad)
aas
push
push
dec
std
jmp
dec
mov
sub
cwde
push
or
cli
or
nop
xor
cmp
mov
ror
out
fsub
call
(bad)
add
cdq
pusha
dec
and
lock
inc
dec
(bad)
in
in
mov
push
into
repz
pusha
(bad)
cdq
add
clc
cmp
nop
(bad)
dec
mov
add
rcr
sbb
adc
into
retf
shr
inc
clc
outs
sar
xor
(bad)
iret
rcr
shl
lods
or
inc
xor
inc
out
fdiv
leave
fbld
inc
(bad)
xlat
mov
pop
gs
es
add
mov
push
out
lods
add
leave
enter
mov
daa
mov
or
push
and
or
test
imul
add
pop
and
pop
ins
jb
sbb
xlat
adc
(bad)
fld
or
or
cwde
or
push
sub
add
movs
(bad)
jg
push
inc
fs
ficomp
jne
dec
(bad)
push
rcl
push
aad
mov
or
pop
or
adc
mov
adc
adc
add
mov
add
xchg
fs
push
and
xor
in
pop
jbe
push
add
add
add
aam
int
pusha
adc
push
add
jmp
mov
(bad)
jp
or
fbstp
add
add
or
test
or
mov
sahf
add
inc
add
sbb
(bad)
push
jo
test
pop
lds
test
inc
and
sub
mov
fwait
sahf
call
inc
dec
movd
out
mov
loope
or
(bad)
call
add
popa
push
movs
repz
dec
test
push
push
push
inc
xchg
in
inc
mov
cmp
pop
jmp
sub
outs
pop
add
call
aas
inc
outs
rol
adc
sub
inc
pop
dec
rol
(bad)
cmps
(bad)
fldcw
pop
in
(bad)
leave
push
pop
mov
push
outs
add
popa
rcr
xor
jmp
shl
push
jns
ja
mov
push
lea
push
push
js
cmp
or
add
dec
sub
jg
(bad)
push
mov
add
jb
mov
cmp
or
fidivr
cli
jg
or
or
xchg
and
inc
sub
sahf
lea
(bad)
out
sub
setl
add
mov
lock
mov
or
cvttps2pi
dec
scas
jl
addr16
push
shl
loopne
jmp
xchg
sub
(bad)
sti
call
or
fisttp
and
push
or
add
movs
pop
pop
in
(bad)
xchg
clc
(bad)
call
adc
sbb
inc
or
and
mov
inc
mov
pmulhuw
pop
and
dec
push
std
jg
push
aas
ins
sbb
in
adc
sbb
push
pop
je
retf
outs
add
cwde
push
mov
aam
cmps
test
jg
jg
inc
fs
mov
in
or
aas
or
push
mov
dec
or
cmp
xchg
aaa
jnp
inc
inc
inc
mov
mov
rcr
dec
hlt
fimul
mov
(bad)
jl
or
xchg
add
call
push
mov
(bad)
cmp
iret
xlat
outs
(bad)
xlat
push
pop
or
mov
ret
sbb
push
pop
(bad)
ficomp
(bad)
mov
(bad)
(bad)
mov
push
out
neg
push
fstp
imul
push
mov
(bad)
(bad)
(bad)
inc
lods
adc
sbb
pop
imul
sbb
popa
ja
pop
cli
cli
push
shl
pop
iret
sub
(bad)
(bad)
(bad)
out
mov
push
lock
wrmsr
std
cmc
out
inc
das
scas
cld
jb
mov
clc
fmul
mov
cmc
fdivr
jmp
cld
cmc
(bad)
call
fidiv
ret
sub
call
jl
out
ins
scas
push
pop
test
cmc
out
ror
loopne
cmp
aad
xchg
push
dec
les
(bad)
fisubr
test
mov
push
lods
loope
fdiv
scas
fcmovbe
(bad)
and
cld
lock
sub
mov
cmovp
pcmpeqb
xchg
(bad)
(bad)
(bad)
jmp
jns
movs
jle
psubusb
fidivr
sti
sub
jge
sub
sbb
ins
sbb
cwde
mov
pop
aaa
dec
jge
adc
sbb
add
xor
pop
icebp
jg
cs
mov
js
arpl
fcom
mov
iret
sub
jmp
in
imul
xor
mov
lods
pusha
lock
enter
jg
ret
(bad)
repz
and
pavgb
scas
ret
mov
push
sub
lock
mov
(bad)
(bad)
jmp
(bad)
(bad)
fsubr
call
jae
retf
inc
lods
mov
inc
pushf
lods
jmp
int3
jg
push
cld
nop
out
nop
bound
aam
push
cs
mov
fisub
push
test
pop
aam
mov
clc
(bad)
(bad)
pop
aas
int3
and
sar
fidiv
cmovs
js
sti
cwde
sub
shld
rcl
(bad)
(bad)
cmp
jno
or
scas
mov
jo
imul
push
fwait
dec
and
out
(bad)
int
xor
aam
sub
cmp
cli
call
and
into
in
loopne
sbb
iret
sbb
push
push
sub
dec
lods
fsub
js
push
cmp
into
cli
movs
fs
in
ficomp
dec
add
push
inc
mov
in
loopne
test
sar
call
add
add
imul
addps
sbb
add
shl
call
pop
and
jle
popa
mov
(bad)
jmp
pop
push
nop
push
data16
fcom
int3
rol
cmp
shl
loopne
mov
iret
mov
fcmovnu
loopne
sub
push
(bad)
(bad)
(bad)
push
aam
mov
jo
inc
rcr
mov
push
(bad)
(bad)
push
aad
fidiv
cmp
mov
fdivr
imul
(bad)
ficom
mov
push
push
ja
cdq
imul
std
adc
sti
(bad)
nop
rol
(bad)
iret
(bad)
loopne
sub
cld
in
jg
push
push
adc
fstp
test
xlat
mov
add
(bad)
cmp
mov
mov
sub
dec
dec
leave
fnstcw
push
pop
fdivr
nop
test
or
rol
pop
(bad)
inc
xlat
or
and
inc
(bad)
mov
cmp
pop
push
inc
pop
cmp
jbe
pushf
out
in
nop
icebp
call
mov
mov
sub
les
or
dec
enter
fwait
pop
daa
mov
and
xor
je
movs
rcl
popa
(bad)
call
inc
rep
and
dec
mov
mov
add
adc
or
mov
scas
cli
(bad)
call
cwde
inc
and
outs
in
sub
and
or
inc
(bad)
(bad)
(bad)
inc
scas
pop
inc
pop
xchg
dec
aas
add
mov
add
mov
fwait
adc
mov
sbb
push
(bad)
fistp
addr16
jae
xchg
clc
std
je
ss
cld
xor
dec
stc
jo
iret
(bad)
std
aaa
movs
cmp
cmc
hlt
hlt
sub
jne
repz
push
icebp
jb
call
je
xchg
out
mov
lock
jbe
jmp
jmp
(bad)
jg
bound
test
out
xchg
mov
mov
adc
pop
scas
mov
(bad)
jmp
fdivr
pop
seta
test
out
adc
lods
mov
push
mul
pop
and
sbb
loope
(bad)
pop
outs
retf
pop
cmps
ret
cmp
dec
aam
in
repz
hlt
sti
add
and
xchg
dec
pop
ins
js
cwde
(bad)
(bad)
(bad)
std
movs
mov
fistp
or
sbb
cmp
jecxz
fs
out
add
add
(bad)
(bad)
aaa
mov
imul
out
pop
dec
js
fst
lahf
add
adc
clc
dec
add
(bad)
lock
jae
div
mov
pop
push
xchg
ja
out
(bad)
fild
pop
jb
ins
pop
lds
xchg
ret
mov
adc
std
mov
push
(bad)
inc
fld
add
repnz
jb
movs
test
adc
test
pop
or
call
int3
mov
loope
mov
mov
cli
fdivr
(bad)
pop
inc
push
shl
lods
mov
jnp
push
je
out
jne
aas
or
push
(bad)
call
push
je
stos
rcr
or
mov
popa
imul
mov
jecxz
fcmovbe
jmp
sub
fdivr
aas
repz
enter
pop
add
call
pop
ret
or
xor
and
scas
cld
(bad)
jmp
ins
leave
or
mov
mov
retf
or
jo
mov
test
sahf
cmp
(bad)
(bad)
out
nop
pop
pusha
fild
xchg
mov
shr
js
(bad)
out
adc
fsub
or
inc
mov
inc
loope
adc
push
mov
fild
out
jbe
clc
ds
pusha
inc
adc
sbb
aaa
aaa
or
xlat
(bad)
(bad)
call
cs
push
or
xor
add
js
mov
fiadd
jo
xchg
mov
(bad)
(bad)
jg
loopne
repz
push
fimul
mov
(bad)
pop
cmp
mov
xchg
jmp
cld
push
js
loopne
jns
jo
push
jl
enter
adc
jle
(bad)
mov
(bad)
(bad)
inc
push
mov
cmps
push
outs
ins
cwde
mov
push
push
xchg
jmp
jnp
clc
into
or
test
add
into
shl
mov
or
das
adc
push
clc
pop
mov
adc
mov
mov
call
cld
xchg
mov
das
(bad)
(bad)
dec
mov
sub
sbb
push
pop
add
(bad)
jmp
fdivr
fldcw
data16
cmp
(bad)
(bad)
push
pop
mov
inc
jle
jbe
push
sar
in
ds
xchg
(bad)
aam
das
and
xchg
ds
push
ret
and
fmul
mov
ja
push
push
sub
loopne
out
mov
int3
(bad)
jns
movs
loope
movs
mov
movs
ds
clc
add
cmp
out
sahf
mov
jl
mov
call
dec
jg
gs
idiv
xchg
xchg
inc
push
lods
mov
(bad)
jg
(bad)
mov
cmp
loop
fs
je
es
das
(bad)
jmp
pop
fistp
int3
dec
cs
jl
jnp
into
nop
push
je
mov
popa
add
inc
cmp
xchg
pop
loop
jnp
movs
ss
call
fadd
sub
mov
mov
cmp
pop
(bad)
push
je
pop
ret
(bad)
mov
inc
add
jl
cmp
scas
in
cs
cwde
call
and
xchg
fidiv
fbstp
loop
push
add
aam
fidiv
dec
shr
(bad)
dec
cmp
jge
add
jle
sahf
add
sbb
pop
ds
(bad)
(bad)
cmp
push
xchg
js
nop
fsub
mov
inc
jbe
mov
mov
add
jmp
(bad)
jle
mov
mov
xchg
jge
ret
jecxz
pop
ja
push
jb
(bad)
(bad)
mov
pop
dec
push
test
rol
call
fadd
push
neg
fcom
aas
sub
add
fistp
jg
sahf
push
pop
sbb
je
aas
jo
mov
cmp
loop
(bad)
inc
(bad)
cwde
(bad)
lods
jbe
mov
ins
cmp
je
clc
or
or
(bad)
mov
sar
pop
fsub
pop
das
data16
enter
xor
inc
cmp
test
sub
outs
jg
cmps
hlt
out
xor
mov
inc
adc
xchg
jbe
(bad)
sbb
mov
push
dec
clc
push
out
sbb
(bad)
(bad)
(bad)
(bad)
call
jnp
xor
pop
dec
push
push
ss
pop
dec
sar
sbb
lock
shl
mov
mov
mov
cmp
jp
inc
jne
into
repnz
xlat
adc
jmp
cmc
in
mov
out
xchg
ja
clc
cmp
or
fisubr
test
lods
es
jmp
cli
out
mov
test
cmp
stos
dec
fld
mov
add
aaa
std
(bad)
dec
push
add
add
dec
inc
add
jno
or
fisttp
in
cmp
dec
sahf
test
fimul
in
xchg
mov
out
dec
jg
mov
test
and
pusha
pushf
add
push
mov
push
(bad)
(bad)
call
js
imul
ins
aas
xchg
sbb
mov
fcom
jmp
(bad)
outs
das
ret
fs
movs
pushf
shr
je
mov
sbb
adc
sub
sbb
cdq
sub
imul
xchg
cmp
push
nop
rcr
lods
mov
je
and
call
dec
push
cdq
rcl
mov
outs
mov
adc
cs
je
fcmovb
test
rol
dec
sar
sub
in
mov
xor
sub
cld
call
mov
or
add
cmp
(bad)
(bad)
jmp
outs
movs
and
mov
dec
sub
mov
cwde
ins
inc
call
add
test
call
dec
sti
jae
hlt
mov
adc
dec
jmp
popa
adc
test
nop
adc
push
add
mov
add
fs
add
push
add
ja
(bad)
jmp
push
xor
push
and
cs
mov
push
sbb
dec
jle
add
or
push
loope
inc
mov
es
jmp
test
push
sub
and
add
ins
jmp
sub
movs
pop
(bad)
mov
push
push
inc
sub
jl
mov
mov
sbb
sbb
and
add
outs
push
or
push
xor
sar
mov
pop
cld
jg
clc
call
push
repnz
cmp
pop
jmp
rol
repnz
mov
aas
pop
or
sbb
(bad)
jg
shl
icebp
add
sbb
add
test
aaa
inc
pushf
fcomp
(bad)
mov
enter
ins
xchg
mov
pushf
in
ror
psubb
jmp
add
push
out
ficomp
ds
out
(bad)
cmp
(bad)
(bad)
jmp
sbb
loopne
lock
sbb
pop
in
popf
dec
mov
(bad)
aas
pop
cs
pop
add
mov
xchg
addr16
sbb
icebp
pop
lock
xor
(bad)
fcomip
(bad)
cmp
mov
ds
data16
sub
push
data16
loop
into
repz
adc
inc
sbb
add
cmp
iret
rol
cli
call
jecxz
mov
ss
or
sahf
push
xor
push
cdq
shr
jo
pop
(bad)
xor
jmp
jg
mov
retf
call
aas
sbb
lds
add
add
and
lods
ffree
gs
outs
inc
add
psrlw
dec
pop
outs
daa
shl
ins
add
ss
mov
call
loopne
rcr
fstp
lods
dec
mov
pop
cwde
scas
push
pop
std
jmp
outs
clc
pop
adc
add
in
in
jmp
gs
sbb
dec
test
in
out
ins
or
xadd
pop
jle
lds
addr16
add
(bad)
(bad)
mov
adc
xchg
inc
aas
cmp
ins
mov
push
les
mov
addr16
lock
in
cmp
fadd
push
inc
mov
add
add
lock
(bad)
jg
add
sbb
inc
cs
mov
and
jge
cmp
push
dec
(bad)
in
sub
sbb
sub
inc
add
sbb
dec
inc
shl
xor
cwde
loopne
ins
xor
push
sbb
cmp
sbb
aas
jne
aaa
sar
cmps
data16
(bad)
push
xor
ins
ins
(bad)
adc
fcomp
jl
sbb
push
mov
pop
or
ins
fld
ss
push
sar
(bad)
jmp
ss
dec
add
inc
dec
test
mov
push
push
jbe
add
outs
inc
jo
(bad)
mov
jne
outs
cmp
add
jp
outs
ret
fwait
adc
mov
jae
les
imul
push
inc
(bad)
(bad)
inc
data16
scas
and
fisubr
sbb
das
jnp
daa
dec
cmp
sti
pop
daa
adc
(bad)
pop
loopne
sub
and
imul
push
sub
add
bound
popa
cs
mov
cmp
scas
pcmpeqb
sub
arpl
(bad)
(bad)
(bad)
js
lds
xlat
push
ins
xchg
xor
popa
dec
push
mov
lds
and
nop
or
jbe
(bad)
call
hlt
cmps
adc
(bad)
outs
add
repnz
and
push
and
push
or
bound
cli
push
fsub
jnp
and
idiv
pop
push
jae
push
pop
adc
out
and
or
adc
jle
fs
xchg
and
repz
retf
sub
(bad)
(bad)
jg
push
xchg
xchg
pop
mov
xchg
pop
outs
xchg
sub
loop
sub
sbb
sub
mov
dec
call
cld
call
mov
jecxz
clc
mov
ror
aaa
sbb
loopne
sti
out
inc
xchg
bound
and
das
mov
push
mov
data16
inc
(bad)
(bad)
(bad)
dec
add
scas
mov
mov
inc
add
jae
fwait
pop
adc
aad
jnp
jmp
pop
addr16
outs
xchg
inc
mov
(bad)
(bad)
(bad)
mov
outs
je
shl
call
push
mov
imul
repz
and
mov
out
jmp
cli
cmp
imul
jbe
lds
je
pop
mov
xchg
add
(bad)
out
mov
cs
bound
stos
cmps
mul
enter
in
inc
mov
pop
shl
xchg
sub
push
arpl
pop
pop
arpl
mov
(bad)
mov
push
rcl
fs
and
mov
inc
and
mov
mov
dec
shl
dec
sbb
ss
mov
rcr
xchg
int3
jo
(bad)
icebp
call
aad
push
ja
cmps
lock
ja
dec
scas
out
mov
jg
push
scas
sbb
adc
or
sub
aaa
inc
push
jo
or
(bad)
call
movs
sar
pop
pop
adc
dec
sub
mov
fs
data16
(bad)
(bad)
(bad)
(bad)
aad
dec
mov
cs
pop
mov
add
sub
cli
fild
ss
call
fild
fidiv
mov
xor
es
cs
xor
xor
adc
call
push
add
xchg
(bad)
call
ret
sahf
pop
dec
push
outs
neg
div
mov
adc
sub
call
mov
or
div
mov
scas
mov
mov
cmp
scas
xchg
sbb
pop
jae
loop
inc
and
add
fld
lock
bound
daa
(bad)
(bad)
(bad)
call
in
ret
and
lods
ret
aas
ins
mov
add
daa
das
xlat
xor
mov
call
(bad)
cmp
movs
mov
dec
push
xor
fcom
dec
stos
push
xlat
add
sub
repz
sti
out
or
jg
or
daa
data16
jae
add
adc
jg
jg
push
push
pop
fs
addr16
or
or
adc
lock
cld
stos
sbb
cld
dec
ins
add
faddp
(bad)
(bad)
(bad)
inc
inc
jae
push
cmp
and
movs
rol
dec
push
rol
add
sbb
push
pop
call
adc
xor
add
mov
mov
sti
and
push
(bad)
mov
shl
stos
nop
add
nop
push
mov
xchg
bound
xlat
mov
mov
jmp
out
adc
jb
aaa
outs
adc
adc
bound
sti
mov
div
xlat
xrelease
sbb
outs
rcl
pop
dec
test
adc
push
fs
inc
sbb
inc
xor
lahf
sub
mov
mov
outs
lds
aaa
jmp
mov
pop
mov
(bad)
jmp
inc
ret
movs
push
imul
(bad)
pop
shr
xchg
mov
(bad)
(bad)
push
push
and
pop
push
push
out
push
mov
sbb
fwait
sub
imul
cmp
(bad)
(bad)
push
dec
jge
pushf
fld
pop
cli
pop
mov
icebp
inc
jb
jbe
fwait
mov
loopne
inc
push
mov
movs
add
(bad)
(bad)
jmp
imul
adc
and
ss
add
xchg
addr16
sbb
imul
arpl
adc
fcomp
mov
retf
and
sbb
loopne
or
call
pop
sbb
fcmovnbe
aas
inc
or
pop
test
pop
lea
push
xor
cmp
push
outs
jae
jg
or
dec
push
sbb
and
(bad)
mov
lods
dec
mov
rcr
pop
and
mov
xchg
inc
xlat
sbb
(bad)
(bad)
(bad)
dec
pop
jecxz
sub
and
jae
mov
and
and
outs
rol
scas
neg
arpl
fucomip
(bad)
call
cs
test
ss
jmp
scas
psubsb
lods
fcmovb
adc
call
or
mov
pop
shl
imul
(bad)
movs
cmps
push
xlat
popa
pop
inc
jmp
aaa
sub
loope
fisubr
sub
sbb
aaa
cmp
jmp
or
imul
sub
daa
(bad)
(bad)
(bad)
dec
sub
neg
jno
inc
and
addr16
sbb
sub
jo
mov
xchg
(bad)
(bad)
(bad)
dec
mov
and
daa
mov
ja
add
dec
inc
sti
imul
(bad)
fwait
add
stos
mov
pop
arpl
scas
clc
dec
ja
fbld
ds
(bad)
sbb
jmp
scas
popa
adc
cmp
into
cmps
add
or
cld
pop
hlt
push
loop
and
mov
pop
out
rcr
or
sbb
adc
cld
sub
adc
fidiv
sub
mov
adc
jecxz
lods
idiv
and
aad
lock
adc
outs
push
aas
(bad)
push
push
adc
push
dec
add
jp
fcomip
test
xor
pusha
add
nop
test
add
pop
push
add
fsubr
xor
sbb
hlt
(bad)
call
lods
or
out
fmul
or
rcl
fisubr
mov
mov
loop
fiadd
pop
or
add
scas
aaa
pusha
mov
sub
jns
sbb
xor
xor
mov
add
aam
jmp
call
or
push
mov
pop
pop
mov
mov
inc
ja
popa
loope
push
inc
jge
daa
aaa
mov
or
sub
(bad)
jmp
js
and
bound
xchg
mov
push
xor
pop
sbb
xchg
mov
ret
call
sub
cmp
shr
sbb
imul
adc
xorps
cs
fist
addr16
inc
js
mov
pandn
pop
adc
retf
outs
inc
pop
sbb
mov
jns
(bad)
sub
sub
ret
pop
rcr
dec
push
mov
das
cmp
add
call
dec
(bad)
push
outs
rol
addr16
mov
push
add
inc
(bad)
call
adc
jb
jg
and
adc
popa
arpl
inc
jo
(bad)
(bad)
call
stos
ss
gs
pop
mov
mov
jbe
mov
cmp
(bad)
jmp
(bad)
sbb
dec
jae
sbb
movs
adc
stos
and
call
dec
inc
fbld
lds
or
ja
xor
iret
ja
xchg
mov
test
cmp
jmp
push
shr
mov
(bad)
(bad)
inc
mov
mov
xlat
add
add
push
add
inc
pop
retf
xchg
and
mov
arpl
aas
push
mov
(bad)
sbb
nop
push
addr16
inc
adc
jle
or
ret
repz
movs
pop
add
or
fcmovb
pop
adc
imul
in
jmp
(bad)
(bad)
call
jae
outs
adc
xchg
sub
daa
(bad)
stos
adc
mov
jae
inc
test
out
add
call
aas
push
pop
pop
jp
or
sahf
jg
xor
jmp
test
popa
out
aaa
(bad)
(bad)
(bad)
inc
lea
mov
inc
pop
push
sub
push
cmp
xchg
push
test
jg
ret
jg
or
or
mov
mov
mov
dec
xchg
mov
inc
sar
(bad)
jmp
shl
xlat
dec
push
adc
sub
inc
dec
adc
.byte
xchg
.byte
.byte
