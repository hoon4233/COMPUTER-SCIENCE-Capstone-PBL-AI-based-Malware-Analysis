xor
mov
ins
inc
cmp
xor
dec
adc
(bad)
enter
or
aam
cdq
inc
adc
(bad)
call
mov
adc
inc
(bad)
int
push
(bad)
xor
out
dec
jns
mov
mov
aas
push
inc
retf
pop
sub
popa
mov
das
popf
mov
cli
aaa
pop
aad
pop
(bad)
xchg
jge
pop
jb
inc
idiv
dec
sub
(bad)
aaa
shr
pop
sub
xchg
inc
ins
in
jp
call
inc
xor
sbb
push
xor
hlt
pop
dec
xlat
inc
sar
pop
mov
cmp
shr
and
inc
add
inc
movs
cmp
or
and
jecxz
jno
hlt
push
stos
mov
fcom
and
xor
adc
mov
cld
mov
aas
mov
mov
enter
lods
jno
sub
(bad)
leave
mov
sub
aaa
je
add
(bad)
jge
mov
pop
mov
jo
or
sbb
fsub
mov
adc
or
and
fs
(bad)
cwde
cwde
mov
push
dec
inc
or
add
push
sbb
pop
and
loop
cmp
in
btr
dec
pusha
sahf
je
dec
bound
dec
dec
adc
xchg
shl
jle
push
dec
cmp
test
cli
mov
sbb
nop
ret
mov
add
jecxz
not
push
(bad)
cmc
push
and
cli
push
xchg
pop
add
dec
dec
test
lock
lds
lods
repnz
mov
jl
(bad)
xchg
inc
(bad)
mov
(bad)
add
loop
cmp
xchg
ds
inc
or
adc
cwde
(bad)
sub
pop
cli
dec
mov
cs
arpl
and
jno
addr16
push
push
or
pushf
lea
push
cmp
popa
jge
fidivr
movs
push
es
ret
fidivr
repnz
test
shl
mov
sti
and
sti
cli
gs
mov
outs
cmp
and
inc
or
mov
mov
in
daa
repz
or
mov
lea
mov
test
cmp
imul
mov
std
xchg
shl
mov
scas
xor
fstp
pop
pop
retf
sub
xchg
in
jg
in
je
jb
and
or
das
outs
out
in
inc
inc
mov
add
push
sub
pushf
imul
or
sar
movs
mov
lahf
xor
stc
icebp
and
push
mov
sub
mov
vpsubsw
aam
mov
mov
mov
cmp
fsubr
dec
jmp
pop
mov
sub
ja
and
jo
pop
loopne
aad
pop
mov
sbb
inc
arpl
repnz
ins
aam
in
repz
pop
push
test
das
scas
enter
sti
adc
inc
arpl
call
retf
or
xchg
xor
ret
sbb
adc
sar
mov
pop
in
xchg
outs
dec
dec
and
jp
or
daa
sub
leave
ret
pop
retf
xchg
xchg
rcr
ins
dec
ins
adc
mov
sbb
retf
fild
or
mov
push
add
add
sbb
sub
mov
repz
inc
dec
cmc
mov
cmp
xchg
jg
iret
dec
pop
push
not
mov
arpl
in
dec
aaa
and
mov
push
and
sub
outs
into
pop
cs
jmp
mov
or
fcmovnb
idiv
or
lock
cmp
pop
lods
mov
and
imul
int3
pushf
dec
ret
into
xor
cmp
cmps
push
dec
addr16
std
test
add
xlat
push
inc
cli
jnp
sub
jne
xchg
mov
inc
xor
loope
dec
repz
xchg
sti
or
mov
jne
or
je
sahf
mov
xchg
mov
aam
call
pop
sbb
xchg
or
arpl
inc
lds
(bad)
hlt
inc
mov
movs
lods
adc
xor
test
jp
retf
into
mov
or
loope
pushf
jl
cmp
jbe
and
(bad)
dec
xchg
add
and
test
pop
fstp
inc
nop
std
jns
mov
loopne
aas
push
out
in
retf
js
pop
aam
and
add
aas
xchg
gs
ins
test
out
push
shr
outs
(bad)
fld
mov
nop
inc
pop
xlat
jae
adc
lods
jle
fidivr
xor
dec
inc
mov
sbb
test
into
in
call
rcl
sti
or
jle
mov
in
dec
add
or
aam
jp
inc
dec
(bad)
popa
addr16
int
pop
int3
cwde
or
fdiv
sbb
test
in
xchg
ins
outs
xor
jns
jg
test
aam
pop
jae
ss
outs
inc
pop
ss
add
fcomi
and
inc
inc
aam
lahf
xchg
xor
inc
lods
and
ja
and
xor
pop
in
sbb
mov
mov
data16
ret
out
xchg
xor
xchg
xchg
cmp
mov
int3
cmps
retf
retf
in
repnz
xchg
cs
movs
adc
hlt
mov
popf
js
mov
push
xor
cmp
les
jnp
jne
mov
push
and
dec
ret
pop
imul
adc
and
xor
pop
adc
dec
lock
pop
jbe
inc
jle
pop
jg
push
sbb
pop
icebp
ds
or
adc
(bad)
jae
test
xchg
jmp
push
cmp
out
push
loopne
sbb
or
mov
js
rcl
cmp
jmp
aam
and
mov
retf
jno
loope
jns
dec
sub
cmp
lods
rcl
outs
sti
sti
in
add
shl
jnp
jno
imul
jg
sub
jne
stos
xor
push
or
and
aam
xchg
sub
std
push
clc
sar
mov
inc
jmp
pop
loope
pop
cmp
(bad)
std
jmp
mov
je
pop
jo
stc
mov
xor
(bad)
mul
jmp
xor
or
add
popf
mov
aas
stc
test
lahf
mov
dec
pop
mov
in
add
sub
js
movs
out
fs
jae
pushf
icebp
inc
imul
push
xor
mov
mov
cmp
dec
enter
inc
push
mov
mov
sbb
mov
dec
push
sub
xchg
mov
mov
repz
mov
xor
es
push
enter
jmp
(bad)
mov
push
sub
mov
mov
jo
test
mov
into
out
mov
mov
ins
outs
pushf
aas
out
pop
pusha
shl
dec
loopne
std
sub
lds
test
mov
fisttp
or
test
dec
fwait
push
cs
mov
retf
sbb
movs
ret
ficom
mov
adc
push
xchg
jl
in
push
inc
in
das
into
mov
outs
adc
enter
xor
adc
das
cmc
dec
push
xchg
and
xlat
mov
xchg
test
(bad)
jbe
lods
loope
int
cmc
fwait
sbb
test
push
dec
and
in
sar
scas
cmp
hlt
data16
ror
jmp
scas
scas
sar
test
(bad)
out
add
aam
pop
out
daa
mov
push
adc
stos
(bad)
mov
push
xchg
addr16
fcmove
cmc
sbb
mov
mov
pushf
sub
push
icebp
push
aam
push
std
jno
outs
xchg
popa
loopne
and
ins
je
mov
xchg
jb
loopne
dec
jo
imul
pop
push
mov
xchg
mov
sar
xchg
js
mov
fidivr
test
jp
std
sub
mov
mov
in
xor
popf
in
mov
(bad)
mov
jp
cmps
push
dec
(bad)
aaa
ins
adc
xchg
clc
aaa
xchg
adc
cmc
ins
push
sbb
in
dec
sub
and
cld
hlt
loopne
push
movs
stos
cmp
stc
cli
adc
shl
pop
outs
jae
(bad)
xor
mov
mov
xor
leave
ret
fisubr
mov
idiv
push
lods
dec
fld
mov
sti
jnp
push
imul
jmp
repz
xor
and
mov
add
xor
movs
or
sbb
loop
and
int
out
push
in
add
xchg
jmp
xor
int
mov
dec
pop
mov
adc
fidiv
dec
inc
mov
lds
js
popa
pop
pushf
pop
rcr
and
test
jb
stos
cmps
jle
mov
adc
adc
les
xchg
pop
mov
aam
push
dec
add
pop
sar
lods
pop
test
push
adc
rcr
sub
inc
cli
lods
cmps
neg
mov
sbb
ds
cmp
adc
pop
pop
inc
mov
fstp
fs
mov
dec
loopne
test
test
mov
std
into
lahf
cmp
imul
bound
jecxz
pop
les
push
out
cmp
xor
jl
arpl
mov
mov
mov
or
push
call
inc
retf
and
push
sar
loop
pop
jle
in
cli
test
dec
bound
lock
fs
(bad)
nop
idiv
dec
push
and
mov
mov
in
lods
arpl
adc
les
cmp
pop
mov
xlat
stos
movs
(bad)
sub
shl
push
jle
jns
test
cmps
jo
inc
push
int3
and
mov
mov
jg
out
(bad)
mov
hlt
pop
pop
ror
out
cs
inc
xchg
lods
xor
and
test
inc
sub
mov
stos
rol
mov
or
ins
clc
xchg
or
je
data16
shr
mov
dec
fwait
(bad)
pop
sti
jae
mov
pop
push
shl
in
push
xor
cmp
add
out
adc
mov
dec
jae
inc
xchg
pop
lea
mov
mov
push
xchg
and
cs
jmp
fcom
dec
movs
nop
adc
jne
ins
call
xchg
fsub
ret
out
add
loopne
out
idiv
jmp
ins
xchg
mul
test
aas
in
fcomp
outs
pop
inc
jnp
mov
shr
sahf
jl
(bad)
out
pop
jns
and
cli
bound
mov
repz
stos
int3
and
movs
cmp
test
jp
fld
in
add
dec
dec
daa
inc
dec
mov
ror
sbb
aas
por
sub
push
iret
pusha
das
fist
mov
dec
cmp
pop
cmp
cwde
or
int
idiv
test
aam
push
icebp
mov
(bad)
retf
add
mov
retf
or
xor
mov
sbb
imul
adc
dec
rcl
xchg
inc
dec
add
lahf
popf
mov
addr16
sar
pop
jne
cmp
adc
mov
dec
dec
cmp
sbb
aaa
test
push
mov
sahf
iret
arpl
or
imul
movs
dec
lds
cdq
inc
leave
add
jae
hlt
and
arpl
jno
ins
ret
dec
push
jno
int
sbb
adc
adc
ins
popf
popf
or
mov
lods
sbb
pop
xchg
jb
xor
ins
js
or
sbb
imul
pop
sahf
rcl
ins
pusha
sbb
and
or
retf
and
jne
xor
mov
mov
xchg
mov
daa
jp
xchg
mov
movs
push
dec
retf
movs
sub
je
mov
mov
dec
pop
pop
xchg
mov
push
fisttp
jno
stos
mov
mov
aas
xchg
popf
shl
or
enter
cmp
add
xor
scas
mov
mov
cmp
lds
in
xchg
clc
enter
dec
mov
ret
sbb
pop
lea
pop
jbe
mov
scas
cwde
dec
mov
push
jg
pop
outs
pop
sti
jae
out
aam
leave
jo
dec
fs
adc
push
cs
dec
cwde
cld
adc
sub
push
scas
or
dec
and
cmps
nop
in
xor
nop
fisub
pop
outs
adc
das
jnp
push
jnp
mov
inc
xchg
test
and
imul
dec
mov
stc
inc
out
fldcw
sbb
outs
mov
pusha
dec
xor
dec
jmp
adc
jae
mov
test
ficom
or
dec
pop
call
pop
sub
imul
xor
and
movs
xor
jmp
mov
mov
pop
popa
mov
mov
cmp
mov
neg
push
push
mov
or
in
adc
add
ret
inc
push
mov
adc
popa
and
inc
out
and
xor
fsub
adc
test
aas
(bad)
xor
push
mov
jbe
outs
pop
pop
sub
loope
retf
jmp
cli
dec
loope
dec
inc
xor
sbb
es
aad
mov
add
dec
pusha
mov
stos
dec
push
rcl
stos
adc
and
push
shr
jnp
fs
adc
movs
es
repz
xor
scas
scas
outs
cmps
das
nop
pop
and
ins
arpl
add
and
push
lds
sbb
cmp
mov
aaa
imul
xor
cld
stc
jge
xor
jae
rol
mov
scas
call
pusha
pop
mov
icebp
add
pusha
ficomp
sub
push
stos
jb
inc
and
cmp
xor
adc
jmp
ja
cmp
mov
rcl
push
arpl
loop
push
in
cmp
stc
imul
mov
sbb
pop
and
xor
pop
and
test
add
ds
aad
xchg
pop
and
stc
repz
ins
sub
rcl
inc
inc
pop
psubsb
fnsave
or
or
or
sahf
fld
mov
xchg
mov
mov
add
adc
mov
fiadd
lds
push
sbb
jmp
jmp
hlt
outs
lods
push
push
mov
or
cmp
lahf
stc
ss
adc
sub
mov
cli
cmp
scas
sar
frstor
jno
cdq
scas
adc
jmp
stc
gs
add
pushf
mov
daa
(bad)
mov
ret
sbb
imul
call
push
into
sub
ret
sub
cmp
repnz
out
pop
jbe
jmp
xchg
xor
add
xor
ss
mov
inc
jno
cdq
xchg
scas
aaa
or
pusha
jmp
stc
ja
(bad)
mov
mov
or
ror
inc
pusha
xlat
xor
pop
stc
xchg
mov
lock
repnz
stos
pop
movs
inc
call
and
xchg
iret
inc
jg
mov
push
jl
lea
js
mov
test
mov
push
ror
popf
enter
loopne
cmc
push
packsswb
sar
pop
inc
jg
fwait
(bad)
push
test
popa
out
pop
retf
or
repnz
ficom
cmps
inc
rcr
sbb
mov
bound
fwait
jg
mov
mov
stos
dec
stc
loope
imul
inc
and
mov
outs
test
(bad)
xlat
rcr
(bad)
cmps
scas
nop
sti
clc
cli
sub
jecxz
or
sahf
cmps
icebp
fsub
mov
cdq
fidiv
adc
test
add
adc
cwde
pop
sub
sbb
(bad)
icebp
dec
add
dec
xchg
fnstcw
cmp
ret
call
fsubr
fcomip
jl
leave
ja
pop
sbb
add
ins
leave
mov
(bad)
xor
or
push
loop
inc
sahf
cmp
or
sub
push
popf
xchg
clc
jns
lea
es
or
sbb
fs
out
fild
pop
xchg
sub
mov
mov
mov
xlat
xor
pop
inc
lock
ds
aas
push
ja
mov
imul
mov
test
jbe
mov
lods
cwde
lea
std
mov
and
mov
in
pop
sub
(bad)
cmp
frndint
inc
pop
mov
pushf
(bad)
fcmovne
mov
sub
ficom
mov
and
daa
xchg
lods
movs
mov
gs
adc
sub
enter
clc
fdivr
cmp
aaa
push
jo
xor
push
add
mov
xor
(bad)
xchg
test
cld
dec
jmp
in
or
push
jecxz
ds
inc
dec
mov
add
add
mov
push
lods
dec
xchg
pusha
aas
xor
adc
popf
dec
push
xor
cmps
dec
sbb
scas
push
xchg
adc
pop
sub
mov
(bad)
sbb
cmp
sub
jecxz
dec
ss
ss
xor
mov
push
inc
icebp
xor
(bad)
mov
ror
pop
ret
cmp
fcom
inc
lods
xchg
mov
pop
jecxz
push
fs
xchg
in
out
sti
mov
neg
loope
lods
pop
push
inc
add
movs
sbb
or
add
push
dec
ret
push
shr
out
or
scas
dec
sub
adc
out
rcl
inc
inc
dec
aam
outs
ret
cmp
sub
gs
in
inc
gs
cmps
sub
add
inc
cmp
out
push
dec
add
shl
mov
xchg
or
ret
jle
mov
mov
or
or
push
ret
(bad)
sbb
outs
push
ret
xlat
fidivr
das
retf
ins
cmp
lahf
mov
or
xchg
leave
mov
inc
dec
mov
shl
mov
add
inc
or
push
lods
pop
cs
sbb
and
or
push
das
jne
jmp
fiadd
fwait
or
jg
pop
stc
imul
adc
int3
shl
ss
int3
test
mov
mov
adc
loope
loope
je
adc
ja
js
retf
cmp
sbb
mov
repnz
mov
sub
sub
movs
push
cmps
std
cmp
cmps
imul
mov
push
int3
mov
cmc
pop
dec
inc
mov
mov
jno
inc
mov
jle
ret
repz
popa
lea
inc
fisubr
jg
hlt
rcl
cli
std
jb
pop
push
stc
cmp
mov
pusha
add
fst
and
jne
fs
test
es
mov
dec
sub
pop
dec
add
mov
inc
xor
cmp
call
cs
dec
inc
icebp
popf
inc
out
cmc
jnp
sub
xchg
pop
mov
icebp
in
or
sub
xchg
loop
fwait
int
jmp
fnstsw
cs
shl
dec
mov
mov
(bad)
mov
and
rcl
stos
icebp
cmps
jne
fisub
xchg
push
add
dec
pop
lock
ins
(bad)
mov
outs
sbb
ins
lods
(bad)
fcmovnbe
add
sub
sbb
ins
sbb
(bad)
dec
cs
mov
add
daa
mov
inc
inc
or
lahf
shl
sahf
and
pop
addr16
and
dec
ds
cmp
jae
and
sbb
fwait
movs
sbb
arpl
dec
(bad)
pop
mov
shl
jno
xchg
xchg
dec
xchg
cmp
movs
ins
out
test
outs
pushf
inc
mov
scas
loop
mul
or
mov
adc
data16
mov
loopne
daa
loop
or
rcr
and
outs
mov
lods
push
xchg
in
outs
iret
loop
adc
scas
cmps
outs
and
adc
mov
push
out
cld
cmps
ins
lea
cmp
into
mov
jo
fisubr
sub
lods
dec
and
in
and
sahf
ret
push
dec
jge
dec
dec
push
jp
sub
add
in
sbb
shr
sbb
jno
xchg
fwait
lahf
sub
and
sbb
sub
aad
ret
enter
adc
mov
sahf
xor
mov
test
stos
retf
repz
xor
pop
mov
iret
ror
cld
imul
push
shl
shl
push
sub
push
fs
pop
ror
or
sbb
xor
nop
jmp
stos
and
bound
rol
mov
pusha
nop
out
jmp
mov
cwde
ja
(bad)
imul
dec
xchg
xchg
pop
idiv
stos
xchg
mov
(bad)
dec
ins
xlat
sub
mov
push
fnstsw
and
sbb
shl
or
imul
xor
loope
sub
fadd
(bad)
ds
mov
mov
sar
scas
xchg
aas
movs
or
mov
pop
js
adc
sbb
jl
pop
xchg
les
mov
pop
adc
push
sbb
movs
and
loopne
mov
pop
jb
adc
int3
pop
xor
dec
retf
lods
mov
mov
scas
mov
sbb
push
arpl
(bad)
sub
push
inc
jp
dec
(bad)
sub
jecxz
xchg
jl
jecxz
sub
sbb
push
fcomp
iret
mov
mov
aas
bound
arpl
test
push
repnz
jo
bound
or
xchg
mov
sub
xchg
(bad)
loope
dec
sub
cmps
lock
cld
out
or
aaa
ds
sar
rcr
(bad)
or
xor
or
cmp
repnz
mov
iret
jecxz
fst
jns
mov
test
inc
add
into
xor
sbb
or
call
fwait
mov
dec
add
ss
dec
mov
outs
clc
xor
mov
or
ins
mov
rcr
aaa
sub
sub
stos
jb
pop
mov
rcl
test
div
pop
(bad)
dec
dec
pop
fwait
out
mov
inc
and
inc
jg
or
dec
fstp
lods
retf
push
leave
adc
push
in
jge
jp
hlt
ret
test
shr
sbb
rcl
daa
pop
rcr
push
pop
out
add
jb
xlat
ret
cmc
or
mov
add
rcr
add
jae
out
lock
cmp
push
fistp
sbb
test
xchg
xchg
fst
pop
push
xchg
ret
push
ss
arpl
ja
adc
mov
jg
cld
movs
out
cld
inc
sub
mov
and
mov
dec
cld
stc
jmp
pop
pushf
xor
sbb
and
leave
adc
shl
mov
scas
ss
push
jo
outs
mov
and
retf
imul
les
pop
xor
cmp
cmp
out
push
cmp
mov
mov
cmp
test
inc
and
int3
cmps
pop
cmp
movs
and
sbb
les
mov
pop
mov
jmp
not
sar
out
or
mov
clc
pushf
fnstenv
inc
fcmovnu
lds
cmp
adc
sbb
jae
adc
jnp
pop
retf
sahf
lock
mov
loopne
mov
cmps
in
xchg
mov
or
pop
std
scas
jg
std
aaa
mov
pusha
sub
in
aam
ins
stc
push
ja
cmc
retf
mov
lods
lods
mov
rcl
sub
cmc
mov
mov
call
std
into
fs
neg
outs
inc
int3
test
cmp
test
out
add
ja
shl
and
in
call
iret
mov
sub
js
stos
rcr
cdq
inc
fdivr
cwde
das
jmp
jge
adc
cmc
repnz
ja
cmps
jmp
jmp
jmp
jle
inc
fist
in
call
jg
xor
pop
jb
mov
aaa
lods
shl
sbb
add
gs
or
rcr
fsubr
in
or
push
mov
nop
idiv
add
je
in
scas
adc
sbb
adc
mov
push
ins
pushf
lds
mov
jp
add
jmp
out
mov
lods
mul
cs
cwde
lahf
inc
xor
idiv
lock
push
test
inc
fadd
outs
outs
cdq
cmps
or
ficomp
jl
movs
jl
mov
(bad)
sub
sbb
(bad)
jecxz
xchg
iret
jbe
popf
inc
lods
ret
ret
test
jmp
add
ins
dec
mov
icebp
push
xchg
sahf
push
push
mov
or
inc
push
cmps
mov
sub
mov
xchg
stc
lea
sar
jecxz
push
cmp
out
aam
xor
sbb
cmps
stos
cmp
(bad)
icebp
or
lock
aad
push
aaa
push
or
(bad)
sub
std
nop
test
push
ret
adc
cmp
pushf
jge
xor
fdivr
adc
daa
xchg
mov
outs
add
push
lods
outs
xchg
addr16
nop
and
lock
sub
mov
mov
xchg
fidivr
call
xchg
clc
rcr
push
in
pop
popw
mov
push
push
and
(bad)
arpl
ds
xlat
xor
loope
sbb
je
rcl
sub
test
loope
cmps
lods
(bad)
rcl
cmps
xchg
inc
retf
pop
jmp
and
jl
in
sub
sar
push
sub
add
in
popa
repnz
push
fstp
dec
sti
je
push
sub
movs
stos
mov
mov
pop
movs
mov
and
lods
mov
jmp
and
jns
mov
mov
dec
pop
gs
mov
lods
mov
test
adc
aam
test
test
mov
mov
scas
out
mov
pop
mov
(bad)
fidivr
(bad)
mov
clc
jbe
aad
add
in
movs
nop
jl
mov
ja
test
inc
xor
(bad)
ins
sti
mov
stos
mov
cmp
loop
retf
and
mov
push
jmp
pop
pushf
pop
lods
cmps
mov
xchg
xlat
(bad)
jnp
ja
push
mov
pop
outs
dec
cli
xchg
dec
mov
cmp
jl
push
loopne
and
adc
lods
xor
xor
in
sahf
adc
jo
into
sbb
cmps
sar
add
cs
ja
ror
lahf
ror
xchg
push
adc
inc
popa
inc
daa
add
cmps
push
sbb
inc
ffree
pop
mov
in
jecxz
popa
clc
jle
mov
stc
inc
sub
jge
iret
in
dec
mov
iret
xor
inc
xor
or
mov
gs
xor
rcr
sub
dec
cmp
aam
sbb
and
xchg
jo
jmp
ins
push
pop
stos
pop
inc
push
pop
test
jne
and
add
lds
neg
dec
push
add
pusha
jb
mov
cmp
jb
dec
mov
addr16
sub
mov
aas
adc
lahf
add
and
or
sbb
mul
(bad)
imul
outs
in
mov
push
mov
int3
xchg
jne
and
lods
push
dec
push
xor
in
inc
mov
jae
sub
(bad)
adc
lahf
enter
add
ja
push
std
mov
add
sbb
push
mov
add
push
pop
daa
(bad)
out
add
scas
mov
jge
or
jg
imul
cmp
push
retf
sbb
adc
ins
cmp
cmc
pandn
jge
xchg
fstp
shl
test
adc
dec
shl
rcl
xor
loop
inc
lahf
mov
push
mov
xchg
ds
(bad)
repz
daa
jecxz
push
fstp
xchg
ds
sub
test
add
dec
rcl
or
cmp
push
sbb
ja
aaa
push
pop
dec
arpl
and
push
sar
mov
es
pop
mov
test
lock
call
aaa
cs
movs
aas
ds
iret
sub
nop
sti
dec
pusha
mov
pop
lods
in
je
sbb
lock
dec
sbb
jbe
push
outs
dec
mov
mov
push
inc
(bad)
inc
jp
rol
mov
fs
add
mov
gs
xor
adc
mul
int3
push
repnz
cmp
and
adc
push
xor
mov
jne
js
xchg
dec
sbb
jbe
(bad)
xor
xlat
jb
sub
adc
test
sub
cmp
dec
lock
(bad)
fild
sub
pop
stos
mov
push
retf
mov
jg
nop
inc
mov
fwait
dec
mov
in
and
or
daa
sahf
push
jl
lock
mov
push
iret
xchg
or
mov
and
clc
cmp
add
mov
mov
and
dec
or
nop
in
add
fdiv
pop
inc
dec
repz
imul
mov
xor
out
inc
repz
fwait
pop
push
jge
sbb
clc
repnz
push
mov
mov
sbb
call
pop
dec
(bad)
(bad)
icebp
lods
cmp
movs
inc
inc
sbb
add
retf
outs
mov
sub
or
inc
nop
cwde
sub
lods
and
pop
push
inc
daa
inc
jmp
ret
ret
inc
mov
cmp
fld1
inc
and
shl
enter
ret
jp
jo
cmp
mov
mov
push
push
into
in
out
nop
push
(bad)
mov
pop
imul
in
fmul
es
mov
xor
and
ret
pop
ins
sbb
std
das
ror
std
inc
mov
push
and
mov
xlat
movs
inc
pop
jb
mov
add
(bad)
or
mov
cmps
nop
jge
push
inc
add
jecxz
fdivr
pop
movs
xor
fs
in
js
add
dec
shl
jmp
add
adc
pop
in
dec
sbb
mov
jne
dec
push
xchg
cmp
fadd
aad
nop
ret
mov
cdq
leave
(bad)
pop
nop
ins
test
(bad)
repnz
mov
movs
fsub
cwde
jp
dec
ret
mov
inc
push
xor
lock
(bad)
push
xchg
push
pushf
ror
push
loopne
aad
or
lods
dec
mov
sub
mov
jo
xchg
mov
pop
mov
mov
push
mov
inc
xlat
mov
push
xor
bound
in
xor
ret
in
push
scas
mov
ins
jmp
push
cs
cli
xor
out
inc
cld
jb
mov
mov
sbb
ret
add
push
add
pop
rol
aas
das
jns
xor
outs
inc
arpl
mov
loop
sbb
jb
(bad)
sbb
repnz
mov
aas
ja
stos
jb
js
sub
enter
ret
adc
sub
cmp
lea
xchg
and
(bad)
aad
ss
sar
push
push
(bad)
repz
jle
popf
push
xchg
xchg
test
call
jnp
cmp
or
sbb
cmp
imul
xchg
cmps
addr16
cmc
mov
(bad)
int3
jb
mov
aad
lahf
repz
ret
pop
xor
and
aas
cdq
jmp
push
and
in
inc
adc
scas
neg
mov
mov
sub
mov
adc
dec
jmp
mov
sbb
sub
retf
push
imul
retf
pop
xor
das
fiadd
call
mov
sbb
and
inc
push
aad
or
daa
lods
xor
cs
adc
retf
cmp
pop
ficom
push
cmps
retf
dec
mov
gs
sub
mov
and
ret
int3
mov
jle
iret
clc
jo
mov
push
and
retf
aaa
out
mov
ins
mov
shl
retf
repnz
and
mov
mov
imul
xchg
call
pop
fisub
out
loopne
fsubr
cmp
xchg
lods
dec
shl
xchg
add
push
cwde
jge
add
inc
jae
aad
mov
jae
std
popf
mov
mul
loop
cmp
lods
movs
fsubr
fsub
cmp
mov
sar
dec
stc
test
mov
aam
and
mov
mov
out
or
push
les
push
ficomp
les
pcmpgtw
and
inc
out
push
daa
sbb
jae
ss
int3
push
dec
in
lods
iret
sub
sti
xor
ds
ret
sbb
pusha
or
cmps
movs
(bad)
sahf
fcomp
adc
xchg
xlat
push
shl
mov
ds
repnz
inc
jle
loope
jno
cld
jge
inc
cmp
fwait
ror
mov
mov
stos
mov
cmp
or
and
pop
(bad)
repnz
repnz
push
mov
xchg
fwait
adc
clc
mov
mov
shl
jae
push
mov
lods
and
nop
mov
int3
out
mov
rcl
add
sub
retf
xor
pushf
xor
adc
jae
mov
jb
ds
pop
outs
jge
out
arpl
out
(bad)
jge
lahf
mov
dec
int
mov
into
push
cmp
push
ret
inc
add
jle
inc
or
mov
or
scas
ret
aad
repnz
ret
dec
imul
pop
nop
xor
sub
jns
or
arpl
add
loope
mov
mov
pop
jl
cmp
sahf
movs
push
pop
outs
dec
sub
addr16
(bad)
xor
jns
aas
cmp
fdiv
xor
xchg
jle
jbe
call
int3
jp
in
nop
es
push
cmps
test
mov
ss
ror
pop
jge
mul
push
addr16
sub
push
mov
cmp
cmps
fsubr
xor
xchg
call
lock
xor
outs
pop
hlt
push
arpl
push
sub
push
fbstp
mov
cwde
lds
cmp
shr
call
mov
test
aas
add
xor
dec
jmp
ds
add
ss
pop
(bad)
int3
and
mov
fsub
arpl
call
xchg
mov
sub
jecxz
sub
mov
xor
mov
mov
xsha256
lods
mov
outs
pushf
sub
test
and
push
sub
mov
mov
cli
add
(bad)
jecxz
add
jmp
push
out
push
and
or
stos
dec
xchg
cmp
inc
shl
xor
xchg
mov
aaa
inc
sub
addr16
dec
mov
adc
les
cld
aas
mov
ss
leave
sbb
pusha
imul
dec
and
sub
cmc
cmp
xor
inc
dec
push
movs
jne
cmp
retf
adc
je
jns
or
cmps
or
or
add
push
push
icebp
xlat
pop
mov
push
inc
mov
aad
outs
jo
retf
cmp
xchg
sbb
lock
mov
cmps
test
push
pop
stc
mov
mov
mov
cmp
ret
ins
scas
mov
outs
mov
dec
aad
xchg
lods
into
pushf
mov
(bad)
clc
or
pop
idiv
inc
mov
pop
inc
adc
or
add
cmp
inc
loope
inc
jp
popf
dec
jp
sub
lods
addr16
in
imul
sub
mov
jl
dec
sbb
pushf
addr16
fs
push
push
rcl
mov
pop
(bad)
xchg
jp
fldenv
outs
xchg
adc
stc
in
push
cli
lock
scas
jbe
fcom
lock
push
and
jp
xlat
xchg
(bad)
mov
sbb
inc
dec
adc
xchg
cmps
jno
ret
int
xchg
fwait
cmps
ja
shl
loope
push
cmp
cmps
adc
mov
mov
jns
xor
add
jne
cmps
xor
in
mov
and
ins
xor
or
dec
lods
cld
push
clc
ja
nop
outs
mov
loope
mov
xchg
inc
pop
cmps
mov
mov
cld
sti
imul
(bad)
cli
sbb
dec
out
cmp
jns
aam
es
mov
pop
push
dec
sti
les
movs
adc
pop
test
loop
or
mov
jecxz
jo
inc
add
fadd
jle
push
cdq
sbb
sbb
mov
and
sub
ret
pop
sar
push
(bad)
loope
dec
popf
aas
pop
call
faddp
adc
push
pop
popa
or
mov
mov
adc
cdq
inc
push
leave
add
test
ins
idiv
ds
jmp
add
mov
dec
jmp
xor
pusha
fwait
movsx
cs
mov
pop
clc
lds
xchg
push
imul
add
push
mov
jae
sbb
inc
nop
dec
push
inc
cmp
xor
and
imul
test
sub
sub
iret
dec
test
je
jne
pop
repnz
imul
imul
add
dec
jb
jne
and
(bad)
mov
dec
push
or
fisub
and
jmp
arpl
js
jle
mov
in
sbb
aas
out
not
cmp
cs
mov
xor
xor
push
in
mov
sub
jmp
out
push
pushf
retf
rcl
retf
pop
xor
sub
lahf
mov
xchg
leave
cmp
mov
retf
js
sbb
popf
ret
fadd
shl
lock
mov
mov
sbb
repnz
xor
cmps
out
mov
cmps
mov
xchg
add
retf
adc
pop
xchg
das
inc
mov
test
xor
cmp
ror
push
cmp
mov
push
pop
dec
jl
jge
inc
loope
adc
sbb
test
es
pop
dec
mov
in
cmp
inc
shrd
pop
and
push
jg
scas
popa
mov
cmp
pop
loope
sar
sub
leave
repnz
and
arpl
or
fisub
cwde
ret
adc
inc
push
cmp
pop
adc
jecxz
fisttp
loopne
fcom
xchg
ds
pop
cmp
sbb
or
pop
out
mov
loopne
aas
dec
fldcw
addr16
aad
mov
daa
xor
lds
lods
sbb
mov
test
cmp
pop
adc
dec
das
(bad)
xor
mov
adc
cmp
adc
pushf
push
adc
adc
push
cmps
pop
test
jae
and
xor
cmc
outs
out
iret
mov
dec
mov
and
jp
push
pop
cs
xor
shr
jmp
inc
jecxz
movs
dec
cmp
sub
jno
ss
add
push
pushf
loope
neg
mov
(bad)
xor
pop
sbb
and
jnp
aad
outs
and
and
sbb
jno
sub
rol
add
inc
jp
pop
retf
repz
test
sub
xor
ficomp
mov
pop
pop
scas
or
xchg
mov
nop
mov
icebp
add
sub
ja
mov
out
cmps
shr
xchg
mov
xchg
mov
push
push
cmp
mov
inc
addr16
sysenter
nop
movs
jmp
xchg
add
sar
jbe
adc
push
xor
mov
add
fidivr
jmp
mov
shr
les
ins
and
in
add
ins
test
mov
(bad)
shr
pop
push
sub
loopne
stc
jg
out
out
test
and
mov
ja
or
pop
iret
adc
ins
inc
rol
mov
ret
scas
pop
lahf
mov
and
add
stos
ret
inc
outs
aad
outs
jno
sbb
js
aam
sbb
cld
lock
std
pop
push
repz
loope
out
or
push
pop
pop
repz
ja
cmc
into
pop
inc
and
push
add
mov
push
mov
sar
push
jmp
sub
mov
jnp
daa
and
jo
jno
or
fdiv
add
dec
jmp
jns
mov
ret
fldcw
lock
mov
das
addr16
sbb
jle
mov
push
xchg
mov
pop
fcmovnbe
retf
adc
jbe
mov
sbb
mov
retf
adc
pop
dec
retf
and
mov
push
add
fstp
or
cld
add
push
data16
mov
xor
popf
mov
push
jnp
push
mov
arpl
test
fwait
loop
jl
imul
pop
(bad)
fcomp
sub
test
arpl
pusha
sbb
sbb
ins
mov
neg
call
ins
sbb
xlat
bound
aad
xchg
mov
sub
jle
into
popa
mov
cmp
out
call
mov
sub
pushf
sbb
dec
shl
inc
mov
push
int
or
cmp
add
adc
sbb
inc
inc
sti
ins
loopne
sbb
hlt
jg
cs
adc
sub
aad
push
test
out
loope
push
or
js
and
(bad)
es
faddp
mov
dec
imul
mov
mov
mov
in
jp
movs
out
sti
jae
xchg
mov
idiv
cmps
push
stos
xchg
mov
pop
pop
ret
cmp
movs
push
xchg
loopne
lds
dec
pop
adc
je
in
fmul
sub
(bad)
inc
ror
sbb
ret
shr
jo
fstp
sar
mov
retf
mov
mov
ds
outs
out
jno
out
cmp
ret
mov
clc
dec
mov
xor
mov
call
call
outs
mov
add
pop
daa
mov
sbb
hlt
out
loopne
dec
sbb
add
retf
jmp
inc
enter
scas
or
jne
mov
loope
jmp
mov
lahf
dec
sub
outs
mov
mov
or
mov
dec
in
cld
xchg
nop
inc
test
std
ret
push
mov
loop
xor
jnp
mov
mov
sbb
jmp
in
cmps
dec
jb
hlt
jno
adc
push
cli
repz
xor
adc
xor
mov
xchg
cdq
xchg
aad
out
sbb
inc
sbb
out
hlt
test
pop
or
enter
inc
add
add
cmp
mov
jp
aad
or
out
stc
and
dec
dec
add
dec
push
popf
fistp
add
xchg
inc
aad
mov
loopne
fs
imul
cli
xchg
inc
out
les
pop
sbb
(bad)
aad
mov
test
in
stos
lea
sub
and
sub
jmp
fiadd
movs
clc
mov
ins
push
sbb
stc
cmp
lods
adc
aad
add
fwait
cmps
test
pop
adc
cwde
jae
mov
sub
xchg
shl
push
neg
cmp
outs
ror
sbb
mov
inc
pop
scas
push
je
or
sub
inc
test
aad
mov
in
in
and
and
dec
cmp
or
inc
sub
sbb
ret
xor
inc
push
or
xchg
ins
fdivr
sbb
sbb
mov
xor
push
xor
push
cmp
lea
jb
lea
bound
imul
mov
out
xor
fwait
scas
jbe
pop
and
sub
push
out
cs
add
shl
test
inc
popa
mov
mov
push
out
sbb
or
xor
sbb
aam
add
mov
aaa
sbb
jae
fimul
fadd
je
(bad)
popa
push
aaa
xor
sbb
jmp
imul
pop
jno
lods
(bad)
pop
fs
in
adc
cmp
fist
cmp
xchg
fldz
mov
test
jecxz
adc
iret
pop
jp
push
dec
jb
out
xor
inc
dec
or
sbb
ret
jbe
std
push
sbb
pop
mov
in
cmp
xor
xchg
adc
xchg
pop
pop
xchg
mov
cmp
addr16
jae
stos
dec
adc
inc
aam
jo
adc
cmp
mov
les
dec
mov
jnp
out
or
call
xor
retf
loop
test
xlat
push
xchg
fcmovbe
push
mov
adc
out
sub
mov
xchg
cmp
cmc
movs
std
or
outs
dec
mov
mov
lea
out
adc
jae
fisttp
arpl
or
popf
lea
aaa
sar
scas
mov
outs
popa
fbstp
xchg
xor
outs
jbe
rol
add
jl
mov
dec
(bad)
push
xchg
jmp
lods
xor
in
mov
adc
jb
stc
(bad)
xlat
adc
mov
inc
cmps
cld
jg
xor
dec
mov
xor
mov
retf
fdiv
pop
adc
popf
cld
rcr
mov
rcr
movs
mov
ja
sub
inc
(bad)
xchg
mov
retf
test
adc
dec
ds
iret
adc
cmp
jmp
adc
imul
rcl
sub
out
pop
leave
aam
clc
xchg
nop
loopne
dec
push
mov
xor
das
aad
sahf
sbb
mov
stos
test
push
push
call
ret
push
add
mov
rcr
mul
mov
add
enter
jno
cmc
adc
pop
sahf
pop
iret
add
jp
jl
in
shl
push
test
cld
(bad)
cmps
and
fsub
jmp
pop
cmp
inc
outs
fist
adc
xchg
pop
push
jge
fisub
in
mov
and
idiv
adc
pop
fwait
scas
jl
adc
mov
dec
in
push
stc
mov
cld
jae
jmp
push
adc
test
into
mov
and
and
xchg
fmul
test
xor
jo
clc
add
jle
outs
push
retf
lods
fst
mov
shl
mov
jmp
cdq
cli
(bad)
fcmovnb
adc
mov
aas
push
fsub
xlat
xchg
cli
inc
cli
ins
add
cmp
test
rcr
(bad)
(bad)
push
inc
mov
mov
lock
into
xor
out
test
xchg
adc
mov
push
push
aaa
in
stc
(bad)
jmp
inc
fwait
pop
cmp
mov
cmp
aad
mov
jb
jp
ficomp
cmp
test
push
aas
fidivr
jnp
jbe
leave
fbld
xchg
cmp
popa
fstp
cmp
add
ds
mov
mov
inc
mov
or
popf
adc
add
mov
or
mov
fldcw
mov
or
cli
xchg
cmp
movs
jl
and
loop
and
in
cli
sub
popf
cmps
stos
mov
pop
outs
addr16
ficomp
xor
xor
mov
cmc
in
jmp
repnz
jmp
mov
sub
(bad)
sub
pop
outs
ins
mov
test
xchg
adc
or
hlt
icebp
rcr
jnp
aam
push
sahf
aaa
shl
or
loope
xchg
ror
cmp
aas
cli
(bad)
dec
or
test
or
inc
sbb
sub
pop
lds
(bad)
ss
je
repnz
adc
sbb
push
mov
iret
test
int3
mov
xor
sbb
jecxz
out
mov
icebp
adc
jmp
fnstenv
and
ja
cmps
sbb
out
daa
les
adc
mov
push
stos
(bad)
fnstcw
xchg
and
les
xchg
out
leave
lods
pop
repz
ja
dec
or
sub
sti
pop
loope
mov
pop
adc
add
xor
out
mov
int3
adc
push
mov
jno
retf
sbb
into
idiv
jg
not
stos
cmp
jns
sbb
or
mov
imul
setne
sub
pop
add
xchg
mov
adc
outs
outs
xchg
mov
mov
push
mov
(bad)
jne
imul
sub
lds
dec
int3
call
imul
jge
sub
das
retf
jno
push
mov
sbb
retf
xor
stos
sar
(bad)
or
outs
push
inc
std
push
in
(bad)
or
jmp
ret
call
call
aam
push
add
lods
stos
loop
movs
out
mov
mov
inc
out
jb
call
add
pop
mov
push
mov
mov
jl
push
clc
jp
lock
imul
sti
je
nop
xor
test
or
imul
fadd
jbe
loope
dec
mov
dec
xor
pshufw
mov
icebp
ror
push
adc
jecxz
(bad)
call
fstp
mov
mov
xchg
push
sbb
ins
imul
pushf
sub
shl
lock
jnp
jnp
mov
call
and
sub
aaa
mov
scas
fcmove
mov
and
push
ret
jg
xor
jmp
gs
sub
str
sbb
nop
add
jecxz
fdivr
clc
nop
aaa
dec
popa
cli
aam
es
pop
inc
fwait
scas
push
outs
fcomi
xor
les
retf
push
sbb
scas
jne
or
imul
cmc
stos
jne
repz
std
stc
stc
js
call
jge
nop
add
fstp
xchg
sti
(bad)
lods
mov
test
fadd
push
dec
add
xchg
jb
sahf
(bad)
pop
xor
dec
out
sub
cmp
sbb
gs
pop
loope
inc
or
cmp
mov
loope
pop
sahf
je
mov
xor
dec
aaa
jmp
sbb
jge
imul
dec
xor
out
jl
out
cmp
sahf
ss
in
jmp
pop
imul
rol
push
cmp
pop
jno
pop
inc
cmp
daa
ins
and
sub
in
sbb
les
mov
or
mov
mov
mov
xor
push
inc
gs
(bad)
jge
(bad)
js
mov
test
adc
paddw
je
mov
push
mov
mov
jno
xor
(bad)
js
dec
sub
jecxz
mov
pushf
cmp
lahf
je
sub
jmp
popf
lock
sbb
mov
mov
je
in
pop
mov
sti
mov
and
or
es
lea
adc
jg
inc
push
test
ins
and
dec
add
out
(bad)
lods
pop
mov
dec
pop
mov
and
lods
mov
pop
clc
ret
or
xchg
xchg
inc
aad
cmps
xor
add
je
dec
cmp
shl
pop
test
fmul
jge
in
(bad)
pop
lods
(bad)
pop
inc
fsubr
add
js
nop
sbb
out
cdq
or
pushf
out
sbb
jp
fiadd
cli
sti
pop
pusha
call
mov
xchg
inc
adc
ins
or
in
lock
mov
inc
xor
jns
stos
push
out
inc
jbe
mov
push
stos
pop
daa
add
mov
inc
push
inc
adc
cdq
pushf
push
mov
nop
ja
neg
push
sahf
xor
enter
add
or
sub
aas
call
mov
xor
inc
push
mov
enter
jnp
int3
push
leave
dec
mov
enter
xor
mov
(bad)
aam
aam
aaa
popa
push
xchg
mov
es
add
out
dec
(bad)
mov
xchg
fisub
jns
mov
or
xor
inc
dec
std
and
repz
xlat
jns
xor
ror
pop
mov
inc
js
pop
ins
iret
bound
imul
(bad)
pop
cmps
bound
clc
stos
sti
mov
mov
addr16
enter
inc
mov
mov
div
aam
inc
jbe
xchg
adc
pop
fldenv
jnp
sbb
out
adc
push
inc
mov
push
ins
jnp
xor
les
imul
dec
or
pop
test
dec
dec
scas
hlt
std
pop
push
sbb
add
aas
adc
pop
and
dec
inc
out
mov
xchg
sbb
es
sahf
jne
not
push
jne
jo
gs
je
cmp
sbb
shl
pop
and
xor
loope
mov
push
out
pop
add
dec
sub
jno
mov
jmp
xchg
add
mov
(bad)
sub
inc
and
test
add
jecxz
pop
pop
ins
(bad)
jl
icebp
dec
xchg
jmp
je
mov
test
inc
stos
xchg
iret
adc
js
cmp
ss
jne
leave
cs
pop
jo
jl
pop
lods
xor
je
adc
daa
mov
mov
push
into
scas
pop
pop
or
je
cdq
sub
movs
ror
fst
mov
cwde
cs
(bad)
sti
cld
aaa
(bad)
add
(bad)
jp
xchg
or
mov
pop
mov
jmp
sbb
aaa
popa
push
cwde
repnz
lds
jl
jne
cmp
pop
xchg
sbb
push
aaa
or
adc
in
imul
xor
jp
bound
retf
addr16
fcomp
outs
jmp
lods
sbb
add
or
xor
xchg
jmp
mov
popf
sbb
addr16
js
sub
fucomp
ffreep
pop
lea
in
jns
mov
dec
xchg
pop
fnsave
movs
xchg
mov
cmps
sbb
jbe
outs
pop
div
lahf
(bad)
retf
dec
pop
pusha
inc
cmp
pop
fdivr
push
push
fwait
sbb
mov
sbb
cs
fcmovne
rol
sub
fcomp
jb
repnz
iret
jne
mov
add
out
stos
pusha
pop
mov
xchg
mul
les
aad
mov
sar
ret
push
rcr
mov
mov
jge
pushf
ror
(bad)
pusha
mov
lods
(bad)
push
sbb
retf
adc
and
call
sbb
adc
pop
outs
pop
in
jg
(bad)
jg
inc
mov
sbb
pop
fisubr
(bad)
js
add
xor
int
xlat
(bad)
fdivr
stos
adc
retf
ja
lock
push
js
inc
imul
(bad)
sar
push
lahf
pop
or
mov
add
out
pusha
inc
dec
cmps
outs
das
dec
ret
(bad)
ds
adc
xor
fstp
cli
ds
adc
sbb
add
pop
out
or
xor
mov
push
mov
xchg
rcr
jae
ins
or
cs
and
and
inc
xor
xchg
in
fwait
push
pushw
pop
jg
ret
shr
out
call
mov
cmp
mov
out
mov
shr
xchg
pop
mov
adc
and
add
les
pop
ja
mov
lds
xchg
sbb
jle
mov
sub
xlat
retf
call
sub
cmp
pop
repnz
cld
iret
dec
mov
cmp
and
push
cmp
jecxz
adc
dec
xchg
jmp
push
add
ret
xchg
cmp
(bad)
push
sub
push
shl
push
lods
sbb
nop
call
scas
clc
out
push
adc
adc
rcr
outs
mov
cmps
push
(bad)
xchg
lods
sbb
nop
sbb
xlat
dec
mov
mov
mov
pop
pop
call
pop
out
das
jl
add
out
imul
repz
cdq
test
push
sub
dec
mov
sbb
in
adc
pusha
int
cli
pop
inc
jl
and
dec
push
push
xchg
movs
dec
sub
clc
dec
pop
call
xor
fdivr
cmps
mov
adc
mov
xchg
aad
mov
pushf
loope
add
mov
add
jp
cmp
add
xchg
test
cdq
loopne
sub
retf
dec
push
stc
xor
dec
loop
(bad)
div
aam
pop
hlt
arpl
sbb
js
mov
or
cmp
jmp
cwde
and
inc
adc
jmp
push
push
mov
mov
add
cwde
mov
int
movs
xor
sub
pop
lfs
push
or
xor
inc
cmps
div
arpl
dec
in
je
clc
push
pop
dec
jo
popa
pop
cwde
push
repnz
sar
mov
enter
add
push
push
dec
xchg
mov
mov
push
stc
inc
push
lds
add
stc
or
inc
enter
xor
arpl
jns
ret
or
ror
xchg
enter
sbb
dec
aas
mov
adc
iret
cwde
iret
mov
and
mov
push
fs
sbb
jg
mov
ret
test
inc
mov
or
mov
fcmovbe
pop
fincstp
mov
inc
jno
jns
addr16
and
outs
mov
in
daa
dec
seta
je
cmp
lods
and
push
mov
fmul
jmp
in
inc
jge
jp
sahf
js
cmp
test
mov
loopne
mov
cmps
(bad)
cwde
jne
popa
(bad)
mov
or
lock
sbb
push
rol
cmp
cmp
mov
dec
fsubr
jns
ret
sbb
mov
dec
outs
fadd
jb
jl
xchg
int
out
mov
rcl
shl
test
cmp
mov
xlat
bound
pop
ins
mov
adc
jg
cmp
add
dec
shr
call
sbb
int3
inc
stos
out
repnz
mov
inc
jmp
das
mov
xchg
sbb
lds
stos
movs
push
imul
retf
int3
xchg
push
fadd
(bad)
bound
and
ja
fistp
jmp
retf
mov
pop
fidiv
pop
push
nop
mov
mov
popa
add
adc
lea
pop
test
imul
bound
fild
call
adc
pop
or
outs
dec
(bad)
fmul
mov
cmp
xchg
es
(bad)
xor
dec
sahf
aaa
inc
xor
inc
ins
xor
cmp
jge
lahf
js
loop
sahf
mov
pop
xrelease
xor
inc
cs
cmp
mov
in
cmp
daa
pop
test
jecxz
inc
xor
mov
je
sub
push
jb
gs
and
sbb
mov
mov
sub
retf
and
pusha
sbb
push
ja
xchg
mov
mov
icebp
clc
pop
and
lods
pop
sbb
mov
push
mov
xchg
mov
lods
xlat
push
rol
or
pop
jge
arpl
or
cmp
icebp
xor
xchg
add
loopne
xchg
push
mov
or
dec
test
out
lahf
setno
loope
aam
mov
ja
ins
mov
fwait
adc
ins
sub
sar
add
enter
in
(bad)
(bad)
cmp
scas
xchg
enter
pop
push
mov
ror
pop
std
push
test
nop
xor
les
jae
jns
test
jae
movs
sbb
xchg
scas
pop
push
sbb
ds
pop
dec
scas
mov
stos
cmp
pop
jp
jecxz
inc
les
test
xchg
gs
scas
xor
leave
fdivr
(bad)
jb
(bad)
je
and
aad
lods
push
add
jbe
and
xor
rcl
test
(bad)
mov
fisttp
jb
mov
aam
cld
loop
and
in
cs
cmp
pushf
mov
int
dec
out
ret
leave
ss
sbb
mov
call
nop
and
or
or
mov
jge
jg
xchg
gs
inc
je
shr
js
xor
xor
int
(bad)
repnz
cli
aam
mov
stc
mov
push
movs
pop
adc
scas
in
sbb
aas
mov
inc
icebp
movs
sub
add
fcomp
push
mov
push
or
inc
or
jns
xor
inc
sbb
cmp
out
adc
push
adc
ror
leave
pop
mov
loop
std
call
fldenv
cmp
fiadd
out
xchg
adc
adc
das
mov
sbb
repz
retf
cwde
mov
pop
bound
pop
call
scas
jbe
mov
repnz
test
pop
sub
mov
xor
mov
add
sbb
in
jmp
cdq
adc
dec
popa
mov
out
lea
mov
inc
jle
data16
mov
xor
mov
pop
sbb
(bad)
or
jmp
sbb
fsubr
mov
jo
pushf
ds
or
mov
(bad)
lea
push
mov
adc
dec
sub
push
pop
push
shl
adc
mov
movs
pop
adc
push
push
or
dec
mov
jnp
loope
pushf
mov
pop
mov
pop
lea
hlt
leave
gs
jecxz
cmp
push
hlt
inc
adc
and
outs
mov
out
mul
lds
(bad)
add
into
and
mov
(bad)
stos
mov
aas
shr
call
xchg
xchg
dec
or
sbb
popa
and
dec
mov
dec
fs
sub
push
adc
test
mov
mov
xchg
pop
sbb
shr
(bad)
ins
shl
add
mov
mov
mov
push
xchg
and
out
jl
or
sti
xchg
retf
add
cmp
sbb
xchg
cmps
and
jp
arpl
enter
sbb
jp
pop
in
cmp
jbe
xor
xchg
pop
mov
adc
or
das
dec
push
aam
pop
sbb
pushf
push
sub
xchg
lea
pop
jns
pop
aam
ins
push
pop
call
add
dec
dec
push
inc
popf
fist
(bad)
jge
mov
aaa
cmp
lock
in
sar
(bad)
fidivr
add
fld
push
mov
pop
xlat
hlt
sbb
cmps
and
adc
ds
in
adc
xchg
sub
or
jmp
adc
lock
jle
ret
fs
xchg
pop
or
jnp
ss
cld
aas
adc
sbb
je
jecxz
mov
mov
adc
sub
jg
mov
xchg
movs
gs
jg
mov
in
cmps
mov
mov
ret
out
sub
dec
mov
lods
mov
mov
sar
or
cmp
imul
js
xchg
push
mov
pop
add
jno
ss
test
or
push
dec
jno
and
jmp
sar
sti
outs
xor
push
(bad)
mov
add
arpl
jne
mov
repz
or
and
aas
push
cmp
call
mov
dec
int
pop
mov
add
pop
test
push
mov
jbe
out
scas
les
mov
mov
jns
lods
jmp
(bad)
test
data16
xchg
fwait
ds
push
pop
ins
iret
ret
xchg
xor
adc
sbb
shl
fs
sub
fisubr
pop
pop
adc
pop
add
lods
(bad)
jmp
jp
mov
test
rol
xchg
mov
xchg
xor
idiv
push
scas
jbe
xlat
(bad)
test
lods
inc
pop
cmp
out
and
inc
cmp
ror
into
cmp
idiv
ja
or
jge
scas
sar
out
call
hlt
inc
hlt
daa
in
cs
into
mov
aas
or
not
mov
push
loopne
dec
sub
outs
xchg
addr16
dec
pop
inc
adc
and
enter
dec
std
xchg
repnz
in
setns
cwde
retf
inc
test
mov
(bad)
pop
stos
ins
pusha
es
fdiv
cmp
and
(bad)
pop
xchg
clc
jmp
pop
dec
and
push
outs
into
mov
shufps
jnp
ficomp
mov
inc
dec
gs
push
mov
push
fistp
mov
push
stos
not
pop
jmp
jge
pop
imul
popa
pushf
ins
popa
pop
pop
shl
push
or
xor
repz
adc
sub
fcomp
sbb
out
push
aaa
int3
push
sti
shl
hlt
(bad)
cli
shl
sar
stos
or
xlat
and
fwait
inc
aaa
fsub
fsubr
jmp
mov
into
loope
xchg
add
push
xchg
mov
adc
adc
clc
inc
lods
data16
nop
mov
mov
mov
test
adc
sub
scas
xchg
mov
add
push
leave
aas
shl
mov
out
jnp
and
loopne
sbb
ret
stos
mov
in
enter
add
jge
adc
(bad)
out
cmp
pop
pop
sub
movs
xor
and
push
and
imul
outs
mov
xor
pusha
xlat
call
push
cdq
aaa
sar
es
mov
push
sub
nop
into
xor
inc
data16
push
movs
pop
test
les
inc
xor
xor
mov
cmp
int3
pop
cmps
(bad)
mov
movs
add
dec
test
mov
(bad)
or
stc
into
pop
imul
fldpi
mov
dec
test
sbb
and
pop
jg
popf
jb
push
push
inc
sub
pop
and
xchg
mov
add
inc
and
xchg
aad
scas
xchg
sub
cmps
test
mov
add
mov
and
sub
icebp
jle
dec
mov
lahf
out
sbb
call
mov
or
jl
mov
fcmovu
fidiv
xor
sbb
int3
je
and
jmp
in
test
dec
fld
mov
hlt
xor
js
xchg
or
fcomp
les
adc
sbb
out
xchg
inc
xchg
mov
xlat
jmp
aam
jmp
jnp
cvtdq2ps
ret
mov
ja
ins
add
out
add
jmp
out
cmp
mov
xchg
jo
cmps
mov
scas
gs
pushf
pop
(bad)
sar
imul
mov
mov
mov
imul
pushf
fcmovbe
sbb
adc
gs
or
jnp
xchg
dec
xchg
dec
icebp
bound
out
iret
popf
fwait
push
jns
adc
push
mov
jle
mov
icebp
and
pop
cmp
retf
cmp
push
stos
pop
not
mov
mov
loop
ins
mov
pop
adc
push
test
mov
jo
add
sbb
add
fdiv
(bad)
out
jl
stos
ins
adc
std
cmps
fdiv
into
hlt
loopne
lods
mov
arpl
cli
fcomip
mov
jns
sub
jbe
pop
fdivr
fidiv
cdq
lods
push
pop
mov
ret
and
(bad)
jmp
inc
and
mov
imul
outs
das
xor
out
push
and
pop
shl
jecxz
lahf
clc
inc
out
push
sbb
inc
lods
hlt
icebp
popa
out
out
and
mov
pop
and
cli
mov
push
or
jmp
lods
or
cmp
sub
ret
sub
out
adc
loopne
cmp
sbb
cmp
or
ret
pop
stos
xlat
js
inc
out
adc
arpl
sbb
jle
inc
popf
xchg
test
mul
add
cmps
fiadd
and
xor
mov
jmp
adc
pop
fld
xchg
fwait
adc
push
enter
mov
adc
jecxz
fs
scas
adc
loope
add
mov
in
inc
adc
cmp
sub
mov
dec
mov
fdivr
ins
and
sbb
ret
test
mov
popa
fdivp
jp
adc
loopne
and
mov
inc
mov
and
pusha
ror
adc
stos
lahf
or
retf
pop
inc
enter
push
pop
addr16
fs
push
mov
mov
dec
out
icebp
mov
mov
fnstenv
xchg
push
sub
fisubr
test
into
cmp
jmp
jmp
idiv
pop
mov
loopne
xor
aas
push
mov
addr16
sbb
ss
adc
hlt
cmps
dec
pop
xchg
add
ins
(bad)
add
jp
xor
sbb
inc
sub
aas
jno
xchg
push
add
or
lods
mov
fcomi
xchg
sub
sti
test
add
jp
ds
push
dec
xchg
arpl
int
in
cmp
imul
fdivr
jns
sbb
inc
cmp
ficomp
mov
cmc
sti
xchg
xlat
xor
or
clc
aaa
ins
hlt
mov
sbb
dec
loope
or
jle
adc
jns
adc
push
jge
push
test
in
test
jg
addr16
mov
nop
sbb
ds
js
mov
cmp
cmps
add
cmp
shr
cmp
add
xchg
dec
(bad)
xor
retf
out
xchg
mov
int3
xchg
fstp
dec
lea
shl
cs
mov
inc
loopne
and
mov
inc
pop
and
sbb
mov
jp
aam
pop
dec
pop
sub
and
xor
xor
mov
lock
and
mov
push
sub
sub
cmp
sub
into
push
scas
push
inc
dec
ins
fwait
xor
jo
test
in
xchg
sub
scas
sub
xor
aas
dec
ficomp
imul
add
popa
aad
int3
(bad)
xchg
jmp
and
inc
mov
sub
and
add
pusha
pop
cmc
fldcw
inc
scas
sti
pop
xchg
(bad)
mov
repnz
test
mov
pop
jl
mov
jne
bound
addr16
adc
and
jbe
dec
jge
mov
push
lds
into
ret
pop
inc
mov
shl
pop
xor
push
sti
leave
mov
push
mov
dec
pcmpgtd
ds
cmps
jns
sbb
adc
daa
popf
adc
data16
mov
(bad)
jle
mov
jae
ss
xchg
xchg
cmp
arpl
push
ins
jno
pop
shr
or
xor
cmp
cli
adc
mov
ins
(bad)
pop
lock
iret
in
mov
stc
retf
sub
mov
pop
aaa
inc
jbe
pop
dec
jge
les
jb
jge
(bad)
sub
loop
out
adc
or
add
fs
cmps
outs
cmc
scas
call
xrelease
mov
fwait
std
stos
repz
in
jmp
mov
pusha
push
rol
sub
or
mov
js
cwde
or
icebp
into
outs
cld
xor
out
xor
pop
mov
mov
fsubr
mov
aaa
and
aad
mov
mov
test
out
sbb
sbb
je
repz
inc
pop
adc
mov
bound
cmp
popa
cwde
inc
push
iret
inc
ds
stos
cmp
push
pushf
fimul
cmp
in
cwde
xchg
mov
add
ret
mov
cmps
pop
cmp
dec
out
test
lahf
jno
inc
and
and
xor
aaa
pusha
mov
out
fstp
retf
imul
movs
stc
mov
xor
mov
push
push
mov
cmps
sub
or
js
inc
mul
inc
arpl
and
ins
and
movs
in
gs
inc
fsubr
mov
neg
sbb
jne
(bad)
sub
adc
(bad)
int3
out
out
xor
cmp
jmp
and
test
xchg
sub
push
sbb
push
sbb
data16
pop
sub
sti
adc
ins
(bad)
dec
or
cdq
test
jne
sbb
xor
movs
pop
gs
inc
add
repnz
lods
mov
push
pop
or
test
pop
inc
lds
sahf
sbb
mov
in
hlt
dec
stc
adc
push
cmp
fisub
lds
push
xchg
xchg
and
data16
sahf
add
inc
push
imul
adc
pop
popa
inc
adc
dec
push
aas
leave
jnp
inc
or
popa
in
sbb
xor
add
add
in
and
cmp
in
jb
mov
push
jecxz
leave
xchg
mov
fst
repnz
stos
sbb
sbb
mov
xor
xor
(bad)
shr
mov
hlt
mov
mov
push
add
loope
and
das
mov
fist
push
pop
pop
sbb
mov
xor
add
cmc
add
cld
pop
fisttp
push
pop
inc
and
and
push
mov
mov
mov
es
mov
inc
ja
mov
out
push
fs
mov
xor
arpl
nop
xor
out
dec
adc
cmp
ret
or
loope
and
es
jmp
in
in
adc
or
mov
hlt
cmps
jg
sub
jmp
add
ficomp
retf
and
adc
jle
out
mov
mov
pop
pop
xchg
jb
xchg
jne
in
mov
daa
push
sar
bnd
cdq
cmp
xchg
int3
icebp
xadd
sbb
sbb
jp
add
out
jae
add
(bad)
jae
dec
xlat
scas
fimul
nop
mov
fucom
or
scas
and
lods
xchg
cmp
popa
lds
mov
cli
sub
jg
adc
ds
ja
mov
inc
cdq
jne
out
retf
data16
add
test
fs
lds
into
or
mov
lods
aaa
xchg
mov
ins
mov
shl
and
xor
cmc
out
pusha
mov
sub
jne
mov
ret
icebp
sub
lock
sbb
and
jp
add
cli
pusha
mov
fbld
mov
jle
dec
call
lea
mov
popa
cmp
popf
call
jae
mov
aas
jno
out
jb
fld
mov
neg
jmp
aad
fwait
sub
addr16
fs
imul
push
iret
adc
fdiv
sahf
push
cwde
pop
out
mov
dec
sub
imul
js
push
adc
xor
arpl
lahf
push
aad
inc
fucomip
(bad)
(bad)
jmp
hlt
ja
scas
stos
jmp
aam
(bad)
xor
enter
mov
adc
in
adc
push
push
adc
mov
loope
push
add
bound
popa
(bad)
cmp
inc
dec
mov
std
mov
sti
and
mov
neg
ficomp
mov
mov
pop
fdiv
ret
lahf
and
xchg
int
and
jne
int3
mov
push
jbe
fstp
adc
out
sbb
int3
pop
add
push
cmps
pusha
loopne
aam
aam
adc
and
push
popf
jp
idiv
jae
enter
std
xor
(bad)
cmp
mov
(bad)
fmul
pop
inc
ud0
mov
out
push
mov
into
pop
jp
push
mov
xchg
lahf
xor
inc
inc
bound
outs
sbb
cmp
lea
aam
jne
adc
push
clc
lods
xor
inc
sbb
adc
retf
mov
mov
push
hlt
popf
fist
adc
sbb
push
jb
mov
xchg
or
push
jge
dec
scas
ins
iret
or
into
loop
movs
clc
pusha
cmp
cli
push
clc
pop
mov
inc
dec
cmp
leave
enter
adc
xchg
push
outs
mov
cmps
retf
shr
dec
inc
cmps
mov
mov
push
mov
mov
dec
fs
dec
jmp
outs
cmp
dec
in
or
pop
pop
out
adc
sub
inc
icebp
adc
movs
std
scas
ret
fld
push
mov
imul
loopne
and
jecxz
cld
lods
xchg
add
movs
xor
pop
jmp
inc
sbb
jns
inc
sbb
es
jo
imul
xor
dec
nop
jle
(bad)
jmp
lock
(bad)
(bad)
icebp
and
dec
cmp
xchg
iret
adc
in
add
push
lods
pop
pop
jb
sbb
movs
popf
and
loop
or
aaa
in
out
sub
and
fcmovb
xor
xchg
xchg
call
movs
ret
sbb
loope
jg
leave
mov
sub
adc
dec
aas
mov
pop
mov
sub
sub
and
pop
mov
lea
xchg
arpl
outs
cli
(bad)
mov
jne
or
cmps
inc
retf
iret
inc
jno
mov
xor
pushf
out
leave
iret
test
imul
mov
mov
jb
mov
pop
mov
(bad)
sub
sub
or
dec
xlat
stc
push
push
pop
dec
mov
xchg
(bad)
mov
push
(bad)
dec
pop
mov
lock
inc
sub
lea
lods
loop
push
cmc
pushf
mov
test
add
cmp
and
jecxz
mov
aam
test
ss
test
(bad)
arpl
popa
xor
iret
push
adc
mov
inc
bound
mov
sub
js
ins
aam
movs
push
repz
dec
cmps
sahf
out
pop
push
sub
(bad)
test
out
xchg
or
xor
outs
xor
pop
popf
js
or
sbb
and
lea
adc
mov
stos
ds
rcr
(bad)
ds
in
adc
xchg
fidivr
aas
test
dec
push
xchg
pop
xor
stos
cmps
xchg
adc
fiadd
sbb
retf
cli
shl
inc
test
xor
imul
inc
and
xor
push
xchg
inc
loope
mov
push
ror
enter
(bad)
sti
stc
cmps
imul
xchg
add
(bad)
test
stc
sbb
test
fwait
add
call
inc
cs
call
adc
sub
loopne
mov
sub
push
fcomp
into
inc
shr
mov
test
jns
adc
stos
test
ret
xchg
or
jmp
and
sub
mov
jl
mov
sbb
push
mov
sar
inc
aam
mov
push
jge
retf
push
cmp
adc
mov
push
frstor
lds
pop
loopne
ja
pop
fwait
retf
imul
int
shld
es
xor
xor
mov
or
push
xor
pop
clc
or
adc
mov
pop
dec
cmps
aaa
sub
test
mov
out
push
imul
cmc
mov
in
enter
adc
into
std
dec
in
movs
mov
gs
pop
pop
xchg
mov
or
xlat
push
not
neg
cs
loop
push
and
xchg
pop
jnp
add
mov
adc
sub
push
lock
sub
pop
mov
cdq
lds
jl
bound
enter
fnstsw
mov
repz
cmp
test
cmps
or
out
xchg
jno
push
push
ret
clc
xchg
call
pop
cli
pop
out
mov
rol
inc
sub
cmp
cmp
int
stos
sub
push
(bad)
ret
aam
gs
and
cld
das
int
mov
stos
ja
(bad)
adc
add
cmp
scas
mov
out
(bad)
push
mov
ror
sbb
and
fwait
movs
lods
sbb
jns
jo
push
dec
pop
jmp
inc
test
out
cmp
frstor
dec
mov
xor
xchg
adc
mov
fst
fdivr
iret
push
sub
out
sub
lahf
in
popf
add
and
mov
(bad)
fxch
ror
dec
xchg
popf
rol
dec
pop
xchg
add
cwde
xor
mov
xchg
mov
icebp
out
pushf
xchg
inc
add
sbb
dec
pushf
aaa
sti
mov
out
mov
or
fbstp
add
imul
test
xor
sbb
jbe
in
sub
sub
leave
js
sbb
xchg
mov
in
xor
and
pop
loopne
pushf
and
ret
loop
mov
hlt
pop
outs
adc
fiadd
fdiv
push
xchg
in
mov
(bad)
push
sbb
(bad)
retf
mov
xor
push
mov
sub
sub
hlt
stos
loope
clc
mov
shl
dec
xchg
enter
xchg
xchg
pusha
mov
arpl
sbb
cmc
xor
mov
xlat
sbb
fisubr
ins
test
push
mov
push
cwde
aam
bound
popf
aam
mov
add
(bad)
pop
cmps
xor
nop
jge
mov
xor
xor
(bad)
mov
scas
pushf
jge
xor
mov
inc
dec
push
outs
cmc
adc
dec
pop
dec
aaa
rcr
and
lock
lods
std
add
lock
cmp
fsub
jmp
pop
das
xlat
dec
stos
mov
imul
push
jge
cmp
jnp
outs
loopne
retf
inc
add
setb
out
hlt
aaa
test
outs
out
ret
dec
push
xchg
mov
fiadd
mov
xlat
xchg
inc
mov
ror
ja
sub
js
jbe
js
sbb
mov
cdq
mov
sahf
mov
xlat
inc
jnp
pop
adc
enter
icebp
or
xchg
stc
(bad)
jg
mov
repnz
(bad)
lea
sar
or
popa
movnti
out
ror
cmc
aas
pop
imul
mov
stos
mov
push
mov
aad
lahf
adc
add
mov
in
call
push
imul
xor
test
sbb
xchg
(bad)
and
rol
adc
or
addr16
fcom
test
and
mov
add
cmp
xor
push
ins
pop
sar
aas
sub
adc
sbb
and
sbb
mov
sbb
cdq
jno
loopne
cmp
cmps
pushf
sub
pop
or
inc
xlat
mov
repz
lock
pop
icebp
and
mov
(bad)
out
fadd
pop
xchg
mov
shr
push
xor
rol
ds
add
std
push
push
dec
fdivp
add
into
adc
rcl
in
push
sub
mov
out
xchg
mov
test
cld
imul
cmp
inc
and
push
xchg
and
ss
push
and
push
(bad)
rol
rcr
inc
add
cmp
frstor
jnp
add
aam
or
gs
imul
cs
push
cld
fcomp
pushf
outs
and
xchg
mov
ret
sbb
mov
jbe
std
and
aam
retf
mov
stc
cwde
aaa
enter
jle
test
xchg
and
pop
xchg
ret
in
inc
jne
stc
jge
int3
cmp
sbb
addr16
adc
es
mov
lock
and
stos
mov
mov
pop
or
push
retf
dec
clc
mov
xor
(bad)
mov
mov
sar
push
inc
sub
mov
jg
mov
jno
sahf
repz
adc
cmps
loope
loopne
iret
outs
(bad)
lock
inc
fimul
xchg
scas
dec
cs
or
add
aam
jae
xor
and
cwde
sbb
and
push
dec
dec
pop
pusha
push
inc
or
popf
into
retf
test
cmp
inc
xor
xor
adc
mov
sbb
movs
fimul
mov
sub
mov
xchg
mov
rol
cwde
xor
ret
arpl
(bad)
in
and
mov
test
sbb
retf
fstp
sbb
ja
xchg
inc
jnp
popf
pusha
sbb
mov
imul
ror
sub
loop
and
inc
push
push
test
adc
in
ds
outs
nop
mov
sbb
or
aam
xchg
fwait
stc
stos
lock
std
fisub
inc
ffreep
mov
pop
xor
retf
sub
sub
std
jae
push
xchg
jo
enter
xchg
sub
lea
jb
cwde
inc
jne
(bad)
mov
mov
xor
dec
pop
in
push
adc
cmp
nop
pop
ins
push
enter
pop
mov
sub
fcmovnu
xchg
scas
cmp
into
jp
sbb
inc
(bad)
sar
cmp
mov
xor
js
es
data16
pop
fucomi
add
sbb
inc
mov
xor
jmp
imul
int
data16
bound
mov
daa
ins
xchg
sub
inc
jno
cs
cmp
sbb
xor
xchg
mov
stos
mov
repnz
pusha
add
xor
pop
sub
test
jnp
mov
mov
std
ds
mov
mov
push
push
jle
xchg
or
js
mov
add
pop
xchg
cmp
and
xor
inc
or
aas
push
rcl
sub
xor
mov
adc
adc
inc
cmp
ss
cdq
enter
sub
lahf
mov
stos
dec
xor
ret
jbe
inc
jmp
mov
dec
push
cmc
pop
dec
xchg
cmp
jbe
add
push
nop
nop
inc
adc
test
pop
and
jle
cmps
in
ins
(bad)
pop
popa
iret
cwde
lahf
push
in
aad
xor
dec
cmp
stc
and
cwde
and
js
mov
ret
mov
push
cwde
push
lahf
xlat
mov
cli
and
(bad)
int3
xor
inc
aam
push
jmp
add
lods
enter
jecxz
mov
icebp
inc
jb
sub
hlt
sub
fiadd
movs
into
cdq
mov
inc
outs
out
or
shl
test
push
push
popf
and
inc
fdiv
inc
fisttp
cld
inc
shl
cmp
bound
cld
(bad)
data16
cmc
mov
retf
daa
jno
call
daa
sub
dec
shl
dec
mov
stc
cmc
inc
div
and
sub
push
xchg
jmp
fs
or
dec
sar
xchg
cmp
jnp
fs
cmc
sbb
dec
loope
adc
test
push
(bad)
mov
test
jp
or
push
pop
imul
int
fidiv
mov
add
hlt
int3
mov
fcmovnb
sub
adc
push
push
push
fstp
fistp
or
pusha
mov
adc
inc
xor
mov
div
mov
dec
les
jecxz
(bad)
nop
mov
mov
sbb
push
jno
(bad)
xchg
jns
addr16
jb
cli
jmp
jns
adc
lds
int
mov
lods
mov
cld
lea
cdq
out
sbb
repnz
pop
xor
out
lds
dec
mov
jmp
fidiv
inc
loopne
xor
(bad)
fldenv
imul
out
dec
jo
jo
mov
and
icebp
cld
mov
xor
inc
push
loop
inc
mov
cmp
test
fidiv
jno
in
jmp
sbb
mov
aad
sub
repnz
dec
add
test
pop
jecxz
push
add
jno
mov
sar
sbb
ror
(bad)
out
adc
test
add
es
lods
imul
stc
push
or
lods
or
fs
and
addr16
sbb
push
cld
dec
jae
and
repnz
add
les
mov
inc
movs
push
scas
jo
stos
add
(bad)
in
in
cmps
in
div
sbb
fild
xlat
aaa
pop
imul
or
cmc
mov
cmp
xchg
jo
jp
mov
std
xlat
nop
mov
mov
dec
sub
aaa
hlt
call
fidiv
shl
jp
sub
xchg
jmp
mov
and
and
sub
leave
adc
mov
push
in
or
cmp
xchg
outs
paddw
xchg
js
hlt
mov
cmp
jne
mov
int
fld
mov
aaa
sbb
sub
nop
movs
mov
les
lock
inc
jnp
iret
test
(bad)
xchg
push
ins
out
icebp
add
lds
(bad)
mov
xor
icebp
out
lods
mov
and
sub
push
or
ins
and
das
or
ds
jbe
stos
das
or
xlat
inc
pop
(bad)
sbb
adc
jg
add
cmp
add
add
adc
ds
add
rcr
pop
pop
stc
aas
fadd
sbb
mov
pushf
sub
pop
pop
and
sbb
arpl
stc
and
and
jl
scas
sbb
cmp
ja
pop
push
sbb
aad
mov
cmp
fwait
ds
jb
cmp
adc
aas
cmp
xchg
rol
scas
mov
shl
jmp
call
jmp
mov
(bad)
out
pusha
dec
cmp
mov
fcomip
pushf
push
push
fsub
ins
cli
cli
in
mov
pop
push
xchg
mov
cld
push
rcl
push
jno
pop
pop
test
fadd
inc
mov
pushf
call
pop
out
(bad)
stos
push
mov
aas
popf
add
dec
repnz
push
xchg
mov
and
in
movs
lea
push
in
imul
or
cmc
pusha
sub
cld
jmp
call
dec
add
xchg
pop
adc
mov
je
jae
fcom
mov
frstor
cmp
jmp
ss
lahf
mov
leave
xchg
jno
sahf
push
pop
imul
ins
adc
mov
mov
(bad)
jmp
mov
xlat
fadd
or
mov
dec
dec
mov
sbb
and
sahf
retf
or
mov
jge
and
or
inc
cmc
out
std
xlat
outs
mov
jl
cmp
and
sub
push
mov
jl
mov
dec
mov
fild
cs
in
pop
imul
mov
jp
push
adc
xchg
cmp
lods
add
mov
not
out
push
sahf
sbb
leave
imul
(bad)
ss
pop
jnp
aad
xchg
pop
sbb
(bad)
loope
jb
jle
(bad)
out
jne
inc
push
mov
cmc
pop
dec
es
xor
mov
or
or
imul
pop
or
push
sar
pushf
lock
les
mov
xor
pop
movd
lea
aaa
or
test
and
in
fld
mov
(bad)
loopne
call
stos
mov
xchg
pop
jmp
jno
sar
in
bnd
call
mov
mov
int
jo
and
push
and
xchg
aas
cmp
dec
push
cs
push
test
push
mov
push
jmp
stos
xchg
jno
jno
(bad)
imul
scas
push
mov
mov
or
cld
pop
dec
sbb
ins
mov
loope
sahf
or
movs
fisub
lahf
arpl
shr
out
das
ret
loop
sti
and
retf
loope
xchg
aas
push
ret
mov
adc
mov
mov
and
xor
sahf
rcl
pop
jl
xor
sbb
and
dec
xor
ins
mov
test
xchg
mov
out
adc
mov
dec
(bad)
je
xchg
mov
xor
mov
fsubr
jle
repz
add
adc
in
aad
(bad)
jmp
movs
retf
dec
mov
mov
adc
sti
xchg
push
gs
mov
rcl
push
leave
xor
hlt
sahf
call
cwde
mov
and
xlat
xor
dec
mov
into
xor
popa
shl
add
push
adc
cli
xchg
(bad)
sub
les
mov
xor
or
not
into
ins
push
dec
gs
test
mov
jno
and
(bad)
pop
fimul
cmp
inc
retf
fwait
test
aam
add
mov
inc
sbb
test
sar
shr
xchg
and
and
jmp
ret
jmp
int
fcomp
mov
inc
das
sub
add
into
sub
push
in
mov
sub
pop
(bad)
sbb
pop
jmp
imul
pop
test
and
out
lock
test
inc
lods
das
fimul
fsub
mov
dec
sbb
ins
hlt
cmovge
sub
mov
mov
push
ins
cwde
push
xor
mov
jb
adc
mov
sar
jge
xchg
mov
push
sar
hlt
xor
gs
mov
aad
lock
out
cmps
sub
mov
pop
dec
daa
rcl
sub
sub
rol
call
repnz
dec
(bad)
mov
jns
push
cmc
cmp
popf
(bad)
out
pop
shl
test
jne
ds
mov
data16
push
dec
jnp
std
mov
lea
pop
mov
jbe
cdq
mov
pop
and
fwait
rcl
inc
scas
dec
nop
mov
mov
in
test
repz
sbb
sub
cli
add
xor
fmul
clc
xor
mov
leave
shl
jg
sbb
(bad)
into
sbb
icebp
or
sbb
sub
dec
popa
(bad)
imul
in
fdivr
or
xlat
(bad)
hlt
mov
and
loopne
out
imul
and
js
in
adc
add
push
add
hlt
jne
arpl
mov
jmp
and
aaa
sbb
(bad)
cs
add
and
not
mov
or
call
imul
sub
sub
lds
cmp
push
iret
aam
cmp
(bad)
into
fmul
push
adc
loope
or
loope
xor
xchg
dec
dec
sbb
fadd
sub
inc
sub
add
push
push
jo
dec
sub
cdq
mov
mov
jae
mov
ret
push
xchg
gs
sbb
add
rcl
xchg
mov
icebp
out
jnp
repnz
cmp
call
jge
add
stos
std
imul
shr
fisubr
push
mov
pop
cmps
neg
lods
inc
and
inc
jno
sbb
xor
add
sbb
retf
inc
push
(bad)
xchg
scas
sbb
prefetcht2
sub
and
push
and
or
dec
inc
or
jle
lock
outs
loope
enter
xchg
out
mov
or
retf
pop
and
dec
popf
pop
and
sub
xor
(bad)
xchg
and
enter
dec
fwait
(bad)
sub
lahf
scas
dec
adc
and
dec
xchg
cmp
push
(bad)
loope
mov
add
pop
pop
and
pop
retf
adc
cmp
nop
push
mov
mov
loope
pop
jp
movs
(bad)
lock
retf
fs
test
fisubr
loope
retf
ja
lock
test
jecxz
jb
dec
jmp
cmps
inc
and
lods
adc
test
dec
jecxz
in
out
(bad)
mov
(bad)
sti
jb
dec
cmps
jg
and
jl
jae
fcom
repnz
cmp
sub
in
xchg
push
and
pusha
jmp
cmp
(bad)
sahf
cld
out
test
or
xor
fstp
sub
mov
cmp
cmps
jge
xchg
adc
mov
bound
and
gs
shl
fld
push
pavgw
pop
mov
popf
mov
test
pop
mov
hlt
cmc
cmps
cs
cmp
(bad)
sub
movs
leave
fld
mov
pop
(bad)
and
stos
or
bound
dec
in
add
rol
inc
xchg
push
add
call
inc
(bad)
clc
rol
loope
ficom
jno
dec
arpl
and
mov
aaa
addr16
push
stc
mov
gs
mov
sub
ins
mov
dec
idiv
xchg
(bad)
mov
lahf
or
mov
add
scas
push
test
scas
cmp
jp
stc
push
fucompp
mov
inc
pop
loopne
dec
ins
dec
pop
inc
sub
mov
jno
lea
cmp
push
ret
jae
mov
in
inc
das
xor
inc
jmp
mov
sbb
lahf
jmp
cmp
xchg
or
ja
push
ins
push
aas
scas
sub
sub
and
push
or
or
fstp
cwde
pop
sahf
push
adc
or
mov
stc
ffreep
xor
jle
retf
stc
xor
push
or
xchg
xor
jecxz
(bad)
imul
jmp
push
add
adc
(bad)
xor
push
scas
pop
jp
push
sbb
lock
sbb
cdq
test
sahf
loopne
test
cmc
pusha
inc
test
pop
and
inc
dec
and
xor
jae
and
repz
mov
bound
in
push
das
jns
inc
cmp
jmp
addr16
or
dec
sub
xor
fucomi
sbb
adc
ins
pop
(bad)
mov
repnz
jbe
push
in
dec
std
js
jmp
(bad)
les
lock
scas
int3
outs
test
retf
int
xchg
inc
add
cmps
xchg
popf
push
push
xchg
sub
add
pop
movs
int3
je
jmp
pop
cmps
(bad)
mov
xor
lods
rcl
pop
add
sub
(bad)
push
jecxz
xchg
aam
(bad)
and
adc
or
aam
stos
outs
imul
add
push
cmps
imul
jno
dec
dec
and
adc
xchg
(bad)
loop
push
xchg
cmp
pop
push
enter
lea
hlt
cdq
jmp
mov
pop
push
jne
(bad)
push
pop
mov
push
sub
jmp
sub
rcr
movs
rcr
je
loope
ins
sbb
retf
les
mov
sub
jb
mov
pop
jmp
std
xchg
jb
or
loop
fbld
xor
ja
dec
xor
js
push
cmp
aam
xchg
loop
sub
jbe
repnz
cmps
mov
add
dec
cmc
mov
and
mov
in
int3
and
hlt
jns
jmp
fwait
cs
iret
lock
dec
pop
scas
cwde
pop
or
or
cdq
cmp
sub
lds
sbb
push
addr16
ja
inc
(bad)
stos
jge
xor
mov
dec
gs
pop
adc
jae
repnz
and
test
loop
lahf
mov
pop
mov
or
(bad)
mov
into
inc
sub
ficomp
add
int3
push
sbb
ds
cmc
dec
mov
push
and
call
xchg
(bad)
jmp
xor
xor
add
ret
dec
loopne
loope
js
push
jg
mov
scas
and
ds
cmp
sub
nop
das
(bad)
popf
xchg
lahf
and
sbb
pop
mov
aad
sbb
(bad)
sub
xchg
mov
inc
add
minps
xchg
inc
xchg
lahf
(bad)
not
pop
das
(bad)
jecxz
out
pop
adc
lods
or
pop
test
xor
nop
cmps
popf
push
inc
ret
sar
sub
pop
pop
lahf
xchg
and
(bad)
mov
mov
cmp
add
shl
sbb
mov
jge
std
icebp
or
test
ror
inc
int
cmc
(bad)
test
ds
clc
dec
mov
lock
cmp
pop
mov
in
mov
mov
fbld
nop
jmp
fst
add
xchg
inc
jmp
mov
retf
push
sar
lea
adc
pushf
sbb
mov
push
cmc
pushf
icebp
add
mov
mov
test
jbe
push
xchg
nop
test
sbb
sub
push
test
add
addr16
repnz
rol
(bad)
pop
outs
fwait
ret
xor
push
xchg
sar
push
and
inc
push
xchg
and
and
mov
pop
enter
sbb
enter
xchg
out
pushw
mov
pop
lea
fisttp
jmp
mov
outs
lock
push
adc
inc
(bad)
and
inc
dec
jecxz
mov
push
pop
jmp
fist
push
aam
outs
fsub
in
retf
sbb
(bad)
fwait
and
add
fnstcw
adc
inc
repnz
(bad)
cmp
xchg
cmp
adc
stc
(bad)
cs
fild
std
out
cmps
pop
leave
mov
mov
inc
pop
pop
pushf
test
mov
pop
mov
fisttp
push
pop
pop
sub
push
inc
pop
mov
clc
sub
pop
loopne
test
stos
push
mov
shl
xor
ins
popf
xchg
test
addr16
test
mov
or
in
sub
std
repz
xchg
aad
or
ret
f2xm1
sub
or
inc
push
adc
mov
adc
fdivr
jnp
test
sbb
pop
(bad)
xor
popf
push
sbb
dec
aas
cs
cmps
dec
in
ret
sbb
aam
lea
jbe
sahf
clc
sub
cmc
push
or
dec
jmp
mov
(bad)
std
(bad)
cmp
ss
les
into
and
ret
mov
sbb
les
xor
jb
xchg
(bad)
sub
sbb
rol
jo
lds
loop
stc
fisubr
rol
and
inc
popf
daa
dec
cmps
jnp
xor
fdivr
fwait
push
xor
dec
outs
adc
ins
jne
sbb
mov
cli
pop
out
sbb
xor
jg
pop
xor
inc
mov
lods
hlt
push
rcr
imul
jle
xchg
jae
and
out
test
jbe
inc
fwait
jl
retf
mov
das
stos
xchg
fcmovu
jle
xor
aam
xchg
out
sub
div
aam
cwde
jge
cmps
jmp
inc
inc
adc
ret
je
push
jle
or
and
cmovnp
fst
or
div
push
out
(bad)
and
imul
ficom
imul
sub
cmp
cmps
mov
and
loop
xchg
imul
ins
daa
or
mov
add
xchg
cdq
rol
jmp
adc
outs
fidiv
xor
mov
call
mov
push
ss
add
lahf
loope
push
daa
sbb
push
das
ds
aaa
xor
adc
fs
jno
into
adc
popa
xchg
hlt
(bad)
lahf
loop
mov
xchg
mov
push
imul
mov
sbb
cdq
adc
cmps
mov
xchg
add
stos
pop
jns
lods
clc
sbb
and
pop
push
mov
(bad)
scas
xlat
pop
inc
mov
call
mov
cmps
pop
or
mov
sbb
xor
xchg
retf
call
iret
in
jecxz
pop
fiadd
xchg
movs
push
dec
dec
xchg
jo
xor
adc
jbe
mov
movs
adc
outs
cmp
mov
sub
setns
jne
jge
aam
xchg
out
cli
cmp
call
xchg
adc
xchg
rol
fcmovbe
imul
xchg
aas
test
inc
cdq
and
out
jle
add
ins
dec
mov
sub
push
dec
adc
inc
pop
dec
test
aad
push
fdivr
inc
ss
fnsave
cwde
push
loopne
aad
push
xor
loope
cmp
or
or
mov
adc
lea
in
lds
cmp
sbb
jmp
lods
lds
xchg
mov
cdq
scas
movs
inc
mov
retf
jnp
cld
not
repz
retf
enter
sub
and
xchg
mov
mov
in
ins
ror
jo
xchg
xchg
adc
mov
or
test
sbb
pop
mov
pushaw
loop
mov
(bad)
mov
cmp
inc
ss
iret
sahf
push
push
scas
add
mov
push
les
jne
aad
jb
sbb
in
mov
xor
or
es
adc
jge
inc
fstp
inc
enter
(bad)
(bad)
jo
adc
imul
out
mov
jbe
ins
sub
test
cli
imul
fsubr
dec
push
or
dec
push
cmp
rol
pushf
push
aad
loopne
sahf
pop
clc
sbb
add
cmp
shl
cld
mov
add
cs
or
or
out
fnstsw
out
sub
into
stos
sub
hlt
or
in
and
sbb
cmp
int3
inc
nop
popf
fdiv
mov
jge
clc
jp
cmp
add
in
repnz
sub
out
in
stos
and
push
xlat
sub
test
call
jp
add
sub
dec
xchg
test
xor
ins
add
ret
mov
xchg
aad
xor
or
inc
pop
push
and
dec
xchg
retf
cmp
cmp
cmp
push
or
shl
out
pusha
loope
addr16
push
cld
fst
bound
cmp
xlat
mov
or
icebp
mov
test
cmp
xchg
(bad)
arpl
add
push
test
jg
inc
aad
jmp
cmp
scas
dec
repz
mov
test
jno
cdq
and
test
ret
sbb
out
fmul
or
(bad)
xor
xor
das
test
fwait
imul
lods
add
stos
cs
mov
pop
or
mov
push
inc
push
add
jb
scas
cmc
dec
in
(bad)
retf
imul
mov
mov
add
mov
mul
mov
jmp
inc
fiadd
int
fbld
aas
cld
test
movs
jne
nop
mov
mov
(bad)
(bad)
fdivr
push
out
imul
add
sub
fnstcw
sub
aam
ins
(bad)
repz
mov
bound
pop
pop
mov
call
jmpw
inc
mov
pop
out
push
aam
xor
(bad)
adc
lods
(bad)
outs
cmp
add
pop
in
mov
dec
aad
xchg
push
xchg
hlt
lock
pop
mov
cdq
rol
mov
or
shl
mov
popf
dec
ins
push
rcl
dec
push
in
push
adc
mov
xchg
retf
arpl
pop
out
adc
mov
pop
jmp
dec
mov
fs
rcl
dec
pop
stos
mov
hlt
idiv
adc
add
add
(bad)
fistp
cmp
xchg
add
mov
fidivr
push
push
(bad)
icebp
lahf
lods
mov
rcr
cmc
popf
or
or
mov
pop
adc
sub
push
mov
aam
inc
addr16
inc
xor
inc
clc
sha256rnds2
jge
adc
iret
sub
inc
sub
mov
shl
push
mov
push
sub
fisub
icebp
fnstsw
mov
adc
cmp
mov
rcr
sub
daa
mov
mov
outs
sbb
cmps
add
push
fwait
xor
mov
mov
pop
pushf
cld
popa
sbb
idiv
pop
jg
mov
push
mov
popa
icebp
xchg
add
es
cdq
inc
ins
cmc
cmps
cmp
inc
add
cmp
movd
es
sbb
in
mov
out
adc
mov
stos
shr
xchg
pop
retf
and
xor
inc
lods
pop
mov
mov
xor
cli
jg
adc
push
aam
pop
inc
or
test
shufps
xchg
and
stc
ins
push
retf
push
fcomp
dec
mov
into
fsub
fist
(bad)
and
out
(bad)
rcl
xchg
sub
cmps
mov
test
cwde
fisub
jecxz
fist
pop
jno
in
shr
sub
jbe
adc
pop
xor
dec
mov
(bad)
rcr
and
inc
test
(bad)
(bad)
dec
aad
mov
out
std
push
inc
sub
xchg
jg
outs
icebp
leave
int3
or
jmp
lock
ds
sbb
int3
(bad)
repz
cmp
xchg
es
xor
xor
mov
add
mov
dec
mov
and
mov
pop
or
arpl
pop
xchg
dec
cmp
pop
imul
xchg
sbb
pusha
nop
fs
sahf
dec
punpckhdq
(bad)
fistp
packuswb
sub
in
hlt
dec
scas
dec
mov
aas
ins
test
call
scas
es
push
push
mov
mov
fst
daa
fld
xor
in
in
xchg
lods
rol
xlat
mov
ret
mov
movs
mov
and
std
call
dec
mov
add
std
mov
aad
pop
xor
mov
push
add
fldcw
lds
cwde
test
retf
ret
inc
gs
add
inc
push
(bad)
sub
or
jnp
fild
add
inc
jmp
pop
sbb
loope
adc
popa
mov
shl
sub
add
out
(bad)
cmp
cmp
jmp
jne
xchg
and
int
or
out
in
or
add
jecxz
xor
xchg
mov
test
popa
xor
ret
shl
sar
cmp
aas
cld
repz
jmp
inc
pop
push
cmps
lea
cwde
repz
fidiv
lea
lea
js
push
and
sbb
mov
cmps
pop
sub
jmp
mul
test
push
ins
addr16
jae
adc
inc
xor
push
sar
pop
jge
sub
sub
inc
shl
cmp
adc
xor
fimul
imul
xchg
add
jge
push
jns
pop
or
in
push
mov
jns
cdq
cmc
xchg
rol
dec
sub
sbb
repnz
sub
and
cmp
xor
cmp
fucomi
dec
lods
loopne
pop
jns
sub
ss
mov
mov
xor
gs
add
add
inc
push
sahf
rcl
test
xor
mov
cmp
pop
loope
das
pop
push
nop
int
call
out
in
call
in
(bad)
fs
loopne
or
xor
cmps
shl
sub
add
les
mov
push
outs
fild
fld
out
fwait
(bad)
out
pop
(bad)
cld
cs
pop
dec
inc
add
lahf
frstpm(287
ins
into
test
or
stos
jo
outs
mov
sbb
mov
push
shl
cmp
pushf
xchg
push
(bad)
cmp
and
jae
cmp
sbb
xlat
inc
mov
pop
and
xor
jae
sar
push
in
push
jb
div
mov
cmp
cmp
and
dec
pop
adc
shr
mov
stc
add
sub
dec
mov
adc
and
inc
mov
lods
scas
shr
jne
loopne
jmp
into
xor
mov
adc
loopne
mov
push
pop
pop
repnz
mov
ror
out
pop
arpl
mov
mov
out
jnp
add
add
popf
inc
mov
and
and
lods
pop
fwait
scas
lea
inc
leave
dec
mov
add
xor
scas
data16
lods
loope
dec
sti
sub
xlat
push
je
pop
or
ror
pusha
ds
xor
push
inc
call
and
test
shl
push
addr16
add
popf
dec
mov
adc
enter
clc
into
aaa
xor
pop
lea
das
lods
xor
dec
scas
test
dec
(bad)
cmp
in
mov
jnp
retf
push
(bad)
fwait
hlt
out
leave
mov
or
lods
stos
push
add
pop
lock
sub
sar
sahf
int
aas
xchg
sub
in
outs
sub
icebp
mov
rcl
ror
jg
xchg
test
jns
test
push
rcr
or
cld
jmp
lahf
retf
add
aas
int3
lods
push
sub
sub
push
ds
out
inc
mov
xor
fs
sbb
mov
sbb
retf
cmp
mov
push
loop
test
leave
pop
add
or
cmp
jae
cmp
bnd
and
dec
fs
push
mov
mov
call
pop
inc
lock
jl
repz
repz
jb
cs
push
xchg
xchg
jo
sub
repz
add
and
push
test
lds
cs
(bad)
push
dec
jbe
test
xor
mov
adc
sub
push
dec
pop
enter
fstp
cwde
fsub
mov
cmp
or
fwait
jg
ret
mov
std
mov
or
repz
xor
cmp
mov
push
inc
add
or
ret
or
cmp
add
cmp
out
movs
mov
into
adc
sbb
sahf
jns
or
data16
(bad)
es
mov
and
loopne
pop
retf
push
into
sbb
sbb
add
retf
jno
adc
mov
and
xchg
push
rol
push
int
push
cwde
es
rcl
iret
rol
aas
pop
(bad)
scas
xor
hlt
pop
mov
jno
fbstp
cmc
xchg
dec
jmp
test
aas
shr
mov
mov
fadd
test
and
mov
outs
(bad)
jmp
in
test
or
mov
hlt
stos
cmp
je
popa
mov
icebp
pushf
rol
or
aas
test
faddp
lods
and
sbb
gs
retf
mov
push
xchg
xchg
inc
push
inc
(bad)
mov
mov
and
xchg
scas
jne
daa
scas
clc
or
pop
bound
scas
sub
inc
in
ins
xchg
dec
ins
and
int
jno
sbb
sub
fist
rcl
cmp
push
push
cs
rol
fwait
cmps
daa
pop
mov
add
je
jp
into
and
xor
mov
inc
xor
jge
shl
cmp
xor
xchg
adc
or
sbb
jne
pop
(bad)
sbb
fdivrp
out
xchg
push
inc
or
cmps
mov
inc
mov
lods
add
lods
jmp
xchg
pop
in
ficomp
dec
push
mov
sbb
xchg
aaa
rcr
stos
scas
loop
mov
add
mov
shr
mov
adc
test
xchg
shl
push
jecxz
xchg
jmp
rol
fsubr
push
lock
data16
mov
les
mov
addr16
add
xor
xor
jno
(bad)
call
inc
mov
cmp
mov
test
mov
push
push
and
sbb
mov
dec
and
int
(bad)
imul
test
push
jns
add
call
in
pop
fcmovbe
pop
imul
adc
fistp
mov
xchg
imul
or
mov
mov
xchg
cmp
test
aaa
ins
mov
jg
and
or
push
std
fcomp
jp
mov
adc
scas
std
ds
xchg
test
dec
das
push
mov
pmaxsw
xchg
jmp
loop
mov
or
aas
je
loop
push
add
jmp
call
scas
adc
repnz
xchg
jg
iret
retf
ficom
inc
cld
in
out
dec
ret
sbb
and
pusha
out
and
nop
mov
jp
mov
mov
lds
push
call
loop
push
cmp
fwait
imul
sub
rcr
fdiv
xor
mov
cdq
adc
movs
xlat
push
pop
adc
mov
push
addr16
jle
into
int
fcomip
xchg
pop
(bad)
add
fidiv
(bad)
adc
stos
ror
mov
je
xchg
jmp
movs
(bad)
pusha
jmp
jb
jns
jmp
adc
aas
mov
sbb
(bad)
(bad)
out
pushf
addr16
call
xchg
std
mov
jp
add
sar
loope
int
outs
jnp
ficomp
or
add
imul
xchg
arpl
idiv
adc
into
imul
in
pop
(bad)
fdiv
cmp
popa
jp
jae
xchg
or
jbe
aad
faddp
repnz
dec
sub
repz
aam
push
and
jmp
adc
int3
jae
inc
jo
xor
mov
and
addr16
shl
fxch
stc
rol
pusha
cmps
jae
or
mov
dec
in
repnz
xchg
and
cdq
(bad)
call
mov
and
add
pop
sbb
cld
inc
in
clc
popf
(bad)
scas
cmp
mov
pop
gs
sbb
mov
pop
jp
lods
mov
test
jp
or
push
enter
push
(bad)
jnp
push
jns
(bad)
cmps
shl
add
mov
sti
fwait
mov
or
je
(bad)
loop
pop
add
shl
push
jmp
loop
and
xor
int
add
mov
or
push
das
shr
fs
inc
stc
or
scas
jle
inc
cmp
inc
jae
lods
daa
pop
adc
cdq
and
out
inc
mov
dec
cmp
adc
push
jae
scas
fnstsw
jnp
cmp
les
push
lahf
inc
jecxz
push
xor
shl
sub
ficom
jmp
ins
lods
fst
sub
mov
jo
(bad)
clc
div
xchg
retf
out
sub
loopne
mov
(bad)
jns
aad
test
in
rcr
bound
dec
adc
div
aaa
stc
pop
jp
inc
xchg
pop
sbb
mov
stc
jle
fcom
mov
out
xchg
push
fadd
es
xchg
in
mov
repz
ret
call
sub
mov
sub
(bad)
sbb
or
inc
mov
fcom
jns
das
push
rcr
loop
imul
xor
jge
cli
rcl
fsubr
adc
mov
aaa
ds
push
fimul
rcr
or
dec
aam
push
or
push
pop
dec
and
mov
lahf
enter
or
jecxz
(bad)
xchg
lock
mov
mov
outs
xor
or
das
fisubr
cmp
add
and
mov
loopne
or
cmp
or
not
dec
in
mov
in
fadd
movs
jbe
jecxz
loope
adc
loope
frstor
mov
mov
popf
cdq
or
dec
push
jnp
arpl
mov
sub
retf
sbb
mov
mov
or
or
test
leave
not
in
into
out
mov
js
cmps
cmp
mov
cmp
imul
mov
int3
mov
adc
mov
jmp
cdq
mov
fld
retf
sbb
dec
rcl
in
xchg
jle
loopne
mov
and
inc
jmp
pop
sub
pop
add
(bad)
out
ss
sbb
(bad)
dec
mov
loop
ret
inc
adc
inc
std
sub
in
or
jo
inc
test
sahf
pop
and
leave
sub
je
daa
adc
and
fist
add
sub
pop
mov
repz
mov
movs
xchg
test
hlt
push
jge
(bad)
stc
mov
cmp
cmp
dec
adc
mov
mov
int3
push
inc
in
inc
mov
call
mov
bound
mov
inc
adc
addr16
(bad)
jg
push
mov
ins
retf
inc
mov
into
in
mov
cmp
icebp
adc
mov
xor
jmp
rcl
shl
xor
pop
jge
in
cdq
loop
inc
or
repnz
mov
push
mov
pop
pushf
in
and
pop
xchg
cmp
std
jbe
or
mov
sbb
arpl
add
adc
pusha
xchg
ror
mov
sbb
(bad)
fs
fld
mov
jle
pop
int
stos
pop
jmp
push
jo
sub
fidivr
fdiv
stos
lods
sub
out
jge
jecxz
sub
fisubr
xchg
xchg
xchg
pop
hlt
push
jo
pop
sbb
btr
mov
psrlq
int3
mov
repnz
fsub
(bad)
xchg
repz
add
and
into
stos
mov
jne
das
adc
test
cs
mov
out
loop
push
xchg
and
cmps
mov
xchg
idiv
(bad)
repz
je
retf
dec
add
gs
jne
mov
and
mov
push
mov
jp
xor
mov
int3
adc
(bad)
repz
pop
fidiv
bound
rcl
sub
cmps
mov
aas
adc
loopne
repnz
popf
pop
pop
cs
sub
push
pop
sbb
mov
fidiv
xchg
sub
push
movs
(bad)
pop
mov
jle
lock
inc
(bad)
push
xchg
sbb
or
mov
dec
sbb
fstp
jle
cmc
(bad)
nop
jmp
(bad)
outs
dec
into
sbb
call
das
inc
aas
int3
mov
lods
jbe
push
mov
cmc
shl
adc
mov
jmp
add
out
lea
push
pop
sar
in
fdiv
dec
xchg
ficom
adc
test
xchg
pop
int
es
adc
jl
sub
mov
mov
push
dec
sub
mov
out
bound
cmp
or
or
xchg
sbb
or
(bad)
repnz
leave
retf
pop
push
and
xor
das
cli
fcomp
jg
nop
mov
or
and
aad
adc
jmp
call
outs
in
adc
popf
scas
lahf
or
inc
sbb
popf
mov
push
add
pop
cwde
lea
cmp
jo
rcr
movs
jg
fisttp
cmp
fwait
gs
enter
test
mov
test
push
sub
nop
dec
xor
out
gs
pop
sub
daa
mov
sbb
(bad)
mov
or
popf
fwait
xor
inc
(bad)
(bad)
push
mov
and
imul
shr
repz
mov
mov
loop
xor
adc
mov
test
sub
sub
rcl
fwait
sti
loopne
jmp
outs
hlt
retf
(bad)
pop
or
in
stos
fist
or
mov
iret
into
mov
test
dec
or
lods
mov
dec
or
rol
dec
push
out
lods
test
jno
adc
mov
je
mov
xchg
es
mov
xchg
adc
btc
sti
sbb
xchg
and
pop
lods
dec
cmp
cmps
add
jge
inc
and
pop
or
imul
cmps
sbb
xor
call
sbb
int
mov
loopne
add
push
sbb
call
addr16
inc
repnz
and
icebp
inc
ins
outs
nop
add
adc
movs
fnsave
pusha
scas
aas
mov
cmp
mov
movs
jg
(bad)
jmp
mov
jbe
pop
ror
mov
sub
stos
pop
int3
in
dec
mov
sub
cmp
push
cmp
lds
lods
(bad)
std
push
sub
shr
inc
rcl
std
push
adc
sbb
std
iret
lods
fs
jmp
in
addr16
and
xor
and
cmp
cmps
ja
push
fmul
push
movs
dec
pop
test
cli
and
or
cdq
xor
xor
inc
xchg
nop
sub
mov
push
push
frstor
popf
pop
cmp
les
stos
or
pop
inc
ret
lods
jecxz
xchg
sub
ret
scas
sbb
jb
or
adc
xor
inc
fwait
pusha
xor
les
inc
lods
js
les
push
shl
xor
stos
sub
sti
push
push
nop
adc
mov
sbb
jmp
sbb
mov
jmp
ds
mov
inc
lods
shl
add
push
mov
popa
adc
pop
mov
jo
loope
pop
pop
loopne
mov
pop
movs
leave
mov
and
adc
icebp
es
aas
mov
cmc
ja
xchg
seta
add
adc
push
rcr
xor
ss
(bad)
dec
(bad)
in
mov
out
jge
lock
aam
shl
fiadd
das
idiv
mov
push
mov
push
jmp
inc
push
xchg
ds
retf
add
pop
cli
aam
jl
mov
push
fmul
add
leave
push
ret
xor
rcl
(bad)
fisttp
push
xchg
rol
xchg
(bad)
movs
jmp
sbb
pushf
ins
mov
cmps
mov
adc
mov
mov
xchg
and
mov
push
xor
fisttp
and
xchg
dec
xor
mov
out
cmp
pop
add
aad
lods
add
std
xchg
cmp
inc
cmps
imul
xchg
and
loopne
scas
inc
inc
mov
ja
into
out
jmp
add
ds
and
dec
mov
jae
fbld
sbb
mov
jecxz
out
adc
jle
fwait
push
outs
(bad)
scas
xchg
in
sbb
xor
pop
ret
inc
mov
aaa
sub
loop
mov
sti
mov
add
cmp
arpl
div
movs
jge
dec
cmp
stos
movs
xchg
aam
jl
and
imul
mov
jae
mov
pop
nop
(bad)
lods
inc
les
sahf
lods
inc
cs
adc
ds
jns
ret
in
aad
add
mov
sbb
paddb
stc
or
daa
lock
dec
inc
je
and
push
push
xchg
adc
out
xchg
and
cwde
mov
in
imul
and
fstp
ficom
enter
bound
out
adc
push
int3
mov
mov
lock
mov
fsubr
jmp
imul
fwait
adc
bound
mov
or
out
repz
mov
lods
add
sub
jmp
push
adc
mov
inc
cli
jge
jns
xchg
or
std
pop
aad
cmp
inc
nop
pop
test
adc
jb
fidivr
sbb
sub
dec
pop
mov
sti
iret
inc
pop
add
cmp
fnclex
out
sub
(bad)
popa
cwde
aad
pop
adc
xchg
dec
pop
retf
(bad)
sar
push
mov
repnz
cmc
xor
mov
shr
movs
jp
pop
xchg
pop
cwde
loop
mov
mov
jb
sbb
cmps
push
fdivr
rol
adc
inc
fnsetpm(287
sbb
loopne
push
cmp
out
ja
or
xchg
jns
fcmovnu
in
loopne
ja
in
(bad)
ss
sub
aas
imul
xchg
xchg
dec
push
lods
ins
out
sbb
push
sbb
pop
das
mov
icebp
jmp
inc
adc
sbb
mov
lods
lods
mov
nop
jae
sub
dec
(bad)
bnd
das
pop
xchg
nop
lahf
arpl
popf
xchg
add
xchg
sub
retf
and
(bad)
mov
xchg
and
add
pop
inc
(bad)
sub
jle
push
jns
call
pop
push
rcr
dec
jmp
push
add
jb
sub
mov
xor
fmul
push
adc
push
(bad)
mov
mov
(bad)
cwde
inc
mov
ins
inc
dec
and
inc
pop
pushf
ins
imul
wbinvd
xor
ficomp
push
inc
jo
out
push
ja
ret
inc
sbb
mov
mov
jmp
and
and
cmp
push
pushf
cmovno
xchg
push
inc
mov
sub
jae
scas
push
jp
ds
jae
xchg
mov
ret
or
loop
fs
dec
fisub
repz
mov
ffreep
bound
pop
mov
jnp
mov
xor
in
out
cmp
repz
or
aad
push
(bad)
sub
test
in
fcomp
fisub
std
pop
je
out
mov
mov
lahf
pxor
pop
mov
jb
jl
add
lods
mov
into
das
xchg
sub
retf
cld
push
mov
aad
pop
jnp
adc
rcl
(bad)
add
mov
stos
lods
popf
dec
mov
fs
imul
invd
cdq
xor
dec
push
inc
and
pop
lds
sti
adc
pop
and
pusha
in
fxch
push
ja
lods
sar
jns
cmp
sbb
lock
sahf
push
int3
mov
imul
fwait
dec
inc
bound
aad
cs
(bad)
mov
sbb
sbb
xor
and
int
rep
add
int
dec
enter
mov
ror
test
inc
into
or
out
xchg
ins
lea
jae
js
lds
sahf
test
pop
and
adc
sbb
leave
xchg
dec
mov
arpl
xor
or
inc
fild
push
cld
imul
int3
push
dec
cmp
aaa
int
mov
sbb
cmps
push
pop
push
maxps
in
xchg
hlt
adc
xchg
aad
js
dec
cmps
mov
or
adc
sub
or
push
lock
loope
hlt
cmc
jb
ret
xor
cmp
adc
dec
imul
add
sbb
(bad)
hlt
lods
or
push
or
cmps
out
xchg
mov
jno
pop
add
jns
call
ficomp
call
(bad)
out
int
mov
js
sub
sub
push
jo
cmp
fsub
jnp
cmp
inc
or
pop
nop
xlat
cmova
jl
pushf
test
adc
jp
and
xlat
mov
xchg
cli
ror
xchg
leave
repnz
pushf
(bad)
adc
pop
call
sbb
lds
das
ja
mov
sbb
retf
push
xchg
adc
imul
pop
mov
jb
icebp
js
pop
repnz
mov
js
push
stos
ret
clc
leave
shr
fadd
call
cmp
mov
jl
mov
daa
inc
or
dec
sub
jmp
mov
mov
cwde
jnp
pop
jmp
cmps
mov
cld
jbe
scas
add
(bad)
fsub
mov
retf
xor
push
div
pop
push
out
xchg
icebp
jbe
imul
jo
into
cdq
call
and
lock
ret
xor
std
sbb
pop
cmps
push
call
js
pop
dec
out
gs
xchg
or
push
jno
dec
nop
jl
sbb
pushf
adc
popf
ins
call
hlt
cmp
and
or
push
addr16
ins
sbb
cdq
pop
pop
mov
jno
mov
fidiv
sbb
test
push
push
mov
movs
mov
scas
test
fistp
and
mov
mov
sbb
sbb
dec
and
repz
add
movs
push
adc
test
cmp
int3
pop
xor
fnstcw
test
movs
dec
jle
mov
push
or
popf
add
je
sar
cmps
pop
repz
loopne
xchg
retf
call
aad
and
test
shr
mov
test
in
(bad)
sub
ss
(bad)
push
out
aaa
adc
jmp
lods
jmp
lahf
scas
mov
push
mov
mov
test
retf
pop
and
js
dec
aam
or
es
cmp
sub
mov
and
and
je
mov
or
aam
sti
xchg
mov
pop
dec
pop
std
xchg
iret
push
in
or
es
push
inc
pop
jecxz
enter
rcr
(bad)
std
dec
sub
in
sub
ffreep
jne
jl
mov
addr16
mov
adc
bnd
out
clc
das
stos
mov
imul
ja
repz
sti
and
icebp
cmp
lds
dec
loop
call
inc
inc
add
fwait
dec
sub
push
loop
jb
stc
sbb
mul
ror
dec
and
cmps
test
push
hlt
adc
cmp
pop
sar
dec
dec
xchg
loope
ss
mov
cmps
pushf
(bad)
push
repnz
nop
mov
push
mov
gs
(bad)
pop
mov
popa
call
and
rcl
mov
pop
mov
loopne
push
jp
lock
loop
aas
fiadd
popf
push
fisub
mov
fstp
xchg
mov
jge
dec
ss
push
or
pop
aas
int
setge
and
lea
pushf
jl
test
xchg
add
push
dec
inc
dec
sub
adc
fst
dec
clc
xchg
mov
je
inc
loope
fwait
jbe
mov
jp
test
mov
sbb
add
xor
push
addr16
imul
and
dec
mov
pop
sub
or
and
push
les
or
mov
loopne
or
(bad)
je
xor
inc
bound
out
mov
mov
dec
popf
push
enter
push
test
into
push
inc
sbb
cmp
sbb
fs
or
in
jne
mul
and
and
jp
call
add
xchg
push
les
jmp
pop
jmp
leave
jge
imul
dec
pushf
mov
jmp
out
pop
add
push
test
(bad)
jmp
mov
mov
out
push
(bad)
sub
cwde
dec
or
mov
ja
iret
dec
in
sbb
out
(bad)
sub
push
jmp
imul
sub
mov
xor
add
ja
aad
push
cld
xchg
mov
sub
int3
sub
ret
xchg
pop
pop
mul
ds
xchg
sbb
and
mov
pop
and
addr16
cmps
jb
aaa
inc
fs
out
dec
lods
iret
jmp
push
adc
in
sbb
aad
mov
sar
repnz
add
shl
in
mov
mov
or
fbstp
dec
dec
test
xchg
mov
loope
cli
xor
ins
jae
jnp
sar
nop
inc
ret
fwait
rol
push
lock
xor
(bad)
fbstp
mov
jno
dec
dec
inc
jle
sar
dec
inc
clc
mov
and
add
push
repnz
inc
sbb
dec
pop
pop
fsubrp
dec
inc
mov
loopne
pop
cli
stc
push
test
cmp
out
push
jl
call
pop
(bad)
cmp
jnp
sub
repnz
and
and
cmps
daa
push
adc
loope
push
cdq
aas
xor
popf
sbb
dec
xlat
in
push
and
mov
das
sub
add
xor
and
sbb
clc
int
sub
(bad)
repz
xchg
adc
aaa
xor
cmp
push
xchg
loopne
icebp
nop
fs
loope
stos
test
mov
dec
xor
mov
cld
sbb
in
or
dec
xchg
cld
xchg
dec
xor
fidivr
sub
adc
push
lds
std
in
mov
mov
shl
push
jle
jl
in
ror
(bad)
sbb
cwde
icebp
cmp
leave
jecxz
aaa
fmul
and
fwait
aas
sahf
int3
ins
jnp
add
push
(bad)
retf
nop
mov
int
movs
scas
(bad)
jo
ret
mov
loope
in
pop
out
inc
movlhps
add
movs
call
rol
or
inc
aad
fbld
stos
les
adc
xor
push
stc
sub
push
fcomp
(bad)
pop
mov
cs
dec
stos
add
mov
je
or
cwde
in
cmps
xchg
ds
int3
fwait
call
adc
xchg
fisubr
out
ja
pop
jo
int
imul
xor
cdq
mov
or
je
or
adc
mov
mov
mov
dec
jg
adc
adc
mov
sbb
pop
cmc
repnz
psllw
adc
jge
sti
lds
or
mov
hlt
mov
dec
js
sbb
and
out
call
test
sub
add
dec
hlt
xor
xchg
dec
mov
dec
out
scas
ror
sub
movs
mov
icebp
sub
add
(bad)
jge
retf
repnz
mov
xchg
xlat
cli
dec
and
or
mov
sub
cs
lods
addr16
inc
or
xchg
xor
dec
es
cmc
fsubr
jb
xchg
popf
pop
sti
jle
cmps
jbe
(bad)
push
push
adc
push
or
fdiv
push
pop
loopne
and
push
jno
add
fidivr
dec
jmp
push
ret
push
jnp
fisttp
inc
movs
add
dec
adc
mov
inc
ret
lds
mov
dec
lea
jae
arpl
or
sar
aas
in
into
jge
nop
cmps
adc
pusha
fidivr
in
mov
retf
mov
fwait
inc
cmp
dec
cmp
jle
mov
dec
ret
mov
mov
inc
adc
sbb
fs
push
nop
sub
js
lods
xor
dec
sub
inc
loope
pop
push
cwde
mov
dec
jbe
pop
movs
shl
fisubr
ja
dec
mov
data16
add
pushf
or
mov
gs
xchg
popa
inc
push
jno
sbb
xor
mul
shr
test
pop
xchg
test
test
inc
jmp
movs
in
out
(bad)
and
dec
mov
xor
xchg
or
mov
mov
mov
push
push
(bad)
mov
imul
mov
mov
popf
aaa
cmps
mov
mov
jl
cmp
or
pop
pop
sbb
jnp
fs
xor
out
je
fstp
cmp
sbb
mov
inc
dec
jecxz
les
pop
test
daa
dec
test
xor
fadd
icebp
imul
sub
adc
pop
loop
pop
fucomip
aad
popa
addr16
sub
jne
xor
outs
test
popa
cwde
repnz
jl
jnp
xchg
adc
fistp
or
scas
or
inc
cmps
iret
add
cmp
rcr
imul
leave
cmp
iret
sub
xchg
xchg
or
iret
pop
outs
mov
fmul
sub
in
or
out
or
fdivr
leave
adc
mov
jp
jno
xor
jge
test
or
sub
mov
js
mov
sbb
add
mov
jl
sahf
jno
repnz
icebp
pop
lods
pop
add
rcl
ret
dec
dec
int3
adc
(bad)
in
pushf
xor
bnd
ss
inc
cmp
mov
push
fs
jmp
pop
nop
jl
dec
shr
bound
sub
(bad)
xrelease
cmp
cld
pop
int
fldl2t
popf
sbb
fs
push
inc
adc
stos
adc
movs
mov
lods
adc
xor
leave
dec
sbb
mov
jns
(bad)
out
push
jne
push
jbe
bound
adc
or
retf
stc
pop
in
mov
or
inc
dec
inc
pop
jae
cwd
mov
fcomp
dec
inc
std
add
popa
sub
mov
(bad)
and
xchg
ja
fwait
les
out
sbb
jmp
or
mov
xor
xchg
icebp
jnp
push
mov
xchg
add
out
js
test
add
push
daa
scas
es
movs
or
stos
repz
mov
call
mov
(bad)
test
repz
int3
je
dec
mov
in
add
mov
in
dec
xchg
add
jbe
push
jge
jne
aad
(bad)
std
das
cld
dec
lahf
xlat
loopne
outs
inc
and
daa
pop
jno
cmp
stos
jp
or
dec
fist
pop
jne
sbb
repnz
push
outs
dec
imul
xlat
push
sbb
(bad)
inc
mov
jb
dec
dec
shl
xor
add
adc
push
cdq
pushf
or
or
dec
inc
ja
or
shl
ret
inc
nop
xbegin
rcr
push
loopne
xchg
repnz
in
inc
cld
push
xchg
stc
movs
std
add
ret
repz
mov
jle
in
rol
add
test
pusha
repz
and
adc
push
(bad)
and
ss
add
inc
cmp
jo
aaa
jae
jbe
ja
outs
adc
bound
jle
sar
mov
adc
mov
ja
outs
loop
stos
and
cmps
xchg
mov
sub
stc
inc
sub
call
or
mov
push
mov
mov
mov
div
inc
sbb
mov
dec
xlat
pop
pusha
mov
scas
fimul
movs
mov
aaa
ror
lds
fsubr
push
cmp
cs
xor
mov
in
adc
stos
sti
or
not
jge
pop
lock
xchg
adc
pop
xor
inc
loop
pop
imul
jbe
repnz
fmul
mov
and
cmp
lods
(bad)
fcomp
mov
in
repnz
jne
jp
out
sub
cmp
adc
mov
shl
arpl
xor
push
inc
or
and
(bad)
adc
lods
ja
push
jbe
rcl
cmps
int
idiv
mov
js
mov
add
aaa
xlat
sbb
pop
jns
retf
push
(bad)
in
mov
sub
cmp
cmp
outs
sbb
rol
mov
mov
rcl
xchg
mov
ret
dec
mov
push
add
imul
pop
xchg
call
xchg
gs
inc
fst
mov
int3
in
mov
and
dec
inc
ins
in
jne
test
and
mov
mov
ja
scas
mov
xchg
xchg
xor
es
xchg
jmp
neg
mov
test
dec
gs
dec
xlat
jg
xor
pushf
int
mov
les
inc
pop
adc
jbe
imul
pop
jns
fst
es
cmp
hlt
adc
ds
jl
sbb
stc
ja
pop
sbb
push
popf
shl
cmp
pop
cmp
(bad)
into
sub
and
cwde
shl
aas
and
xchg
xor
enter
add
inc
pop
adc
inc
inc
xor
dec
jo
xchg
movs
mov
push
cmp
pusha
shl
jns
pop
sti
fdivr
jnp
mov
addr16
mov
fcom
in
jmp
dec
xlat
inc
inc
jne
cld
pop
push
test
mov
xlat
fstp
hlt
adc
jge
lock
(bad)
sub
test
neg
das
rcr
sbb
pop
inc
stc
or
int
fmul
sbb
xor
clc
push
rep
jne
lods
adc
jmp
jecxz
mov
mov
(bad)
pushf
jmp
mov
cmc
cmps
hlt
adc
mov
cld
into
ins
hlt
xchg
push
or
fstp
pop
stc
dec
mov
dec
pushf
add
sub
push
in
mov
retf
les
push
dec
cmp
and
push
xchg
(bad)
sbb
mov
or
imul
and
pop
data16
jo
cmp
mov
jmp
ins
out
jb
adc
es
or
rcr
int
pusha
pop
test
pusha
or
fnsave
mov
and
ins
xchg
popf
repz
jmp
adc
popf
rcl
pop
sbb
sub
mov
xor
int
push
cmp
and
xchg
sbb
adc
shr
push
scas
cmps
ror
jae
aas
jbe
sbb
aas
mov
sub
push
pop
aad
adc
enter
mov
sub
pop
xchg
jmp
mov
mov
mov
mov
mov
and
add
and
and
xor
xor
mov
jle
jecxz
mov
fwait
xchg
mov
cmc
push
popa
push
mov
mov
cmp
xchg
ja
mov
dec
icebp
fstp
je
xchg
popf
mov
jmp
and
pop
jl
mov
dec
jb
into
lock
inc
loopne
xchg
cld
and
movs
inc
rol
call
pop
inc
(bad)
retf
sti
popf
jnp
fdiv
or
dec
(bad)
repnz
sti
inc
adc
lods
mov
jle
(bad)
enter
push
jge
fstp
or
out
sbb
jbe
sub
inc
xlat
int3
cwde
addr16
fistp
inc
mov
lds
mov
in
sbb
xor
xor
cli
mov
push
adc
loope
xchg
dec
retf
popa
adc
mov
arpl
lods
dec
(bad)
cli
and
in
retf
and
je
or
mov
fiadd
pop
jg
xor
xchg
sti
hlt
jo
(bad)
ret
and
neg
xchg
cwde
sub
inc
icebp
fwait
stos
aas
and
mov
sub
pop
and
add
push
or
sahf
test
hlt
inc
pop
out
sub
dec
push
imul
daa
push
(bad)
push
sbb
cld
jp
int3
jns
cmps
dec
test
mov
mov
push
mov
clc
stos
and
or
pushf
aam
sbb
in
xchg
sub
jne
ins
inc
add
sub
js
sti
pop
jne
cld
dec
pop
adc
test
dec
ins
test
sbb
and
inc
inc
test
in
pop
ror
mov
push
xchg
sub
fdiv
(bad)
sbb
mov
call
push
je
out
jae
dec
outs
cmp
mov
mov
imul
inc
arpl
ficomp
push
jle
lock
cwde
aaa
popf
cmp
jo
pop
cmps
push
lea
es
mov
inc
add
loope
fs
gs
retf
test
shl
cmp
sbb
or
and
mov
adc
jae
stos
lea
aad
sub
outs
xchg
dec
mov
mov
imul
popf
loopne
xor
dec
sub
ins
push
jp
xchg
mov
or
fidivr
cli
jb
out
pause
push
into
add
sahf
lods
mov
fwait
sbb
stos
add
leave
ficomp
xchg
mov
out
outs
inc
jne
add
cmp
xchg
cmp
and
inc
in
fisubr
sbb
movzx
jmp
pushf
push
ins
cmp
mov
mov
dec
(bad)
xor
scas
dec
push
xor
ret
mov
call
jmp
(bad)
std
ror
or
fs
mov
push
cmp
adc
int
mov
inc
pop
fild
inc
int
test
in
ret
pop
mov
pop
jp
shl
jmp
or
loop
dec
(bad)
mov
test
(bad)
sub
ret
(bad)
pop
je
lea
cmp
xor
(bad)
fcomp
ret
aam
shr
mov
or
pop
mov
aam
pop
fucomip
aaa
or
ja
loope
cmps
stos
add
sbb
mov
adc
mov
mov
pop
ins
in
cmps
cli
mov
iret
push
jno
dec
ret
scas
push
in
in
in
pop
sbb
in
mov
xchg
jmp
aad
mov
cmp
into
jnp
pop
lahf
inc
push
lods
jo
ds
fwait
repz
and
mov
dec
mov
call
aad
sbb
sbb
mov
das
std
enter
in
call
sahf
add
pushf
inc
adc
and
scas
or
loopne
sub
lods
mov
sub
dec
shl
inc
neg
or
jmp
dec
in
mov
leave
dec
or
in
fiadd
mov
xchg
cwde
push
movs
lea
mov
clc
mov
hlt
add
push
fbstp
and
pop
inc
cs
in
(bad)
shr
icebp
add
jmp
and
inc
and
aas
test
cmp
xor
push
cmp
cmc
inc
jnp
mov
pop
mov
mov
mov
pushf
inc
pusha
shr
aad
adc
push
push
mov
fdivr
push
jle
loopne
push
pop
rcr
mov
hlt
mov
fnstenv
or
out
aad
outs
retf
cdq
xor
mov
nop
cmp
sbb
adc
repz
or
jns
rcr
stc
adc
sbb
sbb
mov
dec
movs
jmp
iret
or
jmp
mov
adc
adc
(bad)
xchg
ror
jnp
sti
fsubr
push
out
xor
cmp
add
add
push
add
fdivr
movs
sub
sub
mov
mov
test
in
sbb
add
in
jb
je
pop
xchg
push
(bad)
outs
shl
cmp
movs
(bad)
mov
xor
imul
arpl
jns
inc
pop
mov
int3
dec
add
or
in
inc
bound
xchg
neg
and
push
jecxz
fld
adc
cmp
and
sar
fild
ret
push
cdq
mov
inc
mov
mov
push
(bad)
jmp
imul
(bad)
cli
jmp
enter
fsubr
inc
mov
mov
sub
mov
das
adc
add
or
aam
cmp
adc
pop
adc
push
push
ss
xor
fwait
icebp
adc
rcr
dec
mov
pop
push
arpl
ins
push
mov
rcr
cmovg
int
dec
aam
push
push
jmp
loop
mov
lods
dec
adc
inc
jg
jmp
pop
sub
push
mov
iret
imul
in
lahf
mov
cli
mov
(bad)
sbb
lods
fld
retf
push
cmp
mov
add
adc
sub
sub
fidiv
mov
ret
cmp
pusha
sbb
and
push
(bad)
out
in
pop
scas
mov
pop
fnstenv
mov
inc
pop
js
mov
inc
sub
and
xor
mov
sbb
xchg
inc
xchg
push
ret
xor
ins
mov
adc
xchg
or
cmp
jns
rol
inc
ret
inc
push
xchg
out
mov
sar
adc
push
inc
cmp
out
xchg
push
out
lahf
sub
xchg
sbb
stos
(bad)
(bad)
stos
fdivr
xchg
imul
add
test
push
push
xchg
clc
clc
aad
gs
nop
push
pop
cmp
ret
push
mov
or
xor
jmp
pop
loop
and
sbb
into
dec
mov
mov
mov
sub
scas
add
mov
(bad)
cmp
pop
(bad)
test
sbb
ja
repnz
lods
xchg
js
shr
push
std
and
mov
jo
mov
stos
mov
pop
fs
xchg
xchg
sbb
addr16
jle
sub
sahf
sbb
inc
pop
inc
mov
repnz
and
push
div
arpl
jp
ror
add
pop
mov
fs
js
jle
(bad)
movs
xchg
arpl
cdq
fild
cld
cmp
imul
cmp
add
das
daa
xchg
cld
pop
jo
and
outs
mov
sbb
push
add
int3
imul
ins
xor
test
ins
cmp
(bad)
xchg
inc
pop
cld
shl
aas
(bad)
(bad)
hlt
cmp
xor
ja
cmp
push
mov
sub
dec
call
(bad)
jmp
ret
test
cwde
into
(bad)
or
loopne
xor
push
movs
arpl
jecxz
mov
out
mov
test
(bad)
in
mov
ss
cli
loope
sbb
mov
sub
pop
and
mov
push
nop
push
movs
jle
loopne
adc
cmc
xchg
ret
cmp
adc
lds
div
dec
xchg
pop
mov
jne
call
clc
and
int3
pop
cmp
es
(bad)
out
pop
sbb
jnp
sbb
fstp
int
lds
jno
fsub
sub
jmp
loope
sub
add
jo
inc
dec
(bad)
jns
xchg
jae
xlat
push
xchg
leave
hlt
pop
xor
xchg
pop
out
ror
and
jno
mov
xor
cmp
mov
mov
ja
stos
test
ins
in
add
adc
stos
addr16
ret
jge
add
nop
mov
imul
sub
dec
jne
push
lea
out
jmp
or
dec
in
mov
aaa
push
mov
lock
div
xchg
dec
in
mov
in
in
std
cmp
jo
pusha
cmc
jmp
popa
xchg
icebp
jge
and
ss
cmp
xor
add
jle
dec
jmp
cmp
xor
xlat
push
int3
std
jnp
jg
pop
mov
das
adc
and
xchg
jp
adc
pushf
mov
and
aad
mov
inc
das
shl
mov
mov
jg
(bad)
in
fisttp
dec
fmul
outs
das
ror
push
(bad)
daa
in
pop
jmp
mov
xchg
jp
and
push
in
pop
rol
mov
(bad)
or
mov
mov
xor
mov
jl
adc
cdq
mov
ret
das
in
pop
mov
clc
add
and
or
xor
out
fsubr
xlat
dec
(bad)
sub
in
or
cdq
out
adc
repnz
les
ins
cmps
repz
les
mov
or
or
cmp
dec
mov
adc
pop
cmps
push
or
push
sbb
test
dec
mov
xor
push
enter
or
dec
pop
lock
jo
bound
hlt
sbb
(bad)
sahf
fnstenv
fimul
mov
dec
nop
ins
fsub
lock
cmc
xlat
xchg
ja
fnstsw
ins
and
bound
adc
imul
sub
or
xchg
gs
mov
out
xchg
add
sub
xor
sub
pop
scas
push
xchg
js
(bad)
pusha
or
mov
and
mov
or
pop
add
mov
adc
shl
push
das
xor
sbb
mov
mov
lea
stc
mov
out
int3
jns
jmp
mov
mov
cld
push
push
std
std
push
add
and
mov
mov
popf
adc
ret
or
test
dec
dec
jmp
add
scas
sub
mov
cwde
xor
adc
pop
xchg
out
cmp
call
js
in
jle
es
scas
mov
scas
xor
inc
push
loop
lahf
clc
jnp
icebp
pop
and
jno
popf
jle
not
dec
in
jmp
jmp
fbstp
fdivr
es
push
cmp
inc
fst
(bad)
and
sbb
mov
ins
sbb
pop
adc
aad
ins
and
ja
push
shl
outs
mov
add
mov
cwde
lock
adc
scas
jp
inc
push
dec
or
mov
sub
and
xchg
add
mov
sahf
mov
mov
(bad)
fcomp
movd
(bad)
js
cmp
dec
push
pop
int
mov
adc
or
jo
sbb
cmc
pop
mov
js
sbb
push
or
sub
loop
popa
mov
or
mov
aas
adc
jg
call
fcomp
mov
xchg
stos
mov
test
xor
stos
(bad)
jle
sub
fimul
pusha
bound
mov
das
jae
sar
sbb
fwait
sub
test
pop
sbb
enter
cld
adc
lds
mov
cwde
dec
inc
movs
ret
mov
lahf
mov
jp
inc
rcr
push
fwait
xor
retf
int3
sub
pop
xlat
repnz
sbb
fs
ss
test
pop
dec
jno
daa
jo
push
mov
std
and
sti
sub
in
push
aad
add
mov
mov
cwde
daa
popa
fcom
jno
cmp
jb
push
mov
pop
dec
cmc
scas
cmp
imul
popf
lods
jmp
add
adc
sbb
pop
outs
adc
rep
cdq
mov
xor
and
xchg
push
imul
fcom
jno
xchg
(bad)
pusha
dec
sbb
sub
xchg
sub
fnstsw
add
iret
inc
imul
(bad)
adc
ror
popa
and
scas
xchg
dec
cmp
mov
push
lods
jle
and
xor
bound
ins
in
or
mov
data16
(bad)
add
pop
jg
out
ret
in
out
push
bound
sbb
xchg
inc
sbb
pop
outs
xor
jne
or
fs
mov
repnz
inc
or
aam
std
pop
pop
push
adc
(bad)
repnz
fst
ss
jmp
xor
pop
or
outs
movs
dec
mov
les
icebp
leave
stos
inc
leave
pop
jg
gs
ss
retf
stc
and
je
jo
xchg
icebp
shl
rcl
dec
test
add
out
mov
pop
test
jp
xor
daa
pop
mov
leave
imul
push
adc
ins
leave
mov
xlat
push
pop
push
add
cmp
jp
xor
push
dec
ret
data16
mov
mov
(bad)
(bad)
jmp
sbb
jbe
ficom
xor
repz
cmp
add
or
fimul
mov
(bad)
xchg
jmp
loope
xor
fadd
mov
xchg
imul
sahf
cli
and
push
lock
rcr
and
mov
ins
das
inc
add
mov
sub
ja
pushf
fs
pop
mov
jno
pop
mov
mov
mov
out
and
(bad)
cmp
push
cmp
xchg
lahf
fsubr
adc
cmp
cmp
push
inc
push
jmp
in
xlat
scas
mov
pop
test
leave
cmps
sbb
pop
pop
inc
pop
scas
fwait
jl
jp
test
fcmove
xor
lods
shr
mov
out
jg
xlat
jb
pusha
xchg
pop
retf
mov
les
dec
sti
(bad)
movs
lock
push
int3
sub
stos
push
es
adc
sbb
repnz
or
pop
int3
mov
retf
mov
std
sub
mov
cwde
inc
movs
cmps
and
fsincos
ret
retf
pop
in
(bad)
add
lock
leave
xchg
sub
(bad)
push
push
hlt
inc
(bad)
mov
dec
xchg
aas
les
retf
imul
add
jg
sbb
popa
fwait
jbe
jbe
mov
mov
in
push
in
ret
fwait
dec
inc
int
pop
popf
mov
mov
xchg
pusha
dec
std
sbb
inc
mov
in
add
mov
push
fiadd
pop
push
mov
dec
std
js
jge
xchg
mov
or
into
cs
xor
jle
call
or
adc
dec
add
push
js
imul
cs
(bad)
jmp
int3
cmp
sbb
movs
push
sub
adc
push
jo
push
xchg
iret
out
jo
les
dec
in
shl
mov
(bad)
push
xchg
scas
ins
mov
inc
push
test
inc
jle
mov
lahf
movs
std
int
lea
xchg
test
enter
xor
(bad)
std
add
xor
jbe
retf
je
mov
adc
cmp
retf
ds
fnsave
pop
cs
fdivrp
scas
aam
cli
stos
inc
sti
loope
mov
and
mov
repz
mov
mov
and
js
outs
test
call
ud0
add
cmp
mov
mov
enter
pop
(bad)
adc
sub
imul
mov
or
mov
outs
inc
mov
mov
outs
ss
mov
nop
popf
push
jno
dec
stc
xor
lods
iret
and
lahf
pop
jecxz
jg
pop
dec
outs
adc
adc
repnz
stc
scas
int
xor
(bad)
cmps
mov
jne
xor
pop
pop
adc
inc
xlat
ins
ficomp
inc
jmp
add
xchg
adc
shr
cmp
push
repnz
jecxz
mov
or
adc
imul
sbb
jmp
xchg
mov
inc
push
lods
repnz
cmp
test
xor
adc
mov
xor
jge
daa
ret
iret
call
jno
cmp
fs
and
xchg
mov
les
mov
leave
test
dec
aam
push
mov
hlt
cdq
mov
jmp
jne
rcr
xchg
and
test
repnz
xchg
sbb
leave
push
repnz
lods
lods
add
mov
push
data16
adc
jg
fwait
or
jle
mov
loopne
xchg
lock
vpackssdw
xor
xchg
pushf
sub
lds
or
sahf
or
outs
cmp
bound
js
aad
les
inc
ds
invd
xchg
imul
or
dec
lods
push
sahf
popa
cmp
int3
pushf
daa
cmp
sbb
adc
inc
push
call
xor
pop
xlat
adc
retf
sub
loope
xor
or
ins
(bad)
pop
cmp
mov
push
jns
movs
push
add
pop
rep
jmp
(bad)
mov
rcr
sub
lock
or
mov
test
loop
jmp
popa
dec
dec
dec
dec
mov
fcom
stc
mov
pushf
rcl
dec
mov
lea
and
mov
sub
int
lods
xlat
fwait
or
mov
add
cmp
adc
mov
repz
adc
test
or
mov
xchg
jo
adc
xor
xlat
daa
add
gs
jo
push
stos
pop
(bad)
inc
mov
cmp
ror
icebp
sbb
sub
inc
repz
sub
outs
sahf
clc
lock
(bad)
jnp
and
cwde
outs
int
pop
jae
inc
xlat
cli
hlt
mov
stc
inc
sub
xor
push
inc
xlat
and
adc
and
psubusb
lods
in
ss
pop
shld
pop
int3
jae
add
das
out
cmp
dec
jg
or
mov
rdpmc
add
cmps
jle
mov
mov
into
cli
pop
es
iret
lahf
sti
jl
mov
rep
mov
std
scas
test
stos
or
sbb
aaa
movs
jns
out
arpl
add
loopne
inc
iret
adc
fsub
cs
das
push
leave
dec
adc
push
mov
adc
mov
xor
not
inc
sub
fwait
sbb
in
loopne
out
inc
xchg
mov
repz
sbb
inc
fimul
pop
lods
leave
mov
cmc
and
mov
hlt
ins
jmp
fisubr
ret
aas
jge
dec
fidiv
icebp
ins
cld
jmp
les
or
mov
jns
dec
(bad)
mov
and
push
push
ss
dec
sub
xor
sar
arpl
or
xor
dec
test
push
mov
xchg
imul
adc
pushf
daa
js
mov
nop
popa
mov
adc
aam
mov
mov
xor
push
shl
imul
bound
cdq
mov
or
(bad)
lock
(bad)
ficom
movs
daa
mov
xchg
fstp
arpl
pop
jl
test
jno
mov
mov
(bad)
js
dec
ja
xchg
pinsrw
inc
lea
shr
sub
inc
push
push
nop
dec
fwait
mov
enter
std
cli
add
push
lds
add
sbb
ficomp
xchg
pushf
(bad)
cmp
add
add
fistp
repnz
cmp
and
sahf
inc
cmp
push
inc
cmps
and
fisttp
jl
add
rcl
mov
mov
cmp
pop
nop
jp
or
inc
adc
jle
push
cmps
inc
jns
jno
ins
cmp
or
leave
cwde
ror
imul
push
popa
es
adc
scas
add
xor
aam
adc
ficomp
stos
mov
(bad)
jl
inc
add
arpl
into
push
movs
out
mov
aad
xchg
fnstsw
mov
arpl
jecxz
addr16
xchg
mov
adc
fadd
inc
push
test
cmp
cmp
mov
out
movs
pusha
jo
push
pop
test
iret
scas
jmp
clc
aaa
adc
mov
add
fs
ret
inc
sub
mov
call
inc
inc
adc
sbb
cmp
sti
mov
mov
mov
fimul
push
mov
cmp
pop
(bad)
xlat
mov
push
imul
push
pop
inc
or
push
ret
and
out
ins
or
(bad)
aas
pop
mov
fcomp
sub
mov
out
repz
xor
ret
icebp
xor
addr16
ds
mov
aad
add
cmp
pop
xchg
inc
cmps
pop
sbb
xchg
jno
in
out
pop
mov
mov
int3
and
imul
aas
fistp
mov
xor
clc
(bad)
jns
(bad)
fcomip
imul
fcomp
pop
pop
and
jno
xchg
adc
xor
call
xor
(bad)
repz
sub
hlt
scas
and
dec
cmp
scas
xchg
ins
in
push
sbb
xchg
int3
das
bound
neg
jo
mov
mov
cmp
inc
std
xor
and
es
sahf
js
mov
fsub
sub
mov
push
mov
test
ja
mov
lods
retf
sbb
movs
xor
or
dec
pushf
fs
sub
movs
aad
dec
stos
int3
cmps
push
lods
fadd
movs
data16
inc
ret
popa
mov
adc
mov
push
or
jb
sub
and
nop
sbb
(bad)
fild
je
adc
mov
adc
mov
ss
push
dec
fs
push
xor
jmp
gs
jg
add
mov
(bad)
das
xor
stos
inc
ret
pop
sbb
jg
movs
xchg
lods
(bad)
ins
cli
stos
aas
scas
leave
sbb
jmp
dec
int3
fld
mov
sub
sub
leave
sub
(bad)
inc
xchg
enter
fwait
gs
call
not
outs
clc
rcr
dec
test
ins
lods
repnz
jmp
inc
inc
fucomip
enter
fs
jmp
adc
scas
xchg
push
push
push
cmps
and
popa
fwait
sbb
(bad)
pop
mov
cmps
outs
or
fcmovnbe
jge
cld
sbb
ret
cmps
sahf
mov
lods
in
sbb
hlt
in
sub
dec
rol
loope
je
inc
mov
mul
push
es
icebp
in
push
(bad)
adc
sub
sbb
outs
in
mov
sbb
push
loop
push
outs
popa
frstor
in
out
mov
out
adc
cdq
mov
scas
loope
push
mov
stos
dec
out
mov
adc
fld
jmp
fimul
int
adc
push
xor
test
dec
xchg
inc
test
fnstcw
mov
pop
sub
mov
fdivrp
enter
out
ror
cmp
out
cdq
loope
adc
ss
jmp
xlat
leave
int3
enter
mov
sub
imul
out
sbb
aas
mov
adc
ins
pop
xlat
dec
cld
pop
jle
pop
xchg
shr
mov
pop
lds
sbb
(bad)
stos
fwait
in
sub
push
push
in
lds
das
jl
in
hlt
mov
cmps
pop
bound
dec
fcos
mov
and
fadd
out
enter
loope
mov
mul
jl
sahf
jnp
call
mov
adc
stos
pop
mov
cli
imul
rcr
push
mov
test
mul
fs
or
add
push
xor
pop
jne
in
pop
ficom
pop
pushf
dec
out
fldcw
sar
mov
cdq
lahf
ja
mov
push
jb
sub
inc
in
mov
mov
in
ficom
outs
dec
out
xor
xor
cld
retf
gs
ror
pusha
cli
in
loope
lea
(bad)
sub
call
mov
nop
xor
sub
fwait
pop
loope
pop
ret
sub
into
xchg
mov
and
stos
cmc
jp
loope
pop
icebp
into
sahf
pop
mov
xchg
xor
dec
cld
cmp
cmc
arpl
adc
loopne
dec
add
or
enter
xchg
jecxz
jmp
test
mov
or
stos
adc
js
xor
add
lea
enter
stos
and
call
adc
stos
pop
int3
cmc
add
inc
push
jl
sbb
inc
pushf
sahf
push
bnd
jmp
xchg
(bad)
mov
cs
add
push
dec
(bad)
jb
sub
out
adc
xchg
mov
cld
imul
hlt
ret
pop
mov
xlat
push
and
in
inc
es
data16
mov
into
dec
in
fsub
add
add
(bad)
sbb
cmps
xor
or
cmp
xchg
mov
in
out
out
xchg
inc
pop
cmc
aad
mov
jns
aam
pop
pop
jb
push
mov
mov
enter
mov
xchg
fwait
outs
aad
fld
adc
adc
addr16
in
lds
ja
test
and
ja
jo
js
ins
loop
lahf
and
mov
jmp
cmc
mov
(bad)
loop
lock
jge
mov
push
jl
xor
sub
hlt
pop
adc
sub
mov
scas
jae
aam
and
int3
jb
out
xchg
std
pushf
aaa
shr
xor
inc
mov
leave
out
push
dec
sbb
jmp
repz
lods
imul
cli
mov
retf
sub
test
cwde
jle
and
inc
xchg
sbb
jo
call
bound
or
and
mov
and
fwait
push
dec
push
inc
inc
inc
loopne
pop
inc
or
js
lods
not
cdq
cwde
stos
mov
cmp
mov
lods
int
daa
jle
mov
sbb
cmc
and
test
xlat
arpl
adc
jmp
call
or
ficom
dec
dec
cmp
sub
add
stos
outs
dec
sbb
ss
xchg
xlat
jmp
mov
jno
xor
lods
xor
(bad)
sbb
gs
jecxz
adc
jae
shl
dec
cwde
push
loop
or
es
mov
lods
in
mov
xor
dec
mul
in
adc
push
adc
pop
into
iret
jo
pop
cdq
fsubr
icebp
mov
stc
shl
cdq
add
sbb
add
adc
sar
(bad)
push
xchg
popf
jo
push
sub
aas
dec
lods
mov
mov
arpl
inc
imul
push
shl
fimul
out
(bad)
cdq
test
inc
push
push
int3
sbb
jmp
movs
and
and
mov
std
mov
aas
push
aam
xlat
sbb
arpl
sbb
adc
mov
jecxz
icebp
pushf
movs
movs
sub
jle
pusha
mov
addr16
stos
push
cmps
into
jp
(bad)
xor
mov
arpl
shl
cwde
data16
xchg
and
sbb
imul
mov
pop
cmps
add
mov
sar
stos
sbb
fsubr
mov
pop
(bad)
xor
xor
shl
mov
dec
add
test
repz
call
mov
xchg
sub
sbb
inc
sbb
and
mov
les
shr
in
test
pop
stos
lds
or
ret
adc
adc
sbb
ins
fcom
add
fwait
stos
call
mov
outs
jo
inc
mov
aaa
fsubr
daa
test
adc
jg
aaa
(bad)
fs
mov
imul
popf
xor
inc
dec
dec
or
popf
adc
hlt
jns
add
shl
lds
jo
stc
xchg
lds
pop
bound
dec
or
icebp
mov
(bad)
into
sub
inc
scas
scas
pop
in
(bad)
aad
cwde
xor
adc
fidiv
(bad)
cdq
out
dec
dec
mov
and
mov
mov
pop
xchg
cmp
cmc
cmps
repz
pop
popa
jno
xlat
rcr
jle
enter
mov
out
jge
scas
aad
stc
stos
push
lods
sahf
adc
jmp
dec
sahf
push
bound
in
and
gs
in
es
cmp
sahf
inc
xchg
das
div
mov
mov
jmp
adc
mov
adc
and
jns
add
cmp
sub
loope
sahf
or
xor
sub
mov
mov
fxch
cmp
cmps
cmp
fs
mov
aam
adc
mov
call
add
mov
pop
and
lods
sub
cld
or
dec
inc
sbb
out
pop
push
jns
(bad)
clc
mov
(bad)
cmps
cmps
or
imul
addr16
xchg
fldenv
xor
sbb
div
cmp
add
add
arpl
push
(bad)
fild
jmp
gs
jmp
ss
adc
or
test
fidiv
lods
cs
pusha
inc
data16
es
push
jmp
sbb
and
xchg
xchg
arpl
cli
out
and
not
pop
pop
inc
ja
inc
jecxz
xchg
test
cwde
xchg
mov
fldenv
cdq
push
add
fild
inc
invd
enter
rcr
(bad)
mov
xchg
sub
sub
call
cmps
dec
lods
lods
xchg
pop
(bad)
(bad)
ins
popf
or
mov
sub
ds
add
xor
fs
jl
cmc
xor
mov
mov
xor
push
loop
out
stc
movs
gs
push
cli
xchg
mov
adc
push
xchg
xchg
push
add
xlat
mov
retf
xor
jge
in
and
add
jb
push
mov
out
xor
ficom
test
adc
dec
loopne
xor
jmp
out
sbb
sub
and
sub
dec
cwde
js
cwde
push
pop
(bad)
push
mov
inc
shr
pop
rcl
mov
mov
mov
ins
jmp
sbb
jmp
or
adc
xor
mov
out
ja
adc
js
popa
dec
xlat
pop
leave
pop
int
and
icebp
fwait
dec
and
mov
cld
xchg
push
dec
bound
sub
add
test
push
push
xlat
mov
hlt
sbb
ret
adc
mov
inc
fnstenv
(bad)
fstp
gs
hlt
or
pusha
inc
loope
int
jle
mov
aaa
ins
std
das
or
or
mov
stos
shr
add
xchg
test
adc
ret
jl
jmp
adc
cmp
daa
mov
jmp
(bad)
push
cmp
enter
sub
or
and
xlat
out
cdq
inc
lds
repnz
pop
jb
popf
or
adc
cli
cmp
mov
arpl
loope
and
xor
in
add
push
sbb
out
inc
mov
mov
in
jno
test
and
bnd
cmp
jne
bound
movs
test
std
das
stc
sub
stos
cmp
inc
cmc
xor
clc
push
ret
inc
cmps
fdivr
mov
js
fwait
sub
pop
mov
and
shr
out
dec
sbb
retf
xchg
stos
xchg
mov
cmp
jecxz
jg
aas
sbb
movs
ss
add
dec
mov
fist
test
push
punpckldq
bnd
cli
in
aam
popf
inc
(bad)
lahf
ss
scas
push
into
loop
add
sub
and
(bad)
and
xchg
sub
ds
push
in
mov
push
out
imul
jmp
cmp
push
aas
lods
test
or
cdq
(bad)
xchg
loop
sub
sbb
dec
sub
icebp
mov
pop
stc
outs
movs
push
or
call
adc
jge
add
dec
push
mov
mov
retf
(bad)
fdivr
or
push
pop
popf
rcl
pop
in
outs
xor
cmp
out
pop
stos
sub
fs
mov
or
xchg
pusha
test
and
gs
scas
jge
push
mov
fstp
mov
dec
fwait
in
fdiv
push
inc
inc
sbb
int3
push
fsubr
retf
dec
(bad)
jecxz
inc
sti
mov
mov
xor
(bad)
cld
imul
and
fidivr
mov
imul
mov
dec
sub
cmp
cdq
pop
push
retf
lods
aaa
add
ror
stc
push
icebp
aad
loopne
cmp
je
adc
sahf
lds
push
aad
ins
add
add
mov
ins
mov
fisub
dec
xor
test
mov
ins
cdq
daa
sar
cmp
aaa
(bad)
jo
xchg
jp
jb
xchg
pop
sub
sbb
push
mov
(bad)
mov
dec
mov
popa
add
xor
jns
push
mov
mov
mov
jmp
imul
repnz
gs
mov
or
ins
std
pop
sti
sti
out
sub
addr16
inc
push
xor
and
push
sbb
test
leave
sbb
inc
push
mov
add
dec
sub
or
cmp
push
out
out
xchg
daa
xchg
icebp
aad
xchg
call
jecxz
mov
js
lods
inc
pop
cmp
mov
ja
jmp
push
out
aaa
and
lods
xchg
inc
(bad)
pop
movs
mov
in
enter
inc
and
xchg
dec
mov
out
in
(bad)
shl
(bad)
icebp
pop
imul
repnz
cmp
pop
fwait
pop
inc
and
cdq
push
add
xchg
cmp
inc
jb
test
or
fdivp
jae
int
loop
adc
mov
pop
cmp
pop
shl
leave
pop
and
dec
fwait
mov
xchg
mov
rcl
adc
push
jg
mov
mov
adc
add
add
pop
leave
imul
xchg
add
add
or
xor
or
inc
es
pop
adc
addr16
push
ins
movs
jle
mov
call
repnz
ja
hlt
sub
mov
xchg
jb
adc
xor
push
sbb
xchg
sti
pop
call
inc
jmp
pop
xchg
and
mov
icebp
sbb
xor
cmp
pushf
into
jbe
push
jbe
scas
loop
cli
neg
inc
out
cmps
or
xor
or
mov
cmp
dec
int
xor
dec
fistp
xor
(bad)
xor
mov
mov
aad
inc
dec
pop
and
mov
mov
mov
scas
in
xor
lods
add
cdq
data16
mov
repz
dec
adc
stos
adc
push
or
dec
adc
pop
pop
lock
inc
xchg
push
mov
pop
inc
pop
repnz
mov
loop
(bad)
cmp
loopne
or
lds
das
(bad)
shr
or
pop
ret
daa
(bad)
dec
je
mov
sub
or
pop
sub
inc
sub
mov
push
out
inc
es
(bad)
push
lock
cs
pop
test
sbb
sbb
mov
pop
lea
pcmpeqw
adc
addr16
mov
and
call
(bad)
xor
out
sti
es
rol
out
adc
jb
ds
mov
jge
mov
inc
cs
aaa
das
rol
fstp
mov
cmp
xchg
cmp
test
in
pusha
xchg
lds
lods
mov
aaa
jns
cli
cmps
add
popf
rcl
mov
imul
pop
or
inc
es
sar
xor
mov
not
(bad)
jbe
fst
pop
out
or
mov
je
mov
mov
into
jne
aas
xchg
js
out
int
mov
imul
pop
mov
pusha
fs
jmp
into
das
inc
mov
jmp
and
pop
cmc
ins
fild
jge
popf
sbb
and
sbb
xchg
push
xchg
scas
xchg
pop
int3
pusha
xor
jb
mov
add
add
lock
mov
cmp
add
jbe
or
xor
shl
pop
push
mov
cdq
aas
and
push
sub
cmps
out
cmc
xchg
enter
pop
pop
stos
add
rcr
arpl
and
test
dec
mov
pop
adc
or
mov
(bad)
sbb
xor
xacquire
dec
jecxz
xor
enter
(bad)
jecxz
jb
pop
ss
xor
fcmovbe
jnp
adc
pop
js
and
arpl
mov
adc
fst
sahf
cmc
or
cs
push
stc
stos
adc
inc
cmp
lahf
inc
dec
mov
sub
sub
sub
sti
in
in
mov
test
stos
pop
xchg
and
jp
jbe
or
mov
in
mov
cmps
mov
xchg
pop
mov
movs
adc
mov
sbb
and
push
outs
mov
pop
sar
pushf
into
pop
xchg
push
jnp
ror
movs
int
fisubr
jae
fmul
stos
xchg
xor
pop
ds
sbb
jmp
inc
bound
in
xor
nop
or
pop
cmps
and
(bad)
pop
jg
mov
into
ret
lods
lods
mov
popa
push
jl
xor
cmps
sbb
sub
ds
cmp
dec
ja
adc
dec
out
dec
inc
mov
push
inc
outs
pop
dec
push
xchg
loopne
pop
jp
xor
fst
push
(bad)
std
mov
jmp
cmps
es
dec
lods
sbb
cli
dec
daa
and
daa
pop
ret
ret
aad
je
fst
rcl
scas
out
push
pop
add
and
and
(bad)
mov
add
and
sar
data16
or
div
mov
loop
std
mov
push
mov
scas
cwde
out
repz
loope
jg
mov
ret
xchg
fild
cmp
cmp
test
inc
movs
imul
addr16
push
(bad)
ficomp
jne
ret
mov
adc
sbb
cmp
push
push
sbb
js
scas
mov
mov
leave
call
pop
stos
and
cmp
sete
add
pushf
retf
shl
dec
pop
lea
stos
and
int
dec
push
mov
jns
cmps
lock
push
inc
sub
inc
ror
xor
jecxz
aas
leave
cmp
xchg
cmps
jge
mov
inc
iret
xchg
cwde
inc
ror
loopne
mov
sub
jg
addr16
push
data16
(bad)
imul
push
jb
sar
jns
xchg
cmp
push
inc
sub
shr
in
and
dec
mov
(bad)
mov
or
push
bound
sub
xchg
in
pusha
loope
clc
das
xchg
rcr
loop
sub
cmp
rcl
ds
in
push
pop
dec
cld
test
sar
and
loop
popa
fdecstp
or
jne
xor
inc
push
lods
fldcw
pop
cs
adc
jns
jae
add
repz
scas
in
sub
push
pop
lds
call
in
jbe
push
leave
jmp
dec
pop
push
pop
dec
mov
push
adc
sbb
popf
push
xor
ja
pop
ja
shl
or
in
ja
xor
dec
pop
(bad)
cmps
arpl
bound
add
fidiv
push
outs
dec
pop
pop
xchg
xor
mov
sbb
jecxz
(bad)
xchg
sbb
sub
xchg
push
aaa
scas
adc
mov
mov
ja
jg
add
pop
add
popa
push
cmps
add
ret
cmps
out
cmp
sar
nop
outs
fwait
cmp
out
pop
fisttp
push
std
(bad)
icebp
ret
adc
push
icebp
out
add
cdq
mov
jg
lahf
bound
por
retf
shr
pop
xor
sar
mov
mov
sub
sub
out
stc
in
cmp
(bad)
in
icebp
push
repnz
mov
pop
jnp
xor
fcomp
movs
ja
and
mov
imul
lods
out
cmp
sbb
je
dec
jmp
push
dec
adc
mov
adc
adc
les
(bad)
jmp
sbb
dec
dec
rep
loope
and
pop
fchs
not
push
push
mov
fist
mov
sub
or
(bad)
int3
push
div
stos
pop
test
pop
sub
push
adc
rcl
movs
pop
cmp
ror
inc
cmp
dec
fistp
add
pop
mov
inc
xor
inc
in
pop
rol
enter
out
nop
test
mov
gs
push
cmp
mov
ret
fimul
idiv
stos
(bad)
xchg
mov
add
call
ficom
cwde
xor
adc
stos
test
sub
sbb
jmp
sahf
jae
mov
xchg
ja
imul
fsub
jbe
sti
repnz
push
idiv
xor
inc
xlat
test
xor
test
mov
mov
fild
dec
mov
jb
cmp
jge
mov
movs
sbb
xchg
jae
jl
loopne
adc
mov
in
push
sub
inc
nop
(bad)
adc
inc
fisubr
stc
mov
xchg
sahf
fdivp
pushf
imul
retf
int
data16
sti
sahf
hlt
mov
push
retf
fdivrp
pushf
(bad)
xchg
sbb
xor
sbb
or
sahf
hlt
cmp
stos
fld
out
or
or
ffree
js
lahf
test
mov
add
jle
(bad)
jbe
imul
inc
mov
push
scas
mov
cmp
ret
xor
cld
and
(bad)
test
(bad)
movs
clc
jmp
fwait
inc
loop
mov
mul
add
rcr
push
ja
pop
popa
rcl
push
sub
mov
stc
popf
call
or
lods
xchg
lods
loope
cmp
adc
in
pusha
in
inc
jns
dec
and
outs
inc
shr
jg
push
inc
push
imul
fisubr
mov
adc
inc
aad
add
daa
add
idiv
lahf
xor
rol
xor
add
mov
jb
pushf
fiadd
out
cwde
shr
js
dec
inc
ins
test
xchg
sahf
je
inc
lock
jns
jno
pop
xchg
mov
or
push
push
mov
mov
pop
dec
sbb
fdiv
push
inc
or
mov
(bad)
lods
mul
scas
xchg
mov
jecxz
shl
xor
out
xchg
mov
bound
or
mov
pop
enter
or
dec
stc
mov
cmp
mov
lods
out
inc
add
in
ret
ins
push
shl
fwait
pop
sbb
pop
jmp
pop
das
jnp
(bad)
inc
sbb
add
div
popf
cld
rol
cmp
jecxz
test
imul
(bad)
cmp
and
adc
and
push
jmp
xchg
push
(bad)
pusha
retf
xor
ins
cld
dec
scas
repz
dec
and
push
(bad)
mov
or
add
outs
inc
lea
mov
arpl
lock
push
ret
jp
lahf
push
sub
fdivr
adc
jp
sbb
inc
push
jae
xchg
cld
hlt
jmp
xor
mov
es
and
repz
jo
push
fs
push
pushf
(bad)
scas
push
mov
das
and
xchg
sub
jb
daa
(bad)
enter
or
repz
test
stos
add
icebp
mov
sbb
xlat
xchg
xor
in
call
fsubr
std
rcl
sbb
test
or
or
(bad)
std
outs
fcmove
push
gs
adc
xlat
fsub
sbb
bound
rcr
(bad)
out
dec
syscall
iret
add
mov
test
repz
sbb
sbb
sbb
mov
aas
pushf
nop
xor
mov
mov
shr
xchg
enter
daa
sub
cmps
xor
popf
lock
out
ret
imul
or
bound
repz
xor
stc
sar
push
adc
sub
pop
call
inc
inc
test
cmp
pop
popf
mov
loope
mov
pop
aas
push
adc
popa
ret
shl
jnp
push
in
sub
cmp
imul
xor
sahf
cmp
enter
stos
ret
xor
dec
fadd
xlat
xchg
mov
adc
nop
(bad)
arpl
xlat
scas
dec
stos
lods
sub
add
and
push
fld
mov
cmp
mov
mov
or
mov
add
rcr
jmp
ret
pop
dec
enter
xchg
jmp
mov
xor
stos
aad
call
(bad)
cmps
movs
sbb
xchg
sbb
fwait
in
in
pop
popa
xor
sub
stos
mov
cmp
popa
cdq
cmc
inc
movs
dec
fs
mov
out
and
sub
mov
xchg
aas
fiadd
ret
xchg
lahf
ds
sub
ss
dec
aas
ficomp
out
push
jb
and
jns
dec
fldenv
in
in
mov
loope
and
cli
mul
mov
imul
mov
sbb
or
int
rcl
cs
sbb
mov
sbb
nop
imul
and
loopne
aam
mov
mov
jb
ins
xor
(bad)
push
es
lods
call
mov
daa
bound
xor
daa
mov
cmps
mov
test
xchg
pop
sub
jmp
mov
cli
xchg
jae
push
xchg
call
jmp
inc
pop
dec
inc
mov
das
and
add
movs
cmp
retf
or
in
div
jb
iret
jnp
sub
xor
imul
mov
scas
add
call
das
fcmovnbe
jle
stc
shl
mov
sbb
push
lahf
inc
cmp
cmp
cmps
sub
sbb
xchg
dec
and
adc
pop
jae
mov
fld
shl
fwait
jg
push
loopne
es
aas
adc
and
add
mov
retf
dec
fisttp
sar
stc
cmp
sbb
add
stos
je
add
cmc
nop
inc
push
pop
xchg
sub
das
les
fcom
xchg
xchg
aam
ror
pop
xor
gs
icebp
loopne
cli
popf
movs
arpl
jp
movs
add
and
inc
jecxz
rcl
sahf
ins
mov
fdivrp
dec
clc
pop
xchg
imul
sbb
cdq
xor
(bad)
pop
mov
(bad)
push
adc
fisubr
hlt
adc
pop
mov
adc
or
dec
movs
sar
fldenv
add
mov
mov
sar
adc
mov
les
arpl
add
fisub
cmps
mov
hlt
add
nop
cli
(bad)
call
leavew
pop
xchg
mov
into
xchg
in
push
inc
and
jl
xlat
out
adc
fild
cmc
ins
outs
cmp
cs
js
jle
enter
cmp
adc
mov
repnz
call
push
and
aad
out
inc
add
push
test
ret
jne
pop
jmp
push
xor
lds
dec
outs
stos
inc
(bad)
cmps
shl
push
mov
enter
movs
mov
pop
fwait
inc
inc
xor
inc
sbb
cmp
(bad)
shl
inc
fld
cdq
cmc
addr16
call
test
xchg
mov
cs
fsubp
stos
pop
cmc
xlat
fsubrp
ret
xchg
xlat
out
cmp
ds
pop
jmp
nop
(bad)
pop
imul
jmp
addr16
(bad)
aad
mov
(bad)
nop
or
ror
mov
mov
(bad)
arpl
aam
jle
dec
sub
xor
jl
cmp
(bad)
es
mov
mov
push
and
adc
add
inc
push
out
(bad)
and
fnstsw
cmps
mov
add
(bad)
clc
dec
ss
cmc
and
ficomp
or
clc
jl
or
aad
je
(bad)
addr16
repnz
pop
jbe
dec
imul
loope
ja
and
mov
in
arpl
push
jmp
retf
xchg
adc
cmp
das
mov
lods
in
inc
fwait
jbe
xchg
mov
and
pop
cld
dec
mov
push
int
out
xchg
dec
and
jno
mul
mov
jnp
retf
cmps
les
rol
mov
xchg
mov
outs
scas
sbb
in
inc
repz
cmps
dec
out
and
clc
fild
dec
sbb
lods
in
mov
shl
mov
push
outs
sub
xor
out
jmp
jbe
out
xchg
add
jg
mov
stc
imul
add
push
out
and
jbe
xadd
ror
add
sbb
fsub
ffree
mov
jo
scas
fisub
enter
xor
retf
pop
cs
cmp
inc
lock
mov
sub
cwde
mov
repnz
add
icebp
inc
jmp
mov
scas
ss
sbb
ss
or
add
and
jmp
std
(bad)
mov
inc
xor
jmp
das
fs
sbb
sub
les
(bad)
stos
mov
push
add
push
mov
jg
xchg
les
and
mov
xchg
cwde
mov
cmp
dec
test
and
and
xchg
outs
imul
adc
xchg
xor
stc
mov
sar
mov
sbb
test
loop
add
mov
mov
push
fisttp
fldenv
adc
jb
in
ds
scas
ret
out
push
ja
jnp
cli
or
shl
xchg
push
add
push
das
jle
mov
add
jmp
mov
or
pop
add
push
sub
(bad)
cmps
hlt
mov
cwde
lds
mov
dec
xchg
dec
mul
dec
outs
jecxz
fdiv
not
mov
pop
pushf
add
xchg
push
shr
dec
sub
in
push
jns
mov
int3
inc
dec
ret
inc
sbb
or
arpl
movs
cli
lods
adc
enter
jecxz
loopne
rcr
adc
ja
out
lds
push
inc
std
and
ltr
inc
imul
and
sbb
sbb
mov
sar
cmp
xchg
inc
out
(bad)
icebp
mov
jb
pop
mov
and
ja
add
jmp
cmps
ret
cmp
push
ins
out
xlat
and
nop
stos
popf
(bad)
xor
inc
cmp
neg
push
mov
add
scas
xor
xchg
ins
xchg
or
popa
add
xor
xlat
leave
movs
ins
jmp
jmp
pop
movs
jb
mov
adc
jbe
js
in
fs
bound
popa
sbb
mov
pusha
mov
or
xchg
jmp
xor
inc
lea
nop
cmps
sbb
ret
leave
pop
and
inc
icebp
bound
and
cwde
out
fldcw
and
xor
pusha
inc
and
cli
imul
aas
retf
(bad)
and
xchg
rol
push
mov
cmp
pop
cs
repnz
sub
push
sub
outs
xchg
cwde
lds
je
fidivr
jmp
adc
std
push
dec
xchg
dec
xchg
aad
leave
stos
out
loopne
ror
mov
mov
shl
jmp
push
ins
mov
mov
sbb
cmp
icebp
pusha
adc
add
jno
jo
dec
js
repz
sub
hlt
jmp
mov
ss
sub
push
xor
and
fcmovne
mov
sbb
(bad)
nop
test
pop
mov
cmp
xchg
sbb
(bad)
es
push
xchg
cmp
fcmovnb
out
lahf
cli
cmps
sahf
xchg
mov
xor
pop
or
mov
js
sub
hlt
test
mov
inc
inc
das
fbstp
fcomp
retf
(bad)
retf
and
mov
fistp
cmps
or
push
push
push
xchg
int3
xchg
xlat
mov
mov
(bad)
jge
pop
aaa
sbb
int
cld
pop
test
imul
push
add
fst
stc
sbb
dec
dec
adc
stc
in
push
out
ins
das
sti
sbb
dec
mov
mov
ins
lds
hlt
mov
es
(bad)
mov
xchg
es
cmc
push
fstp
jle
pop
mov
and
sub
out
xchg
push
inc
imul
mov
mov
and
pop
imul
inc
mov
add
jmp
mov
dec
loope
and
or
dec
xor
out
ss
std
mov
mov
ror
out
aam
das
std
push
pushf
stos
jmp
fs
movs
dec
push
scas
mov
xchg
fdiv
arpl
ror
pop
jb
cmp
sbb
jne
dec
mov
inc
sbb
and
cmps
pop
mov
jg
fs
loop
retf
mov
push
push
mov
and
movs
ret
arpl
daa
mov
gs
(bad)
call
out
mov
xchg
push
mov
or
inc
sub
fst
adc
pop
rcr
push
out
mov
push
rcr
cmp
pop
sub
or
push
mov
mov
pop
xor
fsubr
jmp
leave
mov
mov
fstp
les
add
adc
les
push
test
cmc
in
inc
jl
leave
mov
dec
pop
(bad)
cmc
xchg
in
bound
ret
cmp
(bad)
or
xor
repz
sbb
dec
repnz
imul
push
mov
outs
fwait
mov
(bad)
cdq
dec
mov
jmp
sub
add
add
test
fcom
or
mov
ror
rcr
mov
push
(bad)
stc
es
enter
mov
push
test
fs
cdq
pop
jge
xchg
xchg
loop
nop
cmp
mov
fcmove
mov
adc
(bad)
sar
sbb
mov
or
cmc
popa
enter
test
scas
out
cmp
push
adc
lds
adc
loope
aaa
in
mov
xchg
test
inc
cdq
js
sub
mov
cmps
(bad)
push
cmc
jbe
cmps
mov
inc
mov
xchg
dec
push
outs
popf
in
xchg
jp
jno
mov
nop
xor
fnsave
cmp
cmp
jge
sbb
fsubr
(bad)
jmp
push
pop
mov
cmp
and
cmc
dec
data16
loop
repnz
(bad)
mov
pop
push
pop
je
fs
les
lods
mov
stc
lods
inc
fs
cmp
dec
clc
sub
retf
cmp
rol
inc
pop
xor
addr16
inc
mov
(bad)
mov
imul
out
(bad)
cmps
fs
sbb
and
push
cmp
mov
adc
jecxz
jecxz
test
mov
push
mov
mov
inc
cmp
xlat
or
rol
movs
out
pop
pop
(bad)
mov
psubd
retf
sbb
xlat
or
push
cmp
aas
inc
sub
cdq
cmp
xor
imul
push
or
std
div
lea
and
lock
inc
loope
outs
call
lahf
ins
mov
enter
cs
inc
ret
xchg
cmp
jnp
mov
nop
or
cdq
test
mov
and
mov
xor
jo
div
imul
lods
adc
push
call
and
cmp
add
mov
shl
ja
stc
ror
loopne
ret
mov
inc
dec
add
loop
add
lods
push
icebp
fdivr
arpl
or
xchg
and
dec
or
icebp
js
push
cmp
xchg
into
jbe
mov
pop
mov
sbb
mov
or
bound
xchg
(bad)
mov
push
mov
gs
cli
pop
mov
xor
push
mov
sub
or
jno
stos
sbb
ret
inc
add
jecxz
es
xor
xor
js
ret
sbb
sub
push
cmp
pop
cmp
and
xor
std
mov
mov
or
outs
hlt
sbb
retf
lock
jl
mov
and
adc
cmc
sbb
or
test
cld
and
mov
loop
ret
jle
(bad)
scas
imul
jecxz
(bad)
test
imul
nop
addr16
loop
stc
pop
dec
and
adc
adc
out
and
data16
fxch
and
repnz
mov
jnp
sbb
arpl
push
cmc
inc
sti
sar
push
add
jne
pop
lock
pop
mov
fidiv
xchg
ja
add
and
mov
shl
xor
cwde
mov
cmp
or
and
jo
sti
push
cmc
inc
test
and
in
outs
pop
repz
or
(bad)
leave
(bad)
xchg
push
sub
aas
int3
test
in
ficomp
jae
ret
jmp
popa
popa
xor
repz
call
scas
xchg
fs
mov
sbb
mov
dec
pop
xchg
push
push
cmps
dec
fbstp
mov
push
enter
sbb
adc
ds
gs
and
or
or
cwde
or
dec
repz
aaa
mov
push
mov
cmc
pop
add
sub
fs
ret
test
push
mov
adc
push
mov
cmps
adc
cmp
or
mov
cmps
arpl
and
xor
sub
inc
add
fsub
in
(bad)
out
movs
pop
ret
adc
out
pop
bound
add
push
cld
mov
mov
sar
test
out
mov
or
sub
gs
fiadd
leave
jne
test
mov
mov
sub
jle
adc
inc
ds
jmp
loopne
shl
jb
icebp
mov
pushf
cmp
push
xchg
jae
push
in
(bad)
popa
cmp
pop
(bad)
lock
cmp
push
ret
ficom
pusha
es
mov
out
mov
popf
add
jb
pop
rol
add
jns
or
jle
retf
lods
add
hlt
cmp
imul
push
jae
xor
push
mov
call
cdq
inc
aaa
(bad)
fdiv
dec
je
daa
jnp
adc
(bad)
mov
fcomp
(bad)
scas
dec
mov
popa
call
mov
ret
hlt
into
add
sbb
dec
out
addr16
push
xor
and
leave
sub
pop
xchg
pop
sub
sub
add
mov
mov
scas
int
int
and
add
bswap
call
add
sbb
lahf
clc
sbb
jnp
or
fdiv
(bad)
lahf
sbb
push
mov
test
and
stc
xor
popf
fisttp
in
inc
mov
jae
int3
scas
jnp
dec
out
fidivr
retf
sub
cmp
rol
rol
das
mov
or
add
inc
jo
mov
sub
out
in
jmp
leave
sub
dec
or
push
in
cli
sbb
loope
jno
fwait
sub
or
nop
gs
mov
ret
pop
adc
addr16
movd
pushf
dec
mov
cmp
das
aad
cmps
les
add
jp
mov
inc
sahf
cmp
jg
mov
std
out
enter
cwde
iret
scas
pusha
and
inc
pop
mov
pop
addr16
mov
movs
dec
jmp
jbe
std
loope
ds
mov
dec
(bad)
dec
adc
ret
fld
inc
ret
out
mov
jns
into
mov
mov
pop
dec
lahf
cmp
dec
dec
xchg
movs
(bad)
mov
dec
mov
(bad)
loop
pop
outs
xchg
dec
and
je
das
sahf
in
enter
mov
aad
mov
fistp
jle
in
sbb
or
mov
jl
jno
pushf
pop
add
out
mov
aaa
aam
lock
ins
test
jb
enter
or
ds
retf
push
sub
or
jl
stos
xchg
mov
or
fstp
scas
jmp
pop
outs
nop
cmps
scas
lds
fdivr
push
push
mov
sbb
sub
in
test
adc
push
lods
pushf
dec
and
xchg
repz
bound
xor
repnz
push
repnz
adc
xchg
adc
mov
mov
imul
leave
mov
pop
mov
inc
rol
dec
jle
jbe
dec
add
sub
dec
retf
cld
inc
add
js
mov
push
outs
fwait
add
fbld
fsub
push
loopne
cdq
jmp
adc
inc
loop
std
pop
inc
inc
mov
in
mov
popa
dec
leave
into
dec
jbe
int3
and
test
imul
pop
xchg
dec
mov
jecxz
stc
stos
ja
out
mov
mov
push
popf
rcr
push
push
jecxz
into
adc
fisubr
cmps
jbe
push
(bad)
(bad)
test
rcr
into
dec
or
sbb
xor
arpl
sub
pop
stc
std
retf
fwait
or
movs
push
cli
(bad)
lea
sbb
lds
mov
test
pop
or
repnz
mov
stos
adc
loope
popf
jge
push
(bad)
aad
cmps
mov
movs
pop
adc
loop
movs
inc
xchg
mov
cmp
out
inc
pop
retf
cmps
jle
int3
and
(bad)
jg
into
fwait
push
xlat
jne
dec
je
mov
jns
push
test
push
dec
test
push
std
pop
fs
xchg
adc
shl
nop
je
xchg
loop
mov
or
retf
(bad)
retf
inc
pushf
and
pushf
les
inc
add
inc
pop
adc
ret
out
pop
jae
data16
jne
shl
mov
and
adc
test
out
imul
(bad)
cmps
movs
out
fisttp
out
gs
xor
es
or
adc
sbb
mov
bound
sub
or
test
add
mov
cmp
cmp
test
es
test
fnsave
xchg
(bad)
aad
fild
(bad)
out
shr
sahf
mov
daa
sbb
ins
jmp
lock
fxch
mov
dec
ret
in
jo
xchg
fwait
inc
adc
adc
jnp
mov
aam
jp
mov
cdq
cmp
and
add
out
push
rol
ja
or
inc
add
jb
sbb
or
or
jmp
mov
mov
out
out
mov
mov
in
pushf
cmp
mov
jnp
ret
adc
xor
mov
mov
out
loop
fcom
lea
loope
cli
hlt
dec
arpl
mov
xchg
inc
ffree
cld
(bad)
mov
cmc
inc
xor
shr
dec
shl
addr16
jp
adc
jo
push
pop
sbb
dec
or
mov
mov
call
sbb
push
xor
sub
add
xchg
rcr
mov
out
mov
rol
xchg
push
inc
or
inc
push
pop
mul
repz
xor
inc
cs
push
push
xor
movs
jno
mov
cmps
and
sub
jmp
sub
jo
push
ss
rcr
push
loope
add
mov
enter
pop
cld
mov
push
jge
xchg
push
int
pop
cmps
adc
sbb
test
loope
and
sub
add
xchg
outs
mov
adc
mov
jnp
push
mov
and
rcl
jge
in
aad
and
jno
inc
sub
xchg
sbb
xchg
mov
mov
scas
jmp
pop
sar
xchg
movs
retf
mov
in
xchg
or
mov
add
or
js
out
mov
adc
div
mov
movs
fwait
mov
popf
movs
(bad)
rcl
fld
jl
mov
inc
imul
pop
mov
enter
add
sbb
lea
dec
cmp
les
cmp
mov
sub
jns
cmp
fcomp
and
jb
push
int3
sub
mov
test
aad
cmp
add
daa
or
gs
inc
pop
fnstcw
dec
mov
cmp
(bad)
mov
jmp
arpl
mov
pop
or
das
das
fxch
xor
pop
pusha
sar
lods
js
call
mov
out
dec
push
xor
sbb
(bad)
mov
(bad)
push
out
xchg
test
in
(bad)
xor
and
mov
push
mov
mov
or
scas
sbb
retf
lock
adc
pop
sahf
or
jno
dec
mov
repnz
or
cmps
dec
mov
or
xor
sar
jbe
push
xor
addr16
adc
and
and
mov
movs
add
lods
mov
pop
xchg
out
pop
or
inc
or
out
and
fldcw
dec
push
not
cmps
mov
xchg
in
push
pop
sar
arpl
pop
retf
lds
cmp
adc
lea
cdq
pop
mov
cmp
push
stos
idiv
stc
mov
aad
add
xchg
jge
in
mov
das
popf
mov
sub
inc
push
call
dec
push
cmp
int3
cmp
xor
inc
ds
cmp
hlt
daa
(bad)
mov
push
inc
mov
outs
and
imul
inc
jecxz
les
pop
sbb
jl
test
add
dec
sub
xor
mov
test
cli
pop
mov
pop
cmp
ret
xchg
mov
cmps
test
ret
sub
mov
dec
jnp
ret
mov
(bad)
stos
add
dec
push
xchg
retf
xchg
dec
addr16
call
(bad)
cmp
cmp
xor
sbb
pop
xor
cld
div
and
scas
pop
les
dec
jne
inc
test
cwde
mov
push
jbe
cmp
ds
sbb
sub
sub
push
or
aad
sti
fnstenv
out
add
sbb
imul
mov
daa
or
xor
mov
lods
cmp
and
push
mov
frstor
sub
xchg
and
jmp
add
xchg
xchg
xchg
pop
sub
add
je
mov
aas
fcom
cmp
cmp
cwde
leave
fisub
mov
data16
cmp
cwde
dec
push
in
xlat
xor
adc
pop
rcl
xchg
enter
scas
ja
aam
cmc
mov
pop
lods
mov
mov
hlt
ja
clc
push
movs
loope
jecxz
sub
test
pushf
mov
(bad)
jmp
jnp
das
push
(bad)
mov
mov
imul
cmp
and
aad
iret
int
push
cmp
pop
out
sbb
sub
mov
sub
and
xchg
out
movs
cdq
shl
into
xchg
mov
sahf
xor
pop
add
pushf
push
in
es
inc
fidivr
cmp
xor
or
cmp
fstp
dec
stos
pop
lahf
pop
sbb
(bad)
mov
pusha
call
pop
je
icebp
mul
xchg
(bad)
call
(bad)
je
push
(bad)
cs
and
pop
lods
mov
or
(bad)
cs
push
in
call
jecxz
je
pop
loop
sbb
pop
mov
fmul
mov
or
jecxz
xchg
inc
fwait
sub
dec
mov
xchg
mov
sahf
pusha
lods
dec
shr
push
sbb
dec
aaa
xor
loope
mov
ret
test
repnz
and
add
sbb
and
js
cmps
imul
adc
pop
arpl
sbb
cld
and
mov
aad
inc
test
pop
and
in
sub
mov
mov
ror
jb
retf
xchg
fist
mov
mov
cmp
sbb
xor
pop
jbe
push
bound
jle
pop
pop
scas
adc
in
in
mov
mov
xor
xchg
push
jmp
or
inc
inc
cli
in
mov
dec
(bad)
clc
jbe
stc
mov
jmp
inc
pop
fbstp
ffreep
cmps
push
and
fbld
jb
add
push
pop
movs
and
cmp
fistp
push
lea
xchg
daa
gs
adc
dec
add
sub
xchg
es
dec
mov
hlt
and
nop
xor
dec
cs
mov
jno
jmp
push
xor
inc
mov
or
nop
test
dec
push
ss
xchg
in
shl
adc
fcomp
je
aam
scas
dec
bound
lea
out
aad
jb
add
push
add
push
stos
fsubp
xor
stc
repnz
push
std
push
pop
cmc
ret
pop
cmp
fisub
gs
mov
in
xchg
lods
push
sbb
mov
test
aad
mov
ja
ret
leave
sub
jns
dec
push
adc
xor
add
jecxz
inc
xor
cmc
retf
enter
adc
aad
jno
js
gs
mov
popa
retf
inc
repnz
mov
xchg
outs
aas
push
inc
cmp
daa
popf
shr
outs
arpl
ret
rcr
int3
fistp
fmul
fstp
je
ins
stos
ret
jne
lods
std
div
stos
lds
pop
aaa
jl
ins
int3
(bad)
ds
pusha
push
jns
sti
xchg
aaa
and
push
das
lods
push
xchg
xchg
std
outs
adc
sub
mov
fidivr
jl
add
(bad)
inc
or
in
pop
jg
mov
and
es
or
mov
fadd
fld
push
pop
lea
cld
adc
xchg
fld
adc
inc
arpl
inc
fdivr
cdq
adc
pop
mov
sbb
cmp
cmp
movs
mov
xchg
and
add
mov
ja
cmp
push
jmp
jb
int
shl
out
daa
or
cmp
or
frstor
clc
mov
sub
fwait
nop
dec
lahf
xor
stc
imul
inc
bound
movs
cmp
mov
ret
ins
lea
adc
pop
push
add
pop
das
push
jl
adc
les
xchg
or
ins
aam
jp
call
mov
movs
(bad)
mov
in
fcmovb
cs
mov
mov
push
add
push
retf
cmp
das
adc
ss
pop
or
mov
add
adc
jl
arpl
(bad)
dec
nop
inc
or
je
inc
sahf
sub
out
aad
outs
outs
outs
sub
call
inc
pop
and
ja
mov
and
mov
inc
or
sbb
daa
jg
or
rcr
inc
pop
cs
cwde
aam
pop
inc
add
scas
sub
js
sbb
movs
mov
jge
ins
ss
xor
sub
mov
mov
xor
cmp
lock
xor
xor
and
cmp
shr
sub
inc
arpl
lock
call
(bad)
sahf
adc
jb
cmp
mov
push
sbb
jp
repnz
xor
push
inc
push
outs
dec
mov
xor
mov
mov
jmp
jp
mov
mov
dec
jo
sub
cli
call
(bad)
mov
movs
mov
xor
push
sub
sub
popf
cmp
xadd
jns
pop
mov
pop
(bad)
test
rcl
lods
jne
lahf
in
adc
(bad)
cmp
(bad)
out
sbb
das
mov
or
dec
aas
sbb
repnz
mov
mov
or
jns
lahf
jecxz
cmc
xchg
or
xor
scas
adc
xchg
dec
or
test
or
mov
cmp
cld
mov
shl
pop
push
imul
adc
popf
jl
popa
arpl
pop
aaa
cmp
ss
imul
jb
hlt
call
fmulp
cmp
dec
mov
rcr
sbb
inc
(bad)
and
rcl
xchg
push
nop
cmp
scas
xor
sbb
mov
jmp
stos
push
loopne
es
(bad)
cmc
pusha
sbb
adc
sub
sub
stc
dec
jl
out
dec
pop
in
inc
or
add
xchg
arpl
call
in
sbb
lods
pop
mov
test
sub
xor
push
shl
lds
push
jp
cli
addr16
cmps
push
imul
adc
adc
mov
daa
out
pop
jne
aaa
and
cmp
mov
mov
cmp
xor
repnz
js
ds
adc
adc
lods
dec
ror
xchg
shr
fimul
adc
cmp
sti
add
lods
mov
push
fstp
hlt
fdiv
add
ret
mov
repnz
mov
not
adc
pop
hlt
mov
jecxz
lock
jp
push
jmp
push
inc
jl
cmp
int3
aas
std
stos
pop
mov
push
xchg
fdivr
test
lea
call
lods
mov
cmp
pop
push
push
(bad)
fdiv
sub
sbb
(bad)
adc
adc
add
dec
or
mov
dec
rcl
cld
add
xchg
shl
into
lock
xor
jg
xor
stos
inc
lock
aad
and
mov
lahf
jmp
retf
xchg
dec
mov
(bad)
xlat
aad
adc
js
in
cmps
sub
imul
mov
aaa
pushf
cwde
push
jp
stc
outs
out
dec
repnz
cmp
es
xchg
ss
scas
loope
and
not
call
push
lds
outs
adc
push
xchg
cmp
ror
jl
inc
stos
call
aam
jnp
fadd
dec
add
cmp
xchg
jle
xchg
mov
pop
ins
fwait
retfw
test
and
sbb
jg
out
push
cmp
cwde
movs
cmps
test
mov
jecxz
pop
gs
daa
push
nop
ins
jl
movs
movs
adc
int
ret
sbb
dec
pusha
sbb
xchg
mov
cld
stos
int
outs
push
retf
nop
inc
or
add
pop
pop
into
popa
ja
adc
add
sbb
cmp
mov
jmp
ins
xor
sub
aad
test
push
cwde
adc
(bad)
aaa
mov
xlat
mov
repnz
xchg
(bad)
cmp
aad
adc
pop
pop
in
push
popf
out
mov
imul
movs
repz
dec
add
push
test
mov
adc
xor
cmp
(bad)
xlat
out
movs
add
ss
lahf
aaa
retf
pusha
jns
sub
fnstcw
in
xor
xor
arpl
mov
lock
or
std
lods
jnp
es
repnz
iret
inc
sar
sahf
add
in
cmp
sahf
xchg
pop
push
scas
cmps
pop
ds
or
dec
or
xor
cmc
mov
je
loope
dec
scas
arpl
dec
push
fidiv
sub
scas
(bad)
xchg
dec
popa
pop
xchg
add
sbb
shr
xchg
pop
cmp
add
jl
fldcw
cld
daa
ffreep
xor
jb
loope
es
push
and
xor
mov
popa
je
aaa
inc
adc
and
inc
nop
test
mov
cmps
and
add
add
repz
cmp
scas
hlt
je
sti
ret
inc
push
shl
and
adc
lahf
jmp
adc
jg
enter
jp
xchg
fwait
cmp
pushf
push
lods
daa
push
outs
adc
push
gs
popa
ror
cdq
sub
out
mov
loop
or
xor
adc
add
stos
inc
lea
and
pop
fld
stos
ins
or
or
iret
mov
pop
xchg
loopne
pop
imul
aad
aas
sbb
scas
mov
cmp
ins
mov
add
dec
jae
sahf
or
mov
shl
int3
or
pop
iret
xor
xchg
jmp
sbb
popf
(bad)
pop
(bad)
sbb
in
sbb
(bad)
jae
cmp
cld
mov
mov
inc
cdq
aad
inc
push
outs
rcl
sar
dec
cs
mov
jnp
xor
jp
dec
imul
adc
mov
sbb
mov
sub
cmps
out
push
(bad)
and
mov
cs
mov
inc
sbb
mov
loopne
xchg
cmps
pop
inc
cmps
mov
mov
cs
jns
lock
outs
xchg
sub
sbb
jl
cdq
vmread
aas
stos
xor
jecxz
push
add
pop
add
mov
push
sbb
dec
and
xchg
mov
mov
fisubr
ins
inc
call
sti
mov
sti
sub
imul
mov
or
pop
pusha
(bad)
sbb
and
dec
and
dec
(bad)
outs
pushf
mov
enter
icebp
sbb
mul
dec
jp
jp
dec
pop
out
sar
jle
xchg
pop
mov
xor
cwde
mov
add
pop
repz
ficomp
mov
ins
adc
push
mov
lahf
push
mov
adc
cmps
xchg
cmp
mov
cmps
mov
movs
or
cmps
je
add
sbb
mov
test
in
jle
mov
dec
and
pop
inc
xchg
test
push
mov
repnz
dec
push
pop
jl
ins
push
mov
out
mov
aaa
dec
movs
add
cmp
sahf
das
xchg
lods
push
out
push
push
inc
mov
cli
add
addr16
dec
mov
popf
cmp
adc
inc
shl
mov
xchg
mov
imul
rcl
pop
mov
and
push
cmpxchg
dec
and
xchg
dec
jbe
pop
nop
daa
movs
pop
mov
shr
mov
or
jle
jno
sbb
dec
aaa
mov
popa
xchg
arpl
out
xchg
mov
sub
inc
add
dec
mov
push
add
xor
cmp
shr
mov
jge
fsubr
sbb
push
cmc
out
xchg
dec
xor
pop
repnz
jbe
and
cmp
jecxz
xor
xchg
outs
in
push
mov
push
cmps
adc
hlt
and
hlt
dec
jmp
(bad)
mov
add
into
inc
dec
jge
xor
push
jmp
lahf
jno
mov
das
stos
clc
clc
pop
sub
ror
aaa
das
jo
enter
mov
ja
jmp
jns
pop
dec
(bad)
pusha
movs
int
or
xor
cmc
stc
push
add
fmul
jl
mov
arpl
inc
jae
ret
mov
popf
push
xchg
stos
and
add
pop
sub
stc
push
js
mov
or
cmp
xchg
sub
hlt
mov
call
mov
push
xor
inc
mov
push
cwde
lock
lea
arpl
add
lds
retf
lahf
(bad)
xchg
sar
xor
jle
xchg
adc
inc
pop
and
xchg
or
adc
adc
lds
ins
call
xor
fwait
mov
fadd
inc
std
sub
xchg
jbe
jmp
xchg
push
sub
mov
and
mov
jb
xchg
fcomp
fcomp
ret
jge
(bad)
pop
fstp
mov
int
call
stc
pop
pop
out
push
xchg
or
retf
jns
and
jge
popf
rol
inc
add
in
pop
hlt
jnp
push
mov
ins
ja
push
fs
adc
push
pop
aaa
pop
imul
cli
add
cli
dec
jle
bound
add
fsubr
fnstenv
pop
lea
inc
jp
jecxz
cdq
inc
(bad)
xor
pop
inc
outs
pop
lds
and
cmp
mov
scas
or
jb
cmc
pop
add
das
jne
repnz
test
and
add
fdivp
pop
rcr
xchg
mov
das
sub
inc
pusha
mov
and
jge
(bad)
jle
inc
add
dec
xchg
loopne
pop
gs
(bad)
jle
push
mov
movs
mov
dec
arpl
shl
cld
ins
out
test
cwde
jne
pop
mov
fisttp
or
push
sar
xchg
adc
lahf
jbe
fwait
pop
jno
ins
xchg
gs
xchg
xor
test
popa
sbb
and
int
cmc
(bad)
push
outs
fwait
pop
xchg
das
jbe
xlat
pop
stos
jp
and
jmp
(bad)
pop
jecxz
scas
sub
push
mov
sbb
add
pushf
in
lahf
in
call
mov
(bad)
dec
inc
pop
(bad)
nop
lea
rcl
cwde
mov
enter
xchg
data16
xchg
adc
sub
icebp
xchg
out
sahf
loop
mov
push
mov
pop
call
push
adc
shl
and
push
add
sbb
shr
xchg
xchg
add
enter
hlt
pop
pop
sub
scas
rcr
in
xor
fnstcw
cmp
jae
es
out
jle
loop
test
push
jmp
imul
fnsave
dec
test
adc
sbb
aad
mov
int3
sub
and
lds
xor
fdiv
cmps
stos
jp
mov
cmp
imul
(bad)
mov
push
adc
lock
stos
vp4dpwssds
loop
push
push
es
add
call
pop
sahf
xor
mov
xor
and
call
push
test
and
lods
ins
adc
and
leave
dec
or
cwde
and
jg
movs
arpl
fild
jmp
cmp
dec
cli
out
stos
rcl
out
sub
sti
push
sub
lods
rol
in
je
xchg
clc
loopne
mov
xchg
jno
(bad)
xor
dec
push
adc
sub
hlt
fiadd
jg
test
std
test
sbb
push
sub
push
pop
loope
retf
xor
add
xor
pop
jp
xchg
cmp
dec
cmp
call
or
mov
xchg
mov
scas
pop
push
jnp
leave
or
sub
xchg
pop
shl
icebp
jl
icebp
(bad)
(bad)
mov
aas
scas
push
mov
in
sub
in
out
mov
pop
adc
retf
mov
sahf
push
dec
dec
(bad)
mov
jns
inc
(bad)
sub
and
jmp
jbe
repnz
adc
push
xchg
iret
gs
fnsave
lods
ret
mov
cs
imul
or
test
jmp
enter
repnz
inc
sub
pop
fld
cmp
mov
int
xchg
pop
clc
popf
pop
dec
adc
adc
jbe
push
adc
scas
ins
outs
sbb
lds
sti
sub
jp
ja
loop
pop
lds
mov
mov
dec
mov
mov
xchg
jl
pop
sbb
add
add
ret
or
jecxz
dec
pop
mov
push
int3
test
ja
pop
push
push
lods
loop
dec
iret
push
lods
lods
jnp
addr16
or
clc
or
xor
movs
jae
enter
jne
sbb
mov
test
lods
and
adc
leave
dec
xlat
test
les
jmp
sti
jbe
shr
push
xor
scas
sbb
xor
jp
movs
add
mov
push
push
mov
mov
sbb
in
push
jge
jmp
and
xchg
js
scas
inc
daa
jb
xor
enter
pop
out
pop
or
popa
bound
add
jo
mov
add
sub
movs
sbb
ud2
xlat
loope
sub
cmp
pop
aas
push
jle
retf
inc
and
fisttp
mov
les
(bad)
out
stos
call
lock
stos
dec
sub
sbb
clc
shl
mov
(bad)
adc
popf
hlt
push
cwde
out
mov
mov
xchg
mov
js
stos
(bad)
test
cmps
cmps
clc
pop
jns
dec
movs
rcr
and
popa
jle
sub
imul
cwde
fwait
inc
push
pop
out
jge
sbb
push
cld
pusha
in
retf
xor
dec
mov
xchg
push
mov
mov
enter
dec
mov
or
icebp
loopne
loop
adc
inc
jmp
push
xor
and
push
stc
(bad)
in
mov
test
push
sahf
sub
or
iret
adc
cmp
xchg
jnp
test
sub
jmp
rol
or
out
sbb
jbe
and
call
das
outs
div
lds
test
outs
mov
rcl
mov
pop
test
fisttp
in
imul
fisttp
test
hlt
mov
xor
out
lods
lds
sbb
shr
in
mov
or
push
stos
je
enter
xor
das
(bad)
sub
aaa
in
cli
mov
mov
lock
dec
stos
push
sub
xchg
adc
push
dec
les
leave
and
movs
sub
jae
mov
and
int
retf
push
mov
push
je
cmp
fisubr
adc
pop
popf
loop
cmp
jg
(bad)
fwait
ins
pop
mov
and
pmulhuw
sar
mov
shl
imul
shl
retf
or
in
mov
cmp
(bad)
loope
ret
fstp
aas
rcl
sbb
gs
(bad)
mov
cmp
xor
add
out
xchg
push
xchg
aad
icebp
jecxz
in
jmp
jl
aad
or
pushf
dec
mov
loop
ror
jo
push
or
retf
push
dec
sub
push
mov
pop
sub
test
(bad)
mov
iret
repnz
cwde
adc
imul
mov
push
outs
pop
fsubr
jae
es
sbb
cmp
in
lea
fisttp
xchg
lds
push
dec
mov
mov
out
xor
dec
xlat
rcr
scas
cmp
jge
push
nop
dec
jnp
and
out
jne
xor
jnp
inc
lea
adc
loop
mov
out
jno
mov
cmps
je
repnz
jbe
ins
inc
icebp
jl
fsub
out
jns
gs
fmul
pushfw
push
cld
mov
push
sub
retf
xor
repnz
mov
lods
mov
jns
out
mov
enter
jne
add
and
aaa
out
in
pop
in
pusha
inc
outs
cwde
cli
xchg
(bad)
jge
mov
fiadd
push
jecxz
cmps
hlt
fist
inc
into
mov
mov
mov
xchg
xchg
int3
pop
push
imul
rcl
leave
xor
retf
pop
ins
outs
pop
mov
fwait
jae
and
ret
test
shr
push
or
iret
xchg
jge
leave
out
jle
gs
and
sub
aam
repz
cmps
xor
adc
pop
ret
mov
lods
jmp
sbb
cmps
pop
arpl
retf
xor
not
repz
add
xchg
jne
jge
pop
pushf
xchg
or
or
pop
add
pop
dec
dec
sub
(bad)
push
dec
inc
int
cmps
or
cmps
sbb
cmp
cmp
pusha
and
in
pop
dec
xor
scas
push
nop
inc
sub
xor
lahf
nop
jne
mov
aas
push
jb
adc
jbe
addr16
test
push
sbb
sar
xor
out
(bad)
adc
jl
pop
sahf
rol
div
imul
push
add
mov
out
mov
xchg
test
xchg
cmc
push
push
retf
xor
out
jmp
or
lahf
gs
iret
add
rcr
xchg
popf
movs
stos
(bad)
adc
movs
ins
fsubrp
mov
call
rcl
sbb
fild
sub
shl
fucomi
out
adc
and
xchg
out
push
bound
in
repnz
(bad)
or
movs
mov
mov
sbb
cmc
sub
inc
push
xor
or
mov
ins
rcr
sar
popf
aaa
mov
out
ror
in
fsubr
cli
mov
jge
cld
inc
mov
push
sub
out
push
dec
sti
inc
jmp
cmps
into
add
mov
push
popa
mov
pop
icebp
out
or
jl
std
in
and
outs
in
xchg
jbe
dec
ror
dec
xchg
inc
aad
test
mov
scas
shl
fs
cld
pop
cwde
movs
retf
sbb
in
mov
mov
xlat
sbb
leave
mov
aas
cmp
fld
popa
mov
(bad)
add
or
and
ror
xchg
adc
cmp
fcmovu
xor
inc
fnstcw
(bad)
fwait
loope
pop
pop
test
mov
push
mov
ret
call
sbb
inc
(bad)
push
xchg
jle
pop
daa
stos
mov
push
stos
push
je
in
sub
mov
dec
pushf
repnz
push
xchg
clc
inc
xor
push
adc
into
imul
xor
mov
jbe
mov
test
cld
sahf
sbb
and
or
ja
ds
xchg
jmp
lea
push
nop
mov
pop
jns
add
(bad)
mov
daa
cld
inc
loopne
pusha
adc
(bad)
xchg
adc
stos
pop
sar
push
out
xor
jmp
shl
push
stos
jge
inc
or
sbb
mov
hlt
ret
xor
ret
js
push
inc
ret
ins
(bad)
pop
cli
je
push
cmp
rol
or
and
push
inc
out
xor
in
cdq
fcom
push
cdq
mov
ret
lock
imul
add
xlat
push
jne
sahf
add
test
push
push
xchg
(bad)
mov
adc
(bad)
(bad)
(bad)
mov
lods
adc
xchg
stc
loope
push
push
push
mov
sub
sub
cwde
into
mov
mov
dec
mov
xchg
dec
add
push
test
lock
fild
dec
jmp
and
adc
jae
aas
fwait
call
inc
xor
aas
ret
xor
inc
ror
addr16
shl
inc
ja
cmp
add
div
xor
mov
mov
jno
aas
jecxz
jp
lods
inc
jecxz
lock
fbld
jmp
aam
xor
adc
test
mov
adc
stc
cwde
out
push
aas
jecxz
daa
jb
sbb
pop
outs
pop
nop
sbb
jo
movs
mov
or
add
and
fld
pop
push
add
fnstenv
clc
cdq
aaa
shr
jmp
jnp
enter
mov
inc
jmp
fstp
mov
jb
lods
dec
add
fwait
movs
xor
dec
xchg
dec
jne
mov
or
cwde
push
pusha
xchg
pop
rcl
retf
popf
sahf
fisub
sbb
inc
popf
(bad)
out
xor
enter
jle
out
stos
das
ror
sbb
inc
add
jmp
push
push
push
mov
jl
out
aas
loope
mov
cwde
test
jge
scas
lods
add
or
pop
pop
sbb
push
pop
leave
lods
dec
pop
cs
imul
and
cmp
add
or
jno
push
or
les
or
scas
popa
cmp
pop
push
fnstsw
and
jmp
test
xchg
punpcklwd
pusha
mov
jb
mov
rol
les
in
or
cmp
cli
xor
shl
jmp
and
cs
or
js
idiv
aaa
and
call
mov
xchg
fisttp
and
loope
iret
int3
adc
mov
lea
out
and
int
loope
pusha
jb
mov
lods
mov
pushf
lods
and
dec
inc
nop
mov
mov
cmc
mov
enter
call
xor
pop
imul
mov
mov
ror
xor
push
into
mov
(bad)
fild
aaa
mov
pop
sub
pop
xchg
in
aas
imul
cmps
std
dec
jns
inc
mov
cmc
jb
scas
out
outs
cmp
ins
pop
fadd
or
dec
test
inc
pusha
xchg
jns
pop
xor
movs
mov
sti
sbb
sbb
ja
sbb
mov
mov
adc
jns
mov
arpl
and
in
int3
stos
jmp
into
fs
and
iret
(bad)
mov
icebp
popf
cmp
adc
add
push
stos
jl
scas
das
add
(bad)
mov
test
pop
shl
dec
mov
inc
sub
pop
cmps
popf
call
imul
jbe
jecxz
retf
pop
ficom
jl
sub
push
jecxz
or
pushf
or
movs
in
icebp
fiadd
sub
into
dec
sub
push
js
xor
and
fidivr
lods
push
add
jmp
hlt
sub
shr
cmp
xor
xchg
out
aad
(bad)
dec
jg
stc
cmp
cwde
mov
mov
test
mov
ror
gs
repnz
adc
out
ror
push
shl
push
mov
pop
or
and
or
inc
dec
cmp
out
adc
outs
add
lds
outs
test
movs
sar
jg
das
jge
sahf
and
scas
je
outs
jmp
push
xor
cmp
adc
mov
sub
scas
iret
xchg
mov
cmp
sub
icebp
retf
sub
inc
or
sub
inc
test
jnp
in
cwde
cmp
push
add
mov
adc
cs
jle
stos
and
pop
icebp
mov
sbb
cld
pushf
mov
pushf
(bad)
int3
mov
push
or
mov
and
(bad)
pop
jbe
inc
mov
inc
ds
xor
or
aaa
sar
faddp
xor
movs
xchg
cmp
dec
xor
mov
add
mov
inc
data16
outs
dec
rcr
pop
and
sti
xchg
int
jns
push
inc
popf
(bad)
push
sub
leave
inc
xor
and
mov
push
lods
and
push
je
mov
dec
adc
pushf
mov
loopne
and
inc
mov
pusha
inc
sahf
sub
pop
outs
inc
inc
and
aaa
imul
shr
(bad)
sub
hlt
pop
and
frstpm(287
fsubr
mov
dec
add
(bad)
xor
sub
popa
pop
mov
and
mov
call
xor
(bad)
jbe
mov
je
cmps
(bad)
mov
fcom
idiv
xor
jne
jp
push
repnz
sub
add
lea
adc
(bad)
xor
mov
scas
mov
std
sub
nop
pop
out
xor
mov
xor
movs
or
xor
push
out
xchg
shl
sbb
adc
mov
rol
stos
cmc
jns
pusha
push
push
mov
jge
sahf
ffreep
sbb
int
dec
fwait
arpl
jno
sbb
cmp
pop
(bad)
ins
push
repz
ret
push
(bad)
aam
jno
sub
add
fisub
test
mov
test
sub
cmp
not
add
enter
xor
pop
and
fcmove
arpl
fcomp
cmp
mov
bound
das
arpl
cmps
pop
mov
aas
push
pop
pushf
(bad)
mov
cmc
pop
nop
leave
test
cmp
add
xor
add
outs
inc
jbe
retf
push
out
xor
jno
imul
jo
dec
sub
addr16
aad
xchg
sbb
aaa
cmps
cmp
xchg
repz
cmp
mov
sub
mov
sbb
fs
xlat
dec
ss
sub
(bad)
mov
mov
add
mov
ror
aas
mov
je
jge
adc
aad
(bad)
test
push
xor
add
jge
mov
aaa
lock
jmp
std
dec
mov
aad
pushf
xchg
aaa
mov
rcl
mov
jecxz
pop
ret
pop
push
sub
int
inc
sti
or
jne
adc
leave
mov
ret
and
push
test
test
jecxz
fldcw
mov
retf
add
xchg
adc
mov
inc
push
jb
jmp
mov
sbb
dec
fsubr
and
sti
mov
(bad)
je
sub
into
lods
jnp
cli
jl
into
xchg
or
and
outs
dec
add
cdq
test
mov
adc
pusha
stos
stos
and
jge
(bad)
iret
xchg
fwait
arpl
lea
or
std
sbb
aaa
mov
ja
mov
mov
push
lock
jmp
pop
fcomp
or
mov
push
push
mov
jmp
jg
push
jmp
bt
out
xor
xchg
push
inc
adc
jae
or
(bad)
das
sbb
les
pop
mov
retf
fnstsw
xor
push
jae
sbb
ret
push
cmp
jle
arpl
loopne
imul
inc
rcr
push
xor
mov
push
dec
fnstcw
iret
dec
lea
ss
mov
inc
adc
adc
mov
inc
and
loop
xor
xchg
jno
inc
and
dec
pop
push
rol
xor
jl
mov
mov
mov
mov
mov
jmp
jmp
mov
dec
cld
mov
(bad)
out
push
mov
mov
adc
inc
movs
add
cmp
jg
shl
sti
and
xchg
jp
xchg
pop
(bad)
addr16
stos
(bad)
outs
lds
aaa
add
jmp
sbb
(bad)
leave
jecxz
mov
scas
jecxz
or
scas
sub
jmp
test
lds
movs
sbb
ret
mov
add
les
jns
push
lds
xor
jecxz
stos
cmp
jno
xchg
popa
arpl
mov
sbb
jle
rcl
mov
sbb
ss
jmp
inc
sbb
pminsw
sbb
shr
add
jbe
into
adc
dec
mov
scas
sub
pop
mov
mov
repz
mov
addr16
mov
xor
ror
mov
push
rol
fcomp
pop
jne
sbb
aad
aam
dec
(bad)
cmp
int3
cs
inc
test
test
push
jo
cmps
dec
stc
jl
out
jo
out
fisub
and
pop
pop
adc
pop
cmp
dec
fwait
adc
data16
inc
pop
les
in
shr
test
xchg
xchg
push
inc
xchg
dec
in
out
fstp
(bad)
push
les
push
pop
(bad)
cld
je
jl
data16
pop
push
adc
push
sub
out
nop
xchg
in
rol
jbe
mov
add
jle
in
pop
cmp
movs
mov
mov
ja
xor
inc
js
mov
and
mov
inc
in
adc
imul
movs
mov
or
jge
ins
repnz
and
in
pop
imul
cmps
jl
dec
sub
cli
cmp
lock
in
sub
mov
sbb
cmp
mov
push
fadd
cmp
test
mov
fst
imul
(bad)
push
pop
shl
lahf
int
cmp
xlat
inc
fs
pusha
push
fucompp
hlt
and
call
cmps
cld
push
add
pop
cs
cwde
sti
repz
ins
stos
inc
test
test
lahf
sbb
cdq
jnp
mov
cmp
add
ret
mov
mov
cs
inc
loop
and
xchg
sahf
int3
mov
sbb
push
popf
in
daa
and
adc
sbb
fcom
sbb
mov
cmc
jg
repnz
pop
call
out
mov
ins
ds
out
xor
cmp
cmp
test
loope
mov
jp
repz
jmp
inc
jnp
pop
jp
pop
xchg
cmp
push
into
inc
out
adc
lods
adc
mov
ret
xchg
fisttp
scas
adc
and
add
dec
retf
inc
sar
scas
out
pop
mov
stc
xchg
jo
fdiv
cmc
adc
xchg
ja
add
fldenv
mov
es
jne
inc
push
(bad)
sub
outs
dec
addr16
(bad)
mov
adc
iret
ret
push
mov
cdq
mov
push
imul
inc
into
loopne
mov
xor
test
sar
mov
scas
ret
xchg
stos
adc
adc
out
xor
jb
ins
cmp
(bad)
nop
or
es
and
mov
es
stc
loope
stos
addr16
nop
stos
inc
jb
test
bound
fcmovbe
int
jae
add
jbe
dec
mov
inc
fwait
repz
ins
push
push
fs
pop
inc
ret
test
pop
repnz
leave
loope
lds
or
and
ins
ins
jge
ret
mov
push
dec
dec
arpl
into
push
lock
lahf
sub
cmc
imul
jne
and
dec
dec
xchg
cld
ins
lods
cmp
xchg
int
loopne
jbe
(bad)
shl
pop
push
test
rol
cmps
jecxz
(bad)
ins
xchg
shr
pop
es
sbb
lods
cmp
fsubr
call
sub
pop
iret
pop
jae
lods
pusha
xor
(bad)
cvtdq2ps
std
mov
adc
mov
cwde
xor
lock
int3
mov
jbe
(bad)
mov
jno
fidivr
jle
and
xchg
jecxz
xor
fdivr
inc
fisttp
retf
(bad)
lahf
jl
jae
ins
stos
fdiv
xchg
cmps
pop
sbb
fnsave
or
xchg
xchg
sub
lea
cmps
aaa
cmp
add
into
inc
mov
cmp
mov
inc
mov
inc
fbstp
sti
add
xor
call
xor
fistp
es
jmp
add
repz
sub
add
jo
push
jge
(bad)
mov
in
pop
and
mov
arpl
clc
inc
adc
jge
ds
xor
pop
pop
pop
in
xor
fimul
cmps
stos
(bad)
repz
imul
ds
fwait
and
imul
or
mov
add
div
inc
pusha
inc
inc
(bad)
pop
fwait
das
mov
adc
jo
loopne
add
dec
jno
loop
lods
fs
ds
and
jge
out
out
shr
sbb
adc
xchg
arpl
shl
and
in
or
test
xor
xor
cmps
imul
sar
add
push
in
adc
ins
mov
lahf
call
std
and
dec
or
xchg
push
push
jae
xor
lahf
push
repz
sub
jg
xor
out
rol
jp
mul
loope
popa
loop
mov
js
rol
stos
jmp
xchg
jmp
xchg
jne
and
aad
and
bound
daa
je
adc
jb
imul
mov
mul
xor
(bad)
xchg
jp
enter
rcl
(bad)
cmp
add
imul
xor
(bad)
mov
jmp
scas
sti
popa
pop
call
out
pop
jge
int3
pop
xchg
or
jbe
xchg
aam
ret
sub
cld
push
test
mov
push
and
test
xchg
scas
loope
packuswb
cmp
pop
sbb
fwait
and
adc
imul
xchg
loop
(bad)
loope
fild
sbb
ds
add
mov
jp
ret
adc
arpl
dec
aas
ret
lods
popa
out
add
jle
(bad)
mov
jne
aas
and
in
lods
cdq
cwde
in
or
pop
addr16
and
daa
add
push
cmp
shr
(bad)
das
stos
enter
sti
mov
mov
popa
xor
xchg
in
mov
add
cdq
mov
pop
(bad)
mov
adc
jbe
cmps
mov
arpl
cmp
int
imul
add
jb
pop
lahf
int
fcom
shr
sub
lock
jns
(bad)
cmp
jmp
mov
js
xchg
cmps
dec
in
push
inc
mov
out
sub
in
push
sbb
iret
cmp
repnz
sbb
adc
or
test
pop
inc
mov
idiv
and
in
jl
inc
popa
ja
mov
daa
push
rcl
not
jmp
mov
(bad)
test
push
test
mov
inc
mov
pop
fstp
or
push
sbb
in
mov
mov
je
aam
xor
cmps
mov
ss
fst
xchg
sbb
push
(bad)
xor
mov
std
cmps
adc
(bad)
out
adc
mov
mov
sbb
stos
addr16
ins
jb
(bad)
xor
mul
xchg
jnp
xor
xchg
or
xchg
add
in
xchg
cwde
daa
pop
add
jnp
mov
push
repz
cmp
jbe
fwait
movsx
nop
add
enter
xchg
stc
push
adc
push
arpl
push
xchg
stos
and
inc
icebp
cmp
rcl
xor
hlt
and
dec
dec
dec
hlt
enter
ret
cwde
inc
ds
xor
xchg
loope
jno
xchg
mov
and
push
fsub
fs
out
mov
js
fwait
jge
mov
adc
(bad)
aaa
push
mov
pop
cmp
(bad)
jl
jmp
jmp
ret
push
rcr
std
or
cmp
dec
xchg
adc
dec
jne
popf
ja
loopne
cmps
shl
or
ins
stc
retf
pop
and
in
xchg
sub
mov
imul
adc
push
sar
mov
loop
(bad)
in
shl
pop
lods
cs
adc
xor
add
aaa
fdiv
sub
in
dec
mov
cmp
adc
aaa
test
das
pop
fnstsw
mov
cdq
es
das
and
xchg
xchg
imul
xchg
repz
(bad)
cmp
(bad)
cmp
and
jo
xor
add
lahf
dec
add
mov
pop
mov
cmp
xchg
xor
fisubr
mov
jmp
dec
and
test
lods
popa
pop
xchg
int3
sub
mov
repnz
mov
jecxz
push
adc
rcl
ins
sub
(bad)
pop
shl
lods
pop
push
inc
pop
out
jmp
adc
les
jns
out
outs
cmp
add
call
mov
push
xchg
sub
(bad)
mov
pop
or
pop
fmul
jg
aaa
mov
xchg
test
push
jmp
add
xchg
adc
or
test
mov
adc
jne
int
and
fincstp
mov
imul
(bad)
or
sbb
in
stos
and
add
jl
pop
xchg
sub
dec
stos
pop
push
cli
imul
mov
dec
mov
fbld
icebp
sar
ss
cmp
gs
mov
in
or
pusha
dec
es
pushf
(bad)
jge
mov
cmps
jnp
or
pop
leave
pushf
dec
pushf
frstor
mov
mov
cmp
or
xor
cwde
jp
xor
movs
outs
and
xchg
xchg
movs
mov
stc
outs
dec
jle
dec
cmp
push
mov
mov
or
push
pop
shl
jne
add
imul
mov
jle
ss
pop
test
mov
pop
sub
inc
xor
ds
inc
call
fcmovnbe
and
movs
and
mov
cld
mov
jmp
add
das
ret
pop
out
(bad)
or
retf
popf
icebp
(bad)
mov
loop
pop
adc
hlt
icebp
xor
mov
mov
cmp
out
xchg
inc
sahf
push
xor
loop
daa
icebp
out
add
rol
add
(bad)
repnz
dec
out
test
aad
xchg
xlat
adc
arpl
frstor
inc
mov
mov
mov
ds
aas
jl
call
jp
adc
iret
sub
adc
and
add
dec
and
fwait
dec
xchg
out
add
repnz
fisub
sbb
mov
xchg
jmp
(bad)
sar
loope
mov
ror
(bad)
inc
mov
jge
(bad)
out
scas
xor
sar
mov
stc
ins
iret
popa
fwait
sub
retf
mov
cmp
mov
int3
out
test
or
inc
ss
scas
push
mov
and
loop
test
dec
add
std
push
cdq
mov
nop
dec
rcl
dec
sbb
retf
xor
lods
jns
scas
cs
xor
cmc
xor
sti
cwde
int
test
hlt
lahf
sbb
enter
shl
(bad)
inc
out
shl
dec
adc
mov
test
hlt
scas
jno
mov
xor
rol
add
xchg
inc
daa
cli
add
xor
cmp
or
loopne
iret
je
jmp
bound
pusha
into
fisttp
cmp
loop
pusha
in
test
fnstcw
or
sub
jl
nop
scas
mov
lods
push
cmp
dec
sbb
push
jo
push
aaa
shl
push
out
pop
sub
pushf
loopne
adc
mov
mov
xchg
mov
xchg
out
(bad)
jae
cmp
movs
xor
dec
dec
sbb
adc
in
mov
xor
test
cmp
stos
clc
lods
loopne
push
mov
mov
out
pop
bound
xchg
out
add
scas
in
push
stos
xchg
in
sbb
bnd
rcl
lods
push
mov
push
jl
sbb
test
and
dec
enter
or
mov
imul
(bad)
mov
xlat
pop
pushf
test
jp
inc
sub
and
mov
jg
or
add
js
(bad)
pop
or
push
mov
(bad)
cs
lods
adc
mov
in
scas
test
inc
inc
loop
stos
into
pop
sbb
mov
sti
leave
push
dec
mov
fstp
xchg
adc
add
add
cli
fld
jne
push
xor
loop
xchg
stos
mov
jne
ret
jle
mul
fadd
les
mov
mov
jl
cs
mov
mov
and
adc
std
fild
pusha
inc
and
cmps
lods
or
dec
fld
sbb
into
out
xlat
push
iret
pop
or
out
mov
icebp
adc
jmp
or
xchg
nop
dec
cmps
in
cmps
inc
js
call
out
je
cmp
pop
mov
sub
adc
fcomp
xor
lods
jbe
sbb
dec
or
pop
push
addr16
sub
loop
xchg
add
sub
mov
sub
sbb
test
shr
sub
push
fst
pushf
xor
out
cmp
js
clc
mov
pushf
adc
mov
lea
jnp
pop
pusha
rcr
xchg
jbe
jl
cmp
and
test
fild
mov
les
popa
aad
xchg
jmp
jecxz
fcomp
hlt
push
fnstsw
and
adc
in
cmc
fwait
push
pop
movs
sbb
outs
test
ins
push
call
push
sub
mul
dec
pop
sub
mov
aaa
(bad)
stc
cdq
mov
stos
das
out
cdq
mov
movs
push
sub
nop
add
jmp
sub
xor
dec
dec
inc
ss
add
lea
cdq
and
(bad)
pop
into
and
nop
movs
inc
enter
ror
push
inc
aad
in
test
jg
sub
adc
nop
and
ror
xor
das
leave
out
das
push
pop
rol
mov
test
leave
shrd
pop
in
sahf
cmc
mov
stos
fsub
arpl
out
scas
int3
retf
les
repz
mov
sub
leave
call
movs
rcl
js
jae
inc
imul
lods
pop
lahf
in
inc
je
cmps
sar
aam
adc
jp
scas
sub
push
or
test
popf
int
mov
sbb
dec
and
sub
mov
xchg
push
sub
add
cs
push
push
jge
out
sub
jmp
dec
in
xchg
aam
jmp
inc
mov
add
rol
rcl
push
mov
lea
outs
cmp
inc
xchg
adc
nop
mov
(bad)
jbe
pop
imul
xchg
ins
gs
cmp
and
pusha
cmp
dec
mov
repz
sbb
xchg
mov
lock
out
(bad)
push
jbe
fbstp
test
xor
mov
ins
pop
sbb
lea
add
jecxz
(bad)
outs
fdiv
sbb
call
pop
aaa
add
adc
jns
aam
in
pop
cs
jmp
ror
xor
aad
inc
outs
iret
stos
sbb
jp
push
test
sbb
ins
fcmovnbe
call
inc
sub
daa
xor
jne
jle
push
retf
sbb
sbb
mov
adc
inc
xor
push
mov
jmp
cld
arpl
add
inc
jae
test
outs
cld
popf
mov
mov
xor
and
jae
mov
inc
mov
(bad)
cmp
ror
inc
sbb
sub
add
jle
push
pop
mov
and
(bad)
xchg
mov
pusha
movs
push
xor
mov
outs
fmul
and
test
sbb
loop
push
or
push
sahf
in
test
rcl
es
cmp
or
out
pop
inc
movs
jb
(bad)
fbstp
rcl
jmp
call
fdivr
fsubr
shl
ret
aad
inc
cmp
ret
dec
cmp
pop
fnsave
cmps
aad
fsubr
arpl
mov
or
in
rol
jp
into
fldcw
sub
xor
and
out
pop
stos
rcr
das
push
xchg
jmp
cmp
cmp
push
out
imul
and
xor
jo
mov
cld
or
pusha
imul
aaa
pop
jecxz
mov
xchg
dec
add
add
sbb
fstp
sti
movs
dec
shl
xor
out
mov
test
cld
test
dec
arpl
mov
loope
mov
mov
outs
enter
mov
cmp
or
aam
mov
dec
xor
dec
sub
add
mov
repz
ret
xchg
clc
fwait
dec
cmp
cmp
sbb
das
cmp
push
mov
cmp
int3
sbb
push
jle
sahf
es
and
sbb
shl
and
sbb
fnstcw
lds
xchg
or
and
jae
mov
xchg
dec
sbb
(bad)
lahf
out
sar
(bad)
imul
mov
out
aaa
cmp
inc
and
int
add
dec
inc
ds
xchg
out
bound
fcmove
(bad)
mov
and
push
call
fdiv
adc
shl
inc
aad
mov
sahf
xchg
add
pop
movs
sub
in
fmul
xor
ret
in
bound
in
test
stos
leave
lods
mul
push
sub
inc
ds
xchg
sub
outs
mov
or
pop
xchg
das
xchg
loop
pop
mov
pop
loope
loopne
lods
rol
or
daa
or
dec
jecxz
aad
mov
cli
aad
inc
cmp
cmp
mov
test
or
stc
movs
gs
jl
dec
repnz
dec
(bad)
sti
pop
dec
shr
xchg
aas
imul
sbb
movs
ficomp
or
and
int3
nop
sbb
test
and
add
mov
aaa
mov
ds
imul
push
pop
pop
jecxz
or
stos
(bad)
inc
loopne
das
rcr
aas
(bad)
mov
mov
mov
pop
adc
mov
jo
or
outs
or
movs
mov
das
sub
push
lds
and
cs
and
hlt
xchg
lahf
push
jg
mov
into
rol
pop
ja
(bad)
es
or
pop
xor
cmp
cmp
cmp
or
sub
cdq
jl
(bad)
sti
mov
pop
xchg
leave
fdivr
inc
ja
cmp
cs
in
call
lods
push
fisubr
mov
int
xchg
(bad)
in
mov
dec
cmp
mov
ins
sub
test
(bad)
popf
out
les
loop
repnz
scas
mov
scas
push
mov
ret
push
loope
push
cmp
mov
or
bound
push
jmp
loope
sbb
mov
pop
dec
xchg
daa
mov
jge
mov
in
jne
test
xor
xchg
xchg
sbb
stc
or
add
xchg
and
hlt
cmp
(bad)
mov
movs
int
pusha
inc
and
arpl
leave
add
popa
cmps
push
cwde
mov
xchg
adc
stc
pop
test
pop
inc
arpl
ds
in
adc
pop
das
mov
data16
sub
aad
fcom
xor
jno
rol
cmp
fcomp
pop
popa
movs
ss
add
in
sbb
dec
aaa
ret
aas
sbb
jbe
shl
push
sbb
cld
push
aas
(bad)
or
div
adc
mov
ins
push
js
into
jns
add
and
out
inc
sub
adc
xchg
pusha
lds
js
add
xchg
cmp
mov
imul
(bad)
scas
jecxz
cmp
sbb
mov
mov
jo
cld
loop
aam
popa
dec
fistp
retf
es
jae
push
ins
push
icebp
mov
sub
cwde
sbb
pop
ins
pop
movs
push
dec
pop
adc
sub
test
pop
ja
shl
cli
data16
jmp
pop
xor
dec
sub
xor
pop
mov
inc
dec
cmp
sub
mov
ret
cmc
xor
adc
rol
in
(bad)
scas
jmp
xor
or
outs
pop
adc
sub
cmps
pop
or
std
(bad)
popa
fisub
addr16
loop
inc
inc
or
in
mov
or
adc
addr16
sbb
sub
stos
sub
data16
test
xchg
imul
jo
and
stc
pushf
jl
jmp
sub
or
pop
imul
push
sub
and
cmp
cmps
mov
test
jns
jle
jns
iret
icebp
test
inc
addr16
jo
xor
add
fdivr
add
cmps
daa
or
sbb
cs
and
inc
das
inc
ret
pusha
sub
add
pop
ret
push
fsubr
or
pop
push
lods
jno
loop
fiadd
push
push
loopne
cdq
imul
xor
jg
fsub
adc
inc
push
mov
adc
mov
daa
mov
push
mov
jo
and
xchg
popf
mov
jno
inc
clc
xor
cli
jb
(bad)
fadd
enter
mov
push
cmp
loope
mov
xchg
dec
ds
int3
or
jg
inc
aam
dec
xor
test
cwde
frstor
jmp
push
or
arpl
cmp
and
cmp
test
bound
dec
cmp
inc
ins
std
xchg
in
call
xchg
aam
movs
aam
mov
addr16
lea
pusha
cmp
xchg
sbb
adc
loope
test
ja
mov
sub
or
mov
add
inc
rol
stos
iret
add
arpl
pop
retf
sub
dec
xchg
sahf
ret
sbb
xlat
push
sbb
icebp
adc
cmps
out
jp
or
mov
mov
xchg
dec
pushf
add
pop
jg
in
add
xor
std
push
out
adc
loopne
in
sub
fisttp
into
int3
and
call
retf
shl
push
mov
or
xchg
daa
test
outs
adc
xchg
inc
int3
sahf
rcl
or
add
jbe
jmp
loope
pop
mov
xchg
in
sbb
add
ds
call
jmp
cld
es
cmps
inc
sahf
sub
cwde
jmp
xchg
sahf
stos
push
push
mov
xchg
add
inc
lods
(bad)
data16
or
dec
shr
sbb
ins
pop
jae
xchg
add
shl
add
cmc
or
pushf
retf
hlt
test
cmp
sub
(bad)
adc
xor
mov
jmp
hlt
out
das
cmp
outs
cmp
xor
(bad)
mov
sbb
mov
xor
rcl
mov
fs
pusha
jmp
imul
(bad)
aad
xor
mov
fnsave
push
lea
nop
arpl
adc
ds
aad
add
retf
dec
jno
call
mov
dec
aad
add
xor
mov
movs
sbb
mov
addr16
aad
call
(bad)
cmp
dec
add
cmp
sahf
jmp
mov
jle
sub
mov
out
enter
neg
xchg
sub
mov
fs
pop
je
mov
cmp
dec
or
int3
aas
and
inc
cmp
inc
fsub
xchg
loope
fisub
push
sar
ret
cmps
push
jecxz
mov
push
inc
adc
into
mov
mov
xchg
jns
fsub
mov
in
movs
out
clc
mov
adc
adc
jmp
ss
mov
mov
icebp
pop
xor
jmp
les
mov
ret
aas
dec
ins
aas
inc
daa
idiv
push
jp
enter
xchg
inc
arpl
fwait
pop
xchg
and
clc
cmp
pop
test
push
mov
inc
mov
out
mov
dec
mov
nop
hlt
test
(bad)
cld
cli
jmp
add
cmp
add
and
ret
inc
mov
das
or
pop
mov
inc
loope
jecxz
out
jnp
das
das
(bad)
(bad)
mov
lock
outs
xchg
ret
adc
and
sub
aam
jmp
out
xchg
adc
in
adc
push
add
pop
ret
mov
cdq
cmps
sub
mov
pusha
fwait
push
arpl
inc
ret
mov
dec
int3
mov
sub
xor
sub
push
test
aad
xchg
jg
in
(bad)
inc
jbe
xchg
pushf
inc
cmc
rcl
sbb
mov
sub
cmp
shl
adc
jno
push
cwde
mov
xor
sbb
mov
pop
jecxz
mov
cli
push
data16
mov
fsubr
test
cmp
clc
or
ins
or
mov
arpl
mov
sbb
jbe
std
mov
lock
out
adc
adc
sbb
ret
cdq
aam
stos
fist
shr
loop
add
sbb
shl
push
dec
je
pop
dec
(bad)
sbb
mov
xchg
xor
adc
out
mov
adc
aam
jnp
nop
lea
xchg
fisubr
jle
and
or
lahf
jg
mov
mov
ja
cwde
push
mov
clc
aas
fnstsw
lahf
cld
cmp
ins
and
mov
xchg
or
cmp
(bad)
cmp
mov
fisub
sub
ud1
xchg
xor
dec
push
push
call
test
mov
and
test
dec
sub
jge
dec
jbe
idiv
jmp
js
push
cmp
iret
and
cmp
push
push
or
outs
mov
xchg
ins
jmp
mov
push
loopne
pop
xchg
call
sbb
inc
add
push
lods
arpl
and
adc
mov
sub
fidivr
or
int
leave
xchg
cmp
pop
rcr
in
dec
fdivr
or
mov
mov
(bad)
cs
retf
int
adc
(bad)
leave
xchg
(bad)
cmp
mov
xchg
lahf
dec
jno
jnp
shl
neg
int
push
outs
xchg
push
push
out
cmp
ds
(bad)
pop
ins
sub
sbb
out
aam
leave
hlt
ror
cdq
out
ja
xchg
adc
scas
cmp
stc
sub
fidivr
inc
out
sub
ins
idiv
fsubr
push
sbb
jl
dec
stos
test
dec
ja
cmp
scas
inc
xchg
pushf
test
push
push
std
add
lock
add
jno
or
xor
fisubr
call
inc
retf
stos
jg
push
inc
imul
mov
cmps
out
or
aas
in
gs
loopne
stos
sahf
pusha
dec
test
int
push
jo
inc
pop
sahf
xchg
nop
push
mov
fadd
in
push
arpl
fidivr
mov
bound
mov
test
cmp
xchg
push
imul
(bad)
test
bound
in
cmp
lods
push
dec
call
mov
or
ins
cmp
(bad)
cs
mov
xchg
cmp
leave
pop
gs
dec
adc
call
jb
dec
repnz
lods
pop
outs
ins
shr
daa
call
jae
mov
jmp
xchg
and
mov
jb
xchg
mov
pop
add
push
cmp
pavgb
mov
xchg
jno
cmp
call
je
dec
dec
cdq
fadd
lds
xor
je
into
ret
cmc
popf
nop
scas
jo
dec
mov
lahf
imul
jae
add
sub
jb
and
mov
sub
and
pop
mov
cld
mov
fcomip
test
sub
or
xor
ror
(bad)
shl
rol
(bad)
ss
cmp
ret
je
out
or
shl
out
push
sar
or
sub
add
fadd
aad
mov
arpl
pop
rol
xor
sbb
mov
lds
pop
inc
and
mov
push
ficomp
and
call
mov
imul
cmp
in
pushf
je
dec
test
pop
loope
pop
dec
xchg
cmp
pop
fldenv
xchg
push
test
int
inc
sub
add
(bad)
push
loop
ds
stos
mov
and
fbstp
gs
lahf
inc
push
(bad)
(bad)
repz
dec
dec
pop
bound
cwde
sbb
xchg
xchg
les
or
je
repz
fwait
push
aad
cmp
stos
je
in
shr
push
test
push
in
mov
dec
test
repz
js
push
fist
in
jle
mov
nop
push
sub
addr16
lahf
ds
mov
dec
cmp
cmp
arpl
xchg
or
ins
xor
ficomp
clc
inc
and
inc
sub
cmps
js
imul
push
push
(bad)
and
cmp
(bad)
push
fidivr
rcr
and
inc
and
into
pop
in
loop
mov
xchg
in
mov
xchg
outs
outs
stos
push
mov
lods
mov
adc
push
test
adc
stos
cmp
std
add
cmp
or
sub
out
enter
pop
xchg
xchg
repz
ds
and
or
mov
add
mov
jno
jmp
and
ja
and
arpl
clc
pop
sub
push
adc
js
mov
xchg
out
data16
sbb
loopne
push
push
imul
or
sahf
jnp
(bad)
push
ret
bound
mov
stos
outs
sub
out
sub
shl
pop
int
adc
jo
mov
cs
loopne
cmp
pop
sub
sub
mov
pop
movs
or
pop
aad
jle
sub
and
in
xlat
arpl
retf
(bad)
mov
in
imul
repz
cmps
(bad)
sbb
cmp
dec
xchg
and
and
dec
ins
outs
xchg
and
aas
and
(bad)
ret
ins
mov
test
in
retf
aam
sub
rol
mov
(bad)
sub
pusha
icebp
sahf
ror
test
cmp
out
sub
dec
cmp
imul
cmp
pop
inc
scas
xchg
jne
clc
arpl
sbb
sub
sbb
icebp
aam
imul
sahf
xor
(bad)
aad
and
cmp
mov
daa
scas
fwait
data16
in
cmp
int3
jo
xor
cmps
dec
mov
xor
sbb
sub
in
mov
ficom
xchg
fst
pushf
mov
mov
nop
imul
add
or
adc
dec
(bad)
fbld
lahf
pop
stos
pop
pusha
inc
test
sub
sbb
test
cmp
out
or
sub
and
frstor
mov
mov
ret
xor
or
nop
or
popa
sub
dec
mov
loop
enter
stos
mov
pop
cmp
pop
ins
popf
sub
vaddps
jno
call
inc
sub
push
or
jl
cdq
inc
ins
iret
sbb
aad
in
stos
fild
std
fwait
scas
sub
mov
push
dec
inc
ss
cmp
sub
cld
wrmsr
out
je
je
mov
popa
push
test
in
sbb
mov
cmc
rep
cli
and
and
mov
test
fld
xchg
or
mov
xor
jmp
xchg
mov
xchg
dec
cs
inc
xor
push
lods
icebp
fiadd
sbb
popa
popf
push
mov
cli
(bad)
or
pop
dec
fcom
in
xlat
xchg
outs
cmp
pop
cmps
aas
pop
inc
sub
jbe
movs
add
or
lea
dec
not
cmp
dec
xor
je
inc
clts
(bad)
mov
dec
imul
shr
pop
or
cmps
aas
cmps
mov
push
inc
fsubr
sub
mov
adc
mov
adc
push
adc
scas
arpl
inc
jnp
adc
ror
cdq
xor
mov
push
sbb
ret
cmps
or
sbb
adc
repnz
dec
pop
dec
lahf
mov
mov
mov
leave
pop
test
int
scas
mov
mov
outs
out
(bad)
inc
jg
mov
(bad)
jae
shl
mov
je
xchg
inc
add
jp
sbb
retf
arpl
daa
idiv
ins
adc
add
js
sahf
ja
clc
xchg
repz
scas
cmp
fadd
pop
or
test
xor
adc
mov
push
inc
xchg
sar
or
inc
ins
(bad)
bound
(bad)
jbe
xor
pop
fdiv
mov
movs
lock
mov
cs
fist
inc
xor
sbb
dec
test
push
fld
(bad)
int
lahf
and
ret
(bad)
inc
mov
test
imul
xchg
mov
hlt
test
(bad)
sub
cwde
dec
add
sub
xchg
sbb
and
and
(bad)
repz
mov
mov
adc
jb
sub
jbe
lahf
loop
sub
out
sbb
hlt
xchg
mov
leave
add
or
inc
xor
repz
adc
lock
mov
out
push
jle
rol
das
rcl
mov
out
or
cmp
add
pusha
into
mov
ds
aad
cmp
fidiv
sub
pop
pop
fistp
loope
aam
xchg
inc
int
jnp
jnp
add
mov
push
aaa
mov
aas
jle
xchg
or
push
dec
popa
mov
dec
inc
or
jge
jno
dec
sti
clc
mov
xlat
adc
ds
sar
mov
movs
out
test
cmp
adc
mov
and
cdq
cmps
adc
sbb
lds
sahf
xlat
sbb
(bad)
push
in
jecxz
or
mov
ins
jmp
leave
imul
loop
inc
mov
lods
mov
mov
es
mov
mov
loopne
leave
jge
cwde
xlat
mov
pause
mov
cwde
inc
sbb
enter
sub
popf
mov
ins
push
cmp
mov
bound
push
out
mov
push
(bad)
mov
mov
dec
mov
fs
jl
ja
inc
jnp
mov
dec
sub
xchg
jmp
cmp
ret
xor
cmp
and
popf
dec
shl
sbb
jmp
mov
add
call
mov
sub
not
fs
movs
pop
aad
push
inc
and
mov
push
retf
out
mov
cmp
sub
mov
mov
mov
nop
cs
or
test
shl
cmps
mov
retf
jmp
xchg
js
test
add
jo
pop
cmps
in
cmps
sbb
and
cwde
loope
fcomip
sub
xor
in
or
add
gs
mov
mov
xchg
mov
repnz
pop
adc
ja
push
fcomi
hlt
push
add
push
and
mov
or
mov
(bad)
fnstsw
cmp
inc
and
int
mov
jo
xor
pop
sbb
xor
(bad)
mov
inc
loop
adc
leave
lock
xor
ins
pop
out
div
dec
mov
arpl
cld
xchg
sbb
mov
xor
dec
test
pop
jecxz
inc
cld
and
cmp
aas
jmp
mov
adc
ds
cs
in
xor
neg
cwde
add
mov
ret
xchg
jecxz
movs
dec
sub
int
cs
sub
enter
push
dec
bound
mov
imul
int3
js
arpl
sbb
(bad)
bound
jae
lock
jbe
(bad)
(bad)
cmp
fbld
cwde
mov
xor
rol
ror
or
inc
mov
loopne
rcr
test
imul
xor
shl
fist
jmp
(bad)
dec
xchg
(bad)
fisub
daa
ja
mov
dec
xchg
mov
and
sub
stc
je
sub
int
and
and
test
sub
jne
or
pop
lods
fwait
sbb
out
adc
std
nop
loope
jecxz
mov
or
addr16
cmps
lahf
mov
lds
cmc
pop
imul
pop
(bad)
mov
and
pop
mov
test
jmp
dec
sub
jmp
mov
xor
mov
stos
std
inc
(bad)
sub
sbb
mov
mov
arpl
imul
add
ss
mov
in
sub
jbe
dec
shr
sub
(bad)
sub
jle
outs
int
mov
xor
cmp
stos
scas
repz
and
inc
push
enter
push
and
ret
mov
jle
into
cli
pusha
or
out
rol
jae
shr
test
sahf
shl
jp
data16
add
repz
adc
ret
leave
retf
dec
arpl
jbe
daa
sub
jns
cmp
loop
sahf
and
pop
push
cmc
inc
out
mov
jmp
(bad)
ja
stc
call
add
cmc
xor
sbb
xchg
neg
imul
scas
mov
xchg
test
mov
cmps
cmp
xchg
ins
mov
mov
les
shl
pop
xchg
pop
repnz
(bad)
fwait
inc
cdq
sub
and
rcr
jo
fist
rol
cld
pop
add
cmp
push
mov
sbb
imul
cmp
shr
inc
inc
sub
sub
std
mov
scas
lods
xchg
mov
mov
push
arpl
imul
sbb
clc
add
mov
(bad)
fmulp
fdivp
js
das
push
mov
push
int
push
in
dec
mov
cmp
mov
xchg
jmpw
aad
jmp
mov
sbb
popa
dec
mov
shl
xor
repnz
popa
or
and
sbb
push
dec
add
mov
mov
push
ret
mov
jle
push
mov
sbb
repz
push
add
mov
sbb
xchg
mov
mov
movs
addr16
jmp
mov
out
loopne
pop
cmp
test
mov
pop
in
test
mov
js
call
mov
int
div
add
loop
mov
pop
sub
sbb
mov
stc
mov
(bad)
in
adc
push
ret
(bad)
pop
inc
jo
into
mov
inc
sub
imul
mov
jnp
dec
nop
out
or
js
ret
and
call
mov
repnz
scas
pop
pop
into
call
out
lds
pop
retf
inc
fcom
nop
cwde
(bad)
mov
push
test
cmp
jno
mov
into
push
jle
mov
aam
cmps
retf
or
inc
inc
sub
xchg
mov
dec
test
inc
(bad)
enter
xchg
cmp
and
add
outs
mov
lea
hlt
or
shl
popf
enter
pop
icebp
cmp
cmp
or
inc
pop
pop
stos
dec
xor
jmp
mov
sbb
fcmovb
cmp
inc
out
xor
sti
and
cmps
hlt
aam
mov
mov
pop
ss
inc
dec
mov
cwde
pop
lock
fsubr
les
pop
cmc
fistp
or
pop
mov
add
mov
push
xlat
stc
push
cmc
push
push
inc
or
mov
sub
ins
lea
xchg
test
rcl
test
adc
inc
mov
mov
aad
and
ror
and
and
jb
xchg
mov
dec
sahf
jle
xor
pop
inc
test
shr
sbb
add
mov
jmp
ds
adc
dec
cld
add
fwait
jno
pusha
(bad)
movs
xchg
out
mov
out
fldenv
and
call
dec
xchg
loopne
pop
pusha
daa
and
gs
xor
jb
lods
pop
and
mov
mov
pusha
add
inc
mov
mov
jp
push
and
outs
adc
adc
mov
add
xlat
sahf
cmc
fwait
sbb
ret
retf
lahf
mov
jo
push
dec
cmps
in
in
(bad)
pop
ficomp
mov
rcl
data16
(bad)
dec
sbb
les
cmp
cmc
int
ret
les
dec
movs
jl
int3
push
iret
fsub
xor
jmp
stc
push
ficom
inc
push
xchg
int
sbb
push
mov
retf
es
fnsave
out
jmp
xchg
fwait
aam
cmp
js
pop
shr
jne
test
push
sub
mov
pusha
outs
icebp
test
xchg
xor
sub
sub
gs
pop
dec
out
or
lods
xor
jp
fwait
test
scas
scas
add
jge
xchg
mov
xchg
fwait
cmps
adc
rcl
sbb
aas
dec
pusha
and
jnp
ja
bound
dec
lea
ret
mov
inc
fwait
rcr
bound
sub
and
mov
iret
js
jo
cwde
xchg
lock
push
adc
cli
sbb
cld
je
ds
(bad)
adc
lock
imul
retf
and
sbb
mov
xchg
sbb
xchg
lods
test
xchg
fimul
and
jecxz
test
inc
retf
or
and
xor
sub
loopne
fimul
mov
inc
(bad)
mov
mov
bound
imul
pop
movs
and
stc
ins
inc
sbb
movs
nop
push
ds
xor
cld
imul
mov
icebp
or
ins
shrd
mov
pop
push
push
adc
aas
sub
lock
mov
call
cmp
out
cmps
pop
jbe
out
repz
nop
mov
lods
lods
push
xchg
repnz
cli
pop
xor
xor
mov
push
movs
pop
in
cmps
(bad)
xlat
cmpps
adc
in
imul
pop
push
popf
mov
inc
xchg
fmul
xchg
nop
pop
ds
lock
dec
inc
jg
pop
inc
stc
push
push
scas
inc
xchg
mov
ret
pop
inc
push
push
jmp
in
enter
sti
not
mov
xlat
xor
cmp
nop
push
jb
sub
out
neg
bnd
cwde
mov
scas
pop
push
adc
jl
imul
sub
(bad)
aam
push
loop
add
ret
push
xlat
out
jmp
jmp
popa
cmovbe
fadd
adc
fmul
out
adc
and
arpl
jno
xor
shl
pop
jmp
pop
int
xor
mov
mov
sub
cmps
test
(bad)
or
(bad)
push
call
dec
mov
je
pusha
arpl
retf
not
test
popf
inc
fnstcw
icebp
jg
mov
dec
or
rsqrtps
call
not
ja
jg
mov
mov
shr
and
cwde
sbb
pop
sub
add
dec
sbb
in
mov
(bad)
mov
mov
pop
lods
mov
mov
add
jbe
push
stos
push
mov
push
out
shr
mov
imul
xor
and
in
ja
call
cwde
mov
mov
pop
mov
in
dec
pop
push
xlat
xchg
add
stc
(bad)
xor
js
mov
cmp
rcl
dec
mov
ss
jg
sub
cli
les
add
in
shl
jae
push
popf
add
xor
mov
push
stc
xor
cmps
(bad)
pop
in
pushf
push
out
or
inc
and
scas
xlat
jl
loopne
test
inc
inc
test
je
pop
int3
cmp
fld1
jae
pushf
in
mov
jnp
sub
test
pop
sub
movs
push
icebp
push
cmp
addr16
jmp
shr
js
sub
jne
pop
and
cs
(bad)
lods
push
sar
dec
sub
mov
cmp
jmp
xchg
sti
pop
push
mov
and
aad
jle
(bad)
je
out
leave
mov
xor
sub
retf
mov
and
enter
mov
int3
outs
in
cli
mov
inc
test
ret
mov
and
in
dec
scas
scas
outs
hlt
cmp
es
add
in
sub
mov
add
movs
mov
gs
cmp
int
mov
clc
mov
cmps
les
mov
sub
sbb
sbb
rcl
add
out
inc
mov
pop
inc
push
push
test
cmp
sbb
sahf
scas
lea
mov
jo
sub
cmps
dec
test
xchg
pop
and
cmp
ror
jnp
in
das
stc
mov
pusha
sbb
mov
cmp
pop
or
fcom
mov
movhps
into
repz
lods
push
int3
inc
ins
sahf
mov
jbe
mov
cld
les
mov
test
jnp
and
sbb
mov
arpl
ins
push
mov
bound
scas
jg
inc
mul
ret
pusha
into
jge
ins
cmp
sbb
in
cli
xchg
mov
dec
pop
mov
adc
xchg
ds
repz
inc
push
xchg
scas
dec
loopne
mov
cld
stos
mov
fwait
or
xchg
mov
and
sar
cld
icebp
das
daa
pop
sbb
scas
das
stos
adc
into
push
add
arpl
aad
shl
icebp
jmp
sbb
jbe
pop
js
in
call
lock
int
mov
(bad)
mov
inc
mov
ret
dec
inc
adc
push
pop
jl
inc
test
or
js
mov
jno
push
adc
mov
daa
and
mov
cmp
and
jl
add
and
dec
mov
hlt
and
fist
daa
vmread
sbb
ja
fwait
sub
mov
push
ret
stos
and
and
pop
fmul
dec
mov
pop
bound
mov
or
dec
mov
cwde
or
jmp
adc
sbb
pxor
jns
clc
arpl
adc
nop
mov
fisttp
popf
or
dec
inc
shl
xor
mov
inc
cs
lods
inc
imul
cld
xchg
sub
mov
stos
cmps
call
call
adc
int3
inc
repnz
loopne
fs
out
mov
std
test
fucomp
inc
inc
inc
push
inc
xor
adc
adc
sub
push
into
(bad)
pop
cli
push
jg
in
cmp
mov
(bad)
shr
inc
mov
adc
enter
jl
(bad)
or
imul
imul
mov
and
push
retf
je
cmp
leave
std
xor
lea
in
loope
inc
pop
add
cmp
mov
jmp
xchg
sbb
sbb
mov
mov
inc
aas
popf
loop
xor
imul
fsub
scas
out
and
aam
jl
dec
mov
or
inc
pop
push
fst
cmps
cmp
pop
cmps
push
and
add
into
jg
dec
mov
pusha
imul
dec
push
or
adc
or
mov
sub
(bad)
lods
or
mul
nop
hlt
push
and
and
sub
inc
bound
fwait
cmps
sub
test
jg
xor
xchg
inc
mov
sbb
lea
scas
es
lods
fcmovnbe
jg
(bad)
sbb
adc
adc
xchg
arpl
popf
xchg
scas
cdq
inc
pop
test
fistp
ffree
pop
dec
jbe
dec
outs
inc
xchg
gs
arpl
out
pop
(bad)
sti
cld
int3
add
or
mov
fcom
(bad)
xlat
lods
arpl
add
out
test
loop
repnz
sub
mov
sub
aas
pop
mov
idiv
cmp
repz
mov
iret
js
jle
ja
sub
or
stos
push
ror
mov
call
pop
ret
repz
push
out
lahf
cmp
imul
sub
sbb
mov
pop
leave
nop
ins
dec
das
mov
mov
mov
fsub
imul
adc
aas
add
push
into
in
ror
push
jmp
aaa
add
jge
mov
in
push
cmp
std
in
test
cmp
fistp
stc
xchg
ja
int3
jl
xchg
jne
jnp
xchg
sub
adc
clc
ror
imul
sbb
sbb
cwde
inc
jmp
mov
ds
into
aas
pop
jno
leave
jecxz
mov
cmp
mov
add
push
es
bnd
mov
fadd
xchg
daa
sub
jbe
xor
fwait
aas
sub
mov
ja
pop
pop
popf
xor
sub
in
cwde
add
sbb
sbb
adc
cwde
fimul
dec
jmp
push
xor
lods
enter
dec
rcr
enter
int
pusha
loopne
sub
mov
aaa
imul
pop
pop
cmps
or
test
dec
enter
push
or
lock
dec
sub
jp
jmp
(bad)
out
inc
jnp
push
jmp
repnz
cli
hlt
daa
cli
rol
in
(bad)
adc
cdq
ins
sub
dec
inc
rcl
sbb
addr16
pusha
movs
sar
scas
add
mov
mov
adc
mov
cld
ds
call
fbstp
cdq
inc
outs
aad
and
sar
ins
popa
lahf
mov
jbe
sbb
mov
ds
imul
mov
cld
dec
out
repnz
add
and
scas
les
mov
cmps
lea
mov
retf
clc
pop
pop
ret
(bad)
mov
fdiv
add
push
push
retf
stos
out
sub
sub
add
jmp
daa
add
xor
rol
outs
and
cdq
dec
clc
cdq
add
mov
cmp
inc
mov
add
sbb
push
add
inc
mov
call
push
out
sub
fisttp
sub
xor
hlt
call
mov
pop
inc
xor
sub
retf
cmp
xchg
cld
dec
loope
(bad)
(bad)
outs
jb
mov
(bad)
out
xor
inc
pop
push
xor
rol
cmp
imul
test
call
inc
dec
cwde
push
in
xchg
push
pop
fstp
inc
out
cmc
mov
and
and
scas
mov
popa
jb
repz
or
retf
out
xchg
aam
push
pop
or
icebp
xor
lods
jbe
call
mov
sub
mov
je
xchg
ret
mov
scas
mov
push
jle
scas
mov
fwait
rcr
call
jecxz
int
mov
mov
pop
test
loopne
stos
mov
mov
retf
mov
outs
sub
jno
mov
popa
jp
outs
or
or
gs
fcmovu
ja
or
jg
clc
push
div
mov
jl
sbb
cmp
and
cmps
inc
jae
out
inc
dec
xchg
sub
add
ja
pop
ins
sti
ss
out
cld
sbb
(bad)
outs
fwait
push
jmp
repnz
sbb
mov
int
clc
push
es
fldcw
cwde
xor
out
jmp
mov
pop
divps
ffree
xchg
inc
adc
leave
jmp
xchg
fld
adc
jmp
sti
int3
dec
outs
jge
mov
retf
(bad)
loop
and
mov
sar
lahf
inc
inc
jns
xchg
xchg
xor
dec
mov
inc
add
out
addr16
outs
loop
je
lahf
mov
retf
jmp
dec
or
pop
adc
jecxz
push
lock
sbb
shr
xchg
sbb
imul
cmc
jbe
adc
sub
shr
or
xor
and
hlt
xchg
push
push
jmp
cmp
fsub
inc
xlat
test
add
or
dec
test
cmps
int
push
pop
push
mov
dec
and
ffreep
data16
mov
sub
cmp
fwait
mov
les
cdq
retf
daa
xor
ret
add
iret
cmp
cwde
inc
xchg
and
jno
adc
jns
sub
inc
cmc
es
pop
lahf
inc
lds
jmp
lea
and
in
lea
pop
sbb
adc
popa
adc
mov
add
push
inc
cmp
sbb
out
in
push
mov
xchg
lods
jl
imul
xor
jle
outs
mov
not
dec
push
adc
in
repnz
mov
sub
dec
or
shl
popf
in
push
sbb
sar
mov
inc
bound
inc
aaa
(bad)
mov
out
dec
test
rcl
shl
xor
repnz
add
rcl
fidiv
pushf
add
add
loope
out
xlat
xchg
sub
fsubr
in
inc
cmp
sub
jmp
xchg
jbe
mov
lds
les
mov
add
adc
dec
repz
pop
sub
int3
fucomp
shr
cmc
sahf
cmps
sbb
mov
(bad)
pop
dec
add
push
fisub
test
das
ja
xchg
push
dec
push
or
imul
jp
stos
xchg
cmp
jno
pop
sbb
cmp
arpl
movs
jmp
adc
sar
pop
cmp
push
dec
jmp
or
xor
mov
xor
fucom
add
dec
cmp
push
(bad)
les
pop
sub
xchg
cmp
aaa
es
push
inc
dec
mov
pop
xchg
movs
adc
shl
call
nop
imul
in
push
sahf
cwde
lock
jae
sbb
fisttp
sbb
mov
cli
loop
test
call
call
retf
out
xchg
inc
out
jb
out
aas
cmp
jmp
jg
mov
jle
jl
out
repnz
scas
dec
add
cmp
pop
dec
pop
dec
ja
inc
sub
rol
test
or
jmp
sbb
mov
mov
xchg
fisubr
xor
mov
aas
stos
jecxz
ins
jno
es
cs
daa
scas
pop
inc
adc
cmp
ror
repz
mov
mov
or
fidivr
cld
cmps
dec
movs
mov
mov
push
lods
aam
push
mov
mov
inc
aad
gs
cli
fldcw
and
jmp
call
test
rol
es
repz
xor
call
lds
mov
and
(bad)
jne
and
outs
mov
test
or
in
xor
test
pop
int
jae
fadd
push
xchg
sub
stos
mov
outs
xchg
or
inc
(bad)
(bad)
pop
(bad)
sti
sub
popf
mov
arpl
sub
and
lea
les
aam
or
xchg
(bad)
cmc
dec
xor
shl
push
fist
leave
adc
mov
or
clc
call
iret
shl
add
popa
(bad)
inc
adc
xchg
in
call
rcl
fnstsw
pusha
or
push
cmc
cld
adc
out
xor
ds
mov
out
das
mov
pop
mov
fisttp
mov
push
outs
int3
fwait
jle
cmc
lds
xlat
call
xor
jo
ins
sbb
push
inc
sub
stos
dec
sub
clc
push
or
pop
push
mov
lock
mov
jle
mov
push
cmp
inc
sbb
jle
xor
push
outs
inc
xchg
bound
shl
rcl
cmc
jae
jb
mov
push
push
je
ja
outs
popf
push
push
sbb
rcr
shr
xchg
cmps
rol
mov
out
mov
pop
cli
mov
pusha
cmps
cmp
xlat
cmp
push
mov
gs
movs
inc
loope
(bad)
pop
(bad)
popa
rol
bswap
cld
mov
or
cmc
in
jge
mov
dec
mov
movs
in
les
pop
cmp
iret
ins
jne
lods
sahf
push
in
xchg
push
imul
aad
test
or
aas
in
cmp
shr
retf
jmp
mov
xchg
and
jnp
cmp
pop
sbb
xor
gs
mov
sahf
test
mov
ror
movs
inc
add
in
xlat
cmp
call
mov
push
jmp
dec
inc
sti
mov
js
(bad)
hlt
cld
mov
retf
fnstenv
and
int3
jmp
mov
into
mov
mov
xchg
pushf
or
das
cmps
inc
push
pop
(bad)
(bad)
ins
and
pop
scas
cli
pop
mov
sbb
popf
push
inc
lds
out
(bad)
cmp
pushf
jb
scas
outs
loopne
mov
mov
mov
cmp
sub
sbb
cmps
shl
mov
(bad)
ins
and
xchg
ins
imul
mov
es
int3
js
mov
je
xchg
arpl
sub
imul
inc
lea
pop
push
jl
das
push
inc
cld
mov
pop
or
push
test
stos
sbb
and
in
inc
xor
fs
stos
nop
loopne
push
rcl
out
es
push
nop
pop
push
dec
repz
or
pop
push
xor
mov
xor
pop
mov
test
push
cdq
jle
shl
pop
pop
or
and
(bad)
dec
rol
push
outs
mov
jl
mov
and
add
call
cli
imul
or
call
jmp
or
mov
xor
lea
and
in
mov
sbb
and
cmp
icebp
push
and
in
repz
lds
shr
push
mov
in
and
fucomi
sbb
cwde
push
mov
cmp
dec
stc
loope
jne
(bad)
cmp
sub
in
std
sbb
in
test
outs
push
jecxz
clc
sbb
mov
dec
psubusw
pop
mov
pop
xor
call
cmp
pop
inc
sub
xchg
iret
test
lock
push
cs
inc
push
cmps
fiadd
sub
scas
ja
data16
xor
ffree
cld
jl
lahf
xchg
cmp
sub
sbb
sbb
pop
inc
test
outs
icebp
and
mov
push
imul
jp
mov
fld
cmp
xor
ror
imul
sbb
or
ja
enter
in
pop
dec
push
out
mov
into
retf
leave
sub
test
push
push
ins
cld
add
pop
adc
jns
loope
pop
and
or
pcmpeqd
sbb
movs
push
loop
adc
imul
pop
sti
xchg
lock
mov
scas
lods
into
jno
xchg
sar
adc
dec
(bad)
jge
mov
int3
mov
lock
pop
loope
(bad)
sbb
std
nop
xchg
sub
push
call
pop
call
pop
mov
int3
and
or
loope
cdq
outs
pop
in
mov
(bad)
jecxz
sti
push
pushf
jecxz
sahf
fiadd
dec
in
repz
ja
fdivrp
mov
fdiv
push
and
add
mov
xchg
loope
pusha
or
xor
call
lock
jge
mov
cwde
push
push
ins
and
inc
jo
ret
not
retf
jle
rcl
and
or
mov
cmc
mov
jmp
dec
sahf
(bad)
jmp
je
scas
cmps
(bad)
rcr
aad
inc
aad
xchg
xchg
pop
mov
(bad)
(bad)
retf
or
push
nop
xor
pop
xchg
test
fs
jg
mov
test
rcl
ds
shr
mov
scas
pop
mov
xor
jp
sbb
xor
ins
mov
jmp
add
ret
xchg
dec
adc
in
pop
mov
and
cmp
inc
(bad)
stc
cli
dec
cmp
pop
sub
out
jns
mov
retf
and
leave
add
and
mov
retf
arpl
sar
pop
add
repz
jbe
jg
popf
in
stos
(bad)
mov
popf
or
adc
retf
pop
cld
xor
call
add
sub
repz
loopne
mov
jle
in
cmp
cmp
lods
lahf
aam
or
into
jbe
push
test
rcl
pop
inc
xchg
retf
sub
ret
mov
push
jbe
pushf
dec
or
push
push
aaa
jge
daa
jbe
scas
push
out
mov
pop
fstp
sti
or
adc
arpl
add
pop
stc
(bad)
hlt
inc
gs
mov
mov
out
or
mov
test
repz
and
xchg
push
popf
cmc
add
aam
or
cmp
imul
mov
mov
xchg
in
push
out
push
lock
test
icebp
out
imul
add
sub
addr16
stos
imul
arpl
xor
test
pop
xchg
std
out
leave
or
sbb
dec
or
loopne
add
adc
mov
shr
pop
jp
sub
adc
fcmovnbe
out
pop
mov
jnp
xchg
ficomp
lahf
cwde
jns
out
push
mov
inc
cmc
(bad)
mov
cdq
or
and
repz
pop
ins
repnz
cmp
(bad)
fsubr
add
das
mov
xchg
pop
cdq
inc
nop
dec
jae
(bad)
mov
push
std
arpl
and
jmp
add
mov
pushf
jo
lahf
jp
pop
lahf
out
cld
pop
mov
adc
stos
jle
inc
out
arpl
outs
mov
fimul
(bad)
and
stos
adc
xchg
push
and
fdiv
inc
das
sbb
shl
outs
sbb
sbb
popa
popf
add
ins
add
cmp
jb
outs
jne
shl
sbb
xlat
cmp
stos
call
mov
icebp
and
jge
pop
adc
push
outs
aaa
or
out
add
ins
(bad)
mov
push
mov
pop
addr16
or
or
mov
pop
add
xchg
push
gs
pop
dec
sub
(bad)
mov
repnz
es
(bad)
mov
dec
fwait
inc
retf
aam
in
and
test
cmp
push
iret
jnp
mov
mov
sub
fisub
add
idiv
xchg
call
push
jno
data16
pop
in
xor
les
push
fnstcw
hlt
mov
push
sar
retf
mov
mov
test
xchg
xchg
or
stc
cld
scas
xor
pop
rol
leave
imul
mov
cmp
jb
jbe
cmp
fidiv
push
add
inc
jno
mov
ffreep
add
dec
mov
or
lods
shr
dec
xchg
cmp
mov
adc
sub
(bad)
mov
pop
nop
mov
stc
pop
add
or
sahf
lods
movs
fsubr
popa
fwait
imul
lahf
sbb
add
xor
adc
jne
xor
or
push
mov
stos
loope
add
in
inc
mov
dec
dec
mov
and
jbe
jg
adc
je
mov
sub
add
mov
je
out
in
dec
test
nop
cwde
into
inc
(bad)
cmc
add
fs
in
fbld
inc
gs
pusha
dec
xor
dec
dec
pop
ins
sti
cs
hlt
data16
ror
das
add
call
aad
add
inc
ficomp
outs
mov
ret
sub
mov
dec
or
adc
lea
jno
pop
push
mov
aam
mov
pop
lock
cli
cmps
sahf
xchg
into
pop
dec
test
sub
fsubr
fisubr
jp
mov
arpl
push
mov
mov
sbb
cmp
gs
jg
and
lea
sbb
addr16
sti
push
retf
xchg
jns
sbb
js
daa
out
out
gs
aas
out
(bad)
icebp
test
(bad)
push
sar
hlt
popf
push
adc
sahf
shl
mov
ja
and
push
cld
xchg
inc
or
movs
sub
push
div
xor
sbb
into
push
pop
dec
sbb
add
add
and
dec
jge
xchg
mov
pop
push
lahf
push
sbb
mov
cmp
dec
inc
ret
mov
inc
aaa
stc
cmp
xchg
inc
call
inc
loopne
adc
sub
jle
jbe
dec
xor
adc
out
add
xor
inc
add
push
retf
fsubr
sahf
push
movq
jmp
add
cmc
repz
pop
mov
adc
push
(bad)
fwait
push
mov
cmc
nop
push
int
enter
sbb
mov
mov
inc
adc
adc
mov
les
jmp
ins
push
clc
xchg
xor
pop
jg
pop
ja
out
rcr
adc
nop
jno
fimul
xor
adc
call
loopne
add
push
adc
mov
ror
sbb
xchg
in
loope
ins
mov
and
imul
pop
jl
outs
ret
addr16
jecxz
int3
adc
push
mov
cmp
lods
jecxz
fisubr
sub
fwait
sbb
leave
inc
aaa
xchg
cmps
pop
cmp
enter
sar
stos
fdiv
push
xor
ret
call
xchg
pop
pop
in
out
jno
cld
xchg
mov
and
mov
js
addr16
ins
dec
push
pop
push
outs
jbe
or
add
scas
mov
pop
sub
push
enter
sbb
mov
retf
push
or
sub
add
inc
inc
mov
sbb
mov
(bad)
mov
sbb
out
stc
js
icebp
sub
pop
repnz
inc
add
mov
into
loop
ret
scas
pop
add
movs
out
mov
adc
mov
cmps
(bad)
aaa
in
jmp
sub
(bad)
imul
mov
pop
push
adc
popf
mov
fwait
jmp
mov
cmps
push
sahf
cs
(bad)
loope
push
mov
cmp
int
xchg
sub
adc
mov
mov
fsincos
jb
clc
inc
outs
mov
jns
sbb
dec
out
gs
adc
jle
popa
jmp
jmp
iret
pop
cmp
dec
popa
mov
scas
ins
aam
arpl
dec
ret
jno
test
cmp
jmp
dec
sbb
outs
shr
lock
pusha
sar
cmc
adc
(bad)
mov
sbb
stos
xchg
mov
int3
(bad)
push
cld
mul
sar
(bad)
stos
sbb
test
xor
xchg
shr
pop
lods
mov
sub
nop
push
adc
and
sbb
retf
mov
cwde
call
mov
push
cmp
std
cmp
jecxz
popf
lods
jne
div
sub
inc
fadd
(bad)
jle
mov
shl
repz
dec
fucomp
xor
jnp
sahf
jmp
(bad)
push
leave
test
sbb
xchg
pusha
in
mov
dec
out
lahf
lahf
push
mulps
jbe
pop
out
out
jb
sbb
pop
stc
cld
iret
push
fiadd
mov
xlat
mov
ss
bound
xor
mov
call
daa
sub
es
xor
cmp
adc
repz
push
mov
sahf
fld
mov
cdq
xor
xchg
push
(bad)
icebp
mov
mov
or
mov
pop
bound
cmp
loop
dec
in
pop
xor
mov
dec
inc
scas
sar
mov
mul
xor
push
sbb
mov
std
sub
int3
dec
shr
pop
xchg
push
imul
xchg
jmp
and
repz
mov
js
push
fild
dec
push
mov
mov
and
mov
cwde
getsec
jle
mov
sub
test
aam
mov
fld
fcomp
das
or
popf
mov
adc
imul
dec
mov
nop
jp
fcmovbe
aas
(bad)
popa
or
dec
cmp
cmp
ret
(bad)
cli
pop
and
enter
jg
xchg
jmp
pop
out
xor
pop
jo
push
mov
loop
xor
mov
out
mov
jo
out
inc
imul
sbb
cwde
pop
sbb
jmp
dec
dec
js
retf
and
imul
sub
fmul
ins
stc
push
mov
cli
ins
jg
push
test
sub
in
inc
sbb
push
in
lock
add
push
sbb
xor
adc
sbb
bswap
cmp
sub
sub
mov
fsub
jne
mov
repnz
jne
mov
or
inc
jns
mov
dec
add
sar
ins
sbb
movs
(bad)
push
push
loopne
stos
pusha
jno
es
add
out
fistp
rcr
push
sbb
xor
lods
ds
sub
mov
jl
(bad)
(bad)
mov
sti
(bad)
or
sub
push
ja
jno
retf
jmp
xor
popf
stc
nop
les
inc
shr
mov
inc
dec
and
scas
call
xor
xchg
push
scas
shr
mov
add
adc
add
mov
cmc
jge
mov
and
clc
sub
daa
aaa
lock
arpl
jne
mov
xchg
xchg
pop
and
aam
jo
and
jnp
mov
iret
out
mov
xchg
xchg
adc
inc
fidiv
xor
pop
push
lock
rcr
popa
jbe
inc
icebp
popa
sub
or
mov
adc
arpl
mov
adc
leave
cdq
cmp
cs
xchg
cmp
jae
call
sub
mov
inc
aad
ficomp
retf
add
pop
sub
or
mov
(bad)
out
std
dec
cmp
dec
js
push
lods
mov
fld
pop
aad
or
lock
jp
inc
fisttp
(bad)
scas
repnz
mov
and
sbb
adc
dec
jnp
mov
mov
pop
sbb
and
cmp
mov
fild
icebp
push
inc
dec
int
add
outs
cmp
xor
push
xchg
inc
daa
push
jecxz
mov
mov
pop
enter
popf
push
repz
mov
mov
in
pop
push
ja
mov
xor
inc
xor
dec
ja
imul
add
lods
lea
add
mov
mov
inc
shl
stc
mov
xor
dec
pop
movs
xchg
pop
mov
xchg
or
push
jbe
pushf
or
mov
not
mov
lea
lds
movs
bound
call
and
int
(bad)
inc
addr16
sub
inc
xlat
sub
mov
sub
lea
xor
xchg
mov
jle
in
xor
adc
mov
daa
pop
adc
lds
je
cli
ficom
inc
adc
int3
mov
jge
in
stos
cmp
xlat
xchg
jge
mov
jecxz
adc
sub
or
push
jo
cmps
xchg
movs
jnp
es
stos
in
iret
xchg
push
jge
ins
xchg
movs
lock
sbb
jge
outs
add
(bad)
sti
cli
xchg
loop
push
imul
jb
out
pop
call
shl
mov
mov
xchg
ja
adc
xchg
adc
out
call
mov
popa
push
jnp
sti
popf
jns
inc
add
pushf
icebp
dec
call
cli
out
dec
shl
sbb
or
fs
cwde
cmp
adc
pop
jecxz
jae
sahf
rcr
jmp
jb
call
imul
pop
pusha
jno
and
pop
fbstp
cdq
es
dec
dec
aad
push
push
lea
data16
and
cmp
inc
daa
jnp
(bad)
iret
cmps
test
std
and
sbb
daa
and
test
add
and
push
jbe
stos
imul
lods
ds
out
dec
and
dec
jl
cmps
mov
xor
xchg
in
and
pushf
inc
pop
lods
std
xchg
xlat
mov
arpl
push
jo
mov
mov
lods
loop
retf
or
sbb
and
mov
and
adc
stc
push
push
cmc
test
mov
push
movlps
dec
or
xchg
inc
dec
add
pop
add
in
pushf
xchg
xor
mov
test
ficom
outs
inc
(bad)
in
sbb
pop
cmp
and
sub
out
jmp
loop
cmps
xor
push
push
les
xchg
iret
mov
js
loopne
xchg
iret
adc
sub
stos
(bad)
mov
(bad)
repz
jge
push
imul
jns
mov
loope
popa
sub
ficomp
sahf
es
or
inc
mov
sbb
xchg
enter
cmp
outs
in
mov
mov
adc
cmp
sub
dec
scas
jg
daa
test
push
mov
cmps
and
in
(bad)
cmps
rcl
cmp
mov
xchg
pop
sub
xchg
fadd
cmp
jo
cmps
pop
ret
jg
(bad)
jbe
sub
arpl
and
pushf
jno
mov
adc
in
fisub
out
pop
into
xchg
adc
fwait
outs
loop
outs
adc
jo
sbb
push
sub
ret
jle
push
or
push
mov
(bad)
sbb
pop
pop
push
mov
pushw
out
aas
mov
leave
add
lods
stc
xchg
(bad)
in
xor
fisubr
push
jmp
movs
add
dec
int
jae
(bad)
mov
dec
push
imul
inc
fs
lods
(bad)
shl
or
xchg
sub
dec
xchg
aam
sub
pop
mov
inc
(bad)
cmp
dec
bound
mov
cmp
cmps
or
adc
jge
pop
and
xchg
pop
fpatan
loopne
pop
enter
sahf
daa
aam
imul
xchg
dec
or
mov
mov
xchg
lea
mov
push
mov
mov
mov
jge
and
stos
mov
(bad)
sbb
xchg
popa
sub
stc
inc
fistp
pushf
xchg
inc
or
mov
or
nop
bound
adc
inc
retf
sbb
cld
int3
sbb
ss
pop
les
xor
in
test
loopne
xor
dec
sbb
dec
inc
ins
mov
stc
hlt
xchg
add
jp
mov
cmc
push
loope
xchg
pop
scas
pop
mov
in
jmp
addr16
dec
(bad)
lods
fst
jp
shl
dec
inc
sub
inc
and
clc
cmp
rcl
xchg
jne
fs
jl
mov
jnp
imul
xchg
cmc
push
loope
ret
mov
cmp
inc
std
lea
and
sub
and
sub
jmp
in
xchg
in
dec
jne
sbb
arpl
adc
or
daa
sti
cmp
std
sbb
push
cs
aaa
xor
in
xor
dec
mov
fld
push
in
mov
mov
adc
mov
push
jl
mov
add
stos
pop
sbb
or
xor
sbb
mov
loope
fwait
push
pop
les
adc
out
sti
leave
pop
add
inc
add
lods
sub
(bad)
push
add
cmp
cmp
dec
jl
retf
sub
cmp
jmp
enter
jl
xor
mov
xchg
or
inc
xlat
test
cmps
retf
movs
cmp
mul
mov
lods
xchg
icebp
xlat
sbb
push
push
cmp
mov
daa
imul
std
xchg
xor
mov
mov
xor
push
jmp
dec
lahf
in
sub
enter
xor
mov
mov
repz
push
aas
fstp
iret
cld
cwde
aam
loopne
loope
jecxz
xchg
into
rcr
dec
dec
repnz
ds
jp
jle
pop
in
sub
hlt
lds
fstp
loopne
dec
xchg
retf
outs
ror
mov
repz
pusha
jmp
sbb
and
jns
xor
je
mov
cmp
jecxz
cmp
cmc
rol
dec
imul
and
mov
mov
jmp
jmp
dec
and
pop
hlt
out
psubw
ins
fsubr
push
cld
xchg
sub
sti
and
mov
mov
add
aas
fst
mov
fisubr
ja
div
iret
push
xchg
test
add
add
jnp
aas
fistp
repz
hlt
jnp
in
xchg
pop
scas
lods
jnp
in
outs
sub
sbb
outs
jg
shl
jns
inc
add
push
icebp
addr16
cmp
(bad)
xchg
pushf
pop
push
fwait
or
xchg
mov
pop
movs
jb
ins
leave
pop
and
lods
or
mov
push
ins
enter
fcomip
xor
test
push
and
(bad)
cmps
popa
call
in
pop
lea
pop
mov
mov
nop
jno
das
mov
jg
xchg
in
pop
das
or
ret
stos
mov
cmc
xchg
ffree
mov
jne
push
xor
push
pop
mov
clc
in
ss
ret
jne
mov
repnz
cdq
lods
push
jne
xor
call
dec
push
mov
pop
rol
push
xor
cmp
std
cmp
das
(bad)
inc
sbb
ins
movs
mov
adc
stos
xor
mov
mov
mov
pusha
or
ret
ret
and
jge
popf
cmp
rcr
push
hlt
popf
stc
(bad)
cdq
int3
retf
(bad)
retf
cmp
lahf
adc
ja
test
jnp
scas
adc
xchg
mov
and
mov
pop
add
(bad)
dec
inc
push
(bad)
popf
mov
call
jmp
dec
scas
clc
and
pop
stos
dec
cmps
cmp
or
sbb
cmp
(bad)
dec
add
jo
test
jae
(bad)
cmc
(bad)
call
jge
jmp
sub
pop
rcr
lock
push
add
adc
inc
and
mov
loope
gs
mov
or
add
xchg
mov
shl
cs
into
movs
pop
scas
mov
hlt
sbb
pusha
xor
pop
cmp
(bad)
(bad)
mov
sar
adc
jg
sbb
push
cmp
call
(bad)
call
jo
sbb
pop
test
cmc
sub
xor
rcl
imul
imul
dec
pop
repz
mov
in
sub
mov
adc
xchg
in
test
jecxz
mov
push
das
inc
nop
pop
(bad)
xor
popf
int3
movs
sub
inc
in
push
sar
and
js
jnp
and
pushf
pop
std
jle
std
int
mov
adc
add
mov
fld
cdq
inc
retf
jg
mov
pop
in
push
pop
and
mov
pop
mov
test
mov
dec
cmc
out
xchg
loop
push
aad
push
and
out
and
dec
stc
adc
je
fistp
mov
js
pusha
xchg
jbe
dec
xchg
adc
out
stc
add
dec
pop
aad
sbb
xor
std
adc
std
or
xchg
mov
cmps
pop
add
in
ins
je
mov
mul
inc
inc
pop
dec
pop
repnz
out
and
push
loope
jl
add
and
push
call
cdq
mov
or
mov
into
xchg
fs
sub
mov
pop
xchg
adc
inc
fnstsw
dec
dec
mov
jb
push
out
dec
cmps
sub
mov
add
loopne
xor
xor
dec
jge
cli
std
xchg
cmc
sub
aam
cdq
mov
sti
mov
push
ja
or
out
inc
stos
inc
sub
sub
jo
ja
jle
(bad)
xchg
fmul
sub
and
jae
mov
dec
push
mov
pop
mov
std
shr
and
cmp
xor
movs
fwait
pop
jle
cld
retf
mov
pop
xchg
ds
js
push
stos
popf
(bad)
xor
push
sub
mov
popa
inc
jnp
push
inc
movs
lea
inc
in
pop
mov
xchg
adc
aad
mov
dec
adc
sahf
fdivr
dec
xchg
dec
add
pusha
outs
pop
cdq
xchg
loop
adc
leave
mov
out
test
es
mov
push
jns
fild
and
test
mov
push
or
enter
pop
push
sbb
aaa
arpl
dec
inc
pop
add
sub
fsubr
sub
nop
mov
(bad)
gs
(bad)
sbb
and
push
adc
cwde
xor
cmps
cld
movs
mov
dec
mov
pusha
adc
cs
fs
mov
or
jmp
push
pop
mov
push
std
sub
mov
inc
test
or
mov
retf
(bad)
add
out
sub
fwait
or
jge
dec
fbstp
xchg
xchg
enter
dec
cmp
pop
gs
xchg
jno
in
mov
cmps
inc
mov
pop
fnsave
loop
pop
mov
mov
xor
rol
and
(bad)
jle
cdq
sbb
push
(bad)
retf
sbb
or
addr16
xor
or
bound
sub
out
scas
ret
mov
inc
mov
cmp
aaa
les
mov
je
inc
jmp
push
adc
dec
lea
scas
xlat
pop
adc
movs
pop
jmp
jle
pop
into
add
jle
shl
loop
popf
popa
stos
xor
iret
xchg
clc
pop
lods
lods
mov
jp
rcl
mov
(bad)
out
adc
jb
sub
clc
js
stc
(bad)
sar
cmc
or
daa
sbb
lods
sti
mov
sti
or
mov
xchg
mov
jne
loop
fcmovnu
mov
cld
add
push
mov
xor
pop
stos
jg
push
jl
das
ffreep
cmp
aas
daa
push
mov
movs
pop
aas
sub
sub
push
iret
pop
push
loope
outs
dec
stos
xor
mov
in
iret
dec
push
mov
jb
es
push
cmp
mov
retf
and
push
shr
sbb
fld
lods
test
je
aas
rol
mov
xor
pop
jg
stc
arpl
(bad)
jg
push
mov
pop
or
add
xor
mov
push
jl
xor
dec
sbb
mov
push
sbb
adc
add
push
setge
and
fsubr
mov
leave
sub
aad
jecxz
dec
cmp
int
xor
aam
outs
jl
retf
aam
mov
mov
pop
and
xchg
xchg
pop
adc
fisub
xor
rcl
mov
jp
push
adc
jmp
inc
das
fwait
shl
fs
jns
movs
cmp
imul
sbb
mov
(bad)
push
clc
and
daa
stos
mov
dec
push
outs
inc
dec
sar
(bad)
cmps
push
cld
mov
inc
xor
xchg
js
mov
mov
pop
retf
aad
inc
mov
xor
add
sti
adc
call
sub
ins
(bad)
sub
xchg
mov
lods
rcl
retf
cmps
mov
shr
jae
mov
adc
jno
inc
sahf
or
mov
retf
adc
cmp
push
jg
scas
fs
and
jecxz
xchg
and
gs
in
or
xchg
mov
cmp
pop
and
dec
cmp
mov
ins
xor
repz
pop
repz
loope
xchg
ja
icebp
adc
stc
(bad)
loope
lds
cmc
test
shr
adc
shl
sbb
mov
retf
daa
mov
dec
xor
aam
sub
retf
push
mov
shr
out
js
inc
into
shl
jb
xchg
push
or
jne
jmp
jbe
sbb
bnd
jge
or
in
add
inc
std
sti
fdivr
and
cmp
adc
xchg
or
mov
push
jecxz
or
mov
pop
pop
push
xchg
adc
mov
stos
mov
scas
jmp
addr16
adc
cmps
es
xchg
repz
cmp
nop
pop
sbb
stos
or
rol
scas
out
pusha
inc
or
outs
xchg
and
cmp
sbb
repz
xor
call
stos
or
es
mov
xchg
xor
mov
xor
sbb
(bad)
mov
add
test
shr
sub
mov
je
leave
jge
xor
inc
xor
and
inc
push
stos
fmul
jne
(bad)
adc
stos
pop
add
mov
add
stos
sub
sbb
mul
bound
add
pop
addr16
neg
sub
mov
mov
addr16
outs
sbb
mov
aaa
sub
movs
in
mov
sub
push
scas
dec
mov
pop
std
jle
addr16
fadd
pop
out
rol
and
test
jo
ds
xchg
in
dec
stos
mov
into
jg
aas
jmp
mov
shr
das
mov
mov
outs
js
ret
push
jmp
push
sbb
ja
rol
cdq
test
jmp
cli
cmps
cld
mov
cdq
mov
xchg
lods
sti
push
add
je
lds
mov
add
or
xchg
loopne
cli
jo
mov
mov
pusha
ds
pop
test
and
mov
xchg
icebp
mov
in
xchg
xchg
(bad)
jo
sub
fild
jo
sub
arpl
pop
adc
mov
sbb
loop
mov
ins
inc
icebp
and
mov
leave
ret
lahf
test
arpl
cmp
or
test
sub
mov
dec
shl
mov
pop
repnz
int
add
inc
xchg
xchg
es
mov
addr16
fs
and
out
adc
or
aam
ret
add
aas
sub
inc
adc
fisubr
mov
or
test
les
jae
xor
pop
cmps
ret
in
in
sub
dec
xchg
fld1
imul
inc
inc
cmps
jmp
shl
mov
xlat
std
pop
pop
push
pop
nop
jmp
pop
and
mov
inc
inc
xchg
mov
sahf
out
or
dec
shl
cmp
pusha
jl
int3
cmp
lds
cmp
ss
dec
call
ins
xor
or
mov
mov
cmps
adc
cmp
jmp
push
and
sbb
dec
lahf
pushf
mov
cmps
mov
repz
daa
mov
push
jmp
(bad)
adc
pop
xor
xchg
mov
dec
xchg
xor
xchg
loope
fstp
mov
retf
cs
adc
xlat
add
xor
repnz
xor
iret
not
and
xchg
rol
xchg
ret
pop
add
xchg
lds
mov
hlt
(bad)
pop
outs
mov
jns
cmp
sar
or
fstp
pop
dec
lahf
pop
test
mov
cli
lods
loopne
shr
repz
js
pop
shr
mov
in
and
pusha
mov
xor
(bad)
sub
mov
jmp
mov
out
sub
pop
jno
out
cdq
push
mov
dec
inc
or
pop
xlat
int
movs
and
mov
cmp
add
pop
fdiv
addr16
(bad)
and
test
stos
push
add
lock
stc
jae
stc
pop
xchg
fistp
test
jb
inc
push
jmp
inc
mov
fcomp
and
jge
cwde
and
ins
xor
sub
mov
sbb
sahf
repz
mov
inc
out
in
jns
hlt
push
cmp
pop
test
(bad)
pop
repz
sbb
in
test
mov
rcr
sub
mov
pop
adc
push
or
push
popa
stc
scas
push
dec
mov
cwde
test
(bad)
cmp
enter
aam
(bad)
jno
jne
rcr
icebp
push
add
jae
test
add
in
cdq
ins
div
shl
jns
je
pop
std
test
fisubr
pop
pop
inc
call
xor
arpl
jecxz
cmp
jae
div
xchg
jo
mov
push
(bad)
shl
cmp
pop
stos
fldenv
jecxz
arpl
dec
inc
xchg
das
dec
xor
sbb
(bad)
sbb
inc
mov
cwde
or
outs
or
push
(bad)
mov
fwait
inc
inc
dec
push
imul
xor
cmps
int
jb
jo
(bad)
mov
das
mov
pop
outs
dec
dec
pop
fnstcw
test
neg
jbe
sub
test
loop
out
dec
pop
and
jno
xchg
popf
neg
sti
jae
or
into
push
test
xchg
enter
fisttp
mov
(bad)
mov
dec
xor
out
add
or
rcl
sahf
jge
xor
push
repnz
mov
mov
dec
push
or
sbb
mov
pop
repnz
mov
sbb
jne
jmp
in
in
mov
mov
imul
cld
aad
in
rcl
inc
in
pop
xor
cli
jb
push
int
ror
mov
pop
mov
pop
iret
cmp
daa
pop
xor
inc
cmc
ror
cmp
(bad)
cmc
dec
(bad)
push
mov
jmp
sub
nop
xor
pushf
jg
cmps
test
ret
mul
push
sbb
cmp
xor
(bad)
dec
out
pushf
bound
nop
pushf
mov
push
adc
lods
jg
xchg
fnsave
push
sbb
jae
push
or
adc
mov
int
pop
push
xchg
xchg
clc
data16
pop
jo
xchg
mov
adc
pop
scas
scas
pop
jo
cmp
sar
leavew
cmp
shl
xchg
jns
and
sub
mov
imul
inc
add
in
dec
aas
in
pop
bound
retf
inc
lock
xchg
data16
popf
sahf
jns
jno
add
adc
cli
(bad)
cli
bound
push
enter
adc
adc
xor
and
das
or
and
aam
pop
mov
ret
pop
repz
psadbw
xor
xchg
dec
pop
shr
sub
popf
fwait
call
xor
adc
call
in
pop
stc
pop
adc
push
cmp
outs
pop
ficom
sahf
cmp
mov
jae
les
inc
fld
sar
add
icebp
stos
clc
add
aam
xor
in
sbb
xor
sub
xchg
popw
repnz
jge
in
lea
xor
retf
pop
je
jno
mov
and
push
jnp
and
dec
nop
test
fst
jmp
sub
mov
dec
nop
int
scas
dec
aas
push
mov
pushf
inc
mov
push
adc
mov
cwde
lods
mov
out
pop
pop
outs
sub
call
pop
ret
js
mov
dec
adc
cdq
rcl
and
sbb
jae
fisttp
in
and
(bad)
sbb
and
pop
fs
mov
arpl
cmp
aas
pushf
xor
xor
jns
imul
stos
sub
push
mov
or
cmp
pop
fs
ja
fisttp
jnp
add
je
xor
fisubr
jg
cwde
or
(bad)
and
cwde
dec
sbb
sub
sub
(bad)
test
xchg
jns
xor
adc
xchg
ror
mov
mov
dec
jge
mov
xor
mov
lahf
stc
arpl
push
shl
push
call
push
fisub
aaa
fdivrp
loope
adc
call
mov
jae
or
test
add
cmp
ins
push
and
jo
inc
or
ret
std
mov
call
je
movs
js
ins
jp
js
pop
mov
mov
push
xor
hlt
movs
cmp
(bad)
jmp
pop
mov
pop
mov
cmps
xchg
js
test
arpl
or
(bad)
mov
nop
cwde
lea
ja
mov
push
xor
add
ss
adc
lods
outs
push
loope
mov
sbb
cmps
stos
xor
adc
and
push
mov
jbe
or
or
pop
sbb
(bad)
cld
dec
data16
cmp
adc
daa
add
push
mov
retf
or
outs
and
call
jae
sbb
sbb
sub
jbe
scas
hlt
lods
mov
mov
adc
int
add
fistp
gs
loope
dec
or
add
test
lods
jecxz
mov
xor
rcr
pop
xchg
xlat
adc
or
fcmovu
adc
pusha
inc
fwait
icebp
pop
pop
fisub
push
inc
mov
loope
(bad)
arpl
pop
loopne
sar
jecxz
sbb
push
lock
or
push
in
outs
xchg
inc
(bad)
fadd
mov
lods
fcmovu
push
jmp
dec
ins
xchg
mov
or
loope
loop
xor
mov
xacquire
fsubr
xchg
cmp
shr
scas
add
in
cmp
in
mov
sbb
fnstsw
cmps
shl
js
mov
inc
in
adc
fyl2x
and
imul
sub
and
mov
or
popa
cmps
sti
add
inc
cmp
adc
repz
xor
xor
fcmovnbe
(bad)
mov
xchg
mov
and
sti
fist
mov
push
dec
jecxz
mov
loop
repz
fcmovnu
mov
ret
(bad)
pop
sub
nop
enter
cwde
test
pop
cmp
das
adc
push
arpl
(bad)
loopne
pop
mov
stos
jb
push
xchg
pusha
cmp
int
test
jo
test
mov
bound
or
je
std
loop
scas
leave
pushf
jmp
pop
fmul
in
push
mov
aaa
stc
dec
adc
pop
dec
add
and
fwait
xor
sbb
test
mov
test
and
or
pop
add
jp
loope
ins
pop
(bad)
fisttp
loope
push
aaa
into
mov
imul
adc
es
sub
sbb
jmp
push
fsubr
xchg
(bad)
scas
mov
repz
jecxz
loopne
retf
inc
jg
scas
cs
dec
(bad)
out
test
jge
dec
ins
mov
not
mov
pop
mov
jno
mov
sbb
movs
dec
ds
inc
push
cmp
into
pop
push
jl
or
push
adc
and
hlt
jg
sub
push
xlat
or
loop
dec
sub
mov
fistp
adc
push
xchg
or
xor
xchg
enter
loope
mov
test
imul
aaa
addr16
aaa
jl
(bad)
adc
xlat
shr
pop
sbb
inc
mov
jno
nop
sub
ret
fnsave
jmp
push
add
fdiv
pop
pop
mov
sub
mov
sub
lahf
jecxz
push
cmps
and
mov
and
int
cld
ds
pop
jge
cmp
mov
dec
cmp
xor
add
xor
aaa
push
jae
dec
test
fld
fs
repnz
mov
cmp
cld
stos
retf
mov
pop
lods
cmp
gs
pushf
fisttp
fisub
or
test
push
fdivrp
cmps
mov
jns
push
arpl
(bad)
fisubr
stc
jns
jne
xor
(bad)
shl
mov
into
sub
or
cmp
inc
shl
cld
mov
push
std
out
fisubr
cdq
xchg
pushf
pop
xchg
shl
aas
cmp
adc
dec
jmp
je
sbb
in
es
and
aam
push
or
out
gs
xor
push
pop
mov
inc
in
fs
cs
dec
sahf
push
fild
pop
mov
and
test
dec
mov
dec
inc
jle
adc
aam
in
and
ins
test
dec
dec
lea
or
adc
div
jo
xchg
push
iret
mov
fistp
(bad)
lahf
mov
icebp
mov
or
mov
or
cmc
jg
adc
hlt
cmp
jle
sbb
ins
and
cmp
hlt
scas
mov
xor
(bad)
pop
inc
jge
test
or
inc
pop
retf
pop
ss
dec
and
inc
sbb
and
nop
jae
scas
movs
std
call
and
push
int
sbb
fnsave
ss
push
mov
add
push
push
cmps
into
cmp
dec
cmp
add
outs
inc
outs
sahf
cmp
ror
data16
je
adc
pop
pushf
fild
cmp
and
push
stos
mov
sub
xor
cmp
int
push
ins
dec
stc
sub
in
pop
jb
or
es
inc
aaa
cwde
pop
sub
mov
cmp
(bad)
bound
add
xchg
lods
in
adc
ret
sub
mov
mov
fcom
mov
shr
xchg
mov
les
ins
push
dec
stc
adc
mov
sbb
arpl
jmp
mov
mov
adc
dec
xchg
push
sbb
test
mov
push
sub
je
retf
aad
stos
inc
icebp
call
loop
jnp
sub
lods
(bad)
jmp
jb
cmp
pop
mov
jp
jne
sahf
(bad)
out
ss
cmp
dec
mov
cmp
test
imul
les
dec
inc
xchg
jb
mov
inc
rol
cmp
dec
pop
xchg
aam
adc
dec
cmp
and
stos
movs
xor
fnstenv
(bad)
movs
inc
sbb
movs
icebp
push
and
push
outs
sub
sub
repz
cmp
push
or
aas
or
pop
jnp
mov
xchg
(bad)
retf
mov
rcr
loope
scas
sbb
mov
fwait
jnp
sbb
inc
mov
movs
mov
(bad)
push
adc
mov
xchg
loopne
retf
cmp
fld
(bad)
dec
mov
fcomp
mov
push
scas
add
add
shl
ret
mov
push
mov
div
push
std
mov
dec
push
pop
xor
mov
adc
or
xchg
mov
stos
in
dec
fisttp
jno
or
push
daa
ret
or
xor
push
lahf
rcl
lock
xchg
sbb
std
js
mov
fldenv
daa
mov
inc
rcr
pop
int3
cmp
pop
retf
stos
stos
jg
xchg
icebp
enter
add
pop
xchg
int
inc
dec
out
jb
or
sti
jge
xor
jnp
cwde
imul
rcl
in
cs
addr16
mov
mov
out
bound
sahf
inc
push
fmul
stos
sar
mov
fistp
pop
xor
push
out
in
aas
cmp
mov
push
sub
lea
mov
cld
ins
sbb
(bad)
xor
mov
call
aad
iret
cmc
jge
push
inc
lods
lock
call
mov
pushf
iret
lahf
in
arpl
lahf
mov
mov
mov
ret
ret
pop
hlt
call
(bad)
stos
or
cdq
inc
mov
setbe
cmp
lods
jmp
xchg
mov
lods
push
mov
nop
or
in
adc
outs
mov
mov
outs
sub
dec
sub
ins
pop
pusha
aam
test
(bad)
iret
fucomp
xchg
pop
pop
inc
or
mov
cmc
gs
stc
sbb
cdq
pop
outs
(bad)
call
out
jg
sub
out
inc
sub
leave
pusha
jge
lods
pop
call
adc
mov
adc
push
idiv
lahf
pop
nop
cmc
movs
xor
cmp
mov
outs
mov
jnp
test
js
mov
shr
std
mov
jmp
fisttp
jg
push
ret
fs
add
in
ror
pusha
out
cmp
(bad)
(bad)
std
fadd
dec
cmp
shl
pop
daa
cwde
leave
jg
retf
int
aam
adc
imul
cmp
mul
hlt
aad
cmp
jmp
adc
and
nop
sti
lods
cmp
les
mov
and
sub
outs
mov
(bad)
fdivp
into
pop
loope
inc
dec
in
inc
push
jnp
cmp
(bad)
sub
(bad)
popf
outs
ins
mov
xor
push
js
ja
dec
dec
pusha
int
mov
mov
or
dec
or
jae
ins
(bad)
in
bound
into
aas
arpl
add
cli
shr
inc
add
dec
xor
mov
mov
xchg
or
jne
mov
out
cmp
jecxz
das
xlat
clc
sti
repz
inc
adc
and
and
push
mov
in
sbb
push
mov
add
ds
sub
pushf
loope
push
aad
add
shl
hlt
pop
jb
hlt
pop
xchg
pop
frstor
cmp
pop
das
jns
xchg
call
lea
(bad)
icebp
add
or
sub
imul
push
cmp
test
xchg
mov
push
sar
push
push
rol
jmp
(bad)
in
cwde
pop
out
nop
sub
sbb
cwde
ret
lahf
pop
inc
lock
add
das
ret
repz
rol
mov
fsubr
arpl
addr16
(bad)
enter
mov
or
enter
popa
pop
xchg
sbb
sbb
inc
pop
dec
mov
stos
int3
xchg
stos
cmp
pop
stos
add
jg
(bad)
mov
lds
test
cmps
push
cld
or
pusha
cmps
stos
jp
fist
loop
test
enter
cli
(bad)
sub
xchg
in
dec
and
xchg
hlt
scas
into
inc
cmp
(bad)
mov
dec
scas
jg
push
lods
push
dec
shl
das
(bad)
das
nop
push
sahf
mov
mov
jno
in
out
xor
gs
push
jp
mov
adc
bound
nop
pusha
add
mov
mov
fmul
add
adc
loope
jmp
call
fstp
test
jmp
pop
int
inc
sub
dec
cmps
xchg
ins
dec
cwde
shl
in
retf
or
imul
pop
xor
push
lds
sbb
jecxz
repnz
jbe
adc
dec
or
out
xchg
push
cmp
jle
push
sub
mov
push
arpl
int
mov
add
xchg
cli
xor
out
dec
mov
mov
cli
inc
in
lods
stc
jns
out
xor
dec
xchg
test
ret
jno
ja
sbb
adc
fnsave
xchg
gs
push
push
xor
pop
mov
mov
push
cwde
aad
ror
pop
sbb
mov
xchg
pop
lock
push
cwde
pop
call
into
cwde
ret
lds
or
cmp
xlat
bound
xchg
push
xchg
and
xchg
cmp
push
add
nop
pushf
loope
ja
mov
daa
or
movs
mov
sbb
inc
mov
xor
cmp
mov
mov
fs
arpl
push
fisubr
inc
fistp
in
push
inc
xchg
stos
test
xchg
cmp
cwde
movs
jbe
xchg
jle
ror
push
imul
ficomp
push
(bad)
fstp
cmc
iret
push
xor
mov
test
mov
(bad)
lock
sbb
mov
movs
mov
retf
(bad)
mov
xchg
das
ins
mov
sbb
jp
xchg
cmps
xchg
loop
add
push
push
inc
(bad)
scas
push
inc
inc
out
mov
mov
test
ror
rcl
mov
mov
js
sub
cld
out
stos
aam
loopne
enter
cmp
leave
mov
mov
jae
adc
inc
inc
lea
push
outs
lea
jecxz
ins
fs
inc
imul
cmp
retf
xchg
xchg
push
jne
adc
mov
lods
cmovae
mov
int
mov
in
cli
sahf
adc
pop
jo
inc
add
push
inc
push
add
scas
jns
xor
mov
sbb
pop
and
mov
push
rol
(bad)
aam
inc
dec
pop
mov
mov
xlat
inc
mov
mov
mov
(bad)
mov
inc
xchg
jo
mov
mov
pop
or
add
sbb
retf
test
stos
jmp
std
sub
mov
mov
cs
out
mov
xor
xchg
test
test
cmp
cmp
inc
jge
adc
mov
mov
push
imul
fisttp
mov
mov
hlt
sub
adc
pop
jnp
sub
cld
and
sbb
call
push
imul
mov
xchg
mov
xor
push
mov
cmps
xchg
(bad)
or
mov
adc
push
mov
adc
imul
out
or
xchg
imul
cwde
jg
jns
mov
jg
hlt
mov
hlt
xor
dec
mov
add
mov
out
cmp
push
arpl
mov
jp
push
repnz
addr16
xchg
and
mov
je
pop
and
in
pop
pop
das
pop
xchg
or
inc
xor
pop
jns
iret
fadd
add
add
test
push
es
shrd
mov
(bad)
imul
add
cmc
sbb
clc
sub
ret
aad
dec
fidivr
and
lods
in
and
in
add
aad
or
push
stc
pop
mov
retf
add
int3
cmp
lea
ins
js
fild
xchg
cmp
xchg
shl
lods
push
stos
pop
jg
jno
lahf
pop
in
mov
or
or
dec
test
mov
iret
inc
jbe
xabort
add
or
xor
movs
add
adc
unpckhps
or
dec
in
shl
xor
xchg
mov
add
rcr
xlat
push
aas
add
pop
or
js
pop
mov
dec
or
push
ficom
jge
mov
lea
mov
(bad)
gs
mov
pop
pop
(bad)
sar
xor
inc
push
push
test
push
push
mov
jno
fucomi
and
aad
and
test
push
mov
mov
rol
push
(bad)
nop
arpl
cdq
pop
sub
cmp
xchg
adc
or
mov
popa
mov
pop
add
cli
(bad)
fcmovu
aaa
xor
imul
pusha
sar
inc
shl
add
add
jmp
(bad)
add
xchg
push
mov
or
cmp
add
out
cmp
push
dec
mov
mov
pop
shl
xor
xor
outs
(bad)
mov
sub
cmp
bound
int
in
into
fbld
or
jecxz
pminsw
inc
ds
inc
dec
pop
jge
int3
inc
and
xor
cmps
add
repz
xor
mov
and
jecxz
popf
inc
fst
out
cli
rol
xchg
in
retf
mov
cmp
and
xor
(bad)
lods
dec
add
push
adc
mov
mov
idiv
ret
mov
add
(bad)
mov
push
lock
in
adc
mov
jnp
or
lahf
int3
test
(bad)
out
mov
rcl
icebp
ret
mov
cs
xchg
inc
pop
addr16
mov
or
stc
xor
add
jmp
push
test
jnp
or
mov
loopne
xor
or
cdq
stos
mov
shr
loopne
enter
or
push
rcl
pop
dec
std
outs
in
jl
inc
ins
mov
aaa
(bad)
jns
adc
cmp
jne
repz
push
xchg
pop
adc
cwde
mov
cmp
pop
mov
retf
inc
fnsave
cli
sbb
popf
mov
inc
sub
dec
jmp
out
dec
pop
test
aas
shr
imul
and
lods
dec
mov
outs
repz
iret
cld
mov
ins
fst
(bad)
daa
dec
mov
xchg
adc
repz
lds
sub
test
push
icebp
loope
aad
(bad)
fdivr
(bad)
inc
inc
mov
dec
ret
fwait
ds
xor
test
push
scas
fst
cwde
mov
pop
jae
add
cmc
scas
xchg
push
stc
aaa
retf
arpl
push
cli
mov
movs
loope
and
lods
jp
int3
into
ret
push
sahf
sar
mov
mov
fmul
jecxz
mov
inc
outs
jg
cli
mov
daa
sahf
mov
push
mov
lods
in
or
mov
test
loope
xbegin
das
add
cmps
das
call
imul
aam
lds
test
mov
test
xchg
in
jmp
mov
jno
push
sub
cwde
das
xchg
xchg
push
xchg
out
pushf
aam
pop
(bad)
cmp
out
push
inc
retf
cli
push
pop
loopne
sub
mov
arpl
test
dec
sbb
rcr
or
xor
imul
cli
call
arpl
push
mov
push
dec
jecxz
(bad)
jnp
sbb
and
popw
or
fidiv
dec
mov
jge
mov
out
or
dec
cmp
movs
sbb
shl
sub
mov
mov
jmp
(bad)
push
ss
sbb
sub
inc
or
add
ret
jns
and
fisub
jnp
fucomp
xor
fld
mov
cmp
jg
xor
ja
test
mov
mov
sbb
in
add
in
xchg
cmc
dec
leave
adc
lahf
jg
mov
mov
dec
cmps
imul
push
push
inc
xor
fst
xchg
inc
iret
mov
dec
xchg
and
jne
and
jb
fwait
lock
in
lods
mov
xchg
mov
das
(bad)
retf
mov
inc
jb
lea
mov
xor
xor
mov
mov
out
sub
xchg
mov
je
adc
push
sbb
fs
mov
stos
mov
mov
cmps
inc
retf
adc
inc
cs
mul
jle
cwde
sub
mov
inc
push
outs
(bad)
repnz
lods
xchg
jne
imul
data16
scas
xor
push
test
fstp
mov
call
jle
nop
ds
or
dec
cmp
push
lea
test
neg
shr
mov
repnz
jecxz
scas
xchg
push
xor
loope
test
xlat
push
mov
ror
dec
es
inc
adc
cmp
stos
into
sub
pop
cmp
sbb
cwde
xchg
(bad)
repz
(bad)
mov
pop
mov
xchg
inc
mov
out
call
fcom
js
dec
retf
daa
adc
sub
add
cld
or
inc
out
add
dec
adc
inc
jno
fadd
mov
adc
in
pop
jmp
call
jle
inc
aad
lods
sub
loopne
jecxz
or
loop
or
cli
mov
mov
fcomi
sub
mov
pop
xchg
adc
aad
inc
adc
xchg
sbb
inc
sub
ins
add
mov
fnsave
sub
pop
(bad)
mov
adc
leave
mov
in
jmp
mov
inc
outs
inc
jmp
(bad)
ds
mov
xor
sbb
sti
xchg
sbb
je
leave
or
(bad)
sbb
mov
fs
sbb
ds
dec
rcr
push
inc
outs
repnz
popf
add
adc
aam
add
hlt
mov
add
sbb
std
pop
test
fild
cmp
pop
in
test
inc
push
sub
fisttp
shl
fs
inc
mov
and
jecxz
jmp
pop
and
(bad)
loopne
imul
cli
icebp
imul
rcl
mov
push
cmp
mov
lahf
inc
xor
out
dec
xor
ret
xchg
aas
sbb
lahf
clc
mov
mov
or
jns
fisub
cwde
(bad)
rcr
mov
xchg
cdq
loope
test
mov
outs
jno
out
and
(bad)
lahf
outs
xor
fbld
and
lock
and
stos
sbb
dec
cwde
mov
(bad)
cmp
xchg
push
scas
pop
xor
out
mov
aas
mov
enter
xchg
inc
adc
ss
in
ss
mov
push
or
retf
daa
jns
imul
in
add
mov
imul
cmps
jecxz
scas
push
jae
and
push
cs
rcr
dec
test
xchg
cwde
add
test
push
(bad)
aad
mov
cmc
mov
loope
jns
pop
push
bound
mov
cmc
sbb
ss
aas
jbe
push
stos
sub
test
sub
cmps
mov
cmp
movs
sbb
jae
pop
cmp
inc
mov
clc
cmp
nop
add
std
dec
shl
jb
inc
adc
cmps
aaa
and
adc
je
call
jle
out
stos
mov
out
mov
fs
dec
ds
xchg
sbb
cdq
outs
mov
ret
push
repz
sbb
ja
lods
into
lods
into
push
ffreep
push
xchg
loope
(bad)
dec
lahf
xor
mov
dec
ins
xchg
jmp
jno
push
movs
push
aam
sahf
repz
adc
cmp
scas
enter
add
adc
jle
pop
push
lds
cld
call
sub
lods
pop
jns
xlat
fidiv
inc
iret
fwait
xchg
test
les
inc
sar
mov
xchg
push
mov
mov
push
(bad)
pop
mov
and
jg
dec
jbe
(bad)
je
xor
push
in
daa
repnz
add
cmc
mov
scas
fdiv
ja
lods
add
sub
and
jle
lods
test
ret
fcos
popf
mov
add
cmps
in
jne
in
mov
mov
cmp
xor
ss
mov
stc
mov
sub
scas
mov
push
add
add
addr16
add
push
sbb
cmp
addr16
lahf
aas
retf
mov
inc
cwde
sbb
int
jno
pop
sub
and
mov
dec
stos
sbb
fsubr
out
inc
sbb
push
std
aam
mov
lds
sbb
aam
pop
les
pop
and
or
add
xchg
ins
jecxz
push
rdpmc
adc
sub
mov
push
jnp
cdq
scas
or
nop
dec
mov
movs
and
mov
(bad)
out
dec
push
xor
xchg
jmp
jns
mov
mov
ds
and
mov
ds
mov
les
(bad)
stos
repz
sub
out
shl
loope
iret
adc
leave
nop
aad
pop
and
jns
sbb
movs
add
enter
xor
push
and
stos
movs
mov
rol
or
enter
sub
leave
cmp
xor
je
rol
(bad)
leave
pop
cmp
jp
jbe
popa
cmp
or
repnz
aas
(bad)
daa
add
jg
js
repz
ja
inc
inc
adc
lds
popa
nop
inc
(bad)
adc
cwde
push
push
dec
test
adc
adc
mov
stc
and
inc
jnp
inc
xor
adc
mov
test
ret
(bad)
aaa
loop
addr16
arpl
rcr
add
popa
adc
out
xchg
ins
in
loope
add
ss
test
mov
cs
not
rol
xor
outs
mov
stos
leave
dec
inc
cdq
xchg
push
mov
xor
lds
jo
jecxz
(bad)
in
xchg
ror
sbb
das
xchg
movs
lods
data16
xchg
or
mov
test
loopne
imul
push
lds
jns
mov
sar
push
aad
into
movs
lds
sti
int
mov
pop
sbb
outs
aaa
lea
pop
inc
xchg
retf
dec
das
icebp
mov
inc
ins
sub
mov
ret
or
jp
das
inc
jmp
mov
sti
add
pushf
xchg
cmp
aam
(bad)
mov
cmps
pop
arpl
add
jne
sub
cdq
punpckldq
pop
xchg
push
mov
mul
and
cvttps2pi
mov
add
outs
repnz
retf
pushf
int
rol
into
or
xchg
test
inc
mov
sub
dec
mov
test
es
outs
in
xchg
or
xchg
push
sub
test
xor
neg
xor
sub
fwait
jmp
out
push
adc
mov
std
push
jl
sub
dec
sub
mov
ror
xchg
jnp
and
fs
fnsave
sub
inc
and
push
(bad)
jmp
neg
pop
test
adc
sbb
push
adc
mov
push
xor
sbb
popa
add
nop
dec
or
inc
test
in
mov
in
ja
ror
mov
stos
pushf
or
inc
dec
repz
cmps
cmps
xor
call
xchg
pop
aad
icebp
mov
cmps
test
jg
pop
jo
add
add
clc
fisttp
mov
repnz
dec
pop
pop
ds
and
or
adc
test
push
ret
push
mov
fwait
dec
jno
into
retf
cmp
sar
mul
sub
jno
outs
cld
mov
syscall
lods
sar
or
mov
add
inc
mov
in
iret
fucomp
fsubr
xchg
xor
fnsave
mov
fdivr
icebp
movs
xlat
push
fdivr
lock
adc
dec
dec
in
lahf
and
jne
sti
jmp
xchg
fcmovbe
cs
dec
or
pop
sub
imul
(bad)
push
fistp
fwait
mov
dec
test
or
cld
lahf
or
(bad)
rcr
test
jmp
xor
jb
pop
fnstenv
rcl
jmp
xlat
pop
jle
pop
ror
adc
je
rcl
daa
sub
das
mov
or
mov
mov
in
shr
pop
mov
xor
ins
fnsave
xor
mov
jp
jle
sti
gs
mov
in
push
out
inc
ins
scas
cmp
jge
iret
iret
push
mov
je
loop
sub
mov
inc
pusha
rcl
div
push
jp
pop
movs
and
inc
jae
mov
lea
cmps
pop
outs
jmp
mov
jp
call
add
sub
or
out
xchg
jae
mov
jl
mov
in
and
lds
out
or
push
pop
cmc
or
sub
xchg
sub
fdivr
add
inc
and
adc
lahf
pop
fld
pushf
out
xor
add
inc
or
int3
inc
and
inc
jno
sub
stc
icebp
sub
pop
add
lahf
xor
push
pop
cs
pop
mov
sbb
sar
rol
mov
popf
mov
pushf
loop
jno
fidivr
arpl
mov
and
scas
cmc
sbb
xor
mov
scas
cli
outs
enter
int
push
inc
nop
jmp
jecxz
push
mov
shl
fstp
mov
mov
or
loop
lds
scas
mov
std
out
neg
xor
mov
imul
dec
push
adc
sub
xor
dec
sub
sbb
jae
cdq
jb
mov
add
inc
ret
and
shl
push
mov
pop
rol
add
mov
out
jle
and
mov
test
adc
cmc
(bad)
xlat
int
cmp
std
cmp
sub
sbb
stos
push
xor
ret
and
or
pop
mov
ror
retf
(bad)
sar
cdq
cmps
adc
aad
fisttp
cmp
pop
in
push
sti
and
and
rcr
ins
leave
movs
stos
push
sub
push
mov
xor
xor
push
fstp
call
adc
jae
pop
jbe
sbb
movs
outs
les
push
xchg
or
leave
pop
push
sbb
lock
shl
xor
sbb
imul
ret
stos
mov
addr16
jns
pop
out
mov
fs
and
cmp
pop
mov
jmp
imul
push
daa
int
xor
push
xchg
xor
push
cmps
xor
fsubr
jle
cmp
pop
xlat
cmp
xchg
pop
mov
push
scas
outs
in
mov
push
xchg
retf
mov
pop
mov
je
test
xchg
jnp
jb
and
inc
(bad)
xor
cmps
mov
cmp
push
inc
cli
js
push
hlt
icebp
int3
call
inc
aad
stos
jbe
ret
(bad)
jmp
iret
and
not
cli
xor
push
std
lock
xor
mov
mov
int
outs
dec
cmp
and
xor
jbe
xor
fnstenv
push
popf
sar
sti
xor
mov
popa
imul
imul
les
jecxz
dec
test
mov
ret
(bad)
fcom
adc
ss
fimul
dec
stos
push
jo
cmp
iret
(bad)
loop
in
pop
sahf
out
and
mov
frstor
xor
cmp
out
(bad)
mov
cmp
enter
shl
inc
outs
dec
mov
pop
adc
sti
scas
ja
mov
hlt
xchg
inc
push
ss
stc
push
xor
sub
pop
imul
pop
mov
adc
cwde
add
or
inc
mov
aam
fcom
js
rcr
popa
push
or
repz
(bad)
ins
or
or
jmp
mov
(bad)
out
icebp
cmps
hlt
inc
ret
adc
ds
inc
push
out
lods
dec
fisubr
sub
pop
les
js
test
inc
gs
and
ins
sub
mov
pop
(bad)
push
inc
cmp
pop
mov
(bad)
and
bound
loope
sub
ror
sahf
push
and
add
lahf
mov
push
fst
and
(bad)
in
mov
imul
pop
cmp
loopne
into
nop
pusha
cdq
jbe
in
cmp
and
mov
test
fistp
clc
stc
in
cmp
(bad)
and
inc
in
int
dec
mul
fnclex
enter
xchg
mov
(bad)
and
aad
hlt
dec
icebp
pop
out
fcmovnb
mov
(bad)
cdq
fwait
inc
test
xchg
xchg
enter
xchg
xchg
xchg
nop
and
fiadd
call
pop
and
cmp
pop
dec
and
cs
outs
out
jle
cmc
mov
pop
add
jge
add
or
xchg
fild
inc
dec
jl
inc
stos
loopne
loop
fs
aad
ret
mov
jl
enter
cli
rol
inc
jno
je
sub
pop
jecxz
dec
dec
adc
sub
pusha
mov
loopne
sub
std
scas
fld
jbe
repz
push
pop
mov
mov
mov
push
jle
repz
retf
or
xor
mov
add
movs
clc
jmp
cmps
out
sbb
or
or
das
xchg
pop
mov
fbld
jp
cmp
outs
mov
ret
sti
out
or
movs
mov
rol
jmp
mov
and
das
das
sub
xlat
push
adc
inc
js
daa
jns
or
inc
xchg
dec
and
add
bound
cld
mov
fistp
stos
dec
aad
mov
outs
push
arpl
mov
fld
and
pop
fiadd
ss
test
jae
movups
mov
(bad)
dec
and
push
xchg
fld
jb
add
xlat
push
sub
es
mov
je
repz
hlt
pop
loop
test
scas
cmps
mov
pop
xor
pop
inc
mov
std
and
mov
mov
mov
adc
xchg
mov
pop
push
fisubr
outs
ins
mov
imul
jmp
push
in
adc
jns
add
int3
and
mov
push
pop
pusha
(bad)
cdq
dec
push
frstor
movs
cmp
cs
retf
daa
loop
lahf
hlt
je
xchg
mov
mov
jecxz
mov
push
sti
pusha
pop
jecxz
outs
and
retf
outs
sbb
xchg
int3
pop
(bad)
xchg
dec
mov
ins
js
jbe
dec
cmp
cmp
cdq
adc
out
int3
pushf
popa
mov
cdq
adc
sub
adc
xchg
or
stos
sbb
call
fbstp
jecxz
lock
cdq
ss
lahf
cs
cmp
fistp
pusha
jge
xchg
sar
xor
xchg
les
inc
arpl
movs
xor
pinsrw
jmp
iret
imul
dec
cwde
ror
mov
inc
mov
fcmovu
mov
adc
movs
jae
sbb
push
outs
pushf
push
mov
mov
bound
mov
mov
mov
adc
stc
retf
push
std
mov
out
xor
call
sahf
push
mov
bound
push
mov
scas
jmp
pop
scas
cmp
inc
pusha
push
xor
imul
lods
pop
lea
int
jae
or
adc
(bad)
lea
ja
fcmovu
inc
jae
test
cwde
xchg
add
jmp
sti
stos
jg
repnz
fwait
ins
jecxz
int3
push
pop
push
daa
test
pop
fisub
jmp
movs
mov
push
adc
push
jecxz
mov
sub
ja
ins
and
leave
adc
js
push
xor
dec
mov
jno
sub
enter
inc
xor
sbb
fld
dec
in
scas
pop
sub
cmp
sub
es
cmp
push
inc
and
fcom
movs
add
push
mov
pop
xchg
fs
pop
adc
fs
jno
stos
ins
retf
jp
dec
imul
movs
fcom
mov
shr
dec
xchg
pop
push
aam
or
outs
jne
mov
addr16
jg
xchg
out
jle
mov
arpl
jb
cld
jg
jle
(bad)
aad
cmp
(bad)
lahf
pop
into
mov
fcmovbe
dec
xchg
rcr
push
shl
sub
sbb
jmp
adc
jmp
arpl
jle
add
sbb
pop
mov
bound
fwait
inc
xor
sub
sbb
push
jge
loop
test
cmc
sbb
aam
ins
sub
push
ffreep
dec
jmp
imul
adc
test
retf
sub
cmc
loopne
jo
mov
sub
daa
(bad)
inc
push
in
sbb
lds
sub
mov
popf
nop
inc
aas
inc
fdiv
mov
push
call
fwait
sub
fdivr
fcmovnbe
(bad)
jb
arpl
mov
popa
mov
mov
enter
and
or
xor
xor
movs
push
jne
shl
test
pop
and
hlt
cmp
movs
test
(bad)
jne
xor
shl
mov
pop
pop
test
mov
sub
in
test
xor
pop
cs
fidiv
add
loop
pop
mov
loopne
sub
inc
adc
into
dec
movs
adc
mov
(bad)
cmp
add
push
(bad)
xchg
outs
sbb
xor
adc
std
fisttp
shl
dec
ins
icebp
jmp
es
shl
(bad)
iret
inc
mov
lock
dec
xchg
sbb
mov
inc
fadd
jge
push
(bad)
jp
call
push
sar
mov
xor
xor
mov
dec
xchg
mov
cld
lock
adc
cmp
leave
stos
xchg
(bad)
and
out
cmp
(bad)
xor
(bad)
loope
jg
and
dec
test
ret
dec
push
and
mov
push
inc
jo
mov
fdivr
neg
fsubr
pusha
das
push
pop
enter
mov
jne
jmp
xchg
jnp
dec
xor
in
lods
out
xchg
das
clc
scas
sbb
add
push
scas
mov
fyl2xp1
outs
outs
cmp
rsm
imul
test
movs
mov
and
inc
jmp
push
xchg
dec
popf
jbe
(bad)
inc
push
setg
jl
push
add
adc
cwde
loop
cmps
jno
or
(bad)
icebp
leave
push
scas
or
popa
pop
pop
daa
dec
sub
push
xor
rcl
mov
lea
xor
scas
gs
inc
push
mov
cmps
ds
pushf
mov
cmps
(bad)
(bad)
mov
sbb
ins
idiv
icebp
fld
and
jbe
inc
js
and
stos
out
bound
push
add
push
sub
outs
imul
pop
or
xchg
arpl
and
call
fcomp
or
jmp
mov
in
add
icebp
adc
cmps
lds
shl
addr16
mov
add
fistp
popf
gs
enter
xor
(bad)
sti
and
sbb
or
sub
popf
or
jnp
sub
xchg
mov
or
or
and
retf
mov
push
fist
dec
cmp
into
sbb
stc
cwde
call
icebp
mov
dec
dec
mov
add
mov
and
shl
ret
into
in
ror
ret
les
or
sbb
fild
jecxz
jmp
mov
mov
sbb
mov
or
pop
sub
dec
pop
in
mov
xchg
out
rol
dec
inc
mov
or
push
pop
xchg
call
push
jge
popf
dec
jmp
(bad)
cld
call
fist
jmp
call
out
pop
or
lock
js
lahf
jle
push
sbb
int
sbb
xchg
es
lds
call
hlt
enter
das
adc
jnp
das
aad
adc
std
or
les
jl
adc
cld
call
clc
sar
(bad)
mov
mov
scas
in
out
inc
push
or
lea
mov
sbb
mov
or
lock
mov
dec
lods
sbb
mov
xor
inc
dec
xor
xor
mov
sbb
dec
jl
add
pop
push
(bad)
jp
retf
js
jae
sar
mov
add
pop
adc
add
scas
(bad)
ja
adc
jl
and
jmp
cmp
jmp
sbb
mov
sbb
fwait
push
mov
xchg
addr16
jmp
inc
adc
arpl
xchg
out
adc
xor
mov
pop
dec
mov
xor
pop
fst
mul
aam
nop
cwde
stos
into
jmp
dec
sbb
dec
and
pop
clc
sub
xchg
inc
(bad)
retf
nop
pop
fcomp
outs
mov
cmps
ja
or
sub
mov
int
outs
fmulp
push
stos
ins
mov
mov
mov
and
(bad)
dec
stos
push
or
push
sti
sub
mov
dec
int3
rcl
xchg
imul
rcl
aaa
mov
retf
mov
adc
dec
xor
call
shl
sbb
in
lods
(bad)
fst
out
rol
inc
ret
pop
mov
dec
pop
loope
mov
mov
add
xchg
iret
xchg
hlt
(bad)
call
imul
je
xor
cmps
ins
test
sbb
or
es
pop
nop
vpunpckhdq
or
pop
les
out
pop
pop
mov
or
inc
jl
jbe
popf
sbb
sahf
adc
jl
call
std
sbb
cmps
dec
cmp
pop
push
into
into
into
loop
sbb
mov
test
(bad)
imul
and
aas
test
xchg
cs
mov
mov
aaa
test
mov
mov
ins
mov
(bad)
stos
fwait
setge
sub
or
xor
push
scas
xchg
dec
add
arpl
xchg
icebp
dec
mov
jg
hlt
lahf
xchg
adc
inc
int
mov
pusha
loopne
adc
sub
sbb
mov
jl
in
ins
mov
inc
lods
adc
repnz
inc
push
mov
lods
jmp
retf
mov
arpl
add
stos
jnp
jo
mov
sub
stos
out
dec
mov
cmp
dec
sahf
out
jp
out
lods
dec
inc
fwait
and
sub
lahf
sub
jno
add
push
mov
or
fst
or
les
rep
ins
iret
(bad)
mov
mov
sbb
sub
repz
mov
cmp
fldcw
pop
pop
popa
mov
or
lahf
lds
out
xchg
xor
dec
(bad)
push
mov
test
fucom
inc
mov
mov
push
add
mov
adc
shl
adc
adc
jecxz
into
jae
jl
push
cmps
and
lock
pop
add
popf
mov
hlt
sub
int3
test
data16
jp
push
sbb
aaa
bound
jne
icebp
and
ret
cli
and
or
mov
imul
or
jno
mov
and
xchg
fstp
daa
xor
aam
sbb
std
mov
dec
jmp
adc
cld
xor
movs
and
push
ret
popf
leave
outs
ja
popa
push
loop
fidiv
scas
inc
sub
xor
fisubr
fdiv
and
add
imul
mov
xlat
inc
push
icebp
nop
jmp
out
adc
inc
movs
jle
aas
loopne
and
(bad)
cmp
jmp
or
mov
pop
push
mov
mov
retf
(bad)
in
jne
jae
mov
nop
mov
int
lods
jno
loope
mov
cmps
xchg
mov
scas
lds
cli
sbb
xchg
adc
jle
add
dec
std
cli
lock
lods
es
xor
ror
mov
pop
adc
hlt
stos
mov
sub
adc
movs
adc
leave
inc
pop
in
dec
or
xchg
add
cmps
ficom
fiadd
(bad)
xlat
mov
movs
sub
shl
jge
(bad)
add
sbb
add
push
adc
sub
jbe
jge
sub
pop
movmskps
jo
nop
push
sbb
pop
imul
scas
xchg
pop
ret
jo
pop
nop
les
clc
or
pop
push
mov
repz
mov
xor
jnp
cld
or
pop
into
jg
dec
fstp
mov
cld
in
mov
imul
popa
mov
ret
aaa
add
cmp
stos
pop
mov
or
lds
cmp
sbb
or
sbb
cmp
or
loopne
mov
or
(bad)
fistp
inc
mov
dec
jmp
dec
pop
pop
mov
push
retf
outs
adc
mov
cmp
xchg
xchg
loope
(bad)
js
(bad)
and
cmc
(bad)
in
in
adc
lds
test
xchg
mov
lahf
xlat
push
push
xchg
add
shl
nop
iret
inc
inc
mov
dec
lock
add
dec
push
sub
mov
push
ss
push
ss
xchg
arpl
retf
push
xchg
add
movs
ds
inc
jp
sbb
xor
xchg
lods
push
fwait
or
pop
mov
pop
ret
dec
lods
lahf
in
into
call
test
sbb
pushf
inc
push
daa
mov
or
sbb
je
pop
imul
cmp
ins
loopne
pop
and
lods
cmps
cmp
loopne
test
pop
ins
jb
add
loopne
stc
cmp
xchg
cs
xor
scas
rcl
inc
mov
daa
ja
dec
enter
aad
sbb
ror
cmc
adc
mov
ror
cmp
fnstcw
push
and
xchg
xor
lahf
mov
pop
daa
test
jno
icebp
and
or
sti
jbe
xchg
sub
outs
ret
mov
bound
add
outs
cmp
jge
in
(bad)
inc
mov
or
loope
mov
cwde
mov
add
(bad)
jl
test
ror
mov
cmp
fmul
push
test
js
push
add
xchg
retf
and
into
mov
(bad)
pushf
jg
cmp
(bad)
cmps
pop
scas
ret
retf
mov
push
cmp
mov
xbegin
lea
mov
jb
retf
(bad)
dec
cwde
mov
fwait
cmp
loope
(bad)
push
fisubr
or
ja
lahf
fwait
mov
repnz
adc
call
xor
ins
push
jmp
lahf
push
test
ror
push
hlt
pusha
enter
pop
ins
adc
inc
adc
jl
or
lahf
frstor
ss
mov
adc
enter
dec
popa
inc
and
loopne
jbe
cmp
adc
pushf
jmp
pop
sub
sbb
inc
push
cli
or
imul
sub
in
je
and
fdiv
stos
jno
dec
mov
fs
inc
adc
int
xchg
out
push
jl
adc
gs
aad
scas
dec
xor
sti
mov
rol
mov
inc
aas
aad
out
mov
ja
pop
daa
add
mov
repnz
xchg
adc
call
sub
push
mov
or
dec
adc
push
test
inc
sub
push
neg
hlt
stos
cmpxchg
inc
sub
dec
xor
out
sub
mov
xchg
sbb
loop
invd
xlat
mov
fidivr
push
jne
cli
push
push
mov
dec
add
sbb
xchg
add
mov
movs
call
cmp
loope
jns
mov
out
leave
xor
imul
aam
in
sbb
icebp
mov
add
mov
iret
inc
out
or
mov
outs
inc
xor
(bad)
daa
add
fst
leave
lds
aaa
pop
push
add
gs
jne
in
add
stos
addr16
adc
stos
lods
push
push
pop
jbe
in
dec
fnsave
xor
mov
mov
aam
ins
pop
or
add
jp
and
cmp
in
pop
pop
dec
xor
sbb
je
pop
cmc
repz
(bad)
out
test
je
(bad)
xor
sahf
cmp
loop
loope
mov
pop
xor
lock
sar
das
push
dec
mov
loope
nop
in
sahf
in
adc
dec
gs
push
ins
and
mov
nop
pop
jge
mov
je
xor
sub
das
sub
sub
mov
scas
pop
cmp
jns
adc
shl
jmp
arpl
fcomp
fwait
or
mov
push
sub
sar
lods
aad
retf
dec
dec
add
cmp
sub
nop
data16
sbb
imul
call
fild
pop
mov
ret
ror
rcl
les
les
fist
mov
jecxz
outs
std
xor
mov
pop
fdivr
jno
or
sti
push
xchg
cmp
int
pop
mov
out
das
in
jecxz
das
mov
daa
push
pop
push
mov
das
pop
xor
stc
mov
call
mov
lahf
mov
pop
mov
cmp
shr
and
cmp
(bad)
sar
inc
nop
fwait
adc
and
paddq
lods
sub
xchg
sub
dec
sbb
push
into
add
jbe
ror
inc
mov
xchg
les
sub
or
jmp
into
ror
mov
mov
jno
ret
push
inc
loop
jp
je
jg
push
ins
shl
call
mov
sbb
pushf
or
(bad)
cmp
out
dec
or
or
cmp
cmp
cmps
test
add
inc
jg
lock
(bad)
sbb
or
mov
les
adc
movs
cli
shl
jne
adc
retf
dec
ret
and
xor
mov
lods
push
mov
jno
pop
pushf
idiv
dec
xor
push
push
pop
fst
add
inc
mov
js
leave
aam
push
xor
and
mov
outs
cmc
jge
mov
addr16
mov
jl
nop
sbb
pop
inc
test
loopne
push
outs
jno
push
and
sub
lea
test
adc
jb
mov
mov
sbb
sbb
sub
mov
popa
xchg
retf
xchg
mov
pushf
push
ret
ins
add
push
fiadd
frstor
push
fyl2x
xchg
dec
pusha
sub
rcr
xor
cmp
aas
fimul
das
or
es
jnp
cs
adc
mov
test
adc
popa
ss
in
push
cmp
(bad)
popa
cdq
arpl
cmp
pop
popa
xor
loopne
sbb
test
mov
(bad)
cs
or
push
xor
mov
push
add
jmp
mov
dec
js
sub
cmc
cmp
test
cmc
mov
mov
sbb
gs
adc
neg
mov
mov
fadd
nop
mov
ret
(bad)
sbb
ds
push
(bad)
aaa
xlat
mov
dec
addr16
push
cmp
jmp
andps
mov
arpl
shl
fs
push
adc
int3
jnp
xor
mov
mov
xor
add
or
xchg
inc
std
push
cmp
or
out
lods
fucomip
rcl
iret
jno
mov
or
inc
pusha
adc
push
pop
pop
xor
xchg
cdq
repnz
shr
push
mov
pop
jp
push
sbb
in
test
imul
inc
xchg
pop
cmp
(bad)
dec
shr
adc
scas
and
jae
xchg
lods
clc
outs
add
das
mov
retf
push
test
inc
xor
ins
fs
push
(bad)
xor
adc
dec
push
jl
cmp
sub
push
loop
sub
fs
push
outs
imul
sub
sub
mov
mov
xor
cld
add
sub
fwait
movs
loope
and
push
in
mov
pop
mov
hlt
stc
mov
call
data16
std
mov
shl
inc
retf
ins
mov
jp
popf
sti
jle
mov
retf
pop
sbb
jg
cmp
aaa
scas
dec
mov
sbb
mov
out
ds
(bad)
mov
mov
addr16
pop
mov
mov
retf
or
ins
jle
iret
sub
mov
push
retf
iret
xor
enter
mov
js
imul
sar
or
cmp
hlt
mov
sub
arpl
mov
jp
std
add
adc
in
gs
enter
neg
push
or
or
push
mov
enter
sbb
out
sahf
test
mov
push
loop
(bad)
cmp
cmp
repnz
sub
cmp
popa
inc
xor
jne
fst
stos
inc
add
idiv
push
ja
pop
and
xchg
dec
pusha
adc
ins
sub
pop
lea
jp
cmp
adc
imul
idiv
adc
sub
iret
fwait
loopne
outs
sar
daa
mov
mov
inc
mov
and
movs
xchg
popa
loop
xchg
inc
xchg
stos
push
adc
std
retf
jo
and
mov
adc
mov
int
ja
stos
jb
mov
shr
push
jge
dec
ss
mov
sub
dec
push
jmp
mov
dec
call
mov
inc
sbb
cmp
iret
and
loop
outs
out
xchg
mov
lods
mov
hlt
pop
jnp
test
loope
push
stos
mov
push
add
fs
pop
mov
les
enter
mov
dec
pop
out
push
sub
and
push
daa
(bad)
cmp
movs
adc
mov
cmp
adc
js
jecxz
mov
shr
sub
cwde
retf
adc
shl
call
popa
test
push
cmc
shr
retf
sub
push
mov
leave
push
fucomp
mov
test
mov
loop
jl
jne
jne
mov
mov
pop
inc
ins
mov
movs
imul
adc
mov
fisttp
push
add
jg
rol
pop
cmp
add
rol
in
or
loope
sbb
test
xchg
loopne
dec
and
lahf
push
mov
or
call
(bad)
aaa
in
xchg
(bad)
out
mov
sub
pusha
arpl
stos
mov
inc
leave
jg
fstp
(bad)
jnp
sub
and
outs
sti
clc
add
lds
cmps
loop
repz
mov
in
lea
sub
mov
xor
fidiv
clc
and
add
push
push
movs
(bad)
out
arpl
push
jo
mov
jbe
iret
jns
inc
inc
imul
cmps
(bad)
les
dec
jbe
inc
ficomp
inc
ret
adc
add
cmps
aaa
retf
outs
push
sub
out
jo
xchg
ja
sbb
add
shr
inc
in
and
inc
sbb
out
pop
cdq
pushf
pop
movs
int3
pop
ss
mov
repz
dec
pop
or
cld
mov
xchg
adc
push
xor
sub
mov
jmp
fisub
cmps
call
adc
sti
sub
xor
sti
inc
mov
push
in
or
aad
aaa
repz
xor
shr
ins
add
out
xchg
rcl
and
jle
jg
int
ins
push
pop
xor
sub
jns
xchg
loop
popa
je
fstp
ss
dec
mov
add
ins
sub
hlt
jecxz
pop
push
adc
pop
xor
pop
ins
ss
pop
cli
sbb
enter
daa
adc
add
ds
inc
mov
xor
dec
mov
and
ss
sar
xchg
sbb
cmp
inc
inc
out
gs
push
fcomip
inc
mov
aam
enter
xor
call
cmp
(bad)
loopne
mov
and
cwde
fcom
pop
test
dec
jns
mov
adc
and
sbb
dec
call
(bad)
mov
add
push
cmp
and
std
enter
(bad)
fmul
mov
add
or
dec
xlat
sbb
and
dec
mov
pop
add
mov
ins
mov
mov
pop
dec
mov
xor
outs
cli
mov
stos
adc
jnp
mov
pop
div
pop
call
fdiv
and
int3
scas
add
leave
adc
adc
dec
sar
jns
pushf
icebp
adc
sub
xlat
vxorps
dec
mov
and
push
mov
fnstenv
or
outs
xchg
int
popa
cvtdq2ps
cmp
add
ret
lds
push
aaa
push
or
dec
cs
pusha
push
xchg
push
pop
cmp
mov
ret
enter
lea
jmp
pop
pop
sub
je
jnp
sub
add
lods
outs
pop
call
imul
cs
jbe
dec
jnp
stos
push
sub
icebp
add
add
jle
push
mov
movs
mov
sbb
sahf
xor
rcr
jns
add
(bad)
movs
push
clc
retf
cmps
sub
push
test
idiv
dec
mov
outs
jmp
push
push
out
jl
rol
cmp
(bad)
add
mov
push
or
icebp
stos
sub
(bad)
fild
sbb
sub
sub
mov
inc
or
push
mul
lock
shl
(bad)
pushf
pop
shl
idiv
and
cs
jg
aam
push
adc
sti
les
xchg
in
pop
jle
int
(bad)
cli
sbb
aaa
ret
jnp
inc
hlt
add
push
xchg
xlat
mov
div
fcmovnb
sub
shl
sbb
add
cs
jp
ins
leave
dec
cld
adc
inc
sbb
mov
inc
aas
mov
sub
ret
mov
and
mov
fxtract
and
push
xchg
shr
out
dec
lea
pop
and
mov
jno
lock
pop
addr16
sbb
imul
sbb
lahf
or
addr16
psubsw
jmp
jge
inc
aad
int
add
jecxz
push
mov
nop
mov
ins
lods
mov
xor
lock
inc
mov
xchg
gs
cld
loopne
fdivr
jmp
push
sub
jno
jmp
arpl
iret
aad
mov
push
jg
jmp
nop
mov
xor
xlat
outs
test
(bad)
rol
retf
mov
xchg
(bad)
or
jl
pop
arpl
mov
cmp
lds
cwde
inc
mov
in
and
jg
fisubr
mov
loope
gs
sub
inc
sub
in
retf
push
cmp
adc
add
sub
push
xlat
(bad)
shl
pushf
xchg
mov
xor
enter
cmp
sbb
movs
inc
shl
loop
hlt
inc
popa
add
push
retf
nop
push
mov
scas
dec
mov
mov
repnz
push
and
fwait
je
inc
test
mov
dec
(bad)
repz
inc
scas
cmp
xchg
(bad)
cmp
cld
rol
jo
adc
test
sbb
add
adc
test
push
stc
xchg
mov
pop
inc
shr
retf
jle
fldcw
and
push
and
and
test
div
and
mov
cmp
aad
jge
jbe
in
leave
xor
jo
sti
adc
scas
out
ret
add
sbb
(bad)
sbb
mov
push
push
(bad)
xor
jnp
dec
adc
movs
jle
jne
sbb
xchg
test
jne
or
aas
scas
push
xchg
inc
loop
mov
adc
push
popf
test
cli
mov
arpl
fwait
cmps
fstp
btr
test
cmp
push
fadd
(bad)
jo
(bad)
jnp
xor
or
fldcw
arpl
mov
xchg
sbb
out
or
bound
imul
in
rol
add
ror
jmp
enter
xchg
in
ror
push
repz
cli
sbb
jl
pop
shl
adc
inc
les
xor
dec
sbb
or
xlat
dec
mov
pop
iret
mov
xchg
mov
outs
push
inc
stos
add
stc
and
and
add
inc
cwde
push
sbb
add
rol
outs
add
inc
in
(bad)
(bad)
leave
sub
lds
jmp
pop
movs
and
push
mov
loopne
pop
add
sbb
push
repnz
fcom
test
(bad)
out
test
les
sub
mov
movs
inc
aas
jnp
jnp
cld
sub
mov
push
jle
and
adc
fst
add
push
daa
pop
movs
cmp
mov
mov
add
mov
cmp
lea
cli
xor
mov
scas
lods
fisubr
bound
cdq
ret
mov
push
add
stc
movs
add
push
xchg
hlt
dec
mov
push
ss
retf
int
fsub
ins
repz
rol
cwde
into
sbb
inc
push
jmp
stos
in
push
outs
dec
out
pop
fidivr
js
wrmsr
sbb
loop
add
inc
loopne
sbb
cmp
jns
sti
xor
mov
and
scas
xchg
push
and
leave
inc
popf
shr
test
or
push
mov
bswap
pop
arpl
pusha
jge
jne
fnstcw
push
int
pop
int
fsubr
movs
push
call
rcl
mov
or
movs
std
cld
lahf
add
mov
push
add
cmp
push
xor
push
xlat
push
ss
xor
add
(bad)
ret
ret
push
add
mov
push
stc
shl
push
ds
dec
mov
popa
test
mov
mov
ror
into
pop
fldcw
sbb
icebp
ret
in
xchg
pop
shl
sub
pop
int3
mov
adc
mov
cmp
dec
repz
xchg
mov
repz
ss
fwait
push
mov
ss
lods
pop
xchg
mov
test
push
xchg
popf
push
aaa
out
jo
lea
int3
(bad)
adc
jg
adc
cmp
cmps
dec
daa
sub
pop
dec
add
cmps
jl
mov
int3
dec
js
(bad)
(bad)
(bad)
ficom
xchg
cmovs
xor
dec
daa
push
test
ror
sub
jae
imul
jo
pop
clc
int3
push
loopne
jae
sbb
aad
or
retf
jg
sbb
mov
les
ja
cli
pushf
shl
pop
pop
pop
out
jg
cmp
imul
icebp
rol
and
shl
cs
inc
movs
test
ss
fst
add
fsubr
mov
dec
retf
inc
pop
in
cld
mov
sqrtps
sub
loopne
sub
mov
cmp
cmp
je
push
imul
leave
stc
add
imul
mov
or
std
jecxz
adc
mov
jae
pop
xor
push
lock
inc
xchg
dec
lahf
fstp
mov
iret
xchg
inc
lea
ret
mov
cmp
ror
inc
test
outs
outs
mov
out
xchg
push
mov
ja
(bad)
ror
fwait
sbb
ins
outs
cmp
into
xor
add
sbb
mov
push
sbb
nop
ins
cmps
jne
inc
jnp
add
mov
jl
fdivr
pop
push
cmps
or
inc
popa
shl
in
shl
sub
dec
mov
mov
in
mov
pushf
fcomip
push
push
add
in
(bad)
and
movs
fst
pop
mov
(bad)
ds
cmp
fstp
idiv
ror
dec
rcr
add
repz
mov
pop
cmp
mov
inc
fnsave
mov
xchg
call
iret
mov
push
pop
cmp
xlat
js
xchg
rep
es
add
push
mov
mov
es
cmps
adc
call
shl
daa
jae
inc
sbb
cmp
add
sub
push
cld
out
in
push
push
pop
in
jno
jns
xor
div
les
xor
push
fwait
test
mov
pop
cmp
call
and
rcl
hlt
cmps
jp
and
xor
cmp
into
movs
rcl
jns
jns
cli
mov
cmp
push
call
sbb
dec
test
(bad)
nop
sub
xchg
neg
dec
dec
mov
fs
cli
sub
push
sub
mov
(bad)
(bad)
mov
push
sbb
mul
inc
bound
push
daa
movs
mov
icebp
rcl
cs
mov
dec
jno
push
adc
repz
mov
mov
(bad)
fcmovnb
pop
push
sti
mov
mov
push
mov
cdq
cld
call
push
outs
xor
xchg
lahf
cmp
cdq
repz
shr
iret
add
add
cmp
mov
cmp
(bad)
fiadd
xor
in
cld
or
mov
shr
dec
repz
inc
fnstsw
stos
jno
add
xor
adc
pop
jg
imul
ret
popf
stos
repz
push
scas
mov
hlt
inc
xor
jg
aas
mov
cmp
xchg
xchg
imul
(bad)
hlt
popa
mov
movs
jmp
push
push
pop
das
popa
ret
dec
add
(bad)
in
add
std
stc
(bad)
iret
pop
sti
cmp
outs
js
pop
fcomp
dec
test
dec
in
arpl
outs
outs
aam
fcomi
add
mov
dec
hlt
out
pop
xchg
pop
icebp
push
jae
adc
hlt
int3
idiv
sub
imul
movs
add
imul
sub
bswap
fcomp
movs
shl
adc
ror
inc
jnp
mov
dec
leave
jecxz
stos
pop
call
loope
add
add
ficom
pushf
push
inc
daa
push
push
sbb
icebp
test
fwait
dec
or
dec
jmp
pop
stc
addr16
jmp
mov
dec
cmp
aad
dec
adc
int
push
inc
sub
mov
cld
jns
xchg
jmp
jecxz
cmp
xor
mov
movs
mov
sub
pop
jne
push
pop
mov
xchg
aaa
inc
and
ins
mov
cmps
sub
add
cmc
mov
push
inc
(bad)
inc
or
xchg
loopne
adc
mov
into
mov
pop
ss
cmp
ja
ret
sti
les
dec
add
dec
outs
push
arpl
pop
movs
mov
dec
jle
push
aam
nop
movs
push
repz
jge
or
or
push
jecxz
cld
sbb
push
push
ret
iret
ror
imul
inc
xchg
ret
mov
adc
sbb
(bad)
mov
sub
jbe
mov
cdq
fdivr
mov
subps
xchg
xchg
pushf
push
dec
jnp
aas
icebp
mov
jb
aaa
pop
data16
mov
dec
hlt
xacquire
jmp
mov
call
dec
cmps
sti
push
lods
aam
sbb
or
stos
dec
loope
ins
mov
push
adc
(bad)
pusha
pop
dec
xor
ja
stos
push
mov
imul
or
mov
loop
adc
dec
fs
aad
cmp
call
mov
pop
xor
xchg
test
mov
call
jo
and
or
adc
(bad)
cdq
xor
mov
inc
push
xor
and
lds
push
xchg
jg
mov
dec
mul
mov
mov
dec
push
mov
pop
fwait
jl
and
dec
sbb
xor
mov
iret
(bad)
sar
inc
sbb
push
in
mov
scas
repnz
ja
push
not
dec
idiv
stos
inc
scas
push
dec
jge
fninit
inc
xlat
jns
cmp
mov
loope
inc
jns
sub
pop
lds
repnz
(bad)
sti
mov
mov
dec
ror
shl
cli
fldpi
mov
push
mov
stos
mov
test
cmp
ins
mov
shl
scas
loope
jo
dec
pop
ret
mov
ins
cli
lea
gs
pop
(bad)
xor
push
xchg
faddp
mov
mov
scas
jg
push
jg
into
or
aaa
in
sub
retf
aad
dec
inc
cmp
jbe
sbb
leave
ss
and
cmp
or
ins
stos
aas
jne
and
sbb
inc
push
xlat
sub
stc
enter
aam
lahf
push
cmps
icebp
arpl
xchg
and
xchg
icebp
push
das
push
push
or
pop
data16
and
mov
scas
out
cwde
ins
xchg
mov
imul
dec
add
enter
stos
mov
mov
lods
ret
xchg
ret
jno
jge
and
int
dec
push
idiv
push
ss
dec
clc
mov
add
xchg
ins
jb
jle
push
dec
adc
mov
inc
cmp
fs
ror
popa
leave
or
xchg
cmps
pop
ror
(bad)
cwde
or
je
pop
jne
lahf
cmp
push
push
loop
pop
jge
mov
mov
mov
cmp
push
test
xchg
pop
cs
pop
call
jo
rol
mov
inc
test
in
pop
imul
sub
cld
inc
(bad)
mov
out
shl
sub
mov
jmp
sub
dec
ins
shr
and
sbb
fadd
dec
aam
add
sbb
imul
dec
xchg
xor
xchg
es
adc
or
xor
add
pop
and
mov
mov
rol
dec
lds
leave
inc
imul
and
or
push
cmps
outs
xor
call
scas
stos
and
(bad)
imul
xchg
loopne
and
jmp
ins
xor
arpl
or
ret
fidiv
fild
jle
ror
dec
lods
push
pushf
mov
xlat
ret
int3
jle
retf
pop
fst
jo
(bad)
pop
out
xchg
je
sub
cld
mov
int
and
ficom
popf
or
inc
cmp
lods
out
add
nop
cmp
imul
xor
aad
add
jo
pop
lods
mov
add
je
xchg
or
sbb
rcl
mov
xor
cmp
xor
pop
pop
xchg
outs
stos
lods
jmp
jae
lahf
data16
mov
or
cdq
test
mov
dec
jl
pop
pop
mov
test
pop
add
push
lock
push
dec
imul
push
adc
fld
or
mov
mov
jne
inc
lods
scas
cmps
xchg
xor
and
ror
outs
sbb
sbb
ret
xchg
fwait
dec
into
push
or
pusha
lea
adc
out
jo
xor
pop
mov
xlat
cld
not
jne
loop
adc
mov
ja
call
cmps
shl
js
sbb
mov
mov
call
lods
jp
inc
jg
mov
xor
pop
or
dec
mov
test
test
xlat
add
ror
sbb
dec
jge
push
push
jo
add
dec
test
add
outs
in
or
jg
sti
push
sbb
inc
push
inc
mov
jl
add
xor
push
mov
dec
pop
fs
out
xor
imul
sahf
mov
and
arpl
cmc
dec
mov
push
pop
xchg
sbb
cmp
xor
or
inc
push
fcom
lods
adc
cwde
fstp
inc
addr16
mov
aaa
sub
pop
sub
and
lea
push
repnz
inc
in
idiv
ins
inc
adc
or
fld
dec
mov
cmp
mov
add
test
sbb
inc
xchg
xchg
mov
(bad)
pop
ja
mov
(bad)
rcr
das
loopne
fwait
or
iret
into
cwde
push
inc
lods
xchg
push
out
lea
icebp
inc
pop
test
daa
jg
lock
sub
clc
mov
adc
clc
push
cmp
adc
add
test
inc
mov
jle
push
cmp
cmps
dec
jmp
das
xchg
rol
adc
add
shr
sub
stos
xchg
mov
inc
xor
or
cwde
cld
outs
push
inc
stos
jae
add
int
lds
pop
mov
sbb
sub
not
mov
call
mov
xchg
enter
sbb
rcr
add
mov
jb
das
mov
outs
sti
push
cmp
mov
mov
rol
xchg
nop
cli
imul
xor
jae
or
enter
gs
push
int
jae
push
xor
mov
pop
mov
fisttp
je
(bad)
lock
cwde
pop
inc
mov
jge
nop
mov
repz
aas
inc
adc
xor
out
sub
cmps
mov
(bad)
pop
and
mov
sbb
pop
add
retf
add
(bad)
push
xchg
lods
sbb
in
adc
aad
retf
inc
sbb
push
lods
dec
sub
push
(bad)
pop
pusha
pop
cmp
pop
popf
add
shr
push
test
scas
jae
cmp
fadd
call
or
stc
push
push
cmp
adc
call
fldenv
xchg
mov
fmul
ins
or
and
mov
test
sti
shl
or
add
rcr
shr
cmp
fisub
xor
pop
movs
push
cwde
xor
xor
sbb
and
loopne
cmp
shl
xchg
retf
or
mov
adc
(bad)
je
or
cmp
dec
ret
mov
and
sub
imul
pop
adc
jle
adc
xchg
add
mov
inc
lea
jbe
ret
adc
das
dec
inc
xchg
ret
lds
mov
pushf
xor
sti
jp
lods
fisttp
data16
not
mov
pop
repz
jmp
mov
imul
xor
iret
jge
mov
inc
movs
popa
xor
sbb
add
daa
out
add
mov
in
sbb
enter
push
xchg
test
mov
fisubr
jns
movs
xchg
out
mov
fnsave
sar
jp
nop
and
mov
push
dec
mov
mov
xor
loopne
jbe
or
out
sbb
add
mov
outs
cmc
daa
xchg
aas
or
ds
out
mov
mov
out
je
(bad)
or
push
dec
dec
push
outs
and
mov
pop
not
pop
jmp
nop
cmps
cwde
test
jmp
mov
mov
jb
dec
xlat
pop
cmp
push
push
(bad)
sbb
neg
sub
lds
pop
fcomi
or
pop
je
inc
test
clc
ret
repnz
daa
inc
js
ret
jle
shl
xor
arpl
pop
(bad)
pop
mov
fnstenv
fimul
fwait
dec
enter
dec
adc
add
xchg
add
sahf
call
rol
mov
sub
sahf
not
std
ret
dec
loopne
adc
adc
loope
xlat
jecxz
dec
mov
jmp
mov
add
push
xchg
in
stos
inc
cli
cwde
clc
pop
mov
dec
jle
pop
push
aam
xchg
dec
and
xor
inc
mov
push
shl
xor
add
scas
aam
or
shl
clc
and
sahf
and
cmp
jb
sbb
(bad)
xchg
jmp
fadd
stos
dec
pop
jae
xchg
jle
in
not
cli
outs
cmps
dec
jg
sbb
or
push
cmp
cmp
rol
pop
mov
jo
fwait
mov
sbb
pop
dec
or
add
fild
sbb
sub
sub
xchg
mov
xlat
push
imul
test
into
aad
fsub
jae
push
inc
bound
push
sub
arpl
push
cs
leave
loop
cmp
popa
mov
into
xchg
icebp
outs
dec
enter
inc
out
mov
lds
stos
lahf
push
xchg
add
inc
jnp
ins
mov
jae
std
outs
dec
aas
fstp
movs
and
pop
lods
mov
lahf
popa
shl
(bad)
sbb
pop
xchg
out
cmp
xchg
sbb
push
push
lahf
cs
jno
sbb
fwait
pop
popw
mov
mov
mov
sub
jnp
jne
or
pop
xor
lods
jl
jnp
mov
stos
sbb
std
movs
and
mov
mov
mov
mov
or
adc
fs
sbb
mov
push
test
cli
cmps
fs
xlat
adc
ins
inc
xor
push
and
jp
add
pop
scas
jge
daa
leave
xchg
mov
mov
shr
mov
add
sbb
sti
mov
loopne
or
daa
pusha
xchg
je
popa
push
out
pop
xlat
or
sbb
icebp
imul
cmp
mov
mov
mov
sbb
iret
sub
xor
loop
push
adc
jb
mov
dec
adc
sbb
mov
push
inc
jg
sbb
add
clc
cmp
ror
inc
dec
rol
das
cmp
xor
or
mov
inc
add
fist
std
mov
adc
rcl
sub
es
xor
clc
xchg
adc
pop
adc
push
shl
xchg
lods
mov
mov
xchg
cmp
cmp
nop
das
test
cdq
push
cmp
inc
repz
enter
in
inc
push
lea
pop
fidivr
fcmovb
shl
xchg
stc
call
sub
push
jno
cld
fwait
iret
out
adc
sbb
jmp
jbe
dec
or
inc
push
cdq
fadd
dec
nop
sti
sbb
mov
movs
mov
jne
icebp
pop
jbe
enter
push
(bad)
pop
push
sar
repnz
push
dec
mov
xchg
arpl
add
sub
sub
mov
dec
inc
sti
cmp
and
cmps
or
push
push
jmp
(bad)
out
fmulp
xor
xchg
ds
loopne
adc
pop
and
pop
cmp
dec
pop
into
ss
mov
mov
or
in
xchg
ss
(bad)
add
out
rcl
add
sbb
jmp
dec
cmps
js
fs
jmp
and
push
and
sbb
push
ins
(bad)
movs
call
in
push
add
lods
xchg
pop
test
mov
jle
pop
push
adc
(bad)
jmp
les
jnp
jmp
(bad)
loopne
ret
retf
jp
mov
jmp
and
and
mov
xchg
dec
mov
fwait
sub
sbb
and
out
push
rcl
mov
mov
inc
pop
(bad)
pop
jg
in
xchg
in
mov
inc
adc
pop
scas
and
and
cdq
fsubr
xchg
mov
std
and
scas
in
inc
loopne
jmp
fbstp
sbb
dec
sub
jecxz
rcl
mov
stos
xchg
(bad)
sbb
shr
mov
and
dec
inc
pop
or
mov
dec
xor
in
add
enter
jb
cmp
dec
shl
cmp
iret
xor
ja
sub
lods
push
dec
mov
pop
repz
es
mov
push
mov
scas
icebp
mov
mov
shr
xchg
imul
jp
(bad)
fcomp
add
ffree
scas
xchg
stos
pop
div
sub
sub
add
test
mov
adc
int3
rol
sub
movs
xchg
in
frstor
cmps
mov
adc
sbb
jne
aaa
aas
aas
or
aad
int3
js
push
pop
mov
xor
adc
cmp
or
stos
cmp
adc
push
add
mov
push
sbb
fcmovnbe
mov
sub
push
mov
cmovp
push
and
push
femms
sub
imul
test
mov
xor
inc
dec
mov
xor
out
sbb
test
inc
dec
lods
push
jb
arpl
imul
push
(bad)
add
sub
mov
push
xchg
push
bound
sbb
(bad)
ins
jno
test
jl
sti
xlat
jne
mov
shl
test
mov
sbb
imul
out
or
cdq
xchg
mov
sbb
dec
push
pop
(bad)
addr16
inc
jp
jne
aas
mov
in
dec
popa
push
arpl
push
cmp
lock
sbb
push
xchg
shl
lods
jbe
ja
mov
dec
mov
ins
push
(bad)
mov
nop
in
mov
clc
cmp
ret
sub
adc
call
mov
call
add
pop
movs
mov
sar
sbb
les
mov
lds
pop
loope
push
lods
aaa
jno
mov
(bad)
adc
(bad)
cmc
int
in
lea
aam
fbld
fild
xor
mov
mov
or
aaa
loop
les
stc
aam
dec
or
jns
lahf
jmp
push
out
or
retf
xor
call
es
lea
jnp
push
lea
sub
mov
dec
mov
or
push
mov
xchg
xor
stc
es
push
je
imul
stos
aaa
retf
sub
pop
(bad)
jecxz
into
xlat
mov
fist
or
xchg
dec
aaa
add
dec
lahf
(bad)
sbb
popa
add
jg
sbb
js
and
icebp
mov
xchg
lea
test
sub
loop
hlt
cmp
pusha
jae
into
and
out
pop
jnp
test
sbb
jp
mov
ins
fwait
mov
outs
cmp
pushf
mov
dec
fwait
sbb
push
mov
enter
out
cmp
arpl
cdq
adc
push
dec
neg
and
pop
addr16
sub
lock
cmp
pop
ins
sbb
sbb
rcr
loope
test
je
xor
ret
inc
repnz
retf
hlt
stc
push
or
lods
cmp
cdq
popf
call
push
lods
outs
scas
mov
jns
hlt
bound
mov
lea
mov
fidiv
cmp
lea
loop
sub
test
fiadd
rcl
mov
fistp
nop
jns
push
int3
shl
addr16
cmp
shr
adc
cmp
out
pop
inc
and
dec
mov
xchg
mov
sub
xor
and
in
jmp
sti
int
or
mov
push
aad
and
aas
push
or
cmps
pop
push
push
les
mov
dec
out
inc
sbb
mov
jmp
mov
push
push
xchg
(bad)
clc
push
jae
xor
cld
adc
or
in
arpl
nop
out
pop
arpl
jge
mov
jg
outs
push
icebp
inc
sub
movs
stos
sub
sbb
pop
(bad)
or
lea
repz
pop
inc
inc
pop
mov
cmp
(bad)
xchg
ja
mov
pop
fimul
les
xchg
mov
push
retf
loopne
push
inc
xor
ds
fcomi
sub
bnd
mov
aaa
(bad)
repz
ins
ins
popf
push
aad
mov
sbb
pop
pop
inc
movs
or
pop
push
in
inc
rol
scas
dec
pop
int3
sub
inc
push
push
pop
fmul
fidivr
pop
xor
cmp
imul
mov
mov
icebp
out
bound
push
stos
jb
das
not
cmp
out
mov
repz
cmps
inc
pop
xchg
jbe
inc
push
test
stos
mov
int3
std
mov
and
(bad)
shr
mov
test
push
mov
ins
and
mov
xlat
mov
add
ss
dec
add
inc
and
xlat
jg
lahf
div
and
fist
inc
shl
xor
cwde
mov
in
inc
stos
or
ficom
xchg
inc
outs
dec
mov
lahf
fcom
lods
and
adc
push
cmp
pop
mov
or
pop
mov
pop
je
jp
or
out
mov
lock
mov
aam
xlat
cmp
scas
bound
dec
fnstsw
inc
cmp
dec
add
mov
rol
sbb
mov
xchg
sahf
add
std
lock
pop
sar
retf
xchg
movs
cmps
clc
cmps
(bad)
mov
jae
push
aaa
ins
dec
xchg
jmp
out
add
adc
jno
mov
cli
jno
jae
mov
add
pop
dec
bound
(bad)
pop
lock
test
sbb
or
aas
inc
xlat
jmp
pop
call
jge
inc
mov
jne
les
pusha
(bad)
jmp
(bad)
xchg
push
jbe
retf
stos
cwde
pop
mov
xchg
xor
(bad)
fdiv
pop
test
mov
(bad)
fistp
mov
adc
sbb
mov
imul
scas
pop
bound
dec
pop
fisubr
mov
sbb
lds
(bad)
pop
aam
std
fist
jno
and
and
jl
mov
sbb
pop
pop
cmps
adc
xchg
push
test
push
or
pop
aas
sbb
mov
mov
fwait
jmp
or
push
xchg
scas
and
xor
pop
and
daa
retf
cmps
or
ret
mov
or
pop
sub
jmp
or
shl
push
and
xor
mov
fcmovnb
push
dec
dec
xchg
push
adc
fwait
sbb
cmp
movs
cwde
sbb
shl
(bad)
loop
ror
jnp
es
mov
adc
test
dec
test
movs
imul
jg
inc
cmps
fwait
data16
pop
xchg
xor
mov
js
fwait
sbb
out
mov
daa
push
mov
push
adc
mov
push
fistp
mov
std
and
xchg
cmp
ja
jmp
lahf
xor
adc
cmp
pop
sbb
or
jp
xor
ror
mov
in
inc
loop
les
into
fisub
mov
iret
jbe
xor
std
aam
stc
jecxz
ins
ror
(bad)
cld
add
scas
mov
ins
jns
inc
jno
cmp
push
lds
or
hlt
adc
dec
and
pop
inc
test
movs
les
out
xlat
es
pop
popa
aam
jae
xchg
jg
sub
rcr
test
mov
adc
int
test
add
test
mov
hlt
mov
in
xchg
loope
and
sbb
out
mov
jno
adc
push
jns
test
es
pop
fidiv
fistp
test
idiv
pop
jne
mov
aam
clc
lods
push
mov
push
mov
test
cmp
jbe
dec
pop
jg
or
adc
inc
in
xchg
sbb
dec
int
push
retf
cmp
call
mov
mov
cmps
scas
fs
pop
in
push
int
lods
imul
xor
push
xchg
inc
jmp
jmp
cmps
fstp
aas
mov
shl
mov
xchg
push
xor
push
shl
mov
mov
cmp
mov
sbb
mov
shr
movs
xchg
jnp
sub
sbb
in
xchg
dec
inc
mov
das
push
es
push
rol
xor
cmc
pop
or
and
add
and
int3
(bad)
out
sbb
sti
fdiv
mov
cmp
sub
and
cmp
in
sahf
push
push
sub
nop
jl
mov
or
inc
and
jnp
(bad)
cmp
jg
cmp
loopne
fnop
mov
cdq
push
ins
or
cmp
push
arpl
pop
push
ficom
arpl
jo
dec
lods
icebp
scas
inc
push
das
scas
sub
push
jge
jns
cmp
imul
test
movs
shl
xor
inc
cmc
xchg
fnsave
outs
stos
push
jnp
adc
push
cdq
xor
lock
(bad)
aam
cld
in
jo
or
sub
push
addr16
mov
sub
scas
stc
inc
inc
dec
cmps
inc
ret
dec
jns
push
or
js
sub
fdivr
cmp
adc
pop
aam
mov
int3
mov
jmp
data16
pushf
mov
jge
mov
scas
cmp
cmp
jecxz
lds
xchg
sti
cs
and
or
in
scas
pop
std
cmc
cmps
mov
into
pop
push
aad
xchg
lods
inc
mov
push
lds
fs
dec
sbb
cmp
pop
adc
and
jbe
out
popa
test
pusha
retf
xchg
and
add
sub
pop
and
mov
or
mov
idiv
xchg
mov
jle
push
iret
loope
nop
iret
out
ja
push
push
leave
ja
xchg
add
and
scas
call
mov
dec
pop
xchg
jl
adc
adc
lods
dec
pop
cmc
mov
fistp
pop
dec
push
stc
das
mov
pop
stc
sub
movs
jnp
or
daa
popa
mov
inc
cmp
inc
aam
mov
mov
les
jp
stc
int
loope
fadd
imul
hlt
cmp
mov
imul
sub
jle
push
movs
mov
add
ret
pop
xchg
addr16
bound
addr16
jns
cmc
mov
aaa
sbb
ftst
es
movs
cdq
call
out
lods
adc
hlt
xor
mov
inc
jns
lods
inc
mov
jns
ins
test
jae
sub
mov
cli
stos
add
outs
sbb
pop
add
pusha
cmc
(bad)
pop
fnstsw
and
mov
loopne
add
ror
mov
mov
into
(bad)
push
sahf
ret
inc
aad
sbb
mov
jg
xor
mov
mov
lods
sti
and
js
rol
dec
(bad)
sbb
ds
fnstcw
xchg
stc
pop
ror
daa
aad
adc
add
adc
push
dec
jmp
ret
pop
popa
adc
mov
call
jmp
outs
fwait
loope
into
push
fld
sbb
mov
push
sahf
jo
or
mov
mov
popa
add
dec
mov
sub
adc
(bad)
fs
sti
movs
or
push
ins
stos
adc
inc
mov
ret
aam
aad
rcl
sbb
mov
sbb
sub
cmp
call
cld
int
(bad)
pop
pop
sub
dec
in
cdq
xor
iret
or
fnsave
adc
loope
stos
fcmovu
jno
adc
cmp
fmul
les
cs
xchg
movs
lods
shr
push
jg
clc
shl
test
adc
popa
mov
and
in
mov
popa
cmc
cmp
jl
icebp
sar
sahf
xchg
scas
popf
mov
push
(bad)
aas
adc
add
inc
cwde
mov
push
ins
in
gs
mov
test
add
popf
outs
lds
fwait
int3
add
add
arpl
mov
mov
mov
inc
outs
dec
mov
sub
repz
pop
sub
mov
test
(bad)
out
ficomp
and
cmp
(bad)
movs
mov
je
or
loopne
xlat
jg
xchg
xor
pop
and
mov
inc
rcl
stos
(bad)
out
mov
por
and
int
int3
sahf
or
sub
inc
jl
push
jp
sbb
xor
mov
mov
xor
into
mov
cmp
jg
adc
sbb
jg
sub
push
jmp
retf
hlt
aad
xchg
ret
dec
jo
jae
loop
and
nop
ds
test
cmp
pop
inc
and
mov
xchg
gs
daa
adc
xchg
or
xor
sbb
pop
lds
pop
or
adc
xchg
adc
mov
jae
aad
in
dec
sbb
rcl
das
scas
je
shl
rcl
xlat
dec
jp
add
inc
dec
rol
adc
inc
mov
or
gs
adc
xor
ins
cmp
cmps
in
repz
xchg
pop
cmp
lahf
mov
adc
mov
add
push
sahf
add
push
cmp
ja
cmps
xor
punpckhbw
mov
jae
movs
add
lods
in
or
push
jae
retf
sbb
test
add
push
xlat
mov
mov
hlt
test
(bad)
mov
dec
stos
movs
imul
push
aad
int3
rol
rcr
and
cmp
adc
mov
fimul
das
mov
ret
sbb
(bad)
enter
clc
out
aad
sahf
mov
or
push
mov
sub
scas
inc
push
add
jecxz
and
jb
xchg
int
adc
mul
dec
stc
out
es
sub
mov
shl
mul
inc
dec
rol
(bad)
push
ins
retf
cli
pop
(bad)
mov
sub
xchg
ror
or
gs
scas
sbb
jl
dec
mov
mov
adc
xor
xor
and
mov
adc
and
xor
cwde
adc
jo
lods
js
call
sti
xor
jbe
push
ins
push
das
sbb
push
mov
jne
pop
or
xchg
sbb
cmp
leave
pop
inc
dec
xor
daa
and
dec
sub
or
xchg
paddsb
(bad)
test
or
push
sti
and
xor
std
mov
mov
retf
out
add
ret
mov
push
adc
pop
mov
pusha
xchg
cmp
push
mov
loop
xchg
aas
test
add
ins
add
mul
mov
aaa
loop
inc
div
mov
adc
mov
mov
add
sub
mov
cld
sar
dec
push
push
js
xchg
xor
and
je
push
mov
push
xlat
sub
fs
cmp
fiadd
or
jae
mov
js
push
stos
jp
jne
and
pop
sub
cwde
sbb
mov
(bad)
idiv
sub
add
and
jmpw
mov
je
test
push
pusha
das
xchg
ja
pop
push
sub
cmp
and
mov
adc
push
push
push
test
pop
(bad)
mov
sbb
call
push
push
sub
rcl
mov
pop
cmps
test
out
pop
fmul
add
fs
push
push
(bad)
fcomp
sub
rol
adc
pop
aam
imul
(bad)
loopne
rcr
mov
or
or
daa
das
gs
(bad)
fcom
outs
dec
mov
xchg
fist
xor
aas
int3
adc
pop
push
lds
inc
dec
stc
jg
fs
loop
retf
ds
cwde
enter
sbb
shr
or
xchg
mov
fistp
aaa
out
cli
out
jbe
mov
jns
pop
xor
xor
lock
mov
jecxz
lods
pop
sbb
mov
bound
xor
les
add
std
inc
pushf
repnz
push
stos
xor
mov
mov
cmp
adc
out
dec
ss
daa
loope
mov
(bad)
(bad)
pop
repz
lods
aaa
in
pop
(bad)
shl
inc
mov
xchg
ret
dec
popa
shl
repnz
jae
arpl
inc
sub
push
adc
cmc
cmp
sahf
push
mov
ret
js
stos
adc
jp
(bad)
cli
jmp
clc
fisubr
call
cdq
add
and
or
push
xchg
xor
push
mov
or
mov
ja
xchg
jmp
ss
je
push
out
(bad)
mov
inc
mov
pop
cmps
mov
mov
xchg
push
outs
mov
adc
pmulhw
lock
daa
inc
ins
pop
adc
in
mov
dec
mov
hlt
or
dec
xor
mov
or
idiv
cmp
loopne
jne
mov
xor
push
jle
std
add
fwait
pop
cli
or
pop
mov
(bad)
loopne
mov
pop
(bad)
jno
ins
mov
out
dec
dec
jmp
or
lahf
cmc
cmps
xor
lods
ret
jmp
not
cld
push
hlt
mov
(bad)
mov
adc
std
xchg
pusha
(bad)
jge
and
cmps
lods
gs
hlt
mov
sbb
pop
lods
push
call
inc
jge
test
lahf
mov
dec
and
push
leave
push
fst
adc
dec
jl
mov
les
dec
pop
(bad)
mov
test
lea
or
and
push
mov
lods
push
int3
cmp
push
and
mov
mov
stc
dec
mov
mov
xchg
test
pop
daa
push
mov
mov
nop
outs
ss
adc
mov
sub
ins
test
pop
test
sbb
rep
cmp
imul
jno
out
adc
jne
je
fisubr
mov
fimul
mov
ins
push
cmp
jp
pusha
aam
xchg
in
mov
pop
pop
xchg
xor
xlat
push
jo
mov
rol
std
movs
jns
sub
mov
sub
imul
ret
dec
inc
(bad)
idiv
test
lods
jle
lahf
sbb
pop
and
adc
neg
sub
adc
mov
push
jnp
rcl
hlt
xlat
ror
pushf
add
xor
jnp
dec
and
or
sub
jae
sbb
lods
and
inc
int
push
imul
pop
jmp
or
fdivr
pusha
(bad)
in
sbb
mov
pop
fwait
popa
(bad)
stos
int
xchg
mov
add
jl
pop
and
lock
imul
jae
jo
stos
movs
jmp
or
mov
loopne
jmp
mov
push
adc
les
lock
add
push
fisubr
es
movzx
jmp
pop
inc
rcl
mov
fucom
sub
jmp
cld
shl
xlat
je
inc
mov
xchg
pop
push
sahf
mov
sbb
or
iret
pop
enter
jecxz
lea
or
pushf
lods
addr16
leave
pop
sbb
call
cwde
pop
imul
mov
outs
adc
add
dec
or
inc
(bad)
out
mov
test
lods
popa
(bad)
and
fnstcw
xchg
loop
fist
sub
xor
mov
xchg
push
pop
xchg
or
and
or
push
sub
cmps
push
and
mov
pop
and
jne
fwait
xchg
mov
rcl
mov
das
sub
pop
shl
ins
push
push
mov
ret
jno
clc
jl
inc
test
sub
mov
scas
adc
lock
sti
dec
fidiv
push
xor
and
xor
push
dec
jmp
cmp
push
pop
pushf
imul
lds
mul
sti
sahf
mov
cmp
and
push
push
lock
lds
js
js
xchg
jl
mov
and
jnp
sbb
jbe
jl
jmp
loope
ror
inc
mov
push
aam
mov
inc
xchg
adc
inc
adc
ins
inc
(bad)
(bad)
fcom
mov
jae
push
add
in
movs
pop
mov
(bad)
pop
inc
adc
les
fdivr
mov
jb
(bad)
cmp
mov
arpl
mov
imul
pop
xchg
movs
loope
jo
inc
push
cmp
in
jp
loop
ret
jle
sub
or
aad
hlt
adc
(bad)
mov
in
(bad)
mov
clc
test
cs
lock
inc
fist
inc
repz
cwde
dec
int3
loop
test
lds
and
in
add
pop
adc
adc
ds
dec
movs
test
cmps
loope
aaa
xchg
sbb
mov
loop
ror
sub
mov
cld
fmul
call
push
mov
xor
icebp
test
mov
mov
pop
inc
in
jbe
(bad)
adc
fdivr
fst
into
add
in
test
aas
ds
xchg
js
sub
jb
shl
jne
mov
mov
sub
jl
mov
xor
fcom
das
mov
bound
test
pop
and
jbe
sub
inc
arpl
xlat
sti
cmps
sbb
test
test
inc
enter
mul
fwait
xchg
ret
jmp
jmp
adc
mov
aam
pop
test
iret
mov
push
es
mov
in
leave
mov
pop
cmp
out
in
retf
mov
neg
add
jne
jecxz
adc
cmc
mov
mov
int3
imul
or
aaa
pushf
cmp
push
movs
adc
fcomp
pushf
dec
adc
add
outs
pusha
jae
repnz
popa
xchg
aam
mov
imul
cmp
outs
pop
adc
pop
test
les
leave
mov
dec
mov
retf
call
add
stos
enter
push
pop
in
cmp
dec
jmp
adc
xor
adc
std
cmp
aad
daa
mov
in
bnd
add
pop
sahf
xchg
bound
sbb
push
adc
(bad)
xchg
mov
xor
jo
mov
jae
xchg
call
push
ins
mov
fldcw
xor
gs
mov
in
sub
jnp
out
add
rcl
jmp
dec
in
aaa
in
pop
pop
xor
push
inc
test
cdq
shr
or
push
mov
xor
sbb
pop
enter
or
and
mov
idiv
jp
clc
or
leave
pop
bound
mov
jp
pop
pop
mov
xor
in
lods
in
push
js
pop
popa
xchg
dec
ficom
pop
lds
sbb
in
fisttp
jno
aad
add
mov
fisubr
jecxz
out
cwde
xor
push
outs
jge
inc
in
or
(bad)
repz
and
or
xchg
sahf
adc
dec
pop
xlat
retf
rcl
jmp
mov
fisttp
pop
pop
pop
dec
jae
dec
inc
jnp
mov
xchg
pop
gs
inc
xor
xchg
jbe
(bad)
bound
bswap
test
cmps
xor
fst
sub
adc
ja
popf
cld
xor
cmp
cmps
pop
add
out
(bad)
mov
daa
pop
into
outs
fs
dec
pop
and
cli
rcl
jne
add
outs
call
js
sub
and
inc
jae
push
inc
inc
sub
rol
xchg
push
ret
pop
push
inc
mov
mov
cmp
mov
push
mov
mov
xchg
outs
mov
int3
rol
fst
push
imul
dec
inc
dec
test
aaa
mov
pushf
sbb
pop
xchg
xor
push
inc
movs
cmp
shr
lock
mov
cdq
jns
add
dec
add
and
xor
push
pop
repnz
in
jbe
xor
pop
mov
mov
test
or
push
mov
loop
movs
add
jle
adc
(bad)
mov
dec
mov
test
cmp
xchg
add
pop
jle
mov
pop
lods
mov
dec
movs
jns
adc
cdq
call
stos
adc
jo
(bad)
mov
in
nop
jns
mov
mov
repz
mov
cmc
icebp
movs
mov
out
mov
xor
dec
or
sbb
es
cmp
stc
es
lods
inc
cmps
xor
pop
mov
dec
shl
sbb
push
cmp
sub
ret
stos
push
(bad)
mov
xor
fmul
adc
mov
or
sbb
imul
cmp
mov
push
stos
mov
aad
sub
and
xchg
ud2
jae
cmc
jp
or
repnz
(bad)
sahf
pop
mov
test
outs
pusha
cmp
in
movs
stc
fdivr
ret
add
xor
xchg
js
sub
jle
fdiv
or
cmp
or
mov
cs
push
lods
test
in
or
or
adc
or
or
or
or
mov
ds
dec
xchg
push
sub
lods
mov
or
adc
movs
xlat
inc
mov
sbb
xchg
cs
dec
xchg
inc
jns
enter
idiv
pop
or
dec
cs
nop
pop
outs
ss
xchg
(bad)
fwait
movs
adc
popf
dec
shl
repz
cli
push
lock
mov
dec
popf
leave
sbb
xchg
out
ror
lea
or
dec
jg
jmp
in
mov
sub
jo
mov
je
je
jge
arpl
add
xor
std
xor
xchg
mov
xor
push
loopne
push
test
mov
xchg
sbb
into
xchg
arpl
call
xor
inc
or
xor
gs
sti
dec
jmp
xor
jb
mov
inc
sub
aam
fcmovu
push
jns
add
adc
and
mov
into
xchg
lea
dec
jmp
test
in
pushf
or
add
sub
loope
jmp
mov
not
inc
sahf
test
push
mov
adc
retf
jnp
mov
mov
xchg
or
lods
jnp
cmp
jp
jmp
retf
outs
aas
inc
mov
frstor
ror
jmp
xor
ds
movs
xchg
lea
jb
ficomp
icebp
(bad)
ins
arpl
scas
lods
sub
adc
movs
hlt
imul
push
pop
addr16
mov
jecxz
dec
pop
pop
mov
mov
mov
sub
mov
cdq
push
mov
mov
mov
dec
fstp
test
or
jnp
pop
mov
xor
xchg
(bad)
mov
fbstp
pop
call
retf
mov
jge
jl
adc
aam
add
ret
sub
adc
pusha
fcomp
jge
push
sbb
addr16
test
sti
mov
push
jo
sti
fadd
xor
mov
shr
js
popa
mov
xchg
sahf
scas
pop
jmp
in
mov
popf
call
jmp
cmp
cmps
ss
adc
gs
inc
xor
jg
in
xchg
mov
jmp
fst
es
adc
or
sub
pop
int
loop
out
jg
jecxz
popa
cmp
xchg
adc
cmp
and
aam
loope
mov
ins
push
pop
movs
rol
mov
repz
cli
xchg
sub
xor
sti
sbb
fistp
mov
fst
or
xor
sub
inc
xor
aad
xor
dec
mov
call
cs
inc
loope
sub
cmp
nop
(bad)
pop
popa
lds
mov
movs
pop
sbb
push
pop
aad
xor
mov
mov
bound
cmps
xor
cmp
xchg
add
jae
imul
je
pop
icebp
mov
retf
inc
out
clc
xlat
bound
xor
push
xchg
(bad)
add
jne
xor
mov
out
sbb
and
mov
fwait
in
gs
adc
lahf
pop
cmps
mov
add
push
ret
or
xchg
fldcw
jo
fistp
mov
jnp
inc
inc
mov
mov
mov
cmp
test
icebp
js
dec
jo
jg
test
enter
jo
and
cmc
bound
mov
in
setb
pop
mov
pop
dec
dec
test
add
(bad)
jb
mov
or
dec
and
out
stos
test
push
mov
lea
cmps
mov
jg
inc
out
je
in
in
idiv
test
ds
test
dec
rcr
jb
or
pop
outs
out
xor
dec
mov
pop
xchg
adc
add
pop
add
mov
and
jno
repnz
ror
push
dec
xchg
(bad)
gs
adc
mov
and
enter
das
push
push
test
nop
mov
call
mov
add
(bad)
outs
cld
lock
add
outs
cmc
shl
xor
sub
jb
aam
out
dec
adc
adc
fcom
pop
daa
cmc
pop
clc
lods
push
push
call
dec
dec
hlt
fsin
fdivr
(bad)
fldenv
sub
(bad)
imul
push
add
mov
mov
xchg
adc
int
mov
adc
call
sahf
sub
pop
jbe
xlat
(bad)
jge
scas
or
mov
jns
add
pop
add
loop
push
js
test
test
or
push
xchg
call
mov
inc
mov
es
out
loope
push
int
cmps
ins
mov
mov
ins
les
leave
jmp
push
in
pop
stos
in
outs
sbb
push
jmp
push
dec
call
outs
sub
(bad)
mov
enter
jmp
inc
adc
jae
pop
xchg
repz
into
push
push
push
(bad)
jbe
ins
push
ror
call
loop
cmp
cmps
xor
pop
inc
mov
aam
je
ja
jns
and
and
hlt
sbb
dec
mov
pop
mov
inc
push
or
inc
cmp
pushf
in
sbb
sub
push
pop
inc
fsubp
ret
lock
mov
add
xchg
sbb
dec
(bad)
ror
xchg
cmp
popf
mov
pop
retf
jmp
push
or
fcmovnu
or
pop
add
inc
mov
or
xchg
scas
(bad)
fdivr
push
adc
fdivrp
push
jmp
int
or
inc
and
pop
dec
out
sbb
dec
(bad)
mov
cld
mov
mov
xor
call
fild
push
fcom
int
(bad)
(bad)
cli
imul
sar
cmps
mov
pop
pop
ret
fs
jg
(bad)
sbb
xchg
cwde
mov
ror
xchg
movs
test
loopne
sub
push
fcmove
cmps
or
jae
cwde
pop
mov
sub
adc
test
pop
jecxz
loopne
add
fidivr
out
shl
jb
fistp
pushf
(bad)
push
pop
mov
mov
mov
adc
jmp
sbb
pop
xchg
or
xor
cdq
mov
repnz
sbb
adc
xor
scas
sub
imul
xor
fisttp
repz
or
std
xor
out
fnclex
cmp
imul
out
jge
or
cmps
js
mov
fidiv
pop
cmps
pusha
into
dec
scas
lds
jns
(bad)
adc
add
(bad)
xor
xchg
mov
sbb
sub
and
sub
test
add
lea
in
imul
popf
js
inc
mov
sub
icebp
ja
sub
fsubr
dec
sbb
sub
xchg
fwait
movs
(bad)
enter
cmp
das
int
push
pop
mov
cdq
sbb
mov
aas
movs
jecxz
jae
and
mov
xchg
jl
sub
adc
adc
cmp
lock
scas
pop
push
fisub
sar
mov
xchg
frstor
push
cdq
inc
xor
movs
cmp
leave
(bad)
and
(bad)
stos
pop
test
ds
int3
push
aas
adc
mov
cmps
(bad)
mov
mov
inc
add
cmps
repz
mov
and
add
retf
lea
outs
xor
je
dec
retf
out
adc
stc
jmp
adc
hlt
stos
dec
mov
inc
adc
pop
push
push
pop
push
pop
sbb
mov
jae
je
fbstp
pop
adc
loopne
cmps
rcr
(bad)
mov
push
inc
push
pop
and
movs
or
dec
adc
in
push
pop
mov
jg
xlat
mov
mov
or
nop
sbb
(bad)
xchg
dec
inc
adc
add
in
pushf
jns
jle
adc
push
dec
xlat
cmp
aam
mov
or
mov
xchg
and
push
mul
sbb
add
add
lea
inc
adc
cs
vxorpd
and
sub
cwde
aaa
xchg
scas
(bad)
loope
jg
adc
iret
and
into
push
sub
xlat
adc
jmp
dec
or
stc
dec
leave
xor
jmp
xchg
(bad)
mov
adc
imul
jae
imul
aaa
test
dec
xlat
mov
add
cmp
push
movs
loop
neg
sbb
inc
loopne
xor
popf
inc
cwde
jbe
or
and
stc
mov
cmp
sbb
retf
dec
lahf
neg
test
mov
adc
lahf
lahf
push
push
sar
cmp
fild
sbb
sbb
pop
add
dec
lahf
cmps
pop
push
cmps
mov
lds
shl
inc
popa
ins
icebp
imul
shl
push
jo
and
sub
sahf
sbb
nop
mov
or
out
cmp
jae
jle
or
and
sahf
retf
xor
mov
add
jne
fisub
push
sbb
mov
and
aas
xchg
das
pop
inc
push
mov
pop
leave
ret
movs
in
adc
dec
bound
call
faddp
jg
out
pusha
je
fnsave
test
out
iret
pushf
jo
(bad)
rol
in
popf
in
call
(bad)
hlt
(bad)
out
sub
ins
push
jecxz
popf
cmp
(bad)
push
mov
mov
iret
out
stc
mov
mov
shl
dec
and
xchg
popa
int
ret
mov
mov
xchg
es
nop
lahf
xlat
lahf
mov
adc
push
ror
pop
or
and
daa
jge
mov
adc
call
xchg
ror
sbb
jno
lock
lock
fdiv
fstp
mov
outs
sub
jns
pop
mov
(bad)
fadd
aaa
and
xchg
call
in
and
push
add
mov
cmp
pop
rcr
jmp
add
jb
jbe
movs
repnz
jp
mov
fst
jne
inc
adc
ret
mov
mov
jl
and
dec
or
inc
push
xchg
out
cmps
pop
ret
ins
(bad)
xor
xchg
xor
jo
xchg
ret
xor
shl
jno
inc
cdq
arpl
sbb
jle
loope
fcomi
test
js
pop
scas
mov
sub
xor
cmc
jo
cmps
repnz
push
f2xm1
jno
fdiv
sbb
(bad)
stos
xor
cmps
in
retf
adc
movs
das
push
or
popf
sbb
cdq
adc
or
sbb
jge
sub
inc
jg
popa
sbb
into
or
data16
mov
test
push
ins
xor
in
jg
loopne
sub
popa
pop
aas
adc
out
xchg
cmp
adc
cmp
cld
xor
xchg
into
push
out
test
xor
int
pop
push
(bad)
dec
cmc
mov
xor
enter
dec
sub
add
movs
stos
add
jbe
aas
fmul
or
mov
push
add
retf
sub
cmps
popa
fimul
jl
cli
ret
call
or
(bad)
xchg
xlat
add
or
pop
sbb
push
and
xchg
mov
push
mov
aas
mov
hlt
aaa
push
add
std
fsubp
cld
xor
es
push
push
fdiv
in
aas
xchg
ins
dec
jnp
and
popa
or
sub
pop
pop
and
lods
sti
cmp
ror
ffreep
inc
(bad)
popf
add
jno
pop
jg
test
cmp
fldenv
ss
adc
push
out
jne
mov
outs
mov
enter
mov
ja
sub
or
sub
xor
push
repnz
and
mov
mov
mov
push
shl
fstp
frstor
ja
and
jbe
xchg
lods
imul
cld
or
in
icebp
mov
into
pop
(bad)
adc
xor
fcomp
cdq
sub
lock
mov
mov
in
mov
rcr
js
stos
xchg
jmp
mov
jbe
pop
aad
mov
jbe
jo
pop
jb
sti
lock
pop
push
daa
xchg
(bad)
mov
adc
sar
pop
repnz
push
mov
lds
jae
cs
mov
xchg
xchg
dec
add
mov
mov
cmp
mov
add
dec
add
cmp
retf
sbb
mov
adc
out
inc
dec
push
inc
xadd
add
(bad)
ins
xor
(bad)
inc
cmps
mov
fcmovne
push
iret
mov
push
xchg
std
fxch
leave
xchg
mov
aaa
js
adc
mov
push
test
clc
jnp
test
gs
mov
sbb
add
and
inc
mov
sbb
lahf
dec
and
pop
mov
push
ret
aam
and
aas
rcr
adc
loopne
inc
xor
push
(bad)
mov
pop
mov
sbb
or
fadd
cmp
ds
in
clc
dec
mov
(bad)
imul
out
inc
test
mov
mov
movs
or
shl
xor
add
add
sub
frstor
retf
movs
(bad)
stos
test
out
call
in
test
dec
fwait
mov
std
(bad)
in
jnp
and
mov
rcr
inc
inc
das
test
mov
cld
jmp
rcl
in
out
mov
jnp
jb
fld
inc
or
jge
not
adc
mov
in
ret
jmp
je
shr
or
jmp
movs
out
out
xchg
je
(bad)
ds
xor
xor
jmp
sbb
stc
ret
out
or
(bad)
jb
mov
rcl
mov
pop
jmp
xchg
popa
or
cmp
clc
je
bound
cmp
mov
mov
adc
pushf
arpl
add
pop
sbb
pusha
dec
(bad)
in
in
call
jg
test
adc
mov
push
dec
repnz
mov
fiadd
push
imul
xchg
shl
(bad)
sub
push
sbb
mov
cmc
and
enter
int
jp
loop
xor
mov
jb
dec
stos
lods
push
inc
push
data16
bound
push
cdq
mov
out
jge
test
pop
lods
push
or
cld
adc
(bad)
hlt
and
imul
and
mov
ss
add
popf
mov
test
jecxz
or
pushf
mov
sub
movs
out
xchg
xor
jle
ins
mov
stc
popf
dec
inc
xor
outs
sbb
mov
push
inc
test
and
ss
aad
xor
add
and
test
add
stc
jno
ja
add
jmp
xchg
mov
push
xor
inc
sahf
xchg
fmul
and
pop
mov
jb
cwde
inc
mov
fld
dec
mov
and
or
sbb
push
jns
ret
sar
fs
ds
and
rcr
cmp
xchg
xor
gs
cli
add
lahf
mov
pop
fmul
mov
pop
scas
mov
lods
adc
xchg
scas
cmp
pop
cmc
xchg
push
enter
repnz
cs
xor
lods
and
imul
jmp
mov
addr16
mov
dec
mov
out
adc
nop
out
leave
rcl
inc
enter
(bad)
and
cmc
xor
mov
les
cs
mov
mov
cmps
sar
hlt
aaa
imul
nop
arpl
add
cwde
or
sbb
not
aad
gs
into
mov
stc
not
and
jb
(bad)
jecxz
test
enter
(bad)
mov
fcom
jns
sbb
jnp
xchg
cli
mov
cmc
dec
clc
pop
mov
push
ins
or
loopne
add
cmp
and
jecxz
hlt
push
repz
lods
fist
sub
sbb
pop
stos
mov
out
push
jge
leave
and
loope
fisubr
mov
sahf
mov
inc
mov
add
clc
push
fnstenv
into
mov
repz
int3
sti
dec
(bad)
(bad)
repz
fdiv
(bad)
pop
mov
sbb
mov
add
pop
call
mov
cmp
std
xor
pushf
popa
scas
push
add
pop
int3
mov
and
cld
ins
xchg
mov
loopne
in
add
ss
xchg
push
call
or
(bad)
sbb
mov
hlt
lock
jmp
inc
out
leave
jg
lea
rol
outs
mov
mul
test
mov
test
cmps
jmp
sahf
fcmovu
adc
push
sub
or
pop
and
pop
mov
sbb
adc
and
xor
ins
stc
adc
pop
pop
loope
not
rol
cwde
dec
sub
jbe
pop
sub
fs
gs
sbb
dec
push
push
div
iret
mov
inc
add
mov
clc
dec
mov
data16
lods
scas
repz
je
jmp
in
lea
es
pop
out
and
jp
pop
arpl
(bad)
pop
test
call
je
cli
jnp
loope
(bad)
pop
sub
dec
push
sub
cmp
mov
(bad)
mov
shl
dec
stc
outs
sti
mov
jecxz
out
jmp
daa
lahf
mov
sbb
jmp
add
nop
push
push
cli
retf
sbb
sub
cld
lea
cmp
inc
push
shl
xlat
(bad)
enter
pop
dec
outs
mov
sub
leave
push
hlt
adc
inc
push
xlat
cmp
jle
xor
mov
dec
inc
rcr
in
jo
pop
dec
sahf
lds
test
popf
mov
push
int3
sbb
data16
inc
ins
push
int3
call
mov
(bad)
das
lods
and
dec
cld
jl
jmp
add
je
adc
xor
mov
iret
neg
jle
(bad)
dec
pop
adc
in
jmp
pushf
pop
out
in
retf
lahf
and
leave
pop
mov
xor
mov
fst
sbb
cs
adc
mov
mov
loope
sbb
ss
xor
xor
jns
jle
jecxz
shl
sub
add
ja
test
ja
jmp
orps
adc
(bad)
(bad)
fucomip
xlat
push
sahf
repnz
loop
add
test
mov
mov
mov
xor
pop
xor
outs
cmps
repnz
and
cmp
imul
aas
je
xor
repz
push
lock
fadd
cmp
(bad)
cmc
push
or
pop
retf
jl
repnz
add
repz
and
xor
cmp
jp
push
lahf
mov
shl
mov
and
imul
xchg
sbb
xor
stos
cld
push
sbb
fwait
mov
sbb
popf
or
mov
lods
sub
ret
jne
fcmovb
ins
aaa
xor
xor
pop
inc
jnp
add
out
adc
adc
jns
fsub
jmp
cmp
inc
xor
imul
xor
sbb
push
xchg
push
pop
enter
gs
add
mov
jo
or
fcomp
xor
cs
xor
in
adc
cmp
mov
ins
mov
in
loop
pop
movs
or
xchg
push
inc
jmp
lahf
mov
dec
call
cmps
fdivr
inc
cli
pop
movs
fadd
dec
cmp
push
xchg
(bad)
imul
ret
stc
and
sub
pop
das
and
rcl
addr16
pop
(bad)
fidivr
dec
adc
shl
jnp
test
and
dec
mov
popa
out
dec
mov
shl
mov
inc
mov
add
loop
pop
test
mov
cmps
inc
dec
fs
push
ret
repnz
sub
je
xor
sub
dec
pop
out
xor
mov
add
in
popf
rcl
xor
jecxz
push
je
sbb
push
push
jge
cld
sbb
ds
sub
mov
mov
cmp
les
mov
dec
or
(bad)
pop
or
push
into
fmul
jmp
pop
pop
stos
mov
std
push
jmp
pusha
or
std
adc
xchg
jl
mov
xchg
addr16
scas
xchg
pusha
dec
mov
call
push
mov
stc
(bad)
stc
sbb
(bad)
mov
ret
mov
cs
nop
retf
fisubr
or
ret
push
sti
int3
jge
outs
jp
jne
popf
inc
cmp
out
iret
aam
fmul
jno
bound
lods
adc
je
push
je
shl
inc
xlat
popf
pop
pop
gs
(bad)
sbb
add
cmp
cli
leave
push
movs
or
arpl
add
mov
adc
mov
lods
mov
aaa
inc
in
inc
xor
add
daa
mov
sub
pop
xchg
push
(bad)
inc
int3
mul
xchg
out
xchg
push
gs
fstp
adc
into
rol
out
xor
adc
inc
cld
pop
mov
jo
je
or
adc
mov
in
push
dec
jp
scas
jne
inc
or
mov
push
adc
icebp
mov
les
dec
mov
loop
(bad)
mov
ins
pop
scas
push
lahf
and
rcr
fldenv
fidivr
jl
les
loop
hlt
xor
retf
jnp
cmp
test
arpl
adc
mov
repnz
jmp
xchg
sub
sub
cs
xor
into
inc
(bad)
inc
jl
add
add
lods
retf
fst
push
fild
mov
pop
aaa
cmp
nop
inc
pop
add
dec
add
push
xchg
sbb
xor
ss
or
push
push
in
xor
inc
or
mov
std
jno
repnz
sbb
pushf
ds
retf
jne
xchg
sub
sub
idiv
es
test
mov
data16
stos
mov
mov
jmp
and
pushf
dec
xchg
pusha
hlt
aad
inc
push
inc
outs
mov
jmp
daa
or
jp
mov
in
xchg
adc
arpl
pop
xchg
loop
and
adc
jp
mov
shl
xor
(bad)
outs
(bad)
jbe
ret
mov
lahf
xchg
(bad)
mov
arpl
loope
imul
push
fidivr
fnstcw
scas
out
fld
ret
mov
add
ins
and
ror
push
sub
ss
lods
and
int3
les
(bad)
in
inc
mov
fstp
and
fdiv
leave
cmc
popf
jle
push
shr
xor
sub
mov
xor
sbb
and
xchg
mov
mov
ret
mov
adc
cmp
inc
push
in
mov
mov
aas
popf
je
sti
xchg
and
xor
adc
mov
sbb
add
gs
mov
and
cmps
in
repnz
cmp
mov
mov
cwde
enter
lock
mov
lahf
jae
shl
adc
inc
mov
gs
ret
add
jo
punpckhwd
xchg
mov
(bad)
mov
mov
scas
mov
jbe
and
and
or
stos
leave
cmp
jno
test
jne
or
ret
(bad)
jge
mov
mov
les
popf
inc
adc
pop
pop
mov
pop
inc
mov
mov
shl
into
dec
ret
sub
jne
jmp
pop
lods
pop
mov
dec
push
jne
scas
adc
jmp
scas
xchg
(bad)
and
adc
inc
xchg
jb
nop
pop
dec
cmp
es
lahf
mov
cmps
and
out
shl
imul
aaa
daa
mov
jo
adc
test
sub
je
sar
movs
sbb
mov
inc
jmp
mov
fwait
sbb
je
mov
push
es
int
cmp
pop
cmp
mov
jle
ret
mov
mov
ins
mov
sbb
in
xchg
out
repnz
arpl
mov
sub
arpl
in
cmp
pop
jne
xchg
push
jle
mov
sub
sub
cdq
pusha
adc
push
dec
repnz
mov
pusha
sbb
cmp
es
xchg
and
mov
pop
mov
jmp
mov
xchg
outs
mov
popa
pop
popa
sahf
dec
mov
jge
mov
jne
mov
xchg
fidiv
(bad)
pusha
daa
inc
rcr
cdq
test
lea
jg
dec
jmp
jno
inc
mov
cmp
outs
add
add
sbb
or
out
popa
rcr
mov
mov
scas
lahf
cmp
pop
fwait
push
lds
cld
shr
cmp
(bad)
push
mov
dec
fidiv
(bad)
pop
out
aas
adc
ret
rcl
xchg
out
dec
cmps
push
fs
mov
mov
imul
mov
cmp
or
inc
(bad)
lods
sbb
mov
fdivp
sub
jmp
xor
xchg
dec
hlt
imul
add
imul
fistp
adc
ror
or
mov
mov
cmc
mov
jge
out
jae
xchg
out
scas
jb
mov
fist
scas
lds
adc
mov
call
retf
jo
sbb
or
das
ins
out
mov
cmp
mov
aam
mov
xchg
xor
and
jp
mov
pushf
enter
iret
lods
add
jp
xchg
nop
ficom
pop
mov
or
mov
sbb
adc
leave
(bad)
frstor
push
sti
aaa
adc
fcmovu
mov
sahf
cmp
call
sub
dec
jp
call
pusha
pop
mov
cmp
(bad)
jge
push
les
fcmovnu
mov
in
inc
inc
mov
ja
(bad)
or
jne
mov
std
pop
jg
mov
stc
push
jl
shr
inc
cmp
bound
cld
in
sti
aas
or
jmp
sub
in
or
sub
cmp
mov
fimul
pop
enter
xchg
lock
les
adc
push
cwde
xchg
in
(bad)
outs
hlt
adc
out
xor
jl
pop
test
dec
push
scas
mov
jb
out
int3
xchg
repnz
sahf
push
imul
aas
inc
sbb
pop
test
cmp
nop
xchg
(bad)
xchg
inc
pop
sbb
sub
cmp
sbb
mov
in
mov
mov
cmp
sub
xor
cmps
xor
mov
cmp
into
out
sub
or
or
fs
ja
leave
pop
(bad)
fstp
cmp
sbb
sub
and
imul
aas
add
outs
dec
pop
push
xchg
retf
push
test
(bad)
mov
mov
adc
add
inc
lock
stos
int3
lods
outs
daa
xchg
push
scas
out
mov
add
in
or
cmp
dec
push
pop
mov
stos
and
outs
inc
(bad)
scas
fmul
push
mov
add
sbb
div
add
and
adc
mov
mov
fidiv
out
icebp
cdq
fucom
cmps
cli
ret
pusha
(bad)
dec
and
scas
mov
jne
in
jle
lahf
inc
cs
add
cli
push
push
shr
xor
xchg
jo
xor
push
scas
jp
shl
(bad)
icebp
lods
xchg
(bad)
dec
cs
xor
imul
inc
or
popa
jnp
loopne
push
push
xor
sbb
pop
push
(bad)
aad
(bad)
xor
xchg
push
scas
sbb
ins
stc
or
std
pop
mov
sbb
xor
jle
cdq
xor
test
int3
jge
inc
js
movs
jnp
bnd
(bad)
dec
sub
inc
das
jae
xchg
leave
pop
sbb
push
xchg
pop
jp
pop
lahf
test
pop
adc
xor
cmc
test
sub
fild
repz
dec
jecxz
leave
into
dec
and
mov
xchg
int3
add
dec
daa
mov
stos
dec
mov
loop
inc
fnstcw
fcomp
js
movs
dec
das
movs
cmp
or
cld
loope
(bad)
ss
xchg
jae
repz
jno
mov
jecxz
xor
xor
jmp
fldcw
cmp
jmp
inc
cwde
in
mov
mov
jnp
js
add
jle
mov
cdq
mov
pop
in
xor
fistp
mov
ss
sub
cmps
xchg
cmp
dec
inc
sbb
xchg
outs
stos
xchg
push
fld
pop
sbb
adc
mov
adc
push
jns
popa
fsub
sti
dec
mov
pop
sar
mov
push
sbb
add
jge
xchg
(bad)
mov
cdq
mov
cmp
xor
xchg
(bad)
aas
xchg
lock
mov
in
cdq
movs
mov
inc
test
fs
jmp
pop
(bad)
xchg
fbstp
inc
xor
mov
dec
push
jmp
fistp
and
or
imul
das
or
ins
and
(bad)
retf
pop
xchg
retf
stos
jecxz
es
(bad)
push
and
fwait
aam
pop
pop
out
jb
ja
lds
stos
push
cmp
push
pop
or
xor
inc
stc
xchg
and
pop
std
jecxz
fcom
test
aas
xchg
push
pop
add
in
cwde
mov
add
sub
and
mov
out
and
gs
pop
pop
or
scas
fs
fmul
fldcw
fidiv
dec
cmp
mov
in
jno
cmp
push
inc
fstp
sar
(bad)
aaa
out
cs
pop
jecxz
jns
pop
in
jl
dec
push
or
out
cli
mov
stos
es
mov
outs
mov
imul
or
repz
test
mov
hlt
call
icebp
xchg
xor
arpl
pop
outs
xor
add
aad
loop
shr
xor
in
pop
je
ja
cmp
push
sbb
jge
push
nop
or
jno
inc
data16
and
mov
sub
push
pop
loopne
ror
test
scas
shr
jg
ss
les
fld
dec
jle
imul
adc
repz
jmp
ss
fwait
nop
aas
cs
movs
mov
cmps
out
push
xor
or
out
cmp
xchg
loop
jb
xchg
and
adc
dec
xor
or
mov
dec
xchg
cmp
jns
ins
lea
shl
js
xchg
pop
add
jbe
es
push
dec
int3
fst
pop
xchg
inc
stos
std
jns
stos
ins
xchg
in
jp
fild
fsubp
xor
or
jg
cmp
fs
pop
dec
(bad)
data16
stos
lods
xlat
in
sbb
jo
push
imul
pop
cmc
test
or
dec
xchg
enter
xchg
mov
sbb
xor
or
sub
cmp
test
fwait
sbb
ror
sub
add
push
sbb
sub
inc
sub
daa
dec
je
std
(bad)
jp
mov
(bad)
(bad)
scas
cmps
dec
push
mov
retf
cmp
(bad)
jns
push
mov
loopne
inc
adc
mov
cmp
sub
inc
lods
or
dec
dec
(bad)
(bad)
icebp
jae
ss
mov
test
cmps
sub
stc
sub
jp
ds
push
mov
cmps
push
cmp
cmc
mov
sbb
(bad)
cmp
cmp
sbb
addr16
sub
test
dec
sub
retf
pop
icebp
jns
out
enter
cld
sti
pop
fs
jns
mov
xchg
outs
stos
mov
out
sar
repz
adc
pusha
loop
jl
ret
or
mov
(bad)
fdiv
repnz
adc
jno
outs
xchg
cwde
inc
pop
aaa
or
adc
xor
mov
and
adc
pop
sbb
ja
cmc
push
call
ja
push
jmp
cmp
cwde
test
inc
or
mov
dec
xchg
mov
repnz
mov
in
icebp
ds
and
nop
mov
dec
push
adc
mov
cmp
call
fld
lea
cmp
inc
imul
aam
gs
aad
nop
pop
enter
xchg
fsubr
xchg
sub
mov
nop
push
cmps
jecxz
inc
repnz
dec
add
sbb
(bad)
fptan
into
and
test
cdq
popa
aaa
sbb
stos
bound
mov
ins
out
mov
fiadd
pop
inc
inc
and
or
push
add
cwde
stc
push
mov
jnp
xor
icebp
fstp
inc
mov
popf
enter
hlt
js
repz
add
pop
xchg
sbb
xchg
lods
add
repnz
or
pop
add
js
and
sbb
inc
sub
xchg
bound
sub
mov
stc
adc
and
(bad)
outs
in
ficomp
mov
cmp
stc
imul
or
fucomi
pop
test
and
jmp
mov
cmpps
icebp
test
nop
out
std
cs
or
mov
pop
inc
jmp
lds
cli
sbb
cmc
pop
or
aaa
and
mov
sub
popa
fwait
lahf
cmp
(bad)
mov
xchg
ins
lahf
jecxz
pop
jl
mov
pop
lods
push
inc
xchg
cmp
adc
call
cli
call
fcomp
mov
ins
mov
xchg
aaa
jg
jno
test
fistp
jmp
in
retf
je
les
cmp
inc
jmp
stos
or
fs
mov
fimul
xor
add
mov
dec
jge
(bad)
repnz
lea
dec
push
int3
(bad)
jl
fisubr
retf
stc
add
addr16
icebp
int3
push
inc
sti
in
cmc
cmp
jae
xor
cdq
and
fbld
daa
mov
pusha
xor
ret
fild
loopne
add
js
popf
sub
jmp
cmp
sub
ror
leave
jecxz
push
fcomp
lea
sbb
aam
or
outs
dec
cmp
cs
mov
mov
add
and
add
pushf
rcr
aad
jne
push
jmp
push
inc
adc
mov
repz
ss
dec
outs
das
xchg
ret
cwde
loopne
(bad)
xlat
jle
loope
fisttp
lods
lea
jle
jp
pop
push
test
add
dec
movs
outs
push
repz
add
iret
pop
repz
adc
push
mul
repnz
mov
push
fstp
sub
ins
inc
pop
or
mov
add
xchg
sub
das
ins
pop
add
in
pop
stos
test
jo
ja
scas
cmp
popa
mov
jle
scas
mov
sahf
and
add
push
lock
xchg
cwde
pop
test
stc
retf
hlt
push
inc
lods
shl
nop
xchg
cmp
fldcw
cli
stos
xchg
retf
pop
sub
mov
sbb
jg
mov
dec
mov
retf
sub
(bad)
mov
mov
pop
cdq
bound
fs
inc
xchg
pop
test
in
call
mov
sbb
mov
and
push
jmp
and
cdq
mov
pop
into
mov
jle
repnz
bound
fcom
sbb
(bad)
mov
pop
cmp
inc
stos
xchg
cmp
cmp
int3
mov
xchg
xor
dec
pop
test
adc
das
dec
sub
or
and
xor
loopne
sbb
fldcw
sub
imul
add
xor
fs
jmp
sub
inc
hlt
push
xchg
dec
sahf
sub
sbb
fstp
out
mov
jl
leave
push
enter
cmp
add
mov
cmp
sti
fisubr
enter
sbb
mov
stc
in
stos
push
lock
inc
arpl
(bad)
adc
out
retf
ret
inc
sbb
sbb
dec
aam
bound
dec
(bad)
push
push
stc
jmp
scas
fld
(bad)
cs
iret
mov
add
mov
jmp
test
xor
je
stos
mov
mov
push
xchg
adc
inc
jmp
stc
sbb
nop
cdq
std
push
xchg
pop
dec
add
ds
inc
fidiv
inc
movs
jle
test
mov
popf
rcl
jbe
scas
jnp
repz
rcr
or
pop
push
outs
mov
fst
mov
test
mov
mov
xor
push
je
fwait
pop
icebp
ss
push
adc
mov
shr
push
sbb
hlt
test
push
sbb
xor
not
jb
mov
cmp
jp
stc
mov
jmp
and
sbb
shl
xchg
xchg
jmp
int
(bad)
mov
pusha
push
adc
gs
popf
in
cdq
cmc
aad
stc
clc
ret
sbb
dec
mov
xchg
push
or
xchg
cmp
fsubr
es
xor
inc
pop
pushfw
xchg
stos
mov
and
stc
dec
(bad)
cmps
adc
(bad)
sub
out
ins
push
nop
outs
adc
xchg
jmp
ins
pop
in
stc
je
sub
and
sub
add
mov
in
data16
(bad)
es
mov
lods
sub
push
imul
and
lahf
mov
scas
push
lods
sbb
jne
mov
adc
mov
std
and
pop
sbb
movs
push
pop
push
sbb
loopne
pop
sbb
in
out
gs
pop
stos
inc
xchg
pop
xchg
lods
fmul
(bad)
out
(bad)
cdq
pop
shl
push
cmps
das
jge
test
loopne
fsubr
jmp
ret
jno
movs
cmp
rcl
cs
gs
push
jge
and
pop
out
inc
adc
push
aam
cdq
movs
enter
ins
adc
mov
jp
adc
daa
adc
pop
or
out
outs
fwait
pop
mov
or
std
pop
jge
sub
push
xchg
ret
lock
hlt
int3
push
loopne
inc
cmp
xor
mov
cmp
lock
clc
lods
jno
into
call
jne
cmovnp
pop
dec
fs
aam
in
aaa
mov
aas
hlt
jae
xchg
out
push
mov
cs
inc
xchg
jle
loope
add
fist
xor
cdq
xor
pop
retf
fmul
gs
sub
and
jge
in
in
das
cmp
and
add
and
mov
push
jmp
scas
outs
pushf
in
push
and
inc
sub
push
pushf
xor
cmps
fisttp
jne
mov
cmp
fld
fist
stc
int3
sbb
cmps
push
iret
dec
stc
dec
sbb
test
mov
mov
dec
pop
out
loopne
data16
je
jmp
out
adc
(bad)
sub
je
sahf
mov
loopne
call
push
sub
out
mov
and
in
mov
inc
callw
and
repz
outs
out
dec
fstp
and
cs
lahf
dec
jbe
jge
retf
sub
xor
in
xchg
cmp
nop
add
inc
mov
setno
sbb
adc
icebp
xor
cwde
stos
lods
into
stc
aam
aaa
pop
sbb
adc
mov
psubb
xchg
mov
in
scas
out
aam
cmps
in
sub
jns
outs
ret
sti
repz
rol
mov
jmp
jg
cwde
daa
ins
cli
add
dec
jae
std
mov
rcl
pop
test
mov
jae
imul
call
test
popa
adc
pop
out
test
and
(bad)
mov
retf
dec
arpl
push
lods
(bad)
or
jnp
jge
ins
cs
add
pop
test
push
and
mov
mov
push
movs
sahf
pop
scas
cmc
jmp
cdq
call
sbb
mov
jmp
popf
repz
in
dec
pop
adc
add
std
addr16
enter
cmp
inc
loopne
xchg
or
cmps
push
add
fisubr
jns
cmps
add
popa
pop
mov
push
call
xchg
or
cli
aaa
pusha
popa
retf
dec
lods
mov
jmp
retf
inc
sbb
into
mov
cmp
scas
(bad)
retf
hlt
sub
mov
data16
pop
add
repnz
jns
fmul
push
pusha
and
dec
jns
sbb
movs
into
shr
(bad)
adc
inc
xor
mov
icebp
(bad)
fdiv
add
cmps
mov
mov
inc
adc
push
ret
in
pushf
sub
inc
inc
push
mov
sar
gs
(bad)
add
or
xor
cmp
push
sbb
pop
and
call
mov
fld
push
out
xchg
test
xor
xchg
std
ins
cmp
aam
out
xchg
retf
cmp
cmp
xor
repz
sub
dec
cmp
xchg
stos
fistp
cwde
cmp
shl
cmp
mov
inc
sub
das
add
push
retf
pop
stos
mov
add
in
inc
xor
xchg
add
ins
aas
jae
lea
shr
sbb
mov
xchg
cmp
mov
ror
stos
jp
cld
cmc
cwde
jp
mov
(bad)
imul
ja
or
push
mov
lods
dec
(bad)
xlat
call
add
push
aas
jg
outs
pop
popa
dec
(bad)
in
cdq
ja
pop
mov
jno
push
mov
mov
jmp
aam
test
sub
dec
mov
xchg
rcr
lea
(bad)
mov
outs
mov
adc
es
icebp
or
xchg
cmp
test
aam
mov
dec
push
hlt
push
push
dec
and
xor
jno
(bad)
mov
xchg
mov
rcl
sub
or
call
dec
fisub
or
out
dec
enter
pop
cmp
xlat
push
shl
mov
dec
mov
cmp
cmp
jp
rdpmc
push
push
jp
aaa
mul
sar
sar
(bad)
push
fisttp
imul
dec
xor
in
mov
jecxz
push
push
lods
fwait
jp
repnz
sbb
and
mov
outs
popa
push
in
cmps
shr
and
xchg
lock
clc
mov
ss
sub
adc
repnz
sti
adc
jle
adc
sti
neg
movs
sub
in
push
fcom
sbb
jne
cmp
lahf
and
xchg
outs
cmc
fld
fcom
(bad)
fidivr
rcl
fcmovnb
mov
fstp
mov
mov
ret
mov
jmp
and
js
adc
ror
dec
add
ficom
in
das
cmp
ficomp
ret
mov
jl
outs
push
jp
cmps
dec
mov
in
sub
shl
mov
js
neg
mov
jns
jle
dec
test
push
mov
push
outs
cmp
je
sbb
or
lods
push
cmp
ret
pop
les
mov
dec
into
mov
in
jnp
xchg
xchg
mov
and
cmp
stos
sbb
cmps
mov
or
sub
movs
out
shl
(bad)
test
and
fdivr
or
std
aam
push
mov
dec
out
inc
mov
xchg
je
(bad)
and
int3
xchg
xchg
jge
mov
sbb
fsubr
and
adc
pop
add
add
inc
adc
push
fcomp
loop
ror
loopne
inc
or
(bad)
pop
jnp
xlat
(bad)
outs
rcl
iret
mov
sti
ficomp
std
xchg
movs
sar
lahf
pop
mov
push
mov
pop
in
mov
pop
push
mov
sub
popf
and
daa
(bad)
cmp
in
test
mov
clc
push
mov
dec
div
out
xor
shl
test
dec
out
retf
loope
jae
retf
bound
loop
add
shl
mov
push
lock
call
push
mov
adc
je
xchg
popf
(bad)
fimul
mov
dec
fcom
xor
sbb
out
cmp
retf
jbe
sbb
sub
cwde
cmp
push
adc
xchg
ror
pop
loop
call
dec
leave
arpl
test
mov
push
adc
jecxz
popf
xchg
bnd
into
xlat
adc
dec
or
push
xlat
ds
push
and
and
push
js
jle
out
lea
jno
iret
pop
sbb
(bad)
mov
enter
out
scas
fstp
clc
call
sbb
sub
xchg
aad
mov
test
jmp
mov
fwait
add
inc
pop
fmul
mov
out
jnp
add
pop
arpl
mov
out
fcom
fs
mov
pop
mov
test
pop
test
call
inc
je
imul
lock
cmp
xchg
add
push
into
xchg
call
jle
jne
repnz
dec
loope
jnp
mov
dec
lods
xchg
test
fdiv
add
cld
push
pop
fdivrp
out
rcr
shl
outs
adc
ins
add
cmp
fisub
pop
mov
or
in
jnp
pop
data16
mov
cmp
inc
xchg
movs
mov
jo
or
icebp
gs
jmp
xor
popa
ins
cmp
jecxz
fild
test
ss
das
sbb
and
int
xchg
and
push
and
cmp
push
and
rol
pop
jnp
mov
lahf
repnz
sub
mov
aas
and
inc
sbb
lds
mov
jmp
jne
(bad)
cmc
cmp
xor
fucomip
mov
cmp
adc
imul
sub
in
inc
ins
add
ins
and
cmc
movs
mov
mov
mov
cs
xor
test
test
pop
outs
repnz
test
mov
scas
xchg
fcomip
pop
jge
mov
ds
mov
or
dec
fwait
nop
jmp
jle
cmps
cmc
loopne
jge
out
repnz
mov
inc
mov
jne
sar
pop
lock
std
out
arpl
fcomp
add
mov
fadd
test
retf
ficom
sahf
xchg
stos
pop
xchg
mov
push
mov
(bad)
std
test
xor
sub
inc
jne
and
hlt
leave
hlt
ret
outs
inc
lods
push
cmovg
cmp
pop
iret
adc
fwait
add
mov
clc
inc
mov
out
or
clc
jno
bound
test
ds
rcr
mov
(bad)
mov
retf
push
(bad)
aaa
std
packsswb
mov
add
add
cmp
push
stc
stc
pop
imul
xor
aas
adc
sti
mov
sbb
mov
push
xor
inc
pop
adc
int
mov
push
mov
inc
sub
(bad)
pop
mov
cmp
sbb
pop
add
aad
lea
stc
dec
in
test
mov
imul
push
adc
popf
and
gs
mov
in
ss
and
lods
inc
and
sbb
xchg
outs
loopne
dec
or
push
sar
lds
iret
fdiv
jae
xchg
call
inc
jns
nop
push
rcr
pop
add
loope
sbb
sub
mov
xor
or
(bad)
mov
or
ins
sbb
cmps
scas
push
push
adc
std
fs
pminsw
test
shl
adc
jno
dec
mov
outs
pop
jle
and
adc
arpl
mov
mov
mov
popf
ja
and
inc
stos
sti
daa
push
and
pop
inc
jnp
push
and
pop
fidiv
mov
cld
in
xchg
in
push
in
xlat
push
leave
hlt
inc
mov
sbb
imul
xchg
out
outs
aam
loopne
repnz
inc
in
jg
xchg
adc
cmp
call
(bad)
adc
inc
pop
in
stos
pop
mul
mov
adc
push
test
movs
mov
test
push
out
jae
cwde
fstp
in
sbb
or
aad
mov
test
aad
fs
(bad)
jg
lock
jle
xor
inc
jmp
pop
jo
not
push
imul
popf
lahf
sub
pop
aad
shl
cli
jo
jno
adc
xor
nop
adc
add
cmp
xchg
gs
in
adc
dec
add
fwait
rcr
test
in
test
dec
out
or
and
out
and
jbe
adc
xchg
mov
cmps
mov
mov
pop
push
sbb
inc
xchg
shr
pop
dec
push
mov
fisub
hlt
aam
sbb
mov
loope
mov
cmp
ret
cmp
pop
scas
dec
or
addr16
mov
pop
cdq
mov
neg
or
fild
dec
in
xchg
dec
mov
jnp
xor
(bad)
adc
fdiv
ja
gs
fstp
int3
cmp
cdq
(bad)
leave
nop
or
cmp
and
jmp
fistp
inc
enter
shl
mov
push
lea
shr
cli
mov
popa
rcr
in
or
js
retfw
sbb
sub
mov
retf
push
cld
mov
pop
sub
dec
jecxz
xbegin
ja
mov
ss
jb
push
aad
fwait
dec
jge
(bad)
call
or
popf
xor
fcom
dec
in
leave
cmp
vphadddq
js
pop
in
adc
out
(bad)
jmp
inc
dec
push
loope
cli
pushf
mov
fist
sbb
xor
in
sub
dec
adc
jo
jmp
push
adc
inc
xchg
in
outs
aam
call
push
ret
xor
xchg
inc
(bad)
fcomp
sbb
inc
sub
enter
hlt
and
sub
push
shr
jo
ss
sub
sbb
sbb
fsubrp
sub
call
loop
mov
(bad)
push
fcmovnbe
mov
dec
sbb
mov
mov
xor
xor
jnp
inc
bound
and
repnz
push
iret
dec
outs
(bad)
xor
imul
xlat
dec
es
movs
loop
mov
sbb
adc
mov
les
loope
jmp
cmp
xlat
enter
pop
repz
adc
movs
clc
add
mov
shr
ins
in
gs
loop
jge
mov
std
mov
rcl
or
call
mov
jbe
adc
sub
daa
dec
or
sub
nop
xchg
(bad)
jecxz
loopne
or
jne
loopne
test
or
ds
sub
dec
hlt
xlat
clc
jb
mov
mov
push
pop
loop
test
fadd
mov
and
test
jae
xchg
adc
jbe
(bad)
aaa
push
pop
inc
sar
xchg
movs
outs
or
out
pusha
fcom
dec
pop
retf
neg
and
int
sub
fs
lods
retf
fst
jns
cs
adc
lds
cwde
pop
outs
ret
(bad)
jmp
xchg
in
adc
mov
adc
sub
jle
inc
pusha
fsub
sbb
mov
test
pop
ds
clc
or
mov
enter
add
push
and
sbb
fcomip
adc
adc
and
jecxz
mov
jno
stc
arpl
cmp
cmp
sub
adc
adc
pop
inc
jg
xor
dec
fcomp
into
mov
cmp
outs
fnsave
pushf
sub
or
push
clc
add
adc
push
inc
xchg
xlat
hlt
inc
pop
ret
add
or
cmc
sbb
dec
pop
pop
ror
ins
repnz
jns
or
dec
daa
mov
inc
pop
out
call
jae
dec
inc
cwde
retf
sub
ja
sti
in
pop
nop
xchg
call
shl
sbb
push
pop
mov
lods
jge
inc
fdivp
push
pop
les
cmp
movs
aam
mov
mov
fwait
mov
or
stos
lock
cwde
mov
fisubr
rcl
enter
sbb
push
inc
add
sti
xlat
out
xchg
into
xchg
mov
and
ret
sub
loopne
popa
jmp
xchg
jmp
fidivr
dec
inc
test
das
int3
fcomp
adc
repnz
mov
cmps
or
mov
sbb
test
or
pop
or
mov
or
add
fcmovu
or
jmp
sub
nop
xor
rol
test
into
not
pop
dec
cmps
xor
ins
fisub
and
mov
(bad)
or
bound
mov
and
sub
stos
and
out
mov
push
into
mov
pop
or
ins
(bad)
fidivr
jecxz
rol
xchg
or
jbe
out
inc
ror
dec
jle
xchg
xchg
dec
scas
aad
jne
clc
call
inc
sti
test
inc
repnz
push
clc
addr16
iret
mov
pop
aas
xor
loop
je
bt
pushf
jnp
sbb
add
mov
call
out
pop
pop
pop
std
pop
or
xor
arpl
stos
xchg
cmp
or
pusha
push
pop
xor
or
ins
push
mov
xor
int
nop
imul
cmp
xchg
popf
mov
push
(bad)
(bad)
jmp
shl
fwait
aad
push
daa
into
dec
lea
lahf
mov
mov
push
bound
repnz
xor
mov
cli
mov
scas
sub
les
push
push
add
sti
sti
(bad)
adc
pop
aad
fs
pop
or
mov
sub
les
sub
inc
fs
aad
pop
or
xor
in
pop
pop
add
ret
ret
dec
jae
xchg
or
adc
int
sbb
mov
fldcw
or
xchg
or
arpl
or
sbb
into
push
das
jb
out
jg
cmp
or
idiv
popa
jo
mov
arpl
sti
retf
xchg
daa
lea
pop
movs
push
sub
(bad)
cs
jl
ins
scas
fdivr
(bad)
fldenv
call
bound
jns
push
fs
xchg
rcr
or
and
and
fidiv
leave
popf
mov
or
pop
bound
mov
in
mov
jbe
cli
adc
fcmovnu
aas
or
or
pop
imul
inc
jmp
mov
mov
out
push
xchg
cmp
xchg
loopne
sbb
leave
(bad)
jnp
ret
sub
cmp
div
in
adc
in
xor
loop
mov
dec
pop
mov
loope
stos
jle
pop
push
cmps
scas
(bad)
mov
mov
inc
or
pop
shl
aaa
sbb
or
adc
push
mov
neg
mov
jge
dec
cmps
jo
shl
sar
daa
jmp
fnstsw
mov
je
les
push
sbb
pop
xor
sbb
lock
push
push
cmp
mov
mov
outs
mov
not
push
dec
jb
cdq
mul
int3
add
add
xchg
(bad)
push
aaa
gs
adc
mov
push
or
gs
ss
aas
and
neg
and
jo
outs
xchg
cmp
mov
scas
repz
lods
out
pop
and
dec
jecxz
sahf
sti
out
addr16
daa
xchg
fnstenv
aas
stos
pop
mov
shr
ret
add
and
lea
ins
pop
addr16
loopne
push
inc
imul
xor
xor
cmps
stos
mov
mov
push
inc
pop
pushf
jl
sar
jmp
push
inc
mov
pop
pop
and
jg
out
adc
fs
(bad)
mov
bound
sbb
cmps
iret
fnsetpm(287
stc
jne
xor
push
iret
pop
(bad)
xchg
out
inc
(bad)
mov
xor
mov
sbb
repnz
fadd
cmp
(bad)
mov
mov
(bad)
not
test
shr
sbb
push
clc
mov
mov
jmp
(bad)
aam
stos
jne
and
cli
and
pop
cmps
mov
retf
xor
fstp
arpl
fisubr
xor
mov
jecxz
cld
fdiv
push
retf
int
pusha
rcr
scas
bswap
cwde
mov
fdivr
fbstp
dec
add
es
test
adc
addr16
rcl
vpsubsw
cmps
lods
std
dec
leave
mov
push
push
arpl
retf
push
xchg
fbld
scas
arpl
icebp
jl
pop
sub
xor
push
inc
pop
jo
test
int
call
ins
icebp
dec
(bad)
jo
push
and
iret
push
push
cld
loope
out
into
les
mov
jbe
cmp
push
mov
push
sbb
cmps
loopne
pop
inc
or
ror
inc
xor
lods
rol
popa
cmp
and
(bad)
mov
mov
pop
xchg
rcl
fld
sub
add
mov
call
and
jp
lods
ret
cmc
inc
outs
retf
sbb
stos
mov
lods
(bad)
js
jns
jmp
push
out
(bad)
dec
frstor
xchg
xchg
in
sub
cmp
push
test
xor
jle
mov
cs
pop
in
(bad)
sar
loopne
cdq
fadd
and
test
jge
js
sbb
es
mov
inc
out
mov
fcmovnbe
jmp
rcr
frstor
or
shl
dec
push
jp
rcl
stos
std
or
add
sar
fcomp
cwde
pushf
data16
ss
jne
jge
xchg
sbb
cmp
and
iret
xor
xchg
ds
or
scas
dec
repz
sahf
inc
inc
lea
(bad)
jo
mov
cli
aam
icebp
out
cs
adc
cmps
pop
clc
ficomp
out
push
adc
cdq
arpl
sub
bnd
shr
push
loopne
lock
cld
jne
cld
int
mov
adc
hlt
mov
pop
(bad)
sbb
fwait
push
aam
lock
test
nop
push
mov
outs
out
mov
jae
in
jbe
inc
or
mov
pop
stos
popf
aas
jl
sar
mov
mov
adc
pushf
lea
in
es
adc
mov
lock
in
repz
lock
sub
mov
retf
mov
loope
out
ja
mov
cmp
popa
xor
mov
mov
clc
fidiv
cmc
pop
push
fnstcw
adc
add
pop
ins
inc
xor
sbb
mov
aad
mul
es
cmp
ds
fdiv
mov
aam
mov
jmp
sub
call
ja
cmps
shl
mov
cmps
cmc
imul
sub
rcl
and
pushf
(bad)
jmp
ja
dec
and
inc
xchg
sbb
cwde
leave
fld
sub
mov
cmps
jge
aam
jge
sub
sbb
sbb
retf
mov
inc
call
jne
add
dec
mov
in
mov
dec
jnp
adc
xchg
cmp
iret
mov
adc
or
mov
pshufw
out
or
stos
inc
mov
lahf
mov
mov
popf
scas
pop
leave
mov
jmp
jns
stos
cmp
mov
pop
in
adc
push
je
sbb
or
push
aam
jg
arpl
ret
sub
stos
xor
and
(bad)
ss
jg
out
sbb
sbb
movs
add
fisttp
fldenv
sub
cmps
mov
fcom
addr16
call
pop
movs
pop
(bad)
jmp
jmp
add
(bad)
dec
inc
arpl
ficomp
sti
jo
sub
stos
and
mov
push
sub
in
fcmovnb
sbb
test
leave
add
and
pop
jns
(bad)
sbb
in
xchg
jo
icebp
test
jb
shr
xchg
fild
idiv
and
or
cmp
int
or
int
dec
sbb
cmp
mov
(bad)
cmp
lods
scas
push
shl
and
mov
enter
jle
cmp
or
out
xchg
int
or
repz
dec
pop
sbb
in
test
mov
mov
fisttp
pop
xchg
aam
dec
not
push
lds
add
fcomp
loopne
int3
or
or
mov
cwde
lods
cmps
inc
pop
fidiv
dec
and
mov
mov
cmp
test
cli
dec
add
cmp
imul
jns
mov
add
test
lahf
cmp
adc
movs
cmp
dec
jne
mov
out
sub
and
sub
cmps
inc
or
into
and
xor
xchg
bnd
cld
push
js
sbb
(bad)
xchg
or
aad
sub
mov
ror
movs
mov
mov
xor
cmp
nop
or
fisttp
cld
or
jo
or
pop
fistp
out
pop
lods
cmp
lods
jmp
fisubr
loopne
and
imul
adc
fild
ret
in
xchg
fbld
jmp
mov
repnz
push
cmc
imul
adc
ss
and
clc
ja
xor
cwde
push
and
stc
add
sbb
adc
enter
mov
arpl
rcr
push
test
(bad)
les
cmp
(bad)
cmp
in
inc
in
pusha
pop
jmp
adc
add
mov
fsubr
out
cmp
adc
and
push
and
cmp
aam
iret
inc
inc
in
mov
cmp
mov
out
push
mov
in
or
shl
inc
scas
pop
jae
add
dec
jecxz
jno
test
scas
sub
popa
pop
xor
push
fist
je
in
mov
mov
jno
sub
pop
jle
scas
mov
sbb
mov
dec
jno
jo
jb
jbe
push
idiv
jle
cld
sbb
push
xlat
add
adc
cs
xor
mov
mov
sbb
and
mov
or
nop
jb
sbb
pop
pop
mov
outs
mov
(bad)
jg
xor
xchg
xchg
jle
add
or
es
in
daa
aam
mov
and
call
xlat
fisubr
retf
jp
push
fmul
dec
cmp
js
cmp
and
(bad)
or
mov
movs
xchg
into
inc
xchg
je
push
ja
les
fadd
mov
sahf
inc
or
mov
lahf
sti
jbe
jns
push
cld
cs
pushf
cmp
icebp
sub
fcom
es
cld
dec
hlt
fs
dec
in
rep
cld
cmp
adc
pushf
lahf
shl
jl
pop
cli
fnsave
dec
adc
mov
sbb
mov
out
cmp
movs
imul
add
pop
cld
fisubr
leave
inc
xchg
xor
(bad)
in
repz
mov
dec
js
or
xchg
mov
sub
ss
dec
mov
mov
mov
cmc
icebp
shl
fnsave
sbb
dec
lods
out
xor
lods
(bad)
repnz
scas
mov
hlt
lods
inc
or
aam
xchg
pusha
(bad)
fistp
fstp
sub
or
in
xchg
mov
lods
jp
fisubr
cmp
faddp
push
pop
jecxz
and
jmp
scas
cld
sahf
mov
mov
cs
push
push
mov
inc
imul
jge
(bad)
cmc
inc
sti
cs
fdiv
in
pop
add
test
push
psubsb
or
retf
xor
std
int
cmp
sub
movs
popf
nop
das
fsubr
outs
retf
mov
loopne
add
push
out
scas
in
mov
xor
out
fsub
stos
pop
xchg
cs
cmp
je
push
lods
and
ror
bound
jl
and
repz
cmp
aas
not
dec
cmp
(bad)
scas
das
call
stc
icebp
pop
es
mov
jno
out
cwde
push
neg
mov
retf
mov
xor
pop
cld
jnp
es
out
push
xchg
and
jno
dec
movs
clc
xchg
cli
adc
shl
imul
scas
push
push
repz
xchg
xchg
jb
or
(bad)
cmp
pop
cmp
sub
js
out
pushf
jns
push
into
cmp
mov
shr
mov
and
pop
xchg
or
xchg
lods
clc
sbb
dec
mov
xor
test
pop
jae
sbb
cmc
jmp
mov
in
nop
inc
imul
and
lods
sbb
and
pop
lods
imul
fst
cmp
ss
lahf
push
sub
cmp
pop
or
xor
xor
mov
xchg
cmps
xor
es
jns
pop
push
sub
push
lock
leave
test
sbb
frstor
int3
loope
adc
dec
or
sub
inc
jl
cmp
push
ret
xor
rol
call
sbb
hlt
adc
mov
and
sub
jbe
mov
popa
mov
and
dec
ror
sub
nop
xchg
es
mov
fstp
out
adc
or
xchg
inc
push
aam
jb
stc
xor
pop
cmp
push
repz
add
pop
ss
in
xchg
test
and
inc
mov
add
push
and
stc
mov
xor
adc
mov
xor
jle
outs
inc
ins
mov
jp
or
shr
add
bound
cwde
or
imul
add
mov
enter
popf
inc
sbb
clc
addr16
mov
fs
sbb
int3
pop
ins
jno
pop
cmp
pop
sbb
fisttp
dec
fwait
inc
imul
xor
ficom
test
push
jno
jnp
sbb
pop
push
xchg
gs
cmp
dec
push
mov
fisttp
cmp
adc
out
or
mov
or
(bad)
push
(bad)
or
xor
xchg
inc
pop
rol
popa
mov
xchg
scas
hlt
pop
xor
mov
push
mov
sbb
dec
movs
jbe
push
test
sub
adc
stos
jge
data16
jbe
lods
(bad)
or
out
mov
sub
movs
xor
test
(bad)
cli
xchg
adc
outs
ss
pop
dec
or
mov
sub
mul
push
or
xor
sub
jo
push
out
pop
ret
sar
out
sub
daa
sub
popa
cmp
and
scas
add
rcr
mov
inc
dec
jmp
das
xor
or
imul
sub
mov
aaa
test
jne
(bad)
fild
loope
adc
mov
pop
fistp
inc
repnz
mov
xor
mov
inc
jb
mov
sub
std
adc
jg
jne
jo
xchg
mov
test
jnp
out
js
and
cmp
lea
sbb
ror
fst
cwde
clc
scas
push
call
bound
xchg
jp
in
cmp
fadd
inc
dec
pop
fstp
nop
push
sbb
sbb
stos
ds
shl
retf
loope
pop
add
inc
push
scas
stos
adc
mov
add
mov
adc
popa
sub
rcr
inc
xchg
jmp
(bad)
in
loop
jmp
adc
jns
pop
mov
add
jmp
cs
jbe
ja
push
inc
in
(bad)
dec
pop
fmul
pop
pop
(bad)
jmp
pop
xor
pop
or
mov
in
aad
xor
cmc
retf
mov
dec
add
xor
mov
pop
jo
fild
cmp
loop
xchg
pop
call
in
xchg
jl
sbb
ss
inc
push
fcomi
mov
jecxz
and
xchg
mov
push
sbb
cld
outs
popa
fdiv
jp
les
add
test
push
pxor
imul
add
cmp
movs
adc
out
enter
call
sub
adc
js
mov
ins
mov
mov
pusha
xchg
mov
sbb
mov
test
push
and
in
ret
fdiv
test
loopne
dec
lock
adc
sbb
sub
sbb
aam
aas
pop
or
(bad)
or
(bad)
adc
das
sub
jle
and
sub
jb
lods
mov
xor
fsubr
in
test
loope
arpl
jp
leave
add
mov
retf
fild
sti
repz
mov
stc
sbb
cmps
int3
mov
sub
mov
mov
das
xor
mov
setl
call
retf
mov
pop
arpl
enter
adc
xchg
pop
cmps
in
mov
sub
dec
popa
cmp
jbe
popa
xchg
mov
adc
xor
mov
movs
push
or
neg
jg
xchg
xchg
jle
cmps
add
fwait
ins
and
(bad)
lahf
xor
cs
test
dec
pushf
mov
shl
hlt
std
call
mov
ja
aad
inc
or
bound
jb
ins
fldl2t
retf
inc
sbb
xchg
jg
pop
je
das
ins
xor
imul
call
call
addr16
mov
jecxz
popa
test
jp
pushf
cli
repnz
pusha
imul
out
and
xchg
xchg
iret
sbb
jecxz
inc
int3
sbb
jnp
push
pop
movs
ret
test
cmp
mov
mov
sbb
push
inc
frstor
pop
pusha
hlt
xor
dec
jg
xor
pushf
fistp
inc
es
mov
pop
call
adc
jmp
ret
inc
mov
sub
pushf
(bad)
pusha
cmp
sub
xor
push
xchg
arpl
xchg
pop
xchg
imul
arpl
scas
dec
aad
addr16
repnz
push
jae
mov
mov
inc
cmp
push
xchg
test
mov
pop
loopne
lds
mov
in
ins
adc
std
mov
push
xchg
sbb
ds
dec
mov
ret
pop
aad
std
aam
daa
test
inc
sbb
xchg
mov
movs
mov
stos
ds
mov
push
popf
mov
lds
movs
dec
das
out
mov
xchg
jge
loop
push
dec
sub
jae
cs
jnp
mov
xchg
repz
jmp
sub
in
push
cmp
cli
ins
addr16
jg
cmp
xor
ja
(bad)
cdq
(bad)
xchg
lahf
adc
test
and
cmps
mov
aas
addr16
cmp
cmp
fisubr
inc
pop
mov
into
ret
out
jno
test
ret
leave
cs
push
test
adc
fwait
popa
push
call
popf
mov
pusha
xchg
inc
mov
out
push
jle
cmp
and
sbb
imul
out
sbb
addr16
adc
sbb
jl
mov
fdivr
or
cmp
add
add
and
jp
(bad)
push
and
sbb
inc
xchg
sbb
mov
xchg
adc
sbb
mov
mov
cmp
test
fnsave
xchg
sub
mov
push
inc
or
gs
outs
or
xchg
fisub
mov
mov
out
jnp
nop
(bad)
movs
clc
mov
inc
out
mov
and
cdq
mov
(bad)
out
mov
push
bound
mov
pop
ins
(bad)
mov
pop
movs
int3
and
lods
ss
in
call
cmp
retf
pop
xlat
(bad)
(bad)
cmp
hlt
sbb
pop
dec
pushf
fadd
cmp
mov
sti
fcomp
sbb
jl
and
repz
mov
scas
xor
mov
in
retf
ss
arpl
sub
dec
jb
lock
and
xchg
shl
xor
scas
cmc
inc
mov
mov
scas
inc
add
mov
stos
xor
pusha
clc
jo
jbe
sub
lods
push
scas
lds
out
call
xchg
dec
in
mov
mov
jae
push
xchg
cmps
jmp
add
rcr
mov
scas
aad
sub
mov
pop
adc
xlat
mov
dec
jae
arpl
cmps
gs
fnstcw
or
(bad)
(bad)
mov
push
add
mov
pop
sub
popf
dec
stos
push
sub
push
aas
dec
push
add
shr
dec
jecxz
sbb
outs
mov
scas
cdq
int3
cmps
and
test
xchg
stos
ret
cmp
pop
mov
xchg
xchg
pop
jl
stc
or
js
or
mov
iret
pushf
jno
jns
repnz
nop
pop
scas
jmp
int
xlat
jae
lea
fadd
xchg
mov
fidivr
(bad)
(bad)
hlt
mov
aad
adc
addr16
adc
mov
adc
inc
sub
shr
repz
mov
mov
jbe
xchg
push
call
add
(bad)
data16
aaa
mov
ret
add
in
mov
push
sub
ins
retf
mov
dec
xchg
adc
movs
mov
and
jmp
int
cld
test
adc
or
pop
mov
test
mov
pop
xchg
rol
fs
test
call
dec
mov
mov
xchg
mov
fadd
dec
sub
addr16
inc
outs
fisttp
jmp
ss
inc
(bad)
fisub
sub
movs
pop
mov
rcl
cmp
and
mov
mov
movs
jmp
push
push
test
jl
aas
jmp
and
std
pop
mov
sbb
jg
or
(bad)
push
push
imul
adc
adc
out
loope
jecxz
pop
mov
inc
sub
inc
push
sbb
fisttp
cld
jmp
arpl
aam
popf
pop
or
add
cld
stos
xor
jle
inc
loop
sub
xchg
add
fistp
arpl
mov
mov
jmp
loope
inc
aas
(bad)
fld
sti
imul
(bad)
add
shl
push
jmp
frstor
jmp
pop
mov
mov
push
push
(bad)
mov
pop
(bad)
mov
call
addr16
call
xchg
mov
push
imul
jp
and
repz
pop
inc
inc
(bad)
dec
adc
sub
jne
xchg
(bad)
hlt
and
lods
push
in
rol
pop
out
xor
adc
in
mov
push
pop
dec
xchg
or
sahf
jg
into
push
shr
mov
stc
sub
nop
push
mov
or
shl
mov
or
(bad)
out
out
sub
pop
outs
lods
push
dec
jge
dec
or
mov
dec
xor
sbb
pop
jb
sbb
ins
aas
ja
addr16
das
push
xchg
or
cli
lods
jo
push
retf
iret
ins
mov
xor
and
stos
das
sub
ret
cmp
or
mov
fsub
and
outs
sar
add
fwait
mov
lahf
fisttp
clc
and
lahf
popa
scas
jb
cmps
outs
push
cmp
jno
out
sbb
mov
in
fisttp
fwait
dec
popf
sub
mov
icebp
lods
dec
cdq
and
mov
pop
mov
dec
int3
lds
and
scas
pop
sbb
adc
out
cmp
inc
out
(bad)
out
push
inc
arpl
or
or
es
(bad)
in
jmp
(bad)
dec
inc
loop
push
dec
mov
sti
mov
sbb
inc
jns
fwait
mov
sub
sbb
lods
in
das
dec
jb
std
add
fld
sti
add
inc
outs
mov
add
pop
mov
xchg
adc
fcmovnb
ret
lea
and
lds
push
in
lods
ret
add
jno
call
pop
rcr
xchg
cmps
dec
imul
lea
dec
jge
jge
cdq
push
or
movs
mov
and
sub
sub
inc
inc
pop
push
push
push
pop
call
push
test
(bad)
out
cs
retf
ins
stos
mov
sbb
jne
jmp
ret
(bad)
loop
pop
stc
aaa
mov
std
add
or
rol
mov
cmp
mov
das
lods
mov
js
outs
or
into
repnz
mov
pop
xor
sti
dec
adc
fldenv
adc
dec
cli
lods
add
paddb
cdq
sub
into
call
stos
jl
pushf
sub
rcl
or
les
xchg
mov
and
out
xlat
xchg
mov
jl
outs
call
mov
pop
or
clc
push
mov
mov
adc
xor
or
inc
xor
dec
enter
bound
arpl
mov
popf
push
aad
ja
jb
cwde
jb
pop
lahf
test
jl
popa
xor
(bad)
mov
sti
or
xor
out
mov
or
test
cmp
xchg
push
push
add
dec
pop
popa
movs
push
push
cmp
(bad)
xchg
push
push
pusha
ret
mov
out
rcl
int3
pop
or
outs
mov
xlat
xor
das
test
push
dec
call
or
mov
jmp
dec
mov
js
xor
push
rcl
mov
push
dec
mov
dec
outs
xlat
jl
stos
push
iret
stos
je
scas
adc
cld
scas
fst
mov
(bad)
pop
fisttp
push
jp
xchg
call
push
std
mov
and
clc
or
loop
fisttp
and
xchg
inc
out
lds
shr
fimul
or
ins
cmp
or
dec
sbb
sub
pop
add
sbb
aaa
imul
mov
cdq
aad
dec
cmps
jmp
lock
popa
mov
mov
jno
ins
call
xchg
sbb
and
sahf
fnsave
adc
fucomip
cdq
xor
dec
bound
cmp
ds
ja
xchg
mov
call
push
sar
pushf
arpl
sysret
into
add
jg
sub
push
das
sbb
xlat
loop
aas
pop
mov
inc
pop
dec
retf
into
call
sbb
ins
rol
lea
das
repz
adc
jne
ja
mov
fmul
mov
hlt
xor
push
dec
shr
nop
sub
sub
bnd
ret
sbb
lea
mov
mov
pop
movs
rol
push
(bad)
shr
ret
and
mov
dec
xchg
and
les
or
test
mov
gs
das
add
gs
out
retf
stos
xchg
loopne
cmc
movs
icebp
adc
jo
xchg
loope
jge
mov
mov
aam
dec
push
test
in
adc
xchg
jbe
dec
call
and
mov
mov
cmp
cmp
in
sar
rol
xor
and
mov
dec
popa
retf
inc
adc
enter
sar
out
movs
out
retf
inc
mov
push
jmp
repz
fild
mov
repz
dec
popa
int
mov
aam
xchg
call
ins
mov
addr16
add
(bad)
adc
sub
and
movs
push
jmp
sbb
add
mov
rcr
pop
ror
mov
jmp
mov
inc
aam
push
sub
pop
hlt
or
pop
call
add
call
and
cs
cmp
jbe
cmp
inc
lahf
or
imul
or
test
sub
jmp
or
std
sahf
sahf
icebp
pop
pusha
scas
mov
jmp
cmp
push
idiv
(bad)
cmp
fisttp
and
xlat
and
enter
or
xchg
or
mov
sbb
push
stos
dec
inc
sub
cmp
sub
clc
mov
fstp
sbb
pop
and
lock
push
mov
jnp
xor
xor
mov
outs
inc
jle
cdq
pusha
add
jbe
popa
or
(bad)
stos
call
mov
into
sub
stc
outs
imul
dec
cmc
stc
shl
pop
dec
mov
cmp
xchg
pushf
inc
out
(bad)
pop
clc
mov
cwde
add
and
(bad)
and
xchg
ret
and
loope
cwde
add
movs
bound
add
sub
or
mov
push
fs
or
lods
jl
adc
jle
push
lods
bound
leave
pop
inc
jmp
sar
das
jmp
mov
cwde
or
xchg
add
call
sbb
stos
pop
mov
dec
push
hlt
sahf
push
pop
dec
cmp
inc
push
call
inc
ins
test
push
test
mov
mov
out
inc
adc
add
and
dec
fidiv
pop
or
jne
out
inc
dec
sbb
retf
xchg
fisubr
add
sbb
inc
icebp
dec
inc
fild
aam
retf
addr16
sbb
dec
in
pop
jecxz
fild
inc
or
hlt
push
pop
xchg
adc
sti
or
push
ins
ins
jne
bound
pop
mov
add
jmp
rol
sbb
shr
mov
adc
push
aad
add
arpl
addr16
adc
inc
movs
inc
cmps
jecxz
mov
aaa
push
bound
add
sbb
inc
div
push
mov
int3
mov
cmp
jo
mov
mov
loop
and
adc
js
loop
inc
aaa
lds
mov
xor
popf
cmps
clc
jl
std
mov
test
repz
shl
int3
mul
test
test
inc
add
jge
jae
xor
add
sbb
es
pop
jae
add
jo
je
jbe
cmp
cmps
mov
mov
fild
stos
lock
test
and
test
adc
and
shr
mov
imul
mov
das
mov
xchg
pop
iret
sub
push
add
shr
inc
xchg
dec
xchg
cmp
nop
mov
cmp
out
out
lds
ret
lods
xchg
out
cmp
aas
fs
(bad)
(bad)
mov
repnz
popf
sahf
or
cmps
std
ror
xchg
je
cld
sub
loope
not
imul
adc
aaa
aaa
pop
dec
push
xor
mov
mov
cmps
lock
add
push
out
in
mov
and
cwde
fisttp
or
pop
push
sahf
inc
rol
out
clc
adc
ret
push
int
fadd
and
or
xchg
cli
stos
push
sbb
aad
inc
jmp
cli
fsub
xchg
(bad)
push
enter
jb
mov
dec
jo
out
mov
or
out
dec
mov
xor
pop
pop
mov
cli
sbb
xchg
add
lahf
and
bound
pause
fsub
inc
xchg
mov
movs
cmp
mov
inc
inc
and
inc
sbb
loop
pop
cwde
cmp
fild
xor
dec
sub
nop
and
pop
leave
jnp
mov
lods
push
mov
mov
mov
repnz
test
mov
out
mov
loopne
push
jmp
xor
pushf
stc
fisttp
rcr
es
fistp
push
loope
dec
push
fmul
loopne
in
sub
adc
aaa
nop
and
jp
push
mov
fistp
test
push
and
into
outs
add
xchg
xchg
in
cs
sub
in
mov
push
mov
xor
sahf
mov
ss
fdiv
add
cmp
sub
loope
mov
jp
loope
jno
pop
mov
retf
int
inc
mov
cld
repz
sbb
shl
loopne
sar
cmp
add
popf
pop
mov
fcmovu
add
dec
and
loopne
sub
fiadd
add
sti
sbb
out
stos
(bad)
mov
imul
add
leave
aam
pop
inc
arpl
clc
fldcw
shl
jb
mov
outs
imul
(bad)
and
out
xchg
into
mov
jp
mov
push
addr16
loope
mov
push
int3
std
jle
mov
or
test
movs
pop
sahf
and
push
ret
pop
pop
cdq
fiadd
jns
retw
popf
cmp
xchg
inc
xor
loope
imul
xor
dec
and
and
ret
fsubr
push
mov
mov
int3
cmps
in
lds
loope
adc
mov
pop
push
sahf
das
add
push
and
fld
stos
push
lea
adc
mov
int
or
imul
mov
in
lea
sar
lods
xor
jae
(bad)
retf
popf
add
pop
adc
les
adc
dec
neg
mov
je
xchg
xchg
push
sub
jmp
xchg
das
es
adc
jle
or
repz
add
push
dec
das
cmp
mov
xchg
ins
inc
xchg
or
stc
in
shr
mov
stos
lahf
icebp
(bad)
cld
lock
add
mov
out
mov
in
mov
aas
pop
inc
rcl
leave
adc
stos
outs
dec
xchg
(bad)
lock
xchg
add
lds
test
je
cwde
in
pop
mov
inc
fidivr
pusha
pop
and
fs
mov
(bad)
xchg
ss
sub
xchg
clc
dec
and
push
retf
pop
ja
fnsave
test
call
pop
push
mov
dec
push
je
sub
fs
and
jno
pop
ror
jnp
jnp
push
inc
clc
jae
cmp
ficom
sub
jg
pushf
outs
aam
sub
adc
inc
adc
jb
aad
sub
mov
sub
popf
mov
push
int
outs
inc
aam
test
fisub
bound
(bad)
cmp
sub
dec
les
add
xor
xchg
mov
mov
sbb
mov
daa
and
cmps
or
cmps
jnp
bnd
nop
xchg
aam
retf
mov
sbb
mov
aam
cmps
and
paddq
mov
cli
call
pusha
ds
sub
sub
push
xchg
push
fst
sbb
add
enter
inc
repnz
mov
pop
sbb
mov
call
les
dec
push
ins
jnp
xchg
mov
dec
fisttp
dec
add
ret
pop
xor
fcomp
aad
mov
sub
int
rcl
aad
femms
fbstp
test
mov
pop
out
inc
push
test
inc
fidiv
das
into
push
push
dec
fisttp
fs
aaa
and
test
inc
push
sbb
test
inc
stos
and
fisub
mov
push
test
lds
xor
push
cmp
pop
fmul
push
jp
xchg
mov
imul
push
fisub
or
or
sbb
cmp
sbb
or
outs
aaa
add
loope
je
fs
mov
sbb
ja
cmp
dec
aad
push
cmp
out
cmc
push
or
cmps
scas
jne
jp
jle
not
ss
xor
mov
pop
bound
dec
jecxz
add
out
push
sub
test
in
aas
jp
jle
(bad)
not
and
inc
xor
mov
aas
lds
push
add
or
mov
into
pop
cld
xchg
mov
enter
fidiv
mov
pop
cdq
mov
popf
(bad)
push
dec
jne
mov
loopne
sar
add
sub
call
jl
jnp
cmp
sbb
(bad)
push
cli
and
mov
fisub
and
sub
inc
xor
fbld
xlat
dec
pop
loope
and
fwait
jmp
xchg
iret
jmp
jne
sbb
jmp
iret
pop
test
sub
mov
loop
xchg
xchg
or
in
sub
ret
retf
jns
call
repnz
mov
in
or
inc
enter
lock
aad
add
pop
sub
out
in
sub
xor
cli
adc
mov
repz
ss
push
xchg
push
sub
rcl
or
dec
(bad)
add
out
and
push
arpl
int
out
jbe
ins
cli
test
adc
sub
ret
int
mov
xor
and
jmp
pop
lock
pop
sbb
adc
sub
xchg
enter
repnz
or
push
push
jb
call
(bad)
aaa
mov
ficomp
cmp
cmp
loopne
loopne
inc
push
or
mov
das
sub
push
cs
add
ficomp
add
add
jbe
pop
loop
add
arpl
or
int3
or
mov
inc
aad
cwde
lahf
dec
xchg
retf
out
inc
(bad)
pop
mov
lods
push
in
aad
and
retf
pop
cmps
cpuid
push
jb
lahf
sbb
cmp
or
fprem1
aam
jo
out
mov
jmp
xor
pusha
shr
mov
dec
sbb
fimul
aad
ret
movs
(bad)
inc
adc
pop
clc
xchg
xor
leave
iret
popa
and
popa
or
sbb
jnp
mov
xchg
int3
shl
push
inc
ss
or
mov
adc
fistp
mov
xor
and
dec
fbld
dec
jmp
ret
jle
retf
xchg
push
daa
loope
xor
push
add
fs
rcr
and
mov
fwait
and
cmp
jg
or
mov
loope
jmp
repz
mov
dec
jo
sbb
dec
push
pop
mov
and
mov
ret
xchg
sub
adc
popa
loop
ret
jno
mov
adc
push
jmp
inc
mov
daa
xchg
retf
mov
outs
jmp
cmp
cs
test
neg
push
inc
leave
ja
icebp
jno
mov
push
stos
popw
gs
nop
mov
adc
fcom
ficomp
adc
xor
pop
sbb
mov
mov
ret
mov
pusha
mov
adc
stos
imul
sub
js
push
cmp
popf
pop
ins
(bad)
(bad)
mov
fwait
inc
xchg
push
aam
cmps
xchg
ss
sbb
test
xchg
gs
arpl
in
inc
int3
mov
into
fistp
aaa
xchg
call
in
jne
es
cmp
jmp
popf
je
sbb
xor
(bad)
push
(bad)
push
ins
lahf
push
in
imul
(bad)
pop
dec
test
mov
cs
jne
sub
jns
outs
push
mov
(bad)
xchg
iret
stc
xor
add
call
mov
cdq
je
xchg
movs
sbb
stos
mov
dec
ret
sub
mov
bound
xchg
mov
jl
mov
add
arpl
int
mov
je
pusha
pop
add
les
test
mov
cwde
sub
test
pop
stc
mov
movs
pop
or
jno
js
scas
cmps
xchg
ss
jbe
xor
push
sbb
call
inc
lahf
mov
xchg
fs
fimul
pusha
std
mov
pop
aad
jge
xchg
ror
and
fwait
sbb
cs
stc
(bad)
mov
mov
aad
sahf
xchg
into
dec
adc
aaa
xchg
mov
lea
and
imul
leave
dec
jl
xchg
mov
movs
sbb
outs
adc
cdq
hlt
loopne
xchg
ss
jecxz
mov
repnz
push
mov
rcr
test
test
sahf
adc
call
sbb
sub
imul
mov
xlat
add
fstp
xor
lds
pop
or
cmova
inc
mov
xchg
mov
inc
xor
add
and
mov
je
jbe
push
xchg
dec
test
mov
jle
fmulp
xchg
mov
sbb
into
movs
(bad)
jns
sbb
retf
adc
and
push
xchg
push
loop
jnp
pop
sub
jbe
push
xchg
jmp
pop
popa
mov
mov
sub
cmp
stc
inc
stos
add
inc
cld
enter
dec
pop
ss
loop
cwde
add
xchg
dec
pushf
or
fisttp
jge
dec
xor
and
aad
fimul
icebp
call
loopne
aas
sub
cmp
inc
in
cmc
inc
cmp
in
imul
(bad)
dec
(bad)
jno
mov
push
fsubr
pop
sub
std
test
pop
mov
fldenv
stc
dec
dec
push
cdq
mov
(bad)
rcr
mov
mov
stos
(bad)
neg
or
in
mov
mov
mov
sbb
cdq
jo
(bad)
mov
xor
jnp
jmp
jne
popa
mov
pop
(bad)
pop
adc
gs
xchg
dec
or
mov
int
or
xchg
push
push
xchg
add
xor
push
(bad)
in
and
push
(bad)
push
lock
and
test
cld
mov
out
aad
ret
das
icebp
fcom
push
adc
hlt
dec
adc
aam
pop
pushf
mov
inc
adc
shl
pop
jp
mov
xor
mov
lds
cs
js
push
ins
xor
ss
adc
aam
cmps
xor
ds
cld
(bad)
mov
mov
mov
jno
pop
add
ret
jno
call
retf
dec
dec
aaa
inc
push
and
stos
arpl
mov
repz
dec
add
lods
mov
imul
pushf
add
mov
add
xor
cmp
ficom
lds
ss
jns
lods
pop
into
and
jmp
jb
inc
dec
ins
leave
ret
rol
or
fiadd
lea
mov
ins
js
jmp
inc
enter
rcl
pushf
loope
aad
mov
sbb
mov
and
in
adc
arpl
fnstenv
xchg
cmp
test
std
outs
inc
xchg
mov
addr16
add
inc
push
pop
push
dec
push
push
and
fmul
into
or
dec
(bad)
mov
lods
push
xchg
adc
data16
pop
hlt
sub
test
mov
push
push
xor
adc
mov
xchg
loop
or
aam
pop
(bad)
in
cmp
test
(bad)
jmp
(bad)
fldenv
outs
jnp
and
mov
xchg
ss
jno
bound
mov
jnp
ins
pushf
xchg
arpl
loop
sub
cmp
sahf
sbb
mov
stos
cmps
jg
test
push
stos
ret
and
push
aas
inc
out
data16
rcl
neg
pop
inc
and
add
imul
xlat
xor
lock
aaa
call
out
xchg
push
aad
add
fmul
sti
xor
repnz
mov
add
call
add
rol
push
stc
dec
scas
fsub
fidivr
in
dec
xchg
mov
cmp
mov
scas
dec
push
adc
sbb
gs
or
add
pop
iret
imul
lods
js
(bad)
mov
jg
xor
dec
sub
bswap
stos
jl
jbe
pop
mov
(bad)
pop
(bad)
push
sub
sub
mov
add
or
cmp
inc
(bad)
sahf
lahf
inc
jnp
out
sub
cmp
lods
sub
jle
cmp
mov
jp
nop
call
(bad)
sub
and
popf
xchg
stos
or
push
pop
in
cmps
cmp
adc
inc
cmp
push
mov
fnstenv
jae
or
and
retf
push
mov
or
cmp
mov
(bad)
(bad)
push
push
ret
sti
dec
jns
xchg
add
lods
add
cmc
in
in
fidivr
and
retf
fidivr
inc
push
outs
dec
push
push
popf
(bad)
inc
add
or
rcl
and
inc
mov
xor
mov
sub
ja
sbb
popf
fwait
pushf
dec
xor
adc
stos
pop
mov
push
enter
adc
add
shr
jne
adc
add
xchg
sahf
push
clc
pop
call
les
cmp
pop
mov
inc
ins
pop
aaa
adc
mov
sar
cmp
pop
jno
aas
push
mov
dec
(bad)
pushf
or
push
mov
cli
mov
adc
adc
cmps
fnsave
dec
adc
and
popa
pop
leave
dec
ret
iret
mov
outs
test
dec
cwde
addr16
test
retf
push
ret
mov
dec
cmps
ror
inc
ss
(bad)
in
and
add
rcr
outs
mov
xor
mov
sti
mov
cmp
daa
jne
(bad)
cmp
jmp
(bad)
sbb
mov
ins
ret
xchg
add
pushf
(bad)
xor
pusha
aad
int
xchg
out
and
mov
fiadd
mov
and
nop
into
push
scas
test
daa
test
mov
enter
pusha
neg
mov
sub
ret
ss
cmp
imul
les
jp
push
dec
mov
sbb
data16
nop
out
out
cmp
and
data16
fwait
pop
jne
mov
sub
int3
movs
pop
dec
ret
push
enter
cmp
movs
daa
mov
xchg
push
or
adc
sub
movs
and
cmp
int3
out
cld
aas
adc
loop
inc
jnp
and
mov
and
mov
add
push
or
outs
je
outs
and
xor
loope
inc
pop
lea
jnp
fld
pop
icebp
dec
or
cdq
in
dec
mov
mov
sbb
push
arpl
cmp
mov
inc
aam
inc
add
sub
and
xor
jl
stc
out
call
das
xor
fidiv
sar
mov
cld
xor
call
mov
cmps
cmp
sub
mov
dec
imul
push
jecxz
cmp
stc
push
fld
and
fisttp
call
xor
jns
fmul
adc
repz
ins
pop
fimul
mul
cmp
adc
test
fadd
sub
cwde
cwde
push
es
and
les
jle
pop
dec
and
jno
push
mov
jge
sub
inc
jle
stos
ret
or
jge
and
mov
cdq
jl
loope
dec
pusha
dec
aas
fxch
mov
mov
je
jl
inc
dec
out
icebp
dec
inc
fimul
jns
adc
addr16
into
mov
inc
iret
(bad)
jbe
js
add
ret
pushf
and
adc
sbb
mov
fld
and
push
dec
stc
sahf
call
pop
aam
or
lock
jmp
dec
mov
or
(bad)
ret
sub
push
adc
sub
mov
nop
mov
lds
jmp
out
out
pushf
push
or
push
mov
or
push
add
push
rol
int3
cdq
xchg
in
mov
mov
cmp
and
cmp
stos
pop
pop
adc
fsubr
(bad)
pop
ffreep
add
shr
pop
(bad)
into
push
mov
mov
stos
xchg
icebp
jle
xor
push
rol
nop
enter
bound
(bad)
lahf
xchg
aad
and
ja
dec
es
adc
jns
mov
in
das
popf
jmp
push
lea
jmp
ins
add
nop
mov
push
mov
and
cmps
sbb
cmp
(bad)
jge
fild
xor
push
repnz
cmp
xchg
cwde
sbb
xor
repz
mov
sub
mov
mov
mov
das
cdq
sbb
mov
and
neg
xor
jne
inc
imul
inc
push
stc
ins
rcl
mov
dec
ret
out
(bad)
out
outs
das
mov
rcr
fldenv
mov
inc
out
jnp
dec
cwde
add
mov
sub
fcom
mov
stc
jecxz
jmp
add
lahf
xor
fisub
pop
sub
loop
sahf
popf
aad
push
lods
jecxz
mov
and
jne
mov
mov
in
mov
dec
xor
gs
dec
ins
mov
jmp
std
mov
test
stos
jg
les
pop
out
stos
ficomp
or
cmp
test
or
dec
addr16
shl
cs
cmps
jbe
mov
idiv
mov
retf
sbb
rcr
xor
adc
mov
sbb
movs
(bad)
adc
aas
in
jno
mov
cld
pop
adc
popa
adc
ss
cmp
movs
jne
sbb
sbb
data16
cmc
clc
int3
or
add
mov
mov
inc
setne
push
sbb
nop
adc
pushf
stc
mov
mov
test
mov
and
xchg
aam
clc
loopne
add
and
dec
xor
sub
idiv
or
int3
cwde
mov
dec
leave
fcom
clc
pop
jno
neg
and
mov
and
or
shl
mov
lock
push
sbb
mov
(bad)
fmul
dec
popf
stos
lds
cdq
mov
xlat
int3
pop
clc
sbb
in
movs
outs
and
sbb
fstp
test
xor
mov
cmp
jo
dec
je
ficomp
or
sub
adc
daa
scas
imul
jge
aad
cli
ss
shr
nop
mov
cmp
or
xchg
lea
sahf
adc
in
inc
pop
add
mov
inc
xchg
lds
div
mov
mov
inc
dec
pusha
mov
mov
loopne
fwait
outs
dec
popa
je
cmp
loop
shr
cmp
fwait
inc
xchg
aad
pop
inc
xor
nop
dec
inc
or
jno
push
ficomp
addr16
xchg
mov
icebp
mov
jl
(bad)
in
lock
sub
int
pop
stos
fsubr
jo
xor
xchg
inc
loop
loopne
adc
xor
cmp
xchg
pop
sbb
stc
sahf
cmp
push
cmp
mov
dec
movs
cmc
(bad)
lahf
outs
jbe
sar
ret
pop
push
sub
pop
sub
int3
cli
stos
dec
les
add
retf
dec
jnp
stos
dec
out
pop
push
adc
call
popa
(bad)
and
out
dec
push
mov
arpl
cmps
iret
mov
jns
jp
pop
call
outs
out
lods
aad
outs
pop
push
das
cmp
jb
sub
retf
or
mov
das
ins
push
xor
and
lahf
push
inc
push
cmp
or
mov
test
fnsave
pop
in
dec
mov
fwait
jl
ret
cmps
jae
adc
fnstsw
xchg
or
push
pop
and
(bad)
cli
retf
mov
in
ror
adc
out
add
arpl
pushf
jb
pop
push
test
rcl
das
fistp
(bad)
mov
sbb
pop
rcl
(bad)
test
xchg
std
out
dec
xchg
repnz
in
push
lods
sub
mov
sub
dec
div
mov
push
cmp
add
or
cmp
jno
dec
sub
dec
inc
out
mov
jb
in
jg
pop
mov
test
push
test
stos
push
fnstenv
push
scas
mov
iret
in
fidivr
imul
mov
aaa
rol
sbb
pusha
pop
push
add
out
inc
add
mov
or
or
nop
lds
adc
hlt
loope
sub
std
int3
scas
test
ins
xchg
fadd
mov
mov
aam
push
xlat
mov
dec
(bad)
mov
mov
add
pop
mov
sub
adc
fs
pop
in
mov
leave
in
adc
jmp
push
and
dec
cmp
stos
sbb
push
fidiv
xor
mov
or
outs
call
or
and
lods
cld
imul
add
bound
int3
inc
and
push
adc
cmps
pushf
mov
and
dec
(bad)
xchg
out
fsub
out
mov
repz
arpl
xchg
mov
pop
icebp
cmps
jg
aas
cmp
rcl
xchg
outs
stos
inc
xor
and
jo
or
jmp
push
add
mov
stos
push
mov
into
or
inc
pop
cld
ss
in
mov
iret
stos
mov
pop
rcr
xchg
out
mov
mov
outs
xchg
js
or
push
pusha
repz
pop
popf
add
pop
xor
jmp
test
mov
inc
cli
xor
or
add
cmp
push
pop
jae
dec
cmps
jmp
(bad)
ins
cmp
cmp
or
add
in
jae
and
mov
and
cmp
adc
mov
in
xor
int
(bad)
push
fadd
sub
or
jle
and
inc
push
mov
mov
fs
xchg
sub
mov
loopne
xor
sbb
aam
adc
shr
leave
hlt
xchg
ret
iret
fdiv
mov
out
jns
aam
sbb
mov
cmp
test
gs
leave
loopne
jo
ret
jp
sbb
mov
cmp
or
fldcw
jno
jb
sub
mov
pop
mov
sahf
mov
xor
push
and
loope
push
ja
in
push
test
mov
pop
cmps
movs
ds
(bad)
loop
pop
or
scas
inc
cmp
dec
jne
cmp
pop
xor
mov
mov
loope
push
pop
ins
cmps
cld
test
sbb
xchg
add
loope
aaa
dec
imul
ds
pop
push
aad
stos
mov
inc
mov
repnz
in
add
loopne
jle
mov
nop
pop
jne
retf
jmp
sub
xchg
nop
fstp
fadd
lods
cmps
aad
jb
xchg
xchg
js
call
(bad)
cmps
and
in
mov
mov
and
imul
xchg
jnp
dec
cmp
jns
cmps
jns
push
cmp
dec
adc
mov
sbb
jbe
pop
ins
push
loopne
les
sbb
pop
xlat
inc
call
dec
push
mov
jg
xchg
and
mov
mov
popf
cmp
ins
aam
cmp
add
jo
jmp
outs
pop
mov
or
mov
cmp
movs
mov
inc
in
fsubr
sbb
leave
in
or
fsubr
inc
xchg
push
out
sub
out
adc
pop
push
pop
lods
lea
add
ss
mov
jmp
xchg
(bad)
and
mov
(bad)
sub
sbb
xchg
or
pop
cmc
aaa
add
in
and
sti
(bad)
push
cmp
inc
push
fadd
nop
and
xchg
jmp
ins
sqrtps
repz
sahf
adc
jmp
or
mov
(bad)
(bad)
retf
jb
gs
in
dec
inc
xor
cld
leave
sbb
pop
out
mov
popf
(bad)
jmp
sti
in
fiadd
mov
xor
hlt
inc
push
out
and
mov
fld
popf
sbb
xor
lock
adc
cmp
sbb
xor
mov
repnz
push
repnz
movs
push
ins
in
enter
push
es
sub
pop
or
jecxz
pop
shl
inc
pop
push
(bad)
std
mov
pop
push
lods
mov
pop
cmc
push
mov
sbb
repz
mov
ja
push
icebp
popa
mov
adc
cmp
xor
test
inc
pop
mov
add
pop
mov
inc
arpl
(bad)
call
push
dec
popf
push
sbb
imul
pop
mov
(bad)
adc
retf
imul
mov
mov
scas
ret
loopne
mov
aad
xor
and
loope
adc
sub
stos
jno
xor
iret
sar
(bad)
mov
mov
adc
xor
adc
mov
imul
jmp
cmps
push
ja
pop
retf
jns
inc
outs
xchg
inc
pop
fwait
cmp
test
clc
xor
aas
cdq
jg
push
xchg
movs
(bad)
cmc
loopne
imul
imul
outs
xlat
iret
pop
scas
cmp
cmps
loopne
out
sbb
imul
mov
xchg
jnp
add
mov
cmps
mov
loope
mov
inc
out
fist
pushf
mov
jl
adc
adc
cmp
cmps
in
and
and
jb
das
push
xlat
jp
jp
retf
icebp
test
scas
ret
imul
jmp
into
cld
jbe
jb
lods
ins
jl
stos
jb
popf
jne
rcr
xor
retf
jno
sbb
xor
arpl
(bad)
clc
cmps
clc
sub
cmp
repz
sbb
dec
pop
(bad)
in
sub
pop
jno
clc
xor
dec
and
popf
or
mov
iret
push
aas
add
or
mov
retf
xchg
repnz
leave
sub
jp
sbb
mov
nop
cmps
dec
cmp
add
dec
fcomp
sub
cmp
pushf
add
js
pop
daa
cmps
and
cmp
xchg
and
push
inc
mov
retf
mov
sbb
ja
jge
inc
xor
adc
sub
inc
cmp
push
stos
popa
clc
lahf
push
inc
mov
(bad)
jg
mov
xchg
dec
in
mov
adc
dec
ret
inc
rcr
cmp
sbb
loopne
es
int
mov
sub
out
sahf
daa
mov
push
pop
cmp
ss
jns
lock
iret
into
mov
mov
and
retf
fs
fnstenv
(bad)
push
sti
test
cmc
addr16
movs
(bad)
shl
pop
int3
cmc
dec
pop
jbe
jns
xchg
pop
mov
bound
mov
lds
nop
jne
jns
daa
jmp
ins
jo
sbb
cmp
jmp
clc
js
pop
(bad)
out
retf
pop
int3
(bad)
sahf
pop
mov
shl
(bad)
std
mov
xor
cmp
retf
inc
and
into
push
(bad)
xchg
sbb
test
nop
fmul
mov
add
xchg
cmp
push
jnp
cmc
pop
jnp
(bad)
aad
add
retf
sar
push
call
sbb
xor
mov
mov
inc
cmp
hlt
add
and
lfs
test
add
mov
cli
fs
jo
add
test
imul
adc
lea
aad
rcl
inc
xor
add
mov
cwde
ds
push
pushf
jae
sbb
xchg
sub
jmp
lods
xor
pop
pop
or
loope
pop
loope
call
sahf
les
mov
cmp
xor
fiadd
mov
xchg
push
das
imul
or
mov
cwde
or
add
cmp
movs
ror
outs
or
xor
(bad)
or
fcmovb
pop
inc
mov
adc
mov
mov
push
and
xchg
aad
sbb
in
sub
pushf
dec
call
add
or
sub
sub
jnp
test
stos
sub
inc
test
neg
cli
enter
dec
inc
scas
clc
add
jo
test
adc
push
jae
out
adc
pop
js
jmp
inc
inc
ret
sub
outs
(bad)
push
mov
sbb
adc
imul
es
lock
js
ror
in
add
loopne
and
and
add
je
idiv
repnz
mov
cmp
cmp
mov
fdivr
xchg
inc
or
loopne
jg
mov
das
imul
mov
aas
inc
nop
les
div
or
fwait
popf
les
test
hlt
test
or
sbb
icebp
jecxz
adc
cld
scas
mov
in
mov
scas
stos
xor
and
fnstenv
or
or
pop
mov
adc
xor
pushf
dec
push
and
mul
repnz
aaa
cmc
mov
xor
sub
mov
add
jle
ins
sub
pop
add
mov
in
add
dec
xchg
bound
(bad)
retf
and
xor
dec
stc
adc
cmp
retf
dec
or
xchg
mov
add
pop
sub
jp
adc
mov
sbb
xchg
push
pusha
fidiv
pop
out
mov
fxch
mov
push
in
call
sub
sti
mov
pushf
test
mov
mov
repz
cmp
or
rcr
imul
and
xchg
xchg
mov
jmp
jb
adc
jge
lea
arpl
jns
cmp
je
pop
pop
sub
loope
aam
out
bound
ficom
inc
xchg
push
or
int3
add
dec
mov
adc
dec
mov
test
repz
gs
cmp
push
jg
jle
(bad)
inc
jle
add
dec
mov
xchg
and
add
and
jns
mov
jmp
repnz
call
pushaw
xlat
test
pop
inc
repz
inc
ja
pop
cmp
out
stos
cmps
out
dec
getsec
dec
jnp
and
stos
and
or
mov
das
adc
cmp
dec
sub
jp
xchg
push
out
xchg
into
xchg
lea
(bad)
dec
or
arpl
rcl
lds
pop
xchg
sub
pop
xchg
into
repz
iret
shl
sar
movs
or
mov
push
retf
mov
dec
sub
and
test
loopne
push
mov
cmp
stos
pop
or
shl
adc
mov
push
call
bound
push
fs
xchg
jo
cmp
mov
pop
iret
into
je
add
mov
cdq
adc
xlat
xchg
mov
imul
xor
inc
mov
lods
jae
xor
mov
cmc
leave
adc
push
sbb
push
cmps
out
push
inc
jge
push
mov
cmc
leave
out
jne
daa
inc
push
xchg
mov
rcr
daa
or
movs
stc
add
in
dec
add
pop
cmps
outs
or
jno
enter
or
or
inc
lock
call
jg
mov
sub
mov
outs
xchg
mov
push
mov
or
sub
sbb
sub
fnstenv
bound
mov
ds
add
xchg
mov
movs
pop
jo
hlt
in
ss
adc
es
movs
movs
add
jnp
mul
ja
cmp
in
outs
push
add
fs
mov
test
mov
xchg
lds
add
dec
xor
out
stos
fs
cmps
xlat
push
imul
lahf
jno
pop
push
lahf
fwait
adc
(bad)
push
mov
pop
pop
push
inc
sbb
mov
dec
push
test
xchg
or
mov
(bad)
adc
jae
xor
inc
jbe
retf
repz
xor
imul
aas
sti
daa
or
ins
cdq
call
jmp
imul
dec
mov
test
cmp
xor
cmp
inc
jne
sub
xchg
inc
mov
jmp
add
jp
lods
sub
fcom
fidiv
xchg
cwde
out
pop
jne
test
mov
xchg
jl
mov
inc
lahf
pusha
and
je
sbb
pop
out
not
test
mov
sar
cmp
imul
and
push
lock
call
outs
sbb
cmp
mov
mov
loopne
js
rol
and
xchg
in
dec
jno
sub
and
mov
sub
dec
inc
xor
pop
out
or
inc
or
loop
cmp
pop
push
pop
les
leave
or
jmp
mov
call
sub
and
push
ins
leave
imul
sar
push
adc
adc
jnp
push
sbb
adc
mov
(bad)
(bad)
mov
sub
fwait
(bad)
in
jmp
xor
mov
stos
push
inc
in
mov
xor
rol
mov
cmp
mov
outs
getsec
das
ds
adc
xchg
mov
and
push
xor
mov
mov
js
mov
inc
xor
dec
sbb
ror
mov
movs
and
je
repnz
pusha
sbb
lds
mov
xchg
aad
inc
mov
dec
and
ins
xor
test
mov
lds
jge
inc
mov
mov
repz
int
mov
xor
jg
xchg
add
daa
mov
and
nop
jl
out
mov
inc
or
mov
xor
xchg
ins
and
inc
mov
xor
xor
shl
sbb
sti
jb
push
sti
sbb
ja
test
dec
dec
adc
ror
loope
mov
dec
(bad)
fbld
stos
jl
inc
shl
inc
add
(bad)
movs
rep
lods
or
jmp
dec
and
lea
jne
add
mov
inc
or
retf
dec
mov
sbb
cmc
dec
mov
push
add
jno
clc
mov
pop
mov
mov
nop
daa
sub
adc
imul
mov
fistp
cdq
sub
ret
out
jmp
mov
mov
shl
imul
cmp
push
or
jmp
sbb
popf
inc
nop
and
sbb
cs
push
scas
and
xor
inc
dec
movs
aad
nop
jmp
push
sbb
hlt
xchg
in
jecxz
(bad)
mov
mov
mov
je
cmp
sbb
aad
cmp
loope
in
jb
add
jl
pop
fdivr
pop
jno
iret
repz
jecxz
rcl
sub
xor
pop
fdivr
cmp
dec
arpl
cmp
int
test
xlat
jne
retf
pop
adc
mov
ds
or
and
add
cmp
jmp
aam
into
fdivp
movs
mov
push
jmp
call
outs
jle
pop
push
xchg
add
inc
out
scas
mov
or
les
cmps
mov
mov
xchg
adc
jp
ja
mov
xor
adc
bound
xchg
ds
repz
je
movs
fcomp
mov
ret
and
test
push
or
mov
lea
pop
repz
mov
dec
mov
sahf
lods
repz
jo
pop
daa
mov
das
frstor
enter
das
lahf
push
or
inc
cmp
(bad)
sbb
gs
mov
inc
dec
jle
shl
jecxz
in
xor
sbb
inc
in
js
into
jmp
add
adc
(bad)
lods
push
jmp
or
(bad)
hlt
sahf
adc
lods
lock
mov
xor
push
(bad)
pop
cmps
push
cmp
pop
cmp
push
add
iret
or
nop
neg
lods
adc
dec
xor
sbb
test
adc
mov
sbb
cmp
sbb
lock
sbb
pop
cmp
(bad)
retf
addr16
rcl
sbb
ja
test
cmp
(bad)
cs
cmp
cmps
ja
imul
adc
gs
out
mov
mov
stos
(bad)
(bad)
mov
mov
mov
sub
movs
out
(bad)
push
jbe
cmps
mov
push
outs
out
aad
cmc
or
bound
or
lahf
cmp
jmp
scas
push
iret
jb
add
dec
push
mov
ss
pop
loop
xchg
ret
cdq
js
imul
nop
sub
popf
mov
call
add
push
pop
retf
sbb
and
imul
pop
sahf
aas
dec
sub
push
(bad)
mov
dec
jo
movs
leave
push
pop
lock
sar
cmps
popf
and
jbe
nop
sub
pop
mov
inc
sti
xchg
fld
out
aas
adc
test
aam
mov
inc
inc
cmp
popf
mov
pop
pop
mov
std
shr
mov
inc
popa
add
jnp
arpl
push
lods
sbb
jmp
xchg
jmp
xchg
xor
sahf
das
mov
or
sbb
xchg
cwde
xor
aad
movs
jbe
pop
fistp
dec
(bad)
inc
(bad)
pop
add
xor
or
add
or
nop
repz
into
fdiv
stos
fdivr
aam
loope
mov
push
cs
rcl
imul
std
lods
stc
lods
bound
les
xchg
mov
pop
dec
pop
sahf
fcomp
mov
loop
sbb
inc
and
out
pop
mov
add
mov
iret
mov
scas
adc
dec
(bad)
stos
pop
mov
xor
enter
in
cmp
xchg
movs
clc
pop
and
xchg
sub
mov
rcl
rol
outs
ds
fadd
int
jl
mov
mov
inc
aaa
cmp
push
pusha
push
(bad)
icebp
arpl
sahf
jbe
aaa
push
addr16
add
repz
or
pop
cmp
xor
dec
int3
in
pop
stos
sbb
stc
stc
xlat
sbb
loop
adc
push
xor
scas
inc
in
adc
jmp
es
adc
out
ins
pusha
jo
fdiv
pop
and
repnz
rcl
sub
lea
popa
lods
push
iret
jno
dec
cmp
cmps
jne
mov
xor
push
call
xchg
fs
movs
test
mov
fistp
sub
les
xchg
inc
ret
push
(bad)
out
push
ret
out
sub
mov
mov
mov
pop
in
mov
dec
cmp
xchg
sbb
inc
sub
add
mov
fwait
stos
cs
xchg
mov
pop
mov
cli
sbb
std
movs
in
adc
mov
cmp
or
or
pop
or
fdecstp
jns
mov
inc
cli
bswap
outs
ret
xor
push
xor
icebp
cwde
and
and
mov
or
sub
popw
pop
mov
or
push
pushf
leave
jae
dec
push
inc
cli
or
add
arpl
in
or
mov
xchg
pop
cmp
or
aam
pop
jo
hlt
mov
mov
dec
inc
jge
call
inc
cmp
out
xchg
mov
pop
fist
mov
mov
fistp
fcom
retf
mov
ds
int3
ficomp
fimul
inc
mov
ja
int3
cmp
dec
fild
call
pop
inc
ror
dec
xor
jge
inc
not
mov
jnp
icebp
jg
cwde
or
das
add
repz
xor
pop
out
xor
jp
outs
aaa
in
or
push
mov
lods
add
retf
scas
inc
mov
ss
mov
stos
setge
and
add
pop
xchg
sti
(bad)
mov
add
mov
js
ss
cwde
pop
(bad)
cmc
pop
jnp
push
mov
lods
leave
add
loope
xor
push
pop
cmp
and
arpl
jmp
push
test
mov
out
pop
push
dec
clc
cdq
nop
push
sbb
repz
adc
sbb
js
or
or
mov
call
mov
lds
pop
sar
mov
gs
sar
ss
imul
lahf
fsubr
lods
outs
in
fsub
int3
cli
cld
out
xchg
nop
ss
repnz
(bad)
sti
cld
movs
out
clc
push
dec
(bad)
jne
inc
lock
shl
push
sbb
cdq
pop
jb
xchg
je
retf
and
lea
aam
adc
and
push
call
std
xchg
aaa
repz
xchg
sbb
push
xchg
jmp
rcr
loop
add
cmp
or
jne
push
pop
retf
jo
xchg
adc
xchg
jns
push
ret
int3
xchg
sahf
inc
(bad)
adc
iret
les
sahf
add
(bad)
mov
les
sub
jo
mov
stos
ret
jp
enter
xor
pop
mov
jne
das
in
(bad)
test
out
sahf
les
or
cld
add
dec
scas
imul
mov
dec
jae
outs
rol
lods
leave
inc
out
scas
sbb
loope
push
lahf
or
xlat
sahf
paddq
jecxz
loopne
test
sbb
inc
xor
mov
out
sbb
xchg
lea
cwde
add
inc
and
mov
std
shl
dec
push
xchg
es
(bad)
cmp
sbb
sub
jmp
xlat
in
call
jb
add
and
and
mov
rcr
sahf
push
lods
pop
mov
addr16
inc
cli
popa
pop
repz
jne
cmc
xchg
es
popa
pop
and
jg
das
ins
push
call
call
jmp
mul
aaa
adc
xchg
gs
jl
pop
xor
push
bound
mov
int3
add
or
jno
aad
ret
or
in
fidivr
in
inc
cmp
sbb
clc
retf
fwait
sbb
adc
in
xchg
and
outs
push
mov
(bad)
sbb
pop
sbb
je
sbb
xchg
xchg
bound
hlt
push
and
push
lods
aas
jns
adc
pop
or
mov
lods
loop
dec
add
test
sub
dec
scas
mov
sbb
(bad)
mov
shl
pop
adc
jle
lods
(bad)
inc
inc
rcl
mov
jnp
in
mov
js
popf
std
push
(bad)
jg
push
adc
mov
fs
adc
test
and
push
add
imul
pop
loopne
retf
aaa
mov
dec
test
push
repnz
inc
movs
imul
ficomp
push
fld
lods
mov
sbb
adc
scas
sar
xchg
cmps
jo
mov
stos
test
or
cmp
lahf
dec
(bad)
mov
ret
dec
pop
adc
xchg
pop
es
ret
cwde
push
inc
mov
imul
inc
cmps
imul
or
je
jo
mov
daa
test
neg
xchg
in
inc
mov
and
retf
mov
outs
push
or
dec
sbb
pusha
xor
sbb
dec
scas
fdivr
call
loopne
cmp
sbb
jne
es
mov
cmp
lea
mov
sbb
push
pop
mov
cdq
stos
ret
add
arpl
out
dec
test
mov
inc
sub
test
arpl
ret
sub
jp
int3
xchg
adc
stos
loope
sbb
movs
push
idiv
loope
dec
pop
pop
into
and
mov
dec
daa
popa
shl
mov
xor
mov
in
xchg
pop
cs
(bad)
test
cmp
sbb
xor
(bad)
jns
pop
xchg
imul
push
imul
adc
fiadd
add
add
test
mov
out
mov
pop
ficomp
cmp
jp
into
(bad)
sub
xchg
stc
fdivr
(bad)
mov
test
out
mov
push
ja
inc
cmp
or
ret
dec
(bad)
push
fldcw
xor
js
retf
daa
fidiv
mov
jg
in
dec
call
or
xchg
pop
imul
push
xchg
adc
shl
adc
xor
in
lds
pop
mov
sub
enter
mov
cld
inc
and
cmp
mov
rol
clc
mov
mov
pop
es
cdq
(bad)
cmp
mov
add
mov
fsubr
lahf
std
jnp
(bad)
pop
pop
push
hlt
mov
jno
pop
xchg
xchg
jecxz
mov
inc
pop
int
pop
aad
pop
and
int3
lahf
call
push
xor
(bad)
dec
push
cdq
call
cmp
adc
(bad)
jb
movs
push
enter
sbb
xor
jge
das
mov
xchg
sbb
pop
in
pop
cmps
bound
sahf
stc
lea
xchg
pop
gs
xchg
dec
stos
and
jl
rcr
jmp
std
(bad)
sbb
pop
sub
jbe
mul
mov
ret
test
xor
test
cmc
and
test
pop
mov
idiv
cmps
inc
jae
fimul
mov
jmp
sar
inc
xor
inc
jb
jmp
fnstsw
dec
dec
jmp
jge
repz
dec
rcl
sti
cmc
test
mov
iret
adc
xchg
rep
jae
cmp
and
mov
les
aas
pusha
pop
jb
xor
in
pop
xchg
or
dec
xchg
jge
mov
data16
dec
ss
(bad)
sbb
jl
mov
cwde
data16
mov
lahf
jl
push
jno
cdq
inc
push
ins
push
or
push
ins
and
or
into
pop
outs
xchg
and
rcl
gs
icebp
cwde
imul
jmpw
jmp
sbb
dec
mov
cwde
in
jmp
fisubr
outs
mov
repnz
add
jp
or
rcr
scas
fwait
cli
loopne
inc
ret
pop
pop
inc
inc
(bad)
sbb
jl
or
fcom
mov
inc
js
retf
nop
aas
sbb
and
adc
sub
and
mov
ss
nop
xor
mov
mov
jb
stos
daa
mov
xchg
mov
sbb
xchg
mov
push
or
push
sbb
mov
js
or
push
inc
clc
pop
and
nop
jnp
cmps
adc
icebp
xor
mov
xchg
pop
push
lods
mov
push
pop
(bad)
and
mov
hlt
stos
inc
mov
mov
cdq
lods
cmp
sti
mov
iret
stos
pusha
xchg
jo
ds
pop
mov
in
dec
dec
pop
lea
jae
out
pop
sub
(bad)
and
lea
aam
xchg
(bad)
outs
xchg
bound
add
pop
jae
inc
sub
stc
sub
or
xchg
out
vzeroall
dec
(bad)
es
outs
pop
retf
lock
or
and
push
stc
inc
cmps
fstp
or
mov
xchg
or
or
and
inc
fs
xor
mov
inc
add
jmp
add
push
repnz
inc
lea
fistp
rcl
ret
or
sbb
jne
repz
pop
(bad)
call
mov
mov
pop
jae
cli
int
out
inc
les
inc
push
jbe
or
xchg
xlat
mov
(bad)
in
call
xor
and
(bad)
dec
int
sbb
and
or
(bad)
out
cwde
seto
in
xor
add
mov
fisttp
jmp
mov
pop
fadd
sub
into
mov
pusha
push
jae
mov
cmps
out
mov
daa
sub
inc
hlt
in
mul
scas
jg
adc
cwde
das
pusha
inc
or
imul
mov
adc
adc
cdq
ds
jmp
jmp
mov
xor
push
cli
jmp
inc
pop
or
mov
adc
ficomp
stos
and
sar
cs
cli
(bad)
cmc
popf
lods
mov
bound
nop
daa
(bad)
mov
shl
imul
pop
push
sbb
lds
push
stos
inc
shl
sub
retf
out
(bad)
repnz
mov
gs
add
hlt
xchg
and
push
dec
mov
enter
inc
xlat
data16
xchg
jnp
inc
xor
repnz
xrelease
hlt
test
push
fbld
mov
fs
dec
inc
cmps
jmp
add
pop
adc
test
repnz
adc
leave
cmps
(bad)
div
jne
jmp
jp
cmp
jno
fisttp
test
cli
jmp
xor
sub
(bad)
sar
sar
pop
mov
jne
push
push
pop
stos
ds
add
jae
jmp
aad
popa
push
nop
xor
ret
jae
in
add
retf
fisubr
nop
xor
(bad)
bnd
adc
or
sbb
mov
cmps
dec
or
mov
in
jae
addr16
and
inc
pop
(bad)
sub
pop
repz
test
scas
stos
mov
jno
mov
aam
cmps
jecxz
inc
ds
fstp
imul
pop
pop
into
mov
xor
pop
ds
mov
add
(bad)
xchg
cmp
aam
inc
dec
sahf
mov
jl
lea
fidiv
test
cmp
mov
xchg
rol
int3
stos
sbb
push
fwait
mov
inc
popa
push
fbstp
stc
adc
ror
in
ficomp
inc
mov
dec
mov
cmp
dec
aas
jb
pop
shr
dec
inc
sbb
aaa
and
pop
xchg
lods
mov
sar
pop
xor
aad
fwait
jno
and
out
test
hlt
adc
pop
mov
cs
rcr
adc
adc
scas
jge
movs
cmp
cmps
stos
sbb
mov
in
jp
sub
push
(bad)
jl
das
xchg
ret
mov
in
loop
jns
in
jbe
test
mov
xchg
adc
pop
inc
mov
lods
or
popa
pop
clc
or
pop
imul
stos
lds
add
sub
sahf
addr16
pop
loop
push
push
push
stc
fucom
add
sub
pop
xor
push
jmp
fstp
mov
add
push
ror
mov
dec
dec
mov
cdq
jo
pop
cmps
ja
xor
cwde
pop
scas
xor
pop
push
push
mov
xchg
mov
(bad)
les
pushf
jnp
icebp
out
xlat
sahf
or
jg
ss
imul
xchg
mov
test
(bad)
call
mov
daa
fs
mov
iret
std
ds
dec
inc
fidiv
gs
retf
pushf
or
pop
push
mov
inc
push
ror
iret
push
retf
movs
fidiv
mov
stc
dec
ror
stos
bound
jb
xchg
retf
jge
ja
dec
adc
int3
dec
call
aaa
xchg
push
sbb
daa
bound
outs
cdq
int3
add
gs
sbb
popa
fdiv
xchg
cwde
ret
ins
dec
or
pop
dec
(bad)
add
mov
sti
add
std
jmp
ss
lods
scas
add
cli
in
ins
push
dec
cmps
int
sbb
movs
push
out
inc
leave
add
test
jle
rcr
push
pop
sub
sub
stc
push
fadd
jmp
outs
jp
stos
jne
inc
shr
enter
mov
int3
jae
in
jmp
inc
sbb
retf
pop
not
inc
mov
retf
test
or
dec
mov
xchg
xor
(bad)
aas
cmps
jecxz
nop
inc
bound
lods
ficom
bound
sub
clc
inc
inc
jnp
jns
sti
xlat
mov
cmp
pushf
imul
xlat
jbe
(bad)
stos
mov
sti
rcr
stos
xchg
lods
push
sbb
adc
mov
jae
jno
sbb
sbb
aaa
dec
mov
je
clc
mov
leavew
out
les
add
push
xor
adc
inc
or
ret
into
mov
shr
push
fistp
xor
sar
fadd
jae
(bad)
leave
mov
dec
sub
scas
push
inc
ja
jns
inc
xchg
pop
fcmovu
or
shl
mov
or
ret
xchg
je
imul
shl
cmc
xchg
ins
outs
fisttp
(bad)
xor
cmp
hlt
ins
je
cli
imul
sbb
call
pop
dec
fisttp
sub
push
mov
fidivr
inc
cmp
shr
ror
or
sub
mov
xchg
push
sub
xchg
mov
cmp
xchg
cmp
je
xor
(bad)
inc
jns
inc
js
loopne
test
mov
sub
into
pop
or
push
test
sub
in
or
jle
push
or
cmps
popf
(bad)
sub
cdq
call
push
push
jb
jbe
push
adc
sub
xchg
pop
or
lahf
adc
lea
test
ss
xchg
jmp
inc
pop
jo
ja
shl
scas
push
cmp
bound
int3
sub
mov
dec
in
test
xor
je
mov
fnsave
jnp
in
mov
mov
rol
adc
mov
push
inc
add
cmp
sub
outs
cs
and
pop
mov
push
dec
xor
sub
cwde
inc
dec
adc
in
and
jle
cmp
xchg
lea
(bad)
sbb
cmps
call
dec
add
cmc
outs
mov
and
ds
jg
fadd
sbb
cmp
xchg
jmp
test
(bad)
push
jmp
fbld
xchg
call
mov
cmps
lahf
mov
mov
popa
addr16
xor
clc
ja
inc
ds
std
(bad)
(bad)
retf
sub
enter
lods
mov
je
shl
leave
cmp
push
adc
enter
adc
xor
mov
jns
inc
push
pop
mov
mov
fcomp
inc
xor
jne
fild
pop
leave
retf
xchg
fisttp
push
mov
outs
ret
loope
mov
sub
xchg
scas
jge
(bad)
enter
(bad)
enter
mov
jno
sbb
pop
mov
(bad)
mov
scas
push
mov
pextrw
mov
sbb
cmp
(bad)
sub
rol
sub
jecxz
cld
in
popf
xchg
jecxz
shl
sub
push
jl
pop
and
not
in
push
gs
and
push
or
pushfw
push
fcomp
cwde
cmp
cld
pusha
mov
mov
icebp
rcr
xor
adc
dec
ja
es
push
or
pushw
push
(bad)
jecxz
sub
jle
enter
iret
xor
mov
push
xchg
ret
sbb
outs
inc
jp
loopne
dec
add
push
mov
inc
jg
stos
mov
movs
xor
stos
in
xchg
lds
pushf
daa
outs
ret
pusha
stos
jge
add
lock
iret
xchg
adc
pop
inc
jnp
pop
fs
out
and
xchg
cmp
imul
addr16
inc
data16
pop
cmps
ficomp
js
and
adc
fiadd
loop
or
movs
inc
mov
ret
aaa
cmc
and
rol
pop
mov
pop
jecxz
in
les
repnz
pop
inc
push
scas
bound
and
sti
test
add
mov
or
retf
xor
jmp
in
pop
dec
sbb
ja
dec
xchg
fsub
xlat
les
mov
sub
mov
dec
pop
mov
inc
addr16
stos
(bad)
out
mov
add
test
ss
push
jbe
dec
shl
clc
mov
sub
in
inc
pop
fcomp
push
jmp
jge
mov
aaa
popf
pop
or
in
dec
out
jge
adc
mov
sbb
jne
ins
mov
jmp
xchg
inc
mov
idiv
cdq
ins
in
sub
pop
cmps
rcr
xchg
push
hlt
mov
inc
push
jmp
lea
sub
pop
xchg
ret
cmps
cmp
ret
mov
dec
pop
jg
add
add
outs
and
mov
mov
pop
add
mov
xor
stos
sbb
mov
iret
addr16
shl
pop
fbld
fsubrp
inc
and
(bad)
mov
add
neg
in
cld
fdiv
lds
pusha
mov
stc
push
sbb
xchg
dec
push
out
xchg
loope
ins
sub
movs
mov
push
mov
test
int3
mov
pop
nop
jb
test
sti
cmps
div
push
mov
outs
mov
lods
adc
or
adc
cdq
dec
pop
loope
fadd
inc
inc
mov
and
ss
lds
fucomp
(bad)
mov
fnstcw
cmc
fstp
mov
pop
fild
sbb
xchg
inc
inc
dec
sbb
pop
jbe
pop
push
daa
mov
fucomi
adc
imul
gs
dec
inc
in
ja
loop
mov
(bad)
mov
popa
mov
mov
pushf
add
fst
jp
jg
xor
ins
pop
scas
int3
call
cmp
jno
fldcw
out
jmp
jb
jmp
test
mov
dec
jo
jge
inc
js
or
adc
je
xchg
cmp
std
loopne
(bad)
fst
addr16
lds
xchg
add
imul
fwait
inc
sbb
stos
mov
retf
(bad)
(bad)
arpl
push
push
mov
mov
mov
das
xchg
jle
pop
xor
jno
movs
pop
pop
pusha
retf
push
inc
loopne
cwde
mov
fld
(bad)
sub
stos
in
mov
jne
call
in
(bad)
push
pop
cld
jno
je
sub
outs
and
das
sbb
loop
rcl
int3
push
jnp
xchg
or
out
adc
sub
(bad)
sub
cmp
repnz
lds
cmp
jo
fisub
mov
or
rol
ds
sbb
cdq
mov
(bad)
in
push
shl
jne
aas
hlt
ds
rol
mov
shl
xchg
nop
ins
into
push
neg
push
(bad)
mov
xor
jle
(bad)
jmp
out
xor
pushf
xor
sub
push
js
nop
fist
in
sar
lods
push
loopne
xor
rol
sbb
hlt
das
xor
jae
adc
push
js
int
sbb
adc
push
pop
imul
dec
dec
lods
call
inc
(bad)
into
inc
ret
push
(bad)
mov
shl
xchg
cmp
cmp
cmp
fadd
es
in
and
(bad)
gs
adc
daa
cmp
mov
xchg
das
cld
retf
loopne
es
fmul
xchg
je
xchg
pop
cmp
sbb
xor
sahf
out
push
inc
mov
jnp
jge
mov
mov
sbb
cmp
mov
ret
inc
adc
mov
jb
(bad)
push
jae
jle
push
fsub
and
ja
jae
aad
jmp
pop
pop
adc
ss
jmp
cmp
sbb
add
push
sbb
fld
sub
or
add
addr16
loop
icebp
sub
cmp
aaa
adc
loopne
dec
cli
sbb
loopne
push
or
mov
or
or
lahf
adc
outs
push
lahf
je
sbb
adc
or
test
call
aas
xchg
or
xor
xor
fild
addr16
lea
test
and
xor
dec
adc
test
pop
jg
int
and
and
pop
dec
jge
cmp
jnp
pop
rcr
sub
inc
clc
mov
inc
mov
fdiv
sub
out
arpl
mov
mov
jmp
or
add
cmp
cmp
dec
mov
inc
cmp
shl
mov
jns
call
(bad)
cwde
xor
jl
add
xlat
dec
add
mulps
sar
push
repz
scas
cs
inc
in
mov
adc
xor
xor
dec
sub
mov
lock
fild
gs
adc
stc
pop
ror
retf
xchg
cmp
xchg
push
es
mov
xor
push
sub
dec
aas
jmp
cmp
ret
jns
aam
cmps
push
pop
xor
adc
inc
push
test
sbb
sbb
jnp
leave
out
shl
scas
mov
or
jnp
ret
and
cmp
stc
iret
nop
loop
jae
aam
pusha
jp
cmp
mov
pushf
pushf
ss
xor
test
or
jle
xchg
sub
inc
stos
mov
movs
inc
retf
loopne
test
data16
pop
retf
popf
add
inc
inc
inc
in
xor
push
sbb
jle
xor
cmp
xchg
ins
hlt
jnp
sbb
pop
xchg
sub
push
aas
and
mov
jecxz
stos
and
mov
mov
cmp
sbb
mov
or
ret
and
sub
or
mov
test
imul
neg
addr16
jecxz
sahf
push
cmp
inc
ds
je
movs
popa
xor
in
push
dec
stc
mov
stos
imul
mov
add
sub
mov
jnp
and
xchg
push
fcmovnb
inc
sub
imul
and
(bad)
xchg
mov
push
mov
or
ds
push
arpl
push
fcom
lods
retf
iret
push
out
js
cmp
out
xchg
mov
movs
push
js
or
xchg
(bad)
add
fistp
and
sub
(bad)
aaa
leave
jp
or
mov
cmp
adc
fistp
loopne
cdq
shl
ins
call
stc
pop
test
int3
sahf
lea
push
xor
imul
and
mov
out
inc
cld
loope
xor
push
push
xor
(bad)
fidiv
in
arpl
mov
xchg
push
in
xor
loope
jecxz
out
movs
sub
mov
pop
(bad)
shl
(bad)
jne
loop
ds
xor
cwde
cmp
add
in
xchg
and
inc
fcmovnb
test
les
sbb
jb
add
jecxz
les
dec
(bad)
dec
dec
fnstsw
les
aam
or
push
mov
sahf
sbb
jno
pop
dec
or
pop
sbb
push
inc
test
mov
jnp
adc
popa
dec
xchg
jns
fnstsw
xchg
pop
in
or
adc
and
(bad)
es
in
shl
loopne
dec
das
push
vpmaddwd
out
push
mov
ja
fisttp
pop
pop
push
movs
jmp
retf
mov
psrld
inc
stc
pop
jl
outs
add
ret
loop
shr
mov
repnz
sar
outs
add
push
loope
loope
pop
dec
add
cmp
cmp
sub
xor
je
les
icebp
sub
push
mov
imul
movs
inc
addr16
call
xor
inc
out
inc
sub
cmps
and
jns
mov
inc
xchg
push
sub
imul
adc
push
fisub
and
gs
xchg
pop
ins
sbb
xchg
enter
pop
cmp
(bad)
pop
mov
push
clc
xchg
ror
mov
dec
loope
gs
cmp
test
clc
repnz
jp
not
pop
mov
ds
sbb
adc
pop
lds
xchg
scas
mov
dec
dec
js
inc
enter
lea
xchg
mov
mov
xchg
cmps
bound
mov
hlt
je
sar
sbb
jecxz
add
xor
jne
xor
into
aam
std
push
(bad)
xlat
mov
adc
sti
and
fwait
mov
xlat
(bad)
pop
sub
sub
mov
bnd
dec
pop
or
iret
stc
jnp
movs
xor
dec
add
adc
dec
pop
inc
pop
jp
xor
into
push
retf
sbb
gs
sti
loop
and
xchg
fidivr
and
fidivr
cs
push
inc
gs
pop
cwde
push
push
movs
pop
rol
ficomp
or
out
xor
in
cmps
ds
mov
loopne
iret
loope
sub
js
dec
jne
out
lds
cmps
adc
fistp
push
loop
ret
aad
mov
xlat
fcmovnb
mov
sub
jle
pushf
cdq
jecxz
aam
pushf
mov
cmp
cmps
ror
mov
(bad)
sbb
mov
inc
mov
(bad)
xchg
mov
ds
sti
je
inc
out
shr
(bad)
sbb
xchg
cmp
push
cli
loope
cmps
pusha
sub
push
pushf
mov
jg
xor
icebp
into
adc
jo
(bad)
repz
inc
and
xchg
push
pushf
xor
jp
sub
fidiv
mov
mov
imul
fs
xchg
push
push
mov
cmps
mov
pop
outs
ficom
lods
or
(bad)
jecxz
sbb
mov
daa
mov
cld
jae
call
stos
(bad)
fadd
pop
and
ficom
jmp
pop
(bad)
fsubp
inc
mov
test
out
retf
es
jnp
dec
adc
rcl
adc
sbb
jg
pop
pop
cmp
sub
and
sahf
pop
mov
sub
movsx
mov
push
push
popa
shl
pop
jp
pop
lds
lods
dec
push
and
stc
sub
pop
ds
mov
xor
lea
leave
or
xchg
jb
mov
jae
pop
retf
std
xchg
mov
(bad)
adc
fwait
call
int
dec
cmps
ja
add
fldenv
or
mov
lods
or
sub
repz
fisttp
cmps
adc
lods
and
nop
cmp
jmp
push
sahf
test
mov
in
xchg
pop
sbb
dec
aas
es
addr16
sbb
sub
idiv
sub
fucom
xor
xlat
sahf
inc
pop
test
lds
in
dec
clc
and
leave
fsubr
mov
mov
or
mov
mov
test
out
and
outs
cmp
fdivr
jno
clc
std
mov
in
mov
jg
addr16
cmp
lea
test
mov
dec
jg
mov
dec
mov
add
cmp
sub
pop
leave
pop
out
loope
aad
xor
pop
mov
push
outs
xchg
inc
stos
sub
ror
push
xchg
daa
mov
mov
pop
pop
shl
dec
daa
test
int
mov
aaa
sub
test
and
and
out
neg
jp
adc
idiv
stos
je
les
inc
(bad)
movs
pop
jge
or
cmc
js
sbb
pop
xchg
in
sbb
movs
ror
imul
cld
mov
in
outs
cli
mov
pop
fidivr
jo
data16
pusha
cmp
mov
push
mov
test
add
cmp
fcmovne
rcl
(bad)
mov
push
icebp
xor
mov
nop
xor
sub
scas
pop
jmp
aad
add
mov
mov
pop
dec
imul
test
inc
stc
inc
inc
add
jo
adc
popf
mov
repnz
mov
out
cs
(bad)
push
mov
mov
mov
js
xchg
sbb
jg
test
jnp
add
xchg
or
xor
xchg
inc
in
add
test
jae
stc
mov
and
fld
nop
jnp
push
sbb
push
cmps
mov
jp
(bad)
repz
outs
(bad)
sbb
ins
cmc
ffree
jae
fstp
xchg
in
sub
pop
iret
jae
push
jge
mov
pop
mov
mov
mov
or
outs
sub
test
pop
and
mov
pop
pop
call
inc
fdiv
pop
sub
movs
jecxz
xor
hlt
je
or
cmp
add
push
loope
sub
jmp
pop
pop
and
sbb
jnp
inc
jmp
jecxz
out
lods
test
movs
loopne
add
sbb
jge
mov
cmc
fiadd
(bad)
mov
adc
jno
mov
das
cmp
or
movs
dec
adc
cmp
lock
cmp
push
stos
out
sub
stos
iret
enter
dec
outs
(bad)
cs
push
(bad)
imul
cmp
pop
rcl
xor
mov
or
cmp
stos
sub
sti
pop
push
mov
pop
inc
arpl
mov
scas
push
leave
mov
out
fs
jne
inc
xchg
mov
cmp
in
div
xor
ins
retf
and
iret
and
fcomip
cmp
mov
jnp
lds
aad
and
popf
cmp
idiv
dec
rcl
and
xchg
pop
push
or
loopne
ins
in
or
or
inc
mov
je
mov
add
dec
dec
and
mov
sahf
addr16
inc
xchg
xor
cwde
mov
add
loopne
bound
ds
out
jmp
mov
xor
std
jecxz
aas
add
cmp
loop
shl
pop
cld
clc
(bad)
sti
inc
mov
xor
ins
push
ins
out
(bad)
jnp
or
sub
sub
lods
call
imul
push
(bad)
fnsave
pop
pop
add
push
jle
pop
jecxz
rcr
pop
mov
xchg
(bad)
push
sbb
dec
mov
test
cmps
loope
inc
imul
push
into
pushf
or
pop
fs
loope
mov
add
loopne
stos
xchg
mul
add
fsub
dec
sti
push
xor
or
jl
into
cmp
adc
imul
mov
jbe
sbb
icebp
sub
ror
test
jae
popf
dec
fldcw
repz
mov
popf
shr
jns
lods
cmp
popf
sbb
xchg
or
mov
cmps
in
and
sbb
dec
das
jo
leave
mov
popa
in
mov
push
rol
not
hlt
fldcw
mov
dec
mov
or
mov
and
into
jmp
or
ins
jno
pop
jnp
das
cmpps
clc
in
rol
mov
rol
push
jnp
or
fs
mov
mov
cld
rol
(bad)
repz
imul
pop
pop
push
pop
mov
ss
cdq
sub
xor
push
outs
push
dec
das
js
sbb
(bad)
inc
fiadd
cmp
sahf
sub
js
or
or
clc
mov
loope
push
jae
cmps
or
je
daa
leave
pop
inc
call
jmp
mov
add
xor
fisubr
mov
jle
imul
or
sti
(bad)
bound
sbb
shl
push
enter
cmps
adc
mov
jl
outs
lahf
jns
push
pop
jmp
pop
mov
cmp
rcr
lahf
cmp
fnstsw
cs
adc
cdq
adc
fdiv
mov
or
mov
(bad)
sbb
fidiv
push
sbb
mov
add
stc
bnd
adc
add
xchg
inc
gs
cmp
dec
arpl
mov
dec
leave
mov
xlat
call
idiv
and
adc
fwait
(bad)
sub
cmp
xchg
xor
inc
in
mov
add
(bad)
out
jno
popf
or
and
gs
and
xor
inc
jmp
fisub
pop
xor
or
xlat
arpl
jne
jmp
push
shr
into
into
popa
xchg
and
add
jmp
int3
fist
xor
inc
sbb
cmp
sti
dec
mov
or
cmc
pop
jecxz
inc
push
and
xchg
mov
mov
mov
retf
lods
mov
ror
pop
bound
push
ins
icebp
xor
shl
fld
test
int
imul
sahf
push
int3
jmp
xor
(bad)
ds
push
sbb
mov
inc
xchg
nop
in
and
enter
cmps
outs
adc
xlat
and
out
lahf
mov
mov
in
jnp
mov
pop
imul
aam
xor
mov
inc
out
pop
mov
cmps
inc
scas
add
push
xchg
pusha
inc
sbb
(bad)
or
data16
imul
xor
xchg
int3
shl
mov
sub
in
sbb
add
pop
or
cmp
adc
stc
test
push
shl
pop
jmp
xchg
lods
xor
fwait
ins
fs
add
xchg
pusha
lds
enter
mov
pop
cmp
pop
sub
je
dec
lods
jge
fcompp
outs
cmp
xchg
gs
cmps
inc
stc
mov
xchg
cmp
fistp
js
retf
push
mov
xchg
aaa
push
mov
ret
and
mov
or
mov
sub
push
mov
rol
jno
in
xor
pop
arpl
cdq
cwde
push
jb
sbb
sub
sbb
mov
add
imul
mov
ror
sbb
arpl
loope
push
jnp
pop
and
iret
sar
add
icebp
xor
out
loopne
adc
pop
sbb
loope
sbb
xchg
inc
mov
aad
mov
test
or
stos
js
das
cs
sbb
dec
outs
fnclex
add
in
sub
adc
(bad)
shl
leave
fcmovu
out
pop
adc
mov
or
push
into
or
pop
aas
and
leave
pop
inc
push
icebp
mov
pop
icebp
out
dec
lahf
popa
jb
jmp
jecxz
popf
xor
dec
mov
repnz
xchg
xor
pop
cs
imul
mov
lds
inc
inc
mov
xchg
cli
enter
and
imul
pushf
adc
push
and
cmp
(bad)
ret
out
icebp
retf
jecxz
sub
add
xchg
jge
ins
mov
mov
outs
xchg
xchg
add
mov
inc
retf
(bad)
cmp
inc
fcom
push
add
push
mov
inc
jo
imul
in
cld
and
movs
fild
aaa
jecxz
movs
jle
mov
or
xlat
ror
adc
int
mov
adc
pop
ins
xchg
(bad)
inc
scas
sahf
inc
movs
sub
les
cli
inc
aad
mov
call
sbb
cmp
into
aam
push
xchg
in
mov
jg
ss
jne
lods
dec
int3
push
sub
cli
inc
push
pop
add
sti
test
xor
push
call
int
push
sbb
pop
cmp
sbb
leave
(bad)
mov
out
mov
sub
mov
(bad)
mov
cwde
scas
adc
int3
fwait
(bad)
sbb
aam
les
push
add
aad
adc
xchg
nop
sbb
sub
push
mov
daa
leave
jmp
xlat
fstp
iret
cmp
sub
fucomi
mov
pop
nop
rcr
std
add
add
xchg
sub
or
cs
and
popf
icebp
movs
fldenv
mov
fwait
push
push
mov
add
lods
sub
in
xchg
scas
fsub
jo
movs
xchg
data16
ins
mov
dec
xor
inc
sub
jl
ins
lahf
mov
sbb
or
mov
aaa
icebp
repz
outs
push
lock
dec
mov
sbb
push
inc
in
test
ror
jnp
sub
xchg
dec
arpl
aad
mov
xchg
mov
out
xchg
pop
fimul
jmp
pop
cmp
call
push
sbb
popf
sub
repnz
std
dec
out
xor
dec
pop
jnp
or
hlt
jmp
add
aam
mov
push
ja
sub
and
femms
call
scas
push
jmp
jmp
stos
inc
mov
scas
inc
es
call
out
fld
xor
loop
aad
pusha
dec
addr16
mov
stc
idiv
jmp
daa
mov
dec
out
stc
js
fwait
and
inc
push
sub
enter
sti
pop
addr16
mov
stos
adc
jae
jge
push
sub
add
dec
pop
std
(bad)
adc
dec
das
test
shl
jp
xchg
pop
frstor
cmps
or
jnp
inc
sbb
mov
repz
call
into
jno
sub
adc
jo
pop
loop
in
mov
jo
test
(bad)
mov
imul
cmc
jb
sahf
xchg
lahf
cmps
dec
in
mov
lods
adc
or
or
test
push
sahf
lods
dec
push
xchg
int3
fwait
jle
cmp
stc
call
sbb
cmc
outs
rcl
mov
and
call
in
mov
lea
dec
jae
(bad)
movs
jg
or
mov
xchg
scas
dec
aad
mov
jb
(bad)
mov
stos
hlt
rcl
lods
xchg
mov
(bad)
xchg
dec
retf
and
mov
pop
pop
daa
out
pop
jnp
(bad)
repnz
mov
adc
scas
push
into
jbe
cmp
cmp
movs
rol
cmps
inc
push
jb
in
sub
mov
adc
pop
dec
jae
xchg
xor
cs
inc
sub
jbe
movntps
mov
popf
adc
mov
movs
int3
mov
and
xchg
and
add
sub
jle
call
xor
mov
imul
lahf
push
and
inc
ins
(bad)
sub
cmp
jl
push
push
(bad)
in
inc
xchg
or
jg
mov
ret
jmp
mov
xor
sub
mov
fild
imul
mov
lods
xor
out
jo
xchg
outs
lahf
gs
push
add
setne
inc
dec
mov
push
ins
push
lds
mov
inc
sbb
or
cmps
stos
cmp
movs
push
out
sbb
jnp
cmc
or
stc
ror
add
int3
cwde
inc
lods
rcr
ds
retf
adc
out
mov
mov
xchg
shl
and
cmp
or
mov
daa
ret
mov
push
mov
add
cld
out
mov
fdivr
sbb
adc
not
gs
imul
aad
xor
fsub
push
nop
xchg
call
int3
and
sub
sahf
cmp
(bad)
std
adc
sti
icebp
fldcw
pop
mov
jo
inc
fiadd
xor
shr
(bad)
fnop
(bad)
or
call
jp
dec
mov
pop
out
das
jp
(bad)
sbb
push
outs
dec
popa
imul
inc
loope
cs
adc
jns
in
dec
mov
fcomp
dec
movs
clc
scas
es
leave
clc
jo
dec
(bad)
inc
cmc
(bad)
fidivr
mov
inc
mov
and
inc
je
xchg
add
lds
(bad)
icebp
call
inc
clc
xor
inc
ret
cli
mov
pop
push
push
fidiv
loop
add
fisubr
out
and
and
loope
jp
jp
pop
clc
inc
lock
pushw
push
jle
les
cmps
imul
inc
int3
loopne
cmps
pop
lea
pop
jb
dec
inc
das
jecxz
js
push
push
cmp
dec
xlat
jg
adc
fidivr
cmp
loope
pop
push
cmps
mov
jge
xor
or
mov
jae
jecxz
bound
cmps
add
pop
and
cmp
or
das
jnp
dec
int
repnz
mov
out
dec
ins
jne
jo
dec
sub
movs
xor
std
sub
jp
test
jbe
pop
xlat
std
rol
leave
cmps
jle
or
sahf
(bad)
push
cmp
fiadd
nop
xchg
add
adc
sti
js
imul
enter
xchg
mov
bound
stos
mov
add
enter
dec
jecxz
mov
mov
fmul
dec
sub
adc
mov
popa
adc
and
fcmovbe
iret
stc
das
mov
push
jae
loope
pop
sub
stc
aas
dec
xchg
sbb
neg
enter
rol
inc
clc
es
cmp
jnp
fsub
cli
in
daa
sub
adc
sbb
ins
je
daa
xchg
xor
push
dec
outs
shl
mov
mul
xlat
and
xor
dec
fdiv
mov
sbb
or
clc
jae
dec
and
(bad)
data16
adc
out
mov
dec
in
fistp
daa
pop
ss
aas
add
dec
jno
shl
jp
xor
sbb
mov
pop
mov
sbb
jbe
lods
lea
inc
mov
das
es
dec
hlt
cmp
div
jle
jnp
jo
sti
cmp
jmp
sbb
fstp
inc
inc
fiadd
popf
mov
adc
mov
mov
adc
loop
xor
cmp
sub
xor
inc
dec
mov
xor
(bad)
mov
popf
movs
mov
movs
shr
add
sahf
ret
ret
dec
gs
push
add
jae
mov
rcr
or
fnstcw
retf
call
sub
adc
mov
xor
pop
sbb
mov
stc
int3
pminsw
jecxz
pop
dec
loope
mov
das
dec
jle
movs
cmp
sahf
and
(bad)
fnsave
(bad)
cmp
pop
inc
inc
in
xor
adc
les
nop
xchg
pop
scas
or
adc
rol
jecxz
cmps
inc
or
not
lods
ins
cmps
enter
xchg
push
sbb
icebp
or
retf
in
push
dec
sub
fcom
repnz
lahf
fsqrt
out
mov
(bad)
jle
je
and
or
xor
or
mov
fwait
je
ret
or
fiadd
(bad)
push
cmp
(bad)
pop
mov
js
sbb
or
cli
out
mov
jg
dec
cdq
or
xlat
scas
test
stos
or
dec
arpl
nop
in
sub
inc
or
ja
popa
jns
mov
imul
fsub
(bad)
fdivr
and
dec
(bad)
push
and
je
jg
jmp
out
pop
jp
mov
and
rcr
push
adc
or
jecxz
xchg
mov
push
add
mov
fidivr
adc
sbb
cmps
fnstenv
jbe
xor
std
iret
or
imul
loop
out
cmp
xor
std
jne
push
mov
mov
mov
push
scas
out
sahf
or
lsl
movs
dec
fmul
into
dec
adc
pop
push
add
xchg
cli
push
outs
add
adc
sbb
mov
loop
mov
out
cmp
sbb
sbb
icebp
sub
(bad)
cmp
jp
loope
jbe
aam
inc
mov
fcmovne
mov
(bad)
punpckldq
(bad)
out
stos
jge
cmp
int3
retf
xor
test
dec
int
loop
mov
or
test
push
out
jecxz
cmps
(bad)
fwait
je
sub
fnstsw
mov
ja
jb
mov
pop
shr
cmp
mul
cmp
jg
test
fdivr
test
mov
push
mov
sbb
sub
sbb
dec
sahf
push
in
pop
inc
ins
jnp
fwait
(bad)
(bad)
stos
bound
ins
call
xchg
or
sar
addr16
test
jo
cwde
enter
or
int
cdq
xchg
mov
push
out
sbb
movs
addr16
arpl
push
lea
js
or
push
dec
or
inc
movs
push
and
ja
mov
movs
xchg
push
jp
stc
enter
div
mov
mov
into
adc
jne
cs
adc
and
mov
pop
dec
addr16
push
inc
inc
frstor
mov
cs
xchg
mov
mov
test
repnz
push
outs
push
add
mov
add
dec
arpl
or
ja
adc
pop
pop
fcomip
sub
jecxz
mov
sbb
mov
loope
scas
pop
arpl
cld
push
sahf
xchg
pop
ret
test
mov
cmp
mov
fstp
retf
outs
pop
mov
dec
addr16
jl
and
push
lods
xchg
sub
jl
cld
fimul
and
jg
ds
hlt
ret
push
test
and
and
in
stos
adc
and
into
dec
loopne
push
retf
les
test
add
jb
stos
adc
pop
cmp
push
adc
xor
mov
add
inc
lea
rcr
jecxz
push
test
popf
ds
pushf
jecxz
dec
xchg
lea
xchg
sub
cwde
jo
mov
or
es
mov
sub
adc
jnp
pop
sar
mov
stc
xchg
mov
fadd
les
stos
(bad)
jns
or
sbb
dec
das
jno
push
test
xor
mov
rol
jp
fsub
xor
jo
int3
jmp
cmp
data16
jg
aad
imul
dec
(bad)
cmp
jno
jge
inc
cs
xlat
bound
jae
(bad)
out
movs
iret
outs
sub
sbb
loopne
ror
aam
stc
and
add
jns
adc
jl
adc
dec
mov
scas
addr16
xlat
mov
sbb
daa
ret
jmp
add
mov
xchg
mov
mov
inc
pop
xor
push
mov
and
push
int3
add
lds
(bad)
xor
jle
jns
cdq
rcl
jge
sbb
mov
mov
cmp
rol
rcl
xor
je
xchg
xor
mov
adc
std
je
dec
cmp
dec
xor
inc
push
outs
sbb
jmp
add
out
push
push
fsubr
xchg
jb
mov
in
or
cmp
cmp
hlt
mov
fild
jno
sub
mov
out
push
aam
fcom
xlat
(bad)
in
xchg
xchg
xor
loope
jns
jo
arpl
dec
retf
xchg
jge
dec
fisttp
popf
gs
popa
pop
push
jecxz
int
cs
and
fbstp
mov
dec
cmp
xor
enter
add
mov
and
pop
outs
sub
sbb
sahf
cwde
push
push
sub
loop
cmps
stos
push
mov
jno
xchg
fwait
mov
aaa
jp
dec
push
lock
pop
jne
and
jg
inc
fcom
add
int3
xor
xchg
pusha
cmp
shl
(bad)
xchg
repz
push
fwait
ins
xchg
sti
dec
out
jge
les
sbb
xchg
leave
pop
ja
ds
sbb
(bad)
xchg
sub
je
cli
lock
fucomp
pop
xor
sar
cs
jb
std
mov
pop
sub
std
shr
mov
mov
aaa
xchg
jns
push
cmc
jp
repz
adc
clc
clc
jmp
mov
push
ret
pop
mov
add
cmp
push
or
push
ss
aas
mov
adc
xor
sbb
in
cmps
add
fistp
jb
mov
xor
jae
mov
fs
sti
hlt
jbe
push
bound
aam
std
dec
loope
push
lds
jmp
fidiv
les
cmp
imul
push
mov
not
popf
hlt
push
test
arpl
jne
mov
xor
(bad)
push
stc
cmp
dec
sbb
pop
xchg
pop
in
mov
cmp
add
adc
stos
shr
sahf
imul
lods
in
adc
ins
push
arpl
out
jge
adc
test
and
imul
add
mov
mov
push
fwait
aad
std
or
dec
add
mov
stos
scas
jp
(bad)
jno
push
or
mov
rcr
adc
jmp
add
pop
pop
sub
or
shld
cmp
inc
inc
movs
call
push
(bad)
outs
xor
mov
push
push
cmp
add
pop
inc
ins
xchg
aam
jl
pusha
test
dec
xor
dec
mov
jnp
into
mov
add
xor
ds
call
(bad)
push
bound
mov
mov
dec
fisttp
sar
push
icebp
mov
jo
daa
jle
(bad)
adc
add
pop
jbe
clc
sub
adc
test
aaa
jo
sahf
or
shl
xor
mov
rol
mov
sub
jmp
xchg
xchg
rcl
cmp
lods
repz
push
add
leave
xchg
cld
sub
jae
ret
jl
add
mov
push
jecxz
sbb
(bad)
and
cmc
cmpxchg
(bad)
pop
stos
inc
pop
cmp
call
rol
rcr
adc
push
cmps
int3
and
jp
test
cli
leave
fadd
and
push
lock
cmp
data16
in
test
adc
adc
ror
cmp
mov
and
dec
and
push
sahf
lods
aas
ja
add
adc
sub
sti
retf
dec
push
nop
jno
repnz
jmp
(bad)
(bad)
(bad)
aaa
aaa
ins
imul
pop
push
add
jmp
push
pop
or
(bad)
stc
in
bound
lea
xor
out
mov
add
add
dec
mov
(bad)
and
xlat
xchg
repz
mov
iret
test
push
dec
xchg
mov
mov
into
cmp
push
call
cli
or
lahf
int
xor
(bad)
mov
adc
xchg
icebp
pop
cdq
xchg
movs
sbb
aad
jg
leave
xor
dec
mov
mov
xlat
push
hlt
cld
and
mov
adc
dec
fisub
mov
adc
pop
jg
xchg
dec
mov
lock
sub
xchg
pusha
mov
jmp
cmp
sub
sbb
push
in
mov
sbb
pop
sbb
mov
or
in
jb
inc
pusha
lods
aas
mov
bound
aas
imul
fsub
push
mov
gs
pop
imul
sub
ror
pop
gs
out
int
mov
push
push
adc
dec
out
jmp
test
bound
inc
pop
(bad)
dec
aaa
cmps
mov
ret
in
jo
add
xor
adc
mov
sub
int3
jne
push
lock
out
add
xchg
hlt
push
rdmsr
sahf
(bad)
retf
mov
sbb
int3
loop
sub
loopne
jo
aas
push
lahf
stos
aas
rcl
xchg
adc
jmp
cs
fadd
xchg
mov
mov
mov
int3
repnz
sbb
add
jmp
int3
imul
ret
loope
mov
(bad)
repz
mov
inc
inc
sbb
add
lds
(bad)
or
add
loopne
lea
addr16
imul
es
push
mov
ja
inc
sub
in
loop
dec
mov
cmp
mov
aad
push
xor
mov
mov
push
mov
push
push
popa
mov
bound
pop
mov
int
fwait
mov
cld
rol
icebp
sub
iret
ins
push
jle
sub
cmp
repnz
fs
div
int
fcmovnbe
add
add
cwde
xor
and
scas
cs
adc
bound
mov
stos
and
pop
dec
daa
or
jmp
dec
rcr
pop
mov
xor
je
inc
mov
jmp
dec
add
repnz
jne
xor
mov
pop
xchg
jmp
sbb
xchg
jg
mov
adc
popa
lods
mov
inc
es
clc
test
(bad)
dec
xor
mov
cmc
stc
inc
jge
mov
arpl
pop
adc
hlt
(bad)
dec
push
push
scas
adc
bswap
cld
jne
xor
add
mov
pop
call
xchg
sbb
imul
lds
push
int
stos
(bad)
jo
pop
out
imul
sbb
add
int3
pop
std
or
dec
mov
scas
imul
cdq
and
sub
or
(bad)
mov
int
(bad)
clc
dec
and
pop
pop
and
mov
cmps
stos
or
sub
dec
sub
popa
sub
dec
adc
je
arpl
(bad)
mov
push
rol
push
pop
into
push
loopne
or
cmp
fwait
inc
pop
ss
loop
cli
out
dec
and
dec
xchg
ficomp
aad
xlat
push
out
jecxz
pop
pop
test
push
cli
mov
xor
ret
mov
movs
(bad)
out
(bad)
imul
push
and
clc
dec
aaa
mov
push
add
imul
or
push
sahf
jle
pusha
lock
inc
push
outs
scas
shr
sbb
pop
mov
inc
jecxz
mov
(bad)
and
retf
in
sahf
mov
jae
arpl
or
adc
push
out
and
bound
mov
aam
mov
enter
sub
pusha
sti
inc
sbb
adc
xchg
fmul
and
push
les
jmp
rol
mov
jne
pop
pop
out
popf
scas
(bad)
cmps
daa
inc
push
jmp
pop
ds
jnp
cdq
sti
or
push
inc
jg
cmp
pop
pusha
mov
shl
sbb
fld
fist
push
fcmovnu
xchg
inc
fwait
and
mov
cmp
aaa
ins
repz
inc
shl
leave
cmp
arpl
or
pop
rol
popa
cmp
je
mov
cdq
pop
inc
lock
jmp
ja
mov
jl
(bad)
jmp
repnz
jl
sbb
movs
loop
jns
xor
adc
add
add
in
push
mov
cli
pop
js
mov
dec
ror
adc
adc
test
cmp
sub
xlat
cmp
call
cwde
push
dec
jne
push
adc
inc
push
xchg
ret
out
(bad)
dec
shl
out
inc
jl
mov
mov
jb
xchg
in
xchg
adc
ret
push
and
(bad)
sbb
or
inc
xlat
arpl
push
cld
cmp
pusha
dec
nop
popf
sbb
(bad)
xchg
mov
push
ret
mov
fld
or
call
or
jmp
mov
push
push
gs
lahf
fs
and
or
add
mov
xor
inc
add
mov
push
push
fs
mov
or
cs
imul
das
dec
dec
popa
enter
lods
sbb
in
xlat
xchg
pop
leave
lock
imul
xor
sub
or
pop
and
bound
into
jbe
mov
sub
cmp
jmp
mov
push
and
mov
add
mov
push
es
xor
retf
pop
or
jge
das
test
mov
adc
mov
xor
mov
inc
inc
enter
cmp
jmp
or
add
nop
fidivr
inc
inc
je
cmp
aad
pushf
(bad)
fcomi
jno
push
cmp
lods
xlat
ins
dec
xchg
inc
data16
and
jns
dec
jnp
push
rcl
mov
adc
add
pop
test
push
ds
add
neg
sub
cpuid
jmp
rcl
push
or
or
sbb
rcl
inc
pop
push
pusha
add
adc
fs
jae
sub
test
mov
sub
(bad)
ror
sbb
outs
pop
stos
inc
or
stos
rcr
dec
xor
push
adc
adc
sub
mov
jo
xchg
scas
jbe
sahf
rcl
mov
daa
mov
aad
mov
and
xchg
pop
cdq
xor
cmp
cmp
fisubr
pop
scas
lahf
add
jge
sahf
inc
xor
inc
push
cmps
and
jns
jmp
iret
dec
ret
jmp
js
jmp
dec
repz
jmp
adc
sub
test
shl
js
mov
fild
(bad)
push
add
or
sbb
repnz
push
mov
jns
sbb
(bad)
loopne
shr
inc
es
push
mulps
sahf
push
sahf
inc
jecxz
movs
cmp
add
fs
fbstp
xor
dec
or
jo
jo
xlat
(bad)
stc
inc
cld
retf
ss
vmread
nop
rcl
jle
push
sub
cmp
jo
les
pop
mov
xchg
loopne
push
jge
sbb
pop
icebp
bswap
mov
cmp
jmp
or
enter
cli
(bad)
(bad)
cmp
cmp
loopne
adc
outs
ins
lahf
sub
sar
(bad)
out
ins
fadd
imul
cld
daa
(bad)
test
sbb
cld
mov
xchg
(bad)
aaa
(bad)
nop
div
add
hlt
dec
jns
cld
cmp
ret
cli
cwde
and
out
push
in
and
jge
ss
mov
cwde
dec
test
das
inc
pop
xchg
stos
sbb
lock
(bad)
rol
sub
push
mov
pcmpeqd
ds
xor
fistp
cmp
addr16
add
retf
and
ins
sbb
mov
ins
pop
push
lock
sub
jns
mov
retf
adc
or
fcomp
cmps
popf
mov
les
or
std
dec
and
cdq
push
lods
dec
mov
pop
mov
mov
repz
mov
mov
es
push
retf
addr16
mov
mov
push
sub
xor
or
stc
(bad)
cli
ror
xchg
es
mov
mov
sbb
xor
xlat
not
sbb
and
js
or
into
lock
hlt
jnp
call
hlt
ret
sahf
jne
fmul
ins
cmp
add
mov
dec
sbb
in
xchg
lds
sub
xchg
call
push
xor
and
je
lahf
xchg
cmp
or
xchg
cli
stos
mov
adc
fstp
push
push
xchg
ss
and
imul
push
adc
hlt
add
inc
sub
addr16
or
sub
mov
jb
sbb
jbe
icebp
adc
mov
rcr
xor
aas
sbb
cmps
add
push
imul
or
(bad)
jmp
or
mov
iret
leave
movs
jge
cs
icebp
cmp
and
mov
loopne
pop
xchg
in
mov
cmc
jno
xor
jno
leave
sub
fsubr
sbb
dec
mov
pop
ss
lds
repz
cmp
and
mov
dec
aam
pop
cs
or
fild
outs
(bad)
into
fimul
movzx
sbb
repnz
out
add
and
mov
jnp
ins
test
or
ds
out
fwait
jmp
cmp
xchg
jno
mov
push
out
inc
and
dec
movs
and
jmp
stos
push
xchg
push
and
cmc
push
jnp
cmp
xchg
xchg
ficomp
ins
mov
jl
sub
pop
mov
loopne
daa
cld
push
sbb
xor
jge
pop
add
retf
push
shl
mov
addr16
fwait
enter
xchg
dec
dec
(bad)
pop
push
imul
push
and
movs
mov
mov
ficom
dec
fdivrp
cmp
jle
jecxz
push
repnz
sbb
sbb
into
idiv
sub
xor
push
jo
enter
call
pushf
retf
pop
das
pop
rol
outs
sbb
dec
ror
pop
(bad)
ret
leave
add
cmps
adc
jmp
rol
fprem
fs
outs
js
xchg
or
retf
retf
dec
inc
jb
sub
mov
es
(bad)
pushf
fstp
std
es
mov
or
push
mov
hlt
mov
cmp
sub
mov
arpl
outs
push
mov
adc
mov
add
inc
fwait
es
retf
xor
xchg
fisubr
mov
das
pop
sub
mov
inc
cmp
retf
sub
push
lahf
pop
add
adc
test
add
cmp
cld
(bad)
ficomp
jmp
xor
pop
rdpmc
jle
sbb
mov
outs
mov
cmp
dec
xor
mov
std
int
loop
sub
hlt
les
data16
sub
loope
adc
dec
leave
cwde
cmps
fdivr
in
mov
jp
xor
adc
repz
ins
stos
cmp
pop
enter
stos
push
or
mov
push
into
addr16
call
in
pop
ret
xor
dec
jmp
sub
push
icebp
mov
add
lahf
bound
cwde
jmp
nop
mov
pop
rcr
mov
repz
dec
jae
pop
dec
push
(bad)
in
mov
add
push
or
xchg
cdq
bound
inc
ja
or
ficomp
js
adc
outs
and
into
fistp
or
adc
mov
mov
cld
icebp
mov
add
cwde
push
fimul
mov
cmp
cli
leave
mov
xchg
jge
ins
sbb
call
inc
sbb
cdq
mov
cs
dec
and
ret
push
cwde
cmp
adc
jns
and
or
ja
or
jge
dec
dec
mov
sub
sahf
sub
dec
imul
mov
push
xchg
iret
cmp
ds
and
outs
les
mov
pop
data16
fcomp
or
jae
call
(bad)
xchg
mov
sbb
push
ds
inc
ss
mov
dec
push
xor
ror
jns
or
(bad)
jns
xchg
inc
cmps
mov
inc
mov
setbe
cmc
adc
mov
lea
xor
pop
imul
sbb
push
mov
loopne
stos
mov
or
jecxz
lods
add
inc
cmps
mov
imul
add
sbb
jne
cmps
pop
(bad)
push
rcl
or
fisttp
cmps
or
xlat
pop
mov
sub
dec
scas
test
xchg
mov
icebp
test
xchg
xchg
sub
loopne
je
push
in
sbb
sahf
int
scas
lea
xchg
adc
mov
inc
jbe
aam
or
addr16
call
and
xlat
mov
push
mov
es
fwait
xor
pop
cmp
push
xchg
ror
xchg
out
lahf
lea
pop
xchg
mov
sbb
lea
inc
add
out
jge
cwde
in
dec
lea
in
mov
loope
outs
call
outs
jae
gs
popf
(bad)
out
fisttp
or
jg
iret
mov
cwde
jmp
fsub
sub
inc
mov
icebp
fld
ror
shr
les
fwait
jno
test
mov
dec
stos
pushf
mov
inc
sbb
jge
sbb
fst
mov
or
xchg
sub
mov
xchg
sub
and
add
or
add
mov
jo
push
(bad)
cmp
ss
(bad)
xlat
jmp
jmpw
mov
push
push
pushf
cmp
shr
lods
xchg
pop
cmp
dec
mov
in
push
cdq
xchg
jl
dec
mov
(bad)
sti
out
or
jb
sbb
fistp
mov
jne
movs
mov
and
dec
daa
mov
mov
idiv
popa
in
lock
pop
xchg
and
adc
cli
jle
dec
push
mov
jne
imul
jo
and
sub
(bad)
ins
sub
imul
mov
xor
call
pop
lahf
mov
xchg
jae
cmps
ret
test
mov
nop
xchg
inc
test
xchg
xchg
xchg
push
jmp
cmp
mov
pushf
or
inc
push
mov
sub
sub
mov
jb
call
sbb
mov
jmp
lahf
jge
fist
cli
sbb
sub
push
rol
gs
outs
inc
stos
inc
(bad)
xlat
cli
ficomp
sahf
ficom
iret
fs
inc
push
mov
pop
loop
(bad)
mov
lods
or
or
lods
outs
dec
adc
lahf
sbb
jb
and
xor
mov
sub
xlat
dec
sub
out
inc
icebp
sbb
loop
lds
retf
dec
pop
in
dec
add
les
ds
xchg
retf
in
pop
ja
(bad)
mov
leave
push
jecxz
push
int3
pop
jle
imul
imul
xchg
push
inc
int3
ins
xor
jno
(bad)
out
jmp
xchg
xchg
add
inc
or
xchg
stos
sub
aam
clc
add
add
sar
mov
aad
cmps
leave
add
sub
mov
call
hlt
lahf
mov
data16
mov
icebp
ret
add
jnp
hlt
push
aaa
mov
out
jp
push
test
jns
and
and
and
popf
clc
stos
fsubr
and
retf
repnz
call
scas
pop
or
mov
sub
xchg
sbb
cmps
pusha
dec
jmp
repnz
ins
jmp
fisttp
arpl
outs
push
dec
repnz
rcr
stos
sahf
jb
mov
out
int
mov
cmp
xor
push
ss
cmp
dec
mov
push
mov
inc
addr16
mov
push
push
ss
cs
test
out
daa
cmps
pop
pop
push
fnsave
adc
and
dec
push
sub
mov
loopne
jno
and
jecxz
lods
ror
cmp
(bad)
imul
cmc
jno
out
shr
mov
mov
adc
sbb
lahf
test
gs
mov
mov
mov
cdq
fidivr
or
push
retf
in
jae
jg
fimul
sahf
fcmovne
push
stc
push
jo
aad
bnd
rol
pop
das
test
xchg
daa
rol
int
sbb
push
dec
pop
(bad)
stos
imul
mov
dec
adc
ja
cmp
xlat
sub
es
adc
jle
scas
arpl
sar
mov
cmp
movs
mov
push
push
and
imul
jmp
stos
aam
int3
adc
dec
xor
outs
push
push
pop
int
ds
test
std
nop
pop
addr16
mov
or
mov
js
loopne
mov
movs
jp
movs
lock
scas
rcl
fs
or
enter
repnz
cmc
pushf
cmp
jno
jecxz
pop
rcl
push
sub
mov
in
inc
inc
outs
sbb
lods
cmps
xchg
add
addr16
sahf
push
push
lock
mov
rol
idiv
loopne
addr16
jmp
mov
outs
in
sbb
in
retf
aaa
in
call
shl
mov
fwait
add
fiadd
mov
loop
xlat
test
mov
ds
aam
fcmovnu
in
xchg
sbb
in
dec
loop
mov
dec
push
cmp
movs
mov
jno
fs
sbb
or
lea
(bad)
cli
shr
sub
jmp
out
dec
add
enter
xchg
sub
mov
ins
in
pop
loopne
jg
mov
out
daa
jbe
mov
js
and
sbb
dec
jb
jbe
pusha
inc
cmp
xchg
xor
pop
push
or
sub
add
int3
mov
fwait
jp
xchg
pop
fist
sub
test
outs
mov
inc
leave
push
stc
jo
add
pop
cmps
movs
mov
adc
cmp
xor
inc
int
jb
mov
aad
ret
stos
lahf
loope
aas
xor
addr16
out
rol
outs
cmps
mov
mov
lds
aas
fwait
iret
sbb
nop
aaa
mov
loope
sbb
ret
adc
loopne
mov
dec
out
or
shl
push
jns
ins
sub
cmp
xor
mov
xor
dec
mov
adc
in
or
mov
icebp
fadd
imul
inc
sbb
sahf
add
ins
pop
rcr
fwait
cli
inc
jmp
jno
retf
imul
pop
push
jle
imul
adc
xchg
popa
jp
repz
mov
and
int
push
stc
push
dec
lods
sub
cmp
jg
shr
lds
pop
(bad)
sti
cmp
pop
in
mov
push
fs
fcomp
inc
adc
lahf
sbb
imul
loopne
xor
mov
or
vpmacsww
cs
add
pop
inc
mov
mov
jl
(bad)
or
mov
mov
out
popf
inc
sbb
cwde
add
cmovo
retf
in
jne
ins
pusha
pushf
sbb
out
xchg
xor
sub
sub
mov
sub
sub
cmp
dec
push
mov
mov
adc
mov
xchg
adc
call
or
retf
inc
dec
enter
cmc
pushf
mov
mov
in
jle
sub
pop
in
xor
popa
and
in
add
inc
jne
sub
cmp
or
rcl
and
cmps
mov
hlt
or
or
loope
xchg
jbe
xor
xor
dec
cdq
adc
fimul
push
jne
std
retf
mov
mov
add
mov
(bad)
pop
or
int3
in
jbe
stc
es
push
not
scas
jmp
imul
dec
xor
cmps
(bad)
dec
rol
jnp
fidiv
arpl
mov
out
les
xor
mov
mov
push
dec
xor
fs
fiadd
fs
out
in
pop
dec
jge
lock
js
jae
adc
cwde
mov
test
loop
xor
push
mov
jns
mov
push
mov
in
in
sub
test
sbb
cli
ds
add
push
mov
ins
or
rcl
cmp
(bad)
scas
cmp
push
adc
pusha
inc
mov
sbb
mov
jg
sub
fldcw
int3
cli
mov
or
ja
jmp
and
popa
pop
push
mov
(bad)
or
lea
(bad)
out
shl
push
jmp
mov
xchg
push
push
dec
repz
or
out
imul
jo
cmp
cli
mov
adc
loopne
out
lods
or
outs
sbb
xchg
cmp
push
ins
mov
mov
inc
mov
mov
test
jmp
das
and
call
cmp
out
jge
inc
adc
cdq
and
xchg
sbb
addr16
jnp
sar
cdq
cdq
mov
mov
and
out
and
jp
cs
cmp
xchg
xchg
loopne
inc
mov
dec
stos
popf
inc
xchg
(bad)
ds
in
sub
adc
cmp
sahf
ret
or
inc
mov
cmp
jecxz
push
int
ds
data16
into
xchg
pop
push
or
add
retf
adc
sub
jmp
pop
daa
pop
pop
scas
xchg
sti
cmp
jbe
mov
sbb
cmps
cmps
lea
sub
xlat
add
aas
inc
ja
or
popf
add
fmul
lea
or
jne
jecxz
push
pop
mov
push
jle
xchg
jno
push
jle
sub
lock
cld
or
sub
test
ds
jo
clc
xor
out
pop
dec
rol
add
xchg
dec
sub
jne
jb
pop
pusha
sbb
das
jp
sbb
gs
fisub
push
jg
xor
sub
push
icebp
push
lods
cmp
aam
rcr
jg
jne
(bad)
ja
cs
cmp
mov
push
cmps
fucomp
mov
out
test
iret
jmp
xchg
mov
push
inc
adc
or
sti
xchg
inc
xor
ror
addr16
adc
into
mov
or
pop
stos
cdq
(bad)
not
outs
xor
or
retf
pop
inc
push
mov
jne
mov
and
out
sub
jno
xchg
out
sbb
pop
xchg
xchg
repz
push
(bad)
loop
xchg
sar
sahf
in
lods
mov
mov
(bad)
inc
jl
jo
push
cmp
sub
cmp
imul
cmp
fcmovne
sbb
(bad)
loop
fidiv
mov
repnz
cdq
or
sub
inc
sub
cwde
fisttp
push
cld
or
cmp
imul
mov
call
xchg
jl
pop
fisub
int3
sub
xor
adc
lods
loope
scas
mov
jecxz
arpl
jno
pop
push
out
and
cwde
loopne
icebp
fld
and
inc
sbb
ss
dec
mov
popa
fld
adc
add
add
inc
cmp
mov
or
push
dec
xor
cwde
retf
push
aam
bound
sub
sub
xchg
push
int
add
addr16
pop
test
sbb
jo
inc
jle
dec
clc
cmp
mov
inc
mov
cmp
fistp
in
enter
cmp
mov
int
dec
sub
fcomp
mov
mov
xchg
ins
mov
loopne
imul
out
cld
sub
rcl
(bad)
mov
ja
jae
in
push
add
ja
into
sbb
mov
adc
jb
pop
pop
cmp
pop
push
adc
jnp
hlt
mov
je
cmp
cwde
sar
jp
mov
repnz
xchg
fstp
or
xor
add
lea
stos
fs
xchg
movs
nop
leave
jl
cmps
mov
jbe
add
cmc
jae
cmp
pop
add
repz
mov
fwait
popa
loop
fdiv
shl
popf
std
out
vpaddw
mov
not
cmps
jl
fst
cdq
pop
cmp
retf
pop
xlat
leave
stos
ret
cmp
add
stos
xchg
mov
lods
rcr
jg
ret
mov
iret
repnz
xchg
and
test
js
or
add
add
or
add
aaa
aam
inc
inc
data16
leave
pusha
loopne
xor
push
pop
push
outs
push
jnp
push
addr16
dec
data16
cmps
mov
dec
mov
aad
add
fsubr
ins
repz
pushf
iret
mov
pop
xor
pop
out
es
push
xchg
ds
mov
add
(bad)
into
jl
mov
rol
jp
imul
mov
pop
and
stos
aam
add
int
adc
shl
(bad)
aad
and
jge
bnd
adc
in
jne
jmp
mov
push
sbb
jp
movs
out
or
jmp
into
sub
and
out
retf
mov
dec
and
mov
pop
daa
cld
mov
das
les
hlt
jl
(bad)
fcmovb
cmp
dec
outs
jb
mov
adc
(bad)
xchg
mov
push
scas
dec
sti
mov
or
inc
xchg
mov
fcomp
push
mov
cli
jne
push
mov
push
aaa
out
movs
mov
mov
add
js
add
adc
or
je
call
inc
mov
bound
shr
lea
int
add
shl
fldcw
mov
sahf
push
jle
movs
xor
jge
int
xchg
push
pop
sub
pop
dec
xchg
bound
or
mov
scas
idiv
sbb
lahf
sub
mov
pop
sbb
inc
add
inc
mov
inc
test
cmp
xor
add
aas
std
std
lods
push
in
sbb
xor
pop
jle
push
xor
in
push
dec
mov
fdiv
pop
clc
cmp
adc
jp
dec
scas
test
arpl
pushf
adc
mov
fdivr
adc
out
and
sub
dec
pop
jle
cmps
jnp
add
mov
(bad)
hlt
aam
(bad)
sbb
inc
adc
into
dec
mov
or
xor
scas
add
push
(bad)
jg
test
push
mov
bound
enter
std
hlt
dec
out
pop
mov
xor
mov
movs
xchg
cwde
pop
repnz
mov
or
test
sub
sub
and
pop
cmps
clc
or
cs
pop
in
xlat
call
add
push
add
not
xor
lods
mov
mov
add
lahf
add
xlat
xchg
and
cmps
mov
pusha
sti
pop
ins
adc
xor
mov
call
and
test
add
dec
dec
xchg
jb
pop
fidiv
fnstsw
pop
cwde
pushf
mov
das
dec
xchg
test
jl
fimul
xlat
jecxz
sbb
cwde
inc
lock
retf
xchg
jmp
call
(bad)
stc
les
out
jl
(bad)
xchg
movs
pop
shl
sub
mov
loopne
fsubr
out
fidiv
(bad)
push
mov
jb
xchg
or
iret
das
xlat
imul
mov
jmp
sub
lock
jge
xchg
adc
fbstp
jbe
popa
loopne
sub
ret
ss
or
inc
xor
int
inc
jnp
sub
fwait
jbe
adc
fdivr
fsubr
ret
mov
sbb
push
pop
xchg
(bad)
mov
add
cmp
icebp
ror
fwait
or
mov
shl
jne
mov
in
mov
iret
shl
ss
outs
xchg
out
nop
push
ret
and
mov
mov
mov
and
inc
mov
(bad)
dec
(bad)
mov
sar
fbld
cmp
inc
imul
and
xor
ds
xchg
or
rcr
pop
sub
addr16
cld
cmp
push
sbb
fld
cmc
(bad)
adc
and
(bad)
jmp
movs
inc
mov
inc
pop
imul
push
fwait
sub
in
imul
aad
mov
(bad)
xlat
mov
dec
xlat
xor
lds
and
iret
mov
cs
or
shr
sti
xchg
inc
xchg
ja
movs
mov
add
aam
sub
mov
push
dec
xor
mov
jecxz
cmp
loop
push
cmp
push
mov
call
cmp
push
pop
mov
dec
sub
hlt
lds
inc
xchg
add
aas
jl
cmp
dec
xchg
fwait
lods
shl
loope
mov
out
inc
or
movs
outs
cmp
dec
imul
popf
mov
xor
loope
adc
cmps
hlt
test
ss
aad
sar
inc
sbb
and
fld
sub
repz
and
cli
dec
xor
call
xchg
jo
push
pop
ror
mov
mov
inc
sbb
enter
jno
xor
sub
stc
mul
sar
cwde
dec
outs
clc
push
and
mov
push
repnz
icebp
shr
stos
retf
xor
jle
data16
mov
pop
xor
pop
in
sahf
mov
mov
fld
mov
jbe
push
test
mov
test
sbb
ja
outs
xchg
jnp
imul
push
lock
pop
int
into
jb
in
jnp
fld
bound
jbe
mov
sbb
sti
dec
popf
xlat
pusha
cmp
loope
aam
lods
push
mov
data16
aad
dec
adc
movs
mov
fwait
jae
shl
cmovnp
pop
aaa
leave
pop
mov
aad
jg
or
dec
mov
jns
or
cmp
jle
push
scas
mov
nop
add
das
ds
fs
and
xchg
sbb
leave
(bad)
mov
pusha
cmc
pop
rol
adc
pushf
jns
mov
pop
imul
(bad)
mov
repnz
push
out
mov
and
jl
cmps
stos
fs
jge
(bad)
jmp
scas
and
mov
mov
pop
push
push
lods
dec
fadd
adc
adc
xor
push
adc
pop
xor
movs
dec
xor
cmp
scas
popa
ror
pop
inc
lds
and
push
mov
and
or
imul
jg
and
pop
or
std
fild
mov
jns
in
pop
push
pop
adc
inc
test
(bad)
aas
fbld
(bad)
(bad)
ins
js
out
push
out
dec
inc
aam
xor
ins
pop
in
cmp
mov
xchg
mov
sbb
xor
pop
jae
cdq
lds
call
add
add
jp
xor
pop
outs
sar
(bad)
fmul
(bad)
xor
test
cmps
shl
xor
ss
nop
fisttp
ret
aaa
cmps
(bad)
pop
pop
pop
jmp
lds
sti
aas
rol
jno
icebp
push
test
or
cmp
mov
xor
sub
add
loop
mov
xor
inc
sbb
mov
adc
xor
xchg
in
sub
xor
bound
daa
std
jno
mov
cmp
mov
mov
fcmove
mov
xchg
icebp
retf
xchg
das
movs
mov
xor
cmp
mov
lahf
scas
inc
mov
mov
jno
popf
adc
stc
test
test
dec
ror
cmp
mov
inc
and
out
mov
pop
xchg
mov
and
sbb
pop
pop
imul
pop
jg
jo
in
jl
cmp
sub
jns
test
cmp
dec
sub
or
sub
je
imul
jb
sbb
mov
cmps
push
and
and
cdq
js
mov
inc
mov
enter
mov
fmulp
neg
mov
push
mov
or
sub
xchg
xor
xor
iret
cs
dec
cmps
push
sbb
and
or
add
and
cmp
push
push
or
aas
jmp
xchg
call
in
bound
popf
sub
ret
in
lods
mov
mov
xchg
test
es
mov
sub
leave
out
add
mov
mov
aam
aas
push
jl
(bad)
gs
aam
ret
pop
adc
or
ffreep
pop
popf
sbb
adc
adc
and
leave
pop
sub
out
sub
lahf
sbb
sbb
cli
mov
push
lods
je
(bad)
jge
mov
int
mov
push
movs
sbb
inc
push
jmp
test
js
imul
clc
arpl
push
retf
fld
xchg
and
jo
lds
xchg
push
dec
xchg
retf
dec
push
mov
clc
xlat
push
sub
aad
jno
(bad)
out
inc
sub
rol
outs
mov
sub
lods
push
rcl
mov
and
cmp
jmp
jo
sub
repz
inc
jmp
add
lock
sbb
sar
fsub
sbb
inc
repnz
cmp
xchg
xor
dec
mov
gs
aaa
in
(bad)
xor
inc
es
into
sub
or
ret
mov
xchg
pop
out
daa
test
push
arpl
sbb
cmp
cld
inc
pop
sub
loope
sub
sbb
(bad)
cwde
(bad)
pop
loope
stos
adc
movs
add
xor
push
ds
xlat
push
push
jno
cmp
aam
repnz
(bad)
pop
sub
bound
les
or
jno
std
jmp
jmp
lahf
and
xor
cli
aam
jno
pop
push
shl
or
ins
shld
fcomp
fstp
(bad)
push
fisubr
push
test
inc
out
adc
cld
outs
adc
imul
xor
sahf
nop
add
call
sub
push
int3
xor
jle
div
rol
sbb
lea
icebp
xchg
bound
add
push
into
sbb
stos
adc
mov
call
js
adc
(bad)
xor
fcom
stos
(bad)
sbb
push
jg
add
int
int
mov
ret
ja
iret
xor
scas
xchg
jp
jno
movs
mov
sbb
push
loopne
mov
inc
dec
mov
mov
cmp
arpl
xchg
imul
cmp
or
xchg
mov
dec
mov
aas
pop
adc
scas
mov
pop
shr
and
sbb
mov
xchg
jns
sub
xor
fsub
popf
and
mov
mov
cmp
jns
js
(bad)
lock
push
ins
xchg
fmul
sub
test
jle
push
cli
(bad)
retf
mov
pop
pop
and
and
(bad)
adc
inc
or
push
push
fwait
call
int
push
mov
lahf
loopne
int
or
adc
jmp
dec
xor
and
xor
or
inc
dec
dec
jl
push
inc
sbb
jge
pop
mul
into
mov
mov
(bad)
push
imul
stc
pop
adc
loope
ss
sahf
jecxz
outs
jb
lods
dec
fmulp
das
ds
jg
hlt
aad
xlat
push
movs
retf
and
mov
push
and
dec
ret
je
pop
jmp
mov
push
retf
xchg
ret
pop
aam
jmp
aaa
cmps
ret
xchg
cli
stos
mov
sbb
xchg
pop
test
sbb
jg
sbb
xchg
push
dec
push
nop
and
mov
cmps
jmp
sbb
sbb
ins
arpl
in
push
inc
dec
mov
dec
(bad)
mov
test
push
out
out
xor
and
ins
push
cmps
cmp
int3
outs
ss
mov
or
cdq
adc
enter
cmp
pop
sub
xchg
lds
push
(bad)
out
push
add
xchg
ret
mov
mov
cmp
inc
(bad)
mov
or
in
mov
jge
xor
jmp
ins
ins
lock
xor
dec
mov
ret
fisub
ja
mov
xor
or
mov
cmps
enter
cmps
sbb
stos
lods
xchg
inc
dec
test
jmp
ja
push
sar
in
push
pop
sbb
test
or
call
bound
mov
pop
and
mov
aas
fistp
sub
add
mov
int3
inc
shr
jp
add
push
xchg
add
mov
in
std
fdiv
scas
fcom
add
ins
popf
xchg
add
inc
es
leave
fcomi
xchg
scas
movs
pop
into
xor
sub
fcomp
test
add
int
push
outs
or
push
jp
inc
and
das
adc
je
push
add
ror
sub
lds
stc
xor
mov
jmp
adc
push
sbb
mov
xchg
adc
add
dec
mov
cmp
push
jmp
inc
pop
mov
mov
imul
iret
and
mov
aam
fnstenv
mov
jb
push
cmps
inc
fnstcw
add
mov
and
jp
in
rol
sbb
lods
pop
xor
jns
pusha
call
adc
push
push
sub
inc
push
cmc
jo
push
mov
jbe
and
xchg
cmp
push
and
mov
jle
pop
repnz
popf
sub
adc
mov
fwait
out
loopne
ins
into
loopne
jecxz
xchg
sub
(bad)
sbb
aad
adc
shr
inc
sub
in
cdq
mov
push
dec
push
and
pop
mov
shl
dec
retf
push
mov
mov
cmp
mov
jns
lahf
and
sub
cmp
jnp
inc
rol
mov
adc
mov
dec
lods
in
or
dec
sub
mov
lahf
or
xor
jns
push
xor
push
dec
cmc
stos
jmp
fdivr
inc
and
inc
adc
push
daa
loop
jecxz
outs
leave
inc
cld
add
imul
imul
ret
inc
sbb
aad
movs
icebp
sbb
cmps
jl
pop
lock
test
loope
mov
into
sbb
mov
mov
sbb
inc
in
add
mov
jecxz
sub
add
dec
push
inc
adc
ins
test
cwde
mov
mov
push
loopne
dec
leave
ss
rcl
add
outs
jl
jmp
push
jno
popf
push
fisttp
inc
jg
imul
xchg
dec
retf
xor
(bad)
cmps
ror
enter
dec
(bad)
(bad)
std
iret
dec
leave
add
(bad)
in
sti
sub
xor
ja
test
jl
fimul
in
mov
push
xor
push
call
data16
pop
cmp
lahf
jns
not
add
pop
sbb
int3
xchg
(bad)
dec
pop
sub
jae
or
dec
xchg
xchg
sub
ja
sar
popf
add
adc
dec
(bad)
xor
fsubr
sub
jbe
dec
xor
push
ret
mov
mov
pop
or
xor
les
mov
gs
addr16
jg
in
jmp
mov
add
loopne
pop
scas
fistp
jae
outs
and
sub
jmp
rcl
aad
arpl
sahf
inc
or
sub
inc
mov
in
or
lods
enter
inc
gs
sbb
(bad)
pop
xchg
mov
data16
cmp
mov
fiadd
shl
add
xor
dec
lods
xchg
in
cld
jle
in
pop
ficomp
outs
cwde
jmp
or
popf
fnsetpm(287
inc
in
xor
xchg
jmp
clc
xchg
in
jae
pop
cmp
pop
icebp
int
cdq
sbb
cli
xor
sbb
push
jno
imul
and
loop
call
test
sbb
pop
sbb
fistp
and
pop
loop
retf
or
sar
inc
das
cmp
sti
dec
test
push
lds
fs
jmp
rcr
add
(bad)
hlt
out
fiadd
and
mov
in
out
xchg
mov
or
repz
bound
jbe
hlt
lds
push
cld
cmp
ret
std
outs
add
dec
mov
test
arpl
lods
shl
fs
pop
test
mov
dec
fldenv
adc
loope
sub
push
jo
add
adc
cmp
jle
adc
clc
or
enter
inc
dec
scas
or
dec
push
xor
cmps
popa
rcr
mov
pop
jmp
rol
jo
jne
mov
sti
adc
stos
rcr
call
push
js
adc
cmp
jle
sub
ins
popa
or
dec
fsub
dec
cld
scas
aaa
xor
xchg
outs
sbb
mov
in
xor
xchg
or
mov
cmps
dec
add
dec
test
je
(bad)
icebp
jge
cld
push
inc
daa
daa
jge
mov
cmp
mov
ja
add
mov
jp
ret
xchg
inc
pop
mov
mov
xor
nop
adc
adc
mov
rol
xchg
imul
xchg
adc
mov
test
xchg
ss
jae
sbb
cmps
movs
jno
jo
cld
xor
push
and
lea
cmp
pushf
pop
sub
and
mov
push
gs
pop
lds
aad
pop
out
lods
mov
dec
push
push
or
xor
loopne
(bad)
mov
stc
cmps
and
jmp
mov
adc
sahf
push
rcl
sub
jae
add
mov
icebp
mov
jns
in
mov
xchg
fldcw
pushf
jg
or
xchg
pop
int
or
mov
in
cdq
mov
cdq
(bad)
sub
outs
les
sub
xor
mov
es
stc
repz
adc
mov
and
pop
push
push
ss
jo
xor
pop
xor
xchg
dec
retf
in
ins
(bad)
in
fisub
fs
jge
aad
clc
jge
xchg
and
jecxz
inc
(bad)
cmps
mov
sbb
test
xchg
retf
pop
pop
scas
sub
repz
std
sub
pop
push
jge
add
adc
and
cmps
loopne
jge
je
sub
test
xchg
shr
jne
movs
push
and
stos
mov
adc
cdq
(bad)
aas
test
(bad)
pop
mov
mov
xor
sbb
nop
mov
cli
xchg
push
mov
lds
mov
repnz
cmp
or
push
xchg
(bad)
mov
int
add
icebp
(bad)
cdq
ss
or
cli
jns
lds
pop
mov
int
std
jmp
scas
xor
sbb
xchg
pusha
test
xchg
dec
sub
and
ins
mov
fld
icebp
push
idiv
cmp
jne
cli
mov
mov
jae
test
jecxz
aam
inc
int
icebp
push
aam
cmp
add
loop
add
xchg
add
xchg
jge
scas
add
cmp
cmp
xchg
cld
pop
test
test
jmp
mov
jmp
sub
test
mov
and
(bad)
push
sbb
inc
sbb
rcl
idiv
fild
mov
jmp
and
jnp
mov
out
(bad)
ror
mov
jns
jge
fs
add
in
repnz
mov
mov
xor
popf
std
in
pop
arpl
das
dec
pop
std
repz
adc
daa
and
push
and
or
push
jecxz
shl
ds
mov
mov
movs
push
cdq
add
aam
movs
test
cmp
pop
cs
mov
inc
mov
pushf
inc
fwait
das
jno
add
xor
sbb
imul
mov
movs
jo
retf
fwait
cmp
les
test
(bad)
hlt
into
lods
pop
mov
call
add
add
(bad)
stc
ins
xchg
xchg
mov
sbb
ds
pushf
pop
dec
add
inc
mov
pop
das
loop
ret
push
cmp
jne
test
xor
sbb
xchg
add
mov
popa
cmps
jb
sub
repz
pop
into
sub
(bad)
fwait
rol
cmp
sahf
pop
call
lds
cwde
xchg
jno
(bad)
cmp
es
xor
mov
adc
out
xchg
sub
push
(bad)
in
cmp
jb
stos
pop
xchg
push
pop
test
enter
jns
mov
jno
jmp
dec
cdq
call
mov
add
sub
pusha
ds
push
cdq
and
jb
xchg
pop
test
pop
call
lods
pop
(bad)
nop
scas
jmp
int
nop
adc
pop
inc
jnp
inc
lds
das
push
leave
adc
or
imul
cli
xchg
push
out
scas
mov
loop
das
sub
pop
test
shl
xchg
enter
stos
sti
mov
gs
fcomi
adc
enter
or
inc
push
loope
mov
push
div
es
sbb
mov
jo
outs
and
jne
and
shl
add
push
ret
scas
mov
test
xor
not
leave
mov
test
arpl
call
or
dec
ficom
jo
mov
test
aas
ins
xor
fmul
test
xor
dec
and
ins
call
idiv
inc
fucom
push
out
xchg
fldenv
inc
xor
mov
sbb
inc
aam
lods
(bad)
mov
sbb
out
cmp
rcr
(bad)
into
es
push
fild
je
cmp
mov
movs
js
jp
cmp
cmp
ins
ins
xchg
out
xlat
adc
or
jp
jne
jo
jl
shl
shl
and
dec
mov
jg
in
jno
jle
lods
aaa
inc
xor
fucomp
pop
icebp
mov
pop
pushf
fstp
hlt
out
das
inc
int
and
popf
fisttp
ja
pushf
xchg
loope
add
leave
rcl
jl
and
add
push
dec
adc
cwde
mov
sbb
mov
fist
mov
les
pop
int
fcmove
(bad)
dec
pop
not
sub
mov
push
xchg
jge
loop
call
(bad)
xor
in
push
aam
cmp
pop
popa
sbb
aam
repnz
mov
xchg
es
fld
cmp
test
add
fs
lahf
sub
out
daa
in
sbb
ins
sub
inc
or
enter
call
loop
in
retf
sbb
inc
ja
sahf
sar
bound
js
fmul
mov
push
push
call
icebp
loopne
lea
mov
mov
fisub
inc
mov
cmp
ret
dec
dec
inc
mov
fwait
inc
mov
sub
shr
mov
outs
xchg
rcl
add
fild
arpl
loopne
push
xchg
rcr
inc
add
stos
jbe
hlt
sub
jnp
test
fisub
movs
inc
nop
call
(bad)
jge
icebp
lods
sbb
cwde
mov
xchg
adc
mov
push
fbld
pusha
into
retf
das
sub
jns
in
rcl
jo
cmp
div
push
add
inc
cmp
lods
ins
cdq
gs
sbb
mov
xor
(bad)
push
scas
scas
mov
push
jb
cmp
pop
mov
mov
add
ds
dec
inc
inc
loop
jbe
pop
adc
stos
test
cdq
jecxz
cmp
in
enter
(bad)
fwait
pop
push
scas
faddp
ret
out
(bad)
rcr
call
mov
sub
movs
clc
rcl
and
inc
push
pop
pop
and
push
cmp
cld
push
and
lea
jl
xchg
cmps
xchg
sbb
test
addr16
mov
add
xor
scas
test
or
or
pop
mov
cld
rcl
inc
movs
adc
mov
dec
stos
fist
or
scas
adc
inc
xchg
into
jo
cmp
sub
jecxz
and
pop
mov
dec
movs
add
cdq
(bad)
dec
cmp
sti
(bad)
aaa
xlat
sub
out
and
test
pop
aam
cld
push
xchg
adc
mov
cmps
jge
call
das
mov
cmps
jmp
xchg
sti
out
xchg
xchg
das
pop
push
js
sub
inc
sbb
lock
jmp
sti
mov
cmp
aaa
adc
icebp
push
inc
push
pop
mov
pushf
dec
xor
inc
lds
adc
lds
or
lock
inc
jno
cwde
mov
jle
sti
mov
mov
xchg
imul
mov
hlt
ficomp
mov
jecxz
lahf
jb
or
jae
out
out
clc
in
(bad)
dec
lea
adc
dec
xchg
pop
mov
mov
ror
sub
sub
popa
ds
(bad)
sbb
xor
loop
sti
push
(bad)
in
push
and
adc
in
sbb
cdq
ins
sub
fwait
jbe
retf
loope
inc
fadd
dec
les
cs
xlat
pop
and
loopne
jmp
cmp
or
jecxz
adc
cmp
mov
rol
jle
sbb
xchg
mov
sbb
cmp
ss
popa
xchg
cmp
push
push
push
mov
mov
lock
nop
sbb
pop
in
jmp
push
stos
inc
inc
gs
out
mov
inc
push
ror
mov
lock
push
addr16
push
pop
es
add
pop
popa
nop
aas
call
push
ret
mov
ss
gs
mov
sub
call
push
addr16
jb
lds
and
mov
fst
mov
xchg
push
add
test
cmp
sbb
test
fidivr
repnz
scas
add
adc
cli
mov
xor
dec
mov
push
(bad)
inc
cmp
push
fcom
(bad)
xor
mov
enter
repnz
xor
push
and
loopne
rcl
xor
cmp
pop
ss
lds
mov
or
adc
mov
imul
in
jl
lahf
mov
and
ret
repnz
xor
sbb
hlt
loop
mov
ja
in
je
pop
fcom
(bad)
cli
test
out
fdivr
fs
pop
fld
xchg
mov
loopne
test
mov
jne
rcl
stc
xchg
fiadd
fcomip
pop
mov
and
mov
(bad)
cmp
xchg
and
rol
or
or
ret
or
psllw
jecxz
cdq
xchg
push
loopne
sbb
push
shr
sub
hlt
shr
xor
retf
push
jmp
test
xor
push
cmp
les
(bad)
pop
cmps
add
retf
repnz
xor
sbb
jae
leave
(bad)
mov
adc
sub
push
aas
call
cmp
sbb
adc
inc
sub
inc
jno
(bad)
clc
and
adc
fsubr
inc
jns
in
or
jo
(bad)
jnp
mov
cmp
push
mov
mov
mov
xchg
push
dec
dec
pushf
push
push
fcomp
add
es
gs
lods
fadd
stos
xchg
jno
and
pop
arpl
mov
jns
sbb
hlt
mov
push
cmp
cmp
mov
jns
sub
sbb
push
jne
push
sar
popa
scas
fnsave
and
push
repnz
fstp
jl
jb
clc
and
cli
aas
sub
mov
inc
mov
xor
into
fnstsw
or
iret
jle
call
pushf
adc
in
jb
inc
lahf
add
int3
mov
call
xor
sub
jno
movs
pop
call
inc
fstp
dec
xchg
jmp
push
cmp
enter
mov
jmp
(bad)
iret
js
inc
ret
xor
push
fsub
adc
jae
int3
adc
cmc
rol
jns
cmp
nop
jne
aam
int3
adc
xchg
and
rcr
inc
xchg
int3
sub
xor
les
in
scas
jne
and
lock
je
loopne
test
adc
push
mov
pop
dec
jg
je
pop
mov
jmp
mov
sub
mov
lods
jbe
dec
(bad)
push
jno
xor
fisttp
lods
test
pop
pusha
std
cld
ficomp
ss
push
shr
arpl
sub
sar
ret
in
lods
adc
popa
mov
jae
xchg
sub
mov
mov
mov
ss
inc
mov
loopne
or
rcl
mov
dec
mov
popf
icebp
and
mov
jns
pushf
add
out
mov
jbe
cld
adc
add
push
push
push
ror
add
jmp
adc
jecxz
pushf
push
pop
sub
stos
adc
data16
loope
vpsraw
jo
xor
inc
clc
push
and
inc
jae
xlat
inc
rcl
je
icebp
inc
pop
call
mov
jne
mov
or
scas
xor
mov
sti
fs
dec
mov
add
jmp
clc
cmp
stc
cld
out
mov
mov
jae
xor
aaa
inc
icebp
pop
movs
mov
dec
out
outs
outs
jae
mov
add
nop
push
push
fdiv
in
sub
xchg
aad
mov
dec
pushf
js
sub
in
jb
and
lods
jnp
(bad)
pop
add
cmps
dec
cmp
mov
pop
loope
sub
fucomip
and
push
(bad)
jp
cdq
add
shl
test
repz
bound
rol
mov
arpl
dec
mov
dec
rcl
or
adc
fsub
and
sbb
fcomp
js
dec
adc
(bad)
jge
sub
inc
in
in
jle
push
call
xchg
adc
pop
cld
movs
add
ja
cmps
mov
push
sbb
mov
retf
push
push
ss
icebp
jbe
fild
popf
dec
push
test
rcl
sbb
jb
jo
(bad)
out
cmps
and
scas
shl
sub
jo
inc
aam
retf
and
icebp
out
test
sub
aaa
xor
pop
push
mov
clc
dec
mov
mov
js
idiv
pop
aad
xlat
jl
mov
cmp
repz
xchg
sub
test
xchg
cmps
pop
adc
mov
pop
(bad)
push
jb
popf
ja
jb
aad
xchg
repz
xor
test
es
mov
stos
pop
pushf
in
fs
sub
pusha
sti
or
jecxz
adc
mov
shr
repnz
shl
fwait
mov
jnp
jnp
test
in
cmp
dec
mov
(bad)
push
xlat
arpl
and
push
add
fsub
out
mov
bound
(bad)
addr16
pop
cmp
in
jle
stc
sbb
inc
adc
sub
(bad)
ss
lahf
push
out
cmc
mov
mov
(bad)
and
fild
dec
jmp
ja
push
jg
inc
mov
add
push
jmp
call
in
dec
rol
out
(bad)
sub
jbe
mov
cwde
popa
cmp
popa
loop
mov
ret
push
es
jge
mov
jecxz
add
fbstp
add
lock
jl
(bad)
pusha
or
int
push
or
mov
shl
mov
mov
mov
push
pop
lods
inc
inc
loopne
add
pop
pop
idiv
mov
out
lods
mov
xor
xchg
mov
mov
ret
xchg
stos
push
bound
or
lods
xor
lods
mov
jno
sub
gs
sbb
cmp
sar
mov
xor
sbb
dec
pminub
cli
ror
imul
ins
mov
jo
(bad)
test
cmp
and
jl
jae
daa
dec
pop
and
mov
test
loop
(bad)
push
mov
(bad)
test
das
dec
mov
imul
jp
inc
mov
or
xor
cmp
mov
push
bound
xor
(bad)
push
jb
mov
daa
xchg
push
pop
pop
or
pop
adc
ret
cmp
out
jmp
fnsetpm(287
jl
jle
sub
push
mov
add
pop
cli
aam
adc
int3
xchg
in
imul
in
mov
cmp
jg
mov
and
mov
xchg
mov
or
bnd
add
es
jmp
and
adc
mov
(bad)
enter
je
push
or
mov
lock
cmp
xchg
push
jge
cwde
dec
jmp
sub
test
xchg
push
imul
into
shl
mov
mov
pushf
push
aaa
adc
or
out
jge
aam
push
mov
and
inc
and
cdq
test
jl
nop
bound
(bad)
dec
dec
aas
xchg
retf
dec
mov
rcl
sbb
add
in
ss
fcmovnb
cmps
fs
mov
leave
sbb
pop
or
sbb
ret
not
ficom
popf
cmp
stos
cwde
outs
mov
not
mov
mov
cli
std
jnp
xchg
(bad)
fdivr
and
scas
xor
div
pop
push
neg
dec
adc
outs
shl
sub
inc
push
mov
retf
aaa
pop
dec
imul
mov
mov
aad
mov
mov
imul
scas
push
icebp
mov
mov
mov
out
aaa
pop
inc
jl
jnp
std
adc
adc
cwde
adc
popa
jmp
test
jecxz
cmp
pop
(bad)
jno
jns
(bad)
ins
imul
xor
das
pop
(bad)
adc
dec
shr
aam
adc
xor
inc
jo
and
or
jns
mov
sub
jg
lods
sub
jne
pop
fmul
in
or
pusha
das
mov
add
out
std
mov
movs
cli
lods
lea
cmp
pop
scas
or
in
or
and
add
inc
cmp
and
cdq
mov
data16
fisub
mov
inc
aaa
imul
std
lods
mov
xchg
jne
push
push
inc
sbb
jecxz
xchg
or
inc
or
pop
push
dec
xchg
outs
push
mov
inc
daa
pushf
int3
pop
adc
ror
aaa
xlat
inc
call
cmps
or
push
dec
ja
mov
inc
stos
dec
das
cmps
cli
fstp
imul
pop
push
cwde
mov
cli
sti
int
inc
mov
into
clc
xchg
mov
lods
call
xor
pop
and
jl
repz
lea
sti
cmp
dec
xor
push
mov
stos
mov
pop
mov
xchg
aad
fsubr
adc
add
xor
shl
mov
aaa
sbb
fcmovnb
and
and
clc
sub
push
cld
test
sbb
xor
sahf
into
add
push
xchg
inc
dec
mov
dec
xor
cmp
sahf
fisubr
adc
sbb
scas
cwde
fist
ss
jo
jne
clc
mov
jb
push
inc
push
sbb
daa
dec
mov
sub
lea
dec
adc
xor
and
or
(bad)
jge
pop
mov
xor
xchg
pop
push
lods
cmps
aam
or
mov
sahf
stc
xchg
je
(bad)
loop
inc
push
imul
and
xchg
imul
cs
mov
mov
mov
push
stos
sti
cmp
fcmovnb
out
jge
mov
mov
mov
adc
mov
(bad)
out
sub
adc
jl
cs
push
mov
cmp
imul
push
mov
and
xor
adc
dec
jl
daa
adc
and
mov
(bad)
jg
jp
clc
jb
aam
lahf
lock
dec
pop
dec
jns
out
or
int
pop
mov
lahf
push
cmp
mov
das
cmp
arpl
sub
data16
sbb
aas
out
cld
std
into
lock
pop
aad
mov
fwait
daa
in
or
or
xchg
test
cmp
mov
xchg
leave
cmc
ins
push
fwait
xor
ins
dec
xor
das
pop
mov
pop
(bad)
out
push
push
jecxz
in
jnp
neg
mov
xor
sub
sub
imul
lods
inc
bound
push
jmp
mov
jnp
icebp
dec
mov
adc
jmp
dec
loopne
int
and
push
(bad)
mov
cmp
pop
rcr
lods
das
in
in
pop
and
dec
push
jmp
cmps
in
pop
sbb
movs
repz
aam
jp
push
fwait
mov
jmp
cs
xor
dec
imul
mov
stos
push
fistp
int3
outs
or
cwde
inc
in
push
mov
jecxz
out
repnz
ret
lods
sar
pop
(bad)
push
xchg
fst
xchg
pop
ins
jecxz
pop
push
inc
adc
cli
mov
inc
bound
add
adc
hlt
retf
inc
mov
cmp
or
pop
out
lahf
fild
outs
mov
icebp
pop
sbb
jmp
call
ins
dec
pop
and
dec
imul
dec
into
sti
cmc
clc
faddp
mov
enter
mov
fs
imul
mov
xchg
mov
sti
inc
dec
or
sub
in
pop
sbb
(bad)
aad
(bad)
dec
aam
cmp
push
jge
loopne
shl
test
inc
push
lods
mov
jge
cwde
mov
pop
cmp
cmp
push
movs
jl
push
add
xlat
jns
mov
pop
pop
sbb
bound
addr16
in
ds
(bad)
or
aaa
mov
xor
shr
sbb
jo
shl
sub
pop
out
adc
hlt
dec
jmp
or
and
out
xchg
loope
mov
jne
aaa
sbb
xchg
mov
test
hlt
inc
lahf
rol
std
sub
int
pushf
stos
dec
mov
sbb
add
pushf
out
clc
sbb
mov
cmp
sub
dec
(bad)
js
jae
mov
mov
or
fmul
pop
popw
pop
add
mov
inc
pop
aam
mov
add
mov
add
mov
in
jne
lock
sub
inc
test
mov
mov
jmp
sub
and
sbb
lahf
push
cmp
shr
mov
addr16
popa
shl
pop
aad
cld
or
popa
xor
xor
test
cmpneqps
add
pop
js
fsubr
pop
jmp
das
pop
cmps
mov
sbb
(bad)
and
into
jmp
or
out
sub
(bad)
mov
jo
lea
pop
stos
add
xor
rcl
xor
pop
xchg
mov
mov
mov
jmp
push
sar
sbb
jge
jg
aas
cdq
rcr
mov
push
mov
sbb
add
pusha
sbb
mov
mov
lds
jno
imul
add
xor
int
imul
xor
fbld
fwait
pop
cmc
(bad)
xchg
fild
call
lock
adc
dec
fwait
loope
pop
pop
push
jo
call
lock
stc
or
aas
sub
popf
fstp
je
iret
jnp
inc
pop
push
sub
(bad)
adc
in
cmp
cmp
jmp
(bad)
retfw
inc
ret
loop
jg
sub
cmp
sbb
addr16
push
or
pop
ret
cmp
test
cli
jns
stos
pop
in
test
ins
add
je
stos
loope
pop
retf
pop
int3
mov
and
push
cwde
mov
fwait
iret
adc
jmp
fwait
retf
xchg
ret
int
mov
push
sbb
xchg
dec
imul
ins
inc
jmp
mov
shl
ror
test
imul
push
mov
mov
jo
mov
add
cmp
jo
repz
dec
call
or
les
lahf
js
xor
shl
xor
cmps
xor
ss
(bad)
cmps
sbb
sbb
jno
adc
push
imul
stc
aas
shl
mov
cmc
call
pop
mov
pop
jbe
push
out
lods
imul
and
add
sub
add
push
mov
or
add
push
cmc
xchg
into
add
jecxz
lods
icebp
fnstcw
jge
cmp
pop
xchg
std
gs
aaa
repnz
popf
icebp
mov
xor
test
mov
sub
and
in
imul
xchg
sbb
inc
xor
imul
(bad)
stc
adc
sar
jne
or
pop
mov
jmp
add
adc
addr16
(bad)
bound
pop
push
das
and
inc
mov
add
dec
popa
xor
jmp
out
(bad)
clc
mov
into
sbb
push
cli
jbe
hlt
add
cmp
mov
adc
sub
sbb
cld
and
inc
pop
mov
adc
pop
out
rcr
mov
ret
lock
stos
stos
jge
clc
lds
loop
stos
xor
dec
je
adc
push
(bad)
test
xchg
mov
dec
je
leave
mov
clc
(bad)
and
push
movs
in
jbe
inc
dec
and
jle
ins
or
and
push
fcmovbe
push
cmp
xor
lods
outs
ins
push
inc
xchg
test
mov
mov
sub
mov
dec
mov
xchg
ds
outs
jle
shr
shr
push
mov
add
pop
inc
rol
fild
leave
inc
out
fs
pushf
xor
test
jne
cs
or
jmp
sbb
jnp
inc
push
xor
repnz
ret
add
mov
out
inc
repz
cmp
mov
std
je
je
(bad)
test
jns
retf
xchg
mov
lea
mov
out
lods
pusha
shl
jmp
and
cmp
arpl
jge
and
push
arpl
push
sbb
aad
mov
rcr
stc
xchg
hlt
pop
pop
in
cdq
pop
push
aad
pop
inc
jle
cmp
xor
push
mov
pop
gs
popa
xchg
pop
repz
ss
pop
ror
xchg
xchg
out
mov
pop
inc
add
dec
out
mov
mul
aam
aam
pop
add
lods
and
adc
test
call
xor
adc
xchg
test
and
mov
jl
pop
les
rcr
in
stos
sub
push
push
add
clc
mov
xor
adc
jecxz
or
and
sar
sub
jo
mov
lds
aad
push
pop
jp
dec
es
jg
and
xchg
shl
fld
in
jne
cmp
je
dec
jbe
mov
sub
push
jmp
outs
or
mov
sub
popf
cs
jg
pop
push
ror
jl
xchg
ja
jno
add
movs
or
jns
jmp
adc
outs
mov
out
xor
fld
jno
ret
aas
mov
or
outs
mov
mov
cs
shr
cli
int3
xchg
fwait
jmp
cmp
cli
push
inc
jb
ja
xchg
lods
cmps
mov
aam
mov
pop
(bad)
js
push
fwait
(bad)
shr
sub
inc
or
and
xchg
hlt
pop
xor
das
inc
out
aad
dec
lods
and
inc
pop
into
xchg
(bad)
cmp
jle
sub
int
mov
call
push
stc
mov
adc
(bad)
fnstsw
enter
dec
cmp
sbb
mov
adc
mov
mov
mov
or
lea
xor
jne
xor
xchg
push
xlat
mov
lods
and
call
mov
mov
stos
pop
fbstp
mov
jb
lock
dec
add
cmps
and
jle
fs
jae
icebp
cmps
je
pop
std
sub
sub
push
lock
cmp
lds
xor
push
inc
in
pop
in
or
cmps
mov
mov
test
mov
mov
cmp
stos
fs
ins
lock
add
les
adc
data16
out
scas
mov
mov
fidiv
cmp
loop
push
jo
lods
mov
loop
mov
push
sti
cmp
jo
shr
mov
push
xor
sub
cs
and
dec
xor
jmp
mov
(bad)
pop
je
loopne
cmp
data16
ins
test
fldcw
in
cli
xor
and
xor
cmp
jnp
call
cdq
neg
test
cmp
push
sub
stos
cmp
popa
outs
lods
scas
dec
xchg
pop
and
sbb
out
mov
add
push
pushf
push
or
pop
or
retf
push
div
enter
inc
or
xor
add
cmps
int
cmp
jnp
xchg
out
je
lea
mov
pop
jo
sti
sbb
cmp
sbb
scas
out
es
(bad)
push
mov
adc
pop
push
xor
cmps
ret
push
popa
movs
aam
pop
mov
jmp
push
outs
sub
mov
std
retf
clc
cmp
les
add
pop
adc
stos
inc
inc
xchg
jbe
mov
jecxz
aam
sahf
or
push
and
jne
add
fwait
pop
icebp
movs
stc
mov
sub
in
and
outs
mov
adc
jmp
scas
lock
pusha
cdq
shl
dec
pop
xor
mov
add
mov
shr
cdq
adc
into
inc
jl
pushf
push
push
shr
or
pushf
ins
cwde
mov
jo
xchg
and
sbb
shr
pop
addr16
adc
popf
jl
loope
pushf
out
in
pop
xchg
popa
sub
add
jns
jmp
fist
mov
outs
outs
sub
cmp
retf
frstor
mov
dec
rcr
jg
add
ret
sbb
jecxz
adc
push
int3
sahf
push
sub
mov
adc
pop
xor
(bad)
leave
(bad)
and
dec
adc
popf
cld
icebp
push
scas
inc
movs
pop
sub
aaa
test
add
pop
in
dec
jge
jp
or
js
dec
cmp
pop
dec
add
add
movs
js
cmp
adc
and
(bad)
fild
and
inc
mov
daa
adc
jmp
idiv
in
pop
add
call
pop
(bad)
fbld
add
data16
sub
or
mov
pop
add
mov
es
movs
lea
push
xlat
inc
retf
jb
mov
jns
aaa
mov
cli
sub
pop
mov
sbb
and
scas
popa
ins
dec
rol
mov
xchg
pop
adc
out
cwde
or
adc
add
or
aad
push
add
add
call
xchg
mov
xchg
in
imul
in
enter
cmp
cmc
int3
add
retf
es
mov
pop
sub
mov
jmp
pop
call
jl
dec
mov
js
jg
adc
hlt
ret
dec
pop
inc
pop
inc
mov
fucomp
mov
cdq
xor
loop
or
push
xor
mov
jns
and
fbstp
mov
arpl
xor
(bad)
in
scas
jnp
pop
test
sahf
sub
inc
std
xchg
sub
xchg
lods
popf
dec
shl
not
xor
les
aam
loopne
push
mov
adc
ficom
mov
add
call
adc
add
adc
ja
pop
fstp
sub
ror
push
lods
fs
cmps
push
mov
push
sbb
dec
js
mov
jmp
add
sbb
shl
nop
bound
xor
cs
and
and
repz
push
sar
and
aas
shr
and
mov
inc
xor
sbb
adc
push
aas
arpl
cmps
pop
jno
dec
xchg
pushf
stos
jl
aaa
adc
add
rdtsc
push
mov
mov
ficom
mov
push
scas
mov
cmp
mov
call
stos
jne
adc
adc
xchg
retf
stos
int
stos
loop
xchg
pop
pop
dec
mov
jmp
in
or
add
ret
(bad)
in
pop
xor
mov
push
sar
shl
push
cs
dec
enter
jb
stos
or
dec
dec
xchg
push
cmp
xlat
fbld
jmp
ds
sbb
jmp
lds
cs
scas
lods
ret
jb
lahf
xchg
cmp
test
or
mov
push
das
and
pop
test
push
fst
push
dec
loop
lods
sbb
loope
dec
xchg
lds
int
lock
scas
sub
mov
fs
xchg
faddp
add
push
cmp
pop
and
push
lock
jnp
ret
jmp
mov
rol
faddp
rcl
mov
jle
fs
jbe
gs
ds
dec
mov
addr16
push
sahf
pop
sbb
icebp
mov
xchg
add
fsubr
sbb
mov
rcl
mov
dec
add
and
repz
sbb
ror
mov
ins
mov
mov
adc
xor
jp
mov
pop
adc
test
call
call
cmp
inc
jl
sbb
(bad)
pop
push
lea
push
jp
adc
retf
pusha
inc
sbb
lods
mov
sub
fsub
dec
std
push
mov
sbb
imul
sub
pop
dec
call
xlat
sub
popf
dec
jnp
retf
dec
jo
cmps
movs
fucompp
cmp
(bad)
repnz
fmul
push
cwde
mov
(bad)
aad
enter
cmp
push
mov
cmps
pop
dec
aad
loope
adc
and
das
lods
imul
neg
sbb
pop
mov
es
xchg
fidiv
test
jnp
out
arpl
gs
loopne
jmp
jno
lds
retf
(bad)
sbb
mov
mov
fstp
dec
je
add
ret
adc
mov
inc
fimul
push
test
loope
inc
out
mov
pop
sbb
pop
ret
inc
popf
adc
lea
nop
inc
jno
ja
push
aaa
jge
nop
pop
mov
js
mov
not
xchg
jecxz
aas
ins
push
sbb
mov
and
jnp
(bad)
pop
es
mov
xchg
shl
jmp
bound
jnp
ds
jg
dec
mov
sub
outs
outs
imul
xchg
lods
mov
and
pusha
push
stos
movs
aas
call
repz
test
movs
xchg
or
pop
jnp
gs
cmp
push
pop
mov
retf
pop
scas
test
pop
aaa
xchg
pop
cmp
ss
sar
js
sbb
punpckhbw
inc
pop
int3
ret
inc
fs
inc
inc
stc
jg
bound
dec
imul
fisttp
mov
mov
imul
clc
cld
inc
sahf
push
ss
dec
xor
jae
sbb
push
lea
mov
iret
push
mov
sbb
call
jno
call
movs
mov
inc
mov
cld
mov
inc
adc
push
shr
loopne
jb
in
mov
int
test
call
pop
jmp
add
mov
test
jbe
xor
xlat
rcl
es
xchg
xchg
fist
in
xor
push
lahf
fmul
push
scas
inc
dec
push
jnp
ins
inc
aad
arpl
pop
pop
clc
inc
cmps
das
mov
sub
and
push
hlt
sbb
push
or
dec
std
mov
pushf
and
iret
sar
add
xor
pop
fs
repnz
or
mov
not
and
pop
fimul
out
in
and
pop
add
sub
pop
and
adc
cld
pop
fbld
cdq
adc
xlat
add
sub
sahf
inc
push
mov
lods
idiv
gs
mov
imul
int
xor
mov
iret
mov
fmul
clc
cmp
or
enter
jp
fstp
push
retf
push
popf
sbb
pop
setb
xchg
icebp
jmp
leave
cs
jno
in
shr
daa
imul
pop
and
out
cmps
mov
mov
ins
or
das
ds
(bad)
push
pop
add
leave
js
int
pop
xlat
push
stc
repnz
gs
jg
sbb
cmps
shl
xor
add
xchg
lods
push
in
cli
icebp
pushf
add
sub
xchg
jge
retf
ins
xchg
(bad)
in
and
xor
cmp
cmp
fmul
dec
add
and
xor
(bad)
jmp
sar
in
sub
in
shr
jp
sbb
push
out
(bad)
loope
std
dec
xchg
js
fsubp
cld
loop
or
stos
and
pop
xchg
jmp
push
and
iret
jl
mov
xchg
pop
sub
dec
push
sub
lahf
fld
xor
push
js
push
cmp
xchg
pop
aas
movs
test
jno
leave
jns
sub
jp
xor
inc
mov
mov
in
cmp
scas
jmp
xchg
cld
stc
xchg
inc
lock
gs
pop
add
div
cmp
imul
gs
cmp
pop
fcom
lahf
iret
mov
dec
and
aaa
dec
(bad)
in
jle
leave
adc
add
add
fiadd
aam
aam
sub
mov
and
(bad)
cmps
mov
inc
inc
cmp
jp
enter
adc
mov
mov
in
popa
(bad)
inc
popf
rcl
std
icebp
test
adc
fnop
sbb
je
lods
cmp
xlat
cs
lods
sub
push
pop
jp
ss
(bad)
jle
xor
call
cmps
aaa
mul
dec
int
cmp
scas
ja
add
pushf
pop
or
fistp
cs
gs
inc
lods
push
mov
sbb
cdq
std
cmp
xchg
push
ficom
or
jge
outs
dec
jae
ins
dec
or
pusha
xor
ror
rcr
int
in
repnz
cmps
retf
jl
fisttp
popa
fidivr
fld
std
cmp
inc
inc
cmp
inc
sbb
mov
jmp
pop
movs
fidiv
pop
push
push
jns
xchg
pushf
inc
and
movs
mov
sub
push
mov
data16
cmp
rcl
and
xchg
push
in
jns
or
in
stc
clc
bound
retf
mov
xor
mov
cli
and
mov
loopne
sbb
int3
outs
stos
mov
enter
mov
pusha
mov
sahf
push
int
mov
or
sub
and
xor
outs
mov
xlat
push
popa
dec
mov
sbb
mov
and
sahf
lea
mov
retf
lahf
mov
adc
mov
cmp
rcr
out
pop
adc
mov
int3
arpl
jle
fldcw
add
pop
aam
xor
(bad)
jp
ins
outs
lahf
sahf
repnz
and
dec
mov
(bad)
mov
pop
inc
shl
inc
mov
scas
fistp
daa
push
jo
push
ins
ins
jae
add
out
call
fsub
ds
add
fldenv
int
add
xchg
shl
lods
adc
out
mov
pop
test
fldl2t
cmps
push
ins
inc
sbb
les
cmp
jg
jae
xchg
int
cli
ds
pushf
mov
movs
ins
mov
and
dec
aas
shl
aaa
dec
ja
test
lea
sbb
in
cmp
sbb
pushf
scas
add
inc
fs
sub
cmps
popa
hlt
fcmovb
add
arpl
out
add
pop
inc
jb
push
mov
scas
cmps
lahf
jbe
mov
test
add
pop
pop
push
pop
or
mov
jbe
das
dec
cmp
jbe
mov
clc
ins
int
push
jb
push
fisttp
(bad)
jmp
loope
nop
inc
outs
(bad)
or
in
cmp
ficomp
cmps
push
repz
add
lahf
call
mov
pop
sub
sub
mov
xlat
pop
(bad)
fwait
mov
aad
inc
mov
(bad)
in
test
push
cmc
div
adc
cmp
pop
loopne
cmps
jp
in
cmovne
add
adc
stos
pop
fbstp
aas
es
ds
jo
aas
arpl
sti
and
shr
retf
in
add
sub
dec
push
xchg
out
test
ins
pop
jmp
xor
inc
clc
stc
mov
or
cmp
jmp
rol
xor
jge
test
inc
fldenv
push
aam
std
lds
jmp
fisub
push
push
nop
out
dec
mov
leave
(bad)
jae
xchg
inc
sbb
iret
js
bound
pop
xor
and
outs
push
pop
add
cmp
sbb
or
int3
jmp
lds
jmp
lahf
fisttp
sub
cwde
(bad)
mov
cmp
retf
adc
pusha
xor
xchg
ja
call
add
enter
repz
pop
test
fld
cmp
jne
int
lahf
sbb
shl
cmp
dec
xchg
nop
jle
cli
test
pop
cli
mov
pusha
cs
push
das
das
sub
cmps
iret
(bad)
pusha
add
jns
test
jl
mov
call
popa
add
jle
push
(bad)
pop
sub
push
out
jno
xchg
fdivr
xchg
cwde
mov
shl
rcl
mov
mov
adc
jg
fst
lock
int
sub
and
repnz
cmp
mov
and
aaa
jge
dec
adc
adc
push
iret
cli
sub
sub
scas
jle
mov
daa
jmp
inc
(bad)
mov
sub
into
cmp
dec
dec
sub
push
jmp
mov
jmp
std
adc
movnti
into
inc
mov
sbb
pop
cmp
xchg
push
fs
ret
sbb
femms
test
lods
jns
test
pop
sbb
cli
fild
iret
lahf
push
xor
in
jle
adc
scas
popw
pusha
and
push
inc
pop
out
pusha
xchg
push
test
retf
out
pop
xchg
mov
fldenv
daa
mov
mov
retf
aas
or
pop
jp
fstp
jae
jg
dec
add
mov
div
aaa
pusha
int3
sub
push
adc
jb
or
ds
ins
lds
(bad)
(bad)
xor
retf
in
xor
xchg
retf
call
xchg
test
arpl
mov
out
mov
(bad)
les
int3
xchg
xchg
cmp
sbb
pushf
adc
mov
int3
call
call
dec
xor
std
iret
aaa
or
pop
lock
mov
or
add
mov
in
mov
aaa
lahf
cmp
pop
sbb
jae
xchg
fsubr
mov
retf
ja
push
inc
loope
sbb
or
cwde
push
popf
jnp
in
jno
cld
push
push
mov
mov
xor
ror
(bad)
jb
jle
ins
jae
enter
popa
sahf
inc
mov
mov
outs
aaa
div
loop
ins
jno
jl
fs
fbstp
js
add
retf
mov
or
add
inc
dec
xchg
int3
cmp
cld
test
imul
cs
out
pop
xchg
ret
pop
in
jle
mov
xchg
retf
pop
cmps
adc
adc
(bad)
sbb
pop
add
outs
sbb
ja
mov
mov
icebp
push
std
int
jecxz
xchg
mov
int3
jp
js
lahf
cmp
lock
pop
mov
cmps
or
lods
pop
inc
fsubr
mov
ret
mov
lds
cmp
cmp
das
inc
(bad)
lock
cmp
pop
in
loop
mov
dec
and
(bad)
cmps
adc
(bad)
gs
arpl
shl
mov
mov
addr16
mov
stc
jae
ins
in
cmp
mov
cmps
aaa
jno
xor
test
sti
add
bnd
shl
jg
jmp
mov
sbb
call
imul
repz
es
mov
pop
retfw
out
(bad)
test
daa
sub
test
pop
jae
fs
push
mov
xor
int3
xor
in
dec
and
fidiv
ret
ins
dec
fisubr
aad
shl
in
cmp
iret
and
hlt
mov
(bad)
add
inc
imul
stc
add
xchg
call
inc
ficomp
xor
sbb
lds
push
test
and
cmp
and
add
das
inc
mov
xor
xchg
or
mov
jp
inc
add
shr
pop
adc
in
dec
inc
xor
(bad)
je
xchg
dec
jl
outs
cmps
or
pusha
pushf
mov
xor
loopne
pop
(bad)
loope
outs
das
out
push
cmp
pop
or
push
mov
mov
xor
xor
sti
cmp
loope
loopne
test
std
push
retf
dec
sbb
pop
push
in
mov
mov
push
jno
add
or
icebp
mov
shr
loop
out
and
pop
test
push
ins
leave
pop
or
lea
mov
je
imul
test
outs
or
jle
mov
pop
rcl
into
xor
add
jo
add
stc
bound
daa
inc
or
pushf
stos
mov
dec
aas
in
cdq
jnp
add
mov
(bad)
xchg
shl
mov
sbb
inc
jno
cli
jecxz
(bad)
mov
addr16
sub
push
int3
sub
dec
loop
jae
pop
mov
jecxz
in
push
imul
clc
jns
das
loopne
stc
mov
(bad)
mov
popf
(bad)
or
lea
dec
inc
inc
cli
and
sub
pop
stc
xor
mov
mov
or
pop
dec
(bad)
retf
mov
in
jae
std
add
jo
inc
inc
push
cmp
(bad)
aas
inc
xor
pop
xchg
inc
popf
inc
sub
jae
mov
call
mov
je
mov
push
mov
dec
jb
cmp
lds
or
jmp
leave
jo
fcom
sub
pop
or
out
cmp
and
add
dec
jp
adc
xor
jae
popa
data16
jb
in
dec
cmp
dec
mov
adc
sbb
mov
fldcw
call
jae
test
nop
inc
push
outs
rcr
imul
dec
xor
dec
fndisi(8087
pop
test
push
scas
mov
and
mov
jns
jmp
outs
mov
add
jge
cmp
aam
call
sub
pop
pop
push
bnd
sbb
icebp
(bad)
jae
std
std
lds
fst
sub
sbb
inc
adc
sub
into
add
mov
fwait
data16
aad
mov
dec
add
mul
icebp
scas
xchg
hlt
fmul
and
je
pop
sub
sahf
push
mov
in
in
seta
fistp
sbb
sti
es
fisub
adc
push
fiadd
jo
leave
xor
out
mov
bswap
xor
or
xchg
daa
test
cmc
mov
arpl
out
or
or
cli
cmp
inc
fild
call
cmp
dec
mov
jae
cmp
enter
and
pop
add
(bad)
adc
mov
pop
xor
leave
fucomip
push
sub
jns
mov
jno
cmps
xchg
add
jl
jb
fsub
xor
lods
retf
mov
pop
into
jbe
cmps
xor
mov
rcr
push
test
pop
mov
cmp
cmp
icebp
push
and
xchg
dec
cli
out
push
ret
dec
mov
lahf
jle
fld
mov
sahf
jns
or
mov
sbb
ficom
pop
sbb
test
and
pop
ins
imul
push
mov
sub
push
fstp
sub
mov
je
pop
mov
iret
aaa
test
push
inc
(bad)
push
int3
cmps
xor
fdiv
out
dec
outs
hlt
scas
leave
adc
mov
and
sahf
xchg
and
ror
fsub
pusha
je
cmp
fs
dec
out
outs
add
mov
test
add
and
stc
push
stc
push
repz
pop
mov
jnp
push
dec
nop
imul
cmc
mov
add
adc
inc
dec
and
mov
fwait
lea
xor
cmp
jge
test
int3
ja
cmc
add
pop
(bad)
jle
dec
adc
dec
pop
jecxz
loopne
jns
in
ret
sbb
ins
xchg
and
sahf
cwde
jns
mov
bound
mov
add
add
adc
ret
push
out
adc
jp
inc
add
sbb
dec
inc
fidiv
sub
jne
mov
call
retf
pop
jmp
sub
mov
cmc
nop
arpl
fisub
cmp
test
jns
sar
mov
inc
popa
out
cmp
xchg
jno
dec
mov
xlat
test
ja
pop
xchg
push
mov
movs
lods
jmp
xchg
dec
push
jge
fcomp
mov
mov
out
sub
les
dec
mov
push
shl
or
ds
pusha
js
xchg
data16
or
mov
ins
ret
pop
dec
mov
push
add
pop
nop
ins
cmps
aad
leave
fs
test
inc
dec
or
cmps
cmc
xchg
xchg
xchg
and
aam
add
push
data16
jb
lahf
mov
daa
(bad)
frstor
data16
and
mov
sub
mov
or
adc
mul
ret
adc
mov
pop
jb
into
stos
mov
ss
mov
add
rol
cmps
pop
pop
push
js
in
sbb
add
adc
push
cmp
std
cs
inc
jmp
mov
or
cs
add
btc
pushf
scas
mov
and
sub
cmp
sbb
test
pop
mov
sbb
xor
sbb
mov
sbb
jbe
mov
js
(bad)
pop
xchg
mov
xor
movs
cmp
loopne
jnp
in
not
cmp
int
out
xchg
clc
retf
leave
(bad)
(bad)
inc
stc
lock
sub
xor
inc
pop
(bad)
dec
repz
and
pop
pop
jle
xchg
and
mov
neg
pop
movs
jge
repz
mov
push
shl
adc
and
jl
cmp
mov
scas
pop
daa
jbe
fsubrp
or
in
jle
mov
dec
and
mov
sbb
xor
ficomp
inc
jb
add
mov
scas
loop
outs
jge
(bad)
movs
cmp
pop
push
cwde
cmp
test
and
push
leave
push
hlt
pop
cs
push
xor
dec
fs
call
fnsave
cmp
loope
xor
xchg
pop
cmp
xchg
cmp
push
cmp
mov
(bad)
jne
or
jbe
sbb
jmp
xchg
js
inc
aas
lea
cwde
mov
ds
cmp
icebp
stos
fmul
cmc
push
inc
mov
adc
inc
dec
loope
outs
in
movs
popa
jle
xor
cs
hlt
cmp
sbb
loop
mov
nop
stos
xchg
in
call
clc
addr16
mov
pop
pushf
outs
jnp
xchg
mov
mov
cli
iret
adc
fwait
cmp
cmp
test
(bad)
jmp
mov
stos
mov
sub
fadd
xchg
mov
jb
jno
aad
cmp
lds
mov
push
fwait
inc
rcr
mov
and
adc
mov
jns
movs
jo
or
jg
xchg
sti
call
icebp
ins
dec
add
js
mov
mov
mov
push
pop
cli
mov
movs
shr
lds
test
sbb
and
sbb
or
xor
jecxz
push
icebp
inc
inc
iret
dec
ja
fnstcw
add
mov
jmp
jmp
inc
push
shl
in
sahf
jb
in
(bad)
in
mov
mov
scas
and
in
and
sahf
movs
pop
mov
mov
mov
sub
push
fsubrp
add
pop
dec
jb
sbb
aad
scas
ds
xchg
lods
lods
movs
out
push
mov
(bad)
cld
mov
mov
int
push
(bad)
test
and
add
pusha
pop
rcl
jo
mov
push
pop
xor
fstp
test
dec
jb
cmp
or
pop
ror
xor
cmp
cdq
mov
mov
add
sbb
jecxz
inc
xchg
dec
sti
cs
fisub
pop
test
ret
ss
add
dec
sub
push
jno
arpl
nop
pusha
stos
and
mov
pop
dec
pop
out
pop
sbb
xor
jae
push
arpl
and
or
(bad)
repnz
shr
lahf
cmp
xor
jmp
cmp
jle
add
push
jmp
jmp
mov
sar
push
test
cmps
js
sub
fisttp
imul
mov
arpl
inc
and
movs
dec
fwait
mov
popa
out
jb
fistp
adc
push
in
xor
fcom
neg
cmp
xor
adc
or
mul
cmp
arpl
cmp
clc
xchg
and
shr
cmp
icebp
xor
fistp
out
xchg
data16
pop
in
ds
adc
cld
sbb
test
out
jmp
in
pop
xchg
bound
sbb
aaa
or
sar
(bad)
(bad)
std
mov
ja
inc
shr
test
xchg
sbb
pop
dec
cmp
addr16
outs
jmp
inc
sbb
outs
xchg
int
jae
jl
fwait
push
inc
pop
iret
lds
and
movs
mov
sub
paddw
dec
inc
inc
enter
mov
leave
arpl
aaa
imul
cmp
sub
sub
xor
adc
fstp
(bad)
repnz
in
scas
idiv
stos
clc
add
mov
in
and
pmullw
in
movs
xchg
scas
stc
loopne
fstp
inc
xchg
mov
pop
fcom
dec
sbb
ss
lea
cmp
xlat
cmp
sbb
mov
jbe
jb
cmps
sub
jecxz
into
cld
scas
cs
rol
inc
jle
(bad)
in
cmp
clc
test
mov
or
push
pop
jmp
xor
pop
pop
cs
shl
je
shl
mov
clc
mov
inc
aas
jecxz
clc
mov
xor
cld
mov
jae
mov
pop
test
shl
cmp
jecxz
imul
jecxz
(bad)
jg
clc
xchg
xor
repz
jp
pop
jl
xchg
inc
and
and
scas
inc
add
rol
es
sbb
fmul
xor
adc
clc
imul
nop
sbb
out
cmp
fmul
jnp
jecxz
xchg
inc
push
fsub
push
in
retf
mov
fcomp
xchg
stos
rcl
inc
lds
sub
mov
aad
add
outs
pusha
dec
js
(bad)
int
out
push
xchg
and
nop
sti
dec
(bad)
xchg
jle
stc
mov
sub
inc
and
push
in
jmp
mov
js
into
ins
mov
adc
cmp
imul
sub
xor
ror
and
gs
add
mov
lods
adc
nop
push
pop
dec
cmp
mov
xchg
ret
pop
aas
(bad)
lahf
in
jmp
jg
adc
xchg
(bad)
adc
or
leave
dec
mov
ja
neg
loope
iret
fs
in
xchg
xchg
cmp
rcl
xor
rcr
fisttp
mov
xchg
pop
mov
neg
inc
xchg
lods
sub
in
cmc
arpl
popa
or
sub
hlt
rcl
xchg
sub
cmp
test
jge
jo
mov
push
and
ret
(bad)
cmc
mov
add
fiadd
mov
mov
mov
popf
jle
jecxz
jns
call
(bad)
fcomp
ret
fdivrp
pop
pop
aas
mov
fs
ja
mov
mov
fisttp
or
ss
daa
xchg
test
push
sahf
nop
xchg
dec
sub
imul
pop
popa
add
cmp
push
or
adc
aad
enter
push
xlat
repz
test
inc
xlat
int
imul
lock
sub
push
(bad)
popa
jnp
(bad)
pop
pusha
pop
(bad)
mov
(bad)
and
push
iret
call
mov
loopne
gs
inc
imul
sub
mov
xchg
ins
(bad)
sbb
test
inc
(bad)
popa
xchg
or
push
call
dec
jmp
add
mov
fisttp
in
xor
das
xor
aam
xchg
pop
jecxz
clc
ds
push
pop
mov
jns
jno
push
js
sub
aaa
in
sub
jge
push
loope
xchg
inc
jbe
or
js
adc
jmp
add
sbb
pslld
shl
fs
std
lock
mov
sti
mov
std
js
push
or
xor
cmp
dec
cwde
xor
rcl
das
test
add
inc
push
push
push
fstp
add
add
sub
ins
aam
shl
stos
inc
xor
mov
shr
scas
fnstsw
ficom
and
dec
jl
div
ss
test
cmp
xchg
stos
push
cmps
mov
jge
jb
leave
xchg
call
and
dec
xchg
or
add
cwde
ret
int3
test
xchg
and
mov
jmp
mov
cmp
xor
jno
mov
pop
push
ins
int3
pushf
cdq
in
jg
pop
and
fmul
and
xor
xor
xchg
cdq
std
add
imul
dec
sbb
jo
retf
jae
lock
jge
mov
mov
sub
lods
dec
or
fld
jbe
add
push
into
add
push
jbe
ins
mul
inc
push
dec
ins
mov
mov
xor
out
aad
jmp
in
adc
sub
cmp
retf
test
mov
sub
xchg
xchg
cmp
mov
or
mov
push
mov
mov
in
jge
lods
neg
inc
sub
loopne
fcmovnu
xor
int
popf
pusha
std
sbb
cmps
and
cmp
imul
int3
sbb
ror
in
not
sahf
rep
inc
arpl
pop
(bad)
arpl
ins
in
out
test
pop
push
outs
cmp
es
and
int3
pop
xchg
sbb
shr
lods
mov
daa
(bad)
push
mov
push
xchg
test
outs
daa
rcl
push
push
outs
js
xor
push
movs
nop
test
rcl
sub
enter
out
push
test
div
das
inc
push
pop
ret
repz
sbb
cmp
mov
add
xor
sub
jnp
pop
test
stc
rol
je
out
lods
cmp
idiv
jmp
push
test
lods
sub
push
pop
jae
mov
xlat
stos
sahf
mov
cmp
push
jg
test
mov
lds
lock
xor
cmps
ret
mov
or
push
jl
lea
or
pop
sbb
xlat
push
mov
(bad)
in
and
mov
das
out
stc
add
sbb
mov
je
cmps
std
xchg
aas
test
mov
in
ins
lock
pop
movs
shl
out
std
retf
and
rcl
jp
rcl
jae
or
movs
dec
fadd
mov
ret
push
and
mov
pop
daa
jo
inc
and
je
ss
call
jne
xor
lods
in
push
cld
dec
mov
pop
lds
je
mov
dec
mov
jmp
ror
mov
inc
mov
push
mov
stc
iret
inc
or
outs
pop
push
mov
retf
aas
and
lods
mov
pop
aam
mov
fld
dec
aas
sbb
adc
into
fmul
add
jecxz
xchg
push
mov
mov
xlat
push
xchg
mov
movs
mov
push
dec
enter
fiadd
test
mov
sub
cli
push
jbe
out
fcomip
add
fwait
movs
outs
cdq
dec
mov
pop
or
xchg
pop
sub
jmp
or
dec
or
add
mov
clc
mov
xchg
popf
retf
ror
icebp
out
and
jp
dec
push
ror
jp
or
cmp
rcr
test
bound
sysexit
mov
adc
in
sub
fidiv
les
sahf
inc
movs
fld
inc
outs
ds
push
jmp
cwde
lods
push
fidivr
je
dec
ins
fwait
mov
lds
jle
stc
outs
daa
mov
sbb
movs
xchg
lds
adc
jnp
test
jp
mov
and
stos
movs
mov
sub
inc
scas
xor
push
mov
sbb
out
xchg
xlat
(bad)
sbb
or
xchg
cwde
fnstenv
push
and
adc
sbb
sbb
push
ret
mov
dec
jmp
mov
mov
xor
mov
leave
sbb
jge
mov
mov
(bad)
and
in
ds
mov
out
clc
mov
inc
ss
pmaxub
movs
pop
sub
cmp
mov
jo
mov
ret
push
icebp
std
mov
dec
sar
push
lods
sub
jns
cmps
mov
or
(bad)
cdq
in
data16
(bad)
retf
jp
mov
xchg
mov
mov
push
mov
sub
mov
cmp
mov
ins
sbb
mov
fs
fs
pushf
dec
repnz
into
(bad)
js
push
pop
fistp
js
mov
pop
jmp
cmp
dec
retf
mov
lock
ja
adc
test
and
dec
lods
pop
jno
cmp
push
(bad)
mov
add
outs
fstp
outs
popa
push
les
pop
repz
lahf
movs
mov
pop
rcl
imul
add
jb
hlt
push
sar
mov
ins
or
jno
rol
fadd
xchg
call
mov
pop
mov
push
jb
std
fnstcw
inc
inc
lock
push
push
rcr
xor
add
dec
sahf
sbb
pop
pop
xchg
int
and
mov
inc
mov
cmc
mov
leave
cli
sbb
sbb
jbe
dec
imul
les
(bad)
popf
test
vmovntps
jl
je
popa
xchg
movs
sahf
xchg
int3
xchg
dec
lahf
jg
out
cwde
(bad)
jmp
fwait
dec
clc
aaa
pop
cs
outs
fld
test
fild
mov
xchg
jne
xor
mov
sub
je
add
lea
pop
mov
cmc
xlat
mov
mov
inc
add
push
jne
sbb
jbe
in
mov
adc
sbb
mov
cmps
mov
adc
int3
jle
sti
mov
mov
jg
inc
cmp
add
cmps
xor
std
iret
fcmove
mov
mov
add
mov
js
add
cmp
mov
dec
test
cmp
mov
out
mov
lahf
or
push
sbb
fld
aam
pop
into
(bad)
jbe
dec
cld
mov
push
add
ror
pop
leave
or
adc
popf
fbld
fidivr
push
and
xor
inc
xor
dec
out
inc
in
loopne
gs
stos
adc
mul
fisub
cmps
mov
dec
stos
jmp
mov
dec
dec
popf
mov
mov
jns
push
mov
push
mov
icebp
sbb
sbb
test
or
cli
fcmovb
outs
add
je
xlat
xchg
and
push
into
addr16
add
mov
aas
popf
sbb
inc
mov
test
cli
xchg
mov
mov
fild
test
add
mov
mov
arpl
sti
(bad)
cmp
sub
ret
or
adc
in
jl
push
push
rcr
in
xor
mov
movs
inc
outs
push
stos
(bad)
push
push
out
pusha
pop
mov
pop
shl
repz
mov
fsubr
dec
xchg
lods
(bad)
shr
xchg
cmps
mov
mul
push
push
and
jmp
xchg
cmps
outs
push
hlt
xchg
mov
jb
jnp
inc
mov
rcl
mov
dec
fisub
ja
sub
jg
cmp
mov
pop
push
popa
lds
fdivr
pop
(bad)
popa
jns
lds
not
bound
test
sbb
adc
push
sbb
add
gs
jmp
inc
cmp
jbe
ins
cmp
(bad)
jo
push
(bad)
in
adc
xchg
mov
adc
xor
sub
sbb
mov
fstp
(bad)
push
lahf
dec
mov
inc
mov
mov
mov
in
mov
and
in
xor
push
fdiv
test
sub
sbb
test
cdq
xor
pushf
sbb
(bad)
push
inc
jmp
sub
add
in
inc
mov
lods
hlt
and
fidivr
test
(bad)
cld
(bad)
in
push
xchg
pop
loop
dec
outs
push
jnp
push
xor
imul
fist
enter
imul
pop
retf
nop
(bad)
jmp
xchg
xchg
mov
push
dec
jl
aas
scas
(bad)
push
in
out
xchg
adc
or
scas
sbb
or
pop
pop
shl
pop
mov
cmp
sbb
dec
outs
pop
test
imul
sbb
xchg
pop
mov
add
jne
popa
std
sub
int
jb
ds
push
call
xor
aam
xor
fldenv
cmc
cmps
cmp
mov
jp
popa
cdq
outs
and
mov
jnp
add
lea
push
xor
ja
out
test
(bad)
push
dec
shl
mov
xchg
push
and
fdivr
jne
mov
arpl
repz
dec
xchg
and
dec
mov
mov
push
ins
push
dec
in
sub
pop
inc
outs
jp
js
dec
fmul
mov
ret
xor
cmps
xlat
inc
or
test
mov
fild
pop
stc
ins
cli
xor
shl
cmps
jmp
jle
(bad)
test
cwde
inc
xor
(bad)
cmp
lahf
cmp
lds
imul
xchg
dec
pop
pushf
retf
xchg
cmc
vpmacsdqh
mov
lds
jge
int3
ja
call
(bad)
mov
call
lahf
in
mov
sub
(bad)
ins
push
jmp
leave
fidivr
bound
in
mov
nop
(bad)
jae
dec
call
dec
pushf
and
std
call
mov
mov
pop
inc
aad
cmp
fcmovnb
hlt
xchg
pop
dec
xor
add
inc
ja
movs
lds
mov
jne
in
scas
aam
mov
and
movs
jmp
lds
mov
lods
ss
sbb
sahf
in
(bad)
xor
adc
sti
clc
mov
mov
sbb
fstp
loopne
outs
add
pop
ret
call
dec
cld
mov
inc
push
iret
iret
mov
ins
push
rcl
call
cmp
add
pop
inc
pop
jne
sbb
cmp
xchg
icebp
repnz
ror
or
pop
pop
mov
mov
push
mov
jecxz
ret
mov
push
sub
inc
add
dec
test
imul
xchg
push
daa
push
push
pop
fs
and
inc
clc
jp
fmul
mov
cmp
pop
mov
outs
add
sbb
cli
outs
cmp
stos
mov
mov
test
mov
(bad)
enter
xchg
loop
jne
jo
imul
and
add
jbe
std
pop
mov
aam
aad
sub
xchg
(bad)
mov
stc
test
rcr
pushf
jg
jle
sub
cmp
inc
mov
mov
cld
popa
xchg
imul
add
popa
dec
pushf
xchg
or
and
mov
inc
mov
add
clc
pop
and
dec
xchg
retf
sbb
fld
lds
ja
stc
mov
jle
pop
int3
push
lock
pop
fwait
call
push
cwde
pop
xor
out
rcl
ror
leave
adc
enter
dec
cmp
pop
and
je
sub
aam
mov
adc
xor
push
lahf
add
jl
ds
pop
sub
enter
pop
and
inc
es
xchg
inc
mov
outs
ret
mov
xchg
add
ss
call
aad
inc
pushf
(bad)
xchg
lods
or
mov
xchg
or
pop
shl
sbb
push
pop
dec
es
sbb
sbb
dec
das
repz
out
pop
jl
test
add
cmp
add
push
mov
cld
mov
test
cwde
pop
and
adc
mov
popf
lods
ret
and
mov
mov
in
out
push
xchg
loopne
jns
nop
mov
cmp
jle
push
repz
and
jp
cmc
and
xchg
adc
shl
int
das
pop
pop
stos
inc
call
push
lods
adc
mov
out
(bad)
pop
xchg
xchg
ja
sub
stos
xor
fs
and
push
ss
arpl
fdecstp
imul
sbb
xor
xor
stos
fwait
dec
mov
rcl
dec
mov
dec
ss
(bad)
pop
xor
ins
cmp
push
fldenv
mov
repnz
rol
(bad)
neg
mov
imul
add
aas
ds
pop
sahf
push
mov
add
dec
inc
test
inc
mov
adc
mov
mov
xor
icebp
pop
imul
xor
mov
inc
mov
xchg
stos
mov
aad
and
push
mov
jmp
or
add
jns
int3
dec
in
or
mov
jmp
push
xchg
inc
fst
mov
dec
add
mov
test
cmps
pushf
jmp
pop
neg
shr
mov
out
pop
pop
add
(bad)
mov
mov
pop
inc
scas
inc
jns
sub
lock
pop
enter
pop
add
repz
call
sbb
mov
repnz
inc
in
les
pushf
scas
sbb
div
pusha
rol
lock
cwde
jmp
adc
xor
mov
je
mov
fs
jae
cdq
aas
xor
sub
sahf
aam
inc
scas
cmps
dec
lahf
jecxz
loopne
jb
push
repnz
and
sub
aad
adc
lea
in
les
pop
xchg
sbb
dec
dec
sbb
js
push
xor
mov
ins
mov
xchg
jmp
inc
call
aam
jb
stos
rcl
xor
call
mov
in
push
outs
dec
leave
shl
hlt
sbb
mov
cmc
sbb
mov
jbe
mov
push
cmp
leave
push
in
enter
dec
push
mov
push
mov
adc
call
adc
mov
cld
jae
dec
lods
pop
(bad)
int
sub
inc
sahf
les
adc
data16
xchg
push
bound
mov
aas
add
clc
adc
mov
shl
sbb
adc
mov
addr16
shl
in
xor
hlt
and
dec
xor
xchg
retf
stos
sub
jp
mov
push
add
add
adc
movs
xor
or
fild
pop
das
loop
xchg
shr
sub
pop
sub
shr
ins
cld
and
add
xor
icebp
cmp
inc
adc
pop
push
ja
dec
push
add
pop
jg
jbe
iret
jp
loope
mov
jns
outs
js
pop
pop
aaa
mov
fild
mov
call
test
psrld
jne
cmp
mov
add
loop
pusha
dec
cmp
es
call
lods
scas
add
jbe
lds
mov
imul
mov
sbb
pusha
jns
push
mov
jle
nop
icebp
test
adc
xchg
dec
retfw
test
dec
xor
les
fdivr
push
call
(bad)
pusha
pushf
loopne
pop
test
jmp
mov
cld
sbb
xor
add
ja
fdivr
mov
arpl
call
mov
jle
cdq
rol
ins
stc
ss
je
add
push
fwait
sub
pop
cmp
mov
movs
sub
push
dec
rol
fld
jne
inc
(bad)
jae
or
xor
add
sub
sub
cmp
test
pop
gs
mov
adc
nop
sub
popa
sub
in
in
cmp
jnp
and
(bad)
and
push
inc
ins
data16
test
and
mov
jg
or
int
dec
push
add
mov
cli
fild
cdq
dec
cmp
mov
mov
js
icebp
mov
test
test
push
adc
mov
leave
scas
rcr
gs
xor
sbb
stos
adc
jne
rol
pop
dec
outs
mov
sbb
pop
mov
(bad)
jg
jb
repz
inc
sub
dec
loop
and
outs
aad
int3
fnstsw
jecxz
rcr
xlat
cmc
add
jnp
out
sbb
push
add
push
iret
xchg
or
and
xchg
cmp
xchg
test
into
and
and
test
sbb
xlat
cwde
neg
xchg
rcr
sbb
sbb
sub
inc
(bad)
mov
out
ins
push
das
clc
call
inc
xor
std
adc
mov
or
retf
nop
and
dec
div
js
xor
pushf
loop
push
mov
jecxz
and
mov
cmp
cmp
imul
lock
(bad)
jne
push
cli
outs
mov
imul
div
xor
xchg
jne
cmp
push
push
mov
jnp
in
aam
mov
or
arpl
lods
pop
or
add
div
mov
mov
sub
in
sbb
pop
add
dec
xchg
cmp
into
sub
or
push
enter
dec
add
pop
add
add
pop
xchg
mov
cmps
jle
daa
je
mov
pop
xlat
jmp
xchg
adc
sbb
add
jbe
add
inc
cmp
packssdw
loopne
movs
sahf
jne
bound
mov
xchg
lods
mov
mov
hlt
inc
mov
fadd
(bad)
jle
push
nop
pop
retf
cmps
xchg
loop
dec
add
fcom
push
call
not
and
adc
ins
jae
test
out
inc
mov
xchg
outs
paddusw
cdq
and
xor
mov
pop
xchg
lds
fwait
bnd
sub
arpl
add
inc
movs
retf
clc
jecxz
pop
loop
inc
(bad)
stc
cmc
retf
jge
sti
pop
mov
mov
dec
ficom
sbb
ret
push
sub
dec
fxam
push
and
jmp
fwait
sbb
rcl
sbb
mov
int
pop
mov
pop
cmps
dec
call
mov
mov
push
retf
add
push
arpl
pop
mov
mov
test
mov
xchg
push
out
add
scas
stc
add
mov
sahf
sbb
movs
pop
ror
pusha
adc
out
xchg
mov
push
shl
addr16
xchg
in
das
xchg
scas
aad
pop
mov
mov
loopne
dec
jb
stos
mov
ror
fwait
ret
sbb
push
or
xchg
repnz
inc
xchg
ret
cmp
jnp
ds
out
movs
jge
dec
adc
and
out
mov
sahf
xor
js
jge
mov
xchg
and
cmps
mov
ss
sbb
mov
rcl
and
aas
and
xchg
fild
addr16
daa
outs
push
sub
push
fld
cmc
or
ror
sbb
nop
lods
pop
inc
and
adc
add
retf
jl
fstp
add
push
inc
lahf
out
shl
lds
je
cmp
ret
sbb
icebp
mov
push
bound
pop
mov
outs
dec
inc
xor
pop
stc
dec
mov
shl
inc
test
loope
jge
xor
pop
inc
shl
jbe
push
bound
and
in
ret
push
movs
push
jp
cmp
adc
jecxz
in
cs
shr
cmps
jno
xchg
stc
xchg
jno
sbb
jp
mov
mov
add
inc
pop
js
mov
imul
mov
mov
ss
mov
and
sbb
mov
sbb
cmps
mov
mov
sub
in
leave
push
imul
xor
push
hlt
outs
call
inc
ins
sti
adc
xor
iret
or
cmp
mov
ins
inc
mov
ror
or
pop
cwde
in
(bad)
fiadd
sub
sub
ret
and
mov
addr16
sub
cmp
jne
js
pushf
push
and
jbe
dec
xchg
inc
sub
adc
sbb
shl
adc
arpl
and
outs
stos
push
or
adc
xchg
add
jbe
leavew
inc
rol
fcom
aas
test
aad
push
mov
stc
pop
frstor
xlat
out
out
mov
cmp
pushf
loope
add
ins
jle
out
add
jge
mov
cmc
repz
aam
int3
push
jecxz
(bad)
push
lods
cli
std
(bad)
cwde
sbb
lds
mov
adc
mov
mov
outs
das
xor
cli
in
pop
fsubr
mov
aam
lods
not
cld
(bad)
push
push
and
aaa
stos
loopne
loop
add
es
xchg
push
mov
push
pop
sub
and
push
mov
jg
adc
(bad)
ror
int
(bad)
mov
xchg
adc
pusha
mov
xchg
nop
push
ret
and
test
sbb
cs
in
stos
out
or
push
cmc
pop
pop
out
jge
ins
fdivrp
jg
fbstp
mov
test
outs
mov
mov
mov
mov
xor
lods
xor
cwde
fiadd
cmps
stos
mov
and
xchg
(bad)
(bad)
repnz
ds
push
sub
fisub
dec
(bad)
cmp
out
push
data16
xor
mov
inc
data16
sub
jne
mov
or
out
cmp
mov
jle
imul
adc
fdiv
xor
mov
fild
mov
jp
push
mov
push
push
aad
xchg
movs
pop
ret
loop
hlt
addr16
inc
xchg
fnsave
(bad)
and
mov
ds
xor
cwde
div
mov
mov
push
ror
pop
out
rcl
and
and
sub
push
lahf
neg
push
lods
out
fisub
and
mov
scas
push
pop
or
jne
inc
jo
fstp
xchg
mov
mov
adc
push
or
adc
fdiv
test
jmp
(bad)
mov
jecxz
sbb
dec
jnp
sbb
lods
push
add
mov
and
dec
xor
and
outs
cdq
loopne
sbb
inc
jecxz
stc
xlat
push
test
test
xchg
inc
(bad)
mov
push
rcr
cmp
fdivr
call
in
xor
mov
inc
shl
outs
aad
mov
xor
imul
sub
push
sbb
dec
repz
sub
jbe
inc
ins
jo
cdq
dec
loope
shl
xchg
shr
mov
aaa
popf
ss
das
leave
mov
das
sbb
xor
cmp
sahf
sbb
jg
adc
call
in
cmc
add
jb
mov
fmul
sti
or
retf
push
test
ins
push
clc
cmps
(bad)
scas
pop
add
int3
lods
mov
into
jp
in
xlat
mov
daa
dec
pushf
jbe
sahf
or
aad
outs
hlt
pop
ss
stc
pop
pop
add
lock
push
jmp
add
mov
out
dec
xor
mov
fcomp
sbb
(bad)
cmc
pop
hlt
xchg
out
ins
inc
mov
dec
ror
cmps
repz
cwde
mov
push
add
push
mov
mov
data16
out
xchg
cmp
(bad)
sub
fwait
mov
movs
mov
jge
jmp
outs
pop
mov
hlt
adc
jmp
cmp
ins
cmps
repz
xchg
jp
adc
jl
pop
mov
mov
push
mov
mov
leave
aam
push
sub
jge
cmp
cld
fstp
pop
loope
hlt
daa
mov
sub
fsubr
daa
or
mov
ss
ret
xchg
xor
mov
int3
cmps
inc
mov
cmp
outs
punpcklbw
lods
mov
or
in
retf
js
or
push
mov
ficomp
sub
adc
fwait
add
inc
dec
mov
xor
(bad)
sbb
mov
ss
jge
stos
ret
xchg
dec
jne
icebp
in
ret
mov
cmp
xchg
mov
jb
cmps
mov
loop
int
push
dec
bswap
pop
jo
inc
aaa
and
dec
dec
jae
imul
lea
mov
mov
scas
leave
ja
xor
scas
jmp
xchg
daa
jns
sbb
lock
repnz
ds
mov
mov
(bad)
imul
iret
movs
jo
jecxz
dec
xchg
or
sahf
add
addr16
cmp
fdiv
scas
push
or
xchg
pop
fs
fcomp
rcl
push
pop
in
mov
lahf
inc
(bad)
data16
mov
and
shl
js
test
push
dec
mov
stos
sub
enter
sbb
out
push
xchg
jecxz
mov
push
pop
jne
in
fld
(bad)
xor
pop
nop
popa
jmp
push
outs
outs
loope
outs
test
adc
call
sbb
push
or
(bad)
jle
xor
arpl
adc
inc
ficomp
pushf
cmp
enter
clc
dec
mov
sub
std
call
loopne
mov
lods
addr16
addr16
sbb
movs
mov
cdq
or
xor
adc
mov
add
lods
jge
jg
pop
retf
ins
and
push
inc
fist
push
jge
rcl
mov
push
pop
xor
dec
ja
cmp
mov
pop
aad
in
rcl
js
test
imul
js
and
test
lods
sub
les
adc
mov
fisubr
and
mov
mov
retf
xchg
je
inc
pop
xchg
test
xchg
pop
lods
lods
pushf
lds
and
inc
out
int
dec
ss
sbb
mov
rcl
mov
leave
fbld
adc
mov
test
rcr
sbb
call
addr16
xor
test
bound
ror
sbb
jae
and
cld
stos
(bad)
and
add
cmp
adc
and
cmovge
imul
je
add
inc
adc
mov
les
dec
jne
aam
or
mov
test
jae
enter
pop
fdiv
push
pop
nop
jae
pop
in
iret
add
dec
xchg
jp
mov
repnz
xchg
push
push
fnstenv
popa
sbb
retf
imul
add
gs
jae
fld
sahf
mov
add
xor
aad
mov
repnz
(bad)
repz
and
jmp
test
int
pop
mov
arpl
cmp
sti
pop
test
fimul
sub
push
and
fstp
or
enter
into
call
or
sub
pop
push
das
movs
push
aam
hlt
or
inc
test
ds
imul
jns
retf
adc
push
cmp
movs
and
or
xor
sbb
icebp
inc
xor
test
into
cmp
adc
inc
push
in
sub
sahf
fld
int
cld
xchg
sbb
inc
xor
or
cmp
pop
jge
mov
jb
sti
mov
das
sbb
sbb
cmps
sti
sub
push
mov
xchg
sar
mov
dec
push
loope
pop
mov
lock
mov
outs
push
mov
ss
lock
shl
call
mov
std
repnz
pop
cmp
push
mov
xor
and
push
jno
push
add
mov
jb
shr
std
lock
mov
jmp
mov
cmps
cs
push
push
imul
add
retf
or
jmp
jecxz
(bad)
adc
clc
cmp
jecxz
dec
xchg
push
cmp
mov
test
and
mov
sti
jbe
fstp
fisttp
pop
out
hlt
lds
clc
mov
jo
push
inc
outs
or
(bad)
arpl
clc
xlat
cmps
xchg
mov
cmps
or
mov
xor
pusha
mov
iret
push
xchg
jge
adc
cmp
dec
pop
dec
mov
and
fbld
push
pop
adc
shl
dec
ds
and
xchg
loope
mov
and
loope
jno
adc
repnz
fwait
xor
add
mov
inc
aas
jp
hlt
inc
hlt
fiadd
xor
sbb
stos
mov
outs
icebp
mov
push
stc
pusha
lods
in
push
sbb
dec
adc
retf
push
mov
loope
sahf
ret
jge
and
or
fisttp
add
cmp
fcmovnb
stc
add
cli
jecxz
out
xchg
lock
xchg
dec
lods
bound
test
stos
and
jmp
je
xchg
inc
stos
cmps
into
sahf
in
repnz
xchg
sub
icebp
jg
outs
dec
jbe
jle
fucomp
adc
je
mov
in
and
imul
pop
outs
addr16
xchg
ss
sbb
mov
aam
sbb
and
inc
and
imul
or
push
das
adc
fisubr
xchg
fsubr
ret
jmp
retf
jmp
adc
or
inc
fisttp
sub
pop
xchg
movs
push
push
repz
mov
jmp
js
or
or
or
adc
inc
pop
popa
mov
xor
dec
nop
dec
mov
popf
or
xchg
fst
xchg
add
xlat
adc
mov
pop
push
aad
adc
loopne
fldenv
pushf
jno
xchg
cld
rcr
mov
arpl
fidivr
xor
cmps
xor
jns
and
sub
push
aad
and
xchg
pop
shr
ds
mov
retf
push
mov
call
dec
mov
(bad)
rcl
lds
sub
idiv
mov
lds
and
sbb
dec
cmp
into
mov
sbb
sub
and
add
imul
movs
movs
push
and
cmp
sub
cmp
mov
xchg
xchg
push
mov
outs
jbe
jbe
mov
or
fyl2x
or
push
imul
data16
neg
push
cmp
test
pusha
(bad)
cmp
ins
lods
sbb
pop
fist
fisttp
add
aas
jno
pop
movs
sbb
int
mov
mov
ins
xchg
cdq
mov
nop
sar
mov
or
aas
fs
mov
push
jmp
add
xchg
inc
fsub
mov
mov
pop
pop
pop
test
pop
daa
enter
add
ja
sbb
rol
mov
test
nop
sub
call
mov
retf
in
test
xchg
push
jmp
mov
mov
outs
in
and
xor
fxch
mov
mov
inc
mov
mov
xchg
jg
stos
jmp
cmps
sti
xchg
jp
mov
mov
call
or
fstp
inc
repz
addr16
mov
loope
mov
mov
std
out
repz
xchg
sub
push
cmp
xor
dec
jne
sbb
cmc
(bad)
jecxz
mov
sti
loopne
test
arpl
pop
xchg
xor
inc
stos
js
sbb
jl
idiv
inc
sbb
mov
sti
inc
rcl
add
jg
add
adc
pop
mov
jmp
lock
daa
imul
rol
lods
lahf
retf
adc
add
cmp
mov
jae
call
sbb
hlt
fscale
fisub
jb
jnp
add
stos
in
dec
push
ret
xchg
mov
add
push
lock
(bad)
mov
pop
xor
ja
into
or
stos
stc
hlt
mov
sub
pop
stos
adc
push
outs
push
push
inc
jb
loope
sbb
ja
xor
call
jp
mov
mov
and
mov
lock
xor
imul
xor
add
lods
mov
sub
add
mov
and
stc
inc
call
xchg
shl
push
clc
add
test
jno
add
loopne
leave
nop
push
out
addr16
mov
mov
scas
shr
es
mov
das
sub
gs
into
in
pop
xchg
pop
add
xlat
mov
xchg
mov
nop
cmp
outs
sbb
or
jge
fisubr
dec
ror
jns
out
popf
mov
cmc
and
in
mov
popa
pushf
outs
mov
inc
pop
jp
aad
hlt
dec
jno
xchg
shr
in
adc
mov
pcmpeqw
mov
aas
cwde
pop
or
rcl
mov
je
pop
sbb
add
xor
mov
mov
mov
icebp
pushf
outs
in
add
fidivr
and
jae
or
adc
test
sti
add
xchg
test
dec
mov
jle
pushf
push
stos
or
(bad)
shl
jae
jno
aam
jl
cmp
sahf
test
inc
aam
xor
mov
sbb
pop
dec
sbb
adc
mov
jno
xchg
movs
inc
imul
adc
cmp
dec
pop
jne
push
scas
adc
sbb
adc
push
push
add
jnp
cmps
or
mov
cmp
clc
ja
icebp
sub
and
push
xor
jmp
or
test
and
mov
dec
jnp
mov
add
sbb
push
xor
out
clc
sub
inc
dec
gs
xor
aam
in
mov
push
fisubr
fld
cmps
pop
sbb
jno
ja
or
inc
mov
repz
data16
push
ins
ret
xor
cmp
int3
inc
sub
out
not
shl
movs
jp
mov
das
xchg
ret
mov
jns
in
pop
fistp
out
sub
sbb
pop
mov
les
pushf
add
mov
pushw
cmps
pop
outs
fs
ins
push
out
inc
cmp
mov
fadd
pop
or
and
and
add
je
pop
call
lea
xchg
xor
inc
aas
test
fcom
out
and
jecxz
out
adc
rcl
call
push
or
outs
xchg
jl
in
popa
shr
dec
push
movs
mov
pusha
jb
rol
mul
inc
lock
mov
iret
sbb
and
inc
loop
inc
pop
cmp
ins
lods
or
xchg
sub
rcr
jl
test
xchg
out
cmp
dec
addr16
xor
add
mov
ret
fcmovnb
lea
xchg
xchg
fbstp
and
adc
or
cmps
xchg
push
and
sbb
(bad)
cwde
mov
outs
dec
xor
clc
jmp
shr
popf
mov
dec
out
out
inc
push
pop
test
fst
push
or
cmps
dec
and
fs
aad
in
lock
in
into
xor
and
cmps
xor
push
push
test
sub
fimul
mov
and
test
pushf
inc
js
xor
cli
(bad)
dec
aaa
fldenv
pop
shl
adc
ins
fwait
(bad)
pop
jbe
out
mov
add
inc
cmp
sahf
test
inc
pop
add
enter
mov
fnstsw
push
jmp
cmp
sbb
pop
mov
inc
sbb
pop
clc
sbb
ja
push
pop
mov
dec
adc
into
ins
fmul
mov
cmps
popf
stc
int
xor
inc
out
lods
ficom
cmp
add
das
(bad)
cdq
bound
(bad)
js
add
inc
adc
and
stos
xchg
adc
test
ficom
cdq
mov
repnz
jb
add
jge
cmp
rcr
xchg
inc
cs
movs
sbb
mov
or
mov
mov
sub
pop
or
xor
jb
push
push
or
mov
dec
or
ret
cmp
fcmovbe
loopne
arpl
jecxz
inc
xchg
test
and
sbb
in
scas
sahf
cld
std
inc
sbb
xor
add
mov
add
cmp
jo
adc
in
pusha
and
cld
fwait
mov
sub
pop
popf
in
data16
adc
out
xchg
sub
jbe
stos
push
aas
and
and
data16
mov
adc
xchg
shr
dec
and
pop
scas
pop
out
xlat
jo
push
inc
dec
jle
out
bound
mov
ins
inc
pop
mov
out
scas
inc
fidiv
js
push
iret
stos
and
or
inc
inc
jmp
pop
or
jae
fisttp
lock
sub
(bad)
sbb
jno
iret
inc
repnz
scas
cmps
pop
aaa
inc
stos
add
pop
imul
mov
sub
popa
mov
xchg
cwde
enter
orps
inc
popa
in
push
test
lahf
sahf
inc
push
pop
test
add
xor
es
push
mov
retf
ret
out
mov
in
cs
mov
pmaxub
add
mov
xchg
pop
mov
cmps
(bad)
mov
les
jo
js
sti
jmp
mov
pop
lahf
mov
in
ret
push
xor
pop
sbb
jnp
sbb
sar
loop
cmp
and
test
pop
xchg
adc
jecxz
xor
mov
fbld
fisubr
jmp
xlat
clc
repnz
adc
ficom
mov
mov
jp
shufps
cmp
es
ret
jnp
cmp
fisttp
leave
shl
cmp
in
mov
int3
sbb
fst
and
add
mov
sub
or
daa
out
pop
xchg
jns
or
outs
jns
ret
shl
retf
into
jp
or
jo
lods
mov
push
aas
outs
shr
mov
jle
rol
fst
jne
xor
jmp
ret
retf
daa
or
lods
and
dec
arpl
movs
mov
sti
movs
sbb
fisubr
lods
pop
jmp
push
in
test
mov
mov
mov
sbb
(bad)
in
shr
jo
push
and
inc
cmp
in
xchg
scas
xchg
jo
push
(bad)
scas
(bad)
push
push
sub
arpl
gs
pushf
scas
pop
idiv
or
and
jge
pop
jge
out
sbb
(bad)
cmp
mov
sbb
and
jle
(bad)
(bad)
ins
xchg
inc
mov
scas
scas
(bad)
(bad)
jg
sub
cmp
and
test
inc
xor
stos
xchg
ds
sub
pop
iret
ret
cli
sti
cmp
sahf
adc
push
pop
pop
xor
loop
(bad)
and
dec
jg
pop
sub
xchg
mov
add
mov
lods
push
push
jecxz
jg
mov
dec
inc
push
hlt
jne
cmp
out
in
or
scas
and
push
push
jmp
push
mov
sahf
ficom
xlat
push
das
loop
hlt
inc
cmp
cmp
add
fwait
cli
mov
push
add
push
out
and
add
fscale
outs
or
sti
sub
jmp
adc
icebp
pop
xor
sar
in
iret
push
lahf
push
jle
mov
mov
out
xchg
sub
cli
inc
push
and
loop
fs
arpl
sub
pop
push
sar
mov
jno
sub
cmps
dec
xchg
or
sub
jno
push
jge
lods
dec
pop
fldcw
call
jb
or
arpl
sub
ret
xchg
inc
(bad)
hlt
sbb
les
mov
ins
pop
dec
out
inc
call
jge
fimul
xchg
inc
cmp
adc
in
cmovo
push
xchg
imul
test
mov
jbe
jns
push
cmp
jl
in
outs
jmp
or
push
add
sub
outs
rcl
mov
mov
mov
es
sbb
std
mov
or
pop
mov
fstp
pop
xor
or
scas
and
inc
mov
mov
fimul
ficomp
fild
fmul
std
cs
(bad)
ins
push
sar
test
shr
ss
sbb
add
pusha
cmps
js
jmp
xor
or
aaa
gs
call
mov
pop
movs
cld
jnp
mov
(bad)
xchg
adc
jmp
es
cmc
div
mov
fbstp
scas
adc
xor
dec
aaa
dec
xchg
and
cmp
inc
aam
cs
sti
std
fs
mov
mov
retf
add
dec
(bad)
cmc
pop
ins
push
out
xor
push
jae
inc
aas
pusha
adc
pop
das
das
inc
xchg
das
inc
pop
imul
and
lea
call
aad
faddp
cmp
(bad)
mov
xchg
adc
xchg
mov
nop
cli
je
pop
cmc
adc
dec
pop
cli
shr
xchg
jbe
fst
xchg
or
add
movs
cli
inc
cmp
mov
jmp
repz
(bad)
clc
sub
add
jnp
add
mov
adc
and
mov
push
pop
aad
push
mov
xchg
jl
adc
push
jae
call
xchg
adc
and
cmp
adc
or
push
push
ror
or
lods
sub
mov
nop
jge
mov
je
fcom
mov
aad
sub
repz
cmps
in
jmp
in
jno
mov
jmp
inc
js
cmp
jnp
fldenv
ja
jnp
xchg
repz
pop
ret
mov
cmp
xor
or
mov
scas
mov
push
setne
(bad)
sub
sbb
aam
scas
push
inc
sbb
dec
jmp
pop
mov
pop
and
mov
lods
mov
jmp
jecxz
and
scas
xchg
push
mov
ficom
inc
repz
stc
std
cmp
(bad)
jmp
or
adc
js
mov
sub
xlat
or
mov
jg
sti
xlat
nop
std
nop
test
leave
mov
sbb
jae
xor
xor
retf
test
cmp
xor
mov
add
or
mov
ss
add
and
push
in
aam
inc
xor
pusha
aas
cmp
cwde
stos
daa
cdq
fsub
push
imul
sub
fdiv
xchg
mov
xor
push
retf
pop
enter
and
or
xchg
inc
xchg
retf
outs
js
mov
arpl
mov
pop
cmp
cmp
cwde
add
outs
out
aam
push
mov
dec
and
jmp
je
adc
xor
pop
aas
cdq
test
xchg
test
adc
pop
or
cdq
cmp
sbb
or
out
aad
fwait
jp
(bad)
cli
scas
aad
mov
ins
mov
inc
ja
jp
div
mov
cs
push
repz
(bad)
and
in
in
out
sub
xchg
add
xchg
push
pop
rol
xor
sbb
fwait
mov
scas
dec
add
xchg
aam
outs
adc
aam
push
pusha
repz
bound
sbb
hlt
lds
jle
fidivr
adc
call
xchg
add
sub
dec
jle
adc
gs
dec
xchg
in
sub
dec
hlt
ja
jno
in
dec
jmp
jmp
call
in
sub
scas
data16
cmp
ret
loope
das
push
imul
push
das
rol
repnz
cmp
out
jl
std
xor
sub
push
addr16
pop
dec
dec
aam
lds
pop
jle
scas
imul
fisttp
or
out
test
mov
adc
or
dec
mov
(bad)
sbb
dec
inc
idiv
push
and
push
cli
xor
xor
push
push
in
and
or
ret
(bad)
es
ins
adc
enter
cld
outs
mov
inc
aam
pop
inc
cmc
add
leave
scas
or
fwait
add
bound
popf
sub
xor
pop
jge
test
and
aas
outs
fdiv
push
scas
out
test
aad
inc
inc
fidiv
pop
fucomi
jne
dec
f2xm1
bound
cmc
cmp
mov
jo
jne
js
lods
xor
adc
cmps
mov
ret
jnp
(bad)
outs
jne
in
mov
enter
sbb
jmp
scas
cmps
pop
lods
test
sti
add
xor
bound
cmp
adc
add
cmp
clc
add
jnp
mov
push
stos
out
inc
ret
or
iret
push
scas
mov
les
cli
mov
rol
add
sub
(bad)
jle
xor
in
test
jl
leave
jge
movs
les
in
inc
lds
pop
xchg
pop
outs
out
ins
js
fs
cld
stos
or
cmp
pop
dec
and
shl
push
ficom
inc
fadd
push
rcl
mov
pushf
and
xchg
mov
dec
call
jno
movs
push
cli
out
jbe
fist
and
cmps
cdq
ret
fcmovu
dec
jne
rol
push
pop
fsub
dec
lock
push
aam
pop
aas
mov
jg
mov
push
nop
sbb
xor
mov
and
cmc
out
dec
cmp
popf
std
inc
pop
add
clc
(bad)
jle
cmc
jge
js
xchg
jns
rol
xchg
mov
loope
ret
lods
cdq
retf
(bad)
adc
hlt
in
or
out
jno
xor
(bad)
add
pop
out
call
sbb
adc
add
sbb
inc
pop
mov
outs
adc
pop
fsubr
sbb
mov
jae
push
and
push
xor
push
xchg
jo
dec
cmp
int3
push
xchg
addr16
inc
or
test
int
lock
add
mov
(bad)
leave
push
movs
and
mov
sahf
jnp
dec
sbb
pop
inc
xchg
sbb
add
pop
mov
iret
es
push
push
or
mov
jecxz
es
fadd
mov
mov
cli
jmp
xchg
mov
xchg
mov
xchg
(bad)
stc
fld
pusha
or
in
in
xor
aam
inc
push
mov
mov
jl
out
iret
sbb
cmps
inc
mov
outs
shl
jecxz
(bad)
rcl
enter
pop
frstor
fs
sub
mov
xchg
sbb
sbb
sub
pop
xchg
lds
sti
addr16
push
enter
sahf
pop
ds
dec
jge
cmp
pop
retf
daa
sbb
lods
cli
int3
add
dec
in
ss
imul
push
xor
leave
outs
outs
std
and
outs
test
mov
loopne
lea
xor
je
add
jbe
dec
inc
dec
ins
sub
into
cld
aaa
and
lahf
lds
add
sub
mov
inc
jl
inc
iret
aaa
mov
push
mov
push
mov
cmps
in
xchg
jg
add
xchg
xor
and
std
call
push
out
or
add
cmp
or
or
mov
sub
gs
wbinvd
mov
pop
pop
inc
mov
add
loopne
add
movs
or
sbb
rcr
mov
nop
sub
(bad)
fld1
mov
hlt
sbb
shl
leave
cmps
xchg
clc
stc
add
nop
sub
add
aaa
xor
shr
pushf
push
pop
sub
retf
ret
inc
call
out
mov
dec
cld
jg
add
ins
pop
sti
push
ja
not
inc
or
(bad)
out
xor
inc
(bad)
stos
push
out
mov
nop
xchg
push
test
fisttp
lods
int3
or
jmp
add
mov
(bad)
fsubp
add
push
cmc
inc
mov
bound
fstp
mov
pop
add
int3
cs
push
cmp
mov
neg
sbb
rcr
sti
cmp
jmp
sub
pop
push
adc
pop
out
push
stos
jnp
lahf
test
push
xchg
rcl
int3
out
mov
ss
sbb
outs
mov
or
clc
call
xchg
je
dec
bound
xchg
in
sub
lea
(bad)
addr16
and
addr16
sbb
sbb
mov
and
les
les
jg
push
fcom
jnp
mov
or
(bad)
icebp
arpl
lea
test
out
push
sar
repz
stos
lock
lea
je
lods
pop
cmp
or
adc
mov
leave
sahf
jno
popa
cld
jmp
xor
hlt
repz
cs
cmp
leave
dec
mov
das
imul
cmp
jbe
and
popf
xchg
pop
dec
mov
(bad)
out
jb
(bad)
rcr
and
retf
retf
mov
sub
xchg
xor
ds
xor
jne
mov
pop
ins
data16
iret
and
and
lds
pushf
cmp
push
out
nop
ins
inc
inc
lds
dec
movs
xlat
fimul
adc
pop
dec
cmp
add
fisubr
jmp
bound
adc
mov
fcmovu
jp
add
push
sbb
mov
adc
mov
clc
ret
and
mov
mov
cmp
jno
pop
iret
dec
add
lea
push
sbb
shr
mov
cmp
call
push
test
pop
loope
jecxz
add
test
stos
popf
xchg
in
sub
sub
cmp
addr16
clc
mov
nop
mov
mulps
adc
iret
inc
mov
push
rol
push
cmp
mov
or
clc
mov
lods
mov
aad
fwait
enter
xchg
and
mov
push
mov
out
(bad)
or
ins
mov
test
mov
mov
and
mov
push
loop
rcl
(bad)
icebp
push
bnd
sbb
cmps
into
inc
inc
mov
pop
inc
jo
adc
fwait
mov
inc
arpl
es
jne
scas
pop
lea
inc
sbb
shl
aas
mov
xchg
mov
pop
stc
(bad)
aad
pushf
jb
cmp
dec
imul
in
(bad)
icebp
jbe
stc
sbb
pop
pop
mov
push
jmp
pop
int
shl
mov
ins
(bad)
fdivr
test
xor
jmp
push
mov
xor
arpl
mov
push
or
bnd
jg
pop
cmp
sub
fwait
aad
out
mov
imul
sub
daa
lahf
fistp
sub
jmp
icebp
push
xchg
xchg
das
xchg
adc
jl
cmc
cmp
test
loop
(bad)
xchg
push
in
cwde
jne
rcr
in
push
repz
mov
xlat
inc
jg
or
rcl
adc
cdq
sub
mov
pop
push
int3
icebp
xchg
inc
loop
mov
jp
test
push
mov
sahf
jge
fucomi
ret
adc
cmp
jl
sbb
pop
and
(bad)
packuswb
dec
je
push
cmc
jl
push
sub
add
inc
dec
mov
push
pop
push
add
inc
and
cdq
cmps
lods
pop
push
jnp
adc
std
mov
pop
mov
or
pop
mov
add
gs
imul
inc
int
aas
xchg
inc
xchg
imul
pop
aam
popa
pop
sbb
int3
loopne
fdivr
adc
jns
jnp
repz
push
mov
leave
pop
or
cld
in
cs
rol
mov
aaa
push
jg
inc
dec
cdq
and
(bad)
shl
or
or
sti
add
dec
mov
out
xchg
adc
mov
stc
or
xor
adc
imul
or
push
xor
ins
ins
and
imul
xor
sub
sub
mov
hlt
sub
push
ss
stc
dec
cwde
(bad)
xchg
(bad)
nop
cmp
enter
cmp
jns
test
cmp
push
inc
mov
mov
sub
cmc
fld
cs
imul
sbb
cmps
cmps
or
add
xchg
fdivr
mov
outs
push
pop
pop
int
int
or
dec
iret
dec
and
dec
in
sub
jne
xchg
jmp
mov
dec
inc
das
std
pop
int
aaa
or
lock
or
fsub
hlt
push
aad
jb
pop
ss
retf
scas
(bad)
adc
sbb
sub
mov
push
sti
cld
out
leave
cld
loop
sbb
sbb
or
and
cmp
in
mov
xchg
jecxz
(bad)
sbb
scas
push
mov
ins
push
or
data16
(bad)
imul
or
pop
rcl
fwait
sbb
adc
mov
in
jns
pop
push
(bad)
in
rol
fbstp
cmp
or
inc
add
movs
mov
cld
or
les
inc
sub
add
inc
or
cmp
jo
lahf
in
cwde
adc
mov
lods
jg
fld
xchg
push
lea
and
fdiv
push
ret
jne
test
dec
iret
mov
or
mov
mov
pop
mov
add
out
inc
int
mov
push
fs
xchg
leave
int3
(bad)
dec
mov
retf
mov
popa
adc
mov
fcmovb
push
(bad)
retf
stos
nop
xor
int
mov
sar
imul
and
and
jnp
lock
lods
fisub
test
in
dec
repnz
cdq
das
movs
call
std
mov
rcr
sbb
push
mov
idiv
jnp
loop
cmp
rol
in
sahf
imul
fs
adc
fdivrp
and
jle
add
mov
aaa
jnp
mov
stc
pop
outs
jecxz
pop
jmp
dec
cmp
lds
dec
jl
mov
ss
jmp
test
lds
pop
xor
dec
imul
jb
rcl
mov
add
jae
jo
mov
mov
popa
shl
out
mov
out
adc
push
jbe
dec
fs
les
inc
mov
sub
sbb
jnp
xchg
dec
popa
push
inc
gs
daa
cmc
es
push
popa
inc
jg
pusha
pop
mov
mov
ins
dec
xlat
pop
test
jns
sbb
and
(bad)
(bad)
sahf
and
clc
add
push
(bad)
adc
dec
cmps
inc
adc
inc
inc
inc
in
mul
test
dec
test
mov
mov
dec
dec
fistp
movs
cs
imul
adc
shr
adc
ret
scas
push
lahf
das
jle
dec
mov
repz
daa
mov
lahf
xchg
stc
or
xor
bound
rcr
push
pop
pushf
jns
pop
mov
jle
xor
and
cmc
fdivr
es
push
xor
mov
mov
sahf
and
test
xchg
jnp
ret
push
xchg
xchg
inc
push
ret
shl
or
mov
neg
mov
je
jecxz
add
pop
xchg
leave
popf
int3
xor
mov
mov
push
cmp
adc
fdiv
out
pop
gs
bound
stos
into
jp
ss
pop
mov
jmp
add
hlt
fistp
outs
jmp
fiadd
scas
mov
mov
sbb
xor
mov
sbb
repz
fs
push
add
cld
jmp
int3
call
and
loope
adc
add
jns
popa
sti
fsubr
retf
popa
push
scas
dec
pop
inc
pop
jmp
jbe
retf
jo
add
add
movs
mov
fnsave
add
ins
add
adc
pushf
ss
adc
xchg
lods
sbb
loope
and
pop
mov
(bad)
movs
adc
into
call
mov
ret
ret
adc
popf
adc
xor
arpl
lods
out
xchg
fwait
mov
or
or
jp
adc
ror
cmp
jg
and
shl
test
or
pusha
jle
sbb
aam
adc
repz
pop
or
or
add
imul
mov
and
adc
cmc
add
xchg
shl
push
popa
mov
in
fmul
xchg
cld
mov
adc
(bad)
mov
dec
out
jne
daa
mov
fnsave
xor
push
test
cmps
xor
push
popf
inc
ja
cmp
push
mov
push
xchg
call
pop
loope
adc
test
xor
test
or
cwde
nop
stc
or
imul
add
test
mov
ins
pop
mov
js
mov
mov
jge
pop
xor
mov
je
mov
ds
scas
popa
arpl
test
ret
mov
add
cdq
or
inc
and
push
fdiv
pop
add
xchg
push
push
cmc
push
cmc
mov
out
loop
enter
dec
mov
scas
jmp
or
out
push
mov
nop
call
mov
sbb
sbb
test
dec
repz
repz
add
mov
cmps
xor
dec
rcl
fs
daa
push
inc
and
cmp
jmp
inc
push
fistp
xlat
cdq
jb
lods
in
retf
jo
jmp
repnz
lods
pop
xchg
push
xor
loopne
loope
pop
add
mov
sub
cmp
cmp
jbe
jl
dec
inc
pop
push
mov
mov
out
mov
mov
cld
mov
int3
fwait
outs
cwde
inc
or
in
test
sbb
xchg
xchg
or
sbb
push
leave
shl
fist
mov
dec
dec
jmp
bsf
addps
test
mov
mov
inc
je
aas
rcl
xor
sub
and
(bad)
lods
and
rcr
mov
imul
push
xor
es
test
push
out
shl
xchg
inc
into
cli
mov
mov
test
gs
es
cmp
jnp
loop
sub
inc
lea
jne
imul
pop
rcr
jns
in
inc
pop
lea
push
mul
push
xchg
clc
adc
dec
add
outs
pop
lds
test
hlt
in
mov
or
push
rcr
lock
xor
add
les
je
sbb
sub
in
adc
pop
cmp
pusha
out
xchg
ror
leave
xchg
pop
mov
cli
xchg
jp
std
(bad)
xor
in
xchg
or
and
push
in
push
in
inc
jo
cmp
icebp
icebp
fndisi(8087
mov
ins
(bad)
outs
call
stc
jns
shl
mov
inc
xchg
cmps
cld
sbb
mov
xor
add
push
les
jge
out
ins
test
xchg
retf
test
aad
mov
fs
in
mov
aaa
aas
outs
inc
mov
leave
adc
fsub
dec
(bad)
xchg
mov
push
push
sub
mov
push
add
fucom
pop
cmp
outs
sub
fisttp
icebp
adc
pusha
sti
dec
jbe
jmp
cmps
ficom
dec
gs
xchg
scas
jmp
dec
xchg
scas
jle
sbb
push
test
and
pop
or
stc
(bad)
mov
sub
dec
pop
rol
(bad)
and
cs
fwait
add
js
pop
enter
add
loop
stos
jg
outs
sub
cmp
jle
(bad)
mov
test
mov
or
mov
pop
xor
mov
ss
ins
push
(bad)
clc
jecxz
arpl
sub
imul
sahf
add
inc
xchg
imul
cli
je
gs
sub
and
ficom
xor
or
iret
call
xchg
or
out
inc
movs
hlt
mov
ins
int3
mov
sbb
xor
and
and
cli
cmp
xchg
stos
arpl
cmps
mov
mov
sub
fs
and
retf
push
in
xor
aam
push
mov
mov
sbb
out
jmp
sub
inc
pushf
adc
mov
mov
push
enter
fistp
int3
and
xchg
mov
pop
shr
stc
sbb
adc
(bad)
dec
cmp
imul
or
out
scas
mov
fs
sti
pop
mov
jbe
outs
fsubr
and
xor
pop
in
sub
push
inc
addr16
adc
lods
sub
mov
leave
xchg
lock
mov
ins
ret
cld
mov
dec
sub
inc
add
rcl
pop
ror
dec
mov
xor
je
sbb
xor
mov
out
inc
repz
pop
leave
imul
dec
movs
add
retf
cmp
mov
xor
mov
push
xchg
scas
cmp
mov
das
sahf
push
add
jnp
hlt
fwait
rcr
xor
ror
lahf
dec
es
int3
mov
aas
mov
mov
inc
stc
mov
mov
inc
jnp
and
pop
out
imul
xchg
pushf
mov
sbb
subps
pop
cdq
sbb
push
or
pop
sbb
cli
ret
mov
inc
fsubr
push
or
fcomp
cwde
movlps
jge
dec
adc
add
or
mov
mov
fidiv
xlat
xchg
fld
sub
addr16
sar
inc
sbb
stos
lods
sub
aaa
dec
out
(bad)
or
and
mov
scas
out
aad
sbb
js
mov
mov
ja
mov
rol
es
jecxz
mov
pop
xchg
push
xor
mov
pop
repz
iret
xchg
mov
iret
jb
xchg
pop
ins
mov
ret
(bad)
ss
test
(bad)
out
sbb
cld
adc
(bad)
push
out
sub
popf
fsubr
js
mov
and
movups
adc
adc
sbb
and
dec
adc
jne
out
sbb
sbb
pop
cmp
and
or
mov
pop
dec
dec
loopne
lahf
cmp
mov
dec
inc
adc
fstp
push
mov
sar
aam
je
sbb
and
inc
cmc
in
shl
es
jmp
xor
mov
out
lock
mov
stos
xchg
cs
mov
inc
sahf
dec
xchg
jg
mov
cmp
fld
or
add
out
jle
add
and
iret
inc
test
call
xor
mov
addr16
aad
xchg
les
popf
or
outs
or
cmp
xchg
ror
xchg
lds
cmp
xchg
fist
cmp
(bad)
adc
ror
and
mov
push
jmp
and
sbb
pop
pop
xchg
(bad)
ror
push
lods
cld
mov
pop
lahf
adc
mov
jecxz
dec
mov
mov
mov
mov
dec
and
add
test
jle
scas
ret
mov
pop
adc
and
dec
dec
jle
jl
jns
jmp
test
jg
(bad)
sbb
or
imul
or
cmp
js
gs
cdq
push
push
xchg
cmps
cmps
aas
out
(bad)
add
ss
repz
outs
mov
push
jp
push
sbb
mov
and
mov
arpl
mov
ins
popa
adc
(bad)
mov
sub
arpl
xchg
adc
test
sbb
das
rol
rcl
jl
mov
mov
dec
dec
dec
and
dec
push
xor
or
hlt
mov
mov
js
shr
inc
shl
outs
fcomp
gs
dec
outs
in
int3
xor
sahf
leave
dec
call
pop
xchg
bound
clc
mov
xchg
dec
dec
mov
cs
out
jnp
cmc
shr
jge
loopne
jbe
(bad)
retf
mov
xchg
cdq
add
out
push
cld
xchg
pushf
repnz
es
repz
cs
andps
ror
jge
push
mov
cmps
dec
pop
jmp
or
push
jb
int3
mov
test
repnz
mov
xchg
push
xchg
jmp
push
daa
fcmove
cmc
(bad)
push
int
mov
ds
cli
mov
xor
fnstenv
push
ins
loope
pop
xor
out
repz
xlat
arpl
inc
pop
jne
rcr
fbstp
stos
(bad)
imul
shr
shl
(bad)
and
jmp
xchg
jo
lods
fst
pop
sub
xor
xchg
mov
cld
mov
push
gs
mov
pop
push
sub
jp
cmp
adc
rol
sub
adc
js
dec
add
mov
xor
in
jbe
imul
push
inc
mov
nop
adc
push
push
test
in
pop
cld
push
scas
mov
mov
int
adc
and
pop
call
sbb
mov
ins
or
push
push
mov
mov
fcomi
pop
ror
ss
std
push
fwait
jle
scas
xor
push
mov
fucomip
push
inc
cmp
imul
pop
xlat
stos
cmp
retf
xor
xlat
mov
imul
sbb
pusha
push
jne
data16
adc
fidiv
push
add
jg
xchg
out
aas
ret
sub
icebp
mov
movs
cmps
adc
test
stos
pop
rcr
jbe
dec
lahf
cmps
jmp
cmp
ss
xchg
add
mov
sbb
push
test
or
pop
stos
data16
or
dec
(bad)
js
in
inc
ds
imul
pop
int
jo
jnp
lock
sbb
mov
repz
adc
loop
inc
mov
mov
stos
cli
lods
dec
out
cs
xchg
retf
fild
lds
test
movs
jb
(bad)
addr16
mov
jne
inc
or
push
out
push
add
mov
sub
xchg
lods
outs
pop
add
xchg
es
xor
jbe
pop
in
cld
xor
leave
mov
in
or
or
dec
sbb
dec
pop
lock
dec
inc
and
jno
jns
jnp
daa
adc
inc
icebp
faddp
push
mov
in
add
mov
inc
(bad)
aad
out
cmps
sbb
push
mov
out
or
dec
dec
ror
cmp
cmp
inc
int
jmp
dec
sbb
lea
pop
mov
pop
fidiv
call
mov
cmps
imul
in
adc
sbb
push
push
adc
retf
mov
imul
in
sub
adc
mov
push
(bad)
cmp
adc
add
sub
outs
mov
jae
lods
imul
cs
cwde
sahf
or
xor
shr
dec
add
mov
push
mov
fbld
mov
hlt
xor
bound
pop
mov
(bad)
retf
div
sbb
bound
push
fistp
xchg
ja
mov
push
pop
jno
jbe
or
cmp
pop
fst
jnp
fisttp
ja
mov
mov
sahf
ins
sub
sbb
imul
jo
cmp
jg
dec
test
sbb
cmc
stos
or
iret
mov
sbb
push
movs
mov
and
pop
xor
sub
push
mov
fwait
dec
shl
adc
push
ret
jmp
xchg
or
mov
push
or
scas
jae
dec
test
imul
lock
cmps
cs
scas
mov
lea
dec
mov
inc
sahf
push
inc
mov
pop
jmp
(bad)
bound
inc
ror
pop
xchg
push
sbb
or
sub
ret
mov
or
push
jle
or
(bad)
adc
scas
push
ds
xchg
out
add
imul
cli
inc
add
push
pop
xor
sub
fisttp
retf
mov
cld
cdq
(bad)
mul
jp
pop
rol
or
pushf
sbb
xor
clc
cwde
repnz
and
xchg
xchg
ret
mov
add
push
jmp
mov
inc
add
scas
stos
js
pop
int
inc
into
(bad)
bound
and
sub
cmp
mov
mov
js
ds
cli
hlt
imul
xor
pusha
call
repnz
mov
dec
ficom
mov
adc
push
jmp
add
push
adc
lods
pop
fidiv
or
arpl
inc
mov
sub
ds
pop
add
push
and
mov
mov
add
cmps
hlt
leave
xchg
mov
xchg
jno
cmp
dec
mov
mov
out
push
cwde
iret
lahf
fmulp
lock
dec
repz
ins
xor
mov
xor
stos
inc
jmp
or
pop
sub
pop
mov
cs
adc
xor
ror
leave
mov
xor
mov
pushf
adc
xor
scas
mov
fs
xchg
out
dec
jae
pop
xchg
cld
xchg
lods
and
jne
out
enter
push
icebp
neg
(bad)
cmp
dec
xor
add
xor
xchg
pop
mov
out
pop
mov
mov
jno
inc
stc
xchg
imul
jle
mov
mov
out
stc
push
push
dec
xor
ror
pop
movs
jp
stc
neg
mov
sbb
clc
sar
icebp
ret
xor
dec
or
push
cld
dec
loopne
and
rcl
leave
in
sbb
adc
mov
jae
retf
adc
movs
test
mov
int3
mov
jmp
xchg
lock
jge
addr16
rcl
jo
cmp
dec
push
sbb
das
pop
shl
test
push
out
aaa
dec
push
and
mov
ret
arpl
popf
pop
or
xchg
jl
vpcomuq
mov
dec
mov
cmps
inc
inc
mov
cs
mov
xchg
push
sub
pusha
in
aas
xor
xchg
dec
dec
and
shr
dec
and
out
imul
jge
jo
mov
jmp
inc
cmp
lea
mov
push
add
jg
es
push
dec
es
repnz
xor
jae
ins
inc
jp
push
aas
xor
daa
xchg
pop
shl
cmp
xchg
scas
cdq
adc
(bad)
cmp
xchg
sub
jle
and
shl
outs
outs
fnstsw
mov
ds
or
mov
jmp
adc
loop
jmp
ins
out
bound
dec
adc
icebp
adc
pop
je
push
lods
mov
push
gs
sub
retf
icebp
adc
and
test
js
sbb
inc
jecxz
adc
mov
dec
pop
add
sub
into
sar
mov
and
shl
pop
cmc
add
cmp
push
push
(bad)
ret
xchg
xchg
shl
adc
aaa
pop
das
popf
cli
sbb
xchg
hlt
jmp
dec
fwait
jg
mov
fwait
mov
pusha
mov
xor
jl
and
or
scas
in
ins
cli
test
xlat
div
imul
pop
and
inc
leave
adc
dec
sub
iret
xchg
aad
(bad)
adc
and
jg
ss
jmp
push
jl
jnp
loope
jmp
xor
stc
sub
jb
out
repnz
les
(bad)
in
stos
push
(bad)
or
ins
pusha
add
inc
cmp
xor
and
pop
mov
call
xchg
fs
cli
(bad)
call
xchg
xlat
sbb
adc
addr16
sbb
retf
and
out
xrelease
mov
mov
bswap
aaa
adc
jg
lea
hlt
ret
dec
scas
mov
mul
lock
pop
test
pop
aaa
ds
scas
sub
test
and
cmp
pop
push
mov
xlat
mov
mov
jl
and
jmp
sbb
les
int
or
out
outs
popf
jns
sbb
jl
sub
xor
ror
lods
push
and
(bad)
int
int3
outs
shr
push
pop
xchg
stos
sbb
mov
(bad)
mov
sub
pop
retf
popf
jbe
aad
iret
fld
pop
loop
sbb
jbe
xlat
aad
adc
adc
arpl
mov
(bad)
fld
jb
pop
or
rol
dec
mov
or
or
das
sbb
xchg
sbb
lea
cwde
mov
sub
sub
retf
mov
adc
test
pop
(bad)
dec
cld
push
sahf
retf
pop
cmc
dec
cmc
call
or
out
xor
scas
imul
xor
stos
icebp
fiadd
sahf
fucomi
(bad)
xchg
push
adc
lock
push
mov
addr16
inc
mov
xchg
mov
popa
out
loop
daa
pushf
push
popf
cld
fst
sahf
push
es
lahf
sub
jns
jae
sti
mov
adc
jne
imul
outs
in
ins
fisub
(bad)
cmp
sub
sub
mov
(bad)
jle
add
(bad)
pop
shr
in
or
jp
in
inc
ins
jmp
add
and
mov
data16
outs
pop
dec
stos
sbb
ins
jmp
jge
mov
ror
aad
mov
and
test
sbb
lods
fbstp
push
clc
sub
mov
pop
inc
popf
jle
pop
addr16
fmul
jmp
jb
mov
mov
xor
icebp
rol
xlat
cmp
add
or
ret
lahf
aaa
xor
dec
sub
enter
gs
iret
cwde
xchg
popf
scas
xchg
inc
jl
shld
and
jns
xchg
or
ja
ret
adc
inc
sahf
clc
xor
cmp
ins
push
xchg
cwde
push
pushf
push
lea
cdq
and
push
pop
mov
(bad)
lods
aaa
fadd
xor
outs
call
mov
cdq
dec
scas
mov
cwde
dec
loopne
je
push
mov
dec
mov
adc
xor
push
mov
je
or
jno
clc
xor
test
fist
in
imul
gs
mov
jmp
jbe
mov
in
repnz
stc
in
push
ins
div
push
out
int
add
jmp
aas
xchg
dec
fdiv
ret
xchg
pop
pop
cmps
lds
inc
test
jbe
aaa
mov
xor
push
jae
iret
and
mov
sbb
scas
fild
pop
xchg
inc
add
fld
fmul
movs
cs
mov
push
dec
mov
loopne
pause
mov
rol
fiadd
and
jae
ret
push
lock
daa
outs
add
(bad)
jmp
inc
jl
jge
inc
sbb
pushf
cld
xor
std
mov
imul
shr
xchg
add
inc
scas
fisub
fwait
enter
rcl
sbb
sub
or
shr
arpl
fiadd
mov
out
inc
jle
push
fist
lea
pop
mov
or
and
xchg
mov
ja
je
sub
add
das
pop
shl
inc
rcl
sub
and
fdiv
or
in
xlat
add
adc
cdq
pushf
pop
push
xor
imul
mov
xchg
aaa
mov
shl
and
mov
test
push
in
fwait
and
jge
xchg
clc
retf
int3
(bad)
in
int3
mov
jae
adc
call
pushf
mov
mov
pop
ins
push
loop
jnp
push
jbe
lods
stc
int
in
pop
add
jmp
sbb
jo
jp
cmp
xchg
pop
push
iret
jb
adc
fnstenv
mov
pop
jge
pop
cs
stc
into
lods
loop
scas
and
popa
add
mov
adc
mov
outs
sbb
sbb
cdq
(bad)
sbb
rcr
push
vcvttpd2dq
popa
lds
push
retf
sub
mov
popf
push
repnz
clc
inc
not
pushf
aad
jecxz
std
test
mov
sbb
sti
mov
in
jno
jb
mov
hlt
or
cmp
xchg
add
push
bnd
mov
and
or
scas
imul
add
mov
(bad)
inc
loope
adc
scas
(bad)
hlt
das
repnz
aad
ror
test
xchg
jmp
mov
or
mov
inc
daa
sbb
sbb
mov
ror
dec
fmul
add
aad
pop
ss
pop
cmps
in
jae
and
es
and
das
mov
mov
rol
jl
psubsw
cmp
or
and
arpl
hlt
inc
comiss
loop
push
inc
dec
jns
sbb
cli
(bad)
jmp
push
push
iret
pop
mov
movs
dec
mov
sub
xchg
mov
lods
sub
aaa
daa
pop
pop
or
dec
mov
pop
sbb
in
cmps
dec
xor
mov
bound
aad
jle
sub
jl
pusha
js
pushf
cmp
lahf
adc
mov
arpl
mov
jg
sub
mov
pop
inc
js
jns
data16
add
scas
ja
cmp
or
xor
shr
ins
pop
add
jp
inc
mov
fdiv
rol
dec
pop
std
mov
inc
pop
(bad)
dec
pop
add
xchg
sbb
mov
rcr
cmps
or
vmovntps
mov
stos
inc
ss
rcr
inc
and
jbe
scas
mov
mov
fist
or
dec
inc
inc
(bad)
cld
cli
stc
sub
repnz
or
std
xchg
xchg
fstp
cwde
stos
retf
or
leave
dec
fnstcw
push
aas
pop
imul
jg
mov
jbe
pop
mov
xor
mov
pushf
inc
or
js
dec
push
pusha
icebp
je
data16
clc
add
inc
and
out
dec
dec
sbb
bndstx
sbb
adc
cli
aam
arpl
ds
(bad)
mov
popa
xor
pop
xchg
dec
mov
rcr
mov
mov
xor
sbb
test
pop
jb
test
pop
mov
xor
adc
mov
ss
jo
add
inc
ds
mov
mov
inc
fiadd
cmc
shl
pop
sub
ja
jns
aas
pop
sbb
mov
rol
inc
icebp
and
stc
pop
dec
js
or
xchg
inc
sbb
jecxz
pop
mov
inc
and
pop
add
ret
lahf
aam
cwde
xchg
jne
inc
cs
shl
ja
ret
mov
ja
retf
xchg
sbb
jbe
and
sbb
ret
sahf
push
stc
fild
cs
and
mov
add
dec
and
push
out
adc
(bad)
pushf
dec
xor
xchg
push
push
daa
pop
aam
add
scas
jne
mov
mov
jl
pusha
cli
mov
xor
xchg
push
xchg
in
jns
pop
sub
loop
std
(bad)
lds
xchg
fadd
in
xchg
cwde
aad
mov
push
(bad)
mov
sub
mov
pop
aaa
inc
pop
push
push
out
bt
(bad)
out
push
sbb
cmps
je
call
dec
dec
mov
rol
sub
add
jo
or
jbe
imul
add
xchg
pushf
sbb
xchg
bound
mov
addr16
aam
add
push
mov
(bad)
inc
xlat
add
aam
nop
mov
sub
std
das
mov
inc
mov
aad
push
xor
and
push
out
adc
(bad)
jmp
fimul
sbb
stos
or
sbb
push
mov
(bad)
(bad)
and
cmp
mov
in
ret
arpl
neg
call
cli
retf
cli
and
cmp
sti
mov
adc
push
sub
mov
les
cmp
leave
sahf
xchg
cdq
fimul
ror
fild
or
cdq
dec
out
lahf
xor
mov
xor
jb
mov
mov
dec
or
mov
inc
jmp
test
mov
mov
aad
gs
lods
stos
clc
cmp
retf
clc
or
arpl
scas
jmp
push
or
(bad)
sbb
cld
lds
addr16
mov
add
sbb
push
retf
data16
mov
fadd
mov
push
mov
(bad)
jno
ret
sub
icebp
adc
jns
outs
(bad)
pop
jl
xchg
inc
iret
dec
shr
aaa
repz
aad
push
movs
fucom
popa
sti
mov
aas
lods
mov
scas
or
ret
inc
jnp
fwait
cmps
enter
outs
xchg
mov
pop
in
inc
inc
adc
js
lods
ss
xchg
sub
jmp
aam
xor
xor
fdivr
iret
in
ja
(bad)
and
sub
cdq
ins
xchg
pusha
cdq
sahf
xchg
es
adc
push
pop
jmp
outs
pop
in
xchg
cmc
test
es
push
jmp
dec
sbb
pop
mov
ret
mov
mov
xchg
fisubr
sbb
sub
push
or
push
(bad)
or
sub
(bad)
inc
sub
cli
xor
and
mov
mov
mov
or
sahf
jg
sub
pusha
pop
and
int
inc
push
adc
push
aad
cld
add
pop
loop
cmc
or
(bad)
mov
adc
lds
adc
loopne
je
add
push
pop
lds
inc
shl
ins
pusha
retf
xchg
pop
jne
int
jmp
repz
adc
call
inc
push
jmp
nop
dec
aas
out
outs
sbb
ja
ror
or
push
mov
sub
ret
outs
or
(bad)
popa
fldenv
stos
ror
rcr
mov
xor
enter
pop
hlt
jae
xor
fidiv
movs
xor
push
dec
cwde
jne
push
sub
mov
iret
sbb
sub
cmp
mov
pop
test
test
lock
mov
xchg
sub
imul
aas
push
mov
je
leave
mov
imul
fs
fnstcw
or
mov
or
imul
mov
mov
ficomp
xlat
jmp
je
out
pop
inc
push
popa
mov
jmp
mov
leave
jno
cld
sbb
sbb
ja
xchg
jecxz
rcr
mov
bound
and
dec
setge
xor
or
mov
xchg
mov
inc
mov
js
add
test
cpuid
add
outs
pop
push
ret
pushf
(bad)
test
cmp
dec
fcomp
push
and
jl
jge
aam
jp
fs
out
sbb
pop
or
push
xlat
movs
aas
cmc
mov
inc
aaa
test
aas
add
xchg
movs
in
mov
or
out
inc
push
xchg
outs
inc
mov
out
fistp
push
adc
mov
sbb
xchg
push
add
xor
add
dec
inc
mov
repz
int
outs
shl
inc
or
jge
sub
fld
or
jbe
ret
xchg
mov
sub
les
cld
(bad)
test
mov
xchg
push
(bad)
std
jmp
inc
std
fwait
lock
outs
dec
pop
sub
outs
fnsave
ss
pop
sar
daa
popa
inc
sub
rcr
push
dec
xor
jge
xor
pop
push
dec
aad
mov
cdq
arpl
mov
movs
xchg
js
cmps
jge
jecxz
cmp
hlt
out
aad
into
aas
icebp
lods
push
dec
nop
ret
or
jno
fld
jns
sbb
ret
fcomp
push
sahf
idiv
es
jmp
enter
xor
jbe
jmp
scas
cli
adc
fisttp
sbb
push
lods
push
add
mov
out
(bad)
loopne
or
imul
lods
mov
hlt
ror
mov
imul
pop
dec
sub
ficom
imul
movs
sbb
stc
xor
pop
dec
mov
push
adc
mov
push
and
out
cmps
hlt
bound
test
into
mov
neg
int
sti
test
shl
push
lds
pop
inc
(bad)
pop
pop
mov
enter
sahf
add
mov
enter
cmp
adc
leave
repnz
mov
cmp
mov
ss
test
int3
int3
dec
jae
popa
xchg
pop
lock
or
aad
cs
addr16
jg
xchg
jo
dec
cmp
cld
fstp
mov
test
xor
sub
stos
in
test
les
add
mov
sbb
or
adc
jl
inc
xor
dec
leave
adc
and
sub
push
cmp
sbb
shr
mov
pop
sbb
mov
fnstcw
neg
push
or
scas
or
jge
jecxz
inc
jnp
dec
mov
ret
xchg
add
in
ins
cmp
mov
popa
in
shl
pop
or
sub
mov
sub
cli
neg
jg
mov
fcomp
inc
add
(bad)
xchg
and
push
cs
mov
les
ss
imul
cmps
pop
xor
shl
imul
pop
or
and
inc
loope
inc
inc
adc
xchg
fldenv
and
jbe
enter
daa
stos
adc
(bad)
nop
mov
adc
stos
sbb
lahf
dec
stos
cmp
cmc
cwde
adc
push
mov
stos
stc
into
aam
mov
mov
popa
pop
inc
mov
add
xchg
jb
mov
inc
pop
mov
inc
scas
push
outs
inc
adc
aad
mov
stos
call
in
cmp
xchg
aad
ds
push
gs
inc
outs
stos
jge
jno
fiadd
mov
xchg
adc
cs
xor
pusha
jmp
in
pusha
jge
mov
into
enter
pop
movs
adc
add
xor
mul
pop
cmp
cdq
mov
xchg
pop
add
(bad)
xchg
mov
(bad)
mov
jmp
scas
mov
xchg
xchg
(bad)
fstp
pop
xor
fistp
and
ret
cmp
inc
sub
xor
rcr
es
or
mov
clc
dec
mov
pop
mov
pop
push
cld
out
lds
ds
sub
xchg
gs
test
lock
sub
add
and
fild
dec
or
inc
mov
sub
int3
jmp
in
mov
sbb
inc
cmps
pusha
rcr
outs
xchg
mov
add
mov
push
jl
mov
test
lods
adc
sub
xor
mov
(bad)
jno
arpl
repz
scas
je
cmp
adc
mov
fcom
in
push
test
inc
add
jns
and
pop
call
push
fwait
sbb
imul
xor
sti
sub
ret
lods
cmp
inc
xchg
popa
iret
cmp
cmps
out
pop
xor
retf
jle
sar
add
jo
xor
push
in
cmp
sub
or
pop
test
cmp
sbb
sub
lods
in
cmps
mov
mov
sbb
inc
(bad)
xchg
outs
mov
push
mov
pop
or
iret
mov
pop
push
inc
or
cmp
lods
mov
xor
pushf
and
out
adc
ret
int
mov
fbld
fisubr
lods
cmps
arpl
les
adc
or
xor
or
pusha
xor
cmp
mov
fisttp
jmp
vucomiss
push
xchg
inc
out
cmp
fcmovnbe
aad
imul
mov
pusha
and
into
mov
cmp
idiv
xchg
das
mov
jge
jl
jb
ret
dec
mov
push
pop
mov
movs
add
and
jecxz
pop
or
or
popf
push
cwde
cmp
add
clc
(bad)
ret
push
mov
inc
and
jg
into
cmp
hlt
mov
mov
popf
push
cli
lds
jmp
pusha
sbb
and
(bad)
cmp
popf
bound
mov
into
test
nop
pop
jo
fadd
inc
sbb
add
nop
adc
mov
fsubr
fsubrp
mov
hlt
daa
sub
outs
sbb
cmp
jmp
xchg
fld
inc
lea
push
rol
cmp
icebp
xor
lea
ror
out
cli
jge
(bad)
fidivr
xchg
ins
fidivr
jbe
lds
aaa
cwde
push
pop
stos
ins
out
jb
mov
adc
enter
add
imul
pop
shl
mov
jp
cmp
mov
mov
mov
scas
sbb
rcl
sub
stc
retf
popf
jbe
cmp
dec
dec
sbb
and
or
mov
test
mov
in
das
int
push
jle
jmp
dec
rol
sub
push
outs
and
inc
sub
adc
(bad)
out
mov
cmp
cld
mov
in
stos
add
jecxz
icebp
jmp
call
sbb
add
sub
inc
daa
leave
jmp
xchg
fdivr
iret
shl
lock
xchg
add
clc
jbe
fstp
mov
inc
xchg
fdiv
xchg
mov
and
and
fisubr
xchg
retf
mov
xchg
aas
rep
mov
fmul
in
add
sbb
adc
mov
add
lods
jo
hlt
xchg
(bad)
ins
sbb
and
ficom
in
jne
sub
ins
inc
gs
das
fdivrp
adc
(bad)
mov
mov
fadd
pop
sub
repnz
sbb
icebp
pusha
dec
cmp
dec
ss
push
into
pop
(bad)
popa
loope
pop
xchg
sub
mov
sbb
out
addr16
push
sti
test
push
pop
and
cmp
retf
add
xchg
sub
mov
jb
fsub
fwait
std
xor
jp
sbb
adc
mov
jg
gs
repz
dec
mov
ret
dec
daa
xchg
sub
cmps
mov
scas
mov
ret
jmp
add
add
cmc
retf
xor
adc
and
or
xor
mov
push
add
movs
push
bound
fsub
or
jno
jmp
fcmovnbe
inc
popa
and
jno
rcl
pop
fimul
retf
cs
loope
inc
xor
mov
mov
mov
popa
and
inc
sub
fs
xchg
shl
mov
sahf
mov
fwait
inc
mov
enter
push
imul
fs
push
inc
jecxz
mov
xor
sbb
shl
adc
or
xchg
out
and
mov
sbb
cmps
mov
popa
and
jae
and
jae
fist
mov
mov
les
mov
xlat
lods
cmps
pushf
ins
mov
ret
cmp
add
pop
dec
imul
sar
xor
sub
out
repnz
sbb
or
bnd
icebp
in
test
mul
sbb
push
push
test
jo
cmp
mov
shl
xor
mov
adc
and
inc
mov
or
push
and
xchg
movs
call
mul
enter
test
adc
inc
xchg
jns
add
sbb
fcom
clc
push
mov
dec
cmp
(bad)
nop
add
retf
cmp
dec
inc
push
ins
sahf
xchg
xor
sub
mov
sahf
loope
xchg
jl
ins
adc
adc
es
fimul
xor
fxam
mov
nop
or
pop
inc
add
add
sahf
fistp
leave
lahf
bnd
cli
or
mov
xchg
stos
popf
movs
lds
jae
xor
adc
cmp
(bad)
(bad)
dec
ficom
xchg
inc
dec
mov
xchg
cmp
and
and
jl
test
outs
xor
xchg
fnsave
adc
jle
ins
add
mov
or
mov
sbb
sub
(bad)
repz
(bad)
push
dec
stos
dec
xchg
pop
repz
add
mov
xchg
out
fsubp
push
pop
iret
pop
fisttp
sbb
jbe
sbb
pusha
sub
mov
cmp
or
je
aam
dec
push
cmp
mov
push
cdq
gs
mov
loopne
xchg
inc
out
pop
cwde
int
inc
pop
int
jns
and
or
int
cmp
and
dec
int3
or
fild
push
adc
loope
pmaddwd
frstor
inc
fidivr
addr16
pop
retf
test
test
pop
xor
inc
inc
lods
xchg
js
shl
add
pop
fcomp
pop
xor
out
cmp
inc
push
sbb
xor
mov
pop
ret
sub
popa
loope
xor
mov
cmp
push
pop
xor
sbb
mov
cmp
inc
gs
inc
or
add
outs
pop
xor
mov
in
and
add
pop
push
out
aaa
int
xor
add
je
cmp
cmps
sub
out
iret
pop
jmp
fild
dec
in
mov
pop
xchg
xchg
aaa
lea
inc
inc
xchg
mov
jbe
add
jmp
adc
clc
dec
aaa
sub
repz
cmp
sahf
dec
cmps
jbe
int
imul
and
mov
cmc
add
push
xor
mov
ss
lods
jmp
xchg
je
add
pop
lds
cli
jge
icebp
jp
bound
out
adc
xor
fdivr
mov
lds
pop
sub
mov
jg
cmp
and
mov
in
shl
sar
(bad)
rcr
mov
(bad)
lds
fadd
int
mov
jbe
imul
nop
jae
mov
cmps
jno
push
cmp
std
hlt
sbb
in
sub
leave
xor
cmc
cmp
daa
test
push
mov
mov
pop
imul
das
jnp
imul
in
sbb
je
xlat
aad
dec
cmovl
into
mov
xchg
cmp
push
mov
push
retf
sbb
pop
add
dec
cmp
imul
xchg
and
test
cmp
sub
das
pop
dec
dec
(bad)
imul
adc
repz
(bad)
adc
xchg
and
adc
mov
loope
xchg
call
shl
xchg
test
shl
daa
cmps
xchg
js
xchg
mov
cmp
(bad)
and
jnp
pop
fs
xchg
not
retf
mov
dec
sti
push
outs
outs
sbb
cmp
jo
fsub
test
mov
fisttp
sbb
movs
xchg
adc
dec
test
pop
adc
ins
sub
shr
lods
icebp
mov
shl
and
scas
sbb
xor
dec
ret
int3
test
mov
push
add
sbb
add
mov
mov
pop
jge
test
push
test
daa
out
or
bound
inc
scas
lea
adc
and
inc
cmps
jb
ins
imul
je
mov
and
mov
into
or
add
in
retf
mov
and
mov
(bad)
jge
jg
sbb
dec
mov
or
push
mov
cmps
sti
jbe
mov
mov
sub
out
dec
outs
fwait
pcmpeqd
loopne
not
outs
sbb
scas
mov
sbb
pop
cmp
inc
dec
pop
out
and
mov
outs
rcr
cs
out
ret
neg
jge
lods
mov
jbe
mov
std
in
clc
(bad)
xor
or
add
scas
cmp
cli
or
enter
dec
test
or
cmps
pop
lods
in
push
add
mov
aad
(bad)
pop
into
int
out
mov
int3
das
push
adc
je
mov
shl
loopne
add
sbb
es
push
aaa
sbb
sub
loope
push
repnz
inc
mov
ficomp
push
cs
pop
push
xchg
ret
ss
das
scas
lods
jle
loopne
add
or
jmp
xchg
test
loop
push
ret
ret
xchg
push
mov
stos
xor
call
jecxz
je
jmp
(bad)
jp
clc
into
stc
out
pop
retf
sti
data16
jae
push
loop
(bad)
xlat
movs
jmp
mov
lahf
and
je
add
mov
sti
pop
dec
xor
data16
jns
popa
cmp
outs
(bad)
mov
cmc
in
mov
(bad)
cmovns
sub
lods
imul
jg
shl
adc
xchg
cdq
add
mov
sahf
mov
ja
or
mov
test
call
cld
mov
mov
mov
mov
imul
or
sub
xor
call
pop
push
mov
stos
stos
mov
or
push
das
out
inc
xor
imul
int
xchg
and
mov
xchg
lods
ja
dec
outs
jne
sbb
push
imul
adc
pop
in
aaa
nop
or
(bad)
pop
cmp
mov
fcmove
push
mul
jo
xchg
scas
and
mov
out
sub
outs
mov
ret
pop
je
jnp
shl
cmps
adc
adc
and
mov
dec
push
movs
add
mov
ja
adc
cmps
ret
or
cwde
daa
pusha
mov
dec
inc
mov
(bad)
sti
pop
xchg
mov
pop
or
js
mov
lock
dec
fbld
iret
jae
aas
sbb
push
pop
jae
jmp
out
int
sbb
(bad)
pop
sbb
mov
cmp
pop
xchg
aam
sbb
sbb
or
adc
mov
not
dec
nop
jne
cmp
mov
ror
ds
ds
mov
sub
mov
fxam
inc
xchg
imul
out
sbb
int
fdivr
sbb
(bad)
repz
test
sbb
xchg
add
adc
sbb
outs
imul
jo
mov
sbb
jp
push
xchg
stos
jmp
sbb
pop
mov
ja
test
pushf
sbb
push
sbb
movs
inc
xor
rol
(bad)
nop
mov
(bad)
sti
dec
push
or
and
mov
xchg
mov
dec
mov
mov
cdq
or
sub
cmp
fwait
adc
in
mov
inc
dec
stc
in
push
cmp
add
push
add
mov
in
cwde
fmulp
lahf
int3
fsubr
mov
retf
inc
mov
sbb
jmp
cld
sub
sbb
(bad)
into
cmps
in
gs
mov
aam
mov
or
push
or
push
add
push
mov
adc
shr
xchg
fistp
mov
add
mov
jns
xchg
jl
adc
lods
mov
or
fcomp
stos
adc
xchg
or
ret
aam
fild
xchg
cmp
push
sbb
ds
sub
jmp
(bad)
out
movs
fcom
pop
mov
lods
sbb
mov
jl
sub
(bad)
scas
fdivrp
push
retf
rol
fsin
xchg
scas
outs
int3
rol
dec
jl
and
or
call
sub
add
out
dec
pop
xor
push
add
enter
inc
push
fdiv
in
repz
push
stos
pop
add
(bad)
mov
mov
call
fmul
scas
fcom
dec
adc
lahf
push
cmc
push
fmulp
aas
xchg
out
add
enter
cmp
ins
mov
jae
mov
xchg
das
movs
cmps
inc
pop
add
sahf
or
movs
mov
cli
sahf
jg
retf
ja
jb
imul
adc
sbb
pop
test
and
xor
xor
(bad)
std
dec
sti
enter
loop
or
jno
push
sbb
lock
in
call
into
push
mov
xor
lahf
fidivr
int3
jmp
aam
je
adc
scas
mov
scas
xchg
int
out
or
(bad)
push
push
and
int
xor
adc
push
mov
add
jne
sub
adc
test
jnp
mov
adc
test
mov
in
mov
out
out
cli
mov
xlat
and
out
jmp
cmp
stos
adc
pusha
jmp
lods
cmps
jbe
jne
repz
mov
addr16
loop
push
dec
cmp
push
sbb
inc
mov
jle
mov
jbe
jle
jle
repz
lods
push
xchg
ds
ins
or
xchg
enter
repnz
cmp
jnp
ins
adc
(bad)
lods
sub
sub
mov
jge
addr16
pusha
sbb
adc
aaa
adc
retf
fld
inc
mov
push
ins
or
scas
fidiv
push
adc
clc
fwait
jnp
or
js
in
xchg
jmp
xor
inc
leave
push
repz
inc
push
sbb
popf
xor
and
mov
stc
call
test
ja
inc
jbe
adc
push
mov
xchg
neg
or
sbb
cmps
imul
lock
push
(bad)
or
xchg
sbb
dec
lods
add
mov
jo
xchg
ds
jmp
outs
pop
arpl
mov
dec
int3
jb
and
pop
push
xchg
lea
adc
jmp
pushf
pop
mov
shl
jl
pop
icebp
sub
loop
into
fisub
enter
push
inc
daa
or
sahf
jmp
cmp
sar
cmp
(bad)
mov
mov
clc
mov
or
popf
jb
or
cli
xor
xchg
ret
pop
cmp
dec
dec
enter
imul
aad
mov
sahf
repz
loope
or
or
rcl
mov
xlat
ins
stc
or
ffree
xchg
jnp
fdiv
add
popf
clc
lods
mov
call
or
push
or
push
lea
jo
ret
push
jns
pop
inc
stc
add
and
sub
ins
mov
add
mov
mov
(bad)
test
inc
sbb
(bad)
adc
or
adc
adc
aad
pop
add
sbb
lahf
pop
xchg
into
fwait
add
test
add
sahf
push
aas
cmp
sub
jbe
aaa
mov
push
push
imul
push
out
jb
mov
xchg
cmp
dec
sub
mov
movs
fwait
mov
push
outs
xchg
pop
loopne
pop
jecxz
out
mov
push
push
aas
sub
fidivr
jb
fwait
outs
pusha
or
or
rcr
dec
scas
movs
push
cmp
push
popa
mov
fwait
xor
push
and
stc
in
adc
fist
nop
mov
dec
loopne
push
imul
mov
int
adc
enter
push
mov
mov
imul
imul
push
push
ror
iret
lods
jle
int
icebp
mov
fld
and
arpl
inc
jge
ror
xor
call
outs
les
leave
jae
adc
fwait
jbe
fdivr
xchg
adc
pop
fwait
push
fcom
test
push
xor
imul
retf
push
out
jne
dec
fucompp
(bad)
ror
mov
and
xchg
push
fstp
sbb
lock
adc
outs
mov
leave
xchg
xchg
sti
lahf
xor
xchg
(bad)
movs
scas
pop
scas
jmp
sub
(bad)
fwait
scas
adc
fwait
sub
push
(bad)
retf
and
outs
fwait
jne
jo
int3
mov
mov
shl
mov
cmp
inc
and
mov
and
jmp
(bad)
ins
and
sub
mov
xchg
ins
or
xor
test
cmp
lock
test
cmp
jmp
test
call
mov
hlt
test
stos
aas
add
ret
adc
inc
sub
mov
sub
xchg
jp
pop
mov
(bad)
out
inc
jbe
sbb
scas
aad
test
outs
ds
mov
or
call
shl
dec
adc
xor
dec
xchg
or
mov
rcl
jle
(bad)
enter
mov
leave
scas
ss
retf
nop
stos
mov
inc
js
mov
inc
hlt
loope
ins
in
mov
dec
aam
fs
xor
pop
loope
add
sar
dec
inc
enter
mov
mov
ins
pop
sub
ds
(bad)
hlt
xchg
jno
aam
or
mov
aam
mov
test
push
jp
sub
push
jl
inc
mov
or
bound
dec
adc
sbb
cwde
xor
data16
(bad)
ja
and
rcl
ds
in
sbb
pop
hlt
jae
push
retf
call
mov
xchg
pop
scas
fcomp
dec
add
xchg
push
xchg
mov
repz
loopne
push
dec
push
out
sbb
out
pop
paddsw
mov
ins
loop
pop
xor
mov
fadd
mov
sbb
and
jb
adc
shr
into
mov
jl
adc
aas
adc
ret
xchg
test
push
jecxz
mov
hlt
xchg
out
outs
fucomip
xchg
sbb
lock
cmp
test
outs
ja
das
mov
imul
push
mov
ror
pop
and
sbb
pusha
add
xor
fwait
or
xor
ficomp
add
push
out
inc
push
(bad)
mov
or
stc
adc
ret
leave
into
xchg
div
pop
pusha
xor
les
int
mov
repnz
inc
and
icebp
push
daa
mov
mov
pop
pop
out
cmp
pop
inc
sub
jo
dec
in
xchg
sub
into
mov
xor
xchg
and
and
push
push
jns
sub
sahf
or
cli
mov
mov
lds
pushf
arpl
inc
mov
jge
mov
pop
cmp
ins
in
outs
mov
sub
cmps
data16
aas
retf
inc
mov
(bad)
pushf
mov
dec
outs
jecxz
or
retf
xor
dec
call
jbe
outs
jg
xchg
and
xchg
(bad)
loopne
cmp
cwde
jecxz
mov
js
fwait
adc
dec
jl
sub
in
leave
frstor
push
(bad)
popf
les
or
cmps
je
xor
push
outs
fsubr
test
fsubp
ja
mov
or
cld
in
xlat
push
jns
pop
mov
(bad)
cmc
cmp
adc
in
iret
fld
dec
ins
xchg
adc
pop
rcl
mov
js
or
inc
retf
add
push
dec
sbb
dec
jbe
mov
jmp
(bad)
add
ret
and
popf
dec
(bad)
pop
jns
jl
xchg
sbb
mov
je
xor
leave
cmp
adc
jmp
iret
mov
xchg
push
imul
shl
mov
and
xchg
sbb
or
in
mov
mov
ror
adc
movs
shl
mov
pop
push
aam
fidivr
les
and
pop
xchg
leave
add
jae
inc
call
pop
mov
sub
jl
sub
or
pusha
push
les
jl
cmp
in
xchg
inc
mov
cmps
sti
adc
mov
jns
jae
sbb
lods
ss
ret
mov
sub
and
push
in
dec
lods
popa
push
repz
(bad)
cli
inc
pop
jecxz
pop
pop
and
out
imul
div
clc
mov
ficomp
dec
std
dec
scas
fcmovb
imul
fwait
and
or
int3
out
outs
mov
push
dec
scas
leave
xchg
aad
sbb
ss
fbld
inc
cli
sbb
cmp
pop
(bad)
in
cmp
xchg
jb
xchg
popf
sbb
shl
repnz
cmp
mov
jecxz
sbb
lods
pop
rol
adc
das
lea
cmp
js
nop
cmp
xchg
push
out
and
dec
(bad)
es
add
cli
je
inc
rcr
cmp
mov
xlat
pop
aad
sahf
nop
sbb
outs
jle
xor
nop
xchg
stc
mov
mov
ret
in
pop
pop
popf
or
jge
mov
mov
dec
cmp
neg
mov
mov
add
sub
idiv
mov
loop
xchg
mov
or
pop
jno
push
cmp
(bad)
sub
push
repz
lock
sbb
ins
aas
pop
or
sub
loop
xchg
mov
loope
cmps
cli
cwde
pusha
push
call
mov
add
xchg
add
out
xchg
loop
adc
sar
dec
add
jecxz
pxor
sahf
inc
mov
nop
bound
push
inc
fild
jmp
ins
aaa
inc
aam
jae
ret
mov
cmp
inc
xor
dec
retf
std
shl
and
cmp
shr
push
push
sub
mov
lock
pop
test
daa
adc
sub
inc
push
jl
ret
stos
and
xchg
push
fist
mov
clc
add
aad
jmp
fisttp
in
mov
and
add
fisttp
xchg
xchg
aad
and
jmp
jge
shl
ss
call
aad
std
fbstp
mov
les
out
into
push
fstp
into
cli
scas
aad
inc
lock
in
lods
dec
xchg
or
cmp
pop
test
aas
rcl
int3
jne
jae
pop
aam
dec
push
es
retf
imul
ins
out
mov
cmp
cmp
adc
div
fsub
lock
or
shl
pushf
ins
xor
inc
icebp
ret
push
imul
cmp
outs
pop
xchg
cdq
mov
cmc
cmp
test
inc
jns
addr16
xchg
das
js
ins
adc
cmp
stc
inc
dec
and
push
movs
out
xor
mov
jb
ss
sbb
pop
ins
pop
in
leave
cmps
push
jbe
mov
loope
bound
push
ss
xlat
add
and
retf
int3
xor
sbb
and
sti
(bad)
loop
mov
mov
icebp
shl
dec
enter
xor
mov
mov
mov
cli
test
outs
nop
mov
jo
dec
pop
dec
or
jns
imul
dec
adc
pushf
mov
fiadd
out
mov
xor
jge
pop
cmp
jmp
dec
js
out
cmp
xor
aaa
mov
aam
jmp
mov
ret
sbb
dec
dec
inc
test
sbb
push
stos
jp
push
js
aas
movs
test
xchg
pop
xchg
or
fwait
xchg
mov
icebp
push
mov
pop
push
or
and
cmp
movs
je
fs
cmps
out
(bad)
or
lea
es
push
push
in
fcom
add
mov
and
test
adc
push
push
cmc
clc
cwde
jbe
movs
into
mov
push
repnz
jp
cmp
mov
into
mov
add
(bad)
loopne
dec
js
movs
jmp
lahf
xlat
add
mov
daa
pop
mov
imul
pop
mov
and
imul
add
ja
pop
mov
out
pop
dec
out
jo
fistp
cwde
ins
adc
mov
dec
int
ds
imul
or
mov
mov
jp
call
cmp
stos
data16
dec
ja
inc
lock
push
pop
int3
xor
int
rcr
repz
call
sahf
into
jmp
xlat
xchg
lock
pop
push
push
fldl2t
jp
bound
not
(bad)
out
mov
scas
dec
dec
xchg
or
xchg
hlt
ror
test
inc
jmp
jl
les
sahf
push
push
retf
ror
xor
in
mov
fnsave
push
jmp
int
mov
adc
inc
jg
out
(bad)
mov
xchg
shl
push
fdiv
sbb
xchg
daa
lahf
fs
xlat
push
addr16
out
lods
das
pop
daa
iret
(bad)
xlat
cmp
sbb
imul
adc
mov
ins
jne
out
ss
cld
mov
ret
pop
lahf
ror
adc
imul
aad
push
(bad)
push
stc
adc
fdivr
pop
cdq
pop
mov
mov
loop
(bad)
aam
nop
cmps
sti
(bad)
in
pop
pusha
sbb
enter
jnp
pusha
jge
ret
stos
and
mov
cmps
lods
mov
repnz
lock
cmps
mov
sbb
out
je
dec
dec
sub
jne
add
adc
push
pusha
ffree
cmp
or
xchg
stos
out
arpl
movs
pop
mov
(bad)
jnp
mov
dec
ss
scas
mov
lods
pop
in
fild
scas
scas
hlt
dec
repz
scas
xor
jg
add
pusha
data16
xlat
out
or
mov
lock
bsr
std
push
out
pusha
xchg
sahf
jmp
cmps
inc
lods
xor
int3
mov
or
or
jno
test
push
mov
into
push
popf
aam
pop
pop
pushf
xchg
mov
bound
dec
imul
addr16
lsl
ins
test
iret
icebp
pushf
mov
mov
shl
jmp
stos
xor
dec
dec
cs
sub
mov
out
outs
jmp
mov
sbb
xlat
cdq
xchg
xchg
jle
das
repnz
mov
fisub
cld
sbb
(bad)
xchg
daa
pop
mov
shr
cmp
xor
mov
test
cmp
fst
push
jo
es
jae
ins
loopne
adc
xchg
push
mov
ja
outs
push
ss
es
js
jae
xor
scas
enter
pop
dec
fdivr
sub
mov
mov
mov
inc
repnz
mov
dec
ja
sub
sbb
cmp
sbb
dec
imul
rcr
sub
jg
in
fist
neg
mov
cmps
les
pop
cwde
(bad)
mov
sbb
rol
cmp
jp
cmp
fist
sbb
sub
ins
cmp
fadd
ss
jp
xor
addr16
(bad)
sbb
dec
mov
xchg
or
daa
mov
in
xor
int
jmp
js
push
outs
adc
leave
lock
mov
jns
es
(bad)
jae
retf
cdq
and
adc
std
add
leave
adc
cmp
sub
nop
les
jo
mov
pop
mov
adc
dec
popa
sub
rcr
cwde
xchg
jmp
xor
xor
add
cdq
mov
fsub
outs
inc
cmp
inc
sbb
jbe
sar
pop
retf
ret
or
or
stos
jl
in
cmp
dec
iret
retf
lock
jg
and
fmul
test
mov
dec
xor
push
ins
jne
movs
add
(bad)
pop
fldcw
call
sub
sbb
cmp
mov
mov
loop
adc
cmps
jle
sahf
pop
scas
jl
inc
scas
add
inc
mov
pop
inc
test
les
test
push
dec
and
hlt
pop
push
movs
adc
dec
adc
mov
ds
in
setle
add
fcomp
xor
xchg
cld
into
repnz
in
push
rcl
test
xchg
push
xchg
in
inc
(bad)
shl
gs
xchg
(bad)
ror
ja
scas
xor
sub
les
push
mov
mov
dec
jge
adc
pushf
ret
pop
jl
shl
inc
call
dec
jmp
mov
jb
pop
xchg
rcl
add
aad
retf
out
dec
cmp
leave
fwait
pop
test
je
mov
outs
leave
mov
push
mov
inc
jmp
std
xchg
mov
xchg
inc
out
jle
add
push
imul
or
sbb
pop
xor
xlat
mov
xchg
aam
test
ror
cmc
ret
repz
(bad)
mov
loop
cld
lea
iret
sbb
dec
daa
jbe
push
xlat
xor
mov
xchg
retf
cmp
out
xchg
ja
retf
add
sahf
loope
not
xchg
icebp
ror
fist
or
dec
test
scas
jge
bound
inc
xor
in
jg
arpl
and
sbb
inc
(bad)
mov
push
(bad)
xchg
mov
adc
cmp
jae
repnz
push
out
push
xchg
cli
das
pushf
ins
sub
xchg
xor
sub
mov
jae
xor
jbe
outs
mov
mov
pop
mov
or
fst
dec
hlt
jp
lea
pusha
imul
sbb
js
scas
js
sti
adc
call
fistp
mov
sbb
pusha
mov
jmp
and
dec
les
es
and
sub
pushf
out
and
in
pop
xor
cmp
nop
enter
(bad)
jo
(bad)
jno
mov
pop
mov
in
sti
les
popa
sti
shr
pop
fisttp
(bad)
retf
sub
in
ins
pop
mov
retf
ror
sbb
push
nop
hlt
retf
es
std
pop
xor
adc
mov
stos
int
and
mov
ret
lahf
pop
jns
or
cmp
inc
add
stc
xchg
lea
je
cmp
dec
sar
and
jl
jge
jno
sti
or
pop
push
xor
(bad)
out
in
retf
xchg
push
clc
aam
fldenv
push
and
inc
jge
fstp
out
aaa
sub
dec
out
mov
enter
test
je
das
stos
fist
mov
sahf
lods
imul
add
mov
or
test
outs
dec
loop
sub
mov
push
repz
cmps
mov
inc
lds
add
cmps
sahf
test
rol
loop
mov
mov
cli
(bad)
fs
pushf
aaa
(bad)
push
add
cmps
loope
lods
movs
dec
out
aad
mov
cmp
stos
popa
xor
sub
ror
movs
push
xor
push
iret
test
call
loop
lock
jl
and
pop
lahf
cld
cwde
clc
adc
jl
scas
repnz
sbb
jmp
(bad)
fucomp
sti
inc
or
dec
mov
cmps
loopne
int3
mov
popa
fdivp
cs
mov
lods
push
pop
mov
inc
or
sub
add
push
std
mov
push
lods
push
aaa
jp
jp
into
or
xor
out
retf
fnstcw
aaa
mov
sbb
sbb
sub
mov
pop
ins
out
imul
xchg
mov
sbb
or
ins
cwde
or
test
mov
ror
xchg
jp
cli
(bad)
xor
xchg
xor
fsubr
xchg
jnp
popf
imul
pop
mov
xor
out
daa
add
aam
mov
imul
iret
xchg
aaa
movs
push
mov
sub
fstp
test
jnp
mov
cmps
dec
je
sbb
jnp
xchg
das
push
pop
cmpxchg
in
fidiv
jmp
cmc
or
dec
lods
push
mov
xor
sahf
xchg
add
test
cmps
dec
cmp
mov
imul
mov
mov
xor
mov
loope
lods
ins
retf
pusha
inc
movs
mov
in
into
sub
je
sub
pop
dec
push
and
mov
mov
mov
cmps
xchg
push
mov
cmps
adc
stos
dec
add
fmul
icebp
ins
mov
hlt
push
inc
hlt
loopne
ret
adc
xlat
out
or
xchg
fs
or
sbb
and
sbb
sub
(bad)
hlt
and
(bad)
fld
(bad)
sbb
das
mov
js
jae
je
shl
adc
ss
pop
xchg
mov
push
dec
(bad)
fs
xchg
das
int
out
xchg
inc
or
retf
loopne
movhps
nop
inc
push
out
cwde
push
ja
in
scas
inc
push
mov
and
dec
inc
adc
inc
mov
(bad)
or
in
xchg
fwait
jmp
out
or
mov
jo
movs
and
rcl
jnp
arpl
or
jmp
popf
(bad)
test
aas
out
in
aad
pop
retf
rcr
bound
cmp
movs
lods
popa
or
icebp
cld
test
push
mov
lods
outs
nop
pushf
addr16
inc
sub
or
and
js
in
jbe
jl
movs
les
push
and
cmc
cmp
or
aas
fucom
jae
mov
add
jae
out
xchg
mov
fcomp
push
push
cmp
call
pop
xchg
mov
mov
retf
mov
int
aas
aam
ret
push
mov
add
add
add
dec
inc
shl
inc
enter
or
jmp
imul
dec
icebp
sub
mov
cli
dec
cmp
daa
fnstcw
xchg
sbb
or
sahf
push
bound
xchg
mov
or
inc
xchg
into
aas
mov
mov
jg
(bad)
(bad)
scas
inc
stos
mov
in
sar
ins
(bad)
push
cmps
popf
out
imul
dec
daa
out
jno
(bad)
loopne
pop
push
(bad)
push
or
adc
mov
jp
mov
xchg
fcom
push
sub
repz
jp
fcmovne
and
movs
jmp
cmc
(bad)
icebp
cwde
pop
mov
dec
push
mov
dec
push
icebp
cld
cmp
mov
mov
fs
stos
dec
sbb
fist
(bad)
fdiv
or
mov
neg
and
add
cmc
shr
aad
xchg
pop
ss
gs
inc
mov
ins
push
add
xchg
stos
sbb
jge
push
std
adc
xchg
ret
fsub
mov
sbb
pusha
test
cmp
pushf
mov
mov
inc
mov
inc
outs
das
mov
push
adc
adc
push
aas
pop
fcomp
int
mov
arpl
and
sub
or
test
repz
aas
not
and
mov
adc
mov
ret
hlt
add
(bad)
sbb
ins
into
mov
es
pop
mov
sbb
jl
inc
jno
data16
or
ret
ficom
call
cmp
sub
inc
addr16
mov
add
addr16
call
lods
call
sbb
lods
cli
pop
xchg
mov
push
xor
jb
cmp
into
ja
jmp
jne
pop
std
cwde
popf
pop
xchg
xor
icebp
shl
ins
jae
leave
inc
outs
dec
pop
loope
sbb
cdq
xor
xchg
dec
fs
mov
aam
dec
lds
cmp
lock
and
arpl
mov
and
lahf
cwde
xor
pop
cmp
xor
or
mov
mov
mov
inc
xlat
shl
je
pop
repnz
(bad)
xchg
jo
xor
in
in
arpl
scas
xchg
je
jp
sub
imul
sti
cmp
xchg
sti
xchg
xor
and
fdivr
jne
dec
sub
add
mov
adc
fyl2xp1
in
icebp
push
js
xchg
push
ss
mov
loope
out
aaa
(bad)
mov
fcom
sbb
rcr
imul
add
das
in
sar
(bad)
in
mov
adc
(bad)
aam
stos
add
shl
jno
and
push
inc
scas
out
sbb
je
sub
jb
shl
addr16
fmul
frstor
inc
repz
lods
sub
enter
nop
pop
loop
shl
(bad)
sbb
or
imul
scas
(bad)
or
cmp
das
mov
xor
xchg
xor
imul
xlat
(bad)
stos
sbb
xor
sub
out
and
add
push
movs
or
ss
xor
xacquire
fistp
xchg
(bad)
dec
test
in
sub
push
pop
xor
je
mov
jge
out
adc
mov
jns
into
pop
mov
cmps
add
jae
out
jae
dec
outs
xor
jno
xchg
iret
mov
sti
dec
jmp
dec
inc
mov
out
rep
sub
imul
les
xchg
ins
dec
mov
push
call
fwait
cmc
xchg
push
mov
mov
dec
jno
stos
out
icebp
and
cmp
int
sub
pop
mov
adc
out
mov
leave
sar
in
jmp
sbb
dec
pop
stos
cdq
or
rcl
inc
inc
pop
stos
pop
or
scas
pop
pop
sub
test
mov
and
icebp
mov
xor
test
fwait
xchg
xchg
ret
ret
push
in
xchg
cmps
aaa
xor
add
ds
sub
jg
push
es
cs
mov
es
mov
mov
mov
sbb
push
push
xchg
push
add
mov
inc
adc
dec
cmp
pushf
icebp
std
jmp
xor
imul
ja
sub
sbb
xchg
stos
popa
movs
mov
adc
jmp
xchg
sub
sbb
shr
pop
leave
imul
dec
lds
cmp
imul
jge
shl
xor
push
xchg
cmp
add
out
sbb
or
outs
cmp
into
sbb
cmp
xchg
push
xchg
mov
dec
in
repnz
outs
leave
adc
push
int3
sub
jg
(bad)
sbb
xor
add
loop
dec
mov
push
stos
add
ret
ins
xchg
dec
stc
push
cld
fdiv
pop
imul
stos
mov
lock
es
xor
mov
lea
stos
shl
pop
dec
mov
test
xor
sbb
call
pop
mov
push
and
imul
cli
xchg
cmps
stc
aas
or
fsubr
mov
and
mov
adc
test
sbb
int3
test
shl
adc
push
in
loopne
adc
push
jg
jl
and
pop
ret
cmps
shl
add
dec
pop
pop
sbb
inc
mov
dec
bound
pop
fstp
lods
pop
pop
dec
push
cmc
sbb
fstp
fstp
lods
xchg
das
cli
shr
test
push
add
and
push
mov
js
push
mov
push
push
jo
cmp
aad
in
and
(bad)
js
cmp
outs
retf
mov
sub
out
daa
xor
cdq
mov
and
sbb
ror
aam
pop
add
cmp
xor
adc
and
(bad)
in
call
push
jnp
(bad)
sbb
cmp
mov
push
xchg
fadd
push
pop
ud0
and
jo
mov
fwait
inc
je
std
(bad)
mov
push
rol
ja
cmp
or
inc
inc
add
js
mov
shl
cwde
mov
dec
add
mov
cli
jno
pop
into
movs
je
push
ror
or
push
xchg
and
lds
popf
pop
test
leave
jae
and
and
fstp
push
loop
fnsetpm(287
or
sbb
pop
jb
aad
push
(bad)
and
daa
jl
imul
shl
addr16
retf
adc
push
pop
mov
sar
push
add
mov
aas
jae
inc
ss
fs
fdivr
xor
jp
mov
cmp
pop
call
pop
fist
or
and
add
pop
xlat
stos
nop
adc
test
xor
or
xchg
inc
mov
ror
mov
xor
xor
jecxz
loope
inc
and
push
loop
push
mov
cmp
in
iret
mov
add
and
out
(bad)
pop
push
fdivrp
dec
in
bound
push
mov
hlt
pop
pop
in
jnp
cdq
sar
adc
xchg
pop
and
rcl
sbb
mov
imul
or
imul
inc
retf
pop
add
mov
popa
inc
mov
fwait
dec
xor
mov
mov
jne
inc
pop
cdq
dec
movaps
(bad)
jl
push
mov
cld
jmp
jl
jl
xchg
sbb
ret
jp
add
nop
dec
xor
les
(bad)
leave
fdiv
jno
test
pop
movs
xchg
rcr
cld
pusha
pop
push
fisub
ja
mov
pop
inc
cli
and
jnp
push
mul
in
cmp
cmp
mov
ss
call
xchg
fsubr
pop
mov
aad
pop
fwait
push
into
sahf
xor
xchg
mov
loop
mov
popa
xchg
push
loopne
mov
dec
push
mov
out
jne
mov
mov
in
into
retf
gs
xor
add
jl
mov
fmul
sub
inc
ret
pop
popf
add
(bad)
cmc
pop
mov
mov
adc
pop
int3
adc
cmc
inc
xchg
imul
rol
loop
mov
aaa
push
jmp
and
(bad)
aad
fst
retf
and
pop
mov
pop
scas
adc
and
popf
fmul
pop
stos
push
push
adc
sti
cmps
push
movsx
int3
cmps
cmp
xor
jmp
cmc
mov
shl
cmc
jae
mov
pop
mov
xchg
stos
mov
mov
mov
lods
mov
aas
lds
ss
(bad)
cmps
dec
mov
dec
cmp
adc
pop
jecxz
xchg
repnz
data16
xchg
out
cmc
dec
addr16
dec
mov
jnp
fistp
xlat
aam
out
push
sti
mov
shl
mov
xchg
fwait
sbb
and
movs
add
jge
rcr
vpackuswb
mov
add
rcr
push
loope
dec
aam
xor
cmp
outs
test
mov
and
push
sahf
sbb
outs
mov
jmp
pop
lods
and
fwait
hlt
inc
not
fs
mov
retf
jo
dec
inc
push
push
(bad)
shl
je
inc
test
mov
mov
(bad)
mov
jb
inc
mov
inc
pop
fldenvw
adc
ins
and
cmp
pop
and
pop
or
pushf
jno
mov
je
sbb
js
scas
and
cmp
adc
cdq
cmp
leave
xchg
cdq
and
psraw
jo
mov
mov
or
xchg
repnz
iret
pop
enter
mov
loopne
adc
adc
cmp
call
js
sbb
mov
jmp
mov
xchg
pop
dec
(bad)
xor
jecxz
mov
lods
or
pop
cmp
in
(bad)
out
mov
rol
scas
xchg
mov
mov
retf
(bad)
out
pop
out
adc
inc
js
mov
mov
sub
push
or
and
mov
lods
sub
mov
in
lods
and
sub
sbb
adc
or
aad
lahf
inc
out
or
sub
imul
sub
xchg
test
dec
jle
mov
pusha
push
fst
aam
and
fisttp
fwait
clc
mov
shr
cmp
push
mov
sbb
jne
shr
shl
movs
pop
push
jmp
mov
stos
push
jae
sub
call
int3
push
or
ins
mov
cmp
je
inc
scas
jbe
sub
int3
push
mov
pop
in
add
sbb
adc
add
jg
adc
cs
and
xlat
ret
push
pop
xchg
xor
test
out
scas
lods
jg
fs
sub
push
cmc
cwde
adc
pop
mov
wrmsr
push
jle
dec
fs
wrmsr
cmps
add
mov
xor
es
ret
out
loop
and
hlt
repz
add
mov
xchg
sbb
inc
and
adc
pusha
mov
ficomp
add
test
xor
cmp
push
fmul
push
nop
and
mov
daa
jne
push
xchg
hlt
outs
shl
out
jmp
pop
adc
retf
push
inc
idiv
stos
sub
adc
mov
xor
sub
pop
push
in
idiv
jmp
mov
sbb
(bad)
(bad)
les
or
sahf
and
or
pop
fbstp
test
inc
in
loope
xchg
es
repz
ins
call
popf
int3
mov
sub
dec
movs
and
pop
jns
cmp
and
cs
jge
dec
shr
and
push
std
lea
(bad)
jp
icebp
test
fdivr
jmp
icebp
imul
sbb
push
inc
push
jle
xor
cmp
adc
stos
adc
call
repnz
mov
mov
cdq
adc
ret
loope
outs
aaa
pushf
and
pop
inc
scas
test
(bad)
adc
popa
(bad)
sub
lahf
mov
ins
fdivr
sbb
out
gs
fld
gs
mov
ins
add
mov
cld
test
lock
or
in
pop
sbb
cmp
xchg
lock
add
adc
daa
adc
mov
push
and
jo
cmp
pop
pop
or
adc
push
and
pushf
dec
sbb
fistp
sub
(bad)
adc
pop
lods
and
inc
mov
jg
add
ret
cmps
mov
out
into
fwait
jns
jmp
add
dec
jns
(bad)
(bad)
js
mov
push
sbb
push
pop
ret
stos
or
push
pop
inc
lods
test
sub
cmp
lahf
inc
sbb
adc
xchg
jae
push
imul
mov
xchg
retf
xchg
pop
out
fstp
(bad)
div
xlat
push
rol
rcl
sub
inc
and
je
mov
mov
int3
xchg
pop
loopne
or
outs
or
lods
jae
dec
sub
fcomp
or
and
jnp
shl
and
sub
in
retf
gs
or
mov
push
inc
cmp
hlt
fstp
pop
dec
add
pop
jmp
jmp
inc
dec
sti
stc
add
nop
int
mov
pop
or
fsub
or
cmp
jno
int
test
jno
mov
mov
lods
int
repz
push
fcom
shr
lahf
cmp
or
bnd
repnz
add
add
sub
cmp
sbb
jno
imul
(bad)
jmp
fild
adc
or
add
sahf
xor
test
add
and
mov
push
or
add
fwait
sub
add
into
out
add
frstor
cmp
inc
sub
cld
ja
mov
pop
cmp
xchg
aam
retf
push
dec
movs
cmc
push
fild
cli
jmp
imul
or
and
xor
adc
popf
add
sub
inc
xor
mov
sbb
mov
jnp
sub
rcr
iret
mov
in
test
inc
shl
out
movs
sub
sar
jp
pop
mov
ds
pop
push
mov
aaa
and
inc
xchg
repnz
dec
sbb
inc
and
and
xor
adc
int
jae
jo
cwde
sbb
je
fild
aad
inc
ds
mov
inc
into
sti
dec
lods
cli
shl
push
inc
and
add
mov
add
xchg
fisttp
jmp
movnti
adc
xor
scas
inc
jb
sbb
push
push
cld
das
push
jmp
or
test
or
das
sub
popa
sbb
gs
cdq
cmp
mov
jns
xor
leave
sbb
push
sti
daa
adc
leave
xor
push
out
mov
(bad)
jg
shl
jae
sar
pop
lahf
and
xor
add
retf
xor
cwde
xor
adc
inc
push
dec
test
cwde
(bad)
std
fadd
ds
or
xchg
loope
clc
push
sahf
pop
scas
(bad)
scas
arpl
dec
add
or
(bad)
pop
test
popf
data16
mov
and
sbb
neg
or
les
(bad)
mov
cvtps2pd
cmps
push
jmp
pop
test
mov
sbb
hlt
cld
lds
xor
fwait
push
mov
push
ror
mov
in
inc
adc
dec
out
mov
jbe
call
shl
sbb
loopne
(bad)
cmc
xchg
inc
sbb
lock
neg
cmp
in
and
fsubr
frstor
dec
sub
push
outs
out
push
stos
rcr
mov
adc
mov
imul
mov
or
mov
ds
out
popa
mov
fdiv
rol
stos
sub
jae
int3
les
add
cli
mov
inc
imul
pop
imul
jmp
rol
push
and
or
std
and
jb
ret
mov
gs
fild
and
retf
and
aas
inc
imul
fimul
mov
jnp
push
and
movs
imul
movs
pop
lock
out
ins
(bad)
adc
popa
dec
stos
and
cmp
xor
push
test
mov
mul
mov
repz
dec
and
ret
enter
adc
test
mov
mov
rep
or
xchg
in
xor
add
pop
sbb
jmp
cld
icebp
sbb
aad
in
pop
out
sub
mov
movs
jp
(bad)
rcr
jmp
je
inc
mov
adc
fdiv
sub
push
and
jno
lods
sbb
cmp
push
(bad)
lds
xchg
xchg
push
jge
sub
lock
sub
fisub
mov
lods
vpandn
in
arpl
icebp
retf
in
sub
out
mov
out
inc
cmp
push
adc
lea
mov
shr
mov
stos
mov
jmp
jp
sub
xchg
mov
mov
xor
adc
inc
fiadd
adc
jg
das
push
mov
shr
or
or
hlt
dec
or
std
fiadd
enter
aas
xor
int
dec
sbb
push
(bad)
xor
jmp
or
jmp
push
inc
daa
(bad)
jmp
scas
jno
adc
movs
std
cmp
repnz
adc
shr
test
fld
in
test
nop
dec
sbb
pop
dec
cli
aaa
pop
loope
rol
addr16
ins
or
mov
push
sub
push
dec
xor
adc
jmp
add
es
rcl
je
daa
repnz
push
mov
repz
(bad)
or
mov
mov
imul
sub
aam
test
ins
adc
push
outs
jecxz
lods
sar
pop
cmps
xchg
das
call
pop
leave
repnz
ss
mov
push
jmp
gs
dec
or
add
sbb
add
jle
mov
dec
xor
imul
cmc
(bad)
xchg
jmp
in
rdmsr
pusha
lahf
and
push
cmp
lods
sbb
inc
fs
inc
jnp
aas
sub
push
fld
(bad)
xor
inc
add
ins
repnz
lds
xchg
arpl
shl
and
jno
out
imul
loope
fnstsw
dec
addr16
mov
fild
jb
std
dec
xchg
ret
inc
(bad)
in
push
cmp
mov
loopne
(bad)
cwde
dec
pop
fstp
push
rcr
sub
hlt
test
cmp
xor
pop
(bad)
retf
int
sbb
cs
and
cli
loop
je
mov
cmp
push
add
repz
mov
pop
adc
cmp
(bad)
pop
xchg
or
aaa
xchg
mov
push
pop
aam
mov
in
xchg
cmp
mov
ret
addr16
rcl
jg
rol
(bad)
pushf
shl
add
adc
pop
mov
or
test
push
xchg
ror
outs
ss
std
or
push
ins
push
or
dec
lahf
test
xchg
mov
cmp
or
cmps
call
sbb
and
fisttp
scas
mov
xor
pop
adc
outs
mov
in
xor
and
xor
jne
mov
mov
cmc
mov
cld
inc
dec
dec
(bad)
pushf
inc
loop
dec
inc
mov
mov
fld
dec
dec
idiv
fisttp
xor
nop
xor
adc
jbe
mov
push
call
daa
pop
jbe
repz
or
xlat
in
int
cmps
dec
cld
push
in
inc
inc
push
mov
retf
daa
sar
push
push
push
mov
or
je
ins
loope
repz
sbb
pop
cli
cmc
test
daa
scas
adc
test
ins
push
int
jns
ret
cmps
in
cmp
inc
jo
xchg
pop
ins
push
push
push
popf
and
and
and
ja
ins
sub
nop
out
push
jnp
out
sub
xchg
jno
mov
add
xchg
inc
adc
and
xchg
lahf
je
mov
adc
xor
xchg
cs
sub
xor
pop
(bad)
mov
xchg
ret
jp
or
retf
js
pop
lea
arpl
sub
jno
sub
(bad)
fcom
repz
xor
push
jle
int
fidivr
fsub
cmp
movs
out
shl
mov
icebp
inc
sbb
test
call
lahf
data16
push
ins
mov
mov
loope
(bad)
mov
sub
xchg
arpl
xor
fwait
aad
sbb
rcl
jo
scas
add
mov
xor
movs
sbb
test
shl
(bad)
fsub
sub
sub
ret
rol
dec
adc
fimul
mov
(bad)
jmp
push
in
jae
cmp
aam
fdivp
arpl
sbb
jne
mov
pop
loop
inc
sub
test
push
xor
add
call
xchg
enter
pop
sbb
dec
mov
sbb
je
imul
mov
inc
mov
push
adc
cli
outs
push
mov
loop
jae
cmc
pop
out
xor
clc
mov
stc
adc
enter
adc
(bad)
push
cmp
pusha
cli
in
enter
xor
dec
and
lock
test
mov
je
cdq
inc
es
les
(bad)
in
(bad)
jg
loop
rol
cs
push
sub
sbb
mov
paddsb
xchg
xlat
ins
adc
mov
and
mov
push
leave
les
mov
fcomp
imul
je
mov
imul
mov
push
mov
dec
sub
jl
inc
pop
jecxz
aad
(bad)
pop
out
mov
lods
ds
pop
sbb
inc
add
jns
dec
mov
or
popfw
jmp
cmp
push
mov
lds
imul
jmp
cmps
cmp
ins
dec
mov
inc
xchg
mov
add
inc
aaa
scas
inc
sub
mov
adc
lea
mov
sbb
mov
cdq
pop
rcl
fst
js
enter
adc
into
add
mov
out
sti
inc
cmps
or
xor
fisubr
pop
inc
stos
int
iret
inc
pusha
pop
sub
enter
lds
jmp
xchg
xchg
dec
adc
add
push
ret
adc
lahf
es
ins
ret
inc
mov
cmps
pop
mov
retf
or
shl
arpl
push
xchg
dec
mov
adc
or
mov
mov
jmp
pop
aaa
and
sbb
sahf
outs
leave
pop
adc
scas
xor
cmp
rol
fistp
not
jns
bnd
retf
xlat
inc
out
addr16
mov
mov
loopne
push
jge
call
inc
push
jnp
mov
ins
call
and
idiv
xor
or
mov
lods
mov
shr
mov
xchg
sub
dec
imul
add
movs
out
jns
sbb
in
(bad)
aaa
push
std
mov
mov
aam
lds
push
pop
xor
push
fst
fsub
ficom
cmp
fs
pop
iret
pop
mov
xchg
inc
jp
stc
mov
in
icebp
out
fst
xor
jne
add
mul
jo
in
data16
jne
jno
aas
jp
pop
jg
gs
dec
xor
push
dec
mov
mov
out
arpl
mov
out
sub
bound
adc
add
out
jnp
push
add
in
jle
inc
and
inc
sub
rol
sub
push
xor
imul
cmp
daa
jge
xchg
retf
mov
ss
call
das
pop
lods
retf
mov
hlt
out
lods
pop
jnp
push
mov
push
fs
adc
stos
jge
cmp
ficom
inc
repnz
sahf
sub
inc
dec
sub
pusha
ror
dec
repz
bound
dec
das
out
and
dec
mov
bound
out
inc
mov
call
push
in
and
add
xchg
test
and
int3
pop
xchg
(bad)
mov
rcr
rol
or
pop
pop
(bad)
(bad)
push
in
imul
(bad)
adc
sub
fs
retf
into
enter
imul
neg
fsubr
pop
inc
push
nop
cmp
(bad)
dec
pop
call
addr16
stos
stos
nop
inc
sbb
mov
test
ds
jns
pushf
ret
(bad)
int3
pop
shl
test
adc
lods
cdq
push
xchg
pop
adc
add
ret
aas
lock
or
in
mov
aaa
out
sti
push
dec
cmps
jb
out
xchg
pop
push
daa
or
inc
jns
dec
aam
rcr
dec
cmp
clc
jmp
mov
jns
daa
out
jae
popa
mov
loope
fwait
jnp
test
popf
add
cmp
jmp
pop
std
out
mov
test
dec
xchg
pushf
sub
mov
ja
pusha
pop
inc
jnp
sub
pusha
cmp
cmc
add
loope
(bad)
jbe
movs
jle
adc
adc
out
std
(bad)
test
aas
inc
jmp
mov
xchg
and
or
iret
ss
add
adc
not
sbb
pop
cmps
into
cli
addr16
(bad)
sbb
out
pop
cld
xor
bound
adc
sub
push
imul
ss
movs
repnz
inc
sbb
dec
cmps
mov
nop
fld
rol
push
sbb
dec
dec
or
mov
jne
dec
mov
push
stos
retf
inc
pop
push
icebp
idiv
inc
movs
push
inc
adc
jmp
out
or
sbb
popf
gs
cmp
pop
xor
outs
mov
pushf
cmp
or
out
into
lahf
add
adc
mov
mov
cwde
jo
xlat
stc
not
inc
loopne
imul
add
pop
dec
sbb
pushf
add
test
mov
sti
sbb
imul
fild
push
cmc
and
add
jbe
in
cmc
pop
movd
mov
and
rep
adc
mov
mov
(bad)
int3
sahf
pop
xchg
jle
jo
js
xchg
ds
enter
push
push
les
sub
adc
call
mov
inc
in
push
inc
cwde
fnstsw
jmp
out
push
retf
ins
and
jl
jo
gs
retf
jns
adc
sbb
test
pop
adc
and
(bad)
jmp
sub
sub
out
jmp
loop
or
xchg
cmc
fdivrp
sar
call
aad
stos
sbb
push
test
retf
pushf
mov
add
ja
repnz
mov
or
sub
in
jg
mov
mov
and
pop
cmp
xchg
cmp
pop
out
xlat
pop
test
mov
cmps
movs
leave
pop
loopne
mov
and
sti
jg
push
pushf
test
mov
imul
jmp
(bad)
cwde
cmc
or
or
cmp
inc
jmp
aad
mov
jmp
hlt
mov
icebp
jmp
outs
loopne
fwait
pop
mov
cld
ss
jo
retf
clc
fidivr
rcr
push
cmp
clc
dec
into
retf
sbb
dec
aam
pop
fs
or
add
cmp
push
dec
cmps
inc
sbb
xchg
clc
push
add
imul
inc
push
ja
and
aad
pop
sbb
(bad)
cdq
push
jae
inc
popa
dec
jno
js
push
sub
mov
aam
dec
popa
jg
mov
cmp
mov
pop
popf
mov
cmp
push
int3
mov
inc
or
mov
(bad)
or
mov
xor
inc
repz
out
mov
mov
fwait
xor
and
push
test
js
dec
mov
dec
loope
jmp
xchg
(bad)
outs
mov
add
(bad)
fbld
inc
or
push
sub
jns
adc
ins
fwait
call
xchg
cmps
jne
jne
push
test
sub
ret
mov
xchg
sbb
(bad)
or
lods
or
sbb
xor
push
push
and
and
retf
xchg
xor
daa
fcmovu
pop
jmp
std
jmp
pop
or
cmps
and
ins
cmps
(bad)
and
adc
nop
ficom
jp
in
jp
clc
jecxz
loop
inc
sub
cmp
fisubr
xor
adc
call
mov
jb
daa
aas
dec
add
fild
mov
jo
xchg
ins
jnp
daa
push
test
xor
out
cwde
icebp
jnp
or
adc
xor
pop
jb
outs
inc
test
js
dec
daa
adc
call
cmp
mov
inc
imul
mov
es
inc
add
rol
dec
dec
jo
xchg
xor
scas
into
mov
cwde
loope
adc
sbb
out
pop
cmovno
sub
mov
stos
nop
adc
jo
popa
call
sub
dec
mov
(bad)
jo
or
mov
aam
popa
imul
test
jnp
aas
jb
ins
sbb
add
xchg
test
jne
loopne
dec
push
pop
cmc
(bad)
(bad)
cmp
mov
cli
xchg
movs
std
mov
sbb
outs
movs
and
ins
adc
iret
enter
xor
xor
mov
push
mov
and
out
push
xlat
call
xor
loopne
ds
test
ret
in
test
push
out
jle
adc
idiv
cmp
leave
sti
pop
fist
jecxz
mov
addr16
repz
xchg
push
pusha
push
out
pop
stc
repz
sbb
fxch
mov
cli
mov
and
loope
mov
dec
mov
loope
xchg
(bad)
mov
push
jp
mov
inc
sub
cmp
xchg
mov
mov
into
cmp
jnp
retf
inc
adc
or
push
and
cli
lock
out
repz
jnp
int
aaa
push
stos
push
jb
add
hlt
retf
cmp
aas
and
dec
add
inc
cs
rol
xor
xlat
daa
shr
mov
dec
dec
inc
push
aaa
sub
sub
daa
adc
jecxz
mov
mov
sbb
jle
sbb
enter
stos
xchg
and
adc
xor
xor
sbb
dec
jge
pusha
pop
mov
xor
xor
aas
sti
fdiv
shr
jmp
cmps
outs
mov
fild
loop
stc
pop
stc
jb
jne
call
adc
retf
mov
cmp
shl
call
and
mov
adc
sub
sbb
push
pop
dec
or
clc
xor
cmp
add
movs
mov
popa
out
jnp
repnz
stc
xor
jecxz
dec
jmp
sbb
cli
mov
mov
(bad)
sbb
sbb
shr
rcr
cdq
dec
test
xchg
lds
cmp
aas
jne
jle
pop
aaa
fst
push
mov
jae
pop
push
fs
aas
add
cmp
jae
mov
sar
inc
fbstp
popa
dec
adc
mov
scas
or
and
and
ret
jnp
(bad)
xchg
iret
and
mov
cmps
jmp
test
paddusb
jp
ret
mov
mov
mov
jo
addr16
mov
dec
test
pop
clc
jp
mov
xor
dec
jnp
jl
mov
imul
icebp
(bad)
jmp
mov
sbb
dec
push
int
and
movs
enter
dec
adc
xchg
pop
or
hlt
push
jle
and
test
pop
mov
mov
dec
test
mov
mov
ds
les
mov
or
aad
pop
fistp
cli
mov
mov
hlt
inc
outs
sub
adc
pop
xchg
mov
push
and
pop
mov
retf
mov
daa
jne
pop
into
xor
loopne
and
sti
jl
xchg
jbe
imul
sbb
fimul
retf
stos
mov
dec
in
ja
mov
pop
cmp
test
adc
push
sub
inc
jns
jmp
jnp
jne
adc
leave
push
inc
push
pop
outs
inc
mov
out
rcr
and
jmp
es
xchg
mov
and
pop
or
test
ins
fstp
call
xor
fistp
outs
retf
adc
call
ds
sahf
dec
and
push
bswap
mov
adc
cmp
call
jbe
(bad)
and
arpl
popa
dec
lahf
inc
movs
push
lods
popa
xor
adc
sbb
(bad)
mov
pop
loopne
mov
pop
inc
xor
arpl
mov
push
mov
push
loope
and
mov
and
gs
mov
dec
inc
inc
xchg
push
push
xor
fwait
test
test
mov
(bad)
(bad)
icebp
mov
scas
cwde
inc
jecxz
ins
imul
shr
pop
add
and
jno
cmp
pushf
jb
mov
fmul
mov
xchg
push
imul
mov
pop
loopne
inc
push
xlat
(bad)
jle
add
ja
daa
pop
sbb
mov
inc
dec
retf
cmps
movs
mov
mov
retf
push
dec
sbb
punpckhwd
sbb
into
dec
mov
pop
mov
push
lds
(bad)
out
fdivp
(bad)
hlt
or
ds
xchg
ret
ret
sbb
and
jg
cs
test
dec
idiv
imul
jno
rol
mov
mov
popf
icebp
cdq
repz
jge
xor
dec
outs
repz
lods
pop
mov
pop
test
mov
mov
cmps
add
xchg
repz
loope
lods
(bad)
mov
sub
sbb
sub
mov
or
fwait
jp
cs
shr
add
pop
data16
xor
mul
xchg
fistp
data16
loop
sti
push
rcr
pushf
mov
mov
cmc
push
pushf
cli
sub
ror
push
lods
adc
add
fisub
sub
fwait
cmc
into
dec
xlat
jge
dec
pop
daa
xchg
inc
addr16
icebp
dec
hlt
jo
cdq
jbe
into
sub
pop
push
pop
int3
adc
fwait
mov
ins
sbb
mov
push
inc
sub
xor
cli
pop
mov
cmp
mov
adc
push
push
xchg
(bad)
cmovns
jae
pop
not
sub
in
js
cmp
aas
jecxz
retf
or
inc
cmp
or
leave
out
sbb
test
cdq
and
inc
cmp
mov
(bad)
int
cdq
jbe
xor
dec
jo
retf
(bad)
rol
inc
lock
iret
xchg
xlat
sbb
dec
adc
cmc
outs
arpl
repnz
push
out
daa
sub
fsubr
pop
mov
ja
or
and
rcr
rcl
fiadd
stc
in
jbe
int
adc
popf
jae
inc
ret
inc
ficom
cli
(bad)
lea
xchg
dec
into
fistp
shl
push
shl
push
loopne
sub
and
xlat
nop
(bad)
dec
fstp
adc
int3
ret
mov
sub
js
shl
sub
imul
pop
adc
pusha
hlt
out
or
sbb
dec
pop
xchg
outs
aad
mov
pop
inc
addr16
mov
mov
jl
mov
cmp
out
scas
movs
retf
fwait
adc
sub
adc
(bad)
pop
mov
rol
sbb
adc
push
ret
sbb
jmp
jp
out
push
pushf
test
adc
jne
push
sub
xor
sbb
or
cs
mov
aad
fwait
mov
test
mov
aas
push
or
xchg
adc
repz
pop
shl
cld
jno
pop
outs
pop
dec
test
cmp
adc
fcomp
mov
jae
ins
(bad)
int
cmps
and
leave
sbb
push
cmp
sbb
nop
mov
mov
ss
retf
mov
rol
adc
je
xchg
xor
inc
(bad)
dec
pop
outs
inc
add
inc
inc
push
pusha
jecxz
mov
xor
inc
jb
into
ins
push
dec
call
push
inc
lea
pop
pop
push
pushf
sbb
xchg
repz
sub
fbld
popf
mov
scas
mov
mov
dec
sbb
mov
loope
jb
les
mov
pop
mov
jl
and
pop
cmc
dec
in
dec
sbb
lods
imul
push
(bad)
jbe
push
jl
adc
mov
xor
fld
mov
sub
push
push
clc
adc
in
push
lock
mov
in
sub
test
fisttp
xor
int3
loop
fcom
sbb
adc
iret
adc
inc
dec
jmp
loop
xor
or
out
cs
cmp
test
pop
scas
shl
or
ret
cwde
fdivr
jecxz
or
dec
sar
dec
cli
or
and
sub
sub
xor
call
jns
push
leave
scas
pop
jo
out
add
mov
inc
jecxz
adc
and
cli
xor
cmp
adc
icebp
(bad)
aas
add
(bad)
mov
pop
mov
inc
das
mov
pop
(bad)
cli
sbb
hlt
inc
pop
call
mov
adc
sbb
scas
pop
sub
jae
inc
cmp
into
jle
inc
pop
in
cmp
aam
mov
or
xor
aaa
sub
stos
xor
jb
mov
xchg
and
inc
sbb
inc
cmps
daa
or
cdq
pop
xor
pop
lds
inc
mov
(bad)
mov
adc
mov
stc
adc
mov
dec
cwde
scas
inc
fst
gs
mov
adc
mov
push
push
movs
dec
scas
leave
fcom
das
pop
inc
in
ja
xchg
inc
mov
dec
cmp
adc
mov
and
sbb
je
or
xor
dec
fdiv
test
aaa
es
(bad)
jl
shl
ja
add
sbb
fcom
pop
xor
jge
xor
sbb
sub
cmp
sbb
cmp
lods
(bad)
xor
push
pop
or
rol
sti
out
mov
sub
pop
and
inc
mov
(bad)
data16
sub
ror
mov
add
in
int3
gs
jae
cmps
jp
ja
cli
dec
scas
add
jg
sbb
dec
rcl
inc
pop
arpl
mov
adc
sbb
and
loop
mov
hlt
pushf
jno
cs
leave
xor
jo
push
pusha
mov
or
pushf
adc
aas
in
mov
aam
mov
mov
jb
push
push
fisub
scas
loopne
dec
or
pop
retf
mov
xchg
popf
mov
fadd
dec
cli
ss
std
icebp
add
scas
mov
ror
mov
call
jns
repz
gs
mov
(bad)
es
loop
push
push
test
in
icebp
idiv
dec
mov
jge
mov
fcmovu
mov
shr
ja
cmp
mov
outs
and
inc
add
xlat
scas
or
cmp
dec
add
jge
loop
(bad)
aam
inc
jae
mov
jno
sbb
lods
int
repnz
mov
pushf
sbb
and
or
fsubr
inc
retf
out
inc
push
jmp
mov
icebp
daa
int
or
push
mov
jo
scas
sar
pop
dec
test
jg
mov
adc
retf
stc
pop
sbb
xchg
sti
mov
outs
push
or
push
pop
jns
(bad)
sbb
rcr
loope
ds
push
shl
cdq
(bad)
fidiv
and
movs
test
mov
jo
cmp
push
pop
adc
stos
mov
jne
ret
mov
push
jmp
in
mov
jnp
sub
movs
pop
mov
cmp
std
inc
mul
sbb
pop
mov
pop
pop
xchg
inc
xchg
jle
jbe
push
lods
shr
dec
mov
or
jl
mov
sub
xchg
mov
outs
enter
cs
fld
pop
adc
jp
push
dec
bound
ret
add
jmp
jmp
push
push
nop
add
jo
es
fxch
jns
shr
xchg
pop
movs
cmps
pop
xor
sub
pop
pop
cmp
in
mov
int3
or
pop
cli
or
add
ret
xchg
cmc
call
inc
jne
dec
mov
hlt
inc
push
dec
movs
xchg
rcr
mov
inc
push
repz
push
daa
shr
imul
add
xchg
loop
cmp
rol
movs
aad
xchg
outs
xor
ins
jg
cld
js
or
cmp
ja
sbb
pusha
js
fnstcw
xchg
shl
fdiv
and
mov
add
or
dec
jb
fld
mov
test
out
aas
lods
xor
adc
pop
or
rol
mov
inc
loopne
xchg
hlt
je
scas
sub
and
in
stos
ret
xor
cmp
and
push
es
into
loopne
cmp
call
jge
cli
ret
ins
adc
fistp
or
(bad)
scas
and
movs
push
das
mov
ins
mov
jno
aas
imul
mov
jmp
cmc
xchg
ds
(bad)
push
shl
das
in
pop
pop
or
scas
dec
mov
jmp
test
bound
icebp
jle
push
sbb
inc
inc
xchg
ins
int3
dec
dec
jmp
mov
add
lods
push
ror
sub
inc
or
cmp
ins
lods
pop
fs
and
arpl
add
data16
mov
(bad)
sbb
sbb
int3
call
mov
mov
sub
cmc
xlat
ja
push
and
add
mov
cs
inc
xchg
shr
xchg
or
xor
loope
das
lods
push
adc
adc
adc
inc
pusha
jae
mov
mov
test
ins
imul
mov
out
sub
xchg
cmp
pop
or
rcl
mov
into
xchg
xchg
std
mov
push
mov
jecxz
sbb
mov
inc
or
mov
fisubr
out
iret
sbb
icebp
sbb
and
mov
xlat
pop
iret
neg
or
mov
add
inc
call
dec
mov
mov
out
sbb
inc
imul
adc
mov
cmp
pop
outs
out
sub
(bad)
in
inc
or
cdq
cmp
add
cmp
aas
push
rcl
xchg
adc
int3
inc
push
fdivr
mov
mov
pop
xor
mov
cdq
sbb
sbb
fs
push
and
mov
pushf
fs
ret
shl
fsubr
(bad)
cmp
mov
dec
outs
outs
iret
hlt
pusha
icebp
daa
dec
sbb
jnp
stos
mov
retf
(bad)
mov
xor
xlat
or
das
pop
ror
xor
cmc
mov
xor
or
fistp
imul
jg
jb
fcmove
mov
cmp
jns
jge
jnp
push
pop
ret
xchg
mov
jno
shl
add
adc
add
out
sub
adc
mov
adc
inc
leave
movs
fs
shl
ds
pushf
push
sub
mov
dec
mov
dec
cs
xchg
cdq
mov
div
(bad)
bound
cs
or
push
xor
scas
lea
sub
push
mov
mov
mov
dec
sbb
push
fist
loope
mov
jmp
js
jmp
xchg
dec
inc
mov
js
mov
lahf
call
mov
dec
out
mov
(bad)
idiv
push
mov
inc
xchg
enter
jmp
dec
in
dec
pushf
mov
out
jae
jo
dec
mov
xchg
mov
or
(bad)
push
inc
pop
dec
adc
pop
out
inc
mov
inc
(bad)
pop
xor
out
jge
mov
lods
mov
cmp
xchg
stc
pop
jbe
nop
ins
pusha
push
retf
mov
int
mov
(bad)
cmp
jg
adc
inc
in
xor
aaa
xchg
sub
dec
cmp
push
mov
and
in
xlat
mov
fcmovne
out
inc
test
outs
stc
xor
push
iret
pop
xor
(bad)
ins
pushf
test
bound
cdq
dec
gs
scas
outs
pop
lds
lods
fidivr
sbb
call
jmp
and
sbb
jmp
inc
mov
fidivr
adc
xlat
fisttp
gs
xlat
xchg
pop
mov
pop
jno
mov
scas
sub
sbb
inc
loope
jmp
sbb
imul
dec
ja
bound
test
lods
mov
lods
cmp
mov
and
inc
xor
enter
loop
lea
xchg
lock
adc
bound
pop
cmp
fstp
ja
or
pusha
pop
pushf
in
cld
iret
fsub
in
mov
add
mov
into
xchg
mov
or
jmp
ret
stc
push
arpl
mov
pop
iret
lahf
jo
test
inc
sub
jl
jp
ror
xchg
int
mov
push
stos
xchg
push
(bad)
or
lock
out
jmp
pop
cmps
push
(bad)
or
in
clc
jge
shl
inc
dec
dec
adc
ins
jne
push
clc
sub
inc
and
and
in
call
(bad)
retf
adc
lock
sbb
je
rcl
jmp
dec
push
inc
xchg
ret
nop
cmps
in
mov
push
scas
jg
mov
in
inc
push
mov
or
mov
lods
sub
scas
sbb
inc
cld
icebp
xchg
and
dec
lahf
jmp
sti
dec
mov
pop
(bad)
out
pop
push
dec
adc
in
mov
mov
loopne
loopne
push
in
cmp
jp
lods
fsubp
push
push
inc
out
fsubr
push
inc
xor
and
sbb
ds
inc
jl
add
mov
rol
adc
pop
or
repnz
jmp
shr
inc
push
cli
cmps
sti
enter
(bad)
mov
jno
mov
or
addr16
push
jl
mov
and
repnz
mov
mov
aaa
inc
adc
add
jo
adc
dec
dec
sbb
adc
fistp
adc
shl
pop
pop
ficomp
scas
add
dec
ins
sbb
sub
xor
(bad)
jnp
dec
rol
out
retf
dec
jle
fisttp
add
aad
rol
out
test
mov
sti
fld
sub
adc
and
push
mov
repz
popf
and
sbb
(bad)
add
fnstcw
popa
and
mov
mov
pop
cmp
adc
ins
jl
dec
in
ret
jmp
lock
mov
mov
sbb
sub
outs
sbb
mov
aam
lds
fdivr
push
(bad)
jae
mov
or
loop
add
fbld
sub
test
cmp
jl
mov
ror
ret
mov
pop
mov
data16
test
jbe
mov
call
cmc
sbb
mov
push
cmp
push
out
out
add
ins
pop
mov
xor
and
cs
cmc
jnp
push
xor
loopne
imul
cmp
cdq
call
xor
and
out
int3
jno
test
fucomi
xchg
pop
nop
sub
lods
div
and
ss
loope
jbe
icebp
mov
inc
in
leave
sbb
push
jmp
test
std
ret
mov
cld
fsub
mov
aaa
cli
addr16
fdivrp
adc
jl
inc
inc
jno
jo
test
ss
lahf
sti
cmps
xchg
sub
dec
daa
aad
das
mov
rcr
and
push
mov
push
retf
sub
mov
iret
icebp
or
inc
shr
cmc
xor
ja
jge
inc
jmp
push
add
fidivr
add
push
dec
fsubr
imul
(bad)
fld
mov
adc
mov
pop
cwde
push
je
fmul
iret
sub
cmp
stos
and
mov
sbb
(bad)
push
repnz
sahf
jg
paddsb
jno
jo
outs
sub
int3
lods
lods
ret
jecxz
scas
mov
push
mov
out
jp
sub
xchg
test
cmps
mov
call
test
xor
imul
adc
add
cmp
pop
xor
mov
xlat
(bad)
retf
test
pop
jl
loopne
mov
mov
loope
mov
jne
data16
in
scas
dec
(bad)
mov
xor
inc
adc
test
enter
ret
mov
ret
fnstcw
out
add
test
call
outs
push
lahf
mov
dec
add
jmp
test
sbb
(bad)
jae
push
clc
pop
sbb
pop
xchg
fisttp
xchg
retf
pop
adc
fs
mov
out
xchg
xchg
inc
and
pushf
dec
and
and
ss
out
les
fsubr
daa
pop
xchg
mov
jne
push
add
cwde
push
add
js
leave
and
imul
mov
jns
lock
dec
mov
or
mov
sbb
dec
cmps
test
mov
jmp
outs
jmp
xchg
les
and
xor
mov
clc
mov
mov
rcr
adc
cmp
fnstcw
inc
cdq
retf
fld
ins
out
fst
add
sbb
test
fdivr
jb
adc
mov
pushf
cmps
ret
inc
je
xor
stos
das
nop
cli
xchg
dec
ret
push
daa
xchg
call
test
aam
mov
cmp
jne
and
xchg
shl
bound
mov
cmp
ds
push
icebp
jbe
into
out
sbb
inc
test
push
icebp
scas
mov
mov
and
ror
xchg
mov
mov
push
pop
scas
leave
xlat
retf
or
das
and
mov
sbb
mov
cmp
cmc
push
mov
dec
xor
jo
cld
add
pop
mov
lea
fiadd
enter
iret
lds
pop
sub
je
sbb
cmp
lods
cli
enter
inc
hlt
jmp
popa
xchg
retf
arpl
push
imul
xor
std
lods
and
arpl
and
push
inc
sub
rcl
sbb
hlt
mov
daa
(bad)
pop
cmp
hlt
bsr
mov
xchg
sub
imul
(bad)
bound
es
mov
jcxz
adc
fsubr
stos
adc
lea
add
sub
mov
data16
lods
jno
shl
rol
or
ja
and
loop
or
mov
cmps
loop
jmp
xor
jae
and
fldl2e
push
stos
push
cmp
or
and
aam
jl
jl
jno
imul
shl
push
(bad)
nop
cmp
mov
pop
jo
push
addr16
sub
cmp
fs
xchg
in
dec
pop
cmc
inc
imul
add
xor
mov
push
std
cmp
and
add
js
jge
mov
add
cmp
cmp
xor
mov
cmp
sbb
push
bound
ret
test
loope
int3
push
pop
push
cld
js
dec
cmp
and
or
cld
adc
popf
je
dec
push
mov
(bad)
jo
push
jne
in
xchg
or
lahf
shr
call
and
sbb
aas
sub
daa
or
loopne
and
jae
adc
push
dec
xor
push
xor
call
(bad)
fs
push
daa
sar
pop
outs
fmul
adc
mov
xor
lds
or
xchg
int
dec
xor
sub
retf
sub
and
mov
mov
add
mov
leave
(bad)
ror
leave
lahf
or
retf
ret
xor
xor
lahf
dec
inc
(bad)
and
push
jnp
push
mov
ret
xor
cwde
aam
call
stos
repnz
or
jl
stos
outs
rcl
jp
sar
dec
dec
add
ss
lock
push
dec
sbb
xchg
mov
xor
xor
mov
inc
data16
and
jo
inc
xor
int3
jecxz
add
cmp
pushf
(bad)
repz
jb
pop
adc
jae
shr
lahf
daa
lods
jo
jmp
xor
xor
outs
mov
fwait
mov
or
mov
xchg
call
mov
enter
xor
jmp
jnp
xchg
nop
push
sub
inc
loopne
mov
dec
mov
inc
sub
loopne
ja
mov
xchg
cld
dec
cdq
cmp
jmp
jg
xor
push
ror
je
retf
call
call
push
leave
dec
fiadd
inc
inc
rcr
jae
xchg
lds
inc
pop
fsub
pop
sbb
add
repnz
push
cli
push
sub
rep
xor
sbb
test
push
loope
lahf
(bad)
cmp
bnd
nop
xchg
push
cs
(bad)
jns
ret
and
xchg
bound
sbb
outs
fisub
ins
sub
or
push
xchg
stc
add
lahf
mov
push
stos
mov
mov
mov
cmp
xor
pop
cmps
mov
push
mov
fcmovnb
in
dec
xchg
call
and
sub
pop
xor
mov
adc
inc
gs
cmp
mov
fistp
xor
loopne
out
test
sub
gs
inc
les
xor
sub
mov
and
je
fwait
sub
cld
aaa
inc
mov
cmp
fild
enter
aam
xchg
into
xlat
out
xchg
push
xchg
mov
fcomp
dec
int3
sahf
stc
movs
data16
sub
jge
mov
cvtpi2ps
lods
push
inc
test
adc
int
aas
dec
or
cmp
out
shl
mov
js
xor
jecxz
shl
out
shl
sub
pop
rol
test
push
pop
and
add
aad
nop
cwde
adc
call
add
cli
lods
xchg
adc
popa
test
out
test
mov
lds
pop
aas
and
std
add
add
stos
gs
xchg
hlt
test
cmp
(bad)
jo
das
out
cmps
xchg
push
ror
xchg
rcr
mov
and
ins
cwde
(bad)
js
js
sbb
ins
icebp
out
inc
push
test
call
mov
xchg
or
shl
sbb
and
mov
stos
out
mov
dec
sti
ds
xor
xor
jbe
pop
retf
aam
daa
mov
rcl
and
jo
mov
add
arpl
fadd
jl
pop
rcr
xchg
rcl
inc
or
push
repz
jns
mov
stos
mov
daa
retf
fisttp
and
cmp
mov
adc
movs
add
inc
(bad)
push
xchg
pop
mov
jg
mov
ret
sub
inc
cwde
clc
jae
popa
fsub
stos
inc
push
int3
jg
js
in
mov
dec
adc
mov
data16
fidivr
mov
inc
test
push
mov
push
jp
mov
push
iret
mov
pop
stc
cdq
(bad)
push
cmps
pop
pop
aam
fild
ins
push
add
add
xor
cmp
mov
iret
xchg
and
xor
inc
pusha
xchg
push
add
les
(bad)
jnp
mov
scas
imul
inc
mov
push
mov
mov
in
rcr
jbe
or
retf
add
shl
les
cdq
pop
pop
fxch
fidivr
loope
jg
adc
mov
ret
pop
stos
call
std
into
sbb
and
fs
inc
sbb
mov
sbb
add
mov
sub
cdq
sbb
cs
push
ror
add
sbb
and
mov
leave
retf
xchg
mov
sbb
sbb
test
rol
pop
sbb
cmp
movs
xlat
dec
ins
outs
call
out
push
adc
test
xchg
imul
inc
fisttp
cld
mov
jg
in
imul
cmc
mov
ret
mov
call
sbb
(bad)
fild
xchg
or
enter
push
cmp
std
outs
mov
mov
mov
fnsave
call
mov
repz
dec
sbb
cmp
and
bnd
xchg
retf
xor
xchg
pop
sbb
fisttp
in
and
jmp
retf
addr16
lahf
scas
lods
add
inc
out
add
sbb
mov
fs
cmp
in
(bad)
je
adc
or
in
mov
sub
out
shl
push
or
pop
in
sbb
cdq
mov
cmp
mov
or
and
jns
jmp
cld
in
test
mov
sbb
jnp
rol
jbe
mov
xchg
sub
mov
stos
ds
stc
mov
dec
popf
cli
icebp
inc
cmp
jno
data16
inc
add
repnz
mov
pop
jl
mov
mov
add
ja
adc
and
push
or
pop
lods
jmp
cmc
rcl
mov
popa
mov
push
cmp
outs
fwait
push
ja
mov
xor
cdq
cwde
out
rol
push
cld
loope
inc
and
jmp
add
lods
or
movs
sar
xchg
fisubr
nop
cmp
int3
leave
xor
xor
inc
xchg
imul
cmps
mov
std
lock
adc
imul
inc
mov
add
push
rcl
jns
pop
cmps
cmp
test
mov
mov
pushf
aaa
and
mov
xchg
or
or
cld
mov
mov
jmp
(bad)
hlt
jmp
out
add
push
rcl
xchg
(bad)
ret
movs
mov
sbb
clc
test
pop
mov
outs
call
inc
xor
repz
mov
jp
sbb
outs
pop
in
aam
inc
aas
or
add
retf
std
data16
mov
sbb
fisubr
es
out
pop
sbb
in
push
or
push
push
mov
int
(bad)
mov
cmp
sbb
lahf
xchg
cmp
mov
pop
out
sbb
into
adc
icebp
or
ins
mov
mov
dec
mov
jle
retf
mov
push
xor
dec
sub
mov
fnstenv
or
outs
cwde
pop
push
sub
test
fistp
out
adc
dec
in
(bad)
fisubr
pushf
dec
mov
xchg
ds
inc
push
pusha
movs
std
add
cmp
jecxz
dec
fwait
ret
lods
int
xchg
cmp
outs
inc
lods
cmps
dec
jae
adc
mov
icebp
pop
stc
in
jmp
cmp
pop
inc
mov
imul
or
add
in
sub
or
mov
neg
mov
test
inc
and
xchg
mov
mov
clc
retf
jnp
out
leave
xor
push
shr
push
out
mov
shl
call
ins
test
pushf
push
lods
or
leave
dec
add
lock
or
fwait
retf
xchg
pop
cmp
icebp
in
loope
xchg
or
push
cmp
cli
cmps
mov
loope
push
adc
jae
or
fnsave
xor
lods
dec
dec
movlps
fist
ficomp
popa
xchg
popa
mov
icebp
inc
and
xor
mov
adc
push
dec
int3
loopne
or
jle
aam
pop
and
jnp
adc
pop
sar
mov
inc
xchg
or
popf
popa
movs
std
inc
bound
dec
int3
shl
mov
gs
test
in
mov
rol
cmp
dec
xchg
in
push
pusha
cmp
mov
xchg
inc
cdq
iret
jge
arpl
loope
mov
mov
in
pop
ja
test
push
lods
dec
inc
div
scas
scas
dec
call
ror
adc
pop
cwde
xor
push
enter
imul
jl
(bad)
leave
arpl
retf
cld
mov
icebp
data16
pop
and
ins
mov
(bad)
repnz
icebp
es
jns
arpl
sbb
sbb
cmp
ror
dec
push
bound
div
mov
stos
mov
cmp
fst
cmp
pop
aas
in
aad
test
fldenv
sar
les
test
bound
or
rcr
call
adc
pop
pop
mov
cmps
retf
arpl
cmp
xchg
xor
cdq
clc
(bad)
pop
into
loope
dec
div
aas
retf
jle
adc
cdq
stc
sbb
sub
xor
mov
jo
xchg
inc
mov
push
jo
sbb
or
dec
push
mov
sub
cmp
and
sahf
cs
das
rol
mov
pop
pop
rcr
xor
mov
mov
ds
in
mov
test
mov
add
inc
or
popa
ret
push
jmp
shl
(bad)
cwde
and
aas
ficomp
pop
in
ins
das
dec
jmp
sbb
xchg
imul
mov
je
mov
pop
mov
(bad)
fnstsw
mov
xor
adc
sbb
or
adc
popf
pop
clc
pushf
add
inc
mov
inc
mov
ret
or
adc
sbb
mov
xor
aad
dec
or
pop
les
fsubr
push
rcr
in
std
adc
fst
(bad)
dec
(bad)
movs
mov
sbb
aaa
stc
push
sbb
xor
cs
aas
mov
loopne
fbstp
sbb
sar
int
shl
test
xchg
dec
repz
push
xor
sbb
into
stc
xor
pop
scas
fwait
mov
mov
and
push
scas
push
mov
or
stos
add
inc
jle
cmps
xor
out
js
call
in
sub
dec
xchg
fisttp
pop
daa
xchg
fdivr
cmps
add
test
enter
in
iret
xlat
cld
popf
sti
sbb
pop
cmc
sub
cs
adc
int3
jg
bound
out
sub
cmps
adc
pop
push
xchg
jne
sub
jnp
out
in
xor
mov
push
popa
aaa
stos
adc
sbb
cdq
cmp
addr16
sub
sub
jge
scas
mov
(bad)
in
imul
adc
adc
stos
dec
push
pop
in
sub
jmp
xchg
jg
pop
jmp
jmp
mov
fadd
mov
jle
sahf
xchg
mov
fwait
in
inc
lahf
mov
push
enter
test
mov
aas
inc
fmul
or
mov
dec
inc
dec
jnp
cmp
retf
jns
inc
test
and
data16
mov
adc
in
inc
push
leave
mov
dec
sub
push
outs
mov
leave
jbe
pop
hlt
es
inc
sbb
mov
fist
dec
and
jmp
mov
push
cld
push
or
loop
dec
les
data16
stos
popa
push
stos
cmp
out
in
inc
mov
lock
call
xchg
pop
je
xchg
les
leave
iret
inc
sub
xchg
or
or
into
fsub
jge
adc
(bad)
les
test
fwait
mov
fsub
mov
stos
and
loopne
xor
inc
imul
sub
outs
inc
cmp
shl
push
arpl
test
cwde
xchg
or
pop
mov
sub
jae
pop
ficomp
jmp
rcl
mov
sub
int3
jnp
(bad)
mov
dec
mov
ins
in
sbb
xor
jnp
xchg
clc
and
mov
push
lds
dec
loopne
into
cld
test
clc
and
xor
mov
das
addr16
dec
dec
mov
loope
pop
js
clc
cmc
movs
mov
mov
adc
jns
xchg
sub
inc
pop
ds
xchg
mov
addr16
les
adc
push
movs
mov
sbb
js
inc
mov
push
arpl
(bad)
xor
lea
mov
sub
loopne
js
stos
out
js
in
xor
pop
ins
lahf
mov
ja
pop
cmc
xor
pusha
dec
push
das
mov
repnz
and
mov
mov
or
nop
jno
das
cmp
ja
xor
push
ret
adc
push
lds
movs
fcomp
push
jmp
push
retf
mov
xor
dec
in
jno
push
push
sar
cmp
aad
xor
repnz
push
pop
push
sbb
adc
stos
cmp
cmp
clc
add
outs
jle
shr
cmps
mov
mov
sbb
sti
(bad)
cmps
outs
test
push
cmp
and
aas
ja
fisub
lahf
ret
or
sub
mov
test
sbb
and
das
lds
ror
dec
outs
jmp
in
xor
ds
dec
pop
jp
in
outs
inc
stos
xchg
fdivr
popf
ret
cmc
inc
push
pop
leave
jnp
fcmovu
mov
les
adc
repz
push
sub
inc
int3
mov
lods
test
xor
mov
add
repz
(bad)
cmps
jp
daa
data16
cmc
imul
mov
mov
popf
cmc
cmc
mov
sub
int3
push
repz
sub
ja
mov
dec
mov
imul
push
jle
mov
xchg
maxps
sar
das
xchg
cld
mov
iret
rcl
pop
mov
and
ret
or
mov
cs
(bad)
xor
(bad)
jnp
out
mov
jbe
mov
fisttp
and
mov
cmp
ret
(bad)
in
jecxz
cmps
ins
jg
cmp
mov
aaa
mov
pop
lds
and
add
or
imul
loop
pop
ss
push
push
mov
inc
int
mov
lods
jge
je
rcl
mov
(bad)
inc
outs
jno
adc
out
sub
xor
adc
mov
fwait
shl
sar
inc
dec
mov
adc
loope
sub
scas
mov
scas
fcomp
std
adc
loope
hlt
test
jg
and
mov
inc
xchg
sub
mov
push
xor
and
ficomp
mov
inc
jo
and
enter
imul
mov
cmp
mov
add
cmp
aas
out
retf
dec
push
xor
les
add
xchg
jo
pop
out
sbb
sahf
test
setns
cmp
jp
xor
jae
hlt
pinsrw
add
aam
cmp
cmp
shl
push
cmp
mov
test
jl
dec
sar
enter
aaa
jbe
dec
pushf
outs
sahf
xor
into
xchg
repnz
mov
mov
jle
ret
adc
fldenv
repz
lock
cmc
inc
pop
in
xlat
mov
repz
retf
cmp
mov
pop
ficom
push
inc
jmp
mov
dec
adc
mov
in
xchg
jno
pop
xchg
mov
pop
daa
outs
mov
shr
add
mov
pop
(bad)
mov
mov
das
and
sbb
in
ret
sub
fistp
jo
in
shl
or
in
push
sub
loope
pop
pop
jb
fldcw
pop
sub
in
out
mov
mov
mov
mov
mov
ds
sti
lds
(bad)
mov
pusha
mov
mov
(bad)
ds
(bad)
es
inc
or
in
xchg
repnz
dec
inc
into
sar
mov
ror
leave
mov
cpuid
pop
pop
inc
out
push
test
mov
lods
jb
adc
inc
inc
mov
jmp
rcl
dec
mov
arpl
sahf
adc
jg
les
out
retf
push
sar
loopne
sar
dec
adc
mov
dec
dec
es
cmps
mov
mov
jmp
sbb
rol
sbb
pop
jge
sbb
add
push
ret
cs
gs
js
sbb
das
sub
and
cli
sbb
movs
mov
sub
fldcw
inc
call
push
loope
add
loopne
scas
scas
mov
(bad)
int
mov
leave
ss
sti
adc
dec
mov
cmc
and
dec
dec
cwde
aad
jnp
icebp
and
and
int3
adc
sti
or
in
xchg
(bad)
jnp
pop
shl
(bad)
mov
std
pop
mov
jmp
dec
in
push
ror
cdq
jo
leave
jmp
fldl2t
and
shl
(bad)
sar
adc
push
(bad)
fild
xlat
mov
test
bound
dec
and
pop
pop
mov
test
retf
in
add
por
pushf
cmp
jmp
mov
ror
cmp
push
sbb
pop
push
test
loope
mov
push
inc
xor
push
shl
das
repnz
sbb
and
fwait
iret
fwait
adc
push
popa
mov
out
push
aas
xchg
in
call
pop
and
in
push
adc
adc
stc
(bad)
or
adc
mov
mov
int3
aam
push
xor
sub
cld
add
into
ret
cmp
ffreep
lds
cmps
jns
sbb
mov
inc
add
mov
imul
jbe
or
fbld
xchg
mov
daa
pop
and
mov
fdiv
and
sti
ins
fld
dec
shr
xchg
sub
sbb
popf
mov
mov
int
sti
enter
call
adc
mov
mov
mov
ss
test
rcr
scas
jbe
cs
imul
cmps
ins
rol
data16
aaa
xlat
jp
push
dec
dec
mov
aam
mov
xor
adc
or
dec
test
sbb
shr
sar
out
mov
inc
and
jg
loope
scas
push
cmp
jmp
jo
retf
mov
cmp
daa
mov
jl
cld
ja
and
pop
je
pop
test
jmp
rcl
push
fst
test
pusha
fisub
je
add
add
shl
xor
dec
and
mov
fucomi
out
adc
xchg
sar
inc
aam
dec
dec
sbb
stos
cmp
(bad)
ins
movs
pop
push
push
pop
hlt
nop
in
arpl
leave
dec
push
sahf
jne
dec
push
cli
stc
test
out
dec
xor
in
jg
out
daa
or
mov
clc
arpl
sbb
adc
mov
xor
int
(bad)
std
mov
test
call
std
ja
cmp
mov
xchg
pop
pop
jo
mov
xor
(bad)
adc
push
jle
ds
cmps
inc
lods
fst
arpl
push
add
imul
push
dec
enter
lods
push
pusha
xchg
repz
and
or
sbb
cmp
frstor
das
and
dec
adc
xor
cmps
mov
sbb
movs
jno
xor
dec
shr
jl
or
scas
inc
sbb
push
je
cmc
ret
and
outs
arpl
out
fisubr
lds
mov
xchg
jne
pop
push
mov
mov
xchg
sbb
call
mov
jo
sti
xchg
fisubr
jmp
retf
sub
ds
rep
retf
pop
je
and
in
pop
pop
or
pop
mov
ss
pop
mov
cmp
in
sbb
stos
push
cmc
(bad)
xchg
xchg
pop
movs
ds
mov
rcr
inc
xchg
mov
cmc
jnp
in
mov
push
enter
call
inc
sti
xor
add
mov
sbb
out
cmp
movs
cwde
xchg
retf
cs
in
pop
mov
jecxz
xor
jnp
jb
or
imul
out
dec
enter
cmp
pop
dec
cmc
mov
outs
fimul
test
push
mul
pop
mov
xor
movs
fld
inc
and
cmp
adc
jmp
bound
(bad)
cmp
imul
jno
hlt
add
retf
movs
sti
xor
xor
jmp
xchg
mov
in
xlat
aaa
sbb
neg
pop
(bad)
pop
cmp
mov
repz
sbb
jl
mov
data16
jecxz
movs
idiv
mov
mov
cmp
lods
mov
out
mov
push
loope
movs
bound
repnz
push
mov
movs
shr
xor
fcmovnu
aaa
gs
lds
xchg
jns
aaa
adc
ror
lods
in
dec
mov
dec
inc
rcr
mov
add
cmp
or
xchg
out
jnp
pop
daa
(bad)
mov
mov
rcr
je
fist
mov
ins
push
mov
aas
daa
call
lods
retf
add
xor
scas
imul
xor
jb
jge
add
shl
fstp
iret
jne
pop
mov
inc
ss
push
cmps
dec
and
aas
cs
and
inc
jmp
or
jno
adc
cmp
cs
xor
mov
ret
xor
addr16
sub
int3
in
or
jne
lods
into
sbb
test
adc
adc
xor
sub
jg
xchg
arpl
mov
clc
out
loopne
lahf
mov
mov
int3
xchg
ins
pop
mov
lahf
mov
lahf
mov
neg
inc
jno
retf
sbb
pop
arpl
pop
setnp
mov
movs
mov
mov
xor
sbb
loope
push
mov
repz
xchg
ficomp
arpl
fistp
sub
adc
pop
pop
add
aas
fidiv
jg
pop
fdivrp
cs
fistp
test
xchg
mov
sar
jae
lahf
jmp
ret
xchg
mov
mov
ds
push
cld
xor
xchg
mov
pop
(bad)
in
leave
mov
fcomp
jne
sbb
pop
lahf
mov
fsubr
xor
stos
xchg
xchg
fimul
and
pop
mov
adc
pop
mov
and
cmp
sbb
imul
dec
lds
int3
scas
jge
cwde
xchg
push
dec
and
inc
das
pusha
js
adc
sub
je
(bad)
xchg
ror
pop
jnp
pop
pop
xchg
jg
mov
fcmovbe
ins
pop
aad
cdq
sub
push
sbb
mov
stc
xor
je
mov
or
cmp
movs
jae
leave
shl
arpl
stos
mov
dec
pop
add
sub
out
mov
and
push
cdq
aad
mov
leave
sub
adc
xchg
out
cs
je
mov
lods
mov
movs
jo
jmp
addr16
jecxz
push
cmp
test
pop
sub
das
sti
call
xchg
cdq
pandn
jnp
mul
push
(bad)
adc
sub
push
pop
ins
fs
jb
sub
iret
and
leave
dec
lea
ret
(bad)
push
sbb
mov
sahf
inc
ins
add
jp
arpl
stos
div
xlat
sbb
sbb
cmp
es
imul
retf
jne
dec
ss
fistp
inc
sbb
ja
loop
outs
jbe
dec
add
xor
push
xchg
sbb
add
jae
mov
pop
mov
adc
sub
scas
int
mov
in
jno
sbb
test
xchg
lahf
pusha
jne
adc
out
dec
add
(bad)
mov
dec
stos
cdq
outs
test
(bad)
mov
ds
(bad)
lods
xor
cmps
mov
sbb
mov
lds
mov
retf
cmc
test
cmp
add
pushf
dec
adc
pusha
dec
daa
mov
xor
sub
out
dec
sub
gs
and
or
mov
add
lds
ss
adc
inc
fist
lds
shl
in
movs
mov
ret
js
call
push
js
xchg
cmp
outs
and
push
das
pushf
inc
call
stc
mov
mov
mov
dec
sub
or
jge
test
(bad)
lds
cmp
inc
mov
push
jmp
jecxz
mov
mov
mov
inc
sub
inc
jle
and
out
sbb
repz
adc
mov
adc
fdivr
call
push
das
movs
dec
(bad)
sbb
icebp
mov
push
int3
imul
and
mov
jne
repz
pusha
mov
pop
and
adc
(bad)
jne
cmp
inc
(bad)
xor
sbb
cli
add
and
inc
enter
repz
in
fs
out
hlt
les
mov
lahf
bound
inc
fcomi
jmp
dec
nop
dec
cmp
pop
sub
mov
movs
dec
ss
dec
outs
adc
fidivr
cmps
pop
and
imul
jp
(bad)
not
mov
pop
adc
mov
pusha
das
jl
lahf
in
(bad)
int
dec
dec
sbb
ret
test
mov
popf
dec
test
inc
pop
lods
xchg
dec
lods
es
push
retf
ret
add
cmp
lods
cmp
daa
sub
retf
or
mov
repnz
push
xor
fst
cmp
cmp
pop
mov
retf
sbb
xor
mov
jp
dec
mov
pop
ins
mov
pop
jae
mov
jo
push
retf
out
push
inc
sub
sub
mov
jp
mov
mov
dec
dec
add
jmp
add
mov
retf
xchg
movs
mov
push
cmp
xor
aas
retf
pop
xor
bnd
sbb
cmp
mov
fdivr
mov
jmp
inc
int
leave
ins
or
pop
jbe
push
test
pop
and
fdiv
fs
and
adc
push
(bad)
repnz
sbb
out
add
mov
and
mov
sar
fidivr
sti
jge
ds
mov
xor
cmps
inc
cmp
arpl
dec
neg
daa
and
mov
ret
and
xchg
idiv
aas
jns
aad
xchg
and
adc
jb
(bad)
cs
sbb
sbb
sti
iret
mov
mov
(bad)
mov
and
mov
out
lds
jne
push
mov
loope
mov
ret
aas
stos
mov
xor
push
xor
in
pushf
cmovp
mov
or
mov
sbb
call
mov
pushf
xor
jp
pusha
loop
cmp
push
cmp
repz
pop
pop
iret
out
dec
hlt
mov
jns
fstp
in
lods
mov
clc
cmp
dec
test
das
fsubp
cdq
push
mov
lock
lods
shl
jmp
xor
push
mov
mov
pop
mov
(bad)
xor
push
xlat
int3
mov
mov
push
jno
ja
lods
jp
enter
mov
sahf
sbb
enter
mov
retf
cmp
pop
and
aas
cmp
and
aad
xor
push
lods
mov
add
cld
out
jmp
hlt
outs
cmc
push
mov
mov
cld
mov
sub
sbb
adc
cmp
inc
dec
hlt
sbb
or
sbb
leave
cmp
outs
aam
add
cmp
pop
js
imul
repnz
push
fnsave
inc
in
inc
mov
icebp
jmp
test
jno
mov
pop
or
dec
adc
xchg
std
mov
sbb
enter
(bad)
jnp
cmp
(bad)
pop
sbb
push
mov
int3
inc
jg
test
xchg
pop
jg
je
pop
mov
dec
aad
sbb
and
adc
ret
add
and
mov
pushf
mov
xchg
mov
sbb
or
pop
in
retf
xor
movs
sbb
inc
xor
sub
(bad)
sbb
inc
push
mov
cmp
pusha
inc
pop
loope
inc
mov
scas
jno
sbb
inc
mov
add
pop
or
inc
nop
push
fcom
arpl
jg
pop
add
pop
dec
sub
lods
jl
sub
xor
cs
ret
shr
push
xchg
jno
daa
xor
loop
stos
sbb
dec
ja
aas
mov
push
shl
xor
sbb
ds
jns
mov
ret
ror
sbb
adc
into
xchg
pop
mov
cmp
sbb
jl
sbb
leave
or
cwde
(bad)
mov
push
in
mov
inc
cmc
in
or
xchg
ja
jb
idiv
adc
je
in
mov
sahf
fsub
into
push
bswap
movs
cmp
jge
xchg
pop
cmp
loopne
daa
hlt
cdq
add
(bad)
out
clc
mov
mov
cmp
sbb
adc
xchg
mov
xor
jmp
mov
xor
sbb
sbb
jne
cmp
fidiv
outs
pop
loop
cmc
push
pop
ret
mov
iret
dec
adc
mov
sub
mov
xchg
inc
xchg
call
clc
mov
(bad)
sub
loop
std
test
xchg
mov
movs
fidivr
sti
(bad)
lea
jge
push
push
(bad)
sub
outs
add
or
dec
fs
sub
fld
pop
shl
lds
out
adc
xor
mov
movs
loope
adc
and
or
jne
mov
and
les
jge
mov
and
rcr
add
xor
fs
sub
ds
mov
jge
pop
jecxz
in
cmp
loopne
stos
ja
fisub
xchg
xchg
add
mov
sbb
movs
sbb
fistp
and
sbb
repz
cli
sbb
cdq
jp
add
scas
mov
jmp
(bad)
dec
or
imul
ror
repz
scas
fisttp
adc
mov
fcom
rcl
add
ins
pop
clc
enter
add
jo
mov
pop
adc
pop
lods
mov
ret
pop
femms
in
cmp
pop
ja
push
(bad)
stc
int
mov
pushf
adc
pop
push
inc
ror
inc
into
imul
repnz
rcl
and
push
enter
icebp
add
dec
jne
add
xor
or
aad
push
cmp
and
xchg
adc
mov
mov
push
jg
(bad)
xchg
fnsave
xlat
ss
pop
pusha
push
push
mov
imul
xchg
nop
outs
leave
out
(bad)
and
movs
or
(bad)
pop
out
in
outs
js
mov
cs
loope
adc
(bad)
bound
push
pop
sub
mov
mov
jb
(bad)
(bad)
call
add
ftst
pop
mov
push
lds
cmps
pusha
push
call
xchg
cmc
sub
adc
xor
addr16
adc
in
test
std
mov
ja
fstp
cmp
(bad)
push
mov
fnstcw
iret
push
sub
stc
arpl
fdivr
xchg
fild
pop
fwait
(bad)
xchg
mov
sub
sbb
xor
shr
push
sub
and
mov
mov
inc
cmp
sti
mov
push
mov
jmp
or
adc
dec
fnstsw
ss
fs
scas
dec
inc
es
mov
mov
and
cmp
or
fstp
icebp
movs
cwde
in
push
cld
xor
push
jecxz
and
mov
stc
icebp
leave
test
jmp
retf
je
data16
js
mov
add
neg
inc
(bad)
jecxz
add
icebp
jno
cli
jb
(bad)
in
pop
stos
stos
repnz
lds
dec
mov
xor
(bad)
and
imul
mov
dec
imul
sub
mov
mov
lock
sbb
retf
cs
or
out
xchg
test
setne
leave
fld
cwde
ins
dec
(bad)
ja
loopne
rol
sub
mov
mov
xlat
mov
into
daa
fs
mov
movs
jmp
call
into
sbb
adc
test
jnp
or
mov
(bad)
push
cs
fwait
xchg
mov
ret
xchg
dec
pop
fld
pop
cdq
aas
shl
enter
xor
adc
and
arpl
add
mov
pop
(bad)
jmp
faddp
in
rcr
enter
xchg
std
xor
pop
jl
mov
test
xchg
push
in
ss
or
fnsave
cli
in
ret
pop
jo
pop
inc
inc
push
mov
cli
jbe
pop
pop
and
retw
int
xchg
stos
std
gs
fbld
cmps
push
xor
inc
mov
stos
sbb
retf
cmp
jle
pop
out
add
pop
rol
ret
not
loop
pop
cmps
push
xchg
dec
sbb
xor
and
jmp
mov
pop
sub
pop
ror
push
mov
out
jne
imul
(bad)
icebp
imul
out
mov
inc
fistp
ins
jno
movs
pop
and
stos
ins
cmp
jp
mov
jne
cmp
jmp
add
(bad)
neg
mov
shl
fwait
mov
sbb
sar
call
retf
push
dec
mov
pop
sbb
sbb
ds
out
lods
mov
dec
aaa
cmc
adc
add
sbb
jo
clc
sbb
fldcw
test
cmc
in
and
mov
iret
lahf
xor
lods
xchg
jmp
push
mov
xchg
sar
and
jp
sbb
call
cld
add
test
push
scas
push
jns
adc
inc
inc
inc
rcl
dec
fild
rcl
ja
jle
in
rcr
dec
push
and
mov
add
jge
aad
push
dec
test
dec
mov
sub
adc
mov
mov
out
jecxz
shl
mov
xchg
jg
sahf
sub
or
lea
loopne
pop
outs
fstp
in
push
lds
movs
pop
mov
jecxz
mov
pop
pop
jle
outs
jne
std
sub
pop
jmp
and
mov
inc
push
xchg
cmp
lds
iret
adc
xor
pop
cwde
cmp
pop
jmp
faddp
je
sub
mov
jg
xor
stos
xchg
sbb
mov
into
mov
and
mov
iret
add
add
(bad)
loopne
mov
or
call
cmp
fsub
or
loop
imul
jno
xor
outs
imul
sbb
push
dec
out
lods
cdq
xchg
jecxz
xchg
dec
loop
loop
lds
mov
xor
xor
mov
fdivr
movs
out
outs
nop
sub
(bad)
jns
sub
fwait
sub
(bad)
je
jmp
inc
lock
xor
jl
mul
push
mov
call
(bad)
or
ret
xor
mov
call
sbb
out
dec
push
cmp
and
jecxz
sbb
and
or
dec
sub
aaa
pop
pop
push
rol
push
addr16
sub
cmp
sti
call
xchg
rcr
dec
or
sbb
push
lods
pop
and
iret
mov
jnp
lods
add
sti
test
dec
inc
pop
hlt
dec
std
imul
cmp
add
or
loope
push
sti
add
ret
mul
mov
pop
pop
out
stos
(bad)
scas
fwait
add
pop
aas
sar
xor
mov
clc
lahf
push
aad
dec
cmp
fsub
imul
in
(bad)
movs
dec
jae
(bad)
repnz
stos
mov
iret
cmp
dec
stos
pushf
mov
add
xchg
inc
mov
jmp
int
(bad)
sbb
hlt
mov
fsubr
cmp
out
mov
cmp
push
lea
mov
pop
dec
sub
adc
dec
inc
aas
jb
lds
sub
jbe
(bad)
mov
outs
icebp
adc
pop
jae
cmc
in
cmps
add
push
(bad)
(bad)
int
loopne
cld
add
call
pusha
jp
mov
mov
dec
fsubr
ins
imul
push
sahf
jne
imul
outs
cli
jnp
fldenv
xchg
mov
js
jmp
sbb
(bad)
jns
xchg
push
push
jmp
int
fld
in
xor
shr
je
pop
rol
shl
mov
adc
sti
inc
(bad)
cdq
jecxz
int3
int
pop
das
inc
xchg
(bad)
sub
jbe
stos
movs
fcomp
add
(bad)
dec
sti
cmp
cdq
pop
shl
push
inc
repnz
iret
(bad)
arpl
mov
jg
sahf
(bad)
and
aam
js
je
scas
movs
cmp
mov
fst
loopne
sbb
pusha
and
sbb
mov
aaa
bnd
fisubr
mov
iret
rcl
mov
js
ds
(bad)
lods
push
pushf
jmp
and
lahf
dec
repnz
push
jmp
pop
mov
inc
gs
nop
mov
mov
dec
jb
mov
pop
movs
cdq
(bad)
movs
cli
icebp
xor
xor
sar
pushf
(bad)
jl
pusha
addr16
pop
pop
out
ins
fnsave
lahf
mov
mov
xchg
inc
movs
jne
and
mov
test
jmp
adc
pushf
sti
mov
fs
mov
add
pop
rcl
jg
mov
xor
cmps
jo
int
retf
shl
mov
fucomip
push
ret
gs
aad
(bad)
and
xchg
jbe
pop
dec
fcmovu
(bad)
mov
push
mov
jl
mov
lds
call
pusha
and
sub
(bad)
or
sbb
out
scas
cli
aam
jp
inc
mov
pop
shl
addr16
sub
les
pop
std
sti
add
sbb
adc
mov
(bad)
jo
aaa
mov
repnz
push
dec
popf
pop
fld
outs
or
xchg
push
push
fwait
and
sbb
iret
xor
outs
mov
sub
push
popa
mov
pop
jp
and
shr
mov
imul
xchg
scas
push
aam
(bad)
inc
addr16
inc
loop
jb
and
pop
pop
or
nop
outs
dec
dec
(bad)
sub
test
mov
movs
pop
sub
jne
push
clc
dec
or
mov
sub
shr
adc
ret
loopne
popf
push
hlt
(bad)
xchg
inc
mov
pop
sub
push
xchg
sbb
div
imul
mov
imul
and
popf
fbld
inc
adc
std
gs
dec
sub
imul
test
retf
xchg
(bad)
mov
ins
ins
(bad)
lods
test
push
mov
inc
and
fldcw
jo
mov
iret
add
stc
jge
inc
jmp
cmp
(bad)
imul
neg
mov
or
in
mov
test
stos
mov
imul
pop
ficomp
sub
into
call
fwait
js
jnp
sub
data16
push
lahf
mov
sti
mov
mov
not
inc
out
div
sbb
jmp
dec
jecxz
shl
adc
movs
popa
clc
inc
dec
jg
sar
addr16
inc
cs
int3
push
mov
ss
mov
cmc
jbe
in
addr16
sub
icebp
jbe
sbb
and
push
cs
call
cmc
cs
fimul
test
cmp
sbb
pusha
jecxz
nop
icebp
aas
jg
push
mov
cmc
mov
(bad)
std
in
adc
mov
xor
lds
push
push
push
enter
inc
sub
scas
pusha
fld
pop
lds
xor
push
fnstcw
int
lods
dec
cmp
adc
and
add
ds
xchg
or
retf
arpl
mov
or
(bad)
test
or
pcmpeqw
jle
sbb
jbe
dec
out
xor
xchg
cmps
int
dec
adc
ret
sbb
daa
data16
sbb
pop
inc
loop
pop
xchg
retf
popf
outs
retf
aad
ret
(bad)
sbb
dec
xchg
fs
mov
cmp
test
cmp
xor
cmp
fcmovb
aam
sub
ss
add
daa
jo
and
cmp
cld
cmp
sbb
inc
dec
fwait
dec
cmp
push
mov
not
dec
pop
out
ins
loope
push
xchg
fnstcw
outs
in
adc
mov
clc
mov
inc
icebp
test
push
push
mov
into
fsub
das
xchg
xor
fldcw
ja
popf
add
xchg
shr
sub
es
or
ds
mov
loope
rcr
fucom
test
shl
mov
inc
lea
(bad)
fcmovnb
jno
in
jecxz
ss
aas
mov
loopne
mov
movs
inc
inc
lock
mov
daa
in
mov
and
movs
call
sub
cmp
popf
push
mov
ficom
aas
pop
fadd
and
or
and
das
out
ins
adc
dec
and
and
aam
cmp
lods
jnp
jbe
sub
xor
loop
and
mov
in
lds
push
jmp
mov
add
pop
fadd
push
cs
mov
stc
(bad)
or
mov
outs
cwde
jnp
sti
fild
jg
aam
sahf
aas
jae
retf
cmp
pop
cmp
mov
adc
jl
mov
pop
dec
clc
fs
sub
ret
adc
test
mov
sti
mov
mov
pop
call
lahf
out
movs
popf
stos
mov
inc
or
popa
lds
(bad)
xchg
push
int
call
sub
rcl
call
jmp
adc
in
pushf
mov
mov
mov
retf
or
popa
fild
pop
sahf
jae
gs
outs
and
in
outs
push
pusha
inc
push
mov
dec
mov
cmps
xchg
icebp
cld
test
icebp
int
in
dec
pop
ins
or
mov
inc
(bad)
ret
out
and
and
fisubr
stos
push
dec
fs
jl
popa
and
ss
pusha
shr
mov
fisub
xchg
sub
pop
mov
cli
xchg
repz
jbe
mov
push
int
add
cmps
jle
mov
ficomp
lahf
mov
inc
or
dec
test
mov
sub
push
xchg
xlat
fadd
sbb
push
sbb
(bad)
mov
mov
cmps
dec
outs
xor
std
call
pop
pusha
adc
push
mov
mov
cli
loop
adc
je
mov
push
mov
inc
outs
fwait
call
mov
les
out
sub
sar
test
sti
ins
push
or
js
mov
and
lods
lahf
test
pop
lahf
bound
mov
fldcw
mov
mov
mov
lods
lahf
sar
aas
mov
adc
push
(bad)
aad
retf
push
or
in
xchg
inc
into
xchg
push
pop
(bad)
mov
or
cli
mov
pop
mov
xor
adc
sti
mov
in
inc
movs
mov
xor
add
inc
pop
cmp
mov
stos
es
xchg
adc
pop
or
lahf
lahf
cdq
mov
out
es
adc
cwde
repnz
ret
xor
test
or
movs
add
xor
push
inc
daa
push
enter
adc
mov
(bad)
(bad)
(bad)
mov
mov
sub
movs
cmps
bound
pop
scas
lods
fisub
ja
push
cld
popf
xor
or
jecxz
nop
inc
jle
sub
mov
outs
mov
push
popf
aas
and
xchg
mov
or
(bad)
and
pushf
enter
popa
js
push
push
pop
add
repz
mov
mov
or
push
ret
imul
mul
ror
cld
add
js
aaa
(bad)
loop
outs
xchg
mov
mov
jge
ret
push
pop
dec
add
push
lahf
js
inc
pop
(bad)
cmp
inc
sub
push
mov
sahf
dec
clc
retf
pop
aas
push
test
inc
dec
ror
rcr
mov
mov
adc
inc
sub
aas
pop
xchg
inc
sub
inc
push
dec
stos
imul
push
rcr
js
inc
(bad)
idiv
cs
push
ret
lahf
sbb
into
push
and
arpl
out
pop
push
add
cmp
jge
loopne
mov
xor
lds
je
jmp
sub
repz
mov
loope
(bad)
mov
sbb
test
repnz
inc
out
and
xchg
jo
repz
cmp
cdq
jmp
sti
fmul
and
xchg
rcl
ins
popf
dec
add
popa
jg
dec
mov
scas
mov
aaa
pop
sub
or
fild
mov
aas
xchg
push
jae
inc
jne
push
repz
repz
sbb
inc
out
jge
jmp
popa
cli
sti
mov
push
push
adc
xchg
jecxz
test
mov
arpl
pop
or
fistp
push
in
ss
mov
xchg
in
mov
jg
inc
mov
enter
add
imul
xor
cwde
cmps
inc
sub
jg
pop
sub
inc
mov
js
rcr
push
mov
mov
sar
mov
scas
mov
jl
mov
or
adc
stc
mov
cs
pop
fdivr
mov
rcl
fcom
arpl
jb
mov
rol
out
or
cwde
and
fcmovb
ja
ins
repz
cmp
xor
loopne
repnz
xchg
xchg
in
jl
fstp
push
push
mov
sub
dec
shr
cmp
or
jo
and
jns
cmp
sub
mov
sti
mov
cmp
arpl
fwait
ins
inc
into
xchg
and
dec
mov
std
les
push
sbb
test
jg
sbb
jnp
pop
xor
pop
arpl
jp
fmul
adc
jns
sahf
inc
into
bound
nop
xchg
pop
inc
(bad)
pusha
imul
ins
fdiv
test
mov
inc
xor
jns
daa
aaa
or
jp
nop
xor
xor
clc
ret
jg
sti
sub
add
inc
clc
sub
sahf
adc
push
scas
retf
ret
jo
popa
inc
scas
daa
jecxz
push
mov
imul
das
mov
jb
add
cmp
(bad)
push
ins
and
std
aam
add
cmps
xor
cmp
fwait
push
in
call
pop
pop
mov
pop
data16
adc
sbb
add
jl
and
sahf
cmp
mov
imul
sbb
xlat
jmp
xchg
je
or
outs
aad
mov
arpl
scas
test
rcl
test
pushf
imul
pslld
xor
cmps
mov
out
dec
pop
mov
or
aas
jecxz
ins
loop
xor
push
fmul
loopne
pop
gs
mov
or
rcl
nop
xchg
stc
fwait
mov
aad
(bad)
retf
test
int3
mov
inc
fisub
inc
(bad)
push
dec
ds
ins
out
mov
and
or
inc
fldcw
lock
xchg
cmps
mov
cmp
sahf
gs
rol
dec
mov
jae
cmp
jmp
xor
inc
jo
or
jg
or
das
loopne
lods
xchg
(bad)
rcr
or
sub
add
push
jne
mul
mov
les
sbb
sbb
push
sbb
push
aaa
jno
sub
fisub
leave
pop
lahf
loopne
sbb
inc
in
dec
jge
call
enter
xchg
xchg
rcr
sbb
pop
dec
lods
les
mov
das
cmp
sbb
or
mov
ins
pushf
pusha
shl
jnp
jmp
add
adc
cwde
mov
jecxz
xchg
stos
aam
imul
idiv
addr16
dec
ins
sbb
dec
cmpxchg
pop
imul
xchg
jecxz
cld
mov
jmp
nop
mov
stos
adc
pop
ss
push
mov
mov
dec
and
call
and
cmp
popa
mov
fldenv
inc
mov
xchg
inc
pushf
sbb
leave
and
mov
push
fild
jbe
add
ins
pop
int3
and
in
sbb
pop
cmps
jmp
iret
mov
stos
cmp
aam
adc
aam
call
or
or
fidiv
sbb
xchg
test
push
stos
daa
aad
cmp
jno
pop
ins
ret
sub
(bad)
les
in
arpl
pushf
cmp
aas
loop
mov
mov
adc
pop
mov
les
mov
push
xor
mov
push
lea
fnstcw
pop
xchg
mov
fnstsw
push
mov
enter
mov
clc
cmp
es
cmp
pop
pop
xchg
dec
sub
mov
xchg
xor
mov
data16
and
inc
add
leave
xor
repnz
or
ins
dec
dec
mov
js
add
pop
adc
in
pushf
or
mov
jmp
stos
imul
sbb
or
mov
dec
xor
enter
or
pop
sbb
sub
or
(bad)
jmp
pop
fisubr
and
retf
push
gs
cmp
sahf
je
and
lds
sub
das
mov
jns
sub
(bad)
dec
push
push
add
or
sub
lods
out
mov
sti
int3
test
mov
inc
sub
int
sub
jnp
ja
bsr
shr
mov
push
stos
fmulp
daa
ficomp
ffreep
jnp
jae
mov
jne
xchg
add
mov
pop
pop
sbb
xor
nop
push
not
aas
sub
pop
sbb
mov
test
cdq
mov
inc
loop
pusha
xchg
mov
xor
sub
push
pop
jmp
fnsave
pop
jge
mov
and
je
movs
or
ss
mov
sbb
inc
lds
in
push
fstp
es
notrack
(bad)
inc
sbb
repnz
mov
ror
push
jb
sub
mov
jl
xor
movs
arpl
in
clc
stos
scas
pop
ss
iret
xchg
jge
sbb
push
jg
loop
adc
pop
cmc
repnz
iret
and
shl
add
retf
xchg
repnz
stc
js
fwait
jge
test
jmp
lods
arpl
push
sar
enter
retf
sbb
and
or
adc
les
xor
push
sahf
cdq
lods
add
xor
mov
icebp
sbb
or
xlat
adc
cdq
xor
pop
ds
pop
outs
mov
and
mov
pop
sub
imul
fwait
(bad)
hlt
retf
clc
sub
pop
mov
movs
cmp
sub
cmps
mov
adc
clc
sbb
sbb
mov
sub
loop
test
sbb
mov
mov
cmp
or
inc
stos
aam
pop
jo
cdq
sub
and
dec
mov
sbb
shl
cmps
inc
repz
test
xor
xchg
mov
lea
xor
dec
mov
or
mov
or
cmps
test
and
int
pop
retf
pop
sbb
add
imul
lods
or
sbb
popa
in
mov
xor
or
int
adc
sub
cmps
mov
mov
mov
jp
hlt
mov
aas
add
aaa
lock
cmp
push
sub
dec
mov
mov
xchg
xor
mov
mul
in
add
fiadd
sub
stos
nop
repnz
push
mov
movs
aas
ret
and
loopne
dec
enter
sub
add
lock
jg
out
mov
adc
pop
or
cli
into
outs
add
frstor
and
cmc
data16
mov
icebp
cmc
jno
loopne
jecxz
xchg
and
aaa
mov
ds
test
jg
mov
and
sar
jmp
fisttp
stos
jnp
sub
scas
adc
repz
cwde
pop
gs
jmp
arpl
sti
aam
fst
jns
mov
das
xchg
sbb
das
dec
nop
jns
sub
movs
xor
pop
cmp
add
jae
and
nop
iret
sub
or
or
in
push
and
pushf
pop
loop
lea
mov
xchg
cld
add
stos
or
jno
push
xor
push
aaa
jg
ja
lods
or
mov
and
mov
mov
push
fcomp
rcr
mov
or
(bad)
and
mov
dec
mov
xchg
std
mov
and
bound
aas
mov
mov
enter
ins
out
mov
or
cmp
mov
sub
or
das
xor
xor
fistp
pop
test
jmp
psubq
mov
stos
bound
pop
or
mov
(bad)
sti
pushf
into
cwde
lods
jle
xchg
inc
loopne
jo
pop
add
xor
iret
not
test
ss
cmp
lds
stos
dec
sahf
int3
sahf
int3
pushf
mov
std
adc
ss
mov
cmc
sub
mov
add
mov
ds
sahf
repz
sti
pop
xor
push
mov
mov
cmc
es
mov
dec
jmp
add
or
and
cli
jnp
pop
jge
clc
test
pop
xchg
aad
or
out
das
xchg
mov
dec
sub
jmp
ret
call
inc
shl
sbb
dec
adc
or
sar
xor
add
or
sub
sbb
and
inc
fndisi(8087
sar
stos
imul
xchg
cmps
cmp
dec
mov
xchg
les
cmp
pop
xor
sbb
int3
xchg
scas
push
fstp
loope
stos
sti
and
movs
jg
jmp
mov
mov
pop
movs
sbb
icebp
imul
(bad)
mov
addr16
adc
or
jno
in
fcomp
mov
cld
(bad)
out
or
xor
mov
mov
xchg
fistp
mov
dec
aam
jnp
dec
jmp
mov
scas
call
xchg
es
jge
test
(bad)
jl
and
push
stc
sub
cwde
xchg
xor
mov
cdq
add
xchg
fist
jle
xchg
pop
popa
adc
lea
mov
repz
jns
xor
pop
jno
mov
dec
cs
jno
mov
mov
les
or
xchg
pop
dec
leave
in
push
cmps
lods
adc
inc
movs
or
jmp
push
iret
push
fnstenv
sti
out
sbb
cmp
cdq
cmc
mov
pop
lods
into
loope
loope
stos
xor
ins
pop
out
lock
mov
mov
hlt
pusha
leave
push
(bad)
in
dec
mov
xlat
xor
mov
les
gs
jmp
pop
sbb
xchg
outs
sbb
pop
int
aas
jmp
sbb
dec
clc
test
xchg
test
cmp
ficomp
loop
pop
xchg
stos
loopne
sar
push
test
jo
jmp
fidivr
cmc
inc
inc
fs
xchg
retf
in
addr16
push
aam
xchg
in
mov
outs
(bad)
fimul
(bad)
aam
daa
mov
out
out
lods
push
loope
adc
mov
mov
stc
dec
inc
jbe
and
xchg
(bad)
mov
xor
loop
pop
mov
imul
xlat
jecxz
cwde
js
ss
xor
addr16
mov
popf
or
jbe
and
and
push
inc
jne
cmc
ficomp
(bad)
js
idiv
pop
pop
or
es
cli
and
loop
les
and
enter
cli
bound
call
adc
call
stos
fistp
fstp
das
pop
iret
in
bound
outs
bound
pop
push
xchg
xchg
xchg
pusha
test
das
popf
fsub
sbb
lods
or
sub
xchg
dec
lahf
jno
out
out
dec
std
aaa
out
aam
dec
test
out
mov
aad
dec
xchg
frstor
fcomp
jno
adc
not
push
mov
push
dec
mov
ja
das
or
cwde
mov
dec
mov
pop
cmps
in
cs
cwde
std
sti
adc
test
aad
sahf
cmps
bound
jb
(bad)
leave
mov
sbb
hlt
(bad)
sub
fwait
rcr
cmp
je
lfs
mov
stos
icebp
mov
mov
xchg
add
and
ficom
setl
pop
jg
into
arpl
sbb
retf
in
inc
lea
movs
fldcw
out
xchg
lahf
inc
jecxz
mov
sar
adc
jne
xor
mov
hlt
inc
or
push
dec
mov
movs
mov
cmp
pop
lock
(bad)
clc
add
jg
fwait
adc
or
mov
dec
aam
outs
cld
lock
mov
js
inc
xchg
lock
cmp
inc
enter
aam
shr
das
xor
cmp
out
mov
fcomp
pop
mov
jne
test
adc
inc
jmp
test
xlat
cmps
mov
ins
cld
xor
outs
xchg
int
pop
mov
xor
add
repz
fcmovu
jp
outs
cmp
mov
or
sbb
jb
mov
rcr
sbb
stc
xor
in
and
jg
inc
fiadd
into
cwde
inc
pop
jb
xchg
cmp
xor
xchg
ds
lea
sub
nop
jbe
add
pop
pop
jnp
add
arpl
mov
mov
aad
jge
jg
call
mov
push
(bad)
sub
sub
movs
xor
sahf
cld
pop
mov
ins
gs
inc
movs
cs
cs
sub
ds
mov
lods
int3
jne
pusha
out
clc
fidivr
into
push
sub
xchg
sub
movs
ins
jno
cmp
loopne
out
pushf
push
jns
scas
retf
xchg
idiv
xchg
jmp
pop
popf
cmp
sbb
in
dec
ss
arpl
cmp
(bad)
and
sub
dec
mov
xor
iret
push
mov
push
mov
out
push
jbe
pop
jnp
bound
out
ror
xchg
cld
add
dec
jb
int
int3
or
paddw
sbb
sub
outs
sahf
test
in
(bad)
fisttp
inc
pushf
and
loop
inc
shr
sub
jne
jge
dec
shr
push
fbld
(bad)
lods
mov
push
rcl
(bad)
std
dec
mov
pop
mov
sar
xor
add
push
xor
(bad)
xchg
pop
ins
sub
xchg
dec
mov
scas
xchg
movs
and
out
in
sub
les
cs
shl
add
sti
mov
test
ins
mov
and
mov
pop
scas
loop
retf
or
dec
jecxz
sbb
(bad)
mov
mov
cmc
push
jo
xor
pop
inc
fstp
jecxz
movs
jecxz
jbe
and
mov
inc
test
cmp
inc
fdiv
jbe
push
mov
neg
sti
xchg
xchg
sar
push
adc
push
lods
xor
mov
mov
or
scas
test
dec
lock
inc
or
int
lods
sahf
pusha
push
lea
and
mov
cmps
sbb
sbb
stos
mov
scas
stos
(bad)
movs
daa
mov
dec
clc
push
ss
shl
call
pop
adc
clc
fwait
inc
jmp
clc
jno
lods
push
out
jae
adc
xchg
push
inc
cmps
out
inc
pop
adc
nop
out
sti
in
loop
in
in
movs
push
and
jp
daa
and
je
shl
stos
jbe
cmp
(bad)
dec
inc
xchg
(bad)
dec
sbb
addr16
(bad)
or
push
or
dec
cmp
push
(bad)
imul
gs
call
mov
popa
sbb
jp
jmp
xchg
outs
mov
fdivp
stos
data16
lods
das
jae
jmp
loopne
shl
adc
xchg
outs
mov
sub
push
outs
movs
dec
cmp
jnp
nop
jmp
aad
fwait
lods
mov
or
icebp
out
gs
and
jnp
outs
or
jo
cmps
loop
inc
cmp
retf
cli
rcr
das
add
fcmovnbe
mov
popa
xchg
mov
pcmpeqb
ret
push
arpl
push
ret
out
mov
cmp
and
xor
mov
call
sub
mov
cmp
lahf
enter
xor
push
scas
xor
lods
in
dec
mov
inc
add
inc
cdq
fnsave
and
jle
aam
xchg
adc
in
pop
jmp
cwde
push
and
and
jo
jmp
bound
or
sbb
xchg
mov
lea
sub
dec
xchg
mov
add
mov
movs
dec
cdq
shr
addr16
leave
jmp
sti
imul
or
inc
aad
cmp
xor
cmp
loope
mov
and
iret
jno
xchg
and
push
inc
xchg
fist
sti
adc
jmp
mov
dec
inc
inc
lea
mov
loopne
push
and
add
push
mov
stc
retf
jle
outs
xchg
hlt
fmul
xchg
popf
sub
dec
pop
mov
(bad)
xor
inc
dec
ss
jne
pop
nop
adc
lods
dec
mov
popf
addr16
arpl
mov
fst
jle
add
jecxz
add
inc
mov
or
fmul
mov
pop
test
fldcw
xchg
xor
es
das
dec
jae
ret
push
inc
imul
sub
cwde
push
jle
jmp
adc
jne
or
inc
pusha
lahf
or
fcmovbe
in
jp
into
mov
fdiv
and
or
and
mov
mov
cdq
jecxz
pop
in
arpl
ret
mov
mov
outs
retf
lahf
dec
xor
sbb
div
pop
(bad)
imul
mov
dec
xchg
mov
ins
popa
fst
stos
xchg
das
push
test
pop
call
and
dec
push
clc
and
pusha
js
(bad)
ss
popa
fadd
stos
data16
retf
out
push
lods
(bad)
adc
or
loopne
retf
add
hlt
stos
pop
mov
sub
pop
dec
cmps
movs
repz
dec
stos
mov
in
sahf
lea
or
xchg
cwde
neg
ret
and
inc
fnstcw
and
call
leave
cmc
dec
jl
mov
cli
ror
cmp
xchg
ja
inc
out
mov
jnp
push
xchg
cmp
cmp
lods
jle
mov
out
lods
adc
in
sub
and
adc
dec
cmp
ins
daa
loopne
imul
sbb
dec
push
jp
xor
sti
xchg
inc
imul
leave
pop
pusha
repnz
(bad)
and
or
aam
jb
movs
and
arpl
inc
jno
mov
rol
mov
sub
sub
or
mov
lds
movs
dec
mov
adc
fwait
sbb
aas
and
jl
mov
cwde
rcr
and
jbe
mov
jmp
pop
jns
loop
fld
and
les
or
adc
jnp
pop
lods
inc
sub
in
add
cdq
jae
cmps
sub
pop
ins
test
arpl
nop
push
(bad)
pop
sbb
pop
sub
movs
aas
js
and
dec
mov
into
add
lahf
lock
push
pop
sbb
mov
push
retf
arpl
push
jmp
out
mov
sbb
xchg
push
fsub
mov
add
pop
xchg
mov
int
mov
in
mov
clc
pushf
mov
and
scas
dec
sub
repnz
adc
lds
or
mov
sahf
cmp
icebp
fst
xor
mov
mov
(bad)
xchg
jnp
nop
movs
pop
aam
adc
jge
sub
adc
daa
xor
dec
imul
ins
or
fs
dec
adc
add
jb
movs
or
jbe
stos
cmps
shl
jp
in
pusha
ja
mov
and
(bad)
jmp
jb
fadd
ins
rol
mov
ret
dec
sbb
lea
sub
mov
call
dec
mov
mov
loopne
call
dec
(bad)
cmp
test
in
adc
mov
pop
sub
addr16
mov
adc
xchg
xchg
jmp
cmp
or
jp
sub
and
rcr
sub
ja
jge
cmp
mov
sub
popa
cld
arpl
mov
stc
movs
sub
leave
add
dec
sbb
add
test
inc
push
mov
or
mov
rol
iret
icebp
mov
mov
jbe
inc
jb
inc
xchg
retf
cmc
ja
mov
cmps
nop
jge
sbb
mov
push
mov
sti
inc
(bad)
call
pop
or
pop
int3
hlt
nop
pop
inc
and
and
hlt
adc
lods
mov
loopne
xor
gs
inc
jmp
aaa
pop
leave
rcr
hlt
out
dec
inc
out
jne
mov
mov
add
jl
lahf
fyl2x
unpcklps
sub
inc
pop
repz
and
test
out
inc
gs
inc
fstp
cmps
xchg
inc
dec
mov
dec
and
push
or
outs
inc
jle
shl
pop
int
and
ret
jb
sub
dec
sub
xchg
ins
and
or
sti
shl
popf
ins
nop
mov
jae
in
retf
rol
mov
outs
cmp
or
(bad)
icebp
cmp
xchg
scas
gs
rcl
popa
jno
push
repz
pop
or
jae
gs
fcom
test
pushf
cwde
mov
and
test
(bad)
adc
bound
popa
rol
pop
jbe
mov
dec
push
pushf
mov
mov
jecxz
ja
inc
fst
add
jne
xlat
cmps
add
xor
popa
clc
jbe
pop
xlat
mov
ds
in
sub
mov
sbb
push
pop
imul
sub
add
inc
(bad)
scas
stos
popa
mov
dec
lock
nop
arpl
test
sub
stos
mov
sti
jl
das
stos
add
push
or
jecxz
enter
sub
fdiv
stos
xor
mov
aas
imul
cmp
fmul
xlat
repz
adc
imul
out
mov
int
pop
cmps
out
dec
sti
or
lods
stc
xchg
dec
pop
sar
xlat
push
adc
nop
out
shr
push
add
sub
mov
inc
and
pop
push
and
out
or
addr16
jnp
mov
mov
push
(bad)
rcr
add
lea
rcl
aad
in
mov
add
cmps
lods
aad
and
inc
mov
shr
sub
mov
test
cmp
or
mov
fistp
call
or
popa
xchg
inc
test
mov
movs
aaa
mov
pop
sbb
cmc
inc
or
sar
adc
sahf
cmp
je
mov
xlat
push
test
loopne
imul
mov
pop
mov
aad
pop
push
cdq
sahf
inc
cmp
idiv
cmp
retf
daa
lahf
hlt
xor
jno
xor
lea
aad
fwait
pop
test
imul
jecxz
or
xchg
push
adc
in
and
pop
sub
in
mov
dec
jbe
sbb
std
pop
fnstsw
push
sub
xor
jno
push
lock
call
call
sub
xor
cmc
dec
sbb
ds
retf
jecxz
inc
push
in
jecxz
addr16
pop
mov
inc
dec
add
repnz
repz
nop/reserved
mov
lods
jnp
mov
loope
sub
ins
add
push
mov
mov
and
outs
fld
mov
and
stc
scas
cmps
scas
add
sahf
inc
int3
xchg
(bad)
stos
push
adc
jge
sub
adc
xchg
loop
xchg
pushf
jecxz
lods
cs
jp
stos
add
pop
jmp
rcr
loopne
push
(bad)
ja
cdq
add
call
cmp
ds
iret
and
xor
repnz
rcl
cmp
inc
pop
hlt
int
push
lahf
sbb
sub
push
sub
or
jl
int3
pop
xchg
(bad)
or
pop
(bad)
bound
sbb
push
mov
jmp
(bad)
mov
jp
cmp
or
aad
mov
push
push
aad
pop
inc
push
fmul
imul
int3
add
fdiv
or
mov
push
mov
or
in
sub
test
(bad)
jmp
push
sub
mov
mov
sub
bound
cmp
sbb
imul
dec
cmp
push
inc
adc
inc
fwait
dec
sbb
dec
std
mov
gs
mov
out
repnz
dec
pop
in
leave
out
push
arpl
cld
dec
addr16
outs
mov
movs
fild
into
jbe
shr
cmp
aaa
scas
add
scas
clc
dec
or
dec
push
cmp
cmps
ins
or
or
rol
pop
jecxz
pushf
push
das
fdivp
addr16
movs
test
push
int3
pop
daa
dec
push
mov
add
xchg
jmp
adc
jbe
jmp
clc
pusha
mov
rol
loop
and
jmp
xor
retf
icebp
es
sub
test
push
icebp
cs
call
in
sub
mov
sbb
mov
push
fcomp
push
fidivr
mov
scas
push
add
enter
pop
inc
mov
or
dec
adc
stos
stos
test
rcr
arpl
mov
inc
es
add
std
test
test
jne
ss
fstp
imul
add
mov
into
ins
lock
push
xor
push
rol
int
or
repnz
add
sbb
push
rol
mov
add
push
movs
arpl
xor
sub
in
clc
xlat
sub
in
mov
clc
sbb
mov
shr
mov
pop
push
test
pop
mov
outs
dec
adc
setbe
mov
fdiv
jecxz
lods
pushf
(bad)
enter
aad
sbb
add
fist
push
push
aam
sbb
adc
inc
add
cmps
fs
lahf
dec
(bad)
sub
leave
mov
push
in
lock
jb
xchg
jb
fcmovne
jbe
int3
xor
mov
mov
sbb
mov
mov
daa
(bad)
ins
and
xchg
retf
and
fldenv
std
push
mov
stc
pop
mov
ins
ins
ins
sub
cs
mov
jl
mov
outs
and
test
fcmovne
rol
jne
test
or
stos
mov
pop
in
mov
pop
adc
and
aas
aad
aam
(bad)
std
mov
call
push
jae
cmc
rcr
push
sub
sbb
add
in
test
push
das
stos
daa
sub
mov
jo
icebp
and
mov
dec
loopne
jnp
and
push
and
movs
aaa
iret
push
inc
push
xchg
sbb
jmp
inc
jmp
sbb
mov
mov
adc
cld
push
mov
aaa
push
push
or
lahf
imul
pop
mov
cmp
ret
call
add
(bad)
pushf
add
addr16
adc
jae
retf
jo
nop
repz
mov
lock
shl
stc
mov
in
mov
pop
and
cmc
mov
data16
jno
rcr
jg
loop
sub
fmulp
aam
xor
mov
sub
sub
sub
repz
ins
xor
mov
cmp
pop
cmps
in
dec
mov
cld
pop
movs
sub
cs
jmp
dec
ja
(bad)
sbb
add
les
jmp
or
outs
xor
imul
popf
into
mov
imul
xchg
call
xchg
enter
mov
test
pop
mov
mov
fistp
aam
xor
shl
fs
or
in
jnp
mov
sub
adc
daa
ins
(bad)
push
std
sbb
mov
mov
cmps
xchg
fdivr
jmp
out
mov
in
fcomp
cmp
adc
adc
(bad)
add
jmp
or
in
xor
jns
fcmovb
cmp
sub
xchg
fnstsw
mov
imul
inc
push
mov
ins
cmp
outs
push
es
ficomp
lock
ds
movs
lea
adc
sahf
jmp
rcr
cmps
pop
dec
fld
fwait
cmc
stos
or
sbb
call
adc
mov
shl
jo
fsubr
popf
mov
or
ret
adc
ficom
or
jne
sbb
pop
dec
inc
jg
cwde
out
pop
ds
sbb
push
mov
cmp
out
shr
mov
xor
mov
je
std
mov
fbstp
xor
add
mov
repz
call
sbb
jmp
add
fld
(bad)
lahf
adc
sub
iret
repz
jecxz
jo
sti
xor
fs
(bad)
jl
xchg
add
pop
add
and
test
arpl
int
push
mov
pop
cmps
mov
jno
adc
cmps
sub
(bad)
jns
(bad)
xchg
ret
in
mov
cmp
push
ja
pop
cs
or
aad
(bad)
call
xchg
dec
test
lea
adc
xlat
fidivr
shl
sub
push
jbe
pop
in
out
cmp
pop
add
lahf
not
pushf
and
jae
fwait
lea
jmp
jae
sar
addr16
xchg
aas
nop
(bad)
mov
xor
mov
je
add
cdq
or
xor
fsubr
xor
sub
pop
mov
dec
inc
ds
dec
inc
hlt
or
dec
dec
adc
push
imul
out
inc
cmp
add
daa
mov
lds
pop
pop
add
(bad)
in
push
sbb
fadd
leave
icebp
ror
jmp
inc
lods
inc
mov
push
xchg
xchg
cmp
pop
cs
retf
push
movs
jo
retf
(bad)
fadd
mov
mov
aam
xchg
iret
mov
out
pop
or
loope
add
pop
aad
fs
jbe
clc
sbb
mov
fld
call
xchg
(bad)
sahf
mov
or
popf
out
dec
stos
mov
mov
dec
fcom
fnstcw
mov
adc
cmc
loopne
loopne
jno
adc
rcl
push
mov
cmp
popa
hlt
hlt
inc
enter
jp
fdivr
sbb
sbb
outs
dec
pop
cmovs
pop
jno
(bad)
jp
jne
mov
cmps
js
pop
lds
fcomp
(bad)
jno
out
mov
and
(bad)
inc
xchg
imul
mov
jb
outs
xchg
add
add
jge
xchg
cmps
push
and
aaa
jae
pop
add
popf
sbb
inc
les
jp
jmp
clc
int3
ins
jl
mov
mov
inc
loop
cmp
je
push
jle
hlt
clc
mov
push
fisttp
lock
mov
(bad)
fstp
cmp
daa
imul
int3
fmul
je
cmp
push
push
and
jl
in
rcr
push
add
mov
daa
stc
xchg
xor
stos
or
sub
pop
mov
jg
sti
movs
jno
in
cdq
mov
pop
inc
arpl
add
inc
jecxz
jecxz
and
inc
and
adc
mov
xchg
mov
ja
stos
push
cmc
call
mov
cli
mov
and
mov
push
cwde
fadd
sbb
dec
test
repz
adc
mov
fadd
mov
push
push
pop
das
fcomp
ins
jmp
push
retf
and
mov
addr16
mov
scas
(bad)
adc
adc
sub
and
hlt
(bad)
dec
jne
dec
out
sub
cmp
enter
mov
test
ins
and
and
lahf
sbb
jo
fcomp
pop
outs
ds
or
icebp
push
sbb
daa
nop
cmp
mov
add
xor
das
xor
pusha
ja
cld
adc
cli
in
push
cmp
lea
pushf
sub
pop
xchg
pushf
add
push
adc
(bad)
sub
push
pop
mov
(bad)
aam
push
dec
pushf
dec
(bad)
loope
hlt
xchg
and
call
lods
xchg
or
or
sbb
sbb
in
les
ret
cwde
jb
shl
inc
pop
inc
push
mov
cmps
adc
sar
jmp
push
sbb
inc
mov
add
jmp
pop
xchg
cmp
mov
aam
lea
test
sbb
fnstenv
imul
cmp
mov
lock
outs
dec
out
jl
inc
mov
and
sbb
dec
ror
iret
fidivr
push
loop
mov
hlt
push
gs
aas
jnp
fwait
jp
call
(bad)
pop
out
daa
push
mov
push
sub
mov
fimul
mov
(bad)
rol
cli
pop
mov
or
lock
pop
jb
xchg
mov
sbb
push
mov
add
sahf
or
dec
jmp
pop
js
jno
imul
and
add
add
inc
push
mov
mov
xchg
sahf
push
push
inc
call
mov
adc
xor
sbb
cmps
je
mov
out
sub
cmp
add
fstp
mov
test
jge
sbb
jne
mov
adc
leave
xchg
pop
sti
fimul
cmps
and
xchg
fstp
in
jg
or
and
inc
cld
jg
popa
fwait
cli
call
jns
mov
test
cmp
or
and
cmps
mov
push
fs
inc
imul
test
dec
mov
pushf
and
cdq
inc
scas
les
mov
mov
addr16
movs
pushf
jp
aam
(bad)
lsl
mov
imul
or
jno
aad
sub
inc
leave
sti
fsub
into
mov
test
sahf
sub
jnp
or
popf
outs
mov
mov
nop
aaa
mov
xchg
mov
js
mov
clc
adc
sbb
lds
pop
jne
fisttp
hlt
and
test
xchg
sub
xchg
lds
ds
ins
xchg
adc
hlt
add
repz
retf
mov
ret
pop
sub
shr
in
ds
and
(bad)
push
cmp
lods
retf
lock
movs
or
pop
gs
ins
(bad)
cmp
cmp
jp
(bad)
(bad)
and
lahf
mov
fwait
add
sub
add
stos
(bad)
and
mov
addr16
jns
jg
jne
or
xchg
xchg
call
lea
inc
lds
pop
push
push
mov
or
out
jmp
test
into
or
push
test
jne
(bad)
push
xor
push
sub
clc
mov
cs
xchg
pop
push
(bad)
pop
push
shr
dec
mov
cmp
popf
adc
in
pop
xlat
aas
stos
and
into
jmp
push
fnsave
je
and
mov
inc
inc
sub
push
dec
ret
add
adc
cmp
cmps
jmp
cmps
pop
jb
scas
mov
dec
imul
mov
push
scas
js
(bad)
jnp
outs
or
push
cmp
das
cmp
(bad)
jbe
sub
call
(bad)
scas
shr
xchg
popa
test
mov
pop
pop
cmp
ja
lods
(bad)
inc
icebp
(bad)
cmc
(bad)
cmps
mov
cld
outs
jmp
lods
sub
xchg
fwait
and
out
xchg
adc
xchg
jle
loopne
adc
je
or
sub
call
fs
add
sbb
dec
adc
out
leave
in
push
lods
sbb
jp
adc
movs
or
cmp
popf
(bad)
gs
mov
rcr
mov
dec
push
fst
in
cmp
stos
pop
dec
in
mov
test
push
sub
(bad)
stc
lods
cmp
adc
enter
cmp
sbb
pop
pop
sbb
(bad)
cld
movs
imul
sub
jns
push
(bad)
fidivr
jb
mov
pop
sbb
push
ins
add
js
scas
mov
test
mov
ins
mov
mov
pop
and
cs
ins
mov
push
loopne
push
popa
outs
or
jp
fisub
shl
fs
outs
imul
sbb
call
inc
jo
mov
inc
or
frstor
cdq
rcl
nop
jmp
mov
shl
popa
cmps
push
out
xchg
add
dec
aaa
mov
out
pop
mov
cmp
ins
adc
or
into
test
fstp
icebp
xchg
mov
add
cmp
fwait
push
test
nop
fwait
mov
and
push
cwde
mov
cld
xchg
dec
add
pop
mov
shr
call
lea
jp
jl
xor
xor
int
jecxz
pop
stos
sbb
cmp
jno
xchg
adc
cmp
dec
fdivr
ss
sbb
and
dec
dec
mov
ds
leave
mov
jmp
jecxz
or
ins
adc
rcl
inc
pop
mov
test
mov
sbb
cld
or
in
(bad)
and
sbb
into
mov
shl
aaa
and
xchg
jle
stos
(bad)
adc
stos
imul
push
aam
cmp
dec
les
sub
(bad)
cmps
scas
inc
(bad)
fistp
sahf
pop
mov
aad
push
ficomp
arpl
adc
dec
call
mov
and
dec
call
js
mov
aas
cmp
mov
inc
fmul
in
popa
push
mov
pop
sbb
xor
push
cmp
adc
mov
add
ret
and
dec
retf
pop
cmc
ins
mov
cmp
(bad)
jmp
hlt
ror
es
xor
push
mov
div
mov
mov
mov
mov
pop
ja
retf
dec
fsub
loopne
(bad)
or
fcom
push
retf
mov
mov
hlt
gs
bound
mov
jl
mov
addr16
add
mov
test
cwde
adc
mov
pop
popa
push
fiadd
(bad)
lods
shr
icebp
push
loopne
rcr
xchg
sbb
inc
adc
dec
add
push
ins
mov
jae
inc
push
outs
xchg
cmp
inc
and
jns
mov
cmc
and
and
mov
ins
jmp
push
std
lods
mov
mov
mov
or
and
xor
xchg
loope
sbb
jmp
xlat
(bad)
sub
in
out
mov
cmp
jns
sbb
cld
pop
inc
mov
in
in
inc
mov
adc
mov
sub
or
ins
xchg
(bad)
(bad)
jmp
mov
pop
dec
inc
bound
xchg
jmp
test
cmps
push
cs
mov
adc
sti
(bad)
aad
inc
scas
js
xchg
(bad)
movs
push
daa
add
mov
ror
push
out
xor
test
outs
add
and
and
mov
retf
push
xchg
pop
mov
cmp
push
or
mov
jno
jbe
popa
mov
test
add
cld
test
int3
cwde
pusha
into
sub
enter
fdivr
mov
inc
add
pushf
pop
add
ret
movs
mov
sbb
test
mov
adc
push
sbb
loopne
mov
ret
jnp
fnstenv
scas
push
mov
jmp
mov
adc
cmp
mov
and
dec
shl
dec
mov
lea
mov
call
aam
std
push
imul
inc
mov
add
mov
mov
or
call
ficom
or
jmp
in
adc
popf
push
mov
or
xor
jecxz
ret
fisttp
add
in
retf
cmps
daa
adc
retf
mov
(bad)
inc
jmp
hlt
sbb
sub
fdiv
test
xchg
outs
adc
pop
mov
inc
test
add
cmp
mov
sbb
jne
pop
cwde
out
dec
retf
inc
lahf
sbb
in
ins
sbb
movs
scas
int
adc
add
call
inc
mov
sbb
retf
jno
cmp
adc
test
fmul
outs
cmps
and
push
sub
mov
std
add
jle
cmp
movs
repnz
or
retf
sbb
or
mov
(bad)
outs
inc
jl
rcr
rcl
or
push
pop
test
xchg
sub
cwde
add
push
(bad)
cmc
cmps
and
es
daa
mov
sbb
sbb
stos
lock
jno
sub
xor
loopne
test
mov
sbb
pop
inc
jnp
add
sub
mov
and
jnp
sbb
xchg
imul
sub
scas
cmp
test
leave
das
fs
sbb
fxch
aas
pop
sub
popa
or
sub
add
test
mov
jmp
bound
jb
(bad)
push
sub
mov
cmp
jl
mov
inc
and
arpl
sbb
fst
xor
xchg
or
mov
push
aam
ss
ret
cs
pop
lods
dec
ret
icebp
xor
mov
add
(bad)
iret
out
jmp
cmc
push
call
mov
mov
jecxz
mov
movs
xchg
inc
or
xchg
ins
cmp
dec
nop
add
cmp
dec
lods
pop
and
xchg
xchg
movs
adc
inc
mov
ja
(bad)
pop
push
mov
jae
xor
hlt
in
pop
jnp
xor
push
push
sbb
jbe
dec
inc
sbb
xor
push
pop
push
mov
xchg
outs
pusha
xor
sub
inc
jns
test
ja
xchg
adc
movs
stos
scas
icebp
cmp
jo
cmc
jmp
sub
sbb
xchg
clc
xor
mov
mov
push
scas
mov
shl
and
push
jo
or
mov
lds
mul
mov
xchg
sbb
mov
mov
and
sub
push
ret
stos
cmp
movs
ss
movs
call
into
in
(bad)
sub
(bad)
mov
inc
xchg
call
inc
addr16
xor
dec
or
add
sbb
sbb
push
fsub
push
fwait
lds
xor
and
jno
fisubr
add
sbb
fs
outs
dec
(bad)
pop
add
test
leave
pop
je
jb
jno
adc
cdq
lock
and
call
pop
mov
add
dec
and
add
xor
repz
lds
adc
cmps
stc
loop
ret
pop
dec
and
stos
ss
xor
loope
aas
jg
cli
inc
mov
add
ja
inc
popf
inc
adc
xor
leave
enter
shl
push
pop
(bad)
das
jno
test
hlt
mov
test
cmc
test
add
call
pop
jecxz
adc
xor
mov
add
xchg
pop
cs
or
xchg
and
inc
and
out
cmps
dec
stc
adc
add
call
inc
test
cmc
in
enter
pop
xchg
pop
pop
scas
mov
jg
cmp
jmp
push
sbb
cmp
js
(bad)
call
add
mov
hlt
mov
inc
and
leave
or
pcmpeqw
je
ret
push
jae
outs
lahf
mov
pop
into
xchg
jae
in
sbb
pop
gs
(bad)
mov
adc
ins
xchg
(bad)
fist
scas
sub
aam
push
pop
xor
jl
sub
xchg
and
stc
clc
dec
mov
outs
add
jne
(bad)
cmp
cmp
xchg
aaa
mov
mov
pop
ret
stos
data16
(bad)
jl
movs
dec
push
icebp
outs
mov
lds
adc
inc
xrelease
hlt
add
ret
or
and
inc
imul
sub
sahf
jmp
ret
mov
jge
or
out
mov
imul
dec
add
jp
iret
retf
xchg
sub
jecxz
push
adc
in
and
push
scas
sbb
ret
jmp
sub
and
pop
xchg
loopne
dec
push
inc
adc
ror
adc
xor
sub
iret
ret
xor
mov
fsub
adc
sbb
and
mov
jmp
test
stc
xbegin
stos
sub
fiadd
xlat
adc
xor
fsubr
xchg
push
call
sub
and
or
arpl
lds
popf
retf
jb
cmps
mov
jmp
xlat
sahf
add
mov
jl
cmps
fcomp
inc
test
cmp
push
arpl
ds
in
aad
add
adc
stc
movs
jmp
popa
iret
dec
int3
jp
xor
cli
sbb
inc
sbb
inc
pop
pop
dec
jo
ret
add
sti
pop
xchg
in
mov
mov
add
or
and
xchg
outs
push
std
pop
imul
mov
popf
icebp
pop
mov
and
enter
leave
test
into
cdq
pop
xlat
ins
sbb
dec
jo
jmp
lods
and
xchg
aad
mov
lahf
jns
clc
(bad)
jle
test
adc
(bad)
or
in
add
pop
out
push
fidivr
xor
icebp
xchg
mul
cli
and
sbb
stc
sahf
call
je
xor
mov
mov
imul
adc
iret
mov
mov
mov
nop
jecxz
icebp
pop
sahf
call
(bad)
movs
mov
and
out
test
or
xchg
pusha
mov
cmp
mov
and
push
fnstcw
xchg
mov
mov
jg
outs
movs
stos
jnp
fucomi
ss
or
shl
add
in
es
mov
push
adc
in
scas
or
sahf
add
test
sbb
mov
xor
movs
mov
in
xadd
repz
cmps
mov
sbb
jecxz
sbb
sub
in
mov
mov
push
rcr
mov
(bad)
fldenv
cmp
(bad)
loopne
cmps
(bad)
cdq
scas
jmp
hlt
add
sbb
es
shl
loope
inc
ds
push
pop
ss
in
jb
mov
aam
push
mov
out
ins
loop
push
imul
xchg
into
pop
mov
xor
cmps
mov
push
sbb
(bad)
xchg
arpl
sbb
sub
ret
fisubr
xchg
cld
dec
push
mov
inc
lods
push
out
cmps
imul
fisubr
repz
nop
xlat
lods
and
popf
pop
out
popa
call
test
pop
and
xchg
stos
pxor
out
sbb
mov
pop
aad
mov
gs
mov
push
in
daa
push
jbe
out
jae
scas
in
repnz
out
dec
imul
mov
xor
dec
or
popa
fbld
fmul
jmp
mov
inc
out
sub
dec
mov
xchg
jecxz
inc
dec
dec
adc
mov
dec
popa
cmp
pop
inc
inc
jno
cmp
sub
shl
out
mov
cmp
cs
and
shl
or
lods
std
daa
jecxz
arpl
jae
imul
stc
(bad)
ins
xchg
fild
or
shr
lods
ret
lock
sbb
not
pop
adc
pop
iret
pop
inc
inc
xor
test
cmp
mov
mov
lods
aad
add
outs
cmc
les
adc
cmp
sub
sar
enter
sub
jg
les
ret
aad
rcr
mov
out
ins
mov
xor
ss
jge
sbb
fwait
outs
lods
or
cmp
cdq
jns
inc
out
xchg
shl
shl
call
in
and
xchg
into
mov
loop
cmp
fnstenv
mov
out
pop
inc
fwait
cdq
cdq
out
in
jmp
push
mov
mov
mov
add
jb
cmps
ror
and
jbe
neg
sub
xchg
and
push
scas
add
mov
jmp
mov
adc
sub
pop
mov
xor
lock
or
mov
call
cmp
repz
cmp
push
ret
lods
sub
in
inc
shr
mov
jmp
adc
cdq
(bad)
add
inc
inc
xor
or
aaa
mov
ja
shl
mov
fistp
clc
(bad)
stos
adc
lahf
cmc
xchg
inc
fsub
(bad)
and
sbb
cld
dec
(bad)
cmps
mov
push
mov
sbb
fchs
mov
dec
jl
inc
push
out
add
mov
adc
hlt
int
xchg
jg
mov
into
sbb
jo
sti
add
push
les
cmc
cli
push
add
inc
pop
jns
push
cmps
mov
jne
es
ss
and
das
fwait
mov
sbb
out
popf
lock
dec
adc
lock
mov
aaa
xor
das
and
or
mov
fisub
sub
push
mov
push
aad
jno
ins
mov
ret
dec
push
and
push
mov
inc
rdpmc
stos
mov
test
pop
or
enter
movs
sbb
xor
repnz
push
shl
fcmovnu
and
jns
les
push
push
adc
or
lock
mov
mov
js
or
test
inc
push
cli
mov
mov
push
mov
ds
cmc
mov
mov
out
jb
pop
lods
adc
mov
mov
addr16
xor
shl
xor
sbb
sub
in
sbb
mov
or
fidiv
pop
pop
mov
sbb
jmp
leave
ret
lahf
lahf
mov
mov
sbb
lods
stc
popf
popf
mov
dec
ds
mov
xor
cmp
cmp
out
stos
lods
and
(bad)
jb
mov
(bad)
jmp
(bad)
adc
cmp
adc
cli
outs
in
pushf
rcl
and
lahf
fs
nop
rcr
iret
outs
rcl
jg
mov
imul
fcom
and
xchg
xchg
cmp
add
mov
(bad)
mov
aas
mov
pop
push
jbe
add
push
xchg
add
ret
xor
vpmulhuw
fsubr
out
ds
pop
and
arpl
addr16
in
repz
icebp
jecxz
ret
popf
sahf
mov
adc
rol
adc
jg
xchg
(bad)
test
or
in
fsubr
(bad)
cli
iret
cdq
dec
inc
(bad)
adc
jmp
cmp
mov
lods
mov
mov
test
xchg
test
pop
mov
dec
pop
xchg
cmp
nop
adc
mov
xor
lea
xchg
push
or
jmp
inc
push
jl
test
xlat
stc
inc
fnsave
dec
jbe
xchg
fmulp
je
sub
daa
add
in
xchg
ret
lods
mov
into
pop
cs
fwait
jbe
stc
adc
jnp
mov
fdivp
xor
pop
aas
cli
test
ins
movs
inc
(bad)
imul
dec
dec
pop
xchg
dec
test
sbb
test
jmp
adc
push
dec
sbb
xor
push
cmp
pushf
pop
fistp
adc
arpl
sub
push
push
jo
jnp
loopne
fwait
xchg
and
loop
mov
or
jns
cdq
cmps
je
jb
call
push
jmp
mov
xchg
mov
fmul
(bad)
imul
push
ficomp
in
ret
data16
mov
(bad)
stos
cmp
retf
lock
inc
mov
add
mov
cmp
sub
mov
mov
stos
fmul
call
imul
and
daa
xor
and
mov
pop
sbb
xchg
add
add
fwait
mov
mov
sub
adc
inc
adc
sbb
jns
xlat
pop
inc
push
xchg
fistp
cwde
das
mov
mov
dec
call
movs
adc
out
dec
pop
fcmove
enter
scas
mov
pop
outs
push
dec
xor
xchg
cmps
dec
xchg
pop
outs
(bad)
iret
adc
mov
loopne
gs
pop
mov
jns
cmc
mov
add
stc
rol
and
jl
cmp
pop
jmp
or
ror
xchg
jmp
and
outs
out
out
inc
or
fld
mov
xor
mov
xchg
push
imul
or
jge
es
push
addr16
push
aam
push
rol
jmp
mov
pop
mov
sub
jl
(bad)
or
adc
push
pop
pop
mov
das
and
aas
cwde
daa
dec
cs
inc
xor
rol
add
in
shl
ret
mov
popa
bnd
xor
push
xchg
hlt
(bad)
ror
cmps
jne
shl
pop
stc
scas
popf
sub
xchg
and
mov
ins
pop
pop
inc
stc
mov
fwait
test
sbb
in
inc
sahf
and
int
(bad)
jl
rol
add
mov
adc
push
cmc
clc
mov
mov
stc
lahf
inc
adc
xchg
scas
xchg
add
jno
(bad)
(bad)
test
(bad)
jbe
pusha
or
dec
jmp
pop
shl
xor
data16
int3
mov
pop
xchg
test
push
(bad)
and
and
xchg
es
mov
sub
repz
inc
stos
adc
cmp
mov
or
dec
dec
pop
pop
aaa
aaa
and
push
xchg
les
mov
xchg
mov
popf
and
or
dec
sub
add
cld
push
in
lods
push
addr16
retf
rcr
hsubps
sbb
test
xchg
xor
mov
jne
jmp
push
xlat
xchg
shr
cld
popa
das
aaa
sub
lods
jo
dec
push
rcr
sub
dec
and
scas
or
xchg
out
ret
aad
sar
mov
cld
inc
jle
lahf
out
add
adc
mov
mov
adc
cmp
mov
lods
mov
adc
ss
cmp
mov
movs
cli
mov
popa
cmp
sar
and
xchg
hlt
or
jnp
mov
gs
add
push
mov
or
test
enter
cmp
jae
inc
pushf
sahf
pextrw
sbb
sbb
xor
repnz
xchg
(bad)
lea
ret
inc
pushf
cmps
popf
aas
(bad)
adc
sar
hlt
mov
push
pop
sbb
sbb
stos
test
iret
dec
xchg
mov
movs
pop
rcl
leave
inc
dec
or
push
sar
bnd
xchg
jmp
add
(bad)
sbb
fcomip
cmp
push
push
fmulp
arpl
cmps
or
adc
repz
(bad)
cmp
sub
nop
popa
imul
mov
(bad)
lds
pop
or
ror
inc
xlat
dec
stc
and
(bad)
and
pop
xchg
ficom
ret
out
pop
push
imul
pusha
pop
fsubr
dec
add
ins
std
frstor
sub
inc
dec
mov
or
push
xor
jp
shl
bound
add
jmp
fisubr
push
adc
shl
in
leave
xchg
scas
mov
neg
xchg
xor
mov
jns
xchg
add
jmp
push
test
retf
test
xor
mov
push
scas
stos
pop
repnz
ficom
xchg
ds
retf
jns
jo
mov
mov
xchg
inc
or
push
imul
outs
out
enter
pop
repz
push
dec
cdq
nop
lock
jno
add
xlat
dec
sub
call
inc
les
idiv
dec
data16
popf
push
lods
mov
js
in
cmp
rol
lods
(bad)
(bad)
aaa
push
pop
adc
push
push
sbb
or
imul
mov
repnz
ret
inc
or
ja
imul
pusha
jl
neg
stos
pop
sbb
and
in
cmp
inc
push
mov
adc
(bad)
cld
imul
xor
lods
test
xchg
inc
pop
jae
and
xor
adc
test
retf
addr16
dec
addr16
xchg
jnp
loope
nop
push
stos
(bad)
(bad)
fwait
pop
jg
stc
adc
fmul
mov
cmp
fisub
adc
mov
(bad)
neg
inc
or
push
mov
xor
je
jbe
repnz
dec
cmp
int
push
cld
cmp
cmp
in
(bad)
xor
inc
fs
call
adc
xor
jmp
sbb
add
mov
add
cmps
xor
imul
shr
and
icebp
mov
xchg
test
mov
enter
icebp
dec
xor
ret
iret
pop
cld
fcmovnb
pop
movs
(bad)
or
mov
std
fnstcw
add
(bad)
mov
mov
adc
fsubr
sub
jp
addr16
ins
mov
cmp
or
and
jb
ins
dec
test
aaa
ret
cs
fisttp
fdivr
dec
pushf
inc
movs
retf
ss
adc
mov
arpl
movs
arpl
adc
mov
xchg
push
in
dec
imul
das
in
inc
sahf
mov
jecxz
sbb
loope
aas
adc
mov
nop
cmp
test
sub
mov
or
fisttp
xchg
out
ins
outs
repnz
jmp
mov
mov
enter
add
and
sbb
sbb
movs
lds
int
jns
pop
gs
cmp
sbb
xor
mov
repz
add
mov
daa
sub
adc
dec
and
lea
pop
push
cli
and
add
add
jmp
jne
mov
or
jecxz
call
je
sub
push
in
mov
mov
out
test
sub
sub
int3
(bad)
int3
daa
call
test
mov
mov
outs
ret
mov
pop
bound
in
sbb
or
pop
and
sar
mov
jne
sub
push
(bad)
and
icebp
icebp
cld
fmul
dec
cmp
jns
sub
sub
neg
push
pop
adc
pop
test
adc
dec
mov
sti
inc
xchg
inc
fiadd
jo
push
mov
in
xchg
sub
push
std
fnsave
cdq
ret
mov
out
movs
add
addr16
add
xor
out
or
je
pushf
xchg
pop
(bad)
mov
(bad)
jno
test
lods
push
jp
iret
rcl
and
jle
xor
cmp
push
fsub
inc
push
repz
call
xchg
popa
repnz
ins
es
mov
jae
lods
xor
xchg
nop
je
mov
mov
cmc
mov
xchg
xchg
test
add
icebp
sbb
dec
sahf
gs
sbb
and
cmp
adc
ja
lods
lahf
arpl
test
dec
inc
cwde
lahf
fistp
out
jns
mov
add
push
xor
sti
pusha
mov
sar
(bad)
lock
repnz
sub
pusha
cdq
imul
or
cld
push
movs
fimul
dec
ja
push
dec
mov
xlat
mov
jbe
mov
jmp
and
mov
sub
dec
(bad)
add
mov
mov
inc
(bad)
cmp
adc
push
push
(bad)
pop
aam
in
out
int
push
leave
inc
movs
adc
popa
mov
cmp
pop
cli
mov
fldz
arpl
add
fdiv
mov
test
ret
fadd
(bad)
xor
or
mov
mov
adc
repnz
sbb
stos
add
mov
pop
and
(bad)
jne
leave
push
or
add
jns
pcmpgtw
sbb
jns
int3
xor
les
mov
xchg
jmp
jle
inc
inc
je
in
dec
and
icebp
mov
cli
mov
adc
je
and
test
rol
pop
mov
dec
and
pop
pop
add
shl
jo
cs
jg
jp
enter
inc
test
pop
sbb
xor
(bad)
leave
mov
mov
add
clc
dec
sbb
daa
je
loope
add
out
and
inc
mov
outs
add
mov
cmps
jp
pop
ret
push
in
dec
jns
dec
pop
fidivr
add
push
(bad)
pop
aam
dec
jae
movs
mov
adc
pop
hlt
adc
inc
call
mov
xchg
or
(bad)
push
fwait
scas
std
mov
daa
and
aas
in
(bad)
jo
pop
(bad)
pop
mov
jo
add
or
add
lods
jbe
icebp
push
iret
repz
sbb
cmps
push
add
mov
xor
or
loop
mov
mov
repz
mov
cs
scas
lea
js
xchg
pop
mov
(bad)
push
mov
data16
call
cld
push
popa
int3
pop
pop
and
rcl
add
fidiv
or
mov
sub
cmc
(bad)
fidivr
jl
ffree
icebp
mov
cwde
ror
arpl
dec
fsub
jbe
pusha
jle
xchg
xor
fbstp
dec
add
dec
lods
inc
or
mov
je
std
loope
and
push
xor
aad
push
(bad)
test
xor
cmp
in
(bad)
loopne
bound
push
pop
xlat
pop
hlt
out
xor
jl
mov
xor
cmp
popa
add
pop
(bad)
pushf
sbb
ds
test
cld
icebp
xchg
cmps
pop
out
pop
sub
mov
mov
imul
sbb
add
mov
fisub
pusha
fwait
mov
fdivr
dec
mov
xor
inc
(bad)
fild
mov
cmc
rol
ds
imul
bound
xchg
int3
fsub
shl
mov
push
xor
sbb
rcl
shl
popa
fdiv
jg
pop
pop
inc
jp
and
pop
mov
cs
(bad)
dec
pop
lods
pop
out
pop
loopne
std
jo
or
mov
in
shl
(bad)
in
sub
es
dec
fcomp
pop
das
mov
ficomp
sar
mov
ins
stc
add
jp
mov
mov
xchg
or
xchg
jmp
das
je
sti
fwait
xor
mov
aaa
nop
push
mov
outs
jg
std
jmp
fwait
sbb
and
mov
(bad)
(bad)
sbb
shl
push
xchg
imul
(bad)
movs
or
or
adc
jb
in
pop
cdq
gs
outs
fidivr
xchg
add
mov
jns
mov
push
dec
jne
mov
(bad)
xchg
out
bound
and
dec
xor
xor
aas
xchg
push
pop
pop
(bad)
pop
xor
jmp
inc
adc
lods
jl
fldenv
std
and
cmps
push
or
nop
pop
rcr
cdq
rcr
das
jg
xchg
fadd
push
mov
movs
xor
and
push
cwde
out
mov
(bad)
sbb
ins
cwde
xchg
(bad)
(bad)
out
cwde
lods
int
das
fcmovu
(bad)
ss
jle
loop
out
movs
(bad)
rol
test
mov
test
leave
push
dec
cmp
jae
xchg
xchg
ja
cmp
jnp
int
jne
aaa
aad
cmp
mov
xchg
adc
cs
add
repz
sbb
movs
dec
mov
ror
hlt
xchg
ins
rep
loopne
adc
clc
scas
fs
(bad)
out
mov
mov
mov
jbe
ret
fstp
pop
bound
and
ins
cli
mov
retf
add
pop
outs
popf
pop
test
out
(bad)
push
inc
arpl
in
js
out
hlt
hlt
jbe
sbb
push
mov
pop
stos
mov
cld
jo
loope
xchg
add
(bad)
lods
jae
fbstp
test
xchg
dec
dec
iret
adc
add
out
sub
jne
push
jle
mov
pop
xchg
les
adc
xchg
fidiv
leave
jb
sar
cmp
rcl
imul
(bad)
pop
leave
mov
shr
call
call
jo
sbb
mov
popf
mov
mov
leave
out
xlat
inc
push
and
ror
lods
fsub
daa
add
pop
sbb
xchg
mov
retf
lods
das
ret
stos
cmp
ret
jnp
and
jnp
or
rcr
mov
jo
aas
or
daa
outs
shr
cli
push
sub
inc
cmps
xor
gs
cld
sbb
push
aaa
and
mov
mov
or
pop
push
add
call
cmp
mov
mov
sub
addr16
pop
mov
jl
dec
je
and
fucomp
and
fsub
iret
xchg
jge
xor
pop
mov
adc
je
jno
push
add
out
fimul
call
dec
retf
mov
(bad)
push
mov
jnp
pop
arpl
test
mov
mov
je
mov
popf
mov
or
mov
fidiv
ret
aad
in
loopne
or
sub
jne
div
and
test
dec
mov
and
push
mov
jp
push
mov
jbe
scas
sub
daa
fst
aam
inc
cmp
clc
adc
jmp
lea
shl
vmovhpd
shl
sbb
cmc
add
icebp
xchg
dec
arpl
sbb
mov
xor
jecxz
lea
jno
adc
xchg
fisttp
lods
(bad)
and
lock
sbb
dec
das
jbe
dec
call
gs
xor
bound
movs
je
xchg
xchg
adc
adc
jmp
cwde
add
mov
jmp
ja
call
pop
pop
fldenv
mov
icebp
mov
mov
aam
dec
xchg
adc
add
jo
loop
sbb
in
out
pop
retf
push
lea
inc
test
and
test
mov
add
test
retf
cmp
in
xchg
mov
adc
fstp
(bad)
add
push
mov
fcomip
sub
add
mov
mov
xor
jne
fldcw
test
test
mov
imul
add
mov
enter
add
loopne
ss
imul
sbb
cmp
mov
std
dec
and
sahf
in
push
fisub
inc
ins
rcr
fdiv
and
mov
jnp
call
mov
ret
aaa
push
mov
push
push
aas
push
pop
mov
push
gs
cli
jmp
xlat
shl
lock
dec
and
push
jns
jp
pushf
add
ins
mov
mov
jbe
bound
shr
and
les
inc
push
in
ds
mov
int
dec
xor
mov
mov
pop
jp
fsave
lds
mov
mov
push
jp
push
cmps
ins
lods
shl
dec
shl
xor
and
pop
or
gs
scas
bound
jge
push
(bad)
fcomp
gs
mov
mov
mov
cdq
pop
dec
js
jecxz
mov
mov
or
sub
adc
rcr
jle
adc
and
pop
les
push
push
add
fs
adc
push
sub
and
cwde
lock
sub
jmp
pop
ss
add
add
dec
mov
xchg
call
inc
int3
sub
cld
out
gs
lahf
es
nop
sbb
cmp
out
sub
nop
push
fmul
rol
(bad)
fstp
xor
pop
dec
in
jmp
adc
dec
sbb
leave
in
(bad)
shl
jno
gs
cmc
mov
lock
addr16
cld
push
mov
push
mov
aaa
ja
cmps
sbb
or
into
adc
stos
jmp
loop
dec
and
mov
sbb
das
xor
je
mov
pop
retf
sbb
inc
add
mov
mov
xor
cmp
jmp
imul
repz
mov
test
xchg
adc
data16
aad
xchg
sbb
std
mov
jmp
sbb
sti
xor
ss
out
leave
jmp
add
xchg
gs
xchg
daa
mov
xchg
shr
fsub
or
cmps
(bad)
mov
inc
les
dec
pop
out
mov
adc
sub
arpl
stos
jns
mov
dec
mov
xlat
bound
or
stc
cmps
cmp
bound
ins
(bad)
outs
adc
or
mov
out
in
mov
int
repnz
daa
push
(bad)
push
cdq
xor
cmp
js
stc
push
movs
pop
icebp
mov
icebp
test
sbb
add
pop
arpl
sub
cmp
push
inc
xor
outs
pop
aas
inc
jl
adc
jno
mov
sbb
lods
jnp
(bad)
retf
sbb
cmp
cmp
ret
cmp
shl
mov
push
xor
sar
add
sbb
xchg
emms
popf
cmp
test
and
repz
mov
test
imul
(bad)
mov
out
add
in
push
cmp
pop
jbe
sub
push
mov
push
sub
fistp
scas
sbb
mov
mov
and
je
aaa
dec
hlt
sbb
cwde
xchg
sbb
pop
xlat
cli
out
frstor
arpl
mov
xchg
(bad)
mov
jge
mov
xchg
sub
push
test
loopne
repz
aas
(bad)
fisub
repz
bound
or
outs
pop
arpl
dec
jmp
mov
sbb
cwde
mov
inc
or
adc
je
imul
outs
sar
(bad)
out
or
push
adc
call
call
bound
pop
jnp
ret
sbb
jno
inc
pusha
sub
xchg
sub
mov
imul
data16
jae
(bad)
push
test
ins
or
adc
aas
push
dec
xchg
fbstp
test
lock
fimul
mov
pop
pop
inc
add
pusha
push
mov
(bad)
pop
enter
push
retf
es
bound
sub
sahf
mov
call
(bad)
xchg
jmp
mov
and
jmp
push
aad
arpl
imul
pop
outs
mov
shl
cmp
retf
js
cmps
jnp
xchg
aad
push
xchg
push
cli
mov
lods
mov
shl
lea
inc
sbb
and
or
sti
ja
push
fidivr
xor
inc
inc
aad
(bad)
ret
mov
popf
sbb
push
add
rol
or
sahf
mov
dec
push
div
pop
mov
rcr
iret
imul
sbb
and
repnz
jae
add
sub
int3
xchg
add
and
sub
xchg
cmp
or
mov
call
(bad)
pusha
mov
(bad)
bound
jle
mov
or
inc
les
or
sbb
sub
pop
and
mov
jb
(bad)
leave
pop
ins
bound
pop
add
add
(bad)
out
xchg
std
add
xor
jecxz
jl
push
fwait
in
test
les
lods
sti
sahf
js
pop
popf
shl
inc
sub
push
cmp
push
and
nop
enter
popf
dec
add
addr16
dec
mov
cli
std
mov
cmp
popa
(bad)
in
jmp
inc
pop
jg
mov
xchg
mov
sbb
or
lahf
fcmovnbe
(bad)
loope
mov
push
mov
mov
mov
xchg
retf
cwde
pop
push
sbb
xchg
loope
jp
push
test
fsub
jnp
pushf
int3
mov
pusha
imul
jnp
(bad)
out
mov
push
cmp
repnz
push
cmps
(bad)
std
pop
aas
dec
aad
aas
loopne
mov
add
mov
stc
out
sbb
mov
push
adc
out
push
push
loop
mov
ficom
push
xchg
jno
hlt
clc
xchg
mov
mov
shr
xchg
xlat
mov
dec
jns
jmp
fs
fdivr
mov
jg
mov
loope
dec
jae
or
mov
inc
pop
inc
mov
mov
xchg
cmps
pop
xchg
call
add
rol
sbb
call
scas
addr16
xor
(bad)
jae
jns
mov
jae
mov
imul
inc
icebp
and
jle
test
adc
pop
aaa
in
xchg
lods
imul
(bad)
push
aam
bound
leave
xchg
pop
cdq
in
cmps
add
enter
jnp
sbb
xor
jmp
cdq
(bad)
fidivr
mov
mov
add
ror
sub
jne
(bad)
sub
add
ficomp
sub
adc
cmp
ins
and
xchg
fisttp
cwde
imul
repz
sbb
mov
mov
xchg
outs
xchg
sbb
fmul
aas
adc
inc
mov
int3
imul
push
sub
in
outs
loopne
arpl
mov
shl
(bad)
pop
mov
das
cwde
iret
pop
jns
cmps
popf
enter
xchg
xlat
push
sub
icebp
pop
jne
xor
loop
jl
inc
into
scas
cmp
xchg
in
out
imul
out
rcr
addr16
test
cmp
dec
jb
sti
add
test
and
fadd
sbb
push
outs
(bad)
fxch
jge
(bad)
ficom
mov
sub
xor
adc
dec
and
daa
lock
sub
sbb
jmp
xor
jl
repnz
xchg
inc
xchg
aam
pop
dec
cmc
cmps
push
dec
inc
cld
push
imul
push
sub
loope
cmp
sub
mov
inc
jge
dec
fisttp
mov
imul
pop
cdq
jle
sti
cmp
sub
fadd
and
cmps
movs
cmps
test
pop
sub
sbb
in
hlt
shl
dec
fadd
mov
stos
stc
loope
ficom
aam
mov
pop
(bad)
or
in
(bad)
or
ret
jecxz
push
fadd
aas
push
dec
xor
pop
dec
aaa
jno
stc
xor
retf
lea
mov
push
cmp
sbb
sub
addr16
mov
push
xchg
mov
test
xchg
adc
fmul
test
jae
or
cmp
xor
or
adc
jp
mov
cmp
call
jae
cmp
mov
xor
aad
jle
or
mov
adc
sbb
mov
repz
pop
push
sahf
sar
mov
mov
mov
movs
adc
or
out
out
frstor
add
fcomip
mov
sahf
mov
mov
mov
and
sub
out
inc
test
cmp
and
dec
cmps
iret
movs
loope
clc
xchg
pop
iret
and
into
std
dec
mov
outs
dec
cdq
test
fwait
cwde
adc
imul
push
and
sbb
outs
pop
mov
mov
jb
mov
out
and
adc
jne
and
push
bound
std
sbb
pop
imul
xchg
add
ja
cdq
sbb
popf
mov
mov
sub
je
add
bound
(bad)
mov
mov
jl
jmp
js
xor
imul
xchg
loopne
push
adc
mov
pop
test
sbb
dec
dec
mov
jne
mov
enter
cmp
(bad)
fdiv
clc
ret
sbb
jge
movs
ret
(bad)
pop
in
or
pushf
or
mov
std
(bad)
pop
sub
push
gs
fcomp
inc
(bad)
mov
repz
jns
pop
in
jle
sbb
cmc
lahf
stos
sub
test
sub
dec
add
mov
push
mov
mov
add
retf
cmp
push
sar
push
nop
mov
push
pop
call
jo
add
pop
sar
pop
loope
retf
pop
fisttp
dec
pop
sbb
adc
iret
lock
ja
sbb
adc
pop
and
xor
idiv
outs
into
clc
xchg
retf
cmps
mov
clc
or
dec
sbb
sub
inc
(bad)
dec
dec
xlat
inc
dec
push
and
call
loope
xor
push
ins
jb
push
and
pop
push
retf
jbe
repnz
leave
xor
xchg
(bad)
fistp
push
inc
hlt
repz
and
jnp
call
inc
mov
lds
sub
or
popf
out
mov
shl
nop
jbe
stc
test
test
mov
int3
jb
push
fist
frstor
cld
inc
jg
sbb
mov
fcmovnbe
sub
mov
cmp
adc
inc
cmps
outs
call
dec
mov
push
push
test
push
repz
jae
sar
cdq
cmps
sbb
imul
rcr
mov
call
push
fsubr
loopne
jmp
hlt
inc
hlt
cmc
test
hlt
inc
and
pop
xchg
add
(bad)
sbb
shl
shr
scas
shr
(bad)
and
jae
add
rcl
shl
mov
frstor
dec
mov
jnp
sbb
or
jnp
or
int3
mov
dec
popf
cmp
imul
mov
xchg
push
nop
push
icebp
imul
xchg
sti
leave
xchg
call
stc
adc
mov
sbb
xchg
dec
pop
xbegin
push
adc
jle
imul
add
xchg
sub
inc
std
dec
pop
sbb
xor
cwde
sub
es
xor
inc
stos
(bad)
cwde
fs
je
pop
sar
icebp
mov
and
ret
mov
add
repnz
les
test
test
sub
adc
hlt
pop
in
pushf
pop
in
pop
iret
push
into
popa
adc
push
fld
pop
push
adc
test
push
adc
icebp
xor
inc
sub
inc
cmp
pop
mov
adc
out
int
jl
inc
push
cmp
inc
retf
popa
mov
hlt
jge
xor
and
test
jle
adc
(bad)
ficom
ins
and
mov
mov
xchg
dec
lds
sub
mov
jo
popf
pop
mov
mov
xchg
push
add
popf
push
fxch
jle
pop
inc
dec
push
push
fcom
sub
retf
adc
or
add
clc
push
and
out
sbb
cmps
cmp
inc
jae
pop
rcl
add
iret
(bad)
nop
mov
dec
cmp
ret
repnz
mov
sti
pop
pop
xor
rol
dec
jns
mov
fild
add
push
mov
in
mov
bound
push
xchg
push
jns
pop
stos
ror
mov
jge
test
mov
in
nop
aam
and
xchg
cmp
mov
jp
gs
sahf
stos
packssdw
jg
and
cld
jae
xor
inc
fist
int
out
sbb
test
aam
adc
enter
cmp
cmp
jl
jb
sub
test
jmp
(bad)
xor
xchg
mov
retf
addr16
loopne
in
imul
popf
pop
xlat
ins
push
sbb
xchg
aad
jge
aas
add
xchg
cmp
and
jbe
xchg
xchg
mov
push
std
ficomp
adc
cld
scas
stc
inc
xchg
data16
shl
out
int3
inc
push
shl
aas
sti
pop
xor
push
lahf
inc
inc
or
jmp
jb
mov
add
pop
scas
and
out
test
imul
mov
sub
pop
push
retf
and
jae
lds
add
lahf
xor
ret
mov
loop
scas
loope
aam
mov
sbb
inc
dec
mov
mov
pop
out
movs
ret
adc
adc
out
(bad)
(bad)
add
sbb
adc
push
mov
sar
add
imul
fwait
data16
pop
xchg
pop
test
sbb
mov
xor
icebp
fidiv
fisttp
fcmovnbe
adc
test
push
mov
add
(bad)
stos
push
leave
imul
movs
xchg
xchg
lods
fisttp
test
jecxz
xor
hlt
pop
inc
inc
fcmovbe
les
fsubrp
dec
jo
jle
lods
pop
push
inc
jl
js
sub
jno
pop
out
fld
pop
(bad)
ficomp
cmps
sbb
jmp
mov
iret
call
or
cld
inc
movs
jne
ror
aas
mov
aas
(bad)
mul
retf
push
sub
pop
das
mov
sub
xchg
or
cmp
out
shr
and
cmp
fs
xor
or
(bad)
cli
adc
sbb
inc
sbb
iret
iret
push
fcom
int3
das
mov
inc
mov
leave
lds
or
jl
mov
adc
pop
fbstp
cli
outs
ja
call
call
and
adc
js
adc
lahf
mov
jno
pop
jmp
xor
add
jb
cmp
sub
ins
pop
adc
jmp
cmp
mov
(bad)
pop
xchg
in
pop
popf
cmc
xor
sbb
mov
push
ja
cmp
sub
pop
test
jle
lea
(bad)
sbb
mov
retf
pop
push
mov
jnp
pop
sahf
fs
xchg
push
retf
mov
(bad)
dec
add
sti
ficom
push
mov
adc
leave
and
jo
mov
call
or
xchg
push
xchg
shl
or
dec
jbe
mul
push
xchg
pop
in
in
xchg
aam
push
das
cli
sub
call
fcom
ins
xchg
data16
aad
push
sbb
pop
(bad)
cmps
inc
dec
lds
jecxz
test
add
ds
push
pop
pop
dec
sbb
jle
adc
sbb
mov
pop
xchg
jmp
or
push
sti
rol
cli
inc
xor
popa
test
xchg
push
lock
pop
in
and
adc
jb
fidiv
std
jno
add
add
jmp
bound
sub
mov
sub
jno
and
adc
test
gs
leave
(bad)
(bad)
mov
inc
mov
fnstsw
cmp
div
xor
adc
enter
shl
leave
mov
scas
iret
dec
push
fiadd
cwde
adc
bound
or
je
arpl
jo
inc
jae
inc
push
rcl
sbb
mov
fwait
aam
lea
mov
adc
cmp
inc
sti
or
stc
call
lods
pop
mov
cmp
xchg
pushf
mov
out
test
fldln2
sti
xor
xor
pcmpgtd
push
mov
stos
into
out
shl
loopne
leave
xor
add
shl
(bad)
pop
into
lods
add
mov
jns
and
pusha
enter
pop
sbb
test
fsub
adc
dec
cmps
or
fnstsw
cmc
jnp
xor
dec
xchg
adc
jno
pusha
xor
pop
nop
jle
mov
cmp
xchg
mov
icebp
test
sbb
sbb
pop
jmp
cmp
mov
push
jne
sub
mov
mov
push
sbb
jnp
xor
pop
leave
in
xchg
adc
das
in
push
and
call
xchg
sub
pop
adc
adc
push
xor
rcl
xlat
rol
and
xchg
sub
xor
mov
adc
xor
(bad)
jbe
or
jl
pop
dec
cmp
push
aas
js
repnz
sub
jo
dec
mov
nop
xchg
add
jp
lahf
fild
push
in
xchg
mov
mov
ret
mov
xchg
mov
retf
xor
stos
xor
pop
xor
fimul
push
into
(bad)
or
jg
push
cmp
lods
test
xor
pop
xchg
fild
xchg
or
in
fs
loop
sub
add
fadd
call
jle
inc
fsubr
xchg
stos
ins
jmp
mov
sbb
xchg
fmul
cmp
and
inc
dec
out
sti
fs
jmp
ja
test
(bad)
not
scas
pop
rcr
cmp
xchg
scas
ss
jb
mov
sbb
aaa
mov
xchg
sub
mov
dec
pop
adc
test
cmp
adc
stc
lds
xchg
sbb
fcmove
xor
outs
iret
gs
xor
popa
int3
test
aad
imul
cmps
or
rol
in
adc
jae
shl
ins
enter
xchg
mov
scas
test
dec
xchg
add
idiv
pop
shl
js
add
inc
mov
in
push
js
aas
push
bound
popa
fild
mov
retf
mov
sbb
fwait
inc
out
aas
loop
sub
mov
or
mov
call
clc
sbb
bnd
add
verr
push
cmp
jmp
dec
push
cli
popa
xchg
cld
pop
in
fstp
mov
jg
pop
add
cmps
outs
mov
loop
dec
adc
mov
inc
js
dec
mov
pop
pusha
xchg
into
cmp
pop
pop
push
push
fsub
sbb
or
ror
mov
sub
add
pop
dec
cmp
xchg
jp
sbb
pop
cmp
retf
outs
lds
test
pop
and
repnz
dec
iret
jl
adc
ins
popa
mov
out
pusha
shl
and
in
jmp
stos
cmp
add
out
inc
les
cmc
loop
es
sbb
add
xor
xlat
sub
aas
mov
cld
dec
mov
fs
jmp
push
(bad)
pop
cmc
mov
movs
xor
ins
add
int
pop
pop
mov
(bad)
outs
(bad)
neg
ret
sub
mov
or
mov
adc
(bad)
cmps
not
rol
popa
enter
stos
int3
inc
out
fadd
loop
shl
pop
and
fadd
cmp
adc
test
sbb
je
push
jo
cmc
std
retf
sbb
sti
mov
lea
jns
mov
mov
inc
lods
lds
aam
imul
xchg
repnz
mov
cli
aad
jg
dec
mov
add
jmp
ret
push
cmps
arpl
in
xor
or
sub
outs
mov
ins
ins
loop
hlt
sbb
jle
and
pop
sahf
dec
rol
add
out
jno
push
inc
bnd
fstp
sub
mov
add
adc
fstp
sahf
push
pop
jmp
ja
inc
rol
cmp
jnp
movs
add
outs
add
sbb
lock
ins
cs
movs
call
mov
dec
lahf
call
mov
pop
jl
sbb
xor
cmp
and
or
mov
push
mov
and
jae
aam
ja
test
test
lods
jp
mov
repz
inc
sbb
mov
and
or
cmp
call
std
std
mov
pop
inc
scas
fs
pop
test
jmp
dec
sbb
int
jl
jmp
mov
mov
int3
push
mov
push
repz
iret
pop
push
je
jb
outs
jb
push
cld
inc
outs
ins
xor
dec
or
retf
leave
cmp
inc
inc
(bad)
aam
test
jae
push
call
js
std
pop
je
je
outs
pop
ja
pop
test
ss
mov
repnz
test
sub
add
lds
call
mov
repz
push
jbe
iret
and
shl
mov
cmp
mov
and
ss
data16
fwait
js
add
jl
jecxz
pop
leave
aaa
and
sbb
and
out
inc
mov
mov
fldenv
inc
sbb
inc
or
or
lods
mov
pushf
mov
mov
xor
push
push
scas
cmp
sbb
push
mov
and
and
cmp
gs
bound
pushf
jl
fsub
and
inc
mov
xor
push
les
adc
(bad)
and
mov
jl
imul
test
and
sahf
or
dec
xor
imul
hlt
mov
xlat
jmp
sub
pop
nop
scas
jns
nop
push
das
cmp
daa
jbe
sbb
(bad)
mov
inc
or
xchg
cld
sub
dec
push
sub
jmp
loope
dec
loop
xchg
fisttp
(bad)
aad
push
cli
lock
je
pusha
cmp
cwde
mov
add
jge
or
mov
mov
ret
jnp
mov
dec
cmp
cmp
dec
mov
leave
bound
sbb
adc
retf
cmp
das
data16
int
rcr
cmc
in
sbb
aad
cmp
sub
pop
mov
xchg
jno
cmp
lock
pop
cmps
out
and
xor
inc
sbb
xchg
test
mov
cmc
and
scas
sti
cs
cmps
fwait
jp
jp
adc
mov
pusha
inc
fwait
xchg
int3
push
mov
rcr
sub
bound
hlt
call
dec
mov
sub
and
lods
adc
adc
sub
xchg
push
ss
mov
je
stos
jbe
in
mov
mov
add
ja
in
repnz
call
mov
push
stos
mov
or
push
cmp
mov
dec
aaa
cli
xor
fsubr
adc
lods
push
shr
mov
ret
xor
mov
push
popw
or
mov
arpl
(bad)
retf
mov
rol
retf
adc
cmp
sub
or
push
mov
push
mov
and
movs
jle
sub
push
loope
popa
int
sub
xchg
iret
xchg
cmp
repnz
and
sbb
xor
sbb
fistp
xor
pop
sbb
sbb
xchg
aas
xchg
push
pop
js
test
sbb
not
lea
mov
xor
arpl
lahf
fs
sub
adc
std
out
test
xor
mov
jmp
ret
sahf
add
xor
ds
imul
lods
inc
(bad)
jmp
jne
xor
daa
inc
ss
fwait
sub
dec
adc
enter
pop
das
test
xor
cs
rcl
std
cmc
gs
mov
(bad)
leave
retf
sbb
jg
int
xchg
pop
ins
fcmovne
cmp
retf
repnz
jl
xor
sub
daa
xchg
and
pop
and
xchg
iret
in
xchg
push
add
push
pusha
dec
mov
fstp
(bad)
lds
xchg
stos
xchg
das
(bad)
ins
sti
mov
xchg
shl
push
xor
mov
cdq
les
hlt
(bad)
out
sbb
mov
adc
ret
mov
movs
add
retf
movs
mov
push
sub
test
int
xchg
cmp
xor
sub
pop
jecxz
mov
fisub
mov
dec
std
stos
jnp
addr16
sbb
mov
stos
or
in
jne
mov
adc
sub
inc
jo
test
dec
rcr
add
dec
push
(bad)
jl
jecxz
data16
addr16
adc
popf
mov
mov
out
adc
xchg
jns
inc
ins
pop
popf
gs
mov
jno
xchg
sbb
sub
cs
cwde
adc
or
push
shl
xor
popa
stos
in
pop
scas
cmp
pop
push
and
mov
xor
push
enter
add
and
mov
xchg
mov
jo
stc
icebp
stos
push
scas
movs
jbe
mov
fldcw
add
and
dec
or
leave
cmp
shl
add
lds
xor
mov
lods
into
movs
sub
mov
movs
popa
mov
xchg
xor
add
inc
adc
xchg
fistp
jecxz
cmc
sbb
mov
sub
imul
in
les
pushf
jmp
xchg
in
inc
or
arpl
neg
adc
or
mov
gs
repnz
sub
inc
pcmpgtb
push
add
cmps
bound
add
cmp
add
xor
sub
repnz
fbstp
mov
es
and
into
push
adc
call
cmps
outs
loope
jl
mov
pop
xchg
(bad)
movs
test
stc
push
pop
addr16
out
test
or
push
or
dec
fstp
adc
xor
jmp
adc
or
and
mov
jae
cs
call
aad
ret
into
jmp
fcom
add
fcmovbe
outs
mov
pop
iret
je
jbe
push
aam
call
(bad)
mov
scas
cld
sub
je
mov
push
dec
fidiv
pop
fst
pop
sahf
test
sbb
push
sbb
jnp
ret
clc
clc
sbb
shr
add
mov
xchg
fcom
popf
add
lahf
stc
sbb
repnz
mov
pop
push
pushf
out
inc
sbb
nop
push
(bad)
jmp
jns
and
xor
fild
cmp
addr16
cmps
das
mov
jmp
(bad)
ja
xchg
lods
inc
cmp
xor
jp
and
scas
jle
repnz
xchg
mov
fwait
xchg
retf
cs
adc
xor
push
int
jno
or
stc
imul
in
imul
std
mov
dec
mov
retf
push
mov
out
jno
pop
cmps
cmp
cmp
pop
mov
out
mov
addr16
loope
mov
fadd
arpl
nop
test
mov
ins
mov
pop
cmp
push
adc
in
outs
pop
or
(bad)
dec
inc
retf
mov
push
popa
aaa
pushf
outs
xor
test
hlt
pop
faddp
les
push
scas
mov
popf
or
and
push
sbb
mov
adc
jo
je
jg
pop
out
iret
jle
sub
nop
int3
sub
push
push
test
js
jo
sbb
mov
adc
fist
cwde
scas
mov
add
lods
imul
fdiv
lods
popa
mov
jne
aam
cmp
inc
add
xchg
hlt
out
push
outs
loopne
nop
fdivr
arpl
mov
mov
(bad)
or
mov
mov
mov
retf
cmps
in
adc
sar
push
xor
int
sahf
push
int
stc
sub
xchg
(bad)
jl
mov
in
fwait
mov
adc
fdivr
adc
inc
in
mov
push
dec
movs
leave
pop
or
ins
fs
rcl
jmp
loop
pop
xor
xor
(bad)
in
cmps
push
and
shr
lea
pop
inc
ret
cmps
(bad)
idiv
sub
shl
mov
xchg
add
sub
inc
int3
or
inc
inc
mov
inc
test
(bad)
fmul
jo
push
sub
ss
adc
pop
aaa
test
lock
or
inc
add
jae
or
adc
mov
sbb
dec
(bad)
test
sar
popa
je
inc
xchg
loopne
pop
xchg
loope
fstp
add
push
fld
or
sti
push
or
and
cmp
lds
sbb
shl
stos
fstp
pop
fwait
outs
into
pop
or
dec
dec
mov
jb
push
repz
and
hlt
push
es
in
fdivp
push
cwde
repnz
sub
cmp
push
adc
jg
mov
push
js
ret
xor
mov
les
xor
retf
add
inc
xchg
jecxz
das
sub
jmp
mov
jmp
in
retf
bnd
lock
in
es
or
fnstcw
pop
punpckhbw
adc
int3
icebp
mov
jmp
or
aas
popa
sbb
data16
xchg
sub
in
pop
mov
pop
cmp
pop
pop
mov
cmp
ins
adc
dec
movs
clc
mov
dec
(bad)
and
add
adc
push
scas
mov
adc
aas
mov
cdq
jae
loop
sub
and
aaa
dec
mov
cmp
jb
mov
sub
repnz
jb
cmp
pop
fsub
push
sbb
cmp
jmp
rcr
add
push
mov
xchg
and
sub
or
sbb
repz
xchg
push
mov
adc
data16
test
push
es
outs
jns
pop
pop
into
xchg
imul
popf
shr
jge
sar
movs
adc
dec
fwait
icebp
push
outs
pop
out
sub
not
and
jp
dec
jno
add
mov
ins
mov
ja
inc
mov
sbb
pop
push
xlat
imul
push
out
popa
add
mov
lea
stos
jo
push
retf
fisub
outs
aas
(bad)
sbb
xchg
ja
jbe
(bad)
cmps
pop
(bad)
dec
push
add
push
test
xchg
and
bound
lock
pop
mov
aam
dec
mov
xchg
inc
jg
mov
iret
adc
push
std
pop
enter
push
xchg
scas
fwait
cmp
xchg
pop
nop
jne
dec
cmp
mov
mov
imul
dec
xlat
popf
mov
movs
mov
pusha
or
imul
mov
jno
clc
fstp
lahf
fbstp
daa
hlt
stos
adc
jge
mov
mov
pop
jmp
pop
cmps
int
cmp
addr16
adc
(bad)
jg
pop
jp
fisttp
adc
mov
into
push
dec
xor
push
jge
cli
dec
sub
push
inc
bound
pop
mov
cmp
rol
or
mov
xchg
test
nop
adc
(bad)
and
xchg
sti
and
mov
mov
inc
outs
sar
test
ficomp
jno
mov
cmp
daa
fnstenv
or
push
cld
mov
dec
int
xchg
sub
out
retf
ss
jge
lahf
fdivr
jnp
xchg
xlat
lods
and
mov
addr16
pop
mov
mov
cdq
xchg
mov
scas
mov
push
es
call
push
je
iret
(bad)
sar
ins
or
push
imul
cmps
sbb
shl
jo
sub
ret
shr
sub
or
cwde
in
inc
xchg
dec
mov
in
or
mov
js
nop
cmove
lods
sbb
jns
ror
cmp
cmps
xchg
xor
dec
rcr
call
mov
mul
push
or
jge
mov
imul
or
test
ror
aam
lds
in
xchg
dec
and
es
xlat
fstp
ret
ins
inc
fistp
imul
mov
pop
and
cmp
cmp
cmp
call
mov
sbb
pop
mov
in
pop
sub
adc
mov
jb
push
das
xchg
fldcw
ins
jmp
rol
push
jae
es
pop
mov
pop
sbb
movhps
jnp
inc
lods
repz
sbb
pop
jb
push
adc
inc
lea
aaa
adc
dec
xchg
jo
je
mov
xchg
cmp
cs
pop
gs
lods
add
aam
retf
sub
sbb
pop
es
aad
int
jo
and
outs
cmp
ds
jle
pop
dec
and
mov
clc
ret
push
cmp
or
jecxz
data16
daa
out
mov
sbb
(bad)
fild
or
and
push
test
or
jne
dec
repnz
xchg
data16
test
aad
leave
add
cmp
xchg
mov
sbb
jne
mov
mov
idiv
adc
and
and
pop
sbb
and
shl
mov
push
push
aas
mov
pop
mov
xchg
fcmove
push
adc
jno
cmp
mov
jl
mov
sti
or
pop
aam
fld
leave
popf
pop
pop
ds
push
loope
cmp
sbb
test
push
dec
and
or
jecxz
push
sti
sub
cs
and
addr16
adc
push
inc
push
or
inc
aaa
in
test
mov
xor
(bad)
fimul
cmp
aad
fst
outs
push
loop
pop
retf
scas
adc
mov
jbe
jne
sbb
add
arpl
jg
retf
cli
pop
cs
out
xchg
xor
dec
push
sbb
pop
(bad)
sti
mov
shr
shr
add
mov
pop
or
jns
movs
js
stos
dec
mov
shl
push
cdq
outs
mov
adc
dec
jns
ins
sub
pop
mov
adc
push
enter
jp
arpl
repz
push
ss
push
or
mov
xor
fist
jp
retf
and
(bad)
mov
(bad)
and
sbb
leave
addr16
sbb
ss
pop
sub
cmps
loop
popf
fisubr
aaa
fwait
jl
(bad)
test
xor
push
mov
add
mov
mov
inc
in
cmp
mov
mov
sbb
mov
repz
hlt
loope
push
mov
neg
sbb
test
fldz
mov
loope
call
rcl
and
xchg
test
ficom
sbb
pinsrw
out
sbb
sub
and
(bad)
push
push
inc
dec
mov
dec
sbb
movs
add
xchg
pusha
xor
mov
pop
ja
outs
movs
or
(bad)
int3
xchg
cmc
mov
push
mul
or
(bad)
in
fist
(bad)
js
add
sub
std
shl
jns
ins
add
test
jmp
mov
retf
jp
fstp
mov
add
pop
sbb
jnp
or
dec
(bad)
jmp
scas
movs
xchg
scas
inc
test
xchg
imul
call
repz
push
mov
jmp
js
call
dec
fwait
mov
lods
pushf
jecxz
lea
dec
test
xchg
pushf
shl
fs
xchg
sbb
clc
xchg
out
xor
cli
lock
enter
xor
jp
ret
fucom
call
mov
out
xchg
xchg
leave
mov
lods
and
aas
lea
cmp
loop
push
outs
retf
sub
test
adc
out
cmp
push
(bad)
and
int
sbb
mov
movs
or
in
repz
push
adc
sbb
dec
(bad)
test
xor
aaa
sub
les
iret
mov
into
xor
mov
mov
in
add
pop
ds
mov
xchg
xchg
xor
stos
jle
jg
push
xchg
mov
cdq
rol
idiv
sbb
mov
or
mov
fmul
imul
add
lods
inc
lods
sar
cmp
retf
test
cmp
xor
loopne
jnp
(bad)
std
adc
popa
sub
cld
aad
dec
test
das
rol
push
inc
leave
mov
sub
inc
arpl
or
gs
popa
jb
sti
xor
rcl
push
(bad)
int
pop
xor
sahf
mov
add
push
addr16
sbb
sbb
mov
jge
cdq
xor
(bad)
adc
jnp
dec
jmp
loopne
repnz
cmp
xchg
pop
into
cmp
sub
or
cmp
enter
xor
cwde
mov
pop
push
push
pop
jae
pop
in
xor
ret
mov
sub
mov
push
add
pop
popf
xchg
int3
adc
pop
xor
movs
mov
sub
call
cmps
jecxz
lods
adc
(bad)
daa
sahf
dec
pop
push
push
into
fs
retf
scas
sub
stos
sub
push
xchg
(bad)
sbb
xchg
bound
out
cmp
in
mov
jae
inc
lea
sbb
or
test
pop
mov
jae
mov
call
ds
add
(bad)
cmp
fiadd
(bad)
push
call
pop
lahf
dec
xchg
and
out
neg
sub
lds
ret
retf
fs
loope
lahf
jecxz
mov
push
movs
fs
mov
idiv
fdiv
leave
(bad)
call
lahf
xchg
gs
xchg
imul
or
dec
ror
xor
add
(bad)
cmp
mov
sbb
out
cld
xor
and
ins
dec
je
fbld
test
and
shl
dec
ds
xor
nop
fistp
pop
push
lods
pop
inc
out
or
outs
xchg
in
mov
test
mov
xor
mov
les
ret
aaa
jg
call
int3
leave
push
out
cmp
inc
jbe
xor
mov
ss
mov
stos
(bad)
push
cmps
mov
inc
push
sub
test
dec
mov
mov
and
std
mov
jecxz
fs
dec
arpl
mov
aas
mov
loope
jge
daa
repnz
imul
inc
mov
(bad)
mov
push
or
jmp
pop
xor
jo
fnstsw
mov
(bad)
stos
je
cmp
xor
ret
hlt
sar
je
mov
sub
cwde
dec
pop
stc
xlat
adc
out
dec
cmps
sti
push
xor
div
in
cwde
xchg
fisttp
xchg
mov
jmp
sub
mov
arpl
adc
in
mov
xchg
push
add
dec
js
mov
inc
dec
sbb
push
sbb
(bad)
lods
das
sti
and
pop
and
cmp
imul
cwde
(bad)
ret
add
sbb
aaa
cmp
xchg
aad
ret
daa
jp
push
push
in
fisub
call
or
outs
dec
and
outs
hlt
jle
sbb
cmps
sahf
ja
out
lock
mov
push
sbb
imul
jmp
jg
or
arpl
add
mov
pop
mov
push
push
pop
jge
and
pusha
sub
pop
xchg
fidivr
pop
aad
cmp
fst
loope
add
mov
fmul
jecxz
pop
aad
xchg
(bad)
inc
or
ret
push
mov
(bad)
fnsave
in
mov
lods
int
lods
dec
neg
mov
cmc
outs
not
stos
xchg
push
push
push
xor
stc
fisttp
aam
inc
or
push
jg
inc
cmp
retf
std
and
adc
push
ror
adc
je
or
in
jl
xchg
jmp
in
arpl
cwde
push
dec
(bad)
push
mov
and
xchg
(bad)
(bad)
shr
cmps
jne
dec
lock
inc
dec
test
sub
lea
shr
cmp
out
mov
stos
mov
(bad)
retf
dec
cld
mov
pop
(bad)
shr
jbe
jmp
and
ds
fisttp
adc
cs
push
cs
xor
movs
repz
test
cmp
xor
aad
aaa
int3
push
xor
loop
pop
jge
and
rcl
cmp
imul
(bad)
push
cmp
cmps
or
sub
push
ins
lahf
fst
dec
lods
std
fst
pop
call
pushf
outs
loopne
ja
add
scas
push
out
cmp
cmp
repz
mov
mov
add
xchg
call
ds
rol
lahf
ins
test
imul
mov
fs
movs
or
leave
xchg
xor
and
sub
lea
pusha
ficom
test
xchg
adc
inc
cmc
nop
and
mov
test
jnp
jo
xchg
scas
je
ds
test
ret
jl
fucomi
loop
adc
stc
push
and
imul
mov
adc
sub
and
pop
popa
jg
jno
pop
out
dec
icebp
and
test
(bad)
xchg
sub
xchg
mov
and
retf
jecxz
sub
push
cmps
lahf
loop
mov
mov
in
jmp
inc
xlat
xor
xor
xlat
mov
cmp
call
js
aas
(bad)
lock
jmp
jle
lock
(bad)
loope
mov
adc
jg
sub
add
sti
loopne
rcr
hlt
push
xor
sub
dec
(bad)
xchg
sbb
inc
outs
adc
mov
jmp
sbb
push
jecxz
xor
sub
xor
pop
shr
cmc
data16
mov
fcom
shl
xchg
jnp
stos
mov
sub
cld
iret
pop
ins
je
fwait
in
cmp
mov
dec
lods
mov
rol
fst
inc
xchg
or
cwde
push
cld
xchg
in
stos
call
imul
dec
dec
rol
je
xchg
xlat
mov
inc
mov
ret
cmp
and
ret
(bad)
stos
adc
xlat
jecxz
out
cmps
jns
mov
test
ret
pop
sti
jmp
loope
push
xor
jno
stos
push
jne
mov
mov
test
adc
aad
dec
xchg
std
es
mov
ret
mov
xchg
inc
(bad)
mov
sub
inc
neg
push
repnz
inc
fmul
hlt
outs
lea
stos
ins
jle
fadd
loope
cmp
test
or
mov
xchg
xchg
adc
hlt
inc
and
sbb
pop
sti
add
retf
(bad)
xor
out
push
mov
loope
xor
push
cmps
aad
cmp
sar
mov
mov
ds
call
ins
(bad)
sbb
hlt
popa
daa
or
xchg
lods
dec
and
retf
inc
pop
std
clc
bound
in
daa
movs
into
adc
popf
mov
mov
cmp
mov
inc
out
jnp
mov
mov
fwait
push
mov
cmc
sti
jns
and
xchg
test
aam
fbld
mov
outs
fst
push
sbb
test
lock
push
jg
out
push
or
mov
jnp
inc
cmp
sbb
clc
(bad)
xor
jmp
and
dec
repz
fimul
test
(bad)
lods
std
jp
lods
pop
add
xchg
popf
sbb
jmp
add
sub
xchg
inc
sbb
leave
mov
jae
mov
rcl
dec
movs
int
stc
call
scas
js
cmps
and
movs
xor
cmp
dec
out
mov
(bad)
sub
js
das
jae
add
lock
sbb
cmp
mov
or
cld
loope
xlat
jae
in
mov
mov
dec
in
fbld
push
adc
mov
imul
into
in
imul
arpl
sub
mov
daa
stos
adc
jp
fld
or
push
cmps
xchg
mov
addr16
stos
push
push
je
je
mov
pop
and
xchg
add
jmp
sub
test
xor
jae
bound
outs
(bad)
fisubr
int3
cmp
(bad)
leave
jo
lock
iret
and
cmp
cli
js
and
add
jmp
dec
scas
adc
test
xchg
sti
shr
pop
mov
mov
mov
jne
mov
cmp
dec
dec
out
xchg
cmps
cwde
sub
xchg
push
imul
cwde
add
je
cs
lods
stos
in
push
mov
stos
xor
sub
pop
imul
leave
iret
test
cli
ja
jle
mov
loope
cli
and
xchg
sar
gs
add
xor
rcr
and
call
arpl
(bad)
loope
push
xor
retf
sub
out
fdivr
pop
and
out
dec
xor
xor
mov
dec
out
cmp
out
rol
cmps
add
or
mov
xchg
cmps
movs
icebp
ja
and
inc
add
fstp
aam
arpl
sub
mov
movs
lea
sbb
adc
in
adc
je
not
aaa
ja
dec
push
es
sub
test
sbb
xchg
add
pop
shr
and
in
jnp
in
(bad)
fucompp
mov
and
(bad)
sbb
fisub
xor
adc
jb
xor
mov
mov
and
push
pop
push
pop
test
(bad)
dec
dec
push
daa
test
xchg
in
inc
add
aas
fild
or
fldz
repz
les
sub
fstp
adc
and
and
mov
(bad)
(bad)
xor
and
fwait
and
in
dec
shr
mov
dec
mov
test
cmp
fist
or
sbb
sbb
(bad)
jmp
xlat
pop
mov
adc
cs
cmp
loopne
in
jmp
rcr
push
aaa
ret
cwde
cmp
(bad)
lahf
call
sar
mov
in
pop
and
imul
cld
clc
mov
addr16
adc
js
scas
mov
mov
or
xchg
retf
sub
xor
sahf
test
cmp
ss
scas
push
popa
push
(bad)
adc
daa
stos
shl
out
cld
pop
f2xm1
dec
push
loope
test
mov
and
and
push
jmp
dec
or
movs
xchg
arpl
ud2
scas
add
pop
jbe
inc
cwde
add
(bad)
sbb
movs
or
xor
dec
inc
fdivr
cmp
shr
pop
sbb
jecxz
jmp
push
cmp
test
shl
loopne
ins
cmp
scas
pushf
(bad)
mov
sub
mov
mov
jp
dec
mov
mov
add
or
xchg
movs
push
adc
xor
cmp
push
fcom
cdq
ins
imul
mov
dec
jbe
push
xchg
cmps
ja
sub
mov
or
lahf
pushf
aas
jo
popf
push
cli
call
dec
mov
cmp
mov
mov
xor
push
push
sbb
lea
push
xchg
ficom
jg
cmc
mov
shl
ret
dec
lahf
daa
mov
mov
dec
outs
pop
push
sbb
or
call
xor
cmp
inc
aaa
add
jecxz
and
ficomp
or
jl
or
pop
sbb
mov
sub
mov
lds
(bad)
call
pop
mov
js
jmp
cli
cmp
fst
rcr
lea
inc
adc
push
mov
mov
shl
pop
dec
jg
mov
dec
(bad)
cdq
out
jb
mov
(bad)
xor
out
push
or
frstor
jl
mov
les
loopne
xchg
(bad)
sbb
rol
movs
rcr
leave
iret
jnp
hlt
add
mov
xchg
xchg
add
xor
or
sub
pop
mov
dec
ficomp
mov
addr16
imul
xor
mov
jecxz
bound
jecxz
push
out
mov
sub
out
jns
xchg
in
aas
jno
(bad)
int3
push
aad
mov
lahf
loope
dec
sub
mov
les
loop
dec
mov
pushf
or
(bad)
test
fidiv
(bad)
mov
cld
std
shl
push
dec
out
ds
call
mov
retf
mov
call
add
jne
push
jns
fdivr
neg
push
xlat
xor
(bad)
xor
pusha
sub
xor
je
mov
mov
clc
sbb
add
cmps
xlat
ds
add
fist
iret
mov
sub
xchg
push
aad
adc
and
fmul
pop
jmp
aam
hlt
pop
mov
xchg
call
movsx
add
pop
repnz
push
mov
es
arpl
ins
dec
add
cwde
sub
mov
int
adc
enter
mov
call
pop
mov
mov
jae
pushf
inc
add
aaa
inc
aam
sbb
pop
(bad)
jle
adc
push
and
in
dec
mov
cmps
int3
and
sahf
xchg
inc
sub
(bad)
dec
outs
into
lea
dec
dec
in
mov
cmp
cwde
jge
mov
lds
cmp
fst
test
out
cmp
sub
nop
mov
neg
retf
pop
js
popa
cwde
add
and
stos
aas
ret
rcr
mov
cwde
sbb
lock
cmp
icebp
mov
in
and
fbld
lea
call
dec
leave
push
or
inc
push
or
cmp
fdiv
(bad)
sbb
adc
lahf
xchg
test
pusha
add
jmp
out
xlat
shr
loop
outs
in
(bad)
test
adc
or
sub
fisttp
mov
add
mov
pop
(bad)
sti
xchg
inc
lods
or
push
retf
pop
pop
cld
xchg
in
jne
dec
mov
out
jl
icebp
movs
ret
cmp
popa
sti
aas
(bad)
sti
pop
jno
loope
nop
jp
enter
outs
mov
add
mov
mov
ror
fdivr
je
js
dec
push
(bad)
xchg
fnstenv
dec
test
sbb
jmp
jge
hlt
dec
outs
cmovo
shr
mov
pushf
call
mov
cmp
sub
hlt
xchg
call
pop
push
repnz
xchg
ret
fwait
cmp
imul
push
cmp
sbb
sbb
adc
dec
pop
inc
in
cmp
ins
loopne
jnp
mov
xor
add
add
sbb
inc
sbb
and
mov
mov
popf
shl
push
fucomp
std
jno
adc
jns
adc
popf
les
sahf
in
ss
dec
(bad)
fs
sub
mov
mov
dec
sahf
cmp
push
inc
hlt
xor
sbb
mov
fs
ja
loope
adc
xor
mov
add
sar
mov
mov
faddp
inc
and
loope
and
and
push
pop
dec
in
push
ret
push
mov
mov
mov
std
loop
sub
(bad)
pop
dec
adc
and
pop
push
ror
xchg
sbb
or
(bad)
xor
jno
adc
cwde
cmp
movs
inc
mov
loopne
daa
clc
xchg
ret
rol
mov
arpl
in
sar
adc
xchg
dec
xor
dec
push
mov
sbb
pop
jno
dec
lock
sbb
imul
add
pop
sub
sbb
stos
xchg
aaa
sbb
(bad)
adc
aad
or
ret
pop
int
movs
add
out
adc
xchg
test
sbb
and
cmp
mov
mov
daa
mul
cwde
xchg
xchg
pop
enter
jns
cmp
mov
sahf
ret
test
or
xchg
imul
rcr
outs
xor
mov
push
mov
add
mov
cwde
xor
or
pushf
add
mov
mov
loope
cmp
jns
and
add
mov
xor
add
icebp
dec
sbb
pop
movs
xor
add
or
mov
shl
call
pop
mov
mov
push
xchg
retf
xchg
ins
ficomp
ja
fcom
sbb
jle
inc
imul
icebp
cld
or
fwait
push
xor
bound
adc
add
push
(bad)
mov
fstp
jns
add
movs
cdq
xor
int3
sahf
mov
adc
out
cmp
popf
mov
dec
cmps
dec
or
mov
ret
(bad)
stos
mov
popf
aas
cmp
jge
push
rcl
int
outs
pushf
push
pop
mov
arpl
sub
jecxz
icebp
scas
outs
dec
and
push
dec
lods
push
in
popa
xlat
jne
mov
adc
outs
mov
mov
divps
inc
mov
add
push
sahf
adc
pop
pop
push
cmp
jmp
(bad)
push
mov
in
mov
fmul
arpl
lahf
or
pop
dec
push
ret
test
xor
(bad)
jne
in
inc
mov
loopne
mov
sub
sti
dec
icebp
jnp
and
sbb
js
inc
cmp
inc
loopne
fmul
out
add
mov
hlt
jl
push
(bad)
adc
arpl
jnp
std
pop
gs
sub
fwait
jg
mov
add
dec
punpcklbw
xor
dec
pusha
(bad)
mov
imul
outs
cmp
mov
xor
jp
xchg
bound
test
pop
add
mov
mov
repnz
aaa
mov
fs
push
inc
mul
cmp
mov
jg
out
test
pop
or
or
inc
scas
(bad)
pop
outs
call
xchg
cmp
int
outs
xor
hlt
or
pop
(bad)
iret
mov
xchg
add
popf
int
loope
test
icebp
and
mov
or
shl
inc
data16
es
mov
jbe
xchg
add
push
cmps
sbb
jmp
out
sbb
movs
sbb
sar
pusha
bound
movs
mov
test
push
cmps
or
xchg
fs
ins
icebp
mov
lods
dec
repnz
loope
xchg
xchg
mov
mov
enter
pop
mov
sahf
jmp
mov
aam
outs
ret
sbb
sub
push
pop
mov
dec
sub
dec
xchg
inc
les
inc
mov
dec
iret
dec
enter
jl
mov
pop
pop
call
mov
lods
sbb
push
scas
cmp
cli
daa
mov
cdq
lds
dec
pop
xchg
aas
sbb
(bad)
jl
int3
add
inc
jns
retf
mov
pushf
cmc
int
jmp
shl
xchg
test
xor
clc
call
pushf
sub
fdiv
sub
aam
dec
outs
adc
fisubr
jl
sbb
stc
jp
pop
mov
add
xor
repz
inc
xchg
test
sbb
repnz
xor
mov
retf
push
loopne
xlat
fcmove
mov
jmp
dec
xchg
add
jp
addr16
mov
sbb
xor
mov
fistp
aas
repnz
adc
in
test
sbb
push
test
das
dec
or
retf
mov
cmp
mov
std
cwde
inc
push
dec
add
push
pop
or
mov
mov
mov
mov
imul
pusha
xchg
push
ror
mov
mov
jae
lock
lds
and
cmp
jmp
xchg
fs
jecxz
in
out
fdivp
sub
stos
test
push
jmp
in
sbb
nop
sub
dec
clc
jb
ret
or
lods
mov
inc
pop
sbb
dec
scas
ds
fisttp
outs
pop
stc
xchg
and
xor
jae
les
inc
and
xchg
push
je
jbe
test
fbstp
cld
xor
sbb
(bad)
icebp
jg
dec
in
dec
repnz
test
mov
xchg
cmp
mov
in
jg
and
push
test
or
xchg
jl
cmp
jb
pop
in
out
cmp
icebp
bound
nop
xlat
imul
sub
pop
mov
test
sar
fistp
inc
cmp
movs
push
sub
xchg
fnsave
pusha
pop
jge
xchg
in
mov
out
fwait
mov
mov
xchg
sbb
xor
aad
imul
push
dec
nop
lods
lahf
sysexit
and
data16
inc
cmp
in
mov
fist
dec
fst
aaa
popf
push
jbe
shl
daa
push
pushf
push
mov
loopne
cmc
out
jecxz
or
or
push
inc
jne
dec
in
bound
mov
lods
rcr
movs
or
or
stos
xlat
nop
jg
or
scas
push
sub
scas
out
fistp
(bad)
dec
out
sbb
push
mov
int3
xor
pop
jno
push
jae
scas
rcr
stos
ficomp
push
mov
in
call
loop
mov
dec
mov
pop
iret
std
aad
imul
sbb
or
sub
(bad)
add
mov
sbb
shl
pop
rcr
mov
jp
mov
jmp
in
adc
xchg
out
inc
dec
lahf
cwde
ret
js
sbb
imul
jp
push
inc
sub
jae
(bad)
push
stc
test
fs
pop
and
and
fdivr
outs
outs
mov
push
addr16
shl
enter
hlt
xchg
mov
ds
jmp
adc
sbb
sub
shl
add
pop
ins
out
popf
in
jl
xchg
mov
inc
mov
(bad)
adc
shl
adc
sbb
jp
mov
jae
push
jnp
cmp
gs
leave
ds
rol
pop
ficomp
shr
hlt
mov
ins
pusha
push
jns
sub
xor
adc
call
inc
jmp
cmp
jmp
push
fs
cmp
push
push
push
adc
cdq
bound
inc
(bad)
cmp
(bad)
daa
xchg
xlat
cmp
sbb
push
mov
stc
lahf
scas
or
imul
(bad)
sub
mov
fidiv
test
cmp
rol
pop
or
cmps
loopne
add
cmp
pop
aas
sub
add
push
ds
mov
shl
jmp
inc
cmp
xor
inc
(bad)
push
movs
and
jb
nop
shr
pop
jmp
add
test
add
xchg
enter
add
dec
imul
test
and
jmp
ss
fs
call
(bad)
mov
lea
test
jmp
je
aaa
jb
ret
dec
cmp
pop
std
or
push
bound
(bad)
call
xor
add
loope
stos
lods
mov
jmp
lahf
lock
dec
xor
aas
test
cwde
pop
(bad)
jp
out
pop
not
sti
test
xchg
repnz
das
xor
cli
cmp
xor
(bad)
cmp
push
inc
and
ja
pop
cli
test
add
cmp
dec
cld
(bad)
sub
adc
rcr
retf
sbb
mov
stos
and
mov
js
add
xchg
inc
pop
sbb
pop
push
mov
std
adc
mov
and
jecxz
xchg
sub
iret
fcomp
out
idiv
and
mov
ss
sub
sbb
and
inc
xchg
call
xor
sub
jo
loopne
jmp
sbb
popa
pop
int
pop
jp
std
in
inc
xchg
fcom
addr16
lods
in
inc
sub
imul
aam
push
bound
hlt
int3
in
sbb
add
out
inc
mov
xchg
clc
pop
adc
leave
ds
mov
fmulp
xchg
fisttp
clc
add
xchg
lods
rcr
int
cld
icebp
aam
inc
ss
test
pcmpgtd
dec
push
test
jbe
jno
dec
movs
dec
inc
push
mov
repnz
push
cwde
inc
sub
sar
dec
xchg
daa
cwde
pop
dec
nop
sub
pop
mov
and
call
cli
inc
sbb
cmp
dec
mov
aas
ins
and
inc
dec
scas
loop
ins
mov
xor
pop
ret
popa
xchg
(bad)
push
stos
xchg
aad
addr16
lea
jge
ins
aaa
or
mov
sbb
inc
aam
xchg
int
mov
or
les
push
sti
inc
fcomp
adc
shl
ja
iret
sbb
push
loopne
popa
rcl
sbb
iret
imul
dec
nop
lds
out
mov
addr16
mul
ror
adc
dec
test
daa
sahf
or
clc
fldcw
xchg
test
into
jns
cmp
out
(bad)
sbb
xor
jno
sub
sbb
mov
cdq
xor
jbe
fwait
sub
pop
retf
and
lea
pop
or
aas
test
xchg
mov
test
mov
mov
into
dec
dec
retf
sbb
lods
shl
(bad)
je
cdq
loop
repnz
shr
xchg
test
inc
les
in
lea
out
add
pop
jecxz
xchg
bnd
sti
inc
or
cmp
jg
jne
inc
or
xor
push
je
cwde
xor
aaa
(bad)
fistp
ret
bound
bound
mov
rol
add
mov
ret
fidivr
cmps
sbb
sub
push
push
jp
mov
inc
push
ret
in
xchg
sbb
in
popa
retf
xlat
fwait
es
mov
mov
jl
test
fwait
xchg
jb
jne
add
mov
lock
mov
iret
xor
aaa
pop
ins
xor
mov
inc
out
popa
dec
mov
fwait
inc
shr
dec
into
mov
push
dec
mov
fwait
popf
stc
pop
inc
out
pop
std
nop
and
push
cmps
sub
sub
nop
mov
mov
ss
(bad)
xcrypt-ecb
cmps
dec
stc
mov
aas
shr
xchg
(bad)
mov
jmp
shr
jmp
xchg
add
sbb
add
mov
xchg
sbb
pusha
mov
iret
cmp
loopne
fwait
or
gs
in
inc
shl
and
mov
adc
fwait
sub
sti
in
jne
cmp
jmp
pusha
adc
or
aad
addr16
push
xchg
call
mov
(bad)
or
arpl
retf
cmp
dec
mov
xchg
inc
mov
xor
adc
push
fchs
inc
jmp
mov
mov
and
mov
mov
mov
push
mov
cmp
sbb
icebp
sti
add
push
mov
dec
mov
arpl
xor
fdiv
sub
push
adc
jns
or
movs
inc
(bad)
call
add
rcl
loopne
cmps
ins
jle
out
ror
das
(bad)
fstp
das
push
mov
stos
inc
int
inc
(bad)
adc
(bad)
gs
and
(bad)
outs
ja
xchg
xchg
mov
fisubr
aad
sub
in
sub
jns
push
xor
mov
repnz
stc
dec
cmp
inc
outs
ss
sbb
js
add
push
jmp
pushf
inc
sub
jle
adc
mov
and
(bad)
xchg
push
pop
call
mov
mov
sbb
push
int3
out
pop
icebp
out
adc
sbb
or
add
cli
cmp
popf
retf
loope
xchg
js
idiv
dec
add
cmps
leave
sub
(bad)
cli
or
test
xchg
push
sub
or
or
adc
lock
or
rcl
xor
xchg
sub
(bad)
xchg
sar
add
cmp
fs
ds
mov
jno
(bad)
xchg
arpl
scas
mov
in
push
xchg
ins
sbb
cmps
or
cmps
add
mov
int3
jp
fcomip
sbb
test
imul
repz
sbb
xor
clc
and
daa
outs
sub
stos
fwait
xor
aad
leave
xor
push
sbb
mov
retf
add
adc
xchg
repz
aaa
jae
inc
xor
ja
push
sub
mov
hlt
jbe
ins
sbb
or
mov
ds
in
adc
xchg
xchg
js
inc
cmp
adc
jp
mov
mov
mov
imul
jae
sub
aam
shl
test
cs
(bad)
(bad)
push
(bad)
push
dec
ret
fwait
jnp
test
fsubr
mov
xchg
cwde
mov
and
ja
add
pop
pushf
sub
loopne
jae
out
fst
lock
mov
pushf
adc
imul
inc
or
test
mov
pop
pushf
add
mov
xchg
test
dec
cld
shl
inc
mov
cs
mov
and
dec
arpl
bsr
jb
cmp
add
xor
fwait
out
fimul
test
pop
loope
xor
fwait
xlat
rcr
idiv
nop
add
outs
xchg
push
push
ja
call
call
and
push
sbb
dec
fldcw
xchg
fnsave
push
inc
mov
daa
dec
ret
aas
xchg
pop
pop
add
jl
int3
jmp
dec
mov
nop
pop
or
fwait
inc
cld
push
mov
and
sbb
leave
mov
fidiv
arpl
and
push
mov
cmp
adc
cmp
add
repz
iret
push
push
mov
mov
fist
dec
fnstcw
popf
inc
dec
jne
sub
xchg
popa
jae
add
dec
stc
or
fwait
add
pop
repnz
jnp
xchg
mov
cmp
sub
addr16
and
mov
ret
cdq
ins
js
lock
mov
test
mov
sub
jmp
ror
add
and
jno
cmc
jge
les
mov
xlat
pop
pop
mov
fcom
inc
xor
(bad)
jae
int3
(bad)
sbb
jmp
daa
ffreep
xchg
push
test
dec
sti
add
test
push
jno
call
inc
inc
stos
sub
xchg
sbb
push
cmp
(bad)
js
out
in
cld
sbb
xchg
jns
stc
push
push
xchg
retf
shl
fdiv
scas
mov
sub
cdq
into
or
push
mov
shr
mov
pusha
mov
retf
ret
xor
add
fwait
(bad)
sbb
retf
test
inc
or
jmp
inc
fsubr
aam
into
fimul
adc
inc
mov
scas
popa
and
lock
mov
add
push
mov
arpl
retf
add
sbb
pusha
push
in
push
mov
out
call
and
push
popf
mov
pushf
outs
mov
push
pop
dec
je
mov
and
add
jns
test
sub
ins
in
cld
push
repz
lock
mov
push
aam
loope
push
cmp
js
in
xor
pop
sub
aaa
iret
fs
pop
xchg
xlat
lods
sbb
push
inc
mov
inc
movs
jo
xchg
inc
out
ss
pop
mov
add
imul
mov
retf
dec
jno
int3
or
sbb
enter
xchg
popa
(bad)
mov
fistp
int
sbb
loop
adc
mov
scas
or
mov
ss
xchg
sub
xor
mov
push
leave
sahf
shl
xor
mov
lods
inc
daa
sahf
pop
retf
mov
daa
adc
add
add
iret
and
ins
add
loope
push
lahf
aas
mov
mov
in
fwait
or
adc
fdivr
cs
gs
shl
sub
out
(bad)
sbb
mov
and
dec
sub
push
mov
mov
repz
add
push
fucomp
and
jno
jmp
(bad)
mov
ins
jmp
fcmovbe
(bad)
push
cmp
ret
cmp
mov
mov
adc
rcl
jae
dec
js
and
xchg
push
repnz
outs
jbe
aam
xchg
mov
daa
jmp
addr16
rcl
jbe
push
test
jp
pop
xchg
mov
xchg
sub
popa
adc
mov
mov
ret
rcl
addr16
adc
test
fwait
sub
loope
adc
mov
or
idiv
adc
das
cmp
cmp
nop
cmp
sbb
jae
jl
sbb
sub
repnz
das
add
shl
not
ret
cmp
bound
xchg
adc
jno
dec
addr16
push
cld
add
sbb
mov
xor
or
into
and
mov
int
and
aad
sub
push
pop
pop
gs
xor
push
inc
mov
mov
mov
cld
adc
(bad)
jmp
pop
lods
mov
cmp
shl
jnp
imul
cmps
jbe
mov
mov
add
xchg
xchg
jecxz
or
pop
mov
ds
pusha
inc
pop
xlat
rcr
xor
add
jns
dec
sbb
cmp
fild
xor
jg
push
fsubr
sub
icebp
adc
dec
out
and
push
push
jmp
nop
in
movs
add
push
pop
rol
nop
dec
jno
dec
ins
pushf
clc
out
sbb
mov
or
in
retf
hlt
push
inc
enter
push
fucomp
mul
cmp
add
leave
cmp
push
and
add
adc
adc
add
mov
sahf
cmps
sub
scas
fist
or
out
pop
adc
data16
sub
pop
clc
outs
adc
outs
cld
adc
jne
jg
sbb
mov
mov
rcl
stc
dec
leave
test
sub
cdq
das
fiadd
jge
fisubr
ins
dec
mov
test
cmp
mov
pop
shl
xchg
std
cmp
and
imul
sahf
clc
dec
call
pop
je
cmc
(bad)
into
inc
lods
xchg
ds
adc
sti
sub
jmp
pusha
adc
out
add
in
dec
sbb
stos
dec
mov
jno
int3
pop
icebp
xlat
adc
imul
dec
jge
dec
pop
das
fstp
and
fs
dec
mov
jl
add
icebp
mov
sbb
mov
movs
fadd
dec
fcom
dec
adc
fnsave
sahf
scas
(bad)
cmps
mov
push
jno
xchg
push
sbb
dec
pop
mov
inc
lock
pushf
cmp
mov
fxch
mov
pop
pop
push
dec
push
or
retf
xchg
or
pusha
pop
cdq
xor
push
jmp
adc
idiv
sbb
push
cmp
mov
imul
lds
and
jnp
cmp
mov
es
lods
adc
data16
inc
inc
das
pop
test
cmp
jns
mov
pop
rol
add
mov
(bad)
jb
pop
test
cs
(bad)
sbb
scas
pop
push
mov
mov
(bad)
adc
in
leave
aas
inc
push
xor
cmp
mov
inc
sub
lods
test
pusha
in
in
push
ret
pop
ret
fdiv
jns
fucomi
cmp
test
mov
aas
rol
mov
and
stos
adc
inc
jg
test
or
inc
mov
(bad)
jle
loop
cmc
jnp
outs
pop
jno
and
int
nop
lods
rcl
call
sub
fist
mov
cmps
xchg
imul
out
out
stos
iret
les
jno
je
mov
push
loope
and
(bad)
mov
test
xchg
arpl
mov
std
scas
jmp
xor
fisttp
mov
sets
rcl
in
jmp
cmp
xor
ficomp
movs
(bad)
dec
mov
mov
sbb
push
mov
push
xor
pop
das
clc
push
dec
and
rcl
mov
push
das
inc
xor
lahf
movs
mov
inc
pop
mov
fild
je
test
test
jp
xchg
(bad)
nop
xlat
idiv
or
or
cmps
in
test
adc
ins
mov
inc
mov
cmps
ins
inc
jo
cmp
fdivr
cmp
sbb
xor
dec
aad
das
inc
adc
int3
mov
sahf
dec
jne
mov
pop
std
dec
jne
(bad)
adc
adc
cmp
push
fiadd
xor
sbb
jp
mov
(bad)
js
fcom
repnz
mov
mov
pop
and
jecxz
popa
leave
stos
xor
leave
imul
xchg
in
iret
jp
ror
mov
fwait
add
add
push
mov
push
aaa
add
inc
xor
push
(bad)
std
sbb
mov
cmp
fwait
shr
xchg
jb
loope
fstp
fidiv
mov
retf
rol
mov
mov
mov
loope
mov
out
pushf
nop
jbe
(bad)
ins
test
adc
or
in
or
push
cmps
arpl
call
jo
push
repz
jmp
arpl
repnz
pusha
lock
ins
jae
or
jae
call
loopne
(bad)
push
push
mov
aad
mov
add
sbb
mov
jp
clc
repz
stos
cmc
sub
inc
mov
shr
in
xor
out
mov
or
xor
scas
xchg
xor
jg
out
mov
cmc
push
pop
pop
pop
pop
test
add
adc
xchg
mov
inc
lahf
loop
xchg
ret
jge
ins
jmp
and
loope
pop
clc
add
add
ret
sahf
out
lea
std
jmp
dec
xchg
mov
mov
das
jg
ins
call
fmul
sbb
mov
cs
stc
sbb
cmp
cmp
pop
and
mov
add
cmp
dec
sub
ds
test
mov
(bad)
inc
xchg
sub
mov
repz
loop
out
xchg
xor
and
jbe
jo
push
push
cmps
push
nop
adc
ja
sbb
outs
daa
not
sbb
inc
mov
out
leave
sub
push
out
and
mov
aam
data16
inc
and
mov
loop
push
sub
(bad)
clc
dec
ja
fld
mul
pop
cmovns
adc
test
in
pop
test
enter
xor
inc
push
out
cli
in
fs
mov
fisttp
popf
in
cmps
and
and
cmps
xchg
inc
sbb
add
fwait
jo
mov
mov
push
gs
enter
jnp
pop
rol
rcr
push
cmp
xor
mov
jmp
or
iret
mov
lds
test
add
push
cmp
xor
test
jno
cld
retf
sbb
pushf
adc
mov
jae
inc
mov
inc
jp
mov
scas
adc
scas
pusha
cwde
pusha
mov
jle
jg
jmp
inc
cli
mov
daa
mov
fsubr
dec
xchg
or
inc
retf
ret
mov
sbb
mov
inc
cmp
add
js
or
or
rol
addr16
mov
cmp
cli
cmps
dec
rcr
jno
(bad)
pusha
arpl
jae
jmp
and
jp
hlt
movs
mov
bound
cmps
iret
push
inc
push
mov
pusha
and
lahf
jae
sti
jmp
mov
lods
mov
and
sti
and
scas
and
sub
push
jmp
mov
leave
xchg
jae
mov
xlat
mov
out
out
je
xchg
mov
mov
adc
push
into
(bad)
adc
test
loop
cmc
lock
and
out
enter
into
inc
leave
shr
xchg
ficom
out
pushf
jmp
push
jmp
or
push
imul
xchg
jg
ja
stc
out
loope
add
call
inc
test
jb
cwde
push
bound
xor
fs
jne
mov
cs
xor
mov
(bad)
ins
ror
xchg
dec
ss
mov
cmp
data16
pop
add
xchg
in
rol
dec
mov
(bad)
push
inc
daa
pop
mov
scas
or
dec
dec
iret
and
int3
inc
nop
or
cli
jnp
pusha
test
mov
push
(bad)
jo
stos
rol
jne
lods
inc
shl
push
fcomi
mov
push
ja
adc
jae
dec
arpl
scas
pop
ds
adc
std
cld
shl
sub
push
jns
cmp
jle
xchg
ins
jg
es
(bad)
or
push
pop
add
add
mov
out
hlt
into
push
cmp
or
ins
or
das
cmp
push
dec
retf
test
xchg
(bad)
jl
out
lock
push
test
mov
iret
mov
mov
and
jmp
mov
ds
add
pop
jmp
adc
lods
mov
jmp
mov
adc
mov
(bad)
mov
fcomp
inc
pop
mov
sbb
xor
test
fwait
jb
cmp
popa
xchg
or
add
(bad)
enter
pop
or
test
sbb
jb
ja
rcr
ror
jge
ss
dec
push
mov
pop
mov
dec
pop
dec
xlat
test
mov
sar
scas
clc
aaa
sbb
mov
mov
mov
sub
xor
xor
cs
fisub
loope
dec
adc
pop
imul
dec
dec
cmc
mov
sub
xchg
adc
pop
sub
dec
mov
xor
lods
lahf
popf
mov
adc
mov
and
adc
iret
add
mov
ins
and
xchg
ret
sbb
xchg
int
or
pop
push
xchg
pop
in
jg
xchg
push
sbb
pusha
push
or
adc
mov
pop
mov
in
popf
mov
ror
fwait
popa
and
shl
lea
shl
shl
mov
cmp
adc
add
loope
test
loope
jne
lods
fisub
mov
test
out
into
out
mov
push
jg
test
pop
pusha
popf
pushf
or
loope
ret
inc
push
inc
inc
sub
mov
lahf
cs
fs
mov
xor
jbe
out
sub
ss
or
pop
out
add
imul
out
out
es
sbb
pop
mul
sub
lea
push
ins
sbb
lds
xor
or
loopne
fist
es
(bad)
lods
pop
sub
xchg
add
mov
aas
mov
xchg
xor
inc
pop
loopne
aaa
lea
jb
sbb
pop
ss
dec
mov
jbe
outs
int3
pop
cmp
lock
sahf
or
loope
bound
addr16
jg
out
xor
sbb
xchg
jns
enter
mov
pop
inc
icebp
in
push
adc
jbe
xor
inc
or
jmp
cmp
dec
push
xchg
cmp
std
shl
neg
data16
in
in
inc
jno
mov
in
push
or
and
and
pop
pop
jl
cmp
push
mov
out
inc
inc
imul
jl
mov
std
mov
shl
movs
in
ins
jbe
pop
or
neg
test
daa
std
ss
es
not
cli
dec
cs
pusha
mov
add
mov
js
xchg
seto
mov
pop
pop
addr16
push
scas
jns
pop
gs
test
cmp
jp
fs
mov
sub
sbb
inc
lea
dec
arpl
(bad)
push
outs
ffreep
xchg
in
cdq
in
ja
popa
sbb
mov
into
dec
add
fst
fwait
inc
dec
mov
pop
hlt
movs
mov
dec
fs
lahf
sti
push
pop
mov
je
inc
inc
mov
and
push
sub
push
jl
popf
and
bound
mov
stc
movs
lahf
sar
xor
outs
xor
hlt
sbb
sbb
call
retf
xchg
loopne
and
(bad)
jecxz
xor
clc
div
retf
inc
hlt
cmp
xor
inc
or
sbb
inc
add
mov
cmp
sti
mov
push
movs
xchg
mov
inc
inc
sub
cli
jg
ss
add
inc
ja
and
push
lds
pop
imul
(bad)
mov
xor
stos
ja
ja
repz
in
jno
dec
sub
and
ret
(bad)
and
stos
add
scas
mov
push
dec
pop
fcmovbe
jns
pop
movs
scas
cmp
add
or
mov
and
inc
and
dec
add
lods
adc
jne
test
push
scas
push
loope
cs
cdq
jbe
or
aad
adc
inc
jmp
in
stc
pop
stos
data16
inc
inc
xor
retf
hlt
dec
iret
popf
cmp
sar
xor
call
push
jns
or
es
mov
xor
mov
addr16
mov
cmps
ss
dec
(bad)
repnz
mov
inc
lahf
std
dec
and
mov
pxor
or
mov
mov
inc
jne
xor
cld
sub
gs
icebp
fcmovnbe
cmp
shl
push
outs
add
push
mov
iret
pop
(bad)
sbb
fsubr
sbb
jecxz
les
enter
sub
ds
retf
pop
pop
pop
or
and
ins
ds
adc
adc
cwde
xor
cmps
inc
sub
cmp
imul
or
or
jne
xor
es
mov
cli
mov
ret
mov
jo
mov
xchg
sbb
mov
cmps
or
aas
lds
gs
inc
jo
xor
mov
imul
outs
mov
rcr
jo
jb
in
cwde
jp
cli
ins
dec
sbb
dec
push
ins
sbb
rol
fs
mov
inc
in
push
outs
popa
or
fcompp
popf
pusha
mov
mov
cwde
sub
js
cwde
aas
jne
leave
dec
js
loope
ja
xor
and
mov
mov
in
in
sub
inc
ins
call
aaa
in
or
out
inc
pop
int3
push
pop
stc
std
jl
or
jmp
cmp
pop
add
cmp
pop
push
push
jmp
(bad)
aad
outs
mov
or
lds
sub
test
adc
popf
jmp
inc
dec
pusha
push
repnz
fwait
les
or
gs
push
or
aad
test
lea
mov
ret
mov
not
lea
ret
cdq
mov
mov
bound
mov
mov
add
pop
(bad)
imul
jmp
imul
sbb
xlat
sub
jae
jmp
test
mov
daa
sbb
pop
mov
in
xchg
sbb
sti
mov
loopne
scas
call
in
cmp
(bad)
mov
or
dec
(bad)
ss
jo
test
mov
push
test
sti
jle
outs
mov
jle
outs
inc
call
push
loopne
jo
icebp
sub
jbe
inc
pop
mov
repz
jp
loop
(bad)
addr16
mov
mov
push
adc
jbe
pop
or
dec
mov
sub
(bad)
pop
sbb
out
and
out
mov
xor
daa
and
push
mov
jbe
push
inc
call
clc
mov
xor
inc
cmp
fiadd
dec
inc
mov
mov
retf
shr
mov
xor
sahf
test
adc
das
test
inc
jp
aad
xor
shl
sbb
lods
mov
push
mov
icebp
sub
into
xor
add
add
fisttp
std
lahf
popf
cmp
mov
xchg
mov
sbb
or
xor
or
mov
int
jle
pop
jnp
icebp
retf
adc
int
js
lods
(bad)
shr
iret
iret
pop
mov
add
dec
outs
clc
cmp
aaa
outs
neg
xor
sub
mov
mov
push
(bad)
shr
fs
jb
cwde
ror
dec
push
loopne
outs
and
hlt
inc
mov
mov
out
into
stos
(bad)
test
mov
sbb
push
mov
add
test
adc
imul
add
into
call
mov
scas
emms
imul
cmp
mov
sbb
and
mov
enter
es
mov
repz
int3
inc
fcmove
in
and
js
int3
mov
push
fsubr
push
pop
pop
rol
mov
pusha
mov
leave
mov
cli
test
inc
jne
mov
inc
in
lock
jne
jmp
mov
inc
pop
outs
retf
xor
dec
retf
mov
xchg
xor
daa
mov
cmp
push
and
rcl
sbb
outs
call
(bad)
mov
push
aam
cld
cmp
cmp
sar
jns
out
cmp
xlat
fbstp
loope
loopne
fdivr
jle
scas
enter
mov
jbe
mov
fwait
or
and
or
adc
jnp
jb
rcr
enter
xchg
hlt
mov
xchg
fcmovnbe
inc
leave
repz
into
(bad)
cs
fcom
rcr
inc
dec
mov
in
and
enter
inc
das
dec
xor
pop
pop
push
les
sub
cmp
xchg
aaa
pop
(bad)
retf
xchg
aam
js
xchg
inc
xor
inc
dec
dec
jg
adc
dec
push
ret
push
sub
and
inc
xchg
jno
mov
adc
pop
sahf
int3
push
scas
mov
adc
and
imul
or
xor
cdq
mov
shl
call
pop
sbb
bnd
add
push
pop
mov
sbb
test
pop
(bad)
(bad)
jb
fadd
or
(bad)
cld
das
push
hlt
call
test
mov
nop
mul
xchg
aam
outs
pop
hlt
movs
popf
stos
stos
call
inc
nop
rcr
mov
retf
retf
pop
loopne
cmc
jnp
jge
cmp
mov
push
inc
into
cmc
out
(bad)
into
repnz
jno
mov
das
inc
add
clc
push
cld
imul
popa
add
cmps
dec
push
ins
sar
sbb
adc
push
inc
jnp
pop
aas
(bad)
sbb
shl
in
mov
lds
mov
retf
mov
and
mov
and
scas
data16
inc
(bad)
and
xor
push
jle
inc
pop
sbb
adc
leave
push
in
rcr
dec
jae
add
mov
inc
mov
mov
xor
shl
fdecstp
movs
adc
or
out
jecxz
jo
mov
ret
pop
lds
cmp
lea
xor
fidiv
adc
inc
in
inc
sti
sti
push
es
fld
cmp
inc
sub
stos
cmp
movs
inc
das
xchg
dec
push
sbb
sbb
cmp
xchg
(bad)
or
pop
fiadd
xchg
inc
(bad)
lea
xor
ret
dec
call
cmp
(bad)
je
push
ins
mov
sub
frstor
xchg
xchg
out
fnsave
add
stos
div
in
(bad)
iret
sub
scas
xor
push
(bad)
pop
outs
cs
xchg
dec
sti
stos
push
inc
fnstcw
push
push
jg
arpl
push
call
jge
imul
jb
into
mov
xor
adc
les
pop
cmp
jecxz
loopne
xor
mov
adc
dec
(bad)
cmp
jecxz
jae
in
inc
add
xchg
stos
cld
sti
(bad)
mov
inc
mov
adc
stos
mov
cmps
(bad)
in
xchg
enter
icebp
and
fistp
cmp
sahf
fcmovnb
ds
lods
inc
inc
inc
pop
sti
jb
mov
iret
xchg
shr
push
je
mov
mov
adc
jle
ror
mov
inc
call
mov
adc
add
(bad)
in
and
int3
cs
mov
into
xor
loop
shr
mov
jns
mov
test
cmps
shl
outs
rcr
data16
aas
(bad)
dec
(bad)
sub
test
sbb
xor
mov
stos
jp
(bad)
mov
call
adc
loopne
jp
lods
adc
mov
test
pop
test
cmp
adc
adc
(bad)
je
call
xlat
pop
mov
adc
pop
sti
cwde
jne
cwde
adc
imul
sub
aam
dec
lods
loope
in
int3
fs
popf
lock
or
cmp
jl
call
fidivr
pushf
mov
or
dec
jno
iret
clc
pop
push
out
jno
icebp
sub
sub
and
cmp
add
mov
lods
xchg
add
mov
std
mov
leave
push
mov
fsubr
out
call
movs
sub
or
cmp
fadd
jae
pushf
inc
pop
jl
cmc
sbb
sahf
sub
mov
and
cwde
iret
lods
stc
fdivr
fist
sub
daa
sub
icebp
retf
int
jno
int
sahf
inc
add
test
fwait
jecxz
xor
repz
adc
sbb
outs
xchg
pmaxsw
dec
test
je
fsubr
test
bswap
arpl
mov
ret
jno
(bad)
shl
ret
xchg
repnz
scas
fadd
xor
(bad)
push
mov
movs
test
xchg
(bad)
cli
adc
cmp
pop
lahf
xchg
push
repz
cwde
pop
mov
out
ja
inc
(bad)
fistp
leave
or
data16
enter
xchg
es
in
int3
mov
mov
dec
icebp
in
mov
jo
repnz
cmps
stos
addr16
mov
adc
add
and
lods
cmp
inc
sub
dec
ss
enter
push
mov
lods
xlat
inc
mov
sub
dec
jmp
bswap
mov
popa
cmp
imul
frstor
inc
push
fsubr
xor
xchg
mov
sbb
xchg
dec
nop
inc
test
inc
cmp
repnz
adc
jb
shr
jle
in
(bad)
xor
es
mov
cmps
or
xor
lods
int3
push
xor
jno
push
stos
mov
inc
arpl
sbb
jo
stos
push
and
inc
cmps
mov
iret
xchg
xchg
or
jmp
in
adc
add
pushf
mov
in
dec
add
test
push
jge
rol
retf
ja
jno
and
sbb
in
cmc
dec
test
lods
popa
das
dec
test
pop
xor
pop
jmp
fisttp
cmc
mov
and
add
cdq
push
stos
xchg
inc
pop
push
jg
lods
fwait
cmps
mov
or
mov
cmovs
scas
jp
lahf
add
pop
push
mov
push
or
popf
and
or
dec
pop
mov
stos
movs
in
in
mov
(bad)
(bad)
in
jge
cmps
mov
dec
mov
inc
mov
popa
mov
(bad)
fcomp
mov
ins
cmc
and
test
jmp
ja
mov
cs
or
loope
or
fstp
or
push
sbb
(bad)
push
jmp
push
lods
xlat
mov
fwait
(bad)
mov
mov
mov
xor
je
pop
push
xlat
sbb
test
xchg
fadd
test
(bad)
xor
in
inc
xor
cld
or
aad
test
mov
xor
pop
mov
add
mov
sti
es
(bad)
lahf
mov
scas
retf
aaa
pushf
jb
ret
int
std
jne
inc
pop
push
or
ss
arpl
out
and
add
xchg
leave
stos
repz
fs
loopne
mov
dec
pop
fisub
xor
shl
sti
sub
(bad)
cmp
sbb
lock
fld
sbb
aas
mov
adc
pop
daa
xchg
neg
inc
stc
out
pop
jnp
shr
hlt
pusha
xchg
sub
sub
inc
cwde
or
and
call
das
cwde
fsqrt
xor
xchg
movs
fmul
fstp
mov
adc
aaa
xor
fld
mov
jae
stc
adc
pop
adc
jmp
repz
pushf
and
sbb
lods
xor
pop
ins
lds
ins
in
cmp
jecxz
xchg
stos
mov
sbb
hlt
imul
mov
add
push
fcmovu
jno
mov
sbb
pop
ret
fs
push
popa
push
mov
sbb
mov
push
ins
push
outs
xor
jecxz
push
xchg
jg
sub
jp
pop
and
dec
scas
pop
rol
in
addr16
out
sbb
push
and
jmp
cwde
ret
xchg
repnz
inc
cmp
leave
mov
push
sbb
push
or
bound
add
sub
(bad)
and
lock
mov
retf
sub
adc
mov
jge
dec
sbb
(bad)
lock
imul
sbb
jb
xchg
rcr
out
das
(bad)
in
cdq
cli
retf
jp
mov
movs
dec
cdq
call
mov
sbb
shr
das
add
sbb
jo
pop
add
out
std
cmp
mov
lahf
jb
add
stos
xchg
dec
cmp
ins
push
pushf
jp
jns
(bad)
or
add
add
add
repz
retf
sbb
mov
adc
pop
aas
je
imul
loope
lea
sti
jmp
test
mov
push
les
and
mov
pop
(bad)
and
jne
sbb
sub
movs
lea
mov
sub
(bad)
mov
fst
or
add
das
cld
lahf
sahf
cli
inc
or
aas
(bad)
and
js
dec
inc
idiv
dec
int3
jmp
aaa
and
out
mov
and
or
and
shl
mov
ja
and
ror
jg
jmp
jo
not
add
pop
and
test
cmc
xor
push
mov
cmp
jp
les
sti
sbb
dec
movs
adc
mov
aam
push
out
jmp
xchg
(bad)
popf
push
cmp
pop
inc
jb
test
push
sbb
js
mov
hlt
gs
fnsave
loope
cli
icebp
sbb
xchg
mov
or
mov
and
mov
pop
push
cmp
jno
repz
pushf
(bad)
lahf
cmps
aam
cmc
jmp
mov
cmp
dec
fsubr
inc
mov
aam
bound
mov
movs
pushf
xlat
xor
mov
(bad)
pop
fst
scas
pop
pop
in
ror
in
(bad)
mov
(bad)
loop
out
hlt
pcmpgtw
jb
add
rol
sbb
mov
daa
sahf
xor
(bad)
movs
sbb
xchg
push
mov
in
inc
test
cmc
out
in
das
cdq
cmps
ds
(bad)
fcomp
dec
or
lods
cmp
sub
push
sti
push
mov
xchg
clc
sbb
icebp
(bad)
mov
xchg
push
adc
jge
sub
outs
aaa
rcl
pusha
xchg
inc
sub
in
sbb
xchg
cmp
mov
(bad)
clc
(bad)
add
rcl
fdivr
in
jl
jmp
arpl
(bad)
(bad)
sbb
retf
push
xchg
jp
pop
test
in
adc
jecxz
lods
ins
enter
push
fidivr
and
cmps
jns
sub
nop
cmp
or
or
adc
arpl
in
mov
add
push
cmps
mov
jbe
mov
outs
nop
xchg
fcmovnu
cmps
pop
sbb
mov
test
pop
jmp
mov
loope
fmul
adc
mov
mov
inc
ins
hlt
test
jle
mov
ds
add
add
inc
adc
pop
jle
call
xchg
(bad)
std
sub
mov
or
adc
or
sbb
lods
rcl
inc
cmp
and
and
add
ins
push
(bad)
shl
mov
fsub
jle
popf
loopne
dec
fs
pop
sub
sar
loop
into
mov
je
sub
jmp
stc
inc
xchg
jne
inc
je
dec
push
pop
jmp
inc
std
sub
sbb
inc
mov
call
jle
popa
mov
fidiv
push
add
and
push
mov
mov
adc
xor
cmp
sub
xchg
loope
inc
nop
xchg
fsubrp
jbe
ss
push
mov
xchg
sbb
cdq
push
xchg
push
inc
inc
stos
pusha
inc
jne
ins
repz
pop
mov
clc
std
pop
jle
aas
or
fucomip
in
xchg
inc
xchg
push
mov
imul
sahf
push
add
and
push
adc
stos
cmc
mov
jp
mov
adc
sub
lea
mov
xchg
fisub
(bad)
push
mov
sub
loop
jnp
inc
repz
loop
nop
fsubr
sbb
dec
cwde
popf
in
cwde
lea
fsubr
not
sbb
and
aaa
loop
push
iret
push
das
mov
enter
idiv
sar
mov
pop
xchg
add
xor
xor
mov
cmps
xchg
pusha
mov
cmp
sbb
pushf
pop
aaa
neg
jle
push
loop
in
sbb
and
dec
sbb
shl
jno
sti
sbb
sti
and
ja
out
nop
fcom
mov
jp
mov
jle
das
and
push
ret
push
es
aad
sbb
inc
push
push
dec
fst
nop
dec
and
jge
add
test
jbe
fld
jg
mov
cmps
outs
pop
lods
pop
lahf
mov
xchg
mov
test
mov
mov
imul
or
and
adc
cli
push
stos
cmp
cmp
fsubr
mov
ins
or
mov
mov
mov
outs
(bad)
dec
or
push
test
lock
fsubr
scas
pop
mov
add
daa
mov
sub
test
xor
rcr
jg
mov
jge
fwait
mov
sbb
or
pop
jae
stos
std
add
jno
push
ret
cmps
add
in
mov
loope
sbb
pop
loopne
sub
xchg
xor
hlt
or
mov
push
jg
out
pop
dec
cs
jecxz
hlt
fidivr
mov
loop
int3
aad
mov
mov
add
mov
int3
pop
mov
cmp
fwait
outs
sub
retf
(bad)
xlat
add
jle
xor
xchg
ja
call
mov
fdivrp
cld
ins
movs
push
shr
rcr
push
nop
repz
fnstcw
xor
inc
push
push
sbb
(bad)
mov
in
nop
(bad)
xchg
(bad)
daa
retf
mov
xchg
add
jmp
mov
push
outs
mov
and
mov
pop
cli
mov
pop
pop
retf
pop
fistp
inc
pop
sub
xchg
or
(bad)
adc
out
inc
mov
adc
sub
ja
jbe
not
mov
repnz
xlat
adc
cli
loopne
fnstcw
ins
adc
loope
xor
jbe
push
fnstenv
dec
fisubr
pop
mov
popf
add
dec
(bad)
mov
ret
pop
(bad)
mov
fsub
or
in
retf
pop
(bad)
das
fwait
sub
and
clc
and
mov
mov
data16
jmp
xchg
xor
jle
inc
sub
inc
sbb
outs
mov
psubw
outs
and
dec
lea
aas
jge
ss
cld
call
dec
jo
mov
pop
scas
jbe
mov
or
mov
arpl
sbb
adc
fsub
ss
sar
cdq
xchg
or
jg
cli
jo
or
(bad)
arpl
sbb
movs
ret
xor
xchg
popf
ret
mov
cmp
shr
(bad)
(bad)
call
fisttp
das
xchg
(bad)
jg
lds
das
push
mov
mov
jecxz
mov
dec
ins
mov
sahf
movs
ds
jnp
sbb
mov
(bad)
imul
lods
arpl
cmc
hlt
sbb
jb
mov
add
mov
int
jl
mov
dec
repz
mov
xlat
mov
inc
test
adc
test
imul
mov
xchg
cmp
sti
dec
adc
sahf
mov
sub
cmp
add
adc
mov
(bad)
rol
jae
jg
out
inc
mul
call
add
rcl
sbb
mov
enter
and
dec
adc
out
ret
pop
and
cld
cmp
loop
test
pop
mov
data16
in
int
and
or
or
push
adc
sub
sbb
aas
cmc
int3
in
cmp
add
push
xchg
stos
and
rcr
(bad)
jmp
cmp
jne
jbe
lock
pop
pop
push
icebp
icebp
fidivr
scas
or
pop
push
in
outs
fist
cmp
popf
xor
das
dec
mov
rcr
inc
outs
out
sar
mov
and
mov
xchg
jg
shl
ret
mov
pop
pop
clc
dec
scas
clc
jnp
or
jb
pusha
xchg
adc
xor
cs
dec
loopne
adc
or
movs
add
fild
and
(bad)
das
scas
mov
pushw
and
push
imul
push
les
shl
push
mov
aam
mov
sub
imul
pop
jae
fwait
inc
out
shr
add
xchg
adc
rcl
mov
sub
xchg
add
je
mov
int
in
jo
jbe
gs
pop
jle
aas
mov
jg
or
cmps
inc
add
push
and
xor
shl
mov
add
jp
aaa
dec
sub
mov
repz
es
and
sbb
sub
mov
ja
mov
mov
mov
or
jmp
pop
sub
fst
xchg
mov
xlat
iret
fist
xchg
cmp
jle
jge
xlat
cli
sbb
aaa
mov
(bad)
ror
inc
adc
ja
jns
mov
jb
loope
push
stc
cmc
add
cmps
pop
in
sbb
mov
xchg
mov
xor
out
call
pushf
cmps
sub
ret
sub
cwde
sbb
and
sti
pop
dec
dec
mov
sahf
pop
adc
aam
data16
sub
movs
xor
ror
or
sub
cmp
retf
pop
or
mov
xchg
jb
aam
adc
xchg
jge
loop
scas
addr16
int
cmp
push
sub
dec
jbe
sbb
std
std
ret
ins
(bad)
cmc
arpl
pop
es
stc
stos
dec
retf
and
add
into
mov
cmp
hlt
adc
inc
gs
aam
jg
mov
push
popa
lods
cmc
stc
ins
sbb
adc
push
cdq
add
cli
fcmovnb
int3
aad
(bad)
or
ret
pusha
mov
sbb
mov
mov
jp
adc
cmp
fnsave
and
test
test
mov
or
data16
call
out
pop
lahf
mov
adc
cmps
sub
jp
adc
and
(bad)
and
in
pop
icebp
fldenv
fwait
xchg
cmc
(bad)
aas
or
mov
sub
mov
cmp
ds
aam
add
dec
cmp
imul
ret
dec
sub
outs
aas
call
and
mov
(bad)
lock
pop
mov
mov
push
mov
pushf
push
dec
pop
(bad)
xchg
retf
(bad)
cmc
xchg
call
repnz
nop
call
sbb
and
mov
sbb
push
test
jmp
xchg
push
xor
cmp
(bad)
in
in
sub
push
imul
stos
sbb
mov
pop
cld
dec
test
xor
xor
and
loop
mov
jle
pushf
imul
fs
shl
in
mov
(bad)
jb
push
fdiv
push
call
mov
pop
jbe
cmp
inc
and
out
cmp
stos
aad
push
adc
addr16
cmps
mov
ja
xchg
xor
pop
(bad)
sti
aaa
xor
ss
fadd
pop
mov
cmp
jmp
jb
popa
xchg
call
dec
test
xchg
cmp
bound
imul
mov
mov
iret
bound
dec
adc
mov
outs
push
shr
lds
test
scas
inc
lea
and
ss
lea
inc
add
rcr
ins
cmp
cld
sbb
sub
fdivp
adc
sbb
or
ins
js
push
adc
mov
aam
push
xchg
test
cmps
ds
fistp
int3
(bad)
ds
dec
jno
call
pusha
add
mov
jae
jmp
sub
out
rol
movs
sbb
xor
mov
lock
outs
dec
inc
cmp
into
or
jmp
lahf
scas
icebp
mov
(bad)
sbb
xlat
sub
add
imul
leave
sbb
sbb
fnstsw
movs
or
sbb
add
adc
cmp
ret
scas
jne
sbb
cld
movs
cdq
inc
pop
xchg
rol
dec
outs
neg
jecxz
rcr
stc
call
jnp
jb
mov
mov
push
pushf
mov
out
(bad)
addr16
jmp
outs
jmp
rcr
xchg
dec
add
popf
mov
cmp
adc
lds
mov
loopne
inc
out
lods
cmp
mov
sub
inc
shr
ret
push
les
imul
push
inc
inc
sub
out
or
pop
mov
iret
push
or
add
ins
xchg
test
push
xor
mov
or
into
in
stc
mov
add
sub
inc
iret
add
xor
cmp
loope
xchg
(bad)
or
or
arpl
xchg
stc
sub
loopne
push
cmps
jbe
ret
and
popa
test
cmp
aaa
pop
pop
daa
jbe
das
inc
lods
xchg
cdq
jmp
in
mov
mov
cmps
daa
sahf
repz
ins
int
pop
cdq
popf
icebp
jl
cmc
mov
test
push
shl
cmp
hlt
mov
ins
dec
std
mov
sub
inc
mov
adc
cmp
ja
arpl
mov
sahf
add
cmp
addr16
mov
push
js
dec
sar
lods
jmp
call
sub
push
es
into
rcl
pop
mov
(bad)
mov
push
push
bound
pop
imul
push
ja
cmp
out
pop
clc
push
fisub
stos
sbb
push
mov
mov
repz
mov
pop
sub
xor
addr16
imul
add
dec
pop
xchg
and
scas
(bad)
in
pop
sbb
push
cmc
jle
nop
add
jg
arpl
pop
mov
call
mov
movs
mov
xchg
pop
cmps
adc
scas
popa
jno
pop
sub
mov
add
adc
fcomp
sahf
dec
add
in
retf
xchg
sbb
iret
push
cmp
xor
daa
jp
add
cmp
cli
jmp
add
loop
pop
inc
in
(bad)
fwait
sbb
xor
mov
dec
jae
sti
dec
aad
xchg
pop
jmp
or
shl
daa
xor
push
inc
test
inc
dec
jbe
not
jae
mov
ret
jl
sahf
xchg
and
cwde
mov
jo
shr
ins
cmp
pop
cmp
inc
sub
(bad)
bound
sbb
aad
fcomp
adc
lods
cmp
gs
(bad)
std
cli
out
fistp
es
aaa
addr16
hlt
clc
cmp
dec
cmps
je
ss
xchg
clc
popf
stc
in
cmp
je
das
xor
loopne
cdq
test
ja
repnz
out
inc
lahf
sbb
fdiv
xor
retf
in
ins
mov
lods
sbb
add
jmp
sbb
push
rcl
ss
add
cmc
stos
add
mov
call
in
lods
imul
adc
pop
jno
cmp
cmp
out
je
cmc
das
popa
adc
push
and
std
cmps
popf
add
mov
aaa
mov
adc
mov
and
pop
sbb
outs
hlt
sub
mov
mov
cmc
xor
mov
dec
lahf
out
stc
mov
or
xor
(bad)
adc
cmps
inc
pop
or
jnp
or
popa
sub
mov
retf
xchg
xchg
ror
fcom
fsubr
jb
ret
cdq
xchg
je
scas
icebp
call
jl
sti
cld
mov
push
popf
jo
(bad)
xor
es
enter
and
sbb
push
ret
xor
aaa
mov
cmp
mov
inc
fisub
ror
int
add
ret
outs
push
xor
int
jae
fsubr
(bad)
jecxz
sbb
xor
adc
xor
and
push
sub
dec
jne
cwde
enter
(bad)
add
jne
imul
cmp
out
pop
fstp
fstp
dec
sbb
jge
sub
stc
lock
cmovs
mov
cmp
or
jbe
cmps
hlt
mov
loop
lds
push
fistp
dec
jno
retf
jns
xchg
cmp
cmp
and
cmp
in
mov
adc
mov
icebp
adc
ss
add
jg
js
jle
(bad)
enter
xchg
icebp
mov
and
sbb
xchg
pop
cmp
or
test
lea
or
push
push
aaa
sbb
in
pop
icebp
dec
push
sub
loop
fcom
mov
cs
mov
ret
mov
mov
mov
dec
mov
leave
and
mov
imul
cmp
push
mov
ins
push
mov
shl
aaa
xor
fisubr
cmp
adc
adc
rcr
sbb
or
cmc
leave
xchg
sub
adc
jmp
xchg
mov
loope
addr16
add
inc
mov
cmps
xor
push
lods
cmp
rcl
loop
adc
xchg
pop
popa
daa
cmp
movs
pop
dec
dec
dec
or
into
dec
ret
in
lds
sub
les
or
test
add
bound
pop
rol
adc
push
sbb
daa
inc
pop
repz
inc
xchg
inc
(bad)
mul
xchg
lock
dec
int3
push
dec
je
mov
xor
jmp
clc
retf
and
or
mov
mov
push
fwait
jnp
pop
cwde
outs
ss
outs
sub
xor
xchg
pop
mov
outs
inc
inc
inc
pop
cmp
out
into
or
nop
jg
data16
std
retf
(bad)
shl
push
(bad)
loopne
or
sbb
jecxz
lea
fs
jae
add
or
jnp
mov
pop
(bad)
jns
mov
pop
xlat
fs
loop
das
xchg
push
mov
mov
stos
in
sbb
and
xor
loopne
daa
add
addr16
fwait
mov
sub
cmc
xlat
sub
adc
aam
pop
imul
xchg
push
cmp
cs
loop
or
into
jo
ret
scas
aaa
mov
xor
and
fisttp
mov
jbe
mov
leave
adc
pop
xchg
ss
shl
aad
arpl
or
add
into
jmp
test
aam
sbb
or
xchg
rcr
sub
out
pop
pop
outs
icebp
div
ds
lods
mov
aaa
stc
and
jmp
cmp
dec
in
(bad)
jnp
dec
jno
dec
(bad)
ja
push
into
iret
lods
pop
stos
push
call
add
push
pushf
add
(bad)
rol
dec
inc
neg
push
mov
mov
cwde
stos
mov
je
jmp
or
inc
lock
inc
pop
fidivr
mov
ins
and
gs
ja
outs
add
sbb
mov
adc
push
pushf
cmp
pusha
nop
imul
or
mov
and
clc
sub
or
push
stos
inc
inc
pop
pop
add
js
imul
les
aad
mov
adc
and
shr
or
mov
cmp
mov
inc
or
neg
scas
(bad)
ret
adc
push
daa
pushf
sub
iret
das
sbb
lods
out
ins
(bad)
mov
mov
mov
outs
fnsave
das
dec
dec
xchg
es
mov
call
and
push
mov
ficomp
ins
jmp
pusha
test
xchg
inc
inc
imul
mov
pop
and
pushf
mov
dec
call
pmaxsw
shrd
lods
in
adc
mov
or
sbb
stos
mov
std
aam
fdivr
out
push
jo
(bad)
dec
movs
cmp
mov
fwait
hlt
lds
mov
jg
int
push
bound
shl
inc
enter
pop
xor
inc
cmp
add
aad
sahf
fwait
add
dec
aad
loope
div
mov
push
xor
jo
mov
mov
aas
jne
xchg
std
xchg
dec
repnz
mov
or
mov
das
cmp
aas
cld
clc
divps
(bad)
xchg
adc
shl
cmp
shr
cmps
inc
fsubrp
push
add
mov
xor
or
hlt
retf
aam
hlt
jbe
xor
not
push
xor
jl
test
out
das
or
sbb
loope
adc
mov
sbb
(bad)
adc
sbb
jnp
ret
pusha
sbb
and
mov
mov
or
int
mov
adc
jl
(bad)
mov
sub
bnd
pop
dec
outs
out
lea
pop
cmp
push
cmp
outs
push
add
jmp
sub
inc
mov
rcr
mov
in
xchg
mov
push
cmp
add
and
imul
dec
test
push
add
movs
ins
fs
mov
sbb
ret
sar
dec
das
popf
add
leave
mov
xchg
sbb
cmp
ja
repz
push
xchg
cmp
sub
mov
outs
fdivr
std
mov
ret
js
pop
jle
aad
aad
iret
xchg
fpatan
push
lds
mov
xor
out
xlat
lods
daa
imul
dec
push
out
push
cmps
pop
sub
xor
cli
sar
nop
imul
addr16
lods
lods
sbb
sahf
and
clc
mov
xor
fbld
cld
fild
mov
add
mov
test
mov
std
test
aad
scas
push
pop
lea
mov
loope
(bad)
pop
in
dec
cmp
shl
cld
sub
(bad)
in
jne
and
mov
sahf
xor
clc
xor
push
adc
retf
adc
push
xor
sbb
js
sti
(bad)
mov
push
dec
leave
mov
cmps
jmp
jno
out
into
add
add
(bad)
push
or
fwait
sub
ds
pop
int3
and
scas
call
pop
loopne
mov
arpl
mov
loopne
add
jns
push
int3
ins
jbe
fs
out
outs
jge
or
out
aas
fstp
and
aas
pop
add
pop
out
(bad)
cld
ror
retf
lock
mov
jae
xor
mov
mov
cwde
jbe
daa
out
(bad)
mov
(bad)
in
fdivr
jae
sahf
push
dec
fcom
imul
adc
pop
popa
movs
push
cmc
test
ja
cmps
push
ret
push
pop
int
inc
mov
push
dec
stos
mov
cs
pop
cmps
aas
cmp
enter
stos
mov
xchg
inc
adc
sbb
cmps
daa
sub
ret
or
in
loope
dec
cli
nop
cmp
retf
jmp
sub
loop
adc
sbb
inc
adc
push
push
mov
popf
adc
stc
out
(bad)
mov
add
div
repz
pop
mov
jp
inc
add
dec
fdivr
popa
(bad)
in
shr
outs
sub
retf
jg
pop
xor
xchg
cmc
jmp
out
dec
cmps
rcr
jl
add
jmp
or
in
scas
ss
mov
xchg
cmp
cmps
scas
imul
scas
das
pop
repnz
fidiv
inc
imul
inc
dec
icebp
into
fld
out
push
(bad)
stos
cld
test
xor
push
jecxz
ret
cmp
in
movs
mov
out
cmp
fdivr
jge
xchg
push
loopne
jno
outs
or
ss
xor
xor
lahf
xchg
jl
in
xchg
mov
jnp
gs
retf
and
(bad)
rcl
jmp
push
(bad)
and
(bad)
hlt
sub
popf
and
sub
fst
xchg
outs
adc
into
cmp
mov
xor
inc
and
popf
adc
jmp
into
adc
xchg
mov
and
mov
cmps
xchg
loopne
cmp
and
jb
xor
out
inc
and
shl
inc
cmc
jmp
push
pop
inc
(bad)
cmc
scas
sub
leave
push
xchg
sub
aad
test
out
and
gs
outs
aas
js
imul
dec
stos
mov
test
je
jmp
mov
xchg
fdivr
push
test
xchg
xchg
add
jno
out
lods
(bad)
mov
rcl
fstp
cmc
add
sub
scas
out
xor
mov
rcr
xor
das
(bad)
adc
jle
pop
and
jp
mov
hlt
inc
ja
in
(bad)
fs
dec
jae
adc
and
sbb
stc
or
pusha
pop
push
cmps
mov
jbe
mov
pop
sbb
das
sub
loop
js
je
adc
sub
xor
dec
xchg
repz
fwait
dec
pop
cdq
sub
xchg
std
ss
and
psrlw
dec
cmp
ds
mov
gs
push
shl
sbb
mov
jmp
sub
mov
cmp
nop
xchg
leave
retf
add
inc
and
fld
xor
mov
push
pop
jp
ds
ja
lock
lods
pop
imul
aam
cmp
fwait
add
inc
push
lock
sbb
not
sub
loopne
fwait
xlat
sub
out
ins
mov
in
dec
es
or
pop
iret
test
mov
add
pop
xchg
ds
shr
and
mov
push
fsubp
jo
sbb
dec
cmp
mov
xor
xor
cmp
repz
out
int
cmovno
jnp
(bad)
dec
fbld
push
add
nop
sbb
std
scas
jbe
cwde
mov
inc
xor
jb
sbb
bnd
xor
popf
jns
rcr
push
mov
inc
icebp
sub
pop
jle
jecxz
sbb
aad
mov
xchg
push
outs
cmp
cld
mov
fdiv
push
les
ds
inc
mov
cmps
xor
sahf
mov
cmp
ret
inc
lds
dec
repnz
ins
dec
pop
lods
mov
mov
outs
mov
xor
sbb
ins
pop
aam
and
popf
retf
pop
mov
jno
loope
ss
call
arpl
retf
or
ja
dec
into
loopne
(bad)
lods
cmps
es
cmp
rol
ss
sbb
xchg
push
jbe
xor
sbb
test
xchg
arpl
mov
push
xlat
mov
push
and
jmp
fisubr
or
nop
cmp
push
fs
sub
test
ffree
test
sahf
ja
add
pop
mov
sbb
movs
sbb
add
push
hlt
mov
retf
ror
cmps
cs
mov
cld
xor
sar
mov
lock
jb
movs
inc
cli
fwait
mov
int
shl
scas
mov
mov
jg
or
cmp
pushf
(bad)
mov
sub
xchg
gs
out
(bad)
sbb
mov
push
shl
nop
ins
out
add
cs
jo
repz
retf
movs
jl
xchg
daa
inc
inc
inc
popa
and
push
fcomp
scas
push
mov
mov
test
mov
pushf
jmp
mov
rcl
inc
xchg
jle
jne
daa
lahf
stos
or
mov
dec
mov
iret
sbb
cld
call
and
and
jp
leave
je
mov
cmp
push
lods
repz
push
(bad)
pop
and
loop
xchg
fs
jg
std
aaa
sbb
ficomp
pop
mov
sbb
gs
inc
dec
mov
in
mov
adc
clc
and
add
push
test
xor
cmp
pop
aas
in
mov
stos
add
fimul
inc
fs
jmp
cmp
jp
scas
std
mov
lods
gs
lods
lds
imul
sub
cmp
xchg
and
add
stc
mov
jo
(bad)
nop
mov
or
hlt
or
or
fs
push
sbb
cmp
loop
std
lahf
push
mov
mov
aaa
lahf
js
pop
imul
les
in
gs
leave
cdq
inc
xor
and
std
sbb
inc
mov
sti
sti
xchg
mov
in
fisub
pop
retf
ret
sub
pusha
sub
shl
mov
stc
outs
xchg
push
mov
mov
lahf
fs
sub
fld
shl
test
pop
repz
data16
loop
retf
push
jbe
imul
loop
inc
or
push
pop
test
cmp
xchg
sub
test
test
pop
ja
aad
mov
sahf
pop
dec
and
into
jmp
mov
mov
push
ret
(bad)
hlt
xchg
jmp
or
push
in
loope
and
xchg
aad
into
xchg
arpl
mov
(bad)
icebp
push
push
out
aad
lahf
jl
pop
cli
xlat
test
dec
jb
idiv
mov
inc
test
adc
xor
aas
icebp
cmp
inc
mov
dec
or
sub
mov
mov
xchg
leave
mov
enter
cld
ret
int
push
sbb
std
lods
or
pusha
movs
xchg
mov
sbb
(bad)
test
sbb
push
mov
mul
mov
push
fwait
fs
push
sahf
arpl
xchg
ss
cmp
xchg
cmp
gs
out
inc
xchg
pop
mov
push
mov
push
in
jg
sbb
iret
jne
outs
arpl
jmp
cmp
iret
add
fwait
lods
cmps
dec
es
retf
clc
fstp
call
call
test
cdq
in
popf
fisubr
push
imul
imul
mov
jp
in
aad
outs
push
push
arpl
les
push
nop
out
pushf
mov
adc
dec
jge
sub
jo
push
mov
mul
dec
loope
or
and
cmp
iret
and
into
or
pop
xchg
cld
dec
and
adc
neg
pop
push
not
mov
loopne
push
ds
clc
daa
mov
pop
scas
(bad)
imul
(bad)
dec
fdiv
and
std
test
les
or
int3
idiv
fstp
mov
cmp
and
movs
in
nop
out
aaa
lea
fs
adc
inc
in
sbb
adc
mov
pop
add
aas
pop
xchg
sbb
rol
in
cmps
lds
jne
in
daa
popf
mov
in
scas
lea
(bad)
and
push
jo
xchg
mov
adc
xor
xor
mov
pop
mov
pop
mov
fcom
cmp
mov
push
test
jecxz
popa
in
movs
fstp
mov
mul
loop
and
aad
rcl
imul
outs
out
push
fdivrp
enter
stos
sbb
pop
sbb
add
xchg
test
ss
inc
or
pop
cmp
and
movs
jnp
(bad)
das
repz
mov
jge
arpl
add
push
mov
cmp
adc
inc
ss
repz
push
xchg
add
loope
and
fst
and
cmp
in
rcl
rcr
daa
mov
ds
mov
pop
jae
dec
lds
add
and
(bad)
shl
sub
mov
ins
and
fist
sbb
out
pop
xor
je
inc
stos
xchg
add
xor
xchg
jae
shr
repz
and
mov
les
mov
xlat
fstp
in
adc
push
dec
mov
inc
mov
push
sub
mov
pop
push
push
fwait
(bad)
loop
add
ret
cmp
xchg
pop
xchg
add
mov
mov
aas
inc
push
push
fsub
mov
mov
test
pop
leave
rcl
dec
cmps
call
(bad)
and
lds
gs
repz
push
in
sbb
pushf
je
lea
test
dec
sub
les
into
daa
aam
lock
call
mov
imul
pop
pop
mov
lahf
pop
cli
mov
jmp
sbb
sbb
not
sbb
fwait
xor
ins
add
cmp
cwde
test
mov
test
lock
fdiv
(bad)
cmp
xchg
stos
lds
scas
jmp
dec
xchg
push
test
adc
pop
aam
ds
sub
test
push
mov
and
xlat
jle
ins
xchg
inc
push
ja
jl
pop
inc
inc
and
mov
shr
or
dec
adc
and
bound
push
fs
popf
and
jnp
jg
mov
ins
(bad)
or
ret
test
jns
jb
and
add
sub
adc
add
aas
and
sub
xchg
mov
or
aaa
inc
test
ds
sub
mov
shl
in
xchg
outs
mov
arpl
jmp
or
xchg
leave
jmp
push
xor
mov
aas
out
daa
or
jns
push
ins
dec
lods
out
shl
add
xor
ins
mov
sbb
cmp
inc
mov
icebp
pop
inc
hlt
push
push
les
out
repz
cld
mov
add
push
jl
fbstp
mov
(bad)
fisttp
push
call
mov
cmp
jle
pusha
or
xor
or
icebp
scas
jne
lock
sbb
and
jle
or
sub
jae
leave
xor
jae
lahf
adc
push
sbb
push
inc
dec
jo
enter
cmp
pop
xor
xchg
pusha
ds
sahf
gs
inc
test
xor
ret
lahf
mov
jecxz
shl
mov
in
xchg
mov
cmovnp
dec
add
mov
in
in
jecxz
sahf
xchg
xchg
jnp
push
fsub
and
sbb
mov
pop
hlt
pop
cmp
pop
scas
sbb
mov
or
pop
loop
cmc
(bad)
xor
sub
jle
pop
sahf
loope
push
in
shl
bound
pop
xchg
cmps
inc
inc
mov
out
mov
xchg
push
and
sbb
add
sub
stc
cdq
inc
mov
daa
and
xor
std
loopne
aam
push
and
icebp
adc
mov
clc
dec
sbb
cmp
mov
rcr
adc
sbb
pop
(bad)
lock
(bad)
lds
mov
adc
addr16
push
cld
jge
aam
shr
mov
or
jns
pushf
mov
cdq
fisttp
jmp
(bad)
(bad)
pop
jo
test
push
dec
add
sub
mov
divps
jae
lock
out
jmp
push
in
sub
in
add
mov
push
icebp
loop
and
bound
adc
lea
sbb
push
push
iret
call
fbstp
inc
sar
data16
rcl
jns
xor
daa
inc
push
dec
push
cmps
pusha
mov
or
stc
pop
xchg
repnz
scas
leave
cdq
int3
lahf
mov
mov
mov
cld
pop
test
pop
fnstenv
into
jo
(bad)
lods
fstp
loop
inc
sti
mov
jmp
cli
repz
inc
fsubr
cmp
adc
nop
inc
mov
(bad)
repz
loopne
clc
adc
sub
lea
and
ins
in
cli
stos
mov
jmp
push
mov
fwait
xabort
in
je
int3
sbb
jp
fsubrp
add
ja
sub
adc
je
pusha
xor
xor
mov
add
jb
movs
mov
adc
pop
jns
push
movs
ins
pop
jmp
mov
aas
dec
mov
je
popf
add
mov
add
and
(bad)
push
fist
push
pop
cmc
mov
mov
ss
mov
pop
xchg
rcr
or
shl
(bad)
dec
stc
mov
dec
jmp
fisubr
sbb
sbb
jge
sub
in
cmps
iret
stos
adc
dec
or
lock
pop
sub
out
je
sahf
xchg
sbb
test
test
jno
and
psubsw
mov
stos
ins
movs
xchg
mov
(bad)
cmp
arpl
add
or
popf
push
cmp
scas
arpl
movs
push
retf
adc
leave
retf
in
out
fist
sbb
jg
repz
adc
enter
test
push
dec
dec
loop
stc
or
mov
mov
fwait
push
pop
ror
push
mov
fsub
je
mov
mov
and
or
sub
add
mov
or
movs
int3
jb
xchg
and
jno
mov
sahf
mov
jge
sbb
jns
retf
frstor
popa
mov
ret
mov
iret
or
out
aam
sub
mov
gs
ins
jmp
xchg
cmp
or
pusha
push
mov
dec
(bad)
(bad)
pop
and
int3
js
stos
sub
or
in
mov
mov
int3
cmp
aas
jl
dec
test
push
jnp
lahf
dec
jnp
std
mov
jne
jmp
adc
aas
retf
jo
rcr
push
and
adc
dec
and
pushf
mov
arpl
xor
es
cmp
loop
or
in
cld
pop
stos
shl
inc
mov
movs
fsubr
test
loop
adc
das
mov
out
and
jo
push
push
daa
inc
push
out
push
cmp
ins
push
jecxz
sub
mov
(bad)
sub
clc
sbb
inc
fsqrt
loopne
xlat
inc
add
ss
xchg
bound
out
dec
ins
jge
add
data16
movs
into
data16
cmc
aas
pop
adc
sub
into
inc
xlat
in
inc
shl
imul
mov
int
popf
mov
pushf
int
push
add
and
jecxz
push
lock
movs
into
ss
pop
adc
pop
dec
mov
inc
mov
(bad)
xor
not
cmp
movs
or
bnd
pop
inc
jbe
push
ds
inc
loopne
hlt
aaa
int
ins
pop
into
xchg
out
lods
pushf
push
(bad)
mov
movs
mov
ret
or
adc
mov
popa
push
iret
es
cmps
movs
cmp
pop
or
cdq
rol
xchg
sub
inc
outs
mov
inc
cmps
ins
pop
inc
push
adc
jne
jnp
adc
and
(bad)
in
int3
or
add
mov
hlt
jo
xchg
adc
fwait
mov
mov
mov
inc
call
sti
(bad)
xor
mov
jl
xlat
int
sub
shl
inc
lahf
jmp
call
jecxz
jg
fdiv
push
inc
push
or
xlat
jnp
mov
sbb
and
fisub
cwde
lds
mov
aaa
mov
out
or
push
add
sbb
inc
dec
adc
ret
ror
inc
adc
push
and
sti
lods
xchg
mov
mov
hlt
mov
pop
pop
cmp
mov
sub
shl
mov
cmp
jo
mov
(bad)
sbb
inc
or
pop
push
sti
std
sbb
fs
cwde
push
data16
mov
lods
pop
call
enter
xor
retf
arpl
ins
inc
xor
retf
scas
mov
repz
jg
jl
rcr
(bad)
(bad)
jno
pavgb
pop
lods
imul
(bad)
jmp
lds
shr
lds
(bad)
xor
pop
fs
xor
arpl
dec
xchg
(bad)
enter
xor
xchg
mov
mov
(bad)
rcl
sub
ds
add
cs
mov
or
sub
sahf
dec
scas
hlt
dec
popf
sub
call
jp
mov
xchg
clc
push
xchg
push
cld
mov
pop
in
loopne
aad
pop
mov
mov
push
cwde
gs
lock
test
retf
fst
lock
add
mov
outs
cdq
aas
pusha
movs
pop
retf
adc
in
jmp
dec
xchg
dec
inc
mov
lods
xchg
dec
es
cdq
repnz
icebp
adc
into
xor
mov
pop
xor
push
test
mov
add
jns
into
sub
jecxz
push
fstp
inc
pop
mov
stos
lea
inc
lods
pop
das
retf
dec
in
pop
jl
aad
push
sbb
je
sahf
rcr
in
xchg
clc
test
scas
add
adc
into
mov
imul
mov
ud2
xchg
pop
ror
cmp
es
push
pop
rol
test
test
loopne
and
lock
and
sbb
add
das
inc
fwait
addr16
scas
mov
pop
xchg
ja
inc
pop
(bad)
sbb
jp
out
addr16
cmps
sbb
cmp
jge
fdiv
mov
jbe
rcl
xor
das
imul
adc
sbb
aam
rol
sbb
and
mov
add
stc
call
add
fldcw
imul
das
cmp
je
in
push
icebp
jbe
pop
das
add
fldenv
out
jno
es
outs
hlt
hlt
mov
out
xchg
sub
shl
nop
pop
mov
mov
stc
pop
inc
push
jecxz
xchg
dec
push
inc
adc
sti
popa
ret
push
mov
push
inc
das
adc
adc
pop
cmp
cmc
dec
std
arpl
xchg
je
stos
dec
leave
mov
mov
mov
ret
ds
mov
sbb
in
js
int
outs
push
imul
loop
loope
ds
in
test
in
scas
mov
mov
push
ret
hlt
pop
push
inc
mov
stos
inc
test
(bad)
xlat
mov
push
mov
xchg
inc
sub
mov
add
(bad)
cmp
mov
(bad)
je
(bad)
retf
mov
repnz
inc
cwde
pop
fisttp
ret
inc
xor
cld
test
enter
and
fidiv
push
fnstsw
mov
in
inc
test
inc
pop
shr
test
mov
(bad)
std
cli
sti
adc
ins
ins
test
aaa
call
inc
adc
movs
stos
repnz
xchg
jmp
je
enter
imul
out
inc
mov
or
jo
jmp
in
sbb
retf
mov
or
jae
dec
jne
movs
push
adc
or
xor
inc
std
aaa
rcr
into
mov
cmp
iret
xor
pop
push
dec
dec
dec
inc
dec
pop
outs
cs
mov
mov
jb
sbb
add
repz
or
jecxz
adc
mov
cli
ins
repz
rcr
imul
mov
xor
call
lock
adc
cdq
mov
dec
lods
fsubr
fs
mov
pop
(bad)
xchg
imul
ja
cmp
push
mov
jg
dec
sub
cwde
repnz
(bad)
sub
sbb
shl
lods
xor
outs
jle
push
pushf
daa
aam
jge
ss
mov
es
pop
cmp
ror
fstp
mov
fcom
mov
cs
push
ds
daa
jmp
(bad)
test
xor
mov
icebp
xor
or
push
jecxz
sti
leave
and
mov
fdiv
xchg
ret
ror
jmp
sbb
std
cli
sbb
addr16
mov
mov
dec
call
push
mov
sahf
icebp
push
test
mov
inc
enter
out
sub
sub
dec
mov
jecxz
lock
mov
adc
ds
jmp
mov
call
push
push
add
test
sub
int
(bad)
or
push
and
outs
jnp
jecxz
hlt
mov
jne
minps
scas
out
les
push
or
add
ins
shr
std
in
sahf
adc
imul
icebp
sub
stos
test
sbb
push
ret
stos
mov
fistp
sub
pop
in
not
inc
lock
es
push
jae
outs
pop
cmp
xor
out
mov
outs
out
and
xor
dec
push
push
int3
mov
cmp
mov
add
dec
movs
and
icebp
sub
call
cmp
mov
clc
mov
sub
stos
clc
in
pop
sub
or
dec
stos
paddq
loope
mov
call
dec
inc
pop
sbb
icebp
arpl
dec
adc
or
mov
adc
mov
push
mov
dec
(bad)
ss
jg
cli
xor
pop
shr
ret
xchg
lea
push
fdiv
xchg
ins
mov
push
fwait
dec
or
sahf
inc
dec
in
and
pusha
jno
push
dec
call
mov
inc
test
xor
xchg
in
xor
scas
jl
stos
pusha
inc
dec
cld
ret
xchg
cli
add
(bad)
mov
pop
(bad)
pop
and
shl
add
sahf
xor
mov
pushf
popf
jnp
lods
add
out
inc
dec
jecxz
and
push
xor
repz
in
clc
ds
jno
push
rol
rol
mov
call
xchg
test
sbb
pushf
sub
arpl
push
xchg
xchg
mov
mov
mov
aad
mov
mov
mov
xchg
(bad)
in
or
or
stos
jecxz
call
pop
cmp
dec
inc
mov
xchg
adc
and
gs
sub
xchg
je
adc
bound
sbb
mov
mov
lds
fimul
in
call
mov
dec
add
jmp
call
out
fisub
fisttp
lock
mov
scas
ror
push
dec
(bad)
jge
in
ret
push
cmc
sub
or
gs
jo
adc
mov
in
outs
(bad)
addr16
push
adc
in
pop
push
pusha
mov
xor
sbb
xchg
mov
stc
add
pop
jle
(bad)
dec
les
adc
dec
jno
sahf
dec
jns
add
clc
shl
pop
mov
fisubr
add
into
mov
xchg
jnp
retf
in
pop
xor
sbb
push
aaa
jle
adc
into
loopne
shl
pop
rcl
mov
(bad)
sub
imul
ret
or
mov
mov
in
inc
xchg
out
fldcw
push
icebp
inc
dec
sub
inc
test
lea
fs
rol
pusha
sbb
inc
std
js
mov
sbb
ficomp
dec
adc
jecxz
call
je
popa
xchg
popa
adc
out
movs
adc
addr16
jl
shr
xor
repnz
jmp
pusha
xlat
cmps
cmp
xchg
int3
push
mov
xor
adc
in
and
fiadd
xchg
in
sub
xor
fisttp
add
iret
add
inc
mov
mov
int3
(bad)
fist
out
cmp
daa
fild
test
retf
rol
cdq
pop
out
bound
ror
xchg
sbb
sub
cmp
arpl
mov
jnp
mov
sbb
push
adc
stos
push
xchg
and
and
inc
xor
adc
fcom
push
int3
fs
sub
mov
shl
loop
mov
sub
dec
ss
inc
inc
cli
sub
fucomp
dec
popa
arpl
mov
jns
mov
iret
dec
mov
fsubr
lahf
pop
fild
fdivr
mov
xchg
stos
adc
or
popa
jg
bound
pop
add
cmps
clc
xlat
xor
dec
cwde
inc
(bad)
cmp
jmp
pop
rcl
sbb
jae
imul
push
cmps
cs
loope
shl
dec
mov
sbb
(bad)
lods
inc
mov
dec
push
cmp
sar
mov
rcl
mov
mov
ret
cmp
add
std
pop
push
or
test
fcom
rcl
dec
push
iret
call
leave
dec
or
push
xor
sbb
sub
cmc
out
shl
xchg
lods
mov
mov
dec
inc
inc
test
mov
mov
add
sbb
cdq
loop
pop
mov
cdq
in
sbb
test
dec
jle
jl
jb
scas
test
mov
js
stc
push
clc
mov
add
cmc
lods
iret
in
mov
movs
cmp
adc
mov
adc
fadd
sbb
cli
fs
jmp
sbb
add
sub
mov
jno
lods
scas
enter
mov
add
test
pop
clc
xchg
mov
and
xor
dec
jmp
jecxz
add
push
cs
out
mov
daa
repnz
test
inc
(bad)
aam
in
adc
mov
xchg
adc
pop
mov
loop
mov
push
loopne
push
leave
(bad)
push
fisub
daa
push
scas
leave
ins
ds
(bad)
in
xor
fmul
add
lahf
dec
push
jns
shl
add
mov
sbb
lods
jnp
sub
or
mov
xchg
fsubr
test
mov
cli
jmp
and
mov
sar
dec
mov
dec
arpl
fiadd
pop
js
xchg
mov
(bad)
lock
sub
fdivr
dec
sub
inc
test
daa
or
cdq
add
outs
imul
jmp
sub
jbe
or
or
(bad)
test
(bad)
pop
xor
add
jbe
sbb
aas
ror
cld
call
push
inc
mov
(bad)
cmp
fiadd
shl
add
inc
shl
(bad)
mov
jb
mov
add
sbb
dec
paddd
(bad)
jnp
xchg
bound
ja
aad
fldenv
ins
mov
sahf
mov
xor
cld
jp
add
out
call
xor
aas
mov
mov
loop
cld
test
mov
outs
out
xchg
xor
dec
push
mov
jns
pusha
push
mov
(bad)
xchg
adc
push
mov
das
and
outs
inc
test
pop
sub
imul
div
ror
xchg
mov
aam
push
dec
push
xchg
push
stos
push
dec
xor
nop
push
xlat
scas
mov
ins
or
push
in
jns
push
jne
sub
mov
pop
dec
add
dec
movs
aas
jecxz
call
sub
sahf
scas
or
popa
sbb
sub
rol
or
adc
jno
mov
jl
jge
call
add
call
fmul
dec
shr
push
test
cmps
xchg
add
icebp
mov
pop
outs
aam
das
add
in
cwde
push
push
sub
ror
mov
outs
stos
mov
cmc
fwait
adc
stos
jge
push
ds
out
push
xchg
xchg
lods
xchg
and
idiv
and
push
mov
movs
sbb
xor
inc
push
push
aam
leave
cwde
je
add
movs
jmp
(bad)
push
je
add
cmp
adc
aas
(bad)
pop
push
xchg
gs
inc
sub
jbe
xchg
pop
pop
xchg
stos
dec
lahf
dec
or
mov
xor
aad
jmp
add
into
xor
pop
lods
xlat
xchg
cmp
enter
lods
adc
test
addr16
sti
in
out
sbb
mov
inc
out
jmp
fidiv
out
dec
push
gs
fnsave
hlt
aas
ss
sbb
fdiv
dec
inc
pop
xor
idiv
mov
rcl
pop
mov
je
push
in
pop
sub
pop
adc
sbb
jae
ret
repz
push
and
gs
mov
inc
jno
cmp
das
movs
jo
(bad)
push
jns
xchg
push
out
mov
rol
inc
sti
push
imul
and
mov
mov
cmp
data16
sbb
sub
outs
mov
xchg
scas
or
in
call
sahf
(bad)
leave
jmp
sbb
pop
cmp
jmp
(bad)
(bad)
test
loop
rol
jmp
imul
xchg
jb
xchg
pop
std
pop
xor
adc
pop
sub
or
pusha
scas
imul
fst
mov
fwait
out
and
outs
cmps
jnp
pop
xchg
cmp
mov
add
ror
daa
call
push
xchg
push
ds
stos
sub
or
(bad)
in
int
pop
ins
dec
in
or
inc
jbe
fist
fisubr
and
sbb
pop
pop
inc
mov
jp
xchg
push
dec
fsub
movs
add
into
sub
pop
xchg
imul
test
test
mov
inc
(bad)
sub
rol
ins
jnp
test
or
xor
out
ss
sub
fst
cwde
sbb
jae
sbb
iret
push
add
xchg
les
cmps
mov
inc
cwde
mov
and
jmp
push
std
inc
add
popf
scas
loopne
jg
jl
jmp
xchg
mov
scas
mov
rcr
ret
leave
jg
xor
subps
jmp
sbb
add
sbb
pusha
push
js
dec
test
mov
cdq
mov
mov
mov
push
retf
add
pop
mov
lock
mov
cmp
std
or
mov
aam
out
xchg
or
add
jg
lods
out
sti
ret
or
ret
std
add
mov
mov
add
xor
adc
daa
and
jbe
adc
push
sub
(bad)
mov
jbe
push
psubq
stc
and
push
dec
dec
ret
fxch
push
clc
mov
clc
shl
fmul
or
adc
add
inc
or
ret
stos
mov
pusha
movs
sbb
cli
aaa
cmp
and
ins
add
cmp
lds
push
aad
adc
aad
movs
mov
push
mov
mov
jge
push
xlat
xlat
arpl
cmps
sahf
hlt
adc
mov
mov
xchg
inc
jno
ja
icebp
push
cwde
dec
mov
loopne
sub
gs
popf
aaa
jecxz
fdivr
adc
push
xor
out
stos
aad
out
mov
cwde
imul
cmps
lods
call
xchg
test
jmp
dec
cmp
push
push
lahf
mov
aad
mov
inc
daa
sbb
movs
xchg
pop
adc
pop
lahf
aas
retf
pop
in
add
nop
in
jg
fs
sbb
mov
add
dec
les
arpl
hlt
mov
jp
das
jns
xchg
sub
or
mov
mov
mov
add
ins
std
enter
dec
sbb
push
(bad)
jns
sub
dec
mov
addr16
and
jnp
adc
cs
mov
mov
jl
shl
sar
(bad)
loopne
aas
enter
mov
aad
push
and
sahf
and
cmp
test
sahf
js
in
pop
ficomp
push
test
cld
mov
mov
add
movs
xchg
out
mov
movs
cdq
adc
imul
mov
or
call
xchg
mov
xchg
cmp
addr16
push
sbb
retf
(bad)
(bad)
mov
xchg
pushf
mov
lock
add
jns
or
into
in
push
fstp
stc
push
sbb
scas
xchg
into
and
mov
pop
je
and
cmp
scas
mov
mov
lods
xchg
stc
and
fmul
les
xor
sbb
xor
sar
jg
or
mov
sbb
aaa
cwde
lods
stos
cmp
ja
loope
out
loope
into
into
out
jnp
jbe
pop
icebp
xor
xchg
push
inc
xor
cwde
adc
cld
movs
cmps
scas
fdiv
imul
loop
xchg
xor
sbb
cmp
gs
push
test
and
dec
dec
in
(bad)
cli
inc
stc
in
ja
push
or
lock
dec
add
ss
or
leave
jno
hlt
addr16
int3
aam
and
mov
bound
fbstp
mov
call
dec
mov
cwde
je
shl
jmp
adc
push
mov
data16
gs
ret
and
sbb
dec
cmp
mov
out
clc
out
aam
shl
dec
sub
or
(bad)
iret
cmp
cld
pop
and
sub
jmp
xlat
push
aam
push
mov
inc
sbb
stos
and
cmp
stos
mov
mov
mov
jno
add
inc
inc
lahf
adc
or
(bad)
shr
pop
xchg
outs
dec
pushf
mov
pop
push
call
jae
lods
cmc
cmp
add
icebp
push
cmp
xchg
or
add
xor
dec
jns
pop
mov
xchg
ror
xor
sbb
ret
ror
xchg
sti
clc
lds
iret
pop
cmp
sbb
ss
repz
arpl
cmp
je
rol
(bad)
mov
pop
add
pop
mov
scas
sbb
in
jnp
ficomp
aam
push
adc
outs
imul
scas
lds
push
lods
mov
add
jbe
inc
dec
pop
xchg
outs
aam
popa
aam
fisttp
clc
xor
adc
rcl
mov
sub
mov
push
push
and
popf
lahf
cmp
popa
mov
les
dec
rol
fistp
pcmpgtb
mov
hlt
lock
jno
lods
add
mov
push
sahf
pop
push
mov
fwait
std
xchg
cmp
ja
inc
pop
rcl
(bad)
sub
(bad)
ret
(bad)
sbb
xor
dec
fmul
push
mov
test
addr16
shr
mov
mov
mov
mov
pop
push
xchg
sub
cmp
enter
ja
xchg
dec
jb
int
jbe
gs
mov
push
fsub
icebp
mov
mov
out
int3
and
jns
cmp
xchg
dec
cli
pusha
cmp
mov
test
mov
adc
push
fiadd
mov
sbb
mov
xor
out
lods
xor
(bad)
daa
or
pusha
cmp
cmp
xlat
cs
std
test
mov
xor
pop
cmp
rol
xlat
jns
jno
data16
repnz
cmp
dec
xor
test
sub
xor
jmp
jecxz
lods
fabs
dec
mov
mov
call
scas
data16
in
adc
pop
jle
mov
cmps
pop
mov
push
(bad)
jmp
push
clc
fsubr
add
lods
xchg
ds
les
imul
jecxz
inc
or
int3
fild
imul
movs
sub
xchg
mov
push
xor
cmp
mov
sahf
mov
shl
cdq
ins
adc
fwait
jg
mov
dec
cmp
jecxz
daa
or
(bad)
outs
adc
add
stc
call
cmps
out
pop
(bad)
pusha
adc
lahf
ins
fs
nop
and
dec
jge
add
pop
mov
das
mov
(bad)
inc
add
repz
sbb
jno
mov
iret
outs
cwde
div
xchg
mov
dec
inc
sub
pop
scas
pop
xor
arpl
jg
mov
in
jae
jnp
adc
and
(bad)
dec
mul
cli
or
(bad)
in
aam
jp
fsub
xor
es
in
jl
mov
cmp
arpl
sar
inc
mov
cmp
stos
pop
mov
inc
sbb
xchg
js
jle
in
push
push
pop
pop
jp
adc
aaa
(bad)
and
sar
adc
sub
ret
pop
or
mov
outs
(bad)
clc
test
les
enter
fistp
out
in
mov
inc
(bad)
out
out
jge
adc
fidiv
xor
lock
adc
(bad)
adc
xchg
mov
pop
push
out
std
ror
sahf
mov
imul
push
pop
xchg
rcr
sbb
lea
shl
(bad)
xchg
mov
push
sub
fcmovu
icebp
pop
push
mov
inc
push
pop
inc
jb
js
push
or
test
jb
adc
or
jg
test
pop
and
sbb
int
xchg
jecxz
and
xchg
lods
stc
aad
pop
adc
mov
jp
mov
mov
sbb
add
sbb
xchg
sti
xor
repz
mov
mov
retf
jmp
in
retf
(bad)
(bad)
adc
mov
inc
ss
int
fld
mov
push
or
leave
into
dec
push
add
sbb
shr
push
(bad)
pop
cmp
dec
(bad)
outs
(bad)
pop
loopne
add
pop
in
scas
pushf
jbe
test
(bad)
push
sbb
repz
pop
xchg
push
xchg
cmp
jecxz
jg
mov
loop
pop
push
xlat
lahf
clc
mov
dec
shl
push
call
js
stos
fild
enter
fild
js
or
fmul
push
sbb
pop
leave
je
(bad)
adc
cmp
int3
push
mov
cmp
je
jge
inc
jg
adc
hlt
(bad)
xchg
add
jp
cmp
cmp
and
add
aam
mov
or
ja
fdivr
adc
test
mov
sar
dec
call
lock
shl
out
mov
xchg
mov
adc
cmps
div
pop
xchg
and
imul
jno
sub
hlt
jle
pop
in
mov
pop
cmc
and
out
mov
dec
mov
fs
cmp
arpl
and
fidiv
retf
clc
sbb
pop
(bad)
repnz
sub
les
pop
js
jo
(bad)
gs
movs
ret
pop
cmps
ins
add
adc
cmp
lods
mov
push
pop
jo
fmul
sbb
sbb
jnp
cpuid
mov
sbb
fsub
es
scas
mov
das
ins
mov
push
pop
xlat
push
sub
rcl
pop
push
xor
outs
aaa
inc
pop
and
mov
push
repz
push
or
mul
loope
not
inc
pushf
mov
leave
mov
push
push
pop
les
dec
mov
push
mov
inc
xchg
mov
hlt
adc
fldenv
sbb
mov
xor
push
cmp
xor
fsubr
pop
jbe
outs
popf
fld1
loopne
repnz
mov
mov
js
xchg
and
out
mov
(bad)
jae
dec
pop
aad
movs
mov
xchg
loope
bound
mov
and
into
sub
imul
add
(bad)
movs
jecxz
mov
add
cmp
in
push
rcl
jne
mov
scas
fs
sti
pusha
ret
or
icebp
push
jb
pop
xchg
and
scas
or
mov
rcl
and
inc
xchg
mov
ffree
call
cld
mov
mov
dec
(bad)
mov
ins
jp
popf
inc
ret
jnp
adc
fmul
arpl
dec
cli
push
and
push
retf
xchg
cmp
aas
aas
pop
les
sbb
punpckhwd
ret
lea
rcl
push
call
fcmovu
imul
lock
into
mov
sti
shl
or
(bad)
xor
call
call
add
in
mov
mov
pusha
inc
cld
fs
and
mov
fstp
call
rcr
or
mov
imul
mov
fnsave
mov
stos
repnz
in
test
sbb
js
les
fwait
mov
push
dec
mov
das
mov
in
in
or
sahf
and
pop
mov
test
cmp
sbb
xchg
push
sub
or
jae
lods
inc
paddq
sub
pop
int3
aaa
aam
push
into
xchg
pop
lea
imul
sbb
push
xor
daa
cmc
dec
retfw
bound
jnp
mov
mov
std
xchg
xchg
cmp
xchg
cwde
pop
shl
mov
xchg
call
pop
stos
push
and
jns
scas
(bad)
movs
imul
repnz
mov
inc
ret
aas
popf
(bad)
les
aas
in
ds
out
mov
ja
mov
jle
inc
aam
jge
push
sub
rol
daa
cmp
jmp
inc
sub
mov
add
add
data16
test
mov
iret
fcomp
hlt
aam
push
fidivr
fldenv
mov
xchg
inc
mov
pop
sbb
pop
mov
push
(bad)
fnstcw
(bad)
aaa
xor
mov
retf
sbb
test
xchg
repz
test
in
inc
xchg
int3
cld
push
nop
cdq
pop
mov
aaa
mov
dec
lahf
jp
test
int
sbb
idiv
fldcw
movs
gs
pushf
(bad)
movs
mov
dec
in
in
iret
dec
sar
stos
xchg
ror
or
retf
pop
rol
fistp
cmps
xchg
push
std
mov
imul
aas
cdq
outs
push
mov
repz
sbb
push
stc
mov
cmc
mov
jecxz
lods
mov
push
in
test
xchg
loop
es
xchg
jbe
pop
sbb
clc
fnstenv
mov
push
clc
dec
lds
adc
pop
fs
loope
jge
mov
xlat
cli
and
shl
xchg
cmps
call
xchg
sbb
inc
hlt
(bad)
push
adc
ror
mov
mov
lds
gs
jne
mov
inc
pop
xor
leave
pop
lahf
push
jnp
ja
xchg
cwde
dec
mov
sub
idiv
xchg
pop
mov
das
out
in
pop
outs
jbe
imul
and
popf
pop
stc
xchg
cmps
pop
inc
or
lds
fistp
adc
aad
movs
pop
xor
push
inc
xchg
inc
xor
cld
sbb
or
loope
push
inc
retf
adc
or
fnsave
test
add
jbe
cmps
mov
es
xor
inc
call
(bad)
xor
pusha
nop
aaa
cmp
or
cli
mov
push
sbb
add
add
hlt
enter
jmp
jmp
mov
add
loop
fnstcw
push
je
sub
push
arpl
dec
lds
mov
add
fcomip
sbb
cmp
jl
scas
dec
stos
push
scas
fild
call
mov
or
cmps
fistp
clc
stos
add
push
imul
xor
push
stos
mov
or
push
jne
jnp
int3
cld
in
pop
shl
and
stos
inc
mov
pop
pushf
sar
adc
sbb
nop
pop
daa
and
xor
xchg
push
push
(bad)
imul
sbb
ds
xchg
test
adc
pop
inc
out
loop
stc
mov
iret
jno
xchg
push
pop
pop
sbb
jmp
push
(bad)
movs
je
mov
fld
dec
dec
add
popf
jge
in
jne
imul
cmp
dec
add
fst
push
sub
(bad)
dec
movs
mov
sti
(bad)
or
xchg
inc
xor
add
(bad)
add
ror
inc
ret
in
or
dec
xlat
std
jnp
int3
cmp
mov
dec
cdq
sub
mov
add
add
xor
cwde
xchg
jg
in
inc
jae
data16
pop
adc
ja
pop
and
in
popa
enter
sub
(bad)
pop
sbb
out
xor
mov
jecxz
xchg
jp
pop
jl
data16
mov
ret
sbb
jg
sub
gs
inc
mov
dec
sahf
stos
sbb
lds
and
adc
push
xor
mov
xchg
aad
sti
push
jmp
inc
ficom
leave
in
mov
jbe
popf
stc
cs
push
lea
retf
out
xor
lock
cmps
or
lea
mov
iret
jle
jo
xlat
aaa
cmp
mov
pop
dec
add
inc
call
adc
hlt
das
pop
adc
xchg
push
xchg
leave
lea
mov
cli
repz
or
mov
or
cmp
aas
retf
ret
adc
mov
xor
pushf
mov
pop
dec
and
push
push
xor
in
add
aaa
fadd
inc
bound
jg
push
clc
lea
jmp
jmp
aam
jmp
std
bnd
fisubr
jno
ret
xlat
fnstsw
mov
mov
jle
mov
cmp
xchg
mov
out
push
dec
push
lea
cmp
add
cmp
mov
aas
pop
xor
out
push
movs
pop
movs
out
rcr
cmp
std
loopne
mov
fmul
sar
fwait
jno
cs
ret
xor
mov
fwait
in
cld
test
arpl
dec
sbb
(bad)
cli
jecxz
xor
ds
pop
xchg
cdq
sbb
xor
(bad)
push
pop
ins
movs
fcomip
sub
pusha
push
pop
sub
and
mov
jnp
imul
and
test
sub
pop
mov
push
loop
pop
mov
sbb
retf
dec
mov
xchg
and
sbb
pushf
fs
sbb
into
sbb
sbb
xlat
sub
adc
ficomp
(bad)
jnp
dec
ret
mov
xchg
mov
push
cmp
push
dec
iret
jp
loopne
pop
int
mov
mov
sbb
clc
xchg
inc
ins
cmp
or
fisttp
aaa
les
and
pop
sbb
jno
sbb
jp
jne
or
push
movs
adc
in
outs
cs
pop
and
dec
lods
xchg
(bad)
lods
xor
and
wrmsr
jo
shr
pop
leave
popw
add
push
mov
(bad)
dec
pushf
(bad)
push
xor
pop
mov
adc
icebp
les
mov
jmp
popa
popf
sar
(bad)
sub
in
push
in
mov
push
je
shl
iret
dec
xchg
outs
pushf
dec
sub
call
fsqrt
stos
sub
dec
ss
add
and
xchg
jno
movs
icebp
xchg
icebp
push
int
pop
jle
or
ret
sbb
into
bound
mov
lea
pop
mov
popf
xlat
call
jmp
enter
arpl
jne
add
xchg
dec
call
enter
rcr
mov
inc
dec
imul
rcr
in
retf
jmp
mov
pop
adc
jnp
out
sub
das
xchg
jp
sub
fadd
(bad)
jmp
out
sbb
cwde
fucomi
je
jae
mov
rcr
mov
dec
bound
out
outs
mov
xchg
sub
mov
arpl
in
push
sub
clc
push
(bad)
mov
movs
mov
jbe
out
pushf
and
out
inc
jmp
in
in
push
mov
or
push
scas
in
inc
mov
dec
and
jne
sub
xchg
xor
sbb
clc
mov
mov
jecxz
mov
xchg
xlat
or
cmp
jns
clc
imul
cdq
pusha
int
jb
cwde
loope
mov
dec
add
mov
nop
test
popa
cmp
stos
or
scas
sbb
sbb
(bad)
inc
xor
and
push
sbb
fadd
push
mov
dec
or
dec
push
push
cmp
pop
mov
std
(bad)
mov
sbb
inc
sar
jg
adc
jne
call
dec
pushf
lea
cmc
pop
mov
(bad)
shr
sub
stos
sub
jno
aaa
adc
shl
mov
adc
jmp
sbb
inc
lds
lds
call
sbb
out
(bad)
(bad)
xor
leave
out
dec
call
ins
loop
mov
inc
mov
jge
in
add
add
mov
cwde
lock
les
(bad)
retf
xchg
sbb
xor
ins
or
shl
mov
dec
or
push
xchg
inc
nop
mov
adc
lock
idiv
mov
xchg
(bad)
mov
or
xlat
mov
sti
inc
daa
inc
jns
ja
and
add
dec
out
out
sahf
test
sub
cld
lock
retf
nop
adc
test
gs
out
dec
call
push
fndisi(8087
xor
call
into
dec
aas
sbb
mov
pop
fwait
pop
push
mov
stos
repnz
xor
pushf
dec
xchg
rcr
pop
dec
fwait
sbb
inc
(bad)
in
mov
in
dec
fidiv
repz
or
mov
outs
sub
sub
and
ss
or
repnz
xor
dec
sbb
setge
xor
in
fld
and
call
(bad)
cmps
mov
pusha
mov
rcr
hlt
(bad)
push
js
xchg
cmp
fiadd
out
js
rol
cs
push
mov
lods
and
jecxz
inc
lods
lahf
pop
pop
les
adc
mov
sti
mov
pop
mov
inc
jl
fs
jnp
setg
aas
inc
inc
inc
ins
lds
loop
and
sbb
mov
adc
xchg
or
cmc
dec
(bad)
daa
cmp
xor
icebp
pop
jmp
push
jl
push
sahf
lods
sbb
push
ret
jnp
stos
or
sub
cmp
push
jno
(bad)
mov
arpl
sti
or
js
cmc
push
test
sbb
rcl
aad
cwde
je
mov
aaa
xchg
pop
inc
jle
jbe
sbb
js
dec
xor
cmp
xlat
push
xchg
call
(bad)
jae
movs
aaa
add
xchg
inc
sbb
xor
cmps
jnp
sub
xlat
sub
mov
push
add
xchg
mov
xor
fistp
cli
ret
shr
mov
mov
loop
movs
nop
data16
and
dec
mov
in
jg
xor
(bad)
in
adc
mov
lds
mov
push
loope
fdivr
jp
jno
outs
mov
xor
sbb
(bad)
repz
ret
push
pop
and
jnp
jns
xor
fsubr
ja
daa
sub
popa
pop
inc
adc
push
aad
movs
xor
sbb
jns
push
sub
cmovno
push
inc
and
pushf
jp
push
push
sub
mov
sar
fcomp
jne
add
lahf
test
aad
lock
dec
sbb
pop
push
repz
adc
ret
retf
lods
adc
mov
sti
add
enter
jns
mov
mov
je
jecxz
push
push
or
movs
test
aas
sar
xchg
jmp
cmp
mov
xchg
pushf
cmp
sub
add
xchg
fnsave
popf
sub
dec
xchg
or
mov
pop
lods
xchg
xor
call
xor
cdq
mov
call
sub
mov
mov
cmp
div
cmp
jnp
adc
inc
test
std
mov
jae
test
(bad)
sub
(bad)
sbb
repnz
or
cmp
adc
rcl
pop
xchg
cmp
aaa
push
cwde
sbb
add
and
cmp
adc
jl
push
cld
add
adc
cmp
pop
sbb
push
rcr
iret
fistp
jle
fild
cmp
cmp
sbb
jnp
mov
inc
clc
test
inc
sbb
out
inc
add
cmp
xchg
scas
mov
jb
fmul
and
xlat
(bad)
sub
stos
sub
xchg
rcr
mov
jl
mov
mov
jmp
outs
push
ins
lea
cmc
scas
test
fnstcw
cmp
(bad)
pop
xchg
pop
sbb
arpl
mov
mov
hlt
inc
outs
jp
xchg
jbe
into
cmps
push
bound
fwait
mov
jo
sub
int3
mov
mov
mov
jo
dec
bound
sbb
mov
cmp
cld
scas
leave
aaa
in
push
retf
test
adc
jl
retw
enter
and
lea
push
inc
push
scas
pop
push
je
nop
in
fdiv
or
lds
movs
sbb
fld
xor
xchg
fmul
push
lock
or
sub
sbb
mov
xchg
in
in
daa
shr
inc
neg
jbe
sbb
dec
xchg
pop
inc
adc
aaa
sbb
out
cs
mov
xchg
hlt
xor
fidivr
das
mov
popf
mov
(bad)
push
push
repnz
pop
in
fcomi
std
dec
fldl2e
out
cmp
jmp
xor
sub
stc
mov
fisub
imul
std
mov
sub
jl
pop
and
mov
push
xor
jmp
jno
sub
loopne
sti
jp
repnz
sub
add
sti
pop
sbb
test
(bad)
stc
mov
data16
dec
push
mov
fcmove
dec
rcl
test
pop
data16
repz
sbb
and
clc
xchg
mov
push
mov
dec
cs
xor
pop
stos
stos
cdq
(bad)
lods
xor
and
loope
addr16
ss
aad
mov
xor
in
cmp
pop
fadd
cwde
in
inc
sub
hlt
sub
dec
jne
mul
cmps
xor
lods
inc
das
xchg
xchg
mov
mov
jle
push
lds
(bad)
or
mov
lods
jmp
out
xchg
inc
punpcklbw
pop
push
mov
push
shl
ror
(bad)
cld
lock
xchg
pop
adc
mov
dec
sti
test
adc
pop
imul
sbb
mov
inc
ror
and
xor
adc
mov
inc
aas
xlat
leave
ret
shl
mov
adc
outs
jl
xor
add
pop
add
ds
pop
mov
mov
xor
sahf
imul
jnp
mov
sub
leave
repz
jae
inc
rcr
scas
add
mov
mov
mov
and
inc
(bad)
xchg
cmp
pop
mov
and
shr
repz
cs
nop
test
xor
fcmovu
call
mov
lds
pop
ins
cli
xchg
or
pop
icebp
rcl
retf
inc
add
ds
and
cmp
adc
sub
xor
pop
inc
sbb
aam
shr
dec
retf
out
aam
ins
jle
outs
mov
cmps
(bad)
fcmove
and
data16
cmp
mov
pushf
fldcw
mov
aad
xchg
aas
mov
js
lock
mov
test
pop
aas
push
call
shl
xchg
jmp
sbb
push
(bad)
pop
(bad)
jp
test
dec
test
nop
inc
les
sub
and
pop
cld
mov
jo
cli
mov
(bad)
and
jno
mov
int3
mov
fcmovb
fucomip
or
jbe
inc
sub
jmp
out
inc
inc
xor
xchg
adc
les
jo
jbe
fsub
and
es
sti
jnp
dec
fs
les
repz
or
pop
inc
sahf
push
pusha
xchg
ss
xchg
inc
in
cmps
test
loop
xchg
inc
sbb
rcl
ror
xor
pop
dec
cmp
push
das
jne
push
xchg
push
xor
and
hlt
ror
lods
jle
sbb
mov
mov
cwde
dec
test
inc
jp
adc
mov
fwait
xchg
jae
jge
jb
push
call
inc
cmp
and
rcl
aad
jbe
iret
(bad)
in
add
fs
pop
test
aad
push
arpl
cld
adc
adc
pop
and
iret
pop
sbb
mov
or
dec
lock
fidiv
mov
dec
cmp
jge
daa
push
stos
push
neg
mov
jmp
cmp
cmps
adc
aas
jb
clc
pop
cmp
and
sub
jae
pop
inc
aas
dec
into
pusha
out
ins
lods
int3
(bad)
mov
ret
retf
jb
(bad)
fcmovbe
repnz
pop
adc
jns
in
cmp
inc
mov
mov
xchg
or
outs
adc
xor
stc
mov
inc
rol
jnp
and
dec
ja
mov
jbe
mov
ins
idiv
push
and
retf
sbb
sbb
mov
inc
xor
sti
ins
repz
cmp
shl
pop
cmp
ja
xchg
inc
mov
lods
jle
std
scas
fild
in
jmp
mov
pop
and
add
cmc
mov
or
cmp
fsubr
adc
jns
jbe
test
stos
bound
repz
sbb
inc
dec
loope
mov
fld
push
cmp
jl
inc
jp
dec
outs
sti
xlat
xor
sub
mov
jo
retf
xchg
fadd
or
dec
push
push
jg
mov
dec
imul
pop
mov
cld
aad
jno
icebp
fwait
xor
xor
daa
add
dec
inc
and
fisttp
inc
sub
push
fld
out
push
mov
jge
movs
pop
into
lods
iret
adc
addr16
pop
jg
inc
(bad)
data16
pop
cmp
dec
lods
pop
adc
push
test
cmp
inc
mov
adc
sub
jge
pop
es
dec
cmps
push
pusha
stos
out
imul
pop
mov
push
sti
pop
mov
mov
pop
cmp
xor
xlat
out
push
pop
mov
js
sub
popa
inc
inc
sbb
rol
fucomp
out
ja
sub
mov
or
sbb
bnd
push
cmp
or
dec
mov
mov
mov
sbb
pushf
bound
div
xor
adc
jle
push
sbb
pop
call
jo
mov
ret
call
xor
aas
test
push
jnp
sbb
popa
sub
cmps
loopne
ss
ror
add
or
xchg
stos
jge
fist
xlat
or
xchg
add
mov
fnsave
adc
mov
mov
das
sbb
pop
or
imul
or
ror
dec
inc
xchg
out
sbb
or
push
add
and
add
xchg
mov
aas
addr16
je
es
clc
repnz
sbb
pop
pop
xchg
push
jbe
or
les
es
lods
rcl
jp
jl
cmps
paddb
mov
scas
xor
add
cmp
sbb
imul
xchg
test
es
jl
adc
dec
inc
push
(bad)
rcr
(bad)
inc
shr
pushf
out
mov
cdq
push
xor
aad
nop
mov
pop
inc
push
mov
push
ffreep
cmp
pusha
dec
repnz
push
mov
adc
arpl
outs
mov
ds
and
(bad)
xchg
adc
push
(bad)
mov
mov
je
dec
in
push
cmp
lea
cwde
sub
mov
cdq
mov
inc
and
mov
sbb
mov
mov
cmp
jmp
out
inc
xor
stc
(bad)
iret
mov
sub
sub
mov
or
and
jecxz
sti
mov
ret
pop
push
adc
adc
fimul
(bad)
xchg
test
adc
das
out
jge
mov
call
mov
retf
jb
daa
mov
in
mov
(bad)
mov
xor
xchg
data16
xlat
dec
test
hlt
out
mov
(bad)
icebp
inc
lods
xor
and
and
xchg
and
int3
and
bound
jmp
pop
xchg
cmps
mov
str
sub
retf
enter
jge
hlt
inc
pop
sub
sbb
pop
inc
mov
imul
shl
xchg
push
inc
pop
(bad)
push
adc
ror
mov
clc
scas
sub
push
sti
enter
fistp
icebp
xchg
pop
shl
pop
mov
jo
movs
loop
pop
dec
push
pop
inc
cmp
xor
sub
icebp
mov
push
dec
aad
xor
cs
xor
stos
iret
stc
int3
or
pop
das
mov
xchg
pop
cmp
add
out
daa
je
add
mov
sub
xor
sti
pushf
sub
xor
aad
push
sub
cmp
pop
cmp
pop
mov
dec
in
lock
jl
pop
sbb
xchg
xchg
dec
sub
out
or
out
xchg
or
push
mov
(bad)
jne
aam
sub
xor
test
shl
retf
aam
into
jne
jae
jge
and
imul
pop
jb
jmp
pop
fwait
scas
pop
(bad)
adc
mov
arpl
mov
pop
scas
jle
cmp
mov
pop
lods
inc
push
pmulhuw
dec
jns
jb
mov
mov
js
xlat
sub
psubsw
xor
fcom
jbe
sub
push
stos
jl
add
mov
xchg
cmp
cli
ficomp
xchg
fist
(bad)
sbb
jno
nop
call
xor
aas
inc
mov
js
(bad)
cmps
(bad)
adc
sbb
leave
cdq
and
or
mov
fwait
ins
fstp
bound
jno
imul
jmp
out
xlat
push
mov
cmp
retf
in
inc
int3
dec
push
ds
aad
clc
rcl
popf
cmp
and
and
sbb
sti
push
call
pop
pop
sahf
jmp
cli
les
xor
ins
pop
int3
sbb
and
or
frstor
iret
inc
adc
(bad)
std
jp
test
test
addr16
in
adc
jge
test
es
mov
leave
add
mov
or
cwde
or
and
pop
(bad)
test
call
xor
adc
cli
add
sbb
out
arpl
mov
adc
and
mov
je
shl
into
(bad)
xor
lahf
enter
xchg
je
sar
dec
lods
mov
pop
sub
ins
push
xchg
mov
adc
mov
fwait
or
push
dec
ja
jnp
mov
test
mov
addr16
int3
jecxz
sbb
and
sbb
cdq
icebp
mov
inc
fsub
iret
and
sub
jge
call
jge
lods
daa
ins
cmp
cld
into
into
mov
(bad)
mul
jl
mov
cmp
imul
add
jp
push
call
ror
js
stos
cdq
les
pop
pop
cs
retf
leave
adc
pusha
pop
cwde
ret
fbld
push
cdq
xor
or
mov
adc
adc
or
data16
ja
adc
ret
js
adc
mov
mov
push
jl
sbb
loope
aas
ds
mov
jb
dec
inc
rcl
ficomp
inc
call
xor
es
int3
gs
stc
jmp
je
icebp
push
xchg
sahf
rol
add
xchg
rol
aad
mov
ss
scas
inc
or
mov
(bad)
sar
xor
add
lahf
fld
mov
sar
aas
xchg
pop
xchg
xor
mov
fild
mov
sbb
nop
pop
ds
fwait
mov
sub
inc
and
hlt
or
jno
dec
xlat
xor
fs
sub
scas
jl
inc
or
out
ret
sbb
test
and
in
mov
inc
xor
fist
scas
pusha
and
int
or
push
mov
and
adc
nop
xor
mov
(bad)
out
xchg
retf
pop
push
jbe
jno
cld
or
dec
dec
inc
dec
dec
sti
stos
les
xchg
xor
dec
stc
sti
pop
xchg
pop
pop
jmp
mov
jns
pop
pop
sbb
movs
mov
xchg
sub
push
adc
lock
imul
cmps
icebp
call
sub
inc
call
popf
mov
out
xchg
adc
iret
mov
(bad)
mov
push
shr
inc
loop
jmp
mov
in
pop
jbe
imul
dec
pop
cwde
pusha
jb
dec
inc
and
stos
and
pop
sbb
cs
call
add
int
into
adc
jl
mov
bound
cdq
dec
inc
cmps
xchg
mov
int
outs
xor
and
mov
jmp
xchg
loope
pusha
repnz
bnd
push
sbb
add
(bad)
aad
sar
cdq
sbb
or
ds
adc
dec
leave
push
test
dec
sbb
cs
push
in
jne
dec
dec
xor
push
mov
(bad)
cmp
repz
mov
pop
repz
loope
cmp
outs
add
and
ins
jbe
retf
adc
stc
jmp
ret
push
push
cmp
jg
ficom
stos
loopne
push
dec
cmps
inc
jae
dec
aaa
mov
push
in
lods
xchg
(bad)
(bad)
cmp
call
cmp
mov
adc
mov
cmp
sar
fs
xor
sbb
out
repnz
pop
adc
inc
jns
clc
shl
xchg
loopne
jb
adc
pop
inc
sub
jle
ds
inc
aas
pop
xchg
mov
test
aam
cmp
int
clc
mov
or
xchg
addr16
xor
shl
sbb
add
outs
cdq
push
or
fisub
cmc
mov
add
jg
and
mov
sub
jge
test
leave
xlat
sti
test
push
ja
mov
inc
adc
fcomp
lea
mov
adc
or
mov
movzx
(bad)
jge
dec
mov
test
test
test
xchg
retf
adc
pusha
xchg
mov
popa
movs
and
imul
dec
addr16
loope
or
jp
or
jp
push
dec
outs
int3
mov
aas
or
add
push
(bad)
out
add
add
addr16
push
leave
movs
popa
cwde
enter
repnz
lods
fwait
cld
sub
js
xor
lock
and
xlat
mov
(bad)
sbb
in
icebp
jb
dec
inc
repz
in
call
stos
call
enter
cmc
jecxz
in
or
out
pop
cli
inc
xchg
shr
idiv
fisub
icebp
loop
or
pop
rcr
ret
shr
jmp
mov
shr
fistp
xchg
fnstcw
loop
adc
jmp
mov
jp
mov
push
ins
mov
rol
clc
mov
in
cmp
and
std
cld
aas
mov
sub
xor
sahf
jbe
into
(bad)
cmp
inc
adc
sti
and
and
inc
jmp
pop
xchg
push
test
call
ja
pop
aas
imul
dec
dec
xor
inc
pop
inc
test
dec
push
scas
adc
inc
fisttp
test
inc
xor
push
mov
and
or
addr16
das
ss
mov
mov
leave
dec
(bad)
push
cmp
mov
fcom
mov
imul
jno
cmps
xlat
ins
adc
jb
repz
das
movs
xchg
push
push
mov
retf
lds
jne
jne
or
fisub
xchg
push
fs
inc
icebp
xchg
mov
pushf
out
lahf
test
scas
mov
cmc
mov
sbb
inc
xor
sbb
dec
pusha
pusha
mov
jg
into
sub
xchg
cmps
iret
ficomp
and
sbb
mov
sub
mov
adc
and
dec
jle
das
pop
scas
scas
sub
jae
mov
movs
push
mov
arpl
jne
jge
in
repnz
bound
mov
or
nop
data16
call
jae
or
fld
push
sub
cmp
add
xchg
mov
jne
ds
out
mov
pop
fistp
ret
(bad)
ret
repz
out
dec
leave
retf
sbb
es
inc
inc
lods
popf
(bad)
push
data16
adc
fs
mov
jmp
loopne
mov
repnz
mov
pminub
jle
cmps
sub
mov
into
imul
movs
jns
push
adc
pushf
imul
in
movs
cmc
test
sub
test
cdq
fstp
inc
loopne
pop
popa
jecxz
stos
pop
pop
jne
je
loope
test
dec
pop
(bad)
test
jno
shl
or
mov
cli
in
cli
add
sbb
xchg
pop
xor
xor
pop
cs
jno
xchg
adc
mov
ds
mov
add
mov
pop
sub
jo
fisubr
xchg
cmc
inc
and
fs
repz
jb
xchg
xchg
outs
movs
push
mov
adc
jge
xchg
mov
push
and
cmp
(bad)
jle
mov
cld
call
xchg
cmp
daa
mov
jne
sub
mov
xlat
mov
xchg
inc
popf
cs
mov
loop
xor
pop
add
ret
mul
xor
jmp
adc
mov
inc
ss
lods
sub
dec
outs
and
arpl
fimul
dec
cwde
xchg
mov
sbb
dec
in
adc
add
pop
xor
sbb
in
mov
enter
icebp
retf
lahf
adc
(bad)
repz
retf
in
mov
lea
fst
movs
stos
adc
adc
je
mov
xchg
scas
jo
cmps
aaa
(bad)
ror
je
adc
neg
xor
mov
push
push
das
inc
retf
std
lds
adc
dec
repnz
clc
push
pop
jecxz
rcl
xchg
sar
pop
sub
pop
int
in
jecxz
mov
fisttp
dec
add
jns
ds
push
xor
int
and
dec
ins
cmp
out
ins
dec
es
ja
stos
(bad)
jmp
pusha
enter
sub
sbb
mov
jne
imul
ror
push
out
jle
mov
in
mov
je
stos
lods
nop
mov
and
es
xchg
fnsave
sub
lahf
mov
sahf
xor
repnz
jl
mov
add
and
ds
mov
lods
neg
mul
sbb
in
js
push
push
and
test
jle
sahf
into
xor
mov
jl
jg
xchg
cli
jbe
xor
out
push
adc
push
sub
retf
icebp
je
jb
ss
push
arpl
loope
iret
cmp
cmp
pop
jnp
movs
or
push
inc
mov
xlat
es
pop
iret
or
add
pop
jp
mov
retf
das
(bad)
jae
dec
in
inc
int
pop
mov
xchg
les
je
bound
or
inc
mov
mov
mov
sub
or
imul
mov
jle
jp
push
scas
sub
fs
(bad)
dec
sbb
jmp
pop
out
pop
ret
mov
daa
inc
cmp
fdiv
cdq
sbb
fstp
xchg
sbb
(bad)
imul
ror
movaps
dec
xchg
lds
fbstp
push
adc
inc
add
adc
into
mov
ror
ds
mov
dec
fsubr
dec
(bad)
arpl
mov
xchg
aaa
out
ja
lahf
cmp
pop
into
xchg
loopne
xor
add
dec
sahf
xor
int
pop
jge
dec
aaa
ret
cwde
cli
jg
pop
xchg
pop
sbb
add
(bad)
fstp
adc
mov
in
pop
jmp
mov
fcom
mov
inc
xchg
mov
jmp
loope
mov
cmp
jae
xlat
dec
arpl
mov
fwait
aad
xchg
push
dec
lock
addr16
sbb
xchg
daa
ja
mov
cmp
push
pop
push
or
cs
jle
inc
inc
xchg
cmps
test
imul
ins
int
(bad)
sub
dec
jae
sbb
sbb
in
inc
in
mov
dec
dec
pushf
lods
sbb
cmp
or
ins
lds
ss
sbb
test
cwde
sbb
data16
arpl
push
jae
xchg
js
cmp
add
data16
mov
push
dec
pop
cdq
and
fiadd
push
jle
pop
xlat
xchg
test
std
xchg
and
cmps
std
daa
(bad)
jecxz
add
fld
and
int3
inc
aaa
ret
and
pusha
bound
push
imul
mov
cwde
(bad)
push
add
dec
dec
add
mov
(bad)
stos
daa
lods
sub
mov
jg
aas
jmp
sub
or
sub
enter
pop
jmp
xor
outs
dec
inc
leave
scas
push
(bad)
xchg
jae
sub
add
lock
push
push
retf
loope
mov
test
push
pusha
jecxz
mov
xchg
push
inc
xchg
aas
out
clc
imul
pcmpeqb
inc
test
or
push
add
mov
adc
fdivrp
mov
mov
enter
adc
aaa
sbb
cs
out
adc
aam
mov
sbb
aas
sbb
int3
les
cli
shl
or
test
cli
in
mov
and
fld
inc
mov
cmp
scas
mov
neg
add
inc
fs
push
adc
(bad)
pop
inc
mov
(bad)
bound
lds
ffree
repnz
in
inc
test
push
adc
shl
es
in
retf
xor
sub
aam
mov
jmp
pop
loop
mov
jns
push
aas
push
rcr
jecxz
mov
xor
adc
or
add
dec
fucomp
pop
and
bound
cmp
mov
push
lahf
rcl
dec
mov
mov
inc
push
fldenv
cmc
jmp
fwait
out
jmp
and
push
mov
push
and
mov
push
es
mov
arpl
icebp
cdq
sbb
mov
cdq
jp
push
or
bound
call
add
cmc
and
pushf
into
cld
sub
loopne
and
ficom
mov
popf
mov
cs
pop
inc
xchg
arpl
into
xchg
add
adc
jne
jmp
das
stc
mul
jp
and
xchg
test
loopne
pop
jne
enter
popf
cld
rcr
sub
cmp
fcomi
imul
pushf
mul
or
inc
sti
dec
hlt
mov
mov
mov
maskmovq
imul
pop
xor
leave
pop
adc
fisubr
xor
xchg
mov
sbb
data16
inc
fld
pop
xor
rcr
arpl
mov
movs
jb
jne
pop
pop
mov
xchg
loop
sbb
lock
imul
imul
jmp
mov
jmp
add
shl
fcom
mov
jbe
repz
cmps
cmp
das
and
cmp
lea
popf
fistp
(bad)
repnz
lods
in
push
pop
push
jo
sub
jmp
das
sub
cs
xchg
mov
in
repz
neg
xchg
test
das
inc
shl
pop
adc
jg
xor
retf
cs
lea
rcr
or
jmp
in
mov
stos
sahf
cmp
ret
sbb
xchg
test
sahf
jp
es
lock
out
test
xchg
stos
push
cmp
dec
je
add
mov
aaa
jnp
mov
div
xchg
fisttp
stos
pop
aam
dec
(bad)
jle
adc
ins
mov
cmps
aaa
mov
and
jp
cld
cmp
jmp
jo
sti
mov
movs
call
pop
pop
xor
lods
pusha
cmp
mov
ror
xchg
les
out
xor
sub
(bad)
int
jno
fadd
cmp
cmp
pop
shr
pop
sub
addr16
(bad)
out
sub
sbb
dec
neg
inc
jp
push
std
jmp
and
call
dec
jmp
in
add
or
mov
enter
jmp
inc
push
xlat
mov
add
movs
fild
and
sub
test
ror
cs
repnz
cmps
jle
jae
lods
fiadd
push
and
mov
or
inc
cmp
mov
test
jp
es
sbb
test
mov
cmp
sar
inc
ds
xchg
inc
sbb
push
inc
dec
add
xchg
test
adc
(bad)
ins
ins
es
cmp
pop
les
inc
fdiv
and
retf
aas
jmp
push
sub
movs
inc
xor
out
mov
dec
xor
adc
mov
cwde
loope
and
imul
cmp
fsubr
cld
ficomp
popa
add
xor
xor
jbe
jmp
xor
inc
mov
or
xor
adc
pusha
inc
bound
cmp
dec
pop
cmp
std
out
sub
jnp
imul
xlat
pusha
xchg
xchg
(bad)
(bad)
outs
adc
in
xchg
imul
inc
push
in
hlt
cmc
(bad)
cmp
test
cmp
rol
jns
and
into
mov
xchg
adc
xchg
xchg
mov
xor
sbb
pop
dec
or
push
xlat
ins
cwde
mov
mov
or
aad
pushf
mov
in
rcr
jne
push
cmp
mov
cmp
or
mul
xor
imul
mov
call
xchg
mov
sbb
dec
dec
in
or
push
pop
sub
inc
mov
shl
xor
pop
sbb
sub
pop
stos
sbb
adc
int3
ins
jns
cld
add
aad
ds
cmc
imul
or
rol
fisub
xchg
fld
ja
jae
mov
shl
cwde
loope
loope
push
or
sbb
inc
adc
xchg
xchg
jnp
sub
int3
push
cmp
push
or
outs
fnsave
or
jp
icebp
icebp
mov
push
xchg
push
neg
leave
ins
fild
inc
cli
enter
arpl
xor
jns
lock
ret
jo
dec
arpl
adc
shl
dec
xor
mov
mov
ror
xchg
test
and
movs
sub
repnz
lea
push
dec
cmps
push
mov
cmp
test
imul
xchg
sub
pop
xchg
gs
push
lahf
pop
xor
sub
stos
mov
jge
and
je
mov
push
jbe
mov
stos
in
mov
sbb
les
fbld
data16
adc
das
shl
rcr
adc
out
ss
jbe
cmps
push
push
sub
or
mov
aaa
push
xchg
rep
in
ins
xchg
inc
jne
adc
ss
adc
push
sub
popa
adc
and
dec
mov
cmp
and
add
pop
lahf
push
loop
jae
shl
mov
outs
cvtdq2ps
test
jecxz
xchg
sub
cld
mov
add
jmp
adc
xor
addr16
(bad)
and
(bad)
scas
sbb
xchg
fs
addr16
rol
xor
bound
rcl
adc
add
sti
loopne
mov
xchg
outs
pop
xor
ret
mov
mov
cmps
shr
imul
pop
ret
jns
dec
int3
lea
or
sub
mov
cld
and
sahf
scas
inc
sub
xchg
jmp
in
xchg
jae
xchg
sub
bound
mov
in
std
out
fidivr
out
sti
xor
cmp
push
mov
inc
add
fiadd
sub
push
mov
push
sbb
outs
scas
mov
(bad)
cmp
xor
loope
outs
mov
fbstp
dec
str
lahf
push
jae
mov
xor
and
sbb
inc
(bad)
addr16
push
push
jnp
adc
sub
lock
mov
sahf
(bad)
push
iret
ret
ins
aam
jo
push
xchg
dec
lahf
loop
xor
and
out
pop
mov
or
call
(bad)
sbb
retf
xor
xor
cmp
scas
cmp
(bad)
push
adc
or
jp
sahf
mov
pop
jle
xchg
daa
cmp
test
xor
xor
rol
movs
ret
inc
js
add
add
retf
dec
push
out
fcom
addr16
xor
and
mov
adc
jb
je
xchg
adc
inc
je
shl
aaa
sub
rcr
jnp
push
jmp
call
sub
sahf
jae
mov
icebp
xchg
dec
sar
inc
add
adc
out
dec
shr
lock
xor
sub
popf
push
loope
pop
dec
or
stc
int3
ret
mov
pop
sbb
imul
fcomip
test
pop
loope
dec
inc
xchg
nop
or
jno
sbb
popa
push
sbb
or
sti
lahf
push
int
ret
jno
push
pop
(bad)
ja
sahf
inc
icebp
repz
sub
and
add
lods
je
test
sbb
addr16
stos
(bad)
push
jns
mov
rol
lods
cli
xor
aam
mov
xor
test
mov
xchg
dec
and
cwde
sbb
jns
xchg
in
outs
(bad)
jle
sbb
cmp
xchg
adc
pop
mov
imul
test
outs
fiadd
mov
add
jg
add
jns
adc
call
fstp
movs
push
xlat
and
pop
jmp
and
scas
mov
dec
pop
sub
aad
xor
inc
mov
(bad)
ins
cmp
pop
ja
xchg
aaa
in
xor
lock
and
xchg
in
or
sub
xchg
xor
mov
adc
mov
mov
mov
cld
mov
lods
pop
in
mov
loop
pop
push
cld
mov
xor
ja
mov
adc
push
loopne
in
cli
fwait
shl
push
mov
mov
xchg
iret
mov
test
jl
xchg
cwde
mov
ins
in
push
sbb
fldlg2
and
scas
(bad)
(bad)
jle
or
popa
out
(bad)
jle
mov
aas
jbe
mov
pop
push
sub
mov
shl
adc
adc
dec
xchg
imul
cli
sti
test
lock
int3
sbb
dec
or
pop
or
or
jae
jg
js
jecxz
jo
in
jmp
dec
movs
test
dec
int
mov
repnz
push
bound
push
popa
sbb
xchg
xchg
cmc
xor
xchg
jno
fmul
xchg
mov
jae
and
dec
movs
dec
and
jnp
pop
cmp
cmp
into
stos
and
lock
sti
push
push
mov
(bad)
and
outs
inc
ret
cld
mov
push
arpl
in
test
push
mov
push
sub
jle
aad
loope
mov
mul
jne
frstor
popa
mov
xchg
lahf
push
and
jnp
jmp
stc
cmp
jb
sahf
pop
fmul
(bad)
mov
cmps
enter
adc
ja
fistp
int
sub
rol
daa
je
xlat
cmps
loopne
leave
or
repnz
pushf
retf
sub
ret
in
stos
fs
jg
stos
jge
xor
jns
mov
int
or
mov
sar
sub
(bad)
push
mov
out
dec
lods
mov
jecxz
leave
sub
fimul
(bad)
sub
cmp
adc
inc
stos
mov
adc
dec
or
lock
dec
(bad)
(bad)
xor
rcr
mov
dec
popf
cmps
and
xchg
(bad)
(bad)
mov
mov
scas
data16
fidiv
pop
imul
mov
push
je
jbe
jo
and
outs
fistp
int
push
shr
mov
fistp
in
fdivr
dec
gs
lods
pusha
jne
mov
sbb
lea
inc
push
cli
jno
in
mov
or
mov
mov
jns
and
enter
or
mov
and
mov
fdivr
aam
inc
cwde
add
mov
call
sar
stos
hlt
aam
(bad)
or
push
mov
add
push
retf
mov
cmp
outs
aad
aam
or
sub
sub
or
mov
dec
pushf
sbb
xchg
mov
cmp
dec
pop
dec
jno
dec
les
or
in
push
sub
pop
push
jl
enter
outs
(bad)
and
inc
dec
push
add
mov
in
add
mov
mov
pop
shl
push
ins
sbb
(bad)
loop
push
fisttp
and
mov
inc
adc
push
ret
xchg
or
into
xor
(bad)
movs
dec
loop
cld
sub
xor
ins
in
cmps
out
mov
mov
push
(bad)
movs
(bad)
jle
leave
adc
(bad)
fwait
pusha
xchg
cmp
cmp
loopne
pop
adc
repnz
stos
jne
mov
outs
push
daa
scas
stos
inc
test
inc
or
dec
mov
sbb
add
dec
xchg
(bad)
push
cmp
outs
jo
test
in
push
movs
xlat
and
mov
mov
test
loope
repnz
jbe
imul
loop
dec
frstor
ds
test
je
cld
and
dec
lds
out
sub
ret
in
movs
jae
popa
push
pop
mov
sti
inc
aaa
(bad)
adc
xor
cli
mov
pop
push
bswap
int3
repz
cdq
(bad)
cwde
mov
jl
scas
outs
cmp
pop
mov
jl
or
mov
int
fisttp
into
das
xor
aam
hlt
out
stos
gs
push
call
(bad)
xor
inc
(bad)
sar
icebp
cs
and
sbb
iret
ret
adc
int3
out
push
mov
pop
and
aaa
pop
test
fcmove
jp
in
fidiv
pop
push
out
dec
mov
test
adc
std
fistp
push
mov
jmp
(bad)
mov
mov
sbb
xor
cld
popf
and
inc
dec
sub
push
jmp
add
pop
mov
adc
div
mov
add
ret
pop
shl
mov
jmp
jmp
sbb
das
and
pop
psrlq
mov
adc
xchg
xchg
mov
pop
jmp
jle
shr
sbb
jno
xor
pop
lahf
mov
xor
(bad)
rol
add
mov
cmp
std
iret
add
or
mov
std
sbb
or
stc
loop
stos
push
push
repz
pusha
mov
mov
mov
nop
and
jle
mov
sub
jo
movs
ins
add
fwait
sbb
push
ror
sbb
imul
dec
pop
int
push
sbb
dec
inc
pop
in
jp
ss
or
push
mov
shl
jmp
pop
cwde
(bad)
leave
mov
mov
not
jo
add
mov
jb
cli
adc
push
mov
nop
loop
xor
and
mov
movs
das
cmp
clc
add
(bad)
jmp
arpl
scas
bound
shl
mov
jb
das
lahf
(bad)
(bad)
adc
mov
mov
push
cli
mov
sbb
push
fwait
mov
cmp
xchg
movs
fadd
ret
xchg
cmps
cmp
ss
pop
imul
dec
retf
add
retf
jno
mov
pop
js
je
sbb
mov
xor
in
xor
rol
cmps
jnp
lods
jg
in
(bad)
int
push
push
aas
ret
movs
ret
in
mov
out
add
into
in
adc
stos
test
fcomp
cmp
aaa
jne
mov
sbb
cmp
mov
cmp
fld
adc
adc
xchg
aaa
(bad)
cli
xchg
adc
mov
pop
out
or
xor
aad
(bad)
pop
sbb
stos
daa
in
push
fidivr
daa
pop
mov
jb
push
hlt
adc
jnp
dec
seta
xor
xor
(bad)
pusha
out
cmp
and
in
add
xor
(bad)
icebp
sbb
mov
adc
jnp
sti
inc
xchg
push
sub
into
push
retf
adc
jns
ins
inc
sub
xor
ror
icebp
xor
xchg
inc
sbb
pop
fidiv
imul
(bad)
fwait
aam
adc
add
jno
aas
movs
test
push
mov
mov
add
fs
sub
inc
int3
shl
push
push
js
shl
adc
bound
or
or
pop
shl
ins
xchg
les
loope
xlat
mov
pop
mov
loope
ins
pop
dec
mov
(bad)
mov
jae
fwait
mov
std
loope
adc
das
lea
adc
sbb
or
cmps
popa
lods
xlat
inc
or
cwde
dec
movs
mov
lods
shr
in
and
ret
pop
push
jle
sahf
mov
xchg
pop
jne
push
js
bswap
ret
push
fist
(bad)
daa
sbb
call
out
in
mov
inc
jp
pop
mov
push
dec
push
jns
and
jl
inc
(bad)
adc
lahf
sti
mov
imul
mov
sub
test
inc
pop
test
in
xor
xchg
repz
mov
out
or
sbb
sbb
jmp
mov
push
cmp
in
inc
movs
dec
push
mov
imul
shl
lahf
jg
xchg
movaps
cmc
mov
push
in
cmp
xchg
test
xchg
and
mov
mov
or
jbe
adc
xor
adc
push
xchg
in
loopne
jns
cld
sub
pop
xor
(bad)
push
bound
aas
jo
sbb
push
pushf
loop
sahf
fiadd
sar
(bad)
and
sbb
push
je
cmp
mov
loopne
lods
mov
(bad)
xor
and
bound
xchg
jg
add
or
add
sbb
and
jp
push
lock
out
sbb
mov
imul
xchg
aam
xchg
fidiv
xchg
mov
xor
daa
sbb
inc
les
popa
arpl
mov
pop
hlt
sub
push
push
dec
mov
stos
mov
ds
lea
sub
xchg
xor
ret
cmps
push
sti
cdq
fwait
dec
lock
(bad)
dec
scas
pop
pop
jmp
mov
sahf
mov
outs
dec
add
paddq
or
push
int
ins
lds
test
ss
imul
(bad)
bound
mov
mov
add
inc
pop
push
xchg
fxch
fs
mov
mov
push
jge
add
outs
scas
xchg
push
fldenv
gs
mov
and
mov
inc
or
or
fild
adc
xor
or
or
xlat
push
push
and
inc
cli
adc
jecxz
push
std
push
mov
sub
dec
dec
mov
bound
cmps
repz
arpl
aam
retf
push
jo
mov
pop
repnz
test
adc
push
popa
sub
adc
hlt
xchg
sub
push
adc
(bad)
out
hlt
repnz
(bad)
lods
inc
in
dec
(bad)
retf
retf
jb
stos
or
shl
mov
lds
arpl
add
loopne
jno
sub
stos
ins
mov
jo
xchg
inc
shl
xor
sbb
push
loop
imul
jmp
retf
test
scas
into
call
in
outs
imul
int
push
fwait
add
lods
inc
mov
je
iret
xor
repnz
adc
pop
inc
and
sbb
sbb
int3
aad
es
xor
adc
jmp
push
jg
scas
jmp
cwde
push
pop
pop
mov
push
inc
lds
ror
retf
imul
mov
je
dec
inc
inc
fld
call
xchg
mov
xchg
das
movs
cmc
lock
popf
xchg
ins
int3
push
jb
adc
dec
(bad)
std
sbb
cmp
add
pop
rcl
in
adc
add
dec
xlat
inc
jle
ins
mov
pop
jp
sbb
add
movs
inc
sub
xchg
pop
push
inc
push
les
push
push
stos
xchg
sub
imul
iret
mov
push
pop
repz
icebp
fcmovnb
movs
mov
mov
mov
xchg
jmp
movs
pop
adc
adc
aaa
ins
movs
bound
sbb
stos
mov
and
std
fild
fld
or
sub
stos
not
add
stos
sub
enter
xchg
push
pop
push
mov
xchg
call
jae
stos
jnp
push
mul
sbb
push
nop
pop
cwde
xchg
lds
daa
ffree
sbb
(bad)
bnd
vpsraw
(bad)
jns
mov
mov
jge
inc
repnz
sub
jno
cs
retf
push
into
in
adc
cld
aas
and
sub
repz
in
fstp
not
test
mov
jmp
popf
outs
xor
dec
or
xlat
push
pop
or
push
repz
int
xlat
jmp
cli
das
sbb
ret
scas
pop
cmp
sbb
bound
loop
mov
gs
fisub
cmps
sub
in
ret
pushf
test
dec
dec
dec
and
stc
mov
dec
movs
repnz
mov
xor
mov
sub
ja
jle
sbb
jmp
inc
xchg
sub
pop
sbb
clc
xchg
popf
pop
ins
jp
div
or
loop
iret
sub
mov
cli
int
or
cwde
shr
dec
sub
mov
fstp
mov
ja
xor
cwde
mov
inc
iret
push
dec
fsin
in
bound
adc
(bad)
jmp
shr
mov
stos
inc
movs
push
mov
enter
mov
jmp
or
xlat
dec
rol
dec
or
test
sar
mov
imul
std
cdq
or
test
test
dec
lahf
inc
outs
lods
and
int
test
lods
int
imul
xor
stos
aaa
(bad)
or
js
fcom
bound
int
adc
and
xor
add
dec
xchg
(bad)
and
pop
and
push
or
jb
or
shr
cwde
mov
(bad)
mov
add
fdivr
jae
xchg
sub
push
dec
rol
std
setnp
sbb
adc
cli
(bad)
(bad)
std
cld
xor
bound
adc
mov
cmp
mov
pushf
fmul
sub
fdivr
sub
hlt
(bad)
aaa
fnstenv
inc
js
nop
enter
ss
xchg
push
adc
push
mov
out
(bad)
xchg
call
scas
clc
in
pop
cld
jmp
push
je
(bad)
shl
push
mov
scas
inc
jecxz
mov
jp
dec
stos
xor
enter
outs
loopne
cmp
aas
inc
mov
nop
mov
add
add
stc
pop
cdq
rcr
mov
fistp
adc
sbb
lock
pop
mov
lods
pop
jno
ins
popf
mov
sbb
cmp
dec
iret
leave
mov
xchg
sub
mov
scas
mov
sbb
pop
inc
cmp
pop
xor
sub
sar
call
mov
pop
gs
mov
(bad)
pop
add
jmp
push
or
lea
sub
cmps
mov
scas
xchg
pop
dec
mov
add
sbb
push
adc
mov
fstp
cld
outs
jns
(bad)
into
bnd
sbb
push
dec
mov
or
push
retf
add
push
dec
sahf
(bad)
adc
scas
mov
sti
jmp
iret
cld
shl
xlat
fs
xchg
es
scas
scas
push
sti
mov
scas
stc
and
xchg
xor
adc
lock
mov
or
iret
jge
les
mul
icebp
into
mov
rcl
mov
test
mov
inc
sbb
stos
dec
add
into
ret
(bad)
sbb
int
(bad)
sbb
retf
cmp
mov
xchg
jae
dec
mov
push
ds
lds
out
rol
sbb
lea
movs
adc
or
inc
inc
inc
pusha
add
stos
sbb
neg
mov
dec
pop
jmp
outs
ja
mov
xchg
shl
mov
mov
cdq
add
sub
inc
popf
cmp
jmp
call
cmp
cmp
pop
ins
aas
sbb
mov
push
mov
pop
push
mov
mov
es
js
mov
loop
mov
hlt
lods
sbb
adc
sbb
sbb
(bad)
ror
scas
(bad)
das
xchg
sbb
js
mov
sub
xor
mov
ret
mov
xor
jp
or
mov
mov
fcomp
shl
call
ror
push
ret
pop
outs
test
loopne
scas
jo
adc
into
xor
mov
jo
inc
sbb
sub
jge
mov
mov
pop
sti
mov
(bad)
js
add
jg
pop
cmp
dec
add
call
mov
nop
inc
sub
mov
sbb
jecxz
mov
jo
jb
ins
sub
push
punpckhbw
rcl
inc
jg
and
sbb
or
and
popf
(bad)
dec
pusha
je
mov
pop
and
repnz
mov
or
sub
adc
jl
push
xchg
hlt
arpl
pop
(bad)
stos
out
sbb
xchg
out
outs
xchg
sub
lods
in
mov
jle
push
adc
mov
adc
add
outs
ret
mov
sahf
fild
ret
mov
adc
(bad)
int3
mov
cmp
push
jmp
ja
shl
(bad)
int
inc
movs
jge
mov
stos
jbe
fwait
adc
imul
test
fmul
fld
mov
jl
pop
sahf
(bad)
aad
inc
push
push
scas
push
lods
jne
fsub
ret
lahf
push
xor
cld
inc
mov
loopne
push
or
cmp
push
dec
jnp
shl
ins
mov
mov
stc
in
and
call
in
aad
add
arpl
jb
or
fist
loopne
retf
xor
repz
pop
sti
fst
lock
pop
(bad)
scas
or
test
and
cmps
mov
iret
mov
arpl
xchg
or
jge
push
ds
sbb
ret
int3
mov
push
cdq
xlat
pop
and
and
cmovge
dec
sub
sbb
fwait
push
mov
cmp
retf
nop
stos
or
and
add
pushf
ins
(bad)
jmp
out
xor
adc
test
rcr
mov
mov
sub
cli
mov
mov
out
sub
sub
mov
jbe
cld
test
dec
mov
sbb
or
arpl
sub
in
leave
dec
adc
rcl
and
fnstsw
leave
ficom
add
jno
push
mov
mov
dec
mov
aad
xchg
out
div
les
movups
cwde
push
fdiv
inc
add
sub
aaa
sub
adc
xchg
adc
outs
sub
clc
inc
mov
adc
es
call
mov
pushf
xlat
xchg
aam
jns
sub
dec
cmps
jb
out
sub
mov
sbb
adc
outs
jno
sub
scas
pop
sbb
repnz
out
scas
mov
mov
fs
das
ss
dec
lahf
test
movs
xchg
jp
call
retf
lea
push
leave
inc
xchg
jne
cmps
cdq
shl
stos
adc
pop
test
pop
mov
push
clc
xchg
cmp
movs
(bad)
cmps
adc
inc
or
xor
xor
add
aas
into
push
mov
cwde
jg
push
rol
shl
adc
jne
cld
adc
inc
pop
imul
and
retf
int3
aad
aas
xor
push
movs
daa
adc
add
mov
bound
sub
mov
lods
mov
(bad)
push
and
pop
shl
loopne
adc
retf
fwait
and
mov
inc
scas
shl
int3
pop
nop
fild
cmp
into
(bad)
cdq
xchg
mov
ror
daa
mov
out
fst
movs
mov
and
sbb
push
sub
neg
loope
mov
push
clc
aaa
push
push
cmp
pop
not
stos
mov
mov
in
xchg
out
xchg
mov
lods
pop
stos
rcl
retf
les
mov
in
mov
xor
push
sub
add
fild
mov
or
adc
cmp
xchg
mov
xor
adc
out
jle
cli
jnp
cdq
adc
(bad)
sub
adc
xor
cmp
cwde
ds
sub
movs
or
inc
push
daa
das
mul
xlat
xor
mov
mov
cli
mov
xor
push
mov
(bad)
lock
gs
es
jg
jae
dec
ret
add
neg
adc
in
or
adc
ret
mov
in
imul
or
adc
push
fnsave
add
arpl
add
pop
je
pop
or
jb
ror
aad
cld
xlat
and
xor
add
cmp
add
fnstenv
test
inc
loop
jne
pushf
xlat
sbb
icebp
mov
adc
call
das
and
popf
(bad)
test
push
cmp
shl
shl
mov
ds
in
push
cmps
dec
dec
ds
(bad)
xchg
xor
xchg
jle
es
dec
inc
jno
jl
in
(bad)
loop
adc
adc
scas
iret
sti
push
leave
cmps
fcom
shl
and
sti
cmp
arpl
pop
mov
(bad)
push
cmp
dec
pop
adc
cld
jp
scas
xchg
pop
test
rep
ja
pop
push
mov
out
cmps
adc
push
jne
jcxz
inc
pop
popf
xor
dec
adc
out
mov
adc
adc
(bad)
sbb
mov
mov
and
mov
xchg
dec
sbb
daa
aas
mov
mov
and
pop
push
std
mov
stos
add
mov
ds
inc
xor
xor
movs
sub
and
mov
retf
enter
mov
test
loope
pop
cmp
loopne
push
fwait
in
in
out
dec
aas
push
sub
icebp
mov
mov
les
jmp
push
or
lea
xchg
add
ins
sub
sbb
jmp
daa
mov
mov
fwait
sbb
sub
out
sbb
sub
push
sub
ret
loope
ja
das
mov
(bad)
addr16
popa
sti
jp
int
inc
retf
xor
outs
mov
das
popf
lds
sub
sub
dec
sbb
adc
in
imul
lock
outs
retf
nop
fwait
cld
pop
jl
test
add
fst
adc
movs
adc
mov
pop
cmp
mov
xor
sbb
cmp
test
mov
mov
jb
in
jp
int3
(bad)
sub
hlt
sub
fisub
jg
jns
aad
test
mov
inc
ret
shl
lods
int
int3
stc
mov
(bad)
mov
jb
dec
addr16
push
sbb
pushf
retf
mov
jb
adc
hlt
add
test
dec
mov
xor
stos
jmp
ret
ja
ins
test
xor
mov
mov
lea
mov
bound
xor
in
xor
gs
push
push
cwde
imul
push
mov
minps
push
iret
stos
push
dec
mov
xchg
ret
pop
lea
adc
cld
lahf
or
mov
std
mov
jmp
xor
xlat
addr16
lods
stos
sbb
sub
cmp
add
(bad)
std
in
addr16
stos
hlt
popa
fs
mov
mov
or
mov
dec
push
stos
mov
in
cmps
ffree
push
pop
mov
jl
call
imul
add
jmp
xchg
dec
pop
imul
mov
sbb
lods
xor
sbb
das
xor
xor
(bad)
mov
or
clc
imul
or
adc
jbe
add
xchg
test
movs
push
inc
dec
inc
loope
push
fnsave
dec
sub
inc
fsubr
mov
aam
and
call
mov
ins
pushf
or
push
xchg
and
and
mov
adc
add
fsubr
and
fimul
pop
push
mov
fsub
mov
ficom
cmp
lock
xchg
std
pop
sbb
ds
push
adc
out
add
fnstsw
repz
dec
add
cmp
sahf
mov
cmc
adc
pop
cmp
mov
div
xlat
push
or
retf
add
fdiv
inc
or
xchg
cwde
xchg
and
jg
fbstp
xor
or
outs
lea
jmp
dec
cmp
add
sbb
xchg
and
xor
arpl
js
mov
jbe
pop
call
jno
xchg
repz
dec
cwde
push
fcom
pop
(bad)
jmp
leave
ds
cdq
inc
cmp
add
pop
inc
hlt
mov
mov
not
ret
add
adc
movs
jmp
mov
cmps
dec
cmp
mov
mov
es
daa
mov
scas
pop
mov
cmp
or
adc
dec
fbld
xchg
push
jmp
shr
mov
pushf
sar
ins
(bad)
in
xor
not
pop
call
adc
inc
pop
out
lea
xchg
mov
xor
leave
jo
push
sub
push
movs
(bad)
retf
jbe
mov
aas
xchg
jnp
mov
inc
pop
jmp
sub
jmp
dec
xor
and
(bad)
(bad)
call
inc
outs
fidivr
ins
out
push
pop
push
xchg
fimul
mov
pop
push
ds
(bad)
rol
outs
call
sar
cwde
int3
in
iret
cmps
aad
mov
jne
mov
dec
retf
xor
sar
lahf
outs
out
mov
stc
cmp
in
jmp
stos
push
inc
mov
or
inc
push
int3
cmp
lock
dec
jl
cmp
call
retf
add
test
dec
sub
shr
dec
push
(bad)
mov
movs
ss
add
sbb
xor
jmp
ss
cld
adc
add
mov
rcr
leave
call
test
es
popa
xchg
aas
fiadd
pop
xor
outs
pop
test
mov
sbb
xchg
adc
mov
sub
enter
jnp
jmp
(bad)
mov
mov
mov
lds
std
es
out
jecxz
outs
inc
int
pop
xchg
mov
push
jecxz
adc
icebp
imul
mov
popa
cmp
into
pusha
sbb
or
pop
pop
cmp
retf
test
mov
xor
repnz
xor
call
popf
adc
outs
mov
jae
out
sbb
aad
mov
aad
push
sub
sahf
mul
data16
sub
out
outs
mov
sbb
data16
xchg
movs
cmp
or
mov
test
or
mov
sbb
xchg
(bad)
out
xor
out
lahf
xor
mov
xchg
outs
int
jmp
out
inc
addr16
imul
(bad)
cmp
ficom
div
std
mov
jno
rcl
mov
fs
sbb
ror
pop
xlat
and
(bad)
mov
cmp
mov
inc
pop
dec
fs
popf
pop
mov
lea
jns
clc
lahf
outs
clc
pop
test
call
lods
cmp
cs
adc
ds
cmps
mov
imul
adc
pop
repz
mov
add
inc
out
and
leave
mov
enter
jo
pop
gs
cmps
cmps
mov
mov
pop
pop
adc
add
aam
pop
add
dec
pop
sbb
or
retf
sbb
retf
fadd
stos
scas
xor
std
(bad)
cdq
shl
cdq
(bad)
pop
test
adc
stos
aam
int3
sub
mov
jno
iret
push
sahf
cmps
and
loop
mov
repnz
jmp
repz
jbe
sbb
ss
mov
push
or
shr
pop
imul
push
pop
jo
int3
stos
(bad)
data16
pop
sti
test
sbb
inc
sbb
and
aaa
call
adc
std
or
cmp
das
inc
pop
ins
mov
push
stos
mov
add
sbb
stos
aas
out
test
push
out
pusha
movs
cmp
pop
aad
adc
dec
popf
pusha
scas
cmps
mov
test
cs
jne
fidiv
dec
movs
mov
and
jge
mov
fnstenv
aad
inc
cmp
imul
int
sub
dec
and
add
ss
or
mov
das
add
inc
(bad)
or
fbstp
inc
sbb
js
xchg
jb
push
xor
pop
and
das
aad
bound
call
fisub
inc
mov
mov
call
inc
xchg
into
mov
sub
(bad)
xor
frndint
loope
add
pop
xchg
cwde
fwait
popf
scas
icebp
cmp
aas
popa
pop
jmp
jb
out
fild
sbb
mov
ret
hlt
and
enter
nop
daa
stc
xchg
imul
or
inc
and
(bad)
repz
adc
push
add
and
inc
imul
lahf
addr16
ret
and
dec
mov
dec
mov
dec
xlat
push
xchg
aam
out
xchg
mov
xchg
lock
stos
pushf
xchg
hlt
sbb
or
in
push
retf
loop
ret
mov
dec
ins
sbb
and
cmc
xlat
cmc
pusha
gs
movs
dec
cmps
or
adc
imul
inc
ret
mov
pop
sub
sub
xor
mov
mov
std
sbb
dec
fbld
fldenv
or
jge
sbb
jnp
imul
mov
jge
ret
xchg
bound
call
xor
ja
xor
adc
cmp
in
mov
mov
int
pop
call
push
xchg
sbb
cli
or
or
loopne
je
jle
mov
pop
jecxz
mov
in
pusha
cwde
pop
fadd
mov
jle
idiv
mov
mov
repnz
dec
iret
int
sti
data16
data16
rol
sub
mov
ret
inc
std
inc
add
mov
ror
retf
mov
xor
mov
xchg
leave
repz
sbb
push
jb
shl
xlat
inc
cmp
das
mov
mov
retf
rcr
push
xor
push
or
dec
adc
lock
pop
mov
cmp
das
cmps
jo
xchg
(bad)
(bad)
dec
int
or
cmps
in
xchg
fstp
fmul
or
adc
repz
dec
add
sar
lods
leave
xchg
mov
test
ret
jle
push
push
sbb
and
pushf
mov
shl
pop
jecxz
inc
movs
and
mov
xor
xor
(bad)
push
push
sub
cmovns
stos
mov
in
pop
lock
dec
rol
jg
int3
scas
clc
hlt
xchg
push
push
cmps
imul
shr
call
call
and
clc
dec
fldcw
adc
and
icebp
or
and
xchg
sti
sti
inc
xchg
sub
pop
test
or
push
cmp
outs
cmp
hlt
inc
ds
cmp
or
bound
imul
loop
shl
cmps
cmc
and
sbb
cmps
pop
cs
xchg
ret
fs
mov
xlat
push
cmp
mov
push
sbb
mov
fwait
sub
in
sub
or
jb
cmps
dec
scas
mov
jecxz
mov
leave
jnp
(bad)
jo
sbb
ins
cmp
mov
imul
lds
(bad)
(bad)
xchg
movs
adc
mov
cmp
mov
mov
adc
dec
add
test
int
icebp
popa
fidiv
dec
jmp
sub
adc
xorps
in
add
cs
int
adc
loope
dec
out
out
cmp
inc
dec
dec
jno
xor
jb
test
rcr
sub
jne
and
xor
jb
pushf
inc
pop
push
push
mov
add
jecxz
enter
inc
xor
jl
mov
test
cmp
mov
inc
enter
les
cs
cs
daa
cmp
js
in
dec
leave
mov
push
sub
(bad)
cmp
test
ins
fdivr
cmp
lds
int3
add
add
mov
and
inc
pop
loope
fisubr
mov
fisttp
je
cmp
es
dec
sub
xor
cmp
push
mov
or
push
and
sar
mov
leave
fnstsw
mov
mov
and
aad
add
sub
loop
or
into
and
pop
and
adc
leave
mov
loopne
add
rcr
leave
cmps
mov
add
xchg
pop
mov
add
pop
xchg
add
icebp
sub
out
lea
jo
push
pop
inc
popa
repz
lods
arpl
test
inc
outs
addr16
add
iret
lods
dec
adc
nop
loop
in
lods
sub
call
outs
sub
retf
int3
mov
mov
stos
in
ret
daa
mov
add
inc
addr16
aad
aad
int
jns
pavgw
xor
or
inc
imul
ds
mov
mov
pop
cmps
fdiv
mov
sbb
cmps
add
and
or
clc
clc
or
mov
mov
sub
out
pop
lods
int
addr16
mov
sub
mov
and
inc
mov
mov
push
in
ins
sti
js
pop
dec
push
cmps
sub
popa
xchg
jo
mov
pushf
push
rcl
std
movs
xor
cmps
mov
dec
xor
mov
mov
and
xor
mov
pop
xlat
sub
not
retf
cmp
ja
fsub
lods
in
in
add
xor
icebp
mov
add
sbb
jl
pushf
dec
stos
pusha
(bad)
push
mov
rol
xlat
jnp
mov
mov
movs
mov
cwde
sbb
loop
ins
addr16
loop
lods
leave
jmp
aam
cs
fimul
in
ins
fimul
mov
in
fs
(bad)
sub
fcom
add
push
je
xchg
xchg
push
push
fidivr
test
lock
mov
call
jecxz
andps
aam
jmp
ror
(bad)
sar
jmp
or
shl
lahf
jno
mov
cli
out
stos
xchg
push
cwde
jb
shr
xor
fmulp
adc
ss
or
das
sbb
push
or
(bad)
stc
cli
mov
out
sub
enter
test
push
pop
mov
pop
adc
mov
arpl
cmp
dec
ret
mov
sub
fs
stos
sahf
and
sahf
js
ss
jge
xlat
cmps
cmp
mov
adc
hlt
dec
into
mov
push
xor
inc
cdq
shl
xor
jbe
sub
push
call
rol
js
out
and
add
sar
stos
cmp
adc
adc
inc
mov
lea
jo
dec
aas
test
clc
pop
mov
retf
pop
lods
sub
pop
(bad)
fdivp
adc
pusha
in
js
inc
cs
fisttp
int3
push
loope
rcl
(bad)
xchg
and
out
daa
push
sub
mov
sbb
mov
pop
adc
shl
sbb
xor
out
add
jl
jmp
int3
xchg
jmp
jmp
inc
les
icebp
sti
push
xor
out
leave
ret
out
sti
stos
lea
pop
ss
xchg
sbb
cmp
cmc
cmps
jns
neg
add
retf
cli
ds
loopne
mov
pop
xchg
idiv
arpl
scas
int3
int
push
xor
xchg
add
dec
jecxz
test
stc
add
sub
(bad)
call
cmp
add
xchg
addr16
jecxz
repz
sahf
push
je
pop
jnp
in
stos
fsubrp
add
lock
xor
cmc
or
mov
lock
js
jns
jmp
xlat
pop
(bad)
jb
sbb
cmp
cmp
mov
xchg
mov
xchg
jl
ins
adc
stos
ins
retf
shr
or
outs
xor
jmp
pop
ds
pop
fwait
scas
test
adc
cld
(bad)
jbe
mov
mov
imul
inc
sti
outs
mov
pop
mov
pop
scas
cld
test
sbb
out
cmp
leave
mov
fadd
aam
cwde
jecxz
popf
ss
jmp
mov
cmp
fidivr
pusha
fdivr
enter
inc
jg
mov
retf
push
cmps
xor
fst
push
push
sbb
inc
pop
dec
neg
add
test
stos
sbb
retf
pusha
mov
into
sahf
pop
push
pop
sbb
mov
cdq
lods
test
mov
sti
jge
adc
shl
ins
cmp
gs
or
cmps
inc
retf
gs
pop
cmps
add
sub
dec
pop
aam
cli
les
push
call
cwde
jmp
xchg
sub
xchg
rol
adc
pop
and
mov
mov
mov
jae
ja
jo
je
bound
imul
dec
adc
mov
lds
out
daa
test
fucomp
and
dec
cwde
or
aas
ficomp
scas
ror
jmp
(bad)
cmc
mov
dec
and
and
int3
inc
inc
sub
sub
pop
sbb
out
enter
xor
hlt
shl
imul
inc
dec
or
cmp
fcom
repnz
cs
jb
ficom
test
mov
bound
cmp
jbe
cmp
add
cdq
ins
jmp
mov
ins
sar
mul
pop
jae
jno
mov
stc
dec
or
jmp
sub
lock
add
push
push
sahf
inc
std
fild
cmp
test
dec
sbb
jmp
cmc
or
(bad)
ror
hlt
fwait
xor
(bad)
js
xchg
imul
jge
repz
in
aam
pop
popa
enter
and
fucom
xchg
xchg
in
and
xchg
fisub
sub
mov
sti
dec
sti
les
cmp
fucomp
mov
cli
(bad)
mov
mov
sub
mov
fild
jl
mov
mov
stc
and
add
dec
and
inc
and
or
out
cmp
retf
pop
mov
les
push
pop
push
xchg
inc
cmps
sub
cmps
jno
adc
int3
and
mov
sub
inc
into
jnp
mov
xor
in
mov
jb
jge
jge
(bad)
push
arpl
or
int
dec
or
jecxz
aas
xor
adc
mov
sti
lods
pop
scas
add
arpl
pusha
rcr
std
mov
lea
and
xchg
xchg
add
jb
popf
dec
out
sub
daa
jecxz
leave
inc
outs
ins
dec
dec
lock
fs
sub
push
pop
repz
push
push
ret
test
leave
sub
xor
jl
xchg
in
sub
(bad)
add
mov
jmp
jns
(bad)
ffree
jg
xchg
mov
sahf
push
xchg
cmc
sbb
lods
imul
fucomip
bound
aam
jns
mov
jmp
jnp
xor
(bad)
xchg
call
mov
ss
(bad)
scas
cld
shl
scas
fldenv
xchg
les
push
mov
and
loope
add
lods
and
sub
test
mov
xchg
fiadd
mov
and
xchg
les
push
(bad)
mov
mov
es
repz
ds
out
cmp
cs
add
push
and
movd
add
xor
int3
lods
push
ins
lods
loope
dec
sahf
aad
jge
dec
test
mov
stc
mov
aam
sahf
sub
cs
add
popf
cdq
pop
adc
sbb
loop
xchg
mov
jg
jecxz
pop
add
fcomp
xor
(bad)
jmp
retf
das
sub
mov
rol
xor
idiv
xor
xor
ret
leave
jge
movs
sbb
ja
out
push
mov
sbb
scas
rcr
nop
repz
dec
or
push
dec
dec
cmp
xor
mov
push
jp
adc
jo
add
sub
inc
out
or
pushf
fs
fcom
inc
(bad)
push
je
(bad)
cdq
cmp
mov
loopne
mov
jmp
idiv
and
sub
aas
sar
cmp
xchg
push
(bad)
cld
in
in
add
inc
push
into
in
pop
enter
xchg
dec
mov
add
xchg
sub
sub
retfw
mov
sub
push
inc
xorps
push
ret
sub
pop
add
sti
aam
mov
dec
cmp
mov
(bad)
fadd
jmp
cmp
push
pop
or
test
in
and
stos
pop
sbb
xlat
dec
test
aaa
adc
sbb
out
les
sub
jmp
mov
ficomp
ins
adc
(bad)
xlat
hlt
sahf
es
push
in
add
addr16
sbb
xor
mov
cmps
(bad)
out
pop
test
dec
daa
xor
or
not
mov
inc
jbe
add
dec
xchg
fnstsw
mov
push
lds
pop
mov
mov
pop
loopne
sub
cmps
push
shl
xor
sbb
mov
imul
jnp
sti
xchg
jp
mov
pop
jecxz
dec
sbb
(bad)
out
cmp
aas
ficom
jae
sbb
or
push
test
mov
push
rcl
xchg
dec
xor
adc
ins
push
movs
cmps
(bad)
rcl
adc
push
cwde
mov
setp
loopne
test
and
jne
pop
int
add
xchg
jmp
ds
pop
les
mov
movs
adc
ins
loope
jge
loope
fstp
xor
adc
cmc
or
push
leave
xchg
sti
retf
push
out
jle
std
test
pop
xor
cs
sbb
(bad)
in
popf
ss
push
push
dec
xchg
je
sub
ffree
jmp
cmp
hlt
jg
dec
mov
test
pop
or
fiadd
xchg
test
pop
es
and
jg
rcl
adc
cmp
bswap
mov
fisttp
into
ror
jmp
mov
int3
adc
pmulhuw
aaa
xor
fsub
add
inc
xchg
mov
and
inc
fistp
imul
jmp
adc
sbb
adc
pop
sbb
push
data16
retf
cmp
stc
das
leave
pop
(bad)
adc
test
ja
fiadd
cmp
std
push
inc
dec
and
or
xor
add
mov
add
push
stos
js
in
imul
inc
adc
addr16
test
mul
rol
sub
mov
sbb
lods
dec
imul
cmc
mov
push
inc
jl
push
jg
dec
xor
bound
bound
dec
fs
xchg
fstp
add
pop
int3
fld
or
lds
xchg
xchg
(bad)
adc
jp
jb
cmp
popf
jge
not
add
adc
imul
dec
add
ret
pop
movs
mov
or
and
xor
sub
and
inc
sbb
repnz
inc
stc
es
cdq
dec
(bad)
data16
(bad)
inc
outs
cmps
push
xchg
leave
nop
fcomp
out
lods
jmp
pop
jbe
sbb
int3
adc
aas
fs
xor
adc
sub
mul
dec
dec
cld
xchg
ja
inc
xchg
adc
push
pop
lods
mov
jp
std
mov
add
mov
adc
inc
push
jb
mov
in
loop
enter
in
inc
int
xchg
mov
cli
adc
xchg
and
inc
ss
lahf
add
lods
pushf
jae
aaa
into
add
xchg
bound
mov
xor
jno
sub
aam
jge
stos
mov
dec
add
fisubr
out
mov
fsub
in
cmp
cmp
sbb
jmp
sbb
mov
push
out
mov
push
push
push
or
pop
xchg
bound
int
xchg
mov
mov
xor
ds
dec
cwde
iret
movs
jno
sub
in
jns
(bad)
iret
sbb
inc
cmp
pop
aad
mov
cmp
pop
ins
mov
adc
aam
jnp
aam
mov
or
jbe
pop
loopne
push
mov
pop
shr
add
cmp
pop
or
test
and
dec
in
scas
rcl
imul
or
clc
xchg
jl
popa
jmp
mov
xchg
pop
dec
pusha
sub
add
les
jno
shl
js
jbe
pusha
sar
mov
mov
imul
lahf
sub
mov
stos
dec
mov
call
jns
cmp
popf
repz
out
ins
rcl
mov
loopne
adc
lahf
add
pop
xor
test
push
cdq
aam
lods
mov
test
mov
pop
add
rcl
or
sub
dec
add
das
inc
jae
mov
push
inc
test
cmc
arpl
add
mov
movs
sub
test
push
std
loop
call
movs
retf
sti
mov
adc
fcmovnbe
cmp
jecxz
sahf
push
xor
push
ror
and
les
loopne
inc
aam
push
popa
push
mov
or
xor
fst
dec
sbb
push
push
js
fldcw
ficomp
das
loop
int3
fsubr
or
add
shl
(bad)
xor
jl
pop
mov
retf
jb
xor
jmp
ins
js
xchg
jg
add
xor
js
push
les
sbb
lea
and
push
dec
mov
mov
xchg
pop
sub
(bad)
dec
mov
jmp
call
or
in
mov
add
push
iret
pop
sub
mov
test
add
lock
push
add
test
lahf
push
imul
mov
js
jecxz
xlat
jbe
push
mov
mov
call
test
xchg
xchg
sbb
jne
adc
dec
adc
test
mov
pop
sbb
fdivr
add
call
sbb
mov
daa
lea
mov
ficomp
imul
sar
cwde
addr16
shl
inc
or
mov
push
mov
out
sbb
mov
sar
inc
fisttp
push
je
xlat
loopne
cmps
out
push
sar
xor
movs
imul
pop
test
xchg
jns
or
push
sbb
push
out
out
pop
lods
imul
jae
fcmovb
inc
shl
int
das
nop
fwait
and
dec
or
sbb
mov
push
dec
and
ret
mov
inc
xor
test
add
pushf
jg
cmp
jmp
test
sub
cmp
sbb
pop
cwde
dec
out
adc
push
or
es
jbe
(bad)
pushf
js
xchg
sar
mov
cmp
nop
sbb
lock
pop
pop
mov
mov
inc
xchg
test
and
dec
std
mov
inc
fistp
lea
in
push
dec
loop
push
cmc
aas
pop
sub
retf
cmp
fild
fcmovne
loope
inc
shr
and
retf
fldenv
xchg
mov
into
fadd
mov
push
repnz
jl
jmp
fbstp
jne
mov
rcr
jns
fbstp
xchg
mov
inc
aam
or
inc
jb
inc
push
add
leave
jnp
loope
ret
push
jo
stos
cmp
add
mov
push
rcl
inc
lods
and
rdpmc
ins
pushf
mov
jno
or
cs
jge
retf
adc
fnstsw
jle
gs
lock
outs
push
mov
sbb
or
and
imul
jle
popa
pop
outs
das
call
inc
jmp
xchg
stc
fcom
and
xchg
push
out
test
xchg
sbb
loop
ins
dec
and
fcom
lods
cmps
dec
call
xchg
push
ins
xlat
mov
shl
push
and
jbe
mov
xchg
out
xchg
cs
push
loop
xchg
adc
xchg
out
dec
pop
push
sbb
cmc
pop
shr
mov
std
pop
dec
(bad)
fsub
je
nop
lods
lock
mov
es
fld
loopne
dec
pop
or
pop
add
xchg
mov
ds
xchg
jg
(bad)
adc
out
sbb
add
call
sti
fsub
pcmpgtw
fdivr
jle
or
aas
xchg
xchg
mov
out
push
push
imul
ss
mov
addr16
(bad)
inc
pop
sub
adc
sub
aaa
jae
pusha
lds
adc
or
sbb
push
mov
mov
movs
mov
pop
mov
push
mov
jne
mov
sub
mov
adc
in
xor
jb
xchg
icebp
les
fisubr
sub
out
out
add
sbb
mov
jmp
sbb
xchg
cmp
push
scas
or
lock
out
(bad)
push
mov
cmc
fimul
push
add
sub
lods
arpl
push
lea
sahf
dec
lahf
paddsb
call
arpl
mov
push
sbb
ss
xchg
xor
adc
ss
out
gs
push
add
inc
push
imul
mov
dec
mov
xchg
cmps
xchg
push
shl
inc
dec
adc
fwait
pop
push
mov
dec
mov
inc
xchg
or
fnstenv
out
cmp
ret
movs
popf
pop
stc
add
cs
mov
mov
push
dec
jp
(bad)
je
sbb
retf
mov
xchg
or
cdq
mov
int3
out
jb
and
ins
rcl
mov
fidiv
adc
push
test
push
ds
fmul
jb
icebp
(bad)
arpl
sbb
xchg
inc
ins
xor
pop
sbb
push
call
int3
popf
ins
ficom
pop
sub
dec
push
push
fild
sbb
adc
mov
add
adc
fadd
pop
mov
mov
in
ss
je
test
cmc
jg
jo
call
hlt
xchg
call
mov
(bad)
in
retf
inc
dec
pop
lods
(bad)
mov
xchg
add
push
dec
sub
mov
cli
mov
call
sub
pop
ja
dec
lea
sbb
fnstcw
cmp
jo
outs
fistp
dec
jae
push
retf
adc
ret
lock
scas
das
daa
cs
mov
pop
xchg
fdiv
in
loopne
loope
imul
cmp
rol
in
out
(bad)
int3
mov
mov
mov
push
rcl
in
leave
jmp
add
pusha
int
clc
add
repz
cmps
jmp
lock
mov
adc
cdq
pop
aas
imul
cmp
jge
movs
loopne
mov
pusha
mov
cmps
ds
(bad)
xchg
(bad)
imul
xor
in
dec
out
or
jg
push
iret
dec
xor
pop
pop
pop
push
sahf
dec
sub
daa
mov
lods
outs
push
pop
popf
(bad)
dec
mov
push
sbb
pop
test
xchg
mov
inc
jg
adc
movs
mov
call
mov
lea
pop
out
paddusb
dec
ja
dec
fwait
in
xlat
call
mov
mov
mov
dec
pop
jae
loop
daa
aaa
(bad)
popf
out
cmps
jns
pusha
inc
xchg
mov
dec
push
in
mov
sbb
ret
loop
(bad)
pop
lahf
stos
rol
mov
adc
test
and
out
jns
mov
and
jle
popf
pop
jae
test
aaa
mov
jno
(bad)
movs
jg
test
ret
cs
cdq
jae
dec
sbb
test
cmp
jmp
retf
cdq
push
into
pop
dec
cwde
ror
inc
push
repnz
dec
shl
and
popaw
adc
xchg
fucomip
(bad)
mov
sbb
inc
cmps
add
adc
dec
lds
push
xchg
sub
mov
and
mov
mov
push
mov
retf
dec
and
xchg
(bad)
mov
loopne
retf
ins
jp
ret
sub
add
inc
frstor
sub
ins
adc
cmp
ins
cmps
and
rcl
mov
push
(bad)
mov
addr16
sbb
outs
jl
sub
dec
in
mov
add
inc
mov
fcompp
sbb
(bad)
in
adc
lahf
test
dec
mov
leave
or
sub
cmp
sbb
in
aam
jp
jne
mov
cmps
add
arpl
dec
popf
(bad)
movs
loopne
mov
pusha
pop
int3
and
rcl
(bad)
or
out
mov
inc
bound
mov
mov
xchg
add
jo
jo
sar
xor
scas
out
adc
pushf
jmp
shr
add
push
cdq
es
out
cmp
jg
in
dec
mov
pop
(bad)
xchg
push
dec
jns
xor
pushw
pop
hlt
sub
(bad)
outs
mov
ins
sub
xchg
add
push
and
adc
sub
fisttp
push
cmc
clc
ja
jae
and
push
(bad)
mov
imul
(bad)
imul
bound
dec
lods
mov
arpl
push
inc
jle
adc
mov
pop
aaa
adc
gs
mov
xchg
adc
(bad)
sub
add
inc
mov
push
(bad)
mov
es
jo
sub
aad
fsubr
push
enter
pop
sub
push
test
popa
push
add
dec
pop
jo
lds
sbb
inc
loop
cmps
inc
shr
xor
jg
inc
(bad)
adc
add
mov
pop
mov
push
jb
or
xor
retf
xor
mov
and
fwait
pop
retf
daa
sub
fs
pop
jno
sahf
sub
adc
cdq
cmp
clc
fs
test
mov
ds
jmp
and
jns
mov
fs
je
xchg
jle
and
fld
and
fld
xchg
or
push
sbb
jb
lahf
int3
mov
sbb
inc
cmps
into
sub
leave
movs
(bad)
pop
sub
xchg
xchg
jmp
jge
inc
imul
or
xor
leave
test
nop
or
(bad)
mov
sbb
adc
fisubr
cmps
xchg
or
adc
ja
jle
loopne
or
add
pop
mov
push
sar
sbb
or
inc
and
setge
push
jb
cmp
dec
loopne
mov
std
cmps
(bad)
pop
mov
es
cmp
jp
jno
pusha
fisub
sahf
clc
sub
inc
inc
mov
jmp
ins
es
or
jns
pop
test
int
mov
aad
aam
push
adc
xor
or
hlt
dec
mov
jl
stos
push
(bad)
pop
std
mov
mov
fisttp
pop
sbb
mov
or
rol
adc
rol
and
pop
(bad)
mov
mov
xor
ja
cmps
adc
ret
push
adc
shr
cli
rcr
leave
jge
mov
mov
movs
pop
std
sbb
mov
in
ds
je
aam
mov
adc
mov
sub
rcr
jmp
fdivr
pop
or
inc
fdivr
fwait
stc
into
xlat
jo
add
call
inc
call
add
cmp
dec
outs
pop
jp
pop
mov
bound
dec
pop
push
xchg
outs
mov
push
ret
test
inc
cwde
fwait
cdq
movups
enter
mov
arpl
rcr
loopne
cmp
mov
pop
daa
inc
leave
test
in
lahf
icebp
jmp
fs
xor
mov
cmps
arpl
loopne
dec
push
inc
pop
mov
pop
add
adc
pop
cld
scas
pop
outs
cld
xlat
ins
mov
ins
cmp
int3
xlat
and
mov
movs
mov
neg
das
cdq
pop
dec
fldcw
sub
aad
mul
adc
cld
push
cli
mov
test
pop
enter
inc
mov
dec
lea
adc
ret
mov
stc
cmps
fwait
mov
cmp
arpl
pop
repz
cmp
aad
dec
pop
xchg
adc
popf
add
mov
cmps
(bad)
enter
sub
pop
inc
add
jp
cmp
adc
shr
inc
cwde
mov
pop
pop
popa
and
leave
iret
dec
inc
int
mov
dec
add
repz
mov
mov
retf
sbb
sbb
retf
inc
jb
jl
stos
adc
push
dec
push
int
adc
into
cmps
push
sbb
loop
in
and
pop
ins
and
xchg
jbe
push
cdq
or
int3
jecxz
xor
sbb
stc
in
xchg
stos
lahf
add
cwde
inc
cli
mov
jnp
jg
sub
cmp
or
mov
ficom
lahf
ds
pop
fistp
jp
stos
lock
pop
out
mov
mov
out
fiadd
int
fld
and
cmp
nop
pop
xor
scas
inc
scas
lahf
and
or
or
inc
xor
cdq
push
sbb
push
cmc
scas
test
test
iret
inc
ins
mov
and
les
mov
jg
bound
inc
fimul
lds
enter
jnp
jne
fimul
ja
jae
pop
dec
in
(bad)
jp
pop
scas
fmul
pop
mov
clc
mov
and
inc
imul
push
pop
add
jle
add
dec
popf
arpl
sub
fucomp
in
xchg
adc
add
hlt
in
movs
fnsave
and
mov
shr
mov
mov
mov
in
xchg
or
test
pop
stc
in
push
adc
sbb
je
xor
sbb
cmps
sub
sahf
adc
call
sbb
mov
dec
std
(bad)
into
cmp
inc
aad
sub
adc
mov
inc
cmovge
cs
call
add
out
inc
icebp
shl
in
outs
or
mov
test
in
adc
sbb
cmp
nop
jno
aad
mov
and
icebp
cmp
mov
inc
in
sbb
pusha
aaa
(bad)
sbb
in
cwde
loop
fsub
ja
cmc
pop
inc
dec
cmp
inc
retf
ds
adc
test
jnp
inc
in
std
mov
lds
cmps
in
xchg
daa
push
out
aaa
dec
cmp
pop
sub
shrd
adc
xchg
scas
addr16
into
das
mov
sbb
enter
shl
(bad)
das
jecxz
out
les
xchg
inc
outs
jle
fs
iret
call
idiv
les
fs
adc
(bad)
jl
mov
mov
gs
test
lds
mov
jb
data16
out
stos
cmp
les
test
sbb
mov
sbb
arpl
ins
dec
jnp
(bad)
movs
cmp
mov
mov
mov
jp
or
test
jg
adc
aad
ficom
test
out
mov
shr
cli
add
dec
out
bound
adc
movs
neg
pop
mov
mov
jg
mov
cwde
bsf
xor
push
sar
mov
sub
lds
xor
xlat
rol
xchg
test
rol
aad
push
cmp
jmp
sub
or
div
or
dec
mov
mov
fdiv
mov
or
gs
mov
and
mov
cmps
cmp
fisubr
xchg
lahf
clc
jmp
mov
dec
movs
and
jl
adc
nop
cdq
fwait
out
pop
xchg
xor
jno
jmp
sub
cmp
and
jb
jb
loope
enter
jnp
mov
cs
add
xor
data16
xchg
push
push
cld
mov
cmp
cmp
test
jae
pop
pop
pushf
jo
in
shl
test
call
lods
sbb
mov
xchg
je
cmps
sub
leave
dec
mov
mov
inc
repz
fwait
or
jle
add
out
repz
in
mov
adc
jno
mov
sub
call
sbb
jmp
shr
fcmovnb
data16
inc
or
fs
push
jae
ret
cmp
fnstcw
mov
inc
xor
outs
(bad)
and
cmp
ror
add
mov
pop
inc
mov
out
jbe
mov
icebp
mov
movs
pushf
ror
in
jne
or
cmc
popa
mov
dec
bound
and
std
lods
jl
imul
xchg
xor
or
sbb
rol
not
xor
push
xchg
and
movs
cmp
xchg
xor
pusha
mov
dec
inc
(bad)
icebp
mov
das
stos
fadd
and
cs
pop
or
add
popa
and
sbb
and
mov
mov
stc
cmp
xlat
pop
arpl
in
dec
mov
fistp
popf
js
and
or
cdq
pop
mov
push
rcl
ret
xchg
jmp
je
out
and
imul
pop
cmps
mov
cli
ret
jnp
adc
adc
or
and
sub
ret
cmps
cmc
in
movs
cld
mov
mov
mov
fistp
add
and
push
push
mov
ins
into
into
fsub
rcl
xchg
test
xchg
(bad)
push
cmps
mov
dec
add
push
mov
je
sbb
in
scas
add
lods
push
pop
push
sub
and
outs
scas
mov
scas
mov
scas
and
call
in
jno
or
mov
dec
cmp
lods
or
pop
mov
(bad)
outs
or
int3
aam
mov
outs
dec
jno
xor
xchg
stos
dec
jae
es
gs
cmp
cmc
or
or
add
ins
mov
fcom
add
inc
sti
fsubr
repz
aam
sub
mov
sub
lea
or
sbb
mov
mov
sahf
mov
enter
ins
dec
ficom
fcmovu
ins
add
daa
and
mov
inc
add
or
outs
icebp
push
jb
add
jmp
(bad)
mov
jge
jmp
lfs
rol
fdiv
mov
add
rcl
cmp
cmp
das
les
or
imul
ins
and
mov
cmp
mov
mov
xor
pushf
cmp
xchg
add
test
shl
jns
sbb
fcomp
jl
daa
inc
mov
jl
dec
repnz
inc
clc
inc
mov
add
push
into
(bad)
in
dec
adc
and
lea
inc
dec
jae
nop
(bad)
sbb
lahf
fidivr
and
push
jecxz
pop
shl
dec
pop
inc
call
ficom
and
push
xor
enter
mov
jne
or
push
lods
fisttp
cli
outs
movs
jecxz
or
lahf
hlt
pop
ret
xchg
sub
and
call
jl
rol
adc
mov
or
add
popf
jne
mov
push
cmps
xchg
cmp
push
aaa
aas
xchg
arpl
xchg
and
out
push
mov
adc
add
cmp
sbb
add
cmp
ret
sti
gs
mov
adc
push
cmp
push
push
mov
push
mov
adc
jb
dec
push
pop
cmp
sar
aas
cmp
loop
pop
push
ins
mov
popa
sub
dec
loopne
or
je
push
or
aam
pop
test
out
ja
adc
sub
aaa
repz
leave
mov
repz
push
retf
rcl
push
cmps
adc
and
xchg
or
mov
add
dec
imul
aas
xchg
pop
popf
sub
inc
cmp
mov
inc
test
imul
popa
sbb
and
inc
ficomp
pop
sub
rcr
outs
mov
push
test
add
push
add
shl
pop
cmp
pop
arpl
add
push
inc
inc
cmp
outs
jnp
stos
or
xor
inc
sub
and
fs
pop
retf
mov
mov
les
xchg
test
mov
mov
add
call
mov
inc
xor
test
dec
outs
adc
xlat
pop
imul
xlat
cmp
and
adc
stos
les
mov
jbe
or
or
or
jno
xchg
push
push
cld
and
retf
mov
pop
xor
mov
pop
push
and
stc
ror
jne
dec
push
mov
test
pusha
call
push
(bad)
scas
or
sbb
sbb
popf
sahf
push
std
or
and
add
cmp
xchg
dec
in
push
or
js
test
push
dec
dec
out
mov
test
cmp
or
pop
lahf
mov
aaa
adc
adc
mov
push
pop
cmp
push
fwait
ins
(bad)
fnsave
stos
icebp
test
jmp
mov
stos
retf
sub
movs
mov
sbb
(bad)
aad
clc
xor
sbb
push
enter
aas
(bad)
add
(bad)
mov
adc
stos
mov
pop
jae
das
or
and
mov
jo
cmp
xor
mov
ret
fistp
pop
push
xchg
clc
mov
repnz
out
inc
adc
icebp
test
lds
sub
or
(bad)
jmp
inc
cdq
popa
push
push
xor
xchg
cdq
call
les
fisubr
inc
pop
sahf
cs
ficomp
stos
retf
clc
and
scas
sbb
(bad)
and
icebp
jne
cwde
in
inc
xor
add
ins
aad
out
(bad)
mov
mov
iret
push
js
and
xor
add
mov
in
xlat
xor
repz
mov
mov
pusha
das
xor
xor
movs
jnp
imul
cmc
mov
fist
pop
xor
call
xlat
mov
in
adc
mov
imul
punpcklwd
ror
xor
xlat
add
(bad)
stc
and
retf
pop
jl
popf
out
jnp
mov
out
push
xor
imul
ret
jne
sbb
fdivr
sti
push
sahf
cdq
stc
lahf
imul
repnz
pop
dec
mov
jg
retf
jno
and
add
aad
(bad)
(bad)
movs
test
lods
lods
xor
(bad)
call
and
push
int3
cld
and
(bad)
scas
call
mov
std
xlat
hlt
ja
jmp
loope
jl
cmp
push
sahf
push
add
mov
push
hlt
mov
iret
xchg
cmp
scas
mov
popf
outs
pop
push
sbb
xchg
lds
sub
test
push
arpl
push
jge
xchg
jbe
push
aam
aam
out
test
loope
pop
pop
out
jo
jnp
inc
sbb
xchg
inc
push
add
inc
data16
in
sub
pop
pop
pop
xchg
pop
and
sahf
mov
jmp
push
jmp
add
sub
sbb
icebp
out
iret
outs
xchg
retf
fstp
int3
jl
mov
mov
sub
pop
inc
bound
mov
dec
and
jae
int
jb
mov
loope
je
stos
cmp
hlt
mov
sub
outs
fadd
push
nop
inc
mov
je
loop
jle
mov
aas
test
js
jb
push
xor
in
loopne
int3
and
dec
xchg
adc
xchg
pop
dec
sbb
mov
xchg
dec
add
repnz
jecxz
nop
ret
xchg
sub
mov
xchg
pop
xchg
das
add
out
cmps
in
into
mov
mov
xchg
call
enter
rcr
push
add
inc
shl
sbb
sar
aad
push
xor
xor
outs
inc
mov
fisubr
dec
neg
retf
repnz
arpl
xor
mov
in
inc
cmp
div
and
or
jmp
adc
shr
cs
(bad)
fbstp
arpl
les
(bad)
loopne
gs
mov
adc
lods
repz
add
sub
add
(bad)
lea
fsubr
out
push
xchg
fld
dec
daa
jne
dec
or
fs
inc
xor
data16
fsubr
sbb
cmp
xchg
jge
arpl
gs
dec
inc
inc
in
bound
jp
ror
sbb
movs
xchg
cmps
mov
inc
jecxz
movs
or
mov
(bad)
mov
in
pop
mov
sub
and
iret
and
cs
pop
call
xor
test
(bad)
push
test
js
mov
shl
ins
retf
cmps
mov
push
inc
ret
cmp
or
sbb
scas
or
cs
jl
pop
fdivr
daa
int3
pop
fld
pop
inc
dec
or
xchg
xchg
cmp
inc
inc
mov
jmp
fs
out
sbb
pop
mov
(bad)
mov
sub
cmp
aam
xor
inc
dec
and
stc
inc
xchg
xchg
jns
lods
sbb
sub
jo
iret
ins
mov
add
and
pop
into
rcl
aaa
rcl
fwait
add
ss
push
mov
pop
test
test
xlat
xor
adc
sbb
cmps
adc
xchg
mov
gs
jp
or
dec
or
mov
cmp
jo
cli
cmp
call
fcom
cmp
ss
push
xchg
lods
jg
xchg
rcl
retf
das
dec
sub
cmp
dec
lea
inc
xor
push
test
je
adc
ja
out
adc
inc
and
jg
pop
daa
outs
mov
xchg
push
mov
cmp
cmp
and
sbb
mov
jne
and
jno
or
mov
fwait
bound
sbb
cmp
or
not
lods
lock
adc
lahf
lahf
push
and
cmp
sub
pop
sub
call
push
sbb
mov
fs
stos
pushf
js
pop
and
or
xchg
iret
pop
mov
xor
mov
and
xor
mov
dec
lea
or
fidivr
popf
iret
sbb
sbb
retf
fdivr
daa
xor
push
cli
push
xor
pop
xor
aas
and
or
imul
outs
cmp
retf
arpl
fstp
rol
mov
test
pop
sub
xor
test
mov
imul
in
js
xchg
pop
(bad)
mov
sbb
aaa
xor
push
in
stos
ja
dec
cmp
cdq
test
aaa
js
iret
mov
fadd
dec
cmp
mov
sbb
and
push
jmp
pop
out
jno
fild
das
nop
add
pop
aad
jg
retf
imul
sbb
fsubr
jecxz
push
shl
add
test
or
ins
in
outs
push
jne
rcl
scas
mov
(bad)
frstor
jo
or
aas
mov
imul
call
in
jg
popa
mov
js
ret
lds
and
sbb
cmp
and
sub
jmp
ret
xchg
out
iret
and
ret
ins
shl
mov
lods
(bad)
cmp
hlt
es
inc
pop
add
std
sub
sahf
xchg
ds
xchg
pop
psllw
and
adc
scas
push
or
idiv
je
cmp
aad
mov
jb
mov
test
xchg
cdq
mov
mov
jle
ins
(bad)
adc
xchg
sub
xchg
sbb
mov
stc
repnz
stos
mov
sbb
fidivr
jmp
jl
aas
imul
data16
(bad)
stc
pop
int3
cmp
pop
ror
cmps
jne
imul
out
jecxz
ret
cmp
hlt
pop
adc
cmp
popf
jo
and
ins
cdq
sub
push
dec
cmps
outs
popa
popa
mov
jmp
cld
lahf
push
lods
ret
nop
into
loope
cdq
leave
dec
adc
and
loope
xor
xchg
pop
push
gs
rcl
push
fadd
lds
cmp
addr16
repz
dec
movhps
cmp
test
dec
out
xchg
add
data16
scas
or
cmpxchg
(bad)
icebp
movs
cmp
iret
jle
ret
loop
stc
xor
push
rol
bound
push
cmp
cmp
lss
call
mov
add
loop
mov
jecxz
pop
(bad)
mov
jge
mov
xlat
mov
or
(bad)
adc
or
or
in
sub
jp
pop
jecxz
push
ins
shr
push
neg
mov
jmp
imul
or
mov
rcl
nop
loopne
fwait
das
xchg
and
cwde
clc
out
push
mov
cmp
cmp
or
mov
or
dec
push
push
jge
pop
push
fld
xlat
pop
popa
jecxz
movs
and
jmp
jno
clc
(bad)
cmps
xchg
rol
inc
loopne
pop
adc
fiadd
shr
pop
sbb
test
lea
pop
jnp
nop
inc
in
sbb
iret
daa
in
cwde
clc
call
inc
shl
les
test
outs
add
and
dec
pushf
sub
outs
mov
push
push
adc
outs
mov
data16
and
add
cmp
ins
fistp
cmp
push
outs
pop
mov
das
lea
xchg
stc
pop
jmp
cs
lock
loop
dec
fldenv
mov
(bad)
mov
into
into
mov
add
dec
cwde
ja
jmp
stc
test
xor
mov
mov
ja
xor
dec
ret
shr
sub
sub
mov
loop
mov
stc
jecxz
pop
push
gs
push
popf
cmc
or
rcl
aam
cwde
(bad)
fld
dec
xor
add
jmp
mul
and
or
mov
push
adc
mov
out
aaa
sbb
pop
sub
add
jae
mov
mov
fistp
push
xchg
inc
dec
inc
(bad)
repz
cmp
retf
xchg
shl
fiadd
jg
cdq
lods
dec
outs
mov
xchg
je
mov
sbb
cli
out
mov
inc
mov
xor
add
sbb
pop
mov
cmc
cmps
push
pusha
fadd
test
jne
cld
cwde
jg
push
shl
ret
push
xchg
push
test
and
xchg
inc
cmp
mov
ret
pop
cmp
push
aam
fild
popf
mov
jge
lock
ins
and
mov
push
pop
or
push
cli
push
cld
sahf
pusha
mov
outs
ins
mov
sbb
in
adc
sbb
mov
ins
mov
pop
inc
sub
ja
std
out
loop
neg
cmp
mov
cmp
jns
cmps
rol
mov
inc
mov
inc
dec
and
pop
fidiv
adc
adc
mov
icebp
mov
ds
xchg
shl
add
push
stos
xchg
rol
je
xchg
cmps
dec
data16
pushf
push
test
retf
jecxz
sub
adc
push
add
mov
loope
sub
jne
fadd
enter
and
aas
daa
mov
mov
inc
adc
mov
aad
fwait
enter
xchg
(bad)
cwde
xor
pop
mov
retf
outs
sti
dec
cmp
xchg
xor
js
push
and
add
nop
xchg
inc
ror
jns
jno
push
repnz
ins
mov
xor
into
push
xor
push
(bad)
aas
xor
ss
cmp
mov
loopne
xor
pusha
dec
test
xchg
mov
popf
pop
jl
(bad)
imul
jbe
mov
popa
inc
add
dec
retf
push
shr
frstor
or
or
mov
(bad)
jmp
nop
mov
xchg
cld
or
cs
(bad)
test
sti
test
push
ins
dec
sbb
(bad)
stos
int3
inc
mov
shl
mov
push
pop
ins
jno
or
cmps
pop
ret
pushf
sbb
lods
es
fisub
dec
aas
mov
iret
sbb
sub
push
or
fsub
lods
pop
call
pop
cmp
repnz
adc
push
push
cdq
mov
out
xchg
mov
mov
pop
xor
mov
mov
stc
xchg
pop
xchg
sub
or
mov
jge
jb
mov
add
xor
in
outs
pop
and
cmp
jmp
mov
dec
cdq
jge
or
add
fstp
bound
mov
shl
pushf
lods
neg
mov
jmp
inc
push
je
or
dec
bound
push
aaa
jp
fdiv
inc
cmc
retf
lahf
add
shl
test
fimul
mov
movs
cdq
sub
cmp
hlt
outs
add
jl
and
sub
stc
lea
jg
add
in
pop
mov
cmp
push
sbb
jbe
pop
imul
cmps
jl
push
je
shl
mov
out
cmp
popa
add
je
das
push
sbb
pushf
in
cmp
imul
hlt
shr
arpl
pop
add
pushf
(bad)
aad
mov
sub
fidivr
xchg
stc
mov
or
int
mov
mov
push
not
pop
mov
shl
loop
mov
xchg
inc
adc
jbe
fiadd
mov
cmp
bswap
movs
and
popa
(bad)
nop
xor
out
push
mov
shr
push
add
mov
push
pop
pop
pop
pop
mov
sub
pop
xor
aad
push
cmp
repnz
pop
adc
push
push
(bad)
repnz
les
mov
outs
movs
ss
arpl
movs
jmp
cmp
push
pop
imul
movs
fcomp
sahf
mov
ret
fsubr
dec
scas
inc
pop
pop
pop
and
(bad)
out
mov
je
xor
ins
(bad)
push
jg
mov
(bad)
jmp
in
mov
mov
inc
lea
mov
cli
les
fst
mov
xchg
cmp
sub
mov
repz
xchg
mov
cmp
dec
cld
popa
adc
nop
sbb
cmps
ret
pop
push
pushf
push
aaa
xor
ror
push
retf
add
and
pop
imul
jg
or
or
dec
add
out
adc
and
xchg
adc
mov
ror
sub
cs
xchg
push
and
mov
dec
in
test
sar
mov
mov
fwait
xor
jmp
into
mov
out
adc
pop
adc
mov
push
fs
pop
sar
sub
sar
xchg
mov
sub
(bad)
std
cmp
test
mov
adc
mov
call
pop
ins
pop
neg
mov
sub
pop
or
pop
hlt
jbe
sahf
dec
push
mov
jmp
mov
add
sahf
xchg
push
sar
fadd
arpl
and
out
(bad)
daa
div
xchg
inc
jge
retf
cmps
fistp
lods
pop
mov
popa
psrld
ja
cmps
mov
popa
mov
add
mov
xor
fwait
jnp
add
inc
push
jo
mov
inc
js
fsub
mov
sbb
mov
mov
xor
addr16
int3
cmc
sbb
sub
in
cmps
mov
test
frstpm(287
dec
(bad)
fidiv
inc
sub
pop
add
pop
pop
sub
fwait
jbe
ja
loop
sub
sbb
cmp
lods
mov
cld
fistp
retf
pop
push
cmp
in
frstor
mov
inc
xchg
xor
fidiv
inc
add
rcr
hlt
pop
pusha
fcomp
not
inc
mov
pop
(bad)
leave
mov
push
push
call
inc
daa
sub
popf
cmp
xchg
fdivr
retf
sub
(bad)
cli
shl
(bad)
dec
jno
cwde
xlat
adc
xchg
loope
lods
scas
ds
(bad)
jb
mov
pusha
iret
mov
(bad)
hlt
test
add
and
rcl
sub
adc
xor
inc
sub
test
push
loopne
mov
cs
test
mov
addr16
mov
cwde
std
shr
mov
pop
sub
add
jno
dec
shl
mov
mov
mov
and
add
jae
lods
xchg
cld
inc
sti
xchg
ss
cwde
and
mov
pop
xor
(bad)
jecxz
int3
xchg
mov
test
mov
rol
leave
cmps
cmps
mov
(bad)
cmc
add
cmp
loope
arpl
push
js
popf
(bad)
mov
aam
lea
into
lahf
xor
jg
ret
or
loopne
repnz
cmc
xor
adc
loopne
push
sbb
fnstcw
sub
in
scas
mov
push
les
enter
int
jae
daa
ja
jo
(bad)
repnz
mov
call
adc
xchg
inc
pusha
ins
adc
ret
das
jmp
inc
jnp
push
lds
sbb
and
fcomp
das
(bad)
(bad)
or
lock
lea
stc
int
jle
nop
inc
mov
sti
xor
adc
pop
pop
mov
dec
dec
ret
ret
bound
mov
ins
and
gs
mov
or
inc
sub
aam
sbb
cmp
push
pop
das
cld
sti
sbb
dec
mov
call
shl
lods
jnp
add
cdq
ins
dec
test
jmp
xlat
test
daa
add
adc
imul
cmp
jmp
out
shr
mov
mov
or
inc
ins
xor
(bad)
mov
sub
lea
push
xor
cmp
adc
sti
jbe
or
sub
inc
es
stc
iret
cmps
add
jnp
(bad)
out
lods
inc
mov
inc
ins
cmps
sub
hlt
(bad)
loopne
mov
bound
pushf
loope
xchg
daa
fcmovne
push
jo
inc
xchg
(bad)
jmp
sub
push
in
sbb
jae
or
popa
mov
dec
inc
out
mov
sbb
aaa
sahf
or
adc
fstp
push
dec
(bad)
in
jbe
xchg
push
rcl
cwde
sub
jne
repz
fstp
dec
shr
stos
jg
xchg
and
int3
xchg
jno
sub
idiv
cmc
pop
jb
xchg
in
push
mov
add
pop
xor
jne
dec
lock
jo
fs
in
xor
daa
jbe
inc
test
cmc
or
sub
pop
sub
arpl
or
pop
xor
ja
mov
adc
nop
aam
and
stc
pop
xchg
mov
jecxz
jg
xor
cmp
dec
call
pop
movs
out
daa
sbb
ret
add
pop
adc
sbb
pop
push
mov
cmps
pop
call
cli
fcom
mov
pop
(bad)
ret
ins
scas
xchg
cmp
and
fsub
push
cmp
pop
and
loope
mov
dec
lea
gs
and
js
jg
scas
and
fst
inc
xchg
cmp
lahf
icebp
lds
sub
sub
lea
pop
xchg
mov
dec
xchg
sar
push
sbb
jnp
pop
jle
leave
mov
retf
mov
retf
mov
pop
cmc
pop
xchg
dec
ss
cmc
push
push
cmps
scas
mov
mov
jbe
test
and
dec
call
push
ja
fnsave
inc
adc
ror
jle
ins
mov
push
(bad)
fwait
xchg
loop
mov
into
addr16
jbe
jo
sbb
xor
sbb
sbb
pop
xor
inc
jo
sub
movs
mov
dec
pop
xor
pop
mov
lahf
in
jp
mov
pop
lahf
test
dec
data16
imul
and
test
cmc
mov
mov
je
inc
fisttp
fimul
movs
sbb
xchg
clc
shr
outs
push
test
and
xchg
mov
imul
inc
and
cli
cs
dec
nop
push
jl
or
in
pushf
fistp
rep
pop
and
cmps
xchg
(bad)
xor
mov
push
mov
dec
mov
push
fsubr
pop
jmp
mov
jbe
sub
popf
inc
int3
sbb
jecxz
(bad)
push
repz
ficom
and
(bad)
sub
add
jmp
dec
call
cmp
xor
mov
psraw
push
sub
frstor
jno
in
sbb
inc
int
xchg
mov
mov
and
mov
out
js
mov
cmp
ins
stc
movs
(bad)
(bad)
hlt
lahf
xor
or
outs
ret
jp
add
mov
push
jbe
xchg
fdiv
sbb
cld
sub
add
dec
jns
cwde
pop
push
add
add
cmp
fistp
add
and
das
xchg
(bad)
loopne
lods
inc
push
inc
(bad)
cwde
sbb
ret
dec
clc
jmp
or
adc
popf
sbb
movs
inc
js
push
stos
and
inc
mov
mov
arpl
icebp
in
stos
loopne
fdiv
je
cdq
imul
sbb
or
das
aam
scas
ins
out
(bad)
xor
mov
cmp
mov
cdq
or
lds
sbb
mov
sbb
xchg
lahf
pop
sbb
sbb
fucompp
int3
and
push
or
and
jns
hlt
ror
push
int3
pop
push
sub
jle
or
sbb
xchg
lahf
stc
dec
repz
xchg
(bad)
(bad)
out
cld
or
xor
xlat
xor
jns
mov
adc
(bad)
test
or
(bad)
jmp
push
shr
mov
daa
outs
stos
push
xchg
test
fmulp
rol
hlt
or
call
xor
loopne
mov
ss
dec
push
into
jnp
xor
add
dec
out
cli
jae
leave
jp
xor
enter
mov
ficom
inc
in
cmps
xchg
pop
or
mov
stos
aam
ins
or
add
out
mov
jbe
add
mov
hlt
icebp
lods
xchg
loope
nop
jbe
sub
outs
mov
mov
ja
xor
retf
imul
test
cmps
inc
pusha
jnp
pop
test
cli
adc
jle
mov
std
or
out
mov
mov
inc
es
aas
pop
imul
retf
nop
cld
push
mov
xor
push
cs
jmp
pop
push
retf
or
push
pop
icebp
or
mov
imul
out
shl
xchg
xlat
inc
mov
mov
jne
into
and
sub
cmp
dec
movs
xor
scas
bound
daa
cmp
push
mov
inc
imul
call
das
pusha
pop
pusha
xor
movs
mov
xchg
mov
push
fist
xchg
pop
inc
retf
retf
jge
pop
fstp
(bad)
movs
mov
stc
sub
pop
push
mov
(bad)
aad
jl
add
mov
xchg
into
dec
rol
cmc
inc
pushf
adc
ss
mov
push
addr16
out
lock
aaa
(bad)
aas
mov
inc
leave
xor
(bad)
in
xor
inc
adc
dec
mov
ins
and
push
call
rcl
mov
mov
les
or
lods
mov
call
cld
loope
ficom
cwde
inc
mov
dec
mov
pop
arpl
in
imul
(bad)
sbb
ins
pop
dec
or
xchg
imul
inc
cmp
jle
cld
cmp
sub
sub
retf
and
test
nop
sbb
std
push
and
and
test
add
int
out
push
in
mov
dec
nop
xchg
pop
adc
jle
mov
aam
dec
xor
and
or
jo
cmp
dec
mov
push
stos
fisttp
and
adc
int
add
adc
adc
std
fistp
dec
lahf
pop
not
sub
mov
mov
push
add
shl
nop
loopne
stos
xchg
adc
inc
je
out
cmp
ins
sbb
xchg
mov
jb
mov
inc
(bad)
push
call
add
ds
pop
mov
push
rcl
add
push
mov
xlat
and
inc
pushf
jge
out
movs
outs
inc
sbb
fisttp
push
daa
movs
aam
mov
enter
dec
test
mov
fnstsw
xchg
xor
push
aam
hlt
mov
movs
pop
(bad)
js
pop
shl
call
mov
test
inc
cmc
and
int
mov
add
push
mov
xchg
xchg
retf
ja
scas
mov
imul
cmps
add
sbb
sub
or
jl
dec
loop
or
pop
push
shl
call
xor
xor
repz
mov
std
ja
out
push
inc
leave
(bad)
and
ret
call
(bad)
adc
inc
int
stc
lahf
sub
inc
mov
inc
shl
xchg
cmp
bound
(bad)
jle
sar
int3
xor
data16
sub
lods
push
leave
in
pusha
lahf
out
loopne
ja
movs
cmps
dec
inc
jmp
add
push
and
cmp
sub
adc
mov
int
xchg
out
push
stos
inc
(bad)
xchg
(bad)
dec
stos
dec
jae
adc
push
enter
lea
sbb
pop
mov
fs
in
or
nop
cmp
std
xor
mov
push
fidiv
add
call
cmc
mov
add
cmps
cmp
cli
push
lds
call
neg
cmp
call
xchg
call
aam
inc
xchg
push
or
inc
add
loopne
add
sbb
aaa
cdq
sub
std
xchg
push
pop
(bad)
adc
loop
fnsave
and
loop
pop
sub
nop
icebp
popf
and
and
cmps
push
pop
lock
loope
loop
lock
paddusw
mov
aam
outs
out
xor
das
dec
mov
shl
push
inc
pop
cld
mov
test
xchg
mov
out
adc
jns
push
cdq
mov
cmps
popa
adc
or
lds
fisub
retf
jb
fisub
dec
je
mov
push
xchg
(bad)
addr16
and
xor
outs
out
fs
mov
jae
mov
or
inc
ror
mov
loop
lea
pop
aad
cwde
(bad)
and
xchg
pop
in
retf
cmp
ins
int
and
icebp
call
mov
inc
jmp
mov
fwait
pop
dec
mov
ins
int
xchg
or
cmp
jcxz
xor
xor
iret
mov
dec
add
cmp
jno
fwait
mov
test
or
and
div
adc
or
sar
into
loopne
and
xor
scas
fdivr
mov
and
repnz
inc
ds
(bad)
or
xor
pushf
lods
jmp
rcr
call
or
inc
aas
pop
xchg
pop
mov
and
inc
(bad)
push
ret
movs
add
xchg
xor
mov
sbb
aas
add
or
call
xchg
mov
pop
add
cmp
sahf
mov
es
mov
dec
fimul
or
fwait
popa
jns
push
mov
adc
lods
stos
test
sti
add
jle
(bad)
movs
add
rsqrtss
xor
fprem
jmp
mov
mov
jne
ret
mov
xor
retf
cmp
cmps
sbb
mov
aam
fild
ret
jge
es
out
movs
mov
sbb
ja
outs
out
sti
dec
not
add
inc
dec
lahf
inc
sub
xchg
jo
aam
sub
adc
mov
movs
adc
ret
lods
(bad)
inc
sbb
in
stos
pop
xor
mov
ja
and
test
cmc
icebp
sub
or
outs
and
jns
(bad)
mov
xchg
sbb
js
xlat
mov
pop
std
mov
loop
sbb
aad
test
inc
or
xlat
or
dec
cs
ins
lahf
or
pop
(bad)
jae
pop
ror
fadd
dec
data16
mov
dec
inc
xlat
(bad)
repnz
leave
jnp
loop
enter
mov
das
ins
xchg
jge
out
arpl
sub
push
retf
xor
xchg
and
es
scas
jne
xor
push
jle
into
mov
loop
lock
popa
mov
jnp
add
xor
rcl
pop
adc
and
and
retf
mov
jle
cli
sbb
idiv
mov
jae
mov
xor
dec
add
fisttp
adc
inc
call
jp
cdq
sub
es
sbb
inc
inc
inc
sbb
int3
shl
mov
add
xchg
popa
test
clc
and
les
sub
push
mov
mov
shr
stos
mov
in
pop
cmp
not
movs
add
adc
in
push
fisubr
dec
lea
inc
ja
sti
or
jbe
pop
ja
test
fistp
dec
inc
in
sub
inc
inc
sbb
sub
inc
jp
loope
loopne
fs
lds
ss
ja
adc
cli
mov
popa
or
loopne
lds
addr16
mov
mov
xchg
fwait
jae
pushf
sub
inc
sub
xchg
scas
cwde
jmp
(bad)
shr
imul
pusha
xor
mov
call
xchg
sbb
lahf
loopne
sub
push
or
leave
arpl
jmp
push
sub
push
xor
cmp
fisub
lods
sub
mov
(bad)
hlt
jmp
fs
(bad)
pop
mov
mov
mov
or
sub
xor
mov
cli
test
pop
cmc
and
mov
jno
fcmovbe
(bad)
sar
out
adc
sub
mov
stos
icebp
xchg
push
loope
xchg
in
push
inc
repnz
xlat
shl
frstor
cmp
xchg
push
jns
xor
sub
push
xchg
jl
mov
ret
in
fsubr
repnz
inc
outs
push
inc
cdq
lea
pop
fistp
pop
test
(bad)
fwait
or
dec
mov
and
push
ror
push
int3
inc
mov
dec
outs
iret
test
adc
jmp
inc
sub
rcl
or
xchg
out
dec
sar
aam
jge
or
xchg
add
add
ds
dec
stc
xchg
mov
mov
(bad)
(bad)
retf
fld
jp
fs
inc
mov
xor
retf
(bad)
mov
add
mov
push
mov
dec
fcom
js
popf
imul
mov
mov
mov
cmp
mov
fcmovne
fs
xor
cmp
shr
cdq
icebp
idiv
or
test
(bad)
mov
hlt
repnz
popa
(bad)
or
xchg
sbb
leave
adc
cmp
sub
int
sub
inc
stos
cmps
cmp
push
mov
xor
push
fiadd
loopne
test
push
inc
and
jmp
rcr
mov
jmp
and
in
push
xchg
xchg
adc
stc
sbb
sbb
jne
jmp
call
sub
push
add
sbb
xchg
mov
sub
int
xchg
pop
pcmpeqw
pop
jg
daa
in
cli
fidivr
mov
imul
sub
sub
jmp
mul
push
mov
jns
jecxz
pop
push
xor
dec
dec
mov
repz
sbb
fist
punpcklbw
iret
cmovns
repz
push
daa
imul
in
add
mov
mov
mov
xor
addr16
inc
fimul
mov
movs
xchg
mov
imul
in
ret
mov
loop
ret
outs
imul
stos
bound
and
xor
arpl
xor
inc
lds
dec
mov
test
jmp
fisttp
cmp
dec
mov
in
xchg
push
mov
or
call
sbb
or
mov
aam
cmp
jg
dec
stos
push
jecxz
pushf
mov
push
sub
ins
pop
pop
ds
leave
mov
add
mov
(bad)
faddp
jg
popa
mov
ins
ret
arpl
pop
inc
cmp
shl
pop
add
das
jbe
test
xor
push
add
xor
pop
xchg
xor
or
fisubr
(bad)
mov
out
mov
add
xchg
(bad)
mov
mov
loopne
call
pop
pop
stc
push
mov
test
mov
lods
mov
sbb
cmp
xor
sub
movs
leave
sub
fwait
jno
ins
cmps
and
out
jmp
ins
call
sub
mov
mov
jno
(bad)
dec
inc
jb
loope
cld
inc
je
sbb
repz
jb
icebp
int
fstp
xor
mov
cmp
inc
fs
jno
pop
cmc
nop
inc
gs
ins
or
stc
or
retf
sahf
mov
ds
clc
adc
es
lods
jns
or
faddp
push
jb
mov
dec
adc
add
fisubr
std
and
outs
xchg
mov
and
jno
repz
cmp
jmp
push
or
pop
out
mov
or
push
ja
lock
sbb
cs
out
and
mov
loop
enter
pop
mov
xor
push
into
aad
scas
retf
mov
fistp
mov
jecxz
mov
jae
sbb
add
in
pop
inc
xchg
jecxz
repz
pushf
pop
mov
jne
jp
aas
xor
jl
aas
push
test
push
jbe
aas
adc
icebp
pusha
(bad)
mov
icebp
outs
inc
xor
std
adc
dec
test
and
pop
fimul
(bad)
shr
dec
mov
or
add
(bad)
mov
cwde
ins
mov
mov
cmp
xchg
mov
adc
inc
push
aad
div
or
aas
jg
push
mov
and
mov
mov
call
and
gs
push
popf
and
aas
pop
ins
sub
push
mov
and
mov
cwde
xlat
mov
loopne
out
sbb
inc
ins
and
push
mov
out
cmps
pop
movs
test
icebp
mov
dec
cdq
push
or
mov
es
fisttp
or
into
dec
push
sub
and
jmp
rcl
push
jo
in
mov
xor
xchg
xchg
fcmovnb
cwde
inc
outs
sbb
or
fstp
dec
add
mov
and
hlt
sub
lea
mov
add
ins
lock
cmc
(bad)
pop
shl
xor
stos
pop
mov
bnd
adc
cmp
adc
addr16
mov
in
dec
lods
retf
xchg
push
push
pop
pop
mov
gs
adc
inc
shr
dec
rcr
div
(bad)
js
push
out
cmps
lea
pop
or
inc
cld
aaa
sbb
lods
jne
mov
add
inc
cs
jno
loop
mov
mov
and
call
into
mov
fisubr
pop
je
cmp
or
mov
loop
(bad)
push
push
repz
cmp
and
xchg
sbb
shl
jo
xchg
lods
das
loop
fcomp
add
sbb
inc
mov
ds
call
xor
mov
dec
and
fisttp
loopne
mov
and
push
cmps
outs
inc
inc
and
push
mov
cmps
movs
mov
lahf
movs
sahf
xchg
cmp
(bad)
xor
clc
out
in
jns
sbb
jle
pop
fwait
cmp
pop
int
and
or
jae
inc
or
rcr
jae
jbe
or
div
das
mov
popa
jecxz
pop
ss
fcmovnu
ja
pop
aaa
cmp
mov
cmps
xchg
push
push
xchg
call
xchg
out
loop
lods
jns
ins
cmps
mov
mov
sub
push
adc
aaa
add
cwde
jbe
jnp
fsubr
mov
not
lods
dec
sub
jge
ss
into
xchg
out
cmp
leave
xor
out
sub
daa
jg
push
mov
fmul
add
lds
mov
mov
xchg
push
mov
ja
xor
ror
jmp
addr16
or
sti
sbb
jp
sub
fiadd
inc
adc
mov
adc
nop
pop
cmc
lods
mov
dec
xchg
mov
or
gs
add
les
cmp
push
movs
inc
push
in
mov
repz
lea
stos
scas
or
scas
cmp
dec
pop
fdiv
mov
ss
xor
pop
ror
test
pusha
mov
ret
adc
daa
sub
mov
stos
js
fcomp
inc
xor
in
sub
inc
inc
test
mov
f2xm1
pop
out
jle
sar
fisubr
mov
ret
sub
xchg
pop
and
xchg
mov
sbb
add
pop
sbb
dec
int
dec
cwde
push
(bad)
push
ss
mov
cmp
cmp
pop
mov
xchg
inc
out
xchg
jmp
mov
mov
test
adc
femms
pop
fcomp
add
sbb
ficomp
out
push
leave
outs
xchg
loopne
inc
rcr
aad
add
adc
js
les
pop
outs
xchg
mov
jp
in
loopne
jl
dec
in
jae
pushf
(bad)
dec
jmp
call
jge
mov
cld
xchg
sub
call
xchg
mov
sub
jmp
adc
adc
xchg
inc
fst
dec
in
(bad)
fwait
retf
out
cmp
jb
scas
jg
sub
mov
in
(bad)
mov
xor
xchg
jge
adc
cs
mov
jge
mov
clc
cmp
test
adc
popa
(bad)
aaa
rcr
dec
dec
push
int3
je
test
loope
fimul
stos
aad
pop
jns
push
es
neg
jo
nop
mov
xor
inc
pusha
in
dec
push
pop
aaa
cmp
sahf
ret
add
frstor
adc
add
and
mov
cmps
add
and
dec
nop
sti
or
cld
test
cld
sbb
dec
sub
or
dec
pop
inc
test
adc
pop
leave
aas
iret
fidivr
sbb
dec
mov
unpckhps
and
je
mov
dec
and
sbb
femms
and
lds
aad
dec
sbb
mov
sub
(bad)
mov
lock
scas
gs
or
push
sbb
loopne
test
xchg
cmp
in
test
out
movs
or
sub
pop
xchg
out
xor
xchg
cmp
mov
and
sbb
idiv
dec
inc
cmp
stos
sub
fcmovnu
inc
mov
cwde
inc
sub
inc
sbb
lahf
retf
(bad)
(bad)
xlat
int3
rcr
xor
mov
test
inc
sub
cwde
test
push
ins
inc
and
daa
and
sbb
rcr
or
aaa
(bad)
das
lods
(bad)
cmp
and
mov
stc
movs
loope
add
clc
pop
icebp
or
retf
mov
pop
(bad)
in
mov
outs
sub
adc
and
mov
std
xchg
xor
cwde
push
shl
and
cmp
jle
mov
stc
mov
movs
push
fsub
inc
scas
lahf
inc
inc
ret
ret
push
clc
repz
adc
cmp
mov
test
pop
jg
or
cmp
shl
adc
rcl
jge
jecxz
inc
mov
xor
shufps
repnz
mov
je
lahf
(bad)
loopne
out
add
ja
lahf
test
sahf
or
mov
stos
iret
mov
xchg
and
push
out
icebp
mul
adc
and
mov
shl
in
dec
dec
call
cmps
xchg
mov
(bad)
cmps
imul
pop
mov
adc
mov
dec
daa
popf
xchg
fimul
in
jns
lods
lahf
push
test
mov
into
pushf
pop
ja
or
pop
clc
add
repnz
mov
inc
lds
xlat
mov
mul
icebp
inc
(bad)
cmps
fisubr
xchg
sub
push
jmp
fcmove
sti
and
xor
mov
fdivr
inc
jbe
jne
mov
xchg
int3
push
fistp
mov
xor
xchg
xchg
push
sub
cs
fild
cld
inc
sbb
pop
retf
sbb
dec
cwde
mov
add
mov
jecxz
out
push
jl
inc
lahf
inc
jmp
in
jno
or
in
xchg
adc
outs
jae
pop
int3
(bad)
iret
les
jne
sub
into
pop
icebp
shl
mov
in
ror
mov
mov
sbb
adc
pop
js
dec
retf
mov
xor
jno
jnp
add
retf
shr
out
test
test
icebp
push
test
adc
ror
je
mov
push
jbe
into
scas
aam
(bad)
js
push
(bad)
xchg
and
lods
mov
int
fisttp
mov
pushf
cmps
lahf
aaa
sbb
push
xchg
jmp
dec
cmp
adc
mov
sub
cmp
cmp
add
pop
jmp
movs
sbb
fimul
xchg
xor
arpl
dec
sahf
out
push
mov
sub
push
ret
aad
cdq
push
pop
push
xor
xchg
fstp
not
fsub
jo
fisubr
mov
call
push
xor
mov
pop
das
sbb
js
add
cli
loop
mov
adc
ret
xor
jp
inc
push
out
sub
in
push
inc
call
cmc
pop
scas
test
cmc
loop
ins
je
je
cmc
mov
btc
jmp
std
imul
(bad)
movs
pop
adc
jle
(bad)
mov
ret
mov
xchg
inc
add
cmp
stc
and
mov
jg
push
mov
test
les
adc
sti
repz
aam
or
cmp
add
fwait
pop
xchg
ss
pop
(bad)
mov
cmps
outs
xchg
das
out
mov
icebp
nop
mov
sbb
fcom
cmp
push
rcl
push
repz
mov
dec
imul
pusha
mov
nop
add
imul
sub
punpckhdq
(bad)
or
adc
stos
adc
inc
dec
xor
or
jns
arpl
aas
lods
mov
inc
jg
and
pop
cmp
pop
and
scas
dec
stc
dec
loop
pusha
jno
sbb
inc
pop
enter
xchg
movs
dec
xchg
inc
ficomp
or
(bad)
retf
jl
fild
xor
mov
jle
nop
das
outs
push
dec
in
jae
fcomi
enter
daa
int
adc
fimul
nop
jb
popf
loope
jecxz
sbb
or
out
add
addr16
cwde
mov
test
jo
push
daa
and
push
jbe
pop
mov
xor
jl
mov
sbb
or
mov
jo
(bad)
in
xor
sub
push
mov
jge
out
jb
xchg
les
mov
inc
mov
push
cmp
pop
ja
aaa
arpl
sub
cli
stos
scas
sub
jle
sbb
in
xchg
jns
aas
call
pcmpgtb
or
fcomp
shl
fadd
das
popf
mov
js
push
and
outs
jb
data16
loope
push
int
sbb
add
mov
push
jmp
rcr
jl
bound
scas
mov
mov
(bad)
lahf
sub
call
cs
leave
icebp
xor
pop
ja
xor
mov
mov
rol
sahf
push
dec
outs
scas
push
inc
xor
cmp
fmul
sbb
mov
sti
into
inc
shr
ins
loop
daa
inc
push
out
cmp
inc
mov
sub
xlat
add
je
sub
mov
lds
clc
pop
jnp
lock
sets
ja
fs
adc
xchg
xchg
dec
call
or
(bad)
jbe
loope
fcomp
add
push
es
ss
in
call
and
jae
lods
sub
les
push
pop
aas
ds
or
jns
cwde
jmp
imul
out
outs
inc
not
xchg
out
int3
jge
cmp
test
clc
push
jno
rcr
inc
fcomp
or
cmps
movs
outs
cmp
fiadd
fcompp
xchg
jle
jl
xor
popa
pop
jle
aad
or
xchg
adc
push
sub
push
sahf
in
push
or
adc
ret
dec
dec
cmc
mov
inc
sbb
imul
adc
imul
sbb
push
lods
jmp
cdq
neg
dec
push
xor
sub
or
cli
(bad)
mov
push
retf
adc
inc
sbb
sub
aam
push
nop
xchg
icebp
cmp
je
jge
(bad)
call
xor
sub
push
js
sbb
adc
cmp
push
mov
adc
xor
mov
mov
adc
ret
mov
mov
mov
and
dec
lock
sbb
adc
pusha
jo
iret
scas
pop
loope
cld
pop
pop
out
ficom
pop
fcomip
ja
add
mov
xchg
aad
ror
mov
iret
dec
test
add
pop
lods
fist
imul
mov
mov
ins
jl
dec
mov
sub
dec
retf
loope
xchg
ss
js
retf
mov
shl
out
mov
mov
jbe
sbb
mov
js
push
xchg
mov
sub
and
xchg
sub
test
push
mov
rol
xchg
mov
mov
pop
add
loopne
in
cmp
jl
stos
adc
in
cld
nop
cmp
test
pusha
pop
jmp
adc
lds
mov
out
daa
lods
fwait
in
add
sbb
cmc
xchg
cli
out
jmp
repz
(bad)
dec
sar
mov
imul
mov
mov
ftst
outs
mov
pop
(bad)
push
inc
pop
rcr
je
lods
lods
fadd
jg
fldcw
cmp
pop
xchg
cmp
and
(bad)
sbb
or
pop
fwait
addr16
dec
(bad)
mov
push
xor
jge
sub
outs
gs
aaa
mov
cmp
mov
call
and
cmp
or
fimul
int3
pop
outs
mov
shl
jge
fnsave
aad
pop
cmp
pop
xchg
push
push
cmp
sahf
lahf
xor
mov
mov
push
inc
push
add
mov
cmp
ror
mov
xchg
inc
fdiv
call
stos
jmp
test
into
mov
mov
dec
push
mov
push
ret
pop
dec
xchg
test
jns
pop
pop
sub
arpl
or
xor
jge
dec
cmp
scas
and
inc
shr
je
hlt
scas
sub
cs
jae
adc
push
ja
mov
mov
call
lea
fild
in
dec
(bad)
lods
jge
inc
hlt
fwait
pop
popa
and
add
mov
aam
xor
(bad)
in
add
mov
addr16
shl
jo
fwait
repnz
or
sbb
and
push
mov
push
stos
mov
cmp
daa
inc
loope
push
sub
cmp
jnp
add
inc
pop
jmp
cmp
fsubr
pop
xor
pushf
cmp
jae
sbb
test
add
loope
xor
cmc
bound
test
mov
scas
mov
sub
xor
or
cmp
push
int3
mov
addr16
push
dec
push
add
push
and
cmp
mov
and
xor
jecxz
mov
sub
aaa
(bad)
xor
jns
fdivr
and
sub
push
xor
sbb
ins
fwait
outs
lea
cli
stos
adc
rcl
in
mov
and
das
xchg
scas
mov
or
push
pop
call
fnstcw
push
mov
inc
jne
rcl
push
bound
jl
aaa
dec
rcr
xchg
scas
das
and
xchg
sti
in
or
lods
jbe
and
call
jge
loope
push
xor
div
gs
daa
and
into
outs
pop
pop
(bad)
mov
jmp
loopne
loop
fsubr
inc
aas
aad
pop
fucom
cmp
ret
mov
cmp
daa
jp
or
sub
push
call
or
dec
dec
loopne
pop
cwde
aas
xchg
mov
(bad)
cmc
out
xor
xchg
pop
mov
shr
push
aaa
xor
or
pop
lods
inc
add
sbb
sbb
movs
cdq
fistp
fild
pop
xchg
sub
and
and
dec
mov
adc
jmp
xchg
pop
mov
lods
lds
(bad)
jae
hlt
or
or
test
mov
lods
jl
cmp
mov
add
ja
pop
inc
push
test
js
gs
out
inc
mov
adc
xor
(bad)
test
ins
mov
xor
sar
idiv
sbb
push
(bad)
rcr
fistp
jmp
lods
sub
inc
cmp
pop
pusha
sbb
jmp
add
and
mov
or
mov
aad
jns
mov
ins
(bad)
(bad)
popf
or
inc
aad
retf
div
mov
shl
cli
or
mov
lds
dec
arpl
xor
cmp
stos
std
and
adc
xor
gs
fiadd
out
push
and
popf
mov
aaa
xor
mov
mov
popa
stos
xchg
inc
xchg
sub
and
inc
dec
sbb
hlt
loop
add
mov
pushf
cs
cmps
cs
mov
ret
jp
inc
pushf
call
in
jmp
fwait
retf
xlat
jmp
xor
rcr
pop
ret
jmp
std
fbstp
nop
pop
and
cmps
daa
addr16
repz
add
cs
and
call
pop
jmp
int
leave
lahf
mov
or
inc
jnp
js
pop
shl
test
cmps
add
retf
mov
ficom
scas
cli
shl
pop
push
int3
out
mov
add
jmp
scas
push
pop
ret
clc
or
adc
aad
lahf
and
(bad)
hlt
std
pop
jg
fidiv
pop
sti
das
(bad)
cdq
icebp
loop
cld
out
jo
mov
fist
xchg
cmp
push
xlat
xchg
jb
xchg
adc
clc
adc
mov
inc
inc
lahf
xchg
or
mov
inc
sub
jge
stc
jb
fwait
scas
xor
dec
mov
sub
test
test
(bad)
jno
dec
mov
dec
stc
aad
aaa
add
mov
aaa
sti
xchg
sub
push
das
sub
lock
test
adc
mov
mov
in
pop
or
scas
pusha
push
mov
iret
xchg
int
mov
adc
sub
jb
test
pmovmskb
int
mov
ror
rcl
mov
push
inc
int
dec
cld
jecxz
mov
fsubr
ror
xor
sbb
and
push
shl
jns
rol
sub
not
pop
repz
xchg
pop
mov
push
add
call
and
jbe
mov
ret
xchg
nop
xor
out
xlat
xchg
movs
call
sub
jnp
mov
addr16
pop
push
out
jl
xchg
cmps
jae
mov
mov
xor
je
sub
xor
pop
retf
cwde
pop
ss
stc
movs
mov
out
iret
jmp
fistp
pop
rcr
in
scas
push
lds
jmp
gs
lock
xchg
sti
and
cwde
in
push
mov
sbb
push
or
repnz
mov
arpl
cdq
adc
xchg
dec
mov
sbb
sbb
pop
cmc
mov
call
call
xchg
xor
sub
sub
dec
jae
xor
sub
xor
jmp
jmp
es
jge
imul
pop
(bad)
es
fbstp
call
popf
(bad)
ja
out
adc
cmps
mov
call
mov
or
jne
lds
sahf
fisub
and
mov
out
pop
or
add
test
sbb
mov
sub
push
inc
lods
pushf
in
mov
and
mov
xchg
mov
inc
scas
es
outs
outs
out
add
ja
daa
mov
scas
and
sbb
or
jnp
enter
adc
icebp
ficomp
inc
cmps
fisub
imul
push
cdq
stos
outs
outs
mov
(bad)
enter
pop
dec
js
push
jecxz
std
sbb
pop
int
jae
xchg
dec
adc
in
stos
fadd
movs
jl
loopne
mov
cmps
cmp
inc
jbe
das
xor
outs
xor
mov
cs
cmc
xor
mov
sub
or
test
mov
mov
jo
dec
aam
cld
call
mov
fmul
jnp
and
mov
push
mov
inc
addr16
jmp
push
mov
inc
inc
xchg
aas
or
dec
sbb
sahf
push
and
fsub
fldpi
mov
cmp
pop
out
imul
sbb
sub
adc
(bad)
xor
jno
push
or
and
shr
inc
xchg
into
lea
sbb
push
adc
adc
cli
cmp
popf
inc
pop
pop
xor
mov
add
lods
(bad)
jmp
leave
or
adc
inc
js
pop
sub
or
jmp
scas
cdq
dec
(bad)
inc
xor
sbb
into
(bad)
imul
int
push
ror
in
popa
and
xor
and
movs
iret
pop
mov
xor
test
push
or
mov
fist
bound
push
retf
adc
in
inc
hlt
add
imul
sub
ror
xchg
sahf
push
sbb
adc
rol
stc
inc
mov
sti
xor
imul
pop
push
inc
xchg
dec
sub
adc
or
or
mov
rcl
push
mov
loop
push
and
cwde
shl
add
iret
cwde
cmps
jl
lock
xchg
mov
add
and
sub
push
aam
mov
and
mov
mov
es
add
sbb
popa
out
adc
icebp
sub
out
pusha
xor
into
mov
xlat
dec
xchg
sub
stc
retf
mov
fwait
mov
sbb
mov
jmp
pushf
sbb
mov
int3
push
shl
mov
jge
aad
pop
mov
(bad)
mov
popa
mov
out
cmp
call
mov
call
test
push
pop
and
cmp
pop
pusha
add
mov
pop
test
outs
stos
fadd
cmp
stos
xor
xor
pop
mov
push
and
xchg
fwait
movs
les
inc
cmp
push
mov
jle
jne
clc
mov
imul
adc
ins
push
jecxz
sahf
inc
pop
repnz
jmp
repz
inc
or
(bad)
cld
ret
jo
ds
cmp
sbb
add
call
icebp
and
fbld
xchg
in
push
xchg
ss
repnz
xor
scas
mov
mov
jns
cs
aam
mov
outs
push
jecxz
fst
xor
outs
xor
retf
cld
loop
cmp
enter
pusha
ja
call
jne
jno
xor
punpckhdq
jno
mov
dec
mov
sub
cdq
iret
xchg
and
rol
scas
or
mov
sub
mov
jo
std
push
ja
xchg
fdivr
fucomi
sbb
ror
test
xchg
(bad)
out
jnp
cwde
(bad)
adc
mov
in
fwait
jl
jp
scas
cmps
mov
mov
stos
pop
imul
imul
inc
imul
inc
leave
and
gs
fld
es
sub
xchg
xchg
sbb
push
and
ins
inc
(bad)
into
stos
lock
inc
and
adc
(bad)
lds
xlat
loope
xor
inc
rcr
push
(bad)
dec
div
jmp
push
sbb
mov
cmc
mov
adc
push
mov
push
out
call
in
es
cld
aas
pop
inc
cwde
addr16
jg
call
mov
pop
fist
fxch
add
arpl
movs
push
jmp
pop
ds
rcl
icebp
or
inc
call
mov
push
dec
pusha
sbb
sbb
frstor
ret
cmps
loope
data16
xor
and
jmp
sub
inc
ret
add
fld
pusha
cld
bound
movs
xor
xchg
je
mov
in
inc
dec
mov
push
repz
cmps
pusha
dec
mov
aad
sar
loopne
shr
subps
repz
rol
je
pop
scas
test
mov
fdivr
pop
lock
mov
es
fwait
adc
pop
stc
out
sbb
stos
push
xchg
clc
outs
inc
push
xchg
lea
es
mov
outs
pop
shl
inc
xchg
sub
mov
mov
das
cmps
pop
retf
mov
and
rol
in
pop
or
and
mov
outs
xchg
stos
adc
adc
repz
mov
imul
shl
idiv
mov
loop
repnz
xchg
adc
sub
fcmovne
ss
mov
sub
pushf
sbb
pop
push
movs
push
gs
jl
js
push
and
jmp
js
lea
fsubrp
fcom
sub
stos
stos
pop
xchg
and
mov
mov
ds
in
stc
mov
mov
inc
cmps
mov
jp
(bad)
push
cmps
sub
xchg
adc
mov
mov
in
push
dec
retf
sar
loopne
test
ret
dec
enter
dec
enter
fsubrp
mov
rcl
pop
cmp
in
mov
jns
call
adc
in
xor
add
ds
ror
ror
shl
jp
bound
or
(bad)
outs
jnp
out
mov
sbb
je
fstp
mov
pusha
mov
pop
and
push
xchg
cli
std
cdq
pop
mov
fdiv
add
fidivr
jnp
sar
call
sub
pop
push
xchg
cdq
mov
fs
pop
pop
and
test
xchg
cld
cmps
inc
jge
jmp
cmps
pop
mov
mov
ja
test
adc
sar
or
jg
fidivr
mov
sbb
add
(bad)
popf
adc
xor
es
sbb
pop
ds
lock
cmp
cmps
xchg
dec
movs
mov
mov
retf
mov
adc
jns
jb
popf
(bad)
je
mov
stc
cmp
dec
xchg
and
fimul
mov
test
xor
mov
jge
mov
mov
(bad)
mov
repnz
mov
cmc
clc
stos
adc
pusha
xchg
loop
mov
push
push
lea
outs
ret
stos
sbb
push
enter
jp
jbe
cwde
or
neg
mov
pop
scas
push
rol
mov
scas
mov
ins
lea
pushf
lahf
lahf
pop
lods
cmp
pop
jg
add
inc
js
inc
or
xchg
xchg
int
ins
xor
mov
out
mov
(bad)
push
mov
scas
shl
test
push
aaa
push
loopne
out
rcl
scas
xchg
imul
ins
pop
mov
je
lea
hlt
sub
adc
mov
in
jge
adc
pop
out
aam
mov
jl
cdq
push
mov
push
mov
dec
mov
(bad)
push
repz
fmul
pop
stos
sub
fbld
or
and
add
mov
into
in
push
ret
std
cmps
(bad)
stos
jb
push
jmp
test
and
pop
je
inc
outs
pop
fnstenv
mov
lods
push
les
(bad)
mov
pushf
dec
pop
shl
mov
gs
inc
xchg
sbb
sbb
enter
add
xlat
shl
inc
out
pop
jmp
jno
dec
inc
and
adc
das
cld
adc
jmp
stos
int
mov
cmp
pushf
fsincos
mov
rcl
cmps
out
fdivr
sub
xchg
cmp
cmp
std
out
ss
and
stos
sub
and
pop
push
xchg
xor
push
lods
and
or
call
adc
xchg
mov
push
pop
sub
ret
push
enter
inc
fwait
sbb
or
mov
inc
mov
pop
mov
daa
ins
jnp
loope
adc
cmp
add
sub
sub
std
not
out
jne
lock
sbb
jo
cmc
push
pop
ins
adc
call
in
or
pusha
retf
xor
not
cwde
cmp
mov
xor
in
dec
cmp
and
fisttp
fcomip
(bad)
sti
mov
jmp
or
mov
and
or
loop
hlt
pusha
and
jmp
pop
inc
mov
sti
clc
call
inc
or
adc
out
dec
dec
mov
or
lea
xchg
jle
sub
pop
loop
mov
cmp
call
lods
dec
or
pop
leave
bound
ja
sub
push
js
jmp
pusha
mov
sbb
mov
int3
cmp
data16
cli
mov
xlat
or
pusha
dec
mov
out
mov
dec
fst
xchg
cwde
jmp
lahf
mov
out
repz
ror
and
adc
add
les
jg
adc
es
jmp
loop
inc
pop
sub
pop
imul
pop
pop
jns
xor
nop
sbb
cli
in
ret
sub
mov
shl
daa
inc
rol
push
loopne
cmp
addr16
inc
je
xchg
mov
push
mov
ds
jnp
loop
fidivr
ret
aaa
retf
push
std
sub
push
pop
mov
mov
stos
lods
xchg
xor
xchg
mov
push
out
cmp
fisubr
repnz
je
js
fs
jbe
jmp
cdq
mov
xor
add
cmp
icebp
mov
dec
repnz
test
and
xchg
mov
movs
or
adc
out
push
imul
inc
jge
pop
adc
mov
cli
stos
cmp
cmp
mov
mov
popa
loop
nop
aad
add
sbb
scas
outs
fstp
and
popa
cdq
sbb
pop
std
push
addr16
mov
in
push
mov
mov
ds
(bad)
(bad)
xchg
fcom
in
ja
mov
mov
repz
dec
jmp
das
jge
fdivr
or
(bad)
and
mov
or
cmp
arpl
jno
dec
cmp
jae
mov
clc
mov
and
imul
cwde
inc
dec
cmp
jg
test
test
mov
les
(bad)
dec
inc
mov
xor
outs
fwait
aas
push
mov
xor
into
nop
cmp
mov
clc
and
pop
xchg
in
fidiv
nop
jae
call
adc
mov
sub
lods
cmp
test
pop
loope
stos
push
sub
sub
cmps
aam
add
add
lods
out
ret
add
popf
push
in
out
add
aad
sbb
sub
movs
loopne
or
(bad)
jg
dec
xchg
cs
jge
and
sbb
or
jbe
cmp
jae
(bad)
inc
aad
xor
outs
push
out
ror
jmp
sub
ja
pop
cmp
jae
or
xor
sahf
mov
into
clc
neg
(bad)
jmp
je
mov
rcl
adc
sub
mov
jmp
ds
mov
jp
retf
sub
stc
mov
inc
ds
push
cdq
cs
pop
das
inc
or
cmp
imul
xor
dec
iret
push
lea
fnstenv
(bad)
je
and
and
mov
scas
in
and
cs
push
push
jle
mov
cmps
daa
and
mov
pop
mov
jne
xchg
xchg
push
loop
retf
sahf
addr16
xchg
imul
cmp
push
lahf
mov
adc
cmc
pop
cmp
outs
enter
lea
leave
shl
push
addr16
(bad)
loop
or
xchg
mov
push
int3
mov
xor
aaa
out
jmp
push
inc
out
cdq
test
and
mov
outs
dec
add
das
sub
cmp
call
jbe
stos
xchg
dec
pop
rcl
outs
sbb
iret
jl
xchg
push
xchg
xchg
add
iret
test
shr
adc
dec
sub
xchg
add
(bad)
sar
jmp
shl
adc
dec
mov
or
popf
mov
mov
fsubp
xor
out
(bad)
fstp
outs
retf
inc
sbb
lea
loopne
lds
(bad)
repnz
out
fisttp
mov
xor
jb
outs
xor
scas
fwait
iret
push
stc
aas
ds
mov
outs
inc
jge
aaa
in
xor
mov
cdq
cmp
fs
mov
ins
pop
(bad)
(bad)
sub
pop
inc
shl
(bad)
cwde
push
(bad)
dec
rcl
out
repnz
test
loop
clc
mov
stos
outs
imul
repz
add
cmp
(bad)
push
sub
jmp
sub
stos
mov
jge
stos
xchg
aad
dec
push
(bad)
cmp
in
mov
push
je
sar
jp
lods
adc
cmp
dec
adc
outs
stos
aas
cdq
sbb
outs
mov
jmp
sbb
loopne
dec
sub
jbe
shl
fadd
loopne
loopne
punpckldq
mov
aad
or
sbb
fstp
mov
stc
data16
push
mov
daa
jmp
inc
sub
js
dec
rol
daa
ret
mov
out
jne
xlat
jmp
mov
mov
rol
xor
mov
pop
and
push
push
ds
mov
mov
xor
push
cdq
pop
js
pushf
pop
dec
fidiv
fdivr
mov
mov
mov
daa
and
push
push
inc
ins
xor
jle
or
enter
push
es
stc
fdiv
jge
das
sub
mov
aad
jo
or
jae
sub
icebp
dec
scas
in
repz
add
dec
jne
fimul
cdq
test
out
ss
mov
fs
sbb
xlat
dec
neg
fadd
cmps
cmp
inc
mov
push
inc
jnp
pushf
pop
sbb
push
mov
xchg
pop
pusha
cmp
fld
add
aad
in
call
imul
add
mov
cmp
addr16
or
jl
enter
and
cmps
cmp
lock
adc
ret
(bad)
mov
scas
shl
push
dec
daa
inc
push
mov
leave
mov
rol
bound
jl
mov
mov
or
mov
mov
fild
(bad)
jecxz
not
or
sbb
call
lea
std
add
sbb
frstor
xchg
mov
int
dec
adc
test
mov
test
stc
push
adc
mov
mov
cmp
or
cmps
push
xor
fcomp
stos
xchg
cwde
sbb
loop
inc
aas
and
jae
xchg
movs
dec
push
adc
and
sti
adc
(bad)
jmp
imul
and
and
das
xchg
jmp
enter
out
loope
adc
dec
mov
(bad)
fild
xlat
mov
fcomp
gs
push
fsub
xor
or
ja
in
or
add
or
mov
push
repz
push
jp
int3
mov
out
sbb
push
(bad)
(bad)
call
xor
shr
aaa
push
sbb
push
push
cmp
mov
pop
adc
cs
push
sub
(bad)
sbb
ins
push
push
push
push
mov
(bad)
fistp
mov
repnz
push
test
dec
dec
add
fwait
daa
ins
or
mov
jge
jge
mov
cmps
das
sbb
mov
mov
lods
sub
and
repnz
dec
mov
and
imul
inc
push
pop
out
jo
push
ja
pop
pop
movs
fs
int3
fwait
ins
or
fwait
lea
mov
unpckhps
movs
pushf
out
sbb
daa
je
out
pop
test
xor
pop
inc
cwde
adc
jmp
mov
nop
movs
sub
loop
adc
pop
jge
int
(bad)
mov
mov
int3
mov
ins
cld
mov
imul
inc
mov
jl
pop
ret
push
je
rol
mov
loopne
mov
cmps
icebp
xor
jg
cld
push
aaa
out
push
lods
test
loop
out
jno
sar
aad
fwait
xchg
mov
dec
dec
rcr
jp
and
mov
mov
fdivr
and
(bad)
pop
push
inc
and
jecxz
(bad)
inc
aaa
or
cli
mov
dec
(bad)
frstor
mov
fisub
cdq
xor
pop
int
sub
movs
out
sbb
add
scas
cwde
mov
mov
retf
dec
daa
pusha
pop
or
pop
jmp
lods
sub
ficomp
mov
aam
push
or
lods
sub
jb
pop
dec
leave
(bad)
movs
xchg
out
not
jae
scas
je
mov
mov
nop
xor
mov
gs
cmps
ja
dec
repnz
fisttp
and
(bad)
bound
xchg
and
sbb
sbb
stos
iret
pushf
je
and
arpl
sahf
std
dec
adc
aaa
add
add
cmp
cmp
xor
and
jle
into
imul
cmp
dec
mov
movs
xlat
aad
test
pop
imul
test
out
inc
add
in
pop
cdq
sub
or
test
sub
xor
xchg
sub
(bad)
cli
xchg
loope
and
pop
pop
out
repz
inc
and
pushf
repnz
test
and
xor
jno
or
inc
hlt
and
aaa
or
adc
leave
ins
dec
inc
daa
mov
pushf
cmc
in
jne
int3
mov
fiadd
jbe
jae
add
hlt
fcompp
in
fld
pusha
clc
jmp
in
xchg
xor
dec
cwde
adc
(bad)
(bad)
cld
inc
out
xor
fstp
sahf
mov
sub
out
cwde
ret
push
and
movs
loopne
nop
jmp
fiadd
int3
xor
push
inc
push
nop
jo
cld
mov
sub
mov
xchg
cld
popa
or
add
xchg
popf
or
pop
jg
pop
rcl
out
xchg
out
div
test
jo
outs
movs
pusha
xchg
cdq
xchg
out
jmp
pop
das
cmp
add
(bad)
and
ret
das
mov
mov
xor
sbb
mov
xor
push
and
xchg
popf
pop
sbb
outs
jae
fwait
out
cmp
lock
mov
popa
popf
retf
loop
adc
fwait
ret
adc
rol
pop
ins
add
mov
push
mul
xchg
neg
test
in
inc
cmp
xchg
sbb
es
fisttp
cmp
sub
push
aaa
imul
jp
inc
adc
repnz
and
test
jbe
or
dec
mov
adc
popf
sub
push
adc
sub
or
cmp
push
mov
adc
dec
in
pop
ins
xor
cs
mov
imul
out
clc
mov
icebp
gs
dec
jae
mov
pop
mov
lods
movs
jmp
xlat
out
mov
or
inc
pusha
aad
stos
push
adc
sbb
outs
and
xchg
jg
xchg
and
and
and
push
sub
sbb
call
outs
push
inc
and
leave
(bad)
sahf
ja
push
sub
dec
(bad)
xchg
sar
cmp
xchg
xlat
sbb
adc
inc
adc
stos
retf
and
lods
pop
ss
out
mov
inc
(bad)
cmp
cmp
dec
jecxz
stc
into
and
(bad)
lock
scas
inc
cmps
fadd
clc
cmp
inc
xor
out
cli
outs
lea
ins
int3
lods
xor
inc
lods
daa
mov
(bad)
out
imul
hlt
xchg
out
push
(bad)
fadd
fld
mov
mov
xchg
and
or
scas
int3
sbb
mov
jmp
fwait
fs
xor
inc
into
add
mov
or
outs
push
fnstsw
mov
imul
jmp
cmp
and
pop
dec
dec
call
push
sub
sbb
sbb
mov
call
lods
call
(bad)
call
ret
(bad)
pop
movs
jmp
es
(bad)
xchg
sbb
stos
cli
add
(bad)
in
inc
stos
aaa
jne
cwde
mov
mov
adc
xchg
adc
shl
fild
sbb
mov
retf
movs
jecxz
in
data16
(bad)
ja
cmc
hlt
aam
and
sbb
push
or
(bad)
cmp
xor
inc
(bad)
(bad)
and
loope
test
in
push
inc
das
ret
clc
add
push
call
xchg
test
cmps
iret
pop
mov
stos
pop
or
inc
movs
lea
push
xchg
mov
leave
fld
mov
ds
call
mov
mov
inc
out
inc
jns
call
or
xor
jmp
cmp
or
dec
mov
lea
loope
push
mov
jg
mov
mov
imul
je
adc
inc
mov
add
xchg
outs
repnz
mov
and
inc
mov
(bad)
in
mov
popf
stos
mov
dec
pop
or
scas
shl
shl
lods
mov
mov
and
sub
leave
and
jge
dec
jmp
frstor
adc
es
dec
gs
dec
adc
and
movs
stc
mov
jo
jge
xor
cmp
dec
push
out
fsubr
rcl
scas
iret
jl
pop
cmp
outs
mov
jmp
rol
mov
shr
xchg
jae
in
pushf
adc
push
sahf
push
push
or
mov
jae
mov
add
xchg
test
adc
adc
daa
push
ror
fidiv
repz
aam
sahf
add
mov
dec
pop
lea
xlat
pop
or
sbb
xchg
fs
adc
test
mov
xchg
cdq
sbb
add
ret
movs
xor
sub
cdq
push
pop
les
outs
int
mov
das
hlt
xor
sahf
push
dec
fld
push
(bad)
mov
out
jmp
gs
pop
imul
sbb
sbb
loopne
adc
jmp
imul
xchg
mov
jns
sbb
ins
div
or
adc
pop
test
rcr
ss
adc
(bad)
(bad)
out
in
cmc
stos
icebp
mov
mov
pop
jmp
jbe
or
and
aad
popf
add
add
inc
jbe
lods
or
jnp
lods
xchg
xor
xor
push
test
popf
(bad)
leave
ds
jl
icebp
into
jne
sub
add
cmp
xchg
mov
cmp
xor
test
xchg
les
in
inc
jmp
js
imul
mov
stos
jns
test
jmp
daa
retf
push
or
cmc
xchg
mov
xchg
es
retf
pop
out
rol
ins
lods
push
rcl
aad
and
iret
shl
iret
push
scas
inc
dec
arpl
repz
sbb
popa
add
cmp
xor
cmp
stos
jl
rol
in
mov
hlt
enter
loopne
pop
fisttp
outs
push
inc
dec
fdiv
push
or
bound
in
sbb
mov
add
inc
push
or
arpl
pop
or
inc
cmc
jns
jecxz
and
pop
pop
mov
stos
xchg
jl
push
fs
mov
mov
int
sub
cli
sti
xchg
call
je
sub
cmps
rcr
push
retf
popf
sbb
xor
inc
int
aas
jle
inc
push
rcr
fmul
shr
mov
or
in
bound
dec
sbb
pop
in
jb
xor
mov
shl
div
mov
mov
xor
xlat
xchg
test
sbb
stos
mov
stc
lods
iret
xchg
mov
jo
inc
mov
ds
inc
push
mov
iret
cmp
fisttp
jecxz
call
adc
imul
stos
imul
lock
fistp
pop
es
outs
aam
fmul
cdq
mov
xchg
mov
ins
mov
push
cwde
mov
pop
or
out
mov
and
sbb
in
out
(bad)
cmp
sbb
sbb
out
mov
xlat
pop
mov
and
and
inc
or
adc
loope
pop
jo
cmp
sub
and
pop
jmp
ins
push
(bad)
loope
mov
fld
addr16
jge
int3
mov
sbb
cwde
pusha
jmp
adc
sahf
inc
hlt
mov
dec
(bad)
fld
stos
jb
push
xlat
out
add
adc
(bad)
pop
jne
jmp
mov
iret
mov
clc
mov
fwait
push
jmp
stc
sub
das
imul
push
xor
sub
xchg
pop
aaa
cld
and
bound
maskmovq
mul
dec
clc
mov
pop
jge
inc
dec
sbb
pop
add
mov
(bad)
mov
sub
mov
add
out
xor
and
data16
mov
or
and
sub
stos
scas
cmc
cmp
adc
loope
inc
fimul
cmp
mov
lock
shl
fucomip
dec
pusha
fnsave
push
cmps
cmp
inc
pop
out
addr16
pop
adc
cmp
and
icebp
out
iret
inc
mov
sub
sbb
mov
jmp
mov
inc
dec
loope
ret
push
xchg
jne
add
cmp
sub
bnd
nop
fdiv
or
out
add
test
pop
sub
xor
(bad)
or
inc
movs
imul
jge
pop
aaa
lock
cmp
out
loopne
test
iret
jnp
ret
add
pop
dec
movs
and
or
sti
stc
cdq
popa
jmp
jmp
inc
icebp
sub
sbb
call
(bad)
not
jne
adc
xchg
aaa
mov
retf
jmp
cmp
(bad)
das
pop
test
pop
mov
add
mov
int3
lods
pop
in
xor
and
mov
push
mov
inc
xchg
mov
mov
cli
inc
mov
push
inc
and
jmp
mov
ret
ins
and
push
jle
xchg
dec
pop
push
inc
dec
add
nop
jmp
xchg
cli
icebp
test
push
sbb
or
sbb
ror
imul
push
push
fisttp
repz
sbb
or
xchg
pop
hlt
imul
jmp
jl
lods
arpl
mov
xchg
test
and
out
cmps
adc
ror
xchg
xchg
pop
mov
add
loop
add
popf
xor
push
in
out
sbb
in
jp
xchg
inc
inc
idiv
(bad)
loopne
and
inc
cmps
mov
mov
in
and
(bad)
outs
das
idiv
in
sbb
jb
adc
mov
and
pop
inc
jae
loope
xchg
test
add
mov
lahf
arpl
nop
push
cmps
stc
push
(bad)
js
movs
repnz
mov
xor
adc
bound
aad
xor
daa
jne
repnz
movs
xor
je
scas
cmp
or
mov
pop
pop
add
xor
adc
(bad)
dec
(bad)
or
jl
addr16
stc
retf
push
imul
shl
mov
aas
and
arpl
in
repz
jmp
xchg
pop
gs
cmps
rol
shr
cmp
inc
icebp
and
pop
shl
adc
mov
mov
pop
ins
sbb
jmp
push
gs
dec
pop
mov
in
adc
std
fidivr
cmp
xor
loop
jns
pop
jne
les
mov
popf
xchg
dec
add
sbb
lock
push
xor
xchg
mov
out
sbb
mov
xchg
or
aam
jns
inc
adc
ds
lahf
dec
loop
sub
call
clc
or
pop
push
outs
mov
pop
sti
cs
and
pop
lock
push
cmp
test
add
in
loop
std
xchg
push
mov
xchg
pop
movs
pop
mov
sbb
out
adc
scas
outs
jmp
aam
add
stos
cmp
cli
mov
sbb
pop
mov
sahf
jp
sbb
sbb
sbb
adc
push
in
neg
popa
add
add
mov
repnz
or
pop
or
loopne
sbb
inc
push
in
add
je
in
sbb
(bad)
out
fst
cmp
inc
iret
shr
pop
cmp
cwde
jo
xor
xor
sbb
ins
mov
sbb
cmc
inc
dec
adc
push
pop
retf
sbb
loope
fld
jmp
mov
cmp
xor
push
aas
mov
and
in
xchg
(bad)
mov
popf
inc
jmp
push
iret
xor
jo
cld
pop
pop
sub
inc
aad
ret
jmp
dec
mov
xchg
xchg
mov
xor
inc
popa
mov
dec
push
xor
(bad)
xchg
adc
add
mov
in
add
pop
xor
dec
pop
inc
hlt
dec
addr16
or
xor
je
and
in
stos
and
out
mov
pop
or
dec
stc
bound
aas
inc
(bad)
sbb
test
jnp
pop
xchg
fs
inc
(bad)
retf
test
xor
push
std
out
mov
sub
test
mul
add
inc
ja
pop
(bad)
(bad)
pushf
sub
nop
xchg
jne
and
aam
xor
pop
out
outs
push
cmp
imul
pushf
loope
int
push
fwait
push
xchg
pop
fucom
iret
jno
shl
pop
pop
fs
mov
nop
dec
popa
std
stos
mov
mov
cmc
call
call
ret
into
jle
mov
neg
cmps
inc
cdq
push
cwde
pop
in
nop
(bad)
(bad)
push
retf
adc
call
out
sbb
pop
bound
mov
or
mov
gs
daa
mov
scas
push
call
dec
dec
addr16
jmp
(bad)
jl
jne
mov
sub
mov
jne
shr
dec
xor
pop
mov
lock
ret
jbe
inc
imul
adc
cld
jb
in
subps
dec
fsubr
pop
stos
add
inc
xchg
mov
nop
out
cli
fstp
(bad)
fiadd
out
push
rol
inc
mov
(bad)
adc
ret
jmp
xchg
loop
mov
daa
cmc
mov
xlat
mov
push
div
pop
pushf
movs
jb
sub
lds
xor
xor
loopne
leave
dec
dec
imul
mov
mov
push
xor
add
mov
dec
jbe
mov
lahf
mov
push
cmp
mov
aam
lock
adc
fcom
pusha
dec
lods
std
cli
ins
fdiv
cmp
dec
shl
bound
mov
push
or
mov
clc
cmps
or
and
addr16
xchg
jl
and
dec
out
das
sub
fsub
adc
retf
jecxz
data16
dec
jb
in
inc
dec
call
outs
pop
adc
mov
jne
nop
inc
mov
lods
push
ins
jl
ret
dec
cmps
pop
imul
xchg
inc
not
inc
sbb
add
cs
scas
cli
xor
xor
mov
mov
mov
xchg
imul
or
mov
hlt
cmps
pop
mov
pop
xchg
test
fmul
mov
loopne
or
sbb
sbb
stos
stos
or
pop
or
js
jl
rol
xor
jle
data16
jbe
mov
xor
(bad)
sbb
pop
jae
fisttp
mov
xor
stos
inc
push
jmp
aam
xchg
pop
sbb
adc
xor
jg
inc
loope
mov
adc
pop
lods
movs
repz
cmp
pop
scas
fcmovnu
or
iret
ss
rol
out
and
imul
xor
(bad)
fild
xlat
out
ss
sub
retf
test
sbb
adc
sahf
cmp
push
fstp
or
jnp
fnstcw
jle
or
out
ss
leave
xor
dec
inc
and
or
mov
int3
mov
sbb
out
jne
mov
popf
xchg
fmul
out
jne
inc
dec
ret
dec
stos
or
cmp
and
mov
adc
jnp
dec
pop
lahf
xchg
push
mov
aas
por
dec
lods
popa
cs
int
lods
mov
xchg
movs
idiv
push
retf
cmc
stos
or
jno
out
adc
push
out
pop
add
push
push
cmp
push
jp
popf
jo
mov
mov
pop
mov
dec
ja
add
xchg
data16
shl
adc
in
ins
(bad)
pusha
mov
push
cmp
arpl
jo
pop
ret
out
push
cmp
pop
sbb
or
dec
push
popa
xor
stos
mov
cmp
push
sub
inc
nop
lods
rcl
xchg
leave
jne
mov
mov
pop
mov
ror
mov
or
mov
mov
cmps
dec
and
call
ja
in
push
lods
and
mov
mov
scas
(bad)
jmp
sub
call
pop
jl
loope
push
and
push
xchg
fcom
fstp
jecxz
fsub
adc
shl
push
xchg
popa
ret
lea
mov
xchg
mov
lods
mov
mov
sbb
or
adc
jl
arpl
mov
rcl
ror
jae
iret
add
dec
xchg
adc
call
cmp
jg
test
dec
sub
xchg
test
push
push
(bad)
jl
and
pushf
rol
mov
stc
jmp
push
mov
add
daa
cmps
sub
clc
loope
adc
int
imul
out
xor
leave
jmp
inc
js
in
out
pop
sar
xchg
cdq
loope
mov
mov
(bad)
push
mov
or
adc
dec
add
(bad)
push
retf
jbe
(bad)
stos
loope
push
out
bound
retf
fcomp
rcr
loope
push
std
ficom
jge
sub
xchg
mov
out
add
ret
lock
sbb
pop
cmp
dec
xor
mov
bnd
mov
pusha
mov
div
push
sbb
or
mov
in
mov
nop
fcmovb
sub
cmp
(bad)
cli
mov
enter
lea
mov
mov
sbb
and
mov
(bad)
jmp
jae
push
sbb
push
mov
xchg
aam
fcmovbe
or
in
and
movs
push
pop
popa
and
xor
je
and
sub
daa
jne
xchg
push
(bad)
jp
jle
repz
inc
cmp
adc
(bad)
mov
inc
scas
adc
dec
cwde
and
stos
dec
loop
(bad)
(bad)
fisubr
addr16
outs
push
ja
es
test
imul
mov
std
add
dec
jb
cmp
pop
les
sbb
pop
pop
loope
addr16
jmp
mov
test
ja
mov
shl
push
call
and
inc
int
mov
movs
push
add
sahf
inc
push
xor
(bad)
pop
push
add
add
cli
add
jne
enter
mov
ss
pop
xchg
sar
mov
add
ss
push
mov
cmp
push
repnz
repnz
cmp
jmp
push
cmp
daa
retf
fs
mov
add
dec
xlat
fist
mov
stc
or
sahf
out
sub
stos
stc
movs
inc
out
pavgw
lock
xor
in
adc
jb
not
mov
sub
inc
shr
and
push
xor
call
out
es
fwait
xchg
addr16
jmp
cmps
mov
call
push
fistp
dec
or
sub
adc
leave
ss
js
into
lock
cmp
push
sub
or
or
lahf
mov
inc
repnz
xor
cli
or
sbb
push
or
and
es
cmp
dec
dec
popa
mov
fld
popa
into
mov
mov
data16
jbe
dec
jecxz
es
ss
jmp
stos
(bad)
dec
scas
and
xchg
add
test
sub
pop
xor
scas
push
sub
ds
sub
or
mov
xchg
inc
push
xor
les
and
xchg
ret
or
mov
dec
in
ror
mov
lods
imul
xor
lahf
mov
add
mov
xchg
int
pop
xor
push
add
or
sub
ins
jmp
adc
push
sub
push
adc
int
adc
sub
les
push
movups
xchg
push
inc
cmp
arpl
inc
and
clc
fisttp
mov
clc
inc
pop
pusha
mov
and
add
mov
movs
scas
lods
std
push
push
cmp
pop
adc
leave
mov
jbe
aas
(bad)
aam
jns
bound
jmp
or
loop
jp
test
shl
mov
jno
out
mov
or
jne
test
dec
sti
out
fist
je
inc
inc
xlat
cmps
mov
in
mov
xor
in
scas
or
cdq
push
mov
or
fs
dec
fstp
inc
stos
sbb
mov
sub
cmp
and
arpl
push
jmp
cmp
jmp
lods
or
cmp
in
in
(bad)
add
push
jl
stos
test
mov
lahf
add
sbb
xchg
fnsave
lock
cs
mov
stos
mov
sub
xchg
mov
xchg
aas
and
jno
xor
mov
imul
scas
cs
stc
fstp
repnz
push
push
and
mov
or
in
mov
mov
in
push
rcr
es
outs
or
movs
dec
mov
aam
pop
ret
push
cmp
jmp
xchg
adc
jl
stos
xchg
into
jo
add
pop
aaa
jmp
loopne
pop
movs
ds
(bad)
(bad)
jecxz
pop
mov
daa
ins
xchg
retf
jae
cmp
scas
lds
and
popa
inc
or
jg
stc
or
out
pop
cmp
add
pop
push
mov
movs
stos
jmp
fdiv
sbb
or
sbb
push
dec
jne
adc
imul
xchg
sub
out
mov
jg
cmp
rcl
icebp
cmp
sbb
stos
mov
sub
pop
lock
in
std
mov
icebp
fcom
mov
mov
cmp
cdq
imul
call
sbb
fucomip
mov
or
and
jp
inc
dec
mov
mov
fnstcw
xchg
mov
adc
inc
mov
cwde
jnp
enter
push
jae
or
lahf
out
jb
sar
into
inc
xchg
sbb
jp
sbb
and
dec
outs
add
ds
test
sub
pop
popf
ror
(bad)
push
test
pop
ins
or
mov
pop
sti
aas
movs
dec
enter
and
xchg
mov
(bad)
cdq
sbb
(bad)
scas
jmp
out
lahf
pop
nop
aaa
lock
imul
jae
test
mov
neg
jno
les
mov
cmp
jmp
cs
mov
jge
out
sti
jp
or
jnp
movs
shl
and
cmp
rcr
or
mov
push
or
sub
or
add
jne
and
dec
xchg
cmp
and
movs
das
pushf
add
push
push
jl
icebp
scas
mov
inc
enter
pop
dec
cmp
mov
jbe
adc
stos
or
sbb
jo
aas
push
mov
mov
dec
(bad)
add
jns
repz
cld
repnz
xchg
xor
mov
fld
cmp
mov
xor
jge
ins
ret
push
dec
inc
mov
sahf
enter
(bad)
and
mov
add
fwait
push
cmp
mov
arpl
or
add
das
push
mov
in
(bad)
retf
or
jo
loopne
in
cmp
leave
mov
xchg
mov
adc
pop
popf
mov
jge
(bad)
adc
js
sbb
ret
push
stos
ins
call
repnz
mov
in
add
mov
add
push
(bad)
xchg
dec
push
cdq
in
call
pusha
adc
dec
sub
in
sbb
cs
push
xor
mov
fsubr
ret
adc
jg
in
cmps
jb
pop
pop
(bad)
push
and
jmp
cmps
ret
push
call
ss
outs
sahf
mov
(bad)
mov
pop
xchg
test
pop
xchg
jnp
retf
push
cs
sbb
jns
imul
gs
sub
jo
fst
fist
mov
(bad)
rcr
lock
mov
stos
gs
sub
movs
ss
dec
mov
cs
cmp
in
sbb
in
stos
nop
loope
push
pop
xchg
mov
adc
mov
icebp
mov
fstp
mov
mov
mov
(bad)
sbb
jo
dec
pop
pop
jnp
and
mov
xchg
ins
push
or
mov
cmps
hlt
les
cmp
mov
pop
sti
xlat
adc
in
out
cmp
mov
jbe
jmp
stc
add
or
scas
test
push
mov
ja
jl
push
xchg
repz
out
xchg
mov
mov
fmul
inc
mov
lahf
push
pop
idiv
mov
dec
ret
inc
out
or
mov
push
and
adc
xchg
clc
dec
or
mov
gs
jbe
sub
pop
cld
fdiv
scas
(bad)
mov
mov
mul
in
pop
jno
or
test
mov
inc
mov
fidiv
and
add
ja
sbb
sub
mov
lea
adc
jo
in
bound
jge
xchg
mov
fs
dec
dec
add
add
repz
xor
retf
test
and
xchg
xor
nop
rol
mov
ret
add
mov
or
xchg
xor
dec
loop
in
std
push
sbb
xlat
rcl
jl
adc
scas
stc
movs
pusha
bound
fs
sbb
je
or
test
sbb
mov
pop
pop
in
mov
pop
push
mov
jnp
jno
add
adc
mov
lods
cwde
in
popf
punpckldq
xor
push
js
lea
mov
dec
adc
pop
lods
(bad)
inc
aaa
clc
mov
mov
jp
mov
sbb
fst
push
mov
inc
pop
jmp
sub
adc
outs
jecxz
mov
inc
add
repz
dec
loop
add
out
stos
call
xor
jns
les
or
cmp
daa
(bad)
call
jge
adc
push
retf
sub
jecxz
ret
sbb
or
movs
ret
pop
adc
inc
push
rcl
dec
adc
dec
push
pop
adc
call
adc
dec
adc
mov
dec
cmp
xchg
leave
cdq
data16
push
mov
fadd
cmp
push
cld
addr16
ss
int3
loop
dec
popa
push
imul
maskmovq
movs
in
mov
xchg
add
push
add
sar
pop
mov
mov
mov
push
xchg
(bad)
es
iret
loop
movs
pop
cmp
add
mov
stos
xor
xor
pop
test
sub
dec
push
cwde
adc
retf
out
(bad)
pop
lahf
jne
je
adc
dec
dec
mov
scas
jnp
outs
(bad)
lea
neg
pop
int3
mov
xchg
pop
jg
ss
push
loop
mov
loopne
mov
lods
push
loopne
mov
mov
and
pushf
xor
fmulp
sar
jno
pop
loope
loope
ja
mov
dec
fwait
dec
xor
scas
leave
dec
cmp
lock
std
cmp
stos
or
cmp
inc
cmc
push
jne
repz
and
cmps
adc
inc
jge
mov
cwde
bound
mov
xchg
adc
in
mov
les
div
sahf
dec
pushf
outs
dec
adc
or
jmp
and
xchg
pop
jae
mov
out
lahf
mov
outs
sar
adc
inc
jne
dec
mov
in
xchg
(bad)
popa
cmp
stc
aas
inc
js
or
idiv
movs
dec
cmps
inc
jo
ret
add
ficomp
shr
fld1
enter
inc
inc
xor
in
out
test
out
fldenv
adc
inc
mov
(bad)
fdivp
(bad)
jns
test
pop
iret
lds
leave
or
sub
lods
cmp
out
fcom
mov
sti
in
aam
das
or
cmp
ins
push
stos
or
dec
mov
lock
push
jno
sbb
jmp
and
xor
fwait
rcr
test
sbb
cld
sub
jmp
mov
pop
(bad)
nop
(bad)
rol
mov
sar
mov
adc
mov
(bad)
hlt
test
inc
retf
sbb
(bad)
out
clc
pop
mov
fdivr
sti
movs
sbb
loop
jno
cdq
in
rcr
in
lahf
mov
push
bound
and
daa
(bad)
xor
or
add
dec
mov
sbb
fadd
add
or
test
xchg
cmp
xchg
push
test
xor
cs
or
mov
jg
or
jge
test
or
cli
fs
loope
xchg
rcr
sbb
lahf
dec
test
cmp
add
jne
js
pusha
pop
dec
xchg
sbb
sub
dec
lock
or
sti
ja
cmps
xor
inc
movs
hlt
push
lods
xlat
xchg
setae
repnz
fcomip
adc
sub
mov
call
push
nop
inc
jmp
jo
dec
add
leave
hlt
adc
add
rcr
mov
addr16
xchg
mov
cmp
push
push
div
or
imul
clc
mov
nop
mov
in
push
push
fs
popf
xor
hlt
neg
adc
push
imul
cmc
aaa
cmc
rol
sbb
aaa
adc
in
inc
jnp
lods
mov
pop
mov
dec
adc
jmp
(bad)
icebp
nop
inc
jo
sub
dec
xor
in
arpl
mov
adc
gs
add
ret
lods
or
jne
pop
mov
pushf
xor
adc
mov
fmul
dec
mov
int3
cs
mov
adc
clc
pop
mov
(bad)
mov
mov
sbb
cwde
pusha
sbb
sar
or
mov
int3
popa
cmps
out
cwde
sbb
fbld
mov
cmp
jmp
and
movs
neg
aam
ins
call
push
cmps
mov
push
xchg
add
test
jmp
daa
jne
enter
adc
xor
sbb
inc
cs
dec
das
push
inc
mov
cmp
or
shr
int
mov
push
cmp
sar
pop
mov
dec
int3
and
out
and
das
jecxz
push
fstp
add
leave
popa
imul
jns
push
push
jb
dec
cli
dec
lods
jl
sbb
or
jmp
sbb
sbb
retf
mov
repz
xor
xor
or
(bad)
pop
out
neg
cmp
out
push
cld
imul
pop
stos
add
mov
sbb
fcomp
mov
test
cwde
rcr
mov
adc
and
push
and
fisttp
mul
pushf
jbe
jne
xchg
push
int3
out
mov
jns
jp
xlat
xor
cmp
cmps
mov
scas
pop
cmp
adc
shr
out
mov
int3
(bad)
(bad)
(bad)
pop
enter
xor
fwait
cli
scas
mov
fstp
cmp
jnp
dec
push
push
hlt
ins
neg
leave
mov
pushf
das
inc
repz
mov
inc
les
lahf
sbb
sbb
cmp
or
mov
mov
mov
lods
rcl
xor
(bad)
(bad)
sub
out
mov
mov
adc
pusha
add
pop
mov
enter
dec
aad
(bad)
jecxz
div
imul
jo
inc
jne
pop
jnp
adc
and
lods
pop
adc
mov
(bad)
add
dec
add
inc
jp
mov
xor
adc
dec
nop
mov
mov
or
cmp
inc
stc
xlat
sbb
add
jo
dec
mul
dec
clc
push
(bad)
mov
inc
xchg
pop
popa
dec
push
out
fbstp
mov
out
call
repnz
int3
xchg
xchg
leave
mov
jno
pop
mov
loopne
movs
ficomp
inc
mov
pop
or
sub
cs
fcmovnbe
adc
fst
dec
inc
mov
sahf
bound
mov
push
sbb
add
aaa
cmp
cli
shl
push
pushf
sub
cld
aas
inc
and
sbb
mov
xor
push
test
shl
out
test
imul
sub
repz
inc
sub
pop
mov
cmp
mov
xchg
mov
jne
cmp
outs
mov
enter
lahf
dec
mov
test
clc
enter
xor
lods
std
scas
push
inc
mov
push
mov
dec
pop
call
inc
and
xchg
jno
xchg
ins
ret
rcl
iret
push
ret
addr16
mov
int
lock
into
pushf
and
addr16
shr
jmp
push
jl
and
push
ftst
xchg
cmp
fst
jne
jae
or
mov
es
sbb
popf
stos
pushf
cmps
outs
mov
dec
call
pop
je
and
test
jne
jecxz
mov
daa
jge
les
lock
xchg
repz
xchg
add
push
or
sbb
rol
(bad)
les
retf
dec
dec
lea
adc
mov
btc
cmp
add
repnz
jno
imul
push
inc
in
pop
add
jnp
jecxz
mov
in
jae
stos
addr16
int
aaa
es
mov
(bad)
aas
stos
xchg
gs
and
lods
or
jbe
je
and
adc
cld
div
add
into
cmp
adc
pushf
ja
or
repz
and
mov
std
sbb
jb
popf
xor
adc
jns
fs
scas
in
test
sbb
popa
pop
mov
sbb
mov
mov
(bad)
mov
push
push
jne
dec
imul
cs
push
into
mov
sbb
das
js
push
out
adc
cmp
mul
add
sti
cmp
popa
cwde
outs
hlt
mov
sbb
or
imul
mov
xchg
or
stc
push
movs
daa
cmp
cmc
pop
push
cmp
je
adc
hlt
or
sbb
push
stos
in
repz
in
sahf
stos
xchg
cmp
int3
sbb
mov
dec
je
lahf
sbb
lock
fs
cmp
es
mov
call
add
pop
pusha
pop
pop
or
xor
mov
push
cmp
cmp
xor
arpl
das
rcr
rol
adc
mov
shr
inc
cmp
rcr
inc
rcr
add
fiadd
imul
sub
mov
cli
mov
pop
sbb
fld
and
in
test
les
mov
jbe
xor
add
pop
cmp
cmp
dec
and
rcr
xchg
add
mov
mov
aad
in
out
inc
sar
fcmovne
push
push
repz
loopne
call
les
cmp
push
sbb
(bad)
int3
dec
std
xor
rcr
pop
int
movs
pop
cmc
sbb
mov
inc
mov
dec
mov
iret
dec
and
hlt
std
or
push
and
stc
cli
mov
test
mov
and
imul
mov
mov
xchg
enter
fdiv
push
int
mov
lahf
xor
jae
imul
xchg
icebp
fmul
ret
add
and
int
ret
and
pop
add
push
mov
jbe
adc
add
xchg
pop
inc
jne
add
pusha
dec
sbb
xor
push
xor
and
cdq
js
cmp
xchg
jge
setle
push
movs
push
out
push
inc
repz
jle
xor
mov
cmps
sbb
out
xchg
xor
inc
inc
mov
pushf
xchg
mov
in
aaa
xor
mov
pop
sbb
loopne
xor
dec
imul
push
and
sbb
mov
sub
(bad)
enter
sub
mov
adc
cs
lods
mov
push
pusha
mov
ins
xor
out
jecxz
shr
mov
test
jns
mov
idiv
retf
jg
mov
xchg
or
adc
sub
pop
jno
popa
test
cmps
or
movs
pusha
cli
xchg
ja
inc
or
out
pusha
jnp
inc
xchg
jbe
pushf
or
iret
shl
and
es
fild
xchg
arpl
pop
add
inc
mov
das
and
ds
lods
mov
add
xchg
jns
inc
push
mov
call
mov
mov
jmp
mov
mov
popa
ins
jb
fmul
(bad)
xchg
es
std
or
sub
shl
jno
scas
mov
ds
jp
test
fucom
mov
daa
and
lahf
pop
mov
or
sub
inc
jl
jecxz
outs
lods
mov
cmp
push
mov
sbb
xchg
test
dec
cmp
sti
ins
cli
stc
cdq
rol
dec
loope
mov
xor
mov
repz
jmp
retf
les
sbb
adc
(bad)
dec
std
adc
mov
addr16
(bad)
ficom
in
loope
and
punpckhbw
ss
enter
hlt
mov
sub
fild
mov
int3
mov
inc
sbb
inc
mov
sub
pop
mov
pop
mov
inc
aaa
sbb
aad
ret
xchg
cmp
and
stc
cs
dec
clc
mov
and
jl
dec
lea
or
mov
dec
add
test
leave
mov
mov
das
push
daa
lock
mov
popa
add
jge
out
inc
xor
mov
inc
ss
pushf
mov
pop
mov
add
sub
call
lahf
and
fild
pop
pop
mov
mov
jmp
push
enter
out
stos
and
inc
fmul
aas
pop
mov
or
mov
aad
adc
outs
mov
es
pop
pop
jle
sub
arpl
call
pop
sti
xchg
ins
mov
imul
dec
adc
add
jb
jp
ss
retf
dec
sbb
cli
pop
sbb
outs
mov
loopne
pop
outs
jecxz
push
mov
mov
daa
and
in
sub
in
(bad)
aaa
lahf
fwait
jnp
(bad)
sbb
push
push
cld
jnp
and
push
dec
mov
inc
jo
sub
pop
and
or
xchg
and
loope
push
push
and
dec
push
jle
jle
jge
or
dec
xor
adc
mov
jle
sbb
pop
lea
sbb
push
enter
add
lods
jecxz
cdq
in
dec
fs
cld
lods
ror
sahf
cmc
xor
fist
push
dec
sbb
push
or
lods
movs
dec
mov
dec
pop
cdq
adc
(bad)
fimul
imul
push
or
lock
shl
in
xlat
fld1
xor
hlt
cmc
in
repz
cmps
(bad)
and
adc
cmc
dec
xchg
retf
and
push
sbb
cmp
xor
dec
in
and
inc
movs
loopne
out
(bad)
and
pop
xchg
pop
out
mov
out
xor
cmc
aam
add
lods
cmp
shr
xor
ret
jecxz
sbb
icebp
(bad)
vcvtph2ps
mov
mov
adc
nop
in
pop
sbb
loopne
and
sub
fld
push
fild
mov
push
fsubr
push
stc
mov
or
sub
popa
sar
mov
cmp
cmp
ds
mov
sub
sub
mov
push
xor
fsub
test
jbe
fild
jne
jae
mov
arpl
push
adc
jp
cmp
sti
movs
addr16
repz
adc
jmp
and
daa
stc
inc
imul
xor
mov
nop
call
test
inc
(bad)
mov
jbe
cmp
jp
sbb
enter
sbb
fdivp
and
push
(bad)
(bad)
or
push
pop
add
pop
sub
and
mov
push
sbb
rcl
in
adc
inc
mov
sbb
and
sbb
xchg
dec
imul
sbb
aad
xor
cmp
adc
mov
inc
test
sub
inc
mov
aad
inc
jle
xchg
enter
push
xchg
fnstsw
cmps
stos
call
or
xchg
test
mov
or
mov
arpl
adc
into
bound
inc
push
pop
mov
shr
xchg
jbe
jp
jge
and
cmp
aaa
out
push
push
cwde
jge
jne
dec
jecxz
pop
rol
imul
fadd
sbb
sub
xchg
mov
push
jo
adc
lahf
inc
mov
mov
ds
push
call
mov
les
test
aad
test
mov
add
mov
mov
mov
mov
xchg
mov
mov
xor
mov
mov
dec
iret
dec
loop
outs
stos
jg
js
loop
(bad)
out
and
sub
add
divps
js
(bad)
cmp
ja
imul
dec
ins
cs
idiv
mov
(bad)
xor
cmp
clc
sar
lahf
icebp
pop
out
adc
dec
mov
sub
jno
test
mov
xchg
dec
dec
cld
arpl
sub
data16
mov
retw
inc
jge
mov
push
inc
out
stos
leave
push
inc
push
pop
or
inc
jbe
call
idiv
mov
pop
ja
test
mov
hlt
mov
movs
sub
sbb
or
test
add
adc
xor
adc
stc
jbe
call
xchg
lods
mov
popa
daa
aas
xor
out
dec
jge
mov
mov
push
sbb
or
shr
out
and
shr
xor
mov
call
fadd
cmc
mov
adc
ss
lds
(bad)
es
sub
ins
xchg
mov
ret
push
sub
fbld
mov
mov
xor
imul
inc
mov
push
repnz
inc
xchg
inc
sbb
fwait
jp
(bad)
mov
adc
(bad)
sbb
fld
mov
cmp
stc
jnp
sub
mov
punpckhwd
sar
fstp
aam
rcr
cmps
fs
fisub
ins
nop
aaa
mov
ficom
xchg
sub
mov
sub
(bad)
in
jnp
sahf
inc
push
sub
push
sub
arpl
out
jmp
inc
ins
pop
cmps
pushf
cdq
test
iret
loopne
lahf
and
cmp
loop
iret
and
mov
add
shr
ror
cmp
(bad)
imul
mov
icebp
jae
jo
mov
addr16
sub
mov
xor
cdq
xor
out
sub
retf
mov
xchg
pop
(bad)
repz
or
and
leave
pop
mov
push
lahf
out
neg
(bad)
xor
mov
push
out
xchg
cld
pop
inc
out
sbb
add
stos
pop
xchg
mov
fcomi
cmp
or
(bad)
in
mov
loope
jb
add
lock
fcomp
sbb
test
mov
push
iret
or
xchg
repz
in
adc
jg
ins
hlt
adc
aad
or
in
outs
pop
cmp
out
pushf
shl
arpl
jmp
cmps
fstp
cwde
out
cmc
cwde
mov
mov
loope
push
xchg
mov
mov
fild
cmp
sub
cmp
cmc
je
iret
cmp
ja
repnz
inc
sub
pop
mov
in
mov
out
and
int3
scas
cmp
jmp
cdq
es
fistp
jg
xor
push
push
inc
mov
sub
push
adc
scas
ins
data16
push
dec
inc
shr
neg
xor
lahf
push
xor
mov
out
sar
out
out
(bad)
out
xchg
fist
fmul
sub
fmul
in
xor
clc
gs
fdiv
xchg
mov
cwde
ret
and
rol
ins
fneni(8087
shl
xor
jmp
loop
inc
xchg
and
sbb
or
inc
scas
push
lock
adc
sub
adc
test
daa
push
cmp
push
ins
mov
(bad)
div
fcomp
fldln2
adc
mov
mov
popf
pop
adc
ja
pop
add
in
sahf
pop
sub
cs
dec
dec
add
lods
(bad)
dec
ret
adc
call
or
pop
jle
shr
xor
xchg
mov
xor
or
cmp
imul
pop
inc
idiv
(bad)
scas
scas
ror
int
push
push
push
lds
mov
pushf
or
sub
sub
test
mov
cmp
sub
cmps
fnstcw
lods
sbb
int3
es
push
sbb
ja
push
pop
jge
fmul
and
pushf
inc
movs
fistp
dec
(bad)
lods
fst
dec
pop
es
xor
int
push
push
mov
(bad)
or
out
stos
repnz
int
mov
push
xchg
push
aam
scas
jne
xchg
and
xchg
aaa
rol
scas
push
ja
xchg
sbb
out
and
push
mov
aas
call
adc
cld
jnp
cmp
nop
sbb
ffree
xor
scas
loopne
jae
adc
dec
rcr
cld
xchg
cmp
std
add
push
leave
and
mov
adc
inc
outs
enter
sub
mov
or
movs
inc
xchg
push
arpl
sub
or
stos
mov
andnps
mov
dec
push
xchg
sbb
and
mov
outs
rcr
int3
xor
enter
sbb
mov
adc
xlat
adc
popa
sub
adc
pusha
cmp
loope
loope
xchg
push
add
icebp
ret
cli
bound
push
je
xchg
jbe
cli
jno
sub
xor
popa
add
jle
(bad)
retf
(bad)
out
aas
and
loope
not
aad
test
dec
add
call
lahf
dec
call
fldenv
or
xor
and
sbb
sub
out
stos
inc
movs
sar
out
mov
dec
pop
cmp
sbb
outs
imul
jmp
dec
mov
idiv
into
stos
and
mov
inc
lods
pop
and
out
mov
cmovbe
or
or
dec
add
adc
imul
cmp
push
cmps
ins
jb
aam
mov
jb
popf
cmps
retf
sbb
add
xchg
(bad)
aas
inc
rol
pop
dec
scas
pop
mov
mov
cli
repnz
out
push
and
cmp
inc
sbb
movs
not
xor
lods
mov
mov
push
adc
dec
cmps
cmp
push
push
movs
sbb
mov
xor
sbb
fld
das
and
iret
repnz
sub
test
pusha
pop
push
mov
iret
adc
in
out
int3
sub
jl
out
leave
sub
clc
fcmovb
sbb
xor
jg
adc
cwde
clc
std
push
out
movs
mov
mov
daa
cmps
movntq
out
iret
dec
xor
sbb
test
fnsave
pusha
fnstsw
loop
and
inc
idiv
inc
das
pop
inc
sar
aas
mov
cld
enter
(bad)
call
pop
adc
sbb
test
mov
push
(bad)
loopne
shr
inc
jb
icebp
inc
add
not
repnz
sub
sbb
mov
push
or
dec
mov
mov
ret
sahf
bound
enter
mov
pop
out
not
inc
push
jmp
addr16
inc
inc
jp
lahf
mov
daa
fucomi
push
cmp
popa
cmp
jmp
or
jae
call
sahf
add
pop
add
clc
xchg
ins
in
ja
shr
call
mov
test
inc
into
xchg
xchg
cwde
pop
sbb
xor
cmp
shl
sbb
push
mov
mov
jbe
pop
jg
cmc
dec
mov
outs
fisubr
cmc
push
xchg
sbb
or
pop
cli
jg
ret
jae
out
jp
out
jno
jo
xchg
(bad)
mov
xchg
add
push
and
adc
sti
or
out
stos
int
mov
sub
jmp
mov
sub
and
or
(bad)
aam
pop
dec
push
mov
mov
fnsave
xchg
int
add
add
lock
imul
add
mov
jbe
inc
jmp
add
ja
cmp
imul
mov
(bad)
jmp
lea
hlt
jcxz
ret
stos
std
sti
sbb
mov
jecxz
mov
dec
stos
adc
sti
mov
in
pop
mov
cmps
ret
push
adc
fdiv
lds
add
adc
sbb
out
clc
sar
xor
inc
arpl
add
test
enter
outs
mov
or
(bad)
mov
in
scas
xchg
and
sub
add
adc
shr
stos
mov
and
jae
xlat
cmp
mov
mov
adc
mov
sti
adc
mov
popa
xchg
lea
fsub
icebp
(bad)
pop
mov
lods
mov
fild
dec
xor
aam
loopne
aad
mov
ficomp
nop
imul
mov
mov
test
jecxz
jge
mov
test
lds
jle
pop
and
jl
inc
sbb
lds
mov
inc
xchg
mov
daa
ins
mov
push
cmove
xlat
adc
ds
xchg
pop
jns
mov
mov
(bad)
and
int
icebp
pop
stc
jae
add
mov
popa
arpl
fnstsw
xor
push
cmp
(bad)
mov
mov
pop
out
lea
mov
dec
and
dec
or
add
dec
movs
(bad)
xor
jno
jne
nop
xor
mov
cmps
push
in
sbb
outs
xor
imul
jg
push
pop
pop
fistp
mov
sbb
dec
jns
dec
pop
mov
sbb
fldenv
cmp
aaa
int3
mov
movs
repz
ret
outs
loop
dec
test
xor
arpl
push
aam
jnp
test
sbb
add
pop
rcl
movs
mov
xchg
sti
call
push
pop
inc
adc
and
in
jb
test
fst
pop
call
sbb
pop
sbb
loop
mov
cmp
mov
fisubr
(bad)
adc
sub
mov
mov
jnp
loop
test
stos
xor
mov
or
fsubp
gs
mov
mov
mov
stc
rol
out
or
mov
push
loopne
jne
add
mov
and
or
(bad)
scas
add
ins
or
jo
lods
adc
ins
or
sub
sti
and
pop
in
fucom
call
mov
lock
aam
and
loopne
rol
test
xor
jl
mov
cmp
shl
mov
daa
ret
mov
je
cmp
shl
retf
(bad)
(bad)
xchg
mov
pop
mov
and
xchg
cmp
les
mov
fmul
mov
sar
or
xchg
out
int
dec
int3
jo
pop
jge
xor
xchg
shl
aad
aas
repz
stos
lds
or
jns
wbinvd
retf
mov
sub
in
std
into
pop
add
xor
leave
mov
add
xor
or
lods
add
pushf
add
std
cli
cdq
cdq
pop
and
dec
sub
retf
sbb
sub
cmps
cld
mov
mov
sbb
(bad)
out
and
les
pushf
push
ins
(bad)
cmp
sub
add
inc
test
pop
jmp
gs
or
in
rcl
cmp
xchg
mov
ret
pop
sbb
out
fsub
cwde
jg
xor
mov
das
jbe
sub
loope
push
push
mov
xchg
push
sti
popf
add
push
jb
loopne
andps
sub
jnp
(bad)
push
mov
inc
int3
ret
mov
jmp
fwait
ret
es
fsubr
idiv
into
add
adc
mov
adc
in
inc
test
or
inc
fisubr
arpl
jbe
lea
xor
and
pop
mov
or
inc
call
mov
mov
inc
sub
hlt
mov
loope
xchg
and
xor
stos
jno
mov
cmp
dec
(bad)
rcl
xchg
loop
mov
stc
xor
mov
punpckhwd
in
sub
xchg
adc
mov
cmp
dec
in
shr
mov
xchg
xor
fisubr
mov
(bad)
pop
call
sub
fdiv
add
pop
mov
adc
out
mov
jmp
mov
jecxz
cmp
sbb
or
lods
fisubr
sub
xchg
outs
sbb
pop
pop
cdq
test
xchg
addr16
movs
mov
cld
rcr
adc
and
movs
push
(bad)
adc
xchg
fild
mov
jge
bound
stos
mov
xor
clc
rol
dec
jp
cs
cmp
bnd
outs
dec
sub
jo
mov
scas
or
call
shl
out
gs
cmp
push
inc
outs
or
mov
mov
inc
and
loopne
shl
push
adc
jo
mov
ja
in
xchg
inc
mov
lods
(bad)
sahf
xchg
jle
mov
cs
fwait
fs
cmps
inc
sub
mov
pushf
fiadd
sbb
sar
mov
je
mov
xor
pop
or
xchg
ret
repnz
and
add
pop
ins
hlt
and
adc
cmp
idiv
fst
xor
jno
mov
and
xor
push
es
popf
add
push
adc
cmp
jnp
pop
cmp
push
shl
mov
pop
xchg
mov
add
sub
dec
lds
sub
loope
iret
pusha
aaa
pop
mov
jmp
or
sbb
ror
lods
rol
popa
movs
arpl
inc
loop
ficomp
lock
stos
push
sub
push
outs
rcl
xor
(bad)
pop
ss
adc
shl
stos
jae
xor
mov
(bad)
xchg
adc
xor
sub
xchg
xor
(bad)
retf
mov
sbb
push
cdq
int3
ja
push
js
repz
icebp
and
xlat
(bad)
popa
push
pop
pop
cs
(bad)
adc
imul
or
inc
lock
fst
push
ret
js
js
sbb
fst
lods
lahf
pushf
mov
push
and
sub
cmp
in
outs
adc
push
sbb
pop
enter
out
cmp
xchg
inc
sahf
add
sub
and
repz
push
and
scas
clc
inc
outs
lds
jle
and
add
push
push
sbb
sub
not
pop
fcom
inc
sar
sub
and
add
ins
gs
das
cld
cmp
jle
icebp
xchg
test
ins
fdiv
(bad)
mov
cmp
xchg
cwde
repz
xchg
xor
inc
pop
add
cmc
fiadd
iret
inc
pop
push
out
shl
icebp
loop
int3
loop
out
xchg
lock
loop
ds
add
arpl
sbb
test
push
int3
adc
add
addr16
pop
stc
dec
sbb
mov
or
jne
inc
and
imul
adc
cwde
push
jno
(bad)
mov
xchg
jmp
cs
mov
loopne
lods
and
test
inc
mov
ss
dec
dec
or
mov
(bad)
push
inc
out
pop
inc
mov
aad
lds
adc
jo
sub
push
cmps
loopne
ret
push
scas
adc
inc
sbb
hlt
hlt
mov
cdq
add
mov
(bad)
mov
lods
shr
mov
lds
imul
fucomip
or
mov
mov
jle
fsub
fstp
ins
sub
lahf
jp
ins
xlat
mov
aas
jno
out
inc
add
jno
cmp
test
cmp
cmp
(bad)
lea
lock
xchg
outs
lods
sbb
xchg
cmp
call
mov
popf
loopne
jge
fs
push
push
or
adc
pushf
xor
scas
ins
or
mov
sub
inc
movs
clc
push
mov
call
mov
jmp
push
fadd
call
aad
sti
mov
and
push
inc
add
outs
dec
(bad)
jbe
shr
sbb
addr16
pop
out
xchg
ret
aaa
inc
shl
in
jg
repnz
ret
mov
push
dec
jo
jmp
fadd
jnp
cli
sti
sub
adc
xlat
mov
or
(bad)
pusha
les
cmp
ja
xchg
je
cmp
js
dec
push
retf
sbb
mov
sbb
cmp
je
sub
cdq
shl
test
adc
mov
adc
jno
cmc
out
xor
add
loope
std
repnz
lea
data16
(bad)
mov
enter
and
jne
pop
pop
jno
xchg
outs
mov
scas
mov
arpl
push
cli
mov
stos
jae
popf
pop
pop
sbb
xchg
adc
sub
mov
test
xor
fdiv
jmp
mov
mov
or
xchg
mov
mov
pop
inc
scas
push
out
lea
adc
and
add
inc
sub
add
mov
scas
xchg
ins
js
pop
in
dec
arpl
xchg
dec
inc
adc
or
adc
dec
enter
xor
or
outs
cmp
adc
lds
fild
and
mov
inc
mov
mov
dec
js
dec
adc
ja
dec
push
imul
addps
xchg
mov
sub
pushf
daa
pop
sub
push
pop
clc
cmp
std
neg
in
mov
fucom
test
jecxz
js
pusha
pushf
sub
mov
test
jl
mov
lods
xchg
xchg
xor
rcl
cdq
lods
pushf
sub
sub
mov
pop
mov
jbe
inc
test
mov
push
fiadd
dec
movs
dec
hlt
ret
test
div
xchg
push
ds
dec
jg
in
adc
adc
aam
fidivr
add
adc
test
imul
daa
jb
xchg
stc
push
addr16
inc
dec
in
inc
or
scas
pop
add
shl
data16
and
fdiv
mov
mov
js
or
mul
sub
mov
hlt
es
mov
jecxz
mov
jbe
daa
push
fstp
repnz
into
jne
and
aaa
cmp
dec
inc
cmps
das
jb
jo
call
shr
lahf
cmp
clc
push
and
(bad)
pop
jno
scas
jb
mov
jp
rol
mov
add
jge
xchg
ss
in
jmp
push
fidivr
ret
xchg
sub
scas
int
inc
aad
lahf
adc
pop
scas
push
sub
mov
mov
leave
mov
or
pop
jmp
leave
mov
cmps
int
daa
(bad)
pop
dec
icebp
sbb
jo
sbb
push
or
sbb
cmps
inc
xor
or
dec
movs
out
xchg
fwait
(bad)
nop
lods
cmp
mov
xchg
cmp
pop
cmp
pop
das
xor
std
jo
mov
ins
add
xchg
sub
stos
test
jbe
mov
push
sbb
adc
sbb
xor
dec
fcom
jmp
mov
xor
xchg
sub
ss
mov
adc
mov
adc
mov
out
jae
mov
clc
push
fadd
lea
and
sub
call
fwait
pop
retf
cdq
xor
mov
fwait
jp
sahf
add
ins
dec
pusha
cs
inc
xor
xor
call
xchg
mov
jp
dec
xor
sti
or
cmp
cwde
fnstcw
mov
daa
repz
iret
mov
out
retf
out
inc
inc
cmp
jbe
movs
jb
dec
dec
call
and
ss
or
test
fdivr
and
mov
(bad)
or
and
xchg
fdivp
or
mov
and
dec
sbb
imul
adc
in
idiv
sbb
nop
pop
sub
aas
inc
movs
addr16
or
xor
mov
xchg
imul
jp
ficomp
hlt
dec
xchg
adc
sub
push
loope
stc
pop
arpl
sub
xor
sub
nop
test
leave
iret
popa
dec
and
shl
dec
xchg
loopne
ss
sbb
lods
jecxz
sti
stos
stc
inc
sbb
mov
mov
stc
retfw
arpl
xchg
xchg
fisttp
ret
add
and
in
outs
in
ss
fisttp
adc
jnp
push
pop
push
pop
cmp
ret
mov
cmp
fs
inc
cmp
int3
inc
repnz
xchg
cmova
data16
mov
out
sub
pop
fwait
sub
xchg
retf
cmp
sub
imul
shl
push
xchg
loop
out
pop
jne
test
xor
jge
leave
or
xor
iret
popa
and
or
xor
gs
loopne
and
fld
ret
fsubr
inc
adc
cli
loop
enter
scas
leave
dec
mov
cmp
fstp
das
mov
dec
loop
push
cmc
push
push
and
bound
adc
ins
add
xchg
aad
fld
push
enter
xor
sub
cmp
sub
dec
pusha
out
pop
jl
cmp
mov
dec
test
adc
add
stc
xor
sbb
push
jl
in
sar
cmp
int
fwait
sub
cmp
dec
push
in
arpl
lahf
adc
repz
xchg
sub
mov
adc
bound
vmovsldup
cmp
dec
clc
dec
stc
cmp
push
xor
mov
mov
xor
arpl
into
aaa
hlt
sbb
xchg
(bad)
sar
xor
ds
sub
(bad)
fs
retf
mov
dec
mov
inc
jge
ret
call
add
push
test
das
dec
ftst
ja
retf
jnp
out
push
daa
popf
lock
inc
push
pop
mov
and
mov
rdtsc
pop
dec
or
loop
cmp
adc
push
cmp
sbb
push
jb
daa
scas
test
sbb
movlps
sub
test
cmp
mov
sbb
scas
jns
ret
stos
test
cwde
pop
inc
xlat
pop
sub
sbb
jp
xor
sbb
jbe
mov
rcl
test
mov
adc
movs
and
mov
push
cmp
jecxz
sbb
mov
mov
scas
(bad)
aam
dec
or
adc
loope
loopne
shl
pop
sti
inc
repz
push
push
in
or
loope
pushf
les
jle
mov
pop
mov
ja
sub
mov
call
inc
cmp
push
ss
mov
shl
rcr
fs
mov
fmulp
xchg
mov
and
mov
and
sub
aad
cmp
ret
adc
outs
fistp
push
or
cmps
movs
neg
test
scas
mov
sti
add
jmp
push
mov
(bad)
loopne
jae
icebp
dec
imul
loop
sbb
popa
call
mov
jne
add
cli
aaa
inc
sub
add
cmp
stos
dec
mov
popa
and
faddp
push
les
push
cmp
scas
test
call
repnz
shl
sub
mov
mov
mov
and
fisub
sahf
outs
test
xor
dec
outs
arpl
ja
xor
repz
lock
loope
jp
sbb
cld
sbb
cmp
jecxz
js
cmp
sub
push
outs
cmps
mov
or
xchg
push
mov
sbb
scas
mul
pop
jb
mov
xor
xor
mov
pop
inc
cmp
pop
repz
rcl
mov
ret
shr
push
xchg
scas
jmp
in
ds
outs
add
sub
mov
dec
jnp
daa
scas
test
aam
dec
push
sar
rcr
out
mov
sub
jecxz
cdq
sub
adc
jb
and
cmp
aaa
test
push
das
xor
pusha
cdq
pushf
push
inc
repz
popf
ins
(bad)
(bad)
or
in
sbb
inc
xlat
mov
inc
imul
cmp
sbb
adc
push
enter
test
pop
jge
sbb
jg
sub
adc
int
mov
jno
fbstp
xor
aam
inc
cmp
sub
stos
pop
test
retf
call
retf
lea
mov
xchg
dec
popf
stos
jp
add
push
icebp
test
call
push
pop
pop
rcr
push
bound
push
push
loop
retfw
and
mov
pop
cdq
lea
mov
(bad)
or
sbb
push
mov
shl
imul
imul
not
cmp
mov
and
cmc
fsubr
pop
lock
and
add
xchg
cmps
mov
out
cwde
sub
xchg
fimul
xchg
cmp
pop
push
adc
ins
sub
daa
je
sahf
xchg
(bad)
lds
imul
mov
dec
jmp
dec
data16
popa
mov
cmc
sbb
movs
repz
push
repnz
cmp
ret
lods
ins
or
or
and
cmp
mov
scas
or
(bad)
push
sbb
sub
pop
call
jmp
call
retf
xor
(bad)
nop
cli
mov
test
jecxz
mov
shr
adc
dec
push
cmp
cli
mov
sbb
ins
mov
sub
and
dec
fsubr
mov
mov
addr16
in
fild
imul
xlat
test
lea
sti
stc
jle
sub
out
(bad)
mov
mov
mov
test
daa
push
mov
arpl
ja
inc
pusha
pop
(bad)
jns
(bad)
sahf
popf
sar
hlt
xlat
sub
sub
cmps
jp
mov
lods
jp
pop
cli
enter
mov
vpsllw
push
jge
or
and
jno
imul
cs
ror
push
adc
sahf
int3
xor
mov
add
xor
jecxz
mov
sar
lea
jmp
push
fisttp
jl
sahf
or
fdiv
xchg
arpl
sub
mov
mov
pop
and
lds
mov
or
push
push
(bad)
inc
daa
test
loope
sbb
(bad)
nop
pop
xor
xchg
repz
pop
rcl
sti
fstp
or
mov
mov
sbb
loope
pop
ret
loop
sbb
xor
mov
mov
or
add
inc
lock
arpl
mov
rcr
mov
cmps
(bad)
sti
fsubr
jno
jo
xchg
pop
sbb
ficomp
(bad)
adc
inc
dec
ror
push
pop
test
adc
cmc
retf
add
ins
xor
mov
push
cmp
cdq
es
xchg
loope
xlat
jle
sti
das
mov
dec
or
sub
jl
sub
push
mov
and
and
fmul
in
pop
or
jo
cmp
popfw
shl
cmp
test
mov
mov
push
sub
fmul
mov
ficomp
imul
mov
dec
xchg
push
push
fs
retf
jns
mov
in
lods
stos
xor
mov
sbb
enter
cdq
inc
jns
scas
mov
sbb
mov
mov
push
in
mov
xchg
lock
retf
and
movs
imul
rol
pop
sub
jb
sbb
out
loope
cmps
mov
cmp
push
mov
push
(bad)
clc
bound
ja
cmp
dec
mov
ins
(bad)
cmp
stos
fnsave
rcl
sti
clc
inc
mov
mov
(bad)
es
sub
popf
lods
cmc
sbb
or
push
push
shl
and
add
(bad)
adc
sti
mov
mov
sbb
jns
aaa
ret
mov
cwde
xor
push
pop
pop
or
shr
lock
xor
mov
dec
in
ins
cmps
mov
push
std
iret
dec
cs
fld
fs
outs
data16
push
jb
push
pushf
cmp
in
xor
lods
(bad)
mov
leave
loope
loop
push
cmp
outs
push
xlat
mov
leave
jb
fsubr
jp
stos
retf
cs
lock
mov
pusha
test
dec
dec
or
lods
jnp
mov
in
iret
jecxz
xchg
or
pop
mov
ja
test
int
outs
nop
sahf
sbb
je
shl
jne
je
mov
pop
xchg
xor
push
cmps
in
js
lock
nop
sti
xor
mov
adc
mov
aad
(bad)
pand
xchg
outs
shl
or
in
xor
inc
dec
cwde
pop
lea
mov
add
gs
push
sbb
dec
out
mov
fbstp
mov
leave
mov
push
dec
or
loop
mov
xchg
aas
int3
mov
sbb
outs
fistp
jmp
jno
rol
pop
push
inc
sbb
push
mov
or
jbe
lock
jns
fiadd
fst
pop
and
mov
sbb
push
mov
lea
inc
add
js
out
mov
add
cmp
add
ins
leave
push
add
adc
and
aam
mov
out
inc
inc
pop
inc
sahf
and
jb
scas
jecxz
push
ror
ret
jmp
(bad)
arpl
jp
cmp
cmp
xlat
fdiv
cmp
daa
and
jl
lea
jb
adc
inc
sub
je
adc
fbstp
lock
xchg
mov
push
lahf
jle
inc
out
btr
inc
inc
xor
shl
mov
ret
jno
ins
pop
icebp
xor
xchg
adc
xor
iret
pop
push
pop
lea
out
xor
out
inc
dec
shr
add
jb
(bad)
xchg
jl
cmps
jne
test
xor
(bad)
(bad)
jge
in
cdq
fldcw
pop
mov
and
lods
mov
cmps
pop
shl
pop
jbe
xor
out
in
jle
(bad)
cmps
retf
mov
int
icebp
push
sar
inc
xchg
(bad)
push
push
inc
or
les
sub
sbb
cld
sbb
retf
test
rcr
shl
pop
out
aad
inc
push
pop
aad
mov
xchg
clc
dec
pop
imul
test
je
xor
dec
fsubp
movs
push
mov
or
xchg
mov
ret
lea
bound
xor
sub
enter
xchg
movs
aad
mov
test
stos
sub
lods
adc
cld
popf
xchg
ja
in
pop
fisubr
cmps
add
lods
mov
test
dec
(bad)
sbb
jecxz
sub
cmp
jecxz
fidiv
movs
sub
add
inc
int3
ja
mov
sbb
shr
push
stos
push
xor
cmps
fs
jmp
test
adc
in
inc
mov
mov
lods
sbb
dec
sub
mov
sbb
push
dec
wbinvd
add
xor
cmc
(bad)
jmp
inc
repz
je
sub
ja
dec
test
mov
stc
cmps
add
inc
jo
iret
cmp
fwait
pop
mov
test
inc
mov
cwde
sahf
push
test
xor
std
pop
outs
mov
dec
adc
test
mov
loop
(bad)
cld
ret
inc
and
cli
(bad)
jp
adc
sar
sub
imul
cmp
mov
cmp
mov
and
inc
(bad)
fst
popa
jl
outs
retf
push
cmp
add
mov
cld
pop
lahf
mov
jno
xor
jo
ret
lea
les
out
inc
dec
mov
mov
jmp
cmp
pop
or
mov
jbe
dec
out
cmc
sar
aaa
sbb
push
mov
xor
dec
clc
fs
retf
in
pop
addr16
pop
arpl
(bad)
cmp
mov
mov
fsubr
jbe
pop
cld
outs
mov
loop
jmp
fcmovbe
push
lea
mov
pop
cs
fs
or
xchg
je
xchg
fwait
mov
dec
dec
adc
js
test
out
xchg
mov
dec
jno
std
aad
stos
inc
cmp
pop
mov
add
jmp
xchg
add
call
shl
jne
js
stos
xchg
pop
dec
push
cwde
cmp
mov
sub
out
sbb
stc
push
jle
retf
mov
jno
mov
in
jbe
clc
outs
and
fist
xor
cmp
mov
or
lods
ins
lods
sbb
jnp
xchg
test
sahf
iret
movs
add
and
xor
fild
test
and
mov
sub
jecxz
or
mul
push
jg
jns
jecxz
fwait
loop
push
jmp
adc
ja
test
ss
in
ror
mov
cli
mov
ret
pop
lahf
push
jmp
int
pop
pmaddwd
in
and
shl
adc
pop
cdq
(bad)
pusha
data16
pusha
xor
cmp
out
std
sbb
pop
push
jbe
inc
push
popf
fmul
xor
mov
(bad)
(bad)
out
inc
mov
cmps
dec
cmp
pop
adc
stos
call
in
addr16
add
or
xchg
cmp
adc
les
nop
push
xchg
test
or
add
test
sub
add
je
mov
js
jne
add
lahf
pop
add
retf
je
pusha
xor
retf
sbb
pop
add
push
pop
cs
nop
mov
sub
add
clc
cmp
test
xchg
and
mov
lock
dec
add
addr16
cdq
stc
sub
or
int3
jg
mov
mov
cmp
test
mov
scas
and
xor
dec
pop
(bad)
fisttp
dec
bound
fnstenv
retf
repz
js
inc
and
repnz
movs
or
les
mov
or
mov
scas
inc
out
arpl
cmp
leave
fwait
and
jmp
dec
pop
jbe
mov
fs
(bad)
test
mov
in
lea
das
xchg
sub
dec
and
push
inc
test
inc
or
daa
lea
lods
(bad)
in
dec
fild
cli
inc
cli
push
adc
(bad)
jnp
and
psubsb
push
add
shl
and
imul
arpl
dec
inc
adc
or
mov
xchg
sub
mov
add
int3
push
arpl
pop
pushf
repnz
xor
cmp
test
jne
fstp
ret
ins
cld
shl
sub
inc
das
cli
xchg
leave
rcl
xchg
sahf
(bad)
std
xor
or
pop
(bad)
loopne
mov
stos
out
cmp
xchg
mov
jno
(bad)
into
inc
mov
fidivr
add
cmp
mov
dec
adc
fs
and
add
xchg
gs
dec
gs
mov
xchg
sar
xchg
rcr
mov
pop
dec
test
jmp
jo
lock
dec
sub
bound
jp
add
mov
int
adc
and
sahf
repz
ret
jge
movs
faddp
aas
mov
not
jo
inc
mov
adc
(bad)
and
test
cmp
int3
into
mov
fbld
out
sbb
adc
sbb
leave
dec
ror
mov
adc
cmp
sub
fdiv
js
cmps
dec
adc
stos
iret
pop
mov
xor
mov
imul
and
push
out
jle
xchg
add
fdivrp
sbb
sbb
int3
adc
(bad)
data16
cmp
push
in
adc
add
add
push
(bad)
mov
push
iret
les
jo
jne
ror
fadd
push
add
dec
fild
(bad)
out
mov
mov
mov
loop
(bad)
adc
xchg
pusha
outs
jae
pop
jecxz
sbb
push
and
lea
xchg
xchg
fdiv
imul
mov
xor
test
loopne
mov
test
xchg
adc
movs
ror
scas
rcr
push
lea
pop
xor
cli
std
in
mov
stos
xchg
xchg
pop
jbe
pop
or
adc
hlt
fadd
imul
jbe
add
sbb
or
pop
mov
push
mov
sub
mov
in
xor
daa
xor
pop
ret
pop
cmp
adc
scas
out
das
and
loopne
cwde
hlt
cmp
pop
push
test
aam
pop
or
fbld
es
mov
es
mov
clc
fld
fsubr
mov
movs
sbb
ss
mov
call
shl
cwde
jmp
fstp
jbe
bound
xchg
push
je
jle
movs
(bad)
dec
out
ror
js
ja
push
inc
mov
daa
pop
mov
push
mov
aam
int3
sbb
or
hlt
int3
push
cmp
push
add
dec
adc
data16
cwde
mov
mov
dec
xor
and
adc
imul
push
sub
pop
push
push
aad
mov
pop
jl
lock
adc
addr16
rcr
idiv
mov
psubsw
fisub
push
pop
call
and
dec
sbb
in
stos
jl
xor
aaa
leave
call
loopne
repz
in
jb
sahf
jae
das
mov
fild
push
int3
aad
sbb
or
out
sar
pop
sub
in
dec
xchg
and
pop
push
xor
mov
out
xchg
adc
aaa
push
loope
ins
xchg
inc
sbb
nop
cmp
imul
mov
inc
cmps
stc
pop
stc
fild
jno
jo
cmp
das
stc
xchg
push
test
out
or
jnp
test
pop
call
pop
jne
(bad)
xchg
xchg
pop
push
repz
pop
push
popf
jbe
jmp
bound
cmp
call
or
cmp
outs
jmp
rol
jne
ins
jbe
fnstcw
pop
inc
sub
dec
push
xchg
addr16
sub
pop
mov
xchg
cwde
(bad)
in
call
xchg
mov
pop
mov
ud1
pop
(bad)
xor
xor
cmp
add
outs
jmp
jnp
sti
ss
xlat
xchg
imul
cmp
adc
aaa
(bad)
mov
and
and
jg
inc
(bad)
lock
pop
add
sbb
movs
ret
jne
shl
add
push
in
int3
mov
cmp
les
sbb
shl
add
jg
xchg
push
jge
push
sub
movs
adc
jge
pop
movs
and
cmps
js
call
lock
jnp
in
add
(bad)
pop
inc
repz
adc
xchg
je
popf
xchg
mul
xchg
call
pop
in
inc
leave
mov
(bad)
test
lock
into
fst
out
mov
mov
or
mov
(bad)
movs
add
add
rcl
jbe
dec
cli
test
fs
imul
in
pop
mov
add
push
stc
fwait
jg
inc
mov
outs
fsub
cmp
xor
add
popa
inc
aas
sbb
mov
out
ins
mov
xchg
(bad)
mov
lods
cli
xor
lds
mov
mov
mov
loope
(bad)
repnz
mov
in
retfw
jne
enter
cdq
mov
xchg
scas
jae
ret
jno
inc
push
add
jb
call
sbb
adc
dec
jno
lods
movs
cmp
idiv
mov
mov
xchg
mov
jbe
fisubr
jb
mov
dec
mov
inc
(bad)
or
jae
jns
cmp
inc
and
sub
jp
or
out
xchg
push
pop
maxps
aam
(bad)
fwait
pop
mov
mov
or
retf
popa
enter
fs
sahf
inc
nop
cmp
pop
pusha
retf
cs
out
inc
push
and
sbb
add
jbe
scas
fwait
int
push
xchg
mov
jmp
pop
loopne
cmps
xchg
pusha
inc
pop
and
int3
into
in
cmc
pushf
mov
in
sub
ss
inc
std
dec
xlat
xchg
and
add
mov
mov
popf
into
add
dec
jb
scas
hlt
mov
mov
out
jmp
iret
or
adc
shl
(bad)
lods
out
add
jb
add
in
sub
push
ror
pushf
rol
out
mov
sbb
loope
sbb
in
inc
mov
lods
jne
hlt
sti
mov
data16
sub
xor
and
mov
sub
pusha
dec
dec
adc
mov
inc
call
cmps
sbb
cs
jmp
or
and
fild
lock
(bad)
cmps
mov
pop
lock
aas
jne
dec
jg
adc
outs
lods
clc
pop
stos
(bad)
fist
ins
mov
das
add
ret
push
out
(bad)
jp
pop
xchg
stos
adc
add
jg
xchg
xor
mov
cmc
dec
and
or
and
ja
push
jne
shr
fwait
adc
test
push
hlt
cmp
outs
cmp
and
out
setl
sbb
xor
out
pop
mov
pop
inc
pop
into
and
call
adc
sbb
mov
(bad)
cmps
movs
in
adc
das
sbb
and
ins
mov
xlat
aaa
add
nop
mov
sub
pop
(bad)
jl
mov
aaa
aas
dec
sbb
loop
in
into
sub
fnstenv
mov
add
lods
mov
pop
shl
xor
lea
adc
lea
into
sbb
push
push
mov
fisub
jns
lahf
jle
popa
mov
(bad)
pusha
mov
mov
mov
mov
inc
adc
aas
sub
mov
sar
push
(bad)
cmp
sbb
inc
xor
inc
in
dec
out
xor
inc
lods
retf
ja
cs
das
lock
cmp
(bad)
je
movs
jmp
pop
ret
xor
push
hlt
cdq
add
psllq
test
dec
inc
fdiv
sub
mov
cwde
add
and
sbb
fwait
mov
out
mov
cld
pop
xor
xor
push
mov
call
push
adc
pop
cmp
xchg
pop
clc
pushf
das
pop
cmps
or
mov
call
movs
test
cmp
jg
xor
xor
lods
push
pop
lods
cld
dec
push
inc
(bad)
bound
or
push
mov
adc
clc
add
mov
gs
aam
fcom
inc
add
mov
repz
pop
jns
in
sub
sub
mov
fisttp
out
(bad)
pop
repnz
pop
adc
xor
pop
mov
stos
jo
int3
sbb
cmp
imul
cld
cmp
mov
lahf
popf
test
test
shr
and
and
repz
push
or
sub
fwait
enter
pop
retf
mov
icebp
frstor
aas
pop
push
sub
dec
jle
xchg
adc
fnstsw
sub
cmp
or
pop
test
hlt
adc
cmp
aas
push
mov
ret
xor
fmul
inc
sub
jge
jbe
mov
in
ins
cli
sbb
jp
xchg
call
ficom
sub
mov
dec
pushf
and
fwait
pop
lahf
clc
dec
pop
jbe
mov
adc
nop
mov
inc
inc
mov
(bad)
pmullw
sub
and
add
in
xor
pop
xor
or
sbb
push
stos
rcl
cmp
pop
lods
lods
or
in
into
mov
add
jno
xor
mov
cmp
jns
(bad)
push
or
xchg
sbb
scas
pop
call
cmp
test
pop
sti
es
movs
inc
adc
fild
jmp
cmp
in
cs
mov
cs
js
(bad)
xchg
imul
mov
retf
mov
lahf
sub
and
or
test
loope
jp
ins
sbb
lods
rcl
pop
int
xchg
repnz
fmul
arpl
cmps
and
and
add
xlat
pop
rcl
cmp
rcr
add
add
imul
aas
jbe
xchg
mov
(bad)
pop
in
jb
and
shl
dec
pop
adc
sbb
xchg
and
and
sub
stc
(bad)
push
arpl
adc
inc
xchg
rcr
in
cmp
bsr
inc
xor
retf
mov
push
pop
sub
fwait
jl
iret
and
jp
leave
push
adc
push
int
in
daa
adc
sti
dec
mov
mov
xchg
shl
dec
push
mov
xchg
mov
jns
popa
xchg
(bad)
mov
mov
int
jmp
cmp
repz
nop
cwde
mov
and
or
pop
and
es
lds
jne
jmp
mov
iret
test
cmp
sub
and
mov
mov
sbb
daa
mov
test
sbb
aad
outs
fwait
xchg
cli
mov
es
cmp
xor
inc
and
jmp
(bad)
xchg
ret
adc
mov
in
ret
fstp
pop
pusha
fsub
mov
push
xor
or
inc
or
iret
cmp
jbe
inc
(bad)
imul
retf
out
outs
jb
je
adc
sbb
inc
daa
adc
sbb
inc
sti
jb
xor
out
ins
loopne
call
adc
lods
and
aas
mov
dec
sbb
mov
mov
out
pop
xchg
xchg
loop
test
test
mov
mov
(bad)
(bad)
jp
repz
inc
fmul
inc
pop
push
int
test
les
xacquire
leave
cld
jne
into
push
pop
sbb
(bad)
fild
rol
push
or
adc
add
icebp
aad
dec
mov
mov
xor
aad
and
shl
rcl
xchg
aam
pop
fsub
cmp
add
retf
add
mov
sub
cld
cmps
add
push
sti
loop
scas
inc
sahf
push
data16
loopne
push
cld
addr16
fwait
inc
pusha
and
mov
inc
cmp
jecxz
and
sub
inc
fbld
ret
stc
outs
das
inc
cmp
stos
repz
outs
xor
outs
cmp
retf
pop
movs
scas
sbb
or
outs
pop
aas
add
dec
rol
mov
pop
xor
cwde
inc
and
pushf
jmp
inc
imul
jg
inc
jmp
inc
or
lods
sbb
mov
mov
int3
add
inc
pop
stos
sar
movs
or
mov
xor
les
push
xor
jno
into
iret
xchg
mov
popa
test
arpl
pop
pushf
push
jno
and
inc
pop
cs
hlt
mov
fbld
shr
dec
js
ja
inc
rcl
cmp
mov
addr16
mov
push
int
sti
dec
push
call
push
retf
pushf
add
clc
mov
sub
in
mov
push
imul
fnstenv
and
(bad)
dec
fisttp
out
mov
push
loop
(bad)
mov
popf
fisubr
les
jae
xor
out
mov
sub
sub
gs
mov
das
mov
out
xor
xor
clc
shl
(bad)
adc
or
aam
fcomip
mov
cmp
out
not
push
xor
xchg
fisub
ror
push
movs
adc
mov
push
xchg
adc
dec
sbb
scas
cs
imul
hlt
push
xor
sbb
dec
jecxz
out
push
aaa
pop
cwde
cmp
sub
fbstp
jnp
inc
xchg
call
xlat
adc
or
pop
cmp
(bad)
les
jl
xchg
sub
leave
out
xor
js
int3
jae
fld
mov
rcl
cld
scas
aam
fwait
push
gs
xor
dec
call
lock
sbb
push
jp
popa
inc
mov
adc
xor
les
pop
dec
mov
test
(bad)
sbb
test
les
adc
jg
(bad)
jp
mov
fcmovnbe
push
outs
out
aad
ret
aaa
shl
sub
leave
jle
movs
push
inc
movs
jne
loop
daa
or
shl
test
lock
test
shl
pop
aas
xor
imul
and
cdq
mov
or
inc
jmp
pop
jmp
pop
loope
rol
mov
das
addr16
jnp
hlt
dec
andnps
mov
fnsave
jecxz
sbb
mov
xor
mov
outs
inc
lea
cdq
js
jmp
mov
gs
push
jbe
pop
adc
into
mov
arpl
push
sub
xchg
scas
int
and
cs
leave
gs
cmps
retf
aad
jle
in
jne
pop
dec
inc
pop
sub
rcl
not
mov
stos
les
and
and
aas
mov
popa
stos
imul
xchg
sbb
enter
stc
fwait
popf
test
or
(bad)
cmp
lock
push
xlat
jmp
sti
clc
push
mov
movs
leave
sub
in
sbb
pusha
mov
scas
(bad)
(bad)
jmp
jl
mov
inc
mov
mov
out
cld
jmp
int3
shr
out
sar
(bad)
dec
ret
repnz
push
sub
ds
out
ins
pusha
push
hlt
scas
pop
inc
loopne
push
xchg
pop
out
pop
(bad)
or
mov
jge
(bad)
mov
js
push
repz
push
inc
addr16
ins
adc
adc
loopne
sbb
push
xchg
mov
(bad)
pop
pusha
sub
outs
dec
cmps
mov
or
rol
(bad)
inc
addr16
mov
ss
mov
xchg
push
cmp
jno
lds
add
pop
outs
mov
xchg
lahf
out
add
dec
cmc
xor
fsubr
mov
loop
adc
sbb
movs
fwait
dec
lods
xchg
ror
ja
stos
cmp
add
out
std
call
or
repnz
xor
push
cmp
out
adc
gs
pop
shr
pop
(bad)
push
mov
ds
pop
stc
and
pop
xchg
add
inc
loopne
pop
add
fisubr
inc
add
inc
push
aam
shl
push
push
mov
pop
adc
stos
mov
or
push
test
sub
loope
jnp
sub
and
sub
in
pop
test
jmp
shl
test
stos
lock
aas
sbb
jl
xor
cmp
scas
mov
xchg
in
mov
add
cmp
cmp
cmp
dec
(bad)
jmp
mov
fwait
jmp
xlat
and
mov
push
jnp
xchg
add
lods
push
fs
mov
cmp
inc
and
mov
mov
test
ins
pop
jo
sub
(bad)
mov
arpl
dec
sbb
nop
push
mov
jne
mov
fwait
es
retf
retf
xchg
sbb
aas
test
in
and
int
pop
fistp
inc
scas
int3
fidivr
push
out
fmul
mov
mov
scas
arpl
rcr
stc
adc
adc
push
dec
int3
jns
sub
outs
cmp
adc
cmp
push
jle
pop
into
cmps
mov
mov
push
add
cmp
sub
fdivr
cmps
jge
xor
cmp
imul
clc
cli
test
xchg
int3
mov
repz
push
jmp
pop
push
aaa
adc
pop
inc
mov
ja
das
xor
mov
outs
mov
mov
add
out
lods
pop
into
xor
or
(bad)
stos
cwde
jbe
mov
js
js
xchg
leave
shl
mov
sbb
or
xchg
jnp
shl
pop
fstp
ror
in
imul
test
sub
inc
jmp
out
mov
(bad)
popf
or
push
inc
dec
movs
rcl
in
cs
ss
movs
test
push
xchg
fwait
clc
pop
mov
fsubrp
aas
(bad)
jmp
inc
jg
fs
mov
fstp
mov
pop
int
mov
cmp
xchg
and
dec
and
test
repnz
push
or
in
fadd
pop
into
vmovss
arpl
cmp
fwait
aas
and
sbb
jle
cmc
add
dec
push
pop
popa
pushf
ds
pop
or
imul
lea
xor
lea
mov
cmp
mov
(bad)
mov
les
sbb
data16
shr
in
fidivr
adc
mov
mov
loop
jb
in
mov
mov
(bad)
imul
daa
jnp
push
cmp
xchg
jecxz
add
sbb
outs
loop
pop
sbb
movs
add
fcmovnb
(bad)
gs
fisttp
xor
cmp
into
je
es
pop
mov
shl
sbb
cmp
out
xlat
pop
fisttp
push
cmps
push
xor
sahf
lahf
xchg
or
int3
push
imul
cmp
adc
and
pop
sar
lea
xor
test
adc
js
ret
jbe
test
mov
mov
mov
leave
sub
sbb
pusha
pop
pop
dec
lahf
or
pop
and
add
or
leave
jb
(bad)
jg
outs
cmp
in
idiv
ja
ss
add
pushf
and
push
add
test
xchg
push
xor
fs
call
cmp
sub
jmp
xchg
jne
pop
(bad)
arpl
add
cmp
jnp
out
out
sub
stos
mov
movs
cdq
(bad)
jl
sub
shl
scas
cmp
jp
cmp
retf
rol
xor
push
pop
mov
adc
int
hlt
jne
and
retf
fmul
scas
enter
adc
pop
pop
(bad)
xchg
stc
xor
ds
mov
adc
sub
inc
fwait
mov
jp
push
popf
out
test
xchg
jmp
stos
cmps
std
or
fnstenv
fcomp
sahf
sbb
js
gs
mov
iret
das
popa
pop
or
push
xor
test
add
ret
stos
retf
mov
sahf
jge
mov
adc
inc
movs
test
and
sbb
xchg
imul
(bad)
ja
adc
mov
push
test
repnz
fdiv
fld
push
mov
xor
dec
ror
mov
outs
jmp
sub
cld
jns
fidiv
sar
test
adc
sbb
or
mov
or
cmp
sub
daa
adc
inc
ins
mov
adc
jns
out
mov
inc
lds
mov
aaa
xlat
mov
stos
xchg
in
movs
in
pop
lock
inc
leave
sbb
iret
or
dec
lods
sti
or
fprem1
pop
mov
stos
push
mov
jmp
fdivp
pop
sbb
out
add
shl
aam
lea
fsubr
cmp
sub
(bad)
neg
js
jne
not
cli
or
je
(bad)
dec
pushw
add
jge
popf
mov
adc
(bad)
cmc
rcr
ds
jno
xor
sub
fwait
bound
add
gs
into
mov
out
inc
fcomp
fistp
enter
mov
jl
dec
(bad)
lods
call
jge
sbb
mov
aam
sub
jae
xchg
mov
pop
scas
jno
call
iret
cmc
or
mov
jae
sub
cmc
pop
xor
fdivr
in
sahf
fadd
mov
mov
jns
jecxz
daa
mov
mov
test
sti
xor
mov
cdq
fild
ret
stc
fild
cmp
jbe
cmp
fld
cmp
sbb
inc
inc
cmp
and
add
dec
cld
imul
sbb
and
cmps
and
shl
fst
add
jo
loopne
jecxz
mov
test
jp
inc
in
pushf
cli
inc
xor
out
push
pop
xor
jno
lods
jle
cdq
adc
cwde
sub
sbb
iret
ins
add
cwde
jb
mov
sub
popa
retf
jbe
mov
adc
fimul
mov
lea
push
rol
stc
test
js
inc
in
or
jb
int3
mov
add
test
es
mov
inc
lahf
cld
xchg
stos
std
nop
loop
jne
dec
jnp
fxch
popa
aad
rcl
loopne
loopne
pop
das
loope
lods
mov
xor
in
(bad)
retf
lods
push
cmp
mov
idiv
mov
repnz
lods
mov
pop
jmp
xchg
cmp
pushf
js
push
test
xor
mov
push
xor
(bad)
out
add
jmp
rcr
(bad)
test
shl
(bad)
ss
push
push
mov
and
sbb
cmp
pop
jge
adc
jle
aam
out
jo
push
rcr
mov
ja
and
and
fiadd
loopne
iret
imul
ja
in
adc
jmp
push
pop
(bad)
jl
loopne
ins
push
pop
stos
in
pop
scas
and
mov
mov
mov
mov
dec
mov
inc
mov
out
cli
outs
shl
xor
nop
xchg
mov
push
out
xor
pushf
movs
movs
xchg
inc
sahf
sbb
push
mov
cli
xor
xor
shr
in
int
repz
add
std
mov
xchg
push
ja
ret
call
pop
push
mov
sub
mov
retf
adc
dec
or
cmp
jmp
ss
imul
inc
cmp
inc
ja
cmp
adc
cwde
popa
push
movs
sbb
cmps
stos
in
popa
xchg
inc
cdq
fdivr
leave
pop
push
aad
fs
cmp
gs
test
dec
sbb
mov
nop
cmp
push
call
jmp
cmc
fisttp
xchg
fnstsw
xor
mov
rcl
into
xchg
push
out
jnp
fidiv
xchg
inc
xor
lods
lahf
out
mov
jge
(bad)
shr
hlt
je
xchg
out
cld
pop
mov
pop
ret
dec
(bad)
push
add
pop
(bad)
loopne
xor
jo
xchg
mov
or
and
rcl
setg
arpl
bound
clc
inc
fcom
sbb
cmp
sub
mov
sub
sbb
and
pop
pop
scas
loope
cmp
sub
jg
test
rcl
repnz
test
xchg
mov
push
jns
pop
xchg
push
es
enter
adc
add
sbb
mov
or
pop
sahf
and
clc
retf
outs
iret
icebp
inc
cdq
adc
mov
loopne
cmps
je
jl
outs
push
mov
shl
mov
loop
and
mov
sahf
mov
imul
inc
xor
comiss
xchg
jle
int
scas
scas
or
shr
ss
push
prefetcht0
mov
dec
out
imul
jne
cmp
cmp
cmp
(bad)
mov
fimul
pop
sub
pushf
xchg
mov
lock
popf
mov
push
cwde
das
jmp
mov
xchg
mov
mov
xchg
mov
ds
rcl
xor
push
stc
dec
lock
or
or
sub
aaa
test
xchg
push
push
loop
xchg
jno
(bad)
popa
imul
mov
movs
fdiv
jp
stc
xchg
mov
(bad)
mov
xchg
retf
xor
or
das
ror
lock
mov
sbb
inc
xchg
jo
xor
jecxz
das
pop
and
aaa
jnp
adc
cmp
ds
ss
jno
ins
fsub
imul
xor
addr16
mov
rcr
fiadd
rcr
test
and
jmp
mov
dec
iret
sub
(bad)
cld
retf
fcom
mov
pop
mov
xor
push
outs
int3
mov
idiv
repnz
xor
pop
mov
icebp
leave
jnp
mov
lea
sti
test
mov
xchg
enter
cmps
or
aas
xchg
call
hlt
jp
sub
xor
add
pop
int3
jmp
outs
jmp
enter
jle
mov
jecxz
adc
cmp
jle
jne
push
ja
cli
xchg
hlt
xchg
adc
lods
jno
cmp
and
sahf
jl
xlat
jne
not
jge
pop
(bad)
popf
inc
mov
jp
fs
mov
(bad)
mov
jne
xchg
not
add
add
cld
jge
sbb
test
dec
jg
in
pop
je
or
mov
call
ficomp
dec
shl
mov
adc
nop
cmps
retf
sub
push
test
sub
cmp
push
add
ret
out
out
dec
in
arpl
inc
jns
jp
xor
loop
sbb
mov
cdq
jmp
test
cmp
add
cli
(bad)
ret
xchg
xlat
and
aas
pop
add
mov
sub
mov
mov
sub
sub
and
jb
bound
lahf
fwait
aas
and
lea
inc
popa
pushf
jne
pop
mov
mov
mov
das
and
int3
jl
mov
mov
cmps
sbb
xor
gs
mov
pusha
jle
js
xchg
and
fisttp
xor
jne
jp
xchg
outs
and
gs
sub
loope
fdiv
xchg
or
test
retf
sub
in
mov
inc
in
out
cmp
test
inc
test
pop
pop
scas
push
retf
xor
mov
movs
cmps
das
xor
sub
in
sub
in
gs
arpl
retf
mov
jecxz
adc
(bad)
mov
dec
(bad)
out
cmps
cmp
xor
mov
hlt
stos
shl
dec
(bad)
in
aam
test
cld
ins
in
jmp
(bad)
mov
jmp
and
xor
jns
loope
push
fdiv
std
nop
push
and
popf
cmp
movs
sbb
mov
iret
mov
add
test
test
(bad)
test
fwait
dec
push
cmps
xor
in
test
stc
out
loopne
(bad)
or
test
cld
mov
(bad)
loopne
push
jl
dec
(bad)
in
pop
mov
rcl
(bad)
mov
lods
cmp
arpl
in
in
popf
mov
mov
sbb
mov
mov
pushf
(bad)
xor
test
sub
cmp
xchg
xor
sub
pop
cmp
and
sbb
adc
fs
push
clc
pushf
jg
cmp
pop
cld
mov
add
(bad)
mov
or
popa
fisttp
out
mov
mov
cmp
and
dec
mov
add
fst
push
mov
jne
sbb
sub
std
and
fisub
out
cld
dec
push
jbe
test
enter
sub
cmp
(bad)
adc
pop
les
sbb
xchg
in
into
add
sti
mov
stos
scas
hlt
lds
cwde
xor
push
dec
addr16
jns
fcomp
mul
ins
(bad)
scas
pop
xchg
mov
adc
dec
push
ja
jp
rcr
jne
bound
clc
bound
xor
jno
pop
mov
pop
add
xchg
popf
mov
cmps
adc
mov
out
fdivr
jmp
ds
push
lock
fwait
stos
sbb
xor
jl
(bad)
adc
push
ss
lahf
ret
scas
imul
rol
add
sti
pop
adc
cwde
push
imul
and
out
mov
add
test
cmp
gs
mov
out
push
cmps
inc
jl
jl
or
(bad)
rep
adc
xchg
mov
sahf
popf
jle
fadd
dec
add
xchg
pop
sub
std
std
push
xor
pop
mov
sar
lods
xlat
xchg
xlat
rcl
dec
adc
or
(bad)
in
jae
cmps
je
aad
or
aaa
adc
outs
push
enter
loopne
xor
and
inc
mov
mov
sbb
out
pop
push
aam
pop
mov
fwait
icebp
sbb
jmp
sbb
lock
loop
imul
or
ret
adc
cld
sbb
inc
mov
movs
jg
aam
in
xchg
push
cmps
mov
outs
jmp
leave
sub
xor
(bad)
fmul
sbb
xor
jp
xchg
call
pop
out
retf
sub
inc
call
outs
cmp
pop
pop
in
retf
pop
sub
or
ja
fmul
ja
add
test
imul
jmp
and
inc
jae
popf
jb
mov
je
push
inc
(bad)
loopne
sub
jb
dec
jbe
jo
cmp
and
mov
mov
pop
icebp
popa
scas
popf
add
call
adc
es
mov
outs
and
xchg
(bad)
or
dec
(bad)
add
mov
adc
outs
xor
sbb
icebp
out
mov
cmc
es
mov
daa
mov
sbb
stos
scas
int
xor
(bad)
or
push
bound
pop
dec
outs
xchg
jo
mov
push
pop
xor
movs
jg
jns
in
mov
loop
aas
dec
dec
push
mov
sub
jb
pop
adc
or
outs
movs
call
pusha
test
cmp
jg
pop
add
cld
imul
jae
ret
xchg
pop
dec
mov
sahf
sbb
repz
pop
out
outs
popf
xchg
dec
sar
ss
rol
ss
or
and
jge
adc
and
pop
(bad)
mov
pop
pop
stos
(bad)
in
sbb
test
pop
ret
loopne
mov
xlat
scas
loopne
(bad)
cmps
out
popa
dec
repnz
cwde
xor
call
pop
call
das
mov
push
mov
jg
pop
(bad)
loop
mov
mov
add
gs
imul
inc
mov
add
xor
push
and
dec
pop
or
mov
call
dec
scas
xchg
adc
loopne
add
pop
mov
xor
scas
pop
xchg
out
mov
add
rcl
pop
sub
ins
call
mov
scas
in
jge
xor
fsub
loope
dec
and
icebp
loope
adc
sub
jmp
xchg
fcom
xor
aam
or
lods
js
cmp
stos
js
sub
js
iret
stos
shr
lahf
jns
int
neg
arpl
fisubr
mov
in
lds
scas
and
xor
aaa
retf
bound
push
add
push
sub
pop
push
sti
fisub
lahf
jge
lahf
mov
pop
mov
sub
(bad)
lods
jge
outs
hlt
sbb
shl
mov
push
push
cmp
mov
pusha
pop
jle
std
fwait
retf
repz
js
call
sbb
adc
int3
stos
fidiv
mov
mov
fcomp
cmps
sti
popa
hlt
int
or
in
push
push
adc
lods
sub
outs
in
mov
mov
cmp
jmp
or
into
or
dec
jmp
(bad)
fs
mov
fwait
mov
jns
mov
mov
dec
xchg
dec
pop
mov
dec
bound
rol
or
enter
rcl
fwait
push
fxch
aaa
jge
sub
push
sbb
xchg
sar
aaa
inc
in
cli
xchg
shr
(bad)
adc
dec
das
cmp
movs
test
mov
lea
lods
push
jbe
pop
in
push
jb
dec
pop
clc
xchg
test
push
stos
out
mov
pop
add
test
int
xchg
ret
data16
adc
sub
(bad)
adc
xchg
cwde
fwait
push
ret
jno
sub
mov
add
mov
mov
mov
mov
mov
jo
mov
or
add
imul
cwde
dec
std
stos
jp
jne
scas
adc
ret
dec
in
push
inc
and
xchg
push
inc
mov
jg
pushf
sbb
jb
in
push
pop
inc
fwait
loopne
icebp
mov
cmp
les
cmp
rcr
(bad)
loop
std
pop
out
pop
dec
ficomp
mov
or
sbb
movs
adc
sbb
loope
adc
and
repnz
pop
shr
mov
inc
test
pop
dec
(bad)
out
sbb
inc
xor
xlat
neg
pop
int
pop
xchg
loope
sbb
dec
mov
jg
adc
js
pushf
rol
xor
sub
inc
adc
stos
xchg
loop
and
mov
xchg
jg
sbb
add
push
mov
push
stos
pop
jmp
push
add
(bad)
inc
in
xor
retf
ins
sbb
mov
sub
loope
fcmovnb
jbe
imul
cld
(bad)
pop
dec
sbb
in
mov
xchg
popa
mov
push
fsub
retf
push
ret
pop
push
jo
push
es
popf
stos
in
ret
adc
in
xchg
xchg
ds
icebp
dec
cld
pop
or
xor
stos
inc
mov
and
jmp
add
std
adc
cmp
aas
fsubr
das
jb
push
fldcw
call
arpl
sar
aam
fistp
int3
mov
xor
addr16
dec
cmp
pop
lods
clc
cmp
and
je
cmp
cmp
jnp
(bad)
jns
mov
out
retf
inc
jmp
mov
jnp
xlat
mov
or
(bad)
clc
push
es
jns
jbe
sbb
push
(bad)
jb
inc
jne
jnp
retf
(bad)
scas
scas
sar
sar
je
ror
icebp
lock
push
hlt
jnp
adc
dec
adc
fistp
js
xchg
lods
lods
mov
movs
inc
jmp
or
loope
shl
sub
adc
aam
(bad)
pushf
aam
cmps
sub
call
int
or
ror
lock
pop
pop
mov
mov
fwait
lods
cmp
fild
fisttp
stc
dec
adc
ret
push
push
lahf
and
imul
lahf
mov
and
aas
cmp
mov
dec
sbb
fcomp
bound
xchg
adc
mov
jp
call
add
js
gs
jb
pop
or
in
pop
xor
inc
stos
lods
ror
icebp
xchg
aaa
gs
iret
ja
stc
push
mov
mov
add
int
mov
cdq
and
lods
lahf
jle
jmp
and
or
cmp
jo
jmp
mov
rcl
ja
hlt
add
(bad)
(bad)
div
mov
or
test
cld
jl
dec
pop
fwait
out
fsub
dec
shl
inc
and
pop
jno
out
sbb
in
and
data16
test
movs
pop
ror
aad
lods
xlat
jmp
push
and
mov
inc
mov
iret
cmps
adc
mov
movs
mov
lock
outs
xchg
sar
push
sbb
clc
loopne
or
sbb
inc
or
jl
packuswb
mov
cmp
shr
repz
lahf
mov
adc
adc
inc
lahf
nop
(bad)
mov
cs
shl
fsubr
dec
dec
mov
jmp
inc
lods
and
aam
fnsave
mov
stc
dec
dec
imul
stos
dec
and
adc
mov
ret
add
jmp
imul
push
pop
jp
push
inc
add
mov
jp
popa
leave
mov
mov
sbb
lock
cmp
inc
(bad)
stc
repz
xor
push
out
iret
js
dec
or
push
adc
mov
inc
push
sbb
jbe
enter
fcmovnb
inc
es
int
cdq
jl
scas
add
sub
div
jmp
inc
aaa
pop
(bad)
imul
pusha
push
(bad)
and
test
loop
adc
adc
push
adc
fs
(bad)
std
gs
pop
sar
xchg
aas
jbe
stos
xchg
cmp
mov
fsub
stos
push
int
add
cdq
stc
fsubr
stos
je
cdq
sub
scas
imul
cmp
push
shl
lea
adc
cdq
clc
(bad)
sbb
dec
imul
cld
push
mov
bound
cld
xchg
pop
(bad)
in
cld
repnz
pushf
pop
les
inc
adc
sbb
mov
mov
add
rol
or
out
or
or
xor
clc
dec
or
inc
and
arpl
xor
and
je
mov
mov
pop
repnz
mov
fdiv
xlat
retf
xchg
add
pop
sub
jns
xlat
add
(bad)
test
pop
aaa
and
(bad)
push
loop
adc
sbb
sub
cmps
mov
push
cmp
clc
dec
pop
mov
mov
mov
call
jae
mov
out
stos
lahf
xchg
adc
xor
sbb
sahf
mov
test
xchg
scas
in
cdq
jnp
stos
xchg
icebp
fwait
pop
jo
and
xchg
sbb
pop
mov
mov
add
lds
mov
inc
pushf
hlt
fwait
mov
jno
out
nop
lds
in
sbb
or
jmp
push
xor
in
das
div
in
in
iret
out
dec
jo
pushf
out
cmps
push
push
push
aad
scas
mov
dec
add
push
dec
fbstp
into
adc
(bad)
loop
and
add
lods
mov
das
(bad)
cmps
mov
(bad)
into
stos
outs
popf
lods
loop
daa
jne
sahf
(bad)
in
and
int3
into
add
and
adc
mov
xlat
mov
dec
aaa
ss
icebp
mov
retf
mov
(bad)
(bad)
(bad)
pushf
xor
outs
int3
inc
inc
inc
and
push
outs
imul
outs
in
cmp
xchg
popf
dec
fldcw
shl
adc
ret
mov
retf
sbb
test
pop
cmp
add
mov
sub
mov
inc
xchg
add
and
cmp
sub
popa
pop
jo
xor
inc
jne
or
xchg
mov
cmp
mov
fnstsw
pusha
inc
aad
xchg
add
sub
push
jp
dec
test
or
fild
or
ucomiss
call
fidiv
mov
fucomp
add
fst
enter
daa
movs
and
mov
or
or
aad
sbb
std
sbb
dec
jo
neg
mov
mov
and
jp
push
pop
into
addr16
pop
mov
rcl
int
mov
pop
out
mov
sbb
out
inc
jb
leave
aam
imul
ret
test
push
adc
out
dec
out
pop
mov
dec
pusha
lahf
daa
jb
fsubr
pop
mov
icebp
jb
cmp
sub
mov
data16
fwait
loop
jno
je
mov
repz
push
sahf
mov
int3
outs
icebp
scas
and
push
mov
nop
xchg
dec
ret
clc
cli
fs
xor
arpl
cmp
pop
ficom
push
popa
scas
pop
jns
jno
mov
cs
mov
xor
inc
sub
sbb
retf
imul
mov
push
xchg
scas
mov
jecxz
pop
xchg
ret
fidivr
push
lods
mov
push
sbb
and
or
outs
mov
xor
cdq
fiadd
outs
aad
sub
test
add
pop
push
mov
pop
bnd
cmps
dec
xchg
test
test
jmp
ret
or
outs
test
push
mov
cmp
loop
mov
out
int3
scas
push
imul
xchg
call
adc
add
xchg
push
fs
jno
push
ins
push
cmp
xchg
jmp
sub
int
aad
and
in
inc
aad
xchg
in
scas
js
inc
mov
stos
lahf
inc
dec
mov
xchg
mov
gs
add
adc
xor
leave
data16
sbb
das
pop
retf
push
loop
sahf
rcr
jp
mov
cld
mov
add
push
add
jge
lock
push
push
jo
or
add
jge
imul
(bad)
mov
cdq
and
pushf
in
pop
sub
clc
or
pop
xchg
or
push
aaa
(bad)
ins
sbb
cmps
dec
mov
(bad)
cli
or
movs
pop
pop
add
repz
mov
addr16
ins
pop
and
cmp
fld
push
mov
push
add
mov
int
push
rcr
mov
pop
and
(bad)
and
dec
inc
inc
push
sbb
mov
inc
lea
scas
xchg
ret
movs
(bad)
aas
mov
push
add
mov
mov
cmp
or
mov
adc
scas
shl
cs
and
std
cld
dec
enter
int3
mov
ja
fisub
icebp
das
xchg
adc
mov
jbe
jecxz
sbb
fmul
mov
mov
rol
mov
pop
push
icebp
push
sar
aaa
jb
lods
iret
les
and
mov
mov
mov
cmps
dec
sahf
cmp
xor
xchg
inc
xor
cmp
or
dec
test
mov
xor
or
mov
jmp
movs
pusha
test
sbb
aam
adc
lods
cmps
into
and
popw
fdivr
push
jg
jne
sbb
cmp
iret
aad
push
lahf
lods
daa
mov
fistp
sbb
jg
iret
jbe
pusha
out
or
xchg
cmps
ins
(bad)
and
pop
jo
jp
push
push
sub
in
xchg
and
(bad)
mov
out
aaa
mov
and
jns
out
add
jmp
div
lea
add
push
lea
mov
xor
or
std
cmps
xchg
in
mov
pop
cmp
inc
dec
push
push
into
scas
adc
cs
pop
mov
test
ret
dec
aam
xchg
pop
mov
inc
cmp
xor
mov
pop
ror
push
dec
cmp
setne
xor
lock
ss
sub
rcr
test
sbb
mov
test
mov
cmp
int
dec
pop
cmp
mov
pop
push
hlt
mov
sbb
add
pop
mov
lahf
sub
retf
xchg
inc
aaa
cwde
stos
sub
or
loop
cmp
xchg
push
adc
xchg
xchg
cmps
fnstcw
fstp
add
jbe
adc
retf
scas
mov
sbb
push
dec
push
pop
mov
adc
mov
test
inc
mov
sbb
inc
mov
push
sub
es
hlt
(bad)
and
fild
jo
and
aas
hlt
push
push
in
ja
lods
add
into
inc
loope
lock
push
adc
and
pop
sub
adc
loop
in
dec
rcr
sbb
aaa
xchg
cmps
mov
test
mov
and
jno
arpl
icebp
mov
lock
mov
ss
cmp
je
pop
jle
adc
(bad)
sahf
cmp
loopne
loopne
adc
test
out
jg
and
addr16
into
xor
xor
sbb
sbb
add
jp
sti
adc
jl
cs
iret
out
ins
mov
xchg
jo
retf
inc
icebp
and
push
ret
mov
push
adc
hlt
les
mov
jnp
stos
or
xchg
out
scas
jg
cmp
mov
scas
push
bound
hlt
mov
jb
xchg
dec
cmc
pop
(bad)
call
pop
nop
pop
out
and
les
retf
sbb
and
xchg
popf
fwait
dec
call
lahf
retf
fwait
xchg
pop
retf
sbb
call
pop
cmp
ret
mov
dec
lods
ret
shl
or
mov
mov
fdivp
cld
arpl
adc
loope
iret
fisttp
push
dec
iret
loope
movs
enter
pop
(bad)
mov
inc
jnp
xor
cmp
mov
add
cli
int
ret
jne
popa
cmps
lds
cwde
and
inc
in
addr16
xor
inc
int
repz
inc
mov
fst
test
mov
stos
push
jg
xchg
cli
or
pop
fisttp
mov
test
xor
xor
(bad)
aad
dec
sbb
push
call
sahf
cmp
sub
sub
leave
xchg
add
sub
and
lock
sahf
push
pusha
adc
mov
and
inc
push
sti
xor
test
lock
hlt
sbb
scas
inc
sbb
addr16
loope
xor
movs
(bad)
std
or
and
popa
icebp
cli
lahf
jle
retf
jl
cmp
in
leave
add
push
out
mov
repz
inc
cmp
inc
jl
fimul
in
inc
mov
mov
in
das
(bad)
stos
cmp
mov
push
fmul
pop
in
xchg
mov
(bad)
jno
or
aad
fst
push
sub
mov
ja
les
(bad)
pop
outs
mov
sub
jne
data16
jo
cmps
inc
inc
push
rcr
push
cmp
out
stc
mov
(bad)
xchg
loopne
std
sti
push
int3
push
mov
leave
movs
pop
icebp
xor
jp
mov
dec
jb
mov
jns
jmp
add
mov
or
push
shl
dec
lods
mov
inc
pop
les
pop
jbe
jb
in
fimul
mov
add
ret
pusha
add
retf
xor
mov
inc
repnz
je
(bad)
fidiv
push
pusha
test
fwait
push
xor
aaa
hlt
cmps
mov
(bad)
and
mov
sbb
ret
les
push
outs
mov
mov
out
cmp
mov
nop
lods
pop
sub
sbb
lahf
das
das
cld
nop
dec
and
jle
icebp
mov
fstp
and
pop
dec
ss
inc
mov
sti
push
mov
fild
nop
lock
dec
shr
jne
mov
mov
xor
cmps
pusha
xor
xor
shl
popa
inc
mov
mov
mov
cmps
mov
mov
out
mov
xchg
popf
fdiv
stos
outs
int
fistp
sti
aas
test
retf
add
jns
movs
inc
leave
scas
repz
cmps
pop
aas
push
test
xchg
je
out
add
mov
add
mov
mov
bound
jge
jg
inc
xchg
ror
and
out
jle
inc
lods
xchg
dec
ret
cdq
lods
into
cmp
xchg
scas
sub
mov
jne
aas
mov
lahf
stos
cmp
into
xor
pop
pop
jmp
adc
sbb
iret
push
add
stos
shr
jne
dec
cmp
push
dec
lea
jno
lahf
hlt
push
loop
add
pusha
dec
adc
pop
dec
cmp
xchg
in
sub
cmp
call
pop
fldcw
dec
jl
cmp
pop
loopne
mov
cwde
ja
fsubr
add
adc
xchg
arpl
or
stos
mov
je
cmps
xor
(bad)
adc
add
into
fincstp
jbe
test
dec
jl
mov
push
mov
fsub
out
(bad)
adc
retf
loope
and
push
dec
xchg
sti
mov
stc
ret
mov
rcl
cmps
test
cmp
or
(bad)
mov
mov
lds
arpl
mov
stos
outs
xor
popa
jecxz
dec
scas
cs
and
mov
adc
fcom
ret
cs
lea
sbb
xlat
inc
jge
or
jbe
xchg
enter
pop
cmp
test
rcr
pop
add
pop
ins
aaa
je
lahf
fstp
jle
sub
push
or
fdiv
mov
dec
loopne
cmp
jecxz
xor
jns
mov
mov
xor
jmp
and
lock
mov
pop
rcl
bnd
push
aad
xor
adc
mov
add
xor
push
fs
bound
xor
ds
add
push
loop
(bad)
lahf
shr
mov
div
adc
out
sbb
cdq
cmp
xchg
jae
mov
sub
xor
lahf
or
push
xor
sbb
add
inc
cmps
movs
stos
mov
inc
add
xchg
fcomp
js
in
and
cdq
cmp
or
dec
sub
mov
mov
jmp
ja
jo
add
stc
jno
addr16
repnz
iret
push
test
sub
jmp
cdq
jecxz
retf
leave
aam
outs
pop
cs
adc
ds
cmp
or
fcomp
or
jno
(bad)
js
ins
addr16
outs
lea
push
xchg
loop
and
in
fisub
ret
sub
stc
lahf
push
xor
inc
cmp
cli
cmps
ret
ror
mov
xchg
test
or
mov
mov
ins
dec
inc
nop
test
ja
mov
or
or
rcr
cmc
sub
repz
retf
and
mov
xlat
add
mov
das
push
scas
loop
cmps
dec
jl
pop
inc
out
lods
adc
jno
add
mov
cmp
iret
pop
mov
cli
repz
cmc
jbe
outs
mov
ss
in
popf
pop
mov
outs
xchg
std
push
mov
shr
int3
outs
stos
nop
(bad)
out
or
sub
test
mov
sbb
jl
int
(bad)
xor
mov
into
dec
push
and
xlat
or
jne
scas
aad
add
dec
scas
mov
int
fidiv
hlt
xchg
mov
jge
into
push
xor
xchg
test
inc
push
push
sbb
pop
push
lods
fsub
dec
repnz
aad
push
add
ds
fbld
imul
mov
or
rcl
sar
or
mov
icebp
test
dec
(bad)
mov
dec
cs
test
adc
add
jp
lods
jnp
or
inc
jp
je
xchg
cmp
cdq
mov
je
lods
sbb
and
sub
sub
jp
pop
add
sti
add
sub
je
mov
fbstp
mov
push
dec
inc
pop
(bad)
lods
push
and
loop
add
fbld
nop
lods
fnstenvw
movs
or
pop
sub
leave
and
ds
je
jne
clc
xor
jns
jae
jmp
scas
adc
ins
std
imul
xlat
mov
jb
stos
dec
xor
xlat
iret
mov
jno
out
cld
push
xor
aaa
add
in
adc
sbb
jo
pop
cld
mov
mov
in
xchg
jmp
jge
jbe
sbb
ret
gs
jbe
pop
inc
jne
adc
aad
fild
xchg
pop
and
and
je
hlt
popa
addr16
jecxz
iret
data16
and
mov
mov
out
loope
cmp
aad
dec
cmp
and
sbb
sti
loop
xchg
cmp
in
in
fwait
sub
int3
adc
push
add
inc
loopne
mov
pop
(bad)
popa
scas
inc
push
cmp
xchg
rol
ret
or
xor
mov
jae
add
js
test
push
iret
mov
inc
sub
xchg
xor
xchg
daa
xchg
ins
repz
bound
add
loop
lea
jecxz
sbb
js
push
stc
popa
cmps
xchg
or
test
dec
test
jge
xlat
mov
jno
into
push
lods
mov
add
cmp
aas
test
adc
cmp
xor
imul
not
push
mov
es
cmp
or
hlt
sub
cmc
jmp
lock
popa
das
and
add
and
xchg
jbe
outs
mov
pusha
retf
or
test
adc
pop
add
sub
jl
outs
int3
mul
in
adc
pop
(bad)
lods
in
xchg
add
frstor
aaa
dec
push
xor
and
mov
(bad)
jo
hlt
or
ffreep
and
clc
arpl
daa
mov
out
mov
retf
pop
fild
jbe
in
call
sbb
pop
shr
test
(bad)
and
pop
sbb
fmul
and
idiv
dec
cmps
leave
mov
outs
retf
leave
inc
ja
dec
cmps
xchg
sub
loopne
fsub
sub
dec
ret
(bad)
xchg
mov
cdq
gs
jns
int3
ds
loop
mov
(bad)
mov
sub
add
sar
jne
je
es
not
inc
pop
retf
jno
cld
sbb
call
mov
mov
pop
mov
jns
shl
inc
sbb
inc
mov
dec
and
addr16
xchg
sahf
fbstp
faddp
sahf
(bad)
fsubr
rcr
pop
mov
loope
(bad)
stc
loop
mov
xchg
mov
push
push
xlat
xor
mov
cmp
dec
rcl
or
dec
inc
xor
xchg
mov
xor
sub
jecxz
retf
retf
mov
xchg
(bad)
not
adc
not
pop
mov
into
(bad)
or
icebp
jo
pop
jge
xchg
or
and
mov
or
add
xchg
ds
mov
stc
pop
loope
nop
cwde
push
sub
aas
shl
push
mov
std
das
xchg
and
ret
(bad)
xor
je
fsubp
push
(bad)
loopne
cmp
lahf
repz
iret
xchg
imul
sbb
je
pusha
mov
jl
test
pavgw
retf
dec
mov
hlt
push
clc
(bad)
sbb
dec
xor
mov
push
sbb
mov
jle
lods
lock
sbb
gs
mov
xchg
lods
cmp
hlt
mov
pop
es
push
ins
pop
adc
cmps
mov
mov
lea
nop
cmp
cmp
jl
(bad)
cli
push
popa
xor
cmp
cmp
push
and
xor
adc
lea
repnz
mov
push
pusha
jge
retf
and
imul
sub
pop
inc
sub
aam
movs
cmp
jbe
cmp
dec
inc
dec
(bad)
pop
sub
push
cmc
jl
out
push
inc
dec
jg
ror
sub
jge
pop
(bad)
(bad)
idiv
mov
pushf
inc
xchg
push
rcr
fild
adc
add
and
inc
(bad)
call
push
gs
mov
jmp
nop
dec
fadd
xchg
jmp
adc
add
mov
retf
jbe
cli
dec
stc
es
mov
je
add
mov
imul
ins
dec
xchg
sbb
push
ficomp
lahf
push
cmp
xchg
mov
popf
push
sub
ret
lds
test
leave
jl
inc
in
stos
aam
or
jmp
pop
dec
inc
xchg
(bad)
mov
pushf
cmp
inc
lock
jns
pop
fidiv
add
lock
jno
cld
push
lds
jbe
push
push
mov
jbe
imul
imul
mov
int
call
cwde
fwait
(bad)
dec
and
je
inc
push
or
retf
sub
je
shl
push
mov
addr16
mov
outs
pop
leavew
add
gs
out
jle
in
inc
and
inc
mov
fnsave
jecxz
mov
jmp
and
mov
push
mov
pop
shr
icebp
pusha
jbe
arpl
mov
or
js
test
and
cld
in
lods
ds
icebp
inc
pop
fs
pop
gs
ret
pop
push
cmc
pop
imul
repz
ret
mov
cmp
sti
xchg
push
push
stos
aam
xor
idiv
int
cmp
adc
jle
adc
out
daa
xchg
pop
add
ror
ror
adc
xchg
mov
pop
scas
pop
sbb
sahf
mov
push
add
lods
and
fldcw
cmp
outs
punpckldq
inc
popf
xor
add
push
pop
push
(bad)
xchg
jmp
mov
sub
test
xlat
or
sbb
or
(bad)
sbb
push
loope
arpl
inc
lock
inc
mov
xor
cdq
lahf
rcl
outs
in
arpl
sub
sub
xor
lahf
rcl
inc
daa
mov
adc
jno
int
hlt
xchg
jae
lahf
cmc
sub
jp
outs
or
push
fsubr
movs
mov
stc
ins
rol
adc
in
add
in
es
cmp
mov
xor
enter
test
js
jns
test
or
sbb
std
fcomp
ficomp
jl
(bad)
cmp
pop
pop
and
jg
inc
je
(bad)
fidiv
push
cmc
scas
enter
xor
mov
lock
scas
cmps
inc
fnstenv
lds
dec
sbb
lock
sahf
dec
(bad)
cmp
xor
mov
mov
sti
ins
and
xchg
jbe
adc
or
sub
add
(bad)
mov
add
pop
jl
mov
je
xor
stc
repnz
dec
out
stc
lahf
mov
jg
into
test
adc
cmp
mov
sets
mov
jbe
fsubrp
xor
mov
sahf
push
mov
cld
sub
inc
mov
or
and
lods
mov
mov
dec
sub
test
loop
cwde
mov
das
sub
fcmove
mov
sub
arpl
std
push
data16
enter
xchg
add
stos
int3
sbb
in
and
pop
test
lock
mov
sar
stc
sbb
pop
imul
call
hlt
popf
cld
(bad)
xchg
xchg
adc
cld
xchg
and
(bad)
cdq
inc
gs
dec
je
jecxz
cmp
mov
jns
aas
das
and
push
jo
sub
cld
cs
push
retf
push
std
icebp
das
rep
fdiv
shr
(bad)
imul
cld
push
stos
pop
pop
in
cmp
cli
or
push
jae
push
or
cmps
cmp
popf
xlat
mov
pusha
and
retf
shl
sbb
in
cs
and
lods
and
xchg
push
scas
jno
and
mov
jnp
ja
mov
mov
push
mov
xor
xor
xchg
leave
lods
jge
mov
pop
neg
mov
enter
push
jle
pop
inc
cs
mov
dec
mov
mov
in
pop
imul
push
xchg
jno
gs
inc
mov
inc
fnstenv
shld
add
dec
mov
fcmovnu
ins
mov
rcr
in
bound
stos
push
aad
jb
and
aad
dec
xor
stos
(bad)
jnp
sub
cdq
cdq
movs
ins
jle
mov
mov
jp
std
hlt
ror
imul
xor
mov
jmp
cmp
sbb
adc
das
imul
cwde
dec
jbe
ja
das
das
test
(bad)
ins
jecxz
push
ret
push
out
test
xchg
inc
adc
(bad)
fist
fild
xor
jno
pop
pop
outs
push
test
rcr
test
jg
dec
ret
push
adc
leave
fisubr
iret
mov
mov
cmps
pop
push
or
push
mov
mov
add
js
push
ja
mov
cli
loope
xlat
ret
jb
jl
lahf
leave
cdq
js
outs
push
addr16
mov
push
js
xlat
imul
push
ret
adc
or
std
outs
inc
rcl
jle
(bad)
mov
adc
shr
push
or
inc
inc
call
jp
push
mov
outs
and
dec
jmp
scas
sti
mov
pop
scas
adc
mov
fcmovnb
test
(bad)
addr16
and
jne
dec
pop
cdq
les
dec
mov
lahf
rol
pop
retf
mov
jp
or
dec
and
daa
fild
fsub
gs
sbb
adc
cs
sbb
lahf
push
in
cld
cmovp
scas
sbb
aaa
or
cmp
mov
jp
inc
jns
mov
mov
mov
xor
(bad)
cmp
loope
push
movs
sub
pop
(bad)
repnz
xchg
sub
stos
jne
xchg
cwde
cmp
dec
cmps
cmp
(bad)
(bad)
out
(bad)
pop
pushf
out
ret
ret
pusha
push
mov
xor
sbb
jno
sbb
adc
not
lods
in
or
push
jne
xlat
cli
mov
xor
dec
pop
pop
jmp
inc
xlat
inc
and
mov
pmaddwd
xchg
ror
cs
rol
inc
shl
pop
arpl
pop
mov
shl
jne
daa
aam
cmp
cmp
int3
orps
(bad)
and
mov
xchg
xchg
adc
movs
fld
outs
arpl
push
data16
push
call
call
dec
adc
lods
cmp
jecxz
popa
or
mov
inc
jle
aad
sbb
popf
addr16
dec
push
sbb
xchg
pop
call
lahf
hlt
add
cwde
fsubp
dec
inc
push
in
cmp
and
sub
loope
loopne
mov
mov
jl
pop
mov
jb
pop
movs
test
adc
sub
call
add
or
inc
mov
das
lahf
jnp
cwde
pop
adc
mov
dec
movs
out
sbb
inc
cs
in
mov
movs
mov
loopne
sbb
xor
add
push
mov
ins
xchg
pop
(bad)
xor
aam
and
mov
cld
pusha
adc
push
stos
lods
or
jb
icebp
cmp
sub
and
sbb
and
add
lahf
sbb
push
pusha
add
int3
sti
bswap
sbb
xchg
clc
ja
shl
mov
repz
out
sti
(bad)
pop
xchg
retf
xchg
sub
loope
pop
nop
mov
sbb
fidiv
dec
mov
cmp
mov
rol
push
or
push
rcr
sahf
retf
in
inc
sar
mov
mov
lahf
and
scas
cmc
lahf
mov
pop
icebp
rcl
xchg
dec
aas
popf
fisttp
jl
add
loop
fcom
out
mov
jb
jle
fisub
adc
or
mov
jno
fs
fdivrp
shl
movs
sub
shl
dec
(bad)
mov
ins
cmc
add
push
sar
jb
sub
cli
mov
(bad)
xlat
inc
(bad)
cmps
sub
ret
(bad)
bound
push
adc
or
xchg
adc
mov
data16
add
cmp
movs
jne
inc
lock
(bad)
shr
enter
mov
mov
lods
fwait
cmps
(bad)
pusha
add
inc
(bad)
fucomi
xor
cli
mov
xchg
sub
push
test
adc
sahf
xchg
mov
dec
out
fs
(bad)
mov
xchg
test
pop
push
ins
aaa
sub
jmp
or
cmp
enter
push
out
lock
rcl
bound
(bad)
push
dec
int
push
or
outs
mov
push
jle
sar
in
ficom
mul
lock
int3
cmp
push
(bad)
loop
rol
jmp
or
inc
daa
out
xor
mov
inc
xor
jle
mov
pop
mov
sub
inc
adc
jge
es
in
lods
in
mov
xchg
(bad)
jecxz
jne
jb
jne
in
mov
fcom
imul
out
xchg
and
push
jmp
cmp
inc
jmp
aas
add
mov
call
scas
xor
movs
pop
icebp
inc
repnz
les
push
cmps
addr16
les
test
lods
mov
mov
aam
pop
add
sti
sbb
(bad)
clc
xor
retf
and
ins
(bad)
xchg
cdq
out
leave
repz
xchg
fisttp
mov
loopne
pop
jmp
jnp
in
push
cwde
mov
pop
sbb
xchg
add
scas
push
loop
xchg
jmp
jl
pop
mov
(bad)
ror
enter
pop
not
cdq
jno
fistp
test
mov
aaa
fucomip
xlat
adc
push
pop
cmc
call
repnz
fnstenv
daa
or
mov
movs
push
ins
outs
neg
and
jl
out
and
inc
div
lods
hlt
out
hlt
xchg
daa
loop
jge
xor
sar
xchg
mov
call
sti
daa
mov
pop
ret
pop
xor
sub
sub
gs
push
dec
cs
retf
scas
inc
test
pusha
lds
push
ss
ret
neg
sbb
lock
repz
movs
sbb
jns
dec
out
xor
and
inc
or
push
imul
test
(bad)
mov
sub
cwde
pop
adc
test
into
sbb
jp
and
mov
jne
gs
sub
xchg
mov
and
add
mov
add
mov
aas
imul
mov
jb
aam
jnp
pop
out
fiadd
mov
rol
jo
mov
dec
fld
(bad)
into
scas
adc
adc
xchg
shl
add
xor
pop
lock
mov
sub
xchg
cli
or
xchg
mov
add
push
jbe
inc
cmc
aad
sub
xor
jae
or
out
pushf
push
mov
mov
stos
inc
cmps
call
test
jno
rcl
sar
popa
push
cmp
mov
jbe
repnz
push
xchg
mov
jp
nop
aaa
fs
mov
retf
jns
push
sub
push
icebp
pop
outs
mov
adc
(bad)
jmp
cmp
xor
and
les
inc
repz
mov
sti
stc
fyl2xp1
xchg
call
pop
iret
push
mov
(bad)
in
imul
sbb
xchg
cmps
scas
addr16
jg
repnz
pop
pop
cmp
clc
test
js
std
(bad)
push
xor
fisubr
aam
test
pop
xor
push
pop
rcr
inc
(bad)
(bad)
jecxz
mov
jecxz
(bad)
ficom
jbe
stos
mov
lock
push
inc
rcl
mov
sub
adc
add
pop
xor
es
popf
ficom
cwde
xchg
add
loope
imul
mov
xchg
mul
ins
je
outs
dec
out
jne
adc
xchg
call
pop
mov
movs
jmp
fdivrp
add
mov
test
jno
cmp
inc
jmp
fdiv
sub
ja
arpl
sbb
leave
out
iret
(bad)
js
test
push
in
sti
addr16
fidivr
fmul
imul
popa
xor
add
es
mov
inc
clc
repnz
pop
loop
fwait
mov
sub
ret
rol
pop
cld
sbb
push
mov
push
fimul
push
aam
sti
lods
js
jne
dec
dec
cmp
mov
test
jae
xchg
retf
out
push
pop
aam
mov
fist
jmp
jae
pop
jne
add
xor
pushf
std
or
mov
mov
jg
jns
(bad)
dec
dec
test
movs
xchg
mov
in
scas
ret
or
clc
stos
jge
jmp
jns
and
dec
dec
imul
sbb
sbb
xchg
aaa
fmul
xor
dec
sbb
cld
repz
popf
adc
mov
arpl
xor
push
inc
jb
cs
cmp
jp
pop
lods
stos
mov
pop
mov
test
cli
sbb
jg
lods
mov
stc
sahf
dec
scas
lea
sub
scas
fs
ret
(bad)
adc
repnz
cmp
repz
mov
stos
retf
(bad)
xchg
ins
mov
std
ins
mov
inc
rcl
xor
jns
and
jge
mov
inc
xchg
cli
gs
retf
sahf
scas
xchg
(bad)
and
dec
call
mov
rcr
adc
out
or
jle
sbb
les
test
and
mov
xor
mov
xchg
retf
mov
je
cmp
push
mov
mov
repz
xchg
cmc
xchg
mov
sub
arpl
and
sbb
int
pop
mov
push
push
das
xchg
aas
sbb
in
sub
popa
das
cmp
xor
sub
jmp
adc
or
cmp
sbb
leave
add
not
sbb
jns
mov
fs
mov
das
iret
push
loope
cwde
xor
repnz
sub
loopne
fsubr
adc
dec
fwait
jmp
add
or
cmp
dec
xchg
jne
fbstp
es
mov
pushf
stc
scas
push
(bad)
jbe
int3
mov
je
xor
clc
pop
mov
pop
xor
not
sbb
push
aaa
imul
jo
xor
push
fstp
bound
arpl
mov
push
ins
in
dec
jmp
xor
xchg
mov
bound
sbb
pusha
aad
dec
inc
adc
iret
xchg
push
push
mov
out
(bad)
cmp
in
cmp
dec
and
mov
rcl
in
test
mov
cdq
repz
push
add
scas
leave
mov
or
stos
dec
(bad)
mov
dec
ret
push
stos
push
in
xchg
push
iret
xchg
sbb
cmp
out
lea
and
outs
clc
test
ds
sub
sbb
adc
inc
add
pushf
shl
pop
iret
xor
pop
outs
and
push
mov
dec
add
mul
scas
cmp
adc
pusha
push
ds
test
shr
xchg
adc
test
dec
cld
cli
(bad)
sar
mov
mov
ds
cs
int
jmp
cmp
mov
cmp
cli
enter
je
cmp
xchg
dec
pop
fistp
or
neg
idiv
cmps
(bad)
cmp
mov
clc
into
pop
mov
mov
mov
ror
xor
sbb
push
ud0
pop
movs
(bad)
xor
dec
jno
pop
sbb
outs
adc
add
stc
enter
xchg
adc
sahf
sbb
xor
call
mov
lods
sub
pop
hlt
lock
mov
iret
imul
sahf
out
call
pop
fldcw
cdq
sbb
and
int
stos
cli
add
lahf
scas
jl
cdq
xor
outs
push
icebp
mov
xchg
enter
mov
cmps
mov
into
scas
out
(bad)
push
jo
jnp
sbb
aad
and
inc
cmc
pop
xor
push
and
clc
cmps
les
out
push
pop
sbb
daa
or
inc
fsubrp
adc
xor
xor
out
jb
cmp
mov
mov
ins
or
(bad)
in
dec
push
sti
push
fwait
xor
cdq
xor
cmc
xor
mov
inc
sbb
ds
mov
cmp
xor
mov
ins
adc
popa
or
rcl
adc
loopne
ja
or
imul
enter
xchg
cmp
loop
dec
mov
test
(bad)
lods
sub
mov
adc
cld
sub
or
jns
mov
cmp
pop
jmp
or
std
fadd
iret
inc
dec
ror
ja
stos
std
jle
pop
inc
cs
xchg
xchg
or
jne
movs
in
scas
jg
jmp
fnstcw
das
add
arpl
movs
add
xor
or
es
inc
xor
ret
pop
stc
fisubr
jmp
or
add
pop
fs
inc
xor
jecxz
je
push
dec
outs
inc
adc
stos
mov
dec
inc
mov
cli
cld
test
in
add
clc
xor
in
xchg
jmp
jnp
aam
cwde
daa
gs
pop
xchg
cmp
inc
sbb
and
sbb
dec
mov
stc
xchg
shl
dec
adc
fwait
sbb
jae
cmp
mov
inc
ds
call
dec
adc
out
das
pusha
mov
jge
sti
das
mov
pop
fisub
jmp
xchg
jo
inc
xchg
into
mov
sti
push
scas
mov
add
call
xchg
je
xor
jb
dec
aaa
(bad)
adc
pop
mov
add
xchg
retf
movs
add
imul
imul
push
(bad)
push
push
and
xchg
jnp
mov
popa
adc
xor
bswap
fcomp
je
add
stc
jne
push
jb
cli
cmp
pop
dec
jecxz
jae
into
and
pushf
mov
call
and
fcomp
out
sbb
rol
or
mov
inc
mov
ja
aam
cmp
mov
rcr
jmp
ins
fild
push
dec
jmp
jecxz
ficom
mov
adc
inc
ins
sbb
rcl
push
mov
pop
sub
cmp
xor
ja
loopne
aaa
inc
push
fcom
cld
mov
jmp
call
call
clc
mov
jp
inc
mov
sar
ror
rol
data16
mov
and
jbe
and
dec
test
add
pop
(bad)
pop
cmp
(bad)
push
sub
out
cs
pop
and
inc
push
or
scas
pushf
mov
pusha
add
mov
xchg
shl
adc
add
outs
push
rol
sub
scas
sti
scas
jae
ret
shl
xchg
icebp
mov
pop
pop
inc
pop
aaa
outs
loop
les
nop
ret
xor
xchg
lahf
jns
mov
sbb
enter
ret
xor
jns
retf
out
or
pop
jns
xchg
shr
out
add
sbb
test
or
rep
inc
in
fnstcw
inc
ja
pop
inc
push
xlat
or
daa
aad
jo
sbb
mov
xchg
imul
sbb
pop
shl
cmp
mov
pop
leave
xchg
leave
stos
stos
ss
push
into
adc
pop
fidivr
cmp
jnp
push
jae
xor
das
push
loopne
inc
repnz
adc
dec
push
out
mov
fidiv
in
outs
aam
aaa
xor
loopne
sti
adc
shl
mov
inc
cmp
pushfw
sub
fst
dec
sbb
push
xchg
test
add
cwde
mov
sub
aad
hlt
jne
fdivr
call
xchg
(bad)
fimul
out
push
sbb
sti
fbld
pushf
sbb
aad
outs
shr
and
imul
sbb
push
push
aam
in
shr
inc
sahf
mov
add
stos
xchg
mov
retf
push
loop
sahf
shl
pop
clc
stos
mov
add
push
call
cs
test
lahf
in
stos
cmc
loope
inc
xor
loop
jle
outs
or
out
pop
push
cli
es
cdq
ret
push
inc
jbe
ja
(bad)
repz
xor
mov
jbe
mov
xchg
pusha
stos
adc
mov
mov
imul
mov
add
rcr
movs
dec
xor
ins
add
mov
dec
into
add
adc
and
push
test
or
pop
test
lods
clc
mul
dec
pop
push
push
xchg
outs
sbb
loope
sbb
gs
imul
ja
xor
sub
xchg
pop
cmp
mov
movs
sbb
jge
icebp
add
cli
(bad)
mov
jns
jae
sar
pop
inc
nop
sbb
mov
mov
stos
repnz
adc
cmc
cmps
mov
imul
push
push
mov
dec
jnp
aas
mov
pop
jl
(bad)
call
mov
jge
shl
int3
les
pusha
mov
movs
cli
fst
mov
aad
mov
push
pop
pop
imul
cmp
mov
lods
cdq
jg
cli
push
mov
out
fistp
ret
stos
ret
call
int
scas
pop
int
je
cmp
jmp
or
push
xchg
dec
adc
sbb
add
cmp
sbb
cmc
fwait
jmp
data16
fxam
or
std
je
jbe
xor
mov
sahf
mov
pop
jp
jae
xchg
sbb
sbb
pop
dec
sub
imul
xchg
jns
popf
sub
in
fistp
lea
dec
out
mov
lds
xchg
movs
je
mov
and
push
mov
add
retf
adc
cli
call
les
pop
dec
push
inc
icebp
cmp
pushf
push
sub
jl
dec
xor
jne
add
aad
dec
(bad)
fistp
shr
xchg
rol
stos
or
add
shr
ret
fsubr
mov
dec
jl
dec
jecxz
jmp
aam
sti
add
stc
inc
outs
aas
mov
pop
stos
inc
jns
cs
cmp
push
push
jg
xor
xlat
pop
hlt
es
mov
xor
cmps
mov
repnz
dec
sbb
(bad)
aad
adc
xor
mov
loope
jge
imul
and
out
dec
stos
adc
inc
and
cmps
cmp
push
push
and
push
jl
lods
mov
push
int
icebp
mov
mov
loope
aaa
dec
cmp
xchg
enter
cmp
cmps
mov
xchg
cmp
jno
nop/reserved
mov
fcom
aam
add
dec
xchg
es
mov
es
inc
push
adc
pop
stos
xchg
cmp
scas
int
(bad)
pop
call
stos
mov
nop
mov
call
mov
jle
dec
add
or
xor
xor
mov
sbb
fs
pop
inc
mov
lock
ror
sub
ja
inc
(bad)
push
out
cdq
enter
cmps
add
pop
jb
nop
imul
out
(bad)
fimul
xchg
addr16
lahf
xor
jae
ins
or
int3
xor
cmps
xchg
push
cwde
lds
int3
nop
imul
cmps
and
sub
out
cmp
sbb
fcmovnu
in
xor
rcl
mov
pop
jmp
icebp
cmp
inc
test
aad
stos
sbb
sub
pop
(bad)
leave
fisub
ret
sbb
psllw
mov
pop
in
stos
add
div
inc
inc
sti
sub
push
sub
mov
loop
xchg
jb
jno
(bad)
fadd
sbb
(bad)
xchg
inc
push
mov
or
pop
repnz
test
jns
ffree
jl
mov
mov
or
xor
add
and
shl
adc
(bad)
sti
out
inc
leave
scas
sbb
jmp
and
mov
leave
sahf
sub
inc
mov
adc
cmp
push
xchg
out
push
pop
sbb
xor
pusha
call
lock
xchg
mov
cs
lods
(bad)
out
jns
ret
stos
dec
or
aaa
popa
pop
cmp
jae
pop
daa
jl
inc
out
cmps
adc
or
jg
sbb
jle
push
mov
jno
xlat
movs
xor
fcomp
movs
mov
jg
add
or
loope
pop
pop
hlt
fwait
dec
fidivr
add
mov
mov
iret
adc
dec
fdivr
jl
retf
jl
inc
enter
or
cmps
or
cs
(bad)
fisttp
pop
cmps
mov
cmp
mov
cwde
xchg
cld
test
mov
out
mov
(bad)
loopne
in
ss
add
push
ja
mov
retf
and
push
push
dec
sahf
cmp
vcmpsd
sti
in
pop
(bad)
jl
push
xor
mov
or
inc
mov
sbb
push
movs
pop
addr16
cs
dec
mov
scas
mov
lds
pop
dec
repz
and
xor
(bad)
movs
test
pop
mov
out
dec
sar
pop
inc
or
aam
inc
mov
xlat
xor
sub
or
movs
add
cwde
adc
shl
inc
mov
cmps
movs
arpl
cmc
ret
addr16
sbb
icebp
jmp
pop
pusha
cs
push
in
adc
es
data16
bound
fcomp
xchg
push
test
inc
pop
pusha
call
adc
sbb
or
dec
es
lea
and
seto
in
cmps
xlat
cmp
cmp
adc
rol
aas
xchg
bnd
pop
pop
mov
jmp
gs
cmp
shl
jnp
in
stos
add
adc
imul
or
mov
sbb
leave
mov
popa
js
mov
ret
pop
rcr
pop
sbb
lahf
cmp
cmp
mov
push
idiv
cmc
mov
das
stos
je
pop
scas
mov
jne
aam
mov
mov
adc
movs
test
test
cmps
out
mov
jns
int
push
cmp
mov
out
cmp
jmp
adc
add
out
ret
push
leave
ss
iret
jae
sub
lods
add
pushf
arpl
push
sbb
lahf
(bad)
mov
pusha
(bad)
push
xchg
pop
bound
xchg
ficom
test
xor
cs
fsubr
inc
test
jnp
or
mov
dec
(bad)
cmp
mov
adc
mov
and
pop
leave
scas
rcl
inc
xor
std
adc
js
shl
jne
in
xor
mov
or
fnstcw
mov
xchg
ins
adc
mov
pop
pop
xchg
js
lahf
cmps
loopne
sbb
mov
jmp
mov
mov
sbb
jmp
jns
mov
pop
outs
inc
cs
ret
sub
mov
in
mov
call
test
lds
out
dec
cmp
fistp
scas
mov
leave
in
aas
ss
pop
jmp
and
adc
hlt
popa
ds
test
jno
retf
push
and
inc
imul
inc
retf
sub
ret
aas
rol
pavgw
push
push
loope
out
dec
daa
pop
pop
push
gs
inc
mov
push
imul
jbe
retf
add
int3
enter
imul
aaa
stc
adc
fiadd
pop
inc
nop
bnd
test
or
jle
or
cmp
(bad)
adc
sub
(bad)
out
xor
das
sub
jbe
daa
sub
mov
add
aas
jo
mov
outs
xchg
xor
inc
arpl
les
lock
inc
daa
pop
xchg
pop
loop
cmc
and
push
sub
mov
mov
inc
push
xor
cmp
ror
push
sahf
jbe
pop
cmp
(bad)
cli
or
cmp
push
xchg
inc
loopne
xlat
xchg
sub
xchg
jl
mov
pop
test
dec
xor
push
jg
xchg
je
cs
test
in
mov
xchg
xlat
gs
inc
lock
imul
ret
cs
dec
cmc
pop
pop
ror
mov
and
aad
repz
pop
jecxz
inc
pop
int3
mov
pop
sub
push
cwde
cmp
ds
push
mov
popa
out
call
gs
mov
dec
movs
pushf
aas
ss
and
out
adc
rcr
into
dec
das
xor
aam
adc
dec
sbb
mov
test
xchg
adc
push
iret
jecxz
or
push
jle
(bad)
loopne
fild
dec
xchg
fsub
(bad)
jne
mov
gs
pop
hlt
jmp
jecxz
sub
lods
dec
test
sub
inc
jp
fimul
add
push
or
jge
ja
das
inc
test
xor
inc
inc
sar
mov
push
arpl
test
inc
dec
cdq
idiv
and
test
jae
or
mov
mul
push
cmp
in
cmp
inc
xchg
sub
xchg
mov
push
xchg
xor
rol
sub
out
fadd
lahf
stos
xchg
out
leave
shl
xor
jne
jns
dec
rcr
xchg
(bad)
aas
mov
cmp
fmul
fs
inc
cdq
(bad)
jecxz
lods
fld
(bad)
cmp
xor
xchg
push
addr16
leave
fwait
das
bswap
jecxz
(bad)
pop
ja
mov
or
loope
mov
jae
pop
js
sbb
push
lods
or
jns
ss
lahf
fmul
data16
fnstsw
aas
mov
test
pop
pop
sbb
int3
ret
or
ins
fcmovnbe
pop
int
test
(bad)
cmp
sti
jmp
outs
stos
pop
cmp
fwait
sbb
rcr
push
jp
mov
xlat
pushf
out
mov
pop
pop
mov
push
in
inc
xchg
test
ja
add
xchg
jmp
call
paddsw
jp
push
test
pop
xor
ret
xchg
test
jp
icebp
mov
pop
xor
mov
in
test
pop
inc
ds
das
push
shr
(bad)
cs
call
(bad)
in
jle
or
adc
in
lods
test
pop
dec
cmp
pop
retf
pop
add
and
pop
leave
adc
lds
adc
(bad)
adc
sbb
inc
(bad)
mov
shr
sub
out
mov
jno
or
pop
mov
pop
popf
stos
or
fs
js
xchg
xor
jg
jl
jmp
mov
push
sti
inc
out
jnp
jne
push
int
cmps
lahf
push
jmp
test
mov
jo
xor
mov
aaa
mov
xor
mov
cmc
inc
dec
inc
clc
push
sar
or
and
sbb
stc
cmp
jmp
ror
inc
aam
xlat
push
dec
lods
imul
jnp
mov
aaa
scas
mov
test
outs
push
imul
aas
outs
mov
pop
popf
test
jecxz
xchg
cli
popf
mov
push
ror
test
sub
pop
repnz
pop
scas
mov
push
jmp
pop
movs
push
sub
fwait
push
test
repnz
data16
xor
push
stos
test
in
mov
cmc
or
(bad)
jmp
mov
inc
xor
add
movs
xlat
sub
cli
jne
jmp
push
test
sti
test
cmps
js
lods
cmc
out
inc
ret
fist
xor
dec
xor
dec
bnd
daa
mov
and
je
lds
pop
pop
adc
xor
pop
xchg
frstorw
or
(bad)
rcl
daa
gs
or
sub
aad
adc
into
imul
cmp
sbb
mov
jg
pop
int3
(bad)
jl
mov
sbb
imul
push
push
rdtsc
mov
push
cmc
xchg
mov
mov
mov
sub
cmp
mov
xchg
sub
add
sbb
mov
ret
cmp
dec
aaa
call
shl
test
out
aam
sub
dec
pop
stos
imul
mov
sub
sbb
out
cmp
and
mov
movs
cmp
pop
dec
pop
pop
push
fist
dec
in
ret
int3
push
mov
dec
aam
jmp
in
cmp
mov
or
or
jb
mov
adc
xchg
lods
outs
hlt
das
out
adc
pop
pop
das
scas
push
mov
sbb
inc
push
add
push
call
cmp
ret
mov
add
out
jmp
outs
sbb
xchg
cwde
inc
daa
call
es
xlat
sub
cmps
les
adc
(bad)
(bad)
mov
mov
fldenv
xchg
and
stos
ja
repnz
(bad)
adc
jns
adc
add
aas
movs
pop
cmp
push
or
cmp
aad
clc
add
in
xchg
movs
sbb
or
out
popf
pop
cmc
stos
xchg
pop
int
push
das
add
adc
sub
pop
pop
retf
gs
jmp
pop
into
add
iret
jge
dec
push
loope
je
inc
std
xor
and
push
mov
adc
xor
mov
jge
retf
loop
cdq
aaa
cs
xchg
sahf
aad
loope
add
leave
imul
pop
mov
push
dec
mov
outs
call
pop
mov
xor
mov
jae
mov
mov
rcr
aam
pop
cmp
stc
or
mov
dec
fist
scas
ds
sbb
xchg
test
sub
popa
push
adc
aaa
call
jmp
jae
leave
mov
retf
sbb
jle
mov
out
mov
inc
fcom
outs
pop
mov
inc
fnsave
or
test
dec
(bad)
rcr
jne
jb
mov
nop
dec
jae
out
daa
mov
dec
loope
out
and
scas
sub
mov
jno
push
pushf
adc
je
cmps
sbb
aad
cmp
mov
fwait
iret
aam
pop
jmp
fldcw
xor
push
xchg
adc
ror
test
fmul
sub
or
lds
punpcklwd
add
shl
pop
movs
jg
aaa
aas
or
lods
inc
in
addr16
xchg
mov
jnp
rcr
dec
xchg
fcomp
je
xchg
int
ds
mov
fimul
daa
sbb
lea
div
mov
je
sbb
sahf
ins
in
sbb
jmp
ins
add
pop
int3
ins
mov
(bad)
jle
popf
xchg
pop
es
in
push
jbe
xor
loope
dec
add
aad
dec
inc
pop
jns
adc
outs
ret
hlt
clc
lds
cwde
cmp
mov
dec
xor
add
mov
add
int
lods
arpl
js
repnz
test
mov
push
sbb
rcr
mov
in
sub
xor
pop
sbb
xchg
mov
add
outs
fwait
sbb
sbb
mov
loope
cmp
ss
lahf
cmc
adc
aam
or
and
fwait
push
ret
or
fmul
jle
adc
add
das
and
inc
sub
aas
in
jecxz
enter
mov
sbb
sahf
and
sbb
js
pop
mov
xor
(bad)
mov
dec
outs
test
sbb
das
push
test
das
adc
out
pusha
sub
movs
cmp
and
pop
fiadd
xor
mov
xor
mov
fs
retf
ret
aas
sahf
cmps
sti
fsubr
or
mov
arpl
mov
xchg
xor
pop
sbb
mov
mov
cdq
cwde
std
idiv
or
pop
adc
scas
add
sbb
test
loope
(bad)
icebp
push
mov
test
fdiv
dec
aad
shl
js
rcr
push
adc
or
mov
xchg
pop
outs
inc
mov
(bad)
daa
jg
call
xor
jno
pop
call
fbstp
sub
xor
gs
loope
pop
mov
test
push
add
call
cmp
rep
and
cmp
mov
sbb
adc
sub
(bad)
mov
or
cmp
push
jae
stc
(bad)
mov
mov
mov
leave
xchg
adc
pop
jne
push
jp
or
repz
or
push
mov
mov
mov
ja
sahf
pop
loopne
mov
rcl
lods
enter
in
and
aas
and
pop
repz
ja
add
call
cld
cdq
adc
sub
les
or
sbb
jp
push
int3
mov
cmc
sub
mov
add
push
test
adc
xor
push
cwde
xor
push
popf
pushf
bound
fldenv
sbb
cmc
(bad)
fnsave
lahf
out
cmp
mov
xlat
(bad)
jle
cmp
shl
ror
and
ins
popf
loope
pop
inc
pop
push
lods
inc
stos
(bad)
psubb
jmp
or
icebp
movs
inc
sar
pushf
sbb
pop
les
icebp
adc
push
inc
cmps
lods
leave
fwait
push
in
dec
je
mov
pop
adc
and
test
add
inc
cmps
mov
jbe
(bad)
cdq
push
adc
(bad)
sub
mov
mov
mov
push
fst
dec
xor
out
and
xchg
movs
push
jmp
pop
cli
dec
cmps
repnz
or
enter
jae
adc
pusha
(bad)
lods
push
cmps
lock
inc
jns
cdq
sahf
in
or
nop
pop
pop
xor
pushf
or
add
or
inc
or
or
loop
retf
(bad)
cmp
pop
cmps
mov
mov
leave
cdq
jno
xchg
and
cli
push
mov
jecxz
fild
fiadd
loope
fcom
xor
sub
jge
pop
add
adc
fcom
js
xchg
aaa
mov
test
rcr
sub
mov
mov
loope
in
inc
scas
les
inc
test
in
loop
xchg
lods
add
fcmovbe
mov
and
mov
jmp
jno
xchg
test
into
push
pop
retf
push
sbb
sbb
push
sub
(bad)
adc
adc
hlt
push
dec
and
mov
xor
stos
hlt
push
rol
dec
out
sbb
shl
rol
retf
mov
out
sti
repnz
jnp
out
leave
add
icebp
popf
int3
adc
mov
int
adc
aaa
jo
iret
lock
ins
pushf
adc
retf
lahf
add
stc
or
jnp
add
in
adc
gs
in
(bad)
and
fist
cmps
lahf
dec
xchg
sbb
mov
ja
and
in
loopne
add
stos
adc
fucomp
enter
addr16
xchg
xchg
aad
std
mov
sub
cmps
sbb
jno
and
inc
mov
sbb
ins
sub
repnz
xchg
clc
icebp
pop
enter
xchg
not
rcr
xchg
xchg
lods
imul
call
ins
mov
rcl
mov
in
rol
mov
sub
pop
ins
cmp
inc
cmp
xor
xchg
icebp
les
or
and
js
inc
or
bound
push
sub
inc
cmp
mov
sub
das
hlt
xor
je
sbb
pop
fcomp
or
aaa
cdq
loopne
sbb
mov
xchg
mov
and
mov
retf
inc
int3
fiadd
retf
xchg
sub
mov
push
xchg
pusha
retf
push
aad
cmps
xchg
add
dec
push
adc
adc
push
sub
sub
sbb
nop
xor
cmps
adc
jnp
into
scas
mov
fld
or
jge
lahf
je
clc
dec
gs
aam
push
push
pop
inc
or
add
adc
popf
xchg
xor
popa
mov
xchg
mov
xchg
sbb
scas
mov
or
xor
inc
sub
inc
and
sub
xor
add
outs
outs
adc
cmp
mov
cmp
inc
loop
sbb
jo
outs
jmp
loop
push
pop
test
ds
mov
bound
cmps
pop
outs
cmps
aad
sti
repz
outs
dec
add
push
(bad)
xchg
inc
jae
inc
sti
fstp
mov
movs
cli
mov
push
movs
adc
(bad)
mov
mov
cdq
sbb
sbb
dec
arpl
add
and
aad
retf
push
and
call
leave
or
mov
lods
mov
arpl
fild
adc
fwait
or
cld
dec
sbb
out
fs
mul
in
mov
xchg
mov
daa
(bad)
stos
fs
dec
pushf
movntps
mov
cmps
or
xchg
js
int3
ja
lock
ficom
sldt
lahf
mov
es
inc
push
push
jne
mov
adc
imul
sbb
jb
add
fsub
adc
dec
mov
call
or
fisttp
out
out
out
pop
push
in
outs
cwde
jae
hlt
rol
out
inc
cmps
std
ficom
cs
inc
add
jmp
shl
fmul
adc
enter
xchg
out
jecxz
rcl
xchg
mov
or
sbb
pop
mov
aam
test
xchg
into
cld
jmp
ret
sbb
ret
xor
push
jne
xchg
mov
nop
lods
inc
and
lods
icebp
icebp
(bad)
imul
out
ss
popf
dec
cmp
xor
mov
cmp
stos
cvtps2pi
fdiv
in
sbb
inc
and
imul
sub
mov
mov
adc
jne
jno
mov
mov
jge
cmps
mov
pushf
aam
int3
(bad)
and
and
inc
es
push
cs
mov
pop
xchg
mov
lds
mov
jo
int3
popa
movs
adc
jge
pop
dec
(bad)
jp
sub
push
aaa
popf
test
adc
test
scas
pop
test
jmp
mov
sub
movs
xor
test
sbb
dec
inc
add
jae
call
dec
mov
and
pop
fld
xor
fist
add
adc
(bad)
mov
pmovmskb
adc
push
push
pop
cdq
mov
sti
sbb
shl
rcl
dec
in
sbb
inc
xchg
mov
and
cwde
iret
pop
outs
cmp
sbb
inc
pop
fidiv
mov
js
add
mov
fnsave
shr
mov
pop
inc
pop
ins
lea
sub
push
push
add
pop
cmps
cmp
pop
or
mov
pop
shl
or
jb
add
and
repz
cmp
sti
or
sbb
pop
mov
es
cmps
(bad)
sub
sub
sub
rol
test
adc
xchg
mov
inc
jo
scas
and
or
xchg
ret
cdq
adc
call
stos
jl
pop
outs
pop
or
imul
inc
test
cli
in
xchg
clc
pop
popf
sub
ins
imul
retf
test
and
and
sub
pop
mov
cmp
jge
out
cs
jmp
jmp
rcr
push
jl
idiv
xchg
pop
loope
out
ja
mov
adc
adc
fimul
push
cmps
leave
movs
cwde
cs
int3
dec
fisub
ficom
pushf
mov
ret
iret
xlat
sbb
daa
outs
call
fisttp
shl
jns
ins
mov
ja
mov
fsubr
push
sub
test
mov
jecxz
fwait
jo
push
lock
cmc
inc
lea
dec
mov
push
sahf
scas
cmp
push
fcom
aad
popa
xor
rcl
dec
fbld
hlt
shr
shl
cmp
sbb
call
sub
movs
and
jle
jl
nop
or
mov
das
fsubr
ja
pop
mov
fwait
pop
adc
das
ds
mov
xchg
add
mov
xchg
dec
daa
mov
out
dec
jle
pop
and
pop
sti
push
and
dec
pop
imul
ss
sub
jp
xchg
pop
shl
push
and
aad
or
test
fisub
enter
push
jmp
lock
pop
fwait
cmp
cmp
sub
out
and
sbb
or
pop
xchg
mov
cmp
hlt
inc
retf
sub
mov
loope
(bad)
cmp
adc
aam
fbstp
sub
out
and
push
fwait
mov
leave
retf
jg
mov
xor
and
mov
cmp
out
pusha
push
fimul
mov
std
cmp
jle
daa
daa
movs
add
mov
fcomi
add
in
pushf
mov
int
jmp
mov
adc
(bad)
cli
adc
std
pop
sar
and
and
pop
mov
xchg
or
imul
sub
ret
xchg
mul
adc
leave
outs
inc
add
out
push
out
ror
icebp
mov
mov
cmp
lods
in
scas
imul
xchg
xchg
or
stos
nop
inc
mov
push
mov
adc
stc
sub
aaa
add
add
sbb
stos
es
xor
or
add
push
inc
ds
(bad)
cli
mov
mov
mov
xchg
jne
sub
mov
daa
pop
sbb
sub
jmp
xchg
inc
push
and
adc
dec
or
in
xchg
stos
fcomp
sbb
push
pop
xchg
xchg
inc
jle
or
ret
inc
mov
popf
ins
and
mov
sahf
push
pop
icebp
sub
movs
shl
push
inc
or
dec
ins
cmp
sar
outs
in
pop
test
cmc
int3
sub
in
lds
inc
fisubr
retf
cmp
push
int
je
lods
in
(bad)
pop
pop
mov
jg
or
push
sahf
(bad)
xor
or
imul
cmc
sub
jns
sub
push
cmp
mov
loope
cmp
mov
pop
dec
test
rdrand
ds
(bad)
jno
scas
loopne
sbb
xlat
es
clc
fld
dec
es
sbb
or
mov
mov
sar
loope
pop
ret
mov
mov
fs
adc
in
sub
mov
in
ins
mov
nop
ret
xor
mov
frstor
fld
push
add
or
ret
aad
in
pop
inc
xchg
ficomp
aam
push
or
cmps
xor
(bad)
out
sahf
pop
lock
xchg
or
loopne
xchg
and
jns
mov
sub
jge
(bad)
stos
mov
repz
test
(bad)
mov
sub
xchg
mov
ss
ins
fnstenv
movs
inc
dec
loop
dec
xor
mov
cmp
ins
or
sbb
loope
scas
imul
dec
movs
rcl
fs
and
mov
or
xchg
xchg
cmp
ins
addr16
cmp
addr16
mov
push
aam
scas
xchg
add
rol
mov
jno
or
dec
push
retf
rcr
sub
jmp
cli
xlat
or
(bad)
sub
mov
fnsave
jmp
(bad)
call
arpl
sbb
inc
xchg
lods
rcr
mov
fimul
(bad)
mov
mov
sbb
add
mov
out
in
cmp
adc
adc
in
mov
aam
pop
mov
lea
out
or
imul
sbb
xchg
push
sub
in
out
xchg
sub
js
xor
test
lods
repnz
adc
imul
popa
in
and
cmp
cdq
push
pop
ror
xor
out
push
jmp
or
xlat
and
xchg
call
sbb
and
jge
(bad)
pusha
(bad)
xor
adc
in
lock
add
je
xchg
xor
fst
jmp
push
icebp
xor
mov
jecxz
shr
loopne
rcl
retf
xor
and
or
pop
jb
mov
out
pop
in
stos
jmp
movs
adc
mov
inc
add
fisub
enter
dec
jmp
mov
mov
push
dec
inc
retf
fnsave
out
sub
jmp
cmc
jge
push
or
cwde
dec
popa
mov
cmps
aas
mov
cmc
or
xor
mov
mov
mov
sahf
ficom
sub
inc
push
mov
ja
sbb
jo
lea
(bad)
dec
pop
cli
(bad)
fild
(bad)
jb
inc
ret
push
cmp
fistp
imul
mov
js
int
in
popa
or
loope
or
mov
push
push
jae
sub
inc
xor
(bad)
pop
jno
inc
mov
cs
daa
imul
retf
popa
push
mov
dec
ss
sbb
inc
pushf
pop
rcr
fdivr
stc
fwait
pop
mov
imul
or
imul
mov
stos
cdq
push
cmps
add
popa
(bad)
arpl
call
fwait
stos
adc
ja
in
add
arpl
call
cmp
sbb
dec
shl
mov
sbb
test
mov
xor
xor
(bad)
push
xor
leave
mov
cmps
adc
pop
mov
mov
mov
xor
sub
cmp
push
and
fstp
or
out
(bad)
ror
dec
(bad)
push
int3
loope
mov
dec
inc
imul
pop
adc
sub
sbb
nop
or
xchg
fnstsw
xor
clc
pop
sub
aas
jg
fsubr
mov
sbb
add
sub
ret
(bad)
jl
sub
repnz
mov
leave
mov
dec
loop
sbb
jmp
fnstcw
hlt
daa
pop
or
into
test
mov
pop
push
and
fisubr
jge
adc
push
and
jmp
in
add
dec
jo
sahf
sub
push
mov
out
outs
scas
xchg
cmove
enter
mov
movs
and
sub
pop
(bad)
or
stos
xchg
push
push
ror
xchg
retf
inc
jne
push
mov
add
mul
push
push
ins
(bad)
and
xor
call
retf
hlt
mov
pop
dec
(bad)
ins
jnp
push
and
dec
enter
add
inc
test
or
cdq
push
push
mov
mov
into
iret
and
rol
inc
ss
mov
or
repz
sub
movs
mov
mov
mov
sub
aam
mov
add
ins
adc
sbb
movs
pop
add
push
xor
xor
fwait
mov
pop
add
mov
out
pusha
inc
scas
push
or
mov
bound
shr
inc
xchg
aam
cmps
in
cwde
adc
push
int3
mov
test
scas
cmp
mov
arpl
out
sub
jb
(bad)
icebp
movs
jbe
xchg
iret
mov
lahf
sbb
repz
fisub
call
jns
cmp
popf
inc
xchg
cmp
inc
mov
mov
rcr
mov
repnz
push
pop
sbb
out
add
push
ins
xchg
or
xor
mov
scas
push
cmp
rol
pusha
fsub
bnd
pop
push
test
cmps
sbb
push
outs
inc
out
clc
stos
and
test
js
xor
fstp
call
stos
xor
or
cmp
or
daa
dec
cs
gs
lds
mov
shr
cmp
data16
jg
xor
and
xlat
pushf
jle
push
movs
inc
sahf
(bad)
jp
or
dec
hlt
ss
test
pop
out
and
inc
out
test
aas
xlat
shl
inc
adc
inc
js
and
fs
lods
mov
add
or
jge
call
lods
mov
push
push
pop
popa
pop
xchg
cs
jecxz
pop
mov
cli
inc
push
sub
jae
sbb
loop
push
sub
out
mov
push
ins
clc
mov
(bad)
ja
add
push
cmps
xor
mov
and
scas
push
jge
or
cdq
push
adc
scas
std
cmp
ret
mov
cwde
call
jmp
jle
mov
and
add
sub
scas
pop
inc
loope
fst
xor
pop
(bad)
fimul
pop
fstp
imul
push
int
add
mov
adc
adc
adc
or
push
aas
mov
push
mov
sub
mov
mov
xchg
js
sbb
dec
and
mov
and
out
cdq
cmps
mov
movs
gs
mov
cli
int3
int
fstp
outs
stc
ds
inc
push
out
fisubr
in
push
scas
xor
test
sbb
lock
scas
in
sub
sbb
cmps
dec
push
mov
sub
pop
jb
sbb
or
pusha
hlt
mov
cdq
mov
jl
sar
mov
push
fsub
push
adc
sub
dec
or
fisttp
pop
jmp
(bad)
ins
mov
dec
(bad)
mov
mov
clc
cmps
lea
sub
in
xchg
rcl
mov
mov
sub
push
or
shl
jl
imul
dec
cmp
jge
ficomp
ins
sbb
mov
sysenter
das
or
(bad)
fadd
dec
push
xor
lock
push
adc
retf
xchg
loopne
xchg
push
cmp
mov
imul
leave
pop
xor
out
dec
das
retf
mov
inc
cmp
xchg
sahf
das
lods
sub
loopne
pushf
adc
loope
out
arpl
(bad)
adc
fdivp
add
repnz
mov
movs
sub
cmp
or
hlt
movs
jle
rcr
in
sub
mov
sbb
gs
mov
js
pop
ret
or
test
mov
mov
ja
pop
div
mov
in
test
pop
mov
adc
fwait
cmps
cmps
popf
jg
pusha
cld
sar
in
inc
sub
not
xchg
fiadd
sti
into
in
movs
mov
lahf
rcr
rcl
xchg
loop
data16
add
rcr
sub
and
pop
adc
test
pop
fisttp
imul
jge
push
imul
nop
int
or
cmc
test
sub
and
add
xchg
jne
push
mov
dec
outs
push
mov
inc
rcl
or
call
call
je
and
mov
nop
adc
stos
add
aam
into
mov
mov
or
or
adc
inc
sub
sub
imul
jae
xchg
imul
pop
loope
mov
(bad)
xor
adc
sub
pusha
xchg
mov
xor
pop
inc
push
xchg
pop
pop
push
push
cmp
sti
dec
mov
test
mov
lds
add
jb
inc
inc
cmp
dec
sub
mov
xor
stos
test
ficomp
add
scas
lock
inc
sub
fisubr
mov
shl
ins
bound
cld
ret
sbb
bound
dec
(bad)
jo
call
mov
sbb
cmp
add
imul
hlt
sbb
inc
inc
mov
or
shl
push
fld
mov
mov
dec
jnp
mov
push
cmp
mov
iret
mov
jg
add
push
mov
and
jbe
and
xor
clc
imul
aas
aaa
or
cmp
ror
jo
in
pop
mov
cs
mov
stos
mov
cmp
ret
stc
sub
leave
into
xchg
jbe
mov
aas
out
jmp
inc
lds
outs
les
loopne
pusha
stos
hlt
push
mov
ror
fimul
mov
iret
xchg
sbb
out
push
pminub
(bad)
xchg
ror
sub
xor
jmp
and
(bad)
movs
shl
inc
ret
stos
mov
xchg
mul
xor
mov
in
dec
or
fcomp
js
test
xlat
stos
jae
jge
adc
cmp
popa
int3
xchg
adc
in
sub
mov
es
push
sub
dec
in
push
int3
xor
leave
in
pop
and
add
xchg
sub
or
test
popf
sbb
out
mov
push
xor
cmp
sbb
xor
cmp
sub
mov
pop
aad
xchg
mov
xchg
and
xchg
cmp
fst
scas
mov
mov
adc
xor
jne
sar
jmp
test
inc
ss
pushf
dec
push
add
xor
scas
push
sbb
mov
ds
jmp
popa
sbb
xchg
mov
push
aad
(bad)
aaa
(bad)
mov
xor
ja
sbb
js
fsub
jmp
inc
enter
sub
sbb
pop
xchg
inc
push
push
jg
mov
ja
hlt
and
pop
js
mov
loope
push
nop
cld
xor
add
nop
xchg
dec
out
cmc
xchg
test
push
mov
shl
add
mov
pop
repnz
sahf
out
mov
sbb
jmp
dec
movs
call
aas
int
psubw
jae
rcl
ins
or
fiadd
lods
(bad)
cmp
mov
jo
pop
adc
retf
lds
retf
pop
test
xchg
aad
loope
cmp
mov
scas
pop
pop
jg
popf
mov
xchg
in
mov
add
outs
inc
jb
inc
push
and
in
movs
fisttp
mov
push
add
pusha
and
push
or
and
hlt
jo
pop
add
adc
fmul
fxch
call
cmp
lds
xchg
cmps
sti
arpl
(bad)
pop
test
or
and
xor
mov
sub
stos
popa
and
xor
mov
adc
xor
xor
(bad)
adc
xchg
push
out
xor
ror
sub
daa
(bad)
xor
sahf
pop
iret
add
test
sub
out
mov
test
pop
pop
inc
or
jmp
cmp
mov
pop
jo
loop
fsubr
pusha
or
sbb
loopne
repnz
outs
out
repz
and
cmp
retf
xor
ret
mov
lahf
lock
idiv
idiv
shl
fadd
stc
cmp
frstor
(bad)
jmp
add
and
push
pushf
mul
jb
push
xor
add
push
push
xchg
xchg
jmp
sub
imul
pop
pop
adc
cmp
sahf
and
js
fmul
or
dec
cs
int
mov
repnz
pop
jmp
jmp
jecxz
jmp
dec
mov
and
adc
bound
outs
jns
xchg
(bad)
jecxz
xchg
arpl
inc
jne
jbe
into
inc
enter
gs
add
mov
(bad)
(bad)
adc
and
ins
mov
xor
mov
adc
int
sbb
fwait
pop
pop
lods
xchg
or
div
cmps
jno
sbb
jbe
fistp
xor
mov
xor
(bad)
repz
(bad)
cs
shl
jl
push
into
popf
jp
inc
push
adc
clc
jns
mov
test
pop
or
mov
lods
inc
sub
xor
pushf
mov
or
or
dec
lea
int
loope
inc
pusha
xchg
and
push
mov
ret
mov
in
ds
mov
mov
(bad)
loope
and
lahf
push
add
(bad)
dec
pop
mov
add
inc
and
xchg
scas
jne
int3
hlt
fist
mov
push
sub
cmp
mov
fnstsw
out
(bad)
jae
jns
and
arpl
dec
jl
mov
in
cdq
fsubr
js
or
scas
adc
sbb
mov
repnz
sub
mov
and
adc
shr
xchg
std
or
xor
inc
scas
inc
mov
outs
mov
sbb
mov
bound
test
inc
inc
sub
add
ds
jmp
xchg
pop
(bad)
call
pop
inc
push
loopne
stos
in
adc
or
mov
in
in
mov
jb
pop
or
jae
add
dec
mov
fdivr
call
cwde
and
xor
push
adc
push
dec
and
into
adc
bound
lods
lods
jmp
inc
ficomp
mov
js
lahf
cdq
and
repz
push
popa
jge
popa
cwde
xor
inc
fcom
call
jmp
add
jecxz
sar
ror
arpl
dec
xlat
push
mov
push
sub
mov
add
mov
mov
scas
in
stos
add
mov
xchg
jg
and
fistp
outs
fist
push
adc
stos
in
fwait
ret
mov
sbb
loopne
push
pop
or
test
push
inc
ins
jns
adc
mov
sub
sub
imul
(bad)
icebp
fstp
jmp
rol
mov
and
sbb
test
movs
xor
push
popf
xor
test
les
aam
retf
inc
(bad)
(bad)
jg
sbb
aad
mov
sbb
mov
dec
jmp
les
test
dec
xor
ficom
cmp
mov
cli
enter
arpl
xchg
hlt
movs
mov
cmp
or
(bad)
call
rol
push
mov
ins
jmp
push
gs
pop
mov
retf
inc
dec
inc
sbb
(bad)
mov
mov
scas
icebp
mul
ss
clc
fild
mov
aam
test
shr
inc
mov
push
cdq
dec
jo
inc
out
(bad)
adc
xor
sbb
arpl
cmps
inc
pop
loope
xchg
jmp
loopne
movs
cld
adc
fstp
imul
lahf
mov
add
xchg
in
jmp
pushf
rol
adc
add
scas
lods
cld
movs
clc
jnp
mov
jo
inc
into
inc
pop
xchg
push
adc
xchg
pop
mov
add
lods
out
and
test
xor
jo
inc
test
popf
int3
cld
sbb
mov
lods
std
aaa
cmp
addr16
xor
(bad)
in
in
test
or
popa
lods
out
mov
mov
or
sbb
iret
cmp
lock
or
dec
dec
test
cmp
mov
lds
stos
and
cld
xor
and
xchg
sar
and
xlat
push
dec
mov
xlat
mov
sub
loop
xchg
bound
xor
xlat
std
repz
inc
and
and
or
push
lods
call
mov
rol
out
dec
int
dec
push
jg
push
inc
(bad)
or
popf
repnz
sti
int
push
jno
sti
mov
or
cmp
out
or
aam
xor
pushf
imul
inc
lods
lods
fisttp
add
mov
popf
cwde
(bad)
rol
push
add
sub
push
inc
sbb
movs
jmp
mov
idiv
sbb
xor
xlat
jp
(bad)
fisttp
jnp
adc
inc
inc
icebp
dec
aas
xchg
push
add
dec
push
imul
push
movs
xchg
dec
outs
inc
retf
dec
inc
arpl
(bad)
aas
mov
sub
ror
pusha
jb
fld
xchg
dec
(bad)
aaa
inc
mov
add
nop
adc
sbb
fwait
popa
stos
mov
xor
test
fcom
xchg
and
dec
aam
xchg
pop
fucomip
dec
retf
out
ds
retf
cmp
mov
dec
in
stos
add
mov
data16
mov
jmp
outs
fnsave
clc
jno
sub
pop
shl
mov
idiv
pop
cwde
leave
dec
inc
dec
(bad)
cli
adc
inc
mov
jp
daa
pop
ds
sbb
add
xor
lock
add
or
outs
xlat
cwde
std
scas
out
test
dec
cmp
mov
sbb
and
xlat
sub
dec
das
and
mov
mov
rcl
sbb
rcr
leave
mov
cmp
hlt
push
add
retf
les
test
mov
and
movs
mov
jae
iret
push
ins
jle
mov
xchg
mov
mov
sbb
push
in
cmp
sub
nop
jne
aas
add
sub
dec
cmp
push
stc
add
pop
adc
xor
imul
call
sub
sbb
std
das
push
xchg
cld
xchg
test
and
jns
call
mov
adc
mov
pop
and
mov
aas
mov
jne
add
mov
mov
dec
aas
push
enter
hlt
cmp
xchg
std
cmp
test
hlt
inc
xor
sti
sti
fst
push
test
(bad)
pop
test
ja
add
sbb
xchg
pushf
pop
mov
xchg
cdq
or
loope
cmps
xchg
movs
adc
or
pop
sub
push
dec
push
and
(bad)
gs
sar
sub
mov
push
fcomp
jmp
pusha
imul
inc
cmc
loop
xchg
(bad)
cmp
rol
xchg
sub
mov
cld
fisub
xchg
aaa
(bad)
inc
fcmovnb
inc
loopne
or
xor
jns
ret
lea
xchg
pop
mov
cmp
aam
daa
mov
add
cld
jge
mov
idiv
test
movs
or
movs
dec
pop
enter
xchg
enter
hlt
pop
cwde
add
in
jbe
popa
sti
pop
xchg
adc
iret
and
retf
fnstenv
cli
daa
jae
dec
xor
stos
xlat
dec
ja
bnd
fisubr
sbb
stos
fcomi
and
std
pop
pusha
dec
jne
and
lea
loope
leave
sahf
cwde
mov
imul
out
cmps
xchg
push
xchg
jne
test
in
and
push
push
cmp
int3
xchg
inc
sbb
sub
sub
cmp
repz
cmps
mov
or
aam
sar
ror
jno
and
scas
xchg
mov
test
ja
push
int
int
cmps
stc
fsubr
ffree
mov
push
mov
fisttp
jmp
mov
adc
xlat
and
not
mov
ins
imul
shr
pop
or
loopne
fs
jle
mov
xchg
mov
inc
xchg
mov
shl
fcom
jb
cmp
pop
add
jmp
add
jecxz
mov
lock
popf
in
outs
push
out
inc
sub
lods
jne
fadd
loop
setns
and
jl
push
retf
inc
and
push
xor
add
push
cmps
adc
fisttp
data16
cdq
adc
mov
sti
out
add
xchg
push
sbb
add
outs
shl
cmp
push
push
pop
push
lods
sub
dec
pop
fnstenv
mov
push
or
or
jmp
fwait
jmp
sti
jecxz
test
pop
mov
fldln2
jo
add
jl
dec
jbe
repnz
mov
aad
in
sub
(bad)
loopne
test
push
repz
(bad)
stos
lds
out
int
ret
jmp
mov
fs
cmp
pop
mov
mov
fild
push
fst
add
call
aas
stos
popf
or
xor
and
jae
fwait
in
jl
jg
cmp
xor
(bad)
add
mov
push
mov
jmp
dec
sar
leave
push
imul
mov
bound
in
cmp
lea
in
pop
pcmpeqw
shl
(bad)
pop
scas
xchg
mov
xor
mov
sub
fldcw
mov
in
test
out
retf
ins
mov
int3
or
out
movs
shr
in
mov
loope
or
jge
rol
jecxz
movs
pop
sbb
mov
(bad)
rol
add
xlat
loopne
xor
cmp
into
mov
pop
mov
dec
push
dec
sub
call
shl
cwde
(bad)
neg
repz
pop
ja
jne
idiv
ins
imul
(bad)
test
hlt
mov
je
mov
adc
jl
stos
jge
stos
or
mov
and
mov
mov
out
aad
gs
jge
(bad)
push
clc
outs
jl
fiadd
jb
jge
pop
dec
ins
cmc
and
inc
dec
mov
add
scas
cmps
jg
addr16
call
out
add
xchg
ja
jbe
fst
mov
jp
xchg
jns
push
inc
jecxz
push
repz
cli
out
scas
push
pusha
mov
add
les
fcomp
mov
sub
pop
sub
lahf
mov
push
pop
and
pop
dec
push
pop
into
int
(bad)
and
enter
call
icebp
jae
fidiv
int
fimul
or
mov
cmp
adc
js
add
leave
movs
sbb
sbb
cmps
mov
add
xchg
cwde
jns
aas
mov
rol
sub
mov
jns
add
pop
mov
inc
cmp
mov
and
add
into
es
(bad)
arpl
scas
or
jmp
in
jmp
dec
xchg
int
adc
call
fcom
(bad)
aas
cld
mov
stc
add
data16
out
pop
and
repnz
inc
imul
jmp
stos
dec
call
mov
ret
frstor
fsubr
xchg
xchg
pop
ja
sbb
test
pop
rcr
sub
mul
add
jbe
jmp
push
mov
scas
shr
rol
loop
imul
mov
push
mov
(bad)
jne
call
fidivr
pop
sub
icebp
mov
out
cmp
mov
movs
ins
dec
leave
jecxz
xlat
dec
pop
adc
das
sbb
loope
and
push
or
mov
mov
(bad)
xlat
add
cmp
popf
(bad)
dec
mov
sub
in
test
pop
xor
addr16
inc
mov
shl
sbb
aas
cmp
test
jecxz
cmp
je
or
jle
pushf
fbstp
cmp
pop
movs
xchg
test
and
adc
jmp
mov
pop
into
rcr
jle
inc
out
fwait
movs
(bad)
xor
test
cmp
push
inc
hlt
dec
iret
inc
mov
std
test
scas
cmp
mov
nop
aad
out
stos
cs
or
test
push
dec
ss
push
cmp
inc
xlat
jl
inc
repz
cmp
adc
iret
ins
test
stos
test
jnp
lahf
out
push
dec
add
jge
push
sub
cmc
fstp
je
mov
(bad)
xor
ret
adc
add
int3
test
add
mov
or
and
sti
loopne
movs
inc
or
das
cmc
or
jns
dec
int
mov
not
test
fmul
out
aaa
repz
xor
sub
adc
sbb
jl
fs
test
test
mov
fxch
inc
or
or
or
add
call
jp
xchg
inc
lods
(bad)
and
mov
fisubr
and
cmps
mov
cmp
pop
loopne
add
jne
out
popf
test
lock
sbb
popf
adc
(bad)
ins
fld
(bad)
in
pop
or
or
out
aas
add
ror
mov
je
xor
outs
stos
cmps
popa
sub
sbb
sub
clc
test
adc
adc
iret
pop
out
sbb
sbb
sub
test
add
xchg
or
popf
ins
xor
adc
out
sub
shl
jmp
and
cdq
outs
sbb
inc
cmp
rcr
sub
lods
xchg
retf
movs
mov
fdiv
inc
lods
mov
mov
jmp
enter
sbb
push
mov
xchg
jmp
or
cmp
ficomp
jecxz
pop
test
shl
cmc
stc
dec
sub
lahf
xor
pop
jecxz
mov
pop
mov
or
scas
cmp
adc
aas
pop
comiss
outs
pop
mov
test
mov
add
into
xchg
push
pop
sub
sbb
pop
repnz
mov
jg
xchg
xor
outs
pop
scas
xchg
dec
xor
inc
pop
cmpxchg
pop
sub
sbb
js
sub
push
sbb
sbb
push
sbb
adc
mov
sar
dec
sbb
push
rcr
inc
push
cmc
and
into
and
fstp
test
inc
dec
sti
retf
hlt
pop
adc
mov
sti
in
enter
add
bound
xor
in
sub
and
jecxz
in
pop
lds
push
fmul
inc
or
inc
popa
jb
sbb
cmps
leave
mov
dec
aaa
add
(bad)
push
adc
push
addr16
pop
imul
adc
push
sbb
mov
icebp
push
cli
stos
sub
or
cdq
adc
ins
push
cmp
xor
cli
ja
xor
mov
push
out
bound
in
xor
or
sub
or
xchg
pop
push
cmps
test
retf
xchg
mov
xor
jle
cmps
jbe
inc
sub
cdq
add
sbb
add
and
mov
dec
sbb
mov
jno
jns
ins
rcr
fidivr
out
not
je
movs
mov
pop
push
jbe
jge
fstp
push
pop
into
mov
outs
icebp
aad
dec
sub
or
es
xchg
inc
and
retf
ficom
mov
push
aas
loope
sbb
cmc
mov
add
inc
jle
and
sbb
cmc
cmp
test
cwde
movs
inc
and
push
sbb
bound
aas
(bad)
cli
mov
xor
aad
jle
add
ficomp
xchg
pusha
or
cld
mov
movs
(bad)
cld
xlat
sbb
xchg
jo
cs
popf
aad
jle
test
xchg
dec
mul
gs
retf
xchg
jg
adc
sbb
mov
adc
daa
arpl
xor
fs
or
lds
fist
outs
lods
push
jge
lock
pop
popa
mov
retf
ds
push
cmps
mov
cli
jo
push
lock
(bad)
lods
push
sub
or
hlt
pop
mov
retf
mov
xchg
fsub
retf
cmp
mov
mov
sub
loop
jle
out
push
ss
inc
add
mov
cmps
js
inc
out
scas
fcos
(bad)
mov
xchg
and
cmp
and
stos
sub
jbe
outs
(bad)
mov
aaa
pop
ja
and
repnz
ins
enter
add
lahf
hlt
fnsave
adc
ret
dec
test
jge
dec
jbe
push
(bad)
pop
inc
cmps
mov
loopne
out
xchg
adc
sahf
sbb
sbb
mov
arpl
push
ds
cwde
xchg
das
pop
sar
jo
arpl
adc
test
jmp
push
cmc
dec
and
out
or
inc
or
cwde
mov
mov
dec
rcr
sub
and
mov
leave
push
addr16
cmp
jle
jae
ja
ds
fwait
push
aad
aaa
outs
adc
xor
clc
inc
pusha
jbe
pop
sub
and
out
mov
jno
push
in
dec
lds
ss
jge
mov
fwait
sub
daa
lds
sub
scas
add
nop
jg
stos
leave
sub
mov
pop
mov
xor
repz
jae
aaa
jmp
mov
adc
aas
fcom
mov
sub
les
push
je
xchg
dec
mov
push
popa
jmp
dec
das
imul
in
inc
jg
push
jp
stc
pop
dec
mov
mov
mov
call
jnp
or
movs
jg
fistp
cmps
int3
inc
cmp
and
out
or
clc
sub
leave
sub
lods
and
sbb
repnz
mov
push
pop
xor
icebp
push
js
popf
xchg
push
or
fmul
repnz
jmp
xchg
(bad)
rcr
pop
mov
mov
sub
in
jne
std
or
sbb
mov
pop
dec
nop
or
cmp
push
dec
push
push
pop
test
arpl
ror
pop
shl
retf
js
inc
fsubp
cmc
stc
iret
inc
and
push
fidivr
mov
test
sahf
movs
outs
(bad)
sbb
pop
push
mov
loopne
or
dec
sbb
lock
cld
cmp
outs
ss
and
pop
clc
scas
iret
shr
ds
stos
mov
jbe
xchg
push
inc
outs
and
mov
loope
mov
fcom
movs
retf
test
xchg
jno
(bad)
addr16
inc
push
in
push
dec
xchg
mov
daa
leave
aaa
and
push
data16
xor
idiv
add
in
mov
jns
fcom
mov
cwde
xchg
xor
mov
fadd
test
rcl
and
aaa
fwait
std
cmc
clc
mov
xor
mov
mov
daa
call
mov
cld
cmc
push
out
bound
stc
jecxz
test
inc
movs
mov
jns
ins
outs
jnp
cmp
mov
or
aaa
mov
test
imul
dec
jmp
(bad)
mov
outs
repnz
inc
int
imul
inc
pop
daa
sbb
iret
and
pop
mov
les
fs
jl
test
mov
jnp
jo
(bad)
not
rcl
inc
out
xor
jo
mov
movs
loopne
cwde
jae
jle
cmp
inc
push
ret
(bad)
cmc
in
inc
gs
in
outs
addr16
jb
ror
inc
jbe
jbe
push
and
jmp
int3
lahf
(bad)
push
loop
dec
sub
mov
aaa
scas
adc
xchg
aaa
or
pop
push
cmp
mov
(bad)
dec
pop
repz
inc
in
sub
daa
sub
pop
push
add
cmp
lahf
loop
sbb
jbe
push
je
pop
sbb
bound
mov
jp
push
out
in
inc
push
cmp
pop
xchg
mov
scas
clc
mov
sub
add
jbe
loop
test
push
cli
push
jmp
xchg
fdivp
jmp
cmps
pop
je
or
les
in
fld
(bad)
js
pop
cmp
ss
shl
push
and
enter
and
jg
cmp
jae
call
adc
repz
push
mov
xchg
jg
cld
ja
int3
sti
(bad)
jb
push
je
pop
dec
pop
jge
cmp
mov
mov
retf
bound
sub
les
push
inc
fisubr
out
inc
xchg
fstp
jmp
adc
add
arpl
add
jae
rcr
jnp
sar
mov
xchg
shl
or
ins
sub
cmp
ins
pushf
or
xlat
dec
sti
add
push
push
jp
inc
sbb
mov
rcl
cmp
popf
aad
jmp
push
repz
lods
lock
popf
jno
sub
clc
mov
bound
sbb
pop
xor
pushf
add
imul
sbb
repnz
fld
sub
nop
mov
cmp
pop
in
pop
mov
push
sub
mov
je
push
and
xchg
jmp
loop
iret
xchg
jne
(bad)
and
sbb
int
test
xor
call
mov
mov
jnp
hlt
xchg
popf
adc
inc
mov
aam
in
test
enter
add
loop
sub
push
aad
or
mov
adc
push
sahf
cdq
push
gs
sbb
neg
call
stos
jmp
icebp
and
jno
jne
cmp
ins
imul
ins
add
xor
and
out
xchg
test
nop
pop
lds
mov
push
mov
mov
or
cmp
fadd
dec
and
scas
lods
std
push
inc
shr
mov
cmp
loop
jno
or
enter
les
sub
stc
jnp
ret
dec
pop
fsub
cmps
(bad)
pop
mov
retf
mov
mov
jmp
pop
inc
sub
out
in
xor
outs
gs
shl
add
dec
push
mov
adc
test
std
nop
movs
mov
out
and
adc
scas
pop
cmp
xchg
in
xchg
jle
sahf
retf
jmp
xchg
adc
mov
shl
loope
fcomp
xchg
inc
repnz
rcl
sub
stos
mov
popa
dec
in
aas
push
daa
cwde
mov
aam
jmp
sub
sub
icebp
push
pop
xor
outs
fcomp
into
jp
mov
rcr
xor
int
sbb
mov
mov
mov
jne
test
ja
imul
and
outs
pop
imul
fstp
aam
sbb
mov
push
or
jge
pop
push
enter
in
dec
mov
or
xchg
ror
lods
jne
mov
jmp
jmp
retf
cmp
jae
cmps
and
or
xlat
repz
nop
sbb
movhps
dec
dec
aam
inc
dec
add
dec
adc
test
add
jecxz
ss
xchg
dec
and
add
cld
push
xchg
or
pop
outs
and
mov
and
(bad)
(bad)
mov
push
pop
fsubr
and
mov
test
dec
addr16
mov
int
mov
cmp
pusha
les
mov
mov
cmps
push
cwde
popf
push
outs
shl
mov
inc
daa
xchg
mov
(bad)
out
and
pop
movs
lods
enter
fcom
or
pop
lods
mov
mov
dec
in
push
xchg
(bad)
jge
push
shl
or
(bad)
push
(bad)
jne
jg
sti
fwait
stos
dec
js
sub
cmp
aaa
call
mov
ss
xchg
xchg
xor
scas
inc
loope
inc
sub
sub
sbb
mov
adc
push
add
jle
fbld
shl
test
jmp
and
ins
call
aad
inc
inc
fisub
data16
enter
pop
pop
nop
out
and
and
(bad)
lods
inc
mov
push
fwait
aad
mov
jae
push
and
cmp
fs
imul
and
js
dec
idiv
sahf
sub
cld
scas
jns
mov
sbb
popa
lock
inc
mov
xchg
jp
pop
and
and
xchg
test
jg
pop
lahf
sbb
test
ds
ja
inc
aam
jno
pop
or
adc
nop
aas
icebp
mov
repz
xor
out
mov
mov
push
or
xchg
adc
jl
outs
out
fcom
es
push
popa
cld
(bad)
xchg
cmp
imul
pop
cmp
fiadd
jo
lds
sbb
arpl
ds
shl
xchg
das
dec
repnz
add
iret
in
sbb
adc
cwde
push
rcr
retf
dec
out
sub
mov
clc
shr
sti
(bad)
rcl
int
ret
jmp
sbb
adc
cmps
or
jbe
inc
push
call
sub
sbb
scas
shl
mov
int
movs
add
stc
and
sbb
push
sub
ins
aad
in
xlat
jmp
adc
mov
push
xchg
ret
or
daa
sub
xor
jl
jp
aad
xchg
(bad)
xchg
pop
stos
cmp
inc
leave
int
cmp
xchg
fmul
rol
adc
fdivr
lahf
pop
call
add
sub
sub
es
and
mov
xor
sub
push
(bad)
mov
daa
lods
cmp
dec
ret
sbb
neg
js
or
inc
mov
push
mov
or
mov
xchg
cli
(bad)
sub
sti
pop
add
sub
das
push
sub
or
jnp
and
mov
mov
cmp
jmp
cmps
mov
rol
pop
cmp
jo
cmp
add
cmp
mov
rol
jmp
fwait
jae
sub
pop
jnp
and
or
dec
movs
push
inc
les
sub
gs
mov
das
fisttp
jne
cmps
mov
arpl
adc
(bad)
in
jno
or
mov
dec
cwde
popa
out
cmp
inc
xchg
jecxz
ret
jg
xchg
sub
push
inc
inc
aam
jecxz
aad
rcr
dec
popa
xor
inc
inc
ret
cdq
out
ins
jbe
adc
or
rcr
mov
mov
push
mov
sub
loop
fstp
das
shl
jb
cmp
shr
sub
sub
pop
into
mov
cmp
mov
or
scas
nop
(bad)
retf
cmp
cwde
dec
test
cwde
push
or
in
data16
pop
(bad)
cmp
aas
jbe
repz
inc
cmp
loopne
(bad)
movs
xchg
and
jb
push
lods
pop
sbb
ret
pop
retf
nop
sub
dec
sahf
mov
retf
adc
mov
add
and
mov
inc
sti
dec
push
push
mov
retf
cwde
mov
cmp
arpl
popf
outs
cmp
out
jns
div
in
(bad)
jecxz
push
outs
push
xchg
and
mov
or
push
addr16
pusha
lods
add
cmp
stos
popa
cmp
mov
mov
jp
out
fisub
loope
cli
imul
sbb
ss
dec
sbb
jae
sub
(bad)
fidivr
stos
add
dec
out
scas
push
pop
xor
mov
sub
pop
and
(bad)
pushf
fsub
jle
and
aad
pop
sbb
sub
mov
clc
jnp
fimul
loopne
bound
dec
pop
dec
lods
mov
push
cmc
das
lahf
or
cs
mov
jo
mov
scas
outs
mov
pop
or
jge
iret
mov
lahf
mov
dec
int3
jnp
sub
jo
dec
xchg
sub
sar
mov
inc
push
inc
aaa
jmp
jle
(bad)
nop
out
lahf
in
sbb
je
push
sti
shl
jno
sbb
inc
test
add
or
cs
aas
xchg
fsubr
sbb
lods
lahf
outs
pop
pushf
sbb
pop
fwait
je
ror
and
lahf
sub
xchg
xor
mov
fcomp
(bad)
das
(bad)
or
(bad)
loopne
inc
adc
pushf
jmp
adc
mov
shl
sbb
in
lea
sahf
mov
stos
or
les
out
hlt
xor
daa
sbb
inc
mov
icebp
jmp
mov
retf
xchg
sub
shl
add
ins
int3
je
jno
test
(bad)
cs
adc
xchg
cmps
test
mov
xchg
in
cld
and
jecxz
dec
add
mov
push
outs
or
shr
and
shr
movs
sti
push
cmps
test
movs
jno
pop
xor
fwait
jmp
movs
cld
fdivrp
mov
xchg
push
mov
xlat
jo
mov
xor
lock
bswap
mov
mov
aam
mov
mov
jmp
xlat
fisub
rcl
mov
push
rcl
retf
mov
loopne
dec
fwait
xchg
sbb
cmp
in
sbb
cli
stos
inc
sub
sub
inc
or
push
jmp
pop
mov
mov
(bad)
mov
(bad)
sbb
push
pushf
cli
ror
jno
fwait
mov
cs
in
pop
push
mov
mov
out
pop
xor
cmp
mul
ins
push
mov
sbb
xor
ds
frstor
push
imul
in
lods
cmp
std
gs
stos
das
jne
inc
aam
mov
inc
or
mov
sub
mov
pop
xor
adc
fs
cmc
lock
loopne
adc
in
jmp
call
repnz
sbb
cmp
pop
sub
(bad)
std
jb
popa
mov
push
fwait
addr16
jle
mov
icebp
into
mov
imul
shr
pop
and
add
lods
push
das
mov
add
cmp
loop
call
lahf
mov
fsub
fwait
cmp
xor
jecxz
les
ins
sbb
loopne
aad
ja
jge
pop
push
and
mov
movs
ins
rcr
ins
sti
pop
scas
ins
ja
icebp
shl
inc
mov
sbb
inc
cmp
xchg
aas
sar
cmps
rol
jnp
sbb
int
call
fnstcw
dec
and
mov
stos
ja
jle
fs
pop
cmp
mov
xor
mov
and
test
pop
lahf
call
mov
test
add
inc
or
pop
sub
dec
and
mov
cdq
imul
fwait
mov
inc
cmps
rol
ss
retf
xlat
ins
daa
jno
xor
into
xor
xor
mov
ja
adc
ret
jmp
icebp
stos
mov
mov
sti
sub
les
cwde
popf
in
and
das
aas
(bad)
jp
mov
in
mov
jno
fimul
cdq
aam
scas
(bad)
sahf
mov
neg
ins
leave
hlt
or
sbb
jno
int
mov
dec
jp
push
and
add
(bad)
repnz
jb
xchg
vpsubw
dec
pop
cmp
sar
test
push
ins
add
mov
inc
in
jmp
bound
push
mov
adc
cmp
(bad)
js
or
or
pop
cmp
sti
xchg
test
push
push
push
push
push
inc
adc
mov
pop
(bad)
ins
cmc
popa
fs
out
rcr
shl
add
mov
stc
std
call
mov
cmp
add
push
dec
test
xor
(bad)
stos
gs
mov
stos
dec
jecxz
mov
cmp
pusha
inc
pop
aam
repz
cmp
call
(bad)
and
cli
sbb
outs
ret
push
stos
(bad)
outs
pop
cli
jo
cdq
mov
shr
mov
lods
mov
or
adc
fsubr
and
jl
or
jne
xor
push
test
pop
rol
pop
push
mov
loope
sti
js
mov
pop
add
push
jge
sub
inc
(bad)
movs
adc
jno
inc
int3
mov
add
push
mov
out
mov
arpl
ror
pop
ja
mov
into
fmul
int3
nop
test
inc
(bad)
dec
idiv
push
dec
cmp
jp
movs
xor
ins
add
dec
mov
sub
(bad)
dec
repnz
retf
pop
adc
jb
jb
jbe
retf
call
ins
sar
pop
repnz
add
inc
push
jg
cli
sqrtps
sub
sar
mov
into
rol
clc
jp
aad
xchg
stos
dec
jae
dec
inc
shl
cli
mov
or
icebp
sub
fs
xlat
lods
call
cmp
mov
jb
dec
sub
sar
xor
mov
push
nop
sub
vcvtps2pd
pop
(bad)
(bad)
mov
dec
bound
cs
std
push
or
dec
and
lods
loop
(bad)
fcom
retf
push
scas
(bad)
mov
inc
repz
inc
mov
sub
fcom
mov
and
xor
nop
jo
inc
jmp
stos
mov
out
mov
pop
pop
mov
push
iret
test
jmp
(bad)
int
ins
jl
ins
aas
or
push
fld
pop
lods
xchg
mov
repz
xchg
push
ficomp
push
js
adc
aam
jns
xor
push
xchg
pop
mov
in
push
call
popf
or
cmp
jne
push
fldenv
jnp
add
inc
test
ret
inc
jle
mov
das
idiv
leave
cmps
mov
adc
fs
mov
sbb
adc
pop
mov
jnp
ret
cmp
dec
pushf
fdiv
push
scas
into
and
pushf
mov
out
in
out
ins
call
fdiv
js
aaa
pop
sbb
(bad)
ss
test
fwait
inc
dec
cmp
icebp
in
xchg
loopne
fdivr
add
pop
dec
xchg
repnz
repnz
hlt
jmp
push
pop
mov
fst
pusha
int
pop
mov
mov
pusha
jnp
rcl
pop
inc
stos
test
pop
(bad)
xor
pop
cli
jnp
cmp
sbb
jl
fsub
sub
push
sbb
sbb
xlat
mov
or
(bad)
pushf
adc
test
pop
sub
in
div
fmul
push
xor
retf
push
sbb
leave
mov
shl
iret
xchg
jns
and
dec
push
cmps
pushf
add
aaa
rcl
retf
mov
shr
enter
inc
es
es
clc
lods
imul
(bad)
sub
add
jl
sbb
and
xlat
das
stc
mov
std
and
popa
pop
iret
jb
xchg
pop
mov
std
imul
or
sbb
xlat
dec
aas
xor
aas
adc
nop
push
stos
jb
add
pop
mov
cmp
pop
pop
imul
cmc
mov
sbb
cwde
imul
push
xor
pop
cmp
cdq
lods
nop
add
sbb
(bad)
fstp
pop
sbb
je
inc
xor
scas
cmps
aam
dec
pop
repnz
hlt
(bad)
jle
enter
out
cmp
leave
mov
movs
sti
sub
repz
lods
dec
jno
mov
cwde
scas
pop
or
mov
loopne
or
adc
or
cmc
dec
jmp
jle
xchg
aaa
in
push
mov
mov
daa
cmps
data16
popf
pusha
fwait
xlat
(bad)
push
imul
test
stos
out
add
icebp
scas
mov
and
sbb
jno
jle
addr16
aad
add
nop
sbb
adc
mov
mov
push
fiadd
xlat
dec
clc
and
push
mov
push
push
sub
daa
lock
jmp
repz
mov
in
(bad)
dec
cwde
push
das
pop
lock
sub
ret
xchg
jge
xlat
xor
(bad)
fidiv
ins
ret
es
cs
inc
adc
pop
adc
jo
enter
retf
jns
test
sbb
sub
(bad)
pop
loop
into
mov
(bad)
sub
nop
gs
sahf
cmp
ja
pusha
cmp
inc
pop
mov
test
mov
div
aam
stc
or
imul
mov
mov
inc
ds
push
arpl
jecxz
dec
call
push
sub
pop
add
fdiv
jl
gs
mov
mov
mov
sub
xchg
lds
ror
sbb
push
sub
aas
gs
jae
xchg
dec
mov
add
pop
sbb
xor
scas
outs
xor
pop
cmp
loopne
mov
sbb
stc
out
jbe
fadd
ret
jno
jno
fwait
jne
xchg
xchg
xor
test
(bad)
adc
mov
retf
mov
push
movs
sbb
in
add
mov
mov
fsubr
cwde
xor
cwde
push
jnp
pop
mov
push
add
pop
and
cmp
mov
outs
call
imul
pop
xchg
ins
xor
cdq
mov
sub
jmp
push
(bad)
or
enter
jmp
rol
stos
add
sub
cmp
cmc
popf
xor
adc
dec
mov
scas
scas
repz
mov
(bad)
add
mov
sbb
jmp
ficomp
and
inc
pop
or
inc
cmps
div
dec
add
dec
inc
and
cwde
jle
cwde
js
scas
inc
mov
dec
(bad)
add
dec
arpl
inc
mov
pop
mov
mov
sbb
(bad)
arpl
mov
leave
jnp
rcr
daa
and
xor
xchg
les
mov
aas
jmp
push
loopne
movs
cmp
popa
pop
into
cli
pop
mov
jg
in
fstp
adc
pop
scas
xchg
jp
fisubr
inc
inc
mov
out
adc
(bad)
loopne
sub
stc
lock
outs
jne
fisttp
movs
xchg
adc
sbb
fadd
dec
lods
test
jmp
into
dec
add
mov
dec
pusha
in
ins
call
adc
sub
dec
test
jecxz
cmc
push
sbb
jp
nop
ret
mov
mov
mov
repnz
lods
dec
ja
in
cmp
imul
imul
aad
or
mov
sbb
cwde
jb
jle
pop
pop
loop
xchg
pop
outs
cmp
lahf
dec
dec
adc
inc
pop
mov
popa
pop
ror
test
sub
test
test
fsubr
or
in
fldcw
sub
rcl
inc
leave
std
mov
inc
dec
nop
pop
loope
ja
add
mov
lds
daa
stos
mov
loope
mov
push
mov
push
test
mov
aam
pop
cwde
cli
and
mov
jae
jno
and
popa
xor
jbe
and
push
lods
test
imul
test
push
inc
sahf
repnz
jno
fbld
pop
(bad)
lahf
cwde
test
inc
mov
adc
add
mov
stos
push
sbb
in
jnp
ja
push
adc
jbe
pop
xchg
fstp
or
jo
sub
jne
fs
loop
mov
fcmovnu
into
in
dec
pop
jo
mov
stc
or
mov
pop
sub
lock
pop
out
in
jmp
shr
xchg
test
push
sbb
ror
push
(bad)
mov
push
or
ins
lds
dec
xchg
cdq
jmp
sbb
and
sub
hlt
ins
std
div
cmp
popf
mov
bound
push
xchg
dec
int
dec
xor
loopne
pop
ss
popa
nop
xchg
mov
and
and
inc
hlt
hlt
(bad)
add
rol
cmp
cmp
jg
ja
cmp
repnz
ror
push
mov
jecxz
xor
add
pop
adc
cdq
jmp
jecxz
push
jne
call
clc
sub
stos
xor
retf
add
xchg
in
xor
pushf
jno
mov
std
pop
pop
sub
mov
sub
sbb
jmp
add
and
sub
jae
stos
mov
ja
aas
adc
xor
stos
cmp
leave
icebp
xchg
in
ror
retf
mov
xchg
sahf
sub
and
movs
push
sbb
mov
or
pop
mov
push
jo
pop
adc
sub
loop
rcr
pop
pop
push
call
pop
push
adc
adc
jle
loopne
movs
inc
pushf
inc
jg
cmp
retf
cmp
aaa
cmp
adc
into
rcr
sbb
push
sub
add
cmp
inc
in
add
mov
cmps
lock
iret
adc
mov
sbb
fs
cmps
jae
mov
mov
je
inc
push
iret
retf
fsubrp
shr
shl
mov
ficomp
xchg
xor
loop
gs
jmp
add
ret
pop
lea
call
(bad)
mov
push
mov
mov
(bad)
lock
and
stc
hlt
lahf
lds
push
jns
scas
push
shr
pop
xor
outs
lea
cmp
mov
cmp
rcr
inc
push
xor
jmp
stc
rcl
das
outs
push
sub
sbb
pushf
ret
sub
add
xor
scas
(bad)
clc
mov
dec
jg
popf
mov
mov
mov
fadd
fadd
mov
mov
in
scas
loopne
test
push
test
jecxz
jae
add
pop
stos
scas
sbb
daa
repz
xor
sub
out
ja
add
pop
jmp
ds
fld
xchg
out
sub
loop
dec
test
scas
aad
ja
fcomi
xor
mov
stos
daa
or
call
jmp
jo
push
in
push
jge
sub
das
push
addr16
test
pop
xlat
icebp
or
adc
jnp
and
stc
and
inc
out
addr16
jmp
aas
cmp
ror
pop
shl
jg
lahf
jge
mov
mov
inc
nop
fwait
stc
es
pushf
or
dec
adc
xor
and
pop
xor
mov
xchg
test
jbe
inc
enter
vmrun
dec
ror
dec
fcmovb
dec
push
test
aas
ret
sub
out
jae
cmp
dec
cmp
jne
leave
cmp
sar
in
cmps
xor
add
jp
inc
push
sub
aad
aad
test
push
pop
loop
in
pop
mov
gs
stc
ret
mov
icebp
fld
dec
icebp
sbb
nop
daa
fwait
rcl
fsubr
test
popf
popf
push
sbb
xchg
lahf
add
out
mov
(bad)
jmp
iret
shr
fs
mov
mov
sbb
stc
pop
adc
pop
adc
out
in
mov
mov
loopne
add
or
cmp
cmps
mov
xchg
xchg
push
sahf
sub
jl
(bad)
or
ds
jmp
mov
test
jnp
rcr
dec
jae
fistp
fadd
fwait
sbb
xchg
sub
fs
sar
ret
aam
shr
mov
xchg
lds
fimul
or
add
(bad)
cwde
dec
out
xchg
and
mul
jmp
pop
(bad)
dec
les
pop
cmp
xor
ret
inc
sub
mov
mul
dec
sub
cmp
(bad)
std
or
xchg
(bad)
not
mov
cmps
mov
jo
pushf
dec
inc
mov
push
aad
(bad)
out
sbb
(bad)
int
loopne
and
jmp
cmp
iret
xor
cli
jbe
push
nop
inc
fwait
cmp
mov
(bad)
pop
xchg
jmp
lods
xchg
fistp
mov
xchg
and
iretw
les
dec
xchg
xor
mov
and
inc
dec
mov
lods
jp
jg
cs
std
int
(bad)
fild
and
xor
ins
xchg
das
xchg
sub
ins
lock
es
sbb
mov
sub
add
and
pop
mov
aad
and
sar
arpl
sbb
gs
cli
movs
(bad)
jnp
aam
inc
push
jg
fisttp
xor
repz
fcomp
and
int
test
sti
push
cmp
push
mov
jle
push
or
mov
sub
ja
push
mov
inc
retf
pushf
dec
dec
xchg
mov
into
loopne
stc
repnz
mov
mov
dec
out
test
fiadd
sbb
fisubr
mov
gs
retf
aaa
je
jae
and
scas
cdq
sbb
in
(bad)
inc
movs
retf
adc
mov
out
dec
(bad)
lahf
outs
mov
dec
test
in
(bad)
or
mov
scas
and
in
mov
popa
mov
cwde
push
sahf
hlt
push
mov
lea
inc
push
sub
stc
and
loopne
push
nop
int3
clc
inc
dec
loop
inc
cmc
out
push
cwde
jp
cmp
push
test
jl
je
jbe
add
pop
pop
popf
xchg
(bad)
ror
aad
mov
adc
retf
cwde
mov
or
out
mov
add
adc
jl
test
test
addr16
jmp
sahf
pop
pop
cmp
push
mov
xchg
sbb
xchg
cdq
pop
pushf
adc
jae
xchg
test
dec
lods
xlat
xlat
stos
xchg
fwait
js
sti
push
iret
aad
jmp
push
add
(bad)
lea
mov
jge
sbb
xor
add
mov
push
mov
bnd
cld
sar
pusha
jg
shl
aas
fistp
stos
dec
push
lods
or
or
cmp
or
jg
add
ja
and
or
stos
(bad)
sti
pop
cmp
out
cmc
jo
xlat
mov
rcl
aas
mov
dec
mov
jno
ins
sbb
cmps
add
fadd
movs
inc
xor
mov
imul
inc
popf
pop
and
jp
sbb
or
pusha
or
hlt
push
scas
pop
scas
inc
ficom
cmps
jge
fist
mov
jns
sub
add
pop
mov
cwde
std
loop
cwde
xor
or
or
or
popa
das
xor
ror
mov
stos
push
popf
addr16
rcr
fwait
jmp
movs
retf
xor
cmp
cdq
mov
dec
mov
mov
sar
leave
(bad)
adc
push
fmul
mov
sbb
aam
mov
mov
fadd
xlat
dec
push
cmp
ret
in
lahf
inc
xchg
addr16
jae
xchg
call
pop
dec
enter
cmp
out
movs
mov
int
push
das
in
stos
cmps
into
movs
sub
or
movs
shl
pop
or
outs
pop
fst
rdtsc
leave
mov
sti
or
or
add
and
xchg
cmp
sbb
jecxz
aad
in
mov
adc
xor
cs
xor
std
mov
fiadd
aad
push
fsubr
loop
inc
and
xor
sar
xor
mov
dec
loopne
fst
and
jmp
jb
xor
adc
retf
or
sub
or
pop
push
push
imul
jl
aas
dec
push
arpl
das
xor
xor
retf
xchg
mov
sub
mov
ret
add
pop
gs
je
inc
imul
out
ins
mov
xor
stc
mov
jecxz
xchg
mov
enter
mov
rcr
nop
es
call
mov
jmp
adc
xchg
adc
fs
(bad)
xchg
imul
mov
leave
add
cdq
mov
pushf
std
push
add
test
jecxz
sti
cmps
or
xor
lods
push
lds
(bad)
push
repnz
jmp
fwait
leave
(bad)
pop
ins
daa
fidivr
push
fcmove
test
popa
fld
pop
aas
push
jle
cwde
(bad)
(bad)
dec
xchg
sbb
cdq
xchg
mov
pop
(bad)
into
clc
inc
push
hlt
jnp
and
cmp
fdivp
sbb
pop
in
dec
shl
cmp
clc
and
xlat
mov
movs
sbb
mov
sub
xor
mov
cwde
and
add
cmp
popf
dec
popf
jecxz
imul
in
cli
leave
add
out
or
loop
add
test
in
ss
mov
push
xchg
into
cld
pop
out
int3
add
js
shl
xlat
dec
inc
pop
jo
xlat
jg
jecxz
mov
mov
mov
and
int3
xor
adc
and
sbb
movs
mov
sahf
cmp
jbe
xchg
cmp
lock
or
jle
ja
js
xor
mov
inc
fld
rol
aad
jbe
mov
add
cmp
out
push
jno
popa
(bad)
cmp
dec
test
or
cmp
and
mov
outs
loope
(bad)
mov
jle
movs
movs
mov
pop
cmp
xchg
jg
xchg
push
mov
shl
in
adc
scas
push
or
iret
push
sbb
aam
(bad)
addr16
lahf
xor
fsub
push
sbb
cmps
test
movs
retf
shl
mov
loope
cmp
dec
cld
lea
sub
outs
adc
sub
sub
int3
mov
gs
mov
dec
out
call
sbb
mov
dec
test
jae
mov
stos
xor
les
xor
mov
sub
jmp
(bad)
ja
scas
push
pop
adc
mov
mov
outs
jp
jp
mov
xor
or
mov
arpl
mov
push
push
xchg
pusha
jbe
cld
repz
xchg
inc
sbb
push
sahf
fld
or
xchg
pop
mov
iret
dec
cld
jmp
stos
mov
cmp
mov
mov
jmp
mov
cs
push
sbb
cdq
and
mov
xlat
inc
sahf
mov
sub
mov
push
ins
sub
mov
add
sahf
mov
jbe
movs
fdivr
or
jno
jmp
aas
push
add
idiv
(bad)
or
hlt
ja
cdq
inc
(bad)
sub
push
pop
and
out
pushf
clc
retf
aad
xlat
popf
shl
jbe
std
cmps
sub
sbb
jne
mov
inc
mov
jge
cmp
adc
pushf
lods
loop
cdq
or
mov
sbb
stos
sub
push
mov
xchg
leave
das
jg
mov
push
or
mov
sar
or
je
mov
shr
ficom
sar
pop
sub
icebp
cmovbe
fldcw
inc
leave
stos
inc
mov
fs
fcmovnu
mov
jmp
or
les
adc
repnz
pop
or
push
xor
in
sar
(bad)
xor
int3
sahf
pop
push
hlt
lods
jmp
shl
ret
xchg
dec
or
mov
das
out
test
shl
rcl
jns
sbb
inc
mov
jp
push
pop
jbe
hlt
push
push
out
push
mov
pop
cli
cdq
cwde
lods
neg
xor
jmp
jmp
ror
push
xchg
xchg
mov
push
lahf
gs
push
sub
mov
mov
or
and
jb
push
and
sbb
jle
xchg
inc
rcl
add
xor
jbe
cmp
fdivr
ja
test
inc
add
mov
mov
aam
hlt
dec
adc
or
xor
mov
jno
sub
sbb
int3
inc
test
jle
aaa
outs
mov
popa
add
sbb
(bad)
push
cmps
push
jbe
ficomp
loop
push
mov
cld
fndisi(8087
jmp
fnstcw
jp
ror
mov
xchg
lea
addr16
xor
cld
bound
aad
gs
push
cmp
stos
in
xchg
and
adc
pop
and
sub
mov
xor
adc
cmc
stc
xchg
jns
in
je
fwait
inc
jns
dec
ja
out
mov
js
fld
sub
jb
add
sbb
ins
pusha
sar
mov
ret
pop
cmc
pop
ins
cld
sub
push
imul
mov
jg
stos
fist
loope
cmp
push
mov
or
in
cmc
adc
je
push
ss
fsub
mov
daa
nop
rcr
add
mov
out
xchg
enter
adc
push
adc
ja
sbb
hlt
xchg
stos
fdivr
fistp
mov
mov
cli
stc
sbb
dec
dec
inc
imul
sub
pause
mov
aas
test
fiadd
call
das
inc
push
cmp
fwait
call
cmp
sar
xlat
mov
test
mov
jmp
mov
aam
or
and
xchg
cwde
(bad)
xchg
icebp
sbb
add
(bad)
cmc
adc
sub
add
hlt
xchg
or
arpl
cmp
mov
int
mov
push
push
dec
sbb
(bad)
xor
(bad)
js
cs
xor
jmp
mov
loopne
call
pop
daa
push
rcr
(bad)
mov
lahf
sbb
mov
cmp
xor
fnstenv
sub
rcl
push
shl
shl
dec
add
clc
push
adc
cmp
cmp
xchg
cwde
inc
sbb
paddd
mov
mov
mov
jl
add
push
daa
sti
rol
fwait
scas
sbb
out
add
dec
ins
es
cmp
jle
and
out
add
data16
dec
sbb
adc
cmc
std
jno
repz
add
test
retf
in
pop
inc
inc
mov
or
cmps
pusha
pop
and
mov
jmp
rol
mov
sti
xor
ins
into
std
ja
shl
sbb
pop
and
test
test
mov
push
push
sbb
rol
(bad)
ja
cld
fisttp
mov
inc
icebp
int3
pop
sub
mov
loopne
out
pop
xlat
dec
fbstp
int
aam
push
(bad)
mov
push
push
ds
pop
mov
pop
dec
mov
mov
(bad)
xchg
(bad)
jecxz
mov
das
enter
jmp
add
jle
add
sub
ins
mov
outs
pop
mov
out
xchg
pop
xchg
(bad)
out
adc
push
(bad)
dec
cmp
jmp
or
and
adc
test
add
int
dec
push
int
adc
ret
pop
or
add
les
fwait
imul
js
out
lods
adc
cmp
lods
pop
test
cmp
iret
sub
cmp
iret
bound
dec
sbb
cdq
mov
clc
out
adc
pop
or
mov
fisubr
mov
movs
cmp
jbe
js
js
mov
arpl
dec
pop
int
lods
inc
pop
les
jge
mov
dec
and
cmp
(bad)
std
mov
fld
jno
outs
or
in
jg
xor
fnsave
add
xor
lods
sbb
sub
dec
xor
mov
mov
dec
dec
and
xor
enter
or
push
pushf
mov
sub
and
pop
sbb
push
jo
fucomi
pusha
aam
je
cs
sti
and
adc
jb
push
(bad)
sbb
mov
jmp
and
data16
or
movs
mov
int
test
or
stc
sar
scas
sub
pmulhw
adc
test
xchg
jg
add
mov
das
int3
inc
jp
ins
adc
jbe
add
and
push
in
mov
sar
jp
and
cmp
stos
mov
repz
xor
and
adc
xchg
daa
pusha
adc
fdiv
xlat
out
jge
and
(bad)
retf
lahf
out
xor
dec
ja
call
cmovp
scas
cmp
add
jne
jecxz
fidiv
into
fst
cwde
addr16
fwait
mov
sbb
in
ja
les
sub
or
(bad)
mov
mov
int
add
inc
pop
lahf
jmp
ds
and
mov
push
stc
add
hlt
push
dec
or
mov
inc
fninit
nop
pop
movs
push
jmp
test
imul
add
dec
push
ror
jbe
dec
jae
xor
in
out
sbb
aas
aad
stc
add
mov
fcmove
cmp
add
pop
dec
repnz
sub
xchg
fnstsw
lock
mov
sbb
xchg
sub
mov
(bad)
jg
push
loop
xchg
rcr
and
pop
xchg
pushf
sub
imul
or
sub
sar
shl
loop
push
dec
inc
inc
es
or
cmp
push
xchg
arpl
and
and
aam
stos
shl
add
stc
adc
add
mov
shr
sbb
rol
in
hlt
outs
fist
mov
test
arpl
inc
jle
xchg
(bad)
jmp
cmp
adc
mov
xor
dec
int3
jmp
call
dec
cmps
xchg
loopne
cmps
movs
bound
or
dec
mov
or
mov
push
lods
mov
stc
xchg
in
sahf
nop
push
inc
dec
add
scas
and
sbb
jo
repnz
inc
test
jno
mov
ins
mov
jecxz
xchg
sub
lahf
xchg
pushf
push
retf
jnp
movs
mov
cmp
test
lock
sub
and
jno
push
(bad)
xor
pushf
jae
jmp
and
outs
std
dec
or
idiv
pop
fst
sbb
pop
sub
aam
mov
jmp
push
inc
xchg
nop
cld
retf
mov
mov
div
in
sub
movs
hlt
cmp
dec
fistp
mov
jns
push
add
repz
xchg
rcl
imul
mov
fcomp
ss
jne
jmp
mov
inc
out
xor
bound
dec
aad
inc
mov
cmp
pop
fcom
imul
sar
or
(bad)
lea
sbb
neg
xor
sub
fistp
mov
cmp
outs
cmc
inc
clc
nop
jae
sbb
ins
call
jmp
xchg
ins
retf
lods
sahf
mov
pop
sub
or
call
das
jecxz
ja
mov
jecxz
out
pop
cmp
loope
jne
inc
lds
pop
mov
jmp
cmps
or
cmp
push
loop
mov
stos
movs
dec
cmps
cmp
arpl
loopne
mov
fwait
clc
(bad)
cmp
repnz
add
into
into
inc
sbb
dec
lahf
(bad)
and
mov
pop
or
rol
xor
sub
xchg
mov
inc
in
ret
icebp
mov
mov
mov
pop
mov
xor
push
xor
cmc
mov
daa
fldcw
shld
xchg
sbb
rol
sub
pusha
and
pop
push
xlat
pop
fsubrp
adc
xor
jno
rcr
ja
shr
movs
test
hlt
mov
mov
adc
dec
pop
loope
lods
xchg
rol
push
jae
mov
popf
(bad)
into
adc
lods
sbb
push
push
or
xchg
cmp
adc
pop
loopne
sbb
jg
loop
pop
lahf
loope
inc
inc
and
aaa
mov
stos
mov
mov
pop
xchg
cs
push
jmp
pop
in
mov
movs
pop
aas
and
mov
cmp
add
sub
loopne
rol
outs
data16
les
adc
mov
mov
push
dec
cmp
repz
jb
rcl
sbb
lock
in
fimul
xlat
jno
push
(bad)
sbb
outs
scas
test
cmps
mov
jecxz
dec
mov
mov
push
mov
sub
push
jl
nop
lds
aam
cmp
mov
iret
cmp
cmp
test
repnz
pop
sbb
sbb
jne
adc
lahf
out
sub
dec
jle
mov
push
aam
dec
nop
sub
fmul
out
mov
(bad)
jae
jmp
jmp
(bad)
ficom
mov
xchg
fidiv
mov
xor
repz
mov
add
stos
clc
sbb
mov
cmp
xchg
fistp
jmp
push
lea
scas
lock
stos
xchg
fcom
push
rol
retf
clc
fs
jae
jge
and
mov
jp
cmps
jo
sbb
mov
adc
test
xor
pop
call
push
sub
mov
sub
lds
mov
scas
cmps
push
out
pushf
adc
movs
addr16
xchg
and
xchg
mov
repz
sbb
or
sar
mov
mov
push
pop
add
dec
dec
pop
fwait
add
cmp
out
push
icebp
js
test
arpl
(bad)
sub
xor
dec
imul
cld
push
loope
mov
xchg
pop
xchg
gs
add
outs
(bad)
ins
retf
or
in
add
add
imul
shr
iret
sbb
mov
sub
lea
fld
push
dec
jbe
push
lods
sahf
ss
jmp
das
scas
adc
bound
adc
les
(bad)
sub
and
adc
je
lods
int
repnz
inc
fwait
jmp
xchg
ins
js
inc
(bad)
push
lea
push
dec
ret
dec
adc
mov
xlat
mov
push
jmp
dec
fs
mov
xchg
in
pop
in
fcmovne
call
and
inc
imul
fisttp
inc
shl
sub
ja
mov
sub
inc
cmc
push
rcl
pop
sbb
stos
lds
mov
outs
pop
in
aad
mov
daa
cmp
mov
scas
lahf
loop
adc
xor
or
bound
cmp
xlat
cs
out
in
cmp
test
cdq
pop
sti
adc
imul
mov
cmc
addr16
push
pop
iret
fimul
or
iret
pop
dec
jecxz
nop
sbb
add
addr16
dec
ret
add
mov
repz
pop
inc
lds
mov
and
(bad)
out
pusha
hlt
(bad)
pop
ror
push
retf
jbe
pop
sbb
ins
cli
push
lds
sub
mov
imul
xor
and
cmp
xchg
xor
stos
cmp
dec
loope
jno
int3
mov
test
data16
cmps
mov
aas
or
xor
idiv
mov
mul
cwde
inc
js
jp
dec
mov
div
cmps
jmp
cdq
ret
jg
adc
jl
and
ds
(bad)
fisttp
inc
mov
(bad)
or
ins
ins
add
and
and
or
mov
add
dec
cld
push
cmp
arpl
push
jp
inc
push
mov
in
inc
dec
cmps
or
add
dec
loope
adc
sbb
push
fwait
lds
jp
push
pop
push
mov
es
inc
dec
xor
cmps
pop
(bad)
sub
push
lods
stos
icebp
xor
and
jne
push
lods
cmps
push
aas
enter
out
fld
aam
mov
xchg
cmps
push
icebp
repnz
push
xchg
mov
mov
lods
mov
lock
das
fstp
int3
adc
xor
rcr
mov
mov
push
stos
mov
jno
mov
jae
dec
outs
mov
inc
clc
cli
cmp
pop
mov
xchg
mov
cs
jp
es
and
or
test
jo
sahf
push
mov
and
adc
(bad)
jb
inc
inc
popa
fsubr
pop
sar
repz
ins
es
cmp
in
xlat
out
xor
pusha
not
add
lods
xchg
xchg
imul
rol
pop
or
leave
sbb
jmp
mov
std
enter
push
xchg
ret
sahf
jbe
mov
jmp
dec
add
hlt
xchg
sub
sbb
movs
sbb
pushf
sahf
cld
(bad)
or
js
fcom
sbb
mov
jge
movs
call
stc
pop
mov
push
mov
test
xor
sub
(bad)
repz
push
loop
outs
ins
pushf
call
add
cmp
mov
mov
ret
cs
lea
jmp
(bad)
mov
sub
adc
jecxz
xor
mov
pop
jae
and
(bad)
out
loope
dec
mov
movs
jnp
(bad)
daa
jge
xor
jo
pop
cli
pop
xchg
jmp
fild
xchg
fs
daa
mov
xor
loopne
cmp
fisttp
sub
jns
icebp
enter
and
inc
ficomp
mov
shr
xor
cmc
call
or
loop
sub
xchg
inc
lock
sar
xlat
jecxz
mov
in
repz
lods
xor
enter
push
inc
mov
mov
inc
jg
cs
mov
xchg
xchg
or
mov
cdq
ins
cdq
popa
mov
and
lock
cmc
loope
push
ins
sub
scas
jb
inc
jecxz
lods
pop
retf
jnp
stc
mov
cmp
out
shr
xor
stc
shl
mov
mov
outs
xchg
aaa
cmp
inc
xor
xor
addr16
ins
and
hlt
daa
sbb
sub
xchg
cmp
out
popa
dec
and
out
jl
cmps
dec
aas
fnstcw
sub
push
stos
fnstcw
push
mov
clc
dec
jecxz
inc
enter
hlt
fistp
cmp
fwait
adc
js
test
retf
jnp
cli
or
push
cmp
cmp
adc
mov
dec
xlat
or
daa
aas
push
cmc
retf
and
aas
fld
xchg
pop
loope
push
pop
pop
adc
in
(bad)
ret
adc
call
mov
push
test
push
push
push
outs
mov
pop
sub
jnp
aad
xor
loopne
jne
push
ret
cmps
dec
mov
push
and
lock
fnstsw
repz
push
xchg
mov
sbb
fist
dec
jg
jb
xor
pop
inc
cld
inc
mov
ins
pusha
imul
adc
push
xchg
rcr
or
xlat
and
lods
loope
and
aad
and
jp
es
pop
jmp
inc
cmp
hlt
and
xchg
fcom
mov
shl
retf
adc
int
pop
outs
mov
mov
jecxz
xchg
pop
xchg
cli
lock
out
cmp
pop
call
es
sbb
shl
fstp
dec
int3
scas
les
fnsave
push
scas
lea
jno
add
jae
iret
js
scas
outs
dec
xor
and
cmp
jge
(bad)
rcr
inc
das
lock
sub
xchg
xor
out
shr
imul
sub
es
jge
sbb
push
add
push
push
push
shl
mov
ret
test
ins
fild
lock
push
test
and
(bad)
xor
xor
adc
dec
push
xchg
test
and
gs
cmp
jg
mov
or
sbb
(bad)
xlat
movs
call
aad
test
cs
mov
push
or
lods
jmp
mov
inc
in
scas
mov
mov
fisub
imul
repnz
sti
add
xor
cmp
in
cmps
lods
ins
or
add
xlat
invd
add
sub
and
bound
inc
bound
mov
mov
repz
fnstcw
repz
mov
pop
and
cmp
nop
jnp
xlat
call
stos
nop
shr
vmwrite
adc
mov
mov
inc
adc
iret
cs
push
mov
arpl
lock
or
clc
fldlg2
fild
pop
sbb
xchg
std
cli
das
jns
mov
stos
test
xor
xor
pop
fcom
jae
test
jae
shl
cmps
gs
popa
loop
add
adc
mov
push
not
push
(bad)
movs
dec
pop
popa
lods
adc
jno
(bad)
aam
(bad)
fwait
and
mov
jmp
cmovbe
mov
dec
lods
cdq
aaa
push
jmp
mov
cmp
jecxz
ja
or
xor
and
mov
iret
adc
inc
sbb
bound
cmps
(bad)
pop
ja
sahf
xor
and
inc
inc
icebp
add
mov
or
mov
or
xor
and
lds
mov
fwait
mov
mov
das
cmc
mov
jp
jno
lods
add
cmp
mov
inc
daa
push
and
shr
adc
loope
xor
fbstp
adc
fsubr
(bad)
addr16
xchg
cwde
xor
dec
shl
aam
push
fcomi
daa
daa
imul
push
sbb
and
add
ret
push
mov
loop
push
retf
push
jbe
xor
inc
push
out
xor
push
pop
xor
in
lods
push
cs
aaa
adc
cmp
loop
push
push
call
mov
ret
lods
imul
sbb
call
cs
dec
jge
adc
dec
cdq
sbb
hlt
leave
imul
inc
js
(bad)
push
pushf
iret
mov
repz
cmp
mov
inc
dec
pushf
add
push
inc
adc
push
stos
cmps
(bad)
xor
clc
in
cli
jp
shl
out
cmc
push
lahf
loop
stc
fadd
jg
adc
mov
fcomi
mov
mov
int
adc
push
je
pop
movs
sbb
fdiv
mov
call
jbe
nop
sub
push
jo
inc
imul
out
cld
or
mov
cmps
sbb
mov
mov
add
xor
sbb
aas
popa
outs
push
dec
pop
push
xor
aaa
les
mov
inc
jecxz
fild
aad
dec
rcr
pop
xchg
inc
dec
xlat
inc
cmp
pop
jb
dec
jbe
mov
dec
or
cmps
arpl
xchg
jbe
dec
or
stos
leave
aam
jne
mov
aad
dec
pop
hlt
addr16
fwait
lods
cs
test
pop
out
push
mov
sbb
stc
inc
jecxz
les
cmp
inc
mov
jmp
in
pop
mov
pop
xor
adc
outs
test
xor
retf
xchg
or
pop
(bad)
push
mov
retf
jne
addr16
test
int3
ss
cmp
(bad)
pop
inc
ret
mov
arpl
xor
les
xchg
(bad)
mov
cwde
call
inc
inc
loop
icebp
cmp
add
mov
cmp
xchg
into
or
enter
xchg
xlat
mov
call
mov
mov
xchg
xchg
rol
sub
hlt
xchg
mov
adc
sbb
ret
jae
pop
iret
xor
xor
and
adc
xor
(bad)
sahf
out
(bad)
sub
outs
inc
call
mov
or
add
lock
mov
jg
loop
lods
sbb
jnp
sbb
retf
or
pop
dec
rol
movs
dec
into
daa
cs
pushf
jp
push
fs
stc
push
enter
mov
leave
inc
jo
pop
fisttp
xor
aad
push
(bad)
push
enter
cmp
lods
add
out
aas
dec
mov
js
jae
mov
xchg
iret
mov
test
pop
mov
call
dec
push
mov
dec
enter
movs
lods
ret
pushf
push
cmp
jae
inc
imul
mov
xchg
hlt
mov
mov
xchg
pop
mov
pop
ins
adc
mov
dec
inc
test
xchg
movlps
mov
out
outs
push
in
dec
cwde
inc
scas
pop
je
rol
(bad)
xor
ficom
bound
dec
out
cli
adc
dec
push
imul
dec
test
sub
fisttp
or
jns
(bad)
cmc
inc
mov
out
pop
les
adc
rcl
outs
sub
scas
ror
mov
inc
xchg
pop
int3
cdq
inc
mov
es
fdivr
cld
or
nop
adc
cmps
aad
mov
dec
out
sbb
jle
fbstp
les
leave
dec
cmps
inc
mov
sub
and
daa
les
cmps
pop
and
xchg
sub
lods
mov
cmp
dec
movs
int3
loop
out
mov
idiv
mov
push
push
clc
ret
call
inc
mov
js
repz
stos
les
inc
aas
and
cmp
ins
loopne
repz
dec
jns
repz
ret
dec
addr16
test
mov
aaa
retf
out
ss
mov
cmp
loop
fwait
inc
and
add
mov
jae
iret
int
mov
mov
dec
jne
xchg
shl
(bad)
and
adc
jo
pushf
in
adc
ret
xor
pusha
push
xor
(bad)
clc
pushf
push
pusha
test
lock
imul
xchg
movs
jl
xchg
pop
jns
jbe
xlat
cmp
xlat
addr16
and
test
loope
int
test
cld
in
dec
jmp
add
(bad)
xor
in
xchg
int
imul
test
dec
into
stc
pushf
ret
lods
xchg
dec
inc
int3
ja
popa
out
cmc
leave
nop
pushf
ret
xor
in
or
aas
sbb
pop
xchg
rcr
add
arpl
adc
mov
loopne
dec
ja
mov
mov
iret
jecxz
test
inc
ret
or
cmc
xchg
in
cmp
fisttp
out
shr
jno
int3
movs
adc
inc
sbb
cmp
sub
mov
fwait
lods
inc
repz
rol
test
test
lods
dec
stc
jb
dec
fs
ja
cmps
adc
adc
sub
xchg
aas
cmp
jmp
gs
out
int
dec
jecxz
(bad)
xchg
xor
leave
out
pop
mov
xor
fcomp
jle
mov
push
cld
pop
pop
mov
nop
fnstcw
data16
lds
dec
mov
cmp
mov
dec
inc
scas
lea
nop
push
shr
pop
in
push
jecxz
xor
xchg
mov
sub
(bad)
mov
retf
loop
rol
dec
pop
inc
fimul
mov
cmp
call
jp
push
(bad)
adc
(bad)
std
xchg
inc
inc
fdivr
mov
xor
into
pop
or
mov
out
lods
push
(bad)
ds
jmp
adc
or
xchg
fsub
xlat
scas
xchg
push
popf
aaa
add
loop
out
pop
fcomp
or
ret
mov
cld
loope
lock
addr16
adc
(bad)
fdiv
ins
pop
adc
push
popa
cmps
cmc
xchg
retf
and
cmps
es
jl
pop
xchg
add
sbb
aaa
cmp
inc
gs
xchg
(bad)
sub
cdq
cmp
xor
fsub
jmp
jns
dec
mov
(bad)
or
(bad)
cli
sti
jp
add
ss
daa
jbe
mov
or
sbb
fisubr
cmp
ins
sbb
mov
pop
xchg
adc
adc
sti
(bad)
mov
ds
ja
xchg
cmp
inc
mov
add
in
cmps
js
push
arpl
(bad)
mov
sahf
add
add
jg
aas
leave
fldenv
ror
loop
popa
fdivr
sub
inc
pop
pop
xor
data16
dec
call
loope
adc
xchg
(bad)
retf
pop
mov
retf
sahf
cld
les
and
aad
shl
mov
jnp
clc
jecxz
fisub
push
js
(bad)
clc
push
mov
gs
aaa
mov
jne
mov
cmp
js
cli
nop
out
xchg
(bad)
jbe
mov
out
or
mov
nop
adc
dec
in
in
jmp
mov
pop
int
test
jg
inc
mov
out
and
jmp
ja
lds
adc
xlat
and
mov
pop
repz
sbb
cmps
xchg
test
add
ds
das
stos
fimul
mov
sub
xor
jne
sub
push
mov
xchg
mov
or
fistp
jmp
stos
ja
out
rol
mov
cmps
pushf
or
inc
sbb
xor
nop
pushf
std
xor
or
shr
sbb
inc
mov
ins
in
cmp
in
(bad)
icebp
and
pop
movs
sbb
int
stos
adc
mov
jmp
jg
or
in
mov
movs
mov
aas
cmps
movs
pop
add
cmp
cmp
xor
add
mov
in
pop
add
test
ret
out
cmp
iret
aaa
xor
mov
sub
mov
xchg
pop
sub
out
scas
pop
cwde
fisttp
jl
xchg
shr
mov
jae
pop
outs
inc
cdq
inc
pushf
loopne
fnstcw
ja
imul
jle
cli
pop
or
xchg
fisubr
cmp
fidiv
mov
ins
lods
clc
popa
into
icebp
fild
sub
push
repnz
cmps
fs
gs
fstp
mov
cmp
iret
inc
add
or
nop
pop
outs
les
or
fsub
xlat
popa
pop
aaa
mov
or
(bad)
fnstsw
cmps
mov
cmps
dec
imul
adc
dec
dec
mov
js
in
aas
out
xor
mov
je
fidiv
adc
pop
out
icebp
pop
movs
push
push
jecxz
iret
cli
in
cli
jp
cmp
and
repz
in
add
in
aas
sbb
out
ins
xlat
mov
daa
sbb
adc
push
or
inc
mov
test
adc
scas
rol
ret
cmps
push
fisub
icebp
lea
add
ret
mov
mov
sbb
shl
gs
rcl
cmps
inc
inc
cwde
and
sub
or
fild
xchg
inc
jle
jne
fnstsw
push
xchg
sti
aaa
mov
sub
sti
popf
mov
push
repz
mov
das
cdq
inc
nop
clc
sbb
xchg
cmp
jnp
mov
(bad)
xor
(bad)
sbb
mov
add
mov
sahf
mov
scas
shl
dec
cmp
scas
inc
push
push
leave
je
inc
mov
cmp
lds
mov
mov
jl
mov
mov
imul
aam
lods
inc
xchg
and
out
mov
cli
data16
std
rcl
and
ins
adc
bnd
jmp
jo
xchg
test
pop
sub
stc
add
adc
repnz
push
push
cmp
add
in
fwait
cmp
mov
push
ret
adc
dec
sub
out
inc
sti
adc
fisub
call
mov
mov
jb
cmp
push
adc
ins
pop
jmp
xor
sbb
out
pusha
inc
dec
(bad)
push
jp
add
(bad)
js
icebp
xchg
iret
add
in
mov
shr
gs
mov
jns
stos
pop
mov
in
mov
sub
shr
shr
xor
ins
inc
xor
and
or
sub
xchg
cmps
cmp
xor
sub
mov
sbb
and
div
(bad)
outs
adc
fcmovnb
cmp
mov
icebp
add
dec
or
adc
add
cli
bound
sub
sbb
sub
mov
jge
jmp
adc
mov
rol
mov
mov
out
out
jmp
mov
jb
ds
jmp
inc
adc
mov
mov
add
adc
arpl
mov
int3
imul
scas
adc
mov
aas
xchg
cdq
imul
ja
outs
pop
fistp
mov
lods
inc
jmp
jnp
or
mov
or
mov
pop
or
inc
mov
neg
repnz
pop
call
repnz
ds
mov
sub
jg
fistp
in
mov
ficom
in
push
nop
shl
sbb
repz
mov
mov
or
or
lods
mov
sti
or
gs
jnp
lods
in
jmp
fistp
sbb
mov
rol
xchg
in
out
(bad)
jb
sbb
sub
sbb
push
adc
xchg
inc
sbb
test
sbb
jle
(bad)
fdiv
inc
addr16
retf
fcmovu
aam
xor
(bad)
cwde
leave
sbb
repnz
into
jnp
aas
jmp
xor
pop
mov
push
outs
mov
sbb
jmp
pop
scas
inc
outs
aad
dec
call
mov
xor
mov
and
int3
mov
cli
int
cmp
bound
lahf
and
out
mov
xchg
ja
lds
cmovge
pop
dec
loope
dec
pop
jb
mov
pop
fisubr
add
jg
cmp
sbb
aad
lods
sbb
rol
shl
dec
pop
sub
dec
nop
pop
stos
repnz
and
scas
ds
mov
and
ins
jne
lds
imul
jle
fisub
xchg
or
mov
pop
in
loope
cmp
cmc
push
xor
push
fbstp
std
adc
scas
les
jge
sti
(bad)
rcl
movs
xchg
and
sub
cmc
jmp
xor
arpl
sbb
call
xlat
movs
xchg
out
lods
mov
daa
xchg
mov
push
jns
inc
inc
xchg
and
cmps
xchg
jnp
call
xchg
daa
lds
arpl
mov
into
sub
xchg
xchg
lahf
in
loope
fcomp
sbb
and
inc
mov
and
add
daa
outs
mov
ror
cmps
lahf
sbb
cmp
jl
pop
sbb
mov
popf
pop
push
pop
leave
xchg
or
push
adc
jg
ror
cli
arpl
into
cs
mov
cmp
cwde
lahf
out
lds
iret
out
sub
pop
les
stc
and
cwde
and
xchg
pop
inc
mov
imul
enter
test
call
pushf
imul
and
mov
or
popa
sbb
mov
push
dec
or
fcomp
ficom
jl
jnp
(bad)
repnz
sahf
dec
adc
mov
fimul
fnstenv
push
sbb
fs
sbb
mov
rcl
dec
repnz
xor
out
arpl
xchg
scas
js
into
mov
sub
out
mov
and
lahf
dec
inc
mov
and
das
xchg
cmp
mov
xor
or
adc
mov
adc
(bad)
mov
inc
cmp
neg
sbb
out
pop
in
rcl
icebp
ja
and
popa
push
loope
cmp
add
or
cmps
ins
aad
mov
pop
mov
sub
push
pop
imul
out
cwde
xchg
dec
pop
stos
push
push
xlat
inc
cmp
sbb
dec
cmp
lock
sar
loopne
idiv
xor
fnstenv
mov
idiv
cmp
movs
sbb
das
pop
test
cs
mov
mov
adc
sbb
test
out
fdivr
add
adc
je
(bad)
jmp
lds
push
test
jl
cmp
sbb
push
shl
fidiv
fdiv
adc
sbb
inc
imul
in
mov
sub
aaa
stos
adc
or
mov
fisubr
js
fs
sti
mov
push
bound
adc
pop
cdq
cli
bound
hlt
add
retf
cmps
sti
in
mov
add
(bad)
jb
sub
sti
dec
imul
jmp
jge
call
adc
and
arpl
les
xor
xor
jle
pop
pop
inc
loopne
gs
or
and
mov
add
call
lahf
idiv
push
jmp
adc
sub
retf
mov
je
push
leave
add
push
inc
mov
and
enter
jbe
xor
test
or
(bad)
outs
ror
aad
push
pop
jb
cli
aam
retf
out
fdivr
dec
loop
scas
xchg
arpl
push
adc
xchg
ins
push
ret
push
and
inc
pop
cdq
fs
ins
or
xchg
inc
imul
stos
inc
cwde
and
cdq
and
push
sub
rol
(bad)
retf
retf
pushf
pop
test
inc
and
jl
cmp
icebp
loope
push
sub
xchg
pushf
(bad)
ret
inc
mov
jnp
data16
pop
in
inc
xor
cmps
cmp
mov
nop
jmp
fwait
cmp
xchg
mov
dec
cld
jo
(bad)
cdq
out
xor
rcr
lods
adc
mov
les
daa
cli
jmp
loope
sub
pusha
cmc
stc
inc
cmp
cmp
mov
push
cwde
bound
push
cli
mov
push
fst
(bad)
test
pusha
aad
lds
in
add
shl
es
bound
jbe
mov
push
push
cs
sbb
push
xor
mov
(bad)
or
or
(bad)
xchg
mov
out
xor
faddp
inc
sar
jp
pop
adc
inc
xor
test
xchg
push
mov
loope
pop
test
test
inc
or
dec
sbb
dec
jge
mov
cs
repz
fisttp
test
sbb
shl
test
cmc
fiadd
sbb
mov
jle
xchg
std
cmp
lea
popf
in
dec
mov
push
sti
daa
je
mov
dec
imul
mov
xor
enter
adc
(bad)
shl
ins
jo
mov
leave
sub
mov
in
cdq
dec
jbe
adc
cmp
dec
shl
daa
push
xchg
dec
stos
or
adc
inc
rcl
lahf
and
add
mov
cmp
xchg
mov
cmps
sub
push
cmp
mov
pushf
scas
gs
lahf
push
jmp
repnz
movs
push
das
(bad)
xchg
jmp
test
adc
js
int
pop
mov
sbb
shl
stos
push
daa
test
mov
inc
dec
cmp
cmc
xchg
sub
es
xchg
mov
pop
rol
pop
shl
lahf
dec
push
les
mov
mov
xor
in
les
fcomp
xor
xor
and
inc
jge
aaa
pop
xor
mov
in
movs
rcr
sbb
int3
mov
xchg
jb
mov
add
movs
mov
mov
mov
retf
and
mov
jecxz
push
in
cmc
cdq
out
into
loop
add
and
sbb
add
or
push
jbe
fwait
outs
or
call
jg
std
push
jg
adc
sbb
pop
push
or
addr16
cdq
aas
scas
push
je
push
pop
xchg
daa
cmp
in
and
pop
les
jb
inc
sti
mov
leave
and
mov
mov
inc
dec
cmp
test
dec
pop
inc
mov
xlat
dec
neg
jo
cmc
loopne
(bad)
sbb
inc
sbb
out
adc
call
fdivr
repnz
iret
ret
pushf
aaa
scas
push
aad
pop
(bad)
in
xor
jae
(bad)
cwde
add
retf
stc
addr16
xor
add
leave
jne
dec
icebp
jge
mov
aas
jge
ret
xchg
sub
bound
rcr
and
icebp
dec
mov
push
sub
or
je
jge
dec
repnz
leave
mov
and
cmp
(bad)
cld
fst
jecxz
(bad)
outs
int
mov
cmp
(bad)
(bad)
or
mov
sub
jbe
push
sub
cmp
clc
add
cmp
xchg
rcr
es
add
test
adc
iret
popf
or
xchg
popf
cmp
sbb
xor
aas
push
pop
mov
mov
ror
dec
bnd
std
icebp
int
mov
pop
int
lahf
sub
int3
test
scas
mov
jo
xor
popf
mov
xchg
push
pop
fdiv
mov
mov
movs
sub
mov
push
mov
mov
mov
or
imul
rol
jmp
xor
iret
mov
jle
fist
mov
xchg
bound
add
fist
jae
adc
xor
in
ja
(bad)
repz
mov
mov
or
and
dec
int3
cs
push
sub
cs
test
push
fisubr
leave
enter
jl
cwde
sub
imul
ret
in
xchg
repz
xchg
fcomp
ret
cmp
push
int
xchg
add
jmp
pop
cmps
pop
cmps
lds
push
fdiv
jmp
mov
(bad)
addr16
jno
rcl
cmp
scas
pop
and
lods
pop
pop
icebp
or
pop
jo
adc
xor
test
imul
out
out
mov
pop
mov
retf
pop
cdq
and
pop
rol
nop
push
loope
mov
loopne
pop
std
inc
(bad)
std
out
lds
cmps
dec
xor
repz
aad
jl
pushf
mov
popf
push
pop
jbe
mov
adc
aas
add
push
push
push
jmp
fisubr
daa
jmp
mov
inc
repz
aam
cmps
inc
fdivp
loop
fst
pusha
inc
xchg
aaa
dec
dec
test
mov
test
sub
(bad)
out
(bad)
sub
sub
std
scas
loopne
inc
mov
pop
xor
in
icebp
fs
adc
inc
xchg
sbb
aam
push
jge
pop
out
and
jmp
ret
cmps
test
inc
(bad)
dec
dec
shl
lea
adc
jge
dec
sbb
sbb
jae
inc
sub
(bad)
mov
lods
adc
and
jle
repnz
adc
dec
loope
rcr
xor
push
adc
les
in
add
inc
or
mov
inc
jl
xor
mov
mov
dec
int3
mov
mov
push
push
fdivr
in
retf
test
pop
or
in
mov
pop
cli
aam
mov
stc
mov
nop
jno
cmp
add
adc
jae
sbb
pushf
xchg
xchg
xchg
or
add
test
repnz
pop
out
sbb
xchg
cmp
pop
push
mov
jmp
retf
mov
xchg
in
add
cdq
in
jbe
fadd
js
jge
mov
(bad)
in
pop
push
adc
rcl
xchg
jle
sub
sub
ins
push
std
push
push
xchg
dec
adc
cli
sub
jo
ret
jp
pop
add
fdivr
add
popa
sub
rol
popa
or
sbb
test
mov
sbb
or
enter
cmp
stc
xlat
aam
mov
adc
or
mov
ja
pop
xor
xor
xchg
sub
xchg
enter
xor
inc
std
add
push
xchg
or
adc
sub
add
adc
data16
adc
xchg
jmp
stos
sti
js
mov
les
lods
push
popf
adc
and
test
dec
rcr
mov
ret
inc
add
sub
xchg
jb
lods
arpl
sar
mov
xchg
xlat
aam
lock
sub
inc
movs
push
out
mov
in
adc
ret
pop
movs
cwde
std
xor
mov
and
pop
sub
stos
out
movs
cwde
mov
cmps
sbb
sbb
and
aas
mov
inc
push
mov
movs
movs
mov
push
or
call
jge
jae
in
mov
jmp
mov
sar
outs
xor
mov
(bad)
or
push
pop
rol
cli
call
enter
mov
sub
gs
aam
mov
retf
or
push
pop
test
inc
xor
xchg
mulps
lods
aad
lods
cmp
fist
add
dec
enter
je
outs
adc
xchg
and
imul
push
sub
xor
sbb
or
retf
and
push
jns
aaa
cmp
mov
int3
pop
jmp
push
or
jg
ror
gs
dec
iret
jmp
push
iret
ret
mov
pop
out
adc
fsub
ret
push
dec
or
pop
and
mov
(bad)
fidiv
xchg
retf
loopne
js
cmp
and
push
jecxz
mov
jnp
loopne
xchg
jl
cld
(bad)
mov
aaa
dec
ror
icebp
loope
cmp
out
pop
and
sub
sbb
pop
call
loope
ins
movs
add
sbb
(bad)
mov
pop
scas
mov
xlat
(bad)
rcr
xor
mov
mul
cs
dec
rcl
pop
mov
cmp
mov
ds
in
dec
imul
xlat
xor
mov
(bad)
add
xor
push
sbb
stos
(bad)
sahf
dec
aas
adc
xchg
push
popf
adc
ret
mov
cmp
xchg
xor
cs
pushf
daa
push
push
pop
sub
cmps
popf
pop
mov
sbb
imul
std
in
cmp
cmp
ds
in
mov
fadd
mov
pop
jb
mov
mov
mov
sub
scas
push
mov
pop
cli
aam
hlt
mov
inc
xor
sbb
in
pushf
rcr
sti
xchg
add
xchg
icebp
dec
jo
outs
push
pop
cmps
push
imul
fwait
dec
adc
leave
dec
aad
and
pop
into
lea
aad
fild
daa
adc
mov
push
(bad)
or
dec
hlt
lods
rcr
adc
imul
adc
or
aaa
imul
ds
push
or
jbe
xchg
aad
(bad)
not
mov
pop
push
fwait
ss
mov
jo
jg
sub
in
pop
adc
inc
lods
aam
ret
cmp
xlat
xchg
ins
mov
sub
mov
mov
retf
dec
mov
out
pop
pop
pusha
pushf
inc
lock
shr
or
jnp
loop
daa
sar
shl
inc
mulps
pop
hlt
retf
test
out
call
test
loope
popf
fcomp
das
push
dec
scas
xchg
dec
sbb
scas
xor
aam
sub
cmp
push
pop
or
mov
ficomp
fcomp
loopne
ds
div
sbb
cmp
jecxz
rol
inc
clc
add
xor
rcr
or
es
jp
or
adc
jp
js
cmps
ret
nop
popf
sub
xor
pop
adc
and
rcl
aad
jbe
dec
push
aam
rol
adc
xor
push
test
cmps
retf
lods
cs
cmp
dec
push
mov
mov
lock
fnstenv
jmp
stos
enter
jg
call
sub
popf
add
shr
ja
aad
mov
call
gs
cmp
xchg
mov
aam
pop
mov
pop
sbb
out
out
inc
xchg
sub
xor
mov
inc
call
mov
adc
popa
push
mov
push
sub
mov
xor
rcr
inc
jge
inc
std
js
outs
fwait
inc
icebp
mov
push
fs
inc
scas
cli
shl
xchg
adc
fld
mov
jle
sbb
popa
dec
lock
in
lods
pop
or
mov
cld
xor
into
add
int3
or
xor
sar
mov
jecxz
cmp
push
jo
adc
inc
mov
and
xchg
jnp
sti
test
dec
arpl
call
fmul
cmp
into
jmp
sbb
dec
mov
mov
clc
mov
mov
inc
pop
cdq
loop
shr
inc
lea
mov
ss
int3
sub
cdq
push
jmp
push
cmp
and
xchg
lds
imul
jne
js
xor
jg
xchg
cmps
mov
je
scas
(bad)
xchg
add
sbb
pop
in
add
mov
js
and
adc
push
data16
xor
fwait
adc
adc
mov
aad
mov
pop
mov
pop
push
or
lds
inc
fmulp
pop
mov
bound
inc
call
jg
fmul
(bad)
dec
mov
mov
fwait
cs
dec
sahf
push
lock
aad
adc
loopne
fst
nop
xor
movs
sti
pop
pop
test
ins
lea
rcr
js
xor
mov
gs
aaa
cmp
inc
ret
xor
cmp
daa
fdivr
jl
push
sbb
mov
push
xchg
int
sti
mov
push
xor
je
out
(bad)
outs
add
in
push
scas
daa
lock
ins
add
jmp
push
add
xchg
inc
ds
je
fidivr
mov
mov
sbb
fdiv
sar
rol
cdq
pop
xor
loopne
ins
fsubr
into
(bad)
iret
or
mov
mov
sar
pop
mov
lock
fsubr
dec
shl
cli
jmp
push
adc
sbb
pop
sbb
mov
jne
into
outs
sub
cmps
inc
jnp
jp
pop
sub
jecxz
fnstenv
cmp
sti
repz
pop
pop
push
mov
cmp
dec
push
dec
(bad)
jl
xor
into
sbb
jmp
popa
mov
idiv
pop
in
xor
out
xchg
mov
sub
mov
sub
pop
push
ret
jo
scas
mov
outs
pusha
fs
adc
jecxz
aaa
into
(bad)
es
mov
sar
rcl
js
mov
jno
dec
mov
(bad)
clc
mov
push
xlat
add
dec
cmp
imul
test
(bad)
dec
mov
ja
out
pop
clc
push
test
fld
mov
push
jge
and
bound
mov
mov
xor
adc
xchg
pop
dec
(bad)
push
pop
sub
int
jns
jo
dec
jg
add
sub
mov
pop
pop
mov
dec
lahf
sub
xor
and
ins
sbb
jp
test
adc
mov
mov
popa
dec
adc
cmp
jge
or
or
mov
lea
hlt
shl
(bad)
mov
(bad)
(bad)
js
popf
push
clc
aad
sbb
fild
mov
sti
xchg
xor
dec
push
lea
cwde
adc
pop
repnz
retf
iret
jmp
frstor
inc
sbb
enter
pop
arpl
or
sbb
sbb
jp
icebp
sbb
jbe
sbb
and
mov
mov
adc
fimul
or
(bad)
addr16
pop
sti
dec
clc
or
mov
xor
call
addr16
ins
push
pop
mov
cmps
mov
mov
retf
adc
lods
push
sbb
ret
xchg
inc
iret
xchg
mov
enter
dec
push
ja
xlat
mov
mov
in
xchg
lea
jae
outs
sbb
cmp
xchg
retf
aad
sub
push
push
pop
sub
mov
lahf
imul
dec
movs
xchg
enter
xchg
sub
ins
sbb
mov
lock
test
rcr
sub
cmp
stc
jmp
inc
mov
push
jecxz
jae
sbb
ss
jecxz
test
jo
pop
fs
or
pop
push
out
and
shl
adc
call
jmp
mov
test
inc
pop
outs
stos
add
and
in
push
mov
inc
js
dec
push
or
psrlw
jno
or
cld
and
or
cs
xchg
(bad)
push
adc
xor
xor
jmp
dec
or
inc
xlat
sahf
cmp
hlt
push
push
retf
stc
int
out
pop
push
cmps
pop
out
or
adc
sub
es
cmps
push
aam
arpl
add
mov
and
add
adc
mov
and
jmp
jl
ficomp
jg
pop
jbe
scas
test
sub
movs
or
in
pop
add
outs
(bad)
cdq
scas
pop
cmc
add
fld1
cmp
test
mov
jnp
inc
popf
push
test
mov
mov
cli
(bad)
mov
add
xor
sbb
add
in
jl
adc
das
pop
aam
loop
pop
lea
int3
dec
test
ror
loopne
mov
call
fimul
pop
pop
pop
enter
inc
dec
sahf
xor
sbb
fisub
dec
cmp
shl
jb
test
sub
push
push
fucom
inc
cmp
mov
mov
imul
iret
jne
adc
aam
cmc
js
xor
fnsave
retf
call
jle
std
(bad)
mov
pop
mov
cs
add
mov
popa
push
adc
add
ds
xlat
cmp
shr
and
fidiv
cdq
push
test
push
mov
mov
mov
fdiv
jmp
xchg
scas
push
imul
or
jmp
pop
jl
mov
mov
cmp
mov
adc
test
jmp
xchg
int3
test
les
rcl
lods
invd
mov
in
sub
dec
out
ret
jcxz
pop
sub
pop
sub
icebp
out
mov
pop
jl
scas
mov
cmps
ds
in
and
call
scas
jno
rcr
push
ret
in
mov
hlt
add
add
shl
loope
xor
repnz
out
test
sub
mov
cmp
dec
jae
adc
mov
push
(bad)
cmp
adc
std
ror
lea
push
jno
push
ret
jl
or
hlt
mov
in
out
cwde
jmp
fisubr
xor
fistp
jo
(bad)
xor
xlat
cmp
cmp
es
loop
xchg
popf
push
adc
(bad)
dec
popf
movs
and
pop
pop
lds
push
out
ror
mov
xor
mov
jg
out
aas
das
jae
sub
ficomp
sbb
jae
in
inc
shl
jo
das
push
(bad)
aas
cmps
inc
fiadd
stc
add
lahf
mov
mov
(bad)
adc
test
inc
cmp
xor
daa
add
hlt
out
mov
jmp
repz
mov
lods
retf
repnz
dec
mov
mov
loopne
pop
fist
fnsave
cmps
shl
stos
sahf
jg
push
dec
mov
jmp
or
push
test
adc
in
arpl
js
jge
add
retf
ins
sub
push
leave
ret
xchg
xlat
ins
inc
push
call
in
jo
dec
mov
jb
and
mov
push
aaa
retf
sbb
pop
xor
and
or
fidivr
jg
push
and
hlt
jle
(bad)
sbb
pop
push
push
ss
adc
xchg
lea
iret
mov
add
add
push
sub
mov
xchg
lods
popa
jmp
pusha
add
in
ins
test
push
push
and
sahf
aad
inc
push
ficom
ins
mov
push
std
aaa
pop
mov
loop
sub
pop
jmp
out
daa
jnp
call
std
pop
adc
icebp
stos
or
mov
pop
xor
scas
and
adc
xchg
add
(bad)
retf
sbb
or
xor
mov
mul
mov
rcr
mov
push
leave
or
push
scas
js
push
dec
retf
adc
inc
gs
xchg
cwde
jmp
dec
lahf
jbe
xchg
jb
pop
sahf
in
retf
inc
das
sti
div
cwde
pop
(bad)
imul
out
(bad)
sbb
push
movs
mov
push
stos
aad
(bad)
xor
lahf
push
add
enter
outs
cli
add
imul
xor
nop
sub
mov
sub
jbe
call
mov
jg
inc
repnz
test
xchg
scas
or
cmp
(bad)
push
fucomi
adc
xchg
push
inc
pusha
icebp
fcomp
(bad)
(bad)
es
ins
pop
sahf
hlt
xor
in
icebp
jg
test
add
(bad)
xchg
cmp
xchg
aaa
sub
cmp
inc
out
aam
cmp
dec
fimul
nop
cmp
sahf
sbb
nop
jge
fs
loope
shr
xor
mov
xchg
in
(bad)
xor
add
(bad)
jns
jae
cli
xchg
mov
out
push
pop
icebp
pop
jmp
sub
mov
dec
or
cwde
adc
push
repz
dec
stc
int3
(bad)
popf
lea
enter
fcom
dec
sbb
stc
rol
sub
mov
jg
mov
add
loopne
adc
fucomp
adc
std
sbb
dec
push
or
dec
push
cmps
imul
xchg
jo
mov
or
dec
cmp
daa
or
cmc
mov
add
ja
jmp
xchg
jp
xchg
jnp
add
sub
inc
mov
or
imul
cmc
and
imul
push
push
test
stos
ret
imul
push
cmps
imul
cmp
xor
cmp
out
scas
jne
jno
mov
cmp
movs
inc
shl
fsubr
in
mov
lods
push
repnz
add
pop
xlat
xlat
or
ins
(bad)
jns
dec
in
and
(bad)
pop
xlat
aaa
mov
cmp
bound
fisttp
pusha
pop
jae
jno
mov
shl
and
fimul
mov
std
cs
xor
jb
loope
or
sar
push
jne
sbb
out
std
sub
xchg
add
retf
push
sti
test
adc
js
das
mov
pop
mov
mov
idiv
loopne
leave
jns
repz
stc
scas
daa
fimul
arpl
mov
jmp
mov
in
add
js
out
xchg
cmp
jge
push
and
and
xchg
(bad)
in
xchg
aad
inc
(bad)
scas
ins
addr16
push
push
push
mov
jmp
inc
inc
cmp
(bad)
adc
in
and
pop
movs
jo
rcl
xchg
mov
xchg
int3
push
aad
fwait
inc
cli
icebp
call
loopne
mov
mov
or
shr
sbb
shr
cmp
mov
cwde
call
lods
pop
aam
inc
aam
cmps
jmp
cmp
mov
push
mov
adc
out
push
push
cld
out
inc
xor
pop
and
add
jg
mov
pop
push
inc
jmp
repnz
cld
jmp
iret
pop
sbb
ins
dec
push
mov
gs
jnp
jecxz
xchg
mov
aad
jb
shr
dec
or
mov
pop
mov
call
out
adc
adc
sar
adc
mov
out
repz
imul
mov
push
mov
inc
cmp
jb
jnp
scas
mov
jae
push
and
mov
xchg
out
mov
lods
inc
adc
loope
cmps
push
jp
sbb
cwde
push
pop
mov
jg
mov
cmps
(bad)
mov
lods
in
dec
add
jns
inc
scas
and
in
mov
(bad)
jecxz
mov
sbb
rol
stc
repz
ret
ja
clc
or
sbb
loop
cld
xor
jae
lods
sub
xchg
sub
and
fs
fist
mov
add
pushf
sar
inc
xor
enter
xchg
je
rol
mov
lds
stc
dec
adc
jmp
xor
in
outs
cdq
jge
xchg
fcomp
pop
xchg
sub
xor
xchg
push
out
xor
push
pop
shl
sub
pop
addr16
jp
adc
dec
arpl
jno
cld
jo
jo
in
rcl
pop
or
repnz
sbb
das
movs
lahf
in
repz
xchg
mov
(bad)
imul
lea
jg
add
dec
inc
sub
mov
jno
xor
xchg
ins
or
stos
or
adc
and
and
push
lahf
sub
std
fisttp
pop
dec
sti
push
push
cmp
inc
pop
or
jo
pop
dec
data16
ins
xor
dec
retf
retf
fwait
aas
std
test
xchg
push
out
test
jp
xchg
sbb
dec
in
xchg
jp
jno
test
add
imul
dec
lock
shr
and
sub
pop
jecxz
idiv
dec
and
div
jle
adc
jge
cmp
icebp
jecxz
popf
ds
and
call
inc
adc
sbb
mov
xchg
xor
and
cmp
jmp
mov
mov
out
adc
pop
cld
vcvtps2pd
xor
push
nop
enter
adc
jno
dec
fnstcw
adc
jbe
in
pop
pop
iret
popf
push
test
add
xchg
js
fsub
mov
mov
push
and
pop
test
arpl
aaa
cmps
fld
stos
ds
pop
mov
lds
dec
xchg
mov
jl
adc
sbb
sub
fst
or
add
scas
icebp
aaa
mov
pushf
add
mov
xchg
lods
outs
sbb
mov
mov
xor
fcmovbe
add
shl
xor
fnstcw
fimul
mov
call
adc
daa
or
outs
or
pop
mov
lahf
cwde
(bad)
jl
(bad)
fldenv
icebp
jge
ins
pop
outs
or
hlt
mov
in
loop
mov
mov
mov
loop
mov
push
mov
mov
pop
inc
rcr
xor
mov
movs
pop
das
xchg
cmps
dec
test
lahf
pop
jno
jl
arpl
sbb
inc
mov
(bad)
jle
jge
sub
pop
loop
inc
(bad)
int
mov
dec
jge
jge
sub
clc
nop
pop
jle
xor
sbb
lahf
cdq
cmp
pop
nop
add
ins
(bad)
adc
pop
dec
sbb
add
rcl
mov
sub
sub
pop
sub
mov
xchg
jmp
retf
mov
sbb
or
and
das
clc
mov
test
jecxz
jns
je
lods
inc
mov
retf
xlat
rcr
ss
bound
dec
add
pop
ret
out
push
scas
cmps
out
inc
in
xcrypt-ecb
cmps
push
aad
push
aas
jns
retf
xlat
push
cmps
push
outs
imul
mov
cmp
dec
xor
xchg
iret
call
(bad)
pushf
jg
(bad)
cmp
rcr
pop
mov
xor
aaa
loopne
push
pop
rcr
rcr
lds
shl
fmul
and
ins
adc
fwait
inc
cs
(bad)
jl
retf
add
push
push
jo
js
icebp
mov
inc
or
cli
xchg
xchg
pop
arpl
pop
movs
mov
add
std
sar
stos
mov
add
movs
cmp
mov
and
jle
xor
jmp
pop
ja
jne
jns
pop
inc
lds
sub
and
sbb
cmp
mov
sbb
int
xlat
out
xor
sbb
stos
mov
out
push
bound
xchg
and
dec
pop
cli
mov
in
adc
dec
sbb
stos
ja
mov
mov
xchg
fldcw
push
ins
xor
outs
jbe
dec
rcr
mov
sub
jne
lods
cmp
and
sbb
in
jb
or
mov
mov
hlt
es
mov
jnp
dec
xchg
popa
dec
lea
sub
fnsave
pushf
mov
ret
adc
lea
test
(bad)
or
xlat
out
ret
cmp
dec
cwde
outs
push
adc
xchg
xor
lock
lds
pop
or
into
dec
out
dec
leave
cli
mov
call
mov
aaa
scas
ins
pop
daa
ret
pop
inc
loope
ins
jns
fdivr
add
data16
ficomp
cmp
arpl
dec
dec
daa
xchg
fs
mov
jecxz
and
nop
cmp
push
and
push
xor
xor
mov
mov
sti
stc
arpl
sbb
aas
test
mov
rcr
sub
inc
cmp
aad
sbb
dec
inc
xor
xor
or
push
clc
mov
imul
sbb
add
out
jle
shl
rol
sbb
movs
mov
icebp
shl
adc
push
add
adc
ins
out
or
sti
jo
add
lods
sub
xor
fild
mov
enter
add
xchg
and
push
ficom
sub
or
xor
les
repz
pop
pop
pop
je
inc
daa
sbb
shl
add
test
outs
in
shr
push
sbb
mov
leave
retf
inc
popa
cwde
scas
pushf
fucomi
loope
adc
mov
dec
push
jns
inc
jbe
push
pop
ins
lods
pop
sbb
ja
lods
ror
dec
xchg
mov
mov
dec
hlt
or
mov
pop
fwait
jne
xor
aad
cmp
or
out
mov
pop
retf
adc
test
lock
cld
pop
mov
xchg
cmp
sub
or
ins
dec
or
cmps
add
repnz
je
fcomi
out
push
push
jns
ins
mov
imul
pop
pop
call
int
aaa
loope
mov
sub
jmp
mov
sbb
push
hlt
lahf
clc
enter
out
sbb
push
or
adc
ins
mov
mov
leave
sub
fimul
dec
in
xlat
test
xchg
adc
test
inc
in
retf
lods
mov
sbb
stos
outs
xor
iret
xlat
stc
cmp
(bad)
dec
pop
mov
pop
mov
sbb
neg
push
daa
or
in
pop
lahf
jns
and
(bad)
adc
cmps
mov
call
popf
es
mov
mov
inc
sbb
jns
popf
div
aam
int
adc
fmulp
neg
out
hlt
jae
cmps
mov
mov
popf
push
ficom
xor
xchg
push
inc
push
add
mov
stos
xchg
dec
jo
add
push
dec
div
test
cmp
xor
xchg
or
mov
iret
jo
push
cmp
mov
dec
xchg
(bad)
or
ret
and
mov
test
ins
(bad)
into
add
les
sbb
xor
xchg
push
sti
add
repnz
mov
mov
sub
add
(bad)
fdiv
in
add
test
mov
dec
jg
icebp
cmp
jle
dec
lock
jecxz
nop
jb
jae
mov
cwde
jb
ds
lahf
cmp
outs
inc
mov
fbstp
jmp
test
or
xorps
inc
test
mov
arpl
cmp
lock
in
rcr
mov
sahf
and
adc
adc
ficomp
das
pop
xor
xor
ja
mov
sbb
mov
jae
adc
shr
imul
scas
gs
stc
int
daa
inc
icebp
lds
out
or
sbb
das
repz
sub
scas
js
in
scas
pushf
into
sahf
cwde
push
mov
cli
fidiv
mov
xchg
fs
sbb
inc
dec
test
les
mov
int3
daa
imul
daa
inc
pop
adc
aad
adc
retf
xchg
sbb
push
pop
inc
retf
jle
pop
jle
sbb
xchg
(bad)
jecxz
push
mov
mov
cwde
pushf
sub
xchg
inc
rcl
(bad)
ins
in
or
push
jge
iret
mov
jo
jle
in
xchg
add
cwde
aam
loopne
sbb
push
pop
adc
in
or
jmp
inc
into
fldcw
dec
mov
pop
xchg
push
xchg
test
pop
pop
lds
inc
xor
sbb
inc
or
mov
jne
xchg
ins
mov
or
std
cmps
hlt
icebp
lods
out
sbb
jg
adc
int3
(bad)
pusha
faddp
fwait
imul
ins
out
push
adc
jo
jb
mov
jmp
sti
mov
jl
ror
xor
sbb
mov
mov
pop
ja
pop
xor
enter
dec
pushf
mov
fsubr
pushf
out
xlat
ja
nop
mov
inc
sbb
retf
lahf
(bad)
fs
pop
popa
jno
push
xor
and
fs
jp
push
inc
test
and
out
retf
sbb
or
outs
clc
cwde
pop
mov
sub
test
enter
(bad)
je
or
inc
or
int
sub
cmp
in
iret
sbb
test
cs
aaa
loope
sbb
fdivr
cmp
cs
adc
shl
out
xor
mov
cmc
push
adc
jne
aas
iret
pop
push
and
pop
mov
aad
cmp
arpl
imul
out
pop
cwde
cmps
cmp
sub
jmp
out
or
jl
dec
dec
call
xchg
imul
mov
gs
stos
mov
addr16
loopne
mov
retw
jns
or
adc
jns
inc
enter
or
je
xor
add
mov
push
jmp
pop
or
or
jmp
leave
inc
cmps
outs
add
jbe
xor
push
push
mov
and
mov
inc
push
test
cmps
dec
inc
mov
cmp
xchg
adc
lock
add
icebp
rcr
jg
imul
aam
mov
pop
adc
and
push
daa
retf
jle
add
xchg
scas
jae
dec
(bad)
stc
mov
(bad)
ror
pop
mov
mov
mov
dec
push
retf
or
mov
sbb
push
repnz
jo
out
gs
push
scas
xlat
movs
cmp
aad
fmul
mov
add
bound
xchg
dec
pop
std
cdq
(bad)
fdivr
iret
inc
lods
jb
int
mov
mov
icebp
stos
pusha
inc
mov
sbb
inc
xor
jmp
sbb
loope
call
mov
mov
pushf
xor
mov
mov
pop
inc
dec
cmp
inc
xor
imul
lods
nop
adc
int3
clc
imul
in
ins
fstp
out
or
out
mov
sbb
int
dec
aam
int
add
or
shl
jmp
mov
nop
sub
fwait
mov
adc
mov
mov
xor
(bad)
add
xchg
xor
and
xor
sbb
add
jecxz
dec
cmp
xor
pop
inc
jmp
fs
movs
sbb
not
inc
pop
retf
mov
ins
lahf
fisub
dec
mov
ss
in
outs
test
leave
and
aam
stc
ja
popa
mov
xchg
pop
(bad)
shl
mov
push
and
clc
data16
test
mov
or
ins
fs
mov
int
icebp
int3
add
enter
adc
jno
push
fwait
xchg
push
aad
mov
daa
sub
arpl
dec
data16
jg
mov
fdivr
(bad)
push
cmp
mov
or
push
lahf
das
lea
fwait
cmp
dec
or
lea
mov
xor
test
int
repnz
in
inc
das
inc
push
gs
in
sahf
mul
sar
jp
mov
add
xor
in
out
rol
out
inc
add
sbb
pop
leave
or
into
ins
xor
in
adc
ss
(bad)
ds
jmp
pop
repnz
mov
inc
aaa
retf
(bad)
je
dec
push
(bad)
xor
lods
or
imul
repnz
enter
mov
jb
pop
sub
push
leave
push
and
adc
dec
(bad)
jge
dec
sbb
ins
cmp
xor
jb
sbb
or
neg
cmc
into
fimul
pop
ret
add
pop
sub
fcom
sub
sbb
sti
mov
add
mov
xor
cs
fs
call
dec
push
jl
push
ror
test
or
inc
outs
lahf
cld
mov
pop
movs
cmp
ret
bound
inc
(bad)
push
xchg
sti
in
shl
enter
xchg
mov
test
adc
ds
sub
scas
add
xor
call
dec
sub
push
cdq
int
shr
dec
pop
add
movs
jmp
inc
sub
test
std
fst
test
pop
mov
inc
jecxz
mov
adc
cmc
dec
pop
xchg
mov
push
push
mov
push
neg
and
call
int
inc
ficom
inc
and
(bad)
mov
xchg
or
popa
dec
lods
ins
sub
std
push
cwde
pop
cld
out
out
addr16
push
xor
das
jae
ja
sub
pushf
adc
and
ficomp
push
xor
retf
sbb
iret
cdq
xor
cmp
ret
jbe
xor
xor
inc
sub
jmp
shl
jg
adc
mov
fadd
inc
in
out
cwde
mov
movs
sub
mov
bound
scas
pop
cwde
pop
setns
jp
cmp
mov
lods
popf
sbb
dec
cmps
adc
addr16
sbb
jnp
call
or
sub
and
pop
arpl
cmp
cdq
repz
sbb
mov
sbb
dec
cwde
aas
ror
xchg
jns
test
cwde
dec
xchg
shl
ror
imul
shl
nop
pop
iret
sbb
inc
xchg
lods
pop
rol
fadd
fwait
lock
movs
xchg
stc
dec
ins
pop
mov
jae
lods
xor
fnstcw
aaa
cmp
cmps
test
adc
or
adc
dec
mov
jle
int
sub
dec
push
mov
icebp
jmp
sub
cmp
cmp
int
jg
out
mov
xchg
addr16
ficom
out
cwde
lods
or
in
or
cmp
add
icebp
and
pop
iret
cmp
addr16
test
cmp
mov
pop
and
lahf
adc
adc
xchg
(bad)
loope
mov
in
lock
pop
or
fsub
adc
mov
or
cmp
xchg
xor
scas
fnstcw
enter
pop
fs
daa
scas
shl
inc
mov
inc
inc
imul
mov
push
lea
cs
sub
stc
icebp
add
loope
adc
xchg
je
inc
push
jnp
iret
mov
fist
fcom
ins
ret
arpl
les
jp
and
call
scas
arpl
jg
pop
mov
add
mov
jmp
lahf
xor
(bad)
stc
jge
dec
cmp
mov
pop
mov
data16
lahf
std
test
cdq
push
mov
jecxz
push
pushf
adc
stos
sti
test
sub
dec
or
ss
adc
aam
pop
mov
loope
xor
xlat
shl
fwait
enter
aas
push
xor
repnz
clc
xor
outs
stos
repnz
pop
int
adc
cdq
xor
ins
push
mov
loopne
inc
out
je
retf
dec
jnp
and
fwait
mov
leave
mov
or
pop
out
mov
lods
and
fnstenv
out
fwait
push
outs
push
sub
adc
lods
out
out
in
mov
(bad)
xor
mov
pop
aad
(bad)
push
jp
jo
movs
cmp
sbb
xchg
sbb
loop
pop
fs
mov
push
xchg
mov
jecxz
sbb
lock
push
fcom
dec
pop
into
out
cmc
lods
mov
mov
js
cmps
inc
xor
call
loope
mov
jb
iret
inc
xor
mov
jae
mov
xor
shr
or
push
stc
out
aam
lods
mov
call
jmp
enter
shl
mov
repnz
rcl
cmp
sub
retf
std
pop
add
pop
xchg
les
xlat
push
inc
push
mov
movs
sub
cs
imul
mov
mov
and
mov
push
out
push
dec
adc
inc
pusha
lods
(bad)
daa
out
cmp
mov
inc
sahf
adc
retf
adc
pop
sub
add
std
sub
out
mov
iret
xchg
cmp
jp
gs
jne
(bad)
push
jnp
cmps
shr
dec
sbb
mov
and
xchg
jl
scas
mov
adc
mov
jo
cmp
xor
pop
popa
fsub
xor
dec
jno
cmc
inc
pop
push
jmp
jmp
cmp
call
aad
je
push
cmps
dec
add
lods
jmp
jmp
nop
arpl
enter
shr
jp
and
mov
cmp
inc
xchg
and
movs
(bad)
mov
retf
cmps
dec
sbb
add
in
pop
fnstsw
hlt
clc
and
popa
cmps
in
outs
and
(bad)
jns
cmp
inc
lods
jno
pop
stc
rcr
xchg
jl
mov
icebp
or
fbstp
lahf
jl
xor
inc
arpl
add
popa
pusha
dec
jle
addr16
xor
jecxz
int
ins
mov
pop
cmp
rol
repz
xchg
int3
rol
push
jbe
dec
xor
test
loopne
jo
std
test
out
cmp
popf
inc
aam
jns
pop
pop
cmp
pop
mov
jmp
sub
out
js
enter
cmps
jne
out
pop
out
popf
outs
add
mov
mov
daa
dec
out
push
(bad)
jle
pop
dec
pushf
loop
in
ss
pop
scas
cli
push
sbb
bound
jnp
or
inc
scas
inc
les
ss
and
mov
xchg
mov
jbe
cmp
cmps
mov
xor
call
add
mov
ins
jl
push
mov
xlat
and
test
xor
mov
xor
xor
mov
inc
mov
sub
popf
ret
or
dec
pusha
xlat
addr16
push
jns
pop
sti
pusha
xor
add
add
sahf
dec
repnz
xor
mov
ret
mov
dec
fstp
sbb
iret
jb
fisubr
ret
nop
mov
repnz
add
jmp
pop
jmp
jnp
add
pop
arpl
adc
idiv
stc
lods
mov
adc
ja
out
jne
or
and
sbb
fwait
in
xchg
cmp
in
pop
dec
push
jno
inc
mov
cs
sub
or
mov
xchg
dec
xchg
cmp
dec
jno
cs
and
push
jmp
and
cli
mov
out
mov
lods
fwait
stos
mov
fbstp
das
sahf
out
outs
pop
mov
xchg
mov
sbb
addr16
xor
or
mov
(bad)
xchg
repnz
movs
imul
fimul
int
scas
pop
fucom
into
(bad)
jg
mov
cmp
jmp
jne
inc
cwde
jmp
pop
rol
cmp
and
cmp
inc
loopne
(bad)
in
or
or
ja
aaa
inc
inc
sub
daa
jmp
add
int
lea
das
fnstcw
dec
call
jmp
or
ins
push
fist
xchg
icebp
sbb
adc
pop
pop
fistp
pushf
sub
test
dec
sbb
mov
mov
je
sti
pusha
jb
inc
pop
sbb
out
pop
stc
push
xor
cwde
cdq
and
cdq
mov
jl
sbb
sub
mov
xor
fwait
mov
cmps
sub
(bad)
pop
xchg
cmp
mov
xor
mov
add
jl
pushf
daa
mov
sbb
xchg
sub
mov
dec
push
and
xchg
pop
mov
ror
or
fs
cmp
jmp
cmps
stos
loop
mov
fidiv
push
(bad)
mov
test
jo
jg
cdq
repnz
mov
fld
vmwrite
xchg
test
ret
cs
add
(bad)
lds
outs
aad
xchg
inc
dec
loopne
pop
in
adc
test
mov
rol
lahf
ja
push
push
jo
adc
add
jg
and
jmp
enter
mov
cmp
cli
sub
push
mov
scas
aas
dec
sahf
lds
mov
jo
dec
pop
xor
sbb
in
cmps
scas
push
pop
sbb
in
add
test
(bad)
fcom
cmc
xor
scas
cli
xchg
xchg
ret
int
es
(bad)
fsub
xor
lds
aam
sub
mov
add
iret
dec
mov
mov
adc
js
repnz
in
iret
xchg
jnp
ja
pop
or
xchg
sbb
shl
pushf
ja
xor
aad
(bad)
mov
push
cmps
and
call
push
cli
and
sar
sub
fs
ja
loope
fcomip
push
adc
push
xor
inc
xchg
inc
loope
xchg
js
cmp
movs
dec
or
fdiv
dec
mov
pop
push
jecxz
ret
sub
mov
pop
outs
xchg
stos
push
pop
scas
fistp
cmp
test
add
popf
xchg
jb
and
fiadd
ror
mov
mov
imul
or
js
(bad)
jae
dec
jp
outs
dec
aaa
ja
cdq
nop
push
clc
inc
fbld
ds
cmp
loopne
mov
pop
adc
hlt
xchg
jge
into
rcl
mov
fisub
repz
repz
pop
mov
jl
sbb
shr
shl
pop
aad
xchg
jmp
mov
xchg
mov
test
iret
lock
mov
cdq
cmp
bnd
mov
jl
xchg
test
mov
xchg
movs
push
adc
aas
neg
xor
adc
gs
iret
jp
mov
pop
push
push
fisttp
stos
das
sub
pop
icebp
adc
add
sahf
cmps
adc
out
and
cmp
sub
test
rcr
dec
mov
call
dec
stos
mov
bound
xchg
add
dec
(bad)
bound
rcr
clc
xchg
je
mov
(bad)
sub
or
cmp
mov
xchg
and
je
push
jmp
in
repnz
cmp
jae
add
pop
jo
sub
pop
jl
push
test
push
in
in
(bad)
dec
pushf
icebp
sub
inc
sahf
sahf
shl
push
xchg
cmp
imul
in
xchg
and
sub
ror
mov
ret
movs
or
inc
mov
adc
fsubr
cs
les
adc
sub
aad
test
aas
ret
jmp
shl
mov
sahf
outs
movs
xchg
ss
(bad)
mov
inc
fidiv
fcmove
mov
sbb
into
jmp
mov
sub
sub
pop
(bad)
enter
sbb
push
shl
loope
in
or
inc
sbb
inc
add
pop
adc
outs
xor
ins
and
out
push
add
pop
push
stc
mov
fld
ror
outs
push
enter
jmp
leave
nop
cmp
dec
cmc
cmp
sub
enter
call
or
popf
jb
addr16
dec
mov
out
jno
mov
pop
popf
out
jl
adc
and
push
dec
test
in
mov
pop
je
bound
in
int
je
ficomp
pop
ins
stos
sbb
(bad)
popa
imul
rcr
(bad)
(bad)
jnp
addr16
movs
xchg
in
jmp
mov
jmp
call
dec
fcomp
or
mov
pop
sbb
or
cs
pop
fs
sub
xor
arpl
push
imul
pop
push
xchg
jl
(bad)
mov
(bad)
cmp
into
dec
cmp
pop
stos
push
cli
mov
inc
or
(bad)
ins
xchg
xlat
push
lods
or
add
jge
inc
push
call
mov
sbb
jns
xchg
push
sub
cs
add
mov
lahf
mov
xchg
push
xchg
push
ss
sahf
mov
push
xor
push
jge
mov
cmp
(bad)
jl
cdq
jb
call
xchg
lods
xchg
cmps
mov
push
sub
sub
aad
jmp
ja
retf
out
mov
stos
push
ret
xchg
pop
shl
(bad)
pop
mov
jecxz
imul
inc
xor
lods
sti
in
pop
inc
lods
popf
push
and
jl
adc
mov
test
mov
sbb
mov
sbb
and
shr
sub
bound
pop
fprem1
and
ds
movs
test
out
mov
aas
iret
frstor
pop
inc
adc
push
arpl
or
xor
rcl
popa
nop
pop
bts
jno
repnz
in
jl
test
mov
ins
outs
mov
(bad)
scas
lea
aad
and
test
test
pop
pop
mov
add
or
mov
adc
data16
dec
arpl
and
inc
sub
dec
hlt
je
add
dec
loope
or
xor
jb
das
test
xchg
in
lods
dec
mov
jmp
test
dec
add
mov
and
js
mov
outs
and
add
xor
fistp
les
pop
adc
aad
out
in
dec
fist
sub
jp
stos
imul
out
mov
sub
adc
ficom
(bad)
stos
xchg
xor
jb
sub
and
pop
les
jecxz
cmp
(bad)
hlt
sahf
stc
mov
mov
pop
sub
in
out
dec
ja
int
cwde
sbb
mov
sbb
aad
jbe
inc
cmp
xchg
out
inc
cdq
xor
mov
inc
mov
sbb
inc
std
pop
add
or
fidiv
push
(bad)
jp
lods
xchg
cmps
xchg
ins
and
mov
neg
cwde
mov
inc
add
imul
inc
pop
iret
or
lea
mov
pop
add
xchg
and
addr16
mov
(bad)
jmp
jb
mov
int
in
and
call
gs
popf
xchg
outs
fcmovne
jb
mov
xchg
mov
push
adc
int
mov
sub
popf
les
cmp
dec
pushf
in
fwait
cmps
adc
xchg
loop
jne
cmp
test
push
mov
mov
(bad)
jbe
dec
dec
rol
das
lods
cmps
inc
(bad)
into
sub
call
pop
mov
pop
jge
sbb
pop
out
shl
pop
popa
aaa
test
sub
js
add
jne
pop
cmps
loopne
pop
xchg
(bad)
xchg
cmp
fcom
push
lahf
dec
dec
inc
mov
jno
push
out
outs
cmp
bound
push
ss
dec
jno
in
mov
inc
mov
xchg
xchg
sub
gs
push
jns
pop
mov
jmp
clc
(bad)
sahf
popf
loop
xchg
mov
mov
stos
shl
rol
fwait
dec
jbe
adc
xor
mov
xor
(bad)
xor
cmp
outs
ins
jb
test
cmp
push
add
inc
in
mov
jmp
pop
out
cs
out
nop
sub
cmc
jge
stos
and
sbb
leave
mov
pop
adc
test
xor
or
out
fistp
scas
jnp
push
mov
test
fcomi
movs
pusha
mov
outs
lea
cdq
and
(bad)
pop
pusha
and
jecxz
jno
pop
div
loope
das
and
pop
retf
retf
cli
mov
fcmovne
inc
ins
ror
xchg
inc
mov
je
sti
in
div
ret
dec
push
mov
cli
outs
retf
adc
pop
mov
sti
and
or
adc
repnz
adc
dec
dec
cdq
cdq
mov
stc
xchg
mov
out
(bad)
xor
out
fwait
mov
xchg
cmps
xchg
sbb
xchg
imul
js
stos
rcl
(bad)
push
cmp
fs
cmp
(bad)
jecxz
es
(bad)
fs
pop
jmp
shl
ror
push
data16
jge
data16
aam
sar
xchg
mov
sub
ss
je
jmp
and
daa
cmc
in
jg
imul
ins
jge
cmp
or
push
xor
pusha
pop
push
repnz
lock
into
mov
dec
out
das
mov
in
push
sub
ins
mov
sub
mov
sub
shl
mov
lods
push
dec
mov
iret
lahf
add
and
mov
loop
(bad)
(bad)
add
sub
push
jno
xchg
imul
fisub
pop
adc
inc
mov
es
(bad)
sbb
lds
(bad)
fsubr
shr
ds
inc
add
lods
and
and
pop
mov
int3
and
jno
movs
fchs
fwait
xor
pop
pop
add
push
sahf
xchg
mov
mov
jmp
mov
or
mov
xchg
cmp
fidivr
sub
adc
jge
and
add
mov
leave
adc
sbb
or
cmp
stos
(bad)
fisub
int
repz
sub
pop
sbb
pop
cmc
imul
adc
ds
sbb
jae
(bad)
sub
and
and
pop
retf
out
scas
jge
aam
into
ins
aas
loopne
mov
popf
test
cdq
xchg
push
or
jle
push
scas
jg
popf
pop
sbb
iret
fwait
or
imul
dec
add
jmp
push
sub
mov
sbb
jmp
popa
add
dec
cld
xor
repnz
pop
mov
shr
mov
sbb
popf
pop
call
aad
retf
push
bound
rcl
xchg
data16
pop
and
pop
fcom
ins
int3
mov
retf
inc
movs
and
cmp
leave
fdivr
sbb
add
pop
movs
push
mov
lahf
or
or
push
mov
dec
shl
fild
mov
xor
inc
sub
cmp
fild
sbb
adc
pop
cmp
add
sub
data16
mov
sub
pop
(bad)
clc
stc
ret
daa
xor
lods
mov
mov
add
in
fisubr
mov
dec
or
icebp
clc
and
push
int3
cdq
mov
fs
faddp
call
repz
movs
stos
scas
hlt
pop
dec
sbb
cld
jl
bound
add
sub
add
push
ins
xor
dec
(bad)
std
(bad)
push
xchg
dec
pop
test
push
icebp
stos
in
xor
xor
adc
push
mov
mov
outs
and
shl
sbb
fsubr
out
hlt
cld
pop
cmp
xlat
inc
ja
lea
adc
jp
sbb
mov
ret
test
cmp
test
cdq
xchg
dec
fsubr
loope
icebp
xchg
shr
stc
inc
(bad)
aam
and
fsubr
stc
sbb
mov
push
mov
pop
lods
sub
xor
fmulp
mov
or
pop
mov
imul
out
xor
fld
call
mov
adc
jbe
pop
call
outs
stos
cmp
(bad)
adc
or
daa
push
jo
test
push
adc
es
les
fs
mov
rol
mov
push
fld
xchg
js
mov
aad
inc
mov
div
cmp
inc
rcl
pop
xchg
std
xor
les
push
dec
add
cmp
mov
movs
aas
xchg
xchg
add
sbb
inc
ror
(bad)
dec
pop
loope
and
and
cmp
neg
cwde
mov
sub
sub
jp
aad
dec
mov
daa
pop
repz
mov
mov
sub
cmp
inc
div
rol
dec
int3
cmps
test
ja
inc
repz
mov
mov
std
adc
or
inc
jb
ror
movs
mov
jl
mov
sti
(bad)
jg
and
push
retf
pop
or
fld
pop
std
adc
into
jl
cwde
cmp
mov
das
es
retf
cmc
mov
rcr
inc
dec
js
pusha
movs
adc
les
mov
sti
cmp
inc
(bad)
xchg
sbb
mov
mov
push
push
pop
xchg
adc
dec
aam
and
nop
ret
push
dec
mov
inc
loop
out
sub
pop
ret
fisubr
in
pop
stos
std
addr16
call
push
xchg
(bad)
movs
sbb
dec
nop
mov
ficom
dec
out
mov
ss
jmp
(bad)
ins
in
cmp
nop
inc
push
movs
int
aam
mov
loope
inc
ror
not
adc
xchg
mov
mov
jnp
hlt
clc
add
sub
sub
imul
fimul
dec
das
fadd
iret
and
enter
sub
sbb
inc
jnp
idiv
outs
mul
mov
and
mov
mov
mov
test
clc
or
pop
repnz
adc
jmp
and
xchg
pop
les
push
or
and
push
pop
cmp
ins
addr16
cdq
cmp
or
call
popa
aam
pop
cdq
cmc
xchg
pop
pop
pop
aam
(bad)
mov
and
adc
(bad)
xchg
(bad)
je
jb
cmps
inc
xchg
push
rcr
int3
sti
push
test
xor
ds
or
cmp
jl
fwait
or
add
out
xchg
mov
jno
or
add
popa
mov
add
adc
loope
outs
pop
mov
shl
dec
mov
cmps
hlt
not
mov
(bad)
push
and
add
xchg
cmc
cmc
fs
sbb
push
(bad)
cmovno
sub
mov
xor
imul
inc
xlat
jns
pmaxub
ret
or
sahf
pop
sbb
xchg
pop
rcr
stos
fisubr
sti
retf
fs
dec
jmp
xchg
call
mov
hlt
or
out
repz
pop
je
pusha
aas
(bad)
out
cmps
gs
jmp
cmp
int3
mov
in
add
adc
add
bswap
outs
push
add
inc
scas
fcomp
daa
jne
or
jmp
mov
xor
fadd
js
pextrw
cmps
mov
les
fcomip
push
xor
jo
mov
mov
(bad)
jbe
rol
pop
test
jno
fisttp
push
jl
test
sub
repnz
enter
mov
mov
jmp
dec
adc
es
or
test
iret
pop
sti
leave
jecxz
out
in
xchg
outs
sub
pop
test
add
cmp
in
pop
jb
mov
sahf
mov
fwait
outs
arpl
mov
adc
jae
xor
or
(bad)
fcmove
xchg
sti
sti
push
call
sub
aam
cli
movs
mov
push
nop
sub
mov
sbb
adc
js
dec
push
arpl
int3
xor
fs
aam
pop
xchg
test
add
sub
out
(bad)
pushf
push
aam
mov
into
scas
leave
cs
cmp
daa
ds
lods
or
cdq
into
fs
pop
ss
sbb
lock
adc
or
popf
stos
add
lods
fsub
cmp
inc
cs
sbb
jo
jnp
mov
outs
cmps
mov
popaw
push
xor
jbe
jecxz
imul
jp
popa
pushf
jbe
dec
mov
adc
dec
sahf
mov
loopne
adc
or
test
out
dec
lods
and
outs
xlat
std
test
sub
iret
inc
test
je
stos
cs
mov
pop
aas
mov
in
call
jl
xchg
adc
add
(bad)
xlat
adc
jl
or
bound
sbb
ss
sub
xor
out
sub
repz
or
xor
test
je
arpl
dec
stc
pop
enter
sbb
fdivr
push
out
leave
adc
pop
pop
jne
(bad)
cmp
and
and
sbb
in
add
pop
mov
jmp
pop
out
js
ds
dec
fwait
sub
jne
pop
add
or
sub
xchg
retf
ficomp
fst
out
sbb
mov
dec
mov
xchg
std
(bad)
es
fst
bts
jg
fcmovnu
jbe
lahf
pop
lahf
push
mov
jbe
or
loopne
movs
adc
cmp
adc
les
add
push
arpl
leave
outs
loope
jae
js
add
mov
loope
inc
aas
pusha
jp
ins
dec
xor
ins
mov
add
cmps
pusha
xchg
adc
mov
stos
movs
jmp
iret
mov
retf
iret
jge
dec
cwde
xchg
dec
inc
loope
scas
imul
push
and
std
xchg
(bad)
mov
or
lods
jecxz
enter
jnp
(bad)
aad
faddp
adc
aad
std
pop
(bad)
lea
jle
jge
or
add
(bad)
mov
push
int
icebp
xchg
inc
lods
imul
xor
or
loop
sti
mov
mov
inc
inc
inc
cmc
jb
inc
rol
fsub
xchg
pushf
fcmovnbe
cdq
dec
inc
dec
adc
mov
mov
out
int
lods
call
dec
cmp
repnz
lahf
out
rcr
jnp
cli
loope
call
in
call
imul
fisttp
call
jo
je
jo
out
jmp
out
imul
repz
(bad)
sbb
cli
cmp
xchg
xor
or
jb
xlat
sbb
push
cmc
mov
mov
sbb
pop
push
dec
pop
rol
or
cmp
xchg
dec
dec
js
div
push
jl
dec
jmp
push
cmps
mul
jmp
pusha
jge
retf
mov
hlt
fadd
jbe
shl
and
cmp
jge
xor
add
cdq
mov
inc
rep
lock
(bad)
test
mov
repnz
data16
pop
or
outs
std
and
rol
gs
add
push
or
add
(bad)
lock
lods
ror
js
push
iret
or
bound
das
call
stos
dec
push
mov
pop
mov
jb
inc
or
or
mov
jo
ror
fild
jo
movs
aam
dec
xlat
and
cmp
adc
jmp
fwait
adc
pop
cmps
lahf
push
cli
add
sub
mov
ja
clc
pop
adc
push
sbb
and
ss
push
lds
inc
pop
cli
cmp
and
js
stc
jae
js
xor
jns
push
(bad)
sti
(bad)
dec
mov
xchg
and
push
jo
xor
outs
test
imul
std
in
xchg
dec
je
scas
sbb
xchg
les
jp
pop
mov
pop
jg
pop
inc
adc
cmps
mov
mov
(bad)
iret
in
les
jns
cmp
out
jno
inc
lock
fwait
and
cli
and
mov
pushf
push
jp
xor
adc
dec
shl
mov
jecxz
pop
and
dec
adc
(bad)
fidiv
data16
sub
inc
leave
cmp
test
inc
mov
jmp
lahf
push
imul
push
cld
inc
sub
sbb
jns
cmc
repz
aaa
int
js
xchg
pusha
sub
mov
jno
popf
mov
in
das
(bad)
int3
jo
cmp
aam
xor
dec
arpl
inc
mov
add
(bad)
xchg
test
and
ins
adc
adc
ret
jnp
mov
repz
xor
fisub
test
push
xor
sub
imul
push
(bad)
daa
mov
retf
pop
daa
test
cmps
sub
cmp
sub
outs
ja
enter
or
mov
nop
xchg
dec
rol
mov
or
push
data16
aam
inc
adc
ret
or
and
xor
dec
push
jmp
inc
out
inc
push
aam
push
dec
sub
sar
jg
xor
enter
jl
scas
movs
inc
dec
and
iret
pop
mov
std
fisubr
add
cmps
cmp
lds
icebp
sbb
mov
adc
leave
dec
jb
pop
jle
mov
popa
out
ret
call
dec
pop
in
movs
add
fcomp
lods
das
xlat
cmps
dec
push
mov
mov
push
jp
inc
xlat
in
lock
jle
jns
enter
aaa
imul
push
mov
push
int
or
pop
adc
xchg
pop
cmp
ins
inc
and
sbb
pushf
sub
jne
lds
jns
xchg
cli
test
(bad)
jmp
ds
pop
shr
mov
cmp
adc
pop
and
pushf
popf
dec
sub
pop
jp
or
add
(bad)
or
and
stos
dec
frstor
xchg
in
test
sub
mov
inc
sub
mov
mov
lahf
int
mov
fistp
pusha
shl
(bad)
ja
mov
xor
xor
(bad)
xor
fsubr
gs
test
popa
mov
push
ficomp
(bad)
sbb
test
mov
dec
into
fyl2xp1
jo
js
into
adc
popa
adc
xor
arpl
xor
dec
dec
adc
das
xchg
jmp
cmp
xor
mov
push
pop
fcomp
cmps
out
add
pop
ins
aaa
js
fisub
xchg
movs
jns
dec
test
xchg
mov
mov
xchg
jg
test
dec
fwait
push
call
mov
jl
sbb
mov
jmp
ret
adc
ret
shufps
jnp
add
repz
sub
fstp
in
mov
cdq
push
xor
jb
lods
jge
clc
bound
in
movs
pop
pop
div
inc
and
xchg
inc
inc
sbb
sti
scas
xor
(bad)
pop
neg
pop
cmp
pop
sub
mov
mov
mov
cmp
test
fild
mov
ds
jbe
mov
lea
jae
xchg
pop
test
mov
lahf
aaa
sbb
cmps
add
and
xor
xor
cmp
mov
mov
cmc
mov
dec
jecxz
cmp
add
shl
lods
repz
push
neg
adc
fwait
and
mov
data16
aad
imul
cmp
sahf
lea
test
dec
loop
mov
sbb
jl
(bad)
cmp
jg
pop
mov
xchg
sub
in
lahf
stos
lock
pop
pushf
out
cmp
stc
sub
cmp
test
inc
mov
imul
xlat
inc
fmul
fimul
inc
inc
fwait
add
jnp
xor
jo
jne
jno
rcr
inc
(bad)
out
rol
in
jo
add
sub
dec
popa
jg
jle
popa
(bad)
sub
cmc
pop
int3
and
push
and
movs
ret
and
in
and
out
je
call
add
mov
pushf
stc
imul
cmp
data16
cld
sbb
jae
sbb
cmp
in
fild
add
neg
sbb
xor
dec
sbb
fwait
sub
push
sbb
mov
jb
cli
dec
push
daa
lock
frstor
sbb
das
popa
adc
icebp
jns
mov
(bad)
sub
pop
inc
and
inc
outs
xchg
out
xor
jmp
sbb
int
mov
dec
jae
add
sbb
xchg
aas
movs
jp
test
inc
lahf
dec
push
popf
dec
ds
pusha
add
mov
sub
add
dec
jl
pop
retf
adc
add
pop
fninit
sti
fwait
jbe
xor
xor
in
ins
jmp
pushf
sub
jle
xor
in
jle
pop
inc
inc
hlt
aad
inc
pop
cs
sbb
js
fnstenv
jmp
xchg
push
xor
js
xor
sahf
retf
ins
xchg
aas
and
enter
adc
push
lea
repz
push
adc
cwde
and
ret
rol
add
mov
lods
ja
jp
xchg
jl
sbb
xor
dec
mov
jge
call
cdq
aad
push
pop
je
lea
pop
movs
inc
push
sbb
adc
sbb
outs
mov
and
sub
sbb
shl
cwde
movs
mov
(bad)
(bad)
inc
shl
cs
fwait
sub
xor
es
push
test
daa
sbb
and
lahf
mov
bound
ret
cmp
repnz
and
mov
adc
int
adc
(bad)
xlat
sti
cmp
movs
iret
outs
mov
sti
jne
mov
fdivr
imul
xor
add
mov
(bad)
outs
xchg
inc
mov
push
cld
mov
call
repz
(bad)
mov
clc
in
movs
out
cmp
mov
repz
lea
or
cmp
dec
dec
adc
push
cs
and
dec
sbb
mov
push
pop
pop
cmp
and
(bad)
mov
cdq
ss
push
ins
in
popf
mov
and
retf
xchg
stos
fild
adc
adc
xor
btc
pop
xchg
cdq
jp
pop
jp
sub
arpl
add
ss
scas
jne
sub
test
sbb
push
mov
in
div
adc
adc
mov
and
mov
(bad)
cmp
adc
xchg
cli
pop
daa
nop
mov
mov
mov
mov
sahf
ins
mov
sbb
(bad)
inc
jae
lods
call
mov
nop
dec
push
int
movs
ds
xor
pop
and
sar
xchg
(bad)
pop
xor
sbb
das
push
jmp
push
dec
push
imul
add
sub
or
mov
daa
in
adc
sub
sub
ins
fsubr
adc
xchg
jb
push
out
popa
js
add
dec
gs
mov
fmul
aad
gs
imul
(bad)
movs
dec
addr16
jns
cdq
pop
rol
mov
sub
in
bound
retf
icebp
jnp
add
dec
dec
push
outs
push
outs
lods
imul
stos
popf
add
cmp
pop
call
adc
in
xor
pop
push
or
(bad)
out
xor
out
mov
add
xor
dec
shl
dec
mov
push
jo
xchg
jmp
xor
or
jmp
xchg
sti
and
mov
jp
fcmovne
add
and
shl
jl
inc
(bad)
frstor
shl
popf
jge
lea
cmp
(bad)
mov
fsubr
sub
fld
jg
and
push
inc
imul
and
setne
dec
xchg
adc
xchg
mov
or
dec
ret
int
xor
inc
pop
les
outs
push
pushf
out
mov
data16
hlt
cmp
stc
sub
(bad)
dec
in
inc
jmp
mov
mov
push
call
cdq
cmps
pop
pop
sahf
into
xor
movs
imul
pop
push
jne
dec
sub
and
jne
ds
inc
pop
std
inc
scas
xor
sub
xchg
mov
xor
es
ss
iret
jbe
jb
ror
mov
out
nop
mov
mov
movs
pop
xchg
mov
pop
inc
mov
and
inc
or
pushf
in
test
nop
add
xchg
mov
gs
push
icebp
or
jo
dec
test
ds
(bad)
mov
mov
aaa
xor
shr
dec
fs
hlt
inc
ins
and
xchg
inc
dec
pop
add
in
mov
sar
mov
dec
dec
fcom
mov
int
and
or
adc
or
dec
bound
in
push
cmp
adc
call
ret
popa
jno
aaa
push
pop
xchg
retf
jle
or
pop
addr16
push
js
out
pusha
shl
ficom
mov
pop
mov
gs
sti
std
push
sub
stc
sub
add
or
jp
mov
xchg
mov
das
inc
cld
in
std
sbb
call
sub
mov
jbe
retf
out
mov
ret
rcr
xor
aaa
inc
scas
pop
and
push
mov
cmc
mov
pusha
pop
mov
or
xor
sub
jmp
cmp
aaa
fbstp
stc
test
or
fistp
pop
dec
mov
js
repz
push
retf
dec
fisub
xchg
sub
push
clc
xchg
sar
xor
dec
imul
stos
add
xchg
add
dec
xor
add
xor
or
out
and
loop
ja
mov
fild
sub
rol
pop
and
shl
dec
adc
cmp
mov
push
xchg
out
in
push
sbb
sbb
sti
mov
sbb
xchg
repz
sar
and
(bad)
and
inc
fwait
push
stc
lock
test
dec
rcl
pop
out
int3
int3
xchg
neg
mov
lods
std
jg
or
cmps
es
jl
cmc
inc
cmp
adc
jmp
(bad)
les
(bad)
adc
dec
xchg
jge
mov
int
mov
ret
push
jp
xchg
iret
xor
push
mov
sub
aad
xchg
sub
mov
test
fs
pop
out
adc
pop
mov
cmp
jb
lea
cmps
ds
lods
jmp
push
inc
mov
mov
dec
popa
fdivr
cmp
adc
sbb
jge
inc
add
push
inc
jecxz
in
jmp
add
ss
sti
sub
sbb
xchg
add
in
ja
test
mov
sub
sub
push
in
add
pop
inc
jbe
nop
sub
mov
pushf
pop
in
mov
sar
pop
jecxz
das
sbb
push
push
adc
mov
pop
imul
inc
(bad)
mov
lea
jae
mov
xchg
test
ror
loope
lock
inc
pusha
jge
xchg
std
mov
dec
jo
scas
xor
mov
push
neg
mov
jno
mov
xor
sub
mov
daa
push
mov
jno
mov
lahf
lods
xchg
test
fsub
neg
mov
stos
dec
push
xchg
adc
in
aam
and
cs
out
out
jp
leave
clc
mov
sar
imul
pop
and
test
fimul
adc
jl
add
test
mov
inc
push
inc
dec
mov
cli
xchg
mov
adc
pop
xor
push
dec
ret
or
xchg
(bad)
lahf
(bad)
icebp
jl
ja
(bad)
sbb
sbb
sub
daa
cli
push
(bad)
mov
ds
retf
cmps
jno
imul
mov
and
jg
loopne
jp
mov
shl
pop
(bad)
test
or
outs
daa
sbb
sbb
test
or
icebp
add
shl
xor
push
or
inc
and
scas
xchg
add
xchg
imul
test
jbe
repz
xchg
dec
bound
sbb
sub
pop
push
mov
jecxz
mov
loop
fimul
in
mov
imul
sbb
mov
leave
push
js
loop
das
outs
inc
mov
push
push
adc
int
inc
dec
ror
ja
push
cmp
pop
fnstenv
cmp
or
add
pop
shl
or
scas
mov
ja
ins
jno
pop
jge
pop
push
lods
ins
adc
mov
cwde
ret
sti
icebp
stos
lahf
xchg
cdq
pop
lds
lea
dec
cli
jnp
call
cmp
xor
jle
call
call
cmp
adc
mov
xor
aaa
adc
aas
icebp
push
shl
loope
out
arpl
sbb
cli
sbb
push
(bad)
fld
add
call
sub
jecxz
fld
scas
inc
mov
pop
int3
dec
or
(bad)
aas
lock
jge
icebp
xor
fidivr
in
xor
test
repz
ja
in
sub
daa
inc
or
test
sahf
fistp
test
stos
or
pop
scas
cmc
cmps
dec
fcomp
push
inc
mov
push
push
rcl
pop
jno
sub
jne
fisub
cmp
sar
push
cwde
or
shl
cdq
pop
mov
sub
adc
maskmovq
mov
mov
fsubr
mov
mov
add
jmp
mov
popf
push
push
aas
inc
xchg
mov
daa
jns
adc
out
xchg
imul
test
cmp
(bad)
xchg
add
retf
push
fadd
das
retf
add
out
(bad)
inc
(bad)
adc
ret
bound
mov
adc
fist
mov
and
gs
into
addr16
dec
out
movs
cmp
or
mov
mov
or
movs
add
or
and
call
sub
push
adc
inc
xchg
pushf
imul
mov
mov
jns
mov
mov
ficom
das
jae
xor
pop
fistp
imul
mov
frstor
rol
add
outs
push
mov
dec
mov
mov
mov
mov
ret
ror
outs
adc
or
adc
ins
imul
dec
movs
xor
shr
in
sub
and
pop
mov
icebp
xor
mov
outs
test
divps
or
cmp
and
jp
ret
dec
inc
mov
icebp
imul
mov
and
iret
mov
lahf
cmp
movs
push
jecxz
xor
das
fsub
repz
adc
int3
fscale
jnp
movs
in
jne
pop
pusha
add
mov
cmc
imul
adc
cmp
retf
push
mov
int
mov
sbb
add
out
lahf
xchg
in
adc
mov
inc
out
xchg
popa
cmp
mov
mov
ins
ror
sbb
lock
jl
jb
mov
fdivr
adc
cwde
jnp
push
icebp
jl
mov
ins
push
and
out
and
add
loope
jmp
xchg
mov
or
cmp
movs
cwde
inc
xchg
pop
fistp
xor
loop
and
out
and
(bad)
sub
jnp
mov
push
cs
and
or
jmp
jmp
repnz
fild
fimul
mov
ret
dec
push
and
pop
add
loop
add
or
dec
inc
sub
xchg
dec
mov
mov
shl
stos
mov
addr16
mov
jge
cmps
sbb
mov
cld
outs
shr
pop
movs
mov
dec
in
xchg
stc
das
stos
les
mov
pop
mov
ins
imul
dec
clc
cmp
clc
pop
mov
dec
cwde
fldz
not
mov
xor
inc
adc
mov
test
mov
(bad)
(bad)
(bad)
aaa
jmp
movs
push
xor
and
xchg
add
fidiv
lahf
dec
xchg
sub
ficomp
mov
xchg
push
ins
jmp
inc
mov
mov
mov
sub
adc
int3
and
xchg
ds
fist
addr16
push
movs
dec
cli
xchg
enter
ins
and
outs
mov
dec
push
add
xchg
fld
int
jne
dec
stc
lods
jb
das
retf
jmp
fsubr
and
jns
repnz
arpl
mov
jle
mov
cli
aam
ss
and
into
xor
dec
xor
xchg
jmp
dec
adc
fscale
mov
imul
pop
fstp
add
fisttp
dec
in
aam
sub
fwait
jns
dec
icebp
pop
and
inc
push
jmp
adc
mov
frstor
and
aad
data16
bound
clc
shl
pop
pusha
shl
ja
mov
jbe
adc
mov
and
push
dec
in
xchg
call
mov
cmp
push
call
pushf
mov
or
mov
aas
mov
cmp
pop
ret
cmc
out
sub
inc
or
push
cld
inc
fwait
xor
push
cmp
jecxz
inc
and
(bad)
adc
stos
das
push
int3
pop
in
retf
inc
les
and
ret
sbb
sbb
pusha
gs
in
adc
call
imul
dec
jmp
fisubr
mov
xchg
test
rol
and
push
add
test
jo
push
into
sub
cmp
pop
adc
cmp
jmp
mov
and
mov
dec
int3
add
cmc
inc
in
sbb
sbb
xchg
cmp
adc
and
or
push
dec
fidivr
adc
(bad)
xchg
ins
rcl
add
sbb
fadd
imul
mov
(bad)
sahf
dec
test
test
mov
lock
dec
mov
int
mov
daa
cwde
getsec
test
into
xchg
mov
fiadd
ss
cs
pusha
lds
jl
out
adc
pop
hlt
jge
(bad)
mov
out
mov
shl
lods
nop
mov
push
hlt
test
xor
jecxz
fistp
les
in
and
xor
fisttp
jne
pusha
iret
xchg
scas
mov
icebp
push
iret
ret
mov
fwait
jmp
fadd
aaa
pop
mov
inc
ds
pop
mov
movs
mov
icebp
fcom
iret
dec
retf
xor
dec
cwde
test
jmp
inc
mov
lods
or
cmc
sub
mov
add
dec
mov
jp
xor
rcl
inc
mov
stc
rol
jl
inc
mov
test
int
push
js
jecxz
mov
std
cmp
sbb
mov
push
or
pop
dec
je
xlat
je
jl
sbb
leave
xor
mov
sub
dec
add
add
mov
mov
jbe
fadd
daa
iret
in
dec
sub
jmp
xor
scas
push
les
(bad)
push
sub
push
mov
mov
pop
nop
jmp
push
call
outs
pop
mov
jno
pop
or
lock
sub
mov
xchg
sub
or
in
xchg
cmp
sti
retf
enter
pop
rol
outs
jne
xchg
scas
out
(bad)
stc
adc
jnp
scas
mov
nop
dec
je
mov
fmul
dec
ret
dec
seta
xor
adc
jb
les
jns
or
jne
sbb
pusha
adc
mov
push
aaa
dec
icebp
pop
rdtsc
cmp
mov
jl
jns
ds
mov
dec
stc
mov
aaa
clc
sbb
mov
lods
stos
push
pushf
xchg
fild
lahf
push
mov
imul
or
xchg
dec
mov
sahf
inc
xchg
xlat
and
add
out
ds
mov
and
mov
test
ins
adc
mov
pop
addr16
jno
pop
cdq
gs
das
pushf
test
loope
sbb
or
mov
jge
dec
push
push
or
adc
cs
mov
and
ja
dec
mov
or
not
dec
push
jb
push
mov
xchg
stos
inc
lods
idiv
mov
jnp
stos
adc
sub
or
xor
stos
fstp
shl
fild
xchg
xor
xor
lahf
ins
fsub
sub
xchg
and
mov
sbb
fs
gs
jmp
sub
xor
xchg
jb
out
shr
xlat
call
xor
aam
jbe
push
movs
jnp
fdivr
addr16
leave
sub
xor
scas
mov
cmp
mov
mov
rol
mov
fldenv
fs
shl
call
push
cmove
icebp
dec
push
movs
adc
imul
adc
bound
push
jae
jle
sub
dec
imul
sti
sbb
lahf
adc
inc
sub
or
in
push
outs
je
inc
jbe
inc
ss
icebp
mov
mov
int
cmps
(bad)
or
scas
jl
in
fs
es
addr16
fld
test
test
dec
lock
mov
jo
push
pop
cmps
inc
cwde
sbb
or
xchg
fs
cmp
in
test
adc
scas
fs
mov
fs
mov
retf
lods
(bad)
call
lea
jl
aaa
cmp
dec
out
repnz
pop
jge
sahf
or
or
or
inc
(bad)
xchg
test
push
out
imul
faddp
push
int3
les
jb
or
pop
inc
lods
fwait
mov
call
mov
div
out
sub
fwait
jmp
xchg
sbb
(bad)
bound
xchg
sub
aaa
push
push
pop
cwde
retf
fisttp
push
adc
adc
in
mov
jl
dec
xchg
dec
stc
ret
repz
add
jl
mov
xor
fwait
shr
jecxz
dec
push
xchg
frndint
fmul
data16
sbb
int3
xchg
cdq
lods
or
je
das
mov
jae
shl
(bad)
pop
les
xor
mov
sbb
mov
push
mov
pop
loope
push
adc
(bad)
test
sub
add
dec
movs
fstp
xor
adc
dec
int
mov
pop
xchg
pop
in
ins
sbb
movs
enter
xor
jbe
xchg
xor
int
mov
sbb
push
xor
daa
or
xchg
mov
mov
xchg
cmp
aas
push
or
out
in
in
cmps
sbb
adc
popf
dec
mov
fld
rcr
sar
ret
jp
xchg
sbb
call
call
pop
bsr
sbb
sbb
adc
retf
push
lea
xchg
stos
mov
out
cmc
and
push
cmps
pop
mov
pop
mov
(bad)
and
xor
mov
xor
mov
leave
cmp
mov
dec
fidivr
repnz
fld
stos
data16
dec
mov
ret
jae
cmp
push
adc
mov
outs
sti
test
retf
xor
push
inc
ja
dec
jb
inc
dec
iret
loope
xchg
dec
mov
adc
(bad)
neg
popa
sub
push
push
les
mov
sbb
jnp
pusha
or
mov
mov
clc
inc
pop
es
cmps
xchg
mov
inc
sbb
arpl
add
es
add
out
inc
enter
cmp
cs
jae
jg
xor
push
dec
cdq
push
test
dec
mul
stos
ficom
outs
out
scas
hlt
lods
pop
gs
inc
and
out
inc
sar
add
and
pop
retf
cmc
outs
inc
out
sbb
test
add
push
pop
jb
popf
shl
pop
sbb
xchg
(bad)
mov
out
loop
hlt
rol
adc
pop
out
and
sub
cmp
scas
or
cmps
sub
ins
iret
jae
fs
neg
mov
rcl
mov
mov
shr
fsubr
cld
cmc
in
jge
pop
add
xchg
mul
xchg
sub
int3
ja
jns
mov
inc
dec
inc
outs
push
fistp
test
mov
mov
ins
push
ror
xor
add
retf
pop
das
ror
fcmovnbe
retf
mov
pop
xchg
in
inc
cmp
mov
xor
push
jbe
or
stos
imul
sti
jecxz
outs
ins
and
mov
pop
and
aad
retf
mov
div
in
shl
dec
(bad)
jp
sbb
movs
mov
push
inc
push
out
je
push
lods
sar
xchg
mov
and
test
dec
sub
loopne
xor
dec
sub
fs
aas
call
sub
jge
pop
pop
popa
xlat
pop
jge
sbb
push
add
int3
mov
rcl
addr16
mov
ror
popa
loop
call
mov
rcl
rol
bound
inc
xchg
(bad)
out
inc
and
popf
std
dec
enter
push
xchg
xor
jp
call
stos
xor
add
mov
cmp
repz
mov
test
xchg
fisttp
inc
cmpxchg8b
jo
jl
dec
cdq
pop
cld
sar
xor
cmps
daa
sbb
inc
push
mov
push
xchg
dec
ins
mul
lods
repnz
out
jecxz
(bad)
mov
inc
mov
sbb
(bad)
sub
mov
xor
and
sbb
adc
sub
jmp
push
jnp
stos
xor
enter
lea
inc
and
or
adc
push
stos
pop
mov
xchg
out
inc
gs
fwait
loop
pop
ja
or
fwait
and
leave
lahf
mov
push
push
jl
call
repnz
cmp
cdq
retf
cmps
xor
ss
and
xchg
sti
and
dec
mov
push
neg
xor
sbb
adc
push
retf
les
nop
adc
lahf
cli
push
add
xor
call
jle
xchg
mov
aaa
scas
aaa
fsub
inc
mov
sbb
fmul
out
xchg
icebp
mov
inc
xor
sub
(bad)
in
pop
retf
and
cmps
or
retf
jmp
outs
or
pop
add
push
rcl
xor
xor
xchg
cmp
jno
and
out
out
jg
outs
hlt
cmp
cwde
in
fisub
dec
fwait
and
ja
xor
mov
scas
addr16
sub
rcl
retf
adc
inc
leave
inc
fucomp
xchg
punpckhbw
mov
mov
out
mov
cs
dec
arpl
pop
outs
ss
into
xchg
mov
lods
xlat
imul
leave
pop
or
cmps
jbe
gs
sub
jb
sub
xor
lds
shr
ins
mov
je
xor
mov
int3
jnp
mov
dec
icebp
mov
push
and
jb
xchg
addr16
jp
std
test
cld
jb
inc
mov
mov
inc
int3
mov
lahf
jmp
mov
icebp
mov
mov
or
push
int3
in
adc
or
ins
scas
mov
mov
arpl
loop
mov
lds
xchg
stos
bound
pop
sar
xor
sbb
cdq
imul
xchg
iret
fcom
test
into
or
dec
call
pusha
cmp
jmp
push
inc
mov
gs
loop
hlt
inc
icebp
inc
imul
iret
and
jge
push
jbe
jno
mov
jo
mov
push
out
jae
bound
or
aad
mov
not
jno
mov
xchg
fmul
fwait
or
pop
mov
shl
pop
(bad)
cmps
aaa
and
push
jns
and
xchg
fstp
fcom
mov
add
sbb
inc
adc
sbb
xor
push
adc
xor
fild
push
xor
pusha
lea
std
and
dec
xor
stos
jns
mov
sahf
or
xor
(bad)
std
or
ror
shl
inc
inc
pop
(bad)
pop
jnp
aam
lods
shl
xor
fldcw
stc
fadd
fwait
or
std
xlat
mov
stos
mov
iret
in
cwde
loope
xor
test
xor
(bad)
cmp
cs
jle
adc
xor
dec
sub
inc
fdivr
jge
inc
inc
mov
frstor
fmul
in
jge
xchg
jo
ror
aas
retf
ss
popa
jno
stos
int3
lds
xchg
cmp
cmp
(bad)
or
jb
out
dec
test
add
inc
fistp
pop
sbb
mov
xor
repnz
xor
dec
xor
das
xchg
int3
inc
int3
xchg
in
xchg
mov
iret
arpl
scas
shl
std
test
or
cmp
test
and
or
cmp
or
loope
dec
mov
retf
aaa
imul
mov
jp
fld
push
jno
inc
xchg
pop
repnz
push
xchg
into
inc
jns
in
arpl
jp
cmp
push
pop
cmp
ficom
shl
mov
test
ss
out
stc
add
test
scas
ds
cdq
ror
cmc
push
inc
sub
pop
sub
dec
sbb
adc
dec
xor
loopne
ror
fisttp
sub
outs
xlat
push
movs
lea
outs
mov
stos
cli
mov
jb
retf
push
sub
xor
ficomp
dec
add
sub
fwait
or
cmc
xchg
or
xchg
sbb
aad
add
or
retf
push
movs
mov
pop
xchg
adc
les
add
mov
aad
into
cli
sub
repz
mov
in
leave
adc
lock
mov
call
jle
mov
inc
movs
sbb
mov
mov
pop
mov
adc
div
add
loope
in
inc
stos
into
adc
stos
bnd
add
jnp
cmp
mov
aam
loop
pop
mov
inc
sbb
pop
cmc
imul
push
clc
cmps
shr
dec
test
imul
aas
sbb
test
inc
enter
pusha
and
call
xchg
sbb
mov
pop
ret
mov
je
loopne
and
sub
mov
xchg
mov
adc
fst
lods
xor
sub
pop
jmp
stos
iret
jl
mov
scas
mov
jl
mov
shl
inc
adc
retf
xchg
rol
jo
iret
sahf
lods
and
ret
pop
jecxz
aad
adc
fs
sub
pop
xlat
push
or
xor
xor
dec
fcomp
loopne
sub
into
repnz
aad
adc
pop
jmp
ret
loop
lods
leave
mov
cmp
or
(bad)
mov
sbb
push
sbb
mov
mov
sub
jo
mov
cld
in
pushf
and
mov
sbb
dec
or
rcr
dec
test
xlat
clc
popa
cwde
jmp
jns
scas
inc
add
ret
jge
je
dec
sbb
fiadd
into
lahf
out
pop
mov
mov
mov
mov
mov
push
sub
aam
paddb
out
inc
xor
jne
bound
dec
(bad)
cmp
mov
adc
retf
push
mov
mov
icebp
inc
call
call
pop
jecxz
sbb
call
push
scas
inc
pop
mov
pushf
call
pop
aaa
iret
adc
jecxz
test
es
lock
fwait
mov
in
cmp
push
sbb
and
inc
or
mov
mov
ficom
cs
in
adc
sbb
jmp
int
jg
test
and
or
inc
das
add
jmp
cli
push
cmp
mov
push
adc
dec
outs
cmp
jmp
adc
mov
sub
fsubr
cld
mov
(bad)
and
movs
(bad)
xor
mov
std
pop
call
and
add
mov
popa
push
xchg
sub
push
xchg
dec
loopne
retf
xchg
push
jg
jns
in
jp
pop
mov
add
pop
mov
dec
push
dec
ins
ds
cs
mov
adc
and
add
das
bnd
jg
and
xchg
sbb
clc
imul
fidiv
ror
jb
outs
(bad)
jge
or
sbb
sub
(bad)
fsin
xor
push
pusha
jnp
jmp
push
adc
addr16
test
push
add
or
sbb
je
and
data16
daa
xchg
repz
shr
mov
lock
jne
fdivr
addr16
sbb
cmp
cmp
jle
adc
loope
jne
lahf
push
dec
push
aam
mov
mov
out
lahf
pop
or
scas
mov
xor
leave
jae
movs
fadd
ror
adc
and
pop
out
sahf
xor
sub
in
dec
pushf
adc
popf
or
push
loopne
mov
lods
xor
sbb
jecxz
xchg
nop
dec
sahf
mov
dec
shr
add
sub
sbb
dec
sub
mov
sbb
movs
leave
ret
shl
call
js
cdq
lds
rcl
fnstsw
mov
push
inc
stos
jo
add
imul
int
xor
jns
add
mov
jmp
jp
xchg
(bad)
sub
popf
rol
or
mov
fnstsw
dec
adc
call
mov
sbb
and
out
ficom
(bad)
rcl
xchg
xor
loope
je
mov
or
adc
sbb
sub
shl
push
jg
mov
in
movs
mov
mov
cmp
mov
sub
inc
and
sub
push
jne
cmp
ins
cwde
pop
cld
ss
call
mov
sub
call
mov
inc
pop
xchg
mov
inc
push
mov
or
pop
pop
xchg
cmps
inc
jo
out
xchg
jp
xor
add
sahf
push
push
mov
mov
push
fisttp
xchg
lahf
mov
mov
or
mov
popa
push
jecxz
cmc
xor
movs
imul
sbb
shl
jo
out
push
(bad)
xchg
inc
repnz
in
mov
and
or
adc
mov
jge
int
lea
aad
mov
push
ror
mov
mov
cld
xchg
sub
mov
fstp
pop
fbld
shl
or
in
mov
cmp
ja
mov
mov
jns
aas
nop
sub
cmp
scas
aaa
test
pop
jp
dec
push
mov
stc
xchg
outs
or
(bad)
cld
addr16
hlt
dec
push
enter
ret
sbb
or
push
sahf
aaa
cdq
mov
popf
cmp
das
xor
sbb
or
mov
dec
jbe
in
push
out
test
ss
mov
stos
and
test
imul
xchg
fs
sahf
mov
das
test
sub
sub
jmp
push
or
inc
cmp
and
xor
sti
gs
das
popa
push
dec
mov
gs
popa
cli
movs
xor
dec
xor
xor
data16
mov
test
loope
not
stos
out
sub
mov
fmul
mov
mov
sub
cdq
push
mov
adc
bound
out
outs
xchg
mov
cmp
jae
push
leave
aas
data16
and
pop
lods
jno
add
movs
sub
cmps
mov
retf
push
adc
sub
popf
adc
imul
imul
stos
mov
repnz
shl
sub
xor
shr
popa
lock
pusha
dec
sbb
and
push
cld
icebp
jo
mov
push
fsubr
movs
pop
nop
push
mov
sbb
pop
mov
inc
inc
xor
jmp
pop
cdq
and
jnp
mov
or
daa
jl
pop
retf
push
ins
push
sbb
cli
fidiv
mov
imul
sub
push
push
add
adc
push
in
mov
jmp
dec
test
rcr
imul
inc
int
adc
mov
out
fs
sub
call
dec
mov
lods
loopne
pop
pusha
loope
out
lds
sti
mov
inc
scas
imul
jne
mov
push
mov
jnp
dec
mov
aad
inc
push
hlt
ds
in
aas
test
and
adc
leave
shr
daa
dec
daa
jge
mov
mov
adc
pop
out
xchg
push
not
(bad)
hlt
mov
dec
cmp
outs
rcl
push
repnz
adc
pop
leave
rol
int3
pop
loope
lea
inc
jge
mov
xchg
push
ins
add
fisub
ins
sbb
dec
add
jbe
push
xchg
pop
sbb
mov
call
xchg
pop
cmp
scas
mov
hlt
call
imul
cmp
jecxz
in
aaa
retf
push
push
inc
ins
cwde
pop
sbb
movs
mov
les
fwait
imul
inc
fisubr
or
(bad)
fcom
add
(bad)
jo
enter
jb
cmps
pop
cdq
mov
pop
lock
cmp
cmps
shr
mov
in
cdq
sar
sub
cmp
in
dec
sub
sbb
mov
neg
daa
ret
imul
mov
sbb
lock
add
cwde
sbb
rcr
bound
call
jo
jno
popf
jmp
push
cmp
dec
div
jnp
or
cmp
(bad)
push
scas
adc
and
cld
cdq
mov
inc
add
and
adc
mov
xor
sub
or
jl
aas
sbb
in
inc
push
inc
cmp
jge
sbb
push
stos
ins
pop
add
arpl
loope
ins
pop
or
ret
ds
lds
nop
cmps
sbb
push
cmp
popf
cmp
not
mov
fidivr
mov
jne
mov
jae
sub
sbb
ret
mov
movs
mov
mov
and
inc
push
stc
push
cmp
cmp
jge
cwde
xchg
ds
inc
mov
fs
js
scas
add
xchg
fdivr
mov
jne
pop
adc
imul
scas
ss
mov
push
aad
sub
enter
mov
call
jo
in
xor
xchg
inc
or
retf
mov
push
dec
mov
fdivr
aas
xchg
pop
loope
mov
jo
lds
sub
in
shr
and
(bad)
add
in
cwde
clc
mov
add
cmp
mov
fcomp
sti
mov
dec
mov
ins
sbb
jae
mov
inc
mov
push
into
sub
daa
push
pop
mov
aad
xchg
add
mov
mov
mov
call
loope
and
fwait
adc
sti
push
sbb
fst
inc
mov
or
js
je
push
(bad)
std
cwde
jle
js
inc
jns
adc
scas
mov
mov
test
repz
stos
push
or
mov
sahf
es
xchg
lds
push
shl
cmps
inc
mov
lods
xor
jge
jle
popa
(bad)
cld
pusha
jne
jle
jp
cmp
ds
or
and
hlt
xor
inc
std
dec
adc
shr
mov
scas
cmc
scas
aad
xchg
(bad)
adc
in
mov
cli
mov
dec
pop
cmp
aam
mov
push
sbb
jp
pop
ror
mov
and
mov
mov
int
pop
lock
fimul
(bad)
push
jmp
fdivr
dec
pop
stos
sti
jmp
pusha
inc
xchg
xor
sub
cmc
or
out
iret
push
(bad)
fwait
pushf
xchg
mov
cmp
nop
fwait
mov
cmp
mov
inc
xor
ret
push
test
cmp
adc
and
sbb
enter
out
dec
xchg
jo
xor
pop
push
add
mov
push
dec
pop
dec
push
das
push
add
push
(bad)
aam
cmp
(bad)
daa
mov
sub
clc
push
ror
rcl
adc
add
sub
xlat
adc
dec
push
and
or
pop
mul
mov
jne
xor
dec
xor
xchg
mov
sahf
push
add
and
dec
loopne
xor
int3
push
fwait
ror
(bad)
scas
dec
mov
pop
xor
jo
push
imul
aas
movs
or
sbb
(bad)
shl
daa
sbb
hlt
test
dec
add
popf
call
xor
stc
push
in
int3
and
loop
cmc
popa
sub
data16
jb
ins
stos
xor
(bad)
fs
loop
pop
sbb
pop
or
outs
cwde
call
xor
add
mov
or
jecxz
add
cli
lea
dec
xchg
fld
or
loopne
fcomp
aaa
arpl
mov
add
mov
cli
sbb
mov
scas
ret
mov
add
ins
dec
or
(bad)
and
mov
mov
mov
out
mov
jl
jmp
(bad)
mov
loopne
je
jbe
pop
pop
out
ret
push
jg
fs
aam
pop
das
les
adc
int
shl
mov
inc
cmp
cmp
lds
sub
xchg
dec
lods
ret
and
or
icebp
push
int3
jecxz
sar
neg
hlt
scas
cmc
and
push
mov
adc
jl
xor
js
xchg
cmc
pop
mov
push
gs
mov
lock
mov
lods
adc
arpl
ds
or
ds
inc
push
pop
push
push
mov
enter
xor
pop
cli
jmp
aaa
(bad)
mov
or
fwait
xchg
or
jnp
jp
mov
jle
test
ret
xchg
pop
mov
out
lock
or
push
add
imul
push
popf
cmp
push
push
loope
in
cmp
bound
dec
imul
inc
xchg
sub
test
outs
sbb
dec
out
inc
cwde
inc
clc
mov
pushf
xor
jl
fs
mov
inc
movs
mov
jg
pop
gs
mov
imul
out
js
mov
test
sub
pop
fwait
repnz
sar
cs
mov
out
loope
mov
sub
cmps
icebp
sub
test
inc
cmp
stos
shl
mov
inc
cmc
mov
shr
in
inc
daa
div
test
mov
int3
or
movs
pop
int3
push
or
call
cmp
fcmove
sub
out
dec
aad
aam
repnz
imul
dec
mov
movs
out
sub
push
mov
dec
pop
les
or
fisubr
xchg
out
fsub
mov
(bad)
aam
or
aad
retf
aaa
data16
sub
inc
xchg
sub
xor
sbb
(bad)
mov
cmp
lea
jo
push
gs
dec
lahf
sub
mov
push
ins
int
jmp
sub
retf
(bad)
cmc
(bad)
shr
pop
sub
fmul
(bad)
ds
(bad)
or
sbb
sub
cmc
dec
xor
mov
stc
dec
xor
lods
cmp
popf
jne
pushf
lods
ds
sti
loopne
jmp
sbb
pop
adc
pop
and
fstp
jmp
adc
nop
int3
mov
and
sub
pop
pusha
xor
mov
sub
data16
push
push
dec
aas
dec
jle
jbe
bound
fild
mov
pop
cs
fwait
add
popf
aaa
(bad)
out
jns
fld
jns
lahf
jecxz
stc
mov
imul
shl
jns
fs
test
xchg
sub
jg
mov
adc
xor
adc
push
das
xor
test
aaa
inc
cdq
pop
out
scas
sar
mov
fnstsw
push
ds
ja
js
mov
add
dec
ja
lock
push
test
adc
jg
fadd
iret
jno
not
test
popa
xlat
int3
sub
sub
(bad)
jmp
mov
push
cmp
push
clc
sub
jmp
mov
adc
bound
nop
xchg
ins
(bad)
out
retf
outs
or
xor
imul
pop
test
dec
lods
xor
push
pop
inc
mov
inc
dec
push
leave
jmp
adc
xor
mov
call
mov
pop
pop
adc
fisubr
fld
rol
dec
push
in
xor
mov
les
daa
mov
setne
xor
mov
loope
mov
push
int3
dec
mov
sbb
mov
mov
aad
push
jbe
ss
jnp
mov
sbb
add
xor
pop
cmp
jne
push
call
mov
lods
pop
fsubr
shr
xor
pand
in
adc
xlat
pop
adc
sbb
or
mov
int
xor
test
jbe
std
cmp
cmps
pop
push
into
popf
mov
mov
fst
pop
or
dec
lods
ins
mov
xchg
adc
clc
(bad)
jmp
int
sub
inc
cmp
scas
add
stos
push
mov
xchg
jge
mov
outs
jmp
xchg
stos
clc
push
in
cmp
out
jo
push
pop
dec
mov
test
js
adc
xchg
cmp
adc
cmp
movq
std
lods
xchg
pop
(bad)
mov
imul
push
dec
sbb
sti
ins
or
or
call
push
inc
(bad)
mov
mov
pusha
sbb
int
push
add
popf
xor
or
cmp
scas
xchg
xchg
std
push
lock
sbb
jnp
jne
mov
xor
push
cmp
or
mov
adc
xor
hlt
pop
in
imul
out
add
mov
mov
sahf
cmp
sub
push
adc
add
fdivp
lahf
jl
dec
push
movzx
lahf
fcomip
push
xchg
test
mul
cdq
cmps
stos
lods
adc
pop
int
mul
cdq
jecxz
addr16
lods
xchg
stos
jns
xchg
push
and
stos
popf
call
bound
push
cmc
xchg
mov
jne
retf
inc
fwait
pusha
pop
sub
pop
sub
imul
jmp
gs
adc
test
shl
sbb
stos
out
les
cmp
mov
mov
in
and
out
jmp
pop
daa
aaa
mov
ror
mov
jle
enter
pushf
and
cmps
jo
jae
mov
or
jmp
mov
test
pusha
test
scas
cmps
mov
xchg
mov
sbb
adc
mov
inc
inc
daa
mov
adc
dec
out
jmp
jbe
daa
mov
jns
adc
push
xchg
cdq
iret
or
mov
inc
inc
jmp
lock
(bad)
xor
mov
mov
add
mov
sti
mov
jge
sti
pop
or
adc
mov
mov
sbb
mov
rcr
jae
dec
xchg
repnz
pusha
call
adc
neg
xor
mov
push
or
cli
cdq
(bad)
inc
ss
xchg
sub
clc
xchg
or
add
in
push
jge
xchg
pop
jnp
cwde
jmp
mov
shr
aad
hlt
pop
mov
out
xlat
int3
loop
add
mov
mov
mov
pop
repz
ds
jg
mov
test
scas
push
jge
outs
stos
jbe
inc
sub
gs
inc
lods
push
ja
sbb
out
cwde
fist
dec
(bad)
sub
loop
mov
movs
mov
sbb
lock
scas
mov
stos
sub
xchg
push
jge
stc
out
std
mov
jns
rol
div
or
retf
mov
mov
ror
xchg
xchg
(bad)
and
mov
and
movs
movs
inc
scas
clc
sar
sub
shl
rcr
xor
fldcw
mov
xchg
aas
xchg
inc
ret
sbb
or
je
scas
shr
icebp
add
mov
fistp
bound
stos
cmp
push
loope
call
mov
jae
dec
pop
js
xchg
inc
jns
sub
pop
fisubr
bound
push
pop
xchg
and
xlat
(bad)
ficomp
push
inc
lahf
push
inc
loop
push
out
outs
cmp
mov
mov
mov
pop
push
jmp
pop
sub
xor
lahf
push
out
(bad)
outs
jbe
nop
stos
jnp
outs
xchg
hlt
add
add
in
mov
icebp
test
test
(bad)
fmul
(bad)
(bad)
nop
inc
not
jp
dec
and
aam
repnz
stc
pop
rcl
test
std
(bad)
jecxz
(bad)
mov
cmp
mov
ds
enter
ss
xchg
or
iret
inc
dec
sbb
ja
es
push
outs
lods
test
sub
int
mov
xlat
ret
xor
adc
sahf
aam
out
jbe
cmp
sub
mov
lea
xchg
ss
xchg
enter
push
fsubp
xchg
or
jns
idiv
xchg
xor
hlt
nop
sahf
add
adc
lahf
scas
mov
pop
and
mov
xchg
jge
pop
dec
mov
sbb
(bad)
(bad)
jno
inc
pop
push
jo
jae
in
mov
fs
sbb
lock
shl
inc
cli
add
dec
mov
xor
retf
icebp
stos
sar
cmp
and
pop
test
jecxz
sbb
arpl
xor
mov
push
(bad)
pop
ror
cmps
xor
cmp
test
stos
js
xor
(bad)
js
inc
fbstp
pop
jmp
int3
fxam
(bad)
das
fstp
repz
fdiv
mov
cmp
xor
inc
dec
pop
push
cmp
shr
mov
pop
call
xchg
cmp
and
fsubrp
(bad)
cmp
xchg
out
jne
popf
sti
jle
idiv
lock
loopne
inc
loope
push
mov
sbb
movs
push
test
sub
imul
fimul
xlat
dec
cmc
les
sub
aaa
jmp
lods
test
in
push
ins
pop
or
shl
inc
mov
sub
jge
jg
sbb
inc
lods
add
xor
inc
push
and
je
aad
mul
idiv
sbb
ds
dec
lea
sub
pop
xchg
lods
(bad)
jmp
int
xchg
mov
push
fwait
push
adc
ja
scas
(bad)
jmp
jo
xor
int
scas
pop
pop
jns
test
aas
test
mov
movs
push
iret
lahf
cli
dec
imul
jo
add
aam
push
mov
ins
adc
je
jo
fwait
cmp
sti
fwait
lock
fadd
fwait
into
ret
icebp
inc
sub
dec
inc
push
inc
les
nop
xor
lds
neg
dec
sub
test
pop
cs
popa
jp
inc
jle
mov
jmp
mov
sbb
inc
and
int
or
mov
sar
int
cmp
pushf
add
jecxz
fwait
mov
adc
out
jmp
cdq
ret
mov
jo
sbb
test
in
mov
lds
sub
dec
lds
cmp
in
pop
test
dec
or
test
fisubr
pop
dec
xchg
mov
mov
xor
es
outs
sti
inc
pop
lock
inc
movs
cmp
cwde
jle
sub
mov
mov
jo
cli
mov
(bad)
push
mov
ss
imul
add
retf
sahf
mov
ja
fs
es
xor
jno
(bad)
in
sti
rcl
int
sbb
sbb
retf
mov
dec
mov
pop
add
(bad)
shl
adc
xchg
aad
inc
mov
mov
cs
(bad)
mov
push
sbb
cmp
scas
not
fisubr
or
pop
jnp
sbb
or
inc
jp
enter
mov
adc
inc
jl
cmp
sub
xrelease
push
adc
sbb
mov
retf
mov
sahf
fdivr
shl
or
js
adc
xor
int
dec
add
outs
loop
test
jge
xchg
and
jbe
test
pop
fsubr
inc
adc
sbb
loope
pop
pop
shl
fdiv
(bad)
mov
addr16
jmp
sub
es
mov
shl
fcomp
xchg
enter
iret
cmp
fcomp
or
push
jo
pop
les
sbb
(bad)
das
outs
inc
push
outs
test
repnz
cmp
das
push
mov
lods
ret
adc
push
int
push
stos
gs
dec
or
jb
int
ror
ficomp
or
scas
lea
pop
xlat
add
and
jge
mov
dec
sbb
fadd
out
adc
in
ins
enter
mov
dec
dec
(bad)
(bad)
shr
jg
pop
mov
push
and
sub
shr
shr
loop
movs
jns
cwde
ss
cmps
or
in
mov
inc
aam
mov
inc
out
pushf
hlt
cmp
test
push
in
ds
xor
inc
test
sub
jmp
(bad)
and
adc
out
dec
cdq
ret
std
cmp
pop
mov
iret
push
leave
xchg
in
pop
ds
out
inc
and
nop
inc
xlat
std
and
test
or
mov
les
loop
push
and
jmp
xchg
sub
test
xchg
mov
jns
fisub
ret
loopne
dec
and
or
and
add
jae
repz
mov
aad
xchg
cwde
inc
lods
fld
jae
inc
stos
iret
imul
movs
inc
(bad)
cdq
pand
movs
pusha
dec
push
jl
or
inc
div
bound
cmp
retf
enter
mov
push
inc
xor
stos
lock
sub
movs
sbb
sbb
add
inc
loope
pop
test
fcom
xchg
pop
clc
nop
movs
adc
leave
xchg
inc
xchg
iret
sahf
push
iret
inc
dec
sbb
int
push
mov
sti
mov
cmp
dec
shl
call
sbb
mov
xchg
sti
push
inc
push
sti
addr16
sub
xchg
pop
xlat
mov
leave
fs
movs
popf
xchg
adc
int
dec
ds
ins
in
(bad)
and
es
xchg
xor
xlat
pop
test
sbb
cmps
or
and
push
sub
jmp
cmp
in
inc
pusha
jb
das
mov
mov
ja
xor
in
jl
add
mul
push
mov
cmp
inc
sbb
clc
(bad)
cmp
ins
dec
mov
jne
mov
push
stc
fisub
or
in
push
inc
std
add
(bad)
dec
ss
or
sbb
dec
mov
push
mov
add
int
or
sti
dec
pop
icebp
sar
pop
dec
cmp
add
leave
sahf
xor
add
lock
mov
lods
clc
cmps
xchg
mov
mov
push
shl
mov
jmp
pusha
inc
mov
mov
shr
ret
xor
jg
fcomp
in
test
repz
lahf
adc
dec
clc
hlt
xlat
data16
xchg
iret
popa
dec
xchg
sbb
shl
or
mov
sbb
lahf
or
inc
arpl
in
arpl
retf
xchg
adc
mov
inc
and
enter
ds
jge
(bad)
and
outs
xor
sub
fild
sub
test
inc
test
sbb
pusha
adc
test
push
les
and
xor
ja
lds
pop
dec
out
fisttp
or
pop
int3
(bad)
in
xchg
data16
xchg
int
nop
movs
(bad)
push
div
jno
cli
jmp
enter
fidivr
adc
das
sbb
and
dec
shr
icebp
(bad)
dec
mov
xor
fmulp
ins
dec
test
es
int
in
mov
xor
push
or
fisub
daa
les
(bad)
ins
pop
mov
xchg
ret
shufps
sub
shl
popa
ins
sbb
cmp
mov
push
and
cmp
adc
fmul
push
dec
and
shl
fmulp
cmps
stos
aas
fdiv
pop
mov
dec
std
test
inc
ror
push
push
mov
icebp
inc
arpl
addr16
push
neg
mov
outs
cmp
cmp
popf
lahf
imul
outs
pop
dec
pop
inc
xor
sbb
mov
sub
mov
mov
fisttp
stc
jl
outs
mov
sub
pop
sub
sbb
push
mov
push
jle
cmp
xor
dec
inc
cmp
mov
into
cmp
mov
int
in
xor
movs
sti
xor
cs
aaa
scas
xor
jmp
dec
outs
and
fcmovnbe
mov
rol
jmp
cli
lds
inc
xchg
pop
cmp
add
popa
ret
out
sub
int3
aam
mov
jp
mov
cdq
pop
jmp
data16
xlat
mov
enter
stos
mov
call
mov
iret
xor
fcomp
fist
add
push
inc
cmp
arpl
arpl
mov
cmps
test
fbstp
test
jl
and
and
pop
fisubr
xchg
cld
xchg
aaa
movs
ficomp
stos
dec
fnstcw
outs
ins
jo
mov
pop
mov
fwait
cmp
ins
xchg
mov
adc
push
loopne
mov
sahf
aas
xchg
sbb
iret
cmc
(bad)
les
jo
shl
icebp
jns
cmps
repnz
into
rcr
rcr
pop
sbb
loopne
test
push
imul
pop
bound
std
xchg
adc
or
pop
js
cwde
jb
cmp
test
loope
jb
inc
mov
xor
out
and
cmp
cmp
xchg
jle
pop
adc
dec
cli
sbb
and
sub
or
mov
inc
dec
jl
add
ins
inc
int
mov
sbb
cmp
push
popf
int3
repnz
fwait
xchg
fs
aaa
ss
(bad)
(bad)
retf
adc
ja
sub
xchg
sub
xchg
add
std
pop
mov
out
repz
aas
fst
xor
mov
mov
imul
inc
cli
and
shl
pop
cmps
add
addr16
fst
or
test
fisttp
mov
sub
pop
rcl
mov
lahf
ins
cmp
daa
push
dec
inc
pop
mov
mov
mov
sahf
lahf
xor
jmp
jmp
lds
mov
or
retf
jno
adc
ds
add
jecxz
test
mov
mov
mov
repnz
pop
cmc
dec
push
and
mov
mov
leave
cmc
cmp
add
icebp
add
lahf
cli
lods
cmp
mov
jno
push
sub
ret
lods
jne
sub
in
lock
xchg
ja
adc
retf
push
mov
fsubr
pop
sbb
imul
in
jno
inc
mov
imul
push
dec
repz
fldenv
arpl
sub
jmp
xor
push
pop
into
adc
jp
jno
pop
scas
cmps
call
xor
sub
jle
outs
adc
cmp
imul
or
mov
pop
jp
(bad)
adc
pusha
enter
imul
arpl
retf
sub
ins
lea
sbb
xchg
ret
into
sbb
mov
(bad)
and
xor
xchg
aas
lods
lods
mov
not
dec
dec
xchg
push
sub
mov
cld
dec
in
xor
test
inc
or
rol
push
xchg
es
push
xchg
mov
cwde
fidivr
retf
or
dec
mov
fwait
hlt
pop
add
jecxz
mov
inc
and
movs
mov
popa
fsub
stos
dec
test
lods
std
xor
add
movs
or
mov
in
xchg
aaa
sbb
push
in
jmp
sbb
add
xchg
fnsave
push
sub
and
cmc
push
mov
add
out
jno
adc
sub
mov
jmp
leave
add
scas
pop
std
sub
xor
ret
xor
ss
jmp
test
lahf
mov
out
enter
jle
and
aam
mov
popf
mov
sub
add
and
mov
push
(bad)
mov
ret
cmps
adc
add
xchg
imul
sub
pop
mov
iret
loopne
jge
jbe
test
mov
cmp
or
xor
scas
lock
mov
xor
sbb
sub
sbb
sti
daa
mov
daa
ds
or
mov
or
mov
out
inc
ins
scas
std
in
xchg
sbb
sub
mov
imul
push
jno
sub
loop
stc
(bad)
sub
adc
scas
pop
pop
js
cdq
cmp
clc
jecxz
mov
mov
and
inc
out
(bad)
outs
inc
or
cwde
adc
scas
dec
xlat
xor
mov
test
mov
dec
out
jno
mov
retf
xchg
ds
sub
out
mov
pop
(bad)
adc
push
cmp
mov
minps
or
lods
inc
xchg
jne
mov
aad
pop
jp
loop
adc
repnz
je
cmps
iret
shr
into
pop
daa
sbb
and
or
and
push
or
or
sub
jmp
or
or
sbb
into
cmp
retf
adc
lahf
ficomp
ss
dec
and
mov
shr
or
in
scas
and
mov
push
add
pushf
jnp
push
adc
imul
sti
aam
dec
sub
adc
bound
pop
and
loopne
xchg
test
xchg
or
and
xor
jp
xor
cmp
push
inc
pop
aad
outs
test
push
jl
jle
add
or
imul
fwait
or
stc
test
fdiv
in
dec
dec
and
pop
jmp
bound
clc
xor
and
pop
mov
add
inc
inc
mov
xchg
inc
ret
sbb
pop
(bad)
les
ficom
add
sub
and
rcr
(bad)
adc
aaa
inc
push
scas
jns
inc
mov
hlt
stc
mov
mov
sub
jle
cmps
sub
test
jne
(bad)
retf
xchg
push
ret
dec
add
push
sub
iret
xor
xor
xor
inc
scas
inc
sub
xchg
adc
sbb
cmp
push
inc
bound
xchg
(bad)
in
jge
mov
or
or
shl
pop
ds
cmp
mov
xor
bound
pminsw
lea
sub
dec
and
std
lods
mov
in
repz
sbb
and
leave
jnp
adc
ror
stos
lea
repz
mov
sub
pop
mov
jg
in
and
(bad)
lods
add
cwde
push
mov
push
cmp
or
pop
aas
push
or
dec
aam
push
pop
mov
aad
inc
add
push
cmp
jecxz
test
(bad)
je
inc
rcl
sbb
push
adc
jmp
pop
popa
and
push
cmps
push
jne
sub
mov
sar
add
sbb
pop
pop
mov
mov
ja
test
cmp
pop
sub
loopne
scas
or
cli
sbb
bound
xchg
dec
adc
mov
push
adc
xchg
fild
xchg
sub
or
les
pop
popa
mov
stos
or
jge
ja
(bad)
ins
push
cwde
push
add
jns
jmp
dec
jle
mov
mov
addr16
cmp
mov
sbb
sbb
cdq
push
push
jecxz
jle
into
jbe
sub
cs
lds
and
lods
ins
inc
push
(bad)
lds
jg
dec
cmp
xor
sbb
jecxz
dec
test
push
sbb
xchg
daa
mov
lea
xchg
dec
imul
ds
retf
or
mov
ins
cmps
movs
aad
push
mov
stos
xor
pop
mov
sub
jne
sar
shl
ja
sub
push
jnp
jnp
test
add
mov
nop
pop
cld
push
call
and
xchg
sbb
dec
js
icebp
mul
xchg
sub
out
test
ds
jns
and
stos
or
add
xor
sysenter
inc
jnp
cmp
loope
or
scas
(bad)
and
push
arpl
mov
sub
imul
mov
mov
pop
loopne
inc
mov
or
in
movs
add
stos
imul
push
test
xor
mov
add
xor
or
mov
or
cmp
push
int3
(bad)
mov
adc
outs
sub
leave
pop
and
repz
pop
push
pop
(bad)
mov
ds
out
imul
mov
fisub
add
cmp
mov
cdq
jno
sar
jns
cmps
fwait
cli
in
jns
ins
in
popf
sbb
mov
xor
call
(bad)
test
or
or
mov
jg
jno
dec
inc
test
popa
jne
inc
ror
mov
shl
cmp
jge
cmp
push
jge
sahf
stos
popf
fdiv
cmps
mov
sti
jl
sbb
je
dec
int
xchg
xor
jmp
pushf
adc
xlat
jl
sub
sub
inc
movs
loope
pop
daa
mov
sub
push
push
and
push
aam
mov
add
sub
jne
shl
stc
mov
(bad)
js
inc
jecxz
gs
jl
adc
cmp
repz
out
xor
xchg
popa
ins
and
cli
push
dec
cmp
mov
adc
iret
bound
hlt
rcl
or
push
sbb
mov
stc
cmps
inc
test
lods
cmp
pop
ins
into
sti
test
jbe
mov
lahf
div
loope
sbb
mov
sub
(bad)
jmp
hlt
int
xor
sub
mov
mov
mov
xchg
jmp
cmp
push
out
stos
inc
jbe
(bad)
(bad)
adc
jns
mov
cmps
add
fst
push
push
and
call
pop
enter
jecxz
mov
pop
cmp
xchg
xor
in
pop
adc
mov
lods
clc
fcomp
lods
in
sbb
stc
sub
ret
rcr
mov
test
movsx
xor
imul
fnsave
mov
pop
cwde
inc
pop
mov
(bad)
jmp
pusha
loop
mov
test
ja
inc
cli
xchg
jns
pusha
lea
fcomp
fisttp
push
push
in
mov
lods
add
rcr
fwait
hlt
repnz
cmp
js
push
call
add
in
dec
hlt
sbb
dec
mov
sti
popf
mov
fsubr
call
popf
push
rep
dec
add
scas
pop
or
imul
pusha
xchg
fst
sbb
in
mov
cmp
xor
(bad)
xor
add
(bad)
test
jl
in
sub
mov
jne
call
cmp
xlat
ss
popf
xor
movs
hlt
lock
shl
test
mov
push
ror
mov
xchg
inc
push
test
push
cli
or
movs
adc
jl
lea
rcl
push
xor
sbb
fisttp
aas
or
inc
cmp
in
mov
sub
rcl
imul
pop
out
pop
out
adc
pop
sub
mov
jmp
add
bound
ret
mov
div
pop
call
inc
and
cld
aas
imul
imul
int
test
adc
add
or
push
inc
and
out
shl
nop
push
(bad)
fcomip
and
nop
jl
fwait
mov
js
sti
in
clc
xchg
(bad)
or
fs
pminub
push
dec
into
push
cmp
stos
(bad)
stc
xor
stc
pushf
cmp
shl
dec
jmp
xor
and
cmp
sub
push
cmc
repz
lock
mov
or
das
repnz
hlt
mov
jmp
pop
(bad)
pop
adc
int
cmp
inc
jge
lods
loopne
out
xchg
dec
sahf
in
test
stos
mov
ds
add
and
pop
cmp
stc
add
inc
add
push
jge
loop
dec
mov
sbb
mov
and
cmp
mov
outs
imul
cli
in
cmp
and
adc
xlat
popa
push
adc
lods
push
int3
movs
jmp
push
cwde
mov
sbb
adc
mov
add
or
dec
xor
bound
movs
pop
lock
out
inc
push
in
add
aad
ins
push
fcom
cmp
mov
dec
popf
mov
(bad)
lods
sbb
sar
jecxz
dec
stos
imul
(bad)
jne
cmp
mov
dec
or
jge
daa
dec
bound
call
xchg
push
jne
jns
in
inc
jmp
inc
jmp
hlt
test
sub
sbb
xchg
repnz
cld
sbb
(bad)
mov
das
adc
cmp
mov
ins
aam
in
sub
mov
les
repz
push
rcr
mov
into
lock
fnstsw
dec
mov
retf
cmp
xor
stc
xor
mov
sub
xchg
mov
mov
jg
pop
cmp
retf
mov
adc
mov
push
dec
out
mov
inc
dec
clc
pop
push
or
sbb
repnz
mov
xor
call
mov
inc
gs
sub
arpl
cwde
cmp
rcl
and
xor
jp
imul
inc
xor
jg
stc
cld
sbb
pushf
lahf
aaa
jbe
ss
out
pop
mov
adc
add
in
lahf
iret
jnp
push
xchg
add
pop
aaa
scas
dec
out
mov
out
shl
dec
imul
dec
fs
inc
inc
xor
inc
fld
xchg
mov
(bad)
mov
stos
inc
cmp
ins
int
es
jae
push
dec
inc
sbb
test
test
inc
jb
push
test
sbb
lock
sti
xor
push
or
addr16
loop
ja
add
jb
cmp
in
aaa
cmp
lds
popa
in
mov
push
push
(bad)
xchg
push
mov
mov
mov
(bad)
pop
mov
inc
int3
pop
test
cs
data16
xlat
mov
lods
ds
push
dec
pop
fsubr
stc
lods
stos
add
jne
ret
outs
fs
mov
inc
push
cmp
jae
sbb
shr
add
inc
(bad)
cmp
pop
into
jl
push
or
(bad)
jnp
xor
mov
int
xchg
push
sub
and
push
rcr
div
(bad)
dec
push
jg
mov
sbb
nop
out
push
mov
(bad)
or
jo
repnz
in
aaa
int3
dec
jp
loopne
mov
and
push
aam
repz
pop
fwait
adc
lea
jg
repz
test
or
adc
test
shl
fs
dec
pushf
bound
ret
scas
xor
jge
mov
pop
dec
push
pop
mov
lea
outs
cmc
rol
lods
or
icebp
jb
mov
and
adc
lds
pop
or
push
cwde
loop
(bad)
jne
xchg
addr16
push
lea
dec
test
adc
iret
pop
nop
not
fistp
cmp
or
pop
xchg
je
mov
inc
inc
ins
push
test
popf
xor
push
stos
dec
retf
pop
hlt
sub
bound
das
imul
cmps
add
lods
stos
sbb
pop
call
adc
and
icebp
sbb
cmp
dec
icebp
add
push
cmc
or
xchg
popa
cld
std
aad
hlt
pop
dec
(bad)
cmp
mov
cmp
or
out
inc
xor
or
add
xor
add
jb
aad
push
call
dec
xchg
es
inc
add
xor
aad
in
pop
jbe
mov
aas
jl
sysexit
in
jns
loope
loop
ds
push
mov
jmp
ror
out
outs
mov
test
sub
push
add
inc
call
pop
inc
sbb
add
stc
bound
shr
mov
sub
into
xchg
xchg
int
das
dec
push
pop
add
or
std
mov
adc
or
lods
adc
and
pop
adc
loop
mov
mov
push
dec
xchg
lods
xor
dec
in
push
retf
cld
xor
fdivr
(bad)
or
push
xchg
push
pop
stos
mov
das
dec
cmps
ja
or
cdq
adc
ret
mov
xchg
pop
je
lock
lea
pop
jo
push
in
pop
xchg
xchg
mov
sub
or
sbb
ss
mov
loopne
fdiv
jns
or
push
bnd
ffreep
lods
mov
stos
jne
out
sub
shr
mov
test
inc
cmp
dec
xadd
sub
pop
cmc
adc
pop
cmp
lea
adc
mov
or
or
iret
mov
call
je
and
fisttp
cmc
rcr
aas
inc
jne
fcom
mov
inc
sbb
pop
push
(bad)
or
out
xchg
mov
je
sar
js
mov
je
adc
push
fucomip
push
retf
(bad)
xlat
mov
fwait
lea
mov
mov
jmp
ret
mov
aas
loope
xchg
in
dec
ja
jg
loop
call
(bad)
repz
sar
dec
ss
pop
shl
add
add
pmaddwd
fisubr
scas
push
je
fist
and
lahf
lods
shr
inc
(bad)
cmp
pop
mov
pop
jg
stc
popf
ss
xor
xor
(bad)
stc
psubsw
mov
xor
ret
aad
movs
inc
inc
ret
arpl
ret
daa
movs
and
sbb
pop
fwait
repz
in
cli
call
cld
or
mov
dec
jnp
jne
test
push
fistp
sbb
xor
int3
retf
lds
and
out
sti
sub
out
or
ror
lds
fstp
(bad)
(bad)
add
push
adc
mov
test
push
inc
jns
mov
jno
inc
jg
xor
sbb
inc
mov
lock
in
idiv
sbb
mov
add
dec
xlat
out
fwait
xchg
and
mov
sbb
cli
push
or
push
inc
into
cmp
cmp
xchg
or
add
jno
or
jecxz
inc
fild
xchg
jmp
mov
xchg
xor
or
shl
addr16
fidiv
jmp
invd
movs
test
into
fsub
inc
es
mov
les
cmp
xchg
pop
mov
shl
call
adc
mov
xchg
mov
inc
out
mov
mov
out
jbe
retf
mov
out
imul
mov
aam
dec
push
mov
or
push
push
add
mov
cmp
mov
clc
scas
inc
push
(bad)
xor
pop
pop
(bad)
fcom
mov
imul
mov
or
lahf
mov
clc
icebp
retf
shl
or
jecxz
push
ret
inc
mov
and
jl
mov
mov
jmp
xor
rol
(bad)
cmp
int3
xor
sbb
push
mov
je
(bad)
mov
out
pushf
not
adc
xchg
ins
inc
fs
movs
dec
movs
cli
add
loop
mov
inc
inc
inc
pop
pop
cld
loopne
scas
pop
jnp
xchg
inc
mov
xchg
outs
jo
or
sub
inc
sub
repz
popa
(bad)
jo
inc
dec
xchg
nop
jl
je
cmp
fisubr
push
gs
test
in
add
sbb
loope
stos
js
inc
push
xlat
xor
mov
stos
jnp
xchg
mov
lock
xor
mov
mov
out
pop
xor
push
out
adc
call
jb
jge
shl
and
inc
neg
neg
stc
dec
xlat
icebp
jle
in
sub
inc
fbstp
add
rol
shl
call
pop
call
lea
out
daa
repnz
pop
mov
fdivr
jmp
daa
pusha
mov
adc
jl
mov
scas
jge
dec
mov
or
daa
xchg
or
push
fist
outs
push
pop
outs
repz
loop
mov
call
popf
sti
dec
leave
enter
cmc
popa
mov
add
jae
pusha
inc
stos
mov
int
das
mov
mov
cmp
adc
rcr
cmps
inc
or
sbb
aam
or
inc
shr
or
pop
repnz
pushf
sbb
mov
mov
fst
jne
out
leave
call
(bad)
ror
(bad)
popa
std
into
repnz
and
clc
(bad)
iret
xchg
xchg
push
sbb
icebp
lock
sbb
cmp
cmp
and
mov
mov
lock
cmps
bound
or
ins
aad
mov
loop
sahf
popf
(bad)
cmps
call
xor
aas
mov
add
fs
xchg
push
scas
sbb
adc
cmc
iret
pushf
mov
cmps
jbe
mov
mov
push
jg
adc
clc
int3
xchg
cmps
and
repz
pop
adc
jmp
adc
std
ins
lods
pop
cmp
lods
test
push
or
and
and
fsub
js
pop
push
enter
xlat
xchg
dec
mov
div
and
jg
popf
adc
mov
jbe
sub
add
jl
movs
mov
std
in
cmps
jl
xchg
sbb
xor
cmc
in
daa
hlt
and
sbb
add
jmp
lods
mov
icebp
and
inc
fwait
push
cmp
jl
cmc
pop
ficomp
add
jns
mov
and
add
ss
adc
fnstenv
and
nop
push
cld
(bad)
jmp
pop
daa
ja
pop
cmp
sbb
sti
jne
xchg
cmp
lahf
jecxz
retf
pop
es
rcl
int
jl
cmp
add
fstp
cmp
add
pushf
mov
(bad)
cmp
sbb
sbb
fnstsw
or
in
mov
out
das
movs
rcl
test
shl
retf
sub
stos
fs
push
pop
add
loop
mov
enter
ss
loop
pushf
push
dec
adc
bound
mov
cmps
push
dec
mov
aam
jo
sub
mov
mov
and
dec
mov
pop
in
std
call
int
and
sbb
aaa
shl
ret
shl
(bad)
sar
pop
aas
jmp
retf
imul
dec
push
sbb
add
mov
xchg
stc
cmps
mov
push
sub
jp
dec
popa
dec
test
xlat
pushf
xor
and
call
test
xchg
ja
daa
js
add
adc
nop
mov
xchg
test
inc
lods
sbb
ret
jmp
mov
mov
dec
imul
gs
outs
push
retf
fsub
ja
repnz
push
inc
inc
adc
aas
add
adc
push
rcl
inc
mov
int
mov
mov
loope
loopne
loope
pop
push
in
shr
mov
lea
out
into
mov
mov
repz
paddd
sub
out
cwde
lds
xchg
push
add
mov
jns
je
fadd
dec
sbb
add
out
xchg
or
js
inc
dec
cli
pusha
mov
jg
into
es
je
js
(bad)
jno
jge
rcl
dec
jecxz
test
pop
retf
lods
and
pop
aaa
push
loop
jp
mov
rcr
(bad)
jo
sar
xor
movs
mov
movs
lds
mov
js
imul
dec
mov
ins
sbb
jmp
lds
in
div
cmc
add
jge
scas
xchg
add
push
stos
push
push
push
pushf
inc
inc
jmp
mov
ja
test
push
sub
cli
mov
lahf
(bad)
repz
jne
call
adc
dec
sub
outs
sub
(bad)
retf
add
or
mov
push
push
and
xchg
sbb
rcl
lock
sbb
popa
jecxz
(bad)
ror
push
dec
js
in
cmp
mov
mov
cs
retf
adc
js
jb
jmp
iret
repz
fisubr
fistp
int3
int
fsub
or
test
inc
gs
push
ja
sub
xor
in
xchg
cmovs
jb
out
vpslld
push
loope
pop
xchg
sahf
daa
in
pop
dec
sub
loopne
out
outs
nop
sti
jl
int3
retf
(bad)
cmp
jg
adc
jns
push
mov
pop
xchg
add
addr16
dec
stc
jnp
mov
ins
pop
imul
sti
and
jae
ret
dec
push
push
push
js
jmp
sub
test
mov
cwde
inc
mov
fsubr
mov
sti
or
dec
add
ret
imul
aaa
in
jne
and
cmc
mov
dec
xlat
cld
adc
test
jge
fistp
sub
jg
xor
mov
xlat
mov
std
dec
pop
add
ret
jmp
add
mov
stc
test
std
stc
mov
lahf
xchg
xchg
in
stos
adc
jns
shl
imul
dec
pop
or
clc
cmps
(bad)
jmp
push
xchg
inc
enter
dec
sar
fstp
sub
adc
lahf
repnz
lods
popf
adc
rcl
ror
sbb
mov
mov
mov
mov
xchg
dec
and
mov
test
fidivr
or
or
mov
mov
test
cld
push
cld
lea
rol
pusha
int3
shl
inc
rol
ret
ror
das
and
mov
jo
(bad)
fist
cld
pop
hlt
out
data16
jmp
cs
xchg
je
in
xlat
xor
xor
push
neg
loopne
lds
and
xor
leave
jmp
push
ret
sub
mov
enter
ret
and
xchg
xchg
out
sub
push
sub
pop
cmp
outs
mov
dec
repnz
sub
stos
jl
(bad)
mov
mov
mov
inc
or
shr
sbb
xchg
mov
add
xor
mov
pop
cmp
pop
or
xchg
pop
jl
add
nop
inc
sti
fist
lahf
cmp
cmp
or
or
xchg
popf
imul
mov
(bad)
jo
sub
sub
aas
push
in
mov
dec
mov
(bad)
xchg
arpl
xor
xlat
lock
pop
jg
push
rol
jl
aad
pusha
fisubr
sub
sbb
mov
lds
pop
add
hlt
or
push
sbb
sbb
nop
pop
stos
lods
jp
js
in
movs
sub
mov
loope
outs
nop
pop
add
jmp
cld
xchg
mov
add
gs
mov
movs
jae
enter
xor
dec
fld
cwde
jns
mov
enter
(bad)
jmp
in
mov
bound
dec
bound
or
jb
cs
jne
jg
jmp
imul
leave
daa
adc
xor
addr16
outs
cmps
cld
js
cmp
fs
mov
mov
daa
cdq
out
cmp
std
shr
xchg
and
dec
loop
scas
mov
adc
pop
xchg
sti
xor
cwde
es
cmp
out
call
out
out
inc
shl
mov
test
stos
in
std
icebp
xor
inc
rol
mov
add
mov
xchg
dec
and
push
adc
or
add
pop
lock
aaa
leave
xchg
jmp
mov
ins
and
push
push
lock
inc
cld
stc
out
cdq
sbb
jns
int
ja
dec
mov
retf
jg
or
clc
xor
jg
add
dec
xchg
adc
cmp
mov
sbb
mov
mov
mov
int3
ja
sahf
sub
test
xor
outs
(bad)
(bad)
je
add
aam
jmp
shl
stos
ficom
loop
aad
iret
mov
ins
lods
aad
add
jb
xor
cmp
sbb
fld
xor
cmp
(bad)
pop
sub
xor
cmps
xor
lahf
push
ror
jae
inc
mov
push
add
nop
pop
sbb
popf
jo
jmp
out
fisttp
sub
mov
mov
sub
cmp
xacquire
mov
sub
out
and
sbb
cmps
ds
inc
mov
in
jnp
or
(bad)
xchg
repnz
into
or
aaa
adc
mov
add
aaa
push
imul
call
stos
scas
xor
aaa
aas
js
pop
cmp
sub
inc
jo
mov
out
int
popf
inc
retf
jbe
loope
and
jae
sub
push
fist
adc
or
lods
jnp
pusha
or
cwde
and
mov
call
push
add
clc
xchg
daa
pop
retf
fsubr
inc
xor
sub
fs
std
imul
imul
jno
out
pop
or
or
aas
adc
adc
or
outs
mov
jb
iret
out
sub
fsub
push
mov
test
xchg
jg
nop
fbstp
xchg
(bad)
inc
fdiv
js
in
mov
xlat
push
leave
les
mov
rcr
mov
inc
stos
(bad)
jnp
and
mov
scas
xor
mov
ins
pop
cmps
lds
aaa
(bad)
inc
jae
push
in
aas
mov
pop
jg
xor
and
add
cmp
fadd
clc
stos
jmp
stos
hlt
cmp
nop
and
and
je
jp
xor
fsub
and
pop
int3
pop
mov
je
into
sbb
push
stos
fsub
js
bound
jb
pop
push
cmc
mov
aad
loope
jo
mov
popa
xor
dec
dec
fyl2xp1
xchg
push
nop
mov
lahf
cmc
push
cwde
into
mov
push
pop
clc
inc
jnp
rep
pop
xor
or
ins
scas
int
add
dec
nop
fmul
inc
xchg
aaa
pop
call
inc
jmp
push
imul
retf
cs
sub
aas
sbb
outs
outs
test
cmps
jmp
hlt
sub
test
sbb
pop
adc
fisub
sub
mov
sub
inc
cs
inc
fdivr
and
out
cmp
and
jge
push
in
mov
ficom
and
or
jle
xor
or
mov
(bad)
test
sbb
std
rcr
and
mov
std
mov
sub
retf
ret
dec
jb
pop
sbb
sar
xor
inc
add
pusha
clc
inc
addr16
pop
ror
loopne
arpl
jnp
popa
add
out
test
fcomp
inc
jne
dec
mov
push
sub
imul
es
imul
jne
sbb
mov
loopne
push
enter
pusha
mov
inc
gs
test
or
loope
pop
mov
pop
mov
fiadd
popa
jb
test
mov
xor
lods
inc
sti
loope
lods
adc
dec
shl
xor
inc
stos
xadd
xor
and
jne
jno
mov
aaa
mov
popa
ficom
sahf
out
jne
dec
push
cmp
cmp
aam
test
push
mov
in
push
and
adc
pop
push
rcl
push
sbb
inc
int3
mov
jmp
nop
scas
xor
stos
sbb
xor
aaa
push
adc
out
add
aaa
jno
mov
add
inc
mov
mov
dec
(bad)
aaa
lock
inc
sub
jo
and
xor
aaa
ds
xchg
in
outs
inc
div
push
mov
pop
jl
jmp
sbb
cwd
idiv
(bad)
adc
mov
add
mov
jae
jecxz
iret
js
daa
jnp
and
movs
jecxz
or
inc
hlt
xchg
popf
mov
mov
mov
cmp
addr16
and
jb
or
repnz
call
xchg
push
push
arpl
xchg
fcomp
nop
dec
jmp
shl
xchg
sub
inc
sub
std
ja
fwait
outs
mov
add
imul
cmp
dec
xchg
dec
push
jne
and
adc
cmc
inc
jnp
push
(bad)
loope
sbb
pop
mov
cmp
arpl
mov
mov
mov
dec
imul
pop
dec
adc
test
loop
dec
adc
test
out
hlt
fnsave
mov
test
sub
(bad)
cdq
pop
dec
jmp
shr
dec
adc
and
push
loopne
pop
xchg
bound
push
or
aas
js
loope
or
pop
jg
sub
mov
xor
mov
(bad)
mov
imul
mov
clc
in
int
dec
add
cmp
aaa
lea
adc
mov
mov
push
push
cmp
daa
cmp
stos
dec
jne
fmul
xor
lods
test
and
(bad)
adc
mov
add
sbb
sub
mov
xchg
pushf
movs
adc
mov
inc
(bad)
arpl
outs
push
or
sub
adc
and
adc
inc
aad
(bad)
stos
and
jno
jns
arpl
lds
fwait
pusha
test
pop
mov
test
push
das
stos
call
push
add
inc
or
mov
and
cmps
add
imul
push
rol
mov
xor
aas
inc
push
xor
popa
xchg
retf
mov
mov
call
cdq
cwde
jecxz
fs
xchg
std
adc
or
jecxz
jbe
xchg
mov
dec
xchg
xchg
adc
and
pop
adc
sub
fldenv
stos
mov
dec
inc
mov
ss
xchg
mov
add
inc
push
cli
xchg
pop
xor
lds
mov
nop
sbb
dec
inc
push
inc
lds
jno
test
repz
jl
(bad)
add
add
push
mov
or
vpcmpgtq
les
inc
shl
into
mov
inc
xor
lahf
mov
test
cmps
pusha
jbe
mov
lea
inc
add
jle
les
inc
and
inc
add
test
or
jmp
mov
add
add
ins
mov
sahf
push
es
dec
adc
and
test
repz
fadd
jb
mov
sbb
xchg
jbe
pop
aas
bound
iret
jl
setno
dec
and
daa
mov
les
and
outs
mov
inc
rcr
data16
or
lods
movs
fldenv
add
outs
push
lds
add
retf
xor
sbb
sbb
loopne
test
repnz
enter
xlat
lahf
inc
sahf
sbb
cmps
jmp
sbb
les
popa
retf
pop
mov
push
pop
cmp
sub
and
std
movs
push
pop
or
sub
cmps
cmp
and
lods
mov
(bad)
cs
or
(bad)
jg
mov
mov
sbb
retf
mov
jmp
cmc
cs
repz
pop
loopne
stos
(bad)
dec
or
sbb
inc
loop
mov
push
xchg
push
fnstsw
mov
shl
jne
retf
mov
loop
sbb
arpl
xchg
jmp
push
call
icebp
add
js
pusha
pop
div
add
pop
les
pop
mov
repnz
pop
xor
xchg
push
xchg
sti
jne
stc
std
pusha
xor
dec
sahf
or
ss
into
call
sub
int3
push
outs
(bad)
aas
sub
in
arpl
out
repnz
push
mov
mov
xchg
test
sbb
jbe
pop
mov
sar
pop
out
and
stos
dec
ins
xchg
(bad)
fidiv
and
call
push
sbb
adc
nop
sar
imul
xchg
hlt
pop
jo
inc
js
fmul
inc
jbe
jae
lahf
int3
bound
cs
mov
sub
mul
dec
sub
dec
movs
in
es
shl
clc
mov
fisubr
pop
mov
icebp
inc
iret
push
std
addr16
aad
shl
xor
(bad)
xor
pop
ins
pop
dec
and
dec
arpl
out
mov
jge
mov
push
ss
jno
loopne
xor
lods
ror
xchg
xor
stos
(bad)
rcl
mov
stos
stos
inc
or
ja
dec
aaa
stos
test
inc
inc
je
adc
cmps
fidiv
popa
adc
lods
jns
pop
lock
in
mov
cmp
xor
pop
mov
sbb
imul
call
push
out
xchg
daa
fist
fldcw
sahf
dec
test
and
jl
pusha
mov
and
mov
mov
xchg
sbb
push
call
out
push
inc
imul
sub
inc
xchg
cmp
inc
inc
xor
lods
std
retf
aas
sub
sbb
rcr
push
mov
or
inc
popf
dec
(bad)
jnp
cwde
out
cmps
(bad)
adc
jge
push
(bad)
call
loope
xchg
inc
push
add
jb
popf
lds
inc
jecxz
popf
(bad)
push
cmp
mov
out
fs
stos
out
and
pop
sti
cwde
jmp
mov
popw
popf
mov
pushf
cmp
out
adc
mov
clc
sub
ins
fnsave
arpl
xor
loopne
(bad)
and
les
add
adc
push
inc
mul
mov
add
adc
and
rol
jo
data16
lahf
out
sub
dec
out
sti
movs
lods
mov
mov
sub
test
dec
push
or
out
pushf
imul
bswap
xchg
lods
loope
and
ins
add
jbe
dec
push
data16
and
wrmsr
jns
adc
jne
pop
call
fnstcw
push
mov
je
sub
inc
je
sahf
out
imul
(bad)
test
lods
ret
test
mov
loop
test
call
das
stos
xchg
scas
xor
pop
sbb
es
call
(bad)
icebp
mov
sub
dec
retf
addr16
enter
int3
arpl
sbb
ja
std
mov
lods
mov
fcom
cmps
enter
cmp
cmp
push
jb
cli
pop
dec
(bad)
into
pop
cli
inc
push
push
push
inc
push
les
cmc
mov
fild
loop
xchg
or
mov
stos
xor
rcr
xlat
pop
cmp
fcmovb
scas
not
add
call
fdivp
adc
pop
push
leave
loope
movs
push
jecxz
ror
add
iret
push
les
pop
in
xchg
ret
add
daa
call
fsubr
pop
dec
repnz
push
dec
ret
ret
cwde
sar
retf
pop
push
lds
sbb
jb
xchg
sbb
inc
cwde
push
mov
(bad)
dec
(bad)
cmp
and
(bad)
xchg
or
xchg
test
xchg
sub
ret
js
add
mov
mov
inc
in
mov
adc
sub
shl
sub
inc
push
adc
(bad)
aad
ja
out
repz
movs
(bad)
xor
sub
mov
sar
retf
sbb
shl
imul
stos
and
xor
jl
dec
ins
(bad)
(bad)
imul
arpl
adc
xor
idiv
ret
xchg
mov
repnz
inc
xchg
dec
sub
mov
in
(bad)
(bad)
xor
pop
loopne
jmp
push
and
push
and
cdq
test
cmc
mov
dec
mov
dec
mov
pop
pop
cs
mov
lods
xchg
shr
xchg
ins
sbb
mov
and
fnsave
push
(bad)
ror
call
push
ins
les
and
mov
mov
fsub
ins
out
inc
xor
hlt
je
mov
shr
stos
adc
ins
enter
pushf
ins
pushf
mov
es
cmp
add
push
cmc
mov
(bad)
xor
sub
inc
push
pop
(bad)
jl
mov
pop
mov
push
add
fild
call
adc
movs
jg
inc
jp
inc
inc
(bad)
lods
stc
mov
xor
pop
js
imul
pop
mov
cmc
jmp
(bad)
xchg
mov
sbb
aaa
pop
in
dec
scas
xchg
xor
rol
rol
sub
push
mov
or
jne
or
aad
adc
or
(bad)
pop
cmp
and
lahf
test
xchg
mov
mov
lahf
dec
les
mov
jns
es
clc
mov
push
fidiv
stos
aaa
pop
mov
out
leave
xor
xchg
mov
popf
mov
add
sahf
std
ja
jb
aam
int3
aas
shl
mov
sub
jne
data16
jmp
stos
push
sub
push
nop
xlat
and
dec
inc
push
jbe
les
mov
iret
pop
pop
rcr
retf
mov
cs
cmp
out
mov
add
stc
fisubr
mov
out
sub
cmp
xor
cvtps2pi
fwait
lahf
bound
xor
push
jle
outs
loopne
xchg
aas
inc
aad
movs
imul
dec
shr
adc
loopne
out
fimul
es
shr
hlt
cmps
iret
inc
test
sub
mov
or
cwde
add
std
test
pop
test
ret
and
cmp
xchg
push
inc
pop
and
or
outs
push
xchg
clc
adc
ja
mov
pop
add
loopne
fdiv
sar
test
in
in
pusha
add
(bad)
ins
(bad)
mov
sub
stos
out
lahf
in
shl
add
push
cmp
pop
(bad)
rol
jo
hlt
lds
fstp
inc
icebp
int
retf
js
mov
test
sbb
xchg
icebp
(bad)
fist
aas
daa
je
push
aam
cmp
push
fwait
jle
inc
xchg
sub
push
dec
mov
jbe
and
imul
cmp
ret
adc
mov
push
sbb
jae
int3
popf
push
arpl
xchg
jmp
xchg
fst
cmp
pop
shl
mov
ret
outs
xlat
adc
or
mov
in
adc
cmp
sbb
inc
fisubr
(bad)
test
or
pop
add
jecxz
jl
jg
sbb
rcr
aas
jmp
or
jb
scas
ficom
mov
xchg
jmp
daa
retf
test
ror
retf
scas
adc
jle
out
mov
out
jno
aas
pushf
je
xchg
jne
mov
cli
inc
test
sahf
mov
stos
ss
mov
xor
mov
shl
repz
mov
test
inc
add
or
fcmovnbe
pop
ins
dec
out
xchg
mov
test
pop
xchg
inc
mov
stos
dec
ins
and
mov
adc
cmps
into
rcr
sbb
pop
daa
mov
push
fbld
pop
mov
prefetch
ins
call
cs
pop
xlat
fs
inc
inc
jne
jb
sub
adc
or
and
jecxz
outs
and
jp
or
mov
nop
mov
pop
and
pop
push
nop
arpl
jge
adc
xor
out
xchg
xchg
daa
jge
mov
jae
cdq
and
jg
jg
ret
inc
sahf
mov
or
jnp
es
mov
sub
push
mov
stos
fnstenv
mov
pop
cwde
sbb
aaa
retf
ds
push
ins
test
adc
addr16
lea
pop
sub
dec
cld
adc
mov
loop
pop
int3
sbb
xor
mov
jl
adc
push
ret
clc
retf
aam
sti
mov
xchg
cmp
enter
fist
mov
cmp
(bad)
int3
pop
aad
push
sub
in
or
das
lock
sub
sbb
adc
fist
out
mov
sbb
cmp
retf
xchg
and
imul
cmps
jno
lods
inc
xchg
add
mov
xchg
(bad)
ja
stos
fnstenv
enter
and
lea
mov
cmc
ins
fs
and
jnp
xor
xor
mov
push
and
sbb
pusha
out
fsubr
jge
into
xor
mov
adc
ret
stc
cmp
and
mov
xor
jge
jge
xor
jns
shr
mov
ret
dec
imul
dec
mov
pop
jg
(bad)
jecxz
jle
xchg
or
jg
out
mov
dec
and
loopne
imul
popa
xchg
clc
rol
ja
or
mov
xchg
adc
outs
adc
jbe
cmps
sub
pusha
out
and
jecxz
fwait
and
xchg
add
or
mov
dec
jno
xor
push
push
clc
jg
adc
mov
push
cmp
addr16
sbb
test
xchg
jmp
lods
retf
shl
dec
shl
add
fadd
add
mov
sbb
test
jno
lods
mov
popf
repz
sub
add
and
sub
repz
int3
aad
fisttp
push
or
inc
xor
stos
lods
stos
jmp
and
pop
rcr
js
mov
fbstp
fbld
scas
jmp
ins
int3
dec
and
fnstsw
int
stos
clc
dec
pop
jb
or
sub
test
nop
or
iret
xchg
pop
cmp
inc
push
cmp
cmp
lock
lods
push
repz
adc
and
dec
jl
sbb
cdq
xchg
xchg
add
imul
stos
test
lods
push
sar
xor
(bad)
or
loop
stc
loop
inc
cmp
retf
push
push
icebp
xchg
push
stos
dec
add
call
pop
push
fidiv
add
cmp
ins
aas
push
pop
push
imul
sahf
or
sub
adc
repnz
cmp
mov
jno
out
lds
and
cmp
mov
dec
jae
aas
pop
jne
or
push
xchg
jno
(bad)
inc
movs
jae
inc
or
jno
mov
jae
loop
jg
stc
repz
pop
fwait
stos
(bad)
fimul
add
rcpps
cld
jb
and
pop
out
push
inc
mov
retf
ds
fst
dec
mov
stos
loope
sbb
test
push
je
or
(bad)
cmp
wbinvd
cmp
sub
mov
lds
stos
xor
out
inc
(bad)
out
test
push
mov
mov
xchg
aaa
xor
mov
mov
(bad)
test
sub
fwait
push
push
enter
mov
leave
sahf
(bad)
(bad)
push
xor
loopne
jae
sbb
iret
loope
push
nop
rol
test
add
pop
dec
dec
adc
push
and
push
cli
mov
mov
test
xor
ss
outs
xor
outs
inc
test
rol
fld
cs
dec
jle
outs
pop
mov
(bad)
or
push
test
out
adc
outs
js
push
push
scas
loope
stos
jo
cmps
retf
sub
js
pop
retf
enter
mov
fwait
push
push
pushf
xchg
ret
in
aad
shr
je
jecxz
push
dec
xchg
hlt
jb
loope
ret
test
sbb
int3
hlt
repz
cmps
aas
inc
les
stc
imul
mov
sbb
imul
xchg
or
mov
adc
(bad)
mov
(bad)
jl
int3
arpl
adc
xchg
dec
daa
xchg
out
sti
movs
mov
(bad)
fs
js
loope
sbb
and
jnp
lods
or
cmc
cmps
pop
les
ucomiss
gs
mov
(bad)
jl
fisttp
pusha
retf
push
push
pusha
inc
out
dec
add
pop
sahf
mov
mov
push
jmp
(bad)
mov
xlat
mov
mov
movs
mov
fs
lahf
mov
mov
out
add
test
jbe
xor
cdq
inc
jg
push
ficom
repz
ror
jbe
clc
loop
pop
rcl
bound
iret
pop
call
(bad)
fs
les
cmc
loope
(bad)
loopne
inc
ret
sub
dec
imul
ret
(bad)
fwait
dec
(bad)
mov
int
xchg
aam
sub
call
push
sbb
jbe
xlat
dec
(bad)
pop
xchg
ret
xchg
in
jmp
sub
aaa
call
repnz
sar
jecxz
out
push
adc
jbe
repnz
adc
mov
mov
in
std
test
jge
aam
es
in
adc
fld
sub
adc
or
loop
and
dec
dec
push
mov
scas
cmps
cdq
sbb
lea
add
or
adc
cwde
jge
pushf
and
push
jmp
mov
and
xor
clc
lods
gs
jl
pop
jae
test
pushf
fadd
dec
(bad)
xor
jge
jmp
(bad)
ins
jnp
xor
xor
xchg
sub
xchg
(bad)
push
mov
xchg
call
sbb
out
hlt
popf
test
vpsubsw
dec
add
jae
inc
sub
or
retf
outs
xchg
cli
and
ins
xchg
xor
dec
mov
lock
mov
add
adc
les
pop
cmp
aam
call
call
pop
inc
dec
push
xor
arpl
popf
repz
arpl
fld
cld
scas
or
stc
jle
shr
rcl
inc
sub
shr
ror
pop
fstp
imul
daa
out
mov
fs
hlt
push
cmp
sub
movs
pusha
cld
sub
fst
cmp
jbe
stc
enter
inc
rcl
sbb
fsub
ret
xchg
movs
mov
mov
repnz
jbe
inc
dec
or
popa
mov
push
ficom
sbb
xchg
pop
cmp
push
js
sbb
or
and
jo
sbb
dec
call
fcmovnbe
sub
cmp
mov
mov
scas
(bad)
fnstenv
xchg
out
imul
lods
xor
int
pop
ss
lea
jmp
sbb
les
push
fisttp
sbb
fstp
sub
or
inc
fucom
xchg
mov
push
int3
movs
and
pushf
loopne
andps
lds
pop
mov
jmp
dec
pop
test
sub
mov
fwait
iret
cmp
lock
shl
sub
inc
retf
xchg
in
jns
pop
add
or
push
fldenv
out
cmp
stos
lds
xor
push
inc
dec
jg
jns
fwait
or
adc
scas
and
or
xor
pop
xor
sub
or
out
fiadd
pop
shl
jb
das
adc
pop
(bad)
je
pop
sub
mul
mov
and
sbb
or
cmp
movs
push
adc
fisttp
ja
ja
outs
add
xor
push
daa
fisubr
test
ja
and
je
sub
mov
mov
je
js
bound
das
leave
jge
in
xor
mov
dec
mov
xchg
repnz
sub
and
xchg
and
sub
mov
scas
ror
out
push
jb
sub
mov
fadd
push
(bad)
mov
or
ins
fild
inc
fs
pop
sbb
stos
adc
out
inc
sbb
test
xchg
arpl
daa
(bad)
popf
jl
shl
jmp
push
std
xchg
pop
movs
movs
jmp
fcomp
in
and
neg
call
test
adc
cmp
pop
xor
andps
cs
aad
iret
ret
lds
xor
retf
sub
dec
pop
add
pop
add
cwde
mov
(bad)
outs
adc
jle
mov
sub
adc
shr
jne
out
xor
mov
pop
mov
jnp
popa
ret
clc
not
cmp
mov
repnz
adc
xcrypt-cfb
cmps
mov
mov
(bad)
mov
popf
push
test
push
cmp
xchg
stc
test
in
aam
xchg
cmp
mov
pop
test
push
cmp
stos
adc
inc
mov
int3
stos
pop
sar
sbb
pop
cdq
pop
dec
mov
cmp
ja
icebp
jns
lods
(bad)
mov
mov
fcom
ds
xchg
lock
adc
data16
arpl
ret
sub
jns
push
idiv
or
(bad)
leave
push
mov
enter
test
cmc
or
dec
sbb
rcl
pop
and
cld
les
and
push
dec
cmp
iret
mov
and
ds
gs
cmps
das
retf
cs
sbb
add
add
movs
xor
(bad)
jnp
jns
loope
jl
or
xchg
jbe
xor
nop
adc
xor
dec
cmc
dec
imul
push
jecxz
retf
ret
jmp
cmp
pop
pop
mov
mov
jns
std
add
adc
dec
call
inc
in
sar
and
cld
ret
xchg
test
cwde
out
jno
es
add
sti
cmp
scas
test
rcl
pop
adc
dec
mov
add
inc
xchg
xor
jno
sub
or
adc
out
not
inc
dec
pusha
mov
pop
lea
bound
mov
dec
sub
cdq
fwait
in
jg
cld
sbb
inc
dec
int
and
mov
movs
out
xchg
sbb
and
pushf
cs
mov
repnz
(bad)
aaa
mov
sbb
cld
jbe
mov
push
out
inc
cs
aas
nop
jl
into
(bad)
mov
pop
pushf
mov
mov
dec
sbb
inc
fsubr
pop
add
adc
dec
fs
sub
ja
leave
loop
jg
or
dec
out
outs
and
push
out
and
mov
jg
push
mov
fsub
mov
inc
fldenv
jmp
jno
dec
test
(bad)
je
xchg
mul
addr16
dec
outs
xchg
adc
dec
mov
push
aam
add
call
pop
hlt
push
mov
xchg
or
fistp
add
aad
int3
cmp
or
(bad)
(bad)
pop
cmp
retf
add
mov
mov
jne
dec
xor
gs
mov
out
jo
pusha
dec
jg
pop
out
fbld
push
adc
sub
sub
jne
jmp
scas
mov
icebp
mov
arpl
clc
xchg
xchg
or
aad
js
push
xchg
and
retf
adc
mov
push
lahf
jo
jp
mov
shr
cmps
outs
mov
add
jle
jmp
test
shl
push
pop
daa
popf
mov
push
push
sbb
mov
xchg
pop
stos
xor
push
push
sbb
sub
cwde
hlt
ror
add
mov
das
(bad)
popf
and
mov
mov
push
lds
fadd
sbb
xchg
or
in
cmp
push
sbb
push
ja
rcl
(bad)
in
sub
or
mov
ja
lea
lock
push
movs
aas
scas
xchg
pushf
sub
mov
push
jns
sbb
in
pop
(bad)
jne
(bad)
push
and
sbb
xchg
cdq
sbb
mov
loop
daa
xor
xchg
push
xchg
(bad)
retf
test
cmp
cmp
aas
stc
enter
inc
and
scas
or
in
out
je
into
loopne
and
xchg
xchg
or
jg
fs
add
stos
xchg
push
cmp
cmp
cmp
(bad)
retf
add
pop
push
xor
jl
mov
push
jb
jo
jne
call
mov
das
aad
idiv
mov
xchg
outs
out
dec
or
ret
and
mov
out
or
(bad)
fsubr
ja
test
inc
mov
rol
rcl
inc
add
jo
pop
jl
nop
sbb
stc
dec
out
js
jge
or
or
push
popa
add
pop
push
movs
xor
jecxz
and
mov
mov
inc
out
(bad)
pop
imul
sub
cwde
push
mov
mov
or
pop
or
push
lods
bound
xor
mov
jmp
xor
shl
and
(bad)
xchg
fisttp
add
fdivr
lds
or
sbb
jmp
cwde
sar
pop
mov
sti
and
xor
ret
or
mov
xchg
xchg
ins
cmps
fld
(bad)
cmps
mov
or
dec
mov
sbb
jb
clc
je
es
or
cmp
in
les
out
stos
fidiv
fdiv
mov
mov
scas
sub
mov
(bad)
sub
lods
and
dec
daa
adc
dec
inc
(bad)
fnstsw
ret
sub
out
ret
fimul
lds
cmp
cmc
lds
out
dec
pop
dec
add
fwait
and
hlt
ins
lds
push
and
in
repz
popf
enter
and
je
arpl
push
std
loope
jnp
cmp
int3
ss
jns
gs
xor
in
ret
inc
fldenv
jg
sbb
fld
lock
adc
adc
jbe
dec
out
xchg
(bad)
js
and
jb
push
xor
pop
mov
scas
mov
call
xchg
mov
push
dec
cmp
sbb
cs
sub
popf
or
out
repz
test
add
dec
clc
scas
mov
std
das
inc
mov
pop
pushf
int
or
cmc
inc
inc
in
jmp
xchg
mov
enter
jl
enter
addr16
sbb
push
call
mov
pop
in
test
mov
and
jmp
fld
ins
add
into
mov
(bad)
sbb
cmp
jge
add
xor
pop
add
dec
(bad)
es
out
xor
xor
dec
pop
adc
fsub
shr
scas
jno
pop
xor
clc
mov
ds
fs
outs
or
rcl
movs
pop
pop
scas
dec
push
mul
cmps
sub
pop
hlt
nop
(bad)
xchg
xchg
(bad)
clc
std
adc
ret
jb
or
mov
jno
popf
mov
jp
push
fist
(bad)
sti
iret
push
jp
mov
cld
outs
add
pop
and
shl
sahf
in
out
mov
(bad)
pop
ins
or
movs
push
pop
jb
inc
ins
fdivr
and
sbb
push
mov
mov
jmp
push
inc
dec
jl
push
loop
jno
xor
inc
jns
sub
stc
sbb
adc
mov
(bad)
push
push
(bad)
cmp
fidivr
je
int3
mov
and
ds
imul
inc
push
imul
adc
loope
jbe
fsubr
and
icebp
imul
cmp
fadd
shr
mov
bound
xor
push
pop
jg
ror
mov
mov
pop
outs
jmp
jnp
sar
sbb
adc
xor
mov
pop
sub
xchg
les
outs
lds
cli
or
fmul
mov
mov
adc
mov
movs
fild
loope
xchg
repz
xchg
hlt
mov
retf
adc
push
aam
rep
fild
pop
pop
mov
icebp
call
stos
add
xchg
in
fsubr
(bad)
push
ins
fs
pop
sub
fbld
mov
icebp
hlt
cmp
and
push
and
inc
popa
aad
lds
mov
cmps
cmps
pop
bnd
std
xchg
movs
xor
js
es
stos
cmp
xchg
and
xor
sar
jb
ds
cwde
and
push
jns
aaa
xchg
out
push
outs
and
outs
pop
xchg
pop
push
(bad)
aam
ret
pop
mov
imul
cs
add
cmp
stc
mov
std
sti
es
and
pop
hlt
cmp
je
fisub
retf
push
bnd
jb
sub
popf
gs
sbb
cmp
repz
ins
and
push
shl
pushf
xor
cmp
adc
int
aam
aad
in
xlat
adc
ss
sub
outs
imul
sub
dec
jns
mov
test
xchg
adc
mov
mov
pop
pop
add
fcom
ins
dec
je
mov
push
push
nop
(bad)
in
xchg
stc
mov
mov
push
cmp
xor
jne
add
(bad)
ss
stos
and
mov
mov
mov
inc
pop
dec
xchg
jle
sub
jle
out
sbb
cld
mov
retf
scas
retf
adc
jp
pop
push
mov
fbld
and
ins
push
stc
fild
stos
inc
push
jmp
sbb
outs
mov
cli
mov
push
push
push
bound
dec
std
shr
mov
nop
lock
aaa
test
cdq
loop
adc
jmp
fs
stos
ss
mov
xor
popf
daa
adc
mov
jge
in
sub
inc
dec
xchg
rcl
(bad)
or
adc
rcr
pop
inc
sub
cwde
retf
push
fs
scas
adc
fistp
inc
pop
jno
bound
lods
sbb
push
scas
addr16
outs
gs
inc
(bad)
test
pushf
neg
hlt
or
or
add
test
ficomp
adc
push
idiv
in
loopne
aam
das
in
ss
ffree
pop
xor
rcr
ins
scas
cmp
jle
cmp
ins
jo
xor
lods
fcomp
mov
sbb
adc
rcr
jge
scas
xchg
mov
mov
mov
sti
out
adc
cmps
test
es
mov
out
shr
mov
push
aaa
jge
push
daa
cmp
addr16
test
cmps
dec
pop
scas
push
mov
call
add
mov
mov
or
jp
push
(bad)
mov
(bad)
out
xchg
push
inc
sub
push
movs
jmp
pop
daa
pop
sub
inc
loopne
cli
jge
scas
xchg
aaa
add
pop
mov
add
(bad)
fwait
popf
mov
mov
in
rcr
aas
xor
in
sub
and
test
mov
push
ins
hlt
stos
fstp
or
loope
inc
mov
ja
or
xchg
or
cmp
movs
cdq
mov
into
mov
mov
fs
push
dec
cwde
in
into
es
jmp
sub
sbb
adc
pop
iret
pop
mov
pusha
dec
mov
retf
outs
jle
mov
and
out
outs
jnp
xchg
mov
cmp
fiadd
mov
sar
cli
pop
adc
mov
cmps
js
inc
xchg
clc
dec
ins
mov
sub
mov
cmps
pop
outs
ds
mov
sub
test
data16
and
cmps
lds
arpl
or
retf
cdq
ja
jmp
mov
mov
stos
adc
aas
inc
xor
pop
lahf
dec
and
dec
(bad)
ror
call
jb
adc
test
xor
push
aam
ret
lods
inc
aam
push
ret
pop
xchg
rcl
jg
or
dec
push
je
out
cwde
rol
add
pushw
and
adc
adc
push
xchg
mov
stos
or
xor
sub
out
fcmovnb
fwait
mov
retf
pop
(bad)
stos
adc
lahf
les
mov
sub
adc
sub
mov
jle
fs
fwait
jmp
(bad)
pushf
into
out
stc
inc
mov
mov
inc
shr
xor
ins
or
xor
sub
mov
shr
std
mov
push
or
mov
cmp
enter
test
cmp
test
pop
inc
or
(bad)
into
add
pushf
push
mov
ffree
mov
mov
xor
popf
lods
mov
nop
mov
inc
push
stos
mov
in
dec
out
push
xchg
pavgw
int
mov
mov
push
test
sbb
jecxz
bound
mov
psubsb
or
mov
mov
call
enter
shl
xor
jmp
xchg
and
popf
sub
mov
jle
ja
rcr
dec
into
jle
test
(bad)
repz
icebp
cmp
aaa
mov
sbb
ins
xchg
mov
dec
sbb
ss
js
out
add
test
cdq
dec
mov
test
in
movs
rdmsr
retf
icebp
test
xchg
push
std
ret
call
in
sbb
push
(bad)
mov
add
cli
rcr
dec
push
mov
leave
pop
mov
sub
push
retf
cmps
fnstcw
inc
pop
jmp
xchg
push
or
cmp
sub
ins
fs
mov
leave
stos
stos
pop
xchg
lahf
jmp
jg
inc
imul
aaa
dec
xchg
xor
push
ja
cmc
ins
push
cmp
fst
in
cmp
sub
xchg
jmp
inc
mov
add
movs
push
push
imul
xchg
rcr
mov
dec
dec
xchg
inc
dec
push
outs
in
loopne
jne
and
xor
push
xor
test
mov
mov
xchg
aad
xchg
cmp
xchg
push
add
add
jp
xlat
sti
fld
pusha
mov
mov
pusha
push
mov
(bad)
dec
push
fwait
test
sbb
addr16
jl
sub
aad
cmps
mov
fwait
sub
bound
push
scas
sub
mov
push
lods
jg
sub
adc
cwde
hlt
pop
add
xor
daa
enter
addr16
lahf
jnp
push
loopne
push
neg
les
icebp
sub
outs
sub
scas
std
(bad)
test
mov
and
out
out
faddp
add
repz
stos
xchg
int
dec
add
out
sub
add
test
sbb
sub
jg
dec
sar
movs
test
dec
cmp
sbb
and
adc
fs
sti
mov
sub
rol
es
loopne
push
imul
adc
imul
mov
mov
test
dec
xor
xchg
imul
mov
dec
es
fcomp
(bad)
int
stos
pop
out
mov
stos
ficom
xchg
bound
mov
inc
cmp
fwait
out
cmc
rcl
out
dec
out
mov
sub
iret
ret
mov
mov
push
push
aas
adc
int3
sub
jno
mov
rcl
scas
(bad)
fist
(bad)
push
(bad)
outs
add
fwait
cli
sub
(bad)
in
cmp
xchg
leave
scas
pusha
and
arpl
rcr
ret
jbe
les
xchg
in
int
(bad)
retf
mov
and
inc
inc
icebp
cs
and
cmp
mov
ds
loop
or
ret
lock
(bad)
pop
daa
daa
jo
dec
pop
xchg
mov
shr
xor
dec
adc
inc
call
xchg
mov
adc
retf
js
(bad)
(bad)
jo
xchg
ret
daa
push
mov
loope
dec
fidivr
mov
mov
dec
pop
xchg
cmc
adc
fidiv
scas
dec
xchg
cli
and
xor
test
and
inc
sahf
in
xchg
sbb
mov
sbb
mov
retf
sub
add
jl
add
push
les
pop
rcl
add
retf
pushf
out
rcr
inc
shr
push
pop
dec
mov
into
(bad)
lock
sub
rol
int
leave
dec
enter
mov
pusha
xor
bound
sbb
retf
nop
mov
iret
push
dec
mov
pop
adc
and
xchg
pop
add
add
jns
push
sub
dec
std
(bad)
shl
mov
fisubr
pop
icebp
scas
mov
arpl
fmul
call
inc
stos
or
jb
and
mov
dec
(bad)
fsubr
int3
inc
jnp
(bad)
jmp
xor
not
sub
(bad)
loope
jge
dec
mov
push
sub
ins
pop
inc
cmp
mov
xchg
mov
(bad)
fdiv
mov
or
(bad)
and
cmp
(bad)
movs
test
cld
jnp
not
ds
rcr
inc
repnz
loop
je
mov
xor
xor
shl
cmps
arpl
mov
lods
stos
std
mov
popf
jo
bnd
shl
arpl
in
mov
push
dec
fimul
mov
lea
pop
cmp
shr
xchg
mov
push
retf
pusha
pop
shl
add
xchg
retf
sbb
shr
daa
repnz
and
and
push
mov
iret
(bad)
in
ret
ins
mov
test
dec
in
imul
scas
cmp
cmp
aaa
xor
push
xchg
mov
jo
sub
jb
shl
or
jle
add
cmps
fidiv
sahf
(bad)
adc
sub
add
cmp
dec
jo
out
add
enter
mov
test
icebp
cmp
outs
sub
js
gs
test
mov
shl
hlt
addr16
push
xor
test
mov
jbe
jmp
mov
jb
retf
mov
dec
arpl
call
xor
iret
jbe
fadd
sub
mov
dec
cmp
mov
add
ja
adc
mov
sub
aad
fsub
mov
hlt
dec
data16
(bad)
fbstp
xchg
jne
and
pop
out
aaa
ret
aad
cli
mov
lea
inc
mov
test
push
and
call
xchg
push
aas
mov
sub
xchg
shl
pop
mov
add
mov
sbb
mov
loope
out
push
fsubrp
or
xor
xchg
pop
adc
xor
mov
aad
cmc
mov
dec
push
sub
mov
cmp
jmp
ins
pop
rol
and
cld
pop
xor
xlat
out
cld
mov
je
cmp
repz
xchg
xchg
xchg
std
cmp
adc
and
add
inc
dec
jg
shl
adc
shl
xor
stc
xchg
cmp
cmp
push
addr16
popf
stc
jg
lock
mov
push
out
sbb
mov
push
ins
inc
mov
dec
xchg
push
mov
addr16
or
shl
lods
mov
test
push
test
adc
mov
outs
cwde
nop
and
mov
push
int
movs
int
jnp
xchg
clc
das
mov
xchg
nop
mov
aas
test
push
xchg
push
or
sub
cwde
adc
ins
cli
mov
(bad)
xor
in
gs
cmp
sar
fwait
jle
xchg
aaa
jg
mov
xor
inc
jbe
loope
xor
mov
daa
sub
sar
(bad)
daa
popa
sbb
cwde
cmps
les
cmp
inc
xchg
loopne
xor
dec
jnp
add
cdq
push
pushf
xchg
inc
daa
fwait
jp
push
dec
or
out
xchg
mov
jb
sbb
push
add
pop
push
xchg
stos
xor
(bad)
mov
out
into
stc
jbe
pop
inc
lods
(bad)
sub
mov
ins
popa
shr
aas
jmp
notrack
std
xchg
xchg
stos
jno
mov
loope
sahf
dec
xchg
lods
es
lods
std
xor
fldln2
or
add
sbb
fidiv
outs
scas
mov
or
push
packssdw
lds
or
mov
sbb
add
mov
mov
mov
into
test
dec
sbb
retf
add
movs
stc
mov
cmp
mov
jns
std
push
ret
pushf
mov
xchg
fsubr
ret
mov
adc
(bad)
cmovle
mov
mov
int
cmp
adc
pop
scas
lods
xor
lahf
adc
sub
test
jns
inc
movs
jae
pushf
push
lahf
and
and
add
scas
into
bound
retf
shr
pop
dec
pop
pop
fldcw
jno
jecxz
sbb
test
xor
out
jo
or
fnsetpm(287
sub
push
ins
xor
mov
push
xchg
fld
pop
mov
and
mov
xlat
ja
in
mov
retf
pop
sbb
jp
pop
call
ret
pushf
inc
mov
out
out
push
(bad)
in
daa
jb
sub
cmp
and
scas
loopne
mov
test
sbb
and
push
cwde
scas
ins
rol
xor
adc
dec
fldcw
or
sbb
jge
jmp
sbb
mov
sbb
into
mov
sar
(bad)
clc
xlat
fcom
mov
add
sbb
dec
rol
ins
xchg
dec
pop
push
adc
stc
shr
std
dec
inc
gs
xchg
cmp
mov
cmps
cmp
retf
fistp
inc
jb
repz
mov
mov
retf
jb
cmps
pop
jns
cmp
inc
mov
dec
push
sbb
dec
add
fucomip
jmp
gs
dec
fbstp
sub
inc
push
imul
inc
fld
xlat
push
xor
sbb
sbb
inc
and
sbb
mov
pop
call
dec
cmc
scas
test
movs
outs
in
mov
add
xchg
or
mov
cmp
mov
mov
mov
mov
inc
shr
bound
cmp
jmp
repz
fucomi
in
dec
movs
pop
pop
outs
jne
cmp
cmps
clc
pop
inc
and
retf
push
or
icebp
mov
xor
aad
jns
push
fs
dec
or
das
adc
les
xor
imul
jl
dec
mov
test
test
rcr
cld
fs
clc
xchg
das
out
or
mov
fisubr
cli
or
adc
xor
(bad)
cmc
cwde
outs
mov
ja
mov
in
es
and
adc
jmp
cmp
push
lods
jo
mov
hlt
fist
imul
dec
dec
aam
sub
sub
dec
les
push
mov
test
or
fistp
nop
sahf
adc
and
xchg
stos
stc
xor
lock
sub
(bad)
clc
aas
cli
ret
aaa
add
add
jnp
into
xor
idiv
rcr
mov
adc
xchg
push
add
push
ror
cmp
neg
jg
stos
sar
fcom
call
cmp
cwde
(bad)
loopne
and
ins
jmp
inc
arpl
or
push
xchg
ror
jecxz
shl
xor
test
retf
retf
cmp
jp
push
add
outs
dec
cdq
not
sti
push
retf
movs
lds
xor
test
or
cmps
popa
(bad)
xchg
add
mov
sub
or
cmps
ss
sbb
lock
add
das
ss
add
fcomp
int
lods
je
xchg
inc
or
push
(bad)
push
call
mov
std
dec
inc
aad
aas
(bad)
clc
and
mov
add
jecxz
in
mov
pop
ins
pop
sub
mov
adc
dec
add
and
cmp
mov
arpl
mov
in
pop
int3
daa
push
retf
aad
ss
jno
sub
imul
mov
retf
test
jle
aas
call
test
test
cmp
adc
mov
sbb
fdivp
das
sar
mov
jae
adc
sub
adc
in
mov
int3
mov
push
adc
xor
inc
call
fs
jl
int
adc
adc
mov
stc
icebp
ins
outs
inc
shl
pop
xchg
push
xchg
movs
test
retf
pop
push
pop
stc
jp
or
mov
cs
lods
mov
push
sahf
xchg
cmp
aaa
into
pop
cli
and
(bad)
gs
sbb
cmp
popf
pop
out
dec
jae
add
sbb
fisub
sbb
into
ficomp
cmc
and
lods
adc
in
pop
jnp
mov
ss
fild
dec
aam
pop
xchg
pop
test
mov
mov
push
pop
sbb
dec
jne
push
sub
mov
xor
sti
repz
push
(bad)
jnp
mov
pop
mov
dec
sar
push
nop
cwde
pop
cmp
fnsave
xor
cld
xor
ss
xchg
inc
xchg
call
or
dec
cmps
or
mov
std
aam
(bad)
sti
lds
push
mov
mov
fisubr
icebp
test
mov
mov
inc
or
test
xor
ret
push
inc
iret
or
dec
pop
or
out
sar
fdiv
(bad)
mov
je
xchg
mov
xor
xor
add
dec
mov
loop
mov
jbe
enter
ret
outs
(bad)
loopne
(bad)
jmp
fimul
dec
xor
adc
sbb
jecxz
mov
loop
adc
ret
mov
jp
adc
and
loopne
add
inc
ret
test
add
les
xchg
add
xchg
and
sti
test
out
mov
push
retf
and
sbb
or
push
aad
add
xor
outs
leave
or
sub
fimul
nop
inc
test
loop
adc
sub
xchg
cmps
mov
std
int3
ins
cmp
adc
dec
call
cs
sbb
jmp
ret
aad
test
jmp
inc
lock
mov
dec
dec
sbb
outs
xor
fnstenv
dec
daa
pop
test
sub
or
add
(bad)
int
dec
das
push
ror
outs
xchg
sahf
stos
dec
dec
es
jl
repnz
std
inc
les
mov
cli
ror
test
ss
or
ins
jnp
dec
lods
push
dec
test
movs
mov
pop
fiadd
xor
pop
jne
out
repnz
pop
mov
xchg
jg
scas
inc
adc
mov
stos
fstp
inc
push
or
cwde
out
jno
shr
sub
call
xlat
retf
or
inc
ins
mov
inc
push
cdq
dec
dec
pop
icebp
xor
add
dec
xchg
lea
push
loop
retf
test
imul
push
xor
fistp
cld
loopne
inc
mov
test
aad
add
or
scas
inc
cwde
push
outs
xchg
scas
push
std
mov
test
leave
mov
neg
sub
pop
jmp
outs
je
std
sbb
sub
scas
int
push
or
inc
paddusw
je
call
cmp
mov
pop
psubb
fs
rol
stos
inc
bound
outs
leave
add
sbb
in
mov
xor
retf
dec
xchg
jae
(bad)
xor
inc
outs
jne
ins
in
mov
pop
jmp
add
and
cs
pop
test
aas
push
bound
nop
adc
mov
mov
mov
fnstsw
pusha
scas
cmp
jo
mov
into
pusha
push
ficomp
daa
dec
(bad)
popf
push
test
push
cmp
xchg
or
mov
out
mov
mov
jg
scas
test
xor
test
adc
mul
push
dec
mov
sbb
xor
push
out
out
cmp
sahf
test
inc
mov
sbb
lods
or
adc
mov
out
fild
dec
out
gs
div
adc
retf
loope
sub
cmp
lahf
(bad)
call
dec
and
dec
sti
(bad)
ds
movs
in
rcl
outs
loop
stos
cld
pop
add
shl
mov
inc
mov
retf
pop
fcom
and
cwde
jmp
scas
outs
data16
int3
mov
dec
add
and
cdq
xor
hlt
fwait
leave
mov
push
sub
pop
enter
popa
(bad)
and
int3
inc
mov
inc
dec
sub
xchg
xlat
mov
fidivr
aad
loope
sbb
ds
xchg
jnp
sub
movs
jmp
adc
or
lea
out
nop
cs
shl
popa
add
idiv
or
out
lods
sbb
sbb
int3
and
imul
adc
aam
mov
addr16
jle
and
cmp
adc
sbb
ror
dec
(bad)
stc
and
stos
mov
cmp
push
sub
and
mov
and
cmp
fdivr
dec
mov
fisub
movs
hlt
(bad)
cmc
sbb
sub
inc
bnd
jno
cmp
je
mov
pusha
and
or
jmp
add
push
daa
dec
arpl
cli
inc
sbb
mov
push
push
nop
add
adc
jns
call
xchg
scas
cmp
test
inc
mov
lds
cmps
mov
nop
outs
call
test
es
cli
xrstors
push
mov
cdq
push
lahf
jmp
out
and
lds
xor
adc
pusha
sbb
mov
sbb
cmp
lods
xor
stc
dec
sbb
shl
scas
mov
test
sbb
mov
loop
outs
fnsave
add
dec
dec
nop
sub
test
xchg
pop
push
int
out
aaa
lea
fsub
fiadd
lea
retf
dec
sub
out
jmp
and
push
xchg
dec
cmp
sub
fsubr
es
xchg
adc
daa
(bad)
js
pop
cmp
leave
cld
bound
mov
movs
sar
adc
adc
and
mov
mov
lock
(bad)
sbb
in
sbb
fild
adc
mov
div
out
dec
mov
mov
dec
or
sar
lock
push
daa
dec
lods
das
ja
stos
inc
std
fisubr
mov
lahf
push
sbb
pusha
inc
add
push
out
bswap
xor
mov
mov
pop
cmp
mov
bound
adc
cmp
stos
retf
mov
shr
int3
je
mov
mov
fcmovbe
or
loopne
daa
mov
jae
call
leave
mov
mov
sbb
mov
mov
(bad)
rol
sub
inc
lds
enter
rcr
xchg
leave
pop
popf
pop
data16
leave
retf
mov
sub
and
push
(bad)
pop
aas
push
pop
imul
adc
push
imul
in
jb
sahf
or
inc
ds
popf
popf
adc
and
bound
xchg
inc
arpl
lods
inc
push
jmp
dec
sub
jp
jbe
loope
or
push
and
mov
adc
xor
and
sbb
cs
ret
loope
mul
stc
lds
mov
mov
test
loope
and
cwde
adc
xor
gs
cmp
and
ja
or
and
pusha
js
cmp
mov
jo
pop
ror
sbb
pop
add
fisub
std
xor
fst
pop
pop
(bad)
xlat
pop
xchg
and
pop
jmp
es
push
lods
lods
rcl
cmp
ja
push
cmp
mov
mov
in
push
in
and
mov
dec
ins
repz
xor
std
mov
call
xlat
hlt
loope
out
lahf
jae
sbb
loop
and
ret
in
ins
imul
xlat
push
(bad)
dec
mov
jae
xchg
xchg
inc
out
(bad)
jmp
loop
in
xor
loop
sti
cmps
retf
jp
clc
xchg
adc
setp
into
sub
sub
ins
scas
sbb
sti
jbe
xor
and
fmul
mov
dec
int3
mov
arpl
push
lods
dec
or
ret
ins
sub
and
stos
or
in
inc
inc
sub
aas
es
aas
into
stos
cmp
mov
mov
xchg
adc
lds
ror
inc
js
sub
fwait
jmp
sbb
adc
add
adc
imul
ds
cmp
bswap
cmp
sub
scas
pop
nop
mov
sar
mov
cs
(bad)
dec
scas
ja
(bad)
or
loopne
fcom
jecxz
pop
adc
js
jle
push
or
inc
les
jmp
inc
jge
adc
ficomp
les
dec
inc
push
call
mov
jl
adc
sar
mov
inc
clc
jns
pop
test
mov
adc
scas
test
mov
fnstsw
nop
scas
xchg
push
sti
mov
mov
retf
sub
cdq
cld
fstp
data16
movs
or
pop
and
xchg
inc
ins
daa
xor
dec
mov
xchg
add
retf
das
idiv
inc
mov
push
ja
retf
(bad)
scas
mov
fisub
(bad)
lea
mov
push
adc
push
add
or
sub
xchg
pop
and
shl
es
cmp
mov
cmp
ror
das
mov
push
push
and
push
pop
jg
push
lods
cmps
or
cmp
inc
xor
xor
xor
ret
xor
repz
loope
mov
(bad)
xchg
sbb
jo
into
xor
loope
shr
sbb
icebp
repz
mov
push
push
vmovntpd
xor
xor
jno
inc
loope
cmp
push
jg
jmp
out
inc
and
xor
push
out
or
imul
ja
inc
cmp
into
push
scas
rcr
push
or
hlt
mov
mov
inc
and
je
inc
test
(bad)
xchg
out
stos
data16
mov
xchg
lods
retf
out
or
inc
dec
gs
frstpm(287
cmp
(bad)
xchg
ss
xlat
push
sbb
sub
outs
sub
addr16
scas
cmps
test
scas
mov
push
iret
leave
inc
push
push
pushf
add
cdq
pop
push
jp
pop
push
and
push
cs
push
popa
mov
mov
ins
shl
retf
push
retf
or
fcomp
mov
sub
cmc
xchg
ja
leave
into
mov
aad
xor
fdivr
in
adc
push
and
loop
rcr
loopne
retf
push
push
jnp
(bad)
cld
pushf
shl
arpl
test
iret
data16
and
in
outs
pushw
sar
inc
push
jmp
fidivr
bound
and
imul
adc
fsubr
adc
mov
cmps
das
mov
pop
mov
inc
fist
dec
push
in
push
sbb
ja
mov
push
push
mov
ins
fimul
sbb
movs
push
xchg
adc
pushf
pop
push
xor
jecxz
cli
add
ficom
inc
dec
(bad)
daa
cmps
dec
inc
xchg
dec
das
mov
arpl
add
cmp
push
add
gs
inc
out
mov
xlat
mov
sub
ins
lods
dec
pop
sub
xchg
mov
cdq
pop
jg
mov
test
and
test
aam
cmovg
fsubr
fiadd
mov
sbb
xchg
and
dec
mov
pop
xor
and
data16
(bad)
adc
and
or
mov
stos
retf
or
aaa
or
fisub
jo
shl
mov
lahf
fidiv
push
pop
leave
and
push
in
dec
sbb
ror
loop
ficomp
cmps
jo
xor
loopne
jmp
lods
lods
(bad)
pop
aad
and
dec
pop
xor
scas
xchg
push
inc
loopne
test
or
shl
std
dec
out
mov
and
add
hlt
loopne
jb
pop
or
add
or
div
adc
fidivr
cmp
or
sub
lds
mov
sub
(bad)
ins
popa
pop
mov
cs
loope
data16
mov
adc
lea
fst
inc
rcr
pop
cmp
stos
xchg
inc
inc
and
aaa
mov
mov
ja
jno
pop
cmps
ror
movs
les
sub
xor
xchg
mov
mov
or
push
fucom
aaa
xchg
bound
enter
lahf
mov
nop
(bad)
in
lods
leave
push
lea
jge
cwde
mov
lahf
call
cwde
pop
ss
xchg
(bad)
adc
cwde
mov
loopne
mov
ss
repnz
mov
in
call
(bad)
imul
jle
cmp
dec
lods
push
xor
mov
pusha
movs
or
adc
and
cwde
mov
mov
dec
jb
les
push
nop
imul
je
out
jbe
jnp
outs
xchg
sti
jne
inc
fimul
dec
popa
push
and
xor
inc
or
scas
sub
add
lock
pop
push
pop
fstp
(bad)
cmp
ret
jno
ja
sbb
mov
movs
leave
mov
add
mov
stc
mov
cmp
xchg
mov
punpcklbw
and
pop
es
mov
add
push
mov
sbb
dec
nop
cwde
cdq
mov
jbe
or
lods
xor
ret
fld
sub
xchg
sub
enter
jmp
dec
push
xor
dec
mov
scas
cld
jmp
xchg
mov
or
loopne
sahf
repnz
pop
add
inc
imul
js
into
mov
adc
aam
mov
mov
lock
fsub
pop
mov
sub
jmp
int
mov
cdq
sbb
jns
xor
and
(bad)
pop
loopne
sub
adc
test
push
fs
ficom
add
xchg
jl
ja
xchg
sti
aas
popf
mov
inc
scas
out
push
pop
jb
stc
xchg
pushf
jl
pop
push
push
inc
int3
xchg
dec
out
lods
ficomp
cmove
int3
xchg
ss
aaa
push
cmps
xor
ds
mov
movs
xchg
sahf
imul
ss
xchg
mov
jns
les
mov
test
mov
mov
xchg
jae
(bad)
jo
and
pusha
jnp
inc
mov
mov
cmp
loopne
pop
addr16
out
test
in
pushf
adc
push
pop
jne
xchg
sub
jbe
ret
mov
adc
mov
aaa
int3
and
stc
je
jp
push
adc
xchg
sub
popf
jae
jae
mov
addr16
and
xchg
mov
jns
call
or
adc
mov
or
retf
ins
loop
test
out
jb
test
jbe
or
add
cmp
cmc
scas
inc
arpl
mov
jecxz
cmp
popf
sbb
xchg
xchg
rcr
xlat
mul
push
arpl
lods
out
sub
(bad)
clc
fmul
and
clc
cli
fnstsw
lahf
dec
adc
sbb
sub
(bad)
mov
push
(bad)
and
push
ret
repnz
adc
leave
mov
mov
dec
icebp
sbb
jmp
es
les
xchg
sahf
aaa
mov
inc
mov
shl
or
or
test
cld
test
push
mov
adc
test
int
in
or
stos
in
dec
loopne
ss
fdiv
pop
adc
ss
ja
cmp
xchg
clc
popf
jp
or
push
cld
cmp
out
dec
push
sti
cmps
mov
jmp
dec
mov
cld
ins
(bad)
push
iret
imul
outs
les
(bad)
rol
add
sbb
fs
or
inc
jbe
pop
mov
lock
pop
mov
sbb
and
cmp
or
inc
ins
std
fild
ja
jmp
aaa
ja
arpl
push
push
repnz
mov
in
test
jecxz
dec
mov
sar
mov
clc
imul
ja
(bad)
(bad)
jno
ins
pop
test
and
add
cwde
mov
jg
das
jno
in
jne
jg
sbb
push
pop
int
sub
sbb
push
mov
and
mov
call
(bad)
imul
in
cdq
out
pushf
fcomp
nop
stos
(bad)
mov
jge
call
xor
mov
push
xchg
inc
adc
(bad)
ja
out
add
(bad)
or
cld
lock
push
fdiv
sbb
adc
and
aam
lods
adc
lods
or
ret
push
js
imul
fnstsw
rcl
xchg
imul
mov
jg
scas
mov
mov
xor
leave
rcr
loop
xor
xlat
xchg
cwde
xchg
xchg
icebp
enter
icebp
mov
dec
or
(bad)
dec
adc
mov
pop
call
cli
pusha
icebp
mov
fiadd
int3
(bad)
jg
fcmovb
and
and
inc
pop
push
push
sbb
cmp
pop
sub
fs
cdq
aam
mov
sbb
mov
pop
repnz
test
fnstsw
aam
test
mov
pop
fst
and
xor
mov
imul
push
mov
aad
and
xchg
xchg
fldcw
hlt
mov
or
call
jecxz
fidiv
add
jb
aas
imul
iret
mov
jo
hlt
es
(bad)
ja
in
adc
or
or
js
push
push
fbld
pop
push
icebp
es
xchg
mov
enter
sub
(bad)
mov
or
aam
jbe
xchg
xor
div
sbb
add
fcmovnb
dec
jle
xlat
movs
sub
xchg
sub
sub
movs
cli
js
jo
sbb
push
stc
adc
mov
jp
dec
call
adc
adc
imul
in
add
jge
dec
pop
out
and
xchg
jno
and
popa
xchg
test
mov
mov
pop
or
shr
adc
dec
mov
pushfw
daa
rcl
popa
test
mov
push
test
pop
cmp
test
es
out
fwait
mov
mov
and
iret
xchg
cmps
push
das
test
(bad)
pop
push
dec
mov
pusha
jge
mov
(bad)
sub
pop
push
fcomp
sub
mov
mov
mov
repnz
pop
or
in
dec
inc
ds
push
mov
popa
add
fs
loope
add
test
mov
mov
adc
es
sub
mov
test
movs
mov
loop
loope
aas
icebp
mov
mov
cmp
pop
fucomi
fmul
adc
push
data16
in
jp
and
mov
leave
fimul
cmp
inc
mov
push
mov
xlat
fsubr
adc
mov
adc
pop
or
aam
jb
push
jle
jb
add
lock
pop
daa
add
mov
and
sbb
test
stc
dec
mov
mov
popf
lea
jne
xchg
movs
push
lahf
icebp
movs
cdq
xor
cld
xchg
cld
aas
int3
and
outs
mov
dec
cdq
mov
es
cmp
mov
sub
adc
mov
and
push
xchg
xor
and
jne
add
cmps
inc
mov
std
xchg
mov
xlat
xor
push
(bad)
push
adc
repz
(bad)
jg
mov
fadd
xor
dec
mov
sub
loopne
rcl
or
mov
loop
leave
cmp
jecxz
(bad)
sub
sahf
iret
outs
xchg
dec
popf
mov
ins
jbe
xor
mov
and
call
aad
fbld
or
repz
test
push
and
push
xchg
sti
mov
inc
cmp
inc
pop
(bad)
jno
(bad)
(bad)
ja
fcomp
cld
stc
lahf
push
aam
dec
mov
popa
test
daa
call
inc
lock
pop
ss
jno
popf
dec
inc
dec
in
xor
xor
icebp
ins
mov
les
add
jno
test
(bad)
iret
jb
ror
xor
cmp
test
rcr
scas
sbb
ins
pop
sub
inc
enter
arpl
loop
rol
leave
fs
sub
enter
adc
push
mov
xor
inc
(bad)
sbb
and
jl
mov
pushf
push
sbb
jo
xchg
ficom
(bad)
in
push
shr
dec
jb
movs
outs
xor
lock
jns
(bad)
or
imul
jge
push
push
xchg
imul
fidivr
scas
dec
cmp
test
xchg
loope
xor
dec
sub
mov
lods
and
mov
or
jl
cmp
push
fistp
sbb
jmp
push
retf
mov
add
mov
fwait
adc
in
(bad)
stc
into
int3
daa
pop
leave
daa
fdivr
push
sti
push
hlt
aad
imul
std
adc
inc
pop
and
cwde
cwde
xlat
jl
push
dec
fdivr
(bad)
cli
inc
mov
pop
dec
pop
int3
inc
mov
mov
sub
mov
inc
sub
mov
enter
cmp
mov
dec
cmps
jnp
std
pop
dec
sbb
(bad)
repnz
scas
enter
pushf
nop
sub
pop
test
mov
cmps
(bad)
sbb
neg
mov
ss
popf
adc
and
dec
std
sub
add
push
push
mov
xor
mov
shl
or
jnp
(bad)
xor
es
jge
gs
sub
mov
mov
mov
mov
call
mov
fisubr
adc
fidivr
movs
dec
dec
pop
cmp
das
push
int3
stos
inc
je
ficomp
fwait
jmp
popf
shl
outs
sub
push
fldcw
add
js
cmp
cmp
inc
xchg
inc
clc
pop
fs
pop
rcl
xchg
enter
in
out
pop
or
loop
movs
mov
test
pop
inc
ins
(bad)
jg
fisttp
ja
mov
cmps
sbb
push
aas
inc
out
mov
sbb
dec
xchg
fild
int
lods
cmp
adc
sbb
shr
out
sar
push
jl
nop
retf
test
ja
pop
jge
fcomp
stc
cmp
pop
mov
mov
mov
fidivr
neg
je
rcl
dec
push
icebp
(bad)
xlat
jp
int
unpcklps
gs
mov
mov
mov
les
mov
add
inc
loopne
and
inc
add
push
xor
ds
fucomip
movs
(bad)
repnz
mov
ins
ret
lds
jo
lea
xor
adc
mov
adc
icebp
mov
add
push
js
ret
pop
add
pop
push
push
push
ins
or
cmp
push
cmps
and
repz
and
addr16
out
push
sbb
cs
ds
scas
jl
std
pop
mov
lds
aaa
cwde
(bad)
fisub
addr16
and
mov
jne
and
popa
xor
mov
push
or
fild
lods
mov
xchg
aad
mov
enter
jne
repnz
inc
imul
icebp
shl
aas
mov
mov
pop
mov
xor
xchg
xchg
fist
adc
xchg
dec
add
mov
mov
mov
and
inc
loopne
popa
pop
ja
cmps
pop
in
push
sti
inc
js
jae
outs
mov
ret
es
cli
mov
push
xlat
jmp
mov
xor
dec
push
loopne
leave
push
and
shr
xchg
xor
mov
lahf
sbb
cmp
dec
adc
clc
hlt
pop
aas
jo
test
push
aad
pop
pop
jecxz
jg
xchg
push
movs
cmps
push
fnstenv
mov
(bad)
jge
cmp
ins
sbb
jecxz
push
and
jbe
mov
lods
sub
push
push
int
add
movs
pop
loop
pushf
out
gs
stos
dec
xchg
rcr
jecxz
loop
cld
add
or
arpl
leave
xchg
test
pop
inc
mov
sbb
cmp
retf
dec
xor
xchg
ss
cld
mov
ins
stos
ja
ret
lock
push
mov
das
fisubr
jmp
xor
pop
adc
(bad)
movs
inc
inc
pop
sub
add
(bad)
cli
sti
data16
sub
push
xchg
ror
sub
shr
cmp
repnz
and
dec
dec
scas
xlat
popf
adc
mov
inc
neg
mov
xor
icebp
xchg
sub
inc
jb
iret
ds
out
adc
jle
add
int3
jecxz
push
inc
lods
lahf
(bad)
cmp
int
mov
mov
hlt
shl
mov
and
xor
int3
fcomp
lods
adc
daa
jle
jns
data16
cmp
(bad)
inc
sub
dec
cmps
div
or
out
add
xchg
push
call
movs
in
data16
or
jne
push
xchg
rcl
rol
das
jp
shl
mov
stc
call
mov
sbb
xchg
dec
and
in
ins
sar
leave
stos
add
fadd
jge
sub
sbb
mov
mov
and
jns
imul
push
out
push
in
jle
popf
push
test
lds
or
xor
jo
inc
test
push
or
cld
shl
xlat
pop
cs
and
adc
cdq
pop
lea
adc
imul
jo
lock
movs
sbb
div
dec
arpl
and
pop
std
test
mov
cld
sbb
push
dec
add
push
sbb
add
xchg
test
lock
imul
cmps
rcr
mov
imul
loopne
adc
jmp
call
cwde
js
xchg
leave
push
test
js
cmp
fstp
mov
or
dec
sub
jg
sahf
retf
push
sbb
lock
(bad)
mov
push
imul
lock
inc
js
movs
dec
pop
movs
fs
and
fcomip
call
nop
cmc
add
mov
add
in
clc
aad
xchg
sub
cmp
jae
push
in
and
outs
enter
cmp
mov
fidivr
push
inc
sbb
jb
ret
sahf
out
sar
syscall
cs
jbe
mov
or
in
in
and
xor
push
add
add
mov
mov
lock
hlt
call
or
rcr
(bad)
fld
lods
ret
mov
sub
std
sub
hlt
jg
jecxz
cmps
pop
jnp
clc
xchg
mov
fstp
xchg
push
inc
jmp
cs
sub
xchg
sub
fmul
cmp
dec
ja
out
adc
test
and
push
(bad)
and
scas
cmp
mov
jle
mov
(bad)
mov
mov
pop
xchg
xchg
push
mov
aas
loop
shl
lahf
pop
pop
fcomp
les
add
sti
mov
lea
pop
imul
arpl
mov
push
dec
data16
int3
pop
inc
push
pop
sub
stc
cmp
in
jo
jns
retf
lahf
mov
sub
cmp
mov
imul
xchg
mov
loope
ja
jo
sar
pop
leave
cmp
call
cmps
xchg
aaa
into
int
push
test
sbb
stos
retf
fild
cmp
call
(bad)
dec
fld
and
mov
stos
aaa
cmps
mov
shl
xor
test
mov
pop
xchg
push
inc
push
int3
adc
and
mov
cmps
or
ss
pop
mov
pushf
sar
aad
push
adc
cld
adc
add
lahf
and
imul
fbstp
repnz
xor
pop
mov
lahf
cmp
inc
pop
int3
stc
std
cmp
jae
xor
mov
fmul
or
and
xchg
mov
push
xor
test
cmps
mov
cwde
pop
cli
mov
jns
cld
xchg
mov
sti
dec
xchg
cdq
mov
cmp
dec
jbe
add
mov
pop
pop
cmp
ds
sti
out
jno
mov
jbe
push
in
test
iret
icebp
xor
xchg
(bad)
stos
stos
int3
scas
imul
cmp
stos
idiv
xcrypt-ofb
cmps
lods
mov
push
and
and
movs
dec
(bad)
aam
jg
cmp
mov
imul
repnz
mov
xor
retf
inc
outs
cmp
jp
mov
scas
(bad)
mov
nop
dec
jnp
icebp
out
cmp
or
xchg
jmp
adc
xchg
sar
imul
jae
push
ss
mov
jns
sub
add
adc
inc
pop
mov
call
repz
js
mov
jbe
xlat
cmc
dec
lahf
test
dec
mov
sbb
movs
movs
loopne
je
nop
arpl
or
test
sar
fidivr
ror
jne
imul
jle
jbe
fcomp
out
out
retf
loopne
adc
or
jo
rol
aaa
and
sbb
stc
call
jbe
xchg
push
rcr
jmp
push
mov
adc
inc
jl
stos
mov
push
bound
jge
lods
es
arpl
add
(bad)
bswap
mov
loope
cld
mov
fs
jns
sbb
das
shl
xchg
mov
fild
lock
test
jmp
lods
xchg
add
lods
test
sbb
lds
jmp
call
outs
add
xlat
dec
mov
jne
das
dec
cmp
jecxz
or
mov
packssdw
popf
push
imul
xchg
cld
jecxz
(bad)
push
pop
push
aas
pop
cmp
fwait
enter
shl
jno
push
cs
mov
scas
call
push
pop
push
cli
not
or
pop
mov
mov
mov
rcr
pop
movs
(bad)
pop
sbb
icebp
push
scas
test
inc
inc
mov
iret
sbb
or
popf
add
loope
in
loopne
je
inc
dec
cmps
(bad)
xchg
ss
cdq
fs
mov
push
cmp
mov
ins
sub
dec
xor
pushf
sbb
lea
xchg
sub
xor
test
mov
pusha
sar
test
ror
push
mov
or
(bad)
jle
sti
loope
jns
adc
cmp
push
mov
inc
push
sti
adc
sahf
xor
fidiv
jle
sbb
push
pop
jmp
or
mov
ins
inc
std
cli
jmp
dec
adc
pop
stos
in
add
push
(bad)
fld
scas
aam
mov
inc
or
loope
movs
ret
repz
clc
fcmovu
popa
jecxz
adc
xchg
pop
sub
or
mov
rcl
mov
out
jge
out
adc
test
retf
retf
mov
les
mov
cmp
imul
retf
sub
inc
add
jle
leave
ss
xchg
in
xor
jmp
fwait
cld
rol
cmp
xchg
xchg
xchg
int
mov
fild
sub
test
sub
data16
pushf
cwde
push
add
jne
and
mov
fdivrp
mov
inc
jp
and
out
std
not
int3
out
sahf
mov
iret
push
cmp
jns
retf
div
dec
pop
fimul
icebp
dec
mov
mov
aas
cs
or
ror
push
and
repz
pop
imul
rcl
cwde
fs
cmp
mov
stc
inc
cmp
adc
movs
hlt
ja
js
scas
sbb
(bad)
sub
push
xchg
aaa
dec
call
(bad)
retf
xor
adc
push
mov
test
sti
je
(bad)
inc
test
sbb
jnp
ins
or
push
push
add
jl
fistp
xor
retf
dec
repz
ins
and
sub
sub
(bad)
stos
xchg
mov
punpckhbw
bnd
sbb
xor
mov
xor
dec
movs
adc
cli
test
add
repnz
sub
jnp
and
test
mov
pop
jp
jae
ficomp
dec
pop
add
add
fstp
cmp
fcmovnb
jno
xchg
or
iret
retf
pop
mov
sub
stos
add
imul
icebp
cli
push
pop
fprem
xchg
(bad)
fcom
fs
pop
cmp
mov
sub
aam
scas
test
test
fild
pop
adc
in
daa
cmps
repnz
(bad)
sub
dec
fmul
mov
call
or
push
jmp
jns
inc
push
fwait
jnp
aad
cmps
mov
mov
cmps
xor
fistp
inc
cmps
adc
push
stos
aaa
ret
sbb
mov
out
rol
pushf
in
ror
addr16
inc
mov
dec
mov
xchg
pop
adc
aam
loop
movs
bndstx
loope
push
(bad)
test
int
push
out
scas
vmovd
pop
mov
nop
jne
xchg
xchg
inc
lock
cmps
dec
push
test
mov
push
retf
fsub
call
(bad)
cwde
cld
fwait
ss
repz
inc
dec
jg
nop
jno
(bad)
movs
mov
(bad)
fst
js
inc
(bad)
xchg
(bad)
jnp
push
jo
pop
ins
xchg
sbb
and
cld
(bad)
das
pop
jns
(bad)
out
or
rol
cli
inc
xchg
xor
repz
mov
(bad)
aad
or
scas
test
xor
dec
das
shl
xor
repz
cmp
push
cmp
(bad)
sti
test
mov
outs
pusha
aaa
add
mov
pushf
lahf
adc
jle
xchg
arpl
cmp
lahf
cmps
pop
cmps
out
cld
jns
mov
jnp
cld
xchg
sbb
mov
jp
test
cmp
jmp
movs
pop
mov
push
loope
sti
push
popw
xchg
test
cmps
test
add
adc
retf
adc
push
test
fwait
and
inc
add
call
mov
call
pop
call
cmp
push
stc
or
cwde
pushf
xor
stc
ins
inc
(bad)
(bad)
pusha
out
and
lds
cmp
inc
ret
and
add
jp
or
inc
sti
out
dec
(bad)
mov
xchg
ins
adc
pop
mov
or
jno
xor
jl
or
mov
pop
pop
dec
ins
mov
cli
xchg
mov
jg
add
xlat
cmp
mov
lds
fs
mov
pusha
push
sti
xchg
ja
(bad)
jg
pop
arpl
xor
add
aaa
sbb
and
sub
(bad)
js
adc
sbb
ret
sbb
jo
pop
and
arpl
rcl
sahf
inc
push
pop
inc
inc
mov
push
push
xor
xlat
xor
(bad)
dec
adc
mov
leave
neg
cmp
stos
xchg
push
cmps
xor
mov
out
and
retf
push
scas
pop
(bad)
call
repz
lea
add
jg
mov
loopne
mov
inc
adc
adc
xlat
cmp
inc
sub
mov
lds
mov
add
movs
mov
xor
pusha
mov
(bad)
inc
push
dec
outs
dec
loop
jmp
popa
xor
lods
out
(bad)
call
mov
jmp
pop
cmp
mov
cdq
cmps
movs
sbb
or
push
inc
dec
fxch
cmp
scas
icebp
jbe
pop
sbb
(bad)
int3
out
aad
mov
push
das
cli
(bad)
fstp
pop
add
test
push
pop
push
pop
ds
mov
and
imul
pop
mov
mov
ret
es
cld
push
sub
stc
std
inc
dec
imul
xchg
in
call
or
mov
nop
cli
cmp
fisubr
pop
fs
jb
mov
(bad)
inc
pop
repnz
jle
das
dec
ret
test
ds
pop
psrld
movs
xchg
leave
mov
lahf
jmp
cmp
fmul
sub
mov
jl
cmps
adc
out
xchg
xor
jb
aad
aaa
cmp
cmp
sub
scas
xor
push
ss
mov
pop
push
sti
pop
rcr
(bad)
mov
mov
push
movs
outs
scas
into
push
int3
add
mov
jmp
fmul
ret
fmul
cli
xor
dec
jnp
mov
jns
fnstcw
in
fiadd
sub
adc
out
cmps
xchg
push
sub
in
repz
mov
cwde
les
push
mov
mov
lods
jne
pop
cmp
push
fcom
movs
cmp
and
cmps
test
leave
jo
jmp
(bad)
fmul
ror
int3
xor
mov
fld
std
scas
retf
jmp
dec
and
(bad)
scas
mov
mov
loopne
xchg
scas
out
jge
fdivr
stos
and
fcomip
and
mov
adc
lahf
dec
rcl
add
jmp
arpl
jmp
fsubr
in
lods
push
pcmpgtb
sub
or
and
jbe
fist
daa
fmul
push
jmp
xor
ret
pop
mov
pop
(bad)
lahf
inc
leave
push
aad
fs
pop
mov
scas
jbe
into
dec
mov
xor
jbe
loopne
out
pop
mov
and
mov
sti
or
(bad)
jge
pop
fisttp
repz
mov
mov
out
pop
cwde
cli
cmp
sub
outs
js
sub
cmp
jmp
cmp
je
and
mov
pusha
inc
mov
jne
aam
pop
test
(bad)
aam
cmp
test
add
dec
out
dec
inc
sub
fucomi
dec
aad
imul
jecxz
es
cmps
test
cmp
jle
in
jno
(bad)
in
sub
sub
ss
adc
adc
add
sti
xchg
sub
cmps
loop
test
push
rcl
test
ds
mov
iret
xchg
sub
stos
mov
rcr
gs
cmp
or
(bad)
mov
gs
js
(bad)
(bad)
adc
xchg
or
stos
iret
popf
inc
cld
fidiv
fdiv
sar
mov
inc
sbb
ins
sub
xlat
push
arpl
fistp
int
inc
ficom
dec
xchg
fiadd
rcr
sbb
jo
test
mov
jmp
popa
scas
mov
mov
pusha
mov
push
adc
cli
fisubr
inc
sbb
pop
pusha
inc
iret
mov
in
out
sub
cmc
sbb
dec
in
mov
imul
gs
cmps
xor
mov
imul
inc
xor
daa
xor
icebp
sbb
(bad)
jmp
adc
cmc
shl
pop
lea
mov
and
push
sbb
fcmovbe
out
bound
pop
pushf
add
icebp
adc
in
call
cdq
lods
shl
(bad)
out
test
pop
call
push
push
fsubr
lock
cdq
lahf
loope
or
out
inc
xchg
dec
sub
xchg
mov
and
xchg
pop
push
(bad)
imul
xor
ss
imul
push
mov
push
fimul
and
rcl
mov
ds
fdivr
inc
es
mov
mov
outs
mov
ret
cmp
mov
ja
out
sti
push
nop
or
pop
dec
push
or
inc
and
lds
hlt
pop
clc
dec
sbb
out
cmp
mov
cmp
push
shl
call
dec
inc
mov
add
push
cmovne
xor
sub
les
loopne
imul
fsub
or
jge
add
jmp
adc
jge
mov
mov
aam
pop
aaa
movs
xor
xor
mov
test
lahf
cmps
fisttp
jb
push
mov
ins
popa
hlt
dec
push
mov
scas
cli
fdiv
adc
test
rol
pusha
test
and
jae
fs
mov
and
dec
xor
repz
mov
jo
jp
push
and
adc
jl
mov
pop
jo
mov
pop
sbb
pop
mov
sti
sub
loopne
inc
arpl
mov
inc
or
je
pop
mov
cmps
push
push
push
push
push
lahf
dec
add
sbb
xchg
pop
out
cmc
pop
test
jmp
push
fimul
loope
cmps
push
add
mov
add
out
cmp
push
and
lods
call
pop
aam
pop
jmp
xchg
push
scas
jns
xor
adc
jle
cwde
lahf
mov
imul
clc
stos
push
push
or
mov
xor
cdq
mov
popf
push
in
(bad)
or
lods
imul
inc
daa
xor
(bad)
std
xchg
rcl
pop
xchg
adc
std
push
xchg
out
cmp
lahf
mov
shl
xlat
push
adc
inc
inc
(bad)
add
js
add
mov
mov
cld
jl
jb
sbb
loopne
imul
or
inc
xlat
mov
loopne
das
imul
and
xchg
jbe
lods
hlt
xchg
bound
ret
dec
xchg
cmp
cld
mov
xchg
jmp
rcl
ret
stos
out
or
js
mov
and
xor
mov
pop
mov
inc
jmp
push
cmp
adc
cld
test
emms
movzx
loope
ds
ficomp
pop
aas
or
pop
jmp
xor
fs
hlt
jecxz
mov
xor
jno
loop
xor
jno
pop
sub
mov
push
call
cmp
je
call
mov
dec
xor
push
inc
jns
loop
push
retf
xor
jge
push
and
imul
mov
cmp
cmp
mov
loop
out
shl
mov
push
inc
pop
stc
shr
call
cmp
pop
je
fwait
xor
and
push
mov
sahf
inc
out
rol
ficom
dec
fiadd
retf
sti
push
sub
mov
mov
or
popa
push
mov
inc
push
mov
es
jmp
mov
add
sbb
hlt
(bad)
lds
pop
jo
inc
sub
mov
test
ret
cld
xor
(bad)
das
ss
cs
idiv
lods
mov
and
js
aam
aaa
push
sbb
test
and
daa
out
scas
push
retf
ss
jnp
test
(bad)
jno
push
popf
cmc
add
xchg
sti
or
cmps
cmps
dec
cli
mov
jns
dec
cwde
nop
jae
ret
push
in
fisttp
and
sbb
adc
ja
mov
dec
ss
aas
popf
jle
fsub
out
clc
pushf
jecxz
push
dec
and
inc
xchg
mov
loope
jmp
rcl
ss
push
mov
rol
lods
aad
gs
or
out
sbb
add
nop
mov
xchg
adc
mov
inc
mov
gs
add
iret
fwait
pop
repnz
in
xchg
push
mov
out
test
sbb
jbe
mov
outs
rcl
jae
(bad)
push
adc
pop
mov
fistp
addr16
lahf
cwde
shl
or
jecxz
adc
jae
dec
dec
scas
fnsave
xchg
lahf
imul
int
xlat
in
dec
ins
adc
aam
leave
or
sti
inc
sbb
jns
dec
lods
mov
cmp
mov
stc
push
out
pop
iret
mov
cmp
xor
cwde
adc
fwait
sub
hlt
sti
cli
les
call
iret
lods
dec
js
add
ret
jns
xor
or
xor
das
mov
pop
pop
inc
mov
icebp
outs
pop
or
xchg
inc
or
cs
js
out
pop
push
sub
mov
xor
fdivr
icebp
aam
mov
addr16
sbb
cmp
call
daa
dec
leave
and
int3
bound
dec
arpl
cdq
push
xchg
cmp
mov
xchg
pop
add
ror
scas
and
lds
aam
dec
adc
ja
in
xchg
test
imul
leave
ret
sub
ja
push
jnp
adc
outs
cmp
cdq
(bad)
jl
add
(bad)
adc
ins
adc
dec
in
loop
push
jne
int3
jae
dec
fidiv
not
and
pop
aas
and
mov
sub
mov
adc
xor
outs
cld
das
pop
push
and
mov
clc
(bad)
jmp
mov
mov
stos
pop
pop
in
mov
adc
sbb
cmc
hlt
cmps
jl
stos
rcl
adc
sbb
cmp
lds
xchg
out
inc
scas
dec
idiv
xchg
add
jbe
(bad)
cli
sbb
mov
clc
adc
test
xchg
inc
fld
push
push
jp
inc
xchg
jne
pop
and
les
or
push
and
iret
jb
js
cld
cmp
ror
fisubr
imul
pusha
ret
stos
out
mov
sbb
clc
lock
sub
out
clc
aad
jg
retf
fldcw
jg
mov
adc
lock
and
jnp
mov
sbb
jmp
cmp
ror
mov
xchg
mov
lods
cld
dec
pop
and
pop
nop
aad
sbb
int3
cld
inc
cld
cmps
fsub
add
inc
adc
pop
or
mov
stc
inc
nop
mov
leave
neg
and
jp
cs
or
loopne
cld
pushf
gs
fwait
lock
fld
mov
(bad)
cmp
test
clc
movs
dec
or
stos
test
arpl
add
cs
sub
push
mov
mov
xchg
cmps
adc
push
not
sti
ins
lock
inc
lods
repz
dec
or
dec
and
iret
push
dec
mov
xchg
(bad)
jno
loope
stos
pop
lahf
ds
mov
jg
das
movs
call
sbb
push
aad
jne
out
call
mov
push
xor
lods
mov
stos
into
xor
fld
into
add
jp
cwde
add
test
add
stos
and
jb
sbb
add
mov
ret
xchg
mov
pop
ja
sbb
lds
test
stos
test
dec
outs
mov
add
jb
xchg
bound
in
jae
je
add
sub
retf
cmp
imul
les
sub
dec
loope
rol
inc
push
(bad)
cli
adc
add
lods
sub
sbb
mov
mov
sbb
xor
ds
inc
bound
and
inc
xchg
mov
iret
scas
sub
xor
inc
sub
sahf
in
sar
in
add
cmp
ja
movs
jg
outs
push
mov
imul
push
cmps
in
fwait
mov
fcomip
xor
sbb
dec
cmps
(bad)
jnp
int
in
and
repnz
push
dec
lahf
add
es
imul
ins
in
inc
mov
mov
mov
(bad)
pop
cmps
mov
sub
lock
add
fdivr
out
aas
(bad)
sub
dec
cmc
test
mov
inc
lds
cmps
pusha
mov
adc
aad
mov
daa
push
fsubr
sar
lods
jne
adc
in
gs
aam
cs
hlt
movs
lahf
rol
pop
das
push
aad
stc
cmp
pop
lahf
cmp
push
and
inc
mov
pop
sbb
repz
scas
xchg
mov
nop
jg
xchg
ins
push
push
dec
enter
scas
push
ret
dec
mov
aad
or
das
(bad)
adc
cmp
mov
xor
push
leave
ret
pop
dec
jmp
or
in
cmps
or
jmp
push
test
es
scas
sub
scas
cmp
jno
das
aad
jg
adc
(bad)
and
adc
dec
jg
imul
sbb
out
or
test
ret
adc
outs
aad
ja
outs
and
sub
push
out
ss
test
sub
sbb
repz
jnp
nop
fisub
pop
add
sub
or
ret
sar
push
push
mov
mov
lods
push
jg
cmp
mov
sub
sub
xor
or
ret
call
enter
ror
movs
stc
movs
or
shl
mov
cdq
out
stc
mov
inc
sbb
mov
xor
sub
or
cmp
dec
fistp
cmps
into
data16
fbstp
or
sbb
loop
adc
jnp
mov
push
push
retf
push
mov
mov
mov
cli
xchg
(bad)
aad
sbb
cmp
out
mov
int3
lea
fadd
xsave
or
add
mov
jge
and
jp
mov
hlt
ja
ins
mov
dec
add
inc
ret
pop
mov
test
cwde
cmp
(bad)
cmp
popa
push
loop
jmp
cmp
adc
or
div
imul
pop
pop
or
cwde
mov
ja
cmp
mov
dec
sbb
shl
and
jecxz
in
pop
dec
lods
or
mov
cmp
idiv
pop
bound
cmc
xchg
jl
push
add
cdq
sahf
push
sti
xchg
movs
pop
push
fiadd
lods
call
in
jo
retf
xchg
dec
jo
push
aaa
ja
adc
repz
xor
pop
aam
mov
sbb
test
ficomp
sar
dec
lods
adc
retf
dec
lahf
mov
mov
mov
int3
push
and
test
je
fistp
outs
push
(bad)
in
xchg
adc
mov
mov
shl
sbb
xor
daa
fstp
cmp
jmp
jno
movs
pop
aas
or
dec
inc
push
into
dec
fsubr
inc
pop
inc
test
push
xor
sbb
pop
fidivr
xcrypt-cbc
cmps
shr
aaa
popa
xchg
fmulp
pop
and
mov
xor
faddp
jmp
push
mov
push
pop
jno
lea
inc
push
(bad)
mov
fwait
jb
pusha
out
lods
mov
cmp
int3
daa
arpl
or
icebp
aad
mov
cs
xor
loopne
test
mov
hlt
sbb
xchg
repz
cmc
cmps
movs
cmp
f2xm1
fs
jo
imul
mov
popa
sub
das
imul
repnz
fs
fist
xor
data16
out
shl
dec
sbb
mov
mov
or
mov
jmp
in
les
jo
pop
or
sbb
or
cwde
fucompp
ins
sbb
push
and
xchg
cvtps2pd
and
loop
or
or
(bad)
sub
add
rcr
mov
xchg
in
enter
ins
aam
movs
cmovae
loope
aaa
cmp
test
xchg
push
pop
ret
pop
aaa
ficom
test
sub
jg
lods
sub
pop
xlat
arpl
sub
xor
daa
call
shr
fdiv
jmp
xchg
xor
adc
mov
shl
mov
sub
add
inc
outs
shl
mov
popa
jge
push
and
in
sbb
jecxz
or
shl
inc
push
adc
in
xor
popf
fwait
mov
dec
add
push
or
daa
neg
ins
in
xchg
test
aad
fdiv
xchg
les
dec
or
mov
clc
mov
push
in
inc
pop
test
call
std
mov
rcr
je
(bad)
in
das
mov
(bad)
dec
mov
(bad)
xor
cmp
push
in
gs
jne
xor
xchg
mov
sub
add
stc
push
loop
pop
shl
call
mov
sbb
xchg
xchg
cmp
inc
push
jl
mov
int3
arpl
into
loopne
dec
pop
jmp
add
outs
mov
stc
js
dec
mov
sbb
out
xor
cwde
(bad)
push
ins
stos
xchg
xor
add
nop
mov
shl
popf
mov
cmp
stos
add
mov
pop
pop
sub
pop
or
pop
xchg
js
jae
and
sub
dec
mov
cmp
fistp
jle
and
push
mov
into
std
(bad)
dec
iret
imul
and
into
aam
adc
and
cld
sbb
add
test
out
xchg
sbb
push
inc
xchg
add
xchg
inc
call
rcl
cmp
(bad)
push
mov
inc
mov
push
mov
and
mov
mov
aaa
lock
ja
xchg
adc
aad
nop
ds
jle
scas
dec
mov
not
push
push
mov
jmp
jae
cmp
xor
inc
addr16
sar
ror
loopne
fnsave
outs
pop
(bad)
sar
mov
fs
cmp
out
pop
stc
call
push
lea
not
lds
dec
rcr
mov
retf
iret
mov
xor
sbb
push
mov
pop
pushf
cmp
xchg
jbe
adc
jle
or
sbb
nop
adc
retf
cld
mov
test
sahf
mov
mov
push
out
aaa
pop
sub
fwait
inc
mov
outs
cmp
push
std
and
ja
mov
push
gs
in
fisttp
jp
xor
inc
fidiv
cmps
cli
popa
xor
ror
les
cmp
pop
xchg
fnstcw
xor
sbb
lea
mov
sbb
fmul
not
fldenv
popf
outs
or
sbb
bound
imul
sub
mov
inc
lods
fwait
or
sub
fldenv
icebp
push
int
mov
xor
mov
ficom
push
push
mov
mov
das
out
test
test
setg
repnz
xchg
enter
in
xor
cmp
inc
in
fmul
push
xor
adc
mov
dec
push
shr
cmps
ja
jp
leave
leave
scas
int
or
and
cwde
pop
lahf
sub
hlt
dec
int3
dec
push
push
loopne
fcmove
push
ret
dec
shr
jbe
mov
xchg
test
loop
mov
cwde
mov
mov
js
call
ins
inc
pop
sub
xchg
aam
out
ins
inc
movs
imul
inc
outs
mov
mov
movs
inc
adc
jb
sbb
inc
and
add
test
ds
(bad)
aad
arpl
push
sub
test
push
mov
test
imul
mov
inc
call
je
mov
adc
cmps
xchg
mov
sbb
add
in
add
and
push
imul
dec
xchg
(bad)
push
mov
rcl
push
pushf
mov
dec
dec
cmps
adc
xor
jb
push
not
call
sbb
mov
jecxz
sub
into
inc
jne
and
cld
into
pop
cmp
add
jne
retf
stos
pop
ret
popa
outs
adc
and
sub
push
shr
push
sub
icebp
mov
sbb
pop
mov
dec
add
inc
ret
xchg
fmul
xchg
cmp
jb
gs
int
mov
scas
xchg
fild
pop
or
jecxz
cmp
adc
dec
sbb
mul
inc
cmp
out
jmpw
cmp
sbb
popf
outs
(bad)
jmp
in
sub
xchg
cmps
pusha
dec
and
mov
bound
cdq
pop
daa
sbb
ja
mul
scas
int3
inc
push
leave
(bad)
fcomp
or
mov
xor
xchg
pop
aam
adc
lea
int
lahf
inc
pop
stc
(bad)
dec
cwde
mov
addr16
inc
out
jb
loope
jmp
sbb
push
mov
mov
cmp
add
stos
dec
ss
and
xlat
enter
ds
cmp
cmp
pusha
pop
mov
ins
int3
cmp
and
loopne
mov
shr
xor
and
mov
call
rcl
or
inc
movs
je
xor
repz
sub
adc
test
xor
pop
pop
stc
leave
jmp
dec
(bad)
cmp
push
push
dec
(bad)
stc
dec
cli
(bad)
sti
add
add
inc
xor
mov
loop
xor
stos
loopne
jnp
jns
mov
and
(bad)
mov
imul
or
popf
inc
mov
sub
mov
jnp
mov
cmp
mov
mov
inc
in
pop
repz
push
mov
call
cs
lahf
fmul
jmp
mov
dec
and
or
std
and
xor
pop
in
sub
fsub
aam
mov
clc
addr16
cmp
adc
(bad)
lahf
mov
aas
es
movs
into
xor
sub
sbb
inc
(bad)
aad
in
and
sahf
daa
jnp
lahf
addr16
sub
mov
cmp
mov
add
and
cmps
test
stos
sub
(bad)
dec
xor
ror
cmp
or
out
inc
push
and
xor
or
mov
dec
dec
loope
jmp
das
and
movs
fnstcw
shl
loope
pop
je
movs
ret
mov
arpl
(bad)
push
es
mov
cld
cdq
out
int3
jge
repnz
sub
es
std
mov
jo
mov
cmp
and
int3
mov
in
loope
mov
enter
pop
xchg
xchg
push
mov
add
mov
in
jmp
dec
loope
xchg
xchg
mov
and
mov
pushf
das
sub
jno
sub
cwde
jmp
and
xchg
mov
imul
lods
xchg
xchg
inc
mov
push
imul
cmp
push
aad
ret
(bad)
mov
pop
xor
test
call
dec
popa
loop
sub
cmps
lock
les
aad
aad
xchg
call
das
sahf
mov
xor
scas
dec
gs
stos
out
sub
add
outs
out
jg
sub
add
outs
jbe
push
sbb
or
or
test
mov
mov
mov
call
in
sbb
(bad)
push
sub
gs
or
mov
cdq
arpl
cmp
xor
adc
pop
arpl
call
es
xor
leave
sub
ins
sbb
jb
sbb
jl
sar
mov
pop
adc
jbe
push
push
lea
popf
push
add
loopne
cld
jo
mov
vpxor
xchg
push
mov
test
in
je
cmp
push
jns
in
mov
pop
sbb
stos
push
mov
adc
inc
mov
push
mov
nop
push
mov
add
dec
push
in
or
imul
adc
jns
add
inc
xchg
test
adc
fwait
mov
pusha
cmps
pop
xchg
or
or
or
jmp
or
sbb
popa
adc
xchg
jl
push
mov
inc
mov
sub
add
popa
inc
cmp
imul
adc
cmps
ret
mov
int3
ins
repz
fsub
test
cld
gs
out
rcr
lods
pop
(bad)
fmul
ins
adc
enter
mov
xor
ss
daa
sub
cmp
shr
shl
dec
sub
xor
and
jbe
push
add
mov
into
imul
or
pop
in
cmp
xlat
pop
jge
mov
pop
popf
add
sub
pop
push
jbe
mov
(bad)
cwde
iret
out
lahf
dec
sub
pop
mov
push
ret
and
in
nop
pop
mov
xchg
loope
mov
mov
cmp
ror
outs
sub
cmps
inc
adc
ret
repz
or
push
cmp
fisub
jp
mov
int
inc
cmps
xchg
push
push
and
ins
fdivr
cwde
inc
retf
sub
out
xchg
lea
nop
pop
xchg
pushf
dec
adc
nop
scas
ret
and
pop
ror
in
sbb
sub
xor
add
mov
out
jge
outs
sahf
ja
fild
jle
shl
pusha
repz
inc
pop
in
sahf
jb
mov
xor
mul
repnz
add
movs
dec
jg
fst
iret
repz
sbb
mov
add
(bad)
jb
xor
add
jmp
pop
test
pop
adc
cmp
push
call
(bad)
push
add
int3
adc
jge
mov
(bad)
hlt
pop
test
imul
push
jb
xor
sub
aad
scas
xchg
(bad)
gs
and
in
cmp
cli
or
jl
or
xor
fnstenv
xlat
cs
mov
sti
xor
cmp
js
mov
out
mov
cmp
mov
loope
jno
in
test
pop
push
aaa
test
pop
call
retf
movs
mov
mov
in
das
add
fistp
or
or
jl
ja
loopne
in
add
pop
fist
mov
or
popf
add
aad
cmp
xchg
jmp
stos
inc
pop
mov
xor
push
dec
loope
add
push
jno
push
outs
fimul
pop
jl
popa
cmp
sbb
neg
bound
lds
neg
stos
retf
mov
lea
adc
es
add
inc
dec
and
shl
cdq
pop
cmp
jae
dec
cmp
aam
nop
das
mov
push
push
cmp
sub
call
call
pop
sub
stc
and
or
in
mov
or
(bad)
xchg
leave
jmp
ss
iret
cmp
sub
enter
pop
jp
inc
mov
cmps
add
mov
loope
lods
popf
movs
inc
xor
or
sti
(bad)
out
mov
pop
pushf
pop
push
stc
iret
mov
cmps
sbb
inc
test
jle
je
xchg
fdiv
mov
push
rcl
mov
inc
mov
(bad)
sbb
add
test
sub
adc
inc
mov
adc
call
xor
aaa
ins
sar
dec
xor
and
cs
out
and
out
dec
paddq
pop
neg
adc
push
mov
inc
nop
aam
lock
bound
add
or
das
xchg
push
popa
lods
mov
jg
scas
xor
adc
push
(bad)
mov
lods
mov
push
cdq
ins
cmps
pop
pop
xchg
test
mov
jge
fimul
cli
mov
mov
sar
sbb
sub
mov
imul
lea
sbb
mov
and
mov
adc
xor
mov
arpl
sbb
mov
stc
dec
out
xor
pop
into
rol
cld
jb
jno
rcl
add
int
(bad)
fdiv
cmps
jmp
push
pushf
sahf
repz
push
(bad)
ja
push
mov
pusha
jecxz
jmp
push
ds
cmp
mov
dec
and
jmp
iret
xor
jge
shr
jo
ins
jmp
inc
add
cmp
fistp
push
push
cmp
mov
int3
arpl
mov
sub
add
pop
lods
push
push
pop
leave
adc
and
sti
call
gs
mov
sbb
xor
popf
mov
test
xchg
arpl
fild
(bad)
fmul
ror
pop
pop
loope
out
scas
mov
cmp
mov
sub
ds
inc
mov
jno
jmp
jo
(bad)
loop
addr16
mov
loope
scas
cmp
xchg
mov
cmp
mov
cli
cmp
jle
in
sub
test
hlt
seto
cmps
adc
in
(bad)
cmp
ins
sub
xchg
cmps
jmp
mov
mov
sub
push
fwait
or
movs
imul
inc
cmc
loopne
cmp
push
retf
mov
in
lock
mov
lods
mov
pop
les
imul
sub
pop
xor
pop
retf
and
fnsave
div
jns
jecxz
mov
push
xchg
inc
dec
call
adc
mov
or
sub
leave
push
add
push
ror
adc
and
dec
mov
adc
lods
setbe
or
(bad)
ss
icebp
and
sbb
leave
mov
es
imul
outs
adc
push
inc
push
xor
(bad)
leave
repnz
scas
outs
adc
(bad)
arpl
cwde
sub
cmp
test
cmp
cli
pop
(bad)
pop
scas
dec
jmp
aaa
aaa
lahf
push
pushf
fptan
ds
jl
sub
(bad)
(bad)
mov
sbb
rcr
iret
les
xchg
loopne
shr
push
cmps
cmc
xchg
mov
and
dec
daa
mov
adc
dec
add
mov
test
test
mov
ror
cmp
xchg
int
imul
jns
repnz
movs
pop
cmp
(bad)
daa
push
and
fld
loope
ins
and
push
inc
mov
popf
ret
xchg
pop
jbe
nop
repz
push
dec
mov
jb
push
jle
sti
int
xor
and
jmp
push
lds
push
sbb
or
mov
cmps
xchg
ret
push
or
pop
aad
repz
sti
jae
or
iret
mov
cs
arpl
mov
sub
push
dec
adc
shl
mov
inc
movs
cmp
iret
push
ss
push
mov
adc
pop
cli
lods
movs
cmps
sub
or
aaa
leave
dec
js
push
(bad)
cmp
(bad)
vcvttpd2dq
adc
mov
xor
or
inc
push
or
fistp
imul
add
push
push
out
and
push
or
push
or
jne
jo
vrcpps
cli
jnp
mov
in
aas
mov
iret
push
push
aas
xlat
push
jmp
and
cs
add
cmp
mov
dec
xlat
inc
and
dec
sub
adc
cmps
icebp
idiv
fisub
mov
out
mov
and
jne
(bad)
out
je
cwde
loop
push
movs
icebp
push
dec
stc
xchg
cmp
jo
mov
mov
ins
inc
popf
jmp
or
out
adc
out
popf
sbb
mov
retf
pop
push
push
jo
dec
cwde
cli
mov
fwait
mov
xchg
mov
inc
test
enter
jp
(bad)
inc
ins
adc
xor
pop
outs
imul
adc
cmp
jmp
mov
(bad)
lods
push
cmp
add
xchg
add
mov
out
xchg
not
js
into
xor
pop
stos
fidivr
iret
pop
sub
dec
fdivr
movs
sbb
fwait
hlt
sbb
and
out
div
inc
in
stc
or
in
cmp
jge
mov
fwait
push
push
xchg
ja
adc
jo
popf
test
loope
adc
nop
sbb
(bad)
cwde
xchg
add
out
sbb
imul
fstp
sub
pop
in
cmp
jne
shl
jecxz
inc
pop
mov
add
aas
ret
cmps
fadd
inc
xor
xor
xchg
mov
push
ins
popa
adc
cmp
xchg
or
popa
jecxz
(bad)
jecxz
inc
lods
jae
push
nop
push
aaa
pusha
push
mov
add
cwde
inc
mov
xchg
daa
sti
jo
sub
sbb
cmp
mov
shr
cld
pop
push
test
or
shl
mov
mov
cmc
add
jp
retf
sub
pop
mov
adc
push
add
shl
in
push
lea
fistp
or
jmp
cdq
mov
pop
mov
or
or
call
in
add
mov
adc
(bad)
push
ds
sub
fisubr
cwde
pop
dec
stc
add
aas
in
std
xchg
popf
jbe
xchg
arpl
lds
js
stos
jg
pop
adc
xchg
jg
loope
jne
shrd
repnz
mov
sbb
cmp
dec
test
dec
rcl
shl
cmp
mov
scas
xchg
popa
cmps
add
popf
push
unpcklps
sbb
ss
aad
pop
sub
sub
push
imul
cmp
fwait
daa
stc
dec
push
sub
xor
in
add
repz
fwait
mov
aas
pop
fist
div
int
add
mov
jmp
enter
push
cwde
sbb
scas
push
jns
lock
push
in
sub
inc
push
mov
adc
mov
rol
push
add
push
jo
sbb
xor
das
and
cmp
in
int3
aaa
retf
out
test
inc
sbb
mov
popf
mov
dec
cld
retf
jge
inc
push
or
retf
ins
and
mov
cmp
outs
popa
add
sbb
outs
xor
mov
xor
adc
aam
jbe
lock
or
inc
jne
stos
push
(bad)
sti
jmp
push
xchg
cmp
in
adc
out
cmp
arpl
and
sbb
xchg
les
outs
je
xchg
clc
push
and
mov
cdq
cmp
ins
cmp
cmp
dec
data16
test
mov
cs
es
cmps
push
mov
xor
jmp
out
xor
pushf
es
sub
shr
adc
add
dec
jnp
jb
rcr
add
pop
mul
sbb
inc
and
and
into
push
lahf
jmp
jmp
push
inc
and
and
dec
gs
repnz
mov
mov
addr16
sub
loop
cmps
popf
or
sbb
inc
pop
jmp
jns
adc
data16
fstp
cmp
cmp
call
mov
and
movs
jnp
jb
xor
mov
pop
sub
test
mov
xchg
jmp
stos
sar
xor
jmp
leave
add
xchg
repz
ja
jnp
pop
inc
lock
mov
dec
stos
aaa
in
repnz
add
push
iret
fimul
ja
xchg
hlt
pop
test
adc
lea
add
adc
jle
and
aas
call
fiadd
jnp
icebp
cmc
jb
dec
jno
out
cwde
bound
xchg
jp
pop
push
push
jecxz
mov
inc
inc
dec
movs
dec
xchg
popa
inc
call
mov
loopne
pop
gs
mov
and
adc
or
adc
mul
mov
xchg
inc
jno
pop
jge
sub
dec
push
addr16
pop
rcr
xor
xor
mov
mov
xlat
xlat
fcmovbe
inc
das
adc
iret
std
sbb
adc
pop
or
jae
mov
movs
lods
int3
ds
and
and
or
sbb
add
push
adc
es
repnz
push
push
mov
les
xchg
cmp
repz
push
cmp
jo
dec
add
pop
in
dec
pushf
pop
outs
iret
jae
stos
dec
cmp
test
gs
xor
pusha
cmp
inc
fist
ss
scas
retf
call
or
dec
test
test
les
push
mov
sub
jns
sbb
pop
add
(bad)
cwde
add
(bad)
fld
je
sub
shr
push
cmp
popa
or
add
mov
push
pop
or
push
shl
int3
xor
xor
and
pop
sbb
test
rcr
cmp
pop
pusha
test
mov
call
arpl
inc
fcom
js
es
cld
arpl
adc
idiv
xor
loop
adc
stos
rep
mov
xchg
jl
jl
ret
mov
cmp
xchg
push
mov
add
out
jle
dec
jmp
jmp
es
out
add
imul
retf
mov
loopne
ret
mov
add
and
jb
(bad)
dec
cli
xchg
gs
mov
xchg
mov
aaa
push
and
pushf
inc
int3
stos
fdiv
jb
dec
repz
or
pop
stc
scas
js
push
int
mov
mov
push
mov
jle
mov
inc
and
xor
shl
push
in
cmps
in
pop
dec
adc
jnp
mov
int
leave
push
pop
cli
ror
jge
jle
mov
mov
(bad)
add
fsubrp
mov
pop
inc
adc
mov
cs
loope
cld
ds
int3
inc
sbb
add
bnd
fmul
jo
data16
std
cmp
jmp
repz
iret
es
frstor
ins
adc
push
inc
push
sbb
inc
xchg
leave
lea
adc
icebp
lds
cmps
inc
jns
sub
ror
div
pop
(bad)
jge
xor
inc
inc
out
shl
pop
loopne
adc
xchg
jbe
in
and
sub
inc
(bad)
nop
lds
xor
cmp
mov
out
ins
mov
inc
in
(bad)
(bad)
fucom
push
push
jb
and
mov
ret
ins
mov
aas
cmp
imul
push
movs
pop
cmc
jg
sub
sbb
jge
push
or
dec
sub
(bad)
push
or
jle
int3
adc
jmp
xor
cwde
loopne
xchg
mov
(bad)
and
scas
xor
jno
cld
xchg
xchg
hlt
jl
lock
mov
out
mov
loope
(bad)
jae
outs
test
jb
mov
ss
stc
mov
dec
and
data16
pop
scas
xchg
xchg
sub
iret
movs
ins
pushf
adc
xor
dec
push
rcr
aas
(bad)
out
pop
and
cmp
sub
popa
in
push
push
out
test
rcl
fprem1
frstor
test
repz
in
cdq
sub
leave
xor
call
fstp
jns
add
ds
pushf
mov
(bad)
fdiv
ret
mov
pusha
loop
and
stc
and
and
dec
pop
mov
rcr
in
ins
cmp
sub
aaa
jl
mov
in
jno
js
out
jo
rcr
retf
jbe
sahf
call
shr
sbb
xor
(bad)
jns
rcr
mov
mov
mov
in
(bad)
test
sub
push
adc
jae
and
lds
in
lahf
loope
push
mov
fdivr
inc
jne
aad
dec
cmps
out
stc
xchg
mov
in
pop
ja
cmp
scas
aaa
xor
loopne
dec
out
mov
test
jmp
ds
jg
pop
pop
jecxz
jmp
and
mov
mov
adc
jnp
in
mov
in
ret
jno
pusha
inc
popa
imul
xlat
and
lock
mov
movs
xchg
push
push
in
mov
das
in
enter
mov
cmp
stos
mov
jecxz
mov
jmp
cmp
hlt
(bad)
jbe
test
xor
adc
stc
mov
retf
scas
and
xchg
push
cmp
pusha
or
rol
pop
jb
ficom
test
jno
test
add
mov
stc
adc
cmc
xchg
pop
fiadd
add
dec
icebp
into
push
add
lea
cli
mov
add
mov
mov
adc
das
loopne
dec
or
cmp
pop
ins
push
xchg
mov
push
pop
sbb
push
cmp
icebp
adc
sub
(bad)
aad
or
aas
ins
shl
pop
mov
dec
add
mov
pop
scas
imul
popf
or
jno
enter
sub
shl
dec
mov
ds
mov
jb
data16
jb
nop
pop
mov
cmp
fdiv
add
jl
mov
push
push
fisttp
fnsave
jecxz
into
push
(bad)
mov
xlat
rcl
test
enter
pop
popa
call
sti
and
(bad)
loope
xor
sub
mov
in
pusha
test
xchg
dec
(bad)
push
mov
fistp
call
sbb
xchg
or
sub
hlt
popa
mov
movs
pop
mov
sti
mov
dec
inc
repz
pop
push
jecxz
cmp
jl
ret
jmp
rcr
cmp
ins
pop
inc
fiadd
mov
add
hlt
aad
ror
push
arpl
sub
pop
ret
sbb
not
test
leave
pop
pop
mov
pusha
jns
sti
sbb
adc
cwde
dec
lea
jbe
stc
push
xchg
(bad)
in
mov
mov
mov
and
inc
add
imul
mov
add
jbe
rcr
push
fst
mov
cwde
inc
mov
sub
and
dec
sbb
sti
(bad)
sub
jmp
adc
fadd
push
stc
pop
jns
in
add
mov
js
jmp
mov
stos
jb
push
imul
inc
fs
loop
jae
popa
cli
or
jno
xchg
inc
dec
stos
mov
push
dec
cmp
repnz
sub
fwait
cmps
add
adc
movs
pusha
mov
les
(bad)
pop
out
stos
shl
xchg
mov
call
jmp
(bad)
sub
clc
and
(bad)
mov
mov
cmc
ror
mov
jno
and
aas
ds
xor
das
and
cmps
cmp
aaa
sub
movs
pop
mov
sub
in
sbb
jno
rol
ror
lock
mov
xor
inc
or
push
fs
movs
cmp
xor
stc
add
icebp
in
call
into
adc
sbb
popa
cmp
dec
out
add
or
das
xchg
jmp
test
add
jl
xchg
js
cmp
fist
xor
or
xchg
retf
sti
adc
mov
rcr
pop
pop
push
arpl
test
jne
arpl
xchg
cs
sbb
inc
daa
jo
inc
popa
ins
retf
xor
mov
xchg
jns
push
retf
xchg
in
ret
cmc
fcom
mov
or
xor
rol
xchg
in
fild
mov
pop
and
(bad)
fstp
(bad)
fist
rcl
popa
jno
pop
xor
test
add
gs
(bad)
stc
sbb
adc
jo
loopne
push
mov
stos
fistp
test
in
push
inc
lock
jmp
push
or
dec
(bad)
loope
sbb
adc
enter
or
lods
cdq
rol
xchg
ret
inc
mov
inc
ja
int3
mov
inc
(bad)
jl
(bad)
ret
test
ss
call
dec
xchg
jl
repnz
iret
gs
xor
jo
mov
lods
and
jbe
pushf
lods
out
ins
repz
push
inc
jnp
ficomp
lea
dec
repnz
push
hlt
jl
std
ja
sub
xor
cdq
shl
inc
inc
push
add
ins
inc
dec
ret
sub
cmp
jne
mov
mov
dec
and
in
movs
pop
outs
in
xor
jl
aaa
adc
jl
bnd
lea
div
ret
iret
data16
ror
fist
or
test
mov
xchg
test
js
into
fsubr
inc
lea
jns
imul
mov
iret
push
and
push
loop
movs
push
or
push
pop
push
xchg
pop
cmps
sub
dec
test
and
dec
and
aam
mov
mov
rcr
inc
jp
test
cmps
fdiv
call
inc
and
idiv
sbb
jnp
stc
inc
icebp
inc
push
jbe
dec
push
and
ret
stc
jno
mov
mov
je
mov
mov
scas
add
xchg
dec
(bad)
xchg
mov
into
mov
jle
xor
sahf
std
fimul
add
mov
xchg
and
stos
mov
ins
and
repnz
cld
and
clc
es
shr
or
cld
rcr
jle
sub
push
movs
(bad)
and
cmp
cld
pop
xchg
je
loop
xchg
hlt
jns
sub
scas
mov
mov
(bad)
xchg
xor
cmps
lahf
mov
fcom
sub
shl
ss
pop
icebp
and
imul
(bad)
sub
add
and
adc
or
push
mov
push
int3
jnp
jl
ins
xor
push
inc
and
dec
mov
std
icebp
jge
pushf
cmp
ja
daa
test
jl
cmps
dec
mov
push
stos
in
push
mov
ds
xor
inc
dec
add
int3
cli
sub
xchg
inc
cmp
inc
mov
fcomp
xlat
inc
cmp
push
add
xor
out
and
shl
mov
gs
je
pop
enter
rcr
sub
dec
shr
pop
add
pop
lea
(bad)
adc
pop
shr
add
dec
lahf
(bad)
adc
xchg
xchg
jg
enter
jno
lea
in
mov
push
idiv
pop
or
(bad)
cmc
dec
test
sbb
dec
xor
repz
lods
pop
icebp
loopne
int
sti
dec
clflush
outs
jno
hlt
mov
in
vzeroall
sub
lahf
inc
mov
push
cmp
aas
adc
pop
dec
iret
(bad)
add
fwait
out
test
call
jmp
(bad)
push
js
fwait
add
xor
lea
jne
xchg
mov
pushf
int
(bad)
lahf
(bad)
out
cmp
xchg
mov
aas
clc
out
push
inc
cdq
daa
fimul
jl
jle
jne
test
or
add
pusha
jbe
out
pop
and
scas
mov
js
data16
inc
mov
mov
or
jbe
xchg
lea
pop
inc
loop
mov
stos
and
xor
mov
lock
loopne
lock
clc
dec
ret
xchg
pushf
dec
xor
dec
fadd
mov
dec
mov
and
cmp
add
xchg
mov
dec
mov
inc
outs
cwde
cwde
adc
adc
lea
pop
mov
adc
clc
pop
loope
popa
mov
call
out
jae
sub
shl
add
out
loope
out
mov
fs
sbb
mov
pop
xor
ja
rcl
adc
and
mov
sahf
(bad)
aad
mov
jg
ja
push
dec
aaa
sbb
enter
sub
cmc
push
add
jmp
or
mov
pop
les
scas
dec
es
aad
scas
inc
sub
xchg
lock
addr16
sub
loop
(bad)
and
ret
add
and
fcmovne
(bad)
cmps
mov
les
lahf
xor
lds
inc
jle
and
mov
arpl
push
add
movs
jmp
dec
das
mov
enter
sbb
mov
ss
out
dec
adc
(bad)
jmp
stos
test
scas
xchg
or
jecxz
dec
cmp
cs
or
xor
xchg
dec
sbb
js
xor
ret
cmps
or
inc
cmps
addr16
(bad)
iret
mov
cmp
clc
sub
jae
mov
pop
mov
popa
inc
mov
je
mov
cmc
jmp
fxch
sahf
test
movs
outs
aaa
inc
jns
jbe
adc
mov
fwait
mov
(bad)
imul
ss
rcl
pusha
sub
idiv
les
in
push
fcom
enter
call
dec
ret
(bad)
int
mov
mov
sub
sbb
stos
mul
pop
mov
adc
dec
ins
add
mov
xchg
(bad)
scas
test
jae
inc
jl
dec
ret
in
lds
and
div
mov
jbe
mov
in
(bad)
mov
pushf
dec
push
mov
sti
xchg
inc
push
mov
pusha
pop
stc
inc
xor
add
dec
lods
push
jp
fadd
add
dec
mov
pop
neg
call
ret
cli
movs
xchg
pop
fdiv
retf
dec
sahf
lea
movs
sub
add
and
xor
inc
inc
xchg
shl
gs
mov
lds
sub
lock
adc
les
aaa
and
xchg
sub
and
pop
mov
cmc
in
repz
pop
outs
push
dec
or
mov
mov
sar
inc
jge
mov
aaa
adc
pop
and
sbb
mov
ds
sub
dec
neg
lods
sti
or
jo
push
inc
push
repz
pusha
cmp
lea
mov
push
pusha
bound
adc
pop
cmp
imul
jae
pop
loope
pusha
push
mov
popa
fld
fstp
mov
and
mov
jae
adc
or
xchg
cmp
imul
cmp
aad
lahf
repz
sub
sub
int3
mov
ins
das
mov
mov
shl
mov
shl
imul
dec
cld
mov
movs
add
xchg
loope
mov
mov
mov
lods
rcr
mov
repz
js
cld
dec
jmp
popf
test
inc
(bad)
stc
add
cmp
sub
add
ins
jg
mov
xor
(bad)
xchg
mov
int3
jo
adc
iret
dec
sub
mov
adc
ins
sbb
adc
push
inc
adc
fdiv
loop
or
cmps
jp
sub
mov
fsub
push
sub
data16
or
or
enter
in
fld
stc
scas
xchg
ret
sar
ficom
sub
or
pop
lods
mov
dec
sub
neg
mov
cli
or
and
lahf
scas
sbb
push
sbb
out
dec
es
sub
stos
xor
repz
pop
xchg
jle
pop
sbb
adc
jg
cs
retf
sbb
push
pop
xor
mov
sar
fsub
and
xor
xchg
jg
lods
shl
xor
test
dec
mov
mov
fnstcw
jb
(bad)
add
jecxz
(bad)
jge
jae
(bad)
ficomp
lock
loop
call
enter
ret
sub
mov
pop
mov
dec
imul
repnz
mov
or
movs
popa
leave
jns
sub
movs
aam
xchg
pop
jl
dec
adc
mov
push
cmc
lea
retf
cwde
adc
or
jle
push
in
dec
pushf
clc
pop
mov
jmp
cmp
imul
or
mov
sbb
add
or
test
or
pop
cwde
sbb
dec
dec
icebp
sbb
mov
inc
or
cmc
aas
or
retf
cmps
aam
or
dec
and
sbb
sub
inc
xchg
dec
adc
cmc
jmp
and
fnstenv
add
push
inc
aad
ror
adc
movs
dec
out
rol
push
ror
mov
ror
lea
retf
inc
pop
adc
jnp
jb
je
dec
ror
pusha
cmps
jne
xchg
(bad)
push
pop
es
fwait
adc
push
aam
xor
xchg
or
push
push
sub
rcr
sub
fdiv
rcr
sub
jbe
scas
push
push
dec
pop
sub
push
adc
push
pop
push
test
js
jmp
sub
sbb
(bad)
pop
pop
fsubr
stos
jne
enter
mov
add
idiv
and
xor
mov
push
inc
add
push
cmps
mov
cmp
mov
ins
(bad)
jmp
inc
scas
push
leave
jns
pop
pop
push
jbe
test
mov
popa
mov
jnp
adc
add
xchg
sbb
(bad)
repnz
icebp
icebp
jae
ror
out
xchg
sbb
adc
and
xchg
call
into
cld
sbb
dec
mov
add
dec
xlat
pop
mov
stos
adc
adc
out
call
loop
mov
push
xchg
aam
nop
out
mov
pop
xchg
imul
push
mov
lea
pop
imul
xchg
push
test
dec
loope
in
lea
jo
cmp
std
mov
mov
int
imul
call
xor
ret
xchg
icebp
retf
xor
pop
dec
cmps
lods
pop
pop
les
pop
pop
pushf
pop
sbb
add
cmp
(bad)
jg
mov
jg
in
out
mov
rol
lock
pop
popa
xchg
mov
mov
movs
cdq
adc
mov
cdq
icebp
ja
clc
xor
push
bound
call
aam
xor
cmp
fld
dec
mov
jmp
ins
bound
push
pop
fs
xchg
cmp
jp
inc
dec
xor
bound
in
push
ret
les
test
adc
jns
mov
stos
cmp
xor
outs
sbb
inc
fidivr
mov
jle
cld
jb
inc
enter
add
xchg
mov
pusha
jmp
sub
movs
xchg
cmp
inc
dec
retf
dec
mov
pop
jp
push
stc
sub
adc
dec
xor
scas
lods
adc
imul
mov
jmp
xchg
in
adc
pop
xchg
sub
aam
(bad)
or
or
pop
test
cmp
mov
fnstsw
xchg
punpcklwd
add
cmp
lea
pop
mov
fs
fs
mov
mov
dec
mov
mov
inc
hlt
call
dec
cmps
cmps
or
dec
adc
inc
mov
test
mov
jg
jno
hlt
ror
fsubr
clc
inc
sbb
lods
mov
psllq
shl
adc
pop
fisub
add
jecxz
pushf
mov
mov
push
sbb
xchg
in
inc
stos
gs
call
cmc
not
pop
xchg
arpl
pop
xor
sbb
scas
jb
mul
xchg
push
aam
or
enter
mov
aad
out
jmp
jmp
std
popf
dec
jecxz
xor
adc
cmp
ficomp
inc
sub
ds
or
scas
xchg
inc
inc
inc
push
iret
cmp
call
pushf
shr
mov
aad
jo
push
push
mov
int3
jl
outs
pop
jae
xor
into
(bad)
stos
loope
xchg
inc
test
(bad)
and
fnstcw
pop
inc
pop
or
jo
xchg
in
nop
jge
retf
call
xchg
jbe
dec
push
push
cmp
mov
in
dec
fs
retf
dec
cmps
cmps
outs
pop
movs
jl
cmp
xchg
cmc
sti
cmp
push
cmp
adc
cmps
and
push
cmp
jnp
call
out
mov
es
leave
scas
test
jo
ins
mov
xor
push
stc
test
jge
mov
add
fs
pop
mov
(bad)
fnstenv
int3
je
aam
icebp
push
inc
xchg
fstp
mov
clc
(bad)
xchg
dec
in
sbb
(bad)
(bad)
cdq
imul
cld
aad
test
cmp
ins
adc
cmp
sahf
daa
sub
xchg
dec
repnz
xor
jo
xchg
and
out
cmp
lahf
sti
push
adc
mov
or
retf
sahf
(bad)
ja
arpl
(bad)
sbb
add
mov
fld
stos
fimul
and
or
adc
sub
sbb
sbb
mov
adc
inc
push
test
icebp
mov
scas
nop
retf
jo
shl
mov
dec
add
xchg
loopne
mov
movs
(bad)
fwait
stc
adc
jb
add
in
dec
dec
scas
and
inc
push
jne
pop
sbb
fdivr
mov
lds
scas
dec
push
mov
add
sbb
jmp
dec
mov
ins
jb
test
ins
jne
cwde
pusha
or
and
dec
mov
rol
loopne
gs
in
adc
sbb
lods
test
adc
pusha
or
inc
pop
retf
out
dec
cmc
or
scas
push
cmps
pop
push
sbb
jmp
inc
lahf
add
jecxz
jmp
lock
cmp
cmps
cld
add
cmp
mov
pop
mov
cmp
mov
adc
mov
mov
jbe
cmp
fld
jl
cmp
inc
inc
sti
bnd
sub
cwde
push
pop
int
cmps
in
cli
in
repnz
mov
push
mov
pop
mov
imul
jmp
xchg
and
push
iret
pmulhuw
inc
inc
jo
cmp
jbe
iret
and
mov
ins
lahf
xchg
data16
cwde
outs
movs
(bad)
xlat
pop
jle
das
or
je
imul
xor
ins
jns
cmp
popa
jmp
jne
jecxz
add
cmp
mov
mov
popf
fs
dec
dec
pusha
call
repz
and
xchg
and
or
sbb
adc
out
adc
scas
dec
xor
test
ror
jo
mov
outs
sbb
shr
cmp
cld
pop
lahf
mov
sar
inc
test
mov
out
js
add
lea
inc
sub
cdq
xor
sub
pop
repnz
dec
xchg
inc
pop
enter
mov
push
xchg
outs
ja
call
imul
inc
inc
out
movs
icebp
jae
das
cmp
mov
mov
retf
shl
mov
dec
fnstsw
mov
(bad)
add
mov
push
adc
inc
push
add
jo
inc
xchg
out
xlat
rcl
int
ss
in
jne
push
fnstcw
xchg
lods
push
adc
sub
out
pop
sub
pop
xchg
scas
push
rcl
ffreep
clc
mov
xchg
popf
outs
(bad)
pop
inc
mov
cmp
cmp
xor
or
add
mov
pop
and
pushf
mov
ss
ret
clc
mov
mov
mov
add
test
ror
push
dec
xchg
push
pop
call
mov
cmp
jne
xchg
dec
cli
xchg
adc
clc
loope
jecxz
xor
popa
test
mov
pop
adc
xchg
mov
sub
and
cmp
push
inc
rol
fstp
xor
cmp
out
inc
ret
fild
and
push
int3
dec
and
in
jno
imul
out
ss
jl
(bad)
sub
outs
movs
scas
scas
lahf
xchg
ret
push
mov
data16
daa
ror
or
mov
lahf
mov
cmp
mov
dec
out
cmp
adc
add
retf
and
frstor
mov
xchg
lods
sbb
in
int3
scas
out
loope
loop
sbb
jmp
push
dec
cmp
mov
pop
jnp
ret
ins
push
cmp
je
data16
sbb
out
lods
mov
xchg
or
dec
movs
test
loopne
add
dec
jne
jl
push
sahf
loopne
mov
aam
ja
(bad)
sahf
cs
mov
pusha
call
std
sub
add
xchg
push
gs
mov
pop
leave
pop
int
xchg
inc
test
nop
leave
mov
or
retf
lods
inc
out
xor
sbb
cmp
sbb
mov
xchg
mov
rcr
push
pusha
je
xor
bound
or
fcmovnbe
sub
mov
dec
pushf
jmp
ins
cmp
aam
int3
or
rcr
hlt
aam
mov
test
fild
lahf
stc
out
add
js
xchg
data16
mov
(bad)
es
sub
outs
hlt
add
cli
add
call
addr16
inc
or
movs
rol
cmp
push
push
fbstp
stos
mov
push
mov
mov
fidiv
sbb
adc
sbb
jge
das
arpl
in
iret
fidiv
icebp
mov
pop
out
adc
fwait
mov
dec
push
jns
(bad)
push
fldenv
pop
repnz
in
sub
sub
rcl
loop
pop
sbb
ret
ret
int3
mov
cmp
inc
movs
cmp
xchg
ret
push
adc
cdq
mov
mov
mov
mov
fdivr
pop
or
mov
scas
cmp
dec
bound
ss
jle
iret
fisttp
mov
stos
push
xor
inc
out
cmp
std
push
add
mov
mov
mov
sahf
enter
enter
retf
es
jmp
mov
cmps
sbb
cmp
out
pop
dec
and
and
mov
mov
xchg
sahf
dec
lahf
pusha
aad
lods
fadd
push
lahf
dec
inc
lods
hlt
lea
pop
mov
lock
jl
push
mov
dec
sub
sbb
cmps
movs
js
add
lds
xlat
mov
popf
fistp
imul
das
pop
xor
push
mov
inc
xchg
gs
mov
add
sti
retf
cmp
push
fmul
adc
jmp
enter
sbb
push
push
mov
daa
(bad)
cmp
xchg
xchg
add
je
and
gs
xchg
dec
idiv
sbb
or
fwait
xor
mov
fsub
cmp
jae
or
out
inc
sbb
adc
mov
push
xchg
cdq
or
sbb
adc
adc
jmp
and
inc
iret
data16
gs
pushf
sar
push
xchg
xor
sbb
inc
mov
push
loop
retf
in
mov
sub
hlt
push
pop
adc
js
out
xor
inc
jno
adc
dec
(bad)
sbb
jge
inc
fcmovnb
mov
sbb
xchg
scas
pusha
setae
inc
adc
into
or
xor
mov
inc
nop
xchg
adc
scas
ins
jp
mov
test
cmp
lds
ja
push
(bad)
cmp
dec
push
cmc
test
pusha
cmp
cdq
mov
lds
(bad)
mov
pop
outs
xor
jecxz
xlat
adc
(bad)
mov
fld
bound
(bad)
jae
cmp
outs
mov
sub
mov
jmp
cmps
js
aaa
add
loope
rcr
add
(bad)
icebp
sbb
pop
mov
pop
daa
out
outs
and
push
inc
aad
or
jo
ret
imul
push
or
add
(bad)
retf
mov
rcr
repz
mov
sub
xchg
(bad)
mov
std
imul
(bad)
dec
inc
mov
sbb
mov
adc
jmp
int
out
lock
cmp
js
in
dec
(bad)
sub
push
jo
push
push
push
repnz
pop
sub
retf
cmp
mov
mov
aad
or
stc
and
(bad)
fiadd
loopne
sub
mov
and
fisttp
push
je
fist
dec
pop
jne
dec
sub
inc
pop
push
adc
xchg
leave
popf
icebp
jno
xchg
mov
mov
popf
xchg
adc
xchg
enter
push
shr
ficomp
stc
inc
mov
addr16
(bad)
enter
out
inc
mov
pushf
idiv
mov
retf
or
ficom
push
paddsw
or
jge
(bad)
enter
xor
and
push
jno
inc
stc
lea
call
les
mov
mov
ror
pop
xchg
scas
xchg
mov
adc
shr
shl
dec
stos
cmp
addr16
mov
(bad)
repz
xchg
loopne
int
jnp
xchg
dec
out
pop
daa
fisubr
mov
shl
fistp
out
sub
scas
dec
and
mov
jge
push
push
and
sar
add
jge
loopne
adc
add
inc
jo
mov
xor
sub
into
sub
jne
cmp
jno
inc
mov
aad
and
push
test
dec
adc
std
(bad)
xchg
cmps
xchg
iret
and
adc
sar
mov
clc
pop
and
jg
mov
call
mov
mov
icebp
movs
lods
loope
retf
addr16
mov
stos
retf
leave
popf
inc
adc
hlt
add
and
adc
cmp
(bad)
xchg
cs
jbe
dec
(bad)
xlat
mov
add
ins
jge
scas
repz
bound
mov
adc
repz
dec
lods
jbe
and
ins
in
inc
mov
in
inc
sub
adc
mov
mov
mov
mov
cmc
add
mov
inc
and
jmp
repz
popa
and
call
adc
ror
mov
dec
xor
(bad)
or
pop
push
push
cmp
mov
sbb
gs
mov
aas
stos
clc
mov
ja
arpl
std
leave
aaa
adc
mov
inc
std
and
mov
ins
and
popa
or
gs
fld
inc
sub
push
in
pop
iret
and
sub
mov
push
ss
es
mov
adc
daa
clc
jge
or
test
pop
add
ret
and
sub
push
add
cld
stos
aaa
arpl
sbb
dec
enter
cmovae
or
imul
jno
sahf
addr16
dec
mov
inc
ins
dec
shl
inc
push
std
imul
xchg
mov
cs
pop
cmp
mov
adc
ret
jp
test
(bad)
and
pop
push
xor
mov
xchg
stc
add
std
enter
hlt
jmp
xor
mov
pop
pop
fs
repnz
test
adc
mov
es
dec
mov
fucomip
mov
stos
nop
sub
stos
pop
lahf
and
imul
mov
or
(bad)
pusha
sub
push
repz
cmp
aam
pop
mov
movs
cdq
jne
and
je
mov
call
cmp
pop
movs
dec
jno
or
xor
jg
push
adc
pop
jmp
pop
mul
jmp
(bad)
out
sbb
mov
mov
cmp
(bad)
bound
movs
daa
mov
and
in
adc
aam
pop
ins
push
pop
push
inc
cmp
aaa
dec
jbe
xor
(bad)
cli
outs
push
lahf
and
mov
adc
retf
loopne
bound
jle
and
bnd
xchg
lods
sub
sub
lods
in
or
cmp
mov
jmp
sbb
adc
inc
aam
data16
cmp
mov
add
pop
cmc
cdq
mov
or
dec
add
in
pop
pop
push
adc
pop
adc
pop
pop
and
mov
cwde
iret
adc
push
cmps
rcl
jb
sbb
xor
mov
scas
jge
pop
repz
cmc
hlt
jmp
xor
mov
xor
int3
movs
sub
inc
icebp
mov
cmp
ficomp
(bad)
dec
loop
iret
push
out
push
outs
movs
test
test
inc
add
ret
add
pop
stos
repnz
fdivr
(bad)
aad
dec
pusha
sahf
shl
pop
mov
lahf
inc
xor
in
xchg
sti
jb
loope
fbld
js
xchg
dec
pop
ss
jl
pop
nop
jl
mov
stos
fild
mov
cs
loop
ret
cld
mov
std
inc
sub
fcomp
push
pop
sub
xchg
mov
push
ret
jnp
dec
xchg
or
js
ds
jns
scas
xchg
add
rcr
movs
sub
lahf
retf
sti
fidiv
xor
jmp
cs
popf
inc
hlt
ins
xor
pop
add
loop
sub
mov
pop
bound
xchg
and
add
mov
fstp
fld
xor
shl
or
in
xchg
xlat
pop
in
pop
mov
lods
fstp
mov
retf
inc
pusha
add
cmp
sbb
in
sub
or
pop
movlps
js
pop
mov
push
clc
mov
stos
pusha
es
jge
xchg
(bad)
sahf
sbb
loopne
jno
rcl
and
add
push
dec
into
xor
nop
mov
enter
and
stos
(bad)
mov
xor
aad
je
loop
ins
std
stc
stos
int
iret
mov
lahf
fsub
mov
cwde
or
mov
dec
aaa
aam
lds
cmp
jg
ss
sub
push
xor
pop
call
sbb
test
adc
add
jg
imul
sub
mov
and
mov
or
adc
out
pop
into
test
mov
inc
(bad)
mov
std
mov
adc
nop
pop
mov
dec
fabs
xchg
or
pusha
push
rol
scas
repz
xor
jnp
push
popf
ret
movs
push
xchg
mov
mov
jmp
mov
or
mov
mov
inc
fwait
scas
adc
cmp
mov
or
or
int3
jbe
or
sub
xchg
inc
ds
xor
mov
rol
add
mov
out
mov
mul
push
mov
mov
xor
mov
cmp
sbb
mov
ret
xchg
repnz
push
jns
add
retf
add
add
dec
data16
popa
add
call
add
inc
(bad)
shl
xchg
pop
add
sbb
in
gs
cmp
cmp
(bad)
fwait
mov
push
pop
xchg
mov
push
sbb
adc
cmp
inc
inc
inc
cs
stos
mov
cdq
popf
push
jmp
sbb
push
sar
fsub
cmc
aaa
dec
inc
sbb
sbb
jmp
std
and
or
sub
retf
inc
imul
add
mov
in
add
jnp
sbb
jmp
inc
jg
push
inc
cs
jl
xchg
pi2fd
add
jle
repz
pop
xchg
or
or
in
or
fcom
push
outs
ja
sbb
mov
pop
lds
dec
add
dec
push
hlt
fs
jbe
xchg
shl
and
iret
in
xchg
cmps
xchg
sub
(bad)
lods
xor
jmp
jae
adc
enter
repz
repz
pop
xchg
mov
out
test
mov
aad
push
stc
int
jno
xchg
movs
and
adc
jl
push
mov
sbb
adc
cwde
mov
adc
ja
sar
enter
retf
les
xor
mov
lahf
(bad)
cs
mov
je
sbb
sbb
jge
xchg
xchg
sub
pop
aad
lea
retf
mov
in
pop
jmp
js
mov
fdiv
outs
pop
inc
leave
in
adc
adc
add
mov
rol
push
addr16
lds
mul
add
ret
std
test
pop
inc
cmp
adc
dec
cmp
lahf
mov
mov
dec
jg
(bad)
outs
mov
jmp
jmp
mov
stc
rol
clc
or
jbe
dec
jo
xlat
mov
jo
fsubr
adc
push
fwait
sbb
fwait
mov
mov
adc
mov
(bad)
stos
iret
stos
push
int3
dec
mov
test
or
aaa
add
fnsave
or
cmp
cli
mov
push
cdq
add
std
imul
dec
mov
ret
mov
sbb
push
xchg
cdq
lahf
ret
inc
test
aas
adc
push
mov
lock
xchg
fwait
mov
lods
rcr
xor
jne
lds
(bad)
sub
pop
int3
push
repnz
ins
mov
shl
dec
xchg
loop
mov
mov
(bad)
mov
fwait
pop
leave
in
idiv
das
sub
cmps
iret
outs
inc
data16
(bad)
aam
addr16
xchg
xor
lfs
cmp
imul
scas
cwde
pop
popf
jle
inc
ja
fild
cs
jg
jg
es
cmp
push
pop
xor
(bad)
in
sub
add
push
hlt
fst
mov
mov
mov
ja
movs
jnp
popf
mov
out
pop
stc
mov
cwde
cmc
gs
cmp
stc
push
mov
iret
and
jae
inc
test
pop
ins
jmp
das
lahf
pop
test
cmp
sub
jl
out
push
xchg
sar
das
cmps
retf
cdq
cdq
adc
ss
mov
jne
jb
pop
jle
inc
dec
xor
test
ja
lock
(bad)
cwde
mov
xlat
push
out
mov
sbb
mov
inc
movs
mov
or
add
inc
mov
icebp
addr16
inc
lea
and
call
jb
in
pop
inc
cmc
scas
push
add
(bad)
sbb
gs
pop
jbe
and
test
call
mul
fisttp
(bad)
call
jle
into
jno
les
or
pusha
mov
sub
(bad)
out
and
push
mov
xchg
ja
jmp
inc
out
mov
fild
and
jbe
sti
test
mov
sub
mov
popa
(bad)
xor
adc
mov
sub
xchg
sbb
fisub
dec
inc
and
mov
shl
dec
das
jmp
mov
fstp
adc
inc
push
mov
shl
nop
or
cmp
idiv
ja
ss
xlat
or
mov
test
fcmovne
cs
int
or
mov
inc
mov
pop
int3
dec
pop
mov
sbb
and
sbb
xchg
rol
jne
daa
xchg
mov
cmp
sar
inc
sub
xchg
add
aad
icebp
int
xchg
and
adc
mov
retf
(bad)
ror
enter
int3
in
xacquire
xchg
mov
int3
push
sub
adc
adc
pop
test
loopne
mov
stos
or
cdq
add
adc
not
loop
cld
pop
enter
stos
jmp
lahf
rcr
repnz
fidivr
sbb
ds
mov
aaa
fld
or
je
in
jns
loopne
pop
clc
cdq
pop
lods
cli
dec
add
aas
fiadd
scas
stc
jno
mov
ds
cwde
inc
test
cmc
xor
sti
aam
dec
mov
cmp
adc
ins
pop
ds
inc
into
sbb
mov
loope
cli
out
pop
and
and
push
pop
xchg
push
or
mov
xchg
ror
std
popa
jmp
adc
std
cmp
cli
mov
repnz
jle
push
pop
cdq
dec
push
inc
je
shr
in
dec
das
push
sub
js
and
out
popa
adc
mov
and
stos
dec
cmp
add
call
xchg
pop
push
adc
fcmovnbe
rol
outs
xchg
add
div
inc
arpl
xor
mov
jns
(bad)
cmp
mov
das
and
xor
iret
xor
cdq
sub
mov
lods
jg
icebp
sti
ret
fldenv
kaddb
(bad)
int3
cdq
lahf
adc
(bad)
pop
add
jne
add
pop
xor
cmp
retf
sbb
ror
cmc
pop
in
jno
xor
fs
fst
data16
mov
ret
lods
xchg
dec
jmp
loop
cs
cmc
push
aam
mov
loope
lock
setle
out
ror
jmp
cld
outs
dec
call
push
sti
das
dec
cmps
shl
cmps
outs
loope
enterw
mov
dec
mov
cmps
ss
stc
jns
jb
(bad)
jmp
enter
(bad)
xor
xlat
xchg
retf
fistp
in
lock
sub
push
into
mov
nop
push
rcr
jmp
je
test
addr16
sbb
imul
or
or
in
sbb
hlt
fist
aad
cmp
mov
retf
pop
cmp
pop
cmp
xchg
in
call
dec
es
sti
push
scas
dec
ja
add
and
push
cli
add
test
pop
or
retf
mov
aad
jmp
pusha
(bad)
call
mov
mov
jg
cmp
push
mov
xchg
pop
movs
sub
sbb
bound
mov
ds
cld
addr16
cmps
stos
pop
adc
shr
leave
gs
mul
cmp
dec
jecxz
ror
fisubr
pop
mov
jno
shl
or
jne
imul
neg
sbb
ja
gs
daa
pop
push
jnp
addr16
aam
sbb
jmp
jns
pop
int3
push
or
mov
push
into
adc
inc
lahf
or
pop
mov
les
sbb
pop
adc
mov
aad
aam
adc
jge
push
fwait
jmp
movs
int3
fwait
sub
jbe
lahf
(bad)
push
xor
aad
mov
cs
and
pop
mov
inc
or
retf
push
loop
mov
clc
xchg
call
adc
sub
fld
sub
and
leave
loope
ins
mov
ja
push
xchg
pop
sub
mov
mov
jno
mov
mov
movs
jle
and
sar
xlat
fild
push
stc
mov
inc
xor
jo
and
jno
add
mov
data16
xchg
add
lahf
sub
dec
retf
div
add
scas
push
lods
cmp
inc
jecxz
xor
mov
push
cli
arpl
arpl
stos
nop
std
push
ja
add
push
add
mov
(bad)
adc
cmp
sub
push
inc
mov
sti
test
xchg
push
movs
aaa
mov
pusha
loope
in
repz
scas
mov
cmp
sub
mov
les
es
sub
sbb
pop
(bad)
das
test
jge
xchg
fisub
ret
jecxz
cwde
pop
cmps
sub
inc
aam
dec
lock
(bad)
cli
dec
mov
test
dec
je
(bad)
push
jbe
mov
lods
fidivr
or
sub
fcom
enter
xor
xor
sti
xor
fisubr
mov
mov
popf
cmps
(bad)
out
outs
add
jp
test
push
mov
stc
ds
in
xor
ins
xchg
std
fstp
mov
addr16
test
outs
dec
xor
pusha
mov
stos
sub
xchg
inc
mov
xor
lock
xchg
pop
shr
mov
xchg
hlt
fldcw
or
mov
jno
jns
xchg
sbb
push
sub
int
cmp
pop
inc
icebp
retf
cli
mov
in
adc
test
mov
and
hlt
mov
pop
add
ds
test
and
aas
stos
fcmovnu
lods
cdq
or
mov
mov
sub
cli
jae
scas
add
(bad)
jnp
adc
and
sti
and
lea
sbb
xor
call
sbb
movs
dec
jmp
pop
push
and
xor
cmp
into
cmp
ret
sahf
push
outs
dec
daa
xchg
jns
mov
mov
sub
cmp
and
(bad)
inc
pop
dec
xchg
dec
imul
test
mov
test
pop
push
dec
leave
sub
pop
xor
cmp
mov
mov
mov
mov
mov
cmp
adc
push
and
ret
or
push
cdq
lahf
jo
add
lods
sbb
and
mov
mov
push
stos
cmps
test
cmp
and
pop
jae
jl
jmp
loop
or
not
mov
and
xor
cmp
jne
push
or
fadd
les
or
lahf
pop
and
out
pop
call
dec
std
imul
ret
mov
or
inc
cdq
(bad)
pop
pop
pop
hlt
fist
add
pop
aas
ds
mov
js
mov
in
outs
aad
xor
pop
(bad)
mov
mov
fistp
jge
lock
dec
and
mov
add
jne
or
cdq
xor
gs
cmp
cdq
add
mov
int
shl
dec
cmps
cwde
cmp
pop
cld
inc
push
ins
jbe
adc
imul
push
mov
or
pop
pushf
out
ror
push
scas
cmovp
add
sbb
push
sbb
cmp
mov
inc
leave
sbb
enter
inc
mul
dec
dec
iret
das
dec
cs
fstp
mov
outs
call
or
mov
jmp
int3
fstp
repnz
inc
sub
xchg
mov
sbb
jbe
cmps
mov
imul
cmps
mov
pop
pop
aas
xor
fmulp
bswap
or
dec
ins
ds
sub
xchg
cmp
(bad)
sub
call
add
das
scas
int
sar
loopne
and
dec
xor
lahf
stos
arpl
shr
daa
clc
ret
xor
mov
imul
pop
xchg
xchg
cmps
mul
xor
dec
cs
in
int
adc
test
fist
int3
and
aas
(bad)
cdq
cmp
js
je
or
ds
inc
add
sub
stos
pop
inc
and
xor
push
mov
sahf
in
sub
mov
pop
outs
cmps
loope
mov
mov
sub
sub
dec
aas
or
or
mov
mov
and
xchg
dec
pop
out
xor
sbb
mov
lock
cmc
cmp
push
shl
test
stc
inc
jmp
push
inc
xchg
xor
loopne
(bad)
lods
out
sub
or
bnd
cmp
adc
arpl
mov
call
pop
sub
out
push
mov
dec
js
mov
fs
in
data16
cmp
jecxz
lods
jbe
push
add
(bad)
mov
jmp
cld
mov
mov
pop
sbb
repz
lock
out
push
movs
or
push
mov
inc
sbb
pop
mov
cmp
mov
ret
sbb
jl
xor
(bad)
(bad)
(bad)
fsubr
icebp
sub
bound
(bad)
pop
jmp
add
add
(bad)
outs
idiv
jns
cmp
pop
adc
rcr
mov
sbb
in
mov
leave
ss
push
repz
fist
xor
sbb
xor
mov
cmp
pop
mov
test
fcom
xchg
jne
xchg
pop
mov
add
pop
push
sub
mov
mov
call
xchg
leave
ins
dec
cli
push
iret
fadd
xor
and
mov
call
loope
lods
les
aas
cld
add
in
push
mov
vsqrtpd
add
add
xchg
sti
add
mov
or
in
cmc
in
mov
cmp
imul
in
adc
add
and
loop
je
pop
xor
add
imul
mov
lods
lahf
shr
sbb
pusha
mov
mov
shr
dec
xchg
fisub
push
push
pop
adc
retf
jmp
mov
shr
add
xor
retf
mov
lods
and
(bad)
mov
mov
pushfw
aaa
sbb
dec
test
push
ins
mov
fs
movs
imul
jne
mov
mul
dec
ret
fwait
and
sar
mov
(bad)
mov
dec
xchg
in
push
or
in
fucomip
push
js
aas
ins
daa
sub
cdq
lods
mov
pop
pop
and
test
push
aas
pmaxub
xor
lock
stos
out
leave
jge
xchg
push
jo
inc
sbb
mov
inc
mov
hlt
add
mov
mov
ret
inc
jle
mov
out
test
pop
xor
pop
ds
inc
(bad)
retf
xchg
pop
call
and
jmp
call
sbb
arpl
cs
pop
mov
mov
cmp
add
and
scas
or
jo
in
sbb
inc
lahf
inc
sub
jno
lock
dec
outs
dec
int3
or
push
nop
inc
xchg
stos
mov
jae
xor
xchg
(bad)
jns
adc
idiv
jp
in
int3
mov
std
fsubr
xchg
loop
test
jno
xor
xchg
and
push
cmp
icebp
inc
sub
imul
lods
jle
(bad)
(bad)
sbb
arpl
fwait
jge
aaa
call
jp
mov
test
mov
cmps
leave
pop
adc
popf
mov
sbb
cs
jmp
sbb
call
clc
push
fimul
mov
xor
enter
push
mov
mov
or
dec
adc
iret
pushf
sbb
push
std
leave
xlat
sar
outs
mov
xchg
ss
bound
adc
enter
xor
inc
scas
cmps
pop
xchg
call
mov
jne
(bad)
int3
fistp
iret
cmp
jb
add
stos
or
push
loope
sbb
iret
sub
push
arpl
xchg
adc
mov
mov
(bad)
jo
(bad)
sbb
daa
mov
mov
jnp
dec
cld
dec
rcr
data16
push
shl
mov
sub
dec
pop
mov
scas
push
out
sbb
add
or
sti
mov
cmp
mov
lea
test
neg
adc
and
jle
jg
int
lock
push
mov
jmp
inc
mov
movs
xchg
mov
xchg
pop
mov
pop
mov
retf
push
imul
clc
pop
(bad)
sub
xlat
ds
jo
mov
in
sub
inc
enter
(bad)
xor
imul
push
call
shl
push
or
loope
rcl
rcl
mov
cmps
idiv
arpl
fild
cdq
ins
out
add
mov
mov
sbb
sbb
inc
div
mov
dec
ins
cwde
dec
inc
(bad)
jbe
xchg
inc
cmps
mov
fnstenv
icebp
add
outs
inc
retf
or
mov
add
mov
pop
xchg
jo
sub
cmp
dec
lods
aad
aam
inc
dec
inc
push
pop
push
mov
add
xchg
aaa
sbb
rcr
xor
ffreep
jb
ds
xchg
jns
nop
and
movs
cmp
mov
push
(bad)
fistp
loop
mov
mov
mov
mul
xlat
cmp
test
sbb
call
icebp
ins
xchg
cwde
nop
or
cmp
mov
arpl
mov
retf
xchg
xchg
retf
int
fld
ret
and
rcr
retf
mov
xchg
inc
call
mov
ss
gs
mov
pop
sub
add
fcomip
push
clc
ret
lahf
jb
push
test
ficom
adc
jmp
jge
leave
ja
or
push
push
ja
sub
lahf
sub
stc
outs
sub
add
das
xor
retf
ins
sbb
popa
rol
(bad)
and
loopne
aas
adc
dec
mov
ret
mov
push
mov
pop
dec
fdivr
pop
dec
ds
sbb
cmp
dec
scas
inc
pop
ficomp
xlat
fnstenv
push
movs
mov
mov
imul
test
mov
sbb
jge
mov
and
mov
jmp
inc
jae
xor
jp
mov
iret
pushf
jo
add
adc
cmp
and
dec
fild
ja
repnz
scas
mov
sbb
sbb
les
adc
movs
xchg
add
pop
call
mov
jns
jmp
inc
cmc
sahf
std
push
xchg
neg
fcomp
jmp
(bad)
jl
or
sbb
loop
dec
mov
jno
or
cmp
sub
xchg
inc
push
mov
retf
adc
cmp
pop
loope
loope
adc
inc
in
mov
cmp
xor
enter
add
inc
(bad)
mov
call
sub
mov
mov
pop
xor
sub
xchg
mov
out
push
call
dec
dec
pop
xchg
cmp
fmul
xchg
or
sahf
imul
(bad)
(bad)
das
sub
mov
mov
jp
js
nop
adc
xchg
sub
pop
ret
loop
push
jno
inc
dec
inc
sub
test
cmp
xchg
cwde
mov
mov
test
cmps
inc
nop
gs
xor
in
ins
outs
mov
mov
cmp
pop
rcl
and
sbb
xor
dec
ins
adc
lods
or
fwait
ins
or
mov
and
pop
push
inc
push
adc
push
mov
jno
mov
or
xor
arpl
inc
lods
popf
cmp
(bad)
jo
mov
push
push
add
loope
cwde
adc
push
iret
jg
aas
clc
push
cwde
nop
daa
or
xor
bound
sbb
(bad)
movs
push
jg
dec
sub
(bad)
lahf
mov
aad
cmp
lods
and
clc
(bad)
pop
aaa
lahf
mov
adc
loop
cwde
jg
sub
push
jb
cmp
sub
mov
sbb
int
mov
bound
test
push
inc
mov
mov
dec
adc
jg
call
and
and
enter
popf
inc
jne
jbe
retf
es
js
scas
push
xlat
and
mov
loop
test
sbb
lahf
inc
fwait
outs
xor
mov
mov
xchg
add
add
call
fincstp
cli
lds
or
and
cmc
aam
push
sbb
add
repz
mov
arpl
ins
std
pop
xchg
ret
sub
aad
dec
mov
bswap
and
fld
(bad)
in
cmp
lods
sbb
jle
neg
adc
xor
popf
sub
pop
xchg
fwait
and
imul
inc
jp
fiadd
aaa
pop
sbb
xlat
or
out
imul
jae
xchg
add
push
sbb
fild
push
sbb
xchg
xchg
scas
(bad)
imul
sar
mov
cwde
outs
xor
loope
xchg
out
ds
mov
in
cmp
icebp
push
iret
xchg
and
iret
cmc
dec
cmp
sbb
push
xor
lods
push
mov
push
push
movs
iret
fmul
inc
mov
fwait
and
or
add
mov
mov
jp
inc
loop
or
cs
mov
dec
ss
jb
icebp
push
les
(bad)
pop
repz
cmp
sub
xor
sub
iret
mov
cmps
and
cld
out
mov
mov
sar
or
in
mov
mov
mov
or
push
xor
clc
add
adc
adc
jle
test
mov
mov
or
and
jp
out
imul
jne
sub
mov
je
cld
retf
xor
or
adc
dec
jmp
das
bound
or
pop
jae
aam
mov
ins
cli
pop
repnz
inc
pushf
xor
mov
call
and
outs
cmp
dec
inc
lock
pop
cmps
test
cli
cld
gs
aad
hlt
idiv
or
mov
and
arpl
push
push
cs
mov
add
(bad)
fwait
scas
lock
sbb
shl
sar
mov
xor
adc
(bad)
lds
dec
add
mov
shl
ins
out
out
(bad)
inc
outs
mov
xchg
(bad)
out
fwait
cmps
lsl
and
dec
xchg
sbb
push
mov
vandps
inc
add
test
fmul
jb
das
and
and
das
pop
sar
and
rol
mov
fwait
aas
clc
int3
cmp
cwde
and
xlat
(bad)
jb
(bad)
dec
xor
inc
and
mov
stos
addr16
mov
xchg
out
xchg
daa
pusha
stos
jae
jno
ds
fadd
mov
jne
pusha
xchg
iret
sti
and
aas
push
add
arpl
adc
in
mov
dec
xor
repnz
imul
and
out
push
dec
scas
aaa
pop
les
daa
sub
pop
jl
(bad)
adc
ins
jle
sbb
jl
mov
jp
mov
adc
jle
pop
mov
stos
inc
or
push
sahf
(bad)
fidiv
mov
dec
sub
fdivp
loope
(bad)
test
inc
push
mov
sub
lock
test
sub
cs
jo
xchg
ret
and
clc
scas
mov
pop
sub
xchg
xchg
push
data16
sbb
jae
rcl
iret
pop
jmp
mov
xor
add
mov
push
jae
pop
mov
jl
icebp
xchg
fwait
xor
addr16
push
xchg
cmps
(bad)
jne
ret
push
into
dec
sub
pop
mov
push
inc
mov
adc
jb
cmc
fcom
push
lods
dec
retf
mov
push
stos
ret
fiadd
xor
add
xlat
mov
inc
shl
loop
lahf
jo
sar
inc
clc
xchg
add
mul
stos
dec
lds
dec
pop
jo
loopne
in
dec
test
and
jg
lahf
cmp
adc
xchg
in
lds
push
jle
push
call
push
lock
xchg
int
fucomi
movs
mov
jae
push
mov
mov
jg
xchg
mov
and
push
shr
push
adc
or
(bad)
repnz
mov
and
retf
xchg
jns
mov
cmps
sub
mov
mov
cmc
outs
pop
ret
cmps
loopne
int3
adc
jmp
lods
mov
or
push
sbb
data16
jg
rcl
xchg
mov
jl
retf
retf
test
shl
leave
pop
jnp
inc
hlt
pop
out
or
iret
call
retf
push
mov
mov
shl
mov
mov
mov
jnp
adc
scas
jle
xor
lods
(bad)
dec
pop
leave
inc
sbb
mov
int
enter
dec
add
fadd
dec
dec
daa
hlt
xchg
mov
xor
scas
dec
sbb
mov
mov
inc
pop
mov
dec
fbstp
ror
sbb
js
test
(bad)
sub
arpl
jno
pop
notrack
jmp
cmp
add
aaa
sbb
int
pop
sbb
fneni(8087
mov
push
or
xchg
outs
xlat
lods
xsha1
cmps
or
cmp
inc
ds
and
push
cmps
ss
sbb
fld
push
stc
xor
xor
sti
(bad)
sub
mov
bnd
lahf
jne
jnp
dec
punpckhbw
pop
es
xor
mov
ins
sub
loopne
lahf
fbld
shl
sbb
cld
aas
pop
leave
clc
retf
lock
xchg
psubusb
mov
aam
(bad)
cmp
push
bound
fdiv
or
hlt
enter
fist
mov
jl
jge
sub
fwait
ins
shr
clc
call
popa
lea
mov
outs
and
neg
ja
fnstsw
test
call
jle
or
lea
jbe
aas
repnz
sub
dec
mov
mov
sub
sar
pushf
pop
nop
and
and
mov
pushf
not
sbb
and
out
mov
xor
push
push
inc
das
sar
adc
iret
sub
jns
aad
mov
push
or
sbb
lds
xor
stc
repz
mov
nop
bound
fadd
sub
mov
cmp
pop
dec
xchg
in
or
cmp
cs
fs
inc
retf
adc
in
xchg
sub
lea
adc
xor
fs
outs
sti
sbb
test
sti
cmps
pop
and
stos
outs
dec
(bad)
dec
jl
dec
and
xchg
out
pop
cmp
mov
adc
and
sub
cmc
inc
aaa
mov
aas
test
scas
dec
xchg
jae
xchg
jmp
jle
int
or
inc
inc
add
inc
mov
stos
(bad)
fdiv
mov
adc
inc
cwde
and
inc
inc
popa
xchg
sahf
jp
mov
dec
test
jmp
sahf
adc
or
and
dec
adc
mov
sbb
inc
shl
mov
lods
sbb
jecxz
outs
adc
shr
in
inc
jp
mov
xor
and
push
jecxz
movs
data16
and
sahf
repz
sti
inc
and
int3
paddq
sub
jge
sub
mov
and
add
xor
lods
shr
mov
add
jnp
mov
jmp
sub
test
push
adc
push
ret
dec
fwait
ins
xchg
inc
ret
out
dec
cmp
dec
push
scas
mul
mov
jo
stc
adc
inc
sbb
mov
pop
dec
cwde
out
jno
cmps
adc
inc
int
lock
mov
fwait
shl
cdq
adc
rcl
mov
shr
ret
addr16
fdiv
or
mov
je
or
popf
pop
pop
mov
sti
mov
sub
push
jmp
mov
loop
jne
xchg
adc
aas
adc
dec
call
cwde
out
mov
jle
xchg
pop
clc
xor
xor
sub
or
add
stos
pop
call
leave
xor
xlat
(bad)
xchg
in
jns
jbe
add
push
dec
or
(bad)
sub
adc
push
push
in
stos
ds
and
fld
jne
mov
mov
scas
out
jnp
or
fs
jmp
xchg
pusha
ja
mov
push
jp
xor
push
or
dec
loopne
jb
ins
lea
cmp
sub
imul
inc
ret
js
clc
jmp
xchg
fimul
enter
jae
cdq
imul
rol
or
and
aam
mov
xor
movs
mov
jbe
adc
inc
jl
cwde
or
mov
iret
aad
neg
mov
jl
adc
popf
push
mov
fsubr
loop
adc
test
inc
cwde
jge
inc
loop
fisttp
add
and
push
or
add
push
(bad)
xlat
jp
pop
fidiv
fwait
dec
add
in
call
and
cli
sti
sub
xchg
add
sub
test
aad
leave
cmp
adc
ret
shr
xchg
pop
xchg
mov
push
inc
or
sub
xchg
mov
mov
xchg
pop
and
ds
push
inc
div
inc
mov
mov
leave
sbb
mov
test
xor
clc
dec
inc
cmps
nop
cmp
rcr
aad
aam
pop
sub
lods
mov
push
pop
cld
mov
push
inc
xchg
add
mov
(bad)
mov
dec
inc
jl
aas
cmp
jl
xor
fwait
int
sbb
mov
pop
das
mov
movs
int
add
nop
je
mov
add
stos
mov
sub
pop
gs
cmp
les
sub
cmps
xor
pop
arpl
jl
push
ror
out
cmp
and
retf
sbb
outs
sub
(bad)
push
adc
xchg
aam
fimul
jmp
nop
test
js
dec
inc
jne
pop
vmwrite
les
loopne
ds
mov
cmp
cmp
adc
cmp
shr
int3
sub
mov
hlt
mov
xchg
les
lods
aad
sbb
mov
fwait
cli
xchg
mov
jnp
xor
mov
adc
sub
cmc
loope
cmp
dec
jmp
cmp
push
aas
pop
fcmovbe
xchg
sbb
cmp
jle
icebp
xor
xchg
pop
push
jg
ret
pusha
jecxz
jns
push
inc
dec
adc
push
inc
jo
jmp
ds
fcomp
std
push
push
sbb
cmps
popa
fwait
daa
retf
adc
out
add
xor
xor
ins
fisub
jp
dec
push
or
rcl
mov
xor
cli
dec
retf
test
es
stos
(bad)
push
vdivps
test
jbe
ror
loop
ds
sbb
arpl
jle
push
cmp
push
xchg
and
aas
cli
add
outs
sub
les
or
sbb
dec
sbb
inc
push
test
sub
imul
in
gs
mov
nop
or
inc
jecxz
adc
or
add
aad
sar
out
inc
push
(bad)
call
cmps
inc
repz
fdivp
clc
xor
dec
(bad)
ja
xor
xlat
in
cmps
and
mov
jb
ret
jae
dec
xchg
in
cmps
sbb
gs
cld
aas
or
pop
dec
enter
cmps
jecxz
push
cmps
popf
xchg
adc
fidiv
loop
mov
jns
fxch
pop
adc
sbb
cmp
bound
cmp
or
push
cs
arpl
fild
fdiv
cmps
or
retf
inc
push
cmps
and
xchg
cmp
push
sbb
mov
and
jp
jne
pop
(bad)
imul
and
out
loope
(bad)
ja
xchg
and
mov
cmp
xchg
aaa
cmp
pop
push
hlt
dec
je
fild
addr16
fimul
cmc
dec
ds
adc
mov
or
jp
xchg
mov
jmp
xchg
jno
ins
in
cs
outs
push
clc
jmp
xchg
outs
imul
add
rcl
bound
inc
ret
in
jb
imul
outs
test
sbb
mov
cwde
out
in
jne
xor
add
or
ja
push
pop
cs
xor
mov
stos
loope
inc
scas
mov
(bad)
inc
xor
push
cmps
bound
arpl
or
mov
sti
add
push
cmp
js
jl
xor
add
jp
cmp
and
(bad)
clc
inc
movs
mov
jmp
neg
adc
inc
cmc
pop
jle
call
or
rcl
dec
hlt
mov
sbb
sub
push
repz
ret
stos
dec
(bad)
adc
stos
adc
aad
(bad)
sti
adc
adc
mov
lods
push
add
lock
inc
sub
bswap
and
test
es
leave
add
mov
retf
mov
inc
jp
inc
clc
push
and
xor
jp
inc
mov
test
mov
adc
in
or
xor
loop
sahf
mov
movs
pop
pop
test
inc
retf
push
dec
sbb
rol
nop
iret
jg
pop
jmp
dec
dec
and
cmp
xchg
dec
rcr
fnsave
nop
ret
mov
jae
xchg
mov
mov
scas
call
jae
pop
frstor
mov
jae
adc
add
mov
mov
push
retf
gs
cld
test
mov
fwait
add
imul
(bad)
jmp
imul
icebp
xor
cmp
or
test
in
push
or
stos
inc
sbb
retf
jmp
pop
scas
xchg
sub
add
(bad)
sub
sbb
and
hlt
fcomp
and
mov
retf
jg
cmc
test
inc
cmps
test
sar
cs
sbb
out
jne
cmc
in
mov
ret
push
jbe
add
mov
jns
cli
sbb
xor
lock
sar
jno
xchg
mov
mov
jne
cmps
push
scas
test
(bad)
inc
sub
cld
push
stc
pop
mov
repnz
out
jno
push
mov
call
cwde
jae
mov
fs
push
xor
(bad)
jae
mov
data16
test
adc
jb
push
pop
mov
mov
out
sbb
xchg
mov
cmp
mov
mov
xchg
fwait
test
aas
sbb
stos
outs
sti
daa
xor
dec
movs
into
lahf
je
stos
je
adc
pop
or
xor
jg
loop
mov
popf
add
jbe
inc
push
cmps
imul
push
int3
popa
fild
cmp
in
adc
rcl
bound
ret
dec
repnz
cdq
xlat
(bad)
test
push
fimul
shld
scas
enter
jbe
mov
(bad)
test
fsubr
mov
iret
add
sbb
out
adc
movs
pushf
and
or
and
jo
daa
js
enter
(bad)
push
idiv
sub
lods
or
pusha
cmp
aaa
or
or
cmp
mov
loope
mov
in
xor
jo
arpl
pop
pop
jb
xor
cmps
(bad)
in
jmp
mov
(bad)
stc
add
and
je
add
jmp
xchg
sbb
fnstenv
imul
jb
inc
aas
imul
mov
sbb
cmp
and
push
push
push
test
xchg
pop
fidiv
dec
mov
in
xchg
dec
mov
pop
cmc
and
cmp
sbb
repnz
and
shl
(bad)
push
mov
lods
scas
jp
addr16
std
(bad)
mov
cmp
pusha
jb
call
push
out
pop
es
jmp
mov
add
adc
popa
jb
xchg
sahf
fs
fwait
adc
daa
fnstsw
movs
jns
repnz
sbb
loope
cwde
adc
bound
fnstcw
inc
sub
inc
cs
into
push
xor
inc
push
adc
jb
xor
fidiv
push
repz
add
mov
test
dec
ror
bound
adc
cmc
loopne
mov
mov
sub
scas
out
add
shl
dec
cmp
imul
push
xchg
daa
adc
mov
test
sub
into
rcl
cdq
cmp
jecxz
scas
push
fs
xor
hlt
loop
sahf
cmps
dec
add
cwde
cmps
add
out
enter
pop
shr
sbb
ja
cld
pop
sub
repnz
adc
jb
adc
imul
xlat
dec
cmp
xchg
in
idiv
mov
mov
ficomp
inc
loope
call
adc
push
jle
adc
xchg
mov
ins
fdivrp
and
pop
retf
imul
(bad)
aad
push
repz
ret
mov
push
in
ins
sbb
sub
mov
push
rcl
inc
scas
or
scas
add
ja
cmp
cdq
int3
aad
das
jb
adc
mov
addr16
mov
pop
loope
dec
fs
test
or
setae
fcom
retf
mov
add
repnz
adc
scas
fs
push
and
push
test
or
aad
dec
or
cmp
repnz
mov
cmp
cmp
ss
pop
jnp
mov
ins
test
daa
mov
ds
cmp
adc
and
bswap
mov
in
into
fld
push
dec
dec
or
sbb
ins
leave
movs
pop
dec
out
outs
out
add
es
loope
shl
ins
pop
jge
jno
xor
(bad)
loope
mov
sub
leave
or
sbb
std
or
iret
and
ror
inc
in
cmc
loope
lods
cmp
sub
inc
sbb
out
cmp
cmp
pop
push
adc
lds
inc
ins
add
sub
and
jecxz
stc
out
dec
popf
push
jno
in
mov
outs
inc
in
popf
mov
stc
cs
imul
push
cs
ins
fst
mov
pop
fnstcw
jb
scas
enter
push
mov
and
sub
pop
pop
push
inc
shl
clc
mov
lods
xor
mov
sub
xchg
inc
xchg
sub
dec
jae
push
out
inc
adc
in
add
retf
pop
jo
imul
fdiv
push
das
jne
push
leave
call
dec
test
call
lahf
cmp
xchg
cmp
adc
add
(bad)
stos
aad
xchg
and
xor
(bad)
test
(bad)
xchg
or
or
cmc
sbb
inc
push
dec
leave
push
mov
push
mov
push
sub
inc
mov
dec
cdq
pop
sbb
cld
mov
and
dec
iret
mov
pop
mov
scas
pop
cwde
mov
test
test
fucomi
push
mov
push
aam
mov
mov
mov
cmp
mov
lods
cld
inc
sti
push
xor
out
push
jmp
dec
lea
xchg
leave
jne
add
add
xchg
add
mov
fcom
retf
rcl
ins
retf
cwde
push
sahf
pushf
mov
out
pusha
ficom
dec
inc
(bad)
mov
bound
xchg
sub
push
enter
and
fcom
mov
pusha
das
adc
aam
pop
pop
jns
jbe
aas
jg
mov
cmp
fimul
rol
pop
inc
repz
or
add
jno
inc
sti
inc
in
lea
idiv
adc
adc
xor
jnp
test
cmp
gs
inc
dec
mov
imul
out
mov
inc
mov
add
xchg
jl
cmp
sub
mov
push
and
adc
and
adc
outs
mov
mov
cmp
and
mov
and
dec
stos
xchg
je
aam
mov
rcr
xor
xlat
dec
jg
mov
repz
aas
in
or
or
mov
and
push
cmp
sub
fnstenv
arpl
fld
fidivr
push
push
dec
fwait
lea
dec
add
adc
jp
jb
xchg
ret
push
in
lea
or
pop
repz
pusha
or
or
iret
loop
xor
sbb
les
xor
fadd
in
inc
in
div
inc
imul
and
pop
cdq
pop
jge
addr16
mov
xchg
(bad)
sbb
pop
sar
les
adc
test
jno
cmc
xchg
jo
sub
test
mov
shl
inc
rol
movs
pusha
adc
sub
call
fnstenv
jmp
sbb
enter
push
scas
adc
clc
mov
daa
ja
mov
cmp
mov
popf
fcomp
mov
cmps
mov
xchg
push
cmpss
push
xor
fstp
fs
push
inc
in
arpl
mov
push
mov
sahf
je
cmps
mov
pop
sub
sbb
push
adc
rol
cmp
in
loop
(bad)
adc
xchg
xor
retf
sbb
jo
scas
outs
xchg
jbe
cmp
out
pushf
push
mov
in
std
outs
mov
(bad)
test
pop
lds
out
mov
pop
push
pop
jno
mov
sub
inc
in
mov
jne
imul
rcl
jnp
mov
jge
adc
les
inc
cmps
int
sar
lock
ror
jno
lock
mov
div
jno
shr
movs
loop
mov
and
in
mov
test
sub
xchg
add
popf
outs
jo
pop
xchg
mov
neg
mov
clc
call
inc
enter
es
fs
dec
mov
dec
xor
shr
ins
leave
xchg
pop
dec
jbe
js
lods
in
scas
sub
xlat
dec
and
sbb
aaa
adc
in
cmp
lods
fiadd
call
clc
int
out
fwait
pop
mov
dec
or
pop
iret
fsub
pop
mov
sub
lea
data16
push
data16
xchg
mov
mov
ret
das
jbe
mov
imul
lods
xchg
sbb
ret
pop
js
inc
xchg
push
jmp
or
inc
push
vpaddw
hlt
mov
jmp
std
pop
call
jmp
enter
inc
mov
mov
popa
pusha
ret
inc
pop
and
imul
out
shl
bound
test
add
pop
ins
retf
xchg
push
pushf
inc
push
push
jb
(bad)
fs
out
pop
mov
sbb
(bad)
(bad)
test
push
js
sbb
jne
scas
inc
sub
adc
add
pop
jmp
lods
fs
mov
(bad)
fwait
xor
call
js
dec
mov
jp
add
pop
aaa
jecxz
jge
and
jns
repnz
test
adc
xlat
cmp
out
jo
inc
sbb
mov
daa
sahf
ss
sub
mov
mov
hlt
lahf
(bad)
outs
aas
std
mov
pop
lods
sub
cli
sub
push
xchg
adc
pop
push
mov
dec
ret
nop
sbb
mov
enter
ins
or
jae
outs
jo
movs
popa
jp
or
mov
sahf
inc
mov
out
fs
cmp
and
sbb
std
stos
mov
test
lea
out
mov
mov
lock
xor
and
std
not
cmp
cmp
xlat
and
mov
out
mov
shl
xchg
bound
outs
inc
add
outs
ins
pop
sub
push
stos
movs
mov
lock
cmps
mov
and
sub
shr
adc
adc
cli
std
(bad)
and
mov
xlat
pushf
jae
sub
fiadd
mov
mov
mov
add
dec
mov
iret
js
enter
int3
push
daa
dec
pop
adc
inc
shl
call
lea
icebp
mov
xchg
(bad)
out
mov
push
lods
jp
adc
pop
dec
fimul
or
sub
adc
pop
int3
xchg
push
inc
dec
push
test
movs
sub
inc
aas
inc
or
icebp
jp
inc
dec
xchg
mov
retf
cdq
sub
and
sbb
test
cmps
or
dec
push
pop
iret
cld
(bad)
out
add
mov
sub
ret
sar
mov
int
in
pusha
(bad)
push
gs
not
xchg
loop
shr
ss
xor
jne
pop
cmp
add
mov
mov
mov
sub
aam
add
into
retf
je
jo
in
mov
popf
shl
sbb
push
(bad)
xchg
les
dec
inc
pusha
out
sahf
xor
inc
cmp
jnp
sub
outs
xchg
int
cwde
loop
pop
dec
and
test
je
jmp
iret
xlat
push
arpl
movs
sub
xlat
mov
nop
lea
nop
in
repz
xchg
jns
jbe
jmp
xor
sub
pop
jae
mov
(bad)
sbb
mov
aaa
ret
movs
push
je
push
and
call
push
mov
xchg
nop
les
pushf
movs
push
psllq
mov
push
hlt
pop
sbb
sbb
dec
xchg
paddd
jge
dec
movs
sbb
sar
repnz
fs
(bad)
dec
lods
(bad)
popf
pop
sbb
lock
cmp
sbb
mov
nop
mov
sub
inc
es
retf
loopne
mov
stos
aam
lahf
(bad)
jmp
arpl
adc
pop
inc
xchg
into
xor
push
dec
adc
test
popf
in
lock
fidiv
data16
out
and
mov
cmps
mov
xchg
jge
add
call
aad
in
in
ins
call
clc
(bad)
in
mov
xor
mov
js
pop
push
jle
and
enter
cmp
in
sbb
push
jmp
cmp
pop
add
jae
mov
mov
mov
push
out
xor
(bad)
popa
mov
das
dec
icebp
jecxz
pop
test
mov
xchg
push
mov
sbb
int3
sbb
popa
ja
mov
fnstcw
push
jg
lock
jl
lods
dec
mov
fwait
lds
fucompp
jo
cwde
in
push
xchg
test
sti
pushf
xchg
test
mov
fiadd
push
loop
lods
jb
dec
jb
pop
inc
fwait
sbb
inc
ficom
mov
call
xor
inc
jg
and
loop
sbb
jo
jbe
leave
clc
jl
(bad)
or
in
cld
xor
jno
inc
inc
sub
jge
stc
fsubrp
sti
dec
inc
stos
jmp
shl
pop
aaa
hlt
pop
jl
cli
sti
xchg
cmp
les
jbe
cmp
aam
jno
push
iret
dec
lods
cmp
int
retf
shl
jp
jmp
lock
cmp
xlat
pop
mov
ins
enter
cmc
sbb
je
sub
call
loop
cmp
jecxz
pop
popf
ret
call
sar
inc
das
dec
push
(bad)
push
jmp
xchg
inc
jmp
fsubr
mov
mov
xchg
inc
imul
pop
je
xchg
xchg
xor
cmp
stc
cld
mov
popa
cmps
popf
and
jae
jg
add
jl
shr
add
repnz
sbb
stos
mov
fisubr
add
jb
and
jns
pop
xchg
push
jmp
lods
sub
and
dec
sub
(bad)
push
std
inc
aaa
jp
sbb
mov
inc
pop
push
push
mov
int3
sbb
stc
inc
and
cdq
test
pushf
pusha
std
mov
mov
rcr
sub
xchg
icebp
int3
outs
push
pop
jo
pop
sub
jecxz
and
cmp
and
retf
call
sbb
dec
jle
cpuid
xor
jns
fsubr
pop
retf
aam
dec
push
jle
sar
push
lea
cmp
pop
pop
mov
in
addr16
jbe
shl
leave
mov
mov
loope
pop
mov
enter
mov
loope
gs
xchg
inc
push
(bad)
xchg
pop
and
sub
jl
sbb
iret
repz
aam
mov
out
imul
or
dec
and
fst
outs
(bad)
clc
inc
in
movs
pop
call
mov
jle
test
js
sar
jne
cmp
popa
retf
cld
es
mov
sub
xchg
mov
outs
or
call
adc
push
xchg
clc
push
and
jecxz
xchg
push
imul
cmp
leave
xchg
fwait
ror
jmp
mov
jae
jg
in
adc
cmp
pusha
gs
cld
push
xchg
xchg
adc
ss
lea
push
pop
sub
pusha
inc
add
and
pop
enter
(bad)
mov
test
mov
in
xor
xchg
fild
cmps
and
sub
jo
es
sbb
test
push
add
push
inc
jecxz
mov
add
call
xor
inc
pop
fsub
inc
(bad)
jmp
pop
add
dec
inc
cmp
ss
sti
imul
dec
sahf
stos
loope
(bad)
mov
nop
cwde
cmps
pop
dec
adc
mov
push
mov
ds
into
sbb
inc
xor
mov
into
(bad)
stc
nop
ret
mov
pshufw
mov
imul
mov
es
dec
fistp
jb
add
add
and
pop
ins
ins
mov
icebp
sbb
rcr
outs
ds
call
ror
push
je
xchg
dec
mov
cmp
mov
jns
or
sar
std
pinsrw
out
in
cmp
mov
push
push
psubq
mov
pop
xchg
or
push
pop
movs
xchg
cmp
pop
xchg
and
mov
inc
push
mov
xchg
mov
xor
adc
xor
inc
fnstsw
fidivr
int3
lahf
mov
(bad)
and
xor
aam
xor
dec
test
mov
repnz
jl
aam
(bad)
call
xor
jle
inc
xchg
xor
std
cmp
xchg
or
dec
fnstsw
dec
mov
dec
stos
cmps
xor
ins
jne
ins
inc
and
add
ja
outs
cdq
cmp
scas
gs
jb
cmovnp
cmp
fist
pop
sub
ret
jns
sub
inc
stos
mov
or
test
stc
int
retf
jg
mov
aam
lods
pop
jbe
add
retf
(bad)
rol
xor
xor
lea
sub
out
das
xchg
mov
xchg
mov
into
pop
sbb
mov
nop
pusha
ss
adc
lahf
mov
div
jg
js
clc
xor
adc
in
xchg
push
cmp
mov
data16
push
call
loopne
xor
or
mov
jp
(bad)
mov
or
push
loop
inc
mov
in
pushf
mov
xor
mov
es
and
ficom
push
push
push
jg
inc
nop
cmps
pop
je
leave
jne
and
sub
pushf
daa
mov
mov
jmp
shr
test
push
add
and
jg
push
mov
addr16
add
jbe
jge
mov
push
dec
mov
rol
jb
sub
stc
push
out
mov
or
icebp
fcom
imul
imul
inc
sub
xor
(bad)
jo
(bad)
movs
pop
cmp
push
mov
jno
sub
mov
push
and
xor
(bad)
xor
xchg
pop
clc
xchg
(bad)
into
mov
push
mov
adc
sbb
pop
mov
mov
ret
loope
mov
(bad)
(bad)
push
(bad)
mov
call
fcmovbe
sbb
es
pop
add
and
pop
xor
add
mov
js
push
push
lock
rol
mov
popf
popa
pop
int
and
pop
in
out
mov
mov
stos
sub
pop
pop
add
mov
stos
fist
adc
dec
cdq
retf
jo
mov
fiadd
jbe
jge
ror
daa
mov
xchg
mov
or
test
loopne
stos
rcr
cmc
int
push
inc
pop
(bad)
lock
xor
stos
dec
sar
push
or
xor
setg
cmp
push
std
mov
mov
xor
xchg
fstp
ins
or
jg
cwde
sar
scas
or
sbb
cmp
jl
repnz
(bad)
push
ins
iret
call
out
cmp
into
test
add
and
movs
push
test
and
call
or
mov
aam
jmp
pop
pop
aam
and
mov
pop
or
popa
pushf
sub
data16
lock
pop
mov
fisttp
jae
call
(bad)
out
outs
je
test
sbb
mov
xor
pop
pop
pusha
xchg
daa
sbb
clc
inc
sbb
fsubp
pop
rcl
push
stos
push
in
pusha
inc
dec
add
aas
pop
(bad)
xor
sub
add
mov
xlat
inc
adc
outs
inc
arpl
dec
mov
ins
sbb
cmps
push
nop
jns
xor
mov
daa
in
test
movs
xchg
cmc
jbe
jo
push
stos
lahf
mov
sbb
mov
lds
sbb
mov
enter
int
jmp
add
aas
sub
mov
jp
pop
add
cmps
pop
rcl
js
or
add
loop
inc
sbb
lods
mov
add
call
jns
mov
mov
jl
mov
rcl
jns
loopne
jo
scas
mov
push
pop
dec
mov
dec
sub
sub
mov
js
test
jo
dec
outs
xchg
lock
and
fwait
imul
or
mov
mov
or
push
sub
mov
dec
jo
out
sub
and
test
pop
retf
mov
jmp
and
sub
std
sub
jecxz
jp
adc
(bad)
pop
cmp
dec
push
shl
push
push
sub
and
xor
fisub
hlt
dec
inc
mov
hlt
pop
inc
fnstcw
test
pop
sub
xor
dec
loop
mov
in
es
or
rcl
imul
ficom
inc
cmp
pop
popf
rol
ja
fstp
xlat
adc
enter
out
pop
fstp
mov
stos
xlat
mov
mov
push
xor
jmp
xor
lock
cld
and
sti
pop
cmps
sub
dec
popf
xor
test
in
loop
mov
jmp
frstor
sub
inc
popf
sbb
outs
jne
popaw
push
xlat
sti
xchg
xor
mov
cmp
jns
imul
popf
clc
js
adc
jno
rcl
movs
ins
jbe
movs
(bad)
adc
sub
mov
xor
mov
jne
pusha
cdq
out
sbb
pushf
test
inc
fisub
ins
push
mov
add
cmp
push
neg
(bad)
enter
push
sbb
call
out
les
mov
das
pop
sub
mov
xchg
fadd
sahf
scas
ds
xchg
mov
dec
retf
(bad)
mov
inc
cld
jmp
pop
gs
aaa
mov
cwde
add
dec
push
and
mov
inc
rol
cmps
push
lock
pop
mov
rcr
xchg
or
cmp
jbe
dec
leave
adc
adc
sub
sbb
nop
push
dec
out
sbb
mov
push
adc
hlt
ret
jae
xor
or
ja
clc
xchg
sub
fs
inc
mov
adc
ror
mov
retf
pop
scas
mov
add
out
mov
or
mov
ret
sbb
popf
mov
xlat
pop
and
or
addr16
push
fnstsw
mov
iret
(bad)
cld
adc
fld
dec
and
add
dec
lea
pop
out
(bad)
push
test
dec
test
add
xchg
cli
xchg
dec
jecxz
jo
hlt
xlat
fs
sub
imul
mov
pop
dec
outs
pusha
fadd
xor
push
push
jae
(bad)
lock
popa
pop
inc
movs
jnp
loop
imul
cld
mov
ror
js
xchg
pop
fsub
fwait
(bad)
aas
fwait
jmp
call
xchg
or
sub
jmp
or
jecxz
gs
jno
mov
push
add
inc
scas
arpl
pop
ins
cmps
into
test
sbb
test
dec
inc
xor
sbb
fisttp
cmc
mov
jmp
repnz
and
add
aas
mov
popa
push
in
jg
aam
xor
mov
push
stos
gs
ror
call
div
dec
call
jo
xchg
and
lods
jb
cwde
add
mov
adc
cmp
push
in
repnz
pop
ja
in
in
mov
pushf
repz
add
or
add
(bad)
stc
or
vpshuflw
jns
xchg
mov
push
mov
mov
push
cmp
test
dec
mul
sub
sub
in
cs
inc
sbb
aam
jg
and
ret
popf
repz
jp
fisubr
inc
ret
and
dec
xor
jmp
cmp
sub
fwait
das
out
lahf
inc
mov
fist
fstp
aas
out
gs
jmp
sub
ret
or
cmp
push
or
mov
lods
push
aam
inc
out
fs
movs
lahf
pop
call
xchg
cmps
adc
cmps
mov
mov
iret
in
inc
add
push
cmp
daa
in
test
xor
stos
test
jge
(bad)
mov
out
call
sbb
mov
mov
bswap
rol
mov
imul
adc
and
sbb
and
(bad)
mov
mov
xor
inc
jnp
lods
lds
pop
cwde
stc
neg
popa
int
mov
adc
inc
dec
ret
out
xchg
(bad)
js
xor
aad
or
imul
lahf
mov
ret
xor
add
add
call
fsubp
rol
xchg
scas
daa
push
lock
jno
and
retf
sahf
(bad)
mov
cmps
adc
mov
pop
mov
jno
jo
test
mov
gs
push
mov
sbb
mov
mov
dec
out
fidivr
test
shl
call
sbb
adc
push
xchg
cdq
sub
enter
repz
lds
pop
dec
or
pop
xlat
lock
xor
ja
push
push
imul
not
or
and
add
add
mov
std
arpl
mov
push
and
xchg
xor
jmp
pop
mov
rep
enter
inc
jge
adc
movs
les
jno
in
sub
lods
ins
popf
sub
sbb
cmp
sahf
or
xchg
fdivr
stos
stc
outs
bound
ins
das
inc
adc
test
mov
xlat
and
cwde
sub
lods
outs
push
jbe
ds
out
pop
mov
dec
or
and
sbb
cli
(bad)
adc
fstp
rcl
cmc
retf
inc
xor
push
dec
cmp
fwait
jne
dec
mov
ffreep
ss
push
pop
mov
idiv
jb
mov
adc
rcl
nop
dec
and
out
and
(bad)
daa
dec
sbb
sub
fimul
(bad)
data16
mov
sub
cmps
pusha
jne
dec
or
xor
addr16
in
xor
imul
ss
clc
and
mov
xor
jle
ja
adc
jge
sub
dec
sar
test
repz
loopne
dec
aam
and
fwait
or
and
imul
cdq
or
rcr
jmp
in
ror
pop
push
adc
test
shr
inc
mov
les
or
or
push
mov
fucom
lahf
cs
push
dec
jb
push
xor
and
xor
xlat
xor
ficom
and
sbb
mov
or
inc
ret
add
dec
adc
push
(bad)
cmp
pop
sbb
dec
nop
jnp
push
cli
cmc
loop
jg
or
nop
das
adc
cmp
adc
movs
cld
es
imul
xchg
ja
adc
push
jmp
dec
push
pop
inc
daa
ja
or
push
xlat
push
ds
(bad)
data16
jg
xchg
jmp
in
xchg
scas
leave
stos
daa
stos
popf
lods
dec
rcr
out
sub
rcl
js
fcom
mov
pop
push
sub
sbb
loope
loop
jnp
pop
and
ret
cmp
push
shl
push
iret
push
adc
xchg
inc
jmp
test
inc
xchg
pop
loop
movs
cmp
jmp
xchg
mov
fstp
mov
bound
repnz
ret
mov
jmp
inc
push
je
fwait
sbb
pop
hlt
retf
xor
mov
pop
inc
daa
repnz
(bad)
retf
shl
ror
or
in
pop
stos
cmp
or
xchg
fs
xchg
and
(bad)
addr16
loop
or
mov
sub
xor
icebp
xor
daa
addr16
std
pop
jnp
inc
jg
iret
adc
mov
int3
aad
shr
nop
popa
in
js
pop
mov
ins
xchg
dec
out
mov
cli
out
mov
jno
mov
sub
pop
mov
sbb
call
ss
inc
mov
cmp
push
fcom
in
aad
nop
add
and
and
in
dec
cmp
scas
call
xchg
fsubr
xlat
sub
mov
xor
jae
(bad)
lock
fld
adc
push
xor
sub
clc
dec
jge
fmul
inc
clc
push
(bad)
xchg
mov
lods
ficom
and
lock
jno
sbb
adc
push
ret
add
out
and
movs
cmps
xor
les
ins
cmps
jge
cmps
leave
sub
lds
ret
dec
mov
mov
push
or
sbb
aaa
mov
lock
inc
xchg
imul
gs
cld
ja
xchg
test
retf
retf
loop
sub
sub
stos
popf
jb
dec
push
xchg
fist
aas
loop
xchg
push
xchg
out
fcomp
sbb
jge
and
cmp
sbb
xchg
inc
sub
jae
push
mov
int3
push
test
xchg
into
leave
sbb
sub
and
sbb
(bad)
pop
push
cs
mov
test
pop
pop
jmp
pop
pop
jb
jg
mov
stc
xchg
cmc
and
test
push
jne
adc
mov
(bad)
aas
test
ins
jne
dec
add
ror
call
pop
mov
xor
mov
retf
out
cs
add
mov
cwde
pop
add
inc
and
dec
pop
xchg
and
or
imul
ret
test
cld
cmp
xor
add
arpl
or
fdiv
sahf
ja
dec
idiv
loop
aam
or
(bad)
jp
pop
mov
imul
mov
or
inc
adc
jge
repnz
jns
push
mov
daa
sbb
cwde
and
push
mov
push
mov
ret
and
dec
cmps
int3
hlt
inc
pop
push
jp
js
xchg
nop
(bad)
pusha
inc
ret
dec
aam
cmps
mov
movs
cmc
pushf
dec
sub
imul
and
lahf
push
cmp
les
or
mov
dec
stos
mov
hlt
mov
int
test
and
(bad)
jmp
bound
(bad)
ficomp
outs
shl
scas
das
in
out
pop
jecxz
mov
xchg
jmp
xor
cmps
mov
or
xor
dec
mov
pop
xchg
xor
xchg
ja
xchg
push
pop
jno
(bad)
sbb
adc
call
sub
dec
adc
adc
std
pop
mov
mov
cmp
or
fsub
daa
mov
jmp
mov
sar
iret
repnz
or
je
mov
pop
lods
and
cmp
leave
xchg
cwde
mov
out
(bad)
aam
sbb
nop
rcr
inc
mov
out
call
and
imul
mov
pop
and
push
xchg
push
arpl
call
sub
cmps
adc
inc
sub
out
shr
out
stos
mov
or
ins
and
push
adc
xor
jp
call
inc
fucomp
and
add
push
aam
cmp
sub
adc
retf
pop
stos
xchg
xlat
jmp
aam
(bad)
mov
cmp
aaa
fist
leave
dec
and
pop
movs
mov
and
mov
xor
imul
mov
fcom
mov
fisttp
sbb
imul
lahf
jbe
mov
fmulp
inc
in
mov
and
gs
imul
pop
jl
jmp
xchg
mov
outs
add
inc
(bad)
xchg
loope
fidivr
rcl
pop
xchg
out
sbb
add
xor
fdiv
int
sar
(bad)
leave
jmp
xchg
pop
ss
cmps
add
in
mov
xchg
xor
cmp
movs
inc
mov
test
push
(bad)
bound
jmp
test
add
push
lods
out
cli
adc
sahf
xchg
push
int3
mov
or
mov
clc
das
cmp
fsub
std
outs
jg
fisubr
lahf
ins
jmp
cmp
stos
cmp
aad
stos
jne
mov
xor
mov
mov
jmp
dec
xlat
xchg
push
ja
pop
mov
lock
cdq
sub
add
mov
or
out
lahf
xchg
out
adc
stos
push
repnz
push
sbb
adc
pop
rcl
popf
test
jnp
xor
add
dec
imul
lds
dec
rcr
aas
xchg
mov
mov
add
int
sti
cs
mov
jmp
xor
pop
imul
mov
push
add
out
sub
xor
jns
push
(bad)
xlat
mov
or
mul
loope
test
fucom
xchg
data16
popf
(bad)
(bad)
fcomp
shl
dec
adc
lods
shl
jbe
pop
pop
dec
mov
pushf
xchg
mov
jmp
pop
enter
rol
xlat
mov
je
(bad)
call
cli
xor
sbb
rol
test
shr
add
adc
jno
(bad)
jmp
or
ins
mov
jns
push
sbb
adc
stos
fwait
jle
arpl
bound
lods
pop
mov
xor
adc
mov
repz
cmp
inc
push
ins
pop
imul
or
and
shl
(bad)
jnp
rol
dec
adc
add
pop
jno
ss
xchg
movs
test
(bad)
mov
pop
pop
std
cwde
stos
call
in
push
cmp
mov
push
jmp
cmp
sub
mov
add
jne
leave
jl
loopne
pop
push
fisub
sub
mov
iret
loopne
sbb
push
pushf
movs
cmp
mov
in
pop
out
dec
movs
and
add
ja
ds
and
or
(bad)
push
sub
cs
push
sbb
ret
test
(bad)
pop
enter
shl
pusha
mul
mov
fadd
inc
pop
and
pop
mov
test
popa
and
xlat
ds
cmp
push
adc
cmp
jmp
mov
pop
sti
fist
sbb
add
nop
cmp
xchg
arpl
je
sub
sbb
pop
(bad)
fsincos
in
mov
push
lock
loop
or
shl
inc
or
dec
shl
test
(bad)
push
jecxz
ss
mov
stos
and
mov
pop
or
mov
or
ins
rcr
add
xor
pop
inc
add
and
lods
retf
mov
push
jle
pop
mov
pop
adc
das
push
adc
push
div
data16
scas
cmp
or
aam
jae
ficomp
dec
pop
mov
adc
pop
or
cmps
sbb
mov
mov
lods
sub
pop
or
push
xchg
jne
shl
es
repnz
cmps
into
jge
adc
mov
dec
xchg
xchg
jb
popf
sub
in
js
sub
cmp
or
stos
mov
xchg
std
stos
adc
test
push
mov
(bad)
push
cdq
xor
xor
push
or
adc
and
add
lahf
xchg
rcr
in
fisubr
mov
inc
push
add
mov
push
pop
int3
inc
jns
sbb
fisubr
mov
lods
inc
mov
in
push
iret
inc
cwde
dec
pop
fimul
sub
adc
dec
dec
jl
imul
sub
ins
cmp
repnz
test
cmp
shl
bound
in
inc
cdq
gs
pop
loop
inc
adc
jecxz
cmp
adc
mov
dec
out
stos
and
fwait
jmp
fidivr
bound
cmps
shr
cld
pop
sbb
cmps
in
in
push
push
mov
mov
xchg
div
sbb
cmp
cmp
pop
mov
call
outs
push
pop
jo
xchg
sbb
or
fwait
outs
faddp
ja
xchg
into
inc
mov
sahf
(bad)
int3
popa
loopne
xor
xor
add
movs
stc
xor
data16
dec
repz
push
es
mov
mov
ins
jns
adc
xlat
push
xor
mov
mov
jecxz
retf
out
inc
lods
dec
add
and
cwde
call
add
sar
ins
jo
cli
add
std
cld
fiadd
outs
mov
and
jns
push
ins
loope
sub
retf
sub
ror
js
call
stos
scas
sbb
add
push
loopne
jb
or
leave
dec
test
mov
inc
xchg
jae
repz
in
out
inc
cmps
or
sub
sbb
iret
test
jb
cmps
stos
or
movs
mov
dec
pop
fnstsw
mov
and
stc
sub
cli
in
push
inc
mov
cmp
sbb
out
xor
cmps
dec
cmc
sti
and
xchg
mov
mov
push
or
jnp
popf
sub
pop
retf
jno
jne
and
ja
mov
mov
inc
(bad)
pop
fisttp
dec
lea
ss
push
or
dec
mov
jne
(bad)
enter
mov
mov
cs
out
popf
and
jbe
fwait
packssdw
fwait
arpl
cmps
mov
jecxz
jmp
in
dec
dec
mov
push
out
movs
push
out
fnclex
jmp
push
cmp
pop
dec
ins
sub
scas
imul
cld
cwde
out
addr16
ficom
mov
(bad)
adc
inc
out
test
lods
add
add
lock
and
add
mov
jmp
ja
sbb
in
pop
sbb
(bad)
frstor
gs
mov
sbb
xchg
push
int
dec
inc
stos
and
fs
repz
xchg
repz
(bad)
pushf
sub
packuswb
gs
or
aas
xor
mov
popa
mov
dec
or
movs
push
cwde
mov
cmp
cmc
enter
pop
int3
clc
call
inc
mov
int
and
movs
aaa
repz
sub
inc
or
out
push
ss
jo
cli
inc
sub
dec
mov
inc
push
js
and
pop
jbe
pop
shl
pop
fdiv
cdq
cmp
js
xchg
mov
mov
cdq
std
loopne
mov
ret
sub
pop
mov
and
and
popa
inc
nop
jl
push
sbb
mov
jnp
jnp
lods
test
adc
xor
add
call
jle
icebp
and
cmps
out
and
or
xor
out
(bad)
sub
jge
ret
idiv
jecxz
popf
xor
xchg
mul
stc
inc
inc
xor
cld
mov
dec
dec
push
retf
fst
xchg
jl
retf
cld
adc
adc
ins
sbb
or
mov
push
(bad)
dec
sbb
jp
xor
sub
gs
and
add
mov
clc
repz
icebp
push
in
jno
pop
jne
push
xor
dec
mov
aaa
pusha
rcl
add
add
rcr
(bad)
fisttp
add
cld
loop
cmps
adc
xor
jb
or
lea
xchg
imul
adc
sbb
mov
adc
jle
sbb
sub
repnz
ficomp
or
sub
push
ret
retf
fcmovne
xchg
jnp
lock
leave
sub
lods
push
dec
scas
add
or
cmc
aas
jge
add
xor
mov
mov
push
sbb
mov
jne
out
clc
xchg
out
jp
and
sar
mov
push
xor
fild
cdq
cmp
xor
call
fsubr
repnz
lds
lea
fiadd
jp
mov
sahf
ret
sub
jp
mov
gs
xchg
pop
das
push
pop
or
retf
mov
pop
in
pop
push
test
nop
push
xchg
popf
test
xor
and
cs
push
adc
mov
adc
cwde
pop
jns
adc
jne
cdq
pop
xor
mov
mov
mov
push
aaa
ret
dec
pop
cmp
sub
fs
sub
or
(bad)
daa
test
and
(bad)
push
loopne
mov
idiv
scas
xor
scas
mov
movs
into
mov
popf
int3
test
jnp
pop
mov
mov
shr
jae
ret
ins
nop
ja
xchg
xor
xor
cwde
jge
mov
inc
dec
and
fcmovnb
pop
out
sub
cmp
inc
hlt
stc
mov
adc
ja
pop
fs
mov
or
xor
xchg
jae
shl
aaa
jp
or
sub
adc
jns
xchg
add
repnz
mov
outs
inc
dec
inc
push
xchg
inc
aaa
sub
daa
les
jle
dec
js
pop
xlat
sbb
lea
adc
and
pop
mov
pop
(bad)
adc
mov
push
cwde
lds
out
or
ror
ds
(bad)
push
sbb
in
fadd
xchg
test
mov
into
inc
push
shl
test
xchg
mov
lahf
pop
add
pop
and
mov
jge
lds
imul
aaa
dec
and
test
mov
and
daa
inc
movs
sar
mov
xchg
loopne
push
fcmovbe
leave
in
je
inc
test
pop
in
jp
mov
sar
adc
stos
fs
rcl
push
aad
mov
and
mov
rcr
pushf
sub
xor
sbb
jmp
mov
pop
pop
stc
cli
mov
push
mov
xor
add
sub
fsub
nop
and
and
inc
pop
mov
cmps
jmp
pop
ins
jo
(bad)
int3
adc
mul
and
clc
mov
jle
pop
xchg
shl
mov
cmp
jo
jo
mov
cmp
(bad)
pop
cmp
movs
cli
ja
push
add
call
dec
inc
mov
cmc
mov
dec
out
and
call
push
jno
stos
jmp
daa
push
int3
pop
and
hlt
cmp
push
retf
pusha
xchg
jno
adc
fwait
sub
repz
in
pop
sub
imul
fiadd
inc
jo
or
das
jb
popf
ds
iret
call
in
lods
jmp
in
mov
mov
mov
cmp
shl
mov
jbe
gs
pop
aaa
pop
sbb
ficom
push
push
outs
mov
push
mov
sbb
add
mov
nop
into
xor
shl
ins
stos
mov
dec
retf
jno
cwde
or
mul
push
jae
mov
ss
jo
fwait
gs
bound
mov
push
fnstcw
bt
jno
ins
cmp
pop
stc
daa
scas
scas
out
jp
cwde
mov
adc
push
mov
pop
loope
pop
add
int3
pop
adc
fsubr
es
hlt
ins
sub
into
push
ret
jb
enter
repz
xor
adc
push
sub
adc
xor
xchg
fst
dec
(bad)
push
xchg
cmc
and
sbb
or
(bad)
in
inc
push
(bad)
push
jmp
push
adc
mov
cwde
pop
ret
cmp
test
sbb
sbb
out
dec
(bad)
fisttp
or
js
das
lods
je
inc
xchg
jbe
out
aad
add
pop
gs
or
push
mov
loopne
mov
dec
ficomp
scas
push
dec
push
iret
sahf
xor
pop
jmp
arpl
cs
lds
fidivr
mov
xor
std
push
jg
arpl
repz
sub
xchg
and
jb
ds
call
enter
mov
mov
pusha
into
out
inc
rep
movs
sbb
inc
aas
addr16
and
mov
dec
fld
pusha
cmp
out
pop
pop
mov
js
in
sub
stos
mov
xchg
jnp
pop
ret
sub
aad
xchg
push
pop
imul
jmp
sbb
jbe
xchg
arpl
inc
idiv
stos
scas
mov
push
cs
lea
sti
mov
aad
xchg
int3
cld
shl
(bad)
das
stc
mov
fstp
dec
inc
fs
loope
adc
lahf
or
jns
sub
mov
and
jg
aam
lea
mov
ret
inc
jl
fsubr
sub
out
xlat
adc
cmp
mov
mov
loop
scas
sub
clc
fadd
call
lock
in
push
test
adc
push
pop
sbb
jmp
xchg
ins
jne
loopne
popf
and
xchg
out
sub
push
arpl
fbld
sbb
cli
icebp
and
fpatan
mov
das
mov
imul
daa
or
adc
mov
add
lods
dec
imul
test
push
sub
fwait
pop
xchg
mov
push
adc
pop
gs
sub
fidiv
scas
aaa
xor
imul
repz
fiadd
fcmovne
xchg
add
fsub
jmp
cmp
mov
ss
fsubr
out
repz
pop
mov
push
stc
mov
test
push
scas
aad
or
jb
mov
pop
lds
in
dec
sbb
sub
les
icebp
cmps
mov
js
pushf
mov
sbb
dec
mov
(bad)
mov
lahf
outs
jbe
imul
dec
sub
sub
popf
mov
pop
adc
mov
or
mov
ins
mov
xchg
mov
repz
mov
push
stos
int
enter
inc
and
(bad)
ds
push
stos
mov
xlat
and
adc
aaa
cmp
int3
fwait
shl
data16
fwait
mov
ror
or
dec
fwait
retf
das
push
xlat
push
out
btc
sbb
and
lea
xor
test
jecxz
mov
or
enter
mov
xchg
mov
test
xor
adc
jl
or
xor
dec
pop
xor
loope
cmp
sbb
pop
mov
into
mov
sbb
push
popf
adc
std
fcom
jnp
adc
fs
ror
xchg
inc
aas
arpl
mov
(bad)
fist
pop
out
mov
int
fs
ret
inc
lods
sbb
mov
sub
repnz
(bad)
pushf
js
or
dec
call
push
or
inc
retf
pop
out
lds
inc
sbb
adc
xchg
mov
movs
mov
add
fsubr
mov
das
stos
push
lea
and
mov
dec
fsub
add
or
outs
fiadd
test
(bad)
inc
dec
mov
jae
cmp
mov
sbb
and
push
push
aaa
sbb
jmp
cmp
loope
fwait
sub
imul
call
cmps
mov
test
pop
or
sub
int
mul
mov
pop
repnz
jno
inc
gs
shr
adc
loopne
mov
xchg
fs
or
adc
hlt
dec
les
mov
sub
jb
cmp
mov
rol
aam
mov
mov
inc
leave
push
jge
setge
(bad)
call
(bad)
jmp
add
in
ret
push
cmp
fs
xchg
mov
lahf
xor
hlt
add
pop
cli
push
pop
pop
sub
(bad)
push
sub
ss
test
nop
(bad)
(bad)
ss
mov
addr16
(bad)
jp
outs
adc
sbb
push
pop
pushf
mov
sub
mov
jl
sub
lods
fs
or
pop
dec
es
std
aad
(bad)
nop
aam
cmp
pop
inc
aas
cmp
adc
add
jp
call
and
popf
jp
popf
cmp
out
or
and
xor
iret
cmp
mov
mov
jbe
and
fimul
push
loopne
enter
cld
loop
or
mov
js
fstp
mov
sub
xor
sub
shl
xchg
mov
push
pop
and
pop
cmp
pop
jb
mov
mov
into
retf
mov
repnz
jge
pop
arpl
or
fcomp
jmp
hlt
mov
xchg
xlat
or
inc
mov
into
mov
les
inc
mov
repz
and
cmp
mov
jmp
stos
repnz
test
in
push
int
push
mov
ror
mov
cmps
fiadd
jno
and
out
jo
fwait
(bad)
mov
adc
mov
(bad)
adc
fcomp
or
ins
fsub
pop
movs
in
das
mov
add
mov
jbe
div
scas
lds
int3
pop
dec
cli
ins
fnsave
push
mov
adc
clc
inc
jecxz
and
cmp
fnsave
add
push
sbb
je
or
sub
adc
adc
dec
mov
cmp
(bad)
nop
adc
add
mov
repz
cmc
aam
sub
xchg
div
outs
pop
add
daa
ins
push
out
and
dec
pop
repz
pop
sub
jbe
cmp
mov
cmps
fwait
(bad)
mov
push
scas
aad
push
bound
jg
sbb
mov
je
in
mov
call
imul
and
pushf
cwde
lods
pop
arpl
add
fistp
mov
fisub
dec
and
fcom
scas
and
xchg
loope
dec
ins
push
fs
jl
push
sahf
pop
or
and
test
adc
push
sbb
adc
lahf
push
jl
pop
sub
sub
pop
push
ror
pop
jmp
int
out
test
imul
xor
test
sub
mov
fwait
stos
(bad)
lods
imul
adc
repz
call
or
das
es
mov
cmc
mov
cli
rcl
loopne
nop
dec
retf
scas
jo
push
mov
sub
frstor
sbb
mov
pop
pop
clc
and
and
dec
pop
cmp
imul
pop
dec
xor
pop
test
(bad)
iret
and
sbb
ins
das
out
pop
call
mov
outs
add
cmp
stos
(bad)
sahf
rcl
push
add
jno
mov
aam
scas
popf
cmp
inc
mov
push
jmp
lea
cwde
out
sbb
jge
movs
std
in
and
ins
retf
jb
sub
repz
aam
repnz
das
dec
xor
sar
scas
and
enter
or
outs
jnp
das
repnz
pop
push
inc
fnstsw
dec
mov
cdq
iret
xchg
movs
push
mov
cli
int
div
and
js
and
add
xor
fadd
xor
retf
or
xchg
adc
ss
dec
xchg
or
push
add
or
fnstcw
stos
inc
repnz
scas
lods
and
(bad)
push
loope
mov
aaa
ret
adc
adc
stc
xchg
push
push
test
fsubr
xor
add
xchg
sbb
int
fs
pushf
sbb
repz
mov
sbb
cmc
sub
mov
pop
mov
enter
mov
sbb
mov
adc
ja
sahf
add
mul
sbb
into
dec
fstp
push
dec
sbb
into
xor
retf
jmp
or
cmp
ins
rcl
mov
(bad)
fld
nop
add
mov
adc
sahf
cs
mov
mov
dec
cmp
or
and
adc
repnz
loope
cs
push
sub
outs
push
arpl
mov
jl
mov
js
mov
inc
pop
mov
and
fisub
jp
jp
rcl
outs
das
in
shl
movs
loopne
dec
push
mov
mov
cmp
xchg
dec
scas
mov
add
popa
sbb
in
adc
test
gs
mov
mov
adc
xchg
(bad)
das
push
outs
adc
jns
das
xchg
outs
jne
imul
gs
mov
(bad)
ror
cli
mov
dec
mov
retf
jne
inc
add
gs
push
xor
add
fbld
mov
add
rcl
sub
inc
sub
dec
xchg
jo
cmps
(bad)
jg
and
adc
(bad)
stos
push
mov
xchg
lds
jg
imul
push
ret
aad
(bad)
fwait
cli
aaa
adc
inc
adc
fisub
mov
inc
add
jae
mov
aam
ja
test
lea
dec
je
push
add
pop
test
out
sbb
bnd
retf
hlt
bound
ret
into
int
pop
mov
loopne
pusha
lods
pop
(bad)
mov
imul
pop
push
cdq
test
inc
(bad)
sub
shl
rcr
jb
mov
in
fs
dec
cmps
fs
pop
mov
mov
cmp
fstp
mov
or
pushf
outs
sub
pop
cwde
sub
fs
cmp
sti
shl
xchg
int
je
fucomi
scas
dec
cmp
outs
jnp
cmp
fstp
mov
ins
or
xchg
movs
retf
lods
es
je
sub
adc
lods
inc
fist
mov
xlat
push
lds
xchg
pop
jmp
xlat
ja
cmp
cmp
rol
xchg
sbb
(bad)
pop
into
cmp
leave
leave
pop
pop
loopne
outs
movs
pop
sub
imul
mov
or
inc
rcr
jg
xlat
add
adc
mov
mov
mov
push
test
loope
icebp
jg
mov
ficom
xchg
mov
push
mov
(bad)
jge
popa
rcr
adc
es
push
mov
xchg
add
fidiv
pop
int
ror
xchg
cdq
mov
je
pop
push
movs
mov
sbb
jp
mov
mov
ror
pop
ins
jg
lds
inc
adc
or
xchg
data16
push
imul
dec
not
shr
sti
fadd
mov
hlt
push
sub
aas
mov
lods
cmp
call
repz
ins
mov
out
(bad)
mov
xor
or
pop
cmp
xor
mov
xchg
sbb
jb
sub
xor
movs
out
jmp
je
xor
ror
fdiv
jle
rol
push
ret
add
clc
and
and
xor
mov
cmp
test
mov
repnz
mov
and
test
in
rcl
mov
inc
lock
shr
add
jb
ret
inc
cld
adc
(bad)
sbb
push
sub
les
sbb
inc
loope
call
fimul
scas
sub
cmp
xchg
shl
movs
mov
jmp
lahf
xchg
adc
jl
push
pushf
repz
hlt
gs
popf
je
xor
dec
cmp
(bad)
push
imul
jecxz
(bad)
dec
arpl
dec
(bad)
in
push
cmp
movs
xlat
lahf
aas
mov
jbe
js
push
xchg
cli
in
(bad)
dec
inc
mov
sub
aas
dec
ja
int
aaa
fidiv
mov
sbb
out
retf
std
fcmovnu
mov
cs
cs
cmp
dec
out
mov
mov
xor
push
int3
rcl
ins
retf
fisub
jle
faddp
and
aas
lods
pop
frstor
mov
dec
jno
dec
cmp
mov
loope
std
dec
in
fimul
pop
mov
shl
add
std
pop
jmp
inc
pop
or
loopne
mov
cmp
imul
sub
xchg
aam
ins
leave
movs
aad
pushf
cmp
jle
adc
ud2
xor
out
mov
pop
lods
pop
popa
imul
in
dec
les
aas
imul
inc
xor
cmp
mov
pop
aad
and
jg
daa
sub
cwde
dec
push
inc
lods
jo
imul
jmp
cmp
test
jbe
das
fimul
test
adc
dec
(bad)
(bad)
and
push
imul
mov
xchg
(bad)
call
mov
clc
sbb
int3
add
das
cmp
lds
aam
mov
movs
dec
iret
mov
cmp
cmp
es
cmp
out
addr16
xor
sub
push
in
ret
cmps
scas
outs
cli
aas
fcomp
xchg
test
stos
call
lock
xor
(bad)
fs
test
mov
shl
and
out
test
pop
and
add
xchg
sbb
inc
xchg
bndldx
(bad)
(bad)
and
mov
int3
gs
mul
mov
(bad)
lea
loop
push
mov
and
mov
lods
sar
sub
std
xor
fwait
sahf
icebp
(bad)
cmp
lock
arpl
icebp
sub
btc
sub
shl
add
stos
cmps
imul
wbinvd
call
pop
fcomp
sbb
jecxz
xor
ror
jnp
mov
ins
call
not
push
test
hlt
jbe
add
ja
scas
dec
pop
repnz
and
push
jo
pushf
sar
mov
cs
movs
adc
inc
mov
pop
mov
push
mov
add
div
iret
push
loopne
ss
repz
mov
jecxz
movs
xlat
call
push
ja
xlat
xchg
mov
in
xchg
test
jmp
outs
(bad)
xchg
movs
push
xchg
and
add
xchg
inc
call
pop
and
xor
inc
and
aaa
fnstsw
mov
sbb
cs
fnstcw
or
mov
cmp
or
inc
mov
mov
or
outs
sbb
mov
popf
cmp
in
mov
and
pop
stos
mov
jl
aad
mov
pushf
retf
jbe
out
mov
(bad)
push
dec
mov
aam
out
mov
ret
aaa
sti
inc
ss
repz
cmps
mov
nop
pop
push
test
or
xchg
jg
cmp
cmp
xor
inc
mov
sbb
stos
or
mov
adc
push
mov
sbb
add
je
inc
or
inc
mov
shl
dec
dec
aam
out
pop
or
into
outs
mov
xchg
movs
sub
fbld
xchg
sbb
shl
sub
cli
sbb
leave
mov
pusha
pop
xchg
dec
ret
sti
dec
add
call
adc
sub
std
jge
and
popa
les
sub
adc
cmps
stos
inc
rcr
cmp
jg
mov
shr
cmps
(bad)
dec
jp
cdq
xchg
lea
adc
dec
fsubr
cs
sti
leave
inc
test
leave
sub
rcl
stc
fs
rcr
ins
or
sub
and
push
pop
sub
(bad)
ds
ins
or
cs
cmps
ja
shr
(bad)
sub
fidiv
nop
and
mov
mov
pop
mov
sub
mov
mov
test
sbb
sbb
mov
mov
adc
aad
cmps
push
popa
sub
inc
add
and
sub
fmul
push
xor
mov
bswap
add
jp
pop
or
repz
sbb
call
not
jo
mov
xchg
pop
xchg
jne
leave
and
dec
int
jg
push
and
enter
pusha
lea
loop
push
jecxz
push
pop
sbb
popa
iret
(bad)
int3
or
stos
loopne
movs
cmc
pusha
dec
pop
dec
jle
dec
and
scas
out
inc
or
cs
bound
push
mov
loopne
dec
mov
jmp
xchg
jecxz
iret
lock
fisub
mov
jmp
int3
aad
je
mov
ror
mov
push
mov
pop
push
mov
jle
aas
ret
and
js
jb
rcr
loop
mov
push
movs
mov
jnp
jnp
mov
xlat
inc
push
mov
jno
cmp
xchg
lea
jge
pop
iret
in
ret
mov
and
punpckhdq
(bad)
pop
int
dec
mov
sbb
lods
ins
jb
or
fld
nop
nop
sbb
jecxz
loope
ins
jmp
jns
jg
and
in
xchg
popa
loopne
push
mov
ins
cmp
ins
inc
sbb
push
push
inc
in
lds
add
jnp
mov
jbe
mov
and
cld
sahf
sar
sub
icebp
sbb
aaa
icebp
pop
cmp
sbb
pop
dec
cwde
inc
pop
sar
jmp
dec
cmp
ret
daa
in
and
push
jge
imul
enter
ds
sbb
dec
sbb
sbb
or
jns
adc
push
push
sbb
pop
test
fisttp
or
jmp
jmp
fcmove
cld
retf
ret
sbb
and
loopne
mov
mov
mov
jmp
mov
cmp
bound
test
rcr
pop
test
sub
sub
ins
jns
inc
adc
dec
cwde
adc
test
cld
xor
imul
and
sahf
cmp
add
adc
loopne
(bad)
rcr
retf
jmp
jne
push
ja
mov
jmp
test
and
add
aam
hlt
movs
stos
js
(bad)
scas
inc
push
sbb
es
xor
push
(bad)
div
fmulp
js
jb
mov
dec
or
cwde
add
mov
jp
loop
call
adc
(bad)
sahf
dec
inc
pop
sub
cmp
pop
cmp
bound
scas
mov
jnp
leave
mov
jo
cmp
inc
(bad)
mov
push
pop
mov
out
mov
nop
ins
popf
imul
repz
mov
pop
pop
mov
mov
outs
mov
fst
repnz
jno
push
jmp
pop
xor
adc
fisubr
or
sti
ret
inc
cli
pop
lods
xchg
ret
cmp
jo
and
push
bnd
inc
pause
cdq
adc
jmp
cdq
out
pop
inc
fs
gs
(bad)
stc
mov
(bad)
mov
loope
repz
add
sahf
mov
and
xor
loop
test
dec
mov
clc
dec
push
repz
repz
rcl
add
adc
xlat
ds
jno
fimul
ds
ja
lea
or
lods
(bad)
icebp
inc
es
and
mov
jmp
jle
push
aas
push
mov
mov
shl
scas
popa
and
or
retf
mov
inc
inc
push
iret
movs
imul
cs
mov
call
sbb
les
int
jp
or
dec
test
pop
int3
and
xor
jl
in
sti
add
inc
sub
stc
mov
mov
push
das
test
jle
rcr
js
jl
and
mov
sbb
mov
js
adc
lock
(bad)
inc
push
retf
sbb
jle
sbb
xor
fistp
shrd
ins
sbb
pop
lods
xchg
int3
scas
xor
clc
jg
and
xchg
lods
sbb
adc
inc
call
xchg
cmp
pusha
add
out
retf
push
cmps
sbb
ins
and
fisub
popf
daa
jns
pop
cli
mov
add
mov
not
lds
push
js
lods
mov
dec
add
and
or
pop
ret
dec
leave
push
rcr
mov
mov
push
outs
dec
mov
xor
sbb
and
ja
dec
test
sub
(bad)
xchg
lods
push
jbe
push
mov
imul
sbb
and
in
fs
test
mov
lods
ss
lds
imul
daa
xchg
ds
test
outs
test
dec
mov
dec
adc
fild
dec
outs
hlt
or
adc
xchg
adc
test
fcom
push
xor
aam
sbb
mov
push
cs
(bad)
xor
int
movs
pusha
out
push
adc
xchg
add
inc
iret
movs
das
fidiv
mov
aam
jmp
mov
rcl
jnp
loope
jno
gs
cmp
repz
pushf
and
out
retf
lahf
test
inc
xor
shr
add
mov
mov
out
imul
out
fdivr
adc
test
test
jge
add
lods
inc
ins
ret
pushf
retf
movs
mov
cmp
sub
inc
ja
and
xchg
cmp
and
nop
mov
push
ins
(bad)
mov
mov
dec
cmp
jne
mov
lods
push
shr
cmp
fidiv
add
inc
mov
ja
cmc
push
inc
test
jbe
jns
popf
test
xchg
mov
jo
imul
test
adc
or
adc
jmp
int
adc
inc
mov
out
and
rol
mov
pop
int3
into
pusha
xor
pop
out
sbb
pop
mov
je
mov
lods
repz
mov
je
dec
xchg
ja
aas
stos
mov
mov
mov
loopne
fimul
mov
outs
hlt
pop
pop
out
cmp
loop
iret
dec
mov
jl
(bad)
or
or
inc
repz
jbe
loope
pop
aam
adc
jns
pop
fs
loop
(bad)
test
mul
cmp
pop
call
jne
ins
xchg
sub
mov
mov
push
lods
in
je
sub
mov
push
sbb
test
(bad)
mov
pop
sbb
cmps
loopne
sub
dec
je
jnp
out
pop
loopne
ret
or
je
fs
push
and
into
jg
mov
lods
mov
sub
jg
outs
cld
in
sub
pop
ror
neg
add
fimul
stc
pop
fstp
aas
adc
mov
jbe
push
inc
push
xchg
jmp
sti
in
retf
ret
cmp
xor
ror
shr
dec
dec
repz
in
xor
popf
or
and
movs
push
(bad)
daa
add
jecxz
jne
aam
(bad)
js
xchg
repnz
test
xchg
stos
sbb
mov
stos
ss
and
push
inc
mov
test
mov
jmp
out
shl
sbb
neg
cmps
dec
retf
into
add
add
lock
cmp
test
add
or
call
pop
cmc
fs
(bad)
arpl
out
mov
and
pop
jmp
push
inc
out
fsubrp
mov
(bad)
bound
mov
mov
mov
ja
jmp
add
in
cmp
cmps
jae
mov
out
xor
or
outs
rcl
ret
dec
jle
shl
data16
das
and
lock
nop
xchg
or
ror
xchg
daa
repnz
movs
jp
pop
mov
jne
inc
shr
and
mov
jmp
xchg
and
pinsrw
and
in
or
xchg
loop
pop
xchg
lods
pop
and
(bad)
jnp
rol
add
sub
cli
add
movs
(bad)
inc
jnp
nop
mov
or
call
out
sub
pusha
and
arpl
into
jae
loopne
mov
aad
cmps
push
lods
lods
and
mov
dec
shr
xor
setne
xchg
add
mov
mov
out
test
sbb
popa
pop
(bad)
sti
test
push
test
imul
lds
das
fdiv
test
pushf
sub
test
(bad)
loop
out
mov
cmp
mov
stos
cmp
jp
sahf
rcr
jb
jno
jp
cmps
and
sub
push
jg
or
loop
std
xchg
add
mov
sub
pop
push
xor
clc
rcl
cmc
call
test
jecxz
add
loop
stos
loope
(bad)
ins
adc
movs
in
adc
xchg
ss
sbb
mov
dec
add
test
and
cpuid
inc
test
jg
xchg
mov
add
sub
in
xor
daa
mov
call
push
jnp
or
fcmovu
repnz
push
mov
mov
adc
and
out
shl
cld
cmp
rol
jmp
frstor
xor
cmp
jb
pop
shl
or
sub
(bad)
loopne
aam
jo
sbb
aaa
arpl
mov
adc
shl
xor
cmp
sub
push
pop
inc
aad
inc
inc
mov
cli
(bad)
movaps
stos
xor
push
ins
xchg
lahf
lea
loopne
stc
jmp
mov
stos
dec
call
sub
push
adc
mov
pushf
cmp
xchg
inc
add
stos
sar
pushf
xor
pop
stc
in
xor
mov
or
jge
pop
push
icebp
cwde
inc
test
sahf
test
dec
call
aad
jg
js
out
ja
aaa
(bad)
sbb
(bad)
int
adc
lock
push
nop
mov
ficom
jge
mov
jecxz
add
mov
fbld
test
jecxz
inc
cmp
call
xor
retf
pusha
adc
data16
pop
sub
aas
jge
cmc
pop
shr
sub
mov
pop
pop
xchg
mov
push
aad
inc
ja
scas
out
dec
jge
or
pop
sub
(bad)
fisub
jmp
xor
(bad)
inc
push
in
jl
pop
stc
aaa
sub
pop
cmp
lods
fisttp
mov
mov
cmp
xchg
jnp
push
ins
sub
ja
push
cmps
push
lods
cmp
push
mov
sbb
lods
jb
adc
mov
pop
add
aas
pop
enter
mov
(bad)
je
mov
sbb
push
jb
mov
sub
shl
scas
int
xor
inc
and
cmp
push
push
mov
xor
sub
mov
mov
loop
outs
lods
sbb
retf
or
mov
ins
shl
sti
xchg
push
imul
test
jmp
add
adc
call
stos
mov
mov
cmp
into
or
mov
mov
ret
add
push
pusha
or
into
(bad)
or
test
fsubp
aam
test
jmp
and
push
les
lea
ret
test
das
dec
sar
adc
jg
mov
pop
ret
hlt
repnz
fisub
retf
test
movs
ja
mov
inc
jl
fild
cmp
pop
mov
cmp
movs
mov
mov
sub
test
sbb
mov
icebp
out
xchg
mov
jbe
out
jle
ret
jg
lods
loop
xchg
cs
daa
ja
xor
inc
call
repz
jp
add
adc
out
sub
data16
sbb
xor
jp
pop
cmp
ret
pop
(bad)
xchg
xchg
mov
adc
dec
popf
jg
xchg
icebp
mov
aad
mov
pop
push
lods
mov
ins
mov
inc
cmp
cmps
out
sbb
pop
jae
mov
pop
mov
jle
lahf
mov
mov
call
in
or
jne
sub
xor
retf
popf
jbe
and
jae
inc
xor
dec
sub
aas
sub
mov
mov
ds
stos
pop
pop
mov
call
add
push
pop
fst
mov
sub
jns
inc
leave
jne
int3
retf
out
ins
rcr
and
dec
mov
sbb
adc
popa
retf
shl
pop
clc
or
es
inc
sub
add
mov
imul
es
mov
ror
mov
xlat
icebp
pop
mov
retf
ss
or
and
ins
sub
out
xor
mov
pop
push
popa
les
loopne
aad
dec
sar
loopne
(bad)
cmps
sti
das
xchg
push
or
mov
popa
mov
or
and
push
push
jb
pop
inc
cld
add
lock
scas
cmp
imul
pop
test
lods
out
sub
add
cmc
imul
cmp
dec
test
sbb
pop
aam
xchg
adc
(bad)
cmp
sbb
into
mov
mov
shl
push
xor
loopne
xchg
dec
and
jnp
pop
ja
sub
retf
or
ret
mov
xchg
in
jbe
push
imul
mov
jne
call
jmp
dec
ss
sbb
jae
lea
mov
add
fild
(bad)
aaa
jge
xchg
stos
add
fsub
adc
mov
mov
cmp
or
xchg
mov
adc
mov
arpl
dec
dec
sahf
push
div
sbb
ficom
test
xchg
xchg
(bad)
out
movs
xor
inc
lea
inc
loope
ins
(bad)
mov
test
adc
push
inc
cmp
jecxz
xchg
jg
icebp
and
test
ds
fwait
or
ins
mov
dec
lods
sbb
movs
adc
mov
push
es
test
fisub
scas
push
cmp
or
imul
fiadd
dec
ffreep
mov
sub
push
sub
jg
loop
aaa
cdq
imul
(bad)
retf
fs
or
sub
ins
push
aas
pop
push
(bad)
pushf
mov
push
cmps
int3
xor
dec
or
or
pop
fs
in
cmp
add
ret
bound
inc
into
cmp
cmp
ss
inc
ins
cmp
mov
pop
lock
sbb
jae
lods
ret
pop
jl
add
fiadd
mov
xchg
inc
shl
lock
mov
call
(bad)
or
xor
dec
cmp
js
dec
dec
test
shl
dec
or
enter
fisttp
in
fcomp
stos
mov
mov
test
adc
enter
popa
add
jnp
imul
(bad)
push
pop
or
mov
loopne
inc
sbb
lea
adc
outs
rcr
popf
push
sub
ins
into
inc
jg
or
hlt
jp
clc
repnz
imul
or
cdq
ins
out
into
adc
sbb
mov
ins
jp
stc
mov
jo
loop
ins
leave
ss
adc
ret
pop
mov
mov
sbb
dec
pop
mov
mov
(bad)
out
das
push
addr16
js
retf
enter
ret
aaa
lods
mov
rcr
or
test
test
jmp
or
shl
lea
and
or
(bad)
pushf
aaa
add
ror
pushf
call
test
daa
cmp
mov
fstp
xchg
cmp
jle
mov
les
pop
and
into
jecxz
xor
nop
jle
dec
lock
mov
in
stos
mov
sbb
clc
mov
mov
jo
stos
xor
pop
add
xchg
jg
mov
pop
inc
iret
leave
out
enter
rcr
sbb
push
dec
outs
push
sub
add
xchg
jg
cmp
jg
mov
aam
add
or
stc
fadd
loopne
jge
sbb
iret
mov
out
test
push
and
hlt
adc
mov
std
dec
push
dec
push
scas
jecxz
popa
bound
movs
loope
sbb
retf
rep
sub
inc
lock
test
cmc
or
sub
pop
push
jmp
dec
aad
das
xor
xchg
iret
das
xchg
pop
mov
xor
mov
cmp
pop
repz
push
pop
jno
mov
push
mov
adc
lods
pusha
xor
mov
xor
popa
jb
mov
or
in
(bad)
mov
add
cmps
push
mov
dec
dec
jmp
push
or
mov
cmp
enter
js
repnz
jle
adc
(bad)
mov
fidiv
movs
rcr
adc
std
or
xor
mov
or
movs
clc
inc
inc
(bad)
push
jbe
mov
cmps
add
jp
mov
test
cli
dec
sub
mov
mov
out
jbe
add
xchg
sub
cmp
(bad)
ss
jno
pop
data16
ror
xchg
jecxz
aaa
wbinvd
dec
movs
jns
scas
push
xchg
pop
ss
shr
(bad)
idiv
sbb
neg
ret
idiv
cmps
inc
add
das
adc
inc
imul
sub
ss
clc
push
repnz
jb
pop
test
xchg
popf
mov
test
mov
pop
jo
xchg
js
imul
jmp
int3
dec
loopne
mov
push
xor
aad
int3
outs
and
ret
icebp
jmp
fnsave
jg
inc
mov
sbb
inc
sub
or
in
popf
addr16
mov
retf
cmp
mov
and
adc
test
stos
loopne
mov
retf
push
(bad)
dec
imul
pop
sub
push
adc
pop
fdiv
cmps
dec
mov
jno
mov
pop
outs
in
pop
stos
xchg
cli
call
add
pop
jl
cmps
test
and
xor
stos
pop
or
adc
adc
cs
enter
fcom
push
bound
or
cmc
mov
leave
out
repz
mov
ror
js
xor
cs
jge
imul
jno
pop
(bad)
xchg
pop
les
inc
pop
out
jp
inc
xchg
(bad)
retf
mov
shl
add
mov
xchg
jnp
lock
in
(bad)
mov
(bad)
cmp
ror
mov
mov
or
xor
(bad)
mov
les
adc
ins
cmps
mov
sar
pop
inc
mov
add
sbb
(bad)
sub
mov
mov
mov
call
fsubr
out
mov
xor
imul
cmp
ret
test
sbb
pop
fild
sbb
scas
sbb
jge
ins
cmp
dec
dec
push
sub
(bad)
ins
dec
lods
jmp
call
dec
dec
mov
inc
std
cmp
mov
xlat
stc
pop
ds
jne
mov
mov
lahf
xchg
cmp
popa
(bad)
mov
inc
into
mov
pop
cmps
pop
mov
(bad)
test
call
js
jmp
inc
call
xchg
neg
popfw
popf
jecxz
xor
sbb
imul
dec
push
cs
xor
(bad)
push
add
sbb
popf
dec
and
fidivr
aam
fiadd
xor
add
mov
mov
enter
jg
sbb
in
and
push
loope
mov
jmp
dec
test
test
xchg
push
test
ins
or
(bad)
push
and
cmps
aad
bound
or
and
fcom
ins
xchg
aad
pop
pushf
sub
sbb
popa
pop
xchg
add
jg
pop
mov
adc
test
inc
sbb
cs
dec
inc
(bad)
out
cmp
in
pop
pop
and
fcmovbe
lds
(bad)
cli
mov
test
retf
mov
jno
fadd
mov
shl
add
or
fcmovu
pop
leave
sahf
out
jbe
pop
sbb
call
pop
xchg
xor
lods
and
daa
mov
dec
test
mov
out
jmp
dec
sbb
push
push
pop
movs
fstp
movs
std
mov
bound
aaa
jecxz
adc
scas
addr16
out
cld
pop
pop
push
sti
hlt
inc
popf
ds
jmp
sahf
pop
ins
cli
pop
mov
xchg
enter
pop
push
xchg
add
cmp
xor
cmp
lds
add
pop
pop
aam
jle
push
pop
mov
icebp
jp
lods
lea
ja
icebp
lods
or
ja
and
aad
mov
in
cld
push
xchg
hlt
cmp
(bad)
lds
mov
adc
aaa
pop
mov
mov
pop
and
int3
push
inc
retf
inc
adc
pop
imul
cmp
cmp
or
dec
pusha
loop
out
xchg
pushf
cmp
into
mov
jne
aas
ins
fs
or
xor
jno
test
wrmsr
test
and
data16
les
jmp
push
int
cld
aaa
pop
adc
clc
dec
push
into
sti
sbb
(bad)
dec
push
(bad)
sbb
fucom
xchg
das
add
pop
cmp
lock
or
or
pop
adc
xor
push
mov
cmp
lods
js
mov
xor
and
jne
clc
jae
push
sub
add
jns
jbe
(bad)
xor
mov
cmp
jbe
cwde
stos
sub
ret
mov
jno
fld
stos
call
sbb
enter
ret
mov
push
lock
sub
jge
pop
mov
sub
fidivr
pop
addr16
mov
aas
arpl
jns
jmp
(bad)
jns
dec
mov
mov
out
inc
cs
adc
jmp
addr16
aad
xchg
mov
mov
sbb
enter
cmp
push
cwde
neg
adc
pop
and
dec
fsub
outs
shl
int3
push
ret
cmp
outs
push
(bad)
lods
(bad)
in
(bad)
aam
or
pop
adc
ror
in
cdq
sbb
mov
retf
add
cmps
xor
je
cmp
mov
or
inc
jecxz
xor
or
pop
push
push
aaa
add
mov
sbb
pusha
lock
mov
pop
push
push
in
pinsrw
mov
test
daa
frstor
mov
sub
ret
lds
js
or
movs
mov
push
cmp
xor
cmp
je
mov
add
add
pop
push
les
mov
das
xor
adc
fst
lahf
jl
xor
rcl
and
xchg
pop
std
push
lods
adc
aad
rol
fiadd
rcl
test
sahf
(bad)
loop
outs
dec
add
mov
(bad)
xchg
ret
inc
rcr
loope
fst
stos
sbb
aas
pushf
into
dec
inc
sub
mov
push
xchg
into
ins
jmp
int
fiadd
and
fimul
pop
pop
cmp
jno
es
clc
sti
ins
out
out
mov
mov
xchg
lods
aam
jmp
sbb
sub
sahf
mul
cmc
and
xchg
imul
dec
mov
cmp
jns
outs
fcom
mov
sub
test
arpl
inc
imul
add
pop
sbb
add
imul
push
leave
out
adc
popf
adc
adc
int
sti
mov
jno
xchg
cmp
xchg
rol
mov
xor
inc
sbb
shl
sbb
fldpi
add
fisttp
mov
fucomp
add
je
jmp
mov
ror
sahf
aas
xchg
push
cdq
aad
jl
push
out
movs
push
jbe
fwait
aad
add
inc
xchg
pminsw
push
sub
les
fsubr
mov
inc
fs
stc
repz
dec
mov
mov
inc
push
cmp
adc
pop
aam
jbe
dec
mov
aaa
ficom
lock
xchg
pusha
sub
int3
xchg
mov
fidiv
mov
je
stc
cmc
int3
jmp
push
cwde
iret
ss
jg
cmp
sbb
int3
inc
jle
in
xor
adc
xor
mov
xchg
mov
dec
xlat
dec
adc
jns
sar
sub
inc
iret
push
ins
or
fldenv
sbb
push
std
popa
out
scas
add
sti
xchg
div
retf
dec
jns
je
xor
ficomp
push
rol
push
and
aad
pop
lahf
inc
scas
mov
das
arpl
fcomp
push
pusha
fild
aad
xor
test
cld
cmp
retf
cmc
in
test
push
mov
ret
dec
loopne
dec
cdq
stc
push
jns
xor
mov
or
or
aam
push
movs
xchg
jecxz
xchg
in
add
xchg
rol
mov
test
cmp
mov
(bad)
dec
dec
popa
adc
ins
and
mov
inc
adc
in
out
daa
cdq
rcr
retf
retf
add
(bad)
cdq
dec
or
and
lahf
mov
stc
xchg
or
neg
sbb
sbb
jnp
xchg
mov
sbb
dec
xor
cs
adc
call
mov
mov
stc
lock
mov
jg
arpl
push
pop
das
ja
cmp
or
adc
mov
inc
cmps
cmp
inc
jnp
pusha
jle
ret
neg
popf
pusha
adc
imul
jmp
lock
add
in
jl
cmc
mov
repnz
cld
inc
pop
push
(bad)
imul
es
jmp
adc
popf
into
add
pop
dec
(bad)
repnz
jecxz
gs
enter
cmp
mov
(bad)
push
add
mov
les
in
and
enter
ds
xchg
js
nop
or
push
and
jbe
lods
jno
sbb
sub
cmps
dec
push
ja
test
mov
fs
stos
fcomp
(bad)
push
mov
out
test
xor
push
sbb
adc
cmp
dec
inc
dec
pop
ss
push
pop
mov
in
push
jno
xchg
jmp
outs
mov
mov
mov
sar
sub
pop
lods
add
pop
loopne
mov
mov
mov
cmp
js
mov
call
add
jmp
loope
rol
fwait
sbb
cmp
inc
jnp
out
jb
mov
xchg
dec
shl
fadd
jbe
sub
dec
outs
jl
loop
add
dec
jo
pop
lds
jle
lahf
sbb
xchg
push
(bad)
fsubr
ins
clc
ja
pop
fwait
jne
sbb
and
pop
(bad)
jl
xchg
popf
jno
je
sub
outs
adc
imul
dec
jg
clc
cmps
js
lods
mov
mov
inc
cwde
int3
sub
pop
shr
ds
call
js
loop
ins
pop
mov
mov
je
(bad)
jno
mov
sub
test
ret
or
adc
pusha
das
imul
sti
movs
cmp
jp
rcr
sti
das
mov
sbb
xchg
sbb
jo
popa
xchg
addr16
pop
jnp
out
adc
sbb
pop
add
add
and
adc
ficom
mov
pop
cmp
leave
push
popa
sbb
push
cmp
popa
inc
fwait
iret
ret
ret
adc
pushf
jns
push
add
and
push
xlat
out
loopne
dec
ins
xchg
xor
nop
mov
loopne
out
loopne
push
addr16
arpl
outs
adc
ret
jnp
aad
sub
mov
jae
test
add
out
adc
les
bound
xor
stos
pop
sbb
shl
cli
out
xchg
dec
jmp
xchg
(bad)
sar
in
push
test
popf
add
(bad)
div
inc
xor
fbld
popa
fcmovu
push
push
pusha
push
xchg
push
xchg
cwde
jb
sbb
test
aaa
loope
adc
inc
ret
fnstenv
sbb
adc
mov
add
adc
dec
movs
adc
in
(bad)
mov
scas
pushf
int3
and
pop
(bad)
daa
add
mov
popf
xor
push
mov
test
cmc
xchg
inc
cwde
outs
sub
push
out
mov
outs
icebp
lea
jecxz
mov
fs
and
push
mov
mov
jecxz
pminsw
and
mov
xlat
ins
pop
fisubr
fsubrp
fdiv
movs
iret
and
aaa
es
or
mov
mov
rep
sbb
xor
js
sub
(bad)
sub
ret
sub
mov
xor
bound
jecxz
xchg
cmp
scas
and
jmp
ret
stc
push
adc
xlat
jg
sub
out
mov
sub
in
scas
or
clc
call
stc
add
js
arpl
out
ja
sti
cmp
in
gs
addr16
ret
or
push
mov
es
shr
jb
addr16
sub
movs
pop
sub
(bad)
ss
push
leave
sar
cmps
jl
pop
call
xor
jle
jmp
inc
stos
pop
mov
push
jl
pop
mov
cli
popf
sti
jns
retf
je
inc
cmp
cvtpi2ps
jp
ficom
pop
ins
jne
call
test
xchg
sahf
popa
sub
fadd
mov
sub
sub
imul
mov
sub
in
inc
ds
ins
sti
mov
aad
dec
rol
dec
repz
test
sbb
xor
stc
push
inc
mov
(bad)
sbb
cs
pusha
sbb
xchg
push
push
sbb
(bad)
push
sub
sub
pusha
add
cs
sbb
out
cwde
or
add
inc
mov
out
dec
dec
xchg
and
or
mov
scas
in
dec
push
mov
jle
pushf
cmp
xor
sub
ror
mov
adc
cmp
mov
adc
mov
jmp
mov
sub
les
inc
ror
adc
mov
push
test
in
bound
and
cmp
addr16
sbb
sbb
sbb
rcl
push
mov
sti
in
pop
pusha
lods
out
xor
aaa
adc
cmp
aaa
ret
mov
hlt
mov
push
shl
cli
sub
ror
out
loopne
ins
jnp
xor
jecxz
jecxz
jmp
jae
fdiv
cdq
dec
shl
sbb
jge
cld
cs
pop
adc
loope
sbb
push
test
sub
pop
stos
sbb
shr
jp
cwde
dec
pusha
lds
inc
dec
mov
mov
pop
imul
not
xchg
(bad)
call
sub
xor
sub
iret
mov
ret
out
and
cld
mov
push
jge
mov
lahf
movs
adc
mov
pop
shr
(bad)
(bad)
cmps
jecxz
xchg
mov
jmp
push
xlat
aad
cmc
lds
mov
push
adc
out
add
inc
cdq
sbb
cli
mov
cmp
repz
jmp
arpl
pop
mov
jl
ins
in
inc
mov
pop
(bad)
out
out
xor
call
ins
sub
xchg
int3
daa
and
sbb
aam
inc
xlat
mov
adc
mov
and
xchg
add
retf
pand
mov
adc
fwait
xor
ins
push
gs
fdiv
inc
std
pusha
sub
(bad)
mov
xchg
mov
in
pop
xor
inc
push
mov
loope
clc
ins
movs
dec
jl
cs
test
xor
adc
pusha
(bad)
scas
sar
or
mov
loope
stos
cmovp
cmp
cmc
dec
arpl
call
add
call
les
(bad)
push
jg
mov
mov
and
pop
adc
dec
aaa
lods
mov
xchg
mov
aaa
xor
mov
pop
or
dec
pop
xor
sbb
aad
movs
xor
lock
pop
sbb
ins
xadd
mov
jge
cmc
or
dec
fidiv
mov
fdivr
pop
jmp
ja
pop
ja
fnstenv
xlat
or
lahf
mov
iret
lods
cmp
arpl
int3
xor
adc
fcom
mov
dec
inc
and
stos
jp
xchg
inc
jnp
and
sbb
mov
and
fild
add
movs
repnz
mov
loope
call
outs
addr16
je
rcl
(bad)
lea
aad
sbb
icebp
or
loopne
shr
sbb
xor
call
ret
and
xchg
pop
movs
in
sub
outs
or
xor
jne
mov
mov
ret
movs
push
inc
xor
js
lds
test
pop
clc
mov
inc
push
scas
jl
pop
sbb
add
enter
or
sbb
cli
ret
loop
ja
pop
stc
inc
int
enter
pop
maskmovq
div
dec
int3
test
sub
inc
mov
xor
and
xchg
inc
pop
movs
pop
lock
dec
(bad)
movs
push
pushf
hlt
add
push
std
ss
xchg
pop
aad
movs
inc
out
cwde
dec
mov
dec
xchg
aas
nop
pop
fwait
les
adc
leave
daa
jns
pop
scas
xor
add
push
or
mov
scas
jge
push
in
mov
loopne
dec
into
mov
or
daa
dec
mov
xchg
sbb
rcr
test
mov
sub
lods
outs
ja
dec
lods
imul
and
hlt
jns
out
gs
out
push
pop
sub
mov
nop
std
mov
fbld
idiv
xchg
jg
sub
push
fisttp
lods
sbb
sbb
sub
sbb
fst
mov
pop
ret
arpl
dec
out
sbb
and
add
mov
or
xor
xor
popf
adc
pop
or
mov
(bad)
inc
jge
movs
nop
daa
test
mov
and
dec
jb
jb
dec
cwde
lds
std
(bad)
shr
push
iret
imul
sub
xor
add
mov
jne
xchg
stos
les
sahf
jae
imul
fdivr
lea
mov
dec
arpl
push
xchg
rol
jns
call
iret
les
add
sbb
outs
mov
push
mov
arpl
xlat
pusha
and
jmp
add
jl
outs
mov
aaa
sbb
cdq
fucom
int
cdq
arpl
inc
add
pop
sar
int3
sar
add
movq
or
adc
sub
inc
fwait
bound
rcr
fisttp
sub
dec
pushf
xor
push
mov
push
mov
aaa
out
and
mov
ins
inc
rcl
rcl
pop
sub
dec
out
cld
lock
repz
add
leave
or
out
ja
(bad)
not
push
dec
movs
xor
mov
leave
xor
cmc
adc
daa
push
cmps
aam
mov
jbe
mov
xor
fyl2xp1
call
pop
shr
lss
fiadd
in
mov
pop
push
fwait
xor
pop
fdiv
or
or
xchg
sub
dec
repnz
sub
(bad)
hlt
rep
div
sub
ror
and
cmp
paddusw
bound
push
jecxz
lea
lahf
pop
and
sbb
jg
jns
inc
xchg
scas
ror
ror
jl
jge
jp
or
add
cld
out
jno
xor
and
jge
xchg
mov
sub
fcmovnbe
movs
adc
push
mov
mov
mov
sahf
pop
popf
repnz
push
out
pop
sub
mov
jae
sbb
jnp
add
push
inc
cmp
adc
cmp
test
dec
xchg
sbb
mov
rcl
pop
inc
lahf
inc
cmps
mov
iret
mov
pop
leave
pop
jecxz
test
aad
pop
pop
retf
jmp
push
and
add
mov
pop
repz
pop
bswap
inc
and
pop
test
add
sbb
sub
stc
int3
xchg
iret
xchg
mov
aaa
cs
sub
xchg
lods
popa
inc
test
mov
daa
dec
(bad)
jno
outs
lods
cmps
cmp
push
jl
or
std
mov
jne
out
mov
je
inc
(bad)
aad
xor
and
push
fdivr
sbb
(bad)
popa
push
std
lods
dec
ficom
add
adc
rcl
inc
and
stc
jmp
pop
adc
je
outs
icebp
(bad)
mov
add
xor
call
outs
sub
push
and
popa
mov
push
mov
pushf
cmp
and
push
jle
jne
pop
int3
mov
mul
movs
(bad)
xchg
sbb
and
and
add
imul
dec
nop
and
push
fnstsw
jo
aam
pop
adc
hlt
inc
adc
xor
in
push
xor
lods
sbb
ror
push
lods
das
ins
out
addr16
inc
pop
push
xchg
(bad)
dec
movs
mov
test
inc
cmp
sbb
add
mov
ins
jns
mov
cmc
(bad)
fwait
inc
stos
push
push
dec
mov
in
jno
aas
jmp
rol
outs
lods
inc
inc
(bad)
in
push
lahf
pop
jno
inc
inc
push
push
mov
sbb
nop
mov
and
shr
push
int
test
test
out
dec
test
aas
fcom
mov
mul
inc
pop
add
pop
icebp
mov
xchg
cdq
inc
cli
cmp
lds
imul
cmp
repnz
xchg
test
cmp
pop
sbb
into
dec
jb
dec
sar
lds
or
cmp
loop
cmps
jp
jo
movzx
ficomp
test
ss
sub
sbb
and
fist
(bad)
arpl
mov
mov
outs
jg
pop
fimul
inc
(bad)
loop
pop
xchg
jle
jbe
adc
adc
sub
xor
fsubrp
inc
mov
fstp
sub
push
test
pop
mov
xor
stos
das
(bad)
pop
pop
lahf
mov
push
scas
sbb
dec
stos
cmps
cli
mov
xor
pop
mov
(bad)
(bad)
enter
pop
mov
push
dec
xor
xchg
mov
ror
pushf
jno
sbb
jae
push
dec
xor
cmp
or
stos
daa
add
dec
and
and
mov
imul
out
adc
cmp
add
xchg
scas
and
aam
int3
pop
mov
sbb
pop
adc
bound
push
movs
ror
popa
cmp
push
pusha
xchg
or
popf
inc
or
xlat
or
pop
clc
xchg
pop
xchg
mov
cs
out
hlt
movs
aas
push
push
cmps
jnp
and
jp
and
test
pop
adc
xchg
pop
and
push
jno
imul
lock
shl
aas
add
mov
aas
cmp
loop
(bad)
test
push
cmp
mov
jl
addr16
cmp
test
fs
mov
dec
fdiv
cld
pop
mov
aam
shl
shr
call
lock
jne
cmp
ja
cwde
xchg
cmp
dec
sub
sbb
pop
and
push
dec
cs
pushf
inc
or
stos
jne
sbb
adc
mov
in
nop
cdq
mov
rcl
xor
pop
xor
lods
cs
mov
cmps
arpl
cwde
bound
test
pop
cmp
pusha
push
mov
loopne
mov
cmp
ret
test
push
and
cmp
popf
test
xchg
mov
xchg
ins
(bad)
adc
inc
test
sub
fcmovne
daa
rcl
enter
ss
adc
inc
ss
fidivr
jbe
sub
pop
(bad)
into
pop
movs
rcr
sbb
jecxz
lock
dec
sub
hlt
ins
inc
inc
loop
loop
adc
dec
(bad)
sub
sbb
jb
dec
push
aaa
fimul
xchg
fcomp
dec
jb
leave
(bad)
jne
fwait
push
cld
(bad)
enter
pop
jno
inc
mov
frstor
movs
jge
sub
inc
xchg
dec
fnsave
cwde
inc
ret
sbb
inc
(bad)
dec
sbb
push
mov
sub
adc
and
bound
sub
sbb
cmp
mov
fisub
int
ins
cmp
xor
pop
jne
jg
add
push
ret
or
in
mov
imul
sbb
test
sub
mov
lea
sbb
int3
ja
sbb
je
test
inc
add
cmp
xchg
jp
xchg
in
dec
mov
lds
push
mov
ret
adc
rcr
pop
and
sbb
inc
shr
arpl
jbe
arpl
dec
mov
inc
pop
xchg
jno
xor
bswap
ffreep
pushf
and
mov
aad
and
jns
int3
and
(bad)
mov
sub
js
mov
in
pop
cmp
and
out
push
mov
rcl
enter
adc
lock
(bad)
out
fbstp
mov
jmp
mov
adc
mov
jle
jecxz
sbb
cmc
and
dec
lock
or
into
test
sub
not
mov
cwde
jge
into
cmps
xchg
popf
cdq
push
repz
shl
pop
leave
imul
mov
mov
(bad)
mov
daa
inc
in
jecxz
jg
rcl
xor
test
and
mul
cs
not
loope
repnz
int
stos
and
sub
loopne
mov
clc
push
in
mov
ja
xchg
mov
xchg
inc
das
(bad)
jmp
in
ins
adc
fidiv
ins
and
mov
jl
mov
dec
aam
pop
movs
nop
test
call
movs
ins
ds
push
push
mov
call
push
dec
add
mov
lock
imul
stos
dec
pop
push
lods
int
sub
arpl
scas
push
inc
scas
sub
mov
cmp
fs
sti
fmul
call
or
mov
into
aam
inc
sbb
aas
xchg
in
mov
jmp
adc
cmps
jb
or
mov
pop
add
lahf
shr
cmp
and
jnp
mov
mov
pop
cmp
cwde
xor
pop
adc
mov
dec
push
dec
mov
jg
mov
out
mov
add
in
cli
mov
adc
imul
dec
xchg
fimul
cmp
xchg
push
xchg
xchg
xor
imul
int
dec
inc
and
rol
jmp
jno
aad
pop
inc
aam
pusha
inc
mov
jle
mov
push
gs
or
inc
leave
aam
add
jg
mov
and
outs
pusha
cmp
xor
jmp
dec
mov
jge
pop
cmp
and
adc
mov
fcom
mov
cwde
cmc
mov
xchg
lods
jns
outs
cwde
sbb
cmp
in
or
mov
mov
in
into
mov
sbb
inc
push
fisttp
mov
lahf
in
call
jmp
add
push
int
dec
and
push
mov
mov
fmul
adc
in
sub
das
loop
enter
jg
pop
ins
mov
adc
test
and
scas
xchg
or
mov
xchg
lds
push
es
push
inc
test
lea
fsub
(bad)
cld
cmp
jae
xor
in
cmp
add
xchg
xchg
shr
lahf
ret
ror
inc
aam
and
sub
and
imul
popa
xor
inc
add
jle
aaa
lock
lods
enter
rcr
push
and
ret
retf
dec
jnp
mov
mov
mov
xchg
mov
cmp
mov
cwde
jmp
push
mov
cmp
pop
inc
push
sub
clc
icebp
ficomp
popf
push
fist
inc
push
das
leave
pminub
f2xm1
ds
rcr
jno
xor
ss
inc
push
or
mov
in
pop
leave
push
das
pop
mov
lock
ins
cwde
lea
aam
add
loope
imul
outs
pop
inc
(bad)
xor
jae
fchs
aad
mov
daa
adc
adc
daa
pop
sbb
or
popf
js
out
neg
stos
ins
xchg
or
arpl
inc
es
cmp
push
outs
push
shr
adc
pop
js
adc
xchg
cmps
adc
jnp
(bad)
outs
jmp
adc
bound
jl
push
(bad)
js
outs
fmul
xor
pop
imul
xchg
in
inc
adc
int
or
jmp
arpl
mov
rcr
rcr
push
outs
xor
test
cmp
pop
outs
cmps
and
mov
mov
jb
fldenv
lods
pop
jl
out
jp
push
int
or
mov
mov
mov
cmp
inc
cmp
icebp
pop
push
cmp
std
cld
test
xchg
aad
or
push
and
dec
jno
xor
cmp
jmp
rcl
stos
fldcw
loopne
cdq
cmps
push
push
sbb
cdq
adc
mov
push
and
dec
xor
cli
shl
mov
(bad)
daa
leave
jp
sbb
adc
into
add
adc
aad
ret
sbb
push
shl
loopne
pop
mov
ror
rep
mov
mov
mov
mov
sbb
js
enter
mov
jo
shl
dec
idiv
push
aaa
cli
xor
cmp
imul
aad
in
and
pop
dec
add
inc
pop
dec
jle
push
dec
loopne
sbb
xlat
mov
fimul
xchg
enter
cwde
mov
and
lods
jb
mov
sub
mov
test
int3
sbb
enter
icebp
dec
xor
xchg
aad
popa
(bad)
sti
das
pushf
mov
mov
cmp
mov
push
mov
mov
test
jbe
pop
or
jmp
sub
mov
ficom
adc
and
cmp
xchg
mov
(bad)
xchg
jle
jmp
lds
mov
or
sbb
xor
pusha
sub
xchg
mov
and
jl
hlt
lock
loop
fsubr
not
mov
pop
mov
cmp
mov
movs
popf
(bad)
je
xor
pop
or
or
cmps
and
in
mov
ret
std
xor
mov
cmp
xchg
adc
adc
ror
jg
sub
sbb
mov
inc
mov
xor
sub
cmp
iret
jg
fisub
xchg
sbb
xchg
int
lds
mov
enter
inc
js
cmc
das
pushf
mov
cmp
cmp
mov
ss
mov
push
adc
dec
or
cmc
(bad)
cmp
mov
push
sub
xchg
add
scas
sbb
push
mov
std
test
and
sub
jmp
xor
inc
imul
jg
xchg
into
mov
mov
adc
and
icebp
and
sbb
lds
push
and
leave
push
fcom
add
mov
inc
icebp
mov
lahf
xchg
push
cmp
xchg
pop
fdiv
pushf
les
or
mov
test
mov
adc
xor
ss
xor
rcl
xchg
outs
sahf
mov
jmp
movs
inc
fsub
fbstp
mov
lods
jmp
and
in
sub
pop
out
out
mov
pop
jle
lods
scas
mov
xchg
sbb
push
rcl
jl
(bad)
mov
in
xchg
add
inc
xor
nop
jnp
(bad)
(bad)
pop
ret
and
rcr
sbb
ds
nop
add
jae
fisubr
jmp
push
les
mov
lods
enter
test
retf
xchg
clc
stos
xor
push
inc
sbb
jecxz
lahf
mov
jle
mov
leave
adc
sub
hlt
push
in
retf
dec
add
mov
mov
xor
(bad)
aas
xor
aad
push
stos
or
inc
in
lahf
ins
push
sti
test
retf
icebp
sbb
jl
and
mov
lds
leave
dec
mov
out
neg
jb
mov
dec
pop
out
imul
fld
cmp
ror
adc
xor
sub
cmp
adc
adc
and
cmp
adc
inc
and
out
shl
lahf
or
cmc
xor
ret
std
bound
ret
mov
pop
jmp
jge
dec
aam
sbb
pop
pop
xchg
cmps
nop
jle
push
rcr
push
pusha
xchg
mov
cmp
jmp
sbb
or
pop
add
je
je
push
in
movs
and
xor
adc
lock
jmp
movs
sub
ret
add
js
dec
pop
aam
sbb
push
add
pusha
dec
pop
jmp
leave
(bad)
mov
jae
dec
ds
and
xor
cmp
(bad)
imul
dec
pop
(bad)
jmp
(bad)
mov
inc
aaa
sub
aas
cmp
cdq
pop
js
jmp
fnsave
ficom
pop
jne
xchg
nop
movs
xchg
mov
imul
mov
outs
(bad)
mov
neg
inc
daa
add
rcr
push
movs
out
push
push
rcr
dec
ja
xlat
xchg
stos
nop
int
push
ret
mov
sub
mov
sar
jmp
ds
adc
mov
rcl
xor
jge
adc
inc
fild
and
mov
call
imul
push
lock
push
cmova
xchg
rep
jle
shl
pushf
push
fbld
jl
cmp
hlt
jg
lds
push
adc
or
stc
test
mov
cmc
xor
cdq
push
jmp
or
push
or
jns
repz
iret
jno
(bad)
imul
pop
jo
fwait
mov
jne
retf
mov
fcomp
movs
sbb
dec
sub
jecxz
enter
and
sub
and
popf
jbe
outs
(bad)
cli
cwde
add
jmp
retf
xchg
rcr
inc
lea
fs
clc
push
std
test
mov
mov
leave
inc
jno
xchg
stc
jmp
ins
pop
dec
push
int
lea
adc
jl
cpuid
imul
lods
sub
cs
mov
jmp
push
cs
loope
pop
out
dec
addr16
jp
pop
fcomp
outs
add
int3
mov
sar
outs
push
inc
not
jecxz
scas
mov
cwde
dec
push
jnp
in
retf
mov
jecxz
sbb
mov
pop
fdiv
mov
dec
loopne
push
xchg
sbb
push
xor
jb
push
outs
in
xchg
mov
ret
mov
or
mov
ret
mov
or
jle
jp
pop
loope
lods
popf
inc
jle
mov
enter
loopne
mov
mov
sar
pop
adc
ds
sbb
clc
add
(bad)
cld
clc
inc
je
pop
mov
popf
jbe
(bad)
cli
sbb
mov
mov
mov
fstp
dec
shr
pop
xchg
push
sub
jb
mov
popa
adc
test
std
bswap
mov
push
popa
push
ret
mov
arpl
jo
push
out
rcr
push
hlt
xor
cs
(bad)
xchg
mov
repz
dec
test
and
jl
test
jno
mov
stc
clc
fcmovu
rcr
fadd
jae
cmps
in
add
shl
scas
cmp
sub
rol
mov
push
sbb
fild
cld
cmp
scas
xchg
test
pop
ja
xchg
ror
jp
push
rcr
inc
out
cmc
sbb
gs
std
adc
sar
std
xchg
inc
jo
inc
push
mov
mov
aaa
fcomp
mov
cli
add
adc
sti
or
adc
adc
mov
test
cmp
lock
pop
jne
or
aad
adc
inc
add
push
fwait
arpl
sub
sahf
or
xchg
mov
and
movs
stos
adc
sbb
push
inc
push
mov
enter
enter
test
cs
int
pop
xor
mov
jns
enter
ins
mov
adc
int3
mov
cmp
push
sbb
xor
ror
sbb
mov
hlt
pop
push
mov
and
leave
pop
and
pop
sbb
inc
in
and
mov
cmp
imul
pop
(bad)
(bad)
pop
mov
out
mov
push
in
daa
jae
xchg
bound
test
fwait
and
xchg
je
add
js
and
xchg
jmp
xor
(bad)
pop
nop
push
or
xchg
mov
inc
leave
xchg
rol
or
mov
cmp
and
(bad)
rcr
nop
sub
(bad)
push
adc
push
inc
aad
les
(bad)
in
vxorps
lods
(bad)
repz
cmp
lods
int3
mul
jns
dec
cwde
cld
setns
sbb
fist
pop
sar
je
push
push
push
jno
(bad)
mov
adc
sub
push
fwait
xlat
inc
cwde
adc
xor
data16
js
(bad)
push
pushf
in
xchg
sub
imul
cmps
(bad)
ret
sub
jns
pushf
cmp
mov
dec
pop
rol
test
jge
cdq
jecxz
scas
icebp
inc
jne
mov
or
sub
pushf
retf
sar
adc
xchg
ins
(bad)
or
fmul
and
adc
mov
push
jmp
cmp
pop
mov
fdiv
test
push
cmp
shr
sbb
push
or
sbb
jp
or
arpl
movs
out
mov
pop
push
push
cwde
mov
push
mov
scas
and
xchg
jns
cmp
ret
jnp
push
bound
dec
std
hlt
jne
lahf
rcr
mov
xchg
xor
cld
dec
push
std
js
mov
sbb
nop
or
ins
out
cdq
lds
push
icebp
retf
fcomp
(bad)
mov
push
in
les
fld
and
test
push
adc
jg
popf
jns
out
in
pop
mov
jl
bound
sub
jnp
lock
xor
mov
jl
pusha
mov
mov
add
and
jmp
bswap
add
sar
movs
adc
pop
ss
adc
cdq
fcmovb
sbb
jne
jne
ss
daa
jno
imul
mov
ins
add
xor
movs
test
inc
lahf
dec
es
jns
cmp
xchg
push
or
mov
repz
out
mov
add
add
pop
repnz
jo
jmp
shl
xchg
push
or
stos
shl
or
es
ins
or
jg
fdivp
jo
movs
xchg
pushf
dec
(bad)
xor
lods
icebp
xchg
add
repnz
fsub
out
into
inc
lea
hlt
fsubrp
adc
lock
mov
cmp
cdq
(bad)
daa
xchg
adc
xlat
and
int3
movs
push
dec
mov
xor
ds
mov
xchg
scas
cmp
jmp
sub
xor
xor
add
hlt
dec
lods
cmp
pop
addr16
mov
imul
(bad)
repnz
dec
cmp
lods
(bad)
sbb
test
jmp
fiadd
ret
outs
shl
aas
and
jle
xor
xor
shl
(bad)
(bad)
test
ss
movs
dec
lods
fdiv
shl
aad
or
clc
shl
jp
bound
jae
add
cmp
jo
or
jae
aaa
xchg
in
sbb
mov
repz
scas
xor
mov
xchg
push
inc
sar
xor
dec
jg
ins
adc
jmp
inc
stc
mov
test
cdq
cmp
imul
gs
pop
push
int
xor
daa
fldcw
xor
inc
cli
ds
dec
adc
stos
in
ins
push
jne
lods
movhps
dec
xchg
mov
push
cmp
mov
fcom
sti
jae
push
add
mov
bswap
mov
popa
cmp
and
fidiv
pop
sti
cld
rcl
ja
repnz
rcl
mov
je
fmul
pusha
das
sar
pop
inc
in
or
push
(bad)
retf
push
mov
cmp
and
cli
push
cld
addr16
test
sbb
bnd
dec
rcl
nop
cdq
int
dec
(bad)
popf
and
mov
dec
jne
mov
pop
mov
test
outs
mov
jecxz
and
retf
inc
cvtps2pd
cld
jbe
movs
daa
jbe
push
stos
add
mov
jecxz
or
fs
xchg
pop
sub
xchg
jne
sbb
bound
loope
rol
xor
in
xor
pop
ja
stos
test
xchg
xor
(bad)
cmp
cmp
ficom
outs
sbb
repz
pop
add
sahf
push
ins
inc
and
lahf
(bad)
arpl
inc
dec
mov
movs
popa
enter
outs
nop
mov
dec
inc
call
(bad)
ja
dec
mov
les
and
mov
fadd
ja
shr
push
xor
popa
sub
jbe
pushf
inc
xchg
xchg
jnp
ret
xor
adc
ret
add
add
daa
jmp
xor
js
shr
mov
add
dec
lahf
push
sub
into
dec
sub
ffreep
xor
mov
lods
stos
lods
inc
lods
dec
mov
lock
or
clc
pop
or
adc
jnp
sbb
pop
mov
cmp
ret
dec
add
fwait
jnp
outs
stc
jecxz
cdq
mov
ins
fs
popa
mov
sbb
test
and
jne
js
mov
outs
pop
out
fisttp
xor
out
sub
xchg
mov
xchg
pcmpgtb
out
mov
ja
and
dec
and
jle
std
push
pop
push
sbb
xchg
dec
inc
fld
xchg
mov
jmp
imul
sub
jecxz
dec
inc
jl
mov
fbld
dec
ja
push
mov
lds
shl
mov
pop
daa
sbb
scas
sar
inc
mov
sahf
xchg
push
stos
and
cmp
out
cmp
fs
adc
cld
aaa
add
pop
jle
pop
call
mov
out
inc
xchg
fsubrp
push
and
dec
je
dec
xor
xlat
sub
xor
ss
sub
mov
pop
ror
fdivrp
aam
and
(bad)
xlat
cmps
mov
mov
repnz
stos
shr
cmp
sti
xor
mov
or
adc
lods
rcl
sub
gs
ret
out
(bad)
gs
fsqrt
inc
fist
dec
sub
ja
cmps
out
sbb
imul
and
pop
xor
or
(bad)
jecxz
cmp
xor
int3
stc
ret
leave
mov
cmp
inc
adc
lahf
dec
pusha
mov
cmp
inc
dec
retf
xor
std
inc
add
pop
das
shl
rol
mov
mov
add
jg
cmc
(bad)
mov
push
into
xchg
sbb
xchg
cmc
mov
jmp
out
enter
int3
push
inc
in
dec
pop
jecxz
jmp
into
daa
retf
inc
cmps
gs
retf
das
stc
test
dec
cmc
cld
inc
pop
call
out
bound
or
pusha
xor
ret
lds
cmps
mov
aas
jnp
adc
mov
inc
pop
jle
inc
push
mov
fld
sub
stos
jecxz
out
pop
loop
movs
out
or
xor
xor
in
inc
cmp
mov
pop
nop
sbb
or
neg
mov
icebp
pop
sub
sbb
fst
sbb
jnp
xchg
add
popa
js
bound
mov
sub
xchg
cmp
into
pusha
mov
xchg
or
dec
cwde
sub
ror
stc
ins
ds
dec
mov
jbe
jnp
aad
jp
xor
jl
jl
push
das
hlt
jg
xchg
jo
or
retf
sbb
and
mov
sub
and
fwait
mov
cmps
leave
push
fsubr
jae
shr
xor
xchg
sbb
ror
lea
outs
jp
in
xor
push
sub
mov
nop
enter
or
or
sahf
dec
test
and
jbe
add
iret
pop
push
and
jnp
pop
and
mov
xor
mov
jl
or
xlat
ret
xchg
rcl
loope
mov
add
push
scas
mov
xchg
mov
mov
push
pop
adc
into
xchg
push
or
aaa
aas
pop
xor
daa
lds
push
dec
lock
(bad)
out
pusha
cld
mov
outs
mov
cmp
out
dec
mov
cld
and
cmp
sub
test
pushf
jle
rcr
ds
bound
jp
or
dec
pop
shl
(bad)
dec
jp
mov
jbe
(bad)
pushf
mov
adc
xchg
fiadd
rcl
cld
rcl
push
test
sbb
xor
test
sbb
clc
loop
sbb
cdq
imul
jmp
or
lods
xchg
sahf
push
dec
ins
sbb
sar
(bad)
aas
mov
mov
mov
lods
icebp
fwait
cmp
aad
icebp
mov
cmps
int3
scas
fwait
cli
jne
pop
mov
cmp
arpl
repz
mov
cs
dec
jnp
(bad)
dec
les
cdq
sahf
adc
loope
mov
pop
push
ja
cmp
std
clc
mov
mov
push
pop
mov
dec
bnd
push
xor
jg
cmp
in
lahf
cmps
fstp
xlat
or
or
mov
xor
or
movs
cmp
ss
sub
pusha
mov
cmp
xchg
cmps
jae
sahf
jnp
fwait
ja
mov
fld
adc
in
je
in
push
cs
jge
cmps
pusha
jae
adc
hlt
jne
dec
popa
mov
pop
mov
ror
call
lds
call
xchg
movs
pop
hlt
test
les
xor
pop
in
sub
pop
pop
inc
cmp
aas
inc
mov
pop
pop
cmp
xchg
push
sbb
cmp
ret
xchg
call
jl
and
xchg
cmp
mov
jae
mov
mov
fs
mov
lock
xor
call
dec
lea
mov
inc
jecxz
cmp
or
adc
popa
and
movs
pop
mov
ficomp
leave
dec
xchg
pop
shl
mov
lods
push
mov
adc
mul
fistp
cmp
push
mov
jo
repz
int
add
sub
pop
out
dec
stos
push
xchg
sbb
mov
retf
(bad)
repz
lock
out
test
sub
nop
or
push
out
and
dec
das
clc
cmp
ret
mov
nop
add
mov
cmp
loop
and
sbb
cmp
sub
cmp
(bad)
mov
jne
inc
xor
psubsw
sbb
js
and
gs
gs
fs
dec
arpl
sub
xchg
xor
jl
sub
loop
ins
into
aas
jge
inc
inc
adc
push
adc
sbb
or
mov
pop
fild
lahf
retf
sbb
les
daa
or
mov
std
and
outs
ja
or
mov
aam
sub
cmps
js
mov
sub
add
int
adc
sti
clc
rol
outs
mov
inc
fadd
jp
push
push
loopne
das
ss
and
dec
sti
adc
stc
and
fwait
sar
mov
inc
frstpm(287
leave
clc
push
iret
xlat
xor
or
pop
push
ins
pop
mov
ret
fnsave
repnz
sub
daa
sbb
retf
push
std
sbb
jns
ja
iret
mov
fs
ds
mov
cmp
sub
pop
inc
jmp
jno
pusha
xchg
dec
mov
push
pop
in
jbe
sub
nop
fs
pop
dec
jne
cmps
lock
mov
xchg
xor
sbb
in
lahf
jnp
pop
push
jne
jmp
adc
cwde
stc
std
stos
fwait
test
fbstp
mov
jns
adc
inc
hlt
call
lock
inc
fwait
jnp
loopne
pop
mov
(bad)
bound
stos
cmp
cmps
into
jmp
js
mov
mov
pushf
call
sub
push
dec
retf
out
fimul
shl
xor
cld
and
dec
mov
pop
cmp
sahf
test
movs
inc
adc
dec
int
mov
rol
cmp
add
(bad)
fisubr
daa
and
retf
xchg
jno
inc
push
mov
mov
loopne
imul
fdivrp
xchg
stc
mov
in
mov
ret
push
mov
in
mov
ss
icebp
sub
xchg
inc
or
inc
fs
dec
outs
push
stos
add
lods
movs
push
mov
or
pandn
dec
scas
pop
cmps
jo
add
stos
cdq
leave
xor
mov
in
mov
cmps
dec
mov
cmc
mov
cdq
push
mov
xchg
xchg
out
pop
loope
mov
pop
jl
inc
mov
pop
dec
sbb
repnz
rcr
adc
mov
(bad)
dec
sahf
dec
out
push
sub
sbb
aas
inc
aam
xor
aaa
push
pop
fcomp
jecxz
scas
and
mov
adc
jl
mov
push
cmps
(bad)
sub
mov
or
call
popf
mov
movs
push
jns
pop
pushf
adc
push
mov
addr16
lods
add
and
jae
ret
xchg
and
mov
cmps
fst
dec
cmp
sar
or
push
inc
jl
dec
jnp
add
hlt
fsub
sub
jmp
ret
lea
mov
jb
ror
jne
push
imul
mov
add
std
les
retf
fimul
sub
fmul
in
in
and
das
mov
mov
xlat
adc
ins
jb
mov
jp
icebp
sar
and
fwait
outs
icebp
adc
xchg
gs
push
push
loopne
jns
xor
aas
lods
cmp
out
push
aam
push
xor
cmps
mov
xor
int
or
icebp
pop
inc
mov
dec
cmps
push
rol
or
ins
adc
je
xchg
push
aam
adc
pop
xchg
loop
mov
fdiv
popf
ss
stos
lods
jmp
lods
push
lock
into
fnstcw
push
pop
xchg
dec
jmp
popf
cli
jge
or
out
and
sti
imul
add
sub
jg
(bad)
and
jle
jp
movs
test
outs
test
mov
xor
jle
ds
call
(bad)
fsubr
sub
push
test
or
mov
das
int
iret
sbb
push
mov
sbb
(bad)
rol
jb
out
add
mov
xor
dec
jnp
pusha
int
or
inc
xchg
sub
out
sbb
jl
xchg
add
jbe
(bad)
movs
jp
ss
or
out
pop
mov
aaa
dec
inc
lahf
pusha
ins
icebp
push
xchg
out
pusha
int3
imul
div
call
lods
mov
retf
rcr
mov
push
or
es
dec
push
jp
and
loope
and
and
addr16
cmp
xchg
dec
mov
mov
in
popa
not
ret
pop
in
(bad)
adc
push
push
xor
lahf
jae
or
out
push
jae
out
pop
add
fst
xor
xchg
aaa
cmp
xchg
push
cmp
jg
clc
jae
sbb
and
and
cmp
mov
mov
mov
or
in
push
ret
popf
xor
popf
add
loopne
fisubr
(bad)
jl
cwde
cmp
cmp
aad
in
dec
test
push
ins
call
cwde
ja
cmp
cmp
es
push
add
or
test
add
dec
ja
test
jmp
cmp
adc
xchg
sub
nop
mov
add
ret
test
mov
xor
arpl
es
scas
aas
push
js
sbb
adc
int
imul
mov
sbb
out
call
fistp
dec
xor
sub
mov
push
mov
ss
push
push
adc
add
and
shl
clc
cmps
xor
inc
mov
xlat
retf
xchg
add
dec
push
pop
dec
mov
addr16
xchg
jae
icebp
in
dec
add
dec
icebp
stos
fiadd
aaa
push
mov
xchg
add
or
jp
std
loopne
enter
xlat
xor
mov
out
imul
rcr
ins
ins
jns
call
in
rcr
and
mov
stos
or
shl
fwait
addr16
jl
push
cmp
out
xchg
sahf
sahf
sbb
cmp
xor
ror
fldenv
adc
test
sbb
test
stos
mov
pop
xor
jne
(bad)
adc
sub
ror
add
arpl
sar
and
inc
ret
sbb
push
leave
cmp
mov
nop
jnp
cmps
mov
lods
or
sahf
scas
sub
mov
dec
mov
dec
stc
(bad)
pusha
retf
test
pusha
sbb
dec
in
mov
push
jmp
ror
aam
xchg
(bad)
scas
pop
ds
mov
into
jo
dec
cmc
sub
dec
fild
sbb
jl
(bad)
pusha
leave
or
or
sbb
std
or
aam
push
push
push
sahf
std
xchg
mov
test
push
test
sbb
inc
xchg
xchg
ins
test
mov
imul
std
jge
add
mov
pop
push
and
and
jmp
inc
aam
add
or
jb
xor
ins
add
cmps
ror
mov
ds
pop
in
mov
add
jle
mov
pop
xor
jecxz
sub
inc
fcom
stos
cli
push
inc
lea
ins
add
jb
xor
fdivp
and
fisttp
fbld
fld
ret
int
stos
div
adc
shr
mov
rcr
jecxz
jle
or
or
outs
mov
arpl
jmp
mov
js
scas
lds
mov
mov
js
adc
scas
gs
pop
mov
mov
repz
bound
push
pop
push
sbb
cdq
push
pop
daa
loopne
cmps
sbb
hlt
pop
mov
jmp
inc
ds
cmp
out
sub
cmp
jg
dec
outs
push
dec
fbld
lock
jmp
push
repz
sar
test
add
cbw
push
add
push
fcmovu
out
xchg
adc
repz
movs
push
(bad)
jp
test
(bad)
and
sub
dec
and
test
stc
jae
cmp
dec
adc
inc
sbb
jae
test
retf
inc
mov
ja
int3
fstp
mov
outs
ds
imul
jne
jne
ins
aaa
jmp
dec
jl
int
mov
add
iret
xchg
adc
cli
fnstcw
cs
push
mov
test
mov
dec
mov
retf
(bad)
out
sti
adc
fs
stc
or
cmps
sub
stos
fcmovnb
and
mov
mov
jecxz
enterw
jle
ror
popf
or
jecxz
inc
scas
daa
repz
sbb
xchg
enter
push
popa
adc
aad
push
test
and
iret
in
jae
(bad)
sbb
pop
retf
icebp
loope
cs
mov
dec
sbb
rol
add
push
mov
and
daa
mov
test
cmp
imul
sub
push
mov
mov
ds
sub
in
dec
out
ror
add
jmp
jp
pop
test
test
sbb
in
pop
push
fst
mov
push
scas
jle
lods
add
pop
adc
xchg
in
(bad)
stc
cld
jl
and
sbb
lods
sbb
test
daa
loopne
cs
xor
mov
sti
mov
sub
fs
cli
or
jns
scas
jg
xor
je
mov
cmp
or
addr16
repz
adc
sbb
cwde
test
ret
out
jns
or
fnstenv
pushf
and
push
les
fbstp
xor
fnstcw
test
mov
cdq
dec
add
fild
pop
jmp
imul
idiv
adc
shr
add
in
mov
aad
ja
je
xor
into
aas
aad
out
int
xor
mov
dec
sahf
xchg
pusha
std
and
aas
sbb
adc
loopne
pop
pop
mov
lods
mov
ret
fidivr
aas
idiv
add
mov
rol
or
out
dec
xor
loope
sbb
cmps
mov
loope
xor
fs
xchg
aam
pop
pop
jg
or
in
js
pop
mov
dec
mov
push
jecxz
and
aad
sti
inc
lods
sti
or
push
daa
lds
arpl
sbb
push
pusha
and
cli
cli
aam
xchg
mov
mov
add
imul
sub
dec
pop
shl
adc
jns
sbb
mov
add
xchg
jne
dec
adc
pop
dec
and
jbe
jle
pop
ret
inc
xor
repnz
inc
stc
cmp
repz
mov
daa
sbb
push
pop
loopne
mov
ins
test
dec
fdiv
test
ret
pop
daa
xchg
in
inc
mov
rol
mov
cmp
pop
(bad)
jbe
cmp
inc
sbb
test
pop
outs
inc
fnstcw
sbb
or
dec
mov
pop
mov
pop
adc
sub
mov
jge
xor
xchg
xchg
push
pop
retf
inc
jae
and
xor
in
xchg
dec
(bad)
jns
lea
test
cli
js
xor
push
fistp
addr16
add
mov
cmps
pop
jmp
sahf
cs
movups
dec
aam
icebp
mov
sub
lahf
xchg
jbe
popa
(bad)
jg
fldenvw
sbb
lahf
inc
xchg
aad
pop
cmp
push
jno
jp
mov
hlt
dec
das
push
mov
mov
fsub
jp
pop
fst
repz
stos
mov
cmp
sbb
lahf
adc
sbb
outs
mov
fs
test
in
mov
stc
mov
addr16
mov
repz
cmps
xchg
idiv
xchg
pop
fwait
mov
xor
inc
aas
cli
jae
test
nop
xchg
add
xchg
gs
xchg
push
ret
sub
fwait
mov
(bad)
aam
jne
gs
shr
std
popa
sbb
jae
fldenv
fs
pop
mov
xor
xchg
inc
stos
ins
cmps
sbb
push
cld
pop
adc
loop
inc
pop
xor
pop
push
outs
jbe
leave
jle
or
mov
retf
mov
ins
out
arpl
add
push
pop
mov
fadd
dec
leave
xchg
and
cwde
dec
jge
std
jae
retf
cld
out
fnstcw
ins
mov
or
stos
mov
hlt
mov
aas
push
sahf
iret
enter
add
xchg
(bad)
int3
out
dec
mov
and
scas
daa
dec
fidiv
rcr
push
pop
imul
cmp
sbb
mov
fs
xchg
shl
add
ds
ret
or
sar
mov
imul
xchg
lods
lods
fadd
ins
push
add
or
cmps
mov
mov
stos
add
std
fcmove
ret
retf
push
xchg
cmps
int
or
aas
sub
dec
rol
test
mov
push
rol
sbb
mov
mov
adc
jp
jp
stos
leavew
sbb
cmp
repnz
clc
ftst
lods
or
cwde
push
ficomp
adc
int
movs
push
push
(bad)
iret
clc
mov
loop
add
mov
sbb
jg
mov
fidivr
mov
das
std
push
inc
xor
jno
in
daa
(bad)
cmp
xor
cdq
nop
or
shl
jg
xor
test
inc
fisub
rcl
icebp
(bad)
push
jl
(bad)
push
cld
jg
jb
push
jo
xor
js
cmp
pop
movs
popa
ret
adc
stc
and
mov
inc
or
ret
pop
cmp
lahf
pop
movs
xor
jmp
cmp
stos
inc
and
dec
shr
add
push
push
mov
jg
cld
jbe
inc
addr16
pushf
adc
cmps
in
cwde
xchg
icebp
cdq
add
data16
dec
daa
mov
dec
xchg
xor
mov
mov
shl
rcr
movs
in
mov
int3
push
mov
fld
pop
gs
fstp
test
or
scas
and
bound
int3
adc
jmp
rcl
sub
jb
(bad)
push
ret
add
add
stc
sti
scas
enter
std
or
(bad)
xchg
inc
icebp
sub
inc
or
jno
adc
push
or
adc
(bad)
fistp
cld
mov
fidivr
inc
sub
dec
loope
cmp
je
data16
mov
test
test
sbb
jmp
xor
mov
xor
or
(bad)
ja
(bad)
test
adc
jmp
je
pop
out
cmc
cmp
mov
push
or
das
ins
jmp
mov
aad
pop
pop
fistp
fwait
xchg
inc
push
outs
or
and
pop
int3
cwde
cli
stos
outs
(bad)
jle
xchg
cmp
inc
daa
mov
jg
ja
sti
mov
popa
fs
ins
les
xchg
int
gs
sbb
addr16
mov
fisttp
jbe
sub
mov
mov
(bad)
loopne
sbb
sbb
stos
pop
mov
sbb
mov
imul
mov
into
jge
jle
hlt
jo
movs
jmp
test
loopne
adc
push
jbe
pushf
leave
mov
and
test
pop
pusha
cmps
mov
push
or
out
retf
xchg
inc
ins
or
inc
mov
jne
cmp
not
jg
sub
inc
ret
dec
bound
jmp
ds
mov
add
dec
adc
sub
jb
repnz
popf
sbb
push
iret
mov
fwait
cmp
aad
ret
mov
js
repnz
or
dec
fs
jl
hlt
cmps
pop
mov
push
call
pop
xchg
xor
cmp
and
sub
test
add
mov
test
mov
movs
jbe
jmp
es
push
aad
movs
xor
ret
cld
or
xor
cld
pop
or
gs
pop
push
sbb
xor
inc
ret
push
sbb
add
xchg
xchg
lods
bnd
out
imul
les
shl
(bad)
icebp
jmp
inc
jg
fwait
rol
pop
or
inc
xchg
not
xchg
aaa
jle
imul
ficom
jg
in
cmps
mov
test
fild
mov
mov
loop
mov
mov
cmp
jo
gs
lahf
adc
dec
push
inc
scas
lods
mov
jae
cwde
and
pop
frndint
sti
js
ror
loopne
sbb
ret
stos
hlt
dec
retf
jecxz
call
out
pop
add
loopne
test
dec
mov
pop
pop
loope
xor
push
imul
retf
adc
js
xchg
sub
pop
pop
jns
es
sbb
cmp
add
ds
push
enter
push
out
(bad)
loope
je
push
test
imul
stc
aam
loopne
pusha
les
adc
pushw
push
mov
fadd
jmp
nop
in
pop
mov
and
pop
cmp
cwde
pop
mov
sbb
fwait
inc
add
inc
test
movs
dec
pusha
aad
mov
int3
and
mov
or
inc
xchg
mov
cmp
mov
and
aam
mov
js
add
dec
popf
cld
sbb
push
inc
xor
jle
lahf
fcmovbe
scas
ds
test
ins
ret
lods
ins
sbb
retf
xchg
mov
lea
cmpps
push
xchg
mov
arpl
and
mov
mov
mov
das
aaa
out
icebp
mov
mov
stc
push
xor
in
sti
jg
mov
xor
adc
adc
mov
mov
shl
and
(bad)
in
pop
fisub
inc
not
mov
daa
lods
imul
cmp
push
jmp
jb
pop
(bad)
movs
dec
mov
(bad)
rol
mov
movs
lds
mov
inc
aaa
sbb
xor
push
add
push
cmc
sar
jp
mov
retf
jg
pusha
mov
jb
and
pop
jb
inc
call
shl
(bad)
shr
lea
inc
jl
adc
fwait
pop
xor
xor
and
xchg
and
dec
loope
call
fistp
xor
lds
cmp
out
fnstsw
sub
nop
sub
sub
xchg
jnp
mov
mov
dec
mov
aaa
inc
push
pop
cdq
mov
lods
and
dec
sbb
(bad)
jmp
mov
divps
ins
push
xchg
retf
scas
fist
push
cdq
das
dec
jnp
(bad)
pop
jns
and
sar
(bad)
and
jmp
and
shl
scas
push
push
xchg
ret
sbb
addr16
(bad)
jg
jae
mov
std
add
pop
dec
out
push
pop
(bad)
xor
into
add
popf
pop
inc
stos
mov
retf
pop
int3
push
or
dec
add
addr16
mov
setp
mov
leave
pop
ret
test
add
arpl
push
loope
sub
aad
dec
xor
test
sti
outs
adc
ins
stos
xor
add
nop
jne
in
mov
nop
xchg
mov
pop
xchg
pop
jae
xor
int
cwde
and
out
jns
mov
add
fisub
mov
or
sub
(bad)
rcr
pop
pop
(bad)
in
push
mov
icebp
sar
sbb
adc
fs
out
push
mov
loop
or
sub
add
scas
hlt
ja
iret
cmps
dec
dec
sbb
popa
inc
jbe
mov
inc
adc
mov
sub
adc
sub
not
arpl
div
xchg
jmp
dec
push
sbb
sbb
dec
(bad)
xchg
mov
fcmovne
pop
jp
pop
lea
in
push
dec
or
pop
cwde
xchg
outs
retf
in
test
das
push
mov
jno
js
jmp
loope
pop
cmc
dec
push
cld
out
add
sub
mov
aam
(bad)
xor
inc
lds
iret
sbb
fpatan
inc
fdivr
int
and
jno
js
sti
inc
shufps
retf
cmp
addr16
inc
sub
in
pop
arpl
adc
and
mov
mov
sti
sub
scas
push
mov
jne
jne
fsub
int3
mov
adc
cmp
in
std
cmps
pop
mov
mov
sbb
ror
mov
mov
into
js
mov
cmp
fs
xor
mov
and
mov
stos
cmp
lea
sbb
std
pop
mov
mov
lock
xchg
sub
(bad)
imul
dec
inc
out
and
add
popf
sbb
or
lods
sub
loop
pop
cmp
or
in
fild
jae
dec
cmc
add
push
movs
add
xchg
pop
sbb
fldenv
mov
pop
pushf
lock
shl
(bad)
mov
mov
add
enter
dec
jbe
dec
(bad)
aaa
ficom
mov
push
js
stc
add
das
adc
xor
inc
test
neg
push
addr16
xchg
(bad)
bound
jmp
jnp
dec
aaa
popa
jb
shr
cmc
xchg
xlat
clc
fidivr
sub
pop
sbb
pusha
xor
xchg
fcmove
jp
mov
mov
daa
aad
in
jno
inc
pop
xor
xor
cdq
xchg
repnz
dec
mov
das
mov
lods
(bad)
lods
push
xor
(bad)
lock
dec
inc
pop
movs
jno
jae
xor
jmp
jg
inc
cmp
imul
cmc
stc
and
fs
dec
retf
jo
pop
loopne
jae
jmp
adc
mov
mov
inc
jno
mov
jae
pop
dec
outs
inc
shl
mov
pop
retf
das
out
sub
cmp
call
cs
xchg
aaa
or
cmc
push
pop
xchg
xchg
xor
sti
pop
jle
pop
xchg
jnp
mov
and
push
out
and
in
inc
xchg
mov
stc
dec
mov
aad
xor
repz
daa
jb
push
add
loopne
jmp
outs
push
cmp
jp
fcomp
jmp
mov
cmp
cmp
les
adc
popa
stc
mov
sbb
push
cmp
add
sbb
fiadd
jecxz
retf
jne
rcl
or
fisubr
bound
mov
or
sbb
jecxz
xchg
pop
cmp
ins
sub
or
repnz
jp
imul
xchg
xor
or
push
ret
(bad)
cmps
adc
cmps
dec
cs
xchg
cmps
and
mov
bound
mov
test
cmp
and
repz
ret
in
aam
shl
out
or
cli
es
and
inc
fs
inc
or
out
and
pop
jnp
adc
(bad)
dec
xor
cli
ss
lock
mov
(bad)
jmp
out
pop
fnstcw
inc
ins
lea
cwde
neg
rcr
adc
retf
lock
cmc
rcr
sub
(bad)
add
adc
icebp
dec
add
rcr
call
cdq
xor
mov
mul
jge
mov
ins
cmps
and
sub
mov
in
mov
call
push
pop
cmp
xchg
cmp
cli
pop
cmp
addps
dec
mov
popf
xor
leave
shl
out
xchg
out
stos
mov
jecxz
(bad)
popf
push
lods
push
ins
pop
or
xor
inc
mov
sub
pop
test
rcl
(bad)
adc
jecxz
inc
retf
addr16
pop
pop
jns
cs
pop
clc
xor
and
or
mov
test
jecxz
outs
mov
or
imul
mov
mov
shr
imul
add
sub
jo
and
retf
fwait
mov
or
fidiv
push
(bad)
aad
jnp
leave
and
dec
fild
aad
imul
les
ja
daa
cmp
mov
jecxz
retf
ret
ror
pop
rol
mov
mov
popa
retf
arpl
enter
mov
jge
or
or
pop
shr
stos
xchg
push
jmp
push
push
xchg
cmp
mov
push
inc
pushf
fidivr
aad
adc
jl
jae
loope
int
jmp
pop
fst
(bad)
mov
shl
xor
pop
lock
xor
fwait
aaa
test
test
pop
push
into
ret
ds
and
add
test
push
int
inc
sbb
xor
pushf
mov
cmps
push
mov
pop
dec
retf
or
in
lods
cmp
(bad)
mov
xor
(bad)
imul
xchg
add
xor
loop
add
loopne
arpl
sub
xchg
lods
ret
mov
adc
mov
mov
mov
adc
mov
fild
adc
lods
outs
std
movs
cdq
adc
or
fwait
repz
push
sub
es
sahf
std
sub
movs
adc
shl
out
mov
stos
dec
sub
inc
xlat
or
test
jg
xor
xchg
jle
inc
or
push
loope
int
or
xor
mov
movs
in
fidivr
mov
xchg
sub
jecxz
mov
sub
pop
mov
movs
imul
cld
jg
sub
mov
bound
jns
mov
mov
shl
jle
int
and
mov
cs
repz
and
fist
(bad)
sbb
inc
sbb
ss
sti
dec
and
in
rcr
out
fsub
int
dec
sbb
and
fmul
mov
push
add
(bad)
(bad)
or
jns
mov
rcl
dec
push
inc
pop
or
icebp
xor
xchg
(bad)
sbb
dec
dec
popf
jne
mov
add
pop
hlt
out
dec
push
cmp
mov
fidivr
outs
mov
pop
cmp
xchg
(bad)
(bad)
in
sub
enter
push
popa
pop
jge
aaa
push
aaa
mov
dec
call
jge
retf
nop
(bad)
cli
ret
mov
cmp
jo
(bad)
fisubr
mov
add
adc
push
addr16
push
pminsw
dec
cmp
call
rol
mov
xor
mov
push
inc
fiadd
pushf
jns
and
add
mov
add
push
push
add
sbb
es
ds
sbb
mov
rcr
in
adc
mov
fistp
mov
cmc
stc
repz
mov
loop
ins
daa
and
jno
movs
sub
int3
stos
and
mov
mov
mov
icebp
dec
fwait
mov
ror
idiv
fisubr
pop
mov
fist
clc
movs
push
jb
in
cmp
or
test
lods
dec
ret
and
dec
jg
loop
or
and
div
popf
pushf
stos
mov
jmp
mov
xchg
in
dec
mov
sar
mov
(bad)
xor
fdivr
nop
nop
mov
scas
nop
gs
shl
sti
enter
or
dec
dec
cmp
mov
cmp
jb
in
cmp
jge
sub
loop
out
loope
loope
and
xchg
inc
shr
je
xlat
jns
dec
xor
pop
and
mov
jecxz
mov
pop
inc
imul
test
pop
pusha
jne
pop
imul
mov
mov
aaa
jns
mov
in
mov
jne
dec
or
call
addr16
retf
jne
adc
dec
or
sbb
xor
out
pop
out
adc
xor
jns
inc
pusha
shl
xor
and
out
xor
mov
xlat
fidiv
or
in
add
xchg
test
mov
out
cmp
and
lahf
mov
mov
sbb
adc
leave
jmp
and
movhps
jae
mov
cmps
xchg
sub
mov
push
in
ins
dec
(bad)
cmps
fs
mov
pop
icebp
and
push
ins
arpl
mov
fsqrt
pop
push
push
in
pusha
(bad)
std
pop
repz
in
push
cs
dec
into
xor
jae
test
mov
cmps
jmp
in
push
inc
std
clc
inc
sub
push
inc
xchg
xor
mov
fmul
adc
add
jb
lods
cdq
inc
retf
hlt
popa
cmp
ret
mov
xchg
(bad)
retf
sbb
mov
bound
imul
mov
lods
mov
mov
pop
sbb
pop
cli
mov
lock
xchg
out
addr16
adc
inc
mov
rol
idiv
scas
jmp
jae
or
call
scas
daa
pop
and
xchg
sbb
xchg
pop
inc
call
mov
inc
jl
leave
pusha
push
jno
aas
inc
int3
stc
inc
or
and
pop
push
fbstp
or
jmp
ret
add
cli
mul
test
mov
cdq
xor
sub
add
push
mov
fcomi
inc
or
sub
test
xchg
jae
fisubr
jecxz
scas
mov
leave
push
pop
push
dec
xchg
loope
out
data16
repz
or
test
push
xchg
outs
nop
jno
in
out
test
lea
aaa
adc
lahf
cmc
dec
stc
ss
xor
mov
pop
dec
ficomp
cmps
pushf
xlat
cld
mov
ds
cmp
pop
and
mov
test
sub
mov
cmp
push
mov
mov
mov
daa
jae
xchg
jbe
aam
out
jne
stc
hlt
ins
imul
ffree
in
push
mov
mov
ins
test
pusha
in
cld
ret
or
lahf
push
ins
or
leave
lock
inc
mov
dec
out
pop
lds
js
dec
sub
test
jmp
pop
es
test
xchg
fstp
cdq
std
into
mov
ss
adc
jecxz
adc
(bad)
push
shl
clc
push
cdq
or
mov
out
aam
pop
cmps
jmp
mov
mov
inc
mov
add
out
popf
cmp
sub
movs
mov
xchg
dec
jmp
shl
pop
or
mov
repnz
pop
mov
cwde
or
xchg
stc
mov
jecxz
icebp
mov
mov
pop
jo
xor
sbb
or
xor
mov
js
dec
mov
pop
aad
pop
imul
add
and
pushf
inc
mov
cwde
cld
fnstenv
mov
arpl
out
addr16
aad
cmp
(bad)
cmc
lods
mov
xchg
mov
(bad)
test
cli
jne
adc
fs
xchg
or
adc
xor
add
cmps
mov
ds
adc
and
adc
and
jecxz
push
mov
mov
int3
xchg
pop
inc
jmp
adc
mov
dec
icebp
cwde
mov
shl
mov
jbe
adc
movs
ret
cmp
xchg
cdq
dec
and
in
dec
loop
dec
imul
jnp
imul
lock
jns
adc
test
xor
jnp
sub
lods
jns
adc
cwde
mov
xchg
inc
ins
gs
pop
into
fsqrt
and
repnz
add
aas
mov
test
pop
adc
(bad)
arpl
sub
jno
inc
sub
ds
test
mov
pop
aad
ss
cmc
add
cmps
(bad)
xlat
retf
fdiv
adc
cmp
cmp
test
xor
ja
rcr
fcom
add
sbb
xchg
sbb
xor
and
loop
lods
into
test
mov
jb
sbb
sbb
cmp
repz
call
jae
adc
mov
sub
push
sub
mov
scas
mov
test
sub
rcr
push
or
test
add
xchg
adc
pop
test
nop
mov
xchg
loop
popf
cmps
dec
jbe
dec
pop
sti
aad
pop
pop
and
mov
add
std
mov
arpl
push
push
pop
fdivr
stc
sbb
xor
rcr
imul
cmp
sbb
jo
es
in
fdiv
rcl
xor
cmp
xchg
sbb
mov
retf
ds
(bad)
inc
push
xchg
and
das
mov
or
cdq
adc
cmp
push
(bad)
push
movs
dec
dec
aaa
jl
fs
cmp
das
pop
cmp
pop
or
push
lds
mov
enter
push
sub
out
pop
into
ror
jo
cli
mov
(bad)
popf
push
rol
cmp
not
inc
push
int
mov
push
hlt
stos
pushf
repz
push
and
mov
jnp
cmp
shl
or
pop
repnz
mov
imul
aas
pushf
cdq
sub
(bad)
sub
jns
xchg
ss
add
mov
sub
mov
sub
cli
sub
jbe
inc
das
adc
xchg
jne
push
hlt
enter
and
cmc
test
in
daa
mov
push
adc
push
test
push
les
(bad)
movs
add
or
aam
xlat
clc
gs
imul
xchg
fstp
lock
sub
pushf
mov
(bad)
inc
and
mov
sbb
xchg
add
cli
loop
and
jecxz
sahf
ret
mov
mov
cmp
cmps
mov
dec
test
jl
jmp
dec
loope
adc
or
pop
aam
mov
cmp
push
mov
pop
mov
jp
inc
inc
addr16
add
and
mov
and
hlt
shl
jle
cmp
inc
jl
adc
mov
xor
mov
jmp
or
je
test
push
dec
out
imul
sbb
inc
adc
adc
rcl
repz
das
in
push
mov
cmps
mov
push
pop
xlat
pop
(bad)
dec
fst
adc
int
push
jl
lock
mov
push
stc
push
aad
aad
mov
pop
push
xchg
or
lds
mov
repz
inc
scas
movntq
inc
mov
mov
mov
rol
scas
mov
mov
(bad)
in
pusha
mov
mov
or
push
enter
aad
jmp
cmp
pop
sub
enter
test
jmp
retf
xchg
add
imul
sbb
or
cmps
inc
popa
or
jecxz
sbb
lahf
(bad)
aam
adc
sbb
das
nop
xchg
mov
xor
fcmovb
test
cmp
lock
in
movs
cmp
add
jge
into
(bad)
dec
jp
in
sub
cmp
popa
iret
cld
lds
jle
xchg
cli
and
loop
jecxz
inc
pop
out
and
inc
jno
push
or
pop
or
xchg
test
jae
in
cmp
adc
mov
fld
dec
and
add
sbb
mov
or
ds
push
push
mov
(bad)
pop
pop
dec
int3
std
pop
sahf
std
ins
push
fcmovb
stc
jge
push
cmp
dec
jmp
popa
mov
pop
mov
and
mov
xor
sub
push
cmovle
dec
mov
adc
push
xor
int3
and
in
jae
cmp
loop
mov
mov
push
inc
cmp
push
arpl
ins
outs
sub
xchg
jb
jl
and
stc
inc
add
xchg
int
scas
pop
movs
pop
inc
or
push
pop
(bad)
push
pop
mov
sub
cmps
ins
hlt
sahf
or
loope
mov
mov
add
ficomp
in
fstp
cmps
mov
pop
call
jle
das
das
out
ja
sbb
ret
test
cmp
fwait
outs
(bad)
mov
imul
cmp
pop
rcl
rol
dec
inc
mov
jle
sbb
jne
adc
cld
sub
push
mov
mov
retf
int3
popf
cmp
daa
sbb
mov
mov
xor
ret
sbb
outs
ror
xchg
mov
mov
(bad)
mov
repz
movs
call
xlat
retf
(bad)
mov
enter
xchg
imul
rcr
ret
fdivr
scas
ror
xchg
call
push
es
ins
inc
repnz
in
mov
jb
cmp
cwde
in
test
lea
xchg
int3
dec
aaa
int3
retf
or
cmps
fist
jno
push
jne
outs
mov
sbb
sub
dec
(bad)
(bad)
cmp
pop
fsubr
xchg
call
xchg
mov
adc
jp
sbb
shl
movs
mov
and
addr16
sahf
push
popf
cdq
mov
mov
xchg
sub
mov
pop
test
mov
push
lahf
dec
bound
dec
mov
les
jns
sbb
cld
cmp
retf
fstp
shr
push
callw
out
cdq
mov
cmp
scas
scas
mov
mov
mov
stos
ret
and
push
aad
out
mov
xor
mov
push
std
jb
(bad)
sub
mov
push
pop
inc
in
mov
jge
aas
(bad)
adc
retf
lea
dec
mov
scas
pop
daa
popa
fisub
xor
mov
add
ins
adc
idiv
repz
sub
mov
popa
loop
inc
adc
mov
xor
sar
pop
lock
ds
push
pop
mov
popa
movs
iret
dec
fwait
jp
jns
in
cmp
push
leave
cmps
push
icebp
ds
fcmovb
sub
mov
sbb
push
(bad)
or
or
inc
mov
popa
cmps
sbb
in
or
adc
ins
out
mov
jmp
inc
icebp
lds
xor
pop
rcr
mov
ret
xchg
nop
inc
data16
std
push
mov
stos
push
in
mov
fwait
mov
push
inc
scas
inc
xchg
pop
clc
adc
int3
xor
push
mov
cmps
or
retf
pusha
mov
in
inc
imul
lds
push
sahf
hlt
inc
sahf
(bad)
nop
sbb
out
inc
retf
(bad)
jle
lock
adc
in
lea
jp
push
xchg
outs
iret
mov
sub
or
push
shr
dec
push
sbb
push
and
retf
(bad)
mov
and
lods
xchg
ja
(bad)
or
fcomp
sub
rcr
xchg
mov
mov
call
cmp
push
mov
shr
dec
mov
into
(bad)
xlat
mov
je
push
mov
jbe
ds
and
and
xchg
jmp
std
dec
jnp
and
arpl
jns
movs
cmp
(bad)
pop
int
imul
lds
test
inc
xor
cld
shl
nop
jl
mov
(bad)
hlt
dec
test
xor
ins
pop
cmp
jg
outs
mov
out
loopne
shl
xor
vmovups
pop
add
push
sbb
std
inc
ret
shl
or
push
jae
push
jae
mov
mov
mov
dec
inc
pop
mov
pop
push
out
out
adc
push
inc
loopne
jle
cmp
xor
sub
aaa
loop
ror
fstp
dec
push
mov
out
dec
and
in
jno
and
sbb
dec
sub
sbb
and
sar
cdq
cdq
ret
sti
mov
test
sbb
inc
adc
ds
mov
daa
dec
icebp
stos
add
mov
retf
retf
inc
repz
xchg
sbb
add
repnz
pop
rcl
mov
add
ins
leave
fmul
hlt
adc
iret
push
xchg
or
mov
mov
mov
dec
movs
sbb
mov
repnz
cmp
xor
arpl
push
in
sbb
push
out
enter
inc
mov
mov
xchg
dec
stos
sbb
xor
imul
pusha
dec
jo
imul
test
mov
jg
xor
out
cld
sbb
xchg
call
sti
ja
(bad)
(bad)
and
jbe
add
inc
push
pop
sbb
push
push
pop
movs
daa
adc
dec
xchg
ins
and
xor
adc
or
fistp
mov
in
stc
pop
call
mov
push
and
popa
and
in
lods
mov
sar
mov
jge
inc
dec
sub
stc
push
inc
jb
mov
mov
leave
jne
hlt
jbe
enter
imul
(bad)
mov
daa
inc
in
jo
rcr
daa
or
inc
lea
and
dec
sub
ins
xchg
inc
(bad)
movs
xchg
mov
ret
iret
scas
cmps
push
xchg
(bad)
xchg
loop
bound
aam
pop
je
ins
(bad)
loope
mov
mov
jbe
in
push
adc
sub
rcl
ja
outs
dec
xor
mov
xchg
xchg
fcom
cmp
cmps
mov
jecxz
retf
mov
arpl
lahf
fs
(bad)
and
inc
scas
repnz
loopne
repnz
add
mov
cmp
push
(bad)
jmp
xchg
cmps
and
or
adc
mov
add
rcpps
clc
add
mov
fdivp
in
in
test
ror
pop
inc
ret
ins
aad
xor
jl
cmp
cmp
jno
fnstcw
(bad)
cmp
mov
xchg
movs
push
push
sbb
dec
or
popf
icebp
mov
sub
pop
push
dec
cmp
cmp
sbb
sub
fbld
cli
mov
xor
mov
nop
mov
inc
or
outs
or
cmp
lahf
cs
into
push
les
sub
mov
lds
arpl
jns
xchg
mov
nop
jge
push
add
and
sbb
lds
js
clc
jnp
call
inc
pusha
jg
psadbw
xor
sub
add
pop
xor
push
mov
in
stos
mov
jne
stc
add
sbb
fmul
in
jmp
ss
enter
dec
xor
shr
push
inc
mov
ins
jmp
loopne
sub
popa
or
dec
adc
fld
adc
inc
pop
or
and
les
test
xor
and
imul
hlt
cli
out
push
iret
mov
sbb
pop
(bad)
jge
cmps
sub
sahf
sub
bound
into
xchg
mov
dec
out
adc
inc
outs
lahf
pop
jge
cmp
(bad)
out
loope
lea
jp
in
and
inc
fcom
jno
jae
add
fnsave
sub
inc
loopne
cmp
fadd
fnstenv
inc
mov
dec
imul
mov
ins
cmp
(bad)
mov
sbb
jle
std
add
xchg
stos
push
sub
dec
inc
ret
xor
in
mov
push
mov
sub
cmc
jo
mov
iret
popf
pop
jmp
push
daa
cmp
mov
sar
movs
add
or
add
shr
mov
loopne
mov
jnp
cmc
ins
adc
push
sub
jmp
(bad)
push
push
js
mov
jecxz
call
jne
mov
xor
or
test
into
mov
sbb
mov
in
fbld
xchg
in
jecxz
(bad)
and
inc
iret
xchg
adc
imul
in
in
cli
mov
sub
push
ss
outs
sti
xchg
ret
jae
jbe
outs
and
ins
retf
aaa
xchg
(bad)
jl
in
je
jl
jns
daa
or
lock
mov
cli
aad
mov
push
fst
test
and
scas
popf
jg
mov
jne
push
int
jne
aam
loop
dec
dec
add
in
in
dec
push
rcr
dec
arpl
popa
cmp
cdq
int
and
push
mov
mov
or
xchg
js
div
fsub
push
out
mov
aas
pop
clc
int3
pop
dec
pop
jg
push
and
push
scas
xlat
test
sub
dec
(bad)
out
or
pusha
cwde
push
sahf
cmps
popa
clc
cmp
push
aad
in
xchg
sub
mov
sahf
xlat
jg
xchg
xor
sbb
dec
sbb
jbe
cmp
aad
jmp
adc
lods
fldcw
adc
mov
out
cmp
add
xchg
js
cwde
jb
fistp
repz
ror
push
add
ret
sub
cmp
ret
(bad)
loope
jg
mov
inc
adc
jbe
sbb
dec
les
es
int3
pop
mov
outs
iret
and
push
mov
ss
push
lods
add
call
mov
(bad)
adc
fisubr
rcr
daa
xlat
nop
and
pop
push
leave
adc
adc
inc
cmp
pop
jmp
imul
adc
stos
sahf
aad
mov
ss
cmps
jp
xchg
pop
ret
pop
mov
pop
dec
cmp
mov
mov
pop
mov
popa
pop
xor
adc
push
jne
sti
popa
push
sbb
mov
bound
das
mov
retf
inc
iret
dec
sbb
and
sbb
scas
dec
fwait
add
repnz
(bad)
mov
scas
aas
fwait
ds
pop
xlat
shr
imul
outs
fs
stc
inc
jne
pop
and
repz
jns
sbb
push
sub
lahf
mov
and
push
mov
or
loop
mov
mov
ret
lods
and
out
cmps
aad
sbb
cmp
mov
mov
into
mov
xor
xor
mov
cmps
out
add
leave
or
mov
push
cmps
push
adc
and
mul
call
xor
sub
inc
or
add
test
and
mov
addr16
push
dec
xchg
mov
cli
mov
cmp
fwait
loope
push
dec
push
mov
jb
adc
mov
fcmove
aad
push
in
push
and
push
xchg
dec
mov
ds
test
fcom
jbe
mov
or
lahf
cmovle
jnp
xchg
fidivr
aaa
mov
fdivr
fadd
ins
(bad)
jns
adc
out
mov
adc
test
icebp
inc
push
sti
pop
aaa
cld
adc
xor
mov
adc
mov
les
fcom
cmp
aas
dec
xchg
push
xor
sbb
mov
push
dec
xchg
cwde
xor
xlat
pop
or
cld
inc
or
nop
xchg
inc
ss
jae
dec
mov
icebp
sbb
in
stos
cld
push
cmp
mov
inc
mov
sti
fcom
sti
cwde
data16
mov
xor
mov
or
sar
pop
(bad)
cwde
mov
xor
mov
mov
dec
sbb
(bad)
ficomp
loope
xor
enter
mov
test
adc
lds
in
cmp
push
push
mov
pop
jnp
xor
mov
enter
retf
stos
mov
in
sub
bnd
les
or
pop
fdivr
jmp
xor
jle
test
data16
nop
shr
ja
(bad)
aam
loopne
pop
xor
mov
call
mov
mov
lods
jle
jg
xchg
dec
dec
sbb
or
jle
outs
sar
loopne
stc
add
sti
pop
xchg
aaa
hlt
push
fsubr
retf
jge
mov
rol
dec
rol
pop
aad
xchg
jecxz
jno
mov
jecxz
or
push
pop
sbb
out
dec
jmp
fmul
hlt
add
inc
cwde
add
xchg
sbb
sub
xchg
(bad)
sub
scas
lods
lahf
ret
repz
and
jo
pop
mov
push
retf
xor
scas
mov
and
xlat
cmp
addr16
adc
dec
ret
fisttp
cmp
cmp
mov
push
aam
pop
movs
cdq
ficom
inc
scas
mov
je
and
popa
(bad)
jnp
add
push
lahf
mov
lahf
xchg
popa
test
xchg
scas
mov
cmp
sub
mov
mov
xchg
aam
aas
and
jle
inc
movs
sbb
hlt
xchg
push
xor
sub
fstp
add
mov
pusha
mov
and
cmp
js
sbb
ret
push
test
add
lock
cmp
pinsrw
push
jg
repnz
jae
mov
dec
mov
sahf
cmps
mov
jbe
pop
adc
lds
or
int3
loopne
mov
lock
test
xchg
fs
inc
mov
inc
fdivr
fucompp
push
icebp
push
or
inc
rcr
dec
sbb
fcomip
add
ins
pop
mov
repz
rcr
and
retf
jo
push
mov
call
arpl
mov
xor
lock
cld
xor
popa
ret
or
lods
pop
cmc
jle
fisubr
pusha
inc
loop
movs
ins
adc
es
and
xor
or
sahf
imul
xor
jnp
mov
cmp
iret
xchg
imul
addr16
or
das
inc
cmp
xchg
iret
mov
and
xor
ror
ins
xor
fwait
lds
inc
rcr
test
mov
retf
mov
cmp
mov
inc
int
and
push
movs
scas
and
fiadd
enter
jno
xchg
sahf
jno
jae
ficomp
jmp
hlt
retf
jl
out
xor
fimul
imul
popf
sbb
xor
test
and
add
cmp
shr
mov
dec
lock
xor
inc
mov
jle
push
nop
inc
shl
outs
sub
call
adc
out
ins
xor
or
jne
icebp
push
jl
leave
icebp
daa
push
pop
lahf
xlat
aas
bound
pop
mov
adc
xchg
cli
mov
arpl
mov
xor
retf
jnp
fdivrp
mov
cmps
(bad)
xchg
je
cmc
and
rcr
into
shl
test
xor
call
pushf
popf
adc
ja
rcr
test
mov
mov
dec
and
iret
shl
daa
ds
jno
(bad)
cmp
lods
mov
mov
adc
sbb
inc
(bad)
xchg
or
add
cdq
xchg
jae
pop
xor
mov
jg
push
rol
push
and
dec
ret
cs
sbb
in
or
cmp
mov
ins
xchg
pop
pop
lock
sbb
jg
retf
(bad)
sahf
cmp
dec
daa
loopne
mov
dec
xlat
add
mov
push
(bad)
cmp
(bad)
loopne
lahf
pop
push
inc
out
xor
cwde
popa
sub
mov
and
idiv
jo
inc
jmp
call
jo
rol
test
push
pop
push
retf
mov
pop
or
leave
pushf
repnz
stc
push
mov
or
push
loope
jb
dec
pop
les
sti
cmp
adc
in
mov
cwde
inc
sub
add
push
nop
inc
inc
popa
mov
fnstenv
cmps
sub
sbb
mov
cmp
fdivr
push
loopne
mov
bound
or
ds
in
xchg
aad
cwde
call
inc
lahf
int3
in
scas
es
in
mov
dec
test
mov
rol
pop
or
or
mov
xchg
out
int3
call
mov
fisub
loopne
push
cmp
xor
test
gs
add
inc
(bad)
ins
inc
pop
repz
and
jbe
(bad)
xchg
or
jmp
inc
add
push
mov
(bad)
jbe
clc
sub
enter
jmp
xor
jbe
and
test
les
hlt
shr
cwde
pop
add
push
frstor
mov
movs
mov
inc
sub
mov
sub
outs
sub
je
dec
adc
cmc
aas
rcl
and
call
sub
(bad)
fmul
test
or
jb
sub
call
push
sub
sbb
jo
mov
in
push
dec
pop
lahf
or
sub
jb
rcr
cld
call
lds
ret
push
sbb
push
mov
test
adc
inc
dec
hlt
ret
or
mov
dec
mov
icebp
fs
sub
sbb
sbb
clc
xor
outs
sub
xor
test
inc
fxam
icebp
sbb
jno
or
ds
repz
fistp
loop
test
retf
out
inc
mov
push
ins
push
addr16
fs
push
mov
pop
call
push
scas
jmp
mov
mov
mov
pop
cwde
sbb
pop
clc
xor
add
push
pop
jmp
mov
sub
xchg
push
fimul
mov
ror
dec
comiss
mov
test
hlt
pop
fisttp
(bad)
mov
(bad)
sti
pop
jns
inc
cmps
(bad)
jmp
cmp
add
jno
cmps
call
dec
in
mov
or
int
in
push
inc
stos
fidivr
cmp
mov
fsub
das
int
(bad)
ss
jmp
jecxz
pop
add
mov
pop
add
mov
fbstp
mov
mov
xchg
mov
push
(bad)
xor
jp
jmp
jo
out
push
adc
dec
push
aad
(bad)
inc
fistp
and
ret
rcl
loopne
mov
adc
xor
popf
popa
fsubr
aad
mov
test
push
popa
daa
mov
pop
cmp
jg
pop
sbb
and
xchg
pop
push
jge
sub
push
rep
jae
and
lods
adc
jb
mov
test
cmp
pusha
pop
push
or
iret
inc
int
out
clc
aam
mov
xor
cmp
test
adc
cs
cld
pop
pop
xchg
stos
add
(bad)
or
dec
push
stc
movs
or
jmp
dec
iret
xchg
loope
pop
pop
fnstsw
out
test
inc
or
addr16
sub
mov
jb
mov
cmps
call
xor
mov
xor
mov
add
inc
and
out
lea
xor
push
xlat
out
pop
mov
or
mov
imul
push
pop
loop
sbb
shl
sub
sub
push
imul
mov
add
scas
je
in
lahf
pop
xor
xor
adc
add
and
sti
into
cmps
pop
cmp
icebp
enter
xchg
pop
rcl
add
js
xlat
push
retf
mov
mov
add
jecxz
push
inc
shl
call
fidiv
retf
fld
loop
jmp
into
(bad)
repz
push
or
out
adc
cmps
pop
movs
or
push
(bad)
and
adc
fwait
sbb
or
mov
scas
cmp
jg
mov
sub
jg
sbb
mov
mov
dec
mov
adc
push
jo
fwait
xchg
xchg
fwait
cmp
loope
or
ret
outs
ds
inc
loopne
push
jge
inc
shr
push
push
mov
mov
test
add
cwde
sbb
(bad)
xor
add
xor
pop
mov
mov
lds
sub
(bad)
jns
aas
js
or
mov
ficom
dec
lods
inc
shl
jge
fcom
xchg
fst
clc
bswap
(bad)
div
jb
xor
nop
stc
adc
sbb
push
add
hlt
jae
popf
xchg
icebp
sbb
mov
inc
sbb
je
jle
inc
lds
adc
daa
rcl
into
pop
mov
dec
ins
test
sbb
iret
sub
aas
pop
sahf
push
xlat
pop
push
xchg
dec
lea
xor
nop
mov
push
lods
cmps
inc
loop
jae
enter
adc
xor
sbb
retf
(bad)
aaa
jle
mov
sbb
pop
push
(bad)
jae
sti
xchg
jbe
push
es
les
test
ja
jp
jl
push
inc
mov
adc
mov
ret
adc
fst
nop
mov
rol
push
out
(bad)
sbb
jb
add
adc
scas
scas
outs
add
(bad)
cli
inc
pop
js
(bad)
cmc
cmp
cmp
hlt
(bad)
inc
ror
(bad)
aad
icebp
jmp
or
push
or
shl
nop
mov
jmp
and
aas
cmp
loopne
mov
inc
retf
dec
fcomi
shl
(bad)
sbb
jmp
adc
push
aaa
pop
sub
xor
jl
adc
mov
pop
fdiv
out
out
gs
or
push
gs
addr16
adc
inc
mov
scas
fcmovb
sub
jb
adc
xchg
stc
imul
loope
stos
or
call
xchg
mov
xlat
fdivr
shl
xor
mov
xor
or
jge
adc
dec
data16
jb
dec
jle
aad
in
sbb
cli
popf
mov
inc
ss
mov
fcomip
into
xchg
jp
inc
xchg
add
xor
jbe
das
cli
int
es
shl
bound
dec
cmp
es
mov
fcmove
aam
adc
inc
inc
out
adc
(bad)
push
xchg
test
pop
push
adc
icebp
in
or
add
add
jg
push
fld
inc
mul
pusha
push
xor
std
mov
daa
ins
mov
push
pop
add
popf
mov
movs
lds
jg
xchg
cld
(bad)
clc
jge
xor
xor
push
mov
pushf
mul
mov
ror
xchg
fwait
aam
shl
fistp
pop
fcmovb
lock
mov
sub
and
cld
ret
mov
stos
jmp
and
mov
rcl
xchg
mov
nop
inc
push
lods
pop
das
(bad)
cld
xor
push
cdq
loop
push
movs
cli
mov
mov
push
and
jp
outs
es
and
mov
shl
ja
rol
adc
push
adc
push
outs
pop
ss
lock
aaa
fbld
test
inc
movs
mov
or
cmps
cmps
xor
pop
retf
mov
add
mov
les
sbb
or
push
cli
pop
dec
jl
pushf
js
std
outs
and
daa
popf
inc
xor
pop
sbb
lahf
xchg
int3
push
xchg
push
sub
sub
sbb
outs
mov
mov
dec
in
clc
(bad)
xor
pop
adc
mov
sbb
hlt
(bad)
fistp
xor
cmp
or
shl
sub
jmp
jmp
sbb
enter
sbb
pop
jp
and
jno
push
mov
ds
mov
dec
push
add
cld
xadd
push
xchg
ds
fcmovbe
mov
xchg
sub
sahf
pop
aas
test
retf
mov
lds
lds
aas
popf
(bad)
call
sub
push
mov
cmps
adc
arpl
mov
repnz
call
or
push
mov
dec
inc
(bad)
fdiv
jo
dec
adc
sub
pushf
cmps
hlt
adc
push
retf
xchg
xor
or
jnp
in
jmp
xchg
scas
jmp
jnp
int
mov
xor
mov
fdivr
clc
movs
sbb
outs
or
shl
inc
add
shl
push
mov
jns
cmps
dec
aad
xchg
cmc
hlt
push
stos
dec
repnz
loop
xlat
aas
cld
sbb
inc
mov
inc
mov
dec
xor
mov
push
mov
jno
aaa
sub
pop
jmp
fsub
shr
mov
jge
xor
adc
test
fimul
enter
or
mov
fmul
sysenter
and
bound
mov
push
dec
mov
jne
dec
adc
sbb
dec
stos
shl
test
cmp
pushf
stos
sub
and
pop
mov
pop
jb
lahf
retf
retf
nop
xchg
jle
dec
and
les
fidiv
add
cmp
ds
iret
sti
inc
outs
mov
jg
push
dec
mov
cmp
fcom
mov
jo
inc
add
mov
push
inc
cmps
ins
jmp
pop
mov
push
loop
dec
inc
mov
xchg
jae
leave
cmc
addr16
push
cmc
pushf
xchg
jno
fs
add
nop
nop
cwde
imul
xchg
ret
fwait
push
or
push
popf
and
fwait
retf
jmp
pop
lds
xchg
sbb
and
dec
sar
and
jb
mov
or
and
mov
aad
leave
sub
mov
iret
mov
and
mov
enter
pop
xchg
xor
jecxz
push
jecxz
add
sbb
jmp
adc
jle
pop
pop
adc
mov
cmps
mov
cwde
push
xchg
cs
jp
xor
mov
or
aas
jno
sub
loope
or
or
xor
xchg
iret
in
(bad)
cmp
jecxz
sub
fld
jno
sbb
imul
gs
pop
cmp
sub
dec
sbb
test
jmp
ret
test
dec
pop
push
pop
cwde
test
sub
xchg
addr16
nop
js
retf
adc
jae
cmp
icebp
pop
ret
enter
jmp
mov
xchg
push
jecxz
push
lahf
xchg
daa
or
xchg
dec
dec
retf
cmp
mov
dec
daa
jns
ja
sahf
cmps
inc
xchg
mov
mov
pop
xchg
xor
dec
sbb
outs
dec
xchg
fcomp
rcl
cmp
and
iret
dec
neg
fdivr
loopne
sti
sbb
mov
mov
lods
adc
push
lock
xor
mov
ins
mov
mov
test
popa
inc
xor
push
repnz
fisttp
adc
icebp
test
outs
cmp
adc
cmp
sub
dec
loop
push
push
dec
mov
sub
push
outs
sub
xor
pushf
test
fmul
adc
pop
paddusb
(bad)
xor
and
enter
adc
arpl
cmp
sub
push
jmp
mov
loop
push
pushf
arpl
pop
ror
add
imul
nop
push
xchg
fsubr
dec
mov
ret
inc
stos
jne
aas
inc
push
add
dec
repz
cmp
or
sub
loopne
xor
pop
jmp
imul
dec
fisttp
jo
jb
mov
inc
sub
out
je
imul
xor
xchg
and
and
ins
cmp
popf
ja
ins
mov
inc
ret
or
data16
stc
paddd
jg
aaa
jns
fs
sbb
iret
mov
sti
pusha
stos
(bad)
les
adc
cmp
in
data16
cli
push
mov
mov
and
inc
sub
fsub
add
xor
sub
dec
enter
stos
inc
mov
push
cli
test
xor
pushf
push
out
ins
test
and
sbb
pop
cli
pop
ins
mov
jl
shr
dec
int
mov
fst
add
mov
adc
jae
or
sub
icebp
nop
add
dec
out
in
popf
ins
call
test
sahf
aas
das
adc
int3
xor
fcmovu
jo
test
lock
popa
fist
or
icebp
jae
aas
sub
retf
jb
jne
push
in
inc
mov
imul
inc
xchg
inc
and
movs
in
test
add
gs
dec
cmp
std
mov
int
int
jl
dec
cdq
pop
add
mov
gs
fstp
push
push
mov
pop
pop
cmp
sbb
and
adc
mov
dec
rcl
(bad)
mov
loop
les
hlt
xchg
pop
pusha
inc
(bad)
mov
pop
pop
in
icebp
lds
push
movs
ret
pop
mov
mov
mov
mov
inc
imul
mov
test
cwde
(bad)
inc
movs
inc
adc
movs
mov
push
pop
sar
xor
pop
test
add
sahf
dec
dec
sti
stos
cs
cmp
shl
xor
add
dec
mov
(bad)
stos
repnz
(bad)
and
lea
push
fcmove
pop
(bad)
stc
and
shl
mov
jae
mov
jmp
mov
cmp
mov
xor
repz
inc
push
dec
fs
popa
or
mov
add
jl
shl
scas
(bad)
not
push
repz
das
pop
jle
jmp
push
adc
(bad)
mov
add
inc
jmp
mov
in
outs
mov
push
in
push
mov
fldl2t
sub
xor
fs
pop
sub
or
push
jnp
leave
test
mov
mov
add
xchg
jge
dec
mov
es
fst
stc
(bad)
jmp
mov
jp
inc
mov
and
loop
jmp
ret
lds
sbb
lods
rcl
or
jo
aaa
in
out
add
jecxz
sub
and
add
in
and
pop
dec
test
sub
xchg
mov
mov
fidivr
cmp
daa
mov
in
popa
pop
ds
mov
out
arpl
and
cmp
fs
mov
ret
ins
retf
inc
adc
or
popf
push
mov
xchg
pop
ffree
ins
fisub
mov
loopne
pop
pop
mov
(bad)
sbb
mov
dec
stos
adc
mov
adc
div
test
push
(bad)
(bad)
retf
loop
jmp
test
aaa
jmp
xchg
fidivr
adc
icebp
ja
push
cmps
push
ret
xlat
and
cmp
sub
jno
ret
fwait
scas
dec
jo
movs
mov
pusha
(bad)
ins
inc
add
jmp
push
cmp
enter
or
movs
dec
push
pop
mov
bound
mov
mov
adc
pop
mov
sub
xchg
int
stos
push
enter
(bad)
cmps
jbe
(bad)
leave
cmc
lds
nop
daa
xlat
rol
daa
push
shl
and
xchg
push
popf
pop
push
mov
ss
lock
pop
movs
xor
jle
mov
in
sub
or
(bad)
fsubr
popf
push
pop
add
cmp
or
sub
pop
push
push
daa
jne
jns
adc
call
jo
xchg
pop
inc
(bad)
ss
stc
push
pop
adc
mov
inc
shr
popf
cli
dec
mov
sar
aas
push
push
sahf
dec
inc
les
cmp
ins
shl
mov
dec
repz
pop
ret
push
hlt
(bad)
add
imul
rcr
mov
out
jae
xor
mov
fs
ficomp
loop
dec
retf
loope
shl
je
add
repz
pusha
lock
fs
xchg
out
xor
jge
cmps
scas
push
dec
dec
addr16
popf
imul
inc
aas
or
xchg
ds
sub
in
fist
enter
popf
add
fild
mov
cmps
sti
inc
cmp
ret
and
enter
pop
jo
into
(bad)
xor
shl
xor
and
mov
ss
fbld
add
dec
xchg
pushf
fs
xor
(bad)
leave
mov
adc
xchg
aad
xor
add
fdivr
xor
mov
sub
add
cmps
(bad)
out
je
push
icebp
(bad)
jae
arpl
cli
fst
and
or
push
jae
dec
jecxz
xchg
mov
push
or
or
outs
push
(bad)
pushf
mov
push
gs
jmp
push
push
aaa
sti
mov
(bad)
js
pop
mov
add
je
pop
aad
movs
fst
(bad)
retf
mul
push
dec
pop
js
xchg
in
fiadd
ret
sbb
push
out
ret
add
mov
pop
xchg
(bad)
imul
add
pushf
mov
icebp
xchg
rcl
dec
pusha
mov
or
ficom
sbb
cs
stos
pop
dec
sub
or
retf
lods
in
mov
gs
pop
xchg
mov
in
or
mov
adc
and
and
inc
je
cdq
cmp
aaa
and
pop
push
xchg
jno
adc
inc
sar
pop
in
xchg
sbb
pusha
or
jecxz
outs
les
adc
mov
fld
int
bound
and
retf
mov
mov
sbb
daa
pop
push
loopne
loopne
fist
mov
sub
sti
mov
(bad)
mov
dec
dec
mov
jl
ins
add
push
imul
jp
and
retf
dec
in
in
dec
dec
sbb
fst
dec
mov
sahf
out
add
leave
ss
bound
cmps
scas
cld
sbb
jle
out
and
jbe
lock
cli
mov
out
sbb
jne
out
mov
push
cld
popf
out
mov
sti
mov
xor
ins
stos
sub
mov
call
or
inc
fstp
aad
data16
jo
dec
stc
mov
pop
push
in
inc
fimul
out
shr
stc
mov
inc
(bad)
(bad)
jo
adc
(bad)
test
lahf
cmp
and
mov
cmp
into
lods
adc
mov
mov
inc
mov
call
scas
mov
repnz
call
repz
icebp
add
jno
ret
stos
aas
aas
push
imul
je
jp
stos
jnp
and
fdiv
cdq
rol
xor
xor
addr16
pop
dec
mov
pushf
test
loopne
cmc
or
mov
push
or
ja
mov
cmp
mov
mov
mov
adc
dec
dec
push
or
lock
jmp
pop
sti
pushf
inc
and
sbb
mov
(bad)
xor
push
movs
add
out
or
jg
leave
daa
and
jge
test
inc
adc
pop
dec
int3
xchg
jb
adc
push
adc
and
mov
(bad)
(bad)
fsubp
aam
fcom
and
pop
movs
jl
mov
fadd
ins
add
pusha
loop
add
ret
and
mov
cmp
in
push
test
or
mov
(bad)
(bad)
imul
jmp
clc
sub
fisubr
pushf
xchg
lahf
aas
repnz
hlt
ret
sub
aam
rcl
cmp
ja
sub
adc
push
add
inc
or
xchg
jg
aaa
stc
repz
sahf
repnz
push
xor
test
pushf
inc
cmc
ret
jno
push
mov
fcomp
dec
jp
repnz
push
jno
sbb
inc
and
into
das
or
mov
mov
add
call
jle
sbb
in
push
xor
dec
out
gs
ja
in
push
fdiv
push
clc
add
fldenv
icebp
pop
jae
mov
test
in
(bad)
dec
aam
js
ja
adc
add
jmp
pop
lods
push
test
add
pop
inc
(bad)
dec
pop
ror
loop
ror
add
out
addr16
cmp
movs
and
outs
ret
sbb
in
pop
(bad)
aam
je
popf
push
inc
in
mov
jno
adc
and
mul
daa
jle
adc
push
inc
sar
jnp
les
(bad)
lahf
jne
push
mov
pushf
mov
mov
loopne
mov
cmp
mov
bound
ins
ficomp
or
push
sbb
cmp
cmp
or
popf
pop
dec
adc
cmp
xor
div
mov
jg
mov
and
sbb
not
dec
ud2
mov
jae
rcl
jle
call
test
sbb
es
(bad)
jmp
sub
pop
ret
inc
add
sahf
outs
nop
and
or
inc
popf
mov
mov
stos
dec
inc
pusha
lea
retf
int3
jp
fiadd
stos
push
jne
push
fisub
and
aas
pop
je
adc
xor
sbb
adc
inc
into
push
push
test
sbb
jge
push
cmp
xor
jne
push
xchg
test
popf
fst
pop
cdq
xchg
inc
int3
mov
popa
cmp
adc
inc
sub
lahf
mov
movs
out
add
push
adc
fwait
push
scas
or
mov
xor
dec
aas
je
jae
fldcw
(bad)
jle
fild
sbb
xchg
(bad)
jp
cmp
popf
push
pop
jle
sub
sub
repz
adc
sbb
push
push
inc
dec
mov
push
in
inc
faddp
adc
jne
adc
add
mov
je
add
add
ror
mov
repnz
js
sub
sub
sbb
ret
retf
imul
out
fcomp
pop
and
sbb
xchg
and
inc
jecxz
cmps
sahf
sti
shl
aad
movs
fidivr
lods
pop
mov
sti
jo
(bad)
or
sub
ss
fstp
adc
es
push
movs
mov
fdiv
mov
mov
sbb
mov
inc
push
add
xor
inc
pop
cmp
movs
fs
or
push
hlt
xchg
scas
dec
je
inc
adc
out
mov
out
mov
aas
iret
into
pop
mov
pop
jns
addr16
loope
add
pop
sar
jne
adc
pushf
aam
add
mov
leave
inc
or
fs
push
inc
sbb
call
xor
xchg
cdq
out
imul
(bad)
sbb
test
and
sub
jmp
call
add
adc
or
xor
sbb
outs
jo
push
lea
cs
in
jns
xabort
adc
inc
int
repnz
repz
fst
aas
mov
cmp
fdiv
adc
cmps
pop
mov
inc
and
mov
adc
xlat
jbe
mov
cmp
sbb
cmp
test
adc
dec
jecxz
pop
(bad)
mov
ins
dec
pop
in
(bad)
gs
lahf
sbb
paddw
dec
push
ss
inc
out
mov
mov
mov
popa
mov
mov
xchg
and
mov
push
or
je
aas
repnz
cmp
push
and
mov
mul
cmc
pop
jmp
dec
clc
pushf
cmp
popa
leave
stos
dec
jp
cwde
and
push
daa
rol
and
sbb
sbb
xchg
clc
in
test
stos
mov
push
jo
mov
lahf
mov
retf
fnstsw
loop
aaa
xchg
pop
int
aaa
pop
pop
inc
fsubr
dec
aas
mov
out
jne
dec
mov
and
jns
jns
pop
add
lock
aad
std
pop
je
(bad)
call
jecxz
dec
dec
pushf
dec
jae
jecxz
cmp
xchg
or
fisttp
nop
mov
movs
cmp
push
(bad)
xlat
addr16
mov
lea
sbb
inc
sub
int3
inc
cmp
inc
aaa
jg
pop
scas
cmc
je
sbb
loope
push
and
popa
idiv
inc
mov
shl
mov
and
outs
js
dec
cmp
push
sub
sbb
inc
push
inc
lahf
cwde
imul
loopne
aaa
(bad)
fld
push
jge
mov
inc
imul
(bad)
mul
push
out
add
clc
test
imul
mov
xchg
repnz
mov
pop
inc
nop
out
add
mov
dec
pop
stos
or
or
(bad)
int3
aad
pop
or
scas
add
push
fidiv
out
sbb
in
mov
push
(bad)
cmp
push
(bad)
cmp
in
jle
call
in
neg
fdivr
fnstcw
clc
push
xor
out
cwde
inc
or
fs
cld
loopne
push
loop
mov
lods
lds
hlt
xchg
fs
test
jne
jns
jae
dec
mov
xchg
push
inc
mov
mov
ja
mov
cmp
aad
jmp
sbb
fcmovbe
pop
adc
pop
enter
mov
xchg
jb
hlt
rcr
mov
mov
sub
cld
and
dec
cmps
dec
(bad)
ss
mov
cmp
jne
sbb
sbb
(bad)
pop
jge
push
je
xor
add
fistp
jns
push
pop
ds
lods
xchg
mov
les
dec
xchg
xor
jo
sbb
sub
dec
mov
test
jl
cmp
sub
lahf
pusha
imul
ficomp
dec
arpl
int3
lea
cmps
movs
addr16
and
loop
push
inc
xor
push
add
pop
mov
push
aad
push
and
adc
inc
call
add
push
push
cmp
pop
cld
dec
rep
paddsw
or
adc
xchg
sbb
psadbw
xor
sub
pop
aam
in
and
mov
hlt
test
jb
mov
sbb
mov
push
mov
dec
jo
and
test
xor
cmp
jmp
fisttp
outs
sbb
jbe
sahf
or
or
xchg
cli
sbb
std
(bad)
mov
inc
sahf
ss
push
add
icebp
outs
jne
jp
pop
data16
fadd
ds
jl
dec
mov
mov
inc
xor
retf
mov
enter
and
jmp
pop
sar
mov
jb
retf
addr16
add
jmp
daa
xlat
daa
mov
inc
shl
pop
outs
gs
gs
popa
cmp
sub
(bad)
iret
mov
cwde
mov
jnp
das
mov
inc
test
ficom
mov
cld
ins
retf
add
adc
mov
push
lods
adc
sbb
sub
stos
mov
rcl
(bad)
add
mov
cmps
(bad)
sbb
mov
push
scas
leave
and
nop
nop
push
dec
and
adc
adc
cmp
in
jmp
(bad)
dec
cmp
out
retf
es
stos
cmp
mov
sbb
push
sbb
xchg
loopne
sbb
pop
mov
cwde
xchg
jo
mov
mov
jmp
jmp
mov
and
inc
dec
in
mov
out
int3
and
xor
and
or
sub
daa
fs
in
fnsave
leave
mov
or
mov
xchg
inc
fimul
mov
mov
mov
or
fs
mov
push
loope
dec
jne
cmp
jle
sbb
(bad)
dec
inc
lock
fwait
and
fiadd
sub
cld
ror
dec
jb
pop
fwait
dec
mov
adc
sub
and
pop
xchg
mov
or
sbb
loop
(bad)
dec
(bad)
xchg
xchg
sub
nop
pushf
ret
call
int3
sub
jo
mov
rcl
sbb
xor
lahf
push
test
fadd
jg
cli
in
das
in
xchg
mov
and
sub
(bad)
cmc
int
fimul
lods
adc
cwde
push
lea
mov
pop
push
nop
and
imul
rcr
mov
in
dec
clc
imul
pop
dec
inc
pop
inc
cmp
mov
adc
out
es
jp
and
je
(bad)
shl
(bad)
push
mov
add
fwait
jnp
jae
out
dec
pop
xchg
fcom
sub
xchg
js
mov
(bad)
or
inc
retf
pop
jbe
jecxz
imul
xchg
out
outs
(bad)
xor
jle
or
jne
pop
fwait
mov
jg
ficomp
push
jnp
bound
jg
aaa
pop
mov
shr
fisubr
jno
cwde
int
inc
mov
push
mov
das
cs
or
(bad)
xchg
mov
jp
test
call
stos
js
mov
daa
sub
mov
pushf
mov
sub
test
or
repnz
fadd
aaa
stos
bound
fs
or
xchg
inc
xchg
cmp
scas
out
sub
mov
xrelease
mov
gs
into
xchg
gs
retf
and
retf
or
les
and
fild
dec
mov
lods
ret
cwde
(bad)
jbe
hlt
jle
ja
add
mov
out
cmp
mov
mov
mov
loope
and
in
retf
pop
out
and
or
jb
xchg
rol
jne
jg
(bad)
pop
cmps
inc
std
lods
lods
cwde
add
jns
inc
sub
int
push
cld
or
call
inc
cwde
mov
dec
mov
and
add
dec
cli
xchg
out
mov
imul
mov
pop
cld
sahf
lods
jae
jge
xchg
popf
je
ins
sbb
and
xchg
adc
in
in
movs
push
pop
jb
xchg
pop
rcl
scas
or
dec
cmps
lahf
sbb
ds
xchg
popf
sub
ss
(bad)
fdiv
dec
js
jmp
and
mov
xchg
dec
jnp
dec
inc
cmc
adc
(bad)
pop
outs
mov
sub
push
jb
inc
mov
xchg
ds
out
xor
or
mov
pop
mov
dec
into
je
add
xchg
int
sub
push
or
in
mov
or
cmp
push
outs
pop
adc
stos
loopne
(bad)
xor
mov
sar
xor
adc
sahf
enter
cwde
mov
repnz
inc
aam
ror
push
jp
sub
out
loop
xchg
mov
or
icebp
stos
cmp
btc
inc
inc
inc
arpl
cmp
or
cmps
repnz
shl
sub
push
ret
mov
shl
push
sub
imul
movs
mov
mov
push
push
cmp
out
pop
icebp
daa
mov
out
enter
adc
add
gs
std
jne
adc
cs
cmp
mov
xchg
adc
lds
sbb
sub
pop
cli
ret
add
cmp
push
inc
loopne
sub
and
nop
and
leave
pushf
call
(bad)
and
fdivr
pop
neg
cmps
xchg
ss
(bad)
enter
adc
sbb
add
or
fldcw
jnp
hlt
sbb
jge
dec
pop
ins
pop
xlat
sbb
mov
xchg
jmp
add
or
inc
and
repnz
int3
push
cmp
inc
jg
jns
imul
or
xor
mov
adc
test
push
ficomp
(bad)
(bad)
xchg
sbb
in
xchg
adc
sbb
adc
adc
pop
sub
mov
mov
out
popf
int3
jmp
dec
test
jecxz
cmp
inc
or
outs
nop
(bad)
xlat
jle
sub
xor
daa
dec
pop
cdq
call
ror
fmul
mov
jmp
sbb
cwde
mov
adc
cmp
adc
add
or
jle
clc
aaa
adc
mov
sub
or
jle
cmp
daa
mov
dec
sti
sbb
pop
push
sahf
retf
ds
add
leave
jle
mov
fstp
sub
rcr
clc
loop
es
ss
cmp
or
jno
pop
pop
adc
inc
add
test
(bad)
lahf
lea
ror
xchg
xor
ror
dec
lock
mov
aad
or
(bad)
leave
adc
sbb
and
cmp
pop
sbb
xchg
or
rcl
and
fucomp
push
ja
icebp
rcr
lds
dec
sbb
pop
sahf
lea
lds
mov
xchg
jle
jns
jnp
sbb
call
pop
jns
sbb
ret
std
add
mov
jns
jp
es
das
addr16
call
mov
xor
jmp
cld
outs
out
test
(bad)
rcr
jmp
dec
mov
repz
add
cmp
jmp
add
inc
add
lds
dec
cmp
mov
and
mov
pop
sahf
pop
loop
jns
push
sbb
sub
shl
pop
inc
jp
sub
sbb
lock
xor
cmps
jg
sub
xchg
sar
sbb
adc
mov
dec
mov
mov
retf
movs
adc
outs
mov
cmc
pop
pusha
jb
jne
sbb
(bad)
jb
mov
xchg
mov
push
pop
inc
movs
adc
je
pop
mov
cmps
enter
call
jp
(bad)
aaa
mov
jge
jle
push
or
xchg
in
call
xchg
cli
clc
dec
mov
mov
dec
repnz
dec
add
sbb
mov
xor
sbb
dec
out
and
inc
or
cwde
mov
adc
jbe
push
outs
mov
call
pop
fild
xlat
fadd
inc
jge
adc
popa
repz
xchg
mov
push
add
sti
pop
ret
sub
test
popa
push
adc
inc
mov
fst
outs
popf
dec
push
js
sar
pop
inc
jmp
ffree
call
sub
cmp
scas
leave
mov
fiadd
fcomip
xor
repnz
sbb
nop
inc
cld
jp
out
dec
jl
dec
mov
mov
xchg
lahf
popf
in
cmps
dec
cmp
or
mov
aaa
mul
push
or
adc
in
push
das
out
jne
jne
jmp
sbb
sbb
fucomi
hlt
je
sub
push
loop
add
in
adc
add
mov
in
xor
frstor
cmps
imul
test
pop
mov
cwde
sti
pop
fmul
jle
scas
jb
mov
xchg
xchg
call
xchg
test
repnz
jmp
cmp
push
jle
lods
xchg
inc
repnz
sbb
das
rcl
add
xchg
push
lar
xor
or
jecxz
in
mov
cwde
or
mov
sub
mov
sti
sbb
sub
repz
mov
arpl
popa
cwde
pop
inc
or
mov
jl
jmp
push
pop
mov
stos
or
shl
adc
xor
fldcw
ret
test
icebp
cdq
arpl
popf
lods
pop
stos
imul
in
enter
pop
push
into
push
adc
mov
adc
js
inc
jecxz
and
xor
adc
jecxz
xor
sub
jbe
in
dec
mov
ds
ja
push
mov
retf
cwde
retf
inc
jbe
sbb
jne
xor
nop
lahf
hlt
jne
mov
inc
inc
cmp
call
in
and
dec
clc
xor
xlat
fst
ins
movs
movs
scas
sbb
xor
push
push
pusha
mov
xor
retf
popa
outs
movs
mov
xlat
ja
call
adc
jbe
(bad)
dec
lock
jno
jecxz
push
jno
sub
dec
push
xor
(bad)
(bad)
mov
and
cmp
push
ror
xlat
daa
xchg
xor
test
mov
jns
loope
cmp
or
iret
mov
(bad)
lods
out
lods
mov
mov
push
cmp
mov
push
add
adc
sub
adc
(bad)
cmp
pop
call
ins
leave
je
icebp
ror
push
jb
mov
ror
scas
mov
jbe
int
sub
xchg
cmc
in
arpl
pop
sub
and
adc
dec
jb
sbb
jle
std
cmp
repnz
in
push
jle
or
mov
lods
ds
and
sahf
pushf
push
js
jmp
ins
outs
test
jno
mov
or
push
ins
pop
sub
mov
cmp
test
sar
out
rcr
into
arpl
fs
imul
jo
loopne
cmp
cmp
add
cwde
(bad)
sbb
aam
ret
jp
lods
aad
test
mov
inc
test
sub
push
lock
fisubr
and
xlat
int
fstp
fist
pusha
jo
cmp
push
mov
and
rcr
repz
sti
mov
iret
mov
xlat
xor
sub
add
mov
(bad)
lea
bound
adc
add
adc
repnz
jbe
mov
test
inc
xchg
mov
jae
lock
jbe
jp
hlt
cmp
push
retf
cld
(bad)
push
jl
mov
xor
movs
hlt
and
in
xchg
push
fimul
(bad)
in
push
fcmovbe
xor
fist
xor
daa
or
xchg
push
xchg
ror
mov
dec
les
aad
ror
cwde
out
retf
xchg
push
gs
rcl
in
xchg
(bad)
out
(bad)
les
imul
movs
cmp
js
hlt
call
repz
ret
inc
daa
retf
push
jns
jbe
mov
jge
loop
dec
xor
mov
mov
jb
rcl
xor
cld
xchg
outs
rcr
test
sti
sbb
arpl
int3
(bad)
shl
repnz
cmp
sar
movs
mov
call
repnz
push
cmp
xor
push
pop
stos
add
movs
gs
mov
pop
push
or
inc
mov
scas
mov
pop
xchg
call
adc
push
sbb
sub
adc
lods
cdq
bnd
pusha
add
adc
ins
ins
jnp
dec
inc
imul
sub
iret
inc
mov
lock
mov
sub
xchg
sub
int3
icebp
sub
ds
dec
mov
jmp
dec
push
mov
call
sbb
xchg
fsubr
inc
gs
adc
outs
cs
or
stos
sub
add
in
mov
mov
jbe
lds
pop
push
push
mov
jmp
push
(bad)
scas
adc
aam
mov
fwait
sub
(bad)
loope
inc
xlat
pop
popa
jmp
or
or
jg
mov
xchg
dec
inc
je
nop
sub
stc
scas
fist
imul
push
dec
lods
push
jno
and
call
call
das
leave
dec
popa
hlt
pop
lahf
arpl
add
xor
jmp
scas
in
ds
in
jg
xor
mov
cwde
jno
std
popa
lahf
cwde
sbb
in
xchg
out
mov
out
test
jmp
jae
arpl
out
jae
inc
inc
ins
xchg
push
rol
sub
add
scas
xor
fist
xlat
sar
pop
cs
shl
xchg
js
das
xchg
int
in
sbb
pop
and
test
xlat
loopne
in
(bad)
nop
(bad)
loopne
aas
mov
sbb
xchg
or
retf
xor
cld
xchg
sbb
sub
setbe
xor
(bad)
push
cmp
mov
(bad)
(bad)
push
cmp
jecxz
adc
push
test
pop
(bad)
sar
imul
sbb
mov
out
aam
mov
xor
pop
push
int
lahf
fwait
pop
add
sub
jmp
or
fnstsw
mov
lea
(bad)
fdivr
add
aaa
mov
push
clc
mov
jle
pusha
sub
mov
mov
retf
and
les
mov
add
pop
jne
inc
pop
push
cmps
jp
sub
daa
xor
clc
in
sub
sub
mov
jo
xor
hlt
(bad)
pop
dec
ja
jl
pop
call
enter
int3
ror
cmp
movs
pop
pop
push
jmp
fiadd
push
mov
and
pushf
(bad)
inc
test
add
cwde
adc
or
xor
mov
sbb
xchg
jne
mov
sti
(bad)
jge
mov
sub
xlat
imul
out
in
loope
daa
lods
adc
and
(bad)
stc
ss
xchg
ror
ret
std
mov
pop
pop
fstp
pop
jo
sub
and
mov
mov
cmp
mov
dec
inc
mov
jbe
xchg
push
(bad)
mov
xchg
shl
sub
dec
ror
ret
inc
ror
mov
mov
rol
scas
repz
adc
lds
or
xor
pop
sub
mov
cmp
hlt
fstp
fmulp
xchg
outs
push
mov
les
ins
cmp
lods
jle
nop
aaa
adc
aad
leave
xor
mov
stos
in
xchg
and
int3
leave
leave
ins
xor
pop
loop
mov
fcmovnb
into
jnp
mov
mov
adc
inc
fsub
cmc
mov
xchg
or
je
setne
push
push
es
jb
add
adc
cmp
dec
pop
imul
retf
jno
or
ret
xchg
push
xchg
sub
pop
loopne
out
iret
(bad)
mov
ds
js
mov
add
xchg
inc
mov
xchg
and
add
xchg
and
jae
jmp
cs
mov
mov
pop
jae
hlt
mov
cld
dec
mov
sbb
push
pop
xchg
xor
std
cli
jbe
and
xchg
pusha
les
pushf
fmul
bound
mov
push
fs
cmps
mov
cs
cdq
shl
shl
inc
pushf
dec
lods
ss
sub
stc
lahf
ja
imul
push
lahf
dec
add
cmps
into
jl
sub
push
popf
inc
xchg
mov
mov
(bad)
xchg
ret
leave
or
retf
aas
mov
push
mov
je
cwde
jle
add
imul
arpl
push
fs
dec
xchg
sbb
repz
mov
fld
stc
or
cmp
jae
cs
outs
or
out
sbb
popf
cmps
pop
shl
pop
clc
stc
aad
das
pop
loope
rcl
push
jmp
xchg
leave
mov
pushf
xchg
cmp
inc
bound
mov
outs
or
sti
idiv
shl
fwait
mov
enter
bound
fimul
or
push
pop
nop
push
inc
mov
sbb
mov
int
cmp
popa
adc
outs
inc
scas
mov
inc
pop
add
das
jne
mov
push
retf
std
jge
adc
dec
add
(bad)
outs
mov
sbb
mov
test
mov
pop
sbb
cmp
push
xor
add
mov
pop
sbb
adc
xor
jecxz
push
and
ja
imul
ins
adc
push
xor
jl
aad
or
cmp
xchg
and
aam
sub
lea
mov
dec
icebp
test
lods
cmps
jno
ret
pop
retf
xchg
cmp
add
and
loop
inc
out
call
xchg
pop
aam
or
pop
sbb
cmp
pop
test
test
push
push
or
addr16
fwait
cmp
mov
pop
leave
xchg
inc
stc
mov
loope
test
cmp
aaa
aad
pop
xor
in
mov
jg
outs
outs
or
xor
shl
sahf
inc
stos
dec
inc
inc
outs
xchg
mov
push
or
sub
sub
mov
xor
xchg
xchg
movs
arpl
pop
pushf
test
scas
ins
xchg
inc
gs
aad
in
repz
std
push
retf
jmp
pop
sbb
pushf
sub
inc
push
cld
and
test
nop
mov
mov
mov
add
push
mov
adc
fs
enter
repnz
retf
in
adc
fwait
dec
addr16
sub
xor
fwait
mov
and
aam
les
xor
mov
mov
cmps
jge
in
out
(bad)
outs
imul
inc
ins
cmps
sti
fidiv
sub
aas
ret
aad
in
xchg
dec
je
mov
outs
ret
mov
xlat
aaa
pushf
sbb
xchg
xor
sbb
mov
push
fsubr
jnp
out
sbb
(bad)
pop
out
jp
sub
xchg
nop
iret
sbb
jle
push
adc
test
jecxz
add
(bad)
movs
jmp
fcmovne
dec
push
push
adc
dec
(bad)
call
cs
mov
movups
sbb
fisttp
cmp
add
test
(bad)
fisttp
daa
xchg
(bad)
or
(bad)
cmps
push
mov
jmp
dec
jp
mov
imul
push
inc
fs
xchg
es
fwait
mov
iret
outs
leave
inc
mov
sub
jl
push
or
jb
mov
xor
dec
fcmovnb
fdivp
pop
xor
ret
into
aad
jmp
sub
shl
leave
mov
xor
dec
mov
int
pop
cmp
sbb
cmc
push
gs
jb
cdq
adc
cmp
mov
jne
push
(bad)
lds
fld
jmp
call
inc
sub
push
inc
gs
repnz
jle
(bad)
jge
test
mov
cmp
test
jecxz
sbb
hlt
sbb
icebp
dec
iret
rcl
cmps
xor
jecxz
push
ins
dec
bound
or
xchg
bound
fs
ins
xlat
push
loop
jae
test
aad
ret
test
pop
out
pop
fisttp
fcomp
xchg
pop
cwde
iret
jecxz
cwde
stos
jmp
adc
add
mov
cmp
repnz
daa
xor
dec
test
sbb
test
rcl
sbb
(bad)
jmp
jp
mov
(bad)
or
add
sti
call
loopne
dec
mov
stos
sub
xlat
xchg
icebp
xchg
lock
retf
inc
cmc
div
xchg
pushf
push
dec
ja
pushf
arpl
sar
mov
das
lds
fcom
movs
iret
(bad)
push
xor
xchg
loope
mov
add
std
xor
jl
dec
aas
xchg
ror
leave
pop
mov
xor
add
test
push
sub
pop
dec
mov
pop
fdiv
or
xchg
dec
call
dec
sbb
test
sbb
loop
xchg
jecxz
inc
mov
loop
adc
xor
inc
add
jne
jl
cmp
cdq
jnp
jp
out
dec
cli
scas
popa
in
sub
or
adc
daa
iret
mov
push
and
clc
push
xor
pop
data16
mov
rol
dec
inc
sbb
push
jge
movs
mov
(bad)
cs
(bad)
xor
mov
cld
and
in
stc
in
repnz
arpl
add
leave
cmps
inc
sub
jg
jge
jns
push
loop
cdq
xlat
mov
cmps
(bad)
nop
xchg
pop
leave
sbb
and
mov
(bad)
bound
xor
jl
or
ret
stos
push
or
add
xor
out
adc
shl
inc
outs
push
(bad)
jns
ror
mov
and
adc
adc
mov
adc
mov
or
sbb
pop
push
cmp
sub
mov
frstor
imul
fimul
fsubr
outs
rol
outs
mov
add
or
fnstsw
xor
repnz
jo
jle
xchg
pushf
call
jl
sub
xchg
call
dec
ja
popf
inc
repnz
and
pushf
stos
fcomp
xor
dec
xchg
cmps
cld
add
sub
jbe
sbb
clc
adc
test
xor
xchg
jp
cmp
dec
fimul
mov
cmp
sbb
mov
mov
adc
mov
inc
leave
scas
sub
sbb
xlat
adc
xchg
mov
test
hlt
xchg
in
or
mov
ja
std
aaa
mov
xchg
into
mov
or
jnp
sbb
mov
dec
das
inc
mov
in
sub
fnstenv
mov
cdq
out
pushf
daa
sbb
ja
mov
sbb
gs
fdiv
xor
test
stos
lea
mov
in
lds
inc
jl
fcom
addr16
ss
sbb
imul
ins
mov
adc
rol
and
jno
add
mov
mov
jge
sub
sbb
shr
fsubr
push
rol
or
(bad)
int3
push
xor
dec
pop
jns
or
fld
sub
sub
fist
movq
aas
jnp
das
fmul
jbe
nop
in
xor
jo
call
jmp
add
or
lods
mov
dec
xchg
mov
loop
loop
retf
fnstenv
pop
dec
add
dec
add
mov
add
fbstp
cmp
popf
sub
mov
dec
jb
icebp
lea
leave
add
xor
dec
jmp
xor
jnp
xor
lock
or
retf
mov
mov
mov
fs
in
sub
jge
push
fwait
mov
pop
push
out
or
int
xchg
inc
sti
jne
int3
inc
call
cmp
mov
push
push
or
pop
xchg
mov
es
retf
mov
jne
inc
inc
cmps
int3
dec
(bad)
push
popf
fiadd
(bad)
dec
mov
test
inc
iret
outs
or
or
xchg
sahf
or
inc
dec
out
aaa
push
sti
scas
jo
lea
pop
jae
cmp
cs
bound
xlat
sar
fst
rcl
add
sbb
ins
push
into
dec
stos
loopne
dec
sbb
in
fcomp
cmp
ins
fidiv
mov
out
or
pop
push
(bad)
leave
arpl
mov
xchg
xlat
xor
adc
ja
mov
cmp
jl
daa
push
or
adc
(bad)
jmp
pop
mov
cwde
or
mov
sub
test
je
scas
or
dec
repnz
mov
dec
out
loope
pop
sahf
sbb
xlat
pop
inc
or
jg
mov
cmp
imul
mov
jnp
cmp
mov
mov
sbb
pushf
push
loope
outs
std
dec
ret
mov
daa
mov
pushf
xchg
xchg
add
xchg
cmp
aad
js
xchg
cli
pop
sbb
fincstp
(bad)
test
stos
cwde
add
xchg
in
cmp
js
ror
sbb
push
inc
loopne
nop
mov
(bad)
push
xlat
xor
fstp
push
jecxz
sti
xchg
(bad)
js
sar
std
mov
push
jo
add
out
aaa
in
popf
icebp
inc
jnp
push
(bad)
hlt
cmp
repnz
sbb
or
retf
sti
mov
sete
out
hlt
sub
in
cwde
mov
add
bound
jp
mov
loopne
jno
scas
push
jns
clc
scas
scas
inc
(bad)
popa
int3
loopne
mov
(bad)
les
dec
dec
adc
les
shr
dec
pop
and
aaa
retf
sar
jmp
stc
pop
xlat
repz
pop
adc
mov
fwait
adc
push
rol
aam
push
jae
lods
ds
lds
mov
fdivr
inc
int
retf
xor
aaa
je
mov
jnp
(bad)
jge
dec
push
iret
mov
and
leave
sar
jb
pop
sbb
adc
add
sbb
outs
cmp
fisubr
lock
push
xor
add
mov
or
fisubr
xchg
shr
sbb
jg
add
or
jp
sbb
and
addr16
xchg
sbb
cld
hlt
lds
or
pusha
or
test
jne
int3
loope
jns
ret
or
arpl
xor
icebp
cld
or
in
cld
xchg
dec
pop
jno
ja
icebp
add
aam
adc
push
fs
outs
inc
cs
in
xlat
test
(bad)
or
pop
push
jb
jns
cmps
pop
bound
out
xor
clc
sub
daa
sti
push
int
jg
dec
jl
jb
fxch
inc
mov
xor
sub
out
arpl
mov
add
out
movs
fadd
stc
xor
(bad)
jle
xchg
aaa
mov
sub
push
inc
cmp
adc
adc
rcl
dec
shl
or
pop
das
adc
push
jecxz
repnz
xchg
xchg
(bad)
jae
push
jg
dec
jle
sbb
repnz
cmp
loop
and
sbb
mov
adc
inc
enter
mov
std
sbb
stos
push
imul
loopne
fwait
jmp
mov
add
ins
(bad)
dec
or
in
cld
iret
iret
dec
xchg
fsub
lock
shl
in
repz
xchg
pop
push
bsf
out
jp
sbb
mov
fbld
cmp
and
rcl
shl
psllw
mov
fincstp
sbb
or
jg
xor
jns
in
inc
xchg
test
fwait
and
pop
enter
push
mov
mov
push
arpl
icebp
dec
xchg
cmp
mov
adc
es
adc
mov
xchg
mov
sub
in
dec
gs
imul
in
dec
outs
in
dec
mov
add
xchg
fs
jno
and
rcr
mov
inc
mov
loope
mov
cs
mov
jnp
and
div
imul
sub
rcr
leave
fwait
xchg
aaa
and
mov
xor
dec
in
mov
sub
shl
and
inc
not
pop
xchg
in
mov
push
jmp
out
lods
mov
lods
sub
xor
xor
jbe
pop
inc
aaa
mov
clc
push
and
shl
mov
push
clc
out
(bad)
out
sbb
push
sub
gs
leave
mov
sbb
cmp
adc
push
add
ja
(bad)
popa
fldenv
popa
pop
mov
jmp
or
xchg
push
adc
jp
adc
mov
pop
cmc
test
mov
pop
xchg
adc
stos
into
xchg
stos
pop
mov
call
pop
mov
aaa
jecxz
into
cmp
pop
cmp
movs
icebp
sub
sub
(bad)
lea
popa
mov
(bad)
fcmovnb
ins
mov
pop
mov
mov
xor
xchg
sbb
mov
loopne
aas
ficomp
in
xor
push
dec
jmp
xchg
sti
call
push
and
(bad)
push
jb
cmp
fiadd
xchg
int3
and
loope
push
mov
push
mov
fsub
out
nop
xchg
mov
cmp
movs
fs
mov
jne
sbb
mov
inc
jl
mov
pop
mov
and
mov
dec
mov
and
or
cmp
cmp
test
sbb
pop
pop
push
std
inc
movs
fsubr
pushf
sub
mov
leave
or
enter
pop
popa
punpcklbw
push
inc
sbb
adc
scas
out
ins
fld
pop
dec
pop
adc
(bad)
mov
xor
aas
ss
jb
mov
popf
cmp
and
rcl
and
test
adc
push
(bad)
test
sub
add
mov
std
call
dec
lock
dec
lods
mov
cmps
lods
xchg
out
or
pop
and
mov
cmp
fmul
(bad)
cmp
add
cmps
push
pop
outs
inc
mov
add
aaa
mov
xchg
shl
(bad)
mov
push
lods
shr
jbe
rcl
leave
jne
inc
repnz
push
(bad)
push
loop
push
add
(bad)
lods
pop
cmp
push
or
stc
in
xchg
cmps
into
pushf
push
imul
and
les
sub
(bad)
repnz
jne
pop
pushf
inc
scas
mov
into
and
push
fisubr
cld
add
(bad)
jne
stos
dec
iret
movs
and
test
std
fcmovne
cmp
rcl
xchg
jg
lahf
mov
rol
and
sub
hlt
mov
and
mov
(bad)
and
shl
ds
push
push
cli
lock
fs
addr16
(bad)
pop
mov
ret
pop
stos
pop
addr16
stos
sbb
clc
pop
jge
call
sub
loope
dec
jecxz
ins
cli
out
fs
sub
push
lods
and
(bad)
out
or
addr16
lock
cmp
imul
mov
dec
jne
inc
mov
mov
lea
jae
push
jbe
add
jmp
call
ret
xchg
mov
xor
xchg
cmc
(bad)
push
cmps
pop
sub
mov
cmc
fwait
ret
cmp
dec
push
xchg
iret
mov
sbb
pop
repz
imul
pop
mov
dec
scas
xchg
ins
jmp
es
icebp
pop
or
push
lahf
fs
scas
lahf
fwait
test
push
mov
inc
or
call
lods
cmp
mov
mov
in
in
pushf
or
daa
push
jecxz
lods
pop
jmp
xor
push
ja
fbstp
aas
pop
mov
xchg
test
sahf
mov
sbb
nop
add
adc
out
mov
iret
loopne
aam
jno
xchg
mov
dec
cmc
jmp
cdq
shr
xlat
in
mov
adc
mov
lods
xchg
mov
fld
and
jge
and
imul
xchg
jns
test
rol
out
data16
fsubr
stos
rcr
mov
enter
out
sbb
or
shl
mov
adc
mov
mov
push
push
(bad)
scas
push
inc
mov
(bad)
dec
xlat
jle
(bad)
int
in
xor
add
jnp
pop
cli
mov
xchg
adc
add
std
fsub
inc
stos
jne
mov
movs
or
lods
das
pop
or
test
hlt
lods
dec
push
call
adc
dec
frstor
fwait
xchg
lock
pushf
dec
fisubr
call
pop
pop
mov
(bad)
mov
xchg
mov
int3
xor
mov
adc
sbb
inc
cs
add
fist
jmp
adc
mov
popf
add
mov
xor
xor
and
into
mov
inc
xchg
daa
shl
mov
inc
(bad)
dec
mov
icebp
and
push
pop
loope
adc
cwde
cmc
push
dec
or
fisub
sbb
inc
inc
fucomi
repz
sbb
(bad)
lock
xchg
scas
push
mov
jae
(bad)
sub
pop
adc
mov
movmskps
xchg
xchg
cmps
adc
stc
push
movs
mov
repnz
outs
jge
mov
cmp
mov
lods
rcr
repz
ror
adc
add
fcom
lds
mov
add
call
pop
pop
mov
faddp
arpl
outs
(bad)
mov
call
sub
lods
(bad)
loop
mov
call
or
pushf
nop
movs
xor
mov
mov
addr16
fsubr
add
xor
and
jecxz
loop
retf
push
cmc
fadd
jo
pop
and
cmp
lods
push
lods
xor
push
arpl
adc
mov
adc
pmuludq
xchg
mov
pop
or
jns
scas
out
and
sti
add
jbe
ror
rcl
inc
adc
xchg
div
mov
pushf
stc
xlat
jg
jb
add
mov
inc
or
jmp
jbe
out
sbb
push
in
add
hlt
shr
ins
sbb
inc
xor
inc
xchg
dec
jne
lods
cmc
call
lock
and
lahf
adc
js
or
mov
popf
pop
mov
dec
xchg
push
sbb
movs
mov
rcl
call
sub
mov
cmps
jp
shr
inc
mov
out
mov
leave
push
mov
and
sub
sub
outs
test
arpl
in
adc
imul
xor
cmp
sub
sbb
jecxz
sub
mov
sub
int
repnz
fwait
push
sbb
imul
dec
push
xor
cld
retf
mov
nop
call
or
xchg
mov
std
cmp
xor
jb
mov
mov
jnp
and
xchg
pop
ficom
jmp
mov
mov
sub
inc
sbb
mov
and
mov
cmps
jmp
ss
in
hlt
inc
sbb
adc
test
sub
push
push
fsubp
retf
xchg
push
xbegin
pop
ja
cwde
xchg
in
sub
je
cwde
push
ins
inc
mov
mov
mov
(bad)
and
lods
sbb
and
mov
inc
push
gs
repz
xacquire
jb
and
addr16
call
stos
or
mov
mov
cmp
je
xchg
xchg
xchg
mov
std
push
sub
ins
jo
xchg
movs
ds
jae
cmc
pop
sbb
std
cmp
adc
fsubr
adc
fldenv
cmp
lds
pop
inc
xchg
sub
cmp
sbb
xchg
pop
loopne
rcr
mov
xchg
xchg
mov
iret
dec
and
call
mov
jl
pop
mov
push
mov
jle
iret
mov
in
rcl
xchg
jb
je
data16
adc
mov
mov
ret
aas
push
inc
int3
cmps
(bad)
int3
jmp
add
aam
cmp
cld
adc
adc
ror
xchg
ret
pop
mov
lods
clc
sbb
add
jb
sub
mov
shl
in
dec
sar
dec
jecxz
and
fadd
mov
scas
mov
xchg
or
cmp
add
(bad)
test
or
stos
fcom
jp
(bad)
or
lds
mov
push
stos
add
cmp
jmp
jle
repz
jo
sti
outs
daa
movs
add
push
aas
jnp
pusha
(bad)
sub
mov
sbb
in
sahf
aad
sar
pop
int3
ret
push
mov
and
cmps
aaa
inc
bswap
sbb
jmp
scas
shl
xchg
and
cmp
ins
fadd
jnp
inc
xor
inc
arpl
das
xor
xchg
mov
(bad)
shl
push
(bad)
pop
stc
ja
loope
nop
adc
cli
(bad)
ficomp
aam
imul
scas
add
and
(bad)
mov
sub
ret
sbb
mov
int
sbb
gs
imul
xchg
pop
add
shl
std
mov
sti
idiv
int3
daa
mov
or
add
shl
loopne
jmp
jp
jnp
mov
pop
fisub
outs
xor
adc
push
fisttp
into
or
je
adc
loopne
mov
ds
into
adc
mov
xchg
jl
and
pop
mov
aas
sub
test
xchg
jecxz
jg
xchg
out
ret
int3
repnz
pop
or
test
je
rol
sub
fs
and
and
mov
(bad)
cld
jns
inc
pop
mov
push
in
scas
push
retf
cmps
clc
push
xchg
mov
fisubr
dec
lds
into
adc
ror
sbb
ret
jnp
popf
inc
mov
shl
aam
xor
aad
pop
dec
dec
ds
inc
push
xchg
pop
jno
(bad)
jnp
popa
jno
aam
jbe
ds
ss
aas
data16
and
jb
fdivr
add
mov
es
or
jp
cmp
jbe
imul
test
and
add
test
or
dec
mov
jmp
inc
hlt
mov
scas
shl
cmp
jno
bound
pop
(bad)
lock
mov
pop
cwde
push
add
test
ins
leave
mov
pop
mov
dec
push
jmp
cmp
jo
rcr
and
sbb
xor
lahf
fs
mov
xchg
mov
fisub
dec
push
push
mov
gs
inc
lds
ins
inc
sbb
(bad)
inc
cmc
ds
mov
cmp
xchg
xor
jae
aas
fild
mov
mov
sub
sbb
aaa
out
stos
xchg
cmc
jae
stos
dec
mov
imul
out
(bad)
(bad)
jp
adc
out
jp
loope
les
jl
add
push
push
or
xchg
pusha
in
std
xchg
stc
jo
ror
dec
inc
and
in
retf
jns
in
push
in
repz
push
sbb
and
cmp
or
dec
fwait
or
adc
ss
mov
jg
aaa
xlat
push
hlt
arpl
ja
aaa
mov
addr16
jmp
cmp
sub
(bad)
les
js
paddusb
(bad)
sbb
jp
cmps
pop
aaa
sub
call
xchg
jns
and
jp
mov
add
aam
push
fdiv
mov
inc
aas
call
push
push
into
or
scas
ss
inc
shr
xchg
or
shr
mov
sbb
retf
mov
xor
outs
movs
mov
cmc
movs
sub
out
stos
jg
sub
bound
outs
cmc
fucom
push
cmp
mov
in
cmp
sahf
xor
add
test
pop
outs
jmp
xor
cmc
gs
jg
cld
or
stc
mov
xchg
stos
jne
pop
sub
cmps
ins
(bad)
add
dec
sar
or
out
repnz
jge
pushf
push
jg
inc
pop
push
retf
fadd
not
cmps
pusha
push
jns
fwait
push
stos
push
lods
test
push
repz
ret
ret
pop
and
data16
mov
call
sbb
sbb
jb
mov
push
std
js
stc
mov
shl
pop
in
pop
adc
movs
pushf
xor
adc
cvtps2pi
inc
mov
inc
aad
dec
dec
add
mov
call
sbb
xor
aaa
loopne
jmp
push
pop
add
adc
mov
mov
push
pushf
test
stos
call
les
jmp
mov
cmp
call
mov
cmp
add
sbb
pusha
mov
cmp
and
lds
pop
sub
pop
stc
dec
repz
push
jmp
enter
jnp
jne
fwait
je
pop
hlt
add
inc
fs
mov
aam
test
inc
cmp
lods
rcr
or
in
cmp
movs
lahf
imul
mov
fsub
and
and
std
mov
sub
shr
mov
iret
neg
ins
jl
movs
sub
sub
data16
ds
int
push
lock
sbb
loope
test
outs
or
ret
(bad)
pop
sbb
cmp
out
cmp
dec
(bad)
int3
js
mov
sahf
das
(bad)
jecxz
ds
add
mov
(bad)
fs
cmp
push
retf
lds
pop
xor
sti
pop
sbb
jle
mov
sbb
(bad)
jp
repnz
imul
mov
jnp
jo
nop
stos
push
pop
ss
arpl
push
jp
mov
js
sahf
sbb
dec
adc
jmp
or
rcl
retf
sub
sbb
dec
es
lods
pop
sub
in
lods
dec
jg
or
push
test
aam
adc
div
lods
mov
in
mov
xor
mov
mov
fild
shl
xor
jb
jae
jmp
imul
lock
(bad)
hlt
ins
fidivr
mov
inc
cld
push
mov
mov
or
push
jo
test
pop
fist
rol
mov
sbb
mov
aad
pop
mov
mov
jo
retf
clc
add
js
sub
sub
jb
sub
movs
mov
mov
icebp
test
daa
popf
push
add
test
fs
aam
dec
in
int
sub
sub
sbb
enter
arpl
mov
or
sar
js
icebp
std
add
xchg
(bad)
mov
add
jl
ins
scas
aam
jg
sbb
out
clc
push
sbb
mov
fimul
mov
and
aas
push
mov
(bad)
cdq
loopne
xchg
test
outs
pmullw
sbb
add
rcr
jmp
sbb
and
xchg
dec
repz
arpl
xchg
test
mov
mul
cmc
pop
call
fistp
adc
pusha
jl
and
cmp
fsub
jo
cmps
pop
clc
jl
repz
push
xor
je
movs
popa
jmp
jb
lahf
neg
call
inc
das
jl
add
adc
pop
cmp
mov
mov
dec
call
jo
cmp
jo
jle
xchg
std
in
cs
push
into
test
shr
cmp
neg
cdq
xlat
lock
(bad)
mov
mov
fstp
sub
xchg
sbb
jb
sub
jbe
call
jne
or
enter
push
ret
mov
aaa
inc
add
and
daa
xchg
jp
int3
cmps
cs
je
mov
dec
pop
sbb
std
scas
add
imul
cmp
add
dec
xor
mov
leave
or
cmp
mov
jmp
mov
ret
and
scas
xchg
loopne
mov
add
xor
or
jne
adc
data16
xchg
sub
les
mov
sahf
push
lock
scas
clc
add
dec
push
adc
mov
ds
and
retf
sbb
outs
xchg
ins
jp
test
fdivr
fisubr
mov
dec
xchg
mov
mov
popa
mov
std
adc
and
aam
adc
pop
push
bound
outs
sub
scas
fcmovu
inc
xlat
xor
adc
dec
mov
and
and
lods
push
fldenv
in
loopne
and
enter
pop
xchg
jae
inc
dec
ja
inc
in
mov
inc
and
leave
or
ins
sti
sti
and
test
pop
imul
lds
sub
dec
push
mov
and
add
cld
sbb
outs
fidivr
jmp
(bad)
fld
fndisi(8087
jno
shl
addr16
lods
in
add
or
fcomi
lods
dec
mov
or
rol
repz
dec
scas
pop
push
adc
inc
sub
xor
push
scas
call
jne
cwde
dec
xor
jo
push
mov
(bad)
add
mov
frstor
xchg
and
mov
outs
xor
jg
addr16
xchg
cmp
out
test
inc
aam
or
lods
shr
adc
out
fprem1
adc
mov
inc
jl
jo
and
ret
inc
cs
mov
or
ins
dec
mov
sbb
loop
lods
retf
jo
dec
inc
pop
pop
dec
mov
(bad)
and
sub
pop
test
mov
sbb
fwait
push
je
repnz
and
mov
and
jmp
add
jge
jno
dec
jmp
(bad)
outs
shr
cld
scas
mov
ret
dec
dec
lods
push
(bad)
icebp
enter
xor
add
sbb
popa
push
push
sbb
dec
test
dec
dec
cmps
loopne
aaa
jno
cmps
test
push
pop
inc
(bad)
popa
outs
(bad)
cmp
loop
outs
mov
push
dec
xchg
mov
or
loope
jecxz
cmp
xor
lds
arpl
loop
loop
popf
fs
or
push
out
into
std
mov
shr
hlt
popa
daa
pop
in
outs
(bad)
push
rcr
shl
(bad)
fdiv
adc
push
icebp
scas
mov
(bad)
cdq
mov
sbb
js
inc
out
or
lods
ror
adc
mov
dec
dec
jns
clc
jae
and
clc
push
pop
pop
nop
sub
xchg
ret
xchg
jle
sub
dec
jmp
je
mov
pop
imul
pop
outs
mov
pop
ds
test
aaa
out
mov
jmp
cld
aas
add
fisub
add
mov
movs
dec
js
xchg
jl
and
clc
(bad)
mov
mov
outs
stos
and
lods
into
dec
bound
xor
sti
into
add
ss
sar
cmp
aam
out
push
dec
or
mov
mov
sbb
popf
and
stos
je
(bad)
lahf
and
add
inc
inc
xor
xchg
pop
pop
push
ret
mov
hlt
mov
sub
jmp
outs
xor
aas
cmps
sbb
cmps
inc
mov
adc
call
popf
fld
cmps
lods
mov
push
dec
xchg
fwait
xchg
sbb
pop
dec
fnstenv
mov
lahf
xor
and
sbb
cmp
in
stc
loop
and
xchg
lahf
mov
or
sub
es
pushf
inc
cmp
popa
mov
jno
add
adc
add
out
xlat
gs
imul
sub
test
aam
lds
ret
sbb
fbld
rcl
fist
xchg
dec
call
sub
push
xchg
and
jbe
mov
pop
add
shl
xor
jne
imul
inc
and
stc
sti
mov
or
mov
mov
test
test
test
cmp
mov
adc
pop
mov
addr16
ret
add
pop
pop
and
jp
push
call
mov
ret
mov
jo
fcomp
jns
mov
sbb
popf
jmp
add
rep
and
cmp
and
outs
ss
inc
push
sbb
mov
aam
add
xor
jmp
call
sbb
mov
loopne
mov
ror
sbb
jecxz
dec
jbe
xchg
fadd
xchg
inc
call
jne
push
(bad)
fisub
push
and
cmp
loopne
aad
fcmovnbe
call
daa
or
mov
lock
push
in
js
jmp
mov
mov
cs
xchg
pop
add
push
sbb
jb
retf
fidivr
cli
inc
mul
dec
in
mov
push
push
lea
aaa
and
xchg
imul
popa
sbb
dec
std
stc
mov
xchg
or
sub
cld
jno
pop
jp
loop
adc
lock
sub
in
mov
ins
leave
icebp
push
loopne
cmc
fbstp
xchg
pop
push
inc
push
and
sbb
aad
pusha
jg
cld
int3
loop
icebp
xor
loope
cwde
icebp
ins
xlat
mov
mov
bound
xor
test
xchg
inc
hlt
or
cli
shl
dec
rol
dec
or
loopne
push
adc
hlt
jg
mov
sbb
dec
cwde
ja
lahf
mov
cs
xchg
ret
movs
mov
xchg
xor
add
cmp
in
cli
ins
pop
mov
mov
lock
mov
or
mov
xlat
fwait
jle
adc
out
mov
stos
shufps
push
cdq
in
inc
cmp
mov
push
push
ss
aad
sbb
and
ror
cmp
xchg
xchg
nop
push
push
xchg
aaa
inc
push
mov
adc
loope
call
mov
inc
xchg
inc
int
jnp
pop
xor
fsubr
fild
shl
in
mov
daa
mov
out
mov
mov
ret
nop
dec
cmp
stc
sbb
xchg
add
mov
mov
rcl
call
int
mov
mov
ds
cmp
xor
sbb
loop
sahf
mov
iret
clc
xchg
add
mov
pusha
mov
sub
movs
cmc
repz
mov
inc
inc
movs
outs
inc
cmc
ret
mov
mov
jmp
mov
lock
ror
sub
cwde
clc
mov
into
dec
push
mov
shl
and
pop
sub
loope
mov
lea
imul
jp
fwait
and
lds
inc
mov
sub
nop
inc
dec
dec
(bad)
fstp
popf
repz
leave
sub
fistp
push
jg
lods
movs
push
out
les
and
xchg
fld
mov
mov
cli
mov
jecxz
cmps
test
int3
stc
pushf
mov
sub
lea
ret
xchg
mov
repz
cmp
inc
cmp
jge
cmp
pop
lea
das
ret
pop
repnz
out
pop
and
cmp
push
mov
push
mov
xchg
test
cli
repz
movs
aas
popa
sar
mov
in
pop
or
mov
outs
bound
sub
cld
cs
cmps
fld
lods
retf
cmp
es
mov
inc
lahf
and
je
mov
pop
sbb
ins
test
pop
fmul
mov
jno
push
xor
adc
call
xchg
jmp
test
add
pusha
clc
out
sub
icebp
push
mov
push
fist
jmp
out
push
inc
mov
sar
cwde
addr16
mov
mov
sar
(bad)
idiv
sbb
push
repz
jno
dec
adc
mov
ror
out
xor
out
sub
in
in
mov
dec
out
cmp
adc
out
adc
xchg
add
cli
loopne
popa
xor
dec
sub
push
adc
push
js
sub
inc
rcl
aas
cwde
xor
cmc
gs
sbb
mov
jecxz
jmp
sahf
iret
clc
aaa
(bad)
mov
cmp
ja
pop
xchg
shl
mov
mov
xor
sub
shl
mov
add
mov
fs
jmp
aas
sbb
cmps
and
push
movs
(bad)
and
xor
shr
push
pushf
dec
cmp
fistp
nop
outs
retf
mov
lods
ret
add
jne
(bad)
cdq
nop
retf
popf
mov
imul
mov
xlat
mov
cmp
nop
(bad)
out
inc
jecxz
popf
adc
mov
ss
pop
adc
bound
dec
pop
mov
cmps
and
outs
call
mov
push
adc
xchg
xchg
sti
shr
mov
push
jge
jo
mov
pop
cmp
sub
addr16
or
fwait
cdq
and
and
cmp
push
out
pushf
mov
sti
xchg
add
test
test
sbb
pop
mov
xor
jae
mov
addr16
or
mov
or
adc
dec
in
xor
in
mov
stos
shl
aam
pop
jl
jno
pop
loope
cmp
fdivr
and
les
cwde
jge
xchg
adc
jbe
int3
pushf
adc
sbb
scas
test
add
loopne
cmps
jbe
(bad)
jnp
jmp
daa
retf
xor
adc
not
mov
(bad)
mov
out
push
clc
push
xor
push
dec
outs
sbb
inc
shl
pop
lahf
jae
cmps
fcom
repz
ret
or
int
xchg
fstp
mov
mov
pop
mov
sbb
mov
mov
shl
mov
sub
rcl
add
or
ret
out
mov
fs
push
jge
mov
cmp
dec
dec
push
and
and
scas
xor
or
jg
fsub
ffreep
add
jo
xor
jne
mov
cs
or
pusha
mov
add
sub
icebp
retf
icebp
xchg
cmp
sbb
inc
fwait
jecxz
mov
sub
ficomp
cmps
xor
xchg
ja
(bad)
xor
cmp
lds
sbb
mov
les
jno
jp
mov
cmp
jnp
add
mov
sbb
jle
ret
clc
and
lods
in
or
pop
add
ds
in
mov
cwde
jmp
push
(bad)
jmp
pushf
sbb
xchg
dec
leave
jbe
ficom
shl
fmul
mov
fsubr
out
iret
stc
push
mov
loope
sahf
dec
push
cld
sbb
inc
lods
imul
lock
adc
mov
cwde
mov
mov
mov
pop
call
hlt
cmps
sub
add
or
lods
push
es
jmp
and
pushf
ret
inc
out
leave
xchg
ret
mov
std
push
jp
cmps
mov
mov
lods
sub
mov
jp
jo
jp
adc
and
mov
fnsave
jge
leave
test
nop
icebp
cmp
mov
and
jecxz
lds
dec
leave
ror
mov
push
retf
sub
adc
or
jmp
in
jnp
arpl
outs
bound
jne
popf
push
enter
pop
mov
lods
pushf
xor
push
dec
inc
pusha
mov
and
cmps
push
mov
jnp
sbb
mov
imul
pop
sub
arpl
sbb
imul
(bad)
lock
mov
dec
push
in
ins
ja
movs
aam
add
nop
inc
jb
mov
popa
scas
stc
aaa
(bad)
ss
push
cwde
jnp
pop
pop
mov
iret
cmp
popf
(bad)
ja
inc
fbld
fnsave
jns
mov
int3
push
fiadd
add
xchg
jns
dec
sub
ficom
sub
aaa
jg
and
push
cmp
lahf
or
pop
rep
mov
mov
(bad)
push
mov
popf
or
adc
sbb
adc
pop
xor
push
xchg
je
sbb
add
xchg
mov
cmc
call
adc
cmps
cmp
sub
out
add
stos
xor
aas
fnsave
sub
pop
aas
jno
or
pushf
mov
xor
retf
xlat
jecxz
in
std
push
dec
adc
sbb
jmp
leave
push
shl
lods
lods
adc
lods
jl
mov
pop
dec
sub
inc
add
and
cmps
fsub
jb
pop
and
pop
out
ret
sub
outs
push
sbb
retf
xchg
je
int
and
or
jl
push
sub
xor
xor
xchg
aad
je
dec
xor
adc
and
dec
loopne
add
push
pushf
jg
cmp
sbb
mov
jne
cwde
imul
cld
mov
arpl
xor
jl
jne
mov
add
das
xor
shr
repz
outs
push
ja
mov
repz
dec
fnsave
sbb
mov
adc
cmp
(bad)
jae
pusha
mov
retf
mov
stc
xor
add
jb
sub
mov
cs
inc
dec
inc
inc
and
xor
test
sahf
(bad)
fimul
push
push
cmp
push
or
fist
mov
add
pop
pop
ja
popf
add
bound
mov
not
sub
bound
dec
jbe
xchg
push
(bad)
xor
pop
inc
adc
sub
test
mov
(bad)
not
sub
push
push
mov
mov
das
mov
in
mov
dec
and
push
mov
sub
sbb
mov
push
aad
ret
sub
popa
and
hlt
dec
test
and
gs
cwde
mov
in
jle
sar
in
ja
pushf
sbb
mov
inc
add
mov
mov
xchg
or
xchg
int3
enter
in
sbb
(bad)
fisttp
xchg
xchg
jecxz
sbb
and
in
cmps
(bad)
inc
cmp
and
pop
add
dec
hlt
hlt
pop
gs
jb
dec
mov
mov
mov
xor
loope
cmp
xchg
call
jns
pop
pop
mov
sar
cwde
push
arpl
bound
jecxz
and
inc
rol
lea
das
dec
out
lahf
add
xlat
xchg
mov
mov
in
sar
jns
scas
jg
and
xor
jmp
xchg
daa
xor
jns
inc
adc
xchg
gs
gs
jno
sub
mov
ds
aam
aam
mov
shl
aas
movs
rcr
retf
xor
loop
ins
loopne
pusha
or
into
add
jns
sub
mov
daa
stos
daa
mov
lds
adc
aad
add
les
pop
xchg
dec
pop
arpl
xchg
adc
add
repnz
es
mov
ror
mov
cmp
inc
sti
sub
lods
icebp
sbb
mov
inc
bound
outs
out
mov
movs
gs
sub
and
in
mov
and
test
mov
push
mov
test
pop
pop
icebp
jno
scas
(bad)
outs
lock
add
mov
mov
les
push
xchg
test
jecxz
leave
mov
pop
cmp
(bad)
imul
dec
jmp
add
pop
mov
xor
and
pop
imul
and
inc
and
mov
pop
xchg
xchg
popf
aaa
adc
std
add
imul
push
inc
and
mov
push
(bad)
xchg
push
adc
retf
xchg
les
lahf
xchg
std
repnz
js
cmp
inc
cmps
cmp
popf
daa
rol
sbb
daa
icebp
in
outs
inc
pop
dec
or
add
mov
add
popaw
fcmovbe
mov
jmp
fsubr
push
mov
mov
pushw
iret
pop
ror
fs
(bad)
jp
shl
or
out
sbb
lahf
add
or
loop
enter
fs
int3
stos
loopne
and
mov
out
clc
aas
repz
stos
jge
sub
ins
xchg
es
adc
sbb
loop
bound
xor
jmp
retf
pop
push
fcmovu
xchg
loopne
outs
xchg
cmp
das
icebp
jl
cmp
loopne
hlt
inc
push
add
pop
mov
push
hlt
loop
ret
adc
and
pop
sub
ins
mov
fsub
(bad)
test
add
add
mov
popa
addr16
stc
outs
sub
outs
aam
pop
push
pop
xor
push
jmp
or
jp
push
sub
ds
enter
bound
mov
jb
out
repz
sbb
fwait
mov
sub
(bad)
jp
jb
jns
ins
dec
cmp
sbb
add
sub
jmp
jmp
(bad)
dec
adc
push
out
dec
mov
xlat
xor
mov
nop
out
test
pop
aaa
(bad)
add
and
push
add
cmps
pop
and
inc
or
ss
adc
ret
mov
inc
gs
les
sub
ins
mov
cmp
adc
leave
test
ror
fs
push
popf
and
cwde
imul
mov
fdivr
mov
dec
xor
fs
and
out
(bad)
lds
xchg
lea
cld
test
rcr
add
sti
lahf
shr
or
hlt
inc
xchg
mov
rol
mov
inc
pop
mov
sbb
push
add
or
dec
or
mov
outs
fwait
in
mov
pop
mov
std
and
dec
data16
mov
cmp
inc
dec
fidiv
call
pop
les
(bad)
iret
inc
mul
rol
jae
(bad)
sbb
mov
sub
xor
shl
sub
bound
fmul
jl
(bad)
adc
ds
test
push
rol
sbb
fist
mov
mov
and
jmp
bound
adc
imul
pop
lea
adc
jnp
cmp
push
bound
inc
push
test
push
mov
(bad)
jae
pop
out
in
jle
arpl
fisttp
aas
cmp
sbb
rcr
cdq
(bad)
cmp
lea
in
fld
fcomp
jmp
int
push
or
push
xchg
inc
sub
ffree
(bad)
stc
jbe
or
push
inc
inc
scas
pop
call
adc
std
imul
cld
push
mov
pop
into
je
fild
push
jge
ins
enter
hlt
shr
xchg
or
cmc
adc
mov
push
sbb
xchg
pop
and
lods
cs
popa
out
sub
lods
jmp
sar
pop
aam
aad
icebp
push
imul
push
ds
pop
cmp
pop
mov
iret
inc
jo
push
mov
arpl
jns
pop
sti
pop
(bad)
mov
dec
lods
jo
pop
or
dec
cmp
pop
ficomp
shl
jmp
mov
sub
push
adc
cmp
dec
lods
aad
push
out
in
sbb
cdq
lahf
cmps
xchg
jno
rcr
adc
or
xor
xor
cmp
sbb
shr
pop
xchg
loop
push
sub
fwait
mov
rcr
sub
(bad)
psubw
push
data16
mov
mov
add
adc
lock
movs
lods
jg
pop
repz
loopne
cmc
aas
push
cmc
pop
pop
fisttp
or
xor
fcmovb
in
stos
popa
icebp
movs
fcom
push
jle
pop
mov
add
mov
dec
or
push
lds
dec
mov
and
fadd
pop
or
repz
xchg
sub
es
ficom
(bad)
(bad)
or
arpl
cdq
sub
call
rol
xor
aam
fdiv
push
loope
push
xchg
std
loopne
add
stc
fwait
loopne
and
repz
scas
es
(bad)
cli
mov
cmp
mov
mov
cmc
fmul
lock
jl
mov
enter
(bad)
(bad)
xor
xchg
lock
xchg
dec
adc
ret
js
adc
repz
jmp
mov
movs
movs
loopne
fild
push
sbb
jno
mov
cwde
mov
jae
dec
dec
adc
and
mov
cmc
(bad)
icebp
call
sub
mov
cmp
mov
ss
add
retf
cmc
sbb
adc
outs
bound
cld
movs
jne
das
in
jg
jge
test
cwde
arpl
mov
cs
test
repnz
lods
in
adc
fnstsw
sbb
jge
mov
and
push
sub
out
sahf
retf
pop
aas
cmp
add
xor
es
in
dec
mov
add
loope
scas
call
(bad)
pop
mov
sub
jp
lods
fsubr
mov
mov
sahf
addr16
mul
xchg
sub
rol
retf
test
or
sbb
push
ja
(bad)
jne
push
call
push
cmp
add
sub
pop
mov
icebp
pop
sbb
push
in
sub
sub
push
dec
cmp
xchg
cmp
das
adc
cmp
aad
cld
pop
call
or
jmp
sbb
push
xor
push
in
cmp
sub
xchg
cmp
cmc
jb
and
retf
lods
int
xor
xor
cs
pop
push
retf
cmp
dec
dec
cmp
cs
add
retf
dec
push
shl
std
(bad)
push
stc
fdiv
and
pop
dec
or
cmc
dec
pop
add
add
sbb
jno
les
or
jae
dec
shl
sbb
xor
aam
sbb
mov
test
iret
std
pop
sbb
mov
stos
push
mov
xlat
adc
cmp
loope
mov
mov
sbb
retf
pop
sbb
or
cmp
int3
mov
sti
mov
jmp
jmp
rcr
test
daa
jecxz
inc
xchg
jns
fimul
xor
ins
adc
dec
push
movs
repnz
dec
dec
es
ins
mov
push
enter
pop
jnp
add
adc
and
imul
test
mov
dec
mov
pop
outs
ss
ins
cmp
repz
pop
sub
(bad)
fwait
mov
pop
mov
arpl
or
sub
emms
bound
out
jbe
adc
pushf
les
scas
fs
adc
sahf
shl
vfrczsd
mov
push
and
mov
push
xor
push
mov
inc
add
dec
rcl
fldcw
mov
mov
test
cmc
xor
jae
sub
stos
test
mov
popf
sub
mov
(bad)
push
xchg
fmul
outs
xchg
hlt
add
and
xlat
adc
xor
inc
mov
loopne
xor
pusha
push
jp
sub
(bad)
loop
inc
sub
mov
outs
gs
xor
or
ret
movs
pop
and
sbb
(bad)
in
add
imul
std
dec
or
mov
xchg
dec
xor
not
push
mov
shl
(bad)
cmps
pusha
pusha
loop
aas
cmp
test
inc
jne
inc
sbb
sbb
jmp
xor
jns
inc
dec
sar
mov
or
inc
push
(bad)
fiadd
jp
jmp
(bad)
data16
leave
sbb
aaa
jmp
iret
xor
xchg
xchg
mov
dec
ret
and
in
dec
push
cmp
ss
jmp
jge
fs
pop
push
shl
lock
and
add
add
cmp
mov
enter
ds
fwait
mov
fnstsw
movs
pop
jb
scas
inc
popf
lods
adc
into
jg
add
addr16
xchg
xchg
pop
pusha
pushw
mov
sub
fcom
xchg
movaps
(bad)
jl
lahf
pcmpeqw
dec
xchg
rol
sub
test
cmp
pop
mov
iret
adc
jmp
imul
iret
fild
stos
cli
in
add
mov
repz
test
sbb
sahf
xlat
sbb
add
cmp
scas
aas
inc
ins
cli
mov
addr16
cmovae
cmp
and
dec
rol
in
je
pop
mov
mov
pop
push
rol
lods
test
cmp
std
call
lds
mov
and
dec
push
or
out
fidiv
push
pop
sub
(bad)
movs
sub
shl
ret
mov
and
xlat
dec
push
mov
cmp
sbb
leave
or
jmp
xor
xchg
call
dec
cwde
or
lahf
idiv
or
loopne
push
adc
popf
xchg
adc
imul
cmps
in
dec
hlt
sti
pop
mov
mov
mov
fild
dec
cmp
data16
(bad)
cmp
or
je
data16
jg
pop
push
pop
sub
cmp
sub
add
hlt
nop
xor
jmp
or
adc
ja
cld
cwde
add
mov
and
fisub
pop
iret
mov
jbe
dec
or
call
hlt
dec
stos
and
sbb
fdiv
and
jo
xor
xchg
sti
dec
push
push
adc
and
dec
loopne
ja
cmp
cmp
push
fldenv
jl
addr16
lods
test
pop
out
les
and
repz
inc
push
cs
jmp
dec
sahf
mov
mov
test
div
out
iret
push
retf
push
je
or
pop
popa
enter
push
mov
fnstenv
out
scas
xor
in
add
mov
sub
ins
xchg
out
xor
adc
mov
cmp
cmp
add
or
pop
dec
add
xor
(bad)
jb
push
adc
fwait
sahf
bound
std
std
pusha
movs
(bad)
imul
xor
dec
lahf
ja
je
ficom
mov
movups
outs
std
leave
bound
pop
loop
call
mov
scas
xor
jno
and
xchg
scas
(bad)
in
inc
ret
sahf
cwde
aam
arpl
ss
repnz
dec
jp
jmp
or
inc
add
dec
je
cwde
mov
jo
jmp
imul
add
sub
rol
lds
xor
mov
mov
add
adc
rcr
sub
mov
in
mov
(bad)
addr16
sbb
fcom
push
outs
fisttp
call
cmp
jmp
xchg
xlat
inc
hlt
dec
ss
inc
mov
outs
out
adc
or
jle
movs
and
mov
fst
movs
call
pushf
mov
retf
(bad)
xchg
rol
add
outs
arpl
mov
dec
or
sahf
mov
push
cmp
mov
push
(bad)
js
pusha
pop
int
and
pop
daa
jae
test
retf
add
stc
sar
xchg
push
adc
mov
scas
sub
sbb
out
dec
into
fwait
sbb
cmc
add
fs
mul
add
mov
xchg
rcl
push
or
and
jl
fwait
push
rol
shr
xchg
sub
repnz
out
ins
adc
xor
cmp
push
or
lods
retf
dec
mov
div
movs
sbb
jmp
bound
jo
shl
inc
push
mov
mov
adc
fisubr
outs
bound
cmp
lods
inc
xchg
shr
test
jge
inc
and
cmp
mov
sub
dec
idiv
repnz
lods
frndint
iret
repnz
push
repz
add
adc
iret
imul
stos
sub
in
add
aam
mov
cmp
test
xchg
(bad)
mov
rcl
push
pop
jb
jne
and
addr16
call
movs
jbe
stos
xchg
jmp
xchg
lea
inc
int
mov
aad
nop
cdq
or
rcr
iret
jp
sub
jge
xchg
adc
mov
dec
fild
and
mov
(bad)
daa
cmp
inc
fidivr
in
cdq
xor
loopne
mov
sub
out
cli
mov
xor
iret
adc
and
jb
std
xchg
and
loopne
popa
pop
fdiv
pop
push
xlat
fsub
and
sub
sub
in
std
cmp
mov
test
lods
cmp
push
sub
sbb
sub
pop
clc
cmps
movs
enter
aad
push
inc
or
loop
sub
adc
push
lds
jno
mov
jne
xchg
(bad)
je
shl
outs
sar
addr16
adc
mov
sti
lea
bndldx
or
bound
mov
mov
and
or
enter
add
fidivr
mov
jle
dec
jns
mov
loopne
loop
inc
push
mov
pushf
add
jno
cmp
sahf
or
ret
push
fadd
xchg
add
shl
pushf
aad
mov
dec
cwde
pop
mov
mov
and
mov
xor
sub
test
push
nop
xchg
nop
adc
push
enter
xchg
cmp
sbb
push
pop
mov
or
mov
cld
cdq
and
test
dec
dec
aas
sbb
ja
xchg
in
mov
xchg
outs
jg
sub
cmp
cmc
and
or
mov
sub
je
inc
pop
leave
pop
leave
fcmovu
retf
fs
jmp
test
mov
inc
(bad)
jmp
inc
push
dec
and
dec
and
cmc
and
xchg
and
movs
sub
sahf
fs
add
aad
mov
dec
mov
jo
pop
jg
push
rcr
sub
gs
mov
into
mov
imul
das
lods
xchg
call
inc
push
div
or
mov
outs
js
(bad)
or
inc
scas
or
pusha
sbb
out
or
aas
pop
cmp
cdq
es
and
in
inc
xor
and
push
cdq
ins
dec
aad
js
mov
push
add
sbb
ss
mov
sbb
cmps
call
and
in
dec
mov
ins
sub
popa
xor
pop
xor
cmps
or
jle
outs
xchg
inc
das
mov
adc
sub
into
push
push
push
xor
or
xchg
adc
dec
dec
arpl
add
scas
mov
retf
(bad)
cmp
jne
imul
dec
fs
lea
out
cmp
mov
push
(bad)
mov
mov
push
arpl
(bad)
mov
pop
adc
nop
cwde
mov
and
and
retf
cli
in
add
test
adc
jbe
jae
xor
or
xchg
enter
xchg
xchg
fadd
jmp
bound
aam
aas
push
sbb
ins
mov
lds
into
or
mov
push
cmp
shr
je
mov
pop
push
in
mov
fisub
mov
in
pop
add
out
push
push
cmc
js
xchg
es
dec
pop
lds
cli
mov
inc
xor
mov
idiv
or
test
push
and
jecxz
test
mov
loop
lock
fistp
mov
(bad)
mov
adc
xor
hlt
fst
push
cmps
pop
addr16
hlt
das
push
popa
add
imul
sbb
mov
sbb
test
push
jecxz
mov
jno
sar
mov
lea
cld
arpl
sub
xchg
dec
sub
add
sub
in
jmp
mov
push
push
into
test
jmp
mov
lods
mov
dec
fst
pop
or
hlt
push
inc
pop
push
aam
cmps
call
dec
xchg
movs
fcmovnu
cs
or
mov
int
rcr
and
test
jge
mov
xchg
in
sub
pushf
cli
mov
repz
sbb
int
icebp
sahf
jmp
in
jle
jle
inc
pusha
and
cmp
fild
mov
movs
ins
jmp
inc
pop
jp
add
xor
add
or
mov
xchg
js
mov
scas
dec
mov
in
mov
dec
stc
adc
ret
jns
inc
xchg
push
mov
arpl
dec
bound
cmp
push
sub
jne
fchs
lods
mov
dec
daa
test
xchg
nop
movs
lods
push
and
sbb
push
(bad)
cmp
popf
inc
stos
dec
mov
push
call
mov
(bad)
cmp
mov
call
pop
fsub
mov
es
fst
and
xor
add
or
mov
lods
inc
movs
mov
je
vsqrtpd
jmp
jae
mov
or
lods
lea
jno
shl
cli
sub
cmps
push
fwait
push
jnp
or
sar
xor
cwde
xchg
add
out
jmp
push
stos
cwde
inc
ror
xlat
and
loope
sub
pusha
shl
mov
push
adc
jno
dec
iret
shr
cmp
jp
dec
rcl
sbb
cmps
rcl
ret
push
cli
xchg
jns
mov
cmc
sbb
or
stos
arpl
mov
mov
dec
jb
push
repz
ds
icebp
jno
dec
jo
xchg
rol
es
ficom
cld
cmp
shl
inc
push
cmp
idiv
mov
xchg
out
push
xchg
jbe
in
jle
js
xor
ins
lea
scas
mov
sti
dec
lds
xor
lods
sbb
adc
push
enter
dec
rcl
mov
jb
cmc
xchg
ds
lods
and
ds
mov
jno
and
pop
push
lahf
mov
leave
inc
adc
jl
xchg
inc
inc
ss
je
mov
mov
or
in
sbb
fdiv
dec
or
or
fs
mov
push
push
push
imul
or
adc
mov
jbe
pop
das
js
xchg
jmp
js
es
pop
jp
out
lds
loop
sahf
ja
psubsw
stos
fcmovnu
inc
and
inc
fs
hlt
jp
pop
pop
aaa
push
rcl
je
cli
inc
add
fs
xchg
(bad)
jns
inc
ja
cld
fs
or
cdq
adc
movs
and
cs
xchg
test
je
add
clc
mov
shl
push
or
sub
mov
pop
xlat
mov
jmp
jne
mov
and
pop
or
jae
mov
mov
cmp
dec
adc
popa
jbe
pop
xor
mov
inc
adc
in
mov
loopne
or
mov
push
enter
pop
sbb
dec
sub
dec
jns
fcomp
mov
and
mov
mov
mov
std
mov
mov
add
fcomi
fnstcw
test
mov
sbb
fcomp
mov
sub
mov
xor
fld
mov
out
and
outs
cdq
movs
xlat
dec
jae
xor
call
mov
shr
mov
sub
aaa
in
jns
xlat
jne
sbb
retf
pop
dec
pop
sahf
adc
into
xchg
add
cmp
scas
call
mov
push
cmps
pushf
shl
sub
(bad)
cld
rol
ret
and
imul
clc
dec
inc
out
pop
mov
mov
retf
mov
aaa
popa
pop
jb
aad
enter
ins
xchg
cli
adc
lahf
stc
sbb
mov
push
iret
inc
neg
push
out
test
mov
inc
scas
repnz
movs
sbb
or
pop
push
jno
call
call
jae
scas
retf
sub
int3
push
hlt
mov
fiadd
ror
dec
and
daa
and
mov
fwait
ds
pop
mov
aam
inc
sub
inc
adc
push
das
rcl
jle
data16
rol
ins
js
sub
add
std
mov
dec
lods
stos
nop
jne
mov
adc
enter
jnp
(bad)
lahf
jns
les
loope
or
sbb
enter
popa
jbe
xchg
fild
jp
arpl
imul
mov
lods
imul
push
popf
mov
not
mov
ja
fldcw
adc
ret
inc
stos
jp
jp
mov
xor
loopne
adc
mov
(bad)
pop
(bad)
mov
dec
dec
and
mov
push
cmc
xchg
call
loopne
mov
jmp
jecxz
iret
inc
mov
xchg
hlt
dec
sub
or
lock
bound
in
push
pop
sub
add
adc
mov
movhps
adc
scas
adc
not
inc
loop
(bad)
jg
test
mov
inc
pop
fnstenv
lahf
pop
(bad)
popa
aad
sub
inc
mov
mov
cmp
outs
or
mov
xchg
inc
call
aam
out
xchg
outs
jns
pop
jp
jno
fs
jno
jbe
pop
dec
pushf
enter
jnp
push
mov
jge
outs
sbb
repz
test
lods
sbb
mov
mov
xor
xor
jl
pop
and
jge
arpl
sahf
mov
(bad)
cmp
xchg
push
icebp
sbb
dec
cmp
and
inc
jle
add
mov
xchg
cmp
movs
dec
inc
jnp
stc
(bad)
movs
cmc
pushf
dec
cmc
jne
lds
push
loop
adc
push
jmp
ins
cwde
mov
(bad)
jno
jmp
cs
(bad)
sbb
pop
mov
push
and
mov
retf
daa
or
dec
mov
ret
jge
out
push
jl
cmc
imul
xor
sbb
fsubr
mov
mov
es
(bad)
jo
loop
and
jne
repnz
imul
adc
pop
fidivr
shl
and
push
pop
leave
xchg
dec
mov
fstp
adc
cmps
lahf
int
xor
and
(bad)
xchg
push
or
push
dec
outs
pop
mul
scas
pop
adc
sbb
add
lods
ins
pop
inc
add
outs
inc
retf
xchg
rol
idiv
mov
mov
cmp
cwde
cmp
arpl
cmps
scas
pop
ins
jnp
jge
ins
add
jl
push
xchg
enter
mov
loopne
inc
inc
dec
adc
in
div
inc
mul
lea
leave
lock
stos
and
(bad)
xchg
add
mov
imul
cmps
pop
mov
test
push
js
je
and
cdq
jmp
(bad)
stos
add
mov
add
pop
add
mov
fistp
pop
sbb
div
sub
adc
xor
aas
sub
stc
pop
push
ror
mov
mov
xchg
add
jb
sub
rcl
mov
mov
add
mov
push
or
mov
and
cmp
aad
jbe
repz
aaa
pushf
aaa
push
shl
mov
add
hlt
xor
pusha
sar
call
fcomi
mov
out
jmp
fld
lock
daa
mov
jnp
es
mov
fnstcw
sub
mov
adc
mov
loopne
push
nop
jne
lahf
mov
xor
dec
rcl
stc
add
rol
jo
mov
fstp
push
push
aam
mov
xchg
(bad)
fnsave
inc
fs
push
mov
cdq
add
lds
icebp
es
jnp
shl
mov
dec
xrelease
jg
imul
shr
enter
jg
cmc
movs
hlt
pusha
mov
(bad)
iret
aas
sub
pop
mov
or
(bad)
fsub
mov
mov
push
xor
cmps
out
ret
cld
add
cmp
lock
daa
cmps
jb
shl
repz
ins
bound
or
mov
fmul
mov
sahf
xchg
or
sbb
shl
push
loope
pop
inc
or
test
data16
lahf
cmc
pop
in
jnp
ret
sub
xchg
and
xchg
jmp
sbb
xchg
cld
cdq
push
scas
stos
mov
leave
lea
(bad)
shl
mov
mov
adc
std
sub
pop
retf
fnstsw
push
add
xor
(bad)
out
mov
stc
jmp
lds
icebp
and
sti
ins
jp
addr16
rep
aad
fist
xlat
jmp
jne
inc
xlat
sub
sbb
xchg
jle
rcr
scas
push
scas
sub
fcmovne
or
fldenv
push
movs
jge
push
test
pop
pop
pushf
or
cdq
out
cld
jae
ret
daa
add
push
stos
lods
pop
xchg
adc
or
mov
push
add
mov
or
fisub
movs
test
repz
cmp
pop
dec
mov
aam
dec
out
into
pop
cmp
mov
mov
dec
pop
push
shr
mov
into
ins
sub
jno
(bad)
xchg
sbb
and
mov
pop
lods
push
and
shr
xchg
push
xor
lahf
scas
adc
jne
push
adc
cs
hlt
outs
mov
sti
inc
xor
test
cli
fistp
repnz
les
fidiv
push
sti
push
push
test
pop
fsubr
addr16
pcmpgtd
int3
imul
xchg
mov
push
shl
push
ins
and
xor
aad
cmps
div
pop
sub
scas
mov
sub
dec
xor
mov
out
mov
fdiv
cmp
or
push
dec
movs
call
ds
add
inc
inc
mov
stos
add
mov
cs
aam
inc
out
cmp
lods
xor
fcomp
fild
ret
sub
int
aas
cmp
setbe
xor
mov
add
inc
cli
stc
cmps
and
dec
xchg
mov
xchg
add
mov
arpl
inc
add
add
popa
pusha
xlat
lock
dec
pop
xor
add
add
xchg
cmp
sub
mov
sbb
jp
xchg
dec
out
mov
push
mov
pop
or
lods
fs
cwde
popf
jmp
add
loopne
sbb
test
gs
pop
scas
je
jne
popa
mov
mov
xor
rol
enter
out
adc
imul
jge
sbb
cmp
sahf
xor
(bad)
cdq
shr
dec
sbb
pop
repz
mov
inc
jae
imul
lods
mov
fimul
xchg
jno
jmp
add
cwde
xchg
das
dec
popa
nop
mov
pop
jae
push
aas
or
into
ret
dec
adc
mov
je
fnstsw
hlt
mov
dec
cwde
push
pop
add
push
(bad)
dec
cs
sbb
mov
jns
cdq
outs
mov
xchg
sub
mov
push
push
arpl
xor
mov
mov
ja
fst
cmc
pop
cmps
daa
mov
ins
adc
push
mov
or
cmp
pop
ins
test
add
xchg
push
adc
dec
in
jo
cmp
stc
dec
jecxz
outs
jbe
and
aas
or
and
loopne
outs
xchg
mov
in
xor
das
ins
sbb
sub
mov
popa
retf
xor
(bad)
jg
inc
aad
add
in
loopne
and
jo
leave
mov
call
loopne
test
jmp
push
ins
xor
sub
gs
popa
dec
jg
pushf
and
inc
push
mov
xor
sbb
push
mov
ror
mov
outs
call
subps
icebp
add
push
std
or
jp
cmps
nop
out
or
mov
mov
pop
bound
repnz
adc
js
test
imul
push
inc
loope
sbb
iret
mov
les
pop
ss
cmp
cmp
pop
add
icebp
jb
cmp
add
mov
test
test
loope
or
push
fdiv
stc
into
jle
(bad)
movs
neg
xor
mov
rcr
arpl
cwde
push
iret
out
and
and
in
or
aam
mov
jnp
mov
mov
sub
xchg
retf
jne
push
and
(bad)
std
mov
neg
dec
jae
sub
pop
sbb
retf
dec
mul
ja
pfcmpge
es
movs
dec
fbld
mov
ja
adc
jl
sbb
repz
cmps
std
gs
loopne
ja
ficomp
jae
out
dec
fcomp
ins
aad
or
retf
push
sbb
pop
out
cld
sub
and
mov
out
mov
mov
lods
push
adc
jecxz
xor
or
push
addr16
jne
cmp
sub
sbb
mov
jecxz
xor
mov
cmp
std
or
movs
push
out
add
mov
inc
jle
movs
les
movs
inc
adc
push
fwait
bound
jne
inc
jbe
pop
in
push
stc
loope
or
sub
add
pop
lods
jle
gs
into
jl
xor
or
push
push
mov
push
mov
jns
adc
xchg
mov
out
(bad)
xchg
loop
inc
sbb
lds
jb
pusha
aas
cdq
loopne
xor
jbe
dec
or
ror
dec
aam
sbb
retf
or
fistp
ja
out
aad
dec
mov
adc
fs
adc
mul
out
(bad)
(bad)
and
fld
sub
cmp
cmps
inc
or
jbe
pop
sbb
cld
call
mov
xlat
fs
daa
push
(bad)
mov
adc
pop
ret
in
mov
xlat
sub
mov
fimul
cmp
mov
add
inc
jae
add
pop
out
es
sar
call
pop
icebp
push
ins
push
out
pop
daa
js
repz
xchg
add
xlat
imul
push
(bad)
jo
sbb
or
xchg
or
test
nop
loop
xlat
or
lea
jge
mov
mov
nop
ins
add
fstp
loop
ficom
mov
hlt
and
lds
es
pop
mov
out
out
adc
mov
mov
mov
loope
push
movs
call
push
pop
pushf
dec
fs
inc
loopne
mov
xlat
add
out
je
or
loop
jecxz
xor
rep
push
and
pop
xchg
or
pop
(bad)
test
pop
ret
cdq
sar
iret
rcr
fnstenv
pop
pop
push
add
mov
not
ror
cmp
bnd
pushf
cmp
or
add
dec
add
push
movs
scas
mov
imul
inc
pop
xor
and
lods
inc
daa
inc
jne
fcmovnb
mov
es
mov
sub
push
mov
je
not
xor
jns
cmp
sub
sahf
mov
jmp
in
dec
pop
enter
jle
add
ins
and
stc
sbb
iret
mov
inc
imul
inc
xor
add
jp
call
clc
ret
jb
in
dec
mov
or
retf
inc
or
out
mov
loope
cwde
mov
cmps
and
dec
xor
xchg
mov
dec
int3
sbb
hlt
(bad)
jl
call
push
adc
(bad)
loopne
int3
in
xlat
pop
lods
test
in
pop
mov
aad
sbb
xor
nop
add
push
je
xchg
and
pop
sub
jl
sub
or
stc
and
sahf
repz
ins
vcvtdq2ps
rcr
xchg
je
aad
stos
sub
std
sbb
cmp
mov
scas
lds
aad
loopne
add
mov
imul
jae
stos
or
jae
sub
or
out
mov
push
push
mov
imul
movs
loopne
aaa
sbb
sbb
jle
rcl
and
inc
jmp
cli
and
jbe
(bad)
nop
inc
adc
outs
jns
(bad)
mov
or
xor
loope
fwait
movs
and
mov
inc
pop
add
push
and
adc
dec
pushf
or
mov
lock
loopne
adc
test
shr
les
push
(bad)
(bad)
arpl
mov
mov
movs
push
fisubr
mov
movs
pop
adc
sub
out
add
fwait
mov
(bad)
cmp
loopne
(bad)
stos
ss
and
int3
std
(bad)
fsubr
cmps
xchg
jnp
fdiv
or
xor
repnz
out
xor
aaa
adc
and
and
mov
inc
imul
inc
mov
push
sub
mov
sbb
ret
fs
daa
jae
(bad)
sub
mov
pop
mov
sbb
les
test
push
shr
and
or
in
js
inc
mov
mov
and
and
adc
cs
sbb
mov
xchg
test
lock
push
xchg
out
in
scas
loop
jbe
jae
cmp
hlt
mov
mov
stos
call
jb
dec
and
mov
fsub
xor
imul
cmps
jae
fmul
gs
aam
pusha
addr16
jmp
or
fsubr
cmp
xchg
sbb
push
pusha
das
mov
and
ds
pop
je
inc
xlat
fadd
repnz
xchg
fbstp
mov
sbb
sbb
imul
and
das
mov
mov
lock
inc
xor
mov
addr16
ror
mov
fistp
push
xchg
or
and
dec
out
add
jge
(bad)
jmp
mov
xor
test
call
mov
(bad)
push
cwde
into
xor
jae
ror
fldcw
push
fwait
pop
cmps
add
movs
push
xchg
lahf
(bad)
cmc
inc
pushf
adc
push
xlat
adc
(bad)
pop
mov
loope
sti
pop
push
sub
or
not
sbb
xor
cmp
fidivr
push
pop
dec
jae
cmp
fmulp
jae
ja
mov
(bad)
and
and
mov
cmp
push
aad
pop
clc
jecxz
test
retf
xlat
pop
daa
pusha
jns
mov
xor
inc
mov
sbb
(bad)
out
imul
inc
and
add
inc
rcr
or
adc
mov
out
test
jne
add
mov
or
rcr
lahf
or
and
ins
add
movs
cdq
inc
call
out
fcomi
test
in
fadd
(bad)
ror
xchg
aas
std
push
in
xchg
add
mov
div
in
enter
mov
rcr
ror
xor
mov
xchg
fisub
or
aam
mov
aaa
xchg
dec
cmc
inc
mov
test
sahf
mov
test
popf
rcr
repnz
imul
repz
cmp
int
and
push
push
and
dec
fisubr
hlt
inc
inc
fnstenv
push
adc
pop
mov
out
mov
push
mov
rol
outs
dec
xchg
push
xor
sub
out
outs
movs
sub
sbb
aam
(bad)
add
enter
fucomi
push
dec
pusha
arpl
out
jne
pop
pop
rcr
popf
xchg
push
push
jb
xchg
cmc
pusha
es
mov
in
mov
and
xor
cmp
xchg
popa
add
movd
xor
mov
ins
call
leave
stos
xor
adc
jno
push
pop
mov
sar
retf
inc
sub
int3
inc
push
jae
push
dec
lahf
sar
mov
outs
push
pop
sbb
add
xchg
icebp
add
leave
rcl
xchg
xchg
jbe
and
jp
femms
fsub
ficom
out
lahf
inc
cmp
pop
enter
aam
mov
pop
mov
xor
and
lea
mov
stos
add
or
jge
scas
popf
inc
movs
nop
adc
jo
jo
dec
push
push
inc
adc
gs
data16
movs
dec
call
retf
xor
mov
ficom
sub
mov
adc
pop
lods
ja
loop
xor
cmps
push
imul
xchg
push
or
push
mov
push
fimul
jo
xor
sub
lahf
nop
mov
fs
mov
fsubr
xchg
or
stc
mov
stos
and
dec
bound
xor
imul
pop
mov
jne
stos
cmp
int3
loope
dec
arpl
je
imul
enter
push
sbb
jg
push
sti
test
push
cmp
push
retf
dec
cld
xchg
xor
xchg
daa
add
outs
pop
cmp
repz
xchg
dec
aaa
pop
mov
daa
or
sub
cld
cmps
inc
cmc
test
in
sbb
and
sub
outs
sub
movs
jg
test
int
shl
add
imul
hlt
imul
lods
mov
add
mov
inc
push
lds
cmp
inc
dec
in
shl
imul
lock
fisubr
fcomp
cld
dec
push
push
cwde
jge
pop
pop
mov
dec
cmp
push
(bad)
retf
imul
aas
xchg
mov
add
lock
push
xor
push
lock
int3
test
sbb
cld
sub
mov
sbb
ficom
dec
pop
jl
cli
(bad)
in
push
sub
fsub
lds
outs
adc
lds
jne
dec
inc
inc
sbb
mov
mov
(bad)
pop
mov
jmp
mov
fstp
jnp
loope
xor
ins
repnz
and
pop
xlat
cs
xor
xchg
or
shl
xchg
push
fld
mov
jle
mov
mov
push
ret
test
es
sbb
mov
push
mov
jp
jge
cmp
sub
push
inc
xor
xor
ins
adc
xchg
test
enter
mov
xchg
aad
push
(bad)
mov
leave
cmp
data16
adc
jo
(bad)
and
sub
push
in
mov
xlat
mov
mov
in
ds
xor
(bad)
stc
stos
mov
mov
pop
imul
push
fwait
pop
sbb
jl
jmp
inc
adc
mov
sti
jbe
fisub
bnd
shl
xchg
sub
xchg
stc
pop
xor
rcr
int
and
mov
mov
mov
or
(bad)
jne
in
adc
mov
mov
mov
call
dec
out
lds
mov
mov
mov
jmp
sbb
mov
adc
or
cmp
(bad)
movs
mov
loope
inc
cmp
(bad)
cmp
add
rol
sub
adc
das
cdq
dec
lods
sub
inc
push
lods
je
cwde
scas
mov
pop
std
mov
fisub
inc
cmovns
cmps
icebp
imul
push
xor
push
jecxz
mov
pop
retf
outs
and
jmp
pop
push
in
je
ret
jp
int3
aas
mov
scas
fmul
mov
add
push
lea
lock
sub
pop
repnz
cmp
mov
or
not
cmp
nop
jo
cmp
pusha
test
mov
inc
in
jno
mov
push
adc
xchg
dec
jmp
(bad)
sbb
xchg
(bad)
jne
xor
adc
add
xor
fsubr
adc
add
xlat
inc
cwde
adc
addr16
retf
jb
imul
aas
mov
repz
sbb
xor
mov
in
imul
cmp
(bad)
adc
test
out
xor
(bad)
or
pop
lea
test
and
call
ret
pop
fsub
and
pop
xchg
lds
lahf
mov
add
aam
xchg
out
jmp
retf
or
(bad)
das
ja
add
stc
xor
cmps
push
scas
xor
fisubr
scas
sahf
or
scas
xor
imul
jg
hlt
push
hlt
mov
ficom
(bad)
loopne
cld
lds
cmp
call
enter
daa
das
cmp
ret
popf
clc
jp
xchg
or
inc
pop
or
cli
in
and
jne
aad
test
mov
jp
imul
mov
dec
fldcw
add
sbb
fs
fimul
pop
xchg
xchg
push
fiadd
out
jne
add
out
mov
test
dec
push
add
neg
sub
xchg
test
inc
xchg
xlat
adc
fimul
pop
psrlq
adc
mul
and
retf
out
cwde
rcl
sub
cmc
dec
mov
pop
sub
xor
inc
sahf
inc
push
push
iret
ds
jl
pop
mov
cdq
add
movs
mov
and
push
lods
cmps
ret
(bad)
pop
xor
mov
ins
mov
jmp
xchg
mov
inc
or
les
lods
mov
(bad)
and
ja
sbb
call
aam
cmp
in
push
jo
mov
cmc
pop
cmc
sub
sub
inc
bound
mov
jbe
fidivr
(bad)
lods
lock
retf
add
into
ins
xor
ins
xlat
fistp
mov
iret
lea
shl
sti
fist
int
lahf
adc
cmp
jg
(bad)
mov
jecxz
fstp
outs
push
popf
pop
stos
and
sbb
push
inc
daa
ins
jbe
jg
dec
or
mov
pop
pop
push
shr
mov
retf
lods
repz
mov
xchg
fiadd
lahf
push
or
sahf
cmp
outs
inc
xor
dec
adc
scas
xor
jle
adc
jns
pop
enter
loop
into
outs
outs
aaa
scas
push
jg
sbb
mov
xor
push
in
call
jmp
cmp
sbb
ds
mov
mov
cld
jb
les
loop
test
jl
cmp
add
xchg
cmp
and
cmps
iret
add
fstp
in
sub
fld
dec
lock
aam
aaa
bound
fbstp
fs
pop
cmp
dec
outs
xchg
lss
pop
dec
popf
inc
in
or
sub
jg
pop
cmps
lods
dec
out
adc
mov
aam
mov
repnz
sub
(bad)
in
pop
cmps
cld
fcmovnbe
int
dec
adc
int3
push
movs
add
dec
(bad)
jmp
popa
add
stos
push
push
fild
(bad)
dec
nop
ud2
inc
imul
pop
outs
jne
mov
add
rcl
repz
mov
loope
adc
xlat
or
ficomp
and
test
loopne
mov
jnp
pop
mov
push
and
mov
fimul
sbb
or
cld
and
lock
stos
inc
mov
call
xchg
xlat
jns
stos
popf
dec
arpl
inc
or
xor
bound
push
cmps
sbb
dec
mov
js
xlat
adc
mov
rcr
jp
ss
loopne
xor
or
hlt
aas
jno
outs
cmp
dec
hlt
and
mov
popa
mov
xchg
mov
stos
and
imul
pushf
sbb
lds
lods
in
fdivp
sahf
push
js
movs
adc
push
call
call
clc
jmp
test
push
aas
sbb
xchg
retf
jne
mov
inc
jbe
stc
sahf
cli
fisub
or
repnz
dec
jp
cmp
adc
jnp
out
adc
pop
ror
adc
lock
inc
inc
mov
or
cmp
and
fistp
das
push
dec
loope
and
out
fld
cmps
bnd
ror
std
sub
mov
stc
mov
cdq
out
loop
cdq
clc
stc
rol
cmp
das
add
dec
push
test
mov
add
jnp
adc
test
je
mul
sar
(bad)
aam
push
repnz
aad
fild
int3
adc
xchg
xor
xchg
xchg
cmp
(bad)
aaa
sbb
out
clc
enter
out
loop
dec
mov
outs
mov
mov
cmp
cmp
bound
push
shl
call
jmp
mov
pop
and
fimul
push
or
xchg
push
rcr
mul
push
push
mov
and
jnp
sub
and
add
jmp
add
or
sub
mov
adc
adc
cwde
clc
sti
jne
inc
mov
cmp
mov
or
je
jnp
pop
push
retf
push
mov
xchg
push
sub
icebp
(bad)
fwait
sbb
cld
xlat
mov
mov
(bad)
xor
inc
je
ror
and
aas
test
(bad)
mov
dec
les
int
and
cmps
in
hlt
jb
mov
sbb
das
popa
add
adc
sub
adc
(bad)
xor
and
out
into
and
cs
dec
mov
sbb
adc
sbb
mov
and
movs
in
fcomp
rcr
dec
jmp
mov
test
push
call
lods
mov
into
stos
pop
lods
je
retf
scas
pop
cld
stos
mov
lahf
push
add
mov
pop
movs
outs
xchg
fidivr
sbb
ret
add
cmp
push
adc
je
cwde
cdq
clc
pop
pop
dec
jmp
ds
ficom
xchg
popa
cmc
adc
or
push
jbe
ds
cmp
shr
rol
dec
shr
mov
or
jmp
das
(bad)
shl
popa
mov
adc
in
(bad)
lods
into
jb
jnp
repz
aam
fucomp
popf
scas
sbb
xchg
call
mov
js
pop
cmps
(bad)
ins
sub
scas
(bad)
mov
retf
popf
and
out
sti
mov
inc
sbb
icebp
jmp
inc
xor
movs
adc
jecxz
mov
scas
imul
inc
sub
jl
std
xor
xchg
jg
mov
ror
push
ins
sub
jo
inc
sub
mov
es
lods
repnz
inc
and
aad
movs
cmp
dec
jecxz
cmps
(bad)
in
cmps
cwde
clc
cmp
fwait
push
rcl
jbe
std
push
lahf
pop
stos
mov
je
xchg
fwait
pop
aad
push
(bad)
sti
mov
xchg
mov
inc
push
fisubr
and
lock
jp
or
cmps
mov
add
mov
inc
pop
or
jp
fst
test
sub
mov
pop
cwde
adc
mov
(bad)
xchg
fcmovnbe
inc
adc
call
stc
sub
lds
inc
or
(bad)
or
xchg
ret
dec
jnp
jne
ds
cmp
(bad)
or
je
adc
jmp
mov
mov
into
sbb
mov
dec
dec
mov
mov
jo
and
push
push
cmp
ds
cmps
dec
ja
nop
fbstp
jnp
mov
mov
call
lds
xor
(bad)
loope
cwde
pop
xchg
and
sbb
std
lahf
mov
xor
mov
ret
retf
mov
rol
cs
into
cmp
jecxz
dec
cmp
data16
pusha
push
lea
mov
jmp
cmp
inc
mov
scas
xor
hlt
mov
mov
and
inc
loopne
cmp
(bad)
mov
pop
push
push
push
or
(bad)
repz
cmp
xor
xlat
jl
aam
add
sar
and
xor
inc
mov
mov
xor
add
shl
add
mov
scas
add
add
jle
(bad)
mov
daa
inc
out
jmp
lods
cmp
push
js
adc
or
imul
sbb
rcl
mov
aam
cld
push
movs
fst
jbe
pop
outs
xchg
cmp
or
xchg
jle
mov
bound
mov
inc
or
cs
cmp
cld
loopne
(bad)
xchg
movs
test
mov
mov
mov
add
mov
jnp
push
icebp
pop
int3
rcl
mov
ja
or
jne
js
lods
mov
fwait
jp
jecxz
jecxz
mov
fwait
sbb
fcmovne
jnp
sti
or
adc
mov
inc
mov
cmp
retf
push
mov
stos
and
shl
psubsb
mov
stc
xlat
dec
mov
in
add
xchg
data16
jmp
fild
outs
ja
movs
(bad)
and
add
popf
sub
cs
jle
sbb
jmp
ret
retf
stc
xlat
sar
inc
sub
xor
jge
jb
iret
aam
pop
mov
or
lea
jmp
in
sub
outs
pop
inc
jg
jae
mov
mov
inc
in
mov
call
pop
cmp
stos
neg
jge
iret
xchg
or
jmp
sbb
repz
cmps
in
neg
push
loope
mov
ins
das
leave
movs
or
mov
pop
sbb
iret
out
movs
jl
(bad)
cmp
and
(bad)
sti
lahf
call
lahf
ret
test
jge
into
mov
(bad)
jne
ret
test
fisttp
adc
retf
jno
sbb
mov
popf
shl
adc
cmp
icebp
cwde
rol
pop
addr16
pop
pause
sahf
adc
(bad)
pop
nop
jae
push
mov
aam
movs
cmp
mov
inc
popf
fld
sbb
inc
xchg
mov
jo
mov
push
(bad)
jns
cmp
xor
push
sbb
outs
adc
pextrw
mov
pusha
push
dec
inc
retf
mov
push
sub
test
(bad)
mov
ss
fwait
dec
in
lds
inc
lahf
push
cdq
and
aas
lock
or
fldcw
cmp
pop
adc
call
push
int3
scas
mov
mov
cmp
in
fs
sbb
dec
and
mov
jbe
lahf
inc
add
push
or
mov
cmps
cld
movs
add
mov
add
cmp
sub
xor
mov
cdq
or
inc
loop
pop
jbe
leave
add
push
pop
test
repnz
and
ror
stos
xor
push
(bad)
rcr
mov
adc
fsubrp
pusha
jle
pop
rcr
(bad)
add
push
into
retf
xchg
out
out
sub
rol
arpl
xlat
jp
pop
xchg
jge
xchg
mov
sbb
hlt
cs
sub
sar
adc
fsub
cmp
(bad)
pop
xor
xor
inc
jmp
mov
inc
jmp
cmc
cmp
and
div
call
xchg
loope
mov
push
xor
inc
aas
cdq
fldenv
cmp
adc
add
xchg
pushf
leave
push
outs
test
or
push
stc
inc
sar
cmp
pop
sbb
pop
stc
arpl
cmp
into
fild
rcl
aas
es
inc
adc
sti
daa
js
and
mov
mov
inc
call
push
jns
push
mov
stos
or
aad
dec
xchg
pop
push
pop
fxch
retf
push
push
inc
popf
fidiv
add
scas
test
mov
inc
xor
pop
into
add
pop
cmc
mov
ins
mov
jg
lahf
add
inc
mov
fsub
lea
inc
pop
mov
inc
loope
pop
shl
retf
loop
mov
mov
jae
xor
add
std
sub
cmp
pop
dec
push
sbb
dec
repnz
adc
mov
mov
push
data16
std
rcl
xlat
test
repz
fdivr
mov
pop
dec
sbb
(bad)
mov
xchg
neg
jp
in
cli
fidivr
js
mov
cdq
mov
cmp
ret
(bad)
mov
pop
fist
push
ret
sub
xchg
push
in
adc
sti
dec
pop
fsubp
push
mov
and
jne
in
jne
bound
xchg
sub
in
xchg
dec
nop
repz
adc
mov
cdq
pop
xor
fisub
ficom
iret
sbb
addr16
jbe
aaa
jne
lods
retf
push
sub
pusha
jmp
mov
div
push
ret
repz
jns
stos
or
adc
sbb
call
or
sahf
cld
lods
ja
aad
push
pop
inc
sbb
test
inc
into
sub
xchg
shl
jne
add
cmps
pop
mov
and
push
fldenv
das
mov
mov
push
loopne
rol
jnp
jae
les
sbb
cmps
jb
add
mov
dec
and
xchg
jae
jnp
push
xchg
sahf
pop
mov
sbb
ds
int
mov
sub
mov
shl
and
ror
mov
aad
pushf
aam
add
out
loope
nop
sbb
dec
dec
outs
mov
or
test
inc
sub
stc
xchg
cmp
es
ficom
dec
dec
sbb
push
jb
adc
mov
das
xor
adc
add
enter
dec
out
sbb
pop
js
xchg
stc
into
test
jp
pop
mov
repz
cli
xor
mov
xchg
retf
cmc
es
inc
fnsave
fstp
int
sahf
pusha
into
cld
mov
fldcw
cmps
adc
in
push
rcr
repz
pushf
xor
shr
or
sub
mov
sub
mov
sbb
sbb
sbb
outs
ret
jmp
jne
data16
mov
fucomip
sbb
or
(bad)
sbb
out
adc
in
outs
push
push
fs
jmp
jb
cmps
mov
xchg
fbstp
(bad)
cwde
xchg
lock
and
ins
push
retf
xor
and
movs
jmp
mov
imul
sbb
push
pop
jmp
mov
sar
aaa
int3
lods
and
rcl
add
push
cmp
sub
jmp
clc
ds
div
mov
dec
xchg
je
dec
mov
repnz
dec
jbe
(bad)
jne
clc
imul
cmc
test
(bad)
fadd
sbb
rcl
repz
cdq
add
fsub
retf
test
dec
enter
aam
sub
dec
mov
dec
pop
in
jno
out
sbb
add
div
sahf
std
fild
cld
jl
cmc
in
adc
pushf
stos
lods
stos
div
lods
pusha
out
fdiv
stc
mov
imul
das
add
and
push
call
pop
mov
out
pop
fcmove
add
(bad)
cli
inc
adc
outs
jmp
test
inc
inc
ficomp
test
ds
and
test
mov
out
(bad)
or
mov
cdq
dec
outs
push
add
out
mov
pop
jo
mul
mov
popa
adc
mov
push
push
ss
jo
jmp
pop
popa
jmp
jecxz
pop
pop
stos
xor
push
push
push
in
pusha
push
sbb
cmps
and
adc
add
fldcw
int
imul
lock
mov
pop
enter
cld
mov
sbb
push
xchg
and
aaa
(bad)
sar
xchg
xor
dec
sub
cmp
loop
mov
fisub
out
fidivr
mov
dec
and
movsx
or
inc
add
call
pop
mov
add
mov
pop
outs
(bad)
pop
out
xor
mov
js
sbb
or
pop
inc
int
cmc
lock
movs
sub
push
mov
fsub
jne
pusha
stos
cmc
out
test
fcomp
in
mov
push
outs
in
daa
push
and
loop
popf
or
mov
(bad)
fadd
add
push
iret
stos
rcl
xchg
nop
movs
mov
sbb
(bad)
adc
mov
pop
(bad)
gs
cmp
xchg
mov
jmp
mov
out
movs
lods
mov
jge
(bad)
loopne
and
adc
mov
mov
mov
push
pop
lods
cmp
cdq
xchg
cmp
jmp
cmp
aaa
ins
xchg
mov
aaa
das
loopne
test
or
add
nop
xor
mov
nop
addr16
jns
jbe
fdiv
mov
push
inc
mov
push
fsubr
jnp
jbe
xor
cmp
jle
pop
retf
repnz
mov
cmp
or
lods
push
and
sub
and
sub
mov
sub
das
sbb
jb
idiv
popf
gs
stc
shl
adc
aas
cmp
sub
arpl
mov
call
popf
rcr
jbe
sub
ror
leave
rcr
daa
dec
je
sahf
test
out
mov
pop
stos
test
ja
in
jg
push
outs
inc
pop
add
popf
outs
ins
cli
or
test
test
adc
cmp
fsubr
jns
bound
aam
xor
ja
out
adc
test
sbb
retf
xchg
sbb
sub
pop
xchg
int3
xor
lea
jg
rol
or
enter
pop
ret
loopne
cmc
jecxz
inc
cmp
aaa
xor
pusha
ror
je
sub
and
sub
mov
sar
call
mov
test
inc
adc
pop
scas
dec
adc
in
or
jb
or
inc
jbe
jb
adc
(bad)
pop
ins
sub
cs
push
sbb
fsubr
clc
(bad)
fld
push
and
adc
cs
xor
mov
mov
pop
adc
outs
ds
mul
ret
inc
scas
xchg
leave
leave
dec
inc
adc
jmp
stc
mov
mov
mov
push
xchg
inc
loopne
cmp
in
fcomp
call
stos
xchg
scas
pop
cmp
ds
push
scas
test
sti
mov
enter
xor
pop
mov
icebp
repnz
dec
inc
jbe
push
mov
lods
xchg
pop
sbb
jle
jl
(bad)
push
out
cs
jnp
push
pusha
imul
sbb
or
sbb
jo
sub
out
std
fwait
mov
and
sbb
mov
or
(bad)
(bad)
int3
fistp
out
in
dec
and
or
inc
and
sbb
loopne
jecxz
fwait
pop
sub
push
retf
sbb
jns
and
xchg
adc
lods
loop
pushf
sbb
scas
xchg
mov
retf
dec
inc
popf
or
call
xlat
mov
jle
imul
loopne
cmp
push
cdq
clc
ret
les
xor
repnz
inc
jmp
cmp
xlat
call
cmps
adc
mov
dec
or
xchg
arpl
js
push
push
popf
cmovge
mov
or
aad
or
pop
push
add
xor
pop
push
mov
stos
xlat
xchg
xor
imul
xchg
sbb
adc
test
movs
push
cwde
xor
iret
scas
and
inc
lock
aas
jge
dec
js
test
loop
fld
call
not
jbe
pop
fistp
sahf
inc
mov
mov
pop
loopne
add
adc
jl
xlat
sub
xor
and
mov
adc
push
mov
jno
cwde
push
dec
sbb
cli
fstp
mov
jmp
jno
sti
stc
sbb
repz
hlt
mov
adc
imul
dec
xchg
shr
jg
adc
lods
call
jne
cld
jns
jg
jns
pop
(bad)
jmp
add
mov
popf
sbb
dec
scas
pop
stos
jno
aad
mov
sub
push
push
lea
or
mov
cmc
push
inc
not
(bad)
lahf
xchg
sar
pop
dec
inc
push
mov
push
shr
and
fwait
fwait
ror
bound
out
in
fnstenv
mov
inc
out
sbb
outs
loope
cmp
sti
xchg
cmp
(bad)
call
lds
add
push
out
or
push
mov
les
enter
pusha
push
dec
pop
xchg
mov
dec
push
sbb
xchg
jmp
push
cwde
xchg
ds
jne
movs
or
or
cmps
push
fnstsw
leave
jecxz
out
sbb
dec
xchg
inc
jmp
sub
mov
mov
pop
fisubr
jg
scas
clc
aad
pop
call
and
or
or
mov
xlat
(bad)
mov
js
xor
add
cmc
mov
test
xchg
fxch
test
cmp
xor
push
push
jae
test
and
test
mov
iret
push
lods
sbb
mov
loop
ds
imul
or
xor
or
scas
sub
data16
sub
mov
or
xor
adc
fisubr
adc
cmp
jp
cmp
mov
call
or
fild
fadd
xchg
mov
in
cmp
je
(bad)
inc
scas
xor
jbe
jmp
mov
scas
stos
sbb
push
call
inc
arpl
cld
jle
mov
test
gs
frstor
cmp
fwait
inc
(bad)
sub
sbb
ins
dec
leave
sub
or
cs
test
cdq
pop
movs
les
pop
xor
mov
xchg
mov
xor
or
stc
jae
push
add
jb
rcl
dec
out
add
or
mov
iret
and
xchg
out
lods
sar
push
inc
in
pop
sahf
outs
daa
mov
or
and
inc
jns
scas
push
xchg
push
pushf
pop
es
xor
outs
cdq
(bad)
in
push
sbb
push
push
jecxz
iret
mov
sbb
(bad)
shr
sub
ins
jp
cwde
retf
lea
push
cdq
dec
pop
push
fisubr
out
xor
outs
stos
xor
add
cs
cwde
outs
in
sahf
je
add
push
out
pop
sahf
dec
fs
aad
mov
mov
les
dec
sahf
sub
scas
jle
cli
push
inc
sub
call
sbb
les
mov
adc
and
inc
rol
outs
inc
dec
test
xchg
inc
adc
fwait
sbb
(bad)
xor
(bad)
out
pop
shr
inc
ins
or
push
mov
(bad)
out
pop
data16
movs
mov
push
outs
cwde
inc
lahf
sbb
sbb
test
cld
loope
bnd
(bad)
xchg
push
pop
sti
or
push
cmp
retf
bound
inc
call
add
(bad)
mov
pushf
jo
mov
cmp
sbb
(bad)
sub
test
jnp
sbb
pop
fidivr
inc
jmp
cli
popa
cld
cmp
das
ins
movs
xchg
adc
aaa
or
push
pop
jne
loope
cld
in
cwde
mov
retf
sub
clc
sar
xor
mov
in
inc
pop
enter
mov
jnp
stc
cmp
push
or
lods
scas
mov
cdq
div
pop
cmp
mov
pop
push
pop
fistp
xchg
sbb
xchg
mov
addr16
loopne
mov
inc
pop
fisttp
stc
iret
ja
test
imul
call
sar
mov
mov
inc
imul
sub
daa
add
push
iret
(bad)
xchg
add
xchg
out
(bad)
bound
nop
bound
add
es
push
ss
or
or
retf
push
or
addr16
adc
jmp
dec
cmc
stos
sahf
fcmovne
xor
lea
jns
jnp
in
aam
std
sbb
mov
and
mov
mov
cli
nop
mov
sbb
pop
cmp
inc
ficom
sar
jp
dec
or
loope
mov
cmp
stos
addr16
and
es
imul
sub
mov
add
jecxz
fabs
push
cmp
lods
int
int
dec
or
outs
repz
(bad)
push
sub
ins
xor
or
jne
add
ins
in
jl
(bad)
icebp
std
aaa
retf
jle
push
ins
adc
sub
xchg
xor
xchg
or
jo
jns
dec
jnp
ss
xor
dec
push
cmp
sub
mov
pop
iret
or
xchg
iret
es
push
sbb
xchg
inc
dec
repnz
nop
mov
dec
mov
dec
mov
arpl
mov
rol
imul
ja
stos
(bad)
test
ja
xchg
in
push
sbb
add
xrelease
inc
mov
es
jp
and
outs
arpl
out
pusha
or
je
sub
arpl
fcom
cmp
or
fnstsw
push
sub
or
mov
jns
xchg
mov
out
cmp
or
add
mov
or
adc
aam
fsubrp
repnz
push
or
ret
ins
mov
or
das
in
inc
outs
clc
dec
dec
push
rcl
adc
mov
xor
mov
and
call
call
daa
xchg
inc
add
out
mov
jmp
das
xor
fsubr
pop
or
ja
push
cmc
pop
mov
das
sbb
stc
xor
xchg
(bad)
xor
fstp
dec
push
(bad)
js
pusha
jmp
jno
aas
ins
adc
cmp
cmp
adc
hlt
mov
mov
inc
ror
pop
outs
xchg
jecxz
call
fs
pop
mov
les
cmp
push
rcr
pop
mov
add
repnz
loopne
or
in
mov
cli
fsub
gs
std
xor
sub
stos
mov
int
cmp
jecxz
lock
adc
adc
jge
fimul
jge
pop
xor
jp
pop
jg
out
(bad)
cli
cli
add
cdq
add
mov
shl
lds
fnsave
fsub
in
sti
ins
fist
(bad)
fdiv
sub
out
aas
icebp
sub
in
adc
popa
mov
cmp
fwait
mov
sbb
in
ss
daa
sub
mov
push
cdq
call
jecxz
loopne
xchg
or
fimul
arpl
jb
movs
in
imul
xchg
div
cld
cwde
add
adc
sar
imul
fld
push
push
jb
in
mov
push
inc
and
ss
loope
aam
in
leave
aad
call
call
rol
sub
sbb
scas
sbb
scas
xor
mov
jge
cdq
or
mov
lods
lock
popf
sbb
adc
mov
idiv
add
loopne
add
push
stos
dec
(bad)
aas
adc
mov
hlt
(bad)
lea
test
xchg
dec
leave
push
(bad)
nop
xor
sbb
ss
repz
sar
ss
test
(bad)
out
ret
inc
pop
inc
and
cmps
loopne
nop
loopne
mul
adc
adc
mov
dec
cwde
pop
sbb
jmp
xor
push
adc
cmps
xor
(bad)
and
mov
push
mov
les
daa
push
xor
jmp
adc
xor
(bad)
repz
jns
repnz
retf
sbb
xor
dec
adc
hlt
fidiv
cmp
psrlw
fisttp
pushf
repz
sbb
mov
dec
sar
adc
jbe
(bad)
pop
mov
ret
push
das
dec
dec
mov
push
sub
outs
je
loopne
push
xchg
(bad)
adc
imul
and
cmps
sub
jmp
int
(bad)
sbb
push
and
xor
cs
or
ins
push
js
jae
popa
inc
pop
jmp
ins
cld
in
pop
ja
pop
out
jl
in
cmps
and
jb
mov
xchg
push
cmp
ja
mov
adc
inc
jbe
sub
test
mov
data16
cmps
push
in
jns
pop
ror
sub
mov
out
(bad)
int3
jle
sub
shl
cmp
lock
(bad)
ficom
jl
xor
std
inc
adc
and
mov
or
mov
jne
sub
xor
cmp
push
and
into
fstp
xor
icebp
jnp
(bad)
mov
fwait
mov
(bad)
je
xchg
inc
nop
call
sbb
mov
(bad)
and
addr16
idiv
add
xchg
cmp
push
cwde
jae
mov
shl
in
daa
lods
ret
mov
cmp
jecxz
xchg
cbw
jne
scas
mov
inc
pop
mov
push
pop
sbb
cmp
pop
lahf
out
imul
or
mov
push
adc
and
jle
inc
(bad)
in
adc
jge
out
jl
push
cmp
xchg
jg
sub
(bad)
or
mov
ffreep
jmp
ret
mov
rcr
push
je
lock
in
and
fsubr
dec
outs
clc
xlat
pop
mov
xchg
retf
lahf
cmp
sbb
add
adc
stos
imul
repnz
jnp
mov
and
mov
dec
outs
pop
jecxz
call
xor
mov
push
add
dec
int3
mov
lds
(bad)
xchg
jno
xor
stc
fwait
nop
push
sbb
jp
mov
ja
or
(bad)
xchg
mov
addr16
sub
jg
dec
lds
in
fldcw
add
ja
mov
fild
test
sar
or
mov
sti
sbb
ins
fs
jno
xchg
dec
jns
scas
scas
sbb
jns
sbb
mov
out
pop
xchg
inc
xchg
jl
or
jge
int
sti
lods
test
xor
mov
sub
xor
sbb
(bad)
lahf
pop
adc
sbb
or
out
jns
ds
popf
lods
scas
je
fild
mov
cmp
mov
jbe
sahf
bound
add
xor
mov
leave
outs
clc
ss
fs
mov
or
bound
mov
jmp
ja
pop
repz
xchg
pop
lahf
add
cwde
bound
adc
iret
stc
add
inc
jg
cdq
cwde
imul
xor
adc
ficomp
cdq
call
sbb
ficomp
jmp
imul
xchg
jge
in
dec
out
inc
clc
idiv
scas
mov
outs
and
les
ja
mov
ja
(bad)
scas
gs
add
iret
sbb
and
adc
fdivr
loop
pop
pop
sbb
mov
pop
dec
inc
xor
and
retf
push
inc
ss
dec
es
push
pop
outs
int3
mov
les
cmp
and
cmp
movs
sbb
pop
in
aam
(bad)
adc
aas
ins
out
xchg
gs
iret
arpl
sbb
repz
xchg
xchg
aas
ja
daa
xor
inc
sbb
adc
neg
mov
xchg
adc
pop
sbb
dec
add
jae
aam
inc
fimul
jp
fiadd
mov
sub
and
push
loope
imul
loop
outs
loopne
xchg
mov
in
neg
push
test
aaa
mov
loopne
into
lea
mov
jp
fstp
cmp
les
clc
mov
cdq
add
outs
xchg
jae
mov
sbb
shl
jno
and
pushf
sbb
loopne
sahf
(bad)
not
test
aad
lea
pop
or
mov
pop
ret
inc
imul
push
adc
imul
xchg
sbb
out
cmp
cmp
dec
xor
xor
pshufw
frstor
jp
push
adc
leave
dec
xchg
lods
jns
push
mov
fcomp
popf
sub
xchg
call
clc
jno
add
xor
les
gs
mov
lock
mov
lahf
pop
xchg
bound
gs
rol
mov
lods
ss
imul
test
xchg
(bad)
dec
stos
jl
mov
dec
fld
mov
aad
dec
ss
ret
adc
cmc
push
mov
sub
pop
call
jl
mov
loope
adc
xor
pop
fdivr
sub
and
outs
jge
sar
inc
loopne
dec
or
jmp
fs
jle
pop
call
xor
xor
inc
jne
cmp
push
jo
repz
jb
sahf
out
idiv
mov
test
lds
test
adc
push
jge
lock
dec
mov
nop
sbb
push
popf
scas
pusha
jne
std
popa
push
fidivr
xlat
sahf
push
pop
sbb
leave
jmp
pop
ins
in
and
xor
aam
(bad)
dec
add
es
adc
pop
int
xor
fadd
loopne
pop
pop
jg
cmp
cli
mov
out
jecxz
hlt
aad
jmp
xor
dec
inc
mov
test
cmps
push
ja
nop
icebp
jno
pop
xchg
shl
ja
icebp
adc
mov
lods
inc
mov
pushf
arpl
push
outs
dec
push
ror
xchg
pop
test
lahf
inc
out
neg
retf
and
cli
test
cmp
adc
rcl
push
sub
xor
shr
sti
rcl
mov
loop
mov
mov
(bad)
sub
nop
adc
cmp
xchg
adc
lods
mov
sbb
dec
sbb
fwait
push
iret
pop
or
mov
sahf
nop
gs
mov
mov
sub
jmp
xor
call
push
ficom
daa
(bad)
dec
sub
(bad)
lods
popf
jg
sub
jns
mov
sub
dec
cld
add
xor
outs
cmp
int
bound
jns
jnp
xor
sbb
in
scas
push
sub
ret
sar
cli
sti
call
adc
fs
push
leave
and
mov
imul
or
cmp
xor
aam
pop
mov
iret
cmp
mov
ret
pop
paddw
retf
jb
ss
inc
(bad)
push
call
jb
jno
pop
lea
hlt
aad
popf
or
xor
push
into
pop
xchg
hlt
pop
lahf
popa
stos
loope
push
ja
mov
addr16
inc
clc
aas
push
icebp
mov
and
jo
mov
xor
xchg
jns
push
adc
inc
inc
push
mov
int3
xor
adc
dec
ins
xchg
jae
or
adc
add
inc
in
ds
push
push
cmps
jo
sub
push
dec
adc
icebp
cs
and
loope
and
pop
or
pop
mov
jno
add
mov
mov
jmp
retf
ins
mov
and
rcr
test
std
fcomp
push
xor
js
mov
push
xor
scas
sub
(bad)
cmp
jb
es
jle
mov
clc
rcr
jno
jge
jo
dec
pop
xor
pop
cmp
add
mov
push
jp
jns
adc
add
in
cwde
add
sbb
pop
cmp
mov
mov
iret
ds
cmc
xchg
pop
xchg
pop
inc
or
fldenv
test
rcl
pusha
xchg
call
sub
and
enter
rol
cdq
popaw
js
xor
cmp
push
mov
sbb
mov
xor
inc
mov
xor
iret
call
mov
in
add
sub
jbe
lock
mov
loop
and
xchg
sbb
or
jmp
or
mov
mov
mov
arpl
fs
iret
xor
add
inc
xor
xchg
das
je
cli
adc
or
sbb
pushf
push
cmps
inc
aaa
fstp
cmp
(bad)
cmp
out
xchg
nop
jmp
(bad)
mov
push
sub
mov
fiadd
push
add
lock
movs
(bad)
bound
mov
loope
mov
outs
add
loope
cli
popa
add
imul
daa
aad
fist
jb
je
push
popa
push
inc
mov
sub
clc
pop
shl
push
fisub
outs
ffreep
bound
retf
sahf
add
adc
push
cmc
retf
gs
cmp
push
xor
cmp
repnz
pop
movs
pop
loope
mov
push
mov
mov
pop
jp
bound
or
rcl
les
(bad)
out
jo
ss
scas
jnp
adc
xchg
repz
jmp
bound
fnstcw
js
push
lahf
or
mov
push
fldenv
and
ret
jg
fisttp
outs
push
stc
fisub
loope
xor
sbb
test
dec
sub
inc
push
mov
cmp
pop
aam
std
mov
cld
shl
inc
call
int3
xchg
ds
enter
dec
mov
cli
les
add
or
inc
je
in
push
xor
xchg
js
mov
adc
cs
mov
enter
pop
inc
ds
adc
cmp
pop
xchg
inc
ss
imul
xchg
fidivr
fwait
mov
leave
leave
ret
shr
xchg
push
sahf
bsr
adc
lahf
xchg
repnz
arpl
push
push
rcl
add
cmp
out
push
adc
ja
mov
sub
das
lahf
dec
sub
inc
pop
clc
jb
gs
stos
push
cdq
jle
fisubr
dec
jge
rcl
ss
andps
adc
movs
jbe
xchg
es
popf
aad
ds
inc
ins
mov
lahf
fsubr
(bad)
add
and
mov
imul
std
nop
or
nop
pushf
movs
jle
sub
mov
mov
ja
jmp
dec
or
(bad)
movlps
xor
inc
mov
adc
das
pop
xor
inc
or
int3
and
and
sbb
test
jecxz
test
int3
add
or
retf
add
push
jmp
test
xchg
fs
mov
adc
sub
dec
(bad)
retf
pop
xor
cmc
push
jne
cmps
push
jb
ret
xchg
and
loopne
mov
out
(bad)
iret
or
mov
inc
mov
push
pop
pusha
popf
pop
call
sbb
xacquire
mov
xchg
arpl
xchg
adc
xchg
(bad)
fwait
add
lods
cmc
mov
test
push
mul
xchg
push
loope
jl
es
bound
sbb
or
push
jmp
fnsave
sub
lods
out
call
xchg
fdiv
sti
(bad)
jmp
imul
outs
push
and
sub
mov
nop
xor
jns
inc
xchg
pop
in
cwde
xchg
inc
mov
js
push
mov
inc
jbe
enter
add
mov
inc
dec
call
cmp
fisubr
call
dec
dec
jle
pop
jmp
ret
aaa
(bad)
pop
lock
or
cld
imul
sub
jge
pushaw
jmp
mov
sub
jg
xchg
ficomp
push
cs
sub
lahf
xor
sub
rol
sub
fbstp
sbb
xchg
xchg
dec
leave
fild
jg
pop
and
or
jg
lods
ret
std
cdq
jmp
adc
adc
xchg
lock
and
and
loope
fs
mov
mov
stos
inc
mov
sbb
scas
jecxz
(bad)
mov
and
ret
dec
add
xor
int
sub
imul
enter
scas
cmp
or
mov
(bad)
enter
scas
test
push
cmp
mov
repnz
pop
rcl
xlat
add
jno
lahf
call
mov
and
fcmovnb
or
stos
adc
mov
xor
cmp
mov
test
jecxz
cmp
int
add
pop
pop
pop
pop
int3
fistp
test
sub
nop
mov
bound
daa
ss
fisub
sahf
inc
push
adc
loopne
hlt
imul
jg
pop
push
xchg
adc
(bad)
aas
lods
dec
(bad)
dec
div
test
cmp
loopne
xchg
jge
rcr
retf
mov
jae
in
inc
add
or
loop
xor
mov
sbb
push
clc
sar
lds
mov
cli
lahf
sahf
scas
scas
aad
jle
push
jp
aad
dec
push
dec
jno
mov
sbb
mov
jge
cmp
jne
pop
adc
inc
stc
rcr
rcr
(bad)
push
jecxz
cmp
std
retf
loopne
stos
sub
mov
fisubr
loop
pop
xlat
jns
jb
add
ror
mov
movs
out
movs
cmp
sbb
cmps
or
sub
sbb
je
adc
jae
fmul
js
push
outs
pop
push
sbb
js
cli
mov
addr16
ss
mov
xchg
(bad)
mov
xchg
fdiv
cmps
xor
xchg
add
call
fcomp
(bad)
out
mov
test
enter
pushf
popf
mov
fs
and
mov
mov
popa
ds
inc
imul
ja
jbe
xor
jne
retf
xchg
jmp
dec
movs
sahf
and
cs
jbe
(bad)
popa
or
mov
cmps
mov
jp
xor
shl
fidiv
or
pop
jmp
jbe
test
mov
fwait
add
push
imul
pop
push
shr
dec
pop
adc
cmps
dec
gs
in
setbe
mov
retf
push
mov
and
xor
jb
mov
fisttp
scas
fincstp
rol
sub
sub
pop
pop
or
sub
ror
xor
popf
cld
jp
and
(bad)
shr
sbb
inc
jg
push
mov
jp
outs
dec
inc
repz
jns
xor
cs
fisttp
fimul
mov
dec
pop
call
mov
int3
fwait
cmps
and
aaa
mov
push
test
push
and
or
xor
cmp
nop
mov
pop
imul
mov
fdiv
daa
scas
mov
xor
xor
cmc
je
(bad)
ja
lock
aaa
std
popf
pop
sbb
mov
cmp
stc
movs
jge
push
mov
aad
ins
mov
xor
scas
jns
out
inc
xor
test
sahf
cmp
adc
hlt
fcom
inc
fcmovu
xlat
mov
push
lahf
xchg
aad
fisttp
pop
jg
imul
test
and
pop
add
cmp
icebp
dec
mov
in
(bad)
iret
loope
out
cs
aaa
push
add
lea
aad
psubq
sub
andps
test
cmp
outs
test
cdq
sub
jge
push
xchg
in
test
mov
ds
mov
push
sti
adc
iret
pop
leave
in
sub
ret
out
sbb
cmc
scas
(bad)
adc
lods
dec
cld
fsubr
mov
pop
pop
mov
push
ins
sub
pop
lods
inc
dec
xchg
dec
jle
xor
hlt
push
es
jne
scas
fmul
cmps
xor
repnz
cmp
pop
ror
add
inc
dec
mov
iret
jb
push
cli
xchg
into
inc
fcomp
xor
push
sub
mov
in
adc
(bad)
jecxz
pushf
icebp
(bad)
les
test
fiadd
mov
jo
fdiv
stos
pop
mov
cwde
mov
jbe
out
jle
lds
fistp
or
aad
cld
shl
sbb
push
and
ins
je
inc
ror
mov
xor
mov
das
call
cmp
sub
pop
pop
xchg
add
dec
xor
les
daa
lods
sbb
test
ins
addr16
int3
les
fcomp
mov
mov
loop
fistp
sub
lock
sub
mov
or
sbb
dec
sti
int
or
rol
xchg
imul
xchg
fiadd
call
into
ds
int3
inc
add
mov
fidiv
jbe
and
dec
aam
div
jae
sbb
xor
and
inc
stos
scas
iret
call
inc
scas
aaa
push
aam
ja
mov
adc
mov
jecxz
fisub
push
dec
dec
out
jo
iret
xchg
in
movs
xor
sbb
dec
cmp
cmp
pop
cmp
arpl
mov
ds
js
dec
push
jno
push
test
repz
jecxz
inc
shl
bound
test
hlt
add
jmp
sub
dec
iret
pop
fs
pushf
pop
mov
test
sbb
pop
jg
fnsave
add
fld
sbb
ins
pop
stos
inc
hlt
and
push
xlat
pop
sub
jne
outs
sub
xchg
clc
sbb
cmp
fstp
sub
adc
and
nop
das
push
pop
scas
shl
add
and
mov
and
mov
sti
pop
dec
mov
mov
push
pop
adc
movs
mov
enter
push
sub
sub
cli
clc
mov
popa
ror
mov
push
dec
cs
out
idiv
fneni(8087
fwait
into
adc
(bad)
mov
sbb
scas
fs
sahf
outs
cmp
enter
xchg
pop
sti
dec
pop
or
fist
or
pop
sub
inc
and
cmp
push
xlat
mov
(bad)
retf
mov
iret
out
cmps
pop
mov
sub
and
add
lds
loope
in
xor
pop
fst
test
out
cmp
sti
(bad)
sbb
mov
jl
test
(bad)
enter
out
xchg
sub
xchg
hlt
cmp
sub
(bad)
loope
push
sar
or
clc
div
rol
mov
popf
stos
inc
adc
mov
repz
pop
mov
and
mov
dec
mov
inc
and
add
sbb
enter
sub
jo
inc
jge
adc
push
in
pop
in
in
stc
fsub
xchg
adc
mov
mov
push
fstp
inc
lock
mov
fst
or
outs
adc
xchg
xchg
cmps
lods
pop
jmp
(bad)
and
(bad)
mov
sub
cmp
jmp
jae
fdiv
mov
inc
pop
cld
aam
clc
loop
or
bound
out
pop
sub
hlt
cdq
xor
inc
loop
lahf
repnz
bound
ins
cmp
pop
xlat
popa
loopne
sbb
loopne
shl
mov
icebp
fmul
dec
pop
(bad)
addr16
cmp
cmp
xchg
loop
or
dec
push
push
call
pop
push
cmp
jmp
sbb
sbb
rcr
mov
jb
pop
mov
repnz
inc
fnstsw
xor
jne
push
aam
sbb
add
neg
mov
and
in
cs
lea
(bad)
in
push
test
retf
push
daa
mov
enter
pop
add
pop
add
ins
pusha
pusha
test
sub
loop
outs
std
dec
rcr
ror
ins
push
(bad)
dec
out
mov
nop
mov
data16
call
jae
xor
xor
pop
loope
rcl
mov
(bad)
ins
arpl
sub
xchg
inc
inc
leave
mov
sub
jp
or
cmp
rol
icebp
(bad)
fcomp
inc
xchg
dec
jl
in
out
retf
(bad)
popa
shr
mov
aaa
out
xor
lock
icebp
fmulp
jbe
jmp
inc
mov
(bad)
push
arpl
jmp
mov
jp
push
ficomp
test
jno
push
cmp
movs
popf
push
push
mov
adc
and
loop
adc
dec
jl
mov
lds
mov
fistp
cmp
clc
add
jmp
(bad)
xchg
mov
outs
in
and
lds
mov
adc
data16
adc
cmp
(bad)
sbb
in
shr
jecxz
sub
mov
fdiv
(bad)
push
ret
out
jmp
rcr
ss
sbb
neg
mov
mov
xchg
mov
sbb
shld
cmp
ja
pop
sbb
jmp
aaa
mov
aad
add
inc
mov
inc
add
jge
(bad)
xchg
stos
(bad)
mov
rcr
fbstp
and
jbe
mov
cmp
bound
sbb
jle
sbb
pop
cld
sub
push
push
mov
pop
sbb
jle
stos
mov
stos
jmp
xor
(bad)
dec
cmp
cmp
mov
fs
lds
push
loope
int3
add
pop
into
ins
leave
(bad)
cmp
jnp
and
iret
lods
mov
fnstsw
sub
mov
add
outs
fisttp
push
xchg
leave
cmc
mov
je
pop
sbb
(bad)
and
call
scas
pop
int
jmp
in
inc
aas
xchg
leave
xchg
stos
call
push
add
stos
dec
mov
lods
fbstp
js
xchg
cmps
rol
cs
(bad)
cli
push
jmp
sub
sbb
mov
lahf
repz
mov
in
cmp
fdivr
or
(bad)
sbb
push
cmp
pusha
pop
xchg
das
nop
icebp
adc
xchg
cmp
stc
ret
fwait
sti
aam
data16
cmc
retf
and
push
imul
inc
sahf
xchg
xchg
mov
sahf
in
dec
push
or
loop
sbb
xchg
sub
and
add
sahf
ins
in
(bad)
in
adc
sub
and
mov
movs
add
loopne
jno
pop
addr16
inc
retf
out
rol
push
xchg
repz
mov
sub
push
push
pop
xchg
cdq
mov
adc
pop
pop
arpl
push
mov
inc
clc
pusha
cmps
lods
cwde
repnz
neg
out
xor
inc
ror
pop
add
mov
push
mov
cs
mov
or
xchg
push
mov
and
sub
xor
lods
sbb
xlat
pop
cmp
adc
movs
mov
mov
popa
push
xor
cmp
mov
stos
les
mov
adc
sbb
rcr
jbe
push
mov
jg
jb
jnp
neg
int3
mov
test
and
adc
sbb
(bad)
sbb
mov
push
adc
adc
or
mov
(bad)
xor
inc
shl
fwait
inc
jecxz
mov
xor
push
or
inc
pop
and
mov
or
lods
cmp
and
jne
cmp
test
lods
inc
call
test
lea
cmps
xor
mov
lock
test
fwait
jb
mov
add
test
xor
xchg
mov
cmp
test
mov
lea
fld
adc
arpl
pop
popa
lea
and
out
pop
lds
aad
(bad)
mov
or
adc
cld
das
sub
sbb
add
test
(bad)
hlt
fiadd
jae
(bad)
int3
push
mov
popf
add
xor
cs
jmp
addr16
push
sbb
dec
jmp
rcr
jg
push
adc
sbb
cdq
cmps
jbe
mov
adc
ds
bound
jg
(bad)
movs
push
dec
loopne
out
ss
cld
inc
sar
loop
je
imul
ror
pop
mov
(bad)
fcom
cmp
mov
js
sahf
imul
(bad)
into
sbb
xchg
adc
mov
les
stos
movs
bound
mov
pop
pop
loopne
xchg
ret
and
repnz
pop
xlat
data16
in
repz
adc
and
push
sbb
inc
mov
aaa
(bad)
(bad)
std
out
call
outs
aaa
inc
add
aaa
js
or
push
and
or
xchg
sub
pop
xchg
mov
dec
mov
mov
test
pop
sub
mov
leave
pop
mov
aam
inc
(bad)
in
inc
lods
mov
es
orpd
or
push
sub
dec
daa
sub
sahf
das
shr
mov
mov
add
into
call
sub
lods
mov
pop
dec
stos
test
jae
mul
jns
outs
inc
sbb
(bad)
aaa
jge
xor
pinsrw
adc
jno
dec
mov
pop
ja
mov
dec
jmp
aaa
mov
or
loopne
or
add
push
dec
ret
or
jge
cmp
push
push
jmp
cmp
or
push
add
sbb
and
ja
clc
jp
push
push
in
add
mov
test
jns
std
jp
in
and
(bad)
mov
pop
les
nop
dec
fstp
call
cmp
outs
mov
fdivr
xor
pushf
aaa
mov
scas
cwde
cli
fidiv
dec
aad
pop
pop
jo
aas
cmps
sub
xlat
(bad)
int3
daa
xchg
(bad)
das
mov
mov
dec
mov
leave
outs
inc
jle
push
or
iret
xor
movs
loop
cmc
jb
xor
rcr
retf
int3
sub
jmp
(bad)
cmps
popf
mov
push
scas
rcl
jbe
cmc
(bad)
ins
ins
mul
sahf
mov
xchg
push
daa
push
inc
mov
xor
enter
jns
shl
in
out
dec
stos
pop
and
mov
cmc
imul
in
push
sbb
fidivr
sbb
mov
cmp
dec
pop
push
or
jo
cmp
fadd
xlat
fsub
adc
mov
sbb
div
loope
stos
mov
retf
xor
mov
jae
xchg
add
cmps
adc
lea
push
dec
lods
dec
or
jp
fcom
inc
and
(bad)
(bad)
mov
pushf
(bad)
retf
mov
sbb
(bad)
enter
xchg
mov
mov
daa
imul
fsin
sbb
out
movs
xchg
jno
fcom
push
mov
and
das
(bad)
adc
ds
bound
mov
mov
lea
adc
das
int3
in
cli
mov
and
mov
int
(bad)
xchg
aaa
sbb
push
ret
jle
pushf
mov
adc
lea
imul
push
push
out
das
push
mov
icebp
leave
cmp
push
les
jl
mov
or
dec
adc
adc
stc
xchg
js
and
loop
pop
aad
ins
out
mov
and
icebp
xor
mov
mov
std
outs
daa
iret
add
(bad)
bound
xchg
inc
adc
ins
pop
mov
cmp
js
ret
cli
retf
ds
loope
push
popf
xchg
aam
pop
and
push
xchg
in
ins
pop
mov
icebp
scas
xchg
mov
imul
sub
add
imul
cmp
shl
(bad)
push
fcmovnu
movs
mov
push
retf
and
lods
sub
test
or
cmp
jb
pop
sub
xor
sub
inc
add
call
jb
and
or
dec
push
hlt
rcl
adc
fs
mov
inc
and
or
adc
push
(bad)
outs
call
sti
ja
pusha
jne
mov
or
adc
mov
pop
les
imul
inc
mov
loop
dec
lock
test
out
mov
aas
in
pop
mov
or
cmp
cdq
ins
jne
sub
call
sub
es
or
xchg
enter
push
dec
and
dec
xlat
(bad)
xlat
jae
xchg
jo
inc
loop
data16
jp
xchg
sbb
shl
cmp
and
mov
jp
add
cmp
sub
xor
rcl
cmp
adc
(bad)
inc
icebp
js
stos
mov
push
jae
mov
call
mov
dec
mov
mov
imul
loop
sahf
cmp
mov
loopne
push
inc
dec
mov
ror
cmps
xchg
retf
movs
sub
jp
test
daa
and
pop
iret
mov
sub
stc
fs
test
mov
dec
and
cmp
adc
pop
aam
dec
fs
ret
and
fistp
clc
adc
test
pop
or
push
out
dec
push
lds
adc
xchg
adc
mov
mov
les
dec
xchg
xchg
add
stc
xor
and
mov
dec
xor
stos
cmps
cli
inc
(bad)
mov
imul
call
mov
mov
scas
mul
into
ins
jmp
gs
ss
retf
and
mov
popa
aas
xor
mov
sub
rol
jmp
jno
dec
fs
dec
test
mov
into
into
mov
lods
add
pop
gs
arpl
dec
imul
lods
repz
(bad)
out
aam
jnp
lds
mov
add
pop
int
jns
mov
call
or
lds
push
fnstenv
cmp
and
(bad)
pop
pop
retf
pop
and
aas
retf
test
add
add
loop
cld
loop
cwde
jae
sub
sub
jae
and
lea
xchg
sbb
ins
sub
pop
in
xor
icebp
cmp
sub
aad
test
loop
inc
adc
sbb
add
cwde
push
sahf
dec
std
rol
add
jne
cwde
sub
stc
addr16
dec
push
(bad)
je
in
jmp
push
mov
and
pop
mov
mov
loopne
dec
pop
cmp
jae
jns
je
pop
pop
xchg
jo
lods
add
mov
mov
imul
call
(bad)
dec
add
das
stc
mov
fisub
sub
and
xchg
push
dec
xor
cs
mov
stc
lock
pushf
hlt
aad
in
aad
add
push
mul
push
cmp
cmp
leave
repnz
inc
dec
outs
mov
add
cmp
xor
xchg
or
popf
mov
pusha
push
out
dec
jb
jle
adc
movs
xchg
or
das
pop
xchg
sub
outs
cmp
pop
xchg
pop
pusha
xor
fadd
(bad)
loop
mov
je
fiadd
sub
xor
push
fsubrp
cmp
fs
and
mov
adc
aam
mov
push
ret
mov
pushf
add
jbe
clc
fld
pop
fadd
stc
jo
mov
mov
sub
call
xchg
(bad)
push
and
jp
aad
add
ss
data16
pusha
es
test
mov
repz
nop
cmp
dec
sbb
adc
xor
pop
xchg
hlt
xor
add
lahf
mov
gs
inc
dec
test
addr16
mov
in
mov
test
cmp
fsubr
std
mov
push
and
mov
aad
mov
lahf
imul
adc
dec
dec
movs
fld
in
in
jnp
loope
pop
push
adc
shr
(bad)
ins
fcomp
fistp
inc
xchg
mov
(bad)
popa
in
jecxz
mov
xor
daa
das
mov
xor
cmp
dec
push
(bad)
pop
pop
cmc
stos
or
jne
dec
scas
adc
xchg
je
icebp
hlt
mov
div
pop
out
test
mov
mov
or
ins
and
pop
dec
je
or
jl
pop
push
pop
xchg
push
js
push
out
dec
icebp
das
push
outs
ins
sbb
cmp
jp
imul
jmp
push
test
cdq
or
out
jno
or
outs
dec
mov
retf
adc
adc
xor
fsub
mov
cmp
adc
mov
pop
in
mov
dec
outs
retf
dec
cmps
push
shl
jl
shl
pop
dec
inc
out
les
push
sti
inc
and
inc
sbb
dec
pop
or
inc
in
jge
rcl
push
dec
pop
jo
jno
sub
loop
aaa
test
imul
xchg
rcr
jno
push
and
dec
in
xchg
push
mov
addr16
ins
(bad)
(bad)
jle
adc
dec
mov
ss
test
lahf
dec
push
test
test
adc
repz
icebp
cdq
inc
inc
cmp
push
mov
popf
mov
pop
mov
sahf
xor
pop
mov
xchg
inc
arpl
imul
icebp
ds
movs
mov
ds
mov
mov
xchg
daa
fisttp
cmp
in
and
rol
mov
cwde
pusha
and
int3
loopne
xor
add
lock
rcl
outs
jl
idiv
mov
sar
test
out
mov
data16
out
iret
mov
xor
jo
and
(bad)
adc
sub
loopne
push
jp
bound
dec
mov
push
in
movs
fdivr
mov
sbb
dec
jle
inc
dec
adc
sbb
pushf
test
add
enter
sbb
jp
jg
pusha
aas
xor
lock
xchg
addr16
mov
jp
lods
pushf
pop
nop
and
lods
or
popa
and
mov
gs
mov
popf
inc
fld
out
inc
sub
aad
xchg
xor
mov
mov
dec
sub
push
loopne
test
jb
pusha
xor
mov
jl
inc
cmps
add
mov
jg
fld
lds
push
push
mov
lods
je
aam
and
pandn
aas
add
shl
dec
mov
inc
mov
mov
div
mov
inc
scas
and
inc
pop
cmp
jbe
push
dec
sub
stos
pop
sahf
cmp
cmp
fdivr
add
std
jne
xor
iret
ficom
inc
test
and
pop
jnp
cli
or
cmp
fstp
or
and
sub
push
call
inc
fisttp
popa
and
les
jmp
outs
outs
not
adc
in
xor
sub
je
jnp
das
mov
and
sbb
je
hlt
xor
xchg
sbb
push
and
enter
mov
xchg
sar
mov
stc
rol
shr
mov
xor
mov
mov
add
add
lahf
pusha
lea
push
jp
dec
dec
sub
scas
pop
pop
stc
rcr
ja
mov
lods
jo
fcomip
ret
jmp
mov
push
daa
aad
loop
mov
ror
xchg
out
xchg
cld
jmp
mov
popa
mov
or
pop
popf
ds
shl
mov
loope
nop
rcl
je
inc
mov
loopne
stos
inc
cmp
xchg
out
ret
dec
push
inc
sub
push
(bad)
cmps
push
call
fyl2xp1
stos
jmp
test
adc
std
(bad)
aas
mov
dec
test
xchg
jbe
mov
cli
scas
por
jne
shr
jae
clc
add
(bad)
sub
dec
(bad)
icebp
lock
ret
adc
jl
add
mov
pop
sub
mov
stos
mov
shl
jns
mov
push
push
repz
inc
dec
push
mov
add
pop
cld
xor
repnz
iret
fiadd
enter
bound
inc
jge
mov
mov
cmps
mov
dec
adc
mov
pop
dec
add
ss
inc
dec
mov
push
scas
dec
xlat
push
cmps
mov
push
call
test
cmp
cmp
jmp
sub
inc
fsub
mov
xor
js
xor
in
pop
push
mov
or
test
sub
push
xor
clc
ss
movs
les
loop
addr16
ffree
inc
xchg
sub
js
jmp
push
dec
imul
adc
and
mov
mov
mov
dec
loop
in
iret
les
mov
pop
dec
ret
push
enter
jbe
bound
rcr
xor
xor
adc
fwait
dec
cs
test
add
mov
stos
pop
cli
sub
jmp
mov
jmp
inc
ret
out
jmp
stos
scas
retf
sub
or
vmwrite
sbb
sbb
into
xchg
pop
js
into
push
add
leave
xchg
inc
pushf
sahf
pop
call
cmp
stc
dec
jae
fcmovnb
xchg
jge
or
imul
push
mov
jle
inc
fistp
and
inc
mov
and
cld
mov
xlat
mov
pusha
pop
addr16
jmp
mov
jne
mov
je
mov
repz
cmp
inc
out
loop
aad
and
pop
das
adc
jle
xor
cli
stc
sbb
inc
jmp
xor
fld
inc
push
sub
frstor
daa
nop
ins
imul
adc
inc
mov
pop
xor
sub
dec
sub
movs
(bad)
mov
sbb
js
mov
sub
inc
int
jl
cmp
ficomp
lds
idiv
cmp
adc
push
mov
repz
dec
test
cmp
cmps
je
cld
xor
sub
inc
shr
and
xor
repz
sti
popf
js
scas
mov
rol
dec
cwde
loope
inc
jecxz
lds
inc
xor
mov
push
arpl
popa
xchg
mov
mov
mov
fld
mov
push
das
pop
push
lods
loope
sar
fcmovb
scas
jae
mov
sub
icebp
or
xor
(bad)
xlat
int
movs
add
push
cmp
pusha
add
push
sahf
jnp
dec
inc
mov
(bad)
(bad)
push
lods
pop
add
pop
in
clc
mov
cmps
mov
cdq
or
xchg
or
aam
imul
das
fnstcw
cmp
aas
xchg
push
mov
cmp
(bad)
fsub
shl
sbb
push
mov
aad
hlt
fs
fstp
xlat
cmps
cmp
fidiv
cwde
xlat
jecxz
aad
(bad)
bound
xor
or
rcr
jge
jmp
push
stos
xchg
add
cdq
sar
hlt
or
or
pop
movs
out
addr16
mov
adc
das
push
in
and
pop
sbb
sub
mov
cmp
cmp
or
dec
dec
scas
repz
out
push
inc
or
sub
and
xor
pop
pop
push
sub
add
aas
lods
movs
fsubr
cmp
mov
jbe
in
mov
shl
pop
daa
in
call
inc
sti
lods
stos
mov
in
stc
pushf
bound
inc
sub
jne
movs
sbb
outs
push
(bad)
sahf
xchg
jnp
aam
xor
iret
and
dec
sahf
clc
add
outs
mov
inc
(bad)
popf
dec
call
pop
sub
jecxz
xchg
inc
push
icebp
pop
sub
push
iret
repz
xchg
popf
xlat
shl
adc
shr
cwde
xchg
cli
mov
cwde
sbb
(bad)
fcomp
cmp
cmp
mov
push
ja
inc
(bad)
out
cs
fprem1
(bad)
aam
mov
xor
retf
std
mov
cmp
fnstenv
mov
cli
mov
xchg
push
push
inc
pop
in
push
jae
fadd
or
ror
mov
mov
hlt
popf
movs
and
cmps
pop
xchg
mov
movs
aaa
push
pop
sbb
not
test
iret
jb
shl
gs
lock
mov
test
mov
in
push
mov
xor
xchg
xchg
push
xor
dec
xor
mov
movs
sub
cmp
bound
mov
outs
inc
mov
jg
test
rcr
inc
ror
mov
mov
add
imul
repnz
(bad)
jecxz
jl
test
mov
jmp
xchg
(bad)
icebp
pop
inc
mov
and
inc
imul
(bad)
jge
pop
(bad)
sub
sub
cmps
jmp
fcos
jbe
dec
sub
pop
ds
stos
mov
cli
je
rcr
sbb
in
inc
and
cmp
and
jg
arpl
adc
ins
int
dec
scas
and
mov
xchg
push
push
lods
out
or
daa
push
pusha
lods
cmp
adc
pop
cwde
or
rol
in
arpl
mov
sbb
cmps
dec
(bad)
adc
mov
mov
jp
mov
clc
dec
inc
inc
ins
push
xchg
scas
push
rol
scas
cs
mov
lods
dec
ds
test
jno
out
cld
pusha
mov
shl
adc
mov
add
jge
(bad)
repz
retf
(bad)
jbe
jle
test
dec
jge
or
repnz
sub
or
fnstcw
adc
xchg
add
xchg
ret
mov
xlat
gs
fbstp
aas
iret
inc
mov
lods
sbb
xchg
test
adc
jnp
mov
pop
idiv
sbb
xlat
pop
stos
out
xlat
inc
dec
pop
pop
je
lods
inc
push
inc
int3
pop
lea
(bad)
(bad)
movs
ror
shl
out
push
and
pop
movs
sti
(bad)
ds
scas
sub
mov
jb
ret
hlt
push
(bad)
push
call
mov
inc
push
cld
mov
push
cmc
mov
scas
xchg
jno
cli
loop
retf
cmp
sbb
mov
je
inc
dec
sub
sbb
xchg
bound
inc
push
imul
adc
inc
fwait
dec
daa
je
mov
(bad)
idiv
retf
mov
or
icebp
fild
jg
and
sub
cli
inc
cmps
push
mov
shl
mov
dec
dec
das
test
ret
sub
and
neg
jo
leave
mov
das
pop
ret
outs
inc
mov
stos
adc
mov
out
cmp
xor
mov
cdq
sbb
or
or
adc
mov
jmp
icebp
push
cwde
push
sub
loope
les
retf
repz
outs
fiadd
mov
dec
(bad)
hlt
adc
lods
mov
fstp
jg
add
pop
ficomp
fs
push
out
cwde
lods
xor
sbb
jecxz
sbb
mov
das
mov
jl
repnz
(bad)
and
in
shl
(bad)
popa
add
jb
mul
cmp
mov
pop
dec
in
bound
sar
leave
jle
ret
bound
pop
lahf
mov
or
xchg
sar
jle
adc
pop
in
xchg
jecxz
int3
nop
and
xacquire
shl
jne
mov
or
push
mul
dec
adc
xchg
xchg
push
nop
mov
sti
imul
loopne
les
fld
push
jmp
pop
addr16
mov
sbb
fstp
xchg
pop
dec
cdq
imul
clc
sbb
out
xchg
(bad)
mov
ins
adc
je
fidiv
jno
imul
loop
scas
jnp
stos
and
cs
fisub
aaa
movs
jl
rcl
movs
retf
fwait
cmp
in
icebp
sbb
jne
pusha
jecxz
mov
or
(bad)
mov
inc
popa
cld
cli
iret
stc
or
ror
push
push
add
mov
inc
mov
push
es
jbe
rcl
out
daa
(bad)
ins
push
enter
hlt
adc
mov
mov
iret
xor
retf
sahf
xor
sub
mov
adc
movs
adc
clc
mov
mov
(bad)
pop
imul
shl
lahf
sub
bound
inc
les
loope
sbb
std
xchg
popa
sub
and
inc
in
mov
cmp
aad
cli
push
call
xchg
sub
(bad)
xor
rcl
push
jge
pop
mov
ror
sub
cmc
out
sbb
pop
mov
enter
inc
in
sub
inc
out
sub
sbb
pop
leave
movs
push
push
stos
pop
stos
aaa
addr16
ins
outs
out
jns
aad
mov
cmp
inc
cmps
retf
int
adc
cmp
push
jp
sbb
and
shl
and
and
icebp
jae
out
and
mov
(bad)
dec
lea
mov
xchg
in
mov
mov
fadd
dec
and
or
and
push
ficom
cmp
sbb
and
sbb
ins
retf
pop
imul
sub
ins
aas
movs
push
jae
aam
(bad)
mov
das
xor
imul
cmp
xor
pushf
cmp
icebp
jl
test
sub
mov
cdq
mov
pushf
hlt
inc
xchg
adc
jae
aas
gs
xor
cmp
icebp
or
sti
imul
push
jb
jmp
rcr
mov
das
or
mov
lods
imul
mov
xchg
mov
xchg
fsubr
out
ins
fild
fxch
loop
xor
pop
push
adc
add
jo
adc
or
xchg
(bad)
add
cmp
push
out
xlat
dec
and
iret
or
jne
sbb
(bad)
fmul
mov
and
jne
dec
and
pop
out
xor
hlt
sbb
ret
cmps
in
add
cmc
mov
xor
scas
pop
(bad)
shl
lea
ss
(bad)
sbb
fidivr
test
xchg
loopne
jae
or
mov
inc
sub
ins
xchg
mov
sub
call
mov
lea
sub
es
mov
inc
sub
adc
push
add
fild
dec
ss
xchg
adc
xor
test
ja
cdq
les
std
inc
inc
add
js
cmps
fidivr
movs
adc
push
shl
and
sbb
(bad)
shr
mov
and
cmp
addr16
or
bound
inc
out
nop
cmp
cdq
mov
hlt
ret
adc
dec
jmp
(bad)
mov
push
mov
out
dec
(bad)
push
fist
daa
lea
iret
aaa
mov
sub
out
and
jg
pop
jb
test
sub
js
sbb
push
lds
sbb
jecxz
stos
sub
cmp
pop
js
mov
xor
xchg
cs
xchg
out
pop
popa
sti
cdq
pop
(bad)
repnz
xlat
add
dec
jle
(bad)
mov
arpl
push
out
aad
sub
inc
add
test
sbb
mov
xor
pushf
pop
or
rcr
jae
mov
fucomip
jno
cmps
imul
pop
into
xor
push
xchg
and
pop
and
mov
retf
sbb
popa
repz
bound
xor
out
pop
pushf
hlt
xor
fmul
out
dec
jae
lock
ror
movs
and
inc
arpl
call
mov
mov
cli
bound
push
xchg
ds
loope
loopne
adc
xchg
and
mov
loop
js
lods
ret
xor
inc
pop
dec
stos
ds
dec
outs
aas
popa
iret
mov
cmp
xchg
adc
and
xchg
dec
mov
ds
or
(bad)
daa
inc
xor
sub
jmp
mov
jle
pop
les
push
stos
jmp
add
xor
push
or
int3
fs
jbe
imul
xor
jmp
rcr
jae
push
lock
push
cmps
sbb
test
sub
pop
in
call
jecxz
inc
into
mov
mov
loop
mov
cmp
mov
popa
or
dec
cdq
xor
je
inc
xchg
rol
leave
adc
sbb
gs
ret
jno
mov
mov
or
loopne
jnp
jmp
out
and
xchg
mov
addr16
enter
movs
adc
loope
push
mov
out
push
out
movs
jno
inc
outs
pop
xor
fwait
push
mov
pop
adc
mov
jmp
in
out
cmp
xor
cmps
cld
movs
fs
xor
dec
ds
scas
add
add
mov
xor
mov
pop
cwde
sub
push
jl
and
jecxz
iret
add
int
xor
test
inc
pop
dec
mov
or
inc
loope
test
inc
push
inc
(bad)
scas
int3
xor
in
hlt
jns
dec
jns
push
gs
mov
dec
cwde
(bad)
sbb
xlat
inc
out
adc
iret
sbb
xor
jbe
retf
stc
adc
inc
jg
dec
int3
cwde
add
pop
xor
test
inc
lds
push
mov
outs
repz
or
adc
cmp
nop
pop
lods
(bad)
adc
pop
push
jmp
sbb
cmp
or
jne
ror
push
inc
dec
into
fadd
mov
xchg
or
dec
lods
retf
(bad)
mov
aaa
shl
(bad)
cwde
cmp
jp
xchg
idiv
mov
in
repz
mov
push
ds
lods
rcr
xlat
inc
ja
les
mov
adc
out
cmp
cmp
mov
dec
mov
fmul
ja
or
bound
inc
aam
lds
inc
pushf
or
fsub
sub
add
and
mov
pop
adc
in
mov
and
pop
jnp
xchg
mov
fcmovnb
push
add
enter
daa
add
sub
iret
addr16
(bad)
jmp
or
jo
push
add
popf
inc
push
(bad)
fisubr
and
xchg
dec
call
sub
dec
jp
jl
js
pop
lock
cmp
sbb
(bad)
sub
lods
je
mov
shl
xchg
mov
sub
fdivr
aad
mov
pop
jnp
ficomp
lds
mov
in
push
shl
dec
push
test
int3
xlat
and
in
loope
jl
in
ja
add
int3
ins
loop
cdq
(bad)
xlat
(bad)
adc
mov
dec
xor
cwde
(bad)
adc
mov
jge
imul
movs
and
outs
add
movs
add
mov
inc
lds
(bad)
cmps
retf
loope
gs
out
test
mov
ret
xchg
aas
cmps
jne
cmp
mov
mov
fldenv
and
out
repnz
retf
rcl
repz
iret
cmps
lock
(bad)
sbb
jo
jmp
xchg
repnz
mov
idiv
pop
call
jb
js
aad
lods
lds
ret
mov
clc
jp
in
inc
dec
sub
jp
sbb
xor
cmp
pop
ins
add
xor
imul
dec
mov
jb
fdivr
cmp
xor
icebp
xor
dec
jmp
in
add
outs
mov
rcl
sti
outs
daa
movs
pop
xchg
adc
dec
pop
add
daa
xchg
imul
ret
int
ja
xchg
cwde
test
mov
mov
or
js
jmp
mov
jmp
xchg
sbb
cs
and
push
(bad)
or
inc
out
adc
lods
lea
gs
shr
jmp
mov
ret
dec
sar
pop
or
movs
popf
adc
lds
popa
sub
cmps
dec
mov
leave
cmp
ds
cmc
sbb
imul
dec
sub
call
sti
pop
(bad)
dec
jb
add
push
mov
push
enter
sti
stos
sbb
cmp
dec
jecxz
mov
cmp
pop
jp
in
scas
mov
or
inc
jmp
jmp
out
repz
inc
int
xor
add
aas
mov
dec
xlat
pop
retf
rcl
sbb
adc
inc
test
ins
loope
sahf
jne
hlt
push
sbb
mov
mov
mov
jae
sbb
or
repnz
jae
(bad)
or
btc
cmps
xchg
in
add
imul
retf
or
or
xor
ficom
jbe
cmc
jecxz
popa
mov
sub
(bad)
sub
sbb
test
jmp
hlt
in
inc
cli
push
pop
pop
dec
sub
sub
test
lock
sbb
jge
das
aam
inc
cmp
loopne
inc
iret
retf
push
or
mov
rcl
and
push
sub
push
mov
cmp
call
jbe
ret
jl
jecxz
or
lods
fcmovbe
sbb
pop
push
lds
inc
or
mov
mov
inc
adc
or
inc
ret
xchg
dec
jne
mov
or
or
ds
retf
js
dec
dec
sbb
cmp
dec
popf
imul
ss
adc
call
xor
pop
push
test
ds
cld
push
add
addr16
fwait
int3
mov
dec
mov
jmp
adc
std
xor
sub
fist
sar
xchg
push
imul
cmps
dec
js
ja
inc
mov
pop
xor
push
sbb
mov
rcl
xor
inc
pop
(bad)
xchg
dec
xchg
xchg
pop
add
outs
adc
pop
fs
jle
xchg
cdq
mov
and
iret
sub
xchg
dec
mov
ror
cmp
jo
mul
mov
jns
(bad)
aas
sub
addr16
mov
inc
inc
push
sahf
sti
xor
pusha
inc
cmps
imul
clc
pop
mov
pop
add
dec
fstp
fldcw
gs
iret
mov
(bad)
xchg
ds
inc
jle
test
or
icebp
push
sbb
jg
test
lea
repnz
add
or
ja
sti
xor
add
dec
cmps
mov
lds
cmp
(bad)
(bad)
adc
pop
sbb
ins
mov
mov
mov
or
fidivr
cli
jnp
setb
aad
add
sub
rol
and
ror
or
xchg
ss
jp
imul
pop
repnz
(bad)
out
mov
jne
or
add
hlt
repnz
add
pop
sti
std
in
sub
lock
dec
cmps
shl
call
jae
mov
shr
js
mov
mov
mov
push
pop
repnz
fild
or
xchg
push
and
arpl
nop
sub
pop
and
xchg
adc
(bad)
leave
add
mov
cmp
paddsb
jns
scas
mov
loop
jl
xchg
push
les
cmps
outs
inc
xor
dec
fld
fistp
and
loope
and
sbb
pop
retf
pop
cmp
add
xor
xchg
sub
xor
daa
mov
dec
xchg
jbe
mov
ret
sti
push
xchg
inc
popf
inc
mov
mov
mov
xlat
fsubp
add
xlat
xchg
and
cmovae
push
xor
ror
es
in
imul
xor
icebp
clc
pushf
or
ins
or
pop
or
test
xchg
or
jo
add
shl
(bad)
mov
fsub
jnp
call
mov
pop
push
in
cmp
rcr
or
fcmove
in
fcmovbe
ret
stos
mov
dec
int
(bad)
sbb
push
call
(bad)
mov
or
inc
push
icebp
out
push
loopne
inc
and
aam
xchg
inc
mov
push
sbb
enter
shl
and
pop
ret
outs
ins
bound
(bad)
ins
adc
push
push
sbb
icebp
leave
(bad)
retf
(bad)
xchg
stos
cmp
cmp
pusha
push
aaa
aas
(bad)
addr16
and
into
push
xchg
call
jmp
pop
test
addr16
and
cmc
add
hlt
mov
aaa
aaa
mov
(bad)
movs
mov
or
and
mov
or
inc
push
outs
fidiv
(bad)
call
mov
test
adc
call
inc
and
sub
lods
mov
sbb
mov
(bad)
das
xor
bnd
cmps
loope
adc
sbb
xchg
retw
cmp
sti
jmp
push
lds
pop
sub
pop
fld
add
cli
cdq
in
mov
inc
or
inc
xchg
push
cmp
adc
sbb
sub
js
clc
or
push
sbb
stos
mov
sahf
call
imul
mov
loop
bound
scas
jb
jbe
arpl
lea
les
outs
iret
inc
adc
sbb
call
xchg
cwde
or
outs
mov
lea
mov
mov
mov
sub
inc
mov
mov
push
repz
pop
jl
stc
shl
dec
out
mov
aad
jbe
leave
push
shl
pop
mov
(bad)
lea
pop
fcmovnb
mov
xchg
mov
dec
rcl
or
mov
mov
pop
xor
jl
jne
add
xchg
je
outs
(bad)
push
jne
or
mov
or
and
xor
jno
aas
outs
cld
ins
fsubr
rcl
push
out
pop
add
fs
jns
rcl
jmp
aad
in
ss
add
out
stc
fiadd
movs
jge
mov
fmulp
retf
sbb
fistp
sub
mov
push
adc
dec
sbb
inc
popf
mov
xchg
or
sbb
cmps
push
adc
loope
mov
sub
adc
loope
jb
mov
iret
adc
push
push
add
repz
jge
inc
push
lods
nop
sbb
stos
pop
mov
and
cmp
fnstenv
std
test
cmc
add
out
popa
(bad)
in
das
push
sub
cli
sub
(bad)
jmp
cmps
stc
ret
lock
jg
jmp
sub
int
cld
sbb
popf
push
jb
pand
push
inc
ret
inc
mov
icebp
test
sbb
and
pop
aas
sbb
rol
test
inc
loop
test
or
ss
jno
add
cmp
lods
mov
adc
jne
call
xchg
xor
cmps
xchg
aam
aad
fisub
and
push
enter
add
cmps
dec
shl
jno
outs
stos
dec
xchg
xchg
dec
mov
in
fadd
jmp
sub
jecxz
push
push
mov
fist
xor
xor
cmp
mov
in
dec
and
cmp
cmp
(bad)
leave
lock
pop
xchg
ins
mov
outs
add
add
and
ror
or
lods
scas
inc
ror
mov
pushf
sub
(bad)
mov
mov
sbb
jne
cli
aaa
fwait
std
test
cmps
(bad)
adc
or
mov
sub
push
push
loop
inc
jbe
mov
mov
sar
test
sub
or
ins
mov
pop
(bad)
mov
or
add
retf
cmp
lea
(bad)
hlt
xchg
(bad)
(bad)
add
popf
xchg
xor
pop
adc
enter
retf
outs
into
push
out
add
jbe
mov
out
fwait
jmp
inc
add
push
sbb
xor
push
cwde
add
jmp
mul
mov
pop
leave
imul
xchg
pop
push
jae
sbb
jge
mov
or
leave
xchg
(bad)
pushf
clc
pop
call
cmp
retf
pop
xor
jecxz
pop
loope
mov
and
cmp
push
lods
les
mov
jl
ja
ds
das
fs
bound
ret
fisttp
sub
inc
pop
pop
pop
out
cli
inc
cdq
cwde
sub
or
push
mov
cmp
push
call
loope
adc
dec
push
gs
add
mov
je
adc
mov
or
jp
push
out
sbb
ins
imul
cmc
push
(bad)
bnd
popa
jne
cmps
test
(bad)
hlt
dec
push
in
xor
popa
aas
cmp
test
mov
dec
pop
inc
mov
sbb
mov
push
retf
push
cmc
pop
dec
sahf
iret
push
popa
jp
adc
dec
call
dec
in
and
cmp
scas
rcr
jae
lock
jns
mov
fwait
adc
gs
pop
pop
cmps
lods
popa
push
dec
in
inc
das
xor
sbb
xor
bound
push
push
jno
icebp
dec
push
out
mov
mov
imul
popf
retf
cmp
ins
retf
stos
iret
mov
loop
xor
push
icebp
or
jmp
push
stc
fldcw
nop
cmp
mov
mov
sbb
fwait
je
xor
mov
aad
cmc
inc
pop
fs
xchg
sbb
mov
mov
add
loope
sbb
xor
add
sbb
jmp
dec
call
rol
retf
sub
aad
retf
sar
repnz
aaa
mov
iret
sbb
jge
jo
xchg
jnp
adc
add
je
rcr
add
add
fwait
out
jbe
sub
pusha
dec
mov
cmc
stc
in
scas
mov
out
xchg
clc
and
aad
dec
test
fcmovnb
sub
sub
in
mov
mov
push
test
dec
mov
add
ins
int
and
mov
and
pop
mov
movs
ss
pop
adc
and
in
outs
ret
mov
stc
jmp
stos
lds
rcl
and
out
loop
or
dec
mov
push
adc
add
fidiv
mov
pop
xchg
push
mov
xchg
xor
data16
xchg
adc
stos
retf
mov
and
mov
(bad)
(bad)
xor
stos
repnz
xchg
rcl
inc
jge
jg
dec
mov
shl
std
hlt
ret
call
gs
cld
lea
jp
(bad)
les
lea
gs
push
dec
inc
mov
int3
dec
inc
and
xchg
dec
scas
push
vmovd
inc
inc
mov
push
(bad)
scas
cmps
mov
movs
cmp
pop
mov
sub
push
jmp
movs
mov
mov
out
dec
rcl
enter
in
push
ds
(bad)
xchg
xchg
cld
jno
out
or
or
pop
cmc
retf
cli
sbb
push
fisubr
aas
cwde
(bad)
call
push
add
mov
adc
xchg
shl
dec
dec
jle
aam
stc
xchg
pushf
jmp
mov
cdq
popf
mov
adc
dec
je
aaa
ret
stos
dec
shr
ins
push
xor
inc
dec
rol
cwde
popa
fdivr
fadd
add
jno
mov
mov
retf
aas
repnz
add
jbe
dec
outs
sub
add
sbb
pop
or
(bad)
hlt
daa
xor
sahf
movs
pusha
mov
lods
leave
bound
xor
cwde
cwde
xor
sbb
cmp
call
fbstp
(bad)
or
ret
gs
test
mov
rol
sahf
pop
ins
jecxz
xchg
jns
cli
repz
pop
popa
cld
test
xor
jne
movs
imul
sub
jmp
push
xor
or
xor
fucomp
nop
rol
inc
or
shl
sub
push
add
mov
test
xor
or
jecxz
(bad)
jg
in
hlt
xchg
xchg
push
movs
xchg
ficomp
add
das
or
push
add
push
loopne
sar
fs
sub
test
sub
jmp
mov
je
dec
(bad)
test
popa
cs
pop
test
movs
out
(bad)
in
and
sbb
loop
dec
call
ds
push
fcomi
jo
pop
rcl
jl
lock
jecxz
stos
add
lods
mov
jo
outs
add
vpcmpgtd
lock
xchg
pop
out
clc
rol
or
mov
mov
jecxz
bound
mov
in
xor
dec
movs
lea
in
pop
(bad)
mov
xor
mov
xchg
fadd
cdq
and
mov
adc
xor
test
test
or
repnz
jp
shr
test
jp
pop
imul
out
aaa
scas
push
push
push
mov
adc
mov
mov
dec
push
nop
cmps
add
ins
movs
retf
sub
aaa
add
push
scas
add
push
cdq
inc
repnz
iret
ja
loopne
int3
sbb
mov
lds
movs
les
inc
jg
sub
mov
sub
mov
push
lea
xchg
dec
scas
adc
jl
mov
pushf
mov
(bad)
out
rcr
mov
lahf
mov
repnz
pop
dec
loope
data16
jno
pop
mov
mov
mov
push
jecxz
fcom
jmp
shl
xor
imul
cmp
xchg
jmp
sahf
adc
mov
sahf
jecxz
repnz
cmp
or
(bad)
adc
inc
and
mov
sub
(bad)
adc
nop
mov
movs
pop
shr
shr
pop
mov
add
jb
sar
popa
dec
lahf
inc
fst
mov
call
jp
sub
pop
pop
out
stos
ja
mov
cli
shr
mov
inc
jl
ins
xor
jnp
xchg
push
sub
lea
lods
lock
rcr
xor
aas
(bad)
icebp
or
clc
or
lods
imul
out
popa
xor
lods
std
test
xchg
les
data16
mov
add
fs
into
inc
pop
mov
dec
stos
adc
cwde
lock
popf
inc
sti
pop
loop
imul
inc
inc
lea
mov
push
repnz
xchg
xor
and
sbb
or
pop
jae
jb
icebp
out
icebp
addr16
add
sti
(bad)
cmp
mov
cdq
js
inc
bound
std
pop
es
pop
lods
int
std
out
sub
test
out
dec
test
cli
and
adc
cmp
adc
aad
jae
add
mov
pop
mov
xor
call
call
in
jmp
xchg
outs
add
popf
jne
or
inc
cmc
cmps
mul
mov
(bad)
sbb
inc
stos
cld
mov
sbb
(bad)
jns
sahf
aad
call
jo
addr16
xchg
mov
sbb
push
and
and
xchg
and
ins
sub
mov
jl
mov
xor
or
inc
add
pop
je
and
xor
loop
cmp
stc
jns
popa
pushf
mov
int
data16
sbb
das
cmp
(bad)
pushf
loop
popa
push
and
fcomp
and
scas
call
mov
pop
bound
aad
push
push
and
call
scas
in
push
jg
sbb
ins
mov
js
jnp
lahf
lods
ja
in
cmp
jge
pushf
sti
push
leave
imul
imul
sub
sub
ins
xor
inc
mov
clc
call
pop
mov
jbe
or
leave
je
pop
aam
mul
je
and
clc
jae
inc
adc
or
or
dec
jmp
cs
not
sbb
fstp
jl
jno
mov
jl
push
pop
cs
cli
js
ret
cmp
stos
xor
jmp
mov
cmps
imul
std
and
fucomi
cmp
ja
push
movs
or
ins
cmc
push
outs
(bad)
or
popf
and
shl
mov
mov
and
mov
xor
ds
jle
or
xor
xlat
pushf
shl
stc
sbb
neg
push
sub
add
push
pop
movs
and
test
cmp
popf
sti
cmp
mov
dec
mov
inc
stos
test
frstor
pop
ret
stc
ffreep
out
push
lock
or
push
mov
call
sbb
inc
push
pop
in
jge
(bad)
ins
fistp
bound
mov
or
test
mov
cmp
mov
mov
sub
lock
pop
pop
or
pop
push
leave
add
pop
loopne
inc
aas
(bad)
pop
loopne
int3
ret
jnp
rol
stc
cld
cmp
dec
sub
push
sub
lods
mov
inc
and
(bad)
out
cmp
movs
shr
cmc
add
stos
outs
pop
mov
push
shl
adc
stc
and
call
dec
and
mov
es
adc
inc
out
lea
mov
mov
stc
cs
and
nop
aas
push
push
cmp
daa
outs
mov
dec
jg
xor
push
inc
mov
out
nop
mov
in
fwait
daa
das
icebp
imul
(bad)
mov
out
int3
mov
(bad)
ret
daa
outs
sbb
pop
movs
sbb
xchg
adc
cmp
jge
stc
popa
es
rol
aaa
scas
mov
push
ss
cmps
ins
(bad)
aam
pop
in
(bad)
cmp
mov
(bad)
sti
aaa
repz
inc
sbb
retf
in
xchg
cmp
and
ret
pop
loope
mov
mov
mov
sub
inc
jmp
adc
push
push
dec
(bad)
jmp
add
inc
test
repz
stos
je
sbb
pop
push
and
cdq
stos
xor
outs
arpl
mov
adc
outs
fidivr
xchg
imul
mov
cmp
(bad)
lods
int
(bad)
push
pop
mov
cmp
push
add
add
or
mov
pop
push
ror
test
out
and
bound
cmp
les
xor
clc
repz
dec
shl
into
nop
out
sub
mov
sub
ficomp
push
cmps
mov
fwait
pushf
dec
je
js
pop
scas
mov
inc
fs
nop
xchg
cmp
imul
push
jmp
test
pusha
clc
cwde
lock
or
ficom
test
cmps
pop
(bad)
outs
or
gs
mov
(bad)
scas
mov
add
mov
ds
mul
xor
stc
ss
cmc
je
sub
xchg
mov
jle
mov
jp
clc
nop
ins
inc
xchg
mov
adc
or
in
cmp
fwait
mov
arpl
loop
fcom
in
addr16
inc
fist
repz
or
arpl
test
cmps
and
popf
rcl
sbb
cmp
jno
inc
adc
cmp
mov
leave
ror
inc
bound
pmaxsw
add
shr
pop
shr
mov
or
out
add
inc
(bad)
out
jp
push
mov
retf
push
push
sbb
cwde
xchg
fnsave
mov
add
pusha
mov
push
add
dec
pop
dec
out
push
jbe
jg
or
scas
rcl
pop
imul
pop
dec
inc
lea
(bad)
mov
data16
fsubr
mov
aam
in
xchg
add
ds
ret
mov
and
lods
mov
ins
cmp
push
xchg
imul
mov
call
stos
xor
fstp
jmp
repz
dec
jno
jecxz
popa
jb
pop
jmp
mov
pushf
je
sub
or
adc
sbb
movs
(bad)
add
push
adc
dec
and
push
mov
jg
mov
jno
jle
hlt
shr
jmp
sahf
popa
mov
and
call
mov
push
lods
sub
cli
pop
cdq
mov
pop
in
rol
add
push
rol
(bad)
sbb
pop
push
cli
stos
imul
cmps
mov
push
jb
mov
add
mov
fisub
dec
jnp
in
add
ins
loopne
cmp
daa
popa
adc
in
mov
stos
stos
xor
loopne
scas
and
lea
shl
mov
outs
dec
retf
inc
mov
or
push
fst
les
jnp
mov
iret
in
stc
fwait
jb
push
adc
push
out
outs
sub
mov
fdiv
leave
into
push
outs
out
adc
aam
push
sub
mov
std
jecxz
std
int3
and
leave
xchg
pop
lea
in
jb
stos
jb
clc
inc
add
aas
outs
leave
xchg
popf
add
xchg
repz
retf
inc
mov
xor
(bad)
lock
xchg
push
mov
push
aam
inc
cmp
sbb
jns
xchg
or
inc
call
xor
jp
inc
lar
push
jle
ret
pop
aad
inc
scas
fisttp
dec
jle
iret
dec
rol
into
(bad)
mov
mov
fst
xchg
movs
sbb
inc
cli
xchg
adc
cmps
xchg
lods
pop
push
cmp
ficomp
xchg
fxch
cmp
dec
xchg
xor
or
into
sbb
adc
arpl
cmp
jle
jl
mov
jae
aam
cmp
rcl
xor
pushf
push
jl
std
stc
sar
inc
lds
add
mov
stos
popf
jnp
xor
push
mov
adc
dec
cmp
cmp
jecxz
popa
mov
pop
jae
mov
mov
adc
popf
mov
or
xor
adc
and
fs
and
outs
(bad)
popa
mov
sti
out
sbb
shr
push
int3
ret
movs
sub
or
mov
int
xchg
fcmovu
pop
call
mov
jno
jp
int
scas
dec
lds
sub
mov
sbb
push
sbb
ja
jns
cmps
arpl
test
inc
xor
push
out
pop
inc
inc
in
pop
mov
adc
push
mov
xchg
xchg
or
jge
out
sub
sahf
sub
mov
mov
dec
xor
mov
aas
or
lods
cdq
mov
mov
lock
jmp
cmp
pushf
retf
cmps
arpl
cmp
cdq
mov
push
and
push
jnp
mov
or
push
pop
shl
sbb
inc
test
(bad)
pop
in
imul
fidivr
in
mov
retf
and
push
stos
and
xor
(bad)
popa
xchg
lock
mov
inc
mov
and
push
(bad)
(bad)
pushf
xchg
mov
mov
adc
int3
in
call
add
or
xor
enter
jg
mov
(bad)
bound
iret
aad
(bad)
fsub
push
cld
lods
ret
mov
fisubr
xchg
icebp
inc
cwde
or
xchg
xor
add
mov
repnz
jg
fs
xchg
jmp
lea
xchg
dec
push
aad
push
pop
sub
jmp
pop
jns
(bad)
cmpxchg
mov
repz
mov
fistp
jge
bndldx
sar
or
push
and
push
inc
mov
les
sub
jnp
test
repz
add
inc
movs
pop
add
dec
mov
frstor
xor
mov
xchg
jnp
dec
jne
sbb
and
in
mov
movs
ja
pop
mul
jmp
mov
es
jg
jae
push
nop
mov
mov
fdivr
cld
ja
dec
(bad)
das
inc
fld
or
dec
and
cs
bound
sbb
xchg
pop
inc
rcl
imul
sbb
popf
and
sbb
call
es
pop
loope
mov
dec
add
sbb
and
pusha
int
jg
add
xor
cdq
dec
xor
in
push
pop
aad
or
inc
pop
(bad)
push
xor
pusha
mov
jle
in
scas
and
js
adc
sub
shl
xor
cmp
fsubr
jg
inc
dec
inc
pop
mov
in
and
gs
mov
mov
jbe
dec
cs
pop
fcom
adc
or
popa
pop
xchg
movs
sbb
sub
dec
fcmovu
mov
loopne
jecxz
std
sar
inc
adc
mov
xor
pop
js
stc
dec
mov
mov
arpl
(bad)
retf
push
aad
sar
inc
add
sar
rol
mov
test
stos
out
xchg
pop
jns
and
dec
jmp
pop
xor
mov
cmp
inc
shr
addr16
jecxz
clc
jl
fcomp
shl
mov
mov
push
add
xlat
xchg
jno
js
push
addr16
jl
pop
mov
mov
je
cmp
adc
stos
hlt
(bad)
shl
sbb
push
lahf
pop
xchg
or
arpl
sbb
mov
fcmove
or
pop
inc
pop
les
into
pop
jns
cmps
cmp
pop
ins
dec
or
adc
jp
dec
dec
pop
inc
xchg
cli
or
int
jmp
lods
inc
push
pusha
jg
jecxz
scas
adc
psubb
jge
jno
retf
adc
outs
sbb
out
pop
add
enter
sbb
std
jmp
sub
mov
and
in
and
jmp
jbe
mov
mov
stos
test
cli
aaa
ret
stc
popf
adc
sub
xor
pop
rol
shl
in
mov
mov
fwait
or
add
xchg
leave
out
cmp
cmp
and
fwait
xchg
xor
adc
pop
loope
movs
add
push
mov
addr16
imul
dec
ficomp
(bad)
mov
jg
lahf
js
test
or
or
pop
add
sar
ret
retf
add
(bad)
fldz
and
pushf
and
add
mov
bound
mov
mov
mov
ins
jmp
inc
jns
pop
mov
lods
push
dec
push
(bad)
test
fdiv
call
mov
pop
mov
jo
cmc
and
or
mov
and
jmp
jmp
mov
mov
test
add
fldcw
stos
inc
stos
cmp
leave
(bad)
retf
adc
xchg
test
repnz
retf
cmp
pop
push
repnz
cmc
adc
mov
into
mov
popa
fcomip
in
test
retf
out
inc
aam
mov
pop
and
shl
sbb
mov
leave
xor
scas
push
jo
push
mov
movs
mov
xchg
ja
stos
dec
pop
lahf
rcr
sbb
add
sbb
and
mov
push
mov
ds
std
arpl
fist
sub
or
rcr
ret
scas
mov
ret
cmp
jecxz
lds
(bad)
add
xchg
stos
mov
iret
idiv
add
int3
and
ds
push
shl
add
cmp
into
cmp
loope
adc
(bad)
mov
and
jbe
scas
sub
xchg
jbe
call
or
cmp
fnstenv
xchg
jecxz
mov
sub
push
and
mov
xlat
and
mov
dec
outs
sbb
adc
mov
lock
or
test
pushf
leave
test
jmp
mov
jns
ret
pop
sbb
iret
mov
push
lock
adc
and
call
retf
push
je
add
dec
rcr
add
mov
pop
pop
mov
mov
adc
into
mov
mov
cmp
les
not
add
inc
shr
jle
popf
shl
outs
or
mov
sbb
pop
xchg
push
in
sub
xchg
mov
retf
mov
cmps
push
cmps
or
dec
jge
(bad)
in
cmps
cmps
inc
push
jbe
or
inc
loopne
out
push
mov
sub
lods
push
or
fcomp
or
push
cmps
sti
inc
mov
retf
test
jae
(bad)
loop
mov
(bad)
callw
jp
and
sbb
fmul
aaa
pop
mov
out
push
pop
add
adc
int3
cmp
inc
dec
add
lods
fadd
sub
fadd
inc
sub
jecxz
adc
icebp
imul
outs
add
popf
stc
cmp
retf
lods
mov
test
sbb
sbb
jo
xchg
rol
pop
mov
(bad)
loopne
call
fdivrp
stc
outs
lahf
mov
rcr
iret
dec
int3
xlat
dec
es
push
pop
jbe
mov
mov
lahf
adc
pop
sbb
inc
push
js
test
xor
lock
pop
push
das
jne
push
pusha
mov
inc
or
aam
xchg
mov
cmp
dec
daa
movups
mov
cdq
(bad)
push
xchg
jmp
outs
inc
mov
arpl
and
std
dec
lock
jle
cmps
lods
ret
aas
outs
jmp
jge
mov
jne
jp
mov
outs
shr
jecxz
ins
inc
rcl
aam
loop
jnp
or
nop
fbld
mov
mov
fisub
push
loopne
adc
popa
les
loope
sahf
repz
popa
dec
shr
mov
std
pop
xchg
jnp
cmp
js
pop
adc
std
jp
lods
shr
in
nop
dec
and
stos
xlat
and
(bad)
cld
ret
out
mov
adc
mov
or
sbb
push
ret
rcl
shr
cmp
dec
ret
cdq
mov
fild
in
leave
add
sar
das
call
dec
lahf
jo
push
adc
or
xor
dec
sbb
sub
xlat
xor
sti
pop
ins
or
in
ret
dec
addr16
cmp
adc
data16
loopne
fisttp
jbe
int
or
inc
sbb
jo
or
into
arpl
arpl
ins
xor
dec
cmps
xlat
out
inc
xor
into
mov
imul
dec
ficomp
jmp
ret
hlt
pop
and
adc
retf
cmps
ds
ds
cmp
sbb
mov
xchg
les
xor
xchg
push
push
sub
push
out
xchg
jle
sbb
mov
sub
(bad)
fbld
rcr
jmp
test
(bad)
dec
push
out
jmp
adc
scas
sbb
xor
ret
into
mov
fld
scas
data16
mov
push
enter
mov
cmp
stos
cmps
fiadd
je
jo
gs
call
nop
mov
xor
stos
lahf
and
nop
sub
mov
fnstsw
pop
stos
in
loop
ficomp
pusha
pushf
and
(bad)
mov
fimul
inc
icebp
aas
sub
xchg
sub
jg
and
in
cmp
dec
push
in
mov
sub
mov
dec
xor
cs
inc
add
mov
jecxz
rol
mov
cmp
xchg
inc
ss
ss
and
iret
(bad)
test
jge
xor
(bad)
and
out
mov
stos
push
ror
pop
(bad)
xor
xchg
dec
imul
adc
loopne
xor
jmp
int
sti
push
dec
xor
xor
mov
pusha
or
mov
bound
adc
leave
and
adc
retf
std
push
jge
or
pop
jae
(bad)
sub
sahf
cmp
aad
xchg
loopne
sbb
(bad)
mov
repnz
sub
sub
outs
out
sbb
adc
mov
std
jmp
mov
les
sub
sbb
js
pop
popa
je
mov
dec
repz
pop
arpl
push
fadd
leave
jecxz
inc
add
lods
mov
call
fwait
or
add
jns
cmp
iret
dec
(bad)
mov
xor
pop
test
cmc
cld
in
lahf
and
mul
jb
pusha
in
pop
xor
neg
call
cmp
or
icebp
shr
out
and
xor
jle
cmp
arpl
in
leave
aad
rcl
gs
out
data16
sub
test
out
movs
std
mov
push
stc
push
pop
pop
pop
loopne
fdivr
(bad)
cmps
inc
xchg
repz
jbe
fdivr
jne
mov
jmp
popa
popf
clc
lock
adc
(bad)
sub
mov
jecxz
pop
shl
xchg
mov
repnz
(bad)
lahf
shl
pop
sub
add
pop
ins
cmp
inc
xchg
icebp
cli
jl
pop
test
stos
xor
xchg
nop
int
gs
mov
loopne
popf
sub
retf
lods
xor
loope
pusha
jns
xchg
jg
mov
jae
pushf
mov
dec
imul
dec
mov
inc
inc
fisub
std
shl
arpl
shl
cmp
aad
stos
ja
fs
popf
adc
add
push
(bad)
jl
jns
sub
sbb
mov
rcl
mov
(bad)
mov
mov
xor
out
jae
(bad)
push
retf
daa
push
jge
popa
aad
or
outs
mov
inc
in
inc
repz
push
push
inc
fnsave
aas
fcomi
mov
icebp
rcr
lea
repnz
aaa
lods
loopne
sub
cmp
pusha
push
xchg
(bad)
xchg
nop
shr
cmp
add
out
lods
mov
in
sbb
ficom
pop
jmp
outs
sub
jle
pop
add
or
aas
jb
aam
je
test
ins
(bad)
daa
sahf
and
psubw
xchg
cmp
mov
adc
mov
pop
rcl
or
in
mov
mov
mov
cmc
adc
fs
sbb
xor
adc
(bad)
outs
xchg
pop
cmp
mov
std
and
push
or
in
sbb
fisub
sbb
outs
pop
not
sbb
jmp
fst
sbb
sbb
xchg
push
daa
jns
fld
in
sbb
add
inc
and
popa
jo
std
test
cwde
ret
add
mov
cmps
jecxz
mov
mov
xchg
pop
or
push
ins
push
pop
call
jbe
sahf
mov
inc
and
pusha
(bad)
add
jl
xchg
sbb
sub
jno
mov
adc
aam
pop
sbb
imul
xor
push
push
cmc
add
cmp
dec
pop
or
push
adc
pop
sub
or
fs
xor
rol
inc
cmp
push
xchg
aaa
add
cs
test
or
scas
call
add
rol
cmps
xchg
jmp
test
popf
or
push
inc
mov
ret
sbb
mov
mov
stos
scas
or
push
in
popf
clc
jl
out
sbb
cmc
and
and
rol
cwde
jecxz
xchg
mov
jg
sub
pop
imul
enter
rol
sub
mov
cmc
xchg
repnz
jno
ret
push
push
cmp
mov
mov
iret
mov
xbegin
cwde
cmp
ins
in
stos
xor
rcr
sbb
(bad)
mov
xchg
inc
sub
cdq
mov
jnp
xor
and
int3
outs
inc
stos
or
and
sub
mov
pop
mov
pop
mov
mov
in
mov
and
sub
ins
icebp
inc
rcr
enter
outs
rcl
test
push
retf
push
dec
push
lods
sbb
pop
cmc
cmp
cmp
pusha
mov
inc
sahf
cmp
into
xlat
mov
jbe
push
test
adc
and
(bad)
jp
xlat
cwde
(bad)
dec
emms
mov
jmp
in
sbb
push
lds
jmp
int
xchg
bound
enter
sbb
inc
jecxz
popf
sar
call
int
ret
push
push
dec
sahf
fld
sub
ret
loop
scas
sti
int
imul
add
cmp
mov
test
movs
inc
mov
test
push
popf
push
stos
push
xor
jl
xchg
nop
jae
aaa
mov
push
jmp
inc
mov
xchg
(bad)
jae
xchg
(bad)
bound
sbb
jmp
ret
fisub
mov
adc
clc
ror
stos
imul
cmp
sub
dec
add
dec
test
jmp
aad
fisub
jb
dec
mov
scas
pop
in
push
dec
inc
adc
outs
push
and
xor
loopne
xchg
ja
cmp
cmp
std
data16
adc
dec
inc
stos
mov
sub
out
push
mov
push
lock
adc
stc
or
mov
sub
js
aad
sbb
dec
sbb
outs
jle
aam
div
mov
add
stc
adc
jnp
add
std
out
xchg
sub
arpl
adc
stos
iret
das
popf
retf
push
add
sbb
inc
iret
xor
int3
fisubr
jge
xor
ret
add
outs
adc
not
gs
(bad)
mov
dec
sub
cmp
fldl2e
cmp
mov
and
sub
sub
leave
lods
fidiv
mov
(bad)
mov
jle
test
fisttp
fnstcw
or
rcl
pop
and
out
imul
ret
int
shl
add
mov
mov
jo
fidivr
pushf
fsubr
paddusb
stc
jl
es
loope
imul
cld
sbb
rcr
push
out
popf
hlt
or
stos
push
sub
fwait
lea
std
xchg
imul
jne
cmp
fidiv
cdq
adc
mov
mov
xchg
shr
jg
mov
dec
js
adc
mov
dec
ret
repnz
gs
ret
push
cmp
inc
push
add
sbb
push
pop
cmc
test
cld
jecxz
psrlw
inc
xchg
mov
pusha
xor
mov
add
stos
cmp
add
cmp
xchg
leave
outs
jne
(bad)
fsubr
les
es
adc
fist
add
push
loopne
xor
xor
icebp
mov
lahf
cwde
mov
mov
mov
xor
mov
or
call
adc
inc
inc
mov
dec
xor
pop
arpl
dec
in
push
scas
inc
shl
xchg
mov
dec
and
sbb
das
xchg
jns
fcomp
xor
add
push
pop
stos
pop
enter
ret
ds
outs
cli
jmp
pop
cli
ja
jge
sbb
pop
arpl
mov
mov
imul
dec
(bad)
daa
mov
cmp
mov
mov
push
test
sbb
(bad)
in
inc
fwait
sbb
cmp
mov
call
je
cwde
out
sbb
movs
sub
mov
fldenv
gs
xchg
jno
inc
aas
jg
aam
mov
inc
int3
shl
clc
out
loop
gs
xor
xor
pop
or
add
retf
outs
inc
cli
int3
add
fsubr
push
push
cwde
sub
psrld
inc
dec
inc
sar
pop
dec
or
dec
test
ror
or
dec
xchg
adc
pushf
mov
movs
or
ss
test
push
(bad)
stc
or
inc
(bad)
or
push
dec
sbb
sbb
push
sub
std
or
xlat
push
push
mov
xor
xchg
adc
loop
das
loop
clc
(bad)
push
fild
mov
sub
out
xor
jmp
and
xchg
pop
mov
xchg
adc
dec
aas
pop
or
mov
iret
push
test
int
imul
sub
adc
fcom
add
bound
pushf
mov
cmp
add
mov
push
cld
xchg
(bad)
mov
scas
sbb
mov
push
test
or
loop
(bad)
outs
jb
push
out
jb
(bad)
or
mov
xor
popa
inc
xlat
mov
pop
ror
sub
inc
js
ja
lock
popf
or
push
jle
lock
mov
rcr
sbb
or
aas
xlat
repnz
sub
in
mov
mov
sub
lahf
and
iret
push
jns
mov
js
lock
enter
xchg
imul
shl
repz
in
sbb
or
mov
jge
dec
sbb
sub
out
cmps
dec
adc
adc
test
mov
loopne
int3
movs
pop
cmp
and
push
inc
stos
scas
bsr
in
xchg
jp
cmp
xchg
retf
ins
daa
adc
mov
jecxz
lahf
call
inc
push
jo
and
mov
ja
out
sub
cmp
jmp
dec
pop
fs
ss
pop
aam
call
jo
out
xchg
es
mov
add
mov
inc
fild
lahf
pusha
out
mov
inc
add
mov
cmp
bound
fisttp
mov
aaa
jecxz
lock
jecxz
dec
in
mov
sbb
jns
mov
test
popf
pop
jo
das
fsubr
call
mov
movsx
hlt
ss
mov
icebp
enter
push
mov
retf
xchg
dec
scas
xchg
cmp
sub
and
dec
or
pusha
inc
mov
and
call
dec
inc
mov
pop
xor
sbb
sub
push
mov
jbe
stos
inc
inc
cmp
movs
(bad)
ins
sub
mov
push
sbb
iret
pop
or
dec
outs
push
mov
jge
sub
pusha
jne
adc
push
movs
cmp
imul
lds
stos
cdq
pop
out
and
jl
int3
sbb
lahf
add
jne
inc
push
aaa
jno
retf
inc
cli
push
xchg
push
fcomp
mov
jg
pop
pop
jns
(bad)
pop
je
cmp
fisubr
xlat
sahf
pop
imul
(bad)
daa
das
ret
hlt
shl
int
in
int3
jle
mov
(bad)
push
mov
push
fstp
(bad)
dec
sbb
shl
fdivrp
call
retf
in
xchg
das
add
cmp
ror
and
mov
push
inc
adc
xchg
pop
sti
cmp
stc
adc
mov
pop
hlt
cwde
jp
aaa
jb
sub
cmps
(bad)
jnp
mov
xchg
dec
enter
sbb
dec
packsswb
lods
mov
pop
nop
movs
jg
push
fs
cwde
hlt
retf
fstp
xor
mov
or
pop
inc
mov
out
sub
mov
cmps
fwait
out
jmp
ins
scas
mov
es
ja
cmp
inc
xchg
sub
xchg
jp
jnp
sbb
push
pop
push
mov
int3
add
add
cmp
sbb
call
push
add
loop
pusha
fnsave
and
and
icebp
dec
mov
xchg
adc
cmp
das
pop
shl
fldenv
mul
push
ds
cmp
jmp
push
adc
(bad)
retf
fsub
xchg
mov
inc
enter
ja
out
imul
adc
je
rcr
dec
ja
dec
outs
repz
xchg
cmp
cmp
dec
push
ret
icebp
enter
push
push
adc
inc
data16
daa
call
and
inc
es
ret
aas
xor
outs
and
fldcw
or
jbe
jmp
push
in
add
jno
test
fsubr
sub
arpl
call
ds
fmul
popf
pushf
imul
jmp
leave
dec
mov
loope
int3
xchg
push
mov
push
mov
sbb
enter
fsub
cli
sub
cmp
stos
nop
scas
inc
aad
shl
mov
cld
(bad)
mov
push
jp
div
outs
ret
in
fistp
pop
(bad)
dec
in
shl
(bad)
aam
movs
popf
cs
jl
and
sti
cmp
loopne
sbb
mov
clc
(bad)
mov
lods
cmps
test
out
fwait
xor
frstpm(287
sub
cmp
jns
loop
jmp
das
pop
sub
pop
inc
inc
jns
sub
ficom
inc
push
pop
xchg
loope
ret
aam
mov
(bad)
aad
loop
jle
les
es
pusha
loope
in
ror
cmp
add
gs
pop
push
or
lahf
test
jmp
sbb
sub
mov
push
cs
pushf
lea
dec
into
or
outs
jmp
cmc
imul
je
cmps
dec
out
cmp
inc
pop
cmp
out
sub
cmps
inc
xor
sti
retf
mov
es
call
add
ds
mov
fisttp
sub
iret
std
jge
adc
dec
mov
loope
pop
fisub
in
jns
and
loop
cwde
fs
and
push
cld
mov
in
cmps
mov
mov
mov
cmp
dec
daa
adc
stos
mov
cld
push
loop
fidivr
mov
in
push
aaa
outs
cmps
frstor
cmp
push
cmps
icebp
or
das
jmp
mov
mov
inc
sbb
sbb
push
std
inc
aam
adc
xchg
outs
sar
gs
mov
pop
and
jne
cmp
movs
imul
and
jb
das
push
iret
(bad)
sahf
pop
clc
ficomp
and
sub
aaa
outs
cmp
pop
int
xor
fdiv
cmp
ret
add
mov
andnps
jns
pop
pop
ss
call
(bad)
pop
xchg
loopne
mov
fldcw
lods
das
pusha
out
imul
cmps
repz
out
std
xchg
mov
test
fist
(bad)
cmp
std
or
mov
xchg
jle
pop
mov
cs
inc
mov
and
iret
iret
fild
inc
ror
enter
popa
icebp
add
shl
jmp
dec
jg
adc
leave
int
or
jae
jl
and
pop
sbb
test
push
sbb
ret
xchg
jmp
test
sbb
out
dec
mov
clc
pop
ja
pop
movs
movs
dec
xchg
jmp
jbe
rol
mov
std
adc
std
inc
xlat
clc
shl
cmc
xchg
frstpm(287
jmp
lods
lods
bound
ror
mov
sahf
fstp
mov
xchg
jecxz
scas
and
mov
(bad)
imul
push
xchg
aaa
fsub
cwde
jge
repz
push
sbb
sub
in
sbb
lods
test
into
dec
pop
gs
jge
lahf
daa
stos
adc
jmp
xchg
cmp
and
jmp
sbb
cmps
inc
dec
repnz
lahf
adc
sbb
icebp
ins
(bad)
jns
or
xor
mov
iret
sar
cwde
cmps
in
xchg
add
xchg
or
ins
adc
mov
int3
out
(bad)
mov
xchg
dec
and
xchg
mov
cld
gs
mov
mov
ds
jmp
test
mov
movs
and
not
lahf
jmp
iret
mov
ins
pop
mov
mov
sbb
xor
popa
add
lods
stos
pop
sub
push
mov
into
lahf
fadd
mov
add
fcomp
jne
stos
out
adc
mov
cmc
movs
js
xor
outs
adc
push
cld
cmp
xor
out
pop
sahf
je
push
mov
aas
adc
popa
pusha
out
and
sub
cmp
gs
imul
std
mov
ins
stc
fwait
push
pop
test
call
pop
cmp
inc
adc
frstor
mov
fwait
dec
std
pushf
push
push
dec
xor
push
shl
out
or
pop
(bad)
fmulp
dec
popa
cmps
xor
addr16
xchg
popf
cmp
cmp
shl
push
nop
scas
add
pushf
inc
pop
adc
sbb
sub
cdq
je
jmp
(bad)
dec
lahf
lahf
pop
push
jnp
push
xor
movs
cmc
cdq
jno
shl
fidiv
sbb
pop
call
mov
xchg
jg
outs
add
pop
addr16
pop
mov
pushf
movs
mov
or
leave
and
iret
mov
lock
daa
(bad)
cld
pop
out
or
push
adc
sub
pop
daa
sahf
sti
std
int3
jl
ja
xchg
lahf
leave
inc
cmps
fistp
aam
repz
dec
out
add
jmp
mov
push
jno
add
fcomi
cmp
fwait
adc
cwde
sti
ja
lock
out
and
mov
pop
mov
popa
push
outs
xchg
fwait
mov
es
jle
mov
or
mov
cmp
or
push
sar
mov
pop
jmp
pop
mov
pop
xchg
xchg
pop
je
cmp
in
rcl
loop
or
inc
lahf
push
lds
cdq
arpl
jmp
mov
ins
hlt
push
pusha
aas
cmp
jb
adc
xor
and
shl
(bad)
sti
xor
mov
(bad)
shl
es
sbb
bound
add
jno
clc
mov
dec
test
outs
iret
les
ret
hlt
add
call
fucomi
sbb
mov
std
mov
inc
pop
les
scas
and
push
inc
jns
loop
movzx
mov
xor
or
lods
mov
pop
xchg
sub
mov
inc
stos
mov
outs
inc
out
mov
mov
push
sub
mov
loop
push
cmps
fild
push
add
mov
outs
mov
xor
jbe
mov
pop
xchg
(bad)
jle
add
sub
ja
call
ret
pop
arpl
imul
and
ret
loope
out
test
fisttp
inc
mov
out
mov
test
call
adc
sbb
gs
fild
in
jl
pop
fsub
mov
and
rol
clc
cmp
das
jmp
push
sbb
add
dec
enter
sub
enter
add
loopne
or
push
lods
mov
out
ins
push
mov
shr
stos
inc
add
mov
and
inc
fdivr
pushw
mov
xchg
mov
les
or
jb
daa
jecxz
sbb
adc
(bad)
cmc
inc
jae
and
jb
data16
pop
lea
cmp
xor
pushf
(bad)
fadd
jecxz
dec
xchg
add
stc
or
sbb
out
jne
xor
sar
xchg
(bad)
cmovs
arpl
inc
ins
mov
fnstenv
test
dec
fmul
lock
mov
add
es
adc
jo
fsub
dec
inc
es
xchg
mov
lea
mulps
jo
push
stos
int
jge
out
or
inc
(bad)
push
and
jb
adc
pushf
pop
enter
lahf
out
jmp
fcom
inc
loopne
(bad)
fild
les
inc
push
xlat
je
xchg
sub
pop
xlat
jge
shr
bound
inc
cli
div
mov
aaa
retf
loop
in
jo
fucomp
ins
xchg
sub
jmp
mov
xchg
bound
out
pushf
sbb
cs
cmp
or
pop
mov
mov
into
(bad)
imul
cmp
aam
and
push
push
data16
inc
pop
inc
imul
inc
mov
jne
out
fadd
data16
inc
and
outs
mov
movs
pop
cld
aam
(bad)
sbb
mov
test
test
mov
cmps
lahf
pop
jle
dec
and
adc
mov
fsubr
cmp
jae
sti
push
out
lods
pop
sti
sbb
and
cli
adc
aaa
cwde
sti
and
addr16
neg
fld
jge
or
pushf
rcl
mov
mul
hlt
shl
jg
push
call
mov
push
mov
adc
test
sbb
int
add
fbstp
mov
push
sub
pop
sub
xor
cmps
mov
ret
and
aas
mov
es
loop
cmp
inc
xchg
pop
mov
test
pop
fistp
cdq
in
ror
out
lods
cmp
leave
nop
sub
je
push
push
jle
mov
push
cdq
shl
dec
aas
jne
lock
out
(bad)
int3
and
adc
neg
pop
mov
bound
ret
mov
jmp
sar
adc
mov
sbb
and
xor
es
into
xor
dec
sbb
cs
mov
and
cmp
fwait
rcr
mov
pop
fdivr
push
xor
in
test
xor
(bad)
push
sbb
sub
dec
ficomp
repnz
cmps
mov
dec
mov
scas
push
aam
xchg
jnp
or
dec
int
cmps
adc
add
fisub
mov
repnz
retf
fcom
mov
dec
icebp
mov
cmp
repz
aad
jne
std
or
sub
fld
fcmovu
loope
jg
pop
jmp
pop
stc
cmps
inc
jno
mov
push
(bad)
sahf
loopne
sahf
cmp
das
int
and
sub
push
dec
mov
and
(bad)
je
cmp
pusha
push
fst
xchg
test
add
test
mov
loopne
push
or
(bad)
fwait
pop
cmps
fldenv
push
repz
mov
stos
add
(bad)
out
xor
xchg
or
and
mov
mov
jb
inc
add
mov
adc
aad
in
lock
daa
call
sbb
inc
dec
jle
mov
cmp
lock
shr
lock
pop
lods
xor
mov
shr
jle
imul
dec
popf
ja
mov
sub
in
pop
mov
sub
mov
mov
dec
mov
mov
fldcw
into
or
shr
aad
adc
or
sub
out
adc
mov
ficomp
jp
xor
inc
push
data16
jmp
(bad)
rol
jo
mov
popaw
daa
push
sbb
cli
clc
jge
std
cli
loope
leave
cmps
nop
mov
stos
jg
test
sbb
xor
rcl
push
(bad)
push
loop
aaa
(bad)
cmp
(bad)
jb
push
xlat
push
pop
sub
div
lods
pop
jno
xchg
pop
cmp
push
cs
dec
xchg
fisttp
mov
sar
mov
dec
imul
repnz
mov
lea
ins
pop
retf
adc
inc
jmp
das
pushf
jae
pop
icebp
stos
jbe
jno
mov
test
pop
fxch
sub
add
gs
ret
push
std
(bad)
shr
add
ret
push
or
pop
xchg
mov
dec
mov
push
retf
push
cwde
jno
cmc
les
iret
out
cmp
cmp
cli
mov
adc
or
nop
sub
psrld
push
out
sbb
loope
pop
ret
xor
out
jno
outs
fistp
jae
adc
ds
shl
arpl
(bad)
or
xor
mov
jae
add
jecxz
js
mov
pop
arpl
stc
mov
adc
cwde
fmul
aas
mov
mov
mov
(bad)
xchg
std
bnd
fst
test
inc
dec
sub
aad
inc
inc
mov
xor
movs
test
mov
ss
xlat
cmp
push
dec
jb
jnp
xor
in
adc
inc
adc
sub
jl
das
sbb
outs
jmp
fwait
aas
or
sub
dec
movs
jo
jne
cmp
adc
(bad)
enter
xchg
test
test
xchg
jg
jae
popa
enter
pop
cmc
add
cmp
pop
shl
movs
cld
loop
adc
rol
push
cld
in
clc
popa
jnp
inc
lods
aaa
ror
add
inc
(bad)
cs
jne
xlat
inc
aam
dec
lea
mov
pop
sbb
mov
loopne
out
imul
mov
stos
mov
sub
xchg
out
lds
sbb
cmc
jge
push
and
add
nop
das
mov
scas
stos
ja
scas
shl
popf
outs
push
(bad)
retf
call
ins
inc
mov
mov
cwde
loop
ficom
and
lahf
dec
ret
pop
cld
dec
mov
jb
sub
push
mov
and
or
jl
ss
or
or
dec
arpl
xchg
sbb
(bad)
lock
xchg
pop
in
inc
mov
and
sub
cmps
xor
jl
pop
xor
inc
and
pop
(bad)
push
stc
repz
mov
adc
inc
inc
test
pop
sub
lds
dec
push
or
(bad)
mov
sti
imul
cmp
pop
inc
xor
jp
pushf
dec
fstp
mov
(bad)
out
xor
fwait
jnp
call
sar
fst
cmp
aaa
outs
sub
fcmovnb
test
imul
ins
data16
pop
stc
inc
mov
mov
pop
inc
or
test
iret
call
shr
pop
(bad)
shr
stc
add
pop
mov
xchg
icebp
pop
sub
adc
push
sub
adc
sbb
xchg
pusha
xchg
mov
and
mov
cmp
push
xchg
inc
pusha
fstp
adc
stos
jmp
movs
cmp
ja
sub
push
mov
shl
cmc
sbb
lock
out
mov
push
or
pop
pop
jb
out
dec
fistp
cmp
shr
jae
mov
jl
push
add
or
fsubr
xor
inc
or
fcmovb
sbb
adc
pop
je
dec
fcomp
mov
dec
cmps
xor
repnz
pop
int
pop
push
retf
dec
xchg
sub
lahf
mov
mov
add
mov
and
jb
pop
mov
lods
icebp
sbb
scas
ja
ret
pop
jne
stos
lods
lods
loopne
mov
mov
cmp
adc
add
ret
outs
lds
mov
inc
mov
push
lods
sbb
mov
adc
jle
fmul
adc
mov
mov
xor
movhlps
jnp
adc
mov
mov
jge
loope
push
out
add
mov
push
movs
data16
inc
inc
fwait
add
lods
fdivr
and
test
mov
dec
movs
dec
mov
ret
dec
sar
xor
ret
mov
les
jb
mov
mov
shl
xchg
call
cmps
push
pusha
pop
xchg
(bad)
mov
sub
jge
imul
dec
lahf
push
xor
inc
call
pop
push
rol
fadd
dec
ret
mov
aaa
pop
fisubr
jge
outs
pop
xor
repnz
adc
sub
sub
mov
std
xchg
xlat
sbb
jbe
mov
clc
fnstcw
sbb
mov
sbb
lds
inc
lock
jbe
lock
loop
js
mov
inc
inc
sbb
mov
and
xchg
adc
mov
cwde
mov
loopne
test
shl
inc
inc
mov
push
jge
aam
mov
add
push
dec
lods
sub
ret
les
into
inc
xor
retf
dec
jle
dec
pushf
outs
gs
pop
push
leave
dec
sbb
fidivr
cmp
pop
xor
cmp
out
lods
shl
(bad)
push
and
gs
mov
in
popf
in
out
js
mov
into
iret
jns
neg
sbb
sub
add
ret
pop
je
(bad)
dec
xchg
fldenv
daa
js
pop
and
test
(bad)
and
push
push
and
gs
int
mov
mov
add
and
push
and
(bad)
fcom
in
jbe
sub
cmp
mov
pop
sbb
mov
mov
sbb
cwde
rcl
dec
es
cmp
mov
lods
push
into
push
sar
outs
cli
xor
xchg
inc
xchg
(bad)
mov
fisubr
outs
test
das
cmp
mov
scas
aad
fwait
imul
push
iret
mov
sbb
inc
inc
int3
dec
lds
sahf
adc
inc
aas
popa
in
jp
push
xor
data16
push
and
add
xor
mov
movs
pop
jb
jb
ror
bnd
dec
push
sub
movs
aam
stc
jge
push
and
dec
shr
cli
dec
fwait
daa
xchg
iret
push
push
call
ror
sysenter
xchg
sbb
xor
mov
fcom
in
out
sub
cmp
sub
data16
loop
add
arpl
adc
pushf
iret
push
outs
mov
cli
and
mov
mov
inc
sub
das
add
test
call
cmp
add
fdivr
lock
and
adc
loop
mov
gs
js
je
mov
lahf
jb
daa
fisttp
cmc
int
xchg
aas
pop
and
retf
add
pushf
imul
rcr
pushf
or
popa
popf
and
add
jnp
jle
aam
inc
or
jmp
ret
adc
ins
push
cdq
call
dec
push
arpl
cmp
nop
aas
mov
xchg
or
sbb
cmp
imul
(bad)
movs
mov
xor
in
out
jle
out
or
lock
jmp
aas
add
push
mov
lods
ins
xchg
mov
mov
mov
adc
xchg
in
jl
sub
dec
(bad)
aad
or
dec
mov
jnp
rcl
sub
shl
jbe
cli
stos
rcl
scas
jns
icebp
sub
ins
and
retf
out
fcomp
stos
jmp
sub
sub
sahf
mov
jg
cmps
cli
movs
mov
push
xchg
repz
pop
movs
add
and
icebp
add
or
push
push
pusha
sub
ret
adc
fdiv
(bad)
fadd
sub
aas
fimul
jle
jmp
pop
mov
jl
jmp
mov
nop
mov
push
mov
adc
lds
fist
fstp
cld
mov
pop
dec
rol
loopne
ja
pusha
jne
sar
and
arpl
pop
iret
je
stos
add
mov
sub
pop
call
dec
pop
(bad)
and
fisttp
pop
jge
mov
mov
cmc
lds
retf
mov
stos
(bad)
jmp
sar
(bad)
popa
push
xchg
mov
ror
cmc
xchg
cmps
rcl
and
xor
sub
or
adc
xchg
pop
inc
fldcw
add
add
iret
pop
pop
dec
xchg
or
(bad)
popf
int
or
and
les
add
sbb
mov
movs
sub
aam
shl
ins
xchg
jge
cwde
sbb
dec
aad
mov
xchg
fld
leavew
cdq
int
lea
das
lahf
dec
xchg
int
sahf
jnp
ss
adc
jge
in
mov
subps
mov
fcmovbe
icebp
aad
cmp
ja
sti
gs
test
xlat
jbe
or
lahf
mov
push
xor
xchg
pop
mov
mov
mov
int
mov
push
mov
sbb
popf
push
in
clc
data16
loopne
dec
sbb
cmp
jb
xchg
push
fimul
inc
cdq
mov
loop
sub
sub
cmps
jle
into
mov
es
push
and
sti
not
out
or
pop
sbb
lea
add
mov
xchg
or
out
add
mov
inc
push
xchg
in
adc
adc
push
fs
xchg
pop
xchg
cmp
adc
jae
stc
inc
xor
aam
imul
push
ins
jne
mov
sbb
inc
xchg
pop
imul
idiv
das
dec
push
test
mov
or
xchg
sub
mov
cmp
das
mov
gs
aas
jl
sbb
ret
enter
dec
clc
imul
push
and
add
movs
sub
out
leave
ins
mov
retf
loope
ret
mov
(bad)
dec
rcl
sbb
push
test
add
xchg
push
jbe
mov
sub
or
inc
div
in
xor
xchg
popf
(bad)
jae
sbb
push
mov
data16
jae
sahf
ins
ficom
xchg
lock
adc
in
xlat
inc
out
and
jecxz
add
cmp
ins
aam
or
adc
icebp
and
data16
fwait
std
sbb
les
add
cwde
out
jb
jmp
push
(bad)
sub
jnp
push
shl
iret
dec
ja
cmps
(bad)
push
test
shr
cmp
mov
adc
pop
or
js
push
fbld
movs
jmp
sbb
call
push
mov
mov
fimul
cmps
cmp
lock
movs
push
daa
jle
dec
std
loope
stos
pop
aaa
adc
push
add
aas
fwait
add
cdq
pop
dec
std
cli
leave
or
mov
sbb
shl
or
call
cmps
inc
adc
(bad)
hlt
cmps
xchg
mov
sub
outs
push
mov
ja
inc
bound
stos
mov
sahf
int3
xchg
adc
pop
adc
ins
stos
cdq
jmp
data16
add
mov
push
mov
sbb
pop
inc
mov
xchg
out
push
cdq
movs
jmp
mov
adc
push
(bad)
mul
(bad)
sbb
pop
fild
(bad)
adc
pop
pop
cmps
and
inc
cli
fbld
mov
sub
cmp
popa
pop
lods
cmp
aam
add
sbb
call
aaa
std
ret
(bad)
adc
mov
mov
xchg
jge
pop
dec
mov
sub
loopne
pause
rcr
sti
mov
adc
leave
pop
mov
xchg
lods
jno
je
mov
dec
jae
mov
ins
push
into
mov
push
scas
fadd
lds
int
fcomp
sub
mov
retf
stc
xor
mov
inc
push
daa
dec
inc
sub
setle
mov
mov
daa
dec
xor
cld
push
sbb
fnstcw
adc
inc
pop
mov
lock
and
pop
cli
pop
ret
pop
mov
ins
jecxz
ins
mov
inc
shl
mov
aas
outs
jp
push
leave
stc
je
shl
jns
ss
cmc
inc
pop
pusha
inc
lods
cmp
pop
imul
(bad)
(bad)
mov
jp
lock
dec
mov
cmps
bound
shl
into
fiadd
inc
or
sar
and
jmp
movaps
shr
jl
mov
retf
popa
xchg
js
jmp
mov
xor
sbb
add
push
push
xor
mov
sbb
pop
ror
(bad)
xor
cdq
sbb
mov
mov
inc
(bad)
repnz
es
mov
fidivr
gs
dec
in
lea
pop
out
add
ja
(bad)
out
and
jle
mov
xchg
add
mov
movs
out
daa
inc
xor
jne
jne
idiv
ds
add
in
mov
lea
ins
aad
xchg
sbb
into
cmp
aas
or
ss
aad
cmp
stos
inc
shl
cwde
ror
fs
push
lock
push
push
lock
retf
imul
scas
ret
fldl2e
shr
sub
in
fsubp
jnp
mov
fnstsw
ret
mov
or
jno
push
in
add
cmp
sub
adc
mov
cdq
adc
jmp
neg
fcomp
add
xor
mul
shl
jecxz
pop
in
inc
daa
xchg
cmps
stos
cmps
xor
jecxz
das
dec
push
(bad)
lods
lahf
push
and
or
push
neg
scas
mov
xchg
imul
retf
jno
mov
(bad)
cmp
or
stos
out
jle
lea
pop
(bad)
or
mov
mov
mov
mov
inc
and
fstp
out
test
scas
jno
movs
shr
dec
inc
mov
mov
xor
xchg
out
jp
cmc
cmp
push
push
inc
cmc
ins
cmps
jno
popa
and
xchg
mov
cli
loop
repnz
dec
outs
push
movs
cwde
das
iret
mov
or
inc
push
adc
jno
dec
movs
ret
cdq
imul
addr16
mov
cmp
sbb
mov
add
inc
(bad)
xchg
xchg
sar
cmp
add
movs
jae
xchg
cmp
sar
sub
inc
mov
mov
push
aam
inc
sub
mov
lock
inc
dec
cwde
xor
(bad)
cli
mov
les
outs
out
bound
jp
dec
in
sub
sbb
inc
iret
(bad)
loopne
sub
sbb
jl
mov
jmp
ds
std
mov
mov
and
stos
cmc
cmp
mov
(bad)
iret
scas
pop
mov
add
cld
mov
pop
mov
pusha
sbb
push
hlt
mov
test
mov
fadd
mov
mov
mov
(bad)
add
lods
adc
jle
add
mov
xor
or
xor
cmp
cmp
in
ret
icebp
inc
outs
mov
mov
test
out
(bad)
cmp
mov
jo
lods
mov
pop
movs
xor
not
lahf
push
fs
push
call
cmp
mov
mov
adc
push
das
pop
cld
jno
jmp
mov
aaa
ins
sbb
jecxz
jbe
mov
xor
jp
jmp
mov
(bad)
sti
cmp
and
mov
cdq
xchg
mov
sahf
xchg
or
lahf
jnp
mov
out
repnz
pop
cmp
push
jns
fcomp
adc
aam
stos
clc
stc
ret
inc
pop
fsubr
add
push
dec
out
jb
fnop
push
xor
popa
dec
stos
in
mov
inc
dec
js
push
icebp
xor
les
pop
aaa
or
add
jbe
xchg
sub
jae
pop
adc
inc
loope
data16
mov
sbb
div
inc
popa
pop
mov
test
add
push
loopne
fimul
sbb
xlat
lods
jge
sbb
aas
mov
inc
jmp
push
mov
pop
jge
enter
dec
xchg
fs
jl
mov
mov
push
xor
std
mov
push
js
adc
mov
mov
jecxz
pop
aaa
icebp
mov
jecxz
add
outs
retf
pop
inc
dec
adc
mov
mov
push
pusha
inc
nop
inc
and
fcmovb
cwde
dec
pop
imul
scas
fidivr
push
test
bound
hlt
retf
or
mov
das
clc
arpl
inc
(bad)
cmp
loope
rcr
cvtps2pd
retf
cmc
out
repnz
ja
add
jns
sub
(bad)
add
or
push
dec
or
lahf
shl
mov
jne
(bad)
sub
jmp
into
mov
fadd
jle
push
ja
sub
push
jg
jg
and
loop
dec
movs
scas
sub
xchg
scas
cmp
mov
(bad)
jmp
cmp
dec
sbb
xchg
fimul
inc
xor
jno
or
sub
push
or
mov
lahf
and
ins
mov
je
dec
mov
pop
adc
repnz
fsubr
(bad)
fldcw
inc
sar
test
pop
fs
xor
pop
pop
mov
loop
mov
mov
movs
mov
dec
mov
pop
imul
and
ja
pusha
pusha
cmps
(bad)
push
and
xchg
lock
div
nop
into
cmc
call
rcr
jge
pop
sbb
ins
jmp
ror
cwde
dec
mov
jno
adc
sub
push
dec
cmps
lahf
lods
sti
push
jae
mov
retf
lods
nop
xor
mov
dec
clc
pop
cmc
mov
and
lock
xchg
inc
push
and
inc
lods
xchg
outs
jbe
(bad)
sub
test
(bad)
pop
add
data16
addr16
ret
test
loope
inc
jmp
pop
jns
ret
icebp
adc
fdivr
mov
test
vmovshdup
in
dec
sbb
jae
mov
imul
leave
mov
ins
xchg
mov
jbe
adc
inc
push
cdq
outs
cmps
(bad)
call
jl
loop
fadd
lods
sub
fwait
mov
pusha
cwde
sub
(bad)
repz
and
cmp
stos
or
in
sbb
pop
xchg
pop
xchg
xchg
xchg
dec
cli
add
scas
call
jbe
pusha
adc
gs
mov
outs
fnstenv
lods
push
inc
stc
(bad)
test
and
(bad)
mov
sub
or
popf
je
aaa
and
int
push
add
gs
sbb
dec
jp
add
pop
cmps
out
mov
xor
push
scas
(bad)
fnsave
sub
and
cmp
pop
pop
in
pop
iret
push
dec
push
inc
scas
lds
idiv
mov
cmps
push
sbb
xor
mov
or
sub
cs
out
pop
(bad)
xchg
rcr
jno
cs
cmp
pop
repnz
leave
mov
bound
clc
fs
mov
ds
lods
lahf
scas
mov
sub
popf
push
sahf
psllq
repz
bound
and
sahf
sub
xchg
sbb
(bad)
in
bsf
call
ins
mov
add
mov
xor
movs
cmp
mov
iret
or
in
mov
imul
pop
mov
push
inc
inc
popf
inc
das
loope
inc
aas
mov
jae
xor
ret
fwait
loopne
sub
sub
jne
dec
out
jae
out
adc
and
fs
inc
jp
xor
push
push
pop
sub
mov
pop
fucomp
hlt
push
mov
mov
push
jmp
repnz
jmp
(bad)
lds
jno
ins
mov
or
push
pop
lock
pop
adc
arpl
xchg
xor
daa
adc
fs
sub
enter
dec
sub
outs
popa
iret
mov
mov
pop
js
jne
mov
stos
lds
xor
cmps
pop
test
cli
sbb
add
sbb
adc
cmc
and
in
imul
inc
adc
je
and
sub
add
cld
inc
test
jmp
daa
shl
add
outs
jecxz
or
jbe
push
cmps
enter
lea
sub
cmc
ret
adc
dec
sti
inc
inc
aad
xchg
(bad)
je
sub
stos
in
xor
inc
ins
int3
cmp
or
call
das
add
pop
outs
pop
inc
pop
(bad)
push
sbb
xor
clc
mov
lods
jae
retf
adc
ror
xchg
(bad)
not
les
ds
rcr
xchg
mov
dec
and
inc
and
nop
mov
push
mov
push
movs
xchg
repz
movs
test
xchg
pusha
add
retf
ds
popa
rcl
aas
and
push
push
push
test
lea
sub
jmp
inc
fadd
lahf
and
cmp
stos
lods
out
xchg
ss
push
ja
test
shl
scas
stos
dec
dec
and
aad
call
call
aam
call
pop
rcr
(bad)
aam
jo
aas
sti
mov
push
xchg
pop
xchg
add
xor
cmp
in
ins
dec
jne
dec
out
or
arpl
repnz
enter
dec
lock
push
imul
mov
xchg
mov
sub
dec
out
pop
xor
jae
in
cmp
movs
sahf
int3
cmps
adc
mov
rcl
test
lds
adc
sar
(bad)
or
ror
ret
or
adc
xor
inc
mov
addr16
or
(bad)
mov
sub
ret
or
dec
std
neg
movs
xor
imul
lock
cs
mov
jp
mov
je
xchg
cmp
icebp
push
sub
shr
ins
ds
xchg
xchg
jp
cli
sar
ins
mov
or
pop
push
sub
std
cmps
or
mov
sub
es
push
mov
cmp
aam
int
mov
jmp
add
int
arpl
sbb
cmp
xor
adc
js
cmps
pop
inc
mov
movs
fidiv
mov
nop
fimul
push
sti
mov
enter
xor
xchg
test
or
sbb
clc
and
loope
adc
xchg
ret
(bad)
pop
push
xlat
pop
test
push
xor
ret
dec
or
out
fsubp
je
jo
std
ja
rcl
jge
in
ins
xchg
xor
out
mov
sahf
push
inc
aaa
loope
sbb
xchg
lea
stos
arpl
repnz
test
xchg
jb
and
cdq
and
jmp
inc
stos
(bad)
adc
push
xchg
repz
pop
jno
xchg
aam
mov
push
cmp
dec
inc
cmps
dec
(bad)
shl
cld
mov
or
fsubr
adc
xor
jmp
sbb
jne
sbb
das
xor
add
inc
lea
inc
dec
inc
xor
(bad)
out
cmp
mov
test
or
dec
push
or
pop
push
jne
fstp
fs
mov
lods
jle
mov
mov
mov
and
xor
xor
jmp
inc
imul
rcl
mov
mov
add
xchg
pop
sbb
xchg
or
xchg
sbb
mov
mov
push
movs
mov
jbe
sahf
sub
push
pop
mov
dec
stos
bound
call
enter
adc
or
push
pushf
stc
xchg
out
sahf
ins
mov
jge
xchg
and
cdq
sub
sub
fcomp
inc
push
or
lods
cmps
dec
idiv
push
or
in
adc
pop
push
add
lods
or
push
test
sahf
in
(bad)
mov
add
bound
mov
xlat
xchg
ret
sub
or
push
cli
push
icebp
inc
or
icebp
xor
push
jo
jecxz
fldenv
mov
loopne
std
push
lods
push
mov
arpl
std
loopne
nop
fwait
push
xor
jp
mov
ror
cmp
fst
arpl
mov
ds
call
inc
scas
leave
push
ds
jmp
sub
es
push
jne
loopne
sub
pushf
pop
mov
and
aas
dec
xor
arpl
mov
fldenv
enter
in
or
mov
push
sub
lods
xchg
repnz
rcl
inc
mov
jae
push
ds
and
sbb
mov
sti
dec
mov
or
cmp
ret
or
mov
xor
xchg
stos
push
retf
push
or
lock
sbb
xlat
test
cmp
fbstp
jne
adc
add
cli
sbb
stc
stos
push
mov
fnstenv
xchg
mov
pop
or
(bad)
fsubr
aas
cmps
push
fwait
jg
shl
in
and
mov
mov
int
es
jge
add
retf
xor
push
add
cld
fldcw
(bad)
cmp
mov
xor
leave
out
(bad)
mov
loopne
lods
out
pop
pop
iret
les
(bad)
retf
add
dec
xor
push
fcomp
or
inc
int
jg
test
clc
jae
adc
lahf
jnp
into
push
enter
in
das
push
test
jecxz
mov
int3
and
bound
dec
jnp
dec
outs
outs
js
js
popa
sbb
int3
pop
push
mov
ins
test
gs
imul
inc
and
add
and
mov
dec
pop
lock
clc
loop
hlt
fnstcw
arpl
ret
movs
gs
inc
jecxz
(bad)
adc
or
lods
cmp
repnz
sbb
jbe
mov
in
or
xchg
pop
mov
xor
in
es
adc
inc
ds
pushf
jne
cli
jo
cmp
cmp
adc
mov
out
cmp
or
cmp
and
inc
xchg
jne
fcomp
mov
adc
fcomp
push
cmps
sub
movs
(bad)
js
sub
rcl
mov
int
retf
aaa
sbb
repz
scas
xchg
sti
xor
addr16
mov
pop
mov
sti
scas
jp
jnp
jg
xchg
jbe
imul
pop
enter
(bad)
cs
cmps
push
push
xchg
push
ds
xchg
nop
imul
cmps
xchg
lock
sub
aad
sbb
stos
sbb
mov
push
dec
arpl
and
aam
and
in
sub
jl
or
fptan
mov
out
inc
popa
(bad)
sub
scas
aaa
icebp
iret
xchg
mov
into
add
inc
out
xchg
and
sar
ins
(bad)
or
xor
in
stc
(bad)
xchg
dec
(bad)
cmps
movs
aaa
in
cmp
mov
out
pop
movs
inc
sbb
retf
pop
lods
mov
add
mov
fisttp
inc
xor
and
dec
ret
jge
leave
sti
scas
mov
loope
rcr
pop
inc
cs
je
cmps
mov
jp
push
stc
mov
fcom
lds
test
ds
ss
jmp
push
adc
push
mov
cmps
cmp
cli
fnsave
push
(bad)
mov
lahf
ficom
push
or
cmps
or
in
inc
mov
fcmove
add
cmp
add
test
jge
mov
sahf
pop
test
jle
pop
and
in
cmps
pop
fdivr
dec
(bad)
add
xor
aam
mov
mov
rol
pop
ins
sbb
data16
dec
mov
mov
stos
cs
cmp
dec
cmc
jmp
and
test
pop
xchg
mov
push
inc
call
mov
gs
dec
ror
adc
add
je
mov
test
aas
jp
stos
and
stc
and
fwait
retf
mov
jmp
mov
lods
push
sub
outs
cmp
jae
ds
cmc
jle
rcl
mov
and
xor
mov
jmp
mov
data16
or
mov
push
fsub
cs
inc
push
aas
mov
je
out
inc
mov
adc
mov
movs
inc
sbb
movs
or
mov
lahf
sbb
mov
into
mov
or
add
push
push
xchg
popa
retf
cmc
add
test
inc
cmp
imul
mov
inc
mov
ds
pop
dec
pop
dec
shl
ins
push
inc
icebp
mov
xchg
sbb
jmp
les
xchg
xor
iret
not
lods
les
fadd
es
int
fs
call
rol
fst
int3
jge
stos
dec
stc
xor
add
enter
inc
jo
js
call
loop
paddusb
pop
loope
hlt
dec
retf
scas
sub
nop
je
cmps
mov
mov
and
ins
sbb
sar
lahf
push
shl
in
dec
pop
mov
sbb
or
xor
pop
iret
call
out
sub
(bad)
sub
or
add
cmp
lea
mov
pushf
cld
leave
sbb
jnp
hlt
(bad)
fsub
pop
hlt
inc
sbb
sbb
pop
push
enter
push
pop
jae
push
jp
ins
add
cwde
push
sbb
xor
jns
outs
dec
outs
ins
sbb
xchg
call
in
add
lahf
pop
and
je
mov
cmp
sub
or
fild
cmp
ins
fwait
dec
jae
lds
movs
jmp
stos
movhps
adc
xlat
std
in
mov
sub
fs
adc
test
or
add
mov
stos
(bad)
jge
pop
sti
out
(bad)
mov
imul
into
xchg
fbstp
mov
and
xchg
rcl
bound
sbb
pop
jne
add
add
mov
ror
jbe
mov
(bad)
add
pop
sub
jno
popa
adc
(bad)
or
out
push
push
mov
inc
stc
xor
or
shl
jge
cmp
inc
outs
test
aad
into
or
pusha
ret
add
and
sbb
pop
hlt
jmp
push
fist
mov
inc
push
push
loope
adc
imul
in
xchg
stos
pop
ins
pop
cmp
arpl
push
sbb
pop
jge
cmp
aaa
scas
sub
mov
mov
ffreep
jnp
cs
add
sbb
jge
in
rcr
jb
leave
repnz
mov
adc
inc
cmp
imul
or
in
call
add
push
pop
or
test
cmp
(bad)
loop
stos
cmp
push
mov
push
mov
ret
add
push
leave
call
mov
mov
mov
(bad)
pop
jnp
inc
scas
add
inc
fisubr
adc
out
mov
daa
mov
enter
ret
lahf
dec
sbb
daa
xchg
addr16
mov
inc
adc
sbb
pop
push
add
repnz
xchg
and
dec
adc
mov
or
mov
mov
dec
loop
(bad)
jae
fs
test
shl
sbb
lods
cmc
enter
retf
bt
mov
rol
dec
sub
scas
adc
mov
xchg
stos
aaa
dec
dec
loop
mov
mov
jg
js
sub
ja
test
xor
fsubrp
jp
fucomi
sub
sbb
je
lods
adc
mov
shr
sub
ja
sub
imul
or
outs
daa
(bad)
pusha
mov
scas
je
pop
or
stc
dec
scas
fdivr
ret
(bad)
push
inc
lock
stos
(bad)
xor
stos
(bad)
out
mov
push
push
xor
pop
stos
xor
dec
nop
pop
sub
or
leave
int3
dec
cli
mov
pop
and
xor
(bad)
and
push
add
mov
xor
xchg
cmp
or
popa
std
ds
xlat
aam
leave
mov
fwait
jbe
pop
and
sub
in
mov
jl
add
push
(bad)
xchg
dec
xchg
(bad)
retf
and
jl
stc
jnp
pop
xor
mov
ja
fisub
icebp
nop
cmp
jl
ins
xchg
inc
and
rcr
mov
xor
mov
ficom
jmp
or
ret
call
xor
adc
mov
cmp
adc
aad
mov
xchg
cmp
jns
addr16
mov
jne
or
jle
lds
jno
popf
or
arpl
cmp
cli
adc
ror
and
mov
(bad)
cld
jne
inc
push
push
adc
loope
or
add
js
cwde
sub
add
cmp
test
sub
sbb
iret
dec
or
xchg
xchg
push
and
fwait
aam
ret
xor
dec
mov
dec
scas
imul
push
jg
es
adc
in
inc
data16
aad
shl
adc
cld
jg
mov
imul
pop
cmps
stos
(bad)
fdivr
adc
xor
and
fs
or
pop
call
mov
mov
nop
fldcw
pop
inc
xor
pusha
xor
sub
rol
lock
push
xchg
stos
adc
(bad)
or
addr16
neg
push
jmp
fwait
adc
(bad)
jecxz
jmp
retf
or
and
xor
mov
inc
pop
or
int3
jo
xor
mov
fdivr
cmps
adc
and
enter
les
inc
test
inc
push
mov
cmp
pusha
data16
sbb
imul
pop
std
push
add
sub
addr16
push
test
jns
mov
push
aaa
cmp
add
repz
mov
loopne
lods
pop
dec
jg
pop
push
xchg
fstp
vzeroall
retf
pop
sub
xlat
loope
ins
sub
xchg
inc
in
out
sbb
inc
mov
out
dec
cmp
hlt
ror
enter
cmp
mov
mov
mov
dec
pop
ficomp
sahf
icebp
mov
mov
bndstx
sbb
inc
inc
fxch
dec
jo
aas
aaa
pop
push
mov
mov
xchg
movs
cli
fisubr
jbe
or
repnz
pop
push
dec
loop
out
idiv
add
jae
mov
scas
hlt
adc
dec
cmp
mov
loope
mov
mov
test
jb
dec
leave
jg
sub
add
dec
inc
lock
icebp
mov
xlat
inc
gs
in
mov
(bad)
test
mov
mov
(bad)
aas
loopne
cld
adc
and
in
(bad)
jp
jnp
mov
int3
adc
sub
movs
cmp
in
and
(bad)
pop
xor
push
call
push
fdivr
loopne
jp
dec
imul
mov
jp
xor
sub
out
xor
push
nop
push
out
in
add
inc
ins
pop
adc
call
jmp
dec
mov
in
aas
nop
inc
out
jmp
lea
push
mov
rcr
neg
push
in
arpl
ja
(bad)
xlat
cmps
out
jl
jnp
xchg
adc
cmp
push
hlt
push
cmc
test
inc
xchg
test
xchg
pop
loope
mul
ins
in
loop
add
add
jb
dec
arpl
mov
shr
pop
push
lahf
stos
cli
or
nop
jp
enter
fisttp
dec
fs
mov
mov
mov
mov
leave
bound
pushf
test
xor
stc
in
cmps
fwait
push
ds
dec
jl
cs
xor
jg
cmc
test
inc
loope
popf
xlat
pop
stos
mov
push
xchg
pusha
cmps
cmp
sub
je
cmp
xor
mov
xchg
xor
mov
mov
pop
jbe
std
stos
neg
jmp
movs
adc
mov
push
xchg
fidiv
xchg
scas
mov
rol
pop
or
push
in
mov
inc
test
mov
cmp
aaa
imul
cmp
jge
pop
aad
inc
xchg
mov
mov
xchg
mov
mov
or
in
mov
cmp
push
cld
iret
and
test
data16
push
sbb
imul
lahf
jbe
sub
xchg
mov
and
adc
sbb
neg
stos
not
add
mov
fsubr
std
es
test
inc
xlat
test
pop
or
in
loop
xor
adc
out
pusha
xlat
adc
pushf
mov
jae
popa
addr16
pop
mov
cmp
imul
rcr
cmp
test
mov
clc
xchg
call
jbe
test
test
bound
or
sahf
dec
out
jno
xlat
cmp
(bad)
cwde
jle
loop
mov
sub
adc
sar
idiv
cmp
call
ffreep
adc
mov
add
je
xchg
lock
fcomi
aad
push
sub
ror
xor
loopne
(bad)
faddp
cmp
push
mov
mov
mov
cdq
sbb
sub
repnz
add
add
ret
sub
inc
lods
iret
pop
pop
hlt
push
jmp
out
clc
inc
push
jecxz
mov
pop
fptan
lods
add
stos
gs
lahf
int
popf
xor
sub
jecxz
(bad)
out
mov
int
arpl
mov
or
(bad)
lss
sub
stos
test
movs
icebp
mov
adc
xor
enter
sbb
push
pop
mov
push
pop
add
nop
test
or
sti
out
add
stc
add
int
cs
xchg
and
sub
xor
cmps
mov
dec
adc
sbb
arpl
retf
sbb
sub
jno
ret
imul
imul
jbe
enter
and
lds
fs
mov
nop
mov
movs
pop
push
mov
lock
xor
ret
in
data16
leave
lods
inc
mov
(bad)
cmps
or
data16
mov
mov
mov
cmps
xor
addr16
jb
sbb
bswap
stos
and
and
mov
inc
jge
xchg
jmp
xor
add
cmps
je
rcr
sbb
shr
sbb
outs
or
inc
sub
retf
sub
adc
or
mov
mov
and
inc
sbb
mov
leave
jo
fmulp
sub
mov
mov
leave
ss
or
cmp
pop
cmp
test
mov
out
push
jo
add
ins
add
push
mov
loopne
mov
loopne
mov
inc
(bad)
add
js
jmp
sbb
das
adc
bound
in
mov
sbb
int3
sbb
push
sub
movs
jb
xchg
scas
inc
imul
cmp
adc
and
fst
bound
add
mov
popa
pop
push
mov
scas
cs
fadd
ja
add
dec
mov
cmp
jmp
fdivr
cmp
xchg
fcmovb
mov
and
and
leave
fbld
repnz
hlt
call
jae
push
int3
push
adc
inc
jmp
xchg
in
rol
pop
add
jl
pop
mov
mov
setp
inc
xor
sbb
call
sti
and
mov
add
cwde
cmp
jg
fstp
scas
pop
leave
push
dec
push
xchg
jae
cld
inc
mov
les
mov
in
or
pop
aaa
adc
push
mov
and
bound
cld
push
out
jp
pushf
movs
addr16
jb
dec
inc
mov
das
pop
adc
js
(bad)
stos
lods
push
pop
cmp
int3
dec
sar
adc
out
and
cli
jnp
jo
push
sbb
lea
push
mov
popf
jb
into
jne
sbb
pop
inc
dec
dec
sbb
xchg
xor
xchg
mov
push
adc
out
cdq
cmovne
or
ficomp
mov
das
jbe
js
or
xor
(bad)
test
cmps
cmp
jo
jno
sub
or
hlt
ds
dec
(bad)
cs
out
sub
add
jl
ss
sbb
repz
jmp
cwde
xchg
add
aad
call
outs
jae
mov
fstp
xchg
xchg
xor
pop
xchg
ins
push
(bad)
cmp
push
or
mov
sbb
pop
outs
popa
jge
and
dec
shr
mov
div
adc
dec
push
adc
pop
test
pusha
mov
int
sbb
cmp
dec
cmp
dec
mov
or
mov
or
jg
sar
add
sbb
pop
dec
fist
mov
popa
pop
jbe
imul
cld
push
mov
sbb
ds
pop
cmp
call
cmp
and
out
mov
lock
scas
(bad)
cld
sar
push
jo
jne
ss
jnp
rcr
rol
or
retf
adc
iret
sahf
repnz
push
lods
mov
scas
mov
out
mov
lods
in
dec
in
ret
dec
xor
and
(bad)
(bad)
push
and
arpl
stos
sub
add
pop
mov
das
sub
lods
pusha
adc
hlt
mov
nop
repz
or
xor
(bad)
and
adc
mov
cmps
adc
adc
dec
xchg
mov
and
fidiv
jmp
test
push
or
ja
xor
xchg
mov
fisttp
(bad)
jl
add
in
outs
xchg
ins
mov
or
push
fwait
xchg
imul
pop
aas
jge
ins
mov
scas
addr16
mov
pushf
int
dec
dec
ins
hlt
inc
dec
add
xor
fwait
inc
leave
(bad)
fadd
leave
in
ja
imul
mov
inc
sbb
or
or
xor
lahf
xor
sub
in
push
sbb
imul
retf
mov
cmps
sub
adc
outs
jge
xchg
sbb
adc
data16
lea
lds
push
pop
and
adc
and
hlt
or
aaa
cmp
inc
int
mov
movs
std
add
and
mov
xchg
dec
xchg
xchg
jecxz
jmp
icebp
adc
mov
stc
jb
and
rcr
arpl
lds
mov
test
(bad)
mov
adc
scas
mov
ret
out
pop
push
pop
pop
daa
idiv
outs
(bad)
mov
pop
sahf
mov
sub
cmc
imul
jg
cs
add
dec
sti
push
imul
lods
mov
retf
push
pop
pusha
push
push
fprem1
add
in
loop
jg
jb
and
push
ins
pop
xor
or
mov
sbb
je
scas
clc
mov
mov
movs
adc
or
and
add
jns
cmps
dec
movs
push
push
jnp
shr
ret
jmp
adc
mov
or
push
aad
add
adc
fldenv
fwait
jb
mov
stos
pop
ds
sti
push
sub
mov
loope
xor
push
push
bound
mov
movs
into
xor
pop
dec
jl
pushf
fwait
icebp
scas
fs
push
enter
jnp
xor
sbb
out
jnp
mov
xlat
sbb
adc
scas
push
mov
push
(bad)
lea
push
push
out
pop
idiv
inc
sahf
clc
iret
jp
out
mov
dec
jmp
xchg
jmp
hlt
es
pop
sbb
inc
hlt
push
xchg
or
jno
cli
ins
push
movs
xchg
xor
call
push
in
ins
cmp
push
jo
in
pop
pop
lock
nop
les
mov
int3
mov
xchg
mov
dec
inc
pop
int3
push
js
jle
sti
pusha
pop
popa
mov
jge
mov
dec
mov
mov
pop
nop
loopne
or
(bad)
fwait
push
dec
xor
push
in
aas
(bad)
mul
fisub
ficom
jl
lods
pop
stc
aaa
adc
std
jl
je
fcom
shl
add
test
ret
lods
inc
into
and
fidivr
loopne
or
cli
jg
xchg
pop
mov
and
push
mov
cs
fwait
outs
out
into
cli
rcl
mov
out
jmp
rcr
std
inc
jmp
mov
sub
daa
(bad)
jmp
sbb
adc
rcr
cmps
(bad)
or
push
or
test
mov
es
test
jns
cmp
xor
pop
mov
or
xchg
fnstcw
xchg
dec
jge
arpl
pop
test
pop
test
mov
out
in
out
sub
adc
imul
fs
fcomp
inc
sub
scas
mov
mov
push
movs
icebp
xor
inc
js
(bad)
sti
aas
ret
aad
xchg
jp
mov
jns
add
jg
or
sub
add
xchg
mov
xor
xchg
mov
jns
es
cmps
shl
mov
arpl
xchg
mov
dec
(bad)
fnsave
repz
mov
mov
pushf
add
inc
addr16
das
mov
mov
cmp
in
in
pextrw
inc
mov
cmp
push
stos
scas
adc
pmulhw
sub
aaa
mov
jnp
(bad)
push
jnp
push
pop
and
out
lock
xor
push
cmp
push
xchg
sub
(bad)
push
dec
pop
cld
mov
mov
es
int
shr
sbb
sbb
shl
out
add
mov
hlt
and
(bad)
xor
jne
jno
xchg
mov
loope
mov
add
or
cdq
xchg
xor
mov
repz
mov
mov
dec
mov
dec
inc
out
retf
sti
mov
jp
sub
adc
mov
lahf
fist
retf
jno
(bad)
ret
and
jl
push
pop
idiv
fild
sub
sar
sub
retf
in
fldcw
dec
mov
mov
pop
sbb
mov
mov
sti
push
loop
pop
adc
lahf
cwde
fcom
and
mov
ret
loopne
push
cmp
add
cdq
shl
sahf
mov
sub
call
add
xor
inc
mov
lods
pop
ret
push
adc
ud1
xchg
lods
dec
pop
iret
adc
dec
push
jmp
dec
out
dec
mov
nop
jnp
repnz
add
push
inc
push
ror
leave
mov
mov
jle
ret
and
loop
cli
ror
lods
lods
lods
out
ret
push
mov
push
push
xor
lods
js
outs
lea
arpl
jecxz
outs
push
jo
ins
push
iret
psraw
repz
shl
fs
mov
mov
sbb
cld
mov
rol
jae
sub
loopne
mov
mov
jmp
call
push
les
mov
push
ret
out
dec
or
mov
ret
pop
outs
pop
fwait
ins
dec
add
xchg
lds
add
arpl
popf
bound
add
jae
jp
push
out
loope
dec
xchg
test
jmp
sahf
jmp
idiv
gs
jmp
and
leave
pusha
cs
retf
add
mov
add
mov
pop
clc
imul
pop
test
sahf
xor
adc
repnz
rol
mov
push
lods
jbe
dec
retf
mov
icebp
pop
inc
xchg
adc
popa
inc
fcom
xor
mov
ret
mul
icebp
inc
fsub
mov
mov
cmp
jmp
add
adc
push
movs
fwait
xor
inc
lods
ror
mov
fmul
push
add
jge
mul
cs
jmp
xchg
dec
pusha
sbb
cmp
mov
adc
rol
jg
push
sbb
lock
mov
in
push
es
cmps
call
and
cmp
adc
push
pusha
sbb
jnp
dec
je
sub
pop
lods
mov
int3
ret
xchg
cdq
and
clc
fistp
je
xor
nop
cmc
mov
cmps
bound
jnp
ret
shl
mov
clc
out
cmp
enter
mov
dec
add
adc
mov
shl
fimul
fwait
or
sahf
lods
mov
or
pusha
mov
xchg
mov
push
mov
sahf
push
popa
mov
sub
fcom
out
in
cmp
mov
dec
or
cwde
lods
pop
adc
addr16
mov
sar
daa
mov
sbb
or
ins
inc
cmp
sbb
in
pop
mov
sbb
(bad)
mov
jno
inc
and
xchg
call
cmp
or
jae
jmp
stc
dec
pop
or
sbb
int
les
in
enter
dec
retf
pop
movs
icebp
rcr
push
scas
or
sbb
ja
adc
lds
dec
mov
xor
jge
and
int
fs
pop
mov
adc
pop
out
icebp
adc
cmp
sti
(bad)
stos
(bad)
jecxz
in
add
push
js
jge
(bad)
push
loop
jl
push
mov
and
xchg
xchg
dec
dec
xchg
sub
sub
xchg
stos
and
(bad)
cmps
arpl
test
inc
push
cmp
bnd
sbb
mov
dec
push
mov
fmul
pop
sub
xchg
ds
lods
or
mov
fcomp
fcmovnb
sub
jmp
sub
inc
cmp
mov
xor
hlt
mul
lea
(bad)
pop
mov
jns
fadd
out
cmp
mov
mov
je
repz
fs
cmps
xor
call
data16
add
cmps
in
mov
ds
sbb
fisubr
cld
xor
cwde
dec
std
xchg
push
leave
pop
vmovddup
xlat
xlat
daa
in
jmp
xchg
lds
mov
rcr
mov
and
out
test
mov
mov
xchg
adc
jle
jno
push
sub
jmp
sahf
push
cmp
pop
push
aam
into
retf
jg
sbb
jmp
inc
aas
in
enter
mov
fwait
imul
rcl
enter
dec
in
rcl
and
inc
jle
dec
stos
fst
shl
xchg
out
in
mov
or
xchg
and
outs
push
test
sub
popf
mov
into
repnz
xchg
push
ja
popa
or
lahf
(bad)
mov
shl
jne
and
rol
mov
cmp
loope
add
pop
xor
xor
ror
sbb
adc
pop
or
mov
dec
mov
aas
int3
adc
cwde
mov
test
jae
pusha
lock
mov
mov
jecxz
ffreep
shl
loop
jbe
xchg
mov
sti
push
and
loope
loope
jge
lahf
movs
pop
mov
fwait
pop
pop
adc
jmp
pop
jno
mov
pop
mov
push
cwde
out
push
sub
sub
xchg
pushf
daa
sahf
pop
js
cwde
ret
push
bound
aam
jae
dec
cld
stc
and
mov
lods
sub
jle
cld
ror
sbb
hlt
(bad)
(bad)
xor
ret
es
xchg
(bad)
pop
add
inc
pushf
mov
jo
pop
stos
jo
(bad)
push
cli
xchg
or
jns
loop
cmp
retf
jmp
mov
jecxz
ins
lds
aas
(bad)
mov
in
xor
bound
jne
int3
scas
pop
rcl
inc
inc
fnstcw
and
ja
aad
sbb
cld
cs
fidiv
dec
push
lods
out
sbb
and
mov
(bad)
sbb
mov
out
xlat
leave
pop
inc
int3
pop
aaa
add
gs
mov
push
push
imul
cli
out
xchg
ss
mov
cmps
in
mov
pop
rcr
sahf
(bad)
sub
mov
popf
das
pop
ret
movs
mov
cdq
(bad)
mov
or
out
inc
inc
jmp
in
mov
sub
js
cld
pop
out
xlat
cmc
cdq
loopne
fbld
je
inc
cmp
std
inc
pop
(bad)
sub
out
and
cli
out
pop
push
xor
jbe
into
out
or
adc
xor
jnp
add
arpl
mov
mov
popa
mov
lds
xor
xor
in
dec
pop
cld
cli
dec
lock
xchg
push
mov
stos
rcr
inc
cmp
iret
sub
div
daa
xor
fisubr
stos
push
cmp
sub
push
das
mov
aad
inc
push
enter
dec
jl
movs
adc
in
dec
xor
push
or
mov
or
dec
fmul
push
push
push
push
mov
bound
test
jp
shl
sbb
(bad)
in
and
push
cmp
adc
out
mov
pop
mov
mov
test
fs
nop
cmps
das
lods
pusha
jl
movs
sub
push
add
mov
add
add
inc
push
bound
jl
mov
xchg
ja
push
mov
jmp
and
push
dec
cdq
inc
mov
iret
retf
add
fwait
mul
shl
rol
jne
add
inc
or
sub
div
fnstenv
add
or
in
das
mov
test
mov
xchg
and
xor
ret
aas
loopne
retf
repz
test
test
repz
dec
inc
sbb
inc
in
stos
or
xor
jg
mov
in
ret
cmp
sbb
inc
std
scas
or
rcl
mov
mov
xor
jns
call
xchg
xor
mov
cs
lods
sbb
mov
jo
xchg
push
hlt
add
mov
les
jae
and
loope
mov
(bad)
cwde
xchg
lock
xor
lods
jg
ds
in
mov
arpl
mov
mov
xor
xchg
jle
jmp
push
jno
cmp
or
mov
cs
retf
jnp
pop
and
jge
adc
pusha
pop
pushf
vpavgw
pusha
pop
and
jb
test
xchg
int
sub
inc
mov
enter
adc
mov
pop
mov
mul
pop
sbb
les
mov
arpl
mov
nop
clc
addr16
retf
movs
dec
xor
mov
xor
mov
test
sbb
(bad)
fnstenvw
mov
call
(bad)
mov
daa
leave
fwait
movs
fs
mov
and
mov
sub
retf
sti
fwait
push
inc
leave
xor
xor
shl
add
push
jmp
ficom
or
dec
les
outs
inc
push
inc
mov
jns
fcmovne
push
ficomp
mov
sub
sbb
sbb
jmp
xor
sbb
jl
pop
data16
dec
es
xchg
or
arpl
jns
ins
and
dec
dec
mul
inc
add
adc
pushf
lahf
loop
cmc
pop
leave
lea
js
push
xchg
retf
adc
jge
daa
adc
shl
add
fs
dec
out
mov
xor
pusha
sahf
fcom
push
lods
popa
push
push
hlt
sbb
hlt
push
mov
stos
dec
push
popf
sub
sub
add
xlat
push
movs
push
ret
fcom
data16
and
icebp
lds
mov
or
aas
mov
add
icebp
dec
aam
call
pop
xchg
retf
xor
addr16
xor
add
fwait
pop
pusha
sub
pop
retf
loop
cmp
xchg
jnp
bound
fsub
fst
aas
and
leave
inc
push
xchg
leave
dec
scas
lahf
and
push
jo
dec
loopne
scas
call
dec
xchg
jle
push
lea
mov
(bad)
fild
fsincos
cmp
ud1
dec
inc
inc
jg
loopne
adc
mov
inc
and
and
mov
cwde
sti
popf
lea
adc
out
test
cmps
sbb
jns
repnz
adc
mov
mov
lods
pushf
add
push
cli
sub
mov
push
bound
sbb
adc
loope
in
movs
or
push
(bad)
cmps
bnd
repnz
movs
fidivr
push
loopne
repz
fist
movs
iret
(bad)
ficomp
cmp
repnz
add
(bad)
mov
imul
ins
shr
add
stos
das
adc
or
xor
cmc
(bad)
jbe
ret
xor
jmp
jle
cdq
addr16
jmp
call
jns
gs
sbb
jae
mov
pop
push
sub
mov
xchg
jg
ja
pop
xchg
ss
sbb
or
xchg
out
jae
jae
jg
fucomi
mov
adc
pop
xchg
sub
and
cmc
ins
pop
mov
xchg
ins
add
or
fstp
or
push
daa
sbb
repnz
and
ret
(bad)
xlat
adc
daa
dec
call
jns
xchg
mov
out
and
cmp
inc
mov
inc
push
sbb
xor
mov
std
jecxz
popf
mov
icebp
fwait
mov
sbb
mov
push
push
pop
xchg
into
popa
gs
mov
jmp
sbb
fistp
and
fld
in
ret
leave
push
fadd
popa
cmp
mov
xor
pop
lea
dec
and
lods
shr
mov
push
add
or
dec
add
fstp
ficom
js
adc
fst
cmp
jne
int3
mov
ins
mov
ja
call
dec
mov
shl
fcomi
add
popa
lds
cs
mov
xor
pop
gs
cmp
int
lds
mov
adc
xlat
sbb
add
ss
out
mov
aad
bnd
dec
jnp
icebp
xchg
xchg
cmp
outs
nop
stos
or
clc
dec
sbb
mov
call
ds
test
pop
cmp
shr
sbb
out
pop
jmp
outs
push
adc
cmp
inc
movs
aaa
xor
repnz
out
pop
push
push
mov
dec
push
repnz
push
icebp
repnz
rol
rcl
mov
repz
ds
aas
jmp
clc
jle
ds
call
hlt
(bad)
movs
shr
rol
(bad)
mov
int
jns
jmp
push
adc
xchg
push
lock
cwde
mov
lahf
mov
mov
lods
dec
xor
sbb
out
xchg
call
and
and
cli
or
sub
cld
shl
jne
pushw
jnp
cld
push
xchg
push
add
dec
cwde
cld
int3
dec
das
inc
fs
adc
lods
mov
retf
jno
cmp
inc
xor
sbb
mov
test
xlat
push
cmp
cmp
push
sbb
cdq
ss
mov
adc
jle
pop
jle
aas
je
mov
xchg
mov
adc
pop
sar
out
add
out
pop
out
mov
ror
loopne
add
mov
lds
retf
xor
test
pop
jmp
mul
ins
inc
xor
outs
mov
pop
xor
and
test
dec
mov
std
push
(bad)
xchg
(bad)
xor
mov
outs
test
cmc
nop
mov
aas
fdivr
fs
scas
fiadd
pop
push
cmps
pusha
std
jns
mov
push
inc
icebp
jnp
sti
popf
and
lahf
and
stos
sbb
outs
loope
cli
or
push
sbb
mov
int
cmp
pusha
cmp
je
aad
xor
(bad)
xchg
sahf
sub
out
fist
mov
je
cdq
sub
jo
dec
adc
aad
aaa
push
scas
ret
xor
sbb
push
sub
in
dec
scas
ret
std
dec
pusha
test
jae
push
out
jmp
adc
adc
retf
int3
je
push
(bad)
clc
or
xchg
imul
jge
dec
xchg
xor
imul
or
cli
gs
mov
ret
fcom
push
out
xlat
pop
cmp
aam
jne
sub
jmp
in
fnstcw
ret
and
inc
lds
div
ror
pop
jg
outs
jp
rcr
xor
or
mov
jb
out
inc
xor
and
push
bound
push
fxch
call
inc
and
nop
mov
imul
repz
jno
and
push
mov
add
dec
loope
dec
outs
cmp
mov
inc
xchg
xor
or
mov
retf
push
push
sbb
inc
mov
lock
(bad)
test
pop
push
push
retf
pop
test
jno
jmp
cmp
xor
pushf
in
xchg
mov
jns
mov
xchg
xor
call
inc
popa
pop
(bad)
ror
into
test
pop
out
ror
push
cld
push
dec
inc
jecxz
aas
adc
sti
sub
and
sbb
jecxz
mov
mov
test
lds
cli
push
rcr
or
ret
push
pop
push
lea
push
es
jo
retf
xchg
mov
or
ret
and
sar
fcomip
mov
or
push
add
jb
mov
push
sub
mov
mov
loopne
std
cdq
mov
sub
(bad)
dec
adc
aad
jmp
jae
mov
or
std
mov
scas
inc
mov
(bad)
sub
push
mov
rol
mov
ja
cmp
outs
add
loopne
pop
mov
adc
mov
dec
xor
pop
retf
dec
mov
aaa
movs
mov
rcr
pop
jle
push
mov
stc
mov
fcmovu
cli
push
pop
sub
dec
js
cmc
mov
xchg
or
push
daa
or
and
pop
fistp
pop
cmp
jmp
xchg
mov
mov
push
movs
adc
mov
fistp
fisub
stc
lods
and
jns
push
pop
shl
and
inc
add
imul
aam
jg
jae
push
dec
(bad)
retf
mov
(bad)
mov
cwde
pop
adc
sub
fisubr
lea
and
mov
inc
scas
xor
fstp
or
call
and
cdq
dec
cmc
xchg
mov
add
ficom
adc
popa
test
adc
adc
sbb
std
test
xor
int
jmp
das
jge
repnz
adc
inc
call
sbb
xchg
fwait
adc
hlt
scas
adc
loope
test
aas
sub
mov
sahf
neg
dec
sub
inc
push
out
mov
lahf
popf
inc
not
bound
xor
fnsave
fist
mov
fiadd
mov
in
ret
inc
in
add
out
adc
out
repz
out
(bad)
aas
adc
cmp
out
adc
fnstcw
pop
aas
hlt
sbb
fst
(bad)
std
test
int
push
scas
ror
cmp
or
dec
clc
push
jg
jle
adc
jmp
fcom
sbb
and
mov
push
pushf
mov
(bad)
fdivp
mov
jl
sbb
push
lock
dec
xchg
div
or
dec
cs
(bad)
cmp
ins
push
jae
jg
mov
aas
pop
(bad)
mov
ss
movs
sub
ins
outs
daa
mov
mov
sahf
mov
and
sbb
fisttp
imul
movs
aam
les
dec
or
mov
pushf
dec
mov
xchg
or
(bad)
ret
inc
mov
or
movs
or
push
leave
out
(bad)
call
js
mov
into
mov
movs
add
fldcw
or
sti
cmp
retf
push
scas
mov
(bad)
lds
mov
cmp
sub
out
ret
rol
dec
mov
push
in
push
std
or
inc
mov
je
add
shr
inc
and
or
sub
cmps
sbb
adc
scas
addr16
mov
mov
jb
fisttp
in
nop
mov
mov
pop
dec
pop
js
add
adc
pop
or
icebp
adc
add
fdiv
sbb
out
mov
js
into
outs
or
dec
fisubr
(bad)
push
mov
popf
sar
pop
int
and
push
lock
add
xor
imul
mov
pop
scas
movs
mov
lea
pop
pop
(bad)
pusha
(bad)
mov
mov
adc
mov
inc
int
xchg
cli
inc
lods
jle
mov
retf
(bad)
iret
pop
das
inc
and
sbb
(bad)
xlat
pop
pop
rcl
mov
out
sahf
mov
and
dec
cmp
fsubr
mov
test
lods
mov
inc
call
push
movs
movs
pushf
movs
xlat
jg
adc
(bad)
outs
pop
cwde
cld
jnp
mov
add
add
jge
jl
xchg
add
ins
test
sub
sar
std
jmp
mov
add
pop
fucomip
and
dec
das
movs
push
mov
mov
jle
sub
inc
mov
(bad)
and
aas
mov
mov
push
daa
xchg
push
cs
sar
mov
int3
xlat
sbb
xor
icebp
dec
mov
fiadd
iret
fsubr
jmp
jmp
or
xchg
aaa
mov
sub
(bad)
or
mov
cmp
jp
push
xlat
lock
add
xor
cmc
inc
lds
test
idiv
xor
inc
test
adc
mov
mov
xor
rol
ds
pop
push
iret
cmc
pushf
in
daa
mov
fstp
xchg
cmps
add
dec
jge
std
add
popa
mov
sti
inc
dec
fwait
cmc
or
cmps
pop
cmp
pushf
sub
dec
dec
js
retf
lahf
dec
movs
fild
arpl
xchg
mov
lods
out
xchg
out
cmps
xchg
fcompp
ficomp
repz
push
int3
aas
mov
adc
scas
in
sbb
fst
int
jbe
push
and
mov
lods
cmp
shl
cs
bnd
stos
xchg
sbb
cmps
mov
xchg
cmps
vorps
mov
gs
xchg
xor
mov
(bad)
repz
add
test
fbstp
xor
arpl
es
stos
and
jo
leave
(bad)
xchg
bound
sub
push
fcmovnb
push
in
adc
sbb
dec
xchg
sub
aam
aaa
dec
jo
int
lahf
stc
mov
ja
jbe
sub
push
push
retf
add
cmp
jecxz
xor
in
call
(bad)
iret
mov
and
xchg
sub
test
mov
sbb
and
cwde
adc
and
sbb
in
outs
xor
sub
ds
enter
ror
cmp
pop
int
mov
and
mov
mov
mov
(bad)
and
jge
pop
fistp
stos
arpl
inc
dec
jmp
xchg
dec
adc
xchg
and
xchg
fadd
jg
inc
bound
and
pop
mov
daa
ins
repnz
std
xchg
xor
ja
sub
push
(bad)
sub
mov
jo
add
scas
cli
inc
das
adc
jbe
pop
mov
add
dec
test
or
add
sub
loope
add
pop
ret
std
rol
jl
clc
inc
daa
pop
xchg
pop
adc
enter
adc
inc
and
cmps
pop
sbb
push
sbb
loop
(bad)
stos
out
mov
mov
cmc
pop
mov
sar
mov
mov
sub
pop
xchg
ficomp
inc
imul
ins
mov
scas
inc
movsx
inc
js
xor
jmp
xchg
ins
push
sub
sbb
ja
pop
loopne
pusha
rol
(bad)
leave
test
js
xchg
jl
(bad)
out
mov
lods
jecxz
adc
shl
in
xchg
mov
or
loopne
jae
push
test
mov
out
dec
sbb
test
repnz
mov
ins
jmp
push
add
es
fidivr
rol
out
inc
mov
xchg
adc
in
push
rcr
fwait
sbb
mov
jecxz
fidivr
pop
mov
push
push
jmp
inc
mov
add
into
inc
cmps
nop
js
cmp
pop
out
test
outs
int3
and
retf
ror
sub
out
(bad)
arpl
xor
test
jne
pop
in
dec
rol
mov
js
and
cmp
xchg
dec
repnz
fisubr
repz
cmp
jnp
cdq
stc
sbb
jb
cwde
mov
cmps
push
es
imul
dec
div
shr
fcomi
mov
es
mov
repz
mov
or
jne
pop
adc
ret
mov
mov
fadd
sub
xor
or
pop
inc
mov
cmp
sbb
sbb
scas
jbe
xchg
test
jb
sub
out
repz
xor
in
pop
jecxz
retf
xor
imul
adc
movs
cmps
jbe
cmp
test
cmp
fiadd
sbb
xchg
mov
xlat
(bad)
mov
cmp
movs
sbb
add
add
ret
mov
shr
jns
sub
aaa
push
jne
fistp
ss
push
sar
cmovl
(bad)
imul
imul
out
or
cmp
add
or
adc
xchg
fistp
shr
hlt
(bad)
mov
push
and
or
movzx
or
xlat
xor
clc
mov
pop
sbb
xchg
mov
pop
adc
dec
dec
imul
adc
fld
mov
dec
das
pop
out
popa
je
arpl
sub
pushf
repnz
sub
add
ja
push
and
pop
mov
setno
popf
adc
mov
mov
xchg
mov
(bad)
in
xchg
push
cmp
xchg
jmp
sbb
sbb
xor
pop
push
cld
loopne
shr
jno
dec
fdiv
dec
inc
or
fild
xor
or
imul
xor
enter
sub
dec
jl
and
popa
(bad)
xor
sub
sar
sub
and
add
enter
cmp
loop
mov
xlat
das
pop
mov
jne
int3
shl
pop
pop
lea
sub
mov
sub
shr
pushf
retf
addr16
xor
xor
(bad)
jns
(bad)
lock
popa
cvtpi2ps
ins
xchg
scas
bound
(bad)
adc
cmp
adc
movs
sahf
pop
int3
sbb
or
lods
jle
outs
in
sub
pop
xor
movs
dec
mov
aam
or
ins
inc
jmp
add
lods
stos
push
cmp
(bad)
sbb
cmps
stos
stc
or
mov
cmp
push
sub
out
jmp
xchg
data16
mov
test
jecxz
movs
out
inc
jg
push
xchg
adc
add
dec
or
push
jae
push
xchg
stos
mov
adc
add
add
lods
inc
mov
jg
scas
push
xchg
or
lock
push
jmp
iret
push
mov
(bad)
(bad)
and
sub
ins
mov
jo
shr
mov
xchg
sub
call
aad
xchg
pop
fnop
repnz
add
or
(bad)
pop
mov
mov
adc
js
inc
mov
push
or
and
in
mov
adc
aas
xchg
mov
dec
test
jge
pop
mov
mov
fadd
in
fwait
dec
jp
ficom
add
pushf
jge
inc
scas
fbld
jne
mov
lahf
sar
lock
rcr
out
xchg
popa
iret
lds
retf
in
ret
test
or
push
leave
repnz
into
sub
leave
cmp
rcl
repnz
cmp
pushf
bound
daa
test
push
and
(bad)
jge
jmp
test
xor
jl
cdq
xor
mov
int3
jae
call
out
test
xor
xchg
jo
or
pop
jbe
arpl
xor
mov
push
add
xor
rcl
sti
aaa
mul
ins
enter
adc
js
jmp
xchg
test
mov
test
inc
cmp
(bad)
sub
jecxz
mov
imul
js
or
icebp
mov
jmp
push
enter
mov
lahf
cmp
into
pop
retf
pop
arpl
fild
xor
mov
cmp
and
fmul
daa
aaa
call
mov
std
in
cmp
clc
in
adc
adc
cmp
pushf
div
inc
sbb
jge
and
add
adc
add
or
imul
mov
pop
pushf
mov
shr
sub
inc
push
loope
fst
movs
shl
or
test
push
lock
test
jae
push
not
div
repnz
xchg
dec
popa
and
mov
ja
mov
xlat
pop
fwait
call
mov
cwde
cld
scas
test
ret
push
xchg
je
jmp
iret
(bad)
ja
and
(bad)
scas
repnz
xchg
gs
mov
pop
mov
sbb
adc
add
shl
sbb
add
shr
scas
push
outs
int3
clc
jp
dec
arpl
test
mov
fadd
jbe
mov
ja
push
dec
ret
in
inc
hlt
stc
(bad)
mov
pop
dec
mov
imul
pop
scas
xlat
pusha
movs
repz
add
jle
push
pop
dec
ins
lods
push
repnz
ss
inc
sub
dec
push
mov
jecxz
cmp
ret
retf
mov
scas
mov
ret
repnz
add
dec
repz
push
inc
je
lods
pop
call
sti
(bad)
jmp
xor
shr
xchg
icebp
xor
rcl
cmp
sbb
add
out
pop
mov
inc
sbb
mov
xchg
(bad)
dec
or
jbe
cmps
cmp
sub
jno
add
fnstenv
lods
xchg
mov
mov
enter
xchg
stos
shl
fisttp
mov
cmp
pop
add
push
loop
add
cmp
frstor
xchg
int
fs
push
lahf
sbb
pop
add
mov
cld
or
xor
push
test
aam
xor
mov
out
cmp
ret
out
stc
sub
test
adc
mov
pop
ins
rol
addr16
inc
out
in
mov
jg
stos
(bad)
loop
jnp
ins
cdq
in
repz
iret
or
fbld
sub
cld
pop
push
inc
fneni(8087
cmc
mov
lods
inc
sub
xchg
shl
cmp
test
sub
call
(bad)
mov
loope
daa
out
push
mov
dec
clc
mov
xchg
cmp
std
outs
mov
icebp
cmp
mov
(bad)
movs
fnstenv
enter
sub
dec
xchg
jae
xor
je
test
and
cmp
adc
adc
sbb
shrd
lods
dec
jge
adc
pop
mov
add
push
pop
sub
add
aam
push
xor
(bad)
cmps
mov
adc
push
and
call
sub
(bad)
outs
jns
pop
dec
shl
dec
jle
adc
mov
data16
data16
cmc
pop
(bad)
iret
stc
adc
retf
lock
push
fwait
int
call
dec
movs
xchg
cmps
mov
and
cmp
mov
in
cmp
cdq
mov
xor
jg
or
sbb
xchg
pop
xchg
sub
aas
(bad)
mov
repz
dec
mov
(bad)
out
inc
push
movd
push
lahf
int3
mov
jne
pop
jle
inc
cmp
mov
rol
add
sti
xor
xchg
scas
arpl
sub
rol
add
sbb
or
repz
xacquire
je
pop
out
xchg
and
fst
cmp
cld
mov
(bad)
repz
jns
or
push
inc
xor
fstp
ins
or
rcr
and
aam
push
mov
test
adc
inc
mov
and
and
add
cmp
pop
nop
popa
leave
push
mov
sahf
jg
lock
sahf
and
in
xchg
pop
dec
inc
mov
mov
aaa
das
cli
and
cmps
mov
add
or
scas
inc
fadd
mov
jge
retf
into
outs
xor
mov
jnp
and
mov
sub
aas
loop
jg
sbb
mov
push
add
mov
inc
push
rol
add
ins
fdivrp
sahf
les
jg
sub
xor
sub
sub
sbb
pushf
ins
fld
adc
and
movs
out
ja
adc
xlat
repz
dec
inc
mov
jg
add
xchg
xlat
pop
jg
and
xchg
lds
lods
mov
mov
cli
call
sbb
push
jno
lea
iret
or
sub
xchg
fidiv
cmps
shl
les
fdivr
and
stos
sub
mov
dec
cmp
mov
cmps
push
jl
xor
dec
(bad)
mov
and
shr
bnd
aam
mov
int
data16
test
int
mov
cmps
js
cmp
lahf
sub
xlat
dec
xchg
bound
mov
shl
stos
mov
cmp
push
icebp
sub
jge
cld
mov
adc
pop
pop
mov
cmp
es
push
ss
pop
sub
pushw
cmp
cwde
into
dec
mov
mov
(bad)
ins
adc
adc
clc
mov
and
aas
xlat
and
dec
out
shl
push
cs
jbe
in
rcr
mov
jg
bound
daa
xlat
pop
cli
arpl
(bad)
ja
bound
mov
dec
cld
test
push
jb
shl
push
xor
and
xor
and
sbb
adc
call
mov
jmp
jmp
and
(bad)
mov
mov
mov
repz
pop
and
or
lea
rcl
hlt
das
mov
ds
std
inc
arpl
bound
stos
xchg
sub
lock
outs
cwde
sub
cmps
mov
xchg
aad
ret
pop
rcl
fwait
lock
and
ret
or
stos
das
pop
pop
inc
repz
or
add
xor
loopne
sbb
stos
sbb
push
mov
push
sbb
repnz
ds
cmp
add
cli
fisub
and
repnz
pop
cmp
test
aas
xchg
outs
dec
push
jae
xchg
aam
push
mov
std
cmp
mov
mov
mov
das
pusha
jmp
sbb
jl
in
aad
ror
daa
aas
in
mov
and
sti
inc
fldenv
js
popa
sbb
jae
jl
fcom
int
push
mov
mov
xor
sti
lea
test
sbb
mov
fmul
in
test
mov
das
inc
and
jmp
xchg
adc
(bad)
sbb
fnsave
fnstenv
hlt
xchg
inc
push
mov
or
xchg
cs
ss
cmp
pop
leave
dec
adc
dec
push
inc
xchg
and
retf
xor
shl
repz
fdivp
nop
jno
xchg
inc
dec
xchg
std
(bad)
ret
lock
jae
add
mov
inc
ror
lock
dec
and
push
inc
leave
jmp
mov
dec
lods
loopne
inc
lock
std
hlt
movs
fsubrp
ret
retf
mov
sub
xor
adc
mov
mov
je
fild
xchg
inc
rcr
xchg
xor
in
popf
pop
stos
inc
pop
nop
xchg
or
sbb
ins
pop
sbb
es
and
mov
sub
fsub
mov
sti
fsub
test
inc
mov
adc
xlat
jmp
push
imul
shl
ss
ins
mov
rcl
xchg
fld
xchg
dec
mov
dec
test
test
pusha
jnp
retf
loop
dec
mov
pop
pop
fadd
push
mov
loopne
iret
dec
or
icebp
ja
(bad)
hlt
and
pop
outs
cmps
inc
(bad)
in
cld
mov
xchg
aad
repz
(bad)
(bad)
inc
test
fsubr
lea
jg
js
movs
not
push
gs
ins
mov
push
sbb
add
jge
pushf
and
sti
dec
ror
pop
sub
shl
sbb
mov
mov
xchg
xchg
jl
retf
jns
inc
imul
or
push
push
push
and
xor
out
pushf
movs
rcl
nop
add
bound
mov
int3
cmp
fdivrp
mov
xlat
js
cmp
fs
cmp
mov
mov
inc
dec
sub
(bad)
mov
pop
adc
cwde
add
pop
xchg
xor
loop
xor
outs
jne
xor
mov
push
jge
movs
scas
push
xchg
pushf
and
mov
loopne
(bad)
sub
arpl
mov
push
scas
mov
mov
test
xor
call
mov
xor
xchg
sub
cmps
adc
mov
fsubrp
pop
in
or
repnz
jg
fdivr
or
gs
xor
retf
adc
sti
dec
shl
ficom
imul
aaa
inc
mov
push
cmc
arpl
mov
and
fisubr
daa
adc
dec
or
or
dec
xchg
daa
outs
push
mov
jg
jg
sub
shl
mov
imul
setnp
shl
xchg
mov
int3
je
cmc
in
shl
(bad)
mov
jg
mov
add
cmps
adc
stos
pop
and
dec
and
adc
aad
mov
ds
add
add
ins
sub
pop
jne
and
dec
sub
jbe
fldenv
inc
cmp
inc
faddp
dec
fwait
data16
sbb
in
adc
iret
outs
ficomp
leave
dec
push
cdq
imul
mov
neg
lea
or
sbb
int3
dec
xchg
push
lods
inc
out
leave
popf
mov
push
jo
push
mov
mov
into
mov
rol
popf
lds
out
mov
mov
loop
cmps
outs
call
or
gs
inc
ud0
cmp
(bad)
(bad)
std
or
inc
push
mov
call
fsubrp
popa
les
xor
sahf
shl
data16
ret
xor
(bad)
jecxz
cmps
ss
mov
sub
adc
or
push
add
jge
dec
push
adc
cs
mov
daa
sbb
inc
xchg
popf
mov
retf
push
fs
and
xor
and
push
in
or
or
por
and
add
daa
pop
sti
xchg
xchg
test
addr16
lahf
lds
cwde
pop
fcomi
jecxz
or
mov
into
psubb
inc
popa
jp
test
sbb
lods
out
cmps
fisub
adc
and
xchg
xor
adc
rol
xchg
std
(bad)
in
dec
cmc
aas
out
push
es
mov
jae
data16
dec
mov
ins
cmp
iret
aad
add
mov
popa
lods
mov
ja
adc
std
push
add
jnp
sahf
lds
jnp
mov
sbb
movs
push
jb
or
push
fldcw
hlt
fld
mov
mov
and
xchg
and
pop
sti
adc
loopne
xor
aad
sbb
std
test
mov
mov
dec
push
cmp
sub
lds
cld
cmc
adc
addr16
ret
dec
cmovno
outs
jno
ss
fs
adc
xchg
int
and
popf
test
inc
fimul
js
cld
mov
dec
cmc
pop
pop
mov
in
add
and
or
leave
fs
jns
ja
pop
dec
cs
fadd
mov
dec
ins
adc
inc
add
adc
call
mov
shr
mov
sahf
mov
push
cdq
call
dec
daa
daa
scas
pop
test
push
mov
push
out
push
sbb
movlps
enter
mov
mov
push
dec
mov
outs
sbb
stos
mov
jno
sub
xchg
es
sbb
(bad)
add
cmp
fidiv
dec
out
cmp
es
ins
sbb
adc
sbb
xchg
inc
out
ja
arpl
inc
pop
xor
jg
inc
fisubr
es
mov
cwde
mov
cld
mov
sub
nop
mov
sbb
mov
add
pop
neg
out
aaa
int3
sub
rcl
push
inc
sub
xchg
adc
(bad)
stc
enter
repnz
dec
xor
aam
sub
call
xor
clc
xchg
ins
jge
jbe
dec
dec
sbb
mov
daa
add
sbb
xchg
pusha
stc
in
mov
jbe
dec
xor
mov
dec
retf
push
xor
movs
cmp
dec
mov
xchg
push
or
test
pop
mov
sbb
mov
jnp
adc
cmp
xchg
aaa
jg
mov
push
sub
fisttp
rol
sub
dec
arpl
fcomp
jmp
jbe
data16
iret
aad
or
push
xchg
sub
into
and
cmps
shl
jbe
scas
scas
sahf
jbe
fsub
pop
shl
popa
pop
rcr
xchg
push
and
lock
movs
xor
cdq
cmc
aam
outs
inc
popf
sbb
test
into
mov
loope
xlat
mov
push
call
mov
add
pop
cmps
out
movs
mov
inc
pop
test
hlt
cmp
stos
push
xor
ja
pop
xor
mov
mov
pop
mov
add
jg
mov
mov
mov
mov
jb
jp
or
movs
pop
lea
push
mov
pop
fidiv
rol
sub
or
sbb
cmc
loope
sar
xchg
div
retf
test
fnstsw
dec
inc
xchg
or
jmp
pop
dec
data16
push
sub
mov
inc
ds
sahf
shr
sub
or
icebp
mov
cmps
(bad)
mov
cdq
cmc
cmp
sub
push
or
pushaw
mov
btc
mov
jne
dec
in
jle
mov
rol
cmp
pop
or
adc
and
cmp
pop
fs
jne
pop
scas
es
sbb
ja
jg
imul
scas
in
xchg
push
and
push
jp
test
neg
popa
jge
sub
mov
jo
mov
and
push
dec
adc
mov
mov
pop
je
xchg
(bad)
sbb
loope
mov
je
inc
mov
lods
and
mov
(bad)
cmp
add
stc
and
sub
xchg
xlat
int
sbb
inc
out
call
cld
fidivr
adc
std
sub
push
dec
pop
jl
mov
pop
mov
loopne
inc
leave
xor
pop
je
and
out
xor
iret
sar
ins
mov
(bad)
mov
add
mov
or
bound
push
mov
mov
xchg
enter
into
test
xor
and
ret
int
ins
cli
or
adc
mov
cmp
xor
sbb
jae
sbb
push
push
pop
mov
jnp
jle
cmps
and
mov
pop
aaa
aas
int3
inc
pop
retf
jp
cwde
aam
sbb
dec
dec
inc
xchg
mov
call
cmp
pop
mov
cld
mov
pusha
fsubr
hlt
push
sbb
jo
xor
in
fstp
shl
sub
inc
cmc
leave
lahf
ror
out
sbb
mov
in
pop
or
dec
jle
stos
xchg
sti
std
sub
jle
fdivr
or
lock
stos
cmc
paddsw
push
ja
outs
mov
add
jns
cmp
out
jae
jo
mov
push
sbb
dec
jmp
retf
lahf
pop
mov
push
mov
movs
in
inc
aaa
fldenv
pop
sti
mov
mov
je
repz
jmp
lahf
pop
xchg
mov
mov
movs
mov
push
fwait
jle
clc
pop
into
fisub
jmp
dec
loop
jge
test
and
xor
int
inc
loope
adc
push
jge
outs
ins
fsubr
xor
adc
and
push
pop
int
cwde
mov
jnp
jl
adc
repz
adc
addr16
jno
test
mov
std
cwde
jl
nop
enter
and
stc
xchg
jmp
shl
inc
arpl
dec
and
jl
mov
cmps
mov
sub
push
sahf
(bad)
jmp
push
pop
(bad)
test
out
aas
out
pop
xchg
cwde
retf
fs
xchg
mov
lahf
dec
ror
enter
cmp
(bad)
(bad)
fadd
vpsubw
int
imul
dec
test
scas
cmps
mov
inc
call
add
dec
or
and
and
pop
push
jbe
push
out
mov
in
and
je
pop
push
jns
mov
adc
arpl
dec
mov
retf
and
aaa
daa
or
xchg
cdq
or
push
inc
leave
mov
adc
cmc
mov
mov
and
push
movs
cs
lods
jno
and
add
mov
sub
imul
scas
sahf
sbb
jp
(bad)
(bad)
mov
popa
xchg
mov
inc
add
xchg
jmp
popf
in
xchg
ds
ficom
inc
xchg
xlat
test
dec
pop
dec
pop
call
fs
lock
sub
xchg
cmps
pushf
jl
mov
shl
(bad)
and
movs
shl
aad
loopne
addr16
xchg
enter
out
mov
dec
jmp
sar
in
push
push
enter
scas
(bad)
popa
mov
jnp
jge
xchg
pop
cmp
inc
out
mov
ret
or
imul
aam
stc
pushf
lahf
sahf
pop
shr
outs
js
jnp
scas
sub
call
pop
add
ret
dec
fist
sbb
push
push
bound
mov
jnp
jns
cdq
mov
push
dec
add
add
push
cmp
call
pop
call
loopne
in
add
das
paddusw
push
mov
sti
mov
push
push
sub
js
and
out
test
add
add
push
test
push
imul
xor
bound
aas
jns
xchg
mov
push
(bad)
ja
test
adc
sahf
retf
xor
out
(bad)
imul
in
nop
loop
pop
call
stc
mov
inc
mov
sbb
lock
int3
sbb
xchg
xor
inc
add
sbb
add
xlat
and
and
(bad)
loopne
imul
mov
movs
mov
sub
out
pop
dec
lahf
daa
push
or
out
fstp
dec
add
xor
cmp
mov
push
push
mov
adc
dec
gs
(bad)
stc
popa
add
cmps
cmp
or
(bad)
cdq
pop
inc
cld
loopne
mov
mov
(bad)
retf
sbb
mov
aas
stos
ret
ret
ret
fld1
cmp
cmc
jo
add
jmp
loop
push
push
int
mov
adc
mov
pop
out
jne
test
sbb
aaa
test
popa
scas
xchg
mov
mov
jbe
or
mov
repnz
aaa
adc
jns
push
xchg
out
inc
lods
fdivr
jbe
mov
stos
adc
jne
rcl
pop
xor
fstp
clc
pop
test
js
rol
cmp
push
jge
data16
mov
hlt
pop
int3
xchg
jmp
jmp
push
cld
or
and
xchg
and
shl
mov
mov
mov
push
out
or
mov
cdq
add
xlat
pop
call
xchg
mov
ins
inc
inc
js
je
arpl
out
jne
(bad)
adc
or
pusha
test
sbb
out
xlat
ss
lock
ds
mov
aaa
ror
or
ins
(bad)
dec
scas
dec
fwait
jle
call
inc
pop
push
inc
pop
sub
jnp
loope
mov
mov
in
xor
call
cld
lock
sbb
xchg
push
jmp
push
test
push
or
inc
les
dec
mov
jmp
aas
in
scas
xor
xor
loope
cmps
xchg
dec
sub
(bad)
sbb
xor
jle
add
lock
(bad)
adc
cwde
mov
push
rcr
out
xlat
(bad)
sub
ins
or
cmp
sbb
or
jmp
mov
pop
cwde
jecxz
daa
popa
push
and
mov
retf
call
xor
sar
and
test
pop
xor
xchg
cmc
ja
scas
movs
mov
outs
repnz
push
inc
dec
sbb
loope
mov
dec
mov
mov
push
jno
lds
retf
cli
mov
repnz
cmp
jmp
mov
or
mul
mov
adc
clc
inc
sub
push
jge
aad
ins
xchg
and
xchg
mov
jmp
or
retf
adc
retf
xchg
clc
popf
sbb
sbb
mov
data16
stos
aad
(bad)
fld
int3
ja
sbb
mov
(bad)
pop
(bad)
and
sbb
jno
and
fld
ffreep
outs
stc
(bad)
mov
sbb
pop
add
mov
arpl
mov
stos
adc
jl
das
mov
inc
or
ds
jne
mov
jge
push
jmp
lods
inc
out
hlt
ret
jl
ins
addr16
test
push
lahf
sbb
push
sbb
out
rol
sbb
dec
sbb
cmp
les
repnz
push
lods
pop
inc
push
adc
dec
enter
into
movs
or
inc
mov
sub
mov
jo
pop
sub
lds
push
adc
in
ins
out
gs
pushf
call
cmp
mov
lods
(bad)
stc
dec
mov
mov
outs
push
jg
sub
(bad)
jmp
sub
cld
mov
popf
leave
daa
ficom
push
inc
jge
inc
fistp
rcr
jmp
xchg
imul
cmp
dec
outs
cmc
call
mov
fsubrp
(bad)
call
out
dec
ret
hlt
ins
lds
retf
stos
fimul
xor
pop
std
cs
fstp
mov
mov
rol
sbb
(bad)
(bad)
jp
clc
lea
xchg
je
shl
in
sbb
fsub
int3
add
mov
cmps
fldenv
sub
fldcw
sub
jne
cmp
mov
movs
push
cmp
(bad)
mov
inc
jecxz
idiv
cmp
into
sbb
pusha
sub
jmp
xchg
adc
cmp
retf
shl
lods
dec
sbb
sub
mov
pop
fs
mov
cmp
int
or
mov
sub
push
pop
ds
add
fbstp
push
sahf
mov
xor
adc
push
outs
popf
idiv
mov
mov
push
or
cdq
or
jb
cmp
and
pop
daa
push
test
xchg
mov
in
mov
sbb
cmp
cli
aad
cmp
jl
xchg
shl
je
jo
push
call
pop
lds
mov
and
mov
daa
(bad)
jns
test
mov
scas
xchg
bnd
inc
pop
xchg
xor
and
xor
lock
test
mov
or
mov
(bad)
arpl
imul
mov
aaa
mov
out
test
mov
je
mov
jno
jmp
xchg
sbb
clc
push
or
sar
in
pusha
dec
or
pop
fisttp
jb
ror
add
pop
iret
push
mov
test
push
mov
or
xchg
xchg
mov
lds
push
xor
adc
sub
iret
push
cmp
jg
and
fsub
mov
idiv
in
rol
dec
push
push
sar
mov
div
addr16
push
dec
retf
adc
push
outs
idiv
inc
push
inc
push
push
inc
dec
fisub
gs
imul
fs
sub
xchg
iret
dec
arpl
mov
retf
mov
cmp
aas
jns
fucomi
(bad)
cli
push
dec
and
rol
or
adc
scas
fsub
test
sbb
or
dec
lds
out
jo
cmc
imul
inc
outs
stc
mov
push
and
enter
repnz
aad
pop
cmp
fdivr
ror
and
cld
jmp
loop
jo
cmps
cdq
mov
lods
push
fnstcw
jmp
jo
inc
jnp
ret
test
in
mov
xchg
out
dec
lock
or
or
lahf
fsubp
push
sbb
push
push
push
push
mov
push
cmp
jle
xchg
fldcw
mov
pop
stos
aad
sub
and
push
shld
mov
push
inc
mov
(bad)
imul
pop
cld
add
ret
mov
inc
xchg
mov
mov
push
out
in
xor
mov
retf
ret
mov
stos
mov
mov
add
das
inc
adc
mov
out
dec
nop
ss
mov
jno
mov
pop
inc
std
repz
dec
mov
push
push
xor
out
push
icebp
sub
or
mov
or
adc
inc
sbb
push
xor
sbb
popa
sbb
sbb
inc
test
pop
arpl
(bad)
aaa
lock
retf
pop
push
push
cmp
loope
stos
mov
idiv
out
loope
jns
jae
mov
and
shl
mov
mov
clc
aam
sbb
pop
sub
cmp
cdq
inc
std
les
addr16
hlt
xor
mov
ror
xor
cmps
shl
sbb
lods
retf
out
movs
cmc
xor
(bad)
cmp
shr
int3
ja
push
jmp
ror
jge
es
(bad)
push
inc
retf
fnstenv
pusha
mov
mov
cmp
mov
jmp
or
pop
push
aad
mov
jecxz
nop
and
mov
add
nop
dec
test
inc
out
sbb
add
lods
test
jnp
shl
je
jb
or
out
rcl
mov
mov
push
out
xor
out
dec
in
mov
mov
fcmovbe
inc
out
loope
dec
mov
cmp
sbb
add
ficom
test
mov
mov
je
jns
fs
sub
inc
cmp
mov
out
fbld
push
mov
or
jp
and
iret
in
dec
and
jae
jp
data16
fistp
daa
test
push
das
mov
jne
mov
push
test
stos
test
stos
stc
cmp
out
mov
sub
push
out
pusha
dec
out
pushf
fcomp
dec
push
bound
or
mov
stos
push
adc
pop
js
dec
dec
inc
mov
sub
fidiv
movs
(bad)
sbb
add
fnsave
jg
repnz
clc
mov
cli
inc
mov
leave
ins
shr
adc
mov
cmp
mov
lock
fisttp
aaa
mov
int3
sbb
test
dec
inc
cmp
push
push
xchg
mov
ds
in
lods
add
ds
lods
dec
xor
daa
mov
jo
cli
fild
cmps
into
push
aas
xchg
xchg
xor
inc
push
es
or
cmc
jmp
dec
fcomip
inc
jae
cmp
outs
mov
adc
mov
or
dec
xchg
call
cmc
jno
adc
push
fcom
out
sub
xor
jmp
loop
rol
or
out
icebp
xchg
and
pushf
mov
add
inc
or
sbb
mov
add
jecxz
sub
mov
inc
repz
inc
pop
cdq
jmp
retf
cdq
in
daa
sbb
or
pop
leave
(bad)
mov
dec
mov
in
sahf
lock
es
rcl
add
scas
mov
pop
aas
popa
ror
fist
mov
add
sub
and
movs
adc
lock
cwde
test
jecxz
adc
pop
int3
dec
push
rcl
cmp
call
pop
shl
push
outs
test
mov
lods
mov
sahf
sub
dec
mov
cmps
xchg
sub
outs
outs
mov
xchg
add
mov
lds
frstor
push
sub
and
mov
call
and
dec
repnz
fsubrp
out
lds
repz
and
in
inc
enter
gs
rcl
in
ficomp
ja
jbe
sbb
rcl
pop
push
pop
mov
cmp
popf
mov
iret
dec
push
jmp
rcr
and
sbb
push
mov
cmp
pusha
and
retf
icebp
dec
push
sub
push
sbb
shl
mov
pusha
je
scas
mov
mov
mov
popw
mov
addr16
test
add
inc
push
xor
lds
mov
jg
frstor
cmp
and
xor
pop
xchg
scas
inc
adc
and
sbb
and
cld
mov
mov
sub
jae
stc
out
(bad)
out
lods
mov
loopne
mov
lahf
mov
aad
mov
jl
mov
pop
dec
retf
xchg
mov
sbb
fld
idiv
mov
mov
pop
jb
cld
xor
adc
dec
mov
push
dec
push
add
dec
cmps
int3
push
jecxz
xchg
xor
dec
jne
dec
mov
lahf
shl
dec
call
movs
and
retf
push
push
ins
jo
mov
xor
addr16
movs
jmp
popf
push
cwde
cmp
push
or
ret
retf
nop
imul
jecxz
jae
inc
xor
mov
jns
mov
pop
arpl
sbb
pop
xor
jg
sahf
clc
push
xchg
hlt
cmp
scas
scas
sub
jbe
fxch
jns
mov
addr16
jbe
or
daa
mov
sbb
push
aam
mov
movs
push
dec
adc
aam
ins
test
clc
sub
data16
fs
stos
adc
ins
adc
daa
push
test
ror
and
mov
add
jae
cmp
bound
retf
shr
mov
fimul
push
(bad)
jmp
es
jnp
mov
mov
mov
adc
daa
mov
mov
gs
mov
cwde
stos
or
daa
enter
cdq
sbb
inc
xchg
enter
dec
mov
jne
xor
into
mov
xchg
xor
xchg
loopne
shl
or
out
data16
mov
movs
jl
jg
aaa
mov
sub
loop
outs
cmps
push
mov
clc
enter
pop
sti
fild
das
jle
sbb
jge
ds
mov
mov
je
in
adc
ja
inc
outs
idiv
cmps
sbb
push
into
or
and
imul
rol
int
sbb
pop
out
mov
shr
ret
or
and
mov
mov
nop
rcl
ror
pop
sar
mov
xlat
pop
jno
cmp
data16
jg
mov
pop
in
jmp
mov
add
sub
pop
sub
add
or
fisttp
mov
mov
jp
add
dec
mov
ss
in
adc
imul
push
sbb
xor
sbb
dec
mov
push
mov
push
pusha
sub
mov
and
aaa
mov
mov
cmp
mov
cmp
push
cmp
or
and
cmps
lods
mov
movs
fisubr
out
shl
cwde
(bad)
push
mov
bound
rcl
aaa
(bad)
mov
xor
xor
loope
cdq
cdq
sub
daa
cmp
cld
mov
lods
push
in
lds
ja
jnp
mov
adc
lock
mov
repnz
rcl
add
dec
mov
jge
cmp
adc
test
test
push
inc
rcl
test
pop
mov
sub
cs
dec
test
dec
rcr
int3
stos
rcl
or
lods
dec
div
out
dec
mov
in
and
aaa
fwait
mov
pop
xchg
jle
mov
jge
push
div
inc
repz
outs
test
das
jbe
sbb
inc
icebp
push
jecxz
mov
jle
or
mov
inc
sub
and
(bad)
jmp
retf
jmp
fisub
jg
cmp
xchg
popa
xchg
stos
xor
jbe
stc
push
cmps
push
mov
mov
popf
std
mov
nop
sbb
cmps
outs
in
retf
adc
ss
jns
and
lea
ins
jo
ror
jmp
fs
xchg
daa
loopne
mov
int
sahf
je
xchg
cmp
push
xchg
sub
in
cmp
jp
scas
call
sub
jp
mov
mov
aam
jnp
(bad)
stc
shr
ds
add
add
sbb
lods
and
jge
mov
pop
dec
hlt
add
scas
xchg
cs
jnp
pop
enter
mov
adc
nop
xor
stos
mov
call
jbe
sbb
pop
test
daa
cmp
pop
mov
dec
retf
fcmovnb
xchg
movs
or
out
popa
xchg
and
add
das
push
call
jmp
xchg
xor
sub
(bad)
dec
push
mov
dec
dec
jne
jae
pushf
ins
cld
out
rol
xlat
jbe
xchg
xchg
mov
test
or
idiv
icebp
pop
call
lahf
(bad)
iret
aam
and
jbe
inc
ret
in
gs
inc
xor
dec
mov
into
add
sub
es
dec
jge
add
out
sbb
mov
repz
in
lds
lods
xchg
adc
ret
mov
dec
or
in
mov
inc
mov
stc
cmp
add
dec
cdq
lock
mov
lock
int
xor
adc
movs
mov
xor
push
std
clc
mov
jmp
pop
jns
push
adc
stc
sub
xor
pop
fstp
xor
std
mov
adc
cdq
inc
leave
es
push
and
call
fs
ja
mov
mov
stc
pop
leave
imul
cmp
rcl
pop
jle
movs
add
push
and
daa
or
gs
cli
mov
ror
jne
aas
jb
mov
cld
mov
sub
ja
push
call
pop
das
stc
jmp
(bad)
scas
adc
or
adc
stos
div
sahf
inc
pop
cmc
in
fisubr
aam
sub
adc
shl
and
pop
lods
sbb
in
test
dec
add
or
pop
scas
test
mov
mov
call
push
cmps
adc
cmp
mov
sar
adc
fcomp
jecxz
jg
jecxz
ja
addr16
imul
loopne
call
jg
sub
mov
push
push
loop
or
ja
inc
adc
pop
cli
push
fidiv
jg
and
xor
xlat
jg
rcr
sbb
mov
mov
jmp
mov
icebp
popf
arpl
dec
adc
adc
scas
sbb
aad
jmp
sbb
dec
loop
xor
ret
mov
or
mov
inc
push
cmps
nop
pop
mov
xor
ja
or
sbb
jne
test
lea
not
popf
(bad)
pop
stc
outs
adc
xor
arpl
cwde
dec
and
ror
stc
xchg
jp
cmp
(bad)
inc
or
push
mov
pop
mov
ja
fld
jo
jp
or
cmp
les
jo
push
pop
popa
ds
sbb
pop
pop
xchg
les
not
mov
int3
aad
adc
pop
jl
xchg
cld
xchg
jg
pop
scas
rcr
jb
xor
push
clc
add
outs
jg
xchg
jae
sbb
je
sub
loopne
fmul
mov
jecxz
sub
int
stos
fist
cmp
pushf
push
mov
call
ret
js
pushf
sti
inc
jge
jb
xor
xor
rcr
pop
les
movs
stc
rol
jne
mov
fsubr
(bad)
inc
dec
mov
jmp
dec
data16
ins
arpl
in
adc
icebp
pop
stc
mov
addr16
pop
iret
out
pop
cmps
sub
lock
or
jp
mov
scas
pushf
cli
push
xchg
sub
jle
out
add
sbb
iret
test
mov
and
cmp
aam
adc
stos
jp
ss
push
sbb
push
adc
out
mov
fwait
jge
push
dec
in
cmp
cs
xor
enter
imul
or
ror
ja
pop
xchg
fst
clc
rcr
pop
(bad)
fadd
sahf
push
xor
and
int
jmp
cmc
xor
out
imul
sub
adc
in
adc
pop
mov
(bad)
cmp
push
jge
(bad)
daa
lahf
add
cmp
inc
and
ins
pop
gs
dec
out
das
js
pop
jnp
enter
lods
add
mov
or
add
cmp
jmp
dec
xor
outs
lods
int3
sub
loop
cmp
pop
iret
sub
cwde
sar
jmp
not
inc
dec
cmps
in
sahf
ja
sti
cmp
outs
or
int
stc
sahf
outs
jno
push
add
stc
je
dec
loope
sbb
std
test
mov
lds
in
cmp
ja
cmp
push
cld
outs
inc
xor
jb
fstp
mov
out
push
add
(bad)
jge
dec
push
inc
pop
dec
inc
movs
xor
call
add
pop
out
sub
push
mov
mov
jmp
lds
inc
mov
aad
mov
jmp
loop
cld
rcr
xor
mov
inc
sub
fdiv
fcomp
and
out
cmp
stc
inc
sub
and
mov
sti
add
xchg
and
mov
test
inc
push
adc
idiv
aas
lods
enter
fsubr
js
inc
std
gs
adc
not
or
push
sar
cmp
push
std
js
cmp
jmp
mov
fiadd
dec
repz
fdiv
mov
pop
and
xor
xchg
(bad)
clc
jne
sbb
mov
mov
cli
jo
inc
out
pop
adc
sbb
or
mov
or
imul
test
push
sti
std
(bad)
sub
in
pop
aas
xchg
push
mov
out
pop
dec
xchg
fsubr
js
ret
and
pop
test
mov
pop
mov
popa
ins
push
mov
rcr
sbb
xchg
les
gs
sbb
nop
fistp
cmp
adc
ins
cwde
das
add
push
xchg
outs
das
data16
in
gs
sub
ror
ss
pusha
push
movs
mov
cmp
add
mov
rcl
imul
repnz
or
push
nop
fsubr
inc
xor
aas
pop
sbb
out
fstp
mov
xor
outs
push
cli
sbb
or
or
or
sbb
sti
stos
xor
sbb
inc
pop
jae
repnz
and
aas
aas
stos
loopne
or
fld
test
sub
inc
mov
pop
out
dec
mov
movs
and
imul
or
call
bound
mov
or
in
bound
pop
lods
dec
jb
dec
cwde
xor
jg
cmp
mov
sub
push
pushf
ins
(bad)
call
(bad)
jl
jns
mov
dec
xchg
dec
stos
xchg
and
ins
mov
mov
dec
int3
dec
out
or
jb
cmp
and
sbb
pusha
int3
mov
jne
daa
xlat
xlat
xchg
pop
sbb
mov
mov
inc
out
enter
or
dec
jnp
add
sbb
iret
jmp
cli
pop
pop
sbb
xor
mov
mov
loope
cmp
int3
push
pop
dec
in
(bad)
mov
ins
push
cmp
dec
cmc
cli
dec
mov
push
mov
sub
lds
stos
dec
xor
je
lea
xchg
scas
ret
sub
pop
add
and
push
mov
xchg
aam
push
adc
cmp
(bad)
lods
aaa
jle
test
sbb
loop
gs
in
add
mov
sbb
test
push
jno
jae
pop
cwde
out
pop
add
nop
push
mov
fimul
and
mov
stc
repnz
test
jge
dec
sub
popf
int3
cmp
jae
mov
or
pop
out
loope
in
out
fwait
gs
jb
sbb
aas
(bad)
mov
sbb
in
mov
std
push
ds
rcl
inc
daa
cmps
dec
xor
sbb
jne
dec
mov
cmp
pop
les
sub
out
cli
jo
mov
pop
push
or
xor
push
inc
test
data16
dec
sub
ins
sbb
imul
cmc
adc
(bad)
xchg
xchg
imul
inc
mov
jno
loope
aaa
in
pop
sub
and
xor
sub
push
pop
mov
mov
pop
js
xchg
(bad)
dec
outs
lods
jmp
js
fs
into
pop
popa
adc
retf
fwait
or
jle
mov
std
shl
in
and
jecxz
test
mov
cdq
sub
mov
push
cmp
push
push
js
nop
(bad)
ss
and
mov
or
adc
or
stos
mov
enter
std
cmp
test
loope
fs
adc
clc
mov
jle
imul
imul
int
mov
mov
xchg
sbb
in
xchg
ss
out
cmc
mov
dec
lods
pop
sti
imul
bnd
mov
mov
imul
sahf
sbb
(bad)
push
cs
daa
fmul
js
ja
mov
and
rcr
data16
xor
jno
cs
mov
sub
sti
aam
inc
loop
fwait
das
cmp
cs
push
test
das
fstp
out
shr
jmp
xchg
xchg
push
add
(bad)
outs
pop
sahf
(bad)
ja
daa
push
pop
sahf
outs
jns
pusha
mov
push
xchg
fiadd
scas
push
sub
add
mov
test
in
iret
cs
shl
sahf
cmp
scas
movs
rcl
inc
aam
adc
inc
pushf
mov
fwait
sbb
pusha
rcl
lea
push
pushf
call
pop
jmp
pop
in
(bad)
in
mov
(bad)
fistp
cmps
jno
sahf
ror
ss
pop
xor
mov
mov
(bad)
ds
data16
jno
int3
test
sbb
cdq
xchg
mov
or
or
cld
jne
leave
aam
jb
aas
mov
jae
or
mov
cmp
cmp
clc
mov
add
mov
inc
(bad)
dec
xor
mov
shl
pop
jmp
mov
mov
(bad)
mov
dec
scas
xor
xor
fbld
and
xchg
or
adc
daa
inc
pop
and
les
inc
ins
pop
push
test
xor
mov
mov
ja
imul
nop
mov
jbe
adc
xor
jae
jbe
pop
es
xchg
push
movs
pop
push
test
je
sbb
imul
jbe
fst
mov
and
mov
mov
(bad)
inc
in
fsub
sbb
mov
dec
mov
xor
cmp
mov
dec
mov
neg
pop
test
jo
add
aad
jns
ror
cmp
aad
shl
lods
sub
dec
sbb
je
push
sbb
aad
xor
ins
mov
das
xor
repz
jne
(bad)
imul
lods
fs
cdq
scas
hlt
sub
dec
sbb
(bad)
cld
imul
mov
mov
test
arpl
rcl
xor
inc
xor
dec
dec
mov
adc
loop
push
pop
leave
mov
cmp
or
(bad)
scas
sbb
sbb
sahf
into
call
xchg
mov
bound
test
jo
pushf
std
cmp
add
aam
test
pushf
pop
lods
dec
jns
stos
dec
or
cdq
je
leave
push
cmc
mov
mov
mov
icebp
je
rcl
lea
ficom
fcom
aam
inc
je
dec
lea
inc
mov
cdq
jnp
shr
inc
ins
(bad)
das
ror
or
je
int
movs
mov
cli
pop
and
jge
fwait
ret
xchg
pop
jb
repnz
add
loop
ja
pusha
jge
add
fs
outs
stos
les
call
jns
ins
je
mov
call
or
shl
jns
jno
pop
ficomp
xor
lock
int3
imul
cmp
ftst
call
cdq
push
stc
out
add
imul
rol
clc
jo
rol
es
adc
sub
xor
pop
and
out
xchg
inc
push
jge
adc
mov
fistp
lds
mov
iret
movs
push
ret
call
inc
cmp
or
call
cmp
lock
push
ss
mov
imul
jb
add
clc
mov
out
sub
jae
add
dec
xchg
jb
xlat
xor
cmps
xchg
sti
jl
rcr
fcomp
js
das
sbb
cmp
mov
push
popf
xor
sti
mov
xor
jge
or
mov
ds
into
int3
test
shl
gs
loop
jmp
push
inc
inc
and
retf
pop
mov
or
cmp
jecxz
mov
stos
rol
add
repz
cmp
data16
lods
lds
int3
imul
mov
movs
int3
dec
push
(bad)
jns
fdivr
shr
mov
lds
bound
or
lea
adc
cmps
movs
lahf
mov
jne
mov
addr16
xchg
cmc
aaa
shl
cdq
hlt
sub
call
push
xor
add
ficom
xchg
push
add
fdivr
pop
jg
jmp
in
inc
push
xchg
loopne
push
mov
push
js
mov
push
sub
test
cwde
pushf
scas
mov
push
xchg
sbb
lahf
sbb
mov
dec
mov
outs
(bad)
jg
add
nop
stc
inc
sbb
repz
cmp
xchg
push
mov
rol
mov
xchg
push
cmps
dec
xchg
push
retf
std
xchg
in
bound
pop
lods
cmp
xlat
jnp
add
sahf
mov
outs
inc
jbe
int
ror
push
loop
fwait
dec
scas
popa
ins
mov
mov
and
push
dec
and
add
(bad)
or
adc
mov
cmp
xchg
fld
gs
stos
scas
je
popf
mov
fild
std
arpl
cmp
stos
inc
and
add
mov
movaps
mov
mov
into
mov
in
jmp
dec
leave
xchg
leave
stos
mov
push
jle
mov
adc
push
out
sub
push
out
inc
jp
fdiv
in
repnz
push
pusha
gs
loope
lahf
jnp
movs
fimul
pop
jae
and
push
mov
xchg
xor
sub
arpl
lahf
cmp
xor
int
push
fwait
mov
mov
ret
data16
popa
mov
jle
idiv
neg
add
jae
(bad)
pop
xor
xchg
push
movs
mov
inc
outs
sahf
mov
lods
push
mov
adc
sub
mov
test
xor
in
pop
add
mov
ror
and
imul
push
(bad)
aas
jne
add
mov
xchg
and
xchg
inc
ret
or
in
rol
in
cmp
popa
cmc
inc
xor
test
into
jne
lock
clc
ss
jae
xchg
fadd
xchg
sub
xor
ja
dec
mov
pop
lods
fdiv
mov
vmread
xchg
ficom
inc
jle
push
jbe
(bad)
jg
push
mov
dec
mov
dec
sti
mov
(bad)
mov
push
loop
pusha
loop
jg
into
mov
dec
std
repnz
xchg
sub
pop
int
push
sbb
popa
mov
xchg
cwde
pop
push
push
pop
in
gs
lods
shr
push
xor
out
xor
inc
inc
xchg
mov
push
aaa
repz
dec
mov
pop
outs
or
pop
mov
cmc
mov
add
aas
sahf
pushf
xchg
ret
sar
push
sbb
scas
int3
push
arpl
in
scas
push
(bad)
aad
fisttp
push
sahf
adc
cmp
and
in
mov
sar
pop
lods
je
or
xchg
fs
fsqrt
aam
mov
jecxz
inc
in
jns
jnp
fmulp
sub
fdiv
pop
lods
sub
add
mov
sub
xchg
iret
inc
aaa
adc
test
mov
push
mov
or
dec
movs
jle
pushf
mov
cmp
mov
mov
adc
nop
push
xor
and
and
cmp
das
mov
xor
fadd
and
pusha
aad
mov
dec
pop
mov
clc
add
push
shl
xchg
jo
xchg
or
out
(bad)
lock
push
test
sti
cmps
mov
aam
das
push
lock
fidivr
xor
scas
cmc
hlt
call
jbe
or
pop
ret
icebp
and
jbe
cld
add
mov
sub
stos
mov
daa
pop
inc
pop
data16
jb
dec
pop
aad
int3
sti
mov
repz
cmp
dec
lock
jo
std
in
add
or
test
(bad)
or
imul
pop
sub
add
sub
test
add
inc
popa
xchg
loopne
xlat
and
scas
lahf
cs
es
pushf
daa
xor
movs
lea
xchg
imul
out
mov
retf
cmp
test
arpl
dec
(bad)
mov
mov
push
inc
push
enter
mov
fs
or
call
bound
add
scas
test
mov
sub
outs
xchg
aaa
xchg
fild
jno
jle
loopne
iret
loope
ret
pop
sbb
lahf
xor
and
cmp
loope
pop
popf
jmp
or
push
leave
mov
mov
jnp
mov
retf
out
and
adc
(bad)
cdq
jbe
pop
in
jmp
and
or
or
outs
xchg
call
xchg
sub
adc
mov
push
loope
scas
dec
cs
jnp
adc
mov
std
rcr
call
ja
sub
int
std
enter
call
xchg
pop
xchg
push
pop
pop
xor
mov
jno
push
and
mov
fwait
unpckhps
mov
and
rol
sub
cmp
je
in
jne
xchg
sub
mov
or
cmp
lods
sti
add
leave
nop
out
out
jp
imul
mov
popf
(bad)
adc
shr
sbb
cmp
nop
xchg
jae
push
pop
adc
jle
leavew
call
dec
adc
jns
or
(bad)
push
dec
lock
neg
inc
int
out
jno
fwait
out
test
xor
xor
shl
mov
pop
inc
mov
in
xor
xor
in
into
or
mov
or
sub
fwait
cwde
mov
xor
cmc
fwait
push
mov
das
int
fwait
pop
jne
fisttp
mov
sbb
test
adc
ret
shr
test
call
outs
dec
sub
loope
cmp
jmp
imul
(bad)
or
fcom
mov
cli
push
mov
and
push
jo
cmp
xor
enter
cmc
pop
mov
and
add
loopne
pop
push
imul
in
ins
push
push
scas
popa
dec
mov
int
inc
popa
jo
push
in
adc
cld
(bad)
outs
lea
idiv
cmps
xchg
imul
daa
loop
hlt
push
xor
pop
movs
sar
dec
call
and
stos
jecxz
mov
enter
in
sub
push
dec
(bad)
and
or
sub
test
or
lahf
xchg
xor
dec
adc
xor
mov
push
imul
inc
inc
add
xor
mov
dec
mov
mov
mov
into
mov
stc
cmp
mov
and
pop
fisttp
cli
jmp
add
pop
pop
add
pop
push
sub
adc
mov
push
test
mov
cmp
mov
xor
push
pusha
fst
mov
sbb
int
scas
repnz
add
cmp
dec
je
jg
cs
and
dec
jns
ss
mov
in
ret
adc
aas
int3
cmp
fmulp
std
js
daa
fcmovu
jo
sar
retf
out
push
stc
mov
push
cli
jmp
mov
jo
xor
mov
out
int
hlt
addr16
mul
xor
jnp
or
movs
push
cld
enter
out
and
movs
imul
xor
xchg
movs
mov
int
into
mov
pop
jecxz
mov
cmp
outs
retf
ror
stos
xlat
cmp
and
dec
adc
mov
outs
mov
(bad)
test
outs
mov
jecxz
outs
fst
stos
int
pop
sub
sbb
stos
fbld
sti
cmp
and
and
mov
dec
in
adc
cli
xor
mov
push
lock
nop
xor
fcomp
es
jg
cld
cs
add
repz
popf
int
cmp
or
xchg
inc
pusha
shl
xchg
inc
ror
inc
mov
aad
mov
push
pop
or
mov
pop
inc
jg
loop
dec
cdq
mov
add
pusha
in
imul
jno
retf
inc
push
xor
ficomp
push
icebp
inc
sbb
jnp
mov
call
loope
icebp
xor
mov
lock
and
out
sahf
inc
aaa
dec
mov
inc
xchg
sbb
call
mov
das
popa
adc
into
inc
push
bound
adc
fist
fcomi
(bad)
dec
jl
mov
test
push
cld
jmp
adc
popa
jmp
retf
sbb
mov
fimul
stos
sub
or
jbe
jns
not
push
add
jmp
inc
mov
loopne
sbb
test
mov
outs
inc
mov
xor
je
lods
imul
push
or
movs
jmp
sbb
test
mov
call
xor
dec
cmp
daa
lods
repz
fiadd
push
sub
and
in
not
sub
inc
jb
aaa
add
dec
test
push
mov
xchg
nop
inc
cmp
popf
loope
push
in
xor
inc
sub
xor
jp
mov
rol
fisttp
add
(bad)
fdiv
repnz
adc
dec
mov
mov
mov
mov
ror
jae
pop
push
jmp
push
pop
jmp
into
inc
das
rol
xchg
cli
stc
xchg
sbb
enter
add
push
cmp
or
ins
sbb
pop
and
cmps
xor
dec
test
sar
out
aad
cmp
les
test
push
mov
fs
fcomp
xchg
push
into
loop
sbb
stc
add
into
xchg
popa
jge
mov
sahf
adc
arpl
pop
(bad)
dec
pusha
call
js
xor
jae
popa
hlt
cmp
int
dec
xor
mov
xor
inc
shl
(bad)
push
dec
lds
jmp
sbb
aam
jmp
mov
sar
arpl
sar
adc
inc
cmps
jge
mov
std
(bad)
inc
sbb
pop
mov
mov
jnp
(bad)
push
in
mov
pmulhw
mov
mov
push
inc
sar
lock
inc
add
cmp
push
jp
push
ss
fisttp
in
aas
and
(bad)
retf
lock
pop
inc
xor
xor
popa
xor
rol
mov
jecxz
ror
or
test
(bad)
(bad)
(bad)
fwait
push
lds
in
dec
push
loop
pop
cli
jb
pop
loopne
stc
mov
inc
popa
shl
jnp
in
xchg
sar
dec
(bad)
imul
jl
jle
sbb
test
rol
sub
ins
sub
and
mov
adc
push
loope
clc
push
dec
out
psubsb
jbe
ret
add
pop
jg
aaa
(bad)
adc
dec
imul
in
fdivr
popf
push
add
jmp
jns
sub
ret
in
stos
push
arpl
cld
xchg
out
pop
cmp
lock
push
leave
inc
inc
dec
push
cmp
in
(bad)
imul
mov
fld
xlat
xlat
loope
jl
fstp
and
aas
pop
iret
aas
aam
mov
adc
push
imul
call
lock
xor
dec
enter
jl
push
cwde
dec
dec
(bad)
cmpps
or
(bad)
fistp
stos
cmp
xchg
or
call
or
cld
mov
addr16
pop
jnp
scas
jp
in
xor
repz
cmp
loopne
aam
mov
cwde
mov
xor
rcl
mov
je
mov
jle
repnz
mov
shl
jmp
or
sbb
js
cmp
in
mov
fisub
push
(bad)
cld
inc
lahf
xchg
adc
sbb
or
rcr
enter
call
aad
shl
mov
push
add
ret
sbb
jecxz
sbb
pop
iret
xor
lods
nop
inc
sbb
call
pop
inc
call
sub
push
mov
lahf
repnz
pusha
fdiv
repz
cmp
out
xor
lods
aad
push
aam
mov
sar
jne
pop
sbb
jle
mov
rcl
push
in
fcmovbe
out
cmc
push
loopne
aam
(bad)
sbb
rcl
sub
fnstenv
xor
pushf
sbb
(bad)
jb
inc
stos
inc
aaa
jbe
and
movs
sub
mov
pop
std
test
mov
cs
sub
mov
out
movs
pop
fcomip
add
aas
stos
mov
pushf
mov
lods
cmp
imul
xor
cmp
xchg
jno
popf
into
js
leave
pop
push
mov
adc
push
add
fcomip
ss
xchg
pop
dec
add
jge
mov
in
std
mov
inc
lods
mov
scas
xchg
dec
dec
mov
lods
imul
cwde
inc
aas
jne
out
push
add
xor
into
call
xchg
push
in
sub
xor
mov
inc
cli
mov
inc
fld
jne
sbb
add
jp
popa
int3
ss
out
mov
and
push
fs
or
dec
add
loope
push
cwde
sub
es
fcmovu
mov
gs
jp
push
aam
pop
inc
cld
repz
mov
rcl
(bad)
push
rcr
push
aam
jo
maskmovq
neg
not
lea
das
jo
mov
jns
leave
or
xchg
push
out
rcl
xchg
mov
xlat
add
and
in
pop
sbb
sar
adc
test
jecxz
mov
inc
ret
mov
neg
aaa
mov
jb
xchg
cwde
adc
dec
sbb
js
mov
cli
and
jmp
loope
cdq
jmp
push
push
pop
dec
sbb
mov
ins
mov
daa
call
jnp
inc
scas
sub
cmp
in
addr16
xchg
pop
or
push
cmps
outs
cmp
pop
mov
push
test
test
cmps
cmps
cld
inc
jns
loopne
pop
push
cmps
jo
dec
fbld
xchg
lods
lds
xchg
push
mov
mov
xchg
ret
jne
in
xlat
and
dec
mov
call
dec
mov
cld
hlt
sbb
int
out
dec
in
sub
loopne
jne
jnp
cmp
sbb
pop
xchg
in
cmp
daa
jb
stc
pushf
xor
sbb
popf
aaa
and
dec
and
dec
adc
arpl
mov
xchg
xor
pop
bnd
sub
inc
nop
jo
inc
add
cmps
ins
cdq
push
xchg
and
cdq
jne
(bad)
dec
pop
int
imul
push
fs
xor
pop
cmc
into
pop
adc
fst
pop
jo
inc
aam
add
imul
fsubr
idiv
sub
pushf
push
dec
out
fld
push
mov
sbb
lock
lods
lods
sbb
imul
cmp
push
mov
pop
mov
jg
popa
pop
out
mov
push
or
jns
pop
mov
ins
repz
add
retf
cmp
push
std
mov
hlt
push
call
(bad)
cmp
dec
into
lock
jge
(bad)
(bad)
jbe
(bad)
(bad)
retf
dec
test
in
imul
adc
mov
sub
adc
pop
push
cmc
je
add
test
xchg
int3
add
hlt
xchg
stos
inc
or
in
jns
out
or
aaa
jno
mov
push
push
push
and
add
call
rcl
cmp
(bad)
hlt
int3
sub
sub
xchg
mov
xor
push
aas
cmp
pop
scas
lods
addr16
jne
test
in
mov
rcl
sub
fstp
jmp
add
daa
jb
pushf
daa
push
into
jg
push
pop
pop
cmps
test
and
sbb
xchg
ret
shl
(bad)
mov
mov
icebp
les
out
sbb
mov
in
pop
or
mov
mov
addr16
pusha
cmp
jo
jmp
pop
cmc
xchg
pop
ret
and
xchg
int
fiadd
inc
mov
cmp
or
pop
pushf
popa
cmps
mov
aas
mov
or
push
pop
xor
pop
xor
outs
arpl
cmp
fsubr
jp
out
inc
mov
std
retf
dec
aad
ds
push
xor
or
repz
ret
pop
(bad)
int3
nop
push
and
jge
mov
push
xchg
pop
and
mov
loop
sub
jae
cli
sub
adc
lds
mov
mov
cld
xchg
mov
inc
sete
call
mov
sub
test
repz
(bad)
shr
bound
shr
mov
pusha
ja
add
lods
aam
dec
or
push
mov
adc
dec
jne
xlat
arpl
std
in
mov
iret
jo
push
mov
pop
xor
mul
pop
nop
xchg
pop
or
shr
int
dec
stc
or
sbb
mov
scas
frstor
ins
call
jge
cdq
fs
into
dec
push
mov
mov
cs
es
xchg
xor
call
cs
adc
and
jg
jmp
aam
sub
pusha
into
cmc
push
push
lahf
bndstx
xor
das
lods
sub
xor
and
test
xor
xor
sbb
imul
jmp
sub
scas
xchg
or
pop
leave
sbb
je
jns
test
xchg
mov
and
call
xchg
(bad)
sbb
xchg
xor
jl
push
cmp
sub
imul
dec
(bad)
mov
xchg
xchg
sar
or
push
xor
push
pop
sti
xchg
xchg
dec
push
icebp
xor
xchg
call
jl
not
jbe
dec
push
sub
pop
adc
gs
or
mov
mov
or
xchg
enter
push
test
(bad)
leave
xlat
pop
test
xchg
or
add
lds
sub
outs
(bad)
adc
jmp
push
mov
lahf
mov
test
add
jl
inc
rcr
cmp
adc
sub
jae
push
adc
cmp
push
xchg
mov
inc
imul
leave
shl
fs
sub
lods
outs
js
pop
mov
out
inc
fdiv
dec
dec
jno
shl
dec
pop
jmp
addr16
mov
sub
push
add
lds
xchg
push
int3
add
mov
shl
fimul
adc
mov
in
xchg
cmp
retf
ja
mov
pop
add
cmp
scas
ss
dec
cmps
lods
js
mov
push
jno
sub
jns
das
xor
and
pop
pop
add
repz
arpl
sub
test
outs
push
les
loop
mov
daa
pushf
int3
ins
sub
aaa
xchg
shl
movs
ss
xlat
mov
shl
out
jge
or
and
jp
adc
cmp
cdq
das
cmp
movs
cli
xchg
pusha
stos
das
out
rol
cwde
mov
ror
jb
sar
add
cmps
arpl
adc
ret
adc
sub
retf
ffree
dec
mov
inc
cld
push
and
mov
and
xor
xor
xor
(bad)
adc
or
jecxz
or
inc
outs
lods
mov
or
inc
cmp
ja
sub
test
imul
mov
and
popf
in
dec
js
adc
int3
or
mov
jmp
imul
call
jmp
pop
mov
(bad)
retf
bound
push
jecxz
movs
mov
sahf
cli
xchg
pop
sbb
repnz
push
sti
sub
inc
in
xor
jbe
repz
call
mov
test
and
xor
or
jmp
pop
cmp
sahf
mov
imul
mov
fadd
pop
or
ins
(bad)
fs
mov
aas
test
mov
inc
dec
out
pop
ror
push
bswap
cmp
or
xchg
in
mov
jl
mov
push
fsub
xor
or
data16
adc
repz
xchg
mov
sti
pop
sbb
std
in
push
jl
dec
mov
loope
xchg
dec
shl
es
jg
fwait
jp
push
arpl
out
enter
push
adc
fisub
push
or
sub
push
jp
push
(bad)
jno
in
mov
repnz
sbb
mov
inc
bound
inc
jae
out
in
mov
push
xor
test
lock
pushf
cmp
pop
ss
adc
loope
in
outs
lahf
add
dec
sbb
js
mov
inc
inc
daa
outs
xchg
lods
sub
push
xchg
in
jo
push
mov
jne
fimul
xchg
fprem1
xchg
add
mov
lock
in
(bad)
mov
pop
jl
mov
xchg
adc
dec
mov
sbb
adc
mov
mov
cmp
movs
adc
push
jb
aas
jmp
push
push
or
(bad)
loope
outs
aaa
lods
imul
nop
test
jg
addr16
pop
in
push
sub
cmc
or
fdivr
out
or
adc
or
push
jae
cmp
pop
mov
xor
add
lock
gs
out
sub
mov
ins
outs
push
dec
pusha
sbb
aad
lods
in
fwait
push
mov
sbb
ror
xchg
sub
pop
cmps
loop
smsw
add
jno
test
int3
retf
sbb
cli
add
fnstsw
pop
inc
mov
jae
xchg
push
inc
enter
mov
daa
das
int3
mov
out
cmp
mov
imul
(bad)
cmp
sub
mov
movs
mov
mov
(bad)
mov
sub
fidivr
sti
fwait
xchg
push
and
mov
xor
loop
retf
test
sbb
pop
inc
xor
sahf
dec
push
data16
sub
xor
sub
shl
xchg
outs
add
ficom
dec
jno
jno
push
dec
jbe
aaa
outs
nop
add
xor
and
sbb
fstp
mov
mov
popf
scas
jmp
gs
inc
inc
int
and
aaa
xor
inc
jnp
repz
or
and
and
xor
ss
call
xor
mov
sub
add
pushf
sub
retf
or
int3
xor
outs
test
cmp
sbb
aad
outs
inc
or
add
ins
call
cli
pushf
and
and
loope
inc
mov
push
push
xchg
sti
loope
mov
pop
out
push
dec
and
(bad)
fst
ror
add
mov
neg
adc
xchg
out
mov
es
dec
std
mov
jnp
cmp
repnz
fldcw
icebp
mov
daa
outs
lea
dec
lahf
sbb
and
push
in
inc
das
and
or
xor
push
jbe
push
popf
retf
adc
in
add
stc
dec
and
push
xor
or
movs
jl
movs
and
popa
mov
xor
push
mov
jbe
test
inc
in
push
mov
cmp
jge
test
sbb
sub
cdq
xor
hlt
xchg
pop
mov
ins
sti
or
bound
mov
sub
retf
push
das
popf
push
mov
sar
push
and
jb
leave
mov
retf
mov
mov
pop
lahf
and
sahf
adc
cmp
pop
or
xchg
pop
inc
pop
mov
sar
jbe
xchg
sbb
mul
mov
inc
cs
push
mov
ins
push
mov
cmp
in
push
push
xor
xor
adc
and
div
push
scas
leave
pop
push
xor
push
leave
or
mov
push
enter
jle
enter
into
sar
mov
push
sub
cmp
out
mov
arpl
popa
icebp
imul
pop
mov
cld
mov
das
les
mov
jns
mov
mov
in
mov
pop
sbb
cmps
pop
fidivr
les
aad
jnp
sub
int3
je
adc
movs
and
adc
cmp
adc
push
cmp
movs
jb
inc
xlat
sub
jg
cmp
mov
push
mul
inc
fnstcw
out
mov
das
in
fstp
jle
push
inc
popa
or
cmps
test
adc
out
scas
xor
jg
mov
mov
or
mov
leave
ror
dec
daa
inc
(bad)
jmp
pop
out
(bad)
cld
fnstenv
push
lea
xor
sar
js
cmp
aaa
fimul
and
pop
pusha
inc
lds
jl
mov
pop
fnsave
fs
cmp
movs
scas
test
lods
dec
dec
dec
out
pop
jae
outs
mov
inc
lods
test
sub
pop
xor
faddp
sub
mov
sbb
call
ss
jle
call
test
adc
iret
mov
aam
mov
add
push
int3
mov
icebp
popf
movnti
lock
adc
inc
dec
xor
push
inc
sbb
pop
add
and
add
inc
mov
jmp
sbb
pop
fldcw
retf
inc
mov
bound
icebp
inc
fcom
xor
hlt
dec
call
sbb
jp
nop
mov
xchg
lds
retf
mov
xchg
mov
cld
mov
xchg
push
jne
repz
adc
jnp
nop
jbe
xchg
push
ins
xor
jns
xor
aad
mov
jmp
aam
test
cmp
popf
in
ss
push
repz
mov
outs
xchg
mov
or
int3
mov
xor
and
pop
jmp
fs
add
call
fwait
or
int3
leave
les
loope
adc
mov
ret
pop
push
adc
ins
xchg
mov
push
dec
sar
loop
imul
add
fisttp
sub
sti
mov
mov
adc
xor
mov
nop
adc
or
outs
pop
movs
pop
cwde
xchg
pop
into
or
dec
int
outs
mov
pop
ror
mov
pop
xchg
cld
icebp
loop
dec
sbb
and
cli
inc
lock
push
cmp
mov
cmp
arpl
pop
kunpckwd
and
cmp
mov
pop
dec
mov
push
or
push
xlat
gs
xor
(bad)
jmp
cmp
dec
pop
out
cmp
lods
cmp
lahf
push
sbb
js
mov
movs
xor
movs
jmp
add
xchg
pop
das
pop
arpl
fcom
mov
push
xor
(bad)
jns
sub
jns
mov
push
mov
sbb
dec
adc
sub
fimul
aad
add
jecxz
jg
xchg
or
xchg
add
clc
fwait
mov
aad
cld
aaa
retf
cwde
arpl
push
mov
je
add
ja
jo
je
pushf
push
xchg
sub
mov
dec
inc
out
out
cmc
jmp
es
and
sub
pop
sbb
sub
fisttp
cli
scas
scas
imul
icebp
cmps
std
repz
push
movs
bound
mov
add
jno
inc
jmp
cmp
loop
pop
imul
sti
xor
xchg
mov
repnz
xchg
sub
sbb
pop
dec
push
and
or
lods
sub
jecxz
push
imul
xor
xor
add
sub
and
in
dec
fwait
out
pop
call
and
cs
out
push
jl
mov
imul
sbb
push
xchg
jo
cmp
inc
jae
inc
mov
bound
pop
jne
xor
sub
adc
icebp
push
mov
out
lods
rcr
fiadd
mov
pop
imul
mov
dec
pusha
ins
arpl
movs
sar
clc
(bad)
call
(bad)
xchg
mov
dec
call
repnz
cmps
mov
xchg
mov
mov
cwde
mov
rol
adc
sub
mov
or
cmp
adc
xor
lods
nop
loop
cdq
and
or
rcl
or
mov
jg
out
dec
dec
mov
mov
xor
mov
(bad)
push
adc
jp
or
jp
mov
jmp
sbb
ret
mov
popf
sub
loope
repz
dec
mov
addr16
fisttp
cs
push
cmps
sbb
(bad)
mov
fwait
mov
inc
jae
cs
sub
adc
and
dec
push
cwde
stos
shr
add
inc
neg
inc
xchg
mov
rcr
fs
dec
cmc
push
xor
adc
jmp
pop
or
adc
xor
mov
gs
push
cmp
lds
dec
pop
xchg
imul
mov
pop
cmp
jns
xor
push
sbb
dec
lods
fs
xor
gs
jne
out
mov
aaa
ins
jmp
ret
cmps
xor
icebp
aad
js
mov
retf
ss
call
das
int3
xchg
dec
popf
sahf
mov
jnp
in
fimul
out
mov
cmp
out
call
popa
out
leave
mov
adc
pop
mov
nop
pop
and
lahf
jmp
xor
test
xor
rcr
adc
sbb
add
mov
dec
adc
or
(bad)
sub
nop
test
jl
pop
cld
les
repnz
pop
inc
(bad)
ins
push
adc
or
xchg
mov
fxch
iret
jb
xor
sbb
xchg
fbld
mov
push
je
bound
hlt
ret
mul
push
jbe
jp
bound
lock
pop
xchg
add
cwde
sbb
mov
daa
rcr
push
inc
xor
lea
jmp
push
cmps
jns
xor
pop
add
movs
cmps
jmp
mov
lock
sbb
pop
pop
bound
inc
clc
inc
(bad)
(bad)
mov
fidiv
push
fisttp
or
xchg
retf
ret
nop
or
cmp
inc
or
retf
add
test
push
mov
mov
addr16
inc
mov
xchg
push
cdq
add
jne
lods
xchg
pop
je
out
icebp
ficom
pop
daa
dec
nop
std
leave
ret
push
int
jnp
stos
das
fstp
add
dec
adc
mov
shl
cmps
imul
mov
sbb
into
ins
outs
sbb
push
dec
fistp
sub
adc
hlt
out
or
cmp
mov
stc
in
(bad)
and
push
retf
ror
fidivr
lahf
test
add
fimul
xor
xor
sub
data16
inc
rcr
mov
xor
shr
aas
test
xchg
dec
pop
xor
lahf
mov
mov
aad
jle
or
cli
aad
push
cld
add
xor
push
xor
call
jb
out
stc
gs
or
outs
cmp
cmp
push
cmp
mov
push
sahf
iret
push
push
push
mov
jo
jne
lahf
ret
mov
pusha
call
into
loop
cmp
loop
xchg
lods
xchg
arpl
aaa
fwait
outs
lods
outs
retf
jno
mov
xchg
call
cmp
lahf
inc
and
shr
das
mov
rcr
sti
ins
add
jge
iret
push
in
cdq
dec
jp
fadd
outs
pop
ror
pop
mov
mov
mov
jl
xchg
adc
cmp
pop
in
xchg
stos
repz
jo
sbb
das
mov
ins
sbb
push
push
cmp
xchg
xchg
leave
adc
jl
xor
shl
mov
xchg
push
add
cdq
cmp
ss
xchg
dec
je
lods
push
pop
lods
enter
pop
int3
repz
jmp
jns
or
or
je
stc
mov
out
mov
cmc
mov
std
mov
mov
or
mov
ret
repnz
clc
mov
aad
outs
add
jb
dec
push
or
mov
dec
clc
jle
(bad)
stos
mov
cmps
in
cmp
or
das
aad
and
cdq
inc
inc
mov
cwde
mov
adc
inc
stc
inc
aam
mov
mov
test
inc
jno
les
cmp
movntps
sub
pop
dec
leave
fdiv
jo
mov
test
jnp
cdq
(bad)
xchg
pop
mov
rol
fistp
inc
mov
adc
rcl
neg
pop
loope
inc
mov
sar
test
fmul
fcmovb
xor
xchg
scas
lods
jb
jno
sub
mov
cmps
scas
mov
mov
retf
icebp
imul
mov
adc
sbb
push
std
sub
into
pusha
and
les
mov
pop
fsub
xchg
inc
(bad)
cmp
adc
sub
imul
mov
dec
push
xor
pushf
xor
imul
test
mov
daa
cmc
ffree
scas
adc
lea
pop
mov
ficomp
jle
ins
cmp
scas
cmp
imul
lods
push
mov
loope
and
fdiv
pop
add
aas
cmp
xor
outs
inc
jns
mov
ins
and
lock
int
push
outs
ja
jne
dec
jp
daa
mov
pop
stc
pop
rcl
push
and
out
repz
lahf
out
sar
out
dec
clc
mov
xor
ret
cmc
mov
cmp
mov
cmps
enter
leave
xchg
add
adc
gs
mov
and
lea
clc
cmp
xchg
pop
daa
pop
mov
stc
push
xor
jecxz
mov
jge
pop
inc
lahf
sub
sub
inc
jbe
inc
add
fwait
xchg
dec
jmp
push
mov
icebp
push
lahf
xchg
mov
pop
adc
sub
into
xchg
lahf
aas
dec
repnz
loope
js
movs
gs
aam
fadd
push
loop
cmp
sub
imul
rol
test
cdq
fnstenv
xor
cmps
sbb
push
mov
bound
cmps
dec
mov
pop
stc
jmp
dec
jp
mov
lods
and
mov
popa
or
clc
pusha
movs
inc
mov
out
jmp
test
test
sbb
mov
stos
adc
sbb
(bad)
repz
inc
repnz
sbb
pusha
xor
popf
shl
hlt
inc
shl
mov
sub
icebp
out
aas
pop
sbb
xor
out
mov
inc
(bad)
fcom
shr
pop
dec
ret
stos
cmp
shr
pop
push
cli
and
js
dec
in
push
ins
movs
push
inc
sbb
lock
and
enter
scas
inc
ins
xor
xor
xchg
mov
sbb
enter
(bad)
cdq
sbb
xchg
mov
mov
mov
cwde
adc
jle
shl
cmp
add
sbb
pop
or
ret
dec
pop
dec
loopne
add
cmps
out
aad
(bad)
es
add
cs
dec
in
fldcw
sub
jne
sbb
das
loope
sub
adc
mov
fs
cmc
dec
push
mov
adc
jl
(bad)
fsub
add
mov
jle
mov
aas
outs
mov
test
add
aaa
cmps
push
sub
cld
mov
xor
inc
dec
jmp
mov
mov
jbe
xlat
movs
cmps
add
ret
lods
dec
adc
jnp
int3
mov
sbb
arpl
xchg
push
mov
bound
mov
push
pop
push
add
pop
(bad)
cld
pusha
xor
xor
xchg
xor
sbb
sbb
out
idiv
sbb
jns
mov
lods
xchg
mov
jae
or
scas
xor
icebp
ss
cmp
stc
inc
jecxz
popf
cwde
jae
jae
adc
push
mov
push
(bad)
ins
jg
and
ins
or
mov
sub
popa
nop
inc
mov
push
mov
je
jp
push
jae
xor
frstor
mov
outs
fsubr
iret
test
xor
xchg
ss
jne
imul
or
mov
adc
xchg
jnp
test
pushf
popf
push
nop
ss
and
outs
aaa
sbb
and
mov
pop
int
jns
inc
movs
add
(bad)
adc
pusha
sbb
movs
xchg
(bad)
(bad)
lock
xor
ja
inc
push
into
and
mov
add
jae
push
push
inc
popa
mov
jns
or
or
mov
jns
mov
jp
mov
cmps
adc
inc
add
sti
mov
loopne
outs
test
out
sahf
add
es
retf
mov
scas
inc
rcl
push
(bad)
mov
cmp
(bad)
push
int
push
and
leave
out
or
dec
movs
xor
imul
enter
fwait
push
fmul
mov
loopne
fcmovbe
retf
adc
data16
sub
dec
dec
adc
mov
lahf
inc
push
sub
dec
call
mov
pop
ja
sar
retf
dec
add
test
jle
jmp
xchg
inc
clc
jne
rcr
retf
enter
inc
jno
test
cdq
mov
mov
out
mov
mov
adc
pusha
mov
addr16
je
jno
(bad)
int
xchg
call
fistp
xchg
xchg
push
push
mov
xchg
(bad)
cmp
das
sbb
dec
push
pop
out
int
out
fsubr
jl
arpl
xchg
out
jmp
pop
adc
sbb
les
lods
test
scas
xchg
push
add
mov
shl
les
test
enter
push
cmp
or
or
adc
je
jecxz
js
dec
push
or
ins
inc
clc
dec
dec
ret
ins
mov
pushf
cwde
add
popa
out
shl
in
mov
sbb
mov
mov
imul
sbb
cmp
(bad)
test
ret
and
test
mov
mov
fwait
or
sbb
dec
inc
icebp
push
mov
test
(bad)
sbb
mov
cli
in
out
or
mov
shl
fst
mov
sub
adc
jnp
sub
in
dec
inc
add
and
test
movs
les
mov
sahf
jne
and
push
mov
sub
shl
lahf
mov
mov
scas
test
dec
fs
jmp
inc
cs
rcr
sbb
ficom
dec
add
dec
jge
xor
nop
icebp
(bad)
fdiv
add
stc
pop
xchg
pop
cmp
jp
mulps
cmp
jp
and
jo
inc
arpl
fisttp
retf
push
jne
stc
je
lock
ins
push
ins
cld
mov
mov
jno
dec
jnp
inc
(bad)
pop
fist
ror
xor
adc
or
or
repnz
cmp
push
leave
fimul
into
add
sbb
xor
neg
push
jmp
mov
sub
jmp
fsub
xchg
iret
add
xchg
push
pop
outs
xchg
sbb
scas
jmp
fwait
add
mov
push
pop
mov
(bad)
adc
xor
cmps
jb
ror
xor
in
jmp
dec
psubd
(bad)
call
popf
es
inc
ins
mov
popa
aad
loopne
inc
or
(bad)
es
rcl
mov
bnd
jo
adc
pop
fwait
add
and
stos
xchg
cwde
sub
and
jle
stos
xchg
jl
sbb
and
or
xor
out
mov
hlt
mov
popf
cmp
cld
or
test
lds
pop
pop
mov
inc
pop
popa
inc
lock
cs
pop
and
jne
or
popf
enter
jmp
cmc
xchg
jnp
and
jbe
xor
data16
shl
scas
pop
add
add
iret
xor
aad
jecxz
pop
and
cmp
fcom
fwait
dec
cmp
scas
and
stc
dec
scas
popf
test
adc
cmp
mov
addr16
mov
lock
je
cmp
sahf
xor
mov
fcom
adc
add
arpl
xchg
pop
push
or
sub
sbb
movs
mov
and
inc
ins
dec
out
jle
cmp
fs
neg
fld
and
xor
add
cli
xor
repz
cdq
lods
ret
mov
mov
push
rcl
mov
lahf
adc
xor
lods
fwait
xor
movs
sbb
mov
mov
xor
pop
or
add
arpl
out
dec
lods
int3
(bad)
int3
bnd
mov
xor
fwait
loop
or
push
inc
sub
push
adc
xchg
add
sar
and
or
lahf
xchg
add
(bad)
sub
or
loopne
call
dec
push
call
sub
inc
and
xor
cwde
xor
add
das
inc
mov
add
imul
xchg
test
xor
adc
jb
add
in
jbe
xchg
add
dec
dec
sti
rol
js
jnp
mov
sahf
repz
leavew
sbb
push
mov
lahf
or
mov
std
repz
xchg
ss
pop
cdq
cmp
sub
sub
mov
sbb
sub
dec
into
test
mov
(bad)
imul
pop
out
popa
sub
jno
adc
(bad)
xor
mov
iret
(bad)
into
test
cmp
call
lods
add
(bad)
cli
sti
mov
mov
mov
jmp
(bad)
mov
sub
and
(bad)
ret
xlat
scas
gs
lock
xor
push
push
ins
ja
cmp
and
imul
or
loope
mov
xchg
into
sbb
xchg
int3
pop
mov
cmps
mov
lock
nop
into
xchg
push
psubusw
es
sbb
pop
pop
jne
pop
out
sub
push
imul
dec
cmp
push
add
sar
and
push
mov
jle
cmp
fstp
or
test
outs
call
pop
add
push
int
add
adc
lods
(bad)
sub
push
cmp
js
xor
jg
fcomp
cs
jmp
mov
jmp
sub
rcl
retf
push
out
aam
sbb
mov
mov
or
or
or
inc
fmulp
cmp
push
push
mov
ret
pop
inc
loopne
ret
mov
aad
push
fcomp
xchg
(bad)
fisttp
fwait
mov
test
mov
adc
shl
add
xchg
mov
pop
sbb
xor
cs
punpcklbw
inc
mov
je
xor
dec
dec
xchg
mov
ror
xor
or
out
sub
not
or
push
fistp
or
mov
or
and
shl
mov
xchg
push
fcomp
jecxz
jns
push
sub
push
mov
adc
or
(bad)
xlat
sbb
das
repnz
fbld
pop
jg
jmp
mov
xchg
cmp
stos
neg
into
es
dec
dec
jo
scas
daa
bound
je
mov
gs
mov
pusha
je
dec
ret
push
into
std
and
dec
and
enter
pop
xchg
jae
sbb
ret
jmp
test
mov
dec
mov
mov
pushf
test
es
inc
(bad)
jo
sahf
cmps
cmp
and
(bad)
mov
fstp
shl
mov
pop
stc
mov
jns
js
add
fld
xchg
sub
push
(bad)
fwait
cmp
add
fsub
rcl
mul
js
xchg
lods
push
cli
jo
or
shr
dec
xchg
dec
std
inc
imul
into
in
pop
test
call
fnstcw
popa
rcl
cli
sbb
mov
fcomi
add
jmp
sub
cmps
cs
std
mov
mov
cmp
pop
and
test
xor
addr16
pop
dec
loop
out
inc
add
pushf
cmps
in
jg
add
hlt
shr
imul
cdq
cmp
cmp
add
xchg
mov
xor
xchg
mov
sub
pop
cwde
dec
push
adc
push
out
xor
mov
ret
jle
lods
imul
ror
int3
clc
test
test
ins
mov
inc
pop
push
mov
mov
lods
sub
or
jge
rcr
imul
mov
fwait
dec
ins
xor
daa
xor
into
dec
cvtdq2ps
ss
and
and
clc
jb
jmp
pop
mov
pop
add
in
cmp
lds
in
fild
xchg
jp
mov
arpl
imul
pushf
test
xchg
and
call
mov
jo
mov
add
xchg
sbb
(bad)
jae
imul
xor
adc
cmps
lods
adc
mov
es
das
sbb
ins
das
mov
mov
shr
aam
mov
or
mov
jecxz
and
stos
xchg
stc
popf
popf
lods
xchg
sbb
push
sub
(bad)
ins
lock
test
sub
cmp
stos
into
fsubr
(bad)
xor
jge
push
cs
jns
adc
cmps
arpl
mov
pop
(bad)
stc
aad
push
mov
daa
xchg
mov
stos
stos
or
lahf
jns
inc
or
mov
jo
mov
mov
iret
icebp
mov
mov
sub
cmp
aam
ret
sbb
int3
aad
adc
xchg
mov
xchg
lea
mov
mov
xor
and
ja
mov
adc
ins
pop
and
cs
inc
jmp
cli
fsub
enter
and
cmp
xchg
xor
call
mov
ror
ja
xlat
inc
dec
adc
pop
test
cmc
hlt
iret
iret
(bad)
jg
and
push
stos
shl
push
mov
call
pop
mov
dec
sub
jmp
sbb
sbb
scas
div
test
mov
bound
mov
mov
sahf
stos
gs
add
cmp
outs
sar
dec
cmps
les
mov
xchg
stos
inc
rcl
push
nop
nop
xor
leave
getsec
clc
jl
or
cli
loopne
outs
psubusw
inc
sbb
in
mov
xor
loopne
mov
adc
xor
jo
scas
shr
adc
inc
push
aam
shr
xchg
jo
out
rol
cwde
jne
js
pop
xchg
fs
fadd
(bad)
xor
loop
pop
cs
mov
push
(bad)
fcmovbe
push
aas
jbe
pop
ror
add
das
mov
lods
gs
pop
shl
outs
jnp
jno
dec
jne
push
iret
aam
sbb
rcl
dec
stos
ror
call
jno
je
push
xchg
ja
add
jbe
pop
je
add
mov
jae
sar
outs
xchg
xor
ret
(bad)
movs
add
sub
popa
xorps
aad
imul
aad
ds
push
push
pop
dec
cli
dec
adc
scas
jl
sbb
out
push
mov
iret
sbb
mov
fs
int
jmp
daa
fdiv
out
adc
adc
lods
inc
mov
jl
push
and
cs
retf
mov
xor
and
add
sub
(bad)
imul
in
adc
movs
ret
pusha
xor
movs
ja
sub
mov
loop
repnz
mov
mov
je
cmp
mov
dec
and
(bad)
aad
shl
adc
enter
mov
gs
repz
out
cmp
scas
fnstenv
push
sub
lea
out
pop
add
ins
ror
sbb
hlt
inc
in
dec
mov
jl
xchg
pushf
or
adc
mul
cmp
mov
jmp
aam
addr16
pop
xchg
out
xchg
dec
pop
or
xchg
jns
lds
jl
sub
call
ja
out
enter
retf
sbb
scas
or
sahf
scas
ret
sbb
inc
xor
inc
addr16
stc
call
inc
mov
mov
lods
lock
xchg
mov
pop
mov
mov
or
mov
and
pop
inc
retf
sbb
jno
mov
push
aam
jo
add
ds
dec
dec
pop
enter
dec
jp
ds
outs
test
(bad)
or
push
cmp
and
adc
inc
scas
in
dec
push
imul
pop
arpl
fisttp
push
xchg
or
ud0
ds
sub
mov
iret
dec
jae
or
cmp
iret
sbb
pop
pusha
and
dec
pop
mov
arpl
jmp
ins
sbb
mov
push
xchg
addr16
data16
(bad)
fwait
or
and
adc
aad
inc
int3
aaa
mov
lea
pusha
ret
mov
cmp
(bad)
push
xchg
jns
sbb
dec
data16
repnz
out
mov
shr
cmps
int3
fdivr
shl
mov
and
repz
aam
push
dec
add
sahf
in
push
leave
les
add
shl
or
sbb
and
sti
adc
dec
repz
sub
adc
jbe
popa
stos
mov
lahf
sahf
pusha
mov
stc
cmp
push
in
push
push
pop
or
mov
ret
fidivr
xor
adc
je
fld
stos
mov
bts
inc
popf
mov
mov
outs
mov
and
push
jno
add
cdq
push
jbe
add
out
sbb
stos
push
ds
pop
lds
push
and
comiss
xor
call
ins
mov
xor
adc
out
or
pop
add
fs
movs
arpl
jmp
wbinvd
scas
xchg
mov
sbb
mov
cs
mov
adc
(bad)
daa
sub
jno
add
out
outs
add
sbb
mov
xchg
daa
arpl
jb
jle
fcom
dec
jmp
int3
std
(bad)
in
pop
xor
in
jecxz
mov
cmp
inc
jbe
adc
mov
fbstp
xor
aas
pop
mov
jp
sub
movs
nop
addr16
mov
jns
sub
xchg
push
jecxz
jns
push
push
mov
add
add
mov
lea
jns
xchg
or
repz
sbb
mov
mov
push
into
mov
add
fstp
ror
cs
popa
addr16
or
fimul
adc
retf
push
dec
pop
and
test
jnp
in
pop
aas
pop
lea
int
push
scas
out
fucomi
adc
imul
add
div
ret
inc
pop
aad
xor
pop
jo
loopne
test
jmp
fxch
mov
mov
adc
adc
sbb
fadd
pop
mov
les
xor
ud1
dec
cmps
dec
push
nop
cmc
mov
and
push
sbb
push
mov
inc
mov
add
add
push
cmps
(bad)
inc
sub
and
cmp
fcomp
loopne
mov
out
dec
loope
mov
jecxz
add
dec
xor
fidiv
jg
pushf
push
push
mov
fcom
sbb
jg
jbe
outs
fdiv
aad
cmp
adc
punpckhwd
xchg
xchg
mov
addr16
pop
into
mov
daa
mov
lock
dec
sar
out
test
test
jne
mov
or
js
ins
call
mov
dec
pop
inc
aas
jmp
or
jnp
mov
das
sbb
popa
push
int3
data16
dec
mov
fbstp
sbb
jbe
add
mov
or
jle
mov
not
stc
dec
retf
(bad)
(bad)
(bad)
or
stos
mov
jmp
test
and
mov
stc
aam
add
mov
hlt
(bad)
jmp
rol
adc
pop
adc
call
inc
sub
inc
iret
sub
rcr
push
inc
ror
push
addr16
adc
adc
nop
push
sub
sub
push
fisub
scas
pop
shr
xlat
jae
dec
push
mov
push
push
or
add
mov
clc
sti
push
lahf
pop
arpl
mov
popa
or
imul
shl
arpl
push
pop
jecxz
add
cwde
das
aaa
sub
retf
inc
mov
cdq
push
cmps
imul
mov
leave
(bad)
or
out
mov
add
sti
iret
push
inc
push
gs
dec
xchg
pop
xchg
jno
adc
cmps
cmp
popf
clc
dec
inc
popa
ss
push
les
fbld
mov
push
xchg
mov
and
pop
stc
pusha
out
cmps
jg
jle
data16
fs
sbb
inc
icebp
cmp
xor
aas
or
pop
jle
jae
idiv
fcomp
nop
and
xchg
repnz
or
cld
dec
and
sbb
fs
lods
cmp
inc
and
mov
outs
ror
jp
add
xchg
fstp
sbb
xchg
mov
jno
add
nop
cld
pop
dec
xor
inc
dec
pusha
popa
adc
push
je
jge
enter
into
xlat
mov
sbb
repnz
sub
neg
xor
pop
cmc
pop
sbb
xchg
into
mov
cmp
inc
cmps
cmp
repz
jle
adc
pop
mov
lods
(bad)
or
sbb
cmp
ret
push
rcr
mov
fimul
cld
xlat
fucomi
(bad)
ins
add
data16
(bad)
enter
inc
dec
call
or
(bad)
out
mov
cmp
sbb
stos
movs
out
xchg
stos
test
jg
inc
pop
pop
out
js
jb
mov
push
mov
bound
xchg
adc
push
sub
shl
cmp
pop
arpl
xchg
add
mov
test
mov
jo
stos
inc
dec
adc
jns
xchg
push
rcr
jo
das
mov
pop
jecxz
arpl
fidivr
pop
push
pop
(bad)
ss
mov
xor
mov
push
mov
iret
test
xchg
loop
dec
mov
cs
push
sti
int
and
sbb
push
mov
jp
jo
add
jne
loope
outs
das
lahf
call
cmp
xchg
(bad)
rcl
aaa
mov
outs
add
in
mov
popa
pop
(bad)
mov
pop
cmp
cwde
leave
addr16
inc
das
add
mov
cmc
jmp
push
ds
cmp
movs
cld
cld
dec
cmp
movs
ins
mov
sar
jl
inc
mov
and
jmp
xor
adc
fcomp
adc
icebp
inc
fidiv
(bad)
lods
imul
imul
xchg
pop
and
(bad)
dec
pusha
(bad)
loopne
mov
jbe
sbb
fstp
bound
adc
rol
and
adc
outs
gs
mov
rcl
jae
es
outs
in
push
ror
fcmovbe
add
jns
or
add
rol
ret
popa
or
pop
js
cdq
jns
imul
ss
test
mov
into
add
leave
pop
lock
stos
outs
js
cmps
int
adc
mov
push
sahf
add
mov
mov
retf
shr
xchg
or
imul
lea
mov
jne
sbb
lahf
shl
xchg
xor
sub
mov
and
frstor
stos
sub
jg
adc
dec
lods
sahf
(bad)
std
lock
push
push
inc
mov
scas
push
sub
aaa
enter
or
mov
jle
push
add
xchg
sub
(bad)
sahf
call
push
mov
inc
test
and
test
leave
and
scas
fst
sar
xchg
xchg
ins
ss
mov
mov
test
outs
stos
sub
in
je
push
ret
dec
dec
push
dec
mov
pop
je
out
inc
mov
pop
adc
inc
or
xchg
loop
pop
cmp
arpl
retf
pop
pop
jnp
or
and
xor
out
je
cmp
and
iret
test
mov
rol
and
and
pop
(bad)
aas
push
in
sar
hlt
add
xor
pop
movs
and
sub
mov
lock
mov
clc
xchg
mov
call
push
not
cmps
pop
mov
inc
(bad)
mov
or
or
inc
movs
mov
dec
adc
mov
xchg
jp
inc
push
jmp
mov
std
mov
pop
jo
movs
inc
(bad)
stc
into
sbb
sbb
in
es
leave
retf
jo
xchg
sar
and
cs
mov
pop
pop
jmp
inc
add
dec
and
fadd
mov
xchg
jmp
(bad)
in
fcom
inc
fs
dec
xor
shl
cmp
mov
int3
sti
inc
xchg
xchg
ss
pop
adc
push
xchg
cmp
jmp
cmp
or
ja
push
int
sbb
loope
sbb
jle
les
clc
sub
popa
lahf
jbe
test
dec
and
mov
scas
outs
xchg
cmp
inc
and
std
jmp
pop
jnp
rcr
mov
dec
mov
cmc
jo
idiv
push
loope
push
mov
jnp
shr
popf
or
movs
adc
pop
loopne
push
pop
dec
jp
iret
pushf
movs
cmps
adc
adc
add
jns
add
pushf
outs
pop
pop
pop
sahf
pop
and
test
(bad)
aas
je
lea
and
and
dec
ja
aas
sbb
push
sti
repnz
rcl
xchg
sbb
ds
ins
or
xchg
lods
cmp
cmp
ja
sbb
xor
dec
retf
jae
inc
sbb
and
jl
pop
aad
sub
iret
stc
xchg
pop
jmp
jmp
(bad)
outs
or
jp
xor
add
pop
mov
xchg
cmc
add
inc
movs
adc
mov
or
out
aas
pop
mov
pop
cmp
adc
pushf
push
cmp
in
xchg
mov
jp
enter
and
xor
imul
and
dec
retf
xor
hlt
repz
(bad)
jmp
jle
rcl
clc
mov
jl
aad
ret
xchg
jno
pop
jmp
and
sbb
idiv
jg
mov
mov
sbb
or
sub
out
imul
sbb
xlat
out
into
mov
(bad)
jle
adc
dec
pop
mov
push
fwait
outs
cmc
cmps
pop
xor
push
call
mov
mov
sbb
shr
daa
inc
xchg
jno
or
jcxz
inc
push
dec
and
js
in
ret
adc
add
movs
add
es
mov
push
or
rcl
add
in
std
inc
mov
out
retf
ror
(bad)
(bad)
sbb
stos
xchg
pop
int3
mov
fist
mov
adc
and
or
lods
cwde
sub
lods
sbb
jbe
movs
mov
push
not
leave
mov
(bad)
fidiv
dec
pop
(bad)
daa
cmps
movs
xchg
js
jle
test
pop
dec
adc
dec
cdq
add
(bad)
ret
sbb
xchg
sub
jo
xlat
push
mov
add
cld
sbb
cmp
xchg
scas
les
loop
out
xchg
mov
int
outs
retf
xor
xlat
mov
loopne
jg
inc
jno
aad
(bad)
ficomp
loope
cmp
dec
cmps
cmp
int3
nop
ins
sub
mov
cmps
mov
imul
scas
mov
arpl
mov
ja
in
and
ins
xor
sahf
jecxz
mov
pushf
xchg
pop
(bad)
call
in
and
bound
faddp
retf
popf
jmp
or
ror
mov
mov
mov
cs
xchg
xchg
repnz
mov
(bad)
aad
in
(bad)
icebp
test
dec
lock
push
jg
icebp
dec
xor
rcl
jmp
push
(bad)
arpl
jno
jne
cmps
in
add
retf
scas
test
cmp
test
pop
ds
ins
inc
inc
aam
and
call
push
jl
xchg
add
repnz
pop
fld
mov
hlt
cmp
pop
mov
sbb
imul
neg
loop
xlat
jns
pushf
adc
xchg
popa
into
(bad)
push
adc
sbb
out
pop
leave
dec
push
dec
xor
fisubr
jns
jae
add
mov
cmp
loope
mov
data16
je
fwait
popf
push
jb
and
and
dec
cmp
mov
adc
js
and
jmp
inc
cli
add
and
nop
adc
push
inc
scas
(bad)
dec
js
lods
test
inc
jmp
cdq
inc
sub
cwde
cmp
(bad)
ins
fwait
cdq
and
mov
lock
nop
jno
sub
ficomp
pause
and
test
jne
pop
add
cmp
jns
jbe
bound
jp
pop
cmp
sbb
pop
inc
out
adc
rcl
data16
ror
test
pop
pusha
mov
ud2
dec
or
call
or
std
inc
cs
push
xchg
cmps
stos
cmp
mov
cmp
std
das
dec
lods
cld
fist
pop
into
ds
sub
jns
ins
inc
adc
pop
cmp
sbb
retf
push
cmp
fiadd
pop
add
push
(bad)
mov
dec
ret
lock
stc
cmps
xchg
shr
push
jns
dec
or
fidiv
rcl
(bad)
mov
call
fs
jae
jo
push
(bad)
ins
jns
loop
jo
push
out
mov
mov
scas
and
aaa
sar
dec
call
test
movs
mov
mov
call
stos
test
ret
mov
push
mov
push
xor
pop
add
dec
mov
sbb
and
retf
outs
daa
sub
xchg
arpl
dec
or
xchg
out
and
cmps
jp
mul
and
js
cdq
jo
pop
(bad)
cmp
inc
scas
xor
xor
neg
or
ret
xchg
push
inc
and
mov
call
ret
or
cmc
cmps
xor
cmps
add
jecxz
xor
in
mov
jbe
outs
arpl
mov
cmps
mov
ret
shl
(bad)
mov
mov
fwait
mov
outs
cli
cs
mov
jp
xchg
cmps
(bad)
xchg
pop
sub
into
cmp
xchg
test
call
jae
call
out
repz
repnz
dec
test
jbe
and
or
cmp
(bad)
push
sub
movs
xchg
es
jne
pop
sbb
push
dec
inc
int
aam
jnp
addr16
rol
pop
inc
(bad)
ud2
jns
adc
add
sti
add
jo
nop
pusha
(bad)
cmps
mov
lahf
mov
nop
(bad)
add
xor
out
outs
xchg
aaa
adc
mov
inc
cs
sub
cmp
popa
and
mov
(bad)
push
das
addr16
lods
pop
aad
dec
and
dec
add
add
cli
daa
mov
rcl
cmc
(bad)
lahf
dec
fcmovne
cmp
sbb
(bad)
outs
addr16
jne
sub
loopne
mov
out
ret
mov
call
out
jae
sub
pop
jns
mov
fdiv
push
push
ret
ja
test
sbb
jo
out
mov
das
cdq
xor
dec
adc
and
sbb
les
imul
leave
push
mov
in
in
fdiv
xor
lods
fs
fiadd
or
in
pop
pusha
(bad)
pop
inc
sbb
adc
add
cmp
ja
mov
mov
test
mov
call
ja
inc
push
cwde
iret
xchg
lods
aam
cmp
dec
es
pop
mov
std
mov
dec
std
ins
add
push
push
repnz
movs
retf
outs
mov
in
xor
inc
outs
add
mov
mov
call
out
es
jge
xchg
sub
dec
test
or
and
mov
inc
inc
and
pop
scas
pop
add
clc
jae
adc
mov
jne
movs
imul
cwde
jmp
dec
mov
push
adc
lock
fwait
xor
leave
test
jnp
cmps
mov
pop
test
(bad)
xchg
inc
fmul
push
mov
mov
sti
pop
repnz
lds
arpl
add
push
push
xor
cmp
jns
cmp
add
das
mov
mov
or
jns
in
aam
(bad)
mov
mov
lods
rcl
push
mov
jle
rcl
scas
mov
push
jmp
mov
dec
mov
mov
bnd
sub
cld
jo
data16
mov
stos
xor
dec
or
jg
sbb
dec
sub
daa
movs
jo
inc
aaa
hlt
add
lahf
jne
and
stc
mov
scas
jmp
jecxz
jne
cmovge
retf
dec
lds
xchg
popf
push
adc
xor
cmps
ficomp
pop
pusha
fs
mov
xchg
sbb
mov
(bad)
cwde
ficomp
dec
adc
pushw
push
add
outs
add
test
xor
cmp
dec
mov
and
xchg
fild
xchg
push
pop
xchg
bound
push
icebp
mov
pop
push
loope
(bad)
arpl
pop
loope
mov
jno
int
lods
or
inc
test
into
push
retf
xor
daa
ja
sub
test
push
retf
mov
sub
xchg
call
enter
shr
fstp
inc
mov
and
sbb
(bad)
xchg
sti
jns
inc
cli
js
fs
mov
mov
cmp
inc
mov
add
das
jns
aad
dec
nop
xchg
in
and
jns
and
mov
test
sbb
loope
cwde
jae
sbb
cli
jle
sub
mov
xchg
shld
fnstsw
ds
xor
jns
jecxz
int3
xchg
sbb
or
adc
rol
jno
fld
ins
mov
das
push
xlat
push
or
and
mov
or
mov
adc
and
xlat
pop
mov
dec
adc
pop
rol
ret
(bad)
in
sub
dec
aad
jmp
in
mov
fdiv
pop
xchg
push
loope
add
daa
sti
mov
das
jg
xor
aad
fnsave
test
xor
dec
push
sbb
cmp
fisubr
sbb
add
test
fstp
push
icebp
mov
gs
lock
repz
jnp
sbb
sbb
rol
push
rcr
mov
or
pop
shl
xor
or
fcomp
inc
push
cmp
jp
and
test
xor
enter
pusha
dec
not
jecxz
add
pop
cmp
lock
ds
dec
jp
call
stc
ficom
jl
sbb
popf
cmp
sar
int
cli
pushf
add
push
push
lods
mov
out
or
rcl
pop
arpl
xchg
fs
adc
dec
stos
(bad)
mov
cmp
pop
or
ret
leave
jmp
imul
push
and
mov
arpl
leave
lods
cmp
(bad)
(bad)
mov
std
in
enter
jecxz
and
xchg
or
jno
test
push
lahf
test
sub
adc
pop
fnstcw
sbb
stc
loope
daa
in
sbb
cmp
and
mov
adc
div
stc
jns
jne
jae
jns
not
mov
cmps
xchg
add
scas
das
dec
cmp
sti
loop
cmp
lods
xor
push
sbb
inc
ret
test
dec
mov
ds
iret
test
repnz
cmove
pusha
jno
rcl
fstp
jecxz
jno
call
ins
outs
pusha
fbld
js
aas
push
cmp
or
repz
ret
or
les
mov
add
mov
shl
fistp
add
aam
inc
ror
aad
gs
mov
inc
sbb
xchg
mul
repnz
movs
sub
int
add
test
mov
cmp
mov
mov
or
adc
scas
inc
sub
ja
xor
dec
jle
mov
push
xchg
and
push
cmp
pushf
mov
icebp
cmps
push
pop
mov
xchg
movs
push
jecxz
int3
jae
jbe
pop
in
int
pop
lods
iret
pxor
mov
or
(bad)
icebp
pop
nop
inc
xchg
mov
push
mov
fisttp
adc
stc
daa
in
mov
(bad)
test
push
dec
dec
pushf
jo
loopne
xchg
and
sahf
cwde
daa
jb
adc
xor
call
mov
adc
mov
mov
cpuid
cdq
fnstsw
jae
sbb
in
repz
sub
mov
xchg
cmps
in
scas
loope
sub
sbb
inc
data16
rol
not
pop
ins
or
or
and
and
adc
movs
and
(bad)
push
call
je
dec
inc
fwait
xor
fldcw
jo
xchg
aad
mov
cld
mov
sbb
mov
std
xor
stos
inc
cwde
mov
dec
cmps
jns
mov
aas
mov
call
mov
test
fadd
inc
jmp
or
mov
or
xchg
or
mov
xchg
rol
and
(bad)
jae
push
int3
push
mov
cmc
and
inc
dec
add
outs
mov
ret
jmp
lock
push
inc
outs
cmp
mov
sahf
shl
or
ja
les
out
add
push
xchg
push
dec
push
dec
pop
cmp
xor
jle
cmp
jmp
out
push
jge
pusha
test
cld
push
imul
loope
sti
jb
iret
sti
mov
cmp
adc
mov
int
sbb
xchg
ja
cmps
cdq
jecxz
jecxz
fsub
dec
mov
mov
sbb
lock
and
loop
mov
pop
data16
fiadd
mov
sahf
adc
shl
ja
jo
pop
push
sbb
xchg
mov
inc
mov
dec
stos
data16
mov
mov
dec
ja
pop
or
in
dec
aam
mov
aas
push
add
mov
jecxz
or
test
sbb
loope
xchg
cwde
inc
cmp
push
add
jle
test
mov
jge
sahf
xchg
cmps
sub
xchg
add
mov
jle
sub
rsm
cwde
mov
push
or
(bad)
(bad)
jp
retf
into
rol
or
xor
mov
imul
lea
leave
cmp
xchg
fisubr
call
xor
imul
push
rcl
movs
test
fwait
stc
shl
dec
sub
test
pushf
pop
jmp
push
pop
mov
scas
fnsave
cmps
dec
imul
inc
inc
sub
push
cdq
dec
outs
lea
inc
stos
mov
lods
mov
in
inc
jne
lahf
add
lds
and
mov
imul
dec
sub
xchg
jmp
push
pop
or
pop
xchg
and
js
pop
mov
xor
sub
stos
adc
or
pop
push
imul
xchg
mov
int
push
mov
jmp
sub
jbe
adc
xchg
out
inc
bound
mov
es
mov
cli
std
shl
jg
push
sub
push
jns
mov
out
lds
das
test
push
scas
mov
rcl
mov
xor
mov
mov
aaa
adc
pop
scas
mov
in
cmps
ret
cwde
jns
test
data16
int3
(bad)
loop
jge
xor
inc
xchg
xchg
mov
aas
xchg
es
and
inc
outs
xor
cmp
push
aaa
inc
lods
loopne
enter
jae
jl
retf
mov
pop
xchg
stos
sub
cmp
iret
push
stc
clc
scas
pop
scas
cmp
iret
sub
xchg
ins
and
ins
sti
jmp
push
adc
push
addr16
bound
jb
or
fistp
jle
push
fcmovnbe
(bad)
mov
inc
push
retf
lds
jge
dec
xchg
test
les
fbld
xor
mov
out
push
shl
ss
add
xchg
push
push
shr
jns
aam
sub
push
or
stos
cwde
mov
dec
pop
or
out
in
adc
adc
mov
repnz
test
push
xchg
out
out
jbe
test
fs
icebp
repz
cmp
cmps
out
sub
sbb
inc
sub
shl
or
sub
dec
(bad)
call
les
push
mov
adc
mov
pusha
jecxz
(bad)
cmc
and
dec
and
xchg
shl
dec
pop
inc
push
mov
cmp
jo
pminsw
std
push
pop
in
mov
pop
out
loopne
sar
sbb
out
daa
lea
jno
mov
cli
xchg
ret
sti
ins
lds
gs
pop
clc
out
pusha
stos
arpl
ja
scas
jno
in
xor
push
xchg
fist
cmps
fcomp
outs
imul
jae
push
mov
jae
cmp
movs
sbb
aad
mov
sub
add
pop
fsub
fsubr
fwait
into
mov
add
sti
mul
jmp
mov
xchg
enter
fisub
movs
mov
ins
fcmovnbe
jns
sbb
in
ret
mov
jne
loop
mov
scas
daa
lods
xchg
lea
sbb
jns
adc
fs
mov
add
fst
jmp
inc
cwde
mov
jnp
fstp
mov
scas
inc
stos
jp
mov
mov
call
mov
lds
sub
std
cmp
pop
mov
inc
rcl
jl
fwait
test
shr
out
mov
xchg
pop
loopne
xchg
dec
or
push
xchg
aaa
push
ret
inc
clc
(bad)
cdq
xor
out
adc
aas
push
dec
and
fwait
in
and
jecxz
adc
xchg
inc
pop
mov
(bad)
sub
imul
lock
neg
outs
outs
movs
(bad)
xchg
inc
jge
jne
mov
(bad)
jle
mov
add
call
push
jns
fldcw
sbb
pushf
movs
add
ret
sahf
fldcw
jbe
push
outs
xor
(bad)
inc
jae
sub
push
xor
inc
mov
dec
popf
xchg
out
div
add
repz
test
punpckhwd
cli
test
mov
or
and
inc
pop
and
mov
xchg
xchg
ins
mov
adc
rol
sbb
pop
bound
aaa
dec
push
adc
fild
ins
div
and
jmp
push
fsubr
out
mov
xchg
mov
pop
and
cmp
test
push
stc
mov
pop
repnz
mov
sar
out
loope
xchg
bound
adc
retf
popf
inc
out
push
push
xor
test
retf
jl
icebp
xchg
and
test
fwait
xchg
rol
xchg
ja
fistp
jecxz
and
out
and
mov
ins
aad
into
test
stc
add
pusha
and
out
adc
xchg
ja
push
jnp
sub
push
mov
or
sub
mov
rol
and
leave
and
call
popa
cmps
xor
and
pop
out
lods
bound
push
mov
(bad)
xor
pop
cmp
jno
xchg
movs
fwait
loop
jl
mov
pop
xor
frndint
mov
icebp
xlat
fs
test
sub
jmp
(bad)
(bad)
ror
and
lea
rcl
es
adc
mov
sub
push
adc
xchg
cs
js
jbe
adc
sbb
mov
js
movs
xlat
inc
inc
inc
push
xlat
mov
pushf
mov
jnp
adc
scas
lea
call
inc
je
xchg
jae
ret
cmp
jnp
call
mov
mov
jg
jge
and
mov
inc
xchg
xor
pop
jp
mov
fdivr
jnp
data16
in
mov
push
aam
(bad)
xor
sbb
inc
mov
add
cdq
jge
into
fsubrp
and
dec
mov
loope
daa
inc
sbb
inc
addr16
lods
enter
xor
scas
punpckhwd
sub
(bad)
popa
leave
retf
push
js
addr16
movs
inc
arpl
mov
push
das
jge
sub
inc
repz
xchg
jg
jge
mov
out
pop
lock
dec
and
mov
sti
sub
jg
xchg
nop
repnz
jo
int3
aaa
push
cwde
fnstenv
ret
dec
frstor
shl
mov
ds
inc
imul
fnstcw
lea
and
ret
xchg
ds
cmp
jge
dec
int3
jmp
jne
ds
mov
xor
jecxz
mov
popa
pop
clc
ror
inc
cs
mov
pop
stc
shr
jne
add
or
jl
sbb
sti
jnp
addr16
push
retf
inc
jae
adc
test
mov
and
mov
mov
(bad)
xor
jle
ins
movs
fisubr
mov
mov
sbb
sti
nop
add
cmp
mov
int3
mov
retf
push
push
cdq
add
xlat
fucomip
stc
jp
and
data16
sub
fist
inc
sub
mov
dec
sbb
(bad)
jmp
mov
in
xchg
int3
rcl
pop
mov
ss
(bad)
aas
(bad)
cmp
xchg
push
jb
fild
cmp
and
iret
xor
or
jno
fmul
cmp
dec
inc
push
jne
and
jle
fsubr
ins
fnstenv
pop
loope
lods
outs
inc
shr
call
jmp
mov
cmps
lea
scas
sbb
push
test
inc
mov
and
add
fidivr
scas
shl
sbb
adc
pop
or
clc
xor
mov
retf
retf
mov
mov
mov
or
mov
xlat
out
cmps
and
lahf
and
(bad)
neg
cmp
dec
popf
adc
cmp
push
mov
popa
xchg
xor
sahf
mov
xchg
rcl
mov
xor
outs
sar
push
mov
mov
xor
mov
les
cld
add
inc
(bad)
(bad)
lea
inc
in
jmp
mov
push
mov
aaa
js
fucom
jl
xor
imul
sub
jb
fcom
and
ficomp
repnz
js
movs
hlt
inc
in
xor
or
aam
push
js
push
inc
addr16
dec
mov
or
mov
sub
in
push
mov
outs
sub
repnz
movs
cli
enter
hlt
pop
ss
lea
lods
outs
mov
imul
cmp
mov
sbb
jle
add
jg
xchg
(bad)
(bad)
mov
add
pop
fs
jns
aaa
cmps
push
sub
and
sub
pop
pop
jp
push
arpl
xor
shl
mov
mov
and
push
repnz
mov
fstp
pop
mov
fstp
jmp
loopne
sti
mov
pop
mov
mov
pop
xor
aad
lds
fistp
daa
dec
retf
sar
(bad)
(bad)
(bad)
push
fbstp
fistp
mov
movs
jp
(bad)
(bad)
mov
cmp
retf
out
(bad)
popa
sbb
add
pop
and
mov
call
mov
jnp
loop
cmp
rcr
mov
add
mov
sub
test
clc
retf
call
adc
daa
sbb
std
mov
test
add
test
fdiv
out
test
mov
ins
aam
push
mov
add
fnstenv
enter
xchg
cmp
int3
push
stos
mov
(bad)
movs
retf
cmp
add
adc
popf
dec
mov
icebp
mov
pop
imul
add
mov
sbb
or
iret
or
and
inc
fist
jg
cs
sub
and
int
stos
repnz
jge
add
mov
test
xor
cmp
jmp
xor
dec
cs
xor
ficomp
je
push
adc
mov
cmp
add
jmp
and
daa
push
and
mov
xor
loope
mov
outs
push
jecxz
shr
adc
pop
loop
out
retf
test
dec
xor
vpaddsb
jmp
in
xor
cmp
mov
adc
test
test
dec
enter
mov
mov
aad
cmp
(bad)
sar
std
(bad)
push
xchg
cmc
mov
pop
arpl
xor
jmp
inc
cmp
jecxz
jmp
adc
mov
mov
mov
loop
fbstp
xchg
aad
imul
mov
cmps
mov
jl
cmps
sti
mov
sub
mov
add
(bad)
mov
pop
addr16
xor
mov
xchg
cld
or
and
add
cwde
fmul
inc
scas
pop
test
inc
into
xor
inc
jb
mov
cld
loop
into
mov
cld
rcl
lahf
in
jp
mov
sub
cmp
out
(bad)
repz
adc
mov
lea
adc
or
je
imul
iret
jne
mov
lods
cmp
mov
sbb
sahf
fnstenv
jbe
xlat
push
sub
not
cld
push
fcom
mov
mov
bound
add
mov
not
fwait
mov
xor
mov
jb
push
sbb
pop
ins
push
pop
leave
inc
ins
pop
mov
data16
retf
xchg
or
push
fucomp
fwait
push
adc
fsubr
stos
dec
xor
jmp
nop
or
jne
jp
pop
pop
push
dec
gs
ror
cmp
jno
mov
gs
push
or
dec
mov
out
(bad)
nop
ret
pop
sub
dec
mov
pushf
xlat
jbe
in
das
ror
test
repnz
test
out
loopne
xchg
and
addr16
jbe
scas
aaa
adc
pop
push
sbb
test
inc
lds
adc
fdivr
shl
in
adc
mov
push
loop
sbb
data16
out
call
aam
fnstcw
mov
(bad)
mov
pop
loopne
or
test
sbb
stos
cmp
push
sub
pop
push
mov
inc
pusha
aas
aad
dec
dec
xor
imul
pop
movs
ds
dec
out
call
dec
fbstp
and
out
lds
pop
add
cld
pop
cmp
fldenv
out
inc
je
call
mov
xchg
cwde
xchg
mov
ficomp
aam
(bad)
sbb
mov
test
mov
nop
xchg
es
xlat
push
je
push
neg
ja
mov
push
repnz
scas
scas
ja
stos
imul
inc
test
push
mov
adc
stos
div
dec
push
fdivr
aaa
mov
es
mov
sbb
lea
xchg
add
cdq
lea
and
fwait
dec
lds
jae
xchg
adc
pushf
test
adc
clc
inc
shl
push
xchg
sbb
push
xchg
pop
mov
cdq
push
lods
in
cld
add
push
mov
mov
and
xor
(bad)
mov
pop
xor
je
jbe
and
mov
push
jb
sub
push
in
cmc
jmp
ret
cwde
pop
sbb
cmps
test
dec
movs
sbb
pushf
mov
cmps
out
sub
dec
dec
add
std
in
sub
call
and
daa
mov
sbb
jae
sub
rcr
push
inc
and
test
cmc
test
stc
xchg
and
dec
mov
mov
repnz
mov
mov
cdq
fdiv
push
inc
or
push
test
in
daa
lods
shl
xchg
cmp
mov
sar
mov
adc
push
push
push
icebp
fimul
retf
leave
add
daa
mov
add
pusha
cmps
adc
xor
fild
sub
push
sub
test
cdq
pop
xchg
and
ins
aaa
pushf
dec
retf
call
xchg
or
sbb
daa
push
scas
aaa
dec
sbb
add
js
dec
or
in
push
mov
jg
or
sbb
fdiv
sub
pop
idiv
aas
mov
ror
call
jb
mov
add
dec
out
mov
adc
mov
std
fld
shr
pop
mov
and
pusha
jnp
lea
mov
ret
fisub
mov
mov
or
in
and
mov
popa
aas
add
int3
daa
lods
fild
das
cdq
or
clc
into
adc
inc
ds
mov
xor
mov
lea
daa
adc
jbe
push
and
mov
(bad)
leave
out
std
sub
out
cmp
mov
call
sbb
and
clc
add
data16
dec
mov
mov
outs
jbe
in
stc
int3
icebp
jle
dec
xchg
into
fbld
mov
add
xchg
xor
mov
scas
daa
cmp
dec
push
xchg
fwait
and
std
pop
xor
out
das
pushf
and
push
cs
out
out
jmp
jns
sbb
inc
cwde
sub
sub
adc
pop
stc
scas
jg
pop
lods
or
mov
add
cmp
pop
and
sub
add
inc
mov
mov
outs
retf
cdq
xor
ret
out
pop
add
outs
ret
sti
bswap
xchg
movs
(bad)
xlat
je
cmps
xor
push
add
sar
ds
imul
push
mov
add
mov
loop
adc
int3
pop
fcom
test
push
mov
push
test
add
and
imul
pushf
stos
jo
rcr
push
lods
test
or
fs
out
test
pop
jmp
and
std
mov
call
sub
adc
jno
outs
jle
mov
sub
sub
repz
pop
adc
cmp
lahf
mov
imul
cmps
aam
dec
dec
sbb
pop
bnd
pop
bound
shl
fistp
xchg
add
(bad)
xor
cmp
push
add
loope
sub
inc
(bad)
xor
and
cwde
ret
mov
adc
aam
fyl2x
test
sub
fidivr
fs
in
fst
(bad)
or
ror
dec
push
icebp
add
jmp
inc
(bad)
jmp
call
cld
and
pop
jg
sar
popa
inc
popf
jg
push
mov
sub
test
fsubr
fstp
(bad)
cmp
mov
jmp
pop
mov
rcl
lods
ins
adc
pop
aam
inc
xchg
xchg
cmp
repnz
push
fwait
idiv
push
sbb
cs
mov
call
cmp
lods
xor
ja
and
jns
inc
pop
nop
mov
and
mov
cld
sti
mov
cld
popf
push
scas
fcomp
out
stos
inc
push
mov
and
ret
jle
fstp
(bad)
push
outs
dec
sbb
loope
add
les
or
cmp
add
in
lods
(bad)
pushf
dec
pusha
mov
pusha
jl
aam
sub
leave
das
mov
add
inc
mov
mov
adc
arpl
pop
cmp
mov
(bad)
push
dec
lock
dec
cmp
mov
and
fxch
(bad)
ss
sub
xor
or
pushf
neg
or
jp
or
push
inc
shl
rcl
call
push
push
pop
xchg
mov
arpl
mov
fwait
mov
xchg
cmp
loopne
gs
pop
scas
and
push
xor
pusha
mov
or
push
int3
adc
imul
test
add
sub
and
loope
cmp
fwait
xor
cmp
outs
sub
out
jl
out
push
and
stos
in
nop
out
clc
movs
mov
adc
and
aam
popa
(bad)
je
mov
sub
lods
shl
fs
pop
jl
push
xchg
movs
cli
pusha
lds
pop
fs
sti
loop
jmp
and
je
jmp
mov
dec
neg
mov
cmp
leave
nop
int
(bad)
repnz
call
cmp
mov
rcr
mov
je
lahf
push
sub
mov
sbb
pop
out
mov
jbe
jo
daa
mov
int3
push
push
stos
mov
ret
iret
gs
ja
or
xlat
xchg
fisub
xchg
imul
xchg
pop
cdq
inc
mov
repz
cld
fs
and
call
xchg
aad
out
xor
cmp
pop
add
(bad)
jne
cmp
repz
mov
imul
or
cs
xor
iret
dec
dec
(bad)
test
inc
mov
test
scas
in
ds
bnd
cmp
jb
add
or
push
mov
call
in
push
mov
mov
lea
mov
cdq
fstp
push
(bad)
das
lods
scas
stc
xchg
cli
mov
mov
lods
jne
mov
div
repz
pop
xor
test
stos
into
xlat
je
dec
sbb
int
iret
lea
jge
mov
sbb
lods
ins
jmp
(bad)
shl
mov
xchg
repz
fwait
gs
lods
sub
fild
pusha
jg
cmp
and
push
adc
aas
jmp
mov
mov
sub
loopne
scas
mul
and
int
mulps
cmp
mov
xchg
shl
xchg
xor
push
or
push
or
lds
pushf
mov
xor
mov
stos
xchg
call
xor
push
fdiv
clc
dec
imul
adc
jns
sub
sub
rol
out
jo
sub
mov
sub
out
jns
mov
xchg
push
sub
test
sbb
push
imul
pop
mov
push
xchg
(bad)
inc
or
mov
aam
sbb
(bad)
mov
je
push
nop
dec
or
pop
push
pop
pop
jg
sub
mov
inc
jp
out
int3
pop
lock
int3
push
mov
pop
daa
mov
xchg
xor
push
mov
jp
sub
loope
xchg
in
pop
loope
aas
(bad)
inc
dec
jmp
mov
mov
jmp
push
rcl
mov
sar
repz
scas
(bad)
mov
movs
jns
loope
and
aas
xlat
mov
inc
adc
fidiv
in
aam
adc
jmp
call
xor
add
adc
adc
je
adc
punpcklbw
stc
dec
stc
dec
retf
cmps
hlt
add
sti
jo
aas
xor
stos
fld
add
mov
cmp
test
pop
jge
sbb
dec
lods
dec
(bad)
out
mov
mov
mov
xchg
cmp
jb
push
pushf
dec
add
jecxz
cmp
jns
ja
lea
fxam
cmp
xor
fistp
mov
test
xor
repz
loopne
or
add
sbb
xor
pop
sub
retf
sti
scas
and
fiadd
out
inc
(bad)
(bad)
scas
cmps
js
in
and
loope
iret
sub
cmps
scas
je
mov
fsubr
sbb
ret
xor
sahf
ds
adc
pop
scas
or
ja
and
xchg
sbb
out
arpl
cmps
inc
in
push
daa
inc
retf
sahf
inc
add
loop
mov
mov
je
outs
dec
outs
xchg
push
retf
call
dec
xchg
(bad)
ret
neg
jo
add
sub
jb
(bad)
arpl
and
dec
dec
movs
jnp
fwait
add
mov
push
jno
jecxz
xor
mov
pushf
cwde
popa
mov
ins
cmp
lods
mov
aas
test
loope
and
shr
fidiv
add
(bad)
(bad)
mov
dec
jl
xchg
clc
inc
mov
addr16
es
pop
xchg
imul
(bad)
dec
add
int
or
clc
adc
adc
pushf
sub
cmc
movs
jns
or
push
sbb
call
and
clc
loope
js
cwde
mov
addr16
mov
loope
sub
sub
xchg
xor
add
popa
jmp
call
outs
test
inc
mov
inc
or
shl
movs
jmp
gs
out
mov
mov
mov
inc
cdq
jbe
cld
add
retf
push
(bad)
bnd
jmp
add
cmp
jns
xchg
imul
dec
sbb
inc
push
dec
sub
inc
lea
test
lock
jmp
inc
cdq
and
out
jae
and
clc
ret
retf
cmps
adc
ss
clc
sbb
sbb
cmp
sub
cmps
xchg
fbld
es
cs
sub
add
add
test
inc
bndstx
pop
xor
scas
adc
cs
push
xchg
in
fst
add
(bad)
jne
dec
test
mov
or
or
lods
outs
cld
nop
jo
jle
outs
xor
out
popf
push
push
repnz
cmps
in
pop
xchg
fcom
jp
pop
ficom
ret
jg
mov
dec
pop
(bad)
mov
pop
outs
fxch
push
and
fsub
adc
sbb
les
jo
sub
dec
and
ins
int3
jmp
ins
mov
pop
in
call
inc
(bad)
out
sahf
ss
aaa
mov
lock
stos
cld
inc
sbb
and
cmps
out
and
ret
leave
jg
cld
push
cwde
mov
adc
and
dec
pop
adc
jae
jmp
sti
dec
xor
cmps
out
push
les
push
push
stc
cmc
inc
nop
xor
push
dec
movs
popa
mov
sbb
repz
fistp
out
lds
sub
jno
cmps
in
inc
rcl
jecxz
and
inc
jl
test
inc
and
fs
scas
jge
das
aaa
in
dec
hlt
enter
xor
jmp
into
imul
inc
sbb
add
aam
adc
out
repz
ins
xchg
fnstcw
les
shr
ret
jbe
ja
lds
add
test
sbb
cmc
dec
mov
sbb
push
ins
mov
sbb
jae
mov
inc
inc
xchg
add
repnz
outs
mov
dec
pop
div
(bad)
sar
or
lods
outs
sbb
lods
and
and
test
push
fist
pop
or
sbb
xor
ss
cwde
add
rcr
in
mov
push
arpl
cmc
lock
mov
or
sub
retf
sub
adc
push
mov
jecxz
mov
mov
out
jp
push
clc
xor
mov
stos
pushf
cmp
mov
imul
shr
popf
ins
jae
int3
sbb
loope
sti
pop
dec
cs
stos
add
push
jns
shl
adc
adc
mov
loope
fisttp
or
push
push
fcomp
enter
jg
and
mov
xchg
xchg
ret
mov
ficom
xor
or
lds
pop
cmp
popw
icebp
ror
sahf
js
lahf
scas
enter
push
jle
adc
adc
pop
outs
cli
enter
and
and
div
mov
cmp
repnz
imul
jg
inc
sub
nop
jmp
mov
adc
xchg
aas
into
pop
mov
popa
inc
cmps
mov
(bad)
retf
fild
cmp
sub
stos
pop
xor
(bad)
addr16
mov
into
imul
jp
dec
lods
push
pop
test
inc
retf
lds
add
xor
pop
out
mov
lock
mov
js
mov
xchg
xor
imul
mov
inc
mov
or
mov
sub
mov
test
pushf
cwde
adc
push
push
push
pop
sub
jge
pop
mov
jl
iret
push
xor
mov
mov
or
ja
sbb
jle
js
inc
add
into
xchg
enter
in
push
movs
pop
cmp
aaa
inc
popa
jg
inc
cld
fld
lods
test
(bad)
ror
sahf
pushf
aam
jo
pop
test
shl
int3
lds
in
lods
dec
push
(bad)
cmove
mov
scas
out
cs
jmp
enter
xor
les
dec
xor
jg
dec
stos
pop
cmp
jne
inc
pop
cmps
and
scas
push
rcr
mov
or
adc
hlt
in
cli
inc
bound
call
daa
inc
mov
lahf
sub
bound
lahf
shr
cmp
popf
rcl
outs
fst
pop
xchg
out
dec
lahf
cld
sbb
inc
dec
push
mov
pushf
les
scas
es
mov
mov
out
ret
inc
dec
addr16
mov
inc
jb
pusha
jnp
and
in
mov
adc
sub
mov
adc
imul
pop
loopne
jae
push
jle
xchg
fcomp
hlt
outs
inc
dec
movs
jmp
sbb
jmp
xor
(bad)
xchg
pop
jmp
sbb
mov
jge
add
jecxz
or
and
clc
mov
pop
dec
test
aaa
and
out
rcl
mov
retf
inc
cs
cmps
sar
ret
pop
scas
gs
sbb
stos
in
lea
rdtsc
rcl
clc
fnstsw
dec
arpl
xchg
stos
out
dec
ror
adc
les
and
mov
ror
fwait
pop
cmp
imul
push
push
mul
iret
jmp
dec
mov
jb
div
push
daa
mov
mov
je
jbe
mov
mov
rcl
jmp
fwait
loopne
jo
dec
add
xchg
(bad)
sub
cmp
push
mov
push
mov
out
xchg
je
sub
arpl
mov
hlt
mov
dec
mov
or
call
push
push
ret
jl
xchg
dec
iret
imul
fiadd
sbb
sub
cli
ror
cmp
rcl
pop
mov
shl
leave
mov
dec
jle
jae
clc
test
lds
cmp
std
mov
mov
adc
(bad)
call
mov
das
outs
jno
paddq
in
loop
mov
movs
mov
sti
retf
cmp
dec
imul
ror
mov
mov
je
jmp
jnp
cmp
xchg
sbb
je
push
outs
push
dec
mov
add
inc
pop
(bad)
pusha
push
xchg
inc
mov
popa
pusha
arpl
dec
mov
pop
sub
mov
and
fisubr
inc
fistp
mov
inc
jecxz
add
nop
sbb
int3
ror
fnstcw
adc
idiv
sbb
sub
loopne
pop
fiadd
mov
add
sub
jecxz
xor
outs
ret
jnp
pop
in
or
fwait
call
(bad)
fcmovnbe
sub
cmp
cmc
adc
mov
push
xor
repnz
and
bnd
loop
adc
out
xchg
inc
xchg
(bad)
cwde
cmp
mov
jecxz
lea
lds
loopne
rcl
fiadd
add
jg
or
dec
mov
js
(bad)
test
pop
out
not
mov
xchg
cmp
cwde
push
repnz
push
xchg
fidivr
cli
fcomp
in
ja
sti
jb
add
ret
(bad)
dec
out
add
lods
cmp
and
stos
push
add
ins
rcl
add
mov
cmp
jmp
jbe
sbb
shl
jge
leave
inc
mov
stos
or
jbe
ret
inc
mov
arpl
mov
test
or
in
xor
test
jmp
adc
dec
jmp
push
xor
fimul
add
xchg
enter
fisubr
adc
inc
inc
icebp
test
outs
cdq
cs
mov
xor
pop
xor
repnz
pop
leave
and
push
(bad)
dec
mov
aam
aam
jb
jb
cmp
mov
or
hlt
pop
lea
mov
mov
fdiv
(bad)
mov
cmp
push
ins
mov
fcmove
dec
adc
(bad)
jb
ins
stos
sbb
sbb
add
push
int
loopne
push
cli
pop
dec
mov
inc
lods
mov
ror
mov
pop
or
mov
add
das
iret
stc
jbe
jbe
mov
push
aaa
dec
or
ss
inc
jnp
loop
popa
sub
sub
pop
dec
adc
retf
or
cmc
xor
inc
push
sahf
pop
dec
xchg
push
lea
adc
add
and
(bad)
fwait
ins
adc
mov
or
or
xor
stc
in
std
in
xor
repnz
jo
xchg
pop
dec
push
popa
xor
aas
mov
loope
in
cli
pusha
in
mov
movs
repz
cs
pop
ins
loop
push
scas
or
sahf
push
cmp
repz
cdq
mov
inc
mov
and
fstp
dec
mov
add
fwait
and
fbld
and
cld
adc
cld
js
jp
(bad)
enter
daa
dec
mov
sub
push
pushf
dec
arpl
icebp
call
call
and
(bad)
dec
push
mov
xor
push
clc
aad
imul
mov
mov
jb
adc
mov
jno
repnz
mov
popf
xchg
enter
xor
aad
xchg
popf
xor
jle
lds
in
pusha
xchg
scas
in
lods
mov
xor
fadd
lahf
(bad)
xchg
dec
or
push
cmps
mov
mov
sub
xchg
cmps
jmp
mov
push
lea
cmps
data16
(bad)
sbb
cs
lds
add
test
outs
into
int
inc
xor
clc
rol
or
jl
daa
xchg
cld
mov
mov
mov
cdq
mov
cmp
jecxz
adc
inc
jae
call
(bad)
cmp
mov
pop
inc
les
xchg
scas
cli
or
mov
leave
mov
inc
mov
test
mov
in
in
mov
fdiv
js
mov
(bad)
or
xor
arpl
inc
sub
xor
inc
sbb
mov
stos
ror
fcomp
retf
sbb
sti
stc
out
pop
xchg
and
push
adc
(bad)
fcomip
ret
pusha
dec
rcl
inc
mov
push
ss
hlt
mov
ds
adc
or
push
push
(bad)
sbb
call
dec
call
add
mov
or
nop
es
xlat
adc
sub
loop
fstp
sbb
xor
xchg
lea
jae
test
sub
sti
imul
cmps
inc
adc
xor
push
cmps
mov
jg
xchg
ja
cmp
push
inc
inc
sub
es
cli
js
inc
lods
fs
cmp
mov
mov
loopne
cmps
sub
or
ins
sub
push
js
pop
mov
cmp
jmp
sti
test
(bad)
or
adc
xor
or
fstp
jns
and
div
jns
mov
push
adc
je
(bad)
loop
cwde
xchg
and
xor
xchg
or
vmwrite
fdivr
push
iret
pop
mov
aad
repz
push
stos
push
ins
jecxz
in
pop
jnp
cmp
rcl
jno
ret
fcmovb
and
out
mov
inc
test
nop
pop
push
dec
mov
fist
pop
pop
pop
out
rol
mov
xchg
ficomp
inc
loope
scas
add
mov
inc
(bad)
mov
repnz
int
xchg
addr16
out
mov
(bad)
jo
sti
(bad)
cwde
in
and
call
mul
inc
hlt
adc
cwde
loopne
ret
pop
jnp
add
mov
retf
mov
stos
nop
inc
fistp
adc
or
in
fdivr
fidivr
or
test
mov
dec
in
in
jbe
or
and
jge
nop
jae
sbb
and
jne
(bad)
jl
adc
sar
sub
jno
fxch
inc
xchg
cs
test
enter
push
xor
shr
push
jecxz
scas
scas
bound
or
inc
leave
xchg
sbb
in
push
mov
pushf
enter
sbb
adc
push
jge
enter
cmps
sbb
nop
das
imul
or
into
cmp
mov
iret
dec
pop
cs
xor
mov
sahf
dec
jmp
jmp
sbb
icebp
fadd
mov
mov
in
dec
les
shl
push
add
scas
add
ss
or
push
jge
call
cli
xor
das
jb
xchg
jecxz
scas
inc
sti
jne
retf
push
cli
sub
je
adc
sub
dec
xor
fcom
mov
mov
pop
inc
cmp
lds
neg
or
pop
(bad)
mov
out
test
in
std
xchg
jl
ds
sbb
out
xor
clc
mov
mov
mov
cmp
aaa
jbe
xor
test
cmp
retf
hlt
fsubr
adc
call
mov
fdivr
in
dec
sbb
ret
or
mov
iret
jns
int
outs
or
data16
sbb
cdq
xlat
lock
mov
cwde
lds
call
cmp
xchg
pop
pop
mov
xchg
mov
pushf
scas
push
dec
(bad)
pop
cmps
scas
je
cli
sub
xor
jae
mov
jno
and
pop
movs
sahf
mov
popf
mov
push
mov
scas
mov
movs
js
call
out
dec
sar
adc
out
stos
mov
pop
mov
fidivr
xor
fst
je
fnstsw
in
jmp
pop
sub
in
pop
cmp
mov
hlt
sub
add
retf
add
pop
jge
es
(bad)
jg
pop
lahf
push
pusha
or
pushf
cld
xor
pop
cmps
int3
aaa
lods
add
pop
cmp
pushf
aas
mov
test
jne
or
mul
inc
imul
jle
(bad)
push
dec
(bad)
mov
jne
mov
xor
pop
ret
iret
jb
clc
push
or
jo
mov
cmp
and
sub
mov
mov
mov
inc
or
cwde
mov
sbb
mov
test
pop
(bad)
imul
push
stos
sbb
clc
jp
mov
mov
jle
dec
aaa
cmp
stos
data16
xchg
sub
dec
pusha
jbe
aaa
rcr
in
bound
add
sub
and
mov
fnstenv
sub
cmp
sbb
pushf
sub
nop
mov
rcr
mov
ins
mov
adc
jns
out
adc
fistp
je
out
test
xor
sbb
jns
lds
retf
lds
mov
hlt
loop
pushf
loop
scas
shr
push
shl
push
fldenv
jbe
fild
mov
push
mov
cmp
ret
dec
add
(bad)
in
lds
inc
test
mov
add
test
popa
jbe
cmps
loopne
jne
inc
push
add
dec
call
adc
or
and
or
sbb
xor
sub
fadd
dec
lods
mov
or
cmp
adc
lds
clc
outs
ret
or
cli
adc
add
sub
sub
dec
in
rol
jns
(bad)
push
sub
daa
push
ret
(bad)
shr
arpl
xchg
or
mov
sbb
pop
mov
std
pop
or
loope
add
lock
cmp
leave
clc
jmp
daa
(bad)
cli
rcr
ds
jp
shl
(bad)
and
(bad)
dec
cmp
fdivr
cdq
mov
lds
add
test
cmps
in
xlat
sbb
inc
in
fwait
enter
cld
imul
call
mov
and
cli
div
test
outs
and
adc
mov
scas
pop
mov
sbb
xor
adc
out
push
fild
adc
lds
cmps
and
pop
rcr
add
enter
fs
aas
xor
jae
int3
mov
out
int3
lods
ficomp
mov
jecxz
neg
and
xchg
jnp
pop
loope
fiadd
xchg
dec
idiv
or
shl
jp
dec
pop
jge
aam
int3
cdq
mov
sub
add
cmp
xchg
in
les
daa
int
pusha
retf
mov
pop
sar
jmp
enter
xchg
xor
sbb
jb
push
jbe
add
sub
fldenv
stos
rcr
mov
push
sti
lds
jne
xor
jle
push
jmp
ds
test
cmp
adc
pop
repnz
xchg
cld
in
in
mov
fcomp
test
cmc
sahf
inc
dec
mov
leave
enter
test
iret
data16
cmp
mov
fstp
mov
push
sar
out
push
jg
mov
dec
imul
or
leave
mov
test
pusha
cld
fimul
outs
inc
(bad)
mov
rcr
fcomp
and
fstp
ds
ins
push
aam
mov
sub
iret
fidiv
nop
sar
push
xchg
outs
sbb
jmp
mov
nop
loop
pusha
data16
in
push
dec
push
jg
sbb
stc
fwait
sub
sar
ins
xor
mov
(bad)
shl
jl
and
pusha
mov
shl
dec
fwait
out
in
push
movs
jno
xchg
dec
adc
mov
sbb
or
jg
aad
scas
sbb
and
xchg
retf
adc
cs
outs
call
mov
dec
cld
sbb
dec
pop
enter
clc
pop
jbe
push
sub
adc
in
(bad)
pop
jae
or
sub
push
test
fist
xchg
div
rcr
ret
xor
xor
loope
sbb
jl
add
mov
pop
fnstenv
sub
jne
mov
mov
lock
push
daa
jne
adc
and
adc
pusha
sub
jmp
test
(bad)
jmp
(bad)
adc
cmp
stc
adc
jnp
xor
dec
popf
and
dec
mov
pop
sbb
mov
aaa
push
xchg
push
mov
add
jne
push
adc
and
aas
inc
push
shr
mov
push
ret
mov
cmps
pop
psubd
sti
lea
fild
mov
sub
push
mov
jno
push
push
scas
pop
clc
mov
clc
test
out
add
sub
dec
loopne
out
adc
add
add
or
cwde
fs
mov
(bad)
pusha
xchg
into
xchg
jmp
jmp
push
mov
mov
and
popf
inc
inc
in
cmp
aaa
and
mov
dec
sti
int
clc
inc
jb
pop
fsub
dec
push
push
sbb
ficom
pop
mov
mov
xor
out
aaa
mov
aas
jp
adc
jl
mov
inc
or
mov
inc
adc
or
shl
stos
dec
pushf
into
adc
in
mov
sbb
leave
test
cmp
sbb
sub
xor
in
push
outs
int
aas
push
lock
test
fsub
xchg
arpl
push
(bad)
outs
test
jmp
jl
adc
jp
out
ret
mov
cmp
shl
in
adc
push
rcr
shl
out
cli
pushf
out
adc
xchg
mov
mov
enter
call
outs
jne
shl
in
inc
int3
inc
jge
xlat
fsub
inc
hlt
rcr
ficom
push
inc
and
add
add
movs
mov
pop
aam
std
hlt
loopne
mov
mov
add
pop
ret
adc
jo
xchg
pop
lea
and
dec
adc
cmp
cmps
or
nop
mov
aam
or
add
jns
(bad)
sbb
xor
out
jge
sub
arpl
mov
retf
inc
cmp
es
leave
adc
add
call
(bad)
shl
xchg
test
shl
push
mov
out
jmp
xchg
mov
fisttp
or
nop
rol
sub
xor
lods
ror
inc
mov
xchg
fidiv
scas
adc
push
inc
mov
repz
or
cmp
cwde
ds
xchg
pop
jle
ret
jno
cmp
out
fcom
fabs
adc
out
inc
jne
xor
inc
imul
dec
xor
sbb
fwait
inc
push
adc
call
(bad)
pop
retf
daa
enter
cmp
xchg
aas
scas
mov
sub
dec
movs
out
loop
push
mov
repnz
xor
(bad)
cmc
and
aad
or
add
adc
lahf
idiv
fwait
jmp
stos
or
aas
and
push
xor
push
dec
cmps
outs
mov
lahf
mov
test
jg
(bad)
addr16
adc
dec
scas
sub
push
cmp
(bad)
xchg
mov
mov
test
adc
scas
in
imul
push
pop
push
into
sbb
xor
mov
clc
test
sbb
mov
mov
or
jmp
jle
jl
pop
add
sbb
cmp
mov
les
int
ret
cdq
jmp
clc
arpl
cli
sbb
sub
mov
push
adc
and
pushf
nop
mov
jecxz
nop
sbb
outs
xor
sub
jle
mov
push
xor
aaa
inc
mov
inc
loopne
mov
mov
movs
enter
pusha
loopne
fild
test
mov
prefetch
(bad)
jp
cdq
push
cmc
jbe
mov
dec
mov
popa
push
or
xchg
sub
nop
push
nop
xchg
in
(bad)
mov
enter
jl
inc
adc
dec
add
ss
mov
and
fistp
jb
dec
sahf
or
addr16
add
add
ret
add
sbb
inc
fcomp
push
(bad)
retf
push
and
xor
pop
(bad)
and
push
or
sbb
or
daa
sbb
test
mov
adc
cmc
pop
xchg
or
push
scas
(bad)
fisub
mov
adc
or
adc
inc
jne
retf
(bad)
push
cmp
mov
mov
push
nop
iret
pop
mov
in
fldenv
dec
mov
inc
adc
or
retf
outs
hlt
cld
fs
cld
test
fcom
mov
(bad)
stc
mov
loop
and
lods
lock
popa
dec
sub
mov
sub
xchg
fisubr
idiv
jmp
in
jge
test
call
aad
mov
cmp
scas
jno
and
icebp
xchg
out
call
loop
imul
(bad)
imul
cmp
or
movs
aas
popf
inc
cld
or
repz
jmp
out
mul
and
dec
aas
push
mov
xchg
lods
mov
mov
adc
fwait
xor
sbb
pop
cmp
mov
adc
pop
fsub
cdq
mov
movs
dec
xor
mov
push
push
cmp
inc
jno
sti
cmp
sbb
mov
call
cmc
jl
cli
ins
cmp
mov
mov
mov
sbb
aam
fisubr
dec
dec
sbb
fimul
not
or
sub
and
nop
cmp
push
sub
cmp
cdq
dec
cmps
repz
ret
xor
popf
out
fisub
or
add
int
adc
sub
xchg
out
dec
aam
sbb
cmp
int3
cmps
mov
dec
sbb
pop
inc
and
imul
int
cmps
sub
push
call
movs
inc
sub
repz
pop
lahf
xor
mov
and
pop
jmp
int
add
cdq
rcr
inc
cmp
mov
mov
fcom
(bad)
cmp
(bad)
cmp
or
dec
leave
dec
xor
xchg
pop
dec
adc
mov
ret
stos
jnp
jl
loope
push
test
loope
jmp
mov
pop
adc
mov
dec
inc
or
lods
fstp
add
mov
lods
mov
loop
and
add
fdivr
fnstcw
xchg
and
mov
test
jge
xchg
push
push
xchg
sub
mov
sub
jnp
aas
add
je
push
(bad)
mov
pop
mov
mov
inc
xchg
ins
xchg
leave
sahf
jl
out
mov
add
mov
mov
inc
and
je
fnstsw
add
stos
adc
or
mov
cmp
popf
mov
inc
stc
jecxz
mov
(bad)
mov
mov
xor
dec
dec
mov
pop
add
xchg
stc
jnp
and
test
inc
repz
test
mov
das
jns
ins
std
scas
(bad)
int
adc
pop
xchg
sbb
mov
push
pop
inc
inc
cli
fdiv
dec
(bad)
pusha
mov
add
aad
dec
cmp
jecxz
fistp
mov
mov
or
pop
dec
jge
jne
gs
pop
sbb
pop
xchg
fs
pop
int3
test
out
std
test
clc
sub
adc
xor
mov
pop
in
adc
pop
xchg
sahf
mov
push
pusha
pop
push
dec
dec
sbb
retf
mov
mov
push
or
scas
sub
lods
out
pop
mov
cmp
nop
bound
pop
adc
sub
cmp
add
lea
scas
ja
sub
add
pop
adc
les
mov
aaa
mov
in
cmps
mov
rol
cdq
mov
sub
rcl
mov
mov
or
mov
xchg
mov
hlt
cld
sbb
shl
and
xor
out
cmp
les
mov
daa
std
scas
iretw
leave
stos
in
push
adc
or
push
mov
iret
jb
xchg
mov
jno
mov
jo
add
or
je
add
inc
mov
adc
ins
enter
or
repz
adc
xor
pminsw
mov
mov
dec
clc
arpl
dec
test
xchg
inc
imul
sbb
clc
pushf
js
rol
cdq
pushf
outs
sbb
imul
repz
fwait
cld
sbb
pop
jmp
xlat
inc
ror
mov
push
adc
add
mov
sahf
(bad)
adc
ret
add
mov
dec
mov
repz
xor
mov
ins
scas
inc
ret
fsubrp
and
pop
xchg
dec
sbb
add
pop
aam
cmc
mov
xor
mov
sbb
push
adc
sbb
add
add
push
cmp
dec
dec
dec
sub
(bad)
fisttp
add
fild
mov
cmc
arpl
mov
sub
sbb
xor
or
xchg
or
mov
lds
mov
aaa
pop
push
div
std
mov
cdq
std
sub
sub
(bad)
gs
lahf
adc
stos
jbe
adc
mov
shl
mov
in
into
cs
pop
outs
js
test
jmp
pop
imul
xchg
in
aam
push
dec
repnz
cmp
outs
out
xchg
pop
jbe
icebp
xor
call
leave
and
repz
outs
retf
pop
jg
xchg
mov
xor
fld
loop
pop
add
into
jne
pop
fst
lea
lock
dec
dec
das
and
loopne
jp
dec
fs
xor
pop
or
jg
push
mov
stc
jl
xor
mov
mov
or
loopne
cmp
xchg
push
pusha
ja
movs
xor
mov
cmp
sbb
mov
inc
push
call
dec
or
dec
or
les
cdq
pop
jbe
sar
jge
out
clc
icebp
sub
adc
pusha
or
inc
and
fsub
cmp
cdq
fiadd
sbb
hlt
adc
mov
call
retf
and
mov
movs
sub
lahf
xchg
inc
pop
mov
rcl
ret
or
and
clc
adc
pop
jo
mov
retf
cmp
cmp
push
mov
jle
jns
pop
jno
cdq
(bad)
ds
lock
rcr
sbb
stos
rcr
xchg
pop
outs
mov
sub
test
lahf
mov
adc
pop
pop
mov
lahf
rcr
imul
dec
add
rcr
pop
inc
jmp
mov
or
jg
ret
les
sub
lods
fisub
shr
cmc
sub
xchg
aad
sub
cmp
sar
idiv
pop
pop
in
out
mov
jns
jo
in
mov
and
fwait
adc
scas
adc
jbe
inc
adc
daa
clc
pop
add
fcom
call
es
pop
pop
jecxz
push
mov
arpl
aas
loopne
jg
int3
lods
add
iret
arpl
and
xchg
cmp
sbb
lea
dec
add
movs
or
retf
ins
sub
sbb
iret
cmp
call
loope
outs
mov
mov
shl
int3
jo
test
(bad)
ror
jle
out
inc
pop
lods
mov
neg
int3
and
sub
or
call
retf
cmc
inc
lea
cmps
(bad)
(bad)
push
or
das
outs
adc
push
loop
push
pop
xchg
leave
push
lods
mov
pop
sub
sbb
icebp
sti
inc
push
pop
cmp
das
xor
cmps
pop
and
pop
cli
dec
jne
inc
sub
aas
in
mov
and
pop
xchg
pop
int3
push
and
add
inc
sahf
in
loope
and
dec
mov
push
call
in
or
lods
cmps
dec
sbb
les
jb
and
(bad)
mov
jno
gs
ficomp
or
enter
arpl
aad
push
hlt
mov
inc
idiv
xor
adc
out
xor
jne
xchg
scas
js
fistp
dec
pop
jae
lods
jnp
jge
ins
or
iret
xor
push
jge
mov
cmp
or
or
pop
sub
fs
fwait
enter
jecxz
imul
pop
inc
sti
jbe
xchg
inc
rcl
setle
jno
jge
cmp
in
xchg
aaa
inc
mov
cld
test
or
add
adc
xor
mov
test
cs
into
pop
mov
sar
ins
hlt
daa
ds
aam
ins
jge
xchg
cdq
xor
dec
jno
inc
xchg
dec
sti
mov
mov
ins
xor
out
mov
lea
scas
test
stos
cmp
mov
add
mov
bound
dec
cmp
inc
mov
icebp
or
dec
fnop
enter
mov
dec
mov
int3
repnz
shl
mov
mul
sub
repz
test
call
stc
loope
adc
push
pop
fsubr
out
jne
shr
cmp
mov
mov
dec
mov
cmp
xlat
xor
sub
and
cmps
dec
mov
jns
xchg
nop
retf
scas
xchg
jmp
lds
jns
jge
pop
mov
adc
and
sbb
jbe
mov
pop
push
neg
enter
xchg
js
pop
add
sub
push
es
imul
cmp
adc
hlt
idiv
sbb
add
rcl
fwait
or
outs
mov
mov
(bad)
cmp
inc
data16
in
pop
ds
mov
je
popf
and
in
enter
shr
fld
call
in
xchg
daa
bound
adc
inc
add
inc
and
add
stos
ret
pop
and
push
cdq
lods
jmp
xchg
hlt
retf
mov
dec
xor
test
inc
and
inc
xor
mov
xchg
dec
das
add
pop
inc
movs
jns
mov
cmp
inc
div
adc
push
add
imul
dec
dec
sub
loope
call
push
jl
xchg
sub
popf
sbb
sahf
je
push
inc
cli
rcr
dec
cmps
mov
in
push
mov
mov
scas
in
dec
mov
ds
fbstp
jl
adc
cld
in
mov
cmp
mov
cdq
mov
pushf
mov
inc
jns
inc
pop
dec
fisubr
push
dec
adc
scas
add
xor
mov
mov
mov
retf
sub
fsubr
cli
add
cmp
cli
inc
xor
rcr
lock
xchg
mov
mov
movs
mov
and
dec
imul
jns
ret
fbstp
and
sub
dec
push
imul
mov
adc
outs
cmp
popa
push
sbb
mov
mov
test
popf
es
fstp
in
shl
aaa
mov
jns
and
not
ja
in
sbb
es
nop
hlt
ret
ds
mov
mov
pop
repz
lods
lods
lea
fnstenv
sar
sbb
cmp
jbe
loope
fcmove
jp
or
fidivr
and
es
shl
fsubr
icebp
and
inc
loop
stc
pushf
hlt
(bad)
ffree
sub
push
ret
and
dec
fsub
adc
mov
cmp
jge
sti
stc
scas
sub
aaa
loop
dec
add
inc
popa
das
mov
(bad)
push
mov
add
mov
mov
xor
iret
push
(bad)
xchg
and
sub
xchg
fild
into
push
scas
pop
adc
xor
mov
sti
int
pop
test
cwde
aam
push
psllq
cmp
and
aaa
ins
test
mov
xchg
fs
js
pop
enter
add
fild
adc
mov
ror
pop
cmp
shr
and
add
mov
ret
outs
dec
inc
fidivr
fldenv
sub
sbb
aas
or
nop
or
bound
fcmovnu
fiadd
dec
push
sbb
and
jo
push
cmps
mov
cmp
mov
je
aam
mov
adc
or
shr
fsubr
loopne
dec
xchg
cmp
pushf
cmc
add
ss
outs
imul
cmc
and
std
mov
fidivr
fdivr
outs
fiadd
push
fcomp
adc
xlat
in
cmps
adc
retf
repz
out
je
mov
leave
cmc
enter
pushf
sub
and
sar
jbe
mov
out
scas
adc
xlat
mov
lock
jl
fs
sbb
cdq
pop
and
push
or
xchg
pop
test
mov
pushf
dec
mov
inc
sti
stos
std
and
xor
cmp
pop
jl
cld
push
xor
imul
jmp
rcr
outs
or
jp
ror
or
push
xchg
xchg
ja
inc
inc
jo
mov
adc
push
test
xor
push
mov
ret
inc
retf
mov
les
jmp
jae
push
push
repz
iret
xor
clc
push
sbb
popf
movs
jg
mov
mov
test
pop
into
(bad)
jbe
inc
(bad)
lock
retf
(bad)
lock
adc
cld
jp
ret
jge
mov
lods
bswap
and
mov
jl
jge
mov
test
cmp
add
sbb
fist
dec
call
lds
loope
loopne
sahf
stos
pop
fcomp
test
loopne
hlt
ins
in
icebp
sbb
icebp
and
dec
test
aaa
aad
ins
pop
dec
mov
retf
fiadd
push
push
icebp
rcl
ss
mov
inc
lock
mov
test
push
xchg
ins
repnz
aas
sahf
dec
mov
jge
fs
jbe
and
mov
mov
aaa
mov
add
inc
xchg
js
and
pushf
mov
inc
leave
cs
pop
loope
push
daa
mov
add
jmp
mov
xchg
(bad)
shr
inc
loop
pop
adc
outs
and
mov
or
or
inc
popa
mov
cmp
pop
mov
mov
arpl
adc
mov
push
fs
clc
add
jns
mov
mov
in
mov
mov
sub
(bad)
mov
push
and
outs
sub
cmp
adc
fild
ret
dec
mov
retf
sub
sub
fidivr
pop
inc
loopne
pop
neg
fidiv
ror
sbb
stos
mov
dec
jmp
icebp
popa
inc
sub
ret
dec
xor
ret
and
xchg
mov
popf
imul
xor
cmps
mov
sub
imul
sbb
cmc
mov
push
or
ret
push
push
in
mov
test
jl
retf
jmp
in
aaa
mov
retf
nop
and
pop
and
cli
pop
inc
ret
add
mov
ds
or
in
lock
sub
aas
sbb
(bad)
inc
cmp
(bad)
push
inc
sbb
or
and
jecxz
jp
test
fdivr
sbb
dec
xchg
cmp
jmp
cwde
mov
sbb
ficom
jo
mov
cmps
adc
int3
call
ret
sbb
stos
fld
mov
stc
ret
pop
enter
jecxz
add
sahf
ror
retf
enter
inc
lds
dec
loope
fadd
in
push
outs
jl
cmp
adc
pop
push
sti
inc
xor
push
dec
xchg
inc
cli
xchg
sbb
lds
cld
pop
inc
mov
adc
and
mov
js
mov
sbb
xlat
imul
dec
inc
mov
(bad)
bound
xor
push
loope
clc
pop
push
adc
xchg
mov
cmp
sub
out
adc
sbb
push
loop
sbb
shl
push
push
nop
mov
xchg
mov
mov
ins
mov
in
das
ror
sub
xchg
fldln2
sti
and
ret
adc
and
outs
xchg
jne
xchg
enter
inc
pop
stos
inc
repz
and
pop
sub
cdq
sti
xbegin
xchg
xchg
not
add
ret
rcr
mul
xchg
in
push
loopne
mov
xor
pop
add
and
mov
iret
sahf
inc
xchg
les
cwde
loopne
sub
push
in
int3
mov
inc
lds
jae
ret
push
mov
test
dec
mov
push
fs
aaa
dec
mov
ss
mov
pop
mov
ss
or
xor
and
aad
jns
xchg
call
or
jecxz
loope
popf
or
jl
rol
mov
les
xorps
cmp
and
xchg
jg
lods
jae
or
push
aaa
pushf
add
jo
xchg
cmp
inc
mov
popa
add
bound
sbb
fimul
mov
das
dec
jbe
test
test
stos
xor
int
in
ret
sub
jnp
outs
loope
adc
sbb
daa
mov
xchg
cmp
in
das
xchg
shl
mov
dec
push
xchg
shl
sub
mov
mov
retf
repz
pop
(bad)
imul
mov
jns
jbe
lea
and
sar
cwde
xchg
and
mov
call
xor
sbb
dec
ins
retf
fcomp
cmp
sub
ss
ds
mov
scas
xchg
aaa
ret
sub
sub
mov
into
xor
push
es
ret
push
je
fdiv
sti
mov
test
mov
loopne
popf
int
dec
lahf
ficom
je
inc
rcr
push
inc
adc
xchg
inc
not
dec
fwait
dec
and
stos
xor
inc
pop
jl
fnstcw
jmp
(bad)
fimul
push
lahf
mov
repnz
in
or
iret
out
popf
out
js
mov
adc
sbb
push
inc
clc
(bad)
and
fild
ret
or
out
cmp
mov
lods
mov
mov
inc
cwde
lea
mov
mov
aam
push
pushf
push
xor
scas
mov
xchg
sub
jg
xchg
add
and
sub
dec
xchg
jmp
pushf
inc
mov
adc
push
jmp
popa
js
gs
popf
outs
ins
mov
aas
jo
dec
dec
sbb
retf
test
je
dec
cli
jns
(bad)
jl
mul
bound
and
mov
pop
bound
sub
test
rcl
ret
mov
test
dec
sbb
call
adc
mov
shl
mov
mov
cmp
pop
push
mov
(bad)
lods
cmp
popf
push
shl
mov
xchg
sti
mov
mov
inc
xor
jno
inc
jp
cmp
(bad)
dec
ins
sub
inc
mov
shl
data16
aam
test
mov
mov
pop
jle
adc
(bad)
ja
pop
mov
fnstenv
inc
xor
ret
(bad)
sbb
xchg
lods
les
test
push
fistp
sub
test
and
cmps
rol
or
mov
lahf
xchg
mov
mov
mov
inc
dec
in
cld
mov
pop
in
push
jnp
out
es
add
and
or
and
cli
sahf
cmps
mov
and
sbb
dec
repnz
mov
push
sbb
mov
daa
popf
mov
fisttp
mov
and
out
push
and
lock
jmp
bound
aas
or
mov
ror
sub
(bad)
push
pop
xchg
adc
push
arpl
sti
arpl
mov
cmp
or
shr
lock
(bad)
(bad)
call
inc
enter
jecxz
adc
sub
nop
pop
shl
mov
sub
push
inc
push
into
fsubr
jecxz
xor
loopne
inc
mov
ja
sub
sub
sbb
jg
loopne
dec
lea
ss
mov
cwde
lods
jg
and
popa
jp
in
mov
add
jne
ds
mov
mov
aad
push
hlt
mov
jmp
je
ret
push
test
in
fldenv
cmp
push
mov
pop
jmp
(bad)
mov
push
scas
xchg
clc
jmp
imul
add
stos
sbb
int3
pop
sub
(bad)
sbb
sub
shl
mov
retf
jbe
seto
fild
mov
jg
cmp
aam
das
push
nop
push
out
out
ficomp
xor
ss
ret
adc
retf
mov
es
clc
xlat
sbb
inc
sbb
mov
test
punpckhwd
sub
cmc
psubsw
sub
sbb
jo
mov
push
(bad)
xchg
lock
call
out
cmp
ja
psubd
sar
movs
pop
add
push
push
ds
mov
add
sbb
outs
xchg
lock
mov
por
addr16
xchg
sub
mov
add
imul
push
ret
cmps
lahf
pop
or
call
das
call
jp
out
cdq
mov
jb
adc
mov
jle
fwait
sbb
adc
lock
xor
push
lods
sbb
cli
jmp
pop
sbb
cs
and
xchg
pop
(bad)
ss
cmp
cli
aam
sub
cmp
loope
int
aaa
jno
aad
retf
scas
and
rcl
icebp
jmp
les
sbb
dec
push
ins
cmp
mov
and
ficom
or
push
pop
and
dec
sti
pushf
cmp
clc
leave
int
enter
fwait
push
es
xor
sbb
imul
bound
adc
sahf
push
xchg
fsub
test
add
in
sbb
(bad)
test
inc
shl
mov
push
dec
or
mul
mov
shl
aam
jle
push
les
shr
lods
cmp
jne
dec
xlat
dec
jne
dec
call
das
add
pop
ja
es
movs
sbb
jge
in
leave
stos
iret
mov
sub
add
cmps
retf
xor
and
mov
cmp
or
mov
mov
fs
mov
int
and
or
inc
adc
cli
lods
or
lea
fimul
xchg
mov
leave
(bad)
jmp
sti
aas
lahf
dec
push
out
stc
ss
xchg
cmp
dec
mov
fsub
cdq
daa
mov
jno
movs
repz
loope
mov
or
in
add
jp
sub
inc
(bad)
jmp
scas
pop
adc
or
(bad)
outs
sahf
cmp
cmp
sbb
pop
daa
inc
or
mov
cmp
xor
or
imul
jl
lds
fisttp
aam
cmp
jb
or
push
xor
adc
repnz
nop
das
scas
push
lock
pop
in
mov
mov
jl
ret
xor
jnp
mov
aas
pusha
std
inc
ins
(bad)
clc
mov
xchg
and
adc
cli
imul
enter
sbb
jle
mov
adc
push
add
jl
jge
mov
popf
cli
sbb
xchg
adc
xor
arpl
lods
ss
cwde
(bad)
test
xor
sbb
pusha
pop
je
mov
test
mov
lock
pop
sbb
lods
sbb
dec
outs
stos
movs
scas
dec
lods
leave
dec
and
ror
cs
or
mov
(bad)
(bad)
ficom
mov
mov
push
or
sub
push
stos
xchg
aas
bound
fmul
dec
data16
cmp
test
push
cmp
aas
mov
hlt
xor
scas
imul
or
aas
mov
xchg
js
sbb
push
loopne
jno
ror
in
inc
ja
inc
xor
out
cli
fsubr
adc
jle
outs
aam
inc
ins
adc
dec
mov
mov
bound
sbb
sbb
add
stos
mov
push
fcmovb
cmp
in
adc
out
pop
sbb
mov
out
rcr
aad
ins
test
sbb
aaa
or
inc
dec
int
mov
enter
shl
or
dec
fcmovne
add
dec
sbb
jmp
push
ror
daa
lds
test
repnz
and
ret
loop
loop
ja
mov
jecxz
sbb
popf
xchg
shl
inc
mov
pop
pop
xor
dec
sti
cs
push
adc
nop
es
imul
jnp
bound
cmp
cld
push
cli
invd
inc
pop
movs
idiv
inc
call
pop
call
inc
dec
in
pop
loopne
test
and
(bad)
retf
call
add
cmps
jnp
mov
sbb
or
stos
mov
or
int3
xchg
cmp
inc
xchg
pop
cmp
(bad)
sbb
ret
pop
iret
mov
cmp
push
push
jl
popf
sar
mov
pop
out
hlt
jecxz
mov
jnp
repnz
mov
dec
nop
mov
xchg
push
push
pusha
(bad)
jno
pop
pushf
mov
stos
add
loopne
push
xor
pushf
fs
mov
jl
sbb
les
ror
mov
and
call
pop
pop
xor
pop
pop
inc
push
fld
sub
mov
ss
pop
mov
loopne
cmp
sub
arpl
jp
fnstcw
push
arpl
js
shl
push
jns
fcom
pop
dec
mov
mov
mov
in
xor
xor
mov
adc
into
jecxz
sbb
bound
in
stos
add
ins
lods
les
pop
loopne
loopne
mov
fld
stc
lds
loop
repz
dec
rcr
ss
jmp
sbb
jp
iret
in
mov
movs
mov
and
cmp
cld
idiv
xor
in
in
cmp
leave
and
push
cld
(bad)
mov
loop
pop
push
ins
and
popf
mov
dec
cmp
adc
dec
add
cmp
jmp
repnz
leave
aad
fimul
in
push
cmp
mov
jbe
fwait
dec
xchg
dec
push
sub
sbb
and
mov
bound
mov
lods
jae
outs
xor
icebp
mov
mov
or
out
xor
(bad)
push
cmp
pop
ja
inc
das
rol
xchg
or
sbb
cmp
mov
daa
shl
or
push
stos
repnz
outs
loope
fisttp
call
inc
fcomp
retf
push
push
imul
sub
mov
cs
adc
inc
push
call
sub
mov
pop
ins
cld
dec
add
and
pop
stos
movs
jmp
push
dec
mov
retf
add
ret
adc
inc
in
out
jmp
sahf
xchg
int
fisttp
outs
pushf
hlt
jo
cmp
xchg
jl
adc
cmp
xchg
push
es
xor
dec
or
sub
les
push
add
mov
sbb
dec
cmp
pop
jg
dec
aas
cmc
mov
call
ins
jne
push
fidivr
shr
jp
pop
pop
lods
pusha
jmp
mov
jmp
xchg
sub
sar
lods
lock
sbb
and
or
out
lahf
mov
mov
je
lods
out
dec
xchg
aas
jae
mov
pop
push
dec
imul
jo
push
inc
sar
sar
mov
(bad)
pop
gs
rcr
sub
pop
shr
out
xor
fadd
aas
and
in
mov
push
test
cdq
imul
mov
scas
or
mov
arpl
ret
aad
push
inc
cmc
call
cs
pop
shl
stos
and
(bad)
cld
cs
dec
pop
add
push
cld
fidiv
push
addr16
cmp
sub
sbb
fidivr
mov
(bad)
xchg
add
sbb
or
add
lods
jns
push
out
sub
pop
test
cmps
stos
xor
enter
sub
cmp
clc
scas
cld
scas
je
mov
xlat
mov
jno
nop
xor
pop
nop
or
xor
int3
int
sub
mov
aad
outs
stos
stc
xor
dec
jg
or
(bad)
push
out
dec
sub
les
and
iret
pop
std
add
push
ins
mov
sar
add
test
ins
aaa
or
or
fs
push
sub
xchg
mov
mov
es
je
repnz
or
(bad)
sbb
xchg
jno
push
imul
mov
out
pop
pop
fidiv
mov
mov
mov
rcr
neg
pop
je
push
fisttp
popf
xor
and
std
jg
dec
jecxz
shl
fstp
push
jp
sub
push
cwde
xchg
push
call
ds
mov
xchg
int
mov
sub
cmp
add
dec
sbb
repz
aam
push
(bad)
test
cli
xchg
daa
or
push
jmp
push
(bad)
ja
test
or
jno
div
lds
lods
gs
push
dec
mov
stos
fld
mov
out
push
mov
test
dec
xor
ja
jp
dec
and
fcomp
sbb
sar
fwait
dec
or
xor
xchg
ins
mov
js
inc
fstp
shr
sbb
pop
mov
sahf
push
xor
xor
jb
in
daa
adc
pop
pop
mov
outs
mov
rcr
fcomip
test
std
(bad)
test
push
retf
push
push
xchg
imul
add
(bad)
call
stc
ds
push
mov
cmp
adc
jb
push
cmp
gs
and
sub
sbb
mov
jne
retf
stos
pop
add
mov
push
iret
rcl
test
jg
adc
mov
inc
push
or
dec
or
data16
pop
dec
inc
outs
leave
aam
cld
clc
mov
pop
and
ins
les
cwde
ret
les
ret
jno
add
popa
mov
outs
adc
icebp
pop
mov
(bad)
scas
sbb
push
sub
es
test
push
inc
dec
xlat
mov
mov
mov
fwait
ret
hlt
sbb
dec
lods
inc
and
jnp
dec
ins
int
out
dec
arpl
stos
dec
jne
(bad)
ins
(bad)
sub
adc
setns
rol
ret
inc
adc
scas
in
test
dec
mov
jge
push
lods
hlt
bound
add
cli
out
std
rol
and
add
out
mov
(bad)
mov
push
xadd
mov
js
mov
sub
or
xchg
add
psubb
mov
xor
xlat
jae
outs
pop
jb
movs
stos
outs
fwait
jae
fs
jo
lahf
and
xchg
dec
sti
cmp
rol
es
in
hlt
call
sti
cdq
(bad)
push
sti
xchg
ret
sbb
sub
mov
stos
cmp
mov
cli
dec
in
mov
xor
pop
outs
xchg
aas
loope
mov
jbe
scas
std
bound
in
fidiv
sub
popa
mov
cmp
out
sub
aas
push
loopne
xchg
out
(bad)
xor
cmp
mov
hlt
sbb
repz
gs
cmova
pushf
cli
pop
sbb
jmp
adc
adc
pop
inc
jb
arpl
outs
(bad)
in
pop
lds
out
mov
dec
add
and
pop
cdq
imul
sbb
scas
sti
(bad)
xchg
daa
shl
mov
into
icebp
or
mov
dec
pop
or
popa
pop
div
test
mov
mov
stc
mov
pop
jne
push
call
add
jmp
not
inc
sar
pop
pop
mov
test
ret
sub
cmp
or
fldenv
cmps
cmp
xchg
dec
ins
(bad)
addr16
lock
pop
mov
stos
cs
jp
mov
call
inc
cmps
mov
or
pusha
xchg
fidivr
xchg
xor
jbe
add
xchg
mov
xchg
xchg
push
push
sahf
push
mov
cli
or
fnsave
(bad)
fimul
cmc
je
frstor
xchg
sqrtps
das
movs
push
push
pop
iret
(bad)
jle
adc
adc
adc
xor
test
sbb
jno
xor
inc
adc
push
pop
pop
lea
das
jle
test
or
jbe
sbb
push
retf
lds
sbb
mov
cdq
cli
das
out
lock
jge
ja
clc
ins
pusha
ins
xor
pop
xor
call
inc
cmp
xchg
dec
rol
push
shl
fnsave
(bad)
and
mov
mov
fist
aas
mov
(bad)
je
adc
jmp
xchg
fisttp
ja
add
mov
hlt
xchg
and
aas
test
into
test
jno
int3
lahf
sbb
adc
jb
call
adc
jmp
pop
cmps
test
shl
out
inc
call
jl
inc
test
sub
nop
retf
push
inc
rcr
mov
nop
pop
push
(bad)
sub
cmp
mov
jecxz
and
pushf
sti
in
shl
(bad)
ds
pop
(bad)
xchg
scas
scas
cld
mov
inc
cdq
mov
cli
inc
pop
loope
ja
mov
mov
repnz
xchg
test
sar
cld
sub
cs
mov
fst
(bad)
cmps
outs
mov
push
(bad)
adc
xlat
dec
push
xor
mov
xor
mov
outs
sbb
push
movs
cmp
push
jne
xchg
push
sbb
test
adc
call
dec
or
jle
jp
mov
jmp
stos
sub
adc
mov
xor
mov
aad
push
and
mov
lock
into
and
fwait
mov
pop
(bad)
sub
sar
stc
das
iret
loop
fsubr
add
outs
repz
mov
add
lods
pushf
sbb
test
add
xor
cld
mov
out
push
daa
jns
jp
stos
das
or
jno
xchg
stos
mov
js
xchg
dec
ss
dec
inc
mov
dec
add
dec
push
jge
(bad)
arpl
lock
loop
sbb
inc
sbb
int3
mov
or
push
or
movs
mov
jg
fsubr
lahf
test
mov
int3
adc
out
std
sbb
adc
fs
mov
dec
cmp
in
pop
add
(bad)
(bad)
in
icebp
iret
mov
mov
out
ins
retf
push
movd
(bad)
cmp
repnz
stos
cmc
add
into
outs
cli
dec
mov
pop
hlt
jnp
aad
or
jmp
xor
push
or
xchg
add
or
adc
push
push
jnp
stos
std
mov
outs
or
out
scas
pusha
add
test
pop
mov
xchg
jmp
push
inc
xchg
inc
mov
jae
imul
mov
mov
stc
add
dec
int
mov
jg
cwde
es
xchg
dec
fidiv
jne
adc
xor
test
add
xor
sbb
pop
xchg
sahf
sub
int3
pop
xchg
or
sbb
mov
sti
es
mov
push
dec
push
aas
or
rcl
ret
adc
iret
out
sub
test
cmp
inc
stos
call
adc
aaa
je
jp
dec
xchg
inc
stos
and
loopne
mov
and
jp
in
jle
fs
mov
adc
int
or
test
movs
cmp
xlat
inc
xor
xchg
repnz
xlat
pop
fstp
pop
adc
or
push
out
retf
cmp
ret
jge
test
dec
mov
jp
mov
mov
ret
add
mov
xlat
adc
ror
(bad)
aas
inc
clc
retf
outs
xor
addr16
sbb
rcl
fs
(bad)
les
mov
push
xchg
arpl
iret
sub
sbb
gs
xor
mov
xchg
stc
adc
push
(bad)
(bad)
cmp
call
xlat
cdq
push
in
or
adc
test
sbb
clc
std
add
mov
ror
mov
jns
daa
jb
mov
or
cmp
arpl
neg
xchg
and
mov
adc
xor
inc
or
test
xlat
jmp
fcomp
fsubr
sub
adc
jg
aad
test
add
jecxz
mov
mov
xor
mov
scas
dec
mov
shl
mov
out
test
sub
rcl
mov
mov
pop
rcr
or
loopne
fwait
cmp
push
movs
pop
mov
xor
das
(bad)
sbb
inc
cmp
out
pop
test
ret
dec
sets
jne
cmp
push
call
cmp
adc
mov
out
sbb
test
or
ins
shl
and
jo
ins
clc
cs
sub
outs
mov
mov
and
inc
pop
pop
push
test
into
push
outs
cmps
inc
ror
mov
mov
mov
lock
cmp
mov
mov
or
add
cmps
xchg
mov
ror
pop
jecxz
addr16
addr16
mov
pop
mov
cmp
ret
movs
fisubr
or
call
adc
retf
in
div
mov
daa
xchg
add
push
popf
inc
cmp
leave
and
jbe
cmp
dec
leave
or
xchg
dec
lahf
push
mov
jmp
rol
fisttp
xor
je
int
inc
sub
sbb
mov
cld
push
ror
cwde
mov
sti
ficom
and
mov
fwait
scas
sub
test
(bad)
sti
mov
mov
xchg
xchg
ret
cmp
and
add
shl
and
and
pop
pop
into
push
push
mov
mov
jae
imul
lahf
mov
enter
inc
shr
pop
cmp
and
push
icebp
lds
jb
jb
aad
aam
jns
stos
pusha
in
les
push
enter
out
stos
out
inc
mov
mov
and
ins
retf
mov
mov
pop
mov
or
dec
sub
add
ja
fidiv
inc
sbb
popa
sti
jl
mov
inc
aaa
xchg
and
xor
lods
enter
mov
pmullw
imul
push
imul
sti
jne
lea
ret
push
adc
popf
xor
sbb
adc
ret
or
mov
dec
mov
(bad)
jmp
(bad)
pop
jnp
out
xor
repnz
stos
mov
xchg
aas
xchg
jge
cmc
sub
adc
pop
xchg
push
(bad)
lods
add
std
sbb
test
je
std
pushf
or
outs
int
test
stc
call
nop
leave
in
mov
push
sub
cmps
or
icebp
lahf
movs
stos
inc
je
jnp
xchg
aam
mov
jmp
dec
fstp
and
ret
into
or
ror
pop
inc
push
xor
xor
into
retf
dec
hlt
add
das
imul
push
scas
mov
dec
or
and
or
pop
dec
sub
push
sbb
cwde
pop
iret
arpl
in
scas
cmc
cmps
jnp
xchg
or
add
jmp
mov
or
and
mov
xchg
repnz
movs
xchg
inc
ret
rol
fcmovnb
loope
ins
mov
clc
fstp
sub
ret
push
jp
inc
inc
aaa
loopne
mov
cmp
push
or
and
pop
sbb
sbb
xor
or
xor
or
mov
les
mov
jae
js
imul
rol
mov
out
pop
movs
jle
jmp
call
std
push
ds
ror
in
jmp
sbb
or
mov
mov
fld
push
inc
push
cld
xor
sbb
cmp
jne
dec
inc
sub
lds
sub
ret
js
cmp
bnd
push
gs
in
repnz
repz
mov
mov
dec
inc
adc
mov
in
xchg
js
lahf
dec
stos
jne
dec
push
xor
stos
jp
ds
into
fs
jne
jp
and
mov
ins
sbb
mov
fmul
fstp
out
inc
mov
cdq
mov
and
ins
mov
ds
pushf
sub
sar
pop
repz
push
push
pop
jge
clc
ret
scas
push
bound
leave
cwde
cmps
mov
inc
lods
or
rcr
ins
dec
push
xchg
out
(bad)
mov
cmp
push
popa
cmc
sbb
xor
dec
ror
das
dec
inc
(bad)
mov
es
xor
imul
push
cdq
rcl
in
dec
stc
outs
jmp
adc
call
iret
fs
xchg
jae
xor
addr16
int
add
sbb
pushf
xchg
adc
popa
dec
imul
es
mov
imul
repz
mov
push
pop
sbb
cmp
movs
rol
pop
jmp
mov
les
(bad)
call
fs
mov
imul
cs
jmp
std
add
rol
lock
cmc
lea
and
imul
int3
scas
scas
imul
jecxz
rol
mov
lock
fisttp
pop
fwait
dec
lds
lea
mov
pop
inc
dec
stc
aas
jbe
mov
or
xchg
call
mov
shr
stos
pop
xchg
in
(bad)
push
enter
jmp
scas
frstor
adc
retf
movhps
adc
xor
fdiv
cmp
xchg
cmp
mov
fild
fisubr
daa
sti
aad
dec
cmp
or
addr16
loope
popf
push
sub
cmp
and
aam
mov
adc
mov
push
push
dec
cmc
xor
pusha
into
neg
stc
test
lea
add
mov
ror
sbb
ins
mov
(bad)
ja
ror
loope
and
bound
or
lahf
or
(bad)
sbb
loope
or
mov
js
or
in
mov
pushf
clc
iret
das
inc
call
dec
call
aas
push
(bad)
mov
cmp
retf
mov
cmps
xchg
jne
sbb
adc
aas
sbb
jge
(bad)
sub
add
daa
push
xor
std
nop
inc
cld
loopne
out
movs
movs
jo
dec
adc
jno
xlat
imul
xor
adc
test
ja
mov
push
xor
xchg
inc
cmc
mov
jbe
imul
repnz
xlat
fild
mov
mov
push
xchg
pop
adc
stos
into
cmp
outs
mov
bound
fist
push
add
jne
outs
xor
call
cli
sbb
cld
push
in
imul
rcr
mov
inc
sbb
fisub
and
cmc
xchg
in
nop
pop
inc
xchg
mov
adc
leave
pop
add
jmp
mov
daa
sbb
fadd
mov
cmp
leave
inc
xchg
add
outs
dec
add
xchg
xor
loopne
or
cmp
mov
cli
mov
mov
stos
enter
sbb
and
outs
push
cdq
in
das
les
mov
cvttps2pi
xchg
inc
xchg
lock
pop
mov
mov
pop
or
or
repnz
fbstp
cmps
sub
jp
pop
int3
mov
or
cld
mov
pop
(bad)
repz
mov
adc
and
xchg
mov
mov
xchg
fadd
(bad)
and
xchg
dec
sahf
add
xchg
mov
rcl
int
pop
and
popf
and
push
(bad)
pop
ret
jp
ret
mov
adc
xchg
scas
cmp
ins
mov
mov
inc
mov
xchg
rcr
lods
pushf
sub
adc
sbb
lods
and
jmp
or
xor
push
arpl
cwde
xchg
hlt
lock
mov
or
hlt
leave
jp
shr
sbb
or
or
push
jg
(bad)
xor
loop
dec
pop
lahf
xor
push
pop
int
in
dec
repnz
sbb
cs
leave
sbb
imul
xor
cs
pop
movs
pop
imul
fcomp
xchg
fisub
push
mov
shr
mov
xor
mov
retf
nop
push
mov
jp
mov
outs
rol
mov
ins
or
cmps
mov
pop
(bad)
push
jmp
or
xchg
(bad)
mov
xor
mov
dec
cld
int3
lea
ins
cli
ja
jge
xor
out
mov
mov
jmp
ficom
jnp
scas
ja
mov
loope
cmp
pusha
mov
xchg
daa
pop
ret
jne
retf
cmp
mov
mov
xchg
mov
into
pop
cs
mov
mov
pop
pop
mov
enter
out
cdq
mov
not
dec
or
and
(bad)
mov
mov
test
push
mov
mov
dec
mov
movs
fidiv
inc
test
mov
clc
test
cdq
cmp
fwait
mov
(bad)
mov
pop
add
mov
xor
mov
add
pop
and
mov
push
sbb
jb
jge
sub
xchg
(bad)
push
aas
or
mov
addr16
outs
not
mov
pop
pop
pop
mov
scas
fwait
pop
sub
jmp
lods
cwde
loope
mov
out
(bad)
in
adc
mov
loope
pop
pop
mov
call
cmc
jb
cdq
int3
test
sub
jp
out
scas
(bad)
cmp
xor
push
cwde
dec
inc
or
clc
movs
fcomp
pop
(bad)
pop
add
cmps
lea
ins
data16
scas
mov
and
int
cdq
cld
jg
out
and
pop
cmp
inc
jp
or
mov
aad
pop
inc
arpl
mov
inc
add
js
jnp
stos
dec
(bad)
retf
or
inc
mov
inc
push
add
xchg
cmps
es
xor
scas
dec
lds
mov
scas
push
loopne
jle
mov
cwd
lock
mul
cmps
and
inc
rcr
sub
mov
jp
xlat
int
and
retf
test
repnz
sbb
push
mov
adc
shl
sbb
test
xchg
arpl
mov
mov
mov
jae
or
mov
rcl
mov
mov
out
or
cmps
shl
xor
cli
je
xor
outs
pushf
je
jnp
cmp
aaa
int
ror
pusha
mov
retf
retf
push
jl
je
mov
rcr
test
mov
daa
dec
xchg
arpl
cdq
clc
dec
lock
jae
and
test
daa
push
sub
cmps
xchg
inc
add
jno
mov
dec
mov
loopne
adc
and
in
pop
push
in
cs
inc
sub
sub
push
dec
daa
lods
push
ins
ins
popf
out
or
pop
pop
mov
int3
or
ins
inc
pop
shl
sub
cmp
jl
mov
pop
mov
aad
movs
jmp
call
inc
and
enter
ins
in
inc
inc
jecxz
push
push
pop
sub
popa
or
mov
mov
or
fild
dec
jp
outs
jmp
xchg
gs
rol
xchg
sar
sub
jo
mov
mov
jecxz
(bad)
int
mov
or
ret
shr
sbb
push
test
and
push
test
xchg
xchg
push
mov
imul
sbb
test
loop
je
neg
movs
adc
pop
mov
cdq
shl
dec
jno
aas
ja
add
push
push
dec
pusha
inc
adc
xchg
add
sar
cmp
cld
mov
es
pop
mov
pop
icebp
and
inc
ins
test
sub
aas
dec
test
(bad)
es
sub
fld
xchg
and
stos
inc
xchg
outs
mov
cmps
cmp
repz
arpl
add
dec
mov
ror
mov
sbb
fchs
nop
push
mov
push
inc
jbe
mov
add
out
mov
dec
mov
xchg
pop
das
cmps
(bad)
xchg
fistp
mov
movs
std
push
xchg
add
xor
(bad)
das
xor
jecxz
jae
out
mov
fcmovnbe
in
inc
sbb
lock
push
in
ins
mov
stos
push
pushf
nop
cld
nop
xchg
xor
jle
test
or
ins
jecxz
aam
stos
inc
dec
pushf
mov
sbb
iret
ds
dec
mov
pop
out
ror
push
cmp
sub
lock
je
(bad)
repz
aaa
fisttp
push
mov
sub
and
xlat
in
mov
fwait
clc
sub
and
adc
fld
jg
sub
retf
pop
or
adc
addr16
daa
add
mov
mov
adc
(bad)
mov
fsubr
xchg
push
mov
js
aad
adc
dec
pop
xor
lds
dec
push
inc
pushf
add
leave
xlat
push
xor
xchg
fs
xchg
pop
inc
int
push
xor
imul
adc
dec
jg
mov
(bad)
xlat
fidivr
adc
push
loop
xchg
inc
or
(bad)
pop
addr16
cli
out
inc
fld
fisttp
nop
call
jmp
outs
into
mov
sub
cwde
jnp
in
jbe
pop
into
(bad)
(bad)
mov
cmp
xor
cmps
aam
inc
and
(bad)
int3
movs
in
int
jecxz
addr16
stos
mov
fldcw
sbb
jno
clc
add
or
aaa
or
sub
mov
pushf
out
jno
and
cdq
mov
pop
rcl
pop
and
retf
mov
mov
outs
std
pop
fld
mov
xor
icebp
pushf
and
hlt
pop
les
ficomp
(bad)
push
push
xor
sbb
test
retf
push
xor
jp
dec
in
fnstsw
dec
jmp
ror
pop
mov
jns
ds
arpl
sbb
jmp
mov
mov
popf
js
fldenv
rol
shl
mov
cmp
xchg
push
mov
add
push
jno
sti
jb
jle
loope
sbb
pslld
scas
cmp
mov
ins
idiv
jmp
sub
ja
cmp
out
add
sbb
cmp
mov
sti
loop
push
lea
js
test
lods
in
repz
daa
lods
jl
xchg
scas
pop
mov
shl
cmp
icebp
xchg
(bad)
scas
(bad)
sbb
shl
sbb
add
pop
cmp
xor
hlt
das
xchg
sti
dec
add
xchg
mov
fmul
mov
push
mov
mov
adc
push
dec
jmp
je
fisttp
mov
lods
ins
lea
jne
popa
shl
cmp
and
les
js
mov
lock
shl
xor
add
test
mov
aam
outs
pop
arpl
adc
add
xor
sbb
mov
dec
jmp
dec
movs
sbb
add
int
sbb
push
inc
inc
mov
lods
xchg
iret
dec
dec
xor
xchg
cmps
scas
outs
fwait
pop
add
ja
inc
mov
add
(bad)
dec
outs
jl
loop
push
mov
dec
out
push
movs
ins
inc
xor
sbb
movs
pop
adc
daa
test
call
icebp
lods
and
scas
adc
out
pop
cmp
in
int
nop
in
adc
pop
jmp
sahf
les
nop
or
aaa
outs
clc
mov
add
xchg
inc
movs
shl
xor
pop
cwde
sub
stos
push
add
aam
outs
jno
pop
xchg
test
jecxz
pop
jne
dec
das
adc
pause
ret
cld
xchg
xchg
pop
js
cmc
cmps
push
test
mov
lds
mov
push
or
and
lahf
movs
push
pop
mov
push
mov
inc
rcr
pop
fld
mov
mov
lods
and
mov
cmp
test
jb
pop
add
test
add
xchg
inc
movs
repnz
rcr
xor
cmps
and
or
outs
sub
jp
fiadd
xor
pusha
int3
sub
mov
popf
scas
repnz
push
sbb
icebp
sbb
adc
jbe
iret
xchg
ss
leave
mov
xor
xor
arpl
or
xor
(bad)
jbe
inc
jecxz
xor
loop
retf
xor
or
mov
cli
int3
lods
push
pop
mov
inc
lods
adc
or
(bad)
stos
pop
call
xchg
adc
cs
cmp
icebp
push
mov
inc
cmps
cmp
jmp
sbb
cwde
inc
mul
scas
dec
ret
hlt
xchg
push
in
out
(bad)
jg
dec
add
dec
jbe
inc
inc
imul
mov
or
xchg
out
xor
dec
or
idiv
movs
xchg
in
add
pop
les
(bad)
gs
je
ret
sub
push
mov
retf
movs
imul
xor
sub
mov
mov
pop
inc
out
mov
hlt
call
loopne
enter
pusha
dec
sbb
fmul
loop
and
cwde
rcr
pusha
inc
or
jnp
(bad)
(bad)
aam
add
mov
xlat
pop
int
mov
rol
inc
bound
mov
popf
aaa
mov
pop
sbb
cmp
adc
sbb
cmc
ret
inc
clc
jo
lock
mov
into
je
push
cmc
xchg
mov
cmp
(bad)
mov
jo
dec
in
gs
adc
push
sbb
mov
popf
cmc
cmc
shl
xor
add
movs
sbb
fistp
mov
and
jo
and
inc
outs
mov
(bad)
xor
xor
mov
js
(bad)
push
adc
nop
mov
cmps
or
sbb
jo
in
mov
inc
nop
or
ret
cs
icebp
xchg
and
jno
aam
dec
sub
push
jno
push
data16
and
and
out
xor
mov
dec
scas
mov
push
sbb
jns
clc
jl
xlat
pop
mov
or
aad
mov
xor
clc
dec
cmps
(bad)
data16
xchg
mov
(bad)
fsubp
pop
cld
xor
mov
mov
dec
stos
retf
call
jne
pop
cdq
movs
scas
addr16
outs
xchg
jp
push
xchg
retf
cwde
push
sub
mov
(bad)
push
cmp
int3
jmp
iret
dec
mov
lahf
loop
popf
mov
pop
psraw
sub
ins
nop
adc
add
gs
jmp
hlt
mov
cdq
sbb
dec
ficomp
sbb
(bad)
int
push
mov
imul
cld
jmp
and
imul
lds
int3
imul
jg
cmp
loop
adc
mov
shl
pop
(bad)
mov
adc
or
or
push
sbb
mov
dec
cmp
sbb
rcl
lds
inc
mov
sbb
cmp
jge
xchg
sbb
sbb
dec
scas
xor
ins
push
fst
adc
popa
xlat
loopne
lea
sub
jne
xchg
repz
enter
aas
mov
sub
jo
sub
fimul
add
xchg
test
std
dec
xchg
in
mov
pop
jnp
mov
shr
or
cmp
dec
or
inc
(bad)
inc
cdq
int3
imul
pop
or
add
aas
add
scas
pmuludq
je
xchg
and
loopne
scas
or
add
mov
aad
adc
leave
and
stc
cdq
popf
in
pop
test
mov
or
arpl
in
neg
xor
push
dec
sbb
cmp
mov
ins
test
and
andps
out
popa
dec
add
jo
popf
mov
pop
or
in
xor
inc
sbb
imul
pop
cld
pop
fidiv
es
sub
adc
dec
xchg
cdq
push
xchg
es
or
jle
loope
icebp
repnz
push
sub
push
out
test
pop
sbb
push
xchg
hlt
imul
aad
lock
jo
push
pop
shr
lds
inc
pop
xchg
dec
xchg
add
jo
stos
add
loop
xor
imul
dec
push
adc
lods
add
aam
retf
into
cmp
add
enter
jmp
daa
or
shl
xor
scas
sbb
shl
jmp
(bad)
ret
aaa
cmp
adc
inc
cmp
rcr
mov
ret
sbb
or
repz
mov
cmps
in
xor
pop
fst
and
dec
jae
js
cmp
mov
(bad)
arpl
aaa
inc
push
aad
das
xor
cdq
(bad)
jmp
(bad)
cdq
or
fbld
in
or
and
sti
retf
dec
xor
xchg
mov
fsubr
mov
mov
retf
icebp
pop
adc
mov
push
jl
fimul
mov
pop
jge
in
call
sbb
fs
mov
mov
jnp
and
retf
(bad)
push
fsub
xchg
xchg
test
cmp
pushf
ins
add
sub
mov
push
ds
xchg
cmp
mov
pop
test
cmp
sbb
aaa
in
mov
sbb
enter
jl
loope
lods
not
jno
cwde
shl
outs
fdiv
dec
fcmovbe
cld
lock
and
push
jmp
adc
adc
aaa
pop
test
std
dec
mov
jb
and
dec
sbb
sbb
mov
in
adc
(bad)
jne
or
lahf
push
movs
push
scas
xor
scas
stos
cmp
mov
(bad)
nop
jbe
or
stos
popw
shr
bsr
iret
inc
movs
xor
sbb
iret
addr16
retf
push
out
mov
pop
adc
cmp
out
xor
inc
mov
mov
repnz
or
jge
test
cmp
mov
or
sbb
sar
test
cmp
fidivr
mov
add
mov
inc
repnz
sti
xor
out
les
hlt
xchg
jg
arpl
push
add
outs
aad
mov
ret
into
or
mov
mov
or
mov
in
mov
pop
loop
jl
mov
jg
addr16
icebp
cwde
outs
lods
mov
inc
push
in
retf
bound
aam
mov
pop
das
fcom
mov
clc
cdq
out
push
xchg
mov
mov
lahf
xor
outs
repnz
jns
fcmovne
icebp
mov
jb
mov
mov
or
fdiv
jb
aam
ja
ficom
mov
xor
lock
adc
in
mov
leave
adc
test
adc
std
outs
xor
sbb
cmp
pop
adc
and
iret
enter
mov
jns
pop
xchg
xchg
scas
and
inc
mov
ret
loop
inc
or
aam
adc
test
push
xchg
and
enter
or
cmp
out
add
cld
arpl
sbb
pushf
dec
jle
fs
jl
in
cmp
cs
je
push
jne
inc
into
xlat
shl
call
cmps
cmp
add
inc
adc
ror
push
jmp
cmc
mov
inc
mov
push
retf
xchg
mov
push
inc
stos
xchg
mov
fsub
jle
ds
jge
sbb
pop
lock
jbe
stos
adc
pop
push
(bad)
fldcw
pop
adc
xor
into
jecxz
sub
imul
fstp
pop
fcom
mov
addr16
jbe
xor
jnp
pusha
loop
jno
and
mov
xchg
xchg
out
add
stos
mov
push
and
push
imul
mov
push
pop
fmul
xor
sub
cwde
xor
sbb
mov
dec
in
fadd
les
xchg
sbb
retf
xchg
imul
xlat
xchg
popa
dec
std
jg
cmc
push
scas
ret
push
sub
fcom
ss
icebp
test
les
imul
lods
lds
xchg
into
(bad)
scas
sbb
sub
aas
pop
mov
cmp
jns
movs
stc
imul
inc
pop
xchg
fldcw
and
mov
sbb
sbb
fwait
xchg
loop
or
sub
call
stos
rcl
xchg
add
xor
pop
fdivr
lea
std
cld
fwait
jecxz
ds
loopne
cmc
lahf
adc
hlt
test
shr
push
jecxz
inc
adc
call
movs
test
mov
mov
or
sti
fmul
aad
mov
movs
mov
out
js
and
pop
rol
fmul
ror
retf
fwait
dec
push
enter
push
dec
push
mov
ret
stos
sub
into
cmp
enter
inc
add
cmps
fsub
and
mov
jecxz
nop
dec
loop
out
adc
xlat
rcr
pop
or
dec
push
popf
jbe
jno
jno
test
sbb
es
retf
pop
fcom
shr
mov
aas
rol
push
fiadd
je
xor
movs
nop
cmps
ja
adc
xchg
retf
cmp
addr16
popa
mov
and
adc
cmc
cmps
es
ins
jno
sbb
mov
not
mov
sub
sbb
daa
enter
push
sub
xchg
push
outs
addr16
pop
mov
sub
(bad)
les
stc
hlt
les
sub
out
cmps
std
iret
inc
retf
(bad)
adc
sbb
mov
jae
stos
sub
jecxz
fdiv
cmps
inc
adc
xchg
mov
cmp
fidivr
cmp
cwde
jl
rol
xchg
movs
jmp
loopne
mov
shr
mov
adc
ins
cmp
leave
adc
mov
pop
jae
sub
nop
jns
stos
mov
retf
dec
movs
pushf
xchg
aad
xchg
mov
jmp
add
adc
sti
pusha
loopne
xchg
sub
and
shl
test
xchg
or
add
gs
mov
or
pop
addr16
test
mov
test
push
inc
cmps
test
fnstcw
inc
aas
out
cmp
inc
push
pop
mov
mov
fucomi
lods
inc
mov
pop
hlt
add
ret
jbe
xchg
inc
out
mov
jmp
ret
call
mov
ja
xchg
mov
xor
pop
jp
icebp
in
push
add
daa
outs
jle
hlt
xchg
push
add
int
fdivp
cwde
fstp
sbb
add
shl
popa
jle
ins
inc
sbb
fs
in
mov
xlat
pop
and
repnz
lds
and
pop
test
mov
lea
adc
retf
sbb
test
test
cli
sti
and
jne
adc
push
sbb
dec
fistp
mov
adc
ret
sub
cs
rcl
fild
fisttp
and
sbb
jmp
ror
daa
push
mov
cmps
xchg
cmp
mov
ins
js
and
jp
fst
out
test
into
imul
xchg
dec
or
jge
ins
or
adc
push
adc
fs
pop
jle
sbb
(bad)
adc
mov
ins
das
out
lock
jp
or
and
xchg
scas
inc
push
mov
movs
fsubr
addr16
repnz
out
fisub
jmp
(bad)
cmc
add
into
iret
and
fadd
stos
sar
scas
xchg
inc
test
call
jmp
or
js
lahf
std
(bad)
mov
fs
pop
or
and
test
imul
xchg
ins
fcomp
adc
stc
push
jecxz
repz
push
cmp
add
ins
imul
mov
inc
cmps
pop
sbb
jae
dec
push
inc
stos
setae
push
in
sub
mov
fwait
xchg
push
shr
mov
cdq
shl
(bad)
pop
push
enter
add
jge
mov
jp
pop
sysret
int3
pop
mov
retf
adc
cwde
icebp
scas
ja
jp
mov
sar
cmps
shr
fcom
push
pop
push
xor
push
add
arpl
enter
mov
icebp
(bad)
jl
int
xchg
inc
pop
ret
mov
sub
loope
aaa
xchg
fcmovne
xlat
icebp
sub
mov
add
xchg
or
inc
sar
mov
dec
(bad)
out
cdq
mov
sbb
bound
pop
xchg
cmp
sub
sbb
popf
jae
dec
dec
int
stc
movs
sub
mov
daa
mov
xlat
adc
pushf
loop
(bad)
add
hlt
and
repnz
mov
jp
inc
aam
inc
cwde
les
addr16
xchg
pop
add
call
sahf
arpl
mov
in
mov
test
popa
inc
mov
jae
and
es
sbb
jl
ins
hlt
popa
push
add
cs
lea
mov
movs
fld
rol
jbe
sbb
test
sbb
xchg
adc
push
js
int3
repnz
in
(bad)
dec
jecxz
push
(bad)
mov
js
retf
and
dec
mov
out
sub
ret
mov
add
dec
mov
cmps
arpl
sub
push
icebp
xor
dec
add
jns
xchg
sbb
lods
movs
and
test
sbb
mov
hlt
xor
add
inc
push
mov
outs
add
sbb
xchg
jne
mov
stos
cmps
xchg
cmp
dec
into
pop
and
jp
sti
xchg
pop
jecxz
leave
in
test
repnz
inc
mov
or
aas
push
aam
jns
and
loop
cmp
add
pop
pushf
fisttp
pop
imul
xor
add
rcr
repnz
mov
and
in
mov
xor
xchg
jnp
stos
je
add
cmp
clc
out
sub
sub
sbb
cmp
call
xchg
ins
mov
and
or
stos
jmp
adc
or
(bad)
cdq
idiv
call
cmp
mov
pop
sub
ret
data16
or
push
sub
imul
jns
fcmovb
cmc
es
dec
add
mov
into
mov
pop
xor
inc
push
push
push
cmp
cs
movs
add
and
mov
frstor
adc
jns
shr
cmp
mov
std
sbb
lds
xchg
pop
inc
mov
and
call
sti
mov
xor
pop
xlat
std
ffree
popf
or
mov
aad
daa
dec
pop
das
xchg
inc
ss
mov
pop
loop
clc
mov
bound
cmp
and
je
and
lea
movs
pop
cmp
jno
rcl
ret
mov
pcmpgtw
shl
cwde
xor
aam
pop
mov
sub
xor
xchg
ja
(bad)
adc
std
hlt
add
out
mov
dec
xchg
jno
jb
loopne
ss
mov
inc
test
push
xor
jmp
fsubr
frstor
mov
pop
call
fdivr
add
sar
cdq
cli
pop
iret
xchg
nop
xor
jge
imul
loopne
pop
loope
jmp
aas
inc
rcl
inc
push
push
jge
jb
mov
xor
adc
mov
sti
pop
loop
je
icebp
xor
imul
enter
pop
repnz
scas
push
push
fs
pushf
mov
add
mov
xchg
mov
mov
aam
push
mov
push
cmp
and
imul
mov
adc
fninit
loope
addr16
outs
imul
stos
lods
inc
mov
xor
sbb
inc
movsx
push
mov
and
push
or
(bad)
sahf
sahf
sti
adc
mov
jae
push
and
add
sub
mov
jno
sbb
add
rcl
and
test
enter
xlat
dec
lods
jge
into
adc
les
jo
arpl
rcr
mov
nop
test
bound
pop
and
jmp
enter
stos
xchg
dec
sub
dec
push
ins
mov
out
xlat
cmps
mov
jno
xor
xlat
(bad)
cmp
mov
int
test
ss
addr16
pop
inc
movs
and
pminsw
push
arpl
jbe
xchg
push
mov
add
cmp
aas
and
jge
jnp
aad
je
cmps
xchg
xchg
xor
retf
sti
out
adc
add
into
xlat
mov
popf
enter
sbb
nop
push
adc
mov
dec
adc
out
mov
mov
adc
pop
retf
jmp
xchg
nop
(bad)
ins
mov
add
jo
xor
or
and
test
jns
lods
sbb
das
mov
pop
jbe
ficomp
shl
test
push
lods
jns
sub
adc
sbb
ins
pop
test
xchg
(bad)
xchg
jae
call
rcl
stc
mov
movs
xchg
adc
lahf
in
mov
(bad)
in
repz
mov
pop
outs
xor
test
imul
sar
mov
xor
fmul
xor
test
into
dec
mov
jmp
mov
sub
xor
and
xchg
push
mov
cwde
dec
sar
cld
retf
push
ja
inc
stos
or
and
arpl
cmp
loop
fild
sti
les
das
sub
(bad)
cmp
push
sbb
cmp
ss
jbe
rcl
xchg
jne
mov
int
sbb
mov
retf
push
add
add
popf
cmp
stos
dec
aad
jne
sub
mov
xlat
adc
movs
cs
adc
ins
scas
jmp
clc
mov
(bad)
mov
mov
fcomp
js
test
mov
push
lds
mov
call
push
daa
stos
fsubrp
jbe
mov
retf
in
sub
std
xchg
push
cmp
fdiv
int
push
and
movs
push
cmps
xchg
jo
stos
jge
retf
xor
mov
jl
mov
jmp
clc
in
(bad)
or
mov
cmps
aad
ins
xor
and
jecxz
jbe
push
test
test
icebp
fs
push
and
lods
es
jbe
or
add
xor
sti
xchg
daa
jne
in
push
mov
int3
xchg
xor
and
shl
mov
dec
lea
and
sbb
pop
cmp
inc
jecxz
not
push
outs
je
mov
adc
jae
cld
jae
lods
shl
mov
jmp
pop
outs
jno
fistp
shl
jne
add
mov
call
pop
(bad)
je
push
jmp
nop
pop
or
push
(bad)
outs
fdiv
and
mov
enter
push
pusha
mov
jmp
pusha
push
sbb
and
es
push
jne
retf
pop
xor
loope
in
enter
sar
ja
in
push
and
pop
fs
dec
sti
push
inc
movmskps
mov
cdq
cmps
sbb
xchg
push
jb
popa
pop
test
repz
scas
fistp
stos
mov
mov
fsubrp
xor
test
sub
loop
icebp
pop
fmul
push
or
outs
cs
and
mov
xor
push
loopne
sub
sub
inc
fst
test
movs
cmp
cmp
push
push
popa
shr
jmp
imul
es
adc
addr16
sub
inc
popa
xchg
out
jecxz
jp
jnp
cmp
xchg
jmp
push
mov
popf
adc
aas
sbb
fwait
stos
mov
enter
push
into
js
jb
push
pop
mov
sbb
mov
mov
jno
or
mov
pop
call
push
jg
data16
fld
jae
mov
and
inc
xchg
inc
popf
jnp
and
sub
add
aad
pop
(bad)
xor
adc
shr
int
xor
sbb
and
inc
cmps
sbb
out
dec
inc
mov
dec
or
inc
enter
jne
add
test
pop
jns
test
add
ja
inc
add
mov
inc
fwait
jbe
and
cs
dec
test
inc
mov
sub
xchg
call
aaa
pusha
int3
fcmovbe
mov
push
data16
add
fcmovne
cwde
adc
cmps
sbb
in
or
xchg
cmps
movs
mov
push
stc
or
ret
ja
ins
dec
sar
aad
cmp
jmp
xchg
popa
out
(bad)
xchg
imul
cmp
fmul
push
pop
cwde
loope
push
test
addr16
mov
mov
xchg
ret
sbb
(bad)
ds
(bad)
je
jnp
add
shr
aad
push
add
sub
cwde
neg
test
arpl
lods
test
imul
mov
sbb
test
xchg
inc
cmp
add
pop
xor
mov
lock
gs
pop
push
out
(bad)
jl
stos
jo
sub
add
xor
pop
mov
out
jo
sub
dec
push
dec
pop
lods
jle
xchg
jmp
jmp
adc
call
fs
jno
push
dec
(bad)
mov
inc
inc
and
cmp
inc
loop
push
sbb
mov
out
xchg
leave
sub
retf
cmp
jo
or
mov
sub
mov
iret
in
cmps
sbb
cmp
aas
scas
lds
(bad)
pop
adc
xor
(bad)
lods
mov
cwde
cmps
fist
dec
mov
or
sar
jle
sahf
stos
mov
add
retf
mov
fcom
sti
cmps
mov
fwait
retf
es
inc
idiv
jne
in
lock
dec
sbb
addr16
jg
in
loop
push
mov
mov
stos
mov
jo
add
pop
mov
das
mov
das
mov
add
in
or
aaa
xor
lock
cmp
add
mov
cmp
or
cmp
pop
fcom
js
je
xor
xor
dec
pop
mov
cmp
in
xor
xchg
cmp
sar
int
push
imul
push
addr16
aas
mov
addr16
mov
ins
movs
jns
out
sbb
xchg
mov
ret
nop
(bad)
dec
mov
arpl
leave
add
xchg
and
push
cmp
rcr
dec
sub
jns
sar
push
xchg
ss
mov
xchg
xchg
ins
cmc
aad
test
adc
push
cmp
jns
ret
popf
std
inc
mov
std
push
bound
rcr
aad
jo
add
retf
sub
pop
mov
push
mov
xchg
adc
ss
inc
xor
dec
js
pop
les
aam
icebp
icebp
iret
push
arpl
or
mov
jle
and
mov
(bad)
mov
fist
cli
(bad)
js
jae
xor
inc
mov
or
dec
add
popa
ins
jne
mov
inc
adc
xor
cmc
arpl
cld
mov
std
lds
and
daa
pop
dec
stos
in
stos
jne
xor
out
mov
sub
sub
pop
and
pop
or
jns
into
cmp
or
xchg
mov
fs
push
test
and
mov
adc
push
sub
sbb
add
jp
pushf
cmps
jle
xchg
push
push
cmp
push
ins
dec
pop
sub
aaa
dec
inc
jmp
popa
sub
rol
pop
stos
(bad)
cmps
in
inc
in
je
jmp
dec
stos
imul
mov
loopne
addr16
ins
adc
(bad)
xchg
int3
add
jae
mov
dec
loop
jbe
xor
add
sub
cmp
and
push
add
inc
aad
das
add
gs
aam
sbb
clc
inc
popf
loope
pop
imul
shr
pop
jmp
mov
daa
stc
jecxz
mov
sub
adc
xor
push
loopne
lea
enter
ja
lds
add
jne
aaa
aad
test
into
push
loopne
mov
ss
test
sbb
adc
(bad)
retf
not
fdivr
loope
jnp
pop
fst
je
xchg
movs
or
loop
pop
fist
pop
inc
mov
add
mov
sti
mov
movs
mov
jb
add
call
xor
daa
xor
call
fdivr
pop
call
add
cmp
std
or
cmp
imul
fsubr
ret
cmps
push
(bad)
scas
push
inc
jg
mov
xchg
mov
push
add
sub
imul
int3
ss
push
xchg
and
jbe
push
xor
in
add
mov
into
inc
pop
stos
mov
add
mov
out
xor
pop
in
aad
hlt
repnz
mov
shr
pop
test
in
fstp
fs
mov
jb
daa
(bad)
and
nop
xor
test
into
mov
mov
pop
test
mov
in
clc
shl
outs
xor
in
mov
jno
xchg
xor
mov
dec
loop
cmc
xor
mov
xchg
add
movs
or
or
fcompp
mov
out
push
mul
nop
sbb
cmp
mov
mov
scas
inc
jge
out
dec
push
xchg
iret
popa
sbb
mov
xchg
pop
xchg
data16
xchg
dec
pop
stos
add
ficom
movs
fisubr
xor
sub
(bad)
popa
or
enter
push
fst
lock
arpl
retf
mov
push
popa
and
dec
cmps
add
mov
push
aas
sub
lods
xor
test
add
scas
sub
pop
(bad)
cmp
scas
(bad)
push
hlt
ja
jne
stos
cld
leave
sub
sub
loopne
in
pusha
mov
jmp
mov
cld
mov
and
arpl
jmp
into
iret
outs
clc
mov
pop
cs
imul
outs
loopne
fimul
in
neg
sub
jecxz
push
jne
je
in
lahf
int
push
call
xor
in
cld
or
xor
or
mov
cmp
out
mov
int
in
and
mov
fdiv
cmp
pop
popa
adc
stos
add
inc
add
lods
dec
cmp
movs
mov
jae
and
push
adc
inc
xor
lods
mov
mov
mov
(bad)
dec
imul
mov
push
int
loop
out
sub
not
sbb
shl
xchg
or
sbb
mov
cmp
and
ins
jl
ret
mov
sar
jae
clc
xchg
in
xchg
(bad)
push
call
xchg
adc
mov
test
xor
jl
xor
std
scas
std
mov
jge
leave
mov
mov
aam
add
inc
call
xchg
mov
jmp
add
xchg
sbb
jl
push
push
out
sti
fmul
xchg
push
adc
jnp
jp
rcr
mov
je
adc
xchg
jmp
push
sahf
pushf
out
xor
jbe
sub
xor
into
das
inc
inc
or
sahf
push
das
cmp
or
jl
int3
pop
cmp
outs
iret
xchg
fisub
jmp
adc
leave
inc
dec
dec
pop
imul
adc
shr
adc
mov
mov
dec
cmps
cmp
retf
xor
sti
fwait
je
inc
retf
jbe
scas
and
xchg
out
pop
sar
enter
push
retf
jg
repnz
sbb
pop
icebp
outs
sbb
popf
mov
xchg
push
stos
xchg
mov
jae
dec
test
call
or
fs
cli
cmp
ja
std
push
jge
mov
in
inc
cmp
(bad)
test
aam
xchg
push
iret
(bad)
hlt
add
mov
mov
enter
(bad)
push
scas
pop
cmp
icebp
les
xor
xchg
sub
dec
fwait
into
ins
sub
mov
movs
xchg
or
in
and
ret
mov
mov
sti
jp
dec
xor
push
popa
aad
sub
fisttp
fsub
xor
sti
aad
dec
mov
xchg
enter
scas
retf
(bad)
jo
push
mov
lds
imul
fisubr
sar
cld
pop
inc
iret
(bad)
mov
std
inc
jl
sbb
jne
arpl
fadd
int
push
cmp
inc
in
call
ja
lock
jl
sbb
addr16
aad
aaa
mov
xchg
xor
sbb
daa
mov
inc
adc
mov
xchg
jns
data16
inc
dec
out
retf
or
loop
xor
dec
adc
cmps
xlat
xchg
push
mul
inc
jmp
dec
shr
mov
xchg
lea
test
pop
dec
cwde
jge
xor
je
iret
jmp
pop
sub
jmp
ret
imul
mov
leave
xchg
(bad)
mov
dec
cli
sub
and
mov
jge
inc
dec
xchg
ja
hlt
das
(bad)
popf
xor
xchg
scas
sbb
jo
add
adc
icebp
das
nop
adc
push
inc
and
das
in
(bad)
sti
stc
mov
imul
pop
outs
dec
or
jp
jp
scas
inc
adc
sbb
aad
jle
fstp
add
lods
out
(bad)
jg
test
mov
aad
jl
dec
or
xchg
adc
dec
or
adc
sbb
dec
leave
in
or
or
inc
and
shl
fcomp
gs
adc
mov
adc
bound
outs
iret
xor
xlat
inc
fld
adc
stos
clc
cwde
jo
leave
fistp
cld
pop
pop
sub
and
mov
mov
out
mov
mov
pop
cmps
fisubr
pop
sub
sbb
jae
pop
int
call
outs
pop
mov
aaa
fld
(bad)
jmp
jne
or
xchg
sub
pop
fsubr
xor
mov
mov
stos
or
cmps
push
shl
out
ficom
into
mov
(bad)
cwde
fs
scas
bound
out
les
adc
xchg
sahf
cwde
xchg
iret
out
pop
(bad)
test
jbe
stc
test
pop
pop
and
in
ret
in
retf
sbb
dec
rol
jb
mov
pop
xchg
jno
jp
cmp
call
mov
mov
(bad)
(bad)
out
ins
or
movs
and
push
and
test
pop
pop
ins
stc
xor
jecxz
add
(bad)
call
daa
xchg
push
mov
push
ss
push
and
aad
mov
or
jg
push
fsub
mov
push
jp
inc
ja
cmp
jmp
shl
cmc
push
std
cmps
fsub
stos
pusha
int3
sbb
push
sbb
xor
xchg
not
ror
inc
push
xchg
xchg
push
mov
shl
mov
inc
bound
or
pushf
imul
sbb
sub
scas
xor
cli
test
out
xor
cmps
js
cmps
gs
push
pop
sbb
inc
into
pop
mov
(bad)
sub
loopne
xchg
enter
or
adc
outs
and
xchg
sub
xor
jecxz
dec
fcomip
mov
loop
bound
(bad)
dec
into
gs
call
sbb
in
jge
in
dec
cmp
dec
mov
fidiv
pop
dec
mov
dec
loopne
mov
adc
bound
push
mov
cwde
scas
adc
mov
mov
push
cmps
std
out
sbb
stos
and
test
sbb
scas
lds
out
mov
and
add
mov
loope
sar
dec
dec
pop
ds
cmp
leave
jmp
inc
xor
jge
jl
mov
mov
mov
xor
test
push
dec
(bad)
retf
adc
js
pop
test
add
(bad)
out
not
sbb
mov
scas
cmps
sub
aas
ja
cmp
pop
add
pop
pop
cli
rcl
(bad)
idiv
fisubr
lidtd
add
sub
jecxz
sub
popa
inc
xchg
add
jne
and
xchg
ds
jl
and
and
jno
inc
push
ins
retf
ins
and
push
mov
mov
push
sub
xchg
mov
loop
mov
fnstcw
sub
xor
sahf
sbb
fld
mov
repz
pop
jne
inc
sbb
pop
mov
pop
(bad)
pop
je
mov
or
and
sbb
xor
push
inc
into
in
fwait
or
sbb
aad
aad
frstor
lea
push
mov
imul
jle
cwde
inc
add
and
mov
push
fidivr
pop
or
dec
(bad)
mov
dec
cs
sbb
xchg
in
in
mov
(bad)
lahf
inc
test
dec
pop
mov
push
inc
lock
jg
fsubr
and
mov
xor
and
push
test
or
mov
in
jbe
rcr
cmc
imul
movs
mov
sbb
stos
in
ds
mov
jmp
xchg
add
in
sbb
das
test
cmp
ins
sub
sbb
aad
adc
mov
mov
mov
scas
rcl
xor
mov
mov
lock
cwde
imul
sti
(bad)
stc
popa
mov
push
out
int
ror
sbb
mov
sbb
shl
rcl
mov
jg
aad
imul
ja
add
scas
add
xor
retf
clc
rol
sub
jle
stos
push
(bad)
into
xchg
sbb
fld
sbb
outs
aam
mov
nop
sbb
jae
jbe
and
cmp
or
cmp
push
pushf
mov
cmp
ffreep
lahf
lock
push
(bad)
cmp
sbb
add
ins
ss
fwait
push
jo
sbb
adc
ret
retf
pop
lds
push
test
dec
jbe
es
cwde
inc
test
ret
cmp
in
pop
xlat
es
mov
mov
push
inc
mov
(bad)
adc
push
xor
bound
xor
jmp
inc
cld
aad
xor
adc
shl
mov
or
pop
and
pop
mov
aam
out
in
loop
sub
or
pop
or
repz
adc
mov
test
(bad)
int
mov
cmc
xor
dec
into
push
mov
jns
adc
retf
je
xor
add
(bad)
xchg
and
repz
test
xor
cli
das
stc
add
out
aad
lods
mov
push
es
mov
push
fidivr
(bad)
push
fiadd
jg
push
pop
xchg
and
daa
fnstenv
and
sbb
push
add
xor
inc
das
mov
fidivr
mov
mov
sbb
lods
test
jae
jl
mov
hlt
(bad)
ret
fs
movs
leave
mov
sub
xor
pop
mov
scas
add
inc
pop
inc
outs
(bad)
mov
int
jecxz
pop
inc
push
fnsave
js
into
jns
cdq
ss
in
pop
das
sub
sbb
shr
movs
aad
jmp
mov
loope
mov
xchg
sbb
loop
and
mov
pop
ret
loope
or
dec
push
and
dec
xor
sub
lods
jb
mov
xchg
fldcw
xor
neg
div
call
cmp
mov
xchg
clc
into
lds
cmps
int
cmp
push
adc
cld
fst
mov
(bad)
sbb
pop
std
pop
and
cmp
and
pop
mov
clc
es
adc
adc
adc
outs
push
sub
and
or
jecxz
push
outs
add
je
sub
mov
xchg
xchg
aad
out
push
sub
movs
jl
popa
push
(bad)
sub
(bad)
mov
or
scas
ins
push
out
dec
jg
cwde
ss
xor
push
inc
call
pop
mov
(bad)
in
cmp
dec
repnz
sbb
xchg
or
test
mov
int
xchg
cs
mov
sti
out
inc
inc
out
in
int
or
popf
jnp
or
dec
fwait
or
das
push
fnstsw
into
(bad)
and
cmp
movs
jb
dec
ret
cs
jae
mov
minps
call
sbb
mov
xor
fild
hlt
lahf
and
and
das
jae
jb
mov
sub
popf
ret
bound
dec
push
mov
popf
in
test
int
test
inc
hlt
mov
cmp
and
outs
adc
mov
add
fidivr
xor
mov
mov
add
push
add
into
scas
in
sub
pusha
push
dec
fistp
xor
xor
out
(bad)
sub
inc
add
add
mov
int3
mov
fwait
icebp
pop
jmp
call
inc
inc
ins
pusha
sti
pop
stos
jmp
(bad)
retf
push
and
cli
repnz
js
(bad)
push
or
and
xchg
hlt
jl
jns
cli
mov
pop
xor
aam
not
ja
icebp
int
pushf
(bad)
fcom
inc
inc
in
dec
adc
inc
dec
cmp
xor
push
jmp
loopne
mov
sti
jb
cmps
mov
daa
or
stos
into
mov
mov
(bad)
jg
jecxz
dec
stos
int3
je
add
add
pusha
pop
jg
cdq
pop
dec
into
push
jge
pshufw
xor
pop
sbb
push
mov
inc
outs
retf
xor
sub
ret
xor
mov
pop
les
adc
push
fcom
cmps
inc
mov
retf
retf
mov
push
push
dec
push
test
cmp
(bad)
daa
pop
mov
lea
div
mov
cmp
and
call
mov
cmp
call
adc
fnstsw
push
sti
mov
adc
jecxz
aad
cmp
ja
cli
mov
and
shl
adc
test
lods
sbb
push
movs
pop
ret
ds
pop
or
and
jne
sbb
in
movs
mov
out
pop
add
or
cmp
push
cmp
sub
xchg
test
add
retf
push
xor
jno
aad
pushfw
inc
call
jmp
pusha
xchg
js
mov
push
(bad)
fnstcw
and
mov
arpl
push
fisttp
sbb
arpl
push
enter
jmp
push
mov
(bad)
in
push
enter
mov
retf
ret
xor
adc
adc
xchg
sub
cwde
scas
ror
jae
imul
cmp
cmps
add
cmp
inc
and
add
jg
cmp
lea
push
cmc
icebp
in
pop
addr16
xor
out
cmps
xchg
push
pop
mov
loopne
movs
fstp
xchg
jecxz
fxch
xor
mov
lea
lea
push
adc
cmp
enter
out
or
jmp
mov
je
push
std
les
cli
or
mov
xchg
inc
fs
pop
mov
sub
test
mov
lea
ins
push
in
stos
das
sets
jb
inc
adc
jns
or
stos
fwait
jp
js
scas
fbstp
div
dec
sbb
ins
mov
xchg
sbb
loop
mov
mov
pop
push
add
into
repz
jns
xlat
fs
int
cmps
pop
dec
jmp
shl
int
adc
adc
mov
in
test
rcl
push
cmps
nop
ds
xchg
adc
sbb
arpl
mov
shl
push
and
(bad)
jl
mov
or
cld
aaa
ins
ret
test
inc
sbb
sub
aas
out
jne
ds
mov
iret
outs
pop
xlat
jns
sub
mov
lock
lds
mov
fdiv
cmps
fistp
jle
imul
pop
(bad)
notrack
movs
mov
data16
mov
mov
out
push
pop
pop
xchg
push
into
loope
mov
pop
xor
adc
inc
jnp
nop
pop
xor
jmp
adc
clc
fidivr
jp
aas
sub
add
aaa
or
mov
mov
jnp
push
ror
in
pop
cmp
movs
or
or
push
add
inc
call
movs
fisub
xor
add
sub
adc
(bad)
vmovhps
ins
mov
mov
sbb
test
xchg
xor
call
xchg
test
(bad)
movs
inc
jle
push
push
mov
push
lds
dec
enter
add
(bad)
mov
or
inc
ss
dec
fidiv
cmps
dec
inc
cli
sub
xchg
imul
call
push
adc
push
fistp
cmp
jg
inc
les
cs
or
xor
cli
mov
(bad)
out
xor
aaa
pop
mov
xor
pop
jge
rcl
sub
(bad)
pop
mov
dec
sub
jno
stos
mov
push
xchg
ins
ja
(bad)
xchg
ss
popa
shl
jle
ret
sub
je
sub
ins
bnd
xchg
xchg
mov
pop
fsub
cmp
adc
sub
cli
stc
cmp
lods
popf
(bad)
ja
cmps
std
or
(bad)
lods
add
adc
pushf
in
cmp
add
cmp
stos
shl
jmp
addr16
mov
outs
xor
dec
mov
pop
mov
jno
out
dec
xchg
daa
mov
retf
mov
int
shl
jno
sub
or
in
pop
retf
mov
ins
sub
aam
mov
xor
cmp
mov
mov
cmp
repz
jno
jno
pop
pop
fld
mov
aad
mov
jg
or
dec
popa
outs
lods
jge
leave
loopne
add
dec
sti
loopne
push
push
fdivr
xchg
mov
test
mov
push
hlt
mov
pop
mov
jg
dec
cli
ins
jns
mov
mov
inc
xchg
sahf
arpl
lahf
(bad)
xchg
inc
sub
das
and
call
popa
sub
mov
shl
and
(bad)
loopne
mov
loop
lods
pop
push
inc
stos
push
in
xor
push
mov
sbb
push
push
lods
ficomp
xchg
cmp
or
sub
inc
mov
push
data16
jne
push
pop
pop
push
jb
jns
loope
sbb
mov
dec
cmp
xor
sub
jne
mov
add
icebp
call
ja
mov
(bad)
pop
ret
movs
push
add
push
xor
lods
jae
call
inc
cmc
int3
adc
push
pop
int
sbb
jb
out
push
sbb
xchg
sub
and
arpl
repz
mov
pop
sti
jle
lea
test
ror
dec
mov
push
sub
cmp
jno
sub
pop
mov
xchg
in
mov
test
(bad)
inc
pop
(bad)
add
mov
xchg
or
(bad)
stc
pop
adc
fcomp
mov
out
adc
jno
mov
rol
(bad)
jmp
call
or
inc
jns
mov
jnp
sbb
sbb
rcl
sti
loop
mov
mov
(bad)
push
xor
stos
jmp
fldcw
mov
push
outs
jecxz
mov
pop
add
inc
sahf
pop
ret
pop
pop
iret
dec
sbb
sbb
xchg
popf
outs
not
fbstp
adc
xchg
and
pop
repnz
aas
shr
push
in
(bad)
jecxz
repz
jae
dec
xor
mov
mov
mov
jle
jne
add
ror
adc
pop
fwait
(bad)
dec
push
mov
push
jmp
inc
ins
fdiv
ds
mov
push
cmp
xor
jo
adc
das
pop
les
(bad)
adc
je
lahf
mov
rcr
fbstp
xchg
pop
inc
fwait
mov
xor
addr16
loop
lods
jno
or
add
fisub
(bad)
sbb
cli
call
leave
mov
test
and
and
xchg
aam
test
pop
inc
mov
(bad)
mov
inc
mov
inc
jno
push
js
push
or
push
cwde
aaa
pop
xchg
xchg
jne
test
xlat
ds
and
cli
call
out
test
xor
pop
sbb
shr
jbe
jle
ficomp
hlt
or
mov
push
xor
jecxz
in
mov
mov
les
fadd
xchg
arpl
daa
stos
sbb
js
loope
ja
in
add
div
mov
add
push
cmp
popf
fdivrp
push
jecxz
not
jo
in
scas
adc
imul
pop
lahf
pushf
jns
sub
dec
fdiv
not
dec
lods
sbb
ror
cmp
(bad)
or
dec
pushf
lea
das
jns
repz
hlt
jns
ins
and
fsubr
std
popf
(bad)
outs
or
dec
(bad)
test
test
retf
push
pop
aam
jo
into
jb
leave
xor
ja
xor
add
out
mov
inc
mov
pop
jl
jl
xchg
(bad)
int3
icebp
ficomp
mov
pop
aam
aam
(bad)
jb
jmp
mov
mov
cmp
sub
hlt
lds
(bad)
shl
fprem1
in
dec
mul
ret
xchg
mov
and
cdq
xor
and
repz
std
nop
lds
nop
add
or
push
xrelease
or
xchg
sub
cld
js
pop
inc
sub
outs
stc
sbb
xchg
pop
add
outs
and
mov
mov
outs
push
mov
adc
loop
std
(bad)
mov
(bad)
ins
ja
push
std
sub
fst
lods
mov
int3
sub
jnp
jle
fs
fldenv
seto
mov
scas
sar
add
push
mov
rcl
adc
mov
and
nop
mov
(bad)
and
lahf
xchg
adc
cmp
sub
push
push
arpl
fwait
dec
add
push
icebp
int
jl
xor
lods
dec
retf
int
out
jecxz
ins
and
jp
loop
push
mul
idiv
loope
mov
push
or
gs
sbb
mov
aas
jp
xchg
icebp
fidiv
add
xchg
push
sbb
loope
pop
inc
dec
xor
push
xchg
fcomp
dec
fnstcw
test
or
push
nop
pop
mov
mov
jmp
mov
xchg
fstp
data16
mov
push
fidiv
aas
xor
call
imul
mov
gs
pop
push
test
es
pop
sti
or
push
cmps
fucomi
mov
imul
mov
fs
je
xchg
jmp
daa
push
sub
jecxz
add
pop
xor
rcl
hlt
hlt
push
shl
adc
mov
(bad)
call
mov
mov
jmp
(bad)
sub
or
push
xchg
adc
pusha
lods
mov
jbe
pop
inc
sbb
loop
movs
fsubp
mov
mov
ins
out
add
rcl
mov
jo
les
and
mov
dec
jae
mov
sbb
cmps
test
bound
fwait
mov
jmp
push
into
xor
inc
pop
mov
nop
in
mul
mov
sub
pop
enter
mov
popf
and
jl
fld
jl
xlat
xchg
xchg
imul
xchg
jge
inc
push
pop
or
cmp
std
mov
jge
mov
icebp
ins
push
test
movs
popf
adc
out
and
ret
xor
jmp
xchg
scas
sub
lock
les
in
out
adc
or
repz
dec
idiv
test
loopne
xchg
and
clc
int3
mov
pop
test
and
lods
cmp
sbb
inc
mov
mov
in
test
pop
add
loopne
cwde
popa
jnp
mov
push
fcomp
jmp
xchg
mov
inc
sbb
mov
out
jp
pop
cmc
pushf
cmp
or
cmp
push
mov
pop
les
jge
sbb
xchg
sbb
pushf
lods
data16
mov
aam
sub
jl
ins
mov
mov
test
or
xchg
dec
mov
mov
mov
pushf
jb
(bad)
out
push
push
xor
fs
sbb
ins
fild
inc
inc
dec
or
out
sbb
fisubr
(bad)
inc
cdq
adc
xor
jne
inc
(bad)
ins
test
dec
inc
sub
adc
sahf
adc
sub
adc
xor
ror
cmps
retf
vpsubq
or
dec
mov
sbb
shl
add
mov
mov
push
pop
xchg
mov
mov
nop
xchg
cmc
ror
dec
push
test
shl
push
out
into
adc
(bad)
leave
push
mov
pop
xchg
sti
into
push
jge
xor
or
enter
sar
pop
dec
scas
in
mov
adc
sbb
pop
jne
fmul
adc
shr
add
sub
mov
and
test
enter
jmp
pop
inc
out
dec
mov
sub
loope
xchg
popa
xchg
popf
xor
test
and
out
out
sub
add
in
jae
out
push
pop
retf
dec
aas
into
jmp
ror
js
enter
xor
sahf
pop
sub
hlt
test
jmp
in
xor
mov
jne
rdpmc
hlt
adc
mov
mov
icebp
scas
inc
(bad)
xchg
sbb
inc
push
jmp
fist
jmp
pop
in
sbb
icebp
das
(bad)
test
cmp
add
mov
out
jno
pop
inc
adc
int
clc
push
mov
(bad)
les
test
adc
loopne
call
xchg
jne
test
loopne
cld
(bad)
jl
push
add
mov
aad
ja
jno
call
int3
dec
jmp
push
adc
fidivr
and
leave
sbb
shl
call
mov
push
mov
stc
xchg
add
adc
mov
retf
mov
rcl
xchg
xlat
in
jns
loop
push
fimul
and
call
sub
jge
(bad)
jae
dec
or
lock
inc
or
mov
jo
pop
aad
(bad)
mov
dec
dec
test
xor
sub
ins
add
pop
or
outs
test
xor
and
dec
xor
add
test
retf
push
adc
mov
aaa
into
jae
jne
cld
sub
cmp
and
add
dec
sti
add
dec
cmps
push
into
test
(bad)
sub
dec
imul
hlt
and
stos
ret
lods
cmps
in
inc
push
lods
or
adc
leave
das
or
push
dec
pop
nop
(bad)
mov
retf
xor
lds
xor
dec
sub
fisubr
sub
inc
push
fwait
jbe
sbb
lock
hlt
bound
shl
dec
nop
cmp
into
jnp
mov
leave
xchg
in
push
sub
fcomp
loop
je
add
sub
xor
mov
push
or
fidivr
arpl
xor
test
(bad)
aam
loope
cmps
jg
jmp
(bad)
sub
or
xor
jo
push
sahf
cwde
and
cmp
and
dec
mov
xchg
cmp
cmp
fsubr
icebp
or
cmp
out
sar
nop
inc
xchg
stc
xchg
mov
push
(bad)
shr
sub
or
or
xor
dec
xor
test
push
fmul
ret
outs
arpl
iret
mov
adc
leave
xchg
mov
xor
aaa
and
sub
mov
jle
push
jmp
and
or
or
sub
cs
fdiv
add
lds
not
pop
mov
gs
(bad)
sti
dec
ds
inc
ins
jl
stos
and
pop
mov
lock
adc
lods
lea
addr16
cdq
xor
push
xor
js
xor
fisubr
push
jns
inc
das
xchg
or
call
xor
sbb
outs
lea
mov
shl
sbb
cmp
or
ret
mov
je
jne
push
push
ret
pop
push
out
imul
or
out
xor
add
adc
and
sbb
cmp
mov
xabort
out
movs
sbb
retf
out
retf
loopne
xlat
or
xchg
xor
jmp
popa
das
and
mov
cwde
aas
pop
cmps
cmp
dec
adc
add
inc
retf
pop
mov
jl
fs
test
sub
cmps
inc
stc
(bad)
arpl
push
pop
arpl
fcom
lods
dec
popa
pop
fwait
mov
call
int3
popa
add
or
out
or
rcl
fidiv
shl
ss
mov
inc
ja
gs
shl
lahf
loop
fistp
sub
cwde
dec
leave
pop
jnp
rcl
fdivr
iret
lods
xor
imul
ss
and
push
and
rcr
jle
pop
in
cli
xchg
hlt
mov
xor
sahf
cli
inc
inc
mov
sub
out
iret
stos
xchg
push
repz
mov
out
xor
mov
pop
into
outs
xchg
mov
cs
xchg
pop
or
outs
shr
cmps
out
clc
pop
xor
add
push
push
lahf
cmp
mov
push
retf
mov
call
mov
adc
aas
inc
mov
or
add
inc
test
dec
jo
add
lds
or
add
leave
xlat
stos
lahf
add
enter
shl
xchg
(bad)
(bad)
icebp
loopne
and
push
nop
popa
sub
fs
sub
jmp
add
inc
rcr
(bad)
xchg
pop
lods
(bad)
test
je
pop
dec
sub
movs
in
not
cmp
aaa
ins
or
jmp
fsubr
xchg
clc
scas
ret
inc
fnstcw
inc
aam
or
ss
adc
xor
test
jmp
int3
cmp
pop
test
stos
dec
pop
push
(bad)
mov
ins
(bad)
xchg
(bad)
xchg
mov
sub
(bad)
mov
scas
jbe
and
mov
imul
add
retf
(bad)
rcl
sub
fiadd
mov
repnz
jl
cdq
xlat
scas
sbb
jp
mov
cmp
sti
je
out
jp
outs
das
mov
mul
jp
xor
or
xor
repz
in
dec
xor
not
dec
mov
js
mov
push
or
mov
lods
jle
xor
js
daa
add
pop
sbb
pusha
jb
rcr
loope
lods
int3
adc
push
cld
mov
pop
push
ss
movs
pushf
gs
cmp
push
fcmovb
idiv
(bad)
fadd
rcl
mov
lods
add
lock
mov
cmp
retf
les
scas
jmp
xchg
sbb
and
gs
or
shl
inc
sub
pop
sbb
mov
push
gs
push
aaa
and
add
or
stc
and
sahf
pop
enter
sub
(bad)
loopne
mov
jns
push
cmp
test
and
retf
aaa
mov
inc
enter
xchg
mov
in
and
icebp
inc
retf
and
fst
inc
jge
xchg
xchg
shr
fs
loop
push
mov
dec
mov
mov
retf
neg
dec
pop
dec
retf
mov
push
out
xor
pop
adc
ror
sub
jns
retf
es
in
sti
mov
dec
jge
lods
xor
dec
mov
fxch
mov
addr16
int3
ins
shl
inc
adc
xor
adc
mov
mov
xor
nop
xchg
push
inc
mov
push
or
dec
xchg
cld
cmps
fbstp
jo
in
xchg
popf
or
cmp
repnz
nop
sbb
ss
js
or
pop
hlt
das
movs
mov
mov
in
and
pop
inc
(bad)
cli
cmp
test
xchg
mov
(bad)
jmp
cmp
inc
sbb
mov
mov
mov
ins
retf
(bad)
cmp
leave
jnp
test
test
cmps
in
xor
mov
sub
cmp
fst
inc
popa
imul
push
jecxz
adc
or
push
xchg
into
dec
pusha
pop
xor
shr
movs
test
push
iret
icebp
ja
aas
inc
movs
sbb
stos
out
nop
mov
jmp
cdq
sbb
call
call
pop
outs
xchg
ret
push
xchg
pushf
pop
mov
pop
repnz
mov
loopne
cmc
or
loop
or
scas
mov
sbb
movs
fld
out
xchg
aad
fisub
mov
sbb
and
lock
lock
push
or
mov
fs
jmp
ds
pop
push
(bad)
pop
xor
xchg
pusha
add
addr16
or
inc
ja
mov
dec
loop
jle
dec
or
jle
shl
xor
cwde
sub
addr16
outs
mov
pop
in
mov
shl
daa
xlat
scas
pop
frstor
jb
not
push
dec
fwait
push
mov
ret
int
cmp
lods
xchg
lods
cdq
mov
push
(bad)
clc
jno
and
leave
adc
cmp
data16
or
in
(bad)
mov
xlat
push
fdivrp
in
push
mov
stc
mov
cmp
push
inc
push
push
jo
aas
mov
mov
fsubr
xchg
fsub
pushf
jae
test
push
ja
fmul
xor
add
inc
sub
mov
sti
dec
imul
arpl
cmc
xor
pop
hlt
dec
push
xchg
ja
shl
cdq
enter
xchg
es
xor
pop
lock
in
in
out
push
add
cmp
popf
push
pop
push
and
and
retf
push
in
int3
jno
stos
push
jbe
jb
and
lds
jge
enter
adc
push
jmp
push
loop
sub
mov
fsubr
(bad)
jnp
aas
or
cmps
dec
jno
cmp
imul
jge
call
fistp
add
ret
cdq
sbb
or
mov
call
outs
adc
gs
and
pop
cld
retf
mov
mov
fcomp
push
jge
sbb
xor
(bad)
jg
not
dec
loop
xor
ins
xor
cmp
cld
mov
xor
fnstsw
inc
lods
test
mov
jno
cmp
popf
popf
cmp
pop
repnz
push
mov
pushf
xchg
dec
retf
fistp
or
(bad)
dec
imul
jb
stos
(bad)
fcomp
pop
jp
pop
push
out
xor
and
jle
jg
imul
sub
es
lods
popf
int3
jb
jmp
add
icebp
mov
push
adc
xor
pop
ins
add
das
retf
jmp
aam
xlat
fdivr
out
jns
(bad)
xor
and
mov
sub
sub
mov
ins
retf
ja
bnd
xchg
arpl
push
in
(bad)
sahf
pop
dec
nop
ror
and
jno
jmp
sub
iret
cdq
inc
(bad)
in
jmp
pop
cmp
mov
cs
(bad)
mov
dec
fdivr
std
stos
ja
xor
outs
fimul
and
imul
xor
test
add
movs
cmp
(bad)
push
stc
dec
pop
jle
jg
push
int
inc
jns
or
ins
addr16
push
push
pop
(bad)
lock
xor
out
(bad)
aad
pusha
loope
dec
movs
jns
xchg
fistp
and
pop
retf
dec
fld
mov
cmp
xor
cmp
popf
into
pop
adc
mov
ret
pop
push
sub
and
arpl
stos
popf
(bad)
cwde
out
les
leave
and
bound
lods
cmp
xchg
mov
cwde
push
cmp
idiv
mov
scas
loopne
imul
outs
ds
repz
pop
push
dec
jb
les
add
fidivr
test
and
pop
pop
retf
push
sub
mov
stos
cwde
xchg
xchg
fwait
rcr
pushf
sub
aad
jo
dec
sub
add
aad
adc
movs
test
push
mov
fwait
jo
xchg
sahf
mov
int
adc
in
sbb
xchg
pop
and
sub
into
lods
xchg
cmp
not
fldenv
xchg
test
movs
jno
call
sahf
loop
retf
add
dec
jo
cmp
mov
fist
out
call
test
in
xchg
stos
repz
dec
and
out
stc
aad
sbb
xchg
mov
shl
jge
lahf
scas
mov
sub
retf
(bad)
das
inc
xor
cmp
mov
add
daa
aam
movs
inc
stc
call
movs
jns
loopne
xchg
test
hlt
shr
inc
add
xor
clc
retf
outs
cwde
dec
fsub
gs
fmul
xchg
bound
out
inc
pop
xchg
test
rcl
scas
int
inc
in
jnp
cwd
add
add
stos
out
js
dec
cmp
adc
push
cmp
add
cli
xchg
sub
imul
push
ins
inc
(bad)
jmp
push
pop
dec
rcl
adc
jne
in
xor
adc
unpcklps
mov
icebp
jns
sbb
mov
sti
mov
daa
imul
adc
mov
pop
les
ds
(bad)
ror
pop
or
mov
int
mov
pushf
je
jns
sub
mov
mov
imul
xchg
adc
xor
leave
iret
jle
pop
jns
sbb
pushf
xor
sub
ds
cld
push
jae
ret
xor
(bad)
scas
(bad)
xchg
jp
ja
fwait
mov
push
daa
mov
ror
sbb
loop
fcom
adc
cwde
fs
imul
jmp
sub
jae
je
xchg
inc
or
fisttp
jge
sti
les
movs
das
xor
sbb
sbb
fcom
and
cmps
push
adc
mov
dec
sub
repz
sbb
pop
out
add
(bad)
mov
jmp
inc
pop
lock
inc
repz
mov
jmp
push
inc
cmp
je
pop
inc
enter
stc
cmp
add
cmp
xchg
fmul
xor
mov
sahf
repnz
ror
add
iret
jae
in
ins
mov
out
sub
mov
loop
add
cli
or
repnz
mov
test
and
fisubr
retf
mov
mov
mov
jbe
in
aam
sub
out
outs
loope
sahf
jne
push
mov
fcom
mov
cmp
repnz
jne
ja
movs
or
sub
xchg
push
inc
imul
sbb
sbb
inc
popf
call
int
cmp
vcvtsd2si
and
ins
sub
jne
fidiv
add
cmp
fst
call
pushf
aaa
clc
push
aaa
and
daa
cmp
push
cmp
retf
pop
mov
popf
out
mov
leave
mov
mov
xchg
mov
inc
xchg
inc
xchg
cmp
test
rol
lahf
(bad)
fisttp
std
mov
enter
push
ret
add
jmp
jb
adc
sbb
sbb
push
push
loope
jnp
adc
sahf
pushf
sub
xor
xchg
adc
and
repnz
push
es
ja
gs
cld
and
ja
or
push
push
sbb
inc
jg
mov
jo
or
push
mov
popa
mov
test
mov
je
sub
mov
std
clc
and
dec
test
data16
adc
ret
push
ins
push
in
and
into
jmp
pop
push
xor
and
shr
stc
shl
lods
das
psrlw
cmp
add
push
sbb
xor
cmp
cmps
sub
sar
sub
ins
or
add
jge
sahf
or
cmps
fdiv
push
adc
in
inc
cs
mov
mov
stos
mov
or
pop
push
retf
xchg
and
jbe
jmp
inc
jb
jne
mov
dec
mov
xor
movs
call
(bad)
in
add
sub
or
repz
pop
rol
lods
stos
enter
test
(bad)
sahf
push
add
je
mov
and
cmps
fnstenv
or
dec
mov
imul
and
nop
jge
pusha
xor
sbb
(bad)
xchg
popa
sahf
dec
ins
sub
sbb
mov
sbb
shl
test
mov
dec
add
xor
add
cmp
aaa
dec
bound
mov
fsub
sbb
fst
add
test
sub
sub
imul
clc
stos
(bad)
sbb
push
mov
jns
test
int3
pop
aad
mov
inc
pop
cmp
fist
fidivr
xor
inc
xor
cmc
jge
mov
aaa
or
or
scas
mov
mov
pop
fbld
push
sub
jl
fld
sahf
cmps
adc
imul
push
popf
pop
or
scas
push
mov
sar
lods
mov
aaa
mov
xor
mov
or
not
pop
sbb
jmp
aad
fwait
jl
ficomp
test
les
adc
sub
sbb
ja
mov
and
dec
ret
sub
cld
ins
inc
sbb
sbb
leave
mov
pop
mov
cld
mov
pop
loopne
aam
(bad)
movs
outs
ja
push
mov
or
imul
inc
std
sbb
fwait
scas
ja
ret
call
jnp
xor
xchg
sub
aad
dec
mov
outs
add
sub
push
(bad)
repnz
or
cld
cmps
(bad)
xchg
(bad)
div
lahf
repnz
mov
mov
sar
loop
fs
fwait
int
fld
pop
or
mov
shr
jo
pop
sti
xchg
in
mov
shl
dec
and
sbb
dec
inc
test
rcl
data16
jge
and
mov
mov
aad
sbb
cmp
mov
fcmove
jnp
outs
mov
push
in
cmp
xchg
mov
aam
call
mov
jb
mov
icebp
daa
mov
imul
sub
adc
aam
mov
pop
and
retf
or
(bad)
mov
push
fmul
and
pop
mov
cwde
xor
pop
add
or
push
arpl
icebp
sub
sar
in
xor
inc
xchg
lea
pop
mov
cmp
imul
mov
mov
mov
mov
xor
jmp
sub
vpslld
jecxz
dec
push
pop
outs
push
and
push
sub
clc
pop
jle
sbb
and
shl
mov
ds
lods
mov
add
cmp
repz
in
in
xchg
sbb
cmp
cmp
xchg
and
jo
shl
fst
dec
mov
push
jns
sub
aad
jno
push
(bad)
repnz
mov
jle
jbe
enter
fldenv
mov
aas
ins
pop
or
dec
push
mov
lds
add
in
and
(bad)
addr16
sar
push
call
jp
pop
sahf
imul
stos
ds
xor
ret
std
xchg
scas
add
mov
mov
dec
cmp
mov
or
mov
push
neg
mov
mov
fstp
or
out
ror
movs
loope
daa
push
fdivp
jmp
dec
je
shl
pop
les
add
or
test
aad
adc
es
or
pop
out
in
mov
loope
(bad)
push
(bad)
jmp
pop
add
in
sbb
sbb
clc
pop
fs
sub
ret
sub
mov
or
inc
jle
lea
leave
xchg
xchg
adc
xor
enter
sub
sub
dec
and
mov
ds
gs
aaa
mov
xchg
(bad)
sbb
or
retf
sub
or
xor
cmp
out
stos
mov
or
jmp
mov
(bad)
rcl
inc
enter
sub
int3
inc
repnz
mov
or
out
jno
(bad)
das
mov
push
jle
mov
jecxz
xor
dec
jae
mov
xchg
push
dec
hlt
repnz
(bad)
push
ret
fistp
adc
loopne
xor
scas
cmps
ret
fs
sbb
push
xlat
or
add
hlt
fwait
push
movs
or
movs
mov
jbe
jmp
pop
mov
gs
sahf
adc
fstp
out
sti
or
popa
xor
add
gs
jno
call
movs
inc
xchg
jl
fs
daa
xchg
adc
test
mov
in
mov
mov
in
jae
loopne
jnp
inc
mov
cmp
inc
out
(bad)
xchg
jne
addr16
ror
daa
push
mov
sar
loope
test
mov
popa
es
pop
xchg
popf
or
mov
inc
ret
repz
outs
push
jnp
mov
cmp
cmp
sub
out
fs
or
data16
popa
adc
push
repnz
pop
cmp
xchg
nop
add
ins
cmp
push
adc
xchg
xor
push
movs
repz
inc
call
mov
cmp
inc
(bad)
std
mov
rol
sub
pop
add
jge
dec
fist
pop
or
jmp
adc
in
not
cs
sub
push
push
sbb
outs
hlt
mov
jo
js
or
inc
lods
jnp
inc
into
cdq
jecxz
sbb
mov
mov
xchg
data16
sub
inc
mov
in
lds
add
sbb
ja
pop
ds
int3
mov
(bad)
mov
fsub
loop
xchg
(bad)
mov
outs
inc
xchg
dec
sub
aaa
adc
mov
lahf
(bad)
push
push
xor
or
add
div
loopne
outs
push
aaa
sbb
mov
push
xchg
add
mov
xchg
fst
add
jmp
aas
arpl
add
mov
and
std
or
inc
sti
mov
push
fwait
mov
fs
fs
popf
lds
dec
inc
aaa
cmps
pop
leave
cmp
mov
sbb
arpl
(bad)
leave
cmp
sbb
push
data16
mov
fbld
xchg
cmps
popf
push
rcr
aam
and
cmp
mov
cs
stc
lock
mov
out
dec
xor
in
ins
leave
hlt
test
arpl
cs
rol
push
dec
xchg
fiadd
and
call
push
jge
nop
add
xor
mov
sahf
scas
cmps
mov
idiv
adc
add
fst
sub
in
pop
in
mov
dec
dec
in
push
pop
dec
push
jno
mov
(bad)
pusha
xor
or
dec
adc
sbb
mov
cmp
sub
cmps
sub
scas
or
add
clc
neg
sbb
icebp
mov
mov
pop
push
imul
jne
sbb
mov
adc
add
(bad)
jmp
in
out
ja
iret
loope
in
stos
sbb
inc
xor
xchg
popf
sbb
xlat
inc
lahf
xor
and
mov
lahf
das
popf
jmp
outs
in
loop
jg
cmp
inc
test
push
mov
enter
mov
jle
fcomp
clc
mov
jne
lea
push
xor
push
add
mov
inc
fst
mov
leave
pop
xchg
aas
pop
std
dec
dec
cmps
push
adc
outs
add
push
pop
cmp
sub
jo
lea
repz
in
(bad)
scas
loope
push
add
inc
xor
imul
js
xchg
mov
sbb
sbb
jno
pop
leave
push
fist
cmp
lods
push
in
(bad)
enter
inc
jecxz
mov
jo
pushf
in
loop
dec
shl
or
mov
jmp
fsub
lds
add
addr16
(bad)
std
inc
jmp
jmp
mov
push
ins
(bad)
imul
dec
mov
jmp
jae
pop
movs
sar
and
test
sar
mov
xor
scas
cmp
lea
pop
cs
sub
adc
cmp
lock
push
enter
inc
jno
xor
shl
(bad)
dec
mov
in
out
test
cmps
and
mov
mov
or
fidiv
test
xor
sbb
sub
push
mov
repnz
fwait
sub
add
repz
mov
aam
dec
adc
mov
fstp
out
xlat
retf
adc
mov
mov
(bad)
imul
dec
jmp
cmp
pop
call
xlat
scas
enter
jmp
mov
adc
adc
xchg
xor
imul
mov
pop
dec
movs
sub
icebp
test
pop
mov
int
test
xlat
push
or
lahf
(bad)
mov
int3
ss
jo
aas
stos
pushw
inc
xchg
ins
in
adc
jge
ret
int
dec
sub
jmp
or
pop
xor
lods
repnz
lds
test
sub
push
jl
pop
into
xchg
mov
std
outs
mov
fidivr
je
mov
jnp
sbb
pop
xchg
xor
scas
add
jnp
mov
shr
inc
(bad)
fidivr
outs
adc
outs
sti
push
cmp
push
jge
mov
outs
in
stc
xchg
in
push
aaa
stos
adc
repz
enter
cmp
jno
sub
pop
inc
scas
push
dec
inc
rcr
mov
jle
std
pop
add
xor
call
inc
mov
pop
in
xor
scas
mov
push
inc
shl
xor
cwde
pop
pushf
pusha
xor
and
std
sbb
cmp
xor
jecxz
pop
cs
mov
add
inc
jl
icebp
test
xchg
lea
or
popf
imul
test
push
sbb
cmps
jl
in
mov
lahf
inc
push
sahf
sub
push
pop
push
imul
xchg
mov
push
push
les
adc
pop
fimul
(bad)
mov
js
jbe
in
mov
fwait
xchg
cs
daa
scas
js
jbe
mov
sti
xchg
bound
ret
or
mov
ret
mov
adc
pop
(bad)
cld
test
popa
lods
sbb
xchg
mov
mov
mov
popa
imul
loopne
push
pop
add
repz
mov
mov
pop
and
js
sti
cmp
dec
sahf
loopne
lds
mov
imul
sbb
into
add
std
bound
mov
(bad)
pop
bsf
repz
test
inc
ficomp
hlt
xchg
sar
push
jae
(bad)
ds
in
imul
xor
jmp
mov
jge
minps
jmp
pop
push
ja
sti
mov
icebp
movs
and
pop
adc
stc
mov
add
in
dec
dec
jae
cli
data16
jb
movs
in
pop
xchg
mov
bound
and
arpl
ret
mov
mov
sahf
xor
test
inc
ret
add
dec
pop
sub
xlat
ds
retf
push
(bad)
sub
test
mov
jne
cs
mov
inc
sub
mov
mov
in
stos
fist
cwde
sub
inc
mov
bound
test
adc
add
lock
mov
loopne
fild
shl
int
push
aas
test
stc
mov
inc
xlat
push
or
jno
sub
iret
(bad)
out
(bad)
and
add
adc
shl
add
ss
push
and
pop
bound
inc
push
fidivr
(bad)
mov
(bad)
loopne
mov
mov
ds
daa
mov
cmp
xchg
pop
jge
mov
call
pop
jae
adc
pop
hlt
in
mov
les
(bad)
xor
fadd
cli
add
cmp
sub
or
cmp
mov
std
and
cmp
iret
cmp
mov
dec
jmp
inc
sbb
sbb
mov
sbb
mov
pop
inc
push
or
fsubr
jl
dec
pop
shr
adc
add
jg
ins
push
push
push
lods
(bad)
hlt
push
xrelease
sbb
cs
adc
inc
and
xchg
mov
test
sub
adc
cli
setl
and
sahf
cwde
jle
mov
pusha
or
hlt
jge
push
push
sahf
push
arpl
push
cmc
inc
retf
mov
outs
xchg
rol
jle
mov
(bad)
aam
mov
repz
in
cmp
pushf
xor
mov
or
js
sub
xchg
fcom
pop
cmp
scas
or
mov
add
test
outs
lods
cs
iret
sub
pop
sbb
sub
cmp
mov
aas
adc
jns
inc
js
dec
aad
test
xor
imul
mov
pop
fimul
add
pop
gs
sbb
push
call
ja
leave
sub
push
dec
das
(bad)
out
cmps
nop
int
mov
push
clc
data16
xor
mov
cmp
mov
rol
add
sbb
adc
dec
jb
jb
and
push
dec
loope
mov
sbb
push
xchg
push
sub
rcr
or
retf
iret
(bad)
stc
adc
mov
xor
in
std
sub
in
sub
xchg
out
inc
add
xchg
mov
mov
xor
xchg
cmps
add
test
in
fcom
shl
icebp
test
cmps
cmc
in
add
mov
mov
pop
mov
int3
add
push
cmps
push
loopne
mov
jl
jmp
mov
jne
cmp
jp
out
enter
add
xchg
mov
cmp
adc
pushf
ja
or
fwait
adc
xor
pop
inc
cli
jecxz
push
push
jns
or
inc
in
test
jecxz
jmp
imul
movs
fisub
push
icebp
sub
and
pop
or
pop
jmp
pop
int
or
pop
push
mov
pushf
mov
fdivr
jb
ds
xchg
xchg
cmp
lds
xor
test
inc
(bad)
mov
adc
dec
jnp
retf
ret
fdiv
(bad)
fsubr
wrmsr
or
shl
push
mov
movs
xchg
in
dec
iret
pop
inc
mov
pop
sti
pop
mov
jnp
or
inc
out
sbb
popa
mul
mov
ins
jl
inc
cwde
pop
dec
addr16
add
leave
ret
lahf
popf
xchg
stc
arpl
mov
inc
or
stc
mov
or
pop
ins
cld
rcr
jne
rcl
(bad)
sub
retf
stos
adc
je
shl
pop
push
mov
xchg
js
dec
repz
(bad)
jl
mov
and
gs
or
lea
dec
jmp
shl
fild
popf
push
enter
mov
push
fwait
(bad)
xor
xchg
mov
push
jmp
jmp
sub
inc
mov
mov
test
neg
fcom
scas
movs
add
pop
adc
inc
dec
aaa
out
jmp
std
mov
or
fs
push
pop
inc
adc
test
adc
jmp
cmp
shl
sub
pop
mov
mov
jle
xchg
mov
mov
cli
cmp
push
jecxz
push
shr
push
int3
nop
xchg
push
jmp
imul
(bad)
cmp
mov
pop
outs
enter
sub
int3
add
lods
repz
mov
imul
int3
outs
sub
push
and
sub
outs
inc
data16
pop
repnz
fdivr
cmp
ror
adc
xor
dec
sub
add
xor
arpl
inc
aas
xor
mov
(bad)
out
adc
test
adc
and
add
call
outs
dec
inc
(bad)
push
in
shl
iret
push
add
mov
imul
pusha
mov
adc
ins
sbb
jle
movs
dec
fnsave
mov
push
ror
mov
sbb
popa
cmp
repnz
add
pushf
aas
enter
inc
out
out
xor
pop
add
stc
cmp
call
dec
outs
pop
sbb
push
push
jmp
inc
pop
xchg
pop
or
ja
jle
dec
aad
stos
enter
and
or
xor
bound
cmps
frstor
iret
aas
push
push
arpl
repnz
add
test
mov
stos
xor
sbb
ss
or
je
sub
cmp
jle
in
ret
test
xor
mov
icebp
std
fs
xor
sbb
xor
test
cmp
mov
add
inc
xor
movaps
(bad)
sub
pop
cmc
mov
jg
xchg
adc
addr16
jecxz
pop
mov
ins
sub
test
sub
rol
scas
das
add
fidiv
inc
sti
es
cmps
xchg
mov
hlt
push
mov
or
lea
xor
and
loopne
nop
bound
test
stos
sbb
and
sti
in
lods
mov
jae
adc
inc
(bad)
pop
xchg
inc
push
sub
pop
rol
and
mov
je
mov
mov
push
repnz
mov
ret
mov
cwde
mov
or
add
jne
adc
movs
push
dec
rcr
fcomp
inc
add
mov
ficomp
icebp
call
cld
jmp
ret
in
pop
xchg
dec
cwde
pushf
loop
std
jbe
push
(bad)
xor
sti
push
enter
clc
scas
dec
fimul
pusha
fbstp
or
loopne
int3
and
jae
mov
or
xchg
aas
(bad)
sbb
rcr
pop
mov
ret
sbb
xchg
std
rcr
mov
add
mov
push
fldcw
mov
retf
out
jb
mov
into
(bad)
xchg
pop
jmp
movs
sbb
outs
push
enter
outs
jmp
cmp
jae
nop
mov
push
icebp
test
imul
jbe
pop
mov
fs
pop
dec
inc
nop
jecxz
cmps
mov
retf
cs
stos
xor
call
dec
inc
sbb
ja
and
pushf
ret
sub
out
and
or
mov
mov
sub
and
les
test
mov
mov
sbb
cwde
iret
add
(bad)
enter
call
sbb
out
cmps
cmp
mov
inc
mov
outs
lea
xor
arpl
mov
inc
sti
push
adc
cli
and
mov
inc
daa
push
or
mov
cmp
cmp
sbb
repz
addr16
call
pop
jmp
ret
or
les
ficomp
fdiv
cmc
scas
push
imul
mov
and
mov
hlt
cwde
push
pop
cmc
mov
and
sbb
pushf
outs
ss
push
push
xor
mov
cmp
xor
hlt
rcr
mov
cmp
mov
pop
stos
inc
loopne
xchg
mov
movs
call
mov
and
lea
push
mov
mov
mov
into
outs
repz
and
inc
pusha
jecxz
lahf
or
xchg
int
fneni(8087
fstp
pop
jb
mov
test
or
mov
clc
xor
movs
cmp
cwde
pusha
cld
(bad)
pop
movs
dec
sbb
les
je
mov
inc
cmp
pop
lds
in
push
mov
gs
in
into
pop
ja
lock
pop
mov
push
lds
pushf
pushf
mov
jl
aad
dec
cmps
popa
cmp
movs
fwait
sub
push
call
xlat
cmc
retf
gs
push
xchg
cld
jb
cdq
fld
sbb
gs
lock
adc
out
push
loope
loope
sbb
retf
(bad)
movs
clc
pop
xchg
int
xchg
inc
sbb
rcr
cmp
scas
das
mov
pop
shr
fmul
std
and
jecxz
sub
in
or
pop
aas
pop
inc
pop
sub
sti
scas
ja
sbb
pop
stc
mov
cmp
addr16
test
stc
or
adc
shl
lds
pop
repz
ret
rcl
jns
add
mov
add
or
push
test
das
imul
mov
pop
retf
fs
rcl
mov
aam
mov
aad
adc
or
test
push
outs
outs
jbe
adc
dec
inc
inc
cli
xor
add
cmp
cmp
xchg
inc
jg
inc
movs
pop
sub
push
jae
cwde
cli
ins
cmp
xchg
dec
jle
push
xchg
ret
add
les
int
jecxz
push
cmp
lods
xor
es
fnstsw
shl
pop
dec
outs
mov
mov
pop
jnp
jae
sbb
iret
pushf
lock
inc
adc
ja
xrelease
leave
cmp
pop
ret
test
pop
loop
test
cmp
inc
mov
xchg
rol
adc
and
jl
shl
dec
jg
xchg
sbb
jg
inc
pop
mov
xor
jo
pop
mov
int
aaa
cdq
sbb
lds
pusha
adc
mov
repz
call
nop
push
dec
stos
loope
ret
pop
dec
push
dec
les
test
outs
jae
mov
mov
iret
mov
loop
outs
pop
adc
inc
jno
nop
push
push
fcmovnb
mov
add
jne
outs
jno
int3
inc
xor
lea
xor
fist
jmp
std
sbb
inc
jg
pop
add
call
jae
sbb
and
xlat
(bad)
out
movs
enter
mov
ret
pop
loop
and
arpl
(bad)
dec
xchg
push
pop
jmp
xchg
sbb
add
xchg
nop
addr16
inc
sahf
jno
pop
sbb
xchg
cs
out
dec
adc
adc
lds
pop
fcom
in
xor
jnp
dec
sbb
sub
xor
or
gs
jnp
cli
arpl
xchg
mov
or
arpl
(bad)
pop
mov
loop
(bad)
fdivrp
mov
dec
adc
mov
mov
mov
stos
push
mov
dec
mov
ret
xchg
fs
fist
(bad)
ficom
pusha
loope
arpl
int
rcr
mov
movs
jmp
test
mov
mov
jnp
or
int
xchg
shr
mov
xor
xchg
lock
push
movs
inc
dec
into
(bad)
adc
ds
fst
rcr
repz
hlt
and
xor
call
dec
sub
xor
push
fistp
iret
and
mov
lods
cmp
add
cmp
into
jmp
mov
xor
adc
and
push
dec
xor
ins
movs
jnp
sub
adc
jmp
retf
ficomp
out
add
xor
scas
sbb
clc
jae
(bad)
xchg
adc
sbb
and
jle
(bad)
scas
das
jno
imul
mov
es
out
mov
data16
push
adc
sub
out
inc
pop
aaa
call
das
pop
adc
scas
lea
clc
es
call
int
pop
pop
add
mov
mov
scas
out
xchg
add
jb
imul
xor
lock
and
jbe
jg
fnstsw
push
push
sar
outs
mov
dec
cmp
ins
mov
lock
cwde
hlt
cmp
ds
cmp
sbb
retf
mov
cmp
xchg
lock
popa
mov
mov
adc
stos
jp
add
lock
out
inc
push
bound
out
cmps
sub
test
pop
call
sub
mov
mov
out
xchg
sahf
jb
das
mov
xchg
pop
pop
inc
fmul
outs
mov
ins
add
fnstcw
imul
retf
movs
push
or
jne
pop
mov
call
mov
or
test
mov
adc
inc
pop
cmps
xor
enter
xchg
shr
test
pop
nop
aam
inc
loop
js
mov
push
(bad)
addr16
outs
daa
xor
push
adc
fwait
xor
jmp
lahf
pop
jmp
cmp
jecxz
or
aaa
inc
je
mov
shl
add
pop
cmps
pop
in
fstp
jge
push
pop
add
arpl
sbb
inc
push
lods
sub
ret
out
pop
nop
inc
push
ret
test
and
xchg
cli
sub
push
std
das
push
(bad)
sbb
push
pop
in
cmc
test
adc
xlat
mov
mov
push
stc
mov
gs
adc
mov
mov
sbb
or
jmp
pusha
data16
xchg
aam
(bad)
jo
bound
adc
out
pop
arpl
(bad)
push
icebp
ds
(bad)
dec
add
fiadd
adc
xchg
in
shr
mov
hlt
fldcw
imul
and
mov
loope
mov
lds
sub
xlat
adc
ret
jecxz
jns
div
adc
ss
push
jle
xlat
mov
ret
movs
sub
xlat
not
sti
xchg
sub
push
dec
test
sbb
jp
or
fsubr
lea
mov
or
aam
jbe
scas
nop
out
std
ret
dec
arpl
adc
pop
jl
(bad)
fwait
and
push
adc
jns
sub
and
(bad)
test
dec
pop
and
push
add
push
pop
pop
scas
ins
out
enter
mov
mov
hlt
cmc
adc
in
cs
popa
cmc
cld
jmp
mov
fld
cmps
mov
fnsave
push
xchg
imul
pusha
mov
cmp
xchg
mov
or
std
(bad)
mov
pop
pop
mov
fdivr
and
div
sar
jp
push
cmp
xchg
frstor
dec
inc
sub
or
mov
inc
jo
mov
sub
fiadd
ins
or
mov
lds
mov
ds
pop
or
adc
ja
jmp
cmp
mov
loop
fsubr
aad
inc
jnp
cmps
cmp
inc
and
int3
cs
inc
xor
xor
test
jae
pop
mov
in
and
cli
jbe
jb
inc
sub
xchg
dec
outs
iret
stos
sti
mov
out
inc
icebp
sub
jg
rcr
ret
ins
push
sbb
nop
xlat
inc
add
mov
outs
int3
adc
(bad)
cmp
clc
int3
fwait
xchg
loop
dec
cmc
scas
jmp
xchg
mov
ins
cmp
jmp
jbe
loope
jae
rcl
jg
aad
sbb
and
in
mov
xchg
xor
ret
sub
add
or
adc
inc
xor
cmp
push
mov
cmps
push
fs
jl
paddsb
movs
cwde
cwde
fidivr
mov
jae
lods
xor
mov
push
xor
push
push
mov
mov
in
dec
scas
fidivr
xor
into
in
xlat
xor
add
jecxz
clc
inc
into
ret
sbb
out
mov
sbb
daa
xchg
push
cli
loopne
ja
and
fisttp
gs
adc
and
out
or
cmc
gs
push
cdq
add
jne
outs
inc
repz
adc
das
xchg
xchg
enter
js
les
dec
dec
loop
fisttp
lock
cwde
adc
pop
data16
outs
pop
int
ja
inc
pop
imul
mov
sbb
xchg
mov
dec
xor
aas
mov
pop
sbb
inc
and
or
mov
xchg
bound
fs
jmp
test
in
jle
adc
xchg
movs
jmp
mov
mov
imul
mov
dec
test
pop
sub
or
fldl2e
xor
inc
aaa
mov
jno
mov
adc
push
loopne
mov
mov
sahf
cli
mov
mov
xor
sbb
iret
retf
test
test
stc
mov
push
test
(bad)
mov
mov
mov
mov
mov
dec
dec
ror
scas
cmp
push
jno
push
ins
and
cli
push
fisubr
fiadd
inc
inc
mov
call
pop
je
mov
(bad)
sub
inc
xor
xchg
xor
jno
mov
mov
or
out
push
nop
into
rcl
fucom
dec
cmp
(bad)
clc
push
xchg
xor
or
mov
sar
mov
(bad)
movs
pusha
cmp
(bad)
fld
fs
inc
nop
jbe
rcr
int
into
aad
mov
and
test
push
mov
stc
movs
loop
sbb
pop
ja
rol
xchg
adc
mov
cmp
pop
adc
rcr
aam
in
add
inc
cmp
iret
xchg
lahf
bsf
repz
(bad)
mov
rol
and
inc
bound
stos
ins
imul
sub
xchg
xor
lods
sahf
push
push
rol
adc
repnz
sbb
add
fmul
inc
and
sub
ficom
jne
das
lock
push
jb
jp
(bad)
sub
pusha
sete
int3
inc
or
(bad)
call
punpckldq
push
sbb
popf
cdq
cmp
pushf
mov
test
sub
sub
or
xchg
xor
addr16
dec
fisttp
inc
pushf
jge
xchg
ins
stos
jg
retf
adc
add
mov
or
mov
adc
in
inc
push
pop
and
dec
pop
pop
pop
xor
bnd
xor
cli
jge
or
xchg
out
fidiv
dec
xor
xchg
cmp
sbb
test
add
pop
iret
mov
pop
pop
xchg
dec
jae
mov
mov
jns
loope
and
aas
mov
inc
ins
sbb
imul
push
gs
shr
mov
mov
out
adc
push
das
repnz
jp
outs
pop
idiv
xor
jmp
das
jg
js
mov
jo
retf
sbb
xchg
or
sbb
loope
and
xor
xor
inc
pop
dec
sar
pop
imul
push
pop
or
test
and
or
and
mov
pop
jle
cmp
lea
push
int
and
jns
or
cld
test
repz
retf
jbe
lods
(bad)
sti
xor
out
xchg
dec
or
xchg
bsf
mov
cmc
dec
or
inc
jg
shl
fisub
jae
push
push
call
(bad)
mov
adc
ret
jns
dec
imul
adc
movs
cmp
jge
ja
mov
xchg
inc
pop
jp
xchg
mov
leave
loope
or
dec
push
add
mov
or
push
idiv
ret
push
jl
ins
push
push
mov
pop
push
rol
mov
add
pop
(bad)
jae
mov
fistp
stc
push
xchg
neg
jns
mov
stos
xchg
iret
and
ss
(bad)
das
clc
(bad)
add
adc
fisttp
pop
pop
xor
loop
mov
adc
rcl
icebp
ror
leave
cmp
jb
xchg
sbb
xor
push
mov
(bad)
ins
scas
repz
push
bound
xchg
mov
jmp
movs
push
test
sub
xor
adc
repz
and
lds
cmp
mov
nop
mov
out
mov
add
add
cmp
cld
dec
mov
dec
xor
int3
push
push
sbb
mov
mov
pop
mov
popf
cmps
idiv
ins
scas
out
pop
cdq
mov
or
xchg
fucomp
and
lahf
ja
outs
movs
inc
fild
pop
(bad)
and
ret
(bad)
jo
sbb
iret
mov
jecxz
jmp
stc
mov
push
sub
jl
mov
ss
sbb
in
call
cli
icebp
sbb
and
sub
sub
(bad)
or
cmp
jge
nop
inc
sti
cmp
movs
inc
cmps
scas
in
push
movs
inc
jge
mov
aam
arpl
retf
repz
addr16
leave
addr16
pop
leave
adc
add
loopne
jmp
mov
add
mov
xchg
stc
cmp
imul
bound
cmc
in
fsubr
adc
out
mov
cmp
lds
or
(bad)
ficomp
outs
sub
test
lods
ror
xor
(bad)
jae
sub
adc
mov
push
ret
cmp
mov
jae
popa
out
aam
mov
dec
xlat
mov
inc
xchg
inc
stos
nop
addr16
jno
jae
push
add
in
add
mov
jmp
aaa
in
leave
mov
and
push
inc
sub
pop
out
xchg
fisttp
xchg
xchg
stc
cmps
sbb
mov
sti
js
ins
xchg
aam
lea
pop
xchg
mov
pop
hlt
push
adc
jno
div
inc
mov
dec
clc
repz
mov
sub
(bad)
not
aam
jmp
out
cmp
inc
add
ret
inc
push
lods
push
xor
push
bound
push
pop
jnp
cmp
pop
bound
inc
aas
inc
jne
mov
push
enter
sahf
cmc
icebp
inc
xor
xchg
mov
arpl
pop
pop
push
stc
iret
outs
mov
inc
loope
cmp
test
enter
popa
push
scas
aas
scas
mov
mov
test
test
jmp
jns
cdq
sub
shl
retf
xchg
aam
add
or
inc
push
mov
lods
popa
adc
ja
push
lock
adc
sub
jg
pop
push
ror
jmp
js
outs
cmps
pusha
test
aaa
and
jb
stos
jle
or
sub
loope
imul
push
adc
inc
add
(bad)
pop
js
retf
nop
xchg
sub
test
xchg
es
daa
or
push
jp
iret
cmps
sti
test
inc
pop
out
sbb
outs
push
sub
mov
(bad)
cs
sub
mov
addr16
dec
scas
jns
cld
nop
ins
rcr
inc
adc
xchg
jno
dec
fs
xor
add
jae
retf
scas
xchg
push
loopne
mov
(bad)
jmp
cli
cmp
sbb
iret
jp
push
cmp
cmc
mov
fidiv
cmps
into
or
and
je
movs
xchg
ret
mov
jecxz
inc
push
push
and
sub
adc
xchg
xchg
test
dec
mov
dec
sbb
sub
call
lods
inc
push
jno
nop
lahf
mov
jbe
and
retf
lods
jmp
push
sbb
aaa
ficom
jnp
pop
push
cdq
test
addr16
jbe
xor
mov
jno
mov
call
or
jb
sub
inc
addr16
xchg
test
jbe
cli
ss
cmp
ret
call
adc
sbb
mov
sbb
mov
mov
stos
into
mov
or
fidiv
(bad)
push
clc
xchg
or
mov
dec
out
xor
pop
mov
dec
push
sbb
scas
mov
data16
dec
inc
les
ja
push
test
loopne
mov
pop
adc
scas
data16
cmp
fistp
in
loop
loopne
add
jmp
or
test
cwde
(bad)
aam
cmc
shr
sub
or
pop
mov
xor
je
fsub
popf
jns
sub
jecxz
sub
sbb
cdq
stos
jmp
int
mov
das
(bad)
adc
xchg
sub
or
xchg
cmp
(bad)
pop
and
out
mov
push
mov
push
call
sub
mov
int
fs
mov
and
scas
push
in
xor
xor
mov
sbb
out
or
xchg
repz
cmc
adc
mov
mov
xor
push
(bad)
hlt
retf
sbb
push
cmp
push
int
leave
pop
add
inc
loop
(bad)
(bad)
pop
xchg
popf
call
ror
jb
jle
xor
cmp
int
push
loop
cmp
je
daa
shr
in
pushf
loop
sub
inc
fdivr
ret
in
fcmovnu
cmps
mov
pop
test
dec
fisub
in
adc
mov
mov
xchg
sbb
mov
scas
fdiv
mov
dec
lahf
cmps
ins
adc
in
inc
mov
retf
fdiv
sbb
fstp
ror
jnp
jle
inc
rcl
push
jl
xor
rcl
aaa
aad
lods
mov
inc
call
ins
add
add
test
leave
xor
fwait
push
test
xchg
pop
xor
in
cs
and
loope
sbb
test
fistp
fs
in
retf
jae
push
cmp
repz
xor
fstp
jbe
xor
mov
jne
mov
data16
ins
sub
mov
inc
jae
les
sbb
int3
push
shl
push
addr16
inc
push
out
ins
push
cwde
daa
or
std
add
add
repz
and
cmp
cmc
and
or
mov
jns
aas
and
cmp
nop
inc
dec
xchg
or
cwde
mov
outs
jb
push
ds
lea
ins
in
xor
rol
push
inc
je
std
outs
jle
les
push
pop
mov
sub
lahf
mov
xchg
jmp
xchg
or
dec
clc
(bad)
sub
aaa
jo
mov
xor
jb
cli
out
(bad)
cmp
lods
or
and
mov
dec
add
stos
lods
rol
(bad)
mov
push
das
sbb
mov
dec
pusha
and
push
xlat
mov
mov
cwde
inc
pop
inc
or
sub
lods
jb
je
mov
xchg
test
dec
std
or
adc
jne
(bad)
(bad)
mov
jo
rcl
sub
(bad)
cmp
mov
mov
and
jg
not
outs
mov
xchg
(bad)
xchg
or
and
mov
hlt
cmps
push
js
cmp
ficomp
push
inc
repz
push
imul
iret
sbb
sub
and
ins
leave
mov
(bad)
(bad)
into
ss
xor
(bad)
pop
push
pusha
mov
add
mov
jbe
outs
sub
pop
inc
cli
xor
mov
clc
fiadd
fwait
mov
pop
mov
xor
pop
xor
int
mov
scas
dec
and
hlt
sub
outs
adc
inc
push
in
mov
popf
jmp
pop
in
cmps
inc
sbb
inc
push
add
lahf
mov
sbb
cmps
sub
leave
add
add
fwait
enter
xor
xchg
cdq
sbb
jmp
push
popa
mov
adc
or
fwait
test
cld
pop
fisttp
sbb
nop
push
pushf
shr
jecxz
es
mov
icebp
mov
test
fsub
test
or
(bad)
add
outs
add
cmp
scas
sub
cmc
jb
mov
push
imul
pop
shl
lods
pop
stc
(bad)
inc
push
xor
cmp
or
pusha
loope
call
xchg
rcr
push
(bad)
or
sub
pop
jne
dec
fadd
xchg
pop
pop
mov
sbb
push
test
jne
push
jo
sub
sbb
je
pop
mul
scas
pop
adc
mov
test
stc
in
push
mov
out
in
movs
dec
test
adc
inc
jmp
sub
mov
mov
xchg
sbb
pop
jecxz
stos
or
or
pop
sub
mov
push
mov
push
repnz
mov
push
(bad)
stos
push
pop
sbb
mov
sub
adc
push
cwde
rcl
daa
mov
je
cmp
mov
push
lods
fsubr
retf
fsin
ja
cmp
sub
sub
stos
or
fld
inc
or
ret
cmp
push
aam
jmp
add
add
adc
js
xor
lea
call
add
mov
adc
shl
adc
hlt
cmps
movs
retf
stos
cmp
and
push
arpl
add
and
fneni(8087
scas
(bad)
cmp
sub
sub
daa
or
cmp
dec
cmc
aam
xor
pushf
in
pop
fdivr
add
cmp
sar
mov
jle
in
cmp
xlat
xor
push
mov
bound
hlt
sbb
jae
dec
xchg
jge
(bad)
test
frstor
(bad)
jmp
jecxz
movs
retf
xor
or
inc
imul
out
jmp
and
mov
scas
pushf
in
dec
mov
fstp
sbb
sub
int3
je
rcr
or
out
pop
fild
dec
aam
into
mov
sub
adc
sar
adc
mov
dec
out
retf
mov
jp
shl
mov
sbb
cmp
dec
adc
dec
gs
retf
fcmovnb
cmp
rcr
jmp
cdq
lods
aad
outs
ja
xchg
push
jmp
ret
mov
in
pusha
or
adc
dec
push
icebp
rcl
sbb
sbb
xor
xchg
lods
pop
mov
retf
retf
cld
cmps
aad
ins
outs
xchg
xor
and
push
sbb
addr16
pop
fild
aaa
or
pop
pop
aas
aaa
mov
push
mov
sti
push
and
wbinvd
jne
dec
gs
jno
mov
outs
mov
rcl
mov
ins
adc
jmp
into
or
ja
cmps
into
or
push
retf
inc
test
xor
int3
mov
xor
loopne
push
shl
sub
mov
mov
add
push
push
scas
jnp
or
dec
inc
stc
push
xor
inc
push
jle
outs
mov
cdq
enter
fsub
mov
mov
(bad)
nop
xchg
and
ss
cdq
movs
outs
mov
cmc
mov
in
xchg
inc
push
shl
cdq
sub
mov
aaa
sub
cmp
jno
add
push
jo
or
push
sub
mov
(bad)
outs
sahf
ret
jg
add
push
and
dec
movs
loop
mov
enter
icebp
push
(bad)
das
sub
mov
outs
inc
in
stc
(bad)
iret
and
(bad)
jp
push
leave
and
jbe
lods
pop
bound
adc
mov
and
cmp
jmp
and
mov
(bad)
mov
sbb
test
ffreep
jnp
rol
or
dec
inc
jecxz
cmp
pop
aas
retf
loop
call
std
or
out
int
outs
data16
push
outs
push
dec
sbb
cmp
and
jecxz
xlat
hlt
xor
retf
push
add
aaa
leave
xor
mov
(bad)
ja
mov
ss
ss
mov
push
fsub
and
nop
call
out
jae
push
cmp
xchg
sbb
add
xchg
cld
push
add
pop
cmp
push
cdq
pusha
push
in
jae
xor
inc
dec
adc
fisubr
and
ins
add
pop
cli
mov
adc
fsincos
jo
dec
mov
sar
hlt
icebp
sub
mov
cmp
punpcklbw
das
retf
nop
xor
lods
push
aam
fwait
dec
out
ldmxcsr
mov
int3
and
pop
xchg
shr
stos
fdiv
js
mov
jmp
out
mov
mov
jl
add
jmp
int3
in
cmps
test
sub
mov
pop
or
fild
(bad)
stc
loopne
loope
pop
ins
clc
(bad)
cdq
pop
mov
loopne
adc
cwde
dec
xor
add
sbb
dec
sub
cmps
sbb
pop
into
std
(bad)
in
add
jge
pop
iret
mov
repz
sbb
lods
rcr
inc
xor
out
add
aad
into
jp
shl
dec
or
mov
repnz
jg
pop
bound
xchg
das
stos
test
mov
sbb
xchg
cmps
or
mov
(bad)
and
xor
(bad)
jo
fcom
test
mov
in
jno
pop
dec
cmp
mov
and
icebp
sub
or
pop
xchg
pusha
repz
frstor
sub
xchg
push
xchg
jmp
rcr
xchg
dec
mov
sbb
mov
cmps
mov
push
xchg
add
ret
or
dec
addr16
aam
cmp
(bad)
lods
mov
sbb
xchg
mov
xor
pop
loop
mov
xor
fwait
mov
xor
ror
mov
cdq
or
push
add
pusha
sub
mov
mov
push
mov
cmc
dec
lahf
imul
test
jnp
call
sbb
or
ret
xchg
push
iret
xchg
or
inc
ret
mov
ficomp
mov
in
inc
out
push
dec
addr16
mov
imul
fistp
int3
or
repz
test
ficom
stc
jge
or
inc
sub
sub
mov
sub
mov
in
shl
xsha256
cmps
push
sub
dec
lods
repnz
mov
in
mov
sub
add
ins
add
mov
rcl
sbb
and
xchg
loope
bnd
shl
lea
sbb
pop
outs
pop
rcl
out
hlt
add
add
scas
out
out
dec
daa
cdq
das
and
push
mov
(bad)
fild
add
jmp
repz
das
ja
sub
fisubr
fwait
iret
sbb
bound
outs
xchg
push
jns
dec
imul
xchg
mov
dec
mov
mov
adc
mov
sbb
movs
out
ret
sbb
out
adc
out
lods
push
rcl
push
mov
cmps
ficom
or
jg
in
xchg
add
lods
(bad)
shl
mov
cmps
ins
(bad)
dec
jns
mov
mov
std
inc
push
lahf
call
mov
rcl
cmp
xor
and
out
sti
shl
mov
in
mov
pop
adc
pop
sub
mov
mov
sub
mov
xchg
clc
mov
mov
test
mov
jo
in
daa
mov
nop
adc
jmp
inc
dec
fsubr
add
pop
popa
and
or
int
pop
dec
js
xor
setbe
jp
ja
or
jne
sar
mov
jne
nop
enter
dec
call
mov
mov
dec
stos
cmps
mov
xchg
test
inc
xor
cmp
sbb
scas
xor
retf
push
sti
add
and
adc
pop
cs
xor
pop
push
ss
mov
std
fsubr
push
xor
arpl
mov
xchg
sub
lea
out
aas
mov
dec
lock
fbld
pop
fcmovbe
pop
dec
lahf
mov
pusha
mov
mov
dec
push
shl
test
aad
or
outs
mov
aaa
jae
inc
cmps
mov
jg
push
adc
sbb
pop
xlat
pop
dec
push
call
mov
pop
add
adc
ins
stos
jmp
inc
dec
push
adc
repnz
mov
dec
or
mov
nop
sbb
shl
mov
hlt
cmps
rcl
popf
ficom
dec
lods
jnp
aam
mov
test
mov
mov
aaa
leave
pop
adc
shr
cmps
xlat
push
jo
xchg
sbb
sub
push
std
jge
xchg
movs
dec
add
sar
je
std
mov
or
in
cs
push
adc
jmp
jge
push
sub
mov
cdq
jno
je
adc
mov
fnstcw
hlt
btc
mov
fstp
sub
dec
and
inc
push
push
push
cmc
xchg
shl
sub
repz
and
mov
retf
mov
(bad)
mov
rcr
sub
cmp
xchg
sahf
cmp
or
mov
repnz
mov
stos
(bad)
mov
(bad)
sbb
mov
adc
mov
jb
push
(bad)
sub
pop
xor
addr16
das
packsswb
out
ret
sub
adc
xchg
jl
fidiv
stos
sub
sbb
cmp
les
cld
je
adc
jo
inc
or
aaa
mov
cli
daa
aad
clc
mov
(bad)
enter
lock
add
out
cmc
daa
push
add
pop
(bad)
pop
repnz
ins
ffreep
(bad)
test
mov
sbb
inc
stos
fdiv
scas
or
arpl
xor
out
leave
addr16
pop
jae
mov
xor
(bad)
call
push
mov
xchg
inc
push
or
(bad)
ins
mov
das
and
cmc
fld
pop
xor
retf
add
dec
rcr
adc
movs
inc
mov
sbb
jae
cdq
pushf
dec
xlat
inc
into
in
je
jnp
pop
sub
xor
mov
retf
test
jle
jmp
hlt
or
in
jg
stos
(bad)
cmps
in
and
jb
cmc
push
dec
cmp
bound
sbb
xchg
cmp
jecxz
iret
mov
into
dec
jmp
test
push
xchg
bound
xor
cmps
imul
mov
cmp
jno
push
movs
aad
push
mov
inc
mov
xchg
push
mov
pop
aas
movs
xor
in
xor
dec
daa
push
adc
mov
xchg
mov
into
xor
inc
sbb
xchg
sbb
in
xchg
and
sbb
pop
call
cmp
fiadd
sub
ins
int
xor
leave
imul
test
pop
xchg
dec
lea
fild
xchg
adc
mov
mov
idiv
inc
sub
mov
int
xor
cmp
pop
dec
test
pop
out
hlt
(bad)
mov
jno
pop
add
xor
mov
adc
sub
push
rcr
xchg
jp
inc
dec
xor
adc
sbb
and
aaa
xchg
xlat
dec
popa
(bad)
adc
(bad)
adc
xchg
hlt
xchg
stos
jae
sti
mov
xchg
mov
cmp
dec
sbb
jns
ror
iret
repnz
jae
ret
jo
adc
sbb
call
out
xchg
inc
je
mov
jmp
push
dec
cmp
xchg
cld
(bad)
pop
shl
mov
pop
xchg
cmp
ret
sub
sbb
dec
push
test
dec
enter
jae
hlt
pop
int3
push
xchg
push
sub
mov
push
fdivr
hlt
jp
mov
jge
mov
sbb
sub
int
inc
dec
cli
cmp
iret
xchg
cs
mov
loop
sub
mov
stc
inc
dec
cmps
cld
inc
mov
mov
jnp
add
sub
shl
shl
cmp
adc
inc
sbb
pop
mov
cmp
push
test
cbw
loop
ss
mov
push
ss
mov
(bad)
add
xlat
shr
pushf
cdq
mov
loope
das
loope
sbb
adc
(bad)
xor
arpl
movs
(bad)
setno
jmp
ja
dec
mov
loopne
pop
cmp
in
fadd
and
test
fcomp
xchg
in
inc
daa
call
mov
retfw
clc
int3
std
jp
dec
imul
ror
cmps
or
sbb
retf
adc
lods
pop
push
rol
ja
mov
inc
lock
sub
out
popa
jp
or
push
in
ins
mul
addr16
fbstp
and
or
mov
or
cmp
mov
sahf
jp
sub
add
scas
out
jmp
dec
inc
popf
mov
pop
mov
xchg
inc
ret
dec
pop
xor
or
rol
pop
fstp
add
cmp
aaa
cmp
sub
movs
jge
arpl
dec
aad
call
cmp
and
retf
movs
les
jo
movs
ret
out
cld
xchg
mov
cmp
fild
in
cmp
call
cli
idiv
test
fsubr
lds
repz
dec
dec
inc
mov
lods
pop
adc
ret
xchg
inc
bound
xchg
and
cmc
mov
jecxz
push
scas
(bad)
retf
xchg
shr
rol
mov
add
lods
or
xchg
lds
add
jge
test
or
loopne
mov
xchg
into
jle
dec
mov
mov
and
(bad)
cs
(bad)
push
in
repnz
addr16
cmovnp
cli
and
xchg
add
dec
pop
xor
mov
push
stos
lods
mov
lea
add
mov
add
lods
push
pop
call
dec
mov
fs
jl
push
xchg
push
mov
jmp
mov
xlat
mov
dec
dec
xor
inc
dec
fidivr
out
push
xor
(bad)
fmulp
ss
sub
or
je
dec
in
out
cld
(bad)
mov
adc
xchg
shl
inc
dec
call
sub
add
dec
nop
mov
retf
daa
xor
mov
mov
and
push
mov
jmp
nop
sti
(bad)
call
test
shr
sti
or
sahf
leave
cmp
arpl
(bad)
fld
repz
(bad)
push
pushf
push
call
mov
lods
pushf
rcl
aaa
dec
inc
xchg
add
rep
or
clc
in
rep
pop
in
cmp
cli
inc
push
pop
jle
es
jno
ror
pavgw
fnstcw
fnstsw
nop
jmp
jg
jns
test
adc
test
add
cwde
stc
pop
into
push
cmc
or
push
in
pop
jbe
inc
sahf
adc
into
lds
iret
mov
or
fs
leave
xchg
in
into
xlat
mov
popf
mov
icebp
inc
int3
xor
sbb
in
cs
xor
sar
ins
or
ins
fwait
test
loope
sbb
gs
fistp
adc
loop
sub
cli
pop
push
mov
push
mov
call
pop
jle
shl
call
daa
nop
mov
lock
jge
outs
push
dec
xor
popf
fs
sbb
sbb
mov
sub
aam
leave
add
inc
std
mov
xor
xchg
pop
out
push
inc
add
xchg
lock
push
pop
cli
xor
inc
divps
je
movs
mov
xchg
out
cdq
iret
mov
icebp
sar
pushw
outs
jmp
loope
inc
loop
pop
and
neg
jl
pushf
pop
fdivr
push
ds
das
mov
xchg
dec
(bad)
push
pop
jne
inc
pusha
nop
mov
test
mov
mov
dec
push
jmp
(bad)
cmp
inc
pop
clc
cmp
dec
fwait
ret
cli
sbb
les
fild
push
mov
mov
push
pop
jbe
or
aam
jbe
inc
lods
xchg
mov
(bad)
push
xchg
jecxz
cmp
sti
ror
sub
jbe
imul
xlat
push
stos
sbb
pop
push
inc
xor
fcmovnb
shr
xchg
mov
mov
mov
out
(bad)
mov
push
into
call
js
mov
push
xchg
jl
adc
sbb
(bad)
aas
je
xchg
sub
jb
add
jecxz
xchg
xchg
imul
pop
call
jecxz
inc
cmc
ja
push
sahf
sub
mov
sar
cmovs
(bad)
and
daa
fadd
jl
sahf
cmp
pop
pop
sti
xor
enter
in
sbb
sub
(bad)
mov
mov
rcr
outs
and
outs
mov
and
pop
inc
push
xor
das
test
jae
or
(bad)
sub
aam
ja
xor
pop
je
lods
add
nop
(bad)
jmp
or
pop
cmps
and
pusha
(bad)
ja
xlat
or
mov
movs
cmp
xor
and
test
cmp
retf
je
in
adc
mov
div
hlt
jle
scas
int
mov
jno
fiadd
dec
addr16
int3
sub
repnz
jl
(bad)
mov
mov
mov
sbb
jae
test
or
push
std
and
or
test
xor
or
push
popa
mov
stc
mov
lahf
push
rcl
mov
cmp
enter
in
xor
into
lds
mov
cmp
jge
nop
add
mov
pop
push
mov
xchg
(bad)
dec
(bad)
pop
outs
jmp
ja
xchg
shl
mov
adc
or
mov
sbb
add
retf
in
sahf
ffreep
dec
bound
add
mov
ja
sti
movs
jae
repz
not
scas
lahf
out
enter
outs
test
outs
pop
in
imul
cmp
mov
cmp
add
leave
dec
sbb
popf
not
add
in
adc
icebp
movs
shl
adc
call
hlt
stos
or
xchg
lds
push
jo
push
xchg
xchg
xchg
arpl
sub
test
mov
je
repnz
adc
mov
add
hlt
arpl
fs
inc
ja
sti
sbb
stc
rol
imul
out
add
jp
dec
mov
sub
mov
pop
sar
sub
mov
push
xor
popa
in
das
push
in
daa
mov
xor
jg
cmp
adc
rcl
ja
xchg
clc
(bad)
lods
xor
jp
sbb
enter
loope
lods
inc
or
leave
ficom
jg
imul
mov
pop
cwde
dec
mov
dec
pop
rcr
mov
imul
ficom
aam
dec
cmps
pop
mov
push
mov
jg
sbb
xchg
cs
xchg
lods
xchg
retf
sbb
dec
aaa
jl
push
in
xchg
mov
mov
sbb
or
mov
mov
leave
imul
dec
and
std
jae
cmp
xchg
retf
push
cmps
mov
jg
mov
mov
mov
(bad)
dec
adc
add
cmp
popf
(bad)
sbb
je
pop
jecxz
ret
lds
and
addr16
pop
sub
lea
pop
jmp
out
scas
jnp
ja
push
mov
mov
push
mov
dec
pop
dec
add
aad
sbb
les
xor
sub
xor
xchg
jno
movs
mov
adc
push
imul
ins
sbb
inc
lods
xchg
xor
pusha
js
sbb
xchg
sub
aaa
mov
fst
inc
sbb
mov
mov
pushf
jnp
mov
(bad)
push
sub
push
ss
in
sub
movs
adc
or
push
popf
jb
dec
mov
sbb
xor
cmps
jno
mov
or
fnstenv
xor
cwde
das
inc
or
mov
fldz
push
into
dec
pushf
ss
pop
sub
fucomip
push
jbe
jns
sbb
lea
xor
les
call
nop
xchg
add
jno
dec
or
int3
aam
pop
mov
ins
(bad)
repz
inc
dec
mov
push
or
pop
push
inc
call
jmp
cmp
sub
adc
inc
jmp
ffreep
sahf
int
fld
jecxz
mov
push
ror
jl
mov
loopne
ret
pop
ss
mov
mov
push
or
mov
dec
cmps
mov
sbb
lods
imul
pop
(bad)
push
xchg
jbe
ins
in
dec
or
mov
mov
fcomp
push
mov
movs
mov
push
(bad)
xchg
jo
sub
lock
inc
jmp
cli
push
pop
fmul
mov
add
pop
jmp
add
(bad)
sbb
cmps
ret
pop
jns
xor
sub
pop
mov
mov
pop
lea
aaa
(bad)
sahf
xor
popf
xor
pop
mov
mov
add
jmp
and
mov
inc
shl
xor
rcr
pop
fnstcw
icebp
inc
sbb
sar
out
faddp
xor
push
add
push
repnz
inc
popa
mov
retf
add
sbb
lock
retf
push
imul
cmps
cmp
movs
mov
sbb
mov
cmps
arpl
cmp
enter
xor
xchg
sti
loopne
mov
push
imul
(bad)
dec
cmp
daa
sub
shl
popf
lods
loop
aam
xor
(bad)
sbb
sub
mov
push
push
inc
ret
fimul
fistp
jmp
sbb
fldcw
aaa
pop
imul
(bad)
sbb
sub
mov
movs
jp
jg
lea
and
lods
rol
cmps
and
iret
retf
xor
out
dec
shl
add
push
aam
jl
sub
sbb
mov
inc
repz
sub
out
jns
popa
test
mov
pop
or
fdivr
inc
sbb
push
data16
repz
pop
adc
enter
jno
jne
daa
pushf
sbb
or
mov
adc
mov
adc
mov
push
jo
cs
jle
cmp
pop
(bad)
cmp
cmps
les
sahf
pushf
popf
cmp
or
pop
int
outs
dec
add
fidiv
in
fsubr
(bad)
(bad)
push
aas
mov
nop
and
xchg
ret
push
jecxz
dec
ret
lock
ds
sbb
hlt
xor
add
mov
cmp
sbb
movs
pop
or
pop
sti
jns
adc
fdivr
or
outs
cli
push
jl
icebp
mov
or
mov
push
jns
sbb
mov
xchg
or
jo
mov
sub
and
(bad)
mov
scas
aad
pop
lods
dec
test
inc
lods
xor
clc
in
jno
mov
mov
(bad)
fwait
cwde
call
fincstp
cmp
sub
popa
fnstsw
movs
and
push
es
mov
repnz
sub
sti
add
popf
sbb
jp
stc
pop
jb
xchg
or
movs
nop
or
mov
(bad)
repnz
mov
or
jb
inc
and
push
es
adc
mov
or
pop
pop
pop
es
cs
leave
push
adc
cwde
adc
test
push
daa
and
in
mov
inc
xchg
sub
mov
(bad)
call
popa
pop
retf
sub
std
mov
jnp
pop
cmp
push
loopne
daa
mov
mov
jae
rol
call
popa
lds
outs
jle
data16
xor
jp
jns
test
mov
jno
adc
fnstenv
mov
(bad)
or
push
lea
retf
add
xor
movs
lock
inc
mov
push
in
jge
sub
xchg
lds
into
arpl
into
rol
sti
test
push
addr16
pushf
pop
lock
packuswb
(bad)
loopne
mov
mov
retf
add
cli
stos
into
rol
mov
cmps
push
pusha
sti
int
or
mov
daa
mov
fcom
icebp
push
inc
shl
jne
or
mov
cmp
xchg
add
loop
movs
xchg
test
shl
not
and
sub
daa
and
sub
push
and
xor
call
jmp
add
push
je
pop
fild
jnp
rcr
pushf
(bad)
je
call
lock
pop
push
call
stos
hlt
pushf
cmp
jb
or
retf
mov
outs
enter
inc
adc
jb
inc
in
dec
fidiv
call
cmps
nop
or
xchg
mov
add
clc
inc
and
in
loopne
int
iret
sbb
lock
jb
pop
mov
mov
aam
cmp
in
and
xlat
test
push
push
shr
xchg
cli
scas
and
sbb
xor
es
lds
dec
lds
(bad)
in
loop
call
stc
mov
nop
add
pop
dec
repz
shl
inc
stc
popf
sahf
push
test
(bad)
stc
mov
cld
inc
fist
lock
retf
fwait
add
bound
jnp
push
jge
rcl
lds
or
add
movs
jne
pop
das
cmps
pop
aaa
daa
push
bound
lea
xchg
iret
pusha
or
cs
sbb
jg
lds
out
fdivr
push
xor
loopne
cwde
sar
ins
push
sub
cld
ins
or
fcomp
inc
cmc
dec
sti
jmp
int3
arpl
lock
mov
push
sub
and
xor
push
jne
sub
adc
bnd
ret
push
xchg
sub
jae
push
cmp
scas
(bad)
out
jecxz
push
ds
xor
ja
jmp
sub
jp
dec
je
push
sub
or
cld
fadd
push
jno
fimul
dec
mov
or
and
outs
sti
dec
mov
retf
and
mov
pop
dec
ss
lods
push
inc
add
fmul
in
dec
das
adc
pusha
mov
mov
in
mov
and
aaa
xchg
loope
repz
dec
lea
jle
jmp
adc
cmp
mov
inc
dec
mov
into
call
push
pop
jl
mov
imul
sbb
iret
xlat
js
movs
adc
nop
or
push
ja
cmp
stos
scas
add
and
cmp
or
or
das
aad
dec
sub
dec
jle
(bad)
jmp
jno
js
jmp
sti
je
inc
call
lds
mov
and
xor
mov
rcr
clc
pop
movs
xchg
push
lods
repnz
and
into
push
and
pop
lahf
sub
div
jecxz
jle
into
repnz
not
jb
xchg
inc
das
adc
cmps
push
lods
and
jmp
idiv
es
aad
and
jp
es
clc
xor
push
ds
mov
cmp
sbb
sbb
mov
(bad)
hlt
into
cmp
fnstenv
cli
fwait
rol
mov
arpl
and
in
add
imul
ror
mov
adc
fs
mov
cmp
sbb
add
cmc
mov
mov
enter
push
adc
dec
test
pop
push
mov
cmc
pop
icebp
jg
pop
in
stc
in
fistp
scas
scas
ins
cs
leave
sub
into
mov
std
aaa
ds
pop
xchg
out
ja
push
fcomi
and
xor
mov
lock
push
or
in
sub
hlt
and
data16
pop
xchg
xor
xchg
fst
cwde
ds
sbb
imul
ja
mov
or
dec
xor
cli
into
in
adc
popf
in
cmp
loope
or
adc
jl
(bad)
and
test
jae
int3
add
jmp
sbb
ret
cmp
mov
jno
sbb
cmp
fcom
outs
sahf
in
(bad)
cld
(bad)
(bad)
mov
sub
cmp
mov
and
pop
xchg
pop
xor
pop
mov
jns
xchg
push
aam
outs
sbb
dec
loop
gs
in
jl
mov
adc
lods
xchg
and
mov
icebp
fmulp
test
pop
(bad)
icebp
int
adc
sar
inc
cmp
sbb
and
fld
adc
stos
scas
mov
(bad)
push
push
movs
fist
cmp
shl
mov
(bad)
jg
in
sub
shl
mov
adc
pop
sti
inc
jno
mov
xor
mov
adc
hlt
(bad)
imul
sub
cli
retf
jno
aas
inc
clc
jmp
rcl
jae
push
push
in
cs
std
sbb
clc
jb
fcmovb
in
xor
imul
imul
adc
mov
sahf
fnstcw
sub
ficom
(bad)
std
dec
lds
ds
in
mov
cld
inc
or
inc
(bad)
enter
cmp
in
or
das
mov
mov
into
pop
popa
sbb
aam
lock
cmp
push
pop
into
push
mov
js
popa
xlat
mov
dec
pop
in
inc
das
mov
iret
mov
sbb
lahf
and
ror
gs
jb
mov
and
aaa
(bad)
push
and
mul
icebp
ret
pop
shl
bound
xchg
mov
movs
int
or
push
dec
and
int
jl
test
mov
mov
out
cs
test
or
mov
dec
rcr
imul
jmp
stos
pop
in
call
ret
jle
inc
mov
in
sub
jb
into
frstpm(287
and
cmp
add
lock
jae
cli
sub
ret
dec
ins
cdq
ins
scas
lods
sbb
push
ret
(bad)
movs
xchg
cmp
out
test
imul
lahf
int3
xchg
repz
out
jle
add
(bad)
xor
ret
and
xchg
mov
inc
les
popf
dec
sub
rcl
inc
add
les
hlt
aaa
shl
xor
bound
jmp
pand
xchg
jmp
adc
imul
sub
inc
mov
adc
mov
dec
shl
jmp
pop
retf
sub
dec
es
pop
out
or
ss
push
hlt
pop
fdiv
sbb
xor
jns
sbb
cdq
loop
retf
ins
xchg
xor
push
mov
add
or
pop
ficom
or
mov
jae
(bad)
xor
fld
sub
aad
movs
add
push
mov
and
xor
add
nop
inc
cmps
inc
aam
fisttp
sbb
aas
nop
and
pushf
mov
movs
movs
scas
xchg
or
push
pop
or
int3
and
dec
sar
aas
clc
lea
mov
aaa
gs
pop
das
cdq
fld
in
dec
fisttp
ret
mov
fdiv
mov
mov
xor
push
ret
test
jo
repz
mov
out
sbb
jb
mov
das
and
shl
jae
aas
jbe
test
lods
adc
mov
add
inc
xchg
inc
xor
push
sub
stos
and
test
out
inc
arpl
pushf
ds
jnp
cdq
xchg
xor
hlt
aaa
dec
mov
jbe
lahf
push
leave
cld
ins
or
adc
inc
sub
stc
or
add
fsubrp
sub
test
mov
cmp
inc
jge
imul
mov
dec
cmp
adc
jmp
or
jmp
std
fdivrp
or
dec
mov
(bad)
in
repz
out
(bad)
retf
xchg
or
ds
cmp
jno
imul
imul
jne
mov
pop
test
mov
xor
pushf
jge
cdq
cmp
sub
mov
push
fmul
mov
adc
out
or
mov
idiv
shl
ret
ds
cmp
sbb
shl
neg
mov
mov
and
scas
sahf
not
lock
inc
cmp
cmp
add
mov
xchg
addr16
loopne
sub
xchg
xor
sub
fisttp
inc
sar
mov
mov
sub
jecxz
in
push
jno
and
dec
in
mov
add
ficomp
popa
mov
push
pushf
(bad)
into
xlat
dec
dec
jg
inc
or
inc
scas
cmc
push
sub
lds
scas
cmc
inc
xor
fwait
lods
out
sub
dec
iret
jae
movd
and
test
mov
push
push
push
xor
jge
fstp
xchg
retf
call
cmp
mov
add
dec
call
jmp
xchg
sbb
outs
in
push
jl
outs
test
xchg
mov
mov
outs
popa
icebp
cmp
sub
and
sbb
enter
bnd
pop
stc
test
cmps
mov
xchg
mov
add
iret
test
in
ret
cmp
sbb
xchg
mov
xchg
test
into
out
mov
inc
fild
aaa
fld
add
shr
rcl
out
je
shl
ret
scas
shl
or
add
xchg
inc
into
cmp
sti
sti
(bad)
push
ins
sar
aaa
jne
fadd
mov
(bad)
scas
in
imul
loop
add
jmp
clc
(bad)
out
mov
lods
mov
pop
(bad)
mov
jbe
fst
mov
xlat
repnz
je
aaa
mov
jge
loope
adc
pop
outs
mov
test
push
xchg
xchg
xor
xchg
(bad)
sub
dec
jno
sbb
movs
fcomp
dec
sub
jns
push
jo
cmp
dec
or
mov
add
outs
xchg
mov
sbb
dec
sub
loop
nop
inc
repnz
mov
inc
imul
dec
mov
mov
aad
xchg
xchg
cmc
inc
ret
inc
push
in
inc
pop
sbb
das
fucomi
sbb
inc
fwait
sbb
sbb
push
push
add
out
pop
add
stos
inc
xor
sar
and
das
out
add
pop
push
jo
imul
loop
bound
call
cld
inc
or
lods
mov
mov
sub
cmp
(bad)
or
ins
aaa
cmp
data16
sti
imul
and
pop
sbb
loope
out
int3
xlat
and
jae
ins
repz
repnz
dec
mov
neg
pop
sahf
fild
add
(bad)
(bad)
jge
adc
popa
rcr
(bad)
push
mov
nop
in
mov
xor
cmp
adc
or
mov
mov
adc
mov
sub
scas
out
test
push
and
ins
int3
mov
bound
outs
clc
inc
ffreep
jge
cli
cmp
pop
fadd
xchg
and
enter
xlat
out
stos
aad
repz
hlt
hlt
and
test
cmps
clc
sub
lea
lods
dec
fmul
(bad)
not
add
pushf
push
lock
jo
pop
mov
sbb
or
cmc
push
outs
rcl
je
adc
imul
mov
pop
add
xchg
cmc
gs
cmps
icebp
fs
add
xlat
push
test
inc
sbb
xchg
wbinvd
pop
xor
scas
sahf
mov
pop
xor
cwde
pop
jl
sti
(bad)
jnp
pop
cwde
push
pop
xor
jge
std
in
int3
push
shl
hlt
adc
mov
cli
add
xor
ja
mov
shr
in
lds
sub
sub
in
rol
dec
sub
jbe
out
xchg
mov
cmp
retf
push
sbb
fstp
loope
ins
les
nop
inc
loop
mul
lods
idiv
adc
test
shr
stc
mov
dec
sbb
add
rol
stc
aaa
daa
popf
out
xor
pop
ds
movs
into
jecxz
test
adc
retf
retf
pop
sbb
xchg
(bad)
mov
test
nop
gs
loope
jne
je
add
cmp
shl
je
scas
mov
jmp
lock
pop
dec
adc
or
fild
sub
sbb
and
jl
ins
or
outs
call
adc
pop
push
aam
sbb
pop
mov
pop
data16
es
fdivr
dec
add
jmp
(bad)
ror
ret
pop
je
inc
pop
add
lods
pop
pusha
sbb
out
xchg
sub
xchg
js
pop
or
rcl
and
jl
movq
pop
add
out
imul
mov
shr
ins
stos
or
out
sbb
inc
xor
not
mov
out
pop
xchg
mov
cmps
lods
dec
in
or
cs
out
movs
dec
mov
pop
mov
or
in
not
cmp
outs
mov
jge
xchg
and
pop
mov
xor
and
icebp
jbe
ret
jge
or
into
xchg
and
push
arpl
pop
cmp
xor
movs
sub
mov
mov
shr
leave
lock
push
adc
stc
enter
pop
dec
adc
pop
pop
ins
mov
and
div
inc
sub
or
push
jle
cmp
fwait
(bad)
pop
leave
es
loopne
repz
cmp
and
sbb
fstp
repnz
add
push
and
int3
in
bound
dec
fild
cmp
fbstp
mov
adc
jge
mov
popa
les
pop
xchg
jge
mov
and
in
adc
mov
sub
mov
aam
push
popa
xor
jmp
je
mov
push
daa
das
inc
jg
(bad)
push
sub
js
(bad)
ja
bound
xchg
pop
sub
or
pop
fxch
jae
je
test
and
and
sbb
bnd
mov
cmp
movs
cmps
ret
pop
xor
mov
ret
and
sbb
test
ds
inc
minps
cmp
mov
lds
ds
and
popa
xchg
sub
mov
dec
arpl
jo
cmp
adc
pusha
or
test
test
int
in
repnz
test
xor
adc
pop
or
test
lsl
test
aad
jbe
dec
int3
(bad)
sbb
xchg
nop
cmp
ins
test
inc
ror
fisubr
scas
inc
ja
mov
jmp
jmp
push
ins
scas
add
std
xchg
sti
call
retf
in
retf
jmp
outs
cmc
dec
jle
xchg
cs
cli
shl
mov
push
push
inc
fwait
mov
push
pop
in
pop
mov
scas
stos
outs
xchg
retf
or
sub
movs
sub
in
scas
sub
jl
push
mov
movmskps
mov
cmps
fwait
pop
loop
iret
std
push
sub
jbe
add
leave
int3
jmp
out
add
mov
(bad)
loopne
je
add
mov
cmp
cld
imul
adc
or
(bad)
xlat
mov
ins
or
and
in
neg
ret
dec
xor
enter
cdq
jp
inc
sbb
popa
stos
xchg
and
jle
popa
loop
dec
pop
xchg
call
cs
inc
xchg
xlat
and
adc
mov
adc
xlat
clc
cli
pop
xchg
xchg
mov
(bad)
mov
sub
jp
push
sub
cwde
xchg
xchg
(bad)
sbb
mov
fs
inc
mov
and
push
mov
jmp
xchg
leave
adc
inc
mov
push
ret
adc
jae
aaa
out
fsubr
jp
(bad)
mov
das
loope
mov
mov
leave
scas
add
cmp
aam
enter
movs
(bad)
sub
or
sahf
test
xchg
aaa
pop
mov
outs
cmova
ins
ins
xor
add
shl
sub
pop
test
xchg
hlt
mov
push
jbe
mov
icebp
pop
sub
stos
test
pop
ins
mov
cmp
call
inc
pop
pop
add
outs
test
mov
cmp
stos
(bad)
call
ror
inc
dec
rep
aas
inc
movs
shl
je
loopne
sbb
jnp
fsubr
ret
adc
popa
movs
in
jle
out
lock
or
loope
out
pop
adc
lahf
dec
icebp
inc
outs
test
or
mov
fcom
loopne
ret
aam
jmp
mov
mul
mov
and
or
mov
sbb
mov
add
mov
jbe
mov
dec
xor
mov
and
sub
stos
fs
(bad)
out
fcmovnbe
xor
pop
xchg
pop
dec
pop
push
fwait
jbe
bound
lds
push
push
sbb
mov
xor
clc
push
xlat
or
mov
scas
xchg
jmp
std
nop
into
mov
(bad)
call
cmps
inc
mov
movs
jnp
icebp
outs
mov
add
push
sub
into
xor
sub
pop
rcl
push
mul
gs
xor
cmp
add
adc
dec
xchg
(bad)
pusha
fcomi
inc
mov
mov
and
stos
sahf
sti
mov
xchg
mov
jmp
dec
jle
(bad)
(bad)
or
pushw
cmp
sar
push
pop
int
dec
in
sti
in
and
mov
or
pop
rcl
add
aam
sub
out
icebp
sahf
xor
jbe
int
mov
pop
inc
add
gs
push
loop
mov
clc
(bad)
mov
stos
pop
rcl
jae
aaa
test
scas
or
icebp
fidivr
mov
xchg
mov
out
ficomp
(bad)
scas
mov
rol
mov
stos
sub
cmc
push
cdq
out
mov
sub
loope
jp
cs
fs
xchg
push
rcr
push
and
ins
lahf
into
dec
push
push
ins
popa
ret
sahf
adc
adc
imul
sub
mov
ja
(bad)
mov
int
mov
mov
pop
mov
cmp
das
daa
pop
jmp
(bad)
icebp
mov
xchg
movs
jle
sbb
xor
and
fsub
arpl
jns
inc
sbb
inc
fs
dec
mov
dec
movs
pop
(bad)
mov
sbb
adc
xor
mov
jbe
cmp
xor
cmovbe
stos
push
cmp
cmp
mov
mov
dec
add
shl
imul
push
dec
cmps
mov
stc
ds
mov
lods
stos
hlt
sub
scas
shr
pop
jp
cld
hlt
daa
shl
sbb
sti
dec
in
jp
mov
sub
push
pop
or
jge
hlt
jbe
cli
mov
mov
call
xor
adc
addr16
add
mov
push
loopne
mov
jae
test
sbb
jmp
adc
clc
daa
repnz
out
clc
mov
cmp
call
pop
mov
push
test
sub
ss
push
pushf
outs
fnstsw
lahf
adc
xor
fist
cld
fisttp
push
mov
stos
js
jle
jns
int3
lahf
jne
push
mov
fimul
mov
and
push
and
lods
iret
mov
shr
mov
inc
jns
xchg
(bad)
mov
call
in
or
or
fimul
mov
stos
jp
loope
adc
mov
ror
aaa
mov
shl
test
sbb
or
mov
test
data16
adc
stos
stc
sub
ficomp
and
loope
sbb
aad
jne
and
mov
inc
test
sub
or
repnz
nop
jmp
test
imul
not
retf
push
movs
mov
push
cmp
loopne
test
test
fdivr
xchg
xor
dec
mov
or
fidiv
pop
(bad)
(bad)
icebp
or
or
hlt
iret
push
xlat
jae
pop
mov
and
pop
sub
in
sbb
pop
mov
fst
into
pop
sbb
test
jno
xor
and
jmp
mov
xchg
jge
loopne
xchg
dec
or
(bad)
in
jno
dec
cmp
pop
loope
(bad)
mov
mov
push
popa
adc
sub
les
cmps
loop
in
jno
ret
mov
(bad)
repz
add
fimul
daa
popa
sub
push
stos
cmp
xor
loope
sar
inc
cmp
and
adc
sub
repz
das
sahf
addr16
outs
cmc
retf
js
dec
and
push
add
das
aad
and
outs
mov
pop
adc
mov
jp
lock
cmp
lods
cld
jnp
loopne
(bad)
inc
movsx
add
mov
pop
and
les
xchg
mov
mov
(bad)
cwde
std
xor
fcom
jo
fisttp
mov
mov
jmp
and
inc
cmp
xor
xor
aam
scas
mov
xchg
repnz
inc
push
fild
or
mov
test
and
loope
adc
mov
and
les
push
inc
push
clc
test
(bad)
lea
xchg
leave
test
shl
out
(bad)
icebp
int
inc
xchg
les
call
fild
cmps
lock
cmps
pushf
dec
mov
int3
mov
ret
jge
call
mov
shr
fwait
cwde
not
gs
add
aaa
aaa
lods
fadd
jle
fs
sub
mov
add
pop
adc
retf
lock
add
push
repnz
(bad)
clc
stc
sub
sbb
jl
push
xchg
inc
push
gs
push
movs
retf
cwde
(bad)
inc
pushf
hlt
sub
rcl
sub
shl
stos
mov
sar
inc
hlt
clc
sbb
adc
mov
mov
out
lahf
and
test
test
icebp
repnz
imul
sub
sbb
dec
(bad)
js
aaa
xchg
ror
aad
adc
adc
jno
aam
dec
arpl
pop
or
mov
pop
ror
pop
je
std
aas
aaa
cmp
not
push
xchg
or
clc
pop
enter
and
add
adc
mov
mov
inc
push
outs
(bad)
adc
call
aas
inc
inc
mov
cmc
or
inc
jl
loop
arpl
or
adc
sbb
mov
xchg
lods
jmp
jmp
cmp
leave
cmp
bound
cs
jns
shr
ret
mov
xchg
pop
push
xor
pop
pop
das
push
mov
pop
push
movs
fimul
push
mov
pop
mov
jp
mov
adc
outs
leave
lods
xchg
mov
aad
movs
and
add
mov
push
pushf
fnstsw
scas
mov
addr16
in
mov
inc
and
add
lahf
xchg
or
out
dec
fs
or
mov
sub
leave
cmc
adc
push
retf
xor
sub
inc
mov
push
test
hlt
neg
sti
imul
stc
xchg
jmp
or
add
and
cmp
sbb
sbb
inc
dec
dec
add
inc
xor
pop
in
into
mov
pop
jb
fcom
(bad)
pop
jecxz
jmp
out
add
sbb
cld
jle
pop
pop
cmp
add
js
sub
int3
shl
out
mov
fild
int
repnz
ins
pop
clc
jnp
mov
mov
push
push
and
nop
and
push
jno
cmc
jb
nop
sar
fst
outs
popf
cmp
call
xchg
inc
frstor
outs
mov
ss
xchg
in
rcr
and
sbb
dec
push
in
(bad)
into
ret
and
cli
(bad)
call
cs
ds
cmps
addr16
push
ret
xchg
xlat
xor
aam
xor
and
aas
pop
jo
mov
pop
xor
and
fcomp
stos
adc
les
dec
ja
test
aas
and
pop
aaa
(bad)
outs
adc
push
xchg
inc
outs
inc
xchg
push
mov
jo
(bad)
cwde
xor
pusha
pushf
js
iret
idiv
mov
fld
cwde
mov
push
sahf
jns
push
jae
mov
repnz
dec
cmc
pop
jl
fwait
or
btc
lds
inc
call
pop
push
addr16
mov
cmp
jnp
cmp
outs
in
sar
je
shr
(bad)
lock
in
push
xor
adc
(bad)
mov
add
adc
mov
cmps
and
hlt
int
pusha
push
(bad)
fnstcw
inc
je
pop
icebp
pop
sbb
mov
hlt
cbw
inc
mov
fs
sti
pop
mov
pop
out
adc
sti
dec
enter
push
lock
adc
movs
test
imul
xchg
shl
jnp
mov
sahf
pop
mov
sub
outs
adc
add
test
jecxz
push
and
js
nop
into
iret
sbb
and
jle
repnz
jp
mov
xlat
dec
jg
push
and
movs
pop
fwait
cwde
fistp
sub
movs
iret
inc
jmp
ja
ds
fldcw
leave
add
sbb
pop
xor
hlt
inc
fldcw
add
mov
jbe
and
inc
inc
(bad)
mov
fld
sbb
fst
xor
and
inc
dec
adc
xor
rcl
sahf
xchg
into
in
rcr
ds
std
clc
ret
xchg
sbb
adc
sub
mov
std
call
pop
xor
xor
adc
jo
sub
and
or
outs
inc
cmp
int3
pop
out
dec
dec
bound
daa
cmps
outs
and
ret
push
xchg
or
into
outs
sbb
cld
iret
jmp
in
or
or
cmc
hlt
push
out
mov
scas
mov
inc
jmp
loope
mov
bound
add
push
ins
sub
inc
xchg
ss
icebp
xor
data16
imul
jg
cmc
lods
xor
or
mov
aad
test
(bad)
cmp
popa
xchg
inc
les
lods
add
jl
dec
mov
adc
bound
xor
mov
call
out
add
pop
popf
mov
sub
push
fld
jg
inc
cmps
mov
aad
mov
adc
cmp
pop
lahf
xchg
xchg
ret
and
imul
jle
enter
ja
shr
je
fsub
aaa
scas
clc
ds
ret
mov
cmp
adc
imul
mov
jl
xor
xchg
pop
adc
mov
push
fstp
mov
movs
mov
sbb
div
push
mov
(bad)
or
xchg
pop
and
pop
imul
xor
add
(bad)
jle
xchg
dec
sub
repnz
or
rcr
not
xor
sbb
pushf
test
das
cmps
sbb
mov
pop
xlat
cwde
cmp
dec
imul
mov
out
mov
ss
dec
xchg
and
adc
mov
xor
xor
ja
in
and
adc
xor
(bad)
jmp
popa
mov
xchg
add
inc
movs
push
sbb
add
(bad)
popf
in
jmp
jge
scas
test
test
add
cdq
jbe
js
jo
pop
mov
xchg
and
inc
xchg
sbb
jmp
mov
dec
es
adc
jbe
add
pop
or
mov
sub
popf
push
sub
in
ins
sti
xchg
out
add
cmps
push
mov
and
arpl
sub
repnz
(bad)
sub
mov
in
fld
jbe
mov
xchg
or
push
cld
jo
mov
cmp
stos
aam
add
movs
dec
jle
fwait
and
sbb
dec
js
in
ret
jl
out
rcr
xchg
mov
ror
out
mov
retf
mov
in
mov
aas
jbe
test
mov
mov
pop
sti
and
mov
jns
dec
xlat
push
js
xchg
jge
retf
fldcw
or
jmp
or
fstp
sar
call
ja
popw
and
(bad)
scas
adc
sub
lock
jp
out
push
inc
jno
or
cdq
and
mov
pushf
not
and
out
push
jns
or
aad
jmp
imul
jb
mov
retf
std
lahf
mov
dec
mov
aad
repz
loop
cmp
jbe
add
push
inc
les
xchg
call
mov
cmp
sbb
call
pop
mov
xchg
push
and
neg
pop
dec
push
mov
adc
pop
int
test
loopne
arpl
test
(bad)
arpl
in
mov
pop
pop
pusha
dec
div
arpl
cmp
sbb
in
mov
clc
les
cmp
mov
mov
jg
ins
mov
jb
mov
mov
pop
(bad)
icebp
int3
or
jbe
ror
jmp
loope
je
mov
retf
scas
push
mov
loop
inc
(bad)
jbe
inc
call
sub
arpl
cmps
arpl
inc
sub
fstp
lods
sub
pop
or
sahf
ret
push
cmp
imul
in
sbb
adc
fadd
pushf
stos
add
jmp
in
pushf
and
mov
lock
and
gs
pop
retf
jnp
hlt
jb
add
mov
or
jno
mov
jl
cli
mov
pusha
add
sub
push
jp
idiv
movs
(bad)
adc
or
sbb
cmp
pusha
cmc
pop
jne
jl
and
add
jp
mov
add
inc
mov
inc
fidivr
out
int
mov
fs
in
mov
popa
and
ins
cwde
mov
jmp
int
(bad)
push
dec
clc
sbb
rcr
mov
gs
jb
es
xchg
xchg
or
xor
sub
xor
div
(bad)
xor
arpl
loopne
push
mov
mov
mov
push
jmp
xchg
sub
aas
adc
stc
dec
scas
sti
dec
cs
rcl
(bad)
imul
cmovge
adc
fwait
add
push
aam
sbb
sub
jnp
jmp
jge
sub
sub
test
pop
sub
ins
jmp
add
ja
lahf
ficomp
aaa
mov
out
out
pushf
retf
xor
loope
sbb
cmp
ror
mov
fld
jmp
or
fwait
jo
mov
cwde
sbb
inc
pop
(bad)
sub
jle
inc
xor
addr16
test
add
test
retf
loopne
sti
rcl
and
sub
mov
sub
push
test
and
jne
leave
inc
sti
leave
inc
icebp
stos
jmp
push
mov
ret
add
repz
data16
mov
cmp
repz
xor
outs
push
xchg
pop
(bad)
sub
jnp
push
mov
or
cmps
in
stos
mov
xchg
arpl
jp
in
xchg
js
pushf
xchg
call
lock
dec
mov
out
dec
call
push
xchg
mov
mov
or
pop
mov
jbe
or
pop
ja
ins
shr
retf
ins
pop
jmp
fcomp
enter
mov
int
mov
add
push
or
repnz
lahf
sub
lea
mov
and
sbb
mov
hlt
push
jno
inc
int3
arpl
sub
inc
js
pop
ficom
nop
push
mov
push
push
push
jae
adc
sub
mov
mov
retf
or
cwde
loope
push
and
sub
test
sbb
lds
lahf
hlt
adc
arpl
lock
xor
xchg
pop
gs
add
and
dec
cmps
pop
aaa
push
sub
loop
ds
shl
cdq
das
cmc
add
adc
fs
push
adc
dec
(bad)
xlat
nop
or
call
mov
adc
lds
cmc
out
inc
adc
sbb
jp
xchg
ins
and
retf
adc
cmp
in
inc
popa
gs
mov
bound
out
cmp
inc
jmp
adc
jb
mov
dec
or
push
xor
das
inc
add
sbb
and
sbb
mov
adc
or
ret
jl
mov
push
test
retf
shl
mov
addr16
imul
pop
cmp
(bad)
fbld
xor
je
jns
ror
xlat
cmp
fwait
mov
xlat
ffreep
cld
mov
adc
sar
shr
push
mov
cmovg
dec
sub
imul
outs
push
jg
mov
cmp
bound
pop
rcl
ror
rcl
pop
ror
or
icebp
out
mov
lock
popf
call
stc
xchg
sub
inc
sub
inc
mov
and
and
fisub
ss
pusha
ins
ds
sbb
lock
frstor
addr16
mov
gs
and
mov
xchg
push
ror
sbb
leave
mov
inc
hlt
cmps
imul
pop
mov
xchg
or
fdivr
cs
sub
xchg
movs
pusha
xor
sbb
and
push
push
pop
ret
push
imul
test
xchg
loop
inc
jg
pop
imul
sbb
mov
rcl
mov
ss
xor
jo
sti
lahf
ror
ins
scas
popf
(bad)
ss
dec
mov
cmp
push
ja
pop
enter
popf
mov
rcr
and
push
and
sub
arpl
fwait
imul
and
add
and
f2xm1
or
and
jbe
adc
sub
int3
mov
sar
imul
test
dec
loopne
pop
mov
xchg
xchg
test
adc
shl
xchg
sub
stos
push
loope
push
loope
sti
enter
ins
jmp
jae
adc
lds
imul
xor
pop
mov
xchg
in
push
jne
sti
push
mov
pop
adc
leave
jae
dec
push
in
xor
(bad)
out
(bad)
clc
jne
push
fldenv
in
xchg
retf
pusha
inc
int3
shr
sbb
into
jmp
mov
push
fwait
xchg
push
scas
neg
mov
imul
push
xor
jmp
mov
cmp
test
ss
push
xor
xlat
fmul
out
lods
mov
sbb
movs
sbb
sub
mov
ss
repz
scas
and
dec
xor
xor
(bad)
xchg
jg
xor
mov
cmp
adc
xchg
and
mov
jmp
mov
aad
inc
cmp
push
sbb
mul
dec
add
cmps
int3
mov
enter
test
and
dec
pop
and
or
xchg
nop
dec
mov
or
push
cmp
loopne
push
sub
das
jnp
outs
cmps
mov
mov
out
inc
popf
or
mov
lods
mov
pop
in
mov
push
lds
mov
mov
loope
in
adc
inc
mov
dec
pop
pop
push
xchg
and
cmp
mov
inc
xchg
xchg
pop
cmp
sbb
test
jecxz
dec
push
push
adc
arpl
les
punpckhbw
mov
psubsb
mov
ficom
mov
shr
jp
int
jge
shl
aaa
cmps
cmps
push
lods
jmp
(bad)
movs
je
push
xor
jo
adc
scas
and
icebp
int
pop
adc
repz
lods
(bad)
push
jmp
inc
xchg
lock
adc
mov
cmp
xchg
cld
scas
sub
sub
sti
or
or
xor
dec
fwait
aas
jno
sahf
bound
loope
xlat
ins
xchg
cdq
cmp
inc
xchg
push
push
push
icebp
add
sbb
popf
or
sbb
fnstsw
out
in
(bad)
xlat
repnz
das
rcl
pop
xchg
addr16
and
loop
leave
xchg
sar
test
dec
dec
std
pop
ret
jnp
addr16
and
or
(bad)
mov
fcomp
dec
add
jp
adc
cmp
push
jg
mov
mov
outs
fnsave
mov
xchg
inc
hlt
inc
fnstsw
rep
xor
jae
int3
mov
lea
icebp
sub
xchg
add
pop
int3
arpl
in
mov
bound
scas
popa
ret
movs
adc
cmp
repnz
fwait
dec
adc
(bad)
(bad)
es
pop
xchg
div
mov
adc
mov
pop
outs
push
mov
mov
jb
xchg
shr
fs
push
mov
gs
mov
jecxz
enter
add
gs
jmp
jb
call
cmp
imul
in
push
je
mov
(bad)
in
cli
test
mov
mov
test
xlat
push
cmp
aam
dec
jns
daa
(bad)
cli
ds
es
jno
jp
mov
pop
push
add
icebp
xchg
in
add
mov
repz
mov
pop
mov
ret
addr16
pop
js
ds
addr16
data16
xchg
lock
xchg
test
fcomp
imul
add
outs
sub
mov
sub
jmp
or
xchg
cwde
jl
dec
popf
icebp
and
call
movs
mov
pushf
xchg
iret
mov
(bad)
rol
mov
dec
cmp
ss
ret
jno
cmp
add
(bad)
repz
lock
icebp
rcr
ss
cmp
loopne
adc
add
push
push
test
mov
retf
xchg
jo
jo
sbb
xchg
js
push
jnp
adc
es
push
mov
ja
test
jecxz
pop
mov
clc
xlat
adc
cmp
mov
sbb
fs
bound
out
sar
add
mov
sub
bound
mov
fisubr
sub
in
lods
add
xchg
sub
js
test
lock
xchg
popa
mov
cmp
sub
icebp
fdiv
stos
inc
fld
inc
adc
stos
vmread
fucom
inc
push
pop
pop
inc
jno
jge
and
adc
jne
xchg
into
and
dec
loopne
lea
out
xchg
in
imul
(bad)
mov
mov
mov
imul
cmps
adc
jo
lods
jl
outs
sbb
sbb
shl
cmps
add
mov
arpl
cmp
jp
imul
add
add
in
dec
sar
addr16
sub
iret
xchg
test
cmp
mov
jmp
mov
push
fucomp
jp
push
sbb
pop
(bad)
jne
and
dec
ja
mov
int
mov
les
div
mov
adc
dec
mov
hlt
rol
or
push
add
ret
and
cmps
sub
pushf
aaa
ret
retf
bnd
dec
inc
or
jecxz
in
fs
(bad)
das
cmc
xor
inc
xlat
xor
jnp
cmp
mov
stos
xchg
inc
gs
cmp
mov
jno
adc
sub
call
ss
aaa
js
das
scas
mov
adc
xor
and
mov
mov
xor
push
or
icebp
inc
inc
pushf
or
test
mov
push
cli
enter
shl
ret
or
ror
xchg
xor
sub
ds
mov
ins
in
mov
jns
adc
pop
pop
adc
pop
sti
iret
and
imul
pop
rcr
jne
cmp
shr
cmp
cmps
retf
sub
pop
mov
cs
fnsave
adc
je
nop
repnz
dec
jl
add
push
in
sbb
push
push
jo
ss
pushf
aam
scas
in
jb
scas
js
mov
pop
test
jecxz
xchg
cmp
jbe
adc
xchg
ds
xor
test
ret
test
out
ins
scas
jecxz
outs
jno
call
fwait
add
ins
xchg
and
xchg
mov
shr
mov
pushf
sbb
add
mov
std
das
cdq
or
xchg
jb
in
push
fs
sub
out
cmp
arpl
jg
and
fist
es
rcr
jno
xchg
test
add
jl
xor
nop
ins
in
jb
pop
mov
stos
dec
int
mov
pop
jne
add
mov
cmp
dec
xor
xchg
xchg
adc
retf
jmp
or
nop
mov
fdiv
mov
ror
mov
pop
loopne
mov
add
adc
test
clc
cmp
jb
jnp
nop
in
inc
and
mov
dec
inc
sar
imul
jl
mov
mov
push
xchg
sbb
adc
or
ins
pop
add
call
pop
mov
jp
lock
cmp
push
sub
mov
fld
ror
and
outs
es
lds
fisubr
push
loop
and
int
mov
inc
pop
lock
or
jmp
xchg
push
clc
ins
mov
popa
and
ss
xchg
fiadd
loope
mov
cmc
idiv
push
ret
add
dec
and
ja
outs
or
movs
inc
imul
outs
xchg
in
or
pop
je
loopne
(bad)
sub
cmp
lods
and
sub
pop
test
sbb
hlt
adc
ins
adc
and
(bad)
fmul
lods
sub
pop
movs
sbb
cmc
mov
xor
clc
jns
inc
addr16
movs
icebp
ins
sub
pop
adc
mov
dec
iret
imul
stc
push
in
or
push
xor
mov
cmp
xchg
shl
cwde
and
pop
outs
retf
and
jo
and
aad
fcom
mov
pop
cmp
scas
rcl
movs
aaa
movs
mov
mov
popa
mov
in
(bad)
jp
test
push
inc
sub
rol
xor
inc
lods
repnz
cmp
xor
mov
xchg
sbb
int3
xor
cmp
mov
jle
adc
mov
icebp
push
sbb
cmp
aam
push
mul
mov
fdivr
add
out
test
inc
clc
test
hlt
xchg
(bad)
and
call
mov
pop
cli
lds
mov
adc
shl
cmp
or
retf
std
icebp
(bad)
push
mov
cmp
stos
aaa
ins
dec
pop
inc
fs
add
jbe
mov
or
push
jo
ins
cdq
jge
mov
icebp
adc
jmp
xor
sbb
mov
mov
gs
jo
cs
mov
jmp
mov
sub
pushf
inc
jmp
scas
enter
aaa
fild
movs
xchg
and
add
int
lea
fwait
xchg
cli
mov
fidiv
retf
or
pop
xchg
lods
inc
repnz
(bad)
out
or
dec
and
dec
push
jmp
push
pusha
sub
loope
dec
(bad)
jge
outs
mov
ficom
dec
retf
cmp
pop
dec
xchg
aas
jecxz
ret
mov
aas
add
imul
mov
sbb
repz
fcom
lods
int
fldcw
xor
outs
or
mov
out
dec
retf
les
mov
jbe
mov
clc
and
fdivrp
enter
xor
xchg
inc
xor
pop
dec
xor
fcom
out
and
call
jb
popa
jg
je
int
out
loopne
push
iret
loop
ss
jnp
nop
(bad)
aaa
je
or
icebp
pop
xchg
mov
add
inc
clc
and
call
lds
push
daa
pop
pop
ret
cmp
movs
movs
cmp
mov
push
das
cld
mov
int3
and
cld
jmp
cmp
xor
inc
xchg
jg
dec
iret
xchg
jmp
jmp
lahf
pop
mov
jg
mov
into
outs
xchg
jae
mov
jg
movs
xor
loope
js
iret
test
or
sti
(bad)
retf
ficom
ja
fimul
push
push
sub
ja
dec
fidiv
jmp
push
stos
jne
jae
mov
cwde
push
jb
sbb
dec
xchg
mov
test
sub
out
sbb
xor
add
cli
hlt
mov
pop
pop
xchg
fsub
jmp
mov
xchg
lods
push
pop
push
nop
add
adc
dec
or
dec
mov
stos
shr
daa
sbb
cmps
fist
xchg
jb
dec
push
xchg
mov
jno
dec
(bad)
adc
add
bswap
stc
jl
cld
mov
iret
and
outs
fdivr
fwait
xchg
mov
into
hlt
int
inc
nop
inc
sbb
push
xchg
in
xchg
adc
mov
add
cmp
pop
popf
das
jl
and
loopne
adc
fild
(bad)
loop
int
pop
push
jb
ds
xchg
ret
mov
lds
add
sahf
xchg
je
(bad)
xor
sbb
xor
xchg
xor
fwait
jnp
les
adc
bound
xchg
sub
mov
and
inc
xchg
jge
add
push
inc
leave
dec
cwde
push
push
scas
call
adc
je
jp
jbe
pop
call
dec
mov
rcr
pop
push
jl
das
gs
sub
pushf
adc
loopne
xor
jecxz
xchg
push
rcr
adc
ja
jg
push
mov
xchg
leave
inc
xchg
add
mov
(bad)
sbb
xlat
xchg
mov
ret
(bad)
cmc
xchg
out
xchg
mov
pusha
rol
push
call
inc
fisttp
bound
sub
test
push
test
and
push
jl
mov
mov
adc
cwde
dec
sub
je
sbb
mov
xchg
cmp
jg
adc
in
imul
mov
stos
scas
addr16
(bad)
aam
pop
loopne
push
push
leave
pop
push
stos
pop
sub
lods
add
xchg
add
gs
xor
popa
pop
outs
loop
jmp
stos
xchg
jae
fs
add
mov
retf
cmp
mov
jns
test
stos
test
pusha
pop
cld
mov
mov
dec
cmps
adc
push
rcl
neg
mov
jl
jne
ins
and
pop
mov
pop
xchg
push
sbb
cs
fdiv
push
fdiv
mov
enter
ins
cmp
sbb
and
sbb
sahf
mov
bswap
jmp
je
cmp
hlt
aaa
dec
dec
bts
clc
jmp
xchg
cs
scas
lods
nop
push
xchg
pop
data16
lock
cmp
loopne
dec
(bad)
scas
push
jmp
xchg
xor
repz
pop
jge
inc
sbb
mov
pop
movs
jno
mov
shl
jnp
fidivr
pop
repz
les
mov
in
cld
mov
mov
push
stos
lds
lods
pop
loope
and
adc
cmovb
repz
and
cmp
shl
cmp
ss
lds
push
(bad)
add
push
sbb
jbe
and
outs
out
inc
repz
inc
mov
inc
push
pop
or
or
icebp
mov
cmp
adc
xchg
xchg
das
movs
adc
std
jle
leave
cld
push
fidivr
mov
mov
fwait
ds
nop
(bad)
ins
jecxz
sbb
outs
jmp
mov
and
fisub
xor
mul
sbb
cmp
into
pop
dec
sbb
or
repz
ret
adc
ss
and
sbb
ja
loope
adc
outs
cmp
ror
hlt
fimul
in
sahf
mov
outs
enter
mov
jne
fmul
push
inc
jb
xchg
xchg
inc
jp
mov
fist
inc
into
jnp
xor
sbb
xchg
cmp
sbb
retf
test
shr
or
sahf
pop
inc
aaa
out
icebp
push
cmp
pop
lods
(bad)
or
and
frstor
xlat
and
in
push
cmp
mov
loope
not
push
jnp
loopne
mov
jmp
mov
scas
adc
dec
(bad)
or
push
xchg
xor
loop
inc
je
(bad)
adc
xchg
(bad)
cmp
push
stc
jp
adc
sub
stos
call
or
stos
stos
mov
arpl
mov
cmps
in
fsub
jno
mov
fwait
xor
enter
add
ds
ds
pop
sub
add
fcmovb
mov
or
sbb
mov
jns
movs
adc
mov
push
cld
xor
inc
ficom
retf
and
and
ret
out
push
ins
outs
cs
movlps
jecxz
adc
ins
and
xor
xchg
cli
ins
jmp
rcl
cmp
ret
fist
cdq
sbb
mov
and
imul
(bad)
retf
popa
mov
add
sbb
adc
in
pop
in
mov
loop
js
jg
mov
adc
push
es
or
hlt
xor
out
sar
icebp
or
in
(bad)
adc
sbb
fstp
xchg
mov
mov
mov
test
xchg
in
(bad)
int
add
popa
adc
jmp
push
retf
hlt
call
mov
nop
pop
xchg
repz
fimul
mov
add
jmp
lahf
and
mov
sbb
into
mov
xor
xchg
popa
lahf
jge
mov
mov
lods
inc
inc
aam
mov
push
test
out
faddp
icebp
jne
and
sub
mov
adc
or
cmp
mov
lods
jmp
adc
xor
cmp
pop
pop
mov
mov
pop
outs
mov
xor
loope
dec
mov
pop
sub
sub
xchg
loope
mov
sbb
lods
xor
mov
movs
xor
cs
out
dec
pop
mov
ror
mov
out
(bad)
loope
mov
sub
int
pop
mov
shl
cmp
xor
ret
fld
out
aaa
xchg
inc
scas
ror
pop
add
inc
mov
div
cmc
cmps
mov
dec
jnp
xor
gs
dec
mov
xchg
movs
inc
cs
sbb
add
clc
push
ins
and
sub
popa
cld
cmp
shr
jnp
mov
sbb
rcl
scas
mov
cs
mov
inc
(bad)
ret
mov
call
in
adc
sbb
inc
int3
es
cmp
fst
mov
cmp
icebp
jbe
push
sub
je
pop
lods
in
or
xor
loopne
mov
rol
xchg
stos
sbb
adc
lahf
stc
stos
int
dec
dec
imul
hlt
cld
shl
jecxz
int
pop
movs
mov
or
in
adc
mov
cld
hlt
fld
retf
call
cwde
xchg
xchg
dec
call
jecxz
aaa
pusha
jnp
push
cmps
mov
leave
mov
ins
cmp
pusha
cdq
or
and
xchg
mov
in
jno
sub
cmps
xchg
jecxz
(bad)
xlat
inc
cld
pushf
dec
xor
jmp
sbb
int3
jg
cwde
and
cld
or
fisubr
add
mov
rol
aad
or
jnp
std
push
xchg
ja
ret
out
xchg
xor
mov
pop
adc
mov
adc
idiv
out
dec
(bad)
dec
lock
or
or
lods
jecxz
push
loopne
xchg
dec
fs
pop
je
mov
cld
cmp
pop
add
(bad)
gs
add
sub
cmp
xchg
pop
call
xor
jl
inc
or
pushf
dec
arpl
push
into
aas
jns
gs
gs
(bad)
loopne
aaa
xor
out
es
inc
mov
or
cmp
std
adc
leave
loop
in
test
gs
mov
out
les
mov
sub
(bad)
jmp
mov
mov
push
inc
sub
fstp
popf
mov
xchg
add
jecxz
push
mov
dec
fild
div
mov
test
adc
iret
cmp
mov
loop
sub
mov
dec
xchg
js
jo
inc
cmp
jb
lods
jge
pop
les
pop
cmp
fdivr
xor
cmp
ror
and
call
sub
pop
mov
aas
lea
jge
push
push
mov
ficom
hlt
clc
xlat
scas
retf
sub
into
mov
push
bound
loop
or
or
cdq
mov
(bad)
fsub
cmps
xor
test
data16
imul
pusha
in
or
push
bound
pop
je
sbb
mov
mov
jg
and
mov
ficomp
inc
mov
jne
add
add
or
cs
fldenv
inc
(bad)
mov
xor
adc
xor
sbb
loope
sbb
jo
shl
jg
inc
dec
rol
aam
addr16
push
lock
ret
cld
clc
xor
pop
ret
pop
imul
rol
or
lea
lea
xchg
inc
hlt
aas
vandnps
bound
stos
pusha
push
data16
jmp
pop
dec
repnz
pop
pop
push
mul
imul
mov
or
push
in
mov
nop
test
lods
dec
xor
fsub
xor
and
ss
bnd
or
xchg
mov
nop
jb
imul
dec
shl
fs
sbb
and
inc
mov
fs
test
jo
in
cmp
mov
(bad)
inc
mov
and
and
ins
in
imul
cmp
xchg
int3
fisttp
(bad)
pop
cmc
jmp
mov
nop
hlt
add
mov
mov
xchg
sbb
add
or
mov
vpaddd
retf
and
(bad)
icebp
dec
or
sub
outs
jne
and
dec
jae
scas
xor
repnz
jae
lock
pop
add
popa
(bad)
push
lods
fist
fld
es
test
loop
cmps
add
fbld
and
xor
jae
loop
sub
xchg
iret
mov
int3
xor
and
(bad)
xlat
sbb
mov
mov
leave
pushf
not
(bad)
(bad)
mov
pusha
in
loop
sub
ins
fnsave
fimul
popa
rol
or
jmp
cmp
mov
fcmovnb
inc
in
jmp
mov
sub
push
movs
and
dec
dec
mov
xor
fiadd
mov
or
shl
push
mov
aaa
cmp
loop
scas
xchg
js
lea
aam
test
lahf
adc
pop
icebp
push
xchg
popf
not
mov
xchg
push
push
push
mov
movs
pop
dec
call
stos
pop
lea
ret
sub
hlt
or
or
push
mov
mov
es
gs
mov
data16
and
hlt
push
cmps
lock
lods
jne
lea
mov
das
cli
push
xchg
stos
pop
adc
in
cs
add
adc
and
push
inc
push
sbb
cs
pop
cli
and
inc
cmp
dec
outs
inc
mov
xchg
adc
rcr
into
getsec
xor
push
mov
pushf
ror
push
lods
movs
sbb
jl
adc
pop
pop
das
ror
push
sbb
lods
daa
pop
adc
inc
adc
stc
mov
mov
retf
mov
fidivr
shl
scas
or
mov
fist
or
cli
xchg
sub
ret
mov
mov
cs
inc
(bad)
inc
mov
ds
nop
loop
and
sub
test
lods
aam
pusha
aas
sbb
pop
(bad)
fist
data16
das
mov
pop
jge
adc
adc
in
(bad)
jo
mov
(bad)
cmc
push
adc
adc
mul
adc
jne
inc
mov
outs
push
retf
or
daa
mov
mov
xor
je
mov
mov
sub
jo
jno
mov
mov
test
je
enter
mov
(bad)
jb
or
sub
mov
test
jp
stos
out
clc
mov
lods
mov
inc
cmps
repz
jmp
daa
aam
es
pop
stos
ja
sub
push
stos
xchg
int
sub
xchg
cmc
test
mov
lods
mov
add
push
fcom
jmp
or
cld
jae
nop
adc
sbb
aas
adc
in
pop
mov
rcr
fimul
or
adc
and
jg
sahf
xor
test
mov
test
mov
pop
sbb
cmp
cmc
imul
push
or
mov
jp
pop
ds
sahf
mov
inc
int3
stc
mov
jnp
test
mov
mov
sub
xchg
imul
and
xor
cmp
mov
adc
add
stos
push
and
xchg
outs
addr16
mov
xor
cmc
stos
fcmovnu
not
jle
nop
lahf
mov
pop
out
pushf
jno
(bad)
cmc
cmp
xchg
fbstp
xor
dec
fistp
and
loopne
mov
cmc
gs
jae
ins
test
jle
and
mov
shr
adc
fucomi
mov
nop
outs
adc
mov
pop
cwde
retf
loop
iret
mov
enter
xor
rol
rol
sbb
outs
adc
(bad)
pop
outs
sub
xchg
outs
aas
pop
jge
in
lea
dec
pop
push
mov
lods
inc
xchg
out
lahf
hlt
stos
imul
sub
xor
pusha
mov
jmp
sub
pop
imul
push
loope
shl
adc
pop
cmp
dec
ins
mov
cdq
sti
repz
lahf
dec
jne
pop
mov
in
dec
inc
pop
test
jb
pop
jle
cmc
gs
add
ins
jne
fisub
push
xchg
outs
arpl
(bad)
xor
xchg
cdq
inc
std
ror
add
out
pop
and
or
addr16
(bad)
scas
jnp
outs
fwait
cld
cs
xor
and
data16
mul
xor
xchg
imul
mov
leave
jmp
jmp
call
aad
xor
inc
jbe
les
ret
and
and
pop
and
adc
and
pop
shl
jnp
es
loope
loope
dec
mov
pop
sub
xor
inc
(bad)
push
cmp
or
push
stos
icebp
pop
outs
lahf
xor
(bad)
pop
mov
aaa
or
or
loopne
scas
shl
or
push
arpl
mov
pop
mov
inc
les
push
jg
mov
(bad)
shl
stos
scas
push
sbb
xor
in
rcl
xor
xor
repnz
jb
xchg
rcl
sub
lods
mov
mov
xor
dec
imul
movs
mov
xchg
sub
xor
xor
frstor
add
pop
inc
inc
gs
or
jl
(bad)
aam
(bad)
mov
pop
push
outs
mov
inc
pop
lods
xchg
add
sbb
out
jae
xor
inc
mov
xor
loop
call
push
mov
out
mov
and
adc
scas
push
jge
xchg
test
or
add
cmc
or
xchg
cmp
xchg
add
pop
hlt
pop
sbb
mov
(bad)
and
int3
mov
test
jo
sbb
mov
mov
cmp
sub
or
imul
in
sti
nop
mov
xchg
scas
push
sub
ror
jae
mov
add
pop
(bad)
(bad)
mov
cmp
cli
ret
sbb
xchg
fisttp
push
mov
scas
sahf
test
(bad)
repnz
je
scas
jb
test
pop
xchg
ret
xchg
jno
sti
mov
pop
add
xor
pop
cmc
push
xor
push
cli
add
inc
in
pop
mov
dec
xchg
or
adc
movs
lods
jmp
add
or
loopne
adc
xchg
jle
dec
and
out
test
cmp
fnsave
jae
and
xchg
adc
into
ret
pop
cmp
jge
ins
or
je
inc
mov
aaa
mov
jnp
loope
scas
paddd
aas
jge
or
sbb
push
gs
adc
loop
mov
push
movs
retf
mov
iret
mov
ins
push
jmp
mov
test
nop
and
lds
daa
jb
leave
sub
loop
pop
(bad)
in
call
ins
inc
les
jne
test
shl
loop
ds
or
stos
mov
add
dec
ja
out
test
inc
pop
cmp
cdq
sbb
adc
dec
cmp
test
rcr
rcl
adc
dec
cmc
inc
sbb
mov
mul
push
loope
push
daa
stos
aaa
mov
adc
push
xor
fwait
movs
or
push
mov
pop
jbe
fiadd
jnp
sub
or
fs
popa
(bad)
jmp
sbb
ror
fidivr
lock
mov
and
xchg
fbstp
jbe
mov
or
push
ror
ins
addr16
cmp
sti
or
sbb
call
out
adc
push
loop
fs
test
mov
cmp
inc
jo
enter
mov
pop
push
jno
cmp
retf
pop
movs
dec
cli
clc
sbb
pop
jnp
dec
iret
sbb
test
fnstenv
test
dec
mov
out
(bad)
or
lea
cld
neg
fdivr
sti
int3
jmp
stos
leave
(bad)
jle
xchg
cmps
cmp
imul
adc
jae
shl
mul
push
ret
or
cmp
xor
ss
sub
rcl
retf
data16
or
or
mov
xor
mov
xchg
and
dec
int
int
add
sub
int3
loope
cmp
and
stc
(bad)
pusha
iret
clc
push
push
lea
jp
ins
fmul
out
outs
inc
inc
ja
xchg
jmp
cmp
add
or
mov
jno
aad
shr
jns
cmc
imul
(bad)
xchg
fisub
loopne
leave
(bad)
gs
cmp
inc
inc
push
punpckldq
mul
sub
gs
cmp
mov
xor
sbb
stc
push
pop
lahf
jae
cmp
fdivr
(bad)
ds
mov
pop
jmp
xor
mov
add
add
ss
dec
jo
dec
movs
push
push
dec
mov
push
pop
popf
das
(bad)
loope
movs
sub
adc
stc
or
out
cmps
xchg
xchg
inc
gs
or
or
push
test
xchg
xchg
pop
jbe
aas
call
dec
bound
(bad)
stc
bound
jb
xchg
jecxz
pushf
pop
sbb
mov
mov
call
ret
stos
arpl
adc
cmp
xor
adc
cmp
ret
push
ret
pop
pop
movs
call
(bad)
xor
ret
mov
pop
repz
mov
pop
leave
lds
enter
ficomp
add
retf
not
popf
and
mov
hlt
xor
cmp
aas
aas
fldcw
jmp
inc
in
cmp
ss
mul
pop
(bad)
mov
ret
pop
pop
sbb
icebp
jle
pop
sbb
jmp
add
or
jmp
xchg
jo
mov
xor
ret
xchg
sbb
jbe
ins
scas
xchg
mov
cmp
imul
jne
lds
std
or
fcom
add
in
and
mov
fstp
jmp
pop
adc
imul
or
mov
pop
mov
push
cmp
std
adc
lea
and
cdq
in
mov
daa
and
mov
jl
popa
or
(bad)
mov
pop
push
adc
add
add
mov
push
inc
sar
sbb
pop
js
adc
pop
retf
pop
jle
test
xor
mov
js
mov
ret
das
or
dec
js
lahf
push
xor
test
imul
push
jmp
xchg
fbld
sub
and
rol
cs
das
push
outs
call
scas
sub
(bad)
xlat
adc
mov
jo
mov
out
xchg
sub
les
stos
iret
cwde
xchg
xchg
movs
mov
dec
and
outs
xchg
stos
dec
dec
xor
xchg
jl
out
adc
iret
inc
inc
into
ret
aam
pushf
icebp
xchg
and
cmp
fldenv
clc
jp
mov
in
sub
sbb
sub
jns
(bad)
xor
sbb
aad
xchg
jnp
movs
cmc
les
add
sub
mov
jl
push
pop
int
cs
or
sub
xor
mov
jnp
mov
cld
or
mov
mov
sub
ror
mov
fld
push
xor
jne
mov
push
gs
clc
mov
mov
rol
div
ficomp
pop
aas
ins
jo
mov
push
aam
mov
sub
pop
pop
inc
leave
jns
pusha
lea
je
jne
movs
inc
mov
stos
out
add
inc
call
push
mov
push
ss
sbb
xor
jbe
adc
mov
mov
ins
jb
cmps
fdiv
fwait
repz
clc
xchg
jle
adc
add
mov
mov
push
jg
addr16
or
push
daa
adc
iret
test
mov
shl
mov
dec
mov
xor
imul
es
xor
adc
jbe
int
adc
(bad)
movs
mov
mov
shl
sbb
adc
add
xor
addr16
das
or
mov
xchg
add
pop
cmps
cmp
mov
push
mov
rcr
mov
xchg
out
jb
out
test
xrstor
inc
cmp
lss
call
add
in
bswap
in
les
test
jno
stos
xchg
adc
inc
jge
mov
mov
xor
or
clc
shr
push
into
mov
jle
push
out
dec
cmc
lea
fcom
jb
xchg
(bad)
push
push
call
pop
retf
pusha
sub
sqrtps
sti
in
cli
mov
fsubr
cmp
mov
add
push
scas
or
in
inc
dec
in
pop
inc
lahf
inc
xor
dec
sub
iret
xchg
gs
test
jmp
js
push
jmp
jmp
adc
inc
and
or
fsubr
adc
inc
int3
jno
xchg
push
cmps
sbb
imul
adc
jb
retf
xchg
mov
lods
sti
in
(bad)
ret
in
fs
or
test
daa
sar
pop
std
iret
(bad)
jns
shl
push
mov
xchg
data16
jle
fwait
jge
outs
cmp
mov
aas
in
xchg
mov
push
lahf
imul
hlt
push
add
cli
inc
ss
xor
int
lea
inc
pop
and
mov
call
xchg
outs
mov
in
pop
hlt
xor
xlat
dec
inc
(bad)
jge
icebp
fadd
mov
addr16
cs
retf
jb
mov
stos
imul
mov
or
cmps
mov
movs
push
adc
sub
add
mov
sub
sbb
pop
inc
cmp
xor
out
(bad)
fwait
(bad)
cmp
mov
jge
movs
fadd
out
out
xchg
ja
mov
cs
adc
pop
cwde
addr16
bswap
jo
push
out
in
mov
and
loop
mov
push
jmp
aas
push
pminub
js
add
pusha
idiv
inc
xchg
inc
inc
xchg
dec
add
ds
add
push
mov
cld
jb
mov
daa
(bad)
out
test
jbe
ret
aam
movs
call
lods
cli
add
mov
add
out
enter
cmps
mov
(bad)
push
repnz
shl
pop
adc
jno
xor
retf
jae
lods
es
push
jmp
aas
xchg
xor
jns
out
or
dec
mov
xchg
jnp
je
(bad)
stos
push
inc
(bad)
mov
xchg
stos
leave
add
cmp
mov
icebp
sahf
daa
iret
cli
hlt
xor
cmp
xchg
jno
mov
aad
sub
pop
cmp
jno
inc
push
adc
std
in
cdq
pusha
adc
push
repz
jg
and
xor
xchg
aaa
in
and
scas
imul
iret
out
(bad)
mov
jo
cld
das
aaa
(bad)
xor
mov
imul
movs
imul
ins
sub
mov
dec
test
adc
sar
jmp
stc
fistp
leave
or
test
dec
clc
sbb
jbe
cmp
fisttp
jo
mov
jmp
xlat
add
lea
lds
in
je
push
lods
loop
xchg
sub
add
inc
ins
or
stc
mov
jmp
mov
lods
shl
mov
mov
jnp
xlat
jmp
xchg
aaa
jmp
inc
dec
cwde
addr16
out
bound
data16
int
adc
pop
xor
lock
(bad)
sbb
xchg
xchg
out
jno
(bad)
out
in
jp
sbb
cmp
je
push
fcomip
push
(bad)
jecxz
dec
xor
jmp
push
in
retf
sub
adc
test
in
inc
adc
and
daa
ret
dec
repz
push
mov
xor
sbb
inc
shr
inc
sub
push
jge
pop
(bad)
stc
shr
xor
or
test
push
dec
sbb
sbb
jecxz
mov
mov
mov
fwait
pushf
cli
adc
ret
call
jno
inc
adc
jmp
cmp
outs
in
int3
in
sar
sahf
sub
push
je
pop
test
jnp
aaa
push
mov
daa
and
fnstsw
add
mov
lock
(bad)
rol
mov
push
and
or
sbb
imul
cmp
je
(bad)
(bad)
out
jl
cmp
bound
ret
inc
push
cwde
add
mov
add
jg
aad
jb
mov
and
loopne
pushf
lea
and
sub
cmp
jbe
aam
inc
dec
and
jmp
shl
fs
push
enter
(bad)
fld
pop
jbe
inc
jmp
jmp
test
inc
mov
aas
fild
int3
sbb
shl
push
push
shl
push
inc
lock
test
mov
xlat
frstor
lds
jmp
mov
inc
cmps
ja
pop
xchg
push
adc
fsubr
xlat
lock
fild
jno
cmps
sbb
mov
fcom
jge
or
dec
arpl
loope
scas
rcl
test
sub
dec
cmps
ins
mov
jbe
pop
rcl
ds
jg
ror
or
sub
lds
push
in
push
div
xchg
fxch
je
rol
leave
lock
fist
xchg
mov
sar
pop
mov
or
out
xchg
sbb
pop
shl
mov
outs
jmp
retf
pushf
lods
inc
or
stos
inc
push
btr
loop
scas
inc
adc
popa
and
sub
pop
mov
pop
out
in
pop
xchg
call
int
or
push
sub
jb
mov
int3
cmp
(bad)
aas
cmp
pop
cmps
bound
ret
in
adc
cmp
movs
cwde
imul
pusha
inc
scas
pop
jnp
mov
mov
fs
sub
dec
push
adc
inc
clc
stc
(bad)
repz
xor
inc
or
fwait
inc
inc
xchg
xchg
inc
and
pop
cmp
bound
pop
add
pop
fdivp
dec
or
or
ins
out
jg
inc
test
cmp
and
add
loope
push
push
push
xor
movs
dec
ins
imul
stos
adc
scas
enter
cwde
fnstsw
add
retf
inc
add
sbb
push
jp
inc
loopne
jle
jge
aaa
mov
pop
jmp
mov
and
cmc
pop
cmp
push
arpl
scas
int
aas
rdpmc
push
les
lods
lahf
(bad)
into
inc
or
mov
fs
cmps
jbe
mov
xor
aas
popf
sbb
sti
pop
lock
adc
in
push
sbb
xchg
arpl
jnp
loopne
fadd
mov
xchg
adc
pop
pusha
dec
jo
push
mov
fimul
lods
aam
mov
jnp
jne
cmc
retf
rcl
inc
mov
out
(bad)
int3
in
addr16
dec
icebp
adc
hlt
test
push
int
cmp
(bad)
xchg
add
push
lods
rol
cli
mov
ret
cmps
ror
xor
fnstenv
xchg
idiv
loopne
mov
jp
cmp
sbb
lea
adc
cmps
mov
(bad)
shl
mov
adc
js
stc
fiadd
pop
or
jae
pusha
jnp
in
out
inc
sub
fist
mov
jbe
push
sub
mov
addr16
push
mov
imul
pop
mov
jp
jns
in
push
push
jb
mov
js
add
mov
in
jae
adc
cmc
xchg
add
pusha
nop
pusha
push
je
pop
in
sbb
cld
jno
mov
sbb
outs
jne
popf
rcr
outs
js
cmp
mov
add
push
push
adc
or
xchg
inc
nop
test
aam
outs
fcmovne
add
fisubr
test
pop
imul
adc
pop
lock
stos
stos
mov
pop
and
aad
jne
mov
arpl
js
jae
mov
repnz
icebp
fidiv
ret
dec
xor
je
sbb
cmp
mov
inc
inc
idiv
jp
sub
xor
imul
dec
pop
push
fild
aam
sar
scas
cmp
jp
mov
adc
imul
lods
jmp
jne
mov
xchg
pushf
cmp
jecxz
inc
xchg
jns
push
test
or
stos
jno
loope
inc
and
sub
sub
cmp
test
jg
inc
fmul
bound
js
pusha
fistp
aaa
repnz
(bad)
iret
movs
shl
dec
repz
or
jle
popa
out
cmp
test
ja
icebp
xchg
cmp
test
stos
sub
pop
xchg
mov
repnz
mov
adc
fld
pop
loope
loopne
jno
clc
movzx
int
jl
inc
mov
mov
mov
int
add
mov
aad
ror
inc
dec
mov
ror
dec
js
cmp
mov
lods
pop
mov
mul
call
dec
xchg
aaa
imul
les
jecxz
outs
cmps
pop
fstp
xchg
and
test
out
dec
movs
mov
mov
and
xchg
mov
xchg
cmp
ss
push
mov
test
cmp
xchg
ss
add
mov
mov
sub
jbe
sub
imul
xor
mov
std
cli
lock
pop
inc
rol
fild
out
add
retf
push
loope
pop
jle
jg
mov
arpl
jae
cld
in
mov
test
add
in
and
stos
adc
out
out
mov
mov
and
cld
inc
sub
adc
loopne
loope
mov
inc
add
fwait
(bad)
mov
idiv
mov
xchg
jno
jge
pop
mov
xchg
mov
cli
outs
outs
mov
cmp
les
cmp
scas
cmp
push
jg
xlat
mov
scas
test
gs
pushf
fistp
push
push
sbb
sub
cwde
mov
std
pusha
and
ss
les
pminsw
pop
sub
lahf
pop
shr
sbb
loope
xchg
jecxz
add
xlat
sbb
pop
in
inc
mov
fs
sbb
xlat
mov
test
xor
xchg
pop
lds
and
sub
mov
loop
xlat
(bad)
jg
mov
les
sahf
imul
in
aad
lahf
jns
aad
mov
sar
rcr
dec
jnp
in
cmp
bnd
fisubr
add
imul
ja
push
jg
and
(bad)
add
cmp
les
jo
mov
jns
clc
mov
outs
stc
or
mov
adc
(bad)
aam
cmp
push
lock
inc
and
je
mov
xchg
popf
add
xchg
stc
or
add
bswap
mov
sbb
lahf
call
fdivr
fs
fst
into
mov
sbb
and
lds
dec
in
add
xchg
nop
adc
adc
loop
or
mov
push
in
hlt
dec
adc
sbb
jp
loope
jge
jo
sub
push
fst
sbb
(bad)
mov
xchg
pop
and
loopne
mov
mov
cmp
test
fsub
and
adc
fsub
in
lods
xchg
or
and
pop
in
inc
iret
repz
nop
adc
mov
in
add
pop
cmp
pop
push
cmp
loop
inc
inc
xor
fisubr
leave
mov
in
mov
jns
clc
test
add
mov
or
outs
loope
popf
adc
stos
ror
xchg
ror
mov
mov
jo
pop
aam
adc
cmp
je
je
fisubr
fsub
inc
add
inc
push
push
adc
jns
(bad)
ftst
or
push
fbstp
ret
out
ror
pop
and
mov
lods
cmp
call
ret
mov
adc
outs
mov
adc
mov
add
pop
sbb
fcomi
sbb
fs
inc
sbb
aam
mov
in
jmp
cli
loop
lea
adc
sbb
cmp
pop
xor
mov
inc
xchg
aaa
jmp
adc
sbb
cmp
out
daa
and
call
mov
adc
sub
popa
(bad)
call
inc
pop
hlt
and
outs
movs
sti
daa
pop
xchg
dec
mov
imul
xor
pop
or
jo
and
call
fcomp
(bad)
push
pop
ja
pop
ins
cmp
and
test
mov
xchg
loope
pop
test
add
das
retf
shl
les
fiadd
pusha
fdivrp
shr
xchg
aas
ds
jg
test
jns
inc
daa
test
jns
mov
inc
shl
rcr
rcl
test
mov
sti
or
pusha
pop
not
push
dec
sbb
mov
xchg
scas
cmc
ins
push
mov
and
mov
movs
test
cmp
or
xchg
cmpxchg
sar
adc
pop
loope
push
jecxz
jg
daa
push
rcl
dec
mov
shr
jge
add
test
push
sub
(bad)
jnp
shl
ret
sub
jl
in
(bad)
mov
ds
loope
mov
rcr
aaa
sbb
and
sub
jg
mov
inc
xchg
adc
mov
cwde
xchg
das
movs
push
pusha
adc
or
or
test
mov
mov
push
imul
fld
jb
mov
test
inc
shl
dec
dec
xchg
xor
stc
sub
addr16
dec
lods
inc
jecxz
cs
jmp
ins
fwait
dec
mov
mul
fadd
fild
imul
sar
fistp
scas
psrld
mov
stos
dec
in
jno
mov
ss
cmp
(bad)
ins
mov
imul
mov
aaa
dec
mov
dec
pop
mov
mov
inc
push
inc
inc
scas
mov
les
mov
jb
ret
pop
xchg
(bad)
rcl
push
jns
fisttp
dec
mov
mov
and
xchg
inc
imul
push
push
mov
dec
repz
cmp
add
push
mov
xor
repnz
into
leave
lods
pop
cmc
out
out
jl
jne
(bad)
push
cli
sti
inc
sub
imul
clc
mov
fs
dec
sub
ror
xor
xchg
push
das
add
mov
cmp
or
shl
dec
repnz
ins
xlat
adc
iret
inc
int
call
daa
add
sub
stos
adc
inc
outs
loope
fnsave
in
add
test
retf
retf
(bad)
mov
mov
loope
lds
xor
jmp
add
ret
adc
(bad)
dec
mov
or
cli
sbb
in
ret
pop
and
test
adc
loop
lods
call
push
or
cmps
gs
(bad)
cmp
in
dec
jbe
test
pusha
test
aad
jnp
pop
xor
movs
stc
push
jg
pop
cmp
popf
pop
test
or
mov
push
fmul
fucom
xor
ret
mov
sub
add
sbb
movs
bnd
daa
push
xor
ja
cdq
or
mov
test
fwait
ja
jmp
inc
push
and
adc
jg
xor
ror
(bad)
je
lock
jbe
stos
loop
in
aas
jecxz
sbb
adc
sbb
dec
pop
cmc
xchg
dec
es
dec
xchg
pop
mov
in
lods
iret
ins
xor
out
shl
mov
shr
scas
xlat
jp
sbb
inc
push
cmps
sub
adc
shl
or
cmp
jbe
xor
or
or
cmp
jmp
xchg
or
dec
mov
adc
add
aaa
sbb
arpl
jl
pop
mov
ficomp
out
sub
aam
or
dec
dec
dec
ret
xlat
fdiv
mov
ss
ds
scas
dec
in
sahf
push
cmps
test
cwde
jbe
inc
div
mov
dec
outs
mul
jge
and
fldcw
add
iret
adc
push
rol
pushf
fsubr
cmps
cmp
adc
hlt
(bad)
int3
pop
push
clc
repz
xor
dec
pop
xchg
lock
in
lods
je
xor
fs
gs
xchg
rcr
pop
jp
cmp
ins
jecxz
ins
repnz
xor
outs
(bad)
test
rdmsr
addr16
mov
inc
xchg
cmc
mov
int
sbb
push
rcr
push
mov
ret
mov
and
je
mov
mov
cmp
or
push
cmp
add
sti
data16
out
and
aam
adc
shl
dec
mov
inc
sub
lods
push
sub
pushf
cmp
rcl
cmp
retf
cwde
xlat
bound
leave
test
scas
fidivr
dec
cli
cdq
inc
add
jmp
adc
repz
outs
js
mov
dec
cmps
ss
loop
fsub
and
jno
test
add
cmp
jmp
mov
mov
pop
add
inc
in
pop
inc
retf
mov
jg
out
les
or
sbb
int
or
out
cmp
jnp
fwait
mov
pop
jb
mov
or
mov
mov
mov
adc
add
cmps
sub
(bad)
cld
aas
out
fcomp
jmp
or
xor
cmp
dec
mov
sbb
and
push
push
add
pop
mov
pop
aaa
cwde
push
lods
push
dec
adc
or
lods
xor
scas
repz
cmps
sbb
push
cmps
fwait
or
loopne
add
popf
add
scas
arpl
xchg
loop
xchg
push
scas
jmp
out
xchg
push
ss
lock
push
dec
test
call
cld
loope
xchg
push
mov
fucomip
aad
imul
add
xchg
neg
jns
stc
pop
jae
outs
and
arpl
jne
pusha
or
(bad)
sub
mov
pop
aas
mov
movs
jle
inc
or
mov
push
jle
sbb
pushw
dec
fs
cmc
push
stc
mov
push
mov
jmp
fldenv
pop
mov
add
(bad)
jge
ret
ficom
xchg
cld
jle
shr
call
mov
jb
jge
int
(bad)
stc
(bad)
repz
inc
jo
cli
cli
iret
out
fimul
or
xchg
rol
int3
(bad)
mov
lods
inc
retf
clc
ror
jb
out
jbe
nop
in
dec
push
cmps
adc
push
mov
inc
inc
adc
sub
dec
aad
add
ss
(bad)
adc
outs
pop
push
dec
stc
cmp
dec
adc
clc
cwde
sbb
imul
push
dec
mov
adc
push
pop
xor
rol
imul
jg
xor
add
pop
popf
sub
cmc
lea
inc
adc
je
aad
push
fisub
and
xor
imul
or
cmps
and
cmp
out
adc
rol
and
jbe
stos
jle
cld
xor
repnz
xchg
in
jmp
ss
outs
fld
ds
inc
pop
pop
jl
pushf
inc
ss
and
push
mov
and
stos
jp
lods
fld
lea
test
and
pop
cmc
xlat
sbb
lods
movs
lahf
popa
jns
add
add
inc
sbb
not
pop
stos
mov
pop
aaa
or
inc
jne
jns
dec
and
retf
popa
lods
stos
ins
sbb
pop
dec
cld
mov
lods
js
scas
pop
retf
cmps
add
mov
mov
inc
dec
out
mov
lods
ret
in
inc
retf
(bad)
sbb
xlat
stc
in
xlat
push
ds
dec
mov
in
jecxz
mov
lahf
cdq
xor
addr16
inc
ja
jbe
inc
mov
std
push
(bad)
ret
test
test
pusha
pusha
lock
mov
cli
mov
test
sar
popf
es
pop
bound
pop
jp
loopne
jno
iret
jmp
adc
or
pop
sub
retf
loope
ret
(bad)
pop
pop
mov
or
dec
adc
and
arpl
sti
out
loopne
or
aad
xchg
out
psrld
in
(bad)
jb
(bad)
pop
clc
jns
not
sbb
pop
nop
clc
test
cwde
and
mov
daa
adc
mov
dec
pop
cmp
jge
bnd
leave
out
imul
shl
rcl
pop
sti
xchg
fstp
mov
pop
stc
mov
aas
sub
add
(bad)
loope
mov
push
lods
sbb
or
ins
and
cmp
inc
cmps
add
pop
fmul
or
and
jp
mov
aaa
mov
sbb
test
or
sbb
cmp
sub
add
rcl
into
mov
or
push
xchg
sub
pop
jbe
mov
inc
add
mov
mul
push
jge
jnp
fsubr
imul
call
mov
sbb
ret
movaps
xor
test
jae
inc
pop
mov
add
inc
imul
sti
mov
in
nop
out
sbb
aam
cdq
inc
adc
das
adc
xchg
jbe
jecxz
jb
or
popa
loopne
pop
out
imul
lahf
add
pop
(bad)
xchg
pop
shr
iret
js
inc
pop
fidivr
fistp
and
rcr
fsub
mov
inc
xchg
popf
sub
and
lock
fidivr
dec
xor
hlt
jl
push
je
popf
jmp
pop
movs
mov
cmps
lock
icebp
in
adc
fadd
mov
ins
mov
test
xchg
adc
inc
ror
sub
gs
jb
out
sbb
cmp
jge
daa
fsub
aad
xor
sbb
adc
cmps
sbb
pop
ins
xchg
push
cld
mov
xor
test
jnp
jp
das
fldcw
cwde
jp
fs
out
jge
sbb
pop
sti
push
mov
sub
push
or
and
sbb
and
cli
fcmovbe
and
aaa
stos
fs
push
xchg
pop
out
jp
imul
add
or
xchg
test
dec
push
fdiv
push
or
iret
lock
xor
ror
jo
fsubr
xchg
popf
mov
mul
mov
aad
xor
sbb
dec
lods
popa
popf
movs
mov
retf
cmp
pop
pushf
retf
test
cdq
scas
and
push
mov
inc
xchg
cmp
xor
mov
lock
add
sub
and
mov
sub
mov
call
sbb
stc
pop
push
loope
pop
dec
jmp
gs
jno
mov
jle
movs
lea
xlat
or
pop
fmul
jb
sub
or
aad
mov
fsubrp
fwait
mov
cmps
xor
(bad)
aaa
mov
mov
push
scas
mov
jmp
jno
mov
les
lods
call
cmp
nop
push
int3
scas
sahf
dec
jns
pusha
test
aas
cmp
mov
or
mov
call
add
popf
push
outs
or
icebp
jmp
in
or
push
mov
mov
dec
aaa
or
(bad)
mov
das
sbb
dec
repz
adc
inc
mov
cmp
xchg
sbb
retf
jecxz
sbb
js
or
mov
jnp
inc
adc
cmp
cli
push
cdq
nop
xor
leave
in
shr
mov
xchg
mov
std
jbe
fisubr
haddps
dec
stos
aam
sbb
sahf
cmps
pop
adc
cmps
test
adc
enter
std
fnstcw
jge
add
call
aam
push
cmp
(bad)
adc
pop
mov
faddp
test
sbb
xchg
mov
les
inc
jb
cmp
add
cmp
cmp
loop
cdq
adc
call
in
inc
ins
xor
and
(bad)
xchg
mov
sbb
fisttp
push
push
mov
mov
mov
std
fisttp
outs
out
stc
fs
adc
loop
mov
jmp
stc
outs
stc
out
inc
sub
scas
cmc
arpl
icebp
dec
pop
fdivr
inc
mov
pop
cld
mov
mov
call
mov
xchg
cdq
or
std
cmps
fcomp
sar
dec
lock
movs
or
inc
loop
mov
push
adc
repnz
jns
fwait
push
pop
sub
movs
jle
(bad)
(bad)
call
mov
pusha
sahf
repz
repz
enter
lea
pop
jns
in
out
xor
or
fmul
xor
jnp
and
pop
pop
fwait
adc
mov
ret
xchg
test
loop
inc
(bad)
cdq
test
inc
sub
out
inc
push
push
mov
das
(bad)
outs
lea
mov
pop
aad
in
sub
fisubr
cmps
cmp
fstp
jae
dec
sub
dec
fisub
and
mov
pop
dec
push
xlat
ja
mov
pop
cld
cmp
mul
add
jle
jae
and
ret
les
mov
test
push
xor
addr16
sbb
popa
lods
cmp
fisub
xchg
std
fstp
cmc
fdiv
(bad)
daa
icebp
(bad)
xor
or
retf
scas
push
cmp
dec
or
xlat
imul
out
or
xchg
in
sub
int3
adc
cli
aad
xchg
inc
sub
cmp
adc
cmp
lahf
outs
je
fcomp
push
add
or
push
adc
out
fwait
and
bound
mov
sbb
dec
lods
test
xchg
cmp
mov
adc
or
lods
sar
xlat
jmp
cld
stos
add
icebp
jle
and
sbb
jbe
mov
std
xchg
xchg
push
jle
daa
sbb
push
pushf
enter
xor
cmp
push
stos
lods
xor
cwde
enter
stos
rcl
dec
pushf
push
jp
inc
nop
call
jmp
(bad)
pop
add
pop
aad
mov
ss
movs
mov
jmp
sbb
xchg
sub
fwait
ds
scas
imul
or
add
and
mov
dec
retf
jb
xchg
xor
jle
dec
mov
sbb
mov
cmps
jle
mov
loop
(bad)
xchg
imul
sbb
mov
sahf
aaa
repz
imul
mov
js
pop
mov
xchg
jle
cld
test
(bad)
xor
add
imul
int
rep
push
inc
xchg
hlt
cmps
pop
inc
pop
in
data16
scas
and
xchg
dec
jne
sub
clc
pop
mov
jo
out
out
mov
ja
cwde
setg
int
(bad)
jl
push
cwde
test
stos
aaa
not
test
xchg
cmp
xchg
or
inc
(bad)
jb
mov
sahf
jle
out
lahf
(bad)
sub
push
out
xchg
push
mov
sbb
nop
(bad)
sub
scas
ins
mov
(bad)
mov
or
dec
jno
es
stos
mov
fsub
sbb
pusha
dec
add
leave
rcr
pop
(bad)
and
mov
push
sub
adc
jmp
cmp
push
mov
and
dec
xchg
popf
push
fsub
clc
sub
dec
xlat
aad
sbb
icebp
dec
mov
loop
ret
imul
push
sbb
jge
mov
jnp
dec
inc
movs
inc
ja
ror
dec
jno
dec
mov
pop
mov
imul
es
dec
push
pop
xchg
or
inc
cwde
lods
xchg
inc
lahf
mov
imul
push
call
xor
retf
ret
rcr
and
in
repz
inc
mov
jecxz
adc
jns
adc
adc
lock
sub
inc
daa
repz
jne
mov
xchg
pusha
ss
js
or
test
sar
data16
jno
inc
inc
shl
sti
or
mov
sub
repz
es
aaa
fs
fidivr
mov
dec
call
aam
jp
les
jns
jmp
cmps
inc
jle
jmp
pop
(bad)
jbe
popf
add
inc
lahf
xchg
mov
inc
lds
sbb
xor
push
icebp
xchg
add
and
outs
std
push
fiadd
js
pop
push
or
push
out
aam
(bad)
cmc
ss
mov
pop
retf
setge
push
outs
sbb
adc
int
lock
test
(bad)
rcl
loope
jmp
dec
outs
sbb
ret
ret
mov
sub
das
sbb
aas
jecxz
mov
add
or
pop
cmp
or
mov
pop
lock
push
ficom
sbb
adc
or
jne
scas
(bad)
retf
enter
(bad)
out
mov
jg
arpl
sub
sub
test
ss
popf
gs
fsub
sti
xchg
and
xchg
push
or
shl
aad
retf
inc
leave
sbb
imul
fbstp
xor
inc
sahf
sub
clc
or
mov
lds
cmc
push
retfw
cmc
sub
jmp
mov
idiv
mov
adc
inc
dec
push
jne
(bad)
mov
(bad)
add
loope
popf
int
jno
push
or
mov
pop
xchg
sbb
pushf
cmp
addr16
push
xor
rol
pop
xchg
sbb
sbb
mov
cmps
je
mov
push
mov
dec
add
daa
or
inc
call
or
sub
lods
inc
dec
ds
retf
xor
(bad)
cmp
and
mov
mov
jnp
dec
push
dec
adc
test
(bad)
int3
scas
call
movs
ins
mov
mov
sub
mov
(bad)
jno
dec
stos
mov
mov
mov
jmp
jnp
(bad)
ds
pop
mov
es
dec
or
jbe
jp
test
push
stos
jmp
es
pop
call
jo
(bad)
test
or
sub
scas
jnp
adc
jns
inc
jg
or
or
inc
push
xor
sbb
daa
sub
pop
jle
mov
jg
mov
xchg
movs
bnd
shr
rcl
js
inc
shl
mov
repz
cmp
push
mov
ins
mov
push
popf
add
inc
xchg
push
adc
mov
sub
(bad)
fwait
in
pop
out
sbb
jns
xor
gs
add
scas
scas
jmp
adc
dec
sub
into
lods
iret
pop
or
jne
(bad)
xchg
(bad)
cmp
repnz
and
in
jg
xchg
add
fnsave
je
cmp
pop
hlt
jo
fistp
or
jecxz
lahf
jmp
hlt
mov
ret
inc
adc
std
xor
lods
or
mov
dec
sbb
dec
jl
or
cs
or
sbb
mov
inc
jecxz
shl
(bad)
movs
aam
cli
push
and
jg
dec
rcr
cmp
pushf
femms
push
movs
pop
lods
jb
jne
or
pop
push
int3
cmp
dec
or
ffreep
iret
jae
addr16
clc
add
mov
ret
out
cmc
sub
and
or
and
cmp
call
das
ss
mov
pushf
and
or
mov
nop
jp
cmps
pop
test
xor
outs
sub
inc
or
push
inc
pushf
sub
popa
enter
dec
jmp
ror
inc
aad
loopne
jge
dec
adc
lods
arpl
mov
das
sahf
rcr
jp
and
sub
mov
and
cmp
push
mov
xchg
clc
inc
lds
pop
je
fdivr
push
or
pop
inc
les
scas
mov
adc
movs
fistp
test
mov
test
(bad)
mov
cmp
pop
lea
pop
test
fsub
cmps
(bad)
mov
mov
fist
and
push
outs
les
stc
inc
sub
pop
(bad)
cmps
popa
sahf
shl
sbb
xchg
pop
in
adc
int3
in
sti
dec
inc
outs
cmp
fwait
inc
out
cmp
dec
pop
push
das
outs
pop
cmc
fidiv
nop
mov
mov
pop
mov
sar
push
les
push
cmp
mov
mov
ss
pop
loop
cmps
xchg
call
stc
pop
rol
mov
and
lahf
(bad)
and
rcr
retf
add
mov
mov
dec
or
cwde
fcom
aaa
mov
mov
or
shr
leave
or
call
pop
call
sbb
aad
outs
sub
push
les
inc
rol
sar
pop
cmp
mul
leave
rcl
and
inc
mov
xchg
into
movs
xchg
mov
test
add
cmps
out
test
sub
jne
add
adc
not
lahf
icebp
sub
xor
jp
stc
xchg
sbb
data16
cdq
adc
push
jns
push
scas
xchg
xlat
xor
jno
and
daa
ja
mov
enter
pop
(bad)
movs
popa
xchg
xor
xchg
pop
dec
imul
jae
xor
repz
add
mov
(bad)
mov
inc
(bad)
jno
adc
fdivr
fst
cli
jns
stos
jnp
std
xor
(bad)
mov
inc
aad
jmp
push
dec
pop
cmp
and
adc
js
pop
(bad)
sbb
mov
cmps
mov
and
hlt
sub
push
icebp
and
sahf
sub
aam
imul
or
aas
xchg
loopne
cmp
imul
scas
dec
cmp
cmp
inc
jp
daa
inc
xchg
mov
add
cmp
push
dec
add
and
mov
dec
cmp
jle
in
sbb
call
mov
ret
out
nop
(bad)
dec
call
out
and
cmps
dec
mov
jo
je
test
inc
xchg
test
cmc
shl
mov
int
sub
aad
adc
das
stos
sbb
ror
in
push
cwde
enter
mov
inc
xor
ins
mov
mov
cmp
sbb
or
pop
cmps
shl
test
mov
cmp
das
(bad)
sub
jmp
sbb
jmp
xchg
inc
mov
pop
mov
xlat
ret
arpl
dec
and
fstp
fbld
inc
sbb
aam
push
ins
stos
into
or
cmps
sti
push
aaa
push
add
imul
push
sbb
xchg
ds
int3
test
sbb
lods
fistp
mov
inc
test
into
mov
push
outs
test
and
jns
xchg
xchg
test
push
cmp
inc
not
mov
jl
pop
minps
das
cmp
adc
xchg
aad
ins
jno
ja
xchg
bswap
daa
fwait
and
mov
enter
retf
imul
inc
adc
imul
add
dec
mov
inc
xchg
xlat
mov
add
ins
and
out
add
xlat
ds
pusha
cdq
mov
ins
mov
mov
mov
adc
data16
cld
cmps
ins
inc
xor
(bad)
mov
fadd
sub
xor
inc
mov
jmp
ficom
mul
mov
pusha
push
dec
imul
dec
sub
mov
adc
frstor
sub
xchg
adc
adc
dec
add
jmp
dec
ins
mov
push
scas
pop
push
ss
sub
out
or
dec
aas
sbb
sbb
lock
es
and
ja
pusha
in
add
retf
and
push
pop
int
repz
push
xor
xchg
xor
ret
mov
sbb
sub
loop
dec
movs
stos
mov
sub
jmp
dec
(bad)
and
popf
mov
lds
or
push
pop
fisttp
mov
push
jmp
imul
and
mov
fistp
cmp
push
cmp
and
xchg
or
inc
data16
adc
mov
jl
popf
scas
dec
xor
push
mov
pop
ficomp
dec
neg
stos
rcr
xchg
dec
and
cmps
pusha
cmp
repnz
cmps
imul
in
arpl
xchg
push
mov
ret
shr
inc
xor
sahf
add
xor
sub
call
aam
cmps
cld
(bad)
out
cld
xchg
sti
add
xchg
out
jae
add
mov
lods
idiv
pop
into
cmc
cmps
jbe
ds
dec
sbb
dec
scas
sbb
lds
call
or
cmp
(bad)
push
xor
mov
mov
mov
push
in
in
adc
mov
xor
cli
jmp
push
out
mov
aaa
jo
test
or
je
push
adc
repnz
jae
in
push
clc
sbb
repnz
test
mov
mov
inc
out
xor
pop
cmp
(bad)
jb
ins
adc
xchg
lds
push
and
sbb
mov
jecxz
dec
ret
sbb
mov
push
rcr
fcomp
and
add
sar
sbb
dec
test
sbb
shld
data16
cmc
repnz
imul
pop
in
adc
push
push
adc
cli
push
or
push
fistp
jp
pop
(bad)
xlat
pushf
enter
imul
mov
cwd
out
out
shl
inc
dec
fild
dec
pop
cmp
mov
stc
add
xchg
mov
ja
stos
inc
sbb
cmp
movs
mov
xor
fdivr
add
sbb
xor
call
das
addr16
mov
xchg
jl
popa
retf
and
add
mov
cmp
fist
push
sub
hlt
push
(bad)
xchg
mov
dec
in
imul
cdq
sub
add
pop
mov
outs
cmps
push
jo
aad
arpl
jmp
fsub
fcmovnb
popa
loope
call
daa
pop
repnz
sbb
cmps
imul
xor
push
imul
mov
pop
add
mov
mov
pop
inc
jge
pop
js
pop
xor
in
sbb
sbb
int3
mov
add
sbb
inc
cmp
xchg
(bad)
outs
jl
xor
mov
pop
pop
rcl
loopne
adc
xchg
sbb
in
xchg
stos
xchg
enter
pusha
adc
mov
ins
add
xchg
int3
hlt
clc
adc
call
cmps
ins
test
jae
shr
aaa
scas
addr16
dec
enter
mov
add
aas
sbb
sti
cs
in
mov
cmp
mov
pop
or
xor
adc
mov
adc
movs
adc
cli
sar
lahf
lods
xchg
dec
test
dec
iret
cmp
sbb
ss
fwait
pushf
bound
sub
sbb
daa
enter
xchg
and
sbb
xchg
cwde
and
int3
mov
in
call
sar
fsub
or
or
adc
pop
test
mov
clc
sbb
fstp
icebp
sub
add
retf
leave
cmps
ror
repz
aad
fild
xchg
in
lds
jae
outs
pop
push
inc
ss
or
into
cli
cmps
xor
shl
pop
int
test
add
arpl
lods
add
ret
das
pusha
(bad)
cld
out
mov
bound
sub
pop
fist
cmp
or
fstp
sub
sbb
mov
jp
pop
or
out
retf
hlt
mov
imul
fsub
add
sub
sbb
dec
push
pop
mov
push
jb
(bad)
daa
sub
jl
mov
mov
scas
arpl
adc
call
out
xchg
xor
movs
dec
push
les
das
fcos
in
mov
cmp
mov
push
pusha
mov
jns
adc
sbb
mov
ret
and
sti
adc
das
int3
xor
xchg
cmp
fcom
sbb
jecxz
pop
pop
stc
(bad)
shl
push
mov
rol
pop
jne
and
dec
or
xchg
popf
shl
mov
mov
mov
cmp
jg
fcomp
push
data16
call
mov
mov
jns
add
mov
mov
push
lods
xchg
daa
icebp
fld
xor
pushf
out
out
loop
(bad)
in
clc
dec
cdq
add
cdq
fld
outs
jae
jne
rol
pop
in
dec
daa
mov
loopne
cdq
mov
lahf
dec
inc
fs
dec
sub
icebp
mov
cmp
mov
pop
sbb
xchg
or
(bad)
in
xor
and
jmp
cmp
neg
aad
adc
cmps
push
push
push
add
sub
cmp
or
sub
inc
in
add
add
or
std
mov
jecxz
sbb
xor
sbb
dec
enter
movs
and
mov
jae
cdq
mov
mov
adc
daa
mov
loopne
fadd
xlat
push
xor
jnp
dec
adc
jae
int3
jl
pop
xor
into
fcomp
xor
ret
fldcw
jbe
xchg
mov
mov
test
pusha
(bad)
cdq
push
sar
mov
push
sbb
repnz
dec
add
cmp
inc
repz
loopne
test
popf
out
sub
push
loop
sub
imul
es
dec
dec
mov
repnz
or
fwait
ror
jae
pop
pop
sti
imul
push
ja
jmp
test
xchg
(bad)
fist
add
push
xchg
outs
aad
or
cmp
call
sbb
inc
into
outs
push
int
scas
xchg
pop
loop
popf
sbb
retf
movs
adc
shr
shl
lods
cmps
arpl
cwde
js
clc
add
not
test
push
cmps
jge
clc
stos
mov
not
push
out
enter
mov
inc
push
inc
sbb
sbb
mov
add
je
mov
mov
lds
rcl
add
fisttp
add
xchg
xor
cld
lahf
inc
push
adc
(bad)
out
arpl
lds
clc
mov
dec
xor
popf
inc
push
jmp
(bad)
ja
xor
lock
mov
mov
inc
add
mov
xor
dec
xor
les
fidivr
inc
mov
mov
retf
popf
cmps
lods
mov
cmps
not
and
test
out
pop
xchg
jo
adc
mov
in
sbb
(bad)
xor
sbb
outs
pop
cmp
(bad)
inc
neg
mov
adc
hlt
xor
jge
xor
rol
cs
sbb
outs
adc
addr16
js
xchg
cmp
or
dec
mov
add
sbb
(bad)
movs
add
sub
dec
inc
mov
loopne
sbb
adc
and
leave
retf
jg
lods
jns
outs
aas
pop
lods
lea
xchg
cmp
repz
xor
mov
jo
fidivr
xor
mov
mov
out
push
xlat
push
and
hlt
sbb
outs
pop
cmp
pushf
in
sub
mov
push
push
xor
cmps
push
mov
inc
(bad)
sub
mov
lock
repnz
call
sbb
cmp
aam
cmp
lods
add
dec
push
pop
cmp
add
adc
xchg
push
nop
dec
fwait
aaa
fistp
or
dec
mov
rcl
repnz
das
xor
mov
scas
dec
jp
push
lods
jle
in
sbb
xor
and
loopne
or
into
test
or
mov
je
xchg
mov
inc
std
pop
sub
out
pushf
(bad)
arpl
mov
add
cwde
lds
mov
(bad)
call
pop
(bad)
pop
leave
xchg
add
mov
cld
out
sbb
push
push
mov
add
out
mov
arpl
je
pusha
in
adc
dec
sar
pushf
fisttp
rol
cld
sti
xchg
pop
and
sbb
in
mov
outs
test
fwait
in
retf
push
mov
aas
pop
fistp
dec
addr16
out
jbe
xor
lahf
pop
push
or
inc
enter
jbe
repnz
xor
leave
inc
popa
ss
adc
cmp
out
mov
retf
repz
lods
push
out
fsubr
dec
js
iret
xchg
ror
cmp
pushf
je
loope
stos
rcr
pop
mov
cld
or
popf
daa
pop
(bad)
mov
in
clc
sbb
add
out
icebp
mov
in
gs
pop
mov
sahf
dec
mov
cmp
push
adc
arpl
push
sub
mov
cmp
or
pop
jmp
stc
add
fidivr
and
adc
not
scas
lds
push
mov
pop
dec
mov
sbb
mov
fmul
xchg
bound
mov
adc
aad
into
shl
jmp
xchg
fwait
jno
or
jb
scas
mov
ror
ror
popf
push
sbb
mov
sbb
cmc
(bad)
fmul
shl
add
jne
jmp
and
mov
sbb
add
dec
fisttp
mov
enter
jecxz
mov
cmp
call
xor
call
jo
push
or
mov
rol
pop
sbb
add
test
mov
adc
test
out
or
cdq
lahf
out
shr
mov
aas
in
mov
xchg
in
pop
xchg
mov
adc
xchg
movs
movs
out
lods
push
mov
inc
sbb
xchg
arpl
inc
add
adc
mov
sbb
jle
pop
cmp
bound
sub
jbe
lock
and
test
sti
pop
push
ins
sub
ds
std
pop
cs
pop
mov
jne
mov
movs
jbe
loope
cwde
pop
jecxz
ror
int3
es
adc
adc
aam
push
mov
dec
test
fwait
in
push
xchg
adc
and
jo
out
mov
mov
loope
loope
pop
jmp
jg
test
addr16
and
sub
rol
leave
addr16
add
or
adc
call
pop
fnsetpm(287
in
ja
cli
inc
push
js
xor
fwait
and
test
arpl
retf
not
das
loopne
mov
and
hlt
jo
daa
lahf
aas
dec
adc
cmp
hlt
jle
shl
xor
push
bound
or
jns
outs
addr16
cdq
ss
loope
test
or
sub
loop
mov
inc
popa
mov
mov
stos
and
leave
shl
mov
dec
add
xchg
test
pushf
test
test
repz
lds
mov
je
(bad)
clc
cmp
outs
dec
sbb
inc
add
lds
aam
rcl
or
ret
test
mov
jno
sbb
loopne
in
cli
push
mov
or
popf
sbb
arpl
popa
lea
push
cwde
in
or
call
inc
xor
push
mov
out
jg
pop
jp
in
call
mov
sub
test
test
push
adc
loop
jae
cmp
int
mov
dec
rcl
dec
pand
mov
mov
xor
stos
dec
xor
mov
shr
setno
inc
adc
dec
retf
or
add
(bad)
xchg
or
je
or
lahf
mov
inc
ds
dec
in
add
mov
jnp
mov
or
xor
pushf
dec
jp
push
pop
and
jb
je
js
ds
aas
sbb
xor
stos
mov
loopne
mov
cmp
xor
sbb
js
dec
mov
loop
jo
pop
mov
leave
push
(bad)
int3
cwde
js
xlat
xor
jp
scas
push
fs
rcr
or
fstp
fwait
cmp
gs
aas
ins
and
dec
mov
sbb
push
dec
fidiv
mov
mov
sub
adc
nop
sti
dec
rcl
xor
in
ins
adc
ins
cmp
sahf
sbb
add
imul
pushf
popa
add
xchg
pop
push
jnp
dec
fcmovnu
std
xor
xor
xchg
shr
inc
icebp
and
and
fild
adc
call
(bad)
mov
push
add
pop
loop
and
clc
or
push
shl
xchg
pop
sbb
(bad)
mov
jmp
mov
dec
xchg
in
fsub
or
outs
mov
xchg
mov
push
cmp
sti
call
mov
adc
movs
scas
and
cs
dec
icebp
in
push
ret
mov
sahf
add
jg
daa
dec
mov
or
mov
and
add
inc
arpl
test
idiv
ror
push
rcr
pop
xor
loop
xor
pop
fldcw
scas
xchg
mov
mov
(bad)
cwde
pop
fadd
mov
in
(bad)
sti
jmp
ins
cs
sar
cld
neg
mov
stc
ror
pop
push
cmp
aam
dec
into
or
test
lods
clc
(bad)
xchg
mov
jae
mov
jb
jns
xor
mov
daa
jg
dec
mov
in
pop
into
and
add
dec
xor
loope
jae
cwde
imul
mov
loope
mov
mov
xor
push
pusha
ret
inc
in
sub
add
jno
jge
jle
(bad)
and
mov
out
dec
mov
jp
test
dec
or
scas
retf
jg
rcl
push
cmps
sub
sub
cwde
fdiv
outs
call
push
nop
movs
add
sub
pop
lahf
add
jb
and
push
lea
lods
cmc
push
xchg
(bad)
push
jns
or
das
or
sahf
add
push
pop
outs
(bad)
xchg
push
xchg
and
stc
push
in
pop
repnz
fst
pushf
cmps
repnz
test
dec
jb
sbb
or
jge
mov
test
sbb
sub
test
(bad)
nop
(bad)
adc
and
xchg
bnd
xor
in
add
cmp
gs
(bad)
cli
jg
push
mov
les
cld
jne
jb
push
xor
call
pop
fs
stos
xlat
jbe
jbe
and
jne
icebp
mov
cld
add
add
inc
ins
dec
or
into
std
nop
push
(bad)
cs
ror
jg
sub
fistp
mov
shr
dec
xchg
pop
pop
nop
call
and
movs
pop
das
sbb
cmp
and
mov
(bad)
jp
push
js
test
push
push
cmp
xor
lea
dec
dec
push
push
enter
inc
mov
jo
mov
dec
add
sbb
pop
mov
push
imul
test
arpl
mov
ror
out
jge
cmps
jge
lods
mov
sbb
int3
inc
xor
arpl
mov
in
push
sti
out
add
daa
cmps
add
in
sub
out
or
js
lahf
std
or
mov
xchg
pop
into
aas
js
popa
add
in
int3
clc
sub
mov
jnp
mov
pop
sbb
enter
retf
mov
jl
jae
jle
test
jae
enter
push
cmps
jl
jnp
out
dec
jp
loopne
push
imul
popa
push
push
mov
std
mov
push
rol
gs
add
sbb
mov
mov
and
aad
rcr
pop
sbb
jne
cld
cmc
in
and
shl
popf
mov
(bad)
imul
addr16
fbld
push
(bad)
sti
lea
int
es
jae
adc
cmp
or
adc
shl
inc
cmc
push
cmp
inc
xor
sar
jmp
(bad)
push
mov
call
enter
mov
emms
push
(bad)
fdiv
ret
icebp
fs
push
and
xor
and
fmul
repnz
xor
and
or
(bad)
cmps
inc
mov
aam
sbb
imul
adc
imul
stos
adc
push
push
out
xor
je
mov
mov
cmp
or
fadd
xchg
out
mov
xchg
gs
in
push
and
add
push
add
fiadd
dec
mov
popa
lock
cmc
mov
ja
in
bound
scas
leave
and
sub
push
or
mov
dec
mov
test
jmp
pop
jl
frndint
call
fwait
or
and
and
fild
push
push
scas
pop
mov
or
mov
push
pushf
es
retf
jmp
imul
inc
xor
fbstp
int
dec
xchg
xchg
xor
sbb
add
nop
inc
sbb
ds
xchg
mov
mov
sti
imul
pop
or
in
scas
popa
js
gs
jecxz
scas
dec
sub
cmc
jbe
js
mov
adc
mov
mov
inc
and
(bad)
shl
cmp
fidivr
sub
sahf
xchg
xchg
mov
enter
xchg
fnstcw
in
aad
jno
dec
sti
scas
es
repz
jbe
and
addr16
fild
dec
mov
dec
lds
jge
sbb
cmps
test
pop
sub
mov
inc
fcom
repz
and
sub
inc
mov
cs
in
mov
cwde
sbb
xchg
xor
push
jo
arpl
mov
push
xchg
mov
push
cmp
dec
mov
retf
xor
test
(bad)
mov
psubq
sub
pop
mov
fcmove
leave
push
push
adc
imul
out
cmp
imul
movs
sub
enter
sbb
mov
mov
jo
push
int
add
in
stc
xchg
sbb
sub
mov
test
pushf
sub
xchg
jp
rcl
xchg
(bad)
xor
add
push
jno
dec
data16
std
gs
jne
loop
or
aam
dec
repnz
repnz
cmps
pushf
shl
xchg
xchg
call
aaa
test
push
inc
add
call
aaa
add
inc
jl
xor
js
sbb
test
loope
xchg
mov
aam
inc
ss
imul
stos
fimul
arpl
shr
rcr
mov
ror
ins
jbe
pop
les
and
cwde
cli
inc
sbb
shr
dec
cmps
pop
mov
popf
xchg
push
jg
or
cmp
bound
imul
das
shl
mov
adc
lds
dec
adc
jmp
stc
push
into
inc
push
push
dec
iret
mov
pop
add
sbb
mov
dec
ret
loope
outs
and
(bad)
mov
mov
dec
je
sbb
push
cwde
inc
and
jnp
mov
out
cmp
(bad)
push
push
hlt
fldenv
mov
popf
bnd
sti
fs
repz
or
dec
sub
pcmpgtw
push
je
gs
mov
adc
cmc
dec
loopne
test
loopne
adc
pop
shl
sbb
dec
or
add
pop
les
adc
mov
aad
cli
(bad)
push
cmp
sub
xor
push
pop
call
inc
int
cmps
adc
add
and
dec
inc
fsubr
pop
fsubr
fnsave
cmp
pop
(bad)
call
jg
mov
jmp
or
pop
sbb
popa
sahf
dec
js
inc
push
imul
dec
dec
mov
xor
je
mov
dec
outs
xchg
fnstcw
mov
and
sub
test
push
and
ds
inc
mov
retf
mov
mov
test
jo
(bad)
mov
call
frstor
mov
pop
add
xchg
jmp
dec
neg
jge
(bad)
mov
push
pushf
jmp
push
ds
rol
fistp
mov
mov
mov
(bad)
call
scas
stos
add
movs
cmps
dec
cli
popa
lahf
sahf
dec
push
inc
jbe
and
mov
rcl
mov
pop
ret
(bad)
fmul
stos
mov
jmp
inc
or
inc
daa
loope
jmp
jmp
fdiv
pop
sbb
xchg
pushf
dec
push
dec
mov
cwde
fwait
cmp
adc
xchg
push
mov
jno
xor
xchg
jno
add
sbb
sbb
mov
fdiv
stos
jbe
out
aas
ja
stc
into
mov
daa
pop
out
rcl
out
in
outs
shr
mov
hlt
in
and
cmps
adc
push
ins
fild
xchg
mov
mov
in
js
fst
sahf
push
test
sub
mov
lahf
movs
and
movs
pop
dec
arpl
repz
pushf
mov
fcomi
call
(bad)
cs
or
inc
pop
xor
mov
jmp
fdiv
inc
pushf
adc
lds
dec
shr
mov
jne
aad
ficom
leave
xlat
imul
out
loopne
sub
scas
ds
fild
(bad)
jp
pop
or
mov
not
mov
ss
jge
pop
test
pop
cmp
mov
push
and
mov
and
and
cmp
mov
push
pop
hlt
rcl
(bad)
test
arpl
push
ja
push
cmp
ja
jns
ins
xchg
ja
mov
pop
push
movs
popf
jl
mov
pop
shl
jmp
sbb
pop
outs
push
gs
add
mov
dec
mov
cmps
das
jne
aad
ffreep
and
mov
fidivr
and
dec
aad
(bad)
popf
mov
ror
mov
out
outs
in
stos
out
xchg
lahf
rcl
jo
cmp
jle
and
or
dec
jge
and
push
out
inc
add
fst
pop
and
inc
mov
icebp
mov
rcr
fidiv
mov
imul
imul
mov
mov
jb
add
push
adc
cmp
xor
ja
xor
cmp
shl
add
mov
mov
icebp
imul
test
js
mov
sub
add
adc
or
(bad)
imul
adc
popa
cmps
mov
scas
ins
ins
ins
ret
sub
xor
fdivr
or
pop
cmp
pop
shl
stos
dec
jne
fimul
mov
cmps
loope
shr
mov
sbb
(bad)
retf
jmp
lods
movs
ret
xor
mov
mov
jno
pop
test
xchg
in
and
pop
adc
daa
sbb
rcl
aad
cmp
call
ror
(bad)
repz
add
and
inc
aas
jp
dec
mov
pop
out
pop
sbb
push
ror
mov
fs
ds
nop
fbld
scas
dec
adc
(bad)
sahf
repnz
mov
push
jnp
mov
inc
adc
ins
in
jbe
sbb
arpl
xchg
mov
sahf
cmp
push
inc
mov
xor
lods
mov
fsubr
jg
ror
xchg
mov
adc
inc
and
push
loopne
jg
mov
cli
jl
pop
add
jg
dec
loope
and
push
gs
cmp
out
pop
aad
or
sub
sbb
pop
push
outs
push
icebp
jge
or
add
loopne
inc
fucomi
dec
fs
hlt
pop
xor
out
dec
add
call
out
lds
in
or
mov
jp
dec
sub
push
mov
add
call
imul
sub
cmps
in
pop
in
ins
xor
mov
jmp
adc
or
dec
adc
dec
addr16
nop
pop
aas
dec
mov
sbb
(bad)
out
pop
jne
adc
push
popf
add
jnp
mov
mov
das
sub
fs
sahf
inc
mov
sbb
int
shl
and
pusha
add
adc
dec
fwait
xor
mov
popf
test
xor
js
in
add
pushf
mov
jo
ins
aam
xor
sar
jno
scas
dec
bound
jns
cmp
mov
ds
pop
in
int3
dec
mov
inc
bsr
mov
ins
sub
into
xchg
push
dec
push
sub
adc
and
push
dec
mov
pushf
jae
or
mov
xor
mov
addr16
aaa
and
pushf
movs
and
fxch
pop
int3
jp
inc
adc
aad
mov
stc
cmp
aam
mov
jo
add
xchg
stos
cmp
jo
clc
nop
imul
je
lea
repnz
mov
aaa
retf
jge
and
xchg
xor
and
lds
jne
mov
(bad)
mov
jo
test
xchg
jge
popa
and
dec
sahf
inc
and
dec
sbb
mov
jne
je
rol
xchg
sub
jns
xchg
pop
rcr
add
std
adc
and
clc
mov
or
cs
jecxz
rcl
call
pop
jl
xchg
mov
jbe
xor
mov
and
add
fld
xchg
xchg
fwait
push
jbe
mov
cmps
ins
repz
outs
xchg
push
test
dec
sbb
mov
mov
xchg
xchg
ins
xchg
push
mov
mov
and
mov
aaa
xchg
repz
dec
(bad)
adc
pop
cmp
xchg
pusha
(bad)
cmp
mov
aad
stos
ja
inc
jg
in
pop
retf
adc
and
imul
xchg
fdivr
push
adc
out
sbb
test
les
lods
pusha
hlt
xchg
retf
(bad)
int3
repnz
ins
mov
lahf
call
js
call
xor
pop
xchg
int
fiadd
mov
nop
fisttp
sbb
jno
test
in
add
lods
or
dec
clc
adc
repnz
sub
ror
fstp
mov
mov
das
push
cmp
cmps
mov
inc
pop
sbb
(bad)
jp
out
inc
jo
iret
adc
mov
es
and
shl
call
mov
pop
imul
test
scas
xchg
pushf
inc
js
xchg
cmp
fs
in
out
es
pop
(bad)
push
in
repz
ins
jae
stc
cmp
xchg
shl
js
sti
call
js
les
mov
in
push
dec
cmp
in
into
arpl
inc
ret
je
xor
add
(bad)
mov
push
adc
and
mov
xchg
into
scas
and
int
icebp
cmp
cmp
xchg
mov
pop
jp
loope
lods
add
test
movs
inc
cld
(bad)
or
scas
push
test
clc
pop
aam
sub
adc
shl
dec
or
les
pop
sahf
push
lea
cmp
aam
push
shl
sbb
xor
and
mov
jae
sbb
jge
adc
sbb
jecxz
xchg
test
jmp
or
movs
add
test
cmp
xor
mov
and
or
adc
xchg
inc
sbb
sbb
call
inc
sub
add
inc
mov
and
cmp
imul
lock
mov
inc
es
push
frndint
imul
retf
loope
jle
push
and
push
sub
xchg
pop
dec
aam
nop
cmp
imul
or
aad
cmp
retf
mov
xor
inc
das
jp
mov
fs
gs
inc
mov
and
add
popf
int
outs
movs
cmp
popfw
mov
and
adc
xlat
dec
mov
dec
out
push
sub
daa
fst
push
dec
xor
addr16
pop
movs
xchg
rol
aaa
xchg
mov
add
pop
xor
mov
movs
pop
ror
pop
outs
int
popa
push
dec
jne
test
add
adc
arpl
jg
pop
mov
mov
pushf
mov
repnz
in
xchg
aad
out
mov
jmp
mov
sti
int3
lea
xchg
mov
pop
adc
movs
cmps
lods
sar
lock
es
fild
movs
arpl
fidiv
das
sub
out
dec
and
push
or
mov
scas
mov
adc
inc
cli
cmp
ins
mov
pop
(bad)
cmc
add
mov
add
cmp
test
imul
mov
jae
sti
or
jg
fwait
push
nop
ins
aaa
inc
int
cmp
mov
add
mov
leave
sbb
js
int3
cmp
shl
into
(bad)
in
arpl
sub
aam
test
or
add
ret
and
imul
xchg
push
sbb
mov
sub
xchg
ja
adc
rol
dec
fs
xor
jmp
aad
ficom
xor
jb
sub
call
jmp
xor
loopne
sbb
inc
mov
jmp
push
cmp
(bad)
out
pop
mov
fstp
inc
fistp
sahf
fstp
jp
jns
cmp
push
push
in
sahf
add
or
pusha
popa
jne
sbb
sbb
mov
in
cmp
sbb
push
mov
loopne
mov
into
and
adc
rcl
mov
or
dec
dec
aam
scas
dec
cdq
cli
(bad)
inc
sub
mov
sub
shr
mov
adc
rcr
enter
imul
xchg
xlat
(bad)
and
xor
imul
cmp
mov
and
sub
imul
pop
sti
std
mov
test
inc
repnz
pop
push
pop
(bad)
iret
jl
aad
xchg
pusha
xor
jmp
icebp
retf
stc
in
mov
(bad)
mov
xchg
dec
jg
in
scas
cdq
push
movs
aam
ss
repz
fdiv
daa
mov
aas
mov
xchg
cmp
ds
and
dec
inc
and
push
sbb
xor
pop
jo
iret
add
sbb
cld
adc
je
push
mov
mul
loope
mov
inc
adc
cli
dec
push
mov
cmps
scas
aam
div
outs
or
cmp
fwait
sbb
mov
repz
adc
addr16
arpl
mov
dec
xor
cmp
(bad)
jns
inc
fldl2t
(bad)
shr
pop
pop
ret
mov
push
pop
dec
xchg
cli
int
pop
ror
mov
inc
or
dec
fstp
nop
cmp
(bad)
cmp
je
xchg
pop
repz
mov
in
add
xchg
rcl
add
out
push
jmp
adc
inc
dec
and
clc
int
sti
push
add
stos
fiadd
mov
push
repz
jnp
xor
out
cmp
and
repnz
mov
dec
lahf
(bad)
jns
jg
enter
mov
in
pop
int3
rdtsc
pop
inc
sub
pop
mov
mov
(bad)
fstp
rol
(bad)
cmp
push
xor
mov
push
iret
out
out
mov
jl
xor
add
popf
jge
and
les
sbb
test
inc
fistp
popf
mov
pop
dec
sahf
inc
jnp
jmp
js
clc
imul
ror
xchg
jmp
push
jmp
or
jbe
mov
retf
pop
dec
push
jecxz
and
ins
push
cmp
ret
push
cli
fldz
mov
sub
mov
and
xchg
ss
mov
mov
enter
aas
aam
scas
aad
test
les
imul
pop
xchg
imul
in
in
adc
enter
and
imul
fiadd
int
add
in
sbb
sbb
pop
dec
cmp
sub
cmc
mov
(bad)
loope
or
inc
mov
ret
mov
lea
jecxz
(bad)
jae
pop
push
pop
xor
stos
mov
cmps
in
pop
and
js
dec
daa
jns
repz
or
shl
or
ss
aas
loopne
lea
test
pop
nop
xchg
repz
mov
add
icebp
retf
shr
fimul
jmp
lods
je
cwde
fwait
and
movs
cmps
repnz
and
sub
into
xchg
outs
jmp
lods
mov
not
push
shl
dec
fld
test
mov
mov
mov
cmp
inc
pop
fstp
sub
push
mov
sub
movs
mov
or
ja
add
lods
push
mov
lds
or
mov
in
push
popf
scas
sar
xchg
and
xor
sub
pop
retf
dec
add
mov
pop
jg
nop
xor
cmps
in
mov
loope
mov
cmp
pop
cmp
mov
imul
repz
fwait
scas
(bad)
iret
aad
xlat
lods
jmp
outs
ss
cmp
fnstcw
adc
rol
lods
cli
jle
or
mov
mov
xor
inc
xchg
xlat
mov
push
data16
cs
jne
nop
adc
sub
adc
add
and
dec
dec
movs
jae
add
push
mov
pop
add
xlat
adc
shl
lahf
enter
push
sub
or
into
sar
test
push
out
mov
add
push
cmps
mov
js
pop
mov
vpsubsw
(bad)
mov
int3
rcr
and
lods
jg
rcr
xlat
mov
cli
repnz
or
pop
enter
jmp
mov
or
fwait
jb
gs
push
aaa
add
ret
mov
inc
sbb
pushf
in
cmp
shl
or
hlt
ror
rcr
sar
sbb
push
mov
jmp
lods
loopne
outs
jne
jns
ss
and
sub
(bad)
ret
pop
(bad)
sbb
inc
fchs
fadd
mov
inc
mov
dec
mov
mov
xor
and
push
(bad)
aaa
or
and
sub
sbb
fldcw
lods
pop
adc
xchg
inc
adc
or
mov
pusha
jno
fdiv
pop
popa
push
pusha
ret
adc
hlt
or
inc
and
ret
jmp
out
call
inc
push
jb
lock
in
inc
in
rcl
inc
rcl
xor
in
outs
mov
cmp
mov
daa
sbb
js
xchg
mov
pop
popf
popa
(bad)
(bad)
test
pop
test
xchg
in
fs
std
xor
adc
(bad)
scas
inc
cs
stc
out
pop
push
cld
pushf
cmp
adc
jb
rcr
rol
aaa
fld
mov
dec
stos
mov
mov
leave
outs
pop
ds
pop
push
out
jecxz
int3
arpl
pop
mov
and
cmp
cs
aaa
inc
scas
jbe
sbb
xchg
(bad)
inc
add
dec
inc
or
cmp
sbb
mov
cmp
loop
loopne
outs
xor
add
ret
push
mov
adc
jle
jae
jmp
inc
push
sub
popf
pop
(bad)
jg
imul
and
or
js
(bad)
cmp
sub
sbb
inc
stos
dec
sub
pop
int
stos
(bad)
pop
shl
popa
arpl
fs
test
lods
or
dec
scas
imul
or
inc
or
inc
ja
add
mov
pop
sub
out
stc
inc
shl
hlt
out
inc
clc
pop
clc
popf
mov
lods
(bad)
sbb
sub
jmp
or
hlt
adc
sbb
lods
shl
xchg
ret
into
(bad)
push
mov
es
mov
ficom
add
push
jne
loope
mov
sub
inc
add
imul
xchg
mov
js
imul
mov
addr16
(bad)
sub
add
movs
push
loope
lods
(bad)
or
sub
cdq
outs
ins
adc
add
adc
dec
icebp
es
push
and
adc
mov
sub
das
cmp
jne
jno
jecxz
dec
xor
dec
popa
(bad)
fild
pop
bnd
mov
add
fdiv
clc
mov
jae
xor
and
sbb
rol
fbld
ror
shl
or
add
push
cld
sub
or
retf
(bad)
sar
sahf
xchg
and
mov
daa
in
push
ja
ss
in
or
call
aad
mov
cld
jne
mov
fsub
mov
mov
arpl
lods
adc
push
push
leave
push
(bad)
sar
ins
mov
and
sbb
fnstenv
ins
dec
mov
add
inc
or
mov
jo
jecxz
ds
ss
imul
addr16
sub
nop
pop
inc
les
out
inc
shl
pop
inc
push
adc
push
xchg
jno
jo
mov
mov
xor
pop
jl
push
or
ins
idiv
leave
dec
adc
adc
inc
adc
mov
inc
data16
mov
mov
or
repnz
arpl
jno
iret
sub
adc
scas
mov
xor
inc
sbb
pop
arpl
les
div
ds
xor
fsubr
xchg
cmc
mov
jae
stos
sbb
sub
xchg
(bad)
mov
ins
mov
in
mov
jecxz
dec
adc
xchg
dec
in
int3
xchg
in
gs
adc
sbb
std
das
mov
mov
adc
jl
pop
inc
ret
push
mov
mov
adc
int3
push
jo
jo
or
call
scas
out
cmp
ins
jmp
(bad)
push
rcr
xchg
sub
mov
mov
outs
xchg
ss
out
push
popa
int
(bad)
cdq
lds
and
in
mov
loope
repz
cmps
cmps
dec
xor
pop
shl
xchg
scas
mov
inc
sub
gs
xchg
adc
ds
sbb
(bad)
adc
lea
jns
aam
mov
and
jg
mov
jb
shl
cld
shl
stos
sbb
cmps
dec
push
mov
in
stc
fidivr
and
stc
mov
xor
dec
jl
inc
cmovs
sbb
ret
push
es
cwde
jnp
lahf
outs
mov
ret
or
push
fst
mov
std
cld
rcr
cmps
retf
jae
jg
sub
js
add
(bad)
fdiv
mov
call
xor
inc
fs
cwde
xor
repz
rcl
js
mov
mov
jle
push
xchg
and
mov
dec
xchg
rcl
mov
cmp
sbb
xchg
sahf
ds
rcl
stc
sbb
mov
test
pusha
xchg
xchg
popa
xchg
das
push
sub
call
sub
imul
sub
pop
sbb
fnstenv
neg
loope
repnz
mov
and
or
xlat
dec
lods
in
dec
sub
inc
inc
imul
inc
in
pop
outs
xchg
add
ins
xor
rol
ins
cmp
xchg
add
(bad)
out
ja
fidivr
fwait
js
fld
dec
rol
aam
fisubr
jbe
inc
sbb
or
(bad)
fbld
js
retf
jbe
shr
xchg
add
add
loop
sbb
imul
sub
mul
loopne
mov
test
push
push
sbb
ins
je
test
inc
jnp
and
xchg
cmp
ror
rcr
cwde
adc
inc
lea
sbb
lods
jecxz
pop
sbb
sub
jle
fild
push
adc
mov
jmp
mov
jg
add
jb
mov
xchg
test
sbb
adc
not
(bad)
outs
bound
fsubr
shr
out
xor
inc
outs
jl
mov
xlat
in
arpl
push
inc
int
pop
mov
scas
or
inc
mov
inc
scas
addr16
dec
jmp
es
cmp
fisub
pop
cmp
mov
or
xlat
rcl
adc
loope
xor
push
je
jb
fs
std
jnp
jae
mov
add
jo
pop
sbb
out
cld
aas
in
cmc
into
jge
inc
adc
inc
(bad)
cmp
stc
push
clc
and
mov
dec
cmps
pusha
sub
repnz
lahf
xchg
lock
pop
pop
mov
dec
aaa
idiv
jne
jmp
sbb
or
jne
enter
pop
outs
cmp
push
mov
sbb
das
mov
(bad)
cld
mov
or
and
clc
into
add
xor
pop
cmp
mov
ins
mov
(bad)
or
fld
rcl
lds
push
addr16
repz
arpl
in
sub
xchg
cwde
ja
xor
xor
sub
push
lea
xor
mov
mov
(bad)
push
inc
xchg
sbb
cmps
popf
ds
aad
mov
mov
gs
pop
fistp
test
shl
xlat
jp
data16
xchg
pop
ins
mov
dec
mov
xchg
push
push
aad
push
mov
jb
adc
lahf
push
mov
jns
stos
enter
cmps
cmp
pop
dec
cmp
add
pop
fcomi
std
mov
rcl
cmps
sub
xor
pusha
cmps
sub
shr
cmp
rol
inc
add
adc
(bad)
loope
cmp
out
xchg
cwde
and
fild
mov
mov
and
lods
mov
(bad)
jne
jae
pop
mov
jmp
mov
out
bound
inc
add
retf
jecxz
sbb
nop
(bad)
in
jne
gs
mov
stos
js
dec
lods
cli
fiadd
mov
shl
inc
cmps
add
and
push
mov
hlt
gs
ins
push
mov
in
aas
xor
ins
jge
or
pop
scas
and
ds
sbb
je
inc
mov
js
mov
mov
scas
fistp
shr
icebp
out
cdq
mov
dec
fwait
or
dec
jns
ja
mov
imul
test
iret
push
adc
sub
xor
or
mul
sub
fs
push
mov
ja
jnp
or
fisttp
inc
add
and
or
add
stos
jb
std
sahf
sti
call
dec
fsub
xlat
aad
dec
jnp
popa
lods
fs
not
cmps
sub
mov
out
push
ja
hlt
jb
or
ret
and
sbb
jmp
test
test
mov
div
int
cmp
fwait
mov
fwait
outs
movs
fstp
mov
pop
loope
push
mov
sbb
inc
and
loopne
test
addr16
inc
(bad)
bound
mov
test
ins
jbe
sub
pushf
xchg
shr
xor
cli
push
out
repz
push
push
mov
push
inc
movs
cmp
push
lods
sahf
mov
std
stc
aas
int
enter
ret
xchg
jl
les
push
add
xchg
inc
xor
gs
jb
push
push
jg
sbb
pushf
dec
xchg
xor
xor
movs
or
push
xchg
(bad)
cld
js
sbb
and
xor
mov
pop
out
mov
mulps
popa
cwde
inc
push
push
pop
mov
cmp
push
lahf
repz
scas
mov
adc
lea
shl
sub
stos
rol
and
xor
fcmovne
clc
(bad)
fcom
xchg
mov
test
in
and
popf
push
lods
lods
in
loope
dec
arpl
and
scas
xor
ret
cmps
imul
leave
pop
sub
adc
bound
mov
mov
fild
add
retf
lods
lahf
pushf
fs
(bad)
mov
adc
(bad)
arpl
push
bound
xchg
cld
and
jno
xchg
pop
mov
outs
out
mov
mov
in
mov
add
jmp
stc
mov
xor
aaa
push
in
aas
xchg
fisubr
sar
in
popf
jge
pop
outs
mov
cwde
into
shl
xchg
sar
sub
sbb
push
stc
in
mov
fsub
cli
sbb
popf
data16
or
dec
dec
dec
popf
or
fwait
jmp
test
aam
dec
lea
scas
int3
addr16
sub
inc
cdq
jg
adc
sahf
mov
fwait
ret
shr
inc
dec
outs
into
mov
jnp
cmps
cmp
xchg
sbb
sbb
cmc
sbb
push
addr16
in
js
mov
leave
imul
imul
adc
(bad)
loop
pop
push
rcl
fsub
inc
sbb
dec
lods
test
(bad)
dec
pop
(bad)
sbb
data16
(bad)
cmp
inc
je
pop
sub
adc
xor
jae
(bad)
lods
mov
ds
jp
cmp
xchg
aam
dec
or
or
out
jmp
jg
icebp
lock
iret
(bad)
pop
loop
mov
cmp
mov
mov
jo
sub
mov
xchg
lock
xor
je
push
dec
xor
jg
sub
fnstcw
lods
cmp
leave
push
add
clc
adc
sub
loop
mov
pop
clc
bsf
lods
clc
outs
hlt
sti
cmp
ins
xor
or
aam
pop
ret
pusha
xchg
mov
out
outs
inc
sti
test
sub
repnz
sub
xor
(bad)
push
cmp
btr
rcr
loop
scas
gs
test
inc
adc
jae
mov
adc
xchg
push
or
test
in
cld
mov
sub
dec
std
sbb
idiv
aas
mov
cmps
sbb
enter
aas
add
std
sub
jge
icebp
cmp
add
dec
out
adc
jno
xor
sbb
lods
arpl
scas
gs
add
jae
jb
and
xchg
jl
jmp
pushf
jmp
fistp
lock
nop
sub
push
pusha
(bad)
idiv
pop
pop
rcl
jb
mov
pusha
cmp
ret
test
mov
mov
fwait
xlat
mov
std
imul
fdiv
add
popa
dec
nop
hlt
jno
dec
cli
xchg
mov
mov
or
movs
mov
jecxz
push
jae
sahf
mov
loop
ja
and
(bad)
retf
idiv
mov
dec
pop
inc
dec
loopne
inc
int3
sbb
xchg
in
sub
mov
push
mov
xchg
push
stos
mov
xchg
xlat
ss
not
enter
pop
add
cmps
sub
jno
sbb
test
mov
add
mov
or
(bad)
add
push
or
sub
sbb
xchg
stos
pop
xchg
outs
sahf
leave
cld
add
xor
ins
sub
sbb
inc
gs
out
outs
xor
fldcw
xor
dec
data16
or
movs
hlt
cmp
ds
fucomip
cdq
push
and
jo
xlat
jge
jmp
sbb
iret
adc
mov
push
fisub
ja
xchg
sub
(bad)
lahf
lds
pop
xchg
inc
pop
sub
or
or
mov
or
mov
mov
xchg
test
or
mov
mov
dec
out
lods
aas
jg
movs
stos
sbb
loopne
fidiv
pusha
div
leave
outs
xor
stc
sbb
and
add
mov
out
or
pop
dec
xchg
inc
cdq
repz
(bad)
lds
pop
ins
push
stc
int
scas
sbb
sub
xchg
cmp
push
push
mov
imul
ins
loope
sti
jl
sub
es
pop
jne
pop
shl
jecxz
sbb
int
das
adc
loop
ins
xor
push
jg
in
ins
(bad)
cmp
mov
xor
jb
mov
call
jo
mov
retf
or
cmp
dec
xlat
xor
add
cmp
and
mov
xchg
out
push
mov
sub
push
rcr
into
sub
je
das
std
cld
data16
sub
cmp
icebp
enter
pop
leave
pop
retf
cmp
cli
mov
adc
std
jecxz
shl
xor
cld
sar
jo
rol
add
data16
fwait
popf
add
mov
movs
or
mov
movs
mov
mov
call
cs
adc
and
mov
jmp
test
rcr
inc
push
fisttp
pop
ins
sbb
sub
dec
mov
push
ret
shl
or
ficom
(bad)
call
mov
adc
inc
retf
lock
mov
jmp
push
add
cmc
ins
mov
ins
push
mov
xchg
repnz
repz
scas
rol
sbb
push
and
jmp
div
imul
das
pop
push
sub
sub
cmp
push
es
sub
jmp
mov
xchg
xchg
popf
pop
or
sbb
pop
push
xchg
inc
jle
mov
outs
loop
sub
out
xchg
(bad)
fidiv
retf
add
push
in
das
or
inc
sbb
mov
into
ss
pop
xor
(bad)
into
test
add
pusha
mov
icebp
js
sub
and
gs
test
cmp
xor
movs
movs
mov
in
dec
adc
div
int3
sti
je
mov
jo
jmp
cmp
pop
and
and
adc
xchg
fcmovnbe
xchg
cmp
cmp
icebp
loopne
push
sub
dec
mov
in
xlat
or
loopne
add
add
retf
inc
pop
stos
push
mov
push
xor
aas
dec
loopne
sbb
and
stos
inc
out
ins
sti
and
adc
enter
push
xchg
xor
xchg
sbb
loopne
ss
mov
daa
sahf
imul
or
mov
lock
icebp
int3
sub
push
mov
cmp
into
xchg
push
cmp
jge
pushf
push
js
(bad)
cld
retf
call
(bad)
ds
inc
movs
jnp
ret
xchg
adc
xchg
cvtps2pd
movs
mov
fnstenv
mov
call
cld
in
mov
or
pop
std
call
mov
popa
cs
mov
fnstenv
mov
test
mov
push
mov
shr
outs
adc
mov
loopne
(bad)
movs
fdivr
sbb
jmp
push
(bad)
jne
test
fnstsw
dec
out
push
dec
or
es
scas
imul
int
test
jne
push
cmp
fnstcw
fs
fs
bound
add
ret
mov
mov
and
add
push
aam
out
(bad)
fstp
and
push
cmp
pop
cdq
daa
icebp
push
dec
push
sar
push
cmps
aad
jmp
loope
out
(bad)
mov
lds
mov
pushf
cld
aas
adc
inc
sub
mov
sbb
cmps
mov
jns
push
call
iret
mov
retf
loope
sub
xchg
push
fmul
add
cld
shl
cld
sub
int3
pop
fwait
jae
mov
cmps
fistp
inc
imul
stos
bnd
add
mov
daa
cli
sti
mov
nop
sub
sub
mov
dec
fld
lods
stos
pop
sbb
xchg
jg
mov
mov
ja
push
enter
outs
shl
dec
jae
rol
jmp
aaa
movs
mov
test
xchg
idiv
jmp
jmp
pop
and
and
push
or
mov
repnz
cli
push
pop
movs
adc
idiv
xlat
jmp
pusha
std
pushf
repnz
jnp
jnp
(bad)
push
cmovs
mov
add
int
cmps
xor
and
jle
sub
cwde
addr16
retf
cld
xor
call
jo
add
sahf
xchg
mov
push
jp
adc
int3
xor
mov
or
cmps
mul
ins
out
pop
push
xor
sahf
movs
les
xchg
cmp
xor
cmps
test
push
push
cwde
mov
out
test
and
call
cwde
inc
rol
scas
jae
sub
jecxz
out
aaa
jp
mov
jecxz
xlat
add
fadd
cmp
dec
inc
jb
and
jne
mov
pop
jg
or
ins
fbstp
push
into
and
out
jle
xchg
xlat
add
enter
mov
je
inc
arpl
repnz
movs
lods
mov
jns
mov
and
mov
lea
fidivr
(bad)
(bad)
inc
fxch
ret
stos
or
xchg
xchg
push
cmc
mov
lods
int
dec
fsub
jne
popaw
dec
mul
xchg
adc
mov
or
aam
jne
stos
jmp
dec
ss
pushf
mov
and
js
mov
lods
mov
ja
jmp
mov
sub
and
push
out
add
xor
ret
cmp
hlt
dec
loopne
sbb
loope
jecxz
jnp
sub
and
jmp
call
xchg
jl
xchg
dec
inc
mov
sub
add
mov
push
adc
add
fsubr
dec
bound
imul
test
sahf
pusha
jno
push
icebp
xchg
sbb
pop
xchg
and
mov
mov
xchg
xor
hlt
rol
sbb
sahf
leave
push
ins
ror
push
cmp
add
hlt
popf
inc
push
ins
hlt
in
add
ret
mov
pop
mov
xchg
out
jg
inc
cmp
addr16
push
or
mov
and
pop
in
dec
(bad)
push
sti
cmp
mov
ss
je
mov
mov
loopne
xchg
cld
push
in
xor
mov
add
aas
cmp
jle
mov
adc
imul
sub
dec
dec
call
mov
add
inc
sub
mov
out
add
adc
stos
inc
aam
lock
enter
repnz
dec
outs
sbb
pop
push
mov
sub
int
mov
std
add
xchg
dec
or
jmp
push
ret
mov
aaa
movs
dec
push
lods
mov
imul
(bad)
jns
and
mov
jae
(bad)
enter
dec
sub
stc
(bad)
xor
add
jnp
sub
in
xor
add
ret
in
ror
jmp
repnz
lds
scas
mov
push
or
cmp
movs
frndint
in
mov
mov
test
xor
xor
popf
scas
out
sar
jmp
(bad)
addr16
sub
fwait
sbb
cli
lock
(bad)
cmp
jmp
mov
push
stc
test
in
(bad)
pop
jo
test
cmc
xor
loop
repz
int3
arpl
imul
retf
xchg
mov
mov
call
fcom
ja
or
or
cmp
int3
retf
xor
jo
or
mov
fsubr
inc
add
fwait
out
fcomp
inc
or
fstp
push
xchg
cmc
jp
in
call
xlat
popa
imul
sbb
mov
(bad)
cmps
or
fmul
(bad)
loopne
in
xor
in
enter
in
pop
fiadd
sahf
sub
and
or
jns
aam
sub
jne
push
xor
mov
jb
jmp
jb
pop
ss
sub
mov
stc
mov
call
push
push
jge
inc
mov
jmp
xor
fmul
mov
mov
lds
pop
sbb
push
pop
(bad)
mov
push
sbb
pop
popa
cmp
xor
inc
pop
lock
test
call
scas
aas
inc
shl
lods
adc
inc
mov
je
scas
sub
cs
adc
mov
leave
add
into
je
or
inc
fimul
xor
cmp
in
aaa
pop
data16
pop
ja
mov
adc
push
scas
add
add
mov
sub
test
in
and
pop
jns
aad
mov
sub
sahf
xchg
pop
xchg
jl
icebp
add
mov
pusha
and
in
ret
jecxz
dec
dec
outs
or
addr16
push
std
pop
pusha
push
mov
mov
jne
stos
ja
xchg
push
out
push
sbb
xor
popf
retf
mov
push
adc
xor
fdivr
dec
push
and
xor
mov
dec
js
imul
sar
add
retf
push
inc
push
mov
adc
imul
mov
gs
scas
daa
pop
stos
cmp
lahf
out
push
xor
out
div
jb
xlat
out
das
xor
int
add
xchg
or
enter
fcmove
lods
(bad)
push
mov
or
push
lahf
stos
mov
adc
test
xor
mov
rol
push
inc
test
adc
mov
sbb
xchg
mov
xchg
iret
cmps
call
mov
adc
ja
mov
out
add
jns
sbb
dec
cmp
out
xchg
hlt
dec
add
bound
es
ins
mov
cld
mov
aam
shl
adc
jecxz
adc
adc
scas
std
xlat
out
aaa
pop
xchg
jle
cmp
jbe
ja
aad
xor
sub
mov
(bad)
push
inc
test
movs
xchg
(bad)
dec
cmp
fsubr
mov
ret
out
movs
(bad)
out
lock
dec
xchg
aaa
cmp
loopne
test
or
je
push
jg
adc
sbb
and
ins
int
movs
pop
and
jb
repz
pop
in
jae
(bad)
fldl2e
aad
ins
or
inc
add
and
sar
iret
mov
aaa
je
push
inc
mov
movzx
ss
lods
in
imul
lods
adc
xchg
dec
stos
cli
retf
mov
daa
addr16
in
(bad)
(bad)
nop
pop
(bad)
mov
push
cmp
and
bound
mov
xchg
sar
es
jge
popf
js
push
das
in
mov
mov
pushf
xchg
(bad)
mov
xchg
int3
push
nop
cs
inc
inc
fnsave
push
sbb
adc
pusha
loopne
jne
sbb
add
imul
add
add
in
arpl
int3
jae
jecxz
adc
sbb
jl
(bad)
std
jnp
xor
cdq
fimul
test
xor
lods
cmps
nop
jne
and
in
pop
imul
retf
dec
retf
jmp
lock
push
fnstsw
shl
xchg
sbb
ds
aam
bound
out
shl
xchg
movs
or
(bad)
in
inc
ret
ins
out
into
xchg
push
imul
jo
jp
out
inc
test
inc
movs
ss
sahf
hlt
lods
xchg
fnstcw
scas
loope
int
dec
cmp
popw
ds
fisttp
adc
mov
lds
mov
std
mov
sub
cmps
inc
icebp
cmc
div
inc
xchg
test
mov
out
jno
inc
jmp
add
cmp
jae
dec
push
fdivr
fcmovne
cmps
and
jb
pop
cmc
mov
mov
not
loope
pop
ret
sti
dec
icebp
imul
pushf
imul
test
mov
adc
fsub
and
jbe
jb
ret
test
pop
pop
fstp
pop
mov
je
push
pop
pop
stc
fsubr
movs
cld
test
cld
cmp
sti
inc
ss
xor
lds
mov
lods
hlt
mov
loopne
cdq
nop
and
loope
shr
inc
mov
inc
pusha
fdivr
xchg
mov
psrad
aaa
and
sub
jns
mov
add
add
or
das
popf
neg
cmp
pop
and
dec
and
(bad)
xor
out
rcl
stos
jo
xchg
push
pop
xchg
jmp
push
popa
mov
xchg
sub
add
std
mov
mov
inc
sub
(bad)
popa
cmp
jnp
mov
ss
and
(bad)
sub
pop
test
cdq
xchg
jo
imul
mov
(bad)
aam
jg
(bad)
and
into
sub
mov
lds
adc
fistp
sub
mov
outs
test
jns
repnz
punpckhdq
xlat
or
cmp
lahf
add
fwait
nop
mov
addr16
xchg
test
les
pop
lock
imul
cwde
mov
dec
cmp
(bad)
jecxz
pop
dec
mov
and
in
adc
test
sbb
popf
mov
fsubr
push
push
and
dec
aas
outs
dec
pop
(bad)
lea
jge
adc
fcomp
repnz
sbb
rcl
cwde
fnstcw
dec
call
and
div
shr
mov
mov
jge
fidivr
sar
dec
scas
movs
xlat
fistp
add
fs
push
sub
cmp
push
xor
fsub
or
adc
jbe
mov
cmp
add
fsubr
aas
add
sti
or
popa
xor
ins
mov
cmp
inc
xchg
mov
push
test
push
aas
shl
mov
cmp
push
push
ret
adc
pop
mov
daa
ins
outs
sbb
out
rcr
pop
cdq
fstp
rol
(bad)
shl
sar
pop
retf
xchg
iret
popa
sti
pop
clc
mov
sbb
adc
jg
mov
pop
sub
test
jmp
cmp
into
test
xchg
push
inc
not
jp
stos
pop
xchg
les
movs
pop
es
cmp
call
and
mov
dec
std
inc
or
mov
xchg
inc
sar
ret
mov
mov
or
jp
push
das
mov
ret
xor
mov
and
pop
sub
inc
ret
push
gs
jne
jne
push
push
pop
inc
mov
test
call
or
icebp
cdq
xchg
or
cmp
adc
mov
je
adc
rcr
pop
aaa
and
in
je
inc
pop
or
fnstenv
xchg
sahf
js
movs
cmp
les
pushf
xor
push
sub
fisubr
aas
ret
test
push
sub
je
pop
xchg
mov
mov
aam
add
test
hlt
sahf
daa
pop
das
mov
xchg
push
adc
cwde
sar
push
stos
mov
push
out
les
hlt
mov
sbb
mov
jl
ror
test
(bad)
std
xchg
fwait
mov
stc
xchg
sbb
daa
pop
shr
fist
(bad)
test
stos
sbb
sbb
add
jb
or
dec
push
mov
pushf
sub
dec
jecxz
sar
inc
les
push
push
loope
(bad)
cli
xchg
pusha
das
int
jg
mov
sbb
xchg
xor
sti
ins
and
xor
bound
xor
jp
cmp
mov
ret
pop
hlt
xor
mov
enter
mov
retf
mov
fisubr
inc
fwait
daa
in
(bad)
mov
cmp
or
xchg
pop
cmps
adc
jl
push
pop
jbe
call
mov
lods
stos
movs
push
dec
pop
sti
cmp
mov
add
mov
pushf
lds
ror
xchg
xor
out
mov
cmp
jo
cmp
dec
das
mov
dec
nop
fnstcw
xor
cmp
jp
fsubr
pusha
inc
pop
and
inc
mov
aam
jbe
mov
div
outs
xchg
stos
cwde
jmp
or
mov
add
mov
inc
lock
mov
clc
leave
inc
jl
fadd
xchg
adc
mov
push
repnz
push
adc
jle
mov
sub
push
fbld
leave
mov
rol
jle
pop
imul
cmp
mov
push
push
cmps
retf
dec
cmc
cmps
mov
mov
daa
rcl
cmp
push
pusha
repnz
mov
lea
jae
in
cmp
int
sub
sub
aas
mov
dec
test
mov
mov
fisubr
jne
movs
inc
fstp
xor
imul
cmc
jo
cmps
push
xor
pushf
add
add
je
add
pop
adc
mov
cli
(bad)
dec
sbb
mov
dec
xor
push
rol
loope
and
stos
mov
test
and
repnz
fcmovnb
fucomip
or
push
push
xor
jo
fidiv
out
je
pop
pop
add
in
jne
cwde
cld
xor
sub
movs
and
outs
sbb
aam
mov
push
lods
sbb
lea
inc
jb
sub
sar
(bad)
movs
sbb
stos
retf
in
fucomi
xor
or
in
mov
in
aad
jae
xor
dec
adc
shr
enter
add
sub
daa
and
ret
push
and
sbb
xchg
das
dec
into
out
pop
sti
out
jl
mov
sub
jmp
test
jbe
mov
shl
mov
call
adc
push
adc
imul
call
pushf
adc
sub
pop
adc
popaw
scas
popf
xchg
mov
mov
loopne
stos
sbb
rcr
fisttp
or
loopne
xchg
mov
into
ss
stos
cli
fcmovnu
push
push
scas
mov
push
out
movs
mov
inc
fnstenv
repnz
mov
(bad)
hlt
jbe
cmps
push
xchg
adc
push
cmp
and
sbb
push
clc
mov
daa
outs
sbb
inc
int3
adc
xor
xor
dec
sbb
xchg
mov
cmp
jno
test
add
or
inc
enter
dec
sub
mov
adc
push
pop
sub
pop
xor
sbb
sahf
out
inc
aam
popa
stos
push
sahf
add
dec
enter
xchg
or
(bad)
mov
rcr
jo
loope
sub
icebp
das
out
sub
fild
scas
ret
jecxz
sahf
arpl
dec
push
dec
add
aam
and
mov
leave
call
adc
icebp
push
cmp
xchg
fldenv
stos
imul
and
or
ds
test
loop
adc
rol
je
mov
test
cmp
add
cli
test
push
push
cld
data16
sbb
mov
fistp
mov
cmps
sub
cmp
sub
xabort
das
fs
adc
lods
outs
(bad)
call
or
in
mov
(bad)
loopne
inc
mov
push
cmps
adc
jbe
movs
jno
and
or
and
mov
inc
cmp
add
sbb
cwde
mov
sbb
outs
mov
stos
(bad)
cmp
mov
cmps
and
fcomp
in
retf
sbb
sahf
xor
jnp
jbe
sub
pop
jae
inc
or
jmp
fadd
out
push
mov
fild
adc
push
fdiv
push
jp
loop
pop
repz
jp
mov
sbb
pop
push
je
pop
sbb
or
xlat
ror
sar
repz
add
ret
pop
dec
jl
pop
cld
in
jp
xor
fnstsw
pop
loop
dec
fidivr
push
cdq
in
add
inc
fbstp
out
into
push
sbb
xchg
mov
push
cmc
mov
daa
inc
ficomp
iret
enter
push
sub
fidivr
mov
mov
pushf
sar
xchg
and
adc
inc
mov
mov
push
popf
mov
scas
pop
and
pop
(bad)
js
sub
les
dec
adc
xor
mov
xlat
mov
dec
(bad)
jge
lods
ins
xchg
sub
xchg
mov
mov
pop
and
lahf
dec
add
and
pop
jns
call
pop
test
mov
mov
mov
add
mov
sub
adc
push
mov
test
icebp
adc
xor
xchg
xchg
sbb
popa
aad
mov
out
pushf
hlt
leave
and
or
(bad)
xor
aam
add
inc
and
ret
les
outs
scas
je
mov
xchg
adc
or
movs
aad
pop
ret
adc
test
mov
call
pop
lahf
push
add
inc
jo
and
dec
ret
jnp
ins
and
push
pop
popa
adc
jl
push
sbb
out
jns
adc
and
jmp
sbb
lds
inc
mov
test
cwde
cmc
and
int
jl
inc
xchg
sub
pop
mov
lock
stos
jno
loope
data16
stos
daa
add
xchg
jo
idiv
int3
int
cmps
push
push
call
mov
xor
mov
xchg
mov
mov
adc
mov
idiv
adc
sbb
dec
mov
ret
mov
cli
(bad)
dec
in
dec
lds
fstp
rcl
or
outs
mov
inc
jb
popf
jge
sbb
jg
inc
repnz
xchg
mov
dec
mov
jnp
fstp
test
jo
jns
int
sub
out
pop
clc
xchg
dec
retf
mov
mov
mov
mov
xchg
and
ffree
pop
aam
xchg
or
xchg
push
repz
mov
pop
in
mov
or
iret
xor
in
jnp
push
pop
repnz
jo
adc
mov
aad
movs
push
into
cmps
jmp
sbb
test
in
mov
cmp
add
(bad)
xchg
neg
(bad)
shl
sub
cmp
add
ins
or
loop
jmp
xor
dec
and
xchg
mov
pop
dec
and
rol
gs
jle
xchg
add
outs
retf
sub
out
jmp
add
xchg
and
icebp
fs
jbe
fcom
push
sub
neg
push
push
push
rcl
mov
or
enter
pushf
sbb
dec
jbe
iret
xchg
jmp
cmp
lods
and
outs
add
dec
push
aaa
mov
and
add
pop
out
mov
dec
add
aaa
sbb
aam
jle
sub
jmp
out
jae
mov
sub
jl
iret
js
jne
data16
jl
mov
inc
xchg
sbb
and
mov
cld
bswap
out
nop
stos
sti
cld
jge
retf
xor
xor
and
aas
cli
cmp
mov
sub
cdq
mov
es
mov
call
inc
sub
rcr
xchg
mov
cmp
sbb
mov
ss
daa
out
call
jge
inc
dec
or
call
mov
jge
mov
cmps
sti
sahf
jnp
inc
neg
mov
cli
mov
cmp
sar
mov
(bad)
popf
or
pop
xor
test
test
les
xor
cli
jge
outs
jmp
add
ja
and
sub
pop
addr16
or
push
mov
or
outs
idiv
rol
enter
addr16
movs
xchg
(bad)
fiadd
mov
movs
jmp
push
sbb
icebp
(bad)
cs
xor
adc
ds
frstor
iret
sbb
aam
adc
lods
or
stos
push
ret
pop
inc
mov
jmp
inc
adc
cmp
or
dec
test
loopne
in
xchg
inc
pop
cmp
and
dec
xor
(bad)
and
pop
sbb
cmps
(bad)
or
inc
retf
rcr
popf
and
and
or
out
push
(bad)
imul
mov
add
(bad)
inc
dec
push
(bad)
out
retf
mov
pop
retf
xor
mov
mov
dec
fcomp
outs
in
or
ins
test
sahf
mov
rol
loop
mov
stos
push
repz
pop
adc
inc
xchg
daa
int
dec
adc
cs
into
dec
loope
mov
push
call
pusha
push
test
xchg
leave
imul
pop
cmps
and
(bad)
enter
add
sub
push
imul
mov
pop
mov
sar
mov
sub
inc
mov
outs
push
dec
in
or
in
mov
mov
xchg
inc
jge
movs
dec
mov
aad
mov
fwait
mov
jo
imul
rcl
daa
scas
add
addr16
mov
mov
push
pop
jno
retf
or
inc
sbb
and
and
and
loopne
push
mov
jb
movs
out
call
push
call
jb
retf
mov
sub
stos
cdq
push
mov
sub
sub
outs
movs
in
mov
ret
test
jmp
(bad)
sbb
add
xor
xchg
js
mov
mov
pop
or
dec
push
adc
in
retf
sbb
fwait
sub
les
lods
add
push
repnz
sub
fwait
xchg
scas
ret
(bad)
adc
std
sbb
push
jbe
xor
sub
mov
out
mov
pop
in
inc
popf
cmp
adc
nop
out
out
pop
mov
fiadd
shr
popa
push
sub
sahf
mov
dec
pop
scas
mov
js
jecxz
stc
clc
xor
in
cwde
mov
cmps
jo
addr16
xor
and
mov
xchg
ret
cmc
push
dec
and
pusha
xchg
pushf
stos
fidivr
and
xchg
(bad)
out
cmp
mov
fisub
fidivr
(bad)
xor
stc
mov
test
jns
fs
jbe
and
sbb
call
iret
in
inc
lods
(bad)
add
inc
pop
jle
lea
push
(bad)
fdiv
mov
inc
mov
jle
xchg
std
bound
(bad)
mov
push
pop
inc
ins
or
stos
cmps
mov
and
and
pop
rcr
in
idiv
leave
cmp
ja
imul
aas
or
xchg
sbb
sub
int3
push
or
cmp
push
cmp
xchg
push
fidivr
xlat
jmp
sub
sbb
out
aam
aas
push
aam
push
stos
sub
cmps
loop
push
add
xchg
movs
xchg
mov
dec
cld
mov
pop
mov
pop
sub
sti
ins
jge
add
cmc
jecxz
pop
xchg
int
pop
pop
iret
retf
push
mov
repz
pusha
xchg
popa
mov
sub
lds
fld
out
into
in
loope
pushf
and
xor
xchg
mov
mov
mov
lock
aaa
push
ds
adc
lods
mov
es
mov
push
push
cdq
mov
sub
sub
imul
push
dec
retf
or
or
in
inc
aas
mov
arpl
xchg
scas
pop
shl
cmps
jmp
xor
iret
(bad)
xchg
rcr
pop
adc
cwde
jo
leave
cmp
les
mov
ret
sbb
pop
sbb
inc
jge
mov
test
inc
mov
pop
adc
jb
outs
ja
fwait
dec
neg
test
shr
inc
clc
inc
lea
xchg
shr
test
out
stos
inc
add
or
jae
jbe
daa
sbb
fmul
xor
jp
and
(bad)
pop
jecxz
sar
lea
test
cmp
adc
stc
outs
mov
arpl
jle
ins
mov
push
add
push
sbb
fild
sbb
into
dec
lods
ret
mov
dec
mov
neg
das
lea
pop
mov
mov
xlat
jg
addr16
mov
jmp
loop
loopne
or
out
les
mov
cmps
push
adc
push
aas
iret
sar
mov
pusha
jmp
push
dec
sbb
push
add
xchg
pop
les
out
ret
pop
push
int3
aam
jp
test
outs
sbb
pop
aad
inc
pop
out
xchg
rol
fisubr
retf
jno
mov
jge
test
mov
mov
bound
xchg
sbb
loopne
adc
dec
dec
fnstsw
retf
int3
and
mov
stos
push
dec
in
dec
push
sbb
cmc
(bad)
shl
dec
test
dec
push
xor
push
mov
push
pop
dec
fadd
loope
movs
int
cmp
dec
or
scas
les
(bad)
adc
jecxz
aam
retf
int3
dec
and
jmp
bound
pop
ret
xor
dec
dec
and
int3
shl
mov
mov
not
ror
sub
or
and
jmp
mov
shl
mov
dec
push
push
mov
repnz
test
neg
(bad)
xchg
add
aam
fdivr
push
int3
aaa
jg
pop
repnz
(bad)
fldlg2
sar
std
xchg
mov
rcr
pop
les
jle
push
cmp
add
fdiv
rcr
xchg
cmp
xor
pop
das
not
push
in
push
or
into
add
ror
dec
push
cmp
push
or
add
ds
xor
ins
cmp
adc
fmul
mov
sub
jmp
in
pushf
stos
rol
mov
ret
xchg
jae
push
mov
push
icebp
scas
std
xor
pop
retf
dec
out
popf
in
dec
mov
lahf
jb
pop
fldenv
fsubr
or
xchg
shl
or
inc
xor
in
cmp
xor
es
dec
call
sbb
pushf
lahf
inc
aas
out
pushf
sub
(bad)
push
push
out
sub
dec
inc
fld
sbb
and
inc
dec
popf
mov
cmp
out
sub
xor
cmp
sub
sub
movs
movs
mov
xchg
push
mov
(bad)
xchg
lods
adc
push
adc
js
cmp
repnz
cld
cmp
push
mov
hlt
push
int3
mov
into
je
jle
sahf
sti
scas
mov
cli
push
enter
xchg
aad
push
ja
out
retf
ftst
out
test
cmp
inc
sub
xlat
in
and
(bad)
dec
test
(bad)
add
xchg
lea
outs
loope
(bad)
cmp
shr
aad
jmp
push
inc
jno
in
test
dec
sub
scas
dec
pop
rcl
push
(bad)
and
push
sti
repz
outs
inc
aad
and
enter
mov
mov
aas
and
mov
push
mov
jno
leave
fdivrp
imul
dec
add
and
dec
inc
out
fidivr
jp
iret
vunpckhps
into
sub
push
push
inc
mov
dec
hlt
mov
add
mov
cdq
mov
das
jmp
in
movs
je
sbb
add
mov
add
pop
xor
mov
imul
mov
sbb
pop
popf
imul
dec
xchg
mov
add
stos
lods
or
push
jnp
pop
shl
sbb
cmps
adc
cmp
daa
fs
and
xor
stos
dec
cmp
adc
cli
adc
jg
inc
push
call
or
call
xor
mov
in
mov
rcr
jecxz
outs
mov
add
add
stc
pop
out
aad
ret
nop
fsubr
add
scas
rol
pop
push
repnz
mov
ss
sar
lds
popf
outs
lea
pop
inc
call
xchg
outs
xorps
mov
jp
mov
ins
cmp
xchg
bound
mov
cmp
shl
xor
ja
push
mov
(bad)
iret
or
fstp
movs
push
js
out
imul
mov
sub
push
sti
jmp
mov
sbb
fs
and
pop
adc
dec
fld
sub
mov
pop
pop
inc
jmp
std
push
or
adc
pop
or
mov
dec
dec
adc
fcmove
cmps
fistp
aas
jg
mov
sub
cli
pop
cmp
inc
loopne
imul
jae
xor
lods
adc
mov
push
test
cmps
and
out
ss
jb
stos
sub
fsubr
call
adc
mov
inc
mov
ja
and
adc
aad
call
sbb
retf
popa
std
pop
cs
outs
jbe
sbb
cmp
fwait
mov
nop
hlt
xlat
lods
push
fdivr
fistp
adc
jae
int3
sbb
push
pop
add
xor
js
xor
xor
jp
cmp
dec
jb
inc
jle
dec
cwde
lods
inc
sub
out
cmp
bound
ror
bound
sbb
mov
jae
ret
retf
cmp
xor
or
imul
add
ja
addr16
and
jns
or
mov
(bad)
repz
mov
std
mov
rcl
push
ret
sub
pop
cs
mov
add
sbb
and
test
pushf
jge
sub
fistp
add
out
std
shl
test
loopne
xchg
aad
mov
pusha
cmps
inc
dec
xor
jnp
mov
out
jecxz
sbb
xor
mov
pop
lahf
loop
in
or
inc
jmp
mov
jge
cld
rcr
jno
pushf
and
xchg
enter
inc
cmp
pop
jno
addr16
loope
aad
loopne
out
scas
icebp
add
fidivr
jns
inc
pop
icebp
(bad)
(bad)
pop
in
xchg
sbb
ficom
scas
xchg
mov
pop
and
inc
nop
pop
xor
xchg
call
mov
call
xchg
inc
xor
push
mov
or
pop
loopne
loop
pop
or
js
xor
and
pushf
cdq
clc
pop
stc
mov
push
retf
aas
push
leave
dec
sbb
gs
retf
lock
push
jmp
cmp
push
popa
push
pop
cmp
push
stc
sub
dec
cli
dec
fdiv
sbb
les
mov
lea
or
frstor
xchg
fiadd
pop
xchg
inc
loope
mov
jae
repnz
dec
out
pop
lock
int3
(bad)
jge
(bad)
loopne
int3
in
in
or
jl
rcr
jns
aaa
popf
scas
loopne
not
add
fld
pop
popa
add
fisttp
sahf
movs
out
or
fs
fmul
and
adc
ss
xor
cmp
leave
xchg
scas
cmc
add
and
pop
bound
inc
jns
mov
inc
cld
sub
js
push
les
retf
mov
jmp
cmp
push
(bad)
xor
cld
sbb
outs
outs
xchg
aaa
fisub
dec
xchg
inc
das
inc
mov
pop
jno
push
mov
ins
dec
mov
xchg
ret
ret
js
cmp
pop
xor
mul
mov
push
pop
xor
jmp
xchg
rcr
jns
mov
xchg
clc
repnz
loopne
jnp
mov
sti
xchg
pop
call
adc
lea
sbb
mov
cmp
xchg
lea
pop
in
pop
add
repz
pop
jl
test
stos
or
fcmovb
imul
movs
mov
addr16
shl
(bad)
xlat
aam
jge
inc
xchg
(bad)
es
sub
test
repnz
inc
xor
sub
out
test
mov
mov
ret
jno
push
out
sbb
retf
mov
pushf
js
mov
repnz
xlat
mov
leave
add
in
jmp
sbb
push
and
cmp
adc
int
les
jae
mov
xchg
push
ins
cs
sti
test
into
mov
fcomp
jns
hlt
xchg
jmp
(bad)
sub
jae
rcr
jmp
popf
outs
and
fs
pop
adc
mov
push
pop
fst
xchg
icebp
mov
addr16
outs
mov
ror
scas
(bad)
push
jle
or
jl
aas
cmc
push
in
fldpi
int3
pop
mov
push
in
bound
aad
stos
push
arpl
cli
data16
sub
push
mov
pushf
adc
repnz
les
xor
jmp
and
lea
call
lahf
gs
jb
mov
addr16
sub
aad
out
sbb
adc
mov
fs
mov
stc
mov
mov
inc
adc
sub
cld
push
es
adc
mov
test
mov
ret
std
inc
cmp
mov
aam
dec
xor
nop
pop
pop
ins
dec
adc
retf
mov
out
pop
ret
mov
imul
jbe
pop
icebp
jg
and
(bad)
in
and
mov
adc
cmps
or
inc
push
add
fisub
and
stos
in
retf
scas
(bad)
sub
ror
xchg
xchg
out
mov
out
scas
and
pop
push
xchg
cs
imul
outs
xor
jae
jns
pusha
into
in
sub
fucomi
ja
adc
iret
sbb
push
aad
loop
lods
jbe
xor
xchg
clc
test
and
fisubr
cmp
or
das
in
inc
inc
push
mov
add
repz
scas
(bad)
iret
rcr
xchg
fdivr
fwait
mov
loopne
mov
ins
jg
add
inc
xor
cld
les
aam
aam
(bad)
push
xchg
add
into
fild
aas
or
pop
mov
daa
pop
jbe
int3
xor
in
or
cmps
popa
sub
jmp
jns
add
les
leave
(bad)
cmp
cmp
sar
sub
enter
add
cmps
xlat
mov
call
xor
mov
lods
mov
jo
std
xchg
retf
fs
lock
sub
cli
ins
pop
xor
(bad)
push
(bad)
daa
out
add
inc
or
aad
fisttp
icebp
popa
inc
gs
xor
jo
loopne
cmp
jnp
adc
jp
sahf
mov
addr16
mov
int
or
js
push
ret
jl
mov
lds
and
std
fnstcw
cdq
js
cdq
push
push
sahf
test
pop
loope
cmc
and
iret
add
je
cmp
pop
and
sbb
and
(bad)
dec
addr16
inc
into
aam
jae
loopne
mov
ss
jnp
mov
mov
jne
lods
mov
cmp
cmc
retf
push
shr
jno
lods
retf
inc
cmp
rol
cmp
mov
push
add
push
push
sub
cli
xor
or
and
push
sub
scas
outs
sbb
movs
cmps
mov
(bad)
adc
scas
rcl
ja
mov
sub
jae
inc
leave
pop
scas
dec
mov
mov
mov
dec
cmp
mov
add
aaa
dec
xchg
cmp
pop
push
push
stos
cs
fwait
cdq
lahf
cmps
lahf
lea
sub
cmps
xor
retf
aam
ret
aam
(bad)
in
scas
adc
and
hlt
daa
nop
pop
mov
iret
mov
pop
xchg
cli
ret
clc
in
mov
xchg
xchg
xor
fcmovnbe
mov
in
dec
ds
cmp
inc
adc
push
dec
inc
out
lea
dec
pusha
je
stc
mov
int
fsub
or
aas
jmp
das
cdq
scas
sbb
mov
movs
sub
pop
push
call
and
out
in
inc
not
ins
sti
add
adc
push
imul
shl
mov
cmps
lds
adc
out
add
jne
in
popa
sub
inc
add
xor
ficom
jg
(bad)
cmp
fdiv
xor
in
aam
mov
mov
xor
and
mov
mov
ins
add
int3
mov
and
dec
mov
mov
push
jge
xor
call
fs
and
inc
out
cmp
or
adc
sti
xchg
cmp
mov
rol
rcl
(bad)
adc
mov
jne
jmp
pop
or
and
dec
jle
repnz
sub
mov
aad
add
and
je
ins
and
dec
fsincos
pop
mov
call
xchg
add
test
imul
fnstsw
inc
dec
sub
scas
inc
or
and
mov
mov
iret
ds
je
and
jne
imul
mov
jle
scas
mov
sub
xchg
mov
aam
outs
retf
xor
inc
inc
lds
inc
add
add
rol
xor
sbb
imul
fistp
pop
adc
les
clc
adc
cdq
jnp
ror
jnp
(bad)
outs
mov
xor
js
jmp
add
push
fistp
sub
ror
leave
mul
mov
xchg
lahf
pop
push
inc
fbld
mov
data16
adc
xchg
cmp
fidiv
mov
aas
cmc
push
enter
aad
icebp
test
cmp
add
pop
dec
in
sbb
pop
xlat
mov
arpl
mov
inc
mov
mov
push
xchg
xchg
test
int
jo
sub
call
lea
scas
adc
mov
retf
in
imul
iret
dec
popf
bound
retf
xor
nop
inc
or
sbb
shl
movs
dec
out
mov
aad
lods
outs
jbe
mov
aaa
imul
jmp
(bad)
ins
rcl
sub
outs
fld
sti
and
lods
mov
scas
push
fsincos
inc
movs
and
jmp
cmps
pop
out
jle
mov
mov
adc
add
mov
faddp
test
(bad)
dec
lods
dec
adc
push
outs
adc
jle
data16
jbe
mov
mov
inc
cmp
jb
push
cmps
pop
scas
jge
push
fwait
push
gs
cmp
pop
(bad)
mov
xlat
aam
or
cld
sub
adc
fwait
dec
or
inc
enter
loop
mov
test
dec
mov
in
into
jo
cli
jle
and
(bad)
loopne
jmp
mov
mov
pop
popa
and
cmps
jmp
or
adc
sub
aaa
sbb
mov
xchg
mov
call
and
fwait
ja
mov
mov
std
(bad)
shl
sub
sub
mov
dec
mul
dec
loopne
jge
mov
sub
and
mov
mov
gs
mov
movs
mov
cmp
dec
not
not
test
dec
lods
and
sub
aam
jo
test
fwait
xchg
push
in
enter
mov
xchg
mov
movs
jp
or
and
(bad)
icebp
inc
test
mov
icebp
sub
aam
imul
or
fs
icebp
loope
jmp
add
push
fsub
daa
add
or
pop
mov
mov
mov
adc
mov
push
add
jge
inc
sub
cmp
or
jge
or
cld
add
dec
shl
adc
push
std
mov
push
mov
mov
cmp
xchg
es
inc
les
mov
push
push
push
sub
cmp
xor
push
out
jnp
mov
nop
in
cmp
loope
adc
inc
push
pop
(bad)
(bad)
icebp
adc
(bad)
(bad)
mov
loope
(bad)
ins
add
dec
jle
inc
inc
out
mov
sar
inc
add
imul
push
inc
pop
inc
cld
sbb
(bad)
jmp
adc
ja
dec
dec
adc
adc
pushf
xor
mov
js
xor
out
xor
out
pop
push
inc
jns
mov
sub
or
mov
jge
push
jo
into
call
in
popa
sar
push
dec
js
std
aaa
cmp
cli
test
adc
xor
inc
movs
inc
and
mov
test
mov
repz
call
in
push
dec
xlat
call
call
dec
fcomp
xchg
jecxz
inc
stos
aas
pop
lock
cmp
mov
repz
or
clc
pop
jb
les
cmp
ins
mov
aam
adc
push
pop
push
pop
sub
jne
and
jge
sbb
mov
pop
xchg
mov
outs
repz
ret
add
pusha
dec
rcl
jo
in
pop
loope
sub
pop
loopne
xor
ja
sub
in
push
and
icebp
sbb
fdiv
sti
call
dec
cmps
xchg
and
push
mov
mov
outs
xchg
and
xor
push
push
mov
inc
ins
push
shr
mov
push
in
mov
add
in
addr16
test
dec
mov
repnz
test
push
mov
jmp
adc
enter
fsubr
xchg
movs
addr16
pop
add
loope
ret
jno
xchg
into
cmp
pop
adc
add
adc
xlat
dec
test
jae
outs
lds
xchg
jge
add
cmp
mov
aas
movs
aam
mov
push
mov
push
sbb
scas
or
inc
mov
ss
lea
cmps
and
add
popa
cmp
stos
mov
movs
retf
aad
xchg
jmp
fisubr
jge
sbb
test
xlat
fcos
sbb
sti
xchg
test
repz
mov
sub
inc
dec
inc
gs
xor
and
jmp
adc
cmp
inc
rcl
push
ss
test
pushf
mov
lahf
(bad)
in
iret
add
xor
mov
jmp
test
sub
lods
retf
and
outs
and
loopne
push
loope
mov
lods
jns
mov
sub
sub
iret
or
and
(bad)
jecxz
ja
sar
dec
add
iret
icebp
mov
movs
sub
loop
inc
cs
data16
outs
out
std
clc
cwde
aad
clc
mov
jae
outs
push
xchg
pushf
fisub
sub
sar
mov
cmp
or
cmc
(bad)
cmc
(bad)
lods
pop
shl
(bad)
stos
cmp
sub
pop
or
and
xchg
iret
lods
sbb
pop
imul
loope
mov
push
or
dec
loope
aad
push
sub
in
push
push
push
lods
shl
or
mov
jb
mov
test
jmp
sbb
dec
mov
fwait
pusha
xor
pushf
call
cmp
(bad)
cld
aaa
inc
cwde
outs
adc
push
loopne
fnstsw
sbb
dec
xlat
sub
sar
fcomi
jl
push
and
and
repz
or
add
sbb
adc
or
inc
jg
sub
icebp
scas
xlat
mov
aas
sub
dec
inc
add
iret
or
pop
or
jne
pusha
out
icebp
xchg
adc
mov
pop
xchg
mov
jo
pop
(bad)
je
push
lahf
out
and
popa
mov
mov
jp
fs
ret
push
aaa
jns
cmp
fdiv
mov
push
mov
ss
inc
mov
fisubr
jne
push
stos
(bad)
mov
sbb
retf
div
mov
and
inc
sub
push
out
rcr
xor
sub
fucomip
mov
jae
xor
pop
(bad)
in
push
addr16
cmp
pop
addr16
loop
imul
cs
mov
(bad)
sbb
push
inc
add
in
sbb
loope
ret
mov
test
dec
test
out
fsub
xchg
inc
xchg
jl
stc
jmp
neg
jmp
sub
jl
pop
xor
out
sbb
cmp
inc
xchg
pop
leave
es
out
mov
jno
add
je
sahf
xchg
ja
cmp
cld
add
sub
jp
sahf
cwde
or
mov
lods
pop
or
shl
xchg
fucom
mov
and
cmp
leave
mov
sub
stos
cmp
popa
loop
cld
adc
into
add
push
push
bound
and
adc
and
cmps
xchg
jne
sub
iret
fsubr
mov
pop
xor
movs
inc
mov
enter
and
mov
inc
(bad)
int3
jo
fwait
add
mov
inc
xchg
neg
lahf
cmovl
and
push
retf
cli
sar
hlt
inc
ret
xchg
repnz
adc
into
add
loop
js
shr
loope
push
mov
pushf
movs
push
jno
jmp
xchg
ins
pop
push
fisttp
cdq
sub
add
sahf
cmp
repz
enter
jge
mov
mov
enter
aam
sahf
inc
xchg
mov
cmps
push
outs
clc
dec
adc
call
or
clc
(bad)
pop
popa
pushf
test
xor
call
mov
or
cmc
out
mov
imul
push
ins
or
jmp
sub
pop
adc
inc
xor
mov
mov
pushf
jecxz
pop
cld
mov
inc
xchg
and
push
mov
xor
in
mov
mov
fdivr
daa
or
fadd
mov
or
test
iret
mov
pop
jae
loope
mov
sub
add
push
add
adc
fiadd
jl
ror
xchg
mov
ins
hlt
jl
push
jnp
fidivr
lods
mov
in
and
into
fmul
pop
jb
jnp
jp
(bad)
ror
pop
rcl
in
cmp
xchg
push
jns
test
xor
outs
push
aas
mov
mov
fs
mov
imul
xchg
push
clc
(bad)
enter
ja
jle
cmp
hlt
mov
and
or
test
pop
sub
sub
push
sbb
mov
jg
mov
lods
mov
sbb
xor
cs
push
or
cmp
movs
les
jns
xchg
sahf
sbb
mov
jae
cmp
shr
repz
xor
sbb
and
jecxz
test
ja
pop
loope
jecxz
xor
or
pusha
fmul
sbb
jp
sub
and
scas
movs
arpl
pop
rcr
mov
mov
push
and
jmp
pop
div
sub
pop
cmp
mov
mov
loope
(bad)
lea
sbb
in
dec
cmps
cmp
inc
bound
jnp
std
sub
or
add
or
xor
in
jb
clc
add
add
fwait
dec
xor
mov
ret
xor
dec
inc
or
call
aaa
addr16
rcl
in
clc
jnp
push
ins
mov
push
retf
rol
or
adc
fisttp
es
sub
retf
jns
jmp
(bad)
imul
push
out
mov
call
mov
fwait
jae
es
jbe
adc
sbb
or
aas
pop
push
push
mov
xchg
push
mov
nop
adc
mov
fwait
xor
leave
xor
cmp
fsub
idiv
adc
inc
push
pop
retf
imul
add
inc
sbb
nop
sub
and
sub
or
cmp
inc
fcmove
repz
fisub
ds
icebp
adc
inc
js
jle
jb
imul
inc
add
sub
xchg
in
sub
gs
xchg
push
and
cmp
pop
movs
inc
or
and
jmp
jmp
jp
add
in
push
cmp
mov
ss
pop
jle
in
rol
out
pop
xchg
push
fidivr
dec
pop
and
jmp
inc
fsubr
jne
in
mov
pop
inc
int3
inc
jmp
sub
ficomp
ror
add
mov
xor
stos
outs
or
movs
(bad)
hlt
push
push
push
dec
mov
fwait
dec
clc
and
cli
mov
mov
inc
sub
shl
int3
in
jecxz
out
dec
out
add
mov
cmc
mov
enter
adc
inc
fbstp
ins
xchg
and
popf
fst
inc
mov
shr
ss
aaa
movs
test
sub
mov
pop
sbb
sub
pop
jp
sahf
jae
pusha
mov
jg
mov
aas
xor
lds
add
ret
and
dec
xor
push
mov
jmp
xor
cmps
ja
sbb
(bad)
jb
movs
dec
fidiv
leave
xchg
popa
inc
and
dec
enter
mov
mov
cmp
outs
shl
fwait
push
(bad)
sub
inc
sub
sub
inc
mov
xor
dec
scas
aam
mov
scas
rcr
dec
xlat
sbb
int
scas
shl
adc
ins
setne
jmp
mov
sbb
dec
or
ins
xor
push
jecxz
cmp
movs
rcr
jns
add
push
into
pop
inc
mov
(bad)
cwde
mov
sar
pop
or
popf
test
imul
(bad)
mov
and
dec
cmps
cmp
fs
cmps
push
repnz
sub
xchg
call
mov
jge
outs
icebp
mov
daa
adc
std
retf
mov
call
mov
push
je
fs
add
(bad)
sub
out
hlt
jp
ins
inc
xchg
shr
jne
in
gs
loope
daa
arpl
(bad)
and
outs
fld
loop
or
push
adc
out
dec
ins
icebp
cdq
les
mov
jl
(bad)
fnstcw
inc
cmp
pop
ja
xor
repnz
push
cmc
dec
int3
jge
add
call
ja
push
jae
and
jno
js
xchg
add
adc
sahf
sbb
inc
pop
ffreep
or
mov
sbb
xchg
lods
pop
cli
dec
xchg
fidivr
xchg
xchg
cli
push
xchg
mov
sar
push
xor
sbb
movs
mov
and
dec
mov
or
clc
shl
out
mov
push
movs
(bad)
add
inc
jecxz
xchg
inc
cmp
out
rcr
in
mov
into
enter
ret
movs
push
mov
scas
cmps
push
rcr
fsubr
popa
xchg
jecxz
inc
rcr
outs
dec
xor
xchg
fs
mov
sub
sub
repnz
pushf
xchg
rcr
and
adc
or
std
mov
jmp
aaa
movs
mov
jb
(bad)
add
cmp
clts
iret
jmp
arpl
add
iret
or
ins
test
inc
aaa
scas
or
ins
add
dec
sbb
push
and
push
lods
and
xchg
icebp
enter
aam
xor
sbb
in
retf
stc
mov
push
xor
jnp
xchg
into
push
jle
repnz
add
ds
repnz
add
ins
das
cmp
sub
lock
dec
jo
imul
ret
jmp
cmps
push
mov
or
(bad)
inc
and
out
lods
loope
cmp
pop
out
sbb
and
loopne
out
not
pushf
sahf
dec
into
cdq
and
sbb
shl
sbb
cmp
cmp
push
ss
mov
rol
in
sbb
jl
sbb
sbb
mov
inc
pop
lock
and
pop
lds
dec
push
xor
sub
or
test
mov
out
fisttp
aam
push
push
dec
cmp
mov
call
xchg
xor
add
invd
cmp
sbb
push
pop
pop
addr16
xor
sbb
bndstx
dec
out
in
cli
add
mov
inc
aam
daa
pop
pop
mov
mov
aaa
imul
lods
push
jg
(bad)
arpl
jg
push
(bad)
push
add
add
push
xchg
es
push
scas
not
loope
xchg
scas
test
jge
mov
cmp
dec
pop
cmp
adc
mov
push
jmp
xchg
cmp
int3
mov
aas
loop
aad
mov
jge
jmp
push
pop
jne
into
pop
sti
outs
jne
dec
xor
inc
sahf
add
in
in
xor
outs
sbb
xor
mov
and
cmp
dec
hlt
cs
xchg
push
fisubr
outs
dec
rcr
pop
rcl
cmp
lea
add
inc
ins
and
cdq
lea
(bad)
call
mov
scas
mov
addr16
push
fdivr
retf
aaa
dec
mov
push
sbb
adc
pop
les
add
and
pop
mov
sub
xchg
inc
stc
(bad)
div
or
push
jg
mov
sub
js
xchg
mov
sub
jmp
jnp
sub
jno
mov
inc
adc
dec
mov
mov
mov
addr16
mov
outs
out
leave
and
push
jg
mov
(bad)
test
pop
shr
mov
jmp
sub
icebp
out
xor
jno
movs
pop
cmp
nop
jne
jmp
pop
nop
imul
loope
loop
pop
xlat
sbb
in
stos
fmul
ja
and
lahf
mov
adc
stos
sahf
push
cmp
pop
rcr
out
loopne
loope
aad
jle
rol
cmp
add
cld
fidivr
push
fcmovnb
xor
pop
mov
adc
sub
into
xor
bound
in
out
in
fisttp
push
push
mov
and
dec
mov
push
int3
pop
mov
loope
scas
xchg
in
lahf
cdq
xor
push
xor
repz
loopne
dec
div
add
mov
inc
and
cli
sti
jecxz
pop
jmp
jecxz
push
mov
adc
xchg
bound
sub
mov
push
sub
std
lahf
xchg
pop
sub
repz
dec
add
rcr
(bad)
cmp
(bad)
rcr
mov
(bad)
and
je
push
pop
mov
inc
rol
dec
sub
mov
cs
fnsave
adc
sub
fidivr
aas
and
lea
inc
stos
sbb
stos
mov
xlat
adc
inc
fcomp
and
fnstcw
dec
dec
mov
loope
into
fsubr
dec
in
or
xchg
jb
sahf
cmp
lods
or
sbb
test
fldcw
jp
pop
ins
jmp
pop
mov
bound
dec
pop
jmp
adc
add
fs
mov
clc
mov
fld
push
inc
adc
hlt
pop
add
sub
(bad)
adc
lds
jne
xchg
and
mov
call
es
add
or
aad
mov
and
dec
sbb
dec
inc
call
sub
and
jp
push
xor
mov
and
adc
int
add
and
xchg
test
cmp
fidiv
outs
push
mov
inc
inc
dec
jnp
and
pop
xor
shl
inc
retf
push
push
in
sbb
in
retf
inc
popa
mov
pusha
inc
fidivr
loop
cmc
fld
movs
push
pop
sub
push
lahf
ret
aam
mov
scas
sub
or
dec
cli
push
fwait
inc
and
ret
ror
nop
sub
cmc
std
clc
repnz
imul
aam
test
sub
cdq
xchg
push
rcr
pop
xchg
jns
test
or
sub
push
inc
pop
mov
dec
adc
and
iret
cwde
inc
jl
dec
push
leave
adc
daa
cmp
mov
jmp
outs
pop
push
aad
sub
dec
pusha
push
jecxz
leave
pushf
inc
sub
or
add
shl
sub
pop
push
sti
xor
push
sub
repnz
fsqrt
test
add
not
mov
outs
ds
movs
sub
movs
jae
push
or
scas
jmp
sbb
stc
cmp
mov
or
jns
sub
xor
push
jnp
dec
sbb
arpl
mov
lahf
bound
dec
push
aas
data16
jl
push
push
clc
jecxz
and
std
adc
jne
cmp
jle
dec
add
fadd
add
shl
mov
add
push
fist
inc
in
push
pop
loope
(bad)
jae
das
cs
ins
cmps
mov
lock
sti
mov
xor
pusha
push
mov
pop
sbb
or
sub
or
aad
cmps
in
and
dec
cmps
cli
cmp
and
(bad)
in
in
pop
cwde
iret
xchg
test
ja
push
mov
sbb
in
jg
movs
pop
xor
stos
cmp
imul
ror
cmp
retf
loop
push
jge
pop
gs
push
adc
call
fist
mov
pop
inc
fst
(bad)
xor
enter
dec
hlt
cmps
data16
scas
add
pop
aaa
imul
inc
aad
jmp
mov
jnp
or
pop
pop
jne
adc
dec
or
js
pop
dec
repz
mov
jno
mov
adc
jmp
sub
jno
push
out
outs
xchg
cmp
xchg
mov
ins
fidiv
cs
inc
push
ficom
hlt
adc
cdq
aam
pushf
pop
or
adc
loop
jno
dec
cmp
mov
test
in
aad
sbb
outs
leave
adc
jl
push
mov
(bad)
loop
jecxz
xor
adc
retf
in
test
rol
mov
mov
int
aas
scas
cdq
sti
xor
aad
adc
mov
sub
push
push
je
jg
ret
inc
dec
dec
mov
ror
mov
idiv
outs
test
leave
aam
xor
sub
pop
push
test
sbb
inc
out
xchg
setnp
mov
std
scas
and
add
mov
leave
dec
mov
xchg
scas
or
enter
in
mov
icebp
jo
mov
ins
rcl
jb
push
hlt
pop
hlt
pop
(bad)
jo
in
sbb
std
retf
mov
loop
pop
adc
push
push
and
test
fimul
pop
(bad)
jl
and
xchg
cmp
mov
(bad)
push
jo
sub
cwde
mov
adc
jns
mov
inc
popf
int3
(bad)
adc
jo
(bad)
fcmovne
loopne
or
or
ds
lahf
retf
inc
jle
nop
hlt
sub
daa
dec
shr
mov
push
push
dec
jl
inc
pop
mov
dec
jmp
mov
fs
pusha
add
push
xchg
dec
xor
mov
cmp
aas
mov
retf
cld
pop
cwde
pop
mov
mov
push
push
out
data16
mov
cmovb
pop
out
add
retf
pop
ror
xchg
test
test
jne
out
mov
cmp
in
pop
xchg
adc
ins
(bad)
out
pop
sbb
pop
cmc
inc
jge
xor
and
adc
fisub
out
xor
cmp
jns
(bad)
jle
ret
les
add
xor
(bad)
(bad)
ficom
cmc
retf
xor
or
xor
sti
pop
add
pop
push
imul
adc
mov
ds
leave
ins
mov
or
(bad)
movs
imul
pop
repz
push
pop
popa
inc
fucomp
(bad)
xor
movs
cmp
and
nop
adc
(bad)
dec
ret
inc
inc
xor
out
sub
inc
mov
aas
lods
bound
in
cmp
imul
or
enter
jge
mov
xor
mov
test
(bad)
xlat
pop
xor
or
ret
out
cwde
cld
bound
pop
je
mov
out
or
pop
push
scas
sbb
enter
jp
inc
test
fstp
dec
neg
jo
cmp
shl
fisub
mov
push
pushf
dec
retf
hlt
pop
leave
mov
sti
mov
scas
mov
fsub
xchg
stc
xchg
sbb
pop
lock
sti
dec
pop
hlt
repz
popf
pop
mov
out
sub
mov
push
xchg
in
scas
cmp
retf
std
pop
push
cmp
add
push
adc
sub
sub
xchg
pop
jns
inc
cmp
pop
shl
adc
aas
xchg
aas
and
xor
xchg
jp
ret
lods
cmp
dec
dec
inc
mov
cwde
loopne
outs
cli
and
(bad)
sar
dec
xor
fdivr
arpl
data16
lahf
push
jp
in
fisubr
dec
sbb
add
or
pop
rol
xor
mov
inc
fwait
imul
jnp
ret
xlat
jno
loope
mov
jmp
ret
sub
iret
shr
fistp
sbb
loop
sub
or
mov
loopne
enter
add
xchg
bound
ret
aam
jp
ds
addr16
add
call
cmp
mov
cmp
lods
mov
jmp
fisttp
cmp
adc
rol
xchg
fadd
pop
mov
add
and
inc
enter
cld
mov
fild
sub
xchg
or
jp
and
push
sub
scas
xchg
sbb
cmp
jg
test
or
scas
nop
xor
pop
mov
jmp
cli
mov
xchg
push
xor
in
into
mov
rol
into
push
jae
mov
mov
stos
cmp
sub
pop
inc
mov
add
xor
xchg
mov
data16
push
ror
dec
adc
jg
js
(bad)
and
ret
test
call
and
sbb
pop
(bad)
pop
mov
and
rcr
fs
imul
lods
out
xchg
adc
jo
clc
push
fwait
retf
xchg
pop
mov
mov
add
dec
in
inc
jg
movs
loopne
idiv
push
xchg
cmps
adc
mov
call
sub
cmps
std
sub
aaa
push
outs
loope
loop
imul
adc
mov
retf
mov
enter
mov
movs
or
jnp
fucomp
add
xchg
mov
pop
xor
loope
dec
mov
jge
ins
scas
sti
jno
inc
push
nop
push
adc
pop
fcomp
xchg
pop
jno
pop
push
fistp
jecxz
push
(bad)
cmps
enter
push
xor
jo
iret
push
and
cmps
sbb
pushf
push
fild
mov
push
xor
inc
popa
aad
lods
mov
scas
jmp
mov
popa
mov
sbb
aam
retf
mov
stos
jns
out
mov
fsubr
or
mov
fisub
lods
pop
mov
mov
das
sub
pop
jo
xor
push
mov
pop
add
jb
xchg
adc
mov
xchg
adc
out
ja
ds
adc
mov
(bad)
iret
test
js
cmp
xchg
pop
fld
jge
inc
ja
enter
push
jmp
push
mov
push
aad
std
popf
(bad)
ss
pusha
in
xchg
cmp
fst
mov
ficomp
(bad)
dec
xlat
pop
add
hlt
ds
out
adc
sti
push
push
mov
out
and
sahf
dec
and
inc
jmp
int
je
push
adc
dec
push
test
xor
out
xlat
in
fstp
mov
iret
stos
pop
aam
pop
call
arpl
mov
ins
add
xchg
push
push
fisttp
xchg
sbb
(bad)
mov
adc
ror
leave
sbb
and
ret
retf
pop
fidivr
icebp
adc
ficom
nop
and
sbb
push
jns
add
in
loop
(bad)
sahf
pop
iret
bound
das
ror
rcl
xchg
popf
stos
pop
das
and
pop
in
in
jae
ja
dec
or
cdq
inc
(bad)
scas
push
push
loop
aam
add
icebp
adc
mov
inc
retf
mov
inc
out
loope
xor
in
mov
leave
mov
mov
stos
xchg
aaa
and
shl
add
or
push
xlat
in
push
push
jmp
pop
lds
push
add
fwait
scas
lock
xor
mov
inc
outs
icebp
or
cdq
mov
jnp
inc
into
cli
push
cmp
mov
popf
push
sbb
mov
int
not
mov
mov
push
cdq
sar
imul
ss
mov
mov
mov
xor
aam
(bad)
xchg
sbb
xor
add
and
fstp
in
std
or
cmp
cmc
mov
or
push
sub
imul
xor
mov
int3
in
cmps
sbb
fs
aam
jg
inc
into
scas
in
dec
das
push
and
fcomi
push
and
enter
mov
movs
cmp
push
add
push
cmp
mov
test
xor
push
(bad)
outs
mov
aaa
sbb
xor
nop
inc
into
popa
and
push
jp
push
push
push
jmp
(bad)
pop
enter
int3
mov
in
dec
fdiv
and
ficomp
mov
mov
(bad)
pop
lods
pop
cmp
cmp
sub
jle
pushf
mov
mov
scas
int3
pusha
sub
pusha
in
in
mov
ret
bound
jl
aam
mov
or
fs
inc
pop
pop
out
push
add
loop
push
jg
sbb
cdq
cwde
nop
mov
dec
fistp
nop
and
(bad)
xor
nop
aas
std
ins
xor
cmp
pusha
in
enter
repz
add
sub
jb
cli
sub
cdq
mov
ds
ror
std
sbb
push
xchg
fsub
mul
rol
ror
jle
sbb
rol
mov
fist
int
dec
test
fmul
inc
inc
mov
and
xchg
stc
jb
inc
pop
inc
out
sbb
sbb
sub
icebp
jb
mov
jmp
idiv
pusha
sbb
aaa
fnsave
mov
shl
add
inc
pop
xor
push
test
leave
cld
dec
push
sub
je
sub
or
stos
jbe
scas
iret
push
push
add
jecxz
adc
shl
cmp
push
mov
add
xchg
lea
xchg
retf
sbb
leave
jmp
push
js
xchg
in
inc
push
push
scas
fidivr
scas
cmp
push
ja
cmp
fnstsw
in
out
mov
adc
xchg
mov
mov
and
cmc
sbb
leave
cmp
mov
push
shr
jnp
ror
out
loope
mov
ja
mov
shl
fst
push
(bad)
rol
push
cld
repz
daa
retf
push
sbb
or
icebp
aam
aam
jge
int
inc
inc
pop
adc
push
fidiv
sub
movs
dec
mov
xchg
cmp
lea
add
stos
mov
sbb
and
xchg
aas
jmp
fild
mov
clc
int
pop
and
in
fmul
mul
div
add
mov
enter
cwde
imul
inc
inc
inc
out
add
rcl
je
iret
ds
dec
das
inc
out
ss
pop
push
mov
arpl
lock
mov
xor
adc
js
jl
mov
jo
mov
mov
cmp
dec
adc
(bad)
mov
inc
mov
pop
popf
mov
dec
dec
mov
inc
das
pusha
and
call
cdq
sub
and
push
sub
lock
(bad)
adc
inc
pusha
int3
neg
dec
and
push
sub
jle
jecxz
adc
mov
(bad)
xchg
cmp
jne
test
push
loopne
jl
jmp
aas
retf
add
je
pop
fild
loop
outs
lock
cmp
(bad)
pop
and
cwde
adc
data16
sub
jg
inc
sub
push
push
mov
push
sub
push
aad
gs
mov
test
inc
xor
or
repz
sub
mov
(bad)
cmps
sbb
shr
(bad)
sub
adc
and
or
in
mov
nop
xchg
jae
stc
mov
add
ret
mov
ret
test
das
mov
inc
xchg
add
cmps
movs
loope
inc
jnp
cdq
and
push
xor
sub
push
or
movs
je
pop
jmp
fdivr
clc
test
dec
lods
fbstp
xchg
sahf
sahf
popf
pop
add
popf
imul
pop
in
mov
mul
cmps
sbb
mov
mov
aad
sub
xor
pop
mov
cmp
in
loope
(bad)
sbb
mov
or
mov
lea
pop
and
ins
push
xor
(bad)
cmps
adc
pop
sbb
push
fist
aad
fidiv
call
cmp
(bad)
jle
sub
movs
bound
sub
aaa
xchg
scas
repnz
mov
xor
dec
jo
xor
jmp
jmp
cmps
cmp
imul
xchg
popa
mov
fstp
lds
pop
pop
daa
pop
sahf
lea
jg
xchg
inc
sub
(bad)
sti
jns
daa
sub
int
push
xchg
lods
pop
inc
or
imul
(bad)
jmp
popf
arpl
add
dec
in
or
push
into
dec
pop
loopne
cmps
cmp
movs
ret
sub
scas
mov
loop
repnz
stos
mov
call
clc
arpl
jl
mov
pusha
cdq
sub
daa
jmp
ds
inc
mov
or
xlat
les
shr
jb
mov
imul
ror
iret
push
nop
(bad)
stos
mov
mov
fisttp
aaa
push
adc
sub
in
pop
std
mov
sbb
cmps
cmps
jno
div
and
jge
pop
out
imul
sub
in
ds
jmp
loop
mov
ds
call
jmp
call
push
out
cld
push
jl
out
cmp
retf
stos
pop
push
jmp
aad
inc
js
inc
lds
loope
mov
cmps
cwde
aas
sub
or
add
cld
cmc
hlt
scas
adc
push
(bad)
mov
call
icebp
pushf
hlt
xor
sub
(bad)
imul
int
dec
ret
into
jno
or
fld
xor
js
xor
pusha
rcr
jl
add
mov
idiv
cmc
xor
cli
cwde
jl
aas
xor
retf
cmp
adc
cmps
fwait
and
push
pop
in
call
inc
and
mov
fldenv
pop
mov
(bad)
int3
dec
jmp
gs
mov
xchg
jo
loopne
xchg
xor
das
adc
lahf
inc
into
retf
stos
sbb
jbe
cli
rcl
add
push
push
adc
out
add
int3
adc
adc
jae
ja
dec
ins
sub
shr
sbb
retf
call
mov
imul
dec
fwait
ins
or
add
enter
jmp
in
add
fiadd
cmc
inc
xchg
in
mov
(bad)
cmp
adc
dec
dec
mov
rcl
vunpckhps
mov
rcr
popf
mov
cmp
inc
retf
cmc
push
popf
and
or
and
imul
std
data16
mov
lea
aas
jns
jo
cmp
pop
adc
adc
addr16
push
mov
adc
adc
and
into
lahf
popa
mov
sub
and
adc
add
fld
pushf
sbb
outs
xlat
xor
fimul
sbb
retf
das
popa
das
pop
xor
stos
inc
pop
aas
jnp
sub
call
scas
mov
scas
xor
sbb
cmps
jbe
add
movs
jns
push
sbb
jnp
jl
push
sub
push
sti
gs
sbb
xchg
lahf
sub
xchg
pop
icebp
ror
cmp
or
cmp
pushf
aas
sahf
mov
xor
test
daa
ins
mov
bound
daa
cld
fcmovbe
int3
loop
mov
sub
in
mov
in
push
test
xchg
or
icebp
out
fdivr
push
pop
adc
cld
cmp
rcl
lds
pop
push
mov
add
out
inc
scas
and
push
cwde
jne
inc
mov
ret
inc
cmp
idiv
mov
sbb
mov
jge
mov
dec
jb
jl
cdq
nop
movs
pop
icebp
inc
and
js
and
fsubr
mov
dec
pop
cmps
popa
jge
lock
lea
and
and
not
popf
enter
mov
rol
xor
mov
xchg
retf
out
dec
dec
jne
(bad)
popf
adc
xchg
and
or
xlat
add
xchg
and
xor
add
cmps
mov
dec
xlat
push
addr16
ds
cmp
ret
call
fimul
ret
neg
xor
outs
mov
xchg
jnp
out
ror
inc
jns
std
jg
inc
mov
cmps
xchg
stos
sub
adc
jbe
pushf
jae
xchg
pushf
lds
ret
ins
cmp
aad
or
xor
and
dec
xchg
cmp
xchg
dec
call
ror
ret
mov
rcl
sub
cmp
adc
adc
cmp
cs
sbb
ror
aaa
jp
mov
jecxz
sbb
mov
test
push
push
jo
or
xchg
mov
popa
pop
repnz
pop
test
cmps
sub
inc
xchg
cli
dec
dec
pop
mov
test
lea
dec
out
push
and
add
lahf
xchg
pop
dec
leave
push
xor
xchg
add
push
adc
pushf
mov
adc
test
mov
pop
cdq
(bad)
gs
mov
call
outs
fstp
add
ds
jb
mov
cmp
inc
call
inc
repz
dec
xchg
sub
or
daa
mov
ins
xlat
repz
in
cmp
push
jno
mov
dec
mov
fnstcw
pop
stc
movs
cmps
push
(bad)
mul
int
clc
loope
add
fcmovu
xchg
cmp
test
mov
dec
jno
push
add
scas
int
or
xchg
rol
les
std
jmp
dec
adc
aad
add
or
test
pop
jle
fcom
cdq
daa
push
sub
fst
call
sub
cmp
gs
fsub
mov
popa
dec
mov
sub
retf
aad
dec
dec
rcl
sbb
cmp
jp
or
mov
repnz
jmp
test
rcl
jmp
mov
jl
lea
mov
repz
iret
inc
icebp
popa
addr16
inc
push
mov
push
jne
or
push
inc
cmps
call
sub
pusha
or
je
jns
push
sbb
js
fnstsw
sahf
pop
jb
mov
out
in
xchg
sub
and
(bad)
lock
cs
in
xchg
aaa
mov
mov
std
pop
add
test
cmps
mov
cmp
loop
adc
mov
movs
int3
fwait
mov
and
jns
push
add
mov
xor
fbld
and
mov
pop
xlat
cmp
mov
mov
mov
xor
mul
or
dec
push
or
sub
(bad)
ds
(bad)
fdivrp
mov
sbb
pushf
daa
outs
mov
sbb
mov
mov
push
mov
jmp
mov
xchg
repnz
scas
mov
add
adc
mov
mov
pop
jl
cli
loope
cmp
cld
jbe
or
xchg
scas
mov
sub
mov
sub
mov
mov
loope
jae
(bad)
movs
cmps
test
dec
lock
out
cld
mov
sbb
adc
cmp
stos
enter
sar
mov
pop
and
and
inc
je
call
cwde
outs
mov
mov
in
pop
scas
inc
pop
sub
adc
pop
test
ins
(bad)
and
inc
push
cld
add
arpl
imul
jp
sbb
dec
and
xchg
inc
adc
data16
or
scas
push
mov
mov
stos
and
xlat
cmp
cmps
fwait
pusha
cmp
les
fisttp
xor
push
push
and
arpl
push
fist
lahf
fidivr
and
pop
hlt
aad
dec
ret
pop
and
call
sahf
mov
ja
inc
cwde
mov
lds
pushf
dec
mov
mov
mov
jmp
sub
pop
and
xchg
push
vmwrite
stos
loope
lods
lods
arpl
mov
jmp
pop
imul
movs
pop
mov
ins
xlat
xor
out
xor
out
xor
inc
mov
jmp
std
fs
out
add
lds
icebp
pushf
loop
push
ins
pop
jne
dec
clc
popa
cmp
in
in
inc
xor
je
sbb
imul
pop
retf
push
xchg
mov
arpl
nop
pop
imul
ins
adc
pop
jge
fdivr
mov
adc
(bad)
pop
arpl
mov
mov
js
outs
add
fnclex
nop
test
lds
sub
xor
or
mov
jne
xchg
pop
fsub
xlat
(bad)
sbb
adc
mov
mov
sub
js
jo
push
mov
leave
imul
pusha
or
and
mov
lods
xor
push
mov
jle
adc
cmp
jmp
enter
movhlps
ret
jno
xchg
dec
out
mov
mov
ins
sub
mov
movs
int
cmps
and
adc
fbstp
lahf
push
in
lods
cmc
cmp
mov
nop
clc
jmp
inc
mov
mov
stos
push
jmp
sti
nop
retf
std
mov
push
sbb
ja
outs
gs
(bad)
js
pop
jmp
(bad)
clc
push
jns
fwait
cld
pop
in
dec
xchg
lahf
aad
cmc
dec
pop
push
dec
jbe
add
neg
mov
retf
jns
jno
mov
mov
das
nop
mov
callw
test
aas
xor
pop
aam
sbb
cmp
popf
inc
jg
and
aam
cwde
(bad)
imul
outs
test
jb
bound
jb
scas
or
dec
int3
imul
in
repnz
dec
out
mov
cmps
es
dec
push
sub
mov
push
stc
aam
gs
add
fsub
adc
push
jnp
push
cmps
or
nop
fst
lods
inc
jge
xor
enter
data16
test
pop
fimul
inc
pop
call
out
les
cmp
mov
jp
call
push
mov
push
pop
call
cmp
fld
xchg
mov
push
lods
jb
outs
not
jnp
cmps
mov
push
test
sub
inc
aad
mov
sbb
dec
push
scas
dec
pushf
push
cmps
outs
pop
test
push
push
jle
sbb
stc
and
mov
jge
cmc
pop
and
push
addr16
mov
mov
test
mov
and
outs
adc
add
pushf
fimul
loop
dec
pop
cmp
les
cmp
nop
add
hlt
cmp
sbb
mov
dec
xchg
and
xchg
mov
mov
pop
out
add
pusha
push
clc
fistp
jl
div
inc
popf
or
pop
cmp
jecxz
cmp
and
test
push
jbe
scas
cdq
mov
inc
mov
and
addr16
sar
sub
xchg
fs
int3
cld
popa
in
pop
pop
jp
cmc
shl
mov
sub
pop
je
(bad)
cmps
shl
test
xchg
test
push
mov
mov
mov
(bad)
(bad)
xchg
sbb
lea
arpl
iret
(bad)
push
pop
and
xor
les
leave
xchg
enter
stos
mov
xchg
adc
aaa
std
inc
bound
leave
test
jecxz
xchg
das
push
cs
add
or
jg
or
pop
cs
(bad)
shl
sub
scas
jecxz
sbb
jle
inc
inc
inc
sbb
jmp
hlt
and
add
dec
cdq
lods
ds
mov
(bad)
lods
imul
xor
(bad)
(bad)
imul
push
push
xchg
ins
mov
mov
jge
mov
dec
xchg
in
pusha
(bad)
aam
push
cmps
movs
jmp
pop
into
sar
imul
jp
sbb
cmp
out
sbb
fs
lea
(bad)
icebp
dec
lea
add
push
sahf
pop
cld
in
mov
jne
call
cmp
ins
jmp
adc
push
movs
stos
(bad)
jo
jg
cdq
inc
xlat
jnp
add
les
movs
mov
shr
test
xor
aad
retf
ins
mov
xchg
cmc
add
inc
ss
call
gs
iret
test
or
out
sahf
cmps
cli
sbb
(bad)
ins
cmps
sahf
iret
out
cli
outs
mov
mov
adc
xchg
out
movs
loopne
out
mov
in
add
rol
std
pop
in
je
ror
sbb
aad
mov
pop
fs
ds
data16
aam
sub
loope
clc
pusha
push
jne
pop
mov
adc
cmps
inc
fcmovbe
(bad)
in
mov
add
or
shl
mov
dec
es
retf
popa
sub
push
test
in
leave
jo
xchg
(bad)
movs
push
mov
mov
xor
inc
cmps
test
stos
or
push
sub
test
jbe
dec
out
push
mov
sbb
mov
shl
add
call
call
in
jno
jge
popf
sub
adc
dec
cmp
pop
xlat
(bad)
fild
fbstp
cmp
cmps
cmp
in
lea
mov
or
ss
or
pop
mov
mov
sub
jmp
mov
aam
dec
pop
test
cdq
repz
mov
jg
adc
or
adc
cmc
ins
cmps
mov
test
pushf
jge
std
push
push
mov
xchg
stos
leave
add
nop
xchg
pop
lods
push
fcom
push
sub
jmp
stos
shr
pop
add
jmp
sub
ins
mov
push
cld
cmp
pusha
adc
or
cmp
rcl
jge
push
aas
push
xchg
push
dec
dec
sbb
fchs
inc
fnstenv
xor
lahf
ss
jmp
cmp
lock
or
mov
pop
push
in
fcomp
daa
cmp
and
mov
push
mov
jl
xchg
pop
lods
xor
and
in
mov
rol
dec
mov
out
outs
sub
cwde
mov
jbe
push
retf
mov
push
dec
cs
mov
cmp
mov
neg
int
mov
and
test
jno
jb
popa
pop
js
xor
cwde
aam
pop
pop
call
jo
jno
xor
(bad)
call
xor
shr
dec
mov
sar
imul
mov
pushf
sub
add
mov
xor
mov
pop
mov
adc
or
pop
rcr
sti
adc
mov
js
in
cdq
aam
sti
xor
add
call
fbld
push
scas
test
loope
js
arpl
add
repz
es
push
and
mov
stos
pushf
cmp
xor
inc
mov
lock
jne
sbb
jns
xor
mov
mov
and
jg
pop
xor
stc
inc
push
in
out
mov
imul
sub
sar
jecxz
in
xor
mov
xchg
xchg
(bad)
xor
add
movs
sub
sbb
push
enter
retf
jmp
bound
xor
cmp
pop
push
add
std
not
imul
test
sub
fwait
loopne
jle
push
fdiv
js
lock
aam
push
xor
pop
jae
outs
jl
sub
cli
mov
iret
adc
fisub
std
xchg
or
mov
sbb
xor
jmp
jnp
cmp
icebp
inc
jecxz
shl
dec
xchg
scas
push
sbb
mov
add
xchg
enter
inc
in
or
cli
in
pop
and
jp
mov
leave
mov
xchg
jo
out
sahf
mov
inc
movs
xor
sbb
push
jb
cs
mov
sub
lahf
mov
mov
cdq
and
stos
cmp
jge
xor
dec
xchg
test
mov
ficom
sbb
mov
div
xchg
sub
into
pop
test
pop
inc
mov
mov
inc
xor
rcr
mov
fcomp
xor
cmp
cmc
pop
dec
xor
ret
arpl
psrad
test
test
shl
test
in
dec
sti
sub
adc
push
xchg
cmc
dec
ret
icebp
and
clc
sub
test
add
fwait
stos
sti
aam
aam
jecxz
scas
xchg
fcmovb
call
ror
es
xor
clc
or
mov
ds
imul
and
movs
cmps
cmps
pop
(bad)
fild
xlat
jae
ja
cmp
data16
and
test
es
loope
xchg
cdq
aas
mov
cmp
lds
sbb
dec
js
pop
arpl
or
jno
mul
mov
inc
sbb
jle
ret
(bad)
sti
hlt
fs
pushf
mov
cmp
mov
clc
neg
lds
ss
addr16
xchg
ficomp
mov
ja
and
cmps
daa
data16
xchg
xlat
or
adc
(bad)
jno
pop
sub
mov
or
pop
arpl
(bad)
call
or
adc
cld
add
dec
add
add
sub
clc
add
and
cmp
out
ds
xchg
sub
sbb
mov
bound
push
fdivr
push
bound
fidiv
jnp
add
xchg
sub
(bad)
cli
inc
sar
pop
pop
fistp
iret
mov
dec
addr16
ds
mov
and
xchg
scas
call
xchg
lahf
cmps
push
mov
xchg
std
pop
in
fistp
push
sub
rcl
sbb
outs
jmp
adc
push
(bad)
das
push
push
mov
cmps
xlat
jno
fcomp
shl
mov
ror
mov
sbb
mov
inc
scas
jmp
ret
adc
into
cmp
loopne
cmp
bts
and
add
and
pop
and
mov
mov
ins
xor
push
cs
mov
or
jg
sbb
xor
mov
pop
mov
jb
inc
test
in
daa
mov
xor
fsubr
push
mov
fisttp
retf
pop
xchg
jns
(bad)
and
xchg
leave
fidivr
sbb
outs
loope
mov
ins
sub
adc
mov
popa
cmp
pop
(bad)
inc
xchg
or
sbb
add
inc
lods
in
bound
and
jl
pop
xor
fimul
mov
sub
mov
mov
(bad)
dec
adc
jl
push
rol
hlt
fcomp
xchg
mov
cmp
and
sub
(bad)
aam
push
mov
sbb
je
pop
(bad)
mov
inc
xchg
sti
mov
jl
pushf
pushf
js
pop
loopne
xor
and
cmp
int3
xchg
imul
xchg
hlt
or
xor
fstp
scas
and
adc
iret
push
jl
sbb
fisubr
pop
(bad)
push
mov
(bad)
lds
into
aad
dec
mov
adc
aam
test
clc
movs
mov
adc
jmp
call
jecxz
mov
aad
pop
and
iret
xor
jb
into
xchg
push
enter
adc
jg
call
adc
add
sahf
mov
push
dec
mov
loopne
std
mov
jmp
hlt
in
loop
dec
outs
std
sbb
shr
comiss
jle
jmp
sub
sub
(bad)
les
fcmovne
out
aad
cmps
idiv
jg
cdq
ror
jg
test
cmp
sbb
dec
sar
addr16
ja
or
lods
pop
jmp
lods
aam
jbe
jl
inc
mov
hlt
sub
adc
or
scas
jbe
and
mov
mov
daa
int3
pop
cld
pusha
inc
mov
icebp
int3
mov
push
sbb
shl
push
adc
popa
retf
pop
fwait
inc
test
dec
das
sbb
pop
popa
pop
aaa
xchg
jp
cmp
fisttp
stos
mov
add
test
cmc
pop
jecxz
xor
dec
jns
jg
test
in
not
cmp
mov
cwde
inc
or
or
sub
ins
aaa
mov
(bad)
mov
adc
mov
cmps
pushf
mov
test
mov
adc
or
dec
and
pushf
inc
sbb
cld
lock
jg
ja
fxch
rcr
push
or
and
mov
sub
shl
jns
push
out
mov
jl
xlat
lods
stc
xchg
repz
xchg
add
and
inc
ficom
xor
lahf
xor
adc
aas
push
je
out
inc
ins
in
outs
cmp
daa
sbb
sub
mov
xor
push
ret
fld
xchg
mov
mov
or
jp
nop
inc
jmp
xor
mov
imul
fcomp
and
dec
or
or
inc
enter
push
(bad)
popf
ins
ss
mov
outs
xchg
pop
ds
xor
sub
mov
cwde
inc
adc
xor
mov
into
scas
stc
rdtsc
push
js
add
fnsave
jmp
mov
stos
dec
(bad)
stos
test
sub
hlt
gs
cmp
adc
lods
cmp
jo
jnp
in
mov
and
lods
xor
(bad)
or
sub
sub
jmp
jg
bound
sub
add
or
gs
and
dec
stos
mov
mov
ss
scas
push
outs
adc
xor
or
jmp
ret
mov
xchg
ins
sub
mov
xor
jnp
fs
xlat
push
mov
repnz
adc
sub
dec
mov
je
fadd
movs
fidivr
pop
or
jo
movs
out
mov
jne
ins
cmp
push
shr
push
(bad)
cmp
sbb
cmp
jnp
scas
and
jns
mov
call
icebp
pop
sbb
outs
arpl
cmp
mov
in
mov
test
call
icebp
enter
retf
out
into
je
mov
lock
retf
xor
into
and
out
mov
int
retf
out
enter
add
sbb
push
jns
ss
adc
stos
xchg
xor
xchg
and
mov
mov
pop
sbb
xchg
in
cmp
jns
sbb
jp
push
xchg
pop
icebp
sti
cmp
adc
adc
xor
mov
out
jbe
fcomp
xchg
pop
shl
dec
xchg
(bad)
or
out
lahf
pop
enter
push
inc
mov
cld
mov
es
arpl
fist
aam
mov
cmp
push
cmp
jecxz
icebp
ds
int
sbb
test
clc
pop
enter
cmc
inc
imul
mov
mov
mov
fs
repz
or
rol
push
jb
ds
mov
xor
lods
test
call
cmp
fmul
scas
cli
mov
push
lods
xlat
sar
(bad)
daa
ror
fst
fadd
mov
sub
and
xchg
retf
dec
mov
test
ficomp
mov
sahf
pop
outs
cld
mov
push
mov
inc
call
xchg
ret
clc
aam
sbb
inc
mov
jmp
xchg
mov
dec
jp
sub
jg
lods
push
xor
sahf
in
inc
mov
push
lidtd
movs
aam
sub
add
push
pop
cmp
mov
pop
std
push
mov
xor
mov
iret
mov
pop
push
sub
jns
(bad)
mov
ror
cs
cdq
mov
and
je
adc
sub
loop
add
cmp
mov
loopne
fdivr
mov
cmp
jno
jnp
das
pop
cwde
push
test
aas
xchg
push
pusha
push
fldcw
dec
mov
in
sub
sahf
push
pop
ror
pop
test
icebp
scas
push
push
jne
mov
arpl
inc
push
sub
cld
and
mov
out
push
in
scas
dec
rol
inc
aas
mov
mov
std
aaa
jge
aam
inc
arpl
or
sub
jge
push
outs
cwde
adc
leave
pop
mov
aas
pop
push
popa
in
pop
mov
pop
(bad)
cmp
fidivr
clc
in
(bad)
ss
out
or
pop
or
(bad)
sbb
movs
xor
xor
pop
mov
mov
cmps
out
mov
pop
(bad)
loope
leave
imul
call
jns
jo
push
add
aad
popa
and
fsub
outs
inc
repz
and
ins
(bad)
sti
lea
add
out
shl
push
jl
movs
repz
test
inc
inc
je
rcr
cs
fisttp
fstp
jmp
es
or
xor
dec
jbe
(bad)
dec
mov
xor
mov
push
add
xchg
mov
cmc
xchg
aas
mov
xor
clc
jb
inc
daa
loopne
sub
and
(bad)
into
mov
ins
cwde
and
sub
aas
sbb
and
mov
jge
adc
inc
push
dec
mov
mov
jo
ja
dec
leave
outs
jns
arpl
in
pop
jnp
cmps
loopne
adc
cli
shl
mov
xlat
jp
bound
loopne
clc
repnz
hlt
sar
pop
imul
or
cdq
in
and
dec
cmp
mov
cmp
mov
call
ins
sbb
jae
fmulp
pop
stos
ins
xor
dec
mov
pushf
mov
mov
or
ins
jg
pop
ss
jmp
push
mov
mov
stos
int
mov
sub
ret
call
popa
mov
rol
ja
dec
inc
in
adc
mov
shl
sub
repnz
dec
mov
pop
inc
adc
outs
mov
or
jns
fistp
in
push
test
mov
dec
in
add
aad
faddp
xchg
push
ja
ins
add
xchg
pop
push
test
adc
loope
nop
mov
and
mov
mov
imul
inc
scas
test
arpl
idiv
xor
push
in
or
(bad)
in
jmp
scas
xor
in
js
ins
out
sti
cmp
ja
jmp
shl
xor
xchg
aad
mov
jns
fisttp
mov
push
in
adc
xchg
sub
scas
push
(bad)
mov
cmc
push
sti
cdq
jg
nop
jmp
jecxz
popf
mov
frstor
loop
popa
ins
jle
lds
cdq
or
push
aam
(bad)
test
cmp
and
fistp
int
in
mov
push
inc
pop
fcom
(bad)
shl
repz
bound
fadd
jecxz
sub
mov
sahf
jge
xor
jo
psubb
sub
mov
and
inc
jno
mov
or
mov
lea
mov
je
xchg
dec
jmp
pop
mov
cmps
mov
fwait
inc
adc
test
inc
mov
xchg
dec
pop
sahf
xor
mov
cs
jmp
push
adc
shl
dec
and
(bad)
mov
xor
cmps
xor
or
popf
pusha
fwait
cld
inc
fadd
mov
pop
or
movs
mov
aam
mov
xor
adc
call
popa
nop
mov
sub
cmp
iret
xor
sbb
pushf
dec
mov
retf
mov
stc
in
add
push
mov
scas
dec
add
fs
aaa
cmp
jle
enter
mov
sub
pusha
rcl
pop
shl
jge
fcom
in
loope
test
daa
mov
(bad)
int
sbb
out
ins
xchg
stos
call
pop
sbb
jecxz
cli
aam
fcmovne
sub
xor
movs
in
pop
push
ret
enter
xor
cmc
shl
mov
dec
sahf
loopne
scas
mov
in
add
cwde
call
mov
imul
rcr
nop
or
push
xchg
es
mov
sub
popa
mov
sbb
lds
jmp
push
cdq
in
add
out
stos
mov
mov
or
clc
leave
dec
(bad)
ins
add
jl
jg
push
loop
gs
cmp
xlat
bound
aas
rcl
push
xor
loop
push
loopne
popf
(bad)
out
cmp
push
call
xlat
pop
out
cmp
push
xor
push
pop
sub
rcl
dec
xor
int
stos
or
ja
lahf
pop
lsl
je
jecxz
cdq
xor
mov
ret
outs
fld
lahf
into
dec
or
xchg
(bad)
icebp
rcl
cmps
jg
and
lods
push
inc
xor
dec
cmc
push
cmps
mov
sub
fisubr
or
or
into
ins
adc
sbb
mov
adc
cwde
(bad)
imul
xchg
fsubr
xlat
pop
cwde
enter
mov
cmp
or
xor
sbb
pop
jbe
adc
dec
(bad)
pop
fwait
xchg
push
cmp
cmp
mov
clc
xchg
xchg
mov
push
shr
dec
jge
adc
or
mov
mov
(bad)
mov
ror
int
sar
icebp
jnp
mov
mov
or
clc
lods
out
loope
js
push
imul
das
mul
nop
aad
ror
jmp
mov
jae
pop
les
ds
lock
add
jge
pop
xor
(bad)
movs
pop
mov
sbb
jbe
cmp
(bad)
and
add
das
scas
xchg
jno
test
cmp
dec
inc
addr16
adc
das
das
call
retf
mov
add
sbb
push
jb
mov
sub
mov
mov
add
or
mov
cmps
jl
push
mov
adc
pop
jecxz
push
clc
in
(bad)
or
dec
push
inc
popf
inc
add
pop
cmp
cmp
jae
mov
pusha
jecxz
xchg
jl
adc
jo
add
into
stos
mov
mov
pavgb
leave
push
mov
lock
xlat
mov
aaa
in
fistp
add
outs
test
call
test
and
rcr
es
adc
or
in
test
xlat
pop
aam
stos
(bad)
in
arpl
and
js
add
je
xor
ret
test
fsub
cmovne
mov
movs
cmp
outs
adc
aaa
sub
cmps
xchg
pop
or
push
cmp
add
loopne
in
push
push
ror
imul
and
jg
cdq
popa
jmp
push
pop
dec
pop
(bad)
or
loopne
xchg
pushf
xor
and
add
mov
jg
out
imul
aad
rol
pop
xor
cmp
je
mov
leave
push
push
mov
daa
test
sbb
in
shr
or
ds
jne
fwait
enter
push
dec
mov
lods
sbb
in
push
mov
cmp
and
or
dec
cs
rcl
ror
in
mov
jmp
adc
mov
jecxz
cmp
inc
sbb
in
push
jne
scas
(bad)
popa
div
adc
pop
ret
pusha
cli
outs
pop
lds
pop
fxch
outs
jp
mov
add
adc
and
jle
sbb
mov
and
repnz
nop
mov
add
les
lods
and
jae
pushf
in
in
pop
xchg
adc
arpl
pop
out
xchg
int
dec
loop
je
popf
cld
(bad)
jg
push
pop
mov
jmp
shr
retf
adc
jecxz
xchg
outs
retf
pushf
xor
ds
mov
and
push
loope
cld
mov
mov
jb
mov
movs
hlt
jnp
jno
xchg
jnp
sahf
adc
(bad)
fistp
pop
dec
sbb
add
inc
in
les
push
pop
imul
mov
into
loopne
fmul
(bad)
push
repz
outs
mov
test
push
mov
aaa
adc
fadd
ror
lods
and
push
dec
or
or
pop
js
pop
ss
push
jne
mov
das
dec
mov
rcr
outs
jecxz
pusha
cdq
jo
mov
jge
fsubr
lods
and
js
jp
jne
pop
mov
cmp
or
xor
fcmovnu
sbb
movs
movs
add
test
and
test
mov
cmp
fcomp
pop
xor
test
mov
cs
cmc
test
pushf
sbb
pop
pop
adc
mov
rcl
pop
shr
leave
add
retf
cwde
pop
imul
aas
jle
inc
pop
jae
mov
es
and
push
fcmovb
mov
jecxz
loope
outs
nop
out
cmp
in
(bad)
and
ja
cmps
inc
inc
scas
out
cwde
xor
daa
bound
cmps
in
call
xchg
or
push
into
out
sub
or
or
rol
dec
popf
jnp
inc
mov
gs
(bad)
bound
and
push
sbb
lea
rol
jle
lock
cmps
mov
add
jb
push
fcmovne
pop
cmp
sahf
das
rcr
out
out
shl
lds
jne
and
jmp
lahf
test
outs
xor
mov
test
jbe
dec
(bad)
cmp
fs
or
mov
push
inc
sbb
das
mov
ins
mov
push
push
lahf
fcmovnbe
add
out
mov
leave
(bad)
push
cmp
mov
pop
sub
fisubr
sbb
cmp
pop
mov
in
in
push
popa
or
out
mov
addr16
call
mov
pop
loope
cmp
psubsw
in
cwde
push
jb
push
jae
setl
push
rcl
out
out
repz
ret
fwait
and
jl
pop
cmp
cli
dec
in
cmps
dec
cmp
cmc
pusha
mov
mov
int
jg
not
nop
sbb
ja
add
sbb
add
loopne
push
sahf
cmps
xchg
and
movs
icebp
push
mov
jle
mov
mov
adc
adc
(bad)
ret
cmp
in
repnz
fbld
ja
cmps
inc
movs
dec
nop
and
jno
inc
jo
gs
push
sub
jle
push
push
mov
mov
shl
xchg
retf
call
mov
mov
sub
(bad)
ins
mov
fsubr
xchg
mov
scas
clc
push
pop
mov
pop
mov
and
jns
int3
loop
(bad)
push
xor
out
cmp
sub
push
fsub
arpl
dec
nop
pop
and
outs
sti
dec
ss
pop
in
addr16
stos
in
jg
jo
mov
mov
lahf
sbb
xlat
movs
xchg
out
add
stos
out
mov
in
(bad)
cmp
dec
inc
fidivr
movnti
jnp
mov
mov
mov
sahf
call
dec
pop
in
cmps
repnz
test
repz
leave
mov
sub
int
add
ins
pushf
test
call
lods
dec
cmp
xchg
mov
xchg
adc
dec
popa
dec
adc
xchg
imul
push
xlat
mov
mov
fnstsw
jns
lods
ins
test
xor
(bad)
xchg
add
cdq
cmp
ja
ins
pop
retf
and
cmp
sbb
mov
sub
jmp
add
mov
fdivrp
cmp
clc
and
push
popa
hlt
or
pop
aaa
push
pop
fadd
jns
mul
sbb
push
in
ror
dec
fnstsw
and
sti
mov
mov
int
pop
rol
inc
xchg
jo
hlt
sub
jnp
jnp
sbb
mov
loopne
jmp
daa
dec
sbb
mov
js
mov
adc
sub
test
mov
fwait
push
ins
jne
scas
add
lock
pop
sub
push
std
adc
inc
pop
jle
push
cdq
outs
sub
into
rcr
mov
jb
mov
mov
je
cmp
retf
jg
imul
fs
xor
adc
arpl
and
call
xlat
mov
push
jo
xlat
(bad)
mov
pop
add
mov
iret
es
mov
xchg
test
aam
dec
push
mov
ret
xlat
or
sar
imul
ss
xchg
neg
fstp
lods
or
cs
sub
jecxz
pop
mov
push
test
ret
test
(bad)
xchg
int3
xor
or
jmp
imul
sti
mov
cs
lods
mov
adc
pop
(bad)
imul
out
fild
retf
push
je
ror
xchg
adc
imul
sbb
add
sub
int
and
into
pop
mov
lea
pushf
jp
out
fwait
ins
sub
scas
adc
mov
fiadd
cmps
push
or
into
cwde
pop
out
aad
repz
push
inc
les
pop
pop
mov
add
cmc
loop
fist
fs
xor
mov
out
add
test
mov
sbb
push
sahf
mov
cmps
repnz
stos
test
mov
inc
movs
add
add
xor
sahf
xor
mov
sub
hlt
xchg
dec
ret
sub
mov
jno
cld
xor
ror
mov
cld
sbb
pop
xchg
test
cmp
push
mov
into
dec
or
dec
adc
cwde
(bad)
cwde
inc
pop
dec
pop
xor
or
fdiv
dec
(bad)
frstor
movs
movs
sti
pop
sub
pushf
sbb
xor
jmp
bswap
jbe
xchg
xor
ja
add
and
adc
jno
and
mov
cli
es
jl
fist
jne
aad
adc
es
add
mov
fistp
sbb
sbb
test
sbb
in
push
sub
xchg
mov
mov
pop
xor
add
shl
mov
loope
das
push
jae
repz
lods
out
ja
stos
(bad)
clc
fwait
jg
add
outs
adc
daa
xor
xchg
shl
pop
mov
test
sub
add
push
add
data16
pop
mov
xchg
hlt
sub
test
mov
xchg
mov
add
mov
(bad)
shr
aas
ja
outs
add
fdiv
or
es
repz
sbb
retf
push
or
push
fisub
inc
jnp
push
dec
call
outs
faddp
sbb
cwde
cmps
ins
imul
arpl
test
mov
popf
out
push
jl
and
int
cld
retf
es
xchg
ins
test
xchg
add
(bad)
pop
dec
jno
leave
pushf
nop
mov
pop
ins
mov
nop
jno
or
test
setge
div
(bad)
pusha
cdq
mov
shr
daa
sub
mov
stc
xchg
push
rcr
vmovaps
cli
(bad)
in
fld
add
imul
jg
call
cmp
aad
pop
sbb
clc
psubusw
cld
jns
iret
xor
push
retf
outs
(bad)
adc
and
outs
pushf
mov
xchg
sti
pop
fcom
adc
sbb
je
out
and
push
mov
xor
mov
inc
jl
inc
inc
repz
int3
cdq
lods
and
mov
bound
pop
mov
pop
popa
leave
repz
add
shr
adc
pusha
icebp
shl
push
imul
and
leave
mul
into
cmp
mov
fwait
sub
aas
sub
mov
dec
cmps
stos
sti
dec
ror
rep
out
push
sbb
jb
test
cmp
aad
mov
and
inc
inc
or
pop
iret
add
js
cli
lock
sub
lods
jne
pop
mov
or
push
(bad)
movs
xlat
push
sbb
ja
inc
mov
stos
xchg
fistp
out
fisubr
sbb
movs
sub
(bad)
pop
cmp
gs
pop
cs
jmp
add
xor
retf
dec
imul
aam
outs
push
mov
xor
inc
lock
and
imul
mov
mov
jno
int3
addr16
mov
mov
push
nop
xchg
sbb
xchg
adc
test
xor
out
push
mov
mov
test
add
xchg
rcr
clc
(bad)
sub
cdq
xchg
mov
pop
cdq
mov
dec
dec
lea
pop
sbb
adc
push
push
mov
add
in
mov
cmp
push
sbb
mov
xor
ins
or
mov
into
in
mov
mov
(bad)
adc
push
fdivr
jp
inc
jbe
push
sub
data16
mov
push
imul
aam
or
mov
mov
inc
fbstp
push
push
add
repnz
add
mov
sub
cmp
mov
inc
(bad)
sti
stc
mov
lahf
jle
cld
mov
mov
mov
idiv
(bad)
xchg
xchg
scas
xchg
add
sub
fdivr
push
pushf
stos
out
cmp
pusha
xor
cld
arpl
pop
jno
rol
mov
stc
outs
ja
cs
mov
add
and
ror
mov
fwait
mov
aas
jmp
lahf
xchg
sahf
ret
jmp
ror
xor
mov
jg
sbb
pop
loop
dec
std
xchg
mov
jo
popf
fdiv
into
sub
(bad)
adc
aas
inc
loopne
sub
mov
lock
mov
(bad)
int
addr16
aad
mov
mov
sahf
je
clc
inc
add
in
repz
imul
mov
cs
inc
shl
and
repnz
ja
int
sbb
test
das
xor
cwde
stos
xchg
in
shr
pop
out
sub
in
aad
repz
mov
cmp
imul
bound
pusha
daa
movs
push
sbb
inc
mov
and
push
stos
mov
inc
ret
repnz
gs
sub
sub
xchg
mov
imul
sbb
movs
inc
or
cmp
cmps
into
lock
hlt
fdivr
scas
(bad)
scas
sub
(bad)
jmp
sub
ret
fld
adc
mov
js
stc
pop
jae
or
sbb
xchg
sbb
imul
push
xor
bound
dec
jnp
sub
sbb
lock
and
mov
lods
dec
repz
les
hlt
inc
cmp
sti
sahf
mov
clc
inc
imul
iret
in
test
sbb
jle
fwait
or
push
enter
scas
into
test
fwait
xor
sbb
test
push
repz
out
adc
out
inc
popf
mov
push
sbb
or
in
loopne
(bad)
mov
arpl
jg
or
cmp
push
lds
jp
cmp
push
fwait
retf
neg
int3
stos
dec
sub
mov
ret
add
dec
retf
mov
sbb
mul
iret
xchg
(bad)
sbb
les
repz
aad
cmp
adc
stos
adc
mov
mov
xchg
jp
jmp
mov
mov
aam
out
rcl
fidiv
int
cmp
push
sub
pop
mov
scas
jno
jge
push
xchg
mov
mov
cmps
sub
into
lea
jae
adc
imul
sub
out
xor
outs
push
mov
mov
cmp
push
mov
hlt
inc
and
push
jmp
std
pop
xor
xor
arpl
test
jecxz
xor
push
jmp
jnp
mov
and
ret
adc
inc
jle
sar
in
adc
repz
fbld
cld
outs
clc
hlt
jne
mov
adc
fild
mov
pushf
xor
push
fild
int3
ins
jmp
nop
and
sbb
(bad)
dec
pop
dec
xor
dec
and
dec
in
stc
aam
mov
clc
stos
mov
in
xor
int3
loope
add
add
push
inc
fidivr
mov
in
pop
jmp
repnz
pop
sub
into
jg
clc
stos
pop
pop
nop
adc
pop
mov
and
shr
les
mov
push
ins
sub
popa
movs
jp
push
jge
mul
mov
sbb
(bad)
xor
xchg
mov
xchg
ficom
ret
sbb
cmp
mov
enter
dec
push
pop
mov
push
(bad)
xchg
lods
sbb
or
outs
div
push
popf
aam
mov
sahf
push
bound
aam
adc
fbld
jle
or
pushf
or
and
repz
shl
xor
mov
mov
mov
mov
mov
das
adc
(bad)
adc
adc
adc
dec
and
xor
and
push
add
scas
dec
mov
xlat
and
mov
clc
pop
int3
or
stos
xor
inc
out
mov
or
fcomp
nop
pop
mov
sahf
outs
loopne
pop
aaa
pop
dec
in
ja
add
adc
std
lock
je
pop
cmps
sahf
mov
aam
push
mov
fisttp
add
lock
inc
sbb
test
pop
scas
sub
ror
sub
int3
pop
shl
dec
pop
(bad)
jbe
cmp
cdq
repz
adc
test
inc
ins
sahf
xor
outs
jns
pop
(bad)
add
jle
mov
mov
in
dec
lahf
sub
std
xchg
mov
loope
pusha
pop
aas
adc
sbb
mov
xor
ds
jmp
pop
cmp
cli
(bad)
adc
pop
pop
pop
imul
mov
add
add
loop
movs
cmp
mov
jp
sar
ror
jmp
and
adc
in
lods
inc
ret
(bad)
test
add
fadd
fdivr
xchg
cmps
inc
popf
shr
adc
push
jns
pop
mov
pop
sbb
scas
arpl
(bad)
jmp
imul
lahf
and
or
rol
xchg
mov
fs
cli
lea
arpl
aaa
inc
rcr
jno
cmp
clc
mov
jo
aam
mov
pop
push
pop
ret
bound
or
lds
xor
adc
test
daa
sbb
inc
ins
stc
in
dec
pop
mov
dec
sahf
push
xchg
sub
jecxz
cmp
fnstcw
jle
jge
jl
mov
ja
push
push
imul
mov
(bad)
xor
enter
add
sbb
inc
mov
call
mov
es
sbb
stos
push
xor
add
xchg
leave
sbb
mov
push
pop
pop
mov
out
retf
test
inc
and
test
popa
cmp
jge
je
popa
push
add
adc
add
in
jo
in
or
lds
xor
adc
cdq
and
mov
mov
(bad)
dec
jecxz
xor
enter
aaa
jmp
and
sbb
jge
xchg
dec
lods
xchg
dec
iret
mov
push
loopne
or
mov
xchg
mov
add
push
cmp
add
and
fmul
aas
out
pusha
push
dec
push
dec
or
loope
idiv
test
pusha
clc
in
in
and
out
mov
imul
push
sbb
div
adc
and
popf
dec
sbb
adc
mov
sub
cmp
jns
sbb
jae
add
mov
or
adc
sahf
fisub
mov
push
and
je
add
push
jecxz
mov
ss
scas
mov
outs
ror
xchg
fbstp
int3
dec
inc
sahf
into
cmp
dec
cmps
pop
mov
(bad)
add
dec
adc
lahf
ds
inc
ror
jl
fabs
clc
fst
stos
add
call
mov
sub
pop
adc
inc
test
adc
mov
rcr
push
scas
in
and
adc
xlat
pushf
add
stos
in
cmp
mov
and
sub
test
adc
dec
out
mov
(bad)
loopne
repnz
lods
bound
sbb
out
fld
(bad)
sub
push
out
sbb
fst
xor
cmp
xchg
mov
(bad)
sti
loop
addr16
mov
jecxz
shr
mov
hlt
jne
fdivr
inc
pop
xchg
les
adc
dec
retf
pop
sbb
push
jnp
adc
cmp
add
inc
xchg
sbb
adc
das
(bad)
dec
inc
inc
out
sub
or
push
xchg
(bad)
xchg
lock
push
(bad)
xor
jmp
jns
hlt
daa
xchg
(bad)
jmp
cmp
gs
add
push
fstp
icebp
lea
dec
and
jo
adc
cdq
mov
je
daa
xor
mov
push
outs
(bad)
repz
jb
out
xchg
push
fmul
sti
bound
bound
adc
arpl
les
mov
sub
int3
test
push
int
push
shl
outs
or
sbb
push
retf
or
aad
outs
das
push
shr
leave
xor
les
pop
scas
cmp
ficomp
mov
movs
fwait
loopne
cld
adc
dec
scas
or
push
gs
xor
test
mov
loope
sub
sub
push
shr
xchg
mov
add
lods
mov
dec
xor
loop
add
int
in
imul
ins
(bad)
and
in
loope
sub
cmp
mov
dec
and
mov
xor
movs
adc
push
out
jle
out
stos
mov
add
inc
in
stc
jge
jbe
xor
adc
xchg
mov
rol
mov
mov
push
movs
pop
adc
dec
cmp
xor
sbb
push
test
hlt
xchg
and
ins
push
mov
pop
or
xor
lods
loope
adc
pop
adc
adc
add
popa
push
mov
add
icebp
cmp
mov
pop
and
into
inc
movs
mov
adc
scas
sbb
icebp
and
jg
call
add
daa
adc
xchg
xchg
adc
and
mov
neg
mov
pop
inc
lock
fst
add
xchg
jmp
movs
fwait
lahf
or
push
js
out
cmp
repnz
sbb
cmp
cmp
pop
inc
inc
(bad)
shl
inc
sti
daa
xchg
or
aas
sar
lock
inc
jno
push
ror
idiv
xchg
push
dec
ret
out
imul
mov
and
jge
jo
push
sahf
mov
and
fmulp
call
push
iret
cld
add
add
ret
or
jbe
sti
push
push
mov
inc
add
xchg
inc
sub
fstp
ss
sub
jns
jno
push
push
aas
sub
es
sub
push
jp
jle
cmp
or
xchg
and
adc
pop
xor
popf
mov
gs
cmc
pushf
gs
sar
push
pop
outs
lods
sub
lahf
sub
outs
jae
xchg
inc
mov
aaa
aad
inc
shl
cmp
or
in
jo
cmp
push
cmps
mov
das
dec
setno
loopne
in
dec
shl
enter
mov
jge
out
jmp
loopne
and
cli
je
jno
shl
fwait
shl
or
mov
and
xor
call
shr
aaa
push
add
pop
mov
and
pusha
and
or
shr
popa
xor
gs
sub
adc
clc
je
jl
mov
hlt
sub
pop
push
cmp
fisttp
add
jmp
adc
lods
jmp
test
inc
in
daa
xor
getsec
inc
lods
loop
mov
es
arpl
mov
outs
mov
(bad)
lods
stos
dec
fldcw
cmp
or
inc
enter
(bad)
xchg
aam
sub
dec
jo
xchg
mov
mov
jle
cmps
xchg
in
add
push
hlt
mov
popf
push
movs
and
arpl
mov
dec
mov
aaa
daa
jmp
xchg
shr
aad
xchg
mov
jle
or
or
jnp
mov
xchg
test
adc
sti
cmp
adc
popa
mov
shl
push
mov
int
push
jo
aaa
xchg
cmp
clc
jb
inc
adc
int
adc
push
xor
pop
pop
xor
mov
cmp
daa
rcr
xchg
sub
pushf
lea
pop
call
mov
(bad)
daa
aam
cli
jl
xchg
in
adc
rol
jp
mov
adc
stos
ja
jmp
push
dec
ins
mov
int
mov
call
(bad)
xor
sbb
xchg
push
inc
adc
ins
xchg
cmp
aas
pop
rcl
(bad)
cmps
fs
jno
ds
popf
mov
dec
sub
xchg
cmp
pop
jl
mov
mov
pop
mov
js
dec
sub
or
add
mov
pop
cmp
push
push
sub
xor
dec
test
stc
mov
fsubr
adc
fldenv
cmp
je
lahf
aas
in
fdivrp
mov
sti
addr16
fadd
push
fadd
pusha
scas
(bad)
jle
in
jns
cmp
sub
fild
js
call
inc
loop
lock
sub
dec
imul
(bad)
sahf
jg
push
sar
shl
arpl
jnp
mov
mov
mov
mov
xchg
xchg
mov
add
inc
xlat
mov
imul
push
mov
pop
movs
mov
mov
xchg
add
call
stc
push
in
mov
cmps
in
pop
cld
mov
cmp
gs
push
ins
jnp
push
aad
dec
mov
cs
lods
or
and
stos
cmps
scas
shl
in
mov
pop
sbb
sub
mov
xlat
inc
sbb
fild
pusha
xchg
lea
mov
into
call
mov
(bad)
gs
imul
in
sub
pop
xchg
rol
pop
sbb
xor
add
mov
movs
and
shr
stc
mov
jecxz
mov
mov
inc
out
das
data16
dec
in
xchg
imul
arpl
out
into
(bad)
mov
push
or
ret
adc
cdq
mov
cmp
aam
sar
xor
mov
push
lods
cmp
push
mov
call
jl
in
sub
fdivr
and
xchg
rcr
adc
out
pop
jle
sub
or
mov
sub
popf
mov
daa
(bad)
jg
mov
loop
fst
das
adc
jno
mov
xor
ins
repz
xchg
cmp
ret
lods
loope
mov
and
sub
sub
mov
repnz
or
test
jl
js
pop
add
leave
out
call
adc
push
jmp
ret
icebp
add
mov
iret
jle
xchg
mov
movs
retf
enter
dec
enter
pop
adc
jmp
ja
push
call
out
mov
ror
xlat
sahf
fcomp
or
arpl
mov
leave
push
jns
cld
cmps
jp
mov
mov
aas
rol
pop
jns
pop
jge
mov
ret
hlt
mov
fisub
jno
sti
out
fwait
sub
je
and
dec
inc
xor
iret
loop
fcmovu
imul
cmps
retf
mov
hlt
ror
xchg
push
sub
mov
mov
movs
pop
jae
ret
push
adc
es
push
mov
mov
cs
mul
pminsw
cwde
cwde
gs
and
inc
ja
xchg
adc
and
inc
bound
inc
pop
mov
pusha
lods
cmps
aas
sbb
adc
clc
repnz
or
cdq
std
cmp
loopne
fist
popa
out
jl
retf
lods
iret
push
sbb
dec
jle
outs
mov
scas
into
out
xor
mov
xchg
cmc
outs
adc
cli
dec
dec
cmp
sub
gs
or
loope
into
fcmovu
or
xor
xchg
pop
xor
push
pop
add
stos
cmps
test
cdq
mov
xchg
mov
or
je
rcr
scas
mov
lock
mov
jl
cwde
les
data16
and
(bad)
les
mov
cli
xchg
cmps
dec
stc
jb
sbb
(bad)
cmps
scas
sahf
ret
push
fadd
xchg
push
mov
mov
cwde
lea
in
push
sbb
xchg
pop
mov
jp
sbb
cs
cdq
enter
xlat
adc
or
fucomi
inc
cmc
or
fst
imul
dec
xlat
scas
sub
pop
nop
(bad)
mov
sar
add
cwde
int
pop
push
or
jo
sahf
imul
and
and
stos
xchg
push
push
sbb
and
xchg
aad
and
xor
xor
jmp
enter
test
cmp
mov
(bad)
rol
pop
stc
ss
dec
sbb
adc
iret
out
or
push
aad
dec
rol
xchg
or
lahf
and
rol
ins
pusha
out
dec
mul
mov
leave
dec
lahf
mov
repnz
dec
nop
lock
es
je
(bad)
ja
mov
repnz
movs
data16
in
outs
sbb
push
shr
data16
ret
rcl
fistp
and
dec
xlat
das
pop
imul
jne
push
pop
shl
pop
pop
in
jecxz
pop
add
jne
test
push
pop
xor
dec
mov
pop
out
mov
push
push
popa
jmp
mov
adc
push
js
adc
mov
sub
ins
add
lahf
sbb
jecxz
shr
lahf
or
lock
pop
clc
js
pop
jbe
in
ficom
cmp
js
and
push
xor
dec
dec
xchg
lea
outs
xor
sbb
cmp
dec
repnz
mov
mov
jnp
xchg
jmp
not
ror
xor
pusha
pop
ror
sbb
xchg
rcl
(bad)
ret
(bad)
and
inc
push
lea
pop
pop
imul
and
loopne
push
push
add
jne
int
test
and
dec
fst
mov
imul
hlt
xor
sbb
or
loopne
jl
div
push
leave
iret
ja
xor
jecxz
enter
enter
xor
mov
fwait
out
shr
or
jno
pop
pop
shl
jg
cmp
(bad)
icebp
imul
enter
cmp
mov
and
pop
ror
cmc
push
jb
jo
cmp
push
iret
mov
test
inc
xchg
pop
xor
push
mov
inc
push
cli
push
js
mov
rcr
adc
stos
jmp
or
outs
rcl
or
mov
aam
(bad)
stos
adc
ror
adc
add
push
jo
imul
dec
lds
shl
psubw
fwait
retf
lea
sbb
les
sub
aam
sub
mov
lock
or
mov
loope
xchg
cmps
xor
xchg
sub
lock
enter
pop
retf
cwde
dec
or
sub
inc
fstp
retf
repnz
push
inc
xor
sti
retf
mov
inc
xchg
lds
stos
mov
add
mov
in
push
sub
bound
mov
jns
out
add
pop
inc
movs
sub
push
dec
es
pusha
sub
mov
pop
push
push
outs
rcl
(bad)
or
mov
mov
push
pop
or
lea
loop
pushf
pop
add
sub
pop
ins
shl
mov
and
dec
std
ss
sbb
cmp
dec
xchg
pop
popf
ja
mov
out
mov
xor
ins
fwait
adc
stos
fucomip
or
cmp
outs
push
sbb
push
mov
dec
add
push
stos
and
sub
das
ror
jle
lods
(bad)
loope
shl
ds
jmp
clc
xchg
inc
jo
mov
or
std
test
adc
(bad)
xor
mov
in
movs
lods
and
push
push
cli
pop
pop
cmp
sub
popa
xor
les
push
enter
xchg
inc
gs
push
add
dec
and
inc
pop
xacquire
or
inc
jmp
inc
out
sub
cmp
sbb
sub
enter
mov
push
std
outs
adc
rol
xchg
pushf
push
pop
fs
imul
adc
mul
or
push
mov
xchg
popf
jbe
sbb
int3
out
sbb
dec
mov
push
retf
sbb
xchg
push
xor
in
xchg
data16
int
icebp
and
push
fdivr
xchg
(bad)
push
add
(bad)
jecxz
fist
bound
pop
fwait
imul
repz
mov
push
lods
xlat
neg
sahf
mov
and
sbb
div
dec
xor
pop
mov
sub
outs
imul
fs
jbe
sbb
int
fcmovu
xchg
fst
pop
dec
xor
cli
sub
sub
xchg
xor
mov
sub
lock
stos
sti
out
mov
sbb
rcl
iret
push
hlt
loopne
out
(bad)
loop
mov
jmp
shl
push
xor
push
fdivrp
mov
mov
xchg
dec
pusha
dec
shl
shl
mov
das
sub
jp
lods
out
pop
dec
iret
ins
push
scas
ins
test
(bad)
shl
mov
sub
sub
cdq
inc
ret
mov
aam
iret
ror
mov
jmp
push
(bad)
mov
sti
pop
out
adc
mov
in
sti
sub
pop
scas
clc
jnp
std
add
pop
lea
or
mov
outs
fsubr
mov
lock
ins
(bad)
push
push
in
inc
add
adc
xlat
test
mov
sahf
ret
jns
mov
or
and
pusha
xchg
sub
jmp
mov
cmp
ficomp
dec
sbb
rcr
mov
cmp
xchg
xor
out
fs
inc
add
lock
lds
mov
cld
or
push
cmp
not
jmp
and
ds
add
dec
popf
mov
jmp
xor
ret
call
sub
jno
sti
cld
test
jp
clc
mov
out
in
popf
pop
and
out
sub
pop
das
push
repnz
lea
jg
xchg
push
inc
fwait
pop
mov
sbb
sar
mov
pusha
add
add
cmp
imul
test
call
xchg
loop
xchg
popf
or
outs
test
mov
dec
push
scas
or
jo
mov
hlt
leave
ficomp
cmps
dec
dec
or
(bad)
mov
lahf
int3
pop
shl
pop
(bad)
dec
add
or
or
ror
lahf
jp
push
dec
pop
inc
inc
leave
inc
leave
sbb
gs
push
popf
pop
cmp
dec
add
nop
cmps
push
in
shl
and
scas
rol
icebp
or
mov
push
mov
imul
cld
pop
xchg
xor
xchg
push
ins
(bad)
mov
minps
jae
mov
enter
ret
adc
adc
xchg
icebp
sub
dec
cmp
adc
or
mov
mov
mov
jmp
pop
sbb
dec
pusha
dec
imul
fimul
and
lock
mov
sub
mov
xchg
add
popf
mov
call
push
scas
adc
dec
jbe
scas
sub
adc
push
dec
mov
push
(bad)
daa
cmc
mov
int
addr16
pause
outs
xor
push
je
std
adc
jb
shl
dec
push
mov
inc
xor
push
xor
inc
sub
lods
imul
xor
cmp
shl
clc
int
mov
cmc
dec
out
xor
ds
cmp
xor
adc
fimul
pop
pop
bnd
jne
scas
mov
retf
shl
dec
dec
shl
ret
inc
aam
gs
mov
mov
sbb
movs
daa
sbb
bound
fcom
fmul
scas
sbb
lock
clc
aam
ins
scas
mov
call
mov
loope
or
mov
sub
or
xor
ins
lods
mov
mov
xlat
add
cmp
stos
cmp
enter
loop
inc
sbb
das
dec
push
cwde
stos
popa
retf
xor
dec
popf
in
xor
in
cmp
and
cwde
sahf
cmp
popa
inc
add
xchg
ss
jae
add
push
add
cmp
dec
sahf
addr16
sbb
sub
push
jne
retf
in
xor
not
or
or
dec
inc
jg
jmp
imul
cmp
out
xchg
mov
out
mov
dec
mov
mov
ds
cld
shl
jp
test
xchg
clc
sahf
pushf
jl
push
add
pop
inc
stos
xchg
(bad)
cmps
xchg
pop
or
pop
or
cmp
adc
cld
ror
cmps
mov
cmp
mov
xchg
dec
into
retf
fs
in
data16
(bad)
mov
ret
dec
fwait
mov
push
pop
mov
add
pop
push
xor
je
push
clc
pop
push
mov
dec
stc
xchg
test
sar
call
ret
xor
fwait
and
stos
imul
or
dec
sbb
icebp
cmp
pop
inc
rcr
jmp
call
lea
jmp
idiv
outs
icebp
push
(bad)
ja
pop
lock
xchg
ret
push
ins
out
ins
xchg
ret
mov
fsub
inc
les
outs
sub
add
adc
adc
adc
fstp
bound
cmp
push
dec
push
mov
inc
les
add
mov
fmul
stc
dec
lahf
adc
xlat
fld
mov
pop
cmp
inc
cmp
dec
pop
sub
xchg
mov
iret
jne
sub
lea
fnsave
stos
jecxz
fadd
xor
inc
daa
test
push
ins
cmp
push
popa
mov
cmps
cs
pop
push
aam
rcr
ror
shr
ret
jmp
mov
cmp
sbb
outs
cli
mov
xchg
jmp
push
inc
adc
fucomp
in
or
(bad)
push
int3
cli
bound
aad
dec
jmp
sub
fsubr
mov
push
fdivr
sub
push
data16
bound
ret
pop
xchg
push
in
addr16
repnz
sbb
dec
fisub
jl
xchg
pop
ja
ins
push
test
xchg
ficomp
ds
cdq
sub
cmp
pop
sar
(bad)
pop
aaa
mov
mov
xor
pop
cmp
je
and
xor
sbb
mov
ss
inc
fadd
inc
lods
pop
cmp
ss
inc
cmp
inc
and
push
sub
inc
mov
mov
stc
jnp
imul
fdiv
sub
xchg
mov
xor
stc
mov
adc
fild
test
dec
push
push
loopne
xor
cdq
dec
jge
ins
push
mov
jmp
mov
and
xor
xchg
add
lods
add
das
dec
dec
add
loopne
xchg
xor
sub
pop
(bad)
dec
jmp
popa
dec
sbb
push
xor
ins
jb
inc
cli
jb
mov
push
xchg
jae
add
mov
jns
mov
leave
cs
push
out
div
out
frstor
mov
sbb
daa
sub
add
xor
push
(bad)
(bad)
inc
inc
mov
lahf
mov
or
push
xor
(bad)
push
stos
fwait
adc
loope
mov
retf
adc
movs
sbb
mov
cwde
bound
in
(bad)
cmps
call
enter
jmp
icebp
dec
shl
fwait
loop
bound
into
out
cmp
cmps
and
inc
dec
addr16
repz
call
xor
aaa
cmp
loope
cmp
mov
sbb
test
jb
aaa
push
sahf
imul
push
lock
je
ror
xor
je
mov
add
clc
sub
repnz
call
sar
stos
mul
mul
sub
sbb
inc
call
mov
retf
add
mov
or
popf
or
mov
or
test
push
dec
jne
push
iret
dec
mov
add
sbb
in
pop
std
std
stc
push
test
je
fcomi
inc
popa
fs
mov
jg
ja
shr
les
repnz
pop
mov
jmp
scas
push
sub
cdq
enter
repz
int3
jo
ror
mov
xchg
ret
mov
xchg
cdq
or
test
inc
out
outs
mov
test
cwde
scas
push
pop
call
or
dec
xor
(bad)
mov
cld
out
ins
arpl
cmc
dec
jbe
mov
dec
(bad)
out
retf
inc
push
sbb
ja
cld
pop
(bad)
wbinvd
adc
push
push
sahf
xlat
adc
loopne
std
int3
cs
adc
xchg
add
sti
jnp
add
push
mov
sub
(bad)
push
test
(bad)
(bad)
mov
xlat
cmp
retf
imul
sbb
mov
cmp
lods
into
bswap
add
dec
(bad)
push
sar
inc
sub
xor
addr16
sbb
aam
iret
mov
sub
adc
imul
dec
outs
add
repz
dec
mov
scas
or
or
adc
mov
mov
into
jae
scas
(bad)
cmp
dec
std
movs
sub
cmp
outs
push
sub
fld
jae
inc
cdq
leave
in
add
out
and
push
jecxz
sti
shl
jg
jmp
arpl
in
inc
(bad)
int
xor
xchg
mul
lds
fimul
icebp
arpl
les
fidiv
mov
mov
sbb
nop
out
fisub
sub
push
mov
fxch
mov
add
aaa
or
stc
ja
inc
fnsave
shl
mov
scas
out
mov
inc
cmp
in
lods
sub
jns
xor
(bad)
test
jb
jo
xor
xchg
xchg
cmp
cmps
mov
sub
ins
dec
and
loop
repz
push
aam
je
fisub
aad
pop
mov
cli
push
hlt
retf
dec
test
repnz
pop
movs
jbe
xor
or
xchg
pop
dec
jb
fisttp
mov
mov
mov
mov
sbb
mov
ret
or
xlat
lea
daa
outs
sar
mov
and
and
add
repnz
cmp
dec
(bad)
clc
fisubr
push
into
adc
add
cli
cs
sbb
push
shr
inc
in
cmp
cmp
or
das
pop
adc
jo
mov
stos
adc
pop
and
sub
mov
loope
imul
clc
inc
call
pop
das
in
mov
and
dec
xor
in
in
fs
and
xchg
cli
push
imul
or
in
cli
lock
mov
rcr
test
test
push
dec
pop
push
out
test
pop
not
pop
mov
dec
div
pop
aad
xchg
adc
add
enter
ret
jle
dec
and
fimul
cwde
and
mov
or
sbb
data16
daa
call
push
addr16
jae
(bad)
ins
lahf
cmp
xchg
push
jns
adc
sar
out
inc
inc
stos
xchg
jo
jmp
or
daa
repnz
inc
xchg
hlt
test
scas
add
data16
shr
add
in
dec
adc
cdq
out
push
push
dec
inc
int
adc
pusha
ficom
daa
icebp
or
sub
mov
fwait
push
out
sbb
js
clc
adc
into
pop
out
ffree
sub
aam
mov
fisttp
outs
push
out
fnsave
mov
dec
push
adc
les
mov
dec
xchg
aam
add
std
rol
adc
ret
out
xchg
mov
or
mov
jnp
mov
fwait
gs
loop
ins
jle
push
out
je
scas
sar
adc
adc
sar
jg
int3
js
sti
add
inc
int
mov
movs
in
loop
mov
push
mov
stos
xor
and
jno
jl
mov
clc
pop
dec
pop
mov
pop
add
(bad)
push
out
jbe
test
add
dec
sub
aaa
jmp
sbb
push
out
jp
gs
inc
sbb
mov
or
xchg
cmp
iret
sti
test
lea
and
lea
push
adc
arpl
inc
mov
mov
or
xlat
and
sbb
sbb
into
(bad)
stc
mov
and
iret
mov
add
sub
js
aad
fadd
mov
or
xchg
xchg
movs
arpl
mov
mov
cmps
or
mov
inc
pop
lock
sbb
push
in
in
pop
lods
jno
lods
lea
mul
popa
sbb
dec
mov
push
and
(bad)
sbb
ror
cmps
or
dec
and
mov
cmp
push
(bad)
movs
pusha
jmp
pop
jb
xor
repnz
xor
fistp
xchg
push
ja
hlt
inc
pop
repnz
xor
pop
xchg
in
mov
inc
mov
es
arpl
inc
push
pop
mov
scas
add
jns
les
sbb
das
jno
dec
repnz
xor
mov
jns
std
inc
fwait
mov
push
inc
lock
mov
add
sub
add
jle
jl
add
xor
jnp
sbb
nop
(bad)
xor
mov
retf
adc
push
ins
movs
je
lods
les
push
mov
popa
(bad)
in
js
pushf
dec
jg
in
test
push
arpl
fadd
pusha
add
fstp
out
or
push
push
shl
into
pop
and
mov
fisttp
xor
leave
es
je
cli
(bad)
test
cmp
cmp
mov
shl
adc
fsub
mov
lea
dec
cmp
iret
push
xchg
pop
xchg
rcl
hlt
jo
xor
xchg
push
mov
cmp
mov
pop
in
lods
scas
cli
ror
fdiv
test
mov
mov
inc
xlat
fsub
test
cmp
lods
cmp
xlat
movs
icebp
es
jnp
fnsave
lods
add
sar
mov
and
fist
sbb
lea
push
in
outs
push
arpl
xchg
xor
repz
aaa
inc
nop
xor
pop
add
jmp
adc
jl
push
out
mov
shl
pop
inc
jo
rol
imul
xchg
add
scas
mov
test
movs
rcl
cdq
je
int
icebp
or
xlat
mov
sub
test
push
push
stc
jns
sub
imul
adc
sub
jmp
imul
adc
enter
bound
push
das
sub
(bad)
rcr
pop
int3
fst
add
lock
imul
gs
das
cmp
movs
pusha
cmp
push
imul
rcr
outs
xchg
sub
(bad)
cmp
dec
xor
inc
(bad)
xor
dec
and
jne
sub
push
aas
arpl
inc
call
push
(bad)
fcom
loopne
adc
mov
jb
call
lds
ins
adc
outs
and
cs
mov
ret
jecxz
push
mov
jecxz
mov
mov
call
add
mov
cmp
pop
loopne
fsub
add
pop
bound
inc
jae
and
loope
movs
or
fld
ret
xor
sub
jmp
cmps
dec
mov
fucomp
push
jl
loop
popf
fwait
jge
ins
pop
dec
rcr
adc
movs
(bad)
mov
mov
enter
jmp
imul
stos
push
or
ret
fcmove
out
dec
pop
sub
icebp
arpl
test
popf
int3
pop
mov
jo
sbb
out
stos
daa
jmp
mov
and
out
mov
leave
inc
popa
outs
imul
push
pop
xor
adc
ss
int
add
xchg
xor
in
pop
(bad)
xor
add
out
adc
stos
sti
jno
sbb
sub
aad
stos
loopne
cs
xor
(bad)
mov
pop
push
push
adc
nop
test
iret
leave
(bad)
pop
or
(bad)
push
pop
bound
jg
or
dec
fstp
pop
out
sub
(bad)
out
pop
inc
pop
cmp
fwait
pop
pop
sbb
xor
pop
push
jmp
or
js
ins
sbb
and
cmp
jne
inc
shr
test
(bad)
retf
mov
test
loop
ficomp
stos
dec
push
(bad)
repnz
mov
in
pop
jp
aaa
jge
xrelease
enter
fsub
add
mov
retf
dec
pushf
xchg
int
mov
sbb
icebp
adc
xchg
mov
leave
mov
fistp
stc
sub
adc
and
inc
movhps
mov
(bad)
loop
mov
cs
xchg
xor
dec
out
in
and
icebp
xchg
lea
int3
fs
call
mov
jnp
(bad)
sti
adc
repnz
outs
sahf
cmps
sub
add
inc
sbb
xor
xchg
cmps
arpl
loope
pop
xchg
es
dec
and
inc
in
aaa
push
adc
js
cmp
lods
add
lahf
adc
add
xchg
push
sbb
and
cli
out
aad
jmp
scas
js
add
xor
adc
mov
sub
or
dec
retf
xlat
icebp
push
push
sbb
test
mov
mov
xchg
jecxz
enter
pop
and
cwde
fadd
push
popa
call
sti
xchg
sti
jl
mov
mul
or
pop
jno
pop
xchg
(bad)
fisttp
cmp
mov
mov
pop
add
loop
mov
xor
adc
mov
mov
movs
out
adc
rcr
jns
mov
jl
pusha
mov
pop
test
inc
retf
out
jb
adc
push
jl
pop
in
scas
jnp
shrd
adc
add
pop
in
stos
mov
mul
in
adc
xor
cmp
test
xchg
mov
xchg
push
das
sbb
fdivr
add
and
pop
cld
fisubr
adc
bound
adc
jge
jecxz
xor
fmulp
mov
pushf
fs
stos
imul
outs
mov
sbb
movs
adc
mov
fwait
out
sub
mov
dec
mov
sbb
fild
inc
int3
adc
sbb
loopne
xor
test
mov
or
and
xor
mov
std
mov
lods
outs
ins
fimul
pop
cmp
repz
loop
cmp
rcl
mov
stc
cdq
cwde
inc
lea
inc
fstp
cmp
and
adc
sub
repnz
hlt
aad
(bad)
sub
outs
gs
jge
mov
div
jmp
leave
in
mov
sbb
add
sbb
xchg
dec
jp
dec
outs
mov
ins
outs
hlt
data16
sub
repnz
push
enter
jle
fs
cmps
push
fisttp
iret
data16
jmp
cmp
(bad)
mov
sahf
cdq
mov
out
push
repz
inc
pop
icebp
add
dec
outs
mov
mov
and
xchg
inc
imul
jmp
cmp
mov
sub
dec
mov
inc
pop
or
adc
xchg
mov
dec
and
push
pop
retf
lods
jl
cmp
pusha
les
mov
outs
rcr
neg
movs
enter
je
xchg
xchg
stos
movs
lods
add
shl
nop
xor
out
ror
dec
outs
inc
pop
int
repnz
adc
xchg
ins
popa
fwait
sbb
push
dec
pop
adc
pop
out
xor
cmp
jp
popa
and
xlat
sahf
div
pop
jb
push
arpl
nop
push
stos
les
xor
xor
out
mov
push
adc
mov
push
sub
xchg
pop
cmc
or
dec
cmps
in
(bad)
push
xchg
dec
int
rcl
jmp
jbe
fld
inc
(bad)
cdq
pop
cs
jle
xor
(bad)
shr
add
fsubr
mov
dec
adc
movd
push
cmp
jg
pop
jg
sub
sub
les
pushf
cs
jnp
js
cmp
mov
sbb
pop
xchg
jo
adc
out
sahf
or
mov
jg
lock
pop
push
mov
add
icebp
(bad)
xchg
(bad)
lods
pusha
pop
push
popa
cmp
ja
cmp
mov
mov
movs
(bad)
dec
cdq
movs
jno
jns
add
mov
mov
aaa
jmp
add
xchg
imul
test
cmp
or
imul
enter
inc
adc
jb
mov
retf
jmp
push
cdq
or
xchg
push
cmp
(bad)
aaa
cmp
out
mov
jae
inc
test
out
ret
sub
in
xchg
and
call
push
pop
sub
or
dec
mov
dec
aas
jecxz
jecxz
fwait
mov
lods
ds
jo
pop
jecxz
clc
shr
mov
inc
sub
xchg
dec
inc
retf
xchg
arpl
mov
sbb
push
inc
or
inc
xor
xchg
push
ds
sbb
pop
add
(bad)
(bad)
cli
xchg
and
jae
push
leave
mov
add
es
out
(bad)
xchg
adc
and
xchg
jg
sub
shl
or
xor
or
mov
jns
out
inc
test
aad
mov
add
or
push
or
into
jmp
adc
fld
test
jbe
add
scas
mov
mov
in
or
aaa
xchg
repnz
stc
(bad)
jne
mov
mov
mov
xchg
or
out
in
cmp
mov
arpl
loope
xchg
mov
mov
aaa
cmp
repnz
addr16
and
cmp
gs
aad
inc
add
mov
jo
jg
test
shr
add
scas
add
mov
popa
js
and
dec
cmp
in
std
mov
nop
push
inc
jns
cdq
retf
daa
mul
aad
mov
sbb
arpl
mov
sbb
push
pusha
dec
cmp
cmc
jo
repnz
retf
and
lahf
and
cmc
fist
sub
pop
xchg
mov
push
pop
and
dec
dec
imul
xchg
pop
outs
stos
cmp
in
scas
es
cmp
or
inc
adc
push
int3
xchg
adc
movs
inc
pop
minps
movs
jge
jg
pop
cmp
sbb
ins
retf
push
sub
iret
mov
in
inc
mov
lods
ror
cmp
clc
push
shl
nop
retf
adc
pop
inc
and
in
jge
xchg
fdiv
inc
in
mov
js
pop
mov
add
es
shrd
inc
movs
sahf
sub
push
and
or
inc
push
jl
lods
mov
leave
mov
mov
outs
adc
outs
pop
adc
enter
or
cmp
sbb
in
dec
jbe
cmp
rcr
adc
mov
xchg
and
fst
jne
es
jno
sti
lea
call
mov
jb
mov
fild
jge
mov
jo
(bad)
sub
sbb
pop
rcl
sub
shl
push
mov
sub
pop
sti
push
sbb
jns
(bad)
sub
test
push
sub
and
jg
push
loope
xor
popa
xchg
sbb
or
jb
xlat
data16
mov
repnz
jmp
cld
or
pop
hlt
and
cld
leave
iret
test
push
cwde
outs
pop
mov
xor
and
loopne
lahf
lods
dec
mov
add
vpermilpd
or
lds
shl
je
mov
and
fs
dec
clc
cwde
loop
sbb
call
pusha
std
movs
dec
pop
test
ds
jnp
pop
sbb
cmps
fisub
or
int
inc
ret
mov
push
outs
out
jo
inc
push
or
jns
or
ss
mov
stos
and
add
push
push
xchg
test
call
test
clc
sbb
ds
cmps
lods
jg
fwait
mov
loop
sbb
aad
mov
mov
iret
gs
mov
dec
xor
fadd
fild
mov
test
sub
adc
cld
pop
push
clc
add
sbb
(bad)
das
cdq
lahf
aam
nop
out
jb
test
dec
mov
push
sti
sbb
xor
inc
mov
adc
jno
faddp
and
bound
jmp
push
or
sar
shr
fidivr
call
enter
lahf
cmp
jl
aaa
add
xchg
add
jmp
cmps
add
mov
in
out
fst
fisubr
lods
pop
loop
inc
icebp
sub
clc
icebp
xchg
scas
inc
push
mov
pop
mov
cli
cmps
cmps
sub
stos
xchg
mov
add
dec
mov
enter
inc
cmp
inc
dec
ss
or
cmp
pop
push
and
add
ss
lods
aam
dec
ins
mov
pop
sub
arpl
aad
pushf
int
into
push
sub
xchg
test
dec
bound
or
jno
xlat
movs
repz
jnp
xor
add
or
and
mov
loope
inc
fisub
or
aam
dec
jno
xchg
inc
add
mov
adc
ja
sub
add
das
mov
rcl
sub
jl
push
xchg
mov
jge
inc
xchg
icebp
iret
addr16
(bad)
(bad)
jno
ins
out
mov
pop
xchg
lods
mov
add
iret
imul
dec
push
outs
lods
inc
add
jmp
mov
daa
mov
cli
frstor
inc
jg
lds
inc
clc
mov
and
sbb
les
xchg
mov
adc
stc
dec
int3
pop
shr
jge
push
push
jmp
movs
jle
outs
add
stos
sar
pop
and
pop
js
inc
vdivss
push
aam
sub
sbb
jmp
into
test
loopne
jl
arpl
aam
jo
inc
dec
outs
sbb
lods
jae
scas
aad
test
push
cmps
stos
push
or
imul
(bad)
push
xchg
mov
adc
(bad)
push
cmp
or
popa
or
mov
mov
mov
lds
pop
out
xchg
push
mul
push
pop
pop
fst
ror
stc
and
enter
and
(bad)
in
xor
and
mov
cwde
xor
push
stc
addr16
sub
xchg
pop
push
add
mov
retf
sbb
xchg
sub
(bad)
fcmovnu
(bad)
div
mov
jo
test
jp
mov
mov
movs
cmps
sub
xchg
xor
adc
jne
fild
and
addr16
fstp
pop
xor
pop
stc
jns
add
push
repnz
mov
outs
inc
xchg
mov
cmp
inc
loop
std
adc
add
sbb
pop
xchg
stos
int3
add
lds
jno
mov
out
mov
jb
es
mov
add
jmp
movs
imul
mov
aad
push
repz
idiv
data16
dec
mul
inc
sti
jge
mov
jp
out
leave
inc
xor
xor
repnz
mov
into
int3
jb
pop
aaa
jo
jmp
mov
ret
sub
pop
dec
xchg
dec
retf
pop
mov
dec
adc
inc
test
or
push
mov
(bad)
jns
(bad)
movs
das
pop
dec
retf
call
repz
cmps
inc
std
les
push
mul
je
mov
dec
add
dec
xchg
mov
jecxz
scas
sub
stos
imul
mov
xchg
fs
rcl
xor
inc
je
or
out
dec
mov
jno
scas
pusha
lds
mul
popa
fidiv
and
mov
sahf
xor
xchg
jbe
lds
bound
ret
xchg
not
rol
jl
test
jl
in
daa
js
xchg
cmp
mov
imul
iret
ss
jl
iret
jl
cdq
cmp
xchg
adc
push
bound
or
je
adc
cld
sbb
jecxz
call
jl
jg
imul
popf
jno
mov
mov
sbb
out
daa
and
mov
cmp
cmp
std
push
stos
xor
xchg
mov
icebp
mov
and
dec
xchg
dec
cmp
cdq
mov
inc
and
mov
pop
cmps
pop
sti
sub
data16
and
test
sub
or
(bad)
jae
mov
loop
jmp
les
cmp
pushf
sbb
xchg
movs
pop
dec
(bad)
xchg
add
adc
test
cmp
and
out
iret
mov
out
push
jmp
inc
jle
ficomp
dec
mov
dec
or
repz
add
int3
mov
inc
scas
lods
cdq
lds
inc
ja
mov
imul
pop
dec
scas
icebp
push
xor
sub
call
jge
xchg
pop
nop
cmp
add
scas
out
sbb
(bad)
xchg
imul
push
js
hlt
and
dec
xchg
hlt
mov
jae
jmp
inc
jmp
dec
xor
pop
iret
fimul
aad
jae
cdq
pushf
inc
fmul
sbb
shl
xchg
test
sbb
fwait
dec
lahf
mov
cmp
outs
dec
in
rcl
scas
and
mov
cmc
retf
aam
pop
adc
fimul
sbb
inc
jmp
popa
or
pop
push
push
loope
and
inc
and
enter
xor
sbb
jo
lea
sahf
dec
test
inc
pop
cwde
je
jns
test
mov
test
mov
stos
mov
mov
adc
jns
push
pop
jne
lock
nop
movs
fs
inc
in
push
pop
lds
jecxz
div
mov
cs
dec
mov
addr16
js
loopne
pusha
xchg
or
rcr
gs
or
jns
push
aad
iret
mov
jnp
push
(bad)
std
dec
ins
retf
imul
pop
xor
fiadd
stos
pop
push
or
(bad)
push
cmps
inc
jo
xlat
xor
mov
mov
dec
xchg
mov
mov
and
push
nop
mov
jne
js
ja
out
das
int3
mov
pop
fsubr
repnz
cmp
push
cmp
mov
dec
rol
fucompp
or
sahf
pop
pop
adc
fcmovnbe
adc
and
call
in
mov
dec
test
scas
push
mov
mov
inc
mov
dec
(bad)
dec
xchg
in
add
fisttp
and
push
adc
cmp
xor
in
movs
ja
mov
ret
les
jo
mov
into
xchg
lea
adc
or
out
mov
pop
cld
inc
add
enter
and
mov
push
xor
sub
mov
jecxz
sbb
imul
mov
cdq
js
add
ins
inc
aad
push
dec
test
mov
outs
mov
xchg
icebp
ret
sti
or
loope
adc
jp
xchg
aas
pushf
in
retf
mov
jle
hlt
or
xchg
push
popf
hlt
push
jnp
mov
cmp
out
ds
mov
push
jnp
mov
mov
int3
repz
pop
and
ret
dec
ja
jle
(bad)
mov
add
inc
inc
mov
or
dec
xor
ret
ret
inc
dec
imul
inc
push
xchg
mov
inc
or
cmps
jbe
cmp
aas
jae
jbe
sbb
mov
sub
sub
fcomp
icebp
pop
je
retf
and
pop
jge
cmc
adc
jae
adc
inc
out
sti
retf
imul
(bad)
xlat
repz
retf
lahf
push
int
aad
aaa
retf
shl
fist
inc
les
push
sub
adc
gs
pop
jbe
loopne
mov
adc
pusha
sub
aam
out
clc
lock
in
cmp
add
test
push
outs
push
ja
mov
add
aam
pop
mov
add
mov
pop
sub
push
fisubr
lods
adc
sub
in
enter
nop
jge
jmp
push
hlt
xor
inc
jae
lods
sbb
call
popf
inc
stos
cmc
lods
mov
(bad)
mov
outs
ror
jl
repnz
sbb
jg
(bad)
push
jp
sbb
or
movzx
imul
mov
push
cdq
xor
es
adc
nop
in
scas
inc
repz
dec
rcl
mov
pop
ins
add
fdivp
push
loopne
int
xchg
popf
in
pop
cmps
add
xor
push
sub
xchg
push
mov
lea
imul
inc
rol
mov
stos
aaa
fiadd
cmps
xor
inc
or
and
and
mov
pop
ss
ins
inc
arpl
sbb
pop
add
lahf
mov
in
xchg
dec
enter
or
jmp
retf
add
aam
out
(bad)
dec
aas
ja
sbb
das
in
add
(bad)
add
adc
bound
aam
fs
sub
shr
mov
(bad)
sti
inc
idiv
pop
dec
xor
xchg
sub
gs
repnz
add
add
iret
pop
mov
push
mov
pop
shl
das
loopne
mov
xchg
aam
mov
out
arpl
pop
push
test
adc
in
mov
jns
push
ds
loop
xchg
ror
sbb
mov
and
jae
and
dec
mov
mov
stos
test
and
jne
cmp
bound
xchg
xchg
test
xchg
add
(bad)
test
(bad)
out
cmp
adc
or
mov
pushf
fst
cdq
jnp
stos
xchg
retf
test
mov
in
cmp
xchg
cmp
cwde
pop
stos
sbb
xchg
jbe
sti
out
xchg
mov
xor
call
aad
movs
push
or
xchg
dec
shl
sahf
mov
pop
sahf
adc
popa
push
cmp
xchg
int
push
enter
mov
jo
cmc
hlt
arpl
loop
add
jl
imul
aaa
cld
push
retf
jecxz
push
ds
xchg
das
fadd
dec
xor
mov
xchg
sbb
pop
sub
xchg
pop
and
mov
inc
rol
add
adc
std
cmp
jg
and
shl
ret
aaa
ret
stos
pop
mov
add
loop
ficomp
xchg
or
lock
mov
pushf
aam
add
dec
mov
nop
shl
ss
or
movs
repz
pop
sbb
(bad)
cmp
cmps
rol
mov
pop
ins
stos
add
std
rcr
lock
and
nop
fst
ja
popf
cdq
loop
jns
push
sbb
pop
xor
jae
daa
pop
pop
push
sbb
or
xor
mov
aad
ins
pop
push
cmp
mov
(bad)
repz
stos
add
pop
test
inc
mov
jp
js
sub
inc
(bad)
popa
mov
stc
dec
lds
es
hlt
fs
mov
xchg
ja
and
aam
mov
jge
(bad)
out
push
shl
(bad)
pop
jge
test
jne
enter
adc
pop
ins
(bad)
mov
lds
pop
push
mov
cld
pushf
add
(bad)
cvtps2pi
xor
popf
popf
lahf
(bad)
fld
loop
pop
mov
enter
fadd
sbb
int
les
pusha
cdq
xor
inc
das
dec
pusha
vsubps
popa
jne
and
push
cdq
inc
lea
clc
ins
ins
dec
(bad)
ja
mov
push
scas
cmps
fistp
div
retf
in
add
test
push
xchg
loop
xchg
fdivr
push
pusha
push
int
add
cmp
cmp
lods
es
xchg
std
into
xchg
pop
adc
pushf
and
cmc
inc
mov
ss
(bad)
imul
dec
scas
push
(bad)
call
mov
(bad)
stos
adc
(bad)
mov
into
rcl
pop
mov
jge
repnz
cmps
jae
jle
xchg
or
sbb
dec
pop
lods
jg
adc
xchg
xchg
in
cmp
jp
mov
mov
ds
add
into
dec
lods
ja
aaa
cli
push
hlt
lods
ror
mov
adc
push
push
push
pop
(bad)
mov
or
and
pop
fiadd
arpl
pop
out
sub
sahf
or
mov
pop
sub
test
lahf
fnstcw
loop
add
or
or
leave
mov
jge
inc
loop
test
and
mov
out
outs
and
push
mov
sbb
out
add
pop
ds
lea
pop
rcl
jnp
push
push
cmp
ret
fwait
pop
xor
inc
jbe
fiadd
mov
or
xor
mov
add
cmp
push
jo
and
mov
or
inc
idiv
jmp
and
pop
inc
rol
inc
mov
inc
cmp
fincstp
xchg
fwait
cli
and
movs
sub
cmp
jb
cmp
mul
mov
mov
push
inc
mov
fsubr
data16
call
adc
or
aas
retf
add
cmp
dec
mov
xchg
pop
(bad)
mov
div
inc
or
iret
pop
mov
ret
lods
enter
cdq
stos
mov
ss
popa
push
ds
pop
sahf
push
sahf
mov
shl
jg
repnz
enter
cmp
dec
sbb
icebp
out
dec
push
fidivr
inc
xor
ja
pop
outs
jbe
inc
jbe
cdq
xchg
call
mov
mov
arpl
add
lahf
jns
jne
dec
push
or
inc
jbe
jae
lea
add
fdivr
shl
xor
xchg
(bad)
add
int
jne
xor
dec
push
adc
jno
jb
pusha
loop
cmp
lea
inc
and
js
cwde
iret
hlt
mov
ficomp
and
jb
data16
mov
lahf
shl
loop
pop
into
dec
push
cdq
or
mov
lock
inc
and
loopne
mov
movs
repnz
pop
xchg
inc
dec
cs
sub
xor
das
stos
adc
loop
pushf
int3
stos
add
(bad)
and
js
pop
xchg
push
gs
js
fwait
aad
ss
or
fsub
xchg
xchg
das
xchg
mov
sbb
mov
lahf
cmp
sti
cmp
inc
bound
jmp
aas
dec
ins
lea
cmp
or
xchg
shl
ror
hlt
imul
xchg
inc
pop
or
inc
retf
call
stos
dec
and
dec
xchg
(bad)
sub
add
push
cmp
int3
xchg
adc
int3
cmp
mov
jae
addr16
jb
or
bound
pop
and
fbstp
(bad)
mov
pop
mov
cmp
push
jmp
or
inc
push
add
pop
inc
push
jle
mov
les
retf
dec
sar
loopne
mov
pop
lock
dec
call
jmp
mov
movs
push
stc
fisub
fimul
dec
xchg
loope
push
ror
ja
xor
dec
fdiv
mov
outs
ror
int
repnz
outs
push
dec
cwde
(bad)
jne
aam
add
lods
mov
dec
add
and
add
mov
mov
outs
icebp
add
mov
cwde
enter
sar
pop
pop
fisttp
mov
in
sbb
adc
mov
push
retf
cmp
dec
add
movs
sub
xor
out
cmp
push
ss
or
pop
inc
int
cs
push
lahf
sahf
pop
xchg
test
pop
pusha
jbe
ficom
push
cmp
aad
loopne
xor
aaa
and
lods
nop
das
sbb
lock
test
inc
fstp
dec
enter
ret
in
or
and
mov
jg
in
xchg
and
into
sub
xor
call
pop
mul
inc
and
cmc
ret
lods
xor
call
daa
dec
xchg
lods
pop
outs
setl
jle
pop
jne
pop
aas
push
fld
bound
pop
push
leave
scas
jo
adc
cmc
outs
jne
mov
sub
mov
imul
jno
sahf
dec
ins
imul
fisub
outs
jns
popa
clc
dec
sub
es
pop
in
add
shl
sbb
fistp
pusha
mov
nop
movs
test
mov
repz
(bad)
test
cmp
in
dec
call
jnp
xor
pushf
push
adc
scas
dec
add
push
retf
mov
std
jmp
sub
leave
cs
xchg
leave
fcomp
jb
and
add
pop
cmp
out
pop
mov
sub
ja
call
mov
fs
rol
inc
test
out
rcr
repnz
sar
inc
bound
xchg
inc
jl
mov
retf
in
loopne
jae
psubq
rol
mov
pop
ds
bnd
call
jp
std
std
sti
cld
scas
mov
test
aam
xor
clc
lods
in
jle
mov
inc
out
and
pop
inc
sbb
sbb
sub
int3
pop
(bad)
ja
sti
mov
push
or
paddsb
sahf
push
js
jno
dec
ja
inc
jb
mov
pop
dec
pop
mov
scas
aam
call
mov
mov
mov
adc
into
jo
push
shl
in
arpl
in
shl
sbb
(bad)
jnp
mov
adc
sub
xchg
inc
lahf
(bad)
shl
sbb
and
and
stc
push
movs
inc
leave
ror
mov
setbe
ja
or
lea
pop
out
out
pop
push
mov
gs
cmp
pop
or
ret
std
mov
push
sub
retf
outs
cmp
outs
push
not
xchg
lods
lods
lock
xchg
es
mov
loope
add
out
in
lods
outs
jbe
or
or
cmp
lds
outs
mov
(bad)
outs
fdivr
scas
int
dec
mov
bt
dec
ret
leave
loopne
mov
jmp
adc
inc
push
push
sbb
imul
rep
inc
ss
stos
int3
daa
arpl
dec
imul
sbb
cmps
cmp
shr
pop
xor
jmp
pop
popf
call
hlt
rol
fmul
jns
jecxz
clc
mov
test
mov
js
add
xchg
movs
daa
loopne
or
or
push
popf
aam
js
fbstp
cld
movs
mov
push
mov
add
push
dec
cmp
pop
mov
ss
mov
lahf
stos
adc
xor
fcmovnbe
out
xchg
push
cli
mov
nop
call
mov
outs
jmp
push
dec
ret
push
(bad)
xor
int
loop
cld
into
loopne
icebp
popa
xchg
out
pop
(bad)
push
cmp
jg
push
cdq
stos
add
loopne
lahf
out
sbb
out
dec
lahf
mov
daa
daa
int3
and
dec
cmp
shr
mov
mov
ins
call
adc
or
mov
fsubr
xchg
pop
aad
fidiv
(bad)
xchg
sar
cmps
adc
add
mov
xor
out
mov
fsub
ret
aad
xchg
cmp
cmp
repnz
mov
push
adc
js
cmp
xchg
xor
mov
mov
ja
leave
shr
inc
jno
or
xchg
retf
in
sub
mov
and
dec
sbb
jb
cmps
adc
pop
jb
dec
push
push
push
loopne
xchg
aas
cmp
cmp
std
add
addr16
(bad)
xor
leave
sti
jb
les
xchg
inc
cli
pop
(bad)
(bad)
jl
movs
xor
and
jb
repnz
push
les
xchg
sbb
(bad)
sbb
add
hlt
stc
cmp
mov
bound
int
sbb
in
repz
mul
mov
ja
adc
push
(bad)
cdq
sbb
fnstsw
jno
aaa
lds
fild
xchg
test
mov
ja
cmp
(bad)
pop
scas
pop
das
mov
push
mov
sbb
cs
call
call
pop
aaa
(bad)
push
nop
mov
ins
ins
push
aaa
mov
ins
fnstsw
data16
xchg
sub
and
ins
sar
lods
dec
cmc
cmp
xchg
lods
adc
fmulp
mov
mov
sbb
mov
push
arpl
prefetch
jmp
mov
fwait
push
outs
and
adc
push
adc
loope
sar
sub
das
dec
imul
jl
or
or
xor
aaa
sub
loop
sub
mov
lahf
(bad)
sub
ret
cdq
jl
js
jmp
dec
sbb
cmps
add
(bad)
sub
pop
lahf
call
ret
adc
shr
dec
jnp
ret
mov
push
in
(bad)
cli
ret
dec
push
adc
aaa
int3
cmc
addr16
(bad)
out
fisttp
dec
xor
sbb
(bad)
cmp
out
pushf
adc
stc
icebp
shl
jp
jp
dec
leave
ror
push
scas
mov
cwde
das
pop
push
pop
xor
popa
mov
xlat
push
or
pop
(bad)
xor
adc
push
cdq
sub
pop
xchg
sub
js
imul
and
popa
push
mov
movs
and
sbb
dec
xchg
out
sub
fs
sti
outs
fidivr
pop
scas
out
mov
inc
xor
out
mov
cmp
imul
mov
jecxz
(bad)
fwait
mov
adc
sub
mov
sbb
fisub
inc
or
jnp
and
cdq
cmc
mov
and
call
push
cmp
add
xchg
and
mov
mov
xor
in
bnd
mov
mov
mov
sub
mov
xor
movs
pop
(bad)
sub
inc
push
mov
cmp
fsub
xchg
dec
loope
jne
mov
shl
adc
sbb
aas
fld
ins
mov
popf
jmp
call
cmps
bound
pop
retf
dec
inc
xchg
push
cld
and
in
test
push
or
xchg
les
xor
sar
div
arpl
in
pop
cld
jecxz
leave
cmp
mov
sbb
js
fild
mov
push
pusha
bound
xchg
push
sbb
stc
jnp
dec
enter
stc
lods
jae
daa
div
out
fist
cwde
loope
(bad)
fs
jo
into
mov
pop
and
test
mov
das
aaa
sub
jb
pop
mov
imul
pop
mov
mov
pop
int
fimul
fs
je
jle
lock
(bad)
ss
adc
es
imul
neg
lods
mov
scas
push
rcr
adc
fs
into
pop
xchg
es
fnsave
add
push
rol
push
bound
xchg
adc
(bad)
adc
jmp
or
xor
std
jae
nop
cmp
pop
inc
xor
sub
and
sub
test
dec
push
pop
pop
dec
inc
test
and
ficomp
sbb
stc
mov
or
fstp
inc
aas
arpl
outs
(bad)
das
cmp
cs
push
std
loope
jns
sub
or
and
test
jcxz
jmp
inc
jno
adc
das
mov
rol
fmul
adc
pusha
adc
mov
cmp
xchg
sub
inc
sahf
sahf
dec
es
loope
mov
lea
jo
retf
xchg
dec
std
int
popf
repnz
mov
jmp
dec
inc
pop
cmps
mov
inc
xor
je
sub
test
mov
mov
sub
data16
js
popf
int3
pusha
lds
ins
jb
shl
not
inc
inc
cmps
sub
mov
mov
dec
fbld
mov
mov
push
mov
je
xlat
loopne
call
outs
add
inc
js
vmaxpd
inc
push
shl
dec
fisttp
push
push
in
sbb
sar
pop
inc
movs
leave
pop
fwait
(bad)
cmp
sahf
sbb
pop
mov
jp
dec
jno
push
gs
nop
mov
and
xor
call
or
cmps
xor
or
mov
test
jae
(bad)
pop
popa
sub
addr16
mov
rcr
movs
aas
movs
in
and
and
retf
movs
adc
sub
push
das
cmps
push
ins
sbb
jmp
pop
mov
mov
outs
ds
mov
push
out
sbb
es
mov
adc
jnp
add
icebp
mov
jmp
std
xor
jne
mov
or
dec
inc
mov
and
dec
cmp
pop
xchg
mov
sub
cmp
dec
adc
or
mov
adc
aad
cdq
(bad)
pop
scas
pop
push
jbe
push
and
jne
data16
retf
mov
add
pop
(bad)
enter
sar
bound
sub
cmp
mov
ror
jmp
dec
sub
call
lahf
aaa
jp
push
imul
pop
mov
push
push
shr
pushf
fs
psrad
adc
fld
dec
sbb
inc
not
addr16
imul
adc
dec
icebp
or
push
icebp
stos
dec
outs
fs
cmp
dec
data16
rol
push
mov
mov
cmp
inc
lock
xor
or
fstp
mov
sbb
cdq
rcr
clc
cmps
pushf
dec
xchg
add
mov
fsub
loopne
inc
sub
push
mov
sahf
stc
mov
sbb
les
in
imul
outs
call
jbe
adc
inc
imul
lock
pusha
ja
fidiv
ins
cwde
test
push
pop
stos
sub
lods
push
in
pop
pause
jl
ins
cmp
int3
repz
cmps
mov
in
jo
mov
mov
mov
xor
aaa
scas
and
pop
(bad)
fdivr
cmp
call
mov
inc
mov
mov
ret
icebp
das
inc
ret
lock
or
enter
push
inc
stos
nop
adc
stos
adc
jbe
mov
add
pop
leave
adc
sbb
inc
in
push
stos
xchg
ret
sub
and
(bad)
clc
int3
inc
aaa
or
xchg
ss
inc
mov
popf
adc
xlat
outs
stc
fwait
add
cmc
push
test
inc
adc
loope
dec
and
retf
sub
test
inc
sbb
cmps
and
out
pop
scas
cmp
or
not
jmp
cli
test
sub
push
xor
mov
sahf
inc
dec
push
mov
aam
mov
in
sbb
xor
xchg
jmp
mov
retf
or
int3
xor
fs
mov
aaa
es
ror
xor
mov
stc
loope
jne
iret
mov
push
retf
or
retf
dec
fdiv
outs
jbe
loopne
sub
cmp
push
rcl
inc
test
xchg
or
int3
adc
loop
sub
sub
es
push
iret
sub
dec
mov
cmps
daa
cli
div
xchg
ins
stc
push
inc
mov
sbb
push
xchg
sti
ret
or
cmps
(bad)
mov
dec
(bad)
cmp
loop
cs
data16
sar
call
mov
dec
mov
je
pusha
cli
jecxz
popf
dec
push
xchg
jp
aaa
stc
jb
in
or
out
mov
add
not
ret
movs
sub
or
inc
xchg
adc
xchg
ds
retf
push
jl
mov
movs
cmp
mov
mov
ja
jmp
mov
test
mov
sbb
push
inc
sub
or
pop
pop
mov
nop
pop
call
enter
cs
jge
ja
fwait
or
xchg
stos
jne
push
(bad)
stos
out
pop
dec
loopne
push
jbe
sti
jne
xor
add
jmp
inc
pop
push
out
cmp
(bad)
mov
xchg
xchg
pop
push
ja
mov
out
adc
psraw
not
out
and
call
xchg
cld
mov
inc
cmove
aam
adc
lea
xor
sbb
lock
cmp
iret
mov
push
in
inc
sar
arpl
cmp
test
addr16
aas
rcr
iret
jnp
fcos
jne
and
daa
pop
cdq
hlt
mov
xchg
imul
(bad)
xor
mov
fwait
ss
adc
mov
iret
rcr
ins
xchg
xchg
scas
inc
push
(bad)
lock
xor
pop
pusha
add
es
xor
scas
aam
fnstenv
jns
xchg
out
cmp
adc
cmp
jae
fld
imul
call
bound
cmp
push
sub
add
or
xor
lock
jp
fild
inc
jmp
shl
push
dec
mov
dec
fistp
lods
clc
dec
dec
rcr
sub
mov
ds
pop
(bad)
and
lock
and
and
ret
jbe
xchg
in
sub
cmp
push
out
jb
mov
scas
mov
cdq
icebp
jle
std
popa
or
adc
cmps
dec
cmp
sti
inc
sbb
(bad)
pop
cdq
push
xor
loop
adc
lods
inc
dec
ror
movs
mov
(bad)
inc
popf
les
stc
xchg
adc
bound
clc
pusha
mov
movs
jge
andnps
rol
push
pushf
and
sbb
addr16
adc
inc
mov
dec
lds
sub
xor
sbb
inc
lahf
int3
jns
je
push
jmp
hlt
sub
sbb
cmp
inc
lods
shl
cmc
cmc
xchg
aaa
(bad)
cmps
or
jecxz
mov
retf
mov
and
push
les
jge
ja
fcomp
xchg
aam
movs
pushf
jo
je
lea
xchg
test
and
mov
popf
out
arpl
repnz
in
pop
test
out
dec
jmp
stc
sub
jno
adc
fild
mov
sahf
adc
xchg
xchg
sti
sahf
mov
repz
add
xabort
repnz
xor
mov
pop
(bad)
and
add
pop
or
jmp
test
clc
cmp
ret
addr16
mov
and
mov
sub
outs
ror
jnp
mov
inc
in
mul
xchg
push
fidiv
and
clc
in
retf
or
cs
fst
mov
cmps
cmps
xor
pop
add
mov
retf
push
repz
sar
fldenv
ds
jle
add
addr16
mov
jge
in
nop
sar
dec
retf
pushf
sbb
mov
adc
or
outs
in
xchg
pop
in
js
mov
ss
pop
add
lods
jb
or
push
add
xchg
inc
add
retf
jmp
cs
dec
push
rcl
or
mov
mov
or
jecxz
push
xchg
arpl
cwde
or
push
in
hlt
scas
mov
es
xchg
mov
adc
xchg
ins
arpl
icebp
mov
ret
(bad)
stos
(bad)
pop
sti
mov
imul
xchg
dec
pop
std
das
jge
and
out
xchg
fucom
mov
xor
or
push
leave
fwait
daa
sub
xchg
mov
hlt
movs
movs
or
out
xchg
lock
aas
pop
mov
fild
lods
mov
rcr
add
stos
nop
sub
(bad)
sub
test
repnz
into
xchg
mov
je
scas
stos
mov
and
repz
retf
lds
jo
and
data16
sub
mov
sar
iret
mov
inc
cli
mov
shr
pop
cld
les
adc
xor
sbb
pop
xchg
aaa
ss
and
push
fimul
ja
ss
adc
fsub
imul
sub
test
pop
inc
push
(bad)
cld
mov
loopne
cmp
dec
adc
sbb
dec
xchg
rol
dec
sub
dec
aas
in
xchg
or
shl
test
pop
int
dec
popf
loop
jecxz
ja
mov
push
sbb
mov
jno
cmp
jmp
cmp
std
(bad)
jg
mov
fstp
jl
test
jnp
sbb
jmp
mov
mov
(bad)
lea
(bad)
cmp
in
lds
sti
retf
jmp
xchg
lods
jbe
push
(bad)
jno
icebp
adc
(bad)
repz
inc
xor
ret
xchg
icebp
lods
lock
inc
mov
jge
mov
lods
pop
popf
ja
(bad)
(bad)
stos
loop
xor
jle
sub
(bad)
jg
jne
sahf
cmp
mov
ror
and
int3
mov
aad
out
inc
ficom
aad
and
shl
inc
push
pop
cdq
dec
push
lds
adc
or
rol
or
push
jle
in
sub
pop
lahf
adc
daa
aaa
sub
daa
test
inc
frstor
mov
push
fisttp
popa
out
ret
jmp
(bad)
mov
push
movs
int3
or
pop
xchg
xor
test
test
add
cmps
push
retf
mov
out
push
iret
xchg
(bad)
in
in
xor
mov
push
out
int3
jg
(bad)
cmps
in
mov
sbb
icebp
add
icebp
inc
pop
(bad)
and
outs
(bad)
mov
sbb
repz
push
cwde
sar
fwait
sti
(bad)
into
xchg
in
cmp
or
into
repz
mov
jmp
mov
gs
and
sar
lds
lods
fist
dec
mov
jmp
jo
mov
xlat
mov
mov
stos
out
push
imul
mov
jmp
push
stos
sub
xchg
add
sub
or
inc
(bad)
test
xchg
imul
xor
dec
cld
(bad)
cmp
and
jae
mov
pushf
dec
jo
aas
fmul
or
mov
retf
xchg
ror
ins
and
add
jo
cmp
push
cmps
xor
paddw
outs
dec
test
xchg
sbb
mov
adc
call
ret
add
xchg
in
inc
sub
in
sbb
mov
aad
jns
jle
cmp
imul
mov
push
ss
push
add
aam
pop
pushf
fld
or
ins
sub
adc
popa
nop
xchg
cmp
test
mov
push
add
ins
mov
jmp
in
pop
dec
loop
sbb
pop
push
pop
sbb
fistp
xor
(bad)
adc
les
mov
mov
jae
pop
adc
or
push
inc
mul
clc
sub
xchg
mov
jno
lods
mov
gs
retf
pop
push
leave
iret
mov
int3
mov
push
aas
push
ds
inc
xor
and
lea
mov
stos
and
fsub
cmps
daa
xchg
int
adc
jg
int3
xchg
lock
sub
mov
imul
mov
das
iret
arpl
pushf
loope
cwde
mov
shl
ror
push
in
jle
jge
fisubr
pop
inc
mov
mov
or
push
sub
fisttp
es
and
jne
mov
lds
dec
mov
mov
shl
mov
xor
jae
das
inc
mov
je
lods
int
mov
xor
call
mov
pop
icebp
dec
imul
cli
rcr
shl
loop
test
(bad)
aam
daa
in
mov
call
xor
jecxz
mov
cmp
push
inc
loopne
cmp
cmp
mov
push
cmps
mov
sbb
mov
scas
push
mov
adc
mov
outs
xchg
(bad)
lock
jnp
outs
(bad)
cmp
cld
sti
imul
add
cs
pop
ficom
or
arpl
jg
int3
cmp
or
cmp
xchg
push
mov
pop
add
rcr
push
and
fisub
outs
push
daa
jle
xor
dec
dec
jae
cld
add
xchg
xchg
jg
adc
out
mov
icebp
(bad)
repz
add
mov
xchg
mov
loop
mov
mov
xchg
ret
popf
aam
add
cmp
popf
or
jno
pop
dec
mov
mov
scas
sub
jmp
xchg
fisubr
xchg
(bad)
loopne
test
mov
dec
dec
leave
lods
fimul
fstp
sub
mov
iret
inc
ss
mov
pop
mov
js
es
outs
test
push
dec
xor
xchg
or
xchg
imul
das
cmp
xchg
sti
stos
clc
jb
dec
movs
push
in
jbe
cdq
add
adc
mov
fnstsw
jnp
jne
xor
push
lods
or
xor
xchg
mov
xchg
xchg
jecxz
lods
xlat
sub
inc
int
jo
daa
pushf
jbe
jecxz
jns
cld
mov
cmp
data16
jo
arpl
fld
pop
and
mov
sbb
push
addr16
stos
sbb
jmp
sub
add
adc
aas
mov
(bad)
pusha
push
mov
pop
mov
xor
add
sub
xchg
pushf
mul
scas
pusha
push
cmp
mov
retf
jge
inc
scas
and
push
pop
cmp
pop
xchg
bound
dec
ins
je
data16
inc
popf
(bad)
out
nop
cmp
leave
ins
xchg
hlt
push
xor
std
nop
push
in
and
retf
mov
dec
pushf
xor
xor
or
mov
mov
es
scas
mov
sub
push
sub
jle
and
cmps
sub
cmp
xlat
jbe
pop
push
push
loope
inc
imul
scas
xor
bnd
jl
popa
inc
nop
mov
cli
mov
jb
mov
xor
add
xchg
(bad)
mov
cmps
mov
push
mov
pop
push
shl
pop
cli
sbb
push
pop
fs
jmp
or
cli
call
pop
and
stos
inc
out
dec
sti
call
mov
pusha
clc
lds
push
cli
std
fwait
jle
test
mov
cld
inc
push
jmp
outs
fistp
out
test
(bad)
jns
jle
pop
xor
mov
std
add
loop
mov
jbe
bound
and
mov
pusha
dec
xor
outs
ret
or
scas
jmp
sub
imul
fwait
cmp
and
iret
cdq
push
test
(bad)
test
mov
dec
cmc
or
inc
into
push
enter
pop
ds
dec
and
or
jo
push
cdq
and
pop
mul
ror
repz
xchg
and
xor
sub
mov
leave
fwait
(bad)
and
lahf
xchg
shl
push
test
pop
mov
in
inc
adc
shl
aaa
dec
push
in
push
cmp
ja
loop
popf
inc
dec
cmps
(bad)
neg
cli
or
xchg
imul
into
out
dec
pop
retf
jge
out
aad
inc
push
xchg
pop
mov
(bad)
cwde
push
sbb
cs
pop
sub
data16
lock
icebp
inc
mov
sar
xchg
mov
mov
mov
sti
jge
ds
pop
dec
div
dec
mov
pop
inc
kortestw
aaa
xchg
mov
mov
inc
and
fldenv
push
movs
push
pop
and
test
out
sbb
clc
pop
call
cmp
mov
popf
mov
out
mov
sub
in
jae
aam
inc
mov
sbb
mov
mov
push
jmp
inc
push
outs
ins
jmp
adc
fwait
sub
jecxz
and
mov
xchg
cmp
jb
outs
push
and
mov
xchg
imul
je
setp
pop
add
daa
pop
xchg
pop
rol
adc
adc
hlt
arpl
call
dec
xchg
aaa
data16
adc
and
xchg
push
adc
mov
shl
ror
popf
mov
and
popa
rcr
in
pusha
cmp
push
mov
and
adc
in
or
stos
mov
lock
push
xchg
(bad)
cmp
jmp
std
or
pop
test
pop
fisttp
xchg
and
repz
or
add
ss
jno
ds
popa
pop
sub
sbb
pop
push
clc
lahf
stos
(bad)
push
add
jg
enter
jle
inc
mov
hlt
arpl
push
test
sub
cli
cld
retf
in
xchg
or
xor
enter
icebp
xor
xchg
jbe
std
or
ins
mov
adc
push
jp
mov
cwde
push
jg
loop
stc
sbb
std
shr
jmp
ja
cmps
nop
cs
or
sbb
cmp
cmps
call
dec
iret
popf
lahf
in
pop
int
std
pop
add
iret
add
adc
not
(bad)
jbe
jecxz
repz
jmp
jle
jo
sub
jle
push
sti
sti
dec
push
test
je
dec
xchg
cmc
adc
sub
inc
dec
rcl
sbb
mov
mov
pop
cmps
fst
sbb
aaa
fdivr
in
mov
das
or
inc
inc
in
test
dec
mov
push
clc
call
push
cs
in
xchg
push
cmp
and
cmp
push
pop
sub
pop
jcxz
mov
inc
test
jg
iret
fnstenv
xchg
cmp
mov
ja
cs
mov
jmp
push
mov
jg
clc
jns
mov
or
jecxz
les
and
bound
sub
mov
jns
rcl
sbb
add
retf
idiv
mov
(bad)
xchg
ds
add
fwait
add
jne
mov
jmp
sbb
jno
rol
retf
movs
xchg
std
add
aad
sar
mov
mov
pushf
pushf
ret
sahf
icebp
push
and
or
push
ja
test
sub
lahf
jbe
cli
push
bnd
fwait
mov
scas
cli
add
retf
(bad)
jl
(bad)
jge
pushf
sub
lea
or
add
test
mov
aas
out
div
push
push
push
stc
stos
shl
pop
mov
(bad)
push
push
cmps
cmp
popf
repz
or
psubd
in
mov
fucomip
sbb
(bad)
push
inc
cmp
and
arpl
pop
fwait
inc
mov
pop
pop
pop
outs
inc
out
inc
jns
dec
adc
mov
and
hlt
ret
mov
cmp
xchg
and
push
dec
enter
lods
jmp
inc
(bad)
in
sub
inc
sbb
pop
mov
mov
mov
je
popf
outs
adc
mov
sbb
jb
cmp
mov
mov
cmp
cmp
push
pop
(bad)
jle
jmp
mov
pop
stos
xchg
jmp
cmp
sub
dec
call
fld
rol
or
and
cmp
out
int3
mov
addr16
shr
out
rol
mov
dec
fisttp
mov
stos
idiv
pop
pushf
into
pusha
mov
jae
shr
aas
ins
arpl
inc
stos
fbstp
add
xchg
add
pushf
dec
push
fdiv
stc
mov
in
pmulhw
out
inc
adc
shr
popf
jmp
adc
mov
dec
shr
getsec
pop
dec
mov
sbb
mov
push
cmp
(bad)
mov
scas
mov
enter
pop
push
jo
jae
mov
in
jne
cmps
gs
sub
push
js
push
pushf
add
mov
inc
scas
cmp
sub
adc
je
sbb
sub
or
adc
pop
cmp
xchg
xor
stos
mov
(bad)
fwait
shr
push
aaa
xor
dec
mov
test
icebp
jae
xor
mov
pushf
adc
jne
popf
jge
sti
pushf
or
scas
mov
adc
pop
mov
jl
pop
pop
jp
fild
xor
jecxz
fild
xchg
adc
fiadd
rol
push
adc
(bad)
xor
xchg
arpl
mov
mov
mov
into
aam
imul
or
jns
sbb
in
in
fwait
mov
call
fist
jns
test
inc
adc
jg
sub
je
in
fs
push
jo
inc
jle
xchg
mov
in
mov
pop
add
lods
dec
push
xor
cmp
lds
sbb
push
lock
in
data16
adc
pop
int
dec
enter
jmp
add
frstor
jmp
dec
mov
or
stos
xchg
pop
pop
cld
adc
jmp
sub
jmp
xor
xor
dec
pop
and
add
dec
jecxz
push
mov
mov
xchg
clc
and
add
aas
movs
jnp
(bad)
stc
mov
adc
(bad)
cli
into
test
enter
xor
and
dec
adc
xchg
out
nop
add
fwait
and
fidiv
dec
cmp
mov
mov
push
cmp
in
ret
iret
push
ins
cmc
mov
dec
add
or
je
pop
(bad)
or
jbe
dec
icebp
cli
or
out
dec
inc
jo
pop
cmp
push
sub
mov
dec
and
sub
xor
xchg
sub
xchg
xor
scas
mov
loopne
pop
lds
sar
add
nop
xchg
or
cmp
and
pop
test
popf
jle
mov
fsubr
sbb
and
stos
rcl
cmp
or
cs
cmps
lock
inc
and
sub
hlt
push
jae
mov
xchg
dec
cmps
lods
in
jnp
out
pop
or
sbb
sbb
movs
xchg
fistp
inc
xchg
push
mov
ja
mov
arpl
xor
arpl
jp
fisttp
aam
and
or
outs
jg
ins
mov
mov
xor
loope
pop
push
data16
sti
mov
in
ds
sub
adc
(bad)
mov
iret
(bad)
push
arpl
pop
mov
push
mov
sti
inc
xchg
frstor
pop
fsub
int3
outs
cwde
push
rcpps
mov
fcmovne
mov
pop
fsubr
cmp
test
je
pop
lods
pop
mov
sbb
sbb
fisub
les
ds
cs
push
and
(bad)
mov
sub
repz
push
test
cmp
lods
xor
mov
adc
shl
inc
scas
jge
jle
pop
jnp
out
repz
jnp
repz
in
(bad)
adc
push
icebp
or
ficomp
sbb
xchg
xchg
(bad)
cmps
mov
(bad)
sbb
stos
iret
fwait
mov
push
add
mov
sbb
or
daa
mov
js
inc
mov
adc
fbstp
xor
scas
lods
loope
scas
fwait
sbb
add
xchg
repz
pop
and
add
pop
out
adc
jg
jp
inc
mov
xlat
adc
inc
out
fld
fisttp
mov
jmp
test
sar
dec
xchg
xor
dec
sub
xchg
dec
inc
lds
mov
sti
sbb
jmp
pop
push
icebp
push
and
fstp
je
push
retf
lods
sbb
jp
in
adc
ja
add
movs
arpl
mov
dec
pop
xor
sbb
ja
fisub
push
mov
cs
add
push
xchg
and
inc
ret
arpl
jns
ds
sub
stos
jge
out
jo
mov
xchg
sbb
push
pop
ja
nop
scas
xor
mov
test
mov
ror
lahf
push
mov
mov
aas
cli
mov
push
call
test
adc
shl
(bad)
addr16
pop
out
(bad)
in
fld
aam
pop
mov
loop
push
nop
mov
xchg
iret
pop
mov
sub
movs
sub
adc
in
cs
loope
cs
in
inc
push
in
dec
dec
jb
cmp
sbb
out
sbb
aad
ja
jmp
pop
cwde
and
push
ja
push
in
xor
loopne
adc
(bad)
xchg
dec
dec
in
fld
mov
mov
arpl
push
dec
push
inc
xor
lods
scas
cmp
pop
inc
int3
shl
cli
data16
ins
test
push
ss
or
or
sbb
dec
dec
and
aam
out
(bad)
mov
out
pop
es
dec
mov
mov
sbb
enter
mov
dec
cli
adc
xchg
hlt
std
jbe
sub
out
aam
cli
mov
(bad)
pop
cdq
int3
ficomp
push
or
cmc
add
pop
jg
int3
mov
xchg
(bad)
das
rol
add
jl
rcr
dec
mov
arpl
adc
sbb
sub
mov
jp
xor
aaa
add
xchg
fistp
jae
test
inc
sub
or
pop
out
xchg
sbb
jae
xor
cdq
lock
mov
repnz
ficom
inc
cmp
sub
pop
inc
hlt
mov
stos
push
in
test
test
test
mov
push
sub
and
daa
les
jo
ret
enter
jg
xchg
add
push
inc
movs
mov
lds
cmp
jp
jae
cdq
dec
cmp
ins
add
arpl
and
mov
inc
jo
mov
and
jg
lea
push
inc
out
ins
jno
sbb
aas
das
add
jo
and
push
adc
xlat
clc
mov
div
inc
jb
les
xchg
xor
sbb
adc
sub
int3
inc
je
fscale
ins
movs
or
addr16
mov
ret
pop
loop
ins
(bad)
mov
mov
mov
sbb
dec
popa
push
call
(bad)
inc
and
inc
jmp
mov
xor
xor
in
adc
jno
ret
cli
sahf
(bad)
je
jbe
mov
jae
test
mov
add
loope
cwde
clc
mov
xchg
test
test
es
cwde
pop
sahf
sbb
dec
mul
jne
dec
or
jo
jl
pop
sbb
mov
hlt
mov
mov
(bad)
push
pop
adc
shl
mov
xor
mov
ins
es
push
push
js
out
xchg
push
and
mov
ret
mov
jmp
lods
push
jns
sbb
daa
lods
pop
lods
cwde
cld
jmp
or
xlat
loopne
loop
mov
sub
das
jns
cdq
fdivr
cmps
xlat
ss
ret
dec
fdecstp
pop
mov
sbb
cmp
jge
shl
sar
jmp
stos
xchg
(bad)
in
xchg
jmp
mov
test
repnz
fstp
jo
stc
test
mov
stc
rcl
and
cmps
mov
int
sbb
or
movs
and
lahf
mov
mov
dec
jp
sub
movs
std
mov
sbb
rcl
xor
inc
das
mov
call
fwait
inc
cmp
xor
mov
sub
out
mov
sbb
arpl
mov
addr16
cmp
push
sbb
xchg
call
call
je
in
dec
fistp
ror
mov
call
pop
mov
loopne
or
sub
(bad)
or
loop
loope
and
fst
pop
stos
(bad)
or
mov
sahf
ror
or
jecxz
in
adc
in
jno
cld
imul
aam
inc
fld
gs
(bad)
loopne
push
adc
stc
jle
out
dec
(bad)
loope
dec
xchg
ror
mov
push
mul
daa
int3
into
inc
jle
hlt
sub
fcmovb
xor
lods
jo
loope
push
mov
dec
retf
push
mov
xchg
inc
ja
aas
sub
mov
pop
shl
jae
clc
call
into
or
add
(bad)
jmp
inc
es
in
sub
cmc
in
and
mov
or
add
push
mov
mov
imul
sub
aas
in
inc
scas
(bad)
aas
dec
outs
or
jne
data16
gs
sti
test
xchg
sub
push
fild
xor
dec
scas
mov
stc
lds
pop
loopne
mov
fmul
test
mov
xchg
hlt
test
iret
or
rol
and
mov
pop
jno
push
xchg
pop
je
or
repz
and
adc
mov
cmp
xor
fucomp
addr16
imul
mov
jmp
not
sbb
adc
mov
stos
pop
ret
mov
add
ror
push
mov
daa
or
mov
mov
jbe
ins
push
inc
scas
ror
mov
sar
mov
(bad)
pop
xor
and
jb
popa
je
sub
jecxz
or
(bad)
and
xor
fldenv
por
push
push
test
das
adc
outs
mul
pop
int3
scas
mov
mov
adc
xor
(bad)
sbb
aaa
inc
les
xchg
xchg
mov
pop
push
sbb
ret
shl
and
dec
mov
(bad)
jge
mov
or
fcomi
sbb
out
mov
cmp
in
popa
nop
int3
ins
xchg
xchg
xor
addr16
(bad)
out
fimul
movs
xchg
inc
mov
je
and
dec
jecxz
add
fisttp
mov
mov
out
inc
push
loopne
cmp
xor
test
js
es
fld
pop
ret
fadd
ins
sbb
in
mul
jnp
or
mov
call
fnop
les
push
xor
test
mov
add
cs
mov
retf
add
dec
xchg
adc
loop
scas
or
bound
mov
mov
xchg
mov
ds
nop
mov
or
xchg
and
mov
push
movs
pop
loopne
mov
loopne
in
sub
test
in
pop
fild
ror
ins
outs
mov
(bad)
dec
(bad)
int3
cmp
mov
or
or
ficom
inc
aaa
jle
adc
or
mov
dec
mul
and
jl
mov
dec
jne
ficom
xor
and
fstp
ss
ins
add
jle
hlt
mul
enter
sysret
cmc
sbb
push
mov
xor
or
shl
mov
xlat
cdq
cmp
shl
sub
loop
cmp
scas
jno
jns
test
mov
push
mov
cmp
mov
lods
das
add
scas
adc
(bad)
leave
xor
test
(bad)
mov
(bad)
lahf
cld
pusha
cld
cmp
sub
mov
pop
jbe
xchg
pop
xchg
lea
jecxz
push
ror
xchg
imul
push
cmps
sub
pop
scas
ret
pop
enter
std
jne
int
jmp
pop
jecxz
push
clc
and
inc
dec
jnp
aaa
xchg
inc
bound
jb
inc
lds
pop
push
enter
or
ins
into
mov
sbb
iret
ins
out
push
xchg
pop
jae
jnp
mov
push
into
out
mov
and
int3
and
cmp
ss
push
xor
in
das
in
xor
jg
imul
loopne
hlt
add
add
jmp
sbb
inc
lock
xchg
mov
or
(bad)
jo
mov
sbb
cmp
and
mov
mov
fsubp
clc
ds
loope
cmp
xor
xlat
sbb
scas
mov
mov
adc
shr
dec
sahf
test
inc
ss
sub
dec
add
rcl
xchg
addr16
sub
push
push
popf
inc
pop
add
jg
(bad)
pop
hlt
popf
mov
out
mov
mov
ret
mov
mov
mov
(bad)
scas
out
out
pop
test
mov
lock
fisubr
(bad)
int3
shl
push
mov
mov
inc
(bad)
push
push
sub
xchg
pop
stc
adc
fsub
pushf
pop
scas
sub
popa
or
arpl
mov
push
inc
add
ror
cmps
and
jmp
les
ins
adc
mov
inc
mov
into
movs
sub
cmp
push
sub
int3
cmp
lea
repnz
into
imul
clc
enter
jb
xor
xchg
add
dec
push
xor
add
mov
and
cmp
sbb
pop
clc
imul
jmp
and
jg
adc
jl
fld
pop
push
ret
idiv
sub
outs
lea
ficom
jmp
dec
cli
mov
test
sbb
xchg
jne
sbb
push
es
test
cli
outs
and
sub
inc
out
(bad)
mov
ror
jle
push
sbb
sbb
mov
mov
ins
lock
add
and
arpl
mov
jl
mov
jns
add
mov
out
sub
sbb
(bad)
std
sbb
or
pusha
icebp
adc
push
ret
jnp
ret
out
call
(bad)
adc
cmp
js
scas
push
nop
jo
inc
cmps
lahf
nop
or
popf
and
jge
sub
or
cmp
frstor
add
mov
push
(bad)
xchg
(bad)
out
xchg
dec
mov
jecxz
iret
fnstsw
scas
scas
xor
rol
jg
pop
push
test
xor
xor
mov
add
cmp
dec
ret
clc
test
jecxz
(bad)
fidiv
fadd
adc
cmovle
cdq
popa
(bad)
ins
adc
in
jle
popf
fnsave
mov
add
xor
mov
shl
cwde
mov
push
dec
pop
ds
mov
push
movs
add
test
cli
aas
popf
inc
bound
sbb
pop
rol
xchg
shr
sti
jle
add
fwait
jge
mov
sahf
shl
cmp
stos
popa
cwde
cwde
test
movs
inc
les
push
fs
cs
mov
inc
icebp
leave
xchg
cmp
adc
sbb
cmp
inc
mov
xor
icebp
bound
cmc
push
jne
cmp
jnp
jnp
xchg
(bad)
add
xchg
ret
rol
mov
mov
xchg
jmp
pop
add
mov
mov
icebp
fwait
addr16
xor
cs
xchg
mov
adc
(bad)
jae
fisubr
cli
push
mov
scas
popf
in
int
je
inc
std
int3
xor
int
adc
out
pop
mov
iret
add
int
ret
lock
push
ds
inc
push
cmp
inc
pop
push
fiadd
mov
cmp
dec
or
(bad)
adc
popf
mov
in
xor
lds
int
xchg
aad
test
cmp
xor
call
sti
fild
rcr
ja
sub
mov
jmp
jne
bound
and
inc
pop
xor
adc
pop
std
pop
leave
pop
inc
sub
ins
or
jne
addr16
nop
fld
leave
(bad)
ja
or
add
mov
push
sbb
jns
mov
push
xor
jnp
movs
inc
pop
and
cmp
les
xchg
out
shl
and
loop
sub
daa
loop
adc
cmp
sub
sti
out
ror
mov
push
mov
and
movs
out
call
retf
push
push
fadd
cli
xor
jl
(bad)
add
ins
sbb
fimul
sub
jae
cmps
or
fimul
retf
inc
push
stc
movs
or
sub
div
(bad)
xchg
push
xor
adc
lods
jl
scas
bnd
xchg
jecxz
out
loop
mov
sahf
xchg
das
xchg
inc
mov
ffree
mov
dec
add
jge
and
sub
jecxz
inc
fxch
xchg
fadd
call
movs
jmp
inc
ins
mov
mov
imul
mov
movs
loope
or
cmc
dec
and
cmps
adc
lea
ja
ret
sub
jmp
in
pop
mov
mov
pop
pop
cmp
and
lds
mov
pop
mov
popa
not
dec
pop
and
xor
call
push
outs
rcr
sub
sub
add
mov
hlt
rep
sbb
cdq
gs
fld
lods
out
mov
(bad)
icebp
dec
sub
or
daa
ins
lahf
pop
dec
push
jmp
and
mov
jae
movs
cmp
into
push
std
loopne
sti
(bad)
lea
mov
imul
imul
sub
inc
data16
xchg
jl
jb
push
pop
inc
in
sahf
loope
inc
repz
mov
cdq
sub
pop
push
mov
inc
ds
(bad)
ret
add
push
and
ja
cli
in
(bad)
adc
jnp
mov
push
call
js
cli
xor
cmp
push
push
ins
fsub
jne
je
out
or
in
pop
dec
fisttp
imul
(bad)
out
pushf
js
cmp
fdiv
jp
and
imul
pop
xor
test
test
jnp
mov
lock
mov
loop
sub
sahf
shl
stc
cwde
pop
stc
cmp
cmps
dec
pop
mov
icebp
dec
inc
mov
movs
and
pop
test
mov
cs
mov
pop
sti
nop
xor
mov
or
inc
cli
repz
adc
mov
int
add
pop
inc
mov
ror
adc
inc
push
cld
jle
jno
mov
inc
mov
adc
mov
and
push
shr
xor
sub
(bad)
retf
and
sub
out
adc
push
push
jmp
pop
mov
jnp
or
(bad)
xchg
xor
mov
test
adc
call
fnstsw
and
pop
xor
dec
pop
loop
push
les
stos
adc
jbe
rsm
and
ins
xlat
fwait
pop
retf
xor
aaa
shr
sbb
mov
and
mov
(bad)
mov
inc
arpl
cmp
call
loop
out
cld
inc
inc
pop
dec
mov
scas
out
sub
fstp
cwde
scas
das
imul
push
pop
jmp
aaa
daa
sbb
aad
pushf
cli
cld
test
or
push
(bad)
and
scas
jo
jae
or
popa
mov
mov
cmp
repz
inc
fcomp
mov
or
popa
lods
fldenv
dec
jns
push
sub
add
stos
int3
pop
ret
in
test
sbb
sub
je
test
sub
test
into
rcl
jbe
retf
popf
mov
jmp
or
in
adc
fwait
jle
int3
addr16
fnstsw
es
aas
or
ja
xor
int
(bad)
fisttp
scas
push
pushf
adc
cmp
cwde
or
mov
nop
cmps
xor
add
js
int3
and
mov
sub
in
in
lock
jo
adc
sub
pop
out
rep
mov
nop
jg
sub
or
xor
push
inc
aas
adc
out
or
or
leave
das
out
cmc
mov
das
in
add
dec
(bad)
popa
mov
daa
jle
add
push
cmp
pop
adc
(bad)
xchg
xor
imul
js
in
test
jmp
mov
(bad)
dec
jle
cmc
dec
shl
xor
add
sub
test
and
icebp
nop
ins
shr
inc
repnz
je
lods
cdq
mov
inc
sub
cld
stc
or
cmp
loope
mul
(bad)
cmps
or
adc
(bad)
mov
test
mov
inc
das
cmp
push
sbb
fst
mov
pop
dec
loop
lea
(bad)
test
adc
mov
fnsave
mov
mov
or
push
xchg
std
mov
add
lock
leave
pop
and
jno
(bad)
icebp
jp
push
popa
sub
xchg
nop
add
scas
cmp
xchg
loopne
js
push
call
in
aam
in
dec
or
stos
cmps
(bad)
lock
bswap
and
ja
pusha
mov
push
and
sbb
jo
(bad)
mov
jmp
les
int
fistp
mov
cmp
retf
add
xor
movups
sub
popf
push
fistp
cmps
(bad)
or
mov
dec
sub
cmp
mov
pop
js
(bad)
jbe
out
test
bound
cli
or
shl
popf
cmc
adc
gs
ret
mov
jmp
mov
mov
ret
sbb
rol
adc
xor
push
stos
sub
lahf
mov
jno
push
mov
stos
mov
ds
pop
push
mov
fst
inc
cmp
out
or
mov
out
jbe
out
ja
push
les
and
iret
push
mov
mov
outs
jmp
and
mov
test
bound
ins
xchg
ror
bound
sub
data16
fs
outs
ret
add
or
popf
adc
mov
out
cs
mov
int3
scas
fwait
dec
test
neg
xor
dec
add
xchg
fild
sub
mov
dec
call
pushf
mov
adc
enter
iret
jl
push
xchg
dec
jmp
adc
pop
dec
loop
or
fnstcw
jbe
mov
ja
in
dec
lea
pusha
xor
pop
test
cmps
pop
in
mov
dec
add
or
imul
jns
sbb
mov
(bad)
sub
aaa
lock
je
in
or
push
enter
ja
and
lea
fisubr
inc
imul
jge
imul
lods
mov
je
mov
leave
clc
and
sub
es
mov
std
sub
hlt
push
je
stos
test
adc
xchg
or
xchg
or
popf
inc
adc
push
mov
sub
mov
outs
and
push
sbb
push
lods
aad
ret
jge
mov
jbe
leave
adc
(bad)
stc
sub
ja
lahf
and
push
sub
pop
out
aas
xor
(bad)
jecxz
sahf
test
cld
rcr
sar
(bad)
cmp
fsin
sbb
aas
jae
push
lea
repz
lods
xor
dec
repz
into
xchg
mov
out
push
in
arpl
jg
fimul
adc
and
push
xor
enter
(bad)
sar
outs
sub
ins
icebp
mov
jl
xchg
cld
mov
xchg
mov
mov
leave
enter
sbb
add
shr
xchg
fsubr
retf
dec
ss
fadd
add
das
cmp
dec
jnp
ins
xchg
add
inc
lods
(bad)
imul
stc
sahf
sbb
cmp
mov
inc
jns
inc
lahf
sub
mov
sub
dec
mov
inc
inc
repnz
test
jae
call
mov
xchg
inc
in
int
adc
test
dec
mov
and
mov
xchg
jle
fdivr
dec
fisttp
and
int3
adc
add
loope
je
or
xlat
cmps
test
mov
test
mov
in
clc
mov
cli
adc
cld
out
out
(bad)
mov
shr
call
jae
rcr
repz
or
xchg
jae
pop
and
inc
ficomp
idiv
js
mov
dec
aam
xor
dec
pusha
push
mov
retf
stos
fimul
pusha
mov
add
add
push
or
cmp
adc
and
je
and
inc
jg
sub
call
or
(bad)
sbb
or
sub
or
mov
test
adc
(bad)
(bad)
ja
jo
and
dec
push
dec
mov
(bad)
dec
jmp
xchg
cmp
adc
es
stos
call
stc
dec
push
je
lds
sbb
or
mov
jg
pushf
push
dec
scas
call
(bad)
xchg
mov
scas
out
xor
ss
cmc
das
sar
inc
icebp
popa
and
aaa
popa
(bad)
(bad)
cmps
xchg
xchg
fs
pop
mov
fcom
mov
repnz
adc
add
pop
jecxz
xchg
add
pop
loopne
gs
sub
mov
or
retf
jbe
inc
pop
enter
mov
nop
push
or
loop
sub
in
stc
pop
adc
adc
sub
or
icebp
mov
pop
cmp
xor
pop
push
imul
jae
or
xor
retf
in
rcr
dec
mov
xor
cmps
inc
jecxz
call
popa
mov
pusha
ror
movs
xchg
mov
outs
loop
scas
in
xchg
cmp
into
xchg
(bad)
retf
jmp
push
pop
jp
bound
(bad)
pop
stos
and
lea
xchg
dec
ret
push
pusha
add
inc
stos
sbb
xchg
test
push
aaa
xor
test
add
fstp
mov
popf
lahf
pop
icebp
das
jmp
mov
ja
xor
lahf
and
mov
std
mov
mov
jmp
in
mov
fdivr
push
and
adc
sub
bound
jmp
mov
pop
xlat
and
and
es
xchg
ss
adc
sub
in
out
dec
mov
mov
xor
push
mov
aam
xchg
je
cld
adc
push
push
push
lods
imul
loopne
idiv
daa
(bad)
aam
adc
jo
fmul
xor
xor
adc
mov
mov
sar
or
jnp
bound
cmc
test
leave
push
jns
pop
adc
add
push
dec
test
inc
mov
call
sub
dec
cmps
add
aaa
lods
sbb
dec
into
in
xor
daa
sub
fstp
retf
shl
xchg
mov
jb
jne
xchg
cmp
push
(bad)
cli
xchg
cmp
call
pop
in
add
leave
mov
or
sbb
jmp
adc
or
fld
add
jno
xchg
adc
cwde
outs
dec
jg
popf
pop
cmps
stos
repnz
fstp
test
mov
shl
sahf
push
(bad)
(bad)
por
out
rcr
out
rol
(bad)
mov
lahf
mov
in
pusha
sar
bound
jne
(bad)
pop
mov
ss
repz
cmc
push
lea
pop
xchg
loopne
fstp
cmp
xchg
shr
sub
xchg
jge
mov
loope
jg
int
xlat
mov
(bad)
rcl
addr16
je
add
xlat
ss
mov
ror
pop
pop
inc
imul
push
pusha
jb
add
adc
or
test
jne
(bad)
stos
(bad)
fbstp
sub
popf
dec
sbb
popa
mov
dec
and
cmp
pop
iret
xchg
add
mul
fcomp
xchg
ins
ret
xor
in
jecxz
mov
xor
arpl
mov
lods
nop
(bad)
xor
ss
in
cmp
mov
out
sbb
mov
fucomp
pop
(bad)
gs
dec
xchg
adc
xchg
fucomp
ret
shl
add
dec
cmp
popf
fist
mov
push
mov
pop
shl
inc
pop
xchg
outs
sbb
int3
push
xchg
es
inc
jnp
int3
inc
cmp
fnsave
dec
mov
(bad)
in
mov
fnstenv
cld
out
xchg
xor
stc
cmps
imul
rol
xor
cmc
aas
xor
fdivr
out
jl
xchg
mov
jge
int3
aaa
pushf
mov
rcr
test
loope
cmp
dec
mov
retf
pop
(bad)
mov
cmp
repz
or
ins
loope
call
mov
nop
mov
ret
imul
adc
push
push
imul
repnz
arpl
xlat
imul
jbe
clc
sti
aad
sbb
push
pop
xchg
ins
xchg
and
push
(bad)
shl
mov
add
out
outs
ret
ds
add
push
aas
cmc
repnz
mov
(bad)
jle
aas
ret
out
jmp
inc
repz
scas
icebp
cli
xor
adc
cmp
loope
dec
mov
into
ins
jno
inc
lahf
adc
or
xchg
push
mov
in
jcxz
pop
in
mov
fisttp
sbb
mov
leave
push
(bad)
or
mov
and
inc
test
or
mov
mov
shl
push
xor
jo
in
mov
inc
mov
mov
shr
xor
lahf
imul
imul
fwait
ins
push
sbb
jmp
dec
call
and
dec
test
mov
jo
out
rol
jge
out
fsubr
cmp
or
sub
pop
pop
jle
sub
or
mov
inc
lahf
shl
in
dec
mov
push
cmp
pusha
inc
mov
mov
dec
adc
call
hlt
xchg
adc
push
in
or
icebp
cmp
push
sahf
mov
mov
xchg
sbb
out
mov
adc
aaa
mov
inc
push
test
lods
in
mov
cmp
cmp
fcomp
cmp
inc
lods
mov
jp
push
into
fadd
int
pop
push
adc
cdq
out
inc
bound
out
lods
shl
pop
scas
mov
or
mov
int3
arpl
add
xchg
jno
test
ret
mov
fisubr
push
jo
or
mov
fist
ret
in
mov
ret
push
lods
in
cmp
test
mov
frstor
lds
jmp
ret
sti
inc
jl
int3
jnp
(bad)
loope
into
jg
push
xor
inc
dec
push
rcr
ror
dec
inc
fsubr
mov
xchg
xchg
int
lods
sub
jb
out
cs
or
ror
call
fcmovne
sub
xor
or
and
in
fdiv
sbb
cmps
shr
fild
jo
mov
loopne
or
arpl
xor
mov
xor
jl
cmp
adc
push
scas
std
xchg
sbb
mov
movs
(bad)
cmp
mov
das
add
push
push
xchg
inc
aad
xor
out
cmp
sbb
adc
push
dec
xchg
sbb
mov
xor
pop
mul
sub
test
or
ss
loop
stos
arpl
ss
lock
bound
pop
dec
cmps
jecxz
ret
ins
push
and
test
jle
sbb
cli
rcr
xchg
scas
retf
leave
push
dec
pusha
movs
pop
retf
jns
push
push
rcl
dec
adc
mov
inc
adc
lahf
cmps
xchg
mov
inc
sbb
fwait
inc
add
mov
jge
aas
add
adc
cmp
push
adc
sbb
clc
xadd
inc
sbb
aam
and
xchg
popa
ror
loop
stos
push
add
stos
in
adc
inc
outs
pop
xchg
adc
dec
sbb
in
outs
adc
mov
test
mov
sbb
call
shl
fisttp
arpl
jne
pop
jle
inc
scas
(bad)
mov
sub
jne
cmps
inc
outs
pop
sar
clc
xor
or
aad
mov
popa
sahf
test
mov
mov
cmp
leave
imul
cwde
sub
push
test
push
dec
and
sub
inc
les
push
pop
shl
cmp
mov
test
cmp
xchg
jge
inc
xor
inc
movs
lods
adc
in
test
mov
ja
std
enter
ret
and
dec
xor
xor
imul
mov
sub
jp
mov
(bad)
add
imul
ficomp
ins
push
pop
xchg
ds
aad
cld
jp
lods
loop
add
xchg
clc
call
js
mov
(bad)
imul
or
add
mov
data16
daa
das
test
(bad)
mov
add
lea
mov
out
pop
jp
and
push
jp
jb
cwde
pop
shl
cmp
xchg
lock
inc
cmc
pop
pushf
mov
sub
dec
(bad)
jecxz
or
jecxz
sbb
mov
aaa
mov
xlat
and
mov
mov
sbb
and
pop
retf
inc
and
mov
cmps
adc
mov
stos
cmp
add
inc
and
sub
pop
inc
and
sar
xchg
in
dec
sub
std
out
inc
cdq
shr
lock
mov
imul
std
out
movs
es
sub
jecxz
cmovl
jmp
jl
rcr
and
repz
pop
icebp
cmp
cld
dec
xor
push
sub
loope
add
inc
mov
idiv
lods
mov
mov
sbb
add
sub
mov
inc
xchg
adc
dec
jnp
jmp
ret
dec
cmp
sbb
add
inc
and
adc
sub
mov
xor
sbb
(bad)
shl
jns
jecxz
sti
retf
or
ss
stos
retf
inc
xchg
and
scas
xchg
mov
adc
xlat
(bad)
fdiv
adc
int
xor
dec
adc
cs
ja
arpl
xchg
push
lods
and
dec
mov
jmp
jb
in
push
push
js
sub
shr
js
aam
fdivr
stos
js
dec
cmp
mov
pushf
iret
mov
mul
pushw
icebp
xchg
mov
int
dec
jae
ds
xor
pop
leave
or
mov
lea
retf
xchg
rol
dec
rol
push
cmp
dec
cli
mov
mov
or
fsubrp
mov
cmp
stos
loope
ror
jl
les
and
adc
lods
and
or
pop
ror
adc
push
js
cwde
shl
adc
sbb
sbb
into
data16
adc
in
or
mov
stc
inc
shr
or
gs
mov
mov
xor
js
lock
pop
adc
in
mov
out
rcr
(bad)
scas
loope
je
xor
and
(bad)
in
fistp
xchg
mov
push
repz
pop
mov
and
fwait
cmps
stos
cmp
xchg
ror
push
mov
mov
mov
cmp
jno
xor
push
cmp
xor
adc
push
stos
and
ror
fisub
aad
xor
inc
ficomp
dec
cwde
push
(bad)
call
add
test
in
addr16
in
mov
daa
aam
push
sbb
or
inc
repz
jbe
fwait
clc
dec
ins
add
sub
mov
ins
mov
adc
(bad)
fist
lea
test
aas
sahf
xor
int
pcmpgtb
cmp
test
jmp
inc
adc
mov
outs
shl
xlat
mov
cdq
and
nop
add
jno
pop
lds
rcl
mov
and
add
pusha
or
out
or
scas
cmc
inc
adc
mov
mov
lds
mov
ss
mov
push
add
jo
aas
xor
mov
and
fnstenv
xor
inc
inc
lods
out
ret
mov
push
sahf
sbb
aas
shl
test
inc
js
or
lds
pop
rcr
pop
loopne
out
add
movs
add
add
mov
dec
push
ja
jecxz
fldenv
ret
mov
pop
lods
jae
leave
pop
outs
ror
xchg
outs
stos
mov
sub
xor
daa
pop
jmp
dec
sub
call
xor
cli
test
outs
jne
adc
fsubr
jno
pop
mov
shr
loopne
and
lea
pop
push
pop
imul
sub
cld
aad
lods
stc
stos
cmps
mov
addr16
stos
push
push
mov
dec
mov
cmc
frstor
mov
fucomi
mov
in
mov
out
(bad)
jl
pop
mov
stos
call
cmp
movs
or
and
fs
mov
sbb
outs
std
sbb
dec
sbb
imul
je
aas
mov
or
add
stos
(bad)
xchg
or
xor
sbb
call
in
call
aas
push
mov
imul
push
cwde
loope
pop
jns
lods
das
pushf
xchg
outs
lods
cmp
repnz
mov
fcom
pop
mov
cmp
dec
popf
dec
shl
movs
pop
lods
cld
inc
jbe
sbb
jnp
mov
cs
push
outs
inc
popf
loope
dec
pop
xchg
out
fcom
or
cld
sub
repz
cli
test
and
ret
iret
mov
or
or
leave
cs
mov
add
jbe
mov
adc
fcomp
in
xchg
sbb
xchg
ficom
popa
ja
sub
push
mov
jge
mov
or
retf
mov
stc
bswap
popf
hlt
fsubr
imul
repnz
and
sbb
xchg
inc
ror
in
add
das
les
adc
fnstenv
(bad)
(bad)
test
jo
or
ret
sar
dec
rcr
arpl
add
call
mov
ret
iret
or
xor
xchg
pop
test
adc
dec
cmp
inc
pop
fcom
test
jbe
or
fistp
inc
and
js
xchg
or
dec
pop
aam
je
loopne
xchg
jns
xor
je
sbb
push
lds
call
mov
adc
pop
mov
and
adc
inc
int
jb
jo
cmp
push
mov
ins
mov
sbb
sbb
xchg
mov
pushf
stos
xor
daa
push
test
ins
ja
ficomp
mov
mov
mov
sub
je
inc
pop
xor
lds
jg
dec
dec
or
adc
ror
xor
pop
out
call
sahf
shr
dec
fwait
arpl
pushf
and
sub
inc
jecxz
mov
mov
loop
cmp
outs
dec
loope
lahf
(bad)
out
xchg
addr16
push
sub
stos
call
pop
cld
inc
adc
test
imul
and
add
mov
inc
sbb
cmps
xchg
retf
dec
test
out
inc
leave
sub
and
cmps
retf
adc
aas
cmp
mov
aad
or
add
shl
jne
ret
cmps
add
lock
fcom
fsub
(bad)
xchg
dec
xchg
hlt
dec
adc
jg
mul
cmp
jge
add
(bad)
popa
sub
adc
std
dec
imul
fnstenv
cmps
or
push
sub
imul
es
retf
jbe
(bad)
idiv
fimul
sar
out
mov
mov
dec
fild
push
addr16
test
cmps
jg
or
xchg
xor
sub
push
sti
shr
stos
lods
nop
jne
in
mov
pop
in
aas
or
out
retf
pop
xor
pop
xor
or
mov
adc
pushf
fnsave
pop
imul
in
add
add
push
xchg
hlt
push
pop
push
inc
das
dec
hlt
movs
movs
sbb
inc
cmp
bound
mov
mov
xchg
in
xchg
aaa
mov
(bad)
in
retf
push
xchg
shr
pop
mov
lahf
lds
and
mov
inc
cli
add
movhps
sbb
addr16
outs
mov
daa
and
ds
fldcw
shl
lods
inc
scas
sub
mov
gs
fucomip
cmps
xor
call
test
icebp
mov
outs
inc
cli
jecxz
push
mov
inc
dec
jl
aaa
(bad)
pop
xor
xlat
icebp
fwait
shl
sub
xchg
adc
mov
repnz
xor
data16
mov
call
out
fwait
lds
dec
fldenv
call
test
add
xor
(bad)
stc
icebp
popa
das
pop
(bad)
ds
jmp
rcl
scas
cmp
(bad)
mov
mov
mov
mov
invd
xchg
xchg
dec
sub
jb
bound
mov
sub
stos
or
mov
mov
idiv
repnz
iret
mov
popf
jl
sub
sbb
sbb
gs
ja
pushf
xchg
outs
jge
(bad)
xchg
inc
inc
pop
mov
enter
call
aas
inc
arpl
dec
or
in
outs
pop
mov
cmp
inc
or
mov
pusha
pop
adc
and
shr
mov
pop
sub
and
jle
clc
das
and
fwait
aaa
sub
je
test
jo
jecxz
dec
cmp
xchg
cld
lock
push
sub
adc
repz
cld
icebp
inc
aad
lahf
inc
fsub
mov
mov
add
lods
into
cmp
aas
ret
jmp
or
or
jle
imul
jecxz
adc
ins
xchg
scas
pusha
mov
test
sub
xor
jbe
and
push
(bad)
adc
loopne
jns
and
fisubr
push
test
clc
out
(bad)
gs
xor
mov
or
imul
and
pop
iret
cwde
pop
in
loop
xchg
daa
popf
inc
jmp
rol
pop
loopne
stc
adc
add
sbb
sbb
or
and
out
repz
dec
dec
mov
mov
loopne
loopne
lods
xor
add
imul
popf
fstp
mov
xchg
dec
xchg
cmp
in
jbe
inc
pop
dec
fnstenv
int
mov
xchg
inc
movs
push
xchg
xchg
jmp
test
daa
call
aam
outs
sub
push
and
add
jmp
sbb
cmp
jb
mov
mov
dec
scas
or
fiadd
xor
mov
or
ds
out
jno
les
cmp
jmp
clc
adc
call
retf
fist
enter
inc
(bad)
pop
sbb
fsubp
and
jae
dec
and
sbb
and
add
sub
push
ret
mov
sub
mov
inc
cs
pop
fwait
xor
cli
addr16
xor
xchg
mov
dec
push
aad
push
jle
cmp
cdq
scas
fdiv
lahf
iret
sbb
inc
or
xchg
adc
sub
movs
das
dec
dec
mov
inc
jmp
jg
pop
mov
hlt
js
mov
mov
push
popa
out
js
test
repnz
in
xchg
mov
pop
(bad)
sbb
dec
fs
dec
or
div
jnp
movs
lahf
or
lea
or
(bad)
cli
clc
adc
out
cwde
mov
test
pop
les
push
inc
xor
int3
dec
in
fcos
push
inc
enter
sbb
mov
push
and
sbb
and
xchg
push
cs
dec
inc
mov
sbb
sub
pop
adc
mov
ins
mov
nop
dec
movs
jo
aaa
jle
test
pop
outs
aam
sbb
pop
movs
pop
(bad)
pusha
jmp
scas
dec
dec
jne
fwait
mov
dec
add
push
addr16
in
aas
or
imul
add
imul
pop
rcr
jmp
dec
or
jle
mov
in
mov
repz
push
rcl
mov
ds
inc
xchg
cmp
mov
mov
jmp
push
jle
test
loop
cmp
out
and
outs
pop
mov
jnp
sbb
imul
int3
mov
mov
popf
imul
(bad)
leave
add
push
add
scas
pushf
cs
push
mov
fs
push
mov
(bad)
mov
mov
push
mov
or
cmp
test
jb
jp
jmp
jbe
movs
inc
shl
mov
mov
sti
test
cwde
int3
out
sub
xchg
push
in
adc
repz
cmp
xchg
and
pop
push
or
ja
dec
out
and
sub
cmps
xchg
sbb
mov
repz
stc
je
inc
ret
or
loop
adc
retf
xchg
cld
pop
icebp
push
mov
mov
fwait
ret
cmp
cmp
inc
repz
fmul
xlat
ds
cli
fwait
mov
pushf
mov
test
mov
popf
leave
fild
test
mov
or
aas
ds
in
call
clc
data16
mov
in
repnz
and
call
lea
sar
xchg
shl
ror
scas
mov
cmp
mov
sub
add
jnp
mov
ficom
mov
das
push
adc
out
ss
mov
aas
mov
repz
cmp
mov
mov
shl
fmul
push
js
stos
popf
dec
and
(bad)
mov
cmp
push
mov
out
xor
push
outs
(bad)
cs
jnp
in
jmp
jb
fdiv
sub
pusha
mov
cdq
fsub
fist
sub
mov
xchg
out
xor
push
or
xchg
xchg
out
popa
fstp
lods
inc
popf
lock
and
jo
stc
push
movs
mov
push
repnz
call
sub
push
mov
(bad)
dec
xchg
and
mov
xor
push
ret
jle
fcomi
mov
(bad)
ss
or
ret
lea
in
adc
out
out
mov
dec
adc
rol
xor
pop
aas
aam
repz
lods
ror
bound
(bad)
cld
and
adc
nop
fsubr
ds
lods
jo
and
ds
call
sub
das
add
aam
rol
inc
movs
mov
jecxz
movs
adc
push
pop
and
dec
sub
ins
(bad)
mov
push
mov
or
jg
bndstx
gs
imul
lods
aaa
jl
shr
cmps
(bad)
and
adc
xor
sub
mov
and
pop
sbb
into
in
mov
mov
cmp
dec
cmp
adc
fwait
and
enter
mov
imul
adc
movs
popf
mov
cwde
mov
cs
jge
mov
sub
arpl
sub
inc
clc
xchg
sub
loop
pop
imul
mov
sahf
pop
ror
pop
mov
jne
popf
xor
(bad)
mov
arpl
sbb
stos
clc
pop
icebp
stos
adc
ss
adc
js
and
add
fst
inc
sbb
lds
int
jmp
xor
push
ret
or
xor
into
xor
rcl
out
outs
xor
push
aaa
push
pop
dec
or
imul
scas
or
stc
jg
imul
das
cmp
inc
push
mov
mov
ss
add
das
aas
push
inc
add
lea
loopne
inc
pusha
stos
leave
xchg
fimul
aad
and
pusha
and
(bad)
or
sahf
jmp
bound
fs
cdq
adc
loop
sbb
dec
popf
sbb
jp
xor
cmp
xchg
sbb
call
sbb
popa
sti
imul
loope
test
pop
mov
fnstsw
fwait
gs
popa
xor
add
outs
test
pop
jl
call
jle
cmp
and
je
xor
jle
adc
cmp
xabort
mov
inc
push
rcr
test
xor
mov
adc
xchg
add
mov
dec
cmp
or
xor
iret
inc
cmp
dec
inc
and
mov
mov
pop
and
ror
in
push
adc
jg
retf
pusha
aas
jmp
mov
jns
xchg
popa
cmp
sbb
jecxz
ror
jp
sar
push
ret
test
xchg
jnp
mov
je
pop
jmp
call
push
xchg
sub
adc
jge
dec
mov
adc
and
in
lahf
or
call
add
movs
sbb
pop
pop
dec
pop
fistp
mov
jbe
ror
mov
hlt
or
cmc
cmp
test
loop
cmp
retf
jmp
repz
inc
mov
cdq
cwde
add
fistp
pop
mov
or
xlat
enter
out
cmp
inc
and
sub
xlat
add
lock
(bad)
in
jmp
fld
call
gs
pop
or
sahf
popf
mov
jne
out
in
(bad)
jne
mov
pop
dec
jl
mov
push
dec
cs
dec
(bad)
je
and
shr
sub
pop
daa
fldcw
out
push
mov
jmp
int
in
add
das
call
cmp
sbb
out
or
push
sub
nop
jmp
scas
mov
ja
movs
sub
cmp
call
test
stos
int3
mov
cs
push
(bad)
dec
aad
aad
jno
je
or
mov
xor
mov
and
inc
int3
out
mov
xor
sub
aaa
jbe
adc
inc
movs
stc
div
dec
out
jno
outs
inc
loopne
lods
inc
jp
dec
xor
(bad)
por
popf
cmps
test
mov
add
sub
xchg
(bad)
xor
gs
mov
sar
cmp
sbb
inc
jmp
adc
jae
mov
test
inc
cs
pop
pop
aad
sbb
mov
nop
mov
pop
retf
and
jg
lods
mov
xchg
ins
pusha
scas
add
pop
enter
push
ss
cmps
adc
pop
or
sar
adc
jg
adc
jmp
(bad)
fwait
or
cmp
out
ins
adc
pop
mov
daa
inc
mov
sub
jmp
sub
add
pop
adc
jmp
shl
add
retfw
sahf
inc
sbb
movs
cld
pusha
mov
movs
lahf
iret
aas
jecxz
shl
pop
sub
xor
ret
push
push
cmp
daa
and
fdivr
xchg
jle
mov
push
int3
ins
nop
mov
dec
sti
mov
adc
jmp
movs
and
mov
(bad)
dec
add
mov
push
cs
jnp
ss
addr16
call
xchg
pushf
mov
xchg
and
jnp
fdiv
fistp
sub
or
mul
dec
enter
sahf
fst
pop
repnz
ds
leave
jmp
stc
(bad)
retf
push
ds
mov
das
dec
cmp
das
adc
retf
out
fmulp
cmp
gs
popa
mov
pop
add
push
ret
dec
in
mov
outs
hlt
push
xchg
jmp
cmp
mov
xor
ins
jge
shl
push
adc
repnz
pop
jmp
dec
push
mov
xchg
popa
in
add
mov
mov
jge
adc
ficomp
pop
xchg
jmp
add
dec
push
cli
inc
xor
push
lds
mov
or
in
mov
(bad)
mov
jp
ja
aad
ffreep
mov
dec
jmp
push
push
pushf
fbstp
push
mov
jmp
push
int3
sub
dec
adc
imul
mov
nop
jp
mov
cmp
movs
xlat
push
xor
push
movs
add
aas
loopne
push
jmp
and
addr16
hlt
fidivr
(bad)
in
js
hlt
loopne
sbb
push
aad
test
not
pop
cli
(bad)
inc
inc
pop
arpl
jne
sti
adc
cmc
cmps
movs
or
stos
fs
retf
out
adc
mov
iret
inc
or
out
stos
call
and
ror
fwait
data16
es
cs
loopne
xor
or
dec
cld
xchg
and
xlat
sub
sub
push
xchg
cmp
aam
std
scas
(bad)
xlat
nop
(bad)
xor
jne
sbb
jbe
or
shl
fwait
xchg
stc
mov
in
inc
mov
les
cmc
cmp
scas
es
in
std
inc
cmps
pop
pop
cwde
aam
movs
cmp
sahf
loopne
push
jge
or
jnp
aaa
outs
sub
(bad)
mov
xchg
aaa
neg
lock
lods
pop
clc
fcom
mov
movs
leave
add
stos
mov
xor
rcl
pop
(bad)
daa
jmp
pushf
ss
cld
cmp
les
(bad)
push
xchg
cmovae
mov
(bad)
cmps
aas
jns
add
sub
mov
stos
into
sub
add
sbb
push
enter
fnstcw
inc
or
aas
and
loop
cmp
add
inc
call
addr16
mov
sbb
(bad)
or
icebp
adc
fs
out
mov
movs
xchg
jmp
xor
xor
cmovp
sub
xor
mov
cwde
cmp
lods
outs
cmp
int
jp
aam
std
push
pminsw
cdq
ror
out
mov
cmp
loope
daa
push
addr16
inc
pop
jns
add
mov
jle
pusha
pop
leave
sbb
mov
sbb
fstp
int
loop
adc
sbb
cmp
popf
(bad)
fsubr
test
std
jae
cmp
iret
icebp
(bad)
inc
pop
sti
push
lods
es
inc
(bad)
into
aas
add
or
mov
imul
retf
(bad)
xchg
fiadd
pop
xor
pop
fsub
ss
jb
pop
clc
sbb
repnz
add
ror
fsub
cmp
(bad)
mov
mov
out
pop
fld
or
pop
sar
jl
sbb
aam
rcr
repz
dec
es
dec
inc
cmp
sub
mov
xchg
pop
adc
or
test
push
adc
(bad)
jno
sbb
loop
outs
ret
dec
dec
loop
sbb
dec
sub
inc
das
or
mov
push
or
scas
aaa
das
or
stos
xor
test
fistp
or
retf
rcr
test
jno
xchg
pushf
iret
pusha
cli
leave
adc
xor
xor
retf
test
fadd
push
lahf
fisubr
xor
sub
or
and
movs
pop
scas
(bad)
lods
xor
push
daa
(bad)
test
pushw
and
(bad)
cld
mov
dec
mov
fist
mov
lods
mov
fwait
pop
retf
or
xor
fsub
dec
xadd
enter
dec
je
outs
mov
adc
fs
mov
scas
sub
fwait
sub
xor
in
aam
mov
bound
mov
ss
enter
inc
out
stc
and
test
inc
cmp
sub
sbb
nop
pop
xor
mov
lods
lea
es
mov
repz
test
dec
inc
loopne
xchg
cmp
xor
sti
jle
imul
or
mov
in
sbb
cmp
and
push
dec
xor
stos
cmp
cmp
enter
ret
inc
adc
ret
xchg
lods
xor
push
retf
push
and
pop
mov
jge
gs
(bad)
fstp
sub
aaa
xor
lds
xor
mov
scas
mov
test
outs
dec
scas
and
(bad)
jp
cmp
cmps
push
ds
inc
dec
sub
std
mov
push
jns
or
jg
push
leave
bound
loope
and
dec
jno
retf
adc
sub
ss
punpckhwd
pop
retf
sbb
std
and
mov
inc
sbb
test
js
cld
add
inc
jo
cmc
mov
jns
cmp
sub
jo
cmp
shr
test
dec
gs
sar
and
leave
maxps
hlt
mov
xor
les
and
adc
ror
push
bound
ss
cdq
sbb
nop
sub
jae
push
push
jmp
xchg
xor
xor
dec
enter
inc
mov
pop
aad
sub
retfw
cdq
mov
imul
jnp
mov
icebp
repz
xchg
dec
push
sbb
inc
push
retf
cmp
stc
push
push
fbstp
imul
cs
jns
jne
jb
sbb
pop
or
xchg
aad
mov
sub
xor
mov
out
jbe
out
mov
stos
imul
clc
lock
sbb
in
xor
outs
popf
xchg
add
jmp
pop
cmp
scas
std
push
aaa
xlat
repnz
gs
or
inc
pop
cs
dec
xor
xchg
sub
ins
outs
sar
sbb
sbb
pop
pop
outs
dec
xor
loope
inc
jmp
xchg
add
add
cmp
dec
add
push
into
push
cmp
inc
std
pop
repz
mov
or
(bad)
jo
lds
popa
stos
jae
xchg
pop
sbb
stos
int3
je
mov
mov
push
jns
jo
mov
repz
fidivr
lock
and
movs
dec
scas
scas
and
jmp
xchg
lds
sub
pop
sub
test
test
or
fadd
imul
outs
daa
sbb
jnp
fcomip
dec
dec
jo
fwait
add
ss
jae
sub
dec
mov
sti
or
dec
retf
push
xlat
inc
or
aas
cmp
add
and
mov
mov
and
push
xchg
nop
mov
ds
aad
push
xlat
dec
test
ret
les
lods
loop
loop
fist
push
add
arpl
cmps
xchg
out
add
cmp
fnsave
mov
sub
mov
mov
ret
jnp
ins
les
(bad)
mov
xor
retf
inc
mov
lahf
jg
aaa
sub
add
or
mov
retf
inc
scas
xor
xchg
in
jo
cs
jns
call
gs
or
cdq
nop
and
mov
and
mov
stc
or
adc
mov
and
push
mov
mov
fdivr
sub
pop
stc
ror
mov
cmps
xchg
sub
inc
call
adc
cld
jns
outs
(bad)
jl
mov
jl
sub
bound
cmp
xor
sahf
jnp
jo
cmp
sub
fsubrp
loop
fsub
fwait
inc
aaa
sub
daa
cmp
aas
cdq
ins
std
fsub
ret
sbb
cwde
stc
dec
sbb
jp
pop
mov
shl
mov
inc
in
pop
xchg
push
call
push
pop
mov
fs
sub
jno
pop
mov
mov
movs
popa
in
push
xchg
xor
shl
push
test
out
imul
loopne
bound
daa
mov
ins
or
cmp
pop
test
test
pmulhuw
xchg
rcl
popa
sbb
sub
cli
pop
std
(bad)
dec
mov
je
sbb
and
mov
inc
jmp
sbb
and
mov
xchg
mov
mov
rcl
or
jo
ret
dec
ret
dec
(bad)
out
fwait
xor
add
jnp
mov
xchg
ret
add
popa
inc
ror
fld
sub
scas
js
mov
stc
push
clc
test
mov
mov
xor
cmp
sbb
outs
aaa
mov
daa
lds
sbb
cmps
mov
repz
dec
fiadd
xor
mov
fistp
loope
jns
xchg
push
push
push
rcr
dec
in
imul
cmp
add
shl
add
shr
jmp
dec
ror
lods
and
popa
xchg
jg
das
mov
int3
mov
pop
sbb
jmp
lock
mov
mov
inc
outs
ja
in
lock
jp
push
arpl
test
and
mov
mov
call
out
pop
adc
shr
aam
push
in
cmp
lods
loop
fld
repnz
mov
cs
aam
push
jp
xor
bound
fs
out
popf
sbb
add
js
xor
add
push
add
inc
pop
pusha
mov
bound
out
call
mov
fwait
jp
lods
or
mov
stos
test
cmp
mov
cmps
cmp
xlat
dec
mov
add
popa
test
aas
and
sub
inc
jo
daa
mov
repnz
outs
mov
out
shl
into
dec
pop
(bad)
xchg
fmul
mov
push
lahf
mov
mov
adc
or
clc
imul
inc
inc
jnp
xchg
mov
sbb
sbb
ins
jge
adc
imul
test
adc
out
mov
mov
loop
dec
aam
sti
dec
and
xchg
aam
jns
call
adc
cli
fld
imul
mov
(bad)
aad
inc
pushf
movs
idiv
xlat
adc
pop
xor
fisttp
leave
mov
xchg
mov
or
mov
and
sbb
pushf
or
int
mov
out
push
xchg
rol
xchg
lods
stc
and
loopne
mov
dec
loop
mov
inc
nop
mov
xchg
push
mov
add
cs
fdiv
and
repz
movzx
scas
fiadd
popa
mov
test
inc
pop
mov
stc
xchg
mov
stc
aam
psubw
jecxz
cmp
mov
wrmsr
add
jmp
cmp
stos
dec
test
call
mov
cmc
and
push
cmps
add
(bad)
jmp
jno
and
pop
pop
pop
mov
push
nop
xor
add
mov
inc
repz
push
cmp
(bad)
dec
ja
bnd
das
rcr
cld
pushf
pop
fldcw
cld
fs
mov
and
or
dec
gs
out
mov
adc
pusha
gs
lods
hlt
icebp
pop
jg
ret
mov
jg
jl
ds
mov
retf
fsub
mov
pop
dec
mov
mov
jle
xor
sahf
or
mov
lahf
aad
ror
mov
or
add
icebp
aaa
push
shl
adc
out
adc
xor
mov
aam
or
push
sbb
(bad)
adc
xor
icebp
add
lea
nop
push
push
sub
xor
add
ins
xor
(bad)
inc
int
popa
or
test
loope
mov
pushf
pop
and
hlt
push
xchg
fistp
in
jmp
ja
xchg
adc
pusha
icebp
dec
jmp
fs
adc
adc
adc
lods
and
cmps
movs
pop
mov
jmp
rcr
call
or
xchg
dec
scas
(bad)
push
dec
mov
xor
or
pop
int3
push
js
ds
scas
pop
push
stc
push
enter
dec
ds
outs
(bad)
jne
inc
xchg
xchg
ret
test
ins
fwait
xor
call
cmp
xchg
jnp
into
xchg
cmp
dec
inc
leave
pop
add
mov
dec
or
xchg
bound
mov
stc
jnp
iret
xchg
iret
push
aas
inc
mov
xchg
mov
push
repz
push
inc
pop
pop
imul
xor
xchg
jmp
inc
jp
push
movs
push
cmp
cwde
dec
clc
inc
(bad)
fld
mov
dec
lock
adc
push
push
pop
test
jmp
mov
or
xor
inc
cdq
pop
enter
sbb
sub
sbb
rcl
test
jp
outs
movs
stos
mov
mov
mov
cdq
push
push
inc
xor
enter
pop
mov
pushf
or
dec
inc
pop
xchg
adc
jb
lds
test
icebp
push
and
jg
clc
mov
je
inc
cmps
repnz
daa
fldcw
lock
fldenv
(bad)
out
lds
(bad)
cmps
mov
movs
jp
add
sub
or
add
cmps
cmps
leave
cmps
loope
and
add
cmp
sub
test
dec
xchg
cmp
mov
int
retf
push
cmps
adc
clc
push
jns
mov
xchg
adc
not
pop
adc
mov
daa
call
scas
cmp
mov
int3
cmp
dec
dec
pop
aas
call
jne
ret
rcl
add
cmp
sbb
xchg
iret
jnp
mov
sbb
icebp
movs
mov
loop
jecxz
xchg
lock
sti
mov
clc
sbb
inc
push
jne
dec
pop
sub
sbb
or
mov
sub
pop
(bad)
imul
inc
sub
gs
sub
and
popf
pop
loope
push
sbb
shl
mov
or
or
cmp
addr16
ja
cmc
mov
xchg
mov
je
sub
call
jl
ret
xchg
or
aam
add
retf
test
not
loope
dec
inc
gs
gs
dec
sbb
adc
out
popf
adc
sub
inc
pushf
adc
arpl
push
mov
add
aam
adc
div
push
add
xor
sub
in
ja
aam
mov
cmp
adc
mov
pop
mov
loop
fdiv
fldcw
fld
in
fs
aas
push
rol
(bad)
push
lahf
sub
mov
jmp
gs
sub
jae
sbb
daa
or
jg
jns
stos
mov
scas
out
mov
icebp
popa
arpl
enter
les
mov
jecxz
pusha
imul
xor
pop
jge
jb
sbb
popf
imul
std
fdivr
int3
cdq
addr16
movs
enter
add
sar
cmp
or
in
mov
mov
fsubr
dec
jge
repz
loopne
sar
cwde
aaa
rcl
aaa
call
mov
mov
xor
movs
lods
aaa
pop
push
shr
aaa
pop
jge
push
mov
outs
lods
mov
pop
xchg
or
faddp
or
push
(bad)
fist
add
arpl
or
dec
fsubr
test
ficomp
out
mov
jmp
scas
pop
test
(bad)
and
mov
arpl
out
adc
adc
(bad)
push
jb
push
mov
or
xchg
or
push
push
mov
sbb
mov
jbe
jmp
xor
leave
or
inc
js
les
arpl
(bad)
xchg
or
jl
sbb
or
nop
es
out
shr
cmps
adc
daa
push
cmp
jae
sub
gs
sub
jl
dec
imul
jmp
or
mov
ja
shl
fadd
arpl
push
jmp
add
mov
xchg
cli
sub
push
or
dec
int3
mov
dec
mov
and
loopne
push
nop
sub
mov
cmp
(bad)
daa
repnz
xchg
loope
fidivr
addr16
xchg
mov
mov
cmc
mov
retf
push
and
shl
repnz
add
retf
xor
not
sbb
pxor
jb
lock
imul
adc
mov
xchg
std
ins
add
imul
mov
ins
xor
shl
iret
or
mov
ins
dec
xor
jg
rcl
repnz
aad
sti
cwde
lods
jmp
outs
test
ss
ss
add
sub
lea
or
push
xchg
aad
add
dec
imul
rol
lea
mov
scas
or
sbb
mov
test
xor
out
pushf
jno
and
outs
ret
xchg
mov
lahf
adc
sbb
dec
nop
aad
sub
outs
bound
std
jle
sub
daa
pop
test
repz
outs
iret
sub
mov
cmp
sti
fst
xchg
push
mov
pop
arpl
sub
mov
std
fwait
aaa
push
add
adc
pop
(bad)
lock
jle
jb
enter
bound
fadd
mov
jbe
mov
sbb
cwde
(bad)
or
inc
in
out
jle
addr16
jae
mov
adc
scas
test
mov
sbb
sub
xchg
mov
pop
and
sbb
dec
push
push
mov
js
nop
sbb
fidiv
fsub
jb
adc
lahf
ror
cwde
sub
es
and
bswap
jg
daa
mov
pop
xchg
jne
jg
or
(bad)
adc
cmps
push
loope
ins
mul
aaa
les
dec
sbb
and
ins
sub
call
sbb
fist
pushf
cmp
neg
adc
stc
xor
mov
test
daa
pop
in
ret
fnsave
loop
lods
pop
shl
mov
inc
sub
jo
sti
cmps
cdq
pop
frstor
std
data16
inc
sbb
adc
pop
push
dec
xchg
sbb
loopne
pop
mov
push
pop
inc
call
ja
mov
scas
jmp
mov
xor
cmp
or
lods
mov
stc
and
mov
rol
jecxz
cmc
rol
dec
pop
xor
mov
ja
adc
add
ss
inc
stos
adc
push
pop
ds
xchg
xchg
dec
leave
dec
sbb
mov
inc
aam
mov
and
xor
shr
push
mov
mov
jae
jl
mov
repz
sub
pushf
fadd
movs
scas
adc
or
(bad)
dec
xchg
push
pop
mov
(bad)
rol
cs
scas
jmp
popa
in
sbb
adc
jge
lahf
adc
nop
test
into
adc
mov
nop
cmp
sahf
mov
cld
pop
mov
and
xchg
pop
cdq
ds
pop
xor
sub
bound
jbe
jg
and
out
je
stc
or
jbe
jnp
hlt
fwait
mov
mov
add
or
mov
jmp
lods
dec
adc
repnz
or
out
xor
sbb
xchg
xchg
rol
xchg
cmp
imul
pop
pop
adc
into
clc
sti
repz
mov
or
or
jge
fwait
pop
pop
dec
push
sbb
jns
cmps
fst
pop
add
dec
cs
inc
imul
mov
fwait
retf
in
push
loop
out
bound
mov
ror
cmp
pop
addr16
xor
pop
mov
jmp
sbb
fstp
jp
mov
add
mov
outs
push
(bad)
mov
or
cmp
jno
bound
rcl
rol
pop
sub
outs
fadd
outs
in
movs
movs
lds
popf
ror
mov
imul
aam
push
in
push
and
inc
aam
rcl
stos
cmps
out
xchg
adc
cwde
(bad)
in
cmc
jmp
or
in
cmp
or
xchg
test
mov
and
jbe
ficomp
shr
test
cs
mov
xchg
xchg
xchg
or
fucomp
call
pop
add
ins
and
jnp
test
cmps
adc
inc
add
cmp
js
pop
push
sub
push
inc
mov
sbb
addr16
cmps
(bad)
push
rcl
sahf
cmp
xchg
mov
push
cmp
ins
mov
mov
scas
xor
in
lea
inc
and
jnp
mov
inc
push
in
arpl
mov
push
or
and
push
in
retf
xor
outs
jne
push
in
push
retf
movs
adc
nop
cmps
mov
lea
pop
aas
in
retf
call
push
push
mov
jae
out
pop
fldcw
jp
outs
add
mov
lahf
inc
mov
out
mov
mov
mov
adc
inc
xchg
push
hlt
ror
outs
es
sub
in
add
cdq
scas
div
push
pusha
movs
jbe
in
leave
xor
call
sub
scas
outs
push
ins
mov
cld
mov
push
movs
(bad)
fnstsw
mov
pusha
dec
fs
fwait
les
push
out
cmps
movs
outs
and
inc
xchg
cwde
dec
ins
daa
mov
xor
mov
arpl
sub
or
push
or
(bad)
sbb
enter
push
sbb
sub
(bad)
call
add
outs
sbb
push
mov
js
mov
stc
adc
lods
cwde
mul
iret
xor
jp
imul
shl
fwait
sub
jno
movs
cmps
push
mov
mov
add
and
mov
int
cmp
jbe
jno
retf
and
sbb
fst
push
cmp
dec
mov
and
sbb
movs
jg
pop
and
ins
ja
mov
add
(bad)
or
arpl
mov
retf
sti
push
fwait
mov
jmp
nop
stos
lods
sbb
xchg
fsub
clc
call
cwde
aam
xor
out
pop
jmp
sar
ss
xor
sbb
jmp
xchg
xor
(bad)
test
mov
mov
cli
mov
inc
out
je
mov
sub
(bad)
jmp
mov
std
shl
add
cmp
mov
call
fwait
loopne
lds
aaa
ret
daa
or
jl
cmps
and
scas
xor
dec
hlt
repnz
pop
push
dec
ret
push
sbb
fsubrp
xor
in
xor
std
dec
out
or
pop
loope
push
cld
enter
sub
mov
push
xor
push
stc
enter
adc
das
cmps
xchg
iret
lahf
sub
aam
test
enter
rcl
sub
movs
lock
cmp
cdq
retf
(bad)
fstp
add
adc
mov
push
inc
outs
pop
xor
and
adc
test
scas
cs
inc
mov
test
dec
(bad)
adc
in
xor
fnstenv
popa
shl
fcmovnu
push
out
outs
stos
dec
jmp
call
retf
pop
nop
cmp
gs
outs
or
movups
cwde
jb
shl
jne
inc
mov
sti
outs
cwde
das
enter
mov
cmps
inc
int
mov
sti
addr16
mov
stos
mov
jg
addr16
fadd
pop
sub
inc
mov
jmp
data16
xchg
pop
dec
pop
loope
cmp
bound
aad
out
sbb
xor
ins
inc
(bad)
in
and
rcl
fsubr
icebp
or
neg
daa
cmp
push
sar
fld
jbe
pop
xchg
push
stos
dec
aas
mov
push
jmp
dec
cmp
sbb
push
lods
jb
inc
rol
mov
and
into
lock
jne
fidivr
xchg
xchg
or
mov
nop
xchg
jl
bnd
test
adc
sub
aaa
jbe
inc
movs
push
mov
shr
xor
push
fsub
fbld
add
ja
and
aaa
test
xor
hlt
pop
xchg
sub
adc
out
sub
mov
and
jnp
mov
shl
cmp
sbb
js
je
sbb
jmp
add
jno
test
sub
jp
fldcw
push
mov
jecxz
jnp
in
cld
stc
out
mov
xchg
mov
sub
xchg
fstp
fs
inc
(bad)
imul
xor
fistp
xor
mov
dec
push
dec
sbb
sbb
dec
pushf
(bad)
les
and
mov
inc
out
js
sub
and
sub
sub
std
imul
xlat
adc
inc
or
sti
stos
int3
pusha
sub
(bad)
mov
cwde
ins
loopne
xor
xlat
mov
push
push
ins
mov
mov
dec
cmp
out
loop
mov
dec
pop
pop
and
inc
adc
jl
icebp
jl
out
lods
mov
test
dec
inc
push
mov
jns
push
add
or
jb
repz
leave
(bad)
imul
add
push
add
ja
mov
mov
scas
dec
into
and
add
adc
cs
pop
xor
xchg
xor
or
jge
test
add
push
lds
fldcw
push
jne
push
sub
cmp
ins
dec
shr
and
rcr
inc
add
leave
mov
add
scas
lods
push
icebp
push
jns
retf
rsm
mov
jg
cwde
sahf
jge
jae
dec
or
lahf
mov
nop
pop
push
sbb
cmp
aas
xor
adc
mov
shl
test
mov
or
push
mov
cmp
fidivr
retf
sub
sti
dec
inc
ins
or
ins
rcr
movs
xchg
(bad)
adc
pop
js
adc
mov
mov
push
arpl
sub
and
push
test
or
cmp
int3
xchg
xchg
out
add
mov
sub
hlt
mov
xor
xchg
push
(bad)
gs
ss
outs
rol
inc
mov
(bad)
retf
stos
inc
mov
cmps
dec
dec
sbb
call
mov
sbb
xchg
push
in
inc
(bad)
xor
ins
stos
jl
test
jge
sub
xchg
mov
dec
sbb
xor
jmp
mov
cmp
adc
test
xchg
push
push
xor
jl
(bad)
jmp
mov
outs
sti
test
(bad)
ss
pusha
and
frstor
adc
mov
jbe
leave
mov
mov
dec
and
push
movs
add
dec
fidivr
shl
shr
leave
push
stc
loopne
sub
xor
div
imul
push
push
mov
xchg
pop
stos
movs
bound
xchg
pop
(bad)
xchg
pop
aas
lahf
add
sahf
mov
test
pop
popa
shr
sbb
mov
jnp
scas
pop
mov
push
cmp
gs
leave
sub
cmp
xchg
sub
(bad)
(bad)
idiv
mov
inc
movs
addr16
fwait
xchg
nop
sub
mov
mov
pusha
jno
inc
and
(bad)
sbb
add
mov
pop
(bad)
mov
lahf
xchg
dec
pusha
jecxz
mov
mov
fsubr
fidiv
sub
int
lods
retf
add
or
cmp
xor
enter
inc
leave
loope
dec
repnz
push
les
data16
push
(bad)
sub
jmp
mov
je
int3
pop
mov
mov
call
add
jle
cmc
and
inc
jo
inc
push
ret
(bad)
cmp
push
das
fild
add
adc
fwait
push
xchg
(bad)
xchg
pop
xor
movs
mul
sbb
jbe
mov
adc
pop
xchg
jmp
sbb
sbb
movs
xor
(bad)
cmp
push
fs
mov
lods
cs
lods
ss
inc
jno
dec
mov
mov
jae
sub
cmp
cmps
lea
stos
data16
push
inc
fcomp
adc
loopne
outs
xor
adc
loop
inc
popf
xchg
sti
dec
cmp
xlat
movs
sbb
hlt
cld
adc
xchg
sbb
or
push
loop
sbb
mov
punpckhdq
sahf
add
(bad)
in
bound
into
push
jmp
aaa
cmp
xchg
mov
xchg
std
mov
bound
pusha
jne
add
and
in
or
shr
xchg
out
sub
leave
(bad)
dec
mov
mov
inc
scas
pop
test
mov
lds
fs
and
daa
pop
push
aaa
jne
loope
nop
imul
out
imul
mov
mov
cwde
arpl
ds
dec
out
cmp
pop
adc
(bad)
mov
mov
xor
or
push
cmps
or
aas
lods
call
popf
icebp
xchg
dec
pop
aas
inc
fucom
xor
jno
cmps
int
xchg
mov
jb
sub
shl
mov
scas
imul
aas
repnz
pushw
fdiv
pop
into
js
mov
sub
and
xor
test
xor
inc
(bad)
fistp
mov
or
leave
and
mov
sbb
(bad)
ds
in
xor
mov
pop
sbb
sbb
jge
aaa
adc
test
cld
adc
not
js
es
nop
xor
adc
ja
loopne
and
lahf
sub
add
call
xchg
mov
popf
push
test
xchg
(bad)
in
ja
dec
fwait
pop
or
mov
frstor
lahf
dec
adc
arpl
mov
ret
repz
fld
fld
push
or
jg
add
test
mov
mov
inc
inc
mov
imul
cmc
xchg
or
popf
dec
xchg
imul
(bad)
lods
data16
test
sub
push
fadd
dec
pop
enter
fnstsw
mov
or
lds
cmp
mov
div
lods
cmps
sbb
dec
out
or
rcr
jecxz
fwait
int3
aaa
push
cmp
ret
jg
cld
mov
pop
dec
movs
outs
pop
(bad)
push
hlt
lds
mov
shl
pop
push
mov
mov
adc
jmp
xlat
jg
aas
pop
lds
in
adc
push
hlt
test
add
popa
call
je
shr
in
mov
push
add
xor
cld
jne
pop
push
push
xor
cli
mov
aad
fimul
push
lahf
pop
pop
cmp
loop
inc
sahf
push
je
pop
or
leave
inc
dec
push
push
inc
push
pushf
movs
std
jae
fs
(bad)
out
mov
inc
jge
ja
push
sub
and
lds
add
mov
push
inc
push
add
mov
(bad)
jne
jns
ror
or
and
jbe
mov
ret
sbb
pop
and
mov
and
push
cmp
js
mov
jecxz
outs
push
adc
fwait
jnp
shl
xchg
aad
xor
jl
daa
out
in
shl
repnz
pmaddwd
mov
fild
fmul
jl
sub
(bad)
or
sbb
sbb
cmps
mov
movs
push
call
les
and
nop
shl
cmps
sbb
mov
push
push
les
cdq
fld
cli
pop
pop
daa
xor
add
push
add
mov
stc
add
(bad)
mov
(bad)
mov
pushf
lea
mov
je
cmp
pop
pop
and
jbe
(bad)
xchg
xor
push
push
add
cmp
adc
arpl
lods
test
mov
ja
mov
add
sub
sbb
out
add
xlat
outs
ss
test
fiadd
repnz
xor
pop
jbe
add
loope
ret
sti
dec
(bad)
sbb
add
sbb
stc
dec
jbe
xor
stc
push
adc
sbb
push
cmps
add
adc
adc
dec
bound
outs
xchg
cli
call
lahf
aas
lea
cmps
(bad)
fimul
loop
add
loope
mov
shl
js
aad
pop
jo
mov
and
test
hlt
add
loop
add
pop
add
jne
jmp
cmps
push
test
sub
jmp
das
fs
fisttp
xor
adc
aas
fild
fwait
jb
ror
sbb
mov
xchg
mov
call
scas
jbe
mov
jmp
cmc
jg
mov
push
dec
pop
psllq
jae
push
mov
push
sbb
add
cmps
outs
jmp
fwait
nop
in
iret
test
mov
mov
lods
sub
call
jns
jne
mov
inc
pop
jl
xchg
pop
adc
sbb
adc
scas
lods
fstp
out
push
lods
lea
pop
xchg
in
rcl
mov
rcr
push
sti
cwde
test
popa
push
xor
call
icebp
inc
mov
in
into
in
xor
shl
push
jl
sti
sahf
sbb
scas
adc
outs
jbe
mov
js
ins
jmp
aad
sti
xchg
push
mov
scas
retf
xor
cli
mov
push
sbb
mov
jbe
xchg
pop
into
gs
je
lahf
and
das
push
and
test
jbe
test
sbb
mov
into
sub
js
cli
sbb
nop
inc
aas
xor
cmp
repnz
xchg
int3
mov
stos
pop
xchg
add
pop
ins
cmc
mov
xchg
aad
inc
pop
das
xchg
popf
sub
mov
dec
mov
pop
adc
shl
xor
out
pusha
jecxz
push
cld
inc
retf
setae
sbb
pop
mov
test
mov
pop
xlat
xchg
or
xor
inc
jecxz
dec
xor
inc
enter
mov
push
ss
int3
gs
cmp
xchg
imul
sti
mov
dec
dec
cmp
ret
xor
mov
call
push
ret
hlt
mov
outs
and
nop
cmc
int
mov
jle
jbe
adc
mov
add
daa
das
aas
(bad)
cs
jbe
mov
ret
inc
push
fdiv
daa
add
sbb
adc
cdq
popa
push
pop
or
mov
hlt
popf
add
pop
push
mov
shl
push
iret
sbb
scas
cmp
push
lock
mov
sub
scas
cmp
inc
dec
pop
(bad)
pop
movs
xchg
shl
in
mov
mov
in
outs
add
sbb
ret
jnp
dec
jmp
mov
or
dec
cli
dec
jmp
repz
cmp
sbb
jge
push
cmps
iret
lods
cmp
inc
in
aas
fild
cwde
xchg
test
ret
xchg
popf
test
mov
mov
test
retfw
mov
or
add
fnstenv
push
mov
dec
movs
add
xchg
xor
es
mov
or
sub
addr16
(bad)
not
add
mov
mov
jo
push
hlt
stos
inc
pop
les
retf
je
jno
out
dec
push
push
mov
es
xor
repnz
aaa
mov
adc
aad
ror
adc
loop
jae
cmp
daa
pop
add
cld
outs
mov
sbb
xchg
mov
mov
mov
sbb
cdq
shr
inc
stos
inc
cmc
je
scas
jg
sbb
sub
cmp
mov
rcl
sbb
jno
or
mov
test
fst
stos
mov
xchg
loop
leave
scas
inc
or
popf
inc
push
lods
mov
cld
(bad)
mov
data16
(bad)
fist
cmc
mov
mov
(bad)
cli
pop
push
shr
(bad)
stc
add
cdq
jnp
mov
adc
std
mov
xor
push
dec
fwait
xchg
and
mov
mov
mov
das
xor
inc
aam
and
fidiv
xchg
pushf
sub
or
mov
xor
ret
lods
outs
scas
sub
in
lods
imul
adc
cmp
jecxz
xchg
xor
adc
repz
das
mov
ja
pop
test
mov
sub
inc
mov
loopne
push
aas
cli
or
dec
push
mov
mov
jno
loop
inc
das
jp
sub
test
gs
cmp
inc
sub
hlt
mov
inc
or
sbb
shr
sbb
cmc
cmp
in
rcl
mov
jb
(bad)
test
jne
repnz
loopne
rol
mov
push
outs
adc
test
in
aad
loop
or
mov
ins
aas
jne
shl
cmps
lods
mov
shl
les
vcvtsd2si
push
mov
sbb
xchg
push
jecxz
and
and
lea
sbb
dec
cwde
inc
dec
sahf
hlt
test
pop
movs
mov
(bad)
pop
cmp
push
xchg
and
sbb
inc
mov
cs
dec
popf
mov
xchg
add
pop
mov
stos
scas
cmp
inc
repz
pop
bound
push
jns
adc
mov
lods
adc
sbb
in
inc
push
dec
pop
push
xchg
sub
push
je
sub
mov
xor
sbb
jle
add
pop
jb
sub
fnstsw
inc
mov
in
jno
mov
xlat
aas
ror
out
jae
cwde
daa
addr16
div
push
movs
sub
in
xor
mov
mov
fdivr
mov
sysret
popaw
or
dec
xchg
cmp
xchg
xchg
sbb
jle
or
push
lea
cdq
cs
je
push
(bad)
(bad)
inc
xchg
movs
je
lahf
retf
out
aad
fcom
mov
mov
sbb
scas
adc
mov
scas
cmps
add
xchg
lds
jae
(bad)
push
ror
bound
cwde
mov
stos
mov
movs
dec
mov
out
mov
outs
cmps
pop
clc
(bad)
ret
fnstcw
or
cld
pusha
enter
dec
test
aas
or
sub
xchg
jmp
aas
stc
(bad)
pushf
ds
mov
ss
cmp
movs
movs
mov
sbb
or
inc
jbe
push
xor
cmc
jns
mov
or
arpl
jmp
push
(bad)
stc
xchg
sahf
sub
lods
je
adc
xor
inc
es
mov
hlt
gs
sbb
ja
adc
xor
dec
jle
pushf
or
xor
fcmovbe
xor
mov
add
fcmovb
xlat
leave
adc
sub
ds
sbb
dec
lods
stc
push
imul
shl
fsubr
mov
mov
push
fisttp
ret
iret
loope
add
loopne
inc
pop
outs
out
out
pusha
dec
data16
jnp
sub
push
jae
shr
sub
xchg
pushf
cmc
jmp
nop
dec
mov
and
repnz
iret
inc
lods
loop
icebp
rol
adc
js
push
inc
mov
out
add
jl
push
loope
mov
addr16
ds
mov
sar
push
dec
stos
push
sahf
jp
cmp
push
outs
pop
xchg
cdq
je
pop
rol
enter
xor
cli
aad
xchg
pop
pop
cmc
test
pop
xchg
or
and
clc
pushf
pop
test
jbe
leave
inc
lods
mov
enter
xchg
xlat
das
loope
jmp
mov
mov
lds
popa
mov
leave
loopne
mov
pop
in
lods
xor
fidiv
sub
jge
jns
fwait
das
pop
shl
nop
mov
xchg
or
je
fld
jge
adc
dec
sti
ret
mov
imul
lods
jmp
ss
push
xchg
cs
inc
sbb
inc
js
inc
rcr
popf
ss
sbb
jne
cmp
ins
in
mov
ret
in
arpl
pop
iret
sbb
sub
pop
dec
mov
inc
dec
cld
jne
pop
shl
jecxz
pop
mov
push
mov
das
xor
cld
out
and
push
iret
mov
cmps
in
pop
ficomp
xchg
xchg
cmp
dec
or
lods
retf
add
mov
xchg
lods
nop
cmp
scas
add
mov
movs
imul
mov
push
fild
push
pushf
mov
outs
lahf
(bad)
push
jmp
les
gs
cmp
(bad)
mov
or
shl
dec
scas
retf
xchg
(bad)
mov
pop
hlt
fimul
das
mov
ds
inc
ja
retf
es
jns
inc
or
dec
add
pop
jl
push
jp
adc
test
stos
idiv
inc
sbb
rcl
xor
(bad)
outs
xchg
pop
adc
imul
call
pusha
movs
in
sub
cli
xchg
mov
fadd
jmp
mov
sbb
in
and
dec
stos
push
xor
in
sub
stos
push
imul
jmp
jg
retf
mov
xchg
mov
mov
dec
inc
call
inc
mov
cmp
fadd
inc
fbld
mov
clc
imul
mov
movs
retf
repz
repz
repz
pop
retf
(bad)
test
dec
sbb
pop
jns
sub
mov
jnp
dec
mov
fdivp
scas
arpl
push
inc
popa
dec
xchg
es
ins
repnz
fldcw
or
or
ret
mov
jns
inc
fdiv
cmp
sub
dec
mov
fcmovbe
push
es
arpl
push
jno
mov
dec
sar
jg
push
push
inc
out
or
test
cmp
mov
sub
push
pop
fld
jno
shr
sbb
aad
adc
jo
push
cmps
jg
ret
test
int
mov
adc
rcr
adc
sbb
(bad)
(bad)
lock
sbb
or
sbb
mov
movs
jbe
and
inc
jnp
or
pop
nop
mov
loopne
cli
loop
gs
std
dec
push
loopne
push
clc
je
xlat
pop
push
xor
xor
sub
dec
push
sub
mov
repnz
ins
and
or
sbb
(bad)
cmps
adc
jo
inc
jns
mov
and
lea
xchg
lock
xor
call
xlat
fwait
(bad)
xor
test
pop
add
sahf
inc
sub
stc
xor
rcl
sbb
dec
out
jae
in
cmp
call
xchg
lods
dec
test
add
mov
pop
mov
pop
sub
push
pop
cwde
cli
or
clc
rol
lods
sbb
cmp
lods
ja
sbb
xchg
lods
add
rcr
in
dec
into
mov
mov
xor
es
add
cwde
or
jmp
xchg
lds
inc
sar
shr
rep
retf
add
mov
pop
stos
mov
and
sub
lahf
stc
pop
(bad)
mov
outs
dec
lds
loope
push
push
fstp
dec
int3
mov
ins
dec
(bad)
outs
sub
xor
pop
mov
outs
push
icebp
call
push
shl
cmc
mov
push
dec
mov
jne
arpl
pusha
fimul
cmp
das
leave
adc
out
cld
add
dec
outs
mov
sub
loop
push
clc
mov
mov
xchg
mov
mov
nop
cmps
call
push
mov
xchg
or
sbb
inc
sbb
push
out
pop
mov
(bad)
fist
std
(bad)
push
rol
out
or
sub
add
out
imul
push
out
test
mov
pop
jae
in
pop
(bad)
aad
mov
dec
pop
jle
(bad)
adc
int
xchg
pop
push
ficomp
xor
jns
push
enter
mov
sub
das
add
sbb
rol
sub
mov
pop
sar
mov
mov
movs
add
(bad)
jne
icebp
xchg
pop
and
dec
xor
popa
outs
out
jge
add
scas
adc
xchg
dec
cmps
pop
xchg
push
daa
mov
fnstsw
jl
add
xchg
adc
ins
sub
xchg
cmp
loopne
call
inc
scas
pop
adc
jecxz
dec
jmp
pop
sbb
imul
xchg
popf
shl
aad
mov
dec
ror
out
xor
mov
adc
(bad)
pop
and
and
cwde
mov
cmp
in
dec
nop
popa
mov
fwait
aam
bound
dec
add
iret
mov
stos
outs
inc
(bad)
fnstenv
push
in
lahf
jnp
mov
movs
(bad)
repz
or
xlat
sti
mov
adc
or
mov
pop
add
lods
push
fidivr
cmp
dec
mov
jbe
mov
(bad)
scas
push
xor
mov
into
cwde
(bad)
rep
inc
loopne
jmp
jo
enter
mov
movs
inc
lahf
mov
sub
jle
mov
test
or
pop
dec
pop
stc
xlat
hlt
loop
outs
xor
add
test
xchg
cmp
popf
dec
mov
add
add
das
adc
bound
cwde
mov
mov
sbb
xchg
push
or
add
repz
dec
popa
lock
aaa
cs
loope
scas
adc
push
or
sbb
(bad)
popf
imul
idiv
push
or
sbb
xlat
xchg
cmps
mov
cld
sub
gs
test
sub
ror
push
push
das
sahf
nop
xor
out
pop
xor
and
mov
and
cli
mov
inc
shl
fs
xor
push
shl
in
inc
imul
lods
outs
dec
add
jne
stos
mov
repnz
pop
push
fiadd
dec
inc
sbb
int
fwait
dec
repz
std
gs
test
push
pop
sbb
adc
repz
pop
or
(bad)
mov
jge
sub
ins
fnstenv
stos
pop
inc
xchg
jecxz
add
cmc
fistp
sbb
mov
mov
pushf
ja
xor
push
in
in
mov
xchg
cli
out
dec
ret
add
daa
aas
lds
js
ja
jae
and
adc
pop
repz
cmps
bound
aas
and
mov
dec
push
jb
inc
call
mov
push
jno
daa
adc
mov
lock
movs
jmp
mov
loop
addr16
mov
lods
mov
int
sub
push
popa
(bad)
shr
add
(bad)
inc
jle
(bad)
hlt
imul
loop
repz
mov
in
add
loope
in
mov
mov
or
cmp
stos
add
icebp
icebp
cmc
clc
jne
aas
jmp
cmp
add
and
xchg
adc
repz
pop
fisubr
(bad)
adc
sbb
fwait
lahf
ins
push
ja
into
sbb
add
dec
pushf
adc
xlat
or
xor
dec
test
mov
push
int3
sub
pop
jno
aam
js
or
aam
pop
out
push
out
fidiv
xchg
sar
out
mov
fstp
std
sub
mov
ret
push
stc
push
stos
add
jnp
push
mov
mov
mov
mov
sahf
cmps
xlat
out
aad
jo
(bad)
dec
sbb
mov
jae
sub
nop
je
jge
mov
iret
mov
sahf
jmp
adc
cmps
ss
les
add
xchg
iret
std
push
shr
pop
pop
or
mov
dec
stos
call
pop
inc
push
shr
mov
sub
inc
adc
push
movs
ret
jl
mov
cmp
imul
fucomi
and
retf
push
mov
push
inc
xchg
and
dec
fmul
loope
mov
mov
xlat
mov
mov
call
fidiv
sbb
push
retf
and
pushf
and
sbb
shr
dec
or
in
jmp
xchg
bound
push
and
cmp
dec
mov
(bad)
repz
(bad)
pop
add
mov
sar
sub
push
push
or
pop
or
dec
mov
mov
sub
(bad)
call
dec
push
retf
push
jo
fs
and
sti
fstp
cli
and
out
cmp
mov
xor
jo
cmp
mov
jo
sbb
enter
div
fs
cmp
xchg
shr
cdq
sbb
or
cmp
push
pop
lods
out
jge
shl
inc
add
inc
pop
test
lock
movs
(bad)
jmp
shl
dec
fld
pop
inc
xor
mov
shr
retf
lods
outs
cmp
push
push
mov
or
mov
adc
fcomi
je
stc
cmps
(bad)
cmp
jne
sahf
and
in
je
or
jp
clc
dec
je
cmp
movs
sbb
dec
jmp
lods
jg
in
mov
push
rep
call
or
jge
mov
push
shr
pop
jmp
imul
lahf
fisub
jns
xor
xchg
pusha
sti
dec
nop
stos
fidiv
push
test
adc
pop
cmp
das
xchg
sbb
retf
int3
jmp
fs
push
test
fucomp
fwait
scas
xchg
mov
in
or
pop
stos
inc
movs
jecxz
fisubr
call
sti
leave
mov
pop
inc
jo
sub
in
mov
shl
inc
mov
add
daa
addr16
mov
xor
xor
loop
enter
mov
(bad)
cld
iret
mov
outs
or
inc
setge
clc
jl
ja
jge
leave
push
or
dec
inc
pop
cmp
scas
mov
and
dec
add
xchg
sub
aad
mov
or
mov
mov
push
push
in
call
sub
add
call
mov
pop
enter
sub
out
mov
test
enter
mov
test
(bad)
mov
mov
jo
cmp
xor
lahf
es
lea
das
pop
cmp
jne
loope
sti
pusha
jmp
sbb
lock
sub
jp
xor
popf
retf
stos
(bad)
in
adc
retf
mov
add
sub
push
ffree
arpl
cmp
sub
outs
cmp
jo
in
jp
mov
jp
rcl
pop
addr16
sbb
scas
push
not
mov
iret
cwde
into
cmp
xchg
jmp
addr16
ror
jne
adc
xor
data16
mov
daa
jmp
nop
lods
js
xor
hlt
mov
mov
data16
sub
ror
add
loope
xor
int3
mov
jae
fcmovnb
mov
inc
int
add
mov
or
rcr
add
fwait
xor
mov
adc
cmovbe
jno
push
and
xchg
dec
sub
dec
ror
bound
sbb
sbb
cs
lods
adc
je
pop
xor
mov
sbb
push
inc
mov
into
shl
inc
cmps
dec
cmp
pop
adc
mov
xor
xor
(bad)
ins
aas
mov
inc
lds
jnp
cmps
cmp
movs
test
inc
mov
xor
pusha
jge
push
mov
mov
mov
movs
add
out
cmp
test
mov
push
cmp
mov
cmp
jecxz
rcr
lock
stos
sbb
push
jne
pop
dec
aas
sbb
jge
in
rcl
jg
inc
sub
pop
inc
push
clc
push
adc
and
mov
dec
outs
mov
sahf
mov
add
lahf
jp
aaa
js
mov
add
repnz
js
das
test
cmp
test
aam
sahf
cld
outs
bound
dec
out
(bad)
adc
jmp
mov
jno
hlt
test
mov
test
(bad)
lods
das
les
xor
rol
jecxz
popa
push
sub
xchg
xchg
jb
xchg
in
das
aas
mov
dec
or
add
rcr
xor
dec
pushf
mov
lods
pop
std
xchg
ds
mov
lahf
arpl
or
adc
inc
in
out
mov
mov
and
das
jnp
cs
jle
cmp
(bad)
and
aas
mov
test
inc
sub
and
pop
movs
repnz
inc
fdiv
(bad)
mov
iret
xor
xor
hlt
stos
ret
mov
add
or
sub
cmps
lahf
shr
imul
mov
std
sbb
ret
sub
cmp
xchg
jns
or
mov
bound
mov
mov
or
call
cmp
mov
push
pop
fs
inc
lea
xchg
mov
sbb
rol
push
inc
cwde
xlat
mov
adc
pop
mov
(bad)
scas
data16
xchg
aad
cld
mov
sbb
scas
call
add
in
out
xchg
mov
mov
(bad)
scas
push
imul
aaa
push
mov
push
in
dec
mov
and
inc
jb
add
scas
hlt
shl
adc
jl
imul
(bad)
enter
inc
jp
adc
push
or
pop
pop
xlat
jnp
jle
je
cli
test
enter
xor
sub
ins
jne
cdq
mov
pop
mov
mov
push
xchg
mov
pop
mov
call
sbb
mov
cmp
pop
rcr
out
xor
retf
(bad)
push
lock
gs
mov
jg
in
in
and
in
lahf
push
popa
adc
mov
fisttp
enter
mov
push
stc
push
repz
aas
jecxz
mov
popa
div
xchg
and
and
push
jmp
fistp
fwait
xor
cmps
ror
cmp
jae
push
inc
arpl
inc
inc
sbb
pop
out
hlt
inc
test
ret
sbb
and
jb
or
mov
adc
pop
mov
sahf
sub
imul
test
cmp
and
cmp
mov
mov
jp
inc
jae
ins
sbb
mov
pop
mov
cmp
xor
xor
and
sbb
or
mov
test
pop
add
popf
jbe
add
mov
and
cmp
cmps
pop
mov
cmps
lods
or
pop
leave
xor
stos
retf
xchg
inc
js
and
xchg
into
lods
outs
iret
(bad)
hlt
mov
jecxz
(bad)
not
pop
mov
xchg
adc
push
jg
pop
sub
in
mov
das
fwait
mov
les
pop
add
dec
add
or
inc
or
mov
das
(bad)
mov
scas
(bad)
fadd
stos
sub
cli
shl
jmp
and
or
mov
add
pop
int
(bad)
push
mov
rcr
outs
inc
mov
nop
pop
add
pop
mov
adc
pop
xor
jle
xor
cmp
sub
aaa
stos
jb
arpl
pop
pusha
enter
js
lds
pop
or
int
jmp
adc
scas
in
scas
and
cmc
bnd
std
jae
imul
jl
cld
shr
fmulp
arpl
fidivr
(bad)
cmp
mov
rol
lds
test
fnstsw
jae
xchg
shl
or
aam
(bad)
shl
adc
adc
or
jne
push
scas
mov
ret
xor
xor
or
fs
cmp
jp
push
rcr
rcl
mov
sahf
rcr
data16
mov
mov
cmp
or
xchg
jns
js
daa
xor
pop
jae
call
iret
shl
push
pop
mov
jl
mov
mov
ror
or
push
fsub
lds
movs
leave
icebp
jge
sub
jecxz
add
or
pop
cmps
add
call
adc
xchg
lea
test
sub
ins
mov
mov
adc
adc
pop
xor
jo
inc
and
push
jns
loopne
or
jmp
loopne
mov
pop
or
cmp
mov
popa
cli
jnp
retf
mov
jbe
ins
jmp
sbb
mov
lods
retf
aad
and
sahf
out
sub
or
lea
dec
cld
jl
dec
mov
stos
jle
pop
xor
ins
dec
mov
rol
and
pcmpeqb
jns
pop
xchg
adc
sbb
test
pop
xchg
xchg
lods
pop
in
push
xor
jp
jg
lods
inc
pop
or
adc
out
cmp
arpl
cmp
adc
mov
inc
les
or
imul
xchg
retf
mov
les
cmp
jge
or
pop
hlt
mov
push
xchg
fcom
xchg
addr16
sub
fisubr
cmps
hlt
bound
xor
jb
push
mov
in
or
push
in
add
push
out
pop
push
lock
mov
xlat
cmp
fwait
xchg
into
pop
inc
mov
xchg
push
pop
sub
mov
aaa
inc
mov
clc
inc
pop
jb
fsub
push
les
xor
xor
int3
mov
adc
add
(bad)
mov
sub
push
out
push
test
inc
push
js
jmp
icebp
add
pop
mov
jmp
fchs
mov
call
sub
outs
jp
add
bound
mov
inc
add
pop
(bad)
sbb
clc
retf
ret
fs
pop
or
nop
ins
dec
jae
retf
push
fwait
shr
pop
xchg
or
in
pop
out
dec
push
or
cmp
rcr
mov
and
imul
or
cmovae
aas
or
lods
xor
mov
ror
wbinvd
cld
add
dec
int3
mov
pop
mov
leave
sub
inc
jbe
xor
jae
shl
mov
imul
cmovo
(bad)
and
inc
jmp
(bad)
jae
push
fs
xchg
ret
add
mov
adc
jae
cli
mov
std
mov
fwait
mov
outs
into
cs
repnz
cmp
cmp
fnstsw
cli
jb
jns
ror
jge
cwde
sbb
or
push
popa
bound
xchg
push
and
ins
cdq
popa
loope
mov
jecxz
aad
or
mov
pop
cdq
cmp
idiv
xor
clc
cmp
bound
xor
mov
cmc
shr
sbb
mov
xchg
mov
std
dec
xor
inc
idiv
mov
xchg
loope
je
mov
loopne
push
add
rol
daa
sbb
mov
sbb
dec
mov
jl
bound
mov
xor
jnp
and
add
rcr
push
cmc
into
mov
push
mov
ins
loopne
test
dec
popw
pushf
dec
adc
and
mov
cmp
sar
sbb
xor
cmp
scas
inc
cmp
sbb
stos
jge
add
mov
movs
aas
pop
loope
call
test
lods
xchg
enter
push
inc
mov
xchg
out
cmp
push
mov
into
aas
mov
push
inc
dec
adc
bnd
mov
lds
adc
dec
(bad)
std
mov
addr16
(bad)
dec
fucom
push
add
sbb
(bad)
sbb
sar
push
adc
jecxz
xor
sar
test
xor
push
cmps
mov
into
outs
stc
ffreep
sbb
imul
lahf
adc
pop
and
xchg
jnp
repnz
mov
leave
les
aaa
pop
retf
push
mov
xchg
stos
pop
pop
vmovlpd
sbb
xchg
pusha
push
js
push
mov
dec
test
pop
pusha
in
jno
fs
test
or
sub
cs
or
stos
xchg
push
cli
mov
cmp
cwde
aam
sbb
out
sub
cmps
cs
leave
ror
neg
(bad)
push
and
push
scas
and
hlt
div
push
enter
sti
adc
xchg
inc
push
xor
mov
out
xor
add
shr
ins
pop
pop
stc
dec
je
or
shl
int
xor
xchg
mov
inc
nop
pop
int3
push
test
ss
lahf
ja
jns
pop
clc
rol
adc
into
scas
pop
dec
and
lock
fs
lods
or
and
xchg
fcmovbe
adc
scas
add
mov
es
mov
mov
adc
add
adc
sub
das
cmp
fbld
cmp
or
adc
mov
sti
mov
pop
or
loope
and
test
call
scas
sbb
sub
xchg
cwde
(bad)
nop
movs
out
aad
fucomi
cmp
rol
ja
push
and
push
not
fwait
jbe
mov
fst
mov
rcr
adc
inc
iret
rol
call
push
pusha
cmp
adc
(bad)
cmps
mov
pop
pop
add
(bad)
push
xchg
mov
icebp
leave
fld
aas
pop
or
push
(bad)
and
out
pop
cli
cmc
pop
hlt
aad
pop
neg
and
ficom
xchg
call
dec
xchg
les
push
sbb
mov
sar
pop
ds
sub
jnp
dec
jecxz
repz
das
fsubr
mov
mov
loop
xchg
mov
and
cli
adc
mov
and
inc
and
mov
cwde
xchg
out
scas
jne
cmps
push
aad
shl
ins
mov
outs
add
mov
jp
pause
or
cwde
sbb
xchg
jmp
mov
outs
push
push
jle
out
dec
fisttp
and
jb
push
jl
inc
mov
inc
xor
pop
adc
mov
sahf
daa
mov
out
repz
mov
pop
mov
xor
ja
jmp
int3
jmp
cmp
hlt
xchg
jg
push
fistp
arpl
sbb
in
add
fwait
ret
or
xor
std
mov
imul
jbe
shr
or
fisttp
into
mov
aam
xlat
cmp
inc
mov
sub
repz
test
jne
pop
push
data16
add
xlat
dec
lods
ins
sub
push
add
dec
sbb
push
test
ret
(bad)
jbe
stc
test
cld
loopne
in
mov
arpl
sub
adc
cmc
jmp
dec
(bad)
mov
movs
(bad)
imul
nop
sub
into
inc
add
jp
adc
dec
popf
pop
jb
pusha
mov
pop
mov
(bad)
(bad)
push
adc
in
arpl
lods
dec
push
push
add
(bad)
inc
imul
data16
mov
pop
adc
dec
and
sahf
ret
fldcw
and
pushf
mov
leave
sbb
and
cmp
frstor
nop
int3
into
mov
add
mov
clts
mov
mov
push
scas
dec
enter
adc
dec
retf
jbe
jmp
(bad)
xchg
ins
aam
mov
adc
and
push
mov
fdivr
mov
test
or
sbb
xor
cmp
mov
in
out
push
int
mov
cmp
movs
sub
add
mov
daa
ss
loop
push
inc
int3
repz
ja
stos
(bad)
jae
lods
ins
mov
scas
jbe
mov
or
fistp
mov
imul
scas
mov
test
xor
das
sub
and
inc
test
cmps
mov
out
not
mov
ret
and
fsub
(bad)
out
cmps
xor
cmp
fisubr
test
inc
int
test
dec
in
cmp
jle
push
and
fwait
push
arpl
adc
into
fst
addr16
enter
push
shl
popa
cmps
fdivr
mov
sbb
add
xchg
pop
xchg
jg
pop
or
pop
mov
pop
mov
dec
lods
jb
stos
addr16
cdq
ficom
ds
inc
in
lds
pop
shl
lds
movs
mov
pop
sub
add
mov
ins
and
mov
mov
push
dec
mov
fs
push
cmp
sub
inc
sbb
mov
iret
cli
or
jne
(bad)
int
out
lds
aas
mov
pop
sub
ja
jns
lods
ret
ret
or
inc
rcl
mov
dec
push
mov
popf
arpl
add
xchg
pop
pop
adc
(bad)
mov
cmp
sub
test
adc
xor
aam
popa
mov
repnz
lea
or
jbe
xor
add
mov
jno
test
sbb
push
add
ins
stos
movs
pop
push
aam
popf
cmps
sub
test
aam
push
pop
xchg
mov
out
rol
cdq
dec
mov
jb
mov
mov
xor
fcmovb
and
xchg
mov
inc
je
ror
ins
hlt
dec
je
adc
daa
sub
dec
lahf
cs
(bad)
mov
leave
aas
repz
fs
mov
(bad)
arpl
sbb
mov
sti
lods
sbb
pop
jae
cmp
pop
retf
test
(bad)
mov
(bad)
xor
dec
pop
in
push
xlat
or
lods
and
sbb
cdq
mov
int
or
jno
jmp
test
mov
push
(bad)
movs
sbb
jnp
push
ins
pop
repz
stos
and
dec
pop
pop
(bad)
dec
sub
or
jge
hlt
adc
loopne
jmp
sbb
cmc
mov
push
mov
in
cmp
or
pop
sbb
pop
mov
shl
mov
gs
add
(bad)
std
cmp
push
adc
in
out
int3
adc
outs
clc
loope
sub
lea
jae
inc
pusha
or
or
add
pop
mov
and
pop
sbb
ret
(bad)
in
sar
mov
xor
mov
xchg
imul
mov
nop
fidivr
sbb
repz
xchg
les
and
aad
sub
pusha
xor
xor
into
inc
mov
sub
jmp
pop
xlat
jp
repz
jmp
or
and
cmp
inc
dec
inc
cli
dec
jp
jae
cld
or
xor
movs
push
dec
adc
fdiv
dec
clc
retf
cmp
lahf
xchg
adc
add
xchg
popf
call
adc
jnp
fcom
xlat
movs
or
mov
push
add
out
xor
cmp
inc
cld
das
push
(bad)
stc
sub
mov
bound
retf
mov
enter
and
jle
xchg
mov
test
call
mov
enter
icebp
int3
or
sbb
xchg
and
inc
fst
inc
push
and
and
jmp
fldenv
arpl
xor
(bad)
cdq
sbb
and
in
cmc
jo
in
je
pop
xchg
adc
pop
dec
stos
sbb
arpl
add
sbb
sahf
test
pop
ja
ret
cli
and
addr16
aas
ret
fcom
push
cmp
mov
mov
out
or
(bad)
xor
push
(bad)
out
cmp
xor
sub
outs
icebp
shr
lods
rcl
test
test
call
test
and
mov
pop
outs
cli
sti
imul
dec
cld
mov
push
and
jmp
bound
mov
icebp
iret
jmp
mov
cmp
jmp
nop
pop
lds
pop
aam
inc
and
mov
out
inc
dec
out
popf
inc
pop
push
or
push
mov
sbb
jnp
or
repz
out
lock
push
and
jmp
out
push
sbb
push
aam
imul
(bad)
mov
movs
in
pop
or
jecxz
cmps
mov
mov
aad
mov
or
xchg
lea
sbb
or
aas
sbb
mov
sbb
into
mov
ja
enter
xchg
rol
add
daa
push
(bad)
ds
dec
(bad)
sti
out
ins
sbb
xchg
mov
push
aas
inc
dec
jo
xchg
push
mov
inc
mov
inc
inc
addr16
adc
je
call
retf
pop
shl
fs
cmp
inc
(bad)
lock
sub
dec
mov
xor
ds
repz
mov
sbb
ins
movs
or
mov
cmp
xchg
adc
std
jno
jno
lahf
pusha
pop
mov
fimul
cmc
push
nop
xchg
cmp
les
je
sub
sbb
les
jmp
xchg
and
out
lds
xor
xchg
not
inc
xor
stos
jmp
repz
pop
add
push
mov
cmp
push
mov
or
stc
lods
pop
out
cs
cdq
sti
xchg
fsubp
rol
outs
clc
das
(bad)
ja
fstp
sub
mov
test
jl
in
test
sti
xor
into
or
add
cmp
mov
gs
leave
sbb
cmp
mov
cmp
jns
xlat
adc
daa
mov
lea
not
loope
imul
out
loop
rcl
ror
adc
or
or
es
aaa
int
xchg
mov
xor
and
ja
ror
mov
jno
sub
add
loopne
cld
push
xchg
push
idiv
cmp
inc
loope
cmp
and
sar
outs
js
sub
and
or
xor
inc
cmp
hlt
mov
pop
imul
pushf
xchg
arpl
lock
sub
mov
fsubr
and
popa
lods
dec
je
pop
pop
xchg
pop
loope
pop
cmp
push
sar
pop
pop
push
pop
loop
xchg
and
dec
enter
loop
aam
mov
jo
pop
mov
jp
inc
(bad)
je
xchg
dec
adc
outs
lahf
repnz
stos
repnz
je
bound
pushf
inc
push
sub
aad
jp
jle
adc
pop
aaa
enter
hlt
xchg
jae
sub
stc
pusha
retf
or
jbe
pushf
movs
stos
cmp
sub
jae
mov
ds
jno
mov
fimul
cld
cmp
sub
and
mov
sbb
imul
daa
jl
nop
les
mul
test
jns
lods
pop
out
ss
cmp
popa
and
(bad)
push
push
sahf
mov
pop
jae
cmp
cmps
ja
dec
mov
aas
or
mov
cmp
xor
sar
xchg
push
scas
rcr
push
in
call
in
pop
call
cmps
out
iret
repnz
shr
lds
push
pop
and
mov
enter
jbe
mov
cmp
test
mov
int3
push
sub
jo
dec
mov
push
cld
jo
pop
inc
sub
mov
jle
jno
pop
es
daa
xchg
mov
sub
fdiv
sub
mov
pop
or
add
jp
js
cmp
xchg
add
sahf
xor
mov
shl
vshufps
call
and
sub
lea
int3
pop
std
jl
nop
jne
stos
icebp
mov
cmp
(bad)
push
iret
std
dec
cmp
adc
pop
or
sbb
push
lods
fstp
idiv
into
xor
cmp
or
fild
xchg
js
sahf
jecxz
push
cmp
push
sbb
push
aad
call
inc
mov
mov
test
js
mov
xor
dec
jge
sbb
ret
(bad)
std
jle
ins
jle
iret
or
push
push
push
out
mov
add
nop
sub
test
mov
outs
rcl
(bad)
jmp
std
dec
and
out
adc
dec
xchg
mov
xor
clc
aad
xchg
inc
mov
das
aad
fucom
(bad)
popf
cmp
jle
add
inc
inc
jbe
push
jle
and
adc
xchg
loope
addr16
mul
lods
(bad)
hlt
fcomp
lea
push
push
mov
and
sub
es
arpl
add
out
(bad)
fstp
mov
xor
iret
xor
aam
jge
js
pop
adc
arpl
fwait
mov
xchg
adc
ins
and
shr
jnp
scas
pop
xchg
ror
adc
sahf
loopne
pop
adc
inc
jo
mov
sahf
adc
(bad)
ins
mov
sbb
adc
jbe
in
jmp
push
cmp
(bad)
mov
push
rol
jg
jnp
loop
int
adc
pop
sub
mov
adc
(bad)
shl
add
mov
out
add
popa
mov
mov
and
jmp
xchg
out
and
jmp
inc
test
cmp
mov
mov
call
dec
mov
out
out
mov
leave
xor
loopne
add
push
xchg
ror
mov
inc
popf
mov
push
pop
rcl
dec
mov
rcr
(bad)
xor
sbb
in
mov
pop
data16
sbb
push
je
jns
(bad)
or
sub
psubusb
jno
aam
mov
dec
popf
cmp
aam
pop
cld
(bad)
cld
dec
jp
inc
loopne
pop
inc
xor
cmp
adc
sbb
test
icebp
cwde
push
out
mov
std
xor
js
pop
enter
lds
mov
in
inc
cli
push
popa
lea
mov
rcl
sbb
(bad)
in
cmps
jecxz
jmp
push
mov
mov
adc
dec
daa
loope
retf
adc
repnz
cmps
mov
or
pop
dec
add
imul
and
xchg
jne
sub
fs
push
ins
jns
add
mov
fist
pmullw
cmp
adc
shl
inc
xchg
pop
sar
ret
or
xor
push
nop
mov
addr16
cmp
push
or
adc
rcl
inc
inc
pop
push
lods
test
mov
push
nop
push
jno
xor
repz
mov
mov
or
sub
inc
mov
stos
adc
aam
jnp
adc
push
push
add
addr16
out
gs
push
cwde
loope
loop
jns
ja
mov
inc
sbb
ret
pop
js
outs
push
je
push
inc
sbb
aas
xchg
jmp
pop
cmc
imul
pop
sbb
xchg
test
out
mov
fimul
jg
xor
cs
mov
mov
mov
sbb
shr
addr16
jl
jp
dec
inc
push
inc
jg
mov
lods
xor
jmp
cmp
mov
movs
in
pop
call
inc
inc
fs
and
inc
sub
aaa
mov
ror
push
jns
add
iret
(bad)
call
cmp
sti
fsub
xor
push
sub
call
push
sub
iret
xchg
cli
mov
adc
sbb
movsx
jl
pop
das
xor
mov
xchg
sbb
loopne
mov
ss
jmp
rcl
jbe
in
cmps
jle
loopne
push
xchg
stos
mov
or
clc
push
fistp
loopne
sbb
inc
outs
(bad)
enter
retf
dec
xlat
cmp
xchg
std
fild
cmp
das
dec
fs
cmps
or
and
push
sub
push
mov
xchg
xchg
retf
in
jnp
sbb
mov
jl
outs
add
in
xchg
pop
xchg
addr16
jae
in
pop
out
in
inc
imul
dec
cmp
out
or
sbb
leave
sub
or
call
add
and
pop
jmp
out
lahf
hlt
sbb
lock
jns
sbb
pop
cmp
clc
leave
out
pop
inc
sbb
mov
jb
jb
or
add
sub
lahf
sub
add
aad
mov
setl
inc
popf
loop
or
pushf
mov
rcl
pop
call
aad
hlt
icebp
push
syscall
dec
aaa
dec
push
dec
mov
mov
mov
push
fcmovnb
add
cmp
push
scas
xor
add
push
pop
and
das
imul
in
cmp
adc
xchg
ss
pop
mov
push
jecxz
daa
jb
jbe
push
push
pop
dec
cwde
pushf
jne
repnz
movs
pop
fisub
sbb
mov
push
xchg
or
lods
sar
daa
cwde
sub
lods
popf
into
inc
xchg
cdq
adc
lea
lods
jmp
push
int
push
int
add
add
cmp
cmps
and
xor
call
jg
inc
shl
leave
popf
push
sbb
sbb
ja
and
jne
and
sub
cmps
mov
rcr
or
out
mov
jle
sub
js
clc
pop
pusha
aaa
sti
test
cmp
pop
pusha
clc
push
int
repz
or
add
mov
ins
push
test
movs
test
inc
push
mov
in
xlat
ret
fucomp
in
ins
lahf
cmp
pop
sbb
loope
mov
es
and
mov
cmp
data16
xor
bts
cmps
add
out
add
ins
not
cmp
pop
xchg
fldenv
loop
mov
xchg
jmp
ins
aad
fwait
icebp
enter
push
mov
add
mov
std
lods
lds
dec
scas
out
inc
cmp
jge
lods
addr16
fs
mov
mov
(bad)
shl
inc
push
mov
lds
cmp
cmps
xor
sbb
jbe
(bad)
out
out
arpl
cmp
fistp
adc
mov
inc
cmp
mov
lahf
not
adc
pop
mov
xlat
pop
cmc
adc
jnp
stos
pushf
xchg
and
add
out
inc
and
or
fstp
(bad)
mov
inc
loop
pop
sbb
xor
dec
and
pop
sbb
loopne
inc
rcl
push
adc
jecxz
and
stos
mov
push
mov
mov
pop
mov
sub
push
mov
and
mov
out
push
jg
inc
or
(bad)
(bad)
and
idiv
dec
ins
je
xchg
mov
in
fidiv
fsubr
add
fidiv
mov
ja
sub
data16
ffree
ror
inc
sbb
vpunpcklbw
inc
adc
mov
mov
movs
dec
pop
std
jne
jbe
add
call
jnp
into
pop
cmp
ja
mov
and
mov
daa
clc
scas
pop
cmp
push
popf
or
xchg
mov
mov
pop
and
mov
stos
add
(bad)
or
mov
or
mov
stc
dec
jbe
dec
push
xor
mov
paddsw
dec
xor
ret
mov
and
icebp
(bad)
jge
in
lods
scas
xchg
push
cmps
(bad)
shl
in
scas
repz
in
sub
or
call
sbb
mov
stos
(bad)
into
pushf
and
jmp
pop
jp
jb
lds
bound
and
add
addr16
imul
push
cdq
jb
and
outs
inc
out
out
sub
and
jae
and
sub
arpl
shl
cmp
sti
or
mov
fcomp
xlat
push
cmp
xchg
in
into
mov
mov
push
pop
lahf
dec
sbb
pop
jb
inc
std
(bad)
xlat
das
movs
sub
ja
lock
addr16
xor
cmc
in
fwait
xlat
xchg
dec
cs
dec
adc
dec
or
push
test
xchg
pusha
mov
mov
aas
rcl
aas
cmp
mov
jle
sbb
mov
aam
sbb
mov
mov
cmp
push
mov
or
adc
mov
les
ss
dec
ins
movs
xchg
add
out
and
cmovb
mov
mov
pusha
pop
inc
out
lea
inc
call
sbb
xchg
xchg
sbb
arpl
jmp
and
mov
or
xor
imul
leave
shl
push
pop
loope
int
cwde
sbb
in
mov
dec
fnstcw
or
out
sbb
add
ss
jmp
dec
pop
ret
jns
pop
mov
adc
ror
push
push
sar
jo
popf
push
cmp
add
or
or
(bad)
out
dec
mul
ret
mov
push
and
pop
leave
out
xchg
mov
(bad)
movs
push
inc
mov
xchg
pop
leave
mov
dec
fwait
fs
clc
hlt
jl
in
enter
cdq
shl
sub
inc
pop
rol
add
lods
inc
add
dec
mov
mov
mov
fs
dec
hlt
pusha
inc
in
das
mov
xchg
push
add
push
dec
cdq
sbb
fs
inc
sahf
xor
imul
mov
mov
stos
inc
and
and
sbb
(bad)
fwait
mov
sahf
leave
xor
popf
in
(bad)
iret
rcl
sar
xchg
and
add
mov
mov
(bad)
es
pop
lods
jmp
mov
cdq
bound
jnp
into
xchg
ret
add
add
dec
inc
int
loopne
mov
movs
movs
mov
js
xchg
sub
add
dec
mov
icebp
outs
push
sbb
aam
sub
rcr
push
push
xchg
inc
mov
inc
sub
inc
(bad)
fcom
jae
cs
jns
int3
inc
mov
jl
inc
pop
pop
add
push
icebp
lock
dec
loop
inc
ds
hlt
jle
jl
imul
xchg
ins
sbb
and
icebp
dec
adc
mov
mov
or
call
cli
in
pop
mov
fimul
ret
sbb
ret
adc
sub
inc
jae
xlat
or
adc
arpl
imul
cmp
push
sar
or
push
nop
arpl
sbb
add
call
sbb
xchg
std
sbb
push
test
sbb
dec
mov
xchg
out
stos
retf
ret
call
loop
stos
jns
push
push
mov
movs
push
mov
int3
jecxz
mov
out
enter
sbb
pop
std
jo
aaa
pop
repnz
xor
dec
push
or
adc
jne
push
xor
jne
push
ret
add
adc
(bad)
fcomp
int3
pop
loopne
pusha
hlt
mov
cmp
in
or
and
and
rol
pop
add
jae
dec
xchg
jge
fistp
add
xor
cld
daa
call
ins
in
fnstcw
or
dec
test
pushf
push
loope
movs
mov
and
int
sbb
pop
cmc
(bad)
xor
arpl
pop
test
inc
scas
std
pop
je
and
fnsave
push
cli
aad
cmps
and
xchg
shr
test
inc
dec
and
or
jmp
rol
cli
dec
aam
popf
jmp
out
or
shl
out
adc
xor
mov
or
stos
out
adc
inc
mov
mov
shl
aad
ins
ja
mov
and
sar
sbb
mov
scas
jo
sbb
mov
int
cmps
pop
fadd
(bad)
fwait
xchg
loopne
das
and
shl
sbb
test
test
retf
cld
inc
rcl
or
fimul
sbb
xor
xchg
mov
fbstp
clc
arpl
jmp
lahf
fsubr
jo
sbb
int
dec
sbb
outs
jle
retf
add
adc
outs
add
cmp
push
sbb
cmp
std
retf
inc
jmp
dec
mov
test
hlt
push
lea
aaa
pop
inc
mov
mov
scas
cmp
lds
xlat
xor
das
mov
(bad)
in
fidiv
add
dec
mov
xchg
pop
rol
repnz
push
idiv
mov
not
ja
dec
pushf
jmp
imul
stos
stos
push
mov
mov
jno
mov
jecxz
sbb
dec
xchg
xor
push
or
ds
shr
rcl
cmp
pop
jmp
xor
std
cmps
out
inc
fistp
mov
xor
mov
jne
push
imul
(bad)
daa
xchg
mov
in
nop
mov
xchg
js
xor
test
cli
mov
call
ror
fcomp
jmp
jp
lea
pop
rcr
or
mov
shl
shl
jge
cmp
clc
cs
shl
into
xchg
jl
push
test
mov
movs
mov
shl
xchg
aaa
mov
fs
inc
sbb
and
cmp
stc
xchg
rcr
lock
jbe
push
mov
mov
inc
ret
xor
nop
xchg
test
xchg
ins
jge
nop
push
sub
je
dec
sub
lock
ins
icebp
(bad)
int3
in
mov
cmp
int
xchg
cmp
push
or
test
or
push
lods
mov
adc
mov
ins
arpl
xor
mov
psubb
loop
mov
xor
sub
scas
fs
xchg
cmps
inc
or
(bad)
cmp
push
sbb
cmc
cld
mov
jno
dec
das
pop
jne
out
call
sub
mov
pop
scas
call
adc
stos
inc
rcr
sti
test
fimul
popa
inc
pop
jmp
push
inc
pop
pop
xor
and
cmps
ss
cmp
mov
cmp
jne
mov
aas
mov
inc
inc
cwde
push
lods
jmp
lahf
jbe
cmp
pop
inc
xor
int3
xor
xchg
shl
rcr
ret
loope
clc
jl
fidivr
inc
cs
mov
fild
imul
cmp
xor
dec
pop
push
(bad)
outs
mov
push
fcomp
mov
test
jmp
sbb
arpl
movs
js
mov
mov
inc
xor
jb
addr16
xchg
(bad)
in
cmps
push
and
adc
jae
push
fsub
xlat
pop
test
jle
shl
scas
rcr
and
sub
and
dec
jmp
inc
inc
pusha
inc
mov
push
arpl
popf
js
dec
mov
dec
ret
pop
push
movs
sub
and
add
jle
sub
push
stc
jecxz
cmp
fdiv
mov
pushf
mov
mov
cmc
or
cmps
retf
outs
push
pop
pop
gs
(bad)
sub
cmp
sbb
in
xchg
cmps
mov
ret
sbb
cdq
outs
and
out
popf
sub
sub
mov
out
test
sbb
jo
push
jl
adc
in
xchg
adc
inc
scas
mov
xchg
pusha
jp
arpl
sub
dec
cmp
gs
imul
mov
dec
inc
sbb
add
fimul
dec
pusha
leave
hlt
(bad)
imul
mov
and
ja
inc
add
rol
push
into
or
push
jo
xchg
cmps
addr16
or
dec
lock
mov
enter
mov
lock
xor
mov
pop
xor
out
psubsw
sbb
test
jmp
inc
or
call
push
movs
mov
lahf
clc
sub
cmp
cmp
scas
inc
dec
cmp
cmc
das
sbb
mov
addr16
add
call
cmp
mov
and
cmps
(bad)
retf
addr16
ins
push
xor
sbb
aas
cmp
jo
pop
xchg
cmp
push
daa
jnp
or
lahf
mov
jp
push
inc
je
pop
gs
popa
mov
and
mov
lds
pop
push
test
cmpxchg
jb
mov
fsubr
adc
sub
dec
das
test
scas
and
(bad)
sub
dec
push
lods
push
inc
mov
fsubr
(bad)
or
sbb
sub
loope
addr16
sub
pop
mov
fwait
xchg
imul
out
xchg
mov
out
stos
mov
xchg
out
jge
and
pop
and
fadd
xchg
add
mov
jmp
outs
iret
shl
cmp
mov
or
imul
fwait
enter
iret
cmc
adc
mov
scas
dec
bound
push
xor
and
xchg
cmp
out
add
inc
out
cld
push
mov
cdq
popf
or
mov
and
bound
mov
inc
in
inc
fwait
retf
dec
ror
push
lds
in
mov
hlt
xchg
pop
dec
pop
cmp
loope
cli
inc
cmp
inc
pushf
jge
lock
jmp
out
pop
in
mov
mov
pop
push
inc
mov
pop
xor
movs
fbld
int
push
bound
adc
movs
jp
inc
dec
sti
pop
les
call
and
or
sub
pushf
(bad)
std
test
xor
pop
sub
or
scas
ficomp
je
ins
je
jmp
imul
in
popa
icebp
bound
jns
mul
adc
retf
les
mov
sbb
sub
jae
in
ins
in
loope
loopne
mov
adc
cmp
pop
sub
mov
movs
pop
or
mov
fisttp
push
push
xor
add
pop
retf
or
push
mov
cld
adc
popa
movs
(bad)
add
inc
clc
xchg
dec
pop
cmp
add
out
push
jo
ja
in
addr16
loop
aad
dec
imul
ret
add
je
mov
push
xchg
(bad)
jge
add
lea
sbb
lock
cwde
ins
outs
xchg
repz
mov
cmp
dec
cld
shl
inc
mov
add
retf
psrlw
sub
xchg
ja
sub
xchg
add
sub
es
hlt
ss
adc
sub
(bad)
js
test
ins
call
sub
out
fwait
in
jbe
mov
not
stos
in
inc
mov
daa
ret
sbb
add
fdivr
in
repz
mov
add
int
jmp
(bad)
hlt
es
dec
adc
cmp
test
inc
or
cmp
ja
mul
ins
lock
push
jmp
in
sub
pop
icebp
out
sahf
(bad)
aam
sbb
jmp
xchg
xor
pop
mov
(bad)
xor
pop
mov
add
rcl
inc
sub
mov
jecxz
add
sbb
cmc
dec
pop
(bad)
mov
(bad)
dec
out
inc
jle
sub
dec
xor
jmp
jo
or
pop
cmp
mov
sar
inc
out
lea
or
xor
int3
push
sub
imul
dec
push
mov
jmp
and
std
or
mov
cmp
jmp
sbb
cmp
cmp
cdq
ficom
outs
nop
lahf
int3
pop
das
outs
fmul
(bad)
pop
xchg
shr
adc
mov
pop
and
jge
inc
pop
test
xor
lock
adc
jnp
fisttp
lods
div
retf
sub
imul
sub
repnz
sar
scas
cmp
sbb
aas
xor
cmp
shr
inc
push
xchg
dec
out
jo
sub
xbegin
(bad)
sti
(bad)
push
(bad)
adc
sar
(bad)
jmp
dec
and
(bad)
sub
dec
dec
out
test
pusha
addr16
xchg
mov
jmp
repz
sbb
nop
sub
mov
mov
popf
lahf
aam
(bad)
cmp
cmp
mov
mov
test
pop
add
push
repnz
ins
dec
arpl
inc
mov
pop
lahf
out
jbe
xor
cmp
xor
mov
(bad)
push
ss
and
xor
xchg
dec
(bad)
popf
cmps
popf
or
ret
daa
call
cmp
adc
jl
gs
jo
mov
bound
push
ret
sub
jmp
xor
das
pop
leave
aad
jle
ret
sbb
mov
cs
imul
lods
into
mov
xor
in
mov
stc
dec
dec
push
adc
loop
repz
push
je
xor
jge
dec
out
mov
stos
dec
jp
inc
add
cmp
mov
gs
add
adc
inc
inc
jl
loop
in
inc
mov
mov
or
and
data16
popf
xor
je
xchg
ins
test
mov
push
xor
jle
push
and
and
adc
mov
jmp
or
repz
jmp
pop
jmp
enter
test
fwait
pop
test
adc
inc
sub
push
jecxz
and
test
test
mov
xchg
pop
or
bswap
cli
cwde
mov
(bad)
iret
xchg
pop
mov
sub
aam
mov
or
rcr
cdq
popa
xchg
loope
cmps
call
pushf
lds
enter
gs
push
(bad)
xchg
cdq
mov
or
(bad)
mov
mov
push
call
or
es
ret
jns
(bad)
mov
shr
xlat
jae
aaa
push
mov
jmp
pop
imul
popf
xor
outs
add
add
gs
sub
jg
xchg
mov
mov
bound
ret
rol
sub
push
ins
xlat
push
pop
jne
or
adc
cmps
xchg
mov
and
outs
inc
cmp
movaps
mov
out
push
and
bound
stos
adc
or
movs
lods
sub
dec
xchg
pushf
hlt
fwait
in
pop
xchg
cmps
pop
cli
and
or
xchg
pushf
loop
dec
and
enter
popf
mov
mov
dec
inc
mov
sbb
ja
push
fmul
sub
xor
mov
cmc
jmp
(bad)
jmp
push
and
jb
bound
(bad)
xchg
cmps
cmp
movs
add
push
sub
sahf
sub
imul
sar
lods
and
sti
loopne
add
mov
nop
clc
pop
ret
mov
sbb
inc
loopne
or
xchg
movs
mov
xchg
xor
cmp
and
mov
push
outs
pusha
jmp
cmp
cmp
repnz
sbb
and
xor
or
call
cmp
cmp
xlat
adc
jae
add
mov
jb
mov
gs
cmp
out
popf
cmp
push
or
js
xor
mov
inc
out
lea
sub
adc
fs
xor
pop
xchg
mov
add
inc
int
add
mov
mov
loopne
sbb
cld
adc
fwait
(bad)
jecxz
call
lods
aad
mov
lods
idiv
fbld
adc
std
popa
inc
add
movs
add
sbb
loop
xchg
shr
sbb
xor
inc
cmp
mov
test
push
mov
pop
xor
inc
setae
xor
bound
in
gs
ja
mov
sub
stos
ret
lods
adc
fst
(bad)
sub
push
and
cs
xchg
icebp
cmp
push
int3
inc
mov
push
sub
movs
int
fst
jb
and
mov
inc
iret
pop
jmp
push
fstp
js
test
pop
ss
jb
cmp
shl
push
inc
mov
push
repz
xlat
inc
cld
frstpm(287
xchg
mov
iret
or
cmp
sbb
rcr
push
sbb
cwde
pop
xchg
sub
push
fs
sbb
enter
and
jo
cmps
(bad)
retf
inc
sahf
shr
mov
lahf
mov
xor
ds
pop
push
les
ds
pusha
inc
dec
mov
add
iret
push
push
cmp
scas
mov
add
jle
cmps
push
dec
add
sahf
push
dec
xor
loop
push
pop
or
sbb
popf
inc
retf
shl
adc
xor
mov
sahf
cmp
fld
scas
(bad)
shl
sub
xlat
xor
pop
inc
mov
adc
sbb
div
aas
imul
test
pop
div
mov
pushf
and
dec
idiv
pushf
pop
mov
iret
je
cmp
and
scas
jge
inc
mov
scas
aad
jne
inc
stos
ins
int3
ror
xchg
or
(bad)
push
dec
adc
(bad)
ds
push
(bad)
mov
retf
out
xchg
or
mov
inc
jno
cwde
imul
int3
mov
jecxz
sbb
fld
shld
mov
dec
add
(bad)
fidiv
pop
push
movs
not
mov
test
adc
clc
mov
push
and
xor
sar
mov
mov
mov
push
fisttp
jmp
pop
lea
mov
fadd
or
pop
sar
add
addr16
mov
cdq
call
cli
aas
scas
popf
int3
cmp
cwde
dec
xor
and
mov
hlt
jne
sub
sub
xlat
fcomi
fbld
iret
pop
pop
pop
dec
sbb
xchg
mov
mov
lods
jmp
mov
inc
mov
or
cmp
and
shl
xchg
inc
cmp
jp
test
leave
(bad)
xor
lods
and
icebp
xchg
mov
mov
dec
cmp
sbb
pushf
lds
call
push
ret
xor
jmp
pop
mov
sahf
pop
push
xchg
jb
jae
xchg
adc
mov
(bad)
shl
jl
xor
push
das
pop
xchg
jl
push
mov
imul
mov
fistp
fisttp
cmp
pop
cmp
xor
mov
and
(bad)
mov
fild
jo
lds
pop
xor
inc
aaa
jge
into
cmps
into
xlat
add
mov
add
jne
jecxz
dec
pop
cwde
cmp
adc
mov
lahf
jmp
fldenv
cmp
mov
pop
or
xor
neg
mov
fs
stos
pop
lds
lods
push
out
sti
and
or
jo
test
xor
inc
sbb
jle
adc
inc
jns
ins
add
ins
shufps
into
test
dec
push
das
mov
adc
push
cmp
jb
hlt
repnz
jae
and
dec
test
ror
call
mov
push
adc
ds
mov
(bad)
mov
dec
cwde
sbb
xchg
push
mul
out
test
sar
retf
and
in
inc
out
fmul
or
es
(bad)
adc
and
mov
into
dec
mov
dec
push
lods
pop
in
sbb
sub
js
mov
jno
dec
pop
lock
dec
icebp
shl
sub
mov
adc
xor
jne
cmp
push
fidiv
js
mov
mov
add
das
xor
xchg
or
sub
pop
test
xchg
ret
repz
mov
fcomp
mov
jl
div
sbb
xor
adc
(bad)
mov
fs
in
push
loopne
or
popa
mov
sahf
jmp
mov
rol
imul
in
cld
cmp
ins
ja
addr16
pop
(bad)
in
sbb
pop
leave
outs
xchg
pushf
xchg
mov
mov
rol
arpl
idiv
mov
into
cli
jp
sub
mov
xor
rol
ds
sub
xor
dec
aas
sub
push
mov
jle
jmp
call
push
jno
cmp
push
or
es
aas
xor
mov
call
add
inc
mov
ret
aad
cli
and
or
test
lock
shr
(bad)
push
fldenv
out
xor
adc
and
jle
xchg
jae
jl
adc
mov
cld
popf
pop
fcom
inc
inc
or
imul
mov
arpl
xchg
sbb
jg
fistp
movs
scas
lock
xchg
push
push
mov
jle
ret
call
lahf
pop
pop
xchg
push
stos
stc
rol
adc
cld
adc
jmp
(bad)
inc
arpl
ret
cmp
mov
xchg
push
les
jb
stc
mov
pop
std
mov
loope
aad
inc
fistp
nop
jae
stos
push
xor
fadd
daa
jle
jo
movs
sub
retf
leave
out
mov
dec
lahf
ss
inc
enter
inc
les
jge
add
xor
repnz
xor
out
sbb
push
sub
aam
push
lahf
sbb
inc
jge
scas
mov
pop
mov
lahf
mov
fs
xchg
loope
cmc
pop
push
jns
and
cmc
pop
add
mov
dec
inc
xlat
sbb
and
xchg
test
xchg
adc
lahf
sbb
out
aad
sub
xchg
in
cld
mov
push
sbb
in
out
nop
call
or
loopne
pop
adc
out
jnp
dec
inc
mov
pop
dec
jbe
ret
xchg
jne
and
retf
popf
retf
and
mov
mov
xlat
push
and
lods
push
cld
mov
test
jb
test
mov
sbb
jno
(bad)
test
in
mov
pushf
jb
fcomp
std
pushf
xor
(bad)
push
xchg
test
retf
or
test
leave
pusha
mov
cmps
fsubr
push
and
xchg
pmaddwd
mov
sbb
jno
(bad)
test
iret
jg
ds
je
jmp
lods
addr16
(bad)
dec
cs
lods
sub
xchg
scas
ss
jae
push
icebp
enter
mov
ss
es
push
sbb
mov
stos
(bad)
push
jnp
rcr
cmp
adc
in
test
popa
and
dec
out
dec
adc
or
sbb
xchg
push
scas
test
jnp
outs
pop
movs
clc
jae
idiv
xchg
inc
test
cmp
xor
fisubr
test
or
pop
aad
shl
add
add
xor
dec
ja
add
jmp
sub
jmp
mov
adc
xchg
jno
inc
mov
or
cmps
ficomp
mov
or
dec
ret
xchg
aad
fcmovu
mov
outs
inc
mov
fild
adc
imul
mov
pop
and
or
jb
movs
test
lock
sbb
ja
les
fwait
dec
(bad)
push
dec
or
popf
iret
shr
inc
ss
add
test
and
xchg
(bad)
push
pop
or
iret
hlt
int3
push
popf
jecxz
pop
leave
jp
jmp
test
xor
sub
ret
adc
push
jp
dec
pusha
fisttp
jb
mov
inc
xchg
push
repnz
in
dec
add
ja
xor
adc
outs
ins
push
aaa
xor
jne
pop
mov
fsub
test
popa
sbb
ret
inc
or
popw
xchg
dec
cwde
icebp
mov
xor
add
cmp
fisttp
mov
pop
sahf
out
outs
jmp
shl
sub
jg
dec
ja
pop
mov
mov
pop
std
stos
ret
dec
rcr
add
fcomp
push
dec
addr16
add
fwait
cdq
loop
mov
retf
sbb
ss
hlt
sub
cwde
dec
cmp
jecxz
jecxz
mov
mov
fmul
jo
xchg
or
mov
jbe
jbe
jge
bound
xor
ret
cld
out
test
int
scas
jb
push
xor
push
loop
or
push
pop
hlt
mov
cmp
cmps
movs
fs
xor
test
push
lds
adc
out
jle
call
add
cmp
inc
addr16
jg
fnsave
sbb
jb
mov
jbe
sub
inc
stc
popf
out
pop
int
jne
xchg
inc
adc
mov
jp
nop
sbb
pop
add
sub
xor
(bad)
sub
leave
mov
and
ins
popa
xchg
jle
adc
xchg
sub
pop
adc
retf
pop
shl
mov
adc
and
inc
cmps
test
call
dec
jge
aad
cmp
ret
ret
pop
xchg
and
or
out
clc
sti
enter
addr16
push
call
cmps
cli
dec
sub
retf
xor
xlat
cwde
stos
fadd
cmc
xchg
jae
xor
sar
fwait
es
cmp
xchg
stos
jecxz
mov
add
ss
add
call
push
jne
pop
je
mov
std
daa
js
cmp
jnp
lds
int3
sub
mov
mov
xchg
xchg
into
xlat
inc
xchg
adc
add
aad
push
imul
aam
mov
dec
(bad)
sbb
call
adc
lea
(bad)
sbb
adc
mov
mov
or
pop
clc
in
pop
pop
shl
loop
pop
sub
sub
jno
push
or
dec
test
jo
and
jmp
cmc
pop
push
pop
gs
inc
inc
mov
mov
(bad)
clc
cmps
ss
test
dec
push
mov
into
(bad)
sbb
repnz
xlat
stc
and
lds
mov
dec
stc
movs
jo
cdq
shl
rcl
push
and
xchg
pop
dec
fild
cmp
cwde
enter
out
dec
into
ret
fild
jmp
jecxz
int3
mov
cmps
mov
sbb
dec
adc
pop
pop
jmp
inc
xchg
xchg
inc
pop
sbb
xchg
cdq
in
pop
dec
std
add
ins
ss
cmp
sub
mov
xchg
int3
sbb
pop
stos
(bad)
cdq
arpl
addr16
mov
loopne
in
push
sti
xor
add
jmp
pop
mov
mov
fnstcw
int3
es
popf
mov
and
stos
in
clc
das
add
sbb
inc
jp
add
pop
fild
mov
or
sub
loopne
nop
push
out
push
aad
or
xor
sbb
mov
jns
ins
std
cmps
retf
imul
adc
pop
arpl
scas
add
fnstcw
adc
mov
xor
int3
in
cmp
and
je
ja
rcl
xchg
sahf
inc
push
call
inc
in
mov
push
xchg
pop
or
scas
xchg
cmp
(bad)
xor
jl
stos
ja
inc
icebp
xor
jmp
dec
mov
inc
mov
push
inc
push
pop
fild
push
add
push
sub
loope
and
adc
pop
xor
mov
push
push
mov
jns
imul
retf
xor
sbb
cmp
je
iret
int3
pop
enter
popf
jl
(bad)
or
ds
push
xor
sbb
pop
push
push
ins
push
sub
push
ret
or
js
xor
mov
sbb
xor
outs
mov
push
pusha
sbb
imul
mov
addr16
pop
cmp
or
mov
jb
frstor
fs
cld
mov
aam
mov
ret
sub
mov
pop
scas
jmp
aaa
(bad)
jmp
fmul
mov
daa
lods
add
and
pop
jns
xlat
shr
(bad)
sub
push
cmp
ffreep
ficomp
jmp
imul
xchg
and
or
sbb
call
sbb
mov
add
cmp
mov
push
and
das
or
shr
jmp
xchg
mov
retf
test
loope
add
and
mov
add
sbb
sbb
shr
enter
ins
mov
lods
add
xchg
sbb
jne
xchg
add
push
out
inc
loope
pop
inc
mov
lock
shl
pusha
and
jno
push
pusha
mov
mov
fdiv
sbb
loop
push
mov
lods
push
add
inc
ret
and
xor
aam
stc
jno
shl
inc
sar
in
sbb
fstp
mov
and
loopne
shr
jecxz
sub
nop
cmp
sbb
mov
test
test
adc
pop
xor
jae
mov
lock
sub
xor
int3
adc
dec
adc
mov
mov
shr
inc
aaa
cli
xor
mov
lock
sahf
das
push
lods
fsub
pop
pusha
je
dec
shl
pusha
inc
(bad)
dec
imul
test
sti
jne
leave
(bad)
popa
add
push
daa
test
test
push
sbb
icebp
repnz
jb
out
xchg
sbb
cli
mov
mov
pop
adc
mov
es
jl
dec
xor
test
mov
cli
jge
dec
shl
xchg
xchg
pop
and
std
mov
fist
in
xchg
retf
call
in
sub
cli
cmp
and
jno
xchg
scas
mov
inc
sahf
sahf
jmp
mov
xor
stc
int3
sbb
hlt
(bad)
inc
int
jb
retf
xchg
imul
xor
rcr
test
add
add
jne
and
push
xor
inc
aaa
fwait
iret
or
out
dec
sbb
rcl
adc
call
push
mov
call
pop
or
xor
cwde
lods
(bad)
dec
sub
iret
fst
cmp
inc
xchg
cmp
mov
and
les
shr
cmp
ins
int
popf
cld
pminsw
pop
cmp
sub
xchg
rol
imul
adc
int
xchg
jns
and
add
jmp
(bad)
into
or
arpl
movs
bound
js
inc
dec
lock
clc
dec
jnp
movs
vucomiss
add
lods
lods
and
iret
sub
mov
arpl
test
(bad)
retf
adc
or
inc
push
cmps
cmps
lahf
push
adc
xor
dec
xchg
shl
addr16
(bad)
popa
data16
cmp
loopne
mov
jo
xor
ds
or
(bad)
inc
ins
(bad)
mov
imul
sbb
jle
jbe
retf
adc
int3
mov
int3
into
out
cwde
sbb
dec
xor
iret
loope
lea
adc
fild
xor
adc
sbb
xor
call
inc
pop
fldenv
or
push
retf
hlt
ror
ret
test
xchg
fcmovb
pop
jmp
leave
inc
(bad)
loopne
pop
adc
dec
xchg
sub
mov
mov
in
jge
popa
push
imul
sbb
movs
stos
les
sti
ins
pop
(bad)
mov
jp
arpl
daa
fldcw
mov
dec
(bad)
test
stos
and
push
sub
cmp
test
pavgw
in
out
fisub
stc
aas
scas
xchg
inc
retw
shl
out
jne
dec
leave
and
cli
jns
int
lds
xor
mov
call
jb
sub
add
inc
in
enter
add
pop
out
and
cmp
cmps
and
fiadd
outs
outs
in
cmp
shl
push
lods
adc
mov
mov
xor
nop
mov
and
mov
shl
and
dec
addr16
jbe
loopne
xor
jnp
out
jl
pop
jge
imul
pop
xor
mov
push
cwde
ins
sti
inc
loopne
movs
rcl
das
scas
in
lahf
int3
scas
adc
adc
test
dec
push
lods
imul
sbb
sbb
aam
int
rcr
xor
lods
mov
sbb
sti
mov
mov
cmp
icebp
(bad)
pop
pop
jg
sbb
aad
pusha
ins
adc
sbb
xchg
pop
aas
xor
push
cmps
inc
sahf
inc
and
pusha
out
addr16
jbe
jge
jecxz
daa
call
push
aaa
xor
cmps
push
push
stc
inc
push
(bad)
sub
mov
mov
stos
cmps
mov
aas
jmp
stos
jmp
inc
rep
sbb
mov
aad
gs
repnz
push
gs
sbb
repz
jmp
retf
cmps
push
jae
lock
loope
inc
shl
sahf
rcl
cwde
leave
iret
jmp
pop
test
add
sub
mov
xlat
add
out
movs
xor
ds
mov
jmp
shl
or
aas
(bad)
shr
and
push
fstp
and
repz
jg
outs
mov
aas
shl
dec
repz
jmp
sub
out
mov
test
push
out
enter
daa
jp
cli
cmp
add
movs
mov
mov
outs
leave
stc
inc
sahf
mov
jb
fld1
leave
pop
cwde
jmp
adc
push
cs
nop
adc
pushf
xlat
bound
xlat
inc
push
(bad)
int3
xor
adc
sub
pusha
aad
rcr
and
rcr
or
in
stos
xor
mov
out
mov
leave
into
and
(bad)
mov
stos
add
popa
cmp
cmp
cmps
int
int
cmp
dec
dec
xchg
jnp
loope
inc
fcmovnb
xchg
xor
scas
fcmovnb
dec
dec
push
ds
mov
pop
sub
cmp
aas
movs
cmps
(bad)
xchg
into
pop
xchg
sbb
push
(bad)
push
pop
mov
jl
jmp
scas
xor
cmc
mov
push
icebp
xchg
popa
aas
(bad)
out
mov
fiadd
neg
add
xor
call
popf
adc
dec
xor
fsubr
jno
pop
pop
fild
inc
push
ss
test
push
retf
inc
or
add
xor
dec
adc
sub
sbb
jne
push
jbe
lock
xor
mov
lds
and
mov
popf
push
push
xor
inc
mov
push
mov
inc
into
sub
cmp
jae
or
and
inc
enter
cmp
pop
popf
dec
inc
sar
push
leave
or
fidiv
mov
cmp
cwde
lock
imul
sub
sub
mul
lds
or
xor
mov
in
adc
jbe
xchg
xchg
icebp
test
popf
adc
and
cmp
lods
add
and
push
test
sub
mov
fbld
add
push
out
repnz
jb
data16
lock
sbb
pop
cmp
sub
(bad)
into
mov
retf
hlt
cmp
dec
lahf
movs
lods
aad
pop
shr
push
adc
daa
ret
xor
cmp
inc
pop
mov
cmps
mov
scas
mov
std
cmp
jl
ss
cmp
and
or
pop
jne
cmps
pop
or
inc
(bad)
out
test
mov
pop
xlat
out
daa
mov
sti
arpl
xlat
(bad)
stc
mov
dec
cmp
xor
xchg
outs
or
stos
mov
inc
inc
add
or
jmp
mov
jne
pushf
retf
int3
xchg
dec
mov
test
fincstp
and
enter
xchg
push
cmp
ins
xor
cmps
cld
fsubr
inc
fsub
jo
push
mov
sbb
pop
lock
sbb
adc
xchg
test
xchg
sbb
xor
sub
add
xchg
mov
cmps
lahf
mov
add
push
dec
stos
imul
inc
lds
xlat
and
out
fist
imul
in
jbe
pop
adc
or
xor
dec
or
inc
pop
or
sub
retf
test
(bad)
sahf
mov
das
mov
xor
sti
mov
jecxz
aad
outs
outs
mov
ror
dec
xor
fdivr
aad
test
rcr
mov
xor
add
inc
xor
mov
test
xchg
jge
mov
fiadd
pop
mov
jae
gs
in
adc
scas
jb
adc
or
imul
add
fs
jle
sbb
inc
ins
int
sub
movs
jmp
xor
pop
adc
jae
in
dec
push
fdivr
jp
jmp
dec
aaa
push
sub
fmul
ret
inc
into
sti
jbe
aas
loop
lock
arpl
adc
push
retf
enter
shl
xor
pusha
cmps
out
fucomp
dec
je
call
imul
mov
clc
adc
and
pop
mov
ins
dec
xchg
outs
inc
xchg
dec
lods
dec
push
popa
dec
dec
lock
push
inc
sbb
cli
or
cs
mov
or
daa
int
mov
mov
push
pop
out
push
and
das
stos
pop
rol
or
movs
test
aad
xor
cmp
pop
xchg
xlat
das
push
rcr
cs
lahf
sahf
inc
popa
pop
out
and
sub
aad
scas
(bad)
(bad)
hlt
xor
inc
into
imul
cmps
push
aam
mov
out
js
xchg
cmp
pushf
sbb
imul
xchg
mov
pop
or
stos
daa
mov
cdq
test
aaa
adc
jmp
sti
pop
push
xchg
pop
push
mov
repz
out
scas
mov
stos
repz
ss
mov
vzeroall
mov
data16
mov
sahf
sar
cmp
dec
push
sub
sti
inc
out
loopne
test
dec
jl
or
shl
cmp
mov
pop
sbb
push
ss
mov
push
dec
mov
in
and
ja
in
outs
popa
xchg
and
(bad)
arpl
and
and
xchg
retf
hlt
retf
mov
mov
lods
(bad)
stos
cwde
into
test
jge
or
push
clc
iret
add
xor
out
ret
push
sti
ds
shl
inc
fldcw
sub
adc
jns
xlat
jmp
xor
mov
popa
mov
and
loope
push
enter
sbb
fs
xchg
sbb
rcl
xor
jle
dec
fcom
jge
ror
(bad)
and
mov
jmp
cmovns
push
pusha
inc
jle
sub
movs
ret
adc
cwde
mov
mul
mov
imul
or
call
test
popf
add
dec
push
cmp
push
(bad)
mov
daa
retf
mov
xor
enter
aaa
loope
lahf
cmp
mov
int3
inc
mov
and
fsubr
shl
icebp
repnz
adc
xor
cld
ins
loop
(bad)
fiadd
sar
cwde
(bad)
adc
jecxz
fldenv
dec
mov
adc
int
shl
jb
mov
inc
pop
sbb
es
(bad)
sub
xor
(bad)
ds
jmp
sbb
lock
ret
mul
add
fcom
fstp
scas
(bad)
in
xchg
dec
ja
jmp
xor
and
(bad)
mov
test
(bad)
in
arpl
inc
mov
out
dec
test
xchg
jmp
daa
sahf
jnp
mov
int
retf
and
fbstp
push
jne
mov
mov
dec
cmp
or
sbb
das
sub
push
and
pop
and
sub
jp
ins
scas
mov
mov
(bad)
cmp
sbb
outs
into
cmps
xor
int
pushf
test
js
mov
push
mov
dec
mov
ret
sub
pop
hlt
ins
mov
mov
repnz
jo
xchg
mov
dec
fistp
sub
cmp
pop
adc
in
out
enter
xchg
rcl
mov
push
out
leave
cld
adc
dec
jne
cmps
imul
mov
cmps
scas
les
lahf
je
cs
xchg
jo
aaa
inc
cmp
cli
addr16
mov
mov
ficomp
push
dec
lods
jecxz
or
dec
(bad)
imul
jl
xor
xchg
jno
(bad)
mov
and
cld
arpl
loop
jnp
xchg
outs
sbb
xchg
push
ins
mov
imul
js
adc
ins
frstor
xor
and
enter
repnz
shr
ret
jne
mov
es
or
ins
push
sbb
fs
das
push
or
shl
or
push
mov
sti
enter
ins
cmp
xlat
fcmovu
pop
mov
dec
xchg
mov
xor
xchg
idiv
inc
xchg
xchg
aas
and
das
dec
push
fistp
fsubr
sub
push
call
jl
int
les
popa
pop
push
xchg
jg
cmp
push
mov
test
repz
xchg
push
scas
mov
(bad)
sub
imul
or
scas
xchg
xchg
cmp
xor
leave
loopne
gs
retf
add
sbb
les
mov
and
cdq
cmp
and
mov
dec
sahf
cli
repz
and
xlat
jno
mov
push
or
daa
pop
or
rcr
int3
or
lock
shl
jb
in
xchg
gs
cmp
mov
test
into
imul
mov
xchg
int3
jnp
xor
pop
mov
pop
test
int3
pop
adc
mov
xchg
cmp
in
ins
cmp
dec
cmp
int
js
fdivr
(bad)
and
call
retf
or
cmps
test
(bad)
fmul
enter
sbb
adc
inc
gs
cmp
adc
out
xchg
loopne
lods
ret
jmp
popa
retf
adc
dec
and
aas
faddp
ins
mov
fwait
arpl
scas
cs
sub
jns
sbb
call
add
cmps
cmps
rcl
repnz
jo
mov
or
(bad)
inc
mov
clc
fstp
dec
jge
or
fcomp
mov
leave
and
sub
sub
adc
fdiv
(bad)
sub
pop
xor
je
fst
sub
out
test
mov
sbb
cli
mov
xchg
push
daa
ret
std
mov
xchg
jne
rcr
loop
push
pop
push
sub
and
cmp
jle
fbstp
push
sbb
call
jno
dec
shr
inc
cmc
nop
fisubr
int3
and
mov
or
retf
sub
add
(bad)
div
les
inc
imul
jae
mov
xchg
fs
(bad)
jnp
mov
mov
movs
jl
xor
adc
aad
cmp
cli
and
dec
cmp
pop
cdq
pop
adc
int3
push
xor
out
stc
jmp
dec
jl
shl
ja
stc
sbb
xor
jbe
sar
daa
cmp
cmps
iret
call
pop
xchg
mov
sub
inc
jno
not
xchg
mov
gs
push
inc
and
test
pop
sbb
and
mov
inc
adc
jmp
popa
outs
lock
bound
push
stos
shl
and
xchg
inc
pop
xlat
xchg
es
mov
push
aaa
mov
cdq
xchg
dec
sub
fdivr
and
addr16
popa
sub
xchg
fisttp
sub
cmp
jo
sbb
or
dec
push
ja
(bad)
or
lods
pop
inc
xor
add
pop
sub
adc
stc
push
(bad)
push
retf
cmps
fidivr
lods
mov
inc
fidiv
loopne
push
adc
js
adc
adc
arpl
xor
(bad)
lods
fst
sbb
adc
cdq
and
scas
mov
mov
push
in
xchg
scas
repnz
dec
jmp
or
rol
mov
xor
sub
test
jmp
test
jmp
xchg
push
push
call
ret
fs
leave
cmp
into
xor
xchg
sbb
rcl
mov
adc
sbb
jne
adc
jae
adc
and
enter
xchg
loope
push
jno
xchg
dec
pop
mov
cdq
dec
add
dec
jne
stc
ud0
dec
add
pusha
mov
pop
jb
fnstenv
cmps
into
jmp
push
rcr
cs
cmc
fidiv
pop
cdq
dec
mov
sub
icebp
and
push
jmp
mov
iret
push
aam
xchg
out
retf
pop
fimul
jo
cmp
mov
push
movd
mov
xchg
xor
mov
mov
add
push
imul
ins
outs
xchg
jg
pop
cmc
dec
adc
or
mov
xor
ins
xor
aad
xor
jmp
mov
pop
test
dec
les
mov
push
push
icebp
and
inc
scas
jns
movs
jge
jge
dec
jp
adc
lods
jno
mov
cwde
cmp
xor
fwait
hlt
adc
addr16
addr16
xlat
les
inc
mov
sub
xor
push
push
pop
in
cmp
or
mov
jne
loop
mov
repz
inc
movntq
int3
mov
addr16
loop
cld
mov
dec
sbb
xchg
or
and
adc
int
rol
mov
sub
int3
in
xchg
sub
or
sub
popa
mov
repnz
fild
mov
or
ja
aad
jns
ds
outs
mov
adc
pop
jle
cmp
pop
retf
pop
outs
push
jp
or
jle
retf
fldcw
jle
and
push
inc
pop
arpl
mov
lock
stos
inc
push
sbb
dec
ret
push
cmp
(bad)
xchg
(bad)
test
xchg
in
mov
add
pop
out
push
or
dec
mov
movs
std
mov
cdq
movs
aad
in
and
xchg
loopne
cmp
pop
add
push
mov
xchg
or
data16
cmp
ins
pop
and
add
lea
xchg
jle
lods
dec
in
aaa
cmp
pop
pop
xchg
inc
xchg
dec
popf
cmp
xor
fisttp
pop
add
add
aaa
adc
and
adc
jg
pop
push
and
arpl
xor
cld
add
mov
sub
mov
cmp
dec
lock
jnp
jae
or
mov
inc
xchg
dec
lods
test
sub
enter
nop
cmp
cmps
das
lahf
int
xor
int3
fld
jns
adc
(bad)
pop
loopne
mov
xor
cmp
imul
lods
adc
dec
scas
jge
dec
mov
je
add
jns
push
fnsave
aam
in
lods
pop
mov
jns
dec
add
inc
inc
ss
bound
mov
clc
sbb
data16
(bad)
mov
pop
out
test
xor
jl
and
xchg
xor
ja
lock
iret
xchg
push
pop
repz
sbb
cmps
cli
(bad)
fcomp
aas
mov
movs
das
mov
jmp
xchg
inc
pushf
outs
jle
nop
test
mov
cli
mov
in
stc
cs
ror
mov
mov
mov
rol
loope
nop
xchg
rol
out
sub
movs
repz
test
jbe
adc
out
sbb
rcr
pop
cmp
mov
iret
fsubr
fdiv
push
xor
pushf
xor
adc
jecxz
and
pop
pop
imul
test
sar
retf
fsub
push
xchg
ins
shr
jb
sbb
arpl
mov
and
test
pop
mov
bswap
ss
shl
imul
fnstsw
cli
cmc
jge
sub
xor
inc
xor
inc
fcomp
xchg
sbb
push
push
je
stos
stos
mov
sub
pop
inc
leave
fcomp
cs
cmp
pop
ins
mov
jg
jmp
cmp
retf
mov
gs
imul
cmp
pushf
mov
mov
xor
mov
clc
sbb
(bad)
in
das
pusha
aam
out
cmp
gs
loope
inc
jb
dec
push
and
out
scas
adc
jle
cs
dec
add
xchg
dec
loope
mov
(bad)
je
movs
cwde
scas
in
jne
cmovs
mov
call
inc
je
push
sub
push
(bad)
sbb
loope
inc
stos
movs
outs
add
fld
psrlw
dec
jb
sar
test
inc
lods
mov
lods
sahf
adc
dec
push
jae
inc
sbb
ret
ror
inc
cli
or
sub
mov
ret
fwait
or
xchg
push
fistp
cmp
test
inc
call
das
push
pop
inc
pop
clc
lds
sub
test
xchg
or
test
in
mov
jbe
cmp
dec
push
jecxz
cmps
jmp
sti
add
mov
adc
movs
cmp
aad
loope
pop
ja
push
std
int
loope
into
cmp
push
loopne
arpl
scas
movs
(bad)
fsubr
cmps
add
(bad)
ss
xchg
sbb
or
push
pop
push
jmp
inc
inc
add
mov
cld
xchg
adc
lods
aad
cmp
iret
xchg
fstp
xchg
shr
call
pop
push
daa
rol
std
jge
or
jnp
inc
fucomi
mov
fidiv
and
hlt
and
(bad)
stos
test
push
test
ds
(bad)
push
lods
or
cld
in
push
xor
xor
and
scas
or
fbld
loope
pop
repz
imul
inc
push
loopne
ret
test
push
retf
cmp
jae
shl
ds
es
or
mov
mov
sub
sbb
ret
fdivr
mov
mov
jl
hlt
in
out
xor
xchg
dec
mov
cli
frndint
xor
pop
mul
push
sub
push
pand
xor
int3
fs
jecxz
pop
inc
mov
daa
push
add
retf
rcr
jne
shl
pop
mov
or
jecxz
xor
icebp
hlt
jmp
jp
mov
jns
in
pop
shr
jb
loop
mov
shl
test
pop
xor
inc
aam
push
dec
push
in
inc
sub
movs
test
jmp
or
or
add
mov
mov
pusha
in
in
mov
sub
call
pop
push
or
gs
mov
cmp
add
mov
cs
pushf
add
jmp
push
or
pop
or
aaa
pop
dec
enter
nop
or
ror
mov
dec
mov
xchg
pusha
sub
sbb
pushf
xor
mov
in
sbb
adc
or
jg
mov
sbb
mov
sbb
cs
adc
jno
movs
mov
out
or
in
arpl
ret
cdq
bound
sbb
ds
xor
js
in
adc
jnp
arpl
aad
or
sbb
dec
cwde
div
pop
mov
sar
sub
cmc
xchg
fmul
fsub
stc
xchg
retf
loop
xlat
je
ja
mov
js
aam
mov
fs
cmp
out
jge
dec
cdq
out
test
inc
enter
xor
sbb
sub
and
inc
fstp
sub
fild
lahf
xor
push
es
outs
aaa
cs
loopne
jns
xor
popa
push
pop
cmp
dec
clc
xchg
fwait
movs
mov
jp
lods
push
pop
jo
mov
cmps
add
(bad)
mov
mov
fwait
(bad)
dec
aam
add
jo
cld
fcmovnu
sbb
stos
push
or
add
mov
jo
xchg
int3
mov
(bad)
mov
sub
add
xchg
sahf
xchg
rcl
push
sbb
mov
cmp
daa
inc
push
jmp
movs
fistp
cmp
mov
dec
inc
fist
inc
pop
fwait
and
jmp
scas
mov
repnz
ins
jge
cmp
fwait
cmp
inc
push
call
repnz
jns
mov
jle
daa
adc
pop
sar
mov
and
pop
or
cmp
jle
or
enter
out
(bad)
fstp
call
push
gs
mov
test
fcom
inc
leave
add
(bad)
or
xchg
jp
add
popf
inc
ins
and
into
gs
inc
lds
mov
sub
pop
sub
fsub
dec
hlt
xchg
adc
ss
push
mov
pop
sti
hlt
and
(bad)
repnz
sahf
into
mov
mov
jmp
push
mov
int
dec
stc
mov
mov
inc
and
imul
std
js
jb
cli
or
fxch
das
cmp
and
pop
icebp
shl
mov
sti
xor
mul
pushf
test
mov
xor
pusha
pop
jae
mov
iret
dec
neg
push
je
xchg
pop
inc
mov
nop
mov
les
sbb
ficomp
jp
sbb
mov
cmp
push
cmp
test
push
loop
pusha
or
dec
cmp
dec
pop
cmps
cli
sub
call
xor
ffree
mov
mov
xor
sbb
ret
sbb
and
pushf
mov
jl
js
push
jecxz
bound
test
pop
adc
test
jns
sbb
ins
and
mov
retf
mov
ss
add
outs
rcl
leave
mov
add
cmp
xchg
mov
cdq
ins
xchg
or
adc
push
fmul
mov
(bad)
push
xchg
fmul
movs
out
and
mov
jmp
pop
push
cwde
leave
loopne
cmp
jae
(bad)
sub
mov
hlt
add
push
push
mov
stos
stos
push
inc
mov
lods
ret
mov
fsub
icebp
test
popa
xchg
cli
push
lds
push
mov
fisttp
jle
xchg
or
(bad)
lea
cmp
xor
pusha
and
iret
adc
test
ror
std
int3
sub
mov
push
mov
inc
mov
shl
push
mov
mov
mov
xor
mov
sub
xor
sbb
das
clc
mov
xchg
test
and
dec
shr
or
stc
mov
in
ficomp
push
int
push
push
fimul
pop
sbb
mov
dec
xchg
mov
aam
and
push
cmp
dec
in
or
mov
mov
ss
dec
outs
ja
fisubr
les
mov
aad
out
cmp
jmp
lahf
push
mov
xor
pushf
sbb
call
pop
retf
lock
xchg
sti
ins
aad
adc
repz
scas
(bad)
mov
sbb
jns
call
retf
jle
icebp
add
(bad)
outs
push
mov
sub
iret
jg
inc
dec
pop
cwde
sub
pop
or
icebp
push
test
sub
(bad)
pusha
lock
xor
imul
mov
leave
test
cli
push
cs
popf
adc
sbb
mov
mov
rol
xor
out
cld
or
enter
pop
ins
mov
jge
ret
loopne
(bad)
popf
cmp
jne
inc
clc
pop
pop
nop
xchg
mov
xor
xchg
mov
enter
ds
mov
xchg
enter
jb
out
test
retf
mov
shl
xor
jns
adc
imul
xchg
arpl
pusha
and
sbb
mov
and
add
inc
mov
int
dec
and
mov
mov
(bad)
mov
clc
pop
call
icebp
or
push
rcr
mov
or
push
ret
sub
sub
mov
sub
or
xchg
jg
add
inc
in
cwde
cmp
push
enter
sbb
add
bound
mov
in
cmps
adc
scas
retf
in
adc
push
cmp
sub
jmp
lock
jbe
ret
push
ud1
(bad)
and
mov
inc
mov
inc
outs
ret
call
aam
inc
mov
retf
ss
xchg
mov
test
les
cli
mov
test
inc
out
jne
dec
inc
sbb
loopne
inc
xchg
sub
clc
inc
cmps
fcom
sub
mov
es
inc
cmp
out
into
bound
loope
test
xor
jle
setle
xor
fdiv
inc
jno
pop
wrmsr
xor
sti
mov
mov
add
and
push
push
jle
or
leave
ret
dec
stc
test
movs
mov
jmp
sub
idiv
xor
stc
test
add
push
cs
lods
mov
sbb
(bad)
out
sub
or
fwait
add
mov
sbb
pop
imul
out
and
add
scas
or
sbb
push
dec
xor
ds
in
outs
inc
fwait
imul
dec
pop
jge
and
out
xchg
jle
ja
mov
out
sub
mov
aaa
sbb
dec
mov
jl
jl
add
stos
arpl
jb
call
loop
cmp
push
cmps
into
loop
add
pop
mov
push
dec
inc
cld
add
cmps
aaa
lods
je
enter
mov
jge
xchg
dec
mov
mov
add
jg
lods
push
mov
aad
mov
ficom
and
mov
sub
inc
sbb
aas
push
fidivr
popf
pop
aam
outs
sar
inc
test
push
or
and
adc
mov
aad
ins
shr
sbb
ja
cli
stos
mov
adc
test
repnz
push
rol
pop
imul
sub
sbb
stos
sub
in
adc
int3
push
std
fidiv
xchg
push
popa
xor
push
ss
add
or
cwde
mov
pop
mov
mov
mov
imul
iret
movs
xor
test
dec
cwde
mov
shl
dec
daa
iret
push
ds
test
sub
in
xchg
add
icebp
lds
aad
adc
enter
repz
cmp
daa
popf
enter
pop
scas
mov
xchg
and
aaa
stos
rol
xchg
cmp
and
pop
ret
out
cwde
sbb
xchg
loope
inc
hlt
or
shl
inc
push
and
sbb
lahf
ret
mov
inc
pop
jle
or
in
je
sub
(bad)
div
inc
movs
pop
rcl
dec
mov
push
push
cmc
jl
cmp
push
pushf
repnz
pop
daa
add
add
fnstenv
xchg
(bad)
ins
outs
dec
fdivr
test
adc
mov
loopne
imul
or
ds
jecxz
fld
fwait
mov
or
push
xchg
loopne
sub
inc
xchg
mov
add
dec
fwait
push
int
mov
and
test
fistp
jmp
(bad)
xchg
mov
inc
sbb
les
sub
add
push
pop
sbb
pop
fsubp
scas
popa
es
mov
jmp
ret
cmps
mov
jno
out
test
test
aam
push
out
pop
in
jl
mov
rcr
push
jle
vmread
pop
add
fwait
mov
xchg
cdq
test
pushf
mov
call
add
fmul
mov
test
xchg
dec
mov
mov
dec
add
push
ss
pop
mov
ja
ret
cmps
dec
ins
fiadd
inc
jbe
jae
idiv
fidiv
sbb
cmp
mov
sub
out
dec
hlt
push
cdq
lahf
aas
mov
mov
shr
push
push
sahf
leave
stos
pop
pop
sbb
std
mov
push
test
es
es
inc
in
test
push
jge
arpl
jl
retf
movs
adc
xor
loopne
enter
mov
push
test
loop
mov
(bad)
pop
out
inc
(bad)
aam
cmps
cdq
sub
lods
inc
push
arpl
(bad)
enter
or
jns
jns
ret
inc
cmps
es
gs
sub
(bad)
sbb
mov
jl
xor
sub
(bad)
shl
ss
hlt
in
sti
cmp
in
stos
ds
jge
cmp
sar
sbb
loop
ins
xor
mov
data16
(bad)
mov
in
dec
jbe
lock
mov
xor
(bad)
not
mov
push
fbld
lea
(bad)
sub
outs
fistp
or
pop
leave
retf
dec
(bad)
gs
inc
outs
xor
mov
sti
adc
lds
dec
retf
mov
jmp
mov
ror
mov
dec
les
leave
daa
dec
xor
push
cmp
sahf
sbb
pop
push
push
or
enter
jge
ins
aas
dec
pushf
aad
jmp
sub
mov
sbb
(bad)
rol
dec
push
out
dec
das
out
jae
aam
add
cmp
fnstcw
sbb
pop
repz
inc
jae
push
sbb
xchg
ss
fdiv
ds
outs
sbb
in
jo
jp
mov
cwde
lea
mov
je
(bad)
out
aam
pop
jmp
and
push
mov
push
add
fxch
bound
xchg
fsubr
add
inc
out
outs
xor
sub
mov
mov
dec
cmp
inc
jmp
leave
mov
mov
cmp
pop
fstp
out
inc
ja
mov
loop
stc
cs
inc
push
and
jmp
sbb
mov
mov
cld
push
xchg
cdq
inc
cdq
add
adc
fbld
and
ror
mov
jg
ds
popf
add
cmps
sar
ret
push
jmp
clc
jmp
repz
adc
dec
dec
aas
dec
sti
dec
cdq
in
repnz
push
cld
clc
jg
push
sub
mov
jo
push
push
fcomp
and
jmp
and
test
clc
adc
mov
mov
push
xor
mov
lock
dec
xchg
push
loope
cmps
rcl
outs
arpl
inc
loopne
push
sbb
addr16
test
xor
jge
sub
inc
popf
jne
lods
mov
outs
sti
cmp
jg
(bad)
scas
dec
or
out
int3
mov
scas
pop
sti
fistp
js
sbb
mov
or
add
popf
scas
data16
aaa
inc
(bad)
adc
ror
cmp
jbe
push
lods
call
mov
js
ins
loope
lock
out
fs
xchg
mov
push
fsub
mov
sub
cmp
pusha
mov
fsub
pop
push
cmps
dec
pusha
test
rol
(bad)
enter
push
pop
lock
rcr
xchg
scas
adc
movs
stos
loop
into
dec
cmc
aas
ret
dec
ret
std
cmps
jle
add
out
test
inc
clc
adc
or
pop
add
movs
imul
inc
mov
loop
sub
push
mov
mov
inc
mov
jnp
popa
leave
dec
in
jmp
push
cmps
rol
and
cmp
cmp
push
imul
dec
(bad)
hlt
push
cmp
lock
imul
inc
jo
outs
cmp
sbb
push
sbb
cmp
mov
outs
nop
jecxz
std
or
push
pop
sti
pop
outs
popa
jno
mov
dec
xor
add
pop
inc
out
sbb
add
cmps
js
push
inc
mov
add
xlat
xor
mov
add
pop
push
sbb
dec
sbb
jmp
add
out
and
js
loope
pop
add
lock
cmps
out
xor
in
inc
gs
mov
inc
rol
xor
pop
xor
mov
dec
jbe
retf
out
cld
scas
or
ja
mov
rcr
jnp
pop
jge
xlat
pop
test
sub
lea
mov
movs
and
mov
pop
inc
repz
movs
push
mov
(bad)
sub
out
adc
xor
jmp
xor
or
aas
add
call
retf
les
jnp
daa
jnp
push
mov
leave
inc
adc
xor
sti
and
(bad)
pop
add
sub
(bad)
sbb
adc
loop
pusha
retf
sti
or
mov
add
scas
adc
jae
cmp
or
ret
push
repz
mov
push
jp
sub
cdq
and
xchg
sbb
aas
std
fist
je
retf
mov
mov
fwait
sub
fldenv
mov
inc
das
cmc
sahf
lds
inc
pop
imul
sbb
sub
vpsubsw
jo
push
jg
sub
push
fs
or
jnp
add
shr
data16
xor
and
daa
push
jmp
xor
add
add
jmp
rol
test
cmp
xchg
push
add
or
and
adc
popf
cmps
clc
lea
push
jle
(bad)
repnz
les
icebp
les
out
add
and
jbe
cwde
ja
popf
out
aaa
xor
pusha
push
adc
outs
pop
mov
mov
push
mov
cmps
popf
(bad)
push
push
arpl
ficomp
or
adc
and
(bad)
in
cmc
in
mov
add
les
(bad)
fild
shr
sbb
pusha
js
sti
shr
jl
xor
lea
xchg
pop
mov
jbe
push
call
in
aad
add
lods
pop
test
xchg
das
(bad)
or
xchg
adc
inc
and
xchg
pop
fwait
pop
xchg
jle
aam
stc
push
lea
cmp
cmp
add
adc
push
hlt
shl
sbb
mov
pop
jg
mov
push
retf
sub
adc
hlt
lea
and
adc
fidivr
mov
mov
aad
mov
or
and
or
ds
int
(bad)
push
clc
xchg
daa
mov
lods
sti
es
push
fcomp
or
in
clc
outs
les
xlat
call
sbb
sbb
aad
mov
js
pop
mov
cs
lahf
dec
pop
pusha
cmc
stos
fisttp
mov
sub
fisttp
test
inc
ficom
ss
mov
fs
out
sub
(bad)
mov
js
in
(bad)
int3
sub
movs
dec
sbb
mov
dec
icebp
in
dec
mov
ftst
stc
scas
cwde
cmp
push
jp
pop
mov
sbb
ret
cli
cmps
mov
dec
sbb
cld
inc
sub
mov
in
push
push
jo
ins
dec
jl
jb
int3
ret
mov
fwait
test
int
sub
push
sub
cmp
ret
push
pop
and
pop
mov
nop
cmp
push
mov
adc
jo
cmps
enter
fdiv
push
jns
xchg
pop
xchg
jl
ins
inc
in
add
ja
pop
cli
test
mov
inc
add
aam
stos
je
in
pop
aaa
out
clc
push
mov
cmps
pop
push
fcomp
cmp
xchg
out
xor
xor
push
or
outs
and
loopne
pop
cmp
ret
shr
jl
ins
xchg
sti
sbb
xchg
xor
push
mov
sub
push
xchg
push
xchg
aas
(bad)
shr
jmp
ror
in
jp
ins
and
int
jmp
jns
inc
add
sar
test
sbb
jp
int
test
sub
or
in
leave
add
in
int
pushf
sahf
push
or
mul
adc
xchg
ret
popa
dec
pop
(bad)
mov
cmp
xchg
sbb
in
fidivr
cwde
inc
xchg
adc
xlat
mov
es
jb
mov
call
adc
xchg
mov
jmp
ror
jg
add
mov
cmp
jnp
popf
jmp
mov
mov
lahf
inc
mov
push
pop
fcomp
stos
mov
jo
sar
ins
xlat
jns
add
xchg
pop
cmp
xor
add
pop
mov
shl
out
retf
mov
leave
xchg
leave
or
sbb
nop
mov
add
clc
ds
imul
xchg
cmp
jb
sub
and
pusha
mov
clc
(bad)
mov
cmp
sar
lock
add
jecxz
xchg
(bad)
in
dec
cmc
ret
mov
in
sbb
jecxz
(bad)
jmp
ficomp
and
mov
(bad)
xchg
out
mov
cmp
jnp
cmp
iret
push
jne
movs
fadd
mov
pop
iret
push
inc
repnz
shl
fidiv
int3
test
cmp
loop
pop
push
add
xor
movs
arpl
aaa
fst
xchg
push
stc
mov
add
add
mov
sbb
(bad)
popf
scas
xlat
jno
f2xm1
into
inc
jmp
xchg
or
push
push
dec
daa
pop
push
and
fdiv
jb
movs
xchg
jge
inc
das
adc
add
inc
popa
mov
ins
out
jbe
in
scas
cmc
sub
mov
add
or
pop
jge
and
out
repnz
test
dec
fsubr
mov
mov
or
movs
out
lock
sbb
sub
retf
aas
xor
adc
mov
or
xchg
imul
rcr
mov
mov
cdq
cmp
fisubr
sub
int3
push
into
inc
or
mov
stos
int
cmp
fs
sti
popa
stos
adc
lods
xor
mov
mov
sub
inc
inc
pop
inc
push
pop
imul
lods
ss
jnp
inc
mov
jmp
pop
push
daa
adc
shl
mov
hlt
jle
scas
mov
pusha
mov
test
not
mov
add
push
sbb
add
mov
fmul
cs
jecxz
jns
xchg
sub
sub
iret
bnd
inc
in
retf
popf
imul
popf
fisubr
daa
push
call
xor
xor
int
in
push
stos
and
cmp
int3
push
(bad)
arpl
fsub
shl
leave
scas
xchg
fldcw
mov
mov
ja
outs
or
popf
int3
cmp
fidivr
loope
add
and
mov
cmp
pushf
ret
jmp
ret
lds
dec
push
pop
ja
or
pop
les
(bad)
push
xlat
sub
mov
dec
pop
fdivp
mov
pop
push
xchg
in
cld
add
and
xchg
sub
xchg
mov
inc
retf
mov
push
push
sub
retf
dec
and
xchg
sar
mov
pusha
push
pop
movs
sub
sub
cmc
mov
leave
mov
mov
je
or
addr16
jnp
pop
push
cmps
call
out
xlat
push
adc
bound
mov
out
bound
jecxz
jl
mov
mov
(bad)
push
push
xchg
jne
pop
fbld
(bad)
xor
adc
js
sub
xor
dec
dec
out
push
or
jns
fcmovnb
pop
push
pop
test
shr
cld
or
ss
mov
push
add
ss
into
fild
and
pop
fwait
push
sub
jb
jg
sub
hlt
fnstcw
cs
pop
arpl
and
adc
cmp
mov
in
movs
xchg
test
ins
jl
hlt
int3
mov
punpckhbw
sub
cwde
inc
cmp
ins
fcom
cmc
xor
push
lds
lods
pusha
les
popa
repnz
mov
push
scas
xchg
sub
pop
ins
fldlg2
dec
cmp
lods
add
ror
ja
mov
js
mov
jl
push
pop
int3
mov
xlat
call
pop
movs
ja
loope
(bad)
std
add
push
imul
popf
jnp
int
mov
nop
ss
movs
(bad)
dec
outs
fiadd
inc
sub
(bad)
loopne
dec
loop
fsubr
mov
shl
out
push
push
fst
pop
sbb
and
iret
mov
or
adc
jle
add
mov
add
retf
inc
adc
das
clc
retf
in
(bad)
popa
add
jmp
mov
out
mov
ins
or
jmp
aaa
fiadd
lods
adc
int3
dec
cmp
cli
(bad)
call
lock
nop
popf
loope
cmp
jmp
mov
lea
mov
xchg
into
std
mov
bound
xchg
retf
imul
push
cli
stc
(bad)
mov
push
xor
cs
jl
jmp
into
je
mov
and
jns
rol
mov
hlt
out
mov
sub
and
lds
jne
mov
jo
aaa
scas
adc
stc
aam
inc
mov
mov
cli
mov
sbb
xor
xlat
inc
into
push
addr16
and
aad
pop
out
ss
das
pop
cld
lods
fst
outs
sbb
sahf
sub
sub
fst
lds
mov
ret
inc
cmp
shl
push
sbb
inc
cmp
jns
dec
xchg
fld
inc
mov
adc
mov
icebp
adc
jbe
pop
aas
jp
addr16
mov
push
cdq
mov
or
popa
add
adc
iret
in
add
pop
dec
out
inc
xchg
jmp
call
jp
mov
clc
hlt
and
sub
movs
xlat
xor
xchg
daa
pop
dec
loop
mov
inc
lods
in
in
sub
sbb
cwde
fcmovb
lahf
push
push
xor
fistp
cwde
aaa
in
inc
(bad)
nop
inc
aas
jl
daa
cmp
stos
pop
ror
pop
push
or
rcl
fisttp
cmps
xchg
adc
add
(bad)
mov
lods
lds
add
lock
pop
mov
cmp
xor
mov
mov
imul
xchg
test
or
jg
arpl
sbb
sbb
add
inc
or
sbb
test
push
clc
loope
sbb
popf
data16
cmps
sub
jge
(bad)
push
pop
shl
aaa
fisttp
pop
imul
jbe
pop
clc
mov
shr
shr
xchg
pop
add
xchg
test
mov
dec
std
cs
fldcw
aad
xor
cld
icebp
cmp
fcom
cmp
clc
dec
push
ret
inc
sub
adc
sbb
push
cmp
outs
jp
loope
fwait
pop
(bad)
cmp
adc
push
jns
jno
fwait
inc
xchg
mov
dec
int3
sub
add
xor
dec
movs
mul
fist
cmp
addr16
outs
add
es
push
adc
inc
mov
dec
mov
jne
cmc
fmul
adc
xchg
aam
inc
test
push
inc
icebp
scas
push
push
mov
fwait
stos
fmul
aad
and
(bad)
(bad)
fld
movs
clc
push
inc
fstp
loop
fild
ja
push
sbb
js
rol
je
mov
sub
mov
mov
out
fmul
outs
or
movs
out
int
lods
loopne
mov
enter
and
mov
sti
jmp
xchg
lock
jp
inc
mov
cwde
jmp
aas
in
jmp
dec
pusha
jp
or
jmp
ins
add
sbb
pop
sbb
ins
or
adc
hlt
ja
hlt
push
shl
test
fcmovne
lahf
repz
stos
push
adc
adc
dec
xchg
xor
lock
inc
in
xor
xchg
ins
cmp
pop
push
rcr
pop
adc
mov
mov
push
xchg
outs
aaa
(bad)
and
jmp
repz
popf
iret
and
rol
xor
test
mov
movs
and
sar
dec
ins
or
sbb
fst
xlat
ins
jnp
test
sub
jg
push
adc
push
jae
pop
mov
lods
sub
hlt
add
int
in
retf
cld
lods
jle
mov
ror
pushf
mov
mov
xor
and
add
adc
arpl
test
scas
sbb
xor
lods
out
fistp
(bad)
loopne
dec
iret
push
in
pop
stc
mov
mov
or
adc
mov
mov
cmps
jo
xchg
loop
mov
mov
mov
cmc
add
mov
(bad)
cmc
int3
sub
loopne
in
icebp
je
xor
repz
sub
sub
sub
sbb
mov
psubusw
cmp
xchg
(bad)
and
mov
adc
and
call
add
bound
inc
and
jae
push
adc
cmp
jnp
sub
ins
push
test
mov
jnp
pusha
retf
movs
call
jg
stc
out
adc
cmp
pop
mov
add
xchg
mov
xchg
faddp
jp
test
mov
xor
pusha
ret
sub
mov
mov
xchg
jmp
inc
mov
aad
xor
nop
loope
mov
and
inc
xor
pusha
inc
es
push
imul
(bad)
movs
jno
fdivrp
fwait
mov
jnp
inc
popa
loope
loop
shr
lahf
or
and
mov
lock
out
push
or
mov
fwait
out
jmp
rcr
xchg
push
jns
mov
int
outs
jne
stos
out
push
out
mov
int
outs
adc
sbb
retf
bound
rcl
not
mov
mov
mov
std
xor
mov
push
xchg
mov
push
push
ss
mov
call
outs
mov
and
stos
push
cmp
add
fcom
inc
cvttps2pi
pop
cmp
arpl
push
retf
cmp
xor
xchg
xchg
lds
sub
div
test
push
jl
cmc
stos
cmp
enter
xchg
and
ret
out
cld
cmp
cmc
ds
loope
mov
(bad)
nop
aas
loope
mov
pop
and
add
das
jmp
loope
adc
cmp
jnp
call
adc
fmul
push
ins
jbe
pop
add
mov
fs
or
dec
lahf
out
push
punpckhbw
ret
sbb
pop
ja
in
out
cmp
pop
xor
or
adc
xor
inc
mov
mov
mov
and
xor
outs
fstp
push
push
push
outs
push
sbb
js
stos
adc
push
mov
(bad)
or
pop
inc
ins
leave
aam
sbb
push
inc
ds
mov
jae
popf
clc
pop
leave
lock
mov
pop
in
cmp
aas
leave
das
das
jmp
push
pushf
or
fadd
xor
mov
fst
sbb
int
in
push
or
dec
in
cld
jl
mov
sub
lods
adc
retf
push
adc
shl
retf
mov
mov
mov
inc
pop
pop
mov
mov
out
lea
mov
push
pop
repnz
sbb
pop
mov
xchg
dec
or
pop
push
sbb
adc
cmp
dec
inc
clc
(bad)
xchg
cmp
cmp
cmc
jb
lock
or
fdivr
imul
xchg
jae
pop
inc
jmp
das
pop
and
pop
fidiv
cmp
pop
aam
add
in
jecxz
stc
fs
xchg
retf
ins
cmps
fild
dec
pop
sbb
jo
or
dec
mov
ret
jbe
lahf
push
xlat
jns
mov
mov
(bad)
(bad)
cli
jecxz
unpckhps
xchg
jne
ja
dec
sbb
xor
into
popf
ds
pushf
lock
jmp
jb
jne
scas
(bad)
cmp
push
in
pushf
cwde
mov
addr16
or
ins
aas
test
fcomp
jecxz
scas
das
xor
mov
stos
js
inc
mul
(bad)
(bad)
adc
es
xor
xchg
sbb
sbb
mov
push
sbb
lds
xor
cmp
movs
icebp
lods
or
aas
jmp
xchg
setb
cld
addr16
cmp
push
pushw
pop
iret
push
test
add
lock
push
mov
imul
jge
data16
(bad)
fninit
pop
mov
add
pop
jo
sub
(bad)
dec
stc
add
not
inc
jne
sbb
movs
cmp
data16
rcl
add
push
pop
jne
nop
rol
fsubr
jbe
pop
sbb
fbld
jb
gs
aaa
in
fst
(bad)
rcr
sub
aad
adc
sar
cmp
neg
push
xor
int3
fcom
pop
stos
or
xchg
push
mov
sbb
inc
retf
ja
call
xor
inc
rol
xchg
xor
sub
mov
lock
dec
mov
mov
mov
adc
pmullw
push
dec
ret
xchg
pop
enter
imul
rcr
mov
jmp
jg
cmp
gs
mov
hlt
leave
sti
jno
inc
inc
push
jne
inc
stc
imul
bound
jnp
pop
cmp
add
jp
movs
mov
adc
mov
nop
fs
(bad)
jne
and
hlt
sti
adc
shl
mov
or
sbb
ret
out
xchg
cmp
imul
leave
jle
test
and
stc
xchg
outs
lds
and
ret
fistp
int3
sbb
jg
scas
retf
jb
push
int3
xlat
mov
es
xor
or
cmc
adc
and
and
retf
and
push
xor
aad
outs
retf
cmp
int
(bad)
cs
sahf
add
dec
and
dec
in
test
imul
jno
mov
dec
sbb
jg
jb
mov
data16
jl
loopne
push
jecxz
cmps
push
xchg
and
stos
enter
neg
jno
xor
dec
loopne
adc
je
je
out
bound
out
(bad)
loopne
jge
bnd
add
or
mov
(bad)
push
ret
mov
and
out
sti
das
popf
pop
xchg
cld
add
neg
push
movs
mov
enter
cli
pop
loope
cmps
call
sub
jno
mov
inc
push
and
sub
test
or
shl
inc
(bad)
jmp
mov
nop
(bad)
lahf
lock
or
xor
retf
std
dec
jbe
sbb
mov
xor
add
and
out
loope
or
fwait
leave
mov
gs
mov
mov
ret
xchg
idiv
adc
mov
add
sbb
sbb
jae
jmp
das
or
push
fwait
sar
fsub
mov
imul
aaa
repz
jb
imul
popa
stc
pop
fwait
je
cmps
pop
inc
ror
xor
mov
fild
add
mov
sbb
mov
or
stc
xlat
mov
sub
shl
jge
mov
fwait
div
xor
out
cdq
stos
mov
popf
das
cmps
or
mov
test
(bad)
jne
cwde
movs
sub
mov
adc
cmp
xchg
lock
enter
iret
xor
lods
movs
test
xor
repnz
shl
mov
cmp
jg
xor
or
add
imul
fwait
scas
dec
pushf
ins
mov
dec
push
cmp
adc
jg
push
fidivr
push
mov
xchg
lods
jl
imul
push
lea
xor
jbe
push
push
adc
rcl
mov
jge
jns
(bad)
cmp
cs
push
div
lods
loope
in
add
jno
sub
out
xor
pop
stos
or
rol
jmp
test
jnp
gs
pop
je
push
mov
sub
inc
je
push
pop
scas
icebp
xchg
adc
neg
push
loopne
xor
fistp
pop
mov
xchg
jp
je
cmp
call
sti
cmps
xchg
call
enter
jns
sub
cdq
shr
(bad)
(bad)
push
ret
shl
mov
sub
(bad)
jp
xchg
and
mov
in
pop
mov
adc
jl
add
ret
dec
xchg
xchg
mov
inc
aaa
fdiv
jmp
sbb
xchg
lods
and
dec
push
in
test
mov
das
xchg
retf
bound
ss
push
add
jne
cdq
xchg
jmp
and
sbb
je
add
mov
xlat
add
out
stc
ret
pusha
fnstsw
dec
js
push
stos
and
lock
push
mov
jbe
sub
das
jmp
repz
cmp
add
hlt
push
sti
stos
sbb
fdivr
aad
test
sub
jmp
jb
sbb
pop
adc
mov
aam
jl
pop
pop
aas
dec
jo
(bad)
and
(bad)
push
xor
adc
inc
adc
pop
xor
sahf
test
xor
push
and
jmp
xchg
cmc
xchg
jns
cdq
or
shl
ds
ror
out
(bad)
inc
nop
push
imul
or
sub
inc
xor
sar
pop
daa
aas
call
pop
pushf
test
push
cwde
fisttp
pop
sbb
sub
push
clc
push
pop
mov
sbb
fidivr
mov
fadd
and
test
test
push
add
ficom
fistp
imul
(bad)
fstp
fsub
rcl
push
call
mov
xchg
sar
test
loop
dec
lahf
adc
out
dec
push
mov
ss
mov
es
or
ins
es
jp
dec
cmp
sar
jne
loop
call
cmps
sub
mov
xchg
push
push
inc
neg
cmp
push
std
push
mov
mov
xchg
aaa
sub
mov
pop
mov
push
pusha
push
dec
stos
outs
xchg
jp
fisttp
or
mov
inc
dec
cmp
int
mov
mov
xchg
xor
in
shr
and
add
outs
dec
or
add
enter
shl
not
rol
ret
inc
or
or
push
xchg
mov
inc
push
sbb
(bad)
scas
test
lock
sub
fstp
(bad)
sti
or
cmp
out
jp
or
mov
and
retf
cdq
movs
sbb
or
mov
pop
and
and
mov
retf
push
push
mov
lahf
jmp
lods
mov
xchg
in
mov
fisubr
adc
jp
and
sbb
add
jne
sbb
data16
fld
bound
jb
fild
in
jb
adc
adc
xchg
int3
ror
cmc
lods
fcom
movq
ret
inc
shr
and
pop
std
nop
jmp
adc
inc
mov
rcl
loopne
mov
nop
or
nop
lahf
js
xchg
sbb
lods
jns
sbb
mov
jl
inc
pop
xchg
or
xchg
into
pop
lods
xchg
pop
popa
mov
xchg
dec
cmp
shl
xchg
xchg
movs
xchg
mov
jae
xor
mov
cmps
add
sbb
data16
mov
movs
stc
mov
movs
cmc
mov
jae
xor
jno
or
ins
in
movs
imul
jl
xchg
les
mov
cs
adc
jp
call
mov
pop
repnz
lahf
inc
xchg
sub
push
leave
xor
push
in
mov
jmp
mov
adc
arpl
lds
jl
adc
out
xchg
add
mov
jnp
sbb
adc
xchg
mov
fild
arpl
jns
imul
fmul
mov
(bad)
call
sahf
mov
(bad)
mov
xchg
and
inc
popa
dec
or
out
inc
test
shl
test
cmps
or
fcom
sub
ja
in
sub
mov
in
mov
sti
outs
push
cmp
dec
mov
fstp
in
push
dec
xchg
mov
jb
scas
enter
daa
(bad)
or
fwait
mov
lds
mov
int
adc
bound
cmp
pop
(bad)
jl
addr16
(bad)
xlat
adc
xchg
ret
(bad)
push
xchg
push
mov
out
mov
popw
lea
cs
jge
or
and
lahf
jl
loop
fsub
icebp
fiadd
dec
cld
xor
cmp
std
fcmove
rcl
add
or
dec
shl
lock
xchg
movs
aam
sbb
pop
or
sub
pop
inc
sub
out
scas
cmps
lods
out
in
retf
mov
daa
inc
retf
into
(bad)
clc
(bad)
js
jp
add
push
push
adc
das
fldenv
xchg
push
xchg
cmc
jecxz
xchg
jecxz
mov
xchg
xor
fmul
mov
imul
push
adc
aam
ss
shl
sbb
cld
int
sub
pop
aad
pop
std
or
mov
inc
xchg
cmp
or
push
and
fsubrp
ds
data16
mov
fs
mov
mov
cmp
or
test
pusha
mov
cmps
shl
xchg
push
cmp
mov
jl
mov
(bad)
xor
fwait
xchg
inc
lds
push
or
ss
enter
mov
call
mov
adc
jmp
adc
out
test
out
mov
pop
sbb
sbb
xor
movs
cmp
xchg
cmps
mov
stos
test
dec
loope
cld
es
loopne
add
cmps
push
xchg
pushf
enter
mov
and
into
cld
retf
dec
jge
idiv
and
mov
mov
loop
test
clc
leave
cmc
sar
sbb
xlat
jmp
mov
lock
dec
out
rcl
push
adc
scas
sar
bnd
adc
xchg
push
fwait
ja
ds
cmc
inc
or
push
adc
std
aad
inc
daa
into
mov
jne
enter
inc
or
enter
mov
mov
cmp
sub
mov
out
arpl
dec
inc
jmp
or
imul
jns
cmps
scas
addr16
inc
jecxz
xchg
dec
fincstp
fwait
out
lods
xchg
mov
cmp
add
cmps
fldenv
and
or
dec
les
fwait
sub
fwait
adc
jge
push
call
xor
and
sbb
xchg
mov
and
cmc
mov
cmp
in
xchg
iret
xchg
adc
out
fcomp
and
addr16
jle
jno
sbb
xor
popa
out
pop
cld
imul
fdiv
scas
mov
out
fstp
xchg
push
js
cwde
repz
mov
mov
pop
dec
test
popa
push
jo
lahf
out
mov
add
(bad)
mov
out
fmul
loope
pop
jg
mov
mov
mov
scas
mov
jo
sbb
dec
mov
add
fisub
loop
(bad)
or
xchg
inc
adc
dec
or
pop
call
xchg
inc
pop
pop
and
rdmsr
stos
addr16
retf
push
add
dec
mov
mov
mov
test
call
sar
call
cmp
outs
pop
pop
xor
mov
aaa
or
mov
(bad)
xchg
ror
sbb
icebp
ds
rol
xor
movs
retf
dec
fisttp
ror
pop
push
aad
jecxz
pop
cmc
inc
cmps
mov
cmp
xor
sub
ja
jl
xchg
into
repnz
in
cli
pusha
scas
arpl
outs
call
inc
cwde
xlat
ins
js
sub
daa
lds
sub
outs
mov
xor
pop
ss
es
pop
fisub
(bad)
aad
rol
lock
jle
dec
push
inc
or
cmps
sub
jg
repz
mov
rcr
lods
scas
or
std
sub
sbb
jo
inc
repnz
out
mov
xor
mov
fistp
pop
lahf
jecxz
movq
mov
xor
loop
rcl
push
sub
outs
xchg
add
movs
hlt
xchg
ror
cdq
imul
sbb
sub
and
xlat
and
jl
add
cli
pop
test
mov
adc
pop
push
addr16
mov
sub
sbb
cwde
adc
std
sub
mov
ffree
pushw
jecxz
push
mov
gs
push
clc
and
mov
mov
repz
outs
add
adc
mov
add
lods
dec
jne
xchg
xchg
cwde
sbb
mov
mov
xlat
mov
jmp
sbb
imul
sbb
xchg
shl
jmp
jae
test
sub
mov
nop
(bad)
or
out
mov
jmp
mov
mov
xchg
mov
jno
mov
or
aad
sub
sbb
jl
adc
ins
rcr
sbb
cmp
and
je
fwait
push
push
or
cmps
cwde
xor
out
ds
jnp
das
int
sub
cmp
addr16
sbb
iret
dec
cwde
push
movs
fadd
xchg
mov
and
das
bound
add
mov
in
js
mov
imul
adc
inc
inc
mov
xor
jmp
fadd
outs
outs
jne
sub
mov
les
mov
lods
out
(bad)
pop
in
push
rcl
retf
mov
inc
(bad)
xor
and
popf
fcomp
add
adc
push
dec
sub
jne
stos
xor
lods
cli
or
rcr
mov
adc
enter
stos
aam
inc
mov
(bad)
ins
pop
shl
sub
into
loopne
(bad)
nop
std
cmp
sub
lods
xchg
mov
adc
pop
inc
adc
jl
leave
int3
cli
scas
xor
in
adc
cld
and
outs
pop
pop
ss
dec
shl
lds
cmps
add
or
push
inc
sahf
stc
cmp
out
add
pushf
sub
cmp
retf
sbb
push
inc
jl
int3
es
lods
adc
xlat
pop
loope
or
mov
ret
sbb
sub
int
aas
ins
pop
lock
jbe
pop
jnp
or
(bad)
xor
mov
pop
popf
sbb
iret
push
imul
mov
cmc
xchg
push
test
mov
mov
dec
xchg
push
movs
xor
inc
cli
and
out
adc
push
sbb
xchg
arpl
clc
adc
cmp
pop
mov
ss
retf
mov
sub
les
pop
neg
add
pop
scas
mov
call
sbb
fld
inc
cld
std
es
sub
xchg
sub
push
enter
mov
dec
xchg
stc
fst
mov
adc
cmp
rcr
adc
out
dec
push
pop
repz
jo
and
pop
cmps
in
mov
and
pop
mov
sti
ret
daa
into
fs
push
out
mov
shl
cwde
mov
pop
adc
in
enter
jmp
call
pop
imul
and
push
cmp
mov
mov
mov
jno
ins
int
xchg
push
inc
jmp
arpl
clc
jp
sub
loope
into
cld
inc
out
retf
movs
(bad)
sbb
or
(bad)
je
jmp
fs
popa
popa
aam
mov
push
imul
ss
cmp
adc
fidiv
(bad)
cmp
loopne
out
push
je
inc
pop
mov
out
pop
out
loope
shl
imul
pop
jnp
js
and
inc
pop
xor
adc
and
inc
mov
and
mov
cmps
mov
dec
mov
cmp
(bad)
rcr
pop
sub
sbb
psubusw
mov
mov
mov
gs
in
repnz
dec
sbb
sub
jo
aad
xor
mov
scas
and
sub
mov
je
lods
adc
(bad)
neg
inc
cmp
mov
mov
daa
xchg
outs
adc
jl
jge
test
movs
cmp
sbb
sar
loope
jle
mov
addr16
fadd
inc
inc
dec
mov
or
js
mov
pop
and
jne
push
dec
mov
out
shrd
out
mov
movs
aas
pushf
xchg
cld
and
clc
test
pop
adc
ins
sbb
mov
test
bound
jp
int
mov
dec
jp
jne
fwait
repz
shr
inc
sub
mov
sub
sbb
imul
mov
(bad)
dec
mov
call
pop
mov
push
xchg
or
lahf
shr
scas
cmp
cli
mov
mov
mov
sub
xor
jne
lods
(bad)
int
xchg
mov
std
(bad)
mov
ficomp
dec
jge
mov
ficom
ret
icebp
mov
cmp
mov
pop
in
inc
stc
jbe
mov
or
jl
mov
sbb
cmp
push
sub
fld
pop
ins
xchg
mov
sub
cmp
ja
movs
add
sbb
fwait
nop
aam
sub
movs
mov
loopne
cmp
fs
rcl
popw
dec
lea
jns
popa
xchg
push
mov
jge
and
mov
repnz
sti
push
loope
jmp
adc
shl
jae
dec
cmp
daa
dec
xchg
sub
xor
mov
push
jmp
cmp
push
mov
xchg
jo
cli
pop
scas
push
mov
das
cmp
jno
xchg
leave
lods
in
sbb
in
mov
jae
jbe
xchg
sbb
mov
or
int3
lods
dec
je
xchg
jno
in
cmp
xchg
mov
pusha
dec
adc
jp
ds
dec
mov
mov
mov
shl
mov
add
(bad)
or
es
ins
jge
xchg
rol
pushf
scas
xchg
push
mov
dec
cmp
mov
pop
xchg
jns
popa
mul
jo
neg
adc
pop
push
ins
dec
xchg
sub
pushf
es
loopne
stos
xchg
add
mov
mov
imul
loopne
leave
jp
(bad)
mov
add
sbb
cmp
in
inc
lock
daa
sub
inc
dec
fimul
lock
cld
add
inc
aam
cmp
or
aad
mov
shufps
fldenv
cmp
and
mov
inc
or
fstp
dec
push
shr
add
fs
lods
std
cdq
cmp
xor
or
popf
mov
mov
xchg
jne
lods
call
(bad)
fistp
loope
push
xchg
ins
int3
ja
push
fldenv
dec
cld
mov
clc
inc
mov
mov
jb
pop
adc
mov
ret
inc
fmul
cmp
sub
les
or
mov
ds
ret
loopne
mov
stos
scas
stc
cmps
ret
push
test
mul
(bad)
loope
mov
ret
fld
mov
sub
retf
rol
sahf
out
sub
sbb
or
sbb
in
mov
push
sub
mov
and
mov
or
call
loope
leave
dec
or
add
js
dec
push
int3
mov
mov
jge
cmp
idiv
imul
aas
add
xlat
sub
dec
je
(bad)
test
xchg
jmp
cmp
push
stos
mov
sbb
ss
int3
jbe
lods
inc
ds
fsubr
fs
push
popa
dec
push
sub
fldenv
push
mov
push
push
inc
adc
jno
pop
leave
mov
fbld
(bad)
adc
stos
inc
test
fmul
(bad)
inc
push
dec
std
jns
pop
xchg
jl
stos
xchg
sar
ret
mov
fdiv
jl
outs
xchg
fwait
adc
addr16
out
cdq
bound
cmp
push
scas
pop
adc
mov
push
retf
cmps
movs
loopne
jno
mov
cmove
jmp
ins
ins
lds
fiadd
mov
out
js
jo
sub
mov
mov
pusha
je
loop
and
adc
and
loop
mov
out
mov
sub
mov
jmp
xchg
and
mov
pusha
sbb
push
fisub
mov
adc
(bad)
cmp
cmps
xor
nop
sub
jge
outs
test
repnz
mov
rcl
loope
cmp
inc
mov
jmp
jmp
scas
xor
xchg
sti
jmp
xor
ret
and
(bad)
and
scas
repz
jl
inc
iret
sbb
ss
xchg
add
loopne
mov
push
enter
push
sub
mov
fdiv
add
dec
aam
loope
je
nop
sub
adc
cli
push
repz
jle
dec
in
xlat
adc
jae
fld
xor
scas
in
pop
fisubr
xor
sbb
repz
int
adc
pop
push
mov
xchg
sbb
ret
into
retf
inc
add
loope
add
std
or
inc
mov
mov
pop
sbb
je
jae
pop
add
mov
data16
dec
fwait
mov
or
mov
loop
inc
or
mov
adc
inc
jg
icebp
aaa
dec
xor
jmp
mov
inc
stos
cmp
pop
jnp
lods
jne
cmps
ins
jle
adc
xchg
jmp
das
mov
arpl
mov
mov
addr16
ins
retf
retf
add
mov
stos
pop
xchg
xchg
loop
(bad)
cmp
and
sbb
push
repnz
pop
mov
imul
ins
dec
retf
ins
jl
mov
dec
sub
cmp
sbb
xchg
mov
scas
jne
inc
mov
(bad)
cmp
fisubr
cmp
and
inc
jecxz
sub
sti
test
cmc
inc
je
xchg
test
movs
into
cmp
or
push
es
je
ret
sub
or
(bad)
jb
cwde
pop
dec
add
into
and
or
push
and
fcmove
xor
push
dec
bound
mov
cmp
cmp
sub
mov
je
loopne
loope
and
xor
(bad)
or
jle
scas
sbb
movs
and
cpuid
adc
mov
inc
sub
cwde
jp
inc
adc
lahf
fdiv
jns
out
cwde
pop
dec
ja
mov
ja
xchg
mov
in
jno
lods
sub
mov
push
mov
shl
fwait
push
data16
xchg
adc
cmp
cmp
lds
popa
aad
fisttp
sub
push
pop
and
xchg
cmp
push
test
sbb
cmp
pop
mov
xchg
or
xor
dec
(bad)
jbe
sub
mov
xchg
push
xchg
aad
aas
push
movs
jl
mov
dec
mov
cmp
ins
cmps
js
mov
bts
adc
neg
jmp
imul
xor
sbb
loop
loope
push
cld
or
pop
daa
je
adc
dec
mov
aas
sahf
mov
sub
clc
jp
mov
mov
adc
push
out
adc
js
cmp
loop
and
inc
xor
mov
pop
dec
sbb
mov
dec
dec
adc
cmp
gs
cs
sub
sub
test
jne
pop
fisub
dec
aam
xchg
pop
sbb
jmp
cmp
(bad)
movs
shl
push
in
in
(bad)
popf
fs
fs
into
adc
sbb
fsub
repz
inc
test
lods
sbb
shl
xchg
cmp
cmp
push
loop
xchg
inc
shl
leave
retf
push
dec
clc
mov
je
mov
jne
mov
bnd
fs
xor
dec
(bad)
aaa
ins
inc
icebp
cmp
xchg
into
adc
aam
inc
mov
(bad)
adc
cmps
dec
xchg
lock
inc
dec
sti
into
xchg
imul
jo
or
mov
xor
xchg
test
jmp
sbb
mov
sub
mov
mov
inc
or
mov
in
xchg
and
call
cmp
sbb
pop
jmp
int3
pop
(bad)
mov
(bad)
ficomp
ds
inc
mov
or
ds
fstp
mov
fwait
pop
cs
mov
repnz
pop
ins
xor
(bad)
out
test
and
fs
inc
mov
nop
addr16
sbb
ret
push
xchg
inc
sub
pop
ds
mov
xor
push
aaa
ds
or
mov
test
push
jg
je
pop
inc
std
jp
bound
cmps
xchg
repz
pop
sbb
add
rcr
mov
js
fnstcw
les
inc
aam
mov
pop
cwde
jl
ret
sub
in
in
push
adc
cwde
push
pop
fwait
(bad)
mov
ss
rcl
mov
retf
ror
imul
or
sub
ins
jg
lea
retf
ret
or
lods
ss
leave
sub
lods
mov
xor
loopne
fs
lds
xchg
int
dec
mov
push
mov
pusha
xchg
rcr
pop
aad
dec
or
push
cmp
out
sub
scas
sti
push
jle
jbe
xlat
adc
and
iret
cs
lahf
push
pop
test
bound
iret
lea
std
jns
and
pushf
in
sbb
push
fwait
out
daa
addr16
inc
(bad)
rcr
loopne
imul
leave
adc
dec
and
gs
or
das
sbb
lods
jb
cmp
lea
call
rol
sub
mov
pop
mov
adc
and
mov
sti
frstor
rol
xchg
push
out
xchg
and
push
mov
es
out
xchg
cs
jns
mov
inc
adc
movs
xchg
js
sub
icebp
mov
mov
and
xor
rcr
aas
(bad)
fsubr
sub
mov
adc
or
push
stos
jg
loope
add
jne
arpl
mov
push
and
xor
ret
sbb
movs
enter
int3
jnp
jle
in
es
mov
nop
inc
jmp
jle
cmp
ret
mov
bound
adc
xchg
gs
aas
movs
inc
jbe
cmc
dec
inc
pop
push
icebp
add
aas
and
movs
xor
xor
mov
sub
mov
cmps
push
adc
inc
ja
and
lds
fadd
cmp
mov
jle
sbb
mov
and
adc
mov
cmp
fucomip
dec
hlt
ja
mov
in
pop
push
ret
outs
inc
push
or
(bad)
aam
test
dec
icebp
cmp
ins
cmp
out
bound
mov
jecxz
imul
sub
shl
mov
push
cmp
repz
adc
mov
pop
scas
mov
lods
movs
in
stos
sub
dec
ss
and
pop
jae
test
dec
xlat
dec
int3
adc
scas
xchg
sub
inc
repz
scas
jno
js
pop
xor
push
and
push
pop
mov
ja
dec
repz
push
add
fisttp
mov
push
inc
sub
xchg
fs
mov
ret
scas
mov
loop
or
xchg
lods
push
inc
xchg
js
das
and
mov
out
je
jnp
call
adc
sbb
int3
cmp
adc
or
test
inc
gs
addr16
pop
and
int3
adc
xor
aas
das
xor
mov
hlt
mov
mov
dec
mov
fs
(bad)
(bad)
in
xchg
sub
xchg
movs
push
outs
out
xchg
mov
sbb
sub
movs
leave
cmp
or
ds
rcr
inc
xchg
mov
in
adc
jb
daa
lods
sub
mov
mov
pop
jl
cmp
jnp
or
jae
jb
inc
jbe
jne
xor
fimul
stc
push
push
stos
aad
cs
xor
outs
jmp
mov
mov
ret
xchg
(bad)
loope
push
dec
movs
inc
popa
pop
xor
sub
inc
jns
sbb
retf
xchg
sbb
fdiv
jns
out
into
xlat
fwait
in
imul
mov
mov
mov
icebp
push
add
xor
jle
xchg
dec
xchg
xor
int3
mov
jg
mov
outs
or
cli
stos
mov
retf
mov
cmp
xchg
mov
adc
neg
les
sbb
sub
dec
enter
push
or
jl
aam
cmp
int3
or
jmp
adc
retf
mov
addr16
ja
jb
fld
dec
mov
mov
inc
rcr
sbb
dec
pop
mov
fwait
mov
xchg
lock
dec
push
cwde
pop
stc
outs
cwde
(bad)
les
sti
hlt
retf
or
mov
mov
cmp
in
push
je
iret
jnp
xchg
arpl
adc
xor
xor
pop
add
stos
leave
out
jbe
cmp
push
inc
lods
sub
repnz
adc
jne
loop
in
outs
adc
jmp
cmp
jne
xlat
or
mov
jmp
mov
cmc
jmp
fld
inc
sbb
mov
aad
rol
sub
icebp
xor
inc
inc
rol
enter
addr16
aam
stc
jle
sbb
inc
inc
cwde
xor
adc
popf
adc
sub
js
lea
aas
push
or
repnz
scas
gs
icebp
mov
jne
or
rol
adc
jno
jge
mov
call
mov
sar
ror
push
xor
stc
cmc
cmps
fucomp
inc
inc
stc
xor
and
push
je
(bad)
stos
retf
divps
cli
je
dec
test
push
ss
add
ret
mov
retf
add
xchg
aam
iret
or
popa
dec
mov
mov
xor
pop
pusha
jmp
push
mov
jge
add
jb
cmps
loop
sti
shl
lods
and
in
aas
test
lods
mov
xor
or
ret
dec
shr
int3
in
push
push
leave
clc
iret
fimul
out
xor
lea
retf
cdq
pop
rol
or
out
xor
call
cmp
xlat
jmp
mov
xchg
aaa
fisttp
fild
ret
in
ins
push
pop
xlat
shl
dec
lock
xor
or
inc
adc
mov
and
adc
scas
loop
xchg
cmc
jle
dec
adc
mov
addr16
cmp
inc
sbb
call
fstp
push
out
stos
adc
out
jle
push
sbb
cmp
stc
scas
out
movs
or
iret
jg
fld
jb
cmp
addr16
jg
cmps
and
push
add
cmp
cmp
push
jae
clc
dec
repnz
(bad)
imul
and
pushf
outs
pushf
mov
push
cli
mov
mov
sbb
cld
mov
out
retf
fmul
outs
mov
ret
sar
into
jp
mov
sub
fst
es
aas
push
push
ja
add
xchg
mov
pusha
sbb
scas
out
sbb
test
and
call
jb
fwait
stos
dec
ins
xchg
loopne
out
pushf
test
pusha
out
mov
adc
ins
sbb
pop
xchg
or
(bad)
sbb
mov
pusha
sbb
shl
fstp
bound
dec
je
adc
gs
push
xor
movs
bound
inc
inc
dec
push
or
and
mov
jl
inc
jl
inc
lock
mov
or
cld
mov
xlat
or
mov
(bad)
sti
sbb
push
dec
repz
mov
inc
xchg
scas
aaa
fmul
push
or
and
mov
or
inc
daa
push
out
cmc
xchg
xchg
mov
push
add
cmp
xchg
mov
out
adc
add
sub
repnz
adc
pop
cmps
inc
add
xchg
jge
sbb
pop
sbb
shl
in
adc
mov
jne
mov
or
jnp
test
popa
push
and
dec
addr16
shl
xlat
lods
cmovs
aas
cdq
dec
out
fdivrp
into
out
sub
daa
outs
jmp
mov
int
xchg
jl
icebp
stc
repz
push
pushf
fs
jg
mov
sbb
rol
and
mov
retf
sub
sti
lods
dec
fisttp
mov
xchg
sahf
mov
push
imul
ins
lea
xor
pop
ret
push
icebp
popa
jbe
mov
push
and
cmp
pop
enter
cmp
mov
pop
daa
inc
stos
inc
dec
jae
or
mov
ds
mov
das
int
je
sahf
cmp
stos
dec
bound
dec
adc
jmp
je
dec
cmp
adc
aas
push
(bad)
popf
pop
nop
arpl
test
sub
(bad)
cmp
dec
and
mov
dec
pushf
repz
pop
out
repz
sbb
ins
cld
add
test
shl
xadd
push
push
xlat
ret
ficomp
sti
mov
mov
pushf
das
mov
retf
leave
push
sbb
mov
out
inc
mov
nop
or
leave
in
test
sub
cld
(bad)
mov
in
push
sub
fdivr
xor
(bad)
push
pop
or
inc
mov
or
jno
jl
rcl
mov
in
xor
add
mov
gs
popf
inc
add
cmp
pmullw
jnp
stos
loopne
outs
sbb
dec
inc
mov
rep
jbe
mov
mov
out
dec
jno
call
mov
sub
push
rcr
mov
mov
mov
or
stos
test
cmp
and
cmc
imul
push
js
push
push
fs
cmp
ror
icebp
push
fcmovnb
and
div
push
cdq
dec
and
(bad)
and
mov
dec
pop
mov
inc
inc
and
bound
mov
test
pop
xchg
add
arpl
out
add
inc
push
rol
dec
fisttp
scas
mov
add
cmc
xchg
out
mov
lea
fdivr
loopne
xchg
(bad)
std
xor
icebp
scas
stos
xlat
aam
in
(bad)
pop
test
mul
jmp
movs
xchg
fsubr
or
std
push
mov
mov
adc
jnp
stc
pushf
cmp
and
in
scas
mov
dec
push
jecxz
in
cmp
mov
cmp
mul
pop
pushf
add
lods
mov
pop
ins
gs
cmp
mov
popa
into
movs
imul
jne
jge
dec
stc
test
lahf
lods
xor
sbb
push
pop
jne
add
shl
xchg
imul
pop
sbb
mov
push
loop
les
lods
popa
pop
or
xor
and
stc
push
ror
mul
fnsave
enter
pop
loope
inc
xchg
ins
mov
loopne
adc
fmul
mov
int3
mov
popf
sti
sub
mov
sub
(bad)
loopne
repz
jp
fild
jge
jg
xlat
cmp
lahf
ja
aam
test
stos
mov
cmp
sbb
mov
lods
mov
mov
jo
pop
popf
add
and
clc
(bad)
sbb
mov
repz
movs
mov
add
in
inc
cdq
cdq
or
dec
mov
inc
pop
mov
in
xchg
fld
adc
leave
adc
call
mov
rcr
sbb
pop
loopne
pop
loopne
cmp
and
xchg
sub
bound
cmp
jp
add
cwde
in
out
sar
xchg
pushf
daa
in
sub
mov
lods
test
inc
dec
mov
(bad)
stc
pop
cmp
pop
mov
ficomp
jb
addr16
(bad)
fs
mov
lahf
sub
mov
xor
mov
cli
scas
lds
and
sbb
fnstenv
retf
fistp
rcl
cwde
lods
xchg
jne
mov
jl
pop
fs
jle
fidivr
cmps
mov
mov
mov
xchg
inc
out
leave
push
(bad)
xor
adc
js
push
dec
mov
jmp
in
add
mov
(bad)
fisub
xchg
mov
push
cmps
xchg
and
dec
dec
dec
mov
mov
hlt
sar
jecxz
rol
sub
push
jb
inc
fst
or
mov
adc
xlat
loop
pop
ficomp
adc
ds
and
xor
popf
aam
inc
and
fisttp
cmps
(bad)
or
movs
out
retf
rcr
adc
inc
(bad)
sar
add
fxch
inc
loopne
fcomp
inc
pop
sahf
bound
icebp
lea
ins
in
xchg
push
fwait
cmp
(bad)
mov
scas
add
aad
mov
cmp
xchg
sub
js
mov
cmp
lods
xchg
pop
int
in
ds
in
popa
jnp
popf
dec
std
push
push
mov
mov
stos
test
scas
aaa
fnstsw
mov
aas
icebp
cmps
or
retf
cs
adc
inc
retf
adc
test
sub
aas
loop
jno
loop
add
push
mov
mov
jo
xchg
push
xchg
inc
xchg
fimul
push
js
mov
mov
push
cmp
pop
rol
push
mov
(bad)
inc
data16
jp
push
daa
sub
inc
lea
inc
cmps
pop
adc
(bad)
sbb
mov
sbb
enter
pushf
push
rcr
mov
xchg
arpl
dec
pop
pop
mov
dec
pop
mov
dec
inc
icebp
pop
pop
fldcw
fcom
pop
(bad)
mov
retf
ja
adc
mov
sbb
movs
les
test
inc
xlat
dec
add
push
xor
sub
push
jg
fs
cmp
and
sub
mov
div
push
(bad)
in
sar
out
jmp
icebp
sbb
(bad)
pop
push
in
sub
in
inc
add
cld
outs
pop
dec
cmps
inc
outs
jb
push
cmp
ret
push
pop
int
push
push
clc
ret
inc
in
cmp
jg
push
int3
and
in
lock
shl
push
cmp
shl
in
daa
arpl
jg
cmp
sti
xchg
js
sub
movs
mov
imul
mov
je
xor
sub
ficomp
iret
fdivr
pop
shr
dec
mov
lea
gs
in
lds
sub
adc
cmps
popf
push
mov
mov
bound
(bad)
inc
call
rol
jmp
jmp
jmp
sub
push
mov
dec
inc
jl
leave
cmp
daa
ins
sahf
rcr
mov
add
fmulp
push
push
dec
xchg
push
add
sar
xor
shl
je
sub
add
sub
ret
cmp
cdq
stos
jns
xlat
ins
sub
ret
nop
fmul
and
gs
push
push
call
daa
(bad)
lock
fsubr
pushf
fs
mov
ret
add
sbb
enter
xor
(bad)
fild
(bad)
stc
dec
cwde
mov
retf
retf
sbb
(bad)
call
cmp
sbb
cmc
cmp
xchg
shr
ss
jns
adc
dec
ret
mov
jo
push
mov
mov
mov
lahf
fsubr
shl
lea
add
cmps
cmp
pop
mov
dec
xchg
cld
mov
jno
imul
push
xor
pop
in
dec
mov
push
je
sbb
jbe
les
ja
pop
cmp
jl
dec
mov
jb
mov
jae
xchg
pop
push
mov
and
mul
pop
jl
repnz
popf
mov
dec
or
or
or
outs
sbb
sbb
lea
add
inc
ins
stos
mov
ss
mov
sub
cmp
fst
mov
ret
adc
(bad)
js
fld
shl
or
push
out
dec
nop
sub
out
loope
jl
inc
mov
push
sahf
xlat
or
ins
inc
sub
or
clc
fwait
mov
cmc
jno
arpl
or
hlt
adc
jae
push
adc
retf
test
mov
and
xor
pop
cdq
xchg
pop
movs
rcr
ja
into
or
data16
das
je
(bad)
dec
jg
movs
nop
lods
mov
sub
ds
cmps
and
mov
es
mov
pop
xor
stos
cmp
pop
lahf
sbb
lahf
xlat
sbb
stc
test
xor
ret
ror
and
push
xchg
out
movs
fstp
jl
dec
addr16
pop
adc
adc
rol
iret
push
loopne
mov
and
bound
jg
bound
inc
clc
cld
cli
stos
push
ret
cmp
lock
retf
jmp
jbe
add
(bad)
fdivr
cdq
adc
xchg
pop
mov
and
add
sub
sbb
scas
and
cmp
xchg
int3
mov
adc
dec
ds
inc
js
mov
add
std
pop
and
cmp
sub
xor
and
add
mov
clc
inc
add
xchg
sub
dec
imul
imul
sbb
add
xor
pop
addr16
pop
stc
jne
pop
(bad)
xor
mov
push
repnz
repz
mov
push
out
aam
lea
pop
inc
bound
imul
movs
jl
xor
add
mov
pushf
inc
aad
dec
push
stos
cwde
xor
xor
repz
rcr
aad
xor
loopne
daa
fst
adc
(bad)
test
out
add
mov
ins
dec
movs
int3
and
mov
shr
mov
or
inc
xchg
mov
cmps
pop
cmp
adc
lods
xor
stos
mov
pop
int
out
dec
in
mov
clc
ret
add
fwait
loopne
xor
repz
out
inc
mov
cwde
clc
cmp
dec
inc
jge
stc
and
rol
imul
add
mul
or
mov
sbb
loope
pop
bnd
mov
rcr
loopne
test
hlt
popa
jae
outs
sub
mov
mov
mov
movs
jne
adc
std
jnp
inc
(bad)
jo
cmp
cli
mov
lahf
pop
sbb
xor
lds
sbb
inc
call
frstpm(287
stos
push
aam
dec
shl
or
(bad)
aam
ror
ret
pop
std
fmul
jmp
jb
or
push
rcl
xor
std
fucomp
mov
jmp
xchg
jg
add
lods
push
jmp
inc
jmp
dec
xchg
mov
add
dec
sub
lock
xchg
sub
ins
jle
jecxz
leave
aaa
sub
sub
stc
jno
push
fnstsw
add
jge
dec
dec
popa
daa
add
scas
sub
test
fs
xor
push
lods
mov
mov
jnp
stc
dec
std
pop
shl
push
retf
lea
xchg
or
push
cmp
pop
adc
add
dec
pop
sub
scas
sar
sub
aas
mov
loopne
call
(bad)
in
bound
lea
pop
int
cmp
mov
xor
or
idiv
lea
jns
sbb
and
retf
lea
xor
cmps
loop
jne
ds
es
sbb
mov
aam
sbb
push
mov
iret
(bad)
iret
jmp
ret
mov
(bad)
dec
int
ret
shl
cmps
adc
or
mov
int3
push
cld
mov
fnstenv
push
or
inc
xchg
cmp
test
cs
mov
mov
and
cmps
mov
xlat
dec
cmp
popf
pop
fs
repnz
cwde
(bad)
fs
fcom
inc
cld
movs
sub
aas
ror
xor
add
pop
mov
mov
mov
jns
cwde
jae
cs
and
xor
loop
pop
inc
imul
lahf
sahf
(bad)
mov
xor
js
fidivr
imul
stos
ja
aaa
scas
adc
mov
push
pop
jecxz
xchg
or
xor
in
mov
(bad)
fcomp
jge
test
aad
or
mov
dec
pop
pop
and
(bad)
(bad)
aad
jg
loopne
retf
sub
in
xrelease
js
dec
rcl
adc
xchg
mov
cs
loopne
jne
test
rcl
push
lods
dec
in
sub
xchg
adc
xchg
mov
jo
hlt
inc
es
or
inc
in
mov
lds
fdivr
(bad)
push
mov
mov
xchg
cli
mov
mov
add
mov
out
daa
inc
outs
inc
pop
out
leave
fadd
mov
cli
inc
cdq
loope
mov
mov
push
(bad)
nop
repnz
inc
lods
sub
loope
jge
sub
jmp
push
(bad)
adc
call
pop
rcr
nop
fist
sbb
jge
repz
inc
aam
cmp
stc
fidiv
add
sub
out
ins
sub
push
mov
and
and
mov
sbb
scas
sub
(bad)
jmp
cmp
or
mov
icebp
pushf
ret
adc
mov
pushf
adc
pop
clc
leave
mov
xor
dec
xchg
add
int3
jo
or
jne
sub
mov
je
pop
loop
jmp
pop
test
cmps
cdq
jle
pop
les
idiv
cld
cmp
or
mov
test
dec
fidiv
inc
and
dec
aad
push
jns
inc
mov
lea
daa
mov
loop
movs
or
and
inc
cmp
(bad)
in
and
(bad)
jmp
(bad)
cld
lods
fdivr
and
mov
shl
and
test
push
sbb
sbb
hlt
imul
outs
cwde
mov
movs
add
xchg
add
mov
shl
fxch
loop
das
test
into
sub
push
mov
sub
pop
or
mul
push
ror
jnp
push
sahf
loop
and
test
push
js
pop
mov
sub
push
push
aaa
ret
call
loope
and
or
popa
lock
lds
scas
ror
add
cmps
ds
jmp
nop
lea
fidivr
jle
sub
daa
sbb
in
test
push
push
fist
push
test
pop
jmp
sahf
mov
mov
dec
jecxz
(bad)
mov
clc
out
inc
inc
into
mov
mov
push
scas
mov
lds
fwait
popa
shl
cmp
es
sbb
pop
jmp
stos
fist
xlat
addr16
push
or
shl
cmp
mov
add
ror
jl
out
nop
pop
int
push
ret
xor
sub
dec
sbb
mov
mov
ret
inc
es
jp
dec
add
(bad)
mov
in
mov
pusha
mov
sbb
xchg
jmp
pop
push
stos
and
jmp
(bad)
test
mov
add
dec
fmul
push
pushf
popf
es
dec
xor
ret
not
lods
out
and
outs
mov
retf
sbb
mov
add
jmp
mov
fadd
outs
rcr
or
ja
mov
jmp
repnz
or
push
clc
aam
xchg
lds
inc
jae
loopne
pop
call
scas
jge
or
out
mov
mov
leave
mov
into
test
xchg
add
dec
scas
cwde
xlat
sbb
mov
adc
jmp
movs
sbb
cmps
(bad)
jo
out
add
daa
fsubrp
imul
inc
mov
fimul
stos
stc
jg
fcom
pop
xor
int
std
dec
enter
xor
js
in
out
mov
in
test
nop
mov
or
movs
addr16
jmp
jge
mov
add
(bad)
xor
daa
fstp
fadd
push
jns
inc
(bad)
cmp
arpl
xchg
or
sub
xchg
xor
or
pusha
dec
cmp
xor
adc
(bad)
(bad)
cmps
or
jae
loop
add
int3
pop
imul
dec
jecxz
repnz
outs
fisub
xor
test
pop
(bad)
add
inc
pop
rcl
aad
fsubr
fsubp
nop
repnz
mov
imul
xor
cwde
xchg
in
fisttp
push
mov
pop
data16
repnz
(bad)
mov
loop
movs
ror
ds
mov
(bad)
in
lds
lea
pop
xor
retf
mov
mov
cmp
adc
jns
adc
sub
(bad)
cmp
imul
jne
bound
repz
pushf
mov
test
pop
je
stos
sbb
dec
inc
jecxz
nop
xchg
and
add
div
cmp
mov
fist
fistp
in
pop
pop
sbb
inc
lock
adc
jge
mov
daa
cmp
stos
jo
in
in
sbb
mov
pop
jae
pop
jge
or
mov
rol
call
sub
aam
loope
dec
jge
idiv
rcr
and
addr16
xchg
xor
xor
push
(bad)
sub
fistp
pop
mov
inc
xor
stos
mov
fnstenv
sub
fisttp
test
jae
in
xor
jecxz
sar
aam
xlat
jo
movs
jne
jmp
mov
adc
xor
cdq
xor
push
mov
out
cli
scas
test
arpl
les
outs
cld
ret
cmp
add
add
jno
outs
mov
jne
adc
sahf
out
aaa
ins
xchg
cmps
push
mov
aad
push
mul
cdq
leave
adc
fiadd
or
or
cmps
mov
mov
mov
imul
rcl
mov
(bad)
push
dec
mov
fisub
mov
dec
fistp
enter
fdivr
add
jbe
mov
dec
push
push
inc
sub
leave
xlat
dec
adc
push
mov
and
aaa
scas
icebp
sub
dec
and
mov
push
pop
sub
jnp
xchg
(bad)
loope
sbb
cdq
hlt
idiv
sub
sub
xchg
(bad)
dec
pop
aam
pop
loopne
movs
xchg
shl
es
retf
push
jmp
add
xchg
outs
cs
pop
mov
bound
add
lea
adc
adc
push
fstp
inc
imul
dec
sub
daa
inc
inc
in
ret
ror
xchg
dec
dec
loop
push
std
adc
shl
ins
sub
mov
lea
sub
push
popf
sbb
mov
je
dec
xor
sub
pusha
(bad)
jb
call
sub
js
cmps
or
ror
mov
aas
(bad)
in
or
mov
cmp
mov
jno
call
mov
mov
mov
ret
xchg
jg
test
jmp
(bad)
mov
jp
pop
(bad)
(bad)
js
not
imul
cmps
xor
mov
pop
mov
inc
mov
sti
aas
cmc
in
aad
(bad)
push
adc
stc
pop
inc
mov
sub
or
mov
jmp
mov
pop
test
mov
jns
adc
adc
ins
rcl
push
ins
jmp
dec
mov
lods
xor
aaa
xchg
jg
jg
push
adc
add
cmp
add
xor
lods
cmp
(bad)
xor
(bad)
mov
in
cmps
stc
jbe
and
or
jg
inc
dec
xor
mov
movs
aas
push
adc
icebp
dec
xchg
outs
add
jge
jnp
jl
sahf
jmp
shl
jo
pop
sar
xchg
inc
sbb
repz
lods
push
pop
jge
cmp
jmp
pop
sbb
lds
das
gs
stos
mov
jnp
fcomp
stc
push
or
test
jmp
lea
mov
das
xor
cmp
ja
xlat
sbb
lea
cwde
push
ret
adc
hlt
sbb
retf
xor
sbb
cmp
lahf
mov
and
ficomp
mov
dec
and
sub
cmp
pop
push
jmp
fidiv
shr
adc
push
int
rol
mov
test
sub
cmp
clc
push
aaa
sub
cmp
jnp
test
test
mov
and
push
push
test
xchg
xor
addr16
sbb
std
mov
pop
das
ret
mov
sub
nop
bound
movs
lods
jmp
mov
or
enter
push
pop
xor
mov
and
ins
mov
push
or
call
clc
push
adc
(bad)
mov
mov
jno
cmp
cdq
jmp
stos
inc
inc
cmp
jp
cmp
out
ss
rcl
xchg
es
pop
mov
cmp
cmp
js
inc
arpl
add
lahf
fnsave
pop
mov
fs
push
ins
mov
fdivr
jl
nop
pop
push
mov
sub
fs
repz
xchg
or
les
stos
stc
sti
jo
xor
dec
xor
out
jecxz
mov
fdiv
sbb
jno
ror
leave
mov
aam
leave
mov
xor
inc
pushf
xor
jmp
clc
loopne
mov
je
or
int
xor
xor
jle
pusha
jecxz
inc
or
sub
dec
hlt
ds
pop
aaa
jno
pop
les
pop
dec
pushf
push
ins
pop
shl
inc
jmp
mov
dec
cmps
dec
aad
test
call
(bad)
and
pop
inc
pop
arpl
rcl
pusha
xor
add
add
xor
xchg
lods
jno
and
in
popf
jo
out
mov
push
cli
fistp
ud0
push
xlat
add
mov
xor
xchg
aam
sub
scas
mov
xchg
push
mov
xchg
scas
jecxz
mov
xor
lock
push
sbb
mov
xor
inc
mov
pop
ror
sbb
jno
add
fwait
cmps
ins
jo
jmp
adc
cmp
(bad)
sahf
fidiv
and
adc
sar
setl
lods
xchg
cmps
sub
cmp
push
retf
out
movs
xchg
lea
mov
push
in
mov
jnp
neg
pop
and
fwait
mov
je
xchg
scas
(bad)
out
xor
out
fdivp
ins
adc
iret
inc
push
in
mov
mov
stos
in
(bad)
mov
cli
and
iret
add
cs
sbb
push
(bad)
mov
adc
mov
dec
or
pop
pop
ins
outs
stos
cs
xor
out
xchg
cmp
inc
int3
xor
cld
fldcw
mov
sub
sub
fbld
cmp
in
out
sar
jno
repz
inc
push
out
adc
fmul
and
imul
mov
cmp
ror
jp
(bad)
fucom
repnz
test
dec
dec
aam
leave
test
cmps
es
sbb
add
dec
cmp
jbe
dec
adc
push
mov
fwait
mov
icebp
loope
imul
cmps
outs
es
push
inc
lods
pop
jno
cmps
sbb
movs
jle
inc
push
int3
lods
pop
aas
push
inc
push
ins
cwde
xor
cmp
add
into
fisubr
pop
bound
int3
sub
cmp
lods
mov
movs
push
leave
lock
xlat
dec
in
jmp
xchg
sub
inc
push
add
add
loope
out
xchg
ja
push
pushf
xor
mov
dec
rep
mov
popa
popf
xchg
push
pop
ss
inc
adc
rcr
fdiv
int
or
xchg
mov
addr16
mov
mov
fcom
ss
js
push
push
xchg
mov
mov
mov
lea
ret
mov
repz
cmp
push
retf
pop
inc
clc
xor
aam
xchg
xchg
repz
push
add
retf
mov
inc
(bad)
cli
sub
iret
and
inc
or
cmp
dec
nop
stc
out
pop
xchg
jecxz
cmp
push
sahf
mov
inc
neg
cmp
leave
clc
push
mov
ins
rol
enter
xor
icebp
adc
mov
mov
inc
outs
inc
pushf
push
sub
inc
lods
ret
dec
out
jbe
adc
ret
push
ins
xlat
push
xor
jo
ret
xchg
and
fs
pop
arpl
adc
push
lods
repz
int3
and
data16
dec
loop
add
pop
jae
mov
test
xchg
stc
mov
push
dec
out
stos
pop
add
pop
call
popf
(bad)
mov
inc
test
mov
mov
mov
sahf
ja
dec
cmp
sub
into
icebp
add
dec
loopne
sbb
xchg
push
push
xchg
aad
dec
shr
mov
add
rcr
mov
cmp
lock
cwde
out
pop
push
ss
cmp
adc
js
es
clc
not
(bad)
mov
jbe
inc
ficomp
push
int3
push
sysenter
cli
test
popf
imul
jmp
loope
lock
out
jp
push
repnz
cmc
adc
ret
aaa
or
add
ds
xchg
jae
mov
out
xor
sbb
in
(bad)
xchg
repnz
outs
dec
cs
idiv
mov
retf
sahf
leave
cwde
inc
or
add
mov
retf
and
or
sbb
jge
adc
jecxz
into
outs
mov
fldcw
cmp
repz
sub
push
in
jl
or
cmp
lods
es
cmp
mov
call
cmp
inc
int3
out
gs
fidiv
xor
mov
lods
je
mov
cmp
push
scas
jnp
movs
test
mov
push
mov
das
outs
dec
jne
pop
sbb
mov
lods
dec
ins
add
aad
jmp
inc
mov
mov
mov
adc
arpl
lahf
cli
lds
push
scas
dec
mov
sub
sbb
mov
sti
jnp
iret
and
int
lods
mov
js
(bad)
sbb
loop
pushf
cs
sub
jo
push
xchg
jns
cmp
xchg
add
rol
dec
test
and
mov
call
ds
xchg
sub
add
(bad)
lock
mov
out
add
pusha
shr
cmc
xchg
repnz
loopne
loope
rdmsr
jge
pushf
mov
or
ins
and
adc
movs
push
ret
xor
dec
dec
mov
cdq
test
push
repz
repz
pop
lock
ficomp
pusha
call
imul
add
dec
mov
xchg
jecxz
scas
jb
mov
popa
scas
or
sbb
mov
ja
ds
push
add
fsub
je
dec
inc
test
mov
shl
int
enter
add
ins
in
leave
rol
js
and
enter
add
push
cmp
push
shl
sub
test
cli
push
lods
dec
daa
mov
and
lea
lods
pop
call
cmc
sub
cli
add
int
out
fninit
loope
pop
out
movs
jge
sub
mov
cld
push
and
sti
ror
cmp
pushf
scas
xchg
scas
sub
into
pop
jo
fld
cmp
into
(bad)
movs
inc
and
push
mov
loopne
ja
xchg
gs
pop
jg
icebp
mov
dec
and
xchg
add
adc
loop
mov
xor
pop
jbe
je
or
icebp
mov
mov
pop
sub
daa
imul
add
shr
sub
inc
in
xlat
sbb
mov
es
inc
cli
icebp
push
loop
rol
shl
dec
nop
ror
mov
cwde
ror
arpl
jmp
lea
jge
imul
xor
xchg
movs
add
fst
jae
push
retf
jge
pop
xchg
fisttp
fst
push
inc
push
pushf
mov
bound
and
dec
sbb
int
cwde
inc
mov
ret
or
nop
aaa
(bad)
xchg
lahf
data16
imul
dec
or
add
push
sar
outs
ror
adc
xchg
push
jae
loope
aas
(bad)
shl
add
jnp
xlat
push
mov
(bad)
xor
add
hlt
loop
sub
xor
jmp
push
pushf
or
jb
push
pop
scas
lock
into
rol
sti
mov
sbb
adc
retf
xor
and
imul
call
xor
fldenv
and
add
jg
or
ins
data16
lds
push
add
imul
adc
lods
daa
mov
lea
fdivr
push
adc
and
dec
cmp
mov
pushf
int3
adc
or
retf
mov
or
or
pop
shl
loopne
and
sub
mov
scas
loope
mov
call
fiadd
push
imul
mov
js
push
aas
jl
adc
es
adc
jmp
jb
pop
gs
jns
jne
push
enter
lods
dec
movs
je
stos
gs
or
out
mov
into
inc
lea
sbb
test
inc
out
cld
sti
rol
jbe
lahf
dec
enter
mov
sbb
fiadd
(bad)
cs
jmp
shl
sub
push
mov
cdq
pop
sub
xchg
out
sub
test
sbb
xchg
add
push
inc
pop
int
imul
mov
ss
repnz
mov
dec
stc
or
push
add
retf
ja
xor
lods
pusha
xlat
add
mov
cwde
xchg
sar
push
adc
fst
xor
inc
and
dec
jnp
loope
push
fsubr
imul
cli
ror
(bad)
arpl
dec
fsubp
jae
adc
aas
test
inc
push
inc
push
cmp
add
(bad)
add
dec
mov
out
cmp
fld
les
add
aaa
ins
lods
push
fadd
jmp
pop
scas
or
outs
jnp
pop
xchg
and
(bad)
ss
aaa
mov
pop
push
hlt
movs
loop
push
and
(bad)
icebp
cs
sub
shr
into
rol
add
jp
ret
int
add
sub
popf
fs
in
js
shl
stos
mov
sub
xchg
scas
jno
std
sub
in
fistp
push
rol
mov
xor
add
push
cmp
jge
or
pop
pushf
cmp
cmp
rol
cmp
push
xchg
(bad)
into
xor
jmp
dec
push
and
xchg
fs
mov
xchg
ret
adc
sub
inc
gs
add
in
retf
pop
and
adc
dec
ud0
cmps
sub
inc
retf
daa
mov
(bad)
arpl
sbb
and
or
out
cmp
cmp
iret
dec
lods
fidivr
add
retf
hlt
sbb
jecxz
push
outs
shr
aad
mov
(bad)
mov
jo
cmpxchg
xchg
in
add
scas
cmp
mov
or
sub
(bad)
shl
xor
pop
int3
cmp
cmp
movs
popf
pop
mov
adc
xchg
adc
nop
mov
dec
sbb
jp
and
add
popa
fsub
jmp
pop
iret
dec
and
sub
cmp
push
out
xchg
cmps
sbb
xchg
jb
sub
mov
sub
pop
sub
add
mov
sbb
pop
or
xchg
stos
fisubr
fcom
jge
out
(bad)
(bad)
call
mov
movaps
sbb
mov
mov
add
sub
adc
push
icebp
xchg
jne
popa
and
(bad)
fcmovnu
and
cli
test
jne
outs
mov
mov
clc
push
dec
je
pop
imul
test
cwde
xlat
adc
out
lea
mov
imul
lahf
and
movs
test
inc
inc
sar
push
xlat
jmp
inc
cmp
mov
scas
adc
shl
sub
das
adc
out
arpl
jecxz
and
fild
popa
pop
sub
pop
iret
and
and
stc
sub
stos
inc
shr
xor
pop
or
inc
sbb
fstp
leave
jmp
(bad)
inc
and
aaa
xor
xchg
push
push
repnz
ficom
xor
mov
out
sbb
and
addr16
lods
icebp
xchg
sub
jns
push
mov
mov
sahf
cmps
xor
jle
jae
add
xor
xchg
and
arpl
sub
sbb
(bad)
push
or
mov
out
mov
inc
nop
push
loopne
nop
test
mov
cmps
jg
lock
popa
test
into
les
ror
mov
in
push
imul
mov
push
dec
xor
dec
xor
cmp
sub
sub
outs
mov
jo
pushf
push
jmp
push
inc
dec
mov
jge
dec
jl
mov
cmp
xchg
sti
(bad)
xor
push
jle
sub
inc
mov
mov
(bad)
mov
jmp
lahf
fwait
in
xor
frstor
jecxz
pusha
shl
int
inc
ja
loop
(bad)
jp
test
push
cmp
adc
push
mov
leave
shr
mov
dec
fcmove
(bad)
in
pusha
cmps
jo
xchg
and
dec
xor
jecxz
or
push
inc
push
loopne
gs
in
mov
test
ins
repnz
or
push
jae
mov
lea
mov
sahf
mov
lock
push
test
sub
(bad)
scas
ret
fsubrp
sbb
(bad)
and
movs
and
sbb
shl
pop
mov
mov
push
jae
mov
test
pop
mov
push
push
pop
aam
(bad)
jl
pushf
cmp
(bad)
jb
retf
or
dec
add
iret
sbb
in
jnp
cmp
mov
ret
or
popa
mov
jo
mov
or
jl
cs
lods
femms
jmp
pop
sti
and
sub
sub
or
mov
scas
add
cwde
pop
stos
test
inc
shr
scas
push
jg
cdq
dec
dec
bound
mov
jle
ins
dec
pop
into
mov
icebp
sbb
cmp
test
aas
dec
xor
xchg
add
dec
(bad)
je
cmps
lods
fwait
je
sbb
outs
push
cli
mov
js
xchg
and
cmp
mov
adc
jnp
jl
std
fimul
sub
aas
or
je
jnp
mov
push
add
mov
cwde
outs
xor
adc
or
movs
and
pop
ins
rol
pushf
mov
jne
mov
cmp
and
sub
or
test
call
xor
sub
xchg
push
loopne
aaa
add
data16
or
fnstenv
mov
dec
jle
popa
and
xchg
out
popa
pop
adc
cld
pop
fist
stc
dec
jp
push
mov
inc
push
sub
sub
adc
cwde
repz
mov
pop
push
in
repz
jo
repnz
idiv
dec
shl
(bad)
sbb
dec
or
xchg
mov
xchg
xchg
sub
outs
leave
out
out
test
adc
test
jecxz
xchg
(bad)
(bad)
into
jg
jne
ret
popf
mov
xor
push
xchg
lods
fmul
and
(bad)
movs
push
xchg
and
add
mov
xlat
(bad)
and
or
mov
inc
mov
cdq
movs
call
add
adc
push
fwait
dec
cmps
adc
je
repnz
or
push
lods
add
xchg
pop
mov
adc
imul
into
xchg
mov
cs
and
mov
add
and
push
in
and
es
jmp
or
in
icebp
and
inc
inc
adc
mov
sbb
xchg
inc
clc
lahf
test
lods
push
in
cld
cmc
arpl
push
rcr
mov
cmps
jle
sbb
mov
add
mov
loop
sub
sbb
add
adc
out
aam
xor
shr
gs
shl
inc
and
stc
sbb
dec
je
xor
pop
in
lods
nop
call
xchg
jns
outs
or
std
inc
cwde
and
test
fisttp
and
adc
sub
out
cwde
add
in
repnz
mov
jns
xchg
inc
repnz
int
test
jns
dec
stos
popf
loop
in
sbb
push
sbb
cld
lods
xchg
ja
es
xchg
and
repz
repz
mov
aad
das
xchg
mov
sub
xchg
ins
rcr
aam
in
popa
mov
xor
mov
mov
cmps
(bad)
mov
mov
add
mov
outs
mov
test
mov
inc
dec
jp
jb
in
sbb
pop
aam
jb
shr
pop
mov
push
bound
adc
out
mov
(bad)
(bad)
fadd
sbb
jne
xchg
aas
pop
ja
pop
sub
scas
lds
mov
jb
lock
in
shl
xchg
fdiv
into
mul
out
mov
daa
sbb
jne
lock
jle
xchg
jg
popa
in
or
cs
xor
std
scas
mov
(bad)
ss
pop
mov
sub
jmp
dec
add
sub
pop
enter
mov
retf
lea
ins
test
(bad)
pop
fmul
dec
hlt
xlat
cmp
ret
call
inc
(bad)
cmp
pop
call
pop
(bad)
retf
inc
mov
pmaxub
cmps
inc
mov
mov
cmp
mov
cmc
lea
movs
out
mov
stos
stos
inc
js
inc
adc
jne
mov
inc
(bad)
pop
or
js
cmp
or
fimul
mov
gs
loope
inc
lods
mov
inc
cli
shr
stos
out
shl
jns
mov
(bad)
enter
jnp
jae
or
je
outs
in
bound
mov
lahf
jmp
mov
xor
inc
mov
hlt
dec
jl
in
add
and
lahf
inc
lea
pop
ins
ret
mov
and
jo
push
rol
div
pop
sbb
jecxz
jae
dec
jmp
repnz
aaa
dec
fbld
dec
mov
or
popa
lea
arpl
sub
mov
mov
mov
pusha
jae
or
mov
or
mov
adc
sub
scas
pop
test
pusha
fdivrp
pushf
xchg
mov
and
(bad)
pop
or
mov
push
sbb
gs
test
rcl
sbb
adc
add
retf
jno
ret
mov
mov
inc
out
xchg
add
jo
jb
dec
xchg
inc
das
dec
mov
aaa
inc
xchg
jl
inc
bound
mov
mov
cmc
into
arpl
out
in
aaa
xchg
mov
xor
shr
sbb
loope
mov
sub
jnp
daa
mov
test
fst
(bad)
div
jno
mov
sub
fild
pop
adc
daa
mov
cwde
in
and
int
sub
in
les
test
scas
pop
inc
or
dec
and
dec
mov
(bad)
pop
sahf
inc
and
inc
and
loope
ja
push
jecxz
adc
jp
ds
fistp
test
sub
jge
cmp
push
cmp
mov
xchg
and
pop
lahf
push
cli
imul
cwde
xchg
repz
add
popf
xchg
pop
js
in
(bad)
(bad)
scas
xor
push
push
jne
in
call
sub
enter
outs
loop
mov
idiv
jp
or
(bad)
jmp
add
fsubr
sub
(bad)
imul
mov
add
mov
gs
push
mov
add
leave
or
pusha
push
sbb
scas
popa
xchg
pop
(bad)
xlat
(bad)
mov
adc
ds
jno
sti
sbb
lds
jo
in
jb
sbb
mov
inc
jns
xchg
sbb
push
repnz
sti
mov
mov
jp
sub
in
shl
hlt
test
mov
(bad)
cld
test
arpl
es
not
sub
imul
daa
jmp
mov
test
sub
jo
(bad)
sub
sub
aas
mov
sub
and
aad
cmp
jmp
loop
rcr
not
mov
sbb
pop
mov
mov
jmp
add
seto
dec
cmp
dec
or
add
ja
inc
outs
mov
repnz
add
dec
outs
fwait
add
jp
mov
add
fld
sti
outs
aas
imul
xchg
xchg
or
(bad)
pushf
and
retf
sub
jbe
adc
sahf
adc
cmp
push
jle
pop
(bad)
xchg
int
(bad)
jge
aad
inc
jno
xor
adc
(bad)
repz
inc
lods
dec
fwait
xor
outs
pop
not
hlt
(bad)
fiadd
push
repnz
pushf
faddp
lock
and
(bad)
sbb
jmp
cmp
add
loope
je
jo
mov
stos
rcr
mov
push
push
sbb
out
out
xchg
hlt
xchg
add
xlat
out
lods
(bad)
mov
sbb
add
(bad)
mov
xchg
add
cmp
mov
fdivrp
jle
push
push
pop
jne
jmp
jge
jge
jl
pusha
popa
out
data16
js
jecxz
xlat
xchg
shr
pusha
and
jg
inc
shl
test
cli
fucomip
xchg
mov
(bad)
aad
lods
push
mov
inc
out
loopne
outs
dec
pop
xrelease
inc
xor
sbb
mov
mov
(bad)
jnp
xlat
xchg
arpl
mov
dec
call
in
jne
sbb
dec
pop
(bad)
aad
loop
mov
ret
stos
(bad)
out
push
into
pop
cmp
push
mov
into
jbe
ins
es
adc
or
ja
pop
ja
jns
or
or
xor
and
call
push
and
fisttp
lods
out
cld
hlt
xor
mov
pop
adc
or
data16
ror
sbb
jecxz
outs
jno
mov
daa
out
call
test
shl
push
imul
sub
mov
mov
int
sbb
cli
cmp
repz
int3
sub
dec
and
or
or
cld
jecxz
pop
sub
xor
mov
movs
push
or
push
lock
xchg
test
mov
lods
mov
sbb
outs
imul
out
add
add
sub
push
scas
out
cmps
es
pop
xor
mov
and
jl
xchg
stc
and
pop
push
jbe
mov
mov
out
out
xchg
lds
cmps
es
sub
xchg
cwde
(bad)
cmp
jns
or
cmp
nop
mov
ds
lahf
or
xor
xor
or
mov
xor
or
push
shl
jne
xor
lods
adc
sti
fcmovne
cmps
sub
xchg
test
mov
jbe
daa
xor
inc
xor
es
int
imul
inc
xor
stc
xlat
mov
int
or
loop
xor
outs
rcl
jmp
xor
inc
sbb
movs
cmps
cmp
aas
aas
std
(bad)
mov
xchg
das
add
test
retf
pop
pusha
xchg
sub
ins
sub
cld
mov
fcom
cwde
out
jmp
cmp
push
xor
arpl
int
jne
or
pop
in
in
mov
xchg
or
jb
shl
cmc
ror
cli
daa
scas
sub
sbb
pop
out
sub
imul
stos
ror
inc
pop
pop
dec
jp
xchg
mov
ins
test
in
(bad)
add
add
mov
and
aas
sbb
inc
dec
fcmovb
mov
and
pop
in
mov
mov
or
popf
cmp
push
nop
shl
fwait
add
lods
and
push
mov
call
add
aam
lods
or
test
popf
xor
in
lock
iret
xor
pop
test
mov
scas
mov
mov
push
fnsave
mov
getsec
ja
push
in
clc
mov
cmps
xor
push
lds
sbb
cmc
mov
mov
sub
fst
fisub
sub
push
push
jmp
int3
and
add
outs
mov
cwde
and
div
jns
inc
add
inc
out
and
sahf
pushf
push
pusha
push
push
inc
jl
mov
pusha
cld
in
loop
push
repz
imul
push
jg
inc
dec
clc
dec
jg
xor
mov
add
jg
or
xor
inc
clc
addr16
push
inc
mov
aaa
push
xchg
in
jmp
nop
add
ss
(bad)
push
mov
dec
loop
push
stos
or
pop
xchg
daa
mov
adc
lea
std
jo
and
movs
aad
in
inc
mov
fdivr
clc
xor
lods
call
adc
mov
call
into
mov
and
imul
cdq
xor
pop
fs
pop
cmp
mov
mov
(bad)
test
and
xlat
sar
and
cmc
sub
sub
sti
ins
retf
sub
mov
daa
jl
mov
jns
push
in
mov
fmul
and
pop
mov
or
outs
mov
xchg
cmp
jnp
mov
pop
outs
bound
(bad)
push
mov
add
call
enter
hlt
jb
inc
push
pop
out
in
dec
imul
or
dec
test
push
repnz
hlt
loop
icebp
and
or
cmp
ret
sbb
sub
imul
pop
fld
cmp
pop
pop
cdq
loop
inc
mov
pop
or
sar
jne
jno
pop
call
mov
push
sar
add
stos
test
jecxz
out
gs
add
ja
inc
mov
or
or
inc
inc
sub
xchg
and
xor
mov
call
push
add
dec
jnp
loop
(bad)
data16
ret
sbb
push
xchg
arpl
mov
push
jb
xor
das
push
clc
std
mov
sbb
aam
lods
mov
ret
xchg
pop
test
(bad)
mov
test
cld
jae
add
sahf
sbb
dec
cmps
or
inc
retf
mov
ds
aad
mov
into
(bad)
pop
test
pop
gs
in
adc
in
push
jle
rol
cmc
push
xor
das
sbb
mov
mov
xor
xchg
pop
out
mov
push
pop
mov
jnp
call
sub
lds
(bad)
ret
test
push
xor
adc
dec
add
frstor
push
dec
adc
mov
cmp
cmp
loopne
jp
test
jmp
mov
or
cmp
aas
adc
or
jae
mov
aad
sub
(bad)
js
outs
out
enter
pop
ret
or
icebp
xchg
xor
push
sbb
xchg
fld
mov
outs
imul
dec
scas
sub
popf
popa
pusha
outs
sub
dec
mov
jg
loop
pop
xchg
outs
mov
fdivr
fld
xor
popf
test
(bad)
fwait
pop
lock
test
imul
mov
lods
cmc
fbld
pop
mov
clc
enter
cmp
lahf
xor
outs
or
pop
jl
inc
pop
(bad)
enter
stos
xchg
mov
cmps
sub
into
cdq
bound
mov
mov
jnp
fcmovbe
lods
in
cmc
leave
dec
ret
lea
jnp
mov
and
xor
dec
out
sbb
push
and
cmps
add
xchg
mov
cmp
push
pusha
dec
bound
cli
test
mov
jle
push
out
mov
test
or
xor
stos
out
or
neg
sub
out
push
jecxz
dec
pop
int3
repz
retf
cwde
push
mov
xor
pop
xor
mov
fcmovu
or
xor
jmp
sbb
pop
xchg
bound
stos
cmps
dec
das
jae
pop
push
inc
jbe
mov
mov
jg
(bad)
inc
pushf
outs
jmp
call
lods
add
pop
xor
add
je
ficomp
push
or
push
aad
mov
out
aam
in
mov
repnz
ins
retf
pop
stos
mov
ret
mov
fs
movs
mov
jbe
loope
adc
mov
and
xchg
retf
call
arpl
stc
sub
mov
pop
push
sbb
dec
push
mov
fwait
mov
scas
data16
inc
lds
jns
fidivr
daa
or
ror
in
(bad)
xchg
ret
popa
xor
adc
enter
inc
retf
cmc
push
enter
arpl
inc
enter
int3
sbb
add
add
push
pop
mov
pop
add
jne
push
adc
adc
mov
xchg
shl
enter
push
outs
or
imul
cmp
mov
and
gs
sbb
xchg
test
xor
adc
jae
dec
add
push
std
jno
dec
jge
inc
retf
(bad)
outs
push
leave
xchg
nop
fs
jne
popf
xor
popa
inc
sbb
jo
pusha
mov
pusha
xor
enter
dec
jns
or
dec
inc
(bad)
adc
addr16
enter
iret
adc
jecxz
adc
xchg
and
ins
pop
mov
sbb
test
movs
mov
push
jae
in
mov
std
aam
dec
dec
out
das
loope
stos
cmps
shl
push
lea
cld
ins
add
fcmovne
xchg
push
repz
cmp
scas
stos
test
sub
ja
imul
dec
xlat
dec
and
ret
cwde
loope
fild
adc
(bad)
test
cmps
es
dec
repnz
add
stc
mov
ins
call
add
stos
and
outs
inc
fst
fnstsw
cld
pop
cmp
jge
pop
test
sub
out
daa
hlt
jns
cmp
mov
inc
xchg
jge
xlat
mov
fnstcw
sub
push
mov
jmp
inc
mov
inc
fbstp
jecxz
cmp
xor
retf
cmp
mov
test
ret
pop
inc
aam
(bad)
ret
les
cmps
fs
mov
and
push
sbb
fimul
xlat
inc
lods
in
(bad)
and
jg
out
inc
cmps
jbe
pop
dec
loope
mov
jg
xor
loopne
push
dec
push
(bad)
loopne
lds
add
push
push
adc
mov
dec
and
sbb
dec
gs
in
xchg
pop
xor
sub
dec
enter
add
inc
pop
dec
sub
mov
push
out
movs
sahf
stos
cwde
dec
ss
les
loopne
dec
and
xchg
cmp
push
scas
dec
int
outs
add
cdq
(bad)
fptan
sub
and
fxch
jecxz
mov
(bad)
out
adc
mov
test
cmp
fild
sti
pop
sub
jl
test
imul
jmp
or
adc
sbb
ror
inc
leave
sti
aas
inc
dec
push
sbb
or
les
add
mov
in
ins
inc
sbb
add
dec
lahf
daa
(bad)
daa
jbe
lds
adc
call
pop
in
pop
fidivr
das
mov
and
pop
sahf
lods
cmp
inc
lock
sub
test
lods
mov
sahf
sbb
sbb
pop
pop
ret
jg
push
or
test
push
xor
jecxz
lds
sbb
or
sbb
push
repz
mov
(bad)
sti
dec
mov
cmps
inc
inc
bound
xor
inc
mov
adc
fdivr
mov
adc
and
pop
mov
push
inc
stc
scas
dec
jno
jl
and
adc
inc
sar
mov
(bad)
sar
pop
fnstenv
adc
test
pop
xor
fs
int3
sub
fcmovbe
sub
pop
dec
sbb
add
and
bound
mov
out
or
lock
xor
inc
fsubr
mov
pop
fwait
mov
cmp
mov
cmp
inc
cwde
dec
and
aad
pusha
popa
xlat
scas
fidiv
(bad)
or
es
xchg
inc
jmp
cmp
or
sbb
pop
addr16
push
stos
call
adc
jnp
push
dec
or
(bad)
repnz
fisub
retf
inc
es
repz
mov
and
cmps
loop
pop
push
les
loopne
inc
pop
enter
add
sub
cmp
pop
xor
sub
shl
enter
inc
stc
mov
sbb
in
test
pusha
ds
outs
lods
aad
iret
jno
fimul
lds
mov
ja
clc
enter
icebp
jnp
rcr
cld
pop
stc
adc
push
xor
in
dec
mov
clc
cld
fistp
inc
pop
pop
xchg
add
mov
pushf
jmp
int
jg
adc
or
(bad)
sub
dec
add
ds
jo
movs
repnz
pop
add
inc
dec
jle
xor
adc
lds
mov
adc
(bad)
xchg
ror
lds
sar
push
xor
inc
cmp
jg
in
lods
dec
inc
mov
hlt
push
sub
sub
sub
shr
jle
fldcw
and
xchg
and
sub
(bad)
mov
lahf
cmps
cdq
mov
fadd
jae
jecxz
call
stc
pop
cmp
arpl
movs
push
mov
arpl
xchg
xor
sub
mov
or
arpl
call
push
fdivr
movs
push
aaa
imul
or
dec
je
outs
xchg
inc
sub
(bad)
aas
jl
arpl
or
pop
test
push
xchg
jmp
sbb
push
push
imul
add
inc
pop
outs
mov
jg
out
ror
retf
dec
jp
clc
imul
loop
outs
loop
call
js
dec
cmc
ret
mov
inc
sub
mov
arpl
(bad)
jne
jns
jg
nop
mov
scas
call
outs
adc
stos
call
aam
in
stos
(bad)
(bad)
xchg
adc
pop
movsx
dec
mov
xor
push
je
mov
into
out
sbb
mov
fdiv
inc
call
hlt
jp
jle
mov
loop
jo
std
repnz
gs
mov
daa
mov
and
and
inc
inc
dec
mov
out
fcmovb
leave
test
xor
mov
in
cmp
ja
sub
dec
add
push
enter
dec
push
push
dec
mov
sub
popa
inc
scas
inc
(bad)
out
jae
popf
aad
jl
xchg
int
fwait
and
sbb
int3
inc
adc
leave
(bad)
mov
dec
adc
xchg
arpl
mov
cmc
mov
imul
(bad)
das
test
imul
sar
and
jp
jmp
add
int3
mov
sbb
sub
mov
outs
push
xchg
cmp
psubusw
std
xchg
fwait
mov
push
cmp
mov
jle
fnstsw
jb
cmp
sub
xor
jecxz
push
enter
push
xchg
pop
imul
std
mov
fild
xchg
jecxz
push
movs
mov
test
inc
jmp
xchg
or
ror
into
es
imul
lods
cmp
mov
adc
lods
or
push
mov
mov
mov
pop
wbinvd
sbb
pop
pop
cmp
xor
out
jae
push
popa
iret
cmp
lods
repz
repz
fiadd
in
dec
sbb
(bad)
jae
neg
or
adc
mov
push
sub
icebp
adc
adc
ret
shr
(bad)
(bad)
push
(bad)
pop
(bad)
adc
ins
(bad)
xor
mov
std
pushf
or
jno
sbb
mov
xor
fs
adc
push
xchg
sub
dec
mov
xor
cmp
pop
xchg
mov
cs
loope
xlat
jmp
call
adc
cmp
xchg
xchg
popf
aas
or
jbe
mov
lods
sub
jl
fst
jecxz
outs
sbb
jg
sub
add
xchg
adc
xor
shl
data16
popf
inc
ja
xlat
push
xor
mov
loop
repnz
and
test
loopne
push
jl
adc
data16
push
push
xor
repz
pop
aaa
lds
sbb
push
outs
dec
(bad)
push
out
xchg
jmp
dec
clc
xchg
dec
test
xor
dec
mov
adc
retf
movq
xchg
ret
push
(bad)
arpl
mov
xchg
and
sbb
pop
rol
frstor
test
ja
sub
shl
in
sub
push
retf
ja
or
or
cdq
inc
ficomp
loop
test
xchg
enter
ds
(bad)
loop
into
mov
fistp
icebp
test
push
sub
mov
xlat
ret
mov
pop
hlt
push
call
pop
xchg
inc
mov
shl
xlat
mov
and
iret
sub
outs
les
sub
ret
pop
movs
jge
ret
cmc
arpl
mov
stos
ret
cld
inc
xchg
dec
loop
xchg
shl
adc
sub
shr
out
jmp
cmp
inc
fwait
es
adc
mov
mov
loop
rcr
and
(bad)
push
cmps
hlt
out
dec
aaa
sub
cmp
or
adc
pop
test
push
shl
neg
push
sub
aas
adc
out
sub
mov
je
movs
out
xchg
adc
in
daa
int
push
mov
aad
pop
jmp
lahf
add
inc
loopne
pop
jno
or
jmp
ja
mov
cld
fsubp
cwde
scas
jp
pop
push
cmp
dec
ror
add
add
fwait
cmc
xchg
push
jecxz
mov
cmc
sub
sbb
jmp
mov
dec
ja
out
enter
push
ror
fs
imul
sahf
jle
ficom
imul
(bad)
in
inc
mov
push
aas
fcom
sbb
je
mov
jle
and
frstor
mov
test
shl
sbb
pop
daa
dec
retf
push
sbb
sub
jmp
mov
sar
hlt
or
sbb
int
aad
inc
push
jnp
je
push
fidiv
dec
enter
lds
dec
arpl
test
add
mov
xchg
out
dec
sub
into
sub
xchg
push
xor
cmp
mov
outs
shl
mov
cmc
pop
stos
xchg
mov
push
or
push
icebp
dec
outs
push
push
sub
mov
retf
stc
in
xor
pop
neg
dec
mov
mov
div
cld
inc
mov
mov
sub
cmps
dec
fild
add
shr
or
shr
nop
imul
push
dec
inc
pop
(bad)
out
stc
inc
mov
jnp
in
cmp
jecxz
mov
mov
into
popf
fwait
ja
data16
out
inc
sub
cs
leave
mov
inc
dec
pop
ds
mov
cs
clc
scas
stos
xacquire
xchg
dec
call
mov
pop
in
mov
pop
fdiv
xchg
adc
cld
dec
sbb
cwde
iret
dec
popf
xchg
add
add
imul
lea
pop
fnstsw
push
mov
mov
lods
mov
jecxz
mov
jmp
cmps
adc
mov
je
pop
in
mov
adc
pop
andps
inc
(bad)
out
jg
int3
ja
leave
push
sbb
add
mov
outs
test
jl
les
mov
sbb
sub
mov
cmp
add
stc
rcl
adc
or
push
mov
push
mov
dec
mov
push
push
ficomp
je
out
mov
lock
and
dec
mov
xor
ds
in
add
jns
sti
aas
fcomi
lock
call
cmp
fldenv
loop
sbb
pop
aaa
mov
cmc
jle
xor
adc
fmul
scas
sub
pop
les
loop
jmp
sub
out
xor
das
das
nop
ds
out
push
jmp
clc
fs
cmp
or
pop
ret
adc
cli
dec
rol
push
sbb
jecxz
sub
fucompp
scas
je
add
icebp
(bad)
ins
fcomip
sti
or
mov
iret
aaa
fst
in
xchg
adc
out
pop
movs
mov
je
and
jmp
ret
stos
mov
out
ret
in
sub
call
std
cmp
sub
movs
cmp
sbb
or
adc
push
jp
mov
in
sub
retf
dec
ins
xchg
jae
dec
cmp
arpl
mov
mov
mov
inc
xor
jns
dec
loop
mov
cli
add
lds
push
xchg
add
inc
push
and
sub
jp
in
int3
fwait
pop
scas
cmp
mov
stos
add
popf
xchg
sub
in
lods
loop
dec
fnsave
or
int
lahf
dec
(bad)
fld
sub
fsub
shl
(bad)
gs
in
cmp
mov
xor
gs
dec
or
enter
movzx
adc
sbb
in
daa
out
jbe
sbb
popa
xchg
lods
stos
push
mov
je
cmp
sub
jae
inc
inc
or
mov
mov
mov
(bad)
mov
and
mov
les
lds
inc
jne
add
pop
mov
mov
mov
mov
cwde
add
pop
mul
ret
xor
in
cmps
or
cmp
xchg
neg
jno
inc
leave
in
pop
mov
imul
data16
mov
(bad)
push
push
jmp
jbe
push
cmp
aas
nop
jb
pop
out
dec
cmp
scas
push
bound
jb
into
cmp
and
jns
inc
pushw
mov
cmp
and
scas
and
push
mov
sbb
lahf
pushf
fild
push
sar
aad
and
mov
outs
pusha
sub
mov
fldenv
xchg
mov
cwde
ror
bound
fstp
pop
call
jno
sbb
jbe
les
sbb
inc
mov
xor
or
aam
mov
enter
sbb
ret
repnz
cmp
fdiv
shl
lock
stos
cmp
aas
pop
scas
mov
(bad)
fld
popa
jecxz
jb
inc
or
mov
stos
cmc
push
push
pop
outs
inc
out
dec
fisubr
xor
fwait
imul
nop
es
lods
pop
mov
xor
in
int3
scas
inc
xor
nop
shr
outs
jg
push
cli
adc
mov
mov
or
sub
imul
cmp
push
ret
sar
(bad)
int
sbb
sbb
mov
mov
dec
mov
lods
cmps
jno
mov
cwde
pop
pop
cli
scas
jbe
rol
cwde
cmp
pop
std
push
jae
pop
fs
push
or
add
mov
rcl
cli
mov
xchg
dec
das
retf
add
pop
add
dec
mov
shl
out
inc
loopne
adc
je
scas
(bad)
xchg
adc
sub
or
jg
test
mov
retf
imul
test
push
retf
shl
and
mov
cmp
icebp
lahf
jle
jb
cmp
daa
aam
das
aaa
mov
xchg
mov
xor
or
popf
fisub
pop
es
sub
ret
or
setnp
or
pop
dec
clc
inc
sub
loopne
cmp
xor
and
stos
jnp
call
jmp
pop
jae
pop
sbb
jecxz
enter
pop
sbb
or
(bad)
(bad)
sbb
imul
jge
adc
add
call
xor
sub
sahf
xchg
mov
dec
scas
push
ret
xchg
adc
pop
jbe
or
push
xchg
xchg
pusha
cmp
call
lds
inc
mov
adc
pop
out
ja
cli
jmp
add
pusha
cdq
ret
cmps
ret
cmp
mov
push
pop
adc
enter
xchg
push
js
popa
aas
popf
ror
neg
in
stc
mov
push
xchg
mov
into
(bad)
aad
stc
adc
clc
push
test
jle
add
pop
xchg
jmp
mov
inc
sbb
mov
push
shl
mov
and
jmp
shl
inc
mov
sbb
call
cld
rol
cmp
and
push
fsub
loope
sbb
adc
icebp
rol
(bad)
jmp
or
out
mov
pop
addr16
cmp
dec
push
cli
xor
ins
dec
ret
adc
inc
cmp
iret
mov
ds
lea
fisubr
xchg
add
lea
inc
push
inc
jnp
and
pop
lds
cmp
cmp
or
nop
adc
and
or
outs
jae
jmp
mov
pop
fistp
movs
ret
ds
jno
xor
or
dec
cs
rcr
sbb
pop
popf
add
jecxz
loope
ss
xor
addr16
scas
sub
jge
jecxz
xchg
xor
mov
fsub
push
mov
jne
cmp
adc
mov
jns
mov
fisub
pop
inc
je
(bad)
push
or
add
push
dec
pop
aam
retf
imul
aam
jge
loopne
xchg
xor
inc
je
xchg
(bad)
pop
cmp
jmp
out
daa
mov
push
sbb
mov
imul
aad
jmp
push
popf
sub
jmp
stos
mov
dec
sbb
fsub
jne
jecxz
lds
sti
loope
aaa
xchg
adc
jne
test
sti
out
adc
sti
mov
mov
adc
push
sbb
mov
arpl
cmp
xchg
sub
sub
ss
and
test
xchg
(bad)
dec
inc
jecxz
les
gs
fidivr
ret
int
cmp
xor
mov
mov
icebp
dec
fild
inc
lods
xchg
mov
mov
mov
cwde
adc
sub
push
out
fs
shl
dec
aad
repnz
cdq
mov
retf
int
popf
and
sbb
stc
sbb
adc
(bad)
sbb
test
fstp
call
ds
mov
jp
fist
jnp
scas
mov
and
push
adc
push
push
inc
inc
push
in
ror
shl
cmp
test
neg
repz
mov
aaa
mov
or
repz
cld
dec
fadd
push
pop
repnz
lods
arpl
stos
sub
and
ud0
pop
inc
mov
js
jp
cmp
or
js
fsubr
mov
scas
outs
mov
sub
cld
sub
push
call
scas
scas
popf
xlat
fwait
mov
inc
cmp
jle
ss
je
adc
in
dec
sub
popf
sub
fcom
and
icebp
cwde
add
jecxz
ins
mov
or
sub
fadd
test
jbe
adc
push
popa
cmc
add
mov
ret
shl
ins
xchg
imul
pushf
mov
jle
popa
test
mov
sub
fidiv
out
cli
xor
inc
pop
or
inc
imul
jle
push
pop
out
cld
arpl
dec
popf
(bad)
jg
stc
adc
inc
xor
mov
mov
je
mov
mov
pushf
hlt
jle
out
loope
out
mov
jmp
fidiv
add
pushf
mov
jge
adc
cld
jle
push
jnp
out
or
aaa
adc
fnstenv
icebp
cmc
add
lods
xchg
jns
jmp
inc
or
xor
jo
xor
xchg
push
xor
retf
dec
enter
out
aaa
add
into
addr16
mov
repz
arpl
pop
mov
lds
or
or
cmc
outs
nop
inc
cmps
mov
cdq
push
cmp
ret
sar
xchg
sub
jnp
sub
sbb
sub
mov
push
jl
pop
shl
std
movs
jmp
lods
out
xchg
movs
cmp
pop
hlt
and
push
xlat
adc
lock
nop
out
daa
call
ffree
mov
out
enter
pop
push
(bad)
dec
and
je
test
push
lea
icebp
xchg
icebp
mov
or
mov
cmp
pop
movs
addr16
xchg
sub
gs
in
adc
dec
adc
and
cdq
bound
push
xchg
sub
sub
popa
mov
adc
addr16
dec
sbb
xor
sar
jnp
out
int
push
hlt
or
les
or
cmp
pusha
aaa
pop
xlat
ret
popf
inc
and
mov
xchg
iret
or
pop
scas
fs
mov
inc
cmps
mov
test
jns
pop
lods
xlat
out
out
repnz
lds
add
cmp
call
retf
std
mov
pushf
push
push
or
mov
retf
mov
imul
push
aaa
inc
dec
adc
(bad)
stc
lea
mov
adc
icebp
fbstp
mov
pop
pop
inc
xchg
les
sbb
cwde
cmp
dec
stos
test
dec
pusha
ins
jle
sbb
lahf
mov
and
cmp
add
icebp
pushf
sahf
stos
outs
mov
adc
push
jg
ret
call
fdivr
jns
je
in
and
nop
pushf
movups
sub
mov
jae
pop
enter
cwde
retf
sbb
xor
and
push
adc
cmc
retf
das
into
xchg
ds
pop
jmp
test
loop
sbb
pop
int3
sbb
div
jb
jae
cdq
(bad)
xor
in
int
adc
(bad)
mov
out
add
enter
mov
jmp
mov
adc
ja
(bad)
ins
jno
push
mov
pop
xor
cdq
push
outs
push
pop
test
jne
or
sub
push
sbb
outs
leave
pop
ret
add
push
or
dec
xlat
fsub
fadd
fcomp
ja
and
or
mov
les
xor
loopne
int
xchg
movs
cmp
shl
retf
mov
add
add
stos
movs
call
inc
xor
xor
ret
dec
inc
cmp
(bad)
shl
mov
fcmovnu
dec
cs
rep
adc
pop
pop
jo
add
repnz
mov
mov
xlat
adc
aad
xchg
pop
and
pop
mov
mov
sub
mov
int3
mov
retf
addr16
mov
addr16
push
(bad)
mov
arpl
jl
fnsave
add
fucom
je
jle
(bad)
jmp
into
and
retf
pushf
loope
adc
add
js
mov
xor
mov
ret
imul
int3
jmp
pusha
inc
and
cmp
mov
sti
ins
std
fwait
push
push
enter
inc
push
pushf
pop
or
nop
jmp
fcom
jno
mov
inc
xor
out
retf
es
test
xchg
mov
add
iret
cmp
push
adc
push
aam
inc
dec
mov
int
and
inc
xor
xchg
std
test
ja
loopne
sub
mov
xor
or
icebp
je
ret
hlt
pop
cmps
retf
popf
fimul
jb
sub
cld
push
and
ficom
add
daa
call
nop
std
test
sti
inc
adc
outs
iret
xchg
dec
xchg
icebp
int
xor
mov
adc
or
call
pusha
call
movs
into
jl
cmps
mov
adc
sahf
xchg
xchg
rcr
mov
pop
xchg
push
into
push
push
inc
(bad)
std
and
xor
push
mov
inc
jge
scas
fcmovbe
mov
add
push
sbb
sbb
xor
sti
xor
popf
push
push
sub
neg
mov
adc
sub
add
test
jo
jg
lods
loope
dec
xor
adc
add
xor
mov
mov
push
mov
ret
ret
add
sti
push
in
aaa
sub
cld
ror
inc
xor
int3
cmp
clc
es
xor
imul
retf
outs
dec
sbb
inc
mov
push
adc
loopne
(bad)
and
test
mov
(bad)
jmp
xor
arpl
vpshufd
xor
nop
lahf
mov
dec
call
cli
mov
xchg
push
inc
cwde
outs
push
imul
mov
in
push
retf
scas
xchg
lods
movs
cmp
scas
jmp
or
xor
stc
fnstsw
xchg
jo
js
inc
push
out
xor
sub
jmp
cmps
adc
in
cdq
ret
cmp
and
inc
inc
fs
scas
in
mov
pop
or
sar
js
lds
cmp
cld
push
fdivr
jno
pop
cmc
setae
mov
(bad)
ins
pop
inc
jmp
test
call
ins
outs
aam
lds
dec
test
div
mov
cmps
ins
aam
arpl
shr
and
dec
cmp
mov
rol
lahf
sbb
dec
repz
ret
shr
dec
mov
(bad)
jge
aas
ficom
fidivr
sar
sbb
hlt
inc
popf
out
mov
push
iret
fwait
cmps
outs
es
jmp
aas
fnsave
arpl
jbe
mov
aad
cld
call
aad
aad
mov
fstp
xor
dec
call
push
cli
inc
sbb
mov
mov
out
mul
ror
pushf
lock
jbe
push
jp
aas
sub
mov
pop
lods
dec
adc
xor
mov
adc
mov
jmp
scas
ret
sub
xlat
xchg
push
mov
add
scas
shl
xchg
loop
movs
dec
hlt
push
rol
data16
mov
mov
xlat
or
jno
lods
int3
mov
sub
test
push
data16
mov
clc
imul
shr
xchg
cwde
xor
xchg
xchg
in
call
fs
out
cmp
loopne
jecxz
and
xchg
sub
cmp
mul
stos
inc
mov
das
cmp
sub
adc
cmp
(bad)
dec
add
lods
mov
pop
in
iret
pusha
call
(bad)
fdiv
shl
mov
jno
and
adc
fs
es
stos
xlat
rcr
xchg
cmp
popa
cmp
add
inc
jo
xlat
cmp
out
gs
iret
mov
xchg
inc
fs
add
clc
cs
pop
inc
leave
ins
stc
aaa
xchg
jns
cs
js
mov
xchg
cmp
into
fld
fst
ds
or
xor
dec
mov
dec
xchg
xchg
pop
aas
clc
fnstsw
rcr
jb
inc
daa
jmp
out
mov
jle
mov
leave
das
loope
stos
sar
mov
dec
enter
lea
in
icebp
stos
mov
adc
xor
cmp
pop
ret
adc
dec
mov
test
pop
inc
(bad)
xor
pusha
dec
sar
inc
pop
cmp
jg
arpl
xchg
cwde
in
inc
not
adc
pop
jno
sub
mov
inc
xor
rcr
in
out
adc
imul
stos
mov
out
cmp
fnstenv
dec
sub
test
mov
nop
inc
shr
outs
push
mov
les
sbb
mov
cmp
cs
cmp
jecxz
outs
pushf
jge
retf
push
bnd
pop
pushf
pop
in
repnz
icebp
cmc
loop
ret
pusha
and
fild
dec
jnp
mov
movs
aad
sub
(bad)
aas
gs
fisttp
outs
fsub
ds
cmp
mov
rcl
call
das
jo
pop
fs
dec
jmp
into
les
jmp
inc
les
les
or
or
xor
or
icebp
cmps
jp
pop
mov
stos
jb
mul
dec
cmp
popa
cmp
jb
ret
dec
xor
inc
mov
fdivr
lods
mov
jmp
movs
mov
jb
xlat
outs
adc
sbb
jle
jg
mov
mov
fs
fxch
repnz
call
sub
mov
mov
push
xor
push
cwde
pop
add
xchg
add
mov
mov
or
cwde
adc
mov
push
(bad)
in
or
imul
retf
adc
iret
fwait
or
and
fucomi
xor
out
js
inc
stos
in
mov
cmps
in
jge
and
xchg
dec
xchg
sub
sub
or
ret
nop
fs
or
enter
outs
fs
pop
mov
and
mov
nop
ret
pop
outs
adc
dec
jg
mov
jnp
mov
sar
leave
cmps
mov
mov
outs
lock
(bad)
jl
jle
or
sahf
push
cmp
icebp
dec
xor
loopne
cmp
loopne
jge
mov
or
inc
inc
push
add
pop
mov
dec
scas
mov
xchg
fcomp
ja
ss
mov
je
daa
or
and
cmps
aaa
bndldx
in
cmp
imul
data16
in
les
xor
jo
je
out
aas
inc
mov
dec
mov
xchg
(bad)
xlat
pop
fbld
rcr
cmps
retf
rcl
mov
xchg
out
mov
(bad)
call
(bad)
push
adc
fmul
stc
jae
push
ja
mov
push
xchg
pop
(bad)
mov
loopne
mov
jge
xchg
int3
xchg
stos
sbb
lods
add
dec
dec
loope
dec
dec
add
cmp
and
icebp
push
dec
xor
add
mov
aas
out
mov
fbstp
repnz
stc
ds
mov
enter
call
scas
push
mov
imul
mov
xlat
pop
ins
or
pop
dec
xlat
sti
sub
out
shr
icebp
in
sbb
lock
ss
adc
cs
fs
jp
and
les
and
mov
(bad)
push
sbb
mov
pop
or
mov
mov
rcl
cmp
fld
add
fisub
(bad)
or
dec
sbb
ins
adc
inc
xor
cmp
sbb
imul
cwde
mov
inc
sti
ss
neg
push
nop
and
and
sbb
adc
jmp
adc
push
cmp
call
(bad)
xchg
stos
mov
mov
test
aaa
xor
sbb
mov
pop
ss
pop
shl
fstp
cmp
cwde
xchg
scas
imul
jnp
daa
pop
inc
cld
cmc
sbb
fiadd
fsubr
inc
push
jns
mov
in
inc
call
mov
mov
hlt
xchg
sbb
adc
in
adc
lea
imul
call
adc
push
lods
das
imul
in
scas
or
outs
imul
mov
xchg
mov
mov
sub
addr16
pop
aam
jbe
shl
pop
stos
lds
adc
rcr
cmp
out
sub
stc
xchg
(bad)
test
outs
mov
cmp
push
lds
cmc
(bad)
push
ret
inc
imul
mov
fst
ds
pop
(bad)
cld
jp
scas
jp
(bad)
in
dec
stc
stc
out
add
sub
shr
es
xchg
out
mov
jnp
inc
aad
and
mov
fwait
test
jmp
fldenv
mov
adc
xor
jb
out
or
pushf
fldenv
outs
sub
jg
outs
popa
rcl
stos
mov
add
arpl
and
xor
mov
push
scas
or
loop
ror
hlt
mov
fdivr
in
jp
lock
sub
push
jmp
pop
sbb
cld
xchg
fdiv
jg
sub
or
or
sub
clc
inc
adc
es
lock
in
(bad)
lock
ret
stc
jns
retf
mov
mov
dec
inc
loopne
int
sbb
ss
pop
cmp
sbb
inc
xor
(bad)
aam
cmps
retf
push
cmp
jge
dec
out
mov
push
cmps
mov
pop
sbb
imul
aas
jae
push
es
gs
scas
fsub
jne
mov
sub
in
(bad)
sar
or
mov
leave
jp
lods
xor
pop
xor
xchg
mov
mov
mov
clc
jge
lods
pop
jge
mov
adc
sub
add
mul
mov
cmps
out
add
sahf
jne
mov
ficomp
jecxz
and
lods
push
xor
call
dec
repnz
sbb
mov
xchg
pop
jno
and
sub
dec
paddsb
out
or
sub
pop
jecxz
xchg
xor
aad
cmps
cwde
mov
pop
sub
retf
cdq
in
sub
add
push
loop
cmp
shl
xor
aad
fcmovnbe
into
pop
lahf
push
popa
outs
pop
jle
cmp
test
pushf
ficomp
dec
test
xor
lock
mov
pusha
(bad)
leave
xchg
fs
adc
enter
int
mov
aam
fdiv
pop
pusha
or
std
or
add
pusha
push
push
dec
lea
mov
jge
pop
jns
and
cmp
sbb
(bad)
sbb
jg
mov
sbb
inc
mov
js
in
scas
mov
div
push
cmp
lock
mov
jmp
adc
dec
push
mov
and
push
jnp
xor
xchg
lods
push
push
ja
push
movs
mov
cmp
pop
add
mov
sbb
in
out
(bad)
into
call
(bad)
popf
lea
or
mov
sub
cmp
add
and
out
nop
cmc
mov
lds
clc
(bad)
mov
mov
mov
or
icebp
jecxz
xor
mov
push
xchg
mov
(bad)
sub
in
mov
nop
call
mov
repnz
int3
fdiv
add
cmp
(bad)
push
jb
push
jmp
mov
hlt
data16
xor
mov
out
xor
test
retf
mov
or
and
jl
push
imul
retf
and
mov
mov
cmps
sub
retf
int3
or
add
xor
les
in
ror
out
fmul
cmc
or
push
(bad)
pusha
int
ror
add
push
cmps
pop
push
sub
pop
fiadd
add
xor
popa
fsub
daa
fmul
adc
dec
dec
mov
jle
pop
into
nop
bound
jae
call
pop
ss
in
arpl
outs
punpcklbw
sub
ficomp
ret
retf
fcomi
(bad)
test
test
push
fild
mov
xchg
cmp
inc
adc
ins
mov
lods
sub
sub
push
enter
cli
dec
inc
stc
cmp
(bad)
cmc
test
mov
pop
mov
test
in
popa
or
sar
and
sbb
inc
mov
imul
mov
add
and
push
push
pushf
sbb
add
sbb
daa
cmp
mov
and
mov
lahf
stc
push
retf
out
or
xor
or
mov
inc
ss
xchg
dec
sub
cmp
clc
mov
add
gs
test
pop
jecxz
popf
pop
jp
outs
sub
or
dec
cli
push
aam
xor
js
xchg
inc
hlt
in
popa
xchg
mov
jne
mov
and
std
mov
jp
inc
pusha
mov
push
std
in
jb
mov
pop
fcom
add
sbb
sub
inc
pop
jg
push
daa
out
dec
(bad)
inc
sbb
popa
sub
sub
aaa
cmps
pop
call
mov
les
cmp
movs
mov
mov
sbb
mov
aaa
jno
mov
hlt
adc
jmp
daa
aam
jns
mov
outs
sahf
iret
imul
into
dec
mov
mov
cld
inc
xchg
js
xchg
cmp
sbb
jo
arpl
pop
inc
xor
push
pusha
pop
jp
nop
mov
mov
jg
stos
mov
pop
cmc
xlat
xor
mov
call
pop
rol
repnz
dec
popa
js
les
cs
repnz
jb
sub
mov
jl
fmul
mov
pop
mov
fld
jo
cs
je
jns
jl
mov
jp
movs
sub
adc
adc
push
and
lea
inc
mul
sub
jl
cmps
aas
mov
xor
xlat
pop
js
cmp
test
js
pop
retf
mov
mov
(bad)
mov
inc
aad
xor
jmp
cld
out
nop
dec
mov
shr
ficomp
push
repnz
aaa
xor
mov
push
test
cmp
dec
ret
mov
ins
jns
stc
sub
fwait
mov
xchg
ret
adc
adc
gs
mov
test
inc
and
jle
mov
xchg
inc
jecxz
(bad)
or
push
clc
push
inc
and
ins
push
cld
ins
iret
pop
cdq
sbb
dec
pop
dec
arpl
or
popa
xlat
xchg
mov
pusha
xlat
popa
mov
jb
call
mov
jmp
ds
xor
in
and
mov
push
inc
push
xor
inc
xchg
out
add
dec
cmp
enter
(bad)
mov
jmp
mov
push
fimul
or
cmp
repnz
push
repnz
pusha
inc
inc
std
out
jns
movs
xchg
pop
mov
mov
push
pop
adc
xchg
cli
xchg
rcl
repz
mov
push
adc
ins
sub
loop
mov
loope
sub
mov
sbb
outs
js
dec
mov
mov
stos
fwait
dec
mul
add
mov
mov
lods
leave
pop
stos
movs
imul
pop
mov
sbb
(bad)
pop
iret
shr
mov
cmp
repz
push
retf
lods
pop
pop
mov
mov
or
mov
(bad)
mov
ror
test
jnp
cmps
inc
and
pop
jbe
(bad)
push
mov
in
jne
mov
test
inc
mov
ficom
outs
push
mov
and
jns
outs
nop
call
xchg
sub
idiv
popf
xchg
pop
jecxz
xor
mov
imul
out
jecxz
std
mov
sti
push
and
lods
or
dec
clc
add
shr
fs
dec
mov
or
inc
popf
inc
cmc
pusha
jmp
xchg
cmpxchg
das
out
xor
push
pop
je
xchg
push
hlt
idiv
inc
(bad)
fucomp
call
cli
dec
scas
inc
fdivr
aaa
ss
lods
bound
and
mov
sti
int3
(bad)
mov
pop
les
adc
(bad)
dec
shl
out
mov
retf
push
int
sub
jecxz
movs
inc
popa
mov
imul
rol
icebp
in
mov
inc
dec
cmc
cdq
test
aam
or
in
arpl
xor
pop
mul
push
inc
xor
push
sbb
movs
scas
out
xchg
data16
jae
je
jb
(bad)
cmc
(bad)
push
aam
mov
pop
aam
out
adc
cs
xchg
dec
pushf
inc
scas
mov
not
sbb
adc
imul
sbb
sar
and
das
jbe
test
lahf
outs
or
into
retf
gs
mov
pop
sbb
add
rol
mov
jne
adc
fwait
pushw
pop
out
push
adc
not
push
rcl
data16
popa
idiv
xchg
push
jmp
clc
mov
das
or
and
jnp
(bad)
int3
retf
ret
aas
imul
push
mov
cmps
sub
fild
cmc
mov
hlt
jp
inc
movs
cdq
movs
sub
stos
mov
xchg
xchg
out
setbe
mov
call
and
sub
cli
popa
xchg
mov
push
(bad)
loop
jmp
adc
sbb
mov
push
adc
fsub
aas
mov
mov
(bad)
in
pop
leave
sub
int3
(bad)
dec
imul
pop
(bad)
fistp
cmps
ja
js
ds
jb
std
mov
add
aam
cdq
mov
ds
lock
add
in
or
stos
in
inc
popa
xchg
ins
movs
sub
test
push
xor
adc
push
leave
pop
cmps
jno
enter
sbb
popa
test
jge
mov
add
fldenv
clc
mov
icebp
jnp
adc
or
(bad)
jle
jecxz
push
pop
mov
popf
xchg
xor
mov
mov
fimul
push
lds
stos
retf
les
and
dec
and
push
mov
mov
xlat
cmp
lock
in
add
push
or
dec
mov
cmp
mov
(bad)
jle
test
cdq
call
aaa
jge
xlat
shr
inc
cmp
clc
(bad)
mov
fwait
outs
(bad)
scas
inc
add
push
sbb
cwde
(bad)
mov
retf
pop
jp
dec
(bad)
adc
ds
(bad)
test
mov
adc
push
dec
retf
(bad)
fst
mov
adc
mov
xlat
sub
xchg
je
push
or
xlat
sahf
loopne
push
test
ins
aas
or
push
scas
fwait
shl
mov
lods
push
(bad)
lods
inc
shr
(bad)
ror
pop
inc
mov
push
mov
sbb
sar
call
cs
or
ds
mov
(bad)
jp
mov
inc
dec
cmp
stos
push
push
mov
ja
sti
mov
fidiv
xor
test
dec
rol
stos
inc
cmp
scas
loop
push
sti
jg
rcr
pop
pop
(bad)
leave
and
pop
dec
pushf
test
push
add
ds
pop
scas
add
shr
mov
cwde
mov
push
jns
and
and
xchg
inc
rol
scas
cmp
arpl
pushw
xor
inc
mov
sbb
fld
cmp
adc
xchg
mov
out
jmp
and
nop
(bad)
adc
daa
adc
ret
sahf
jb
jno
jp
mov
ret
dec
jge
es
and
dec
inc
and
movs
repz
pop
mov
les
shl
sbb
call
dec
(bad)
fist
in
xchg
jmp
jns
ret
add
add
inc
in
sub
ins
js
cmp
into
and
push
push
out
jo
jo
std
or
ret
jg
div
lds
push
mov
sbb
jne
call
pop
jb
sar
push
cwde
imul
xchg
int3
fsub
pop
leave
cdq
push
mov
jmp
pop
cmp
scas
jnp
adc
xor
dec
mov
xor
mov
xchg
sbb
out
add
pusha
add
daa
dec
adc
ret
jnp
pop
mov
mov
in
xor
pop
push
or
xlat
leave
int3
call
loop
sahf
movs
js
push
into
mov
pop
dec
cs
dec
scas
push
sub
mov
aaa
mul
mov
retf
ins
add
in
cmp
xlat
leave
inc
std
adc
cmp
pusha
cmp
mov
(bad)
pusha
mov
lea
pop
sub
imul
or
xchg
push
int
dec
jns
push
xor
mov
js
scas
jo
sub
jno
(bad)
sbb
jmp
sub
push
inc
add
cmp
leave
sub
fs
push
in
lea
aad
cld
retf
cmp
adc
and
and
dec
cld
ror
imul
push
push
loope
ja
repnz
jns
mov
mov
inc
lahf
in
jns
mov
out
add
jno
das
out
push
mov
sub
aad
psubsb
xchg
cmp
icebp
inc
icebp
add
iret
jle
out
retf
and
in
xchg
xor
xchg
pop
outs
div
fmul
inc
add
or
sbb
cmp
sar
cmp
dec
add
push
loop
dec
mov
jmp
sub
xor
pop
cwde
mov
dec
mov
bndmov
(bad)
and
jo
push
inc
inc
mov
mov
sbb
mov
mov
js
in
cmps
and
in
mov
inc
nop
pop
stos
inc
mov
inc
sbb
fwait
out
outs
mov
into
push
lea
jo
in
pop
add
fdiv
icebp
movs
jecxz
movs
jne
(bad)
inc
call
lods
mov
les
mov
pop
fmul
les
lahf
jb
dec
cmc
loopne
inc
(bad)
mov
jmp
out
call
movs
cmps
and
dec
cli
pop
outs
lods
scas
xchg
shl
pop
xor
mov
stos
mov
addr16
inc
repz
sub
and
cmp
xor
rcl
jmp
ret
inc
stc
js
sub
fs
(bad)
jge
push
mov
mov
and
adc
inc
xchg
jbe
aad
push
pop
and
xlat
les
std
mov
retf
fs
in
mov
sub
sbb
pop
push
sbb
xor
mov
xchg
je
xor
mov
aam
mov
lds
mov
pop
out
ins
fsub
inc
ror
mov
imul
add
jl
aas
jo
ja
ret
push
add
inc
js
pushf
bound
retf
jmp
cmp
mov
inc
ret
out
mov
movs
clc
and
adc
pop
xchg
test
push
(bad)
inc
sbb
mov
inc
daa
pop
je
fsubr
(bad)
push
adc
add
pop
add
pusha
sub
jle
sbb
cmp
sub
adc
imul
xchg
(bad)
sub
or
loop
icebp
mov
rcr
or
not
ds
push
mov
call
rcr
shl
aas
iret
adc
ja
or
adc
add
addr16
pop
mov
out
jnp
pushf
loope
aam
mov
movs
aad
test
in
sar
mov
xor
dec
cmp
ins
xchg
imul
inc
arpl
fisttp
and
(bad)
xor
mov
pop
cmp
pop
sub
add
xlat
pop
test
mov
pop
mov
(bad)
test
retf
xchg
std
push
int
push
mov
stos
jbe
add
adc
inc
or
scas
mov
sbb
dec
(bad)
sub
loope
jne
cld
out
lods
xchg
data16
cmp
cmp
pop
dec
std
push
sbb
shr
push
cmps
movs
sar
add
pop
sub
jl
xchg
shr
mov
enter
into
push
pop
push
repz
pop
and
(bad)
out
in
mov
xor
fnstenv
and
idiv
test
out
inc
dec
stc
add
lahf
(bad)
lock
ret
retf
aad
scas
test
adc
adc
xor
in
aas
mov
mov
fcomi
mov
add
push
push
sbb
jbe
in
lds
pop
in
fadd
xor
adc
mov
fld
ja
sbb
repnz
inc
xchg
xor
in
jno
xchg
(bad)
retf
cs
mov
jl
(bad)
lds
xor
aas
xchg
mov
retf
cmp
sbb
loop
je
jmp
inc
loopne
jle
repz
adc
wrmsr
cmp
lods
in
mov
jbe
je
or
mov
loopne
(bad)
mov
mov
retf
ss
xor
into
gs
mov
out
jmp
leave
sub
inc
push
js
iret
inc
pop
dec
push
std
or
sbb
sar
inc
leave
mov
test
dec
xchg
jg
iret
aam
enter
push
fisub
jo
mov
sub
adc
cmp
sbb
mov
sub
pop
lods
mov
mov
jo
inc
cmps
pop
jo
jnp
loopne
xchg
(bad)
out
lea
test
hlt
arpl
xchg
(bad)
cmp
clc
dec
jb
xchg
jnp
aad
outs
inc
jns
cmp
xor
adc
and
pop
mov
dec
mov
aaa
dec
xchg
imul
int
adc
mov
or
imul
nop
repnz
fcmovne
mov
inc
dec
sar
out
iret
shr
adc
dec
cmp
cmc
imul
nop
test
inc
xor
stos
test
mov
xchg
and
fscale
pop
xor
scas
mov
bound
cwde
and
repnz
(bad)
popa
jp
dec
ficom
xor
jle
ret
icebp
fsubr
mov
lods
rol
jnp
(bad)
jp
dec
mov
dec
in
sbb
jmp
mov
xor
and
in
in
push
leave
sub
sub
icebp
test
add
inc
bound
sbb
out
aad
cmps
ds
and
and
sub
fcomp
outs
xchg
xchg
mov
or
rcl
pusha
int3
mov
xchg
in
pop
addr16
push
ret
xor
jge
(bad)
mov
and
push
mov
enter
shl
xor
mov
js
bound
test
xchg
shl
lods
jno
xor
xor
imul
fisubr
and
loopne
pop
adc
mov
mov
cmps
sub
inc
xchg
mov
xor
cli
inc
pop
rcl
mov
add
and
xchg
and
rol
mov
loop
mov
mov
sti
(bad)
fiadd
fidiv
ror
push
cmp
pop
int3
sahf
mul
mov
and
xchg
add
(bad)
mov
jne
mov
cmp
fld
lahf
jnp
add
inc
or
rol
add
or
fnstenv
in
movs
xchg
int
jg
stc
mov
shl
imul
pop
mov
aas
cwde
int3
inc
fs
jg
jle
sbb
les
jae
shr
movs
jecxz
mov
cmp
sbb
cmps
xchg
pop
adc
inc
fsub
mov
jns
imul
dec
lahf
nop/reserved
jo
clc
and
jnp
pusha
or
scas
das
mov
call
popa
scas
(bad)
out
add
adc
stos
mov
(bad)
push
sbb
in
pop
inc
mov
dec
xchg
gs
push
dec
add
xchg
call
jo
xlat
seto
fisub
or
and
dec
pop
mov
and
sub
hlt
jmp
mov
je
daa
add
inc
test
sar
xchg
popf
pop
imul
js
push
inc
lahf
add
mov
inc
lea
cmp
xchg
bound
gs
stos
or
(bad)
outs
and
in
rcl
das
mov
pop
in
call
xchg
push
ins
stos
adc
retf
cmp
pop
pop
inc
hlt
mov
xchg
xlat
fcmovnb
jmp
int3
shl
or
fcom
bound
aaa
xor
sub
(bad)
mov
scas
test
cwde
adc
adc
sub
stos
imul
add
popa
pop
xor
cmp
imul
xchg
ficomp
jno
push
cmp
call
shl
jg
inc
ins
pop
cli
enter
push
hlt
mov
adc
arpl
xchg
addr16
test
push
movs
jns
repnz
xor
push
ins
je
mov
out
sub
push
add
lds
inc
dec
imul
aam
or
push
clc
xchg
lock
fnstsw
cmp
call
inc
mov
movs
mov
mov
cmp
into
das
xor
mov
imul
jle
or
pop
push
jmp
fimul
mov
dec
test
test
add
jecxz
jmp
inc
fsub
xchg
push
fs
scas
out
not
ja
or
and
(bad)
mov
mov
movs
push
aad
mov
xchg
lock
mov
mov
add
in
mov
dec
mov
inc
loop
sar
in
dec
mov
inc
sahf
call
mov
shl
or
(bad)
mov
dec
jg
mov
add
cmp
shl
stos
push
scas
cmp
mov
sahf
(bad)
jmp
call
pop
dec
clc
xchg
pop
ja
dec
movs
jne
xchg
dec
mov
jns
pop
(bad)
cmp
mov
mov
adc
sub
retf
or
das
adc
mov
pop
das
push
adc
inc
data16
(bad)
es
fnstenv
ins
mov
ins
inc
fwait
iret
add
ja
and
cmc
sub
les
in
fcom
ret
in
mov
and
ins
aam
cld
cwde
not
mov
sbb
push
lods
inc
sub
outs
in
push
inc
or
push
dec
jbe
dec
pop
dec
sub
jmp
in
outs
outs
mov
mov
push
mov
popa
mov
or
inc
add
hlt
and
inc
dec
cmps
pop
add
sar
push
mov
dec
and
jmp
loop
pop
lahf
push
mov
call
xchg
ins
test
cmp
adc
adc
jge
pop
sub
push
xchg
movs
ins
fxch
mov
jbe
neg
das
setno
mov
mov
push
xor
ja
inc
cdq
out
test
popf
(bad)
mov
call
lods
push
cmp
(bad)
in
cmp
mov
xor
in
mov
aaa
sbb
out
pop
or
fldcw
cmp
xchg
aas
and
sub
inc
xchg
test
xchg
fidivr
mov
imul
inc
ss
mov
mov
push
pop
xor
or
fldenv
mov
into
push
rol
mov
leave
push
lods
mov
mov
inc
test
or
shl
mov
mov
or
sub
ror
out
into
retf
xchg
dec
imul
test
cdq
sbb
adc
ins
mov
mov
test
push
repz
push
fsubr
push
jno
rcl
push
imul
or
xchg
mov
sub
push
repz
lods
int
xor
lea
cli
and
jge
and
scas
xor
sub
ret
push
xor
retf
ror
sub
or
data16
mul
outs
push
fidivr
push
aaa
leave
(bad)
shr
jno
das
sar
test
hlt
push
jmp
in
xor
fstp
xor
shr
pop
fild
or
ins
jmp
mov
lods
retf
mov
scas
xor
add
sbb
pop
cmp
jmp
(bad)
mov
xor
lds
stc
jg
inc
aam
cli
ret
mov
adc
enter
mov
adc
out
sbb
inc
xor
push
mov
js
or
fidiv
xchg
dec
xchg
xor
xor
push
out
pop
adc
and
imul
jb
pop
test
cmc
jle
and
dec
sti
sub
add
xor
repz
mov
jb
push
adc
lods
(bad)
inc
aaa
xor
xlat
aaa
mov
addr16
and
out
mov
fmul
mov
mov
dec
iret
rcl
jo
inc
mov
fcmovnu
fdivp
test
push
cdq
lds
sub
retf
(bad)
fsub
lds
jns
adc
mov
dec
fs
ror
and
mov
inc
out
push
cli
mov
pushf
int
push
and
inc
add
fsubrp
push
imul
shl
cli
add
int
popf
enter
fbld
mov
enter
jg
or
sub
test
adc
mov
xlat
cwde
movs
daa
push
sub
je
sbb
push
adc
sbb
into
add
jne
adc
adc
push
xchg
pop
fcomp
adc
popa
push
mov
aaa
in
adc
push
addr16
sub
imul
outs
cs
add
cmps
and
cmp
xor
dec
sbb
in
clc
rsqrtps
fbld
jmp
icebp
cmp
jecxz
jo
aaa
xchg
mov
mov
cdq
mov
jmp
pushf
fmul
dec
xchg
outs
mov
test
cmc
xchg
sub
cli
dec
sbb
pop
addr16
jge
jns
retf
push
cmp
cwde
push
mov
dec
mov
and
xchg
test
xor
or
test
imul
push
jl
shr
add
jb
add
out
jge
jl
mov
jmp
in
shr
xchg
hlt
xor
fwait
ret
jno
ja
cmp
vpmaddwd
fcom
(bad)
jl
push
lock
adc
(bad)
pop
cmp
out
repnz
mov
daa
in
push
pop
add
sbb
rcr
in
retf
repnz
call
sbb
cmc
adc
mov
mov
scas
dec
gs
dec
icebp
mov
mov
push
int3
push
xchg
test
jmp
jb
call
sub
jmp
popf
inc
scas
pop
int3
ins
sar
mov
jo
inc
xchg
dec
jb
and
test
scas
cmps
dec
ret
xchg
call
fst
mov
cdq
xor
jg
loopne
mov
adc
dec
jns
sub
fs
frstor
dec
jae
xchg
and
or
jg
movs
jae
sar
dec
mov
xchg
mov
push
push
sub
ds
xchg
sbb
xchg
iret
lods
repz
sbb
(bad)
icebp
clc
in
mov
pop
movs
xor
(bad)
je
shr
mov
mov
adc
sub
mov
shl
push
into
iret
loope
xchg
nop
aas
test
jmp
push
ret
in
aaa
push
or
sbb
pop
or
mov
out
mov
cmps
aam
jl
stc
sbb
xor
popf
pop
or
sub
dec
aam
cmps
sub
ds
inc
mov
mov
xor
or
mov
test
(bad)
fdivr
adc
arpl
pop
movs
inc
imul
and
imul
push
jmp
pop
mov
in
out
aam
inc
pop
sub
lea
adc
dec
pop
jo
loope
lea
jne
or
(bad)
shl
fcmovu
adc
push
ret
stos
out
dec
xchg
adc
lods
jno
loopne
sub
inc
or
cmp
movs
ret
fldl2e
popa
dec
push
add
adc
(bad)
xchg
into
mov
fild
imul
xor
push
jl
retf
repz
xchg
lock
xchg
inc
jo
popa
add
retf
(bad)
loope
inc
test
icebp
dec
(bad)
fistp
and
sub
or
dec
repnz
fwait
into
or
dec
dec
imul
jmp
push
loope
jg
and
sahf
jns
jb
adc
outs
mov
and
repz
or
stc
jl
xchg
mov
in
into
fild
cmp
sub
and
add
or
pop
jg
dec
cmp
scas
pushf
jnp
mov
jns
sbb
add
push
inc
je
int3
mov
pop
lock
and
mov
and
jp
mov
jp
adc
sub
mov
pusha
adc
add
inc
fbld
mov
mov
sub
adc
add
out
xchg
push
mov
jb
xchg
out
into
in
mov
ja
push
nop
sbb
(bad)
and
stos
arpl
mov
mov
lea
inc
mov
retf
pop
cmps
mov
lods
iret
into
out
outs
lea
dec
push
mov
jle
xor
push
jns
scas
fprem
xchg
inc
sbb
xchg
fwait
into
dec
cli
pop
(bad)
loop
pop
and
mov
aam
cmp
in
aad
out
jge
scas
add
scas
mov
popf
test
mov
dec
arpl
cmp
cli
jmp
xchg
push
cmps
sbb
cmp
lods
inc
cdq
jg
jo
(bad)
cli
leave
or
(bad)
aas
lods
ja
test
xchg
(bad)
cmp
jecxz
jmp
mov
sbb
xchg
std
sbb
push
xchg
test
cmovs
cld
jp
push
dec
inc
cwde
mov
fsubr
call
push
cdq
aaa
in
cmp
xchg
and
pop
sub
sub
adc
loope
sbb
mov
adc
mov
jo
xchg
xchg
(bad)
pop
adc
or
fndisi(8087
sbb
pop
push
mov
mov
mov
ror
mov
mov
dec
inc
(bad)
lods
in
inc
pusha
jno
sub
imul
mov
dec
pop
inc
shl
push
jecxz
push
imul
aad
bound
mov
jns
dec
in
add
push
inc
sbb
jecxz
in
mov
pop
add
xlat
jmp
sar
fwait
pop
mov
and
fsubrp
sar
in
(bad)
cs
xchg
mov
or
push
pop
cmp
lods
push
mov
jmp
shr
outs
dec
sbb
enter
imul
add
enter
cmps
mov
sbb
mov
movs
mov
je
jl
sar
adc
inc
loop
aam
add
ins
arpl
lods
jmpw
add
gs
cmps
xor
popa
dec
imul
dec
push
pop
iret
(bad)
lock
cli
lahf
mov
add
daa
xchg
lea
pop
add
das
arpl
loop
sti
jae
mov
or
test
push
xor
dec
cwde
bound
out
mov
mov
jno
mov
mov
mov
std
dec
xchg
les
push
test
add
out
test
pop
aaa
(bad)
mov
or
mov
sbb
jmp
inc
push
mov
cmp
jle
aas
mov
add
jae
sbb
aam
es
fbstp
cmps
inc
sbb
loopne
in
daa
stc
fldcw
int
pushf
out
jle
(bad)
cwde
sub
call
mov
call
nop
dec
push
inc
mov
cmp
ins
push
or
nop
mov
and
ret
pop
cmc
push
popf
jmp
nop
cmp
add
mov
jne
test
cdq
xor
or
pushf
push
mov
sub
retf
fcom
das
sub
into
lds
mov
movs
mov
cmp
outs
mov
and
rol
xchg
(bad)
xor
ffree
inc
fwait
arpl
iret
fs
push
shr
mov
or
js
pop
js
scas
inc
xchg
sub
imul
xchg
cs
mov
fwait
xlat
mov
outs
sahf
pop
lahf
xchg
jae
std
ret
xor
xor
test
inc
xor
sbb
es
mov
pop
mov
adc
fisttp
mov
cmp
jg
inc
addr16
aad
cmps
mov
add
mov
bound
inc
cmc
push
dec
jl
pop
cmp
fwait
sub
mov
inc
(bad)
test
add
gs
aas
cwde
sti
in
xchg
es
lahf
mov
inc
cmps
sbb
pushf
sub
into
into
ret
jne
push
retf
ud0
mov
loopne
popf
gs
sbb
xor
dec
aas
mov
mov
repnz
jnp
dec
leave
(bad)
jge
popa
cmps
push
jbe
xchg
inc
xchg
std
mov
cmp
adc
add
pcmpeqb
cmp
jnp
ret
pop
mov
lea
gs
mov
cmps
aas
stos
xor
cs
mov
int
sbb
pushf
sahf
push
mov
jns
pop
push
stos
lods
cs
sub
gs
lock
cmp
lods
adc
adc
pop
movs
push
inc
adc
sahf
test
mov
and
mov
stos
xor
xor
jbe
mov
lahf
xchg
add
das
sub
lock
mov
pop
fmul
ret
pop
push
lahf
movs
(bad)
jno
jl
mov
stos
cmps
xchg
dec
arpl
mov
repz
sub
aas
push
(bad)
sahf
sbb
fistp
int3
jae
scas
test
iret
sub
ins
not
mov
bound
push
xor
sbb
sub
aaa
enter
(bad)
loopne
adc
adc
aad
lds
std
push
push
(bad)
in
ins
jp
ds
jno
ss
lods
mov
scas
scas
jnp
es
int3
inc
mov
nop
outs
sbb
mov
mov
jle
xor
shl
loop
or
lahf
scas
fidivr
ror
sbb
adc
dec
(bad)
in
sbb
push
mov
scas
icebp
nop
push
jno
push
clc
jns
imul
loope
loope
cmps
sub
mov
sub
andps
pop
ja
adc
test
jmp
mov
fiadd
pop
cwde
pusha
xor
iret
fnstcw
(bad)
outs
fidivr
push
fs
dec
data16
cmp
in
pop
push
in
in
mov
icebp
fcmovnbe
sub
or
push
in
adc
add
fwait
xor
test
aas
sub
cmc
(bad)
repnz
xchg
cmp
popa
imul
fisubr
push
arpl
jg
push
dec
dec
sub
je
scas
(bad)
imul
jl
mov
in
or
test
push
cwde
push
loopne
in
inc
mov
mov
mov
jnp
outs
inc
scas
mov
xor
adc
or
imul
(bad)
pop
mov
mov
pushf
fsqrt
shr
(bad)
mov
pop
jo
pushf
add
arpl
ss
dec
repnz
outs
mul
aam
mov
inc
inc
cmp
push
das
scas
mov
inc
xor
test
xchg
es
and
adc
test
adc
rcr
inc
dec
je
imul
imul
cmp
mov
ret
inc
adc
xor
push
pop
xchg
cmp
mov
mov
aaa
out
jmp
rol
push
lahf
ds
adc
push
sti
fimul
scas
jae
fiadd
and
adc
sub
popf
jg
xor
push
loopne
fs
ret
pop
aas
sbb
popa
or
test
inc
cmp
fstp
push
add
fadd
inc
outs
cmps
dec
rcl
dec
clc
or
hlt
mov
sbb
je
cld
daa
ss
ss
xchg
aad
jle
mov
sbb
adc
jne
popa
pop
pop
pop
dec
jmp
mov
aas
and
imul
or
test
pop
push
shr
cmp
mov
in
xchg
xchg
ds
not
pop
sahf
inc
xchg
adc
or
mov
sbb
je
mov
push
in
(bad)
aaa
aas
inc
adc
dec
xor
clc
or
call
int
repz
mov
mov
inc
xlat
dec
jg
inc
lock
(bad)
sbb
pop
std
jl
pop
fsubr
jmp
mov
push
xchg
mov
movs
leave
dec
movs
dec
js
cld
test
rcr
imul
sub
nop
cdq
adc
adc
das
call
test
ds
cmp
mov
stc
les
push
xor
cld
retf
mov
cdq
mov
ja
jne
xchg
xor
pop
inc
fisttp
rcr
test
popf
outs
xchg
sbb
sub
pop
inc
pop
pop
pop
dec
sbb
sahf
sub
das
xchg
retf
icebp
sub
ds
fisttp
(bad)
and
sahf
loope
mov
sub
and
push
push
push
dec
add
shl
out
movs
xor
enter
js
fwait
and
lods
aaa
ret
aaa
xor
jmp
into
xchg
hlt
leave
repnz
lea
fnstcw
(bad)
pop
xchg
pop
dec
iret
xor
dec
add
arpl
cmp
lods
sar
sub
inc
cmc
popa
xlat
mov
add
or
lods
pop
inc
imul
icebp
test
push
daa
imul
xor
popa
addr16
mov
loopne
rol
jne
jge
inc
inc
mov
lea
rcr
mov
sub
fbld
shl
mov
push
sub
xchg
sbb
fwait
sbb
call
bound
sub
jo
and
hlt
adc
push
dec
inc
fisttp
and
int
and
adc
push
int
call
retf
add
adc
xchg
test
enter
and
outs
mov
jo
cmp
adc
xchg
sbb
sub
push
not
aas
cmp
jmp
mov
inc
test
clc
int
out
and
and
int
jbe
inc
add
mov
xor
add
in
mov
inc
add
mov
or
adc
imul
daa
adc
call
clc
leave
sti
sbb
leave
out
imul
push
or
das
xchg
xchg
sub
icebp
and
in
inc
pop
adc
cmp
add
je
data16
cmps
jmp
cmp
into
cmp
test
std
jmp
neg
dec
leave
mov
pop
aam
lods
pop
mov
cld
adc
movs
mov
mov
jnp
stc
pusha
outs
sub
xchg
inc
test
push
stos
mov
sbb
pop
or
sub
jl
js
pop
mov
js
sbb
jmp
xor
and
mov
imul
pop
pop
push
mov
push
or
add
add
sahf
and
adc
jbe
test
add
xchg
xor
add
cmp
pushf
or
sub
inc
pop
fisubr
je
push
daa
pop
ror
movs
push
es
and
add
ret
push
pop
adc
xor
xor
ins
mov
or
mov
hlt
dec
sub
jp
mov
or
aaa
inc
out
push
pop
scas
(bad)
call
call
bound
js
lods
dec
jb
jns
ins
stos
sbb
scas
add
(bad)
jo
leave
cli
dec
mov
(bad)
sar
jns
hlt
sbb
test
out
sub
xlat
les
cmp
pop
cs
test
mov
cld
adc
sub
mov
cwde
(bad)
aad
in
and
adc
add
hlt
ret
dec
add
jne
bound
jg
pop
in
faddp
push
loopne
jne
push
push
adc
inc
sbb
inc
xchg
in
mov
mov
add
or
jb
jecxz
fsubr
out
pusha
pop
inc
dec
fbstp
sub
(bad)
sub
cwde
push
or
fs
jae
hlt
push
in
cmp
xor
mov
out
adc
xor
mov
or
mov
mov
mov
dec
jmp
jno
out
in
xor
icebp
lods
pop
leave
and
sub
fnstenv
mov
jge
ror
push
xchg
and
lods
cmp
loope
out
call
xor
mov
pop
out
xor
cmps
imul
call
mov
fcom
dec
(bad)
push
iret
mov
popa
cmps
pop
(bad)
xchg
scas
sub
inc
mov
push
aaa
add
cmps
sbb
inc
movs
sbb
cmp
inc
in
je
cmp
push
in
xchg
(bad)
jle
fist
daa
js
or
shr
call
ret
call
pop
lahf
or
fiadd
bound
mov
push
es
xchg
fwait
(bad)
sar
and
movs
icebp
fisub
push
mov
daa
mov
sbb
lds
daa
mov
jbe
mov
outs
sub
cmp
out
dec
dec
in
fisubr
pop
or
mov
outs
cwde
iret
pop
scas
fnstenv
scas
xor
in
jae
pop
ja
mov
(bad)
and
outs
cli
aas
dec
movs
jae
retf
ficom
ret
jno
or
push
movs
fsub
or
xchg
jnp
les
pop
in
and
fst
inc
std
call
jecxz
add
cmp
cli
adc
inc
pop
outs
(bad)
and
lods
add
(bad)
loope
push
sub
arpl
dec
or
retf
lock
inc
jno
jmp
mov
pop
xchg
mov
loop
shl
pop
mov
or
and
sbb
jbe
jl
fsub
push
dec
(bad)
add
pusha
ret
add
mov
cmp
mov
clc
in
mov
fdiv
xchg
push
dec
xor
cmp
xchg
scas
cli
xor
cli
ins
jg
inc
xchg
cmp
push
mov
shl
icebp
push
dec
shl
xor
shl
aam
push
(bad)
stc
cld
jp
ror
or
mov
std
stos
movs
repnz
sbb
hlt
jne
outs
push
scas
inc
out
movs
or
adc
adc
rcr
or
int
inc
or
fcmovbe
shl
int3
adc
sub
rcl
push
loopne
mov
in
je
push
jge
aaa
int
xchg
rol
xor
fdiv
mov
sub
adc
pop
push
ss
loop
popa
jecxz
jnp
call
movs
pop
jp
and
jmp
sti
pop
rcl
adc
repz
icebp
cwde
in
dec
inc
ja
daa
fwait
mov
push
ficom
push
in
add
outs
push
xchg
mov
(bad)
mov
mov
sbb
aas
inc
sahf
jmp
cmps
add
movs
icebp
dec
pop
inc
fnstenv
jp
(bad)
aam
mov
in
fnsave
push
sbb
pop
loop
arpl
xchg
push
add
lods
mov
(bad)
dec
mov
ret
das
int
in
xchg
jl
lea
sbb
sbb
fnstenv
test
std
aaa
nop
outs
ret
push
pop
or
aam
js
mov
leave
add
cmp
cmps
hlt
sbb
imul
aam
mov
sub
xchg
shl
and
call
add
push
test
inc
jl
arpl
scas
mov
xor
lahf
dec
(bad)
fmul
test
sbb
jne
ret
call
pop
mov
mov
ins
adc
mov
minps
cmp
and
push
ins
hlt
xchg
call
adc
xchg
and
mov
daa
mov
ds
xchg
cmp
shl
and
push
add
xchg
cwde
sub
call
cmps
inc
sub
mov
add
sbb
shl
out
nop
jns
sbb
dec
mov
or
adc
push
push
lods
in
stos
sbb
sub
and
mov
(bad)
sar
fsub
sbb
das
mov
and
icebp
imul
mov
icebp
leave
sbb
sbb
inc
pop
xor
movs
fwait
mov
daa
cmp
mov
pop
jg
mov
movs
aam
add
lahf
cmp
sbb
pushf
mov
retf
popa
es
xchg
adc
pop
xor
xor
movs
(bad)
xor
inc
push
lods
and
jo
dec
jmp
fwait
mov
add
adc
in
(bad)
mov
cli
cmp
xor
push
mov
xchg
pop
push
mov
jecxz
ja
std
push
gs
mov
pop
aad
out
push
jecxz
outs
popa
inc
das
dec
fld
add
in
sahf
aaa
inc
push
rcl
inc
jmp
sbb
push
dec
ins
das
dec
pop
mov
lock
jl
out
int
shl
sbb
adc
test
mov
retf
sbb
adc
test
retf
dec
adc
push
repz
vmwrite
test
push
(bad)
cmps
or
push
clc
arpl
dec
dec
inc
xchg
mov
dec
cmp
mov
and
out
mov
jl
sbb
(bad)
adc
xor
adc
retf
push
out
iret
lock
sbb
and
and
pop
push
jae
lahf
jecxz
xor
stc
pop
pop
jp
mov
(bad)
pushf
ret
pop
jo
mov
stc
xchg
loopne
lods
aam
adc
xchg
xchg
inc
xchg
dec
lods
sbb
mov
cmc
dec
mov
push
and
push
call
bound
movs
retf
loopne
cmps
dec
dec
mov
sub
popa
jle
sub
pop
lds
dec
cmp
inc
int3
jns
push
hlt
xor
and
(bad)
ss
xor
cmp
or
push
in
dec
cmp
push
xchg
(bad)
xor
(bad)
data16
cwde
aaa
movs
clc
cdq
stos
sub
pop
sub
cld
sbb
sbb
popf
out
add
into
xchg
dec
dec
(bad)
mov
dec
sub
jo
dec
xchg
mov
ror
dec
mov
pushf
and
xchg
mov
mov
js
fmul
add
in
mov
call
enter
nop
cmp
xchg
clc
aaa
(bad)
mov
retf
jnp
fistp
mov
dec
jecxz
outs
sub
sub
mov
out
mov
cdq
and
cwde
aas
sub
push
mov
or
dec
xchg
xchg
dec
and
sub
jmp
ret
(bad)
lea
ror
mov
cmps
scas
jecxz
cmp
mov
movs
dec
pop
out
ja
push
lds
jbe
mov
neg
cmp
jmp
sahf
cwde
inc
mov
mov
(bad)
or
xor
xor
xor
push
push
cld
sbb
inc
push
push
mov
stos
ret
fidiv
test
sbb
mov
lahf
iret
pop
rol
lahf
push
mov
call
xor
push
cdq
loope
push
sbb
and
int
jmp
mov
jmp
loope
cli
pop
rol
inc
hlt
mov
fsub
test
jne
inc
lods
mov
cmp
mov
and
push
push
repz
add
jns
and
lea
push
sahf
std
out
inc
sbb
inc
sbb
aad
mov
xchg
clc
dec
push
lods
push
fistp
pop
fcmove
sbb
bnd
dec
imul
enter
jmp
loope
mov
xor
mov
test
xor
rcl
cmp
sub
mov
je
cmps
jge
sbb
jmp
jnp
dec
xchg
push
jmp
imul
add
ficom
push
mov
add
mov
fidiv
jo
call
push
mov
xchg
(bad)
fimul
ins
sar
xor
xor
inc
push
inc
in
movs
mov
in
inc
retf
push
or
ins
aad
inc
in
movs
xor
dec
(bad)
aam
dec
mov
ror
xchg
push
aad
enter
das
cmc
js
out
nop
mov
jl
fs
pop
shr
sub
std
push
sbb
adc
and
xor
dec
pusha
outs
in
aam
xchg
movs
adc
pop
std
inc
ret
inc
jbe
cmps
push
rcl
cmps
inc
out
popa
(bad)
out
mov
xor
movs
lahf
xchg
and
mov
dec
out
call
imul
push
repz
cmps
mov
int
mov
add
mov
int3
xor
repnz
imul
push
mov
dec
enter
sbb
pusha
mov
xchg
inc
iret
mov
das
or
outs
dec
adc
arpl
pushf
out
lock
test
xchg
gs
das
sub
push
popa
sbb
movs
(bad)
std
iret
and
cmc
xchg
out
and
xchg
add
out
popf
pusha
jae
sub
bound
sub
xchg
std
fistp
enter
mov
jae
jl
popf
inc
lds
xor
addr16
and
ret
push
or
pop
cdq
stc
test
retf
in
icebp
or
xor
iret
aam
push
jbe
sahf
lds
cmp
fild
xor
sbb
inc
pop
pusha
lods
xchg
loopne
and
xor
xor
push
cli
neg
fadd
mov
shl
sbb
(bad)
sub
stc
jae
push
pop
pop
jns
mov
cld
(bad)
mov
xlat
xchg
les
retf
cmp
int3
dec
xor
push
inc
cmp
sbb
xchg
daa
pop
sub
cld
and
mov
sti
and
cmps
mov
cwde
push
inc
add
and
fst
push
scas
call
iret
mov
jo
retf
xor
nop
cmps
jns
pop
mov
aad
lds
dec
movs
into
sub
and
imul
outs
push
sub
icebp
adc
sub
sbb
scas
fwait
mov
dec
sbb
out
lea
aaa
repz
push
pop
stos
cmps
jae
xlat
or
push
push
fs
sti
sar
cli
leave
add
cmp
repnz
test
js
xor
test
mov
dec
je
cmps
mov
call
pop
lds
push
in
lahf
fisttp
and
ret
and
inc
pusha
(bad)
pop
mov
mov
push
mov
mov
jns
mul
fyl2x
mov
outs
push
xor
stc
fnstcw
mov
mov
pushf
mov
adc
jle
push
jle
inc
jmp
retf
cmc
xor
xchg
inc
ds
out
xchg
mov
sar
mov
test
xor
mov
xor
aad
pop
rol
(bad)
(bad)
cwde
dec
push
xor
sbb
cmp
cmc
inc
out
jmp
hlt
fisub
mov
retf
gs
push
jle
(bad)
scas
pop
xor
stos
lods
xor
(bad)
inc
and
cli
jno
and
xor
sbb
pusha
lds
inc
push
loopne
xor
iret
push
call
xchg
loop
sub
jle
rcl
ds
daa
movs
or
jle
xrelease
out
mov
aaa
jmp
ins
xchg
inc
mov
dec
xor
mov
xchg
jno
mov
mov
add
jbe
xchg
and
outs
psubb
mov
mov
cmp
int3
adc
(bad)
ins
mov
mov
mov
pop
add
mov
push
sbb
mov
add
mov
sti
jne
dec
loop
outs
cmp
inc
push
xor
jmp
cmp
pop
cmp
inc
push
adc
mov
sahf
mov
into
std
(bad)
pop
dec
shl
sbb
imul
adc
fwait
sbb
xor
pop
gs
jl
xchg
push
cwde
xor
mov
imul
xor
and
jae
mov
jle
div
push
dec
aaa
jge
sub
(bad)
jp
mov
pop
shl
inc
mov
inc
fild
jb
mov
cmp
jl
pop
fild
push
iret
add
mov
inc
push
and
out
cwde
jle
push
pop
or
popa
cmps
inc
adc
sbb
test
inc
sbb
and
call
xor
inc
add
lea
pop
imul
xor
loop
adc
cmp
xor
push
aas
jmp
call
int3
or
sti
pop
xor
pop
jp
mov
rol
push
out
xor
fwait
ja
push
cmp
add
and
jb
mov
dec
or
cld
and
aaa
xchg
push
out
lahf
enter
fs
or
fdiv
pusha
call
(bad)
ss
push
jg
mov
mov
mov
xchg
adc
jo
fucomi
mov
pop
call
mov
mov
sbb
pushf
xchg
call
cmp
or
pushf
xor
gs
push
push
pop
call
jl
mov
ss
aas
test
cdq
mov
clc
adc
repnz
xchg
sub
add
jp
xchg
sub
jle
iret
arpl
popf
jge
retf
arpl
clc
ret
adc
add
nop
lods
sub
std
clc
adc
adc
dec
cdq
pop
dec
add
out
lds
push
retf
(bad)
call
adc
push
mov
xchg
cmps
vmovntdq
adc
test
jnp
and
mov
jmp
mov
je
sahf
push
xor
add
add
xor
jge
and
ss
aam
fmulp
push
push
mov
jbe
sbb
cwde
cmp
cdq
xchg
mov
dec
ds
inc
clc
cld
lahf
cmp
(bad)
mov
jo
(bad)
mov
xchg
xor
ss
cmc
mov
(bad)
retf
mov
pop
and
popa
test
xor
cwde
pop
mov
and
imul
leave
pop
sub
push
and
stos
ror
in
xrelease
shl
in
mov
and
icebp
ficomp
mov
xchg
fiadd
fisttp
mov
xor
mov
jge
xor
(bad)
(bad)
leave
and
lds
cld
enter
loopne
sbb
fild
jbe
mov
(bad)
out
loope
ins
lods
mov
adc
cmp
add
xor
or
pop
or
push
test
lods
aad
and
retf
mov
jecxz
retf
jmp
add
fldcw
mov
dec
and
mov
push
call
mov
in
mov
add
daa
fisubr
fistp
cmp
sbb
jae
ja
call
or
ret
jmp
mov
imul
outs
jb
xor
shl
sub
shl
dec
xor
icebp
push
cmp
fidivr
mov
fdivr
stos
sbb
jle
mov
(bad)
loopne
cbw
adc
(bad)
movs
or
(bad)
pusha
(bad)
pop
pushf
cmc
es
in
lea
cmp
js
fcom
(bad)
mov
mov
int3
ficom
movs
lods
push
imul
xor
loop
icebp
cdq
sar
sub
xor
mov
pop
cmp
sub
cmp
(bad)
(bad)
and
nop
fwait
mov
push
out
ss
sbb
xchg
add
mov
xchg
repnz
mov
sar
xchg
lahf
cdq
iret
daa
fmul
lods
stc
imul
in
sub
mov
fistp
xor
or
xchg
mov
jle
clc
sub
out
and
bound
and
movs
mov
ins
aaa
and
mov
aas
mov
es
mov
loope
stc
fisub
fst
cmps
es
xchg
inc
arpl
(bad)
jbe
jo
ins
imul
lods
sahf
sub
je
je
push
aaa
or
fisub
mov
sub
mov
std
(bad)
fidivr
les
jne
inc
mov
je
aas
mov
mov
aaa
push
into
jbe
push
xchg
dec
push
popf
or
jmp
enter
scas
cdq
xor
(bad)
(bad)
out
sti
int
adc
and
cs
rol
cmp
in
jge
mov
test
dec
js
ds
ins
adc
cmp
sub
sbb
lock
add
ja
cmps
rcl
sub
arpl
rcr
xchg
dec
(bad)
dec
push
scas
sar
jns
movs
xor
jb
rcr
cmp
pushf
aaa
adc
repz
test
sahf
pushf
or
jge
ficom
jge
and
pop
cmp
pop
and
fsub
push
aam
iret
pushf
scas
in
ds
xchg
sbb
in
xchg
mov
jbe
test
mov
call
dec
data16
ss
jmp
icebp
inc
sub
adc
jle
push
sub
ins
and
popf
sub
adc
pop
imul
ret
lahf
jae
stos
ret
fcmovnb
or
sar
retf
sahf
jge
imul
jo
out
xchg
addr16
shl
enter
mov
out
jnp
adc
jmp
push
push
adc
adc
in
int3
ja
add
mov
push
lods
(bad)
xchg
inc
pop
or
aaa
sbb
or
(bad)
test
mov
push
mov
fstp
ret
test
push
xchg
daa
mov
or
xlat
mov
repnz
mov
cld
int3
imul
pop
iret
push
(bad)
outs
cwde
loope
(bad)
shr
test
dec
arpl
pusha
mov
mov
sahf
mov
(bad)
mov
ror
mov
and
add
and
lds
sbb
movs
(bad)
xor
hlt
fadd
push
xor
repz
sbb
mov
test
dec
out
xor
lahf
or
dec
std
test
ins
rol
jno
push
imul
cli
sbb
lea
jo
data16
jmp
jne
lock
mov
dec
fwait
and
icebp
mov
nop
cmp
push
and
mov
fidivr
leave
mov
mov
icebp
stos
dec
pop
or
xor
fistp
add
mov
xchg
adc
mov
xor
mov
out
shl
cs
out
xchg
repz
es
sub
jo
mov
enter
inc
inc
pop
push
js
daa
add
fistp
ins
ret
ins
sbb
inc
xor
std
loopne
cmps
or
pop
mov
imul
lock
fmul
movs
pop
icebp
imul
push
(bad)
ss
cmp
dec
add
mov
in
enter
mov
int
adc
fwait
ss
xchg
adc
cmp
fwait
xchg
add
and
and
addr16
fsub
(bad)
fsubr
test
lock
lahf
dec
scas
or
(bad)
ficom
shl
retf
push
sub
enter
lods
mov
outs
std
hlt
mov
pop
cmp
lea
dec
clc
mov
pop
mov
sub
ins
and
inc
xor
adc
xchg
mov
add
mov
jmp
xchg
lea
sub
test
daa
xchg
rol
in
aas
retf
mov
cmc
cmps
out
retf
cmc
ds
jbe
dec
std
adc
(bad)
pop
dec
cmc
out
outs
mov
sti
mov
cli
push
xchg
int
aad
cmp
in
ja
xlat
jg
mov
xchg
cmc
push
jnp
adc
xchg
push
push
fnstsw
out
stos
jmp
and
ror
in
lahf
add
fcomp
shl
xor
or
inc
xor
ja
and
jmp
pop
fidiv
add
mov
xchg
enter
mov
out
adc
push
imul
dec
or
(bad)
retf
jno
cmps
cs
adc
test
jo
add
pop
mov
cmp
pavgw
and
jb
aam
test
cmp
out
pop
test
pusha
pushf
jbe
rcl
jno
sub
mov
sub
xchg
push
cld
mov
xchg
push
pop
dec
lods
sub
and
and
add
out
cmps
pop
add
retf
scas
jnp
xchg
cmp
or
and
loop
mov
mov
call
mov
cmp
push
cld
pop
(bad)
sbb
push
out
lock
aas
jns
jmp
or
js
dec
mov
imul
cs
imul
pop
push
xchg
ret
pushf
or
popa
mov
cld
mov
mov
adc
mov
mov
arpl
push
pop
sub
pop
js
dec
ja
out
cmp
jne
sub
js
or
or
retf
adc
mov
or
adc
test
or
or
sahf
gs
pop
nop
adc
pop
pop
jb
adc
adc
mov
cmc
iret
jge
(bad)
pop
xor
sub
test
cmp
xchg
inc
mov
or
sti
push
gs
cmc
mov
imul
out
inc
or
popf
stos
mov
call
std
jae
pop
mov
and
inc
(bad)
xor
in
add
repz
test
xchg
add
adc
(bad)
jns
push
adc
lods
sbb
rcl
(bad)
stos
inc
mov
xor
mov
dec
and
dec
addr16
test
push
push
aaa
into
sub
aas
dec
ss
mov
pop
xchg
clc
iret
out
cmp
sbb
shl
test
movs
cmp
xchg
in
and
xlat
fs
shl
xor
cmc
mov
cld
sub
lds
sbb
std
mul
adc
daa
inc
(bad)
cmp
sbb
fild
mov
aad
pinsrw
(bad)
fwait
ret
pop
shl
jmp
stc
xlat
pop
cmc
sub
jle
adc
out
sub
stc
cld
pop
call
dec
inc
sub
lahf
enter
mov
cmp
or
pop
xchg
and
adc
(bad)
dec
js
nop
ret
cdq
push
jns
sub
jge
in
adc
cdq
ins
imul
cld
inc
xor
(bad)
int3
movs
add
mov
int
in
les
std
pop
fild
mov
mov
jl
not
cmp
les
(bad)
iret
aaa
and
sti
shl
jae
jnp
mov
sbb
sub
punpckldq
imul
adc
lods
cli
and
pop
mov
fwait
mov
lea
add
popf
out
stc
xchg
retf
iret
pop
(bad)
cmp
ds
pop
jmp
mov
jge
das
dec
mov
stos
xor
jns
fucomip
mov
hlt
stc
inc
and
sub
aam
sbb
lods
and
int
sub
mov
outs
or
cmp
sub
stos
push
dec
div
out
out
pop
or
mov
ror
das
xchg
lahf
mov
ss
pcmpeqw
mov
addr16
pop
fist
or
pop
movs
xchg
jmp
js
push
out
cmp
mov
cmp
stc
mov
mov
hlt
mov
jecxz
sub
add
pop
inc
fst
jg
lds
jp
out
sbb
nop
cmc
or
jb
xchg
int3
ins
ins
dec
enter
outs
fisub
jmp
pusha
(bad)
jns
xlat
imul
cli
frstor
xchg
jg
mov
iret
dec
sub
adc
jne
shl
pop
pop
xor
fstp
iret
test
push
cmp
push
pop
hlt
cmps
jno
mov
jnp
pusha
(bad)
(bad)
or
fistp
jmp
pop
dec
neg
outs
pushf
lock
pop
sbb
int
add
inc
enter
mov
fs
jp
aas
fdivr
js
cmps
cmp
in
shl
lods
and
xor
sub
jno
add
cld
loope
fsub
test
mov
mov
js
adc
lods
pusha
ins
push
(bad)
(bad)
push
in
cmovp
test
in
dec
outs
loopne
(bad)
cmps
sar
mov
mov
xchg
jmp
out
test
ss
jno
int
jbe
ins
pop
mov
repz
mov
loop
sbb
lds
les
inc
repz
retf
mov
pop
shl
fsubr
fdivr
(bad)
sub
popa
repz
pop
out
sbb
pop
jecxz
pushf
pop
rcr
in
test
xor
mov
gs
mov
sti
push
lds
test
bound
loop
mov
in
in
enter
in
aad
and
sub
mov
jmp
xchg
mov
adc
fcom
jmp
fild
and
mov
pop
in
cmp
jne
jle
or
sub
xchg
xor
mov
cmp
or
test
sar
or
or
mov
jl
xchg
pusha
add
fst
jmp
mov
or
mov
push
test
inc
cld
cmps
retf
sahf
pop
mov
fwait
sub
jecxz
pop
inc
inc
or
dec
scas
xchg
loope
add
and
xchg
cmc
inc
or
add
imul
jno
sbb
mov
data16
sub
aas
lods
mov
add
data16
popa
popa
jecxz
outs
shl
cmp
sbb
mov
pop
mov
sbb
cld
mov
push
cmps
dec
movs
add
xor
(bad)
mov
mov
push
xchg
sbb
ficomp
std
int
loope
in
sahf
jp
(bad)
stos
xlat
jl
xchg
cmc
push
cdq
xchg
mov
popf
add
daa
xor
aad
pop
leave
mov
mov
pop
mov
loop
loopne
lds
popf
cmp
test
in
xor
outs
xchg
inc
jae
or
aad
mov
jno
gs
inc
imul
cld
jp
sub
ds
cwde
aad
jmp
lahf
sub
adc
cmp
sub
or
outs
in
jno
pop
out
shr
movs
inc
stos
mov
mov
or
push
scas
int
jns
pop
add
or
sbb
or
inc
push
arpl
mov
test
int3
(bad)
mov
out
or
xlat
outs
jae
sbb
movs
sbb
push
cmc
or
or
xor
sti
mov
inc
ror
stos
or
sbb
push
jne
cmc
fistp
iret
dec
fs
(bad)
imul
adc
jmp
adc
ret
(bad)
jle
inc
mov
lock
cmc
mov
pop
test
jecxz
out
inc
jne
inc
daa
jle
xor
mov
mov
add
dec
jge
pusha
cmp
jns
arpl
pop
mov
pop
test
add
stos
mov
inc
arpl
popf
dec
lods
jne
int3
rcl
div
mov
push
out
(bad)
in
clc
lods
or
sbb
fistp
and
imul
pop
outs
out
dec
and
aaa
jmp
xor
inc
sub
(bad)
jl
dec
out
inc
fmul
sahf
enter
fcom
loopne
pop
or
jbe
(bad)
dec
cli
mov
mov
cmps
cdq
ja
rcl
push
data16
add
sbb
repnz
or
leave
mov
mov
mov
jae
je
xor
out
bnd
(bad)
fnstcw
clc
out
cmp
add
add
and
mov
adc
leave
inc
mov
(bad)
inc
jp
jle
xor
xchg
fwait
mov
imul
mov
outs
jmp
sub
shl
std
mov
mov
mov
pop
xchg
loope
and
imul
mov
push
jge
fistp
neg
inc
dec
fdiv
xchg
aaa
fs
mov
jmp
mov
dec
push
xchg
jl
cld
and
data16
sbb
jae
dec
cli
xor
into
nop
push
aad
push
cmp
sub
inc
dec
cmp
or
xchg
daa
push
cmp
jns
mov
jae
in
fdivr
ds
int3
cmp
mov
mov
(bad)
jnp
loope
jg
sbb
mov
sub
xchg
(bad)
retf
pop
mov
pop
push
inc
xor
push
cmps
popf
lahf
leave
out
cld
cli
lea
std
dec
add
(bad)
cmp
test
int
or
dec
lea
(bad)
(bad)
mov
pop
push
popa
ins
xor
movs
je
inc
mov
dec
jae
xchg
xor
in
mov
retf
(bad)
pushf
cmc
push
jb
inc
pop
push
iret
sub
mov
mov
mov
mov
xchg
in
retf
addr16
scas
imul
sub
test
pop
xchg
or
in
push
or
push
lock
and
and
int3
adc
out
int
std
(bad)
les
(bad)
imul
shl
scas
jle
lods
fadd
mov
fst
(bad)
data16
push
popa
or
out
mov
retf
xor
cdq
data16
mov
pop
adc
frstor
inc
out
and
sbb
(bad)
or
out
ss
enter
stos
mov
jmp
dec
or
push
mov
mov
and
pop
retf
sub
xlat
aad
or
movs
xchg
inc
arpl
ds
mov
(bad)
inc
and
push
xchg
sub
adc
jae
mul
inc
jmp
push
sysret
dec
mov
test
mov
cmp
loop
adc
mov
push
shl
push
jae
xor
ins
mov
push
popf
push
inc
out
mov
mov
jge
add
call
(bad)
fsub
fwait
pop
push
in
into
cld
mov
pop
popa
fisttp
rcl
call
cdq
test
fwait
shl
lds
scas
cli
add
dec
sbb
xor
and
ret
jns
jg
(bad)
(bad)
das
shl
ins
jo
xchg
pushf
mov
ror
sbb
data16
daa
pop
push
push
adc
xor
add
inc
les
mov
mov
and
loop
in
test
stos
out
test
repz
xchg
cmp
adc
aad
or
xchg
les
sub
adc
shl
inc
dec
fild
sub
jmp
and
and
aaa
fmul
xor
fcomip
or
sbb
ror
test
sbb
inc
rol
jl
inc
jae
mov
push
add
inc
(bad)
mov
mov
int
xchg
push
inc
lods
clc
(bad)
adc
and
cmp
xchg
test
xchg
in
dec
jl
add
xor
fwait
(bad)
sub
pop
mov
push
pusha
aam
cmp
in
in
fucomi
addr16
cmp
sub
jb
call
push
bound
aas
mov
push
retf
out
push
outs
test
mov
jb
xchg
out
outs
jmp
xor
lahf
mul
pop
push
jae
pop
pop
pop
push
scas
lds
mov
inc
popa
in
ret
push
sbb
mov
sbb
inc
mov
and
cmp
call
data16
sub
add
adc
paddd
mov
data16
add
cmps
aad
xchg
movs
push
jmp
cld
arpl
lock
fcomp
adc
push
add
call
call
psrlq
stos
mov
mov
push
adc
mov
mov
dec
jg
inc
push
sub
cmp
mov
addr16
sub
mov
jg
loop
in
outs
jg
inc
dec
jno
jp
jbe
inc
int3
fimul
ja
mov
sbb
adc
jmp
jo
fstp
scas
mov
add
mov
sbb
std
jg
pop
and
mov
test
fstp
imul
adc
adc
ds
leave
outs
sahf
push
ucomiss
adc
mov
lahf
xor
mov
shl
xchg
clc
and
or
pop
jne
and
or
xlat
and
cs
mov
mov
pop
adc
cwde
clc
sbb
pusha
jnp
adc
stos
mov
in
ficomp
rol
arpl
ror
(bad)
push
cmp
xor
out
outs
pop
shl
inc
mov
ins
imul
ds
inc
cwde
mov
sub
and
and
mov
pop
cmp
mov
pop
xchg
into
and
and
mov
cwde
mov
retf
sbb
bound
rcl
mov
pop
xor
imul
cmp
repz
inc
das
iret
outs
sbb
call
ins
cmp
adc
jmp
shl
loopne
jmp
dec
mov
sbb
nop
sbb
sub
in
pop
ret
or
scas
sti
mov
push
imul
sbb
ret
xor
jb
mov
ret
fst
ror
int3
and
enter
jmp
nop
cmc
cmp
push
jns
jp
push
call
mov
mov
pop
pusha
cs
mov
test
inc
icebp
push
or
jmp
or
xchg
inc
retf
xchg
pop
cmp
outs
mov
jl
push
xchg
bound
das
hlt
cmp
fild
call
mov
call
mov
sbb
sbb
mov
xlat
call
in
xlat
ficomp
outs
xchg
leave
lds
sbb
por
push
mov
pop
imul
dec
inc
gs
es
shl
xchg
call
mov
cli
mov
shl
pop
out
clc
pusha
sbb
push
hlt
jmp
cdq
dec
mov
gs
shr
mov
cmp
jecxz
cdq
sahf
enter
in
jb
jmp
les
or
repz
jmp
dec
imul
pushf
test
and
inc
ss
cmp
fsubr
cmps
jg
sbb
jmp
das
xchg
add
mov
fisubr
dec
mov
dec
daa
das
or
inc
daa
loopne
dec
pop
fisubr
xchg
fstp
gs
scas
iret
clc
pop
and
add
dec
shr
mov
push
test
icebp
repz
bound
dec
xchg
(bad)
les
jl
rol
movaps
mov
lock
add
fbstp
mov
rcl
xor
adc
push
fisttp
jle
dec
cmp
cmc
bound
push
dec
cmps
xor
lea
pop
iret
in
sti
call
jbe
(bad)
dec
std
cmp
pop
ss
nop
je
inc
fs
popa
xor
bnd
enter
data16
push
or
retf
pop
mov
stc
sahf
sub
jmp
shl
push
xchg
movs
fist
fadd
test
pop
inc
cmp
or
xor
xchg
retf
sub
jmp
call
or
or
loopne
mov
dec
dec
stos
inc
dec
jb
push
lds
stos
and
xchg
jb
fild
xlat
sub
xadd
popa
mov
xor
repnz
std
mov
jb
cmp
cmp
mov
push
xchg
in
scas
shr
(bad)
das
lock
gs
mov
repnz
aad
mov
mov
sbb
jae
push
mov
adc
dec
push
xor
ret
cmp
or
mov
popf
imul
push
(bad)
cmps
or
fst
jle
lods
pop
jbe
mov
mov
mov
fcomp
mov
or
enter
scas
or
repz
add
jae
add
xlat
out
dec
inc
jp
sub
ins
push
sub
retf
rcr
mov
mov
jmp
add
lock
pop
and
jg
hlt
and
xor
mov
int
pop
push
ds
repnz
or
std
jmp
cli
loop
(bad)
pop
jnp
xor
cdq
dec
push
or
push
fwait
pop
pop
pushf
and
fcomi
movs
js
sbb
sub
pop
inc
fcmove
gs
jnp
cmp
add
sbb
adc
loope
pop
push
mov
popf
mov
pop
aam
stos
mov
daa
pop
xchg
aas
jb
inc
ins
out
and
ret
mov
aad
out
movs
iret
xchg
pop
test
sub
push
cs
out
xchg
js
inc
sub
adc
cmp
jg
jp
mov
(bad)
fidivr
sbb
pop
in
dec
imul
mov
fcom
xchg
cmc
ret
sahf
sub
pop
(bad)
push
pop
ss
xor
adc
js
push
out
bound
call
lods
enter
dec
in
pop
lds
daa
sti
mov
mov
add
arpl
jle
in
fsubr
cmc
and
jmp
and
loop
push
mov
imul
hlt
scas
or
movs
lods
xchg
sub
and
pop
or
hlt
lods
pcmpeqw
je
push
jecxz
dec
sub
jg
and
dec
int3
push
add
dec
imul
xchg
ror
js
inc
inc
sub
fimul
fstp
jmp
mov
data16
mov
sub
fs
inc
cmp
ins
in
outs
lahf
fdivr
xchg
jle
arpl
inc
push
lea
inc
ja
cmp
hlt
popa
out
(bad)
lods
xchg
push
sbb
cmp
retf
push
mov
ja
xchg
rcl
das
push
push
cmps
lock
or
imul
mov
(bad)
addr16
(bad)
movs
ds
ins
sub
push
das
adc
jbe
addr16
dec
nop
mov
popa
lahf
imul
fs
aam
ds
in
dec
and
sub
mov
cmps
aam
push
inc
pop
cmp
sbb
inc
les
ja
fdiv
mov
adc
ret
fldcw
and
es
lods
cmp
adc
pop
(bad)
or
popf
jnp
sbb
call
(bad)
lahf
loopne
out
out
pusha
in
cmp
add
mov
aad
daa
retf
lahf
(bad)
cmovnp
sahf
mov
les
mov
jg
dec
dec
dec
sti
pop
addr16
ret
fild
cmp
fimul
inc
shl
sahf
pop
cmp
push
dec
enter
cmp
xor
mov
iret
push
test
xchg
sahf
mov
fs
or
cmps
popa
mov
pop
idiv
jg
popa
test
ror
push
mov
(bad)
cmp
jnp
and
(bad)
mov
retf
dec
icebp
push
pop
inc
inc
sbb
sub
es
add
scas
xchg
cmp
sbb
gs
retf
scas
xchg
imul
(bad)
(bad)
cli
dec
push
jp
xchg
out
movs
int
cmp
(bad)
or
or
ret
cmp
add
jge
dec
ficom
in
pop
pop
jmp
ds
jo
sbb
jmp
int3
jecxz
aas
jmp
xchg
sti
cmp
mov
or
loope
sbb
fimul
mov
(bad)
rcl
jnp
dec
mov
lea
jno
mov
fidivr
xor
lods
mov
cmp
sub
std
inc
adc
push
adc
in
xchg
inc
fadd
mov
ins
cmc
loop
jae
leave
(bad)
aam
xor
fs
jno
pop
sub
pop
mov
mov
popf
mov
bnd
outs
jnp
and
xchg
test
ins
dec
xor
and
test
ss
add
sbb
or
xchg
cmps
jmp
popf
jmp
push
and
mov
xor
dec
pop
cs
or
jno
mov
mov
icebp
bound
out
leave
movs
mov
test
add
sub
push
and
lea
sbb
mov
push
sub
inc
xor
sbb
or
adc
xor
outs
gs
inc
lea
cmp
mov
xor
fmul
pop
lods
not
cli
jecxz
stos
pop
push
inc
sub
cmp
push
sbb
aas
cli
and
sbb
test
test
cmps
inc
stos
cli
in
mov
and
push
adc
xor
pop
sub
and
push
cmp
ret
imul
loopne
daa
jb
out
outs
xchg
fdivp
(bad)
mov
shr
adc
js
mov
ret
out
sub
sub
push
jns
add
in
daa
test
ds
sub
jbe
adc
inc
xor
repz
bound
mov
stos
(bad)
mov
or
outs
jg
xor
test
repnz
cmp
bound
adc
mov
outs
dec
test
stc
inc
sub
pop
enter
pop
cmc
jne
rol
mov
mov
inc
pop
(bad)
or
pushf
call
xor
mov
je
pop
rcr
or
mov
pop
sbb
add
in
push
add
aaa
jle
sar
test
aas
mov
mov
pop
jmp
ret
sbb
loopne
jmp
sub
cmp
test
(bad)
mov
add
mov
jae
loope
pop
mov
mov
or
adc
(bad)
xor
ret
loope
mov
pop
mov
mov
jg
movs
jg
and
mov
in
sub
mov
outs
outs
imul
adc
mov
pop
fdivr
sub
mov
xor
pop
mov
and
push
fwait
xchg
pop
nop
adc
in
fs
hlt
mov
jl
loop
in
push
jmp
jp
push
mov
fsub
xchg
cmps
pop
cmp
mov
mov
inc
aas
aas
xchg
and
fidivr
xlat
rcl
pop
add
push
imul
retf
scas
cmps
xor
sub
hlt
out
mov
hlt
push
in
test
pop
aad
mov
jo
sub
pop
mov
les
ss
sbb
xor
popf
lods
fwait
test
or
ja
rcr
sbb
pop
lahf
dec
inc
dec
in
and
je
sub
call
adc
sbb
(bad)
jns
loopne
and
ret
fwait
fwait
inc
cli
mov
mov
xchg
cs
jmp
movs
fsub
or
enter
mov
push
xlat
adc
and
mov
cmp
into
test
cmp
data16
or
and
imul
ins
sub
je
jo
and
fdivr
pop
in
stc
mov
and
popf
jae
add
in
aaa
arpl
sbb
xor
xchg
dec
xlat
cmp
mov
cmp
es
mov
mov
js
call
mov
lods
cwde
add
scas
sub
(bad)
popa
jae
call
sub
mov
jbe
mov
mov
imul
mov
mov
cmc
add
imul
sbb
and
in
xchg
push
rep
loop
pusha
jnp
in
in
and
jle
xor
xlat
jno
pop
cli
add
std
outs
jae
xchg
jno
popa
or
ret
adc
(bad)
mov
not
aas
lock
push
mov
stc
dec
pop
(bad)
jmp
repnz
push
pop
jae
mov
mov
outs
cmps
mov
std
nop
pushf
lds
(bad)
xchg
dec
xchg
lock
ins
mov
out
shl
fisub
mov
adc
loopne
xor
or
jmp
sbb
xchg
or
xor
enter
fisub
(bad)
add
repz
retf
bound
call
mov
push
pop
cmps
in
popa
and
outs
sbb
movs
xor
loopne
daa
pop
cmp
mov
sahf
shl
and
push
push
mov
(bad)
jmp
out
mov
sub
call
jne
jb
mov
sahf
cs
gs
mov
mov
cmp
and
push
pop
sahf
stc
or
std
(bad)
sbb
pop
cs
dec
push
outs
cwde
sub
push
aad
andnps
mov
enter
dec
push
push
ins
jo
jge
popa
pop
fcom
aaa
jg
inc
jl
ins
or
sti
mov
jmp
retf
js
(bad)
in
popf
pop
bound
mov
xchg
in
daa
je
pop
xor
inc
imul
fild
and
adc
aad
xor
sub
stos
pop
cmp
mov
cdq
lds
imul
cmc
jp
arpl
jp
in
out
sbb
pop
inc
(bad)
xchg
repz
pop
sbb
adc
nop
rol
arpl
and
ja
scas
fidivr
pop
repz
pop
dec
es
test
lahf
cmp
push
jg
ret
pusha
shl
scas
jge
pop
mov
or
pop
add
lods
aam
adc
sbb
add
fwait
es
gs
push
addr16
mov
ja
add
pop
enter
xor
sbb
lods
iret
cld
mov
cmp
pop
xchg
aam
sbb
mov
cmp
inc
adc
push
xchg
jns
inc
mov
addr16
rcl
jae
test
fnsave
jl
mov
sti
icebp
enter
aad
dec
push
enter
push
xor
loopne
jge
jnp
or
cdq
sbb
and
sbb
inc
push
call
mov
test
inc
cli
xchg
push
popf
out
sub
in
out
sub
dec
pop
rol
push
mov
sub
dec
sar
mov
(bad)
or
ret
jne
dec
jecxz
nop
sub
inc
inc
popf
push
mov
mov
xor
in
xchg
mov
cmc
test
loope
jecxz
(bad)
out
cmp
pushf
ret
xchg
daa
mov
arpl
push
in
rol
ins
pop
xor
pop
in
sub
inc
sbb
jge
test
ror
add
or
ret
mov
lea
in
shr
adc
shl
rcr
adc
fldcw
jo
mov
fcom
push
in
jbe
mov
jp
xchg
fsub
jae
ret
xor
dec
cmp
sbb
rol
test
xchg
pop
pop
aam
aaa
jno
push
pusha
lock
je
mov
retf
sbb
sahf
add
push
fistp
mov
xchg
ss
cmp
jecxz
add
(bad)
jmp
aam
sub
(bad)
mov
pop
movs
cmp
dec
(bad)
xlat
jmp
sbb
pop
cmp
mov
add
scas
shr
arpl
out
sbb
in
in
inc
cld
scas
and
sub
call
sub
stc
scas
cdq
xor
data16
scas
push
or
mov
loope
pop
test
cld
dec
adc
pop
retf
adc
jnp
sahf
popf
cmp
jl
das
sub
xchg
mov
inc
ret
daa
mov
mov
loop
fistp
fistp
add
jg
ficom
cmp
scas
pop
sub
xor
inc
xchg
jl
fnsave
pop
xchg
cs
xchg
cwde
out
mov
and
jle
je
imul
cmc
pop
sub
addr16
jo
inc
jge
xchg
mov
repz
sti
push
jl
mov
xchg
ins
repnz
jmp
push
ror
out
test
lock
cwde
inc
(bad)
push
rcl
xchg
cmps
daa
or
dec
adc
ins
sub
pop
ins
into
pop
jg
neg
ret
or
int3
int
outs
dec
add
mov
nop
push
out
xchg
stc
ds
mov
or
imul
es
call
cmp
adc
cmp
or
adc
lds
arpl
ret
es
idiv
push
xchg
sub
jnp
imul
in
adc
push
push
fldenv
pop
ja
sub
or
aad
inc
add
push
jmp
or
pop
jmp
sub
mov
jg
scas
shl
outs
stos
push
push
jbe
xchg
pop
imul
fnstenv
daa
mov
xchg
push
daa
mov
test
cld
ret
pop
div
inc
add
jno
fs
outs
jnp
(bad)
pop
inc
inc
jns
in
les
mov
pop
aad
jne
in
adc
sar
into
icebp
lahf
push
test
sub
iret
xchg
inc
sub
aaa
sub
mov
sbb
outs
push
scas
test
mov
shr
lahf
cmp
dec
mov
out
mov
or
jmp
push
jo
cmp
lea
mov
xchg
ret
les
mov
xor
movs
or
mov
cmp
or
aaa
js
ins
xchg
jg
adc
or
les
imul
add
dec
ss
jae
xor
pop
push
stc
data16
jecxz
adc
mov
fist
mov
stos
add
call
sbb
cmp
loope
bound
xor
mov
(bad)
es
ins
mov
jmp
pop
inc
mov
in
aam
out
mov
pop
or
call
inc
add
sbb
xchg
cmp
and
cmp
enter
or
nop
call
or
loope
jmp
fcomp
push
sar
mov
fsubr
mov
push
in
jno
jmp
ss
mov
mov
rcr
push
pop
pop
test
fimul
nop
(bad)
add
test
cwde
scas
add
jl
fistp
in
sbb
mov
adc
cwde
ss
xor
mov
pop
and
mov
stc
sub
outs
jp
loop
mov
and
clc
call
push
jge
mov
add
fld
mov
sbb
(bad)
mov
aam
das
leave
xchg
sub
das
push
retf
and
outs
cdq
mov
cmps
movs
mov
mov
xchg
js
mov
enter
cmp
in
fcomp
sub
imul
nop
shr
repnz
ret
movs
test
rol
imul
cmp
jno
out
loopne
(bad)
add
mov
sahf
stos
arpl
(bad)
fs
xchg
cli
bound
loope
stc
or
mov
xor
movs
pop
push
xor
cmc
and
xchg
or
pop
cmp
iret
add
aad
scas
(bad)
cmp
(bad)
and
test
bound
jecxz
push
inc
jp
popf
cli
mov
es
mov
leave
rol
cmp
add
ror
rol
mov
mov
(bad)
pop
sub
test
aam
clc
cmps
pop
inc
ret
in
sub
jnp
jmp
cmp
cmp
fxch
mov
cmp
loop
or
xor
stos
pusha
xchg
push
lods
clc
push
add
in
in
jmp
pushf
in
cld
jecxz
add
aaa
daa
ins
and
cdq
sbb
mov
and
repz
cmp
aas
push
(bad)
mov
fistp
mov
jecxz
pop
jecxz
hlt
pop
or
es
pop
mov
xor
sub
pop
jo
adc
nop
jo
mov
(bad)
cmp
add
outs
dec
add
out
inc
(bad)
mov
out
or
loope
mov
dec
fild
add
xchg
cmp
mov
fsub
inc
dec
pusha
mov
cmps
sbb
mov
cmc
push
xor
mov
mov
test
inc
js
inc
mov
sub
test
push
in
call
fcom
je
xchg
add
arpl
jmp
mov
add
sbb
inc
pop
jecxz
xchg
mov
or
(bad)
mov
arpl
push
ror
xor
cs
xchg
jno
pop
inc
mov
mov
adc
cli
pop
das
out
adc
aas
mov
or
xor
mov
in
sti
sbb
jp
cmp
enter
dec
pop
(bad)
test
jmp
ja
mov
fcomp
call
xchg
popf
adc
lods
cli
out
push
sbb
jne
xor
arpl
sub
or
gs
and
ins
cmps
push
aas
mov
call
xor
test
ucomiss
ja
mov
xor
aas
repz
dec
mov
dec
ja
shl
aad
cmp
sbb
shl
out
xlat
dec
push
pop
xchg
hlt
and
test
ds
test
sahf
out
into
xor
pop
mov
pop
cmp
clc
rcl
sub
(bad)
int3
sbb
xor
stos
or
arpl
cwde
mov
sar
outs
popf
cmp
arpl
nop
out
ret
sbb
and
sahf
inc
or
iret
sbb
push
fistp
cmp
mov
std
xor
jg
mul
or
cld
cmps
test
pop
mov
push
or
ds
sar
sbb
movs
push
out
push
je
dec
imul
lea
pop
stos
lods
push
test
pop
push
push
popa
mov
rcr
cmc
sbb
movs
into
push
mov
imul
mov
popf
xchg
xchg
cmp
mov
sti
stos
into
lds
jmp
in
mov
jne
xor
and
push
mov
jae
dec
sub
stc
ffree
(bad)
jbe
and
data16
xchg
sti
lock
in
jle
sahf
sahf
repnz
sahf
xor
sbb
int
ins
(bad)
cmp
add
in
arpl
jle
sub
pop
cli
cmp
js
pop
fwait
xchg
and
jecxz
sbb
idiv
into
push
xor
push
inc
je
sbb
or
jecxz
xor
paddw
fisub
mov
dec
xchg
out
jo
clc
mov
mov
jno
jmp
cli
xor
ins
inc
retf
fnstcw
push
push
or
arpl
jbe
pusha
outs
mov
dec
leave
xchg
jmp
mov
pop
aaa
retf
jmp
xor
out
cld
inc
adc
(bad)
jecxz
cmp
lods
xchg
add
retf
(bad)
adc
or
retf
aaa
push
shl
sbb
cdq
dec
pushf
xor
inc
push
ja
lds
lea
xor
nop
cmps
iret
out
push
fcmovnb
leave
test
push
mov
outs
mov
into
mul
cli
fldcw
push
je
inc
sub
loope
mul
push
mov
push
sbb
popa
or
inc
push
aas
inc
jle
popa
inc
popa
jmp
xchg
or
test
iret
jns
retf
mov
mov
pushf
jg
jnp
out
pop
and
sbb
xor
cmp
lods
dec
xchg
outs
in
push
push
cmp
fadd
xor
leave
xor
sbb
sub
daa
js
and
aam
pop
jne
dec
pop
clc
mov
mov
adc
mov
dec
or
pop
xchg
ror
dec
data16
adc
xor
fstp
les
sar
pop
mov
mov
jo
ds
push
mov
stos
sub
sub
and
adc
mov
sub
add
addr16
rol
push
loop
adc
dec
ret
push
mov
(bad)
and
and
test
mov
add
cmp
mov
(bad)
xchg
pop
push
ins
sub
adc
test
ins
xchg
cdq
(bad)
das
push
cmp
jmp
fdiv
dec
outs
inc
sbb
ret
je
xor
in
shl
dec
bswap
aaa
addr16
dec
outs
shrd
mov
sbb
dec
sar
in
repz
daa
pop
mov
retf
fstp
shl
pop
xor
in
xchg
in
in
pop
out
jmp
test
jnp
sbb
jmp
hlt
sar
test
sub
iret
add
push
arpl
pusha
mov
sub
(bad)
adc
xor
pop
xchg
xchg
jne
push
gs
(bad)
jecxz
xchg
int3
repz
xchg
mov
dec
sub
ds
loopne
push
test
loop
push
jno
loop
inc
dec
mov
mov
jbe
or
jne
lods
push
cld
add
mov
shl
xchg
js
or
scas
mov
movs
js
repz
dec
mov
jbe
daa
stos
cmp
mov
xchg
(bad)
inc
inc
fiadd
cmp
sbb
inc
or
test
repz
cdq
stos
add
xchg
jg
and
ds
xchg
inc
cld
enter
cmps
mov
call
and
xor
sahf
xchg
lahf
dec
jmp
jne
or
jle
and
sbb
mov
pop
and
out
jle
xor
xchg
mov
fwait
out
sbb
and
dec
sub
mov
sub
cmp
xor
adc
add
aas
add
xor
pop
cmp
jmp
cmovb
add
or
push
popa
scas
or
xchg
jmp
adc
push
adc
or
sub
push
je
jmp
jne
xchg
sub
call
out
sbb
data16
jb
sahf
and
pop
sub
scas
push
out
cmp
xchg
dec
in
xchg
es
jmp
add
jecxz
and
or
add
inc
mov
jae
popa
sti
movs
mov
hlt
das
add
rcl
std
rcl
cdq
adc
push
inc
loop
lods
dec
or
add
data16
loop
int3
sbb
dec
stos
in
lahf
fisub
jg
mov
xchg
fwait
ret
push
push
int
cmps
aaa
push
or
and
les
iret
call
adc
imul
dec
cmps
call
mov
fist
inc
test
adc
mov
stc
pmaxub
mov
pop
xchg
inc
sahf
cmp
scas
mov
push
imul
add
retf
fmul
or
cmps
movs
cmp
outs
or
sub
fimul
xor
and
rol
mov
repnz
cmps
xor
lods
and
cld
mov
mov
sbb
fisttp
mov
(bad)
loopne
je
test
jmp
and
and
adc
movs
pop
clc
mov
jmp
cwde
mov
repz
call
or
repz
sahf
or
in
add
ret
push
xor
and
mov
ins
jmp
dec
shl
cmp
(bad)
adc
lahf
rcl
fwait
or
lods
sbb
test
jle
hlt
cs
xchg
push
(bad)
or
xchg
mov
nop
(bad)
or
mov
bsf
xor
add
mov
xlat
jg
(bad)
adc
lahf
mov
arpl
test
dec
adc
mov
ret
push
sub
mov
(bad)
mov
inc
fst
sub
ss
xor
dec
ficom
sbb
aaa
repnz
imul
out
clc
out
mov
(bad)
out
push
mov
mov
dec
jb
push
mov
pop
sti
int
mov
stc
stos
out
addr16
daa
or
sti
pop
push
mov
stos
push
jno
rcl
imul
lods
dec
add
push
pushf
ficomp
xchg
jl
add
inc
ins
lahf
add
dec
push
inc
(bad)
inc
mov
inc
div
push
repnz
shl
push
fdiv
aas
xor
cmp
mov
mov
int
arpl
push
mov
ins
push
add
int
or
das
sub
in
mov
mov
cmp
clc
(bad)
xchg
xchg
pop
add
push
inc
jp
mov
push
sbb
adc
data16
mov
jb
ins
jne
and
dec
or
dec
add
or
push
and
fimul
das
and
(bad)
mov
and
cmp
iret
xor
or
test
clc
mov
add
mov
in
cmp
pop
mov
jnp
mov
leave
rcl
jle
dec
push
inc
out
sub
jne
dec
ds
sub
mov
addr16
mov
cs
arpl
cli
movs
and
outs
loope
pop
mov
add
out
mov
jmp
into
add
push
xchg
sar
jb
loop
dec
sbb
aad
add
imul
mov
pop
xchg
retf
mov
dec
inc
test
int
adc
jl
cmp
push
pop
outs
sub
nop
push
xlat
and
movs
cmp
add
xor
ror
mov
pop
cld
fmul
fs
mov
popf
pop
push
call
push
mov
add
stc
mov
xchg
das
imul
aas
(bad)
jmp
shl
addr16
jg
hlt
movs
int
xchg
mov
repz
inc
rol
push
pop
leave
mov
push
sub
in
test
cmps
xor
in
cli
fwait
out
je
mov
jo
sahf
lahf
loope
pop
push
mov
xchg
enter
inc
in
cmps
ins
inc
adc
dec
jl
mov
dec
sti
adc
js
dec
and
dec
inc
rol
out
aam
add
push
push
push
sbb
mov
out
mov
test
mov
sbb
jge
fisubr
mov
xlat
shr
pop
ret
cmps
mov
lds
in
imul
(bad)
movs
call
adc
jo
(bad)
neg
lds
inc
cmp
xchg
ret
cmp
aad
sbb
xor
sar
mov
jge
sub
shl
and
mov
and
pop
mov
mov
call
dec
jg
adc
ja
pop
fsubr
ds
iret
cmp
and
mov
cmp
sbb
out
repz
sub
jb
ds
sbb
pop
cld
inc
daa
std
es
int
inc
sar
mov
shr
push
cmc
add
lods
and
pop
add
xor
sar
xchg
xor
push
setno
pop
sub
aas
jge
test
xor
add
add
pop
xchg
inc
in
xchg
outs
mov
sub
mov
inc
enter
popf
shr
adc
hlt
mov
xchg
mov
sbb
jp
pop
(bad)
xchg
fidiv
cwde
data16
or
or
jbe
jnp
(bad)
aas
icebp
xchg
jo
dec
inc
call
out
popa
fs
and
adc
push
pminub
mov
(bad)
inc
arpl
push
jp
ror
sub
(bad)
shl
xchg
push
test
cld
dec
cmps
hlt
js
aas
xor
fistp
xor
add
retf
push
aas
dec
or
mov
dec
movs
dec
dec
ins
mov
fs
mov
cli
or
cmp
jne
iret
rol
xchg
int
fsub
cmps
xor
call
fdiv
mov
push
(bad)
xchg
imul
cwde
xlat
cmp
xchg
mov
sbb
(bad)
or
es
xor
inc
pop
or
in
dec
ret
jmp
rep
inc
fcmovnbe
pusha
mov
scas
(bad)
shl
mov
push
fwait
xchg
ja
xchg
not
ffree
(bad)
bnd
cmp
ret
in
mov
inc
xchg
push
sbb
mov
inc
or
out
jmpw
cmps
dec
dec
xchg
shl
mov
and
retf
xor
mov
push
pop
push
mov
shr
je
pop
stos
cmp
or
mov
or
or
mov
outs
fwait
arpl
cmp
(bad)
pop
sbb
lahf
dec
push
jno
xor
shl
loop
fcmovbe
or
arpl
push
outs
mov
repz
inc
mov
xchg
xor
add
xchg
or
mov
arpl
mov
mov
nop
mov
sub
jg
pop
sub
jl
pop
ret
jge
pop
sub
addr16
jnp
inc
int3
cmp
mov
pop
inc
xchg
popa
data16
pop
ss
shr
enter
imul
call
fisub
cmp
repnz
xchg
pushf
mov
scas
dec
outs
jp
lods
cmp
mov
out
out
mov
es
outs
repz
je
push
in
inc
mov
(bad)
push
std
inc
pop
call
push
(bad)
stc
jg
and
inc
outs
and
aad
retf
pushf
push
data16
jl
sub
inc
jmp
int
out
cmp
adc
retf
pop
mov
mov
mov
scas
cmp
fisubr
xor
mov
cwde
call
enter
mov
jb
ds
jne
fistp
nop
nop
inc
sbb
test
das
jae
xor
pushf
dec
cmps
ror
arpl
push
retf
add
mov
(bad)
outs
sbb
test
neg
les
clc
mov
add
icebp
pop
mov
jbe
jno
call
and
and
xchg
int
fisub
xor
jne
lods
(bad)
xor
loop
shl
fild
lea
mov
(bad)
js
addr16
mov
sti
sahf
mov
and
sub
loopne
leave
sti
enter
lds
aad
jl
cmp
jge
pushf
pop
push
xor
mov
mov
push
push
mov
cmp
push
iret
or
add
inc
mov
loop
mov
hlt
or
scas
test
push
cmp
push
fimul
(bad)
fptan
xlat
jmp
mov
pop
scas
outs
scas
repz
mul
mov
cmp
mov
pop
rcl
mov
push
outs
pop
fcmovnbe
mov
jge
mov
jg
stos
or
mov
xchg
fdiv
sbb
push
dec
xchg
inc
jmp
dec
push
fadd
enter
data16
test
cmc
(bad)
inc
bound
popf
push
cld
inc
jnp
mov
add
xchg
out
into
dec
dec
imul
cmp
ss
fadd
inc
stc
adc
dec
push
cmps
fiadd
imul
dec
js
stc
add
sbb
add
int
pop
mov
rcr
idiv
xchg
dec
mov
xchg
out
fisttp
shr
push
sub
sub
clc
pusha
xor
rcr
out
stc
xchg
push
sahf
pop
sbb
push
sbb
dec
int3
push
mov
xchg
ud2
shl
(bad)
jns
stos
jo
jg
std
stc
push
xor
cmp
out
ja
(bad)
push
jbe
push
and
cmps
add
sahf
and
cmc
or
jae
dec
test
out
pop
mov
movs
dec
dec
and
inc
jecxz
rcl
mov
xchg
in
or
dec
and
push
lahf
daa
dec
ret
lds
shr
stc
popa
out
pop
stos
pushf
and
imul
mov
xor
cld
in
sbb
mov
cmps
outs
jnp
dec
fcom
cmp
jle
or
pushf
ins
mov
dec
popf
mov
fbld
push
mov
cmp
pop
jl
ins
and
test
or
hlt
and
mov
aad
ja
in
sub
retf
xchg
jo
xlat
push
fldenv
mov
mov
mov
inc
xor
or
stc
lahf
iret
leave
and
arpl
jae
scas
iret
js
std
(bad)
jmp
loop
adc
mov
mov
dec
icebp
ret
lods
hlt
fisttp
push
inc
ja
in
mov
mov
push
cmp
ret
dec
ins
inc
mov
movs
push
mov
sbb
push
jl
dec
mov
sub
cmp
cmp
js
xor
out
jnp
jno
adc
out
adc
test
sbb
or
xor
jae
(bad)
int3
aad
xchg
cmp
add
add
adc
and
jns
xlat
sub
add
xlat
lahf
sub
xchg
ins
sti
scas
test
mov
xor
sbb
mov
or
add
popa
lock
and
daa
pop
jecxz
mov
adc
push
jle
je
ja
call
add
gs
cli
push
xchg
out
into
xlat
repz
in
movs
in
stos
ja
aam
test
fdiv
push
es
mov
(bad)
push
inc
js
jns
fild
aad
pop
stos
sbb
adc
jb
cs
pop
push
push
repnz
sub
sbb
sub
cmp
or
retf
cmp
xor
push
adc
or
iret
cdq
iret
les
xchg
push
adc
inc
xlat
mov
sahf
fwait
sbb
std
xchg
pop
cld
adc
(bad)
scas
mov
mov
fisub
dec
inc
inc
test
stc
jge
cmp
int3
mov
cmp
cwde
push
les
dec
push
push
cmps
inc
or
inc
jne
and
xchg
out
sub
adc
dec
sub
xchg
add
adc
add
icebp
inc
mov
xor
int3
add
call
out
in
test
push
inc
jnp
push
inc
shl
stos
aas
(bad)
stos
pop
daa
mov
clc
and
and
mov
scas
nop
sti
sbb
xor
retf
and
sub
hlt
mov
cwde
inc
push
pop
sub
ins
in
jge
mov
push
inc
mul
stos
outs
jg
add
xchg
sub
pop
mov
mov
dec
xor
dec
pop
fwait
aaa
rcr
push
sub
je
jbe
repz
sbb
cli
sub
jbe
test
sbb
cmp
ja
cmp
ret
xor
mov
scas
and
push
addr16
xchg
test
gs
stos
out
fs
inc
sub
ror
lahf
pop
aam
into
push
xchg
aam
mov
sub
out
les
xor
jmp
mov
push
div
retf
imul
mov
scas
jbe
call
mov
rcr
jno
lods
retf
add
sahf
cs
adc
inc
mov
jmp
mov
push
mov
pop
dec
out
int3
cmp
fld
pop
das
add
jecxz
mov
pop
jg
or
cmps
loope
sub
jo
out
dec
mov
dec
jb
sbb
loope
xlat
mov
cmp
adc
mov
into
dec
enter
retf
mov
dec
fbld
or
push
test
xlat
rol
mov
jae
f2xm1
mov
mov
pushf
pop
adc
mov
stc
arpl
(bad)
cwde
int
add
push
aam
dec
out
or
sub
fld
push
mov
fwait
jg
sbb
xchg
mov
add
push
push
jmp
test
mov
or
fdivr
call
test
mov
mov
cs
push
jle
(bad)
xchg
dec
sub
push
mov
repnz
xor
popf
sbb
xor
cmp
bound
aam
cmc
dec
cld
loop
pop
mov
cwde
das
shl
xchg
lods
push
lods
cmp
popa
bound
pop
std
jbe
mov
jecxz
dec
outs
shl
nop
lods
jge
push
icebp
sbb
mov
fcmovbe
mov
test
retf
mov
int
and
push
std
repz
js
sahf
push
inc
jle
mov
mov
adc
adc
mov
jnp
inc
jae
aas
inc
stos
sub
mov
ret
aad
dec
or
div
pop
pop
jmp
test
aaa
or
xlat
jbe
sub
call
lds
jae
mov
out
cmp
mov
mov
jl
cld
or
jge
sbb
push
scas
gs
inc
lahf
test
add
shl
test
fucomip
fbld
fisttp
aam
int3
mov
mov
enter
sbb
sbb
inc
xchg
mov
test
shl
mov
jne
pop
sub
jle
sub
stos
xchg
int
jb
aas
push
xor
popf
or
mov
fisttp
loop
xor
xlat
or
sub
inc
or
jle
mov
add
out
sub
call
jb
jmp
es
sub
aad
sbb
inc
inc
fs
jno
sub
cmc
mov
cwde
push
call
adc
push
lea
inc
lahf
xchg
jns
test
jmp
shr
push
dec
fwait
xchg
inc
push
ins
repz
out
jno
jns
inc
ins
add
mov
jnp
pop
sti
int
mov
mov
xor
add
add
add
sub
pusha
out
jne
jne
cmp
ins
lods
(bad)
mov
pop
int3
push
add
cmp
inc
push
loop
repz
mov
jno
clc
call
xchg
stc
aad
sub
aaa
push
dec
(bad)
or
lea
pop
adc
mov
jg
mov
sahf
movs
xor
mov
jmp
pop
enter
dec
dec
fisttp
aam
loope
pop
cmp
or
test
jge
dec
jae
mov
xchg
loope
jmp
es
or
stc
test
pop
sub
bound
idiv
adc
ret
fsubp
or
cmp
lahf
adc
xor
jno
std
lods
pop
add
mov
push
jp
aam
push
sbb
pop
cwde
and
movs
mov
xchg
retf
mov
loopne
jmp
cdq
push
dec
ror
xor
in
cmp
jb
add
test
mov
daa
pop
daa
iret
xor
fucomip
in
out
pop
out
inc
movs
mov
imul
adc
mov
cmp
push
shl
mov
aam
out
push
mov
pop
xchg
cmp
lods
cmp
mov
ins
jae
mov
mov
jecxz
mov
jecxz
xor
and
mov
sbb
pusha
shl
in
mov
jg
pop
in
pop
jnp
jbe
cmp
test
or
(bad)
popa
popa
loopne
xchg
repz
cmp
mov
dec
dec
jmp
push
inc
in
inc
xor
add
xchg
popf
push
xor
mov
xchg
js
cs
into
and
jmp
scas
or
ror
and
mov
cli
(bad)
or
mov
pushf
sub
pop
scas
inc
es
add
inc
jg
cmp
outs
(bad)
push
stos
inc
in
inc
ds
add
mov
xlat
repnz
mov
sub
sbb
imul
daa
outs
jmp
jo
out
dec
jb
or
clc
fmul
adc
xor
dec
adc
cld
mov
and
movs
rol
lds
jl
mov
xor
retf
sbb
fwait
and
ss
or
cld
inc
jae
jge
popf
dec
or
push
xor
popa
xchg
mov
in
jbe
nop
pop
mov
mov
cli
xor
dec
fs
mov
into
in
test
cmps
(bad)
int3
adc
retf
sub
and
xor
jg
cmp
sbb
int3
popa
fcmove
add
jns
xor
repz
pop
xor
xchg
pop
cmp
mov
sub
jae
push
test
les
call
pushf
lods
or
inc
sub
or
sub
shr
xchg
dec
pop
sbb
int3
mov
mov
outs
test
mov
mov
hlt
mov
push
enter
xor
cmp
fnstsw
div
inc
pop
push
jns
(bad)
aas
imul
aad
or
sbb
jmp
shl
jo
sub
inc
int
dec
cmp
jo
lods
mov
inc
xor
adc
stc
inc
mov
adc
mov
mov
push
add
dec
mov
(bad)
ds
mul
leave
mov
popf
aad
fidiv
and
fdiv
pusha
pusha
or
arpl
sbb
push
loop
iret
mov
hlt
ins
push
rol
ss
jmp
xlat
jno
scas
clc
into
ror
and
dec
cli
pop
sub
pushf
xor
int
pop
mov
iret
adc
cmp
cmp
imul
fsubr
test
pop
stc
call
dec
inc
dec
inc
std
bound
mov
inc
mov
fs
and
inc
out
jb
jmp
mov
xor
movs
cmc
(bad)
icebp
jne
cdq
inc
mov
xchg
lds
hlt
mov
pop
push
xchg
rcl
(bad)
mov
out
sbb
jl
xchg
in
and
bound
stos
adc
pop
sbb
push
imul
and
jns
push
or
je
dec
inc
bound
xor
sub
cmc
in
pop
add
repz
mov
dec
xor
or
sbb
rol
push
and
xchg
imul
push
ja
dec
xlat
inc
sti
aam
and
jecxz
push
xor
cmp
and
shl
fisubr
lock
repnz
sahf
inc
mov
(bad)
jmp
sbb
push
ss
inc
or
or
fist
mov
add
pop
ror
enter
push
and
fnstcw
call
bound
sub
(bad)
fisttp
rcl
cmp
cwde
std
pop
dec
add
sbb
(bad)
hlt
push
add
cli
jo
popa
rcl
push
inc
jmp
or
cmp
or
sar
in
jno
movs
cmp
js
jle
lock
and
adc
popf
push
icebp
jae
dec
adc
xchg
xor
jge
aam
lods
ret
dec
je
jne
clc
and
sub
cs
(bad)
js
cmp
retw
pushf
xchg
push
mov
sahf
les
mov
add
jp
das
cdq
sahf
pop
sar
loopne
imul
pop
jge
nop
outs
cmp
pop
loopne
rol
or
mov
jns
inc
add
and
xchg
xchg
fdivr
mov
adc
xor
adc
ins
and
pop
ja
stos
outs
popf
xor
call
ror
dec
add
in
or
dec
push
cli
stos
xchg
mov
mov
imul
repnz
inc
(bad)
or
push
(bad)
sbb
aas
aam
mov
scas
in
adc
daa
and
inc
lds
fcom
out
xchg
dec
sub
jg
rol
push
addr16
das
addr16
and
out
jl
mov
lods
mov
int
lahf
imul
push
(bad)
sti
ins
mov
shl
inc
mov
and
shr
jnp
push
(bad)
and
hlt
pop
sbb
leave
adc
sbb
cmps
scas
mov
adc
(bad)
pop
sbb
adc
push
adc
loope
cmps
cmp
sub
xor
lock
sub
or
adc
push
mov
shr
jae
fisttp
inc
push
in
mov
ror
adc
dec
call
fs
lahf
mov
stos
jg
sub
cwde
movs
push
fs
pop
xor
cld
sub
mov
jne
sub
(bad)
int3
lea
inc
inc
outs
cmp
cmc
cmc
loopne
mov
sbb
gs
imul
sub
(bad)
push
mov
mov
out
sbb
ins
aad
mov
and
xor
pop
cdq
ret
sub
fsubr
sub
lock
xor
hlt
xor
jae
movs
push
jno
pop
mov
pop
sbb
mov
stc
adc
mov
sbb
cmp
inc
jle
sbb
rcr
loopne
mov
sbb
clc
lahf
arpl
icebp
add
jae
mov
ins
cli
retf
dec
stos
je
out
nop
fadd
(bad)
rcl
pop
xchg
inc
dec
sub
dec
out
inc
fwait
or
sub
stos
dec
mov
cld
je
mov
ud0
repnz
ins
scas
xchg
aam
pop
sahf
or
add
xor
stc
dec
(bad)
pop
dec
sbb
mov
in
adc
push
mov
push
adc
xor
sub
push
nop
push
xchg
mov
push
ins
mov
jmp
pusha
add
adc
call
mov
adc
mov
icebp
add
sbb
call
das
jmp
es
aas
mov
mov
nop
test
jns
(bad)
fdivr
jle
out
jge
fdiv
or
mov
sub
sti
adc
dec
mov
mov
xor
sub
mov
inc
pop
cmps
fistp
and
mov
xor
cmps
aad
pop
(bad)
add
push
mov
xchg
ror
xlat
dec
mov
jmp
call
call
sub
mov
int
mov
push
popa
int3
fmul
(bad)
xchg
inc
stos
pop
lock
sbb
jmp
test
adc
jnp
fisttp
aas
int3
pop
ja
clc
arpl
cmp
jne
(bad)
mov
jle
leave
sub
stos
repnz
mov
pop
sahf
popf
mov
inc
shr
pop
pop
ins
loop
cmp
add
mov
jle
cmps
xchg
in
test
inc
and
mov
mov
cdq
fdivr
sbb
ins
xchg
and
push
sbb
sbb
xor
cmps
or
mov
sbb
xchg
imul
xchg
adc
fisub
cmp
cdq
in
pop
cld
xor
add
push
ins
mov
popa
in
ins
adc
mov
xor
int3
or
(bad)
mov
mov
or
xor
adc
mov
add
push
and
inc
and
mov
cdq
ds
loope
jp
movs
popa
inc
sub
in
fs
cli
sbb
dec
jmp
ret
cmp
xchg
adc
icebp
lods
sbb
pop
out
or
movs
xchg
and
mov
or
pop
xchg
aaa
stos
call
and
and
sbb
sbb
repz
dec
xchg
out
mul
test
aas
fcomp
push
dec
ds
sbb
jp
jg
mov
enter
mov
enter
cld
ins
add
add
movs
lock
stc
fcmovb
ficom
pop
push
jl
int3
nop
nop
add
or
adc
fdivr
push
fwait
inc
shl
add
lods
(bad)
mov
xchg
jmp
or
fistp
mov
adc
jp
out
and
pusha
ret
push
push
dec
stos
(bad)
movs
xchg
add
or
xchg
into
jb
mov
push
in
nop
in
(bad)
int
xchg
xor
dec
scas
(bad)
out
retf
jo
ret
xchg
retf
sbb
add
mov
mov
pop
pop
outs
mov
mov
dec
shr
dec
sub
lods
in
imul
int3
stos
mov
(bad)
aad
popf
push
xlat
and
in
jmp
dec
adc
inc
push
push
or
or
push
xlat
inc
pcmpgtw
ins
and
lods
pop
rcl
jecxz
sbb
cmp
loope
xchg
fild
mov
adc
nop
enter
movs
push
inc
add
mov
inc
or
sahf
iret
and
adc
rcr
pop
js
xchg
daa
dec
mov
push
stos
push
and
stos
or
mov
xchg
adc
jno
or
ret
ficomp
aaa
jb
shl
sar
push
nop
inc
into
cmps
push
inc
cld
outs
sub
into
mov
repz
in
sub
inc
jg
cmc
push
jno
js
cmp
sub
mov
stos
je
hlt
aas
fcomi
(bad)
outs
sbb
dec
aam
adc
sar
(bad)
aad
add
syscall
pop
push
vmovsd
pop
lea
mov
mov
adc
mov
loope
push
sbb
dec
push
ja
jmp
add
daa
adc
dec
push
sbb
call
(bad)
xchg
jae
clc
int
jne
mov
popa
(bad)
push
ss
fdiv
push
xchg
popf
pop
dec
movs
scas
or
sub
mov
clc
xor
inc
add
mov
xchg
retf
pop
cwde
les
add
imul
inc
leave
loopne
jmp
je
test
jae
xor
jp
in
pop
inc
inc
je
mov
aad
lahf
clc
and
outs
mov
xchg
or
pushf
rcr
rcl
cs
or
icebp
shl
enter
push
pop
cmp
mov
neg
or
movs
mov
mov
mov
jecxz
pop
pop
cmps
pop
mov
cmps
lea
scas
test
cdq
or
xor
xchg
jne
or
retf
cld
mov
lds
sub
ret
stc
push
jg
js
adc
adc
stos
les
mov
sub
push
nop
push
pop
cmp
add
or
stc
aad
jl
cmp
add
cwde
jns
mov
inc
retf
out
es
aas
mov
arpl
imul
cwde
sub
lods
pop
call
push
repnz
inc
xor
sar
inc
ret
gs
lods
es
dec
mov
xchg
mov
dec
cmp
mov
btr
aad
jl
ja
mov
fs
dec
xchg
into
mov
sbb
adc
adc
cwde
aas
lods
xchg
inc
push
test
sbb
inc
lahf
xor
mov
lds
icebp
das
ds
adc
nop
(bad)
bound
daa
ins
cs
xor
mov
dec
dec
mov
and
jp
mov
lods
pmuludq
mov
cmp
mov
dec
ins
ja
push
push
ret
jno
jle
lds
inc
add
call
push
mov
mov
pop
ret
cmp
popw
sbb
jo
ins
cmp
(bad)
in
retf
jg
push
xor
cmc
xchg
fild
inc
inc
push
enter
fsub
pop
cmps
ror
push
xchg
cmps
and
clc
cs
push
clc
adc
cs
xchg
dec
ja
mov
mov
add
add
inc
adc
add
dec
ins
(bad)
push
or
(bad)
or
push
inc
jmp
jecxz
mov
xor
adc
mov
push
pop
jnp
arpl
dec
inc
(bad)
in
pop
dec
sahf
cmp
dec
xor
jns
mov
cdq
mov
mov
or
ja
neg
ins
nop
xchg
inc
nop
aaa
mov
dec
push
inc
lock
pop
inc
cmp
call
fs
lds
mov
add
iret
jns
loop
inc
adc
(bad)
std
ret
arpl
cwde
inc
jp
int
outs
cwde
arpl
inc
repz
sbb
fs
fstp
ins
stos
pop
and
add
jge
icebp
gs
lods
xor
pop
sub
dec
out
dec
xchg
xor
mov
test
sbb
jbe
cli
push
retf
out
adc
adc
adc
mov
sbb
repnz
xchg
lods
cwde
adc
sbb
cdq
pushf
call
out
xchg
test
mov
icebp
aam
test
mov
(bad)
fisttp
addr16
sbb
dec
mov
into
sbb
(bad)
loope
out
sbb
nop
mov
int3
mov
jle
data16
(bad)
push
or
pop
sbb
fdivr
sbb
push
cmp
inc
fwait
(bad)
jge
mov
iret
int3
cmp
sub
out
xor
outs
cmp
push
or
ds
icebp
rol
inc
push
add
dec
jle
jnp
add
cmp
shl
sbb
mov
xor
sub
pop
(bad)
xor
lods
out
pushf
mov
pop
adc
mov
cmp
rcr
cs
test
clc
imul
and
jb
jl
mov
push
mov
lods
outs
cmp
dec
pop
test
inc
out
cmp
aam
add
shl
ror
xor
(bad)
mov
ss
in
mov
mov
add
dec
inc
cld
sub
jnp
and
pop
cmp
pop
and
push
inc
pop
es
xor
and
das
mov
cld
push
dec
fild
ins
push
and
aaa
(bad)
sbb
push
scas
dec
xor
outs
jmp
add
ins
movs
inc
push
test
cmps
test
sbb
jnp
mov
out
pop
stc
cs
add
jl
fcom
mov
popa
cwde
test
inc
and
push
idiv
aad
push
stos
cli
sahf
jp
add
cmps
ins
pop
out
stc
shl
sbb
or
cdq
inc
into
jns
in
scas
es
sbb
inc
jb
xchg
outs
add
jb
mov
not
push
pop
or
add
inc
sbb
mov
hlt
or
mov
push
pop
fld
xor
push
hlt
sbb
outs
inc
sar
stos
add
out
dec
lods
je
pop
aas
pop
mov
neg
xor
jmp
sub
test
int
adc
leave
xor
out
adc
out
cmc
mov
ins
and
es
mov
mov
(bad)
(bad)
mov
push
jmp
mov
in
or
inc
cmp
or
mul
leave
dec
add
mov
mov
movzx
cmp
out
popa
jl
cli
shl
pushf
push
or
cmp
cmps
shl
std
int3
dec
xor
mov
in
popf
imul
test
xlat
das
add
xor
fisttp
sti
jnp
push
mov
add
dec
stos
xor
mov
mov
push
cmps
leave
adc
or
dec
cmc
or
std
pop
rcr
inc
lods
retf
das
fstp
mov
hlt
lods
sub
jnp
ins
imul
or
sbb
ins
repz
sub
mov
xor
jp
push
out
and
adc
ss
fidiv
and
mov
jp
outs
mov
out
pop
cld
jmp
push
das
jae
js
and
add
sbb
ffreep
cs
jnp
hlt
push
mov
retf
call
pop
sti
mov
es
xor
cwde
pop
addr16
push
cli
sub
mov
push
mov
es
mov
out
cmp
sbb
mov
pop
nop
jp
dec
test
test
push
xor
push
(bad)
mov
nop
jge
and
sbb
retf
mov
les
mov
pop
or
loop
test
push
fs
out
xchg
daa
sub
imul
cmp
push
inc
sti
stc
mov
shr
pop
xchg
push
out
adc
icebp
das
jp
popa
popf
mov
cmps
mov
in
pop
or
in
and
inc
div
test
test
fsubrp
xor
dec
imul
jl
sub
push
fdivr
push
cmp
and
gs
adc
mov
jg
jne
fisttp
add
outs
lods
and
mov
bound
test
ds
scas
jno
cmp
mov
sbb
call
arpl
or
in
les
xchg
int
jno
sti
xlat
cmp
popf
lock
or
ret
and
bound
cmc
mov
add
ret
repz
push
leave
std
clc
add
stc
mov
repz
sti
idiv
pop
cmps
or
sub
mov
out
repnz
inc
les
xchg
jo
xor
test
push
inc
sub
data16
adc
movs
in
xlat
inc
mov
jne
push
shl
cwde
jl
pop
push
mov
adc
jmp
ds
fs
jg
aam
inc
inc
stos
cmp
xor
je
mov
imul
add
stos
adc
scas
call
and
mul
out
pop
out
retf
outs
cmp
vmovdqu
or
ins
xchg
mov
imul
sbb
push
xchg
adc
sub
lea
(bad)
hlt
xchg
xchg
div
jecxz
mov
add
cmp
mov
icebp
xchg
ret
cli
shl
mov
(bad)
lods
or
rcr
pop
adc
dec
lahf
mov
sbb
ret
xor
jno
sub
jo
je
into
movs
sub
adc
jae
pop
sub
jecxz
push
lea
movs
ret
(bad)
lea
shr
xchg
out
scas
cwde
inc
and
push
dec
std
inc
xor
jecxz
out
sbb
stc
adc
jmp
int
dec
dec
movs
dec
in
int3
retf
jmp
fidiv
ret
push
sub
(bad)
pop
aas
and
idiv
pop
push
inc
ror
movs
(bad)
cmp
mov
push
lods
das
and
mov
retf
vpinsrw
and
jnp
xchg
jmp
jle
xchg
and
movs
cmp
or
int
sbb
push
push
(bad)
cld
inc
inc
mov
ret
sti
xchg
scas
adc
cli
ror
icebp
pop
or
cli
clc
cdq
int
pop
fs
cmp
std
test
jnp
ret
xchg
loopne
out
in
je
adc
jl
addr16
ins
sbb
(bad)
aas
in
mov
mov
mov
dec
pushf
call
repnz
dec
mov
push
loopne
clc
mov
jle
adc
xor
cmp
pop
dec
loope
addr16
iret
das
cmp
adc
icebp
pop
leave
jge
int3
mov
mov
mov
out
ret
push
gs
fdivr
fist
packuswb
mov
mov
jg
adc
lock
js
jg
pop
sub
sbb
leave
arpl
dec
cwde
inc
mov
xor
jmp
push
aam
es
clc
stos
shl
scas
es
or
sub
push
into
(bad)
sub
clc
es
loopne
add
mov
jl
mov
adc
lds
iret
out
clts
push
sbb
popf
iret
jge
mov
test
mov
inc
sub
(bad)
icebp
adc
add
or
jecxz
xchg
dec
int
dec
js
sub
std
jae
mov
xchg
inc
cdq
leave
pop
xchg
sti
xchg
pushf
aam
jb
or
jbe
xchg
stos
aaa
leave
sahf
test
jo
scas
sub
inc
popf
xchg
cmp
jae
ja
ins
mov
sub
xchg
push
mov
cmc
adc
xor
xchg
jne
hlt
pop
add
lock
inc
push
loope
push
mov
xor
cwde
pop
push
lfs
loope
jne
and
lods
clc
pop
push
push
mov
inc
shl
pop
repz
ret
mov
stos
or
mov
pop
pushf
div
jno
scas
cs
jno
mov
or
sbb
imul
adc
pop
jle
cdq
bound
in
(bad)
loopne
pop
iret
icebp
jl
js
cmps
sub
gs
xor
dec
sbb
mov
lods
pop
push
cdq
and
outs
push
fs
in
xor
into
push
cmps
repz
lds
inc
call
xchg
int
mov
cdq
push
dec
cmp
pushf
leave
sbb
pop
jg
push
xor
cld
and
loop
or
jmp
fsubr
jns
ret
mov
out
or
or
cmps
loopne
inc
mov
les
add
add
inc
dec
(bad)
in
jnp
jg
retf
add
imul
push
cmp
mov
into
jbe
xchg
push
mov
test
push
(bad)
cmps
dec
adc
or
cmps
push
out
sub
push
xchg
mov
popf
add
ror
jecxz
dec
jp
das
imul
xchg
sub
mov
sub
xor
clc
mov
pop
push
xchg
cli
jmp
cld
push
pop
xchg
jb
jae
les
sbb
or
aad
cli
movs
sub
mov
sbb
push
sbb
into
cmp
lahf
xchg
sbb
adc
int3
fild
mov
adc
fadd
pushf
push
int3
mov
cmc
mov
xchg
sub
cdq
sub
dec
push
aam
mov
adc
dec
test
aad
loopne
push
leave
fimul
fst
leave
shl
dec
(bad)
loop
int
ror
dec
cdq
inc
rcr
mov
stos
mov
ror
jecxz
mov
ins
mov
push
push
ins
(bad)
movs
mov
adc
sar
mov
nop
fwait
clc
xor
xlat
shl
cli
and
mov
je
push
retf
xor
dec
scas
aas
push
or
dec
movs
test
and
adc
mov
fdivr
std
mov
push
adc
loopne
mov
sbb
pop
and
cmc
aad
in
movs
mov
out
into
adc
xor
pop
pop
bswap
or
mov
cmp
sub
nop
out
jmp
jnp
fisubr
adc
mov
dec
or
mov
push
outs
ds
adc
push
fistp
test
clc
fcomp
daa
xchg
and
pop
sahf
inc
test
mov
add
int3
outs
add
shl
scas
jne
pusha
pop
dec
jbe
mov
sbb
cmc
ret
xor
mov
iret
mov
sar
cli
push
and
mov
in
cwde
loop
ins
mov
inc
xchg
in
shl
(bad)
in
sub
pop
sub
out
inc
aas
xchg
punpckhbw
mov
hlt
pop
and
fist
jnp
add
mov
movlhps
xchg
dec
popa
aad
cmp
jns
arpl
test
rcr
out
(bad)
sbb
cmps
dec
jns
fwait
xchg
and
jne
sub
xor
sbb
xchg
rol
aaa
in
mov
mov
jbe
not
popa
mov
pop
test
sbb
mov
sbb
and
popa
inc
mov
clc
jmp
std
jno
clc
fcmovnb
push
in
test
adc
or
pop
mov
(bad)
and
pop
imul
(bad)
xchg
out
jno
push
mov
std
aam
dec
mov
sahf
out
mov
(bad)
mov
push
call
inc
loopne
pop
je
inc
mov
outs
das
jbe
fcmovnbe
retf
jg
xor
pushf
inc
mov
cmp
sbb
gs
test
and
retf
pop
and
or
lahf
xchg
add
jbe
and
in
mov
jnp
xchg
xor
mov
in
iret
dec
lock
arpl
xor
aam
inc
xchg
jg
aad
fbld
data16
rcl
lds
mov
std
lahf
addr16
ins
push
test
inc
fs
xchg
rcl
mov
inc
into
shl
iret
xchg
sub
mul
pop
cmp
push
loope
call
mov
call
into
inc
retf
jo
mov
fdivrp
inc
adc
out
retf
inc
and
mov
jmp
(bad)
pushf
stc
shl
push
mov
(bad)
test
test
or
daa
lods
xchg
aas
jb
and
sahf
sbb
sub
sub
inc
out
mov
or
xchg
sbb
popa
jbe
xchg
or
fs
and
fisubr
or
lock
xchg
(bad)
and
mov
repnz
inc
add
js
mov
inc
into
fsubr
cmp
scas
aad
cmps
push
loopne
lds
shr
ror
jg
dec
test
or
xchg
pop
push
movs
pop
cwde
popf
(bad)
stos
inc
and
mov
cmp
add
data16
and
push
and
and
jb
mov
add
push
shl
je
push
cmc
pop
ret
loopne
pop
aas
and
js
pop
cmp
iret
movs
ja
gs
xor
nop
pop
sbb
hlt
sbb
sbb
(bad)
out
das
add
jbe
xchg
cmp
(bad)
stc
(bad)
femms
(bad)
sti
outs
xor
(bad)
out
push
fbstp
xor
mov
repz
cmp
sti
ret
not
test
movs
popf
out
xchg
push
repnz
push
adc
jnp
arpl
mov
inc
(bad)
jg
retf
or
or
mov
dec
inc
cmp
rcr
test
adc
adc
aas
in
call
mov
jp
add
dec
lea
inc
loope
pop
in
mov
retf
pop
iret
ins
or
(bad)
sahf
push
cmp
mov
out
push
jp
xchg
jmp
jo
loop
in
jo
ins
ins
fbstp
sbb
pop
sub
xchg
cmp
test
jnp
ret
pop
sub
pop
inc
push
leave
xor
in
cld
ds
mov
add
fdiv
in
cmp
mov
pop
add
push
jnp
cmps
ror
xor
mov
fcom
btc
(bad)
cmp
retf
fsub
not
cwde
xor
in
ss
add
cmp
neg
and
add
shr
ins
inc
push
or
pop
scas
and
and
cmps
mov
hlt
or
ds
pop
jle
fist
and
(bad)
sti
not
pop
adc
dec
sbb
jle
sbb
outs
nop
sbb
aas
jb
mov
push
sbb
movs
scas
shl
sbb
adc
icebp
fldenv
aas
sbb
(bad)
pop
movhlps
inc
pop
mov
push
mov
xchg
or
dec
pop
enter
add
out
cmps
push
jmp
and
je
fmul
cld
adc
sub
ins
adc
jae
in
nop
jno
ret
mov
jbe
in
call
test
js
dec
out
sub
push
repz
out
cdq
jmp
push
sahf
data16
clc
(bad)
aad
iret
jnp
mov
mov
adc
cmp
and
cmp
cmc
jl
sbb
popa
pop
cs
sub
add
jno
sub
mov
inc
sub
mov
xor
aaa
push
push
lock
int3
stc
mov
jae
mov
xchg
shr
pop
fstp
outs
xlat
mov
je
jbe
test
ffree
sbb
addr16
outs
movs
not
inc
push
pop
lods
dec
jle
cmps
arpl
loop
pop
xchg
imul
std
gs
lock
sbb
push
pushf
repnz
dec
mov
mov
je
pop
mov
adc
or
push
int
xchg
mov
je
dec
div
outs
test
jl
cmc
into
stos
jge
js
lea
mov
cmp
push
popa
mov
sub
nop
add
(bad)
leave
mov
rcr
mov
shl
mov
jecxz
arpl
sahf
shl
out
fsub
xchg
ja
pop
adc
or
xor
sub
jne
mov
mov
jnp
adc
cwde
pop
cmp
jmp
sub
xor
fadd
sbb
mov
jbe
cmc
(bad)
push
out
pushf
add
ins
pop
fxtract
div
arpl
xchg
jp
sti
call
jp
or
bound
add
xor
in
sahf
mov
jns
mov
out
jp
or
dec
int3
jae
into
aad
in
push
(bad)
retf
and
mov
mov
mov
mov
nop
jmp
sahf
in
cmp
pop
imul
mov
fnstsw
adc
hlt
dec
xor
jb
pop
pop
push
rol
inc
daa
shl
xchg
js
iret
arpl
mov
lods
sti
jmp
add
ins
add
jb
mov
movs
loop
jne
mov
sub
(bad)
out
(bad)
daa
(bad)
and
xchg
pop
loope
mov
mov
ror
pop
into
adc
adc
dec
and
stos
jnp
mov
mov
js
inc
jb
pusha
or
pop
pop
aas
inc
cmp
rol
cs
xchg
dec
xchg
sub
cmp
dec
jge
fnsave
pop
mov
inc
pop
movs
push
jb
or
loop
and
rcl
mov
sub
jge
mov
movs
popf
or
push
push
in
sub
mov
push
outs
dec
es
popf
push
pop
sub
adc
pop
sahf
inc
and
pop
aaa
sbb
ins
out
retf
dec
push
and
fisubr
or
adc
test
pop
test
inc
ret
aam
popf
pop
idiv
movs
sub
cmp
imul
outs
int3
sti
dec
mov
pop
shr
pop
mov
gs
aaa
mov
cwde
and
inc
mov
sbb
ss
inc
and
mov
enter
add
not
lods
jnp
dec
lods
or
jne
cmp
ret
vpsrlq
adc
mov
lock
ja
sahf
xchg
push
and
rep
mov
(bad)
fldcw
imul
cmc
es
dec
inc
jmp
add
xor
inc
mov
cmp
sbb
jo
shl
push
and
push
into
or
hlt
pop
(bad)
jmp
shl
clc
sbb
test
pop
sbb
retf
xor
arpl
lods
(bad)
cld
sub
aad
jmp
icebp
xchg
pop
sub
fiadd
sub
mov
or
push
xor
ds
cld
jmp
ss
shl
imul
fwait
(bad)
aas
popf
xor
jg
or
jae
loopne
int3
cmp
and
popa
inc
test
xlat
add
rcr
cs
push
cmp
setp
outs
push
shr
lahf
call
(bad)
sub
jns
test
ror
loopne
push
mov
mov
in
shl
repnz
bound
fs
jmp
retf
or
xor
mov
add
in
sbb
das
rcr
pop
cmp
stos
xchg
je
fadd
push
ins
fimul
or
mov
sub
lods
sub
cmp
es
sahf
ins
adc
aas
lods
ja
jmp
frstor
sub
inc
in
pop
and
mov
outs
jp
into
sahf
xor
push
jge
imul
sar
fwait
adc
leave
jmp
jg
add
in
sub
or
cmp
xor
or
adc
(bad)
ins
dec
inc
fidiv
lods
loop
dec
out
and
stos
dec
test
scas
sbb
cmc
cmp
xchg
mov
lds
or
aam
dec
aas
inc
pop
shl
cmp
(bad)
xchg
adc
xchg
sbb
ror
jg
mov
xchg
mov
(bad)
jecxz
cmp
sbb
xchg
movs
stos
and
repz
bound
sbb
xor
pop
ds
mov
or
popf
fadd
stc
sub
fcmovbe
xor
xchg
es
call
push
bound
sub
(bad)
(bad)
push
enter
js
ja
repz
add
cs
inc
(bad)
loope
sbb
mov
enter
mov
popf
test
adc
call
ins
stos
push
scas
repnz
mov
push
xchg
pop
dec
sub
jmp
xchg
add
pop
pop
dec
test
in
push
jge
jmp
data16
jns
inc
sbb
push
lock
mov
pop
aam
nop
push
jnp
iret
cmp
sti
imul
popa
cld
push
imul
imul
ins
data16
daa
lods
out
xchg
mov
dec
mov
sbb
dec
and
xlat
dec
(bad)
xchg
or
inc
repz
in
pop
(bad)
mov
sbb
cld
cmp
ins
and
and
test
in
inc
or
add
pop
idiv
mov
and
das
out
push
cmp
out
aam
scas
repz
jns
cli
push
das
loope
dec
dec
xor
js
btc
push
push
fldenv
and
int
xor
stc
xor
jp
and
aad
jne
xchg
sub
int3
fdivp
js
pop
lds
jbe
sar
sub
nop
pop
jg
sbb
into
in
or
pop
xlat
out
cdq
aas
xor
pop
sbb
mov
jle
push
icebp
mov
and
ret
stc
scas
addr16
jne
adc
rcl
xchg
sahf
hlt
jmp
mov
and
cld
outs
data16
jecxz
xchg
sbb
(bad)
ja
mov
nop
jo
xchg
xor
cmps
popf
das
pop
fadd
cs
sti
sbb
outs
retf
sub
push
add
cmp
xor
cld
les
cmp
inc
add
add
xor
mov
ss
jecxz
popf
js
lods
xor
push
addr16
push
push
sbb
inc
sbb
aam
cdq
stos
and
sub
push
sbb
icebp
ins
mov
aas
nop
push
sar
icebp
add
dec
sub
outs
daa
retf
pop
aas
or
push
dec
xor
retf
and
sbb
rol
les
fst
cmp
cmp
out
cmp
mov
mov
shl
cmps
jo
call
mov
out
js
sub
add
jmp
mov
push
mov
gs
ss
fcomip
xor
fstp
and
or
stos
sub
sahf
sbb
sub
inc
(bad)
push
pop
mov
jno
add
daa
stc
pop
cmps
ret
jno
(bad)
fcom
sahf
mov
sbb
push
loopne
test
pop
out
sbb
pop
je
push
sub
ins
pop
mov
inc
jg
xor
pushf
sbb
cs
icebp
sbb
fstp
lea
jmp
mov
push
stc
and
push
mov
popf
mov
movs
or
dec
gs
sub
sbb
push
retf
mov
es
movs
inc
or
jmp
mov
pop
jle
add
jp
imul
xor
inc
and
sub
jbe
fs
in
mov
xchg
mov
in
dec
push
push
jp
add
mov
and
mov
jns
stc
dec
add
mov
in
xchg
dec
sbb
or
movs
test
jmp
jle
ins
mov
test
mov
sbb
(bad)
jle
jge
cmps
cmp
sub
jmp
pcmpeqw
pop
mov
loopne
add
test
xor
or
fisttp
sub
cmp
arpl
test
mov
add
pop
js
jnp
inc
or
cmp
or
dec
mov
dec
mov
shl
out
ds
mov
mov
xchg
outs
sti
clc
adc
ret
cli
rol
cli
jnp
mov
mov
jae
test
mov
inc
xor
mov
test
(bad)
into
xchg
hlt
mov
or
pop
jne
inc
mov
and
xchg
shr
jno
bound
inc
pop
mov
xchg
fbld
xor
jnp
cwde
sub
test
mov
repnz
pop
jno
ja
mov
cmp
mov
push
adc
clc
popa
fs
addr16
imul
int
push
stos
and
jge
sbb
(bad)
loop
jne
mov
mov
imul
xor
dec
cmps
and
lods
xchg
or
push
xchg
in
push
js
mov
jno
jae
repnz
pop
test
jnp
adc
pop
or
pop
xlat
fistp
xchg
repz
fwait
adc
(bad)
loope
dec
pusha
(bad)
repz
jo
shl
imul
loopne
mov
(bad)
xchg
jge
xchg
fsubr
iret
out
dec
push
cmc
xchg
cmp
nop
xchg
rol
aad
scas
xchg
je
xor
sbb
sbb
test
movs
pop
push
xchg
dec
aas
jnp
dec
jg
shl
jo
hlt
fs
mov
icebp
lahf
sbb
cmps
cmps
pushf
cmp
dec
data16
sbb
mov
ins
outs
add
les
sbb
cmp
mov
adc
ins
mov
test
push
mov
inc
cdq
push
jnp
enter
mov
inc
stos
test
stos
mov
dec
push
mov
mov
xor
xor
mov
fsubrp
or
push
sbb
cdq
push
inc
cmp
adc
sti
pusha
into
test
rcr
adc
imul
and
fld
xor
inc
inc
push
or
sbb
inc
mov
sub
iret
inc
shr
jle
xor
nop
ins
std
pop
cmps
pop
retf
dec
or
in
add
jb
ret
loop
mov
sub
in
inc
add
out
(bad)
adc
aaa
mov
pop
cmp
sar
push
inc
std
aas
dec
add
or
sbb
stc
mov
arpl
test
repnz
loope
xrelease
idiv
inc
add
push
push
pop
adc
dec
dec
outs
aas
or
les
dec
xor
mov
stos
push
aas
popf
push
mov
mov
mov
je
push
mov
movs
xchg
ss
popf
jmp
in
sbb
loope
dec
mov
and
scas
arpl
test
shr
out
add
adc
imul
(bad)
xor
scas
leave
mov
jnp
xor
aaa
das
add
outs
lods
mov
sub
sub
cli
call
cmc
adc
stos
pusha
xor
ja
shl
ret
hlt
or
call
cli
mov
aas
movs
jp
add
jecxz
push
mov
mov
push
es
jle
out
neg
mov
loope
mov
adc
in
and
add
imul
clc
outs
into
ficom
dec
xchg
arpl
pop
popf
imul
dec
and
or
xchg
inc
push
outs
sbb
sub
frstor
push
push
jge
dec
adc
dec
sbb
movs
xchg
adc
movs
xchg
(bad)
and
jge
mov
dec
mov
cwde
aam
add
sar
or
popa
push
imul
and
cmp
setle
sub
xchg
cwde
inc
cmp
cmc
cmp
jecxz
adc
inc
mov
xor
out
outs
add
adc
add
int3
pop
ins
xchg
retf
div
sbb
ins
data16
mov
xchg
ror
(bad)
aam
inc
loop
iret
not
(bad)
js
or
jo
pop
mov
test
sub
arpl
or
retf
mov
iret
jp
jb
mov
sbb
push
jg
mov
xchg
pmulhuw
xchg
xchg
and
push
pop
pop
cmps
retf
push
into
jge
pop
dec
fs
fcom
cld
dec
jmp
pop
add
sbb
cmp
push
inc
mov
cwde
jnp
jl
sbb
pop
sahf
adc
push
les
rol
retf
movs
je
das
pop
dec
jle
imul
mov
cmps
sbb
jbe
xor
jle
inc
scas
jno
inc
cli
stc
shl
fld
aas
sar
test
or
and
mov
xchg
ja
movs
jmp
mov
mov
inc
int3
mov
lods
ins
test
aam
and
into
call
js
adc
and
adc
arpl
xchg
call
xchg
xor
mov
lock
loopne
mov
mov
xchg
xlat
mov
dec
sti
bound
adc
sti
jecxz
mov
or
pop
jp
fsubr
add
mov
or
repz
xchg
adc
ins
jbe
in
xchg
sub
fcomi
xor
stos
(bad)
xor
mov
push
mov
push
pop
jo
pop
aad
cmc
and
push
mov
and
inc
jge
sub
jp
dec
xor
xor
adc
fnsave
adc
jb
add
dec
dec
jns
ret
sub
lods
pop
movs
adc
stos
call
sahf
gs
jmp
mov
call
sub
mov
pop
clc
ret
or
ror
out
test
or
add
call
add
sbb
jl
sub
inc
rcl
jl
and
xor
imul
add
adc
leave
je
sbb
sbb
xor
inc
into
stc
jle
dec
add
aas
push
push
(bad)
xor
ins
lea
dec
adc
call
pop
cmp
pop
cmps
mov
ss
pop
pop
stc
(bad)
xor
les
test
ins
jbe
adc
mov
sub
or
das
in
mov
fnstcw
in
out
dec
ror
popf
rcl
mov
xor
shl
cmps
push
stc
and
xchg
into
retf
nop
add
mov
cwde
push
ja
and
cmp
jae
jl
mov
das
stos
and
stos
mov
cmp
out
je
dec
cmp
mov
aam
arpl
jecxz
retf
mov
icebp
sbb
mov
aad
pusha
inc
sbb
popa
adc
sar
repz
int
pushf
or
mov
adc
cmp
addr16
movs
adc
inc
jne
movs
cwde
popf
jle
lock
add
arpl
int3
shr
mov
cmp
fwait
push
lods
fwait
(bad)
mov
pusha
lahf
test
mov
ficomp
dec
sar
jle
and
inc
pushf
je
sbb
rcl
in
xchg
push
popa
cmp
add
test
mov
jl
mov
lea
movs
or
sbb
and
xor
and
and
jecxz
stc
add
shl
test
dec
jae
fist
xchg
repz
add
shr
jmp
sar
inc
les
sbb
inc
ret
mov
jae
repnz
cmp
shl
sub
mov
fadd
cmp
sub
mov
cli
xchg
dec
pop
mov
rol
lods
in
dec
mov
ret
and
jg
push
int
fst
mov
les
or
aad
call
leave
retf
ss
sbb
jmp
or
dec
shl
adc
push
retf
cmps
out
cmp
out
popa
dec
sub
pop
out
jp
cli
push
cli
add
repnz
cmp
js
xor
ret
jae
or
aaa
xlat
push
test
jmp
(bad)
pop
add
imul
jle
in
out
and
cmps
or
imul
into
adc
js
lods
popf
inc
clc
push
adc
pop
fs
lea
cwde
into
jae
das
push
stos
sub
push
mov
push
out
mov
mov
push
fpatan
xor
cmp
(bad)
pop
pop
push
sbb
add
std
lahf
stos
jecxz
pushf
aas
loopne
mov
xchg
sahf
mov
stos
hlt
scas
stc
or
sbb
inc
test
movs
xor
stos
cmp
mov
pop
xchg
pop
aaa
lahf
pop
xor
mov
std
push
repz
loop
in
lods
mov
ss
sti
push
sbb
or
(bad)
pop
rcr
or
mov
dec
daa
jb
lds
jecxz
push
cmp
pop
pop
retfw
or
iret
adc
cmp
jge
xor
mov
sahf
int3
nop
fstp
(bad)
fs
lock
mov
sub
mov
repnz
add
lock
inc
adc
dec
scas
cwde
push
xchg
mov
fwait
sahf
iret
sar
jge
xor
cmps
test
call
mov
ss
and
mov
mov
retf
ins
addr16
or
xor
pop
xchg
mov
push
je
shr
xor
sbb
push
adc
sub
call
fdiv
nop
call
jp
cmc
add
das
jl
test
xchg
retf
or
out
inc
test
push
rcl
push
cmp
movs
pop
xor
and
mov
add
sub
sub
aas
xlat
push
(bad)
xchg
shr
icebp
dec
mov
or
inc
inc
enter
pop
(bad)
out
jecxz
xchg
xchg
jmp
mov
xchg
xchg
loop
sub
push
outs
adc
loop
je
xchg
call
rol
inc
ficomp
or
jbe
mov
mov
in
call
pop
jb
or
push
xchg
push
mov
mov
dec
mov
lods
dec
int3
cld
mov
movs
or
push
push
call
inc
cmp
lds
iret
addr16
mov
dec
pop
push
dec
mov
call
loope
inc
xor
popf
into
sbb
xchg
not
cmc
out
push
sub
pop
cld
dec
in
pop
dec
mov
and
enter
inc
neg
ret
ror
mov
xor
xlat
aad
shr
popf
(bad)
push
jns
lock
push
sub
jmp
jl
cwde
fdiv
mov
lock
or
(bad)
jae
sub
mov
inc
(bad)
fdivr
push
cmps
sub
mov
sub
cmps
aaa
das
inc
fdiv
push
repnz
xor
or
imul
pusha
mov
gs
imul
mov
jg
xor
out
xor
adc
lock
sbb
fistp
paddsb
imul
mov
cmp
dec
fsubr
mov
push
xor
aaa
das
mov
pop
mov
dec
es
adc
mov
inc
mov
in
fild
int3
das
sbb
bound
data16
int3
jg
dec
adc
lods
scas
(bad)
add
sub
test
sub
push
mov
lods
jmp
mov
fcomp
in
jnp
add
mov
and
sar
mov
ret
and
icebp
stos
mov
fdiv
push
outs
xor
jb
lods
aaa
stos
lods
and
ja
fwait
dec
fdivr
test
jmp
pop
ficomp
adc
mov
aam
fnsave
sbb
pop
push
dec
rcl
nop
xchg
adc
out
stos
mov
pop
mov
and
dec
sub
sub
cs
repnz
push
stc
or
jno
push
xor
cwde
test
push
pushf
rol
push
xchg
inc
inc
js
sti
fmul
and
cld
push
leave
push
out
mov
or
adc
pop
jns
dec
jne
clc
jae
(bad)
aad
lds
xchg
outs
pop
lahf
in
jge
inc
fcmovnbe
(bad)
push
inc
test
(bad)
fidivr
test
jns
push
jne
dec
(bad)
jno
neg
cmps
cs
jle
and
push
and
bound
lea
cwde
ss
jmp
retf
inc
add
out
jne
popa
sub
inc
push
mov
adc
mov
(bad)
nop
(bad)
jmp
aas
fdivr
call
cmp
js
add
stos
inc
dec
cmp
xor
movs
mov
push
jb
jo
push
push
jmp
sbb
hlt
xor
and
pop
pop
push
lods
dec
push
out
and
xor
outs
sub
and
mov
into
xlat
and
sub
(bad)
sbb
sahf
jbe
lea
dec
ins
mov
or
or
mov
mov
stos
wbinvd
sub
clc
adc
arpl
ror
movntq
movs
or
dec
scas
loope
loope
retf
mov
add
loop
add
sahf
jge
mov
or
and
ins
xchg
or
xchg
cmp
call
ret
pop
leave
rol
sti
push
push
or
pop
in
push
stc
sahf
gs
ins
mov
hlt
mov
ss
pop
xchg
outs
ret
pop
cwde
mov
ins
(bad)
(bad)
jmp
popf
retf
ins
hlt
jp
push
add
push
mov
cmp
mov
std
ret
div
xor
test
(bad)
dec
lea
imul
es
lea
and
push
cmp
gs
sbb
in
mov
mov
mov
dec
outs
dec
lds
xor
mov
iret
push
lock
mov
out
xchg
fchs
xchg
cmp
xchg
inc
rol
cmp
cmps
fadd
add
push
loope
pop
push
xchg
pusha
xor
retf
mov
xor
in
sbb
push
arpl
xchg
mov
or
fs
pop
ins
xchg
fcmovnb
cmp
cs
jno
adc
jp
sbb
mov
mov
popf
or
scas
js
mov
xchg
add
rcr
iret
retf
mov
cld
and
sbb
add
nop
test
out
fst
mov
mov
mov
push
std
cli
xor
xchg
jmp
or
lea
jp
loop
loope
dec
mov
jns
inc
popa
mov
repnz
and
mov
call
adc
xchg
sub
test
mov
xor
pusha
adc
icebp
fbstp
jb
lds
or
sub
mov
(bad)
inc
mov
jae
xchg
mov
ja
and
dec
cmp
dec
(bad)
or
xor
jmp
mov
les
sar
int3
sti
imul
jbe
mov
or
int3
xor
lea
retf
stos
mov
pushf
add
jmp
shr
sub
inc
pop
retf
push
mov
test
dec
mov
addr16
xchg
rol
les
js
inc
and
and
sbb
fidiv
js
aas
lock
fs
shl
repnz
xchg
ins
sub
retf
loope
neg
sahf
cmp
mov
(bad)
cmp
mov
das
ds
test
cli
mov
jnp
jg
hlt
adc
js
lock
add
or
mov
and
and
popa
sar
mov
popf
xchg
push
rol
sar
ret
inc
not
push
push
pop
jnp
repz
and
add
sar
adc
add
cwde
popf
mov
mov
test
cmc
or
test
cs
cmp
iret
adc
xor
jno
xchg
mov
push
sti
les
xchg
pop
add
sbb
cs
and
jno
outs
add
scas
outs
js
loop
xchg
movs
movs
retf
loop
(bad)
jge
fdivp
sub
cwde
(bad)
ja
adc
and
pusha
or
mov
adc
arpl
movs
xor
sub
movs
mov
test
jge
loopne
lea
jbe
add
scas
int
jmp
jns
jp
mov
(bad)
cli
adc
push
arpl
push
dec
jo
mov
jecxz
lods
addr16
dec
push
inc
call
jle
das
push
sbb
push
in
add
xor
sub
lock
xchg
add
adc
bound
xlat
sub
fcmovu
arpl
mov
cli
gs
sbb
enter
cwde
push
ret
mov
xchg
jnp
jge
ins
mov
movs
sbb
push
std
stos
int3
fst
shr
test
int3
inc
adc
(bad)
mov
sub
addr16
retf
xchg
sbb
retf
outs
cmp
adc
jne
xchg
iret
cmps
xchg
mov
ret
pushf
sub
push
xchg
add
mov
mov
out
sub
jp
and
mov
adc
and
lock
popa
retf
fs
push
jle
out
jbe
dec
mov
mov
jae
xor
mov
ficomp
popf
xor
sub
mov
mov
sbb
daa
fcomp
retf
pop
daa
mov
push
push
out
cmps
dec
mov
rcr
pop
sub
enter
(bad)
sub
sbb
sub
rcr
dec
add
mov
cs
push
icebp
xor
sahf
pop
adc
push
jp
fstp
inc
add
push
enter
sar
sub
aaa
adc
mov
and
adc
lds
push
or
imul
aad
add
mov
jns
lea
inc
fldl2t
add
arpl
mov
dec
out
and
cwde
stc
test
es
fbld
xlat
xor
sahf
and
push
push
add
(bad)
jnp
jne
push
cmc
dec
aad
mov
push
xchg
clc
ret
jnp
ds
adc
gs
iret
mov
jne
outs
mov
mov
scas
fnstcw
mov
mov
push
outs
ds
mov
lahf
stos
iret
dec
ficom
out
shr
jno
xor
xor
(bad)
cmp
and
imul
loopne
popa
xor
es
xor
call
dec
add
add
nop
sub
cmps
cmp
fwait
dec
mov
aam
mov
(bad)
int3
in
mov
shl
ss
cmc
push
inc
in
jbe
or
jae
stc
pop
adc
repz
retf
(bad)
lock
ins
test
mov
leave
fld
jb
add
mul
out
mov
sub
dec
and
mov
pop
xchg
pop
add
add
adc
movs
stos
xor
pop
clc
mov
inc
dec
mov
xchg
dec
add
or
aas
xchg
mov
cwde
pop
and
mov
or
test
outs
sub
jecxz
nop
popf
aas
jmp
ins
or
cmp
mov
xor
jge
inc
xchg
arpl
or
xchg
xchg
jmp
mov
or
out
popa
mov
outs
fadd
inc
cld
sub
adc
in
sub
mov
rcl
push
cmp
(bad)
bound
cmp
lods
(bad)
movs
sub
push
inc
stos
xchg
or
jnp
aad
cwde
lds
adc
xor
into
cmps
xchg
sbb
push
push
push
cmp
adc
mov
pop
cwde
adc
cmp
lods
xchg
inc
adc
cmps
outs
jo
jo
(bad)
out
push
(bad)
xchg
sbb
inc
in
stc
xor
int3
mov
ds
enter
jmp
or
or
mov
lods
xchg
bound
call
shl
call
or
dec
ds
fsub
jmp
fisttp
sar
pop
push
bound
inc
jmp
outs
cwde
(bad)
or
jno
sub
mov
popf
push
rcr
aaa
sar
dec
mov
jge
ins
js
jge
dec
js
ss
dec
or
sub
jmp
sbb
push
jge
stos
push
iret
jb
(bad)
imul
rcl
out
mov
adc
fcomp
sti
jns
retf
cmp
push
aad
es
out
(bad)
jns
mov
jge
push
cli
outs
mov
(bad)
xchg
xchg
jecxz
cs
push
sbb
inc
or
icebp
jne
outs
mov
push
push
sub
mov
(bad)
cmc
and
sub
xchg
jo
stos
add
test
js
test
or
jg
push
adc
ins
nop
push
(bad)
nop
cmps
ret
cs
or
pop
hlt
pushf
inc
ja
xor
dec
(bad)
push
pop
ret
ins
mov
in
push
ret
pop
sar
sub
lods
add
add
test
ins
clc
xor
mov
leave
mov
fs
jl
cmp
add
cwde
lahf
clc
jno
out
icebp
sbb
rol
mov
aaa
push
mov
xchg
(bad)
ss
fs
dec
rol
sub
outs
into
push
xor
cdq
jl
lea
into
iret
sbb
adc
jo
and
clc
clc
jne
xchg
or
in
out
push
call
scas
pop
mov
lock
mov
int
mov
hlt
leave
xor
ja
pop
push
mov
sbb
pop
adc
out
or
xor
rcl
mov
inc
dec
ins
loopne
ja
(bad)
and
adc
hlt
popf
dec
cwde
mov
lods
pop
fwait
leave
sub
popa
lock
aaa
adc
cmps
jbe
inc
pop
data16
(bad)
stc
(bad)
loopne
or
shl
pop
gs
dec
(bad)
sbb
sbb
cmp
neg
mov
mov
mov
push
js
mov
cmc
je
sub
mov
adc
loope
arpl
repz
inc
or
mov
mov
imul
adc
sahf
stc
xchg
call
ins
les
sti
mov
xchg
mov
aas
and
test
mov
out
int
xchg
xor
mov
dec
loopne
push
hlt
(bad)
jge
scas
aas
cs
xchg
push
fs
push
inc
inc
inc
mov
scas
dec
daa
mov
adc
xor
shr
mov
pop
lds
pop
fsubrp
xchg
(bad)
arpl
adc
mov
sbb
pop
sub
inc
push
cdq
das
pop
fwait
(bad)
cwde
fwait
push
call
scas
loopne
pop
push
sbb
aaa
in
movs
inc
push
xor
call
retf
and
test
cmp
mov
ss
jecxz
pusha
inc
lea
adc
jmp
rol
push
in
pop
mov
xor
inc
mov
out
inc
fnstsw
jp
fisubr
es
pop
add
movs
jb
xor
push
and
loop
in
cmps
jae
and
pop
movs
jo
cwde
cs
fistp
clc
arpl
int3
sbb
outs
add
retf
xor
leave
jl
repnz
sub
xor
and
push
outs
daa
sti
mov
push
lea
xor
shl
mov
outs
push
push
call
jo
cmp
cmp
retf
es
jbe
jl
cmp
ja
sbb
test
popf
add
adc
ins
call
call
mov
rcr
retf
shr
scas
pop
sti
pop
in
xchg
cli
dec
push
or
and
stos
daa
clc
sub
inc
and
cmc
mov
cmp
mov
pushf
pop
add
mov
mov
adc
mov
cs
in
and
cmps
(bad)
push
imul
and
mov
cmp
out
pusha
mov
js
fbstp
lods
sub
leave
xchg
and
jg
int3
jmp
cmc
cmc
or
adc
sub
call
push
push
iret
jmp
push
aaa
lods
xor
inc
sub
in
jmp
pusha
hlt
xor
jns
std
push
into
push
popf
mov
pop
cld
fwait
adc
adc
les
xor
dec
add
jbe
jl
or
dec
xor
std
cmp
adc
cmps
push
call
mov
nop
fmul
test
sub
inc
icebp
outs
jno
sbb
or
adc
lock
cmps
outs
fist
dec
dec
push
mov
ret
dec
or
inc
outs
xor
push
add
and
sub
or
push
add
or
into
cmp
daa
ret
arpl
ret
push
cwde
push
xchg
mov
mov
pop
xchg
jo
into
sub
cmp
cmp
push
mov
popf
sbb
pop
popa
mov
mov
xchg
and
dec
fist
xlat
fidiv
frstor
xor
in
leave
ret
push
add
and
cmp
cld
xchg
loop
int
ret
xor
je
in
fisttp
adc
(bad)
pop
and
cmps
fs
clc
stos
mov
ja
jb
mov
xchg
or
pusha
movs
pop
cmp
ror
xchg
call
pop
mov
sti
sbb
and
popf
cmc
enter
test
or
push
addr16
dec
out
pop
push
jecxz
loopne
out
int
test
inc
scas
sub
dec
cld
pop
push
mov
stos
or
inc
jmp
pop
or
call
out
cmp
(bad)
leave
jmp
cmc
mov
outs
aam
outs
xchg
xchg
dec
mov
dec
loop
cli
cmps
inc
mov
cmps
ins
pop
sbb
mov
adc
in
pop
dec
inc
add
ss
in
and
push
or
inc
inc
push
sbb
mov
inc
jnp
push
add
ret
retf
stc
cmp
xchg
mov
repz
scas
aas
jp
push
mov
cmp
stc
dec
sbb
(bad)
pop
call
int3
rcl
mov
cmp
jp
mov
sub
or
out
add
cmp
scas
mov
out
mov
ja
cmp
mov
jle
(bad)
mov
sbb
mov
daa
retf
inc
mov
ret
call
mov
jmp
pop
xchg
sbb
mov
arpl
jb
mov
scas
fidivr
dec
and
xchg
addr16
lock
jecxz
jmp
cmp
sar
and
adc
xchg
retf
or
jecxz
or
out
mov
test
pop
jae
dec
adc
dec
jle
int
mov
jne
or
js
push
test
mov
out
push
mov
inc
xchg
stos
push
ins
(bad)
jnp
ins
je
out
(bad)
es
test
imul
loope
and
shl
xchg
cmp
xor
out
into
inc
mov
sub
leave
sbb
push
add
aad
shl
mov
icebp
shl
dec
gs
mov
jno
fdiv
repz
or
cmp
push
call
xchg
mov
push
lds
mov
add
xor
xchg
fwait
in
cli
xlat
(bad)
cmp
pop
ror
xchg
xchg
inc
inc
in
push
(bad)
ss
mov
jl
jp
int
mov
out
retf
mov
push
pmaxub
lahf
int3
ins
mov
sar
sub
sub
rcr
adc
sbb
movs
fild
shl
shl
rcr
clc
lahf
mov
shl
cmc
test
idiv
fwait
in
loopne
dec
jmp
call
push
jae
adc
nop
xchg
jb
push
pop
pop
push
push
jbe
mov
push
mov
sub
int
fs
xlat
mov
sub
std
call
fisub
lahf
loope
mov
je
sbb
ret
retf
outs
adc
test
sub
hlt
adc
jmp
(bad)
retf
popa
test
das
or
jmp
sbb
out
pop
(bad)
jo
add
push
outs
cmp
cmp
adc
sbb
jne
fidivr
retf
jle
dec
fnstsw
xor
lock
inc
add
adc
mov
sub
stc
mov
or
js
dec
inc
jmp
push
js
mov
mov
adc
popa
xchg
adc
push
add
jne
into
les
ja
(bad)
pushf
adc
cli
and
stos
xchg
sub
mov
rol
jle
jno
push
rcr
sbb
add
arpl
add
fld
fistp
mov
and
stos
rol
fwait
retf
mov
mov
mov
jns
push
mov
fcmovu
xchg
pop
lahf
fcomp
test
cwde
push
ret
iret
sar
cmps
loop
clc
jmp
add
hlt
or
dec
mov
stos
shr
sbb
sbb
fcom
mov
fdiv
sub
arpl
xchg
les
push
cmp
cs
aam
add
(bad)
adc
(bad)
(bad)
jno
cwde
push
imul
cmp
aaa
loope
pop
ds
xor
lds
sti
popf
pushf
pop
dec
movs
sub
fdiv
cmp
sub
idiv
mov
add
sti
push
iretw
js
xchg
lds
fwait
dec
mov
pop
jne
cli
fcomp
xchg
dec
or
mov
cmp
dec
sbb
mov
xchg
mov
sub
cmc
rcr
push
pushf
add
push
ret
push
ja
ins
sub
lahf
add
ret
dec
out
into
sar
or
sar
mov
mov
push
xchg
jbe
popa
and
into
jecxz
mov
adc
or
cld
push
add
jns
dec
in
cmc
ds
es
sbb
popf
(bad)
sti
dec
and
inc
push
cmp
imul
fld
(bad)
mov
dec
and
ror
ror
push
push
js
clc
dec
mov
out
inc
cmp
add
mov
add
retf
outs
push
daa
cmp
pop
adc
xor
push
inc
jnp
and
arpl
(bad)
mov
xor
fwait
lock
call
pushf
fist
mov
mov
xlat
scas
xor
mov
xor
in
cmc
mov
jecxz
and
xor
jge
sbb
enter
fwait
push
addr16
ret
sbb
adc
fdiv
mov
sbb
mov
push
xchg
xor
jne
add
(bad)
xor
dec
cmps
pop
jmp
bound
sub
push
shl
test
retf
jecxz
mov
cmc
dec
(bad)
mov
and
iret
mov
fsubr
je
jbe
test
xor
mov
xchg
sbb
hlt
sub
cwde
adc
mov
ror
pop
mov
je
dec
push
or
or
popa
jo
adc
out
aas
mov
cmp
pop
sbb
dec
add
add
(bad)
in
(bad)
jmp
aaa
adc
adc
outs
mov
je
mov
(bad)
push
pop
push
movs
mul
clc
call
ins
sbb
and
mov
and
call
(bad)
push
jne
fcmovu
xchg
in
xor
retf
cmp
adc
(bad)
scas
mov
or
pop
mov
shrd
mov
rcr
in
hlt
out
push
add
jmp
pop
into
sbb
mov
push
sub
(bad)
or
mov
sti
in
cs
pop
pop
hlt
pop
bound
pop
fsubrp
hlt
dec
shl
adc
inc
pop
xor
(bad)
xlat
arpl
ins
(bad)
cli
cld
ficom
lock
leave
inc
push
movs
(bad)
mov
pop
ins
and
les
loop
test
movs
mov
pop
cli
cwde
lahf
pop
imul
mov
push
and
das
sar
push
and
fstp
add
stc
inc
jmp
push
jnp
lods
retf
or
push
into
mov
pop
add
xlat
repnz
jecxz
mov
aas
xchg
(bad)
pop
push
mov
push
or
cdq
lods
ret
push
into
and
jo
aaa
popf
xchg
das
lods
sbb
je
push
mov
push
ret
ja
jo
jmp
loop
cli
push
mov
xlat
mov
loop
ins
and
mov
jns
sbb
daa
in
loopne
inc
stos
adc
adc
xchg
jecxz
stc
push
and
lahf
adc
xchg
sbb
add
out
xchg
fpatan
int
retf
fst
ja
mov
sub
pusha
les
lods
push
and
fs
fisub
popa
push
loop
pop
not
and
and
arpl
int3
cdq
cdq
push
mov
mov
pop
add
jecxz
lea
inc
jo
retf
jne
pop
mov
mov
add
(bad)
mov
inc
test
jns
bound
or
cli
aam
xor
push
adc
dec
mov
xor
add
and
pcmpeqd
xchg
pop
sbb
aas
out
stc
mov
xchg
popa
popf
xor
enter
and
test
or
movs
popa
pop
cmp
adc
stos
ss
sbb
clc
rcr
bound
popf
(bad)
mov
int
xor
add
mov
dec
inc
mov
mov
es
test
jb
xor
and
xchg
ins
inc
imul
inc
ret
gs
popa
pop
imul
jmp
pop
jne
leave
movs
xchg
mov
sahf
xor
mov
sub
push
mov
in
sbb
mov
or
add
xchg
jnp
jmp
sahf
ins
imul
into
outs
jne
cmp
and
mov
sbb
mov
cmp
movs
mov
and
mov
pop
sub
arpl
cld
psrad
stos
jle
out
adc
mov
add
pop
ds
stc
pop
loop
les
inc
outs
inc
shr
xchg
add
dec
dec
jno
out
or
in
dec
movs
xor
std
and
shr
call
(bad)
cmp
(bad)
mov
leave
push
mov
clc
pop
push
push
xlat
cmp
jp
pop
push
push
or
adc
mov
dec
movs
dec
mov
add
scas
arpl
(bad)
inc
dec
push
jb
push
icebp
(bad)
cmps
std
(bad)
retf
cmovp
das
test
mov
mov
leave
jmp
mov
sbb
ror
jle
jmp
mov
inc
jle
pop
stos
cmp
jbe
fcom
push
sahf
or
and
je
push
push
shl
movs
pusha
push
or
js
or
inc
mov
mov
inc
rep
inc
aam
xchg
xchg
sub
xor
mov
jge
adc
retf
fsub
pop
outs
xor
cmps
daa
jge
ins
dec
outs
xchg
imul
dec
outs
clc
popa
je
lock
fsub
fs
inc
xchg
fcomp
rcl
pop
mov
mov
sbb
and
xchg
and
push
mov
arpl
or
or
xchg
mov
sti
ss
retf
movs
cmp
push
cmp
xchg
sahf
xchg
sub
xchg
sti
and
or
inc
sub
push
jae
ins
movs
adc
sub
and
push
mov
rcl
jb
add
loope
stos
xchg
mov
inc
mov
test
push
out
cmp
(bad)
xchg
cli
iret
retf
sahf
jge
(bad)
ins
mov
lock
inc
leave
xchg
ds
aas
lea
jmp
inc
adc
pop
test
mov
fmul
call
call
add
mov
std
dec
mov
jmp
jl
int3
test
and
cmp
cmp
call
or
bound
mov
cmps
repnz
popf
push
mov
push
mov
outs
cmps
jmp
std
mov
mov
xor
pop
adc
dec
push
call
je
pop
mov
scas
cmp
pop
dec
mov
fadd
pop
push
dec
pusha
mov
repz
enter
xchg
cdq
mov
mov
push
sti
pop
jb
dec
mov
xchg
mov
xor
push
test
jno
pop
call
popf
pop
adc
pop
pop
jns
inc
inc
ret
jmp
sbb
jnp
(bad)
xchg
mov
mov
mov
fsubr
loopne
inc
mov
jmp
inc
mov
mov
outs
or
scas
dec
scas
lahf
les
dec
pop
pop
cld
icebp
int3
adc
mov
js
sbb
dec
ja
fistp
cmps
adc
rcl
outs
addr16
mov
add
jno
dec
push
xchg
add
retf
ret
mov
adc
div
add
imul
add
sbb
adc
sar
les
ficomp
frstor
sbb
mov
icebp
mov
lods
cmps
(bad)
sar
xchg
mov
ror
call
jae
je
dec
icebp
fisub
imul
xchg
neg
push
cld
cmp
popf
shl
jmp
push
jns
push
ins
mov
aam
js
in
retf
jne
cmps
and
xor
adc
push
mov
ja
push
cwde
stos
dec
lods
js
dec
lea
int3
jbe
repz
retf
lahf
cmp
retfw
sbb
fimul
or
out
addr16
mov
(bad)
pop
inc
or
push
mov
test
push
dec
xchg
lea
movs
call
xchg
popa
cmp
scas
fucom
xchg
stos
mov
add
(bad)
jge
ins
ins
xor
loop
cmp
jmp
or
xchg
std
test
cmp
pop
(bad)
cmps
jmp
stos
repnz
(bad)
aad
dec
jae
push
call
cmovl
stc
aam
ficomp
jbe
dec
mov
repz
(bad)
in
lds
dec
pop
pop
mov
mov
int
cmp
dec
sub
xchg
sub
push
jae
lods
shl
rcl
push
mov
mov
call
dec
stc
dec
xchg
daa
jl
fadd
mov
aas
mov
call
add
and
cmp
cmp
addr16
jl
mov
fdiv
call
loop
in
lods
aas
cs
jno
int
push
pop
in
dec
enter
mov
jge
xchg
jl
inc
test
add
pop
stc
xor
dec
pop
and
xchg
or
(bad)
push
xchg
pop
jo
es
iret
dec
shr
movs
push
(bad)
sub
add
jp
xchg
pop
or
pop
cmps
push
push
pop
ss
mov
pusha
sbb
lods
div
fcmove
xor
(bad)
xchg
sub
popa
mov
xchg
jge
mov
imul
cmp
cdq
leave
cdq
ins
and
cs
fisubr
xchg
outs
pop
dec
add
(bad)
repz
xor
add
test
cmps
dec
imul
ja
lods
jmp
push
jbe
sub
(bad)
std
pop
in
or
movs
sar
mov
inc
fs
repnz
mov
inc
xchg
lea
pusha
jmp
push
inc
inc
popf
dec
add
je
add
dec
dec
mov
loope
jecxz
mov
pop
ds
test
rcr
ret
leave
adc
jmp
imul
push
sahf
imul
xlat
or
scas
push
loop
ret
cmp
mov
test
cld
inc
pop
addr16
mov
or
repnz
add
cdq
div
pop
jae
inc
jnp
xchg
xor
jl
test
mov
xchg
jecxz
mov
arpl
xchg
js
pop
retf
and
and
xchg
or
ficom
loopne
test
clc
int
xchg
movs
cmps
loope
fisub
addr16
jge
cmc
popf
add
test
mov
aad
sbb
ret
fs
jl
aas
sbb
arpl
add
sysenter
inc
cmps
pop
ins
mov
inc
xchg
sbb
call
jle
cmc
out
adc
repnz
ds
push
fcom
pop
iret
fbstp
jo
ja
loopne
push
test
jmp
nop
lds
jecxz
push
imul
jl
fs
scas
(bad)
rol
je
loopne
mov
cmp
jmp
ret
and
mov
sub
xchg
mov
ret
jecxz
sbb
sbb
or
push
push
int3
aas
ror
call
xor
dec
inc
dec
lods
adc
jno
retf
popa
fnstenv
dec
inc
mov
push
push
cmp
les
sbb
mov
cmp
push
enter
sub
pop
outs
cmp
pop
dec
sub
mov
movs
int3
aas
sub
sbb
hlt
xchg
sub
inc
cli
and
dec
sub
ins
mov
or
outs
add
out
cmp
push
pop
mov
popa
jge
into
inc
xchg
jne
xchg
sub
pop
pop
mov
out
retf
retf
push
xchg
and
xchg
cmp
dec
jno
or
inc
pop
cmp
mov
nop
movs
add
mov
adc
jmp
(bad)
mov
ja
call
pop
arpl
lods
inc
xor
jmp
pop
inc
mov
enter
retf
pop
scas
add
pop
daa
je
pop
leave
(bad)
cs
push
cmps
out
inc
jp
inc
adc
cld
int3
out
cmp
(bad)
es
dec
int3
ss
inc
test
ds
test
push
sub
loopne
or
xchg
es
jg
test
xchg
push
dec
and
and
mov
push
fsub
in
mov
cs
sbb
out
add
mov
inc
mul
pop
xchg
and
push
(bad)
cmp
pop
stc
push
stc
add
xchg
ins
lahf
cmp
loop
and
(bad)
xor
sbb
movs
xor
dec
stos
mov
pop
sti
inc
push
data16
jmp
call
xor
adc
aam
lahf
ins
xlat
mov
shl
leave
and
jmp
pusha
add
ret
(bad)
sub
mov
(bad)
pop
scas
adc
mov
lods
pop
inc
into
or
jne
adc
xor
into
cs
out
(bad)
pop
(bad)
jns
inc
jle
ficom
pop
sar
xor
xchg
cdq
and
frstor
inc
jne
pop
adc
cmc
dec
jo
popf
xchg
mov
imul
lods
inc
push
pusha
sahf
push
imul
add
xchg
std
pop
div
push
in
lock
dec
cmp
push
repz
pop
ins
lahf
lock
xchg
and
enter
sub
shl
sub
enter
sub
jno
(bad)
ins
scas
mov
scas
je
mov
daa
aam
pand
push
sub
sbb
and
clc
adc
xchg
test
popf
ror
sub
push
out
sbb
push
div
test
out
mov
push
dec
jae
jns
fs
(bad)
je
(bad)
nop
es
push
push
xchg
jg
sbb
sub
xor
xchg
les
scas
fbstp
in
int
pop
pop
popa
add
adc
mov
push
cmc
imul
out
daa
cwde
pop
jp
jb
mov
dec
pop
in
ja
mov
fld
call
mov
pusha
js
out
loope
add
push
inc
fld
sbb
cmp
push
lahf
push
imul
xor
push
imul
pop
retf
aam
adc
push
dec
sub
arpl
xchg
pushf
xchg
sbb
pushf
ret
cmp
sub
and
cmps
scas
xor
cmps
jmp
xchg
jp
(bad)
mov
(bad)
inc
inc
push
hlt
jg
dec
and
pop
out
cs
add
jmp
retf
adc
lock
sub
add
add
popf
sbb
clc
jae
ret
dec
addr16
test
ds
adc
std
cmp
mov
xor
ror
dec
or
inc
dec
ss
bound
repz
add
sbb
push
(bad)
rcl
mov
push
jmp
out
(bad)
rcl
ds
or
adc
mov
mov
(bad)
sbb
xlat
aas
mov
ret
fs
cmps
dec
in
lods
je
push
ins
repz
stos
stos
mov
and
push
lea
xchg
pop
addr16
xchg
ror
imul
xor
mov
push
cmps
jecxz
push
cmps
jbe
adc
dec
xchg
inc
xlat
inc
jl
or
cmps
or
push
push
dec
mov
jl
mov
cmps
pop
les
jo
or
lods
lock
or
mov
jnp
jp
test
pop
push
xchg
pop
pushf
xor
in
std
cld
in
fild
cmps
in
scas
lahf
mov
test
dec
sub
hlt
sbb
adc
test
mov
popf
or
pop
push
dec
test
test
add
adc
dec
xlat
arpl
sub
ss
jno
mov
sbb
mov
cmp
sbb
push
int3
pop
push
dec
aad
and
fbld
lea
pop
icebp
mov
dec
mov
or
fstp
xchg
test
sbb
push
push
repz
add
(bad)
(bad)
sahf
addr16
or
sub
bound
jmp
adc
pusha
adc
dec
pop
mov
dec
sar
xor
xor
addr16
gs
into
cmp
shl
jb
mov
leave
cmc
mov
sbb
repz
xchg
and
scas
xchg
jmp
aas
and
xor
add
dec
into
arpl
out
cld
mov
mov
xchg
ds
aad
mov
mov
cld
mov
jmp
scas
cmp
cmp
add
jns
stos
retf
fsubr
test
adc
jmp
std
(bad)
jns
xlat
pop
adc
push
add
jno
inc
mov
(bad)
pop
jo
inc
cdq
xor
sahf
cmp
dec
jno
mov
dec
call
jmp
imul
test
dec
pop
mov
mov
lds
push
pop
int3
call
lds
lock
push
add
xchg
jne
movs
sbb
and
cmp
and
mov
ja
or
(bad)
dec
es
movs
pop
xor
xchg
jb
jno
pop
and
cmp
movs
sub
cmps
clc
push
aam
add
add
ins
add
jnp
xor
push
jne
out
test
imul
fistp
ins
test
adc
in
pop
sbb
mov
imul
lods
jp
sti
dec
jnp
push
add
mov
icebp
dec
ds
xor
cmp
ins
dec
jp
sub
push
xchg
mov
cmp
sbb
rcr
popf
call
sbb
mov
sbb
push
jo
mov
lahf
and
inc
mov
xor
imul
mov
cld
ja
mov
adc
push
icebp
jne
mov
loopne
sahf
test
sub
or
xchg
or
pop
add
movs
pop
xor
adc
add
(bad)
iret
dec
inc
mov
cmp
mov
leave
xchg
pop
adc
inc
mov
not
seto
(bad)
mov
std
push
xchg
pop
out
cmp
and
(bad)
and
pop
jg
test
leave
jnp
bound
push
(bad)
sbb
jbe
pop
iret
daa
out
sub
lods
cs
xchg
cmp
out
pop
and
xor
fsubr
sbb
test
movs
mov
add
lea
push
cli
fadd
mov
mov
mov
retf
shr
cld
and
mov
sbb
sub
movs
lahf
mov
call
xchg
dec
scas
jno
mov
hlt
dec
xchg
nop
fwait
call
stos
cmps
add
movs
mov
call
or
push
call
inc
aas
pop
mov
jne
push
sub
test
pop
add
xor
stc
or
pop
xor
jg
cmp
(bad)
mov
xchg
fcomp
call
aaa
pop
inc
push
repz
test
xor
call
add
(bad)
daa
icebp
push
data16
ret
cmps
lock
cmps
outs
jns
pop
push
pop
sbb
push
jb
adc
sbb
mov
push
ss
leave
mov
es
repnz
sbb
(bad)
and
repz
aaa
enter
fsubr
sub
test
fmul
dec
sbb
mov
jbe
cmp
cld
rcr
and
and
mov
jbe
adc
mov
inc
xchg
addr16
fld
retf
loop
xor
movs
sbb
adc
pop
int3
test
pop
outs
jbe
sti
in
ja
imul
scas
mov
mov
mov
repz
cdq
cmp
push
cmp
repnz
inc
ss
iret
bound
mov
cld
outs
jno
mov
or
inc
hlt
out
xor
dec
or
fs
(bad)
fs
mov
call
ja
mov
out
pop
in
add
xchg
xchg
jl
stos
xchg
fdiv
cmp
or
hlt
in
cmp
aam
mov
mov
or
push
pop
repnz
packuswb
leave
iret
pop
mov
mov
push
cmp
or
shl
clc
(bad)
imul
jmp
dec
push
and
sbb
repz
xlat
mov
int
add
(bad)
(bad)
sbb
lahf
call
mov
cmp
je
clc
std
(bad)
aad
inc
hlt
mov
test
cmps
cmp
mov
popa
outs
call
or
dec
rcl
adc
(bad)
neg
imul
add
sti
mov
stc
push
mov
inc
sub
mov
or
push
mov
sahf
dec
mov
dec
mov
xchg
inc
mov
fimul
inc
fist
call
(bad)
dec
popa
or
mov
imul
shl
popf
jmp
dec
or
js
mov
movs
sub
ja
es
add
inc
gs
xchg
lock
pop
lahf
in
icebp
lock
xchg
dec
imul
and
fcomp
mov
test
push
cwde
outs
push
shl
inc
(bad)
fsubr
shr
je
pop
lock
sub
addr16
push
mul
mov
iret
and
mov
in
popa
jge
and
sub
pop
inc
sub
arpl
pusha
fadd
hlt
dec
mov
mov
out
xor
jge
inc
jecxz
rol
out
lock
sti
or
xor
imul
cmp
mov
add
mov
cmps
mov
cwde
test
enter
or
mov
inc
mov
adc
cmp
int
pop
xlat
adc
sbb
std
stc
mov
sbb
out
test
test
push
stos
jp
addr16
inc
aas
mov
adc
iret
das
adc
outs
inc
push
adc
inc
cdq
xor
fsubr
leave
dec
cld
iret
ret
xor
aaa
adc
iret
bound
mov
mov
dec
int3
sub
sbb
xor
outs
ret
nop
push
aad
fsubr
call
or
in
xchg
sub
mov
fs
outs
fcomi
add
mov
fistp
mov
gs
cmp
xlat
fdivr
or
cmps
stc
xor
adc
mov
mov
rcl
dec
mov
fwait
sahf
mov
in
dec
push
js
or
(bad)
sar
add
or
stc
mov
sub
rcl
xchg
xlat
pop
aas
pop
xchg
add
push
jecxz
or
mov
pop
das
call
in
jbe
je
in
clc
int
inc
dec
mov
(bad)
popa
xor
mov
dec
daa
xlat
mov
push
imul
outs
cmp
or
loopne
xor
xchg
dec
and
(bad)
jmp
fld
jmp
jl
cmp
mov
push
(bad)
push
je
stos
pop
mov
sti
pop
inc
cmp
sahf
and
mov
or
xor
jno
or
mov
jbe
lods
mov
je
scas
mov
pop
ficomp
xchg
sti
call
xor
fst
jp
mov
(bad)
cmp
fwait
adc
ss
rol
popf
sub
adc
or
retf
iret
fs
push
xchg
fistp
jmp
add
out
push
fdivr
pop
jp
push
shl
hlt
or
add
pushf
or
aad
mov
push
iret
in
retf
add
cmp
popf
add
sub
not
mov
xor
jbe
dec
mov
les
test
inc
xor
daa
add
add
sbb
inc
push
and
enter
arpl
mov
jae
jg
inc
cld
mov
add
lock
sahf
jb
pop
mov
jb
xor
idiv
inc
gs
push
adc
mov
xchg
or
outs
add
std
sub
call
cli
sbb
dec
pop
sbb
movs
retf
pushf
retf
add
pop
je
movs
fistp
and
rol
sub
lahf
adc
mov
cdq
dec
scas
mov
sub
pushf
inc
sub
dec
test
or
hlt
jo
adc
add
push
imul
sti
and
add
xor
sbb
xchg
mov
xchg
mov
jnp
mov
and
scas
adc
sub
(bad)
mov
inc
pop
mov
shl
(bad)
ficom
push
jmp
cmp
mov
fucomip
(bad)
fndisi(8087
ins
(bad)
arpl
lahf
mov
stc
pop
pop
jne
sbb
ja
int
mov
je
fisub
xchg
cmps
into
xor
stos
ins
adc
mov
out
mov
retf
test
add
push
jecxz
push
push
movs
jne
cwde
cld
fdiv
ins
cmps
or
adc
add
in
sbb
add
push
mov
fisub
push
mov
xlat
sub
icebp
push
daa
cs
fst
pop
xchg
dec
out
sbb
std
pusha
jecxz
call
pop
in
test
dec
sub
imul
std
jmp
popa
push
mov
addr16
nop
call
xchg
int
inc
jmp
jle
fld
cmp
and
push
push
daa
gs
mov
call
scas
mov
sbb
inc
sub
jae
pushf
retf
inc
fmul
int
push
pushf
adc
xchg
add
sbb
mov
test
pop
inc
retf
fs
(bad)
es
push
ficomp
push
sub
inc
fs
(bad)
jbe
dec
clc
jl
sub
repz
mov
pop
fldcw
sahf
addr16
(bad)
popa
mov
cmps
push
lods
sbb
(bad)
jnp
shl
inc
lods
in
mov
or
dec
test
pop
xchg
gs
dec
or
inc
cmp
hlt
cmp
sbb
xor
mov
or
test
repz
add
or
hlt
inc
jae
adc
retf
fstp
das
add
out
ds
out
das
pop
push
stc
mov
inc
mov
loop
adc
jmp
lods
inc
dec
pop
stc
add
repnz
mov
cdq
addr16
hlt
in
xor
jmp
pop
adc
mov
jns
pop
sbb
repnz
arpl
adc
jbe
shl
addr16
mov
clc
jae
fs
push
pop
or
mov
dec
(bad)
mov
bound
out
fdivrp
call
adc
out
jae
or
popa
jbe
(bad)
fmul
jbe
in
or
rol
out
retf
(bad)
mov
imul
mov
mov
in
daa
in
mov
std
ret
add
fild
jns
data16
mov
std
or
jne
out
loopne
xor
mov
out
sar
test
jp
mov
jno
pop
fimul
out
fcmovnbe
mov
xchg
inc
inc
jmp
pop
test
loopne
jnp
inc
mov
lahf
push
sti
into
and
imul
and
lods
pushf
sub
daa
mov
popa
xor
stos
mov
dec
push
cmp
xchg
mov
ins
mov
cmp
adc
inc
rol
mov
mov
data16
xor
inc
aam
cmp
sub
aad
cli
push
and
jbe
in
loopne
shl
mov
inc
call
call
sub
jp
sbb
nop
xor
dec
pushf
loop
xchg
jbe
push
hlt
movs
inc
outs
add
jl
adc
int3
lods
jmp
xchg
sbb
jmp
aas
je
sbb
cmps
jmp
daa
dec
mov
enter
fcomp
in
sub
arpl
rcl
lock
mov
mov
pop
shl
or
add
shl
dec
push
sub
and
add
loop
aam
sbb
dec
adc
sbb
or
(bad)
push
daa
cmp
ficomp
xchg
mov
lea
scas
aam
sbb
les
sbb
xchg
cmp
fidiv
jle
ret
arpl
dec
scas
jg
fstp
aaa
fld
test
adc
rcl
jecxz
xor
cmp
xchg
out
adc
ss
mov
push
push
outs
ret
jnp
sub
jl
cmp
xchg
call
inc
dec
das
pop
sub
or
sti
or
cmp
pop
call
mov
adc
pop
das
cdq
jl
in
je
lods
xor
loope
jne
mov
xchg
cwde
iret
test
out
push
xor
sub
into
test
shl
xor
xchg
jge
mov
xchg
je
cmp
in
in
cmp
retf
or
jnp
bound
sub
push
popa
jbe
pop
nop
ins
xchg
test
test
push
cmp
jnp
jno
fidivr
aad
dec
pop
jp
mov
pop
outs
push
mov
icebp
or
inc
shr
mov
icebp
xchg
es
cmp
mov
mov
xchg
xchg
das
add
lds
cmp
jecxz
fstp
mov
fsub
inc
xchg
mov
shl
cmp
jmp
repnz
retf
sub
loope
hlt
je
scas
das
int3
push
xchg
push
sbb
inc
jnp
das
mov
or
shr
iret
jecxz
jne
sbb
add
jle
fwait
xchg
out
jmp
ins
mov
pop
sub
clc
fsubr
lods
mov
test
cld
int3
xor
cmp
cmp
fdivp
jb
push
sbb
std
sar
movs
rcl
rcr
mov
sub
les
or
pop
rcr
xor
add
retf
push
ins
jmp
and
inc
or
clc
imul
or
sub
movs
add
(bad)
and
cmps
dec
mov
popa
add
xchg
aam
and
pop
jae
inc
mov
outs
mov
pop
inc
sbb
sbb
std
push
xor
into
adc
clc
outs
jnp
pop
or
mov
ss
rol
in
repnz
std
sub
pop
aam
push
stos
test
xchg
push
aam
popa
adc
or
test
outs
les
ror
pop
out
call
mov
adc
xchg
mov
lahf
push
xor
into
cmp
fistp
retf
pop
sub
lahf
enter
mov
iret
clc
or
or
iret
in
lods
lods
mov
dec
mov
cmc
cld
gs
jmp
xchg
jae
pop
xchg
jge
jno
aaa
loopne
js
test
outs
sub
div
push
pop
fwait
push
jmp
inc
pop
push
xor
add
jns
aam
add
sub
xor
or
xchg
ins
pop
pop
add
imul
xchg
fisubr
xor
and
lods
cmc
inc
add
cli
sub
enter
popf
push
fimul
nop
jp
ds
xlat
iret
inc
sub
dec
jne
out
jge
nop
xor
sbb
stos
je
mov
(bad)
rcl
jbe
xchg
(bad)
jl
cwde
dec
(bad)
xlat
jae
mov
stos
cdq
pop
aad
ror
clc
jmp
mov
jp
enter
test
mov
sub
(bad)
jmp
inc
jg
call
push
lds
cs
pop
aad
pop
fdivr
add
and
in
sbb
jo
xor
movs
(bad)
mov
jle
xchg
int3
js
jg
cmps
xchg
sahf
or
jmp
cmps
jnp
daa
dec
in
jb
push
jecxz
and
mov
jl
outs
inc
dec
dec
push
mov
lock
xor
push
sub
cmc
and
jecxz
fmul
inc
aam
mov
out
mov
xchg
add
popf
lds
jg
je
xor
sti
inc
jge
mov
sbb
js
jno
mov
stos
retf
jge
adc
adc
adc
(bad)
in
dec
out
imul
jbe
movs
es
fstp
mov
push
ins
jae
add
pusha
cmp
and
cld
mov
pusha
ss
cli
sbb
bound
mov
lahf
inc
hlt
pop
pop
idiv
add
into
mov
inc
addr16
(bad)
jne
sbb
fldenv
fnsave
jnp
test
ins
push
cmp
and
pushf
call
cmp
jb
xchg
sahf
movs
mov
xchg
sti
ret
cmp
les
mov
push
mov
(bad)
in
add
and
pop
pop
pop
jne
add
sub
push
scas
ret
int3
(bad)
and
or
mov
stos
leave
mov
inc
push
in
or
push
mov
call
stos
dec
pop
test
jmp
mov
pop
xor
mov
sbb
push
pushf
inc
ret
ret
jb
int3
fld
and
les
rol
cmc
mov
in
in
dec
test
and
cwde
mov
(bad)
push
sbb
jmp
inc
dec
clc
push
dec
push
daa
je
dec
and
adc
mov
and
add
xor
jg
xor
and
std
cmp
pushf
cmp
neg
and
jl
xor
mov
jo
xchg
jb
data16
inc
or
imul
mov
test
(bad)
js
push
ret
stos
sbb
aaa
and
xchg
sti
daa
ins
lods
cmp
das
push
sti
xor
xchg
rcl
sbb
xchg
mov
imul
in
mov
mov
icebp
push
sbb
fst
sbb
popf
jg
inc
test
je
pop
push
mov
inc
lds
shr
mov
pop
cmp
sbb
in
lock
push
inc
std
imul
push
mov
iret
xchg
and
sub
and
test
cmp
sub
jl
or
inc
mov
jmp
jns
enter
jae
cmps
xchg
(bad)
shl
(bad)
in
data16
cmps
retf
add
test
out
mov
push
cmp
aam
or
inc
and
fwait
sbb
jo
stos
fiadd
or
call
sbb
xor
xor
stos
inc
das
iret
rol
and
or
sbb
int
xor
xchg
push
mov
stc
(bad)
mov
push
push
stc
adc
movs
adc
add
mov
xor
dec
jno
outs
xchg
mov
sub
daa
mov
push
mov
mov
repnz
lahf
cwde
pop
cmp
adc
stos
mov
xchg
retf
leave
movs
jmp
sbb
add
test
cld
sahf
push
das
imul
mov
adc
xlat
cmp
and
not
or
call
out
push
sahf
jle
sub
sub
add
div
and
push
sub
test
mov
into
hlt
in
mov
stc
mov
cmc
push
int3
push
(bad)
imul
cmc
sbb
sub
cmp
gs
dec
retf
pop
stos
xchg
je
jge
inc
xchg
jmp
sub
xor
pop
pop
ins
pop
stc
les
in
sub
pusha
sbb
adc
mov
pop
lock
xor
cmp
inc
xor
add
push
shl
(bad)
sub
jb
adc
jle
push
call
pop
pop
fnstenv
add
rcr
xchg
or
add
mov
cmp
push
movs
push
shl
sar
ror
ret
adc
cmp
retf
addr16
mul
retf
clc
fisub
mov
mov
and
sbb
adc
in
adc
lock
cld
xor
push
adc
jg
add
dec
add
xchg
mov
bound
imul
pop
fsub
or
outs
sti
push
xchg
les
mov
fbstp
xchg
mov
gs
mov
push
sbb
lock
mov
pop
(bad)
push
cmp
(bad)
int
pop
inc
and
movs
jb
push
pushf
shr
stos
cmps
fcmovbe
dec
xchg
pop
mov
ror
jp
xor
cs
call
(bad)
cmp
enter
pop
lods
cdq
fdiv
jae
jb
mov
jmp
xchg
mov
inc
cwde
ja
inc
jge
sbb
xor
iret
adc
sahf
mov
fwait
sub
mov
ret
movs
adc
cmp
jl
cli
dec
push
cmp
cmp
xchg
jmp
xlat
mov
(bad)
and
xchg
movs
in
mov
adc
arpl
pop
iret
fild
(bad)
rcr
mov
in
push
ja
pusha
sub
add
inc
sbb
xchg
push
push
icebp
fadd
shl
jbe
js
jnp
retf
dec
sub
lock
add
repnz
out
add
pushf
(bad)
imul
mov
movs
jo
cmp
outs
retf
or
mov
aam
ret
test
in
or
int3
jne
jno
push
stos
fadd
adc
mov
mov
jle
sub
and
call
test
xchg
fnstcw
loopne
dec
xor
fwait
push
in
xchg
pop
cli
jecxz
imul
ds
inc
imul
dec
sub
mov
jo
xlat
and
(bad)
scas
pushf
pop
popf
call
cmp
add
and
jb
inc
sub
jmp
lahf
ret
mov
scas
sahf
xchg
cld
stos
out
lds
lds
loop
jle
or
and
xchg
fbld
sub
call
dec
or
frstor
sub
adc
adc
mov
mov
fcom
push
and
add
gs
fsubr
fild
push
js
sub
mov
hlt
into
gs
daa
mov
jge
cmp
push
sbb
mov
fisub
jb
fmul
iret
fwait
nop
(bad)
add
enter
sbb
or
in
push
cmps
gs
ds
push
fsubr
mov
pop
daa
mov
test
call
push
mov
push
lods
xlat
add
xor
push
inc
mov
dec
gs
icebp
mov
icebp
fist
mov
pop
jne
add
es
mov
cdq
fs
jle
xchg
dec
push
add
or
and
iret
js
js
jns
lea
mov
hlt
out
addr16
neg
push
dec
call
sub
movs
and
sbb
sar
push
push
sar
loop
(bad)
(bad)
adc
std
sub
adc
(bad)
call
jg
das
call
jne
ror
lea
cmp
cmp
dec
cmp
sbb
jmp
ret
pop
mov
or
jno
mov
cmps
ins
inc
imul
gs
(bad)
sub
test
cmp
mov
ficomp
xor
iret
retf
cmp
(bad)
imul
bound
(bad)
mov
mov
pop
(bad)
adc
push
sub
mov
fdivr
out
rcr
push
repnz
in
xchg
or
add
dec
scas
xchg
sub
adc
mov
pop
xchg
adc
retf
pop
pop
pop
cmps
shl
pop
outs
xchg
pop
push
xchg
test
mov
push
fistp
cdq
cmps
xchg
dec
jns
imul
sub
fs
lea
and
loope
inc
cmp
cmp
add
mov
xchg
inc
mov
outs
lods
xchg
lock
stc
rcl
xchg
mov
pop
rol
add
cmps
and
jne
dec
ins
daa
and
je
inc
leave
and
add
xlat
sbb
push
test
jmp
in
ja
push
int3
push
imul
adc
cmp
push
mov
mov
rol
dec
dec
mov
and
adc
stos
fmul
mov
adc
adc
arpl
ss
shr
fcmovu
cli
nop
or
call
enter
repz
jp
push
ds
push
inc
cmp
mov
push
lahf
xchg
jb
movs
push
(bad)
sti
mov
stos
out
xor
push
mov
imul
test
cld
cmp
test
loop
jo
ror
xor
es
mov
jp
in
ds
jp
push
and
inc
lea
lds
dec
sub
outs
pop
sbb
mov
movs
das
repz
xchg
inc
fistp
lods
fcomp
mov
(bad)
out
xchg
stos
std
lods
mov
fwait
dec
sub
call
push
or
pop
push
jae
nop
add
pop
cmc
xchg
cmps
add
int
and
das
dec
int
mov
pushf
ins
repnz
out
scas
and
hlt
movs
iret
jae
jecxz
sub
and
ins
push
fsubr
aam
mov
test
cmp
and
outs
sub
sbb
int3
sub
dec
loop
lahf
cwde
gs
mov
aad
cmp
data16
fcomp
push
jge
adc
push
add
scas
(bad)
push
mov
mov
les
pop
mov
cmps
cmp
imul
lahf
mov
inc
sbb
xor
sbb
ins
(bad)
out
add
into
jns
jmp
push
js
pop
in
test
mov
pop
leave
pop
ror
push
fdivr
retf
iret
rcr
(bad)
sbb
inc
xor
out
mov
pop
mov
sbb
(bad)
sar
cmc
adc
mov
scas
sahf
loope
not
or
nop
div
rep
xchg
adc
sub
push
inc
cmp
daa
aam
gs
ds
add
out
or
push
test
shl
jle
push
sub
mov
(bad)
lods
dec
aaa
scas
mov
jl
or
jge
sub
ins
enter
ins
lods
ficom
push
sub
pop
popf
inc
push
ret
retf
jbe
and
add
lock
push
js
inc
xchg
mov
scas
stc
es
add
neg
xlat
inc
ret
(bad)
retf
add
sti
push
cs
inc
sbb
stos
pusha
outs
call
into
inc
(bad)
mov
imul
icebp
out
cld
call
nop
gs
pusha
or
push
push
inc
jg
cli
fcmovbe
test
add
add
into
dec
cmps
inc
in
and
sub
xchg
mov
loopne
in
scas
fwait
in
iret
push
and
add
ins
sar
adc
mov
idiv
xor
push
sbb
push
sub
pop
sahf
(bad)
jb
dec
inc
js
push
shl
test
js
xchg
jge
mov
enter
mov
test
out
adc
inc
jns
outs
push
sub
movs
data16
inc
int3
sub
sbb
and
xor
pusha
mov
jmp
(bad)
and
push
sbb
lods
jmp
push
test
pop
xor
lods
std
(bad)
push
out
mov
pop
mov
aam
je
and
inc
mov
mov
inc
mov
adc
push
adc
pop
test
ins
or
cli
ja
mov
out
mov
loope
lea
fisttp
mov
mov
push
cmp
outs
test
scas
jmp
push
or
test
push
repnz
cmp
xchg
lods
out
out
push
enter
dec
adc
into
cmp
int3
sbb
mov
in
and
adc
int
mov
ret
adc
sti
pop
push
jp
(bad)
arpl
push
xchg
mov
xor
ins
test
inc
test
loop
cmps
pusha
jl
jo
or
adc
lods
pop
adc
js
cmps
xor
scas
push
fs
iret
(bad)
in
jbe
jl
push
xor
push
pop
add
push
jnp
cdq
sub
mov
loopne
stos
bound
cmp
cmp
inc
leave
aam
stos
cwde
sub
sbb
lar
daa
mov
jecxz
loop
jmp
cmps
mov
clc
adc
imul
in
pop
push
sti
push
xchg
inc
pusha
mov
sbb
push
jmp
mov
fisubr
pop
test
pop
or
jo
and
aam
xor
das
cmp
jge
adc
cmc
ficom
lods
sbb
in
(bad)
int
popa
data16
(bad)
test
xchg
jae
call
inc
cmp
sbb
adc
or
jmp
lahf
(bad)
add
cmps
(bad)
loope
xchg
cdq
mov
mov
or
cmp
jmp
adc
ficomp
push
into
cmp
pop
mov
nop
pushf
loopne
popa
in
stc
mov
jmp
xor
repz
or
retf
arpl
ins
retf
push
adc
mov
xchg
jmp
stos
sub
test
test
sbb
sub
clc
pop
out
fdivp
xchg
jmp
fidiv
hlt
inc
or
ret
icebp
dec
xchg
loopne
fstp
sahf
pop
imul
(bad)
push
mov
je
shr
enter
in
idiv
push
mov
shl
pop
adc
test
outs
fs
mov
mov
aas
ja
sahf
or
mov
mov
pusha
lock
or
cmc
fcomi
jge
seta
jbe
inc
test
xchg
and
les
fimul
xor
mov
add
or
add
outs
daa
xchg
mov
push
pop
adc
xchg
jae
cld
cs
out
or
xchg
repz
fcom
mov
fsubr
mov
enterw
clc
sub
das
in
xor
js
inc
imul
xor
and
jp
push
call
sbb
jbe
ds
jl
cmc
call
bnd
push
inc
js
push
shr
pusha
push
pusha
lahf
clc
xchg
outs
inc
loop
das
scas
adc
ss
in
nop
and
mov
mov
daa
sub
outs
(bad)
xchg
mov
enter
lea
ret
xchg
cdq
mov
xchg
mov
dec
lahf
shl
cmp
outs
sar
es
imul
inc
xor
pop
sub
rcr
add
add
or
mov
inc
das
imul
jb
inc
or
fsubr
fcomp
push
iret
sub
cwde
ins
rcr
push
pop
jecxz
jg
and
mov
bound
movs
aad
(bad)
dec
nop
cdq
mov
test
cmc
test
out
imul
cmp
and
jae
mov
jmp
pop
fcmovnu
sbb
addr16
mov
and
addr16
mov
ror
mov
repz
ret
dec
jecxz
lock
(bad)
push
pop
cdq
inc
call
popf
stos
add
mov
mov
inc
xor
in
push
push
mov
fwait
sbb
outs
mov
push
inc
pop
push
fmul
in
or
daa
out
fld
repnz
adc
das
inc
scas
dec
mov
repz
ja
mov
clc
jmp
int3
(bad)
add
das
je
mov
call
sar
js
dec
mov
jmp
add
lods
jmp
into
pop
cmp
mov
xor
pop
shr
cmc
call
adc
jge
mov
add
sub
sbb
ret
or
mov
inc
cmp
jae
into
dec
adc
sbb
scas
jmp
jl
mov
rol
pop
(bad)
cld
gs
cmps
xor
js
inc
loop
jecxz
fld
out
out
mov
and
jmp
(bad)
jle
push
xor
rcr
loopne
sub
nop
mov
jg
jno
daa
mov
xchg
mov
fwait
xor
mov
std
cmp
or
cmps
push
or
lods
push
mov
fmul
repz
jmp
mov
icebp
dec
xchg
cmp
das
cmps
adc
fdivr
sbb
pop
cwde
pop
or
fsubr
popf
sbb
into
fucomip
dec
mov
add
movs
mov
mov
push
xchg
je
aas
(bad)
pop
xor
add
in
outs
mov
(bad)
mov
fcmovnbe
cs
mov
add
push
out
js
int
adc
push
lds
inc
and
mov
inc
outs
and
jo
fisttp
movs
adc
adc
mov
push
popf
add
sub
(bad)
xlat
dec
fcomp
shl
jmp
push
out
test
je
gs
call
adc
cmps
and
rcl
mov
test
cmps
inc
(bad)
not
xchg
pop
ja
sub
sub
cmp
test
mov
popa
cmp
mov
jl
pop
scas
std
push
aaa
out
std
xchg
mov
sbb
pop
repnz
cmps
push
jecxz
test
xchg
ja
test
daa
(bad)
outs
push
dec
xchg
mov
shl
cld
jmp
mov
mov
clc
push
xchg
xchg
in
push
loope
xor
sub
sbb
int
mov
(bad)
(bad)
rcl
dec
repnz
dec
(bad)
sbb
and
inc
adc
sbb
ins
and
mul
outs
pop
cwde
mov
ror
mov
mov
in
dec
inc
movs
mov
call
loop
nop
inc
je
add
xchg
test
bound
mov
mov
call
cmps
jmp
adc
sbb
dec
cmp
mov
sbb
int3
arpl
jle
sbb
(bad)
cmps
xor
fnstcw
inc
or
retf
aad
mov
xchg
arpl
mov
jae
lahf
out
sbb
call
stc
jp
(bad)
mov
in
lds
(bad)
jg
pushf
add
cwde
(bad)
mov
or
popa
mov
popf
sar
lods
add
mov
and
or
jb
cwde
dec
out
into
ror
int
cmp
aad
sti
outs
in
cmp
and
jp
lods
test
cld
lock
es
mov
push
dec
mov
sub
out
test
addr16
add
cmc
and
mov
adc
xor
pop
xchg
jmp
out
arpl
ss
inc
shl
push
adc
aaa
lea
test
mov
aas
repz
adc
and
jmp
xchg
mov
shl
sub
push
xchg
cwde
lock
shr
popa
push
imul
sar
cdq
fnstcw
dec
daa
imul
adc
ins
sbb
adc
sub
arpl
stc
push
adc
scas
out
mov
mov
rol
stos
leave
cli
rcl
(bad)
sbb
lods
enter
mov
sub
or
mov
cmp
add
jbe
xchg
mov
pop
push
jne
mov
inc
jl
es
repnz
imul
and
sbb
cmovnp
push
test
into
mov
add
jbe
hlt
lock
sbb
fs
mov
jo
sbb
fucom
inc
adc
cmps
scas
(bad)
test
and
sub
lods
outs
xor
add
push
inc
and
add
sbb
sub
fwait
ins
adc
nop
fcomp
adc
out
cmp
sbb
lea
or
mov
xchg
cdq
adc
fadd
or
xlat
and
inc
mov
std
(bad)
stc
into
fsqrt
repnz
sahf
dec
or
dec
fisub
inc
pushf
(bad)
pop
pop
retf
mov
fisub
pop
sub
and
(bad)
fs
xor
mov
or
pop
leave
sub
add
mov
into
mov
jnp
cmp
test
xchg
mov
jecxz
mov
push
mov
mov
add
adc
add
lahf
or
retf
rol
jb
cwde
push
and
and
jmp
call
pop
dec
das
jns
add
dec
rcr
scas
sahf
retf
rol
sub
popa
mov
mov
mov
or
add
adc
pop
xchg
dec
or
and
loope
cmp
add
or
call
shr
not
cwde
mov
pusha
cmp
add
lahf
ss
dec
ins
jge
jns
das
dec
inc
scas
or
mov
add
inc
mov
mov
sub
fwait
ret
jle
scas
pop
add
pusha
scas
sahf
mov
(bad)
out
stos
jle
pop
inc
test
dec
adc
mov
jmp
test
mov
dec
push
pop
mov
ror
ds
push
jl
outs
add
cdq
out
addr16
hlt
sub
dec
movs
mov
jp
hlt
aas
mov
ins
mov
loopne
rcr
call
xlat
sub
jbe
loopne
jp
daa
pop
ss
cld
jbe
jmp
pop
sahf
dec
mov
push
push
dec
push
pusha
jl
scas
pop
sub
mov
xchg
jge
mov
mov
leave
retf
shl
push
fadd
pop
sub
(bad)
adc
cmp
mov
and
int3
or
inc
ins
mov
jmp
mov
or
sbb
jl
mov
dec
aam
adc
adc
cwde
lock
ja
and
cmp
idiv
mov
add
mov
mov
adc
ja
retf
jp
or
retf
(bad)
pop
mov
push
test
push
arpl
cmp
push
adc
inc
out
cli
stos
test
xchg
sbb
mov
in
imul
adc
sub
ds
cmc
dec
add
imul
and
or
test
loope
add
inc
pop
cmp
rcr
mov
and
retf
lods
cld
xchg
popf
cmps
call
push
inc
jnp
iret
and
xchg
fiadd
mov
mov
leave
jmp
jg
mov
inc
mov
adc
fst
dec
mov
addr16
int
push
pop
js
lahf
cs
pop
cmp
inc
sub
imul
add
cmp
xlat
adc
cdq
mov
push
jno
jp
js
pop
mov
xor
jmp
xor
and
mov
les
xor
jb
ret
xchg
and
sbb
sub
xchg
hlt
bound
(bad)
and
pusha
je
sub
mov
push
cmp
and
dec
test
or
test
movs
iret
inc
(bad)
jmp
xor
sysenter
add
mov
cld
cdq
or
mov
(bad)
pop
fwait
imul
in
xor
or
popa
adc
mov
scas
add
add
loopne
stc
xchg
scas
loop
jne
sti
push
gs
ret
adc
pop
stos
adc
pop
sar
sub
mov
push
xor
test
mov
movs
mov
xchg
lea
jne
(bad)
out
bound
jmp
xor
xchg
ret
mov
sub
xchg
mov
xor
or
fbstp
cmp
xchg
retf
arpl
shr
mov
lods
pop
les
push
jmp
push
scas
stc
mov
cdq
mov
popf
pop
call
stos
lock
jl
ud0
mov
mov
adc
cmp
and
out
imul
scas
movs
sub
pop
call
xchg
scas
mov
push
mov
mov
adc
enter
das
out
(bad)
push
push
adc
pop
gs
cmp
int3
or
out
mov
loop
dec
idiv
xor
in
pop
sbb
xchg
sbb
xor
pop
cs
sti
shl
inc
aam
jecxz
sub
cmp
pushf
xchg
xor
and
xchg
mov
int
add
adc
fst
cmp
mul
ins
out
sub
inc
jge
xchg
or
pop
pop
in
and
inc
arpl
movs
nop
sar
les
lds
xchg
cmp
(bad)
fcom
repnz
imul
vmwrite
fidiv
or
xchg
imul
sbb
cmps
test
push
adc
mov
fldcw
mov
mov
xchg
sub
outs
mov
cli
movs
adc
stc
mov
mov
int
lods
imul
retf
cmp
rcr
push
sti
or
test
add
mov
push
mov
jnp
dec
lds
leave
js
imul
repnz
rcr
xchg
aaa
out
add
mov
gs
and
xor
sub
sahf
mov
push
loope
pop
or
xor
outs
inc
mov
jb
aas
xchg
std
adc
stos
mov
mov
cli
inc
iret
je
cmp
jmp
xlat
(bad)
sar
push
adc
or
cmp
mov
inc
ret
(bad)
push
sti
ss
and
jmp
stos
jae
jo
sbb
imul
inc
push
int3
cmps
jmp
movs
xor
push
sahf
sbb
sub
lea
xor
movs
mov
and
push
jbe
sub
fstp
xchg
pushf
pushf
mov
inc
rcr
scas
push
pop
in
or
dec
inc
and
or
jmp
adc
push
rol
cmp
daa
add
cmps
hlt
in
xor
xchg
pop
je
les
xchg
adc
push
(bad)
jmp
movs
rol
mov
xor
pop
mov
xor
sbb
fild
shl
xor
fisub
sbb
add
jae
lock
dec
pop
inc
cmp
mov
dec
ror
outs
or
leave
out
clc
rol
pushf
cwde
mov
stos
shl
xchg
jnp
cmp
loopne
nop
(bad)
cmp
(bad)
pusha
pop
pop
adc
push
push
data16
js
out
test
mov
shl
test
adc
mov
outs
mov
jmp
add
pop
mov
leave
shr
call
out
daa
loopne
(bad)
popa
mov
pop
jg
sub
sbb
xchg
(bad)
loope
dec
aas
mov
push
call
cmp
movs
mov
outs
iret
mov
call
pop
jecxz
cmp
mov
stc
cmps
mov
inc
xor
fstp
js
scas
in
mov
cmp
mov
stos
les
mov
gs
xor
fsub
sub
(bad)
cli
cmc
(bad)
jmp
adc
sbb
fnstcw
and
push
jbe
mov
sbb
cmp
repnz
or
rol
xor
fsubr
pop
and
cld
and
hlt
jo
sahf
and
popf
or
jne
(bad)
iret
int
jecxz
(bad)
mov
cmp
imul
lea
in
mov
in
sbb
lea
mov
test
jb
adc
sub
inc
mul
adc
mov
jg
xlat
addr16
push
test
add
mov
mov
es
jmp
xchg
or
or
inc
mov
outs
inc
test
ror
xchg
xor
mov
pop
js
ror
out
in
push
add
push
dec
(bad)
fs
push
es
sub
xor
mov
call
jae
lods
adc
movs
clc
stos
repnz
or
int
dec
mov
cmps
adc
push
add
push
out
mov
xchg
into
xor
cmp
sbb
das
fistp
cdq
cmc
mov
jmp
xor
into
fld
outs
stos
mov
jle
dec
jne
ret
dec
add
retf
mov
pop
lods
pop
sti
wrmsr
pop
outs
movs
fist
(bad)
inc
adc
push
shl
mov
dec
pop
mov
sub
aas
mov
retf
stc
xchg
imul
jl
push
dec
mov
pop
mov
(bad)
jns
pop
call
adc
in
pop
cli
dec
and
xor
inc
pop
add
sub
jae
in
ret
pusha
mov
sub
inc
cmp
repz
inc
dec
xchg
xchg
jge
cmp
(bad)
loopne
pushf
dec
push
fnsave
pop
lock
int
cmps
mov
or
loope
fild
aaa
cmp
sub
mov
sbb
lods
(bad)
fcom
mov
mov
dec
mov
loope
ret
fild
scas
ja
imul
xor
push
sub
test
pop
jmp
mov
jle
sub
cwde
data16
ss
dec
push
aam
jbe
jae
and
fwait
imul
outs
sbb
xor
cmp
(bad)
sub
push
cmp
cli
scas
inc
iret
retf
sbb
and
xlat
pop
in
push
ror
mov
shl
call
outs
add
sub
test
ds
pop
out
or
int3
jmp
xor
mov
mov
push
cwde
xor
jb
mov
jo
sbb
inc
mov
(bad)
and
retf
in
rcr
xchg
sbb
sub
add
xchg
out
ret
(bad)
cmp
sub
xchg
jne
dec
cmps
fmul
mov
jno
mov
mov
lods
cmp
mov
add
add
mov
mov
push
clc
imul
pop
lds
out
dec
mov
or
mov
cmp
pop
fidiv
int3
xor
lock
popa
cmp
inc
loope
sub
mov
je
mul
inc
mov
cmps
push
jp
cdq
push
popa
cli
adc
std
and
sbb
pop
lea
ffreep
mov
in
loopne
mov
les
mov
aaa
dec
push
mov
imul
xchg
movs
stc
mov
push
sahf
mov
rcl
and
add
arpl
cs
test
fisub
pop
or
gs
stos
outs
inc
test
shl
dec
arpl
enter
pop
call
mov
sbb
xor
push
fcomp
inc
xchg
cdq
out
xchg
shl
sub
xor
fwait
repnz
adc
mov
scas
ds
mov
or
lock
pop
rcr
push
cmps
pop
bound
push
pop
inc
pop
or
call
retf
xchg
sub
xchg
in
jo
mov
dec
mov
aaa
mov
ss
jmp
into
addr16
shl
movs
pop
data16
popf
xor
cmp
sbb
(bad)
pushf
mov
sahf
dec
mov
sahf
popa
dec
mov
cmp
push
out
mov
mov
jg
inc
ds
xor
inc
sub
push
xor
ret
mov
or
test
mov
sub
xor
and
cmp
int
sbb
(bad)
std
mov
jno
xor
dec
mov
mov
fwait
lods
sahf
lea
xchg
popa
adc
add
push
mov
pop
pop
pop
mov
inc
stc
cmp
push
cli
inc
push
cmp
mov
out
sub
push
and
adc
and
jge
jmp
scas
(bad)
push
inc
mov
bnd
jmp
mov
pusha
add
cs
xor
mov
fisubr
lds
out
jle
xor
sub
es
xchg
call
jnp
mov
push
dec
mov
jecxz
mov
outs
push
cmp
lods
into
add
mov
xor
pusha
mov
pop
or
mov
dec
adc
lock
jno
mov
scas
rcl
cmp
test
aaa
rdmsr
cdq
repz
pop
jmp
inc
cmp
cmp
pop
ins
inc
pop
cli
mov
jnp
pop
xor
adc
xchg
xchg
push
idiv
push
cmc
jbe
aam
fcmovnbe
push
mov
xchg
sub
scas
or
mov
mov
pop
push
fist
cmp
out
dec
mov
jb
sbb
(bad)
movs
outs
fs
or
xchg
sbb
fiadd
test
ja
mov
ins
neg
je
inc
int
cmps
shl
loopne
adc
out
xchg
jns
inc
inc
pushf
or
adc
dec
mov
xchg
aam
test
call
jmp
test
push
jl
mov
test
retf
pop
addr16
jp
cmp
cdq
retf
pop
ins
repnz
cmp
sbb
push
call
add
out
jns
(bad)
lahf
mov
mov
adc
aam
ins
mov
jnp
scas
in
into
mov
sub
out
push
cmp
xor
push
mov
stos
out
int3
in
sub
pop
push
jns
jl
mov
add
and
sbb
jge
pop
cmp
dec
mov
push
pop
fdivr
xchg
mov
stos
push
xor
sbb
add
call
not
pop
push
mov
js
in
in
scas
mov
int
rcl
fmul
pushf
xchg
cmp
pop
mov
gs
retf
aad
shl
std
and
mov
xchg
xor
sbb
pop
aas
cmp
(bad)
mov
fs
pop
in
inc
mov
and
mov
or
inc
rep
or
js
pop
xchg
xchg
mov
jne
mov
sbb
mov
mov
pop
mov
mov
jno
jo
push
and
movs
fldenv
shr
mov
cmp
shl
(bad)
push
adc
adc
lods
cmp
test
jmp
xchg
pop
sub
sub
xor
push
pop
or
mov
das
xor
mov
and
retf
xchg
mov
xchg
xchg
or
ds
out
(bad)
loop
inc
out
or
test
mov
aad
dec
loope
idiv
xchg
loopne
xor
xchg
hlt
ins
je
sar
cmp
mov
push
push
or
add
xor
jbe
and
adc
sub
dec
or
jae
mov
js
pop
cwde
jecxz
sub
sbb
arpl
sub
jo
inc
loopne
xor
push
sti
push
push
mov
loop
and
xchg
push
out
mov
adc
(bad)
fcomp
add
jp
adc
jmp
inc
sti
jb
or
xor
imul
(bad)
xchg
mov
add
cli
jae
fimul
mov
mov
jp
and
cdq
int
ror
jmp
mov
or
or
pop
xor
sahf
popf
fs
or
outs
leave
icebp
jo
sbb
push
sbb
dec
cs
aam
sahf
jmp
cdq
sbb
aam
hlt
shr
loope
xor
mov
xchg
dec
loop
mov
icebp
mov
imul
lahf
shr
ret
mov
gs
sbb
jns
out
mov
mov
aas
in
outs
mov
cdq
or
scas
xchg
mov
into
loop
inc
fidivr
(bad)
mov
adc
cmps
(bad)
repnz
loopne
pop
je
imul
iret
mov
and
or
pop
ds
dec
das
ss
cli
dec
xchg
cmps
(bad)
or
test
add
div
xchg
aas
cmp
mov
add
push
sub
xchg
in
pop
pop
mov
out
loop
addr16
xor
rcl
cdq
fdivr
jecxz
arpl
push
dec
sbb
or
jmp
scas
jns
xor
adc
fdiv
mov
pop
jne
xchg
xlat
mov
jb
cmps
pop
cld
mov
js
push
pop
(bad)
xchg
pop
add
outs
test
pop
(bad)
test
sub
or
xor
in
pop
test
aad
adc
int3
cmp
and
xor
int
push
ds
dec
inc
mov
push
push
ins
xor
fprem
and
js
cmp
dec
xchg
inc
iret
cmp
cld
cli
sbb
arpl
jg
pop
xchg
popf
call
aaa
sbb
lea
neg
les
jae
xchg
mov
xlat
retf
or
arpl
mov
lea
lea
pop
add
mov
or
cld
fwait
inc
xor
in
push
mov
push
xchg
adc
xor
mov
imul
push
adc
jno
jge
ficomp
fs
repz
add
adc
pop
xchg
pop
push
mov
push
jmp
pop
call
and
mov
or
xor
jp
sbb
jp
(bad)
xchg
out
loop
cmp
das
xchg
pop
adc
das
pop
out
push
mov
es
nop
xor
jbe
push
cmp
cmps
xor
jl
out
add
retf
dec
sub
in
cld
popa
sbb
mov
in
mov
add
mov
or
add
mov
add
sbb
or
adc
fwait
xchg
pop
pusha
inc
sub
adc
stos
(bad)
pushf
mov
jmp
std
pop
mov
mov
shr
rol
jnp
push
push
and
int
dec
cmp
es
push
das
rcr
bound
int3
shl
push
add
adc
imul
jl
xor
ret
cs
push
pop
mov
ret
shl
inc
stc
jno
mov
mov
mov
outs
inc
xchg
pop
mov
repnz
mov
mov
cmp
cmp
popa
mov
daa
cli
mov
jp
test
aaa
jecxz
xchg
fwait
ret
movs
cmp
xor
jne
mov
popa
lods
adc
push
fxch
pop
xchg
or
out
mov
or
cmp
stos
fwait
cmp
ds
adc
retf
mov
jmp
pop
fistp
rcr
push
inc
pop
sbb
outs
adc
and
movs
mov
or
mov
mov
mov
push
cmps
sub
mov
push
mov
add
(bad)
adc
loop
test
xchg
rcl
xor
stc
aam
inc
shl
push
(bad)
fadd
jecxz
sbb
stc
iret
mov
push
xchg
repnz
mov
mov
xor
cmp
pushf
in
stos
mov
cdq
pushf
sbb
movs
lea
outs
and
ds
mov
adc
or
mov
adc
loopne
ror
fsub
adc
and
xchg
and
mov
adc
test
adc
mov
xchg
inc
pop
mov
adc
js
push
inc
loopne
and
(bad)
push
addr16
movs
hlt
fs
add
mov
and
cmpps
movs
and
sub
adc
inc
pop
mov
add
xor
jge
loopne
rol
cmp
xor
jmp
push
fsub
stos
xor
xor
cmp
pop
jmp
sub
and
mov
pop
scas
arpl
push
push
test
cmp
jns
or
sti
pop
add
call
out
xchg
aas
push
jnp
cli
push
dec
xchg
ds
and
dec
aam
sbb
sbb
retfw
pusha
and
add
stos
out
aad
scas
add
sub
pop
add
(bad)
daa
xlat
push
test
rcl
adc
and
setno
cmps
add
sub
xchg
enter
and
mov
ret
add
retf
and
loopne
dec
adc
mov
mov
ret
or
sahf
xchg
sub
fsubr
sub
xor
aad
movs
outs
mov
enter
lds
scas
adc
dec
dec
jb
call
retf
cmc
sub
sbb
mov
sbb
cmc
fdiv
ret
mov
or
aas
cmp
scas
or
dec
xchg
in
push
(bad)
cmc
mov
call
adc
les
test
out
neg
mov
jp
push
test
pop
lock
cmp
clc
pop
lds
loope
outs
arpl
loop
mov
call
sti
retf
test
jecxz
dec
cmp
cmp
(bad)
test
mov
dec
mov
jnp
sti
jecxz
sbb
movs
aam
mov
loope
or
and
test
loop
or
mov
aad
xor
sbb
cmps
lea
test
test
sub
rol
data16
mov
mov
arpl
and
jl
cmp
sbb
mov
(bad)
stos
fld
inc
jnp
ds
pop
xor
dec
int
pop
sbb
add
pop
mov
pop
mov
and
jbe
jne
movs
dec
nop
fwait
movs
cmps
iret
cmp
jp
mov
add
xor
pop
enter
gs
sbb
lods
cmc
jno
jo
jo
mov
add
idiv
push
repz
shr
test
add
cwde
mov
test
pop
sar
dec
icebp
loopne
xchg
adc
das
mov
jae
ror
or
sbb
jno
arpl
dec
stc
cmc
(bad)
cld
inc
call
add
popa
lods
mov
mov
clc
jmp
mov
lods
sub
dec
lods
mov
add
mov
into
sub
push
or
adc
sub
mov
xor
movs
out
aam
lods
mov
xor
test
bound
cwde
clc
idiv
into
out
popf
(bad)
jle
stos
xor
dec
xchg
mov
xlat
jbe
ja
into
sub
push
dec
cmp
jmp
(bad)
dec
sub
xchg
adc
mov
push
inc
adc
dec
test
mov
and
je
or
das
mov
ss
push
pop
js
sbb
imul
mov
or
xor
mov
xor
jmp
shl
outs
cdq
mov
mov
in
cdq
add
push
sar
mov
mov
inc
jg
ficom
cld
div
ret
call
test
popf
lds
cli
ret
xchg
cmp
retf
jae
aas
enter
fwait
jecxz
movs
jmp
es
(bad)
adc
and
lahf
sub
xchg
jb
stos
mov
ret
test
jae
push
mov
add
and
dec
repnz
fcom
fs
jmp
mov
retf
mov
dec
lods
les
je
clc
sbb
outs
ins
out
scas
aam
mov
xor
push
or
sub
xchg
(bad)
jge
movs
pop
xlat
cmp
lahf
aam
retf
scas
pop
sbb
leave
or
mov
dec
sub
dec
add
loope
sub
fs
test
mov
(bad)
das
in
xchg
ds
(bad)
fnstsw
out
addr16
pusha
sub
mov
adc
jmp
bound
mov
in
xchg
add
iret
inc
sub
push
mov
enter
and
ficom
(bad)
dec
push
pushf
mov
push
sbb
mov
pushf
imul
mov
mov
xor
loop
cld
and
cld
dec
pop
push
add
repz
retf
mov
inc
pop
mov
je
lds
xor
stos
mov
pop
outs
in
add
test
inc
cmps
push
and
popf
es
lods
shl
ret
aas
sbb
push
ss
sbb
xor
ficomp
pushf
pop
add
jne
fadd
cmps
pop
outs
mov
dec
jge
out
mov
mov
jns
out
jle
jle
outs
push
sbb
mov
cli
test
pop
cmps
call
dec
pop
cmp
jns
nop
push
or
test
pop
lock
addr16
xlat
push
xor
icebp
pop
or
in
out
sar
xchg
loope
and
icebp
mov
dec
shr
in
shl
mov
dec
jle
xor
jbe
shl
jmp
sbb
sub
push
jmp
in
push
mov
jo
mov
jecxz
xchg
ins
test
stc
stos
sub
ins
sbb
out
push
dec
out
loopne
mov
jmp
sbb
int3
mov
push
jecxz
sub
mov
in
lock
movs
ds
and
pop
out
ins
xor
jae
xor
inc
mov
arpl
mov
and
je
cli
cmc
or
sbb
and
stos
in
sub
mov
stc
cmp
xchg
add
shl
mov
test
je
pop
xchg
lods
add
xchg
mov
mov
mov
cmp
rol
inc
test
cld
out
pop
fiadd
sbb
jne
(bad)
mov
mov
outs
(bad)
cld
pop
mov
fisttp
movs
xchg
out
adc
ja
mov
loope
ret
jb
icebp
les
in
lods
sahf
popa
cli
pop
popf
adc
xor
lahf
nop
sbb
iret
cmps
xchg
xchg
push
xchg
push
dec
(bad)
sbb
mov
dec
fwait
jns
sub
jne
not
jns
loope
and
arpl
sub
call
adc
mov
sbb
add
and
aam
push
out
adc
scas
jecxz
push
add
repnz
inc
fimul
pusha
mov
sub
int3
cmps
sub
aam
dec
pop
adc
mov
lea
xchg
and
test
ins
in
lahf
scas
(bad)
push
pop
jnp
inc
dec
je
outs
retf
sbb
cmc
js
pop
shl
push
jecxz
jbe
or
in
push
fisttp
das
int3
sar
pop
test
js
adc
xchg
mov
pop
mov
retf
mov
(bad)
cld
(bad)
jns
mov
ja
ja
std
loop
jmp
jecxz
mov
fisttp
xchg
sub
ins
add
jp
jge
mov
sub
and
dec
(bad)
(bad)
push
or
pop
jge
loopne
mov
cmp
cli
aam
and
loope
lods
lods
mov
call
call
sar
pop
push
ficomp
ds
inc
div
dec
inc
(bad)
retf
cs
inc
push
daa
xchg
jmp
repnz
xor
dec
stos
mov
sbb
dec
mov
jg
mov
push
ror
enter
aas
ficomp
(bad)
sbb
push
sub
push
fnsave
daa
(bad)
leave
inc
mov
or
sub
xchg
add
sbb
clc
ret
lahf
movs
in
xchg
(bad)
pusha
sbb
dec
cmps
int
nop
xor
retf
inc
idiv
push
cmc
pop
jne
es
fxch
repz
xchg
xor
inc
fisttp
pushf
aaa
inc
hlt
cs
scas
lods
ja
stc
sahf
sbb
xor
scas
(bad)
dec
leave
frstor
mov
add
mov
fild
pop
jl
jae
sbb
cwde
inc
(bad)
daa
or
sti
nop
in
(bad)
sub
adc
mov
bnd
jnp
jmp
dec
loopne
bound
xchg
or
jg
imul
int3
jnp
test
sti
add
fcomp
lea
mov
add
lock
push
mov
iret
inc
outs
or
mov
ins
push
sbb
lods
cmp
sbb
or
aad
(bad)
or
mov
pop
(bad)
fisubr
(bad)
rol
mov
outs
add
idiv
push
addr16
cmp
fs
movs
repnz
not
movs
sbb
adc
test
inc
pop
lahf
mov
imul
(bad)
popf
retf
pop
mov
xchg
das
adc
ins
jmp
pop
cmp
mov
sub
ror
aad
sub
xor
fiadd
jb
test
push
jp
icebp
sti
js
pop
and
dec
mov
(bad)
out
mov
adc
out
push
les
or
in
gs
sub
jmp
cld
jo
xor
ret
aaa
add
(bad)
fxch
xlat
retf
inc
mov
in
mov
mov
nop
cmp
ror
fisubr
or
add
fcom
xor
int3
std
outs
inc
cli
outs
in
sbb
pop
es
push
dec
cmp
mov
pop
cwde
test
mov
nop
adc
js
enter
adc
sbb
data16
lods
and
mov
adc
ret
jb
dec
jp
jmp
je
dec
hlt
or
and
in
enter
mov
and
adc
out
push
dec
dec
mov
les
inc
adc
das
aaa
fistp
xor
jg
xor
je
push
mov
inc
dec
mov
clc
ins
xchg
dec
xchg
sbb
jle
jmp
adc
dec
add
xchg
mov
inc
lahf
inc
outs
pop
pop
inc
not
sbb
cld
mov
jne
pop
test
and
mov
shl
xor
(bad)
int3
retf
cwde
cld
sbb
ds
adc
jnp
fwait
pusha
in
and
(bad)
clc
fs
and
xchg
rcr
and
mov
or
pop
imul
push
aam
mov
test
jle
cmp
(bad)
jecxz
fsubr
aaa
les
lock
mov
gs
sub
xchg
aaa
adc
and
gs
xor
sub
xchg
cmp
mov
or
dec
cmp
sbb
xor
aaa
or
mov
inc
cdq
fidiv
(bad)
jmp
ror
mov
aaa
dec
adc
jbe
dec
mov
jns
(bad)
stos
push
fcom
iret
test
jge
push
ins
inc
ffree
cmps
dec
(bad)
mul
out
ins
rcr
(bad)
lahf
bnd
dec
movs
arpl
popf
inc
test
jns
xor
inc
mov
aad
push
mov
push
das
jl
xor
cmp
loop
outs
pusha
repnz
enter
mov
les
inc
pop
mov
hlt
repnz
gs
mov
sar
iret
std
or
xlat
mov
aas
push
bound
push
pop
pop
pop
rcl
mov
xlat
add
ja
xor
jmp
push
push
std
adc
loopne
jo
mov
ins
mov
test
(bad)
pop
mov
in
xchg
rcr
mov
add
outs
pop
dec
dec
cmps
rcr
cmp
or
loope
inc
mov
jns
pop
sub
jle
daa
sahf
push
fist
int3
and
mov
popf
fidiv
ins
int3
jno
inc
adc
out
gs
shr
in
pop
sti
mov
jg
out
xchg
stc
cdq
adc
outs
pop
push
jl
fild
push
mov
mov
mov
xchg
fcmove
xchg
mov
outs
cmp
push
mov
rol
ins
imul
movs
arpl
jmp
and
dec
mov
cmp
xchg
cmp
pop
xor
jo
ret
cmp
mov
mov
ins
in
loopne
sub
mov
loope
jle
pop
adc
(bad)
adc
push
mov
add
pop
push
loopne
cli
shl
(bad)
in
mov
sub
gs
and
inc
dec
sub
add
xor
lods
loop
pop
imul
dec
xor
sbb
jns
cmps
out
adc
sar
xchg
inc
xor
add
mov
pop
aam
test
xchg
test
xor
dec
std
es
sub
popa
retf
inc
mov
iret
(bad)
test
ret
sub
push
sti
and
sbb
adc
cdq
mov
loope
hlt
lea
sar
and
jb
comiss
xor
dec
cs
inc
cmp
cmp
add
sbb
rcl
mov
data16
outs
lds
or
jmp
xchg
add
or
call
mov
mov
cli
int3
inc
xchg
je
test
cmp
mov
add
arpl
cs
jg
xor
fdivrp
sbb
or
xor
xchg
lahf
sub
mov
cmps
xchg
xor
std
add
cli
xor
jo
mov
fnsave
push
in
pop
ficomp
inc
mov
jmp
cmp
je
enter
push
hlt
(bad)
pop
pop
sbb
das
xchg
xchg
sbb
xchg
lods
or
xchg
inc
push
push
xchg
loop
jmp
into
dec
jbe
fldenv
inc
cmp
xchg
aaa
rcl
loop
adc
push
lods
xchg
adc
sub
hlt
js
sbb
push
shl
shl
inc
push
in
loope
jecxz
mov
adc
aas
mov
aaa
cld
xchg
ins
sbb
lods
xchg
inc
and
shl
xchg
sub
dec
jg
jmp
(bad)
arpl
mov
loope
cmps
dec
popf
jp
sbb
cli
daa
(bad)
(bad)
js
mov
xor
sbb
je
std
or
jmp
jns
mov
pusha
mov
icebp
cmps
das
ror
xchg
fsub
xchg
adc
pusha
imul
lahf
popa
jge
sub
retf
and
leave
(bad)
push
cmps
out
out
sbb
cmp
data16
stos
mov
(bad)
cs
and
(bad)
jae
(bad)
xchg
icebp
mov
out
out
out
imul
xor
adc
(bad)
(bad)
sub
push
inc
int3
cld
xor
xor
mov
jge
shl
iret
fwait
pushf
sbb
sbb
mov
in
inc
mov
not
jmp
cmc
dec
push
loope
stos
cmc
xchg
ins
jl
pavgw
push
or
repz
retf
pop
xchg
(bad)
rep
jns
pop
loop
mov
push
mov
scas
jb
fcom
out
inc
lods
dec
and
xlat
cdq
mov
mov
mov
pop
cmp
(bad)
mul
push
sub
scas
mov
(bad)
push
mov
push
or
mul
in
cmp
cmc
aas
mov
push
leave
or
mov
sbb
push
mov
cdq
pop
inc
shl
(bad)
xchg
(bad)
push
mov
sub
sbb
mov
aas
jbe
in
cmp
sbb
add
mov
jg
sub
xchg
jg
jns
or
das
fdiv
cmc
xchg
rol
dec
sbb
cdq
xor
clc
sub
cmp
xor
arpl
sbb
fild
cmp
(bad)
aas
ss
jg
pop
inc
retf
jmp
cmp
mov
inc
adc
jmp
sub
sbb
add
pop
sbb
pop
mov
mov
mov
jg
test
cdq
sub
cdq
in
sub
and
daa
(bad)
xlat
and
mov
in
or
inc
sub
or
mov
xchg
jecxz
int
ss
push
add
dec
stos
jge
out
lds
cld
inc
aas
jo
lock
sbb
mov
mov
pushf
pop
adc
xor
inc
test
clc
out
rcl
mov
mov
imul
loop
loop
jl
shr
(bad)
sbb
pop
cdq
mov
out
ror
mov
mov
lock
in
add
lock
mov
test
jne
imul
add
repnz
pop
std
movs
push
jnp
dec
xchg
sbb
push
fidivr
push
fstp
sbb
adc
or
add
dec
std
(bad)
fcmovnbe
out
xor
sbb
push
das
mov
add
dec
jnp
or
sar
test
jp
cmp
and
mov
lods
fidiv
sub
pop
add
sbb
xor
push
jge
push
test
or
mov
aaa
inc
jne
out
push
fstp
(bad)
dec
mov
loop
es
sub
dec
bt
sub
lods
add
js
mov
jbe
dec
inc
scas
leave
jl
push
pop
sti
mov
jecxz
mov
pop
ins
std
mov
es
outs
daa
mov
or
test
adc
mov
ret
cmp
inc
xor
jmp
add
mov
xchg
inc
fisttp
add
outs
ins
test
xchg
lock
int3
loop
test
into
retf
int
fiadd
outs
mov
mov
mov
or
aaa
fisubr
adc
ja
push
iret
mov
xor
fdiv
mov
loopne
aaa
mov
dec
ret
test
sbb
aaa
sub
pop
xchg
stos
imul
repnz
mov
loopne
cmp
pop
or
lods
push
pop
out
aaa
push
js
enter
cmp
push
xchg
mov
mov
push
add
dec
push
or
iret
sbb
sub
cwde
mov
repz
jns
retf
(bad)
(bad)
push
(bad)
sti
mov
mov
mov
jl
shr
push
pop
daa
in
shr
gs
sub
shl
pop
inc
pusha
test
mov
mov
daa
pop
xor
inc
push
add
sub
addr16
test
in
jnp
mov
cmp
and
jg
(bad)
cmp
pushf
xchg
(bad)
out
sub
sbb
and
dec
ret
push
shl
xchg
lock
cmp
adc
add
pushf
inc
popa
inc
lock
mov
fmul
repz
jecxz
jmp
mov
loopne
jb
mov
and
loop
xchg
std
add
pop
ficom
dec
pop
jns
inc
lods
jnp
pop
iret
inc
sub
aas
inc
cmp
cmp
sbb
sbb
fadd
dec
retf
dec
jnp
or
iret
cmp
pop
imul
cmp
mov
pop
push
test
call
jns
call
adc
out
fwait
dec
aaa
push
mov
out
and
movs
mov
call
inc
std
(bad)
mov
ja
out
retf
loop
push
fcmovb
adc
push
(bad)
pop
call
in
xchg
add
mov
pop
xlat
mov
inc
icebp
addr16
mov
pop
xchg
pop
push
std
std
add
into
jmp
pop
gs
ror
inc
and
or
movs
lods
lds
sub
in
ins
sbb
and
jno
inc
xor
clc
push
sub
inc
stc
int3
and
pop
cli
fmul
dec
mov
iret
adc
fbstp
inc
sub
xor
jb
pushf
pop
mov
mov
mov
add
repz
dec
jmp
bound
rol
push
sti
cmps
push
mov
push
inc
xchg
(bad)
retf
jp
push
repnz
push
cdq
push
rcr
mov
lds
test
sub
int
iret
(bad)
pop
sar
xchg
test
nop
popf
ins
mov
pop
cmp
mov
jle
loopne
(bad)
ss
jnp
and
loopne
jmp
push
test
test
outs
dec
sub
and
dec
cmps
outs
inc
xchg
cmp
push
adc
mov
cmc
add
jnp
mov
dec
enter
or
int
imul
pop
mov
mov
lock
mov
ins
mov
and
(bad)
popf
(bad)
jl
call
lea
daa
push
pop
xor
in
repz
sub
inc
mov
das
mov
bound
pop
xchg
rcl
inc
(bad)
movs
ja
inc
xchg
cmp
mov
out
jg
dec
into
jne
test
out
pop
push
mov
retf
adc
and
scas
mov
sbb
in
inc
pop
sbb
pminub
push
dec
cmp
(bad)
ins
pop
and
inc
add
inc
pop
xor
sub
pop
sbb
fild
xchg
fstp
dec
sbb
mov
mov
test
or
clc
das
mov
dec
test
cmp
(bad)
stos
pop
jne
icebp
pop
xchg
sbb
jge
fnstcw
xlat
inc
ds
sub
cmps
cmps
sub
add
pusha
and
sti
dec
jmp
fisubr
stos
sbb
ins
(bad)
in
jmp
xchg
add
mov
outs
dec
stc
aad
lds
shl
out
xor
cmp
cs
inc
inc
dec
fsub
stc
jnp
pop
sahf
adc
arpl
test
push
adc
jecxz
push
je
lahf
dec
aas
inc
jmp
sub
mov
mov
inc
(bad)
scas
xlat
in
out
push
lods
adc
(bad)
stos
(bad)
std
push
sub
and
popa
lock
mov
mov
xchg
out
adc
sub
sub
fadd
sub
sub
push
ret
xchg
push
lods
dec
clc
adc
fsubr
cmp
xchg
push
pop
pop
mov
jns
cmps
leave
imul
pusha
sbb
ret
cmp
ja
movaps
xor
push
xor
or
sub
shl
jbe
lods
push
pop
mov
and
jnp
scas
div
subps
jnp
sti
jbe
mov
leave
idiv
inc
dec
cmp
out
adc
mov
or
cmp
out
inc
int3
es
inc
jno
push
dec
jbe
jmp
xchg
sbb
and
mov
push
mov
cdq
rcl
mov
into
icebp
xchg
jl
stc
mov
fnstenv
fsub
icebp
aaa
mov
sbb
mov
in
imul
push
loop
std
retf
inc
jae
call
aad
fisttp
cmp
adc
push
jp
lods
or
stc
cmps
jno
(bad)
and
push
mov
popa
fwait
fwait
xchg
sub
sti
cdq
or
mov
xchg
out
arpl
xchg
sub
in
sub
mov
data16
sar
repz
xchg
adc
mov
pmulhuw
bound
jmp
sbb
mov
and
call
(bad)
jae
in
adc
cmp
push
cs
xchg
out
(bad)
sbb
test
jne
addr16
adc
jnp
push
inc
dec
inc
cmp
jns
and
mov
dec
retf
pushf
mov
add
pop
out
push
cmp
jmp
jl
mov
lea
mov
adc
cwde
xor
adc
(bad)
pop
es
jno
dec
pop
jmp
in
fadd
cmp
getsec
lods
stos
push
sub
inc
ja
(bad)
cli
adc
mov
cmp
imul
mov
sbb
in
mov
adc
rcl
fdivr
imul
xchg
call
mov
fwait
test
loop
push
jae
call
inc
scas
sub
push
adc
or
retf
jmp
das
pop
sbb
sbb
rcr
pushf
dec
and
push
aad
in
stos
cmp
push
inc
mov
xchg
test
pop
inc
loop
int
mov
(bad)
and
inc
add
mov
std
aam
sbb
push
xchg
push
inc
push
in
das
ja
jp
(bad)
aad
push
stos
(bad)
adc
pop
push
sbb
inc
mov
aad
mov
dec
stos
jmp
shl
and
pop
out
jae
bound
scas
xchg
(bad)
outs
jo
push
push
cld
ss
movs
pop
jl
in
dec
in
shl
test
shl
jge
retf
in
ss
mov
xchg
aas
int
cmp
mov
sbb
in
cmp
test
out
shl
ret
add
sbb
cwde
test
inc
fild
dec
add
xchg
cmp
push
xchg
inc
je
adc
std
xor
in
call
ins
clc
cmps
(bad)
int
outs
cmp
pop
cmps
add
push
dec
push
inc
icebp
(bad)
dec
xchg
pop
retf
xchg
in
movs
psubsb
and
mov
jno
inc
mov
sub
mov
add
mov
shl
add
out
int3
pop
pop
scas
pushf
or
arpl
stos
lds
idiv
mov
mov
shl
or
dec
mov
sub
jae
call
mov
mov
loopne
cwde
test
xor
cmps
std
imul
out
clc
xchg
fisttp
popf
sub
sar
hlt
sbb
loopne
pop
mov
adc
dec
inc
mov
push
addr16
dec
scas
dec
sahf
aad
retf
test
sti
inc
jmp
or
sub
aad
and
cs
push
dec
int
adc
cmp
pop
pushf
(bad)
cmc
adc
or
psubusb
cmp
and
mov
in
mov
adc
in
cdq
cmp
xor
jg
daa
or
rol
adc
in
gs
xchg
aam
in
lahf
add
lods
cmp
aam
aaa
lahf
cmc
push
sub
mov
xor
stos
add
xchg
jg
fmul
xchg
fmul
adc
icebp
mov
test
retf
lds
jle
in
neg
xchg
and
and
sub
nop
pop
lods
ins
jno
xchg
dec
cmps
mov
pop
xchg
sbb
movaps
test
sub
push
(bad)
stos
cld
popf
and
xchg
neg
jno
scas
enter
jecxz
ret
xchg
out
pop
push
les
and
dec
push
push
enter
cmp
mov
or
mov
xchg
jo
fld
imul
shr
xchg
adc
jns
(bad)
std
inc
pushf
stos
into
test
mov
fldenv
(bad)
into
cmps
dec
ja
lea
adc
outs
mov
mov
and
push
xor
out
ret
mov
mov
call
push
int
daa
rcr
add
xor
or
inc
stos
ds
ins
push
pusha
push
lea
pop
test
and
rol
mov
push
daa
stos
(bad)
jo
ror
mov
push
xchg
js
sahf
into
int3
xlat
das
aaa
cdq
or
xlat
push
call
es
ret
popf
fisttp
push
pop
xchg
cmp
inc
xor
jns
and
mov
inc
push
inc
sbb
push
sub
sub
jmp
or
add
dec
in
push
xor
inc
mov
cmp
aas
mov
jl
sub
cmps
pusha
sbb
push
(bad)
inc
inc
xor
pop
sub
mov
(bad)
imul
mov
adc
retf
push
stos
add
movs
dec
xlat
test
sub
jmp
icebp
and
mov
xchg
ret
lods
int
xchg
out
push
and
shl
or
mov
xchg
out
mov
popf
dec
ret
push
(bad)
(bad)
ja
retf
ficom
pop
jl
in
pop
(bad)
iret
das
inc
pop
dec
dec
and
call
inc
mov
js
mov
cld
pop
or
rcl
clc
cmps
cli
je
and
dec
dec
fist
fdiv
push
(bad)
adc
sbb
jbe
fdivr
add
sahf
jg
addr16
dec
mov
xchg
lods
dec
pop
arpl
daa
and
lahf
(bad)
into
stos
sahf
lock
lods
add
fcom
mov
loopne
popf
lods
(bad)
ins
dec
aad
cmp
outs
bound
(bad)
retf
xchg
mov
loope
iret
push
jbe
mov
mov
mov
mov
inc
pop
push
adc
test
mov
fiadd
ss
pushf
mov
inc
xchg
sub
adc
loope
xor
adc
cmp
pop
sar
(bad)
pusha
pop
lahf
inc
data16
je
aaa
das
retf
daa
and
push
sub
(bad)
dec
mov
push
mov
stos
xchg
je
dec
loop
pushf
cmp
retf
fldcw
pushf
in
nop
cld
into
fisub
popa
stc
push
fcmovu
inc
pop
add
xchg
(bad)
cs
scas
sbb
mov
scas
lahf
push
stos
call
sub
cmp
fidivr
not
cwde
enter
or
push
jmp
imul
lock
dec
ss
inc
fs
jge
pop
mov
(bad)
int3
mov
in
(bad)
mov
and
and
mov
jae
xlat
dec
addr16
adc
add
jne
dec
mov
jmp
mov
mov
adc
test
mov
mov
cmp
or
hlt
pop
pushf
and
movs
push
pop
sub
mov
pop
inc
mov
xchg
js
mov
xlat
dec
push
stos
call
lea
and
iret
xor
enter
rol
imul
xor
aam
leave
fisubr
xchg
stos
stc
f2xm1
or
and
out
mov
push
mov
loop
mov
test
inc
ja
mov
jmp
sar
push
addr16
fcomp
add
in
jns
add
aam
xchg
inc
xor
jp
sub
mov
xchg
out
int3
test
(bad)
icebp
push
mov
mov
loopne
add
aad
test
mov
inc
cmp
add
sub
pop
ror
cmps
inc
cmp
(bad)
xchg
jae
mov
mov
jae
pop
pop
cmp
ja
add
and
add
imul
and
icebp
mov
cmp
je
pop
fstp
xlat
xchg
xchg
sbb
mov
cs
pop
fidiv
aam
cmp
mov
not
(bad)
data16
js
rcr
test
mov
icebp
push
sbb
mov
pop
inc
adc
inc
push
sbb
fwait
das
xor
mov
add
das
adc
dec
imul
xor
dec
add
fnstcw
mov
rcr
out
jbe
sub
(bad)
stos
pop
add
into
adc
or
nop
xor
stc
imul
pushf
dec
pop
test
push
int
repnz
call
inc
inc
mov
fstp
ret
clc
cmp
cld
aam
shr
dec
inc
test
xchg
cmp
je
pop
dec
mov
xor
and
xchg
scas
dec
pop
cs
add
cmp
cmp
mov
loope
cdq
(bad)
mov
adc
cs
mov
fdiv
es
xor
pushf
sbb
push
gs
icebp
sbb
add
fcom
and
scas
jp
retf
out
xchg
jo
adc
test
ja
cmp
gs
pop
test
sub
mov
adc
jecxz
outs
push
dec
add
les
sub
mov
cmp
js
sar
hlt
xchg
es
mov
es
in
inc
jmp
ror
inc
imul
inc
mov
dec
inc
dec
int
and
mov
sti
add
stos
push
js
push
mov
cld
ins
fmul
div
jmp
jl
retf
and
cmps
mov
cmp
adc
pop
scas
or
stc
xor
inc
push
lds
outs
jbe
inc
inc
mov
mov
nop
aam
dec
push
jecxz
dec
jbe
(bad)
rsm
clc
daa
inc
ins
popf
and
xchg
inc
dec
jmp
test
imul
loop
clc
cwde
or
fdiv
mov
jecxz
push
push
mov
dec
rcl
push
and
scas
(bad)
scas
and
lods
cmps
scas
js
stc
xor
cmc
sbb
jo
xor
call
push
jp
in
push
dec
xor
sbb
mov
push
cs
(bad)
jno
jmp
cmps
(bad)
aad
out
or
jb
fidiv
mov
(bad)
mov
dec
stc
push
xchg
loope
fsub
addr16
cmc
jmp
ja
jg
jb
popa
aaa
sub
call
stos
shl
sbb
dec
inc
pop
mov
je
push
pop
test
in
add
add
in
xchg
in
pop
retf
sahf
jae
in
leave
push
loope
fwait
push
aad
cmp
pop
data16
mov
aaa
adc
mov
push
pop
mov
mov
cmp
adc
inc
mov
jns
arpl
nop
xor
add
imul
mul
icebp
dec
or
jmp
mov
(bad)
retf
sar
or
ss
fnstsw
imul
sub
mov
mov
mov
jg
ins
das
fs
jmp
sbb
retf
shl
xor
cmp
cwde
aaa
pop
jmp
repnz
gs
xchg
stc
cmp
fisubr
sub
test
lock
xlat
jae
xchg
pop
lds
mov
jge
imul
push
fadd
aaa
xchg
xchg
in
ja
push
jp
outs
add
scas
fstp
jno
mov
sbb
test
cli
movs
mov
into
push
pop
shr
movs
sub
hlt
jmp
repz
mov
js
add
or
hlt
loopne
sub
ret
stos
mov
xor
sbb
ja
cs
(bad)
lea
sbb
popf
jg
or
dec
js
rol
pop
sbb
in
data16
and
dec
gs
mov
xor
and
cmp
xor
adc
out
mov
lock
dec
xor
fld
test
dec
cmps
pop
lfs
test
jo
cmps
iret
in
dec
inc
mov
or
into
in
jae
dec
add
(bad)
jmp
ret
push
cli
dec
inc
fcmovbe
fild
(bad)
shl
push
adc
cmp
stc
mov
cmps
sbb
lock
mov
outs
xor
retf
scas
aaa
add
pop
sahf
test
(bad)
cmp
rcl
call
sbb
pop
(bad)
loopne
ret
(bad)
ds
movs
les
mov
adc
mov
sub
jmp
movs
repz
rcl
mov
and
adc
push
push
les
mov
adc
cmc
aad
(bad)
nop
ss
aaa
xchg
add
add
call
call
push
enter
jl
mov
int3
xor
sbb
int3
shl
movs
sub
daa
movs
in
mov
sub
xchg
sub
adc
imul
fwait
add
mov
adc
pop
jns
add
cmp
dec
outs
outs
ficomp
xchg
jecxz
popf
adc
pop
shl
movs
sbb
jg
pop
in
push
test
sub
in
cmp
lds
mov
xchg
sub
loopne
or
push
pop
dec
movs
into
or
movs
push
in
add
and
ss
cmps
mov
retf
les
pop
xor
pop
mov
add
lods
fwait
rcr
jecxz
mov
or
sub
dec
cli
sti
xor
cmp
iret
cwde
dec
mov
dec
mov
cli
push
adc
out
or
dec
arpl
pop
rcl
pop
cs
and
mov
sub
sbb
jle
rcl
pop
fidiv
lods
add
ret
cmc
add
cmp
pop
mov
js
or
scas
add
fnsave
mov
loope
cmc
add
ret
or
mov
cli
dec
jb
fiadd
(bad)
jmp
dec
push
jno
aas
and
mov
cmp
mov
in
imul
daa
push
adc
aam
or
add
inc
xchg
or
jns
rol
dec
aam
outs
fbstp
cmc
daa
js
sbb
cmp
imul
dec
fmul
xor
test
xor
dec
pop
mov
lea
inc
daa
(bad)
ja
in
sub
test
xor
cmp
ror
cmps
xchg
xchg
ret
sub
pcmpeqb
push
dec
add
mov
lds
jbe
cmp
sub
jecxz
mov
iret
jp
mov
cli
xchg
jecxz
inc
icebp
jb
and
test
push
es
hlt
xor
adc
test
aad
scas
or
or
jge
mov
mov
stc
jecxz
pop
enter
ror
cmp
mov
add
push
jno
stos
or
adc
nop
stos
mov
pop
or
cmp
inc
ror
sbb
and
ficomp
and
das
out
push
inc
dec
push
icebp
test
pop
ja
fidivr
call
mov
cvttps2pi
dec
mov
or
js
sbb
repnz
loopne
ret
push
pop
retf
dec
daa
lock
mov
inc
(bad)
fist
repnz
cld
mov
and
xchg
stos
cmp
and
mul
jp
cmp
daa
jmp
mov
dec
movntq
pop
pop
or
and
fldenv
mov
iret
in
cwde
fild
cmp
in
sub
fcom
sbb
inc
adc
mul
repz
int3
or
cs
sar
pop
push
ret
fisttp
xchg
repnz
lods
jne
adc
jmp
push
pusha
into
mov
jle
test
ins
test
jecxz
add
outs
dec
mov
xor
or
test
mov
iret
lock
fwait
imul
push
sub
push
out
sahf
leave
jl
dec
es
or
jmp
sbb
pop
movs
out
sbb
mov
std
call
neg
fs
mov
fimul
adc
pop
jne
in
call
loopne
test
jmp
sbb
adc
call
mov
mov
sub
or
cmp
in
je
es
mov
test
adc
out
cwde
lods
sub
dec
(bad)
(bad)
mov
xor
(bad)
and
lods
pop
nop
sbb
iret
cld
sub
loopne
sahf
push
movs
arpl
xor
dec
mov
dec
repnz
mov
rcl
lods
pop
aaa
std
pop
loopne
sbb
repz
imul
test
cmc
mov
cmp
jge
and
or
fsubr
pop
cmc
adc
ret
arpl
jmp
add
dec
ret
test
in
cs
in
mov
test
pop
movs
scas
jbe
mov
and
mov
and
pop
mov
mov
cmp
sub
xchg
or
enter
call
xchg
sub
in
cmp
int3
fidivr
movs
cmps
aam
push
cmp
adc
inc
xchg
ja
jg
lods
jne
fmul
aas
repz
sbb
pop
push
xchg
out
ja
and
stos
inc
dec
pop
repz
push
pop
push
jae
mov
mov
add
adc
xchg
hlt
lods
sbb
jle
mov
scas
pop
push
adc
je
test
adc
and
ret
ss
mov
sbb
in
mov
mov
fwait
(bad)
aas
dec
fdiv
and
sbb
es
js
mov
daa
movs
pushf
out
(bad)
(bad)
dec
dec
xor
or
and
shl
fwait
mov
xor
mov
mov
sbb
sub
and
popf
xchg
inc
pop
cmp
add
fs
call
lea
mov
mov
or
adc
add
sub
mov
sbb
or
or
and
and
sub
aad
ret
retf
fld
mov
enter
push
fstp
or
fimul
push
imul
pusha
dec
mov
repz
inc
retf
pop
imul
or
push
mov
ret
sbb
das
mov
cmp
jl
sbb
sub
int3
push
aad
xor
scas
fistp
mov
pop
sar
enter
retf
adc
sub
dec
hlt
xor
jg
jb
aad
dec
fdivr
ret
cmp
xchg
mov
mov
inc
not
dec
mov
aas
iret
pop
inc
fld
dec
xchg
sbb
cmp
in
mov
cmc
(bad)
mov
inc
addr16
ds
daa
mov
mov
adc
push
lds
add
pusha
inc
out
js
cmp
or
mov
retf
inc
int
shl
cwde
cli
fisub
xchg
jbe
sub
(bad)
aam
jg
stos
leave
adc
jo
mov
pop
mov
jmp
xor
jp
dec
ror
adc
fisub
jmp
mov
je
sar
mov
sbb
cli
cmp
cli
loop
and
jmp
int
sub
popf
sbb
daa
xchg
xchg
cmps
jo
xchg
pop
cmp
arpl
sbb
std
fnstcw
push
inc
pusha
adc
inc
sub
xor
sbb
jl
nop
(bad)
daa
ins
or
jns
fdiv
pop
adc
adc
imul
lea
rcr
sub
std
mov
pusha
dec
xchg
lahf
xchg
rcr
pop
aaa
outs
xor
shl
lds
ins
ret
xor
clc
pop
imul
bnd
cld
leave
mov
jbe
or
call
cmp
sub
sbb
add
pop
add
inc
in
cmp
add
adc
ror
inc
std
jp
(bad)
stc
das
and
or
pop
or
pop
aad
inc
inc
idiv
add
fadd
pop
mov
jae
xor
scas
or
and
or
push
enter
lahf
cmp
inc
inc
loopne
enter
add
dec
pusha
jae
adc
idiv
push
imul
test
nop
cld
out
sbb
mov
dec
inc
jbe
pop
imul
push
fwait
call
aad
bound
xchg
mov
jp
mov
dec
jae
aas
mov
sub
cs
or
cmps
in
jne
xchg
jge
xor
xchg
pusha
dec
fidiv
jge
mov
outs
retf
popa
and
push
loop
je
call
sti
and
jns
test
adc
push
ds
inc
ret
mov
add
call
stc
push
sbb
pop
movaps
mov
pop
clc
sbb
or
sbb
jge
ds
aas
adc
or
daa
out
imul
adc
(bad)
jmp
not
mov
adc
jne
xchg
push
es
(bad)
push
pop
neg
adc
sub
test
gs
xchg
pop
dec
call
(bad)
xlat
lods
pop
lods
add
push
pop
mov
mov
fwait
jae
xor
mov
jmp
int3
fnsave
cmps
mov
pop
or
shl
push
cmp
xlat
movs
push
mov
fs
imul
xor
mov
repnz
or
lock
aas
mov
cmps
jecxz
inc
cmp
push
leave
dec
jno
retf
int3
pop
or
jns
fnsave
mov
mov
ins
sbb
lock
lods
inc
mov
inc
imul
lahf
(bad)
pop
cmp
or
dec
mov
xchg
in
call
arpl
aaa
jg
je
(bad)
loop
or
jmp
jge
adc
push
jge
pushf
or
jmp
icebp
aad
mov
jg
push
cli
inc
sbb
xchg
mov
mov
cwde
add
pop
sbb
lss
pop
cld
das
fimul
repz
std
cmps
gs
repnz
lahf
xor
unpcklps
stos
(bad)
les
inc
test
mov
bound
sbb
push
into
push
fs
lahf
rcr
lods
lds
pop
sub
sub
push
push
lods
std
fcomp
mov
add
inc
ja
fcomp
shl
sbb
in
(bad)
int
adc
or
int
jmp
add
sti
pop
jp
ror
mov
ins
xchg
icebp
rcr
pop
jmp
pop
mov
mov
out
pop
pop
test
addr16
loop
and
retf
push
mov
add
xchg
push
ret
add
iret
pop
mov
call
rol
xchg
neg
dec
pop
cmp
enter
scas
(bad)
mov
or
and
push
jge
(bad)
jo
push
jmp
daa
aas
(bad)
repz
push
mov
jne
pop
jmp
js
sbb
rol
test
xlat
ret
(bad)
int
stc
in
fs
dec
das
popa
dec
imul
mov
lea
mov
test
data16
cli
pushf
loop
cmc
mov
add
jae
mov
data16
movs
mov
dec
push
fs
xor
fs
xor
sub
mov
push
pop
mov
dec
cmp
jb
xchg
in
pop
and
sbb
lock
scas
outs
pop
ja
mov
stos
das
int3
jmp
or
push
xchg
mov
pop
jb
xor
sub
sub
jmp
xor
jmp
mov
xor
adc
inc
and
cmps
push
imul
lds
ins
imul
xchg
int3
jae
jl
lods
pusha
shl
icebp
jmp
ins
loope
mov
fsubr
push
jnp
inc
mov
jb
arpl
adc
add
add
pop
cmp
pop
dec
aaa
push
dec
(bad)
sub
fs
fadd
dec
stos
inc
sbb
cmp
popf
aad
std
and
aad
and
dec
loope
aas
push
(bad)
xor
packuswb
test
addr16
ficom
popa
mov
or
dec
rcl
cli
retf
pop
xlat
pushf
stc
clc
aam
add
xchg
ficomp
xlat
jbe
jne
ja
or
jg
fidivr
adc
cli
sbb
adc
sub
and
xchg
dec
jae
pop
pop
xor
fcom
aad
xchg
mov
sub
pop
je
call
dec
jmp
mov
sub
jp
int
pop
out
mov
inc
or
pushf
ss
mov
pop
xchg
and
call
fidivr
rep
cmp
pop
hlt
jecxz
xchg
mov
sbb
bound
sbb
xchg
push
push
inc
jne
stos
mov
sbb
adc
xchg
jnp
jg
push
inc
inc
in
in
sbb
daa
daa
retf
cli
mov
ret
shl
cld
in
jns
cdq
jle
js
push
jmp
ds
int
mov
pop
(bad)
in
xor
mov
in
cmc
jno
cmp
sub
xor
jp
push
and
test
mov
add
retf
mov
sbb
push
dec
pop
xchg
dec
push
mov
sub
mov
(bad)
jp
xchg
imul
not
(bad)
cmp
jg
shl
dec
ja
retf
int
(bad)
xchg
pusha
into
dec
cmp
cdq
mov
xchg
lahf
out
pop
inc
dec
push
adc
sub
mov
jecxz
gs
ins
das
jno
fadd
pop
fs
daa
add
ins
iret
dec
pop
iret
popf
stc
xchg
adc
movs
mov
adc
dec
mov
mov
xchg
jle
cmp
mov
bound
je
fimul
ret
je
and
retf
iret
(bad)
xchg
add
xchg
ret
add
xlat
sub
add
repz
retf
popf
mov
imul
rcr
stos
xchg
cs
push
fidivr
cmps
and
out
shl
ins
jecxz
arpl
ror
sahf
xchg
stos
in
add
scas
inc
sub
jno
cmp
(bad)
cmp
mov
xchg
jle
add
fcmovnb
fnstcw
popa
or
inc
mov
addr16
mov
cmp
fnstsw
fnstenv
call
mov
add
lahf
sbb
das
out
repnz
sti
lahf
mov
mov
push
fisttp
mov
repz
(bad)
jp
pop
lahf
ins
push
(bad)
sbb
pop
out
inc
sub
clc
ds
imul
jecxz
and
mov
loop
fwait
push
mov
pop
sub
or
in
add
fild
add
cmc
loope
daa
cwde
and
add
xchg
cmp
aad
pop
add
mov
cmp
add
add
cmp
mov
outs
sub
inc
sbb
leave
and
scas
cld
xchg
mov
mov
fsubr
out
pop
mov
xchg
mov
push
cmc
and
aas
adc
jns
add
adc
imul
jae
setle
mul
aad
daa
jmp
cs
iret
cmc
sbb
or
inc
mov
and
(bad)
and
mov
ins
push
iret
aam
rcr
nop
aad
push
dec
repnz
push
mov
ret
out
cmps
mov
cmp
dec
lods
repz
ds
push
push
inc
fcmovnu
shr
(bad)
stos
daa
lods
xor
xchg
dec
xor
xor
jnp
xor
xor
in
inc
mov
pop
data16
adc
jb
out
fld
dec
cmps
dec
jae
out
pop
into
cwde
sbb
sub
fldcw
imul
addr16
push
dec
xchg
push
retf
hlt
push
xchg
cs
dec
sub
and
cld
repnz
push
or
sbb
(bad)
hlt
jo
cwde
push
pop
inc
mov
sbb
mov
mov
pop
and
mov
jno
mov
(bad)
int
fdivr
cmp
push
(bad)
jmp
cmp
mov
mov
mov
test
dec
sub
iret
push
or
jbe
lss
int3
hlt
cmc
cmp
sub
pushf
ffreep
push
push
sub
mov
lods
xor
sub
push
jle
sub
int
mov
xchg
adc
add
sbb
jns
imul
retf
ret
pop
aad
std
loope
iret
mov
fimul
fidiv
mov
idiv
ins
inc
xchg
and
mov
inc
and
lahf
scas
xchg
and
adc
cmc
mov
cmc
enter
aaa
push
mov
add
inc
imul
pop
mov
es
add
jg
dec
push
and
xchg
mov
pop
fucomi
dec
outs
clc
inc
(bad)
cdq
sub
adc
and
out
push
sub
adc
sub
jg
sbb
out
mov
pusha
jge
xchg
push
adc
std
sub
pop
movs
cwde
add
mov
pop
neg
inc
xchg
add
pop
add
fisttp
mov
add
fwait
nop
sbb
and
int3
mov
mov
neg
icebp
mov
nop
call
push
popa
imul
aas
retf
inc
jmp
sysret
scas
mov
add
icebp
xchg
inc
pop
imul
mov
pop
xchg
pop
std
xor
fwait
or
icebp
imul
inc
dec
imul
sub
dec
fwait
scas
push
shl
pop
ret
in
dec
xchg
out
in
jb
test
mov
bound
shr
mov
inc
add
xchg
ds
fwait
cmp
fsub
cli
pop
lods
loop
and
push
adc
and
aaa
mov
dec
imul
xchg
fcom
cwde
into
movs
aad
pop
inc
xor
int
cs
mov
sar
mov
outs
out
repnz
loopne
int3
test
sbb
gs
pop
lods
xlat
sub
ds
mov
pop
mov
mov
push
movs
fadd
xor
jne
sub
add
out
stc
je
(bad)
loope
and
xlat
aam
sub
fidiv
push
mov
or
cmp
test
in
scas
fnstenv
jno
or
mov
retf
sub
ret
faddp
push
repnz
xor
sub
pop
mov
pop
jbe
dec
in
pop
(bad)
pusha
imul
mov
push
push
and
sub
pushf
inc
pop
loop
or
data16
mov
inc
stos
add
fidiv
lods
jno
xchg
in
add
ret
jns
xor
dec
jns
ins
(bad)
add
cwde
sbb
ret
leave
xor
retf
into
pop
or
les
pop
loop
lahf
cdq
sub
mov
int
jnp
or
xor
mov
and
push
and
hlt
add
add
bnd
ds
add
push
fbstp
jo
aas
lock
push
dec
inc
call
mov
rcl
jle
add
or
test
loopne
(bad)
jmp
scas
adc
aas
pushf
mov
or
retf
mov
pop
cmp
leave
(bad)
cmps
(bad)
(bad)
mov
jo
dec
mov
jmp
ja
not
cmps
or
dec
pushf
push
into
sbb
cmp
jae
cmps
inc
mov
lods
pop
mov
fsub
push
nop
or
pop
jge
arpl
(bad)
sbb
cld
pop
jae
jnp
pshufw
addr16
aaa
xchg
cmc
jno
shl
out
mov
jns
test
mov
jp
sbb
sbb
sub
push
int
inc
sbb
push
out
jge
fwait
mov
ins
mul
sub
jo
nop
xchg
cmc
fisttp
call
out
jecxz
retf
lods
mov
cmp
and
mov
in
in
push
hlt
je
and
or
jns
cmp
adc
mov
es
jnp
gs
jmp
cmp
sbb
mov
add
xchg
inc
xchg
sub
and
add
xchg
xor
inc
jnp
sbb
inc
xor
je
cmps
sub
fcomp
rol
rol
test
push
mov
ins
pop
gs
jnp
jo
test
ret
stc
cs
push
outs
sbb
es
das
jecxz
inc
sbb
lods
aam
shl
sbb
mov
dec
cmp
(bad)
enter
sub
fcomp
mov
dec
push
fwait
and
mov
imul
sub
dec
mov
xor
pop
pushf
sar
cmp
ror
lds
call
sar
call
add
repnz
mov
outs
pop
jb
or
push
xchg
pop
gs
pop
out
fcmovb
aaa
mov
jecxz
cmc
sbb
xor
pop
call
cld
inc
in
pusha
inc
(bad)
pushf
sub
out
adc
cmc
sbb
lds
jne
mov
lea
hlt
jle
mov
mov
jne
mov
into
cmp
inc
call
mov
jp
fwait
jmp
(bad)
(bad)
fidivr
push
ja
xchg
icebp
lds
clc
lods
xor
mov
pop
pop
mov
movs
fcmovnu
mov
jp
cmps
scas
enter
gs
mov
inc
sub
sahf
and
push
ja
icebp
data16
std
xchg
pop
int3
cmp
pop
adc
add
out
aas
adc
jle
and
ror
out
push
int3
jne
ficomp
out
push
adc
push
jb
xor
test
adc
adc
xchg
jp
push
outs
(bad)
into
fsubr
jno
(bad)
imul
push
mov
ins
repz
dec
repnz
sti
and
jp
das
cmp
test
xlat
(bad)
clc
out
cmp
fwait
leave
xor
out
xchg
xor
dec
outs
xchg
add
nop
cs
or
xor
dec
rcl
in
and
sbb
inc
cmp
adc
lods
leave
pop
xchg
push
push
jae
dec
ja
adc
mov
adc
call
sbb
mov
loope
adc
xchg
pop
in
fistp
fisttp
repz
dec
dec
add
dec
aam
div
xchg
int
inc
arpl
xor
sti
cmp
sbb
xchg
pop
mov
mov
sbb
xchg
lods
(bad)
dec
(bad)
push
mov
or
or
or
add
pop
outs
in
retf
jmp
push
lock
mov
test
fwait
or
pop
out
addr16
xor
xchg
cmp
add
fld
daa
sbb
mov
cmps
cld
xchg
cmp
mov
push
inc
mov
cmp
jne
pop
cmp
sub
dec
loop
(bad)
out
pop
mov
shl
enter
or
enter
xor
outs
leave
pop
push
adc
cmp
sub
xchg
sub
scas
ja
pusha
in
mov
jecxz
sbb
out
xlat
dec
dec
(bad)
into
ror
movs
sti
daa
or
sbb
ret
dec
les
pop
xchg
push
push
lahf
mov
push
sub
(bad)
jmp
nop
popa
jmp
mov
loop
cmp
xor
pusha
push
mov
cwde
sar
inc
outs
stc
ins
sti
int3
or
call
cmps
jns
inc
jl
retf
test
into
sti
sbb
inc
das
stos
push
cwde
mov
ud2
sbb
pop
int
xchg
es
cmp
cmc
mov
repz
loop
or
cmp
fisttp
inc
cmp
pop
push
push
jns
imul
arpl
(bad)
aam
add
dec
movs
jge
cmp
cmc
movs
idiv
pop
bound
(bad)
inc
xchg
sti
sbb
mov
jno
mov
lods
xor
shl
imul
hlt
mov
sbb
adc
(bad)
das
mov
push
pop
xchg
call
cmp
fwait
sahf
push
cmp
in
jno
fiadd
stc
(bad)
out
mov
sub
shl
aas
fcom
add
mov
daa
mov
or
pop
loopne
clc
test
cmp
movs
cli
jae
adc
call
xlat
dec
push
jmp
inc
pmuludq
in
mov
scas
sub
add
xlat
dec
jb
fstp
lds
loope
xor
fwait
cmp
(bad)
or
add
push
(bad)
cmps
daa
test
rol
or
add
jbe
cmc
cmp
call
aas
mov
arpl
jbe
mov
test
ror
fld
std
jle
(bad)
fdivr
pop
push
pop
jne
aam
retf
add
(bad)
jae
shr
xchg
test
andps
icebp
push
cmp
and
xchg
retf
scas
pop
cmp
add
loopne
dec
out
cmp
jle
pop
mov
(bad)
loope
fs
retf
xchg
push
lods
lods
jmp
push
inc
inc
shr
leave
pusha
lahf
sti
(bad)
and
fiadd
out
adc
ds
cmp
sbb
xchg
jg
iret
pushf
inc
cmp
or
cmp
jmp
add
cs
ror
neg
movs
push
ins
lea
pushf
xchg
int3
add
js
test
sbb
xchg
sub
idiv
jle
mov
sbb
test
shl
jnp
mov
push
fst
lock
inc
test
(bad)
adc
cmp
inc
sqrtps
sti
out
ja
bound
adc
das
cmp
iret
dec
xchg
xor
or
mov
inc
adc
dec
sub
cwde
inc
adc
push
pop
push
pop
fild
pop
jg
sbb
(bad)
sbb
add
sbb
sub
and
jne
adc
das
addr16
pop
rcl
xlat
dec
(bad)
in
add
xor
fild
jno
(bad)
fimul
ret
addr16
pcmpgtb
in
iret
add
mov
cmp
jnp
push
les
daa
xchg
fstp
cmp
push
mov
jecxz
int3
or
sub
shl
shl
mov
xor
das
xchg
xor
scas
fisub
mov
add
pop
(bad)
lahf
cmp
aaa
xor
jle
dec
test
hlt
pop
data16
lods
push
sahf
add
jle
add
jmp
mov
nop
int3
fisub
xchg
pop
fcom
and
stos
in
xchg
push
add
movs
xor
test
pop
mov
div
cmp
add
xor
leave
lock
stos
cmps
jmp
mov
sbb
mov
aaa
ins
jmp
inc
xor
cmp
mov
stos
test
sub
xchg
mov
dec
mov
sbb
cld
scas
cmps
outs
imul
push
fnsave
mov
sub
mov
mov
sub
mov
mov
cmps
dec
int3
inc
(bad)
add
mov
xlat
sub
ss
jne
and
mov
sti
leave
data16
cs
sub
(bad)
lods
cld
jp
fcomi
fs
idiv
in
dec
lods
pop
shl
sub
js
loope
les
sbb
in
mov
rol
xor
mov
sbb
push
in
inc
sub
cmp
fabs
inc
in
adc
add
inc
xchg
repz
fisubr
inc
or
pop
lods
push
dec
mov
cs
pop
je
mov
add
mov
mov
sbb
jne
mov
jno
xlat
les
jae
aas
inc
cmps
or
mov
mov
fistp
das
out
add
jno
inc
mov
jno
clc
leave
daa
jnp
sbb
mov
or
ror
(bad)
push
icebp
scas
xchg
nop
adc
cmp
ins
rcr
bound
out
das
sub
mov
mov
stos
(bad)
movs
lock
mov
mov
inc
sub
pop
pop
jmp
sbb
test
pminsw
mov
add
cli
jo
(bad)
cs
push
test
imul
mov
sbb
and
mov
inc
mov
sub
inc
pop
push
cmps
xchg
aam
push
push
gs
xchg
dec
movs
cmp
sbb
adc
arpl
xchg
pop
in
add
idiv
and
pop
jmp
cmp
retf
inc
mov
pop
sub
ds
shr
sbb
out
xor
xchg
mov
js
adc
dec
cmps
fstp
xor
xor
das
loope
mov
xchg
rol
pop
xchg
inc
adc
dec
int3
jle
adc
lds
xchg
dec
ja
xor
push
mov
add
cld
xchg
cwde
mov
js
jp
outs
int
sbb
xor
xchg
out
jge
iret
jle
ins
jno
push
cmp
sbb
stos
jmp
add
leave
xor
hlt
xor
add
cmps
pop
out
outs
xchg
dec
sub
xchg
loop
test
inc
fwait
stos
fist
mov
out
mov
sahf
push
push
fcmovnb
bound
jge
lea
iret
sbb
push
xchg
xor
pusha
(bad)
addr16
and
loope
std
jge
jmp
nop
xchg
das
or
mov
mov
fwait
or
inc
mov
fist
and
lahf
loope
cmp
(bad)
lahf
and
and
test
xchg
push
les
and
lea
ss
adc
mov
and
ret
repnz
xchg
adc
fwait
push
dec
imul
adc
mov
mov
jecxz
ret
pop
out
pop
push
cli
ret
pop
ds
test
xor
stos
and
add
mov
push
ins
mov
in
mov
dec
rcl
adc
xor
pop
mov
xor
stc
jmp
fs
xor
imul
push
aas
das
xchg
inc
mov
mov
sub
push
leave
pop
cdq
sub
mov
jl
aas
mov
and
ds
test
pop
jmp
pop
push
push
adc
popf
cmp
jnp
outs
pop
retf
mov
xchg
ss
xor
cs
(bad)
jge
stos
adc
cmp
fisttp
xchg
and
dec
das
test
push
and
fstp
in
xchg
add
or
(bad)
(bad)
xchg
lds
xlat
adc
leave
mov
test
adc
push
test
out
into
lods
push
add
mov
cmps
std
test
mov
loop
mov
sub
sub
call
push
sar
push
fcmovne
and
and
fwait
les
jg
push
xor
inc
in
adc
scas
and
cld
mov
mov
cwde
mov
jecxz
cmp
fs
xchg
or
jmp
lock
cmc
inc
push
xchg
xchg
xlat
sbb
ins
add
nop
and
(bad)
out
fs
and
int
push
jae
(bad)
and
fidiv
pmaxub
test
por
lock
mov
pop
cmp
addr16
sbb
push
jb
sub
add
call
xor
sti
shl
stc
gs
dec
iret
fsubr
jge
pop
push
movs
sub
fild
and
addr16
out
cmp
mov
push
sub
xor
fsub
mov
in
xlat
add
or
add
test
aad
sbb
push
mov
cmp
movs
push
inc
movs
js
pop
aaa
sahf
leave
mov
inc
iret
jo
pop
cmp
xor
xor
call
les
data16
lods
cwde
outs
lock
les
jecxz
(bad)
stos
daa
mov
jno
xor
pop
sbb
ss
xchg
rcr
jmp
inc
pop
xor
lahf
mov
mov
jg
sbb
inc
push
jecxz
cs
imul
or
xchg
add
lods
xor
pop
lds
lahf
push
fwait
mov
or
jecxz
ss
shl
or
leave
cs
xchg
push
clc
ret
ss
jle
iret
cmp
test
mov
unpckhps
add
pop
add
retf
xchg
ins
cld
loop
mov
dec
fld
cwde
mov
lea
ret
and
and
arpl
push
cmp
cmp
scas
sahf
jns
xor
jle
shl
mov
outs
fcmovnb
sti
adc
jle
xchg
out
mov
adc
lods
push
pop
mul
and
stc
(bad)
sub
mov
std
pop
mov
bound
sub
push
les
jne
fcom
or
jb
xor
mov
call
xchg
mov
(bad)
pop
jge
(bad)
ret
xchg
jmp
pop
popa
mov
loopne
(bad)
(bad)
or
and
sbb
(bad)
sbb
clc
xlat
inc
jnp
sbb
shl
ins
push
mov
imul
sub
aas
movs
into
adc
(bad)
mov
in
outs
pop
adc
fadd
stos
lods
in
outs
dec
call
sar
and
sbb
jo
fidiv
mov
pop
test
cli
das
add
mov
shl
sub
loopne
jb
aad
pop
sub
hlt
mov
add
retf
out
imul
xor
jecxz
scas
rol
cmp
out
push
mov
dec
mov
inc
(bad)
aad
mov
xor
mov
pop
stos
mov
sti
sbb
jo
xchg
ret
test
cmp
xchg
lock
packssdw
mov
aad
adc
scas
push
jmp
jmp
scas
jo
cmp
sbb
mov
lods
(bad)
and
lahf
pop
jecxz
out
test
or
jmp
dec
jecxz
inc
cld
adc
xchg
in
sub
movs
fisub
pop
xor
clc
mov
retf
or
(bad)
xor
push
jg
cli
out
xchg
pop
loop
shl
int3
ss
push
cld
scas
inc
ffreep
shld
outs
(bad)
add
jno
xchg
iret
sbb
mov
sar
in
jmp
xor
push
jecxz
adc
int
pop
fisubr
sub
popf
add
fadd
mov
and
mov
iret
mov
pop
imul
stc
clc
jmp
pop
xor
push
push
call
inc
add
ror
lds
movs
xor
outs
push
call
in
xor
out
pop
and
sahf
mov
outs
pop
das
lea
mov
sbb
lahf
jmp
hlt
fistp
pop
mov
jle
imul
inc
lea
aam
sub
push
adc
sub
ins
cmc
mov
cdq
mov
xchg
and
adc
enter
sbb
test
cs
hlt
push
in
fnstenv
mov
jg
add
(bad)
fistp
ret
xchg
es
cwde
gs
(bad)
(bad)
fdiv
and
mov
push
dec
cmp
bound
push
rcr
xor
push
jmp
stos
inc
jge
pop
out
or
inc
fimul
inc
mov
add
(bad)
test
cmp
mov
cmp
push
lock
test
push
add
int
cmp
iret
add
push
test
aam
sar
cmp
dec
dec
mov
xchg
ja
test
jl
outs
mov
inc
jmp
cld
(bad)
xchg
sti
ja
ins
cwde
leave
xlat
jno
outs
(bad)
in
push
aad
push
add
ss
test
in
ret
inc
or
fsubp
rcr
sub
sar
or
dec
out
cli
shr
in
xor
pop
scas
imul
ror
or
xlat
and
mov
mov
stos
scas
mov
scas
popf
icebp
sub
ss
xchg
pop
add
in
jmp
(bad)
addr16
or
jno
dec
pop
mov
loopne
int
fst
add
mov
ror
mov
xlat
shl
add
std
or
or
inc
test
dec
shl
stos
fcomip
(bad)
call
shl
add
and
cli
nop
(bad)
iret
xor
inc
(bad)
pop
(bad)
cmc
push
lds
js
fwait
inc
add
mov
inc
outs
xchg
mov
inc
shr
mov
sti
fidiv
stos
lahf
mov
pop
nop
icebp
dec
cmc
mov
enter
fisub
inc
push
cwde
cld
xlat
mov
dec
pop
sbb
in
cmp
outs
push
dec
cmp
dec
into
cmp
xlat
cwde
or
cs
ret
xor
cmp
inc
(bad)
out
push
jmp
pop
jbe
bnd
pop
in
jnp
or
cmp
scas
(bad)
in
or
xchg
test
xor
(bad)
jge
mov
sti
retf
dec
dec
fs
mov
jbe
jecxz
cmps
jp
sub
sahf
int
fwait
jmp
cmp
mov
rcr
call
shr
mov
jecxz
and
cwde
push
pop
leave
cmp
pop
jge
push
movs
push
inc
pop
loopne
adc
pop
mov
mov
into
cmp
mov
bound
cmp
mov
pop
ror
inc
jge
mov
mov
cmp
cmp
test
pushf
imul
pop
(bad)
push
(bad)
(bad)
out
lahf
fimul
mov
mov
stc
inc
sar
and
int
adc
int3
inc
or
mov
lahf
mov
movs
mov
(bad)
fcom
into
stos
adc
jae
and
sbb
jno
lods
mov
xor
ror
or
cmp
in
mov
jge
sub
out
cmp
jno
ror
loope
fimul
pop
and
mov
cmps
inc
adc
popf
das
adc
(bad)
cli
test
sub
mov
les
imul
or
cmps
loop
mov
enter
stos
addr16
nop
aam
lahf
out
cmp
repz
dec
and
rcl
je
sbb
in
data16
mov
or
sub
mov
out
adc
hlt
mov
rdpmc
xchg
push
enter
fdiv
pop
aad
jle
and
add
pop
rcl
std
mov
and
test
call
cdq
inc
jge
push
xchg
and
jmp
lock
push
xchg
sar
add
add
(bad)
xor
mov
popf
ror
loopne
add
dec
icebp
pop
mov
sub
aas
jmp
xchg
pop
xchg
adc
fnstsw
jae
push
jl
or
mov
push
inc
(bad)
daa
adc
inc
movlps
jo
mov
sahf
mov
add
adc
and
and
(bad)
ffreep
push
addr16
mov
outs
mov
outs
sbb
xchg
aam
and
mov
gs
mov
in
xor
jmp
clc
repnz
data16
out
mov
cmp
mov
jne
aaa
dec
mov
aaa
sub
mov
je
retf
xchg
(bad)
xor
cmc
nop
(bad)
and
(bad)
aam
out
and
sub
shl
inc
daa
inc
mov
mov
repnz
arpl
scas
mov
mov
(bad)
in
xchg
lock
mov
inc
or
dec
and
and
dec
push
adc
loope
xchg
push
retf
rol
add
mov
inc
rcr
cdq
xchg
sub
leave
stos
(bad)
fwait
mov
pop
test
inc
xchg
mov
xchg
shl
mov
fimul
ud2
popa
out
fstp
mov
push
adc
cmps
rcr
(bad)
mov
(bad)
outs
icebp
inc
mov
pop
das
mov
cdq
adc
jp
cli
movs
or
(bad)
dec
or
cmp
dec
test
pop
and
mov
xor
jmp
push
popf
push
pop
adc
mov
mov
imul
rcr
cdq
out
rcl
push
lock
sbb
push
dec
xor
loope
call
pop
popf
enter
sub
push
idiv
sub
or
imul
mov
mov
xchg
cmps
popa
pop
push
jae
jae
jge
jp
push
mov
pop
fld
ins
fwait
gs
add
adc
clc
pop
jbe
sbb
inc
mov
sub
push
xor
sub
or
push
push
mov
repnz
imul
das
inc
mov
or
mov
das
cwde
xchg
mov
mov
dec
movs
and
sbb
(bad)
jne
mov
jmp
retf
adc
sbb
scas
imul
popf
das
(bad)
jnp
and
pop
dec
mov
mov
into
je
mov
out
jno
cs
mov
push
inc
xor
push
es
adc
loope
mov
add
mov
(bad)
cmps
hlt
add
hlt
pop
add
inc
cmp
mov
(bad)
shl
gs
cwde
rcr
xchg
das
or
frstor
cmp
or
jb
stos
sub
xchg
test
movs
not
loope
sbb
dec
xor
(bad)
sub
into
addr16
mov
fmul
cmc
js
call
sub
mov
add
and
enter
jbe
mov
(bad)
jo
push
sub
pop
sub
mov
fs
fcom
mov
inc
(bad)
push
call
stc
dec
adc
push
faddp
repnz
ja
retf
jno
fwait
inc
mov
stc
push
pushf
pmovmskb
xor
mov
push
sahf
jecxz
mov
push
arpl
mov
pop
loopne
pop
jns
retf
clc
fsubr
mov
fld
sahf
loopne
lods
inc
and
movs
aas
fsubp
sbb
push
mov
movs
dec
sub
imul
pushf
mov
loopne
fdiv
je
push
mov
jl
in
jge
sti
mov
lods
aad
jg
js
jae
xor
retf
int3
mov
pushf
xchg
bound
xchg
or
push
mov
dec
cwde
into
and
pop
test
fdiv
fistp
sbb
shl
or
mov
dec
aam
dec
cmp
rcl
mov
xchg
jne
not
mov
push
into
cmc
test
and
mov
test
mov
push
adc
(bad)
mov
dec
and
ror
test
pop
cmp
pop
sub
jmp
call
test
in
mul
fwait
call
shr
mov
bound
pop
jge
cmps
sahf
pop
(bad)
(bad)
dec
pop
push
dec
and
push
sub
sbb
mov
aam
cmps
es
and
and
and
cmp
data16
inc
push
dec
xor
mov
aas
jns
sbb
gs
out
pop
int
push
inc
shr
div
xchg
inc
cmp
adc
int3
sar
mov
jecxz
or
mov
cmp
adc
cmps
sub
jno
js
inc
mov
inc
stc
xor
push
fs
loope
jb
test
jmp
test
lock
xchg
fstp
mov
sbb
jbe
aam
sbb
jmp
and
mov
push
sti
scas
mov
fwait
fs
adc
push
(bad)
and
jmp
cwde
and
sub
cmp
rcr
inc
mov
push
and
cmp
retf
(bad)
cli
pop
shr
in
or
and
out
out
mov
push
in
add
xchg
jp
arpl
mov
aad
retf
cmp
test
push
mov
arpl
adc
xor
stos
repz
inc
sbb
sub
call
cmps
fisttp
sbb
inc
addr16
cdq
adc
test
pop
pop
adc
js
ror
dec
and
push
sub
test
stc
or
push
xor
(bad)
mov
xlat
cmp
dec
cmps
stc
adc
pop
data16
and
mov
fnstenv
add
scas
mov
adc
ret
mov
adc
jl
pop
inc
call
sub
arpl
push
or
sub
data16
jb
cmp
inc
jmp
pop
xchg
test
jmp
jbe
mov
scas
loop
xor
pop
pop
dec
xlat
sbb
xor
mov
fbld
xchg
mov
push
pop
fwait
jae
dec
mov
mov
(bad)
and
cdq
loope
mov
movs
cld
pop
sub
or
add
sbb
test
in
xor
jne
out
ja
fwait
shl
mov
aam
inc
jle
inc
movs
and
mov
cmp
fmul
(bad)
cmps
mov
out
jle
adc
push
enter
test
sbb
dec
jmp
or
out
(bad)
scas
out
and
es
es
or
popf
pop
sub
jg
mov
addr16
out
in
(bad)
idiv
xchg
push
mov
xor
cld
xchg
jl
fdiv
(bad)
xchg
in
into
inc
rcr
jne
icebp
stos
icebp
lock
mov
cmp
xchg
stos
inc
sbb
sti
addr16
int3
xor
add
pusha
loopne
std
pop
leave
les
mov
mov
and
(bad)
in
movs
callw
lods
bound
sar
dec
retf
(bad)
xchg
cmc
lds
xlat
sahf
pop
pop
iret
adc
(bad)
adc
out
ficom
push
mov
rcl
(bad)
xchg
sub
push
scas
jmp
aad
sbb
mov
rcr
inc
fsub
scas
pop
(bad)
movs
fistp
ins
shl
mov
iret
mov
push
adc
(bad)
outs
js
pop
inc
sbb
mov
adc
fbstp
add
mov
das
imul
bound
(bad)
mov
imul
xor
inc
jnp
clc
mov
stos
xor
inc
fiadd
sub
mov
fld
mov
pop
fimul
mov
das
ja
mov
lahf
sub
int
fsubr
fiadd
mov
cli
add
xchg
push
inc
mov
imul
sbb
in
nop
adc
and
jbe
sbb
iret
test
sbb
inc
sbb
nop
lods
mov
sar
mov
fxtract
aad
cld
mov
jp
mov
or
and
cwde
xor
sub
push
sbb
mov
xchg
shr
call
push
outs
jnp
sub
dec
mov
mov
jae
dec
fld
dec
push
cli
jmp
sub
jbe
cmps
ja
xor
sub
mov
sbb
(bad)
cld
pop
fwait
dec
fstp
jno
rcr
cs
pop
lea
sbb
call
fmul
adc
or
and
mov
cmp
xor
jp
mov
(bad)
xlat
sub
xor
mov
in
fist
fidiv
rcl
adc
mov
fnsave
aaa
mov
stos
push
add
add
das
pop
jmp
ja
jno
and
inc
pop
sbb
into
inc
scas
scas
sbb
push
add
pop
cs
imul
jp
in
and
pop
js
mov
mov
cmps
adc
add
(bad)
mov
adc
test
mov
sub
ins
out
or
adc
or
cwde
test
cwde
daa
sbb
loopne
lods
sbb
dec
sub
mov
pop
mov
ficom
mov
push
sahf
xchg
or
shl
inc
or
jp
jb
daa
cmp
inc
add
popf
punpcklwd
pop
test
xor
das
dec
shl
push
xchg
hlt
call
mov
loopne
stc
cdq
ja
mov
enter
es
ds
lea
aas
jb
sbb
(bad)
sub
retf
xor
and
gs
cdq
sbb
pop
test
dec
xchg
into
jecxz
sub
test
mov
adc
and
xor
and
hlt
push
xor
fcmovbe
and
call
sahf
push
dec
pop
cmp
adc
dec
mov
xchg
addr16
fnstsw
sti
mov
push
and
cmp
cmc
test
push
adc
mov
ja
or
sub
pushf
call
sahf
sbb
push
rcl
imul
mov
pop
mov
outs
mov
daa
bound
loop
or
dec
cmp
fstp
mov
sbb
push
mov
xchg
adc
mov
scas
arpl
or
retf
pop
outs
cwde
into
in
call
xor
inc
shl
push
push
inc
push
aad
or
inc
xor
leave
iret
out
mov
push
jmp
or
fucomp
mov
jmp
retf
pop
pushf
push
test
mov
(bad)
outs
jo
pop
inc
xchg
jo
in
and
sub
dec
ror
mov
stc
aad
sbb
fwait
xchg
sub
push
stos
add
jecxz
mov
(bad)
jmp
adc
clc
out
pop
mov
adc
sbb
shr
cmp
add
cmp
movs
(bad)
fcom
sbb
jle
and
nop
aam
loop
arpl
mov
cli
cmps
rcr
and
movs
adc
shrd
or
into
and
jmp
out
scas
in
arpl
aad
mov
jnp
movs
outs
jle
cmp
jne
pop
mov
cmp
push
adc
stos
repnz
lods
out
loopne
out
aam
fwait
xor
xor
push
icebp
push
sbb
idiv
push
push
dec
call
dec
cmc
popf
dec
out
add
adc
push
cdq
or
sti
xchg
sti
repz
retf
ficom
pusha
sub
push
outs
mov
rcl
ins
scas
or
out
int3
add
retf
mov
mov
add
(bad)
jbe
xor
out
imul
pusha
cs
shl
addr16
xchg
push
dec
lock
out
(bad)
je
add
mov
test
adc
fcom
rol
stos
xchg
aam
jp
addr16
lds
sbb
add
(bad)
mov
imul
jp
sbb
test
cmp
xchg
dec
sbb
ins
cli
adc
(bad)
in
push
je
lds
pushf
add
(bad)
fisubr
int
xor
imul
scas
js
jno
std
ja
int
lea
cmps
add
mov
jne
mov
inc
push
dec
aam
loope
dec
sbb
and
scas
mov
pop
xor
pop
jnp
push
arpl
cmc
hlt
mov
sub
in
push
mov
push
add
cdq
xlat
sub
(bad)
xlat
mov
int3
test
jae
out
xor
fidiv
aaa
cli
clc
imul
mov
jnp
ds
(bad)
fisttp
mov
sbb
cdq
cmps
ss
pop
mov
dec
mov
mov
je
in
popa
sar
sub
ffree
mov
push
jo
lahf
push
sub
ret
xchg
ror
sbb
inc
sbb
ret
xor
mov
ins
jb
jmp
lds
loop
pop
jg
lahf
das
jg
loope
mov
aaa
loope
jbe
xchg
mov
leave
imul
clc
test
fisub
rcl
fwait
mov
in
test
mov
ja
push
(bad)
addr16
pop
lahf
jae
std
hlt
ins
jmp
xchg
lods
lods
lds
jecxz
sbb
push
jge
aam
clc
or
push
adc
mov
pushf
cmc
stos
push
mov
test
scas
fwait
push
mov
dec
fwait
jmp
adc
cli
fidiv
pop
mov
stc
mov
add
push
jbe
dec
or
leave
aam
push
push
stc
mov
push
xlat
adc
int
stos
dec
pusha
test
sbb
xchg
push
mov
pop
ss
xor
aaa
aam
mov
test
lock
rcr
xor
add
hlt
cmps
xchg
jnp
mov
fsub
inc
(bad)
pusha
not
xor
jo
xchg
jle
call
rcr
nop
enter
imul
test
mov
fidivr
int3
or
cmp
sbb
sbb
test
sbb
mov
cmp
and
repz
sahf
sub
sbb
mov
gs
frstor
repnz
add
mov
pop
es
or
shr
mov
pop
retf
gs
add
(bad)
aam
push
fisttp
outs
jmp
and
fwait
jmp
mov
ds
and
ss
adc
retf
ss
dec
pushf
mov
and
lds
inc
es
leave
scas
shl
jmp
lds
mov
cmps
(bad)
adc
jno
lea
shl
inc
sub
nop
stc
out
mov
cmps
sub
daa
jmp
fs
std
xor
pop
mov
enter
mov
hlt
fucomp
cpuid
and
xor
neg
push
mov
retf
and
cwde
pop
test
pop
cmp
push
pop
sub
mov
stc
push
cmp
cmps
push
mov
jmp
add
jecxz
xchg
push
popa
jecxz
out
ds
pop
fwait
mov
jp
mov
jl
rep
jo
lods
push
sub
in
aam
shl
xor
push
std
(bad)
adc
cmp
add
xchg
(bad)
sub
mov
dec
pop
jbe
ret
xchg
push
cmps
mov
inc
lahf
inc
inc
out
sub
cli
in
stos
sub
fdivr
sub
cmc
lea
arpl
imul
repnz
push
out
test
or
or
fwait
or
adc
aam
push
pop
lahf
or
pushf
sub
jno
pop
stos
loopne
push
dec
movs
jmp
jno
mov
adc
xchg
setae
dec
jecxz
fld
mov
xor
sub
push
cmp
inc
cmp
mov
shr
push
sub
outs
ret
bound
mov
aaa
cmp
push
(bad)
fdiv
xchg
(bad)
stc
(bad)
dec
xchg
add
sbb
jle
std
adc
or
mov
inc
and
test
movs
pop
imul
push
loope
pusha
push
xlat
add
cmp
enter
and
mov
jns
dec
iret
jp
out
jge
pslld
lahf
xchg
out
in
fs
mov
aas
mov
daa
ds
push
push
push
jno
jno
ins
sbb
cmp
mov
cmp
cwde
(bad)
jo
mov
out
dec
push
mov
loop
cmc
xlat
cwde
pop
push
cdq
and
repnz
inc
dec
cli
loope
cli
fisub
nop
aad
jb
movs
xchg
inc
loope
xor
ja
inc
push
shr
icebp
push
push
jmp
jge
sub
xor
adc
dec
lock
and
jb
mov
inc
out
jmp
cmp
(bad)
je
sub
and
sar
xor
es
shr
sbb
into
pop
ins
mov
fbld
lea
lea
int
pop
bound
fisttp
pop
adc
xor
or
clc
in
daa
addr16
lea
mov
inc
cmps
jo
xchg
movs
add
cmps
aad
adc
mov
mov
push
xchg
mov
lea
dec
jle
adc
inc
fs
cmp
dec
xchg
fild
mov
sub
add
inc
test
ins
lods
in
fmul
dec
add
mov
imul
xor
sahf
jae
outs
xor
cmp
dec
add
gs
mov
ja
jb
push
xchg
lods
pop
add
or
bound
mov
push
pop
pop
pop
or
enter
(bad)
repz
in
mov
cdq
pop
mov
cmp
stos
fwait
rsm
adc
sahf
inc
movs
or
push
repz
mov
mov
jmp
outs
bswap
fimul
stos
pop
and
xor
rol
jmp
cli
stos
push
dec
lock
push
add
mov
pop
fadd
loop
popf
dec
cmp
je
aam
jl
lahf
pop
push
popa
cmp
xchg
jne
ss
mov
jecxz
or
inc
mov
stc
push
pop
fwait
int3
adc
outs
sbb
adc
push
jmp
ja
mov
or
sbb
add
push
repnz
aaa
shr
inc
in
(bad)
pop
call
mov
jb
scas
test
or
cmps
mov
sar
lahf
add
pop
jecxz
leave
or
and
leave
dec
sub
ror
jns
pop
pop
ds
(bad)
jmp
jmp
loopne
or
xchg
(bad)
adc
test
repnz
xchg
sbb
or
mov
aas
xchg
xor
int3
(bad)
xor
gs
inc
mov
pop
jmp
fiadd
jno
or
xor
adc
test
sub
cwde
sbb
pop
ja
frstor
xchg
or
sub
adc
pop
call
or
mov
jb
mov
out
adc
pusha
inc
out
icebp
push
dec
xchg
cmp
sbb
fiadd
and
mov
xchg
fist
mov
lods
mov
push
jb
or
ds
pop
es
inc
(bad)
cmp
pop
cmp
out
sub
lods
mov
mov
or
lods
(bad)
jmp
iret
pop
outs
pop
retf
mov
nop
rcl
pop
div
push
in
and
stc
mov
mov
cmp
addr16
or
adc
loope
arpl
sub
mov
stos
mov
jge
out
pop
int3
rcl
repz
pop
enter
repnz
addr16
clc
xor
sar
mov
add
or
sub
add
std
mov
mov
xchg
lahf
sar
mov
or
or
xchg
cmp
daa
into
push
sub
cld
(bad)
(bad)
loope
pop
push
mov
mov
and
mov
mov
sahf
dec
fadd
cli
in
js
movs
out
cmp
dec
mov
es
mov
ja
fst
mov
cmp
int3
jmp
cmp
mov
xor
enter
ror
jmp
retf
ror
iret
dec
ds
imul
sti
sahf
lock
xchg
fldcw
mov
imul
mov
add
mov
adc
ret
dec
cmp
imul
mov
ret
mov
in
lock
shr
mov
push
call
mov
mov
xchg
xchg
popa
inc
mov
mov
mov
mov
sbb
and
popf
jge
and
ret
adc
inc
ins
sub
sbb
cld
in
jle
popa
dec
aam
je
xor
imul
aad
adc
loope
lea
mov
cmp
pop
push
mov
je
xchg
lahf
xchg
pop
stos
xor
inc
mov
or
and
les
add
push
inc
and
mov
cmc
(bad)
sub
xchg
rcr
cld
or
lods
fs
lock
mov
je
retw
push
rcl
push
dec
imul
pusha
and
cli
mov
test
sub
or
sti
push
push
loop
xchg
mov
push
sti
ds
add
outs
pop
arpl
pop
xchg
push
(bad)
fs
sub
popf
out
push
xlat
dec
call
mov
push
xor
test
pop
inc
loopne
inc
xchg
xchg
pop
lock
and
iret
cld
movs
pop
jmp
ins
rol
push
inc
sub
in
loope
adc
stc
add
fs
and
mov
or
add
xor
and
repz
iret
push
add
xchg
cli
pop
fmul
stos
jnp
ror
jae
ja
inc
or
push
rol
add
test
outs
xlat
push
mov
fwait
sti
mov
fstp
or
sub
xor
push
fstp
mov
ja
sbb
bnd
rol
div
adc
pushf
add
fld
xlat
push
rol
fst
and
inc
push
and
ret
dec
neg
add
add
clc
xchg
jmp
test
inc
je
xlat
push
dec
neg
xchg
xor
xor
adc
cmps
int
xchg
cmp
fcmovb
ja
das
test
fild
in
ja
sar
repz
rcr
repz
rcr
or
pop
xor
lds
outs
xor
lea
mov
into
shl
popf
mov
xor
push
or
aad
jl
cmps
sbb
mov
lods
int3
cmp
add
cmp
mov
sub
mov
push
push
iret
pop
out
cmp
xchg
push
sub
inc
or
das
xchg
mov
div
pop
fistp
les
cmp
fcom
sbb
pusha
lods
cmp
and
and
cmps
ret
push
push
in
ds
cmps
cmp
pop
out
jp
inc
pop
mov
jns
cmp
xor
mov
aad
and
js
jbe
ins
nop
sahf
loop
xor
dec
lock
repnz
jl
inc
cdq
inc
cwde
fcomi
mov
dec
push
in
rol
pop
cmp
xchg
xor
sub
cmps
xchg
shl
xchg
sub
or
arpl
pop
dec
adc
fidiv
push
hlt
stos
aam
add
sub
loop
shl
mov
ret
mov
int
mov
retf
hlt
js
gs
dec
sbb
jg
cs
push
imul
arpl
sti
cmps
into
and
mov
imul
jl
movs
bound
push
mov
mov
(bad)
push
xchg
ins
movs
stos
jmp
inc
fsubr
push
ror
movs
mov
loope
adc
test
ret
and
(bad)
shr
cli
dec
jmp
test
frstor
scas
mov
and
addr16
shl
mov
stos
mov
inc
fisubr
sbb
pop
enter
retf
dec
dec
nop
sbb
mov
aad
dec
rol
imul
xlat
loopne
test
add
inc
jmp
icebp
mov
adc
pop
lds
jne
pop
shr
sbb
lahf
jns
arpl
sub
retf
fidivr
sub
mov
mov
enter
pop
pop
xor
(bad)
jmp
mov
sbb
sub
jmp
add
xchg
shr
or
sbb
scas
call
jns
or
push
cwde
pop
out
add
xlat
test
out
stos
jge
push
xchg
jnp
add
jb
xor
cmc
mov
int
jmp
fstcw
ret
pop
add
test
retf
(bad)
fild
jg
mov
stc
jge
lods
aas
jmp
or
mov
inc
rep
xchg
mov
sub
pop
pop
es
jb
in
add
loope
and
sub
jb
out
ins
pop
out
dec
adc
dec
or
dec
test
mov
scas
xchg
icebp
cmp
inc
pop
lds
or
sti
xor
iret
add
jb
shl
add
das
jge
sbb
movs
sbb
cmps
cdq
adc
push
div
mov
fist
cmps
jns
fistp
cmovge
or
ds
cmp
cmp
ror
inc
pop
outs
in
and
ficomp
push
push
mov
or
adc
sbb
clc
cmp
cs
mov
xor
mov
push
nop
retf
int3
popa
es
mov
jle
fisub
shr
push
adc
ror
addr16
mov
fld
cmp
paddw
rcr
xor
adc
mov
fmul
out
call
pop
lods
icebp
mov
pop
fcomp
(bad)
cmp
out
in
or
cdq
iret
movs
sbb
fnstenv
xchg
cmp
dec
push
imul
push
pop
xchg
push
out
dec
std
movs
ficomp
add
fwait
sub
cmp
xor
leave
pop
push
mov
sbb
aas
sbb
fs
loopne
rol
push
sub
inc
cmps
sbb
mov
outs
les
arpl
and
imul
mov
adc
or
pop
adc
sbb
jns
outs
ror
int3
mov
or
mov
aad
xchg
enter
loope
in
(bad)
push
rcl
test
aam
mov
lahf
mov
mov
fldenv
fs
dec
mov
out
mov
popa
stc
jmp
into
mov
outs
add
push
js
sub
out
or
fimul
mov
ret
push
inc
jae
adc
lods
xchg
jae
les
loopne
ins
sub
xor
in
sbb
add
mov
fsubr
pusha
test
push
div
dec
xor
jnp
sbb
or
or
or
repnz
sbb
mov
xchg
frstor
stc
pushf
fs
test
lahf
xchg
sbb
popa
and
std
shl
mov
test
ja
and
adc
cmps
jle
jb
cwde
adc
xchg
pop
adc
fcom
adc
ret
and
pusha
and
cmp
xor
mov
xchg
test
mov
es
mov
jmp
sbb
pop
cmp
cld
sub
repz
js
and
cmp
call
xor
xchg
push
xor
stos
and
nop
test
jecxz
inc
stos
aam
xchg
out
sar
cmp
fidivr
mov
push
fcom
retf
jle
lock
aas
xchg
sti
ficom
fisub
dec
ret
and
sbb
or
lea
mov
xchg
xchg
dec
push
dec
inc
jecxz
shl
xlat
mov
inc
jl
mov
cmp
cmp
into
xor
fisttp
in
clc
sbb
pop
fidiv
in
(bad)
push
repz
push
sahf
xchg
inc
and
or
je
mov
sub
fcomp
out
les
push
mov
dec
xchg
push
scas
xchg
js
les
test
(bad)
and
sar
push
xor
xor
call
jns
inc
in
imul
pusha
mov
push
jnp
fisubr
outs
gs
mov
pusha
pop
push
pusha
lods
mov
jno
add
xlat
and
(bad)
adc
inc
xchg
ds
push
push
inc
jns
adc
inc
jo
dec
xor
iret
push
fisttp
sbb
mov
dec
out
mov
sahf
mov
xchg
pop
push
rcr
cli
xlat
mov
lock
mov
paddusb
fs
sbb
not
inc
(bad)
mov
retf
jo
fiadd
sub
pop
dec
mov
mov
loopne
jp
outs
pop
aas
pusha
mov
push
mov
adc
imul
jmp
mov
rcl
or
dec
mov
fwait
(bad)
jmp
pop
dec
sbb
fwait
dec
test
mov
and
pop
jo
cmps
(bad)
(bad)
xor
icebp
inc
sub
js
xor
pop
test
leave
ss
mov
std
pop
shl
(bad)
test
pop
dec
iret
test
adc
lahf
xchg
fcomp
xchg
lods
pop
pop
xor
loopne
js
out
(bad)
aam
mov
rcl
in
cwde
adc
add
dec
out
sti
sbb
sub
xchg
inc
das
pop
jmp
fdivr
sbb
outs
mov
and
dec
retf
add
fistp
adc
adc
es
xchg
fld
stos
mov
pop
add
or
sti
mov
(bad)
call
or
out
stc
inc
adc
outs
dec
nop
add
lock
lods
xchg
xchg
cmp
jns
sub
stos
adc
movs
daa
xor
fcmovb
adc
arpl
(bad)
int
iret
push
cmp
mov
sbb
fist
mov
sbb
pop
cs
mov
nop
pop
adc
xchg
pop
add
xlat
xchg
test
clc
xor
push
jns
add
jmp
cmc
mov
xchg
daa
mov
or
push
repnz
cmp
sbb
pop
loopne
mov
repnz
sub
in
push
lahf
dec
stos
mov
add
mov
cmps
dec
or
call
xchg
xchg
cmp
cmc
xchg
pop
cmps
or
xor
push
dec
or
mov
dec
das
add
jne
dec
jle
das
fst
lods
lods
rol
sbb
out
sub
std
jecxz
jmp
cmc
add
mov
popf
das
jmp
xchg
add
(bad)
sbb
add
push
(bad)
and
ret
pushf
out
pusha
adc
scas
or
call
cmp
xchg
add
ds
cmp
push
jmp
clc
js
or
jge
sti
push
cmps
arpl
ja
imul
es
pop
jne
call
xchg
push
into
sbb
pop
inc
jbe
push
mov
jmp
hlt
js
push
xor
ja
fs
jmp
icebp
cld
popf
xor
cmps
(bad)
cwde
jle
xchg
sahf
and
mov
in
or
aas
(bad)
dec
neg
push
xor
mov
mov
push
jmp
push
mov
popf
fldenv
adc
in
dec
cmp
dec
sub
lock
pop
cmp
push
imul
ins
pop
add
pusha
mov
push
je
jmp
jbe
mov
mov
lds
dec
jl
or
sbb
xchg
retf
repnz
lock
sar
xchg
add
std
mov
into
cwde
sbb
and
xchg
xchg
(bad)
jns
fsubrp
loope
or
out
(bad)
mov
ins
inc
mov
lock
jb
stc
lea
push
and
add
movs
and
or
iret
ins
jb
call
sbb
cmp
sbb
xlat
not
sub
jbe
ja
jnp
movs
fsubr
scas
mov
aas
mov
sub
mov
pop
pop
outs
sbb
(bad)
or
mov
in
mov
loopne
mov
sbb
les
pop
(bad)
lea
test
(bad)
aad
mov
dec
or
data16
mov
leave
gs
lds
adc
add
push
cmp
sub
adc
sahf
pop
out
jmp
shr
inc
or
ret
fadd
cli
ss
add
and
out
loope
mov
cmc
xchg
and
mov
xor
aad
dec
js
cdq
pop
repz
xchg
sbb
jo
or
lea
jmp
lods
cld
lods
call
jb
outs
imul
aas
inc
sub
xchg
(bad)
jo
or
lods
mov
popf
xor
cmps
mov
and
sub
jle
and
jmp
mov
dec
and
shr
ret
sbb
cs
push
jmp
(bad)
jecxz
push
add
clc
mov
inc
dec
cmc
inc
cli
addr16
jmp
pop
out
pushf
or
inc
aas
jbe
mov
inc
rol
and
push
out
rcl
sub
cdq
mov
outs
pop
popf
jle
sub
out
and
psubw
sub
inc
xchg
jns
sahf
inc
clc
iret
sbb
stos
fwait
fs
xlat
frstor
push
movs
ja
repnz
les
mov
jbe
repnz
inc
scas
sahf
dec
in
repnz
xchg
dec
push
js
jnp
push
icebp
lds
pop
retf
loop
mov
pop
mov
inc
je
push
cmps
push
pop
mov
push
pop
in
push
int3
test
ds
mov
sub
cmp
mov
xlat
add
jmp
add
test
pusha
or
adc
push
out
jg
cmps
inc
xchg
es
cmp
jecxz
or
jecxz
mov
push
push
mov
pop
shl
fwait
cmps
cdq
in
enter
and
mul
stc
cmp
sbb
push
cmp
int3
inc
push
add
sub
fcomp
add
pop
fadd
sub
pop
pop
arpl
pop
add
imul
jo
hlt
fiadd
push
add
and
push
outs
sbb
inc
rcr
dec
fiadd
rol
or
(bad)
pop
pop
aas
xor
xlat
retf
out
pop
add
push
gs
call
dec
jnp
fcmovnu
das
mov
add
in
mov
mov
and
xor
xchg
ret
pop
fidiv
cmp
cmc
jne
sbb
cmp
xor
dec
popf
pop
(bad)
add
movs
lods
ret
pusha
cmp
jne
adc
xchg
cli
dec
lods
adc
icebp
push
dec
test
dec
sub
ins
ins
pop
dec
rcl
cmp
outs
xchg
cli
jge
mov
mov
retf
sbb
adc
jmp
push
pop
je
fdivr
jmp
jo
fmul
stos
jg
push
sub
mov
xchg
pop
sti
jp
cmps
mov
push
loopne
mov
lahf
add
sahf
push
repz
xor
movs
jbe
push
int3
in
fs
and
push
jne
mov
add
sbb
mov
ins
fdiv
jns
add
bswap
cdq
add
push
push
adc
or
mul
pop
fimul
pop
rol
sbb
xor
call
test
push
shl
fcmovnu
sub
pop
stos
or
dec
dec
popa
mov
jno
fcomp
repnz
aam
pop
stos
inc
(bad)
dec
or
adc
sbb
mov
or
push
shl
loope
pop
push
sar
adc
test
cmp
adc
xchg
xchg
push
add
mov
mov
out
into
mov
jge
out
jmp
and
cmp
push
mov
fidiv
mov
test
adc
inc
cld
xchg
and
jo
loop
inc
pop
out
out
xor
test
loope
or
jnp
and
mov
xchg
inc
jno
and
pop
xchg
ja
cmp
lds
cmp
push
or
pop
mov
cwde
push
int3
jmp
add
lahf
add
pop
pop
sub
push
clc
ins
jmp
fisubr
xchg
addr16
mov
retf
fisubr
xor
xchg
jbe
cdq
jnp
dec
int
into
mov
rol
adc
xlat
push
jb
inc
popf
lods
in
sbb
cld
out
adc
cmp
mov
xchg
adc
add
xor
into
lock
movs
cwde
dec
test
dec
(bad)
imul
xor
inc
f2xm1
or
adc
jne
(bad)
pextrw
cmp
mov
adc
ficomp
cmc
mov
adc
cmp
syscall
(bad)
(bad)
aad
jbe
mov
mov
xchg
pop
xor
lea
(bad)
stos
repz
call
int3
mov
test
cmp
sub
inc
test
ret
test
jb
daa
or
lods
inc
int3
out
movs
rcr
cmp
adc
std
(bad)
adc
test
cmp
mov
aad
in
lods
stos
loope
loop
cmp
pop
cmp
pop
sbb
mov
xchg
(bad)
xor
loope
int3
jp
jg
push
ins
and
dec
test
int3
lods
imul
sub
xchg
add
cmp
fmul
call
cmps
call
inc
idiv
jnp
adc
jb
das
test
add
outs
mov
xchg
mov
fwait
pop
sub
stos
ins
mov
sub
repnz
and
mov
mov
or
arpl
pop
shr
mov
xor
repnz
pop
fisttp
xchg
jno
out
aas
sbb
in
(bad)
outs
adc
clc
mov
sahf
and
scas
mov
add
add
fild
(bad)
or
hlt
stos
outs
mov
iret
ror
out
cmps
or
mov
push
sub
add
int3
inc
jmp
sub
xchg
cmp
push
cmp
push
push
inc
aas
imul
adc
dec
xchg
rcr
mov
jl
mov
cmp
dec
pop
daa
push
add
ret
movs
fwait
sar
ficomp
xlat
xor
sbb
xchg
cmp
ficom
push
push
adc
fcomp
std
jae
cwde
jl
jle
sub
mov
add
inc
ret
jns
adc
inc
in
int3
jns
test
or
lock
inc
fcmovb
ja
loope
mov
not
push
fadd
push
stos
test
pop
sub
div
gs
push
loopne
xor
sbb
and
cld
jmp
mov
movs
out
xchg
shl
push
jmp
cmp
aaa
push
dec
ins
dec
mov
inc
daa
sub
daa
fldenv
in
push
sub
ficom
cmp
int
dec
sbb
scas
xor
in
and
std
add
mov
inc
icebp
cmps
bound
aad
pop
dec
sti
dec
ds
mov
or
clc
cli
in
movs
xor
movsx
test
stos
dec
call
adc
sbb
cld
or
mov
lahf
mov
hlt
or
je
adc
in
inc
aad
inc
mov
mov
out
pushf
stos
or
iret
or
aas
xor
sar
mov
fdivr
cmp
sbb
sbb
cmp
and
ret
or
push
leave
cmc
pop
sbb
mov
inc
inc
adc
loopne
repz
sub
fs
mov
fwait
in
lock
icebp
xchg
or
xchg
jmp
js
pop
in
sub
adc
popf
call
ss
(bad)
sbb
add
aas
adc
cmps
mov
fs
sbb
scas
daa
add
xchg
cwde
scas
push
cmps
xchg
into
xchg
out
xchg
xchg
jb
imul
and
mov
shr
or
add
loope
cs
push
out
or
adc
test
shl
out
lea
add
xor
push
push
out
and
imul
mov
sub
popa
bound
sahf
xchg
sbb
fld
sbb
shl
outs
mov
pop
aaa
ret
cmp
sahf
adc
pusha
sub
cmc
fist
dec
push
fld
cdq
stc
ror
mov
pop
sub
push
pushfw
push
inc
pop
sub
pop
lods
ds
jo
stc
inc
enter
mov
jnp
leave
xor
cmp
test
rcr
mov
jns
call
xlat
(bad)
adc
mov
push
movs
xlat
sub
cmp
xchg
pop
sbb
test
ja
call
inc
mov
(bad)
dec
sbb
and
aam
jne
mov
xor
sbb
mov
jmp
xchg
dec
ficom
sbb
hlt
pop
add
mov
lods
mov
ret
repz
jno
xchg
push
(bad)
lods
adc
push
imul
(bad)
sub
dec
xchg
popa
xor
ss
mov
and
mov
popf
or
cmp
imul
add
or
popf
cmps
scas
pushf
arpl
xchg
hlt
dec
xchg
div
cmp
sub
pop
xchg
sti
ficomp
cli
add
aad
aaa
push
add
aam
clc
mov
imul
and
sub
push
dec
(bad)
cdq
adc
xor
iret
sti
mov
stc
(bad)
pcmpgtd
jno
loope
cmp
mov
add
mov
cs
repnz
pop
sbb
sub
xchg
jbe
cwde
fcomp
enter
and
in
daa
inc
dec
fld
int3
mov
mov
test
fwait
ins
lea
sbb
out
(bad)
push
mov
mov
cmps
clc
xor
jae
ret
in
bound
lahf
data16
outs
adc
mov
sub
xchg
mov
xor
fld
add
in
fs
imul
test
xor
enter
rcr
push
jno
mov
mov
vpmulhuw
gs
retf
fadd
das
jge
cdq
push
lahf
retf
or
or
ds
cmps
inc
push
enter
(bad)
jecxz
cwde
push
fwait
retf
push
or
push
popa
xchg
neg
mov
jmp
std
jmp
imul
add
mov
(bad)
fs
xchg
add
hlt
loop
sub
outs
mov
or
nop
add
push
inc
and
ins
int3
jb
and
push
fadd
ret
scas
imul
stos
add
loope
mov
sti
stc
mov
and
fist
inc
mov
repz
adc
jb
xchg
cmp
adc
movs
xchg
loopne
imul
cld
es
inc
add
cli
test
or
mov
cmp
pushf
pushf
pop
push
and
lahf
sub
gs
xor
(bad)
mov
mov
push
mov
xchg
sub
xchg
fild
pop
xor
ja
xchg
mov
in
fisubr
and
ja
and
inc
adc
ja
popa
sahf
jo
and
jl
cdq
(bad)
out
leave
retf
pop
pop
jge
inc
mov
push
pop
mov
lock
cli
or
repz
add
ror
idiv
rol
fsubr
inc
test
push
stos
movs
or
and
xor
mov
cmc
fisub
jp
out
or
int3
and
enter
retf
lahf
int
mov
cmps
out
xchg
arpl
pusha
into
dec
sbb
fnstcw
jp
les
mov
dec
jne
out
addr16
ror
fistp
mov
les
sbb
(bad)
lea
sbb
dec
popw
push
mov
inc
iret
pop
push
cmps
pop
inc
cmps
or
scas
sub
sti
popa
gs
xor
fiadd
jne
retf
jne
pushf
xor
sub
shl
imul
jne
or
ret
int3
ss
push
aam
and
or
in
jmp
out
daa
or
leave
xor
jmp
daa
push
dec
imul
(bad)
jmp
xor
jno
rcr
jne
in
fwait
sbb
mov
adc
cmp
in
jmp
xchg
add
retf
(bad)
rcl
xchg
rcl
rcr
cmp
jge
mov
jle
or
jnp
sub
les
pop
pop
pop
jmp
js
or
push
sbb
sub
add
rcr
scas
mov
dec
cmp
or
retf
(bad)
pop
fimul
or
(bad)
loop
stc
pop
jp
sub
or
cwde
fsubp
out
aam
mov
(bad)
adc
leave
icebp
or
sub
sub
int
pop
ret
dec
fmul
xchg
(bad)
jl
pop
(bad)
mov
adc
mov
mov
add
(bad)
jno
test
iret
dec
inc
cmp
mov
loop
mov
mov
jl
mov
pop
sahf
mov
or
or
xchg
stos
not
test
cmp
add
movs
ss
sub
xchg
sbb
xlat
push
loope
inc
dec
adc
div
aad
je
push
fucomip
(bad)
pop
shr
inc
(bad)
lahf
gs
cwde
push
mov
adc
cmps
(bad)
nop
xchg
fisttp
adc
leave
fild
cmp
and
(bad)
out
(bad)
pop
pop
and
add
add
call
sbb
pop
jl
mov
xchg
push
ins
or
xor
xchg
xchg
ins
and
push
daa
aad
push
pop
xchg
iret
push
xchg
mov
mov
push
xchg
cmps
sbb
push
pop
dec
(bad)
lods
and
stos
jmp
inc
dec
xchg
stos
out
retf
mov
rol
dec
not
dec
jmp
push
movs
add
pusha
stos
pop
and
dec
in
mov
mov
(bad)
in
int
cmps
aas
call
cdq
enter
push
in
mov
mov
xor
shr
jg
popa
mov
cmp
in
jmp
sub
jecxz
and
mov
rcr
pop
iret
push
test
mov
in
test
movs
dec
pop
mov
fnstcw
std
mov
rcl
xchg
mov
out
in
sbb
push
icebp
scas
jmp
das
into
push
push
xor
pop
punpckldq
gs
test
or
scas
xchg
push
popa
or
retf
add
mov
xor
outs
loope
outs
(bad)
jle
psubsw
bnd
inc
xor
rcr
mov
jne
repnz
jg
aas
scas
xor
aas
add
sub
scas
cmc
call
fbstp
addr16
leave
cmp
sub
jmp
test
xchg
lds
dec
(bad)
mov
pop
lahf
pop
xor
pop
jle
push
mov
mov
inc
add
bound
dec
int
outs
shl
cs
xchg
xor
mov
cmp
retf
or
mov
mov
clc
sbb
sub
xchg
and
das
sti
shr
rol
in
inc
mov
mov
sub
push
es
adc
stos
(bad)
add
inc
test
or
adc
dec
adc
xchg
iret
or
mov
dec
pop
or
mov
dec
inc
mov
sub
push
push
sti
push
xor
iret
or
lea
sar
jnp
inc
cs
imul
adc
xchg
push
std
and
lahf
sbb
sbb
xor
movs
push
push
pop
lock
and
enter
sti
shr
xchg
scas
mov
xor
int3
test
jp
mov
adc
in
dec
call
adc
das
dec
sub
pop
call
loope
dec
(bad)
ret
dec
repz
xchg
(bad)
add
push
int3
(bad)
jle
out
gs
repz
pop
sub
(bad)
into
jecxz
jne
push
ss
cld
dec
push
stos
jo
or
jle
out
adc
inc
pop
push
popf
mov
xchg
xchg
xchg
cmp
jne
xor
mov
or
jmp
jo
movs
jb
lahf
movs
cmps
jmp
and
popf
cdq
push
mov
sti
push
add
sub
add
mov
or
stc
(bad)
call
inc
dec
mov
ds
sbb
inc
pop
(bad)
jecxz
cmp
xor
sub
(bad)
jo
sbb
pop
sbb
das
or
lods
pop
push
rol
js
add
and
sbb
push
mov
mov
add
retf
sub
xor
aas
leave
jo
aaa
rcl
add
iret
cmp
mov
call
jp
and
and
cmp
das
mov
dec
imul
movs
mov
sbb
mov
mov
sbb
and
push
test
mov
inc
pop
adc
or
dec
int
inc
adc
and
pop
retf
push
push
ret
stos
sahf
js
add
in
add
add
xchg
sti
leave
push
xor
retf
sub
push
fidiv
aaa
mov
xor
pop
sbb
sbb
push
pop
aas
hlt
stos
fisttp
mov
push
xor
das
adc
test
jns
mov
ds
fmul
mov
sti
out
int
and
inc
inc
loopne
les
sub
mov
jmp
jno
push
push
xchg
mov
mov
push
es
outs
sub
in
retf
ror
add
not
mov
bsr
imul
sbb
jo
ins
leave
dec
fisttp
cdq
xlat
es
stos
xor
or
cmp
sbb
dec
in
or
jb
and
in
and
inc
cmp
cmps
pop
mov
adc
sar
mov
and
fs
inc
inc
mov
aas
mov
sti
cdq
push
mov
call
xlat
mov
(bad)
pop
jmp
test
div
or
pushf
jmp
in
not
sub
call
ds
loopne
inc
xor
pop
jns
and
mov
jns
(bad)
stc
sub
out
in
and
and
out
lds
or
or
test
mov
jae
or
hlt
pop
xchg
call
cmps
in
(bad)
cli
pop
adc
iret
mov
clc
(bad)
adc
es
jp
push
jmp
push
adc
mov
(bad)
pusha
pop
in
ret
popf
mov
clc
invd
arpl
daa
pusha
fisttp
pop
mov
inc
pop
sub
fsubr
pop
pop
xlat
scas
xchg
es
sahf
cmp
cld
adc
loope
adc
imul
inc
or
cli
jecxz
adc
xchg
enter
ins
shl
add
pop
shl
push
adc
pop
je
xchg
xor
and
push
jle
movs
std
mov
daa
jnp
in
das
add
std
jne
and
mov
push
lds
pop
sar
sbb
cmps
pop
dec
add
arpl
shl
push
retf
imul
rcl
les
sub
push
cs
cmc
jnp
fstp
pop
push
iret
xor
aaa
rcr
add
retf
loop
(bad)
daa
mov
repnz
sub
popf
test
xchg
xchg
fmul
xor
stc
repnz
and
(bad)
xor
mov
call
aad
or
(bad)
push
mov
ss
jecxz
cmp
push
add
out
inc
or
cld
pop
pop
cmc
test
sub
mov
sbb
stos
jne
fld
dec
sar
cmps
shl
aam
std
movs
mov
jle
and
inc
rol
scas
cwde
xor
fist
sub
push
in
sub
dec
adc
bound
out
sbb
mov
popa
cdq
dec
in
(bad)
xchg
fmulp
sub
sub
push
add
sbb
inc
rcr
mov
inc
ficomp
adc
in
dec
inc
ins
imul
in
cmovb
sub
cmp
push
push
pop
lds
rcl
lods
bound
or
sbb
icebp
aam
cld
sbb
or
pop
inc
(bad)
imul
adc
cmp
sbb
adc
push
jb
mov
fdiv
ins
out
push
scas
xor
jo
ins
aam
movs
jg
and
jl
jne
pop
dec
popf
adc
push
(bad)
out
mov
xor
es
je
mov
jp
cwde
sti
cmc
push
push
leave
(bad)
push
add
xor
dec
fwait
jecxz
jo
mov
and
xchg
xor
mov
and
in
cmp
or
cmp
test
aaa
lds
xchg
jmp
fdivr
jns
push
aad
dec
xchg
(bad)
sbb
cdq
cmp
test
and
push
call
and
xchg
pop
mov
scas
mov
jbe
fstp
bnd
in
(bad)
mov
ds
test
or
fwait
in
cdq
jl
ror
stc
inc
inc
sbb
sub
jle
in
mov
mov
mov
xchg
mov
pop
imul
sbb
shl
outs
xor
xor
call
cmp
mov
cdq
xchg
cmps
cli
es
xchg
ss
aad
xor
push
xchg
xor
add
(bad)
(bad)
push
(bad)
es
lods
jg
ja
mov
mov
or
pop
inc
popf
test
mov
ins
mov
adc
and
lds
int
adc
xor
pop
pop
sub
sbb
mov
(bad)
jmp
cmc
mov
fs
or
(bad)
int
inc
lods
and
dec
adc
and
adc
sbb
and
adc
fs
mov
adc
pop
sbb
sbb
add
fld
aaa
imul
not
sub
(bad)
pusha
jb
lods
inc
cmp
repz
cmp
retf
js
jecxz
pop
or
dec
sub
test
ss
test
mov
mov
call
jg
sbb
scas
in
cmp
std
xchg
mov
ins
dec
out
or
stc
cmp
adc
fstp
sbb
cmc
(bad)
out
repz
jb
pop
push
push
jg
lods
jl
mov
xchg
mov
pop
mov
and
(bad)
mov
mov
popf
mov
xchg
dec
sub
cdq
pop
adc
rcl
pop
push
push
adc
pop
xchg
into
mov
leave
mov
cmp
sub
cmp
rol
and
fistp
sbb
jbe
aas
xor
retf
inc
cmps
lods
cmp
paddusb
fimul
test
test
(bad)
jns
mov
or
std
pusha
mov
dec
jp
in
mov
or
rol
(bad)
cmc
mov
xor
sbb
pop
sbb
push
mov
popa
out
pop
iret
imul
xchg
not
dec
iret
js
sti
mov
hlt
mov
jae
shl
jp
retf
xor
xlat
push
push
std
in
pusha
cwde
xchg
jp
and
jno
mov
xor
xor
dec
xor
std
inc
mov
inc
xchg
mov
xlat
(bad)
(bad)
rol
jmp
pop
int3
xchg
sti
lds
and
(bad)
adc
hlt
mov
push
and
inc
aaa
jge
mov
sar
sbb
imul
or
add
mov
pop
pop
out
test
xor
sub
sub
sar
jb
pop
(bad)
imul
scas
in
cmp
clc
jmp
test
xor
mov
push
leave
sub
cmps
xchg
add
pop
mov
(bad)
mov
test
push
fwait
push
stos
or
inc
mov
in
cmp
cmps
sub
rcl
push
sti
jp
push
(bad)
imul
adc
les
adc
xor
ins
pop
xchg
mov
jl
les
popfw
jo
jp
ret
fsubr
pop
in
cmp
or
jp
iret
jmp
or
data16
push
icebp
push
addr16
aaa
movs
jecxz
sub
push
mov
dec
push
addr16
inc
leave
mov
sub
mov
mov
ret
add
cli
inc
imul
mov
dec
aad
icebp
xor
pop
jge
pop
scas
and
cmp
mov
in
call
ret
cli
push
lds
mov
mov
adc
adc
sub
bound
dec
push
std
test
adc
mov
push
adc
outs
cmp
dec
ja
xchg
(bad)
dec
fcmovnu
lea
movs
adc
out
mov
push
xor
(bad)
mov
jle
push
pop
and
push
mov
pop
loop
or
cmc
js
or
mov
aad
or
dec
dec
inc
retf
dec
and
js
movs
jmp
add
arpl
mov
cmp
(bad)
jo
adc
inc
xchg
fisub
or
sub
fild
addr16
popa
inc
cmps
retf
dec
or
mov
xchg
sbb
(bad)
mov
push
mov
outs
hlt
jmp
and
or
adc
lds
sbb
or
mov
add
stc
into
dec
(bad)
popa
inc
mov
imul
call
jge
mov
push
mov
xchg
rcl
mov
xchg
mov
in
daa
scas
adc
int3
scas
jle
cmp
jp
or
movs
jb
mov
movs
inc
push
stc
lahf
leave
outs
(bad)
(bad)
test
inc
add
mov
dec
push
cmps
icebp
pushf
jge
xchg
out
sbb
frstor
push
call
or
mov
xchg
leave
xchg
mov
ja
or
loopne
fisttp
ds
aaa
sub
xchg
ds
fnstcw
jnp
xor
mov
mov
out
cmp
aas
and
add
xchg
cmp
sbb
xchg
je
in
inc
(bad)
leave
pop
gs
jecxz
xchg
mov
stc
std
cs
pop
stos
adc
inc
inc
ds
daa
rcr
jns
push
cmps
cld
fmul
loopne
mov
adc
and
pushf
js
xor
cmp
neg
xor
mov
pop
sbb
daa
in
push
stc
outs
arpl
call
adc
fbld
sub
loope
aad
jo
int3
jle
fistp
into
push
lods
shr
jno
xchg
call
scas
add
jno
push
mov
and
lods
mov
not
push
inc
adc
xor
jno
movs
pusha
pusha
cld
mov
imul
in
mov
std
pop
retf
pusha
rol
iret
sahf
cld
cmps
popf
adc
pop
push
xor
fld
push
or
sub
or
inc
pop
jge
adc
test
ja
mov
movs
sub
sub
into
inc
adc
mov
mov
push
adc
push
adc
les
and
jmp
mov
fsubr
mul
xlat
and
inc
lds
jle
mov
inc
(bad)
jmp
std
das
jno
xchg
(bad)
dec
pop
xchg
fdivr
call
or
(bad)
(bad)
in
mov
pop
jle
movs
sub
ror
rcl
adc
mov
dec
jne
inc
jecxz
pop
nop
out
aad
mov
cdq
cmp
rol
lods
mov
or
add
call
mov
(bad)
mov
repnz
aad
add
or
sub
jo
std
(bad)
retf
cmp
rcr
popa
fidiv
dec
bound
add
pop
js
stos
and
int3
mov
cmp
stc
lods
or
retf
push
mov
dec
pop
sub
faddp
ror
call
rcl
ror
(bad)
sub
dec
push
std
aaa
add
outs
push
inc
jmp
and
sub
xchg
xor
cdq
xchg
call
jecxz
daa
dec
dec
ret
idiv
inc
(bad)
adc
iret
sub
ror
(bad)
jp
sbb
jno
adc
out
pop
mov
pusha
xor
sub
cwde
and
mov
pop
mov
jnp
retf
mov
clc
pop
inc
jns
adc
mov
test
scas
xchg
pop
sub
push
lahf
jno
pop
mov
iret
int3
das
or
dec
lock
or
inc
fisttp
xor
lods
inc
sub
lea
cmps
out
dec
xor
test
or
test
xchg
xchg
in
stos
dec
or
adc
jecxz
push
cmp
xchg
pop
addr16
pusha
mov
adc
push
cmp
mov
dec
mov
or
out
pushf
div
pop
xchg
pop
scas
pop
mov
push
call
int
stos
ss
add
jmp
pop
jecxz
dec
xchg
jge
lahf
sub
xor
aam
mov
or
arpl
push
ror
into
sbb
and
jp
mov
push
call
pop
xchg
dec
test
mov
cli
int
in
and
dec
or
and
push
mov
lods
ins
xchg
xor
lds
inc
push
push
jbe
sub
jb
mov
xchg
xchg
push
and
mov
lods
push
sbb
lods
or
or
mov
jg
sub
std
adc
icebp
sbb
push
(bad)
popa
xor
pop
cmovo
mov
daa
xchg
dec
mov
and
adc
jmp
and
sbb
loope
adc
jo
mov
imul
shl
pop
cmp
and
lods
cmp
test
out
mov
fisub
sbb
je
sub
cmp
jbe
mov
movd
lahf
xor
sub
pop
ror
call
push
sub
push
push
adc
and
push
xlat
mul
(bad)
movs
lahf
push
and
test
hlt
dec
mov
cli
or
les
add
mov
mov
ret
and
fld
(bad)
xchg
add
sbb
mov
jle
xchg
mov
push
cli
ins
or
das
out
jecxz
mov
clc
into
imul
popa
lds
outs
(bad)
push
test
es
imul
or
movs
out
pop
mov
xor
nop
int3
cmps
push
adc
and
je
fld
pop
shr
lahf
xchg
addr16
clc
sub
leave
ja
xchg
mov
imul
std
mov
fwait
arpl
adc
cmp
fsub
add
cmp
mov
dec
push
ss
xor
data16
or
loopne
les
fdiv
and
mov
mov
pop
call
jg
shr
fisub
inc
sub
cmc
out
adc
xor
and
gs
adc
pop
mov
ss
sbb
repnz
sub
pop
lods
xchg
rol
dec
cmp
call
sub
push
sub
out
test
xchg
inc
ror
push
test
jbe
push
adc
push
adc
pop
nop
imul
jae
and
mov
mul
adc
imul
aam
xchg
nop
pop
inc
add
jnp
iret
fadd
in
jl
dec
in
jg
scas
sub
jp
and
imul
jnp
push
cwde
mov
pop
sbb
pop
lahf
iret
in
jb
mov
jns
pusha
shl
jno
sbb
shl
xor
lea
test
jle
xchg
mov
mov
pop
mov
(bad)
mov
xor
cmp
mov
add
mov
hlt
mov
mov
imul
xchg
aad
clc
xchg
clc
and
pop
cmc
cmps
inc
lock
test
stos
cmp
out
(bad)
imul
inc
cmp
jno
out
enter
jne
ja
or
popf
adc
cmp
repnz
mov
add
outs
and
cmc
fdivr
xchg
xor
movs
jo
cmc
imul
daa
ja
mov
push
mov
cmps
lods
add
sti
xor
rcr
add
push
mov
cli
inc
std
call
mov
sub
xor
inc
mov
cwde
mov
xchg
stos
xor
cmps
or
sub
or
cli
mov
xor
stos
ficom
movs
sbb
jo
movs
ins
pop
and
xchg
stos
cmp
xor
cmp
rol
mov
push
and
inc
jmp
push
cwde
jle
add
into
mov
mov
cdq
xlat
jecxz
cmp
popf
fwait
sub
or
inc
push
fisub
mov
pop
cmp
test
sbb
rcr
xchg
dec
push
ins
icebp
dec
arpl
(bad)
jmp
jmp
ret
xchg
xor
xlat
loop
inc
sub
jno
iret
pop
bound
mov
push
xchg
ffreep
and
cmp
add
jmp
dec
ja
or
ds
mov
cmp
dec
inc
sti
add
or
sub
call
inc
lods
in
into
ret
pop
and
sub
cmp
aas
or
sub
jno
mov
adc
mov
push
icebp
mov
in
or
jecxz
jle
jb
jp
pop
push
fnstenv
push
push
mov
fstp
adc
(bad)
ror
cmp
adc
pop
loop
push
or
sbb
jb
fmul
and
ss
retf
lock
push
std
rcl
jae
pop
int
pop
fdiv
inc
lds
cmp
xor
iret
or
enter
setg
dec
aas
imul
pushf
and
sbb
push
push
jp
mov
repz
jmp
call
mov
inc
in
push
cmc
fild
clc
in
add
sbb
xor
jnp
push
int3
add
dec
in
dec
stos
stc
inc
mov
jo
movs
idiv
cmp
cmc
inc
mov
or
sar
popf
outs
push
enter
repnz
sub
sbb
mov
fwait
inc
jl
cld
cli
jecxz
popf
cmp
mov
pop
dec
ins
cdq
aaa
adc
les
adc
scas
scas
out
hlt
in
push
call
arpl
sub
xchg
jmp
int
adc
sahf
push
bound
addr16
loop
and
sbb
push
mov
loope
(bad)
push
xchg
out
fwait
sub
clc
cld
pop
sbb
push
inc
and
xchg
aaa
pop
xor
(bad)
es
or
out
fisttp
xor
xor
cmp
dec
add
or
jecxz
jne
xchg
mov
bound
push
test
and
test
mov
aas
stos
fidivr
lods
mov
ins
(bad)
dec
sub
in
fwait
push
push
cmp
stos
mul
test
(bad)
mov
xchg
mov
jnp
mov
xchg
clc
out
mov
js
cmp
dec
push
(bad)
jge
mov
inc
mov
adc
adc
xor
sbb
or
addr16
imul
adc
add
mov
dec
mov
fwait
repnz
jb
movs
dec
int
pushw
mov
in
push
jp
int3
pop
aas
push
hlt
inc
cmp
test
jg
xor
mov
push
mov
adc
xor
push
in
in
loopne
xor
cwde
sbb
mov
cs
test
push
imul
push
fwait
les
cdq
stc
xor
and
(bad)
and
mov
cwde
nop
xor
dec
lsl
popf
mov
xchg
shl
pop
mov
imul
sub
cmc
xlat
mov
shl
pop
aam
push
repz
mov
mov
xchg
call
mov
add
mov
popf
mov
inc
out
sbb
enter
or
push
mov
in
ror
cmp
mov
mov
mov
das
pushf
sub
imul
push
or
bound
jg
cmc
pop
add
adc
xor
xchg
sahf
retf
jo
mov
cmp
jbe
lds
ins
sbb
lea
jns
and
sub
xchg
mov
pop
stos
rcr
bound
loope
movs
xchg
ja
out
ffreep
lods
retf
retf
in
inc
pop
push
pushf
adc
nop
and
or
xchg
sub
push
jmp
xchg
xor
ins
movs
out
cmp
test
pop
inc
les
push
movs
push
rcr
or
sub
iret
jo
sub
hlt
js
enter
iret
xor
push
inc
mov
call
daa
dec
je
lahf
add
push
xchg
pop
retf
cmp
mov
mov
jbe
loope
xchg
mov
xchg
sahf
push
jle
in
into
adc
jmp
cmc
jp
add
mov
dec
icebp
add
enter
std
bound
sub
enter
mov
rcr
push
mov
fstp
dec
daa
mov
sub
lahf
je
xchg
inc
ret
push
xchg
loop
test
pop
mov
pushf
sub
mov
in
int
ds
mov
ja
out
sub
cmp
cmps
sub
jae
nop
mov
outs
jne
inc
shl
mov
not
push
stos
test
outs
sub
in
add
pop
mov
sbb
xor
stc
xchg
jl
fsub
jl
push
scas
xor
jne
xor
leave
mov
dec
dec
xchg
mov
jecxz
jae
nop
inc
fcmovbe
xor
shl
pop
leave
jmp
pop
(bad)
mov
movs
xchg
or
cmps
mov
bound
xlat
mov
adc
mov
push
in
push
(bad)
pop
inc
ss
inc
fwait
add
idiv
div
test
pop
cmp
jnp
lods
ja
push
and
push
jb
sub
adc
adc
inc
mov
xchg
leave
mov
mov
sti
daa
xlat
movs
jmp
mov
lahf
add
xchg
pop
jnp
xchg
push
imul
fcom
sub
hlt
shl
dec
je
test
je
jnp
loope
xor
stc
rcr
and
pop
jne
(bad)
ins
sub
xchg
adc
push
stc
sahf
xchg
outs
in
inc
lds
test
fs
mov
test
mov
cmps
test
sbb
add
xchg
dec
sub
cmps
sub
movs
mov
sbb
mov
stc
xchg
add
les
adc
adc
(bad)
ror
xor
aas
fs
enter
lahf
mov
jbe
in
sub
arpl
dec
aaa
clc
add
push
push
into
vmovddup
repnz
and
cmp
mov
and
(bad)
imul
popf
or
mov
sub
fistp
fidivr
imul
scas
inc
je
cmp
xchg
xchg
sub
jo
sbb
mov
xor
out
stc
outs
and
mov
push
jecxz
push
pushf
xchg
out
mov
pop
movs
sti
dec
icebp
lahf
imul
jl
inc
pop
rcr
(bad)
mul
adc
mov
sub
int
hlt
test
(bad)
nop
add
js
push
or
cdq
idiv
mov
ficom
jecxz
pop
push
sahf
cdq
pop
dec
dec
dec
sub
xchg
nop
pop
les
xchg
push
stos
xor
jmp
dec
data16
xchg
hlt
add
js
or
lods
int
(bad)
pop
sub
xchg
or
pop
sub
dec
xchg
push
mov
div
cmp
cmp
mov
add
scas
pop
inc
fcom
sub
(bad)
ins
in
sbb
push
ins
add
ja
xor
imul
data16
jge
push
sub
adc
adc
jmp
stc
cmp
xchg
mov
pop
push
sub
test
lock
xchg
(bad)
or
pop
lods
pop
cs
ja
call
enter
xor
scas
mov
sub
and
adc
jmp
mov
popf
addr16
outs
(bad)
out
pop
les
cmp
jl
mov
repnz
mov
or
inc
jg
dec
sti
add
xchg
dec
or
rcr
loopne
les
mov
mov
push
xchg
add
jmp
in
fisub
arpl
test
stos
mov
lea
adc
aad
push
add
(bad)
scas
sar
mov
push
mov
cmp
cmp
xor
sbb
cmps
adc
aaa
xor
dec
pusha
xchg
test
fcmovbe
push
dec
scas
(bad)
lock
sahf
mov
and
cwde
and
clc
aam
repnz
adc
sub
mov
dec
aad
cli
test
push
dec
arpl
push
in
lea
xchg
cmc
int
cdq
xlat
mov
mov
gs
dec
aas
gs
pusha
(bad)
out
repz
jne
mov
in
enter
inc
mov
stos
retf
pusha
push
sbb
(bad)
stos
push
int3
mov
xor
mov
or
sub
add
aam
pop
xchg
retf
mov
xchg
inc
fcom
int
fsub
mov
cmp
rol
push
popf
inc
inc
or
test
dec
adc
inc
mov
and
int
mov
mov
cmc
jle
xchg
sub
(bad)
icebp
sub
push
lock
stos
and
aas
sar
add
fs
mov
mov
dec
xor
sub
mov
jne
and
js
push
jo
ss
inc
push
imul
(bad)
pop
in
ficom
mov
pusha
mov
push
aad
loop
pop
cmps
and
and
pushf
and
mov
fwait
aaa
or
jnp
pop
in
pop
pop
in
pop
les
and
ds
retf
xchg
push
out
mov
xor
add
or
(bad)
cld
push
ja
cmc
in
fcom
test
and
xor
lock
pop
fsub
inc
add
mov
fxam
lods
jne
or
arpl
sbb
out
sbb
jg
int
fbstp
arpl
loope
jbe
das
add
icebp
call
add
out
adc
aaa
enter
mov
vmread
jl
push
leave
les
pop
std
test
jg
(bad)
aaa
je
outs
movs
xor
cmp
inc
sti
adc
lods
shr
hlt
or
jecxz
les
sbb
pop
out
cwde
cmp
xchg
mov
shl
pop
mov
cs
cmp
pop
outs
lods
stc
lods
dec
mov
adc
leave
jmp
fld
sbb
jae
mov
cmp
js
and
gs
loop
add
jbe
mov
pop
cmp
ror
jno
mov
push
dec
cmp
fcom
xchg
jnp
ficomp
jno
ret
pusha
cmps
inc
pop
js
pop
push
loopne
loopne
xchg
loopne
dec
mov
movs
mov
push
std
je
jb
adc
xchg
inc
(bad)
gs
out
inc
add
push
push
push
push
xchg
add
std
mov
mov
dec
xor
cmp
mov
outs
push
bound
ins
mov
in
inc
(bad)
cmp
fbstp
sub
dec
int
add
addr16
or
std
movs
pop
movs
cdq
icebp
int
inc
xor
sbb
xor
xchg
inc
mov
jns
popf
push
add
retf
xchg
mov
call
fcomp
mov
or
into
sub
mov
call
loop
fidivr
mov
adc
add
mov
(bad)
xchg
ficom
shl
les
(bad)
in
cmp
push
shr
mov
leave
inc
xchg
inc
outs
jmp
cs
dec
sub
das
mov
sahf
sbb
movs
mov
jb
arpl
dec
inc
mov
dec
loopne
bnd
sub
cs
iret
xchg
or
add
cmp
pop
imul
xchg
jns
sbb
or
scas
push
shl
and
mov
push
push
adc
sbb
jmp
mov
fdivr
sbb
sub
or
inc
xchg
xor
or
mov
cld
inc
pop
push
cmp
aad
pop
mov
outs
(bad)
popa
push
jno
cmp
mov
pop
jge
retf
retf
dec
jnp
or
stos
test
scas
dec
dec
push
mov
retf
mov
mov
sub
ss
xor
sbb
add
in
test
in
ret
lods
dec
adc
jp
cmp
ror
call
and
loope
sahf
shl
mov
(bad)
sbb
jo
mov
and
es
clc
aam
and
nop
lahf
out
jns
cmp
aaa
loop
fdiv
inc
inc
mov
sar
push
jae
neg
imul
mov
jge
cmp
jo
sbb
mov
fist
dec
out
jl
loopne
dec
scas
test
dec
and
pop
in
adc
push
outs
mov
cmps
xchg
pop
dec
xor
retf
rcl
les
shr
push
inc
xlat
jae
loop
inc
add
mov
jb
inc
xchg
jmp
jmp
and
jle
dec
ret
mov
sahf
mov
push
pop
fst
push
outs
loopne
outs
test
lahf
pop
out
or
jmp
lds
cwde
popf
ins
(bad)
mov
cmp
cdq
sub
cmp
push
inc
and
push
outs
xor
xor
gs
ins
loope
push
outs
int3
jl
ds
mov
push
nop
mov
test
adc
xchg
sub
jmp
mov
inc
add
aas
fiadd
cwde
test
call
call
push
pop
jmp
cmp
dec
mov
sub
hlt
jns
jo
sbb
xor
xor
cdq
or
test
ins
jp
mov
mov
pop
jl
push
jnp
jno
mov
jae
mov
stos
jmp
or
dec
xchg
icebp
scas
test
xor
dec
iret
push
jo
stc
je
jb
and
jecxz
das
movs
jmp
hlt
shl
out
mov
test
fadd
cmp
jb
popf
mov
ror
sub
(bad)
lock
mov
inc
ret
ins
fucom
test
arpl
inc
rcr
popf
cld
scas
jnp
and
pop
aaa
mov
mov
(bad)
lods
movs
add
push
sub
mov
aas
xor
fimul
sub
xor
lock
mov
dec
pop
xor
loope
jae
and
cmp
outs
repz
and
dec
inc
jmp
mov
cdq
cmc
fsubr
and
sub
cdq
retf
or
cmp
push
mov
xor
push
xchg
outs
dec
popa
add
add
and
cmp
shr
repz
popf
xlat
add
imul
enter
les
or
mov
sti
sbb
cmps
inc
es
xor
int
rcl
aas
aad
out
pop
and
lahf
cmp
mov
into
call
loope
outs
add
aas
push
inc
ror
fcomp
mov
(bad)
test
or
fldcw
push
rol
out
mov
test
out
xchg
jnp
mov
out
add
mov
pop
push
add
xor
int3
xor
mul
(bad)
push
cld
mov
ja
inc
sbb
or
fisttp
daa
(bad)
mov
repz
push
movs
inc
add
cmp
or
jp
rcr
push
mov
push
repz
pop
mov
stos
push
jnp
mov
push
sahf
call
sub
(bad)
test
pop
mov
outs
sbb
fistp
out
or
call
xor
in
push
sbb
addr16
lock
int
mov
mov
(bad)
sti
scas
ins
add
(bad)
stc
xor
adc
inc
adc
lahf
repnz
fwait
je
je
pop
sbb
jg
cwde
das
push
jle
push
xor
repnz
ret
das
or
push
fdivr
cmc
jae
push
inc
and
into
ja
sti
lahf
inc
fldcw
and
in
and
xor
pop
mov
mov
push
add
shl
stc
hlt
mov
add
ror
dec
mov
push
frstor
add
imul
popf
ret
js
xor
ret
jne
fist
(bad)
std
or
sub
loopne
inc
in
lahf
adc
mov
test
sbb
das
ja
xchg
into
loope
mov
mov
sub
ins
xchg
jno
add
push
adc
xchg
sub
(bad)
loopne
ret
in
inc
call
xchg
and
mov
cdq
(bad)
loop
out
scas
jg
scas
(bad)
add
sub
xor
das
or
(bad)
fmul
test
inc
jmp
loope
sbb
mov
inc
inc
inc
clc
jge
arpl
pushf
call
and
test
outs
jmp
fld
inc
mov
cmps
fldenv
xchg
or
mov
adc
adc
cmp
cs
mov
mov
jbe
dec
xchg
test
outs
add
mov
cmp
mov
mov
mov
rol
cmp
into
outs
adc
ss
out
retf
dec
loop
or
push
bound
cmp
movs
rcl
aaa
clc
cdq
mov
jne
rcl
clc
or
hlt
cmp
jns
and
cld
retf
outs
jmp
mov
in
xchg
cld
mov
dec
repnz
cmp
retf
movs
jo
rcl
cmps
cmps
dec
movq
inc
icebp
inc
adc
mov
push
lods
mov
jmp
add
adc
cwde
call
pop
pop
add
clc
scas
in
call
outs
in
jbe
sbb
cdq
inc
mov
mov
cmp
test
sbb
cmp
out
shl
xchg
lods
add
aaa
mov
adc
adc
ret
jmp
jle
loope
xchg
mov
mov
sub
cwde
dec
mov
daa
or
or
jmp
hlt
aam
hlt
(bad)
and
(bad)
out
pusha
mov
cmp
add
mov
sar
jmp
mov
fs
dec
mov
and
push
pop
ja
and
inc
add
repz
aam
dec
mov
scas
add
fisubr
lds
lds
cmc
repz
jmp
sbb
rcr
mov
mov
imul
ret
clc
pusha
lods
sbb
mov
outs
xor
lahf
mov
fistp
stos
jne
ins
in
xor
ss
cmc
pop
lahf
imul
sar
loopne
jp
xchg
mov
fisubr
inc
jnp
push
call
xchg
in
sbb
ficom
call
xchg
jae
cdq
es
lock
or
mov
xor
cmp
(bad)
hlt
rcr
mov
ss
dec
aas
in
ss
fcmove
daa
popa
or
cmps
adc
or
and
fld
sbb
xchg
mov
or
mov
pop
stos
push
pop
sti
pop
add
div
popa
scas
out
ins
test
jnp
mov
movs
ds
xor
lods
ret
outs
es
shl
je
sub
mov
(bad)
(bad)
and
outs
and
pop
fisttp
mov
inc
sbb
lods
std
lods
shl
xchg
shr
popf
adc
mov
xchg
std
pop
inc
pop
std
or
or
fcom
jo
test
sub
outs
sahf
pop
xchg
xchg
aad
(bad)
pop
push
fs
pop
popa
dec
inc
in
into
sub
cmp
pop
jmp
pop
movs
retf
imul
jnp
imul
ret
jae
inc
mov
aad
aas
mov
test
aaa
mov
lods
iret
(bad)
jmp
inc
push
sub
nop
sub
xchg
jmp
cld
out
imul
jb
in
fld
jb
(bad)
sbb
leave
push
pusha
fcmovne
imul
fld
ins
out
movs
mov
xor
sub
movs
ficom
outs
and
iret
cmp
pop
and
sahf
icebp
enter
cmp
add
test
jb
mov
add
cmp
into
and
add
lea
sar
mov
cmp
dec
mov
shr
aas
test
xor
mov
sub
mov
or
mov
imul
into
pop
out
lods
mov
outs
cmp
or
and
pop
clc
adc
sbb
xlat
(bad)
xor
jnp
repnz
lahf
jle
in
sbb
imul
aam
xchg
popf
lods
fwait
dec
leave
ins
jle
mov
clc
fld
imul
jle
stc
dec
mov
and
xor
xor
or
inc
sub
jg
pop
cmc
inc
pop
mov
scas
dec
cmp
xadd
and
cmp
stos
(bad)
call
jp
adc
jmp
sub
test
xlat
mov
or
cmp
int
or
fwait
mov
dec
je
pop
icebp
imul
in
xchg
pop
add
xor
aaa
pop
and
jns
push
push
lea
push
xchg
jmp
dec
xor
pop
outs
aaa
std
test
jae
jmp
fcmovne
add
push
jae
sahf
jae
into
mov
sub
mov
not
imul
adc
mov
sti
jmp
out
inc
(bad)
sbb
sub
ficomp
dec
mov
adc
cli
jp
ret
int
push
mov
ins
repz
ret
jb
xor
mov
adc
add
sub
jb
mov
bound
xor
bound
add
aaa
nop
or
push
aas
xor
test
std
es
cmp
(bad)
shr
push
stos
fdivr
or
stos
mov
icebp
das
pop
mov
xor
pop
jl
lods
jno
cmp
retf
dec
icebp
mov
rcl
clc
out
fisttp
aas
xchg
(bad)
std
dec
sbb
xor
out
mov
ret
or
pusha
push
inc
aad
mov
mov
out
dec
fsubp
iret
adc
xchg
popa
stos
and
in
add
push
fs
adc
fdiv
sbb
lods
scas
mov
mov
in
enter
mov
fnstenv
add
sub
xchg
sbb
test
cmps
adc
std
add
das
cmps
or
ja
(bad)
add
rcl
xor
bound
stc
cmc
clc
(bad)
cmp
dec
inc
add
or
add
mov
jns
sti
cs
mov
pop
mov
or
popa
mov
jge
test
cmove
les
add
sti
xor
mov
and
adc
int3
mov
add
mov
mov
inc
push
scas
(bad)
sbb
adc
mov
mov
push
pop
mov
or
push
call
(bad)
out
cmps
push
clc
leave
push
dec
dec
adc
ds
fcom
mov
and
lahf
jbe
popf
cs
and
jnp
fidiv
sub
test
and
lods
mov
loop
ins
mov
sub
fs
cmps
pop
gs
les
pushf
sbb
repz
clc
sbb
not
mov
addr16
push
lea
mov
aam
and
xchg
add
lods
imul
lods
stc
fild
mov
add
sub
inc
push
fnstenv
mov
retf
sbb
and
ficom
addr16
or
pop
out
and
sahf
iret
out
pop
add
cmp
push
xor
je
jo
out
xchg
pushf
push
inc
sbb
mov
or
or
out
dec
jmp
cmp
jmp
fld
inc
jae
push
cmps
outs
retf
pop
scas
cmp
push
call
mov
repz
dec
mov
sbb
sbb
and
push
cmp
and
pop
mov
add
std
sbb
sbb
(bad)
cmp
adc
inc
mov
sub
cdq
mov
add
jae
frstor
sub
cwde
fdiv
lods
jecxz
xor
mov
in
iret
mov
or
jl
into
ja
mov
inc
pop
xchg
outs
jb
xor
and
(bad)
pop
ror
movs
lahf
movs
cmp
test
retf
dec
sub
sti
cmp
jge
inc
or
and
sti
push
iret
sahf
add
pop
clc
dec
inc
les
cs
pop
push
adc
dec
fimul
fisub
adc
icebp
ror
lods
xor
xlat
add
pop
not
into
sub
sahf
cmc
imul
fnsave
pop
ret
mov
jno
push
in
push
mov
enter
cwde
ficomp
dec
jnp
lea
in
fwait
retf
xor
fiadd
sbb
retf
cld
dec
ins
mov
xor
out
lock
lea
test
push
cmp
dec
outs
outs
pop
data16
enter
fadd
sub
cmp
push
jmp
adc
mov
daa
in
jno
nop
mov
jns
ret
retf
pop
sub
cdq
cmp
adc
sbb
push
in
push
xor
mov
mov
test
jmp
or
ins
aad
mov
xchg
or
push
nop
adc
jno
pusha
sub
and
and
xchg
add
and
inc
jmp
push
aaa
xchg
xchg
adc
pop
jge
test
gs
inc
jge
es
mov
fidivr
dec
iret
movs
add
arpl
push
jmp
pop
and
ds
pusha
pushf
arpl
outs
call
dec
inc
dec
popf
jns
push
lods
repz
push
mov
and
cmp
repz
dec
xchg
sbb
fmul
je
fxam
jle
and
push
inc
mov
add
jne
mov
pop
sub
jno
pop
push
fcomi
xrelease
pop
mov
mov
(bad)
(bad)
xchg
in
and
lea
js
dec
pushf
mov
cmp
jnp
dec
(bad)
iret
push
int3
jns
jge
push
dec
dec
xchg
leave
pop
cs
repnz
fs
adc
(bad)
fcmovu
or
enter
push
sub
cmp
fbld
push
retf
leave
adc
out
jnp
fcomip
icebp
mov
xchg
jno
sub
add
(bad)
sahf
cmp
sub
retf
ds
test
in
gs
pop
fadd
es
(bad)
and
mul
inc
jnp
xor
test
push
mov
arpl
jmp
cmps
dec
lahf
retf
mov
xchg
mov
and
xlat
hlt
mov
pop
jns
add
stos
mov
mov
mov
test
or
imul
cmp
xchg
fcomi
jecxz
enter
pop
in
sahf
call
mov
repz
sar
shl
sti
enter
popa
dec
mov
popa
add
mov
sbb
push
mov
push
adc
jne
jo
xchg
ins
adc
aad
leave
jae
add
out
sbb
adc
pop
enter
adc
or
jp
mov
stos
mov
dec
cmp
push
(bad)
mov
mov
and
div
repnz
out
push
sahf
std
xchg
call
push
ins
add
sub
or
ret
pop
stc
pop
sbb
sub
aad
mov
repnz
test
jl
movs
push
cmp
xlat
cwde
or
ins
jno
test
adc
mov
or
pop
or
dec
(bad)
movs
inc
shl
xchg
inc
adc
mov
mov
(bad)
cmp
push
sbb
and
and
push
or
(bad)
mov
inc
cmp
mov
mov
xor
or
retf
push
jnp
mov
cmp
mov
call
mov
cli
xor
push
fwait
xchg
popa
cdq
outs
hlt
jae
loope
and
nop
or
movs
and
fwait
ja
pop
jle
cmp
sbb
jp
loope
jge
push
jmp
fbld
test
push
(bad)
xchg
and
popf
lea
sub
sub
push
mov
push
xchg
sbb
mov
les
sbb
mov
mov
(bad)
mov
dec
push
jns
adc
ins
add
push
imul
and
imul
adc
movs
(bad)
(bad)
sbb
jl
xchg
mov
jge
dec
aad
add
loop
adc
xchg
sub
mov
adc
fdiv
scas
retf
test
mov
not
int3
jle
push
loop
mov
or
jl
test
fidiv
mov
mov
stc
imul
pusha
xor
sub
mov
iret
data16
xor
adc
mov
sbb
xor
and
sub
out
sar
push
inc
pop
mov
push
mov
repnz
jge
sbb
cld
inc
in
xor
mov
mov
jg
hlt
jb
or
loopne
ins
jg
inc
sbb
or
arpl
cmp
imul
aad
add
rcl
in
xlat
sbb
xor
sbb
add
and
and
mov
adc
push
repz
push
adc
inc
and
(bad)
shrd
imul
aad
jns
ret
int
adc
ret
mov
adc
out
push
movs
pop
loopne
in
xchg
inc
pop
and
push
add
imul
mov
cmp
or
add
jg
mov
popf
ret
mov
movs
int
pop
clc
inc
xchg
adc
adc
mov
(bad)
sti
mov
stos
xchg
jo
xlat
push
rcr
mov
push
daa
push
int
cmp
push
into
and
mov
jae
scas
xlat
dec
addr16
cmp
mov
mov
jnp
mov
xchg
js
add
mov
pop
mov
inc
cmp
pop
and
cdq
lds
jne
mov
sbb
rcl
inc
(bad)
adc
es
call
aas
xor
(bad)
in
jae
and
(bad)
jle
jb
lahf
scas
fsubr
in
mov
in
xor
mov
add
hlt
xor
push
sub
and
enter
das
adc
push
or
xchg
mov
jl
daa
aam
in
inc
repz
fwait
and
gs
jb
mov
arpl
xor
mov
xchg
loope
mul
mov
inc
dec
add
fadd
sub
aam
les
arpl
inc
jg
jne
imul
inc
mov
pop
mov
aad
cmps
out
cmps
sub
adc
and
add
mov
dec
xchg
cs
xlat
neg
jbe
iret
add
pop
mov
bound
fld
mov
pop
or
ret
inc
and
pop
cmps
cmp
mov
popa
sbb
or
(bad)
movs
or
mov
fbld
lahf
sbb
mov
ins
push
inc
push
xchg
sbb
pop
xchg
sbb
mov
adc
or
xchg
(bad)
mul
leave
mov
retf
rcr
jae
xor
cld
and
xor
mov
sbb
mov
dec
int3
fisubr
imul
jns
jle
pop
adc
inc
jae
or
jl
inc
push
pop
mov
add
into
div
test
xchg
sbb
loop
pop
xchg
and
sub
arpl
and
outs
xchg
cmp
test
and
sahf
sti
dec
daa
mov
xor
test
sub
stos
aaa
std
in
adc
repz
jbe
xchg
xchg
ror
call
sti
mov
inc
jno
ins
pop
push
xor
xor
jmp
add
lock
test
xchg
ja
adc
mov
pop
mov
popf
imul
lds
dec
push
adc
es
cli
xor
mov
lds
add
lahf
ja
(bad)
std
inc
dec
sub
scas
dec
pop
repz
sub
cmp
fs
xor
aam
xchg
arpl
mov
xor
cmps
nop
mov
jne
ror
out
aad
loop
cmp
and
dec
xor
js
dec
mov
dec
push
out
dec
add
enter
inc
movs
cmp
mov
sti
ds
or
unpcklps
iret
hlt
dec
dec
test
adc
icebp
(bad)
push
hlt
mov
int
xchg
ja
or
lds
push
inc
ins
push
ret
xlat
and
leave
(bad)
cli
pop
inc
xor
arpl
xor
xchg
mov
je
inc
add
retf
jge
pop
sbb
shl
mov
mov
inc
inc
js
jnp
inc
xchg
or
popa
add
push
dec
cmp
(bad)
fdivr
mov
pop
lods
call
pusha
lods
int
mov
retf
std
mov
sub
adc
cmp
les
mov
call
movs
enter
out
inc
sbb
mov
aam
pop
sbb
sbb
xchg
mov
nop
test
sbb
rcr
je
add
clc
jo
mov
cwde
sbb
jns
jp
pop
(bad)
in
adc
mov
in
dec
mul
enter
in
add
das
jbe
dec
loopne
test
mov
pop
sub
lea
repz
mov
xor
lods
dec
ficomp
sar
pop
fs
aad
sbb
rol
arpl
das
cmc
pop
push
or
arpl
sbb
mov
icebp
xchg
pop
sub
xor
fs
sbb
dec
das
aaa
or
iret
push
(bad)
popf
out
ja
cld
sar
mov
fld
dec
test
pop
test
daa
loop
in
pop
test
inc
fld
mov
popf
js
scas
stos
adc
jmp
inc
test
repnz
add
call
mov
sbb
(bad)
sbb
jmp
dec
cwde
les
dec
add
arpl
adc
add
jns
push
jge
sub
cmp
xchg
ja
call
mov
pop
mov
sahf
xchg
cwde
(bad)
mov
or
mov
out
cwde
xchg
jl
adc
mov
popa
inc
mov
les
cmp
jg
jmp
push
pop
xchg
fdivr
inc
out
or
pop
loop
sub
xchg
cmp
loope
cld
add
cmp
ficom
out
or
lds
div
test
or
cmps
aam
retf
inc
inc
xor
shr
sub
arpl
test
pop
cmps
dec
jl
add
aaa
push
pop
xchg
or
and
jl
adc
add
pop
sbb
movs
add
sbb
ins
inc
xor
jge
mov
adc
mov
sub
push
push
inc
lods
add
rcl
adc
pop
(bad)
sub
or
fs
push
imul
test
push
enter
jne
adc
push
jg
fs
and
call
pop
cmps
and
rol
test
cmp
ret
aad
mov
in
cmp
lahf
out
mov
fld
out
cs
in
scas
cmp
xchg
jne
loopne
or
daa
sbb
mov
mov
xchg
into
imul
int
ror
push
fistp
sub
jno
xor
in
push
dec
mov
ret
and
aam
adc
add
pop
jl
popa
mov
mov
stos
fimul
out
es
ins
adc
ds
das
fild
call
test
sbb
iret
popf
xchg
inc
add
dec
mov
sub
xchg
mov
shr
xchg
lods
push
fistp
dec
sub
movs
sbb
inc
cmps
mov
movs
sidtd
or
add
movsx
jmp
jl
stos
(bad)
aam
pop
cmp
outs
test
retf
inc
in
in
call
pop
xchg
inc
pop
retf
xchg
mov
jge
lods
mov
sahf
jbe
push
or
pop
scas
(bad)
fild
xlat
adc
push
push
xchg
sbb
test
fcomi
aaa
and
dec
push
test
pushf
test
cmp
push
sub
leave
pushf
dec
ins
sbb
cli
hlt
push
mov
jo
mov
inc
out
jb
pop
xchg
adc
ja
sub
sub
xchg
outs
sub
scas
push
fs
mov
mov
cdq
dec
pop
jbe
in
xor
inc
outs
or
xor
mov
lahf
push
inc
cmp
dec
ss
inc
mov
std
and
and
pop
movs
adc
loopne
add
(bad)
(bad)
cli
xchg
mov
icebp
scas
cdq
in
or
fucomip
cmp
dec
inc
(bad)
xchg
mov
(bad)
js
pop
imul
xchg
out
cmp
xchg
int
adc
test
xor
jno
adc
movs
cmp
movs
stos
adc
pop
pusha
cmp
out
xor
jnp
cmps
sti
call
pop
test
xor
xor
mov
mov
or
lea
sbb
into
fwait
aam
cdq
out
and
jmp
les
mov
jecxz
xor
pop
aas
push
in
push
lds
mov
retf
inc
les
cmp
sbb
test
(bad)
jmp
loopne
dec
or
loope
inc
mov
jb
cwde
mov
rcr
sbb
js
pop
mov
push
mov
data16
pop
imul
pop
mov
pop
or
mov
sub
cwde
cmp
xchg
daa
jg
test
aam
call
sbb
sub
push
pop
aad
je
mov
push
popf
adc
(bad)
push
out
cmc
xchg
fild
mov
mov
movs
hlt
jge
into
sbb
test
les
(bad)
sbb
xor
pusha
mov
cmp
push
cmp
dec
mov
lods
nop
ins
lea
cs
pop
jl
inc
int
repz
shr
fimul
int3
inc
cmp
add
leave
jo
fs
jae
pop
cmps
jmp
or
xchg
retf
cdq
adc
test
mov
cmp
sub
daa
adc
daa
outs
mov
or
shr
jb
or
mov
retf
jmp
sub
jno
std
and
std
ror
jp
stos
jle
push
fidiv
sbb
mov
jmp
or
aaa
add
sbb
xchg
call
adc
or
fst
(bad)
aad
sub
dec
pop
or
push
or
mov
je
sub
adc
popf
push
bound
lock
shr
lahf
fucomp
jb
jo
jmp
pop
or
sub
arpl
dec
cmps
jo
(bad)
adc
popf
xchg
out
iretw
adc
das
adc
test
(bad)
mov
lahf
sbb
push
mov
inc
pushf
lods
es
ret
jmp
addr16
mov
sub
xchg
repnz
adc
pop
fdivr
out
inc
sbb
out
sahf
idiv
retf
mov
loopne
pop
aaa
and
aas
jle
shr
movs
adc
dec
push
and
daa
push
idiv
fidiv
sub
adc
mov
mov
xor
data16
push
ins
sar
mov
pop
(bad)
mov
loop
dec
dec
cmc
fdivr
jle
ss
cwde
dec
push
push
cwde
mov
rcr
jmp
mov
push
and
lahf
js
mov
loopne
sbb
mov
not
or
mov
mov
out
mov
imul
test
mov
hlt
jl
(bad)
xchg
pop
inc
sbb
out
mov
pop
fwait
mov
out
lods
push
popa
mov
xor
cmp
stos
mov
shl
inc
cmovb
xor
sbb
adc
add
pop
push
imul
arpl
xchg
xchg
outs
push
sahf
aas
(bad)
jmp
out
push
adc
mov
adc
(bad)
loop
add
pop
cdq
xchg
pop
and
lea
push
xchg
jmp
xchg
fwait
lahf
fsub
sahf
rol
js
lods
add
xchg
test
out
xor
sub
pop
xchg
inc
gs
ds
cmps
and
inc
add
mov
scas
jnp
scas
or
adc
pop
cld
out
loopne
loopne
bound
mov
pop
fst
mov
or
fwait
cld
pop
movs
rol
adc
sub
or
ffreep
push
cmps
mov
data16
jle
mov
(bad)
fsub
hlt
mov
cmp
jecxz
jl
rcr
dec
push
fcomip
outs
xchg
xchg
mov
test
in
pop
imul
call
sbb
outs
xor
daa
ja
out
or
or
mov
dec
push
pop
pop
mov
movs
cli
(bad)
jae
icebp
jo
add
out
xor
push
xchg
adc
push
stos
push
pop
call
push
dec
aaa
dec
sahf
fwait
sti
cs
int
xchg
dec
add
cmp
cmps
inc
mov
xor
adc
inc
mov
movs
and
jne
mov
mov
sub
add
in
stos
xor
jnp
cmp
ja
cld
cmps
popa
inc
sahf
inc
mov
retf
inc
add
cmp
inc
mov
mov
jne
jge
push
test
repnz
push
mov
into
sub
jmp
mov
jg
lds
and
es
popf
pop
dec
sbb
jg
inc
(bad)
mov
stc
pusha
jmp
ss
call
rcl
jne
push
dec
lea
lahf
lock
outs
mov
dec
aam
push
out
xchg
jle
add
out
ret
cmps
(bad)
pop
pusha
pop
aas
inc
add
inc
pop
ror
xchg
cmps
fdiv
mov
std
sub
arpl
adc
cmp
and
push
sub
xchg
jo
hlt
out
rcl
std
and
dec
dec
xor
inc
js
test
pop
daa
inc
mul
jno
rol
cmp
(bad)
jns
xor
mov
repnz
add
sar
icebp
outs
xchg
mov
dec
dec
jns
pop
lods
xchg
inc
xor
mov
push
or
jl
mov
sub
bound
xchg
sub
pop
jnp
icebp
fistp
out
sub
adc
inc
jge
iretw
nop
mov
sbb
jle
in
in
dec
dec
rcr
(bad)
jle
sub
loop
pop
jg
sbb
adc
sub
(bad)
rcl
movs
mov
dec
mov
int
clc
outs
loope
xchg
pop
add
jno
pop
arpl
lea
dec
cmp
lods
ss
icebp
ret
stc
mov
jo
test
sbb
push
movs
sub
dec
or
sbb
leave
fld
out
sub
or
daa
sti
cmp
jg
cmp
jbe
arpl
sub
mov
call
xor
fisubr
clc
jle
test
es
xchg
mov
inc
mov
mov
stos
fadd
inc
push
cmps
and
adc
cdq
cwd
adc
cmp
push
addr16
dec
inc
rol
cmps
test
jmp
aas
gs
dec
sub
add
dec
push
sti
out
pop
adc
mov
push
cmp
mov
xor
cmp
lods
pop
movs
idiv
lods
test
aas
pop
popa
cli
ins
int3
mov
adc
or
mov
mov
vpopcntw
fnstcw
mov
jmp
cmp
sbb
test
hlt
xor
dec
test
iret
dec
inc
repnz
inc
jbe
or
call
es
(bad)
stc
pop
cld
std
mov
mov
mov
lock
call
jge
cwde
mov
int3
cmp
xchg
repnz
lods
jo
and
es
inc
repnz
jecxz
xor
inc
imul
cmp
stos
imul
dec
iret
into
imul
out
cmc
pop
in
adc
sar
pop
lock
sub
arpl
jle
add
fsubp
rol
and
xchg
cmp
xchg
jp
shl
in
(bad)
(bad)
and
mov
jb
test
sub
cmp
lea
pop
xchg
aam
(bad)
mov
jmp
into
dec
call
les
in
(bad)
xchg
or
fadd
jmp
sar
ror
mov
push
dec
jnp
inc
push
push
cmp
leave
cmp
fwait
and
fwait
int3
out
jl
cdq
jle
xchg
cdq
aaa
mov
dec
fisttp
dec
pop
repnz
cmp
jne
arpl
inc
mov
sub
enter
ret
mov
cmp
jae
pop
or
fcmove
and
dec
mov
mov
push
sbb
jl
or
mov
pushf
mov
scas
pop
ja
cmp
js
push
push
xor
xchg
outs
inc
cmp
pop
repz
rcr
mov
add
loope
fsubp
call
pop
ins
add
div
mov
pop
in
jb
jmp
loopne
sbb
test
jl
and
inc
mov
data16
es
sahf
leave
pop
ja
pop
dec
push
js
aam
das
pusha
loopne
mov
into
loopne
and
add
push
push
aas
cld
adc
cli
mov
or
sti
push
dec
xor
call
hlt
lods
mov
lock
movs
int
outs
adc
cld
xor
sub
pop
cmp
cmc
mov
jmp
jns
loop
push
cmp
cdq
outs
rol
out
inc
or
inc
cmp
fnstsw
xchg
cli
sub
fnsave
in
(bad)
clc
shl
sub
popa
xchg
add
sub
cmp
test
fsubrp
mov
out
in
jns
das
xor
loop
xchg
mov
xchg
int3
and
leave
adc
scas
addr16
push
(bad)
xlat
mov
push
into
in
ret
sti
icebp
cmps
push
sub
pushf
(bad)
push
(bad)
xchg
mov
(bad)
in
ss
sub
jnp
rcl
mov
ja
mov
jnp
sub
jg
sub
aaa
mov
and
ror
lock
pop
call
scas
movs
out
xchg
jo
imul
jmp
addr16
imul
cmc
pusha
lock
mov
fmul
sbb
and
fimul
mov
and
sbb
sahf
repnz
mov
test
xor
(bad)
arpl
jmp
pop
mov
push
cs
(bad)
(bad)
mov
jno
fs
inc
mov
mov
xchg
and
push
sbb
mov
cmp
push
push
pop
call
stos
aas
mov
outs
and
sbb
xchg
jo
popa
mov
jge
pop
mov
(bad)
adc
ins
cmp
push
dec
mov
mov
sub
sbb
and
or
mov
cmps
and
and
in
push
lods
sub
outs
shl
fisttp
dec
out
cmps
hlt
jle
aaa
push
jbe
out
aaa
in
and
push
dec
mov
xchg
pop
mov
pop
jmp
lds
dec
xor
mov
rcr
sub
cmp
(bad)
dec
sbb
out
aas
aad
retf
scas
fdivp
lock
inc
imul
xor
pop
mov
and
push
lods
adc
jb
push
dec
ret
ret
ror
and
sti
stc
jg
cs
test
xchg
aas
rcr
cwde
mov
xor
mov
or
inc
jge
xchg
retf
nop
sub
repnz
stos
mov
mov
stos
mov
or
add
xor
loope
lods
rcl
jl
push
shl
jg
or
xor
and
or
push
fdivr
lea
cli
add
and
rcl
or
ret
pop
mov
sub
dec
lods
sbb
pop
pop
inc
and
sub
ja
mov
dec
push
mov
xchg
icebp
movs
and
test
push
gs
lods
dec
pusha
xchg
adc
dec
xchg
daa
cld
rol
xlat
pop
mov
sub
jle
(bad)
aaa
aas
or
daa
test
inc
xchg
js
jbe
inc
dec
adc
pop
push
fbstp
sub
pop
sub
cmp
add
data16
sub
mov
popf
dec
xor
mov
adc
fisub
xor
fs
cwde
or
dec
jo
in
inc
cmp
dec
ds
daa
sbb
jmp
mov
mov
mov
inc
sub
inc
imul
xchg
out
int3
js
xchg
xchg
dec
mov
sbb
jns
out
je
push
repz
push
test
pop
fdivr
ror
mov
xor
inc
push
mov
jge
fmul
dec
mov
mov
loopne
xor
clc
test
pop
sbb
xchg
icebp
sti
adc
sbb
sub
sbb
es
inc
adc
fadd
pandn
cli
sub
mov
test
scas
out
fld
iret
stos
and
and
hlt
lods
jmp
cmp
lds
pop
push
xchg
sbb
xor
jno
les
mov
daa
or
ret
rcl
push
out
in
cmc
mov
mov
fnclex
addr16
retf
stos
add
and
push
sub
outs
add
cmp
jle
(bad)
enter
dec
(bad)
sar
fldenv
sub
outs
dec
popf
mov
addr16
xor
ins
repnz
(bad)
leave
xchg
pop
mov
shl
mov
push
aad
fsubr
mov
pop
ins
icebp
cmp
cwde
std
gs
int3
jnp
shl
cs
shr
add
nop
stos
in
mov
push
jmp
test
xchg
dec
xchg
movs
fistp
jge
test
call
push
mov
or
dec
(bad)
push
jae
cmp
push
inc
xor
outs
mov
pop
add
and
mov
aaa
jne
je
ins
lods
jbe
fstp
and
mov
add
push
xor
mov
jno
dec
enter
pop
outs
push
inc
and
mov
xor
xor
mov
pop
xchg
dec
sbb
pop
adc
mov
iret
in
cmc
jae
pop
pop
mov
popf
jbe
lea
and
jmp
ficomp
cmp
xchg
mov
xor
pusha
jno
push
stos
pop
mov
sub
cmps
(bad)
pushf
aad
sbb
sub
mov
cmp
addr16
mov
das
test
or
and
or
push
shl
cmp
out
gs
push
inc
ja
mov
mov
push
or
dec
mov
cmp
sbb
pop
or
icebp
adc
aaa
ds
inc
dec
push
repnz
icebp
aas
scas
sbb
mov
rol
neg
addr16
xlat
test
xchg
push
loope
fldcw
dec
jge
mov
jmp
dec
cmps
push
cmp
adc
jb
loopne
push
ja
xchg
outs
push
sbb
not
sar
hlt
xchg
xchg
ss
cdq
push
int
jno
and
call
add
push
pop
gs
xor
cmp
(bad)
mov
pop
cmc
fwait
ss
aam
inc
pushf
mov
popf
jg
dec
xchg
hlt
inc
aas
aas
out
jnp
jmp
mov
js
and
jo
or
out
repz
pop
jmp
cmp
leave
add
imul
add
shl
jge
adc
mov
pop
outs
mov
xor
push
jge
dec
xchg
cmp
popa
pop
mov
add
movs
ja
sahf
clc
push
inc
dec
(bad)
fidivr
fistp
jb
push
xchg
movs
into
jno
push
cmp
push
and
nop
sbb
rcl
sti
push
mov
dec
not
jle
test
out
mov
xchg
dec
push
shl
rcl
sbb
push
add
ficom
js
loope
adc
xlat
pop
cmps
ja
imul
inc
sbb
or
lods
(bad)
xor
pop
jg
enter
out
fadd
cmc
inc
ds
mov
(bad)
pop
adc
dec
popa
pop
mov
cmps
fs
pop
imul
xchg
dec
je
inc
fstp
ds
and
xchg
test
push
retf
(bad)
leave
cmp
retf
pop
daa
jecxz
shl
lods
push
xchg
call
ins
mov
dec
imul
in
mov
and
push
out
sbb
outs
mov
inc
jae
cmps
pop
adc
popf
in
and
cld
jae
pop
mov
push
inc
push
push
add
call
pop
test
lods
jb
pop
mov
ret
stos
movs
arpl
into
gs
sysenter
das
adc
aam
adc
data16
pop
sbb
cld
or
ret
sbb
std
mov
push
(bad)
mov
pushf
in
and
push
dec
jl
add
lods
bound
mov
movs
add
jl
jmp
pop
shr
cmc
js
sub
sub
lods
fstp
mov
adc
xchg
jne
inc
pushf
push
xor
call
stc
xchg
add
fwait
xor
popf
jmp
(bad)
int
jbe
ror
sbb
mov
loop
inc
pop
push
jl
mov
ret
mov
mov
icebp
lds
push
icebp
enter
or
cmps
mov
shl
xor
xor
xchg
lahf
sahf
pop
lods
mov
out
xlat
xor
push
fnstenv
jno
fs
cld
in
scas
mov
xchg
shl
fbstp
scas
dec
cs
js
(bad)
cmp
aam
out
add
push
int3
add
mov
dec
add
sbb
mov
aas
popa
push
test
adc
dec
aad
in
add
push
push
cmps
mov
js
mov
enter
jmp
test
add
sti
or
aas
or
xchg
dec
dec
dec
add
jle
or
outs
mov
mov
xchg
mov
push
add
pushf
stc
loope
push
aaa
out
cwde
mov
adc
into
jle
arpl
das
jp
mov
xor
test
jmp
stc
cmovno
inc
rol
and
push
dec
in
jmp
test
mov
ror
xor
sub
test
push
jl
mov
mov
stc
out
mov
xchg
dec
arpl
mov
xchg
js
and
call
out
(bad)
mov
fstp
fsubr
mov
pop
and
add
jl
lods
mov
and
inc
jg
xchg
shl
movs
out
icebp
iret
dec
frstor
jo
jns
ins
push
xchg
ret
cmps
int3
add
nop
scas
xor
sub
pop
cs
(bad)
adc
call
inc
enter
jno
inc
mov
pusha
and
js
sahf
sub
repnz
mov
dec
push
xor
cs
mov
call
stos
xchg
push
xchg
pop
mov
jnp
in
iret
repz
xor
(bad)
sbb
cmps
aad
add
icebp
shl
aaa
fadd
or
and
sub
xor
mov
xor
in
push
push
rcl
lds
mov
ror
adc
jo
push
jmp
getsec
or
jno
adc
in
enter
mov
adc
push
mov
cmp
and
adc
mov
les
mov
adc
xchg
push
cli
sbb
and
imul
in
fcom
pop
hlt
jmp
stos
dec
movs
pusha
pusha
push
adc
(bad)
xor
test
cld
push
lahf
dec
dec
add
pushf
jns
mov
(bad)
jg
outs
mov
(bad)
daa
(bad)
adc
xchg
cmp
add
jb
add
mov
mov
je
outs
scas
add
popf
sbb
call
rcr
cmp
addr16
enter
int
mov
dec
fcmovbe
ret
mov
cmp
xchg
or
aad
in
mov
sbb
xor
sar
shr
sbb
movs
xor
xchg
fisttp
adc
jle
sbb
cmp
out
adc
push
jb
sbb
std
(bad)
lock
or
add
or
and
jp
rol
jl
inc
stos
xlat
shr
movs
adc
mov
dec
imul
not
ror
inc
hlt
popa
scas
push
xor
adc
mov
jns
test
mov
adc
lods
lds
stos
sub
lea
dec
push
sahf
stos
pushf
leave
sti
and
mov
jne
and
in
jne
jne
jns
jne
das
mov
in
retf
push
out
ins
ss
es
fdiv
jmp
pop
jns
cmp
ins
sbb
or
data16
lea
in
adc
aaa
inc
loopne
mov
shl
repz
jbe
mov
fldenv
aas
(bad)
mov
cmps
cmp
popa
and
js
fsubr
stos
ds
dec
loope
pop
fwait
xchg
jmp
ds
push
mov
adc
mov
popf
repnz
(bad)
push
xchg
pop
jmp
push
or
sbb
cmps
fld
ror
jne
test
int3
pop
add
cwde
cmp
jnp
shl
fs
sbb
xor
mov
retf
jno
out
push
je
dec
cmp
dec
or
(bad)
mov
outs
es
into
(bad)
int
jno
cmp
(bad)
mov
shr
fmul
lock
stos
sub
pop
pop
(bad)
out
mov
scas
cmp
movs
sub
dec
mov
loop
movs
fimul
scas
not
cmp
mov
fdiv
outs
cmps
ret
mov
loop
mov
mov
in
or
fwait
pop
loope
pusha
in
and
jb
shl
adc
test
loop
and
cwde
ds
pop
lods
jno
rol
push
push
push
add
popf
test
mov
stos
movs
mov
push
push
sub
in
shr
xor
dec
loop
scas
loopne
es
jl
shl
cmp
push
call
dec
daa
not
(bad)
cwde
dec
(bad)
in
inc
jle
cmp
clc
lock
dec
std
imul
or
push
sub
mov
pop
pop
inc
xor
int3
popf
cmp
add
scas
ins
imul
imul
fsubr
repnz
lds
cmp
xchg
fistp
es
xchg
cmp
icebp
or
pop
cmps
mov
push
xchg
mov
sub
lahf
xor
push
inc
inc
push
aaa
push
hlt
or
icebp
pop
jl
cmp
mov
or
out
mov
sub
dec
xchg
push
mov
repz
lods
jnp
jmp
cmp
repnz
ins
les
jne
fucompp
sbb
pop
mov
or
sti
test
outs
mov
and
(bad)
rcr
pushf
pusha
test
in
mov
ror
sbb
popa
imul
out
jb
and
arpl
adc
sbb
rcr
lahf
push
fmul
jg
mov
or
xor
mov
fs
jo
inc
lds
mov
ret
in
pop
data16
xchg
jecxz
xlat
lods
xchg
adc
jle
stc
ja
dec
sub
mov
add
jmp
loope
dec
shr
or
mov
mov
add
mov
jmp
dec
or
bound
pop
(bad)
cmp
(bad)
xlat
and
(bad)
jo
jp
jae
sti
pop
sub
iret
enter
inc
dec
and
xor
add
jnp
stos
add
push
gs
nop
cdq
adc
mov
lds
or
xchg
adc
nop
and
adc
push
mov
test
inc
xlat
out
adc
lahf
cmp
les
ds
mov
in
adc
jns
adc
xor
xor
repz
push
sub
fimul
jne
push
xchg
scas
ffreep
xor
jo
add
imul
push
not
imul
push
arpl
shl
xchg
adc
and
adc
repnz
sub
add
xor
ja
inc
mov
icebp
mov
je
or
adc
push
and
mov
xchg
sbb
sbb
mov
and
mov
dec
jp
or
jecxz
mov
test
push
and
int
mov
retf
nop
xor
imul
cmp
pop
mov
mov
mov
cmp
inc
cs
adc
cmp
pushf
fs
neg
mov
out
mov
ja
sbb
ja
jge
dec
ja
jno
mov
ins
les
cdq
sbb
imul
sub
stc
(bad)
or
adc
jnp
movs
cmp
clc
dec
stc
inc
jle
sti
mov
aaa
addr16
pop
imul
sub
leave
data16
imul
jbe
mov
jg
pop
mov
cmp
mov
mov
movs
push
scas
fcmovne
(bad)
fist
aaa
or
ret
mov
xchg
test
out
ret
mov
pop
mov
inc
xchg
adc
dec
mov
jo
(bad)
sub
repz
dec
fcom
pop
rcr
jns
ds
push
jbe
in
js
xor
and
adc
sub
xor
(bad)
jle
scas
icebp
jmp
mov
cmp
pop
mov
mov
in
test
pop
out
mov
xchg
sub
mov
retf
cmc
ret
iret
jge
jecxz
ror
jne
sti
xchg
mov
es
mov
movs
xor
lock
adc
xchg
dec
and
push
out
loopne
rcl
int3
in
jg
ja
mov
arpl
daa
daa
adc
jmp
push
add
and
push
add
jb
lock
push
mov
add
mov
ins
xchg
pushf
mov
dec
gs
pop
jne
fstp
jp
fs
cs
les
(bad)
(bad)
pop
ret
ss
inc
mov
or
je
pop
push
push
lds
dec
mov
jne
add
out
mov
mov
jno
les
sub
lahf
mov
push
xor
pop
je
les
mov
fbld
mov
push
rcr
mov
test
jns
test
cmps
cmp
clc
xor
dec
dec
push
scas
ficom
jae
dec
or
sub
mov
mov
in
add
call
movlps
adc
push
inc
xor
arpl
jmp
and
adc
nop
xor
xchg
imul
or
push
sbb
inc
jae
loop
stc
xor
inc
add
stos
(bad)
xor
or
pop
add
fcmovu
push
mov
jno
dec
repz
xlat
jbe
lahf
loop
cmps
jns
scas
push
fadd
fcmovnbe
mov
cmp
pop
mov
paddsb
dec
out
(bad)
aas
xor
cmp
add
xchg
ja
adc
fxch
fwait
data16
cmp
icebp
loop
mov
jo
(bad)
test
cli
mov
out
cli
sub
jns
loop
sub
js
int3
add
pop
dec
xchg
in
add
faddp
test
adc
push
mov
or
inc
cmp
cld
popf
jbe
jg
push
and
fld
mov
std
stos
retf
and
xchg
dec
sahf
(bad)
cli
mov
pop
cmps
call
add
popf
retf
jge
xchg
xchg
out
sub
rcr
fwait
pop
push
pop
xchg
daa
retf
stos
mov
stos
ror
push
xlat
(bad)
sbb
cld
ja
or
fcomip
mov
out
rcr
sub
ret
push
fisubr
jmp
in
cmp
push
shl
repz
out
mov
rcr
lea
ins
rcl
mov
daa
sub
clc
std
aas
dec
mov
add
mov
out
jae
ja
add
test
jecxz
mov
mov
fidivr
adc
pop
cmps
push
shr
inc
(bad)
iret
xchg
dec
js
mov
pusha
mov
in
jmp
ja
inc
or
or
rcr
outs
dec
je
cmps
pop
clc
lods
pop
adc
push
fisttp
mov
stos
push
data16
lods
pop
sbb
iret
lods
push
push
fidivr
pop
test
sub
stc
or
jb
fidiv
ins
jnp
or
mov
cli
je
sub
jp
arpl
push
ret
pop
jns
push
xor
pop
and
mov
pop
pop
test
lds
mov
jmp
fs
sub
loop
movups
imul
mov
loope
das
int3
sbb
mov
sbb
cld
xlat
xor
sbb
les
and
in
mov
jmp
pop
dec
test
je
dec
adc
js
and
adc
or
inc
(bad)
and
(bad)
arpl
mov
jecxz
pushf
scas
sub
xlat
pop
sbb
adc
jmp
or
mov
fs
jbe
out
lods
or
fldenv
repnz
dec
movs
in
jecxz
sub
push
shl
jns
mov
adc
lahf
adc
int
sub
sbb
inc
mov
int3
popa
mov
retf
inc
rcl
ret
jne
imul
popf
push
xor
dec
shr
and
xor
arpl
lods
mov
xor
pop
movs
sub
fdivr
imul
xor
ss
cli
mov
jne
pop
into
out
jns
movs
cmp
icebp
sub
fs
mov
rol
popf
retf
xchg
mov
lods
scas
inc
push
cmp
inc
push
push
pushf
rcl
xor
fisttp
jmp
mov
push
or
jp
jl
popf
jb
es
add
aaa
and
leave
mov
stc
pop
scas
mov
and
in
push
push
div
loopne
pop
jl
xlat
pop
push
loope
cmp
retf
lock
xor
xor
add
adc
popf
inc
or
xchg
fisubr
push
in
and
(bad)
cmps
sub
inc
imul
xchg
xchg
pop
clc
pop
jle
adc
test
or
inc
arpl
mov
hlt
jne
aam
cmc
popa
cmp
push
popf
test
jbe
mov
loop
and
fsub
sbb
dec
ins
jl
fcomp
cmp
out
inc
pop
xor
or
int
(bad)
retf
xor
fsub
ins
adc
jg
jb
add
xchg
mov
add
outs
push
cmp
fnstsw
pop
aas
xor
rcl
or
push
fidivr
psllw
mov
fadd
push
out
nop
add
add
rcr
mov
xor
pushf
aad
jne
xchg
scas
jbe
jmp
mov
xor
cmp
icebp
inc
add
push
push
add
mov
push
outs
fs
lds
inc
out
(bad)
pop
sbb
lods
outs
mov
ds
cmp
lods
in
dec
std
in
lods
loopne
sub
pop
popa
cmp
fdivrp
(bad)
iret
and
jo
mov
cs
in
cs
pop
add
mov
addr16
adc
adc
dec
daa
mov
ins
mov
inc
outs
dec
sbb
mov
repz
xchg
and
enter
add
mov
sub
jp
sbb
mov
xor
add
bound
stos
fmul
mov
cmp
popa
sub
fld
mov
xor
fdivr
cmp
loopne
loop
pop
inc
mov
push
hlt
sub
or
out
inc
and
cmp
fwait
ins
outs
and
movs
mov
add
push
or
or
aas
xchg
jmp
out
sub
push
rcl
mov
jl
mov
shl
(bad)
add
dec
pop
popf
xchg
jmp
add
das
mov
jo
cmp
adc
fs
scas
sbb
(bad)
and
hlt
retf
jb
add
mov
adc
xlat
popf
mov
mov
jae
pop
sahf
daa
or
cs
mov
gs
sbb
ja
adc
xchg
jge
out
ds
outs
and
adc
xchg
cmp
lods
mov
jns
or
or
sub
cmp
(bad)
in
mov
in
mov
fldenv
mov
out
fidiv
ja
sub
sub
push
and
addr16
fcmove
push
pop
xor
or
jb
lods
xor
inc
push
(bad)
adc
mov
(bad)
xor
adc
or
jge
and
xchg
dec
push
mov
ss
mov
add
loopne
adc
mov
pop
xchg
sti
push
adc
into
jmp
push
das
mov
xchg
jle
js
mov
ds
dec
ror
ret
add
add
scas
inc
jns
sub
mov
scas
or
fadd
push
aaa
push
cli
movs
adc
dec
xor
stos
shl
dec
push
push
sub
fadd
push
popf
out
in
or
(bad)
addr16
(bad)
inc
pusha
gs
lea
and
push
sbb
xor
cmp
jmp
leave
scas
mov
jl
stos
mov
imul
fisubr
(bad)
mov
std
pop
ss
movs
dec
cmc
xor
xor
and
jnp
enter
sar
(bad)
jnp
std
in
ficom
sbb
dec
xor
sbb
dec
mov
sahf
pop
rcr
mov
sbb
scas
push
imul
add
retf
dec
xchg
inc
icebp
pusha
movs
inc
add
jl
icebp
pop
pop
xchg
xor
sub
dec
test
enter
add
aaa
stc
adc
std
mov
sbb
dec
jl
ret
(bad)
pop
inc
jmp
loope
shr
or
hlt
sub
aad
(bad)
adc
jle
pop
mov
shl
and
push
(bad)
mov
iret
xchg
leave
test
call
and
xchg
jg
(bad)
or
ins
pop
or
sub
(bad)
popf
arpl
retf
cmp
clc
test
jl
mov
cwde
and
cdq
out
inc
imul
fs
push
pop
mov
add
cli
xchg
or
mov
pop
xchg
inc
inc
aam
lock
jecxz
in
or
shr
out
dec
pop
xor
imul
push
push
jns
cli
mov
imul
movs
neg
jmp
imul
jb
inc
xlat
sti
daa
jmp
pop
call
push
lods
sub
cmp
ss
dec
jnp
(bad)
and
inc
xor
sbb
sub
and
mov
shr
js
leave
add
push
inc
add
not
push
imul
loope
mov
cmp
cwde
jno
add
xchg
mov
adc
sbb
mov
dec
xor
mov
dec
xlat
pop
mov
mov
sar
adc
int3
xchg
movs
sub
ret
or
int3
and
rcr
xchg
jg
ror
mov
imul
lahf
movs
je
add
ins
cli
sub
inc
and
dec
mov
add
test
test
sbb
inc
test
lds
cmp
call
lods
mov
dec
addr16
mov
retf
sub
addr16
mov
test
adc
mov
cdq
adc
test
mov
test
jb
stos
clc
cmps
es
mov
pop
sub
ins
pushf
cmp
xchg
not
cs
or
jns
and
addr16
mov
cmc
pop
mov
aad
mov
jmp
mov
daa
scas
or
push
dec
aaa
mov
xor
ja
sti
call
outs
xchg
movs
popf
mov
movs
cmps
push
stos
lods
mov
scas
imul
add
inc
outs
cli
loope
inc
jo
sbb
mov
test
rol
in
jecxz
and
aam
dec
scas
ret
jg
stos
pop
mov
std
scas
nop
push
test
ret
icebp
fistp
(bad)
imul
jl
je
push
out
ror
lods
(bad)
out
mov
cmps
and
or
pop
das
lods
jo
loopne
pop
jne
push
pop
jns
sub
aas
test
add
jmp
call
cwde
xor
pop
pusha
das
popf
shl
fstp
dec
(bad)
pop
hlt
jmp
leave
add
test
push
jle
pop
xchg
pushf
jg
retf
pop
addr16
sbb
ds
push
hlt
hlt
lods
lds
imul
xchg
adc
mov
repz
mov
or
out
dec
imul
jno
xchg
fs
jo
mov
js
mov
or
jne
aaa
inc
scas
mov
xchg
pop
adc
mov
pop
push
out
fs
ds
xchg
pop
add
aam
sbb
jg
iret
cmp
sub
(bad)
(bad)
out
xor
xchg
mov
pop
xchg
jb
pop
inc
xchg
push
int
push
out
mov
push
(bad)
pop
inc
mov
adc
sar
inc
ins
push
cli
rcr
adc
push
mov
dec
add
pop
xchg
(bad)
fidivr
jnp
sbb
out
popf
into
imul
sbb
push
out
retf
int
inc
call
push
dec
sub
(bad)
movs
cmp
pusha
jo
aad
add
add
xor
inc
emms
je
adc
repz
cmc
lahf
pop
and
jp
je
mov
adc
pop
xchg
adc
in
push
popf
jo
retf
inc
je
nop
jne
imul
or
test
and
jle
xchg
mov
jmp
arpl
subps
sbb
outs
imul
xchg
or
(bad)
cmc
in
add
pop
mov
add
arpl
stos
sub
cmp
pop
push
mov
dec
jbe
cmps
mov
jns
rcl
fwait
dec
xchg
iret
call
pop
inc
(bad)
mov
in
pop
xchg
in
test
cmp
out
jmp
push
mov
or
mov
cwde
sub
imul
pop
push
and
mov
pop
dec
ds
iret
cmp
xchg
jmp
arpl
(bad)
int3
mov
xor
jbe
and
fbld
outs
data16
push
aam
pop
shl
clc
enter
cmps
sub
push
sbb
mul
dec
jmp
sbb
adc
ficom
std
int
in
adc
inc
cmp
inc
lds
push
push
or
(bad)
fld
sub
dec
jmp
xchg
out
cdq
xchg
ds
icebp
mov
les
xchg
xor
or
xor
pop
cmp
and
push
jns
dec
(bad)
(bad)
sar
das
sbb
mov
js
enter
dec
dec
sbb
aaa
cdq
hlt
cmps
jae
cs
mov
das
sub
pop
jp
sub
sub
push
in
shl
sbb
stos
inc
hlt
lock
(bad)
xchg
shl
bound
call
pusha
in
out
aas
sub
xchg
jae
and
push
hlt
or
hlt
sbb
cld
inc
cmps
xchg
movs
adc
scas
test
add
add
jne
div
jecxz
sub
stos
jae
es
das
sahf
jge
out
jecxz
push
fist
sub
push
lahf
loopne
pop
test
out
pop
aas
shr
or
jnp
out
aaa
movs
in
cli
push
adc
mov
mov
push
jmp
add
aam
jg
dec
js
outs
adc
push
push
into
push
imul
stc
enter
adc
xchg
cmp
jmp
dec
fdiv
xchg
fld
mov
(bad)
pop
movs
inc
push
sub
enter
jmp
lea
mov
xlat
cmp
aam
jecxz
sahf
and
pop
cmp
out
fist
xchg
shl
ins
cdq
xchg
jp
in
out
pushf
(bad)
mov
mov
movs
lock
clc
das
xchg
jnp
pop
xor
jne
iret
mov
inc
push
int
or
int
jg
es
jecxz
popf
scas
and
mov
jmp
test
fsubr
fdivr
inc
cs
mov
data16
call
sub
pushf
sbb
add
xor
mov
ins
test
xor
xchg
and
fimul
ret
sub
or
mov
or
pop
pop
ret
retf
jp
mov
mov
(bad)
inc
shl
sbb
jecxz
je
psadbw
mov
test
in
xchg
hlt
aaa
sbb
jnp
jbe
push
test
sbb
sbb
inc
dec
lods
sbb
and
adc
xchg
adc
int
ins
cmp
mov
scas
fs
and
outs
stc
xlat
mov
push
fimul
mov
pop
cwde
ret
ss
dec
icebp
mov
adc
inc
jns
push
cmp
aam
jp
cmp
addr16
popf
lds
js
sahf
push
cmp
xor
cmps
cmp
mov
mov
ss
out
sbb
cdq
lods
dec
mov
sbb
cmp
push
and
(bad)
xchg
xor
mov
pop
call
adc
in
cmp
push
mov
mov
sub
jmp
call
jbe
jb
cwde
psrlq
sub
frstor
add
int3
in
ds
add
push
xor
xor
xchg
inc
sbb
xchg
mov
push
outs
mov
js
stos
loop
xor
pushf
cmp
sbb
stos
jnp
aam
mov
cmp
pop
(bad)
out
dec
add
or
cmps
mov
cmp
bound
lock
pop
(bad)
and
aaa
jae
ror
aad
ret
cmp
dec
xchg
fbstp
and
lock
aam
jae
sahf
in
div
repz
dec
clc
mov
mov
mov
test
test
lock
mov
dec
mov
cld
pop
or
fimul
xor
movs
add
push
xchg
movs
mov
jmp
(bad)
jbe
pop
repz
or
retf
fst
or
mov
lods
mov
lods
ficom
lock
mov
push
int
mov
sub
cmp
adc
add
xchg
ja
ins
stc
pop
shl
sbb
dec
sub
inc
dec
movs
(bad)
into
stos
out
or
pop
fstp
sbb
mov
inc
popf
ds
(bad)
loop
push
ds
sbb
addr16
mov
adc
sub
addr16
sbb
xor
xor
pop
clc
sub
call
jge
xchg
icebp
or
lock
mov
cmps
mov
in
jge
in
pusha
mov
push
xor
popf
stos
mov
in
jne
cmp
test
cmp
pop
inc
into
movs
sbb
cs
hlt
xor
jmp
mov
xchg
fwait
cmc
jnp
call
sub
loop
or
push
jle
shl
pop
sub
push
dec
xchg
rcl
repz
aaa
out
(bad)
leave
mov
popa
push
pop
aaa
(bad)
(bad)
xlat
mov
(bad)
aad
hlt
aad
inc
cmp
rol
and
(bad)
fstp
rol
jb
add
hlt
mov
adc
imul
idiv
jae
sbb
repz
ror
fs
retf
test
jno
cmc
in
in
cdq
xor
sbb
adc
test
int
pop
daa
and
shl
shr
cdq
rcr
mov
add
gs
into
sti
out
mov
mov
fistp
push
inc
sbb
push
dec
mov
test
pusha
jae
sti
jae
out
cmp
sub
and
imul
push
rcr
adc
repnz
das
cmp
mov
or
sbb
sar
popa
cmp
neg
mov
out
push
shl
popf
inc
ja
mov
inc
sar
and
push
mov
mov
aas
cli
fs
fnsave
js
mov
in
inc
adc
push
cmp
jno
sub
in
inc
test
mov
adc
(bad)
test
mov
push
out
scas
xchg
sub
cmp
pushf
fcmovb
mov
imul
jmp
and
sub
lahf
arpl
pop
fs
stos
dec
sub
inc
mov
sbb
adc
ins
test
mov
dec
bnd
and
ffreep
pusha
cmc
fwait
and
jo
xor
call
pop
mov
popa
pop
jp
jne
mov
cmp
gs
inc
mov
pminsw
aad
mov
cdq
mov
xchg
jbe
pushf
dec
and
xor
cmp
xchg
sub
jae
outs
push
add
jbe
ss
sub
mov
imul
xchg
inc
leave
clc
cmp
lahf
cwde
(bad)
mov
imul
das
cmp
mov
mov
and
ins
and
push
stc
cmp
arpl
push
xchg
push
test
call
pushf
shr
cmp
js
shl
pop
adc
jo
fdiv
pop
push
inc
dec
in
inc
add
jbe
push
jmp
xchg
fcomip
popa
nop
sar
dec
das
jle
lods
dec
retf
pop
cmp
and
push
mov
ret
push
icebp
push
retf
les
int3
call
pop
dec
call
ja
(bad)
mov
mul
xchg
test
stos
jbe
mov
addr16
adc
mov
cli
or
loope
test
sar
or
stos
cdq
sbb
dec
popf
inc
add
retf
sbb
add
sub
(bad)
bound
push
cmp
jmp
das
dec
sbb
jno
sti
addr16
add
es
dec
mov
jb
xchg
sub
adc
popa
pusha
retf
or
or
sub
inc
repnz
push
or
mov
(bad)
(bad)
xchg
jno
dec
fs
stos
out
sbb
pushf
add
pop
fs
scas
cmp
ds
ror
jae
and
scas
data16
jbe
pop
pop
shr
lahf
sub
mov
xchg
mov
sbb
mov
(bad)
adc
lahf
call
mov
clc
test
or
fwait
push
cmp
pop
dec
repz
or
addr16
bt
sub
fisttp
out
stc
in
add
cmp
mov
daa
das
mov
jae
adc
jmp
fild
jo
sahf
push
(bad)
pop
xchg
mov
test
cmp
inc
fs
popf
imul
mov
sbb
sbb
(bad)
push
sub
leave
ins
cmp
mov
mov
jmp
push
icebp
repz
mov
jno
sbb
sbb
xchg
lods
push
cmps
jnp
stc
fdiv
inc
imul
jp
adc
test
cmp
test
dec
xchg
(bad)
neg
retf
xchg
dec
jns
push
sar
push
xor
xlat
push
nop
mov
push
test
and
push
sbb
inc
mov
das
pop
cmp
jp
pushf
lock
sahf
ja
aaa
rcl
and
pop
or
fwait
xchg
pop
shr
in
push
lods
or
fst
xchg
aas
dec
cdq
cmp
dec
add
(bad)
xchg
repnz
jns
fwait
and
jb
mov
push
sub
inc
pusha
lock
cmp
ss
out
retf
aaa
aaa
or
lds
test
and
jmp
xor
das
or
movs
repnz
fadd
popf
adc
arpl
mov
aaa
ss
dec
out
xchg
pop
iret
push
jmp
mov
push
sbb
lods
and
sbb
inc
inc
cmp
inc
add
fadd
jmp
mov
mov
mov
int
mov
fdivr
cmc
xchg
out
ret
or
pop
rol
mov
das
outs
lahf
imul
push
cmp
pushf
lock
test
les
(bad)
out
mov
(bad)
jmp
pop
lock
enter
addr16
mov
ins
or
retf
aad
mov
xchg
pop
mov
enter
jbe
cmps
(bad)
into
jae
cmp
iret
test
mov
imul
stos
adc
cmps
jnp
bound
mov
sbb
sar
out
sub
mov
loope
bound
into
mov
les
ret
icebp
add
scas
stos
pop
push
push
repz
jnp
lock
outs
jnp
xchg
cmp
outs
(bad)
and
push
mov
pop
lock
mov
and
jge
inc
cmp
pusha
push
int
aas
push
std
xchg
and
push
sub
fcom
xor
in
xor
cli
stos
jmp
add
xchg
sahf
pop
mov
aad
(bad)
and
xor
push
scas
and
imul
and
punpcklbw
les
jae
adc
fild
aaa
ins
(bad)
jae
mov
jns
mov
inc
pop
cmp
das
cmp
xor
das
xor
adc
aad
xchg
xlat
rcl
adc
xor
pop
sar
sti
sti
mov
jmp
push
loope
in
push
xchg
repz
mov
les
ds
mov
cmps
sbb
jmp
stos
jmp
adc
ja
xor
or
pop
or
stos
leave
fbstp
adc
sbb
neg
je
sahf
and
push
dec
sub
inc
mov
dec
push
ror
inc
out
repz
call
cs
rcl
dec
xchg
lahf
sbb
arpl
imul
fnstsw
sbb
mov
adc
sub
push
jmp
cmps
fsub
fistp
sub
retf
rcr
stos
lahf
pusha
mov
mov
mov
(bad)
call
das
sti
xchg
adc
xor
inc
fs
inc
push
push
ins
ret
scas
bt
gs
cmp
inc
ins
cmp
push
lods
xor
xchg
ret
mov
addr16
adc
js
cmps
push
cld
xchg
sbb
inc
pop
(bad)
sbb
cli
xchg
sbb
cmps
jns
js
(bad)
icebp
call
pop
jns
adc
dec
and
mov
test
fidiv
cmp
mov
or
jecxz
ss
cmp
pop
(bad)
xor
(bad)
aaa
stos
cli
mov
in
or
and
pushf
mov
xchg
int
lock
dec
icebp
mov
fcomp
cdq
fwait
lds
out
ss
popf
or
mov
xchg
mov
stos
dec
ja
ret
aam
add
lahf
arpl
jp
and
(bad)
mov
mov
jne
dec
mov
int
adc
out
or
popa
xchg
ret
lods
and
cmps
fld
jle
aad
lock
cmp
sub
and
sbb
daa
out
(bad)
imul
das
sub
stos
adc
retf
inc
xor
adc
push
dec
cmp
fmulp
push
fiadd
data16
loopne
aad
outs
and
repz
and
sti
mov
add
imul
and
jns
out
add
cmp
les
int
xchg
pop
mov
jno
inc
loope
inc
std
test
pop
sbb
add
jge
arpl
cmp
iret
mov
aam
sbb
(bad)
addr16
and
mov
cmp
mov
mov
fisubr
call
dec
fimul
or
pop
pop
mov
fistp
jnp
or
not
das
mov
mov
xchg
call
in
popf
pusha
jne
cmp
sbb
dec
mov
mov
imul
jecxz
shr
and
add
ins
loope
cmps
sti
mul
scas
rol
jo
sbb
jp
xchg
push
(bad)
fild
mov
pop
cmp
or
ss
push
dec
mov
mov
xchg
add
mov
mov
add
nop
pop
pop
mov
pop
daa
xchg
jnp
ror
adc
retf
cmp
xchg
xchg
dec
lock
sub
cmp
dec
add
jecxz
mov
lock
in
add
or
xor
xchg
std
hlt
(bad)
jg
jecxz
jmp
mov
bound
jmp
mov
and
mov
clc
aad
cmp
es
mov
imul
sub
(bad)
scas
mov
pop
scas
daa
and
test
mov
adc
cmovl
xor
out
xchg
scas
dec
loope
cmp
or
push
cmp
adc
cmp
dec
das
dec
jne
cmp
sub
stos
jno
gs
std
mov
retf
xlat
jo
cmp
mov
mov
inc
cli
int3
lods
adc
(bad)
loope
jb
or
data16
jp
cld
mov
and
mov
(bad)
shr
or
pop
int3
mov
in
push
(bad)
je
adc
mov
cwde
sbb
add
xchg
xchg
stos
cmp
inc
mov
movs
xchg
fnstcw
cld
cmp
test
rol
xor
imul
sub
sbb
xor
pusha
pop
pushf
pop
mov
not
imul
jns
or
(bad)
cmp
mov
call
lods
out
cwde
imul
cmps
(bad)
mulps
movs
rcl
push
jl
not
mov
mov
in
xor
xor
jb
(bad)
add
jne
sub
leave
retf
and
sub
movs
cli
cwde
add
xlat
inc
(bad)
fmul
inc
xor
mov
mov
jecxz
in
mov
in
cmc
cld
pop
(bad)
jecxz
push
mov
xlat
out
jecxz
xchg
icebp
stc
in
nop
rcr
(bad)
out
and
lea
jge
ficomp
loop
cmp
mov
pop
mov
dec
xchg
scas
pusha
and
push
js
xor
adc
adc
adc
stos
push
add
inc
cmc
sbb
imul
and
test
ret
or
inc
push
out
jne
adc
cwde
movs
call
movs
xor
stos
mov
loopne
xchg
push
push
mov
mov
push
or
lds
ins
stc
call
or
inc
fdivr
pop
adc
add
sub
inc
and
or
jmp
lahf
mov
jno
adc
lock
call
adc
int3
jl
shr
clc
test
lock
jl
repnz
push
xor
mov
mov
lds
pusha
ins
xchg
dec
aad
inc
sub
dec
and
add
fnsave
jg
sub
or
push
mov
mov
push
adc
or
adc
sub
cli
shl
push
push
sbb
sbb
dec
jno
aaa
test
nop
xchg
push
retf
mov
push
or
dec
pop
cli
mov
imul
test
xor
pop
outs
inc
fst
and
test
popa
ins
jle
pop
jmp
std
mov
repz
enter
pop
dec
xor
mov
les
cmp
push
test
push
sub
pop
lahf
fidiv
pop
add
fdivp
fisttp
lods
inc
add
cmp
lods
xchg
mov
aad
push
push
fdivr
sub
xor
dec
aaa
js
xchg
repz
pop
mov
ret
adc
dec
mov
clc
mov
cli
clc
push
adc
sbb
inc
xchg
popa
sub
test
and
pop
add
mov
test
mov
aad
mov
mov
sti
mov
(bad)
dec
dec
fs
sti
jmp
cwde
popa
add
xchg
pshufw
push
lock
jle
cs
shl
pop
cs
inc
aaa
jno
test
dec
push
and
push
jno
inc
cmp
mov
outs
sbb
jns
mov
pop
shl
outs
in
jmp
xlat
push
mov
push
aas
ror
mov
ret
push
aam
fwait
adc
dec
inc
mov
sti
fsub
mov
test
dec
adc
mov
loopne
jbe
lahf
ja
stos
add
mov
ror
(bad)
sti
(bad)
leave
jge
int
and
ret
imul
sahf
dec
fmul
inc
mov
loopne
in
jp
lock
or
xchg
cmps
mov
mov
or
mov
(bad)
cli
adc
out
jae
(bad)
cdq
mov
int3
mov
xlat
push
xchg
mov
aaa
pop
adc
xor
and
jl
cdq
int3
mov
xchg
stos
mov
test
sub
in
push
cmp
and
sbb
cmovae
movs
pop
mov
mov
popf
not
cld
xchg
and
aaa
xor
enter
repz
inc
adc
push
push
lea
outs
jecxz
sbb
dec
in
jnp
xchg
cmps
dec
pop
sub
ja
inc
pop
mul
jnp
xchg
xor
push
jb
push
fld
or
pop
inc
and
mov
inc
push
scas
add
push
leave
sti
cmp
hlt
sbb
movs
(bad)
pop
pop
stc
out
sbb
mov
jno
inc
xchg
xor
jg
pop
clc
push
adc
or
push
mov
icebp
in
cdq
lahf
pop
daa
xlat
add
jae
pop
fmul
jnp
push
pop
xchg
mov
inc
mov
test
xlat
or
cmp
sub
jle
mov
dec
nop
jecxz
jnp
inc
arpl
outs
scas
fisttp
or
(bad)
stos
aas
ins
repnz
cdq
lds
adc
cmp
fiadd
cld
add
test
pop
jno
scas
jmp
mov
mov
push
xor
and
jb
push
dec
cmp
cmp
cmps
mov
mov
or
pop
sub
stos
enter
fs
cmps
or
sbb
sbb
ja
push
std
fsubr
add
add
cmc
mov
add
cwde
cs
ds
xor
shr
mov
lock
dec
jp
add
div
test
inc
sub
mov
jmp
sbb
fcomp
adc
xchg
movs
dec
mov
int
cs
jne
dec
lods
mov
dec
int3
mov
outs
push
xlat
lahf
idiv
ins
xchg
scas
es
cwde
jae
mov
add
ja
xor
into
mov
pusha
add
mov
movs
test
and
cmp
out
(bad)
sbb
mov
jmp
rcl
mov
repz
push
into
loopne
shl
xor
mov
stos
cdq
call
or
sub
adc
mov
push
movs
(bad)
xor
xchg
push
jo
jae
cmps
jmp
inc
loope
mov
xchg
ins
inc
push
jmp
fcmovnb
pusha
jbe
or
sbb
sbb
adc
sahf
dec
(bad)
fdivr
mov
push
cmp
fwait
jno
int3
push
lods
jmp
or
(bad)
stc
sbb
xor
sub
lea
mov
pop
(bad)
pop
jg
test
jb
jo
inc
mov
cwde
mov
arpl
mov
jnp
push
rcr
cmc
dec
sub
mov
dec
repz
out
into
jb
xchg
pop
outs
jb
lahf
xchg
mov
call
gs
push
adc
adc
mov
wrmsr
or
pop
test
add
ins
in
(bad)
jg
push
dec
inc
inc
data16
call
adc
and
push
xor
pop
xchg
sub
shl
mov
mov
test
jge
loope
neg
jecxz
repnz
out
xchg
cmp
ins
cmps
pop
paddusb
scas
iret
pop
retf
pop
adc
test
push
test
hlt
xor
outs
mov
enter
lock
jmp
sti
xlat
pushf
in
mov
dec
mov
xor
(bad)
xlat
pop
push
js
imul
outs
pop
jle
pop
jp
les
outs
repnz
sbb
fnsave
lds
pop
mov
cld
ds
push
or
std
lock
mov
or
in
fcom
mov
(bad)
fist
cli
mov
stos
repz
shl
inc
push
xchg
aaa
aad
aad
addr16
and
js
and
and
ds
mov
sub
in
cmp
cmp
adc
aad
and
inc
shr
jmp
adc
out
jp
xchg
(bad)
ins
push
out
(bad)
and
push
cwde
mov
ja
clc
les
xor
in
rcl
cmps
fsubr
mov
dec
mov
mov
dec
lods
jb
fisttp
retf
stc
cmp
scas
lods
dec
data16
or
or
fsubrp
ins
(bad)
jae
xchg
frstor
sub
mov
daa
add
mov
movs
xchg
sub
imul
cwde
sbb
mov
rol
jno
test
enter
mov
cmp
ins
iret
test
xor
(bad)
fcomp
iret
adc
(bad)
fstp
cmp
outs
xor
push
(bad)
push
in
push
popf
mov
mov
mov
bound
stos
pop
retf
sahf
sbb
add
outs
xor
or
pop
lods
imul
ja
mov
test
push
cmps
test
mov
retf
pop
xor
dec
in
and
dec
mov
or
lods
lea
xchg
rcr
jno
shl
movs
adc
or
neg
aas
cs
mov
or
and
rcl
in
loopne
push
jne
pop
xor
repnz
call
pop
addr16
jmp
imul
neg
jmp
dec
and
dec
popa
xor
push
cs
xchg
xor
stos
and
fwait
and
inc
gs
or
(bad)
cmp
stc
out
call
cli
ins
inc
cdq
pop
call
cmps
or
test
div
lods
pop
les
imul
aam
ret
adc
pop
cmp
fst
test
add
pop
fcmovb
xchg
(bad)
(bad)
adc
mov
mov
add
ss
mov
cld
jbe
push
dec
push
or
div
das
sahf
out
mov
cld
ja
dec
push
mov
cmp
xchg
loop
and
mov
cmp
scas
jmp
pop
retf
scas
dec
push
adc
adc
or
push
adc
add
inc
jnp
ret
sub
push
ins
cmp
xchg
adc
or
movs
test
add
ror
add
push
adc
push
mov
dec
not
std
repz
jmp
ins
mov
scas
les
mov
add
jo
data16
sbb
jns
jno
adc
pop
(bad)
pop
pop
rcl
xor
sbb
jmp
add
les
adc
jnp
retf
mov
add
hlt
ret
cmps
jo
es
jns
aaa
dec
sbb
dec
xchg
or
loop
pop
cmps
xor
rep
repnz
xchg
repz
aas
lahf
das
mul
fnstsw
(bad)
jns
mov
mov
pop
std
sti
(bad)
pusha
enter
xchg
inc
dec
and
dec
sbb
outs
(bad)
or
test
fs
cld
mov
xor
arpl
iret
fild
mov
or
cdq
leave
mov
movs
les
out
sbb
jl
cmp
pop
mov
xor
in
pop
(bad)
pop
sub
adc
movs
fstp
in
hlt
push
(bad)
ficom
ror
ror
nop
jno
movs
xchg
(bad)
icebp
dec
pop
test
adc
dec
jl
(bad)
mov
jmp
int
lahf
leave
das
jbe
shr
inc
and
leave
lea
daa
imul
jo
ret
hlt
shr
sub
sub
mov
mov
cmp
imul
loope
or
arpl
sub
mov
ja
ja
(bad)
imul
add
or
or
shl
add
jno
and
lock
int
rol
push
retf
shl
fwait
gs
fs
push
data16
fbstp
retf
or
adc
pop
pop
cmps
ret
shr
xchg
movs
cmp
adc
mul
lds
or
push
sub
jmp
dec
aam
repz
retf
loope
cmps
les
lods
add
int3
push
and
enter
aam
das
call
push
cmps
rcr
leave
push
mov
mov
movs
adc
and
fiadd
mov
mov
pop
sub
dec
push
inc
pop
cmp
add
out
int3
push
aad
cmc
sub
hlt
or
adc
mov
shr
aaa
pop
inc
(bad)
adc
dec
test
addr16
xstore-rng
cmps
add
fiadd
(bad)
cmp
jmp
out
xor
je
xchg
mov
scas
int3
(bad)
xchg
mov
fnstcw
sqrtps
fdivrp
lea
dec
aaa
sub
aad
inc
ds
(bad)
sbb
push
ss
inc
dec
dec
jp
retf
pop
cmc
sbb
pusha
fidiv
(bad)
movs
cmp
cld
or
sbb
xlat
adc
inc
push
fadd
adc
fldenv
sub
(bad)
mov
add
jmp
cli
cmp
dec
call
pop
aaa
inc
arpl
add
push
mov
and
mov
adc
xchg
ins
int
inc
pop
push
push
es
jmp
add
dec
cs
cli
add
jmp
test
and
(bad)
call
mov
mov
ja
ss
or
or
stc
imul
pop
movs
dec
mov
(bad)
(bad)
sbb
les
add
les
ins
pop
movs
xchg
mov
(bad)
xor
fadd
dec
jb
fcom
pop
(bad)
cmps
retf
sub
jge
xor
ret
das
mov
or
je
inc
mov
inc
xor
int
ret
out
ins
sbb
jnp
mov
repnz
sbb
jns
std
ror
cmp
imul
inc
xor
stc
repz
xor
cmp
add
mov
sbb
or
gs
xor
stos
scas
aad
stos
fistp
popa
pop
mov
jo
xor
xor
jp
je
xchg
cmps
add
dec
enter
xor
int3
dec
std
lahf
xchg
movs
jae
jmp
in
push
shl
adc
cmp
jl
sbb
dec
and
fldcw
data16
xor
fnstenv
inc
out
(bad)
daa
add
pop
stos
test
cmps
inc
in
fmul
call
scas
dec
dec
das
sub
test
or
pop
out
push
mov
in
pop
jmp
inc
cmp
cld
cmp
iret
daa
addr16
clc
push
push
leave
push
loope
dec
fdivp
(bad)
out
push
xchg
std
sbb
jns
mov
jmp
xchg
cmp
push
xchg
pop
mov
rsqrtps
(bad)
mov
cmp
and
aad
pop
shr
in
cmp
cmps
push
mov
mov
dec
movs
or
ficomp
inc
pop
outs
mov
lock
inc
sbb
clc
cdq
cmp
mov
inc
int
pop
add
es
movs
ins
pop
xchg
xchg
inc
jp
push
sar
stos
dec
dec
call
jno
sbb
or
aad
test
jns
push
xchg
inc
stos
jp
push
icebp
mov
mov
cmps
cmp
adc
stos
mov
cmp
repnz
cli
jg
mov
lahf
aad
jbe
xchg
add
or
gs
jmp
movs
push
mov
and
xor
int
dec
push
enter
mov
mov
and
mov
movs
ins
stos
xchg
sbb
out
mov
mov
fdivr
mov
add
arpl
or
movd
out
(bad)
mov
pop
adc
jns
shl
movs
bound
test
push
(bad)
lds
xchg
sub
sbb
and
pop
test
repz
mov
enter
popfw
add
and
test
les
std
aam
gs
fbld
and
dec
push
fnstenv
push
(bad)
cli
pop
out
les
xchg
xchg
int3
cwde
push
push
daa
ror
and
jo
mov
stc
pop
inc
ins
xor
into
aas
jmp
xchg
sar
xor
xchg
cmps
jnp
jno
sub
xchg
fstp
(bad)
dec
pop
repz
lods
adc
sar
mov
jae
cmp
test
mov
neg
dec
in
pop
jbe
jns
adc
pop
std
push
inc
call
dec
lea
jmp
xor
and
cwde
stos
adc
add
cmc
push
push
ja
out
jmp
sub
mov
add
sbb
and
jge
mov
dec
dec
hlt
aas
mov
aas
sub
sbb
retf
xchg
push
and
jne
push
mov
xchg
cld
xor
mov
das
fsubr
or
adc
test
(bad)
imul
inc
xor
fwait
popf
dec
and
mov
push
xor
rcpps
jge
mov
mov
cld
dec
in
ins
in
in
cmp
mov
adc
fdivr
xor
popa
inc
ror
arpl
mov
(bad)
int
aad
les
aad
mov
retf
push
int3
mov
jb
pop
fwait
mov
mov
and
fst
mov
retf
inc
popa
ret
dec
bound
sbb
(bad)
jmp
cmp
dec
js
sub
jbe
sub
and
mov
cmp
push
pusha
test
daa
cmps
int
mov
mov
jb
push
inc
nop
jmp
test
mov
pusha
pop
scas
pop
mov
in
lods
aad
or
xor
test
(bad)
mov
adc
or
or
sub
loop
inc
ins
mov
mov
aas
pop
test
cli
inc
pop
cmp
std
das
nop
dec
mov
mov
or
mov
stos
push
fdiv
or
fiadd
(bad)
xor
ins
sbb
sbb
mov
movs
(bad)
mov
dec
icebp
outs
fistp
loop
jae
test
test
movs
out
fnstsw
sub
inc
add
cdq
push
retf
and
addr16
mov
das
dec
sbb
or
test
bound
and
mov
test
adc
push
or
loop
sbb
clc
mov
push
or
rcr
sub
sbb
mov
cmp
or
(bad)
ds
mov
mov
sbb
loopne
popa
out
push
ins
ins
(bad)
loop
dec
xor
adc
jle
loope
inc
cmc
shl
std
and
fisttp
lods
sub
stc
mov
add
dec
aam
daa
cmps
jge
adc
push
pop
repz
rol
mov
fcmovne
push
jecxz
leave
korb
fist
imul
test
js
push
or
lahf
pop
push
fbld
in
push
cmp
repz
xor
sahf
pop
mov
mov
test
enter
mov
fist
and
inc
push
sub
cmps
adc
dec
push
int3
push
inc
inc
mov
in
push
mov
and
cmp
jb
jne
cmps
mov
sub
inc
add
push
jno
pop
cld
mov
aam
sbb
sbb
or
xchg
dec
xlat
outs
xchg
mov
call
fmulp
in
dec
repnz
push
pushf
sbb
xor
bnd
mov
and
shl
inc
and
add
dec
mov
icebp
sbb
and
xchg
nop
xlat
loop
jge
pop
jecxz
mov
pop
shl
xchg
adc
popa
inc
dec
lahf
mov
scas
xor
mov
mov
pop
rol
mov
jmp
jp
mov
out
mov
cs
push
push
imul
add
cmp
popa
xchg
or
inc
outs
jns
and
mov
popf
mov
mov
dec
add
js
dec
xchg
mov
inc
bound
xlat
jae
pop
aad
shl
cmps
lods
pop
call
sbb
in
xchg
pop
clflush
ds
mov
ud0
mov
and
or
ss
lds
jecxz
fisubr
pop
gs
jae
scas
aam
xor
push
sub
pop
cld
pop
test
xchg
inc
and
pop
cmps
push
add
stos
mov
inc
inc
mov
sub
pop
in
xor
scas
sbb
push
jno
neg
and
and
sub
scas
jecxz
ds
mov
mov
mov
push
pop
add
mov
pop
into
xor
mov
jg
cwde
(bad)
adc
cs
sub
scas
adc
sub
jo
or
js
mov
aas
iret
daa
pop
lods
xchg
and
sub
xlat
sbb
sbb
dec
jmp
pop
fwait
ret
dec
loop
dec
test
fsubr
and
shr
popf
xor
out
ins
sbb
xchg
jns
(bad)
fcom
fwait
add
add
jmp
dec
std
call
fisubr
xchg
mov
or
or
dec
ss
movs
mov
sub
idiv
(bad)
movs
cmp
lods
loopne
sbb
push
ret
fistp
das
jmp
cmpxchg
cmp
icebp
xor
into
xor
adc
retf
push
test
rcl
adc
stc
leave
dec
and
jmp
repz
repnz
pop
xchg
inc
mov
in
mov
mov
out
ret
cmps
cmp
je
cmp
xchg
sub
pushf
adc
xchg
mov
jnp
lea
daa
mov
mov
or
enter
pop
clc
jg
mov
test
fs
jl
push
jg
jg
scas
imul
ins
jmp
jl
cmp
jne
mov
(bad)
pop
fld
pop
aas
rcr
in
sbb
xor
repnz
and
inc
in
je
xchg
dec
xchg
jne
lods
mov
out
je
mov
add
xor
in
xchg
movs
xor
clc
adc
ss
sbb
test
lods
dec
pop
mov
daa
xchg
fsub
and
pop
sbb
fs
adc
icebp
(bad)
stos
fnstsw
and
outs
hlt
add
fxch
mov
gs
scas
xor
(bad)
outs
push
pop
xor
fdivr
fdivrp
mov
js
cmps
and
ret
or
pusha
es
mov
test
sub
sbb
ds
sahf
jmp
dec
fadd
(bad)
or
push
pop
dec
jno
mov
pop
minps
jae
pop
sti
adc
cmp
iret
stc
jb
cwde
test
mov
icebp
push
and
inc
pop
das
and
int
and
call
fst
mov
dec
retf
adc
retf
(bad)
and
pop
fcom
sbb
loope
into
inc
stos
add
push
dec
test
fwait
dec
mov
pop
cmp
repz
or
sub
out
lods
call
shl
cmps
arpl
and
nop
ret
into
xlat
dec
inc
jge
js
push
mov
jl
lods
inc
adc
out
shl
mov
jns
dec
int
push
icebp
jmp
lock
pushf
pop
push
inc
repz
mov
mov
fucomp
test
test
repnz
imul
add
and
retf
push
int3
lea
mov
xchg
and
pop
add
fs
lahf
and
mov
call
mov
fstp
jecxz
jmp
cmp
sub
cwde
popf
leave
push
and
adc
and
imul
test
mov
in
push
out
das
xchg
push
push
(bad)
xor
xchg
aaa
cmp
mov
ret
cwde
xchg
sub
push
pop
and
rol
cli
push
xor
or
pop
lea
mov
push
sub
and
test
mov
movs
mov
sub
gs
jbe
mov
jge
add
movs
je
adc
pop
ret
lods
fdivrp
pop
add
add
add
stc
out
inc
mov
lahf
pop
pop
xor
mov
inc
cmc
push
xchg
mov
and
pop
lods
loopne
fwait
loope
cs
sbb
sub
fadd
sub
mov
mov
iret
sub
jmp
ja
(bad)
into
inc
push
enter
loop
(bad)
pop
cmp
and
cmp
test
mov
cs
push
stos
inc
int
jbe
push
xor
mov
(bad)
xchg
movs
or
sub
mov
inc
loop
std
int3
sbb
and
je
mov
and
movs
cmovle
or
and
mov
out
nop
sbb
in
dec
xchg
lahf
in
xchg
xlat
pop
bound
loope
ja
mov
jg
add
je
push
inc
rol
mov
push
das
mov
mov
inc
and
or
dec
ficomp
mov
shl
sub
sti
pop
fcomp
rol
dec
loop
lock
or
(bad)
push
cmp
(bad)
mov
frstor
iret
cs
rol
dec
dec
pusha
in
xchg
lea
aaa
sbb
or
xchg
out
jnp
fsubr
jp
sbb
fmul
ret
dec
and
sub
dec
jmp
shr
mov
push
outs
les
shl
out
int
sub
gs
fild
dec
jae
in
cmc
xchg
je
(bad)
int3
leave
cwde
sub
enter
(bad)
adc
mov
mov
jl
or
je
xor
aad
lahf
mov
sub
inc
daa
ficom
fistp
or
repz
int3
inc
out
add
mul
mov
in
fild
push
jo
arpl
imul
cmp
fs
mov
outs
dec
xchg
sub
push
lock
inc
mov
sbb
cmp
rcl
mov
inc
push
call
jmp
mov
push
or
scas
popa
imul
call
lsl
push
sbb
dec
xchg
push
sub
outs
xchg
(bad)
stc
imul
mov
pushf
mov
cmp
lds
mul
imul
inc
push
loop
(bad)
mov
imul
shl
pop
add
cmp
push
xlat
cwde
popf
jns
xchg
inc
rol
ins
scas
cdq
cmc
cld
rcl
cwde
push
lock
mov
cs
clc
xor
mov
lea
shl
sbb
mov
popf
vmovaps
stos
(bad)
stos
test
mov
add
stos
sub
inc
dec
xor
scas
add
push
sbb
bound
(bad)
xor
xor
xor
and
pop
fisubr
std
outs
push
jb
leave
xor
sub
mov
call
xor
or
fdivr
jecxz
mov
retf
addr16
push
sub
jge
fidivr
jbe
jg
push
pop
jle
cs
xor
sbb
ins
rol
adc
cld
xor
mov
push
push
mov
xor
out
jnp
mov
ds
inc
jmp
mov
shl
(bad)
iret
aad
clc
in
mov
loop
leave
(bad)
repnz
iret
inc
dec
add
pop
sub
jle
mov
(bad)
cmps
ds
js
xchg
cmp
test
in
sbb
ja
in
jae
loope
mov
sub
dec
rcr
data16
push
popa
sar
push
movs
xchg
retf
repz
adc
add
pop
pusha
fisub
inc
movs
stos
repz
xor
frstor
bound
cmp
push
xchg
(bad)
jmp
jle
pop
push
jne
add
xchg
in
cmp
les
mov
loope
xor
retf
test
stos
jg
pusha
push
scas
leave
mov
retf
in
xor
and
or
sub
adc
cmp
jae
mov
fsubr
and
inc
es
hlt
(bad)
enter
leave
test
add
repz
xchg
imul
cwde
pop
adc
jnp
xchg
aaa
ret
add
mov
popa
addr16
and
test
adc
inc
mov
clc
ror
imul
xchg
xor
nop
fdiv
out
push
push
pushf
sbb
fst
ds
shr
dec
rcl
inc
movs
sbb
ret
int3
es
adc
mov
je
jecxz
call
push
gs
jmp
add
es
sbb
dec
lock
fnsave
popa
mov
and
cmp
aaa
daa
pop
retf
scas
shl
sbb
dec
cwde
imul
pop
mov
stos
scas
inc
dec
mov
mov
scas
push
push
lods
inc
mov
stos
movs
or
lods
int
loop
cdq
(bad)
jns
dec
movs
loopne
mov
sub
arpl
jmp
es
rcl
dec
or
push
rol
sar
(bad)
xchg
xchg
(bad)
push
jno
and
fisttp
rol
pop
cmp
lea
push
fldcw
inc
loopne
push
mov
dec
mov
dec
outs
cmp
outs
cs
mov
jnp
mov
or
or
enter
pop
fxch
pop
and
mov
cmp
pop
jmp
inc
(bad)
shr
fstp
in
sbb
cmp
ins
jp
mov
pop
jp
mov
(bad)
sbb
sbb
add
inc
cwde
mov
pop
jo
and
sbb
dec
xchg
pop
dec
cmps
jecxz
pop
xor
pushf
lock
daa
ins
repz
cmp
push
pop
ret
push
or
inc
pop
les
lahf
adc
push
adc
mov
mov
or
arpl
fcom
mov
dec
inc
bound
push
add
ja
(bad)
cs
int3
popa
cmps
dec
sti
in
pop
call
pushf
add
fmul
clc
sbb
retf
mov
(bad)
push
pusha
ficom
sti
aam
pop
pusha
inc
mov
sub
dec
sahf
push
add
js
(bad)
fld
and
stos
and
push
mov
inc
scas
in
push
adc
push
and
mov
out
imul
adc
mov
aaa
mov
pop
push
sbb
push
mov
aas
xchg
jg
mov
movs
int3
es
repz
push
gs
fmul
repz
dec
jnp
inc
pop
push
repz
sub
jmp
cmp
sub
mov
data16
vmread
xor
mov
adc
sbb
xlat
test
mov
push
movs
or
dec
in
fs
std
outs
into
test
xlat
stos
movs
inc
(bad)
push
xor
xor
ds
jmp
loop
movs
or
pop
inc
cmp
js
cmps
mov
xchg
inc
stos
dec
out
pop
mov
cwde
cmp
nop
sbb
ss
cmp
outs
fiadd
repnz
add
fbstp
gs
nop
sahf
cmp
push
repz
mov
ds
jo
rol
and
(bad)
push
int
lock
les
push
xchg
sub
mov
(bad)
or
fmul
and
and
xor
fcom
xchg
mov
aas
gs
jmp
out
sub
stos
jbe
dec
mov
call
sbb
arpl
repz
in
sbb
retf
adc
sbb
inc
and
ja
xor
popa
scas
ja
sub
cmp
inc
aad
imul
fisubr
push
adc
ss
cld
push
push
out
adc
cwde
pop
mov
fld
cmps
lea
inc
dec
and
mov
daa
mov
rcl
or
(bad)
xor
test
mov
js
daa
push
pop
dec
or
call
pop
(bad)
fld
mov
aaa
mov
ins
jle
pop
xor
jl
dec
shl
inc
gs
jp
fcomp
sar
in
sbb
mov
fistp
push
mov
and
xchg
push
mov
cmp
mov
xchg
loop
test
outs
inc
jp
mov
fsub
and
es
adc
mov
inc
mov
push
mov
dec
aam
fiadd
push
mov
xor
les
dec
mov
movs
xchg
lds
dec
mov
adc
iret
dec
je
sbb
pop
sub
dec
cmp
add
fimul
cmp
test
out
jecxz
adc
jno
mov
das
adc
jl
lock
outs
and
aas
(bad)
pop
push
cmp
jge
jg
mov
lods
mov
jecxz
cmps
and
imul
jmp
push
aaa
mov
test
ror
std
pop
scas
dec
inc
leave
mov
sbb
push
jne
scas
mov
xchg
(bad)
(bad)
js
repnz
jno
mov
adc
cmp
arpl
or
xlat
repnz
mul
pop
push
arpl
addr16
bound
inc
inc
je
cs
cmps
jae
test
inc
adc
mov
xlat
push
jecxz
mov
mov
fst
inc
cs
cmps
cmp
push
sbb
mov
aas
in
jne
nop
cmc
mov
xchg
cmp
ins
test
(bad)
out
xchg
call
sub
or
inc
gs
mov
nop
iret
stc
scas
daa
pop
mov
sbb
pop
dec
cmp
dec
addr16
test
sub
aaa
dec
pop
jle
rcl
loop
pop
adc
lock
or
repz
cmc
add
cmp
ror
dec
lods
adc
into
add
dec
mov
push
pushf
dec
ss
loope
and
leave
mov
stos
retf
lds
mov
sti
and
lods
adc
xchg
jmp
test
xchg
loop
not
popa
adc
fs
int
stos
or
xor
scas
icebp
jae
push
inc
mov
out
popa
jns
cmc
sbb
gs
mov
xchg
jbe
dec
or
daa
aaa
sub
push
(bad)
loopne
jp
jg
ins
mov
stc
adc
xor
pusha
mov
daa
mov
out
dec
dec
pop
pusha
lods
ret
outs
fcom
retf
into
shl
mov
daa
shl
mov
inc
aad
cmp
lds
mov
mov
fnstcw
or
lods
dec
inc
inc
inc
push
fimul
test
rcl
cmps
xor
aaa
or
mov
ds
mov
and
or
test
inc
xchg
cmp
or
xchg
sbb
xor
cli
(bad)
sub
pop
pop
xor
imul
and
lods
das
or
sti
xor
pop
sbb
push
fcomip
dec
in
mov
add
xchg
loopne
mov
inc
mov
je
xor
cmps
inc
jmp
pop
dec
dec
push
push
jno
retf
cmps
cmp
add
scas
push
jae
cmp
lods
fld
fstp
in
fcmovb
jle
out
pop
xchg
push
jle
and
iret
sbb
pushf
test
jnp
dec
lods
arpl
ror
ss
inc
adc
iret
ret
xchg
mov
pop
mov
scas
xchg
aaa
dec
add
cld
adc
mov
mov
mov
xchg
and
inc
stos
adc
(bad)
out
xor
out
pop
loope
push
mov
xlat
inc
rcl
cs
popf
test
add
pop
test
idiv
xor
dec
push
lock
data16
mov
test
jo
loope
push
mov
pop
stos
mov
mov
js
or
inc
xchg
bound
cmp
mov
mov
add
jp
shl
icebp
pop
or
and
ss
shl
inc
test
inc
arpl
xchg
in
add
aas
jae
in
sub
sub
movs
rol
push
sar
cmp
mov
(bad)
(bad)
jmp
mov
cmp
sub
add
gs
or
arpl
arpl
xor
in
jb
sar
cld
popa
inc
stc
mov
outs
mov
aaa
add
xchg
push
test
ins
ja
sub
addr16
push
push
inc
test
xchg
jmp
in
pop
jp
adc
popf
adc
ss
cmp
stc
and
push
cmp
(bad)
fisttp
mov
mov
test
icebp
or
dec
pop
mov
fisttp
stc
add
and
cwde
ret
cld
test
jmp
xchg
jge
mov
jns
sbb
test
(bad)
push
aas
inc
and
mov
or
jg
xchg
packsswb
pusha
addr16
cs
enter
jmp
leave
sub
push
imul
rcr
jne
sub
sub
pushf
mov
xor
aaa
pop
jo
sub
mov
and
jno
inc
cmps
dec
call
not
in
cli
jmp
add
stos
pop
xor
fimul
ins
pusha
mov
mov
fsub
mov
push
cmp
push
add
jb
sub
scas
cmc
dec
mov
stos
jmp
js
or
popf
push
or
mov
cmp
mov
das
add
ins
pop
push
(bad)
mov
jo
mov
fs
and
sahf
or
js
in
mov
sub
dec
or
mov
xlat
sbb
mov
jg
shl
jp
fstp
jg
call
inc
mov
outs
data16
mov
and
ins
xchg
jb
retf
xor
jge
aas
cli
sbb
clc
leave
add
or
popa
mov
push
fcmovbe
in
clc
bound
push
jg
or
mov
in
jg
adc
inc
ins
add
cwde
aas
int3
inc
and
dec
mov
mov
and
push
(bad)
mov
test
fnstcw
enter
aas
xchg
out
cmp
push
xchg
nop
add
pop
push
out
pop
ficom
hlt
add
mov
push
mov
idiv
xchg
mov
(bad)
aad
or
test
xor
xor
mov
sahf
loopne
and
mov
stos
dec
push
retf
repz
mov
and
mov
mov
cmp
out
xor
mov
mov
jecxz
jle
jns
push
mov
into
push
push
jmp
dec
mov
pop
inc
stos
mov
retf
sbb
std
ret
pop
pop
inc
test
dec
mov
xor
add
inc
repz
ds
(bad)
in
out
idiv
ins
(bad)
inc
rcl
mov
and
push
call
xchg
sbb
addr16
(bad)
xchg
outs
pop
or
lahf
out
xor
lahf
mov
ins
pop
dec
(bad)
jns
jb
pop
repnz
xor
std
dec
(bad)
mov
dec
aad
lahf
adc
ret
jge
sbb
xor
push
sar
and
xchg
pop
inc
inc
xor
imul
repz
xor
jne
(bad)
hlt
retf
or
sbb
retf
sbb
xchg
enter
sbb
test
inc
xchg
mov
iret
inc
push
scas
push
dec
push
test
add
gs
les
ret
push
ins
ins
xchg
call
stos
adc
push
push
xchg
jmp
fisub
outs
push
bound
(bad)
stos
das
out
ja
xor
and
adc
movs
add
fdivr
mov
pop
cwde
cmc
fsub
ror
add
int3
and
icebp
pop
mov
rcl
call
int3
(bad)
adc
in
loopne
stc
fmul
stos
fs
xor
daa
sbb
rol
pop
pop
test
dec
cmp
pop
retf
fnstsw
sbb
mov
out
stos
stos
nop
test
cld
and
or
or
mov
aam
dec
cmp
xor
(bad)
fidivr
fcom
loope
or
mov
es
adc
aam
and
outs
imul
mov
cmp
add
xchg
dec
out
or
pop
mov
pop
mov
fsubp
inc
lods
inc
(bad)
(bad)
in
iret
mov
push
ret
rcl
in
fnstsw
adc
sar
inc
aas
loope
aad
jp
adc
mov
and
popf
into
push
stos
inc
pop
or
mov
push
das
fild
shr
add
jo
stc
xlat
enter
push
jecxz
stos
fld
(bad)
and
inc
(bad)
cmp
or
xor
movs
das
and
ins
shl
das
aas
cs
xor
clc
pop
fwait
adc
popa
into
stos
xchg
xor
in
cmp
imul
or
shl
ret
std
pop
dec
xchg
sti
nop
(bad)
adc
push
fsubr
push
inc
test
bound
jmp
jnp
cmp
push
imul
xchg
or
pop
aaa
lock
cmp
mov
fld
lea
popf
out
(bad)
xor
ret
jo
sub
cs
mov
not
jmp
gs
lock
das
in
mov
mov
inc
jmp
and
loopne
xchg
loope
cmp
es
enter
call
inc
and
adc
mov
xchg
test
in
test
jmp
add
sub
add
pop
(bad)
or
push
inc
(bad)
(bad)
mov
xor
push
je
dec
(bad)
fcom
ds
push
push
cmps
scas
clc
cld
pop
fcompp
inc
lock
cmps
add
ja
repz
pop
fisubr
ret
test
push
pop
sub
lea
jns
mov
inc
fcom
popf
and
icebp
xor
(bad)
call
cmc
pop
inc
cmp
jecxz
adc
dec
adc
mov
xchg
cmp
cmp
jmp
ror
mov
fild
sub
adc
push
in
sub
add
rcr
fs
adc
pop
stos
xor
inc
push
mov
sub
jne
ds
and
stc
cmc
int
outs
enter
pop
xchg
leave
xchg
push
lahf
xchg
test
mov
jmp
cli
mov
je
push
mov
xor
(bad)
xchg
jb
sub
fst
icebp
sbb
repnz
(bad)
fisttp
pushf
or
add
dec
pushf
test
xchg
xchg
jle
imul
(bad)
in
xor
xor
mov
hlt
aam
sbb
mov
jmp
dec
mov
or
mov
lock
add
test
or
dec
push
add
inc
jecxz
lds
out
leave
out
outs
adc
jae
mov
pop
xchg
xchg
test
push
adc
cmp
ror
ins
inc
fdiv
mov
and
inc
hlt
dec
push
scas
xor
jns
test
push
mov
(bad)
hlt
das
neg
push
in
leave
stc
shl
fnstcw
lock
int
push
aam
out
hlt
add
out
pusha
push
jmp
loope
jnp
inc
push
fcomp
push
push
xchg
push
sub
outs
jmp
pop
mov
ret
add
dec
imul
dec
xchg
or
retf
popa
dec
mov
push
ret
mov
out
sub
dec
adc
ficom
int
movs
and
mov
jl
push
and
pop
jae
cwde
dec
imul
mov
jmp
jae
cmp
adc
adc
out
push
hlt
mov
sub
push
mov
dec
pop
pop
imul
cmps
jo
movs
xchg
push
in
inc
cmp
je
mov
sub
(bad)
clc
or
fwait
cld
sbb
cmp
pushf
xchg
cli
sub
ins
(bad)
and
and
mov
dec
or
xor
push
dec
test
sbb
pushf
pushf
in
and
sbb
cmp
and
lds
and
push
call
out
gs
sub
lods
xor
mov
jae
cdq
push
pusha
arpl
mov
scas
aaa
in
(bad)
out
bound
push
jp
push
push
and
or
movs
xor
rcl
or
mov
mov
std
iret
sti
(bad)
js
fst
xchg
(bad)
inc
sbb
scas
xor
add
dec
pop
push
jecxz
jmp
cmp
and
stos
pop
(bad)
hlt
jp
(bad)
mov
pop
shl
(bad)
out
bound
xchg
xor
xor
scas
adc
icebp
jbe
aam
cmp
pop
sahf
inc
jbe
cmps
adc
xchg
clc
test
psubq
icebp
imul
retf
lds
adc
loopne
or
mov
sbb
sbb
mov
or
out
ins
test
pop
mov
sbb
loopne
jb
xchg
xor
out
cmp
jae
ss
out
(bad)
mov
test
cmp
mov
push
adc
sbb
adc
sbb
ja
jecxz
mov
mov
test
pop
mov
inc
jl
arpl
in
add
cwde
jno
mov
xor
dec
lds
xlat
mov
dec
and
(bad)
pop
test
inc
mov
xchg
cmp
xchg
push
loope
fsubr
push
(bad)
jge
aas
out
in
loop
leave
or
dec
mov
sub
dec
xor
outs
push
xor
imul
sub
dec
mov
mov
push
or
inc
xor
add
xchg
xor
jbe
ret
push
pop
sbb
add
jp
sar
pop
call
pop
call
frstor
mov
push
icebp
mov
mov
fldcw
stc
jl
je
shr
pop
mov
mov
push
mov
outs
add
sub
ins
fild
aam
test
loopne
dec
add
out
dec
aad
daa
xchg
es
sbb
sar
sub
cli
aas
mov
outs
mov
sub
cld
and
mov
add
or
lods
rol
lock
nop
inc
stos
dec
jns
test
sub
lea
sub
adc
pop
ins
push
add
cmp
shl
lahf
popa
cdq
xor
(bad)
cli
dec
std
jnp
sbb
dec
inc
push
lea
retf
dec
and
mov
pop
js
fdivr
push
outs
sbb
aaa
jg
mov
repz
xchg
sub
dec
sbb
cmp
push
out
ja
push
ret
scas
in
push
sub
mov
out
call
xlat
xor
adc
mov
pop
mov
xchg
cdq
adc
cmc
stos
cmps
mov
(bad)
dec
mov
call
xor
jnp
imul
or
das
pop
cmp
ins
sub
out
test
and
lods
frstor
mov
push
arpl
push
adc
repz
lock
imul
sub
cli
mov
xlat
(bad)
out
or
test
cmp
loop
jmp
inc
pop
push
mov
imul
sub
jmp
inc
sub
shl
mov
lods
retf
mov
int
adc
mov
in
adc
daa
mov
pop
cmp
cmp
fsubr
mov
dec
mov
jns
lahf
je
jmp
and
mov
loope
dec
mov
enter
jmp
push
jg
mov
or
or
jge
or
sub
lods
pop
ins
sbb
inc
je
hlt
daa
(bad)
push
and
pop
arpl
in
(bad)
test
rol
xchg
ficom
fcomp
xchg
int3
add
and
add
mov
and
test
cli
std
mov
jge
cmps
lods
mov
pop
cmps
inc
je
sub
sbb
bound
dec
or
repz
and
fs
adc
cmps
retf
loopne
or
pop
loopne
mov
ja
test
mov
inc
addr16
push
xchg
cmp
aaa
dec
mov
mov
fdiv
jl
and
(bad)
adc
and
inc
shr
repnz
fidivr
jg
sahf
mov
lahf
clc
xchg
cs
fs
out
xchg
or
mov
add
mov
and
jmp
call
out
mul
ret
adc
popf
scas
pop
jae
cli
adc
loop
dec
inc
stos
cmp
jae
mov
sub
pop
inc
push
jo
call
mov
jae
pop
push
nop
ja
out
inc
sbb
rol
and
jmp
and
not
dec
cmp
clc
push
test
sti
sti
sbb
(bad)
xor
mov
xchg
jns
lock
or
and
inc
pop
sahf
push
adc
xor
xchg
jge
imul
pushf
mov
lahf
mov
rcl
ins
frstor
shl
aam
cmp
adc
push
sub
jns
sub
sbb
sub
adc
mov
push
les
cwde
loopne
fdivr
sub
iret
fwait
retf
cmps
mov
fwait
aas
outs
(bad)
test
mov
add
test
push
addr16
adc
out
xchg
sub
sahf
les
in
leave
arpl
pushf
sub
sub
fwait
cwde
jo
ficom
lock
ret
aad
lea
sbb
popa
dec
inc
or
pop
pop
cmp
push
and
in
push
mov
mov
jge
loopne
les
dec
inc
lahf
add
jecxz
inc
pop
mov
dec
mov
add
adc
cmp
mov
(bad)
aad
vmaxps
pop
pop
aas
inc
dec
dec
sub
push
sub
shl
pop
mov
out
jp
in
(bad)
mov
and
xor
adc
cmp
xor
out
cmp
loope
dec
sbb
out
adc
std
jnp
loop
ficom
mov
arpl
stos
and
mov
gs
fucom
xor
int
push
xchg
int3
(bad)
in
ss
shr
xchg
pusha
pusha
sbb
cmp
sbb
shr
mov
mov
cmp
mov
push
ja
jmp
sbb
adc
in
push
(bad)
mov
data16
or
pushf
iret
gs
dec
hlt
int
popf
ins
adc
dec
hlt
ss
and
std
jnp
test
pusha
pop
jno
lds
mov
and
or
dec
scas
mov
iret
outs
jne
sbb
mov
adc
mov
addr16
sub
mov
aam
ins
das
pop
dec
fidivr
inc
clc
jmp
retf
movs
dec
pop
mov
xchg
gs
test
adc
rcl
or
jge
xor
sbb
data16
cwde
mov
mov
cmps
(bad)
inc
cmc
lods
pop
cmp
sahf
push
inc
add
jl
jns
adc
mov
ficomp
nop
pop
mov
shl
lahf
test
arpl
sub
sbb
and
xchg
and
ret
adc
cmp
xor
push
xlat
(bad)
mov
fldenv
cwde
inc
addr16
lods
rcl
fs
repz
push
lock
push
cmc
lods
mov
sti
imul
jne
icebp
popf
add
data16
mov
fbld
inc
sub
jb
loope
hlt
repz
lock
mov
and
div
mov
adc
out
add
add
inc
sub
aad
iret
shl
scas
jb
dec
aam
imul
fwait
mov
cmps
and
dec
pop
xchg
(bad)
movs
dec
or
push
mov
aas
test
fadd
in
pop
dec
sub
mov
sub
add
cmovno
pop
push
aaa
add
ds
adc
lahf
int3
je
mov
or
popf
sbb
dec
int
xchg
dec
jecxz
fmul
mov
pushf
dec
stos
int
sbb
idiv
sbb
and
dec
dec
(bad)
dec
xor
nop
fucom
or
xchg
adc
jno
adc
sbb
out
popa
loopne
pop
and
push
sbb
or
scas
in
mov
(bad)
enter
sub
mov
push
clc
jns
loope
jecxz
scas
call
add
add
push
out
aaa
mul
jae
dec
fwait
int
adc
add
ins
ret
adc
push
inc
mov
lods
jmp
sbb
je
and
cwde
sbb
add
jge
jl
test
pop
pop
xchg
iret
mov
in
stos
mov
sbb
pop
add
rcl
dec
loop
loope
dec
call
rcl
sub
jp
fimul
gs
push
lock
mov
movs
movs
push
add
add
cmp
add
out
sub
stos
leave
test
xor
sub
mov
div
mov
pop
aad
loope
fild
xchg
dec
xchg
inc
fst
add
lahf
xor
fimul
cmp
push
pushf
push
scas
xchg
popf
mov
ja
lods
jmp
push
int
sbb
jge
pop
movs
imul
dec
jg
sbb
mov
ja
pop
loop
or
out
xchg
mov
loop
fisttp
mov
loope
inc
ss
adc
ins
mov
jl
sub
aam
inc
shr
pop
push
mov
aaa
xchg
dec
pusha
(bad)
mov
sar
movs
pop
xor
imul
push
loopne
cmp
push
mov
stos
adc
les
jge
pop
dec
retf
pop
dec
stc
call
imul
jo
call
xchg
push
movs
push
stc
xchg
loopne
push
jmp
sub
cmp
adc
(bad)
or
mov
pop
fild
scas
in
cmp
jbe
mov
retf
and
ret
sub
das
stos
imul
mov
retf
ja
add
out
jb
push
imul
dec
call
in
jno
div
push
icebp
(bad)
rol
lods
(bad)
in
pop
or
inc
int3
push
cld
adc
mov
ins
and
mov
cmp
push
rcl
xor
xchg
fild
sub
or
cmp
sbb
sahf
mov
sbb
xchg
popa
xlat
adc
adc
sbb
dec
push
cmp
lods
div
imul
sbb
mov
sbb
lods
adc
or
inc
xor
cmp
or
cmp
xor
jne
jno
mov
test
xchg
hlt
shr
(bad)
lods
(bad)
sub
mov
loope
cmp
in
inc
hlt
push
imul
sub
and
call
jle
xor
mov
lea
stos
cmc
fprem1
mov
xchg
aas
xchg
frstor
jge
and
adc
fs
dec
cmc
adc
mov
retf
ret
or
gs
test
cld
jnp
fild
inc
xchg
cdq
push
and
mov
xlat
adc
jns
or
ret
ret
arpl
in
call
in
adc
jmp
mov
push
add
clc
enter
inc
call
jno
xchg
rcr
cmp
add
xor
repnz
mov
and
adc
sbb
loope
fwait
push
daa
clc
int3
mov
push
cs
test
inc
xor
adc
loope
sti
mov
sub
loop
retf
ror
inc
or
xchg
loopne
jle
jl
ror
scas
pop
shr
ficomp
aam
push
adc
adc
in
push
mov
jne
popa
rol
out
outs
stos
add
mov
fs
call
ror
xor
jb
dec
scas
add
ins
ret
cmp
push
leave
add
dec
or
dec
test
in
sub
or
inc
ins
icebp
in
cmc
imul
lods
aaa
add
in
xor
dec
pop
aaa
out
sti
pop
test
pop
jne
push
jg
pop
shl
xchg
clc
mov
in
adc
jbe
movs
and
rol
arpl
dec
(bad)
fcomp
push
cld
sti
push
inc
imul
mov
xor
jg
movs
shr
ficomp
jo
es
push
jp
cmp
mov
aad
adc
pop
mov
sbb
mov
lods
test
fwait
mov
idiv
push
push
cmp
mov
push
(bad)
in
rcr
xchg
loop
in
ins
pusha
push
pusha
into
test
jne
jb
jecxz
push
pop
add
pop
cs
push
enter
ins
jmp
jno
ja
xchg
xor
aad
xchg
and
test
cmps
add
mov
jl
xchg
mov
push
mov
jge
jmp
push
mov
enter
out
pop
adc
mov
adc
jmp
pop
xchg
shl
gs
dec
retf
pop
sbb
cmp
jne
or
pop
jmp
and
xchg
dec
lea
scas
outs
add
mov
cdq
dec
(bad)
and
fld
fisttp
mov
xor
fisttp
fwait
in
xchg
in
leave
stos
xchg
sbb
jmp
imul
shr
(bad)
xor
gs
repz
pop
out
xor
add
add
inc
sahf
sub
mov
dec
not
cmp
cdq
call
out
retf
pop
sbb
in
aaa
pop
out
xlat
mov
mov
lock
nop
jne
inc
into
test
xor
movs
add
push
dec
sar
xor
and
test
in
push
clc
cmp
shl
movs
test
dec
hlt
rol
pop
retf
sub
and
cmp
lea
aad
mov
aaa
pop
pop
jle
fisub
popa
mov
in
test
sbb
sti
int3
loope
jne
xor
or
xchg
inc
xorps
pop
les
adc
mov
mov
scas
adc
(bad)
ret
dec
popa
cmc
and
mov
idiv
xchg
(bad)
out
xlat
mov
add
cmp
retf
aam
xor
pop
and
ss
(bad)
xchg
and
fwait
mov
jnp
push
push
je
xchg
or
loopne
rcl
inc
ins
sbb
jo
xchg
outs
out
add
cmp
mov
mov
jmp
fsub
and
xchg
pop
iret
sbb
inc
xor
inc
in
aam
and
push
addr16
mov
pusha
test
adc
mov
scas
cmp
(bad)
leave
push
les
arpl
inc
adc
(bad)
hlt
or
imul
inc
int
jb
sbb
rcl
adc
or
jg
jmp
push
daa
pushf
sub
in
out
jmp
push
xchg
push
xor
or
push
push
es
hlt
xchg
cmps
stc
mov
inc
lods
cmps
cdq
hlt
out
jle
fsubrp
mov
std
test
xchg
sbb
iret
sbb
or
mov
cmps
imul
dec
cmps
jg
ret
or
(bad)
aam
and
test
adc
push
fcmovne
xchg
inc
movs
xlat
xor
in
fisub
iret
fiadd
fldenv
xchg
pop
jecxz
outs
mov
lea
mov
jbe
pop
je
jae
cmp
cmp
sbb
lea
test
pop
or
sahf
pop
lock
pop
jle
pop
test
adc
or
jbe
xchg
test
cmps
(bad)
icebp
xor
sbb
loopne
sti
arpl
in
inc
into
mov
je
movs
lods
add
int3
retf
cmps
outs
repz
scas
or
scas
(bad)
xor
and
xcrypt-ecb
cmps
or
jnp
pop
jmp
or
xor
fwait
rcl
xchg
cmps
add
das
push
xor
cmp
leave
aam
mov
adc
xchg
sar
(bad)
retf
sub
push
fcomp
scas
xor
xlat
add
fnstenv
and
add
stos
mov
cmp
call
or
ret
sti
mov
xchg
dec
imul
ror
jne
jne
push
xchg
pop
dec
(bad)
popa
call
jmp
fld
push
jns
push
jge
inc
add
sti
push
psllw
je
cld
xchg
xchg
repz
dec
aaa
xchg
(bad)
repz
sbb
fist
push
ror
xchg
add
xchg
xor
aaa
out
sbb
test
stos
jle
or
or
call
sbb
out
pop
call
push
aam
lea
cmp
(bad)
nop
in
adc
fisub
mul
mov
aaa
adc
jb
fwait
pop
xchg
mov
dec
ins
pop
cvtps2pi
mov
loopne
and
push
(bad)
cmp
fstp
mov
adc
mov
shl
loope
mov
dec
imul
enter
jp
or
pop
xchg
stc
xor
jb
inc
adc
retf
fmul
cmp
retf
xor
mov
adc
jbe
(bad)
mov
aad
dec
push
pop
ror
mov
mov
adc
sub
inc
ror
(bad)
pop
add
push
push
add
jae
loopne
sub
clc
sar
loopne
pop
push
or
mov
push
fisubr
push
sub
dec
adc
jg
push
push
data16
scas
les
stc
ror
inc
mov
mov
adc
sar
ja
jne
pop
mov
not
mov
pop
ret
or
ds
mov
push
cs
stos
fwait
out
and
xlat
ins
inc
sbb
xor
sub
dec
sub
cld
and
pop
(bad)
mov
imul
call
retf
add
dec
sbb
jg
mov
cmp
data16
xor
popf
mov
sub
outs
and
popf
mov
retf
stos
add
icebp
xor
adc
in
sbb
inc
xchg
lods
ror
xor
jmp
mov
xor
or
mov
loop
xor
cmp
jl
push
jl
mov
pop
jns
jns
or
mov
mov
sub
mov
popa
lahf
hlt
clc
jns
xlat
fsub
push
aas
daa
push
mov
dec
mov
cmp
out
inc
jno
add
(bad)
out
imul
pusha
test
mov
mov
bound
dec
sub
in
call
or
add
nop
movs
call
xchg
sub
rcr
jbe
xor
call
out
cli
(bad)
addr16
call
and
inc
xor
jl
ret
and
jne
ficomp
sub
pop
sub
pop
ja
jmp
sbb
test
stos
sub
or
xchg
bound
mov
hlt
movs
jecxz
ret
pusha
push
int
cmp
sub
in
loop
push
cmc
inc
js
or
pop
push
stos
inc
mov
popf
jne
xlat
ret
iret
adc
or
pop
sbb
or
sub
jb
mov
xor
jmp
pop
xchg
push
mov
cwde
cmps
xchg
add
cmp
sbb
jae
inc
jo
mov
adc
sub
loop
sbb
jle
int
out
add
rcr
xor
shl
stos
(bad)
pop
popf
xchg
dec
and
mov
dec
push
nop
xor
sbb
push
ins
mov
in
pop
mov
mov
ins
mov
mov
dec
rcr
test
test
inc
mov
aam
cmp
aaa
ret
add
push
sub
call
int
mov
shr
add
in
and
(bad)
dec
repnz
push
mov
neg
dec
clc
add
cmp
mov
inc
jno
or
and
mov
fisubr
cmps
and
push
ret
in
jns
xchg
jb
xchg
out
mov
enter
cli
jnp
popf
cmc
imul
test
push
je
dec
sub
jge
and
mov
jbe
jbe
not
mov
test
mov
shl
jno
call
mov
hlt
mov
xor
add
je
sub
cmp
sub
xor
(bad)
adc
fwait
jb
dec
iret
(bad)
mov
arpl
fidiv
or
fmul
push
fs
jecxz
add
adc
sbb
xor
in
dec
arpl
test
pop
es
outs
push
and
std
cmps
aas
or
xor
jmp
cld
inc
das
fs
js
mov
push
sub
int3
push
jne
mov
or
xor
sub
int3
sbb
(bad)
xor
add
retf
(bad)
in
xor
mov
bnd
adc
int3
pop
add
mov
jo
(bad)
inc
ret
inc
lock
int
stos
push
add
dec
adc
imul
jno
and
pop
idiv
mov
les
mov
xor
mov
stos
jg
icebp
arpl
and
int3
mov
pushf
gs
xchg
(bad)
rcl
bound
fcmovne
mov
cwde
xlat
sub
shl
inc
mov
xchg
icebp
pop
jo
or
adc
jg
and
ds
mov
cmp
ins
je
pop
push
xor
dec
mov
mov
add
fcmovb
mov
loope
sbb
call
pop
or
rcl
pop
sbb
lock
jb
xchg
inc
out
fistp
aam
push
sti
push
enter
or
mov
mov
or
pop
xor
loope
imul
lahf
imul
add
mov
test
ss
enter
int
jno
and
sbb
out
(bad)
adc
idiv
adc
retf
cmp
mov
cmp
clc
xor
out
sbb
cmp
xor
xchg
int
inc
mov
cld
cmp
(bad)
sbb
stc
mov
xor
mov
mov
jmp
mov
cmp
scas
inc
sti
iret
ror
shl
add
cmp
(bad)
inc
inc
cmp
sbb
fild
test
xchg
mov
push
icebp
or
gs
fadd
into
fnstenv
adc
nop
mov
cwde
sub
stc
sti
lds
ins
sub
mov
adc
mov
leave
add
dec
call
cmp
test
or
xchg
pusha
xchg
ficomp
push
movq
ret
xchg
popa
nop
and
jnp
mov
mov
shl
xchg
inc
sub
jns
cld
adc
in
xchg
les
mov
dec
fadd
adc
push
ret
(bad)
(bad)
mov
and
adc
dec
push
repnz
dec
push
adc
mov
loope
push
sub
pop
aam
push
pop
fsqrt
fs
jge
(bad)
cmp
add
add
mov
and
push
loop
jecxz
fdivr
mov
mov
arpl
jg
clc
loope
inc
xor
jns
jmp
sub
fldenv
inc
mov
outs
out
jb
xlat
push
mov
pop
dec
sub
es
cmp
cmp
adc
pop
adc
dec
retf
lea
(bad)
int
pop
cmp
pop
inc
lods
inc
and
xor
push
scas
gs
xor
test
mov
and
data16
add
movs
mov
(bad)
(bad)
jl
int
pop
jg
mov
inc
mov
cmp
imul
inc
repnz
and
in
xchg
in
int
cmps
icebp
sub
imul
dec
test
std
aaa
aas
aaa
addr16
sub
pop
test
or
mul
or
leave
inc
fld
or
fcomp
ror
mov
cmp
mov
mov
ret
cld
xchg
pushf
add
xlat
mov
pop
loop
out
xor
mov
ins
int3
ins
jecxz
clc
mov
mov
jno
push
ficom
xchg
ficomp
mov
fistp
outs
mov
stos
sti
in
cmp
or
lods
icebp
mov
daa
test
in
paddusw
dec
fcmovu
(bad)
in
fnsave
inc
mov
cld
cwde
cwde
push
movs
cdq
add
int
imul
test
clc
pop
cdq
dec
aam
or
daa
inc
aaa
sub
inc
cmp
sbb
call
jae
sub
into
das
push
adc
adc
and
fistp
pop
dec
xchg
fwait
icebp
scas
fucomip
jl
push
mov
add
mov
data16
(bad)
dec
or
adc
jl
push
xor
mov
stos
jno
mov
jnp
dec
enter
or
xor
pop
adc
push
int3
dec
repnz
cmps
mov
adc
sahf
and
gs
pop
pop
jp
mov
mov
(bad)
test
(bad)
cmp
imul
addr16
inc
cmc
sbb
shl
movs
cli
in
add
dec
(bad)
jmp
and
add
push
or
cdq
into
ins
cld
xor
in
xchg
mov
outs
mov
retf
sbb
ret
jmp
ja
pop
daa
fld
sbb
or
jmp
mov
inc
stc
mov
sub
in
loop
sub
pop
dec
retf
jg
test
loope
(bad)
push
clc
ror
pusha
push
iret
cld
jmp
xchg
push
rol
or
pop
cmc
adc
hlt
test
leave
inc
push
sub
dec
adc
sub
sbb
add
adc
dec
aaa
mov
or
and
cmp
push
lods
outs
out
jae
ret
mov
out
mov
mov
cli
pop
mov
jae
(bad)
cli
dec
in
mov
cmp
bound
outs
movs
dec
push
fisttp
sub
movs
mov
fst
in
mov
rol
or
push
adc
les
hlt
pop
jmp
fimul
mov
mov
add
(bad)
movs
add
cdq
mov
pop
in
mov
inc
or
je
std
outs
jmp
(bad)
cwde
lahf
or
dec
mov
in
call
sbb
jg
imul
rcr
(bad)
lods
imul
jg
jp
inc
or
inc
inc
arpl
pop
mov
ins
or
fist
sub
int
hlt
mov
mov
mov
jb
ror
cmc
fcomi
sbb
loop
mov
xchg
fnsave
out
loop
imul
or
mov
lahf
adc
and
test
addr16
pop
mov
add
push
xchg
shld
sahf
in
imul
out
xchg
and
sub
mov
mov
and
push
and
dec
and
fsubr
and
jl
out
fcom
ins
popa
pop
add
repnz
das
rcr
jnp
push
dec
push
stos
dec
mov
movs
repz
mov
mov
jns
mov
pop
mov
and
xchg
clc
shl
leave
inc
call
daa
out
cmp
inc
ret
push
les
jp
fwait
scas
add
pop
jne
je
sub
adc
adc
ret
push
and
xor
mov
add
les
retf
add
imul
xchg
xchg
shr
or
and
mov
iret
rcr
jmp
mov
aaa
rcr
sub
outs
add
cmp
(bad)
fidiv
nop
push
and
mov
push
and
sahf
push
xlat
and
xor
xchg
jl
std
test
xchg
cdq
outs
adc
inc
inc
dec
mov
cmp
addr16
pop
je
inc
cmp
sbb
dec
mov
arpl
push
sbb
(bad)
xor
or
mov
adc
fdivr
ds
jl
mov
xchg
sub
xor
imul
aaa
fwait
mov
loop
icebp
in
js
(bad)
fcomi
pop
or
push
add
lods
or
cmp
hlt
or
lods
pop
dec
jp
and
xchg
dec
js
jns
dec
jnp
push
push
stos
test
bound
fcom
mov
lea
or
out
ret
imul
jbe
mov
xchg
mov
jne
mov
cli
fmul
sub
jmp
pop
mov
xor
adc
push
outs
leave
xchg
fwait
mov
into
mov
jnp
adc
mov
xchg
aas
push
dec
sbb
js
add
cmp
xor
scas
inc
mov
jnp
int
xchg
retf
push
add
pop
xchg
scas
jp
mul
mov
dec
dec
cmps
(bad)
adc
leave
sahf
clc
movups
outs
out
sub
test
or
test
adc
aas
xchg
icebp
jb
clc
push
mov
in
xor
jecxz
outs
fnstenv
mov
push
lods
xchg
jnp
jecxz
out
mov
mov
lods
aad
leave
sahf
dec
loope
fbstp
fdiv
clc
sbb
(bad)
jecxz
jmp
fist
cmp
call
mov
adc
ins
js
int
in
xchg
push
je
cmp
lahf
cwde
into
popa
dec
dec
in
sub
xchg
add
enter
jae
cwde
adc
jo
fidivr
xchg
idiv
dec
and
jmp
xchg
xor
nop
mov
(bad)
ds
or
mov
xor
or
fwait
int3
adc
mov
(bad)
cmp
dec
inc
push
push
mov
ret
ss
lds
neg
sbb
sbb
movs
sahf
ins
lds
cmc
cld
fst
test
outs
adc
jae
rcr
and
call
cmp
sbb
mov
mov
xchg
sub
cmp
aam
pop
pop
lods
and
inc
inc
mov
hlt
pushf
inc
sub
add
push
mov
jle
adc
pop
mov
fs
in
push
retf
jecxz
or
pop
jmp
add
cli
cwde
xor
dec
(bad)
mov
outs
or
xchg
outs
fnstenv
jns
mov
cmp
sbb
adc
add
stos
nop
into
out
fisubr
adc
cmp
pop
clc
push
mov
jmp
cmp
mov
push
xlat
jmp
jb
xchg
adc
pusha
jo
inc
test
dec
adc
add
sbb
xor
movs
jl
pushf
iret
leave
(bad)
test
push
mov
adc
adc
inc
pop
jae
mov
mov
cmp
mov
adc
lds
addr16
out
push
mov
call
imul
push
pop
xor
push
or
dec
mov
les
icebp
pop
(bad)
xor
fldenv
pop
mov
and
cli
out
das
out
into
imul
lods
mov
dec
in
mov
xor
xchg
test
loop
pop
test
adc
nop
mov
ficom
lea
jmp
push
lock
aam
sbb
add
je
xor
cli
test
xchg
ss
fwait
jne
xor
pop
sbb
hlt
inc
dec
fbstp
cmp
out
scas
icebp
inc
gs
mov
or
xchg
lahf
cmp
ret
fsubr
data16
or
les
mov
lahf
aam
mov
ror
jmp
or
pop
(bad)
mov
jmp
mov
inc
cmp
movs
out
ins
xchg
mov
adc
or
fld
jmp
fld
xchg
fwait
cmp
fs
push
lock
mov
sub
cmp
aam
cmps
and
stos
test
pop
repnz
cwde
sub
push
int3
mov
std
or
xchg
out
lock
inc
mov
and
enter
aaa
adc
mov
aas
inc
cld
loope
popa
cld
cmp
pop
cs
pusha
into
xchg
data16
ret
fisttp
fwait
and
int3
test
pop
std
dec
popf
and
ror
inc
jle
sbb
mov
das
mov
mov
jo
adc
jl
and
daa
dec
mov
mov
adc
push
xor
pushf
mov
cmp
movs
pop
adc
ss
movs
cld
jmp
pop
les
xor
or
call
bound
clc
sub
ss
pop
push
mov
add
xor
ds
xor
pop
cmp
dec
lds
test
xchg
aad
fs
(bad)
dec
lahf
adc
jmp
pop
mov
xchg
add
(bad)
push
int3
clc
aas
inc
outs
xchg
and
mov
jecxz
nop
sbb
ret
or
dec
dec
or
mov
sbb
lds
jno
push
cwde
fmul
addr16
aas
repnz
adc
js
jae
sti
inc
sbb
mov
movs
jae
test
pop
test
push
adc
mov
(bad)
cmp
pop
xor
dec
push
ja
cmps
xor
les
push
or
loopne
inc
aas
adc
pop
idiv
add
and
adc
adc
mov
and
popa
and
add
jecxz
cwde
rcl
enter
je
jle
ja
pop
test
ret
push
les
imul
call
and
xor
scas
xor
dec
mov
jb
dec
dec
sbb
stos
push
sub
cmps
loopne
fs
repnz
xchg
out
dec
inc
lds
lahf
in
mov
mov
cmp
sar
test
pop
and
push
xchg
add
shr
jmp
dec
pop
aam
(bad)
cld
xchg
cmp
fcom
fwait
shl
cmp
cmp
and
mov
retf
mov
pop
mov
jae
inc
sub
inc
sub
out
inc
and
neg
cmp
mov
cmp
pop
jno
or
les
fnstcw
aad
add
adc
out
imul
xchg
pop
sbb
cdq
mov
mov
inc
mov
inc
cmp
stos
scas
scas
movs
movs
mov
inc
jbe
(bad)
mov
pop
and
sub
mov
push
sbb
in
adc
scas
adc
or
jns
adc
pop
jb
(bad)
and
dec
rcr
push
(bad)
out
aam
jg
cmp
fistp
lods
test
arpl
add
mov
xchg
pusha
setne
jmp
sub
adc
out
fadd
daa
push
mov
dec
mov
mov
cmp
mov
xchg
test
mov
js
shl
ret
mov
pushf
ss
not
dec
sub
mov
adc
(bad)
lea
icebp
scas
push
push
retf
xchg
cmp
xchg
retf
xchg
aas
pop
gs
scas
xchg
add
dec
and
cdq
daa
mov
pop
cmc
push
mov
xchg
in
das
out
outs
xor
pop
lahf
cli
shl
in
mov
je
enter
mov
xchg
test
clc
fnstenv
sub
dec
add
clc
add
jl
cs
sub
xchg
repz
aas
sbb
cmp
inc
pop
mov
cmp
pop
and
inc
mov
enter
outs
mov
mov
stc
jne
sbb
pop
push
(bad)
repnz
shl
jne
out
jae
sub
call
fcomp
pusha
sub
and
clc
sbb
scas
mov
push
dec
cmps
adc
pop
pop
aam
in
iret
mov
cmp
stc
pop
dec
mov
retf
shl
sbb
les
mov
pop
leave
gs
rcl
xor
stc
dec
movs
stc
add
jns
or
stos
(bad)
aas
jns
jle
mov
xchg
and
xchg
xor
js
jne
push
inc
cli
add
aaa
call
jmp
add
pop
adc
pop
xor
cs
leave
shl
ja
je
icebp
in
fwait
ret
test
dec
add
jl
mov
inc
add
scas
inc
stc
(bad)
ja
jns
int3
cli
mov
addr16
in
add
inc
leave
inc
jg
adc
mov
(bad)
jecxz
jmp
mov
xor
test
ret
mov
(bad)
icebp
pop
xchg
mov
outs
js
idiv
push
fs
mov
cmp
mov
dec
or
(bad)
mov
cmps
inc
rol
ret
es
sbb
push
xor
cmps
sbb
jg
pop
pop
ins
jno
ss
jmp
jg
pop
packsswb
clc
inc
aad
sub
mov
cmp
xchg
retf
aaa
fdiv
retf
out
iret
fs
push
push
idiv
push
ins
popa
xor
ret
out
and
std
not
sbb
sub
out
div
in
xor
retf
cli
pop
es
mov
call
inc
mov
lahf
inc
mov
lea
retf
repz
outs
outs
jmp
ret
sar
xchg
aam
or
stos
push
in
jne
cwde
hlt
xchg
ins
div
test
push
pop
(bad)
cmp
jmp
jne
mov
sahf
cmp
push
sbb
pop
push
pop
jno
inc
mul
mov
ret
push
lods
ja
xor
lods
xchg
jp
or
outs
popa
push
sbb
addr16
loop
lds
xchg
inc
stc
sub
mov
test
adc
sbb
add
cld
mov
mov
hlt
xchg
or
pop
sbb
daa
imul
jne
mov
jae
loop
sbb
ins
inc
cmp
adc
or
sti
les
das
in
pop
test
mov
push
ficomp
retf
xchg
mov
ror
int3
enter
add
jb
dec
dec
sub
jmp
cbw
loop
test
or
pop
inc
jl
stos
dec
sbb
push
pop
xchg
mov
pusha
adc
jle
mov
sbb
dec
pop
iret
leave
xor
fadd
ss
cmps
shl
pop
fdiv
or
jmp
test
pop
push
cmp
jecxz
icebp
xchg
ss
pop
or
dec
fs
hlt
enter
outs
or
and
jmp
test
nop
xor
out
dec
and
mov
cmp
jl
xchg
aas
dec
and
cmp
lods
stc
hlt
xchg
lods
xchg
mov
enter
(bad)
cli
ss
pop
stos
and
mov
dec
in
pop
iret
mov
add
hlt
or
mov
adc
pop
add
pop
cmps
mov
(bad)
sbb
pop
xor
imul
icebp
sbb
cmps
aad
imul
mov
std
dec
dec
ds
push
scas
dec
jmp
mov
cdq
leave
cwde
pop
stos
aam
add
fwait
ret
or
pop
pop
popa
adc
lahf
mov
lds
aaa
(bad)
mov
or
jmp
pusha
adc
pop
dec
push
int
les
enter
cwde
jmp
pop
xchg
xlat
aaa
add
out
and
jg
sar
outs
xchg
sbb
aaa
pusha
inc
sbb
adc
mov
(bad)
fsubr
out
addr16
mov
cmc
aam
fst
xchg
lock
and
hlt
arpl
daa
fwait
cmps
xlat
call
stos
ins
aas
retf
adc
pop
test
cmp
xchg
repnz
jp
adc
push
(bad)
dec
xlat
inc
stos
ds
lods
rcl
xchg
not
jne
jns
imul
pop
xor
sub
clc
out
add
cmp
jecxz
daa
and
or
lfs
test
lods
shl
sub
(bad)
mov
(bad)
call
ins
jmp
ds
adc
pop
jns
jno
mov
push
movs
pop
sub
int
scas
sbb
add
jbe
and
and
imul
in
repz
dec
sub
aad
div
cmp
aas
sbb
jmp
dec
mov
pop
arpl
mov
jmp
addr16
ins
mov
(bad)
(bad)
push
clc
(bad)
popf
repnz
addr16
dec
fld
nop
adc
xchg
sub
push
rol
mov
mov
js
cmp
sub
out
test
lods
je
sahf
push
mov
cs
cwde
out
stos
add
and
push
or
push
fcom
ror
mov
jne
jecxz
mov
or
pop
jle
imul
sub
imul
push
das
and
or
lds
test
dec
movs
scas
call
retf
or
cmp
mov
ss
mul
pusha
(bad)
ficom
lods
xor
fwait
sahf
mov
iret
(bad)
cmc
mov
cmc
jecxz
add
popf
dec
and
dec
jbe
mov
jl
push
push
pop
pop
stos
jp
add
or
xlat
ret
leave
mov
push
pop
cmp
xchg
cmps
add
adc
pop
sbb
int
stos
sub
vcmpsd
add
push
push
push
cmc
mul
addr16
std
repz
repnz
sub
fdivr
int3
or
jmp
std
mov
or
jae
fsubp
ret
or
pusha
xchg
push
pop
out
sbb
sub
popa
cmp
xchg
xor
out
rcr
add
mov
cli
out
sbb
or
cmps
das
div
push
outs
pop
into
mov
fwait
mov
pop
rol
popf
gs
adc
(bad)
jp
jge
and
or
dec
(bad)
jmp
or
mov
fst
pop
std
push
dec
push
or
push
arpl
cwde
fld
cmp
outs
dec
js
mov
icebp
jae
push
imul
loop
enter
xchg
call
dec
pop
push
das
lods
loope
dec
ins
fmul
mov
adc
pop
push
call
sbb
dec
pop
in
jnp
add
jo
pop
mov
sbb
imul
shl
push
ja
(bad)
(bad)
aad
popf
mov
int
xchg
fild
scas
inc
sub
cmc
add
mov
call
mov
pop
aad
sub
sub
cs
nop
mov
dec
sbb
in
ret
add
repnz
pop
adc
jno
sub
mov
sbb
pop
mov
ror
mov
sub
shl
add
loopne
mov
jmp
popa
inc
push
mov
adc
idiv
ficomp
inc
js
jmp
movs
fbld
repz
sahf
das
or
mov
test
xchg
nop
and
cmp
jmp
adc
mov
pop
and
jg
inc
add
jle
jb
fwait
(bad)
mov
cmp
pop
mov
popf
sub
(bad)
add
jmp
fcmovu
pop
xchg
xor
movs
xchg
ds
and
pop
lods
add
fmul
stc
popa
ret
adc
lods
call
mov
mov
js
or
pop
retf
not
jb
lahf
retf
jo
add
ret
pop
sbb
(bad)
into
mov
dec
push
and
or
scas
mov
push
cmp
retf
xchg
xor
and
fst
or
popf
sbb
movs
add
ficomp
cmp
scas
out
das
aad
cmovbe
ins
data16
push
push
(bad)
mov
mov
add
sbb
sub
aam
sbb
fdiv
rcr
pop
movs
mov
cmps
push
(bad)
push
jb
xchg
inc
push
jg
aad
ror
fbstp
push
ror
mov
fadd
test
push
(bad)
pop
cmp
mov
test
test
jne
cmp
or
add
add
push
jg
dec
popa
in
in
fcomp
repz
sbb
cmp
popa
call
aas
inc
imul
dec
inc
mov
mov
stos
jno
shl
ins
jmp
loopne
cmp
xchg
cwde
js
out
push
and
lods
dec
stos
(bad)
in
dec
loope
dec
lea
pop
sbb
mov
mov
push
push
xchg
mov
jle
outs
dec
dec
int3
stos
aaa
popa
(bad)
push
mov
xor
push
ds
cld
xlat
sub
adc
push
add
jbe
or
xor
stc
dec
movs
dec
retf
(bad)
mov
mov
mov
adc
xor
add
scas
cs
ins
push
jle
mov
push
jno
sbb
sbb
aaa
call
loopne
pop
pushf
rcl
cmps
ins
leave
pop
or
pop
mov
push
sbb
xchg
sahf
sbb
mov
cmp
pusha
cld
loope
xchg
sub
inc
sub
mov
pusha
cwde
bound
push
fidiv
sub
(bad)
imul
mov
xchg
push
pusha
stos
jge
mov
jbe
int
mov
xchg
xchg
(bad)
and
mov
aad
out
fisttp
fst
shl
inc
inc
lods
sbb
inc
cmp
leave
pop
pop
test
push
pop
repnz
pop
sub
test
(bad)
push
ins
sub
mov
jmp
and
sti
sub
pop
mov
aaa
mov
mov
cmp
jb
and
enter
jmp
je
ret
cmp
fmul
pop
sahf
mov
mov
leave
mov
(bad)
xchg
fisttp
jg
xor
jp
je
imul
lods
(bad)
je
data16
outs
ja
stc
(bad)
lods
xor
inc
ins
mov
mov
js
jge
enter
scas
push
jp
dec
int3
pop
xchg
icebp
imul
sbb
sub
cmc
not
in
cmp
retf
popf
sub
mov
inc
enter
xchg
xchg
lea
add
cmp
fs
jb
mov
push
inc
inc
(bad)
push
arpl
push
imul
add
ret
jbe
rol
(bad)
loop
popa
outs
fcomp
stc
fstp
sub
clc
adc
mov
sbb
pop
xchg
js
(bad)
pop
lahf
daa
sbb
push
push
dec
inc
into
test
mov
mov
retf
push
xor
int3
add
lods
inc
jbe
jmp
jo
sahf
mov
pop
mov
(bad)
jb
les
jmp
jne
(bad)
stos
or
rcl
mov
dec
sbb
jl
push
(bad)
int
mul
xor
add
cmp
and
inc
fimul
inc
shr
jo
repnz
inc
mov
(bad)
stos
cmp
and
aaa
call
pop
cwde
sub
aad
in
inc
mov
cmp
aam
mov
jp
ficomp
lods
sub
sbb
sub
clc
push
(bad)
shl
xchg
stos
loop
mov
pop
dec
pop
ror
imul
cdq
out
jo
shr
dec
repz
je
xchg
xchg
test
fidivr
(bad)
in
mov
(bad)
aaa
adc
scas
jmp
inc
push
or
aam
jmp
and
and
popa
neg
or
mov
inc
sbb
lods
push
std
mov
or
or
movs
xchg
icebp
clc
jge
lock
sti
xchg
mov
pop
pop
(bad)
pop
add
push
pop
jg
dec
mov
adc
lods
push
cld
scas
push
sub
jbe
xor
in
cmps
mov
mov
retf
mov
mov
mov
cmc
jo
mov
or
out
int3
mov
ins
test
pushf
movs
push
test
pop
fadd
mov
ret
mov
es
pop
push
mov
es
sbb
add
ja
(bad)
inc
popa
inc
sbb
dec
and
push
sahf
pop
ins
jge
push
jns
(bad)
adc
(bad)
fwait
scas
int
adc
das
cmp
mov
sti
push
mov
or
sub
dec
pop
xchg
pop
movs
and
add
das
icebp
jp
cmps
adc
dec
dec
or
into
mov
push
in
fisttp
je
and
gs
imul
jp
mov
scas
jg
push
adc
pop
jl
pop
jecxz
lods
lahf
add
imul
inc
int
sub
jne
cmp
cli
iret
retf
sub
push
sbb
imul
sub
stc
dec
test
(bad)
fbld
adc
iret
adc
xlat
(bad)
rcl
ds
mov
fcmovb
cmc
add
int
cmp
iret
or
push
cmp
hlt
scas
add
in
stos
and
out
stos
add
inc
aad
not
mov
cmp
sbb
cmp
xor
sbb
fmul
push
nop
or
test
fsubr
mov
inc
fldenv
icebp
sbb
cmc
idiv
stos
movs
dec
cld
int
aas
dec
xor
out
mov
mov
mov
fsubr
popa
mov
xchg
sbb
add
adc
sub
outs
retf
sahf
sbb
xchg
inc
stos
mov
inc
cmps
ins
rol
in
loop
sti
push
push
mov
xchg
mov
push
dec
rol
pop
adc
pop
iret
jmp
daa
mov
fdiv
loopne
pop
mov
test
dec
dec
int
sub
push
aaa
cdq
cmp
mov
jns
xchg
int
pop
adc
mov
xchg
rcl
nop
pop
fbstp
xor
(bad)
js
jmp
push
outs
pop
cdq
stos
or
mov
rol
pop
xchg
xchg
mov
jg
pop
jno
inc
xchg
stc
or
or
test
inc
leave
mov
mov
mov
test
sbb
xchg
pop
(bad)
jae
loopne
mov
jmp
add
push
add
in
pusha
mov
add
mov
sbb
or
fldenv
ret
imul
movs
mov
(bad)
gs
pop
mov
and
test
sbb
scas
ds
ficomp
xor
dec
and
pop
dec
imul
shr
mov
dec
fwait
pop
arpl
push
call
call
mov
and
retf
sbb
test
adc
loope
jmp
(bad)
xor
loopne
adc
mov
ins
fadd
rcl
sbb
int3
(bad)
jmp
cmps
or
pop
ror
add
cli
push
and
xchg
mov
mov
pop
cmp
rol
loopne
jle
mov
or
aas
out
mov
fwait
mov
test
fwait
xor
test
sbb
mov
mov
pop
sti
in
sbb
dec
pop
aaa
sub
shl
inc
popa
dec
mov
pushf
bound
push
loop
scas
add
cmp
pop
xor
sub
imul
dec
push
pop
xchg
lods
call
(bad)
(bad)
lea
cmp
movs
add
test
xchg
mov
mov
ret
cmp
lahf
cdq
ficomp
or
inc
in
add
inc
or
stos
int3
inc
fidiv
and
mov
outs
(bad)
test
and
mov
cs
retf
add
ss
nop
shl
cmp
(bad)
push
mov
xor
test
mov
test
or
pushf
xor
jb
pop
add
sahf
call
wrmsr
mov
les
add
jnp
push
xor
mov
mov
cmp
cdq
scas
(bad)
adc
lds
stos
and
stos
fistp
pop
fnstenv
add
push
daa
retf
sti
test
push
inc
aaa
outs
and
sub
xor
dec
mov
xchg
mov
inc
clc
daa
mov
and
sbb
and
mov
or
out
popf
test
push
mov
pop
(bad)
(bad)
cli
xor
clc
jb
sbb
sbb
jg
add
in
jge
int3
cmp
fidiv
push
push
je
scas
clc
pop
js
test
pop
jbe
mov
mov
int3
ffree
out
pop
cmps
into
stos
movs
mov
xor
mov
xchg
mov
pop
jmp
aad
rol
cld
std
sub
fwait
cmp
jp
leave
loope
pop
inc
mov
and
dec
daa
xchg
sub
xchg
sub
pause
sbb
repnz
xor
jno
lds
jb
pushf
popa
adc
retf
cmp
or
(bad)
cs
outs
in
sbb
mov
sbb
loope
or
sbb
add
out
inc
dec
push
(bad)
es
fstp
div
cli
iret
mov
movs
xchg
es
aaa
adc
xor
and
or
outs
out
stos
cmp
call
in
jmp
add
(bad)
shl
sub
lock
jne
and
lods
sub
jmp
neg
add
mov
ss
mov
(bad)
pop
and
mov
int
cwde
movs
push
inc
jae
in
cld
pusha
push
test
adc
jmp
push
imul
imul
add
in
cmp
mov
push
nop
jo
cs
js
jmp
jle
mov
xor
sti
xor
xor
repz
cmp
sbb
mov
shl
arpl
jo
out
add
aas
call
(bad)
jp
sbb
xor
outs
stos
sub
call
retf
(bad)
xor
jp
sbb
test
scas
sahf
pop
std
cmc
clc
fnsave
xchg
sbb
ins
sahf
and
dec
int
into
loope
sub
mov
or
push
sub
call
sub
mov
dec
mov
inc
stos
dec
inc
cmp
lods
(bad)
xor
xchg
push
hlt
sbb
lahf
popf
rcl
jnp
and
sub
cmp
and
cmp
call
xor
xchg
iret
mov
mov
rcr
cmp
add
xor
shl
inc
fcom
call
sub
fimul
adc
inc
sub
sbb
push
sbb
pop
cmp
or
cmc
mov
sbb
pop
aam
and
mov
add
jge
inc
lods
jmp
jnp
ds
jnp
xchg
retf
fisub
popf
repz
dec
push
test
fs
(bad)
jnp
gs
add
adc
jo
inc
push
sbb
mov
call
std
dec
and
adc
mov
push
mov
(bad)
xor
movs
rcl
test
aad
inc
push
pop
ds
inc
add
cmp
mov
pop
push
push
lds
dec
loope
retf
mov
mov
popa
dec
xchg
lock
ret
cdq
rol
xor
cmps
and
sub
and
lds
jo
cmc
mov
mov
sub
inc
add
jmp
mov
imul
mov
push
add
dec
pop
ins
in
and
cmp
sbb
pop
js
push
dec
cmps
adc
sti
mov
ins
sbb
aas
not
mov
sti
bound
jp
xchg
mov
jnp
jns
ror
fisttp
sub
jmp
push
lods
adc
das
(bad)
in
pop
movs
pop
leave
mov
lahf
loopne
dec
jmp
inc
loop
repnz
add
out
popf
pop
in
jno
sbb
mov
je
sub
mov
and
cmp
sbb
rol
adc
xlat
icebp
sbb
popf
aad
inc
jns
push
in
aam
outs
mov
dec
mov
push
shr
push
mov
push
cmc
lods
aad
cli
ja
outs
je
mov
call
pop
mov
mov
lds
loopne
cmp
pop
mov
fmul
inc
xchg
dec
fld
int3
iret
stos
and
sub
xor
repnz
mov
sbb
jne
push
cli
ja
add
dec
outs
std
icebp
sahf
repz
test
jmp
das
push
pop
jb
cld
jmp
out
in
xchg
xchg
jno
cmp
das
out
clc
sub
dec
ja
mov
push
mov
add
inc
shr
lods
addr16
icebp
mov
(bad)
mov
mov
aad
cmps
lods
or
imul
ret
adc
dec
mov
mov
fwait
adc
cmp
sub
daa
hlt
ror
out
ja
xchg
shl
es
sbb
xlat
in
pop
add
or
mov
sub
and
mov
repz
test
repz
repnz
(bad)
xor
sub
or
in
(bad)
cld
mov
in
addr16
sahf
inc
or
mov
pop
in
jmp
push
push
fidiv
nop
imul
xlat
les
xchg
scas
pop
cmp
jo
sub
pop
test
jbe
jnp
(bad)
in
mov
icebp
jno
mov
push
inc
mov
addr16
jnp
popf
into
leave
fistp
jb
push
out
call
cwde
xor
and
add
fwait
imul
and
mov
out
adc
dec
or
stc
imul
mov
xor
xchg
aad
cmps
adc
or
jp
inc
lea
mov
mov
pop
loope
add
adc
lea
pop
aaa
xchg
and
cli
adc
or
aaa
sbb
mov
sbb
push
(bad)
outs
jl
jle
rep
dec
mov
fsubrp
add
data16
in
jne
mov
cwde
mov
(bad)
xchg
rcl
nop
push
add
mov
loop
fbstp
xchg
loop
cmp
xor
inc
push
test
ja
mov
dec
jno
in
mov
jl
in
add
cmc
cli
pusha
lds
in
and
cs
(bad)
push
int3
(bad)
icebp
inc
icebp
loope
mov
mov
jae
out
mov
inc
les
or
inc
ins
sbb
(bad)
shr
adc
pusha
and
sti
les
test
mov
pop
cli
cli
jbe
pop
clc
jge
push
inc
dec
jp
add
not
xchg
ret
les
or
ds
mov
nop
and
add
out
(bad)
aas
mov
aad
jle
dec
and
repnz
push
(bad)
jne
sbb
or
mov
sub
retf
clc
dec
xchg
test
cwde
and
xacquire
jb
movs
mov
jl
xchg
adc
and
inc
aad
lods
push
pop
mov
movs
ins
lea
xor
call
mov
and
stos
cwde
pop
and
test
jp
jl
out
xchg
inc
inc
xchg
push
or
neg
push
mov
in
mov
das
mov
sbb
fst
jp
sbb
cs
imul
jne
adc
inc
mov
div
inc
mov
movs
xchg
dec
popf
add
xor
jg
push
test
mov
sub
lods
pop
cli
std
call
add
das
stos
(bad)
or
mov
int
pop
es
fidiv
not
outs
cmp
outs
mov
fcom
push
mov
mov
mov
cdq
das
jb
dec
inc
adc
adc
ins
repz
idiv
dec
rcr
lds
cmp
call
popf
inc
jle
int3
fild
dec
or
call
xlat
(bad)
pop
into
rol
call
repnz
pop
mov
lods
shl
repz
and
cwde
inc
adc
cmc
jmp
or
int3
xchg
mov
jle
adc
and
and
add
test
xor
das
mov
test
add
imul
xchg
in
clc
in
imul
jne
push
jl
std
cmps
into
pop
or
jmp
cmp
add
imul
call
push
cs
cmp
fcomp
cmp
xchg
sub
cmp
mov
repz
int
(bad)
icebp
pusha
pusha
jb
xor
or
xchg
dec
pop
mov
inc
aam
out
or
mov
lods
add
pop
fcom
xor
mov
scas
rol
ss
enter
inc
das
or
hlt
dec
pushf
stc
xchg
mov
or
dec
repnz
std
xchg
add
xchg
xchg
jge
mov
jbe
mov
lods
loope
ret
pusha
sar
cmp
cmp
das
retf
addr16
retf
push
lock
nop
fisttp
cli
xchg
repz
adc
pop
mov
mov
scas
jnp
xchg
dec
fcom
pop
std
fadd
fidiv
jo
mov
fcomp
shl
loope
mov
bound
xor
data16
xlat
nop
mov
push
int3
add
mov
in
jge
xor
in
cmp
sbb
addr16
jbe
into
daa
sahf
pop
ficom
dec
nop
pop
and
jmp
sahf
das
sti
dec
aam
popf
add
jmp
ror
or
ins
(bad)
test
push
je
push
icebp
push
das
inc
xor
retf
dec
fwait
or
mov
add
or
(bad)
mov
fdivr
jb
mov
aad
mov
retf
sbb
pop
jecxz
pop
sbb
xchg
mov
mov
or
arpl
sbb
mov
ret
in
dec
mov
xchg
push
fnstcw
adc
pushf
push
mov
cmp
outs
test
(bad)
inc
add
jb
outs
push
cdq
aaa
(bad)
gs
out
push
adc
lock
cmp
in
retf
jmp
stc
cmps
adc
pop
dec
ffree
push
dec
and
adc
or
dec
xor
inc
mov
call
cmp
rol
push
leave
xchg
mov
lods
dec
retf
inc
and
repz
mov
out
add
sub
mov
mov
je
hlt
out
adc
mov
mov
dec
adc
and
pop
push
hlt
sub
xor
xchg
add
push
inc
and
inc
stc
dec
dec
inc
(bad)
jg
(bad)
jmp
xchg
aam
jbe
jecxz
mov
aad
xchg
push
fadd
cmp
xchg
jge
and
aad
add
pop
cmps
in
cmps
movs
xor
xor
rcl
cmp
xlat
mov
ret
arpl
add
push
push
mov
fwait
mov
mov
pushf
icebp
xchg
mov
xor
jb
add
mov
jne
push
inc
xor
fld
enter
cmp
xchg
addr16
fstp
xchg
nop
or
mov
dec
dec
mov
push
xlat
push
or
lods
iret
push
pop
dec
(bad)
sahf
sub
jns
in
xchg
pop
mov
push
sub
mov
inc
mov
out
cwde
sub
or
scas
ds
mov
xchg
test
into
mov
hlt
xor
fcmovnu
add
fs
dec
arpl
ficomp
sti
cwde
mov
sbb
scas
adc
and
adc
mov
or
out
rcr
add
push
cmp
or
pop
sar
inc
mov
jbe
mov
inc
aas
pop
push
dec
mov
loopne
int
sbb
add
xchg
movs
cld
lock
data16
dec
bound
jo
ss
sbb
mov
add
and
inc
out
xchg
pop
pop
sahf
xor
jbe
out
pop
in
in
and
sbb
cld
lock
aad
(bad)
shr
xor
je
jmp
dec
aad
in
xchg
mov
test
outs
or
jge
lock
loope
xor
loope
ret
cmp
cdq
shl
rol
mov
ins
add
xor
or
dec
cs
mov
mov
retf
nop
mov
sbb
mov
mov
out
inc
jbe
arpl
jb
jae
inc
mov
lsl
adc
mov
scas
call
adc
jge
sbb
repz
pop
mov
outs
ret
dec
mov
xchg
push
mov
out
jo
xchg
retf
dec
shr
mov
adc
cli
cmp
sbb
jp
jbe
call
or
mov
lods
test
ss
and
mov
add
nop
outs
inc
sub
jg
outs
push
aam
daa
jno
dec
es
xlat
and
leave
add
mov
sbb
xchg
call
js
fs
test
div
sub
js
jge
and
pop
scas
(bad)
mov
mov
add
stos
mov
int3
cmps
loop
leave
cmp
lahf
mov
stos
xor
and
fbstp
loopne
stos
jnp
xchg
ins
pop
fwait
pop
scas
fiadd
lods
push
cmp
jns
push
inc
cwde
pop
sbb
and
jnp
mov
xchg
fcomp
sub
xor
sbb
cmps
push
int3
fild
in
xchg
pop
icebp
sar
pushf
inc
je
cmp
cmp
mov
push
lds
aaa
test
scas
and
jnp
inc
or
push
test
mov
dec
jns
aam
mov
shl
and
mov
scas
iret
lock
add
out
lock
das
inc
xor
ins
cmc
divps
pop
mov
jp
sti
fwait
adc
push
push
and
and
add
sub
mov
dec
and
jmp
pop
inc
cmp
mov
mov
cmp
hlt
(bad)
jb
xchg
out
nop
ja
mov
aaa
xchg
std
jg
(bad)
imul
js
add
xor
xor
nop
jecxz
sub
outs
and
sub
enter
xchg
in
outs
int
icebp
jmp
je
fs
pop
or
addr16
mov
sbb
ror
test
inc
dec
retf
std
loopne
popf
push
pop
ror
out
dec
sar
call
xor
mov
fnstsw
xchg
jle
cmp
jae
xor
aas
test
inc
gs
cmp
and
sbb
sub
(bad)
sti
sbb
mov
pop
pop
stos
out
fcmovnu
xor
pop
xchg
stos
pop
call
(bad)
mov
fs
popf
cli
stc
mov
xchg
int
pop
aam
(bad)
or
or
repz
test
hlt
imul
add
adc
jns
sbb
xor
fadd
stc
nop
sbb
and
mov
(bad)
jmp
mov
mul
leave
in
mov
cld
sar
out
xchg
ds
mov
jne
xor
daa
mov
mov
sbb
inc
sbb
adc
and
cmc
enter
mov
(bad)
in
cmp
stos
push
aad
icebp
sub
or
into
pop
adc
xchg
push
mov
(bad)
fmul
lahf
add
test
pop
rol
aas
push
cmc
aad
out
push
icebp
(bad)
adc
jmp
pop
push
xchg
sahf
cmps
std
in
movs
aad
out
icebp
push
mov
mov
add
push
out
test
adc
pop
stc
les
cdq
les
outs
das
xlat
fcom
jmp
shr
mov
jp
or
iret
stos
jge
in
xor
adc
aas
mov
mov
mov
fst
xor
ins
jecxz
mov
es
leave
test
popa
out
and
outs
imul
pop
mov
ficom
jnp
sbb
stos
ins
(bad)
push
mov
retf
jnp
push
lahf
dec
fsub
push
shl
push
mov
lea
call
clc
cmp
movs
ror
mov
or
push
jb
xchg
or
sub
add
movs
pop
bound
in
cmp
or
push
push
push
gs
hlt
mov
pop
and
repz
push
xlat
push
mov
(bad)
pop
push
xor
lahf
push
test
imul
add
add
out
repnz
mov
loopne
pop
mov
aad
mov
lods
push
sub
fiadd
ret
leave
jp
jno
xchg
nop
xor
lds
pop
xor
adc
arpl
(bad)
xchg
mov
cmp
(bad)
icebp
clc
mov
xchg
movs
jbe
movs
test
dec
cmc
pop
(bad)
das
sbb
scas
pushf
lods
or
and
mov
sahf
rcl
and
jae
lock
jl
and
push
(bad)
in
fs
mov
loopne
jnp
lods
sub
or
movs
or
das
cs
rcl
fdivr
pushf
stos
adc
(bad)
sub
mov
or
ficom
imul
add
dec
or
loope
popf
pushf
inc
js
popa
sbb
arpl
cmp
or
pusha
mov
lods
repnz
aaa
int3
movs
cmp
pushf
mov
jge
push
loope
push
pop
cmp
jns
leave
or
mov
add
mov
inc
dec
dec
je
mov
fisubr
call
mov
add
and
out
stos
dec
loopne
sub
sub
shl
adc
mov
mov
adc
xchg
into
push
sbb
inc
push
mov
ja
shl
mov
outs
mov
xor
xlat
aam
in
icebp
mov
stc
jnp
call
stc
cmp
lock
call
lea
and
fdivr
call
jb
push
test
data16
add
out
push
jl
test
leave
repnz
pop
xor
and
push
shl
fisttp
jg
sti
cmp
cld
sahf
mov
stos
xchg
into
ret
mov
pusha
xchg
outs
pop
sub
inc
pop
rcr
addr16
imul
mov
jae
stc
ins
jb
dec
cmp
loopne
nop
into
loope
fistp
dec
(bad)
cmp
ficomp
pusha
push
mov
mov
movs
hlt
mov
push
js
and
daa
or
leave
add
or
je
call
xor
in
(bad)
xor
sub
and
mov
cdq
push
test
aad
lea
fild
cmp
push
adc
cmps
leave
dec
mov
test
cmp
retf
pusha
fldcw
in
add
push
push
lock
jle
pop
push
nop
xchg
enter
test
test
scas
xchg
cmp
in
jge
mov
jp
inc
inc
mov
ins
mov
jae
cld
add
sub
enter
push
adc
mov
cmp
pop
pop
cmp
fwait
stos
pushf
loopne
pop
xor
repz
push
pop
and
aas
fild
gs
test
mov
sub
pop
xor
dec
ficomp
fiadd
mov
imul
and
xor
shl
inc
xor
scas
dec
nop
push
lds
leave
fwait
xchg
sub
fs
inc
xor
into
dec
xchg
push
mov
push
dec
xchg
xor
jbe
xor
jb
cmp
imul
cmp
js
sub
mov
js
mov
iret
mov
and
add
test
sbb
ins
push
mov
mov
pop
nop
(bad)
xchg
mov
cmp
push
mov
pop
cli
dec
mov
and
imul
repz
in
jmp
aad
mov
push
stos
cmp
add
sbb
cmp
mov
lds
xchg
sub
ret
mov
es
rcl
add
bound
or
push
mul
jmp
pop
inc
adc
dec
pop
or
adc
or
(bad)
bound
fmul
sbb
ficom
sub
push
fucomip
es
into
inc
add
adc
push
mov
mov
jbe
xor
sbb
aam
cmps
mov
or
adc
aaa
fdiv
dec
and
cmp
sbb
imul
cwde
cmp
outs
shr
jno
push
lahf
push
dec
mov
or
jl
jl
xor
dec
xchg
jo
jnp
aad
jmp
mov
mov
sar
pop
or
out
sbb
adc
sub
mov
mov
and
cmps
ret
loop
push
or
jns
mov
add
push
clc
fisttp
pusha
add
mov
fisttp
ret
jnp
rcl
out
aam
popf
mov
adc
cmc
jnp
pop
mov
add
aas
mov
call
mov
push
fcmovnb
mov
sub
test
lock
aas
and
fnstenv
rol
das
xchg
mov
xlat
push
add
sbb
sar
lock
dec
pop
push
adc
scas
pop
push
dec
jb
pop
test
outs
leave
mov
fwait
push
std
and
test
(bad)
cmp
sub
shl
jmp
add
xor
and
mov
gs
mov
jmp
mov
jecxz
ds
xchg
mov
xor
xlat
xlat
jbe
outs
scas
inc
les
out
and
and
popf
xchg
xchg
or
shl
mov
pop
ds
rcl
movs
lods
push
xor
or
fs
lods
xor
push
test
xor
out
cmp
clc
in
outs
sub
fild
ins
or
lods
stos
sar
stos
adc
rol
or
stos
and
cwde
or
call
xchg
shl
push
lods
lea
cmp
aaa
pop
test
adc
js
cmp
iret
ins
fs
retf
out
sub
out
cmc
neg
ins
mov
scas
jnp
test
mov
adc
mov
outs
arpl
sub
sub
mov
ds
mov
fisttp
inc
push
mov
daa
arpl
addr16
fs
fidivr
dec
mov
jg
inc
add
shl
mov
adc
inc
leave
add
push
add
ins
push
out
popa
pop
adc
push
sbb
add
xor
mov
fsub
outs
arpl
cmc
pop
cmp
mov
inc
imul
hlt
jle
mov
jnp
pop
push
add
pop
mov
mov
ins
xlat
jo
dec
add
and
push
jl
retf
xor
icebp
cwde
jl
mov
push
frstor
arpl
jmp
cmp
cmp
push
mov
mov
mov
pop
sbb
mov
xchg
xchg
call
sbb
pop
cmps
or
enter
icebp
icebp
shr
ret
loop
aaa
out
add
jle
push
mov
push
into
(bad)
hlt
test
push
in
ins
xchg
fidiv
xor
jnp
(bad)
rcr
or
ins
adc
jl
push
cmp
jecxz
ss
test
xchg
sbb
and
mov
int3
cmps
mov
push
xchg
add
xchg
sbb
mov
hlt
push
add
shl
out
sar
xor
lea
shr
stos
call
dec
(bad)
jne
in
fistp
adc
fwait
push
das
cmp
and
stc
sbb
add
mov
and
xchg
mov
mov
cmp
ret
pusha
fisttp
and
push
gs
cmp
jbe
and
int
pop
jnp
mov
dec
daa
mov
shr
xchg
aam
adc
pop
out
popa
shr
loope
jmp
and
cmp
add
add
xchg
adc
fadd
sbb
popa
(bad)
(bad)
mov
dec
push
movs
push
int3
std
add
fnsave
repnz
jns
adc
enter
push
test
cmp
in
mov
inc
sbb
arpl
cmp
push
adc
mov
stc
sub
or
in
ret
cmps
stos
jno
pop
fisub
xchg
or
or
cmp
push
add
dec
popa
jg
test
int
inc
jns
inc
out
arpl
add
test
retf
psubsw
mov
outs
icebp
xchg
mov
lea
xchg
shl
call
mov
xchg
imul
or
sub
push
cmp
stos
cmps
add
sbb
xchg
pop
cli
add
mov
aaa
loope
stos
fdiv
outs
fsub
push
push
jnp
push
rcr
mov
or
(bad)
push
push
xchg
ds
in
ja
mov
add
sbb
ds
neg
adc
lea
cmp
mov
mov
xor
xchg
pusha
lahf
retf
fcmovnu
jle
jnp
div
ret
in
xchg
xchg
shl
mov
enter
jge
pusha
sbb
or
cs
cwde
jge
sahf
xlat
sahf
std
mov
fidivr
hlt
mov
push
sbb
rcr
lea
pushf
and
arpl
(bad)
je
adc
cmps
scas
pop
and
fdivr
sbb
loop
xlat
inc
pop
pop
or
movs
dec
out
push
cdq
jne
pop
mov
cmp
sbb
ret
or
xchg
dec
enter
adc
stc
(bad)
in
pushf
enter
sbb
(bad)
adc
scas
fldcw
sbb
pop
sub
fiadd
pop
jmp
and
je
jae
inc
imul
repz
adc
cmp
jmp
cmp
jnp
xlat
dec
add
aam
cld
retf
cli
clts
xchg
nop
scas
mov
hlt
int
and
in
xlat
jo
mov
loop
(bad)
call
adc
ds
adc
jo
adc
imul
cmp
pushf
ja
aad
add
add
adc
mov
and
in
push
lds
aad
js
push
and
jp
push
not
pop
pusha
jo
ins
(bad)
and
sub
cmp
movs
bswap
pushf
mov
aad
mov
cld
scas
rol
and
lods
pop
shl
ret
lods
neg
dec
pop
ss
inc
add
jb
xchg
mov
shl
jle
xchg
imul
int3
std
or
adc
pop
pop
fisub
sbb
loop
cmc
stos
lea
mov
fwait
mov
pop
ds
shl
jns
pusha
in
pop
adc
mov
sub
mov
sub
clc
mov
pushf
or
or
test
add
loope
imul
out
jne
xor
mov
outs
mov
shl
mov
bound
xor
mov
addr16
add
jl
jb
cld
or
jns
pushf
pop
lea
adc
cmp
mov
mov
adc
adc
and
mov
outs
loope
ins
sub
add
adc
adc
sub
sub
je
sbb
pop
mov
jmp
push
ret
xchg
adc
fs
pusha
pop
adc
outs
mov
scas
jmp
scas
inc
(bad)
xchg
fistp
push
inc
dec
cwde
popa
out
mov
and
push
(bad)
rcl
shl
push
lahf
jbe
sub
and
(bad)
add
mov
out
push
mov
xor
push
loopne
pop
pop
inc
inc
jmp
cdq
cmp
mov
xor
jecxz
ins
sub
les
les
jbe
call
xlat
lods
js
mov
xchg
into
mov
enter
loopne
cmp
add
nop
push
pushf
(bad)
call
jbe
jo
dec
test
jae
movq
std
add
addr16
adc
cmps
(bad)
adc
cwde
leave
les
or
movs
cmp
cs
jo
fs
cs
sub
xchg
mov
mov
and
xchg
outs
mov
repnz
call
ret
xchg
sub
cmp
or
call
lock
pop
mov
inc
mov
jo
cmp
ins
adc
loopne
in
pop
mov
cmp
or
(bad)
push
inc
mov
mov
mov
adc
xor
and
dec
push
and
push
add
adc
fisub
jecxz
pop
pushf
mov
pusha
js
jg
xchg
mov
clc
shr
(bad)
retf
(bad)
add
test
div
jp
mov
inc
retf
inc
enter
data16
pop
int
sub
lock
and
stos
push
xchg
jecxz
call
aam
test
xchg
in
pop
in
cmp
idiv
ja
add
(bad)
mov
xchg
(bad)
or
jo
movs
and
mov
push
or
sbb
jne
out
(bad)
nop
pop
sub
in
std
and
push
mov
sbb
inc
cmp
jb
cmp
and
hlt
sub
dec
and
and
jbe
jmp
jp
ror
mov
pop
(bad)
push
arpl
mov
jne
pusha
cli
in
aad
adc
aad
les
(bad)
xor
mov
jmp
push
inc
inc
call
lock
out
push
rcr
cmp
add
xchg
retf
test
mov
mov
jge
adc
test
xchg
and
mov
inc
add
aaa
inc
sbb
loop
pop
xchg
dec
sbb
and
leave
and
nop
lahf
dec
cmp
(bad)
and
push
in
sub
dec
(bad)
fadd
mov
dec
lods
pop
(bad)
xor
xor
nop
aas
mov
sub
dec
jno
inc
mov
aam
push
mov
push
mov
push
cmc
dec
sbb
push
lea
loop
fistp
fs
loopne
jge
arpl
cmp
into
xchg
(bad)
das
repz
add
fsubp
cmps
and
add
sub
mov
dec
cmp
nop
ins
pop
cld
pop
xchg
pop
(bad)
movs
popf
lods
xchg
mov
adc
jle
xor
jg
aas
mov
mov
cmp
popa
pop
in
xchg
add
popf
jle
mov
out
ins
fadd
cmp
jle
mov
jns
adc
ss
add
les
mov
shl
lahf
jge
shl
in
xchg
cmp
clc
jb
inc
xchg
xor
and
aas
ds
jnp
and
aam
hlt
je
cdq
lea
neg
xor
mov
mov
mov
fisub
xor
cli
pushf
mov
mov
pushf
xadd
icebp
dec
cmps
lahf
(bad)
dec
lds
and
xor
mov
pop
jne
lds
xor
push
xchg
push
pop
and
arpl
jp
push
xor
push
jnp
je
inc
lea
pop
sbb
push
movs
push
pushf
(bad)
out
pop
xchg
dec
cld
je
mov
and
sahf
push
sub
or
push
add
xchg
enter
arpl
xor
(bad)
xlat
dec
out
arpl
out
pop
sub
jb
div
push
xchg
mov
adc
mov
retf
mov
jns
dec
sar
test
movs
and
push
cs
in
pop
mov
jne
retf
test
mov
in
in
aam
jns
(bad)
retf
ret
adc
xor
fisub
dec
ins
mov
xchg
cmp
inc
sbb
mov
mov
pop
jg
cmp
stc
(bad)
adc
jmp
fidiv
add
dec
mov
mov
movs
mov
cwde
out
(bad)
pop
mov
inc
pop
dec
mov
stos
icebp
rcl
jge
int3
fs
mov
push
(bad)
sub
fstp
and
sub
les
imul
dec
or
ins
outs
inc
and
push
or
inc
daa
mov
ret
jae
add
out
jge
cmp
jle
push
in
inc
mov
call
out
pop
out
out
lods
stos
test
mov
sbb
mov
movs
sbb
pop
rcl
in
cmps
or
cmp
into
mov
and
cdq
and
add
lods
and
mov
jae
jp
aam
xor
aaa
ja
dec
stos
inc
cmps
mov
mov
mov
dec
pop
mov
pop
cs
mov
and
out
cmp
push
cmp
sub
loop
iret
inc
pop
sbb
idiv
call
jle
call
jg
push
xor
xchg
retf
pop
jecxz
jg
adc
sahf
push
xor
xor
jae
lea
jb
or
or
and
adc
add
sbb
push
std
mov
mov
or
frstor
add
shr
xchg
jne
xchg
mov
in
mov
scas
sub
ret
out
mov
jp
dec
or
sbb
xchg
mov
jnp
das
fdivr
in
pop
bound
jle
mov
xchg
jo
jnp
iret
mov
cmp
xor
inc
jmp
add
sub
xchg
sub
in
inc
xchg
jecxz
(bad)
push
xchg
stc
test
fisubr
loope
push
push
jb
add
jp
push
dec
(bad)
stc
cmps
addr16
sbb
mov
and
lods
shl
aad
xchg
retf
inc
mov
xchg
(bad)
out
pop
mov
pop
scas
addr16
cmp
cmps
mov
sbb
xor
hlt
inc
pop
dec
out
outs
stos
call
fsubr
xchg
xor
pusha
fadd
out
or
jle
lahf
pop
cld
dec
sbb
jg
mov
mov
retf
xchg
pusha
(bad)
push
out
retf
leave
cs
(bad)
xor
pop
dec
mov
jbe
shl
cmps
lea
clc
add
cwde
add
inc
xchg
jecxz
imul
pop
or
imul
cmp
inc
add
cs
dec
mov
stc
popa
pop
pop
pop
xchg
imul
xchg
jecxz
dec
ins
mov
sbb
push
xchg
in
sahf
shl
add
in
jb
test
loope
lds
cs
icebp
jp
inc
lods
sbb
sub
fiadd
cmp
adc
jns
std
jae
ror
leave
mov
out
in
inc
ror
adc
aas
(bad)
pop
mov
and
jecxz
sub
in
data16
lock
xchg
jp
inc
cmp
jns
add
or
sub
mov
mov
js
and
add
push
or
jg
push
sub
imul
push
cmp
dec
xchg
push
fmulp
inc
test
rcl
push
sahf
fadd
mov
jae
aaa
fstp
mov
xor
mov
aaa
movs
sub
jmp
jnp
test
scas
scas
pop
psrad
popf
xchg
addr16
into
pop
nop
lock
adc
mov
jno
outs
cs
in
push
jecxz
lds
jo
mov
call
lea
stos
pop
scas
out
pushf
ss
dec
adc
push
in
hlt
ins
pop
les
jae
push
mov
jnp
arpl
retf
sub
sbb
mov
inc
lock
aad
jecxz
sbb
jl
(bad)
fs
retf
dec
mov
inc
pop
sbb
retf
aaa
scas
xchg
cmps
cli
ror
pop
repz
(bad)
adc
jmp
aam
shl
fstp
jmp
(bad)
mov
in
fs
ins
push
dec
jno
cmp
rcr
or
dec
mov
pop
outs
jmp
neg
(bad)
call
stos
pop
mov
adc
in
bound
add
imul
cdq
rcl
sbb
sbb
adc
lods
ficom
mov
dec
or
lock
pop
jns
inc
rol
loopne
mov
mov
pop
and
inc
aas
jg
or
(bad)
push
retf
add
add
scas
xchg
bound
xchg
mov
cld
(bad)
scas
call
and
adc
add
aam
adc
dec
adc
jo
push
xchg
js
lock
out
not
xchg
mov
ja
mov
ins
into
inc
dec
movs
xchg
pop
adc
stc
xlat
(bad)
add
push
dec
push
hlt
mov
jns
les
sbb
push
daa
push
push
test
ins
retf
fadd
push
pusha
xlat
jecxz
mov
aam
mov
mov
jo
xor
cmps
dec
stc
mov
adc
mov
xchg
arpl
iret
add
fst
test
push
jns
dec
scas
and
hlt
inc
adc
add
jl
xor
test
int
sbb
jnp
test
add
mov
scas
sub
add
jbe
lahf
je
mov
out
lock
fcomp
dec
or
out
xchg
cld
mov
dec
cmp
push
in
dec
add
push
pop
xchg
sbb
popa
mov
xor
fsubr
ficomp
sbb
in
shl
out
cdq
push
adc
mov
je
loope
jb
jae
inc
or
fistp
dec
jae
push
jecxz
stos
pop
and
cmps
test
cmp
pop
adc
jmp
cmp
cmc
or
adc
cli
push
jge
leave
pop
sub
mov
es
dec
pop
movs
lea
dec
shr
add
ins
cmp
jno
es
inc
and
add
and
push
add
into
cmps
movs
mov
xor
js
fld
int3
mov
cld
in
scas
jl
mov
sbb
xchg
jbe
sub
fadd
and
and
ret
or
iret
jae
(bad)
hlt
test
mov
mov
or
aas
dec
scas
int3
test
jb
dec
dec
sub
ins
xchg
ret
xchg
and
dec
dec
mov
sub
fdivr
gs
rcl
int
xor
cmps
pop
aad
xchg
popf
push
jmp
and
jnp
retf
out
mov
les
mov
movs
adc
push
cdq
sub
scas
(bad)
or
jg
aam
retf
sbb
xchg
sbb
das
mov
mov
leave
test
rol
jecxz
lods
or
or
and
jne
inc
scas
fs
gs
xor
jo
jno
sbb
mov
xor
push
mov
mov
dec
jno
inc
retf
fbld
adc
and
jmp
mov
pop
xchg
push
push
int3
or
in
aas
das
out
xchg
fld
cdq
jb
mov
xor
sbb
xor
mov
inc
sahf
popf
xchg
adc
jno
mov
or
test
(bad)
das
jge
dec
xor
int3
xchg
xor
hlt
push
sbb
mov
xchg
sar
mov
pop
outs
pop
rcl
jbe
fnstenv
xchg
push
hlt
pop
push
ret
jo
or
pop
adc
jle
add
sub
icebp
rcl
jl
mov
int
mov
pop
mov
inc
cld
sub
lea
jle
add
adc
(bad)
jl
dec
test
clc
retf
ins
and
jmp
icebp
add
mov
and
push
add
pop
stos
xlat
mov
xor
popf
dec
add
push
inc
dec
dec
cs
cmps
or
mov
ss
frstor
or
das
xchg
xchg
rol
hlt
jmp
leave
mov
jge
push
rcl
iret
(bad)
or
cmp
mov
das
sbb
sbb
ret
sbb
jnp
cs
sbb
retf
xchg
scas
mov
test
fs
pop
mov
in
adc
call
inc
cmp
xor
xchg
adc
ins
bound
es
cmp
and
adc
leave
scas
push
movs
pop
das
int
push
sbb
int
bound
fcom
and
sbb
cmps
movs
and
push
xchg
test
scas
cmp
popa
in
xchg
in
add
mov
push
neg
push
popa
sbb
add
iret
dec
jle
out
xchg
jmp
ins
std
push
pop
pop
xchg
sub
push
jns
add
scas
lods
shl
les
lods
popa
out
or
add
mov
popa
in
ret
or
stos
ror
lods
aam
call
hlt
jo
(bad)
xor
jmp
push
add
inc
inc
mov
out
pop
repz
and
ss
dec
adc
dec
bound
ret
movs
(bad)
sbb
or
ds
aad
xor
xchg
add
jmp
daa
neg
jno
sbb
and
cmp
pop
xchg
lea
iret
or
inc
enter
iret
add
adc
or
xor
fmul
and
fnstcw
jge
xchg
inc
hlt
test
clc
pop
jae
test
cmp
jge
(bad)
mov
cld
mov
mov
mov
popf
call
shr
jmp
mov
xchg
jbe
mov
mov
xchg
sahf
sub
shl
(bad)
push
and
mov
inc
mov
mov
add
push
lods
imul
call
pop
or
sub
cmp
(bad)
lock
int
jp
fld
mov
cmp
sub
inc
cmp
pop
pop
addr16
xchg
push
bound
(bad)
pop
inc
call
cli
aam
jge
cmc
mov
push
lods
fisubr
cld
and
int3
lods
mov
pop
dec
push
or
inc
into
push
mov
pop
outs
cmp
imul
(bad)
sbb
inc
jle
mov
hlt
pop
cwde
or
(bad)
push
cli
shl
adc
pop
mov
cld
pusha
scas
adc
imul
jbe
outs
(bad)
mov
pop
and
or
leave
inc
and
mov
outs
xchg
rol
cmp
std
int3
adc
ret
pop
push
retf
mov
jecxz
scas
adc
adc
nop
es
jo
add
cli
and
jl
and
cli
jp
pop
push
ins
icebp
adc
xor
lds
push
iret
sub
dec
mov
pop
fstp
jae
xor
fld
(bad)
movs
and
pusha
pop
jae
rol
dec
pop
inc
pop
sti
in
xor
pop
and
pusha
(bad)
xchg
retf
hlt
xor
in
repz
add
inc
(bad)
ss
mov
push
xchg
push
xor
in
sbb
bound
sbb
fpatan
xchg
xor
xchg
test
pop
rcr
and
arpl
retf
pusha
xchg
sub
shr
add
sub
(bad)
imul
mov
mov
ins
sub
xchg
stos
adc
(bad)
in
inc
mov
sti
xchg
cmp
pusha
jnp
aaa
push
imul
(bad)
imul
pop
inc
test
sub
mov
or
or
sbb
and
stc
xor
xlat
jo
stos
push
sbb
pop
xchg
inc
adc
add
mov
cwde
jmp
icebp
sbb
or
inc
aaa
adc
mov
pop
mov
sbb
cmp
or
pop
and
jo
jg
gs
test
shl
and
mov
inc
div
xchg
cdq
push
xor
ins
cmp
or
daa
sub
js
sbb
mov
imul
aaa
add
sub
in
adc
mov
shr
movs
mov
fcmovb
adc
aaa
ja
retf
jbe
pusha
test
(bad)
inc
mov
jmp
xchg
test
xor
mov
movs
or
pop
xchg
sahf
pusha
adc
sbb
ds
dec
add
push
adc
cmc
mov
push
push
fs
jb
or
out
mov
ret
pop
(bad)
jne
ret
sbb
or
jge
push
(bad)
jmp
loop
les
lods
cmps
lea
and
leave
add
popf
ja
xchg
pop
or
push
sub
push
repnz
jl
sub
sti
dec
out
aas
cmps
fimul
jmp
inc
and
aas
and
jle
mov
xchg
push
mov
jmp
(bad)
jnp
sti
clc
ror
pop
inc
cmp
jge
pop
dec
dec
repz
or
jno
lock
lock
adc
inc
jmp
inc
add
adc
sub
adc
scas
jno
sbb
pop
(bad)
cmp
sti
inc
lock
in
pop
cli
jge
test
sub
rcr
xlat
out
aam
jmp
fisttp
out
movs
jns
fstp
and
pop
ins
cld
jbe
mov
pop
inc
xchg
repnz
es
push
dec
scas
aaa
ins
add
pop
cmp
js
xchg
or
push
test
add
ss
pop
dec
inc
cli
add
aad
adc
cmp
ja
sub
push
adc
jbe
xor
movs
data16
xchg
fwait
shl
ret
mov
mov
pop
xchg
nop
mov
div
mov
mov
adc
mov
aaa
outs
ror
jmp
mov
outs
cmp
pusha
js
popf
xchg
test
out
and
mov
sbb
push
mov
mov
inc
and
cmp
leave
add
test
cli
jo
dec
inc
repz
fsub
imul
xchg
shl
mov
fcmove
out
scas
je
add
fistp
xlat
arpl
inc
cmp
popa
pop
add
ret
inc
cs
loopne
aad
enter
mov
push
xchg
ds
movs
add
adc
jno
jmp
aas
xchg
sub
pop
mov
dec
rcr
jne
jg
add
or
push
lock
out
add
adc
in
arpl
scas
rol
dec
jmp
inc
cmc
(bad)
dec
or
js
jmp
aad
int
das
jo
aam
shl
push
sahf
ret
mov
mov
mov
iret
cmp
adc
cmp
outs
cmps
and
lods
inc
or
ret
jge
add
xor
data16
push
push
mov
fisttp
fadd
cmps
in
dec
rcl
push
enter
retf
xor
mov
add
iret
mov
dec
and
ret
mov
xchg
pop
ja
loope
mov
and
inc
cmp
dec
ins
inc
add
test
sub
fidiv
jae
aas
jns
adc
ret
rol
add
arpl
call
fs
jmp
jae
push
inc
jbe
jns
mov
pushf
mov
shl
inc
push
cli
stos
and
push
dec
mov
or
and
js
stc
and
mov
sub
leave
and
call
jge
ret
mov
or
add
clc
in
jae
aam
stos
clc
in
push
xchg
lods
dec
mov
scas
cmp
xchg
push
mov
xor
out
push
(bad)
int
and
sub
xor
out
dec
mov
mov
in
dec
stos
xchg
scas
sbb
sahf
cmp
ja
stos
xchg
xlat
loope
lods
jecxz
cmp
push
inc
or
in
xlat
sbb
mov
neg
das
cld
add
sub
mov
ds
lods
pop
xor
fiadd
push
fst
mov
and
pop
inc
push
xchg
clc
push
jbe
mov
mov
repnz
push
dec
mov
push
neg
pop
jge
push
into
jg
pop
daa
jp
xor
xchg
addr16
rcl
mov
sub
dec
out
aaa
das
mov
jmp
sahf
cmp
inc
pusha
cmc
sti
loope
mov
xor
and
in
push
lea
ja
xor
movs
inc
fld
out
push
fadd
jl
pushf
aaa
and
sbb
dec
test
and
inc
fsub
je
aam
sar
iret
dec
sub
fist
test
add
push
push
push
sbb
jne
test
les
sti
dec
arpl
jl
cmp
movs
cmp
retf
jmp
aad
pop
fisttp
mov
dec
push
lahf
jp
xor
loop
subps
sbb
xor
sub
push
fwait
jo
out
mov
imul
jnp
(bad)
pop
cvtpi2ps
sbb
mov
in
xchg
pop
adc
adc
sti
ficomp
add
sub
in
mov
xor
neg
cs
cmp
sub
pop
add
cdq
jl
push
shl
fiadd
sub
mov
xchg
xchg
ret
in
xchg
xor
jmp
xor
setne
mov
push
adc
das
mov
mov
xchg
sub
pop
hlt
mov
sahf
or
pop
test
shl
dec
cli
icebp
xlat
loope
push
lock
cmp
rol
cdq
pop
or
enter
mov
stos
lods
cmp
cdq
pop
(bad)
rcl
rcr
mov
rcl
dec
into
sub
(bad)
inc
mov
xor
jp
cmp
jb
jbe
popf
cmp
out
stc
int
ja
pop
cmp
hlt
push
in
sar
jmp
jmp
dec
dec
loop
std
pop
outs
cmp
xor
out
stc
mov
sbb
adc
pusha
jmp
xchg
add
jae
push
inc
push
cs
mov
mov
movs
push
cmp
out
rol
and
cld
lock
push
pop
or
mov
test
movs
mov
add
xor
or
stc
jge
lahf
or
inc
aad
ja
loope
add
inc
inc
ins
sbb
dec
repnz
ror
jnp
and
(bad)
jmp
cdq
cmp
cmp
cmp
sub
retf
repz
adc
or
inc
jbe
stc
and
push
xor
and
fdivr
shr
jae
aad
dec
adc
(bad)
icebp
push
ret
cmp
in
jecxz
sub
pop
and
jmp
cwde
inc
aas
dec
(bad)
jns
cmp
push
mov
dec
mov
leave
xchg
imul
std
lds
jg
out
inc
outs
(bad)
jno
sar
mov
out
pop
jg
cmp
sub
push
mov
fist
mov
push
(bad)
jnp
imul
fiadd
pop
imul
xchg
push
and
bound
jp
ja
nop
or
in
xor
xor
fild
sbb
stos
test
fmul
sub
out
xchg
sbb
test
jl
push
jne
movs
mov
xchg
xchg
jg
xchg
add
data16
xchg
pop
inc
cmp
loopne
push
sbb
sbb
inc
faddp
(bad)
out
retf
xchg
mov
(bad)
or
icebp
mov
jmp
and
mov
mov
jmp
and
sbb
or
jno
xchg
or
mov
inc
daa
inc
shr
sub
ret
scas
jmp
dec
jmp
xor
adc
cli
mov
stos
mov
jle
test
cld
push
movs
mov
mov
jb
mov
xchg
adc
nop
mul
xor
dec
pushf
mov
pop
addr16
mov
loope
jle
add
lods
bnd
mov
mov
cmp
push
adc
ins
pop
les
retf
jle
enter
mov
mov
pop
mov
jb
xor
jecxz
fmulp
arpl
pop
ds
xchg
repz
mov
in
sbb
push
daa
push
inc
imul
push
mov
loope
scas
mov
push
sub
out
movs
sar
and
inc
cdq
cmp
pop
in
inc
js
inc
cmp
mov
imul
mov
js
sbb
outs
shr
jo
test
pop
jg
jge
xor
mov
mov
fldcw
hlt
push
mov
fst
lods
cs
xor
pop
mov
fwait
retf
movs
mov
mov
bound
pop
pop
mov
daa
retf
jo
cmp
std
add
jecxz
add
imul
cdq
mov
aas
lods
mov
push
std
and
lods
jl
and
test
aam
pop
dec
jmp
fsubrp
dec
or
cmp
bound
scas
jnp
sahf
lods
dec
push
pop
jp
or
mov
std
add
cdq
mov
mov
pop
dec
movs
ja
jae
cmp
adc
repz
xchg
adc
xchg
or
pop
push
mov
xchg
or
mov
imul
sub
mov
es
push
repnz
in
sbb
adc
add
fstp
fldenv
lods
mov
pop
pop
das
retf
sub
push
jge
(bad)
jns
cmp
fcmovne
sbb
(bad)
aas
cmps
ins
int3
loopne
test
xor
dec
xor
push
in
sbb
xor
or
push
and
lods
dec
adc
xchg
(bad)
fisubr
repnz
cmps
pop
mov
jmp
jle
stos
and
pop
loop
xlat
sbb
mov
test
xlat
push
fs
jecxz
and
xor
mov
call
dec
xor
lods
idiv
fwait
std
aam
data16
fsubr
mov
popa
xchg
pop
or
in
adc
sbb
addr16
in
sbb
add
inc
lock
test
pop
inc
in
xchg
cwde
pop
adc
xchg
add
iret
imul
mov
xchg
mov
dec
push
or
sub
sbb
jge
fwait
dec
xor
bound
loopne
push
call
cld
ficom
xchg
stos
in
out
pop
in
cmp
or
pop
mov
sbb
fist
mov
retf
xor
inc
cwde
sub
pop
push
addr16
and
imul
sub
stc
pusha
sbb
cwde
inc
pop
cmp
rcl
mov
repnz
stos
(bad)
test
xor
inc
nop
inc
mov
mov
movs
sbb
aaa
loop
adc
js
jp
aaa
push
pop
add
jl
push
or
ret
sub
sar
sub
add
pop
xchg
bnd
mov
or
jmp
pop
imul
xchg
repz
inc
mov
ins
ret
cmps
stos
aam
nop
pushf
leave
push
mov
jne
inc
push
enter
inc
pop
or
enter
aaa
aam
pop
icebp
out
pusha
pop
add
mov
push
jecxz
sbb
dec
and
or
mov
shr
dec
pop
jmp
aas
jecxz
push
popf
pop
out
nop/reserved
xchg
sub
stc
or
mov
gs
into
gs
enter
push
loopne
sub
mov
rcr
cs
fisttp
(bad)
arpl
and
sbb
sub
or
outs
cmp
out
shr
dec
in
daa
adc
mov
sbb
ret
mov
pop
das
or
fsub
loope
adc
ins
jo
and
mov
mov
stc
adc
adc
dec
cmp
and
jnp
xchg
lock
adc
loope
and
inc
mov
sbb
mov
sbb
(bad)
cmp
scas
add
mov
jnp
ret
out
adc
mov
and
aaa
dec
loope
xchg
lds
inc
idiv
fsubr
pop
pop
fdiv
mov
or
out
jnp
inc
pop
addr16
dec
dec
dec
push
idiv
lods
sbb
lahf
dec
mov
xchg
fs
shl
push
int3
inc
hlt
mov
loopne
cmps
mov
push
xor
les
xor
add
loop
cli
mov
fsubr
pop
cli
das
mov
rcr
mov
std
and
sbb
dec
out
pop
in
sbb
(bad)
adc
cdq
sub
ja
addr16
xor
iret
pop
outs
adc
enter
(bad)
fcmovbe
lock
jno
or
dec
cmp
fcmovne
and
sahf
es
push
xchg
sbb
lea
sub
lahf
xchg
xor
and
pop
mov
inc
or
arpl
test
sbb
sti
add
aaa
shl
mov
cmp
scas
ds
fisub
push
push
enter
jne
fcmove
adc
mov
and
daa
mov
cdq
push
stos
pop
cmp
add
rol
adc
inc
or
repz
mov
into
movs
mov
jbe
int
jmp
ins
retf
push
lea
test
mov
push
sub
or
pop
push
call
or
jno
iret
ficomp
cmp
inc
pop
add
xchg
sahf
dec
cwde
(bad)
push
and
fldenv
jo
and
into
dec
iret
adc
push
jne
dec
or
iret
in
mov
cmp
pop
mov
push
sbb
hlt
jnp
ja
retf
arpl
jo
mov
aam
rol
jge
leave
stos
cmp
arpl
pop
mov
or
arpl
out
inc
sar
call
dec
sbb
or
jbe
xor
mov
iret
jmp
or
bound
inc
lds
(bad)
xchg
enter
test
pop
sbb
sub
rcl
push
scas
lock
imul
jg
repz
call
dec
xchg
nop
xor
xor
add
dec
jmp
mov
out
out
mov
xor
outs
out
cmp
repnz
add
or
loope
loop
mov
and
out
or
stc
pop
aam
xor
mov
sub
adc
call
fbld
mov
cmp
mov
mov
xlat
inc
mov
push
add
mov
out
adc
cmp
mov
clc
cld
jecxz
push
push
inc
imul
push
cwde
jo
xchg
jmp
mov
sub
les
movs
movs
call
ret
fiadd
mov
popa
aam
or
adc
std
jmp
clc
xor
rcr
call
shr
xor
lahf
call
sar
pop
adc
(bad)
out
loopne
xchg
mov
aam
pusha
inc
inc
mov
stos
movs
inc
pop
cmp
ret
out
xchg
mov
push
arpl
enter
cmp
sbb
gs
inc
mov
dec
xor
out
jns
add
int3
mov
pop
bound
fdiv
(bad)
dec
in
jbe
(bad)
out
(bad)
xchg
fsubp
jl
ins
mov
fwait
pop
inc
gs
ror
inc
mov
stos
or
sub
fisttp
add
(bad)
and
pop
sbb
sbb
adc
int
sub
jl
into
xor
inc
cmp
pop
int
cmp
in
mov
loopne
cmps
xchg
scas
(bad)
(bad)
mov
stos
sbb
pop
into
pop
movs
(bad)
cwde
(bad)
jne
mov
jne
test
ds
or
mov
mov
call
fisub
mov
add
cwde
(bad)
aad
aad
popa
data16
pop
xchg
cmp
fs
mov
addr16
mov
mov
or
jae
or
cmps
dec
aaa
loope
rdmsr
pop
daa
jae
fwait
ds
xor
add
out
or
pop
xchg
in
fadd
push
jno
jmp
and
jns
enter
popf
jge
hlt
and
mov
iret
jb
and
mov
imul
in
fnsave
call
inc
outs
in
inc
clc
lods
shl
fwait
mov
mov
imul
loope
and
(bad)
fs
xchg
xchg
jb
mov
lods
jbe
xor
adc
or
cmp
sbb
hlt
js
test
lods
add
fisttp
stos
and
icebp
xchg
mov
bound
mov
cld
dec
clc
or
fstp
inc
and
and
aas
cmp
inc
inc
or
mov
pop
pop
mov
bound
cmp
xchg
(bad)
(bad)
xor
pusha
inc
(bad)
mov
xor
pop
sbb
es
push
add
int
shl
(bad)
and
test
jbe
and
pop
iret
js
stc
movs
push
lods
(bad)
cmp
int3
cmp
push
xor
add
push
pop
mov
aad
adc
pop
fadd
test
xchg
ror
imul
popa
sar
ffreep
xlat
imul
or
cwde
mov
push
dec
jecxz
xor
sub
mov
(bad)
repnz
jmp
fwait
fwait
mov
stos
mov
rol
jmp
mov
adc
fnstenv
mov
sar
add
scas
pop
scas
jmp
test
loopne
mov
xchg
mov
or
sar
mov
mov
cmps
les
enter
pop
jnp
cmp
xchg
jg
call
cdq
xchg
push
ins
mov
repnz
je
push
add
adc
and
or
cmps
loop
xchg
jbe
adc
fisub
fdivr
pop
push
jnp
dec
loopne
mov
or
data16
pop
adc
push
xchg
popa
cmps
dec
call
repnz
fadd
outs
or
mov
adc
xor
out
cmp
cmp
mov
popa
dec
popa
ja
js
int
cmp
loop
sti
add
or
repz
or
adc
repz
or
adc
push
mov
jecxz
sub
xor
imul
cmp
jmp
push
adc
and
int3
daa
push
or
pop
mov
stc
xchg
jne
push
and
jp
ret
push
retf
popf
int
std
pushf
das
pop
sbb
mov
dec
mov
cmp
outs
not
cld
push
pop
mov
xor
(bad)
sub
mov
xchg
lods
cmp
sub
jmp
jns
out
pop
ret
sbb
loopne
sbb
lds
sbb
sub
mov
dec
fbld
std
dec
and
or
mov
dec
mov
loop
movs
loope
sbb
mov
ret
sbb
pop
clc
in
mov
movs
shl
mov
(bad)
mov
pop
arpl
ins
xor
test
sub
cdq
lods
jle
cld
repz
push
rol
rcr
pushf
and
lea
xor
dec
xchg
movs
pusha
mov
cmc
or
mov
dec
(bad)
adc
inc
sbb
cs
and
jmp
imul
fst
and
scas
imul
in
cli
pop
pop
outs
and
int
push
or
mov
test
pop
lods
or
hlt
inc
fs
out
je
outs
(bad)
es
in
lock
adc
sbb
lods
(bad)
xchg
mov
iret
or
addr16
(bad)
pushf
lock
es
std
loopne
lea
(bad)
gs
mov
int
cmp
dec
fadd
loope
inc
fs
sub
rol
mov
clc
xor
dec
or
mov
pop
mov
pop
das
adc
jle
and
jbe
rcr
add
or
scas
xchg
mov
mov
push
xchg
or
mov
das
les
jmp
adc
ins
push
jmp
mov
iret
test
add
imul
and
add
mov
cwde
or
xor
jmp
mov
stc
jge
mov
stos
xchg
or
mov
cmp
xchg
scas
or
dec
(bad)
in
sahf
das
dec
and
dec
sbb
cdq
mov
pop
mov
jb
xchg
(bad)
(bad)
movs
sub
inc
js
test
jp
das
das
std
hlt
jecxz
or
data16
sbb
js
dec
stc
ss
push
int3
mov
mov
cmp
sub
adc
jmp
loopne
ins
mov
push
pop
aaa
xor
imul
ja
jnp
mov
pop
in
fstp
push
ins
leave
shl
or
in
scas
(bad)
mov
adc
gs
xchg
cld
loop
dec
sbb
inc
aas
xor
mov
std
je
imul
fst
and
inc
mov
in
push
sub
clc
sub
dec
mov
jae
jmp
cwde
xlat
fnstsw
pop
std
inc
mov
or
data16
imul
shr
retf
pusha
out
outs
pop
in
inc
test
pop
lock
dec
imul
push
aad
xchg
sbb
daa
sbb
mov
pusha
xor
mov
les
xchg
mov
or
cmp
xchg
push
scas
out
sahf
dec
jbe
xchg
rol
mul
es
or
cmc
stos
sub
mov
retf
(bad)
stc
sbb
test
adc
clc
inc
inc
jg
out
js
mov
pop
outs
aaa
pushf
mov
fnstsw
cs
scas
add
ins
shr
sar
imul
jmp
and
jmp
pushf
cmp
js
inc
arpl
push
loop
sub
ss
mov
sub
cld
mov
pop
arpl
rcl
add
pop
push
add
xor
out
das
or
jl
inc
(bad)
nop
dec
clc
ret
enter
pop
stos
mov
mov
push
lock
retf
jge
push
sub
pop
mov
mov
mov
mov
das
f2xm1
fimul
sbb
dec
add
lahf
ds
js
rcl
push
out
shr
mov
mov
fwait
(bad)
stc
jne
mov
pop
sub
aam
int
stos
(bad)
aam
pop
or
ins
stos
jne
sub
mov
into
cmp
add
push
cli
pop
xor
cli
imul
idiv
cmp
xchg
test
std
(bad)
mov
aaa
ror
mov
ins
cmp
add
dec
movs
push
cmp
repz
dec
sbb
ss
and
ret
ins
sbb
jmp
inc
(bad)
cmp
push
sar
into
cmp
jmp
jp
dec
push
mov
sbb
dec
and
push
inc
aas
addr16
(bad)
push
cmp
push
mov
pushf
dec
sub
retf
(bad)
lods
mov
fwait
mov
push
out
pop
inc
inc
shr
sahf
add
xchg
inc
pop
push
jle
and
and
mov
(bad)
sar
cli
pop
arpl
xchg
xchg
cmp
int
retf
jmp
mov
or
rcr
movs
stc
rol
retf
fbld
dec
xchg
in
push
mov
test
cmp
inc
sti
repnz
ja
pop
xchg
jmp
(bad)
push
xchg
enter
and
test
and
in
mov
in
push
cs
or
jge
movs
ds
mov
test
xor
in
or
repnz
xchg
dec
xor
pushf
push
gs
cmps
add
pop
test
adc
shl
movs
ss
sub
jl
adc
sbb
mov
cmc
into
sahf
loop
push
xchg
sbb
lods
mov
push
lock
mov
push
jno
cmp
bound
and
sbb
mov
scas
cmp
xchg
ins
sbb
xchg
aas
mov
dec
das
into
dec
inc
(bad)
mov
pop
jmp
jb
sub
mov
lds
out
aaa
sub
add
es
jnp
mov
cmp
cmp
out
pop
fs
lods
mov
addr16
xor
add
push
(bad)
or
sbb
mov
arpl
pop
xchg
ja
xchg
dec
test
lahf
pop
and
sub
xchg
fiadd
adc
xor
xor
lds
imul
mov
stos
fs
cmovae
out
inc
adc
sbb
cmp
add
xor
inc
jecxz
dec
dec
inc
in
(bad)
and
jmp
push
push
sbb
pop
test
jp
ret
je
xchg
add
in
mov
cmp
call
cdq
or
dec
call
test
stc
imul
jp
ret
das
mov
pop
cmp
xchg
enter
cmps
mov
cdq
call
fisub
retf
jae
shl
sar
xor
push
outs
mov
jmp
dec
cmp
add
shl
bound
mov
fld
push
add
cmp
mov
or
ret
mov
dec
and
in
xchg
add
mov
int3
mov
dec
and
neg
xor
popf
enter
pop
xchg
jle
iret
jmp
mov
adc
jge
push
in
or
xor
inc
test
push
cli
outs
cmp
movs
scas
lahf
imul
es
daa
pop
push
pop
popf
jo
cs
mov
or
fmul
cld
ins
mov
xchg
xchg
std
mov
push
fnstenv
pushf
ins
push
sar
pop
popa
mov
call
in
or
jp
outs
push
cmp
inc
push
jge
mov
mov
push
test
sub
fsub
stos
mov
sti
xlat
cmp
scas
xchg
(bad)
and
outs
inc
cmp
adc
mov
xchg
jbe
ss
pop
cmc
sub
scas
jo
and
cmp
jbe
mov
dec
mov
repnz
jnp
jne
lock
iret
inc
neg
push
fstp
and
in
xor
and
jno
call
sbb
sbb
frstor
je
mov
sbb
jae
jns
data16
cmp
jmp
les
scas
or
arpl
pop
mov
inc
inc
pop
cmps
out
leave
dec
aas
lods
enter
arpl
add
(bad)
mov
cs
shl
add
sbb
das
push
xchg
ja
push
jmp
mov
push
xchg
std
or
ror
add
pusha
fist
mov
sub
jg
mov
(bad)
cmp
(bad)
(bad)
mov
add
mov
jp
call
push
inc
cli
ret
lds
lods
imul
test
add
mov
push
popf
data16
ret
jle
adc
outs
sbb
loope
mov
cmp
sub
out
into
dec
pop
fwait
xchg
mov
fwait
ja
sbb
xchg
dec
push
daa
add
fldenv
ja
stos
(bad)
jmp
xor
cmp
dec
jge
dec
mov
dec
pop
lods
cmp
inc
data16
(bad)
sahf
loop
lods
push
add
xor
outs
push
xor
jo
or
pop
jmp
and
test
lods
push
sbb
dec
jmp
enter
stos
pusha
xchg
pop
mov
pop
(bad)
jp
retf
jne
xor
adc
xchg
dec
dec
jnp
push
mov
mov
cmp
pop
shr
mov
icebp
shl
out
pop
sti
(bad)
jge
pop
xchg
mov
mov
dec
outs
sar
adc
movs
jl
ja
jo
pop
or
jp
add
arpl
dec
xchg
nop
test
sbb
lods
mov
xor
fmul
leave
xor
lea
ror
and
add
xor
imul
pop
or
inc
and
out
lods
out
mov
cmp
add
fiadd
xchg
loope
jmp
popf
imul
xchg
jo
cmp
mov
std
test
dec
enter
push
loop
js
icebp
mov
loop
scas
push
xchg
mov
repz
mov
mov
sbb
fild
in
mov
es
into
push
mov
mov
(bad)
ret
enter
inc
mov
cdq
mov
push
shl
add
jmp
stos
ret
jnp
adc
cmp
jge
arpl
xchg
jmp
cdq
add
je
sbb
(bad)
imul
mov
(bad)
fwait
cli
add
dec
jecxz
retf
add
lahf
outs
sbb
sbb
sbb
into
add
jno
inc
fcmove
xchg
or
je
das
mov
sub
ss
cld
ins
(bad)
mov
arpl
push
fmul
or
pop
xchg
cmp
ss
jecxz
xor
ja
je
arpl
mov
cmp
retf
std
js
daa
adc
popf
xchg
rol
nop
jne
ins
arpl
jmp
jp
lds
mov
cmp
ret
push
gs
fninit
jne
ret
stos
fmul
test
cdq
pop
daa
sub
push
xor
xchg
cdq
fistp
sub
mov
test
inc
push
xor
mov
sub
lods
jmp
jp
and
daa
adc
cs
push
and
cmps
mov
sub
in
xor
mov
pushf
movs
cvtps2pd
sub
in
shl
pushf
mov
aad
and
test
jl
test
sub
sahf
xor
and
test
cmp
push
xchg
in
lahf
inc
inc
test
and
jbe
jmp
dec
xor
clc
sbb
push
and
mov
jmp
scas
and
out
cwde
rcl
pop
test
les
dec
cmp
or
daa
rcr
fdivr
mov
mov
cs
and
jle
inc
ins
in
cmovns
jb
cmp
jb
xlat
jne
jnp
xor
sbb
cli
sbb
adc
test
movs
push
sub
in
lock
jge
jge
jg
jns
push
xchg
cmps
inc
mov
mov
cmove
jo
cs
xor
adc
pop
adc
not
jmp
(bad)
hlt
daa
movs
push
aas
aam
gs
retf
mov
inc
fsub
mov
stos
push
fmul
ins
not
loop
pop
lahf
cmp
cmp
add
out
adc
push
xor
gs
gs
dec
into
std
aam
cmp
loop
jp
ret
dec
pop
popa
ins
inc
sbb
movs
push
mul
cmp
(bad)
std
xchg
mov
or
push
push
(bad)
sar
loope
in
clc
fucomp
jne
ret
jecxz
dec
lahf
aaa
out
cmp
add
inc
out
pop
(bad)
cwde
clc
movs
mov
fcomp
aas
rep
repnz
(bad)
adc
mov
add
xchg
or
push
cmovnp
fist
mov
pop
jge
outs
sbb
pop
in
fwait
mov
mov
mov
popa
sub
sub
stos
(bad)
mov
xor
sbb
xor
neg
lock
dec
fist
ss
mov
cld
push
das
lock
mov
mov
popa
sbb
dec
fild
clc
retf
mov
jb
pop
sbb
aam
fld
rol
ds
or
jp
loopne
mov
stos
sub
mov
pop
push
aad
and
popf
jb
pop
fild
(bad)
mov
ins
mov
cmp
pop
ins
rol
inc
and
sbb
add
mov
inc
mov
dec
add
cmovge
inc
imul
pop
es
(bad)
fcom
mov
(bad)
popa
call
and
pop
add
lods
scas
repz
mov
rol
clc
pop
(bad)
pop
xlat
jae
inc
push
sub
sahf
mov
pop
out
inc
std
sbb
cmp
jmp
in
out
pop
mov
mov
push
inc
dec
repnz
(bad)
aad
pop
repnz
movs
mov
xor
pop
sbb
scas
xchg
or
les
push
mov
push
mov
mov
sbb
pop
cld
rcr
movs
jno
xchg
mov
ja
test
out
lock
dec
mov
push
xchg
adc
xor
push
mov
add
mov
leave
movs
call
xor
pop
test
pop
dec
lahf
mov
icebp
xchg
mov
fidivr
push
sbb
cmp
ds
in
pop
push
hlt
pop
clc
in
xor
movs
je
inc
dec
cmc
js
fisttp
add
dec
sub
rcl
ins
repz
xor
les
fs
das
push
ins
hlt
add
nop
mov
mov
jo
mov
xchg
pop
mov
xor
cmp
inc
aam
xor
and
(bad)
dec
cmps
xchg
ret
xor
aas
add
mov
and
adc
mov
sahf
adc
mov
aas
xchg
lfs
out
fbstp
in
rcl
xchg
(bad)
jp
cmp
out
enter
addr16
lock
pushf
cmps
adc
icebp
les
nop
bound
pop
pop
xchg
xor
mov
shr
xchg
dec
sti
pop
mov
scas
or
mov
jns
mov
mov
push
out
mul
sahf
adc
cmp
movs
inc
mov
popf
(bad)
sti
and
adc
sbb
or
rcl
cli
adc
xor
push
int
fidivr
arpl
cmp
pop
ins
js
add
outs
mov
adc
pop
pop
iret
enter
(bad)
(bad)
popf
sbb
cli
call
add
pop
xor
dec
rol
jge
movs
sar
cmps
inc
mov
dec
mov
out
bound
js
psubusb
aam
bound
jo
mov
jp
pop
sub
sub
ins
xchg
mov
stos
fnstcw
ins
mov
mov
adc
mov
mov
xor
imul
mov
push
or
inc
(bad)
inc
cmp
repz
add
push
fisub
(bad)
or
xchg
aaa
ja
test
fstp
dec
xchg
adc
add
dec
add
and
push
dec
scas
push
cmps
sbb
jp
mov
xchg
mov
(bad)
mov
sbb
add
jmp
dec
push
into
xchg
cld
jbe
jae
and
jno
in
imul
(bad)
or
out
inc
xchg
pop
dec
mov
adc
mov
mov
fldenv
inc
inc
je
es
fld
dec
dec
(bad)
(bad)
mov
rcr
mov
pop
xor
stos
retf
xor
mov
mov
push
hlt
add
jne
sub
lock
xchg
mov
inc
jp
repz
inc
sub
mov
paddusb
pop
dec
push
push
dec
inc
idiv
inc
push
inc
test
aaa
cmc
popa
out
inc
cmp
in
mov
outs
and
rcl
pop
inc
xchg
fs
mov
xchg
cs
hlt
imul
fs
int
mov
ss
jge
adc
int
fidivr
int3
test
popf
mov
pop
in
jle
xchg
jp
jmp
push
add
dec
nop
dec
inc
(bad)
cmp
mov
ret
push
pop
int
adc
addr16
inc
in
xchg
cwde
ins
mov
mov
push
out
pop
fsub
(bad)
int
adc
data16
je
inc
in
ja
inc
cmp
sub
out
mov
cmp
icebp
xor
lahf
push
push
jno
dec
enter
jb
mov
adc
fiadd
dec
sub
adc
push
stos
dec
jae
test
or
fsubr
cmp
pop
mov
jecxz
out
retf
sub
fnstenv
movs
enter
test
cmps
pop
and
sbb
add
mov
stos
or
sub
ror
in
test
js
xor
sbb
in
ds
out
in
adc
push
inc
shl
pop
imul
sub
(bad)
jmp
iret
push
jo
dec
or
nop
out
pop
and
imul
movs
sub
repz
or
inc
shr
jg
jmp
mov
mov
cdq
dec
mov
dec
and
lahf
out
push
jnp
ret
imul
call
jae
aam
sbb
cwde
outs
(bad)
jmp
fisttp
mov
(bad)
cmp
enter
lea
dec
or
dec
dec
mov
pop
cmp
and
retf
cdq
scas
xor
call
mov
dec
mov
rcr
(bad)
(bad)
and
cmps
(bad)
jb
retf
add
test
mov
jmp
ss
pop
pop
nop
mov
lods
mov
cdq
(bad)
adc
repz
ja
sub
aam
or
xchg
popf
rcl
and
sub
out
inc
jp
push
or
inc
push
imul
jmp
out
mov
lds
xchg
or
icebp
push
xchg
mov
fsub
xor
and
or
ds
mov
adc
xor
je
mov
cmp
pop
pushf
gs
mov
and
mov
xor
repz
mov
fs
xchg
out
in
cmps
bound
mov
gs
add
nop
movs
xchg
and
add
mov
loopne
dec
and
ret
xor
(bad)
dec
pushf
mov
pop
xchg
mov
imul
cmc
xor
test
or
fwait
cmp
mov
in
push
pop
push
xchg
push
dec
retf
fnstcw
std
out
mov
fidivr
lahf
dec
xor
scas
adc
cmc
ds
ficomp
jmp
jns
push
xchg
lods
adc
xor
adc
(bad)
call
jecxz
cmc
arpl
mov
mov
cli
adc
sub
les
xchg
inc
xchg
ror
mov
loop
shl
mov
dec
inc
xor
cmp
adc
xor
cli
int
dec
outs
ss
je
addr16
inc
das
fld
cmp
sub
fadd
sahf
cmp
jecxz
dec
bound
int3
cmp
mov
mov
sub
in
and
popa
cmp
adc
xchg
push
push
lahf
push
(bad)
pop
inc
int
mov
rcl
xchg
lods
mov
mov
mov
push
clc
xchg
sub
lock
jmp
xchg
popf
or
dec
shl
jge
lds
pop
aam
pop
or
jmp
bound
and
ror
adc
add
mov
imul
jmp
jp
push
adc
jbe
callw
jno
aaa
cdq
retf
mov
add
mov
in
ror
cmp
je
xchg
cs
sub
dec
cs
jo
jmp
or
sbb
xchg
(bad)
adc
mov
data16
xchg
inc
xchg
mov
fucomp
jno
(bad)
mov
sub
push
aas
(bad)
mov
dec
cmp
cwde
mov
add
ins
or
cmp
mov
shl
add
inc
ret
mov
adc
fist
push
dec
fbstp
jb
cmc
jg
(bad)
ds
scas
arpl
xor
xor
mov
scas
add
imul
xchg
icebp
dec
dec
je
and
fwait
jns
sti
clc
cmp
test
imul
or
ja
movs
jmp
loope
cdq
test
xchg
push
adc
mov
leave
adc
cmp
int
scas
or
xchg
and
es
add
mov
sub
add
cs
fisub
fs
mov
xchg
cmp
addr16
rol
sbb
and
in
inc
dec
addr16
iret
int3
clc
xor
fiadd
sbb
mov
sub
inc
xor
and
dec
(bad)
mov
add
inc
push
or
xchg
push
add
lods
push
xchg
test
mov
jmp
and
shl
jmp
ja
sbb
jnp
fisub
dec
mov
mov
jno
mov
xlat
leave
inc
mov
ds
int
cs
lods
jbe
pop
das
mov
out
and
jle
pusha
jae
cmps
icebp
shr
ins
retf
retf
adc
mov
or
cld
nop
pop
loop
pop
pop
test
fadd
dec
adc
cmp
repnz
inc
mov
in
and
sub
lock
xchg
mov
or
push
pop
fbstp
mov
fist
mov
pop
mov
enter
gs
mov
xchg
inc
lods
iret
cmp
mov
ret
jg
neg
lea
nop
inc
inc
xchg
or
out
jae
pop
sub
mov
xor
pop
ffree
pop
adc
adc
cli
pop
mov
cwde
or
(bad)
pop
popa
stos
iret
sbb
xchg
inc
hlt
pop
pop
jnp
jl
mov
int
pop
retf
mov
leave
std
mov
sub
jmp
(bad)
sti
push
inc
into
repz
push
xor
lock
out
or
les
gs
movs
gs
repz
ins
pop
cmps
ret
pop
je
cmp
push
xor
cmp
xchg
and
or
xor
mov
retf
(bad)
add
addr16
and
mov
sub
add
test
add
bound
iret
pop
push
adc
jmp
rol
xchg
mov
sbb
sbb
mov
mov
mov
mov
inc
and
popf
xchg
or
cmc
ss
mov
mov
dec
pop
ins
dec
mul
aad
pop
pop
jmp
sbb
sbb
mov
add
jle
mov
ret
ret
rcl
popa
dec
retf
pusha
arpl
push
cli
jne
jge
shl
add
or
aas
out
test
sub
outs
adc
stos
jae
jecxz
jmp
mov
mov
or
lods
push
repz
xor
sti
jb
mov
cmp
mov
out
call
aas
xchg
stos
sbb
jbe
nop
sbb
adc
jmp
in
(bad)
into
and
test
lahf
push
pop
movs
mov
repnz
cmp
scas
mov
rep
push
test
mov
jg
adc
pusha
loopne
loope
test
jns
pop
jmp
xchg
pop
das
aaa
ret
(bad)
dec
mov
push
enter
or
cmps
call
sub
(bad)
cld
xor
mov
mov
and
inc
mov
jo
ins
mov
add
test
movs
mov
adc
dec
push
dec
jne
jmp
pop
push
sub
mov
jl
xchg
inc
jne
vcvtdq2ps
lods
cmp
add
clc
aaa
movs
inc
mov
imul
jg
jmp
fld
cmps
jno
loop
xchg
xor
jmp
mov
(bad)
mov
imul
popf
inc
jno
xchg
sub
movs
cmps
xchg
push
sub
mov
add
int3
sub
sub
sbb
dec
push
mov
cmps
mov
mov
mov
add
cmp
int
mov
mov
add
sub
stos
cmp
call
fbstp
adc
cmps
mov
jb
push
(bad)
clc
es
mov
je
cmp
or
mov
pop
mov
ds
data16
(bad)
mov
test
daa
pop
push
xchg
(bad)
std
cmp
inc
lahf
sub
retf
sbb
mov
cmp
loopne
jns
lea
inc
and
cmp
jmp
cmps
test
std
ins
cmp
and
mov
xchg
cmp
fidivr
jbe
add
outs
cmp
fidiv
ds
or
loop
pushf
push
add
mov
pushf
(bad)
fsubr
add
cdq
ins
jae
div
jae
and
add
adc
jmp
pop
jb
into
push
cmp
dec
or
fisttp
mov
jp
scas
xor
inc
and
mov
push
jl
fidiv
mov
fmul
jg
popa
and
cmps
push
mov
fsub
jg
xchg
xchg
js
repnz
clc
mov
dec
mov
nop
dec
or
ds
test
inc
out
loop
mov
(bad)
(bad)
add
fs
cmc
sbb
fldenv
and
loop
mov
inc
int3
ror
ja
out
mov
or
mov
iret
cmp
jmp
add
push
jne
mov
jmp
sbb
inc
push
sti
mov
and
not
dec
dec
adc
jmp
jl
emms
push
and
test
aaa
jecxz
popf
pop
in
dec
add
push
add
fwait
inc
push
add
outs
mov
xor
rol
jmp
and
mov
jmp
ret
and
push
aas
movs
lea
aam
push
and
xor
xchg
xchg
jle
into
inc
int3
das
ret
push
and
cdq
sub
sahf
xchg
out
cmps
(bad)
cmp
cld
out
xlat
add
xchg
loopne
hlt
js
inc
retf
dec
imul
cwde
stos
jo
xchg
push
jne
lahf
jns
aaa
or
(bad)
adc
pop
in
repz
xor
push
movups
cmps
clc
loop
xchg
sbb
lock
pop
movs
mov
je
icebp
gs
fnstenv
adc
adc
xor
jp
jmp
aad
loop
cld
jecxz
cmps
xchg
or
pop
imul
cmc
les
in
popaw
dec
xchg
mov
fwait
mov
ror
fist
jne
mov
pusha
(bad)
dec
fs
shl
mov
inc
fnsave
das
(bad)
push
push
dec
gs
clc
xchg
out
mov
fwait
or
scas
lahf
outs
add
idiv
bound
push
daa
adc
bound
xor
imul
xchg
pop
xor
in
es
add
xchg
sbb
(bad)
sti
push
or
popa
movs
cwde
jmp
adc
dec
(bad)
cli
xchg
mov
shl
and
(bad)
in
(bad)
xchg
das
sbb
mov
mov
enter
mov
fs
popa
cmc
mov
mov
and
adc
jne
xchg
lahf
mov
ds
inc
jno
xchg
mov
cmp
mov
xchg
out
movs
push
(bad)
ins
out
adc
enter
dec
or
sub
cwde
sub
sub
inc
push
ins
sahf
out
ret
inc
push
in
ins
cdq
mov
sub
cmp
add
test
cmp
ins
leave
cmp
add
sub
inc
push
cmc
add
icebp
dec
or
jg
sbb
cbw
scas
mov
mov
in
ins
repnz
push
xlat
xor
add
dec
test
aad
mov
push
(bad)
ret
int3
pusha
jmp
and
sub
repnz
sbb
xchg
xor
aaa
sbb
mov
div
xchg
cmps
jns
mov
push
loop
jge
(bad)
add
retf
pop
inc
hlt
pushf
inc
xchg
pushf
test
ret
inc
mov
in
pusha
inc
push
xlat
fsub
inc
dec
mov
dec
xchg
not
std
lods
sub
dec
iret
aad
sub
xchg
xor
fisub
pop
enter
xchg
movs
cmp
rcl
cli
fist
ficom
or
jmp
mov
inc
int3
sub
fbld
cmp
fwait
xor
out
inc
mov
xor
xor
dec
xor
div
jmp
jno
ret
mov
or
inc
push
aam
pop
push
and
clc
xor
retf
jecxz
(bad)
pop
iret
sahf
out
fldcw
jp
push
psubw
daa
ss
inc
or
inc
fistp
and
out
mov
dec
leave
or
pop
movs
dec
adc
pop
xchg
test
js
add
mov
int3
movs
jl
mov
add
cmp
(bad)
outs
and
mov
sub
repnz
xor
pop
call
js
push
mov
out
adc
daa
mov
jge
mov
loop
mov
jp
scas
out
call
fcomp
jo
push
mov
xchg
aam
push
xchg
and
cmp
call
cmp
mov
push
dec
pop
xchg
xor
enter
lahf
dec
or
imul
inc
repz
xor
in
pop
retf
sub
xor
cli
(bad)
pusha
fbld
enter
sahf
adc
add
sti
inc
adc
sub
sar
lods
inc
js
(bad)
rcr
sbb
cli
push
(bad)
pop
fcom
add
pop
(bad)
imul
loopne
into
xor
jmp
adc
mov
std
jge
push
pop
sub
or
mov
dec
aad
aad
into
loope
cli
jnp
fdivr
dec
test
xchg
hlt
cmps
mov
mov
test
(bad)
mov
pop
icebp
add
sbb
sahf
inc
inc
sbb
iret
pusha
shl
cmp
idiv
push
in
adc
out
loope
fild
jp
cs
pop
push
in
aaa
push
push
sbb
and
sbb
dec
ret
stc
jb
ins
inc
rcr
cmps
imul
leave
cli
mov
mov
sbb
fsub
cwde
pop
das
push
mov
not
sub
ret
pop
imul
aam
add
xchg
pop
shl
and
jb
das
mov
rol
mov
cmps
pusha
jae
push
jmp
(bad)
push
das
out
inc
mov
or
jle
add
jbe
sbb
pop
test
clc
(bad)
repz
bound
pop
out
nop
cmc
sbb
ror
js
shl
add
cmp
inc
sbb
imul
(bad)
mov
cmps
xchg
pop
out
cmp
clc
or
and
daa
jmp
or
out
fild
lea
sbb
lock
rcr
out
cmp
cmps
(bad)
enter
mov
mov
out
js
add
fdiv
lea
aaa
fs
stc
fcomip
fcom
inc
jl
cmps
add
inc
in
jg
inc
inc
js
stos
mov
add
push
sbb
dec
cmps
xchg
mov
add
repnz
cld
sbb
cmps
movs
mov
int3
mov
jge
sbb
aas
cmc
leave
mov
jp
adc
(bad)
and
cmp
sub
pop
sbb
push
adc
movs
adc
loopne
xlat
xchg
xchg
cmp
out
data16
ror
push
jge
and
mov
and
jo
(bad)
or
jb
push
mov
inc
push
and
xchg
cmps
icebp
int3
or
mov
mov
cwde
dec
imul
cmp
aam
sub
jns
pop
xchg
repz
dec
popa
inc
mov
adc
fiadd
inc
jmp
lds
xor
jmp
xor
ror
push
push
mov
std
mov
(bad)
shl
sub
inc
lds
jns
call
or
ret
hlt
xor
neg
loope
in
fcomp
movs
or
nop
stc
dec
dec
ins
xchg
test
sbb
sub
mov
mov
fsubr
sbb
and
pop
jp
iret
mov
push
jae
pushf
popf
pop
lea
pop
xchg
mov
cs
cwde
mov
jmp
enter
and
cli
test
bound
jbe
data16
xchg
stos
cli
jp
add
mov
sbb
push
push
mov
lods
fstp
cmps
sbb
das
mov
mov
jmp
pop
mov
pop
out
mov
xchg
ficom
push
sub
jmp
push
adc
test
mov
mov
lds
cmp
pop
repz
sub
xchg
sbb
out
data16
xchg
test
jl
push
jb
scas
push
fisttp
dec
sub
retf
sub
sub
push
mov
into
sub
push
icebp
test
ins
xor
inc
push
xchg
popa
jle
icebp
cmp
sub
xor
dec
icebp
(bad)
pushf
cmp
daa
pop
mov
or
ja
jb
xor
jb
adc
mov
test
lock
sub
xor
shl
xchg
clc
add
in
in
popa
xchg
add
(bad)
dec
and
mov
loop
jg
mov
push
jnp
mov
pushf
jae
fisub
inc
or
inc
cmp
xor
js
(bad)
pusha
je
push
stos
adc
adc
mov
dec
into
cmp
dec
xor
lahf
sub
xchg
adc
cmp
or
scas
pop
and
ficomp
out
push
adc
jmp
xchg
xor
cmp
or
fcom
(bad)
mul
or
push
xchg
fmul
add
mov
xor
lahf
xor
push
aad
push
jb
or
int
and
scas
xchg
mov
jmp
call
or
stos
sub
test
pop
mov
adc
loop
ret
pop
sbb
shr
fidiv
rol
jl
pop
sahf
mov
mov
or
pop
imul
sub
daa
data16
int3
mov
sub
shl
lahf
es
test
lods
call
mov
mov
and
fs
imul
mov
out
sub
add
xchg
pop
ins
cli
jne
in
outs
cwde
cmps
hlt
xor
jne
loopne
cwde
cli
shr
je
xor
lods
pusha
retf
ins
fadd
jo
out
stos
cwde
pop
mov
jp
push
push
mov
dec
push
es
pusha
xor
cs
inc
cmp
or
cmp
jnp
cwde
pop
or
idiv
les
sub
pop
jecxz
or
inc
(bad)
popa
ja
mov
jecxz
mov
fild
inc
and
sti
movs
ins
jns
stos
in
push
or
dec
hlt
enter
push
pop
dec
cmp
ja
pop
xlat
mov
xor
push
dec
mov
push
sub
cmp
shl
sbb
jp
in
xor
or
fiadd
(bad)
in
inc
test
mov
xor
pop
icebp
push
and
add
pop
rol
dec
pop
push
jne
lahf
cmps
xchg
idiv
push
test
mov
pop
push
ja
pop
dec
retf
mov
(bad)
push
inc
and
adc
sar
test
xor
add
adc
fs
mov
jecxz
leave
and
jmp
fmul
sar
stos
adc
jmp
sar
dec
retf
lea
inc
or
push
js
cli
(bad)
and
jns
gs
xchg
mov
cmp
xchg
aam
rcl
cmps
xchg
push
inc
aam
cmp
(bad)
fisub
scas
lock
push
test
mov
shl
xchg
jae
daa
arpl
sub
mov
nop
pop
pop
loope
shl
hlt
and
push
enter
out
xchg
jmp
out
inc
sti
(bad)
out
cmp
jp
sbb
aam
xchg
and
cmp
ins
pop
jns
add
jne
pop
inc
lahf
cwde
int
jl
add
and
adc
ret
lea
xor
int3
scas
out
dec
adc
mov
pop
enter
mov
sbb
(bad)
loop
aaa
mov
push
pop
jp
in
add
jns
push
cmp
popf
fsub
dec
add
and
mov
jecxz
lea
aas
dec
ror
pop
pop
pushf
fisttp
daa
adc
pop
retf
sub
sub
dec
popf
sub
mov
mov
stos
lahf
scas
inc
mov
push
lds
cmc
jg
xor
xor
mov
(bad)
fs
int3
fs
xor
or
(bad)
mov
aad
mov
outs
sbb
mov
pop
xchg
cmps
xchg
popf
scas
mov
xor
pop
in
mov
cmc
nop
mov
pop
jmp
cmps
cmps
mov
test
cmp
adc
bnd
mov
enter
arpl
pop
sub
cli
sbb
pop
mov
ror
aam
daa
mov
shr
push
(bad)
movs
xor
jmp
push
pop
imul
test
push
out
mov
scas
add
xor
lea
push
xor
das
out
xlat
in
xor
push
mov
or
mov
xor
xor
fisubr
fstp
bound
sar
xor
out
or
scas
out
pop
push
and
mov
or
iret
mov
mov
jp
in
xchg
test
cmovge
inc
enter
inc
ja
test
dec
cld
mov
cdq
loope
fsubr
mov
add
cli
fnsave
or
sub
mov
addr16
nop
aam
rol
out
inc
push
pop
adc
sar
cmc
push
ror
inc
scas
int
cmove
push
xor
jle
fcomp
out
sbb
sti
pop
cmp
movs
inc
xchg
mov
and
xchg
jae
xchg
jae
mov
mov
aam
adc
retf
mov
js
add
jge
cmps
icebp
test
(bad)
mov
sar
adc
cmp
mov
push
mov
movs
xor
jo
mov
ja
loope
push
aad
int
adc
inc
inc
push
xchg
add
jecxz
retf
test
fstp
lahf
push
test
sbb
and
(bad)
(bad)
stos
mov
out
push
repz
adc
stos
inc
push
ret
ds
mov
sub
leave
ret
imul
dec
leave
call
pop
clc
rcl
pop
push
push
xor
xchg
ins
jecxz
mov
cmp
or
cmc
fs
jns
lods
out
loope
std
jmp
jg
pop
jge
out
ret
push
imul
enter
mov
inc
neg
xor
inc
lods
dec
(bad)
jae
cli
icebp
push
pop
mov
or
out
mov
jp
ss
ret
inc
rcl
cwde
outs
mov
stos
ficom
cmp
xchg
adc
or
dec
add
push
repz
(bad)
sti
sub
lock
pop
push
inc
inc
add
bound
pop
or
(bad)
xor
xor
sahf
jnp
and
sub
pusha
push
mov
leave
imul
inc
aam
cli
cmp
jp
scas
mov
mov
xchg
aam
push
aaa
add
sub
or
ret
sti
rcl
leave
and
xor
adc
pop
(bad)
aad
aam
xchg
pusha
and
sub
stc
xchg
fstp
xchg
xchg
popa
adc
and
cli
(bad)
ins
push
scas
push
mov
scas
pop
push
dec
mov
pop
push
xor
jg
xlat
xchg
add
jb
and
bound
retf
in
fstp
sbb
sub
add
sahf
movs
lea
add
ins
inc
fdiv
(bad)
push
adc
out
inc
cmc
push
cmps
xor
cmp
out
jo
jge
adc
mov
mov
jno
cli
or
and
shr
jecxz
xchg
nop
imul
jmp
lock
test
cmc
std
(bad)
mov
pop
lea
test
test
fyl2xp1
daa
sbb
adc
bound
outs
ins
and
cmp
and
sbb
and
jl
fsub
cli
out
jl
lock
(bad)
(bad)
cdq
and
cmps
out
sbb
dec
mov
sub
and
add
test
das
pop
cmps
dec
into
out
lods
add
adc
xor
xor
pop
out
xor
shl
mov
jne
imul
inc
xchg
mov
sub
dec
sub
(bad)
cdq
sub
ins
push
jns
imul
test
jg
push
rcl
mov
gs
and
test
inc
adc
jg
ins
repz
in
sub
je
test
scas
jecxz
cmp
jne
nop
pop
mov
(bad)
sahf
xor
sub
nop
stc
icebp
cmp
dec
iret
lahf
loop
xchg
jno
jg
les
dec
iret
mov
pop
in
inc
cli
dec
and
pop
ins
pop
bnd
inc
loopne
mov
(bad)
retf
mul
call
xchg
aas
pop
xchg
jmp
lahf
adc
push
sub
sub
sahf
jmp
sbb
jae
inc
hlt
dec
push
(bad)
sub
sbb
fisttp
pop
(bad)
and
daa
mov
clc
test
adc
sub
iret
out
jo
xlat
fwait
in
fmul
ret
or
jne
out
imul
pop
int
and
cdq
or
pop
rcr
pop
push
in
std
xchg
(bad)
shl
(bad)
jno
dec
xchg
xchg
cmp
jnp
sub
mov
dec
bound
fs
mov
stos
ins
cmp
out
popf
aam
jecxz
icebp
call
and
pushf
addr16
or
ins
lea
call
(bad)
sbb
adc
dec
dec
add
jne
(bad)
out
into
(bad)
cmc
inc
inc
imul
mov
mov
mov
jmp
sbb
mov
shl
ds
je
out
pmulhuw
in
dec
enter
adc
sub
mov
lahf
xchg
leave
bound
mov
icebp
inc
les
xchg
dec
ins
fldenv
jnp
scas
mov
pop
icebp
les
xchg
pop
ror
mov
push
xor
clc
aad
cli
adc
ds
or
movs
cmp
data16
sub
out
ret
ins
test
jb
fs
lods
(bad)
and
loop
out
stos
add
or
cmp
test
jnp
jmp
lss
add
or
mov
push
outs
test
adc
rep
push
mov
in
cmp
and
lds
retf
xor
scas
das
test
pop
push
test
pop
outs
pop
fcomp
push
es
push
dec
stos
pushf
inc
dec
inc
retf
scas
mov
std
popa
inc
jecxz
cli
outs
repz
shl
test
mov
lods
lods
lods
in
data16
jge
arpl
dec
cmp
pop
repz
in
sti
clc
mov
arpl
lea
add
jb
addr16
push
lods
nop
inc
inc
iret
jg
(bad)
jmp
out
or
push
xchg
outs
dec
pop
inc
mov
cwde
stos
push
repnz
inc
sub
pop
(bad)
sub
pop
pop
loopne
inc
cmp
fcomp
inc
and
push
stc
add
(bad)
mov
icebp
cmp
mov
sub
call
push
add
cmp
inc
fist
pop
xchg
jbe
leave
cmp
jmp
fdivr
mov
sbb
mov
mov
push
mov
outs
ud2
jg
jle
mov
push
repnz
push
neg
add
aas
je
mov
push
call
inc
mov
out
in
shr
div
jo
push
or
add
imul
cli
inc
cmp
mov
xor
sbb
es
ret
push
gs
mov
lods
xchg
mov
and
pop
into
pop
or
push
pop
jae
or
stc
sbb
rol
std
call
mov
sub
je
(bad)
sub
mov
pop
jne
div
cmps
pop
adc
in
push
fiadd
or
std
inc
jle
push
cmp
lea
sub
ret
inc
mov
not
or
mov
sbb
sbb
mov
sar
fdiv
mov
hlt
ss
cli
mov
add
aam
or
sbb
jge
push
inc
adc
retf
(bad)
in
fild
ins
fs
xchg
inc
jnp
mov
jo
stc
add
dec
sub
ja
xchg
xor
rcl
mov
xchg
mov
cli
pop
push
ins
lods
pusha
ret
sbb
mov
adc
inc
inc
xchg
adc
or
cdq
js
movs
push
jae
cmp
mov
rcr
mov
leave
iret
mov
sub
and
fadd
cld
jo
inc
mov
mov
xchg
or
xchg
icebp
and
xor
cmp
(bad)
leave
sub
test
nop
jae
sub
jae
shl
ins
mov
inc
mov
jle
pop
mov
xor
(bad)
loopne
pop
popf
pop
(bad)
retf
imul
(bad)
cmc
scas
inc
xor
add
cmp
inc
or
cmp
rcr
mov
addr16
pop
das
mov
xor
add
pop
and
popa
shl
ins
push
xor
and
gs
adc
push
aas
cli
cdq
add
jmp
(bad)
sbb
daa
lea
push
movs
(bad)
xor
and
and
lods
mov
jb
and
push
retf
sub
(bad)
cmp
loopne
jb
mov
jl
ss
je
inc
sahf
outs
enter
xchg
adc
mov
push
iret
dec
dec
sbb
jb
test
aaa
lods
adc
out
inc
loope
jns
dec
and
push
mov
inc
mov
xchg
fldenvw
cmps
in
xchg
xor
fmul
ins
rol
out
and
xchg
ds
add
fnsave
(bad)
ins
push
hlt
ss
outs
push
cmps
xchg
mov
add
cmp
adc
lods
(bad)
mov
add
cwde
adc
push
outs
(bad)
or
fdiv
div
les
sub
vmovdqa
or
inc
add
lods
bound
push
mov
xchg
xchg
aas
addr16
fld
mov
xor
dec
push
push
sbb
imul
sbb
pop
mov
inc
fild
adc
pop
(bad)
es
outs
inc
repnz
adc
pop
jp
rol
imul
pop
xor
sub
rcl
hlt
xchg
mov
mov
cmps
(bad)
mov
mov
or
popf
inc
or
mov
xor
add
sbb
test
ja
xchg
je
adc
out
jbe
es
cmp
sub
out
clc
jg
dec
ins
sub
arpl
jno
test
pop
test
ins
jb
aas
aaa
daa
jmp
gs
aaa
clc
addr16
dec
jmp
div
cmc
mov
icebp
jl
daa
dec
shl
add
pop
adc
jnp
xor
xchg
data16
imul
cmp
jecxz
fwait
test
ss
pop
lea
mov
adc
adc
sbb
cmps
popf
adc
inc
call
lods
dec
jge
aad
cmp
rcl
(bad)
neg
jo
mov
pushf
xchg
or
or
xchg
imul
in
push
push
sub
cwde
sbb
gs
mov
lods
pop
and
aad
inc
inc
xlat
rol
or
cmps
pop
or
loope
push
xor
inc
sub
fadd
and
push
int
xchg
in
mov
sahf
push
inc
mov
xchg
shl
mov
jmp
inc
push
jne
xor
pop
call
fcmovne
jl
bound
sbb
mov
add
test
das
retf
mov
stos
shl
xchg
out
stc
addr16
cs
sub
cmp
aad
mov
mov
data16
pop
jg
iret
idiv
pop
(bad)
loopne
push
(bad)
or
jecxz
je
(bad)
sbb
icebp
ror
mov
xchg
xchg
add
xchg
add
inc
sahf
xlat
test
fst
lds
jo
outs
inc
cmp
lds
test
and
xor
sbb
dec
xor
repnz
jns
add
jae
mov
or
xchg
(bad)
lods
gs
pusha
ficomp
lock
cmp
push
dec
push
mov
ficomp
ror
ret
test
bndstx
push
jmp
test
outs
jb
dec
pop
cmc
sbb
into
sub
clc
pushf
mov
push
inc
add
mov
lahf
and
or
shr
pop
sub
(bad)
sub
mov
jmp
xor
xor
push
push
movs
les
je
lods
lods
mov
lods
loope
lahf
dec
mov
loope
cmps
push
out
inc
push
arpl
jns
push
xchg
mov
mov
out
outs
out
inc
jmp
jp
ror
or
dec
js
mov
jns
nop
sbb
sti
cmp
mov
jnp
scas
xor
(bad)
jmp
mov
adc
fs
jo
xor
ss
and
pop
out
and
cdq
sbb
cmps
xchg
cmp
push
push
and
pop
(bad)
xor
out
pop
or
fs
sub
or
mov
xor
mov
cmps
adc
fsub
into
cmps
das
test
sbb
push
pop
jmp
jle
push
mov
push
fidivr
jno
cmp
out
stos
nop
std
cli
fstp
call
inc
stc
add
test
dec
push
outs
sbb
sbb
ds
scas
and
(bad)
aad
push
pushf
div
cmp
fsub
adc
(bad)
mov
std
mov
mov
cmp
cli
xor
mov
icebp
cmps
and
call
sub
sbb
lods
push
or
cmp
pop
enter
xchg
mul
push
fbld
add
sub
dec
sbb
pushf
in
test
pop
adc
bnd
out
es
loopne
ret
xor
jg
mov
ret
push
stc
das
and
shr
xor
xor
aaa
cwde
mov
inc
mov
and
mov
sub
cmp
dec
or
pop
push
and
jmp
jecxz
stos
test
or
movs
dec
dec
(bad)
mov
rcl
or
sub
inc
movs
mov
stos
repz
jae
outs
outs
and
mov
pop
repnz
or
push
and
or
neg
sub
dec
pop
add
test
repnz
outs
sub
icebp
cmps
sub
popf
call
dec
(bad)
jb
inc
mov
aaa
xor
out
gs
mov
sub
je
mov
sub
addr16
in
mov
imul
mov
and
push
shl
sbb
xchg
aas
outs
pop
rol
sub
pop
mov
cmp
adc
add
or
xchg
fwait
push
mov
adc
inc
test
call
ret
(bad)
xor
int
adc
pushf
fcom
push
sbb
arpl
xor
xchg
popa
add
sbb
or
out
mov
pop
test
jmp
pop
pop
mov
test
adc
jns
xor
adc
mov
pop
xchg
cli
sub
pop
lods
push
pusha
and
outs
cmp
mov
pop
shl
dec
or
xor
mov
pop
std
pop
add
(bad)
adc
sti
in
movs
(bad)
jo
adc
bound
sub
pop
retf
repnz
sub
scas
cmp
lahf
int
imul
aas
pusha
or
add
mov
adc
loop
or
int3
cmps
fsub
dec
jle
xor
adc
cmp
pusha
shl
add
mov
js
push
das
sbb
lods
pop
(bad)
idiv
pop
pop
jb
xor
outs
add
dec
jg
clc
or
pop
adc
cs
int
push
xor
stos
retf
push
mov
xchg
adc
and
sbb
push
and
add
xchg
aas
sahf
loop
movs
push
fs
enter
inc
addr16
pusha
lock
push
jmp
rcr
rcl
mov
sub
int
jg
loope
mov
fmul
or
cmps
mov
mov
pop
ja
jno
adc
out
cmps
pop
nop
test
add
add
cwde
mov
mov
inc
or
std
daa
mov
(bad)
mov
cmps
mov
xchg
dec
xor
sub
pop
fld
mov
push
adc
lods
lods
out
hlt
sub
add
ins
cmp
jne
xor
lahf
scas
(bad)
pop
(bad)
xchg
or
xchg
ret
fst
out
mov
push
push
sub
push
ret
fistp
cli
adc
in
daa
xchg
cmp
adc
test
jmp
(bad)
in
popa
jl
sub
mov
loope
mov
pop
mov
aas
aam
xchg
pop
in
cmc
out
xchg
js
pop
movs
shr
inc
cwde
mov
and
(bad)
sub
inc
cwde
xchg
xchg
mov
stos
test
jnp
jno
fimul
jl
cs
xchg
cld
cmp
and
or
ret
push
or
dec
call
fadd
mov
mov
mov
cmp
inc
mov
inc
popf
and
and
pop
jle
ret
hlt
fstp
sbb
and
dec
adc
sub
adc
pop
xchg
mov
(bad)
pop
mov
and
ds
pop
inc
xchg
and
test
into
cmp
dec
in
in
sub
sar
dec
and
(bad)
test
stos
sub
sbb
and
add
into
sub
inc
or
arpl
fisub
ret
cdq
add
out
(bad)
xchg
nop
retf
sbb
mov
es
jge
push
dec
pop
jmp
xor
sbb
pop
jnp
push
xchg
xchg
sbb
test
leave
inc
mov
cmp
cmp
pop
xchg
test
sub
sub
xchg
mov
lea
mov
add
out
dec
test
add
mov
cmove
sbb
or
push
add
gs
call
shl
ret
call
jae
les
stc
frstor
pop
pop
xor
add
inc
sbb
push
out
xor
mov
mov
pop
test
add
in
rcl
jle
popf
pop
js
cmovnp
fldenv
push
push
clc
sti
das
imul
shl
mov
lock
sbb
cmp
mov
adc
or
ja
(bad)
gs
cld
mov
(bad)
and
pop
push
cmp
and
data16
cdq
pushf
leave
pop
pop
mov
add
mov
mov
shl
jbe
ret
iret
scas
sbb
outs
scas
cld
loop
in
sub
dec
pop
retf
inc
shr
mov
popa
jmp
inc
mov
dec
rcr
ret
gs
dec
ret
psrad
add
(bad)
xlat
mov
dec
dec
ret
mov
out
(bad)
(bad)
xor
mov
idiv
rcl
mov
add
xor
cmp
jns
jg
in
mov
je
out
xor
mov
mov
adc
and
repz
mov
aad
inc
data16
or
test
aam
mov
pop
or
xor
push
inc
dec
or
movs
adc
les
jo
jae
sbb
cld
popf
inc
jmp
or
(bad)
fstp
cmc
das
mov
sbb
push
adc
dec
es
jbe
(bad)
sub
xchg
add
inc
mov
or
jo
jmp
das
scas
add
inc
fwait
mov
cmc
fdiv
xchg
ins
jns
sar
adc
jmp
adc
fs
xchg
out
xchg
inc
loop
dec
je
adc
rcr
addr16
jecxz
xor
in
idiv
mov
add
mov
ins
mov
xchg
jbe
adc
xor
inc
xabort
pop
je
mov
xlat
sub
popa
sub
adc
cmps
sbb
fdivr
lea
outs
sbb
test
movs
fld
test
or
mov
jmp
fs
sub
cmp
jbe
scas
inc
out
shl
jo
xchg
arpl
jp
ss
rol
fild
jmp
fcom
cmp
(bad)
ficom
jecxz
pop
cli
mov
(bad)
jmp
or
mov
fsub
inc
pop
xchg
pusha
movs
cmp
dec
mov
mov
push
and
jmp
push
sbb
lds
scas
out
repnz
retf
sub
mov
jmp
xor
inc
fwait
lods
int
aaa
xor
adc
repnz
pop
sbb
sub
mov
jbe
shr
pop
cmp
jb
sbb
clc
push
cs
push
jg
mov
(bad)
mov
sahf
pop
dec
outs
shl
cmp
pop
call
lds
xlat
aad
btc
test
loop
jp
fcom
mov
lds
cwde
xor
xor
adc
push
sbb
mov
test
inc
jle
add
pusha
mov
dec
ds
fldenv
ss
push
push
ins
je
repnz
or
test
and
mov
(bad)
fs
mov
cmp
lds
dec
test
ja
adc
lock
mov
jae
mov
adc
and
xor
xor
pop
lods
sub
fcom
pop
(bad)
std
and
ss
fsubr
jb
xchg
adc
in
or
iret
adc
pop
jle
movs
mov
rcl
mov
jns
jl
xlat
adc
jecxz
sbb
pop
dec
stos
(bad)
pop
sbb
test
mov
push
test
outs
adc
inc
xor
jne
xchg
jmp
das
pop
push
jmp
out
mov
fld
dec
popa
cmps
jbe
or
stos
pop
imul
out
mov
add
and
inc
cld
lods
cmp
fimul
cdq
cdq
adc
adc
jg
adc
push
loopne
sub
lock
mov
or
mov
retf
xor
jp
nop
lahf
and
es
pop
dec
lds
ja
dec
cmp
push
xchg
int
dec
jo
aad
rcl
cdq
mov
clc
pop
push
push
stos
add
fisubr
cwde
das
into
scas
jecxz
push
pop
pop
sbb
and
loop
outs
std
mov
dec
lods
xchg
test
jmp
xor
inc
push
test
xor
or
cmp
ficomp
sahf
sbb
(bad)
sbb
dec
aas
fsub
aas
mov
lahf
cs
aaa
pop
inc
sbb
pop
cdq
ret
in
xchg
les
retf
jmp
test
std
xchg
or
jo
dec
popa
ss
ret
mov
addr16
fs
stos
test
add
dec
nop
sbb
data16
push
cmp
sbb
lods
cli
pop
scas
mov
sub
(bad)
dec
mov
xor
dec
mov
mov
jb
dec
ficomp
(bad)
mov
out
outs
inc
pop
mov
(bad)
(bad)
jmp
fcomip
movs
movs
pop
lods
out
(bad)
pop
(bad)
or
xor
hlt
cmp
test
pop
push
sub
cmps
push
into
int3
mov
mov
retf
mov
jo
sahf
cmps
mov
into
(bad)
pop
aas
and
aad
popf
cmp
adc
or
xchg
sbb
xlat
sbb
psllw
inc
mov
jecxz
cdq
ss
jl
sbb
test
idiv
scas
out
add
push
cmc
outs
stos
jns
mov
mov
mov
les
sub
add
outs
retf
mov
push
sbb
mov
mov
jmp
jge
jg
add
enter
push
and
jb
mov
stc
int
call
xor
hlt
je
(bad)
xlat
(bad)
aam
or
mov
js
daa
imul
cdq
inc
in
mov
stos
idiv
sbb
and
xchg
cmp
cs
mov
mov
imul
in
in
cmc
adc
add
call
stos
(bad)
out
lock
xor
sar
and
sbb
mov
ficomp
pusha
scas
call
ss
xchg
lea
stos
or
dec
ins
sar
fcmovbe
push
pop
into
add
jno
sbb
and
js
xchg
imul
mov
mov
or
or
mov
xor
jo
fidivr
pop
sub
retf
and
inc
dec
dec
mov
jp
pushf
cmp
aad
cmp
add
lea
or
jne
dec
or
ss
pop
in
loop
pop
jecxz
arpl
loope
xchg
jbe
add
popf
sbb
imul
inc
sub
iret
jne
pop
lods
push
sub
cmp
fldcw
add
movs
popa
gs
ret
jmp
(bad)
cld
cmps
movs
ins
test
imul
inc
ja
jo
jp
sbb
ins
mov
sub
push
out
jmp
es
or
les
icebp
dec
call
fs
clc
dec
sbb
jo
xchg
sub
adc
sub
repz
pop
add
push
lods
jmp
scas
stos
in
(bad)
cli
imul
out
jmp
cmp
out
imul
and
rcl
(bad)
in
lods
xchg
mov
enter
xor
jnp
(bad)
outs
test
adc
aaa
jmp
out
sahf
retf
pop
inc
mov
mov
fs
mov
inc
in
mov
iret
and
mov
js
xor
xchg
jl
cmp
push
iret
mov
fwait
xor
ins
cmp
jo
out
pop
lahf
mov
retf
or
loope
rcl
pop
or
jbe
xchg
push
and
add
push
les
pop
test
hlt
shr
fcmovnu
sub
adc
lods
in
fisubr
loope
xchg
push
mov
mov
push
push
jmp
je
fst
mov
mov
call
mov
push
adc
scas
lock
lods
sbb
mov
in
ds
jae
(bad)
out
or
jmp
push
inc
xor
mov
arpl
scas
fwait
cmp
and
(bad)
push
shl
mov
loope
jns
test
cs
addr16
retf
stos
aaa
xchg
push
jo
ds
pop
add
aad
and
stos
aaa
jecxz
fs
(bad)
sbb
lea
mov
(bad)
outs
mov
cmp
or
xor
loope
xor
sbb
jmp
sbb
add
mov
push
or
outs
(bad)
adc
mov
js
call
cmp
(bad)
lea
sar
cmp
in
xchg
cmp
ja
push
nop
psubq
fbstp
xchg
jbe
sub
inc
cmps
(bad)
out
pop
jb
daa
lods
add
mov
mov
clc
repz
lahf
mov
xchg
arpl
in
nop
cmps
mov
mov
stos
gs
aaa
ins
lea
mov
ins
or
retf
fnstcw
push
jmp
(bad)
push
shl
pop
or
dec
test
push
lods
(bad)
(bad)
scas
push
mov
mov
shl
out
pop
and
lock
retf
ret
popf
ins
aam
inc
xchg
out
push
adc
lods
inc
push
bound
loopne
jns
sub
xor
and
jo
stc
push
ffree
mov
mov
add
sub
push
ins
ins
es
sub
mov
ins
xor
out
loope
bound
jecxz
sub
push
mov
ret
pop
push
test
test
mov
jbe
cmp
pop
xor
sti
lds
and
jno
push
jne
jb
bnd
fsub
sbb
stos
enter
or
aas
push
fcomp
aam
sub
or
sub
cs
scas
xchg
loope
cmc
add
add
(bad)
jmp
jmp
add
fs
ret
adc
or
mov
sahf
fs
push
retf
into
fs
cld
add
jle
and
push
loope
aam
fwait
sub
clc
mov
sbb
mov
lods
dec
or
adc
dec
dec
cmp
pushf
xor
dec
ins
cmps
jae
retf
int3
sbb
in
neg
and
mov
add
jnp
adc
(bad)
push
dec
and
bound
scas
retf
jmp
inc
movs
push
stc
(bad)
outs
push
mov
pop
retf
dec
frstor
jne
lods
dec
push
(bad)
in
adc
jns
fwait
push
sahf
fild
cmp
add
call
cmp
or
iret
cmp
mov
push
xor
clc
int3
shl
sbb
sahf
hlt
jns
jb
pop
pop
clc
sbb
adc
cmc
rcr
imul
xor
adc
mov
add
jmp
mov
fiadd
(bad)
mov
pop
xchg
call
call
cmps
push
outs
or
cmps
push
push
aam
lahf
mov
sub
and
or
mov
fdivr
and
dec
sub
test
or
sar
push
sbb
and
ss
(bad)
arpl
icebp
mov
cs
xchg
ins
data16
test
or
cmp
cmp
adc
and
std
cmp
mov
cmp
xchg
fs
cs
fcmove
pushf
gs
test
pop
dec
cmc
add
jecxz
ins
fisubr
fistp
out
stos
xchg
pop
dec
jae
popa
push
fdivr
inc
dec
mov
loop
loop
pop
iret
and
shr
int3
adc
sub
cmp
(bad)
cs
jle
mov
push
pop
pop
mov
cmp
dec
sbb
push
xchg
jecxz
out
inc
xor
add
dec
cmps
hlt
fs
sub
add
loop
xchg
mov
repz
lods
fisttp
lods
inc
add
adc
push
adc
cmp
inc
ins
sar
addr16
movs
mov
mov
pop
xchg
or
and
push
push
jle
mov
xchg
cmc
popa
clc
div
xor
call
loope
shl
enter
mov
xchg
add
das
mov
aaa
jl
cdq
mov
fldlg2
stos
mov
lods
sbb
cmps
dec
sub
push
mov
inc
inc
jno
sahf
ret
jns
mov
or
push
cmp
adc
test
push
and
xchg
(bad)
or
mov
add
lods
cli
cmp
xchg
cmp
ss
(bad)
lods
jmp
mov
jg
test
jnp
mov
fwait
adc
out
fst
addr16
push
pop
pop
retf
mov
outs
adc
ss
es
push
adc
or
adc
cld
in
lods
ficomp
rcl
jb
lds
aam
push
pop
add
icebp
mov
xchg
and
dec
push
and
popa
int
int3
sahf
xor
pop
iret
stos
std
out
sti
scas
ds
std
xchg
jle
pop
aad
int3
hlt
dec
xrelease
cs
push
jmp
jmp
mov
stos
in
inc
fcomp
icebp
and
das
pop
sti
imul
push
jmp
cdq
call
int
push
loop
arpl
nop
push
push
out
hlt
pushf
jne
gs
xchg
sbb
cmc
jns
xchg
jb
lds
mov
sbb
dec
dec
mov
pop
dec
pop
adc
in
test
in
xchg
or
push
icebp
and
fdiv
dec
lea
mov
aas
test
(bad)
mov
xchg
adc
(bad)
stc
loope
sub
in
fld
fmul
sub
fst
aam
ret
jae
inc
mov
inc
xchg
jp
or
ds
in
cmp
or
xor
or
or
adc
das
inc
dec
mov
pop
pop
xor
or
xchg
pushf
or
pop
fst
fstp
repz
nop
inc
pop
adc
unpckhps
fadd
arpl
aaa
(bad)
sbb
mov
add
sbb
pop
addr16
dec
xchg
xchg
mov
push
aaa
loope
cwde
jnp
or
jmp
pop
shr
sub
jle
inc
leave
and
sbb
inc
fcmovne
xchg
xchg
movs
arpl
pop
(bad)
pop
rcl
lahf
dec
xchg
xchg
fwait
lods
dec
mov
and
xor
jl
sbb
jnp
(bad)
retf
sub
inc
jnp
xor
sbb
jge
fdiv
cld
sub
in
xor
in
push
mov
sub
push
cmps
mov
int
push
fcmovu
jecxz
cmp
imul
adc
cmp
das
fmul
inc
retf
lods
cld
xchg
(bad)
add
inc
mov
inc
mov
arpl
jne
or
or
and
in
out
lea
dec
jae
push
cmp
popa
fwait
aam
xor
sub
das
arpl
fcomp
mov
or
push
add
cs
lods
sub
out
mov
xor
cld
les
pop
idiv
push
clc
or
mov
xor
add
push
push
loope
retf
fwait
push
mov
repz
jecxz
xchg
pop
sbb
push
dec
popf
ds
jp
dec
jp
jnp
xlat
adc
cdq
ret
mov
push
stos
ror
out
cmp
push
shr
lods
cld
jno
add
(bad)
cmp
adc
dec
fcomip
add
icebp
iret
pop
leave
sub
jns
jae
adc
fmul
dec
(bad)
push
data16
mov
lods
inc
and
retf
ror
inc
stos
push
pop
inc
push
jno
retf
fs
stos
das
xchg
pop
xor
ss
lods
(bad)
sbb
inc
daa
iret
add
aam
pop
iret
cmp
mov
or
in
popf
fist
out
ins
pop
call
ins
(bad)
cmps
or
dec
adc
mov
jbe
into
mov
xchg
push
hlt
or
dec
xor
pop
or
mov
xchg
xchg
inc
(bad)
or
scas
jge
mov
rcr
jb
xchg
inc
pop
test
sbb
inc
cmps
adc
pop
aas
jecxz
or
shr
mul
out
pop
test
gs
icebp
loope
(bad)
retf
aad
mov
pop
sbb
xchg
in
pusha
jno
cli
or
xchg
cmc
sti
shr
xor
xchg
jle
mov
sbb
sub
mov
fadd
(bad)
xor
retf
shr
imul
in
loopne
push
push
repz
sbb
inc
aad
adc
les
cmps
push
les
fiadd
out
xor
retf
stos
pop
sahf
push
or
sbb
out
adc
xchg
call
dec
shl
sbb
push
xor
jge
ins
fadd
mov
inc
xor
(bad)
sbb
push
adc
shl
sbb
mov
enter
in
out
addr16
je
pop
div
outs
mov
outs
sub
mov
jg
jbe
imul
push
jae
idiv
sub
pop
jp
out
fnstcw
jae
xor
mov
jbe
shr
mov
jno
fldenv
pop
dec
dec
push
sbb
dec
or
jno
mov
jno
(bad)
not
stos
push
mov
sti
jle
xor
pop
hlt
sbb
sbb
cmc
xor
movs
add
sub
inc
push
mov
jmp
iret
out
jmp
xor
cmp
bound
pop
push
adc
or
xor
daa
jno
dec
dec
repz
fisubr
xchg
(bad)
popa
dec
and
jg
mov
adc
mov
out
mov
jl
imul
jp
sub
dec
jae
les
jp
pop
xchg
call
hlt
test
mov
inc
or
int
and
jns
mov
adc
xchg
dec
mov
fadd
(bad)
js
mov
in
cli
xor
mov
push
dec
jmp
sbb
add
xchg
retf
retf
push
and
xor
mov
dec
xlat
jecxz
push
mov
call
sub
mov
pop
and
pop
dec
(bad)
pop
in
and
pop
ret
(bad)
xor
xchg
gs
scas
sub
dec
dec
jl
inc
or
jle
jae
mov
loope
stos
aam
lods
or
in
add
sub
test
ret
retf
inc
push
mov
test
cs
cmp
icebp
std
scas
sbb
xor
pop
fimul
in
jno
outs
cmp
popa
(bad)
fucomp
or
pop
retf
sub
xor
mov
jns
inc
jmp
xchg
cli
lahf
(bad)
jmp
or
dec
xlat
inc
mov
fcom
jmp
scas
js
jno
jg
mov
xor
xchg
adc
(bad)
nop
loop
das
cld
adc
sbb
daa
(bad)
test
xor
xadd
shl
test
enter
retf
out
dec
xchg
jp
aaa
fwait
cwde
jo
lods
cli
ror
fmul
jg
aaa
or
pushf
arpl
and
js
or
je
fwait
dec
mov
sti
mov
imul
mov
mov
and
loop
jmp
test
jnp
repnz
loope
js
sahf
or
pop
cmp
push
in
push
push
push
and
scas
iret
push
repnz
scas
lock
jbe
(bad)
cmps
(bad)
loope
mov
ins
sbb
mov
add
and
aas
lods
stos
or
pop
repnz
cmp
jne
jo
icebp
lods
retf
leave
cmp
ret
add
aad
adc
jb
xchg
cmp
jbe
mov
push
mov
lahf
neg
pop
adc
retf
push
add
aam
sbb
out
cmps
bound
movs
mov
push
js
dec
and
dec
test
sbb
sbb
pop
ins
xchg
or
dec
mov
cmp
jbe
push
out
mov
cdq
inc
xchg
imul
pushf
(bad)
sub
addr16
and
ds
cmp
int
dec
adc
mov
mov
cli
retf
les
or
mov
inc
cmovge
jp
hlt
mov
xchg
icebp
pop
dec
push
lods
imul
pop
dec
test
jmp
jb
jno
shr
lds
dec
jg
jo
mov
popf
pusha
push
push
clc
mov
pop
cmp
jmp
addr16
cdq
mov
adc
daa
loopne
outs
into
out
int3
in
(bad)
pop
mov
shr
adc
mov
cmp
out
or
pop
ds
popf
push
leave
fstp
inc
outs
(bad)
push
push
iret
dec
jl
fmul
push
retf
pusha
or
outs
cmps
addr16
sub
or
fs
adc
pop
sbb
sub
ftst
pop
(bad)
mov
pop
loop
and
ret
mov
sub
cld
call
enter
in
out
pop
mov
outs
pop
adc
push
sub
fsub
mov
shl
and
push
frstor
mov
mov
sub
jl
push
xor
dec
lods
push
push
imul
lahf
shr
adc
lahf
or
cwde
xchg
xor
fwait
leave
adc
bound
cmp
xor
loop
inc
jb
pusha
and
sar
movs
push
add
mov
je
mov
sub
jge
loope
or
js
pop
add
push
nop
(bad)
in
sahf
ret
xlat
rcr
outs
fadd
cs
sbb
test
and
or
hlt
inc
and
mov
retf
pop
inc
jmp
sti
xor
inc
adc
pop
add
jl
scas
pop
call
adc
scas
jno
jge
add
movs
or
inc
xor
and
ins
push
dec
(bad)
mov
pop
inc
add
movs
mov
xchg
jb
jns
jmp
clc
clc
mov
add
or
inc
jle
into
lds
sbb
or
imul
outs
stc
sti
jns
add
pop
fdiv
xor
inc
jg
adc
ja
xlat
push
mov
mov
cmp
sbb
inc
or
add
sub
xchg
daa
repz
fadd
mov
rcl
jp
mov
aad
ja
add
push
pop
test
pop
cmp
fistp
pop
out
imul
sbb
push
cmps
and
sub
pusha
mov
adc
mov
push
push
xrelease
lock
xor
arpl
repnz
push
inc
loope
int3
movs
(bad)
in
xchg
jno
(bad)
jmp
add
mov
push
cmps
mov
idiv
in
retf
movs
(bad)
dec
push
mov
ficomp
mov
inc
test
out
pusha
(bad)
inc
outs
js
xchg
jp
mov
xchg
push
push
mov
jo
inc
mov
sub
adc
cmp
mov
test
pop
sbb
in
or
hlt
add
enter
leave
and
fs
fwait
test
imul
xchg
and
xor
mov
lahf
aad
aad
repnz
stos
and
inc
push
test
aam
(bad)
mov
test
cmp
adc
popf
mov
jecxz
ss
hlt
daa
movs
jle
mov
call
and
(bad)
in
pop
cmp
(bad)
mov
or
into
add
hlt
imul
in
xchg
push
sub
lock
or
cs
inc
sub
mov
push
add
push
outs
outs
adc
mov
shl
adc
cmps
cdq
popa
mov
retf
dec
lds
add
std
jnp
cs
inc
ret
(bad)
xchg
mov
or
sub
xchg
jae
sub
sub
sbb
jmp
push
fsubr
cmp
cmc
lods
xor
je
repz
rol
push
jae
xor
adc
nop
mov
or
ret
jae
(bad)
fnstcw
das
and
retf
jns
shr
push
dec
mov
xchg
fsubr
cmc
dec
cmp
mov
int3
pop
jnp
mov
push
les
jp
jae
repz
dec
(bad)
xor
(bad)
or
mov
mov
out
add
sar
arpl
pop
xchg
dec
mov
push
jne
hlt
aas
sbb
(bad)
jge
dec
out
bound
imul
and
push
fs
(bad)
mov
mov
test
jmp
mov
push
pop
pop
mov
sahf
lds
and
ror
and
jae
fisubr
inc
scas
xchg
les
adc
dec
and
stos
pop
lods
lds
addr16
adc
adc
ficom
idiv
jno
cmp
aaa
icebp
pop
std
dec
lahf
mov
das
out
cmp
loop
adc
addr16
fiadd
leave
out
mov
pop
dec
out
fsubr
cmp
std
dec
mov
dec
dec
mov
and
je
add
callw
add
push
cmp
dec
call
xor
jmp
mov
cmps
or
mov
sahf
lea
cmp
fisubr
cs
and
push
out
push
es
movs
aam
mov
adc
mov
and
pop
movs
shr
xchg
inc
sbb
sub
lds
adc
mov
push
mov
gs
sbb
fild
jne
test
data16
retf
pop
in
adc
sahf
icebp
xchg
in
xchg
and
jmp
xchg
ins
stos
mov
rcl
pop
shr
retf
nop
stos
xchg
jns
aaa
ret
mov
mov
(bad)
mov
neg
pop
gs
fnstsw
dec
dec
(bad)
jb
dec
push
pop
sar
enter
xchg
inc
mov
add
mov
int3
mov
repz
outs
stc
jecxz
shl
add
and
pop
push
repnz
pop
adc
mov
mov
out
fwait
push
enter
cld
xchg
nop
sbb
push
xchg
clc
pop
sub
mov
push
fdiv
sub
mov
add
hlt
data16
fadd
sub
aaa
lods
or
jmp
sbb
mov
rol
dec
dec
pop
jmp
sbb
sti
mov
push
and
cmps
mov
mov
arpl
imul
adc
add
mov
sbb
fld
dec
pusha
push
push
lds
or
fisub
fnstsw
xchg
in
dec
inc
(bad)
aam
cmp
push
stc
not
movs
loopne
in
or
mov
data16
(bad)
enter
mov
xor
mov
add
sar
pop
fldcw
inc
int3
bound
fimul
adc
mov
dec
sub
jo
clc
ficomp
adc
pop
cmps
mov
jmp
xchg
int
dec
add
cli
cmp
mov
mov
mov
sahf
xchg
add
add
inc
imul
jmp
push
mov
adc
call
rcr
in
sub
adc
je
push
pop
stc
xchg
jmp
ja
dec
mov
pusha
je
hlt
mov
mov
clc
jle
cli
inc
fwait
adc
jecxz
call
ins
add
jg
push
mov
dec
call
loopne
fs
xor
std
or
test
jge
sub
push
add
push
cmps
add
dec
das
xchg
movs
add
sub
psraw
das
retf
rcl
in
jns
pop
imul
sbb
stc
movs
sub
push
or
int
sbb
mov
xor
leave
push
sahf
movs
xchg
add
xor
movs
repz
push
and
aas
cs
daa
mov
push
mov
or
xor
sbb
inc
stos
push
jge
sbb
movs
stos
out
push
sub
retf
cmps
outs
dec
adc
xchg
leave
neg
int
sub
ror
and
lds
clc
jmp
es
aas
dec
and
int
sar
addr16
mov
sahf
add
pusha
cld
push
retf
popa
cli
jl
int3
imul
pop
dec
test
pop
out
data16
mov
add
(bad)
call
ja
sbb
shr
push
dec
inc
pop
out
test
mov
mov
fidiv
aad
in
popf
mov
jmp
jp
cmp
(bad)
retf
call
xchg
aas
xchg
(bad)
mov
mov
js
mov
loope
jmp
ret
xchg
outs
jnp
dec
pop
and
dec
sbb
mov
(bad)
ret
xor
ret
adc
std
pushf
and
jae
xorps
jmp
hlt
in
popf
pop
fst
jbe
imul
xchg
mov
xor
aam
dec
sbb
int
mov
ins
jg
(bad)
mov
in
scas
mov
pop
(bad)
adc
(bad)
push
shr
inc
clc
in
cmp
stos
icebp
das
out
cmp
cdq
ins
sahf
mov
inc
or
jae
push
imul
data16
or
dec
loope
sub
pop
jge
stc
cmp
mov
jns
cs
ja
sbb
ja
push
fimul
jns
rcl
movs
pop
cwde
push
cmp
lahf
pmulhuw
leave
in
test
lods
mov
and
clc
add
pop
dec
inc
cmc
(bad)
xchg
sbb
dec
test
mov
inc
cmps
sub
xchg
pop
mov
or
js
and
rcl
les
push
(bad)
cmp
lods
ins
nop
loop
mov
xor
int3
mov
mov
pushf
dec
mov
pop
and
sub
and
loope
hlt
sbb
mov
inc
and
xor
jmp
rcr
addr16
test
adc
inc
out
jo
pop
lds
dec
inc
out
lds
adc
adc
leave
adc
jg
mov
mov
je
jne
ja
jo
cmp
faddp
mov
and
pop
mov
repz
adc
adc
gs
aam
pop
rcr
or
call
lea
out
ds
inc
sub
jb
das
push
adc
xchg
adc
push
fwait
or
dec
push
mov
repnz
mov
or
mov
jo
test
test
movs
or
cmp
mov
jecxz
push
rol
cmp
test
xchg
(bad)
xchg
hlt
cmp
dec
ins
jae
push
outs
sub
dec
test
push
jb
sub
cld
inc
ds
and
cwde
imul
pop
std
repnz
jb
sbb
add
mov
retf
mov
mov
cmp
bound
mov
jbe
popf
sbb
fst
loope
in
jle
out
lods
fdivr
addss
jmp
sbb
pop
out
out
or
add
fild
cmp
jge
add
and
jmp
cmp
jb
sahf
xor
xchg
cmps
fisubr
lods
mov
push
jmp
pusha
xor
pop
inc
add
xlat
das
dec
xchg
sbb
or
pop
xor
retf
(bad)
mov
daa
ja
and
mov
xchg
jl
jl
pushf
(bad)
mov
fs
ins
add
mov
mov
dec
or
push
pushf
jmp
dec
ret
sub
sbb
ja
call
adc
stc
bound
mov
cmp
jle
aam
cdq
or
dec
mov
scas
pop
out
mov
movs
xchg
icebp
daa
jp
nop
call
push
xor
mov
jmp
dec
jp
push
test
fisubr
jmp
sbb
aas
inc
jo
sbb
dec
sbb
gs
sbb
call
ja
out
lahf
mov
cmp
inc
mov
inc
mov
adc
xlat
(bad)
mov
jmp
inc
mov
cwde
mov
pop
pop
pop
push
loopne
pop
mov
bound
rol
(bad)
(bad)
mov
dec
jb
sub
or
popa
cmp
stos
push
xchg
xor
aaa
test
push
les
cdq
inc
pop
ret
fld
test
popf
and
scas
or
mov
enter
test
add
out
imul
out
das
loop
sub
push
and
int
cdq
xchg
inc
adc
mov
dec
pop
movs
aad
or
aam
sbb
inc
repnz
and
push
ret
add
mov
in
fisttp
out
fsubr
std
fadd
retf
or
cld
mov
arpl
cmps
add
or
out
mov
sbb
mov
xchg
ja
adc
dec
or
push
imul
push
dec
into
jmp
in
add
loope
and
lahf
aaa
pop
test
in
jge
pop
out
cmp
jbe
dec
leave
ja
mov
iret
mov
mov
and
(bad)
adc
imul
mov
rcl
dec
lahf
push
call
mov
jne
inc
dec
das
adc
jns
or
xchg
sti
js
cmps
and
pop
dec
mov
mov
cmps
(bad)
push
(bad)
cmp
rcr
xchg
xor
and
repnz
ins
cmp
into
push
fstp
push
or
xchg
in
in
mov
enter
leave
aaa
pop
ror
pushf
add
mov
and
stos
std
sbb
lods
inc
fs
pusha
lea
mov
ror
jb
xor
mov
fld
jbe
push
gs
dec
adc
sbb
xchg
adc
or
dec
pop
mov
sub
inc
or
xlat
jno
pop
cmp
mov
jne
sar
sbb
mov
xor
sub
pop
lea
imul
fdiv
mov
jp
sbb
xchg
lahf
jmp
dec
push
jns
pop
(bad)
stos
popa
std
sub
das
popfw
mul
cwde
sub
rcl
outs
sub
iret
xchg
loope
or
pop
mov
dec
dec
repz
(bad)
out
mov
lock
mov
lahf
(bad)
mov
cs
gs
ror
or
ja
outs
dec
xlat
ins
xchg
fstp
aad
pop
not
xchg
ret
cmp
push
xchg
ret
pop
mov
xchg
mov
ds
inc
(bad)
popa
mov
inc
dec
inc
xor
inc
and
call
xchg
aam
jmp
or
pop
sbb
xchg
aas
stos
rcr
add
sbb
cmp
mov
push
push
jnp
mov
lods
xor
stos
jns
and
fwait
pop
or
mov
xor
inc
in
adc
or
adc
sbb
push
and
sbb
popf
fisttp
dec
enter
dec
repnz
xchg
lahf
ret
mov
xchg
pusha
ret
das
cmp
loop
rcl
xchg
daa
dec
mov
mov
std
push
mov
pop
cmps
fwait
add
mov
pop
jp
or
adc
adc
neg
inc
cmp
dec
js
adc
sub
ins
lahf
stc
add
pop
mov
inc
mov
movs
add
cmp
outs
push
fdivr
scas
outs
adc
mov
mov
jmp
dec
push
and
adc
add
inc
cwde
pop
push
retf
pop
nop
ret
pop
cli
sbb
loop
popa
push
sbb
call
push
mov
sahf
inc
(bad)
jns
cli
adc
inc
mov
mov
and
jge
ret
repz
push
push
cmp
mov
int
cmp
dec
and
jp
push
sub
std
in
out
sub
repnz
gs
mov
les
cmps
fdiv
mov
in
in
inc
mov
or
adc
jno
jb
shr
sbb
sub
gs
retf
xchg
int3
lods
inc
ficom
js
mov
imul
jmp
cmp
jmp
xchg
gs
in
mov
or
add
ja
ja
outs
cmp
fstp
ds
jle
ror
pop
stos
fcmovnu
mov
adc
movs
fdivp
test
or
adc
inc
dec
dec
pop
cmps
in
in
out
loopne
or
push
out
cld
lea
jnp
sbb
jl
cdq
fisub
aas
cld
clc
test
leave
jo
popf
(bad)
push
or
jns
(bad)
and
sbb
xchg
into
lods
jmp
push
mov
fs
rol
add
sub
in
outs
cdq
(bad)
jmp
pop
dec
inc
cld
into
call
stc
iret
sbb
sahf
jns
xchg
push
sahf
and
pop
xchg
movs
imul
pop
sbb
test
sub
pop
inc
xchg
jmp
fnstsw
mov
cmp
cmp
dec
sub
jae
mov
push
xor
or
xchg
test
scas
ret
scas
sahf
out
cwde
outs
adc
and
xchg
xchg
or
push
jo
inc
popf
sar
repnz
clc
in
lods
xor
pop
push
ret
das
rol
data16
(bad)
ss
xchg
(bad)
arpl
mov
arpl
sbb
and
(bad)
pop
sbb
data16
pop
inc
and
pop
nop
cwde
stc
jne
or
(bad)
fs
(bad)
fs
daa
js
int
mov
addr16
pop
out
mov
aas
ds
jno
mov
cdq
push
push
cmps
test
push
push
loopne
push
call
mov
jecxz
xchg
jmp
repnz
fidivr
mov
aas
xchg
(bad)
int3
inc
movs
inc
push
fld
inc
mov
cli
mov
or
jno
aaa
aam
sbb
or
call
cmps
dec
inc
jno
je
cmps
test
mov
push
sahf
adc
jo
pop
xor
ins
xchg
in
xchg
fwait
or
or
push
add
xchg
xor
shl
xor
push
popf
shl
call
fadd
adc
ins
mov
nop
and
repz
out
xor
gs
sub
xor
cs
xchg
push
mov
fidivr
mov
pop
shl
(bad)
fist
mov
std
call
mov
dec
push
xlat
pop
mov
mov
aam
mov
mov
push
cmp
popa
pop
mov
adc
pusha
popf
jno
push
cmps
outs
push
popf
xchg
xchg
mov
push
jecxz
aad
lds
and
adc
sub
mov
scas
mov
pop
popa
push
stc
repnz
cli
in
addr16
sub
in
(bad)
dec
das
xchg
mov
push
cmps
sbb
fld
out
mov
scas
ret
mov
xor
in
xchg
inc
(bad)
rcl
icebp
mov
jmp
mov
call
out
cwde
xchg
imul
out
addr16
xchg
lock
fdivr
dec
lock
imul
stc
jns
scas
jl
mov
add
rcl
(bad)
xchg
adc
adc
and
fstp
dec
loopne
sbb
addr16
xlat
sbb
jb
pop
mov
push
mov
stos
jo
mov
ja
rol
mov
outs
inc
jns
adc
xchg
ja
jbe
and
xchg
adc
addr16
(bad)
push
jmp
add
lock
call
xchg
push
xor
out
test
jge
mov
scas
mov
mov
adc
(bad)
imul
in
fiadd
rcl
inc
not
jbe
push
lahf
fcomp
out
aas
sub
retf
sbb
(bad)
jmp
dec
cmps
loop
adc
arpl
clc
jno
sbb
jg
nop
out
mov
and
sbb
lahf
clc
ins
sbb
out
imul
dec
and
jns
sti
shl
cmps
pop
mov
jmp
xchg
test
mov
pop
mov
ss
call
inc
es
mov
aaa
jb
daa
addr16
mov
mov
pop
js
dec
add
inc
sub
cwde
lock
pop
jns
fild
add
dec
sbb
pop
xchg
adc
xor
pop
lds
xor
or
push
loop
aad
in
mov
imul
adc
or
(bad)
lea
mov
add
repnz
ins
adc
sub
mov
neg
fistp
fs
push
add
pop
adc
xlat
add
dec
js
outs
cld
fstp
das
jmp
jae
shl
mov
push
inc
ja
inc
xchg
xchg
movs
mov
adc
retfw
inc
scas
xchg
inc
jnp
and
and
call
neg
retf
mov
mov
imul
ret
push
sub
nop
vpshlq
jb
or
or
fwait
inc
pop
adc
xchg
mov
xchg
mov
or
pusha
dec
add
scas
(bad)
bound
std
enter
dec
mov
cmps
mov
xor
mov
sub
fsubr
sub
jg
jno
out
jmp
xchg
sub
and
jge
xor
ins
cwde
or
dec
loope
pop
mov
xchg
cwde
pushf
jg
mov
dec
xchg
enter
xchg
ss
push
or
adc
je
add
out
sub
push
dec
in
inc
jns
add
pop
ret
inc
mov
loop
fmul
movs
xchg
ds
pop
adc
les
stos
lds
dec
dec
xor
and
inc
push
icebp
mov
cwde
push
dec
push
lock
mov
repnz
sub
ss
fwait
mov
push
ins
ds
pop
mov
aad
add
xchg
(bad)
cwde
sub
inc
pop
dec
(bad)
shl
repz
xlat
icebp
inc
idiv
imul
test
rcl
pop
mov
adc
mov
or
mov
ja
call
dec
je
retf
mov
pop
push
add
addr16
add
lock
mov
cmp
mov
loop
lea
mov
xchg
push
or
sub
jmp
popa
jg
jbe
sbb
ret
test
dec
mov
mov
cli
mov
sub
mov
inc
cmp
xchg
fsubp
cmps
imul
aaa
(bad)
retf
lea
ficom
cmp
pop
and
ss
sub
or
into
xor
dec
add
sbb
jg
push
loop
add
clc
and
out
(bad)
jg
mov
push
add
or
add
ins
mov
jl
inc
dec
lods
dec
and
and
aam
mov
mov
xchg
sar
stos
das
out
sbb
or
fcom
sbb
mov
mov
jp
adc
leave
or
mov
xchg
or
mov
(bad)
loope
imul
cld
mov
inc
(bad)
mov
adc
push
sbb
movs
leave
pop
fld
cdq
mov
ror
aas
(bad)
jo
pop
add
repnz
mov
mov
cwde
push
push
inc
into
mov
pop
adc
and
push
call
je
in
jl
stos
fild
dec
sbb
xchg
call
dec
cmps
cmp
outs
mov
mov
mov
(bad)
fcmove
or
aam
addr16
fild
lahf
mov
cmp
and
fwait
aaa
cmp
dec
sbb
sub
test
pop
mov
jmp
cli
(bad)
icebp
sub
xchg
cwde
xchg
fwait
push
xor
ret
leave
test
imul
adc
or
mov
or
push
jb
xchg
sar
jmp
movs
and
add
push
sar
push
mov
pop
jmp
loopne
mov
push
ret
xlat
js
add
test
adc
out
mov
mov
test
(bad)
aam
jnp
sub
and
int
movd
adc
push
(bad)
test
pop
xor
or
mov
out
jle
push
imul
outs
setno
scas
adc
sub
xor
mov
and
sub
dec
push
mov
mov
cmp
mov
int
(bad)
adc
lods
pop
les
cmp
fbstp
add
daa
add
sti
shr
dec
shr
sahf
inc
xchg
int
dec
les
and
movd
(bad)
(bad)
and
pop
xchg
pop
xchg
inc
lods
bound
push
out
adc
leave
dec
xor
mov
dec
pop
push
aas
xor
adc
out
cmps
xchg
mov
push
mov
mov
mov
sub
adc
mov
call
out
dec
(bad)
sti
loope
fidivr
xlat
push
repnz
in
mov
shl
movs
inc
out
loopne
lods
xor
inc
movs
sub
sub
mov
sahf
add
xlat
lds
dec
jae
jge
add
cmps
pop
(bad)
mov
pop
loopne
xor
popf
xchg
les
sahf
jge
xor
jnp
push
add
(bad)
in
mov
(bad)
outs
fcomip
cli
xchg
repz
push
out
jne
std
mov
xchg
pop
pop
movs
mov
xchg
lods
shl
cld
movs
jmp
xor
dec
or
or
mov
mov
fs
add
iret
xor
fidivr
jcxz
lds
add
dec
dec
lea
or
mov
sbb
je
jo
pop
xchg
ror
sub
aaa
add
lods
retf
adc
std
mov
gs
aam
test
dec
stos
cmp
xor
xor
retf
in
jae
push
add
aam
addr16
inc
(bad)
in
dec
jns
xor
push
outs
sar
mov
(bad)
fdivr
int3
sbb
sub
lea
dec
outs
jg
mov
dec
outs
mov
inc
retf
jae
mov
xchg
and
sub
(bad)
sub
mov
pop
out
sbb
retf
xchg
jmp
lock
test
pop
jle
sub
lds
daa
xor
clc
mov
fwait
mov
aaa
sub
xor
push
lock
in
sbb
mov
inc
jb
jne
sub
fcom
cmc
imul
gs
inc
inc
mov
out
nop
jno
xchg
inc
dec
sub
cmp
jp
mov
inc
and
ret
mov
out
lock
mov
sub
out
mov
mov
jl
push
repnz
movs
aas
jmp
jo
shl
and
je
mov
iret
lods
stos
lea
jae
stc
sti
mov
push
sbb
mov
jge
int3
outs
mov
xchg
push
fs
call
aaa
add
in
imul
jl
jno
int
xchg
aas
enter
fdiv
jge
(bad)
push
je
cmps
ja
out
enter
icebp
sbb
loopne
push
enter
sub
cwde
dec
ret
mov
jg
dec
pop
mov
xchg
stos
dec
sahf
cmp
or
mov
lahf
in
dec
jns
stos
sbb
and
add
xchg
jnp
call
jo
(bad)
fwait
jbe
icebp
or
jo
adc
stos
pop
push
ret
out
sbb
hlt
cs
xor
sub
ret
pop
movs
adc
fbstp
push
add
cmp
xchg
adc
dec
push
sbb
mov
mov
mov
push
stos
dec
adc
dec
push
or
xchg
movs
sti
sub
push
pop
cmps
push
inc
fiadd
je
add
jae
mov
dec
adc
mov
inc
sub
push
jb
test
aas
or
sbb
xor
pop
lock
lea
mov
loop
mov
ret
xchg
adc
(bad)
dec
retf
xlat
sbb
mov
cmp
mov
jno
pop
jmp
lea
inc
jae
in
jg
fiadd
sub
and
(bad)
pop
push
push
cmp
stc
daa
imul
push
aas
sub
shl
(bad)
inc
dec
or
outs
inc
(bad)
pop
xor
adc
mov
adc
stos
dec
inc
mov
dec
inc
test
(bad)
into
sbb
mov
jne
imul
and
outs
sbb
push
test
pop
cmp
out
and
sub
outs
mov
aaa
loop
mov
mov
mov
mov
sub
mov
xor
dec
push
ret
lods
daa
arpl
mov
push
out
popa
jo
push
int3
xchg
mov
jp
das
clc
mov
(bad)
repnz
sbb
in
int
xchg
bound
enter
push
outs
push
add
mov
xor
xchg
xor
(bad)
xchg
fidivr
jae
jne
cmp
cwde
ins
mov
or
cmc
and
ss
and
adc
loopne
sahf
lea
les
gs
mov
(bad)
xor
xchg
ins
rcl
mov
leave
mov
pop
jne
in
mov
in
out
scas
xor
or
jnp
sbb
not
mov
ins
fild
lahf
bnd
imul
inc
xchg
data16
push
out
jecxz
rcl
push
cmps
mov
cmp
int3
test
leave
pop
push
sbb
stos
cmc
repnz
jns
aad
xchg
pop
cmc
xchg
scas
loop
mov
ins
fwait
aad
arpl
push
push
pop
(bad)
add
movhps
xor
call
enter
pop
sub
mov
addr16
xchg
popf
stc
mov
push
mov
add
cmp
jne
stos
gs
fimul
int3
sbb
jecxz
pushf
and
mov
fnstenv
xchg
in
mov
fisttp
push
add
aam
push
sub
add
add
pop
das
shl
dec
pop
lock
xor
xchg
std
sub
loope
(bad)
in
scas
dec
in
pop
fbld
mov
jae
xchg
test
adc
data16
push
jle
push
mov
jno
les
call
add
fldcw
add
jb
sbb
sbb
sahf
call
ret
pop
add
(bad)
sub
sbb
mov
and
xchg
xor
xor
mov
test
mov
xor
ins
xchg
xor
(bad)
and
ss
add
out
imul
push
inc
xchg
retf
popa
inc
das
fs
jecxz
loopne
ja
jp
inc
add
movs
pop
ror
test
sub
or
in
(bad)
xchg
dec
fstp
ret
push
or
mov
(bad)
mov
jnp
mov
xchg
sbb
in
rol
mov
stos
rol
ins
neg
lods
sub
ret
cmp
jne
aas
cmp
add
mov
movs
cmp
retf
shl
sub
outs
or
or
je
and
inc
pusha
lahf
push
in
inc
rol
pop
cmps
lahf
mov
movs
cmp
test
and
les
lods
and
fdiv
cld
push
dec
lahf
or
jg
test
and
adc
pop
or
in
aaa
leave
mov
(bad)
xor
dec
not
pop
pop
jne
es
rcl
sbb
pusha
lods
dec
lods
enter
rep
push
cmp
adc
pop
cmps
pop
mov
push
cmc
imul
fidivr
dec
jne
inc
imul
sub
aaa
pushfw
shl
adc
mov
xchg
pop
jnp
inc
stos
xchg
loopne
push
adc
pop
sub
mov
add
inc
xor
mov
outs
std
push
cmps
inc
jge
out
test
dec
call
sub
ret
repz
mov
arpl
mov
mov
out
popa
cmovae
popa
mov
ins
in
sub
div
das
mov
sub
outs
sub
cli
or
mov
sbb
pop
add
rcr
mov
out
loope
lods
les
mov
mov
shr
mov
test
xchg
icebp
and
scas
add
int
bnd
jns
adc
dec
mov
fidiv
sbb
loop
jg
lods
addr16
mov
repnz
(bad)
popf
pop
les
mov
in
mov
in
cmps
xchg
je
xchg
jmp
cmps
jne
pop
sub
lods
or
xor
das
xchg
mov
jo
(bad)
aas
mov
es
push
xchg
jge
push
daa
arpl
mov
ins
xor
sahf
lock
cdq
sub
daa
inc
bound
ins
dec
cmp
mov
bound
int3
sbb
sbb
popa
sbb
imul
mov
mov
mov
sub
adc
or
jnp
inc
es
call
pop
mov
jmp
jmp
cmps
jp
jp
add
imul
jmp
xchg
test
pop
adc
enter
sbb
inc
pop
pop
mov
les
xor
cmp
stc
mov
sub
sub
cmp
sbb
dec
push
aam
ins
adc
call
leave
sub
xor
dec
jmp
dec
leave
pop
dec
int
dec
rcl
rol
dec
sbb
into
dec
stos
xlat
mov
stos
cmp
enter
cmp
lods
pop
cmp
(bad)
leave
popf
xchg
sbb
int3
fs
pop
imul
adc
mov
pushf
mov
retf
inc
inc
test
xchg
add
xchg
test
mov
cmp
inc
lea
retf
imul
fisubr
jp
add
or
pop
test
out
imul
or
retf
(bad)
popw
mov
and
push
and
adc
(bad)
jb
fld
mov
add
mov
mov
adc
push
stos
mov
fwait
ret
rcr
mov
cdq
loope
mov
mov
xchg
lea
or
dec
test
fist
xchg
leave
mulps
out
jl
cmp
(bad)
call
mov
movs
pusha
and
into
jmp
test
mov
ja
adc
in
rol
fild
outs
scas
xor
(bad)
fld
(bad)
inc
test
cmp
repnz
sahf
mov
cwde
js
sbb
stos
cmps
aam
add
inc
mov
push
dec
xlat
sub
ins
cli
rcr
out
inc
dec
push
out
scas
push
jmp
jle
mov
push
rol
lods
mov
(bad)
xlat
cdq
aaa
pop
sub
nop
(bad)
loop
movups
cld
xor
sbb
or
(bad)
or
push
out
adc
mov
push
mov
jmp
aad
mov
add
retf
enter
sti
test
add
and
dec
xchg
ins
adc
mov
les
in
dec
ins
xchg
and
clc
jmp
test
movs
int
out
jns
xor
xor
push
cli
out
mov
mov
enter
inc
loop
or
arpl
movs
adc
outs
test
dec
mov
cmp
sub
mov
dec
and
lea
cmp
adc
xor
movs
lods
mov
pop
fs
ins
jmp
pop
or
mov
sub
outs
cwde
add
sub
xor
mov
fisub
sub
mov
cmp
push
addps
jo
(bad)
outs
push
shr
stc
aas
fnstsw
push
or
rol
popa
test
xchg
mov
jp
ins
icebp
jb
lds
pusha
cmp
lock
repnz
adc
inc
addr16
and
inc
in
retf
add
clc
popf
sbb
ja
adc
fs
mov
mov
inc
jne
ja
jge
int3
sub
ret
lock
outs
push
mov
les
mov
push
sbb
aas
mov
pop
fnstcw
jge
xchg
mov
xlat
xor
adc
or
add
push
sub
scas
frstor
xor
adc
mov
pop
inc
xor
out
(bad)
pop
cwde
mov
jecxz
jg
jne
mov
or
inc
shl
popf
or
xchg
mov
xchg
loop
arpl
xchg
leave
adc
xor
xor
or
push
hlt
pop
adc
mov
add
sbb
jle
mov
push
adc
push
mov
dec
dec
sub
sub
jb
aad
aam
inc
mov
dec
lea
xor
shl
add
cmp
xchg
cs
inc
shl
jmp
mov
fwait
push
fisubr
imul
out
seta
je
sti
dec
xor
mov
mov
xchg
sti
cwde
push
lods
les
mov
inc
add
cmps
pop
mov
data16
sbb
cld
push
mov
(bad)
mov
sub
not
xchg
ss
push
push
xchg
xchg
xchg
sbb
loop
xchg
out
sbb
rcl
cmp
pop
aaa
outs
dec
push
sar
int3
dec
cmps
movs
call
inc
arpl
push
adc
sbb
pop
add
sbb
xchg
mov
sbb
cmp
push
adc
cwde
nop
inc
aad
xchg
ds
das
das
mov
cmc
mov
out
sbb
sahf
test
xchg
mov
push
movs
in
lds
mov
inc
call
pop
inc
into
xor
sub
xchg
(bad)
aas
jo
push
push
xchg
push
cs
add
add
jae
pop
cli
or
sbb
ss
mov
sbb
aas
adc
fadd
fwait
push
into
rcr
aad
aad
push
ror
add
repz
lea
jl
aaa
adc
xchg
xor
mov
imul
pop
int
cmp
cli
cmp
and
xor
rol
sar
call
sbb
imul
push
fs
cmc
int
ins
mov
hlt
jb
(bad)
loope
in
sub
test
jbe
gs
inc
adc
repz
adc
int
jns
loop
mul
mov
xor
fidiv
(bad)
sub
pusha
lea
mov
inc
retf
cmps
int
mov
movs
pop
dec
push
cs
cmp
rcl
push
cmp
(bad)
sub
fisttp
popa
adc
ret
cmp
sahf
xchg
call
inc
push
(bad)
xor
cmp
mov
dec
std
mov
or
scas
jmp
fldcw
cmps
add
cs
jae
dec
cmp
mov
pop
adc
push
out
int3
xchg
std
mov
jl
mov
add
daa
push
cmp
scas
push
or
jnp
iret
clc
cwd
ror
cmp
pop
inc
clc
fdiv
push
adc
or
jmp
xchg
add
pop
mov
and
cmc
and
rep
mov
dec
mov
cmc
add
pop
or
and
ficom
xchg
repz
xor
or
jmp
push
mov
xchg
sar
jle
(bad)
rol
jns
retf
aas
push
lds
ja
fdiv
xor
mov
sub
cmp
cld
cwde
rcr
mov
sbb
xchg
aaa
mov
jp
or
shl
ret
out
in
movs
aaa
pushf
int
mov
xchg
not
pop
iret
sar
clc
add
fwait
stos
(bad)
cwde
cwde
or
aas
and
dec
mov
mov
adc
(bad)
jae
xor
fwait
mov
ror
jnp
or
adc
xchg
movs
sbb
fidiv
stos
aam
imul
in
sub
call
pop
and
dec
arpl
call
push
sub
mov
adc
mov
or
jbe
aad
mov
shl
aas
mov
sub
mov
pop
cmps
push
mov
xor
add
arpl
jp
add
or
xor
or
je
rcr
inc
jp
dec
shr
sbb
sub
movs
aad
ret
adc
mov
add
nop
mov
test
test
inc
pop
ins
xor
cmp
cmps
mov
cmp
sti
push
adc
xor
std
movs
in
xchg
push
xchg
aaa
stos
sub
push
or
mov
inc
mov
push
pop
mov
sbb
mov
adc
ror
clc
pop
cmp
sub
mov
or
add
fcmovbe
jecxz
pushf
out
int3
sub
imul
arpl
movs
inc
jae
mov
outs
fwait
adc
ins
into
imul
mov
les
repnz
cdq
aaa
sar
mov
les
or
pop
es
adc
test
scas
popf
test
cwde
out
mov
es
arpl
mov
sub
nop
les
mov
mov
ss
pop
push
lahf
cli
ins
dec
pop
dec
pushf
daa
nop
xchg
push
xor
xor
and
sti
xchg
adc
in
mov
out
fstp
sbb
and
movs
mov
out
xor
dec
int
in
jle
sub
dec
inc
jp
inc
adc
or
and
cld
ja
ins
or
fbstp
iret
add
mov
popf
rol
pop
xchg
repz
mov
pop
ret
fcom
int3
pop
sbb
and
adc
xchg
inc
daa
jo
loop
xchg
jle
adc
add
cmps
adc
mov
out
test
nop
xchg
out
mov
mov
push
aas
sar
aaa
xchg
jb
lea
mov
adc
mov
add
push
xlat
addr16
iret
dec
push
das
push
loope
push
pop
call
fiadd
mov
mov
push
and
sub
out
push
mov
fidiv
lock
(bad)
std
xchg
xor
call
les
adc
(bad)
lods
pop
mov
dec
shl
jne
jmp
movs
sbb
push
jns
cmp
cld
sbb
aaa
mov
lds
or
mov
stos
ficom
jns
mov
clc
push
scas
pop
jge
push
lods
pusha
jmp
fld
fidivr
jno
sub
mov
adc
mov
fld
jo
ret
sub
aad
push
lds
push
fcomip
jmp
repnz
adc
jl
fdiv
(bad)
frstor
pop
inc
cmp
add
mov
dec
dec
add
or
dec
cdq
sub
fwait
pop
inc
dec
inc
push
jmp
and
(bad)
xor
fdivr
ror
xchg
push
mov
cmp
(bad)
pop
mov
adc
sbb
ret
push
sub
mov
push
js
call
call
inc
lock
push
pop
aad
jge
push
fcomp
das
sub
xlat
imul
ficom
mov
shl
mov
mov
xor
push
jmp
jle
or
and
xchg
mov
xchg
xor
int
cmps
pop
sub
cmp
dec
repnz
dec
jns
xchg
xlat
out
jae
xchg
xor
or
pop
fmul
pushf
mov
arpl
int
add
jl
mov
aad
test
scas
movs
jbe
int
fiadd
xchg
outs
scas
stc
mov
mov
movs
shr
int3
add
call
xchg
mov
pop
in
inc
push
lahf
push
xchg
std
bound
sub
ds
stc
add
dec
xor
stos
adc
push
dec
mov
adc
pop
mov
jo
mov
inc
cdq
cli
inc
(bad)
ret
clc
(bad)
xchg
test
inc
ins
jge
pop
jmp
adc
out
push
ror
pop
repz
sbb
outs
sti
push
inc
retf
and
push
out
and
inc
jge
pop
(bad)
dec
push
mov
adc
ror
cmp
adc
(bad)
movs
xchg
(bad)
clc
mov
dec
aad
(bad)
fst
dec
mov
iret
out
mov
iret
addr16
add
aaa
clc
out
shr
clc
repz
jns
push
dec
xchg
sub
mov
mov
and
adc
test
rol
pop
jmp
or
fldl2t
stc
mov
mov
mov
test
mov
push
push
fst
dec
sahf
xor
aad
pop
pop
in
sar
das
sbb
push
pop
and
cmp
sbb
rcr
jb
sbb
retf
ss
xor
int
mov
jg
stos
mov
push
jmp
jnp
test
mov
push
cld
adc
cmps
xchg
mov
add
dec
(bad)
cs
sbb
dec
cs
ja
cmp
inc
adc
frstor
std
pop
arpl
jmp
push
out
clc
shl
shr
jno
dec
cmp
dec
movs
mov
pop
cmps
in
data16
xchg
sub
xchg
das
shl
cmp
dec
mov
xchg
das
add
(bad)
mov
inc
dec
cmp
jns
push
pop
jl
or
pop
xchg
mov
nop
cs
cmp
jecxz
push
and
jp
xchg
cmp
rcl
dec
in
cdq
xchg
hlt
lock
pusha
push
mov
stos
mov
ds
xchg
jmp
jbe
adc
mov
into
dec
push
test
mov
xchg
pop
arpl
call
cmps
add
jmp
lods
sub
(bad)
(bad)
cmp
retf
sub
mov
jne
cdq
cld
sub
pop
push
fmul
fwait
jnp
mov
iret
jg
(bad)
mov
sub
bound
fdiv
rcr
xchg
jp
jmp
pop
call
pop
popf
cmp
outs
cmp
(bad)
sbb
xor
js
xlat
cdq
jmp
jl
mov
repz
inc
in
lods
or
in
(bad)
icebp
scas
adc
out
test
std
or
dec
and
sahf
cdq
or
repnz
cmp
jns
sub
xor
call
lahf
pop
cmps
mov
push
cmp
int3
(bad)
mov
loope
in
and
bound
lock
imul
(bad)
int
(bad)
ds
xor
mov
out
fsubr
push
outs
mov
add
jns
fsubr
pop
push
push
mov
movs
daa
xor
jecxz
xor
outs
scas
or
jmp
fs
(bad)
fmul
jmp
retf
and
pop
popa
mov
xor
stc
jle
aas
adc
inc
fnstcw
fnsave
mov
fdivrp
inc
scas
sub
dec
aaa
imul
jp
cdq
jmp
mov
xchg
or
stc
adc
sbb
(bad)
fcom
adc
sbb
pop
daa
(bad)
pop
mov
arpl
jl
sbb
cmps
(bad)
sti
mov
std
aas
repz
test
std
std
(bad)
call
sub
dec
adc
adc
mov
pop
push
je
stos
fsub
sar
repz
mov
int3
jl
out
imul
lds
test
push
frstor
mov
dec
(bad)
inc
sbb
repz
or
js
sub
outs
clc
lods
add
cli
mov
aad
ss
or
jns
and
sbb
into
mov
push
aaa
and
sar
lods
cmps
call
leave
aaa
sahf
movs
jge
xchg
jno
test
ins
pop
mov
and
inc
mov
mov
lock
test
xor
mov
rcl
mov
sbb
(bad)
repz
mov
xchg
sub
nop
hlt
ja
imul
mov
pop
cmp
jo
add
ret
jl
sahf
lods
fadd
adc
add
mov
shr
das
scas
pop
mov
imul
int3
and
add
pop
pop
aaa
cli
sub
test
mov
push
movs
push
mov
aam
out
xchg
or
inc
jbe
cdq
pop
retf
fsubrp
rol
push
push
jp
push
xchg
rcl
and
xor
adc
arpl
dec
loopne
outs
push
mov
repz
cli
cmp
rol
mov
fadd
scas
arpl
mov
pop
das
sbb
repz
test
pop
push
lods
mov
test
adc
sbb
cmp
mov
stos
push
int
outs
jno
sbb
fcom
cmp
jecxz
not
pop
aam
rcr
fisub
in
xchg
dec
jae
stc
adc
ja
push
xor
shl
adc
xchg
mov
xor
pop
fcom
mov
sub
rep
fstp
repz
rcl
adc
jl
cs
mov
ja
add
push
mov
aaa
rcr
(bad)
cs
enter
xchg
push
lods
fcmovbe
ja
fisub
repnz
mov
sub
aad
popa
jo
jl
sub
pop
mov
sbb
pop
xor
xchg
test
cli
out
retf
push
pop
push
sub
xchg
sub
int
hlt
lahf
paddq
dec
inc
xchg
(bad)
repz
inc
in
pop
fdiv
loopne
push
in
in
inc
mov
lods
mov
js
mov
push
xor
inc
push
cmp
sbb
and
mov
or
pop
jle
cmp
jnp
inc
cmp
mov
push
test
xor
pushf
adc
arpl
push
and
sbb
mov
cmc
inc
and
add
(bad)
mov
dec
sub
jl
jno
mov
ds
or
inc
jmp
ror
dec
mov
ret
outs
shl
mov
add
jae
mov
mov
mov
jne
xchg
mov
cmp
fld
int3
or
xor
cli
(bad)
in
inc
into
pop
int3
add
(bad)
jmp
mov
xchg
cld
clc
sbb
stc
sub
cmp
test
xor
in
loope
cmc
enter
aaa
and
ror
xor
rcl
enter
push
(bad)
fnstsw
sti
addr16
sbb
mov
jecxz
jg
dec
mov
(bad)
mov
pop
ins
fisubr
js
xchg
mov
in
cwde
out
push
imul
int3
inc
jbe
or
jle
lods
ins
les
gs
mov
mov
cmp
(bad)
xor
dec
fmul
das
ss
les
lock
int3
out
test
imul
pop
out
pop
add
xchg
push
dec
adc
sbb
(bad)
(bad)
fucomi
pop
pushf
mov
mov
hlt
sbb
test
cdq
or
xchg
pop
sub
ror
xor
pop
mov
mov
pop
movs
cdq
sti
mov
dec
mov
ins
xchg
outs
sub
mov
mov
popa
rol
fisub
repnz
mov
xor
mov
sbb
repnz
push
xchg
mov
sbb
dec
push
and
mov
dec
adc
mov
ret
dec
fimul
jo
mov
ins
outs
mov
mov
adc
scas
test
mov
adc
inc
mov
mov
in
mov
lods
clc
xchg
add
xor
and
repz
push
pushw
je
sahf
inc
mov
jae
jl
jp
jle
mov
call
dec
cs
mov
adc
mov
or
popa
test
gs
dec
fs
js
repz
add
jmp
xor
ret
mov
push
mov
test
jno
test
xor
push
loopne
clc
fs
sub
fsubp
inc
dec
test
out
sub
xchg
test
ret
and
mov
and
stos
out
cmovnp
jo
or
aas
aam
cmp
popa
or
push
mov
mov
jl
cld
aam
adc
xchg
(bad)
inc
xchg
mov
mov
xchg
mov
(bad)
aam
(bad)
hlt
or
std
arpl
add
cwde
inc
mov
sbb
lock
jecxz
std
shl
pop
arpl
pop
or
sub
pusha
and
xlat
or
push
sti
fld
bound
in
test
data16
dec
out
mov
or
mov
cmp
(bad)
mov
leave
fwait
mov
jmp
into
jmp
xchg
push
pop
mov
inc
cli
fs
xchg
imul
pop
leave
sub
cmp
dec
scas
movs
mov
cmc
movs
cli
(bad)
in
dec
jb
xchg
fcomp
int
nop
jne
in
jmp
(bad)
clc
xchg
jo
stos
xor
adc
clc
jge
sar
mov
pop
mov
out
ret
dec
push
mov
into
add
dec
and
mov
sub
dec
out
cld
fist
leave
lahf
ins
sub
mov
daa
fldcw
ja
into
mov
outs
xor
fisttp
lds
lods
pusha
dec
scas
bnd
mov
sbb
lds
out
cmp
dec
xchg
adc
sti
int
addr16
hlt
dec
in
neg
push
adc
fist
or
jne
push
jl
in
loop
inc
inc
test
pop
popa
mov
gs
dec
pop
idiv
test
inc
out
or
jne
jae
cmps
jp
fsubr
stos
mov
mov
out
jle
inc
dec
(bad)
mov
mov
mov
shl
adc
test
mov
pop
mov
int3
or
jbe
(bad)
rcl
test
inc
push
hlt
sub
fnstcw
and
dec
shl
jle
ret
mov
arpl
jg
gs
sbb
adc
cmps
mov
scas
in
adc
mov
fmul
bnd
ja
pusha
push
jge
aam
xchg
push
xor
mov
and
icebp
inc
sti
xchg
xchg
cmp
push
push
cmc
and
or
ss
aaa
je
jns
out
add
(bad)
xor
out
loope
mov
call
push
mov
stos
xor
add
iret
outs
adc
scas
fwait
imul
popa
nop
pop
mov
loop
pusha
or
xchg
cmp
push
test
out
xor
rcl
xchg
movs
inc
jbe
(bad)
inc
cmp
jmp
mov
push
push
or
xor
call
mov
call
shl
int
xchg
push
stos
cli
cmp
push
dec
scas
loop
push
or
mov
movs
sbb
neg
sbb
adc
pop
or
cs
cmps
loop
inc
pop
sbb
add
gs
dec
push
std
fsubr
xor
aas
dec
sbb
jecxz
loope
inc
les
js
inc
push
jns
inc
adc
mov
test
iret
jne
or
xor
stc
mov
mov
sar
ins
popf
pop
fldenv
call
retf
arpl
sub
(bad)
xchg
int3
jne
je
loopne
push
and
or
loope
pushf
xchg
lods
pop
add
fadd
cmps
neg
test
jecxz
mov
sub
into
shl
stos
fst
mov
sub
jge
mov
jge
aaa
cmc
jbe
sub
xchg
test
jnp
jnp
xchg
pusha
jmp
ins
fsubr
pusha
pop
sub
fcmovbe
mov
pop
lahf
cdq
mov
sar
fwait
popa
dec
or
sub
mov
sti
xchg
xor
shr
push
dec
push
outs
neg
inc
dec
into
test
inc
ins
sub
inc
push
sahf
sbb
jmp
jge
repz
push
jne
aaa
xchg
idiv
push
inc
lods
pop
(bad)
lahf
aam
xor
addr16
push
adc
add
retf
cmp
mov
pusha
mov
cld
jno
jge
mov
push
hlt
sar
es
pop
jnp
push
mov
mov
pop
sbb
test
cdq
add
pop
in
frstor
push
hlt
pop
imul
inc
pop
out
bound
xor
in
add
in
pop
pop
sub
pop
push
xchg
and
pushf
ficom
sbb
adc
push
and
sahf
jmp
pop
pop
adc
lea
push
mov
pop
int
and
and
mov
mov
adc
push
xchg
cmps
test
call
inc
repz
in
mov
aad
repnz
sbb
mov
ss
jmp
out
pusha
scas
les
shr
enter
fbld
movs
cmp
cld
rcl
pushf
sub
sbb
daa
aam
xor
mov
pusha
dec
icebp
int3
ret
pop
idiv
es
xchg
and
xchg
pop
sub
ins
popf
cmc
sub
ds
xchg
jp
xchg
test
xchg
int3
adc
cmps
(bad)
shr
cmp
nop
push
movs
pop
jmp
add
jne
pop
mov
pop
cmps
mov
ja
push
mov
cwde
sbb
out
jnp
aaa
jae
jb
cli
rcr
shr
outs
dec
test
je
das
or
mov
push
or
shl
mov
inc
js
jbe
push
and
sahf
stc
or
dec
enter
into
mov
adc
imul
imul
std
adc
js
sbb
mov
movs
inc
pop
pop
imul
rcl
or
inc
imul
outs
xchg
int
int
popa
fmul
jns
mov
jo
pusha
lock
gs
fidiv
sub
xlat
(bad)
pop
cmp
popf
ret
cmc
ror
scas
cmc
lds
push
xor
pop
sub
sub
push
mov
sbb
sti
push
fisub
xchg
out
(bad)
jl
popa
or
add
bound
ret
pop
das
in
xchg
sbb
push
aas
mov
rol
sbb
jge
movs
dec
xchg
or
or
retf
int
push
(bad)
add
sub
inc
jae
sahf
mov
xchg
cdq
ins
retf
push
sti
mov
sbb
inc
mov
push
lock
cmps
and
repz
das
popa
retf
(bad)
lods
or
test
mov
xor
(bad)
movs
(bad)
outs
arpl
test
mov
dec
sbb
pop
jmp
inc
push
rol
les
je
jecxz
nop
(bad)
pop
inc
add
xchg
and
dec
and
mov
fsub
adc
pop
cmp
std
push
mov
sbb
mov
movs
inc
pop
jl
inc
fnstenv
jmp
push
mov
push
or
pop
mov
outs
push
mov
daa
push
xchg
inc
dec
(bad)
mov
dec
mul
mov
inc
dec
call
mov
pop
addr16
inc
fimul
mov
sub
inc
sbb
mov
cmp
sbb
mov
inc
or
sbb
dec
fsub
leave
cdq
push
sub
test
test
inc
push
ja
adc
mov
in
(bad)
cmp
cmps
inc
push
ficomp
fwait
dec
or
sub
jg
repnz
fnstenv
inc
xchg
pop
lds
mov
xchg
repnz
sub
push
xchg
test
rol
fwait
rol
leave
dec
cmp
lods
xchg
xchg
mov
push
pop
push
xchg
cmp
or
xchg
jbe
jg
scas
sahf
movs
and
xchg
adc
xchg
and
push
daa
arpl
sbb
in
sub
cmp
sbb
mov
mov
loope
cmp
cmp
loope
fs
mov
(bad)
pop
(bad)
cmp
aam
xchg
ja
and
clc
sub
cmp
imul
sub
popf
vpackssdw
mov
inc
add
pop
rol
jb
pop
add
rol
nop
out
add
fisttp
jnp
push
(bad)
and
sub
cmp
imul
call
leave
aas
mov
lods
aaa
fcomp
jbe
or
aaa
mov
sbb
mov
je
repz
in
fisttp
call
push
sbb
adc
pop
js
adc
fcomp
or
imul
movs
xchg
mov
clc
pop
add
fisubr
and
aam
(bad)
mov
ret
out
jge
inc
test
xor
cmp
repnz
sub
jno
int3
repnz
mov
fstp
sti
adc
jge
fwait
pop
shr
inc
push
mov
cld
sub
adc
xor
mov
retf
mov
rep
jns
mov
mov
popf
sbb
mov
push
cld
sub
xchg
dec
push
and
mov
int
(bad)
not
or
xchg
mov
sar
pop
mov
loopne
ja
pop
inc
dec
out
(bad)
push
add
mov
aaa
mov
pusha
cmps
xchg
mov
inc
jnp
jle
push
in
in
cmp
fstp
push
mov
cli
repnz
pop
lds
es
ins
pushf
shl
cmp
add
stos
sub
test
ret
cmp
xlat
cdq
cwde
sub
lods
fst
lds
repz
pop
retf
lds
pop
jl
xchg
jg
test
xchg
mov
mov
movs
jl
inc
lods
mov
jmp
mov
call
push
pop
xor
sbb
sbb
adc
std
fist
jno
popf
retf
sub
test
test
lock
shl
mov
push
add
push
adc
mov
call
ss
xchg
cmc
iret
pop
or
shr
cmps
sub
jp
mov
test
cmp
gs
xchg
xlat
jmp
cmp
rcr
push
sub
mov
repz
ficomp
lods
mov
inc
inc
nop
(bad)
cmp
add
aas
fimul
push
gs
or
in
movs
cs
xchg
in
push
jb
adc
add
and
and
xor
sub
fwait
in
cmps
mov
push
xor
pop
gs
fcmovnbe
mov
inc
cmp
outs
retf
fstp
mov
cmp
inc
push
rol
inc
sub
add
popa
sbb
xor
or
push
ins
mov
adc
lea
jo
mov
push
(bad)
inc
inc
cwde
pcmpeqb
dec
pop
idiv
pushf
pop
sub
push
fldcw
or
xchg
cs
xor
cmp
aaa
cdq
mov
(bad)
xor
lahf
in
xor
ret
dec
pop
in
jno
aad
sub
int
push
push
repz
stos
inc
push
inc
xor
add
fsub
xchg
test
xor
aad
xor
ss
pop
aas
out
cmp
js
addr16
shl
inc
sub
mov
scas
xor
sbb
or
jo
add
adc
call
push
add
adc
neg
fcom
add
xor
inc
add
xchg
or
sti
xchg
(bad)
add
or
ss
int3
fistp
mov
xor
inc
pusha
or
enter
aas
xchg
and
sbb
adc
(bad)
addr16
pop
or
sbb
jmp
das
mov
outs
mov
pop
dec
mov
sub
push
test
js
inc
retf
jns
ins
std
loop
jae
mov
jmp
add
xchg
outs
or
adc
loope
loopne
fcomp
inc
pop
xchg
in
nop
shr
into
jns
push
push
jne
fs
sub
icebp
cmp
mov
sub
lock
pop
test
std
loope
xor
jl
cld
sub
lahf
mov
fstp
fwait
(bad)
lods
mov
xor
mov
fcomp
pushf
fild
mov
scas
push
pop
rcl
adc
cli
fs
rol
cmps
scas
jg
or
xchg
cli
jg
and
shl
and
stos
pop
xlat
jo
push
es
add
scas
and
xchg
mov
and
movs
mov
lds
pop
mov
(bad)
out
cmp
cli
xchg
imul
adc
fadd
push
pop
sub
cmp
push
call
cwde
(bad)
mov
jnp
sub
loope
mov
adc
xchg
inc
mov
int3
repnz
push
out
xchg
adc
pop
jmp
pop
out
pop
ret
out
enter
ja
lods
jbe
pop
xor
adc
arpl
xor
mov
nop
shr
pop
in
rcr
mov
jmp
adc
fisub
arpl
mov
mov
xor
mov
mov
jp
mov
shr
sub
es
mov
jae
inc
sub
sti
mov
cdq
das
ja
faddp
and
rol
mov
mov
mov
std
call
sub
pop
int3
mov
jae
scas
mov
jae
xor
cmp
inc
and
cs
(bad)
inc
(bad)
nop
scas
aaa
scas
not
jp
arpl
push
outs
xchg
ret
xchg
clc
xchg
js
aam
pop
or
cmps
jmp
ins
sbb
push
mov
in
push
xor
and
out
sbb
add
adc
cmp
pop
imul
test
pop
clc
jo
stos
(bad)
mov
fdivr
ss
daa
ja
and
arpl
fldenv
xchg
rcl
cld
jle
adc
xor
mov
inc
pushf
and
push
js
or
cs
stos
dec
cmps
and
jb
ja
mov
aam
jnp
push
cli
add
imul
xor
outs
stc
mov
rcl
nop
fnstenv
xchg
jmp
in
xlat
(bad)
js
cmp
jne
and
cli
or
ret
cwde
clc
xor
stos
nop
pop
mov
push
pop
outs
mov
push
aaa
jmp
xor
pop
arpl
icebp
mov
cwde
mov
test
inc
lds
(bad)
dec
aad
cmc
leave
xchg
adc
imul
push
mov
xor
sub
sbb
pop
fs
push
js
(bad)
(bad)
pop
adc
jae
addr16
mov
mov
push
dec
imul
inc
inc
mov
repnz
lahf
ja
jmp
cmp
lock
test
pop
pop
rcr
rcl
or
xchg
sbb
mov
stos
lock
or
sub
mov
xor
jmp
inc
aam
je
les
xor
mov
pop
mov
or
mov
pop
js
mov
outs
cmp
(bad)
lock
iret
jns
out
aad
nop
ins
pop
inc
and
loopne
pop
loope
pop
jbe
mov
cmc
outs
cmp
loope
cli
xlat
shr
or
(bad)
dec
int
jae
mov
out
mov
sub
cmp
in
imul
fisttp
pop
xchg
test
stc
dec
xchg
mov
aam
mov
mov
mov
hlt
push
bnd
pop
jbe
movs
ficomp
call
ja
xchg
cmp
mov
add
into
mov
mov
sub
adc
(bad)
repz
aam
int
mov
dec
xchg
test
adc
lods
cmp
and
push
call
fdiv
and
sbb
mov
or
dec
adc
stos
jns
call
(bad)
mov
mov
fsubr
sub
aam
mov
adc
nop
inc
sbb
sbb
into
popf
sbb
test
sbb
out
mov
xchg
(bad)
daa
out
pusha
and
into
arpl
dec
pop
pushf
inc
and
add
adc
pop
out
daa
lock
sti
push
jmp
les
mov
cmp
rcr
mov
retf
inc
jmp
ins
scas
mov
inc
fst
popa
push
out
stos
push
dec
imul
jnp
hlt
pop
repnz
scas
scas
std
cdq
es
sti
adc
mov
adc
dec
jle
out
sub
jecxz
fwait
mov
fst
mov
fadd
add
sub
and
mov
cmps
jge
mov
sub
cmp
scas
pop
pusha
call
mov
cmp
push
lahf
lock
push
lods
push
inc
jp
call
fadd
sbb
xchg
repz
jnp
and
scas
pop
or
ja
add
or
adc
pop
adc
bound
in
dec
loopne
sbb
sbb
lock
inc
xchg
(bad)
dec
fst
arpl
inc
enter
cmp
ret
call
mov
ja
lahf
mov
mov
call
xchg
jbe
push
mov
cmp
mov
loop
gs
or
mov
retfw
es
les
rcr
add
mov
xor
inc
loop
in
jle
inc
mov
inc
dec
push
dec
mov
(bad)
in
push
push
iret
out
jne
mov
mov
adc
or
ficom
dec
dec
test
lahf
push
sahf
aad
adc
mov
push
popf
xor
mov
jb
shl
sbb
and
pop
cld
mov
loop
or
mov
xor
xchg
aas
sbb
outs
xor
adc
jle
bound
dec
call
adc
dec
jae
sub
jle
sahf
jmp
in
inc
into
mov
push
int
jecxz
je
adc
cmp
test
pop
adc
dec
xchg
adc
xlat
ds
mov
stc
cmp
cmps
mov
clc
inc
mov
into
xchg
sub
xchg
test
xchg
adc
stos
xchg
jo
mov
loope
les
popf
sub
loop
(bad)
ss
mov
mov
imul
push
mov
sub
nop
cmc
jb
xor
pop
call
pop
sub
xor
mul
in
and
call
add
shr
out
(bad)
fsubp
sbb
das
int
je
sbb
retf
add
push
lds
jnp
xchg
push
div
cwde
loopne
call
and
sub
mov
in
retf
jnp
mov
push
das
push
adc
and
mov
data16
jnp
sub
pop
inc
sbb
rcl
fld
lods
fs
sub
rol
sbb
mov
rcl
cmp
add
leave
push
push
hlt
std
jmp
ret
mov
dec
clc
xor
lods
and
add
or
fbstp
sub
sbb
mov
iret
mov
or
pop
or
sbb
xor
stos
fld
sbb
sub
adc
adc
dec
sub
cmps
cmc
lahf
mov
cmp
hlt
lds
cmp
neg
in
sbb
mov
mov
neg
pop
addr16
xchg
push
int3
or
add
idiv
or
divps
ror
leave
sub
mov
pop
jb
mov
pop
dec
pop
adc
or
hlt
and
mov
mov
dec
push
jae
cmp
aam
iret
fsub
repnz
push
sbb
jmp
and
movs
movs
call
imul
mov
mov
scas
push
mov
sbb
nop
mov
sahf
dec
pushf
mov
in
hlt
nop
push
mov
cmp
ret
mov
out
push
push
mov
fcom
call
adc
scas
rcr
mov
cwde
or
std
pop
cmp
jg
cmps
add
scas
or
pop
out
(bad)
aad
add
mov
xlat
dec
or
imul
sub
pop
and
add
add
out
(bad)
sub
and
ret
stc
retf
xchg
push
mov
(bad)
dec
mov
call
mov
sub
(bad)
in
mov
pop
scas
pop
pop
in
lock
jg
pop
mov
cmc
or
pop
xcrypt-ecb
cmps
int3
adc
and
lods
jo
sub
ss
(bad)
mov
mov
fadd
push
fild
shr
or
or
(bad)
pop
test
and
mov
fld
icebp
repnz
xchg
push
adc
retf
add
retf
test
into
das
ret
add
ds
std
mov
mov
sbb
jge
loop
(bad)
out
xor
jns
test
or
and
ja
push
cli
sbb
retf
shl
jne
outs
mov
mov
add
int3
or
sbb
bound
inc
xor
arpl
movs
in
mov
or
pushf
mov
mov
jo
xchg
clc
loope
xchg
lds
movs
sub
sub
shl
pop
add
arpl
iret
mov
fnstenv
cmps
les
test
pop
mov
imul
(bad)
xor
fidivr
popa
mov
hlt
mov
or
jp
ja
jo
movs
mov
and
add
addr16
xchg
pop
jns
push
(bad)
int3
stc
adc
pop
push
ins
cdq
mov
sub
ss
inc
fcomp
and
jbe
mov
outs
sbb
or
and
sub
shl
es
mov
mov
dec
movs
cmps
out
call
shr
ret
shl
arpl
mov
aas
pop
imul
xchg
jne
or
add
inc
jno
adc
das
or
shr
sahf
fdivr
repz
out
mov
mov
push
cmp
test
ins
xchg
aad
xor
jne
scas
mov
(bad)
retf
cmps
lea
scas
pop
push
dec
pop
call
(bad)
lock
mov
imul
mov
sahf
in
out
cli
or
(bad)
dec
add
dec
cmp
pop
mov
or
adc
nop
push
dec
mov
mov
ret
(bad)
cld
je
shl
or
scas
fcmovu
pop
ror
fcmovb
cdq
test
sbb
and
mov
in
jecxz
push
rol
push
sbb
jb
inc
add
jg
or
loop
pop
xor
out
lods
in
adc
push
icebp
movs
mov
inc
int3
pop
ret
je
push
or
lods
cmc
outs
shr
outs
pop
test
mov
arpl
push
call
mov
add
nop
push
ret
loopne
add
gs
es
dec
pop
pop
push
mov
xor
(bad)
out
mov
xor
fisub
fadd
sub
leave
rol
inc
or
jg
jo
pop
call
mov
push
shl
hlt
inc
icebp
push
loopne
pop
mov
dec
mov
scas
mov
outs
inc
and
shl
inc
dec
xor
arpl
fmul
sub
adc
or
sbb
cmc
lods
or
dec
sahf
cdq
inc
dec
xor
adc
ret
test
in
in
call
test
fstp
dec
sahf
dec
test
mov
sub
and
aas
jae
ss
inc
mov
dec
inc
stc
push
cdq
pop
in
sbb
aaa
stos
popa
std
out
test
ret
outs
cmp
fild
cmps
scas
(bad)
das
xor
push
push
iret
aaa
and
xor
or
push
int3
sub
stos
nop
sub
stos
daa
movs
dec
pop
push
push
jp
add
and
jmp
aad
and
adc
adc
pop
loope
mov
fsub
loop
sub
add
scas
sbb
or
pop
adc
push
cmp
dec
jns
pop
or
mov
clc
jle
loope
in
xchg
sub
pop
add
call
inc
and
(bad)
out
pop
gs
imul
loop
push
mov
jl
push
xchg
shr
sub
or
je
xchg
push
mov
in
ja
test
lods
mov
arpl
mov
(bad)
sar
mov
mov
mov
push
xor
cmp
neg
and
aas
lds
cmp
xchg
xchg
push
je
pop
sti
inc
sar
data16
nop
fs
loope
rcr
rcl
pop
fild
daa
jl
add
adc
fcom
mov
out
and
int3
cld
mov
test
pop
loop
jmp
loop
rcl
mov
mov
add
aaa
loop
xchg
fdivr
mov
add
dec
stos
xchg
push
data16
popf
je
pop
mov
fs
in
add
sahf
mov
lahf
out
cwde
jne
(bad)
cmp
aad
les
jmp
mov
sbb
ins
jecxz
inc
mov
xor
ret
dec
call
push
mov
pop
dec
jns
add
cmp
jmp
sar
ja
pop
xchg
pop
add
neg
pop
ret
ins
inc
and
mov
mov
js
popf
add
lods
xor
out
popf
mov
jne
xor
mov
push
and
xchg
add
call
imul
cmp
jp
sbb
mov
gs
sbb
sbb
loopne
dec
cmp
in
rcl
inc
test
sub
and
mov
addr16
arpl
out
sbb
mov
in
movs
add
sbb
repnz
es
cmp
push
mov
pop
mov
cmp
outs
fcmove
mov
mov
push
xor
popf
(bad)
aam
sbb
iret
xor
cmp
retf
jmp
mov
mov
movs
cmp
and
pop
aaa
cmc
pusha
mov
jno
dec
fsubr
out
and
loop
sahf
mov
ss
aad
fadd
neg
mov
mov
push
xchg
nop
(bad)
out
mov
add
sbb
pop
mov
sbb
(bad)
mov
sbb
inc
pop
pop
inc
adc
push
rcr
jbe
mov
pop
sub
or
leave
lds
retf
(bad)
fcomp
clc
je
push
cmps
fnsave
in
scas
clc
sbb
lds
adc
psrld
lds
ret
jmp
pop
fsub
push
fwait
inc
inc
imul
or
mov
dec
into
xchg
js
fcmovb
scas
xlat
rcr
lea
pop
(bad)
xor
fcom
es
inc
or
xchg
inc
dec
sahf
ss
xchg
xchg
inc
stos
inc
jbe
and
popf
int3
cmps
adc
push
mov
aas
ds
xchg
mov
inc
push
jmp
sub
push
inc
movs
lock
psrlw
sahf
pushf
inc
pushf
(bad)
cmp
adc
xchg
dec
loop
es
jmp
call
inc
cdq
jp
in
mov
daa
jmp
cld
ins
mov
push
out
rol
mov
xchg
in
frstor
je
retf
cli
cmp
adc
jl
out
pop
outs
fimul
inc
jmp
cmps
pop
dec
je
xor
pop
daa
popa
lahf
fstp
in
jo
push
mov
sub
push
inc
mov
sub
or
dec
fdivr
adc
(bad)
movs
mov
cmps
test
outs
push
jp
jo
xlat
mov
mov
in
shl
nop
jg
mov
hlt
dec
inc
ja
sbb
call
sar
jmp
push
add
mov
test
or
cmp
shr
pop
mov
sbb
dec
cmp
add
and
push
jb
xchg
std
sbb
fild
int
xor
dec
popf
cmps
mov
mov
sbb
inc
pop
xchg
je
pop
push
push
dec
fisttp
dec
mov
faddp
jae
mov
stos
imul
lods
push
(bad)
fucomp
push
jae
cmp
inc
mov
push
dec
int3
inc
mov
xchg
mov
mov
lds
rcr
out
out
mov
push
outs
add
pop
xor
(bad)
or
sbb
sub
push
or
lods
push
dec
stos
jnp
dec
outs
sbb
jmp
sub
add
xor
push
imul
cmp
fidiv
xchg
cmps
fldenv
ins
cmps
rol
sahf
in
(bad)
sahf
ret
iret
or
(bad)
xor
xchg
ror
push
xor
arpl
icebp
shl
test
pushf
(bad)
(bad)
adc
popa
add
into
push
movs
cdq
push
popf
fst
push
out
fld
(bad)
shl
xlat
ss
cmp
cwde
mov
jne
test
cwde
mov
sar
xlat
push
xchg
shl
push
in
mov
loop
jne
inc
(bad)
mov
icebp
loop
mov
jecxz
(bad)
stos
call
test
mov
adc
sahf
mov
test
cmp
into
data16
mov
cmp
and
or
mov
inc
or
scas
inc
lea
int
xor
mul
cmp
ins
jo
push
movlps
xchg
test
sbb
inc
sbb
in
lods
out
ror
repz
aam
mov
(bad)
sbb
std
xchg
les
dec
push
mov
mov
in
jbe
push
mov
fdiv
fisttp
dec
imul
shl
xchg
jo
push
mov
adc
std
test
mov
and
bound
jg
mov
push
aam
hlt
out
popf
xor
out
pop
mov
pop
dec
popf
sub
mov
dec
pop
dec
das
mov
pop
xor
daa
mov
push
nop
lods
add
ins
out
mov
xchg
cmc
xchg
les
cdq
push
sbb
fadd
mov
mov
jp
fdiv
test
dec
stos
shl
int3
popf
mov
mov
or
cmp
xchg
cmp
ins
ss
inc
ins
push
dec
mov
mov
stos
sti
shl
pop
mov
dec
jmp
aad
jmp
dec
lock
jae
sbb
aam
inc
cli
mov
idiv
sub
add
adc
test
scas
push
mov
gs
into
ss
test
ins
fmul
ins
test
out
lods
arpl
and
push
xchg
sub
das
das
dec
mov
push
arpl
ss
xor
mov
jo
jae
mov
sub
repnz
(bad)
add
jns
std
or
adc
adc
repz
pop
jne
pop
inc
ins
cmps
retf
nop
adc
data16
dec
push
cmp
call
mov
push
outs
push
gs
loop
xchg
cmps
push
adc
sar
pop
addr16
inc
jae
push
aas
xchg
lods
push
loop
ficom
xor
cmps
test
cmp
or
and
add
lods
jmp
dec
loope
push
add
push
sbb
fwait
mov
dec
sbb
jns
sbb
test
into
push
iret
adc
addr16
cmps
xor
popf
xchg
call
dec
movs
dec
adc
mov
push
aaa
(bad)
fwait
jbe
push
loope
call
test
das
sbb
out
into
xor
shr
call
aam
adc
repz
in
mov
xchg
les
xchg
sub
mov
adc
aad
inc
(bad)
mov
mov
cmps
xchg
xchg
sbb
aam
cmp
mov
jge
pop
sahf
aaa
mov
stos
test
movs
pop
add
inc
outs
(bad)
scas
cmp
xchg
mov
rcr
mov
push
dec
add
add
int
or
adc
sub
or
sbb
mov
push
lock
arpl
jp
cmc
ss
push
ins
adc
xor
rcl
test
(bad)
into
push
sbb
jno
add
push
pop
shl
jns
sahf
fmul
pop
les
int
test
das
mov
ret
(bad)
pop
jne
lahf
dec
cdq
dec
pop
ret
sar
xor
mov
add
loopne
xor
mov
rdmsr
mov
xor
sub
mov
movs
sbb
mov
cs
and
xlat
cmp
in
out
sub
push
cmc
sahf
popa
xchg
into
retf
dec
mov
mov
xchg
jge
iret
pusha
add
pop
inc
add
sbb
lea
lods
aaa
mov
cld
mov
pushf
push
or
ss
popa
mov
xchg
push
(bad)
cld
je
int
dec
inc
ins
jbe
enter
cmp
add
rol
out
test
cmp
imul
enter
push
mov
mov
push
dec
and
inc
cdq
adc
push
dec
retf
or
ficomp
rcr
pop
ds
jae
jle
stos
sar
cmp
cmp
mov
rcr
jmp
leave
sbb
mov
mov
sbb
xchg
inc
and
adc
pop
je
mov
mov
rcl
jle
mov
shl
push
shr
sub
rol
movs
movs
sbb
jmp
pushf
pop
out
xor
std
mov
xor
pop
push
inc
call
jae
mov
fwait
sbb
sub
cmp
gs
jb
sbb
mov
add
sub
inc
pop
mov
js
nop
vcvtss2si
pushf
dec
push
jp
movs
fdiv
rol
jmp
out
sbb
int3
repnz
push
ja
es
fadd
stos
sub
jae
int
(bad)
call
ins
mov
(bad)
and
dec
and
fdiv
xor
int3
call
xchg
dec
daa
push
xor
sbb
adc
push
test
inc
mov
push
daa
repz
cmc
data16
into
scas
mov
test
pop
cmp
xor
int3
jo
add
mov
xor
adc
sbb
jl
jle
or
loope
cmp
lods
cld
sub
xchg
js
xor
adc
(bad)
shl
push
mov
inc
nop
aad
push
in
cmp
dec
mov
ret
add
sub
fstp
add
imul
sub
cmp
jb
sahf
ds
pop
sahf
mov
scas
in
xchg
lock
clc
dec
adc
ficomp
clc
xor
cmp
ss
xor
bound
sahf
add
pop
and
ja
jns
dec
dec
cmp
add
push
jecxz
clc
inc
or
xchg
lahf
mov
js
mov
xor
call
nop
daa
mov
out
mov
sub
inc
jl
sub
mov
inc
lods
mov
add
sub
cmp
repz
cmp
(bad)
fxtract
jecxz
test
inc
pop
add
jmp
add
mov
mov
xchg
lods
(bad)
stos
pop
lock
lea
sti
das
xor
adc
mov
cmp
fistp
push
xor
pop
hlt
jb
xchg
scas
xchg
jnp
xchg
jns
jmp
mov
add
fidivr
outs
out
fcomi
or
shr
add
cmps
inc
sti
rcl
xchg
jnp
inc
int
retf
sub
pop
add
inc
or
lock
lods
dec
mov
in
jg
in
pop
mov
jbe
mov
pop
mov
into
mov
in
or
push
adc
xchg
in
mov
dec
add
pushw
push
inc
adc
adc
adc
push
cld
xchg
das
or
not
sbb
push
test
cmps
xchg
enter
mov
jl
sub
jecxz
test
mov
pusha
je
sub
pushf
out
in
push
stc
fsubr
cld
xchg
mov
pop
in
sub
and
iret
and
adc
in
(bad)
rol
mov
sub
fwait
outs
arpl
ja
adc
fld
sub
jmp
mov
jbe
push
cdq
push
div
mov
in
push
nop
adc
lock
iret
ss
std
xchg
or
pushf
int
rcr
rcl
jbe
sti
in
in
call
les
repnz
push
(bad)
or
push
sbb
and
data16
cmps
and
aam
adc
xlat
mov
aad
repz
aaa
mov
dec
add
sbb
movs
dec
movs
jo
pop
xchg
stos
jl
dec
xor
or
cmp
out
imul
stc
in
and
and
(bad)
pop
pop
dec
inc
ins
(bad)
retf
call
aam
in
(bad)
fcomp
cmovge
mov
mov
outs
out
mov
bound
adc
js
jp
scas
add
jnp
test
jmp
mov
cmp
imul
inc
add
div
out
pop
adc
sahf
rol
retf
mov
xor
mov
dec
leave
adc
call
outs
cmp
jle
mov
imul
jle
push
inc
adc
inc
(bad)
push
add
leave
pop
and
(bad)
popf
(bad)
xchg
xchg
ret
rol
dec
(bad)
fld
xor
aad
jnp
and
mov
pop
jecxz
jns
fmul
pop
xor
repnz
lahf
jmp
loopne
jne
ins
je
hlt
ds
into
jbe
push
(bad)
in
and
ret
xchg
retf
mov
retf
js
ret
lea
xchg
inc
mov
or
inc
das
in
jno
push
ret
cdq
(bad)
fdiv
pop
cmp
cmp
retf
mov
rcr
les
pusha
jp
mov
mov
int
sub
mov
test
cmp
stos
dec
arpl
xchg
pop
jb
add
(bad)
push
stos
popa
ret
add
imul
push
dec
jmp
pop
(bad)
aas
pusha
xor
rcr
call
and
push
ret
in
pushf
pop
or
dec
inc
sti
mov
std
cmps
mov
outs
pushf
je
xor
xor
popa
pop
movs
and
sub
add
loopne
mov
test
jmp
sub
mov
xchg
stc
push
jmp
mov
mov
pusha
inc
sub
aas
jns
jbe
mov
test
repnz
in
mov
jns
xor
into
cmps
fsub
ja
imul
js
lea
dec
add
mov
addr16
outs
jmp
jmp
jp
punpckldq
or
jnp
stc
dec
xor
push
fcomip
adc
jo
mov
cmc
xchg
mov
and
or
jae
ds
pop
fisub
cmovae
push
int
sub
aad
icebp
mov
test
pop
clc
arpl
fxsave
enter
test
adc
adc
add
cmp
sbb
mov
fmul
push
dec
mov
addr16
sub
aad
mov
je
aad
fild
inc
or
sar
pop
cmp
jge
xchg
cmp
dec
mov
ret
push
mov
or
mov
cmp
icebp
xchg
sti
sbb
jae
cmp
mov
stc
mov
dec
shr
sub
into
sti
aaa
gs
outs
ja
jmp
xor
jle
push
(bad)
sub
add
ret
push
sar
in
jp
cmp
ds
push
inc
les
jno
jmp
outs
stos
and
jo
bndldx
fadd
xor
push
in
bswap
add
rep
push
les
aaa
popf
add
xchg
cwde
jg
les
aad
sub
repnz
dec
xchg
loopne
cdq
push
or
jg
leave
mov
pusha
jno
aad
call
sahf
leave
xor
sbb
push
lods
mov
fst
add
clc
sbb
test
imul
push
faddp
xchg
mov
sbb
mov
add
repnz
ss
inc
adc
les
cmps
aad
out
(bad)
jge
adc
imul
mov
cdq
inc
dec
loopne
fstp
mov
jmp
xor
jae
mov
cdq
jbe
adc
xchg
stos
ss
sub
sub
cmp
fdivr
kxorw
mov
leave
mov
lods
hlt
iret
adc
ins
cld
push
test
call
xor
(bad)
clc
fdivr
mov
mov
sbb
(bad)
call
in
cli
(bad)
rol
or
push
ja
mov
pop
mov
adc
jle
pop
cmp
lock
add
and
push
push
adc
aas
(bad)
cmc
mov
stc
add
xor
cmps
jmp
daa
adc
rol
cli
retf
inc
cmp
cmp
les
out
pop
push
pushf
xchg
xlat
loopne
add
add
jmp
imul
cmps
mov
cmp
vphsubdq
mov
inc
scas
adc
cmp
mov
faddp
out
cmp
dec
cdq
loopne
inc
test
inc
xor
cmps
retf
mov
dec
xchg
imul
lea
mov
pop
data16
lods
imul
adc
push
and
test
mov
pop
xchg
inc
int
(bad)
push
push
jmp
xor
xor
add
test
jne
fwait
int3
push
arpl
pop
loopne
add
adc
mov
mov
int3
pusha
movs
mov
pushf
daa
inc
mov
xor
outs
add
or
in
sub
push
imul
mov
scas
sar
xchg
out
mov
rcr
test
ss
(bad)
movs
popf
retf
adc
jne
inc
and
inc
fcom
jo
pop
push
pop
fstp
dec
add
cmps
fcomp
jp
aad
jae
ja
dec
out
xchg
cmps
mov
mov
in
mov
cmp
xchg
(bad)
push
push
mov
div
mov
jecxz
mov
adc
jnp
xor
dec
je
xlat
shl
pusha
or
rcr
repz
push
xchg
(bad)
cmp
lea
sbb
lahf
imul
std
jo
dec
scas
ins
mov
sahf
dec
repz
ins
sbb
mov
in
scas
mov
dec
xchg
cmps
mov
loop
arpl
test
lds
ds
sub
mov
cmp
loope
leave
and
sub
daa
pop
icebp
push
lahf
xlat
ror
scas
std
ds
les
aad
jge
xchg
sbb
dec
xor
and
inc
test
push
repz
dec
in
into
or
or
jge
add
popf
jmp
add
sub
jb
or
ins
mov
arpl
cld
out
push
pop
outs
mov
mov
cli
pop
and
cmp
sub
mov
xchg
into
inc
sub
lea
xchg
and
(bad)
into
ins
jmp
aam
push
add
mov
inc
or
xlat
push
and
jae
ret
mov
dec
scas
nop
jns
mov
jmp
and
xchg
and
adc
ins
and
cmp
sbb
push
aaa
mov
dec
sbb
aam
mov
sub
add
push
fmul
pop
repnz
(bad)
push
int3
aad
xor
fmul
aaa
ins
add
mov
daa
ror
int
sbb
icebp
adc
rcr
outs
dec
pop
das
push
inc
lahf
adc
push
bound
inc
jnp
lahf
mov
je
iret
dec
dec
sti
add
or
push
xor
and
xor
pop
adc
add
sbb
outs
in
mov
(bad)
xor
xchg
(bad)
aam
push
xor
scas
out
(bad)
add
daa
imul
mov
arpl
adc
cdq
js
mov
cdq
dec
nop
inc
aad
cdq
popa
cmp
ficom
das
lea
or
aas
test
or
xchg
lods
cmp
mov
mov
jo
mov
jb
push
dec
sbb
or
push
movs
dec
(bad)
push
cli
fcom
clc
mov
push
or
cmp
mov
or
shr
hlt
jp
into
xor
sti
out
fild
xor
mov
cdq
arpl
cmp
xchg
mov
ror
out
jmp
shl
loop
or
fisubr
mov
xor
mov
in
clc
push
or
jb
pop
sub
das
cwde
int
sahf
add
adc
and
xlat
push
mov
push
pop
enter
out
pop
push
push
scas
adc
add
jecxz
pop
inc
inc
(bad)
cwde
dec
mov
jmp
and
cmps
retf
and
mov
push
leave
or
jge
icebp
shl
retf
sti
retf
inc
adc
sbb
out
sbb
fsub
dec
outs
add
ror
int
not
push
mov
xchg
aas
dec
sub
jecxz
imul
jle
cdq
pop
mov
xor
adc
jnp
out
sbb
leave
jg
shl
xchg
out
mov
test
sub
adc
xor
inc
fnstsw
test
fdivr
lock
cmps
inc
push
adc
nop
sub
jl
jns
add
jge
cmps
mov
jo
jns
fstp
bound
jns
xchg
cmp
and
sub
adc
mov
jmp
or
fld
popf
lds
xchg
retf
xchg
push
fisubr
adc
xchg
lock
xchg
fs
movs
jge
call
out
inc
aas
jne
in
mov
daa
pop
cli
retf
dec
dec
mov
xor
daa
repnz
lock
fs
cmc
mov
mov
xor
movs
push
mov
xchg
inc
push
pop
pop
push
mov
data16
or
add
imul
push
cmps
test
inc
jbe
xchg
int3
pop
stc
sub
out
push
daa
jo
cmp
jbe
fs
cld
sbb
call
mov
enter
adc
cmp
ficomp
and
sbb
sub
sbb
dec
ja
loope
jae
sbb
(bad)
(bad)
call
pusha
lea
add
dec
mov
hlt
ins
mov
pop
xor
mov
xor
aas
mov
test
(bad)
imul
sbb
dec
mov
neg
arpl
cmp
xor
int3
shl
or
lds
xchg
iret
xor
or
adc
add
sub
arpl
inc
stc
(bad)
scas
mov
psrlq
mov
inc
je
jmp
pushf
mov
lahf
pop
push
loop
xchg
fcomp
out
imul
mov
movs
inc
and
ins
add
stos
cmps
ins
sahf
mov
and
arpl
xor
pop
lods
pop
jmp
push
test
mov
xchg
outs
push
fs
jnp
sbb
mul
shr
fld
push
dec
push
movs
xchg
mov
scas
push
cmps
icebp
ffree
addps
cwde
add
dec
cdq
or
jmp
pop
adc
push
push
shl
mov
pop
cmps
sub
or
add
aaa
and
pop
push
or
in
pushf
loope
cmps
sbb
mov
cmp
xor
fldcw
fs
lock
iret
leave
arpl
xlat
je
push
mov
js
dec
and
xchg
cli
repnz
data16
aad
call
les
push
or
fnsave
cdq
xor
pop
scas
jecxz
lods
push
data16
sub
ficom
ds
inc
pop
dec
inc
fild
jae
arpl
mov
dec
outs
inc
rcl
rol
push
fisubr
stos
adc
leave
into
push
cmp
je
adc
xchg
mov
adc
daa
jge
mov
jbe
fistp
in
mov
and
sub
or
call
or
xor
stos
loop
aas
mov
fidiv
cmps
inc
out
scas
cdq
xor
xchg
ret
jmp
rol
(bad)
mov
dec
cld
sbb
mov
jno
call
sub
ins
cmp
xchg
lahf
cmp
jns
outs
stos
iret
xchg
sbb
pop
add
neg
inc
xlat
pop
retf
xor
mov
leave
jmp
iret
stos
sbb
nop
sub
dec
mov
stos
or
jle
adc
in
sub
cmp
imul
test
iret
(bad)
cdq
sbb
lods
imul
xchg
cli
pop
in
push
hlt
and
test
jp
push
out
inc
sub
dec
popf
addr16
ins
leave
dec
mov
cmps
mov
in
fisubr
and
pop
(bad)
popa
pop
sub
(bad)
fbstp
sub
std
jmp
rcl
test
xchg
inc
lods
pushf
imul
popa
jg
daa
in
xsha1
cmps
or
inc
sub
xchg
sbb
mov
sub
add
sbb
arpl
icebp
pop
into
and
ficomp
pop
mov
adc
out
xchg
add
mov
bswap
sti
cs
mov
lahf
push
lds
ret
or
xor
xor
sub
xchg
dec
aam
xor
repz
adc
adc
xor
es
push
push
xchg
out
adc
dec
ins
xor
(bad)
cmp
adc
fstp
xor
mov
ins
or
jnp
jne
dec
mov
in
fsub
mov
sub
push
pop
push
mov
mov
cmp
mov
xchg
and
das
popa
pop
aam
mov
sub
inc
sub
aaa
jle
outs
mov
cmp
int3
idiv
mov
adc
mov
mov
xor
xchg
mov
adc
gs
sub
dec
cmp
test
xchg
(bad)
movs
out
fistp
in
inc
push
test
ins
loope
idiv
push
cmp
and
dec
add
ja
nop
mov
out
jne
mov
or
arpl
retf
push
in
cwde
fs
bound
sub
mov
and
ret
outs
dec
addr16
mov
xchg
mov
xor
jle
push
lods
data16
adc
jnp
call
pop
imul
movs
(bad)
fst
ja
inc
(bad)
shl
jmp
les
xchg
sub
push
out
mov
jmp
sub
cmp
xlat
mov
pop
inc
sub
jle
pop
daa
aaa
sbb
lds
nop
shl
pop
ss
mov
jnp
gs
pop
jmp
sahf
pop
loop
and
imul
mov
stc
xor
or
pop
push
cmp
mov
out
push
pushf
jmp
cmp
inc
stos
xor
and
ins
pop
xlat
inc
ret
push
or
paddsb
dec
pop
mov
fwait
pop
push
dec
dec
add
cmp
jmp
jp
arpl
mov
or
jl
mov
xor
xchg
inc
fucomi
cwde
xchg
jle
pop
fmul
cmp
fiadd
call
xchg
adc
and
into
aad
pop
cli
adc
aad
dec
inc
pushf
mov
mov
jnp
add
jno
xchg
hlt
in
sbb
adc
int3
movs
jns
jle
xchg
push
loopne
out
nop
mov
and
int3
repnz
cmp
movs
lods
loope
scas
sbb
jmp
sbb
call
cli
sub
in
cmp
xor
sbb
push
mov
or
cmp
inc
popf
mov
in
push
pop
enter
pop
push
popa
xor
inc
adc
dec
dec
push
arpl
aas
outs
pmuludq
or
shl
(bad)
lock
stos
out
jbe
mov
scas
mov
repz
cmp
pop
outs
scas
repz
add
outs
stos
jno
leave
push
jns
cmp
clc
xchg
popa
and
sbb
aam
jae
xchg
lea
je
inc
ins
outs
jns
out
and
add
leave
in
shl
dec
pushf
pop
cli
test
push
or
mov
jo
fidiv
pand
test
cmp
xchg
push
jne
mov
cwde
out
daa
lods
pop
sub
sbb
push
push
push
clc
movs
and
rcr
sub
pusha
call
push
adc
push
pop
dec
lods
dec
pcmpgtw
xchg
cwde
sti
retf
retf
and
mov
data16
push
js
loop
sub
mov
js
xchg
pop
pop
pop
out
mov
jne
inc
ret
cmp
or
les
popa
jns
pop
ss
cld
enter
out
and
ds
mov
push
ret
mov
push
out
enter
push
pop
inc
add
stc
mov
lahf
sbb
mov
mov
xchg
lock
sub
jmp
ret
ror
dec
sti
mov
or
cdq
or
imul
push
ret
fisub
cwde
sti
sbb
pop
sub
cmps
fst
xlat
push
test
mov
bound
int
ror
aam
mov
(bad)
aad
imul
ja
push
mov
xor
(bad)
xlat
sub
pop
ror
push
cmp
jb
(bad)
push
sub
scas
lods
pop
lods
mov
xchg
xchg
push
jmp
jae
add
scas
add
mov
data16
popf
xor
push
inc
xor
fldpi
and
ret
inc
stos
push
mov
movs
jbe
pop
popf
sub
jmp
xchg
mov
adc
shl
jl
(bad)
fxch
ficomp
lods
push
xchg
jmp
jmp
jnp
stc
mov
out
or
imul
xor
test
jecxz
fild
jg
inc
pop
ins
xchg
cmp
int
jg
adc
out
fbstp
fnstcw
sbb
mov
mov
jg
mov
xor
push
div
dec
rcl
mov
jbe
mov
cmp
imul
gs
jns
bound
call
add
lods
shr
je
mov
cmps
sbb
das
xchg
cmp
jl
daa
ror
imul
rcl
sar
mov
clc
cmps
out
fnsave
jmp
inc
xor
out
clc
daa
mov
and
cli
push
or
xor
add
les
push
fild
pop
push
sbb
jge
in
add
dec
jecxz
mov
or
dec
imul
int
jne
pop
mov
test
fimul
test
mov
jl
mov
into
and
jb
mov
add
cld
popa
in
sub
out
fwait
xchg
fidiv
cs
or
inc
mov
emms
dec
lods
dec
mov
ss
icebp
std
jne
div
inc
fdiv
outs
mov
pop
in
sahf
or
push
pop
stos
jns
and
gs
xor
mov
aam
and
(bad)
mov
dec
add
sbb
into
ret
xchg
sub
aam
inc
cmp
or
icebp
mov
sub
jl
(bad)
xor
fstp
lods
or
fisttp
and
xchg
dec
jle
mov
xchg
sbb
repnz
cmp
and
outs
sub
and
mov
or
idiv
pop
push
cmp
outs
inc
leave
mov
daa
retf
jmp
jecxz
fdivp
pop
dec
jp
int
ss
push
add
mov
mov
and
test
push
mov
enter
out
cli
dec
sub
inc
imul
test
mov
rcl
mov
fstp
mov
ret
psraw
rcl
sub
adc
and
pop
popa
pop
into
loop
fimul
mov
fist
enter
push
inc
inc
repz
fwait
xchg
pop
mov
imul
dec
mov
mov
fadd
jo
adc
fs
inc
sub
lea
xlat
mov
cmc
xor
mov
mov
mov
push
movs
movs
dec
jecxz
inc
scas
sub
(bad)
in
repz
jg
mov
aas
inc
neg
add
popa
jle
ja
retf
mov
pop
mov
sbb
stos
or
dec
push
lock
(bad)
cmp
sbb
aam
lods
inc
xchg
mov
inc
pop
lods
addr16
cmps
xchg
shr
or
fiadd
int3
popa
ins
and
movs
daa
mov
ins
popa
cs
xor
jle
mov
inc
adc
and
or
mov
sahf
mov
mov
sub
xor
mov
hlt
xlat
jne
data16
(bad)
adc
bound
or
or
or
mov
sbb
enter
jmp
ret
xchg
and
or
xor
das
ss
hlt
mov
jmp
cs
push
mov
mov
push
lahf
scas
cmp
movs
lock
adc
inc
or
jmp
call
aaa
fist
fcomp
inc
adc
cmps
leave
jnp
cmps
test
aaa
xor
push
leave
cdq
cli
pop
adc
int
idiv
pop
dec
ja
add
cwde
(bad)
cmp
mov
fwait
or
dec
cmp
out
push
jo
xor
push
push
xchg
std
cmp
add
(bad)
icebp
imul
inc
movs
jg
dec
in
and
xlat
xchg
fcom
mul
mov
(bad)
rol
xor
pop
(bad)
mov
jge
push
out
jmp
in
xor
mov
add
(bad)
mov
dec
lods
ret
adc
jae
push
mov
and
jae
stos
inc
and
jge
fs
or
cmp
nop
ds
push
inc
xchg
add
cmc
add
inc
outs
aaa
fcomp
pop
rcr
sbb
cmp
mov
dec
outs
push
mov
fcom
shl
adc
out
sbb
jge
sahf
lock
pop
xor
xor
ds
ret
push
clc
mov
mov
data16
lea
sbb
stos
in
xchg
mov
pop
sahf
in
pop
xchg
mov
neg
or
call
sbb
mov
lods
xor
or
scas
sub
shl
jo
scas
gs
mov
sbb
sahf
stc
out
jmp
(bad)
mov
sbb
pop
pop
cmp
add
in
shl
xchg
inc
push
and
push
mov
js
mov
clc
loopne
ins
mov
jne
iret
call
jmp
rcl
cmp
outs
mov
in
ss
xor
mov
inc
or
xor
stos
adc
sbb
or
xor
dec
sbb
gs
push
test
pushf
jge
sbb
adc
(bad)
rcr
cli
dec
mov
shl
mov
mov
dec
test
shl
fwait
mov
(bad)
push
pop
push
mov
mov
or
or
mov
cmc
(bad)
mov
mov
cmp
add
dec
lock
ins
cs
pop
dec
out
test
mov
xchg
popa
loopne
cli
mov
pop
mov
out
mov
dec
and
inc
inc
in
aaa
lods
dec
test
cmp
popf
loopne
or
into
outs
fdiv
dec
sub
or
push
mov
xor
mov
out
mov
(bad)
scas
add
dec
and
mov
xor
mov
imul
sahf
int3
and
mov
(bad)
mov
or
jg
jae
sub
mov
(bad)
out
out
retf
cmp
jmp
mov
xchg
xchg
sbb
scas
jle
das
cmp
push
iret
mov
pop
sub
fwait
mov
mov
xor
cmc
ins
(bad)
pop
add
clc
push
aam
xor
mov
fwait
inc
dec
dec
lods
(bad)
pop
fwait
and
shr
std
inc
lods
lock
adc
mov
(bad)
cmp
imul
(bad)
fdivrp
pop
outs
sub
lods
and
jmp
loopne
sti
mov
mov
jo
inc
fdivr
xchg
pop
nop
aaa
inc
adc
test
mov
mov
(bad)
test
dec
push
fisttp
loopne
xor
mov
dec
fwait
out
push
movs
mov
mov
outs
scas
lods
xor
loop
inc
cs
test
mov
inc
lods
in
adc
outs
push
pop
pop
mov
mov
push
pop
adc
mov
xchg
pop
mov
inc
(bad)
add
loop
add
push
sbb
inc
or
and
add
inc
in
fiadd
inc
sub
inc
jmp
ds
or
or
shl
iret
(bad)
mov
jno
push
pop
pop
push
ret
mov
jmp
sbb
pop
mov
push
or
rcr
jmp
add
xchg
mov
jl
cs
mov
inc
mov
sbb
and
dec
lahf
scas
mov
mov
call
fwait
fs
inc
mov
int3
push
xchg
mov
fmul
add
push
ins
adc
xor
arpl
or
dec
retf
shl
mov
inc
call
(bad)
out
repz
and
sbb
inc
aas
mov
jl
pop
cmp
enter
(bad)
cmp
rol
js
mov
adc
add
adc
jne
js
gs
rcl
add
pop
cmp
add
xchg
xor
or
cs
or
gs
xchg
jmp
(bad)
xor
push
sbb
out
xor
repnz
clc
mov
dec
stos
daa
push
mov
(bad)
scas
out
xlat
cli
push
adc
lea
imul
hlt
(bad)
mov
aam
mov
xchg
stos
je
and
inc
hlt
dec
aam
adc
fnstsw
leave
mov
fistp
cmp
pop
fcom
popf
xor
or
add
cs
scas
or
rcl
sbb
mov
pop
jbe
cdq
inc
cmp
inc
das
xchg
pop
push
lea
pop
lahf
mov
sub
pop
(bad)
xchg
adc
sub
xor
ret
mov
pop
ins
add
je
mov
xchg
mov
jle
aas
sbb
jecxz
add
mov
cli
push
(bad)
xchg
cli
cmp
mov
push
sbb
js
dec
inc
int3
iret
sbb
push
fcmovu
sbb
hlt
loop
lds
push
adc
cmps
call
fild
das
jl
in
push
mov
fdivrp
adc
popa
xchg
sahf
neg
push
sub
mov
inc
lods
aam
clc
data16
outs
nop
jge
mov
das
sbb
pop
xchg
or
lods
scas
cmps
adc
aam
sub
mov
jo
xor
push
xchg
ret
repz
adc
xor
cmp
pop
psrad
fadd
in
xlat
out
pop
cmp
test
and
cs
sbb
nop
les
mov
out
je
pop
jbe
popa
and
pop
das
shr
xchg
lods
sub
pop
pusha
mov
add
stos
gs
frstor
mov
je
mov
push
(bad)
xor
in
fnsave
call
pop
push
fldenv
xor
out
and
fstp
cwde
pop
sbb
outs
dec
jmp
cmp
shl
or
les
or
jle
lods
dec
sbb
xor
ins
movs
xchg
leave
sahf
stos
push
mov
and
inc
mov
scas
imul
mov
adc
sub
sbb
pusha
enter
dec
in
pop
loope
cwde
lods
es
mov
push
dec
cmc
stc
cmps
push
in
add
fadd
(bad)
mov
fisttp
and
xchg
dec
or
push
cs
add
pop
jge
or
cmp
xchg
int3
(bad)
push
pop
test
mov
and
fadd
pop
push
cmp
pop
out
inc
repz
dec
mov
(bad)
fincstp
dec
xlat
ds
daa
std
mov
mov
push
cmp
call
inc
pop
test
fcom
or
outs
sahf
and
mov
lahf
fild
imul
stc
movs
mov
mov
pop
cmps
mov
push
mov
arpl
and
mov
fisttp
pop
adc
cmp
je
sub
bound
js
sub
mov
add
adc
sti
push
outs
or
pop
nop
(bad)
or
push
mov
dec
cmps
hlt
lahf
das
je
out
and
push
or
or
ret
xchg
ins
fadd
dec
sbb
(bad)
and
add
mov
shl
popf
aam
dec
xor
ds
cs
add
mov
in
pop
and
jne
stos
adc
nop
aad
jnp
out
jbe
push
inc
sar
push
ja
das
pushf
add
pop
and
push
jnp
sub
movs
icebp
dec
call
popf
sub
lds
repnz
push
ja
adc
loopne
inc
inc
push
jp
iret
jmp
jmp
mov
mov
loopne
mov
fmul
js
jno
addr16
push
fwait
test
adc
call
nop
outs
inc
add
aam
(bad)
jge
inc
out
jecxz
add
and
daa
ror
pop
in
faddp
data16
adc
lods
push
test
rcr
out
fs
sub
(bad)
mov
ficom
xchg
out
cld
mov
stos
pop
aaa
jle
aaa
and
xor
adc
sar
popa
pop
jle
arpl
adc
pop
inc
inc
stos
inc
fst
add
mov
cmps
into
cwde
shl
dec
or
sbb
jb
cmc
popf
ficom
out
jp
lods
push
hlt
inc
push
push
cmps
idiv
and
call
addr16
jmp
pop
cmps
ja
jmp
hlt
mov
sbb
and
jmp
ror
mov
je
or
ficomp
push
mov
add
icebp
js
push
ins
inc
mov
addr16
(bad)
(bad)
jmp
cld
push
out
add
retf
sub
lods
clc
mov
add
mov
aas
push
mov
mov
loope
scas
test
call
jo
iret
cmp
mov
dec
mov
or
cwde
dec
shrd
scas
sub
stos
pop
movs
dec
mov
loopne
xlat
stos
sbb
cmc
or
push
jmp
mov
pop
xor
sub
test
or
inc
sti
cmp
sbb
mov
icebp
popa
dec
and
jne
mov
std
out
mov
xor
jno
leave
pop
cli
or
and
enter
mov
push
mov
loop
sahf
test
and
pop
pushf
call
icebp
test
sbb
ins
jge
mov
movs
inc
nop
dec
(bad)
xchg
add
mov
xor
arpl
mov
and
push
inc
scas
stc
xchg
and
(bad)
sar
add
push
pop
mov
push
inc
fstp
mov
test
mov
push
aad
cwde
mov
push
xchg
sub
in
test
dec
inc
std
nop
and
test
pop
imul
sub
dec
fisttp
jge
cmp
mov
lods
push
xchg
movs
cmp
sbb
push
les
dec
mov
sub
cs
pop
inc
not
mov
sub
xor
cmp
mov
inc
add
mov
mov
ss
mov
ins
fs
pop
sbb
in
xchg
push
js
pop
push
dec
add
outs
leave
jecxz
test
sub
xchg
fs
add
jbe
loope
mov
jae
sbb
fcmove
adc
jno
aad
test
xchg
inc
adc
jnp
pop
fiadd
cmps
mov
mov
push
pop
dec
into
rcr
in
or
daa
sbb
fld
xchg
ins
jne
sbb
repnz
ror
add
mov
inc
rcr
mov
mov
sub
bound
in
dec
xor
pop
fld
fidiv
jg
aam
dec
movs
mov
(bad)
cmps
adc
mov
es
push
outs
mov
mov
push
sub
out
(bad)
sbb
cmps
stos
outs
call
xchg
cwde
adc
push
inc
arpl
out
cmp
xchg
jnp
jb
adc
(bad)
xchg
ins
fild
sub
stos
mov
or
and
shl
push
pop
sahf
aam
rol
xor
jmp
lea
out
push
test
and
jmp
popf
lock
jge
imul
sub
out
test
mov
nop
and
retf
jnp
outs
stos
je
pushf
add
mov
arpl
sub
outs
mov
mov
sbb
pop
cmps
call
xor
inc
jp
dec
dec
inc
and
mov
ret
in
jb
sbb
mov
movs
rcl
sub
mov
loopne
call
push
mov
xor
lahf
mov
lock
xor
sbb
add
sar
adc
cmc
sub
pop
sti
repnz
adc
repnz
cmp
imul
in
imul
xchg
push
adc
push
pop
gs
and
outs
add
bound
test
jl
mov
xchg
movs
call
(bad)
test
xchg
imul
sbb
or
jmp
fdivr
fcom
add
mov
push
mov
test
inc
pop
sbb
push
push
test
arpl
sbb
jae
or
xchg
and
add
sub
jmp
dec
(bad)
nop
mov
xchg
dec
cmps
jp
jle
sub
retf
cli
jle
dec
add
xor
or
fbld
lock
add
aas
lock
movs
loopne
pop
arpl
or
sub
mov
mov
mov
lods
add
fs
iret
push
mov
dec
dec
enter
mov
jb
xor
in
or
hlt
or
into
pop
mov
mov
push
sbb
ret
dec
xchg
shl
pop
fdivp
ret
fld
xchg
icebp
(bad)
pop
mov
js
or
sub
add
sub
nop
js
jge
cmc
aam
inc
dec
and
jge
(bad)
cdq
aad
xchg
mov
dec
pop
sub
ss
aaa
add
in
xchg
(bad)
in
and
mov
out
add
fwait
pop
fnstenv
or
mul
movs
and
mov
pop
int3
sbb
ins
shr
inc
and
mov
push
cmp
or
outs
in
or
dec
(bad)
cmp
jp
mov
add
hlt
lahf
dec
icebp
aas
idiv
fnstcw
out
mov
rcl
movs
mov
cmp
cli
push
call
push
cwde
xchg
xchg
(bad)
outs
adc
xchg
push
jmp
fild
inc
mov
sbb
fwait
mov
pop
sbb
scas
popa
fstp
cld
mov
add
push
mov
and
push
inc
out
jmp
out
push
pusha
and
pop
adc
ds
inc
mov
add
mov
push
test
outs
and
aas
inc
cmps
ins
add
mov
inc
mov
mov
push
pop
pop
adc
retf
push
out
xor
or
inc
mov
fist
add
cdq
sub
sbb
push
mov
inc
xchg
adc
jbe
std
mov
jo
fcom
mov
push
cli
psllq
add
in
out
pop
adc
jmp
ja
add
stos
jl
fld
sbb
xchg
fistp
mov
ja
(bad)
dec
ficom
adc
cmps
arpl
leave
and
fild
sub
jb
inc
pop
mov
inc
imul
xor
out
push
(bad)
cmp
push
ffree
outs
xor
rcl
in
sub
outs
aad
pop
(bad)
test
in
push
mov
cmp
dec
mov
out
leave
adc
push
ds
xchg
jne
call
push
jge
in
cmp
and
out
fs
mov
repz
imul
aas
mov
push
jp
pop
sbb
cmps
fisttp
sbb
scas
pusha
jle
pop
out
daa
js
sar
cmp
or
sbb
popf
ficom
ss
dec
add
and
sbb
fadd
fisubr
das
mov
and
aaa
inc
inc
ins
inc
pop
aam
pop
test
or
pop
nop
jno
test
adc
push
jnp
nop
add
(bad)
(bad)
shr
stc
mov
rcr
mov
jno
jl
cmp
xchg
dec
jo
stos
frstor
jae
daa
jmp
ret
sbb
cmp
adc
xchg
in
and
adc
(bad)
add
pop
adc
mov
jecxz
and
and
push
aaa
xchg
in
cmp
and
mov
adc
dec
ss
sbb
sub
scas
sub
cmp
mov
inc
(bad)
jp
or
mov
sbb
dec
push
adc
mov
(bad)
push
dec
sahf
(bad)
cmp
xor
inc
pop
inc
or
inc
sub
rol
sar
clc
(bad)
lea
das
loop
xchg
jl
into
aad
out
jb
push
mov
and
add
ret
aaa
pop
xor
push
inc
push
sub
(bad)
(bad)
rcr
jecxz
arpl
xor
sub
sbb
mov
sub
xchg
add
jmp
jns
add
idiv
shl
(bad)
adc
mov
xchg
push
xor
lods
sbb
fdivr
mov
je
dec
and
pop
jg
retf
adc
mov
xor
sbb
dec
ds
ss
add
pop
cmps
daa
jno
fwait
push
xor
sub
ds
sbb
popf
fwait
mov
adc
jbe
pop
rol
dec
leave
cld
out
fld
xor
inc
sbb
clc
xchg
inc
dec
retf
aad
clc
xlat
mov
pop
cmp
cmp
push
imul
pop
cbw
mov
nop
sti
dec
retf
(bad)
xchg
(bad)
mov
jge
repnz
inc
sub
mov
xor
das
stc
cmp
sub
cmp
adc
mov
(bad)
mov
cmc
mov
adc
fstp
int3
mov
cmp
shl
repnz
xor
jne
mov
mov
cmp
popf
pop
pop
push
and
movs
xchg
lea
mov
inc
or
rol
jl
js
dec
(bad)
mov
inc
(bad)
sub
add
xchg
cmp
jmp
jne
or
ins
push
mov
add
push
sbb
test
xor
mov
or
pusha
int3
pushf
nop
pop
mov
pop
xor
inc
sub
scas
nop
dec
cmp
icebp
xchg
sbb
repz
js
dec
jmp
pop
xor
sbb
je
xchg
push
ret
dec
inc
xchg
push
push
inc
add
test
call
sbb
push
fnstenv
lods
sti
xor
pop
pop
mov
adc
fsincos
mov
(bad)
and
cld
ds
in
call
jmp
ficomp
scas
inc
push
test
int3
cmp
or
mov
add
jnp
mov
push
idiv
stos
push
leave
or
mov
loop
std
add
pop
shr
jns
sub
mov
inc
push
add
fcomi
mov
and
pop
jmp
or
cdq
int3
lods
sub
cmp
in
imul
repz
outs
mov
ror
mov
stos
rcr
clc
push
sti
in
bound
mov
push
in
das
xchg
imul
xchg
ret
mov
and
mov
or
(bad)
adc
adc
and
(bad)
pusha
ss
jmp
mov
jl
stos
mov
xlat
push
fnstcw
or
loop
clc
pop
jns
push
mov
scas
psubw
in
and
add
loopne
xor
xchg
leave
push
ror
xchg
push
retf
xchg
cld
and
loopne
sub
mov
push
jge
xlat
hlt
xchg
push
ror
pop
stc
add
fidiv
and
stos
and
xor
cmp
mov
clc
or
pushf
pop
fnstenv
repz
mov
mov
jns
retf
sbb
lods
jae
sbb
ss
push
rol
mov
ror
cmp
mov
or
popa
pushf
push
into
test
pop
ins
call
fmulp
out
sbb
dec
push
ret
cmp
mov
movs
add
mov
push
mov
inc
adc
or
pushf
daa
movs
aad
leave
mov
out
dec
adc
enter
inc
jae
xor
lahf
(bad)
jnp
cld
loopne
inc
inc
mov
js
push
inc
xchg
or
das
xchg
ror
adc
into
jp
inc
outs
lea
add
repz
and
inc
fwait
pop
cli
pop
popf
pop
dec
sar
mov
cmc
movs
repnz
frstor
outs
add
xchg
push
in
dec
shl
cmps
js
fidiv
cli
out
mov
cmp
cmp
inc
xchg
mov
jmp
mov
aaa
not
jno
push
xor
stc
inc
mov
lds
push
push
mov
mov
mov
jno
rcl
lods
mov
mov
mov
and
dec
fwait
aaa
retf
imul
xor
ret
jb
mov
sar
mov
push
aad
es
(bad)
fdiv
(bad)
sbb
(bad)
mov
lods
pop
push
and
and
adc
js
mov
jge
mov
sub
inc
icebp
ins
inc
std
bound
mul
ror
sub
retf
or
or
mov
(bad)
jb
rcl
sub
scas
icebp
out
xchg
sub
inc
mov
and
push
hlt
loopne
or
out
jg
mov
pop
rep
fsub
pop
sbb
adc
jmp
rol
jbe
inc
dec
xlat
mov
or
push
stos
mov
stos
and
and
enter
sbb
imul
add
pop
push
or
xchg
mov
daa
and
shl
mov
push
fist
sub
xor
jp
push
push
loopne
out
mov
les
inc
mov
mov
xchg
xchg
pop
dec
sar
inc
sbb
dec
call
pop
mov
or
dec
fld
scas
cdq
mov
mov
jle
xor
(bad)
add
xchg
push
push
or
cwde
pop
mov
and
out
fidiv
mov
jno
and
sbb
sbb
pop
lods
hlt
ret
cmp
div
mov
pop
mov
jb
imul
or
leave
xor
jo
mov
je
(bad)
repz
loop
aam
and
mov
loop
inc
push
mov
rcl
jmp
clc
into
cmp
mov
push
movs
mov
and
lea
jmp
fldenv
inc
not
push
ins
xchg
out
xor
repnz
data16
adc
loop
into
add
push
jnp
cmps
jmp
jmp
ss
push
in
sbb
mov
pop
push
or
scas
and
mov
bound
arpl
jp
push
jle
or
call
mov
outs
cs
retf
stos
data16
cmps
cs
out
repnz
mov
add
or
jle
adc
adc
in
mov
pop
sbb
mov
rcr
jne
mov
addr16
out
mov
sbb
xor
(bad)
and
ror
icebp
push
cmps
loop
div
push
jmp
int
ja
mov
push
idiv
rcl
dec
icebp
inc
rcl
mov
dec
out
push
mov
sub
inc
xor
test
pop
xor
push
sar
clc
and
and
sbb
or
cwde
je
mov
push
mov
adc
pop
shl
in
inc
cld
fwait
in
(bad)
call
loopne
cmc
loope
(bad)
cwde
into
popf
and
add
sbb
test
imul
cmp
dec
xor
test
mov
dec
cmp
adc
cmp
jnp
xchg
xor
pop
rcr
retf
cmps
in
mov
mov
inc
jns
jnp
movs
addr16
jecxz
icebp
and
cld
imul
ins
enter
(bad)
call
addr16
inc
or
inc
cwde
sti
mov
xchg
jecxz
repnz
xor
inc
push
cmp
jae
scas
mov
bound
dec
add
lea
mov
sbb
cli
push
std
jg
ss
cmp
mov
or
je
into
jb
pop
dec
add
add
movs
adc
bound
mov
jle
mov
dec
nop
dec
push
iret
push
or
cmp
jbe
aam
mov
xchg
das
mov
test
push
bound
push
push
sub
and
mov
outs
push
scas
call
or
aad
cli
push
sub
pop
xchg
inc
mov
or
cld
jns
jb
add
shl
dec
call
dec
xchg
aaa
je
add
test
xchg
xor
ja
and
call
xor
dec
sahf
(bad)
mov
mov
cmp
aad
jne
xlat
bound
ins
gs
xchg
call
loopne
out
pusha
cwde
in
pop
xor
daa
sahf
mov
or
dec
mov
mov
sbb
pop
mov
mov
movs
in
stos
add
pop
inc
adc
mov
xor
jg
dec
add
fiadd
pop
jnp
(bad)
adc
dec
push
xor
push
ins
mov
dec
xchg
(bad)
mov
test
mov
ficomp
jl
mov
cld
aad
cmp
push
cmp
mul
data16
pushf
dec
mov
sti
sub
push
sti
inc
adc
sbb
gs
mov
inc
adc
dec
(bad)
popf
sub
aas
(bad)
stc
inc
mov
das
mov
outs
push
add
inc
jo
(bad)
repz
or
dec
out
lea
nop
xor
cmp
mov
dec
outs
pushf
aas
mov
shl
adc
mov
mov
pushf
clc
inc
call
(bad)
(bad)
mov
out
sbb
pop
js
movs
cli
js
push
xor
imul
add
pop
out
sar
adc
inc
mov
cmp
out
jne
(bad)
jg
pusha
mov
call
xchg
test
push
out
xor
(bad)
dec
sysenter
cmp
inc
and
shl
cwde
sub
jmp
daa
jl
(bad)
pusha
gs
jl
std
xor
in
(bad)
xchg
shl
xor
ret
push
stos
jnp
or
sub
ja
or
js
sbb
out
adc
std
xor
xchg
fnstenv
and
jle
imul
pop
call
ret
div
shl
hlt
inc
lock
cmp
inc
mov
imul
pop
sub
xor
jnp
adc
add
aad
retf
inc
sbb
lods
fcomp
xchg
jno
cmp
scas
jl
pusha
inc
ins
jo
or
and
sbb
mov
ja
or
sbb
xchg
cmp
xchg
xor
cmps
sbb
dec
int3
xor
shr
sbb
popa
aaa
cmp
adc
loopne
(bad)
xor
jmp
add
fcomp
cs
dec
call
mov
test
pusha
pusha
fdivr
adc
(bad)
gs
or
inc
sti
jl
in
fidiv
cdq
jb
add
mov
jmp
cmps
mov
(bad)
mov
sbb
jo
jmp
lds
sbb
out
dec
cmp
jmp
call
(bad)
int3
into
jmp
scas
and
add
mov
cmps
and
pop
adc
inc
js
mov
xor
sbb
xor
in
lock
ror
sub
pop
out
mov
and
cdq
je
inc
jne
leave
cdq
stc
dec
jl
scas
fimul
mov
push
cmps
es
mov
ficom
inc
pop
sbb
sub
jae
arpl
outs
mov
and
sti
jecxz
ja
in
push
cmps
sub
repnz
fwait
adc
dec
ins
lock
pop
jne
add
pop
pop
cmp
and
cs
jmp
and
xor
adc
or
xor
push
add
fild
shl
and
xchg
sbb
imul
shr
(bad)
push
push
arpl
not
mov
out
fcomp
cmp
xchg
sub
loop
pushf
xchg
rol
clc
cmp
adc
shl
pop
cmc
dec
adc
cmc
iret
fnstcw
imul
lock
add
sbb
xlat
cmc
pop
inc
pop
hlt
das
inc
jmp
mov
sub
jns
sbb
cmp
xchg
dec
cmp
call
and
sbb
lahf
add
push
fisubr
add
nop
repnz
add
push
ss
adc
out
arpl
fs
jg
data16
imul
int
cmp
jle
lock
ret
int
ret
jmp
inc
push
(bad)
xor
push
xor
scas
jo
add
push
mov
popf
sbb
mov
test
lods
fs
push
or
dec
inc
mov
and
sub
pusha
(bad)
cmps
inc
repnz
cmp
jecxz
nop
mov
add
aam
call
shr
mov
hlt
xchg
mov
cmps
rcr
aaa
das
xchg
test
in
mov
cwde
pop
sbb
test
mov
outs
sub
repz
pop
(bad)
pop
inc
fldenv
xor
(bad)
ficomp
mov
jle
aam
sub
pushf
push
xchg
(bad)
pop
xchg
push
out
sbb
int3
mov
mov
dec
cmps
sub
out
fidiv
dec
jl
add
mov
bound
aam
pop
lods
movs
fcmovbe
dec
xchg
shr
in
mov
adc
and
in
cdq
jle
xchg
sub
fcmove
mov
fnsave
fld
scas
xchg
pushf
dec
pop
cmp
int
movs
pop
mov
jae
xor
pop
mov
cmp
ret
pop
mov
xor
xchg
sub
pop
lock
fcmovnbe
sub
mov
nop
and
mov
in
and
cwde
inc
fimul
pop
and
scas
cmp
(bad)
aas
sbb
sbb
ins
cmps
aaa
jg
or
arpl
rol
mov
invd
iret
enter
cwde
cmp
push
xchg
iret
and
dec
outs
add
push
iret
mov
push
in
jbe
xor
inc
adc
add
mov
push
pop
pop
cmp
je
pop
mov
daa
mov
jb
shr
jmp
sbb
test
xor
xor
or
push
adc
int
jmp
mov
call
mov
cmp
xor
jb
push
sub
pop
imul
mov
xor
mov
ins
in
outs
out
inc
(bad)
(bad)
xchg
jg
mov
arpl
cs
dec
push
xor
pop
xor
inc
mov
ret
sbb
rcl
mov
cli
lods
and
pop
(bad)
loop
inc
ins
xlat
sbb
push
aad
jno
push
test
cdq
mov
hlt
sbb
pop
dec
pop
jo
call
or
lahf
cmps
loop
test
mov
cmps
jne
mov
pop
add
mov
pop
test
ins
or
cmc
loop
push
fst
and
mov
add
fimul
retf
inc
inc
mov
adc
mov
pop
ds
std
push
mov
jecxz
push
inc
clc
lds
sub
(bad)
pop
movs
pop
cwde
push
adc
pusha
xchg
adc
rol
jbe
adc
sti
aas
neg
xchg
je
inc
add
mov
popf
out
sbb
and
or
add
loopne
cli
or
mov
js
std
add
cli
or
in
nop
mov
push
sub
jmp
mov
imul
push
mov
mov
mov
jo
rol
test
ins
push
pop
ror
clc
jns
call
dec
push
fst
xchg
rol
stc
hlt
aas
push
mov
(bad)
jnp
ss
jnp
sbb
dec
lods
or
push
stos
arpl
shr
adc
mov
cmps
aas
push
in
in
push
not
icebp
ror
aad
pop
mov
jl
addr16
test
nop
pop
js
rcl
or
jle
mov
mov
push
sbb
enter
xlat
add
xlat
cdq
add
movs
ret
pop
bound
inc
fcmovnbe
cld
and
bound
fcmove
(bad)
(bad)
mov
and
sahf
imul
and
xchg
xchg
mov
add
in
mov
xchg
enter
mov
push
mov
int3
add
in
fistp
or
xchg
fbld
call
mov
shr
sbb
or
lock
push
jns
cmp
sbb
mov
jne
adc
inc
push
mov
(bad)
xchg
push
(bad)
dec
adc
mov
loop
and
mov
out
and
fld
mov
cs
cmp
cmp
mov
int
int3
xor
stos
enter
lock
es
cmp
jmp
push
aas
xor
adc
cld
cdq
(bad)
inc
sti
sbb
in
aad
mov
jb
ins
daa
repnz
mov
mov
fwait
jnp
mov
inc
xor
repz
xor
mov
sysexit
mov
add
cmps
push
pop
add
rol
lea
and
push
scas
adc
popf
jb
loopne
cs
mov
mov
xlat
rcr
cli
xor
repz
ja
cmp
(bad)
(bad)
pop
jo
jmp
aad
in
(bad)
xor
aas
lods
les
imul
out
xchg
push
cli
adc
push
test
call
fsubr
retf
xchg
cld
pop
or
lds
mov
sbb
mov
cmps
jno
mov
add
jb
inc
mov
push
adc
jmp
or
pop
inc
ins
sub
mov
dec
fcmovnb
cmp
pop
xchg
cmp
cmp
push
and
lock
mov
xor
dec
mov
lds
xchg
adc
sbb
or
ret
jae
jmp
(bad)
scas
xor
jl
xchg
pop
push
push
xchg
cmp
repz
mov
(bad)
out
dec
(bad)
jnp
mov
lds
(bad)
shr
(bad)
ja
or
aaa
ds
and
add
imul
inc
(bad)
cmp
inc
pop
inc
arpl
sbb
xchg
mov
sub
push
fwait
pusha
mov
cmp
inc
and
scas
add
adc
scas
pop
rcl
push
lahf
or
pop
loop
movs
jle
sbb
mov
cs
adc
gs
mov
mov
and
cld
loopne
sar
addr16
jmp
clc
xchg
in
mov
mov
ds
test
adc
dec
add
icebp
popa
cli
lods
das
and
dec
pop
(bad)
out
adc
xor
cld
pop
repnz
adc
push
dec
push
mov
loop
mov
pop
jns
mov
inc
out
push
fisubr
movs
es
push
in
pop
imul
jne
cmp
daa
jns
ds
fidiv
jae
test
jl
mov
cli
push
lods
movs
rcl
enter
sbb
fld
xor
ds
popf
pop
jmp
verr
jl
stc
inc
inc
push
sar
gs
ret
push
scas
rcl
aad
mov
mov
add
movs
jmp
xchg
xchg
mov
jge
ins
xor
xor
bound
aas
(bad)
xor
jb
pop
add
loopne
and
sub
sbb
jp
ror
adc
adc
or
push
mov
mov
sub
mov
fwait
push
and
outs
lock
cmp
movs
arpl
pop
pop
stos
outs
and
repnz
jle
add
mov
lahf
das
jb
or
cmps
into
outs
sbb
xor
arpl
cmc
mov
pop
sbb
out
dec
retf
in
add
popa
jae
bound
or
mov
test
js
sbb
xor
scas
jne
mov
dec
sahf
or
mov
pushf
mov
hlt
ins
push
mov
pop
xchg
test
nop
fst
pusha
int
inc
xchg
fist
bound
(bad)
(bad)
push
xor
mov
imul
adc
ror
cs
cmp
and
mov
xlat
jp
(bad)
mov
les
lea
aas
mov
push
jl
pusha
jns
sbb
cmps
arpl
gs
and
pop
pushf
dec
xor
fs
pop
or
pushf
cmp
or
or
sbb
dec
psubq
imul
outs
or
pop
(bad)
add
fadd
xchg
mov
mov
bound
aad
xchg
sahf
sbb
lods
clc
ret
fs
scas
jl
test
ins
fs
fldenv
imul
out
icebp
cmp
icebp
repz
mov
mov
dec
imul
leave
inc
cwde
ret
es
adc
sbb
ret
jbe
inc
ret
movs
push
push
in
xchg
icebp
call
jecxz
xchg
mov
loopne
shl
cmp
mov
inc
movs
push
xchg
jmp
leave
lahf
in
and
dec
jp
jmp
inc
mov
inc
test
ficom
jmp
push
xor
stos
push
mov
dec
adc
sbb
rol
cmp
ins
pusha
mov
sub
or
lahf
jns
mov
jmp
inc
test
xor
mov
xchg
mov
test
loop
sti
stos
aas
mov
stos
sbb
sti
inc
push
jae
xchg
(bad)
(bad)
sub
push
ins
cmp
sahf
sub
jmp
aas
arpl
xor
jno
push
and
out
dec
mov
push
shl
mov
pushf
stos
sbb
xchg
movs
inc
pop
sub
and
push
jmp
outs
sub
sahf
aas
push
mov
push
add
repnz
jno
popf
mov
sti
ja
xor
xchg
js
arpl
outs
xchg
jno
jne
mov
and
jecxz
nop
sar
inc
jne
xor
in
pushf
jnp
dec
dec
add
push
fimul
push
xchg
test
repnz
add
outs
fld
data16
push
imul
fidivr
(bad)
ss
mov
imul
mov
leave
cli
test
jecxz
hlt
into
push
pop
dec
cld
fcom
(bad)
cdq
xor
push
inc
retf
rcl
xlat
and
mov
jecxz
jno
sbb
and
aaa
push
(bad)
pop
push
sub
cwde
mov
add
push
popf
sbb
jbe
pop
test
stc
gs
xchg
(bad)
cdq
aam
stos
retf
repz
cdq
call
retf
pop
adc
inc
gs
into
mov
and
pop
or
mov
xor
pusha
mov
mov
jns
add
cmc
pop
xchg
xor
or
jmp
es
rol
jmp
and
jle
mov
inc
leave
mov
cmp
pop
sbb
inc
mov
fbld
and
and
jl
and
repnz
sbb
mov
dec
push
or
inc
add
ret
or
neg
and
shr
jns
imul
pushf
dec
neg
test
and
std
xor
out
xor
(bad)
mov
xor
xor
push
ret
sbb
push
test
sbb
add
jle
sahf
sbb
cmp
mov
sahf
jnp
repz
fwait
div
inc
je
or
(bad)
xchg
test
aas
jge
aad
or
pushf
pop
mul
mov
cmps
test
jno
mov
aas
imul
xor
inc
sbb
lock
fsubr
nop
inc
sub
sahf
fst
jl
cwde
xor
pop
lods
and
pop
imul
xchg
xchg
aaa
ror
aas
mov
xor
imul
push
out
push
inc
addr16
cmp
add
add
sbb
loope
jg
mov
(bad)
and
js
sub
(bad)
xchg
loopne
aaa
jmp
mov
jecxz
jnp
ret
inc
xlat
dec
push
sub
ret
pushf
test
out
movs
imul
xor
idiv
mov
jns
fild
clc
je
inc
jns
jne
int3
aam
cmp
push
add
cmp
pop
and
push
pushf
sbb
mov
push
cmp
(bad)
sub
mov
hlt
sbb
pop
in
mov
adc
pop
retf
int
xchg
test
dec
xor
fcmovu
mov
psubq
push
div
add
jl
addr16
hlt
jae
and
nop
or
sub
nop
cmp
ins
push
pop
cmp
mov
loop
(bad)
aaa
ss
inc
inc
sub
cmp
loope
cmps
xor
je
ja
cmp
push
fdivrp
aaa
and
pop
mov
xchg
(bad)
pushf
mov
push
loop
in
jg
dec
gs
pop
dec
pop
cmps
cmp
jbe
mov
mov
out
pop
test
scas
add
jns
js
out
pop
into
cmp
push
dec
xchg
(bad)
fidivr
mov
enter
adc
pop
push
leave
dec
xor
dec
push
inc
cmc
pop
jle
pop
jmp
adc
cmc
jo
mov
js
sbb
add
mov
mov
lea
mov
jo
cli
aam
adc
call
lahf
xor
(bad)
fs
xchg
dec
push
rcl
mov
call
mov
mov
mov
mov
clc
outs
xor
push
lods
push
stos
xor
dec
lods
idiv
enter
ins
ror
or
push
sbb
mov
dec
jns
or
cmps
nop
enter
sar
add
jns
das
xchg
out
xchg
pop
repz
pop
cdq
and
add
repz
idiv
repz
inc
and
xor
xor
sub
out
fsub
mov
fwait
mov
lods
iret
aam
dec
lods
ret
in
ret
clc
call
nop
sub
jl
mov
push
(bad)
xlat
dec
imul
xlat
inc
repnz
push
pusha
rcl
and
std
jmp
je
fisttp
jle
or
jg
pop
in
xchg
xor
cld
cmps
push
stos
jmp
rcl
ret
arpl
arpl
repnz
daa
lea
mov
je
ror
fstp
je
add
push
and
mov
retf
jmp
sbb
add
pop
jle
mul
pop
cmp
nop
popa
xchg
in
push
add
mov
lods
inc
add
cwde
sahf
mov
jnp
hlt
adc
es
push
pop
in
and
out
leave
lods
enter
jp
mov
adc
aaa
or
mov
dec
xor
out
mov
mov
cmp
shl
pop
xchg
(bad)
mov
jno
dec
push
mov
fmul
xchg
and
mov
inc
sub
into
push
dec
loopne
popf
repnz
pop
sar
mov
sub
add
mov
mov
call
dec
jmp
int
daa
fld
add
xor
outs
leave
push
mov
leave
jge
das
imul
ins
jecxz
lahf
retf
in
mov
popf
mov
ins
repz
pop
push
aaa
dec
mov
xor
jb
std
push
repz
dec
shl
cmc
push
inc
out
mov
cld
mov
out
jmp
pusha
ror
push
xchg
test
xchg
idiv
xor
fdivr
push
jnp
ins
pop
xchg
sbb
mov
sub
jo
addr16
or
push
shl
fucom
cmp
test
jp
mov
das
sbb
mov
div
jbe
inc
mov
(bad)
jne
sub
out
mov
jbe
outs
lods
movs
xor
lds
sahf
mov
or
cwde
shr
aaa
mov
ficomp
repz
iret
call
mov
pusha
cmp
mov
retf
in
or
lea
popa
jg
sbb
loop
(bad)
xchg
cli
dec
xor
xchg
mov
sub
jnp
bound
test
cmp
inc
push
and
test
jnp
jg
inc
repnz
pop
push
jg
(bad)
cwde
clc
xchg
ror
test
push
push
and
test
add
mov
add
inc
push
add
out
jecxz
pop
outs
sahf
push
test
sub
aad
and
fistp
pop
sbb
std
jl
fs
pop
xor
mov
jns
daa
movs
cmp
inc
cmp
imul
sub
sbb
ffreep
sub
jmp
pop
dec
jne
push
jne
outs
dec
inc
push
aad
mov
or
pop
pop
mov
cmp
(bad)
fadd
data16
xchg
mov
add
dec
sbb
(bad)
out
mov
ret
lahf
iret
inc
pop
pop
mov
stos
test
pop
scas
popa
out
mov
mov
dec
in
fadd
leave
jae
punpckhbw
mov
loopne
daa
(bad)
sbb
dec
jbe
mov
(bad)
rcr
pop
inc
aas
pop
into
and
aad
lods
fnstcw
mov
add
add
ss
(bad)
repnz
sbb
retf
pop
fimul
movs
aad
gs
or
ds
ret
dec
cmc
jbe
fwait
push
pop
loopne
jl
cmp
xor
and
je
push
pop
jg
sar
in
dec
shr
popf
outs
inc
add
ins
retf
out
xchg
dec
push
jb
jb
aas
jle
jl
test
out
outs
call
stos
cmp
data16
xchg
mov
push
dec
sbb
mov
adc
add
mov
shl
dec
fwait
push
test
add
sbb
into
ret
jb
push
add
mov
mov
ret
sbb
adc
(bad)
aas
sbb
mov
jae
xor
jecxz
call
dec
add
out
sub
mov
ja
loop
dec
xchg
arpl
jle
jmp
push
gs
dec
xchg
fwait
sub
or
and
sti
xchg
push
fcomi
in
pop
shl
sub
jae
scas
mov
repz
mov
pcmpgtw
scas
aam
mov
popf
and
ret
imul
in
cdq
jecxz
xchg
xchg
iret
movs
xchg
mov
fidivr
xor
cmps
lea
gs
loope
or
inc
push
sub
sub
fcom
jae
mov
mov
bswap
jb
in
ja
jmp
aas
sbb
xchg
jno
rol
in
call
push
bnd
pusha
xchg
(bad)
(bad)
sbb
mov
lock
jne
adc
sub
(bad)
shl
(bad)
adc
inc
xchg
jp
sbb
mov
(bad)
pop
aas
mov
push
test
scas
jnp
and
in
(bad)
pop
cmp
cmps
mov
dec
sbb
ins
xor
lds
jl
data16
jl
push
mov
mov
das
push
test
push
mov
out
sub
push
xchg
ja
dec
out
pop
movs
enter
outs
std
xor
or
push
dec
int3
(bad)
and
lods
bound
sub
imul
movs
push
repz
in
cmps
clc
(bad)
mov
sub
mov
int3
ror
sub
mov
inc
aas
sbb
sbb
xor
mov
and
mov
test
jmp
lods
mov
mov
iret
jl
add
lock
je
pop
rcr
retf
add
xchg
mov
cmp
outs
mov
aas
push
jb
leave
push
add
xchg
add
imul
aaa
inc
mov
int
ret
adc
pop
mov
(bad)
aam
ja
sbb
test
mov
jle
jl
push
add
inc
std
adc
push
aaa
arpl
aam
cmp
aam
addr16
mov
dec
ret
pushf
cmp
push
mov
pop
xchg
dec
jge
add
adc
call
gs
out
sub
xchg
or
leave
shr
in
outs
in
fisubr
and
or
jmp
mov
inc
and
adc
fadd
loop
jbe
cmp
ret
fwait
movs
adc
ins
rol
scas
sbb
in
xor
mov
rol
test
fstp
adc
repnz
lock
fistp
pop
fst
push
pop
mov
call
or
lods
outs
add
push
(bad)
push
arpl
leave
xor
movs
push
nop
das
dec
mov
and
add
inc
sub
in
das
mov
mov
mov
fstp
daa
in
sahf
mov
mov
into
mov
icebp
(bad)
fist
pop
jl
and
adc
mov
mov
jmp
mov
inc
cmp
mov
inc
push
mov
scas
sti
cdq
push
jmp
add
pop
nop
jno
xchg
xchg
(bad)
ins
sub
outs
fdiv
mov
inc
cmp
sub
jae
adc
out
dec
(bad)
in
push
neg
jne
xchg
nop
mov
mov
and
jle
ja
sub
aaa
inc
repnz
in
mov
(bad)
lock
mov
test
push
add
sbb
daa
aaa
retf
and
out
aad
sbb
xor
sbb
add
dec
inc
sbb
and
and
ds
clc
out
pushf
and
cmp
ror
sar
leave
rol
pop
jbe
cdq
sub
aas
into
sbb
out
rol
push
popf
jecxz
scas
adc
xchg
xchg
frstor
inc
fisubr
aaa
shl
sub
mov
jae
push
ins
gs
mov
mov
cmc
xchg
add
je
ja
inc
sub
or
div
mov
test
push
das
lock
in
repnz
mov
int3
stc
movq
sar
cmps
dec
test
sub
mov
pop
fucomp
iret
and
xor
mov
sbb
and
ins
fst
fistp
push
rcl
call
jmp
adc
pop
js
movs
popa
sub
jnp
je
cli
sbb
sahf
addr16
dec
jmp
pop
aam
jg
data16
mov
ss
aam
mov
inc
cli
out
cli
push
(bad)
cli
popa
sbb
mov
mov
daa
mov
add
adc
out
lds
mov
jae
cwde
xor
arpl
fdivr
mov
pop
xor
fnstenv
into
(bad)
xor
das
sbb
xor
add
outs
into
pop
push
ret
or
call
mov
sub
or
ja
retf
mov
add
inc
inc
dec
xor
cli
mov
adc
movs
sub
add
pop
push
dec
cld
mov
push
out
or
xchg
(bad)
dec
test
mov
xchg
lea
shl
mov
adc
fsub
das
mov
(bad)
sti
mov
and
jp
jbe
ss
aam
jno
arpl
jmp
mov
outs
xchg
fs
movs
out
push
cmp
mov
out
xchg
stos
(bad)
push
fist
fwait
cli
pop
cmps
or
sahf
rol
(bad)
popa
dec
lods
js
mul
or
ja
(bad)
mov
in
sub
and
jl
cmp
adc
mov
scas
cmp
sub
xor
ffreep
add
xchg
mov
test
inc
sub
mov
pushf
leave
test
fs
rcl
lods
mov
shl
inc
in
movs
mov
mov
sbb
mov
icebp
shl
mov
push
mov
mov
or
sub
enter
mov
rcr
(bad)
cmc
push
test
xor
iret
push
outs
add
(bad)
daa
je
cmp
icebp
arpl
or
sub
dec
into
stc
pop
or
inc
add
push
xchg
add
retf
lahf
cmp
leave
enter
rol
pop
(bad)
popf
xor
mov
pop
loope
retf
repnz
inc
int3
std
add
sbb
clc
fdivr
and
add
add
jbe
pushf
popf
les
mov
jle
adc
pop
cmp
cs
loop
shl
push
fwait
fwait
out
and
(bad)
cld
jne
sahf
clc
fidiv
inc
out
add
(bad)
add
jecxz
lea
mov
movs
jno
lea
in
dec
or
inc
xor
clc
ror
leave
adc
or
sbb
repnz
and
out
jecxz
jle
jle
push
jecxz
lahf
add
(bad)
and
xchg
push
sbb
inc
(bad)
mov
cs
sub
cmp
xlat
cmp
push
mov
add
or
push
inc
repnz
push
push
loop
push
stc
and
lea
fimul
shr
jmp
add
repz
lahf
mov
shl
iret
cmps
add
push
iret
adc
xchg
xchg
cmp
mov
sti
jns
enter
inc
xor
push
shr
xchg
adc
bound
sbb
ficomp
repnz
push
adc
jns
mov
imul
loop
(bad)
dec
cwde
pushf
cmp
les
outs
xor
fidivr
cs
jae
adc
push
inc
fmul
test
sbb
out
xor
adc
call
xchg
sbb
add
enter
push
mov
dec
mov
fwait
xchg
(bad)
stc
mov
pop
ins
(bad)
das
fstp
ror
hlt
out
push
cmp
inc
or
and
mov
shl
pop
adc
xor
out
nop
rcr
dec
cmp
push
jno
push
jnp
bound
popf
int
inc
cmp
ret
push
(bad)
repz
push
push
push
and
fwait
test
retf
jmp
jae
push
mov
imul
mov
call
push
mov
mov
or
cmp
fist
(bad)
xor
call
fnstcw
sub
imul
aaa
pop
jno
xchg
sbb
enter
es
mov
jno
sbb
mov
call
xchg
xchg
sbb
jne
cmps
retf
imul
and
xchg
scas
call
sbb
in
add
scas
ins
xor
cmp
jl
sub
push
lods
addr16
pusha
int3
pusha
pop
xor
pushf
in
(bad)
loopne
xor
adc
cmp
popf
cmp
clc
add
mov
or
jp
mov
sti
repz
inc
lock
mov
mov
movs
or
adc
mov
push
xor
mov
mov
fisttp
adc
inc
and
fld
jae
and
scas
inc
out
push
dec
daa
dec
sub
lahf
adc
mov
rcr
mov
outs
ret
test
ss
movs
outs
add
call
shl
shl
jmp
and
retf
add
push
pop
dec
mov
sub
add
pushf
lods
adc
dec
jg
or
repnz
pop
xor
sub
(bad)
add
push
ret
sar
inc
cmp
mov
mov
sbb
into
pop
es
lds
stos
push
and
and
(bad)
(bad)
(bad)
add
adc
ret
pop
inc
or
cmp
dec
leave
xor
inc
leave
mov
dec
mov
push
push
cli
push
xchg
adc
rol
mov
lock
bound
mov
out
and
(bad)
dec
in
push
ror
in
das
sbb
stos
mov
add
not
fiadd
sysenter
stos
jnp
xor
lods
xchg
(bad)
cdq
shl
rcl
pop
and
cli
dec
jae
jecxz
(bad)
mov
je
inc
adc
sbb
leave
shl
sti
mov
cmp
dec
inc
imul
push
mov
jbe
mov
btr
pop
sub
xchg
(bad)
pop
dec
out
or
jp
pusha
popf
pushf
clc
pop
cwde
xlat
test
retf
sub
fimul
dec
sbb
xchg
mov
mov
jp
mov
cvtdq2ps
push
cld
cmp
mov
jbe
or
xor
push
xlat
outs
push
scas
jns
or
cdq
test
pop
add
stos
xchg
cs
cld
mov
repz
pusha
and
mov
mov
pop
scas
dec
and
stc
and
pop
mov
xor
or
dec
inc
test
popa
lods
fwait
loop
ss
fdivr
mov
pop
pop
es
mov
aad
cdq
xchg
sub
inc
jns
cli
movs
inc
lods
mov
xchg
test
lods
mov
and
and
je
ret
test
ss
das
test
cli
pushf
repz
adc
ret
out
fs
xchg
addr16
jo
lahf
mov
sub
fst
jl
ins
adc
gs
sub
jle
(bad)
repnz
mov
sbb
arpl
lods
into
push
lods
push
movs
daa
xchg
and
(bad)
es
lock
mov
dec
push
call
movs
sbb
hlt
cmp
les
popf
dec
push
sub
out
shl
or
scas
out
(bad)
jmp
in
(bad)
add
icebp
cmp
jp
and
outs
push
add
in
sbb
jle
popa
rol
cdq
cmpps
xchg
ins
mov
nop
pop
sbb
xor
pop
fimul
mov
lahf
xchg
sbb
stos
adc
fadd
inc
(bad)
std
test
pusha
popf
add
inc
(bad)
xchg
clc
enter
pop
dec
dec
sub
div
push
inc
jmp
inc
jge
pop
shr
dec
pop
scas
pushf
push
bound
js
push
int3
sub
inc
stos
test
push
mov
mov
nop
inc
retf
iret
push
adc
jl
jno
pop
sub
sub
js
mov
dec
dec
jnp
sbb
rcr
lods
mov
(bad)
leave
pop
xor
push
shl
push
pop
add
pushf
stos
enter
ja
loopne
stc
repz
pop
(bad)
jae
pop
cs
push
movs
ret
adc
mov
xor
cmps
adc
pop
sub
push
(bad)
cli
pop
icebp
es
or
mov
fmul
int
jmp
mov
fcmovu
iret
je
ins
fs
std
ins
fadd
in
ss
inc
dec
jns
mov
push
cmp
cmps
dec
shl
jns
push
and
jmp
fisub
sub
int
dec
lock
mov
mov
push
jbe
loop
fisubr
dec
aad
fidiv
shl
fmulp
mov
imul
out
add
dec
aam
mov
and
mov
(bad)
movs
xor
and
int3
sbb
push
xor
xchg
push
retf
add
sub
sti
imul
call
pop
mov
cdq
ror
mov
(bad)
cwde
or
sbb
leave
nop
inc
mov
pop
pop
sbb
aas
jbe
push
pushf
sar
jo
pop
adc
lds
lea
sbb
ficomp
adc
dec
xchg
leave
mov
sub
push
in
dec
ins
sub
xchg
pop
dec
or
inc
adc
add
movs
ss
mov
pusha
sbb
inc
mov
cwde
adc
cmps
stos
out
mov
pop
push
and
in
dec
and
or
aad
sub
xchg
and
ds
in
in
stos
in
into
jmp
loopne
mov
pop
dec
xlat
mov
xchg
movs
(bad)
test
ins
jmp
mov
push
fstp
mov
adc
fisttp
loopne
iret
(bad)
mov
inc
and
push
add
cmp
push
ror
sbb
add
(bad)
dec
xor
adc
test
jo
cmps
jmp
cld
mov
stc
or
je
sub
in
sub
push
loopne
vpmovuswb
aaa
and
data16
mov
and
repz
shl
cmc
jnp
call
js
adc
push
add
sbb
push
daa
shl
mov
test
enter
(bad)
call
aam
xor
ror
shr
inc
inc
and
mov
ins
jp
mov
ins
cmps
mov
mov
fld
cmps
loope
in
nop
sbb
sbb
jbe
push
es
(bad)
mov
js
gs
push
mov
shl
sub
jno
imul
sub
and
mov
pop
or
add
cmp
or
cmp
push
(bad)
mul
mov
cmps
out
xchg
(bad)
std
mov
adc
sub
aas
int
bound
push
out
lds
inc
pushf
xchg
sbb
lds
lds
dec
not
out
lock
sbb
rol
fwait
push
jge
push
inc
(bad)
pop
popa
pushf
or
xor
push
out
cmp
aaa
dec
fld
push
(bad)
repz
sub
inc
ret
cmp
ins
das
push
retf
rcr
jne
std
fsub
xchg
enter
cwde
icebp
jmp
in
or
inc
sbb
pop
retf
(bad)
and
(bad)
sbb
outs
mov
cmp
std
(bad)
and
(bad)
and
data16
dec
cmp
gs
test
gs
dec
xchg
push
clc
push
xchg
adc
jmp
(bad)
in
jae
fdiv
gs
inc
sub
movs
mov
inc
inc
into
clc
and
rol
inc
push
sub
pop
xchg
fisubr
mov
push
fxch
mov
sub
push
mov
aas
jns
sar
mov
es
scas
call
inc
cmps
stos
cmp
fs
add
fs
mov
fadd
sub
xor
mov
xchg
sbb
push
sbb
rcl
call
jmp
not
shl
ins
stc
push
or
stos
ss
ds
lock
sahf
jecxz
(bad)
out
hlt
cdq
mul
xor
jns
dec
in
popa
and
arpl
mov
push
push
push
or
lods
cwde
out
push
fisub
add
jecxz
jp
test
call
sbb
mov
pushf
ficomp
or
push
cdq
(bad)
sti
cli
pminub
outs
mov
jl
and
rcl
mov
inc
add
das
or
bound
jmp
and
sub
neg
xor
xchg
pop
adc
adc
adc
adc
mov
push
and
rcr
jg
mov
sub
sub
fdivrp
inc
aas
mov
rol
add
mov
push
(bad)
mov
dec
or
adc
fimul
les
sti
clc
rep
pop
push
ror
mov
stos
mov
(bad)
je
nop
mov
jecxz
inc
dec
inc
mov
cwde
and
iret
pop
stos
jl
dec
nop
in
stos
out
pop
int
adc
loopne
cli
pushf
sbb
or
lock
in
out
(bad)
out
mov
pop
sub
pop
xchg
adc
test
or
mov
add
icebp
inc
push
mov
test
fwait
int
cmp
gs
push
mov
pop
xchg
xchg
jmp
shl
in
mov
addr16
js
aad
and
jmp
push
(bad)
(bad)
neg
out
inc
jle
fiadd
das
fistp
pusha
dec
test
add
mov
jmp
addr16
inc
push
ja
cmp
arpl
loope
push
xchg
popa
int
(bad)
pop
shl
push
dec
xchg
or
out
mov
cdq
dec
ja
inc
test
shr
out
(bad)
fs
jne
xor
cmps
inc
xor
jl
cdq
test
out
or
inc
pop
xor
mov
jnp
shr
mov
jns
nop
cwde
mov
xor
add
pop
cs
scas
fsubr
pop
sbb
xchg
push
shr
test
mov
mov
(bad)
sbb
or
jne
aas
stos
push
cmp
arpl
xor
ss
push
mov
dec
test
test
cmc
dec
jo
push
fild
push
pop
pusha
shr
xchg
cmp
inc
mov
test
mov
fnstsw
pop
cmps
lds
daa
mov
loop
jno
pop
addr16
and
jae
mov
scas
gs
sub
xor
or
arpl
int
popa
hlt
out
xor
cmps
sub
cdq
inc
clc
mov
mov
loope
popa
in
jl
mov
jmp
mov
xchg
ret
imul
cmps
fidiv
sbb
dec
jmp
mov
and
repz
xor
add
test
dec
dec
jae
les
aad
xchg
inc
sub
or
mov
in
dec
and
inc
cwde
lea
mov
neg
or
call
mov
movs
fnsave
sti
push
push
and
loopne
push
fmul
(bad)
cs
add
jmp
sub
das
or
or
xchg
scas
retf
push
jmp
rol
sub
sbb
push
xor
jmp
mov
xchg
pushf
dec
or
push
lea
clc
dec
lea
dec
out
push
mov
pop
dec
push
xor
test
sub
cmps
fild
xchg
cmp
fsubp
js
cwde
cld
fist
pop
fild
or
push
pop
loope
aad
(bad)
fsubr
xor
or
mov
inc
out
mov
mov
in
push
outs
dec
movs
push
sahf
movs
mov
int3
pop
mov
es
sub
fpatan
or
push
mov
daa
pop
into
mov
inc
dec
jle
jecxz
aas
or
aad
sar
(bad)
mov
mov
imul
xlat
fnsave
jmp
into
pop
(bad)
and
fiadd
dec
lahf
loopne
outs
dec
in
inc
mov
(bad)
add
int
test
adc
ret
or
je
retf
sub
jo
mov
jp
hlt
pop
add
xor
pushf
add
xchg
iret
inc
xor
and
xor
(bad)
push
or
int3
add
pop
into
call
sub
ret
and
das
test
stc
adc
sub
inc
or
adc
and
inc
loop
inc
xor
mov
push
das
les
loop
mov
outs
cmps
imul
in
xchg
jge
jge
jne
pop
lods
pop
inc
sub
repz
mov
cdq
retf
push
lahf
push
sti
sar
jp
shl
js
push
jl
ins
pop
cmp
ror
sahf
cmp
mov
outs
lahf
or
stos
xor
movs
fild
shr
shl
fcomip
and
sub
stos
(bad)
aad
pop
sub
inc
pop
mov
mov
repnz
push
mov
mov
pop
ret
aad
adc
and
call
ins
adc
and
cmp
mov
pop
mov
pop
pusha
mov
sub
push
std
mov
fcomp
xchg
test
in
or
pop
mov
cs
dec
cmps
cmps
loop
jne
(bad)
jge
push
ds
popa
lea
pop
sub
push
sbb
fisub
mov
js
push
xor
and
in
mov
xor
jg
cmp
mov
push
mov
xchg
in
pop
stos
xchg
jle
not
dec
mov
mov
out
loopne
xchg
ret
xor
mov
cmp
ins
cmp
scas
cld
sub
mov
(bad)
sbb
adc
push
add
das
das
jp
jp
or
inc
dec
jno
retf
xchg
bound
js
jl
xchg
gs
mov
xor
(bad)
cli
ds
loope
fucomi
or
inc
addr16
xchg
inc
mov
cmp
ror
and
inc
lods
sbb
std
icebp
jecxz
in
jle
call
xchg
in
add
push
push
test
cld
cmps
pop
xor
test
int
test
xor
stos
xchg
inc
lods
out
adc
mov
in
stos
jno
cs
in
inc
int
mov
and
xor
lods
or
cmps
(bad)
cmp
out
push
jmp
bound
inc
jp
and
aam
xchg
addr16
push
and
sar
lock
(bad)
push
adc
inc
stos
lea
mov
test
test
ss
imul
or
mov
sbb
inc
xchg
fadd
cmp
mov
push
test
jmp
inc
sub
add
ret
jg
das
mov
mov
dec
adc
mov
push
loope
pop
or
or
mov
xchg
mul
dec
imul
add
(bad)
out
xor
or
test
js
cmps
add
or
add
sub
mov
mov
popf
push
fld
in
add
push
shl
push
inc
mov
xchg
cmp
mov
mov
jg
or
push
test
jae
fidivr
jp
push
mov
xchg
mov
scas
push
arpl
outs
lods
pop
into
popa
xor
push
cmps
fnsetpm(287
mov
push
dec
shl
movs
xchg
rol
stc
jnp
lock
dec
imul
jp
sub
sub
inc
jg
dec
xchg
(bad)
sbb
jge
sbb
js
(bad)
cmps
test
fcom
push
xchg
imul
xor
pop
push
dec
sbb
movs
retf
cdq
clc
lahf
stc
mov
call
out
pop
inc
loop
cli
retf
aaa
mov
hlt
fadd
sbb
rcr
add
in
cwde
sbb
(bad)
aam
xchg
mov
stos
aad
out
add
shl
cmp
push
retf
xor
sbb
sub
(bad)
adc
mov
rcl
push
jno
mov
dec
mov
jp
mov
stc
mov
sub
rol
and
adc
data16
ret
mov
mov
leave
fwait
jns
lods
jmp
jg
or
imul
call
xchg
in
sbb
ret
or
pop
add
xor
fs
fsub
data16
sub
cmp
mov
push
pop
cmc
push
ins
scas
and
jp
cmp
sub
cmovl
ret
loope
div
gs
lock
jmp
pop
xor
faddp
cli
in
cmp
loope
int3
test
ror
repz
popa
(bad)
jmp
pop
mov
loope
lahf
and
and
out
xchg
cmp
ins
adc
jae
jl
arpl
sub
xchg
dec
cld
xchg
mov
xchg
push
mov
sbb
stc
aas
jmp
dec
lahf
arpl
mov
icebp
inc
(bad)
mov
xor
mov
out
ds
adc
jno
pop
dec
mov
imul
and
xchg
push
pop
add
mov
dec
dec
(bad)
dec
mov
xor
repz
scas
jbe
test
jp
movs
(bad)
in
adc
pop
test
and
sar
xchg
(bad)
mov
movs
mov
add
dec
mov
das
xchg
mov
mov
jecxz
add
aad
jb
aas
imul
sub
and
inc
xor
xor
mov
mov
jmp
cmps
in
adc
retf
arpl
or
outs
or
or
jno
inc
fsubr
fidiv
stos
ja
test
rcr
fidivr
xor
xchg
xor
jl
inc
jp
pop
adc
adc
fcmovb
hlt
xor
aaa
scas
push
push
xchg
dec
inc
sub
xor
cdq
neg
mov
jle
enter
mov
pop
sbb
inc
sbb
mov
es
xor
or
(bad)
dec
adc
out
ret
(bad)
stos
hlt
push
mov
test
push
sbb
pop
mov
adc
sub
pusha
dec
mov
xor
push
ret
jecxz
dec
pop
out
mov
fist
inc
dec
adc
mul
popa
call
fcom
push
call
hlt
ss
jo
neg
lods
push
dec
fmul
jo
add
mov
cmps
mov
or
es
je
lds
test
pop
inc
lods
add
xchg
pop
int
inc
lea
pop
ins
scas
jae
shl
and
(bad)
mov
popf
out
mov
lds
enter
cs
cmp
rcr
and
out
jg
sahf
push
xchg
push
sbb
icebp
xchg
jmp
xchg
test
pop
jb
dec
xor
fbstp
imul
mov
push
mov
add
(bad)
mov
out
stos
mov
repz
test
inc
test
pop
push
inc
dec
sub
mov
inc
xor
cwde
dec
pusha
popa
sbb
jb
mov
mov
xchg
ss
arpl
or
fsub
outs
jbe
cmp
mov
bound
popf
(bad)
xchg
test
popa
push
ret
fist
lea
fcom
into
call
ror
mov
pusha
push
(bad)
scas
(bad)
cli
sub
inc
icebp
mov
jg
pop
adc
pop
std
jge
lahf
jae
sbb
bound
push
cmp
outs
ss
out
mov
cmp
cdq
xchg
add
xlat
adc
xor
dec
mov
and
sbb
xor
jp
add
fwait
jmp
cmps
cmp
xchg
(bad)
pop
sub
ja
adc
test
enter
mov
(bad)
push
add
mov
in
clc
jae
dec
xor
out
cs
push
jmp
aas
mov
inc
stos
mov
push
outs
loop
and
fnstenv
sub
jle
xchg
jmp
rol
inc
jnp
or
push
pop
push
popa
cdq
dec
mov
cmp
jmp
rcl
cmp
test
xchg
inc
shl
adc
(bad)
aad
add
pop
xlat
xchg
mov
std
pop
leave
fstp
cmp
lock
dec
stc
inc
sbb
fxch
aad
sbb
adc
jge
fld
push
mov
pop
mov
lock
cmp
xor
cmc
lds
movs
(bad)
mov
xor
xor
pop
pusha
fnsave
ins
push
push
inc
mov
(bad)
out
test
and
(bad)
lock
ror
dec
and
int3
push
icebp
movs
mov
dec
jns
or
rcl
scas
pusha
outs
or
or
xor
and
xchg
aas
and
stc
pop
cmp
gs
jo
(bad)
enter
lods
hlt
aas
jg
mov
shl
lahf
sub
mov
add
in
xchg
xor
(bad)
dec
test
push
sti
repnz
mov
movs
cli
pop
mov
iret
stc
jns
sub
inc
ss
shl
or
inc
(bad)
pop
in
inc
or
fild
cmp
cmp
sbb
inc
xor
test
test
lock
mov
or
or
adc
push
mov
jbe
pop
xor
rcl
shr
mov
(bad)
and
xor
sbb
test
fldenv
lods
inc
push
mov
xor
jne
lods
gs
retf
cmp
sub
pop
jmp
inc
mov
(bad)
inc
mov
pusha
sbb
(bad)
push
dec
jns
call
mov
mov
hlt
jg
cmp
dec
push
dec
jo
mov
cmp
cmps
and
inc
(bad)
into
jle
jo
mov
or
jo
jb
inc
lahf
aas
scas
mov
ins
scas
push
(bad)
imul
sub
je
repz
mov
mov
mov
out
mov
les
test
xchg
xchg
fwait
pop
bound
and
leave
dec
sbb
outs
out
xchg
xchg
pop
push
jmp
pop
jbe
jge
push
sbb
das
and
xor
adc
sahf
retf
leave
dec
xor
pop
push
or
jge
nop
test
add
lds
fbld
frstor
cmc
jno
cmp
adc
(bad)
int3
addr16
mov
xor
cwde
repnz
jns
or
out
iret
mov
dec
xchg
pop
mov
call
cmps
inc
xor
jl
mov
test
mov
push
ds
pop
iret
daa
and
aas
aas
or
nop
cld
std
adc
mov
xchg
adc
test
idiv
adc
les
scas
rcl
call
inc
hlt
sub
test
or
lods
push
inc
outs
inc
scas
inc
xor
enter
(bad)
mov
popa
movs
adc
jg
mov
mul
fcomp
cmp
jo
jo
lock
ins
xor
and
add
ftst
test
and
ret
in
leave
in
aas
adc
jp
pop
sub
and
add
rcr
pop
cmp
(bad)
enter
int
out
xchg
faddp
repnz
rol
inc
sub
test
sar
dec
mov
cli
mov
adc
stc
inc
mov
push
js
add
bound
and
jns
mov
push
pushf
stos
inc
out
movs
push
cmp
jns
loopne
gs
cmp
xchg
mov
ins
sbb
xor
sbb
jae
lock
ss
push
cli
sub
sahf
adc
or
sbb
adc
adc
mov
(bad)
jmp
test
adc
rcl
test
cmp
cdq
pushf
jne
repnz
retf
pop
or
add
rol
adc
pop
or
dec
std
test
lods
je
sbb
xchg
ds
add
xchg
or
jmp
enter
jno
(bad)
add
stos
gs
push
ja
mov
cdq
ror
lahf
ror
mov
mov
sbb
aaa
xchg
mov
js
xor
aad
sub
outs
xor
mov
out
in
lea
loopne
and
les
mov
clc
call
add
imul
jmp
and
pop
sti
and
inc
fld
(bad)
in
sbb
dec
xchg
jbe
pop
sub
mov
sub
xchg
sbb
les
mov
push
pushf
imul
mov
push
dec
sub
fisubr
pop
cmp
in
pop
xor
or
cmps
js
dec
movq
out
loopne
rcl
and
push
and
inc
fst
stos
ret
push
pop
aam
fcom
(bad)
or
sbb
push
add
push
dec
repnz
inc
fldcw
mov
push
outs
jno
ret
movs
call
push
fyl2xp1
sbb
push
dec
add
sbb
fst
mov
mov
jge
imul
and
sub
mov
bound
push
jb
jae
aad
retf
cmc
in
cmps
cmps
in
dec
xchg
inc
nop
test
cmc
jmp
inc
mov
ds
dec
jno
xchg
cmc
jns
test
sub
lea
sub
rcl
(bad)
jae
cmps
shl
arpl
retf
pusha
in
out
nop
mov
dec
mov
ja
ja
mov
call
jecxz
fist
cmp
pop
sbb
sbb
pop
mov
mov
jmp
xor
cmp
int3
pop
mov
mov
call
jnp
push
rcr
push
imul
inc
inc
adc
(bad)
rep
shr
sub
rcl
gs
aas
scas
ja
xchg
dec
xor
shl
ret
pushf
mov
in
test
pop
adc
xchg
fild
imul
(bad)
imul
shl
aas
mov
pop
retf
pop
mov
inc
lock
dec
jae
inc
movs
xchg
jg
jbe
imul
adc
mov
push
test
out
sar
adc
or
pop
call
test
mov
out
jnp
xor
xchg
push
into
mov
cwde
xchg
inc
and
xlat
xchg
adc
or
mov
push
cmp
xor
dec
rcl
push
pop
outs
jb
inc
hlt
fstp
sub
loopne
dec
(bad)
mov
mov
mov
pop
inc
out
pop
(bad)
mov
pop
idiv
mov
fwait
int3
es
(bad)
lock
test
sahf
cwde
adc
dec
cmp
inc
jge
cmps
daa
mov
and
mov
sbb
push
imul
add
ror
jo
outs
jbe
mov
mov
fnstcw
lods
mov
mov
add
sub
pop
aam
adc
ss
cmp
out
ja
(bad)
xor
sbb
cmps
push
enter
xor
pusha
or
xchg
dec
inc
xchg
sbb
inc
pusha
push
adc
dec
out
or
pop
or
(bad)
cli
xchg
mov
push
cmp
xchg
jb
push
add
dec
mov
push
mov
adc
push
push
jno
cmps
pop
sub
sub
pop
mov
arpl
cld
sub
sub
adc
in
mov
inc
add
icebp
hlt
mov
(bad)
adc
mov
jae
xchg
pop
jg
lahf
cwde
inc
(bad)
hlt
mov
jae
in
lea
pop
xchg
ret
xor
aaa
pop
rcr
stc
ja
and
stos
add
mov
adc
stos
test
or
movs
inc
out
repz
adc
test
ffree
lods
(bad)
std
fmul
int3
(bad)
int3
repnz
dec
sahf
fisttp
dec
adc
and
fisttp
xlat
mov
mov
dec
stos
jmp
bound
rcr
pop
add
ds
inc
(bad)
frstor
data16
into
inc
xor
lods
loopne
mov
push
xor
sar
add
cmp
adc
sbb
fimul
cmp
je
neg
int3
into
push
call
fcom
iret
add
lea
(bad)
xchg
push
pop
pop
popa
mov
jns
adc
clc
sub
je
and
rol
pushf
adc
fsubrp
sub
xchg
ins
fs
xor
ss
(bad)
loop
shr
cs
mov
push
push
mov
adc
jmp
retf
cmp
inc
ins
outs
movups
sbb
push
int3
and
int3
add
(bad)
clc
xlat
push
sti
xor
mov
es
ret
iret
rol
mov
sub
inc
xchg
cdq
pop
dec
dec
pop
cld
mov
test
or
and
pop
fadd
pop
out
sbb
pop
(bad)
cli
xchg
mov
mov
jns
movs
jnp
stc
(bad)
jle
xchg
xor
movs
cmp
sbb
xor
mov
pop
cmp
imul
push
arpl
sbb
nop
sub
bound
std
mov
out
pusha
popa
cmp
add
jno
jne
or
js
ins
mov
adc
xor
push
popf
gs
in
(bad)
in
mov
test
outs
inc
pusha
retf
inc
push
test
xor
push
nop
sbb
clc
inc
ss
(bad)
fisttp
and
and
mov
sub
sar
mov
jo
lods
lea
xlat
inc
mov
ror
mov
data16
out
sub
xchg
mov
mov
xchg
rol
dec
adc
aas
jo
xchg
fmulp
adc
mov
cwde
sbb
xchg
push
xchg
stc
xor
test
fiadd
push
nop
(bad)
pop
cli
mov
and
pop
call
jmp
push
call
mov
scas
adc
pop
xchg
(bad)
pop
xchg
cld
sar
cmps
int
out
dec
ficomp
lds
aam
add
xchg
leave
push
sub
das
add
in
movs
sbb
jg
jns
ret
pop
xor
aad
jns
adc
xor
xchg
mov
(bad)
mul
jnp
cmp
fsubrp
sbb
out
out
push
inc
retf
mov
adc
dec
lods
fisubr
add
xchg
imul
arpl
sub
sub
test
sub
js
inc
pop
push
std
sbb
push
data16
arpl
mov
inc
(bad)
leave
stc
sbb
(bad)
mul
retf
sub
and
lods
aam
outs
cmp
cmp
outs
lock
jmp
inc
out
leave
add
mov
xor
add
test
sar
stos
push
ds
pop
adc
(bad)
test
mov
jmp
dec
mov
mov
and
aad
lahf
xor
or
movs
aam
(bad)
pop
stc
(bad)
rcr
pop
push
add
mov
cmps
enter
outs
in
xchg
push
movs
push
inc
push
std
pop
mov
adc
call
inc
idiv
test
out
movs
jns
mov
ret
dec
or
stc
xchg
or
push
xchg
test
std
aad
cdq
mov
into
xor
jae
fucomi
ret
push
pop
pushf
xchg
std
jmp
push
aaa
inc
sbb
fsubrp
jne
mov
pop
xchg
mov
ret
enter
add
dec
sub
test
xlat
les
scas
pop
mov
jnp
pop
dec
lods
jae
test
xchg
pop
sbb
jecxz
mov
xlat
or
cmp
dec
mov
jnp
cmps
loop
in
push
cmp
mov
scas
lds
daa
mov
pop
pop
lahf
out
jmp
ret
fisubr
cwde
adc
sub
mov
outs
cli
(bad)
mov
cmp
jae
push
xchg
mov
sub
adc
pop
or
call
cmp
mov
js
iret
mov
pop
jp
test
mov
sub
loope
pop
sbb
inc
mov
or
aaa
mov
mov
lods
arpl
call
lahf
pop
and
es
movs
and
jmp
aam
neg
adc
pop
cdq
mov
and
pop
js
test
adc
stos
dec
push
mov
dec
rcl
mov
retf
cmp
xchg
aad
pop
cmp
das
mov
cmp
and
push
bound
(bad)
fcmovnbe
shr
and
fcomp
and
xlat
vmread
cwde
xchg
mov
pop
and
mov
in
gs
cld
inc
xor
outs
cmp
imul
ss
sub
lea
es
fnstenv
(bad)
jp
out
fsubr
outs
fldcw
xor
scas
jo
add
jp
xor
fs
sti
xchg
inc
daa
bound
xchg
popf
mov
xchg
lahf
std
and
bound
cmc
ficom
or
imul
popf
loop
iret
dec
inc
imul
mov
jbe
inc
mov
(bad)
and
fdivr
stos
icebp
mov
fstp
pop
inc
push
mov
call
sbb
pop
js
pushf
jge
dec
cmp
sbb
pop
xor
pop
int3
fs
or
scas
add
jae
cld
mov
add
pop
cmps
jns
ss
inc
fistp
xchg
xchg
mov
xor
lods
mov
lahf
fidiv
xor
jmp
pop
adc
or
enter
gs
out
loop
inc
jbe
mov
cwde
pop
aad
mov
inc
cmp
js
not
lds
jo
push
push
sahf
jns
rcl
popa
xchg
retf
pop
hlt
lds
repz
stos
stc
cli
sub
cmps
adc
push
push
push
push
jmp
mov
test
inc
fs
pop
in
fwait
push
add
xor
mov
lahf
fisubr
test
lds
test
xchg
sub
test
adc
mov
sbb
xchg
pop
cdq
pop
sub
setl
mov
fs
loopne
or
inc
inc
or
xchg
xchg
fist
js
sbb
sub
add
mov
(bad)
ret
retf
(bad)
adc
xchg
add
aas
mov
jmp
std
imul
popf
push
loope
mov
aam
push
sub
cmp
add
sar
les
xor
scas
cli
es
inc
imul
push
xor
add
pop
lahf
dec
cmc
in
cmp
push
popa
xchg
fmul
jp
xchg
push
mov
mov
daa
call
jbe
pop
jl
std
mov
cmp
push
add
xor
fdivr
cmp
push
lahf
mov
fs
fild
outs
jnp
mov
cmc
jl
scas
enter
mov
mov
jp
inc
repnz
xor
dec
sbb
pop
cmps
cmp
cmp
fsubrp
xchg
cwde
cmps
pop
dec
fwait
std
fdiv
sub
hlt
push
jae
mov
or
cli
xchg
js
xchg
cmp
cli
scas
(bad)
(bad)
stos
in
popf
mov
dec
sub
push
shl
inc
push
pop
push
add
dec
push
addr16
movs
xchg
push
push
mov
sub
adc
pop
fdivr
cmc
push
lods
cwde
outs
nop
dec
mov
leave
(bad)
loopne
inc
or
lock
xlat
es
mov
push
and
into
push
mov
movq
mov
and
mov
ins
jnp
popf
cmp
push
mov
jbe
cmp
loope
cs
add
mov
mov
cmc
xchg
in
mov
call
mov
idiv
cwde
pop
xchg
(bad)
xchg
mov
xor
adc
addr16
lock
mov
xor
ss
ret
xor
inc
fidivr
xchg
mov
inc
fiadd
icebp
add
jmp
retf
jmp
sub
call
mov
cmps
call
or
outs
mov
pop
out
xlat
mov
inc
cwde
jno
cmc
inc
push
cwde
popf
mov
add
mov
dec
outs
push
xchg
mov
mov
fistp
jmp
(bad)
jl
add
xor
in
push
lods
lahf
inc
push
stos
xor
adc
mov
das
imul
adc
jns
add
mov
pop
(bad)
jne
loope
xor
out
mov
mov
xchg
sub
ror
gs
jmp
mov
ja
inc
pushf
adc
sub
mov
stc
adc
lods
sbb
out
xchg
das
int
mov
xor
fs
int
jb
sbb
test
pop
cmp
fidiv
pop
fucomi
pop
push
in
dec
xor
add
push
popf
xchg
call
sub
pop
data16
inc
xchg
sbb
out
(bad)
nop
jmp
push
popf
adc
cmp
lods
add
repnz
mov
test
gs
daa
pusha
cs
test
sbb
inc
out
aam
addr16
bound
and
(bad)
push
and
xchg
or
loope
pushf
adc
xchg
xchg
clc
or
sub
cmp
out
push
xchg
popa
inc
or
cmp
sti
dec
push
xchg
xor
mov
lock
bound
cmps
fsub
arpl
out
jne
inc
outs
or
shl
nop
hlt
out
dec
inc
xor
or
popf
inc
jle
(bad)
mov
out
inc
xchg
mov
loop
f2xm1
pop
cmc
pop
lds
jle
cmp
xor
popf
sub
retf
int
push
mov
cmps
call
jp
pushf
cmps
pop
fldenv
fiadd
out
out
or
loope
or
adc
jbe
aas
dec
mov
dec
or
fdivr
call
lods
xchg
mov
call
int3
out
clc
(bad)
cli
jnp
das
aad
ja
jg
ss
and
push
lds
jmp
in
mov
lea
iret
iret
sbb
call
xchg
xor
and
jmp
retf
dec
pusha
sub
(bad)
xor
in
jnp
js
fst
stc
xor
push
fst
add
fld
in
or
in
sahf
pusha
jnp
in
or
cmps
loope
dec
(bad)
js
xor
scas
jg
mov
scas
lods
xor
pop
jno
xchg
lahf
and
xor
pushw
leave
call
adc
test
mul
push
icebp
jecxz
pop
or
push
jle
or
sbb
shl
xor
jbe
icebp
and
cld
loop
mov
stos
or
pop
retf
clc
add
pop
cmp
(bad)
shl
aam
sar
mov
jno
stos
jmp
pop
cmp
fwait
mov
mov
loop
movlps
mov
jb
test
xlat
push
int
out
xor
xchg
ret
pop
push
inc
mov
or
mov
loopne
xor
repnz
je
nop
test
shl
jge
popf
arpl
cmp
dec
push
sbb
aam
ins
ror
push
nop
pushf
or
addr16
and
add
scas
push
jle
rol
test
mov
cmps
cmp
inc
cmc
lods
push
add
dec
aam
sub
push
cmp
sbb
mov
pop
in
push
sub
test
mov
inc
add
out
cld
inc
xchg
cmps
das
stos
mov
cmp
push
loopne
enter
js
jge
push
test
xor
movs
mov
sahf
clc
mov
xchg
jmp
loopne
inc
add
cwde
push
cs
add
loop
sar
stos
inc
sbb
lahf
xor
aaa
popf
ss
push
pop
je
sub
xor
test
fist
aaa
(bad)
and
xchg
iret
and
repz
and
ret
or
out
in
shl
enter
div
scas
sysenter
mov
push
or
movs
inc
sti
pop
jge
into
imul
lods
lahf
jb
bound
mov
push
fstp
loopne
mov
dec
fbld
pop
xchg
xlat
mov
orps
je
jl
loope
daa
mov
out
mov
loope
ins
mov
push
rcr
cmp
inc
rcr
dec
ss
adc
leave
sbb
mov
out
arpl
ss
jno
(bad)
loope
push
lods
mov
sahf
test
mov
ins
mov
loope
movs
popf
inc
popf
std
and
push
aad
sbb
xor
push
pop
loop
dec
js
stos
xchg
mov
clc
mov
cmp
out
(bad)
repnz
sbb
jo
add
(bad)
push
push
adc
xor
fisttp
xor
or
sub
xchg
aaa
ins
add
iret
sbb
loope
jg
fcmovu
ret
shl
jge
xor
mov
imul
push
(bad)
cmp
ja
mov
jae
rcr
loope
setb
popf
mov
xchg
int
jne
js
fsub
pusha
rol
lds
lds
retf
pop
adc
xchg
(bad)
std
push
imul
adc
push
add
or
pop
fwait
xchg
aas
dec
stc
mov
sbb
leave
jno
push
shl
jo
fst
cmp
rcr
rol
ins
arpl
mov
in
fdiv
retf
inc
(bad)
sahf
sub
data16
data16
push
push
sub
add
imul
sub
and
iret
mov
mov
mov
adc
pop
(bad)
cmp
mov
ins
xchg
cdq
fidiv
or
adc
dec
pop
dec
getsec
fimul
or
pop
lods
gs
jne
pop
ret
adc
adc
pop
xor
sbb
sti
call
popa
mov
gs
push
xchg
imul
mov
sub
push
push
(bad)
arpl
rol
dec
xor
and
cmp
test
nop
and
push
xchg
in
or
adc
call
add
push
jns
jge
enter
cli
std
xchg
test
outs
outs
mov
popa
pop
xchg
fsubp
jmp
push
pop
or
push
xchg
loop
test
aaa
(bad)
sbb
ins
pushf
and
push
not
lods
je
adc
fst
pusha
js
loopne
cld
ror
pop
outs
lock
and
daa
test
dec
enter
ja
pusha
test
lods
adc
inc
or
call
xchg
mov
or
cs
add
(bad)
mov
xor
xchg
bound
call
repz
not
jmp
mov
and
xor
ins
inc
shr
mov
pop
xchg
fadd
mov
mov
push
leave
push
xchg
cmps
mov
loope
stos
stc
call
xlat
lock
pop
push
jge
mov
inc
push
and
or
mov
clc
push
push
in
cmp
out
ins
and
sub
xor
stos
stos
push
cdq
int
jmp
fimul
ja
jge
aam
sub
in
out
mov
(bad)
cmp
pusha
out
out
hlt
mov
push
fist
retf
cmps
in
mov
mov
outs
popf
icebp
and
stos
inc
out
add
sbb
jns
loope
aas
xor
dec
ss
mov
idiv
imul
inc
cld
shl
and
adc
pop
gs
mov
xchg
adc
fmul
popa
fwait
mov
pusha
jmp
xchg
addr16
dec
pusha
icebp
cmps
jp
pop
push
inc
test
mov
shl
aad
adc
retf
lahf
xor
adc
test
and
xor
sbb
cmp
push
mov
out
movs
mov
push
mov
std
jo
adc
(bad)
aam
mov
cmp
push
cmc
push
popf
daa
out
adc
repnz
iret
jg
pusha
iret
call
(bad)
push
sub
mov
and
dec
pop
pop
cmp
int3
mov
pop
stc
movs
xchg
out
push
fld
lea
scas
call
xor
scas
fnstsw
cmps
fisubr
(bad)
imul
out
sbb
sti
in
loopne
push
jno
push
ds
xchg
lock
xchg
cmc
test
jmp
push
xchg
out
in
inc
sub
push
pop
xchg
(bad)
add
gs
pop
in
inc
xlat
and
int3
addr16
(bad)
popf
dec
or
data16
out
int3
sti
cmp
popf
outs
xor
xor
cwde
jmp
or
daa
or
xor
or
push
std
mov
in
jecxz
or
xor
rcl
out
inc
hlt
cmp
mov
call
mov
cmp
je
cmp
movs
xchg
and
sbb
aaa
dec
jbe
xchg
out
cs
cmp
cdq
add
or
sub
arpl
fidiv
mov
mov
pop
jmp
int3
sar
cmps
(bad)
xchg
movs
push
cmc
push
add
int3
imul
jnp
popf
push
mov
fs
(bad)
popa
outs
dec
cld
jae
nop
jmp
hlt
sub
outs
mov
cmp
pop
rol
pop
or
inc
je
mov
pusha
mov
test
shl
iret
fldenv
xor
mov
inc
mov
in
pop
inc
add
fimul
cli
repz
jbe
xor
test
scas
pushf
push
out
mov
xchg
mov
enter
sbb
adc
sar
fs
das
fidivr
jle
(bad)
into
loop
xchg
cmp
loope
int3
inc
int3
sti
scas
popa
stc
xor
std
mov
cs
jmp
or
hlt
xchg
jmp
lea
inc
xchg
inc
mov
das
jnp
test
ins
cld
fs
push
cmp
sub
and
mov
sub
xor
pop
imul
push
pop
mov
pop
clc
leave
xlat
lahf
and
or
jbe
lds
pop
and
pusha
rcl
bound
stc
mov
cmp
outs
dec
inc
mov
cmp
mov
sub
push
push
add
movs
cmp
addr16
scas
pop
lock
and
mov
pop
pop
inc
sbb
push
das
aad
(bad)
lock
jno
in
out
icebp
push
pop
sbb
ds
push
test
(bad)
cli
stc
popf
div
nop
dec
xchg
loop
(bad)
xor
mov
shl
jp
sub
push
ds
loope
sub
push
ins
es
lea
fisub
mov
bound
mov
jg
ds
(bad)
jl
call
push
sar
jmp
into
(bad)
adc
sub
pop
or
shr
test
push
mov
fdiv
and
or
sub
scas
call
adc
mov
pop
in
jne
in
mov
(bad)
(bad)
adc
pop
push
mov
jbe
in
nop
xor
mov
sbb
dec
add
aad
xchg
call
ja
push
mov
mov
push
jo
inc
nop
outs
adc
pop
xchg
inc
shr
aad
pop
ficom
dec
pop
mov
loope
fisubr
loopne
nop
fstp
sub
pop
cld
(bad)
cmp
mov
push
bound
and
push
jno
movs
or
mov
jmp
mov
cwde
cli
jmp
mul
shl
pop
lods
xor
scas
lahf
(bad)
call
ins
sbb
xchg
(bad)
test
scas
sbb
fidiv
and
and
in
pop
stos
outs
aaa
mov
and
and
test
hlt
(bad)
fisttp
push
jae
ss
xlat
sahf
jb
inc
or
dec
inc
pop
ror
loope
rol
mov
add
repnz
pop
loop
mov
scas
pusha
xor
shr
sar
push
pshufw
pop
sbb
jg
pop
scas
dec
and
inc
fisub
push
imul
out
pusha
mov
mov
retf
add
lock
test
jne
inc
leave
sahf
sbb
xor
pusha
je
clc
enter
imul
iret
sub
lock
aaa
pop
sub
test
sbb
fist
mov
sub
pop
pop
fiadd
push
mov
xchg
dec
popf
or
and
xchg
popa
pop
cmp
push
inc
(bad)
mov
or
mov
in
pop
cmps
cli
inc
cmc
mov
pop
in
inc
ins
addr16
dec
adc
fist
add
mov
jp
push
mov
daa
mov
jmp
push
test
pop
jne
or
les
cmp
(bad)
adc
jp
into
or
lock
mov
ss
imul
ja
iret
test
scas
sub
ja
or
push
ss
jae
icebp
push
pop
jne
adc
bound
jecxz
scas
(bad)
in
xchg
(bad)
lods
jmp
(bad)
retf
mov
jb
mov
inc
fild
dec
sahf
or
mov
and
add
daa
(bad)
mov
shl
fisubr
int
cmc
ins
call
repnz
push
add
mov
push
stos
in
xor
push
mov
(bad)
enter
ds
(bad)
ss
jg
shl
cmp
dec
aad
jl
inc
cli
cmp
jb
jl
jbe
js
push
cs
(bad)
jmp
xchg
aaa
or
mov
xor
and
inc
jbe
ret
jb
jmp
clc
xor
int
out
scas
sbb
(bad)
out
xchg
push
repz
pop
pop
(bad)
daa
and
mov
pusha
les
or
lea
and
mov
inc
lods
mov
loope
inc
neg
repnz
jmp
xor
js
sub
adc
iret
xchg
repnz
scas
mov
lock
cmp
push
bndldx
push
and
aaa
cld
test
jmp
inc
jge
pop
pop
fsubr
push
mov
ret
repz
jno
jle
cmc
xor
adc
add
mov
adc
mov
bound
inc
ffree
or
jne
jge
push
ds
je
add
pop
jbe
jmp
xchg
inc
push
or
scas
mov
add
sub
sub
pop
xchg
adc
pusha
pop
iret
adc
cli
jge
in
pop
loope
out
mov
mov
sub
push
arpl
(bad)
fmul
mov
adc
test
xor
sbb
inc
dec
aam
sbb
mov
(bad)
retf
fwait
adc
and
push
in
repnz
mov
inc
pushw
or
fs
dec
les
and
in
aaa
inc
arpl
ja
xor
loop
mov
(bad)
jmp
cmp
xchg
(bad)
mov
sbb
push
sbb
pop
fimul
jmp
pop
fs
in
sub
jle
test
loope
sbb
push
mov
in
adc
shr
jg
jns
jle
mov
mov
mov
pop
jmp
pop
mov
pop
test
and
inc
pop
xchg
outs
aaa
xlat
xchg
fadd
std
(bad)
xchg
aaa
push
push
pop
and
in
dec
mov
mov
and
cdq
push
or
cmp
sub
adc
mov
or
enter
add
jmp
shl
rcl
cmps
out
sbb
test
cdq
or
neg
shl
jmp
jg
or
dec
push
dec
pop
arpl
add
(bad)
rcl
push
ja
mov
inc
xor
and
(bad)
jnp
data16
xchg
xor
data16
outs
jnp
fisttp
mov
sub
icebp
xchg
out
out
ins
jbe
imul
push
test
retf
out
call
mov
dec
ficomp
mov
and
cmp
ror
retf
jp
bound
cdq
loopne
pop
iret
cmp
stos
and
retf
mov
mov
mov
mov
and
jmp
inc
sbb
mov
xchg
cdq
fwait
test
jns
mov
inc
or
jmp
mov
xor
cwde
adc
sbb
mov
and
adc
sub
xchg
mov
dec
mov
mov
mov
jl
jno
retf
out
push
sbb
push
scas
cmp
scas
fstp
cmc
ja
sub
nop
ins
shl
push
movs
imul
sti
cmp
test
pop
clc
pop
mov
adc
ffreep
call
(bad)
movhps
div
pusha
mov
shl
outs
push
push
mov
mov
mov
pop
mov
dec
test
push
je
push
xor
dec
es
cmc
dec
ret
sbb
jbe
or
mov
pop
mov
mov
in
dec
out
push
lock
mov
movs
in
jmp
jno
adc
mov
cli
bound
rcr
add
sub
and
shl
cld
push
add
leave
push
push
push
sub
fwait
push
xchg
jmp
push
mov
push
aad
mov
fbld
mov
pop
push
push
fldcw
(bad)
jl
inc
cs
jae
or
or
sub
mov
cdq
mov
push
xchg
mov
sar
loop
mov
daa
and
loop
repnz
xchg
xor
mov
inc
cmp
jae
xchg
dec
push
call
or
pop
or
icebp
and
mov
push
sti
adc
push
cld
movs
mov
outs
push
scas
cmp
jb
loopne
pop
sub
cmp
test
aaa
or
mov
stc
clc
push
ret
adc
jecxz
fidiv
call
sar
pop
sub
cli
rcl
mov
out
shl
outs
sub
inc
xor
(bad)
lods
cli
xchg
pcmpeqd
mov
shr
retf
sub
push
xchg
fwait
pop
clc
mov
cmps
mov
aaa
jecxz
jp
movs
inc
adc
and
test
ss
out
mov
cmps
cmps
out
loope
xchg
aas
arpl
sbb
xchg
in
dec
fistp
pop
ja
push
cmp
mov
int3
xchg
movs
inc
aas
add
sar
mov
jl
sbb
sub
mov
test
cmp
(bad)
or
xor
fbld
cli
sbb
je
sbb
dec
sti
mov
ficomp
out
mov
sub
or
or
leave
in
jge
fisttp
cs
(bad)
fstp
inc
gs
dec
rol
mov
pop
jge
lahf
rol
push
fdivr
jle
popa
sub
repz
into
scas
repz
mov
push
idiv
jo
mov
mov
mov
xchg
push
sbb
jge
mov
pop
test
sbb
xchg
in
in
jg
sar
sti
lods
dec
(bad)
pop
mov
jae
ins
or
out
jno
(bad)
iret
addr16
sbb
sbb
(bad)
fld
mov
mov
popf
xchg
arpl
cmp
mov
inc
pop
push
sbb
inc
xchg
cs
ret
inc
xchg
fxtract
jmp
pop
mov
inc
or
pop
mov
mov
add
and
or
ret
xchg
jp
adc
fs
cdq
xchg
dec
and
and
mov
fdiv
mov
data16
xor
jle
xchg
rcl
ret
call
mov
cmp
pop
pop
mov
mov
(bad)
mov
push
inc
jg
test
dec
mov
or
das
jno
stc
pop
xchg
dec
outs
pop
test
pop
mov
xor
cmp
repz
repnz
out
and
shl
ret
mov
jns
push
and
or
jne
push
mov
or
jmp
sub
dec
pusha
inc
retf
mov
sub
sysexit
in
dec
push
inc
jl
lods
lock
int
retf
test
xchg
xchg
movs
shr
jno
jg
les
repz
mov
sbb
xchg
mov
mov
xor
nop
fld
not
xchg
push
daa
cli
or
loope
pop
cmp
mov
or
xchg
mov
adc
jae
fiadd
call
fsub
or
gs
pop
mov
out
outs
outs
mov
xchg
pop
loop
aad
mov
fdivr
push
mov
(bad)
call
jno
mov
mov
(bad)
mov
push
jo
cmp
push
ds
leave
and
pusha
mov
(bad)
and
pop
jb
sahf
xor
arpl
inc
add
cld
neg
and
mov
std
cmp
adc
sar
shl
outs
scas
stc
js
ds
sub
popa
push
pop
dec
test
test
idiv
nop
and
(bad)
mov
xor
sar
pop
xor
sbb
nop
std
jbe
and
mov
nop
mov
loope
cmps
loope
sbb
retf
ss
jne
sub
dec
fimul
sub
adc
push
aad
dec
and
rcl
cmp
push
and
pop
ins
data16
and
mov
push
int3
leave
les
inc
mov
or
outs
shl
lock
idiv
ins
sar
inc
sbb
pop
pop
mov
mov
hlt
jmp
mov
inc
pop
in
ss
jbe
cmp
cmp
jae
enter
jp
cwde
test
sbb
iret
aad
aad
xor
xchg
je
add
add
xor
mov
aad
dec
test
in
jp
stc
cmp
inc
add
in
scas
fsub
push
ret
in
daa
popa
push
push
retf
and
sub
iret
cld
pop
cmp
push
sub
(bad)
in
lahf
pop
aad
xor
fimul
loop
scas
lahf
jnp
movs
and
jae
mov
mov
sub
mov
(bad)
cs
push
(bad)
push
sbb
inc
int3
adc
outs
mov
outs
out
jp
jmp
xchg
ror
cmp
ja
push
hlt
pop
add
js
cs
cmp
cmp
xchg
cdq
and
add
dec
sbb
xchg
mov
add
ror
or
out
xchg
stos
std
push
adc
push
test
ret
call
add
test
mov
fmul
inc
(bad)
out
call
push
inc
push
push
ror
aam
push
retf
cmps
sub
inc
jmp
ret
pop
sub
jnp
cmp
js
daa
mov
(bad)
cld
dec
jno
out
jmp
mov
iret
and
fsubrp
and
pop
add
fld
xchg
cli
test
scas
add
aad
lahf
mov
leave
(bad)
jno
sbb
popf
jge
mov
jnp
fldz
pop
rcr
je
(bad)
out
xor
mov
pop
or
test
cwde
mov
cmps
sub
in
fld
mov
int
jg
mov
outs
xlat
add
pushf
lea
enter
or
test
xchg
out
stc
xchg
das
ins
mov
aas
dec
in
call
jmp
dec
jb
pop
pop
jg
push
mov
(bad)
ja
dec
mov
adc
add
fisttp
xchg
into
cld
dec
popa
ss
test
jmp
cmc
sub
outs
(bad)
push
imul
xor
dec
sub
xor
sub
in
jb
mov
enter
jle
mov
(bad)
jle
rcl
int
int
lock
add
mov
xor
adc
jecxz
ja
lods
pop
jp
ret
movs
daa
and
sub
sbb
cdq
bound
int
mov
mov
lock
rol
sub
dec
xor
adc
jb
lahf
xchg
push
pop
test
adc
mov
or
or
scas
lods
les
(bad)
xor
add
loope
test
push
mov
aaa
lods
call
lds
ss
pop
in
mov
outs
test
mov
jmp
dec
es
fsub
fnstenv
hlt
aad
out
mov
add
lds
sti
mov
ja
xor
dec
adc
leave
bound
add
sbb
sbb
jl
mov
lock
retf
mov
jns
mov
fnstenv
pop
push
sub
dec
stc
into
cmp
retf
mov
out
jmp
(bad)
sub
cmp
mov
push
imul
fist
or
cmp
call
icebp
cwde
cvtdq2ps
jmp
cs
(bad)
shl
fwait
into
cdq
pop
jb
adc
out
enter
iret
popa
mov
xor
rol
pushf
in
aas
outs
pop
ret
das
mov
jmp
jl
push
rol
shl
or
loop
(bad)
idiv
out
sub
adc
push
cmp
in
mov
fsubrp
jg
inc
dec
mov
adc
div
cmc
mov
xlat
iret
jno
lods
jge
into
out
jl
aam
hlt
cmp
shr
and
jo
fadd
mov
std
enter
xor
sbb
push
dec
rcl
lds
lods
(bad)
push
arpl
cmps
scas
sar
mov
lahf
mov
inc
sub
mov
cmp
dec
daa
add
test
call
inc
test
shl
sbb
add
cmp
jecxz
xchg
aad
adc
popf
retf
xchg
dec
pop
xor
shr
cmp
inc
sbb
stos
enter
xchg
inc
sub
les
mov
outs
jb
popf
repz
sub
pop
or
sahf
push
(bad)
fild
jbe
dec
add
or
inc
icebp
adc
mov
aam
cmp
jge
icebp
retf
out
pop
xor
or
fs
retf
mov
sbb
push
add
cmp
pop
xor
xchg
stos
leave
test
pop
rcr
imul
mov
jl
nop
mov
lock
add
adc
push
mov
xchg
jb
jnp
push
inc
cmc
popa
stos
mov
pushf
leave
cld
and
nop
or
sbb
sbb
call
sub
xchg
arpl
pop
out
dec
(bad)
rol
sub
call
idiv
(bad)
ss
xor
cli
fimul
push
int
jge
das
fdiv
xor
pop
adc
imul
jg
fld
fnstcw
inc
(bad)
and
add
xor
ret
push
in
and
inc
pop
mov
push
lods
adc
cmp
(bad)
cwde
push
pop
xor
les
gs
cs
aaa
daa
repnz
or
je
arpl
repnz
xor
mov
cmp
add
dec
cmp
aaa
push
fnstcw
mov
add
pop
test
fsubr
pop
push
or
ret
shl
xlat
icebp
mov
popf
iret
dec
adc
dec
iret
test
bound
(bad)
movs
push
sbb
retf
sbb
nop
mov
popf
imul
adc
shr
imul
ins
jle
lahf
mov
mov
(bad)
mov
xor
add
lds
and
sbb
mov
cdq
sar
iret
cmp
push
pop
xchg
pop
xchg
mul
es
es
mov
xor
fild
inc
jbe
movs
dec
jae
jae
or
out
sub
adc
loop
push
push
xchg
sbb
push
push
fs
push
inc
call
out
xor
loope
mov
gs
ins
sub
out
lods
cmc
adc
xchg
test
mov
jno
cmp
xchg
rcr
mov
ror
cmp
ins
xchg
ja
clc
dec
mov
mov
mov
mov
mov
ss
out
dec
ret
loop
cmp
jl
std
sbb
or
mov
pusha
sti
loopne
dec
nop
mov
sbb
jmp
inc
cdq
jnp
lea
inc
loope
retf
mov
in
pop
pop
sub
inc
arpl
push
js
shl
lods
in
and
das
push
xor
into
sbb
call
cmp
loope
or
rcr
rol
sti
sbb
enter
nop
test
xchg
lods
sbb
fdivr
sti
cdq
and
or
rol
repz
jns
(bad)
iret
push
(bad)
fsubr
leave
mov
repz
imul
(bad)
and
pop
jmp
cmps
jnp
arpl
sti
jae
les
loope
push
xor
rcr
retf
hlt
out
jecxz
jge
popa
daa
pop
stos
(bad)
pop
sbb
(bad)
mov
dec
loope
pop
mov
retf
out
xor
mov
stc
or
and
push
mov
fcmovnu
mov
movs
shl
cmp
aad
and
int3
cmp
loop
pop
mov
call
fcom
loope
jb
add
je
add
cmp
sub
xor
aam
int
push
mov
cmp
mov
fistp
inc
sub
fild
adc
xor
mov
xor
jmp
pop
out
scas
jmp
jnp
ins
and
jne
loopne
movs
imul
cld
cmp
mov
test
mov
fs
jmp
ficomp
dec
mov
push
and
inc
dec
stc
xor
bound
into
(bad)
loopne
stos
stos
adc
mov
jmp
mov
adc
sub
div
iret
imul
xchg
inc
jnp
pushf
xchg
xchg
push
mov
sub
stos
mov
stos
inc
rol
or
mov
jae
in
cli
lds
aas
push
jecxz
shl
add
mov
mov
lods
push
inc
out
fst
pusha
push
mov
adc
mov
dec
fidivr
mov
jecxz
xchg
push
xor
fwait
mov
xor
rol
sbb
hlt
pop
dec
dec
movs
pop
sti
cwde
pop
rcr
lods
pop
outs
inc
mov
movs
push
or
cmp
cmp
dec
pop
and
test
test
popf
repz
out
inc
jne
ucomiss
fisttp
pop
and
pop
(bad)
mov
mov
(bad)
jp
mov
dec
in
jl
pop
mov
and
into
xor
mov
xor
pop
add
cmp
push
pusha
inc
add
inc
outs
enter
adc
out
mov
imul
xor
push
sbb
push
cmps
lock
clc
js
(bad)
jl
cmps
jne
out
lea
jb
mov
outs
cmp
adc
inc
cli
inc
cmps
pusha
add
dec
test
inc
or
aaa
ret
(bad)
xchg
aas
test
xlat
sub
and
cld
lock
in
mov
mov
clc
dec
shr
and
cmp
sub
cwde
add
sbb
je
mov
push
cwde
sti
in
inc
gs
call
push
dec
sbb
fwait
cmp
in
dec
xchg
shl
cs
jns
call
mov
in
arpl
and
loope
aad
rcl
ds
inc
stc
pop
sar
int3
xor
ret
fcom
push
xchg
xor
(bad)
pop
mov
or
outs
adc
add
mov
imul
and
lods
pop
lds
stc
add
add
cmp
ja
adc
lock
inc
cmp
ins
sbb
stos
sbb
mov
sbb
lds
cdq
test
cmp
add
fstp
shl
imul
cld
fisub
jo
neg
clc
(bad)
mov
sti
dec
fcomp
(bad)
data16
bswap
int3
push
nop
xchg
add
jmp
or
cmovns
xlat
test
xchg
pop
in
fs
jnp
les
test
sar
jg
mov
jmp
int
movs
mov
cld
mov
loope
xor
aam
jae
pop
cmp
xor
or
pop
inc
test
leave
ss
addr16
jp
dec
rol
outs
pop
push
mov
add
iret
call
test
or
or
sub
ret
jmp
fnstcw
jb
data16
jno
push
ret
xchg
or
leave
mov
popa
lock
jl
jnp
fisub
xchg
pop
sub
adc
stos
push
inc
push
mov
mov
mov
shl
cwde
pop
jl
mov
arpl
dec
add
sub
xchg
imul
sbb
sbb
std
imul
in
sub
push
xchg
test
faddp
and
dec
ror
xchg
cs
int3
xor
addr16
imul
arpl
mov
pop
or
lock
clc
or
stos
mov
imul
mov
ds
mov
push
in
int3
mov
xchg
setno
push
or
push
push
repnz
(bad)
mul
js
aad
out
(bad)
punpckhbw
cwde
mov
(bad)
cli
test
imul
shr
fwait
jo
out
ret
jg
add
add
outs
sbb
mov
not
test
push
jmp
into
cwde
rcr
add
dec
aad
jl
or
(bad)
mov
movhps
test
movs
add
cli
dec
jmp
rol
pusha
xlat
jmp
xor
and
movs
and
retf
lds
inc
inc
movs
adc
sbb
(bad)
push
add
mov
add
cmp
std
sbb
mov
leave
add
leave
mov
pusha
pop
mov
mov
pop
sbb
lods
or
add
hlt
(bad)
jecxz
push
shr
dec
aam
push
mov
xor
setp
or
push
in
xor
sub
jge
adc
xor
mov
stc
data16
aad
in
shr
in
sti
fdivr
retf
mov
outs
mov
push
xchg
arpl
jns
lds
lea
mov
shr
dec
fimul
or
mov
cli
(bad)
mov
xchg
add
cld
jbe
scas
xchg
in
mov
sbb
sahf
jno
dec
js
call
or
or
cdq
(bad)
cwde
and
stos
(bad)
shr
inc
sbb
in
pop
outs
cmp
out
mov
mov
cmp
imul
xchg
(bad)
inc
inc
jecxz
out
push
and
pusha
sbb
fisubr
cmp
mov
into
dec
dec
lea
rcr
dec
mov
call
xchg
xchg
lods
mov
pusha
cwde
(bad)
jge
or
cs
xchg
mov
add
and
jmp
mov
sbb
das
in
cdq
movs
xchg
mov
xchg
xchg
jge
jge
cmp
inc
mov
clc
fcomi
(bad)
or
outs
and
push
lahf
adc
lock
in
call
cmp
arpl
sbb
das
adc
jecxz
xchg
ds
or
js
mov
cld
push
add
mov
fsubr
mov
push
dec
mov
shr
test
mov
cld
mov
push
outs
sar
and
mov
jp
mov
in
ficomp
pop
xchg
scas
push
clc
pop
test
outs
out
ror
movs
inc
daa
cs
jp
in
xchg
and
test
xchg
xlat
dec
test
aas
out
or
mov
int3
dec
xchg
test
mov
and
dec
push
cmps
push
mov
sub
outs
xchg
xor
cmp
push
or
mov
out
inc
fild
add
mov
and
je
mov
sahf
add
jmp
or
scas
and
test
lahf
inc
cmp
add
(bad)
jp
mov
sub
push
out
adc
mov
std
out
(bad)
repz
retf
(bad)
sbb
jl
pop
shld
aas
mov
and
ror
fsubr
mov
xor
dec
jmp
fsubp
cdq
sbb
push
push
fist
std
dec
jge
mov
loope
fadd
aam
or
inc
les
pop
popf
push
outs
mul
call
sub
adc
cmp
ds
stos
jnp
cli
jg
jne
inc
jne
outs
pop
mov
pop
jns
xchg
pop
paddsb
aaa
mov
mov
nop
into
in
mov
jne
bound
mov
ja
pop
and
scas
sbb
xor
sti
sti
ret
repz
xchg
sbb
dec
imul
std
les
dec
jo
cs
dec
xchg
adc
call
gs
fs
or
inc
fwait
or
out
(bad)
out
lods
cmp
sbb
imul
pop
mov
cmp
mov
mov
outs
(bad)
push
or
or
daa
lea
es
jge
or
retf
outs
sub
adc
repz
fmul
xor
ds
and
pop
les
(bad)
icebp
or
in
sbb
cs
inc
pop
adc
pop
sar
lods
and
fwait
or
pop
and
mov
leave
xchg
xchg
stc
sbb
pop
dec
jno
shl
mov
push
cmp
push
xlat
inc
ret
sub
or
je
cs
fbstp
fdivr
pushf
jmp
sbb
rcl
icebp
arpl
mov
ins
mov
xchg
mov
mov
imul
push
jl
sub
(bad)
xor
cwde
sub
or
adc
(bad)
jl
ror
xor
out
or
jmp
and
in
stos
cdq
adc
jg
add
cli
xchg
sbb
push
mov
sbb
arpl
push
ins
in
ja
mov
in
adc
cmc
iret
adc
push
pushf
retf
mov
mov
adc
rcr
push
hlt
sar
or
mov
cmps
push
inc
add
ja
mov
inc
and
xchg
dec
hlt
daa
dec
mov
inc
sbb
mov
xor
sbb
sub
loop
je
pop
lods
dec
xor
stc
inc
mov
in
sub
inc
mov
sub
dec
push
bound
pop
cdq
inc
cmps
scas
cwde
mov
mov
cli
je
push
add
ror
daa
adc
cmp
adc
mov
dec
cli
adc
mov
fist
loopne
mov
xor
fwait
pop
mov
fwait
adc
lahf
cdq
mov
mov
cwde
xor
movs
mov
xor
push
jno
(bad)
ficom
leave
arpl
sbb
mov
adc
dec
outs
add
mov
pusha
rol
or
call
std
mov
or
jge
cmp
movs
mov
and
iret
(bad)
or
adc
sbb
cwde
adc
(bad)
add
add
aad
out
not
dec
sbb
and
dec
iret
lahf
inc
ret
mov
fmul
pop
push
pop
push
and
int
sub
nop
(bad)
call
push
push
cmps
daa
ficom
push
mov
fild
jae
adc
ror
pop
push
lahf
pop
in
pop
repnz
int
mov
sbb
jne
outs
mov
inc
pop
adc
scas
pop
push
jp
bound
mov
das
mov
aas
cmps
ret
aaa
ret
xchg
out
mov
xor
xlat
inc
iret
clc
repnz
xchg
imul
and
cmps
lods
mov
dec
push
adc
fmul
jmp
push
and
fucom
pop
jnp
outs
mov
les
pop
jmp
jp
push
mov
mov
xor
test
retf
pop
int3
in
outs
iret
or
pop
mov
int
cdq
mov
xor
push
imul
outs
sbb
xor
sub
jge
mov
push
stos
leave
pop
ds
ficomp
out
mov
adc
dec
inc
int3
jmp
sbb
loopne
or
sbb
aas
in
or
adc
mov
mov
adc
sar
push
aaa
cmp
add
jb
sub
sbb
mov
push
stc
and
xor
jg
lds
mov
int
repz
call
int
xchg
fidivr
mov
or
(bad)
or
add
or
loope
cmp
mov
push
xchg
cwde
and
mov
add
xor
shl
bound
inc
gs
and
clc
(bad)
fstp
and
aad
mov
icebp
enter
dec
test
xlat
push
jge
jb
(bad)
push
test
xchg
das
add
dec
jmp
das
and
dec
push
(bad)
iret
push
jmp
dec
adc
mov
int3
clc
out
rcl
sbb
xor
in
ficom
int3
push
ins
mov
inc
ins
push
in
inc
dec
dec
addr16
stos
and
addr16
sahf
loope
jmp
jb
add
test
add
call
fst
xor
dec
pop
pop
mov
aad
(bad)
int3
out
test
(bad)
jmp
rol
mov
xor
cmps
pop
mov
mov
(bad)
push
or
mov
fisttp
xor
sbb
aas
test
mov
out
cmp
and
sub
lock
daa
push
fcomp
movs
cmp
push
mov
jmp
in
adc
out
jo
out
into
inc
xchg
sbb
bound
xor
cwde
in
clc
fs
int3
leave
mov
(bad)
int
mov
dec
fsubr
jno
sar
daa
test
not
jnp
xchg
xchg
test
popa
xor
xchg
inc
cdq
mov
out
fsubr
pop
test
fstp
int
aad
add
into
js
out
pop
scas
(bad)
cmps
dec
sti
sahf
and
aaa
xchg
push
das
ss
cmps
push
out
inc
cdq
xchg
xor
or
pushf
(bad)
dec
lea
ss
fistp
add
movs
adc
test
mov
jne
xor
stos
mov
push
jnp
dec
cmc
retf
and
dec
xor
mov
inc
add
lods
pop
pushf
shl
inc
or
fld
add
aaa
ret
fisubr
xchg
cld
sbb
jg
push
xchg
sbb
std
ret
xor
cld
aas
fimul
cmp
xchg
idiv
pop
out
sbb
pop
jge
mov
aam
mov
xchg
xor
pop
in
jb
inc
or
sbb
aad
shr
sti
sbb
sbb
fwait
inc
pop
sbb
add
ret
je
rcr
lahf
imul
mov
add
add
cwde
xor
ficomp
push
dec
enter
test
stc
or
loope
adc
push
stc
xchg
and
pop
test
test
jp
sub
xchg
out
jns
stos
retf
jne
push
jno
inc
lods
jmp
jnp
pop
mov
add
xchg
ret
jp
mov
outs
stos
xor
cmp
pusha
jns
pop
or
cwde
mov
jge
ss
fnsetpm(287
shr
xchg
int
mov
repnz
fwait
add
mov
or
pop
xchg
shl
mov
mov
sbb
outs
sbb
sbb
xor
rcl
in
mov
jbe
pop
bound
fisubr
sbb
jae
int3
jg
push
adc
mov
or
ss
mov
xor
inc
test
int
cmps
ror
pop
pop
sbb
mov
data16
add
je
jmp
sub
loope
sti
ins
mov
les
push
xchg
lahf
jl
movs
pop
clc
mov
add
mov
mov
fs
xchg
mov
or
add
sub
pop
jo
repz
repz
ret
repz
jp
loop
sub
or
pop
pop
fisttp
rol
mov
and
cmc
adc
ins
clc
call
mov
dec
cld
xlat
push
pop
mov
mov
inc
inc
xor
jl
mov
aaa
loop
or
fild
das
std
add
and
jmp
(bad)
sbb
xor
xchg
(bad)
sbb
pop
push
out
cdq
shl
push
retf
outs
mov
jl
sub
xchg
stos
and
or
fnstenv
cs
jmp
push
sbb
icebp
call
sbb
pop
popa
cmc
pop
mov
ss
jnp
mov
and
repnz
sub
data16
xchg
scas
and
ret
mov
jns
sahf
repz
es
test
daa
push
jno
mov
and
mov
stos
fwait
repnz
push
jl
popa
inc
aaa
cld
call
mov
aaa
push
pushf
or
adc
bound
xchg
cdq
dec
inc
movs
shr
out
xchg
adc
in
and
mov
mov
out
call
jb
int
aam
ret
pop
push
or
cmp
clc
mov
out
jns
push
sbb
sub
xor
inc
cmp
add
(bad)
fbstp
cli
sbb
or
popa
std
jle
mov
add
mov
fdivr
xor
add
pop
cmps
popf
jae
inc
stc
and
adc
test
cmp
jns
push
loope
mov
xchg
fdivr
and
psrad
or
jnp
(bad)
cmp
or
mov
xchg
mov
cld
xor
mov
or
and
mov
stos
psrlq
enter
or
mov
mov
jge
add
sub
push
and
mov
lods
iret
clc
sbb
and
sbb
xor
test
sub
inc
push
popa
aad
dec
pop
push
sahf
or
add
inc
push
inc
loope
pop
mov
adc
mov
and
jl
ins
fsub
jmp
mov
sbb
test
clc
out
inc
loope
stc
xor
push
aad
outs
sahf
or
cmps
pop
or
cmp
adc
add
test
dec
scas
jp
ja
rcr
repz
sbb
add
dec
jbe
push
lods
add
rep
mov
das
sbb
pop
out
into
pop
cmps
mov
mov
mov
inc
popf
iret
add
sbb
inc
nop
jp
adc
cdq
mov
xchg
inc
jns
mov
movs
inc
int3
ins
pop
cld
pop
or
lods
out
xchg
mov
pop
xlat
jno
imul
aas
enter
out
in
push
push
not
pop
sub
adc
call
adc
and
mov
xchg
test
inc
mov
adc
inc
scas
mov
dec
repz
cmp
fwait
push
sti
inc
mov
jns
fsubr
sbb
jmp
pop
jecxz
adc
les
cmp
sub
das
div
cdq
xchg
sbb
out
fadd
shrd
int3
sbb
add
pop
popf
call
or
test
or
enter
cmp
call
cmp
test
inc
xchg
(bad)
pop
or
push
enter
cmp
cmp
xlat
or
pop
dec
repnz
push
pushf
push
sub
jmp
out
das
fstp
jl
loope
mov
xchg
mov
ins
sub
jb
inc
mov
or
inc
or
lock
cld
cmp
jno
lock
out
jb
aam
adc
fucomi
sbb
cs
jne
sub
(bad)
cdq
mov
fs
lods
(bad)
das
repz
test
daa
inc
in
adc
adc
xchg
mov
into
sub
dec
push
xchg
push
adc
cdq
dec
imul
mov
sbb
lea
clc
int3
test
stc
sbb
shl
jns
mov
sub
adc
push
setl
xor
scas
(bad)
fucomp
test
sub
sbb
mov
or
add
scas
jle
jge
std
je
mov
das
mov
cmp
and
sub
scas
xchg
nop
push
sbb
gs
les
movs
pop
sbb
mov
movs
or
cmp
in
popf
jbe
sub
dec
cmps
cdq
cmp
jmp
loopne
bound
imul
inc
xchg
test
and
test
xchg
shl
jecxz
dec
jbe
mov
mov
fldcw
mov
push
adc
cwde
cmc
xchg
mov
push
(bad)
daa
in
iret
xchg
xchg
pop
jmp
sti
jmp
sbb
mov
pop
test
dec
add
rcr
push
stos
add
out
mov
out
inc
xor
ss
mov
push
sbb
mov
lods
or
pop
mov
and
fcomi
push
ror
fdivp
(bad)
out
jmp
cmp
call
push
adc
call
sti
adc
sbb
jg
jmp
push
fdiv
push
lock
in
xor
scas
std
xchg
adc
sub
push
pop
addr16
mov
fidivr
dec
retf
and
pop
mov
mov
outs
ret
xchg
je
and
dec
xor
aas
xor
xor
sub
mov
jae
arpl
cld
and
out
fdiv
adc
sti
sub
sub
push
mov
cvtps2pi
cmp
fld
mov
sub
pop
pop
neg
sbb
neg
pushf
xchg
xchg
enter
lods
mov
mov
inc
inc
or
mov
int3
and
sbb
ficom
jnp
push
aam
imul
or
test
jl
adc
pop
(bad)
sar
adc
mov
xchg
inc
aaa
xchg
jmp
stos
inc
and
cdq
(bad)
push
les
xor
sbb
jg
jno
push
xchg
jl
jnp
icebp
lock
cli
cli
xlat
rcr
push
out
push
push
or
adc
cmps
xor
mov
pop
xor
in
rol
ret
inc
push
and
pop
pop
idiv
jno
data16
dec
test
dec
shl
jecxz
dec
not
inc
fwait
mov
fistp
push
scas
mov
int3
mov
test
inc
mov
int
sub
mov
lock
jbe
or
les
or
pop
adc
repz
clc
ret
pop
bound
lds
test
push
mov
xchg
popa
dec
mov
mov
xor
rcl
movs
xchg
ja
sub
push
rcl
aam
fistp
jns
and
out
cmps
jmp
js
mov
ds
cmp
std
mov
ror
adc
std
inc
xchg
(bad)
cmp
(bad)
cdq
push
push
sbb
loopne
(bad)
push
xchg
jle
mov
push
(bad)
iret
dec
sbb
xor
into
push
bound
xchg
lahf
and
mov
xchg
cmp
lods
out
popa
js
not
sbb
icebp
pop
ins
lahf
mov
int3
inc
cmc
push
scas
or
push
inc
inc
adc
mov
in
pop
lods
and
into
add
in
enter
pushf
xchg
fcomp
(bad)
cmp
jge
cmps
or
fdiv
aam
int
shl
loop
sub
popa
sbb
xor
sub
iret
inc
mov
leave
xor
rcr
pop
mov
dec
jecxz
pop
or
sbb
(bad)
ret
fnstenv
gs
scas
mov
xchg
pushf
fiadd
jbe
les
mov
adc
adc
mov
test
in
in
and
fild
je
(bad)
sub
push
inc
or
sbb
mov
sub
ja
jae
jmp
jnp
adc
push
(bad)
fcomp
push
dec
push
stos
popf
xor
inc
out
xchg
cmp
imul
add
sub
ror
xchg
push
sbb
nop
jae
pusha
loop
pop
cdq
ret
movs
mov
add
mov
add
adc
fsub
das
jbe
aas
rol
idiv
mov
out
jge
mov
inc
jb
pop
xchg
les
add
push
pop
out
stc
and
in
adc
div
add
cwde
fstp
xchg
ss
icebp
ret
rcl
outs
inc
sar
aas
pop
push
or
push
mov
aam
sahf
dec
in
rcr
cwde
sbb
test
mov
loopne
daa
rcl
pop
pop
jmp
test
or
mul
inc
loop
out
dec
hlt
in
or
mov
fs
pusha
movs
ret
fmul
sub
add
cli
int
sbb
test
mov
in
(bad)
rcl
mov
into
repnz
iret
pop
fcomp
in
adc
mov
or
push
aaa
mov
dec
push
sahf
jmp
test
inc
mov
imul
and
(bad)
xchg
aas
pop
ret
or
int
mov
push
into
out
(bad)
xchg
inc
daa
pop
nop
mov
repnz
xor
enter
scas
loope
fcomp
sub
pusha
movs
mov
mov
cli
and
dec
outs
xor
inc
jecxz
dec
arpl
bound
jmp
into
push
fistp
mov
sub
mov
(bad)
fisubr
sbb
push
push
inc
stos
test
xor
(bad)
jno
push
(bad)
dec
pop
push
cmp
int3
add
rol
test
out
push
dec
mov
mov
repz
jl
popf
in
xchg
mov
jmp
mov
in
dec
mov
add
jo
mov
test
adc
daa
and
je
pop
add
shl
sub
call
cmp
xor
push
xchg
outs
lahf
mov
cmp
mov
inc
cmp
mov
jbe
fidiv
movs
pushf
sbb
and
push
dec
xchg
out
outs
or
sub
stos
jo
xchg
stos
out
gs
movs
jno
jge
dec
inc
xchg
xor
sbb
xor
mov
sbb
add
rol
iret
and
mov
fadd
mov
cwde
cmc
subps
jns
lock
add
cs
push
div
(bad)
cld
adc
or
sub
(bad)
cmp
xor
and
(bad)
pop
mov
xor
stos
and
pop
xchg
pop
dec
out
jecxz
sbb
jg
fadd
mov
gs
jb
in
fnstsw
jnp
movs
adc
or
lahf
fwait
cmp
sahf
sub
dec
and
mov
loopne
nop
adc
cmp
cmp
fwait
nop
ret
lods
push
or
in
enter
movs
mov
movq
into
mov
mov
fnop
or
repnz
xchg
ss
imul
retf
mov
push
adc
cmp
push
retf
mov
adc
retf
sub
jb
or
(bad)
movs
sbb
sub
or
adc
or
lock
or
cmc
xchg
cmps
and
sub
cwde
dec
xor
push
jno
sbb
inc
dec
jnp
int3
inc
ror
push
in
pop
pop
mov
xlat
sbb
adc
adc
ret
fs
and
shl
sahf
addr16
sti
xor
out
xor
mov
(bad)
in
push
ins
sbb
daa
or
test
dec
test
(bad)
add
jge
ret
sti
cmp
movs
(bad)
cli
adc
or
pop
stos
in
push
mov
push
pop
imul
cmp
lods
push
out
push
xor
or
mov
test
out
aad
sub
int
inc
adc
xor
clc
jg
sbb
lea
push
add
adc
pop
aas
mov
push
hlt
shr
cmc
jecxz
js
nop
cmp
add
ins
pop
pop
and
in
mov
pop
mov
retf
xchg
mov
jmp
out
in
je
add
xchg
and
inc
in
jae
jp
dec
push
les
retf
pop
ins
adc
inc
or
xlat
mov
add
xor
pop
shl
clc
cmps
mov
lock
xchg
daa
enter
cmps
dec
pop
pop
test
js
cmc
push
test
out
mov
out
sub
or
mov
cmp
aaa
xchg
pop
jmp
loopne
rcr
xor
add
add
ja
fst
fcmovnbe
imul
(bad)
scas
add
mov
fst
in
pop
into
mov
pop
shl
test
jge
in
stc
cdq
pop
mov
sbb
push
gs
popa
data16
jnp
cmc
das
adc
and
inc
imul
enter
push
shr
cmp
add
aam
xlat
adc
xchg
cmp
call
adc
shl
stc
xchg
xor
push
lock
in
test
jge
add
call
or
jg
adc
push
sbb
lods
add
loop
jle
bound
cmc
jge
sbb
jl
and
div
add
lds
xor
fnstcw
sbb
test
pop
dec
push
and
push
mov
inc
stos
lods
push
fstp
cmp
jp
stos
pop
ss
add
jmp
fadd
iret
adc
jb
sub
mov
(bad)
shl
pop
gs
adc
push
xchg
add
adc
imul
push
loopne
and
mov
jb
push
jp
or
(bad)
pop
out
inc
fild
retf
in
outs
lea
mov
cmc
mov
add
movs
fnstcw
int
bound
add
cs
addr16
js
shr
outs
nop
cmp
pop
sbb
dec
call
test
inc
fdivr
es
gs
aam
call
xor
xchg
into
scas
xor
fmul
mov
jae
dec
cmps
stc
push
cli
fimul
cmp
(bad)
sbb
xchg
in
nop
add
and
mov
pop
mov
push
shl
dec
sub
and
loope
out
push
es
pop
or
sub
test
inc
movs
mov
enter
outs
mov
retf
loop
or
jge
mov
push
repz
clc
cli
xchg
inc
cmp
loope
in
mov
fidivr
in
mov
lds
add
aam
pop
jle
adc
mov
push
fcomp
add
xor
mov
out
pop
cmp
in
lods
(bad)
retf
lods
sti
jno
and
adc
or
jmp
xchg
hlt
push
jp
ds
mov
out
gs
in
sbb
ret
and
xor
push
test
sbb
and
cmc
push
aad
enter
lahf
push
mov
in
xor
add
test
mov
inc
jns
pop
test
pop
sub
jecxz
stc
add
std
cmp
mov
inc
call
das
sbb
inc
mov
jmp
(bad)
mov
cmp
mov
(bad)
pop
dec
mov
cmps
jnp
enter
dec
fucomip
test
push
outs
and
lods
into
add
pop
sub
and
pusha
inc
lds
pop
mov
or
jmp
jno
add
loopne
or
jmp
jle
outs
mov
inc
shr
test
sbb
call
rcr
jmp
cwde
ror
call
retf
bound
clc
movs
cmps
and
movs
aaa
pop
inc
lahf
adc
jp
and
ret
xchg
in
leave
(bad)
xchg
mul
sbb
mov
je
add
mov
xor
mov
cmp
rol
aad
cs
jle
aam
pushf
add
pop
lods
ret
(bad)
sti
mov
scas
shl
lea
shl
adc
jge
mov
mov
lock
scas
sahf
popw
lods
ror
mov
sub
call
fwait
ret
arpl
pop
push
jmp
add
mov
addr16
or
mov
mov
mov
adc
gs
sti
sbb
cmp
cwde
xor
movs
movs
aas
adc
xchg
(bad)
leave
cmp
js
jb
xchg
ins
repnz
addr16
push
inc
popf
pop
pop
sbb
jmp
das
jle
fldenv
sbb
xchg
jmp
dec
loope
push
test
sbb
push
mov
xchg
nop
in
stos
pop
xchg
in
fld
lea
ret
adc
ds
and
jns
pop
pop
jp
popa
call
out
sbb
xor
push
ja
ds
pop
aad
mov
or
inc
jne
pop
fstp
les
bound
cmp
shl
xor
push
out
rol
(bad)
pop
mov
sub
cld
push
icebp
addr16
nop
(bad)
mov
sar
fwait
or
ja
out
mov
xor
popa
jp
sub
push
adc
jl
(bad)
repnz
pop
js
pop
and
imul
shl
xor
xchg
mov
xor
imul
popa
cmp
xor
stc
jmp
sbb
int3
or
test
push
es
push
jne
dec
push
stos
pop
xchg
test
cld
inc
cmp
scas
(bad)
fsubr
fsubr
leave
in
in
sbb
jnp
mov
sti
(bad)
push
ret
leave
mov
mov
ficomp
nop
pop
jne
ret
lods
push
cmp
inc
out
pop
popf
(bad)
inc
aas
(bad)
lock
mov
ror
dec
dec
cmp
arpl
sub
cdq
and
retf
imul
ins
out
and
mov
jo
pop
arpl
mov
sbb
xor
out
sbb
out
sbb
add
es
push
pushf
cld
rcl
sbb
xchg
cmc
mov
popa
sbb
aad
test
push
cdq
mov
add
xor
fwait
(bad)
sub
lea
int3
mov
popf
mov
test
in
cld
mov
scas
(bad)
pusha
shl
(bad)
dec
adc
scas
cmp
aas
ins
mov
rcr
(bad)
xor
or
cmc
mov
jmp
std
outs
push
cmp
push
fisttp
inc
popf
daa
(bad)
fwait
push
jle
xor
sbb
sbb
xchg
mov
jb
sbb
push
pushw
enter
pop
vcvtsd2ss
movs
not
lahf
rcr
ror
add
xor
mov
aas
xchg
(bad)
sub
and
out
or
push
sbb
out
clc
dec
xchg
rcl
mov
lea
adc
mov
pop
fwait
retf
lods
lods
test
dec
xchg
retf
push
lds
jmp
sub
(bad)
mov
movs
mov
sbb
mov
mov
(bad)
rcl
mov
call
jmp
(bad)
imul
pop
pop
cmp
pop
outs
dec
sub
callw
aam
cs
cmp
aad
sbb
test
mov
mov
mov
xor
add
mov
jo
xchg
cld
mov
(bad)
push
(bad)
lods
je
pop
inc
mov
xor
aaa
dec
inc
mov
lods
push
imul
stos
imul
sub
dec
jmp
mov
inc
test
movs
sahf
mov
sub
in
adc
hlt
add
outs
add
jb
add
xor
jb
push
repnz
loope
js
int3
jg
les
stc
ret
jl
repnz
xchg
jne
mov
rcr
dec
fwait
shl
repnz
in
inc
retf
xchg
iret
in
mov
aam
mov
xor
xor
dec
lods
sub
popf
sbb
xchg
add
mov
imul
js
pop
sbb
or
mov
xor
sbb
call
imul
sub
pop
push
add
mov
and
pop
fs
imul
cmp
les
or
ins
xor
adc
pop
or
push
inc
or
ror
lahf
and
test
xor
jmp
adc
lods
ss
loop
lods
push
(bad)
cmp
dec
cmp
ja
call
stos
push
push
test
xor
mov
sbb
ret
push
cwde
out
sub
les
jle
(bad)
cwde
stos
or
adc
sbb
pop
xchg
leave
xor
das
sbb
adc
push
sbb
test
je
mov
cdq
mov
(bad)
aaa
adc
ins
adc
add
mov
fidiv
adc
sub
popf
outs
cld
mov
(bad)
ins
jl
xchg
add
and
lods
les
dec
popf
sub
test
pop
js
xor
rol
xor
or
test
sahf
mov
vphadduwd
mov
push
pop
mov
push
jp
sbb
fdiv
and
arpl
shl
push
xchg
pop
jbe
mov
add
not
pop
pop
(bad)
and
icebp
inc
pop
loopne
cwde
test
repnz
mov
push
enter
cmp
cmc
mov
sub
test
inc
pop
fucomi
jns
repnz
push
sub
pop
aaa
xor
jns
xor
push
test
fnsave
inc
pop
sub
xchg
adc
push
mov
pop
inc
das
popa
mov
xchg
add
push
mov
dec
stc
mov
les
into
dec
das
loope
adc
push
movs
push
in
jb
cmp
or
and
je
mov
mov
aad
xchg
imul
dec
pop
mov
jg
into
add
push
pop
(bad)
xor
sbb
imul
fiadd
icebp
push
int3
pop
clc
xchg
push
and
dec
(bad)
xor
jbe
mul
push
or
gs
(bad)
sbb
xor
or
test
mov
hlt
idiv
dec
mov
std
imul
outs
inc
adc
cmp
retf
test
(bad)
mov
pop
aad
movs
je
add
xchg
hlt
mov
je
fdiv
cwde
test
(bad)
cli
jmp
inc
jae
std
mov
(bad)
fdivr
pop
dec
ret
push
mov
retf
fwait
gs
imul
call
ins
aaa
inc
cmps
xchg
or
sbb
inc
ret
pop
shr
inc
movs
jo
pushf
mov
call
mov
jmp
inc
push
mov
jmp
cvtps2pi
and
call
test
mov
xchg
dec
ficomp
rol
cmp
fisttp
into
je
sub
ficom
xor
cmps
test
mov
test
int3
sbb
xor
push
(bad)
call
jle
xor
lds
sbb
out
imul
push
cld
pop
jl
(bad)
pop
test
into
repnz
pushf
int
fisttp
sbb
je
rol
stos
(bad)
lods
fcmovnb
test
int3
ret
sub
in
imul
loop
sbb
in
mov
dec
gs
mov
jp
push
push
push
jno
dec
pop
mov
push
ins
je
stc
add
in
cs
push
adc
pop
cmc
cmp
push
leave
sub
iret
adc
fnstsw
inc
sub
mov
dec
xchg
fwait
xor
out
inc
push
icebp
adc
outs
cmp
lea
sti
mov
stc
xlat
aas
cmp
xchg
in
inc
and
mov
push
and
xor
lds
jecxz
push
cld
mov
retf
retf
sbb
push
pop
cmp
(bad)
sub
out
xchg
aad
and
xchg
test
imul
push
inc
sub
push
push
out
push
out
ja
fchs
int
push
cmp
inc
test
xchg
sahf
outs
and
sbb
or
rcr
popf
out
sbb
xor
inc
gs
dec
mov
dec
outs
imul
sbb
inc
aam
cmp
neg
cmp
fisttp
arpl
adc
inc
dec
sbb
jmp
and
fwait
cmps
mov
cli
cmp
rcr
xchg
push
call
mov
ss
jmp
add
xchg
cmp
xor
enter
push
xchg
mov
popf
ds
lds
mov
(bad)
aas
lods
cmps
xor
ins
mul
mov
jmp
pop
adc
sbb
mov
jp
cmp
push
push
xchg
add
mov
xor
jmp
ins
inc
cmp
out
fadd
clc
int3
ret
sub
cmp
out
xchg
xor
dec
clc
cmp
loop
lahf
scas
jge
aam
ret
out
mov
les
jg
xor
ss
xchg
jns
cmps
mov
icebp
stos
adc
xchg
xchg
xlat
hlt
popa
xlat
push
mov
call
data16
xchg
xchg
out
jns
xor
loope
xor
mov
xchg
push
inc
int3
mov
jp
test
or
or
xor
xchg
rol
hlt
popa
push
call
in
mov
cmp
fnstcw
aaa
iret
imul
cmps
jns
or
or
aas
div
push
out
pop
out
dec
mul
les
aas
sbb
idiv
pop
jne
push
ds
jge
pop
xchg
popf
imul
push
jbe
jne
lods
repz
pop
dec
retf
push
rol
(bad)
ins
pop
jns
lahf
xchg
mov
ss
push
sub
arpl
mov
sub
loop
mov
loop
leave
add
loope
push
repz
push
out
mov
cdq
xor
ds
xchg
cmp
jnp
cld
push
sbb
popf
jge
or
popa
clc
in
adc
or
ds
sub
lea
ja
jno
mov
ret
mov
inc
sbb
push
sbb
sbb
retf
cmp
(bad)
jnp
in
dec
nop
(bad)
rcr
ds
mov
fisttp
mov
sahf
cmps
lods
cmp
add
xchg
mov
cdq
mov
inc
xor
repz
mov
inc
pop
or
cs
add
add
hlt
inc
pop
mov
push
inc
add
mov
jnp
sbb
and
dec
cmc
sar
cmps
dec
daa
pushf
rol
add
adc
je
cmp
pop
inc
or
lods
jno
scas
cli
adc
les
push
push
in
mov
push
adc
cmps
pop
jb
inc
jl
lods
out
cmp
mov
jg
mov
mov
in
mov
call
mov
aam
int
dec
out
repz
pushf
clc
arpl
hlt
push
out
push
aas
test
cmp
es
cmovle
gs
std
(bad)
in
fs
fisub
cmps
jns
sub
imul
pop
and
xor
cmps
cmp
out
mov
xor
cmp
push
pop
data16
mov
je
mov
mov
fbstp
cdq
sbb
call
mov
xlat
fistp
(bad)
xor
shl
fisubr
test
cmp
mov
inc
mov
daa
xor
repz
clc
sbb
sub
jae
mov
js
loope
test
add
or
push
(bad)
push
movs
std
sub
stos
(bad)
nop
stos
jmp
fs
push
or
and
adc
pop
nop
mov
clc
lock
inc
or
inc
mov
loopne
test
inc
cmp
ret
(bad)
sti
in
mov
mov
jo
out
popf
xchg
adc
mov
(bad)
sbb
mov
and
fcom
cld
aas
mov
mov
(bad)
mov
das
fidiv
pop
inc
int
shr
movs
jnp
mov
add
add
cwde
int
mov
dec
adc
aam
addr16
xchg
ret
or
dec
cmps
xchg
sbb
mov
cdq
in
mov
not
mov
aad
ret
push
bound
xchg
sti
sub
clc
fidiv
mov
lahf
adc
arpl
je
jmp
not
jns
arpl
test
ror
mov
cmp
loope
retf
inc
je
shl
pushf
adc
dec
aad
mov
jge
sti
jmp
in
cs
and
adc
push
pop
daa
test
pushf
imul
inc
jl
add
push
ror
mov
into
and
cld
inc
stc
sbb
mov
bound
out
pop
pop
jecxz
in
movs
clc
pop
ror
or
clc
scas
loop
scas
ds
pushf
test
jns
mov
dec
pop
xor
scas
outs
add
cmp
popa
lds
adc
stos
cld
jg
hlt
call
mov
hlt
push
pop
sbb
pop
or
mov
jnp
cmps
jmp
out
bnd
push
xor
or
sahf
mov
enter
jbe
jno
mov
jb
push
mov
test
push
jp
(bad)
pusha
mov
dec
pop
retf
push
dec
bound
movs
push
sbb
cmp
mov
and
test
mov
push
jmp
popf
outs
xor
ja
ds
xlat
add
adc
xchg
mov
ret
cmc
mov
xchg
or
lds
inc
jb
jge
ss
fwait
ret
xchg
xchg
addr16
stos
sti
mov
jp
inc
test
jae
ja
mov
inc
cld
jge
add
jo
(bad)
pusha
cmp
mov
cmp
and
sub
sub
movs
imul
xor
jg
cmp
sub
call
mov
shl
lock
inc
sub
movs
cmp
push
jo
ja
rcl
imul
retf
pop
test
push
and
int
mov
nop
jle
jns
call
fdivr
add
cmp
xor
add
pop
push
sub
mov
push
jno
call
add
ins
cld
lahf
sub
test
mov
ret
xchg
push
ins
mov
xchg
or
mov
xchg
sub
es
je
jbe
sub
xor
in
xchg
scas
add
xchg
sbb
popa
push
in
jl
sahf
sub
cmp
sub
call
out
clc
clc
in
stos
jg
(bad)
call
dec
push
int3
in
mov
popf
test
sar
retf
dec
movs
adc
jl
imul
and
cmp
mov
inc
sbb
movs
(bad)
push
cmp
jmp
or
push
(bad)
mov
enter
cmp
inc
mov
aam
mov
and
jg
and
sbb
jecxz
and
push
cmps
jno
stc
inc
pop
fst
inc
add
jmp
fsubr
cld
xchg
repz
add
sbb
jmp
pushf
ficomp
dec
dec
mov
mov
call
jle
adc
dec
pop
nop
jno
push
loop
daa
cmps
jns
jnp
pusha
push
(bad)
or
xor
fst
(bad)
mov
ins
pop
inc
fmul
inc
aam
sub
jmp
das
test
imul
dec
mov
call
or
in
das
jp
dec
jl
mov
cvtdq2ps
sti
ftst
rcl
fild
retf
mov
mov
xchg
jb
es
hlt
aaa
or
popf
test
fidiv
fwait
mov
cli
or
sahf
dec
inc
test
mov
cwde
lahf
push
mov
sbb
jge
xchg
aaa
inc
fild
ret
fsubr
sbb
sub
(bad)
xchg
push
into
ror
test
and
ins
fsubrp
push
xchg
loop
pi2fw
xlat
jne
xchg
mov
push
xchg
sbb
int
in
mov
mov
(bad)
push
aam
sub
push
test
mov
es
loopne
(bad)
jmp
pushf
jnp
push
mov
sar
in
mov
scas
mov
xlat
mov
adc
mov
jns
sbb
mov
ss
(bad)
pop
xchg
cli
mov
cdq
shl
cmps
push
xor
ins
sub
inc
mov
dec
cdq
in
icebp
sti
(bad)
fsubr
popa
mov
into
sbb
xor
fwait
mov
cmp
or
fs
dec
sbb
iret
cli
fsubrp
mov
imul
push
icebp
push
in
xchg
int3
out
enter
and
mov
cmp
pop
xchg
ficom
mov
(bad)
pop
push
add
dec
adc
cs
add
sub
sub
jae
sar
pop
fbstp
add
mov
xor
pop
les
shl
loopne
imul
dec
cwde
(bad)
ret
lods
ficomp
jne
ins
mov
xor
mov
xor
(bad)
mov
pop
sub
fist
jecxz
jb
add
mov
pushf
or
mov
in
enter
loopne
xchg
fstp
or
call
out
sub
call
mov
xchg
push
push
lock
pop
std
xor
cmps
retf
dec
xor
loope
stos
add
test
in
push
inc
aad
js
push
fidivr
cmp
inc
cld
mov
sti
adc
out
les
xchg
fst
arpl
mov
sub
mov
xchg
push
xlat
jb
mov
cmps
cmps
pop
(bad)
or
or
jne
enter
nop
jmp
retf
push
adc
rol
push
mov
loope
mov
imul
cld
xchg
mov
sbb
das
arpl
cmps
jb
push
inc
ins
add
xlat
xchg
add
dec
js
sbb
jp
and
test
inc
jno
imul
cmp
shr
test
in
mov
cmp
xor
rcr
jge
inc
push
imul
aaa
xchg
mov
test
pop
sub
test
push
pop
sbb
outs
add
arpl
inc
dec
ret
call
inc
inc
push
dec
dec
push
pop
ror
xchg
popf
sub
pop
(bad)
push
adc
xor
cmp
sbb
loope
jmp
xchg
and
push
test
dec
mov
shl
in
setl
pusha
push
mov
mov
mov
sbb
rol
hlt
mov
ret
stc
mov
loop
jns
ins
mov
in
add
iret
test
add
repz
push
je
and
ins
pop
jne
jmp
and
mov
sbb
call
xchg
ror
inc
mov
mov
icebp
pop
sbb
mov
loopne
mov
cmovbe
xlat
jp
sti
dec
and
mov
fcomp
cmp
rcr
loopne
dec
dec
imul
stos
fbstp
cwde
sub
mov
push
(bad)
adc
adc
mov
sahf
retf
gs
iret
(bad)
lock
push
jns
pop
ds
clc
dec
pop
mov
xor
cmp
cmp
repz
add
das
xlat
dec
inc
or
and
mov
inc
mov
pop
stc
call
jns
pushf
cwde
push
or
clc
mov
push
loopne
mov
push
(bad)
ds
jae
xchg
push
push
xor
aaa
lods
lock
out
push
push
inc
nop
mov
shr
mov
scas
fimul
repz
aas
leave
ror
call
dec
cmps
test
push
stos
xchg
cli
sub
stos
popa
out
push
adc
sbb
pop
add
or
inc
rol
cmps
push
repnz
sub
pushf
inc
lods
dec
cs
clc
cmps
shl
or
ins
cdq
cmc
xlat
imul
xchg
test
xor
sub
push
hlt
mov
test
in
or
mov
xlat
adc
aaa
dec
xor
rcl
jmp
cdq
sub
stos
lahf
(bad)
fwait
mov
addr16
jb
and
aad
(bad)
fisub
xchg
ins
jo
leave
or
adc
jmp
call
in
scas
xchg
xchg
mov
idiv
cmps
pop
leave
movnti
xor
je
xchg
pop
jne
add
rcl
xchg
push
mov
ret
mov
cmc
pusha
ficomp
add
mov
int3
sar
dec
loope
cmp
adc
xchg
mov
mov
int3
mov
jno
cs
xchg
mov
cmc
sbb
popf
fisub
dec
ins
adc
mov
movs
sub
shr
fwait
sahf
leave
jecxz
sahf
shr
cld
icebp
das
js
fldenv
call
push
push
mov
in
jmp
dec
into
outs
inc
jmp
sub
retf
nop
lds
sbb
mov
lods
mov
call
(bad)
repnz
aad
pop
mov
sar
je
ret
or
add
fwait
mov
and
sub
cmp
mov
sbb
inc
pop
adc
ret
fidivr
adc
inc
jnp
dec
mov
xchg
and
inc
fstp
sahf
movs
out
pop
aad
stos
mov
cs
inc
jg
test
mov
sub
int3
ret
mov
push
enter
sub
sbb
mov
add
add
adc
outs
add
cmp
ficomp
or
shr
mov
in
sbb
dec
addr16
pop
loope
cmp
into
cwde
loop
fstp
adc
fisubr
pop
loope
(bad)
pop
sub
push
nop
test
das
adc
lea
fstp
pop
addr16
or
lods
xchg
mov
fs
dec
sahf
adc
and
fisubr
data16
jb
jl
sub
bound
inc
js
rcl
call
xor
cmp
pushf
shl
and
ret
repz
dec
jae
ds
xchg
sbb
and
pop
inc
jnp
cmp
and
push
in
cwde
cmp
xchg
push
mov
xchg
test
adc
push
xor
ret
cmp
in
sub
jne
fnstsw
jae
shl
and
mov
loopne
daa
mov
jno
mov
xchg
addr16
hlt
adc
into
call
cld
mov
test
and
dec
mov
xchg
sahf
push
iret
ins
loop
int
mov
iret
ficomp
push
mov
add
push
int3
into
(bad)
pop
aam
sub
mov
xchg
sbb
xor
fsub
sub
mov
push
push
xchg
inc
dec
clc
ins
mov
shr
push
ja
mov
ds
call
mov
mov
or
adc
inc
sub
call
jecxz
les
scas
and
int
jle
sub
int3
and
adc
ror
pushf
xchg
ds
test
xchg
push
mov
cmp
gs
dec
pop
inc
aas
sbb
sbb
dec
mov
mov
daa
sbb
or
add
(bad)
cld
retf
jp
in
adc
lahf
imul
add
and
add
les
mov
std
add
and
imul
fsub
in
repz
leave
push
loope
pop
je
mov
dec
cmps
mov
mov
xchg
in
loop
aam
mov
and
mov
daa
adc
xor
xor
leave
cmc
aam
loop
mov
and
xor
mov
cs
pop
cwde
or
data16
out
push
stos
push
movzx
fucomp
mov
ja
mov
jne
movs
cwde
fwait
and
adc
adc
jge
push
xchg
scas
mov
mov
xchg
xchg
in
cmp
addr16
and
ss
push
xchg
gs
dec
test
push
loop
add
push
cwde
scas
cmp
pop
enter
or
test
int
fidiv
xor
int
push
fwait
ror
lods
mov
rcl
or
cmps
ficom
or
inc
mov
int3
jge
adc
cmc
xor
(bad)
ja
pop
add
push
out
inc
mov
mov
(bad)
or
pop
arpl
js
cmp
outs
dec
int3
push
cmp
xor
repz
push
add
scas
dec
or
popf
shl
or
hlt
clc
jno
loop
movs
sub
ret
jbe
jl
jbe
adc
lods
daa
arpl
push
fist
je
imul
push
mov
pop
retf
sub
cmps
pop
test
shl
mov
(bad)
sub
and
ins
repnz
les
jb
dec
add
xchg
pop
rol
mov
and
and
daa
pop
add
les
or
in
add
jns
(bad)
ficom
pop
adc
in
nop
push
cmp
dec
sub
sub
call
dec
pop
mov
cmp
out
pop
xor
push
mov
outs
jl
ret
je
jle
aam
and
push
mov
mov
push
and
rol
test
jmp
test
in
xchg
push
test
adc
xor
inc
xchg
mov
pop
pop
scas
fwait
stos
lahf
sub
or
shl
inc
pop
sbb
pop
int3
in
jmp
or
cmp
and
add
movs
shl
cmps
xor
xor
and
clc
xor
xchg
xchg
sub
dec
dec
icebp
mov
inc
sub
pop
je
inc
(bad)
sub
push
fist
push
fistp
jecxz
out
fwait
cld
adc
pusha
cld
pop
popf
jl
fs
lahf
movs
pop
repz
daa
xchg
bound
inc
sbb
mov
enter
pusha
pop
inc
pop
daa
clc
gs
sbb
xor
popf
adc
test
cwde
icebp
lods
in
mov
sahf
dec
adc
adc
add
mov
xor
or
cmp
cmp
pop
jecxz
ds
call
cmc
push
cmp
or
gs
and
(bad)
jbe
push
xchg
mov
sahf
push
scas
push
cmc
pop
je
dec
add
(bad)
scas
cmp
in
pop
sti
mov
xor
(bad)
out
push
call
inc
or
lahf
les
fs
aas
dec
jnp
popf
add
mov
ret
and
call
stos
mov
jecxz
inc
clc
inc
fnstcw
retf
jle
outs
sub
pop
fwait
sub
movs
fwait
jmp
cmp
xchg
mov
clc
dec
sub
cmp
retf
(bad)
mov
pop
ss
ds
(bad)
stos
xchg
jecxz
loopne
adc
cmp
jbe
pop
dec
mov
call
sbb
xor
out
mov
retf
inc
mov
test
pushf
arpl
fstp
cmp
pop
dec
movs
mov
push
sub
jge
cmp
in
xchg
sub
fdiv
dec
adc
out
sub
mov
retf
bound
jl
or
sub
jns
pop
(bad)
(bad)
dec
pop
adc
lds
fnstenv
push
imul
mov
or
pop
jnp
mov
out
clc
arpl
out
lock
xchg
pushf
int3
lods
ins
je
ins
sbb
loopne
mov
mov
loopne
lahf
inc
mov
mov
xor
lock
ret
add
or
movs
test
jb
mov
fstp
ja
int
mov
and
mov
jl
push
add
cld
sub
test
sbb
(bad)
outs
jb
lea
shl
fisubr
movs
push
push
cmp
bound
lock
in
or
add
test
inc
call
aad
sbb
mov
in
fcmovu
rcr
pop
push
popf
das
add
add
mov
mov
jmp
(bad)
sbb
leave
jecxz
in
movs
outs
fidivr
and
(bad)
std
add
cmps
adc
jge
add
cdq
lods
in
cmc
popf
fwait
mov
jns
in
sahf
je
fmul
push
repz
sub
paddusb
daa
cmp
push
sbb
ins
adc
sub
mov
sub
repz
repnz
shr
pop
ds
stc
ret
scas
loope
or
lds
loop
sar
(bad)
xor
lahf
add
or
xor
jns
xor
sbb
dec
mov
add
sysenter
mov
leave
sub
dec
adc
aad
aad
out
mov
mov
stos
arpl
imul
in
test
std
stc
test
data16
inc
dec
mov
mov
mov
lea
arpl
in
mov
test
pop
arpl
mov
leave
sbb
aam
mov
sbb
sar
sti
retf
(bad)
dec
fistp
lods
out
aam
sbb
fsub
jns
or
jbe
cdq
push
iret
sbb
jne
mov
pop
jb
les
movs
lods
sahf
fld
jmp
xchg
xchg
xor
int
in
inc
stc
les
(bad)
jge
dec
xchg
fisubr
push
dec
dec
imul
les
adc
mov
sbb
sbb
(bad)
ret
pop
pop
scas
inc
mov
movs
lea
lods
in
push
mov
(bad)
das
(bad)
(bad)
and
sbb
sub
lahf
jae
das
in
xchg
add
add
sbb
jp
fidiv
outs
clc
or
inc
push
into
or
enter
add
dec
(bad)
cs
js
fild
pusha
jge
iret
xchg
inc
popa
sahf
je
adc
lock
ds
dec
aad
repz
jmp
cmp
movs
sbb
xor
lea
inc
addr16
or
shl
ins
jb
int
xchg
mov
repz
lods
xchg
lahf
jne
add
sbb
(bad)
fcomp
test
jmp
adc
or
or
or
or
movs
jb
adc
xor
inc
clc
gs
lock
je
aam
ins
sbb
test
cwde
pop
data16
or
sbb
mov
mov
pusha
mov
ret
xor
(bad)
int3
aaa
pop
test
dec
stc
pop
cmc
add
add
lahf
vaddsubps
pop
popf
out
dec
and
data16
shl
rcr
ja
mov
call
stos
sub
stos
ret
ins
fwait
mov
dec
add
xchg
adc
pop
mov
xchg
mov
icebp
inc
xchg
mov
add
adc
inc
popa
retf
into
addr16
outs
mov
cli
sbb
adc
mov
gs
fild
sbb
leave
sbb
shr
cmp
jmp
daa
jmp
into
jle
popa
push
jmp
dec
cmp
jo
ret
xchg
adc
mov
ror
add
cmp
jl
mov
(bad)
mov
call
ds
in
imul
dec
sbb
rol
cmps
leave
les
fisub
mov
retf
push
daa
(bad)
cs
and
fs
push
lods
fst
mov
pop
imul
inc
add
repz
or
(bad)
mov
stos
push
mov
ja
lahf
std
jge
or
stos
pop
xchg
cli
dec
or
mov
and
cmp
mov
xchg
out
mov
inc
jl
in
pop
inc
inc
push
popa
jnp
aas
(bad)
pop
lods
xchg
jp
mov
mov
adc
or
shr
push
div
push
push
sldt
jmp
pusha
sar
jb
jecxz
pop
bound
imul
xchg
jmp
lds
cmp
fs
iret
loop
adc
addr16
xor
mov
jo
mov
push
ds
(bad)
cmps
aam
jmp
adc
dec
test
pop
loope
(bad)
fsubr
adc
bnd
gs
std
mov
dec
fisttp
hlt
std
fstp
or
jmp
pop
mov
jl
call
inc
pop
mov
pushf
mov
inc
test
lods
mov
ja
push
and
push
enter
cs
sbb
sahf
sub
jmp
sbb
mov
retf
mov
fst
ins
js
mov
jg
mov
(bad)
push
cmp
cmp
pop
and
(bad)
cli
add
out
lock
repz
aad
pop
out
js
sahf
push
sub
mov
adc
cmp
stos
jnp
btc
ins
iret
inc
daa
sbb
(bad)
mov
dec
scas
pop
xchg
and
in
imul
mov
int3
jns
hlt
jmp
leave
dec
js
sbb
stos
repnz
in
mov
add
dec
xchg
clc
sub
jno
int3
arpl
iret
sub
jmp
out
or
and
dec
cmps
stos
retf
fwait
out
push
xor
test
cmp
(bad)
fadd
test
xor
mov
xchg
cmps
push
inc
sub
lds
stos
(bad)
mov
dec
jnp
push
inc
ss
inc
mov
imul
out
xchg
mov
daa
xchg
dec
mov
aaa
jne
and
adc
mov
call
jb
cs
mov
mov
pop
jbe
clc
imul
fs
loop
lods
(bad)
push
or
sbb
ss
xor
add
mov
push
lds
mov
rol
bound
mov
iret
ins
jp
bound
bound
mov
xchg
sar
dec
jp
in
push
leave
or
jg
sbb
xor
test
repz
push
push
jo
cmp
add
mov
mov
sbb
test
into
xlat
test
(bad)
sub
dec
add
lahf
stos
dec
mov
imul
ds
sahf
sub
arpl
inc
in
int
lock
lds
mov
xor
dec
popa
sub
in
ret
stc
mov
mov
cmp
and
push
jmp
mov
lods
popa
mov
dec
je
loop
sub
lds
lock
lods
cli
ss
push
mov
jnp
sar
mov
(bad)
shl
ja
mov
ret
xchg
cmp
pop
sub
lods
movs
cmp
pmaxub
cmps
jbe
fisttp
mov
mov
les
lahf
pop
in
ret
jns
pushf
or
rol
test
out
and
call
div
and
cmp
std
and
sbb
push
fsubr
xor
ret
hlt
test
fist
pop
mov
fidivr
jecxz
mov
in
xor
jge
push
xor
fnstenv
loop
mov
imul
lock
data16
aam
daa
xchg
cmp
(bad)
sub
cld
imul
stos
jbe
xsavec
cmp
inc
in
push
inc
jo
jmp
mov
in
or
or
mov
jb
mov
movs
cmp
and
cmp
adc
imul
or
mov
movs
cdq
popf
mov
rol
(bad)
fnstsw
pop
cwde
popa
or
je
inc
(bad)
shl
mov
enter
pop
dec
sub
and
test
or
data16
cmp
popf
sbb
inc
(bad)
jp
and
imul
repz
jae
jno
call
nop
push
or
sti
test
lea
out
pop
mov
jl
out
or
cmps
dec
add
jnp
out
push
pmaddwd
fisubr
adc
push
jge
sub
push
lea
std
and
loop
call
xor
push
sar
loopne
inc
call
xchg
les
pop
loope
mov
popa
fldlg2
mov
inc
mov
add
rcr
test
clc
push
mov
(bad)
ins
sub
pop
or
aam
sub
mov
aad
lock
shl
cmp
loopne
cwde
sbb
sbb
jno
xchg
adc
jo
or
dec
dec
movs
mov
leave
shl
fs
push
sar
adc
sahf
imul
pop
jmp
fwait
outs
mov
jns
xor
sub
xchg
bnd
xchg
fidiv
hlt
addr16
(bad)
jne
ds
jb
push
mov
(bad)
imul
das
dec
push
mov
push
mov
cmps
stos
jns
popf
fadd
out
xor
adc
loopne
adc
and
fucom
or
mov
out
dec
fbld
shl
retf
(bad)
aam
inc
push
push
sbb
xor
or
pop
mov
lock
jo
stos
out
and
mov
push
jne
push
gs
or
inc
mov
jle
loop
pop
fnstenv
rcl
dec
addr16
cmp
dec
into
sahf
sbb
pusha
scas
jg
in
pop
std
lahf
dec
cmp
(bad)
push
call
sub
push
jbe
pop
push
bound
adc
mov
mov
ins
jo
aam
lods
inc
out
push
lea
mov
pop
jl
push
outs
dec
adc
cmc
dec
adc
cli
fldcw
cmps
push
mov
push
inc
mov
add
pop
enter
lods
movs
mov
in
jmp
fs
xchg
pop
inc
cmps
pop
sub
icebp
out
in
pop
hlt
rol
ins
push
cmp
retf
mov
xor
js
outs
scas
sub
dec
add
cmp
retf
push
leave
es
pop
not
pop
aad
push
(bad)
jmp
push
in
test
or
and
pop
loop
dec
scas
xor
xchg
ins
(bad)
inc
xor
out
inc
mov
push
sbb
cdq
adc
ins
push
jp
outs
adc
pusha
jb
lock
ror
mov
mov
adc
adc
jecxz
nop
bound
jecxz
sub
sub
cmps
loop
pop
shl
cmps
mov
fsub
pop
call
mov
xchg
push
pop
out
int
loopne
pusha
cmps
div
call
out
addr16
loope
xchg
ret
movs
mov
pop
in
add
shl
add
cs
ret
pop
sub
xchg
scas
mov
fbld
inc
xchg
xlat
aaa
cmp
mov
pcmpeqw
add
push
pop
pop
das
and
xor
or
nop
test
jp
cli
loop
lea
pusha
inc
(bad)
cmp
mov
mov
cld
inc
mov
mov
jae
fwait
enter
fadd
mov
mov
push
mov
mov
inc
aam
sbb
call
sub
mov
scas
push
retf
int
das
jbe
inc
mov
ss
pop
mov
rcl
sbb
jl
cmps
ret
loop
xor
jbe
(bad)
std
push
out
in
mov
in
mov
int
mov
sub
enter
sub
scas
cs
add
shl
popa
loop
jmp
addr16
inc
add
call
and
cmp
xchg
xchg
stos
scas
jnp
js
jae
mov
pop
popa
shl
cmp
mov
push
fild
add
fstp
rcl
fadd
sbb
lea
stos
rcr
js
cmp
mov
dec
scas
lea
out
mov
rol
(bad)
ror
sahf
retf
cmp
hlt
aad
pop
iret
int
cmps
sbb
jl
ins
adc
(bad)
imul
out
punpckhbw
(bad)
hlt
pop
jge
lahf
sub
mov
add
repnz
jns
push
retf
add
dec
test
add
test
sbb
push
jg
mov
push
or
push
adc
aaa
and
aas
inc
mov
fs
aam
add
xor
mov
cdq
stc
lock
stc
or
aas
sbb
js
out
into
push
sbb
xor
xor
das
or
cmps
mov
int
enter
xchg
sti
pop
adc
stos
dec
pop
push
add
push
pop
adc
add
sub
call
inc
cmc
jmp
pop
jns
rcl
adc
inc
inc
mov
hlt
adc
pop
pop
adc
aaa
dec
dec
adc
shr
xchg
pop
push
dec
pop
pop
pop
adc
mov
add
xor
jns
xlat
inc
push
les
push
cmp
retf
test
int3
push
push
xlat
xchg
inc
xchg
adc
pop
inc
push
mov
js
pop
rcr
lds
mov
lods
cld
sbb
in
or
and
push
int3
mov
stos
nop
sbb
add
push
xor
mov
pop
mov
mov
jecxz
pusha
loop
mov
push
adc
sub
cmp
sar
mov
fisubr
ins
leave
mov
les
push
neg
out
mov
jbe
ja
add
add
jnp
ret
or
out
in
retf
jl
daa
jg
inc
adc
int3
xchg
mov
mov
xchg
dec
jns
adc
pop
movs
lahf
movs
fistp
cdq
push
ins
add
js
add
sbb
dec
pop
rcl
aam
sub
cdq
pop
fnsave
loop
out
dec
outs
div
ja
xor
test
xor
call
pop
dec
adc
xchg
or
xchg
pop
in
fistp
sbb
(bad)
lahf
test
adc
fidivr
adc
dec
mov
pop
inc
xchg
add
xor
add
sbb
adc
in
adc
scas
sub
mov
in
cli
ja
mov
in
clc
(bad)
int
hlt
inc
(bad)
cld
rol
sahf
dec
call
inc
inc
mov
dec
pushf
(bad)
push
xor
adc
icebp
push
cld
popf
adc
ret
out
mov
cli
inc
popf
call
rep
xor
add
adc
sbb
(bad)
mov
pop
add
and
add
mov
and
adc
pop
ins
jecxz
sub
popa
(bad)
or
pop
fiadd
jo
cmc
xor
and
add
adc
jne
dec
stc
add
adc
cmps
jp
sbb
fldl2t
jno
pop
aad
daa
mov
jg
xchg
lds
jmp
daa
das
loope
xor
sub
ss
push
addr16
jae
and
mov
dec
mov
inc
mov
push
imul
adc
xchg
jle
scas
mov
leave
out
xor
push
in
leave
outs
daa
or
xchg
mov
jo
out
mov
loop
sub
mov
daa
xor
inc
fst
mov
cmp
cmps
out
sub
xor
sbb
jmp
test
popa
push
dec
and
int
inc
pop
adc
in
sub
fist
mov
clc
mov
not
inc
fiadd
or
retf
mov
ja
test
pop
ds
hlt
mov
jl
ret
mov
sub
mov
jb
das
xor
sub
imul
add
jg
lock
cmp
lock
jmp
dec
std
lods
aam
leave
dec
loop
cmps
mov
push
sbb
sub
retf
push
cmp
jns
xlat
inc
out
test
pop
add
imul
aam
pop
inc
xchg
stos
dec
daa
shr
pop
push
pop
jmp
dec
bound
ret
mov
ret
and
adc
cmp
and
repz
push
mov
test
mov
push
xor
mov
(bad)
fisub
arpl
inc
(bad)
stos
dec
cld
aas
cmp
jmp
xor
push
jno
das
imul
sbb
jne
sbb
mov
in
and
call
popa
std
jae
in
add
mov
repz
js
or
cmp
enter
neg
pop
cmp
in
(bad)
mov
or
and
nop
pop
shl
aad
ret
cmp
push
jp
ficom
mov
sbb
dec
shl
(bad)
cmps
sub
ss
test
test
fisttp
adc
mov
das
lds
ror
mov
cli
jmp
dec
pusha
stos
dec
sbb
lea
pop
in
imul
or
mov
mov
xor
jge
repz
jmp
jp
xchg
popf
mov
cmp
xchg
mov
dec
cmp
fmul
pop
inc
mov
sbb
fldenv
fnstenv
sub
lods
fisub
movs
in
iret
lds
jp
sbb
stos
loope
sbb
push
ins
lea
and
jg
mov
jl
sti
inc
inc
es
in
pop
or
cmp
push
mov
sub
fidivr
or
pop
dec
call
pop
xlat
in
repnz
sbb
or
xchg
jae
clc
int
jle
push
inc
pop
dec
ins
push
jecxz
xchg
fild
sub
arpl
vmwrite
xor
inc
out
dec
pop
xchg
mov
scas
scas
pusha
xor
pop
push
cwde
mov
mov
mov
mov
into
in
lea
loop
inc
or
aas
push
dec
push
cmp
pop
cwde
rcl
mov
js
call
jmp
add
aad
ins
pop
js
xor
cmp
out
sub
sti
add
sar
push
inc
iret
fstp
movs
popf
push
add
lea
sub
sbb
fldenv
add
xor
xor
(bad)
or
mov
jecxz
ss
scas
jp
les
adc
fbstp
mov
(bad)
imul
add
mov
fwait
scas
push
xchg
cwde
push
test
mov
bound
push
adc
loope
pop
dec
in
push
mov
jno
inc
add
scas
jmp
pop
mov
adc
push
push
jae
cmps
push
repz
hlt
rcr
mov
dec
xor
in
sub
jb
movs
mov
retf
or
sbb
fwait
push
add
dec
or
cld
inc
xlat
adc
mov
outs
mov
jge
daa
(bad)
out
aam
sahf
inc
hlt
push
xchg
inc
add
jp
push
pop
jge
jnp
stos
jp
cmps
daa
ror
shr
sbb
mov
test
cld
push
fisub
pop
lods
shl
pop
in
dec
cmp
lods
pop
dec
test
lods
stos
inc
mov
adc
sti
lea
jp
and
fcomp
adc
arpl
pop
mov
mov
mov
clc
mov
jmp
mov
mov
test
movs
adc
leave
jl
mov
arpl
add
dec
or
sub
sub
out
mov
fild
imul
(bad)
mov
mov
jmp
loope
cmp
retf
cmp
(bad)
push
out
pop
ja
and
popa
sbb
aam
loope
test
or
(bad)
dec
std
cmp
cmp
popf
sub
xlat
out
mov
mov
in
out
aam
mov
add
xchg
ret
in
sbb
test
data16
add
in
sub
mov
sub
fisub
xor
int3
(bad)
xor
adc
jbe
lods
dec
xchg
in
push
dec
sbb
inc
xchg
ins
test
shr
outs
sub
(bad)
fdivr
pop
repnz
ins
std
aam
cmp
jg
and
call
mov
int
cmp
test
jnp
retf
cmc
jmp
cmc
in
cmp
loope
js
fcmovbe
test
(bad)
inc
fsub
dec
call
sbb
shl
xchg
mov
xchg
mov
cmp
push
gs
sub
push
fnstcw
fst
mov
neg
jno
(bad)
pop
pop
jg
push
pop
call
mov
scas
mov
push
and
shl
pusha
push
add
scas
call
jg
sbb
outs
retf
xlat
(bad)
xchg
pop
sub
outs
fsubr
mov
or
sahf
cmp
ss
push
pop
fdivr
mov
cli
or
loopne
ficom
fidiv
xlat
inc
std
xor
jno
nop
(bad)
outs
cmc
or
daa
xor
test
cmc
inc
jmp
jl
nop
test
loopne
adc
call
cs
and
sbb
push
nop
stos
jle
sbb
ins
rcl
mov
xor
sbb
mov
fld
add
imul
cmps
stos
fs
mov
aaa
xchg
les
jge
push
push
jl
js
test
neg
sub
popa
in
xchg
push
jnp
sar
aaa
cmp
and
dec
ficom
mov
sub
cmp
retf
add
imul
hlt
pop
in
dec
(bad)
sub
mov
das
fisub
push
iret
mov
cmps
loope
sar
ret
jle
cdq
adc
stc
rol
pop
loop
pop
adc
gs
cwde
fs
sub
and
adc
push
fstp
mov
pop
ja
retf
cmp
lds
jmp
fwait
ret
test
(bad)
call
sub
out
push
shr
jmp
adc
sahf
push
push
out
mov
pop
xchg
xchg
fadd
xchg
clc
mov
lea
cld
ficom
clc
xchg
cmp
sbb
int
jmp
aam
adc
cld
es
and
mov
shl
mov
retf
push
and
call
add
or
jb
sub
and
or
test
test
mov
jle
sbb
fsub
sub
sti
fidiv
repz
(bad)
sub
jnp
ret
fs
adc
mov
test
std
xlat
and
sbb
stos
add
mov
clc
push
js
jmp
inc
stc
jle
pop
adc
pop
sbb
xchg
int
jno
jecxz
loope
mov
fsubr
adc
stc
icebp
fdiv
in
repz
hlt
nop
push
out
repnz
xchg
mov
mov
mov
inc
loop
cli
in
pop
inc
push
ins
add
push
sub
stos
cmovp
bt
jmp
dec
out
pushf
aam
outs
push
ins
gs
jle
sbb
(bad)
sti
or
xchg
mov
dec
jecxz
je
hlt
push
pop
(bad)
dec
cmp
mov
dec
jp
add
mov
stc
or
xchg
or
push
cmp
xor
push
sbb
add
aaa
sbb
int3
in
or
cld
sbb
fcmovbe
dec
adc
leave
arpl
add
mov
push
xchg
cmp
dec
xchg
lock
nop
and
hlt
idiv
sub
test
popf
adc
retf
xchg
sub
(bad)
in
push
mov
fwait
loope
cmp
scas
stos
lods
xchg
push
mov
mov
mov
cs
jecxz
mov
stc
stos
rcl
in
imul
adc
fidivr
jne
jmp
test
sbb
sar
jecxz
mov
inc
push
test
cs
push
mov
rcl
dec
xchg
sub
call
ret
jno
and
mov
xchg
jl
cmps
stos
sub
shl
out
add
xor
imul
ss
fld
test
add
icebp
cmp
cmps
dec
pushf
cmps
sbb
mov
lea
rcr
or
dec
lahf
imul
mov
gs
int3
pop
add
retf
fstp
pop
enter
or
cmp
rcl
and
mov
(bad)
mov
sub
imul
xchg
xchg
das
repz
fidivr
loope
jl
jp
push
xchg
xchg
xchg
jle
push
call
stc
aas
hlt
cdq
cmp
sbb
sbb
mov
jb
inc
xor
mov
dec
mov
lds
lods
popa
adc
call
push
xor
test
mov
push
jecxz
cmp
pushf
xor
sbb
sub
and
sbb
das
dec
imul
push
mov
xchg
cmp
pop
adc
or
inc
ret
sub
cmc
xchg
cmp
sbb
lods
stos
test
repnz
test
sub
sbb
sbb
xchg
pop
jl
xchg
scas
int
(bad)
hlt
ss
repnz
div
adc
inc
push
jo
push
mov
sbb
in
in
and
and
not
jb
jg
mov
cwde
push
add
dec
(bad)
mov
lods
daa
addr16
hlt
or
ins
loopne
xlat
pop
adc
neg
popf
call
jle
sub
mov
jg
scas
xor
fild
div
fsub
bound
das
mov
mov
aad
call
and
xchg
pop
pop
inc
mov
cs
ret
cmp
and
je
push
stos
pop
push
dec
inc
mov
push
icebp
ds
les
ss
add
shr
push
fyl2xp1
clc
mov
sub
xchg
in
jbe
sbb
add
enter
stc
mov
pop
mov
sahf
mov
push
jnp
push
and
sub
lock
addr16
push
adc
fidivr
add
xor
inc
mov
pop
dec
cmp
bound
outs
es
popf
shr
mov
retf
mov
adc
aaa
adc
mov
fstp
in
and
in
adc
repnz
sub
das
jmp
(bad)
sar
pop
xchg
or
repz
in
mov
movs
mov
dec
test
bound
fwait
lahf
dec
out
inc
mov
adc
mov
movs
out
fsubr
and
dec
sub
inc
cld
push
iret
aaa
mov
repz
mov
adc
fidiv
jbe
dec
xor
push
shl
jmp
stc
jmp
repnz
xchg
ror
lock
adc
lods
(bad)
imul
mov
arpl
out
pop
ins
mov
mov
jbe
iret
fstp
jb
mov
(bad)
(bad)
pop
and
(bad)
aaa
jb
sub
or
xchg
in
fldl2t
cmp
xchg
sti
nop
cli
inc
aad
xchg
ins
jbe
dec
add
es
out
adc
and
and
verw
mov
in
je
mov
and
mov
and
cwde
ror
addr16
push
arpl
arpl
int3
push
add
adc
adc
dec
outs
pop
(bad)
shr
and
fiadd
bound
dec
sub
push
jns
js
mov
push
stos
mov
sar
test
add
outs
add
inc
xchg
jno
dec
mov
es
aad
pop
cmps
rol
aaa
xchg
adc
cld
mov
arpl
mov
push
sti
or
ja
dec
mov
jge
push
aaa
sbb
xchg
inc
gs
cwde
out
cmp
inc
mov
test
inc
inc
and
icebp
pop
mov
pop
fs
jnp
jg
push
(bad)
mov
mov
popa
lea
cli
xchg
les
pop
test
push
jmp
dec
fcmovne
rcr
xchg
add
das
aas
and
push
cmp
inc
popa
cmp
inc
not
push
hlt
test
inc
pop
xchg
bound
jg
ins
adc
lea
mov
mov
loop
mov
imul
cld
push
mov
jne
mov
xchg
sub
jecxz
(bad)
ins
dec
sbb
pop
mov
fdivr
push
and
jae
sub
pop
jl
mov
xlat
imul
popf
ror
pop
ins
push
push
inc
push
les
nop
in
inc
ret
inc
add
adc
push
and
movs
and
ins
(bad)
lahf
adc
cwde
jp
fwait
dec
sbb
sti
pop
stos
cmc
cmp
jecxz
mov
inc
xchg
in
(bad)
mov
mov
mov
inc
mov
repz
popf
sub
push
jecxz
mov
sub
pop
or
in
aas
jns
adc
ja
jae
sti
push
mov
cmps
test
cmps
sti
xchg
mov
mov
add
mov
push
mov
das
xor
out
int3
repz
xor
es
jl
jle
push
inc
mov
test
cli
or
xor
sub
mov
repnz
jecxz
sbb
jns
daa
bound
xor
out
mov
stos
and
push
shl
xchg
imul
out
inc
js
mov
and
mov
rcr
in
and
inc
xchg
cmp
mov
sbb
fld
push
fdecstp
pop
jp
pop
int
cmps
(bad)
jmp
(bad)
push
aas
call
outs
enter
xchg
ins
mov
out
ins
and
shr
xlat
inc
mov
test
out
retf
mov
push
icebp
shr
addr16
xchg
pop
add
dec
rol
aam
pop
iret
leave
jbe
cmps
push
cmp
or
xchg
add
add
adc
mov
out
shufps
loop
and
ds
jmp
nop
mov
ret
rcr
jmp
mov
js
mov
pop
pop
inc
pusha
mov
or
push
xchg
ds
mov
sub
mov
loopne
fadd
lods
int3
and
push
sbb
fiadd
inc
clc
jecxz
mov
test
bnd
xor
test
pop
test
push
jb
out
xchg
pusha
jge
std
pop
mov
in
out
xor
push
outs
call
pop
dec
sub
sbb
or
int
inc
sub
push
adc
cwde
loopne
mov
cmps
sub
clc
adc
inc
push
std
gs
sbb
enter
adc
scas
push
unpckhps
ins
xor
int
pop
ret
mov
bound
and
aaa
repz
push
loope
inc
in
int3
sahf
inc
mov
(bad)
push
jae
sub
jge
sbb
clc
shl
xchg
adc
push
xchg
cdq
test
ret
fidiv
sbb
mov
push
fwait
test
adc
mov
cdq
pop
dec
call
clc
aaa
xchg
xchg
mov
sub
shl
adc
imul
sub
lea
mov
jae
xchg
jl
mov
mov
mov
ins
(bad)
or
or
out
push
jle
fbstp
imul
or
xchg
(bad)
xchg
fs
imul
pushf
mov
es
out
pop
xchg
dec
push
mov
jle
ins
mov
and
into
lds
xor
push
shr
outs
xlat
xlat
mov
inc
lock
out
outs
sub
cmp
gs
add
sbb
fsub
cmp
in
mov
or
inc
movs
inc
sahf
push
mov
aad
in
xchg
in
cmp
cli
imul
inc
mov
push
pop
(bad)
movs
fidivr
popf
xchg
jno
retf
test
aas
add
jmp
cld
pop
mov
sub
sti
pop
pusha
out
popf
jmp
jmp
(bad)
mov
mov
xchg
cdq
xor
int
hlt
mov
test
mov
rcr
loop
push
mov
xor
sbb
sbb
mov
dec
mov
add
ficom
clc
or
mov
in
movs
push
sub
or
adc
jne
push
xor
pop
imul
outs
xchg
or
pushf
hlt
ds
pop
scas
pop
inc
es
jae
fwait
gs
pop
bound
mov
pop
(bad)
fld
ret
sbb
popa
mov
test
mov
jle
push
aaa
lea
mov
cdq
sub
pop
std
inc
or
or
(bad)
loopne
rcl
fld
lods
xor
jmp
repz
clc
mov
pop
out
fiadd
cs
add
jo
rcr
shl
pop
pop
dec
mov
mov
in
adc
xlat
pop
pop
jns
in
nop
rcl
pop
mov
jp
pop
sbb
add
or
int
mov
aad
jge
mov
movs
clc
(bad)
xor
enter
fnsave
mov
data16
or
popf
sub
test
(bad)
jecxz
or
fsub
ins
sub
retf
mov
cmp
arpl
add
pop
jl
lds
ret
push
inc
mov
mov
push
xchg
pop
mov
mov
adc
je
dec
or
xchg
dec
cmp
das
call
mov
in
cwde
aaa
retf
inc
sbb
cmp
stc
mov
jge
add
jne
push
call
(bad)
xchg
adc
mov
add
push
push
pop
dec
imul
add
mov
out
scas
fadd
leave
mov
sbb
push
xchg
mov
mov
cmps
jae
lahf
imul
std
outs
sub
das
std
out
jecxz
jnp
(bad)
push
rcl
sbb
mov
cmp
or
mov
(bad)
jns
in
pop
call
xor
test
xor
push
mov
ficom
cmp
push
addr16
(bad)
cli
fnstsw
push
mov
inc
ret
cli
scas
add
push
or
mov
iret
and
or
stos
mov
aam
sub
adc
ret
fisttp
out
xchg
jecxz
arpl
popa
(bad)
cmp
test
push
inc
cmp
sar
jns
ds
add
lahf
mov
jb
mov
pcmpeqb
shl
cdq
mov
repz
jecxz
or
xchg
fld
popf
push
das
jmp
mov
ret
add
xchg
mov
dec
xchg
shr
sbb
(bad)
sub
retf
in
pop
jl
mov
fadd
push
out
in
pop
in
(bad)
clc
ret
and
sbb
or
push
fwait
aam
mov
out
jbe
pop
cmp
sub
sub
gs
adc
push
fcom
pop
inc
adc
mov
test
loopne
aad
dec
rol
pop
sbb
cmps
pop
xchg
loop
out
cmps
scas
rcr
test
mov
out
inc
cmps
fdiv
inc
call
gs
lods
push
loop
pop
pop
adc
clc
add
imul
cmp
inc
rcr
mov
xor
leave
bound
retf
lods
fsubr
les
repnz
mov
ds
call
add
add
and
add
sti
inc
mov
push
mov
add
ret
vpsadbw
mov
sbb
add
test
inc
repnz
mov
dec
ds
loop
lahf
xor
das
loope
shl
sahf
jo
arpl
add
push
ja
and
popf
out
scas
sbb
lods
fsubr
adc
sbb
aam
dec
sub
xchg
cli
lds
daa
mov
outs
shl
(bad)
cmp
cli
adc
cld
xchg
ins
pop
arpl
xor
in
pop
cwde
xor
add
adc
mov
and
sti
cmp
push
call
jecxz
test
sub
cmp
jb
xchg
fsub
lahf
call
fist
movs
(bad)
fadd
cmc
adc
test
pushf
and
jg
fisub
ja
add
nop
sbb
pop
jne
les
in
inc
dec
pop
push
sub
push
xchg
pop
(bad)
inc
add
clc
push
mov
jo
sbb
dec
add
in
popf
(bad)
(bad)
cmp
mov
into
push
aaa
cwde
repnz
je
icebp
pop
mov
inc
int
push
cmp
xchg
(bad)
cmps
faddp
sbb
sahf
adc
cmp
xor
cmp
dec
sbb
div
jmp
call
fs
loopne
mov
sahf
cmp
into
test
inc
mov
(bad)
fsincos
fidivr
dec
add
rcr
cmp
sub
add
jp
pop
inc
sbb
mov
push
mov
aam
lock
mov
pusha
and
(bad)
sbb
push
mov
dec
into
cld
test
call
loopne
xlat
mov
cmps
xchg
mov
mov
xor
enter
sbb
xchg
out
enter
cmp
mov
and
adc
jae
sbb
imul
and
push
mov
mov
cmp
lea
pushf
js
or
mov
push
xchg
pop
icebp
mov
lea
mov
add
xlat
sub
or
ficomp
fst
ss
lods
pop
shl
dec
inc
mov
mov
aam
popf
in
push
jns
jbe
mov
cmc
and
mov
cmc
inc
cwde
lock
(bad)
mov
cwde
jmp
mov
fnsave
fwait
adc
pushaw
and
adc
or
inc
inc
ss
fucomp
add
pop
je
cli
xchg
pop
movs
adc
inc
imul
xor
push
std
push
shr
inc
mov
scas
or
push
gs
push
mov
sub
mov
loope
inc
scas
imul
xchg
cdq
(bad)
mov
jmp
popa
mov
nop
mov
(bad)
scas
hlt
hlt
popa
adc
push
aam
sbb
push
sub
stos
jmp
inc
xor
jle
cmps
xchg
mov
mov
out
fbstp
(bad)
fld
adc
push
push
jbe
(bad)
mul
and
or
std
pop
leave
arpl
imul
inc
cs
sub
push
xlat
cld
ds
scas
mov
xor
std
stc
mov
fdiv
mov
cmp
xor
pushf
sbb
iret
sub
pop
movsx
push
and
pop
jle
dec
call
and
xchg
cdq
inc
inc
xchg
(bad)
(bad)
mov
setno
add
push
cmp
fdiv
pop
aad
xchg
shld
in
in
add
or
xor
xchg
xor
xchg
add
mov
test
neg
fbld
xchg
mov
dec
push
push
push
cmp
push
xchg
lods
sub
xlat
dec
popa
call
mov
push
call
mov
out
xor
xor
cmp
sbb
(bad)
iret
add
add
push
cmp
cwde
neg
mov
adc
xchg
push
jne
sbb
rol
adc
mov
test
and
rcl
lock
sbb
sbb
mov
sahf
lahf
inc
mov
xor
inc
imul
add
mov
pop
data16
jns
mov
gs
hlt
in
pop
pop
(bad)
or
xchg
shr
in
pop
es
pop
xchg
mov
mov
cdq
sbb
jg
jns
mov
cmp
jmp
pop
cmp
rep
loope
icebp
sbb
push
adc
popa
xchg
retf
mov
ins
test
arpl
xchg
mov
xchg
fiadd
mov
inc
cmp
call
mov
sbb
fmulp
pop
test
or
int
adc
fmul
pop
sub
(bad)
shld
fldenv
ds
or
aad
outs
jbe
pop
or
pushf
dec
mov
jns
xor
lods
sbb
mov
addr16
pop
xor
push
test
fisub
jns
push
add
mov
cmp
add
fnstsw
sub
jmp
ret
(bad)
leave
mov
iret
and
add
fs
xchg
mov
je
dec
cmp
add
xchg
out
and
xchg
jl
aad
dec
ja
clc
xor
daa
cli
mov
retf
xor
(bad)
idiv
sub
mov
retf
lods
cmps
rol
fsubrp
addr16
jmp
das
clc
pop
cmp
jo
cli
or
push
std
or
loopne
jo
and
jle
xchg
mov
iret
std
cld
ja
dec
in
ja
jl
scas
lds
aas
popf
jp
fwait
pop
jno
pop
jge
push
shl
mov
add
sbb
push
aad
xlat
rol
jle
fwait
jnp
mov
mov
mov
std
in
xor
cld
sub
popf
dec
add
rol
int3
es
or
stos
scas
cmp
call
or
adc
jl
or
mov
add
call
stc
mov
cmps
dec
sahf
test
pop
dec
dec
adc
neg
(bad)
mov
and
lock
push
shl
lea
stos
and
lahf
fcmovb
jg
inc
push
or
fcomp
pop
cmps
jb
add
and
or
jmp
push
mov
mov
lods
jge
jne
(bad)
jne
pop
(bad)
and
jl
neg
out
push
fiadd
stc
mov
jb
cli
or
mov
inc
repnz
outs
cmc
pop
(bad)
jp
inc
popf
call
stc
mov
addr16
add
jno
sub
or
outs
adc
or
enter
jp
cmp
lock
inc
dec
into
addr16
jno
imul
aaa
ja
jae
or
aaa
(bad)
stos
fcomp
xor
test
and
shl
hlt
mov
or
aad
xchg
fld
inc
(bad)
push
pusha
in
in
retf
push
push
retf
out
rep
inc
adc
sbb
cmp
mov
jmp
xchg
jns
cli
loop
cmc
cmc
jae
pop
dec
scas
xor
stos
pop
je
shr
push
cmp
push
sub
int3
lds
and
cmp
dec
inc
and
pop
aaa
inc
add
xchg
repz
sbb
and
popf
jl
push
rol
ins
mov
movs
dec
sbb
(bad)
dec
(bad)
aaa
or
test
int
adc
adc
push
push
xchg
imul
and
fnstenv
push
stc
mov
outs
sub
add
sbb
out
ins
loop
(bad)
(bad)
(bad)
pop
pop
mov
push
pop
mov
arpl
jae
sbb
or
loope
xchg
fisubr
scas
or
in
jge
outs
mov
shr
xor
pop
cmps
aaa
fs
mov
in
xor
mov
jns
sbb
jp
cmc
nop
loope
sub
in
xchg
in
(bad)
outs
retf
out
inc
cmp
int3
sub
jmp
mov
daa
mov
cld
loop
or
push
daa
xor
push
scas
mov
and
inc
rol
pop
cmp
push
cmp
push
dec
sbb
mov
mov
xor
cdq
mov
push
fnstcw
ja
mov
push
lods
dec
out
gs
mov
cmc
lods
inc
or
or
xchg
and
dec
aad
or
dec
jne
jb
mov
push
movs
push
ins
ins
dec
jg
sar
fsub
lods
add
pop
pop
cmp
outs
lods
(bad)
nop
fcomp
scas
ss
adc
pop
pop
call
push
cmc
jle
fmul
es
mov
pop
stc
adc
mov
xor
jp
or
scas
loope
cmp
sbb
push
adc
loopne
or
dec
mov
das
mov
mov
push
imul
jp
cmp
xchg
mov
mov
jnp
dec
xchg
clc
inc
mov
fistp
push
dec
stos
mov
scas
inc
mov
xchg
xchg
cmp
jnp
in
in
loop
push
fs
retf
and
pusha
xchg
adc
add
and
fld
jl
mov
imul
or
ins
add
cmp
or
and
mov
cli
pop
call
jge
push
cmc
int
cwde
xchg
xor
outs
or
sbb
pop
or
mov
xor
cmp
sbb
fild
mov
test
mov
pop
push
cmp
(bad)
aad
test
movs
adc
sub
mov
retf
or
pop
lods
mov
lds
jb
je
xor
add
aam
mov
int
je
pop
xor
fisttp
cmc
jbe
pop
jbe
adc
xor
arpl
fcmove
mov
enter
in
mov
jbe
jecxz
and
ds
xchg
dec
repnz
ror
(bad)
cld
cmps
inc
xchg
ins
and
ja
jmp
in
xor
pop
xor
iret
imul
sbb
adc
fsub
jb
pop
mov
aaa
mov
mov
out
mov
push
repz
or
or
ins
and
sbb
mov
imul
jmp
ret
mov
or
fisttp
fisttp
outs
into
call
push
ret
adc
add
pop
into
scas
shr
and
js
or
xchg
sub
and
icebp
cmp
jmp
loop
inc
jp
(bad)
xchg
mov
sub
ss
cmp
pop
iret
pop
inc
scas
mov
adc
push
ins
scas
sar
bound
sub
xchg
inc
add
aad
mov
push
inc
mov
daa
stc
nop
cli
jl
mov
add
sub
mov
add
add
cmp
cmps
sar
push
mov
rcr
int
stc
cmps
sub
cmp
clc
cld
and
mov
sbb
or
rcl
sub
and
cs
out
shr
ds
pop
inc
jmp
mov
sbb
mov
cmp
xlat
mov
jmp
xor
idiv
int3
repz
stos
jbe
push
and
pop
imul
adc
gs
shr
inc
push
js
mov
call
push
mov
jmp
lods
idiv
test
imul
inc
sbb
mov
mov
dec
iret
jnp
xchg
inc
call
sub
cmps
lea
fidivr
pop
xchg
xlat
mov
(bad)
ds
loope
ret
dec
mov
in
je
je
mov
pop
jmp
xor
sub
jo
ins
out
mov
and
xchg
scas
lea
adc
pop
leave
das
or
mov
push
inc
out
call
(bad)
dec
pop
sbb
lfs
ins
xor
mov
out
mov
and
push
mov
fcom
imul
jo
dec
push
mov
test
js
movs
aad
xor
leave
ds
mov
mov
fsub
pop
stos
jns
inc
push
sub
jnp
int
add
add
mov
push
sub
pop
mov
dec
sahf
xor
leave
mov
fstp
cmps
jg
sbb
daa
sub
adc
mov
inc
lds
pop
sub
xor
xor
add
(bad)
push
lock
repnz
push
cld
sbb
xchg
js
cmps
inc
loope
je
push
je
mov
dec
outs
mov
xor
lods
pop
mov
gs
mov
fwait
leave
mov
jb
in
int
enter
and
mov
pmaddwd
lods
push
jae
xor
fldenv
rcl
push
in
xor
sar
test
mov
sub
retf
fsubr
or
sbb
pop
(bad)
aaa
adc
pop
cmp
push
push
push
cwde
adc
inc
jmp
adc
repnz
cmp
and
lds
fcom
leave
retf
push
jle
dec
push
sub
or
add
dec
pop
jmp
sbb
mov
mov
cmp
add
addr16
cmps
call
push
std
xlat
in
mov
jge
adc
pop
ficom
jmp
out
pop
(bad)
add
loopne
jle
scas
xchg
mov
data16
cs
scas
into
shl
dec
pop
jne
(bad)
cmp
in
neg
inc
imul
hlt
pusha
stos
(bad)
(bad)
pop
sbb
mov
shl
jge
pusha
aas
mov
and
pop
mov
fdiv
jp
xor
mov
push
inc
cs
mov
adc
jbe
scas
aad
cmp
pushf
push
das
mov
retf
test
imul
xor
or
fiadd
leave
std
cmp
aaa
icebp
shl
cmps
sub
cmc
xor
scas
addps
add
dec
jae
sbb
movs
or
and
jbe
pop
jle
dec
jmp
fist
jecxz
jne
ror
and
js
or
shl
(bad)
fldcw
retf
neg
cmc
push
dec
call
loope
int3
jmp
sub
in
bound
test
aad
cmps
xor
dec
bound
mov
cdq
jo
fs
pushf
mov
outs
fwait
(bad)
and
pop
adc
or
dec
mov
jb
cld
call
test
loope
mov
shl
or
fwait
jo
add
dec
lock
pop
mov
sbb
icebp
push
pop
mov
and
pop
das
jp
cmps
pusha
jp
inc
jo
xchg
movs
enter
aam
fs
scas
cmp
imul
lock
mov
ret
scas
pop
push
sub
ror
repnz
movs
cmp
jg
rcr
(bad)
(bad)
enter
adc
test
fnstcw
in
aas
cmp
add
adc
in
inc
push
es
nop
dec
xchg
loopne
lahf
push
sbb
adc
int3
mov
dec
aad
cmc
jl
push
xchg
xchg
jg
ds
gs
jmp
and
rcl
add
jnp
aad
test
shr
or
jg
ret
jbe
pop
pop
loopne
retf
lds
inc
aaa
mov
mov
hlt
mov
ror
xchg
iret
retf
adc
daa
nop
outs
cs
test
xchg
mov
cli
adc
push
xchg
or
jge
(bad)
jo
cmp
gs
in
cmp
popf
ds
cmp
jb
pop
mov
push
dec
or
out
pop
mov
out
adc
popf
pop
rcl
pop
mov
jge
jo
scas
rcr
sbb
les
cwde
cli
test
push
aaa
(bad)
pop
or
mov
fwait
mov
in
jbe
lods
scas
das
pop
aad
jmp
(bad)
stos
dec
mov
xchg
inc
call
in
shr
ja
rcr
and
xchg
push
scas
inc
dec
xor
push
push
jl
mov
lods
pushf
push
popa
data16
sub
push
out
inc
push
xor
cmp
in
setle
jl
lods
xor
lds
or
pop
add
repz
test
add
loope
scas
clc
test
test
xchg
push
mov
cmps
retf
add
pop
lods
or
push
jmp
pop
inc
jmp
loope
int3
dec
out
test
enter
mov
cmp
cwde
cmp
repnz
xchg
sbb
or
pop
and
out
es
mov
sbb
mov
dec
push
fsub
cld
sub
jo
mov
mov
mov
pop
mov
fidivr
push
xor
cli
xchg
or
dec
push
stos
jmp
dec
(bad)
out
sub
mov
retf
sbb
mov
and
outs
add
stos
sbb
sub
cmp
xlat
lea
inc
iret
sar
sub
(bad)
sti
out
mov
js
neg
adc
cs
fcomip
cmc
mov
cs
inc
xor
jecxz
xchg
jmp
jns
pop
push
lds
stos
sbb
mov
clc
in
pop
jp
xor
psubb
inc
push
outs
xor
mov
das
(bad)
fdiv
cmps
pop
daa
adc
inc
popa
cmp
adc
enter
rcl
sahf
fs
cmp
push
push
inc
xchg
test
cld
div
mov
jmp
mov
loopne
bound
inc
std
xchg
popa
mov
(bad)
ins
or
inc
add
cmp
jno
repnz
sahf
outs
cwde
mov
int3
sub
sbb
xchg
lock
xor
ds
aas
mov
cmp
icebp
ss
iret
mov
mov
and
mov
sub
test
arpl
call
dec
pop
hlt
sub
enter
pushf
dec
movs
and
sub
sub
div
jle
jne
inc
xor
or
xchg
cmp
int3
call
cmp
fisttp
fadd
mov
push
ficom
int3
(bad)
fmul
cmp
mov
dec
mov
outs
xlat
stc
xchg
cmps
sti
pop
ja
retf
into
cmp
push
in
inc
pop
dec
jbe
repnz
fisttp
lods
inc
push
addr16
ja
ins
inc
dec
mov
shl
xchg
rcl
rcl
jmp
mov
fimul
pusha
movs
call
jge
push
stc
stos
mov
adc
das
loop
and
call
sti
stos
fxch
movs
cmp
jno
fcom
xor
xor
mov
outs
mov
fld
mov
std
jo
mov
add
addr16
imul
inc
iretw
out
dec
cli
pop
cmp
sub
or
inc
aad
mov
sub
test
cmp
jge
pop
fild
xor
mov
jmp
xchg
inc
adc
cmp
xor
movs
clc
push
lock
enter
outs
jge
fild
mov
stos
push
adc
lea
je
in
or
shr
sahf
int3
in
and
push
cmp
jno
sbb
jmp
test
out
cwde
mov
imul
bound
ss
test
ins
mov
loopne
pusha
int
stos
xchg
shl
cmc
or
ja
push
pusha
add
pusha
mov
inc
adc
sar
je
pop
pop
mov
outs
cmc
leave
jae
popa
mov
(bad)
push
xchg
popf
(bad)
rcr
jns
xlat
jb
pop
imul
je
sbb
xor
mov
push
(bad)
and
cmp
jns
cs
xchg
dec
rcr
mov
cdq
ins
pop
inc
and
shl
jnp
push
jns
mov
lahf
push
clc
sbb
adc
and
sub
or
mov
int
mov
aaa
movs
ja
jmp
jbe
ins
push
ret
mov
xor
rol
mov
inc
aam
adc
pop
add
cdq
pusha
mov
sub
cmp
repnz
std
dec
and
mov
jbe
push
fistp
push
fs
sahf
or
lahf
mov
and
or
or
cmp
mov
jge
inc
mov
lds
mov
in
xchg
bound
push
xor
push
pushf
xor
xchg
dec
pop
sub
imul
or
cli
push
mov
mov
mov
(bad)
jmp
(bad)
sub
bound
not
shl
loop
jno
cli
push
xor
stos
imul
xor
mov
sub
and
xchg
cli
shl
jno
xchg
imul
and
sub
lahf
retf
imul
push
bound
ja
(bad)
scas
cdq
ret
sub
stc
jo
(bad)
cmp
fwait
cs
(bad)
mov
dec
push
push
and
imul
dec
shr
out
pop
mov
cmp
repz
pop
mov
mov
int3
inc
jbe
fistp
mov
inc
mov
jg
cmp
mov
and
push
xlat
fs
aas
inc
ins
pop
mov
sub
into
loope
in
jae
cmps
inc
mov
lods
popf
mov
fld
xor
out
jbe
sahf
sub
jb
dec
mov
dec
push
popa
inc
and
sbb
test
fild
adc
mov
(bad)
fild
out
ins
aaa
xor
ret
scas
jg
fnsave
xchg
or
mov
neg
sub
out
add
icebp
mov
(bad)
fdivr
stos
retf
adc
jo
fcom
and
retf
or
ret
sbb
mov
dec
mov
inc
retf
cmp
in
cmp
jmp
xchg
jo
mov
shl
leave
add
mov
push
iret
loopne
or
sub
xor
dec
xchg
xchg
neg
jno
out
retf
out
nop
sar
or
mov
popa
mov
outs
xchg
push
dec
pop
mov
(bad)
adc
fwait
cmpxchg
ins
test
mov
push
mov
shr
sti
shl
xchg
push
push
sahf
cmp
mov
lds
pop
mov
pop
inc
rcr
mov
lods
nop
sub
js
test
mov
ret
mov
mov
mov
imul
(bad)
jp
sbb
out
adc
mov
les
lea
adc
mov
cmc
adc
mov
push
cld
pop
pop
sbb
retf
inc
ja
sub
cdq
in
lods
test
fimul
add
sub
hlt
push
arpl
fld
aad
jmp
xor
or
(bad)
cs
xor
inc
imul
aam
rcr
fwait
rcl
jg
xor
ss
je
cmp
dec
lods
dec
call
xchg
iret
and
dec
mov
xchg
mov
outs
or
(bad)
lock
rcl
retf
popa
mov
sub
cmc
int
test
call
and
inc
ret
in
adc
and
sbb
repnz
lods
mov
or
call
pushf
nop
xchg
cmp
lds
sub
ja
push
lock
pop
cmc
cld
push
jl
adc
or
dec
mov
call
sbb
imul
mov
dec
clc
push
scas
cwde
push
push
lods
in
ss
xchg
loop
mov
add
imul
popa
mov
pop
ror
aaa
adc
inc
stos
xchg
int3
xlat
pop
add
mov
gs
(bad)
jo
push
shr
(bad)
ret
cmps
les
and
scas
inc
add
ret
jno
arpl
cmp
inc
std
test
or
in
add
scas
pop
dec
rcr
xlat
cld
rcl
aaa
fimul
dec
jmp
fstp
stc
jae
jbe
cld
das
scas
scas
(bad)
xlat
xchg
xor
cmps
push
add
lock
mov
inc
scas
das
test
dec
and
or
sahf
mov
mov
sub
sar
out
jno
fsubr
sti
xchg
or
or
mov
xor
jg
dec
(bad)
jmp
mov
aas
push
stos
movs
jo
jo
fnstsw
add
inc
cmps
xlat
nop
mov
dec
ja
xor
rcr
jb
into
rcl
mov
unpcklps
sti
mov
push
pusha
sbb
test
movs
inc
sub
aas
ficom
inc
fld
pop
xlat
in
outs
pop
js
add
in
repz
ins
mov
mov
push
addr16
repz
leave
nop
stos
aad
outs
lods
pop
loop
xor
arpl
mov
dec
out
loope
in
fistp
iret
mov
es
cwde
rol
out
gs
es
mov
xor
in
pop
dec
frstor
sbb
sub
mov
ficomp
setae
or
ret
hlt
cs
pusha
cli
test
mov
lods
mov
icebp
and
test
sub
test
xor
lds
sub
sub
and
std
mov
rcr
inc
adc
push
les
push
loope
inc
shr
lahf
jle
(bad)
aad
mov
div
(bad)
ins
sahf
mov
(bad)
dec
add
dec
(bad)
in
sub
jae
sub
add
scas
mov
test
sbb
lock
fadd
pop
cdq
xlat
inc
add
jl
inc
mov
dec
rcr
or
jae
jns
dec
ins
add
jo
mov
and
push
sbb
test
xor
jg
scas
jno
(bad)
dec
and
les
push
xor
inc
imul
or
call
jo
mov
adc
mov
lods
outs
scas
(bad)
test
xchg
sbb
movs
mov
add
pop
jle
(bad)
mov
jne
jnp
xchg
mov
inc
jmp
sub
push
sbb
pop
dec
fnstsw
push
and
cmps
pop
cwde
(bad)
das
stc
push
dec
dec
sar
xchg
jle
push
jl
xchg
mov
js
test
jecxz
push
or
push
fidiv
fnsave
(bad)
sub
sub
das
jae
xchg
shl
adc
aam
xlat
test
sub
lahf
ss
std
inc
retf
mov
lahf
adc
popa
retf
mov
jecxz
pop
add
fild
call
push
ins
clc
sub
aad
mov
xor
sub
mov
lock
jno
mov
cmc
dec
test
jp
mov
jmp
sbb
sti
pop
fimul
sub
shl
mov
jo
xchg
test
fs
fcmovnb
push
test
ins
dec
dec
sub
mov
mov
add
jnp
clc
ja
xchg
mov
xlat
ds
push
jb
popa
loop
pop
dec
fild
ret
dec
rol
jmp
dec
test
test
mov
je
push
mov
pop
das
out
imul
xchg
pop
adc
test
dec
inc
mov
out
repz
outs
xchg
xor
lds
cli
fistp
mov
or
push
adc
xchg
mov
lods
or
or
mov
cmp
mov
push
inc
fs
inc
and
iret
int3
xchg
ins
jmp
ror
mov
add
jno
push
je
xlat
sub
dec
xchg
cmp
fcomip
jecxz
jge
jg
pop
rcl
pop
fisub
sbb
ss
mov
dec
outs
shl
mov
mov
jmp
pop
inc
mov
movs
cld
int3
lods
daa
and
fst
(bad)
stc
jl
cmps
scas
mov
data16
fsubr
cwde
mov
(bad)
in
xor
in
es
jl
fisttp
pop
sbb
lds
cli
xor
stos
data16
push
out
inc
inc
(bad)
mov
dec
inc
addr16
mov
xor
mov
xor
sub
in
mov
stc
(bad)
ja
dec
sbb
into
nop
and
mov
jae
scas
jo
je
jp
call
sar
push
mov
sti
cmp
and
mov
ds
and
shl
sub
pop
fndisi(8087
in
dec
leave
mov
je
mov
pop
xor
and
xor
cmp
div
lahf
arpl
(bad)
aad
and
push
mov
mov
inc
fist
lods
or
pusha
mov
jne
dec
xchg
mul
cld
cmp
sbb
push
cmps
cmp
inc
jns
pop
xchg
lahf
cmps
lock
inc
(bad)
pop
cmp
adc
jnp
mov
test
adc
push
test
pop
retf
(bad)
ret
popa
dec
sbb
ret
sub
mov
lods
pop
inc
xor
dec
and
jg
out
cld
mov
jge
loop
loopne
imul
mov
loopne
enter
add
mov
(bad)
cwde
xlat
icebp
das
jnp
push
adc
out
inc
aam
out
xchg
ins
add
pop
xor
loope
movs
fadd
dec
and
mov
fwait
in
push
push
jl
and
mov
ror
es
xor
xchg
adc
outs
movs
mov
inc
pop
ins
test
add
fstp
dec
std
aad
inc
cmps
add
jl
dec
and
jno
es
xor
xchg
mov
inc
adc
xor
les
pop
enter
lods
shl
test
into
mov
sbb
inc
nop
dec
add
cmp
cmp
mov
or
and
jmp
sahf
pop
cmp
dec
fisub
mov
ja
ret
out
cmp
and
retf
inc
sbb
test
fwait
shl
dec
das
scas
or
fist
cwde
fcom
ffree
jne
sub
jo
cmp
adc
cmp
repz
mov
mov
cmp
xchg
mov
xor
inc
movs
mov
pop
pop
sub
rcr
(bad)
xor
xor
mov
xchg
adc
sti
fsubr
frstor
leave
test
leave
inc
int
pop
or
(bad)
cmp
add
add
cmps
push
lea
test
mov
dec
test
cli
add
lods
push
add
pushf
add
xchg
adc
inc
jae
push
jp
outs
fcmovne
pop
mov
das
lods
adc
sbb
adc
cs
xchg
cmp
add
inc
repnz
xor
xchg
mov
pushf
daa
pop
and
lods
icebp
loopne
out
pop
inc
nop
or
jno
mov
and
adc
dec
and
mov
or
sub
add
xor
test
adc
sub
dec
xor
nop
lds
xchg
jno
dec
in
sub
add
cmps
inc
cld
inc
out
pop
xchg
jg
jmp
jns
pop
mov
loope
jno
pusha
fdiv
push
jbe
push
push
and
fst
xchg
push
dec
cmps
pop
push
mov
push
sbb
retf
sbb
test
add
cdq
movs
aam
fwait
add
cmps
mov
mov
sbb
scas
cmps
lock
sub
movs
dec
jbe
jmp
pop
(bad)
lea
xlat
xor
sti
in
jge
fwait
fwait
and
retf
mov
sbb
enter
adc
sub
or
pop
or
push
adc
rcl
adc
lahf
cmps
or
cmps
dec
mov
call
sub
pop
stos
dec
jnp
cs
push
jb
ins
ja
enter
call
and
scas
neg
dec
mov
(bad)
jmp
and
add
icebp
ret
dec
push
pop
(bad)
imul
scas
ds
jle
gs
shr
cld
(bad)
xchg
sar
dec
mov
mul
adc
pop
or
cli
xchg
dec
iret
mov
clc
add
push
cmp
fs
push
xchg
xchg
and
pop
lea
push
ins
test
aad
std
adc
jl
pop
pop
add
mov
lahf
out
dec
mov
add
mov
jo
push
out
pop
mov
push
cmp
test
out
(bad)
sub
pop
fmul
lods
xchg
jl
inc
jp
shl
cmp
lea
pop
mov
cmp
pop
int
cwde
adc
jge
ins
adc
add
cmp
call
push
nop
in
int
in
icebp
stc
xor
push
add
mov
repnz
fnstcw
retf
(bad)
push
aam
push
xchg
aaa
sub
aaa
xor
hlt
daa
fnstenv
jp
dec
aas
jg
out
jl
mov
neg
lahf
cli
(bad)
mov
mov
lock
movs
push
xor
pop
fwait
cmp
retf
jle
dec
jle
leave
shl
or
inc
and
cmp
lahf
mov
push
aam
out
push
test
jge
cmp
in
hlt
xor
sub
or
sub
out
fdivr
leave
cmps
call
fs
into
movs
xchg
or
mov
dec
push
xchg
sub
int3
sahf
xor
xor
in
inc
sahf
hlt
stos
ins
xchg
addr16
das
pop
push
daa
xchg
adc
mov
or
mov
adc
call
in
mov
dec
cmp
jae
scas
add
cmp
jb
(bad)
mov
sbb
mov
loopne
fstp
shl
cdq
jmp
jmp
xchg
mov
adc
mov
push
or
or
in
pop
in
retf
cmp
sahf
je
dec
jmp
shr
pop
cmp
sbb
dec
xchg
mov
fldcw
push
pop
cmc
imul
mov
jle
pop
pop
sbb
dec
scas
add
fld
push
dec
mov
push
mov
jo
loope
leave
sbb
fimul
sub
pop
lds
or
aam
jmp
neg
mov
jl
icebp
sti
or
push
xor
std
js
(bad)
cmp
out
inc
push
mov
or
es
enter
sbb
outs
retf
xchg
adc
and
inc
sar
lods
push
scas
fcmovne
les
pushf
aam
add
jno
mov
sub
popa
out
loopne
rol
shl
inc
cli
ins
push
into
int
sbb
sub
jb
push
hlt
mov
loope
jle
loop
push
(bad)
ja
retf
mov
or
test
test
adc
pmaddwd
jnp
jb
sbb
call
mov
mov
push
cmp
or
add
cmp
les
xchg
xor
dec
xor
or
js
in
jmp
cld
dec
push
in
mov
iret
out
mov
jg
add
test
cli
mov
and
ds
ss
test
(bad)
push
xor
add
daa
xor
cmp
jae
sub
mov
push
loop
mov
mov
stos
pop
cmp
push
cld
pop
mov
div
retf
es
push
dec
push
mov
mov
test
mov
adc
jbe
inc
int3
ret
pop
loopne
push
push
rcr
pop
leave
addr16
pop
out
daa
loopne
cld
dec
call
stos
push
adc
scas
jns
cmp
jmp
adc
test
call
mov
mov
retf
fist
in
aam
mov
fist
inc
in
dec
inc
fmul
cld
inc
jmp
leave
ret
aaa
dec
dec
call
(bad)
rcr
inc
dec
test
adc
lds
aas
push
pop
in
mov
xchg
jmp
mov
xchg
or
xor
inc
inc
inc
jae
in
mov
data16
xchg
stc
pop
rep
dec
mov
pop
pop
mov
jle
push
in
test
and
mov
and
movs
mov
adc
mov
outs
mov
in
retf
add
dec
loope
push
movs
mov
adc
push
sahf
inc
and
jno
cmp
jg
mov
mov
mov
jecxz
call
les
add
add
xchg
cld
mov
inc
imul
es
mov
lods
ror
out
inc
cmp
aam
aad
pop
or
xchg
test
das
fild
(bad)
mov
shr
ins
or
add
clc
dec
mov
add
push
movs
cdq
jo
mov
inc
adc
in
addr16
jmp
push
mov
mov
lods
jg
cs
int3
dec
fsub
mov
or
sbb
outs
(bad)
dec
icebp
jmp
adc
hlt
push
sbb
mov
pop
imul
cmp
movs
mov
dec
mov
popf
or
jp
(bad)
sub
jne
xor
or
mov
test
into
inc
and
shl
or
and
mov
cmp
ret
xchg
or
sub
cmp
fwait
daa
data16
and
add
sti
mov
das
push
hlt
ss
outs
xchg
call
jg
(bad)
pop
popa
cmp
xchg
xor
sbb
mov
test
fiadd
jge
lods
int3
rol
add
hlt
cmps
daa
out
int3
int3
scas
retf
pop
dec
in
pop
enter
mov
leave
jns
aaa
mov
jp
pop
cmp
xchg
jnp
cld
mov
imul
push
clc
mov
or
pop
mov
out
movs
dec
cmp
xchg
(bad)
pop
cmp
jb
mov
sub
sti
jmp
ins
mov
mov
aam
out
mov
ins
repz
movs
repnz
icebp
fs
add
out
pop
dec
xchg
jb
in
pop
xor
out
cmp
push
iret
and
mov
mov
push
leave
adc
xor
jnp
push
test
xor
dec
cmps
fsubr
stos
lds
inc
test
xor
into
mov
xor
clc
pop
mov
outs
jge
loop
ror
or
xchg
mov
ret
jnp
js
mov
icebp
das
stos
jns
adc
pop
mov
and
jle
aam
out
pop
jmp
fiadd
mov
mov
or
pop
and
nop
xlat
outs
jg
push
lahf
iret
scas
xlat
cmp
test
mov
xlat
jl
or
call
mov
mov
stos
loop
mov
(bad)
in
retf
and
and
add
(bad)
dec
pushf
cmp
push
inc
dec
xchg
sub
sbb
fmul
imul
cmp
jmp
push
ss
dec
aam
imul
rcl
pop
push
dec
xor
xchg
movs
inc
mov
mov
adc
cli
call
and
ret
mov
xchg
repz
div
int
stc
adc
adc
leave
adc
jmp
xor
jb
jne
sub
jp
nop
sbb
jg
out
sahf
push
gs
adc
inc
adc
mov
test
sbb
xchg
sub
(bad)
nop
add
(bad)
movs
test
pop
jp
and
lods
rcr
shl
(bad)
hlt
cmps
mov
jl
push
pop
and
or
cmp
sub
fcomp
sub
mov
nop
in
inc
fst
and
cdq
jecxz
js
fldcw
sti
inc
popa
xor
cmps
xor
call
int
cdq
pop
jns
mov
ficom
cmps
test
mov
sub
outs
mov
adc
pop
lds
int3
hlt
xchg
pop
int
sbb
es
adc
jmp
and
jne
les
jg
push
repz
sub
ins
shr
inc
jno
push
dec
test
or
pop
mov
mov
cmc
cmp
cmp
(bad)
fild
sahf
(bad)
push
mov
inc
leave
xor
ins
sbb
sbb
out
cmp
cmp
fist
push
pop
xlat
adc
inc
add
imul
add
ins
in
cld
(bad)
stc
xor
test
mov
(bad)
sub
mov
jge
push
hlt
fistp
push
mov
push
adc
sti
bswap
gs
adc
out
jle
int3
test
or
out
stc
pop
xchg
movs
cmp
xchg
jmp
jle
int
jmp
xchg
mov
mov
loope
cld
jecxz
push
or
loop
aad
sti
dec
jns
dec
scas
sub
fld
push
mov
xchg
addr16
inc
sahf
jbe
sbb
jno
cwde
jecxz
nop
sti
mov
lds
sub
stc
dec
pusha
xor
jno
shl
sub
repnz
daa
shl
addr16
pop
sbb
mov
ins
jl
push
jbe
dec
xor
mov
aam
sbb
sbb
cmps
pusha
jbe
mov
fst
cmp
xchg
and
push
push
(bad)
mov
xchg
idiv
std
int
test
push
lods
mov
or
sbb
xchg
mov
and
push
push
pop
dec
sbb
in
dec
rol
or
cli
adc
test
xor
shr
xchg
shl
data16
lods
cdq
jecxz
jb
cmp
xor
mov
test
mov
add
cmp
and
fwait
inc
shl
iret
lds
push
sub
push
repz
adc
mov
cmps
cmp
mov
push
shl
inc
push
or
out
movs
loopne
push
aam
test
dec
inc
inc
add
imul
data16
sub
jp
cmps
xor
into
sub
push
mov
enter
adc
sbb
dec
dec
jo
repz
call
imul
add
sbb
adc
les
adc
ins
(bad)
mov
int3
stos
adc
call
ja
mov
out
sti
mov
add
ins
hlt
jnp
cdq
sbb
addr16
jb
jp
add
mov
mov
cld
out
and
in
mov
sbb
xchg
pop
pop
sbb
inc
ins
retf
mov
pop
iretw
in
mov
out
inc
popf
adc
adc
xchg
repz
scas
add
xchg
lods
loope
fadd
add
les
fwait
push
std
add
or
mov
cmp
repnz
pop
jmp
xchg
cli
loop
mov
(bad)
push
push
xchg
loope
sub
fiadd
dec
and
sbb
lahf
xchg
and
xchg
(bad)
mul
out
jb
rcr
pop
rol
aad
addr16
bound
in
imul
(bad)
retf
daa
add
std
test
out
adc
jl
aas
mov
sub
jecxz
mov
dec
pop
in
sub
fmul
and
push
cld
aam
push
movs
jmp
jno
jbe
jbe
pushf
shr
xor
xchg
loope
fcomp
enter
or
xor
push
shl
sbb
int3
xchg
or
jne
sbb
sub
jmp
mov
xchg
leave
sub
imul
gs
inc
mov
dec
sub
push
inc
fs
jae
mov
mov
(bad)
mov
sbb
int
jg
xchg
cmove
mov
popf
iret
xor
retf
push
aam
sub
fld
test
mov
xchg
xchg
int3
mov
scas
add
add
mov
in
pop
fild
test
pop
(bad)
inc
push
add
icebp
nop
pop
aad
jmp
sahf
ss
push
jae
fwait
dec
scas
sbb
movs
dec
xchg
out
retf
adc
xor
pop
or
sub
(bad)
out
pop
movs
in
mov
add
outs
out
sub
push
and
mov
pop
add
lea
sbb
lods
mov
jle
test
mov
and
xchg
jmp
pop
mov
add
push
pop
frstor
sbb
push
inc
aaa
mov
jg
shr
xlat
mov
out
jl
mov
sbb
push
adc
test
cmps
fwait
test
fild
idiv
xlat
leave
and
bound
popa
pop
lea
push
add
js
scas
adc
or
pusha
cmp
(bad)
fldenv
add
test
in
pop
fs
clc
(bad)
jle
ins
sub
scas
xor
cmp
leave
pop
imul
lds
ds
pop
jns
adc
daa
push
push
fnstsw
iret
dec
push
shl
inc
jge
rol
push
scas
outs
pop
lds
clc
dec
xchg
data16
fdiv
int3
mov
dec
dec
test
(bad)
xchg
outs
enter
cs
ss
or
pusha
loop
daa
jg
adc
je
js
cld
in
xchg
jecxz
lods
dec
fs
lahf
xor
pop
sahf
xchg
inc
xchg
mov
sbb
push
mov
mov
adc
mov
ds
(bad)
js
lods
cli
loopne
push
fwait
inc
iret
sub
dec
dec
retf
imul
dec
mov
cld
inc
(bad)
int
sahf
aas
inc
adc
xchg
gs
stos
ror
and
stos
add
ins
sbb
aas
loope
mov
mov
xlat
enter
aas
pop
sbb
call
test
in
jg
ins
fisttp
lock
push
fidiv
scas
mov
sbb
sbb
adc
in
pop
or
sar
mov
mov
daa
xchg
jecxz
scas
jnp
cs
lods
dec
add
js
jnp
mov
mov
cmp
pop
mov
inc
mov
cmc
cmp
out
jb
fwait
mov
and
push
adc
imul
retf
adc
mov
jno
ja
mov
and
xchg
into
loop
ins
cmp
popa
jmp
pop
psubb
push
xchg
xchg
inc
sub
fldenv
aas
out
shl
push
aaa
push
aaa
jmp
dec
pop
jle
out
mov
inc
mov
mov
xor
hlt
inc
jg
push
mov
cwde
inc
add
std
push
arpl
cmps
mov
jno
dec
in
outs
dec
lahf
(bad)
ins
out
push
sti
pandn
mov
std
pushf
dec
fsub
jb
xchg
(bad)
loop
sbb
lods
es
gs
pushf
mov
and
cs
cwde
and
jb
rcr
push
and
out
push
xor
push
xchg
add
mov
sub
mov
fnsave
in
mov
xor
sbb
ins
pop
int3
mov
dec
mov
adc
mov
pop
sbb
aaa
cmp
call
add
sbb
aad
aaa
retf
ror
(bad)
sub
xlat
xor
hlt
into
inc
int3
ficomp
aam
cmp
adc
je
scas
jne
mov
je
hlt
adc
sbb
push
push
(bad)
scas
daa
arpl
dec
jge
mov
add
pop
lea
ds
mov
int3
ret
xor
sbb
pop
push
push
add
add
out
movs
mov
pop
pop
sar
dec
cmp
ror
fld
jne
fiadd
and
(bad)
pop
dec
(bad)
mov
call
adc
shl
jg
test
idiv
ins
jmp
mov
arpl
push
mov
mov
outs
psubq
cld
jle
movs
sar
mov
push
and
stos
sub
mov
call
test
sbb
leave
(bad)
sub
lds
enter
fistp
cli
in
pop
stc
cmp
inc
sub
fld
pop
retf
adc
addr16
or
mov
mov
fidiv
push
xchg
sbb
jns
jle
js
fidiv
arpl
inc
cmp
retf
or
test
mov
adc
sbb
and
dec
test
xor
ins
push
pop
shl
outs
je
dec
int
mov
and
or
and
in
sub
cmps
cmps
pop
mov
mov
pusha
call
imul
push
inc
add
inc
pusha
lods
or
mov
fcmovbe
jo
cmp
cs
push
push
inc
or
mov
sub
add
jns
add
(bad)
dec
jmp
pop
sbb
lods
mov
enter
and
into
aaa
adc
jmp
loopne
outs
jae
hlt
inc
rcl
push
or
cmc
sahf
cmp
jmp
mov
jmp
jns
sub
cmp
or
loop
inc
mov
gs
cmp
pop
fwait
pop
(bad)
int
sub
mov
(bad)
iret
dec
jmp
or
xchg
adc
mov
js
ja
push
push
in
(bad)
mov
ins
add
pop
in
es
xchg
add
xchg
pop
sbb
fdivr
push
rcl
popf
xor
dec
ret
dec
dec
or
xlat
std
push
movs
mov
jge
push
(bad)
pop
pop
dec
add
jns
arpl
fbstp
xchg
cmc
iret
std
fwait
pop
mov
scas
push
push
sub
das
ret
xchg
repz
repz
push
jecxz
ds
ss
or
push
mov
std
and
mov
push
fs
in
movs
push
inc
dec
dec
mov
mov
cmp
in
mov
xor
aad
mov
or
mov
lods
enter
retf
cs
push
jmp
push
popa
inc
clc
dec
add
mov
inc
out
xor
je
test
jbe
loope
ret
mov
iret
idiv
lock
inc
lea
arpl
int3
loope
adc
fadd
xor
or
imul
dec
mov
arpl
xlat
add
frstor
dec
stos
in
call
call
dec
or
iret
add
ficomp
push
inc
adc
lahf
jne
xchg
add
arpl
fwait
inc
fcmovnu
(bad)
mov
mov
call
or
sub
pop
shl
cmp
enter
fsub
sbb
out
scas
scas
add
jmp
jge
stos
mov
mov
xlat
ds
push
adc
in
inc
jne
cmps
mov
xchg
jp
cs
mov
adc
jmp
inc
fadd
add
sbb
dec
das
lea
daa
jno
cmc
retf
jne
pop
pop
out
fidiv
movs
fstp
mov
xchg
scas
add
pop
cli
repnz
mov
mov
mov
inc
fst
xchg
mov
aaa
mov
(bad)
sbb
xchg
xor
mov
dec
rol
aad
in
loope
jecxz
retf
ret
cmps
in
dec
stos
lahf
int
or
xchg
pop
add
cli
and
cmp
dec
cmps
nop
cld
cli
add
jmp
mov
and
pop
mov
enter
push
cmps
mov
inc
push
sub
lds
sbb
fdivr
or
push
scas
sbb
xor
out
imul
sti
aaa
movs
dec
js
xlat
or
add
leave
call
mov
loopne
jb
(bad)
sub
dec
push
(bad)
xlat
mov
and
sti
arpl
popf
sub
mov
(bad)
push
movs
inc
xor
rcl
jge
jle
(bad)
sbb
xchg
pop
add
add
test
sahf
dec
jmp
bound
or
and
and
scas
inc
out
daa
mov
sub
add
sbb
mov
pop
je
dec
sbb
sbb
aam
popa
gs
sbb
push
aad
inc
cmp
dec
mov
popa
or
push
sub
ds
xchg
mov
jnp
xchg
xor
in
sub
lods
gs
retf
fs
jp
mov
inc
retf
ja
or
int
push
mov
arpl
mov
fucom
cld
pop
and
pop
cli
sti
rol
fistp
int3
inc
loopne
add
pop
out
inc
pop
inc
cmp
mov
add
sub
add
(bad)
sub
div
dec
jo
mov
cdq
jecxz
pop
imul
ficomp
call
dec
lods
cmp
ror
adc
popf
xor
sub
xlat
jb
push
lods
lods
jno
stos
or
rcl
inc
mov
scas
lock
xor
nop
adc
dec
jno
leave
out
loope
push
(bad)
mov
cmp
and
fwait
iret
jnp
cmp
add
test
sbb
mov
fisttp
xchg
pop
adc
push
push
pop
shl
inc
(bad)
dec
test
xchg
jp
aad
out
stos
ds
adc
mov
fsubr
sahf
(bad)
adc
adc
popa
push
loope
adc
inc
jg
dec
retf
mov
push
shl
add
sahf
or
sbb
sbb
push
sar
shl
jae
or
adc
fmul
fnstenv
dec
cmp
adc
out
mov
repnz
lods
jb
mov
and
mov
wbinvd
add
inc
sub
or
xchg
xchg
mov
repnz
adc
pop
push
outs
and
jmp
cmp
sbb
iret
outs
mov
inc
lea
inc
jns
les
dec
adc
xor
retf
stos
fwait
std
adc
popf
jle
(bad)
js
cdq
stos
into
or
shl
mul
adc
jl
cmp
es
lods
sbb
mov
or
call
mov
test
push
aas
hlt
push
xchg
fmul
ret
push
cmp
stos
cmp
mov
jnp
movs
inc
cmc
sub
add
in
es
out
xor
dec
(bad)
ja
jne
int3
mov
cmp
hlt
(bad)
cmp
stos
mov
js
push
pop
add
call
mov
std
cdq
cmp
jmp
lds
cmc
mov
sub
stc
into
sti
call
cmps
xchg
mov
mov
or
push
pusha
inc
add
add
inc
repz
pop
sti
aam
mov
mov
xchg
fild
retf
mov
inc
inc
stc
inc
xchg
rol
add
pusha
adc
shl
cmp
jmp
or
mov
cmps
or
movs
cs
inc
mov
inc
push
or
addr16
jmp
dec
fimul
rcl
outs
xchg
test
inc
sbb
hlt
jle
xchg
xchg
mov
mov
mov
sbb
stos
hlt
push
xor
xor
adc
dec
and
imul
jno
clc
cmp
sub
cdq
inc
sbb
inc
and
ds
je
inc
mov
and
push
test
sub
enter
sti
xchg
scas
leave
dec
dec
repnz
enter
fild
pop
mov
fstp
fiadd
stos
pushf
push
mov
pop
ror
cmp
mov
cmps
fwait
cmp
in
sahf
pop
inc
aas
cmps
(bad)
fdiv
mov
sar
inc
sbb
sbb
xchg
sbb
adc
dec
lods
jmp
pop
loopne
addr16
popa
ins
ins
int
mov
xchg
pop
or
and
jmp
adc
sbb
pop
movs
mov
cmp
mov
or
adc
mov
sbb
sub
add
and
mov
in
movs
fs
inc
or
pop
mov
dec
pop
scas
jns
icebp
fimul
enter
xor
mov
cwde
es
mov
push
mov
xchg
push
mov
jno
xchg
inc
cmps
sub
lods
xchg
mov
cmc
xchg
retf
out
mov
daa
inc
in
iret
setno
das
or
es
xor
xchg
outs
mov
movs
xor
in
fsubr
div
lods
push
xchg
mov
retf
ret
cmp
data16
std
push
je
js
dec
adc
iret
xor
(bad)
rol
int
push
inc
loopne
repz
pop
xchg
pop
into
dec
mov
ret
js
or
mov
add
popa
jecxz
mov
xor
xchg
sbb
ins
fmul
retf
data16
mov
push
outs
xchg
mov
inc
cmp
int
and
xor
mov
imul
dec
sub
mov
inc
call
scas
clc
mov
xor
in
ret
and
or
add
shr
data16
xchg
movs
mov
inc
xchg
data16
adc
stc
push
jp
ins
fbstp
ss
pop
jae
(bad)
retf
popa
add
arpl
dec
mov
push
das
add
lods
das
jae
and
jmp
dec
dec
in
popa
push
movs
aam
mov
jmp
es
sahf
push
ror
and
mov
cmps
xchg
sub
js
fwait
imul
or
div
xchg
add
js
push
push
inc
repz
sbb
push
dec
xchg
cmp
aaa
ins
aam
xchg
es
nop
push
jo
sbb
inc
outs
xchg
xlat
(bad)
(bad)
mov
push
test
(bad)
jns
or
in
arpl
push
and
daa
mov
mul
add
adc
mov
push
outs
nop
fmul
pop
mov
jb
push
daa
sub
imul
fcmovu
mov
jle
mov
pop
fs
icebp
inc
pusha
ins
ins
add
xor
mov
lods
xchg
lds
push
jle
lahf
icebp
loope
mov
push
imul
cwde
cmps
push
rcl
pop
test
imul
in
mov
jne
sbb
out
jae
pusha
sub
mov
mov
cmc
scas
jmp
cmp
(bad)
mov
mov
inc
loopne
inc
and
sub
jge
pop
adc
das
or
jae
sbb
xchg
jno
or
scas
out
mov
mov
mov
fisub
je
or
mov
cmp
inc
jne
enter
pop
fsubr
xchg
sbb
and
xchg
or
xor
xchg
push
jle
setp
dec
jns
mov
and
imul
popa
sahf
xchg
and
mov
(bad)
and
mov
mov
dec
mov
clc
lock
push
sub
push
rcl
xchg
jp
lock
jge
pop
sbb
jae
mov
xor
sub
add
ins
mov
adc
pop
push
pop
pop
pop
mov
ret
jno
shr
pop
xor
mov
div
pop
outs
cmps
fist
adc
inc
xchg
outs
repz
ins
aad
pop
out
lock
ret
dec
shl
pop
test
pop
popf
daa
sub
imul
push
shl
scas
jl
adc
inc
das
dec
mov
add
xchg
xchg
push
(bad)
sub
outs
jle
and
xor
sub
inc
push
jae
jns
ja
sbb
loopne
sbb
dec
sbb
xchg
add
pop
sbb
sar
popa
test
hlt
add
ss
movs
sbb
std
or
xchg
rcr
xchg
(bad)
loopne
pop
aas
dec
cmps
mov
clc
sbb
xor
scas
fimul
push
enter
mov
cmp
iret
enter
fwait
(bad)
arpl
xchg
fst
pop
into
lods
pusha
lock
je
sti
fadd
adc
push
test
retf
add
and
inc
imul
ficom
and
cmc
add
jne
ror
test
shl
mov
(bad)
shr
jo
inc
test
retf
cs
add
jnp
sub
push
add
pop
xchg
enter
stc
ss
inc
icebp
repnz
jg
stos
test
rcl
cwde
das
ds
sahf
(bad)
outs
aas
push
stc
dec
pop
fnsave
test
iret
sub
loopne
dec
xchg
pop
mov
or
xor
(bad)
xor
jo
push
adc
or
jae
add
sbb
aad
dec
jae
call
jb
push
ss
cmp
fcomp
or
movs
js
push
push
fucom
mov
or
imul
ds
add
arpl
ds
adc
dec
push
movs
mov
(bad)
dec
icebp
jmp
sar
(bad)
shl
repz
daa
out
hlt
hlt
stc
add
jmp
xchg
or
jmp
or
jp
enter
(bad)
retf
sub
xlat
cli
adc
xor
lock
sbb
xor
lods
push
add
mov
test
mov
movhps
aam
jl
sub
test
mov
hlt
xor
shr
retf
adc
cmps
mov
jo
imul
repz
push
daa
stos
in
pop
mov
xor
shr
mov
mov
fs
adc
mov
aaa
jo
or
xchg
je
mov
(bad)
leave
ds
les
sar
js
jg
and
xor
cli
mov
(bad)
sbb
(bad)
push
cmp
das
std
sbb
aam
jge
(bad)
jmp
inc
pop
add
int
and
cld
add
hlt
mov
fsub
out
pop
and
test
retf
test
sbb
cmp
push
jns
dec
lahf
mov
push
dec
ja
sbb
mov
add
sub
sar
xchg
dec
jmp
pop
fimul
jmp
fsubr
cli
and
(bad)
fmul
cmp
test
pop
jp
push
into
das
aam
ror
sub
out
aaa
cdq
ret
push
jp
stos
call
jbe
pop
xor
stos
in
fdivr
movs
scas
icebp
jns
leave
std
and
mov
mov
mov
xchg
push
inc
das
ins
daa
cmps
inc
hlt
mov
jle
retf
xchg
push
dec
dec
ja
out
mov
adc
(bad)
sti
sbb
jmp
pop
mov
jecxz
dec
mov
mov
ins
scas
or
pop
push
popf
sub
or
jns
jecxz
cmp
stos
mov
movs
xor
adc
cld
lods
aad
into
clc
rcl
jne
sbb
ficom
dec
stc
add
dec
pop
pusha
mov
and
(bad)
jbe
inc
dec
out
mov
jae
or
aad
pop
push
nop
int3
sbb
add
mov
ret
cmc
dec
sub
sub
pushf
inc
mov
push
adc
cmp
repnz
inc
sub
dec
jns
and
sahf
mov
cmp
adc
and
pop
test
sbb
into
or
ins
rol
mov
jno
call
xor
mov
jb
test
retf
push
fcom
jmp
mov
je
mov
add
push
or
pop
sub
cmp
add
jo
pop
out
push
imul
pop
je
enter
data16
in
or
not
or
ds
mov
stos
push
bound
icebp
sbb
jno
xchg
icebp
push
(bad)
(bad)
xor
and
adc
jmp
xor
int3
or
mov
dec
pusha
js
(bad)
outs
adc
add
loopne
xchg
mov
xchg
popa
xchg
fst
(bad)
jmp
adc
mov
push
bound
aaa
cld
or
add
sbb
mov
daa
sahf
hlt
mov
jmp
push
add
cmp
sub
mov
adc
test
pop
jl
popf
add
jmp
mov
std
add
cwde
or
aas
lods
xor
cmp
cmp
int
cmps
inc
cmp
dec
push
fisubr
xor
frstor
(bad)
int
hlt
lods
cmp
or
cmps
and
scas
xlat
or
movs
mov
xchg
inc
ficom
inc
push
popa
mov
xchg
test
inc
iret
call
aad
arpl
dec
loope
push
inc
mov
mov
rcr
pop
mov
popa
lds
pop
cli
and
test
rcr
sbb
ret
popa
xor
in
mov
enter
inc
cmp
out
mov
mov
retf
add
mov
pop
mov
pop
inc
ret
add
test
stos
les
mov
sbb
xchg
inc
int
cmp
fadd
push
pop
or
pop
outs
xor
push
mov
sub
mov
out
xchg
fs
or
mov
inc
(bad)
sbb
lds
fsub
xor
loop
and
and
jb
sbb
aam
inc
in
test
add
inc
jle
mov
push
pop
sti
pop
xor
lahf
push
loope
cdq
sbb
cs
xlat
out
(bad)
in
pop
add
mov
ret
mov
js
sub
outs
pop
lea
cmp
cmps
sbb
mov
xchg
push
dec
mov
add
stos
mov
loopne
stos
xor
sub
(bad)
(bad)
cmp
and
cmp
pop
sub
daa
and
sbb
cwde
sub
in
jnp
cmp
int3
pushf
mov
cmp
aas
cmp
mov
pop
gs
sbb
shr
cld
inc
fwait
aas
sbb
and
lahf
sbb
cmp
data16
movs
cdq
sbb
adc
dec
fdivp
push
rcl
xor
mov
pop
ficomp
mov
sub
add
pop
jns
ins
sbb
pop
stos
mov
and
stos
mov
mov
sbb
test
jmp
outs
mov
leave
jp
stos
mov
call
aaa
(bad)
addr16
dec
inc
cmp
sbb
pop
pop
(bad)
data16
jmp
mov
aas
pop
repnz
loopne
lods
mov
fs
cmp
mov
mov
sbb
add
lahf
dec
call
cmp
cli
adc
cmp
cmp
leave
jnp
jnp
cwde
sub
aad
jae
mov
or
inc
les
cwde
and
xor
mov
nop
cmp
jbe
(bad)
aad
or
jo
jp
inc
mov
mov
outs
repz
mov
pop
fadd
test
jp
cmc
hlt
fist
mov
mov
leavew
lods
mov
add
shl
ja
push
adc
hlt
stc
jmp
lds
inc
ret
iret
inc
jg
xor
mov
cmps
add
jg
inc
cmps
jno
push
(bad)
call
or
scas
and
(bad)
call
bnd
frstor
xchg
push
jne
xchg
push
mov
inc
je
and
nop
push
cld
add
mov
dec
cmp
daa
lahf
pop
mov
push
daa
jns
mov
mov
pop
mov
sbb
(bad)
ds
ficomp
xchg
clc
ins
mov
in
push
ins
ret
mov
push
shr
sti
int
icebp
and
out
icebp
mov
pop
test
xor
mov
dec
pop
fisub
push
push
push
imul
clc
add
xor
xchg
inc
fisttp
inc
xor
xchg
jbe
jno
test
xlat
ret
mov
aas
or
jmp
call
ins
xchg
sub
push
int
repnz
sbb
add
xchg
lea
sbb
gs
inc
iret
iret
mov
mov
jb
mov
hlt
sbb
mov
push
leave
add
mov
pop
loop
lea
mov
jmp
loope
jmp
inc
sub
inc
cmps
xor
inc
lock
or
cli
inc
xchg
test
jge
xor
pop
dec
mov
ds
adc
es
mov
jo
sahf
retf
adc
and
inc
repz
sbb
cmc
pop
mov
neg
inc
js
adc
iret
jl
sbb
cmp
dec
xlat
out
xchg
push
and
je
jb
lods
xor
adc
mov
das
dec
add
movs
lock
sbb
in
scas
and
and
(bad)
jns
sbb
inc
cwde
cdq
mov
pusha
mov
inc
xor
dec
adc
mov
repz
jmp
cmps
(bad)
and
sti
repz
jns
dec
xchg
pop
imul
f2xm1
enter
jmp
cld
xor
lds
fistp
and
clc
jbe
inc
or
jne
jmp
stc
loopne
jle
movs
cmc
jmp
sub
repz
mov
test
pop
pop
outs
mov
inc
daa
xchg
jne
dec
loop
push
inc
cmp
shl
add
ror
mov
rcl
inc
hlt
mov
in
mov
les
dec
mov
adc
and
aaa
push
jmp
jmp
push
in
cmp
pusha
ja
sbb
adc
pop
cmp
out
sbb
int
fistp
adc
add
ins
or
mov
jo
outs
fild
fadd
xchg
mov
cwde
xlat
adc
dec
cmp
ins
lock
mov
cmp
lock
inc
das
mov
fs
aam
enter
sub
sub
pop
ds
mov
jae
movs
jne
sar
bnd
sub
sbb
cld
jb
imul
mov
mov
dec
iret
repnz
stos
and
push
ins
push
pop
into
hlt
scas
xchg
loope
sbb
(bad)
pop
mov
push
mov
pushf
dec
jmp
adc
adc
jle
dec
xchg
test
xchg
sar
mov
pop
ja
aas
mov
xor
xor
movs
xor
xlat
mov
xchg
test
mov
push
jb
mov
cs
xchg
cmp
inc
jb
addr16
mov
sub
mov
aas
adc
push
into
aad
push
lahf
loop
(bad)
xchg
repnz
sbb
sub
arpl
pop
push
sar
pop
xor
or
or
pop
shl
shl
stos
push
repz
int3
icebp
sti
sub
bnd
sbb
loop
je
sub
pop
and
inc
gs
push
cld
adc
icebp
jmp
icebp
sbb
call
xor
sar
cmc
inc
das
mov
inc
cmp
push
jl
jno
shl
je
aad
(bad)
aam
pop
jae
das
xchg
add
loopne
inc
popf
xor
xchg
lds
fiadd
out
pop
or
jns
dec
jmp
aam
inc
cmp
cmc
push
mov
inc
test
or
imul
cmp
outs
pushf
out
xchg
sbb
leave
fsubr
in
sbb
push
jno
or
or
cmp
xor
xchg
jns
cmc
ror
xor
push
shl
mov
and
in
into
sbb
mov
ret
xchg
xchg
test
jge
gs
pop
cli
adc
in
pop
mov
add
nop
daa
xchg
lock
clc
add
shl
push
fidivr
mov
je
into
mov
mov
xchg
stos
sub
pop
popf
xchg
mov
in
add
xchg
lea
je
in
push
frstor
rcr
popf
ins
adc
leave
mov
lds
(bad)
loopne
mov
test
mov
jb
out
out
sub
adc
cmps
sub
sahf
push
(bad)
gs
nop
lea
sbb
xchg
popa
cmc
or
lods
push
and
dec
loopne
inc
nop
xor
test
sub
retf
cmp
mov
jno
shr
adc
stos
jge
lds
ja
pop
ja
(bad)
data16
fldcw
mov
mov
xchg
sbb
jmp
mov
jmp
shl
rcr
jno
cmp
or
pusha
mov
jle
inc
inc
mov
mov
dec
dec
and
ficomp
sub
pusha
int
xor
les
cs
fwait
lahf
into
dec
out
or
mov
ret
mov
lea
push
or
adc
push
stos
push
xchg
inc
cli
xchg
test
popa
aas
pop
test
and
sar
or
mov
out
pop
mov
rcl
adc
pusha
out
aad
cmps
mov
jbe
cwde
mov
shl
sahf
dec
push
jo
add
scas
(bad)
jle
push
ins
or
dec
inc
cmp
xor
sbb
pop
xchg
out
push
mov
fild
stos
push
and
xor
call
or
bound
ins
mov
mov
bound
scas
xor
and
dec
test
push
xchg
sbb
mov
loopne
mov
adc
mov
or
and
fisttp
mov
and
std
jo
pop
sbb
xchg
jo
iret
popa
aaa
dec
fdivr
inc
jge
std
add
popf
cmp
xchg
and
mov
aad
dec
pop
xchg
fisttp
cmp
loope
dec
cmp
cmps
xor
and
xchg
in
and
sub
popf
outs
inc
mov
add
retf
sbb
pop
push
arpl
push
add
es
retf
imul
cmp
mov
mov
aas
adc
in
loop
test
ret
scas
sub
int3
xor
push
or
mov
ja
mov
in
dec
inc
xchg
jl
pop
sub
fwait
cmp
arpl
ins
sbb
dec
xor
aaa
pop
pop
mov
dec
rcr
inc
loope
push
dec
inc
adc
sbb
mov
or
xchg
push
push
dec
push
mov
out
and
mov
adc
jnp
jle
pusha
or
(bad)
pop
cmp
cmp
loop
cmp
sar
mov
adc
or
daa
mov
mov
int
pop
cmp
lods
addr16
cmp
aas
sbb
popa
in
push
fwait
cmp
in
mov
test
and
xchg
pusha
adc
ret
pop
daa
sub
push
xchg
outs
repz
xor
xchg
mov
xchg
enter
(bad)
pop
push
es
fs
adc
mov
rcr
push
das
sub
xchg
test
jno
xor
gs
or
jo
and
nop
lds
je
mov
push
shr
(bad)
fisubr
jp
jp
nop
fisubr
lods
jg
push
popa
xchg
lea
sbb
(bad)
jmp
mov
adc
or
cmp
dec
sub
jns
mov
mov
cmps
pushf
aam
test
cmp
mov
xor
xchg
mov
jno
mov
push
push
movs
cwde
arpl
into
rcr
lods
sahf
data16
pop
ficomp
push
loope
out
dec
adc
sbb
gs
out
xchg
pop
inc
mov
mov
js
push
sub
add
bound
mov
cmp
cmp
addr16
iret
fstp
out
enter
mov
movs
mov
in
retf
push
aaa
mov
ins
fsub
sti
cmps
aad
retf
in
lds
pop
cmp
mov
and
mov
mov
pop
pop
retf
sbb
push
sti
jae
ins
mov
jbe
mov
hlt
and
lods
cmc
in
lock
test
mov
jl
inc
pop
into
dec
aas
mov
pop
and
icebp
mov
bound
dec
ins
xor
xlat
sub
sbb
dec
sete
xor
xor
mov
and
mov
(bad)
cdq
and
xchg
into
je
inc
pop
cmp
in
pop
pop
pushf
cmp
cli
cmps
mov
xchg
retf
shl
xor
lods
fsub
out
mov
or
in
mov
sbb
stos
test
push
xor
mov
jmp
in
cmps
ret
stos
push
and
sbb
fadd
add
xor
hlt
mov
daa
mov
repnz
dec
in
sub
dec
cmp
not
cmp
int
adc
pop
imul
xchg
mov
ret
inc
inc
sbb
call
pop
fwait
sub
adc
xor
inc
imul
or
sbb
push
xor
pop
cmp
xchg
or
aas
push
xchg
ror
xor
cwde
pushf
jg
and
adc
in
mov
in
adc
jns
dec
xchg
popa
mov
adc
sub
push
push
mov
jno
adc
mov
sub
xchg
dec
je
xor
push
mov
mov
push
inc
scas
cmp
mov
pop
aaa
leave
mov
fidivr
mov
mov
push
mov
sbb
pop
mov
ret
lods
lods
add
clc
xor
ffreep
and
push
xor
ins
pop
mov
fwait
aam
cmp
fst
mov
cli
pop
enter
(bad)
pop
jle
cmps
sbb
cdq
lea
lods
mov
mov
xlat
add
ja
jmp
and
jae
jns
inc
and
pusha
inc
scas
cs
sar
fwait
mov
imul
ins
add
dec
cmp
js
stc
dec
mov
jbe
or
jmp
lock
data16
repnz
daa
dec
scas
mov
or
cdq
pushf
call
mov
out
mov
push
rcr
and
xchg
mov
sub
test
ret
mov
cmp
push
mov
out
enter
mov
push
lock
cli
cmp
mov
mov
mov
test
and
inc
push
je
add
and
out
add
pop
mov
sbb
cmp
ret
or
test
cmp
fmul
cmp
push
call
and
add
mov
pusha
das
jmp
jge
fucom
stos
js
mov
in
push
(bad)
stos
rcl
sub
daa
mov
push
arpl
sbb
mov
retf
xchg
mov
mov
jb
push
inc
push
pop
mov
arpl
push
outs
pop
jle
nop
mov
dec
xchg
ins
or
repz
iret
or
cmps
dec
mov
sbb
mov
xor
fist
push
gs
push
hlt
cmp
add
cmp
lods
aad
mov
mov
sbb
pop
mov
cwde
cmp
imul
fwait
mov
sbb
inc
aas
ss
dec
ins
inc
(bad)
stc
ret
xchg
mov
iret
add
pushf
xchg
ret
scas
pushf
push
shl
jne
repz
xchg
push
xor
jle
push
out
aas
dec
ins
jl
cmps
push
aad
in
push
pop
or
fcmovnbe
inc
jb
mov
push
adc
arpl
and
test
pusha
xchg
test
lahf
(bad)
shl
out
jbe
sub
shl
sbb
stos
jle
out
sti
adc
cwde
cmps
adc
(bad)
xchg
inc
into
shr
cmc
pop
jns
das
into
fs
fild
sub
mov
movs
and
sub
ja
push
jle
jae
inc
outs
repnz
pushf
(bad)
stc
add
scas
ret
dec
sbb
lock
mov
cmp
das
fldcw
into
out
xchg
jg
inc
mov
idiv
cdq
into
dec
ret
sbb
jne
jmp
xchg
adc
xchg
jb
in
push
push
sbb
xchg
test
dec
xchg
mov
mov
pop
mov
inc
jp
mov
jno
adc
imul
repnz
or
or
enter
inc
int
movs
std
popa
xchg
jecxz
mov
jmp
ret
jecxz
jbe
sbb
ins
adc
je
xchg
daa
in
popa
sub
inc
sbb
imul
mov
cs
xchg
and
adc
jg
xchg
pusha
push
xchg
or
ror
outs
and
addr16
(bad)
or
xchg
loope
popf
add
add
mov
cmp
int
shr
test
dec
mov
add
out
ficom
adc
aas
icebp
add
bound
sub
cmp
jne
ins
data16
adc
cmp
(bad)
adc
arpl
xchg
loope
sbb
add
test
loopne
push
aam
imul
mov
cmp
xor
test
int
dec
jmp
icebp
aas
sub
sti
call
cmc
into
inc
jbe
test
or
cmps
(bad)
ja
inc
cmp
push
into
mov
pop
in
jo
stos
xchg
bound
mov
inc
pop
mov
jbe
out
mov
js
pop
sbb
add
rol
adc
jae
sub
pusha
push
mov
mov
cmp
(bad)
fisttp
adc
jns
ins
sti
dec
fstp
adc
sbb
fmulp
inc
loop
mov
cmp
scas
cld
pop
imul
fadd
in
rcr
data16
lock
fsubr
sub
add
pushf
mov
divps
das
loopne
mov
adc
out
push
cs
mov
scas
ins
out
pop
xchg
out
mov
pop
mov
mov
(bad)
retf
jmp
fstp
jl
inc
test
and
shl
hlt
jbe
in
fld
retf
or
(bad)
jmp
stos
call
iret
xor
pop
pop
es
cdq
push
sbb
mov
bnd
outs
adc
xchg
inc
fsubrp
cmp
add
in
lods
push
jg
shl
xchg
icebp
test
cmp
jno
push
push
fs
ja
or
shl
xchg
iret
(bad)
xor
(bad)
arpl
mov
clc
lock
ret
jge
jbe
jns
ins
xchg
push
jne
daa
fadd
xchg
xchg
adc
out
xchg
aas
test
cwde
jo
sbb
cmp
push
(bad)
pop
cwde
mov
ror
jmp
jecxz
shrd
ins
rcl
push
es
cdq
(bad)
cli
cwde
cmp
test
scas
ret
xchg
jae
call
sub
loopne
add
(bad)
cmp
and
(bad)
mov
xor
xchg
aam
out
inc
daa
push
cmp
mov
ins
or
lods
inc
or
and
pop
lock
mov
pusha
inc
inc
mov
mov
dec
fistp
mov
jg
or
push
inc
add
adc
lock
loop
adc
mov
push
mov
pop
or
in
jge
(bad)
sbb
cmc
aaa
xchg
cs
inc
arpl
jns
hlt
into
cmp
fnclex
jb
push
pop
movs
adc
mov
xor
lods
push
pop
push
cli
pop
cmp
cld
not
shr
in
sbb
mov
cmp
mov
icebp
paddsb
xchg
inc
mov
fisub
sub
js
lock
adc
in
bound
rcl
xor
xchg
frstor
or
test
test
xchg
cmc
jo
ror
js
inc
test
cmp
inc
arpl
xchg
hlt
cmp
cmp
dec
icebp
cli
retf
mov
shl
data16
xor
xor
cli
mov
(bad)
js
adc
adc
inc
mov
fnsave
pop
(bad)
scas
in
(bad)
fdiv
or
arpl
ds
xchg
rcr
inc
ret
dec
xchg
imul
pop
loope
adc
add
push
in
pop
dec
jg
imul
fwait
loopne
outs
(bad)
jp
repnz
jae
push
loop
mov
les
sbb
into
dec
inc
adc
inc
cld
fbld
imul
add
push
jae
add
ret
add
repz
int
or
jg
pop
ja
scas
pop
in
xchg
movs
(bad)
push
loop
add
aad
or
xchg
pop
and
movs
arpl
nop
xchg
test
add
mov
test
mov
inc
push
jmp
fadd
xchg
xor
sbb
mov
mov
shl
popa
inc
jmp
dec
shl
add
out
jns
(bad)
cmp
mov
inc
jae
aas
movs
xchg
int
jns
mov
add
cmp
sbb
btc
(bad)
aaa
shr
icebp
cld
xlat
mov
pop
xchg
in
iret
in
mov
rol
ror
(bad)
inc
inc
pop
lea
mov
loopne
dec
cmp
std
add
add
ins
adc
nop
fsubr
(bad)
push
fcmovu
repnz
gs
test
fidivr
lea
imul
and
shl
out
out
sbb
or
pop
pushf
hlt
add
leave
mov
leave
cmps
pushf
adc
imul
rcl
cdq
jbe
jmp
sti
xchg
sbb
jl
jmp
xchg
into
dec
push
jmp
xor
or
aam
lods
scas
mov
add
mov
pop
cmp
mov
sti
popa
push
out
pushf
xchg
dec
push
pop
repz
mov
pop
int3
ret
add
jle
inc
aaa
mov
cmp
cdq
ds
jmp
sub
push
inc
cmp
mov
nop
cmp
bound
shl
sub
pushf
test
xchg
shl
cmp
dec
aaa
movs
test
mov
movs
fadd
pop
sahf
scas
inc
sub
popf
int3
ficomp
inc
repnz
std
adc
jle
adc
sub
xlat
repnz
jl
cs
test
xchg
retf
js
adc
stc
xor
adc
push
push
iret
jle
aaa
jnp
dec
mov
and
js
dec
jmp
sti
sbb
fisttp
ins
pop
jmp
repnz
daa
mov
add
xchg
adc
retf
aam
adc
in
addr16
and
jmp
jle
sbb
test
sub
push
out
adc
aas
xor
xlat
add
ja
mov
inc
inc
mov
outs
jp
cs
xor
icebp
push
out
mov
fisub
mov
mov
das
or
jg
pop
and
leave
sbb
lea
adc
repnz
loop
xchg
fs
dec
jae
inc
aaa
jmp
jbe
stos
cmp
push
jno
outs
(bad)
cld
(bad)
push
retf
mov
dec
jbe
ja
scas
sbb
inc
movs
arpl
pop
pop
popa
xor
sbb
ret
push
cmp
out
ret
push
xchg
dec
jge
ins
out
sub
xchg
mov
popw
in
call
jne
adc
cmc
repz
pop
cmps
xchg
pop
sub
add
loopne
cmps
jle
dec
(bad)
push
daa
pop
les
mov
icebp
mov
push
xor
movs
mov
mov
jns
cmps
(bad)
out
sbb
jle
or
push
retf
inc
mov
iret
ffreep
mov
movs
mov
int
inc
jno
cmp
mov
pop
mov
jl
aas
lods
xor
xchg
sub
sub
test
daa
call
jo
xchg
mov
in
cmp
jb
je
push
xchg
popf
push
mov
xor
adc
ror
cwde
mov
loopne
and
mov
in
jno
out
or
jmp
push
retf
scas
push
push
(bad)
sub
stos
rol
cwde
in
dec
cmps
xor
sub
add
xchg
(bad)
fsub
hlt
test
je
dec
lods
sub
mov
call
fsub
jmp
out
or
imul
sub
inc
in
push
in
clc
loopne
shr
or
call
add
add
mov
jp
std
ret
and
je
daa
inc
sub
popa
mov
iret
cmp
popa
mov
fwait
das
jno
in
mov
push
(bad)
push
push
fwait
and
mov
mov
push
cmp
push
inc
mov
pusha
xor
pop
jp
fwait
and
xlat
mov
mov
repnz
std
dec
cwde
mov
sbb
cdq
fbld
cld
xchg
mov
lds
retf
mov
xor
xor
mov
mov
push
jecxz
fisttp
sbb
add
jno
and
in
pop
pop
sbb
ret
add
add
sub
test
mov
aaa
call
xor
popa
sbb
cmps
and
pop
push
ds
(bad)
sti
pop
push
sbb
pop
out
not
sub
dec
pop
test
add
adc
loopne
nop
jg
imul
fcmovbe
aaa
xchg
push
mov
call
xchg
push
push
xor
dec
(bad)
enter
test
sahf
inc
push
jb
ss
ror
cmc
mov
push
int
adc
jmp
les
sub
out
sbb
mov
out
stc
mov
retf
or
jge
mov
repz
rol
iret
fwait
mov
(bad)
dec
repnz
and
mov
rcr
cwde
cli
rcl
inc
or
cs
jmp
add
xor
clc
push
dec
dec
hlt
inc
push
nop
dec
sub
mov
inc
dec
(bad)
shl
push
dec
adc
test
push
scas
int3
retf
daa
outs
loope
xchg
xchg
sub
test
popf
(bad)
sub
repz
cmc
sahf
ins
mov
mov
iret
mov
cmps
imul
js
cmp
shl
cmp
pop
leave
neg
mov
loope
int3
pop
popa
jno
xor
sbb
fcmovnb
sub
jo
aam
and
push
ins
inc
or
fdiv
jl
imul
leave
in
push
add
adc
movs
push
icebp
push
sbb
mov
sub
jb
(bad)
mov
fdiv
xor
mov
lods
push
mov
add
out
dec
adc
pop
mov
jle
out
scas
or
mov
mov
dec
jge
fs
movs
rcl
sub
arpl
stos
dec
cmps
jo
sbb
mov
outs
lods
adc
sbb
sub
pop
test
cmp
sbb
jae
xor
sbb
and
cmp
retf
add
inc
mov
retf
inc
mov
xchg
mov
or
test
repnz
jl
mov
je
jae
(bad)
out
push
jge
pop
xor
cld
cmp
xchg
movs
mov
jbe
fsub
cdq
in
fst
ins
jnp
mov
or
loopne
lods
or
scas
(bad)
sbb
sbb
test
pop
aas
dec
mov
inc
sub
or
dec
clc
cmp
xlat
sbb
sub
in
scas
inc
push
push
pop
xor
sub
inc
xchg
push
mov
mov
jo
mov
jns
jnp
rol
(bad)
pushf
mov
sub
cmp
scas
dec
cmc
xchg
inc
fist
das
imul
dec
mov
adc
mov
ins
repz
pop
push
outs
ficomp
div
or
arpl
inc
in
jg
icebp
jle
add
lds
fstp
add
fdivp
pop
xor
push
sub
jae
into
or
std
jnp
adc
sahf
cmc
data16
push
call
cmc
lods
or
add
sub
sub
inc
xchg
jns
sar
jno
daa
push
sub
sub
in
lods
adc
ds
sub
cs
mov
cmp
sub
push
in
inc
mov
neg
dec
sbb
lea
push
fst
scas
and
push
jmp
cmc
(bad)
or
hlt
xor
repz
pop
xor
adc
hlt
dec
lds
rcl
in
dec
mov
fs
mov
ds
or
and
movs
inc
jmp
je
dec
xor
adc
sub
(bad)
sbb
or
sbb
dec
jge
daa
and
inc
mov
shl
adc
sar
xchg
stos
js
xchg
retf
mov
into
mov
out
sbb
push
clc
mov
jle
out
fisubr
ja
mul
mov
push
and
adc
cwde
mov
dec
xchg
inc
stc
popf
int3
stos
ja
cdq
mov
cmc
pop
ins
add
call
imul
mov
fadd
(bad)
shr
push
cs
xadd
test
adc
mov
mov
and
fstp
add
std
(bad)
xor
mov
pop
adc
mov
sbb
retf
add
inc
adc
mov
cld
mov
or
mov
ret
push
daa
xlat
mov
pop
or
pop
jmp
test
add
dec
rcr
fidivr
popf
xchg
mov
cmc
lods
xor
cmp
inc
mov
dec
and
xchg
popf
out
dec
pop
repz
pop
cwde
fldenv
push
(bad)
sbb
sbb
(bad)
jmp
shr
mov
dec
mov
adc
and
loop
call
into
(bad)
push
cdq
xchg
mov
mov
mov
(bad)
test
loop
push
lock
jae
mov
dec
mov
aad
sahf
aad
xor
mov
xor
clc
mov
mov
cmp
lods
lahf
jge
jnp
cdq
mov
pop
xchg
jo
mov
jne
call
lahf
mov
mov
cmp
jns
xchg
jg
addr16
and
(bad)
(bad)
(bad)
mov
and
dec
shl
push
mov
and
jmp
gs
sahf
fisubr
xor
dec
adc
clc
ins
aam
mov
sbb
add
mov
loope
js
fnstsw
cdq
jbe
cwde
ficomp
pop
fdiv
xor
jecxz
addr16
mov
xchg
mov
or
addr16
inc
xchg
xchg
inc
imul
dec
and
sahf
push
das
retf
rcl
or
push
sub
movs
cmp
cld
das
loop
jo
sbb
jne
xor
(bad)
pop
push
jecxz
loopne
fdivrp
cmp
cmp
sub
add
out
mov
and
hlt
or
mov
(bad)
icebp
push
add
call
rol
sahf
dec
mov
adc
mov
sub
js
clc
lahf
retf
lds
mov
dec
lahf
sbb
inc
aad
xor
(bad)
std
je
mov
push
sbb
call
dec
mov
pop
(bad)
lock
fs
ss
dec
push
enter
jns
outs
xor
jns
bound
push
xchg
(bad)
daa
fucompp
push
ret
ds
div
cld
mov
jnp
data16
cmp
pop
push
push
mov
pop
mov
dec
xor
mov
mov
jle
mov
je
in
sti
jp
jnp
and
addr16
mov
fisub
fs
bound
pop
call
ret
in
sbb
adc
jne
sub
sbb
add
cli
jl
outs
loopne
test
mov
pop
xchg
or
or
retf
lahf
xor
and
sub
or
pop
daa
aas
mov
and
and
cs
retf
retf
pop
clc
push
jge
add
adc
retf
sub
and
and
push
xchg
push
leave
xor
shl
clc
hlt
sbb
xchg
cmp
pop
into
xor
arpl
adc
adc
push
mov
adc
xchg
jle
clc
ja
adc
or
pop
sbb
cmps
fwait
sbb
or
jb
test
pop
out
sub
into
push
push
div
or
adc
aad
add
enter
rcr
repnz
mov
cld
pop
ins
test
mov
push
aad
sub
fistp
xor
jne
jns
fwait
and
sar
push
es
adc
imul
mov
ins
loop
jp
adc
jne
je
(bad)
stos
test
inc
fcomp
dec
sub
jbe
dec
push
adc
adc
jnp
mov
ret
push
das
in
add
xor
mov
or
popf
cmp
sub
sbb
cmp
ret
jbe
cld
scas
stc
xchg
and
inc
xchg
lds
dec
nop
push
es
or
mov
bound
pop
mov
retf
mov
ins
mov
jmp
add
mov
cmp
arpl
movs
mov
das
cli
jp
add
jmp
inc
dec
inc
shl
dec
xor
in
inc
or
mov
xor
push
push
sub
and
mov
sub
mov
loopne
je
push
(bad)
lds
mov
adc
adc
lods
repz
push
test
outs
mov
cwde
scas
fisubr
pushf
ret
dec
(bad)
in
jae
mov
cmp
xor
retf
and
pop
dec
(bad)
mov
xor
dec
not
cmp
xchg
inc
loope
sbb
cmp
(bad)
pusha
iret
ins
pop
xchg
jp
nop
push
add
lock
xchg
pop
ins
mov
pop
in
fsub
fld
data16
mov
ins
test
pop
sbb
mov
dec
retf
neg
xor
pop
loopne
retf
dec
xchg
or
jg
std
fadd
sbb
dec
dec
scas
imul
stc
adc
int
mov
cmp
gs
hlt
je
ss
mov
mov
dec
imul
aas
das
cmp
inc
xchg
xchg
mov
imul
cli
xchg
jns
dec
imul
shl
sbb
lds
xchg
mov
cmps
push
jmp
adc
mov
cmp
sub
jecxz
aam
fcom
lock
ss
stos
mov
jo
(bad)
mov
add
xchg
mov
adc
loopne
enter
out
or
ins
mov
test
idiv
cmp
inc
shl
arpl
in
cmp
idiv
je
dec
or
xchg
idiv
aad
add
mov
cs
sbb
stos
nop
inc
call
xor
test
jns
xor
dec
sbb
xchg
nop
sub
cli
repz
adc
and
pop
jmp
or
scas
fidivr
call
hlt
and
test
mov
sub
push
rcr
mov
xor
ins
pushf
or
mov
xchg
popa
aas
les
sti
jnp
ja
push
mov
(bad)
lods
adc
adc
sub
ret
pop
jg
fcomp
mov
mov
xor
ja
cmp
xchg
mov
jg
mov
stos
jno
cmp
sahf
mov
(bad)
icebp
dec
xchg
push
cmps
mov
sub
lds
mov
fisub
sub
pop
int3
imul
hlt
and
dec
ret
add
(bad)
mov
push
loopne
pop
and
pop
cmc
aam
or
(bad)
ds
pop
adc
aad
and
cmc
inc
fsubr
fisttp
mov
jmp
adc
jae
stos
out
sub
mov
data16
retf
jmp
hlt
stos
jp
jg
mov
mov
mov
jns
das
add
mov
mov
out
dec
add
push
mov
je
clc
aaa
or
adc
test
mov
cs
enter
fnstcw
call
jo
and
add
shr
cs
xor
aaa
loope
mov
aas
dec
bound
jo
add
lods
mov
push
inc
aas
shl
addr16
xchg
mov
mov
pop
loope
dec
cmps
jl
jae
or
test
aas
inc
out
clc
xor
sub
add
add
cmc
ds
jmp
int
iret
xlat
push
dec
lods
xchg
jno
lods
mov
je
adc
mov
and
fmul
cli
jmp
fnstsw
pop
or
pop
fwait
aaa
add
pop
shr
jne
xchg
jb
push
add
push
or
in
jb
dec
sbb
aad
cmp
cmps
push
rcr
sbb
mov
imul
inc
mov
add
ins
call
push
add
out
out
or
jle
pusha
bound
ins
hlt
xchg
dec
add
sbb
cmp
sub
int
jmp
iret
test
enter
out
je
ins
repnz
pop
cmps
aas
pushf
cmps
push
mov
iret
arpl
jbe
packsswb
dec
sub
ficomp
mov
enter
shr
cs
scas
lds
inc
mov
(bad)
(bad)
sahf
jns
lock
les
(bad)
cli
and
mov
jns
jne
lahf
cmp
in
cs
pop
sar
inc
adc
mov
stos
xchg
out
jnp
xor
xor
jp
inc
(bad)
xor
mov
ds
arpl
fidivr
and
fs
fwait
imul
mov
add
and
scas
faddp
shl
mov
sub
cld
frstor
xchg
lock
fmul
into
jae
pop
add
jb
inc
jb
fsub
test
int
cmps
or
pop
sbb
(bad)
or
mov
or
inc
or
push
adc
into
dec
and
ret
sbb
xor
movs
inc
into
pop
stc
in
jne
cli
out
add
mov
leave
jns
bnd
or
sbb
fdiv
sti
in
lock
xchg
mov
mov
mov
enter
test
sub
cli
js
pop
and
sbb
scas
inc
mov
xchg
cdq
pop
mov
mov
mov
xchg
(bad)
fmul
push
jns
ja
lds
ror
or
inc
push
jmp
fcmovbe
sahf
dec
sbb
cmp
and
leave
and
pusha
adc
ror
push
ins
lock
sbb
ror
outs
add
jns
imul
xchg
mov
jbe
cmp
loope
(bad)
outs
aaa
mov
mov
xchg
push
test
ficom
imul
adc
pop
pop
pop
jno
dec
lahf
mov
add
cmp
shr
or
nop
jl
aaa
dec
add
mov
fild
cmp
adc
and
popf
dec
xchg
sbb
(bad)
call
std
mov
sub
jle
pop
jae
mov
mov
in
pusha
mov
stos
push
pop
je
mov
push
inc
out
lods
or
pusha
aam
call
hlt
mov
dec
and
push
or
enter
(bad)
in
xchg
imul
mov
ret
mov
in
clc
(bad)
jge
xchg
scas
hlt
jmp
dec
jl
mov
(bad)
pop
sbb
(bad)
xchg
retf
adc
adc
addr16
mov
dec
test
and
fdivr
or
jecxz
ret
out
mov
xor
js
pop
adc
jmp
add
cwde
and
outs
push
(bad)
xchg
push
iret
je
dec
out
pop
popf
ds
ja
xchg
ins
dec
jge
repz
jmp
pop
popa
push
sbb
(bad)
and
pop
push
xchg
test
jno
sbb
jmp
cmps
sbb
arpl
shl
push
sahf
or
pop
ret
pop
adc
or
mov
cdq
hlt
add
add
js
daa
ficom
rcr
cs
cmps
and
sbb
mov
mov
pop
mov
sub
in
cmps
mov
xchg
mov
push
hlt
fild
cwde
jl
inc
fwait
movs
mov
mov
push
mov
popa
dec
arpl
and
leave
test
sar
adc
out
sbb
lods
push
add
aam
dec
jae
fwait
int3
and
cmp
mov
or
shr
ins
pop
int3
aaa
int
fdivr
xchg
daa
xchg
pusha
inc
ss
mov
xor
and
dec
xor
icebp
jae
popf
icebp
push
cmp
fimul
shr
mov
sar
and
in
xchg
xchg
daa
jno
xchg
dec
or
retf
pop
retf
scas
sub
push
push
jg
xor
stc
ret
xor
aam
mov
sahf
mov
sahf
inc
lahf
sbb
or
dec
in
(bad)
sub
and
xchg
add
pop
pop
sbb
int
std
inc
(bad)
ficomp
sub
jg
inc
push
mov
idiv
mov
or
mov
push
dec
mov
jge
cwde
mov
mov
leave
stos
ins
xchg
test
test
pop
push
ficom
(bad)
mov
mov
sahf
cmps
pushw
in
push
aad
test
add
pop
push
imul
jmp
mov
jne
(bad)
jg
mov
cdq
add
cmp
stc
test
sub
sub
outs
mov
adc
jmp
test
retf
add
rcl
pop
add
adc
repz
scas
addr16
sbb
jg
in
test
sbb
dec
fidivr
pop
jmp
mov
out
jae
mov
mov
push
inc
xor
rol
sahf
loope
or
bound
mov
mov
pop
cmps
mov
imul
int
cmps
cmp
dec
out
call
jg
jb
inc
rcr
mov
mov
push
div
or
cmp
or
dec
call
ror
xlat
pusha
sub
push
xlat
repnz
not
add
cli
xor
not
xchg
jae
mov
and
stos
les
jnp
pop
add
push
loope
and
jmp
retw
or
cmc
ins
pop
cs
xchg
scas
inc
movs
arpl
dec
sbb
mov
jecxz
stos
fisttp
leave
bound
loop
mov
hlt
jmp
cdq
xor
int3
inc
jle
outs
ja
mov
push
inc
inc
push
add
xor
(bad)
jg
fist
jp
rcl
ds
xor
shl
or
mov
xor
rcr
mov
adc
pop
jmp
dec
mov
jnp
in
leave
std
call
and
outs
mov
enter
mov
retf
pushf
test
xchg
mov
adc
movs
popa
psrlw
push
xor
jns
xlat
add
jle
sbb
popa
or
push
jl
pop
xlat
leave
(bad)
mov
mov
pop
repnz
mov
jle
mov
push
aad
fsubr
shl
into
xchg
aam
cdq
sub
pusha
aam
sahf
test
jecxz
pop
clc
jmp
fld
js
cmps
fild
mov
jecxz
daa
push
into
ret
cmp
fbstp
pop
out
popa
outs
inc
mov
imul
fadd
loope
rcr
sub
jno
jecxz
adc
icebp
sbb
add
ror
inc
lahf
aam
popf
cdq
aam
xchg
mov
or
test
mov
retf
push
sbb
sub
stos
mov
push
push
ins
sbb
mov
outs
stc
rol
fldenv
inc
inc
mov
xchg
jae
xchg
jecxz
sbb
in
cmp
cmc
jbe
es
push
inc
inc
jmp
sbb
xchg
sub
aas
dec
jae
sbb
xchg
and
pop
sbb
ret
into
inc
popa
repz
cmp
mov
ss
dec
jl
mov
xchg
fld
cmp
push
ss
mov
cmps
test
icebp
mov
push
fs
jmp
or
movs
push
dec
inc
aad
xchg
xchg
sahf
adc
inc
mov
push
xchg
jns
and
sub
mov
xchg
shl
push
(bad)
test
mov
pop
push
mov
sub
cmp
jecxz
call
gs
push
aad
stos
xchg
dec
push
pop
pop
jb
jbe
add
call
inc
rcr
bound
sub
xadd
ficomp
popf
ror
cmps
mov
imul
dec
ret
push
out
in
aas
add
dec
cld
out
inc
leave
add
je
fisttp
or
fwait
scas
out
jo
sbb
cld
in
mul
push
nop
mov
pop
jg
out
test
aaa
ss
lods
push
cmp
fld
xchg
or
ret
pop
lods
mov
stos
dec
gs
leave
push
shl
repz
jecxz
rol
xchg
je
test
aaa
rol
popa
gs
jns
ds
fmul
ret
dec
pop
push
jb
shl
jecxz
push
xchg
push
ret
lock
fild
mov
nop
push
xlat
adc
inc
fsub
cmp
inc
mov
pop
mov
or
mov
mov
push
ficomp
adc
mov
mov
add
add
xchg
and
pop
pop
xchg
leave
leave
ins
xor
mov
addr16
mov
dec
pop
cli
std
test
leave
mov
sbb
sbb
sub
repz
nop
mov
ja
adc
mov
mov
jnp
cli
gs
sub
jbe
sub
int
add
cmp
mov
and
and
out
inc
dec
dec
mov
cmp
repnz
popa
js
je
(bad)
adc
jb
ins
loop
jne
fisttp
movs
sbb
dec
cmps
cs
jbe
mov
cmp
mov
xchg
pusha
sbb
sar
rol
and
jb
mov
dec
push
popa
dec
push
clc
cmc
xchg
add
(bad)
stos
push
call
push
mov
pop
ja
push
in
rcl
mov
(bad)
pop
xchg
mov
ficomp
fdivr
xlat
test
not
stos
aam
cdq
aam
pusha
add
sub
out
xchg
enter
pop
fwait
rol
xchg
dec
mov
cli
xchg
in
fucomip
lods
mov
and
mov
(bad)
mov
adc
retf
das
iret
stos
es
add
sti
retf
mov
push
fmul
ss
xchg
xchg
mov
and
pop
ret
and
lods
mov
pusha
adc
mov
xor
jle
inc
into
in
jnp
stos
outs
mov
jecxz
push
loope
xchg
adc
mov
lahf
loopne
outs
test
mov
fmul
(bad)
loopne
sti
rol
mov
retf
dec
mov
xchg
push
fdivr
in
int3
or
xlat
pop
jmp
ret
xchg
in
jge
cli
repz
push
xor
xor
dec
pop
(bad)
mov
sub
mov
repz
inc
and
dec
es
sub
rcr
jl
mov
je
mov
mov
or
mov
loopne
and
mov
mov
iret
cmc
fidivr
int
das
jg
jb
push
lsl
xor
jle
je
sahf
inc
repz
dec
sbb
jne
pop
dec
push
adc
and
lods
pop
js
jge
(bad)
out
push
aas
loop
int3
into
push
mov
mov
and
pop
mov
pop
xchg
retf
xchg
pop
pop
or
mov
fild
popa
mov
fsub
inc
(bad)
int
repnz
ror
mov
retf
jmp
xor
cmps
jae
xchg
inc
stc
out
adc
or
mov
in
iret
push
sbb
(bad)
(bad)
out
iret
mov
mov
sbb
lods
xchg
jno
xchg
cmp
ins
ss
inc
fwait
es
rcl
mov
or
lock
push
shl
fwait
cmp
loop
aam
push
fwait
mov
ret
sbb
xchg
xlat
xlat
leave
mov
fiadd
iret
out
sub
fsub
fwait
dec
outs
not
add
pop
call
pushf
dec
retf
hlt
lock
imul
movs
xchg
cwde
jge
rcl
cmp
mov
scas
mov
jle
ret
dec
adc
lods
mov
dec
mov
xchg
fs
push
ja
push
aam
(bad)
push
iret
mov
sub
or
or
call
inc
adc
sahf
scas
adc
fdivr
cmp
sti
loop
mov
mov
loopne
cmp
cmp
popf
je
push
inc
or
xor
std
ficomp
pop
aad
das
push
mov
les
xchg
std
mov
cdq
nop
out
mov
(bad)
(bad)
fisubr
out
jae
sub
(bad)
out
ja
push
les
dec
jns
cs
add
pop
adc
loopne
mov
add
repz
aad
and
sbb
inc
pop
fnstsw
(bad)
jne
fldcw
into
ins
(bad)
and
adc
xor
mov
dec
aaa
push
sar
pop
outs
xchg
les
push
gs
jge
icebp
arpl
inc
stos
retf
neg
sbb
jge
mov
stos
pop
(bad)
xlat
fwait
dec
outs
(bad)
adc
and
or
test
mov
mov
inc
inc
test
stos
mov
xor
sbb
xchg
mov
mov
xchg
dec
(bad)
ficomp
mov
loop
xor
inc
inc
add
mov
jbe
xor
pop
xor
push
(bad)
stc
sbb
mov
out
inc
push
xor
shl
call
test
retf
lods
fs
and
fst
jmp
adc
mov
aaa
data16
jmp
loope
pop
pushf
lock
and
fwait
mov
bound
std
call
cmp
or
ss
popa
mov
push
outs
cmp
xchg
mov
adc
fdiv
push
lods
inc
or
int3
push
(bad)
push
pop
jno
scas
xchg
sub
mov
add
mov
cmp
add
or
aaa
pusha
cmp
lds
add
shr
ins
push
imul
dec
aad
das
pop
cmps
mov
sahf
mov
jmp
add
fwait
js
dec
cli
push
pop
push
mov
adc
rcl
jmp
pop
fild
sbb
arpl
sub
push
outs
mov
je
jmp
jo
xchg
jmp
jno
mov
or
jo
add
mov
adc
push
retf
out
fwait
clc
mov
jge
and
lods
add
or
cwde
aam
push
xlat
mov
nop
rcr
mov
push
jmp
std
jp
inc
mov
mov
and
inc
mov
xchg
int3
lods
in
cmp
loop
pop
ret
ins
fidivr
arpl
or
repnz
xor
inc
clc
test
jge
mov
add
fisttp
mov
adc
push
sub
sbb
test
cmp
mov
stos
popf
test
in
push
popf
pop
jl
cmps
daa
add
xchg
outs
xchg
fsub
mov
push
aam
mov
xor
aam
push
call
das
aaa
and
sahf
adc
pop
mov
ins
loope
jno
mov
xor
pop
call
xchg
or
popf
leave
jl
mov
sub
or
mov
loop
fimul
add
xor
cld
inc
(bad)
out
sahf
sti
and
jmp
sub
std
xor
pop
dec
cmp
jb
ins
into
cwde
pop
pop
(bad)
xor
fbld
xchg
int
push
cmp
les
sub
int
jecxz
sub
call
xchg
mov
adc
es
gs
xchg
loope
cs
mov
cld
dec
mov
pop
(bad)
addr16
or
push
gs
jno
shrd
mov
and
aaa
or
push
cmovae
add
jmp
jne
retf
xor
pop
and
cld
icebp
inc
in
sub
inc
mov
jne
adc
jmp
mov
adc
leave
push
add
retf
sahf
dec
jl
int
je
(bad)
lods
xchg
loop
push
imul
mov
xchg
hlt
into
dec
iret
jb
imul
jbe
arpl
pop
adc
je
xchg
cdq
lea
xor
and
mov
getsec
bnd
lds
daa
pushf
ins
cmp
jl
push
movs
sbb
mov
mov
sub
(bad)
push
and
push
lock
(bad)
das
int
mov
in
ss
fidivr
sti
sub
call
mov
cli
pusha
cmps
sub
dec
loopne
cdq
push
sbb
jecxz
and
rcl
ja
sub
and
clc
repz
repz
sti
dec
inc
mov
(bad)
cmc
jnp
in
data16
es
retf
push
inc
dec
loop
inc
out
adc
mov
fiadd
les
jne
out
retf
inc
dec
sub
sub
in
movs
xor
stos
test
and
outs
aas
in
push
jmp
jg
sti
lea
push
aas
push
pop
add
mov
fdivr
ret
cmp
ror
(bad)
mov
imul
sbb
mov
add
in
dec
mov
xchg
pop
retf
js
mov
dec
inc
push
xor
cdq
mov
xor
mov
lock
push
cmp
mov
dec
out
cmp
lods
out
mov
nop
fistp
mov
xlat
cli
mov
into
or
pushf
sub
adc
jnp
sub
cmc
push
fistp
or
add
js
sub
dec
xchg
jae
inc
call
cld
push
sbb
inc
mov
inc
push
js
pop
cmps
fldcw
jg
bound
dec
xchg
(bad)
repnz
pop
mul
pop
mov
xchg
pop
aad
pusha
xchg
add
in
lahf
mov
xchg
sar
push
cmp
cmp
cwde
cmps
and
mov
shl
xchg
push
jecxz
mov
aaa
popa
lock
gs
lahf
and
clc
loope
pop
dec
or
dec
cmp
imul
or
or
test
into
pusha
pop
adc
adc
adc
icebp
jg
nop
rol
aas
and
retf
xchg
jecxz
lahf
dec
jno
inc
aas
or
aam
sbb
adc
ret
ret
icebp
push
fwait
mov
add
cmp
adc
hlt
xchg
inc
in
push
or
aad
ins
aas
ja
and
push
andnps
mov
je
imul
popa
push
call
mov
xor
adc
mov
add
inc
out
add
nop
call
pop
(bad)
cld
jmp
data16
mov
sbb
and
add
sub
scas
jne
and
sti
adc
mov
loope
cs
mov
jmp
pop
ret
movs
icebp
or
and
aam
inc
imul
xor
aaa
mov
or
stos
and
outs
add
dec
ja
mov
adc
mov
cmp
xchg
xor
adc
stos
adc
push
mov
les
and
pop
inc
cmc
add
push
dec
inc
ret
mov
mov
jmp
jbe
pushf
lds
int
enter
dec
and
daa
jns
mov
imul
out
bound
cdq
cs
movs
jmp
inc
out
mov
sbb
pusha
out
adc
adc
fwait
push
add
aas
jge
cmps
sbb
jns
sbb
stos
or
call
pusha
aaa
sub
cwde
sub
daa
pop
int3
call
mov
into
popf
mov
mov
fisubr
xor
dec
loopne
or
cwde
in
pop
add
std
retf
cmps
xchg
add
xchg
sub
jg
fldz
jg
xor
ins
mov
imul
movs
retf
ins
xor
or
loopne
mov
imul
jb
divps
jg
stos
(bad)
and
call
sub
push
push
int
fnstcw
imul
jl
std
or
mov
iret
jne
mov
sbb
pop
leave
jns
mov
rcr
dec
pop
xchg
cmp
and
mov
sbb
in
inc
cmp
adc
arpl
xor
mov
add
mov
mov
pushw
daa
push
out
frndint
pop
xor
inc
mov
mov
push
fstp
push
inc
popa
adc
add
stc
sub
dec
outs
jmp
push
inc
cmp
fiadd
jmp
fiadd
in
hlt
adc
lahf
leave
aas
sti
inc
ins
dec
icebp
mov
mov
ss
mov
sub
sti
sbb
clc
pop
cmc
ja
inc
shr
call
ins
outs
xchg
inc
mov
cmp
or
jns
cmp
cmp
mov
adc
xlat
push
mov
sbb
adc
push
add
xor
aaa
mov
sub
push
cmp
lock
jnp
mov
scas
inc
cmc
add
sahf
mov
pcmpeqd
sub
push
add
mov
ins
fadd
out
test
in
repz
mov
in
push
inc
push
inc
je
push
jmp
cmps
into
xor
mov
sysenter
jle
mov
loopne
mov
hlt
xor
push
je
rcr
int3
addr16
and
or
adc
or
das
sar
dec
pop
sahf
in
inc
stc
and
test
inc
or
dec
xor
and
call
movs
std
xor
adc
std
and
sbb
or
aaa
out
sub
popa
inc
sub
inc
or
cld
sub
jg
iret
pop
loopne
je
pop
(bad)
cdq
test
pop
and
jp
inc
sbb
mov
retf
jmp
sbb
mov
call
es
arpl
xlat
imul
mov
inc
mov
mov
les
push
sub
ret
xchg
mov
adc
arpl
movs
dec
mov
dec
imul
mov
jecxz
loope
fsubr
pop
lock
movs
neg
in
dec
jecxz
jle
xor
jle
lahf
xlat
imul
adc
xlat
mov
ins
mov
retf
imul
inc
popf
sub
pop
sub
add
lock
mov
cmp
mov
xor
iret
pop
push
xor
lds
jno
cmp
mov
into
dec
sti
cdq
fcomp
mov
inc
pop
and
cmc
fnstcw
dec
mov
and
xchg
stos
xor
rcr
adc
movs
sub
arpl
addr16
int
mov
repnz
mov
repnz
(bad)
scas
clc
stos
xchg
popa
ror
cli
jbe
movs
cmp
push
test
aad
test
js
std
jp
jae
adc
rcr
jge
sub
sbb
cmp
cmp
jmp
cmc
cmc
mov
add
sbb
scas
iret
jmp
push
cmp
pop
cs
lahf
or
fst
mov
loope
jne
dec
sub
std
push
and
aad
in
mov
cmps
(bad)
cmps
and
shr
pop
jge
pop
in
test
arpl
das
test
test
mov
and
das
dec
ret
ficom
mov
sub
push
aam
mov
loop
ror
mov
sti
or
fistp
xor
jb
icebp
adc
jo
and
and
iret
cmp
push
mov
xchg
jbe
xchg
mov
movs
ins
xchg
dec
sbb
inc
repnz
add
(bad)
in
aam
iret
xor
adc
cmp
imul
sub
push
adc
jge
rcl
mov
mov
mov
fmul
mov
sbb
xlat
clc
push
div
out
shl
repz
scas
das
cmc
shr
adc
push
hlt
data16
pop
mov
gs
imul
lahf
leave
fs
pushf
dec
dec
xchg
inc
repnz
sar
retf
aam
into
ret
mov
mov
xlat
fs
stos
pop
jbe
cli
dec
cmp
mov
pushf
into
cld
stc
ja
cmp
mov
or
aad
cmp
xchg
stc
lea
cdq
mov
or
mov
popa
adc
mov
adc
add
dec
sub
jmp
and
mov
xor
test
mov
aaa
push
lods
inc
cs
dec
cmp
adc
stos
or
inc
daa
dec
dec
sar
inc
(bad)
(bad)
pop
stos
mov
leave
and
in
mov
(bad)
pop
ror
sub
sbb
sub
dec
dec
add
fwait
pop
jmp
adc
in
mov
adc
in
(bad)
cdq
xchg
int3
inc
je
cmp
lock
dec
pushf
inc
sub
push
test
sbb
or
movs
test
jno
jo
test
push
aam
cli
lds
xchg
adc
sti
in
adc
adc
dec
push
push
mov
or
jnp
test
mov
not
not
scas
ret
iret
jle
hlt
and
lods
adc
popf
fisttp
dec
dec
push
out
push
int3
sub
inc
xor
add
fs
xor
or
adc
push
dec
and
cmp
dec
call
add
cld
lea
(bad)
lahf
addr16
xor
or
shr
cli
cs
or
icebp
sbb
(bad)
xchg
or
pop
cmps
pop
mov
movs
loopne
mov
pop
cdq
mov
ds
xchg
sahf
mov
or
adc
fs
mov
mov
sub
in
xor
call
int
das
mov
inc
bnd
test
jne
lahf
cmp
ret
dec
setns
lods
inc
out
pushf
outs
dec
push
outs
mov
mov
fwait
and
mov
dec
fimul
sub
imul
sbb
fist
pop
retf
ds
mov
dec
cmp
xor
int3
cmp
and
xchg
sub
dec
inc
xlat
stc
fs
xchg
cdq
(bad)
int3
inc
and
and
or
sub
retf
cdq
dec
push
add
push
popf
(bad)
outs
or
int3
(bad)
fidiv
scas
sub
fcomi
mov
test
repz
pop
inc
out
push
xchg
loop
rol
push
loope
les
sahf
cmps
shl
aas
xchg
mov
stos
call
cli
mov
test
mov
popw
pop
or
pop
or
jecxz
pushf
mov
idiv
push
and
jecxz
xor
sbb
mov
(bad)
pop
ret
push
cmp
push
int3
int
lahf
xor
xchg
xor
scas
mov
sub
push
xchg
mov
xor
sbb
push
in
popf
xchg
mov
adc
push
(bad)
shl
cmp
sub
aam
pop
pop
(bad)
fnstenv
sbb
inc
retf
mov
adc
xlat
jmp
mov
dec
mov
jmp
mov
imul
loopne
mov
pop
jg
loopne
cmps
bound
out
inc
movs
bound
push
jg
jge
fcmovnu
xor
or
cli
(bad)
rcr
into
or
pop
pusha
pop
addr16
loopne
aam
les
inc
adc
or
or
inc
retf
iret
pop
test
pop
add
sbb
sar
mov
nop
mov
retf
sar
jmp
outs
jmp
and
in
data16
fwait
shl
(bad)
pop
outs
sti
(bad)
fwait
jae
push
cmp
dec
test
test
pop
push
loop
in
movsx
adc
jb
(bad)
in
and
sbb
sub
(bad)
aad
jmp
or
cmp
js
push
mov
fldcw
cmp
xor
inc
mov
xor
inc
packsswb
add
jns
cmp
ins
xchg
xchg
in
(bad)
jno
push
sub
test
mov
xchg
mov
push
iret
fsub
icebp
fstp
push
mov
jecxz
ror
adc
mov
test
bound
xchg
dec
sub
aaa
push
in
mov
xchg
cwde
mov
repz
mov
pop
mov
loope
and
hlt
clc
push
cmps
cmp
jecxz
add
adc
pop
fcmovb
loopne
shr
fdivr
mov
fsubr
mov
push
outs
jno
cmps
push
int3
psllq
js
jnp
mov
sub
fwait
ret
imul
dec
pop
je
push
adc
jge
jne
jae
xchg
lods
sbb
pop
mov
rcl
into
mov
pop
test
cld
mov
(bad)
cmp
pop
cli
ret
push
push
pop
or
cmp
(bad)
adc
popa
add
pop
adc
in
mov
or
pushf
fst
xlat
enter
adc
mov
xor
jge
test
in
fcom
pop
ds
aam
stc
and
retf
es
and
std
pusha
jno
xor
es
(bad)
addr16
in
add
stos
add
xchg
dec
and
sbb
mov
icebp
mov
enter
mov
add
sub
inc
adc
lahf
xor
(bad)
daa
adc
scas
xchg
loop
cmp
sahf
loopne
sbb
test
fabs
sub
aad
es
icebp
xchg
loop
(bad)
aad
fnstsw
popa
out
push
hlt
lods
jl
add
mov
ret
sbb
inc
int
dec
mov
cwde
jmp
fdivr
jo
jno
shl
jo
mov
jl
sbb
mov
fcmovb
dec
jmp
lds
mov
pop
mov
test
pop
(bad)
movs
outs
(bad)
jae
(bad)
push
adc
cmps
mov
shl
jne
aam
ror
mov
rep
mov
mov
jp
les
sub
loopne
xor
mov
inc
sub
pop
popa
fptan
jo
cmp
icebp
mov
mov
test
xchg
dec
mov
jp
ja
xor
cmp
sti
cs
test
imul
mov
not
jmp
mov
mov
jge
cmp
dec
outs
cli
call
das
push
pushf
sahf
inc
fistp
adc
cmc
xchg
test
adc
xchg
lods
movs
fist
sbb
jl
movs
scas
sbb
jmp
jne
or
pop
add
scas
cmp
pop
ftst
mov
inc
bound
pop
adc
loop
mov
(bad)
retf
push
fnstenv
jnp
fnstcw
test
sub
je
jbe
and
mov
ja
and
jmp
stos
xor
xor
mov
in
mov
in
inc
neg
xchg
push
js
ror
cli
lea
pop
and
xchg
cmp
inc
imul
jp
cmps
cmp
mov
adc
mov
xchg
in
repnz
aad
lock
shr
sub
in
add
add
cmc
jmp
mov
daa
test
push
sub
lods
push
push
cs
add
xor
add
std
sub
xchg
add
dec
pop
mov
test
in
cwde
or
out
push
int3
dec
test
sbb
dec
mov
cmps
sbb
dec
xor
jbe
in
xor
pushf
addr16
fist
in
xor
sbb
test
pop
jnp
mov
xor
out
data16
sub
lahf
xchg
jecxz
aaa
xchg
pushf
cmc
inc
jl
push
mov
inc
addr16
jns
es
ret
mov
mov
ficom
and
fiadd
daa
das
scas
push
fwait
neg
iret
mov
retf
sub
(bad)
sbb
adc
pushf
xchg
pop
(bad)
jg
enter
dec
bound
mov
stc
pop
cmp
(bad)
jmp
(bad)
in
push
dec
fidivr
test
rcr
pop
sbb
add
jae
mov
std
inc
mov
les
xchg
mov
cld
xchg
dec
xor
test
cmp
sbb
pop
pop
push
cmp
xor
sub
lds
popf
sbb
jecxz
in
adc
mov
ds
inc
dec
fdiv
icebp
hlt
xor
xlat
and
pop
repz
movs
or
mov
mov
adc
inc
scas
xchg
lea
xor
mov
(bad)
aam
jmp
(bad)
rol
nop
adc
out
shl
(bad)
mov
mov
jne
cmp
inc
sub
in
aad
sub
mov
outs
mov
popf
mov
adc
or
dec
push
out
icebp
sub
xlat
sar
adc
fstp
inc
mov
sbb
lock
or
repz
cli
int3
pop
pop
pop
jle
enter
xor
ds
mov
ret
mov
pop
fmul
fcomp
enter
sub
scas
out
and
pop
dec
in
sub
add
inc
mov
std
aaa
cld
xor
leave
jbe
in
les
pop
addr16
push
test
cmp
cmp
xor
jecxz
(bad)
jge
inc
movs
pop
popf
adc
mov
push
mov
icebp
push
mov
into
push
mov
pop
leave
mov
inc
in
inc
push
lock
mov
(bad)
movs
push
pop
fidiv
inc
push
in
jns
movs
call
mov
loop
mov
xor
mov
cs
ja
sbb
inc
push
cmp
adc
sar
adc
xchg
dec
adc
sub
dec
add
pop
dec
push
sahf
and
js
dec
and
jecxz
jmp
cdq
jno
(bad)
ins
jecxz
clc
frstor
jmp
repnz
push
dec
dec
ss
(bad)
xchg
cli
jl
cmps
ins
sub
dec
pop
adc
call
jb
mov
cmp
je
dec
sub
lds
mov
mov
int
(bad)
sub
or
ficomp
sbb
xchg
retf
xchg
aaa
jecxz
aam
mov
or
dec
movs
dec
mov
enter
cmp
sbb
mov
pop
lock
in
inc
pushf
aas
stos
mov
mov
pop
cmp
dec
push
push
test
adc
sti
idiv
test
mov
adc
sbb
lds
scas
stos
jne
mov
ret
cld
dec
rcl
and
dec
xor
mov
retf
and
aas
jo
mov
mov
mov
dec
xchg
out
imul
push
add
test
clc
int
test
mov
xor
loope
push
fisubr
cwde
adc
pop
pop
imul
das
inc
pop
rol
cmp
dec
test
jb
jno
arpl
imul
(bad)
repz
lods
cmc
add
(bad)
and
into
aas
push
pop
and
dec
daa
mov
mov
dec
lock
adc
push
sbb
fdiv
adc
test
call
adc
adc
repz
cmp
pop
lds
in
or
ror
jmp
sub
js
add
in
in
jno
test
push
mov
(bad)
push
adc
btc
cmp
pop
out
popf
retf
push
sub
dec
sub
out
retf
test
aaa
push
sbb
add
push
cwde
xchg
out
or
in
mov
in
aaa
or
sub
jbe
in
sbb
imul
enter
pop
ror
adc
cld
pop
js
pop
mov
mov
xchg
sbb
and
test
ud1
xor
outs
out
pop
arpl
call
cmp
inc
add
adc
jo
std
mov
add
test
cmp
push
inc
xchg
mov
adc
push
or
scas
mov
popf
sub
fnstsw
call
cli
aad
pop
ja
xchg
xchg
jmp
por
push
mov
(bad)
sbb
call
in
mov
xchg
xchg
or
pop
xor
fdivr
sbb
jge
fnstsw
call
hlt
imul
dec
push
xchg
jno
add
mov
shl
xchg
and
inc
and
add
cmp
dec
xor
mov
ds
xor
xchg
(bad)
pop
aad
pop
sub
popf
inc
sub
mov
jno
ins
sbb
jecxz
ins
cli
cmps
or
sub
das
aas
add
cmps
lock
pop
dec
add
add
push
xchg
xchg
pop
pop
cs
test
and
fucomp
retf
and
xchg
clc
cld
mov
dec
xor
jecxz
bound
fnstsw
pushf
stc
popa
or
mov
pop
fimul
or
sbb
sbb
cmps
mov
lds
or
aas
cs
cs
or
bound
ins
lds
imul
mov
sbb
jle
xchg
inc
mov
ret
or
push
in
dec
and
popf
imul
sete
or
push
(bad)
retf
bound
mov
xchg
adc
and
sbb
test
fdivp
ret
sub
retf
push
sbb
inc
sbb
dec
sub
mov
and
jecxz
sub
iret
aad
or
jmp
out
fcom
movs
stos
neg
or
mov
sub
arpl
icebp
add
call
pusha
dec
imul
stos
test
les
adc
je
fwait
(bad)
in
adc
shr
sub
(bad)
scas
shl
iret
or
rep
dec
add
fmul
cwde
xor
pop
dec
jle
fisttp
adc
jno
out
retf
push
outs
js
pop
popa
sbb
inc
(bad)
sahf
shl
imul
in
and
mov
jnp
cmp
lock
sub
jle
retf
push
sub
jmp
mov
je
out
cmp
ret
out
push
jmp
inc
das
cmps
or
aad
call
(bad)
lea
jb
pop
and
adc
add
xchg
loope
loop
cli
pop
dec
pop
je
dec
push
test
inc
rol
stos
into
outs
outs
imul
(bad)
out
inc
loopne
(bad)
sahf
icebp
inc
add
adc
sub
adc
mov
in
test
pop
cmps
xor
cmps
push
int3
pop
push
daa
adc
cmp
out
jl
fmul
sub
ins
aam
sub
cmps
out
inc
ds
retf
and
mov
lock
stc
jge
pop
jb
mov
popf
ss
jns
inc
es
sbb
xlat
or
stos
push
addr16
stc
dec
mov
and
cmp
into
ret
push
es
mov
cmovbe
mov
sub
sub
fidivr
sbb
leave
out
mov
fidiv
lds
add
pop
mov
xor
test
pusha
dec
cmp
les
sahf
pop
out
in
push
jae
mov
xor
mov
push
ret
xor
daa
into
ins
xchg
mov
fidiv
lahf
cmp
xchg
mov
adc
pushf
jns
movs
jae
shl
mov
sbb
std
retf
mov
mov
test
out
and
cmc
mov
imul
sub
mov
dec
pop
jno
lods
mov
les
int
sub
pushf
push
shl
stc
js
stc
stc
pusha
mov
outs
push
stos
add
outs
cdq
aad
in
push
pusha
stc
popf
cld
aaa
call
shl
inc
clc
dec
add
fsub
mov
arpl
and
pop
ins
gs
(bad)
cmc
loopne
sub
push
sbb
sub
popa
jl
add
std
mov
fwait
jge
pop
pop
jb
sub
xor
sub
push
xor
scas
sub
mov
outs
clc
cld
and
pop
pop
xchg
jmp
leave
xchg
lods
pusha
rcr
mov
adc
ror
pusha
imul
mov
in
(bad)
jbe
and
push
aad
cmp
imul
(bad)
mov
xor
ds
dec
bound
xchg
hlt
sbb
stc
popa
mov
sub
sub
adc
ins
std
stos
imul
pop
push
push
in
into
jmp
adc
lahf
repnz
and
mov
inc
adc
dec
cwde
add
jl
int
call
loope
dec
adc
dec
jo
(bad)
stc
or
add
xchg
shl
fld
ret
aam
call
xchg
in
mov
(bad)
dec
and
adc
sbb
add
jmp
repz
or
jo
dec
jb
dec
mov
mov
repnz
mov
jb
mov
gs
jle
outs
add
test
outs
into
pushf
pushf
dec
add
repz
popf
(bad)
cwde
and
mov
aam
(bad)
pop
xor
xchg
(bad)
xchg
xchg
repz
add
fwait
push
mov
iret
push
and
pop
pop
cli
stc
loope
inc
sub
retf
arpl
in
icebp
rcr
lods
mov
xor
push
pop
sbb
inc
add
pop
lods
ja
icebp
jp
push
pop
in
and
adc
(bad)
lods
mov
scas
dec
arpl
cli
jmp
adc
push
or
popf
int
lock
pop
call
adc
addr16
fld
xor
sub
xor
add
mov
jno
dec
cwde
pop
add
jae
idiv
push
mov
push
arpl
cmp
fist
les
lea
or
jp
or
inc
bound
arpl
je
inc
(bad)
das
call
movs
push
mov
push
call
ss
xor
pop
xchg
daa
sub
cmp
add
scas
(bad)
jmp
test
out
jb
pop
test
fimul
mov
loopne
sub
add
mov
push
cdq
js
inc
loopne
mov
outs
in
ins
fwait
xchg
xchg
fsubp
shr
push
ret
movs
stc
lock
js
idiv
call
enter
repnz
dec
loope
or
jl
mov
loope
(bad)
sbb
fst
inc
or
or
adc
div
mov
sub
aam
sub
and
xor
movs
xchg
push
fdivr
xor
push
(bad)
retf
jnp
ficomp
jne
add
inc
cmp
cmp
cmp
ds
test
cmp
pusha
scas
aam
jg
pop
pop
add
jl
ins
repnz
inc
lds
fsub
jmp
cmp
mov
mov
jg
pop
loopne
daa
jge
cmp
(bad)
pushf
stos
and
sub
test
(bad)
int3
scas
nop
push
rcl
je
pop
inc
es
dec
movs
loope
mov
xchg
test
dec
(bad)
pop
push
and
jmp
test
iret
popf
or
retf
pop
push
mov
xorps
std
fld
fcom
xchg
jecxz
mov
adc
(bad)
aas
mov
mov
add
inc
cld
test
xor
loop
ins
push
fisttp
test
popa
mov
lods
test
and
ret
mov
jae
gs
sub
repnz
ss
adc
and
imul
xchg
jb
shr
mov
(bad)
sub
xchg
mov
xchg
jne
mov
sbb
sahf
xchg
mov
test
(bad)
iret
or
xchg
mov
js
inc
push
dec
retf
push
sbb
mov
mov
cmp
and
pop
pop
int3
stos
ret
jmp
and
mov
into
dec
mov
push
pushf
ja
loop
sub
sbb
push
inc
bound
sub
inc
push
mov
aad
je
sahf
xchg
xchg
mov
pop
xchg
jecxz
(bad)
cmps
lods
mov
dec
mov
lods
out
add
push
addr16
jno
outs
daa
cmps
or
adc
fcomp
in
loope
xchg
cmp
or
inc
xchg
out
mov
pop
(bad)
scas
lahf
mov
mov
dec
pop
mov
mov
je
nop
xchg
adc
mov
or
aaa
outs
aas
push
(bad)
or
into
cdq
inc
mov
fst
sub
pop
popa
movs
in
inc
sbb
xchg
movs
inc
or
icebp
retf
arpl
xor
mov
inc
jae
outs
mov
movs
int3
(bad)
jno
jecxz
adc
or
and
xchg
lea
sbb
push
mov
mov
jg
cmp
or
pop
mov
add
outs
inc
in
push
push
cli
aad
scas
xor
call
xor
retf
aas
xor
rol
(bad)
and
dec
adc
test
jnp
jle
clc
dec
sub
mov
out
xchg
add
out
loope
mov
and
sub
mov
cmp
add
lods
in
les
icebp
or
sub
xor
add
dec
cmp
jnp
enter
(bad)
mov
mov
pop
mov
stos
ret
mov
mov
sub
xor
iret
call
mov
jecxz
sub
add
push
cmp
ins
in
loopne
repz
mov
ret
jl
sbb
xor
retf
mov
or
les
dec
inc
dec
(bad)
add
sar
jae
jg
ja
cli
pusha
xchg
or
icebp
cmps
lahf
pop
cmp
js
sub
nop
xchg
rcr
pop
add
aas
push
loope
arpl
lock
inc
cmp
and
mov
add
jb
loop
ins
mov
ror
addr16
repz
jbe
and
(bad)
lock
test
mov
jnp
fldenv
jae
inc
mov
les
pop
stos
jae
push
pop
out
pop
hlt
and
ret
std
out
fdivp
(bad)
imul
add
dec
add
cmp
jbe
cmc
dec
jmp
fcomp
stc
xchg
sbb
fnsave
and
mov
ins
push
data16
jnp
push
sub
and
out
(bad)
xlat
or
lods
mov
jns
mov
dec
out
mov
sub
add
es
mov
or
fnsave
mov
cdq
sub
test
lds
aad
mov
int
mov
(bad)
fadd
mov
out
icebp
lods
or
cld
out
sub
(bad)
sbb
mov
jae
sub
sbb
lods
mov
xor
sub
outs
xchg
nop
add
icebp
(bad)
adc
test
sbb
sbb
addr16
(bad)
call
int
dec
in
repnz
ret
xchg
cmp
cmc
fwait
sbb
mov
dec
dec
sbb
ins
mov
inc
mov
sar
mov
movs
jmp
loop
push
mov
jge
xor
clc
adc
cmps
mov
div
xchg
sbb
xchg
sbb
int3
icebp
mov
push
dec
stc
push
loopne
cdq
xchg
mov
cmp
cmp
push
cmp
add
test
test
ss
jmp
hlt
loop
jmp
imul
sub
xor
xchg
mov
xchg
sub
sub
sub
dec
jnp
jle
repz
sbb
mov
and
adc
rcr
popa
arpl
in
out
fldenv
out
jne
xchg
pop
jp
in
sbb
inc
jns
mov
xor
mov
test
dec
(bad)
mov
jg
scas
mov
push
sbb
daa
xlat
stos
xor
(bad)
adc
xchg
(bad)
cmp
or
jne
jmp
jae
add
(bad)
cmp
dec
popf
jl
inc
fnstsw
push
out
jle
sti
retf
outs
mov
or
push
dec
jo
inc
pusha
dec
cld
push
cdq
jl
jmp
xchg
push
sub
dec
rol
in
movs
jg
or
mov
fsubr
dec
and
stos
ss
in
loopne
mov
mov
inc
push
mov
loope
cmp
jge
cmps
add
mov
xor
xchg
arpl
in
retf
mov
ficom
sub
mov
cli
movnti
mov
ret
jmp
jbe
pushf
ror
popf
pop
popf
push
jg
sbb
cs
(bad)
sbb
mov
jne
and
les
aad
loope
mov
jns
mov
and
outs
cmc
push
add
(bad)
test
or
(bad)
sub
not
push
pushf
arpl
enter
lahf
je
mov
jg
jg
or
pop
pop
add
cli
movs
mov
lods
inc
test
inc
outs
mov
push
add
mov
(bad)
mov
repz
xchg
adc
stos
lods
(bad)
pop
xor
adc
add
push
mov
outs
jns
pop
xchg
dec
push
scas
mov
(bad)
mov
inc
cs
xlat
jnp
mov
fdivr
and
ror
ins
cmp
dec
lods
rol
test
out
scas
push
fldcw
test
pushf
cmp
add
or
xchg
inc
push
js
loopne
out
in
mov
or
dec
jmp
das
scas
push
(bad)
adc
jo
aas
in
push
jmp
xchg
shr
aad
into
shl
xlat
xchg
sar
and
repz
xchg
fincstp
inc
retf
jl
out
push
sar
test
inc
loope
leave
jno
inc
call
mov
sahf
dec
fisubr
sbb
xchg
ss
pop
jl
in
mov
movs
and
jle
(bad)
mov
ins
adc
data16
ja
and
dec
cmc
adc
jnp
js
mov
push
push
pop
lahf
dec
les
rcl
mov
daa
ret
sbb
dec
iret
or
sbb
jae
and
mov
inc
jnp
xchg
aad
mov
jmp
push
inc
outs
inc
jp
mov
jle
and
imul
xchg
sbb
cwde
push
add
movs
add
adc
add
dec
cmp
rcl
pop
ja
aam
or
outs
loop
ja
and
psadbw
mov
cmps
aaa
fcom
(bad)
xchg
les
mov
fbstp
(bad)
int
jle
ret
add
push
aaa
gs
mov
mov
dec
(bad)
mov
push
icebp
in
xchg
icebp
push
int3
jae
xchg
xchg
stos
les
sub
push
fdivr
jno
call
add
ret
mov
mov
vminss
shl
lock
xor
loop
iret
hlt
adc
push
(bad)
shl
jae
pop
ret
aad
rcl
in
loope
pusha
out
adc
cli
cmp
and
push
bnd
out
mov
pop
jnp
rcl
ja
loope
push
xor
rcl
mov
xchg
sahf
loopne
sub
mov
retf
pop
jns
pop
repnz
dec
lods
call
pop
retf
and
cmps
movs
das
out
movs
in
std
das
mulps
jmp
push
dec
sbb
mov
les
in
clc
push
ds
jo
js
pop
add
mul
ja
adc
stos
and
fimul
stos
(bad)
sub
cwde
xchg
jns
stos
jae
jle
ss
js
loope
out
sub
ror
aam
cmp
retf
push
lds
cmp
std
imul
out
inc
mov
jg
push
add
inc
cmc
push
mov
push
cmp
movs
jecxz
push
xchg
ss
inc
(bad)
mov
shl
mov
dec
mov
scas
mov
dec
jg
xchg
loope
daa
ret
mov
nop
jo
fdivr
fs
mov
iret
fild
and
sbb
adc
mov
push
jnp
test
push
jge
push
in
and
shl
pop
int
mov
sahf
push
cmp
ret
pop
dec
sbb
xchg
aad
push
repz
mov
xchg
mov
sbb
push
and
or
or
jns
ds
outs
dec
sbb
in
sahf
rcr
popf
cli
out
mov
push
test
jp
xchg
popa
js
daa
das
xchg
add
adc
xor
les
adc
pop
inc
inc
ret
sub
jne
jnp
das
pop
scas
push
das
sbb
dec
inc
imul
mov
(bad)
inc
fcom
mov
rol
add
push
and
cmps
clc
dec
in
xor
xchg
movs
and
aam
(bad)
out
xor
cmps
into
outs
call
popf
sbb
ja
mov
nop
(bad)
hlt
mov
pavgw
ret
leave
inc
dec
cmp
push
je
push
and
ss
ins
jge
int3
pusha
pop
xor
iret
jp
rcr
lds
fstp
dec
mov
mov
add
jbe
xchg
dec
ins
adc
cmps
pop
jmp
xchg
jg
xor
retf
xchg
stos
fucomip
ss
cdq
mov
popa
mov
adc
jne
arpl
pusha
push
call
into
jno
in
cs
fadd
push
sub
fimul
aaa
ror
fcom
test
pop
xchg
mov
jae
clc
mov
xchg
mov
or
in
(bad)
pop
push
mov
sub
frstor
jge
pop
cmps
fcomp
adc
jecxz
cmps
lock
sbb
adc
sar
mov
aas
push
xchg
retf
jg
(bad)
shr
lahf
retf
loop
dec
ret
push
int
jne
mov
add
jmp
psubusb
sub
xchg
aaa
cmp
ins
jns
rcl
ins
shl
xlat
push
repnz
mov
dec
jg
sub
fist
(bad)
int
jb
mov
pop
loop
in
mov
test
mov
in
or
(bad)
lahf
stos
and
dec
push
dec
dec
jmp
je
inc
test
inc
stos
test
sub
dec
mov
jg
sub
movups
pop
mov
clc
faddp
mov
lock
sub
cmp
xor
jnp
cmp
dec
inc
add
pop
jns
out
retf
mov
or
clc
xchg
data16
imul
push
dec
movs
scas
pop
push
shl
lods
sub
adc
ja
(bad)
or
push
fptan
inc
ss
stos
add
fadd
cdq
xchg
sbb
jle
ficom
test
fnstsw
xchg
and
inc
fsubr
push
or
dec
push
in
icebp
pop
mov
mov
jge
ins
mov
pop
pop
and
or
xchg
pop
mov
sahf
idiv
sbb
mov
fs
and
mov
inc
push
out
leave
mov
inc
std
adc
pop
out
push
cmp
hlt
enter
adc
stos
mov
mov
dec
data16
fst
cmp
loope
jp
push
std
mov
dec
into
push
adc
cli
pop
gs
mov
pop
imul
fs
mov
push
mov
dec
mov
sbb
lea
xor
cdq
int
mov
data16
xchg
pop
mov
push
out
and
pop
adc
pop
outs
fmul
out
cmp
call
(bad)
iret
outs
scas
outs
fild
int3
int
ret
shl
pop
call
jl
nop
pop
aad
add
mov
xor
adc
adc
mov
stos
push
call
inc
jb
or
shl
or
inc
pop
neg
mov
fcomp
iret
out
loopne
inc
push
mov
dec
xchg
or
movs
jmp
cmps
lds
mov
and
(bad)
test
outs
push
xor
sub
cs
inc
ficomp
push
into
cmc
xor
xchg
push
jle
fsubr
mov
adc
dec
push
popa
rcl
imul
inc
push
push
jo
dec
sti
lock
add
push
inc
pop
jnp
pop
cmp
ds
mov
bound
jle
in
pop
xor
sub
and
aad
imul
mov
imul
lds
repz
mov
and
xor
dec
ficomp
xor
sub
dec
daa
ins
les
jnp
arpl
nop
cdq
push
loope
movs
inc
ret
test
xchg
mov
aad
mov
jne
cmc
pushf
rol
stos
or
cmp
mov
mov
inc
xchg
xchg
call
pop
mov
jns
retf
xor
inc
jo
pop
jle
jbe
sbb
test
pop
pop
cmps
push
fsub
stos
push
fwait
pop
(bad)
movs
sar
add
xchg
fld
cld
sbb
push
cmc
fs
or
xchg
add
test
cli
aad
std
adc
sbb
mov
push
fiadd
mov
int
xor
mov
sub
dec
daa
(bad)
mov
fsub
mov
ins
std
inc
add
jp
or
sbb
mov
shl
mov
mov
mov
adc
sbb
int
push
jle
dec
ss
jae
add
(bad)
(bad)
xchg
ds
bound
xor
fnstcw
sbb
ja
in
lock
push
or
sbb
movs
push
(bad)
or
pop
inc
pop
mov
(bad)
hlt
test
adc
fucomip
pushf
clc
outs
in
aam
in
or
mov
add
mov
xor
sbb
and
(bad)
iret
pop
xchg
jmp
jne
paddq
add
or
fstp
ins
adc
inc
dec
cmps
and
push
inc
pmaddwd
inc
inc
test
and
fidiv
add
loope
xchg
push
mov
data16
(bad)
scas
sar
gs
neg
retf
pop
add
add
pop
ficomp
pop
dec
das
jge
int
fild
dec
sub
and
pop
mov
adc
mov
pop
scas
sti
jno
cmp
les
pop
cmp
int3
cmp
sub
sbb
aad
cmp
popf
scas
mov
cmp
out
lahf
lea
shl
or
ss
push
or
test
adc
mov
xchg
add
mov
shl
cmp
bts
xchg
test
retf
add
push
or
stos
test
fwait
movs
vmovlps
(bad)
ins
xchg
adc
inc
call
pop
ret
out
mov
jg
sub
lock
fld
(bad)
cmp
sub
cmc
jnp
cmc
sbb
xchg
jl
(bad)
xor
dec
data16
popf
int3
xor
xchg
data16
or
in
dec
fimul
out
mov
sub
addr16
jge
xchg
test
and
daa
imul
and
jp
sbb
popf
push
gs
shl
mov
int3
adc
out
push
mov
cmc
xchg
inc
cmp
push
and
or
dec
call
jns
jae
adc
movs
mov
sub
adc
adc
xchg
lods
test
movs
jp
pop
sub
or
dec
xchg
cld
in
(bad)
adc
push
dec
push
mov
popw
fiadd
jo
push
inc
movs
jne
inc
cmp
xor
stc
iret
lds
jae
sbb
movs
cmp
sub
out
dec
ret
out
pushf
test
push
aam
icebp
push
mov
xor
js
mov
xor
ins
dec
cwde
mov
shl
or
sub
je
or
pop
nop
and
fstp
js
pop
stos
adc
jmp
leave
sub
mov
imul
pop
adc
mov
inc
sbb
xor
adc
mov
scas
xchg
cli
xchg
mov
mov
jg
sub
cwde
loopne
and
cmps
or
or
ins
jae
cmc
jge
mov
or
pop
add
mov
lea
leave
sbb
addr16
repz
inc
and
call
xlat
or
sub
mov
inc
ss
fs
movs
data16
mov
sub
popa
sar
mov
fnstsw
adc
fistp
cmps
test
outs
inc
adc
int
(bad)
jg
push
mov
or
jb
mov
xchg
mov
jge
mov
js
mov
dec
adc
cmps
inc
repnz
jmp
gs
sbb
pop
loop
cmp
mov
adc
jl
push
imul
mov
fdiv
out
sbb
xchg
jne
jp
sub
movs
xlat
pop
ficom
loopne
mov
out
fsub
or
retf
pushf
and
call
in
mov
lahf
vunpcklpd
sbb
daa
adc
mov
(bad)
scas
jmp
xchg
dec
add
xor
ins
fldl2e
lock
ret
or
adc
cmps
jne
mov
cli
aam
cmps
mov
inc
frstor
fcomp
push
cli
push
aad
pop
pop
out
xor
daa
add
leave
cmps
out
lahf
mov
jl
shl
xchg
cwde
cs
gs
sub
pop
push
add
cld
mov
pop
push
lea
enter
outs
jae
dec
stc
scas
inc
xlat
ret
and
les
pop
mov
(bad)
mov
mov
pop
or
mov
jnp
push
xor
pop
push
test
push
sub
dec
call
add
cli
test
fwait
test
shl
mov
shl
pop
std
(bad)
jecxz
fbstp
cmp
fwait
out
sbb
mov
daa
xor
(bad)
xor
ins
add
add
jmp
pop
jae
mov
fcmovb
std
cli
ja
mov
aam
pop
in
enter
mov
movs
stos
ret
scas
dec
mov
js
out
test
bnd
lods
mov
loope
xor
jp
mov
pusha
fist
(bad)
mov
lods
add
rol
call
dec
imul
jmp
xchg
adc
xor
push
std
xor
ret
outs
xor
daa
sub
cli
dec
jge
mov
xor
xchg
cld
xor
std
jnp
jg
mov
pusha
cmps
push
inc
sub
jae
lahf
mov
data16
push
shl
arpl
ror
xchg
out
cli
jb
addr16
shr
loope
sbb
sbb
adc
sbb
js
imul
pop
cmps
push
push
clc
mov
adc
dec
adc
dec
pop
aaa
fiadd
mov
movs
into
mov
bound
movs
push
retf
cmp
adc
inc
loopne
adc
mov
dec
mov
shr
scas
cmp
pop
test
mov
test
push
in
add
dec
adc
cmp
pop
mov
(bad)
ficom
call
push
and
push
in
dec
sbb
pop
push
sub
out
dec
aad
and
and
cmps
pop
inc
pop
mov
ret
popf
popf
adc
dec
movs
out
test
ja
imul
pushf
scas
sbb
adc
fistp
ficom
add
addr16
push
jno
call
pop
cmps
sub
pop
push
(bad)
daa
jbe
imul
or
pop
mov
lock
sub
xor
sbb
arpl
add
cmp
pop
sbb
xor
jecxz
sbb
pop
cmc
movs
sub
dec
mov
xchg
sahf
and
inc
repnz
iret
pop
cs
cmps
cld
xor
push
push
into
pop
push
jno
xor
sbb
xor
jae
jnp
mov
popf
xchg
call
xor
xor
pop
shl
(bad)
sar
fiadd
ss
data16
pop
and
mov
in
movs
sub
mov
jmp
mov
dec
(bad)
pop
loope
jmp
stc
push
ret
dec
fstp
fbld
adc
sar
in
sub
sbb
adc
adc
cmp
neg
xchg
js
lock
movs
adc
test
ins
fmul
xchg
add
add
cmp
repz
xor
dec
xlat
enter
in
xor
out
test
ficomp
int
jp
sbb
adc
fsubr
aaa
push
push
into
imul
es
pop
mul
scas
mov
push
jne
in
ds
repz
(bad)
cmovg
test
mov
std
(bad)
in
or
pop
xchg
sti
sub
xchg
cli
add
cmps
in
xchg
mov
and
sub
in
jae
push
xchg
ss
mov
xchg
jl
es
inc
movs
test
inc
jno
loop
(bad)
int
inc
or
aad
leave
gs
mov
clc
mov
not
inc
scas
ret
xor
jmp
mov
sub
sti
mov
sub
xor
ss
mov
test
arpl
cmp
sbb
ret
xor
pusha
pop
push
pop
cmp
aam
popa
adc
xchg
(bad)
or
dec
jbe
das
dec
daa
jnp
or
mov
imul
popa
mov
push
es
or
sbb
jecxz
std
xor
ins
pusha
in
xor
pusha
adc
and
lods
js
push
jle
mov
sbb
jns
scas
cld
outs
int
sbb
dec
rcr
xchg
dec
mov
inc
mov
div
push
mov
pushf
outs
xchg
aad
mov
fiadd
retf
(bad)
jge
add
nop
xlat
and
into
shl
loope
es
pushf
cmp
sahf
jmp
das
jmp
mov
cmp
adc
cmps
xchg
sub
and
add
call
in
call
mov
jg
mov
sbb
call
push
dec
std
mov
in
xor
fdiv
into
mov
call
enter
cmp
add
xor
shl
loop
and
mov
nop
jne
push
mul
jl
lea
idiv
in
cmp
xchg
mov
sti
mov
es
lahf
int3
push
ret
ins
xor
imul
inc
jne
mov
cmp
(bad)
fwait
inc
push
push
pop
mov
jmp
mov
mov
call
retf
dec
pop
ficom
repnz
retf
add
enter
scas
jb
adc
mov
clc
rcr
pop
das
dec
data16
sbb
jge
call
push
ja
jb
aam
loope
out
mov
call
and
jns
out
add
xchg
(bad)
std
mov
test
stc
(bad)
pop
cmc
popa
xor
add
imul
mov
add
cmp
mov
fmul
xrelease
jg
movs
and
outs
pop
jns
and
test
and
jle
call
imul
xor
rol
mov
xor
mov
fstp
mov
sbb
xor
jne
mov
(bad)
je
pushf
imul
pop
jle
xchg
inc
inc
jmp
pop
xchg
add
mov
adc
jle
xchg
(bad)
mov
add
sbb
cmps
in
ret
hlt
dec
lahf
in
and
pushf
adc
xchg
jo
adc
fucom
in
pop
mov
(bad)
xlat
clc
mov
cmp
cmps
xchg
int
sbb
rol
in
out
jp
ret
jb
push
ja
pop
test
xchg
(bad)
test
inc
jle
jb
push
dec
sub
stos
adc
push
mov
mov
push
jne
pmullw
and
mov
loope
pop
adc
fidiv
imul
mov
fst
sbb
jnp
xchg
scas
xchg
xchg
mov
and
paddq
xlat
fidiv
fst
jecxz
sbb
dec
js
fcomip
pop
fidiv
xchg
in
out
out
dec
in
pop
push
cmp
test
cdq
pop
jno
ret
cmp
ss
mov
jns
mul
pop
sbb
and
jl
shr
fisttp
add
iret
mov
mov
int
inc
ss
push
add
out
mov
jne
retf
mov
inc
xlat
jo
mov
pop
push
xchg
mov
fs
cmps
cmp
sar
add
stc
inc
fisub
push
ins
lea
retf
push
shl
lock
cmp
fild
jmp
or
jg
and
add
xor
bound
mov
jge
idiv
(bad)
aas
sbb
outs
es
loope
adc
outs
dec
(bad)
shr
and
add
xchg
ins
push
jo
mov
inc
movs
(bad)
jp
movs
outs
pusha
jbe
push
in
dec
lahf
popa
movzx
or
iret
fs
xchg
jmp
shl
cmp
sub
ret
add
dec
int
jecxz
and
add
hlt
dec
adc
add
sub
in
xchg
into
mov
add
mov
xchg
mov
inc
push
jns
cmc
fcmovne
outs
stc
xlat
test
mov
test
gs
and
jg
rcl
es
int3
xchg
xor
pop
xchg
mov
xor
retf
ret
jmp
or
mov
out
dec
pop
hlt
int3
add
(bad)
mov
adc
add
call
mov
pop
aam
pusha
ins
adc
xchg
sub
dec
mov
data16
(bad)
out
sbb
mov
xlat
jns
fdivr
dec
push
adc
dec
and
addr16
fstp
mov
jecxz
test
xchg
xchg
loopne
shr
mov
(bad)
aam
fidivr
mov
sti
ret
stos
aad
retf
adc
and
popf
and
mov
mov
aas
test
mov
pop
pop
xchg
stos
rcl
test
out
unpckhps
in
jp
test
xor
test
jle
ds
push
scas
icebp
imul
dec
xor
mov
out
cmps
rol
ins
(bad)
leave
mov
mov
xor
inc
imul
repnz
mov
call
sbb
xor
pop
or
out
out
xlat
(bad)
out
fwait
dec
int3
pusha
sub
in
in
inc
out
sbb
rol
shr
inc
mov
ja
lea
mov
out
mov
jns
xchg
popa
pop
(bad)
dec
repz
dec
and
mov
dec
cmc
les
pushf
jns
les
or
imul
and
daa
mov
sti
cmp
pop
clc
mov
jmp
(bad)
test
fwait
lds
xor
ror
adc
fiadd
sbb
outs
mov
repnz
shl
mov
mov
sbb
fucomip
push
mov
push
mov
jne
xor
pop
retf
imul
or
div
fadd
push
das
sub
ja
xor
pop
adc
sbb
movs
lods
cdq
fild
or
dec
xor
mov
xchg
movs
aam
xor
xor
sar
pop
(bad)
add
xor
mov
jle
fnsave
int3
pop
inc
int3
xchg
pop
xchg
fmulp
mov
into
(bad)
pop
hlt
cli
jmp
movs
scas
dec
mov
jle
inc
jp
sbb
pop
(bad)
jb
or
ret
data16
dec
ss
ds
cmp
ficomp
xor
push
sbb
mov
jle
leave
sub
sbb
add
push
lea
inc
sbb
jmp
jnp
xchg
xchg
aad
adc
leave
sub
inc
inc
scas
push
pushf
pop
xchg
pop
jmp
fsubr
adc
lock
push
mov
scas
iret
shl
sahf
jl
cs
dec
xchg
adc
aam
or
xchg
push
cdq
dec
or
dec
mov
into
dec
push
xor
test
mov
mov
cdq
dec
mov
fmul
xchg
cmps
loop
mov
dec
adc
call
adc
mov
mov
push
pop
mov
adc
and
or
cwde
pop
stos
pop
xchg
mov
add
in
cmp
mov
or
pop
hlt
repz
or
or
addr16
in
sbb
sbb
mov
iret
mov
jbe
and
xchg
jg
scas
lea
je
pop
sbb
fiadd
shl
push
mov
fnsave
sahf
mov
mov
cli
inc
adc
fs
push
dec
dec
mov
add
xchg
push
pop
push
call
hlt
and
mov
nop
imul
clc
jge
lods
inc
dec
jecxz
mov
cmp
in
icebp
fbld
add
or
adc
sahf
(bad)
mov
push
sub
scas
xchg
fimul
or
push
jbe
mov
sbb
mov
aam
push
xor
push
jns
daa
jb
jnp
sub
mov
xchg
call
mul
lea
fs
sub
scas
cwde
cmp
xor
cmp
aas
or
gs
test
mov
sub
push
inc
not
bound
jl
jg
add
jmp
cld
leave
enter
fcomp
and
pop
jg
shld
sbb
pop
mov
xchg
(bad)
retf
aad
inc
out
xor
jl
imul
stc
add
and
leave
enter
dec
pushf
mov
call
movs
jbe
inc
sbb
inc
sub
retf
into
mov
dec
ret
add
add
cmp
or
inc
aad
cdq
cmc
cmps
vmwrite
in
sbb
fmul
sbb
stos
movs
icebp
pop
xchg
data16
les
sbb
xchg
(bad)
rcl
sub
jns
lea
xor
pop
lds
xor
cs
push
test
fst
ds
imul
ins
imul
push
sbb
pop
test
sbb
ss
es
out
ss
inc
sub
add
or
aam
mov
imul
inc
or
push
or
pop
pop
in
call
test
pusha
leave
mov
ins
cmps
xchg
push
xchg
sub
jecxz
sbb
mov
out
pop
xor
inc
mov
push
gs
and
inc
div
addr16
cwde
enter
sub
cwde
stc
out
fdivr
rol
test
and
sub
xchg
int
sbb
or
jl
dec
fs
in
retf
cmp
push
in
cld
xchg
jae
push
adc
test
outs
out
lods
nop
cmp
mov
inc
shl
add
jmp
imul
add
and
sbb
int3
retf
popa
inc
cmps
mov
dec
scas
stos
lds
mov
popa
xlat
xchg
int
fidiv
imul
outs
in
pop
cdq
sub
or
fcmovu
jbe
addr16
popf
imul
shr
fmul
add
aad
xchg
push
loope
pop
fcomp
gs
adc
pop
cmp
fidivr
push
dec
mov
mov
int3
mov
mov
cmp
add
push
imul
loop
into
xlat
jge
push
xchg
add
mov
in
pop
sub
push
mov
(bad)
xor
push
pusha
mov
xor
test
adc
hlt
cmc
jbe
inc
into
xchg
cld
js
mov
test
(bad)
push
push
or
push
cmp
pop
aaa
push
fild
mov
pop
pop
ret
sbb
(bad)
mov
push
mov
aad
pop
adc
dec
add
dec
jmp
mov
pop
jnp
add
pop
stos
dec
enter
mov
push
addr16
outs
push
aaa
out
jae
(bad)
addr16
bt
jno
neg
sbb
ror
xchg
push
sbb
out
mov
lods
loopne
adc
aaa
or
mov
sbb
xchg
or
loope
push
call
aam
(bad)
sbb
out
sbb
push
rcl
pop
bnd
fs
cs
inc
inc
fs
stc
adc
lds
cmp
xor
push
test
cld
rcr
adc
adc
lods
inc
clc
pushf
xchg
test
movs
mul
mov
jecxz
retf
cmp
ret
(bad)
mov
jmp
arpl
(bad)
sbb
mov
repz
xchg
sbb
sahf
outs
jns
sub
ins
and
aam
add
loopne
mov
stc
std
sbb
add
aad
loope
clc
mov
jmp
pusha
bnd
jnp
into
jg
jb
xchg
dec
jecxz
hlt
and
aaa
icebp
sbb
loop
fdiv
gs
stc
xchg
jbe
sti
cmp
sub
sbb
cmp
stos
or
cmp
pop
gs
and
jbe
sahf
inc
retf
test
outs
nop
mov
test
std
mov
sahf
or
out
fdivr
jnp
xchg
adc
or
ror
mov
push
ret
add
scas
xor
adc
hlt
mov
mov
hlt
and
aaa
cmps
dec
mov
add
sub
cwde
addr16
fsub
and
jb
or
retf
cmp
cs
dec
in
sbb
pop
je
and
pop
arpl
sbb
ins
and
jae
es
fdivr
and
dec
push
mov
and
dec
dec
int
lock
cli
scas
xor
sub
mov
jle
xor
sub
adc
cmp
mov
je
sar
sub
sti
mov
sbb
mov
pop
xor
lea
mov
adc
sbb
dec
xchg
popa
not
and
add
in
cmp
mov
pop
mov
add
mov
dec
scas
jg
outs
imul
lea
fild
mov
loope
das
push
mov
imul
jno
scas
je
push
sbb
cmc
ins
xchg
xor
cmp
ret
cmp
sahf
xor
add
push
adc
xor
inc
push
adc
out
push
ins
data16
push
push
push
sub
xchg
adc
ror
std
fst
in
mov
loopne
add
loopne
movs
fdivr
sbb
popa
add
hlt
cwde
adc
in
rol
push
pop
mov
mul
push
xchg
dec
sar
jecxz
das
jle
in
sub
cmps
loope
and
stos
iret
pop
repnz
push
(bad)
ja
pop
add
cmps
adc
aad
and
or
test
mov
clc
jg
dec
jmp
add
popa
and
jns
or
test
jbe
stc
stos
xchg
xor
call
das
repz
popf
sar
bound
test
jecxz
imul
jmp
xor
ror
jecxz
pop
pop
and
push
add
mov
adc
je
adc
or
xchg
jg
(bad)
and
daa
mov
ds
pop
rol
jne
rcr
or
dec
or
call
jle
aam
and
cmp
inc
pop
jg
push
test
or
sti
add
mov
fimul
cli
ins
mov
mov
call
scas
mov
int
enter
push
shr
bound
inc
sub
loope
push
mov
mov
call
cmp
xchg
lods
pop
in
xchg
fimul
jbe
ins
mov
out
adc
(bad)
cdq
mov
mov
and
jae
inc
ficom
mov
mov
nop
jmp
(bad)
lock
(bad)
xchg
cmp
test
cmp
mov
xlat
sahf
mov
pop
fwait
adc
js
bound
mov
add
mov
sub
or
dec
jg
inc
cli
push
repnz
cld
jno
sar
add
int3
push
push
cmp
lahf
fwait
(bad)
xchg
cmps
retf
sbb
out
imul
mov
cs
xor
js
and
cs
sbb
mov
call
scas
jo
pop
out
dec
inc
mov
xchg
aaa
sub
push
dec
cmp
mov
test
pop
nop
add
xchg
jp
adc
fs
aaa
xchg
(bad)
xlat
dec
icebp
pop
add
clc
jmp
or
pop
pop
sub
fild
(bad)
mov
mov
pop
and
jmp
mov
mov
adc
out
scas
xor
xlat
lods
lock
call
dec
cmp
cmp
mov
bound
inc
xchg
in
ds
in
jl
lods
push
push
cmp
push
adc
outs
cmc
xlat
mov
dec
movs
push
or
cs
cmp
(bad)
aaa
xchg
jp
pop
adc
dec
fstp
lock
ss
retf
in
(bad)
mov
adc
popa
push
mov
and
sub
add
sbb
sbb
xor
push
cli
stos
cmps
pop
push
mov
fisubr
or
hlt
fchs
cmc
rol
je
cmps
sbb
test
aam
ss
add
fcomp
pusha
cmp
xchg
in
or
adc
jl
xchg
mov
or
add
repz
in
int
xchg
sbb
pushf
lea
add
fiadd
gs
jno
pop
popa
adc
nop
repnz
xchg
sbb
push
loop
sub
vmovhps
out
dec
push
cmps
mov
push
ret
ror
inc
push
rcl
aas
pop
sub
rol
pop
js
xchg
lods
sbb
jmp
mov
xchg
mov
pop
popf
cmp
and
(bad)
nop
icebp
push
adc
test
clc
pop
jbe
dec
mov
(bad)
push
retf
(bad)
jmp
imul
mov
mov
adc
jbe
xchg
cmp
xchg
cmp
jl
cmp
mov
in
jns
(bad)
js
(bad)
cli
(bad)
in
fild
iret
(bad)
fdiv
xchg
push
inc
test
add
mov
inc
loopne
jmp
xor
(bad)
in
and
and
and
jo
pop
cmp
mov
outs
shl
addr16
leave
pop
or
stos
jecxz
mov
ins
cmps
stos
adc
sbb
fidivr
inc
daa
and
xor
adc
js
ins
jge
adc
repz
or
xlat
xchg
imul
lea
mov
jmp
pop
in
mov
jo
paddsw
add
mov
out
cdq
push
cs
(bad)
cs
push
push
mov
and
aad
adc
jge
and
lock
hlt
mov
enter
shr
ja
popa
movs
pop
jb
ror
and
push
adc
mov
ror
push
mov
cmp
cmp
pop
inc
pop
xchg
out
retf
pop
not
inc
pusha
add
xor
add
imul
jno
enter
stc
loop
stc
and
inc
ret
adc
cmp
ds
sbb
hlt
xor
loopne
outs
sub
loop
aam
adc
mov
mov
mov
in
and
or
lea
sub
das
test
aam
sbb
adc
mov
sbb
xor
ror
(bad)
xlat
dec
mov
adc
and
inc
outs
mov
in
into
outs
stos
sahf
jbe
adc
int3
cmp
aam
mov
jecxz
pop
imul
lods
sbb
inc
push
out
aam
lods
xchg
cld
in
dec
add
test
xlat
xchg
mov
jb
push
sub
sbb
leave
adc
dec
rcr
ret
mov
cmc
jno
jbe
movs
sub
xchg
xchg
popa
and
add
and
