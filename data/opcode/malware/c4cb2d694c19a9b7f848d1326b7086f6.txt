addr16
inc
add
push
push
je
imul
push
imul
aaa
or
push
popa
or
je
ins
verr
pusha
fbld
pop
add
in
jg
sub
in
add
sub
sbb
pop
push
dec
bound
arpl
mov
out
js
or
push
push
jns
je
repnz
out
xchg
ins
cwde
adc
or
outs
imul
outs
bound
(bad)
xchg
pushf
sbb
and
mov
nop
inc
push
fld
fcom
rol
sbb
les
sbb
mov
nop
inc
mov
in
fs
inc
push
test
mov
pushf
cwde
xchg
inc
push
sbb
call
mov
inc
clc
hlt
jl
nop
inc
push
js
sbb
and
adc
or
add
pop
mov
dec
push
call
inc
and
add
mov
and
nop
out
in
xor
ret
arpl
pop
nop
inc
push
sbb
pusha
inc
push
sbb
push
push
push
outs
cs
in
mov
add
push
add
mov
(bad)
(bad)
inc
rcr
sub
mov
mov
ret
(bad)
inc
ror
mov
mov
inc
cmp
jne
mov
mov
mov
sub
fisubr
inc
add
push
mov
mov
dec
pop
test
dec
ins
(bad)
push
or
mov
mov
pop
or
std
idiv
sbb
or
adc
mov
mov
push
push
mov
mov
mov
mov
outs
fnstsw
sub
mov
rol
imul
cld
push
or
push
jne
adc
adc
jle
add
jmp
push
add
cmp
jne
sbb
cld
(bad)
jg
mov
cmp
jne
mov
mov
lahf
mov
add
xor
pop
mov
pop
outs
(bad)
out
(bad)
mov
dec
cmp
jb
mov
add
call
outs
outs
imul
pop
adc
mov
mov
mov
push
cmp
inc
fs
fisubr
dec
mov
add
mov
add
cmp
std
sub
jmp
adc
sti
imul
inc
mov
sub
mov
adc
ror
std
mov
mov
jmp
or
push
sbb
sti
jne
pop
jle
mov
pop
xchg
nop
(bad)
mov
mov
cmp
mov
out
jge
mov
(bad)
dec
and
ins
dec
push
mov
test
(bad)
push
sar
and
pop
(bad)
jge
jecxz
add
xor
add
mov
(bad)
out
or
add
push
dec
push
cmp
jne
js
and
dec
cmp
jbe
test
xchg
fld
mov
(bad)
mov
mov
add
push
and
mov
outs
aaa
out
add
mov
mov
scas
cld
pop
pop
jae
cmp
ja
mov
add
ja
cmp
push
out
xchg
push
add
je
test
or
add
sbb
test
fild
mov
mov
mov
add
adc
push
mov
dec
jns
sub
jnp
stos
adc
mov
mov
mov
and
or
ret
pusha
neg
pop
loop
(bad)
cmp
fsubr
inc
mov
fcomi
sbb
sbb
(bad)
jbe
mov
cmp
mov
jo
push
push
adc
sti
push
push
(bad)
jbe
stc
shr
jmp
ss
jmp
mov
inc
ds
(bad)
mov
mov
sbb
dec
enter
fcomi
sub
inc
test
sbb
fnstcw
mov
out
jae
std
sbb
ret
into
nop
xor
xor
movs
shl
clc
mov
(bad)
mov
xchg
adc
imul
pop
push
jg
dec
mov
push
push
add
out
jbe
push
mov
inc
ds
aaa
sbb
leave
test
mov
nop
jle
mov
mov
sub
mov
add
(bad)
movs
dec
(bad)
jae
cli
ds
loopne
pusha
xchg
add
cmp
neg
push
jne
add
mov
(bad)
fstp
sub
data16
sbb
std
sbb
jne
adc
xor
mov
or
dec
dec
or
lahf
inc
xor
or
jne
dec
mov
sbb
ins
sbb
test
in
or
xlat
cmp
and
lock
inc
dec
or
or
dec
(bad)
adc
cmp
mov
les
sbb
out
cmp
jae
cmp
pop
mov
jae
rol
retf
mov
dec
mov
(bad)
ret
dec
out
data16
mov
pop
adc
or
icebp
cmp
ins
jmp
jl
jp
pop
lea
sahf
sbb
pop
sti
outs
dec
push
mov
push
cmp
pop
xchg
ins
or
inc
pusha
test
or
fs
or
clc
bswap
js
pop
pushf
mov
inc
das
mov
sti
mov
mov
add
push
push
fmul
mov
out
mov
or
lahf
pop
pop
pop
mov
fcomip
retf
movs
xchg
xchg
fistp
sub
in
cs
ret
push
and
add
in
imul
add
mov
add
imul
mov
adc
cmp
mov
les
popa
out
mov
mov
pop
mov
pop
xor
test
jne
pop
mov
fistp
fs
in
fistp
mov
cmp
adc
dec
mov
mov
sub
shr
sti
add
hlt
jmp
bswap
dec
in
div
adc
mov
mov
ins
jl
ret
or
adc
and
shl
or
mov
adc
js
cmp
retf
add
sbb
jg
jl
mov
outs
sbb
int3
dec
adc
or
fidiv
add
(bad)
jmp
ss
cmps
rol
cld
xlat
jg
add
iret
loope
sub
ss
push
or
push
sar
mov
ja
inc
dec
or
ret
(bad)
jbe
pusha
push
sti
inc
sbb
clc
jmp
je
add
inc
cwde
jmp
push
enter
ret
pop
fistp
jae
test
and
jb
push
sti
push
push
(bad)
cmp
sbb
push
jp
mov
fimul
mov
push
fucomip
movs
xchg
add
pop
add
mov
fcom
test
pop
out
push
cmp
(bad)
das
into
pop
xchg
inc
mov
aaa
push
retf
aad
inc
xor
jnp
or
ins
mov
aaa
sub
bnd
clc
sub
(bad)
pushf
sub
adc
dec
pop
lods
inc
xlat
std
or
movups
out
lea
jle
sub
test
lods
mov
sub
pop
or
adc
(bad)
ret
fcomip
jae
lea
jmp
dec
mov
ja
sub
and
add
sub
lods
call
push
(bad)
shr
(bad)
lods
sbb
cmp
(bad)
icebp
(bad)
in
pop
mov
sbb
cmp
inc
or
sub
pop
jecxz
aaa
cmp
in
shl
or
xor
mov
mov
or
in
mov
fs
or
or
sbb
sub
adc
push
add
and
rol
mov
add
or
jo
cld
and
cmp
jae
mov
pop
add
fdiv
repz
ss
push
sbb
push
and
je
adc
add
push
and
(bad)
fsubr
sbb
xor
adc
adc
aaa
into
es
(bad)
out
push
push
movs
sub
sbb
cwde
pusha
add
imul
movs
nop
pop
ret
xor
xor
or
pop
jns
call
cdq
adc
in
adc
or
cdq
jge
or
pop
adc
cwde
xor
pop
pop
pop
test
push
dec
sbb
push
jle
(bad)
outs
test
mov
adc
sbb
or
cmp
mov
xchg
pop
xchg
in
pop
lea
fwait
cmp
movs
sub
jge
adc
sbb
dec
inc
add
add
cmp
lock
mov
mov
clc
das
rol
lods
push
and
(bad)
xchg
inc
jb
mov
mov
pop
mov
imul
pop
mov
push
test
push
cwde
mov
in
cwde
cld
mov
sbb
or
and
and
cmp
cmp
or
(bad)
add
or
(bad)
jl
adc
xchg
mov
jns
add
clc
add
push
jnp
jg
jns
cli
ret
cmps
add
test
dec
shl
sub
sub
jl
hlt
test
test
sbb
xchg
add
cmp
push
mov
mov
add
aaa
dec
mov
out
mov
leave
add
sbb
sti
loope
sbb
pop
dec
or
add
and
mov
cdq
xor
and
dec
mov
and
fmul
pop
jnp
cmps
mov
xchg
jl
mov
push
jmp
(bad)
and
or
adc
mov
or
ret
jno
jnp
mov
inc
or
xchg
dec
push
add
mov
add
pop
pop
loop
mov
sbb
fsub
or
add
and
pop
sbb
cwde
add
movs
dec
sbb
xor
xor
cmp
addr16
or
pop
rol
cld
add
add
ret
sbb
call
adc
or
or
jmp
fs
sub
cmp
inc
push
test
or
adc
lea
test
je
ror
das
push
and
lds
aas
pop
ss
push
daa
add
out
xor
call
lahf
test
push
mov
sbb
sbb
jo
cmp
or
add
add
jge
adc
push
sub
push
pop
jmp
lock
psrld
dec
ror
les
scas
neg
sub
stc
mov
push
lock
test
cmp
fstp
or
sub
adc
cs
jp
sbb
nop
sahf
lds
adc
xor
cmc
mov
add
mov
sbb
lock
and
ins
xchg
leave
xchg
fbstp
dec
ja
(bad)
retf
add
xor
loope
fbstp
popf
push
xor
ret
ror
aas
(bad)
loop
scas
aam
sar
add
loope
sbb
cs
and
pop
cmp
add
or
shr
test
test
sbb
lahf
jae
and
jp
sti
adc
mov
adc
add
ss
ret
push
in
push
inc
push
popa
cmp
or
retf
xchg
and
js
sbb
jp
(bad)
mov
pop
and
aaa
daa
or
adc
cmps
jo
or
ret
adc
into
pop
sbb
add
ror
je
jnp
push
mov
and
mov
cmp
mov
jg
pop
mov
push
xor
shr
in
int3
aaa
xor
jg
loopne
or
out
push
add
ror
or
dec
(bad)
call
inc
add
leave
xlat
iret
enter
fmul
fstp
(bad)
(bad)
loopne
jecxz
in
push
push
push
push
sub
test
loope
pop
mov
ror
dec
(bad)
pop
mov
jmp
cmp
push
inc
sbb
pop
pop
(bad)
outs
mov
nop
add
(bad)
(bad)
cmp
fisttp
jg
je
xor
sub
movs
mov
and
rep
test
inc
je
cld
lea
sbb
sub
adc
sbb
add
pop
or
jmp
les
cld
sbb
add
add
add
and
cmp
jne
cmp
add
icebp
add
out
imul
and
sbb
add
test
popa
sub
jne
mov
or
cmp
icebp
ret
hlt
dec
pusha
jb
and
cmp
clc
(bad)
repnz
push
aam
lea
push
push
dec
enter
out
dec
(bad)
jmp
adc
aaa
pop
rcr
push
mov
add
jmp
dec
or
scas
jo
push
call
add
movzx
imul
add
push
xchg
scas
cld
pop
xor
push
hlt
add
imul
mov
cmp
mov
pop
cmps
fcomp
inc
jg
add
cmp
clc
pop
test
ja
sub
mov
sbb
ins
mov
xor
sbb
push
ds
and
or
ror
mov
jg
(bad)
mov
cmp
ja
inc
outs
loopne
pop
fucomi
and
nop
mov
inc
inc
xchg
push
push
clc
xchg
into
shr
sub
sbb
fnstenv
dec
je
dec
dec
(bad)
lods
aad
or
cmp
lock
jne
jmp
(bad)
(bad)
jg
or
pop
and
je
mov
cmp
jne
dec
je
mov
cmp
ins
stos
sub
jne
or
mov
jge
in
mov
adc
cmp
cmp
jne
jnp
shr
or
add
sahf
mov
cs
data16
aas
outs
add
rep
mov
stos
pop
pop
imul
inc
mov
mul
or
mov
pop
xor
mov
mov
inc
cmp
je
mov
push
sub
gs
je
and
cmps
xor
jge
or
cmp
ja
lea
add
add
das
sbb
(bad)
lods
hlt
jne
dec
popa
inc
jl
pop
xor
mov
mov
sub
lock
sub
jmp
inc
and
mov
jbe
comiss
test
dec
and
jbe
pop
adc
or
dec
fcmovne
add
aad
stos
ret
push
mov
mov
sub
call
dec
jne
pop
sub
mov
xlat
jmp
cmp
xor
imul
push
pop
jne
push
or
retf
add
sbb
mov
pop
pop
sahf
pop
test
hlt
push
or
clc
or
aaa
gs
push
xor
push
jecxz
add
xchg
xor
mov
xor
mov
hlt
movs
das
hlt
push
xor
add
aam
pushf
add
push
adc
out
jg
mov
sar
clc
and
or
mov
push
mov
dec
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
mov
gs
jo
imul
push
dec
popa
jae
push
popa
ins
jne
push
sbb
fldcw
loopne
leave
mov
inc
out
fwait
outs
mov
jl
mov
adc
jle
pop
cmp
sbb
mov
lock
push
int3
dec
fwait
imul
jbe
adc
mov
push
push
fbstp
sub
jae
rcl
pop
pop
sbb
or
mov
popa
xchg
mov
mov
sar
pop
loope
add
push
cld
pop
pop
fsubr
clc
xlat
stos
mov
dec
push
sbb
fsubr
sub
adc
clc
and
out
or
jmp
cmp
sti
outs
lods
pop
mov
or
adc
xor
or
dec
jl
jne
inc
pop
add
add
ror
scas
clc
cdq
repz
push
xchg
inc
xor
imul
(bad)
sqrtps
add
scas
test
arpl
fcomp
jne
repz
pushf
sub
jbe
jo
inc
push
jecxz
add
cwde
adc
je
jmp
pop
(bad)
in
mov
fadd
call
pop
aaa
pop
mov
mov
push
imul
(bad)
cdq
adc
or
mov
pop
pop
pop
(bad)
test
sbb
push
and
jo
jbe
pop
jl
adc
push
clc
inc
test
(bad)
sbb
sbb
cli
in
push
mov
imul
push
push
push
into
push
lods
inc
or
sbb
pop
shr
loopne
dec
ret
or
jae
jnp
ins
jg
dec
hlt
(bad)
in
pop
push
push
adc
cmp
stos
mov
cmp
je
add
and
mov
jno
add
sbb
pop
xchg
loope
mov
pushf
sbb
pop
loop
jbe
(bad)
nop
cmp
in
call
test
or
inc
cmp
and
dec
mov
adc
xor
sbb
mov
test
or
addr16
dec
lods
mov
dec
sub
jo
xchg
mov
sbb
and
jne
push
cld
mov
pop
inc
bound
inc
push
mov
xchg
sbb
pop
add
inc
add
daa
dec
stos
dec
and
xchg
repnz
cmps
arpl
pop
inc
or
adc
and
add
pop
mov
xor
pop
or
jne
or
or
inc
(bad)
sbb
lods
aas
xbegin
pushf
fdivrp
in
dec
in
pop
xor
mov
repz
inc
pop
sbb
je
jg
xor
jne
int
int
jge
dec
jne
jmp
ret
loope
dec
sbb
dec
aaa
sbb
or
or
xor
cs
xor
xor
das
(bad)
or
xor
xor
aaa
adc
lock
cmp
add
inc
add
mov
mov
or
push
fwait
rcl
ins
sub
jp
push
push
push
push
push
sysret
dec
ficom
out
addr16
cs
xor
dec
retf
inc
cmp
mov
pusha
add
jp
(bad)
lahf
or
xor
fiadd
addr16
mov
outs
lea
pop
fist
and
mov
pop
sub
call
dec
adc
sbb
mov
sub
add
sti
retf
and
or
cmp
je
cmp
push
cli
aas
fmul
sub
adc
pusha
add
xchg
dec
aas
add
adc
push
cmp
ins
fcomi
je
sub
add
mov
cmp
adc
sub
int
and
mov
jmp
mov
pop
cli
mov
jmp
mov
push
mov
jmp
mov
dec
mov
jmp
adc
aam
dec
js
mov
and
pop
pop
xchg
jne
and
dec
or
xor
sbb
push
dec
cmp
sbb
xor
test
fild
stos
andps
sbb
ret
add
es
fnstcw
push
sbb
push
adc
dec
aas
inc
shl
push
int3
dec
mov
pop
enter
or
bound
enter
test
lock
push
or
add
test
push
push
mov
jecxz
add
add
shl
clc
fdiv
ja
jle
dec
mov
inc
fiadd
xchg
rcl
jg
add
js
xchg
jmp
mov
and
mov
addr16
mov
xor
(bad)
jbe
js
xor
cmp
jle
in
in
rol
int
mov
pop
cmp
jg
jne
fiadd
lock
inc
add
cmp
and
(bad)
and
or
mov
mov
(bad)
ficomp
dec
lea
outs
xor
add
mov
pop
inc
imul
dec
(bad)
repnz
cmp
lods
adc
inc
pop
test
pop
out
outs
jge
dec
or
shr
jne
jmp
hlt
fcmovne
out
sbb
push
add
mov
mov
jl
movs
mov
jb
fcomip
je
sbb
inc
leave
add
mov
js
pop
mov
push
cmp
mov
push
rol
jecxz
call
adc
pop
cmp
fst
xchg
or
mov
loopne
fcom
scas
inc
clc
add
jmp
pop
inc
pop
dec
jo
scas
push
cmp
or
sub
push
pop
(bad)
adc
int3
jbe
mov
adc
mov
push
add
push
ss
pusha
jne
call
or
js
cmp
pop
pop
mov
add
sti
cli
pop
jmp
(bad)
mov
je
outs
outs
jae
inc
outs
jo
jb
and
or
jmp
sub
and
cmp
xor
aaa
and
lea
daa
pop
and
ret
enter
(bad)
pop
lods
std
mov
imul
add
clc
dec
jl
mov
inc
inc
cmc
jne
fwait
iret
and
pop
(bad)
mov
sub
mov
mov
fld
cmp
dec
sbb
or
dec
cld
xlat
xchg
sub
xchg
(bad)
cmp
fcom
dec
sti
inc
or
push
fnstcw
(bad)
jle
sbb
cmp
cvttps2pi
into
clc
push
mov
fnstcw
ror
(bad)
test
stc
xchg
push
pop
xchg
mov
add
mov
nop
inc
push
and
mov
fdiv
clc
push
(bad)
pop
push
jg
(bad)
and
addr16
scas
jge
inc
add
dec
or
cmp
sub
lods
movs
pop
sahf
add
jo
or
xor
add
lock
adc
inc
or
jg
dec
push
movs
dec
mov
sub
fwait
adc
adc
push
and
je
mov
jns
aad
add
fisubr
call
xchg
jmp
sbb
cmp
and
ins
jg
pop
pop
add
xor
jmp
add
dec
mov
cmp
pop
mov
push
stos
shl
lods
inc
test
push
repnz
lods
not
vaddpd
mov
popa
ins
pop
add
xchg
push
test
dec
jnp
aas
adc
add
std
mov
jns
push
cld
add
cmp
mov
retf
je
dec
adc
adc
mov
rep
iret
inc
mov
ins
mov
adc
jle
mov
inc
es
ror
(bad)
dec
pop
cld
add
(bad)
(bad)
in
fdiv
dec
fdiv
cli
bound
push
push
fsub
lahf
outs
dec
clc
inc
mov
mov
jmp
push
push
xchg
ds
adc
add
dec
ret
cmps
inc
pushf
mov
adc
dec
repnz
add
push
fstp
add
dec
inc
adc
cmp
lea
imul
push
cmp
(bad)
(bad)
push
mov
push
rcl
loopne
cld
pop
ja
ret
jmp
mov
pop
dec
dec
add
pop
dec
add
cs
stc
or
add
pop
xor
mov
or
and
cmp
adc
sub
lods
jbe
out
fstp
loope
cmp
push
and
sbb
adc
fs
inc
pop
push
repz
ins
cmp
daa
sub
int3
xchg
popa
dec
(bad)
mov
movs
(bad)
pop
add
xor
push
inc
sub
es
jl
imul
cld
cmp
jge
sub
dec
jl
cdq
pop
out
aaa
js
push
iret
and
sub
in
shr
sub
adc
stos
and
das
jo
or
out
sbb
gs
jl
cmp
ds
in
(bad)
and
icebp
cmp
jle
and
stc
add
lea
jnp
into
(bad)
(bad)
not
dec
sub
cmp
pop
mov
cld
push
jle
js
mov
inc
mov
cmp
adc
push
das
cmps
mov
push
fdiv
cli
jmp
cmp
clc
xor
iret
(bad)
xor
dec
dec
test
jne
push
je
ficomp
or
loopne
nop
pop
xchg
or
add
sub
(bad)
in
xchg
and
icebp
jl
ss
and
sbb
stos
sub
movs
inc
pop
jb
mov
in
test
ja
imul
retf
dec
clc
ret
cmps
(bad)
imul
mov
mov
lds
sub
dec
push
push
inc
pusha
or
mov
and
jne
loop
fstp
daa
aas
pop
xchg
adc
out
adc
je
jae
inc
add
sub
push
mov
int3
cmp
push
adc
adc
and
fwait
sbb
push
sbb
adc
and
ja
ins
mov
in
jmp
mov
push
or
lea
(bad)
stc
mov
mov
sbb
push
sub
add
fs
inc
add
sub
sub
pop
add
xchg
adc
in
inc
add
inc
sub
add
dec
add
movs
add
cmp
das
add
sub
mov
and
test
push
cld
mov
sub
dec
and
fild
or
or
push
mov
call
pop
or
in
cmp
push
mov
or
mov
(bad)
scas
int
and
adc
imul
sbb
sub
clc
or
add
je
retf
pop
jmp
push
add
je
js
mov
aaa
jmp
div
cmp
jmp
or
or
test
out
jmp
push
mov
out
or
add
dec
cs
jp
sbb
pop
mov
sbb
dec
add
pop
lock
add
xchg
adc
(bad)
sub
ss
cmp
(bad)
and
iret
repz
dec
push
imul
aam
pop
mov
push
inc
jg
stc
mov
add
arpl
pop
pop
push
sub
adc
or
(bad)
out
jmp
or
jns
sub
mov
or
mov
cmp
jo
sti
mov
cld
movs
lock
ss
sub
jle
ret
add
adc
cwde
sti
aaa
pop
je
pop
ficom
stc
xor
je
or
lods
stc
out
arpl
mov
add
fiadd
inc
mov
xor
push
sub
pop
lea
or
pop
xor
adc
xchg
ss
retf
add
loope
mov
mov
cs
pop
(bad)
pop
pop
add
mov
cmp
sbb
jb
pop
cmp
fild
dec
jne
adc
imul
add
enter
dec
pop
(bad)
mov
mov
(bad)
sub
xchg
int3
repz
push
jno
test
ficom
fld
sti
es
inc
dec
jne
jmp
adc
in
mov
xlat
and
adc
fiadd
ret
dec
ins
lar
mov
push
or
add
add
and
jmp
pop
stos
fstp
inc
add
pop
add
ror
adc
xchg
iret
xchg
shr
loopne
imul
fidiv
sbb
pop
xor
gs
xlat
and
int
iret
aad
gs
dec
pop
sbb
sub
stos
and
ret
pop
sar
retf
pop
jg
mov
enter
addr16
sahf
inc
enter
or
sub
push
ins
adc
cs
pop
fxch
pop
sbb
push
inc
add
jo
pop
sbb
lock
loopne
sbb
addr16
aam
mov
arpl
ja
aaa
jp
test
cli
or
cmp
cmp
data16
shl
or
test
ret
in
or
cmp
sbb
cmp
fnstenv
std
das
call
aad
cmp
jae
xchg
or
push
or
or
sub
cmp
sbb
add
push
push
lods
pop
add
fnstcw
ins
ret
push
fst
xor
call
cmp
sub
and
or
shr
nop
(bad)
div
adc
sbb
or
ins
jmp
xor
xor
mov
(bad)
addr16
sub
push
lea
dec
xor
xor
data16
dec
or
cdq
sub
ins
jmp
daa
and
lock
add
mov
call
in
data16
pusha
stos
fld
inc
or
fnstenv
inc
bound
addr16
pop
aaa
mov
jbe
or
xor
sub
cwde
adc
sti
inc
popa
shl
mov
inc
mov
imul
inc
das
test
mov
sti
pop
dec
int
leave
xchg
add
mov
enter
pusha
pop
inc
sub
dec
dec
pop
xchg
test
jns
push
pop
push
aam
add
je
mov
add
cmp
push
jnp
in
adc
loopne
add
jl
xchg
mov
inc
adc
mov
or
xor
add
jmp
fld
rcr
shl
dec
or
mov
add
push
data16
add
jns
setg
ss
in
ficomp
je
add
fstp
fstp
ret
fisttp
pusha
xor
xor
add
add
outs
repnz
push
fild
lods
popf
int
ficomp
fist
sbb
popf
or
xchg
mov
dec
add
lea
movs
and
jb
scas
mov
dec
cmp
ja
add
neg
or
cmp
sbb
ret
sbb
push
sbb
clc
fstp
fwait
inc
pop
push
add
js
inc
push
sbb
push
shl
dec
(bad)
sbb
push
daa
xor
les
cmp
pop
nop
lahf
cs
mov
xor
xchg
adc
ins
push
in
xchg
popa
inc
shl
push
out
mov
or
rcr
test
inc
clc
mov
lds
adc
inc
pop
(bad)
retf
mov
or
int3
cwde
inc
loopne
add
or
popa
push
mov
or
jbe
inc
mov
mov
add
jo
call
mov
jb
jmp
xchg
dec
mov
mov
jmp
dec
mov
mov
in
pop
pop
ret
cmp
fimul
sbb
jo
sbb
sub
jne
sbb
add
or
add
cmps
jmp
add
add
jl
call
add
jo
sub
ret
imul
jo
rcr
rcr
mov
fild
shl
add
and
add
inc
fbstp
add
cmp
movs
iret
add
cmp
mov
scas
imul
and
xchg
inc
(bad)
(bad)
cmp
jnp
arpl
inc
or
jae
xor
add
outs
adc
(bad)
fild
leave
push
jmp
mov
pushf
xor
test
je
mov
fmulp
jmp
and
sahf
mov
sbb
scas
push
ds
add
pop
faddp
ret
fsubrp
add
stc
or
popa
and
bound
fistp
or
or
fdivr
xchg
inc
fcomp
add
xchg
inc
mov
pop
jb
mov
cmp
cmps
loope
mov
aaa
lea
ret
ror
jle
nop
retf
imul
add
add
cmp
cs
setb
jl
sub
dec
call
sub
(bad)
in
sbb
ficom
dec
jae
cmp
mov
add
and
mov
clc
dec
jbe
cmp
jne
jmp
mov
sbb
loopne
or
jo
fdivrp
xor
jo
xor
inc
out
sub
push
push
clc
dec
add
int
ins
add
call
push
retf
call
sbb
or
add
and
int
dec
clc
enter
pusha
dec
pop
je
add
push
hlt
jle
pop
adc
cmp
les
or
jmp
popa
or
add
sar
jge
iret
(bad)
fdiv
or
cmp
sbb
dec
nop
in
in
push
je
aam
fs
push
adc
fld
and
js
mov
outs
lods
popa
jb
xchg
(bad)
and
or
ins
gs
js
sub
out
(bad)
pop
xchg
pop
call
dec
rcr
xor
ds
mov
ss
mov
and
sahf
arpl
mov
adc
sbb
sbb
push
fadd
cmps
cmps
test
daa
jmp
dec
inc
mov
cmp
or
cmp
and
push
or
push
xlat
dec
mov
out
push
mov
cmp
loope
call
int
push
int3
mov
jb
out
or
imul
sub
enter
call
icebp
cmp
sar
sti
cmp
and
inc
jmp
mov
jo
loope
sbb
push
add
adc
push
mov
inc
or
icebp
mov
xchg
pop
mov
xchg
fsub
add
aad
push
call
sub
mov
dec
shl
push
or
fist
lock
add
cmp
jmp
xchg
inc
push
sbb
sbb
sub
adc
pop
pop
mov
jne
fstp
(bad)
jmp
push
dec
cmp
hlt
xchg
fnstsw
inc
sub
ret
in
ins
je
ret
push
fistp
or
sbb
leave
rcr
(bad)
pop
push
push
leave
arpl
add
jl
pusha
lahf
pop
xor
idiv
push
addr16
cmc
mov
add
mov
ret
pop
mov
stos
cwde
pop
inc
or
adc
mov
dec
je
add
xchg
ds
mov
cmp
sbb
jge
repnz
jnp
(bad)
xor
repnz
dec
push
and
xchg
imul
sub
push
push
push
lea
mov
pop
mov
(bad)
fcos
sbb
jle
mov
ins
pop
mov
int3
mov
or
(bad)
ss
inc
and
sub
mov
sbb
or
mov
mov
fnstcw
imul
push
cmp
pop
dec
push
mov
call
sbb
xchg
jge
sub
sub
dec
je
out
test
pop
jmp
lds
mov
jmp
cmc
mov
ss
lods
xchg
cmps
scas
cmp
imul
push
sbb
jne
stc
dec
push
ret
sbb
xchg
movs
inc
ret
ret
lea
or
push
or
jecxz
adc
retf
(bad)
jl
nop
dec
inc
sbb
and
push
add
inc
sbb
adc
pop
dec
jne
dec
mov
(bad)
lea
test
mov
fisub
(bad)
idiv
in
push
ss
aam
out
shl
mov
sbb
mov
push
and
add
sub
dec
nop
inc
ds
xchg
sub
rol
les
jae
add
mov
loop
fstp
loopne
cmps
xlat
inc
sub
cmp
repnz
mov
dec
sbb
xor
cmp
hlt
jnp
cmps
mov
xor
sub
std
or
jns
sbb
inc
fwait
mov
jmp
push
test
mov
dec
jb
mov
inc
adc
in
jg
fistp
pop
or
pop
mov
ret
push
or
or
xchg
cmp
add
cmp
pop
add
retf
adc
jl
mov
inc
mov
(bad)
cmp
add
dec
sub
mov
mov
sub
test
in
xor
int
or
iret
out
lds
mov
push
inc
jge
inc
jmp
hlt
push
push
jnp
cmp
in
adc
add
and
mov
add
aas
mov
loop
pop
movs
push
sbb
mov
mov
outs
jmp
mov
or
sbb
jg
mov
add
sub
push
loope
mov
or
rep
pop
adc
pop
fiadd
lods
aam
add
cmp
lock
mov
mov
mov
dec
add
push
aaa
int
std
sbb
cmp
jle
sub
push
mov
std
cmp
loopne
jne
aad
(bad)
pusha
xchg
icebp
dec
push
mov
mov
mov
sub
jle
mov
clc
dec
pop
lock
pop
sbb
hlt
pop
jecxz
fucomp
mov
adc
xchg
ficomp
push
fnstsw
or
add
(bad)
repnz
inc
shl
pop
loop
adc
fcomp
cmp
leave
jmp
mov
xor
mov
outs
push
cld
imul
fisttp
pop
push
or
repnz
not
call
sub
xchg
mul
mov
stos
dec
sbb
push
jl
inc
movs
adc
lea
jnp
xor
lea
imul
call
(bad)
retf
out
in
pop
push
push
add
add
inc
in
fcom
pushf
sbb
inc
jge
inc
sahf
sub
stc
loopne
enter
dec
pop
fld
out
inc
es
jnp
add
nop
xchg
mov
cli
or
pop
jns
pushf
or
ret
mov
adc
in
aas
adc
sbb
imul
push
stc
xchg
lahf
stc
add
mov
sti
iret
outs
sbb
out
xchg
sub
sub
jmp
xor
leave
sbb
mov
int
inc
jbe
imul
cmp
mov
(bad)
mov
bound
dec
lods
inc
cmp
xlat
fadd
outs
xor
xchg
call
aas
push
push
int3
into
sbb
ror
mov
push
pop
test
inc
sbb
and
daa
(bad)
retf
into
pop
jg
(bad)
(bad)
jg
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
leave
repnz
bound
(bad)
(bad)
jmp
add
inc
sahf
mov
sub
inc
aad
iret
dec
js
inc
(bad)
(bad)
inc
fwait
lds
stos
mov
cmp
or
mov
pop
out
sub
(bad)
(bad)
jmp
imul
(bad)
div
jl
xor
cmp
call
mov
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
nop
(bad)
xchg
(bad)
inc
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
ins
pushf
cld
pop
pushf
(bad)
(bad)
(bad)
dec
repz
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
sar
inc
pop
or
add
cmp
(bad)
jg
aaa
sar
xchg
pop
cmps
lock
mov
popa
mov
(bad)
jmp
mov
(bad)
repz
mov
sub
and
call
push
push
pusha
les
bound
xor
jo
and
pop
cli
sbb
mov
out
push
add
movs
push
add
push
mov
loop
push
inc
imul
repz
jg
mov
shr
adc
rol
rol
jo
add
dec
mov
leave
rcr
shr
inc
jmp
jg
or
push
add
fcmovb
adc
add
mov
pop
xchg
call
push
jmp
push
sbb
sub
inc
pop
aaa
or
or
mov
loopne
adc
arpl
xchg
adc
pop
mov
dec
ror
lods
outs
xor
out
sub
cmp
add
dec
mov
push
inc
inc
add
add
cmc
pop
or
clc
int3
sbb
sub
xchg
imul
add
add
mov
imul
sbb
xlat
xor
xor
sub
xchg
inc
push
sub
mov
aaa
adc
cmp
loop
sti
cmp
sbb
or
sti
jle
pop
mov
sbb
or
mov
js
(bad)
mov
sbb
or
push
scas
add
sub
fwait
jge
jmp
mov
xchg
jge
test
adc
ret
adc
push
test
push
cmp
and
retf
add
pop
lea
jno
or
push
add
outs
hlt
inc
xor
(bad)
push
sbb
add
adc
jl
pop
xchg
dec
ret
inc
cmp
mov
xchg
pop
lock
js
or
xor
mov
and
mov
and
and
xchg
or
mov
jl
js
je
jo
daa
dec
sahf
cmp
mov
pusha
xor
leave
xchg
mov
enter
push
dec
dec
and
cmp
or
enter
sub
xor
and
and
xor
and
and
xchg
or
add
mov
cld
mov
in
mov
call
mov
xchg
mov
enter
int3
enter
or
sar
mov
test
xor
and
sbb
or
mov
jl
xchg
enter
mov
pop
mov
or
in
and
aam
or
enter
les
enter
mov
mov
lods
enter
test
mov
pushf
cwde
add
pushf
sbb
nop
add
cld
movs
clc
xor
and
and
and
aam
or
enter
les
enter
mov
mov
lods
enter
test
mov
pushf
cwde
xchg
or
nop
mov
and
and
and
and
push
or
push
dec
dec
inc
or
enter
cmp
enter
xor
xor
nop
inc
push
sbb
adc
push
sbb
or
cld
mov
xor
mov
shl
out
hlt
adc
ret
adc
clts
ins
out
add
and
adc
mov
and
push
fisubr
std
dec
js
push
cmps
imul
sbb
ins
call
scas
mov
pop
pop
ret
xor
xor
sbb
pusha
add
mov
dec
pop
les
pop
les
push
fs
push
test
mov
outs
fs
enter
or
arpl
fs
cmp
outs
outs
and
or
int3
and
pop
or
movs
xor
pusha
inc
pop
adc
enter
xor
ret
xor
pushf
ror
leave
outs
scas
xor
sbb
xchg
pusha
int3
dec
pusha
push
gs
xchg
and
std
jb
push
mov
ret
fsub
test
add
add
(bad)
and
dec
test
cmp
and
add
stos
mov
or
mov
popa
mov
pop
adc
pusha
call
jae
inc
dec
jne
dec
dec
gs
nop
mov
jns
push
dec
push
ja
xchg
push
inc
jb
dec
xor
or
xor
add
dec
imul
add
enter
popa
pop
and
dec
inc
inc
imul
outs
nop
cmp
bound
push
popa
outs
addr16
push
xor
or
mov
xchg
data16
outs
ja
pop
dec
pop
fdiv
dec
popa
je
call
arpl
arpl
dec
outs
jbe
ins
imul
inc
leave
ins
xor
mov
gs
push
add
and
add
push
outs
or
dec
outs
dec
pop
pop
ret
jnp
das
push
outs
imul
dec
mov
or
popa
jae
fs
xor
lock
inc
inc
xor
push
inc
gs
and
dec
inc
adc
arpl
jae
push
xchg
mov
xchg
gs
gs
jb
mov
cmp
gs
nop
loopne
loopne
jecxz
dec
push
inc
push
je
arpl
nop
xor
leave
mov
sub
ds
in
inc
cmp
sub
pop
pop
mov
(bad)
dec
sbb
loopne
ja
inc
adc
sbb
jb
cs
push
repnz
fbld
addr16
imul
xchg
fs
leave
push
(bad)
fbstp
push
cmp
int3
jb
clc
nop
les
les
enter
data16
push
mov
outs
xor
enter
outs
lock
icebp
and
hlt
or
cmc
div
clc
or
enter
sti
xor
and
and
and
in
or
enter
call
jmp
and
and
and
aam
or
enter
fmul
enter
(bad)
enter
fstp
enter
ffreep
shl
or
ret
or
(bad)
enter
and
retf
enter
int
enter
iret
mov
and
mov
or
enter
mov
mov
and
and
cmc
outs
inc
cmps
lahf
mov
div
mov
mov
add
movs
(bad)
call
mov
sbb
pop
int3
or
pop
pop
xchg
push
dec
push
repnz
retf
mov
jmp
(bad)
mov
(bad)
push
add
push
cmp
ja
sub
mov
inc
inc
dec
rcr
mov
mov
leave
add
push
inc
fwait
mov
or
push
cld
sar
mov
cmp
jbe
cmp
repz
je
mov
call
lahf
fist
dec
mov
(bad)
(bad)
out
and
mov
je
movzx
xlat
sub
pop
push
mov
or
pop
cmp
fst
cwde
retf
inc
sub
ret
xor
mov
adc
sbb
push
ins
mov
push
sub
mov
ret
pop
or
or
xchg
stos
pop
fstp
aaa
xor
add
push
mov
aam
inc
repz
add
cmp
jbe
or
mov
lods
(bad)
adc
clc
xor
into
sub
inc
pop
cmp
movs
pop
pop
rol
add
das
push
mov
xor
je
fistp
test
and
mov
sti
mov
inc
lahf
xchg
ins
mov
jmp
adc
xlat
push
add
in
clc
out
adc
es
cmp
(bad)
mov
dec
outs
mov
loope
sbb
xor
sub
jle
mov
or
pop
add
scas
outs
fbstp
mov
sub
mov
sbb
js
add
sbb
adc
xchg
xor
xor
mov
xabort
adc
rcr
lock
test
add
cld
add
and
push
mov
aam
cmp
stos
mov
jae
and
sub
add
ret
push
lock
push
gs
test
adc
sbb
add
pop
add
mov
ret
jge
push
push
push
scas
stos
mov
or
je
mov
push
and
or
xor
adc
out
adc
fdivr
mov
and
mov
push
and
enter
mov
dec
or
out
js
push
sub
add
adc
mov
xor
pop
dec
push
jae
out
mov
add
in
push
lea
add
sbb
jne
das
and
fldcw
enter
(bad)
push
cmp
mov
jnp
cld
push
add
or
sti
adc
setne
mov
xor
push
and
sub
or
fist
jmp
lea
xor
mov
cld
and
adc
and
loopne
xchg
lea
add
mov
cmp
and
inc
mov
adc
arpl
movs
mov
fldenv
push
mov
push
addr16
or
cmps
mov
inc
je
shl
adc
mov
mov
imul
and
je
aaa
sbb
sbb
push
push
lods
loop
sub
dec
xor
sbb
ja
and
add
es
inc
lahf
add
or
push
jmp
cmp
adc
add
dec
lds
(bad)
stos
pusha
pop
leave
bswap
adc
mov
inc
sbb
xchg
jae
shl
movs
push
clc
dec
push
dec
dec
daa
jg
inc
or
stc
xchg
mov
leave
mov
mov
aad
enter
iret
jno
mov
add
shl
out
sub
add
cmps
pusha
add
scas
sub
mov
in
sbb
jno
xor
out
add
fisttp
pop
movs
sar
in
cmp
adc
arpl
mov
sub
add
lahf
inc
jl
in
add
test
push
mov
and
pop
and
out
pop
jne
sub
jmp
loopne
(bad)
pop
or
add
pop
jge
inc
sub
imul
arpl
dec
or
jb
adc
call
loope
add
pop
fs
and
sbb
mov
and
push
aas
and
and
xchg
es
or
cmp
sbb
mov
(bad)
call
enter
in
mov
jmp
loope
movzx
rcl
add
dec
test
or
mov
in
fwait
mov
mov
sub
leave
sub
neg
repnz
mov
aas
mov
or
imul
test
push
daa
adc
movs
lahf
movs
aaa
jns
dec
dec
call
cmp
scas
and
movs
or
sbb
leave
imul
jmp
enter
or
out
or
(bad)
mov
repnz
mov
adc
shl
and
paddw
lea
add
cld
push
frstor
cmp
push
not
mov
dec
retf
push
fmul
daa
inc
mov
and
adc
jns
inc
sub
sub
mov
fnstcw
mov
test
xor
xor
mov
mov
sub
xor
or
xor
adc
rol
js
jne
mov
inc
aas
iret
mov
jne
cli
cli
jmp
rol
repz
add
leave
clc
dec
fwait
or
push
fild
pop
inc
lods
cmp
and
(bad)
sti
cs
mov
movaps
jbe
push
(bad)
lock
push
mov
lods
ret
enter
lods
gs
dec
mov
sbb
xchg
push
ret
add
sbb
sbb
repz
adc
lea
fs
inc
test
arpl
add
adc
xchg
xchg
clc
cmp
jle
pop
mov
ror
movs
cmp
inc
dec
mov
mov
push
push
sub
sbb
je
and
fdivr
je
mov
loopne
sub
pop
shl
ret
sub
js
je
dec
out
mov
(bad)
mov
lods
push
mov
pop
fldenv
hlt
lock
into
or
and
jge
pop
inc
sub
imul
inc
in
mov
or
in
jbe
fisubr
or
jo
addr16
enter
or
mov
rcl
loopne
jne
push
push
jge
mov
mov
jae
fild
xchg
mov
jae
rol
movs
xchg
or
cmp
stos
or
in
dec
sub
push
fild
pusha
mov
dec
mov
sub
xor
not
jg
ja
imul
aas
xor
pop
sub
sub
ja
push
mov
adc
pop
mov
fmul
popa
sbb
je
fsubr
addr16
mov
sbb
imul
xor
and
sbb
and
ret
or
add
sub
jns
xor
adc
data16
mov
sbb
test
in
mov
pop
imul
shr
hlt
cmp
je
add
inc
cmc
in
je
pop
jne
mov
cli
pop
jmp
push
dec
leave
ret
add
pop
or
mov
not
sbb
jb
pop
pop
sbb
or
ins
lea
rcl
out
jb
sub
jbe
mov
aaa
sbb
cli
ret
pop
push
jne
lea
fs
jmp
ret
ja
ret
pop
xor
in
hlt
jmp
xor
and
stc
jae
adc
enter
xor
hlt
add
sub
aaa
lock
xor
fsub
in
lock
xor
or
or
scas
add
dec
add
vphaddwq
adc
xor
stc
mov
pop
push
sbb
jb
(bad)
lods
loopne
fld
fisttp
mov
xor
xchg
fistp
add
inc
je
mov
inc
je
mov
pusha
fisubr
je
dec
cmp
adc
mov
add
ret
adc
jne
ret
adc
adc
mov
mov
adc
mov
inc
jmp
repnz
xchg
push
clc
pop
popa
and
div
stos
inc
jo
adc
jecxz
xor
sub
repnz
test
mov
xor
arpl
cmp
push
ins
xor
(bad)
repnz
test
call
ret
mov
pop
scas
test
or
adc
test
mov
ret
cli
add
sub
cmp
jge
fnsave
jmp
imul
jp
or
outs
scas
fs
pop
sbb
ret
jmp
add
dec
xor
outs
push
sub
dec
in
inc
cmp
mov
mov
dec
sbb
out
lea
hlt
push
mov
xor
adc
fwait
sub
fistp
fistp
or
mov
sbb
div
lahf
fisttp
jmp
or
adc
mov
mov
addr16
test
inc
push
sbb
add
aad
test
stc
inc
(bad)
call
mov
outs
stos
imul
shr
jmp
or
call
or
iret
fild
sub
addr16
rcr
sbb
pop
popf
mov
out
pushf
ins
add
push
xlat
(bad)
in
add
inc
mov
in
hlt
mov
in
jnp
push
sbb
mov
sbb
imul
mov
push
hlt
mov
jns
mov
hlt
and
clc
jnp
push
adc
xor
std
aad
jb
push
add
mov
int3
push
retf
(bad)
mov
lods
and
loopne
(bad)
add
iret
adc
call
ins
sbb
shr
test
dec
or
cmp
fnstcw
mov
(bad)
lock
mov
rcl
inc
sar
lahf
mov
mov
std
or
pop
data16
pop
(bad)
sbb
adc
xor
mov
add
or
adc
js
inc
mov
mov
sti
ins
js
cbw
aas
(bad)
lods
sti
inc
(bad)
ja
or
jle
and
dec
(bad)
cli
mov
test
not
call
push
(bad)
clc
add
sub
pop
lods
sbb
mov
add
xor
add
out
inc
jne
xor
std
std
mov
fcmovne
jge
nop
adc
(bad)
ins
pushf
sub
sub
call
mov
(bad)
jg
mov
pop
jns
pop
add
dec
outs
icebp
dec
retw
test
jl
sub
(bad)
fcmovb
not
jge
call
and
lock
mov
cmp
fucomi
out
call
add
fs
jb
jo
dec
not
sbb
sub
add
fiadd
adc
mov
xor
lods
in
outs
dec
dec
dec
mov
gs
cmp
jb
or
imul
xchg
imul
clc
and
inc
sbb
cmps
sbb
xchg
cs
js
mov
inc
stos
cmp
cmp
push
mov
(bad)
push
add
or
push
xor
add
or
test
sbb
sub
push
xor
sahf
sbb
xor
add
push
loope
and
pop
cmp
fsubr
or
inc
and
push
push
mov
mov
cdq
fidivr
shl
cmp
pushf
xchg
adc
unpckhps
lea
mov
pop
cwde
sbb
or
fdiv
out
outs
test
pop
ins
loopne
mov
push
aad
int3
inc
(bad)
jbe
in
pop
call
adc
mov
xchg
mov
sbb
push
inc
fwait
jnp
add
xchg
call
adc
sti
je
rcr
inc
hlt
mov
sub
or
stos
push
mov
or
dec
out
add
ins
call
mov
cmp
jecxz
and
arpl
out
jmp
jecxz
mov
call
and
lods
ficom
rcr
add
mov
or
out
out
repnz
adc
mov
push
ror
cld
inc
jg
xabort
push
sbb
add
xchg
cmps
out
shr
mov
dec
inc
push
hlt
cli
imul
add
rol
and
add
and
nop
pop
enter
xchg
jb
and
pop
xchg
sbb
xchg
or
(bad)
lods
cmp
test
popf
shr
fimul
sti
mov
dec
es
mov
ret
sbb
fsub
pop
in
jecxz
stos
and
sahf
in
inc
je
xor
je
xor
in
gs
jl
mov
add
push
adc
sub
jns
sbb
loope
xor
ret
inc
clc
test
cmp
jne
push
inc
enter
add
add
ins
and
leave
je
inc
jns
add
push
rcl
mov
movs
jbe
jge
mov
les
mov
ins
jmp
ud0
mov
sub
jecxz
lods
jp
jg
(bad)
mov
dec
add
pusha
cdq
scas
mov
sti
leave
dec
ins
stos
loope
int
cmp
adc
xlat
mov
jmp
movs
xchg
js
cmp
pop
cmp
add
xchg
bound
fidiv
inc
mov
cmp
push
or
jmp
or
or
or
pop
add
mov
lods
aas
sti
add
test
mov
mov
jbe
mov
add
jmp
out
xor
jo
pop
push
test
scas
or
movs
ds
mov
cmp
in
and
mov
dec
and
in
call
outs
in
inc
jno
jns
push
push
test
mov
mov
sbb
enter
fs
or
je
fbstp
jmp
movs
push
(bad)
outs
add
push
dec
cmps
mov
and
add
mov
adc
lea
pop
scas
loope
cmp
retf
test
ror
mov
inc
jmp
adc
or
push
jnp
and
std
retf
jmp
add
push
jmp
sub
je
pop
je
jmp
cmp
cmp
test
in
imul
mov
hlt
inc
sahf
daa
adc
sbb
(bad)
inc
add
adc
add
jns
mov
pusha
sbb
push
aaa
data16
push
outs
xor
pop
fucom
jmp
adc
lods
inc
pop
or
iret
add
in
push
adc
adc
mov
sti
das
pushf
and
xor
inc
inc
pop
shr
adc
lock
pop
xchg
or
sub
and
sbb
fild
sbb
mov
bound
add
ret
add
xor
jae
mov
or
cmovnp
dec
add
dec
mov
enter
push
inc
inc
mov
adc
cmps
fmul
call
test
sub
shl
or
cwde
cmp
dec
add
dec
cmp
inc
or
daa
fst
jmp
adc
dec
sbb
jmp
je
adc
jp
or
je
or
fisubr
inc
cmp
pushf
mov
pop
jmp
in
sub
jno
out
jno
stos
mov
jge
mov
seto
inc
dec
das
push
dec
inc
push
sub
or
pop
mov
jp
shl
pop
adc
add
and
sbb
or
mov
mov
or
outs
or
xor
aad
or
pop
add
adc
(bad)
dec
xchg
lods
test
push
dec
ficom
pushf
stos
mov
repnz
or
mov
icebp
pop
pop
mov
jmp
jb
pop
mov
ja
jmp
shl
sbb
add
push
cs
adc
mov
mov
cmp
jl
test
fldl2e
popa
in
mov
inc
add
aad
jle
jmp
inc
dec
and
test
pop
xor
test
mov
jnp
sub
data16
xchg
cmp
ret
ins
xor
lock
nop
ret
shl
lea
sbb
clc
mov
fwait
and
or
mov
scas
rcr
inc
dec
push
jnp
lds
and
in
mov
inc
mov
test
pop
xchg
push
adc
(bad)
add
mov
clc
dec
push
adc
inc
leave
pushf
or
outs
and
add
xchg
jo
jne
dec
nop
xchg
xchg
lea
outs
dec
mov
mov
sbb
aam
inc
inc
gs
in
jecxz
inc
pop
xlat
push
cmp
jbe
cmp
mov
push
sbb
mov
pcmpeqb
xor
aam
fadd
cmp
mov
inc
pop
push
mov
adc
into
scas
pop
mov
adc
xor
inc
xor
mov
sub
mov
inc
pop
add
sbb
popa
jg
daa
sbb
mov
adc
leave
push
mov
cmp
xor
pop
movs
cmp
popf
sbb
daa
popa
test
xor
cmp
loopne
cmp
repz
cmp
push
shl
dec
inc
je
fnsave
mov
xor
xlat
dec
cli
in
shl
sti
or
test
jmp
pop
sub
or
pop
cmc
es
and
xrelease
xor
std
mov
xor
lea
sub
(bad)
mov
inc
push
sti
jmp
mov
inc
fdivr
push
push
add
push
mov
repnz
add
push
sbb
test
clc
jle
dec
xchg
and
add
xchg
cmp
retf
push
addr16
out
mov
xlat
out
add
sti
sbb
jnp
mov
jmp
call
xchg
loopne
sub
test
push
and
pushf
pop
or
mov
fucomp
mov
mov
outs
mov
adc
sbb
shr
lsl
mul
mov
push
xlat
fild
popa
dec
sbb
ss
mov
or
mov
xlat
push
enter
leave
sar
test
and
mov
xor
mov
mov
inc
js
pop
sub
call
push
lods
pop
rol
shl
and
test
push
ds
test
popa
add
inc
hlt
mov
jnp
dec
or
mov
and
mov
sti
in
push
sbb
daa
pusha
sbb
hlt
outs
push
push
inc
mov
xchg
in
mov
dec
(bad)
mov
mov
push
ins
das
fs
fild
in
fimul
add
fs
dec
pop
mov
add
popa
ins
jo
loop
sbb
push
and
icebp
xchg
int
femms
or
mov
or
jae
add
test
cmp
sbb
sbb
inc
rol
dec
or
pop
cmp
sbb
add
aam
lock
xchg
ret
rcr
cmp
sub
sub
mov
mov
lahf
ins
sbb
psllq
add
mov
adc
push
jbe
jne
sbb
add
fiadd
or
fimul
loope
push
mov
sahf
and
inc
inc
add
push
scas
ror
and
and
mov
sbb
cld
mov
add
adc
mov
std
(bad)
mov
sbb
sbb
sbb
mov
rol
jle
inc
lea
inc
and
dec
loope
mov
mov
pop
push
pop
add
xchg
sar
sbb
jnp
std
enter
rcr
leave
adc
add
das
enter
nop
ret
dec
push
rcl
dec
scas
and
sbb
movhps
inc
xor
cld
cmp
dec
nop
push
cmp
mov
nop
mov
cli
push
and
pop
push
lea
and
adc
xor
dec
cmp
nop
pop
and
stos
xchg
jo
sbb
lock
sbb
mov
mov
pop
mov
mov
mov
cmp
or
jle
hlt
inc
repz
sbb
ret
sub
out
or
ret
fimul
mov
adc
sbb
push
jg
add
pop
inc
push
add
dec
jb
test
iret
bound
pop
mov
sub
das
add
test
mov
cmp
aaa
les
pop
sbb
or
pushf
mov
push
fs
bswap
push
cwde
add
mov
add
cwde
ja
in
inc
push
xchg
ror
or
cmovp
push
jg
call
and
add
ins
iret
ja
mov
jmp
ins
imul
loopne
xchg
push
loopne
cld
push
push
cdq
mov
add
imul
sbb
call
sub
mov
push
lock
es
in
cdq
in
add
mov
data16
xchg
adc
xchg
sbb
add
xchg
jo
pop
hlt
loop
cdq
and
cmp
lahf
or
or
add
xor
outs
xchg
cdq
ja
or
or
pop
push
aas
in
mov
dec
je
jmp
xor
in
fs
inc
xor
gs
test
sbb
mov
add
push
pop
or
or
test
pop
or
adc
cmp
sbb
jae
mov
add
push
and
test
nop
lfs
ret
jg
daa
loope
sbb
sbb
inc
or
mov
nop
test
shl
add
dec
repz
sub
xor
(bad)
mov
(bad)
dec
pop
sbb
enter
ins
mov
pop
lods
adc
mov
mov
or
enter
mov
mov
es
mov
add
mov
daa
fxtract
(bad)
add
pop
xchg
cwde
sbb
cmp
pushf
pop
mov
cmp
movs
fs
fstp
push
fs
fwait
in
dec
inc
inc
adc
loopne
cmp
mov
lock
data16
xchg
(bad)
add
into
or
and
mov
xor
(bad)
loop
cs
mov
pop
mov
xor
hlt
sti
lock
(bad)
ret
mov
cmp
xchg
loopne
adc
jle
js
push
mov
add
dec
xor
cld
les
fild
pusha
mov
outs
push
jns
fsub
sub
out
or
mov
int
pushf
xor
mov
xor
jl
fcomp
fdiv
cmp
sub
dec
gs
inc
and
not
and
inc
or
or
or
fidiv
test
xor
dec
cdq
mov
xchg
in
inc
into
or
jl
xor
ins
(bad)
mov
xchg
movs
push
add
aaa
and
mov
ret
mov
lea
dec
or
sub
xlat
xor
mov
inc
adc
push
rcl
jl
mov
push
cmp
inc
ds
or
sub
mov
dec
push
and
in
add
add
adc
outs
retf
mov
jg
cmp
(bad)
pop
(bad)
(bad)
dec
push
sub
bound
ds
lds
xchg
ror
bts
jle
je
and
dec
dec
mov
sub
test
daa
pop
out
cmp
add
push
fisttp
adc
push
and
imul
jl
mov
and
je
add
inc
sbb
into
adc
pop
mov
scas
nop
xchg
in
(bad)
inc
mov
loope
lods
fcmovnu
(bad)
cmp
jle
cmp
jl
add
sbb
mov
and
jo
sbb
inc
push
jo
pop
xor
in
mov
enter
aaa
retf
mov
ucomiss
add
adc
(bad)
xor
cmp
jg
cs
inc
jmp
inc
push
add
mov
(bad)
retf
or
addr16
shl
ud2
mov
and
addr16
lahf
mov
daa
lds
test
add
jge
inc
add
sti
sub
inc
mov
(bad)
jmp
dec
push
sar
xchg
dec
je
test
je
cmp
call
mov
cld
das
pop
xlat
sbb
aad
pusha
mov
cmps
pop
cdq
ds
movs
mov
adc
push
push
push
(bad)
js
clc
adc
sbb
inc
inc
inc
stos
fidivr
or
inc
rcr
out
imul
sar
cli
jle
mov
and
and
xor
mov
adc
lock
adc
(bad)
call
call
lods
adc
sub
jb
fisttp
out
add
and
jno
and
jne
ja
mov
and
nop
mov
push
or
adc
mov
repz
mov
push
data16
and
in
rol
data16
adc
(bad)
or
push
cmp
dec
sub
inc
movs
stos
and
dec
loopne
test
fdiv
pop
sub
jb
inc
mov
inc
jge
fs
pop
dec
dec
jne
call
or
or
es
int3
rcl
pop
ins
mov
call
add
dec
push
aas
or
pusha
add
div
push
lock
rcr
mov
sbb
and
sbb
or
cmp
test
mov
in
dec
out
daa
inc
sbb
sbb
sub
pop
and
mov
add
adc
push
es
pop
xlat
xor
push
and
inc
xor
shl
dec
adc
or
dec
shl
add
clc
jb
fnsave
aad
pavgb
push
pop
fcom
rcr
enter
cmps
rol
mov
call
imul
imul
cmps
imul
cmps
imul
push
popa
mov
hlt
inc
cwde
fild
or
or
daa
rol
adc
inc
dec
inc
dec
stc
in
sbb
adc
dec
pop
ret
mov
mov
pop
jge
mov
mov
fbstp
mov
int3
jge
test
cdq
out
mov
popf
or
push
repz
xlat
cmp
movs
jp
adc
inc
push
movs
stos
rep
mov
icebp
outs
jnp
jne
movzx
sub
add
shl
mov
pop
inc
and
lock
pop
inc
or
xor
call
in
push
ins
adc
or
(bad)
lods
ins
inc
out
sub
dec
mov
pop
cmp
jg
cmp
adc
jbe
cld
fisub
stos
jne
mov
emms
pop
inc
jecxz
stos
add
je
stos
fbstp
pop
daa
loopne
stos
or
ins
and
sub
ror
sub
sub
dec
and
sub
mov
mov
je
jb
sub
inc
mov
mov
jbe
mov
or
push
cmps
push
clc
mov
neg
jmp
in
mov
stos
xchg
inc
fdivr
adc
ficomp
div
dec
or
in
jg
aam
mov
dec
mov
stos
cmp
jne
pop
jb
jnp
fist
cli
adc
mov
sbb
(bad)
jmp
into
add
dec
mov
div
mov
inc
lea
dec
jne
mov
jne
sbb
jmp
dec
je
inc
or
sti
fnstenv
sub
test
cmp
push
or
aad
adc
ja
cmp
jbe
mov
add
(bad)
fwait
mov
xor
cmp
je
push
push
cmp
mov
sub
movs
out
(bad)
in
pop
pop
inc
loop
ret
imul
mov
retf
repz
and
inc
pop
mov
fld
sub
and
or
and
adc
addr16
fild
sbb
sub
jnp
div
sub
jmp
inc
add
pop
sbb
push
sub
sub
inc
das
sbb
push
(bad)
test
pop
or
or
shr
jmp
ins
mov
aaa
cmps
inc
or
adc
or
adc
addr16
fidivr
rcr
sub
or
sub
rol
push
rcr
bound
in
outs
shl
ja
frstor
pop
add
jne
or
(bad)
outs
sub
cmp
lsl
xor
lods
lock
push
xchg
jno
cmp
and
and
pop
add
cli
jnp
mov
sbb
cmp
je
xchg
adc
xor
loop
mov
or
and
cli
lea
ret
mov
rcr
imul
out
(bad)
rcl
(bad)
push
mov
pop
ins
fstp
push
clc
add
dec
and
mov
je
cmp
je
pop
xor
mov
cmp
je
dec
je
inc
xlat
jmp
inc
jmp
add
arpl
(bad)
repnz
scas
pop
push
mov
enter
scas
adc
sub
mov
outs
pop
sbb
lods
pop
sti
jmp
sub
xor
sub
call
pop
loopne
or
xchg
sub
xchg
sub
sar
ins
imul
shr
and
aas
jmp
iret
pop
lea
ret
shr
sti
or
int
and
out
push
sbb
sbb
mov
ficomp
mov
mov
adc
hlt
mov
cmp
jle
inc
xchg
fadd
inc
test
lods
adc
push
stc
int3
add
out
push
mov
fild
fidiv
fmul
test
pop
jnp
jne
or
ret
in
adc
hlt
fadd
push
or
loopne
xor
lods
jge
fdivr
imul
jmp
popf
and
and
xchg
fisubr
enter
aam
ins
leave
push
mov
int
sbb
ss
push
sbb
call
add
movs
and
(bad)
sub
outs
jmp
add
mov
xor
fld
popf
aas
imul
xor
sar
inc
mov
loope
jg
fist
sub
cld
fld
fstsw
fwait
neg
push
lods
outs
int
je
fisubr
inc
cld
jne
lea
mov
in
sti
or
into
shr
in
add
rcl
test
shr
jns
cmp
or
inc
fistp
add
call
jae
cmp
xor
mov
add
or
ja
jmp
or
fstp
movs
xor
mov
test
pop
and
pop
test
test
shr
mov
mov
push
mov
or
pop
mov
mov
pop
jmp
(bad)
jno
pop
jle
jmp
jbe
jl
mov
leave
inc
sub
mov
loopne
jae
dec
add
into
shl
hlt
fild
mov
sub
ret
xor
xor
in
fwait
js
mov
mov
push
lods
sar
enter
pop
dec
jne
jmp
mov
add
pop
arpl
sub
jmp
adc
add
pop
rol
push
idiv
test
pushf
mov
in
push
scas
(bad)
scas
lock
fclex
fldcw
xor
(bad)
pushf
xchg
add
(bad)
lods
imul
inc
pop
cmp
movs
sbb
push
cmp
je
adc
and
or
inc
push
adc
pop
add
inc
mov
ret
xor
xchg
inc
mov
idiv
pop
dec
fchs
sub
aas
jmp
fstp
fstsw
test
shl
fucomp
mov
jmp
in
ins
(bad)
jb
lods
test
leave
(bad)
jmp
sub
add
jae
fimul
add
add
sbb
sbb
push
inc
imul
in
imul
pop
jmp
mov
scas
aam
sbb
xor
test
or
lea
jmp
adc
adc
pop
mov
jb
pop
and
add
sub
add
pushf
xchg
adc
push
nop
and
xchg
cmp
or
xchg
test
cmp
lds
dec
jb
in
or
call
and
shr
add
nop
inc
sbb
jb
dec
push
push
scas
aas
jns
fdivr
sub
mov
add
int
mov
sbb
pop
movs
mov
popa
(bad)
enter
xchg
adc
stos
mov
pop
dec
xor
mov
add
pop
push
sbb
movs
movs
cmps
sbb
cmps
test
xchg
inc
push
stos
stos
lods
add
scas
in
loope
leave
dec
scas
in
xchg
sbb
xor
and
loopne
call
retf
inc
jb
scas
or
gs
ins
inc
mov
lods
jb
inc
inc
lahf
sbb
mov
inc
inc
jb
popa
je
ins
dec
sti
xor
outs
dec
stos
sub
mov
cmp
imul
inc
mov
in
push
jbe
fs
nop
push
dec
push
ins
adc
inc
xchg
push
jb
xor
pop
pop
cmps
and
dec
imul
(bad)
pop
dec
call
test
rcl
adc
inc
mov
mov
pop
adc
mov
or
mov
jecxz
add
dec
mov
sets
cmps
dec
add
mov
mov
cwde
or
fsubr
jmp
adc
pop
ret
sub
addr16
pop
adc
mov
add
ins
pop
inc
ins
popa
jae
je
mov
pswapd
fistp
popa
jo
jb
daa
add
pushf
jae
push
rcl
sahf
ja
retf
(bad)
cmps
add
scas
cmp
mov
ror
jl
pop
loopne
shl
jb
repnz
mov
mov
lock
xchg
mov
fadd
outs
mov
cs
jo
clc
mov
(bad)
lods
add
mov
pop
xlat
ins
iret
jbe
mov
movaps
add
nop
and
dec
mov
shl
fcom
adc
mov
fnstenv
mov
mov
or
or
xor
ins
lock
dec
(bad)
hlt
and
in
xor
jns
enter
add
test
adc
call
pop
sahf
adc
leave
or
add
daa
ins
in
adc
int
int
outs
xlat
pop
aam
lock
mov
sbb
mov
shr
jecxz
mov
pop
mov
loope
or
push
ror
mov
clc
sub
mov
add
or
mov
imul
push
dec
xor
shr
mov
and
and
add
inc
xor
pop
addr16
test
stos
(bad)
push
xchg
mov
cmp
movs
or
data16
mov
xor
mov
dec
cmp
jmp
push
retf
inc
sub
int3
mov
add
jmp
aaa
pop
sbb
sub
jne
mov
mov
xor
add
aas
or
push
sbb
or
inc
and
arpl
test
mov
cmps
clc
xor
or
push
push
xor
mov
xchg
test
fs
add
ret
xchg
xchg
idiv
pop
xor
inc
pop
mov
xchg
imul
aad
or
sbb
shl
or
add
adc
add
ins
cmp
or
xchg
sbb
and
sbb
mov
add
enter
and
outs
movs
mov
sahf
sub
mov
or
and
xchg
scas
cmp
jle
mov
out
mov
adc
jle
sub
add
mov
push
imul
leave
nop
xchg
rcl
ins
push
inc
pop
jle
rol
and
(bad)
shl
daa
mov
nop
mov
dec
xlat
mov
or
and
mov
(bad)
push
out
(bad)
adc
aaa
push
mov
and
jl
loopne
gs
call
(bad)
adc
mov
fidivr
sbb
sbb
mov
add
ret
sub
icebp
mov
test
in
or
cmp
sub
(bad)
cld
(bad)
adc
pusha
jb
loop
push
data16
shld
lock
cwde
xchg
in
pushf
test
hlt
clc
jle
adc
add
and
pop
adc
pop
xchg
xchg
xor
lods
jmp
jne
and
mov
sti
cld
push
enter
cld
dec
cmp
sub
call
cs
mov
enter
xor
adc
push
aaa
(bad)
sub
test
mov
and
inc
popf
add
outs
adc
or
jo
mov
add
push
enter
push
(bad)
or
add
sti
cmp
and
in
xor
and
xchg
and
and
add
ja
repnz
nop
mov
clc
lods
jge
pusha
jns
sbb
lea
mov
add
push
cmp
push
data16
imul
pop
sbb
retf
dec
clc
cmp
jne
sbb
mov
rcl
and
or
cs
mov
adc
and
mov
(bad)
fs
sti
mov
xchg
cld
cmp
repnz
bound
es
arpl
bound
sar
add
mov
dec
xor
pop
fwait
stos
xor
dec
push
jo
mov
cmps
sbb
sub
xchg
daa
adc
sub
daa
clc
les
repz
adc
add
ret
xor
push
xchg
fdiv
pop
dec
repz
or
push
sbb
cld
inc
or
pop
mov
adc
nop
or
pop
jae
fild
cmp
pop
mov
imul
lock
in
les
in
pop
mov
adc
repnz
mov
mov
div
lock
sub
pop
in
shl
pop
adc
push
add
push
push
dec
fs
ins
mov
add
out
fldenv
aaa
lock
hlt
inc
in
add
sbb
test
leave
xchg
(bad)
hlt
xor
add
sbb
sbb
push
xchg
out
mov
clc
cmp
imul
and
mov
cmps
retf
outs
sbb
push
mov
jae
jo
sub
xchg
mov
sub
add
(bad)
loopne
(bad)
sbb
pushf
mov
push
dec
xor
add
and
sub
fs
fmul
cmp
sbb
inc
ja
call
pop
shr
adc
inc
mov
pusha
dec
add
inc
pop
xchg
inc
rol
fdivr
and
retf
(bad)
adc
sbb
and
ins
xchg
and
mov
iret
mov
dec
jnp
ffreep
add
pop
enter
add
shl
add
stc
dec
or
hlt
fsub
cmps
adc
mov
mov
shl
sahf
fdiv
bound
rol
or
push
jo
outs
pop
xchg
mov
jnp
dec
dec
add
scas
ror
and
jo
mov
test
and
test
or
outs
pop
cmp
inc
mov
xchg
std
dec
jne
or
jns
ret
sub
test
fld
push
lock
xor
xchg
add
inc
not
sbb
scas
or
mov
xchg
jo
in
ret
jb
xchg
sbb
adc
or
dec
xchg
or
pop
mov
push
sub
lea
cmp
rcr
loope
daa
jmp
or
enter
and
sbb
popa
jge
std
pop
arpl
pushf
mov
mov
lock
into
jo
xor
into
push
or
in
popf
cmc
or
sub
add
inc
repnz
sbb
jnp
adc
and
scas
leave
cmp
je
jl
and
xor
dec
push
mov
js
dec
test
mov
les
ret
popa
cmps
push
arpl
sbb
inc
in
jge
or
or
mov
sbb
mov
mov
push
enter
inc
repnz
jne
or
out
loopne
lds
scas
jb
cs
adc
loopne
(bad)
xchg
lds
shr
or
lds
mov
(bad)
or
and
push
sbb
adc
or
add
xor
aam
push
(bad)
mov
rcl
jle
je
pusha
test
jno
pop
dec
pop
lock
fst
pop
and
or
xchg
aaa
test
xchg
jmp
push
mov
repnz
lods
(bad)
or
movs
stos
jg
jne
test
cmp
inc
pop
jbe
cmp
clc
inc
mov
add
pop
cmovb
mov
cmp
push
imul
add
mov
ret
(bad)
mov
inc
adc
loopne
or
nop
arpl
aaa
ffree
jmp
jge
sub
xor
xchg
fcom
pop
sub
sub
lods
pushf
fs
add
sub
rol
push
cmp
dec
enter
and
stos
(bad)
enter
and
xor
push
enter
and
stos
ror
pop
(bad)
fcmovnb
add
inc
sbb
and
or
mov
mov
pop
enter
inc
clc
dec
mov
ins
sub
sub
sub
icebp
inc
call
ins
xlat
push
call
ss
jae
mov
int3
js
mov
jmp
inc
in
sbb
mov
xchg
test
push
popf
scas
jo
cmp
pop
or
loopne
leave
leave
push
mov
sub
sti
sub
adc
push
dec
add
leave
dec
mov
and
sbb
sbb
gs
sub
adc
test
xchg
clc
adc
mov
enter
and
pop
inc
jae
retf
sbb
mov
dec
fisubr
add
and
jae
in
push
dec
push
mov
adc
add
jle
leave
dec
or
fmulp
push
pop
fwait
add
mov
lea
les
or
iret
mov
xchg
jl
retf
pop
or
outs
and
fcomp
add
nop
xchg
sbb
mov
add
inc
lds
push
xor
psubsb
mov
dec
test
jl
lea
shl
stos
add
dec
jg
push
es
lea
jmp
sti
sub
jp
xor
or
sub
jge
adc
mov
and
int3
retf
push
add
inc
adc
xor
stc
je
mov
inc
adc
fcom
mov
lea
outs
push
xchg
mov
repnz
mov
xor
enter
mov
adc
loope
xchg
sub
ret
push
fbstp
out
aad
mov
fcmove
adc
add
xor
pusha
mov
ror
repnz
cmc
jle
mov
sub
sbb
ins
movs
arpl
push
pop
inc
adc
inc
mov
mov
push
bnd
push
or
or
add
stos
jp
push
adc
push
xor
adc
cmp
adc
retf
repz
imul
and
into
add
push
iret
cmps
mov
ret
jbe
iret
jecxz
retf
and
clc
jo
mov
mov
clc
dec
pop
mov
sti
shr
mov
sar
shr
and
inc
ficom
xchg
mov
in
adc
lock
mov
or
jmp
add
jge
cmp
jle
xchg
test
or
push
mov
xchg
les
adc
or
ja
lea
clc
xchg
cwde
jne
sub
pop
sbb
mov
xchg
pop
adc
push
mov
push
das
daa
jecxz
jb
daa
aas
and
jle
or
mov
xchg
dec
add
dec
push
push
sbb
ret
lds
add
push
add
sub
test
scas
jbe
xchg
fldenv
mov
pop
or
mov
mov
sub
and
add
sub
or
or
add
pop
test
pusha
test
aam
dec
popf
jge
mov
adc
sub
int3
cdq
mov
fiadd
ficomp
or
xor
xor
sbb
jge
rcl
xlat
jle
sbb
cmp
jbe
outs
lock
mov
lds
mov
repnz
sbb
(bad)
jbe
mov
dec
xlat
inc
sub
inc
in
inc
mov
add
mov
cli
sbb
mov
aad
xchg
pop
dec
test
outs
sub
test
cmp
add
aas
mov
inc
mov
mov
popa
ins
inc
add
cld
lods
push
ins
inc
imul
jle
jne
test
les
adc
pop
jl
push
add
adc
sub
mov
or
rcl
mov
push
addr16
(bad)
xchg
retf
pop
pop
add
adc
fcom
les
cmp
shl
mov
push
mov
push
push
lds
js
imul
ud0
(bad)
aam
je
pop
sub
xchg
rcl
int
pop
xchg
adc
jmp
mov
mul
in
and
inc
ja
mov
inc
lds
fnstenv
mov
push
sub
add
lods
ret
sbb
cld
adc
add
mov
fsub
mov
xchg
push
pop
jecxz
add
add
adc
test
clc
neg
sub
adc
aam
hlt
mov
cmp
mov
icebp
pop
mov
ss
les
mov
jp
inc
mov
jl
ins
push
and
adc
sub
mov
(bad)
add
jmp
push
mov
and
jmp
(bad)
add
out
push
data16
sbb
mov
stos
push
inc
adc
xor
lahf
enter
int3
xchg
cmp
jne
dec
and
mov
aad
dec
lods
sahf
add
add
xor
test
pop
aam
pop
xchg
jecxz
push
xor
aas
sbb
xchg
jle
ins
in
in
cmp
sub
dec
push
ds
outs
pop
adc
mov
add
push
mov
vmulps
(bad)
fst
add
sub
jae
mov
mov
enter
fs
fidiv
fwait
cli
clc
or
jns
fmul
xlat
shr
or
xchg
adc
mov
add
cmps
jmp
jb
mov
movs
sbb
shld
push
push
mov
ins
or
cmp
xchg
sub
daa
jg
or
sbb
dec
adc
push
adc
popa
sbb
jb
xlat
pop
dec
popa
js
jns
fadd
data16
nop
xchg
dec
sbb
pop
(bad)
cmp
dec
or
dec
jns
pop
xchg
aas
retf
push
pop
sub
push
mov
dec
jp
xchg
mov
adc
fst
mov
in
enter
pop
push
inc
cmp
je
sbb
enter
pop
imul
pop
mov
sbb
add
cmp
enter
js
mov
cmp
inc
mov
and
jl
or
cmp
in
mov
fild
jmp
jo
rcl
jmp
cs
cmp
f2xm1
jne
jae
pop
xchg
mov
push
pop
cmp
call
or
lds
mov
sbb
dec
ret
and
or
mov
fld
cmp
mov
and
sub
daa
pop
dec
sbb
jne
test
and
jb
ins
adc
mov
push
in
cwde
add
add
dec
jb
stc
in
mov
fimul
sbb
test
mov
cmp
cs
lods
jmp
dec
jne
sub
dec
push
enter
sbb
outs
or
lea
or
dec
or
mov
push
xchg
in
or
cmp
pop
fsubr
push
fist
push
push
sub
adc
inc
les
adc
and
and
xchg
cmp
cmp
cdq
and
and
adc
call
push
push
xchg
sbb
push
sbb
sub
(bad)
adc
sub
int
pop
aas
lock
sbb
and
sub
cmps
push
hlt
mov
cld
push
cmps
jnp
stc
fs
add
xor
push
sub
sahf
sti
pushf
arpl
test
pusha
sbb
dec
push
inc
pop
push
or
and
dec
scas
mov
xor
adc
cld
dec
sub
dec
push
sub
jnp
iret
in
clc
outs
cmp
mov
cmp
adc
js
sbb
adc
jmp
push
fdivr
out
out
jmp
nop
dec
nop
mov
cmp
je
cmp
sbb
fdiv
jne
jmp
add
or
and
int3
jae
int3
ins
in
daa
cdq
xchg
fst
jno
ins
push
or
iret
push
vpavgb
in
int
mov
scas
xchg
ret
inc
repnz
inc
(bad)
or
dec
xor
dec
mov
adc
or
call
adc
add
in
push
adc
test
push
ins
jp
fiadd
ret
sahf
test
jge
lods
mov
mov
repz
clc
in
jg
xchg
adc
push
xchg
pusha
sbb
arpl
add
or
ja
in
sbb
pop
adc
mov
and
fs
in
sbb
inc
mov
dec
mov
xor
pop
pusha
jne
pop
mov
xor
inc
xor
out
mov
fucomip
pop
ret
dec
add
fadd
jbe
sub
pop
in
cmp
ja
jmp
inc
in
lahf
adc
arpl
jb
sub
pusha
push
cdq
dec
cs
int3
sbb
mov
adc
jecxz
clc
dec
lock
push
call
push
adc
outs
sbb
pusha
mov
aam
add
adc
and
cld
mov
inc
and
push
push
and
fld
test
lock
cwde
popa
sbb
nop
and
rol
pop
je
jmp
mov
je
outs
cmp
stos
adc
and
dec
ret
mov
dec
inc
jl
pusha
xchg
pushf
sub
hlt
mov
mov
mov
cmp
pop
dec
ror
in
or
cdq
in
cmp
loope
mov
adc
push
jb
ror
popa
and
add
adc
mov
sbb
jmp
adc
inc
movs
mov
inc
sahf
xchg
icebp
dec
loopne
mov
adc
in
imul
sub
ins
adc
push
and
jp
aam
adc
fwait
and
jne
push
(bad)
hlt
inc
int3
pop
test
dec
shr
hlt
test
dec
mov
pusha
aaa
inc
pop
retf
dec
cld
mov
scas
push
lea
jg
or
call
or
pop
adc
pop
mov
jmp
cmp
nop
jecxz
bswap
add
sbb
in
imul
and
push
ss
lds
lock
mov
popf
inc
div
fcomi
pop
hlt
or
add
ins
cmp
lea
push
ins
aaa
or
sar
jg
lock
pop
inc
lea
push
mov
mov
sti
mov
mov
mov
into
or
pop
pusha
ins
test
(bad)
fwait
je
(bad)
adc
mov
hlt
dec
aam
shl
dec
fsub
(bad)
ficom
jge
ret
int
dec
call
ror
fisttp
loopne
add
or
call
cld
cmp
ja
add
aas
jne
cmp
shr
hlt
or
inc
arpl
fldlg2
mov
jp
or
aas
mov
and
jecxz
cmp
in
push
sub
jle
adc
mov
mov
and
xchg
push
das
pop
pop
sub
rol
int3
xor
shl
retf
and
mov
repnz
sub
lods
popf
ins
push
shl
pop
pop
or
mov
div
xor
ins
cld
jns
outs
fcom
int
cli
xlat
enter
call
shl
xchg
push
pop
cmp
lods
rol
or
add
add
adc
adc
push
jnp
and
mov
push
add
fcompp
adc
push
lock
mov
and
jle
lock
lock
or
rol
sub
ror
fdiv
into
fsubr
pop
mov
out
aam
pop
ins
nop
gs
fsubr
or
aad
dec
mov
pop
mov
arpl
xlat
or
leave
inc
jmp
sub
sbb
and
mov
mov
and
aam
ret
jmp
rcl
mov
pop
cmp
ss
(bad)
call
xchg
inc
jmp
into
sbb
pop
add
icebp
jmp
cmp
loopne
fcomi
fmul
mov
mov
out
enter
pop
sub
xor
jg
paddusb
pop
add
and
loop
fcomp
(bad)
mov
mov
dec
sbb
retf
loop
nop
ror
sub
in
inc
inc
(bad)
call
jle
cmps
enter
dec
les
test
call
leave
xchg
and
rcl
mov
mov
or
or
loop
stos
clc
jae
rcr
or
cwde
imul
or
jmp
stc
adc
jmp
or
cmp
sar
adc
push
rol
xor
inc
xor
xchg
dec
jle
test
or
fwait
jmp
or
push
mov
or
mov
mov
scas
into
or
enter
and
hlt
imul
shl
or
adc
loope
mov
mov
sbb
mov
mov
or
repz
pop
ins
pop
mov
mov
or
int3
ror
mov
mov
call
mov
fnstenv
gs
inc
xchg
je
cs
cmp
and
adc
fiadd
popa
add
adc
in
jbe
sbb
jno
sbb
jb
cmp
jmp
add
mov
jmp
scas
or
mov
push
push
mov
adc
ror
sub
add
pop
inc
pusha
or
cmps
fsub
xchg
or
jne
mov
sub
inc
xchg
fisub
push
add
add
in
bound
loopne
xchg
or
jne
psrad
inc
jmp
add
mov
push
ja
add
or
and
mov
lock
sub
leave
ror
pop
lods
fnsave
jmp
call
call
lods
add
jno
mov
(bad)
into
xlat
add
(bad)
sbb
retf
ror
or
ins
out
mov
out
ins
mov
mov
and
movs
and
in
push
movs
mov
les
jmp
and
adc
add
jb
movs
jae
xchg
dec
mov
and
test
jb
xchg
mov
add
aaa
loope
xchg
xchg
call
lahf
movs
mov
inc
popa
outs
arpl
pop
adc
jmp
push
pop
mov
movs
jmp
pop
gs
adc
sub
pop
inc
xchg
mov
adc
or
or
stos
scas
mov
mov
or
sbb
test
call
lea
mov
push
push
or
dec
leave
mov
test
loopne
ret
sub
jecxz
clc
add
push
sar
pop
dec
jmp
mov
test
mov
xchg
add
hlt
push
dec
nop
dec
pop
jp
fs
cmp
xor
sub
imul
mov
jo
xchg
mov
cmp
fs
arpl
push
mov
arpl
cmp
jbe
rcr
fcom
enter
adc
push
lahf
cmp
data16
sete
or
pusha
xlat
rol
or
pop
or
ror
and
dec
(bad)
push
enter
dec
push
add
fild
xor
xor
xor
or
repnz
jae
pop
push
popa
jb
imul
push
ror
repz
inc
call
repz
(bad)
in
inc
add
std
inc
pop
leave
ja
repz
hlt
mov
aad
xlat
or
sub
je
add
leave
and
pop
dec
dec
xor
jne
sub
in
enter
addr16
clc
lock
add
add
lods
push
cwde
mov
aam
lahf
push
mov
shl
push
push
and
or
adc
clc
mov
or
clc
push
and
mov
enter
or
rcl
mov
push
sbb
mov
test
mov
pop
or
(bad)
cmp
mov
xchg
xor
(bad)
jbe
jmp
dec
fadd
(bad)
cmp
aaa
adc
call
mov
ja
xor
aad
sub
and
jmp
add
add
add
xor
push
or
push
ja
add
add
shr
cmps
lock
cmc
sbb
pop
or
neg
adc
xor
xor
cmp
xor
xor
cmp
ret
arpl
xor
mov
ss
test
or
lods
mov
mov
xor
push
mov
pop
ror
js
pusha
cmp
ins
cmp
jo
push
es
call
and
xor
sub
sbb
int3
dec
sub
push
rcr
sahf
and
pop
cs
pop
inc
shl
fs
xor
jae
jp
gs
cmp
push
mov
dec
and
xor
add
jmp
cmovge
pop
push
pop
adc
adc
outs
ja
and
pop
adc
dec
lock
sbb
ret
and
not
mov
jle
hlt
stos
dec
inc
adc
sbb
and
push
cmps
adc
xor
add
add
jns
bound
not
call
mov
iret
pop
ror
inc
or
push
add
fnstcw
or
scas
fstp
or
or
adc
and
and
sbb
push
fmul
sub
or
daa
or
fsubr
inc
add
hlt
pop
pop
add
pop
imul
idiv
das
pop
cs
and
ins
add
or
int3
mov
xchg
fcmovnu
lea
mov
jecxz
push
push
call
sub
adc
adc
sar
push
add
add
mov
sub
adc
int3
sub
gs
arpl
out
push
mov
dec
lock
xor
or
dec
cmp
sbb
aaa
scas
stc
mov
xchg
fwait
push
jg
and
ror
mov
adc
adc
and
sbb
push
xchg
jp
sub
int3
xchg
cmp
arpl
push
and
inc
pop
cmp
shl
sub
push
cmp
or
ror
test
inc
jg
bound
gs
jo
add
bound
jae
cmp
ins
leave
aaa
or
sub
add
and
xchg
adc
mov
ror
mov
int3
inc
mov
adc
push
cmps
sub
fiadd
fstp
outs
fwait
xor
pop
das
sar
sbb
out
inc
sub
imul
add
fadd
popa
pop
frstor
es
cmp
fcom
mov
test
repz
mov
pop
push
fmul
retf
loopne
rsqrtps
je
dec
je
add
enter
ins
jae
je
or
addr16
out
int3
adc
div
or
cs
mov
sbb
adc
retf
lods
out
mov
fild
mov
and
dec
adc
xchg
ss
clc
adc
xlat
xor
inc
mov
fs
dec
je
jmp
mov
std
lea
jp
add
(bad)
mov
adc
inc
(bad)
mov
in
pop
cmp
or
sbb
pop
sbb
and
lahf
or
mov
movs
repnz
cwde
adc
outs
or
ja
cmp
add
jle
adc
jp
sbb
fwait
mov
push
cwde
std
add
fs
xchg
sbb
xchg
inc
repz
and
retf
fwait
xchg
push
sub
dec
pop
inc
(bad)
inc
dec
dec
push
push
push
push
push
inc
push
pop
push
push
push
test
or
call
fstp
clc
in
push
push
or
in
sbb
loope
sbb
aam
or
sub
mov
adc
adc
loopne
adc
dec
call
mov
and
dec
mov
add
outs
or
lods
mov
bound
mov
cwde
sbb
leave
push
add
sbb
or
mov
jb
imul
sbb
dec
jo
and
xchg
movs
jns
int3
inc
cli
jg
inc
push
push
pop
dec
inc
dec
inc
mov
add
test
hlt
pop
xor
xchg
dec
add
cmp
jns
add
sbb
scas
xchg
cmps
arpl
(bad)
std
adc
mov
loope
mov
mov
addr16
outs
imul
fld
ins
or
sub
push
stos
sbb
or
or
fnstcw
jo
mov
test
fwait
lods
fist
adc
adc
int3
rcl
adc
scas
and
sti
or
inc
inc
mov
mov
clc
or
imul
and
mov
inc
mov
enter
ffreep
clc
mov
adc
fadd
pop
adc
jnp
or
push
add
add
loope
push
mov
mov
test
dec
je
cwde
sub
inc
xchg
add
jp
push
in
in
add
lods
call
jmp
idiv
push
cwde
inc
xchg
les
in
retf
jbe
xor
in
add
pop
je
xchg
mov
bnd
out
add
ins
call
inc
shl
push
mov
or
pop
call
and
outs
gs
icebp
add
adc
or
enter
popa
pop
rcl
push
sub
mov
xchg
and
add
(bad)
mov
pop
cmc
dec
aam
fcomp
jg
sub
cmp
in
jo
fsubr
cmp
jg
push
and
xchg
fmul
dec
in
or
push
imul
push
add
xchg
add
mov
inc
sub
sbb
or
pop
ins
add
cmp
call
add
loope
pop
popf
jne
xchg
and
out
das
(bad)
jmp
shr
retf
inc
adc
or
xchg
dec
mov
xor
inc
pop
add
adc
xchg
inc
jge
mov
and
push
rcr
push
sar
cmp
mov
adc
xchg
gs
mov
outs
fld
rol
pop
sbb
and
inc
mov
sbb
pusha
cmp
adc
push
xor
mov
imul
jle
outs
movs
add
call
lock
fs
adc
and
pop
push
dec
popa
sbb
sbb
jb
and
sbb
ret
and
push
aam
mov
clc
arpl
(bad)
cmp
ret
pop
call
arpl
out
mov
jmp
pop
enter
(bad)
and
cmp
and
and
adc
cmc
jnp
sbb
mov
fist
test
add
adc
push
aam
adc
icebp
popa
les
pop
jl
mov
add
sbb
sub
xchg
arpl
jp
test
sar
xchg
(bad)
or
inc
mov
ins
push
dec
inc
mov
xor
jo
in
sub
in
outs
fstp
scas
and
pop
in
adc
inc
mov
in
cmp
xor
xchg
fucomp
adc
and
add
jne
pop
xor
pop
jne
fimul
sub
rol
sub
loope
out
mov
stos
outs
sub
es
lods
test
ins
xor
pop
je
jle
outs
in
sbb
push
out
(bad)
sub
cdq
pop
cmc
dec
loope
dec
in
stos
jge
js
or
add
aas
jecxz
dec
inc
sar
pop
pop
rcl
sub
adc
cs
add
mov
or
fisttp
jb
pop
xor
xor
call
call
sbb
outs
jne
adc
or
js
jnp
sbb
mov
adc
and
adc
or
xor
sub
push
sbb
push
add
or
dec
jnp
push
cmc
pop
push
sbb
xor
xor
cmp
jmp
test
or
ret
mov
push
adc
xor
jp
dec
mov
neg
sbb
dec
adc
outs
je
outs
out
and
sub
mov
pop
dec
adc
or
xchg
xor
stos
or
adc
cmp
sub
add
cmp
jns
push
jbe
int3
into
jns
aaa
icebp
dec
add
add
or
push
cmp
or
enter
sbb
mov
and
(bad)
dec
cmp
in
mov
in
pushf
add
pusha
dec
or
add
fucomp
and
call
dec
cmp
lods
rol
in
xlat
mov
fsub
ret
(bad)
loop
mov
push
fnstenv
sub
(bad)
jmp
inc
ss
jno
sbb
xchg
adc
push
clc
fwait
sub
mov
adc
xchg
or
cmp
jmp
xlat
mov
cmp
inc
inc
sbb
mov
or
rol
bound
addr16
lahf
push
cmp
cli
inc
or
mov
cld
pop
push
add
cmp
or
mov
push
arpl
sub
outs
(bad)
mov
mov
fcom
push
add
push
je
mov
jle
and
stos
lahf
xchg
lahf
stc
into
jmp
push
xchg
sbb
xchg
in
call
cmp
mov
mov
lods
in
or
mov
scas
test
mov
scas
or
rol
mov
add
sahf
mov
or
es
hlt
mov
aam
loope
cdq
jecxz
adc
in
cmp
xchg
or
pop
mov
bswap
test
js
add
or
mov
enter
push
adc
popa
out
sbb
push
add
nop
wbinvd
push
mov
or
mov
inc
repz
xchg
iret
rcr
mov
push
pop
inc
push
mov
adc
push
xchg
icebp
es
pop
jmp
push
xchg
je
push
lock
test
adc
mov
inc
cmp
cmp
in
loopne
lds
cwde
ret
loopne
cmp
pop
xchg
in
fild
dec
add
inc
and
push
inc
or
adc
and
xchg
mov
retf
loopne
dec
mov
mov
and
xchg
add
repz
aaa
enter
fdiv
retf
and
sbb
and
icebp
pop
enter
lea
dec
sbb
mov
add
pop
pop
mov
or
adc
add
lods
es
hlt
pop
xor
jo
sbb
cmp
fbld
pusha
(bad)
mov
iret
lods
loopne
lods
adc
jnp
movs
and
mov
or
daa
mov
nop
adc
dec
cmps
sub
jmp
or
pop
pusha
push
pop
push
fsubr
mov
adc
push
xor
or
rcl
xor
sub
aaa
loopne
pushf
sbb
push
mov
and
into
adc
adc
add
jo
adc
mov
lock
nop
in
lock
clc
jg
pusha
int
xchg
xor
push
cmp
inc
inc
ret
sbb
or
hlt
push
lock
cmp
or
sub
es
scas
or
push
or
adc
ret
xchg
adc
cmp
xchg
xor
js
or
mov
hlt
xor
dec
xchg
adc
and
or
dec
and
sbb
jle
and
push
dec
pop
bound
in
mov
and
jb
sub
hlt
(bad)
enter
fcom
or
mov
mov
loopne
rcr
in
dec
test
aam
imul
sti
imul
jl
pop
jmp
into
test
adc
sub
popa
add
ja
jle
sahf
and
xchg
and
movs
hlt
mov
loopne
lods
clc
clc
pop
mov
ss
xor
mov
push
or
jno
jae
daa
cmp
xor
cld
xchg
test
cld
clc
jne
icebp
pusha
mov
xor
shr
add
fistp
and
adc
or
call
mov
sub
addr16
in
adc
clc
in
js
inc
sub
inc
std
push
mov
cdq
mov
xor
test
in
mov
in
je
dec
cwde
cmp
outs
sbb
int3
push
call
jb
hlt
cmp
sbb
xchg
cmp
rcr
fsubr
push
sbb
xor
or
mov
dec
adc
leave
stos
clc
std
jo
mov
movs
and
jns
xchg
in
in
and
add
push
loopne
lods
stos
call
jp
in
std
push
xor
pop
push
test
std
xor
xchg
xchg
inc
imul
in
jp
sbb
sub
aam
call
in
adc
or
bound
outs
es
nop
xchg
xchg
mov
retf
jb
sub
sub
lds
imul
test
mov
sbb
adc
xlat
sbb
pop
out
sbb
sbb
jnp
or
fild
cmp
mov
int3
lods
adc
mov
push
retf
stc
out
or
call
push
daa
in
and
and
into
call
jge
outs
in
retf
sbb
mov
sbb
dec
test
sbb
shr
call
test
sub
sbb
repnz
lock
xchg
xchg
pop
hlt
rcr
hlt
pop
dec
xchg
or
das
nop
in
dec
xor
or
test
xor
pop
push
xor
nop
out
neg
lock
lea
and
aam
jae
jbe
test
sbb
or
jo
dec
mov
in
leave
add
and
loopne
pop
sbb
int3
and
adc
lock
add
lea
or
adc
call
push
push
xchg
scas
xor
xchg
loopne
cmp
push
or
fisttp
and
popa
add
loope
test
dec
dec
adc
inc
xchg
ja
cmp
mov
hlt
mov
add
xor
mov
xor
pusha
fs
mov
pop
ret
pop
cmp
pusha
sub
loope
cwde
add
stos
add
sahf
pop
inc
or
pop
add
mov
push
push
add
inc
(bad)
fiadd
jmp
sbb
je
iret
xor
sbb
add
inc
aam
inc
cmp
mov
movs
pop
xor
cmp
inc
push
in
fyl2xp1
pusha
adc
dec
dec
inc
push
pmulhuw
dec
add
inc
bound
mov
enter
sbb
or
jmp
cmp
jl
lock
add
inc
and
clc
call
xor
addr16
cmp
adc
out
sbb
dec
pop
jae
and
add
in
in
sub
cdq
jl
and
in
call
in
mov
out
repz
mov
adc
shl
jl
nop
mov
cli
int3
in
and
cmp
add
add
mov
cmp
adc
cs
test
lock
add
jmp
adc
pop
and
mov
dec
je
xor
jmp
xor
in
pusha
dec
add
xor
xor
sub
xor
in
jmp
and
adc
adc
cwde
ret
jno
fs
sbb
(bad)
cmp
pusha
adc
ret
leave
dec
sub
mov
xor
stos
or
sbb
mov
(bad)
int3
adc
inc
push
popa
and
adc
dec
icebp
add
xor
lds
movzx
cmps
mov
adc
pop
add
shl
xor
call
test
pop
or
and
jnp
fadd
mov
dec
sub
rcr
leave
add
and
test
mov
or
in
test
mov
cmp
dec
imul
stos
xor
adc
sbb
les
mov
lea
pushf
movs
fbld
call
jb
dec
call
and
and
outs
xchg
cmp
add
ret
and
ds
mov
sbb
and
xor
pop
adc
leave
dec
pop
and
and
jmp
bound
or
ret
hlt
xchg
icebp
mov
ret
push
mov
adc
xchg
add
lea
cmp
(bad)
mov
mov
adc
pusha
add
fsub
push
and
int
(bad)
cwde
push
or
inc
leave
xchg
push
cmp
push
and
in
cmp
adc
add
call
add
imul
xlat
add
mov
jne
jp
daa
and
mov
adc
std
cmc
and
loopne
mov
dec
lahf
call
push
daa
sub
jl
cwde
mov
xchg
je
prefetchw
sti
and
es
push
add
test
mov
cmp
xchg
or
sbb
dec
adc
mul
daa
test
dec
cmps
retf
add
and
sub
pop
nop
paddq
add
pop
mov
pop
pop
pop
hlt
xchg
sub
add
sub
clc
or
mov
adc
ins
jnp
ins
xchg
cmp
loopne
in
(bad)
mul
jne
add
jb
mov
aam
mov
outs
and
loopne
loopne
jle
sbb
bound
or
mov
into
push
adc
hlt
test
enter
hlt
hlt
lock
xor
and
xor
ret
xchg
bound
mov
cmps
and
and
fiadd
cli
sti
cmp
push
cmp
sub
inc
fmulp
dec
aad
push
mov
sub
int
fmul
adc
movs
iret
add
sub
out
fwait
lahf
sbb
inc
xor
popa
adc
aad
pop
add
and
xor
and
pop
and
fcomp
ret
push
cmp
or
cmp
js
inc
mov
pop
adc
jp
cmc
pop
call
inc
adc
sub
aas
fimul
and
and
add
xchg
out
ds
add
sbb
in
add
xor
xchg
push
rcl
sbb
push
inc
in
add
inc
lock
and
data16
or
fs
jmp
js
outs
mov
(bad)
cmp
lar
adc
sbb
mov
in
rcl
movs
adc
jmp
pop
(bad)
sbb
retf
sub
xchg
cmp
rcl
cmp
retf
out
pop
xchg
aas
mov
fdivr
mov
fstp
sbb
xchg
push
lds
and
int
push
lock
jle
and
adc
add
add
(bad)
and
or
push
lods
sub
sub
aad
and
dec
xor
je
xchg
je
pop
fwait
adc
adc
fbld
enter
arpl
cmp
sub
lods
call
jne
mul
pop
mov
lods
and
movs
or
int3
arpl
inc
adc
sub
movs
mov
dec
adc
loopne
mov
adc
dec
mov
mov
mov
jge
push
inc
mov
push
and
pop
je
comiss
fwait
xchg
xor
push
mov
dec
mov
call
sbb
mov
dec
fdiv
cmc
mov
pop
imul
sbb
push
inc
in
push
lock
test
loop
enter
push
js
les
push
add
xchg
sbb
add
and
dec
push
mov
xor
popa
(bad)
jecxz
inc
ins
ins
push
sti
add
jb
add
xor
adc
dec
inc
pop
xchg
das
test
and
mov
iret
dec
mov
and
popf
pop
xchg
xchg
and
cmp
push
mov
das
and
push
inc
inc
push
inc
push
push
add
clc
xor
xchg
sti
call
pop
xchg
les
mov
adc
adc
mov
in
je
sub
add
das
dec
adc
sub
add
cmp
adc
xor
xor
mov
cmp
and
stos
sub
adc
and
call
inc
fisttp
ret
js
and
pop
fst
mov
call
sbb
cmp
xchg
dec
mov
in
data16
outs
jmp
add
into
push
repnz
sbb
or
mov
loope
pop
retf
mov
xchg
push
or
and
fcomp
loopne
ret
and
dec
rol
mov
inc
pmulhuw
test
int3
pop
mov
adc
js
jo
or
ins
dec
nop
stc
cmp
aaa
jecxz
loopne
xor
push
mov
xchg
or
cmp
stos
inc
jp
pop
add
arpl
outs
div
leave
call
xor
push
and
data16
push
dec
test
push
add
outs
add
push
les
aaa
(bad)
sbb
fsubr
rol
(bad)
loopne
(bad)
les
add
aam
inc
jo
daa
mov
xor
in
push
jmp
aam
push
inc
pop
rcl
or
mov
pusha
sub
or
mov
add
test
inc
shl
and
test
jp
add
repz
push
enter
add
loope
push
jg
sbb
sbb
jo
pop
xor
jne
sahf
pop
jne
in
jle
add
adc
je
add
aas
or
(bad)
ins
fcomp
fnstsw
sahf
jbe
movs
jns
adc
or
add
or
sbb
es
loope
imul
mov
inc
fistp
test
fstp
fwait
fs
pop
push
lock
in
xor
sub
inc
xchg
and
add
nop
ss
ss
lods
xchg
leave
dec
add
enter
adc
jne
movs
dec
pop
dec
ss
cdq
and
in
ss
ss
push
pop
jb
lock
mov
push
mov
je
cdq
add
push
mov
loop
pop
outs
and
add
push
retf
push
jo
sbb
adc
add
adc
lods
sub
pop
shl
add
aad
sbb
movs
add
sub
cmp
adc
or
ficomp
inc
lahf
mov
es
or
dec
je
hlt
stos
dec
loop
sub
or
xchg
mov
or
stc
dec
inc
test
dec
jo
cmc
pop
xchg
in
adc
xchg
leave
dec
and
div
cmp
push
xor
jecxz
inc
(bad)
retf
test
loopne
mov
and
push
adc
push
sub
aam
mov
xchg
add
mov
xor
rol
add
dec
mov
jnp
adc
push
jg
inc
mov
sub
cs
mov
retf
inc
add
ss
sub
mov
mov
sub
mov
adc
test
or
sub
add
sti
sub
inc
ss
aam
out
pusha
adc
call
or
sub
jbe
jmp
loopne
(bad)
add
mov
dec
shr
inc
jle
dec
dec
shr
jo
and
mov
ror
aam
leave
or
(bad)
and
inc
cmps
mov
mov
mov
dec
out
(bad)
rol
pop
mov
sahf
push
rcr
(bad)
sub
stos
fst
out
sbb
adc
leave
sbb
inc
push
lds
lock
cld
dec
cmp
ins
mov
mov
dec
sar
mov
enter
and
sub
test
sar
mov
and
xchg
loope
addr16
adc
imul
add
movs
inc
add
sub
gs
adc
pusha
jbe
jb
not
adc
inc
xor
cld
fs
imul
das
add
int3
push
and
push
pop
sbb
icebp
pop
mov
jecxz
inc
dec
pusha
adc
mov
data16
mov
out
nop
loop
xchg
aas
add
mov
lea
cmp
daa
pop
pusha
pop
das
inc
adc
nop
ins
test
stos
fwait
int
xor
pop
ins
jmp
cmp
sbb
or
in
inc
xor
js
xchg
cmp
inc
xor
jmp
std
mov
ret
inc
or
je
or
fcom
and
adc
mov
pop
stos
sbb
std
or
adc
xor
or
mov
in
int3
and
xor
jne
adc
sub
outs
imul
mov
cmp
js
cmp
pop
mov
dec
ss
pop
mov
(bad)
push
out
add
mov
add
or
sub
sub
jmp
xchg
pop
lock
je
add
add
sbb
das
and
sub
inc
lock
xor
xor
dec
xchg
pop
mov
mov
sbb
je
popa
inc
dec
test
rol
inc
sbb
lods
test
inc
cwde
pop
mov
ds
in
pushf
mov
adc
cld
clc
dec
jle
or
aam
or
fdivp
pop
jne
sbb
add
push
and
(bad)
fisttp
mov
adc
sbb
and
clc
cli
sub
call
sub
and
xor
jl
inc
fist
xchg
pop
dec
xchg
and
mov
sbb
mov
xchg
adc
push
test
pop
sbb
or
mov
mov
rol
popa
(bad)
mov
xchg
push
or
popa
clc
aaa
clc
jne
add
push
add
xchg
sbb
push
jmp
lsl
adc
add
and
rcl
xlat
sahf
cli
jp
rcr
lahf
or
loopne
mov
lock
bound
jo
test
bound
pop
sti
sub
jae
or
jge
test
int3
rcl
enter
ror
mov
add
out
cmps
mov
adc
add
xchg
dec
inc
mov
push
pause
sbb
inc
xor
dec
mov
inc
push
sub
sar
push
or
push
shl
test
jmp
and
inc
hlt
and
cld
inc
stos
push
(bad)
aas
icebp
pop
dec
gs
xor
cs
ins
pop
inc
gs
imul
or
call
popa
arpl
js
pop
xor
jno
shl
add
add
adc
cmp
sub
fsub
inc
sub
cmp
(bad)
push
inc
lds
or
fs
mov
cmps
push
xor
sbb
pop
jbe
loop
mov
fild
fwait
cmovge
mov
lock
push
sbb
jnp
and
and
or
mov
sub
push
dec
and
xchg
jl
push
inc
test
gs
inc
add
pop
inc
mov
sahf
rcr
xchg
inc
fldenv
dec
push
sub
in
and
adc
leave
mov
mov
sbb
pop
pusha
popa
leave
add
sub
out
mov
add
mov
leave
pop
mov
cdq
pop
pop
xor
loop
dec
push
dec
fistp
aad
add
ins
ins
popa
add
and
arpl
mov
outs
int
(bad)
mov
add
and
push
adc
ins
xor
jno
mov
adc
imul
stos
jae
pop
iret
addr16
je
pop
inc
jne
dec
je
pop
inc
lods
inc
icebp
push
jne
dec
inc
aaa
ret
and
dec
pop
add
inc
sahf
(bad)
and
cld
pusha
lds
leave
ficom
inc
es
xchg
xor
xor
lea
and
add
push
xor
cmp
push
adc
add
call
ins
pop
sahf
sbb
cmp
push
sbb
aad
or
mov
dec
mov
adc
sbb
inc
xchg
bts
and
xor
pop
adc
add
sbb
adc
pop
and
or
dec
sbb
cmc
aas
pop
and
dec
cld
into
and
daa
dec
cld
fwait
sub
or
sbb
sub
cmp
jo
test
or
movs
pusha
pop
jnp
mov
mov
mov
cmp
pop
mov
jbe
popa
inc
adc
clc
cmp
sti
mov
lods
adc
jo
je
ss
push
jne
dec
add
push
and
inc
sub
lds
xchg
out
push
xchg
adc
loope
into
dec
mov
cld
add
xchg
sti
clc
dec
pop
scas
aam
xor
or
add
daa
mov
je
add
bound
add
pop
adc
pop
cld
pop
adc
enter
add
pushf
cmp
shl
pushf
les
pop
dec
or
dec
push
std
add
inc
pushf
jae
std
clc
add
in
inc
push
cmp
xchg
add
cmp
in
and
and
pop
in
lds
pextrw
inc
jmp
fisttp
xchg
adc
jge
fsubr
shr
call
cvtps2pd
clc
xchg
pop
sub
mov
jb
jo
push
test
fdiv
add
inc
les
sbb
stos
enter
clc
test
rcr
stos
mov
enter
cmp
(bad)
adc
cmp
(bad)
fwait
and
or
inc
push
or
sub
xchg
aam
je
add
nop
out
aam
popa
bound
shl
xor
jbe
sti
xchg
dec
inc
cmp
nop
sbb
dec
inc
jne
hlt
repnz
dec
inc
mov
arpl
imul
jo
push
fstp
ins
dec
add
add
and
jns
xor
add
daa
emms
push
inc
fistp
push
dec
dec
push
cdq
inc
dec
pop
inc
jb
jne
push
or
xlat
sbb
(bad)
(bad)
sbb
ja
imul
pop
inc
fnsave
(bad)
pop
add
mov
lods
test
dec
rcr
or
outs
jns
push
pusha
ins
addr16
lods
cmc
fs
pop
inc
fs
push
das
sbb
push
inc
out
mov
inc
aaa
popa
and
sahf
and
sub
jae
cmp
sub
pop
mov
(bad)
and
sub
fdivr
into
pop
add
jae
or
add
frstor
daa
inc
popa
arpl
jo
out
add
mov
call
inc
scas
fcom
dec
aam
or
cli
movs
movs
mov
adc
fwait
lahf
jecxz
cmp
jg
sar
call
dec
inc
lea
mov
cmc
loopne
scas
xchg
dec
scas
inc
bound
stc
repnz
retf
je
cli
jmp
push
inc
add
or
or
and
jmp
scas
fild
idiv
lods
fiadd
fmul
icebp
add
dec
mov
xor
mov
bswap
fidiv
add
sub
xor
ds
pusha
sbb
sub
mov
mov
push
xor
xchg
js
lock
push
jae
jno
mov
nop
add
rol
xor
jae
cmp
and
add
in
imul
and
jno
cmp
inc
arpl
mov
in
xor
std
add
add
or
aaa
shl
je
push
cmp
add
fwait
xor
push
cmps
xchg
jp
push
test
mov
dec
xchg
loopne
pop
add
add
push
aaa
or
sbb
fwait
arpl
adc
or
xor
nop
push
nop
cmp
repnz
push
ror
and
pop
fcomp
inc
repnz
hlt
fs
mov
adc
and
in
jo
xchg
addr16
sahf
je
js
jns
in
jl
add
pushf
mov
mov
nop
push
cwde
and
xchg
sbb
or
fs
jo
das
inc
push
xchg
shl
cmps
fwait
fs
mov
inc
jge
cmc
imul
mov
xchg
fst
inc
loopne
clc
mov
pop
imul
add
je
outs
mov
push
jne
sar
dec
fstp
jne
and
addr16
cmp
mov
es
or
add
sbb
push
sub
fild
xchg
arpl
jo
mov
add
inc
push
ins
sbb
mov
or
fadd
inc
fs
mov
push
adc
add
push
mov
mov
outs
jb
stos
pop
mov
mov
aam
sub
jb
test
sbb
sti
push
fmul
push
inc
xor
xor
je
iret
fldenv
loop
xor
cmp
loop
clc
dec
inc
add
inc
push
adc
iret
test
js
add
pop
fs
mov
aam
enter
xchg
sub
dec
or
adc
test
add
push
adc
jne
fs
pop
cmp
in
pop
repnz
adc
mov
mov
mov
adc
add
xor
test
and
test
aad
cvtpi2ps
pop
adc
cs
inc
push
pop
mov
shr
mov
lds
jmp
inc
cmps
xor
jnp
mov
inc
and
push
aas
adc
inc
add
fs
and
jg
test
test
sbb
test
test
and
jl
mov
adc
test
push
xor
dec
or
jb
and
push
xor
sbb
xor
adc
bound
adc
sbb
ret
sub
stos
mov
gs
sub
mov
mov
shl
adc
cmp
pop
(bad)
movs
pop
add
add
test
jle
test
ins
pop
xor
sbb
retw
pop
sar
jmp
add
inc
jbe
mov
fmul
idiv
pop
in
or
movzx
shl
or
or
or
cmp
or
mov
inc
test
(bad)
xor
or
pop
fist
arpl
dec
inc
rcr
and
xchg
cmp
adc
arpl
sub
and
jae
and
xchg
ret
and
add
push
clc
add
adc
add
not
add
(bad)
out
push
mov
mov
cmp
into
lahf
mov
cmc
add
push
adc
dec
shl
mov
(bad)
fild
jmp
out
sub
inc
out
movs
mov
jecxz
and
adc
inc
in
sbb
push
xor
and
sti
cs
bound
sub
gs
pop
rol
out
dec
dec
aam
dec
and
pusha
jb
pmulhuw
js
sub
xchg
xor
and
mov
mov
out
jle
and
xor
or
xor
mov
mul
(bad)
xchg
pusha
xor
mov
aam
add
add
mov
fistp
pop
sti
push
lds
push
lods
jne
mov
fdiv
mov
inc
pusha
adc
shl
repnz
adc
mov
pop
ja
xor
ja
ins
xor
xor
pop
fwait
jge
jge
pop
sbb
and
pop
or
sbb
nop
ja
fldcw
retf
sbb
and
sbb
push
adc
fdivr
pop
and
popa
ins
and
fisub
jo
ret
pop
push
fadd
mov
clc
adc
sbb
not
and
jns
lods
sti
into
and
adc
popa
in
clc
xor
hlt
sbb
adc
or
or
(bad)
pop
mov
and
sbb
out
push
call
ficom
fstp
sti
hlt
pop
adc
and
or
mov
fsubr
sub
fdivr
mov
je
mov
or
cmp
out
jmp
int
sbb
sbb
arpl
add
and
pop
pop
sub
sub
stos
or
jnp
and
xor
push
add
pop
jle
and
xor
cmp
add
sbb
add
stos
pusha
jmp
and
int
adc
push
sub
push
xchg
gs
dec
jg
popf
pop
mul
inc
lock
inc
xor
mov
xchg
and
and
or
pop
in
xor
outs
push
sbb
rol
ds
dec
cmp
push
ins
fild
jg
push
add
test
xor
les
push
hlt
shl
cmp
pop
inc
jb
sbb
pusha
pop
and
leave
fs
xchg
jo
jb
jb
js
inc
ret
test
adc
test
pushf
mov
and
and
mov
daa
xchg
and
pushf
outs
sub
or
daa
mov
movs
test
enter
mov
cmps
adc
mov
push
fisttp
jo
ja
sar
cld
adc
or
js
iret
push
mov
xor
js
es
adc
ins
or
xor
jae
mov
sub
cmp
aaa
test
fst
leave
cmp
xchg
je
sbb
push
daa
mov
inc
sbb
aad
aas
ds
js
or
mov
js
pop
or
inc
cmp
retf
adc
js
(bad)
push
xchg
repnz
test
jns
and
enter
or
shl
nop
jl
nop
lods
mov
cwde
cmp
inc
and
(bad)
das
pop
inc
stc
xor
ror
scas
loope
cmp
xchg
jle
push
outs
int3
or
test
jl
push
repnz
inc
inc
cdq
jg
icebp
inc
and
enter
mov
ret
xor
jl
fs
loop
add
cwde
push
cld
mov
in
fsub
imul
imul
adc
inc
repnz
mov
stc
add
xchg
or
repnz
mov
jb
and
and
pushf
out
dec
adc
dec
mov
movs
push
jnp
repnz
xchg
inc
mov
pop
ret
dec
ds
xor
pop
adc
sub
dec
dec
push
in
lds
mov
(bad)
test
lock
lock
repnz
xchg
aas
enter
retf
stc
jb
jl
cmp
mov
lock
inc
mov
jns
stc
enter
nop
push
sbb
pusha
inc
mov
push
in
add
sahf
ins
jo
mov
mov
jle
mov
inc
and
arpl
daa
dec
xor
fs
fisubr
scas
js
retf
push
ret
pop
pusha
push
inc
js
jl
add
and
stos
push
stos
in
dec
xor
repnz
call
ret
push
retf
outs
mov
stos
sub
leave
pop
es
mov
cmp
or
sub
add
sub
enter
jmp
jle
cwde
adc
mov
and
xchg
push
sub
xchg
mov
lds
sbb
sub
add
ds
into
inc
cmps
xchg
outs
dec
sbb
add
leave
pop
inc
xor
add
jle
inc
dec
repnz
push
xor
pop
nop
xchg
jl
dec
ja
xchg
sub
cmp
pop
push
cmp
pop
dec
enter
scas
mov
cmp
dec
sbb
mov
mov
add
data16
jb
xchg
test
or
popa
and
pop
in
inc
xchg
test
add
lods
jl
mov
leave
xchg
push
xor
or
pop
pop
test
inc
dec
inc
dec
and
mov
test
inc
jns
and
fmul
xor
jmp
test
(bad)
xchg
dec
lds
add
sbb
or
cmp
xor
or
mov
test
test
inc
dec
lock
enter
fwait
pop
sahf
add
(bad)
and
push
repnz
call
or
popa
pushf
or
inc
mov
lock
stos
into
dec
shl
xchg
push
push
dec
mov
setbe
dec
and
push
stos
js
ins
or
enter
outs
ins
in
jp
mov
test
sub
lock
cwde
sub
jle
sub
fs
push
call
(bad)
sbb
cmp
jl
test
inc
call
jp
push
sbb
call
xchg
cmp
pop
push
call
stc
sbb
lods
and
in
mov
outs
inc
push
call
ret
movs
test
cmp
repnz
fdiv
loopne
xor
and
or
rol
ins
lahf
inc
sbb
push
repnz
cmps
push
push
mov
inc
sub
bound
ja
ss
lods
adc
sbb
xchg
jl
add
fwait
inc
cwde
dec
mov
xlat
shl
mov
pop
repnz
adc
shr
pop
xor
jmp
icebp
dec
nop
(bad)
dec
and
pop
xor
add
inc
xchg
dec
mov
aam
sbb
and
neg
call
xor
jecxz
cmp
and
push
xor
cdq
dec
mov
rol
add
pop
mov
test
ss
and
lods
aaa
and
mov
sbb
sbb
cmp
adc
push
add
and
mov
pop
pop
and
sub
es
xor
or
inc
in
add
or
mov
add
add
mov
cmp
dec
or
add
inc
sbb
les
add
add
outs
jg
mov
push
adc
or
cld
repnz
adc
jae
add
and
or
repnz
lahf
sub
cwde
cli
or
ins
dec
in
arpl
fbstp
stos
cmovae
or
popa
xchg
xchg
adc
das
pusha
push
xor
das
test
mov
add
adc
xchg
mov
mov
das
push
pop
(bad)
jg
mov
add
into
add
fld
mov
clc
mov
pop
jbe
push
inc
arpl
add
test
fstp
mov
addr16
inc
and
sub
mov
jbe
jmp
or
or
mov
push
dec
addr16
test
fs
adc
shr
lods
outs
or
cmp
add
and
add
sub
and
fidivr
and
push
aaa
cmp
add
xor
into
fnstenv
adc
jae
add
xor
push
sbb
and
pop
sbb
mov
in
and
and
arpl
sub
cmp
jmp
aas
fdivr
clc
add
adc
enter
and
int3
(bad)
jb
add
ret
pop
ror
ret
fmul
xor
sti
ins
mul
push
mov
jbe
xchg
clc
add
or
sbb
fld
and
cdq
pop
repnz
mov
loopne
mov
or
add
ins
in
fistp
mov
mov
add
lea
repnz
int3
mov
sbb
add
and
pop
cmp
add
sbb
or
adc
stc
push
retf
adc
les
or
sbb
and
mov
or
pop
sar
xlat
nop
mov
add
add
leave
cs
xor
sbb
add
add
sbb
sbb
xor
mov
or
dec
mov
sar
inc
push
add
and
or
je
adc
movs
add
push
mov
ja
or
adc
pop
mov
pop
in
pusha
push
or
leave
inc
add
or
adc
call
adc
or
jmp
pop
clc
jmp
mov
push
or
in
sub
test
push
in
jmp
fnstcw
je
ins
outs
popa
and
or
jb
jb
test
outs
push
and
outs
jne
push
add
and
gs
adc
ins
jo
add
mov
inc
inc
data16
arpl
dec
nop
mov
outs
outs
adc
mov
imul
jne
inc
nop
xchg
iret
or
scas
adc
or
test
test
add
mov
jb
pusha
xchg
jmp
mov
cmp
cmc
xor
mov
pop
push
add
add
pop
and
sub
dec
push
inc
hlt
or
push
add
adc
stos
mov
in
sbb
repz
xor
lea
dec
add
and
adc
jae
je
xchg
aas
push
mov
push
mov
test
add
xchg
pop
or
mov
pop
mov
je
gs
lock
xchg
data16
mov
in
mov
jne
arpl
out
or
out
mov
inc
xor
sub
retf
jle
or
and
clc
ss
js
add
or
lods
test
add
dec
or
push
jne
dec
jmp
or
(bad)
ss
push
push
adc
and
add
adc
aad
fs
pop
(bad)
mov
add
and
test
es
jne
ret
xchg
adc
sub
arpl
ret
mov
add
scas
ret
mov
rsm
jo
fs
push
inc
shl
cmp
jb
aaa
fst
dec
xor
enter
push
adc
mov
lea
pop
mov
loopne
mov
sub
je
gs
aaa
ins
fdivr
pop
dec
add
fadd
in
imul
push
jo
cmps
sbb
shl
xchg
xchg
cmp
mov
xor
push
jbe
push
add
data16
adc
ds
adc
add
sub
leave
iret
(bad)
outs
xchg
out
and
ret
in
inc
dec
out
arpl
lea
leave
inc
aad
hlt
inc
call
fbld
inc
aam
(bad)
xchg
setb
cmp
xchg
push
xchg
or
adc
ins
sub
(bad)
dec
dec
pusha
popa
add
pop
test
pop
adc
dec
or
ins
int
ss
xchg
dec
hlt
adc
cdq
inc
xchg
mov
neg
cmp
fwait
inc
mov
fmul
and
dec
or
inc
push
and
loopne
or
sbb
nop
mov
aas
push
push
test
rol
pop
push
pushf
mov
nop
leave
sbb
push
in
adc
not
inc
icebp
sub
xchg
mov
add
and
pop
push
adc
xor
jae
inc
mov
fst
aam
in
inc
or
xlat
fcomp
push
cld
adc
adc
mov
and
lds
pop
enter
sbb
or
das
mov
sbb
push
in
es
inc
loope
jmp
lock
mov
adc
hlt
xchg
mov
mov
add
push
jnp
adc
xchg
enter
pusha
or
(bad)
and
or
add
(bad)
sti
aas
stos
pop
out
or
and
sub
je
and
sub
imul
dec
mov
xchg
fcomp
clc
push
fs
cwde
pop
inc
js
add
fcom
inc
adc
and
inc
add
push
lea
call
mov
pop
adc
inc
ins
mov
sar
jg
cli
(bad)
xor
or
mov
add
pushf
add
and
mov
hlt
dec
jne
xor
or
or
in
push
jb
outs
das
sub
add
mov
inc
add
or
or
and
fsub
in
and
div
dec
ins
in
pop
sub
or
and
adc
sub
pop
rol
frstor
push
push
(bad)
xor
add
int3
pop
in
mov
ds
inc
in
into
cmp
mov
xor
xor
or
xchg
inc
test
bound
sbb
add
mov
movs
movs
add
outs
ja
in
hlt
ja
add
jg
add
pop
mov
pop
or
pop
lock
pop
add
dec
inc
cmp
mov
movzx
xor
sub
add
ror
and
add
mov
retf
ins
aam
rol
push
sub
adc
jne
arpl
or
inc
dec
je
mov
rcl
mov
shl
jg
push
sbb
sbb
pop
lds
pop
in
cld
and
ficomp
repnz
fild
push
shr
jae
sub
int3
xor
adc
push
xor
adc
adc
or
adc
mov
or
xchg
jmp
inc
inc
mov
add
pop
sbb
inc
cmp
xchg
mov
cmps
dec
shl
dec
aaa
dec
iret
cld
push
clc
or
je
call
hlt
or
jb
sbb
call
stos
(bad)
in
mov
pop
push
or
add
pop
in
mov
xchg
pop
nop
inc
push
mov
hlt
add
or
(bad)
lea
cld
xor
gs
push
mov
sub
cmp
mov
add
sub
aaa
mov
add
pop
add
test
add
test
dec
sub
dec
mov
add
push
or
cmove
lds
pop
push
jmp
outs
mov
inc
cmp
jne
icebp
pop
add
js
ror
add
movs
jne
push
dec
cld
stos
mov
scas
pushf
mov
add
clc
mov
outs
or
adc
pop
repz
(bad)
add
adc
push
push
int3
inc
or
enter
or
adc
lea
inc
push
test
lea
jne
test
mov
dec
add
inc
add
add
imul
pop
push
adc
lea
push
and
jp
int
fs
ja
mov
inc
es
(bad)
nop
mov
xor
xchg
jl
arpl
and
scas
add
inc
pusha
and
imul
and
(bad)
jmp
jae
nop
lock
add
pusha
inc
sub
add
jae
sbb
loopne
push
icebp
dec
add
out
mov
push
mov
test
sub
lods
sub
adc
add
(bad)
pop
ja
push
ss
push
add
and
jl
lds
pcmpeqd
and
jnp
(bad)
test
and
dec
jne
pop
push
pop
fild
stc
cld
push
mov
mov
sbb
je
cld
imul
lods
jne
lods
leave
stc
add
push
sbb
sub
std
cmp
je
add
repnz
pop
(bad)
hlt
push
pop
push
push
cmc
adc
fcomp
nop
or
adc
or
int
pop
cmp
dec
add
jg
mov
(bad)
fstp
xor
push
add
loopne
add
xor
add
popf
add
and
mov
xchg
inc
bound
xor
add
pop
or
fld
frndint
ins
xor
add
dec
adc
dec
inc
push
fcom
and
jmp
adc
js
das
ret
or
daa
mov
test
int
dec
call
and
jmp
add
popa
dec
add
mov
cmp
retf
mov
xchg
mov
push
adc
shufps
and
ins
or
inc
lds
ret
push
jp
mov
enter
loopne
push
imul
or
push
gs
mov
mov
cmp
loopne
cld
(bad)
sbb
inc
adc
scas
adc
jbe
or
inc
sahf
mov
sti
lods
xchg
inc
add
out
xchg
cli
aad
dec
lock
add
or
xor
sub
pop
add
xchg
pop
add
add
ror
out
dec
dec
mov
lock
das
pop
xor
cld
adc
iret
shr
push
fs
xor
ins
jbe
cld
mov
xchg
shr
shl
xchg
add
xchg
clc
aaa
jb
add
icebp
cld
clc
push
fldenv
push
cld
jg
push
pcmpgtb
dec
dec
xchg
and
in
push
add
sar
add
mov
cmp
jbe
dec
repnz
and
push
or
pop
dec
popa
ins
lahf
call
mov
or
add
inc
mov
out
cmp
js
cmp
sbb
dec
or
mov
add
test
clc
div
or
jo
daa
push
imul
ins
in
rcl
pusha
pop
movs
popa
adc
push
addr16
fadd
setbe
ins
add
push
inc
sub
stos
or
daa
jmp
or
cmp
sbb
pusha
enter
jo
pushf
ret
outs
je
push
jo
inc
jno
dec
lea
or
rol
ins
dec
fdivr
pop
fwait
mov
or
mov
icebp
nop
mov
lds
cmp
js
inc
push
dec
je
and
jge
adc
dec
outs
add
jmp
mov
daa
mov
ds
dec
inc
jmp
sub
push
sub
loope
cmp
cwde
push
str
xchg
inc
inc
(bad)
adc
push
dec
dec
xchg
mov
add
sub
sub
in
sbb
loope
sbb
jne
mov
shl
sub
fs
sub
nop
mov
fwait
in
xor
or
test
add
ins
int3
dec
xchg
fs
shl
fimul
push
into
pushf
cdq
inc
ins
shr
nop
pop
adc
xchg
xor
test
fsub
xor
sub
or
dec
dec
pop
shl
mov
mov
dec
gs
jne
je
xchg
test
and
xor
mov
mov
sti
cmp
sub
mov
push
inc
adc
nop
stos
mov
add
into
aad
(bad)
cmps
push
adc
mov
fistp
dec
pop
and
xlat
xchg
scas
dec
pushf
xchg
sub
jne
scas
mov
mov
pop
xchg
and
push
aad
cmp
scas
and
pop
pushf
xor
dec
popf
and
mov
pop
push
adc
mov
push
stos
dec
ds
xchg
dec
push
dec
fwait
adc
add
dec
pop
repnz
pop
adc
stos
ss
stos
xchg
jmp
mov
add
mov
sbb
sbb
xor
mov
push
(bad)
add
push
or
ds
inc
lds
and
daa
fmul
add
fadd
jmp
in
fs
cmp
popa
add
adc
dec
inc
ins
jmp
mov
dec
enter
fist
stos
ds
add
popf
and
and
inc
adc
ins
call
in
adc
or
or
pop
mov
add
cmp
dec
fcom
xchg
adc
rol
adc
enter
js
enter
(bad)
enter
jo
xor
push
xchg
arpl
sub
mov
or
ret
test
repnz
popf
nop
mov
aam
or
movs
mov
sub
adc
ins
push
push
pop
inc
rcr
and
add
cmps
add
and
sahf
add
shl
(bad)
xor
mov
or
add
fisub
test
xor
ficom
aam
test
cli
mov
lods
test
je
inc
hlt
mov
sbb
add
xor
dec
repnz
and
xor
(bad)
mov
scas
stos
mov
mov
adc
mov
mov
push
mov
movs
mov
test
add
mov
dec
push
dec
(bad)
add
dec
lea
and
sub
pop
jns
sbb
int
mov
jae
(bad)
cmp
hlt
cmovo
in
lahf
dec
std
inc
(bad)
cmp
inc
mov
dec
sbb
inc
in
xor
mov
arpl
outs
mov
leave
movs
xlat
ins
lods
adc
and
test
pop
jbe
mov
xlat
mov
xchg
mov
push
mov
ds
out
or
inc
mov
inc
inc
mov
out
add
mov
aad
jne
add
push
aam
dec
sbb
in
loope
cwde
ins
mov
and
sbb
dec
xor
repz
packsswb
bound
and
adc
data16
outs
imul
int3
pop
dec
adc
arpl
cmps
xor
and
dec
es
xchg
xchg
mov
data16
jmp
mov
in
sub
lods
mov
gs
lea
mov
adc
lds
add
or
mov
push
lock
cmp
ja
jbe
add
mov
call
add
sar
cwde
and
mov
push
aas
mov
mov
push
cmp
nop
dec
es
inc
xchg
and
mov
inc
jecxz
mov
xchg
test
aas
or
push
push
jne
and
or
jae
sub
add
pop
dec
jnp
or
adc
inc
outs
outs
dec
arpl
sbb
or
fs
int3
outs
outs
add
adc
push
mov
fild
mov
or
pop
add
sbb
push
leave
movs
and
arpl
xchg
or
xchg
mov
add
sbb
sti
mov
add
push
xor
adc
imul
adc
sar
lods
bound
jle
and
and
add
mov
push
cmp
and
cmp
movs
test
lahf
dec
or
mov
ss
sar
jmp
rcl
push
mov
loop
and
dec
jmp
add
xchg
add
rcr
jmp
cmc
sub
rcl
shl
add
push
or
adc
or
mov
ret
pcmpeqb
push
sahf
in
mov
xchg
push
dec
lods
jo
xchg
inc
xchg
ror
div
inc
and
in
rcr
js
mov
sbb
cdq
test
not
jmp
sbb
adc
pop
enter
sub
sbb
rcl
sbb
and
cmp
push
fadd
and
mov
movs
addps
movs
loopne
fs
jbe
retf
lods
sub
jbe
pop
mov
or
or
in
int
pushf
fdivrp
sbb
inc
sub
pop
pop
lods
nop
adc
fcomp
inc
mov
fisttp
xchg
imul
pop
icebp
int
ss
out
fsubr
jb
add
bound
push
data16
div
fmulp
add
faddp
in
pop
in
add
adc
cdq
fs
shl
mov
sbb
int3
lds
add
inc
push
cmp
fs
jmp
nop
mov
push
adc
test
mov
sbb
inc
daa
push
and
mov
hlt
das
mov
sbb
enter
loope
loopne
daa
mov
inc
add
or
std
sub
neg
mov
imul
xchg
xor
adc
add
jge
lock
jne
dec
push
push
add
jmp
in
into
lock
pusha
add
or
(bad)
mov
add
or
fdivr
or
adc
scas
ins
adc
xchg
sbb
cmp
(bad)
and
nop
add
inc
lods
and
mov
mov
nop
retf
dec
xchg
pop
or
mov
rcr
sahf
jp
ficom
ins
add
(bad)
sub
sbb
mov
adc
pop
xchg
dec
mov
in
enter
call
(bad)
fsub
int3
xchg
in
loopne
ror
add
mov
(bad)
ins
outs
adc
stos
ror
adc
enter
or
mov
mov
sbb
mov
in
ret
or
push
int3
mov
push
add
mov
ret
shr
sub
inc
inc
mov
sbb
adc
inc
iret
dec
inc
mov
cwde
arpl
imul
xchg
cwde
xor
(bad)
enter
dec
xchg
push
stos
and
in
ss
outs
sub
lods
ins
pop
popa
ror
add
retf
inc
enter
adc
pop
mov
and
(bad)
loopne
and
(bad)
mov
dec
jecxz
or
mov
ret
cmp
mov
ja
adc
push
adc
stc
sbb
ror
cmp
add
pusha
dec
and
adc
dec
xor
adc
adc
leave
add
inc
lods
dec
jno
or
mov
cmp
call
xchg
adc
dec
xchg
hlt
lea
inc
or
add
xchg
hlt
jge
lock
lods
dec
mov
cmp
add
adc
and
cwde
mov
add
sbb
test
fdivrp
pop
pop
outs
movs
sub
lods
mov
mov
scas
mov
pusha
call
hlt
in
call
add
inc
cmp
jge
xor
sti
ret
inc
push
loopne
xor
mov
push
in
inc
push
fwait
jns
cwde
inc
sub
xchg
mov
sub
aam
mov
cwde
out
loopne
test
inc
pop
cmp
push
mov
ret
push
mov
push
imul
fsubr
pop
jnp
sub
mov
adc
sub
int
and
sbb
cwde
int
mov
sub
cmp
faddp
arpl
adc
dec
push
fsub
mov
xor
pop
mov
or
mov
sbb
jbe
(bad)
dec
sbb
jmp
jmp
sub
inc
in
jae
inc
loopne
call
aas
dec
inc
push
push
inc
inc
inc
mov
sbb
stos
sbb
pushf
gs
mov
and
neg
scas
ins
shl
mov
push
push
cmp
int
mov
mov
push
sti
dec
repz
test
jmp
sub
loope
sbb
push
js
es
sbb
scas
mov
and
or
and
retf
push
enter
mov
adc
and
mov
rol
mov
push
sbb
adc
ficom
stos
pop
inc
test
mov
or
adc
jno
outs
aaa
in
mov
sysret
mov
push
inc
repz
aad
inc
push
push
ja
fs
leave
popf
rcr
dec
mov
rcr
sti
loopne
loopne
add
pop
loopne
rcl
adc
or
fdiv
enter
jl
or
int3
xchg
mov
repnz
push
aam
push
jnp
jle
mov
es
inc
fcomp
add
(bad)
jmp
sub
popa
xchg
sub
sub
lods
mov
push
xor
jbe
xor
add
sahf
xor
add
in
add
shl
shl
xchg
(bad)
(bad)
jnp
mov
push
lea
jnp
mov
cmp
mov
mov
and
add
retf
xchg
inc
push
mov
shr
inc
jge
jl
arpl
daa
jo
xchg
jb
int
imul
sar
jbe
jmp
sub
jae
jb
sbb
nop
pop
nop
dec
inc
cmp
fistp
mov
xor
jnp
mov
pop
sar
test
enter
mov
out
xchg
add
mov
call
jno
jg
sbb
into
mov
les
xor
je
std
inc
sbb
jp
in
call
mov
nop
mov
inc
xor
xor
imul
mov
jmp
es
sbb
lds
daa
fst
stos
cwde
cmp
adc
nop
mov
frstor
mov
push
push
add
test
pusha
or
push
jne
out
daa
rcl
adc
inc
push
mov
gs
(bad)
push
push
push
pop
mov
hlt
push
or
stos
test
in
mov
jp
and
and
retf
js
add
out
mov
vpmuludq
xchg
and
dec
nop
cld
sub
hlt
and
mov
js
aam
mov
lods
sub
inc
xchg
sbb
out
add
nop
or
(bad)
stos
or
dec
test
inc
inc
imul
push
nop
clc
mov
int3
and
into
sbb
inc
push
addr16
outs
loopne
mov
sbb
adc
sbb
adc
xchg
cwde
sar
or
movs
call
add
mov
and
pop
push
sbb
mov
fisttp
int3
rcl
mov
dec
adc
and
out
dec
inc
inc
inc
mov
push
enter
mov
fiadd
xchg
cdq
push
and
cli
and
adc
mov
add
xchg
outs
fwait
stos
cld
nop
add
je
gs
cli
nop
addr16
sub
mov
retf
fmul
add
mov
or
mov
mov
call
cmps
sub
inc
nop
int
mov
sub
aas
mov
hlt
push
or
test
adc
test
xor
cmp
lock
ins
pop
push
sub
and
sbb
imul
(bad)
mov
and
mov
add
xchg
dec
sub
sbb
rol
pop
mov
xor
xchg
je
sbb
or
std
push
or
inc
cmp
jb
push
push
xor
mov
mov
xor
or
pop
mov
or
test
test
push
mov
gs
rcr
sbb
push
xor
rol
jle
xor
inc
aad
sub
stos
cli
mov
add
int
or
xor
or
mov
and
shl
inc
mov
outs
sbb
mov
bound
mov
out
dec
push
or
and
retf
push
mov
test
rol
and
adc
(bad)
into
in
int3
sbb
and
je
adc
leave
outs
jo
or
pop
push
add
outs
fs
stos
ror
xchg
dec
and
sbb
or
das
mov
jne
fist
mov
outs
je
outs
fs
outs
je
jb
fiadd
pusha
xor
or
adc
dec
or
sbb
dec
ins
ins
xchg
mov
xchg
or
popa
sbb
or
xchg
mov
mov
sub
das
mov
sahf
xchg
sbb
movs
push
add
gs
push
in
leave
aaa
ins
mov
and
je
or
fild
add
arpl
push
ins
ss
mov
fs
jmp
outs
mov
inc
ins
cmp
jb
push
inc
js
outs
adc
xor
arpl
fs
out
rcr
pop
inc
addr16
sbb
in
fwait
dec
xchg
and
inc
addr16
data16
aaa
add
stos
test
sub
xor
ret
(bad)
mov
pop
imul
xor
or
pop
or
and
inc
push
xchg
adc
or
xchg
inc
aaa
sub
pop
ja
dec
push
sub
dec
pop
jmp
mov
and
adc
xchg
pop
leave
cmp
bound
or
jp
mov
sbb
pop
ret
aaa
or
inc
inc
mov
in
sub
and
sbb
(bad)
adc
mov
cmp
ret
jbe
mov
mov
lods
unpcklps
sahf
xor
call
repnz
sub
adc
and
add
or
jnp
rcl
sub
sbb
pop
jg
inc
cmp
jne
mov
mov
in
ret
or
add
in
sub
and
out
les
clc
mov
mov
cmp
push
push
push
or
(bad)
iret
call
adc
mov
add
mov
js
lds
shl
adc
pop
adc
adc
add
dec
les
outs
add
loope
mov
push
mov
clc
mov
rcl
lds
in
and
jl
and
les
aam
add
lds
sub
jnp
nop
lods
or
xchg
mov
add
mov
les
rol
aas
sbb
mov
cmp
enter
push
cmp
mov
or
push
test
dec
in
push
push
outs
jne
or
xchg
add
jns
add
mov
sub
xor
push
dec
mov
inc
push
or
arpl
or
cmp
and
inc
dec
dec
push
inc
push
dec
and
cmp
jge
dec
bound
and
addr16
pop
add
pop
and
or
ja
or
sbb
push
and
mov
inc
and
xchg
ret
push
push
shl
daa
add
jae
push
call
inc
sub
ret
in
loop
dec
push
rcr
shl
cmp
and
mov
movs
xor
jne
imul
add
sub
and
mov
ja
jb
xchg
ror
iret
das
repz
xor
adc
adc
mov
pop
jl
cmp
lea
inc
push
imul
pop
ss
push
adc
xor
fisubr
adc
push
lods
aam
mov
push
mov
sbb
xor
pop
add
enter
inc
shl
mov
test
dec
icebp
(bad)
dec
cld
pop
dec
lock
nop
scas
sbb
xor
sar
popf
lahf
add
sbb
mov
jb
sub
add
and
(bad)
lods
fnsave
aam
adc
sub
popa
es
inc
add
push
inc
pop
sbb
mov
es
cld
push
jmp
mov
(bad)
jle
hlt
pop
nop
or
add
or
fadd
add
inc
sub
leave
and
fs
in
cdq
nop
inc
xchg
in
lock
add
leave
lock
fs
xchg
clc
adc
cdq
nop
add
xchg
fs
mov
rol
and
repnz
cs
xchg
in
or
leave
xchg
adc
shl
sbb
and
mov
inc
mov
fld
cld
es
out
outs
cmp
mov
mov
adc
mov
pop
sub
test
xchg
lds
and
adc
jns
pop
push
xor
retf
adc
nop
daa
fld
inc
mov
jo
sbb
mov
mov
add
cld
fstp
pop
sub
sub
or
xchg
xchg
mov
cs
test
sub
or
cs
dec
outs
imul
rep
push
push
xor
inc
addr16
mov
pusha
or
jb
xor
sbb
cs
and
fmul
or
int
mov
ret
lock
inc
adc
push
jae
rcl
inc
clc
adc
push
xchg
into
vmovmskps
fld
cs
nop
int3
fadd
jmp
push
push
adc
lock
or
mov
mov
mov
dec
movs
dec
adc
push
or
xchg
int3
(bad)
in
clc
pusha
push
inc
and
cmp
jbe
xchg
mov
mov
fs
lock
out
sbb
mov
ret
sub
cmp
dec
fcomp
loopne
cmps
sub
jp
xlat
cmps
pop
mov
and
lock
popa
dec
add
sub
int
outs
nop
xchg
sbb
pushf
ret
dec
retf
xor
in
jbe
dec
les
xor
push
icebp
sbb
iret
jnp
and
fbstp
jo
push
and
cld
shr
mov
dec
pusha
adc
dec
bnd
jecxz
sbb
xor
xor
push
rcl
jae
lea
scas
add
test
add
mov
sbb
mov
rol
cmp
mov
jmp
je
sub
je
sub
je
sub
in
fucomi
test
mov
mov
or
repnz
adc
add
or
adc
sub
mov
dec
inc
xchg
inc
add
dec
sbb
iret
or
pusha
rcr
iret
rol
xor
push
add
push
inc
and
or
and
add
mov
or
and
and
add
test
add
enter
pusha
xor
cmp
mov
or
nop
call
scas
rol
dec
js
retf
jge
ins
ror
pop
cmp
jmp
adc
dec
lock
fs
and
jmp
sbb
out
xor
pusha
pop
or
sub
arpl
sar
xchg
xor
adc
not
xor
loopne
add
jo
aas
dec
cmp
xor
daa
add
add
inc
adc
(bad)
jle
les
pop
add
addr16
arpl
sbb
sub
push
sar
outs
push
cmc
out
sbb
fs
adc
inc
rol
push
cwde
adc
pop
jp
fwait
loope
iret
clc
inc
mov
mul
fld
test
mov
cmp
mov
and
add
fwait
xor
sub
aas
add
inc
or
clc
xor
add
(bad)
clc
mov
(bad)
stc
adc
push
push
(bad)
out
add
sbb
movs
jmp
cmp
cmp
dec
sbb
mov
xchg
fsub
push
call
mov
sbb
lock
pushw
add
sub
push
adc
call
out
lds
les
inc
cmp
sbb
sbb
add
loopne
sub
pop
push
rol
mov
outs
cmp
mov
dec
and
pop
mov
sbb
scas
add
in
adc
inc
jne
aam
add
mov
dec
mov
push
aam
xor
adc
lock
mov
mov
add
and
in
sbb
xchg
aam
shl
push
jo
and
cmp
nop
in
fdivr
in
in
adc
addr16
cmps
add
cmp
inc
lds
adc
sub
or
aam
in
rcr
or
add
xchg
adc
pop
aas
das
adc
pop
xchg
aad
(bad)
and
or
inc
mov
in
pop
and
(bad)
lock
sub
jns
adc
dec
xchg
enter
loopne
push
sub
test
fmul
and
cmc
retf
mov
dec
or
cmp
mov
(bad)
shr
add
dec
cmp
pusha
and
jno
movaps
push
pop
jmp
test
xor
mov
jb
fsubr
gs
push
or
add
inc
cld
inc
imul
loope
bound
add
xor
ror
push
and
or
in
ins
adc
mov
lds
add
xor
pop
adc
adc
test
or
fcmovne
add
dec
inc
xor
popa
mov
test
in
xadd
add
in
push
aad
bound
clc
add
mov
push
push
fs
xor
(bad)
or
test
je
jg
jmp
dec
push
idiv
loop
jns
sar
jns
adc
jmp
push
inc
adc
add
call
add
sub
sar
jns
adc
jbe
fadd
add
or
fiadd
adc
adc
pop
mov
cmp
sub
enter
(bad)
ins
cmp
sbb
fdivr
cwde
inc
cmp
test
cld
fadd
mov
and
and
jbe
cmp
fnstenv
sub
mov
xchg
xor
imul
in
leave
js
nop
fadd
pusha
xchg
sti
arpl
and
ja
push
cld
arpl
popa
jae
inc
imul
or
xor
fld
clc
leave
arpl
sbb
je
mov
and
pop
adc
mov
xchg
ins
adc
and
add
xchg
dec
mov
in
add
and
jb
and
je
adc
adc
sbb
pop
pop
push
jmp
mov
ret
arpl
mov
sbb
mov
xor
push
jb
lds
or
jbe
mov
call
adc
mov
push
call
nop
xchg
mov
fadd
fsub
pop
mov
sub
call
cmp
adc
push
add
pop
cmp
sbb
fdiv
jnp
push
hlt
jle
mov
in
mov
inc
adc
scas
sbb
je
xor
dec
xchg
dec
loop
or
data16
pop
repz
push
dec
mov
call
or
add
mov
ins
cmp
stc
mov
add
add
inc
mov
(bad)
leave
aaa
cmp
out
lods
sbb
add
test
leave
jl
mov
mov
or
lods
adc
xor
xchg
push
jnp
xor
push
mov
mov
jmp
and
push
sbb
(bad)
jl
sub
mov
(bad)
xchg
icebp
inc
wbinvd
adc
clc
mov
imul
sub
out
sub
xchg
cmps
pusha
dec
shr
sar
bnd
inc
dec
and
sub
fmul
add
push
ins
lock
mov
jg
xlat
or
xchg
aaa
and
mov
mov
movs
or
movs
jbe
dec
fsubr
enter
mov
stos
pop
pop
fs
mov
xor
and
mov
mov
mov
inc
jae
daa
add
outs
cmp
je
pop
and
add
out
xchg
aam
mov
add
or
stos
ret
clc
fild
inc
popa
jle
push
dec
shr
repz
pusha
cmp
ret
loopne
lods
sub
scas
push
enter
push
push
mov
popa
and
scas
fs
cmp
into
int3
sbb
fsub
test
(bad)
call
mov
mov
icebp
fmulp
and
mov
ret
mov
adc
jl
add
cld
cmp
mov
xchg
sbb
and
in
cmp
dec
xor
fs
xor
sub
inc
push
dec
inc
inc
xchg
dec
es
and
daa
sub
xor
loope
dec
sar
sub
scas
push
or
loopne
js
adc
in
dec
mov
lock
inc
and
mov
mov
dec
adc
shl
xor
mov
xchg
jmp
(bad)
push
jno
mov
call
and
xor
idiv
lds
clc
jne
in
cmps
call
cmp
adc
pop
(bad)
scas
pop
mov
loopne
jne
push
xor
push
sahf
bound
test
mov
xor
jne
mov
jne
jmp
ds
xchg
fmul
sub
inc
mov
in
les
dec
jmp
inc
sar
ins
out
sub
sub
outs
adc
push
lock
add
pop
int
sbb
je
add
sub
je
psubusb
add
mov
loopne
loope
sub
mov
mov
pop
add
mov
xchg
dec
mov
adc
jmp
retf
fild
sub
and
in
sub
mov
add
adc
rcr
add
or
pop
sub
mov
jno
mov
or
(bad)
inc
mov
mov
mov
and
loop
cdq
(bad)
nop
cmp
inc
in
call
cld
imul
add
popa
imul
sub
add
addr16
es
ins
mov
sub
shr
outs
jo
jecxz
mov
aam
pop
out
daa
push
inc
sub
jle
xor
pushf
in
push
pop
dec
aad
ss
sub
inc
adc
xchg
sub
nop
stos
in
in
cmp
ja
mov
jb
cmp
ja
test
dec
or
adc
cmp
sar
ror
mov
mov
sbb
clc
mov
data16
inc
jb
push
jno
out
aam
jo
and
in
scas
mov
je
mov
mov
mov
pop
sub
push
sub
mov
popa
loop
aam
or
pop
mov
test
adc
outs
and
mov
(bad)
repnz
movs
adc
inc
adc
inc
sahf
xchg
or
fs
push
jecxz
lock
cmp
leave
add
xchg
xor
(bad)
out
mov
lea
cmps
sub
add
sub
out
or
xor
sar
pusha
sub
jmp
inc
hlt
mov
into
shl
mov
mov
sbb
adc
push
or
push
mov
sbb
or
mulps
fsubr
xlat
xor
jp
push
jl
(bad)
and
add
or
add
mov
lods
hlt
mov
or
push
jbe
scas
js
sbb
data16
lahf
out
push
add
push
ror
mov
hlt
das
add
sbb
jne
xor
dec
mov
sub
pop
mov
movs
inc
pop
mov
jl
mov
pop
or
inc
movs
mov
int
hlt
retf
mov
dec
inc
dec
dec
dec
inc
dec
dec
test
xchg
xchg
and
test
iret
pop
and
push
and
mov
ret
pop
out
push
jmp
or
pop
sbb
and
cs
mov
pop
cmps
arpl
jmp
mov
mov
add
mov
pop
or
xor
push
push
xchg
sbb
bound
xchg
enter
in
xchg
mov
xchg
or
add
or
in
pushf
sbb
or
adc
leave
test
adc
sbb
adc
js
fstp
jg
hlt
mov
(bad)
clc
mov
scas
push
or
xor
or
nop
inc
sahf
sub
adc
or
in
mov
xchg
push
(bad)
push
inc
add
dec
adc
pop
pop
xchg
iret
fs
in
cmp
mov
pop
push
sbb
jno
repnz
enter
cmps
and
out
(bad)
and
inc
add
cmp
xchg
cld
sub
bound
adc
jns
loopne
jl
test
dec
daa
shl
adc
sub
bound
and
popa
adc
sub
lahf
jae
push
gs
jbe
mov
mov
stos
sbb
jo
mov
rcr
out
adc
or
sub
sub
or
js
or
hlt
out
adc
cld
in
dec
test
jp
push
pushf
nop
add
call
std
data16
adc
ret
mov
rol
ss
test
pop
pop
or
cmp
sbb
(bad)
sbb
fimul
mov
cmp
ins
rcl
cmp
jmp
fisttp
sbb
popa
call
inc
daa
inc
xchg
cmc
lahf
scas
and
jmp
push
push
cmp
and
push
or
push
xor
or
add
xor
dec
sub
test
mov
aaa
add
imul
dec
sub
add
outs
push
outs
cmp
pop
pop
mov
mov
add
sahf
or
mov
cmps
inc
add
add
cmp
loopne
out
mov
out
test
aam
sub
mov
and
fisttp
mov
arpl
adc
mov
push
adc
cld
out
inc
adc
xor
icebp
adc
rol
jne
mov
push
dec
shl
outs
push
add
mov
sub
adc
add
cmp
mov
and
jns
jne
jg
out
movs
or
pop
inc
test
add
cmc
add
imul
inc
mov
retf
and
inc
call
in
push
cmps
and
add
xchg
ret
ss
cld
ret
(bad)
out
inc
mov
sub
adc
test
jo
in
retf
or
sti
jg
in
repnz
jl
adc
push
or
icebp
je
adc
inc
repnz
xchg
push
push
movs
or
add
mov
repnz
cmp
pop
push
icebp
stos
or
shr
and
nop
test
mov
inc
jbe
inc
dec
hlt
lock
push
dec
mov
fwait
xor
(bad)
js
sub
mov
add
jl
jns
dec
mov
sbb
sub
jb
jmp
daa
fdivr
in
ins
das
mov
pop
(bad)
mov
lea
push
sbb
xchg
in
add
mov
mov
jnp
clc
mov
xor
sbb
mov
xor
test
loopne
xchg
fdivr
jnp
inc
scas
fsub
sbb
push
xchg
adc
popf
jne
add
and
push
icebp
inc
xor
aas
aad
cdq
leave
cs
test
push
add
out
add
jg
cmc
pop
or
mov
int3
mov
in
pop
pusha
push
jae
mov
push
cmp
cs
sbb
add
jo
and
adc
push
repnz
enter
add
add
push
add
and
out
sbb
mov
adc
int3
xor
in
push
test
cmc
and
pusha
add
fistp
push
jae
mov
adc
repz
xchg
rcl
aad
aas
retf
scas
cmp
(bad)
cli
in
mov
or
cmp
ret
je
and
sbb
add
jl
sub
push
data16
inc
mov
leave
or
or
pop
xchg
sar
and
mov
sbb
fild
xor
lea
xor
test
adc
pop
xchg
dec
xor
pop
push
js
enter
nop
mov
neg
enter
pop
adc
add
and
retf
popf
dec
or
rol
mov
js
pop
test
cmps
sub
and
sbb
test
pop
mov
nop
ror
inc
pop
mov
mov
pop
fstp
adc
sbb
fistp
mov
pop
cdq
push
mov
js
dec
push
shr
add
add
cmp
clc
inc
test
and
cld
daa
xor
dec
test
jl
inc
sbb
sbb
mov
sbb
inc
pop
push
(bad)
fsub
and
pop
cmps
fild
fild
fdivrp
fmul
cmp
imul
mov
pop
loope
sub
or
rol
mov
stc
shl
or
xchg
inc
cmp
hlt
mov
sub
enter
jb
pop
imul
push
in
lea
push
inc
adc
cs
ret
mov
enter
and
inc
cmp
nop
loopne
sbb
or
and
pop
adc
mov
mov
mov
sub
lahf
ss
ins
mul
fmul
pusha
mov
add
inc
mov
jbe
lods
pop
adc
push
cmp
jnp
inc
ret
mov
ret
sub
addr16
add
in
xchg
sbb
sub
in
and
mov
(bad)
cmc
inc
ret
mov
push
xor
push
in
ins
les
mov
loopne
add
adc
ins
(bad)
inc
push
into
jb
jbe
test
fadd
push
jnp
pop
mov
or
add
inc
pusha
add
sbb
add
leave
ins
pop
mov
test
je
dec
push
in
or
push
and
jmp
push
push
leave
jmp
and
int3
les
sbb
fild
adc
sub
mov
add
arpl
pushf
out
ds
inc
mov
adc
mov
not
mov
in
sub
adc
hlt
fld
outs
add
daa
push
xchg
imul
or
xor
cmp
(bad)
push
push
jge
jne
je
mov
ins
ret
out
bswap
add
cmp
mov
adc
or
cmp
dec
add
jmp
loopne
push
aaa
push
sbb
mov
push
cmps
jo
lods
inc
mov
or
jle
mov
jmp
fiadd
sbb
sbb
int
push
mov
out
xlat
cmp
shl
mov
mov
dec
push
daa
mov
add
xchg
in
js
sbb
xor
or
imul
add
sub
cmp
in
loopne
rcr
or
mov
push
shr
imul
xor
sub
inc
sub
or
and
and
push
push
dec
inc
push
jmp
inc
(bad)
jmp
adc
mov
or
xchg
mov
rcl
fcom
dec
mov
push
sub
push
loopne
shl
jns
sbb
mov
inc
lods
jne
and
fcom
jge
enter
cmp
xor
test
pop
test
clc
sub
jae
in
mov
cmp
or
add
sbb
clc
(bad)
hlt
jmp
jl
clc
sbb
inc
sub
push
cld
nop
movs
xchg
add
and
cld
sub
fsub
cmp
mov
add
ss
push
pop
or
(bad)
aam
add
pop
repnz
mov
ss
xor
or
push
xchg
fld
fld
xor
push
xchg
sar
imul
(bad)
add
cmp
adc
fs
add
fcom
enter
add
add
in
test
or
jo
inc
sub
mov
hlt
fwait
push
fmul
out
cwde
mov
imul
cli
add
je
cli
sbb
cli
add
leave
fmul
pop
cmps
add
lea
mov
mov
mov
add
movs
cmp
xchg
stos
int3
and
and
ret
mov
fwait
adc
jg
stos
add
jmp
jne
push
arpl
mov
mov
sub
adc
jmp
or
cli
pop
inc
iret
pushf
mov
stc
add
push
inc
scas
sti
jge
dec
nop
int
mov
outs
icebp
in
inc
fwait
sbb
and
jae
inc
fnstcw
and
jl
outs
addr16
mov
mov
xor
and
xor
mov
movs
test
or
in
clc
inc
pop
and
(bad)
aaa
lods
aad
inc
adc
aam
out
and
rcl
inc
bound
xchg
mov
(bad)
xchg
and
push
lahf
icebp
push
out
xchg
repz
cwde
sub
rol
add
xchg
push
xchg
out
nop
hlt
cmp
sbb
add
pop
or
repz
push
sbb
sbb
fdiv
pop
push
mov
xor
pop
push
cmp
shr
sbb
mov
into
mov
xchg
sbb
fadd
fxch
mov
jns
pop
inc
hlt
adc
push
es
movs
and
push
sub
add
movs
jecxz
add
retf
adc
adc
nop
in
jne
push
(bad)
scas
cmp
or
jle
jmp
pop
and
arpl
xchg
nop
psadbw
and
push
ja
push
xor
neg
inc
or
loop
pop
xchg
jne
jg
mov
or
mov
xchg
dec
shl
arpl
das
adc
or
ror
in
loopne
and
hlt
(bad)
imul
sti
dec
ss
fsub
fcomp
dec
imul
add
stos
fs
mov
sbb
inc
sub
aas
iret
sahf
add
lods
jle
and
arpl
sub
xor
and
add
sub
xchg
mov
dec
je
mov
aad
push
xchg
call
scas
cmp
test
mov
sbb
and
inc
outs
and
hlt
bound
inc
mov
xchg
in
addr16
ror
sbb
add
xchg
add
or
sub
xchg
add
add
sub
sbb
push
cwde
ja
mov
and
push
es
adc
and
pop
test
int
pop
test
sbb
push
ins
sbb
or
fcomp
add
or
mov
leave
xchg
dec
or
xchg
sbb
ret
cli
mov
cdq
sbb
jge
das
push
adc
cmps
les
aaa
push
mov
inc
jne
outs
nop
jnp
xchg
mov
jmp
lods
inc
mov
call
sub
shl
nop
out
jae
or
dec
in
pop
pop
call
inc
inc
into
dec
test
gs
imul
test
mov
js
hlt
mov
movs
or
push
pcmpeqd
or
adc
or
leave
and
sbb
pop
sbb
fld
or
xchg
pop
jb
in
add
mov
fcom
fs
ds
fcomp
and
enter
or
stos
(bad)
add
ss
adc
rcr
mov
mov
xchg
adc
xor
or
ss
pop
dec
jmp
pop
sub
add
mov
sub
rcr
out
jns
fsub
xor
inc
shr
mov
dec
fmul
xchg
cmps
sahf
add
icebp
adc
push
xchg
rcl
aad
stos
mov
jb
add
inc
sbb
xor
fs
cmovle
in
loop
mov
cld
sbb
fs
ret
lock
xchg
inc
pop
or
leave
mov
cmp
inc
or
test
aaa
and
bound
pusha
(bad)
stos
dec
aad
mov
ret
cwde
xchg
adc
jns
cmovb
jnp
xchg
ins
inc
hlt
aam
cmp
les
jmp
lock
inc
add
sub
cmp
in
pop
out
xchg
mov
dec
shr
popa
das
packsswb
add
inc
lods
data16
push
pusha
mov
repnz
inc
dec
inc
and
les
inc
dec
dec
jl
out
mov
or
in
pop
daa
aam
pop
je
sub
jmp
sbb
or
xor
add
add
jg
arpl
neg
jae
aad
in
push
gs
leave
scas
es
mov
cld
movs
pop
lock
add
mov
and
xchg
and
(bad)
dec
outs
mov
sbb
inc
in
or
push
xchg
sub
xor
and
or
xor
lahf
pushf
and
das
add
fucomp
(bad)
push
mov
dec
in
pop
lock
inc
je
rcl
add
mov
jb
adc
sbb
inc
pop
xchg
add
dec
pop
cmp
cmp
jo
cdq
or
shl
pusha
xor
adc
jo
mov
xor
ds
inc
xor
sbb
push
(bad)
lock
sbb
outs
sbb
rcr
adc
push
ror
cmc
gs
sub
or
lods
or
bound
mov
mov
pusha
jns
or
sti
sub
inc
fdivr
mov
mov
rol
pop
ret
rcl
ret
test
or
loopne
push
test
add
add
lea
mov
aas
fcomp
ret
fldenv
mov
pusha
enter
add
repz
or
mov
sub
pop
call
sbb
lock
adc
adc
mov
or
xchg
cmp
(bad)
adc
fwait
push
pusha
or
cmp
sbb
aas
loop
xor
icebp
pop
aas
push
fcom
cmp
dec
push
inc
push
pop
jmp
dec
push
sti
sbb
jne
push
jns
sub
cdq
cmp
inc
invd
dec
cmps
movs
mov
repnz
fcom
nop
push
leave
add
mov
mov
adc
in
or
repz
adc
add
add
cwde
shl
lahf
push
mov
and
pop
dec
enter
daa
pop
clc
adc
movs
jle
dec
jmp
scas
cmp
ss
xchg
adc
xor
mov
sbb
sub
jo
sub
xchg
cld
bound
sar
jo
(bad)
and
fnstcw
jo
movs
xlat
sbb
arpl
(bad)
mov
pop
inc
push
add
in
aaa
hlt
add
popa
pop
ds
sub
inc
shl
and
inc
lock
xchg
add
sub
test
fadd
pusha
add
add
outs
cmps
sub
scas
add
(bad)
ja
and
jb
xchg
sti
and
int3
dec
(bad)
jnp
stos
aaa
inc
loop
sub
mov
call
push
shl
in
jmp
es
stos
and
add
imul
aas
cmp
inc
test
les
and
mov
cmp
sbb
pusha
jecxz
add
xchg
aas
add
push
sub
jle
mov
sub
ret
adc
xchg
mov
cmps
push
xor
sbb
sub
mov
and
mov
fst
mov
nop
lods
in
adc
add
jne
inc
add
cmp
xchg
cmp
nop
xor
sbb
adc
push
mov
adc
mov
inc
cld
les
sbb
pusha
push
adc
unpckhps
mov
rcr
ror
mov
mov
je
test
jns
int
clc
out
sub
out
inc
inc
sub
push
xor
xor
inc
js
rcr
in
cmp
sbb
test
hlt
hlt
mov
push
gs
test
jbe
jp
pop
push
(bad)
fdivr
fstp
inc
add
es
mov
shr
xchg
imul
add
retf
inc
mov
aam
mov
inc
push
cmp
xor
and
pop
xor
xor
(bad)
mov
shl
push
sub
or
mov
cli
sub
cwde
mov
xchg
cld
in
es
hlt
into
xor
test
loopne
add
xchg
adc
pop
xchg
xor
(bad)
aam
daa
jnp
mov
inc
push
sub
sub
cwde
push
cmp
or
xchg
inc
mov
cmp
mov
inc
daa
in
dec
aam
cwde
movs
or
lock
jl
(bad)
fld
dec
xadd
popa
push
aam
imul
fnsave
and
sbb
push
cmp
ds
xor
in
cmp
outs
push
mov
add
dec
mov
inc
add
js
popf
mov
pop
mov
ret
push
es
jl
mov
add
adc
test
pusha
jp
arpl
jl
dec
sbb
sub
popa
xor
mov
rcr
pop
shl
and
fiadd
sbb
cld
fmul
mov
add
xor
mov
xor
dec
aam
inc
mov
pop
icebp
or
cmp
jge
mov
and
add
dec
ret
sub
add
mov
xchg
xchg
or
fnstcw
sbb
sub
rcl
add
sbb
aas
add
sbb
mov
scas
pop
test
or
or
add
inc
int
sub
add
mov
and
mov
pusha
add
push
sbb
push
xor
dec
inc
loop
mov
mov
data16
pusha
mov
test
cld
pushf
sbb
or
mov
pop
aas
and
or
and
mov
call
(bad)
jne
stos
mov
inc
dec
mov
int3
sbb
jge
sub
inc
outs
xchg
ret
call
cmc
ds
hlt
and
adc
xor
arpl
push
out
iret
clc
into
pop
aam
add
sub
and
ins
mov
adc
sbb
(bad)
or
mov
lea
or
enter
(bad)
sbb
or
daa
and
and
inc
sub
sub
sbb
fnstenv
mov
or
imul
ud1
sbb
sub
and
je
stc
test
add
dec
push
mov
leave
cmp
mul
jge
mov
js
pop
and
and
lds
adc
dec
(bad)
std
pop
dec
test
inc
mov
mov
and
test
add
hlt
hlt
aaa
lahf
xchg
inc
enter
sti
add
enter
mov
add
xchg
or
add
je
jns
ret
xchg
inc
test
je
xchg
das
mov
popa
push
xor
xchg
das
sbb
or
add
es
call
mov
xlat
loopne
xchg
mov
das
aam
mov
add
shr
pcmpgtb
add
outs
pop
dec
and
and
rcl
mul
pop
aam
sbb
cmp
aam
jno
mov
js
mov
ror
pusha
adc
fcompp
xor
jmp
pop
aaa
cmps
outs
stc
call
pop
and
or
mov
mov
loope
xchg
fild
sub
out
aam
psubq
rcl
adc
imul
into
enter
sbb
leave
popa
adc
sub
(bad)
jns
out
adc
jbe
dec
ins
fs
fs
out
jp
xchg
outs
push
or
inc
or
mov
adc
sbb
xor
imul
inc
pop
bnd
cmp
inc
ror
ins
and
popf
and
or
adc
cmp
push
or
adc
icebp
or
mov
adc
sub
push
(bad)
add
enter
sbb
sbb
mov
setg
test
sbb
xchg
sub
sub
xchg
xchg
aad
push
imul
and
xor
pop
xchg
movs
arpl
jg
mov
sbb
movs
mov
sub
add
sbb
nop
sar
or
or
mov
fwait
push
cdq
add
sbb
mov
or
mov
das
xchg
push
jmp
(bad)
cld
mov
mov
gs
sub
push
or
jp
push
sub
sub
jae
push
sahf
sub
es
xor
movs
xor
or
add
jb
push
icebp
shr
pop
cs
mov
cdq
mov
xor
jo
cli
push
add
rol
loop
push
mov
shr
or
mov
xlat
or
xor
test
nop
aaa
or
fs
push
test
add
push
add
gs
dec
sub
repz
push
pop
or
fadd
or
mov
jnp
or
int3
push
ins
cmp
pop
push
adc
adc
inc
aad
repnz
adc
movlhps
loop
and
mov
inc
mov
jnp
adc
mov
push
and
add
aam
push
inc
adc
ja
mov
ins
data16
jmp
ret
shl
mov
add
adc
test
lock
xor
mov
xchg
aam
fmul
aaa
push
push
shl
pusha
jne
nop
sbb
push
push
and
and
inc
shr
test
retf
mov
inc
in
retf
sub
sbb
add
and
lock
inc
xor
nop
sbb
(bad)
sbb
lea
mov
sbb
das
push
add
cmp
loopne
pop
adc
inc
add
push
pcmpgtd
cmps
cld
xchg
xor
lock
sbb
cwde
mov
or
lock
xchg
loopne
push
inc
cmp
(bad)
cmp
jno
jo
nop
aaa
sbb
(bad)
cmp
sub
test
jb
or
in
xor
leave
add
dec
test
cmp
fimul
push
or
mov
push
push
arpl
rcr
sbb
je
stos
aam
popa
sub
loopne
pop
(bad)
push
jecxz
ds
scas
in
push
(bad)
leave
dec
mov
aam
js
pop
xchg
outs
shr
outs
xchg
out
movhps
cmovge
cli
push
aas
mov
loop
inc
add
mov
cmc
loopne
fdivr
call
sar
cmp
xor
ret
lock
xor
int3
push
shl
or
add
leave
dec
arpl
sti
and
test
movs
add
rol
mov
cs
or
or
adc
add
popf
push
add
inc
cmp
mov
retf
push
pop
mov
xchg
lock
nop
int
xor
mov
dec
pop
mov
dec
dec
cdq
adc
lods
mov
fdivr
mov
xor
inc
not
ins
xchg
out
es
daa
hlt
mov
mov
mov
bound
adc
lahf
cmps
cmp
and
dec
xor
xchg
inc
push
pop
mov
arpl
into
sbb
adc
mov
addr16
xor
push
jmp
inc
xchg
inc
mov
jmp
or
jmp
addr16
push
popa
inc
sbb
mov
test
pop
ins
leave
in
or
add
cwde
push
cs
add
popa
cli
shl
add
or
or
cmp
sub
retf
jb
dec
or
in
xchg
ror
jl
stos
pop
int
ret
adc
fs
mov
retf
dec
or
mov
add
jno
imul
add
xor
rcr
test
dec
add
jmp
xor
xchg
das
neg
jecxz
add
mov
sub
int
xor
inc
mov
push
ret
daa
jmp
inc
jne
mov
mov
add
in
daa
and
mov
and
aaa
movs
jmp
push
or
adc
xchg
adc
pop
sub
arpl
pusha
sbb
xchg
cld
sbb
and
adc
pop
sahf
xchg
fst
xlat
or
add
enter
out
or
cmc
and
(bad)
jg
push
push
sub
jae
mov
sbb
jecxz
dec
(bad)
inc
mov
pop
dec
push
in
fs
pop
pop
inc
dec
push
das
in
or
cmps
pop
adc
add
sub
rcr
inc
nop
mov
adc
push
dec
addr16
dec
dec
push
push
sub
or
stos
dec
inc
dec
inc
push
inc
push
mov
inc
inc
dec
lods
adc
dec
cmp
gs
iret
dec
inc
test
test
je
cmp
inc
cmp
std
enter
dec
inc
iret
gs
into
ds
fs
(bad)
(bad)
ret
test
addr16
dec
push
inc
sub
push
push
pusha
adc
xchg
stos
pop
jo
sti
enter
fwait
and
mov
cwde
das
push
sub
add
xor
aam
xchg
cmp
xchg
sub
or
std
sub
or
push
cmp
xor
cmp
cmp
hlt
add
xchg
or
clc
lds
jmp
push
cmp
fs
and
retf
push
pop
out
pop
push
dec
shl
mov
aaa
es
add
fwait
push
jg
stos
xchg
cmp
ins
or
add
loop
jmp
nop
pusha
mov
or
and
inc
shr
ins
cmp
jle
or
hlt
in
add
cmp
jle
and
rcr
pop
mov
or
fisttp
dec
push
jno
dec
mov
ja
fs
cwde
adc
icebp
dec
and
jb
mov
inc
daa
mov
ret
pop
sahf
sbb
xor
xchg
inc
loope
lock
int
nop
sub
call
jmp
cwde
mov
mov
fistp
scas
(bad)
fs
pop
(bad)
inc
inc
stos
sub
outs
dec
mov
and
repnz
lds
fwait
sub
mov
push
inc
adc
and
cmp
cmp
or
mov
ss
mov
add
sub
sub
jbe
in
adc
fcomp
jo
pcmpgtb
fsub
and
pop
mov
mov
mov
pop
cmp
add
lahf
and
push
mov
inc
int3
enter
pop
mov
add
or
jecxz
and
aaa
or
push
mov
aam
and
test
push
shr
xlat
ror
das
push
call
fld
or
js
dec
sub
dec
cs
jno
fsubr
sar
enter
adc
pop
outs
push
repnz
or
add
mov
cmps
inc
sahf
cld
jmp
dec
cld
aad
pop
inc
scas
xchg
jno
mov
test
inc
jle
retf
adc
inc
test
jne
dec
repz
pop
repnz
or
in
sub
adc
cld
add
pop
(bad)
pop
inc
movs
(bad)
inc
nop
pop
enter
mov
sbb
dec
and
adc
push
or
clc
or
add
add
add
cli
enter
dec
js
adc
xchg
dec
dec
mov
in
mov
dec
and
les
add
fld
ror
leave
push
xchg
mov
arpl
test
add
cmp
add
int3
push
dec
or
push
or
jmp
xchg
test
cmp
fs
adc
cmp
and
mov
adc
push
pusha
outs
adc
das
aaa
daa
jo
sbb
or
aam
test
mov
ins
mov
and
cmp
add
inc
or
dec
inc
movs
dec
dec
jbe
add
xlat
xchg
inc
nop
xchg
ins
mov
cdq
add
dec
cld
mov
loopne
test
mov
sbb
mov
js
fisubr
xchg
sbb
jbe
or
push
in
mov
mov
shl
sbb
inc
xor
push
adc
push
xor
cmp
jne
imul
cmps
sub
ins
sub
dec
push
shl
sub
lea
xchg
cmp
clc
xchg
inc
clc
inc
sbb
or
sbb
inc
push
ret
dec
adc
repnz
(bad)
sub
inc
adc
ins
ror
clc
fiadd
add
sti
in
push
mov
dec
push
push
mov
push
call
or
dec
outs
arpl
jmp
adc
in
or
dec
repz
pop
add
pop
inc
mov
cmp
xor
cld
sub
mov
mov
sbb
jg
mov
loop
add
inc
aas
dec
out
xchg
in
test
inc
fcom
add
xchg
xor
adc
cwde
or
or
adc
fbld
je
push
adc
mov
xor
cmp
push
mov
into
mov
dec
ss
sub
int
jo
popa
sbb
retf
mov
add
inc
adc
xor
mov
mov
jg
sub
mov
fsub
pop
inc
mov
or
xchg
les
ret
push
adc
sbb
pop
gs
or
ins
adc
add
cwde
mov
cmp
pop
push
jo
and
xlat
test
fcmovbe
pop
dec
push
and
jae
sbb
push
push
not
xlat
and
push
fsubr
xchg
add
jecxz
sbb
pusha
enter
clc
push
add
fs
and
ret
mov
mov
stos
sub
xor
(bad)
dec
loopne
stos
sbb
xchg
sub
adc
push
mov
mov
fmul
pusha
add
test
fdiv
ss
xor
pop
mov
in
adc
xor
pop
and
or
pop
out
jne
dec
ret
sub
sbb
test
mov
or
cld
or
dec
test
dec
xor
rol
inc
fs
push
sub
inc
mov
and
js
in
movs
push
(bad)
call
pop
and
push
push
push
or
loope
test
push
or
cwde
xor
add
or
mov
call
lock
aam
pushf
add
or
dec
mov
aaa
xor
inc
bound
jns
adc
xor
push
imul
mov
jo
mov
sbb
jae
adc
jge
fadd
inc
or
and
aad
mov
dec
push
jb
mov
add
mov
jne
and
sbb
add
dec
push
leave
add
add
mov
inc
push
dec
push
mov
test
dec
inc
jns
add
mov
push
and
adc
cmp
pop
and
(bad)
hlt
and
ret
inc
lods
fmul
push
lock
pop
lock
es
or
lock
inc
push
jnp
popa
call
xchg
cmp
sub
nop
retf
mov
mov
nop
add
in
add
adc
nop
mov
dec
push
cmp
cmp
pusha
push
and
sub
xor
sbb
adc
fbld
cmp
loopne
push
mov
sub
and
stos
es
or
dec
cwde
scas
sub
add
adc
(bad)
lock
cmp
call
mov
test
add
adc
ror
xchg
adc
and
add
in
jmp
or
and
ficomp
daa
daa
cmp
cmps
test
and
jne
add
data16
add
je
or
sbb
(bad)
stc
sbb
cmp
cmp
sbb
mov
out
out
mov
sbb
sub
call
inc
fs
pop
outs
popa
les
rcl
pop
dec
jge
nop
jnp
pusha
pop
mov
inc
sahf
mov
pop
gs
or
or
dec
in
dec
mov
in
in
and
or
arpl
ficomp
ror
sub
and
mov
test
or
pusha
adc
push
and
xor
(bad)
daa
mov
fdivr
push
repnz
fsub
test
and
sub
aam
and
loopne
pop
pop
fs
inc
mov
mov
rol
jo
enter
ja
xchg
add
push
adc
loope
xchg
dec
push
and
push
loopne
ja
sub
jmp
adc
pop
sbb
ss
out
mov
sub
add
loopne
into
jb
sbb
mov
or
dec
and
adc
sub
inc
int
hlt
out
or
or
add
mov
pop
inc
mov
pop
inc
pusha
jb
add
mov
test
pop
pop
jo
aam
dec
test
pop
xor
daa
add
xor
pop
(bad)
add
enter
xchg
xor
xchg
inc
cs
jb
add
sbb
push
mov
inc
sub
pusha
adc
jae
mov
fsub
sbb
out
push
lds
inc
add
and
pusha
shr
fsubr
and
fld
sub
and
sbb
test
stos
and
dec
add
pop
inc
add
ds
and
cmp
aam
add
pop
add
dec
loopne
imul
fadd
les
les
push
ss
lock
dec
dec
xchg
and
fdivr
gs
clc
(bad)
(bad)
mov
or
scas
ins
fcomp
pop
push
mov
and
adc
aam
inc
mov
pop
add
push
enter
rol
dec
dec
repz
inc
pop
clc
sbb
inc
arpl
test
sar
pop
inc
or
adc
movs
test
adc
jno
cmp
add
in
dec
inc
sbb
add
retf
xchg
fmul
adc
and
inc
add
and
and
push
mov
sti
repnz
inc
or
mov
cmps
push
or
mov
shl
inc
mov
push
in
pop
jnp
sbb
push
sbb
int
data16
sbb
add
push
add
pop
mov
fimul
cmps
xchg
push
or
push
adc
push
xchg
add
sbb
adc
stos
pusha
ins
or
aad
(bad)
mov
xor
or
fldcw
nop
push
pusha
sbb
pop
sub
xor
adc
lds
and
pusha
ins
fcom
cmc
sub
cmp
and
test
pusha
cmp
adc
mov
and
jo
and
and
mov
xor
inc
inc
inc
outs
sub
or
test
inc
add
push
jecxz
cwde
add
mov
add
jb
in
rcr
pusha
int
clc
sub
jl
push
add
sub
add
and
or
mov
jle
in
add
jp
out
dec
sbb
inc
or
add
mov
xchg
fsub
mov
mov
add
inc
(bad)
dec
enter
and
test
retf
xor
lds
cmc
and
add
push
jnp
add
sub
test
aas
fs
pop
xor
sub
in
push
adc
xor
adc
mov
pusha
or
fdivr
fs
sub
nop
or
fistp
aad
cmp
rol
push
scas
jb
fld
or
adc
add
gs
out
xor
in
cwde
loopne
test
push
or
adc
outs
leave
add
mov
push
stos
jne
shl
pop
hlt
sbb
inc
jae
fwait
add
push
cmp
jmp
push
add
pop
adc
je
(bad)
xchg
xor
pop
sbb
fstp
(bad)
fimul
push
and
and
sbb
push
add
nop
je
std
retf
push
in
inc
adc
leave
and
xchg
dec
push
enter
adc
mov
inc
int
push
inc
jecxz
or
ud2
jbe
leave
dec
pop
mov
xchg
xor
mov
jne
dec
inc
inc
and
pop
inc
aam
scas
fsub
gs
dec
push
ror
ins
and
call
jae
xchg
std
sub
push
popa
or
shr
aam
outs
sbb
jne
addr16
or
ret
pop
add
mov
cmp
add
inc
inc
dec
lahf
sbb
arpl
sbb
cs
fwait
shr
mov
pusha
xchg
das
sbb
xor
cwde
jo
out
mov
dec
push
and
push
push
test
adc
inc
pop
sbb
xor
inc
pop
add
unpcklps
loopne
add
push
push
cmp
dec
or
inc
rcl
bound
sub
jmp
test
pop
daa
nop
mov
push
and
push
xchg
ins
push
adc
push
xchg
jl
dec
and
pop
adc
cmp
mov
xchg
xchg
sub
and
ss
push
or
xchg
sub
imul
or
mov
addr16
or
or
inc
and
sbb
sub
pop
ja
mov
loop
xor
xor
sub
in
xor
sub
ds
jg
cmp
cmovno
cmc
dec
sub
(bad)
mov
xor
(bad)
icebp
jo
xchg
je
arpl
or
je
add
or
adc
mov
or
lods
test
cmp
push
add
pop
inc
dec
push
cmp
sub
pop
push
cmc
push
push
inc
sub
add
fcom
pop
dec
retf
or
add
xchg
jb
dec
push
push
xor
outs
je
pop
pushf
lods
push
or
inc
push
test
mov
int
dec
rcl
mov
xchg
sbb
inc
inc
imul
adc
adc
dec
xchg
adc
sbb
es
aad
jno
arpl
loopne
lds
test
je
pop
shl
popa
xor
outs
imul
dec
ds
inc
gs
jbe
inc
inc
push
test
hlt
pop
gs
push
adc
add
push
jl
pop
int
imul
xlat
sub
scas
pop
loopne
mov
pop
mov
call
fnstenv
fld
mov
add
scas
fmul
mov
inc
inc
add
sub
retf
and
in
pop
sub
ss
data16
dec
jo
push
pop
loopne
jne
pop
mov
pushf
add
addr16
xchg
xchg
imul
cld
int3
fldcw
mov
xchg
arpl
enter
movs
jmp
retf
data16
dec
lods
sbb
jmp
cmps
mov
or
xchg
pop
pop
jmp
add
add
pop
int3
cmp
push
dec
dec
rcr
outs
inc
cmps
dec
push
or
dec
fs
call
inc
mov
call
shl
scas
loopne
add
mov
and
cmps
call
pop
jecxz
push
popf
loopne
(bad)
(bad)
dec
ror
lds
add
cmp
sbb
mov
aas
inc
lock
adc
lock
nop
adc
dec
in
ss
xchg
xchg
xchg
into
arpl
cmp
mov
loope
sbb
out
lods
inc
fild
jmp
cmp
rol
inc
sub
and
pop
sbb
clc
mov
cmp
push
ds
mov
and
mov
add
add
sbb
lea
inc
add
movs
pop
or
add
and
push
mov
out
popa
je
xor
out
fidiv
add
inc
pop
pop
xor
xor
xor
ss
cmp
inc
inc
enter
inc
inc
inc
inc
inc
add
add
add
add
adc
daa
add
and
mov
and
add
pop
add
add
packsswb
sar
push
pop
add
mov
push
repnz
sbb
and
out
sub
add
push
or
mov
ss
dec
mov
in
xor
dec
add
and
mov
mov
nop
cwde
mov
test
mov
call
clc
shl
adc
and
xor
sub
cmp
push
xor
shl
pusha
push
dec
rol
add
add
ud0
jb
mov
gs
dec
push
jb
cmp
and
jb
nop
inc
mov
inc
dec
push
inc
gs
xor
adc
in
gs
and
push
add
int3
jmp
arpl
or
or
push
ud0
(bad)
call
adc
adc
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
jle
jg
pop
cmp
cmp
ds
inc
es
dec
dec
dec
inc
push
xchg
or
dec
dec
xor
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
pop
jnp
jge
sti
(bad)
(bad)
(bad)
jg
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
mov
jmp
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
movs
mov
mov
mov
cld
(bad)
(bad)
(bad)
mov
ret
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
mov
pop
fnstcw
push
or
cld
out
push
out
add
int3
cld
xchg
push
add
add
add
arpl
gs
add
and
inc
or
je
add
pusha
add
js
mov
cwde
retf
mov
retf
add
push
mov
mov
add
hlt
add
enter
cmc
add
add
and
add
repnz
add
and
je
and
and
xchg
and
test
(bad)
cmp
and
shl
add
sub
xor
mov
dec
adc
add
shl
cmp
pop
ss
sub
mov
cmps
imul
scas
imul
clc
cmps
imul
call
add
add
cmps
imul
cmps
imul
cmps
imul
cmps
imul
cmps
imul
cmps
imul
cmps
imul
dec
addr16
nop
xor
shl
rol
rcr
mov
mov
dec
test
mov
shl
lock
dec
shl
mov
mov
shr
dec
shl
jo
xor
shl
or
js
xor
sub
add
dec
call
add
imul
imul
imul
cmps
imul
shl
jg
add
dec
shl
add
xor
shl
add
add
shl
add
dec
shl
add
xor
shl
add
add
shl
add
mov
pop
and
push
xor
add
add
add
xor
shl
add
add
shl
add
dec
shl
add
xor
xlat
xor
add
add
add
xor
rol
add
add
dec
shl
add
xor
shl
add
add
xor
rol
add
add
imul
loopne
neg
imul
ret
mov
(bad)
clc
mov
rcr
lock
lock
rcr
xor
lock
clc
(bad)
and
sbb
mov
(bad)
pusha
or
mov
mov
shl
js
inc
sbb
lock
test
adc
clc
mov
sbb
lock
sbb
adc
adc
adc
sbb
pop
mov
mov
push
cwde
and
jo
sbb
sar
xor
sbb
mov
mov
or
clc
je
xor
mov
enter
mov
jmp
mov
sbb
lock
push
imul
sub
inc
or
inc
call
shr
xor
add
xchg
push
push
mov
nop
cmps
xor
cmps
sbb
sbb
movs
imul
push
cwde
add
fmul
call
shl
xor
and
sbb
dec
test
xor
mov
mov
nop
lock
mov
xor
xor
and
or
and
and
adc
xor
or
dec
test
lods
and
fcom
lods
add
lock
clc
mov
cmps
add
jl
imul
sbb
cwde
add
adc
pushf
xor
mov
js
push
sbb
jmp
mov
or
clc
and
dec
shl
cmp
fdiv
xchg
xor
or
leave
sub
nop
es
jo
sbb
xor
rol
loope
and
or
fmul
xchg
xor
loope
imul
nop
fdiv
xchg
cmps
mov
or
js
ret
popa
jo
sbb
cli
cmp
movs
jmp
shl
xor
dec
pop
add
pop
mov
mov
and
jl
push
cwde
mov
xor
mov
test
push
jmp
pusha
sbb
add
je
xor
dec
or
popa
push
push
sbb
imul
dec
pop
sub
jo
xor
bound
les
push
imul
push
movs
adc
test
popa
lock
or
cwde
nop
pop
xor
je
and
mov
js
call
imul
rcl
test
dec
rol
test
lock
sbb
nop
xor
leave
or
loope
inc
push
xor
imul
inc
call
lock
shl
das
mov
test
jge
mov
hlt
movs
fmul
dec
cwde
enter
sbb
shl
imul
sahf
sbb
add
jo
movs
imul
adc
or
mov
dec
add
jge
mov
je
and
push
movs
mov
enter
mov
sar
scas
shl
(bad)
xor
xor
pop
or
std
jo
pushf
add
push
and
leave
mov
sbb
add
jo
hlt
adc
(bad)
and
fmul
push
cwde
enter
imul
nop
pop
or
or
sbb
xor
shl
jo
adc
push
or
push
cwde
rol
pusha
or
lock
and
shl
pop
or
mov
push
mov
imul
leave
add
ficomp
dec
or
push
jge
inc
pushf
add
fisub
mov
or
rcl
lock
nop
scas
and
pop
or
lods
add
ficomp
dec
in
push
imul
xor
add
or
pusha
pop
mov
sbb
push
and
sar
jo
mov
rol
dec
shl
js
test
xor
inc
mov
pop
or
sbb
or
adc
push
sbb
cmp
and
mov
push
sbb
repz
cmps
pop
or
mov
xor
dec
pop
jo
or
cmova
mov
scas
sbb
das
add
mov
ins
call
pushf
mov
sub
cmps
imul
and
je
sar
je
mov
hlt
sbb
mov
call
mov
cmp
pop
ins
pushf
mov
add
rol
ins
rcr
adc
in
add
mov
pop
cmp
nop
or
sub
xor
nop
add
sub
mov
ss
or
or
push
test
xlat
xor
xor
pushf
and
mov
adc
and
or
inc
pop
loopne
pop
adc
cmps
jnp
jmp
add
add
pop
and
dec
xchg
sub
aas
cld
rcr
scas
jmp
push
pop
movs
adc
sub
into
add
in
aas
xor
pop
test
sub
je
xlat
jne
hlt
pop
popf
daa
fmul
je
cmp
(bad)
pop
xor
sbb
cmps
jmp
or
ins
sub
or
je
imul
dec
sbb
lfence
call
in
pop
pusha
das
jne
jmp
int3
pop
sub
dec
pop
sbb
vmread
xor
sub
jnp
neg
arpl
jo
push
mov
push
add
sbb
add
add
jl
sub
inc
add
adc
xchg
push
push
xchg
movs
pop
int
add
add
add
pop
dec
inc
xlat
dec
test
add
cmovbe
push
fmul
adc
and
push
mov
adc
daa
push
mov
push
add
inc
and
push
pop
or
shr
and
inc
xlat
sub
aas
inc
adc
ret
or
mov
jne
dec
jg
popf
gs
jge
push
xor
jge
sbb
jnp
fwait
push
dec
add
jnp
cwde
mov
adc
aaa
fs
inc
mov
mov
and
adc
pop
xlat
lea
push
or
dec
stos
inc
add
inc
out
push
jmp
out
pop
imul
mov
ror
fwait
fwait
lods
jmp
push
lds
or
cmp
dec
inc
and
sbb
push
add
sub
add
and
inc
push
hlt
inc
add
leave
mov
add
add
dec
push
dec
shr
pop
aaa
ja
sti
xor
rcr
fcmovu
rol
inc
mov
add
in
add
add
jg
shl
push
add
daa
or
das
das
pop
add
inc
popa
xchg
add
loopne
gs
jmp
enter
inc
jle
daa
inc
add
nop
cs
mov
add
outs
add
add
imul
dec
push
add
add
(bad)
int
(bad)
ret
sbb
(bad)
jmp
xchg
mov
add
pop
rcl
push
mov
imul
xchg
cdq
mov
fst
rol
xor
push
scas
push
fld
dec
cmp
into
data16
sbb
pop
add
mov
push
or
jg
lods
mov
pop
or
add
jbe
xor
lds
cmp
clc
push
test
or
sub
mov
mov
add
dec
add
loopne
nop
push
add
enter
retf
clc
adc
adc
add
adc
lahf
xchg
ror
cmp
cmp
enter
xchg
add
xchg
repnz
inc
or
nop
add
add
mov
xor
test
shl
xchg
cmps
sbb
xchg
xchg
xchg
sub
or
push
adc
mov
les
jo
add
stos
dec
jae
imul
sub
pop
jae
daa
inc
or
inc
pop
jp
push
sub
inc
imul
(bad)
lock
inc
add
adc
sub
add
add
jge
add
test
out
fbstp
mov
xor
or
inc
sahf
mov
sub
sbb
pop
xchg
add
add
inc
ret
idiv
je
dec
aad
popa
jecxz
imul
and
lahf
add
pop
push
add
pop
rcl
jl
and
fimul
js
cdq
pop
push
push
inc
or
pop
ins
lea
adc
mov
stos
iret
std
and
ins
test
push
jge
and
fs
pop
xchg
ins
push
mov
shl
push
mov
imul
add
xor
aad
dec
rcl
and
adc
sbb
arpl
xchg
cmp
cwde
mov
imul
ror
jl
sub
cld
add
pop
or
fst
pop
adc
addr16
aaa
add
add
xchg
pop
nop
inc
xchg
xchg
inc
xchg
sbb
sbb
push
pushf
add
mov
data16
xor
lea
je
fs
imul
sub
or
jne
mov
je
jne
jo
jb
sar
bound
jns
popa
je
ins
mov
jmp
xor
daa
bound
push
call
push
jb
dec
jmp
jae
fs
gs
pop
jb
add
outs
xor
mov
sub
cmp
fcomp
aaa
fs
jns
push
dec
jne
fwait
in
adc
ins
lea
mov
scas
jae
add
inc
jbe
unpckhps
fdiv
pop
mov
adc
jmp
fst
fwait
je
ins
adc
fs
(bad)
lock
sbb
adc
sbb
neg
ja
jne
sbb
test
js
mov
and
ss
sub
adc
pop
xlat
gs
arpl
inc
add
dec
enter
cmp
jo
icebp
ret
jge
test
mov
jae
ja
jmp
(bad)
push
pop
retf
inc
sbb
(bad)
gs
sti
sub
jl
push
icebp
jbe
jae
into
es
and
daa
sbb
jmp
add
gs
jge
punpcklwd
lock
jecxz
jmp
sbb
pop
or
aad
or
dec
ins
inc
std
push
data16
dec
arpl
icebp
add
mov
xlat
ins
xchg
inc
xlat
pusha
dec
out
pop
push
pop
outs
invd
sar
retf
pop
outs
mov
adc
in
loopne
add
pop
dec
add
mov
push
sti
pop
push
ror
push
outs
xchg
mov
dec
push
aaa
fsub
mov
cmp
or
outs
adc
xchg
or
adc
or
mov
pop
cmp
call
add
add
add
pop
mov
popa
jne
add
xlat
lea
popa
jb
push
pop
div
ins
jns
jne
aaa
fsub
ins
sti
jge
jae
test
push
neg
lods
and
sti
inc
add
jb
dec
call
adc
ins
outs
das
and
out
or
hlt
icebp
dec
sar
outs
ins
xor
pop
or
xor
adc
adc
sub
xor
loopne
fldl2t
pop
mov
inc
outs
xchg
fwait
enter
ins
pop
popf
adc
outs
xor
adc
bound
inc
pop
sbb
sbb
idiv
stos
or
aaa
pop
jb
and
mov
push
ret
outs
cs
xor
inc
sbb
fsubr
sbb
inc
inc
xchg
cmp
lods
cmp
push
inc
das
cmp
push
or
mov
cmp
push
inc
js
sbb
dec
xchg
arpl
and
adc
popa
loope
fwait
jno
mov
mov
pop
cmp
(bad)
jo
test
adc
mov
outs
sbb
inc
mov
rol
fs
daa
arpl
adc
dec
mov
jno
sbb
xor
inc
dec
xchg
repz
add
inc
or
ins
imul
mov
ret
iret
jb
sub
mov
push
xchg
mov
and
mov
add
ret
adc
imul
sub
xor
sbb
arpl
xchg
mov
or
les
dec
xchg
push
int
mov
pop
imul
xor
ins
push
push
bound
ja
push
loopne
ins
inc
popf
sbb
sbb
xchg
xor
add
adc
arpl
pop
sbb
ins
mov
out
aas
ja
dec
or
ins
jns
xor
jae
pop
xor
and
push
pop
add
retf
daa
xchg
cli
fimul
mov
aas
fs
or
xlat
cmp
and
mov
cmovbe
dec
push
xchg
adc
inc
adc
or
xchg
xchg
inc
dec
and
sub
outs
outs
imul
ror
add
mov
ja
pop
pop
bound
cmp
push
mov
lock
cwde
mov
and
adc
pop
inc
inc
or
(bad)
jmp
shr
cmp
ins
sti
daa
adc
xlat
addr16
push
xor
dec
adc
and
mov
and
enter
iret
pop
pop
sub
dec
lods
mov
es
aaa
mov
pop
fwait
cmp
data16
mov
sbb
adc
mov
mov
push
je
ins
sbb
add
or
push
add
(bad)
pusha
sbb
push
sbb
dec
aad
pop
jmp
mov
or
jns
mov
or
ins
pop
push
jne
inc
push
pop
daa
inc
std
mov
mov
xchg
xchg
adc
mov
(bad)
adc
jb
adc
call
push
outs
add
push
popf
inc
fs
mov
je
jo
sub
jmp
or
pusha
cmps
or
pop
mov
xor
fcomp
inc
int
sub
push
ret
pop
pushf
xor
or
mov
out
jle
mov
xchg
or
popa
jbe
pop
adc
aad
out
fisub
aam
lods
inc
outs
jecxz
rol
mov
push
int
sbb
dec
jae
add
scas
fld
outs
xchg
push
xchg
add
or
sub
xchg
popa
adc
mov
push
mov
pushf
push
lahf
jp
push
nop
mov
or
mov
leave
mov
fiadd
push
push
push
in
pop
mov
int
mov
mov
sub
mov
aaa
inc
shl
mov
dec
push
and
fs
das
pop
sti
cs
push
inc
dec
add
add
pusha
cs
ins
fisttp
loopne
and
add
xchg
outs
je
jnp
call
or
add
fcomp
sbb
pop
in
fld
sbb
lock
pushf
shl
hlt
sub
loopne
dec
mov
add
add
scas
ss
nop
pop
mov
add
adc
adc
sti
mov
sti
xchg
cs
int
push
jp
stos
jb
cmp
inc
cs
add
pop
je
inc
imul
and
pusha
test
aaa
and
outs
arpl
sub
in
sub
gs
pushf
jnp
mov
add
mov
call
rol
rol
adc
inc
adc
call
mov
mov
idiv
push
push
push
xor
pop
mov
das
jo
int
jg
cmp
out
cmp
je
lea
mov
push
pop
mov
sbb
jne
call
jmp
push
inc
and
clc
sub
pop
push
add
pop
push
call
mov
pop
ret
cld
and
pop
adc
sub
pop
and
test
ss
inc
adc
neg
xor
mov
mov
jnp
sub
or
jno
je
push
push
lea
push
or
mov
cmp
js
and
aaa
mov
pop
add
jne
add
popa
xor
and
sysenter
(bad)
jmp
sbb
sbb
jmp
xchg
test
or
out
movs
inc
cmps
les
int
ins
add
ret
outs
pop
mov
(bad)
into
mov
sbb
into
or
and
fucomp
imul
xor
lds
cmc
call
and
hlt
call
ror
call
mov
mov
adc
call
ja
xor
push
xor
sbb
mov
push
test
out
sbb
adc
adc
call
ret
add
(bad)
(bad)
ja
sub
mov
ins
cld
fistp
fldcw
mov
push
push
and
adc
(bad)
mov
imul
sbb
adc
mov
xor
sbb
repnz
neg
lea
outs
outs
cwde
std
mov
inc
lea
and
adc
or
jge
mov
or
retf
add
fst
push
dec
xor
ins
jecxz
div
xor
cmp
xchg
mov
mov
jmp
push
gs
push
test
pusha
(bad)
push
pop
cld
mov
mov
or
mov
dec
jl
clc
add
cwde
pusha
jb
cmps
cmp
and
sti
movs
retf
sti
pop
test
adc
xchg
and
imul
icebp
movs
mov
arpl
call
cmc
sbb
xor
adc
push
xor
stos
sbb
rol
ins
sbb
call
push
shr
clc
sub
push
push
push
call
pop
add
in
push
jl
idiv
push
jne
cmp
jne
add
add
jne
mov
retf
mov
sub
out
in
push
sub
mov
outs
xchg
add
dec
dec
or
push
or
add
cmp
jb
xchg
mov
add
jbe
add
xor
imul
mov
sti
les
test
ds
mov
push
pop
pop
sub
call
adc
cmp
mov
call
jge
mov
push
das
cmp
pop
adc
je
push
cmp
adc
lahf
pop
xchg
mov
and
adc
pop
(bad)
fisubr
or
div
add
aam
(bad)
xchg
addr16
sub
frstor
leave
sbb
inc
mov
adc
add
(bad)
jb
push
dec
cmp
mov
push
pop
test
and
jmp
stos
mov
pop
lds
mov
sbb
(bad)
pop
add
jg
or
mov
mov
add
jae
fld
rol
outs
mov
sbb
iret
std
inc
sbb
and
std
sbb
xlat
adc
mov
dec
addr16
scas
(bad)
jl
jbe
cmp
add
aad
mov
mov
test
aad
add
in
enter
push
jp
pushf
push
or
out
ins
or
push
sbb
sbb
test
or
sti
pop
scas
popf
xchg
adc
sub
das
div
pop
shl
cld
jecxz
cld
daa
pushf
loopne
dec
mov
add
and
xchg
push
push
push
sub
not
add
hlt
or
xor
mov
rol
repz
adc
arpl
cmp
xor
pop
js
jmp
rol
hlt
jnp
mov
cmp
cmp
sub
lea
ins
ja
fs
rcl
stos
jmp
pop
rcr
clc
inc
push
and
leave
pop
sti
cli
sub
mov
sbb
shl
jo
mov
adc
rcl
sub
iret
outs
mov
xchg
in
sub
or
mov
ins
retf
jne
xor
inc
jl
and
push
out
es
cmp
ret
mov
add
xchg
mov
cmp
pop
jle
pop
xchg
shl
in
dec
push
cmp
cmp
fild
jmp
inc
adc
inc
fcmovnu
call
(bad)
dec
sbb
mov
pop
ret
mov
sub
shl
adc
inc
add
sbb
pop
cs
pop
addr16
adc
data16
or
fsubr
inc
and
push
ret
cmp
mov
sub
mov
ds
shr
jbe
int
pop
ds
sub
and
jb
mov
cmp
mov
cmp
pop
xor
rep
mov
jne
aaa
inc
mov
test
je
rol
rcl
adc
sti
sbb
cmp
cmp
jbe
mov
mov
mov
iret
push
adc
mul
adc
jg
mov
iret
loopne
shl
add
or
sub
stos
or
pop
inc
rcr
sbb
push
(bad)
inc
cmp
jb
sub
jecxz
and
pop
imul
inc
stos
or
fadd
adc
or
mov
and
sub
pushf
pushf
popf
lock
cmp
cdq
mov
in
lods
mov
dec
xor
dec
mov
test
or
jge
addr16
hlt
(bad)
sti
fstp
xchg
sar
nop
mov
add
shl
mov
jo
(bad)
push
sti
inc
cmp
dec
mov
mov
lea
mov
rol
fwait
in
sub
mov
shr
mov
shr
inc
cmp
jle
cmp
jg
in
jg
nop
mov
shl
mov
cmp
jle
mov
mov
dec
cwde
xchg
jns
fucomp
sbb
addr16
mov
sbb
or
mov
es
loop
data16
test
stos
cmp
push
call
or
movzx
test
dec
pop
inc
mov
sbb
gs
ret
add
cmp
jg
mov
(bad)
pusha
pop
mov
cmp
jg
nop
jp
idiv
popf
dec
mov
sar
add
dec
jne
inc
cmp
jl
out
jle
cmc
or
icebp
add
cmp
in
cs
rcr
jmp
test
fwait
xchg
in
pop
and
mov
sub
sti
test
neg
adc
sbb
sahf
jae
fldln2
xchg
push
ret
add
(bad)
sbb
mov
jnp
int3
mov
push
lea
add
push
pop
pop
pop
dec
pop
adc
xchg
mov
int3
loop
aam
repz
(bad)
int3
and
enter
aam
xchg
fscale
dec
fisttp
frndint
in
sub
mov
scas
add
xchg
div
mov
mov
psubsb
(bad)
ror
enter
ror
cmc
add
xchg
outs
lahf
add
add
mov
xchg
fmul
mov
sbb
ins
out
mov
push
jp
or
add
jl
cmp
xchg
inc
mov
shl
fs
sub
test
jg
inc
xchg
mov
outs
pop
fild
mov
rcr
or
(bad)
mov
mov
add
neg
xor
or
add
inc
aas
mov
cli
mov
psubsw
sti
and
cmp
int
scas
and
mov
mov
repnz
xchg
mov
sbb
mov
dec
jle
mov
aaa
mov
add
fistp
add
mov
mov
inc
sbb
sbb
mov
dec
xlat
imul
mov
sub
sub
shr
dec
(bad)
fist
adc
dec
std
xchg
out
fidivr
pop
add
jecxz
jae
fnstcw
outs
pop
imul
(bad)
cmps
ds
fsub
push
jb
je
fistp
sbb
mov
or
mov
xor
pop
bound
mov
sbb
pusha
xor
push
xor
push
mov
adc
mov
mov
push
test
out
ret
dec
dec
pop
in
push
sti
mov
pusha
pop
push
sbb
fbld
lea
(bad)
fdivp
imul
or
and
mov
popa
jae
sub
pop
mov
sub
and
cmp
into
push
or
cmp
mov
sbb
imul
and
pop
std
leave
mov
mov
rcr
push
scas
jecxz
ret
or
dec
jl
call
retf
jg
jge
mov
cmp
jl
jbe
and
inc
icebp
js
cmps
sub
add
mov
pop
int3
mov
and
xor
sub
sbb
adc
mov
sub
nop
xchg
and
xchg
cmp
sub
pop
cmp
retf
cmp
mov
data16
and
ror
ds
adc
xchg
or
aam
mov
xor
and
pop
sbb
and
sbb
or
sbb
fist
sbb
rcr
jmp
add
sahf
mov
mov
jmp
xchg
fs
popf
and
test
(bad)
(bad)
dec
xor
pop
add
imul
popf
cmps
imul
pop
xor
repz
inc
cmp
sbb
cmp
ret
inc
cmps
aaa
clc
leave
xlat
mov
lea
mov
mov
and
ficomp
mov
push
jo
or
and
sbb
loopne
cmc
and
ins
fisub
dec
mov
test
loope
jno
retf
mov
dec
scas
cmp
fdiv
sbb
bound
mov
xchg
add
mov
scas
sbb
dec
test
movs
push
movups
xchg
(bad)
dec
inc
fwait
dec
push
mov
test
mov
ror
in
(bad)
lods
adc
pop
adc
sbb
or
stos
inc
pop
outs
mov
mov
jno
outs
or
inc
dec
sub
mov
adc
add
or
sub
push
arpl
in
es
mov
and
cmp
rcl
enter
or
adc
and
xchg
rol
imul
dec
and
sbb
jns
and
push
rcr
xchg
xchg
retf
enter
xchg
shl
repnz
mov
sub
jl
add
and
imul
push
out
stos
aad
adc
inc
in
push
or
icebp
movs
jmp
cli
jne
sbb
mov
sahf
dec
cli
test
cmp
sahf
mov
push
rol
ret
jae
add
out
inc
pop
jne
cmp
xchg
xchg
retf
xor
stc
in
bound
rcl
push
cmp
fs
push
sub
dec
jle
dec
jbe
add
pusha
push
push
iret
outs
push
cmovp
push
adc
xchg
or
or
(bad)
mov
movs
pop
adc
mov
sub
jg
mov
push
push
or
mov
jge
jno
mov
mov
ins
push
push
add
fnstenv
sbb
jmp
pop
mov
adc
adc
push
cmp
mov
pop
mov
mov
mov
loop
or
add
mov
jb
int3
or
scas
cli
lea
mov
pop
xor
add
mov
fimul
out
add
loop
fisttp
in
mov
add
sub
jne
outs
nop
inc
ret
clc
or
add
out
pop
call
(bad)
mov
push
cmp
je
dec
mov
mov
inc
inc
adc
mov
addr16
sub
fidivr
pop
pop
mov
mov
imul
stos
or
pop
jmp
pop
sub
and
pop
mov
fbstp
xlat
jmp
inc
push
call
out
lahf
leave
mov
or
fsubr
clc
shl
les
lea
pop
push
push
xor
lock
fldz
fidiv
pop
xchg
in
fadd
push
push
adc
in
or
add
push
call
jae
nop
xor
pop
push
adc
jmp
mov
add
xor
cmp
(bad)
cmc
mov
push
shr
aas
int3
icebp
imul
xor
sub
aam
ret
dec
adc
pop
mov
mov
outs
stos
data16
inc
data16
mov
mov
(bad)
retf
(bad)
imul
sub
jmp
test
ins
retf
test
xor
jb
mov
mov
xchg
jg
cmp
jne
leave
sbb
xor
add
test
std
pop
outs
or
iret
mov
jle
mul
adc
mov
jg
dec
jmp
dec
jae
add
jb
fs
add
xchg
(bad)
cmp
dec
jnp
inc
xchg
in
leave
xchg
mov
xchg
pop
ret
nop
sub
fs
fbld
xchg
lahf
xchg
xchg
sar
push
xchg
in
xchg
and
ror
clc
ins
out
jns
cmps
cld
add
ror
fmulp
dec
adc
leave
(bad)
adc
imul
push
mov
retf
adc
dec
cmp
mov
fldenv
das
hlt
sub
adc
in
sub
inc
sbb
dec
pop
test
and
aaa
std
ror
lea
or
push
(bad)
jge
sub
push
mov
xchg
or
in
adc
mov
mov
push
sub
loope
pushf
cmp
dec
sbb
push
jns
fbld
lea
out
sbb
repnz
mov
stc
add
push
idiv
cld
push
and
jge
push
daa
out
cmp
mov
add
jl
fstp
(bad)
leave
loope
enter
jmp
cmp
int3
cs
(bad)
shl
push
mov
mov
ret
sbb
or
mov
push
ins
mov
inc
and
pop
lock
je
and
mov
les
push
sbb
inc
movs
push
cwde
adc
mov
ja
cld
push
add
mov
mov
mov
nop
cmp
pop
cmp
je
add
cmps
(bad)
repnz
sbb
jmp
add
adc
test
jmp
test
call
idiv
mov
add
sub
or
cmp
(bad)
ja
add
jnp
outs
lock
das
push
pop
mov
data16
outs
and
(bad)
pop
jae
jg
stos
adc
fcomp
fsubr
ds
mov
arpl
lock
add
pop
mov
or
or
or
cmp
add
mov
adc
mov
add
scas
mov
enter
mov
call
and
mov
add
dec
cmp
xchg
dec
push
or
ror
add
sub
add
xchg
add
out
das
xor
rcl
or
fcmovne
inc
stos
in
adc
and
(bad)
mov
or
jno
(bad)
hlt
xor
iret
lea
add
test
jle
adc
add
sbb
jle
rcl
or
add
add
loope
mov
pop
arpl
mov
fdivr
inc
ja
or
or
movs
(bad)
jg
jbe
jp
ins
sub
lock
add
lock
in
jmp
cmp
xor
popa
mov
data16
cmp
arpl
pop
inc
mov
xor
sbb
xchg
add
ja
push
in
mov
mov
mov
or
lds
stc
pop
or
outs
add
mov
ins
or
add
or
clc
in
fcom
sbb
das
je
loope
pop
xor
add
jg
not
imul
dec
xchg
add
lea
(bad)
mov
pop
movs
les
outs
mov
dec
adc
fadd
adc
jle
mov
loop
cmc
shl
cs
pop
xor
imul
xchg
(bad)
popf
lods
sub
pop
mov
sub
sub
add
(bad)
ror
fdiv
mov
in
data16
arpl
pop
jne
enter
ins
mov
in
ja
jmp
into
sub
xor
sub
rol
add
push
ret
dec
popf
fist
int
sbb
sub
ret
push
mov
mov
mov
sub
stos
mov
and
mov
lods
ficom
sub
inc
xor
and
btr
ss
cmp
in
xor
push
stos
mov
sub
mov
(bad)
js
jmp
mov
cmp
or
int
or
mov
cwde
mov
adc
inc
dec
cwde
imul
inc
inc
fistp
daa
fs
(bad)
or
xor
popfw
xor
inc
in
popf
popf
add
ud1
(bad)
and
add
fwait
add
or
add
mov
clc
mov
mov
(bad)
movs
fiadd
(bad)
popf
xchg
push
retf
in
pop
stos
retf
mov
mov
fnstsw
sti
cmp
jb
add
xchg
xchg
fwait
sbb
add
sbb
inc
mov
sbb
clc
hlt
push
call
mul
mov
cld
sbb
(bad)
jo
ins
mov
or
or
outs
rol
out
pop
or
push
push
adc
or
add
adc
add
add
(bad)
pcmpgtb
ss
mov
push
sti
mov
add
or
aam
adc
or
mov
jno
mov
xchg
inc
adc
js
jns
xlat
mov
mov
aad
(bad)
xor
pop
aad
nop
fisub
movs
xor
jae
inc
(bad)
jae
mov
(bad)
dec
jne
mov
out
xchg
je
add
adc
and
cli
in
jne
inc
rcl
pop
add
ror
daa
add
or
jle
inc
or
pop
push
and
pop
mov
sub
fild
mov
pop
mov
mov
and
(bad)
outs
outs
and
xchg
xor
xchg
pop
adc
fcomp
sti
movsx
mov
cmp
xor
mov
(bad)
adc
cmp
add
jmp
dec
outs
pushf
ss
cmps
shl
sbb
xchg
mov
cmp
sub
sub
loopne
lea
push
inc
daa
inc
push
imul
imul
inc
div
add
sbb
clc
or
push
call
mov
aas
mov
sbb
and
or
jle
xor
test
je
pushf
pop
dec
pop
add
stos
or
test
mov
mov
sbb
pop
mov
fistp
adc
cmp
push
out
xor
push
or
xchg
mov
mov
fsub
jne
jmp
dec
cmc
push
dec
cli
and
movs
jp
mov
xlat
lock
ret
rcr
jmp
inc
div
cmp
pop
xchg
sar
adc
sbb
ss
dec
je
test
sar
xor
and
retf
pop
inc
aad
loope
cmp
ror
fwait
int
push
pushf
aam
cmp
mov
clc
ret
xchg
fcmovnbe
jne
loop
inc
call
aas
fsub
iret
ja
add
or
sti
fistp
add
add
cmp
and
inc
pop
out
fs
xor
icebp
fdivr
inc
loop
call
ja
sti
adc
pop
mov
add
xchg
pop
xchg
xor
adc
int
jmp
(bad)
mov
sub
iret
sub
add
sbb
inc
or
jo
adc
shl
out
(bad)
mov
or
xor
push
sbb
ffree
and
mov
aas
mov
test
inc
je
pop
js
push
push
mov
add
inc
test
jmp
mov
test
and
(bad)
mov
or
or
or
jo
mov
iret
xchg
inc
add
shl
(bad)
sbb
pop
cmps
jno
push
jmp
fucom
mov
mov
push
in
push
daa
jle
mov
push
mov
mov
je
push
aas
in
xor
mov
sub
mov
bound
mov
in
sahf
xchg
leave
mov
pusha
(bad)
sbb
add
(bad)
sbb
dec
or
lock
dec
mov
xchg
out
adc
add
movs
or
pop
loop
adc
mov
aaa
jnp
adc
or
retf
pop
out
jns
mov
mov
mov
in
dec
mov
fnsave
repnz
rcl
cwde
mov
fwait
in
add
cld
les
xor
add
call
cmp
dec
and
mov
and
sahf
popf
aad
loope
(bad)
mov
jl
mov
or
sub
cmp
jb
scas
sahf
jecxz
ret
xor
mov
and
jge
xchg
push
jle
jb
mov
mov
xor
cmps
push
adc
push
sub
inc
xor
mov
mov
jne
inc
leave
pop
mov
sub
lock
scas
imul
data16
mov
mov
mov
out
add
mov
mov
lods
xlat
add
cli
dec
or
mov
or
sbb
push
jne
add
cmp
(bad)
fisub
sub
test
push
mov
ret
cdq
enter
ins
in
ins
or
or
imul
mov
adc
lds
sub
mov
aas
dec
dec
daa
fimul
cmc
int
push
sub
and
mov
(bad)
lock
cmp
pop
lock
pop
daa
je
xlat
loope
sub
sub
and
arpl
xchg
imul
adc
les
into
pop
sbb
sub
adc
mov
inc
neg
cmp
xor
arpl
cmp
jne
call
push
sub
lock
call
retf
enter
or
push
clc
add
data16
jmp
shl
push
ror
call
pop
js
dec
pop
push
shr
aas
jmp
out
mov
test
test
push
cmp
jb
mov
je
call
push
jg
xchg
and
or
sub
ins
adc
cmp
mov
jl
cmps
pop
lea
push
push
(bad)
mov
sub
call
mov
cdq
adc
and
add
(bad)
out
mov
adc
shl
mov
(bad)
mov
pop
bound
call
push
arpl
sti
xchg
inc
sub
cmp
ret
pusha
or
and
inc
sbb
rol
xchg
inc
xor
outs
mov
add
jmp
stc
je
push
push
psubq
adc
or
mov
push
add
mov
mov
mov
clc
or
cld
and
jecxz
icebp
jg
fld
icebp
clc
fdivr
mov
adc
and
pop
pop
push
push
sbb
(bad)
call
sbb
sbb
sbb
sbb
pop
push
push
adc
adc
adc
adc
adc
jne
mov
push
iret
cli
sbb
ficom
or
mov
add
rol
rol
push
and
xchg
and
pop
ins
inc
pop
sbb
or
test
mov
imul
dec
js
add
movs
pop
pop
pop
in
or
jmp
neg
add
inc
shr
sub
dec
jmp
retf
or
mov
or
fld
in
add
adc
push
outs
add
jmp
call
ja
js
aaa
inc
sbb
stos
cmp
jbe
mov
or
sar
mov
mov
mov
xor
mov
shl
or
stos
data16
out
mov
mov
inc
push
push
push
mov
in
fldcw
call
jl
ja
jmp
mov
ja
fld
icebp
mov
pushf
adc
inc
pop
mov
jmp
test
jne
add
enter
bound
in
std
pop
jne
sbb
jle
jmp
or
mov
or
(bad)
add
mov
xor
pushf
pop
out
push
mov
mov
mov
mov
sbb
ret
jle
mov
and
pop
cmp
adc
mov
ins
test
cdq
jae
sub
ret
jge
int3
sbb
mov
mov
jmp
pop
call
jge
sub
xchg
xor
and
ret
cmp
je
inc
and
xchg
or
and
mov
rol
sub
mov
jae
and
and
cwde
or
jno
enter
shl
push
mul
add
sub
call
inc
and
xchg
dec
psadbw
cld
sbb
add
call
and
sbb
sti
xor
ins
push
sub
or
add
push
inc
push
outs
sbb
or
and
and
push
mov
or
std
mov
scas
xor
ja
add
inc
lea
and
hlt
sahf
mov
or
cmp
push
sub
test
fdivr
fucomp
int3
mov
mov
cmp
je
pop
pushf
movs
inc
imul
in
push
and
add
stc
pop
sbb
pop
stos
and
out
or
mov
fbld
stc
push
mov
fnstenv
jae
loopne
fwait
mov
push
enter
aad
adc
mov
push
sbb
push
hlt
(bad)
aas
mov
in
cmp
or
icebp
or
push
(bad)
pop
ins
mov
cmps
add
mov
cmp
ds
or
add
call
adc
inc
test
(bad)
neg
call
sub
mov
xor
dec
add
shl
mov
mov
xchg
sub
test
ret
sub
sti
jne
dec
lea
sub
ret
add
shr
das
push
push
call
(bad)
jge
inc
adc
and
add
cli
data16
adc
fwait
adc
sbb
sahf
or
mov
push
data16
mov
mov
jl
pop
(bad)
and
xor
cmp
je
add
or
mov
lahf
sub
ins
loopne
or
daa
or
mov
add
imul
fst
pop
push
push
outs
sub
jge
mov
push
pop
push
sbb
sub
xor
pop
cmp
xchg
and
stos
mov
scas
pop
push
loopne
adc
and
xchg
jge
(bad)
jbe
ret
cmp
pop
jl
ja
sbb
add
push
mov
retf
std
shl
add
arpl
icebp
jmp
ss
xor
data16
jmp
sbb
cmovno
or
shl
xor
fsubrp
and
cmp
rol
sbb
sub
or
pop
or
mov
fldenv
pop
sbb
or
mov
stos
mov
cmp
sar
and
push
sub
adc
stc
jmp
cmp
ror
add
mov
retf
shr
movs
xchg
adc
shl
loope
push
fwait
std
(bad)
jecxz
push
dec
dec
pushf
imul
mov
push
mov
aam
movs
cmovnp
and
xchg
add
lods
leave
shr
adc
sbb
mov
xchg
mov
or
ins
nop
daa
mov
xchg
xchg
mov
adc
push
mov
dec
je
dec
lds
adc
jle
dec
pop
ja
pop
in
sub
sbb
or
pop
mov
inc
sbb
cmp
adc
sbb
pop
mov
and
jne
mov
enter
outs
dec
loopne
loope
mov
lds
xchg
sbb
test
xchg
arpl
and
dec
(bad)
(bad)
(bad)
loop
pop
or
pop
jmp
cmc
dec
enter
cmps
add
fsubrp
outs
je
aas
push
je
push
test
add
and
imul
ret
or
lods
add
push
lods
inc
xchg
fsub
mov
ret
sahf
sbb
icebp
sub
cmovne
mov
ror
fimul
sbb
sub
icebp
or
shl
sub
lea
adc
sbb
sbb
mov
not
xchg
adc
pop
inc
dec
pop
adc
dec
jae
cmps
mov
call
cmp
or
test
setbe
and
pop
aad
push
cdq
test
adc
enter
mov
jb
push
ret
call
add
sub
call
and
mov
cmps
sub
das
add
aas
in
push
je
in
inc
cmp
daa
pop
push
fistp
pop
xchg
ins
pop
hlt
retf
and
mov
mov
add
test
pop
inc
repnz
mov
adc
push
xor
sub
adc
adc
sbb
mov
mov
aaa
adc
sub
scas
push
movs
dec
mov
clc
fisubr
(bad)
xor
mov
jle
(bad)
cmp
inc
ss
cmp
je
jbe
mov
sub
dec
jae
jbe
cmp
xchg
ret
bound
sub
or
cmp
cdq
inc
adc
xchg
pushf
nop
add
test
xlat
add
idiv
test
cmps
and
mov
nop
dec
jbe
mov
fnstenv
mov
mov
sub
cmp
xchg
sbb
add
inc
mov
dec
pop
cdq
mov
ror
int
popf
mov
xor
dec
xlat
and
pusha
loopne
das
push
mov
xor
xchg
add
not
inc
ins
push
sbb
lea
xchg
mov
mov
cmp
cwde
mov
iret
jl
fisubr
pop
je
ret
cdq
nop
jle
cmp
les
clc
xor
mov
(bad)
outs
pop
mov
out
mov
cmp
add
jmp
adc
and
(bad)
pop
mov
(bad)
iret
daa
sub
xor
shl
sub
dec
jmp
addr16
outs
jno
inc
add
mov
xchg
inc
add
sub
je
dec
fild
mov
jmp
jmp
mov
push
fwait
xchg
xchg
mov
adc
pop
sahf
xor
dec
pop
xchg
push
sbb
jne
fistp
sbb
rcr
mov
inc
mov
test
je
or
call
pusha
mov
and
outs
mov
test
cmc
push
push
pop
jo
sub
xor
mov
add
enter
mov
push
push
es
mov
cmp
in
adc
add
(bad)
loopne
mov
adc
mov
adc
mov
outs
sbb
add
enter
sub
xor
lahf
add
sub
inc
arpl
dec
jns
push
mov
cmp
(bad)
pop
mov
push
mov
cmp
stos
cmp
pop
je
pop
inc
hlt
and
or
aad
(bad)
loope
push
push
call
mov
or
lea
xchg
cwde
push
adc
std
jnp
lea
iret
add
adc
push
call
push
jae
mov
inc
mov
adc
sbb
jle
nop
int
sbb
push
cdq
and
xchg
or
mov
fldenv
push
popf
mov
cmc
bound
pop
mov
pop
adc
cmp
sub
mov
test
cdq
cmc
ins
pop
(bad)
ja
inc
arpl
iret
in
dec
push
adc
jne
xchg
cmp
lea
mov
and
icebp
repnz
sbb
inc
mov
or
icebp
pop
mov
out
pop
jmp
cmp
loope
loop
xchg
xchg
xchg
in
or
or
mov
push
jo
and
adc
and
aad
cmp
adc
push
dec
push
xchg
ins
pop
jle
(bad)
pop
push
xor
push
sbb
or
jnp
push
or
inc
push
dec
jb
adc
pop
push
clc
icebp
pop
call
pushf
mov
or
xchg
(bad)
mov
or
mov
push
cmp
jbe
das
sti
mov
xchg
std
and
dec
add
fidiv
adc
adc
add
add
ins
add
pop
mov
mov
mov
adc
add
cli
mov
(bad)
mov
cwde
inc
mov
xor
pusha
and
es
rcl
mov
push
fisubr
cmp
stos
push
xor
push
repz
js
adc
adc
jb
fadd
push
shl
imul
gs
xor
add
pop
leave
xchg
cmp
sub
fs
pop
outs
loope
xor
add
push
mov
push
rol
add
jb
js
adc
push
or
cmp
push
pop
push
push
lahf
out
dec
ret
pusha
pop
and
or
sahf
test
push
pop
test
and
cmp
int3
add
mov
dec
std
out
int
sbb
cmc
xchg
nop
in
mov
add
cmp
in
push
sbb
dec
icebp
xchg
daa
dec
ins
fld
in
das
loop
mov
lea
fist
test
loopne
rol
repz
fisubr
dec
mov
sar
add
out
push
lock
jge
pop
add
lock
mov
add
fadd
sub
dec
cmps
mov
xor
inc
xchg
push
lea
(bad)
or
mov
mov
and
sbb
mov
mov
stc
push
pop
out
scas
or
xchg
nop
cmp
xor
xchg
mov
add
inc
add
xor
dec
xchg
xchg
adc
test
mov
int3
sub
adc
dec
push
xlat
add
loopne
or
sbb
inc
inc
push
call
adc
xor
add
pop
mov
mov
(bad)
gs
push
xchg
jp
add
jl
adc
cdq
lods
stos
xor
adc
clc
add
jnp
dec
ss
or
fs
xchg
mov
push
imul
adc
mov
xor
aas
push
lea
sub
cs
fimul
push
or
int3
or
adc
push
mov
aas
and
cmp
test
mov
inc
push
adc
enter
mov
scas
sbb
cs
mov
jne
retf
(bad)
mov
fprem
pop
push
push
test
daa
cli
add
mov
or
ja
leave
or
sub
scas
sbb
push
xor
or
jbe
pusha
mov
leave
and
gs
mov
inc
sbb
aad
ja
cmp
cmps
nop
aam
add
stos
int
or
add
ins
or
out
mov
add
loopne
cmp
popa
or
xor
and
cli
test
jne
ror
mov
addr16
and
(bad)
mov
repz
hlt
mov
(bad)
loopne
jge
jbe
dec
and
jmp
mov
rol
int
cmp
aam
test
aas
xor
pusha
js
inc
mov
sub
or
cmp
xlat
loop
jmp
loopne
ins
in
sbb
sub
and
push
cmp
mov
pop
cmp
(bad)
inc
or
pop
push
push
jmp
lds
xor
and
outs
mov
add
enter
inc
stc
mov
cmp
cmp
xor
ja
mov
es
jmp
lods
mov
pop
push
push
push
fadd
ins
fild
addr16
sbb
cmps
stc
ins
sbb
push
xor
lock
adc
push
xor
and
push
fld
xor
div
test
inc
or
sub
out
add
mov
ins
js
pop
mov
mov
or
gs
add
iret
lahf
pop
mov
scas
nop
cmps
xchg
pop
jl
cmp
test
add
test
popa
pavgb
and
and
out
mov
call
cmps
jmp
stc
pop
iret
test
pop
stc
jg
xor
cmp
out
dec
pusha
sbb
cmps
ins
jle
adc
mov
loopne
clc
mov
ins
jl
xor
push
adc
repz
lea
cmp
test
push
jge
mov
xchg
pop
mov
aam
into
add
cmps
pop
inc
dec
fadd
cli
jmp
fidivr
retf
mov
or
xor
or
mov
leave
ror
shl
test
test
out
mov
sbb
sbb
popa
ss
mov
repnz
sahf
sbb
add
inc
push
ror
dec
iret
int
and
iret
out
fwait
push
push
cld
mov
nop
sub
cmp
and
(bad)
sti
sahf
test
enter
sahf
sbb
mov
das
jg
ror
cmp
mov
jo
ins
add
mov
jo
push
xor
ret
mov
sbb
ss
push
xchg
xor
sahf
xchg
xchg
xchg
inc
add
mov
jb
adc
ins
mov
or
pop
xor
imul
(bad)
mov
jne
test
mov
sbb
push
sub
mov
add
inc
mov
sub
and
mov
cmp
jle
stc
mov
adc
stos
pmullw
pusha
cmp
jbe
mov
mov
mov
mov
add
mov
rcl
das
cdq
(bad)
cmps
cmp
mov
inc
jg
dec
js
inc
aaa
adc
retf
out
in
or
mov
jmp
or
sbb
xor
out
nop
mov
out
add
jb
nop
sub
cdq
loopne
shr
sbb
push
xchg
xor
or
sbb
fstp
repz
mov
(bad)
lea
clc
mov
cmc
xor
mov
arpl
adc
sub
add
inc
or
sub
je
jp
add
inc
mov
dec
fwait
cmp
or
or
pop
add
mov
nop
push
or
xchg
fisttp
call
xchg
sub
and
and
int
fcmovbe
and
call
iret
jg
or
call
xor
xchg
fcom
cmp
enter
xor
jae
inc
mov
pushf
in
sub
leave
xor
jge
lea
cwde
inc
call
aad
call
inc
call
int
test
loopne
jae
cwde
cmp
in
mov
mov
ds
pushf
pop
pushf
push
pushf
scas
in
sbb
pushf
pop
pushf
or
push
pushf
push
pushf
dec
pushf
in
sbb
xor
and
outs
test
mov
mov
test
leave
sub
mov
and
mov
ror
mov
rcl
mov
add
pop
mov
inc
repnz
push
push
ret
movs
stc
sbb
dec
add
rcr
sbb
movs
xchg
movs
nop
movs
fnstcw
rcl
sub
cli
add
sti
inc
jle
mov
adc
sahf
xchg
sbb
and
sahf
dec
ss
in
sahf
jmp
pusha
sahf
imul
pcmpgtb
xor
inc
sub
daa
mov
(bad)
or
jbe
into
shl
mov
js
je
pop
leave
sub
jo
js
cmp
or
sub
mov
push
shr
les
lea
out
call
sbb
in
pop
mov
pusha
adc
mov
dec
popf
sbb
adc
imul
sbb
call
adc
popf
push
adc
movs
movs
pop
sub
or
int3
test
sbb
or
(bad)
mov
inc
sahf
push
push
adc
or
imul
cmp
xor
cld
xchg
sub
jmp
push
mov
jb
test
push
call
rcr
or
and
sbb
add
mov
sbb
inc
sub
and
inc
in
ss
sub
push
rcr
jae
pop
int3
ret
fld
xor
and
clc
add
cmp
inc
mov
dec
add
cmp
mov
cdq
mov
dec
inc
xor
mov
call
sub
scas
fisttp
mov
and
out
add
cmp
ja
add
and
jmp
xor
pop
clc
jmp
or
fiadd
cmp
mov
xor
and
dec
(bad)
scas
or
fnstsw
adc
das
stos
mov
fisubr
sub
sbb
sub
stos
add
dec
and
shr
mov
xor
stc
adc
xchg
jecxz
cmp
(bad)
int
je
cld
test
add
jns
sub
sub
push
movs
sahf
mov
mov
lea
mov
or
fdiv
(bad)
push
jns
test
dec
pop
or
imul
(bad)
sbb
(bad)
push
or
pop
jmp
mov
xor
mov
scas
shl
cs
lds
mov
or
data16
leave
lds
test
jge
jecxz
or
mov
adc
add
sbb
push
xor
(bad)
cmp
push
shl
(bad)
int3
mov
dec
dec
sbb
adc
xchg
out
sbb
cmp
push
inc
sbb
jo
jbe
adc
mov
jbe
dec
pop
or
cmovg
add
xor
sbb
outs
or
pop
rcl
cmp
je
fisttp
or
pop
(bad)
pop
dec
push
jecxz
sbb
xor
es
xchg
test
(bad)
lods
mov
pop
rcl
mov
sbb
jns
add
cmp
fcmovnb
sbb
lock
dec
adc
add
mov
in
(bad)
cmp
xchg
sub
fs
push
cmp
push
psubusw
or
(bad)
xor
xchg
mov
push
sbb
push
sbb
jo
inc
add
(bad)
add
cmp
and
push
loopne
mov
pop
ret
sub
inc
adc
sub
cmp
adc
pop
add
out
jmp
sub
repz
movs
cmp
or
adc
sbb
add
cmp
and
sbb
fldcw
fisttp
add
inc
fiadd
outs
add
cmp
or
enter
add
jne
and
push
xor
xor
jmp
dec
pop
mov
mov
sub
push
sub
xchg
clc
pop
pop
xchg
je
dec
daa
inc
and
enter
adc
cdq
jae
sub
add
jg
sub
retf
add
ret
ja
inc
xor
xchg
dec
cmp
ins
mov
js
cmp
call
fwait
xchg
rol
push
ret
mov
ins
or
pop
aaa
push
cmp
mov
add
add
jmp
xlat
jmp
jp
movzx
mov
test
xor
test
mov
(bad)
in
sub
cmp
inc
cmp
cmp
je
add
mov
ins
es
std
or
pop
mov
iret
sbb
sub
inc
or
aad
adc
or
jae
add
add
cwde
mov
or
je
or
xor
dec
xchg
lock
jo
retf
pop
leave
inc
inc
fstp
dec
rol
sbb
fistp
aaa
add
cmp
sbb
and
stos
mov
popf
cmp
mov
jnp
cld
into
sub
shr
push
push
not
idiv
pop
mov
jl
pop
jl
and
imul
shl
ins
imul
and
(bad)
add
mov
pop
sbb
pop
arpl
sub
and
pop
or
aas
(bad)
and
retf
and
pop
push
pop
in
popf
or
sub
dec
sbb
jno
aas
push
add
test
pop
mov
cmp
mov
js
add
ds
call
outs
xor
dec
mov
add
add
(bad)
sub
shr
pop
or
ja
mov
mov
loop
push
xchg
sbb
mov
dec
or
loop
mov
inc
add
sbb
add
add
push
je
inc
mov
or
adc
je
test
sub
add
stos
mov
or
add
mov
nop
ret
mov
and
hlt
shl
xor
pusha
inc
add
xchg
add
sbb
jl
mov
mov
shl
pop
xchg
inc
cs
rcl
test
xchg
xchg
mov
sub
jge
jbe
int3
shr
pop
lods
imul
cmp
push
repnz
push
inc
out
imul
add
scas
leave
mov
push
push
adc
addr16
ss
add
jno
jae
adc
adc
fbld
xlat
dec
push
js
and
add
sti
pushf
push
iret
mov
push
mov
pop
scas
adc
das
dec
or
push
imul
adc
adc
les
mov
(bad)
jbe
sti
fimul
dec
icebp
cmp
mov
test
xor
pop
sub
pop
mov
sub
cmp
jae
shr
sbb
or
retf
fisttp
outs
(bad)
bound
cs
jbe
pop
scas
in
sbb
pushf
xchg
int
fstp
and
mov
add
aas
mov
dec
iret
push
push
dec
mov
je
add
dec
adc
add
push
and
rol
ins
(bad)
lahf
push
test
inc
and
push
mov
test
pushf
and
pop
adc
mov
adc
mov
or
mov
xor
fild
mov
jmp
push
add
adc
dec
sub
pop
and
sub
sub
push
add
cmp
pop
fsub
lea
xor
pop
icebp
shl
div
adc
inc
pop
test
xor
jmp
sti
cmp
mov
xchg
cli
xor
in
ins
aaa
adc
outs
es
xor
sub
into
cmp
jae
std
or
cmp
jbe
sub
inc
pslld
cs
add
push
repnz
div
pop
inc
pop
cmp
mov
mov
test
xor
sub
adc
rcl
xchg
xchg
nop
fmul
or
cmp
retf
call
in
shl
lods
xor
mov
xchg
inc
inc
jge
hlt
icebp
jo
jl
sbb
retf
mov
int3
js
mov
xor
push
cmp
mov
cmp
adc
jae
adc
out
imul
cmp
mov
int
sub
and
and
add
out
outs
inc
fwait
movs
mov
adc
add
or
add
and
shl
clc
mov
mov
lea
or
lea
mov
jecxz
neg
hlt
dec
test
lahf
sub
dec
mov
adc
rol
or
and
jne
push
push
fdivr
in
push
inc
mov
dec
and
cmp
out
in
(bad)
add
pop
out
add
fimul
sbb
cmp
jne
jmp
hlt
out
sub
mov
xor
iret
daa
push
sub
xor
adc
add
pop
or
sub
fisttp
shr
jmp
mov
fwait
sub
stos
das
push
mov
lock
cmp
sbb
cmp
cmp
push
xor
(bad)
or
(bad)
xor
shr
sbb
jecxz
adc
pop
pop
xchg
mov
cmp
(bad)
mov
stc
nop
inc
or
jle
xchg
in
xcrypt-ctr
cmps
pop
and
sbb
jl
pop
loop
hlt
sub
shl
loopne
add
mov
popf
push
mov
sub
in
in
add
inc
sbb
icebp
loop
jle
jg
pmaxsw
push
popf
push
add
or
or
or
add
adc
je
inc
loope
push
add
jl
mov
push
add
push
std
dec
fst
test
adc
dec
xchg
xor
pop
adc
scas
mov
test
mov
cmp
(bad)
je
sti
cmp
xor
lods
mov
and
add
mov
and
adc
lods
pop
les
and
xor
add
jl
jnp
push
aaa
push
push
jl
xor
je
(bad)
xor
sbb
xor
jge
inc
std
adc
inc
adc
inc
add
pop
outs
lea
cwde
ror
aas
jb
add
push
cmps
(bad)
push
sub
inc
xchg
jmp
mov
push
xchg
stos
test
mov
mov
xchg
outs
in
popa
inc
test
adc
out
ja
call
scas
cwde
dec
push
jb
cli
popa
xchg
(bad)
ss
call
sub
jnp
adc
push
pop
jmp
add
inc
sahf
xchg
sub
sub
outs
pop
xchg
in
movs
pop
sahf
inc
pop
pop
jg
dec
jae
xchg
or
sub
outs
mov
aas
add
mov
jmp
mov
xchg
rol
fbstp
mov
in
or
and
loop
iret
or
jb
jne
and
add
loope
sub
ja
and
ds
(bad)
loop
mov
and
cmp
sbb
mov
inc
iret
jne
mov
adc
sbb
xlat
loope
jecxz
push
push
mov
adc
pop
xchg
push
cmp
mov
daa
pop
mov
mov
test
imul
(bad)
add
dec
sub
push
xchg
shr
pop
xchg
inc
or
out
push
js
ds
out
test
and
push
push
push
call
mov
xchg
test
push
mov
sbb
cmp
xor
mov
sbb
je
cmp
mov
retf
or
mov
inc
sub
dec
fld
dec
sbb
push
and
cmp
add
dec
and
add
pop
mov
dec
mul
cld
xor
push
or
cmp
cmp
or
sbb
(bad)
sub
push
add
and
inc
add
pop
hlt
shl
mov
adc
mov
pop
mov
or
add
cmp
add
fisttp
rcr
mov
mov
xor
mov
add
pushf
retf
xor
or
inc
int3
mov
xchg
pop
and
push
mov
add
and
loop
xor
gs
pop
neg
les
or
xchg
xchg
xchg
jb
jnp
ret
and
nop
or
add
and
clc
cld
add
in
rol
fs
push
fs
sbb
fs
push
and
inc
push
fs
sub
fs
push
fs
cmp
fs
push
inc
inc
dec
inc
push
fs
dec
push
fs
push
fs
pop
pop
fsub
pusha
add
sbb
test
es
pop
mov
sbb
imul
and
jl
in
(bad)
and
adc
add
inc
push
imul
ja
aam
sub
mov
mov
add
add
pop
or
pop
pop
pop
shl
mov
sti
or
pop
add
add
pop
or
or
shl
adc
mov
pop
add
sbb
add
repnz
pop
pusha
push
jne
ja
in
mov
add
adc
inc
dec
repz
xor
add
and
xor
add
addr16
inc
fs
ror
inc
push
sbb
or
inc
push
sbb
push
push
sbb
adc
adc
adc
sbb
add
push
add
add
add
pop
and
das
push
inc
or
aaa
or
sbb
push
push
mov
lods
loop
push
aad
popf
loopne
add
shl
add
add
add
add
xlat
int
or
jne
cld
and
xor
inc
add
add
add
and
or
adc
pop
add
add
add
popa
inc
add
jnp
or
xlat
fldcw
neg
fcmovnu
fild
or
mov
ja
cmp
and
jmp
push
test
clc
repnz
add
dec
movs
faddp
(bad)
aas
(bad)
jg
pop
stos
inc
packssdw
shl
pushf
adc
dec
cwde
add
outs
dec
shl
dec
add
lods
enter
xor
in
or
sub
or
add
pop
call
test
movs
mov
(bad)
rol
call
pop
adc
imul
jecxz
inc
gs
outs
jbe
inc
lea
add
sbb
inc
test
dec
push
mov
sbb
cdq
add
push
inc
cmp
aaa
ins
push
outs
or
out
push
je
push
outs
ja
add
jbe
in
out
push
dec
sbb
push
arpl
pop
bound
ins
jbe
sbb
pop
inc
push
in
and
outs
inc
cmp
pop
ins
mov
loopne
outs
mov
or
jg
ins
xchg
imul
add
dec
pop
pop
int
inc
outs
stos
pushw
or
pop
jae
arpl
adc
ja
repnz
add
fmul
sbb
cmp
sbb
adc
ins
jmp
gs
arpl
sbb
sub
add
(bad)
push
mov
imul
sahf
out
out
pop
adc
outs
arpl
or
cwde
cmp
into
or
or
dec
addr16
and
dec
inc
push
dec
inc
dec
xor
mov
add
add
push
sub
xor
add
and
push
mov
call
add
push
fist
or
xor
(bad)
(bad)
push
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
push
xor
xor
pop
xor
jge
xor
xor
(bad)
xor
push
(bad)
mov
nop
ss
mov
ss
ss
fnstenv
fidiv
jecxz
(bad)
(bad)
push
lock
adc
sbb
sub
aaa
outs
aaa
test
cdq
aaa
scas
aaa
ret
aaa
(bad)
cmp
fidivr
xor
xchg
xor
xor
sbb
cli
sti
xor
cmp
xor
fbstp
lea
(bad)
(bad)
(bad)
call
test
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
not
xor
arpl
jle
mov
xchg
xor
xor
xor
call
push
fnsave
in
jmp
repz
sbb
adc
sbb
(bad)
(bad)
outs
arpl
xor
xor
xor
xor
xor
xor
shl
iret
xor
xor
(bad)
(bad)
(bad)
push
xor
xor
xor
xor
adc
inc
xor
push
xor
push
xor
lea
stos
xor
(bad)
xor
fidiv
out
xor
push
or
sbb
xor
cmp
dec
ss
ss
xor
ss
ss
ss
mov
sbb
ss
ss
push
aaa
xor
aas
aaa
inc
aaa
push
adc
js
(bad)
(bad)
push
mov
xchg
aaa
mov
mov
cmp
cmp
cmp
cmp
xor
cmp
inc
cmp
dec
cmp
(bad)
(bad)
(bad)
cmp
cmp
jo
je
jp
jle
cmps
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
sbb
and
xor
cmp
jno
jge
cmp
cmp
cmp
sbb
sub
cmp
push
cmp
pusha
cmp
jle
mov
jg
(bad)
call
les
iret
cmp
cmp
cmp
cmp
fidivr
push
cmp
sub
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
imul
cmp
mov
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sar
loope
es
cmp
jno
push
aas
bound
push
adc
loopne
xor
xor
sbb
sbb
(bad)
mov
dec
sub
sub
add
add
dec
aaa
push
aaa
lods
cmp
push
sar
cmp
cmp
cmp
nop
cmp
std
cmp
(bad)
mov
push
cmp
cmp
cmp
pop
cmp
outs
cmp
js
test
mov
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
jp
cmp
jecxz
call
ds
sbb
cs
(bad)
(bad)
(bad)
ds
ds
ds
cmp
ds
lods
ds
(bad)
fistp
repnz
ds
aas
sbb
das
idiv
(bad)
(bad)
aas
ss
inc
aas
dec
aas
pop
aas
js
mov
xchg
aas
stos
aas
mov
retf
aas
sar
loope
call
jmp
xor
xor
xor
push
xor
jne
test
(bad)
(bad)
dec
xor
xor
xor
xor
xor
xor
add
xor
dec
xor
jp
(bad)
(bad)
push
lea
cwde
xor
xor
xor
xor
xor
xor
xor
xor
xor
fdiv
push
xor
mov
mov
xor
imul
cmp
cmps
fnstsw
xor
rcl
push
xor
pusha
xor
xor
xor
jg
test
gs
dec
cmp
mov
cmp
cmp
cmp
mov
mov
cmp
aas
movs
aas
test
cmp
(bad)
xor
xor
and
xor
ss
mov
and
outs
clc
(bad)
in
cmp
cmp
or
inc
cmp
xchg
jmp
ds
cmp
cmp
cmp
stc
inc
xchg
cmp
cmp
cmp
cmp
cmp
out
repnz
cmp
sar
or
cs
push
cmp
(bad)
jmp
shr
cmp
inc
xor
xor
xor
addr16
shl
pop
fnop
jg
cwde
jmp
sbb
sbb
and
and
sub
xor
inc
(bad)
(bad)
call
xor
ins
xor
je
js
jl
xor
xor
mov
cmp
add
push
push
jo
jne
pusha
add
cmp
pusha
inc
xlat
pop
addr16
fild
mov
pop
ins
arpl
and
in
or
add
push
add
add
and
popa
fisttp
popa
(bad)
mov
xor
jnp
sub
mov
sub
and
push
mov
aad
xchg
das
add
inc
icebp
fst
cmp
push
add
ins
mov
inc
adc
inc
push
push
xchg
sub
adc
sub
ret
push
gs
leave
pop
fldenv
adc
jb
and
mov
or
ins
out
or
mov
push
jle
nop
mov
jb
sub
pop
inc
jmp
xchg
mov
cs
add
adc
lods
and
sbb
xor
lds
adc
push
fld
or
clc
sti
mov
inc
imul
or
inc
js
push
push
int
gs
add
cmp
int
add
das
and
adc
fimul
inc
shr
cs
fwait
mov
sbb
pop
js
ins
add
bswap
mov
dec
sbb
sub
std
lods
adc
rol
pushf
jl
not
push
xchg
sbb
cmp
cmc
shl
popa
sbb
push
repz
push
jae
adc
(bad)
popf
mov
ret
rcl
mov
ret
push
and
jmp
jne
imul
call
daa
mov
rcl
lods
pop
loop
adc
dec
adc
mov
mov
ficom
and
stos
and
ret
mov
out
cmp
inc
xor
or
mov
and
arpl
addr16
mov
jne
dec
mov
cmp
sbb
popa
add
mov
mov
or
and
inc
or
sub
sub
in
xor
cmp
psadbw
push
daa
fwait
xchg
es
dec
mov
sti
int
cs
inc
sub
push
les
add
adc
and
sahf
dec
and
ins
fld
adc
inc
(bad)
loope
imul
push
add
nop
jbe
push
pop
push
fld
pop
push
add
imul
lea
test
or
movs
add
xor
mov
mov
inc
or
(bad)
retf
aaa
outs
inc
xor
ret
adc
and
sbb
pop
add
push
pop
sbb
pop
adc
jp
sbb
cmp
adc
ret
dec
push
je
lea
xor
(bad)
cmp
das
xchg
and
in
mov
sub
push
jmp
xor
and
push
test
inc
add
and
jno
into
sbb
test
ficom
push
sub
jne
and
jae
es
les
cmp
inc
or
sub
into
cs
xchg
add
sbb
mov
inc
mov
pop
sbb
cmp
dec
popa
jo
inc
inc
imul
or
jne
or
int3
push
mov
(bad)
ficomp
jl
rol
stc
(bad)
xor
in
and
jb
gs
(bad)
or
jae
pop
fisub
sbb
(bad)
dec
mov
je
jb
push
mov
jnp
arpl
adc
fwait
push
adc
sub
push
sar
ret
dec
pusha
xchg
xchg
inc
mov
dec
std
mov
data16
push
dec
adc
jnp
push
mov
push
pusha
(bad)
ds
xor
inc
das
or
jp
pop
inc
push
and
mov
adc
sbb
and
cmp
ins
pop
sub
xor
inc
add
cdq
cmp
aaa
test
retf
xchg
xchg
adc
out
xor
jno
imul
inc
in
sub
mov
and
les
inc
shr
pop
fsubr
adc
push
mov
arpl
push
add
cmp
fwait
lds
lock
mov
dec
dec
(bad)
cwde
push
and
repz
push
mov
ins
sbb
cmp
dec
cwde
push
sub
dec
or
or
sbb
push
add
popa
data16
dec
fld
xor
xchg
and
adc
mov
popf
add
jl
or
loope
orps
jmp
or
(bad)
gs
and
imul
or
cmp
ins
call
popa
push
jae
pop
mov
add
mov
or
or
xor
pop
imul
pop
dec
(bad)
test
call
adc
sub
pusha
rol
in
popf
push
imul
cmp
push
fisub
xor
or
and
outs
add
mov
fldcw
or
ins
cmp
fmul
or
or
imul
jae
push
mov
or
popa
pcmpgtb
inc
call
inc
sbb
leave
inc
ret
inc
lods
jo
xor
out
adc
mov
adc
lea
mov
mov
test
(bad)
xor
jb
inc
mov
out
dec
or
sbb
push
or
ret
fwait
popf
icebp
mov
or
inc
add
aam
push
cs
sbb
sub
hlt
dec
and
popa
ret
add
inc
add
and
pop
inc
add
xor
inc
adc
mov
fs
data16
dec
or
lods
js
inc
das
mov
ins
fisttp
(bad)
jno
mov
xor
push
jo
xor
dec
loopne
push
in
push
jbe
test
popa
jne
scas
gs
ja
xchg
shl
imul
adc
sbb
in
cld
dec
dec
add
pop
inc
sub
sbb
in
mov
jo
adc
in
inc
push
and
add
inc
add
and
mov
ins
pop
sar
sbb
inc
dec
inc
adc
xlat
dec
push
jmp
call
inc
mov
mov
pop
add
fs
inc
push
push
jbe
or
lods
or
repz
pop
dec
aaa
mov
fs
cmp
imul
inc
je
dec
push
or
movs
and
loopne
jae
dec
cmp
mov
jg
mov
sbb
pop
sahf
iret
add
add
add
add
inc
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
lods
sti
inc
add
cld
inc
add
add
add
add
add
or
add
add
push
add
add
add
nop
add
add
add
loopne
add
inc
add
add
loopne
add
and
add
pusha
push
add
mov
lds
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
mov
lds
add
add
add
add
add
add
test
add
mov
lds
add
add
add
add
sbb
add
add
add
add
add
add
adc
add
mov
add
xor
add
mov
add
fadd
add
add
add
sub
add
push
add
or
cmp
and
mov
pop
add
cwde
pop
add
mov
add
enter
inc
add
sbb
add
repnz
add
sbb
add
add
add
mov
lds
add
add
add
add
add
add
js
add
test
add
mov
add
mov
lds
add
add
add
add
add
add
mov
push
add
sbb
add
mov
lds
add
add
add
add
add
add
enter
je
add
xchg
add
add
add
add
add
add
add
lock
add
and
add
add
add
add
add
add
add
add
sbb
add
int3
and
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
push
and
add
add
mov
lds
add
add
add
add
add
add
nop
add
add
add
sbb
add
mov
lds
add
add
add
add
add
add
mov
add
je
add
mov
lds
add
add
add
add
add
add
loopne
add
in
add
lock
add
add
add
add
add
add
or
add
aam
add
aam
add
mov
lds
add
add
add
add
add
add
xor
add
test
add
add
add
add
add
add
add
add
pop
add
add
add
xchg
add
add
add
add
add
add
add
add
add
sub
add
mov
lds
add
add
add
add
add
add
test
add
adc
add
add
add
add
add
add
add
add
rol
add
js
add
push
add
add
add
add
pop
add
sldt
sub
cmp
add
push
add
cmp
add
js
add
mov
sldt
enter
dec
add
lock
add
add
sbb
add
mov
lds
add
add
add
add
add
add
inc
add
add
xor
add
add
add
add
add
add
add
add
push
xor
add
add
mov
lds
add
add
add
add
add
add
nop
add
add
xor
add
mov
lds
add
add
add
add
add
add
mov
add
les
add
mov
lds
add
add
add
add
add
add
loopne
add
xor
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
xor
add
rol
add
add
add
add
xor
add
inc
or
adc
add
add
add
mov
lds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
js
add
rol
add
add
add
add
add
add
rol
add
add
add
mov
lds
add
add
add
add
data16
cmp
add
mov
lds
add
add
add
add
add
add
adc
add
cmp
add
adc
add
mov
lds
add
add
add
add
js
add
add
add
mov
lds
add
add
add
add
sbb
add
add
jl
add
adc
add
mov
lds
add
add
add
add
add
add
js
add
mov
lds
add
add
add
add
add
add
nop
push
add
xchg
or
xor
add
pop
add
add
pop
add
add
or
inc
add
add
inc
add
dec
add
push
add
or
inc
add
add
inc
add
dec
add
push
add
add
add
pop
add
dec
add
push
add
add
inc
add
pop
add
push
add
or
inc
add
add
dec
add
dec
add
push
add
inc
add
or
inc
add
add
dec
add
inc
add
dec
add
inc
add
add
add
pop
add
inc
add
push
add
inc
add
or
add
pop
add
dec
add
add
dec
add
push
add
or
inc
add
add
push
add
push
add
push
add
push
add
add
add
pop
add
push
add
push
add
push
add
push
add
inc
add
add
push
add
dec
add
push
add
push
add
or
inc
add
add
push
add
inc
add
add
or
inc
add
add
push
add
inc
add
dec
add
add
add
pop
add
push
add
push
add
add
add
pop
add
inc
add
push
add
dec
add
inc
add
dec
add
dec
add
inc
add
add
add
pop
add
inc
add
add
dec
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
dec
add
inc
add
dec
add
add
push
add
pop
add
inc
add
inc
add
add
inc
add
dec
add
inc
add
dec
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
or
test
add
add
xchg
ja
add
add
add
add
sti
sti
sti
sti
add
add
add
add
mov
add
add
(bad)
(bad)
inc
ja
add
(bad)
(bad)
inc
ja
add
(bad)
(bad)
inc
ja
cmp
add
add
mov
mov
add
mov
int3
add
or
js
add
mov
int3
add
or
js
add
int3
int3
add
inc
mov
ja
ja
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
mov
pop
add
mov
xchg
mov
inc
add
add
add
mov
xchg
add
js
xchg
mov
(bad)
(bad)
js
mov
(bad)
push
mov
add
add
jo
int3
int3
int3
(bad)
js
add
add
lock
int3
int3
(bad)
js
add
add
add
or
int3
int3
int3
(bad)
js
add
add
add
pop
int3
(bad)
js
add
add
add
pop
int3
(bad)
js
add
add
add
pop
int3
(bad)
js
add
add
add
pop
int3
(bad)
js
add
add
add
pop
add
add
add
(bad)
mov
add
add
add
(bad)
ja
ja
ja
ja
add
add
add
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
add
ja
jg
add
add
add
add
mov
mov
add
sar
pop
rcr
xadd
loopne
rol
add
add
inc
add
inc
add
xadd
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
dec
enter
add
add
add
and
jne
add
call
add
add
cmp
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
gs
bound
ins
popa
outs
imul
jb
imul
xor
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
cmp
jae
gs
bound
fs
je
je
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
jbe
jb
imul
xor
xor
xor
and
gs
xor
and
outs
popa
ins
gs
jb
jae
data16
push
imul
push
push
jae
gs
ins
xor
and
ds
gs
jb
jo
imul
outs
ja
and
gs
ins
cmp
fs
jb
jo
imul
jo
outs
fs
arpl
popa
jae
gs
bound
popa
ins
gs
arpl
xor
and
jb
imul
xor
xor
xor
ds
gs
outs
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outs
popa
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
and
jb
imul
xor
xor
xor
and
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
jo
outs
arpl
jae
jb
jb
push
je
jb
cmp
ds
fs
outs
fs
je
jae
gs
bound
cmp
fs
outs
fs
arpl
cmp
popa
jae
gs
bound
loopne
add
nop
push
add
in
push
add
mov
add
add
push
add
test
add
pop
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
push
add
sub
add
enter
xor
add
ror
add
aas
(bad)
add
push
add
dec
(bad)
add
add
push
add
add
add
add
add
test
add
add
add
cwde
(bad)
add
add
add
add
add
add
add
add
int3
(bad)
add
add
add
(bad)
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
ins
add
ins
arpl
xor
fs
ins
add
imul
ins
add
xor
cs
ins
add
gs
jne
xor
cs
ins
add
gs
ins
xor
cs
ins
add
gs
xor
fs
ins
add
jb
imul
add
dec
outs
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
add
push
gs
ins
outs
jae
dec
gs
add
dec
outs
imul
inc
outs
outs
je
outs
ins
jae
add
je
ins
je
add
dec
outs
imul
add
dec
outs
popa
fs
jns
gs
imul
gs
ins
inc
js
arpl
gs
add
add
je
inc
add
add
jb
jne
jb
push
popa
ins
jne
inc
dec
push
inc
inc
add
add
adc
add
add
add
add
add
add
add
add
or
add
cmp
add
jg
add
xor
add
add
add
add
sub
and
push
jb
jae
je
jo
jb
popa
fs
gs
je
daa
add
add
add
push
sub
gs
je
jo
ins
imul
je
je
dec
add
add
add
sub
and
push
jb
jae
je
jo
inc
dec
dec
push
cs
dec
dec
add
add
add
or
add
add
add
gs
je
jo
inc
push
push
cs
dec
push
add
daa
add
lds
xchg
add
gs
je
jo
jb
addr16
jb
xor
gs
add
push
add
add
or
adc
add
gs
je
jo
inc
imul
add
popf
add
add
into
sub
jb
jae
je
jo
inc
outs
jne
ins
outs
add
add
leave
scas
add
add
sub
and
inc
popa
je
pop
push
inc
push
push
push
cs
push
push
add
and
add
mov
out
sub
add
add
popa
pop
jae
je
jo
gs
add
rcl
add
add
add
popa
pop
push
je
outs
outs
addr16
inc
inc
add
jne
jo
add
add
bound
add
xor
add
outs
add
mov
rcr
jp
sbb
sbb
out
xchg
adc
fldcw
ins
ja
fucomi
cdq
fcmovnu
addr16
mov
sbb
stos
xor
xchg
lods
sub
in
xchg
xchg
shl
fidiv
xchg
xchg
sahf
int
and
jnp
(bad)
imul
add
xor
pusha
xor
add
gs
jno
mov
xchg
or
in
xchg
lea
outs
ja
or
fs
out
xchg
mov
lods
in
std
xchg
scas
fisttp
mov
cmp
push
mov
je
mov
jmp
mov
dec
fs
fldenv
sub
dec
mov
inc
and
add
add
inc
inc
add
mov
mov
pop
or
cli
or
xchg
aas
add
or
jmp
popa
pushf
mov
push
ins
xor
(bad)
shl
and
sbb
sub
gs
pop
cmp
(bad)
jge
jb
jle
or
js
add
add
jnp
sbb
sub
adc
cmp
xchg
call
les
mov
mov
loopne
pop
pusha
lea
(bad)
sbb
cli
arpl
cmps
lds
scas
jne
dec
push
stc
and
sbb
or
add
dec
cdq
lods
push
das
or
and
mov
push
jne
ja
int3
es
mov
jnp
mov
aad
mov
and
call
inc
inc
sbb
stos
fst
push
int
add
or
adc
rcl
adc
add
std
mov
push
test
mov
mov
cmp
or
dec
or
mov
pushf
mov
sbb
loop
sbb
dec
push
xor
push
shl
adc
sar
jo
mov
retf
adc
int3
pop
inc
and
test
dec
shl
sbb
aad
nop
shl
mov
sub
or
bound
jmp
int
fwait
mov
aam
std
enter
push
es
movs
out
loopne
ins
mov
das
sbb
lds
and
cmps
aam
movs
mov
xchg
lods
test
jb
mov
dec
nop
pop
inc
or
icebp
push
dec
pop
inc
xchg
sbb
push
xor
retf
mov
mov
scas
aam
inc
arpl
sub
int
add
or
mov
pusha
add
ret
in
pop
cmps
not
adc
pop
add
add
jge
(bad)
stc
mov
mov
and
inc
cmc
add
sub
push
xchg
jo
or
or
adc
xchg
stos
aaa
into
pop
jg
cmp
sbb
mov
test
stos
dec
test
ja
ret
pop
and
movs
sub
add
add
and
addr16
mov
xchg
inc
rol
and
mov
inc
pop
jmp
daa
or
mov
cli
dec
xor
leave
xor
fwait
retf
or
into
mov
call
or
add
push
dec
imul
push
pop
mul
jecxz
(bad)
push
daa
retf
sbb
or
mov
shl
jno
lahf
fld
push
sbb
sbb
or
push
pop
es
aaa
dec
pop
ins
frstor
push
mov
cmp
sbb
sub
lods
cmc
xor
push
pushf
icebp
mov
and
pop
mov
xchg
in
mov
stc
ss
adc
scas
jmp
je
cmp
retf
(bad)
jg
int3
(bad)
inc
dec
jl
bound
mov
aad
(bad)
addr16
cmc
fsubr
loopne
or
aad
mov
lahf
mov
inc
adc
mov
pop
xchg
pop
ja
add
pop
lds
pop
outs
(bad)
push
out
mov
cmps
ror
(bad)
pop
mov
retf
(bad)
popf
imul
mov
pusha
stos
aaa
movs
call
int
lds
or
arpl
ds
pop
aaa
push
xchg
or
pop
sbb
cmp
push
mov
pop
sbb
push
push
fnsave
es
cmp
popa
retf
adc
cld
popa
pop
jge
jno
lahf
mov
enter
adc
and
scas
lds
add
scas
pop
test
stos
stc
adc
xor
cdq
sbb
mov
or
jbe
jmp
(bad)
outs
mov
clc
push
lds
ret
es
fadd
push
sbb
jne
retf
(bad)
push
push
cli
ror
push
mov
lock
jle
cmp
aam
add
and
aam
xor
mov
sub
(bad)
xchg
cmp
xor
dec
mov
retf
sub
mov
cmp
in
mov
sbb
lahf
mov
mov
sbb
xor
(bad)
push
push
scas
loop
scas
loopne
xor
pop
repnz
adc
or
sbb
iret
mov
push
inc
pusha
jmp
aaa
dec
ds
(bad)
ins
adc
vmwrite
jno
aam
daa
stos
loopne
shl
in
outs
and
fisttp
cdq
jae
and
ja
mov
cmps
loop
pop
dec
dec
fidivr
popa
mov
fcmovu
jnp
inc
pop
leave
inc
push
mov
aad
call
sub
outs
dec
out
xchg
jecxz
mov
in
icebp
shr
xor
stos
mov
cld
and
in
std
mov
cmps
xor
fld
inc
jmp
mov
outs
cs
mov
push
dec
icebp
add
cmc
(bad)
push
(bad)
idiv
cmp
cmp
or
xchg
cmc
out
mov
cs
push
aaa
repnz
mov
stos
push
outs
out
mov
pushf
out
out
adc
mov
scas
scas
inc
arpl
jp
jae
sbb
jnp
fs
mov
pop
pop
and
push
mov
fldenv
mov
aam
add
mov
jne
ss
fisub
mov
pushf
leave
or
repz
jecxz
jmp
add
shr
cs
aad
outs
arpl
in
retf
or
xchg
inc
cli
icebp
loope
out
hlt
rcl
cmp
xchg
mov
jo
das
stos
adc
clc
out
pop
push
pop
ja
ror
cli
cwde
xchg
adc
sbb
xor
pushf
sbb
test
mov
in
xor
daa
jne
nop
xlat
icebp
and
int
mov
lsl
and
std
xchg
inc
repz
mov
(bad)
cmp
shr
(bad)
pop
inc
mov
pop
push
scas
fidivr
or
sahf
std
sub
lock
xor
sub
movs
outs
gs
std
jecxz
inc
cwde
push
sbb
and
cs
dec
ffreep
cmp
div
xchg
cmc
mov
inc
retf
mov
test
pop
jns
sub
out
sti
popf
mov
mov
mov
(bad)
inc
xchg
repz
fist
aas
dec
sti
dec
mov
mov
or
xchg
pop
lock
cmc
dec
dec
leave
sar
jae
outs
lea
xor
mov
mov
xlat
mov
sbb
mov
and
mov
pop
xchg
push
jne
scas
sbb
jo
ret
sub
fnstenv
push
adc
shl
push
fucom
es
mov
cmc
push
jg
out
or
inc
and
shl
pop
push
in
inc
jmp
jecxz
pop
lahf
cmp
stos
out
xor
repz
daa
sbb
movs
cmps
loop
iret
cmp
dec
push
fisub
and
imul
js
jle
pop
dec
not
jnp
push
and
sbb
dec
dec
inc
xchg
cmp
push
or
sar
shl
adc
call
jbe
ret
adc
inc
fldcw
movs
inc
push
out
cmp
test
jg
lock
fmul
(bad)
jle
cmp
(bad)
adc
das
mov
pop
xor
mul
sub
icebp
imul
js
inc
fidivr
imul
ins
mov
mov
into
pop
(bad)
stos
mov
and
daa
ds
xor
cs
mov
cmp
(bad)
sub
imul
jae
or
dec
mov
sar
push
movs
inc
or
jo
jle
cs
pop
pop
aam
xor
push
push
sub
mov
xchg
mov
out
shl
call
push
or
outs
lahf
mov
lahf
mov
idiv
inc
inc
push
lock
fdiv
push
push
test
bound
cli
pushf
mov
cmp
mov
or
add
fisubr
mov
enter
lods
rcl
movs
in
inc
mov
xchg
imul
clc
imul
mov
ins
(bad)
out
outs
loopne
cwde
push
jne
call
es
inc
hlt
in
and
jo
adc
and
push
jle
(bad)
push
popf
pop
cld
push
and
scas
pop
aad
and
and
les
xchg
mov
jp
xor
jl
sub
mov
icebp
pop
mov
ret
int3
xchg
jae
sub
in
test
cld
std
push
pop
xor
push
inc
lods
sub
or
mul
xor
mov
bound
repnz
ins
pop
xor
or
(bad)
mov
mov
imul
aad
sbb
outs
mov
xor
pop
push
(bad)
ins
jns
or
or
pushf
xchg
xor
stos
lds
sbb
shl
(bad)
jg
in
push
sbb
add
and
ret
in
fdiv
pop
movs
xchg
pop
or
leave
jge
repz
repnz
nop
loope
sub
imul
xor
push
mov
cli
imul
loopne
push
or
sahf
add
scas
mov
pop
cmp
add
daa
jbe
sbb
fbld
test
dec
mov
xchg
dec
dec
fdivrp
inc
mov
xor
cmps
and
push
sbb
into
lock
sbb
push
into
jno
sahf
adc
ret
mov
push
imul
rcl
dec
adc
(bad)
loopne
aad
mov
lods
or
add
sbb
mov
cmp
pop
js
fidiv
jo
jl
add
pop
push
push
ja
push
sub
mov
cs
das
and
and
inc
lea
ret
mov
mov
add
mov
sahf
inc
push
retf
jmp
inc
jmp
(bad)
pop
cvtps2pd
or
dec
sub
fsubrp
(bad)
sub
mov
data16
sbb
data16
sbb
xchg
aaa
jle
jl
fistp
pop
or
movs
cwde
in
ror
mov
sbb
ja
xchg
or
fwait
std
lds
popa
mov
das
sbb
push
pop
ret
sbb
or
jp
add
pop
and
outs
pop
sbb
push
aas
mov
enter
xchg
popf
push
add
xor
popa
inc
mov
test
ss
add
hlt
mov
test
arpl
cmp
mov
and
sub
pop
retf
imul
adc
add
ficomp
mov
repz
cmp
cmp
imul
ds
pop
and
cmp
jg
push
lock
out
aaa
bound
stos
or
mov
imul
in
pop
stos
ror
jnp
mov
sbb
setl
push
mov
sub
out
es
ins
fwait
cmp
mov
out
cmp
lods
xchg
dec
js
rcr
ret
retf
mov
(bad)
lahf
je
movs
jnp
pop
retf
leave
dec
adc
scas
push
mov
dec
cs
mov
pop
addr16
adc
test
mov
pop
std
icebp
sti
xor
fst
in
xchg
mov
jmp
daa
enter
dec
stc
adc
adc
inc
sub
xor
mov
xchg
push
push
push
mov
dec
jge
pusha
xchg
lea
push
dec
adc
(bad)
jmp
scas
(bad)
std
inc
sub
and
jp
jl
fdiv
fcmovnbe
sbb
inc
jmp
xchg
mov
jg
add
popf
stos
xor
push
mov
dec
enter
mov
or
pop
jecxz
cwde
arpl
arpl
lds
nop
jns
enter
out
inc
and
xor
rcl
fstp
scas
pop
sub
add
adc
call
scas
repz
mov
add
fwait
scas
aam
addr16
cmp
sub
dec
ja
sbb
cmp
dec
div
lea
cmp
mov
and
inc
fadd
nop
cwde
push
clc
retf
scas
invd
pop
fdiv
and
add
in
xchg
pop
enter
sbb
push
outs
imul
out
dec
dec
ins
mov
sub
xor
adc
repz
cmp
jns
cs
push
pop
sar
movs
push
inc
fdiv
test
fisubr
mov
push
(bad)
call
xchg
icebp
cmp
jge
popa
and
call
mov
ja
ss
jp
or
add
mov
sti
and
xor
(bad)
cmp
(bad)
pop
inc
or
xor
out
in
dec
lds
test
pusha
push
cli
into
sub
mov
fucom
enter
xor
jecxz
and
mov
movs
mov
out
pop
cmp
jge
push
test
scas
test
mov
push
push
aas
adc
dec
enter
mov
out
xchg
mov
in
cld
dec
inc
retf
sbb
mov
ret
jmp
pop
ins
popf
cmp
jae
jb
repz
in
repnz
lods
mov
dec
or
imul
pop
add
je
mov
mov
adc
lods
sub
test
movs
pusha
clc
xchg
dec
bound
mov
pop
or
push
jbe
shr
cmc
rol
adc
sbb
xchg
repz
fdiv
jmp
pop
mov
jbe
and
imul
cmp
adc
or
jnp
inc
mov
add
inc
(bad)
push
sbb
sub
or
and
out
pop
js
jae
es
sub
mov
rcl
enter
add
je
call
cmps
mov
fcomp
push
ss
push
ret
or
icebp
fnstcw
ret
pop
mov
sbb
sbb
mov
retf
and
popa
and
xchg
stos
mov
dec
shr
jnp
xadd
push
push
movs
xor
xchg
cdq
js
(bad)
out
xchg
xchg
fisub
jbe
pop
pop
data16
int
sub
push
jns
mov
rol
lods
mov
mov
popf
rol
lods
call
or
inc
jecxz
mov
(bad)
cmp
rcl
inc
push
ret
ds
add
sahf
cdq
xlat
push
mov
add
push
fchs
push
mov
jl
js
clc
xlat
mov
jmp
(bad)
fbld
pop
nop
int3
ret
mov
xchg
inc
es
pop
mov
xchg
setae
sbb
sbb
adc
jg
rcl
xchg
mov
inc
ret
lahf
jns
js
inc
iret
cmc
ficomp
movs
push
mov
outs
iret
and
arpl
xchg
xor
pcmpeqw
jmp
rcl
bound
repnz
shl
push
xor
scas
iret
rcr
jae
mov
iret
xor
lea
sub
enter
test
or
lock
retf
gs
jp
lods
inc
clc
imul
xor
inc
aas
or
inc
push
mov
sub
add
lock
test
iret
push
js
or
ins
sub
pop
fnstcw
es
cli
mov
in
dec
popa
or
sbb
push
fs
ret
fisub
and
and
and
cmps
shr
mov
push
sbb
retf
fimul
lods
int3
ds
int3
adc
dec
cs
push
aam
rep
cmp
retf
repz
or
jns
add
pop
add
jmp
fidiv
adc
outs
data16
and
adc
add
inc
xchg
out
in
call
push
in
repnz
std
(bad)
rol
adc
sub
fild
jb
bound
pop
cmp
sub
stos
mov
mov
xor
xchg
shl
repz
pop
mov
out
push
pop
std
or
cmp
xchg
shr
dec
pop
inc
mov
gs
jbe
mov
test
xor
dec
ficomp
sbb
xor
jae
(bad)
cli
or
push
sbb
mov
es
sbb
cld
ins
dec
(bad)
repnz
mov
and
jne
addr16
arpl
imul
adc
scas
arpl
daa
cmp
leave
sbb
or
add
push
sub
add
adc
pop
dec
jnp
sahf
fs
push
cdq
in
(bad)
mov
mov
add
aas
pop
hlt
(bad)
rcr
iret
outs
es
int
or
pop
add
mov
adc
add
push
hlt
arpl
xchg
or
test
in
pusha
or
add
or
iret
dec
jmp
push
jbe
pop
jge
sbb
mov
and
rol
test
test
in
fisttp
ret
loopne
loope
icebp
mov
push
loop
inc
dec
mov
or
xor
pop
jmp
movs
mov
add
jmp
add
fcom
iret
fwait
adc
dec
in
jo
mov
add
cmp
sub
mov
pop
dec
add
lods
movs
bound
inc
test
shr
(bad)
fbld
xor
push
dec
ds
(bad)
(bad)
cmp
scas
dec
scas
xchg
lds
clc
jmp
mov
and
hlt
sub
mov
and
mov
ds
clc
jmp
push
xchg
out
lods
aad
ficomp
xchg
adc
nop
pop
out
jb
jmp
lea
test
dec
xchg
push
jg
fadd
retf
xchg
cdq
and
jb
jb
push
jecxz
jg
mov
sbb
enter
shl
xchg
movs
sbb
adc
(bad)
and
call
cmp
cdq
in
add
stc
add
ja
scas
ror
nop
inc
int3
mov
inc
xor
mov
popf
mov
pushf
mov
ss
jp
xchg
test
data16
repz
movs
retf
jp
mov
add
test
jns
movs
test
cmp
add
xchg
stos
dec
add
lock
jo
test
gs
outs
outs
push
imul
cmps
add
sbb
aam
daa
ss
cmp
pop
jno
(bad)
popa
mov
xchg
pop
mov
sbb
jecxz
pop
inc
mov
push
adc
xchg
icebp
adc
mov
sub
cmps
mov
adc
ret
sub
inc
pop
mov
sub
add
add
test
adc
test
jmp
add
push
sbb
outs
das
pop
mov
jo
jbe
adc
add
cmp
xchg
js
fwait
call
mov
mov
pop
jbe
cmps
(bad)
xchg
inc
mov
imul
sub
mov
aad
dec
mov
push
cmp
and
mov
mov
add
mov
outs
mov
test
fsubr
xchg
mov
mov
dec
pop
imul
outs
add
popf
xor
mov
mov
lds
jns
push
sub
loop
sub
dec
add
sbb
pop
int3
xchg
loopne
mov
inc
loop
and
imul
sbb
adc
mov
ds
sbb
shr
movs
push
inc
mov
jmp
(bad)
xchg
push
mov
add
mov
ret
cli
ror
popa
stos
fcmovu
pushf
loopne
mov
addr16
sub
aad
outs
in
cmp
dec
sbb
or
push
jno
aam
ds
add
icebp
xor
in
cmp
(bad)
aas
leave
lods
js
stos
sub
pop
mov
fidiv
push
pop
mov
ins
ret
fcomp
sub
cmp
jae
(bad)
pop
mov
pushf
mov
(bad)
mov
cdq
rol
xchg
add
cwde
push
jle
lahf
push
mov
push
(bad)
mov
mov
(bad)
mul
sbb
and
add
fldenv
loopne
dec
popa
jecxz
mov
adc
pop
mov
mov
and
rcr
test
xchg
jno
jg
push
jl
ins
int
outs
loopne
jb
out
into
cmp
pop
pop
iret
mov
push
xor
sbb
add
inc
adc
push
call
cmc
fs
daa
push
(bad)
mov
inc
fwait
sub
xor
cmp
test
xchg
vpsllq
push
gs
and
and
jmp
push
data16
xor
std
lock
into
out
(bad)
sti
jns
sbb
in
xchg
test
cmps
or
xchg
inc
or
jb
cmps
bound
out
scas
pushf
cli
pop
dec
push
fstp
fsub
and
daa
dec
imul
enter
jecxz
add
sti
add
jmp
inc
push
inc
inc
push
data16
add
and
xor
sbb
xchg
je
icebp
mov
(bad)
cmps
cld
outs
inc
jb
data16
xchg
xor
push
and
add
pusha
xor
mov
jns
jle
pop
xor
inc
pop
lahf
(bad)
int
aam
in
leave
mov
daa
repz
mov
mov
fist
cs
xor
push
dec
daa
dec
jle
adc
jno
test
adc
add
rcl
sbb
inc
(bad)
mov
mov
and
xor
pop
gs
inc
add
ds
jbe
scas
sbb
jmp
push
(bad)
enter
or
mov
xchg
or
test
mov
ret
hlt
neg
hlt
loope
iret
jmp
ja
(bad)
push
movs
add
and
sar
add
test
lahf
pop
xor
dec
test
shl
aam
xchg
movs
cmp
or
test
mov
js
pop
adc
pushf
lock
sub
dec
inc
xchg
movs
mov
or
movs
push
es
mov
into
stc
call
fcom
jle
xchg
sbb
das
push
sbb
hlt
das
(bad)
jmp
(bad)
jg
xor
add
fnstenv
cmp
inc
nop
jmp
ss
add
mov
pop
mov
pop
inc
xor
sub
jbe
sbb
inc
mov
cs
pop
call
or
lods
fst
adc
push
das
bound
scas
out
push
mov
jnp
mov
mov
fcom
(bad)
jmp
cld
test
(bad)
loope
shl
retf
xor
jae
loope
pop
xor
shl
test
pusha
ins
jns
add
jno
jno
jmp
pop
(bad)
mov
cmps
hlt
inc
out
in
scas
outs
cli
sahf
outs
in
dec
std
cmps
mov
imul
xchg
mov
push
jb
stos
mov
cmp
pop
cmp
stos
retf
cmp
das
daa
imul
fsubr
int3
mov
rcr
mov
pushf
cmp
jbe
inc
loop
stos
jmp
jp
cmp
lea
cmp
fnstsw
pop
in
out
icebp
es
jns
pop
int
movs
out
arpl
stos
in
sti
xchg
jl
outs
xchg
fiadd
mov
ror
adc
push
popa
pcmpeqw
sbb
sub
jns
jne
js
test
xlat
inc
cli
push
inc
pop
scas
scas
(bad)
xor
cdq
adc
out
jmp
lahf
pop
out
(bad)
cld
jmp
(bad)
xchg
add
mov
(bad)
cmp
rcl
in
es
and
xchg
sbb
cmp
add
mov
xor
stc
sahf
adc
inc
addr16
mov
add
lahf
shl
jnp
enter
mov
xchg
mov
fnstsw
mov
scas
stos
pop
cs
aad
and
mov
dec
rcr
(bad)
xchg
ja
sub
pop
test
xchg
fldln2
mov
sub
mov
cmp
inc
jle
and
sub
pop
ret
cmp
aas
loope
pop
iret
fist
cmp
into
dec
dec
and
mov
fst
xor
hlt
sbb
xchg
cli
outs
(bad)
and
neg
xchg
dec
movs
jg
cmps
fcom
xchg
and
pop
js
xor
jno
dec
lods
adc
and
stc
adc
je
cmp
and
stc
enter
jmp
jnp
aad
in
ficom
jo
rol
and
pop
sbb
push
(bad)
leave
or
add
or
mov
das
inc
dec
int
add
dec
sbb
mov
(bad)
push
pop
xchg
iret
movs
xchg
xchg
sbb
mov
cmps
cli
mov
mov
xor
jae
pop
sub
call
inc
push
cmps
xor
xor
iret
push
and
pop
jmp
stc
sub
and
lahf
xchg
push
ins
xor
and
inc
out
les
(bad)
pop
dec
cmc
sti
sbb
std
inc
jge
sbb
enter
fld
and
jmp
xchg
pop
or
fwait
adc
test
inc
push
out
in
mov
inc
(bad)
pop
xchg
jbe
sbb
pop
loop
sbb
fcomp
jbe
add
mov
inc
sub
inc
(bad)
(bad)
rcr
xchg
add
sub
add
les
xchg
std
sub
inc
out
dec
inc
lods
jae
jl
sub
daa
dec
jb
ins
clc
push
dec
push
mov
xchg
clc
fld
in
out
mov
outs
dec
jae
mov
mov
scas
out
ja
fld
mov
cmp
cmp
lock
scas
retf
pop
nop
fcmove
hlt
fnstenv
mov
lods
sbb
xor
inc
sbb
addr16
jbe
out
shr
and
scas
lahf
push
bound
sbb
mov
lahf
test
inc
std
mov
mov
aam
ret
mov
xchg
sub
dec
push
movs
cmp
out
add
mov
jnp
adc
rcr
in
fcom
and
push
add
loope
loope
add
sub
jno
aam
push
imul
mov
lods
inc
aam
outs
or
cld
fild
cmp
fwait
mov
pop
mov
ret
rol
repz
lahf
pop
jmp
cmp
pushf
mov
add
aas
fbld
or
jle
sub
loopne
inc
inc
inc
test
fidiv
dec
jns
int3
sub
jecxz
cld
push
aam
aad
mov
idiv
xor
lods
ficom
sbb
ficomp
loopne
retf
scas
popf
call
fs
gs
or
pop
mov
movs
add
mov
adc
jnp
sub
clc
mov
inc
xor
and
lods
cmps
scas
leave
stos
xchg
div
inc
loope
push
shl
(bad)
(bad)
cmp
mov
push
aas
lea
lods
jecxz
pop
ret
out
out
rol
daa
popa
jo
fcmovbe
mov
inc
push
dec
std
sbb
scas
push
in
jns
mov
(bad)
mov
lahf
xlat
mov
dec
pop
add
mov
jmp
dec
add
or
push
movs
sub
xor
sub
inc
(bad)
push
shr
retf
in
push
xchg
retf
loopne
cmp
outs
pop
movs
mov
sbb
jbe
outs
jne
xlat
icebp
mov
hlt
jp
ins
fwait
loopne
xchg
scas
mov
xor
mov
mov
fisttp
sub
mov
into
jl
into
std
shl
adc
stos
fdiv
or
jns
mov
hlt
xor
xor
adc
test
mov
mov
into
dec
pop
shl
xlat
es
push
xor
imul
pop
pop
fdivr
pop
add
imul
int3
scas
mov
mov
(bad)
das
dec
addr16
wbinvd
retf
dec
imul
jnp
pop
call
push
je
inc
xchg
test
sbb
cmp
fs
or
adc
(bad)
jle
sub
mov
and
imul
mov
xor
sbb
and
mov
adc
mov
ds
clc
jne
mov
rcl
pusha
fisub
pop
jne
int
jbe
dec
mov
stc
pop
mov
(bad)
lds
mov
jb
jne
popf
pop
dec
test
sbb
jo
cld
pop
and
repz
mov
pop
push
enter
leave
test
mov
mov
sub
sbb
lahf
lods
sbb
rcr
jecxz
add
(bad)
outs
pop
xchg
movs
inc
dec
mov
mov
aas
push
sbb
dec
push
mov
add
cmp
enter
(bad)
not
mov
dec
xor
imul
sbb
jae
int3
and
push
dec
xchg
inc
dec
adc
adc
stc
or
fwait
std
imul
xchg
mov
add
push
push
xchg
jne
or
test
repz
jno
retf
xchg
fs
jmp
fs
inc
pop
mov
retf
fbstp
sub
jo
pop
in
cmp
aaa
add
xchg
ret
sti
retf
stos
jmp
xchg
push
jae
outs
push
mov
jle
imul
push
mov
xor
push
mov
retf
jae
cmp
inc
lahf
pop
jno
repnz
jns
cmp
mov
pop
rcr
in
sar
scas
pop
pop
movs
ins
mov
cdq
fdiv
xchg
cmp
adc
stos
mov
loope
add
pusha
pop
xor
jp
xor
push
push
or
sub
xor
mov
dec
in
movs
popf
cwde
or
cmp
push
push
aaa
xchg
and
xchg
aaa
pop
popa
jecxz
imul
lahf
mov
lahf
mov
xchg
movs
inc
jl
inc
imul
xor
mov
jp
mul
push
shl
repz
xor
mov
les
(bad)
les
outs
xor
jle
adc
xor
mov
adc
add
mov
adc
shl
pop
movs
jne
ins
add
aad
sub
dec
cmp
adc
stos
ins
jp
test
addr16
cmps
aad
scas
jle
(bad)
sti
out
adc
cmp
jmp
out
jns
mov
push
xchg
mov
mov
ficomp
xchg
in
mov
cld
into
lods
imul
mov
ret
pop
call
dec
outs
fiadd
mov
arpl
sbb
sar
sbb
in
arpl
push
push
xor
repnz
jmp
jg
adc
fmulp
aaa
cmp
in
mov
in
or
sub
arpl
jno
jecxz
aas
hlt
add
inc
sbb
jbe
es
mov
dec
inc
mov
js
lods
fst
fcmovb
push
dec
pop
xchg
ins
leave
mov
aas
inc
dec
jne
movs
ins
outs
out
dec
imul
jne
jmp
sahf
mov
mov
(bad)
sub
cmp
bound
push
sbb
push
test
les
dec
jo
dec
sbb
sub
pop
cdq
mul
ret
outs
jmp
inc
sbb
pop
add
jb
and
adc
push
mov
call
sbb
sub
retf
mov
repz
xchg
mov
cmp
xchg
mov
mov
adc
push
mov
outs
outs
sahf
shr
repz
enter
inc
lahf
mov
je
imul
push
fdiv
jle
mov
(bad)
cld
jnp
je
fcmovnbe
dec
out
mov
dec
int3
stc
pop
inc
add
xor
inc
das
ja
iret
add
pop
mov
adc
repz
cld
add
inc
inc
rcl
push
sbb
dec
int
xor
sub
mov
and
xor
and
pop
bound
sub
lock
fcmove
push
sbb
cld
mov
ins
pop
std
and
or
fld
xor
enter
movs
sbb
push
mov
dec
push
pushf
scas
mov
fstp
psubsb
int
repnz
bound
and
sti
sub
add
xchg
repz
outs
repnz
xchg
mov
shr
ror
cmp
sbb
inc
mov
jl
inc
add
pop
loop
cmc
(bad)
(bad)
sub
scas
(bad)
out
mov
pand
in
data16
fimul
jae
jmp
inc
fstp
movs
aas
stc
and
and
xor
imul
mov
shr
in
repz
hlt
pop
inc
in
dec
jmp
(bad)
sbb
sub
xor
daa
rcl
sti
iret
enter
in
push
xchg
outs
pop
movs
call
in
cs
rcl
or
cmps
dec
inc
out
sbb
adc
je
jae
sub
fdiv
inc
mov
in
arpl
cli
out
push
fsubr
rcl
xchg
jg
xchg
(bad)
and
retf
std
leave
outs
inc
add
mov
ja
fistp
dec
adc
in
sbb
stc
cmp
in
sbb
add
jne
adc
fistp
pop
scas
dec
rol
cdq
repz
out
test
pop
mov
fsubrp
stc
les
in
inc
cmovo
mov
lods
or
lea
pop
sbb
push
fimul
mov
icebp
(bad)
cmp
jecxz
mov
retf
mov
test
mov
in
push
xor
cmps
leave
(bad)
jg
fwait
js
rcr
xchg
daa
xlat
mov
add
pop
shl
sub
sub
mov
pop
(bad)
cld
ins
mov
xchg
push
ficom
fiadd
fwait
xlat
push
mov
fbld
dec
repz
xlat
pop
mov
lods
sti
mov
inc
xchg
aam
out
outs
neg
mov
int
xchg
loopne
addr16
enter
jl
inc
dec
test
cmp
xchg
(bad)
fsub
pop
ret
repz
jmp
push
xlat
(bad)
cdq
xchg
pop
ret
sbb
xor
and
pop
cmp
add
xchg
mov
sbb
or
dec
ss
lahf
and
mov
(bad)
mov
mov
pop
and
test
push
test
stos
jg
pop
fs
add
pop
xor
mov
outs
push
ins
ja
inc
pushf
mov
addr16
inc
push
jecxz
data16
leave
sub
dec
jp
icebp
sub
loop
or
popf
rcl
mov
jo
jo
xlat
inc
pop
sbb
mov
gs
out
gs
xchg
pop
adc
sbb
clc
(bad)
pop
iret
or
mov
inc
loope
mov
daa
mov
dec
test
jnp
rcr
adc
inc
mul
aad
mov
adc
test
iret
adc
call
addr16
sahf
fdiv
out
test
inc
(bad)
repnz
jmp
xchg
push
dec
cmps
pop
iret
loopne
cmps
outs
inc
ins
jg
cld
mov
popf
pop
xor
jecxz
repnz
ret
sub
cmp
push
test
in
test
jnp
mov
pop
push
iret
outs
sub
mov
mov
mov
sbb
mov
xchg
arpl
xor
aas
pop
stos
das
add
nop
loope
je
stos
(bad)
leave
dec
adc
jge
fs
int
gs
cmps
scas
imul
mov
cld
adc
dec
cmp
fcmovb
xchg
out
in
lahf
cld
(bad)
and
in
jg
or
or
push
neg
sub
repz
or
dec
lahf
mov
stc
push
mov
pop
mov
xor
xchg
inc
je
mov
and
(bad)
imul
(bad)
stc
ins
pop
and
mov
pop
jle
neg
sbb
push
nop
jno
cmp
cmp
lods
xchg
mov
mov
add
mov
popf
mov
pop
pushf
call
cs
sbb
rcl
jg
(bad)
movs
mov
xchg
xlat
das
outs
shl
xlat
inc
jge
cld
pop
or
push
cmc
shr
push
mov
cmp
dec
(bad)
lods
or
inc
jmp
sbb
sub
int
cmp
rol
jmp
gs
push
add
aas
loopne
push
add
ror
outs
push
xchg
call
lods
dec
mov
dec
cmp
cld
mov
cmp
cmp
dec
pusha
nop
push
gs
int3
fild
inc
jmp
add
push
punpcklwd
adc
test
into
cld
test
stos
lds
ja
fisub
pop
cli
sub
pusha
sub
int
bound
xchg
iret
int3
mov
push
mov
mov
stos
push
out
push
ss
mov
pop
leave
mov
add
int3
bound
movs
pop
mov
(bad)
(bad)
cmc
fwait
repz
fwait
push
jno
iret
ret
leave
loop
mov
cdq
movs
pop
mov
pop
mov
shl
mov
pop
fwait
xchg
(bad)
fnstenv
cmc
and
in
push
and
ficomp
stos
xor
stc
out
out
pop
push
jl
aad
ret
sti
not
ffreep
pop
xchg
mov
call
add
cld
and
div
into
or
mov
cmc
or
ret
addr16
scas
call
arpl
ds
xchg
movs
dec
adc
sar
test
push
dec
test
mov
shl
mov
(bad)
addr16
mov
inc
xchg
inc
push
shr
mov
mov
mov
fcomp
(bad)
xchg
dec
popa
movs
dec
test
adc
pop
xchg
xchg
pop
inc
call
dec
dec
lea
(bad)
cmp
inc
mov
cmp
pop
inc
sbb
aas
clc
cmp
sbb
stos
fs
and
xchg
clc
jb
or
mov
pop
push
pushf
(bad)
xor
dec
shr
push
and
rcr
jp
mov
add
mov
mov
jmp
mov
or
lea
jnp
add
mov
pop
cmps
add
pop
loop
cs
cmp
fwait
mov
mov
outs
call
in
push
into
aas
outs
rol
out
fsubr
(bad)
in
sub
jns
mov
mov
fmul
jmp
in
into
fild
pusha
das
push
cmp
xor
nop
je
jne
cmp
mov
mov
repz
repz
jp
iret
mov
out
inc
out
xor
pop
cdq
cs
xchg
or
or
cli
ret
jns
cmp
sbb
xor
rcl
fcom
imul
and
sub
sub
shl
jmp
mov
mov
jnp
mov
mov
xor
js
or
(bad)
jbe
xchg
comiss
mov
aas
inc
adc
test
jl
aad
and
ror
and
sbb
repz
sbb
leave
loope
ja
jbe
dec
mov
mov
lods
adc
hlt
inc
push
scas
push
jg
inc
jmp
fs
js
xchg
jle
sar
fistp
and
ja
addr16
jg
jo
push
jp
mov
push
js
mov
push
out
xchg
and
scas
xor
fmul
test
xchg
retf
rcr
call
int
xor
pop
in
mov
add
dec
jo
clc
fst
mov
mov
cli
dec
add
in
xchg
xchg
int3
push
xchg
mov
je
mov
add
(bad)
retf
mov
sar
sbb
jmp
xchg
outs
call
cld
push
pop
in
jle
scas
jno
int3
std
in
xchg
cmc
push
sub
xor
in
pop
nop
or
stc
push
(bad)
pop
push
ss
mov
cmc
push
sbb
call
leave
sub
std
psubsw
mov
stos
imul
xchg
mov
jl
loope
sbb
ds
ins
repz
enter
xor
sub
jg
jns
gs
scas
push
sar
mov
and
xchg
mov
mov
fdiv
mov
pop
out
(bad)
cmp
adc
aas
mov
mov
das
call
clc
ja
not
rcr
xor
mov
xor
pop
push
sub
jne
jmp
dec
fild
adc
cdq
add
pop
(bad)
call
lahf
(bad)
test
mov
xor
sub
xchg
pusha
adc
dec
adc
xchg
xor
imul
pop
cdq
and
ss
adc
pushf
mov
fimul
scas
jmp
leave
push
outs
cld
xchg
retf
imul
push
mov
xchg
cmp
sahf
jmp
fldenv
cs
inc
loope
je
sub
cdq
sbb
cmp
out
mov
or
sub
xor
cmp
imul
std
inc
xor
mov
and
and
mov
out
pop
imul
call
sahf
test
or
call
ss
aaa
lock
(bad)
sbb
pop
mov
rcl
and
inc
mov
or
dec
push
out
xchg
movs
sar
push
xor
add
fimul
push
test
inc
add
cld
loop
mov
frstpm(287
imul
xchg
mov
adc
mov
jl
loope
mov
mov
cmc
shl
mov
xor
idiv
repnz
and
dec
xchg
outs
xchg
repnz
fwait
jle
mov
jp
call
sub
into
add
pop
sub
jp
test
out
adc
pop
sbb
and
ficom
fwait
mov
adc
loop
push
in
lds
test
(bad)
mov
inc
in
fiadd
gs
fisttp
jns
retf
ja
jno
addr16
dec
into
inc
test
scas
fst
or
pop
jle
icebp
(bad)
cs
loop
int3
mov
mov
jb
icebp
mov
in
mov
pop
enter
aad
fidivr
inc
idiv
cmp
(bad)
aad
xor
mov
dec
pushf
pop
push
(bad)
ss
mov
ja
lahf
jmp
sbb
pusha
out
dec
cs
mov
hlt
push
mov
dec
sub
and
lods
cwde
push
or
xchg
(bad)
jb
push
push
add
mov
hlt
ja
xor
adc
mov
push
adc
into
popf
int3
adc
mov
mov
push
mov
inc
clc
call
fwait
inc
les
(bad)
iret
push
les
push
fwait
cmp
jns
lock
add
jbe
sub
sti
ds
ins
imul
or
int3
jns
sub
iret
adc
xor
mov
dec
imul
in
cli
je
xchg
int
jp
push
xchg
cmp
lea
mov
or
out
add
hlt
adc
xchg
js
xchg
lods
pop
(bad)
repnz
aaa
sub
repnz
clc
jecxz
sub
test
jns
mov
mov
mov
lea
sbb
jo
and
pop
outs
ss
sub
lods
mov
ror
cmps
mov
inc
dec
movs
push
mov
mov
mov
ds
jg
out
jae
fldcw
data16
sub
call
add
inc
add
ficomp
pop
bound
aad
or
pop
xchg
or
pop
sbb
leave
jmp
cli
mov
sar
sti
mov
pop
xchg
rcr
aad
dec
pop
jge
mov
pushf
mov
lahf
popf
std
inc
ds
jbe
push
jb
xchg
stc
mov
dec
stc
lods
sub
push
loop
ror
sti
pop
out
mov
imul
mov
cmp
pusha
mov
emms
mov
pop
les
in
mov
push
imul
(bad)
aad
mov
mov
hlt
cmp
mov
mov
mov
std
loop
lock
aas
push
mov
cs
push
pop
fmul
mov
pop
jecxz
jne
jb
iret
mov
push
pushf
popf
aas
cmp
jns
xlat
pop
mov
into
inc
xor
stc
lods
mov
mov
mov
sbb
cli
adc
sub
mov
inc
xor
xlat
sbb
int3
xlat
test
rcl
add
push
inc
das
and
into
jbe
les
push
lods
and
add
sub
add
je
das
popf
js
ror
add
ror
jge
jge
push
pop
sahf
or
or
inc
dec
sbb
nop
pushf
cmp
jb
add
xlat
mov
nop
and
add
adc
xor
lahf
sbb
or
cmp
add
cld
stos
sub
and
xor
sahf
arpl
push
out
mov
jmp
jmp
cli
jle
mov
mov
cmps
pop
xlat
jg
push
jbe
loope
adc
rol
repnz
pop
jg
sti
ss
popa
out
icebp
out
fcmove
fs
push
scas
or
into
jb
bound
cld
scas
xor
out
je
sti
push
hlt
adc
or
or
mov
sub
mov
mov
fidiv
call
in
les
stos
scas
xchg
dec
jmp
jge
xchg
idiv
and
(bad)
mov
inc
xor
pop
out
fnstsw
outs
scas
pop
cmp
ja
mov
out
in
jecxz
idiv
and
(bad)
mov
inc
mov
es
into
mov
mov
enter
sub
mov
push
and
arpl
aaa
(bad)
and
repnz
pusha
rcr
(bad)
ret
mov
adc
sub
mov
lods
scas
jae
mov
popa
jae
jg
xor
mov
mul
mov
loope
outs
pop
std
adc
xchg
lahf
xor
cdq
push
mov
fstp
adc
xlat
scas
sbb
call
mov
fnsave
jge
(bad)
pop
pop
loop
mov
mov
cs
sub
jno
pusha
xchg
pop
mov
jo
mov
push
xchg
cs
leave
xchg
in
fistp
imul
bound
jmp
loop
icebp
jmp
mov
repz
mov
sub
hlt
lahf
mov
sbb
je
fist
mov
cmc
retf
xor
sbb
push
cmp
dec
ins
dec
xchg
aam
ret
sbb
add
shl
pushf
shrd
cdq
mov
test
fadd
(bad)
lock
add
ret
das
mov
pop
call
paddb
inc
dec
aas
dec
popf
sub
inc
dec
fidivr
xchg
cmp
fcmove
and
neg
sbb
jmp
mov
mov
and
mov
adc
popa
cdq
loope
add
xchg
jle
imul
in
rcl
and
fsubr
cdq
ret
sar
push
sbb
imul
(bad)
xor
inc
mov
iret
xchg
inc
mov
mov
fwait
adc
je
adc
lahf
sbb
addr16
or
and
test
repnz
in
adc
cmps
aaa
mov
shr
shl
retf
or
icebp
mov
imul
retf
out
sti
and
and
scas
pop
into
es
mov
and
mov
call
pop
ins
jne
mov
sti
pop
iret
addr16
fisub
mov
icebp
dec
fdivr
addr16
and
fcom
cmp
push
(bad)
jmp
push
mov
stc
adc
xchg
shl
fucom
stc
(bad)
sti
fadd
in
sub
push
aas
fst
jmp
pop
jne
adc
mov
std
dec
mov
push
mov
cmp
cmp
adc
push
leave
ds
mov
mov
push
push
shr
jmp
sbb
test
fnsave
dec
push
push
sbb
sub
gs
fdiv
push
pop
enter
test
push
jl
ins
int
cdq
mov
ins
out
fs
push
pop
mov
mov
sti
das
mov
(bad)
sbb
mov
add
clc
sbb
dec
call
pop
imul
idiv
dec
in
mov
sbb
dec
or
push
inc
call
mov
outs
dec
jb
repnz
pop
dec
add
in
xchg
xor
fdiv
mov
add
scas
outs
ds
fcmovne
mov
sti
mov
gs
iret
lahf
sub
fistp
std
mov
pop
movs
pop
sub
retf
repnz
adc
xor
pop
lock
inc
in
loopne
outs
fisttp
sbb
xlat
adc
xor
bound
or
cmc
pop
mov
fcomp
mov
xor
retf
xchg
mov
add
lods
in
sbb
fwait
int3
stos
xor
cwde
aam
mov
dec
loope
rcl
(bad)
je
xchg
mov
cmps
and
int
(bad)
cli
ds
leave
cmp
push
push
inc
jecxz
aas
repz
daa
retf
es
inc
ficom
daa
push
add
out
push
loopne
xchg
imul
lds
pop
and
test
icebp
jl
or
pusha
push
jns
(bad)
dec
mov
movs
jecxz
repnz
push
xlat
and
in
call
scas
inc
xchg
xchg
sub
jmp
sub
(bad)
int
dec
loope
xchg
pop
in
sub
mov
ins
push
ins
and
popa
jne
mov
test
fwait
ror
jmp
nop
lock
push
(bad)
or
ds
xchg
adc
cmc
pop
dec
xor
fs
cdq
push
ret
dec
sbb
lds
mov
int3
adc
neg
push
fcmovu
inc
dec
and
mov
jb
mov
xor
gs
push
mov
out
cwde
cmp
ins
popf
sbb
push
stos
push
(bad)
aad
inc
push
mov
shr
into
in
push
adc
test
sbb
mov
mov
jo
lock
sbb
ror
sbb
cld
loopne
call
dec
and
or
sub
sbb
pushf
cmc
or
push
sub
fcomi
jne
shl
push
push
data16
inc
push
mov
(bad)
(bad)
dec
push
add
push
(bad)
xchg
xchg
rcr
jge
test
gs
jl
pop
adc
xchg
push
push
ds
jmp
mov
fstp
scas
fld
inc
stc
mov
icebp
dec
lods
cmp
arpl
loope
or
jge
mov
ins
sub
dec
into
cmp
(bad)
icebp
loope
lds
mov
pop
mov
ja
mov
jns
movs
cmp
movs
xchg
xlat
mov
into
mov
inc
mov
(bad)
scas
sar
into
or
je
gs
jae
mov
inc
das
out
addr16
mov
jge
cli
xchg
rcr
pop
das
or
repnz
xlat
das
out
ret
pusha
add
das
push
cs
inc
jmp
xor
stc
pop
in
pop
mov
adc
imul
add
pmaxub
hlt
sbb
fmulp
cdq
jp
adc
hlt
mov
int3
dec
or
call
sbb
mov
cmp
repz
push
leave
retf
clc
xor
sbb
addr16
jae
xlat
xchg
mov
fidivr
test
dec
in
aas
mov
scas
adc
sbb
pusha
fs
retf
adc
nop
iret
cwde
mov
push
xchg
cli
jno
pop
cmps
movs
imul
dec
test
ror
sbb
xor
stos
dec
add
mov
sub
sub
mov
push
sbb
pop
fnstcw
jmp
push
int
sti
pop
sub
push
fwait
pop
rcr
icebp
ds
dec
mov
ins
pop
add
jp
shl
outs
inc
sub
das
cmp
(bad)
lock
out
adc
dec
jae
addr16
inc
mov
push
aaa
fisubr
adc
mov
xor
pop
retf
mov
xor
lods
push
mov
mov
shl
les
xor
jne
fisttp
nop
mov
shl
enter
movs
pop
fimul
(bad)
mov
cmp
xor
out
repnz
xor
sub
mov
cmp
not
stc
jbe
cmp
(bad)
imul
retf
xchg
inc
dec
jno
sbb
inc
xor
xchg
or
jo
adc
pop
std
sub
add
and
jbe
xor
sbb
or
popa
pop
mov
movs
sbb
mov
adc
in
test
jne
arpl
ja
dec
cmp
(bad)
fisub
push
xor
mov
pop
pop
je
mov
mov
mov
adc
cdq
or
iret
out
xor
xor
inc
std
mov
mov
cmp
fbstp
or
cmp
fiadd
aam
cmps
pop
jae
sbb
daa
(bad)
add
xor
xchg
test
cmc
aas
mov
int3
icebp
xchg
aas
mov
fcom
cmp
pop
or
add
cld
mov
push
sub
ret
aaa
or
xchg
and
iret
pop
xchg
test
sti
xchg
xchg
cs
push
and
sub
imul
or
out
xor
xchg
inc
fisub
xor
lods
inc
ins
dec
push
jne
dec
sbb
xchg
pop
xchg
push
xchg
mov
mov
test
loop
mov
cli
mov
retf
xchg
jae
lahf
add
stc
xchg
mov
or
fwait
pop
sbb
arpl
in
leave
mov
push
ficom
push
iret
pop
mov
leave
xchg
ja
loopne
xor
xor
xchg
neg
xor
xlat
sbb
aas
aas
fwait
addr16
jns
add
pusha
add
push
jmp
xlat
and
(bad)
lahf
aas
dec
and
and
sbb
addr16
lock
xor
jmp
pop
cli
mov
out
mov
push
mov
jmp
xchg
das
stos
pop
pop
aaa
outs
adc
push
inc
inc
ins
leave
mov
rol
cmp
daa
and
dec
clc
cld
fs
adc
sbb
nop
daa
push
(bad)
inc
jge
mov
mov
call
xchg
in
hlt
mov
pop
push
and
mov
ss
xchg
ficomp
cdq
dec
fcmovbe
xchg
enter
dec
jbe
jmp
cmp
add
lods
push
movs
pop
lods
xchg
pushw
outs
(bad)
mov
and
fs
xchg
jecxz
or
cmp
js
cmp
lock
cmp
out
fdivr
das
jecxz
jnp
imul
xchg
pop
aaa
js
repnz
jne
xchg
in
pop
std
xchg
jmp
sti
xor
std
shl
test
retf
add
mov
jmp
out
imul
mov
adc
xor
jl
sbb
adc
in
mov
ficom
(bad)
push
cdq
arpl
or
icebp
mov
sbb
retf
pop
arpl
clc
xchg
fs
mov
pushw
cli
arpl
std
ror
fs
iret
and
aaa
jl
ret
xor
xchg
iret
push
mov
stc
mov
retf
mov
cmc
ret
shr
and
adc
dec
mov
scas
mov
and
xor
sbb
fmul
and
sbb
cmp
xor
and
jg
push
mov
aas
scas
push
frstor
retf
xor
out
dec
push
push
ins
addr16
jno
push
mov
xor
ins
pop
in
add
pushf
mov
test
jmp
dec
stos
jne
xor
pop
adc
xlat
pop
ror
cdq
and
or
mov
adc
mov
sbb
cdq
popf
mov
ficomp
arpl
jmp
mov
push
dec
lds
loope
sbb
aam
in
mov
pushf
sar
sub
pop
mov
popa
and
cmp
inc
sbb
je
frstor
xor
lods
mov
jmp
xchg
out
or
sbb
das
mov
aam
(bad)
jmp
sbb
outs
mov
sahf
pop
mov
inc
push
push
fucomp
lahf
sti
dec
adc
cdq
int
mov
mov
inc
xor
xor
aad
fs
imul
push
mov
std
outs
pop
aas
sub
pop
and
out
pop
cmp
jmp
nop
popa
imul
xchg
pop
hlt
pop
mov
push
(bad)
mov
xor
jb
icebp
mov
ja
mov
sub
fwait
mov
jnp
jb
stos
mov
sbb
xlat
jb
aaa
ja
repz
jae
mov
fistp
xchg
outs
pusha
and
pop
shl
xchg
hlt
sar
shl
rcl
ror
es
imul
jg
add
arpl
mov
pop
iret
ret
xchg
cld
cmp
push
adc
mov
xlat
jne
test
into
fmul
mov
sub
into
in
popa
fs
sbb
call
xor
pusha
out
mov
inc
push
xor
call
inc
push
push
pushf
xchg
(bad)
test
inc
lds
sbb
lds
dec
fild
cmc
call
mov
leave
sar
stos
out
inc
mov
push
aaa
stc
and
mov
test
ror
iret
popf
loopne
xor
lea
cwde
or
arpl
call
cmps
jle
xor
mov
xchg
ror
jge
cmp
pop
pop
dec
jo
ret
mov
into
mov
call
cwde
xlat
mov
xchg
ins
jge
xchg
js
out
mov
stos
test
in
outs
lahf
pop
push
les
xor
(bad)
jno
inc
mov
xchg
dec
and
push
mov
ja
jmp
cwde
jp
sub
(bad)
(bad)
int
pop
or
cmp
dec
sub
ja
xchg
rcl
ficom
cmp
out
mov
test
mov
loope
jo
rcl
mov
dec
inc
mov
hlt
inc
jle
mov
ss
xor
adc
addr16
rol
or
ss
fs
jecxz
ss
div
pop
mov
adc
aaa
fs
cmp
dec
push
and
call
punpckhdq
aam
or
adc
ins
outs
mov
sub
push
inc
jge
adc
mov
add
xchg
sub
sub
fcomp
ds
enter
dec
inc
xchg
pop
(bad)
out
cs
and
stos
retf
push
fimul
xchg
iret
jb
mov
pop
jae
stos
jnp
jae
sti
xchg
cmp
mov
sbb
out
scas
adc
jns
rol
icebp
gs
sbb
pop
daa
sbb
cld
adc
les
outs
(bad)
and
leave
mov
jno
scas
fcom
push
movs
shl
rol
out
mul
(bad)
inc
jge
inc
nop
mov
mov
fst
cmp
sar
inc
sbb
mov
int3
add
popa
(bad)
cld
push
addr16
xchg
stos
jns
cmp
sub
imul
jb
sti
(bad)
cmp
mov
sbb
inc
rol
dec
aam
xor
dec
xor
xor
sub
stos
jo
xchg
xor
push
sbb
sbb
daa
jbe
mov
test
dec
pop
sub
out
dec
and
(bad)
lods
and
pop
add
xor
test
ins
fisttp
sbb
sbb
ss
ret
mov
add
or
arpl
out
fiadd
arpl
lahf
addr16
popa
dec
xchg
push
stc
xchg
enter
sbb
xor
test
pop
jp
lea
imul
pop
lock
sub
rol
int3
inc
rcr
xor
dec
xor
mov
ins
pop
rol
cmc
push
mov
mov
popa
mov
imul
(bad)
in
lea
ret
test
push
jecxz
dec
not
cmp
push
mov
je
pop
cmp
xchg
ficomp
(bad)
push
std
adc
popa
xchg
outs
aad
test
stos
xchg
bound
mov
cld
mov
dec
mov
rol
std
ja
outs
jne
mov
jb
ror
mov
lods
shl
aam
sub
shl
mov
dec
mov
mov
xor
retf
mov
ins
jecxz
(bad)
mov
lahf
push
inc
rcr
and
cli
mov
mov
fist
xchg
shr
cmp
mov
out
mov
jae
jle
mov
repz
dec
clc
inc
idiv
pop
xchg
rol
or
mov
lds
popa
xchg
jge
aad
push
cld
jl
loopne
int3
xchg
sbb
adc
clc
into
cwde
lahf
and
ins
leave
mov
jbe
fimul
pop
mov
mov
dec
gs
pop
sub
pop
call
hlt
jg
imul
int
mov
outs
sub
pop
mov
daa
fs
or
sbb
push
sub
sub
pushf
addr16
xor
jns
fnsave
adc
in
lock
imul
or
cmps
dec
imul
and
out
or
sub
or
sub
(bad)
push
cmp
les
mov
imul
jge
icebp
and
push
ds
jno
outs
mov
jno
outs
fild
(bad)
call
retf
popf
movs
pop
mov
fimul
imul
ret
imul
mov
(bad)
pop
dec
popa
ficomp
xchg
popa
mov
aaa
dec
inc
lds
cdq
pop
xor
std
stc
or
push
xor
iret
loopne
rcr
enter
mov
cmp
movs
(bad)
xchg
dec
loope
iret
sti
ret
sub
scas
jle
fnstsw
sub
pop
neg
and
nop
ins
inc
push
test
cmps
jl
or
mov
sbb
xchg
xor
out
call
inc
shl
cli
lds
mov
xchg
jbe
sbb
mov
jl
aam
push
push
lods
sti
data16
fcmove
xchg
mov
das
lahf
dec
cmp
cmp
sub
shl
ins
push
sbb
pop
cmp
jmp
sub
in
jmp
cs
fldcw
(bad)
outs
or
xlat
test
pop
fldcw
addr16
jp
xor
into
xchg
emms
out
sbb
xchg
adc
(bad)
stc
sbb
in
ds
mov
cmp
cwde
push
mov
out
push
jmp
popf
les
pushf
push
aad
inc
(bad)
int3
xor
mov
or
bound
icebp
add
mov
mov
scas
daa
jnp
xchg
scas
daa
and
stc
dec
aas
and
inc
and
cmps
xor
mov
loope
imul
fs
xchg
fs
mov
pop
loope
xor
cmp
sbb
mov
inc
push
or
sbb
xor
xor
addr16
inc
sub
cmps
dec
xor
popa
xchg
push
fadd
xor
fidivr
mov
mov
test
sub
repz
loope
cmps
dec
mov
pop
pop
xchg
pushf
xchg
mov
xor
jp
arpl
push
retf
sti
stos
jne
adc
cmps
sbb
es
add
lahf
xor
sub
inc
leave
mov
repz
or
pop
sub
ins
leave
sti
mov
and
inc
jbe
push
pop
push
into
mov
shr
addr16
(bad)
call
retf
xor
lods
jo
xor
cmp
push
sub
lds
ucomiss
pop
aad
push
fwait
sub
and
add
int3
mov
shl
into
popf
cmps
test
(bad)
movs
push
sub
inc
fwait
inc
popa
sub
imul
add
pop
clc
sbb
repnz
stc
add
mov
inc
mov
mov
push
gs
pop
add
add
in
cmp
mov
lock
movs
pop
or
sbb
xor
popf
dec
sbb
icebp
fcomp
test
fnstsw
cmp
sub
outs
pusha
push
pop
test
out
mov
dec
xchg
fistp
mov
out
rcr
sti
shl
aas
sbb
mov
test
and
sar
sub
retf
fidivr
test
cmc
jp
adc
outs
jbe
je
(bad)
fld
cmp
idiv
sti
iret
pop
mov
lock
fs
sub
(bad)
pushf
mov
inc
cmp
ins
inc
xchg
leave
cmp
jle
jge
and
jmp
inc
shl
rcr
push
nop
xchg
int3
sub
jg
mov
mov
xchg
leave
add
add
pusha
ret
icebp
jmp
dec
rol
sahf
rol
and
dec
clc
movs
(bad)
jo
test
push
das
sub
ret
std
shl
out
jb
adc
pop
icebp
jge
std
loopne
mov
ja
stos
retf
(bad)
jle
adc
pop
jmp
loop
stos
mov
je
enter
add
add
adc
xchg
inc
clc
add
mov
pop
lods
pop
sub
nop
mov
stc
ins
enter
adc
push
stc
and
test
dec
inc
pop
(bad)
leave
addr16
mov
sti
stc
xor
add
sahf
das
inc
mov
inc
pop
jp
mov
aas
jnp
test
pop
int
sar
mov
xor
daa
mov
inc
shl
aas
stos
hlt
or
je
mov
inc
jecxz
mov
mov
mov
sti
and
bound
in
sub
mov
cdq
sub
fiadd
pop
fadd
sbb
ss
idiv
in
jbe
test
lods
add
adc
xchg
jmp
ret
mov
cmp
nop
sbb
xchg
lods
mov
cmps
cmp
aas
mov
jp
mov
scas
jbe
int
sbb
pop
in
and
aad
xchg
add
and
jmp
sub
scas
call
push
jb
bnd
mov
cmc
repz
imul
and
mov
xchg
dec
dec
stc
inc
(bad)
hlt
xor
xlat
xchg
jnp
in
and
popa
jecxz
add
mov
iret
retf
xor
cs
xor
jle
xor
jbe
fcom
push
scas
cmc
cdq
test
out
sub
es
ds
ret
mov
jp
fidiv
pop
or
push
push
adc
or
dec
xor
jecxz
add
fdiv
push
arpl
jmp
outs
repz
lahf
and
xor
test
jle
sub
jle
movs
mov
push
mov
and
jle
je
mov
dec
repz
push
in
hlt
(bad)
pop
mov
dec
lds
xchg
push
inc
pop
adc
sbb
or
call
pop
dec
jne
mov
cmc
jecxz
mov
out
mov
sub
popf
gs
inc
cmp
adc
cld
cld
mov
mov
cmc
outs
js
daa
pop
mov
aad
(bad)
cmp
arpl
pushf
xor
jmp
data16
jb
push
xchg
xchg
(bad)
inc
add
outs
jg
mov
fwait
push
mov
xor
pop
adc
ins
jmp
pop
jbe
out
dec
popf
cmp
inc
lock
and
xchg
cs
jnp
or
cwde
inc
(bad)
rcr
lahf
xor
pop
icebp
dec
inc
mov
rol
xchg
xor
imul
mov
aad
cmps
jmp
psubusb
mov
mov
(bad)
ss
push
cmp
in
imul
idiv
and
fcom
xchg
and
adc
pushf
mov
fs
push
outs
inc
add
add
jle
in
adc
je
jno
mov
shr
adc
jb
cs
imul
aad
pop
adc
sar
cmp
pusha
cmp
mov
cwde
test
retf
shl
hlt
scas
fmulp
test
mov
lods
mov
or
loopne
mov
scas
jns
xchg
loope
in
mov
arpl
mov
mov
rcr
cmc
hlt
adc
(bad)
movs
test
aas
inc
les
fstp
adc
mov
or
dec
sar
mov
adc
into
xor
xor
add
cmp
adc
dec
mov
jge
ret
idiv
sub
cmp
pusha
xchg
movs
fild
(bad)
sar
lods
xchg
mov
xchg
jne
xchg
(bad)
cmp
bound
bound
mov
movs
push
adc
out
jb
ret
(bad)
cmc
scas
iret
aam
inc
cmp
dec
add
cmp
push
inc
data16
push
dec
mov
or
xchg
mov
cmps
test
sbb
cmp
jne
loope
jne
mov
and
inc
xchg
(bad)
cmp
rcr
(bad)
sbb
mov
ds
inc
loopne
cmp
jp
xor
mov
sbb
add
push
shr
pop
int
push
(bad)
out
ds
je
lahf
aam
jg
bnd
jne
mov
xchg
(bad)
fs
add
ror
or
mov
jnp
jae
xchg
mov
dec
jmp
push
push
xchg
call
inc
fnsave
mov
cli
in
cmp
ror
mov
push
(bad)
scas
push
retf
sbb
cmc
mov
mov
je
out
jno
cmp
les
pop
dec
push
pop
enter
pop
inc
sub
pop
pop
add
nop
and
push
jbe
into
and
hlt
and
mov
das
cmp
hlt
jae
aaa
(bad)
(bad)
sub
cli
mov
dec
pop
sub
mov
imul
cmp
xor
jmp
add
mul
shl
jp
in
ds
ins
jne
jle
cmp
xlat
call
mov
(bad)
fadd
mov
out
lea
ss
inc
fsubrp
out
mov
jns
jmp
jmp
ins
repz
and
sahf
sub
and
jmp
push
int3
iret
adc
adc
lock
cld
and
ret
cmp
loopne
int
dec
jecxz
push
sbb
fcomp
inc
addr16
dec
xchg
mov
loop
cmp
xor
(bad)
scas
dec
xor
fisubr
int3
and
jns
pop
nop
xchg
jle
sbb
js
push
sbb
or
nop
xchg
adc
test
(bad)
xchg
push
loopne
push
adc
test
call
xor
(bad)
mov
sub
test
lock
xchg
dec
dec
push
stos
cdq
push
pop
sbb
mov
jp
js
push
push
leave
push
sti
pop
dec
int
aas
mov
shl
sub
popf
adc
scas
xchg
xor
in
aam
dec
fist
in
sbb
cmp
rcr
cmp
pop
adc
mov
mov
out
mov
jo
out
sahf
xchg
xchg
jl
into
cmp
xor
sar
ret
jo
daa
(bad)
cmp
ins
icebp
mov
xchg
xchg
ficomp
mov
or
addr16
into
xlat
or
mov
loop
jbe
mov
test
aam
push
xchg
mov
mul
leave
int
jl
std
and
xchg
dec
jmp
dec
ds
(bad)
scas
jbe
fst
scas
push
adc
and
jmp
fmul
popf
ins
pop
mov
shl
fadd
fistp
loope
pop
xchg
ins
arpl
adc
cmp
or
xchg
jmpw
inc
mov
mov
in
mov
pop
scas
jnp
dec
out
iret
lods
cwde
ds
push
test
dec
pop
stc
add
aad
adc
xchg
scas
fwait
dec
adc
add
xchg
cmp
ins
inc
jge
les
in
mov
push
cmp
xor
sub
aas
adc
add
aaa
dec
scas
cmp
dec
arpl
pusha
adc
sub
enter
cmp
push
mov
retf
cmp
iret
call
outs
or
mov
loope
cwde
enter
adc
add
inc
scas
mov
pop
std
mov
xchg
fwait
js
daa
mov
sbb
push
push
cmp
pushf
xor
int3
cmp
lods
cdq
sbb
sub
push
cmp
xchg
pop
mov
fstp
fisttp
dec
jmp
dec
adc
or
(bad)
jb
jmp
inc
jne
jp
push
cs
ins
jecxz
mov
jb
pushf
xchg
int
jbe
xchg
(bad)
cwde
dec
movs
cmp
xlat
push
jmp
pusha
push
repnz
jns
xchg
jg
mov
cmps
test
mov
xchg
jle
rcr
push
or
xchg
mov
clc
aad
xchg
pop
xlat
popa
cld
pop
(bad)
jecxz
xchg
pop
adc
or
jmp
xchg
out
add
(bad)
jb
jbe
pop
rol
jge
mov
mov
js
xchg
xchg
mov
mov
inc
mov
push
fs
out
jnp
cmc
sbb
mov
inc
enter
arpl
jle
fldcw
pop
pop
stc
sbb
jmp
sbb
aas
xchg
pop
arpl
stos
std
push
cmp
jo
add
mov
movs
sbb
inc
(bad)
and
retf
push
mov
push
mov
call
mov
jmp
(bad)
out
push
dec
test
sub
and
cli
jmp
push
mov
sbb
add
mov
mov
jg
jl
int3
xlat
xor
mov
fistp
adc
xchg
test
(bad)
xlat
or
(bad)
or
jo
jecxz
out
loop
mov
xchg
and
sbb
(bad)
cs
inc
mov
mov
out
gs
pop
inc
jae
test
jmp
sbb
dec
lahf
repz
jmp
pusha
adc
jp
loop
sub
jmp
sahf
xor
fbld
sbb
arpl
in
jnp
scas
lods
icebp
mov
sbb
lahf
out
mov
mov
call
pop
sub
push
aas
ss
jmp
add
mov
lds
cdq
rol
ret
lds
ret
xchg
iret
popa
hlt
sub
mov
out
sub
(bad)
test
aad
jnp
addr16
dec
jo
retf
jl
repnz
loope
add
dec
xchg
shl
adc
fwait
add
pop
fidiv
inc
jae
popa
pop
aaa
arpl
dec
mov
aas
fdiv
xchg
sar
imul
mov
cld
jl
and
hlt
repnz
and
mov
out
aad
xchg
test
push
iret
aad
shl
pop
jns
fdivr
pop
sub
sbb
adc
(bad)
mov
sub
push
inc
into
divps
xchg
lock
pop
rcl
jp
std
add
jae
or
(bad)
mov
hlt
pop
leave
and
or
xchg
mov
jo
pop
leave
cs
pop
sbb
arpl
mov
mov
aas
popa
retf
jecxz
into
add
and
repz
pop
cli
fiadd
sahf
push
das
dec
mov
daa
lahf
and
cli
fnsave
jno
fmul
cmp
mov
push
fldlg2
pushf
sti
retf
push
mov
sub
shl
adc
adc
xor
sbb
sbb
add
sbb
cld
data16
fcomp
jmp
mov
outs
callw
mov
retf
mov
retf
mov
jb
sub
movs
jne
jb
pop
dec
inc
mov
xchg
lods
dec
pop
clc
test
sbb
add
movs
dec
cdq
hlt
inc
add
cmp
es
mov
fldcw
leave
rcl
cmp
add
(bad)
imul
cs
(bad)
scas
imul
icebp
out
test
lds
sbb
xchg
ja
add
iret
cmps
shr
mov
pop
bound
adc
mov
sub
push
xchg
iret
(bad)
addr16
test
pop
lea
call
sti
or
push
ja
test
pop
and
std
push
lods
retf
mov
rol
dec
aas
rcl
fcomp
shl
ficom
cmp
sbb
ret
cmp
nop
nop
jnp
sbb
je
neg
cmp
sahf
(bad)
loope
add
push
cmp
push
(bad)
lock
sbb
div
push
popa
sbb
jl
addr16
xlat
mov
std
xchg
test
and
movs
shl
shr
xchg
ins
loop
cmp
fcom
scas
cmps
jmp
adc
(bad)
cld
xchg
jg
push
push
sbb
mov
jb
(bad)
mov
mov
enter
mov
pop
out
ds
cli
loope
and
std
fst
push
clc
inc
popf
xchg
pop
pop
add
arpl
(bad)
mov
ret
idiv
xor
ins
jbe
jae
mov
pop
mov
mov
add
inc
add
and
and
test
cmp
xchg
not
inc
cmp
leave
add
lds
sub
ficomp
dec
pusha
(bad)
xor
mov
sub
mov
div
jp
jge
push
popa
aas
xchg
jbe
dec
adc
sbb
out
pushf
mov
mov
cld
daa
daa
xchg
ss
(bad)
jmp
ffreep
pop
mov
imul
(bad)
xor
pushf
push
test
sar
xchg
xor
sub
sub
pop
inc
cli
icebp
or
cmp
sub
jge
pop
ret
movs
fist
cmp
loop
mov
movs
xchg
push
aam
add
aaa
mov
das
jg
inc
inc
inc
mov
stc
mov
push
and
sahf
bound
aad
jb
jle
inc
pop
arpl
jbe
iret
add
retf
cmps
lahf
xchg
pop
inc
loope
jne
cmps
cmp
sar
test
hlt
mov
dec
cmp
in
jl
(bad)
adc
or
jmp
jns
pop
ret
jge
xchg
sbb
loopne
xchg
pushf
test
mov
mov
sbb
jp
out
push
(bad)
data16
out
and
jns
or
test
pop
cmps
rol
xchg
push
mov
(bad)
adc
and
cdq
cld
stos
push
fnstsw
jg
pop
cmps
sub
push
test
push
xchg
xchg
hlt
popa
imul
fs
jmp
mov
loopne
cli
in
xchg
cs
sbb
push
lods
cmc
sar
cdq
dec
cmp
mov
aas
in
(bad)
lock
cmps
frstor
dec
and
leave
pop
sbb
mov
and
and
add
mov
fistp
sbb
stc
sti
nop
mov
xlat
test
or
sbb
and
xchg
mov
icebp
add
and
fcomp
iret
ret
dec
fstp
mov
outs
xchg
test
cmp
movs
add
std
dec
pop
sbb
add
mov
dec
and
jno
xchg
sub
lea
hlt
mov
leave
sbb
xor
outs
fadd
dec
das
jo
jmp
repnz
inc
ins
ficom
stos
and
mov
xchg
xchg
stc
repz
fwait
mov
iret
dec
mov
cld
retf
cmovne
std
iret
xlat
xor
or
ret
ror
mov
and
push
mov
lea
je
call
mov
and
ins
cmps
jne
aas
mov
push
fld
cmp
add
in
shl
mov
sar
aas
call
mov
inc
cmp
pop
(bad)
mov
mov
and
retf
jno
mov
cwde
gs
sub
jle
push
sub
jne
xchg
or
or
imul
mov
mov
jl
push
ins
jge
and
mov
push
cmps
scas
scas
jle
jb
adc
dec
mov
icebp
dec
xchg
rcl
pop
into
sub
jmp
(bad)
fld
mov
jge
fldenv
addr16
daa
icebp
fstp
fucomip
push
mov
out
leave
push
push
and
inc
mov
ins
mov
aaa
sbb
stos
mov
xor
addr16
cs
cmp
dec
adc
xor
(bad)
leave
fyl2x
fwait
sub
retf
push
add
movs
xor
sub
leave
fchs
enter
and
fldenv
nop
inc
and
jg
icebp
sti
mov
rcl
cmp
fisttp
sbb
mov
ss
or
cld
call
arpl
imul
call
xor
sbb
add
push
mov
inc
arpl
push
popa
outs
pop
pop
inc
add
adc
fnstenv
mov
call
fcom
mov
(bad)
clc
bound
aas
aas
les
out
mov
imul
mov
bndldx
and
inc
inc
hlt
in
aas
call
test
jecxz
loopne
xor
xchg
jmp
cs
dec
add
dec
xor
sbb
push
(bad)
push
aas
bound
cmp
out
jg
pop
int
jg
add
fwait
movs
mov
dec
repnz
adc
hlt
iret
es
and
(bad)
sti
or
xor
test
lods
lea
loopne
movs
or
pop
mov
mov
cli
pop
cmp
fst
push
fist
push
shr
(bad)
out
retf
pop
push
out
xor
cmps
cmp
xchg
cwde
and
mov
sub
and
popa
pop
pop
arpl
push
push
in
sahf
inc
xchg
inc
int
(bad)
or
mov
dec
dec
dec
sbb
in
retf
xlat
mov
mov
or
push
test
and
or
cmp
loop
sbb
mov
sbb
cs
mov
lea
mov
adc
sbb
imul
mov
(bad)
ffreep
add
imul
mov
fiadd
out
xor
mov
inc
push
cwde
call
jb
lss
or
cmp
push
ret
xor
sub
scas
add
xor
sbb
and
(bad)
sti
shr
sti
xchg
sub
out
dec
aaa
xlat
imul
adc
or
dec
sbb
(bad)
jle
sbb
mov
xor
pop
stos
in
cmps
dec
popf
lock
in
jg
cmp
mov
out
mov
test
pop
lds
outs
xlat
pushf
xchg
push
jmp
gs
ss
jbe
nop
test
sbb
lock
pop
or
stc
cld
aaa
movs
add
mov
pop
test
(bad)
addr16
icebp
pop
ss
pop
retf
sar
out
or
repnz
push
or
add
jle
repz
cmp
in
adc
push
xor
mov
xchg
push
sbb
ret
in
push
cli
xchg
aaa
push
pop
add
jecxz
pop
inc
jno
in
pop
sti
repnz
cs
cld
mov
adc
into
popa
fcomp
(bad)
sbb
call
jg
jecxz
inc
int
dec
outs
cli
mov
ror
jg
test
ficom
mov
sub
lods
test
jmp
imul
imul
out
inc
lea
mov
jns
mov
mov
stos
mov
mov
int3
jle
cmp
mov
push
xor
xchg
dec
cli
jmp
and
xchg
shl
add
cmps
adc
lock
scas
mov
std
cmp
jmp
aaa
sub
mov
push
pop
mov
and
mov
dec
cld
inc
in
and
lods
mov
aaa
outs
cmc
aad
jnp
push
adc
(bad)
in
iret
fsubr
dec
sar
jecxz
jecxz
sbb
dec
fs
(bad)
enter
test
xor
std
call
dec
not
mov
dec
pop
sub
push
mov
mov
stos
dec
sbb
pop
mov
stos
jbe
cmp
cmc
push
adc
pop
mov
(bad)
push
xor
push
popf
popf
cmps
pop
div
(bad)
fild
aaa
mov
inc
mov
daa
popa
out
je
sub
jns
pop
shl
push
aaa
lods
retf
inc
dec
or
in
pop
xor
dec
repnz
cmp
addr16
hlt
push
sbb
lea
pop
arpl
push
push
imul
ret
test
cmc
cwde
dec
addr16
retf
mov
xchg
in
push
movs
lock
scas
mov
sbb
cmp
dec
arpl
daa
cmp
aas
int3
js
imul
mov
repnz
mov
clc
stos
add
dec
sbb
popa
pop
mov
sub
pushf
in
sub
jmp
sub
mov
loop
adc
jno
sbb
(bad)
dec
mov
mov
inc
(bad)
je
mov
cmp
mov
mov
ins
pusha
xchg
ret
sbb
(bad)
(bad)
leave
mov
ss
arpl
cs
inc
aas
cmp
lock
mov
nop
std
imul
mov
inc
clc
xchg
idiv
addr16
iret
push
adc
pop
call
lock
or
imul
(bad)
jno
std
push
and
call
xchg
data16
xor
imul
outs
xchg
mov
rol
stos
xor
test
test
into
inc
push
lods
les
sub
xchg
fiadd
ds
cmp
test
arpl
repnz
inc
outs
mov
inc
pushf
xchg
js
ss
add
pop
mov
dec
sub
push
mov
ret
addr16
bound
xchg
or
push
movs
cmp
je
cmp
test
push
in
dec
and
mov
jecxz
add
fcmove
ror
add
jg
inc
shl
sbb
mov
dec
cmc
and
arpl
popf
data16
push
sahf
scas
push
pushf
xor
push
jne
ss
or
cmp
sbb
and
mov
js
or
fdivr
ficom
idiv
mov
fsub
or
outs
mov
push
ins
rol
fisubr
cmp
xchg
mov
jle
scas
fsub
pop
imul
sub
es
enter
(bad)
in
jg
mov
hlt
cmps
mov
mov
mov
xor
sbb
pop
lds
loop
(bad)
dec
jne
push
xchg
scas
and
ss
ficom
retf
ret
vcvttsd2si
pop
and
xor
ss
mov
adc
dec
and
push
jge
push
scas
addr16
dec
shr
loope
in
cmps
fmul
shr
inc
adc
sar
sahf
cmp
inc
push
jl
inc
int3
sar
inc
fmul
pop
fwait
adc
out
ret
jae
mov
icebp
jno
lods
cwde
jo
nop
xlat
sbb
xchg
push
loope
out
adc
arpl
div
aaa
std
cmp
ds
pop
fstp
jnp
leave
cmp
jmp
in
mov
xchg
or
mov
dec
mov
stc
mov
je
stos
lds
pop
mov
mov
jecxz
lea
cmps
mov
stos
arpl
mov
mov
retf
xchg
call
push
mov
pop
cld
cdq
push
mov
cmps
iret
popf
imul
scas
adc
cmp
sub
jae
rol
pop
pop
out
and
(bad)
jns
dec
or
xchg
cmp
es
mov
or
cmp
div
shl
cmps
in
push
out
mov
sbb
jbe
nop
xchg
rcr
xchg
sbb
iret
adc
pop
jb
loope
fs
mov
(bad)
(bad)
loop
pushf
jmp
xlat
xchg
cmp
jg
ret
std
js
(bad)
mov
(bad)
js
mov
jno
mov
cwde
sbb
xor
push
jp
lea
cdq
stos
mov
jg
cld
int3
xor
mov
or
clc
aas
dec
dec
ds
sbb
cwde
mov
pop
into
mov
stos
shr
aaa
rol
cmps
pop
xchg
inc
mov
scas
loopne
shl
in
int
push
mov
repnz
add
adc
mov
stc
push
ds
push
fidiv
imul
stc
or
leave
fdivr
(bad)
ret
and
loopne
movs
dec
mov
pop
adc
hlt
jns
stc
cmp
lahf
cmp
cld
cld
mov
adc
cli
and
mov
(bad)
add
add
mov
rcl
sbb
xchg
(bad)
data16
out
or
fwait
shl
or
pop
cli
hlt
jg
cmps
inc
push
xchg
imul
imul
xchg
push
out
dec
xchg
ficom
xor
test
test
push
aad
sahf
stos
jmp
sbb
push
mov
fiadd
arpl
mov
outs
mov
inc
pusha
mov
or
stc
imul
push
xor
cli
and
fldcw
std
sub
jae
fiadd
in
out
fsub
(bad)
mov
mov
xchg
ins
js
daa
dec
mov
pop
inc
inc
inc
mov
jp
scas
test
jnp
cmps
jmp
cld
bound
stc
add
add
retf
jo
daa
fsub
movs
outs
mov
fidiv
sti
scas
stc
repz
fs
(bad)
fild
repz
xchg
sahf
imul
jmp
mov
js
imul
inc
push
cmp
shl
mov
or
sub
inc
pop
inc
sub
xlat
icebp
push
sbb
out
push
mov
push
mov
mov
sbb
cmp
sub
pop
jecxz
lds
mov
fistp
in
and
jecxz
adc
mov
adc
scas
push
pop
mov
sub
sub
int
int
add
int3
jae
ror
sub
adc
sbb
jge
mov
cmp
lods
in
shl
outs
xor
movs
or
xor
gs
pop
mov
int3
jo
hlt
xor
mov
lods
sub
fwait
out
test
ss
xchg
retf
push
ret
push
iret
mov
sbb
adc
jmp
sub
in
xchg
call
add
rcl
xchg
addr16
mov
cmps
std
fxch
cmp
pop
pop
jo
jo
pop
push
adc
jnp
(bad)
sbb
cld
fst
(bad)
mov
popf
xor
lods
pop
ret
leave
xor
xor
push
sahf
sub
mov
jbe
ja
jb
fist
mov
ror
js
push
in
sbb
(bad)
out
dec
in
push
mov
sbb
sbb
adc
inc
loop
aad
xchg
sbb
jbe
sbb
mov
jmp
or
xor
push
hlt
fwait
aas
inc
mov
jg
sti
push
mov
fst
sbb
adc
push
lea
adc
mov
int
lock
cmp
cld
mov
out
inc
inc
or
stos
(bad)
sbb
push
xor
es
dec
or
mov
jl
jle
scas
mov
ret
repnz
call
push
call
out
inc
out
jecxz
or
js
stc
mov
jl
retf
test
add
fidivr
adc
cmps
dec
mov
ss
test
ret
bound
xor
call
push
and
xor
popf
int3
pop
fdivp
dec
and
ror
arpl
mov
xchg
sbb
aaa
ds
push
xor
outs
fist
aas
push
out
call
sti
mov
mov
mov
dec
stc
inc
sbb
pop
push
cmp
mov
movs
dec
cmps
cmps
xchg
push
push
jle
fs
stos
push
inc
xor
sub
jne
push
psubusw
fadd
cwde
jmp
retf
out
(bad)
out
mov
out
mov
into
push
out
push
int3
add
movs
call
sbb
xchg
sar
movs
sbb
inc
ds
inc
inc
push
inc
pop
sub
cmps
repz
adc
cli
frstor
xor
enter
inc
or
scas
jle
cs
fadd
test
dec
xlat
mov
mov
(bad)
cmp
hlt
imul
stos
sar
jae
mov
push
jecxz
pusha
loope
xor
cmps
dec
sub
or
xor
push
xchg
and
cmp
stos
ins
shr
sar
or
cs
(bad)
adc
in
adc
stc
jo
pushf
and
mov
rcr
xor
adc
aad
xor
inc
cli
loope
mov
rcl
retf
call
cmp
xchg
inc
cmps
push
pop
sbb
repz
push
and
pop
jo
xchg
jle
fcomp
or
loopne
jge
pop
sub
cmc
cld
sbb
loopne
add
sub
dec
call
mov
sub
jno
xor
popa
iret
cmp
mov
int
ins
out
jae
and
inc
sbb
mov
add
inc
mov
xchg
lods
pop
jne
iret
sbb
shl
nop
pop
aaa
aas
xor
dec
add
cmp
fwait
mov
pop
cmc
lahf
xor
jg
sbb
out
cmc
mov
rol
out
add
hlt
rcl
sub
add
and
add
rcl
push
dec
pop
xchg
clc
in
push
out
mov
sub
cdq
push
cmp
and
cdq
std
add
dec
dec
popf
scas
cld
ror
push
xor
adc
pop
aad
sbb
mov
loopne
adc
jb
in
jmp
sub
mov
cmp
jnp
sub
mov
mov
add
shl
ds
mov
xor
retf
aas
inc
(bad)
fnstenv
and
xchg
cmp
mov
inc
int3
or
cmp
in
mov
ins
xlat
sbb
or
in
sar
iret
je
xlat
sbb
adc
sbb
in
add
xchg
sbb
int3
out
or
movs
and
rcr
xchg
pop
mov
shr
fisubr
fwait
imul
cs
xor
mov
mov
mov
push
xor
jecxz
cmp
aas
outs
je
or
repz
bound
pop
into
mov
or
mov
sbb
hlt
push
xchg
mov
clc
or
cld
sub
fs
daa
movs
push
inc
jmp
sub
jl
push
jbe
inc
jle
xor
adc
pop
jns
aas
inc
ret
and
sti
stos
adc
idiv
shl
push
cmps
push
jae
adc
rcl
fsubrp
movs
jb
dec
push
fisub
push
and
sar
and
sbb
push
aaa
mov
jae
sub
inc
cmp
jp
inc
mov
push
sar
xchg
jg
data16
jg
push
mov
push
or
(bad)
movs
pop
pusha
xor
repnz
vorps
mov
mov
int3
or
shl
push
(bad)
(bad)
mov
jnp
adc
sbb
test
jmp
nop
lock
out
(bad)
sahf
sti
test
fbld
mov
push
stc
cmp
sub
add
dec
add
add
test
lods
pop
sbb
adc
(bad)
fsubr
cmp
imul
pop
idiv
jns
std
test
out
loop
xor
mov
pop
loop
dec
in
jmp
inc
mov
mov
(bad)
sub
cli
not
pop
dec
js
mov
popa
pop
sub
mov
ins
add
pop
shl
dec
cwde
int
hlt
mov
mov
fild
cld
cld
fild
out
jge
cmp
mov
jge
sub
jecxz
sbb
sbb
in
(bad)
stc
or
in
loopne
arpl
mov
or
loope
rcr
or
jnp
cmp
xchg
fs
fnstcw
jge
fidivr
mov
std
stos
fsub
ror
sub
xor
jbe
imul
(bad)
stos
stc
and
fwait
sub
not
fcmove
push
pop
mov
mov
rcr
pop
clc
aas
loope
(bad)
das
mov
aas
ds
xor
lock
cdq
stos
out
pop
test
inc
xor
fidiv
xchg
add
out
push
push
mov
(bad)
push
or
push
and
mov
sti
sub
pop
lods
inc
idiv
jl
sub
or
inc
dec
mov
jmp
pop
add
mov
jecxz
jno
xor
mov
leave
mov
pop
scas
mov
(bad)
pop
dec
mov
(bad)
jg
(bad)
ror
(bad)
outs
cmps
mov
xor
mov
js
fmul
jg
shl
add
mov
test
test
xchg
jmp
lds
and
fdiv
push
vpunpckhdq
loop
cmp
sbb
cmps
das
(bad)
hlt
sub
pop
das
dec
inc
xor
aaa
out
push
mov
pop
mov
cld
ds
xlat
shr
mov
pop
test
in
push
add
xchg
sti
addr16
sub
push
add
scas
aas
fbstp
adc
nop
cli
jl
jp
jp
stc
js
std
mov
xchg
mov
jns
mov
sub
stc
xor
(bad)
popf
sbb
adc
ins
push
push
and
push
jne
js
inc
(bad)
es
sub
movs
adc
mov
cmp
rcr
sbb
jo
ret
in
call
sbb
and
out
adc
inc
dec
mov
pushf
stos
(bad)
mov
inc
popf
popa
sbb
sbb
ror
cmp
clc
lds
mov
sub
fcom
inc
mov
lahf
cli
scas
imul
stc
mov
cld
inc
dec
mov
or
outs
outs
push
xchg
and
add
pop
in
push
adc
out
adc
pop
(bad)
inc
add
int
fdivr
lahf
xchg
loope
sub
fistp
(bad)
iret
nop
push
xchg
sbb
cmp
es
fistp
jae
sub
addr16
push
(bad)
and
push
mov
scas
repnz
outs
call
stos
test
sar
cmp
xor
cmps
push
cmp
dec
xchg
jmp
pusha
add
popa
dec
add
rcl
sub
imul
lea
push
imul
xor
test
sub
lea
inc
add
sub
iret
add
xor
xor
fimul
cs
adc
push
mov
inc
pushf
lds
outs
mov
imul
sti
mov
icebp
mov
push
aam
mul
and
(bad)
dec
outs
sbb
pop
sub
sub
pop
popa
push
cmps
stc
dec
in
add
iret
icebp
movs
popf
push
call
imul
cmp
mov
cmp
frstor
xchg
retf
pop
push
jbe
mov
mov
mul
inc
push
mov
or
mov
mov
stos
(bad)
dec
outs
pop
lea
aaa
outs
inc
test
test
sub
outs
(bad)
popf
jns
mov
mov
scas
fsubr
fwait
xor
and
xchg
mov
adc
pop
fs
int
pop
mov
test
hlt
xor
jge
add
es
fist
inc
scas
mov
lods
mov
sahf
stos
imul
rol
jge
jmp
adc
dec
inc
fld
push
jp
cmp
dec
xchg
cmp
lea
xchg
jbe
imul
les
jmp
fidiv
cmp
push
sub
stos
mov
popa
xor
jnp
sub
cwde
mov
cmc
adc
pop
je
or
dec
popa
mov
js
int
in
lea
stos
cs
jae
rol
(bad)
mov
(bad)
jg
mov
jbe
jae
sbb
cdq
jns
movs
aaa
fdivr
xchg
mov
clc
fld
push
fdivr
ds
out
pop
xor
mov
rol
mov
xchg
in
outs
push
into
or
mov
mov
sub
mov
sub
fnstenv
mov
cmp
packuswb
ret
fcmove
ror
outs
jbe
push
daa
xchg
push
adc
clc
pop
xchg
retf
mov
jg
jl
add
fld
sub
cmps
dec
push
inc
test
loope
push
stos
jp
mov
mov
icebp
fidiv
cmps
mov
in
cmp
fnstsw
(bad)
mov
jl
jb
popf
cli
pushf
pop
ja
popa
out
push
push
clc
push
pop
pop
and
inc
in
daa
lds
jmp
sbb
retf
mov
or
ror
jne
inc
in
or
cld
inc
inc
xchg
stc
iret
mov
jmp
fcomp
(bad)
jmp
cs
ja
mov
js
dec
mov
rol
xor
fadd
pop
jmp
jo
jae
push
sbb
fnstcw
rcr
out
dec
cmp
loopne
(bad)
in
adc
in
xor
inc
fsubp
inc
sub
xor
add
fsub
xor
add
mov
mov
fisubr
xor
or
xor
and
mov
ins
inc
cmp
mov
loop
push
enter
test
mov
fcomip
outs
pop
and
lock
mov
and
xor
fistp
adc
mov
arpl
clc
xchg
push
sbb
lds
lock
rcl
data16
push
push
pop
add
sub
or
fs
out
mov
lea
cld
jp
sbb
fmul
mov
aaa
dec
cdq
je
aad
test
inc
inc
mov
adc
dec
fs
mov
in
or
lahf
lahf
pop
fiadd
outs
dec
mov
fwait
out
es
inc
xchg
int3
cmc
ins
xchg
out
test
mov
adc
std
in
or
fdivrp
in
sbb
mov
ror
das
(bad)
mov
inc
imul
loopne
or
pop
clc
test
mov
mov
push
ror
sub
sub
or
adc
xchg
ins
mov
pop
enter
daa
adc
mov
ins
in
sti
fcmovne
push
ss
imul
jnp
mov
ja
jl
stos
pop
mov
pop
ds
jae
dec
nop
hlt
cmp
xor
mov
ror
lds
push
xchg
xchg
mov
gs
cld
pop
mov
test
dec
popa
push
dec
mov
or
ins
xchg
loop
jle
cmc
lea
sahf
jne
mov
stc
dec
outs
xchg
ffree
mov
mov
jl
in
jl
xor
jns
pusha
mov
pop
in
xchg
mov
sbb
push
mov
popf
or
pop
push
inc
or
shl
mov
and
ret
fs
mov
into
mov
mov
popa
enter
xor
or
xchg
ins
jo
pop
push
adc
jo
mov
adc
popa
push
mov
inc
fldenv
hlt
mov
push
stos
add
or
mov
outs
jge
mov
dec
imul
mov
mov
dec
cmp
rcr
xchg
iret
add
jge
dec
clc
mov
iret
jns
repnz
cmp
push
jmp
(bad)
sbb
shr
sub
push
push
and
jge
mov
retf
ror
loop
shl
out
pop
jge
aad
pop
js
div
mov
add
xor
arpl
mov
or
imul
fcomp
or
lock
ins
mov
mov
aam
inc
jmp
dec
mov
xlat
popa
call
sbb
(bad)
jle
jl
adc
sbb
add
test
and
push
movs
call
mov
mov
jb
imul
add
jg
mov
aaa
mov
outs
in
sti
nop
mov
addr16
inc
cmc
gs
arpl
or
popf
jecxz
and
popf
shr
movs
fs
arpl
push
adc
xchg
jp
push
inc
dec
into
(bad)
mov
das
pusha
pop
cmp
leave
jmp
jecxz
adc
fdiv
jbe
pop
gs
push
push
imul
xchg
sub
push
pop
mov
pop
push
push
mov
out
icebp
mov
sbb
add
jecxz
xor
jmp
mov
or
xchg
or
cli
sub
mov
xor
sbb
and
sbb
sbb
cmp
sbb
movs
je
repz
loope
ins
addr16
mov
out
out
ror
pushf
sbb
(bad)
mov
xor
jecxz
es
pop
xor
imul
aas
dec
jp
mov
outs
or
repz
xor
out
mov
pop
cmp
loopne
lods
stos
test
adc
loop
lea
sahf
adc
inc
cdq
jbe
rcl
aad
imul
mov
push
das
(bad)
cmps
cmp
imul
jns
mov
push
sub
leave
iret
js
ret
(bad)
daa
push
mov
mov
push
sub
out
stos
cmp
pop
in
(bad)
ins
gs
nop
arpl
sbb
ins
sub
imul
movs
mov
pusha
in
add
and
xor
push
push
dec
(bad)
pushf
cdq
mov
push
xor
and
out
imul
fadd
jmp
mov
imul
aad
xchg
gs
mov
xchg
ret
pop
mov
bnd
pop
(bad)
aad
pop
pop
mov
out
fbld
push
or
rcr
das
daa
out
pop
loopne
(bad)
pop
ficom
inc
out
enter
bnd
sti
mov
pusha
fnstenv
inc
push
cmp
jecxz
ror
jg
loop
inc
mov
daa
call
jbe
pop
inc
and
sub
mov
in
jbe
and
or
neg
sub
mov
dec
push
popa
ds
(bad)
xor
les
daa
add
jb
(bad)
fst
inc
sahf
xchg
jge
out
repz
add
jne
adc
jecxz
inc
mov
(bad)
ins
mov
xlat
cwde
ret
mov
je
out
retf
aaa
pop
mov
jle
pop
pusha
sbb
jl
clc
(bad)
fidivr
cmp
scas
jl
jmp
and
arpl
not
int3
addr16
hlt
out
mov
sub
pop
inc
pop
jl
cmp
jle
sub
mov
into
mov
(bad)
xchg
inc
scas
ds
pop
pop
ins
movs
mov
mov
outs
retf
mov
lea
dec
fdiv
pop
call
(bad)
sbb
retf
mov
adc
jg
inc
ja
cmp
xchg
push
xchg
cmp
(bad)
cmc
push
(bad)
neg
add
imul
inc
enter
aad
xchg
pop
xchg
int3
iret
xchg
sub
push
call
pop
xor
cmp
jmp
xchg
fcomp
push
sbb
outs
cmps
out
ja
pop
push
sbb
mov
cli
stc
sbb
push
call
in
sbb
adc
push
xor
cmc
mov
mov
sbb
inc
pop
fstp
ins
fmul
xchg
pop
je
gs
popf
cmp
dec
jmp
loopne
call
add
ret
ds
cld
xchg
ja
rcr
sar
lea
pop
jp
ins
mov
pop
inc
pop
pminsw
test
mov
sub
mov
out
sbb
mov
xor
sub
cmc
push
out
cmp
js
jnp
add
in
call
arpl
push
outs
loope
mov
sbb
jo
movs
add
mov
std
mov
sub
mov
adc
mov
jno
rcr
mov
jmp
pop
sbb
jmp
leave
int3
test
jmp
add
mov
mov
jmp
out
inc
jecxz
sbb
test
loop
(bad)
aaa
xchg
stc
bound
sbb
(bad)
inc
xor
pop
pop
mov
jno
ins
push
mov
cmp
ss
leave
xchg
xchg
xchg
xchg
stos
pop
mov
mov
inc
inc
cld
or
aad
jns
mov
repnz
inc
xlat
sti
ins
cmp
mov
movs
jns
jnp
inc
call
jbe
leave
int
or
pop
mov
or
push
mov
sar
xchg
scas
xor
jp
push
mov
xchg
in
lahf
pop
aas
jmp
add
or
aaa
pop
in
cdq
cmps
inc
xchg
rcl
retf
sbb
(bad)
ret
push
fimul
mov
retf
and
(bad)
dec
mov
in
test
int
cli
dec
dec
mov
lods
xchg
test
rol
add
fld
xor
pop
dec
movs
daa
out
out
mov
popf
add
cmc
mov
pop
scas
bound
lods
xchg
add
lods
sub
xchg
into
cmp
ja
pop
push
clc
fcmovnbe
stc
mov
aas
jle
dec
clc
vmread
retf
rcr
inc
pop
jns
mov
lock
call
scas
ja
jecxz
jb
pop
add
sbb
rcr
pop
les
aas
or
loope
xchg
jg
jmp
imul
push
ja
mov
xchg
xor
jle
adc
clc
(bad)
daa
shr
add
inc
inc
jnp
adc
fiadd
repz
cmp
add
add
je
add
movs
cmp
daa
ja
mov
push
xchg
jmp
adc
ss
jne
cld
mov
jb
in
aas
ins
(bad)
sub
lahf
lahf
push
pop
in
xlat
ins
and
inc
xor
(bad)
jge
fild
cmp
and
(bad)
pushf
int
fs
cs
repz
inc
pop
loopne
pop
jno
xor
mov
mov
push
int3
cli
std
pop
and
cmp
nop
push
xchg
lahf
and
cmp
pushf
or
and
test
mov
and
and
cmps
jae
scas
stc
lahf
cmp
aaa
mov
mov
sbb
xor
inc
cmp
cli
(bad)
jb
mov
sub
cmps
movs
mov
sbb
test
imul
cmp
cwde
sbb
adc
and
xchg
pop
mov
mov
pop
xor
out
dec
les
fsubrp
popa
loopne
mov
mov
jns
cdq
xchg
mov
aad
test
cmp
outs
inc
mov
les
aas
cmc
mov
mov
out
xor
and
into
(bad)
int3
inc
push
push
into
dec
call
xchg
es
mov
cli
push
sub
popf
test
jno
imul
mov
push
enter
loop
aad
movs
mov
jb
pop
xlat
xor
jbe
lock
mov
add
jmp
loope
rcl
and
ins
jle
sub
jl
dec
mov
add
leave
and
in
fbld
aad
xchg
or
mov
mov
jo
jp
and
mov
mov
mov
xor
les
xor
dec
ror
outs
ss
cmp
mov
dec
or
add
fidivr
icebp
call
fwait
dec
pop
dec
sub
xor
loope
repz
jg
xor
int
test
jb
push
push
ret
and
push
(bad)
sti
or
cmc
dec
out
int
and
mov
push
icebp
jge
(bad)
cmp
pop
mov
ja
lock
in
adc
sbb
cld
repz
in
js
pop
sbb
lods
or
mov
and
sub
jb
mov
scas
je
aas
fldenv
leave
and
inc
mov
imul
call
cmc
repz
in
jle
adc
stos
xchg
pushf
fadd
pop
(bad)
jnp
sahf
popa
inc
add
dec
int3
mov
fldcw
std
inc
(bad)
mov
mov
add
aas
sub
add
push
xlat
sbb
mov
mov
rol
mov
clc
jle
pop
mov
mov
gs
lods
xor
das
or
addr16
jge
jmp
add
sub
hlt
or
stos
popa
(bad)
cmp
cmps
rcl
mov
xor
or
aad
mov
(bad)
pusha
mov
sti
mov
fwait
xchg
mov
inc
ror
xor
xor
jle
cdq
les
shl
stos
mov
pop
gs
out
sbb
into
mov
inc
cli
mov
fs
sub
lods
xlat
stc
push
cmp
iret
fstp
pop
sub
xchg
lds
stos
shl
cmp
sub
push
ins
or
xor
dec
xor
out
leave
pushf
loop
ret
fmul
add
mov
mov
add
aaa
push
dec
inc
add
cmp
pop
fidiv
jg
adc
test
inc
inc
mov
(bad)
mov
xor
loope
call
hlt
mov
push
jg
lods
dec
pop
lods
jmp
outs
xor
mov
push
mov
movs
dec
out
cmc
(bad)
(bad)
pop
add
xchg
cmp
scas
repnz
sti
cmc
out
rcl
outs
ror
mov
jmp
xchg
or
cmp
mov
and
lods
leave
(bad)
addr16
int
shl
xchg
movs
push
fist
std
out
xor
xchg
iret
ret
out
cmps
mov
mov
inc
mov
cmc
mov
pop
pop
out
mov
dec
dec
movs
addr16
ss
jp
inc
fcomp
clc
adc
jo
cwde
dec
int3
mov
scas
add
and
clc
icebp
ins
push
push
inc
retf
dec
lods
imul
lods
and
adc
rcl
ins
mov
mov
lods
ins
add
rep
inc
es
enter
not
test
cmps
pop
shl
dec
cmp
xor
add
sub
jl
bound
mov
(bad)
mov
stos
lods
imul
aad
xchg
add
ret
pop
bound
or
inc
daa
rcr
rol
test
push
fwait
push
xchg
pop
or
sahf
pop
mov
pop
mov
sti
jae
sbb
xor
xlat
jbe
pop
pop
pop
lods
ror
aas
aas
jo
xor
mov
xchg
cmp
push
scas
lahf
test
add
cmps
movs
or
mov
out
out
gs
mov
dec
sbb
xchg
xor
sbb
mov
stos
mov
sbb
mov
nop
(bad)
and
retf
xchg
loope
jae
icebp
scas
mov
retf
add
and
shr
push
in
nop
adc
xchg
inc
add
xrelease
out
pop
mov
cmps
and
xchg
dec
arpl
ror
mov
enter
cs
dec
dec
test
fisub
jmp
sbb
mov
or
jmp
scas
mov
or
xchg
frstor
push
xchg
arpl
pushf
inc
add
add
mov
in
(bad)
scas
ss
out
out
inc
iret
dec
and
pop
jle
cli
sub
jns
mov
sub
iret
adc
and
inc
jmp
fwait
pop
dec
repz
jg
lea
out
push
jmp
fild
push
inc
shr
out
adc
add
out
addr16
cwde
movs
shl
je
xchg
mov
sahf
xor
xchg
inc
xchg
adc
inc
scas
mov
sub
inc
int
movs
outs
sub
pushf
jmp
pop
popa
stos
mov
xchg
shl
cmps
call
inc
mov
ins
mov
xor
fbld
pop
ins
pop
cmp
and
addr16
sbb
das
sub
loop
xor
jmp
xchg
ins
jmp
popf
(bad)
arpl
lea
mov
lahf
add
aam
dec
aas
add
fsubrp
jmp
mov
push
fisub
pusha
xchg
push
cmc
xchg
dec
cmp
pop
stos
dec
jo
add
add
cmp
(bad)
mov
push
jmp
adc
mov
mov
sahf
and
fist
xor
ins
cmp
pushf
sbb
cmp
inc
xchg
fcomp
mov
out
clc
cmp
add
xlat
xchg
cmp
fwait
das
ss
cmps
sbb
add
mov
push
mov
sub
popf
out
add
rcr
lahf
xchg
arpl
dec
jecxz
into
mov
jge
stos
push
stos
nop
repnz
xor
push
pop
mov
xchg
push
jbe
int
sub
out
mov
jnp
adc
push
sahf
pop
mov
sti
dec
icebp
pusha
out
popf
stc
mov
mov
lds
xchg
or
stos
cmps
pop
mov
jno
addr16
jmp
jmp
pop
(bad)
cmp
jmp
ins
imul
rol
jo
das
movs
xchg
add
frstor
mov
jge
push
nop
aam
in
jmp
cmp
std
inc
xchg
addr16
out
fidiv
das
arpl
mov
mov
sub
xchg
(bad)
stc
xor
push
mov
js
mul
jns
(bad)
ss
inc
and
rcr
cmp
and
pushf
data16
stos
sbb
dec
xchg
dec
add
jmp
xchg
cmps
add
pop
or
jle
xor
int
das
push
or
aaa
dec
pop
fild
add
leave
adc
or
std
adc
int
fistp
rol
jge
out
mov
xchg
dec
cwde
(bad)
or
add
dec
repz
jo
shl
iret
jnp
out
daa
hlt
xchg
push
inc
movs
or
in
retf
xor
sbb
xchg
call
rol
(bad)
scas
hlt
or
mov
dec
adc
sub
lods
dec
leave
or
aas
mov
adc
aaa
push
ror
push
pop
rcl
dec
adc
test
mov
leave
and
fistp
aad
shl
adc
jmp
clc
fidivr
cmps
aaa
repz
push
hlt
in
xchg
jmp
adc
bound
add
aam
fisubr
or
and
and
fs
mov
xor
pushf
popf
into
call
stos
cmp
aad
repnz
push
cmp
and
pop
cld
jb
lods
rol
imul
inc
cmp
push
cld
xchg
aas
mov
and
stc
fld
outs
mov
adc
iret
stc
dec
or
xchg
adc
mov
inc
je
dec
popf
mov
movs
addr16
sub
out
jnp
jb
rcr
mov
cmp
jmp
dec
mov
or
or
push
sbb
push
mov
cmp
out
int
out
mov
jg
inc
dec
mov
mov
out
pop
inc
dec
inc
sbb
mov
jnp
lods
adc
popa
adc
mov
outs
jbe
pop
add
fcmovu
(bad)
ret
cmovns
ret
jnp
cmp
cmp
sahf
add
xor
(bad)
out
sub
add
push
shl
sub
inc
jmp
pop
retf
std
int3
xlat
xchg
jge
jg
ror
add
xor
cmp
(bad)
arpl
(bad)
aas
loopne
imul
gs
call
ss
retf
pop
cld
mov
rol
fild
mov
mov
aam
and
in
cmc
sub
dec
mov
mov
dec
idiv
(bad)
arpl
cmp
enter
pop
dec
xor
inc
sbb
xor
call
cmp
iret
nop
and
test
gs
and
mov
inc
repz
xchg
fbstp
int
mov
fwait
add
fadd
(bad)
popa
push
out
out
inc
imul
mov
iret
cwde
sbb
mov
loopne
sub
push
ins
mov
pop
lock
dec
sub
mov
test
je
fist
sub
test
push
retf
jge
in
sahf
dec
pop
mov
xor
call
mov
pop
vpackssdw
push
mov
movs
mov
les
les
jb
sbb
bound
mov
dec
adc
sub
rcr
or
inc
call
scas
movs
cld
adc
add
mov
sti
stos
add
js
outs
pop
lods
push
in
cmps
inc
sub
ja
hlt
stos
bound
cdq
(bad)
sbb
dec
pop
xor
or
(bad)
push
hlt
int
xlat
(bad)
mov
aas
dec
pop
xor
jl
pop
cld
dec
shr
je
movs
mov
jl
jnp
fwait
stos
push
mov
outs
scas
adc
xor
dec
pop
or
lods
hlt
inc
hlt
leave
or
lea
or
adc
inc
idiv
dec
stc
push
inc
gs
test
xchg
(bad)
out
loop
inc
jle
popa
retf
jmp
jmp
xchg
jbe
add
loop
addr16
inc
xchg
lods
dec
repz
(bad)
jno
xor
add
frstpm(287
ins
dec
adc
pop
jmp
js
sbb
scas
and
fmul
rcl
mov
scas
add
inc
outs
mov
inc
fimul
mov
inc
cmp
test
sub
and
iret
js
mov
xchg
call
xor
xlat
sar
cmp
pusha
in
push
jecxz
cdq
pop
std
push
mov
aas
hlt
mov
or
fild
cmps
imul
fisttp
int
pusha
fistp
sbb
sub
dec
inc
add
sub
rcr
repnz
lods
xor
sbb
xor
xchg
gs
bndstx
sbb
inc
shr
cli
and
stos
sbb
(bad)
sbb
ins
mov
jge
rcl
shl
push
jmp
daa
gs
pop
inc
sub
jne
mov
dec
in
or
stc
test
addr16
call
push
stos
xor
cli
push
aas
pop
outs
outs
(bad)
retf
retf
pop
lods
pop
gs
retf
inc
in
dec
dec
f2xm1
sbb
adc
pmaxsw
in
(bad)
push
pop
jl
adc
push
cwde
ins
sahf
ins
mov
outs
add
add
aas
vmovapd
cmc
movs
cmps
scas
repnz
jmp
push
test
bound
inc
mov
jnp
mov
pop
fcom
mov
stos
and
call
out
mov
mov
popf
push
in
cmp
mov
xchg
(bad)
xor
sbb
hlt
das
add
sahf
aad
(bad)
ins
js
adc
clc
aad
int
movs
mov
ss
sub
adc
mov
dec
push
mov
jne
xor
cmp
mov
adc
(bad)
sti
(bad)
test
xor
xchg
int
xrelease
call
sbb
xor
xchg
mov
mov
push
aaa
iret
mov
add
pop
aad
mov
(bad)
loope
and
mov
sti
aad
test
hlt
xlat
mov
movs
mov
fs
push
push
and
xchg
mov
dec
sbb
add
(bad)
cmp
jbe
arpl
fwait
push
cli
adc
sbb
mov
push
sub
adc
inc
aas
out
push
repz
int
mov
popf
out
mov
call
inc
mov
sbb
lahf
stos
outs
(bad)
jp
fist
das
or
mov
mov
add
xor
rcl
fstp
mov
fadd
sbb
or
popf
lods
jp
sbb
mov
sub
and
inc
dec
call
pushf
push
into
mov
push
adc
sub
inc
adc
rcr
cmps
into
sbb
fs
adc
mov
out
pop
mov
xchg
pop
ffree
div
ds
jne
rcl
mov
jl
mov
xchg
pusha
adc
(bad)
sub
pop
mov
cmp
adc
pop
fistp
adc
sar
pushf
sysret
jmp
movups
cwde
pop
cwde
mov
mov
daa
adc
push
adc
inc
and
fdivrp
mov
jmp
fnstenv
add
xor
sar
push
adc
sti
xchg
add
lea
stos
xchg
ds
jae
inc
inc
sar
sub
mov
loope
addr16
(bad)
fdiv
inc
rcl
clc
clc
dec
pop
(bad)
js
std
icebp
mov
mov
call
push
aas
movs
aaa
and
popf
sub
pop
inc
xor
push
stc
push
shl
stos
mov
aas
sete
sub
sbb
xor
sbb
or
mov
scas
push
mov
mov
test
push
push
aas
outs
std
imul
adc
dec
sub
icebp
int
mov
stc
and
iret
mov
sti
jg
inc
or
inc
stc
inc
mov
pop
pop
repz
fld
sub
cmp
jmp
mov
push
mov
push
hlt
std
(bad)
cmp
push
data16
add
shl
cmps
daa
pop
movs
xchg
push
mov
rcr
imul
rep
mov
repnz
daa
pusha
jmp
test
sub
imul
push
lds
push
lahf
pusha
out
(bad)
fnstcw
jge
(bad)
cmps
sub
ror
in
aas
dec
movs
inc
pop
cli
shl
mov
pusha
int3
retf
(bad)
in
(bad)
mov
cmp
pop
push
xlat
jle
in
sub
mov
jl
or
mov
sahf
xchg
repz
es
jb
gs
and
sub
jne
jns
pop
push
sar
inc
sub
addr16
push
loope
pusha
sub
sbb
pop
movs
pop
sub
movs
pusha
and
cld
push
push
pop
pop
lods
(bad)
(bad)
push
or
sub
lds
leave
mov
sbb
js
adc
sbb
jno
into
scas
cwde
push
or
inc
xor
outs
xor
int3
jae
mov
outs
into
pop
sub
jecxz
movs
inc
mov
xchg
arpl
pop
add
(bad)
cmps
inc
mov
pop
vminps
or
adc
lahf
or
fisub
cmp
aas
leave
adc
mov
jmp
jmp
test
(bad)
mov
shl
sbb
lods
mov
aad
push
outs
int3
lea
test
cmps
out
(bad)
out
js
iret
xchg
xor
cmp
daa
jl
je
mov
inc
add
dec
mov
mov
sub
push
cs
and
scas
aaa
movs
imul
dec
mov
pushf
hlt
mov
or
xlat
inc
ret
inc
fwait
cs
cmp
xor
sbb
inc
mov
sub
scas
ja
aas
movs
xor
sbb
jae
sbb
aaa
jb
or
xchg
iret
sub
repz
mov
je
dec
iret
js
add
sub
sti
out
rcr
add
mov
dec
imul
aaa
mov
mov
test
data16
mov
lods
dec
(bad)
int3
inc
inc
fsub
push
inc
adc
xor
in
jge
xchg
out
in
cdq
popf
cmp
(bad)
shl
pop
test
mov
inc
jge
xchg
lods
push
inc
imul
fs
jge
cdq
dec
dec
shl
idiv
sahf
cdq
cld
sub
les
push
stos
mov
jnp
nop
cmp
out
ss
cli
out
adc
imul
shl
xchg
ror
fnstenv
jg
cld
cmp
sub
xchg
sbb
lea
scas
mov
cdq
popa
mov
or
in
les
fwait
cmp
mov
inc
dec
inc
(bad)
fild
pop
jbe
sub
jl
mov
cli
adc
mov
int3
cmps
dec
aas
or
out
(bad)
cmp
fnsave
pop
fst
sub
push
sub
adc
std
push
scas
pop
iret
stos
push
cmp
and
clc
repnz
sbb
mov
xchg
scas
jecxz
cs
xchg
rcr
jb
cwde
(bad)
mov
popa
aas
pop
mov
mov
mov
jge
fdivr
pushf
aam
in
jp
and
hlt
ret
and
mov
pop
pop
(bad)
dec
aas
sbb
es
je
or
je
in
and
mov
dec
jmp
jbe
xor
pop
out
lods
ror
dec
(bad)
mov
or
cmp
sub
ds
xor
enter
movs
inc
pushf
pop
add
sar
call
xchg
ret
mov
addr16
pushf
mov
cmp
es
sub
rol
jno
lahf
jge
sbb
pcmpeqb
test
lods
push
bound
jecxz
jmp
xor
arpl
(bad)
stos
bound
push
in
mov
cdq
test
pusha
inc
dec
jmp
xor
sar
xchg
xor
and
add
shl
js
xor
sbb
icebp
fiadd
ret
das
xor
push
adc
aad
rol
dec
adc
jg
inc
xchg
lahf
dec
mov
sbb
mov
push
mov
fsub
imul
add
test
popa
mov
sahf
out
(bad)
jge
fcomp
inc
sbb
mov
sub
pop
scas
repz
push
inc
ins
inc
xchg
sbb
dec
and
shr
std
xchg
pop
dec
(bad)
dec
or
adc
call
aad
sar
dec
xor
push
dec
xchg
xchg
call
push
ss
cmps
outs
imul
ins
stos
and
aad
xlat
mov
sti
push
mov
mov
stc
mov
jmp
ss
adc
fiadd
imul
loop
aas
jl
push
pop
and
push
hlt
inc
or
and
mov
test
test
inc
xlat
cmp
adc
cmps
movs
(bad)
or
(bad)
loopne
jl
mov
push
imul
enter
xchg
enter
iret
jno
adc
pop
sub
test
data16
shl
sub
shl
pushf
and
adc
cld
sar
cmp
sbb
loop
jns
mov
movs
test
mov
xchg
(bad)
pop
pop
stc
iret
xor
sub
dec
adc
leave
push
push
dec
cmps
stc
cmc
ds
fistp
fmul
movs
aas
shl
cmp
sti
pop
mov
movs
jge
gs
repz
push
cli
not
and
xor
push
mov
ror
and
ja
push
mov
mov
xchg
dec
fwait
inc
clc
daa
xor
push
pop
mov
push
xchg
cwde
popf
xor
lahf
mov
sbb
cmp
retf
inc
out
cmp
fs
xlat
popf
in
dec
pop
xchg
jp
push
mov
mov
push
xchg
cmp
loope
cmp
dec
cmp
daa
xchg
lea
xor
je
hlt
inc
fs
imul
je
movs
cmp
push
push
test
xchg
lods
jae
scas
ss
in
test
loope
lods
mov
aad
pusha
mov
retf
shl
stc
mov
mov
mov
sub
mov
add
push
mov
call
sub
pop
add
push
mov
or
adc
mov
repnz
scas
xor
ins
xor
das
mov
inc
inc
cmp
mov
adc
ror
jge
pop
hlt
push
mov
add
xor
cli
or
mov
fs
fdiv
cmps
push
sar
jmp
jae
loopne
aad
push
push
rcr
push
cld
ins
jl
sahf
ins
popa
lock
add
jae
inc
fild
arpl
mov
pop
std
fld
xchg
outs
retf
outs
test
xchg
mov
inc
mov
mov
das
jmp
retf
out
inc
and
in
jo
into
icebp
cmp
stos
sbb
and
push
mov
jno
sbb
mov
xchg
cmc
stos
retf
sbb
mov
lods
cmc
push
ja
pop
push
fisub
enter
fdivr
and
jl
xchg
retf
retf
call
and
sub
sub
imul
and
jns
out
imul
xlat
shr
std
mov
mov
mov
push
cmp
and
push
mov
mov
shr
dec
bound
cmps
mov
push
pop
inc
jmp
lahf
std
addr16
or
add
mov
mov
push
xor
or
inc
mov
push
adc
adc
enter
fs
xor
inc
iret
mov
jns
mov
jb
sub
adc
pop
idiv
or
sub
call
mov
icebp
sar
movs
test
fild
cwde
inc
test
cld
inc
fistp
into
hlt
mov
sar
inc
je
bound
stc
mov
mov
loopne
pushf
jecxz
and
ins
add
or
adc
mov
sti
sub
jns
stos
mov
cwde
outs
out
jne
adc
ret
jp
arpl
mov
ss
aas
outs
pop
call
imul
adc
test
pop
mov
adc
and
inc
hlt
pop
mov
add
js
scas
nop
fs
arpl
dec
mov
test
lods
mov
dec
lods
test
movs
pop
shl
shl
(bad)
lock
pop
sbb
mov
mov
mov
daa
aaa
aas
cmp
inc
popf
fild
fst
shl
cmp
das
sbb
push
or
xchg
add
lods
test
push
lds
out
sbb
jo
inc
jle
push
stos
iret
xchg
inc
sub
addr16
enter
mov
popa
fcmovnbe
mov
in
xor
sub
push
stc
int3
imul
fwait
addr16
push
mov
clc
call
mov
sub
adc
cmc
cmp
arpl
leave
mov
and
iret
adc
pushf
jno
shl
fidiv
cmp
xchg
fwait
push
mov
mov
les
inc
aas
rcr
loope
inc
test
inc
repz
les
stos
in
jmp
or
mov
ins
jns
icebp
jl
add
mov
sub
xchg
and
jmp
imul
adc
xchg
sub
(bad)
pop
and
or
not
and
inc
popa
jecxz
dec
scas
call
and
mov
inc
or
mov
pop
stc
cmps
std
cmp
sbb
sbb
ror
xor
cmps
lea
sub
loope
inc
dec
inc
fbstp
inc
stc
sbb
add
sbb
lds
xchg
movs
mov
repnz
rcr
pop
mov
stc
cld
mov
or
and
out
mov
ror
into
cmp
add
(bad)
pop
sbb
mov
add
cmps
mov
dec
inc
mov
or
xchg
xor
inc
push
pop
push
mov
cmps
fbld
pop
mov
xchg
add
sar
mov
shl
in
jp
ficom
sub
push
mov
loope
and
xor
cdq
pop
sbb
xchg
iret
shl
or
jle
cmp
jge
xchg
xor
mov
cmc
jbe
mov
fs
aaa
in
push
jbe
lea
test
sar
add
loopne
dec
lock
iret
cdq
xor
jmp
or
or
shl
retf
or
cld
pop
bound
lahf
iret
pop
pushf
mov
ret
shl
xchg
mov
inc
cmp
pop
pop
stos
icebp
lea
cdq
sahf
jno
in
in
mov
push
fnstenv
mov
lods
scas
adc
imul
test
pop
mov
pop
inc
push
int
mov
mov
and
cmp
dec
movs
inc
in
cmps
sbb
call
fidivr
cmp
out
mov
bound
(bad)
xor
cmp
arpl
sub
jle
shr
fsubr
mov
lods
pop
in
repz
hlt
push
sar
pushf
mov
pop
pop
call
mov
enter
and
xchg
addr16
adc
mov
dec
retf
bound
mov
xchg
lods
aas
pop
into
data16
test
push
push
je
(bad)
mov
in
mov
cs
and
retf
fld
sbb
pop
out
(bad)
movs
sub
or
sbb
or
div
push
scas
sbb
(bad)
shl
mov
xor
je
inc
imul
iret
movs
add
stos
rol
mov
aam
mov
fs
xor
dec
sbb
lea
jnp
mov
add
sti
pop
imul
pop
retf
out
and
and
or
lahf
mov
pop
retf
sahf
int
aas
push
xchg
fcom
aaa
sub
xor
into
fcomp
sbb
push
stos
jb
pop
scas
push
xchg
dec
jg
je
lea
movs
mov
push
jecxz
jno
pushf
imul
pop
outs
(bad)
or
inc
sub
dec
xor
fcmove
sub
pop
xor
arpl
shr
enter
dec
dec
into
add
lods
mov
jle
adc
jecxz
outs
or
cs
cmp
ret
scas
fwait
pop
call
push
dec
mov
dec
xchg
dec
test
lea
aaa
ins
pop
scas
mov
xlat
xlat
or
add
gs
adc
inc
pop
ins
jae
jmp
xor
pop
mov
pop
mov
arpl
repnz
cld
loopne
loop
push
hlt
es
or
popa
je
inc
sub
xlat
retf
mov
lds
jae
les
jp
sub
adc
or
mov
mov
std
and
inc
bound
xchg
retf
fst
lds
cdq
sub
pop
or
cmp
inc
aas
xchg
pop
mov
cmp
cmps
pushf
sub
xor
push
out
call
xor
fiadd
inc
mov
popa
ror
mov
jno
jbe
icebp
inc
inc
add
push
repz
jg
mov
pop
in
gs
cmp
mov
mov
mov
dec
movs
cmp
fstp
ret
sub
inc
cmp
out
inc
push
xor
bound
and
arpl
sub
stos
adc
dec
outs
gs
fidiv
sub
leave
sahf
sub
(bad)
arpl
inc
data16
test
pop
je
cli
scas
rcl
sar
call
push
lds
lahf
(bad)
pop
movs
pop
pop
cli
movs
(bad)
ficom
dec
ja
aaa
nop
movsx
scas
clc
fist
and
mov
jg
push
jmp
(bad)
hlt
jg
xchg
ret
ins
in
jg
inc
scas
(bad)
pop
(bad)
xchg
(bad)
jg
das
mov
out
xchg
sub
inc
cmps
or
sbb
mov
sub
(bad)
outs
(bad)
jnp
xor
cdq
mov
lods
ficomp
data16
std
jnp
lods
out
jg
ins
xchg
mov
push
(bad)
loopne
mov
or
xchg
lods
lods
adc
or
sub
xor
ficomp
cmp
mov
in
in
in
out
popf
jg
or
sub
push
adc
or
dec
inc
push
into
mov
test
mov
test
xchg
iret
cmp
xchg
xchg
fisttp
and
xchg
inc
shl
cwde
and
pop
pop
les
in
xchg
adc
cmps
push
aad
push
cmp
ret
dec
jae
dec
lea
in
jbe
dec
loopne
push
add
add
popf
push
and
adc
je
mov
add
add
shl
out
mov
add
pop
sub
shl
(bad)
std
add
add
push
sub
push
dec
push
adc
inc
lahf
out
cmps
inc
mov
fld
mov
lods
add
add
mov
jg
fisttp
(bad)
dec
mov
(bad)
(bad)
data16
push
cmp
push
rol
xchg
ins
mov
xlat
not
cdq
aad
inc
mov
sub
(bad)
jle
int
or
dec
movs
xor
cwde
push
daa
call
call
lahf
ja
cwde
jg
pop
sti
add
mov
cmc
repz
bound
lods
lds
int
(bad)
cmp
inc
sbb
stos
mov
xchg
int3
sub
inc
push
pop
ret
or
sub
icebp
jmp
and
sar
stc
out
jne
fisub
cmps
jmp
movs
mov
(bad)
add
in
xor
jg
xor
sti
cmc
dec
repz
xchg
aaa
into
repz
into
out
push
call
ins
stc
push
mov
ins
int3
xchg
out
fidiv
mov
dec
(bad)
mov
mov
cld
shr
shl
mov
movs
dec
xchg
mov
and
aam
push
jp
ins
outs
imul
bound
push
aas
jp
mov
xchg
iret
gs
push
xor
cwde
std
mov
in
adc
aas
mov
add
pushf
out
add
jmp
xchg
dec
adc
xor
xor
jg
xchg
data16
fs
cs
cmp
in
and
idiv
sar
pop
call
inc
and
iret
jge
das
(bad)
jl
out
(bad)
mov
(bad)
aas
sub
pop
je
scas
(bad)
fcom
xchg
test
pop
dec
fdiv
add
jg
sub
(bad)
mov
and
outs
cmp
inc
push
aam
ficomp
fistp
inc
js
adc
gs
pop
nop
loop
ds
xchg
jno
iret
cmc
xchg
rep
mov
jmp
lods
(bad)
jp
lock
sub
cmps
das
pop
cmps
xchg
inc
call
dec
int
pusha
scas
jle
inc
out
push
les
scas
and
add
fidivr
aaa
inc
inc
push
xchg
dec
dec
fst
stos
shl
test
dec
ins
les
lods
mov
jmp
int
jmp
ret
out
add
(bad)
add
adc
test
ret
inc
outs
mov
repz
pusha
jmp
test
cmp
ins
sti
sbb
hlt
sub
pop
push
push
(bad)
mov
push
shr
ret
jl
mov
(bad)
aad
loope
jmp
xchg
cwde
push
pop
xchg
repnz
mov
mov
xchg
int3
pusha
call
retf
clc
jae
pop
aaa
mov
xor
dec
sbb
push
fcomp
sbb
nop
test
cdq
loopne
(bad)
mov
sar
push
cmp
xchg
repz
lahf
ss
mov
mov
(bad)
adc
cmp
stos
pop
data16
or
mov
xor
aaa
xchg
push
ror
jg
pop
into
push
shl
or
jnp
xrelease
movs
push
jbe
mov
dec
(bad)
push
jne
popf
imul
cdq
(bad)
add
je
ins
pop
retf
out
push
cmp
jmp
push
mov
cmc
mov
stos
xor
hlt
adc
outs
scas
mov
jmp
lods
cdq
popa
ins
ror
cwde
mov
div
mov
xor
(bad)
xchg
fdivr
mov
out
pusha
mov
jbe
and
repz
(bad)
outs
dec
retf
stos
popa
lahf
aad
pusha
shr
jecxz
mov
pop
pushf
aas
adc
mov
lea
js
jecxz
rcl
sbb
in
or
dec
sbb
xchg
leave
mov
push
fist
jp
sub
scas
jnp
dec
jo
add
dec
mov
jle
jp
dec
test
xchg
in
jge
mov
jg
xor
xor
mov
push
cwde
js
add
retf
pop
cmps
fbstp
xor
int3
loopne
push
mov
out
into
out
pop
arpl
ret
aas
cmp
fild
nop
jno
mov
cwde
xor
jae
push
shr
outs
xor
into
dec
mov
ds
jl
or
jno
mov
cmp
add
sbb
sti
mov
int3
and
sbb
and
rcr
lea
inc
ins
mov
or
test
push
lahf
(bad)
adc
ret
stos
pop
mov
xor
cmp
jnp
ins
das
cmp
pop
fsub
(bad)
loopne
cmc
mov
out
std
scas
shl
aas
cmp
xlat
push
pop
aad
push
std
mov
xor
pusha
std
stc
test
nop
cmp
in
mov
aas
or
out
test
cmp
cmp
loope
out
push
xor
aas
into
fsub
fs
sub
mov
adc
imul
xchg
cli
neg
call
add
jne
xlat
inc
neg
fwait
test
fild
(bad)
cmc
fadd
dec
jmp
xchg
cmp
stos
and
dec
mov
ficomp
cmp
ins
pop
iret
sbb
jne
loopne
outs
mov
jnp
add
out
jle
and
bound
pop
leave
jno
dec
push
cmp
push
aad
ret
fcom
std
leave
sti
and
ficom
mov
cmp
loopne
push
mov
mov
in
stos
pop
(bad)
std
mov
das
xchg
push
enter
stc
mov
test
jg
or
in
loopne
mov
jmp
in
cs
sar
cmp
cmp
pop
xor
cmps
cwde
xchg
fs
dec
addr16
mov
ds
sbb
jo
(bad)
addr16
push
jge
mov
dec
out
and
out
aas
(bad)
dec
jnp
push
les
jle
pop
xchg
hlt
sbb
mov
cmp
hlt
cdq
enter
out
shr
adc
jae
out
repnz
sbb
push
popf
lock
les
rcr
xor
mov
push
jmp
repz
lods
push
sbb
jns
aas
sbb
jbe
jge
out
mov
jne
mov
xor
add
mov
test
cs
(bad)
(bad)
stos
mov
fwait
sub
mov
xchg
nop
mov
sub
mov
xchg
pop
sub
xchg
shl
in
daa
jnp
je
in
push
lock
in
in
mov
fstp
jge
sbb
mov
test
in
in
aad
ds
rcr
outs
jne
aas
cmp
mov
push
xchg
mov
jg
dec
cmp
lods
jge
jge
cmc
test
es
retf
imul
retf
mov
loope
out
add
hlt
or
jg
sub
jp
jmp
dec
(bad)
inc
push
mov
call
mov
movs
pop
mov
iret
retf
dec
repz
jmp
dec
fwait
push
cli
jae
inc
in
popa
xchg
xchg
xchg
dec
mov
push
or
jle
repnz
mov
pop
sahf
adc
adc
cli
aas
mov
xchg
into
icebp
mov
mov
std
xor
dec
jmp
cs
sub
test
and
pop
lods
int
mov
cmc
mov
jne
jecxz
leave
jns
ds
xor
cmp
adc
sbb
mov
test
rcr
les
jecxz
cmps
and
dec
popf
stos
arpl
inc
jg
xchg
gs
aaa
jae
dec
lea
pop
int
outs
mov
jl
aad
ja
popa
add
ss
sbb
out
and
imul
mov
sbb
loope
movs
cmp
cwde
xchg
mov
out
fs
fwait
add
or
push
fwait
jmp
scas
mov
movs
fstp
stos
(bad)
push
das
shl
push
mov
stos
dec
icebp
aam
icebp
push
imul
push
cmps
xor
movs
ds
or
test
and
sbb
mov
xor
xchg
fst
dec
into
push
aaa
jns
loopne
sub
out
lock
cs
repnz
mov
mov
add
dec
idiv
dec
(bad)
out
fist
cmps
loope
jne
sahf
ds
or
jmp
sub
cmp
mov
inc
rol
inc
ror
test
call
mov
leave
sahf
cmp
jns
push
pushf
jmp
inc
xchg
cmp
shr
movs
xchg
push
add
mov
add
adc
test
xchg
fadd
fnstcw
cwde
fs
not
es
les
mov
cmp
ret
arpl
aam
pop
mov
pushf
push
fwait
dec
cdq
sbb
mov
cmps
xor
xchg
pop
adc
push
call
jae
mov
sbb
dec
lea
lds
or
jg
retf
push
push
pop
or
mov
dec
test
(bad)
sbb
fs
retf
into
sbb
mov
stos
jge
(bad)
not
push
daa
cmc
dec
jmp
aas
test
mov
pusha
lock
mov
mov
mov
xlat
cmp
cwde
(bad)
fld
pop
pop
aas
sti
pusha
arpl
aam
xor
xor
mov
aad
pop
icebp
sub
xchg
lods
mov
mov
ins
sbb
xchg
xchg
movs
jne
imul
out
scas
std
add
mov
shr
out
dec
xor
popf
pop
pop
outs
in
pop
call
sbb
dec
mov
mov
mul
adc
cld
test
test
out
dec
not
sub
inc
mov
push
and
mov
leave
xchg
adc
std
add
xor
or
jmp
outs
sub
aaa
les
mov
inc
or
je
sbb
and
daa
in
cs
jbe
ds
aam
inc
and
imul
cwde
sbb
xchg
cmp
cli
and
fadd
cmps
mov
and
push
repz
and
sub
movs
hlt
xlat
push
add
leave
inc
dec
lea
rol
test
imul
xchg
and
mov
mov
not
jecxz
adc
aas
popa
sbb
pop
cs
fs
jo
inc
jmp
adc
rcl
js
pop
mov
mov
in
aad
pop
pop
rcr
or
sub
mov
rcl
test
ret
xchg
ret
rol
adc
(bad)
movs
adc
loop
cmp
inc
mov
out
ror
cs
mov
lods
outs
retf
stc
add
mov
cdq
in
xor
icebp
xchg
lea
cmp
inc
cld
xchg
in
(bad)
leave
mov
outs
cmp
(bad)
rcr
aam
sti
repz
ins
iret
jmp
movs
and
lahf
fisub
jne
scas
fcmovnu
cmp
fisttp
jp
jmp
jge
mov
(bad)
sub
fwait
test
xor
les
pushf
pop
es
inc
mov
adc
add
inc
mov
jb
adc
pushf
fsub
std
inc
mov
xchg
neg
xchg
test
je
shl
call
add
test
xchg
repz
add
cwde
dec
fimul
sub
mov
retf
or
int3
push
xchg
mov
pop
loope
push
mov
mov
mov
shr
and
cmp
ja
mov
mov
jg
push
scas
lea
mov
mov
cdq
push
xchg
mov
and
cs
call
mov
push
inc
xor
add
push
xor
fsubr
jno
pop
stc
mov
and
outs
sbb
repz
aam
shl
mov
mov
dec
add
cmp
vcmppd
inc
mov
sbb
ror
jg
mov
xchg
dec
call
sub
mov
push
pusha
jl
not
je
clc
imul
cmp
ins
xchg
and
and
mov
mov
aad
mov
test
and
in
dec
inc
in
or
fisttp
inc
mov
cmp
test
leave
sbb
mov
sub
cmp
sbb
jnp
mov
int
jb
icebp
xor
gs
mov
(bad)
lods
rcr
mov
pop
mov
lods
popf
xchg
inc
sub
add
mov
cmc
pop
or
sbb
es
imul
pusha
cmp
xchg
in
jmp
leave
call
add
add
jmp
pop
push
pop
int3
(bad)
xor
xor
(bad)
loope
popf
or
cli
jo
jno
jo
sbb
or
mov
popa
dec
ret
pusha
and
sub
or
(bad)
out
sub
imul
sbb
fidivr
sbb
aam
or
aas
cmps
push
add
xchg
loopne
movs
outs
fdiv
mov
je
dec
fidiv
xchg
cmp
sbb
pop
mov
sub
sub
int3
mov
in
and
aam
je
adc
jo
jmp
(bad)
imul
call
dec
pop
int3
pusha
hlt
add
jns
mov
jp
movs
pop
mov
cmp
pusha
addr16
scas
sbb
xlat
jnp
addr16
sbb
mov
cs
mov
add
rcr
lods
sbb
scas
cmp
dec
mov
xchg
ja
out
icebp
std
xor
push
xchg
data16
fld
(bad)
sbb
adc
jg
or
lds
sti
sub
hlt
sub
mov
jmp
cmc
sub
ds
jg
rol
cmps
call
clc
sub
cs
lods
mov
lds
iret
gs
dec
push
out
add
inc
jb
std
lods
ins
mov
iret
into
or
pop
les
inc
imul
mov
mov
outs
add
dec
stos
mov
and
sbb
xor
fadd
loop
fisub
inc
clc
jl
dec
test
adc
rcr
stos
push
rcr
enter
pusha
sbb
rcl
cmp
mov
gs
xor
mov
jne
pop
pop
(bad)
dec
aas
jle
and
scas
lahf
jle
or
stos
jns
nop
or
addr16
pusha
punpcklwd
or
jle
clc
xchg
sbb
dec
call
push
add
jmp
jmp
xchg
(bad)
das
and
pop
push
cmps
ss
outs
xchg
mov
test
push
sub
xchg
aas
cwde
jo
pop
ret
cmp
jl
fs
in
repz
pop
(bad)
sub
ins
jno
sub
loope
or
out
mov
add
cld
imul
mov
jne
rol
out
mov
in
or
fs
inc
movs
jnp
jge
pop
enter
xor
stos
pop
icebp
imul
jle
test
xor
add
popf
loop
test
movs
xor
lds
cdq
in
scas
mov
out
fwait
push
in
mov
push
push
dec
dec
mov
or
cdq
cmp
repz
aam
std
sbb
repz
or
outs
stos
xor
(bad)
bound
and
push
pop
iret
sub
add
sub
(bad)
lock
and
ins
pushf
bound
xchg
outs
stos
adc
mov
xchg
stos
xlat
hlt
add
sub
jmp
into
push
scas
jo
ror
jmp
push
aam
add
(bad)
shl
add
jecxz
(bad)
jb
addr16
add
add
pop
mov
repz
fdivr
or
popf
and
jo
sbb
mov
add
call
lock
cwde
add
adc
mov
data16
loopne
fwait
rcl
adc
mov
imul
int3
pop
xchg
imul
in
jp
cdq
push
fdivp
push
cmp
sub
in
cmp
mov
jg
mov
gs
xchg
or
jg
cmp
movs
js
retf
sbb
stos
outs
xchg
or
scas
aaa
sub
mov
jb
push
adc
shl
xchg
pop
or
mov
xor
pop
aas
push
jmp
jbe
mov
push
mov
xor
inc
and
shl
lock
enter
add
jns
imul
cli
push
ds
dec
pushf
gs
cmp
ror
xor
jmp
popa
repnz
fistp
add
shl
shr
jp
jne
jg
jl
in
cmp
loope
movs
mov
test
fwait
test
scas
test
jg
leave
xlat
pop
jno
and
outs
test
jae
xor
cdq
push
mov
sub
ret
sbb
aaa
ror
test
jmp
aam
loop
leave
mov
jg
cmps
sbb
pop
retf
mov
imul
gs
loopne
jmp
std
mov
xchg
dec
retf
or
adc
hlt
xchg
fisubr
aad
jmp
sbb
or
lods
call
mov
pop
fs
scas
or
xor
push
movs
and
movs
cmp
ret
xchg
iret
call
pop
and
aad
or
sbb
pusha
mov
xchg
out
sub
pop
mov
test
inc
shr
iret
into
or
mov
and
out
scas
mov
sar
dec
push
jb
mov
dec
pushf
dec
repz
sbb
std
mov
ins
sbb
movs
mov
into
sbb
das
jno
adc
loope
movs
push
jmp
xchg
or
sub
fs
jno
scas
or
mov
cmps
jbe
cmps
repz
cmps
repz
mov
pop
xchg
jnp
scas
mov
jbe
mov
imul
push
pusha
xchg
enter
mov
or
pop
mov
leave
test
mov
test
adc
(bad)
scas
call
aam
mov
mov
cmp
push
ja
not
int
out
jnp
out
push
sbb
jle
lds
cmp
add
pusha
jmp
ret
fild
dec
sti
sub
mov
scas
std
xchg
adc
inc
adc
(bad)
stc
sub
mov
inc
sub
int
leave
xchg
dec
jmp
xor
cmp
mov
in
mov
xor
adc
xor
and
pop
mov
popa
or
sub
push
mov
ret
ins
sbb
xor
mov
out
popa
inc
xor
sbb
sub
mov
mov
add
or
cld
(bad)
(bad)
and
rcl
cli
je
inc
xchg
xchg
mov
pop
not
jg
xor
add
adc
imul
cmp
xchg
cli
dec
lds
pop
out
js
stc
fldenv
lods
in
mov
outs
xchg
iret
sbb
cmp
cmp
mov
imul
stos
mov
cmp
aaa
jmp
pop
jecxz
ss
pop
aad
cmp
jmp
pop
sbb
or
ja
daa
mov
xchg
push
sbb
push
mov
pop
mov
pop
bound
xchg
sar
imul
push
mov
fwait
xor
sbb
lods
adc
stc
xchg
push
shr
cmp
xchg
dec
mov
mov
mov
(bad)
xchg
(bad)
push
bound
sub
fcmovnb
dec
pop
xor
cmp
call
lock
fsub
mov
mov
ds
shl
mov
dec
arpl
ret
(bad)
loopne
loope
arpl
adc
sub
adc
arpl
scas
aad
outs
clc
out
scas
pop
mov
dec
jmp
dec
in
push
pusha
cmp
push
pop
lds
(bad)
jmp
or
ins
jp
mov
(bad)
fdiv
dec
pop
arpl
pusha
lock
sbb
or
add
inc
ficomp
mov
sub
bnd
push
jno
adc
push
loopne
popf
neg
jnp
mov
push
push
ja
xor
pushf
and
pextrw
mov
and
pop
pop
fcom
inc
add
imul
mov
mov
call
sti
sbb
daa
pop
jnp
jb
sahf
adc
stos
mov
in
push
push
ins
repz
enter
aas
or
sub
jns
les
push
pop
add
les
out
push
dec
mov
or
xor
sar
adc
cmp
inc
cwde
ds
fdivrp
outs
adc
dec
push
(bad)
add
imul
aam
ja
mov
cmovno
mov
hlt
mov
les
icebp
stos
dec
mov
inc
dec
xchg
xchg
mov
iret
dec
mov
fdiv
add
addr16
loopne
sbb
(bad)
push
mov
les
pop
jne
add
popa
pop
frstor
push
inc
out
push
and
push
daa
sub
dec
std
xor
sbb
pop
or
bnd
inc
mov
loopne
test
dec
dec
jbe
cwde
loope
add
test
sbb
mov
mov
mov
pop
shr
cmps
sti
mov
popa
jae
sbb
loop
and
cdq
cmps
cmp
out
xchg
push
(bad)
push
sub
inc
mov
out
push
xchg
push
popa
in
jo
sti
mov
jb
call
loope
mov
cld
int
fcmovnbe
(bad)
(bad)
push
ret
ja
loop
cmp
cs
rcl
(bad)
inc
pop
cmps
aaa
fiadd
scas
dec
lock
fsub
test
scas
jg
imul
mov
cwde
ins
push
cld
cmp
jae
jmp
push
cwde
shl
fdivr
mov
sbb
mov
mov
xor
outs
dec
popa
pop
ret
sar
push
jmp
mov
daa
int3
(bad)
add
out
xchg
pop
jb
and
fdivr
push
in
shl
int3
mov
pop
mov
pushf
sbb
fmul
gs
adc
jg
cmp
inc
dec
fidivr
imul
leave
ins
mov
hlt
jmp
loope
push
mov
pop
add
scas
xor
outs
dec
loop
scas
xor
mov
and
sub
push
pop
xor
or
add
inc
fsub
adc
jp
dec
(bad)
push
mov
mov
repz
jge
stc
xchg
mov
adc
out
pop
cmp
int
inc
js
jmp
fisub
mov
inc
arpl
and
cmp
xchg
jne
sbb
stos
mov
test
pop
hlt
xlat
out
jle
inc
(bad)
in
adc
cmp
jmp
mov
(bad)
mov
mov
adc
xlat
and
push
ss
mov
jne
pop
stc
dec
(bad)
push
or
mov
add
mov
inc
pop
and
iret
ja
push
mov
cs
xchg
jmp
jmp
push
stc
push
and
addr16
sbb
xchg
hlt
or
div
imul
mov
call
sbb
mov
jg
ins
cmp
cmp
fdivr
aam
jo
std
dec
mov
cwde
xchg
fs
xlat
lea
sub
aaa
add
xchg
fmul
ins
sbb
xchg
mov
aad
xchg
cld
jecxz
mov
pop
mov
dec
int
into
xor
mov
push
pop
mov
xor
mov
cmp
aad
mov
out
xchg
(bad)
cwde
mov
cmp
je
mov
rcr
and
mov
sbb
lahf
cmps
dec
adc
or
rcr
cmp
sub
push
push
cmp
test
mov
push
cmc
sub
rcl
pop
adc
adc
mov
adc
sahf
inc
cwde
fwait
sub
xchg
jne
lods
mov
cmp
mov
adc
xchg
and
sub
pop
and
lock
fadd
mov
sbb
jmp
xor
jp
fcmovu
mov
fimul
outs
dec
cmp
mov
jmp
sar
xor
dec
or
push
fwait
adc
out
jp
leave
sub
rol
call
xchg
xchg
(bad)
jmp
add
mov
fistp
xor
das
ror
mov
cmp
push
jmp
inc
adc
xchg
out
mov
lahf
cli
inc
ins
mov
push
aad
outs
int
or
retf
push
push
jo
ficomp
add
jne
xor
jge
sub
pop
push
or
les
ds
in
icebp
xor
movs
dec
ds
jp
es
sbb
mov
dec
push
clc
adc
jg
adc
inc
xchg
fldenv
loopne
int
inc
push
fld
sub
inc
cmp
(bad)
aam
cld
mov
outs
movs
repz
in
jmp
(bad)
jecxz
jno
fwait
inc
cmp
(bad)
das
xbegin
(bad)
mov
push
icebp
adc
pop
std
mov
mov
pop
scas
imul
adc
ror
bound
inc
mov
sub
pop
(bad)
fisttp
xor
gs
and
cli
inc
pop
mov
cdq
adc
lods
xor
jb
rol
mov
pusha
or
xchg
xchg
rol
sub
sbb
call
mov
push
(bad)
adc
retf
jge
or
ret
bnd
cmp
add
sub
cmc
stc
(bad)
push
pusha
add
xchg
xchg
loopne
cmc
mov
call
call
not
retf
cmc
or
mov
mov
sub
popa
js
xchg
push
lods
sti
xor
ds
mov
inc
sbb
mov
inc
lea
shl
or
test
mov
movs
aas
add
push
xchg
cmps
adc
jle
jg
stos
fldcw
mov
inc
test
sub
popa
sub
xchg
stc
repz
imul
add
jmp
add
cdq
jbe
mov
je
in
or
jo
jnp
or
in
retf
lods
ss
ret
mov
scas
xchg
arpl
cmp
push
mov
or
test
lahf
sub
inc
mov
(bad)
adc
aam
sub
push
lods
add
mov
sbb
push
push
das
in
and
ret
das
push
fdivr
popa
lods
(bad)
xchg
mov
add
sti
(bad)
aaa
ja
add
jle
frstor
xchg
dec
sbb
das
int
cmps
push
pop
mov
addps
mov
xchg
mov
popa
and
xor
jg
(bad)
mov
jg
inc
sub
adc
(bad)
retf
sub
mov
push
pop
loope
sbb
xchg
icebp
sub
xor
imul
imul
iret
not
or
lds
mov
adc
ficom
push
pusha
fdiv
pop
call
lds
loopne
leave
jmp
dec
mov
pop
pop
mov
or
cwde
(bad)
xlat
popf
mov
cwde
push
inc
xchg
jbe
mov
push
icebp
sbb
es
mov
in
clc
movs
in
jmp
cs
sbb
jbe
xchg
mov
mov
stc
pop
or
mov
dec
mov
sahf
jmp
add
and
mov
scas
cmp
pop
dec
test
ror
fcmove
dec
cld
retf
scas
leave
popf
leave
and
ja
cli
cli
mov
push
add
iret
cmp
jmp
inc
or
push
dec
add
pushf
mov
mov
aaa
les
sbb
push
in
jne
mov
cmp
jae
inc
mov
inc
dec
mov
cli
dec
cdq
cli
das
out
popa
and
cdq
adc
or
fld
add
shr
push
pop
or
mov
neg
fmul
push
dec
mov
(bad)
cmps
sub
jae
and
xor
mov
push
ret
fldcw
push
popa
js
push
addr16
idiv
nop
ret
mov
aam
movs
mov
jl
mov
stos
scas
xor
jne
aas
popa
xor
sub
in
xlat
or
pop
aaa
es
dec
stos
stc
in
mov
push
jno
mov
push
das
dec
sbb
sub
mov
(bad)
in
mov
jecxz
rcr
add
adc
call
scas
xchg
(bad)
sub
push
enter
sbb
mov
rcr
stos
mov
ss
push
neg
icebp
jmp
sub
lods
sbb
sub
sub
xchg
ror
sbb
add
push
sub
aaa
push
jg
(bad)
int
fld
sti
loop
cmc
jle
fsub
push
mov
sub
call
inc
jmp
jl
adc
xor
(bad)
mov
fild
push
add
cmps
jnp
les
lock
inc
pushf
inc
push
adc
(bad)
mov
pop
rcl
push
mov
lods
test
jl
and
xor
ds
outs
dec
scas
adc
xor
mov
cmps
scas
xor
mov
in
inc
mov
stc
mov
cbw
cld
fwait
pop
dec
pop
adc
in
jge
jo
sub
xchg
(bad)
into
adc
and
lods
hlt
popf
adc
je
jmp
jecxz
rcr
in
bound
scas
inc
pop
and
movs
jp
fs
adc
faddp
std
sahf
punpcklwd
push
sub
jmp
add
popa
pop
sub
add
jecxz
xchg
jl
adc
cli
sub
and
into
movs
jmp
aad
adc
or
fidiv
sbb
sbb
xor
repz
jbe
shl
xlat
inc
push
(bad)
jb
xor
dec
daa
stos
jg
mov
idiv
data16
int
lods
xor
div
jb
retf
stos
dec
fnsave
ins
cli
fcomp
fmulp
sar
push
cmp
or
jo
add
mov
push
psubsw
push
call
es
frstor
lods
icebp
cmp
push
mov
cdq
ins
mov
hlt
push
mov
aaa
arpl
movs
mov
adc
pop
fwait
das
push
or
pop
xor
add
jl
sub
call
xor
ds
ror
push
adc
xor
dec
jmp
sbb
sub
mov
jo
mov
pop
mov
in
aam
mov
in
in
loop
push
sti
retf
pop
cmp
cmp
mov
mov
and
push
cdq
mov
jo
xchg
dec
mov
popf
std
sbb
sub
cmp
(bad)
jmp
les
std
pop
fsub
test
out
push
loope
pop
sbb
push
pop
lods
pop
call
ffree
scas
mov
sbb
call
in
in
pop
push
jnp
jne
call
inc
add
inc
les
outs
jae
add
rcr
(bad)
adc
inc
lds
mov
adc
cmp
clc
xchg
add
or
lahf
add
jmp
test
jb
ret
push
and
push
adc
push
push
sub
add
adc
cmp
out
xchg
or
xor
les
icebp
mov
adc
and
xchg
mov
jmp
dec
popa
not
and
ds
mov
rcr
jp
add
aad
sub
pusha
pop
dec
arpl
dec
mov
or
dec
push
call
nop
inc
mov
or
repnz
xlat
add
rcr
sub
cmp
and
arpl
cmp
stos
inc
jne
call
inc
xlat
and
retf
push
pop
mov
loope
adc
add
sub
leave
xchg
xor
jp
or
sub
push
sbb
js
xchg
jb
sar
push
mov
sub
mov
pop
int3
mov
add
ss
add
sbb
sub
repnz
xchg
xor
mov
adc
sbb
dec
mov
rol
pusha
ret
xchg
lods
dec
ror
push
imul
arpl
dec
test
push
mov
and
dec
gs
scas
sbb
mov
add
repz
fwait
pop
mov
xchg
adc
rep
imul
loope
add
mov
enter
adc
outs
imul
xchg
pop
retf
sub
mov
int3
xor
push
sub
sub
pop
cmp
sub
xchg
stc
shl
mov
(bad)
adc
fiadd
xlat
or
and
ins
or
cwde
mov
or
add
and
aam
mov
jno
sbb
inc
or
inc
push
icebp
xor
add
ss
lods
dec
pop
les
pusha
dec
(bad)
aad
and
dec
leave
mov
mov
mov
jmp
pop
xchg
mov
xchg
in
ins
mov
les
inc
cmp
xor
(bad)
xlat
or
inc
sbb
fidiv
or
rcl
adc
or
push
xchg
jp
xchg
dec
in
es
inc
mov
fcom
clc
xor
cmps
mov
jle
stos
pop
movs
mov
xchg
dec
fdiv
(bad)
pop
push
or
cmps
or
imul
xchg
data16
push
xchg
lea
mov
popf
movs
sub
in
xor
and
xor
inc
add
dec
inc
sbb
sub
sahf
xchg
push
adc
test
mov
lea
xor
push
or
imul
pop
mov
xchg
cdq
mov
push
xlat
pop
fiadd
mov
ss
push
inc
xchg
test
dec
and
inc
xor
lods
clc
xor
mov
call
mov
push
xchg
pop
pushf
push
aas
add
not
fwait
ja
pop
push
dec
ret
out
xchg
ficom
fisubr
loopne
ret
idiv
push
xor
cmp
(bad)
pusha
jno
lods
lods
and
fild
movs
or
call
test
movs
dec
push
dec
bound
imul
adc
dec
add
(bad)
test
xchg
sub
mov
dec
xchg
movs
dec
push
dec
mov
cmps
push
dec
(bad)
add
ror
push
test
adc
or
fcmovnu
push
lods
dec
call
xor
dec
aad
call
xor
mov
cdq
xor
sub
fcmove
rcl
stos
push
retf
arpl
adc
mov
jb
pop
adc
push
sub
call
es
in
mov
cmp
push
dec
or
dec
adc
in
adc
mov
mov
sub
add
dec
mov
cs
lds
cmps
aaa
call
shl
cmp
inc
sub
dec
jbe
cmp
outs
jecxz
in
ss
jns
out
mov
jg
popf
pop
inc
lock
sbb
add
or
mov
aaa
arpl
adc
ins
xchg
ds
arpl
cmps
mov
xor
ins
mov
jecxz
cld
enter
or
out
push
sub
mov
adc
sahf
inc
lods
test
pop
rcr
cmp
mov
mov
sti
out
sbb
ficom
in
adc
mov
mov
aaa
loope
rcl
pop
xor
out
movs
add
int
push
fistp
add
sahf
test
cmp
stc
sbb
xchg
xchg
iret
xor
xor
mov
mov
imul
js
cmp
(bad)
mov
mov
fiadd
lahf
xor
outs
div
jmp
mov
test
stos
or
ss
xchg
js
cmps
xchg
ret
adc
jo
xor
add
and
push
mov
xlat
inc
test
xchg
mov
mov
and
or
jns
clc
or
push
mov
xor
ss
fld
and
dec
retf
jl
cli
movs
jp
or
and
jae
jne
mov
outs
aad
adc
inc
sub
daa
jae
ja
jecxz
sub
add
test
call
ret
aaa
mov
mov
mov
jle
sub
out
lods
push
inc
or
xor
add
push
inc
pushf
sub
retf
push
lods
sbb
inc
sbb
xchg
or
aam
cwde
or
xchg
mov
mov
jns
mov
nop
rcl
pushf
arpl
mov
add
jecxz
int3
inc
popf
test
pop
daa
mov
push
inc
psraw
and
in
cmp
mov
pop
popa
je
adc
lock
xlat
out
dec
push
mov
mov
call
neg
pop
pushf
lock
xchg
jp
out
stos
sub
sti
jmp
add
sub
aaa
xlat
arpl
fstp
mov
mov
xor
std
in
inc
mov
add
ds
int
and
mov
dec
jne
in
and
xor
adc
push
cwde
push
mov
add
mov
pop
adc
push
pop
dec
pushf
push
movs
add
in
cli
dec
jle
add
mov
jnp
xchg
cmp
dec
ss
and
sar
ins
out
xor
jge
ret
dec
pop
scas
xchg
lock
int3
cmp
sbb
pop
mov
xor
mov
arpl
and
vcompressps
ror
les
iret
ss
and
adc
xchg
inc
mov
mov
mov
fdivr
xchg
adc
jge
jne
push
inc
jno
(bad)
push
call
jle
jae
dec
mov
xor
ror
xchg
shr
push
daa
jne
in
imul
xchg
sbb
loopne
add
(bad)
(bad)
retf
and
push
mov
xor
popf
cmps
xchg
inc
cmp
leave
loop
scas
cmc
jb
(bad)
fidiv
and
or
or
and
fwait
gs
sti
inc
(bad)
std
mov
mov
lock
xchg
jp
cdq
adc
sahf
not
clc
mov
mov
lods
mov
call
ror
in
stos
cld
je
add
push
xchg
jl
jecxz
push
pop
ja
mov
pop
lds
adc
sar
and
push
out
jne
adc
pop
xlat
pop
arpl
pop
gs
add
or
add
xor
mov
mov
imul
loope
fstp
cdq
mov
push
imul
mov
(bad)
mov
jmp
shl
push
sub
clc
push
loop
pop
mov
daa
sbb
push
aas
inc
push
push
pop
movs
sbb
xor
in
in
neg
jbe
scas
jmp
jae
cmp
sbb
in
retf
sar
or
mov
xchg
sbb
mov
xor
gs
push
add
lods
retf
mov
mov
mov
or
mov
rol
jnp
xor
cmp
and
or
(bad)
cld
push
jns
inc
shl
(bad)
mov
fs
scas
dec
push
rcl
cli
add
or
jns
xor
add
push
mov
ret
lods
scas
sub
popa
sar
(bad)
out
mov
mov
loop
mov
cdq
pop
inc
ja
popa
and
jnp
mov
jnp
push
adc
(bad)
dec
jmp
imul
int
stos
retf
add
sub
lock
in
cmp
push
inc
es
fbstp
xor
xchg
mov
jecxz
js
mov
sete
sbb
aaa
inc
xchg
shl
ror
pop
mov
jo
pop
repnz
mov
dec
sub
bound
or
mov
and
out
sbb
inc
das
js
inc
mov
inc
mov
call
jp
adc
mov
mov
into
inc
mov
adc
sar
push
push
and
(bad)
std
push
in
jecxz
lods
adc
bswap
in
retf
and
jno
js
nop
cmp
jge
lds
(bad)
jge
stos
mov
inc
mov
sbb
pop
fmul
repnz
mov
mov
sar
int3
fsubr
fidivr
rol
sti
adc
push
repnz
jo
(bad)
mov
dec
retf
(bad)
dec
or
jns
push
retf
es
icebp
mov
mov
cmp
not
and
movs
ret
cmp
push
gs
jne
pop
jnp
inc
sub
cmp
or
aas
push
rcr
sub
iret
in
sub
imul
in
fbld
mov
sti
add
sub
addr16
sahf
dec
retf
in
and
inc
pop
int3
das
je
xchg
or
adc
mov
add
push
sbb
sti
or
cmp
lods
dec
sbb
sub
sbb
mov
sbb
pusha
push
sub
sbb
and
ret
jb
ins
add
cmp
mov
int3
or
ja
mov
lds
cli
and
and
movs
mov
lea
mov
push
jle
(bad)
ins
cmp
aad
xlat
or
adc
xor
lods
nop
sub
pop
lds
test
or
movs
movs
jle
sbb
mov
push
lods
and
imul
popf
mov
sub
mov
sub
in
inc
out
daa
arpl
sbb
pop
in
in
mov
shr
jne
or
sbb
call
fist
jecxz
pop
xor
xchg
fisub
mov
mov
sbb
add
cmp
pop
sbb
in
and
jg
(bad)
jle
stos
adc
mov
lods
stos
dec
mov
out
mov
mov
xor
xor
fsubr
clc
cmp
and
xchg
pop
inc
jae
sub
mov
lods
ins
or
pusha
outs
and
adc
mov
sahf
imul
hlt
rcr
jb
popa
sub
xor
icebp
xor
je
xor
ins
ret
daa
jl
out
push
sbb
js
mov
adc
sub
xor
jno
fld
je
push
jmp
or
sbb
lods
es
ds
mov
mov
adc
dec
push
ins
and
cdq
loope
(bad)
(bad)
loope
mov
daa
jo
xor
iret
icebp
es
hlt
out
lea
out
scas
mov
adc
pop
or
mov
sub
jb
ins
push
jmp
or
ficomp
jae
out
out
out
inc
lahf
imul
test
iret
sub
cli
adc
scas
std
adc
aas
jns
mov
add
add
(bad)
jmp
or
jmp
call
jmp
stos
mov
mov
cmp
xchg
xor
inc
cmc
cmps
movs
jmp
mov
xchg
fcom
sub
fadd
jo
out
fwait
mov
xchg
jae
dec
dec
adc
sbb
or
rcl
mov
fwait
repnz
adc
loop
mov
push
dec
jmp
and
sahf
add
out
pop
jmp
shl
push
lds
clc
rol
mov
or
cs
outs
cmp
arpl
popa
mov
xor
test
jae
add
fld
je
mov
xchg
add
cmp
dec
leave
into
sar
ins
push
or
xchg
in
cli
xchg
nop
jg
mov
or
ja
movs
test
retf
mov
push
pop
fwait
int3
cmp
fsubr
sbb
enter
add
or
int
push
aad
cs
(bad)
int3
out
jp
sub
sbb
scas
jmp
out
pop
arpl
lahf
arpl
stos
mov
adc
retf
data16
mov
xchg
or
(bad)
mov
pushf
xchg
sbb
out
test
hlt
loop
pop
aam
mov
rcl
inc
cld
mov
pusha
xchg
daa
data16
mov
sbb
adc
push
pop
test
inc
bnd
out
mov
imul
pop
jg
xor
mov
fisub
or
add
(bad)
test
dec
pop
cmp
dec
mov
push
mov
in
imul
push
or
dec
and
sbb
gs
xlat
mov
mov
cmc
sti
fcom
retf
add
push
jmp
nop
movs
mov
addr16
je
fdivr
jmp
pop
repz
xor
push
xchg
xchg
fild
mov
in
pop
(bad)
sbb
inc
jg
cmp
shl
fadd
mov
jecxz
imul
loopne
jnp
jo
stos
push
imul
jne
cmp
jmp
and
aaa
mov
adc
popf
shl
(bad)
loopne
xor
lock
leave
sbb
adc
pop
dec
dec
mov
or
dec
fild
and
jbe
pop
adc
pusha
inc
adc
mov
sub
stos
pushf
mov
push
xchg
mov
stos
push
repnz
adc
test
mov
xchg
sub
repz
cs
xor
sbb
shl
sub
mov
inc
sub
jmp
cmc
movs
nop
mov
out
jmp
leave
sub
and
in
in
cmp
inc
pop
lods
mov
dec
pop
cld
push
data16
pushf
pop
push
jle
in
pop
inc
repnz
xor
idiv
mov
fisub
jle
add
int
xchg
mov
pop
mov
cmp
ja
das
sbb
ret
loope
arpl
sub
mov
pushf
movs
div
mov
and
imul
iret
cmp
je
sub
jb
xchg
cdq
adc
mov
cwde
inc
dec
adc
popfw
call
push
in
lds
mov
fsubr
ins
les
dec
xor
pop
mov
mov
pop
xchg
enter
xor
sub
jb
int3
jne
pop
out
cmp
xor
rcr
lea
dec
mov
push
not
xchg
rol
je
and
cld
lods
push
push
jge
nop
pop
pop
repnz
mov
push
mov
fwait
ret
call
push
sbb
inc
or
add
std
inc
adc
(bad)
push
test
pop
daa
and
mov
jbe
repz
mov
loop
or
pop
jmp
push
xchg
jno
jl
test
inc
scas
ret
inc
and
push
inc
into
lds
into
pushf
repnz
pop
call
fcom
aam
imul
fabs
push
test
js
add
adc
cwde
inc
shl
push
mov
test
je
mov
loop
(bad)
(bad)
push
sbb
imul
aam
sub
sti
pusha
pop
sub
test
pop
jecxz
mov
pop
push
fist
fdivr
jmp
mov
dec
sbb
dec
int3
adc
sub
sub
xchg
scas
nop
and
xchg
pop
in
clc
fistp
jmp
ret
or
or
ins
aaa
and
mov
sbb
retw
adc
and
or
aas
(bad)
in
xor
cli
enter
cmp
jno
adc
and
cwde
jno
aas
xor
add
xor
push
stos
out
inc
push
(bad)
bound
bound
mov
ins
push
in
test
cmps
push
or
shl
jae
enter
jae
xor
and
arpl
(bad)
test
icebp
mov
or
add
cli
ret
cmps
mov
dec
dec
inc
ss
hlt
mov
sub
arpl
aam
mov
jne
int3
jp
cmp
lods
xchg
mov
sahf
mov
neg
push
pop
jb
push
adc
xchg
push
cmps
sub
jl
sti
mul
mov
setnp
sub
mov
sbb
push
pop
sub
arpl
fwait
pushf
add
aad
cmp
mov
pop
dec
ret
sahf
stos
sbb
inc
in
xchg
adc
push
and
mov
xchg
xchg
mov
addr16
loope
ja
daa
push
push
mov
retf
inc
mov
lock
shl
pushf
push
jb
sbb
pop
add
lds
adc
fstp
mov
mov
sub
xchg
gs
add
xchg
enter
adc
xor
mov
test
repnz
jmp
xor
push
out
mov
mov
leave
out
cmc
push
mov
push
adc
and
or
adc
jle
mov
sbb
cmp
or
inc
neg
mov
test
lds
(bad)
mov
cmps
scas
movs
cmp
(bad)
mov
sub
fwait
call
lahf
aas
in
je
ja
out
out
aad
push
add
push
fmul
mov
retf
std
je
fld
in
(bad)
stos
dec
fwait
xor
and
sub
retf
sub
fcom
mov
je
test
push
inc
lock
dec
sbb
push
adc
pop
mov
sub
or
add
sbb
fcom
or
fs
in
call
jge
sbb
or
test
(bad)
push
jnp
shl
jmp
gs
ins
mov
xchg
int
dec
cmc
dec
or
jle
mov
fidiv
jns
outs
mov
mov
mov
outs
clc
retf
daa
fwait
add
fidivr
add
ins
lods
jae
mov
jp
add
dec
jo
jle
push
jno
or
shl
dec
xchg
cmp
jl
or
or
es
pusha
clc
xchg
mov
xchg
or
mov
mov
jmp
call
cmps
cmc
or
aaa
sub
call
repz
ja
inc
js
mov
mov
xlat
sbb
jns
bound
pop
xchg
xchg
out
or
faddp
stc
sbb
das
mov
sbb
inc
add
cli
addr16
jns
sbb
and
inc
frstor
aad
mov
ret
xchg
das
in
sub
pop
jne
pop
iret
sahf
aad
out
jb
loopne
ins
mov
ret
out
jecxz
inc
in
ret
std
(bad)
loopne
or
jae
mov
je
shl
(bad)
mov
pop
xor
loope
mov
sub
pusha
out
cs
and
sti
aas
fcom
div
addr16
in
jmp
pop
cld
push
sysexit
mov
sub
mov
imul
mov
daa
dec
mov
not
cmp
jle
sub
movs
test
mov
and
pop
out
cmp
sub
sub
shl
jno
or
movhps
scas
dec
dec
and
imul
(bad)
popf
in
cmp
adc
loop
lods
(bad)
cmps
dec
cmc
push
call
jge
test
fdivr
mov
adc
repz
push
fnstcw
or
jbe
pusha
jb
and
or
mov
scas
jns
ret
jne
mov
cmp
adc
push
dec
push
sub
jno
call
shl
scas
aam
ret
test
call
mov
xchg
push
pop
ror
mov
jne
push
cmc
fdiv
xchg
rcr
jne
retf
inc
adc
iret
rcl
push
cmp
xchg
popf
sub
push
imul
xchg
push
push
pop
cli
push
in
fisttp
sub
fist
mov
js
in
ja
cmc
scas
xchg
push
or
ins
cwde
mov
mov
pop
stos
daa
dec
inc
pop
js
in
push
jnp
rol
out
mov
fimul
in
dec
sbb
(bad)
ins
push
ins
push
sub
xor
cmps
das
mov
pusha
popf
mov
cmp
imul
(bad)
rcr
xchg
lods
daa
pushf
cmc
sbb
loopne
repz
pushf
xchg
fisubr
jle
(bad)
rol
bound
je
mov
sub
repz
retf
lds
push
push
aad
fsubr
xlat
sbb
pop
jecxz
or
pop
(bad)
fadd
retf
pop
popa
sahf
pop
outs
mov
xchg
fucom
enter
adc
cdq
sub
add
scas
jge
sub
stc
int3
mov
jnp
daa
push
stc
pop
push
cmp
mov
inc
jle
or
jnp
push
ficomp
popa
adc
iret
in
mov
aam
dec
xchg
and
ins
cmovs
push
test
gs
push
pop
call
inc
popa
nop
and
into
mov
ds
add
pop
and
rol
(bad)
fcom
popa
fadd
in
leave
leave
rcl
pop
add
inc
dec
scas
sub
(bad)
push
xlat
adc
aas
jmp
sub
bsr
jecxz
jno
mov
out
in
jecxz
add
push
jg
cmp
jo
in
pop
xchg
ret
or
dec
sub
test
dec
and
(bad)
xor
add
mov
jmp
sti
cmp
pop
mov
mov
pop
jns
das
sar
and
cli
pop
push
aad
jbe
push
in
push
cli
inc
lahf
mov
jmp
inc
sar
fld
xchg
retf
cmp
jmp
cmp
fisubr
sub
sub
mov
jle
stos
pop
jmp
and
mov
cmp
xor
setge
jmp
jmp
mov
mov
cmp
mov
jns
pop
push
xchg
jbe
mov
stos
adc
loop
gs
enter
push
inc
or
enter
fwait
xchg
out
clc
adc
sbb
test
pop
pop
mov
jl
add
mov
shr
sbb
(bad)
adc
and
ja
xchg
ret
sar
mov
lock
push
sbb
clc
fcomp
sub
xchg
std
data16
pushf
repnz
les
fwait
pop
mov
cmp
das
pushf
outs
pcmpeqd
or
in
adc
je
cmpxchg
ffree
mov
repnz
call
enter
and
adc
pop
fldcw
outs
jne
adc
mov
or
pop
xchg
test
es
sar
push
cmp
dec
xor
scas
(bad)
fild
cdq
sbb
out
xchg
neg
pop
xchg
jmp
lock
sbb
sub
lahf
call
sbb
ss
loopne
mov
and
aam
inc
loop
pop
cli
jp
mov
jl
test
test
pop
mov
jb
xor
jae
stos
jle
push
stos
fidiv
inc
or
fistp
mov
push
cmp
jge
jmp
mov
pop
add
outs
pop
in
or
daa
call
adc
fsubr
fisubr
jb
jge
pop
mov
int
jne
aas
aam
stos
mov
dec
cli
scas
and
cld
adc
retf
mov
ret
bound
xlat
mov
bound
mov
mov
pop
mov
adc
std
std
repz
cdq
mov
out
jp
fcomp
mov
pop
mov
mov
cs
dec
fisub
ret
pop
or
jae
push
in
mov
cmp
nop
not
fs
xchg
mov
or
jl
jae
jg
push
push
inc
ss
addr16
fmul
mov
sub
bswap
shl
xchg
jno
data16
inc
shl
cmp
fisttp
mov
aaa
fld
sahf
push
mov
and
and
mov
jne
mov
into
pusha
iret
in
add
out
mov
or
xor
jae
cdq
xchg
or
cmps
or
adc
mov
dec
imul
sbb
movs
add
jmp
dec
inc
movs
fisttp
fs
cmp
cdq
jle
cs
push
add
jp
mov
xchg
adc
cmp
sbb
inc
push
call
xchg
in
cli
inc
jno
outs
mov
cmp
lods
xor
test
out
cmp
adc
and
cli
add
retf
xor
(bad)
mov
imul
in
cs
cmp
xchg
jo
push
dec
(bad)
fimul
fst
xchg
sub
xor
ret
mov
mov
cmp
call
mov
scas
loopne
xchg
dec
push
jge
adc
dec
adc
lds
jne
ret
mov
push
push
rcl
call
sti
test
scas
jl
add
cmc
sbb
ins
and
push
push
xlat
fs
push
ins
scas
cmp
(bad)
pop
shr
imul
(bad)
(bad)
pop
fstp
cmp
(bad)
xchg
enter
arpl
outs
dec
dec
loopne
pusha
jns
scas
mov
dec
mov
ja
add
and
dec
popa
dec
fdiv
sub
movs
mov
hlt
int3
jmp
add
and
nop
call
loope
xchg
xor
or
(bad)
jecxz
dec
stos
jb
out
mov
mov
in
and
fsubr
or
loop
add
push
mov
leave
adc
repz
cmp
xchg
(bad)
jnp
sbb
or
in
test
xor
or
call
mov
and
xor
add
xchg
lods
leave
mov
fisttp
(bad)
cmp
jb
pop
pop
push
sbb
pop
je
cdq
ret
push
add
loop
pop
fwait
int
fidiv
inc
sub
xchg
mov
xor
inc
mov
movs
ins
mov
int
ins
push
sbb
add
shl
jl
or
in
aas
fdiv
jae
cmc
jmp
ret
mov
out
out
mov
stos
sbb
pop
cmp
cld
cmp
mov
aaa
xchg
jo
cmc
add
call
push
stos
inc
out
sub
mov
jmp
add
mov
mov
dec
dec
vsubpd
xchg
dec
push
inc
and
jmp
cmps
xlat
fcom
les
mov
mov
pushf
retf
push
shl
in
jg
xor
xchg
rcl
mov
daa
cld
adc
or
popf
das
loop
fucomp
inc
mov
addr16
cmp
rcl
sti
sub
loope
cmp
cmc
(bad)
loope
les
test
sub
add
je
inc
fs
test
ja
jp
or
aam
mov
xchg
xchg
outs
ja
enter
icebp
call
and
mov
mov
or
xor
mov
data16
imul
mov
xor
xlat
dec
xor
adc
ds
dec
jl
xchg
push
std
cli
call
jns
jmp
add
fld1
jmp
xor
mov
arpl
js
cmp
lock
(bad)
sbb
ins
scas
inc
mov
xor
cmp
sahf
in
mov
(bad)
fisttp
(bad)
popf
call
xchg
add
sti
ins
arpl
call
adc
fmul
pop
push
aaa
movs
fdiv
pop
cmc
retf
xor
retf
xor
sub
js
jge
inc
jb
psubb
pop
push
pop
or
test
out
or
mov
lods
pop
mov
lds
rol
ins
mov
add
xor
fild
jmp
dec
push
xor
movs
pushf
adc
and
dec
push
push
mov
add
iret
mov
fxch
fs
adc
movs
movs
xchg
call
xor
and
jne
sub
sbb
sub
and
or
mov
cdq
fisttp
xchg
jl
imul
loope
data16
call
xchg
(bad)
loopne
or
pop
and
inc
ret
in
jae
fisub
inc
stos
jge
ss
(bad)
mov
leave
cld
push
adc
arpl
dec
rol
loope
arpl
shl
pop
cld
adc
add
pop
rol
cmps
xchg
imul
(bad)
xchg
xchg
jnp
shl
inc
inc
or
xchg
adc
xchg
mov
scas
pop
jl
mov
xchg
sbb
jge
and
clc
sbb
imul
and
xchg
mov
popa
arpl
cwde
pop
adc
pop
into
fnstcw
fst
gs
jle
push
add
add
jae
out
in
imul
cmp
call
mov
ja
inc
pop
stc
fidivr
repnz
jle
out
sbb
push
pop
popa
xor
xor
sahf
pop
push
mov
arpl
jmp
cmps
jecxz
in
xlat
adc
addr16
out
sbb
push
int
cld
inc
adc
adc
bound
mov
push
cmp
loopne
cmps
ret
and
adc
ja
imul
mov
cmp
test
jp
xchg
cmp
movs
fadd
test
adc
loope
sub
dec
push
(bad)
retf
mov
pop
in
xlat
repz
retf
xlat
cs
lods
pop
inc
jl
mov
sbb
push
inc
enter
les
sub
and
xor
std
test
rcl
xchg
and
jno
jg
pop
mov
out
outs
xchg
cmp
ss
dec
push
ja
push
dec
lahf
cmp
mov
popf
dec
jb
das
pushf
sub
pop
idiv
imul
lea
adc
adc
es
dec
stos
mov
mov
adc
adc
mov
sub
add
enter
(bad)
test
sbb
dec
jp
lock
lea
jecxz
sub
sbb
or
icebp
hlt
xchg
and
gs
mov
ds
mov
out
push
sub
sub
xchg
loopne
sbb
ds
addr16
dec
pop
sub
xchg
cmps
in
pop
test
cmp
pusha
js
sub
leave
std
bound
call
and
jno
in
pop
mov
into
sbb
inc
push
jbe
and
inc
mov
mov
outs
call
sbb
mov
shl
pop
mov
and
cmp
out
add
mov
cwde
or
rcr
scas
ins
cs
stc
mov
jns
inc
iret
mov
inc
add
imul
mov
or
(bad)
mov
xor
lahf
mov
aad
push
sub
and
iret
mov
ja
leave
loop
pushf
in
ror
rep
rol
fucomi
jne
(bad)
xchg
cs
loope
sti
xchg
lea
mov
mov
pop
inc
ss
aaa
push
sbb
sti
xchg
pop
jno
std
push
hlt
les
pop
shl
or
inc
test
sbb
or
or
aam
dec
cmp
rcr
inc
inc
cdq
dec
imul
test
cld
call
mov
cwde
sbb
cmp
in
mov
push
movs
jae
xor
xor
adc
idiv
push
mov
and
mov
push
sub
inc
sar
xchg
adc
les
xchg
(bad)
repz
das
dec
mov
add
mov
out
dec
pop
sbb
imul
dec
imul
pop
or
imul
rcr
sti
adc
mov
iret
sbb
pause
mov
outs
pop
int3
imul
push
cs
push
(bad)
popf
cmp
add
aaa
or
je
aam
pusha
push
xchg
das
add
imul
push
sbb
clc
and
nop
fstp
je
lods
sbb
jmp
out
jo
cmp
inc
push
call
mov
pop
push
add
push
dec
daa
and
into
jge
sar
xor
inc
dec
mov
push
lods
jo
outs
xchg
adc
sbb
test
sbb
aas
inc
test
test
ret
adc
hlt
rcr
pop
pop
or
mov
pop
sbb
push
fst
mov
lods
pop
mov
and
in
js
imul
lds
xor
rcr
mov
mov
jbe
arpl
popf
stc
cld
ins
ficomp
adc
pop
or
pop
mov
cmp
cmp
cmp
loopne
dec
scas
mov
pop
pushf
out
scas
sbb
loopne
pop
shl
and
adc
cs
std
xlat
dec
cmps
cmp
lds
fiadd
fwait
je
call
inc
jmp
cwde
shl
sub
loopne
mov
(bad)
jg
sub
daa
cmp
ret
int3
adc
inc
pop
adc
push
xchg
and
mov
test
sbb
mov
ins
or
mov
jg
test
adc
xchg
cmp
movs
ss
retf
add
dec
div
cdq
stc
pop
adc
mov
xchg
push
rcl
or
xlat
out
pushf
enter
or
repnz
inc
add
(bad)
pop
and
push
pop
ds
mov
cdq
(bad)
rcl
(bad)
or
mov
imul
pop
pop
lock
mov
inc
and
pop
sahf
xchg
sbb
aam
lahf
fdiv
add
sub
adc
sahf
not
scas
sbb
(bad)
push
(bad)
and
int3
dec
pop
push
push
shl
into
xchg
adc
js
pop
mov
shr
push
(bad)
lea
stos
jp
lahf
leave
push
dec
mov
cmp
dec
mov
adc
hlt
xchg
test
mov
cmps
cmp
push
stos
sub
(bad)
js
stos
lock
dec
sbb
icebp
daa
inc
mov
sbb
aam
push
sbb
pusha
call
jl
aaa
sbb
or
push
mov
scas
push
sub
mov
lock
nop
ret
mov
mov
xor
into
aaa
rol
sar
cs
pop
imul
inc
cli
jne
xchg
jp
xor
push
adc
test
xchg
adc
add
ret
movs
(bad)
adc
sub
mov
fmul
lods
adc
pop
push
jmp
inc
data16
pop
ficomp
cmp
pop
into
jns
cmp
imul
xchg
inc
add
data16
loope
cmps
lods
xchg
daa
push
sti
call
mov
or
std
pop
cs
and
ror
cmps
cli
lahf
sub
sbb
cmp
in
in
fsub
dec
call
inc
add
sbb
(bad)
mul
lahf
push
dec
je
out
mov
mov
ss
ja
cmp
cmp
arpl
jge
jne
fwait
pusha
mov
les
sti
jns
pop
scas
stos
into
cmp
xchg
aas
stos
sub
loop
inc
jbe
repnz
sbb
add
(bad)
frstor
mov
push
int
popf
or
(bad)
js
pop
xchg
dec
cli
shl
adc
add
in
jp
arpl
fcomp
lods
and
sub
enter
push
int
enter
js
mov
fsub
sub
push
lahf
xchg
cli
cmp
sbb
jmp
gs
iret
movs
pop
sbb
xchg
ret
mov
daa
or
and
sub
inc
cmps
pop
sar
outs
mov
xchg
and
adc
call
xchg
dec
cmp
pop
inc
adc
lock
jae
call
(bad)
clc
stos
and
retf
aad
ins
aas
ficom
in
xchg
arpl
push
mov
mov
push
psubsb
pop
pop
jnp
out
ins
pop
jle
mov
and
popa
fs
xchg
jnp
fcomip
sub
sahf
int3
xor
jg
repnz
jl
xor
jmp
pushf
icebp
dec
ret
(bad)
mov
shl
aas
ret
leave
arpl
clc
dec
fdiv
pop
repnz
mov
clc
outs
add
loop
pop
call
cmp
mov
ret
dec
pop
fisttp
std
or
mov
and
std
imul
fbld
je
sti
retf
xchg
ins
jb
mov
mov
in
cmp
popa
push
sbb
or
in
adc
cmps
xlat
push
cmp
leave
stos
addr16
fisttp
in
bound
aad
and
outs
test
cmp
mov
pop
jp
nop
mov
adc
mov
dec
pop
cmp
cmc
leave
xchg
mov
dec
movs
add
movs
dec
ins
popf
adc
retf
daa
pop
inc
jp
es
je
mov
sbb
cmp
dec
push
lods
sbb
push
jns
push
jmp
test
pop
xchg
test
jnp
lahf
adc
in
ud1
mov
aam
aad
les
mov
mov
(bad)
popa
cmps
add
pop
inc
and
retf
popa
jp
mov
movs
inc
mov
pop
sti
cmp
out
out
sbb
push
mov
jge
aaa
add
dec
pushf
adc
lahf
in
mov
movs
mov
in
loopne
cmc
sbb
ins
jnp
loopne
jmp
pushf
mov
sub
add
jns
lock
mov
mov
es
out
xor
ds
test
push
cmps
aad
ret
jbe
(bad)
int3
pop
stc
jge
ja
mov
popf
(bad)
mov
stos
ja
scas
mov
and
mov
not
shl
push
lods
ret
jl
push
retf
clc
in
xchg
nop
inc
and
inc
fld
mov
or
lods
arpl
sahf
movs
lods
movs
call
stc
cmps
dec
xchg
ins
cmp
jmp
test
mov
push
jbe
test
xchg
jmp
fs
pusha
push
or
movs
push
and
aad
and
jl
sub
das
nop
rol
add
adc
sti
outs
or
mov
jl
or
fbstp
das
push
fdivr
cld
jecxz
jae
pop
jae
sti
jae
bound
inc
gs
sti
bound
xor
mov
mov
push
clc
xor
pop
out
pop
(bad)
jmp
dec
xor
scas
pand
lahf
push
gs
mov
stos
adc
xor
add
das
adc
xor
in
(bad)
(bad)
jnp
jle
(bad)
jle
ins
dec
mov
xchg
jecxz
inc
mov
aaa
rol
mov
mul
outs
mov
cli
xchg
rol
mov
xchg
mov
rcl
or
iret
sub
xchg
call
mov
fidiv
rcl
dec
mov
sbb
or
mov
push
mov
les
repz
mov
cmc
(bad)
out
push
adc
out
cli
xor
(bad)
dec
test
arpl
mov
icebp
outs
mov
in
sbb
xchg
pop
mov
or
push
(bad)
pop
xor
iret
mov
dec
dec
adc
les
outs
inc
or
jns
and
test
daa
mov
jns
js
dec
jmp
or
inc
mov
icebp
popa
getsec
ins
mov
cli
inc
xchg
jl
enter
pop
dec
ins
mov
call
push
data16
mov
pop
div
cmc
push
vcomisd
cmp
jmp
loop
dec
xchg
jle
push
sub
mov
pop
jle
out
repz
in
ins
adc
sbb
ds
je
and
stc
in
sbb
test
or
adc
lds
fimul
clc
loopne
jle
inc
push
mov
mov
fiadd
cmp
jle
inc
retf
xor
cmp
sahf
add
les
jmp
jbe
rol
test
mov
leave
pop
aaa
adc
fist
sbb
rol
ds
push
xor
aas
test
fcmove
adc
fs
xchg
aam
test
dec
aad
and
inc
addr16
in
stos
pop
or
adc
pop
test
dec
inc
jmp
shl
jns
or
sub
adc
enter
mov
add
mov
dec
test
(bad)
cmp
cmps
xor
jmp
hlt
jge
mov
adc
fistp
sbb
inc
aad
xchg
jmp
fistp
push
xchg
out
aas
lahf
sbb
inc
fidivr
bound
test
push
push
or
(bad)
mov
lea
inc
jmp
add
pop
dec
stos
outs
(bad)
dec
sbb
in
mov
clc
ins
or
imul
imul
mov
imul
cmc
cmp
add
push
mov
stc
sbb
dec
sbb
mov
xchg
ins
jo
loopne
mov
or
add
gs
adc
daa
mov
mov
dec
test
add
sbb
dec
and
mov
(bad)
hlt
bound
cmp
and
inc
cmp
xchg
adc
xchg
movs
adc
in
mov
mov
mov
or
sahf
stc
and
adc
mov
xor
jmp
adc
stos
fdivr
sahf
test
jb
out
fdivr
mov
and
xchg
lods
mov
in
std
outs
loop
mov
je
(bad)
fidivr
and
in
popa
cmc
out
lahf
fild
sub
push
(bad)
add
mov
xchg
jg
or
mov
adc
sub
sub
cmps
es
jno
push
hlt
pop
dec
iret
loope
(bad)
sbb
mov
cmp
mov
sbb
mov
ss
(bad)
mov
mov
sbb
(bad)
jl
mov
push
cld
sbb
sahf
je
cmps
paddusb
inc
and
jl
cs
sti
clc
test
xchg
fisub
fstp
sbb
lea
jne
or
pop
add
push
stos
je
cmc
adc
jne
loop
add
and
ja
cli
mov
jo
adc
sub
jge
fisubr
mov
mov
es
jbe
repnz
fidivr
mov
jae
dec
repnz
push
aaa
dec
push
or
lahf
mov
movs
leave
jle
jbe
aaa
scas
out
scas
data16
xacquire
adc
mov
or
xor
mov
les
pop
mov
pop
mov
cmp
clc
dec
ret
push
clc
adc
cmp
inc
and
(bad)
inc
fs
cmc
cli
outs
inc
pop
and
or
inc
lds
mov
les
mov
sti
fisubr
mov
mov
and
pop
lods
jmp
aas
(bad)
dec
adc
dec
sbb
adc
in
aaa
pop
out
jmp
xchg
test
mov
jle
sbb
and
out
xchg
dec
push
iret
ja
push
retf
mov
into
cs
cmp
pop
(bad)
jbe
jecxz
and
lds
xchg
aam
and
xor
adc
test
cmps
sbb
mov
xchg
or
clc
ds
dec
icebp
mov
mov
in
xor
ss
(bad)
(bad)
loope
adc
aam
or
inc
shr
add
mov
adc
sub
rcl
sbb
mov
pushf
xchg
adc
cld
iret
arpl
push
pop
mov
lods
lds
dec
adc
mov
adc
adc
popa
sub
cwde
rcr
cdq
and
inc
pop
arpl
pusha
dec
sub
jle
mov
clc
outs
iret
pusha
fimul
out
add
fadd
mov
stc
jo
in
(bad)
jno
lods
stc
rol
cmps
leave
lods
arpl
shl
pop
call
ret
mov
data16
fidivr
or
hlt
mov
dec
push
aas
in
rcl
push
(bad)
outs
bound
imul
bound
(bad)
xor
xor
sub
push
cmp
pop
or
cmp
jg
(bad)
pop
out
(bad)
xchg
cmp
dec
movs
mov
pop
mov
sub
dec
or
xchg
xchg
pop
jp
rcr
or
dec
mov
test
in
addr16
shl
sbb
cmc
scas
ret
xor
mov
and
bound
icebp
lods
inc
mov
call
sub
sbb
push
xchg
or
add
jne
stos
(bad)
mov
retf
(bad)
or
data16
pop
idiv
push
xchg
neg
sahf
cmp
(bad)
stos
cwde
fild
mov
hlt
adc
test
fadd
mov
cmp
sbb
push
sub
push
pop
sbb
rcr
pop
add
add
or
push
shl
or
pop
mov
cmp
cmp
jmp
dec
pop
jge
jbe
xlat
mov
mov
jbe
mov
jge
xchg
pop
sbb
cwde
jg
pop
or
ja
loopne
fild
lods
imul
int3
xchg
das
call
stos
gs
ror
mov
xchg
ror
(bad)
std
or
or
push
add
cmp
jmp
fist
inc
cmp
mov
push
test
xor
ret
inc
mov
test
mov
aas
jge
sbb
loope
jp
or
xchg
lahf
push
adc
pop
stos
je
mov
xor
bound
lods
shl
int3
sahf
(bad)
push
sbb
jmp
jge
ficom
and
mov
add
push
(bad)
push
sbb
fwait
out
or
xchg
scas
daa
or
jmp
xor
rcr
les
scas
out
jnp
cmp
les
jno
pop
jbe
out
xor
mov
pop
dec
inc
rcl
test
sbb
cmps
or
pop
js
or
xor
jge
mov
fwait
dec
cmp
sub
clc
shl
sar
push
xor
mov
in
pop
inc
aas
mov
mov
push
pop
jbe
scas
pop
mov
push
cmp
sti
sbb
daa
xor
gs
ret
dec
inc
push
inc
pop
ja
mov
mov
test
push
cdq
shr
cmc
xor
mov
pop
ins
iret
jmp
jge
mov
pop
sub
inc
lock
das
mov
dec
pop
mov
jg
pop
sub
xchg
test
lock
xor
jmp
add
push
adc
push
adc
mov
aam
shl
daa
jge
add
addr16
jge
sbb
pusha
sar
pop
into
cli
mov
xchg
mov
inc
test
jno
sbb
hlt
jno
push
retf
scas
xchg
ret
int
add
inc
mov
fmulp
mov
cli
push
(bad)
cs
jmp
and
inc
mov
fwait
icebp
push
mov
mov
jbe
fmul
sahf
call
push
mov
imul
idiv
ror
push
jbe
xchg
sbb
mov
hlt
imul
inc
push
xlat
or
jecxz
ficom
nop
rcr
out
mov
mov
mov
pop
mov
out
adc
jne
mov
shl
and
cld
les
sub
xchg
movs
fistp
retf
xor
xchg
dec
push
gs
imul
dec
data16
pop
jge
ret
fisttp
iret
test
push
push
ins
xchg
stos
push
push
jnp
das
inc
fbstp
inc
pop
in
in
push
pop
pop
int
in
das
dec
cli
scas
pop
mov
fucomi
leave
lahf
cmp
test
dec
mov
jnp
arpl
ins
inc
xor
or
dec
fmul
cwde
inc
dec
lods
mov
inc
movs
and
fdivr
cmps
sti
sti
add
xor
xlat
mov
cmp
xor
cmp
cmp
adc
mov
jno
loope
inc
ficomp
ja
or
retf
shl
(bad)
mov
sbb
cli
out
adc
cmp
fcomp
popf
in
add
xor
push
jbe
ror
lds
jle
jmp
and
icebp
jns
pop
(bad)
dec
imul
fsubr
cmp
mov
push
loop
shl
dec
fcom
and
cs
int
adc
inc
adc
es
inc
mov
rol
les
ds
dec
xor
imul
movs
push
ret
push
sbb
fist
fistp
mov
cdq
jp
xor
out
add
adc
stc
lods
in
pop
test
ins
inc
sti
mov
mov
les
xchg
xchg
cdq
(bad)
pop
fld
mov
mov
in
daa
sbb
fstp
jmp
jmp
out
sub
add
mov
jp
adc
rcl
fistp
jmp
sbb
sbb
cs
mov
push
pop
in
cld
je
ins
mov
mov
jne
mov
lock
jl
xchg
dec
test
retf
rcr
inc
jl
sub
inc
iret
xlat
div
sub
jne
lahf
adc
fistp
cmp
gs
push
pop
jbe
ins
call
or
jo
into
mov
push
in
push
inc
mov
adc
fsub
sbb
xchg
pop
mov
rol
add
push
dec
sub
or
jne
adc
mov
mov
pop
(bad)
rcl
and
mov
(bad)
bound
lock
sbb
movs
xchg
mov
cmp
fmul
cmp
mov
sub
fsub
cmps
pusha
cmp
xchg
push
mov
loop
fdivr
mov
jecxz
xchg
cld
xchg
or
in
xchg
dec
push
add
iret
test
mov
pop
mov
add
jmp
push
repnz
or
outs
les
test
fld
push
xchg
loopne
add
xor
add
add
arpl
jl
inc
inc
push
push
ror
ficom
lahf
push
mov
dec
(bad)
fadd
outs
adc
inc
cmp
xor
cmp
jge
daa
inc
push
adc
jns
out
inc
pop
dec
cmp
(bad)
cmps
(bad)
and
mov
jne
push
xchg
std
jne
into
aad
mov
sbb
into
lods
pusha
pop
cmp
arpl
movs
daa
cs
jp
arpl
cld
mov
or
stos
lahf
inc
je
jl
add
je
jbe
mul
fmul
in
and
and
pcmpeqb
mov
xchg
cmc
in
jno
mov
bound
jbe
sbb
outs
add
out
add
mov
mov
mov
lea
enter
dec
adc
push
(bad)
retf
fcomip
fcom
push
xchg
mov
bound
inc
sub
cs
mov
popf
add
and
push
inc
push
fist
mov
pop
mov
pop
adc
sbb
sar
mov
lock
sahf
aam
fisub
cmp
mov
lahf
popa
sub
std
fisttp
test
lds
cmps
(bad)
in
fnsave
jle
movs
sbb
lea
add
loope
or
call
sub
and
mov
push
mov
xrelease
inc
(bad)
cmp
add
sub
test
test
dec
push
push
mov
lds
adc
jp
test
movd
mov
jl
ss
cmp
icebp
pop
rcr
cwde
out
push
xor
test
inc
js
adc
dec
loope
popa
pop
and
push
push
movs
imul
loopne
and
or
inc
shrd
jbe
stos
xchg
stc
fs
stos
xchg
jp
aad
fmul
out
aam
fbld
inc
dec
in
sub
adc
fmul
(bad)
cmp
mov
push
add
repz
jmp
and
xor
and
xor
fwait
pusha
pusha
push
jnp
mov
lahf
pop
dec
sub
fdivr
test
shl
xchg
pop
fstp
cmps
fstp
jbe
jmp
mov
dec
xchg
add
add
push
cmc
cs
mov
jbe
adc
mul
and
add
scas
or
mov
fstp
inc
adc
add
and
push
leave
into
shr
push
mov
pop
stc
aad
div
pop
ins
out
lods
ds
cmp
add
mov
push
xchg
fcom
stos
jmp
add
push
iret
mov
xor
dec
add
outs
mov
data16
mov
std
mov
shr
jmp
push
cmc
mov
sub
out
je
sahf
and
movs
xor
dec
inc
xchg
cmp
cmp
(bad)
mov
dec
push
int3
mov
dec
mov
and
pushf
movs
in
xchg
xchg
cdq
iret
and
adc
dec
cmp
iret
loopne
sbb
and
retf
jecxz
jmp
jg
ret
dec
ins
fstp
cdq
xchg
mov
jo
fisttp
(bad)
xor
(bad)
mov
repz
les
push
mov
add
push
inc
dec
(bad)
fld
and
int3
(bad)
mov
ins
xor
add
xchg
imul
sbb
repz
imul
xlat
push
mov
pop
fld
jg
fcom
mov
sti
pop
or
pop
test
loopne
mov
(bad)
mov
pop
int3
pop
adc
shl
or
es
jge
mov
dec
ja
imul
rol
mov
loopne
icebp
push
cmp
jb
sub
sub
fdivr
add
pop
(bad)
(bad)
jl
dec
mov
popa
cli
les
push
xlat
cwde
and
mov
test
cmp
mov
retf
xchg
fs
mov
pusha
push
ret
mov
div
jbe
or
mov
or
mov
xor
repz
aas
xor
push
(bad)
cmp
pusha
out
rol
adc
xchg
jbe
mov
test
push
dec
outs
jg
jns
scas
cli
mov
mov
sub
in
push
retf
mov
xor
sbb
out
xchg
jl
cwde
ror
rcl
and
jmp
ret
mov
(bad)
adc
mov
cmp
cwde
fmulp
fidivr
ins
inc
adc
and
in
push
add
cmps
and
or
inc
fstp
push
fwait
lods
and
sbb
stos
dec
sbb
mov
dec
daa
scas
push
jnp
dec
mov
or
lods
or
add
pop
and
das
mov
pop
enter
add
shl
lea
ja
out
js
test
js
loop
sub
and
pop
lods
xor
cmp
call
inc
sbb
aaa
test
push
xor
loope
and
fucomp
adc
loopne
xchg
jmp
dec
mov
and
jne
(bad)
sbb
loope
cli
cmp
aaa
jo
aam
sbb
jl
sbb
rcr
(bad)
cmp
leave
rcl
popa
iret
sbb
xor
(bad)
pop
test
push
push
push
stos
pop
adc
sar
xor
std
adc
push
jge
loopne
in
sub
loop
mov
mov
jae
movs
and
enterw
mov
jb
mov
sti
cmp
xchg
cmp
push
std
lods
jle
fdivr
(bad)
repz
mov
fwait
dec
xchg
xchg
shl
xchg
sub
cli
(bad)
add
or
xchg
sar
cmp
add
adc
sbb
dec
sbb
xchg
inc
jb
daa
xchg
dec
loop
mov
mov
jne
pop
stos
cmp
sbb
xor
sbb
(bad)
fadd
fs
int3
or
out
cwde
cmp
fstp
pop
shl
jle
dec
stc
cwde
and
xchg
fistp
sbb
xor
mov
push
fcomp
mov
and
or
xor
fadd
jae
imul
and
arpl
cmps
pop
inc
push
push
mov
fldcw
add
rcr
pop
mov
inc
retf
add
dec
push
imul
or
data16
pop
cwde
xchg
push
mov
cmp
movs
fmulp
cli
pop
dec
xor
loopne
adc
fbstp
pop
imul
call
inc
add
bnd
mov
inc
into
movs
push
inc
and
push
js
fnstenv
add
mov
push
lods
inc
jge
scas
adc
jmp
sbb
jmp
fs
jle
mov
cmc
xor
mov
inc
pop
lods
mov
push
push
hlt
test
lds
xchg
or
popa
and
cmp
sbb
mov
outs
inc
pop
les
jmp
pop
movs
mov
mov
mov
mov
push
inc
mov
xor
cmp
pop
fldenv
mov
movs
inc
in
jb
(bad)
xchg
js
rcr
add
out
addr16
inc
inc
or
jo
imul
fmul
ds
inc
xchg
mov
addr16
jbe
call
inc
mov
(bad)
das
lods
dec
out
push
clc
push
jmp
mov
in
or
xor
jecxz
mov
popf
(bad)
and
in
(bad)
in
dec
out
inc
add
in
and
hlt
fs
outs
popa
push
pop
mov
push
lods
out
popf
stc
fistp
xor
dec
mov
or
mov
adc
xchg
aam
dec
movs
push
or
cdq
imul
mov
inc
stc
xor
xchg
pop
jl
imul
mov
adc
cmp
pop
push
push
in
mov
push
or
popf
jp
pop
leave
pop
retf
out
mov
pop
nop
cmp
xor
rcl
adc
xor
je
gs
sbb
and
es
dec
idiv
lahf
outs
dec
sahf
mov
xchg
loopne
mov
repnz
add
ds
mov
lds
mov
fisub
outs
clc
jbe
ja
fs
jge
sub
mov
movs
pop
adc
mov
lahf
jle
jo
jb
fadd
out
and
fmul
push
inc
xchg
ja
adc
lahf
sbb
mov
pop
sub
xlat
xchg
fidivr
sbb
neg
or
jnp
pop
enter
lahf
jle
jae
cs
mov
rcl
sub
mov
or
loopne
add
aas
std
lahf
jo
hlt
or
std
popa
push
shr
lahf
cwde
mov
jecxz
test
push
inc
jno
fld
xor
ds
outs
loopne
jb
jne
sar
pusha
unpckhps
and
mov
xchg
push
repnz
adc
mov
push
or
scas
add
add
cmps
enter
push
jns
xor
sbb
pop
sbb
hlt
dec
xchg
leave
jno
aad
and
jp
enter
ds
jle
mov
or
cmp
adc
daa
add
leave
cmp
and
popa
add
loop
xchg
push
xor
mov
jnp
ficom
lds
fldenv
jge
cs
push
repnz
push
mov
cmp
call
fimul
xchg
sti
jge
mov
xchg
getsec
adc
test
imul
or
(bad)
jmp
dec
sub
fbld
mov
jno
movs
shl
jno
fisub
adc
or
loope
jge
sub
jg
fnstcw
jbe
push
sub
xor
adc
call
dec
jns
(bad)
frstor
nop
les
je
pop
pop
and
add
adc
push
push
aam
pop
aas
or
inc
mov
pushf
mov
pushf
mov
adc
mul
ins
jmp
mov
sub
mov
test
push
jp
mov
xchg
sbb
jle
ja
inc
enter
push
lods
xchg
test
fnstcw
shl
adc
outs
imul
mov
pushf
imul
and
add
xchg
in
retf
fcmovnbe
movs
add
push
jns
popf
and
(bad)
mov
add
push
in
(bad)
push
imul
sahf
inc
mov
xor
inc
add
sahf
xor
mov
hlt
add
outs
leave
jecxz
push
bound
leave
push
dec
jnp
xor
hlt
adc
mov
out
sub
mov
cs
fdiv
inc
mov
inc
gs
nop
pop
daa
fmul
loope
test
xor
imul
inc
add
or
test
pusha
pop
dec
cmp
push
jecxz
loopne
mov
sub
imul
mov
shl
and
sbb
adc
push
xchg
and
jge
xchg
and
xchg
fisubr
push
popf
sbb
mov
dec
mov
pop
add
neg
ret
add
jecxz
mov
or
push
ret
or
outs
mov
lahf
mov
mov
enter
retf
inc
fnstcw
test
and
mov
cmp
addr16
data16
sbb
test
sbb
out
test
stos
(bad)
std
in
daa
push
(bad)
mov
(bad)
xor
sub
or
cmps
shl
pop
push
jmp
sub
lds
pop
std
repnz
or
dec
adc
add
or
neg
or
or
hlt
addr16
jb
or
imul
inc
inc
aaa
cmp
xchg
pop
loope
movs
jns
pop
div
or
push
icebp
fs
iret
test
cmp
xchg
clc
adc
push
loopne
add
mov
or
xor
xor
mov
pop
sbb
push
adc
mov
dec
pop
cld
add
push
push
or
mov
sbb
outs
jecxz
outs
sub
jle
shl
mov
in
jge
sub
dec
jbe
sub
popa
push
jp
lahf
daa
and
retf
not
ins
aam
jecxz
push
adc
pop
arpl
sub
ror
js
sti
test
cld
jecxz
cld
call
adc
xor
lods
inc
or
dec
lock
pop
push
mov
mov
pop
inc
cmp
fdiv
fadd
xchg
aad
or
jmp
imul
loope
push
xchg
dec
lds
dec
xchg
sub
loope
fstp
leave
fist
mov
gs
add
dec
and
mov
jns
arpl
inc
cmp
out
outs
sbb
xchg
dec
dec
test
sub
sbb
cmp
popf
pop
adc
ret
add
test
popf
xor
mov
in
out
adc
ret
mov
dec
sub
fwait
sbb
aaa
(bad)
mov
jge
movs
and
adc
(bad)
(bad)
aam
or
pop
nop
out
ja
sahf
lds
jae
jbe
fwait
and
test
sub
inc
inc
pop
fcomp
jl
fst
(bad)
call
mov
push
pop
sahf
imul
and
pop
inc
ds
adc
or
and
and
rol
fnstsw
dec
or
fsub
loop
rcl
fsubr
test
pop
ins
mov
push
(bad)
sahf
cmp
aam
inc
in
xchg
mov
dec
jmp
xchg
cmc
ins
and
sub
imul
vaddsubpd
push
int
ret
fucom
xchg
mov
and
lock
mov
mov
lock
adc
pop
ss
xor
push
push
cmp
push
lock
repnz
sahf
push
aaa
dec
movs
xchg
inc
test
mov
lahf
clc
out
sub
push
inc
dec
and
outs
retf
add
fwait
sbb
mov
inc
dec
inc
cmp
repz
pop
xor
inc
lahf
pop
dec
je
scas
cmps
ins
out
(bad)
push
mov
mov
push
cld
shr
add
mov
or
xor
push
cmp
ficom
aaa
sub
dec
or
mov
sub
test
icebp
out
inc
je
lods
xchg
hlt
cld
push
stos
jno
std
rcl
or
cmp
dec
mov
jl
dec
out
or
pop
mov
add
xchg
sub
shl
cmp
call
push
sub
xchg
pushf
(bad)
jno
mov
jmp
cmp
iret
mov
arpl
sub
mov
sub
out
add
mov
out
aam
lock
push
xor
or
(bad)
outs
lds
out
xor
push
les
xor
cmp
jnp
sbb
xor
add
adc
pop
sub
fcomi
xor
inc
sar
cs
push
rcl
cmp
push
sbb
or
mov
sbb
fdiv
daa
add
repnz
(bad)
sub
fist
ja
push
cmp
(bad)
fstp
or
out
in
ret
push
addr16
xchg
sub
jb
sbb
ret
and
push
test
mov
cdq
pop
addr16
jecxz
or
pop
(bad)
xchg
push
jns
push
inc
clc
sub
add
mov
loopne
pop
jge
add
jle
ja
arpl
sub
jae
xchg
jo
loopne
mov
mov
jbe
push
(bad)
cmp
nop
adc
int3
shl
sti
xchg
clc
xlat
adc
add
dec
inc
add
stos
push
jnp
sbb
ja
pause
in
cmc
push
out
sar
in
scas
pop
push
lock
fwait
add
or
push
ret
xor
int3
mov
rcl
bswap
(bad)
cmc
mov
lock
pusha
xchg
les
cmp
push
retf
lock
dec
adc
enter
add
ja
sub
mov
xchg
adc
jns
inc
or
fcmovu
sbb
jl
cdq
js
add
inc
sbb
inc
or
push
out
add
mov
jo
and
in
loop
mov
pop
movs
popa
or
ja
add
repz
xor
dec
adc
ja
push
push
mov
loop
neg
out
or
cmp
fsubr
daa
jbe
mov
jg
add
pop
call
jl
sbb
outs
adc
or
pop
add
in
xchg
pop
cs
leave
push
fisub
lods
aam
mov
jmp
jae
dec
or
lds
seta
fcmovb
add
ds
rol
push
loopne
push
mov
clc
sbb
add
lea
pop
and
loopne
fcomp
mov
and
mov
xor
adc
dec
or
test
test
xor
cmp
pop
test
push
or
out
and
ja
rcr
and
and
mov
xor
imul
fsubr
js
lahf
cmc
cmp
dec
xchg
xchg
mov
adc
iret
or
call
ins
aad
mov
js
dec
ret
das
push
imul
inc
outs
sbb
jge
(bad)
loope
fwait
repz
adc
scas
push
les
out
adc
lock
lea
jae
jle
mov
pop
std
(bad)
pop
cmp
mov
icebp
dec
std
jmp
mov
mov
xchg
ret
dec
or
mov
xchg
cmp
or
mov
test
repz
(bad)
add
xchg
push
xchg
xor
scas
sti
ins
sub
test
cdq
xlat
jmp
ret
loope
ds
shl
push
xchg
sbb
fadd
jecxz
inc
xor
pop
mov
add
mov
ror
jecxz
push
dec
jmp
inc
call
mov
adc
xor
fnsave
iret
ins
xor
in
add
outs
mov
add
mov
jno
stos
(bad)
pop
ret
jecxz
or
cmp
jmp
jmp
clc
mov
mov
inc
out
outs
pop
daa
out
mov
jb
pop
popa
dec
and
mov
mov
aaa
jne
dec
sub
mov
add
cwde
test
shr
push
fild
mov
dec
mov
cmp
repnz
pop
mov
imul
in
int3
mov
rcl
out
or
adc
test
xchg
pop
cld
jmp
cwde
js
mov
lods
add
lahf
mov
and
outs
push
and
outs
dec
bound
dec
(bad)
sti
adc
cwde
aaa
mov
jne
lods
sbb
adc
addr16
mov
push
in
mov
jmp
xlat
mov
push
scas
pop
outs
pop
fild
mov
daa
sub
or
inc
js
jo
mov
pop
inc
mov
hlt
cmc
add
imul
loope
jmp
mov
movs
fisttp
and
xor
dec
imul
clc
sub
inc
pop
mov
scas
xchg
add
mov
fild
fst
sbb
sbb
cmp
je
and
mov
xor
mov
adc
mov
(bad)
les
cmc
pusha
hlt
mov
imul
add
sbb
cmp
pusha
dec
ins
clc
or
sbb
sbb
inc
pop
arpl
add
hlt
xor
ja
(bad)
mov
sbb
xchg
mov
jp
ds
test
mov
inc
loop
mov
sub
cli
in
adc
repnz
sbb
add
ret
add
xor
sub
push
push
mov
(bad)
and
je
(bad)
and
enter
jle
std
inc
push
imul
pop
loop
and
and
push
jne
enter
sbb
cmps
cmps
sub
lea
mov
ret
dec
sahf
mov
mov
imul
cmp
adc
stc
les
repz
xchg
out
out
xor
xor
retf
bnd
ret
pop
(bad)
arpl
stos
sbb
stos
xor
retf
test
iret
(bad)
call
push
push
scas
mov
push
mov
aaa
mov
jb
outs
pushf
mov
test
xchg
int
push
imul
jae
lods
push
mov
retf
adc
adc
xchg
(bad)
mov
addr16
daa
inc
lea
popf
pop
adc
int3
pop
lods
ins
jecxz
pop
lods
out
sub
mov
sbb
mov
push
dec
jne
sbb
mov
pop
lods
mov
in
xchg
je
nop
outs
popa
pop
sbb
shl
mov
cmp
add
or
and
es
mov
mov
ins
jecxz
pop
lods
out
sub
scas
xchg
xor
mov
(bad)
int3
xor
cdq
mov
fcmovb
sub
push
ins
aam
jb
(bad)
pop
out
je
mov
xlat
(bad)
dec
sahf
jne
sbb
lods
int3
test
or
fcmove
sub
sub
loope
jle
jne
icebp
stos
in
es
mov
add
add
xchg
outs
sbb
and
adc
inc
lods
leave
inc
imul
inc
push
mov
movs
pop
sub
inc
imul
mov
sub
jp
jne
rcr
jge
xchg
add
pop
add
retf
adc
and
call
ror
sahf
sbb
aaa
fnstcw
icebp
sub
cs
and
xor
sbb
xchg
pushf
xchg
aaa
mov
cmp
sub
idiv
xchg
jmp
scas
push
mov
add
sti
sub
add
jge
bound
jo
cwde
sub
dec
outs
sbb
cmp
or
pop
jbe
cmp
push
sub
inc
cmc
(bad)
retf
(bad)
mov
xor
lahf
mov
retf
lahf
jmp
retf
xchg
mov
inc
xor
nop
imul
sti
lods
pop
out
fs
fldcw
bound
xchg
xor
sar
inc
inc
mov
and
sub
jns
xchg
sbb
xlat
test
jae
repz
inc
icebp
ds
xchg
fsubr
xchg
sti
imul
inc
pop
add
xchg
dec
retf
fcomp
push
adc
out
xrelease
inc
repz
dec
dec
cmp
fdiv
scas
inc
mov
les
fdiv
xchg
add
arpl
cmp
das
adc
(bad)
ficomp
in
ret
icebp
mov
out
mov
xchg
push
xchg
xchg
mov
mov
mov
and
sbb
test
xor
cmp
and
pop
push
mov
out
inc
into
push
adc
sbb
add
test
add
(bad)
mov
aam
sub
sbb
adc
sub
mov
cmp
add
push
sub
pop
jb
adc
mov
cmp
fild
in
mov
pop
int3
sti
lea
fmul
xchg
mov
aad
outs
inc
shl
leave
push
shl
scas
push
idiv
jnp
inc
mov
popa
cmps
sub
out
xor
pop
lods
mov
fcom
aad
xor
sar
(bad)
lods
call
inc
dec
push
mov
push
push
pop
sbb
lds
cmps
adc
mov
xor
cld
pusha
push
movs
dec
(bad)
adc
or
xchg
and
mov
jge
nop
int3
daa
push
rcl
and
mov
adc
dec
repnz
nop
mov
lods
test
dec
imul
fwait
pop
je
enter
sub
rcl
std
test
mov
into
(bad)
and
pop
mov
test
ss
jb
pop
sbb
cmps
data16
out
arpl
mov
adc
cmp
repz
inc
cmp
xchg
mov
mov
sbb
jnp
adc
mov
adc
cmp
mov
xor
cdq
repz
jnp
lods
mov
lock
ds
cmp
mov
inc
ja
cmc
retf
push
mov
dec
leave
sub
cwde
cmp
test
adc
mov
movs
cmp
out
xchg
pop
push
rol
arpl
jp
adc
dec
daa
sub
and
scas
aas
popf
(bad)
sbb
xchg
test
popa
add
ins
xlat
fild
stos
call
cmps
inc
add
scas
and
(bad)
xor
into
bound
lock
add
push
sbb
movs
push
loopne
cmp
mov
je
aas
out
and
movs
inc
xor
push
xchg
inc
stos
jge
fistp
ret
and
mov
mov
dec
bound
daa
scas
std
call
mov
xor
ins
mov
inc
jle
cmps
(bad)
test
xor
addr16
ins
movs
nop
in
jno
xor
mov
or
sbb
lock
mov
jb
shr
mov
adc
inc
out
xchg
sar
xchg
fs
xchg
push
adc
lahf
and
adc
mov
dec
test
loope
sbb
jl
mov
in
xchg
xor
repnz
jge
cmp
jns
sub
push
pop
imul
fs
pop
out
push
mov
pop
adc
add
dec
pop
and
or
adc
fisttp
ret
popf
data16
xchg
pop
and
mov
add
fadd
out
sahf
mov
stos
push
sub
jae
pop
shl
jae
fsub
dec
mov
loopne
ins
and
lods
out
or
(bad)
sbb
das
xchg
dec
aaa
xchg
mov
aam
outs
xchg
jnp
outs
stc
inc
adc
jbe
mov
(bad)
xor
inc
sub
call
mov
push
push
mov
imul
das
mov
mov
xor
cmp
ss
test
fadd
in
jae
jmp
mov
(bad)
ss
push
icebp
dec
retf
retf
mov
jg
idiv
push
and
mov
aam
scas
loopne
sbb
rcl
lods
popf
fld
inc
pop
jmp
sbb
sbb
(bad)
mov
cmps
mov
adc
jmp
movs
xchg
jmp
lock
or
out
sub
xor
mov
ds
adc
je
aaa
enter
pop
sti
push
rcl
(bad)
jmp
mov
cmps
lods
dec
fisubr
add
les
cmp
and
imul
cld
mov
jg
add
mov
sti
mov
jmp
into
sub
lds
mov
test
jbe
std
mov
ror
jle
adc
mov
das
add
cmp
and
sub
sub
aaa
aam
rcr
nop
sar
mov
cmp
push
mov
loopne
push
inc
xor
les
scas
adc
adc
outs
std
push
mov
mov
(bad)
cmp
sub
test
cmc
nop
add
xchg
iret
cmc
(bad)
xchg
xchg
and
cmc
inc
fld
add
in
popa
add
add
ja
and
cmp
sub
je
mov
mov
or
add
sub
mov
push
sub
mov
jle
fistp
push
repz
fcomp
or
xchg
scas
lock
mov
lods
xor
cmp
xchg
xchg
sub
xor
dec
mov
xor
fwait
push
add
out
mul
dec
pushf
sub
hlt
push
sub
inc
add
mov
mov
fadd
daa
in
(bad)
addr16
imul
stos
nop
stc
shr
(bad)
adc
add
jg
mov
push
inc
adc
pusha
ret
fwait
(bad)
sub
aam
mov
es
pop
add
ss
mov
lahf
mov
sub
mov
or
sahf
out
je
enter
popa
or
xchg
retf
sbb
test
sub
ds
jge
test
sar
mov
addr16
jmpw
jno
ds
fsub
jecxz
or
inc
addr16
mov
mov
jge
add
addr16
add
xchg
test
mov
xchg
add
retf
inc
add
les
out
aam
and
pop
cmps
xor
push
push
mov
xchg
data16
adc
aas
cmp
stc
jmp
mov
pop
std
fbld
ins
xlat
jmp
jge
cmp
daa
in
inc
adc
dec
inc
imul
mov
jmp
les
mov
cmp
sub
imul
mov
push
push
adc
lea
cmps
ins
mov
jae
adc
add
xchg
dec
lock
test
bnd
or
retf
pop
rcr
fxtract
fisubr
lds
pop
pop
(bad)
mov
test
not
and
cli
adc
ja
pusha
mov
push
push
ins
pop
mov
(bad)
int
in
mov
jns
aaa
aam
call
cmp
imul
xchg
leave
sub
mov
inc
dec
push
xchg
cli
inc
out
popf
mov
jbe
ss
mov
jg
xor
js
pushaw
out
pusha
add
out
sub
add
push
jae
lock
sbb
arpl
push
outs
mov
sbb
add
pop
test
aam
ins
aaa
mov
and
int3
je
je
(bad)
hlt
hlt
mov
jnp
xchg
mov
mov
sti
add
sbb
push
dec
mov
push
stc
add
xchg
adc
jmp
mov
jle
sbb
sbb
aas
fmul
push
ds
lods
shl
aas
cld
leave
icebp
pop
shl
ficomp
arpl
push
cdq
ficom
jne
scas
jno
loop
mov
loope
or
in
pop
fist
sbb
rcr
mov
push
shl
out
(bad)
jns
push
push
test
and
mov
push
in
and
push
cwde
stos
shl
loop
cmp
call
(bad)
js
pop
mov
mov
jl
movs
inc
pop
ins
jb
cmp
std
repnz
sbb
sub
sbb
mov
inc
cmps
(bad)
mov
and
mov
xchg
fist
push
jbe
dec
jbe
call
fild
ins
inc
mov
scas
dec
mov
jmp
cmps
dec
leave
push
mov
repnz
jmp
rol
ja
cmp
cld
xchg
jb
cli
xlat
js
or
das
sub
xchg
cmps
sub
pop
cmps
pop
aaa
sub
mov
lock
dec
mov
pop
push
ins
add
mov
frstor
imul
dec
jb
sbb
jns
mov
sbb
fwait
jno
icebp
pop
and
inc
mov
cmp
or
adc
test
pop
cmp
movs
retf
jbe
add
scas
mov
add
sahf
cmp
mov
sbb
push
xchg
fwait
inc
pop
test
jae
inc
mov
xchg
loop
mov
pop
cmc
lahf
(bad)
movs
jmp
sbb
shl
shl
ror
cmp
rol
sbb
iret
std
mov
iret
leave
test
ror
push
mov
call
xchg
stos
out
int
cwde
mov
pop
inc
jmp
pop
lea
cwde
(bad)
std
push
(bad)
iret
push
stos
adc
test
fisttp
xchg
and
inc
daa
ins
inc
fist
idiv
lods
or
inc
jmp
jle
xor
push
pop
xchg
push
cmp
sub
out
inc
fidiv
sbb
outs
pop
xor
fst
daa
push
inc
sub
adc
pop
pop
mov
mov
adc
inc
int
push
mov
cmps
jae
mov
push
pushf
jge
fiadd
dec
push
shl
jecxz
pop
mov
rcl
scas
lea
clc
jbe
add
pop
loop
ds
popa
sahf
cmp
inc
jnp
and
add
cmc
sbb
mov
cld
and
stos
xchg
sub
dec
mov
sub
adc
sar
cdq
xor
adc
inc
mov
and
inc
nop
fidivr
mov
mov
jmp
mov
sbb
sahf
stos
js
sbb
fidiv
sub
imul
push
mov
mov
xchg
cmp
dec
and
cmp
push
aam
jg
mov
xchg
out
xor
fstp
xor
mov
cli
(bad)
cld
push
pop
jecxz
sbb
nop
cmp
push
or
retf
icebp
xor
jne
js
fsubr
mov
pusha
jl
dec
mov
out
cmp
push
add
dec
mov
call
icebp
mov
dec
and
jmp
push
jno
cmps
lods
pop
enter
add
je
cmp
mov
pop
push
nop
fimul
jbe
lods
shr
xlat
mov
das
mov
dec
ss
in
lock
cli
pop
(bad)
fld
mov
push
pop
pop
pop
mov
shr
jecxz
xor
xchg
pop
xor
cld
lods
in
dec
mov
adc
std
sub
cmp
and
jmp
imul
jae
retf
xor
popw
fs
stos
outs
pop
pop
add
dec
into
outs
inc
loop
enter
cmp
in
mov
retf
jecxz
jno
rcl
retf
push
add
xor
or
xchg
mov
retf
mov
stos
mov
add
adc
mov
cmps
pop
mov
cmp
cdq
mov
xor
fs
sub
sub
outs
jbe
ins
out
inc
and
dec
cmp
adc
push
popa
hlt
lods
out
daa
jne
nop
pop
cli
(bad)
dec
retf
or
cs
pop
loop
cwde
sbb
scas
ret
push
or
jae
outs
daa
inc
adc
(bad)
outs
gs
xchg
jecxz
imul
mov
lock
mov
push
xchg
sub
call
popf
ja
clc
lea
and
push
sbb
xchg
pop
cmc
jg
inc
test
mov
pop
shr
xchg
sti
inc
pop
das
.byte
