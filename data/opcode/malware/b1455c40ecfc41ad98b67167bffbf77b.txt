loopne
mov
nop
dec
enter
mov
xor
pop
dec
jbe
ror
inc
ins
fisubr
mov
cmp
cs
cmp
hlt
dec
into
cmp
icebp
ret
xchg
xor
das
mov
sbb
movs
push
inc
or
add
xor
lods
sti
retf
lahf
xor
inc
and
cmp
adc
mov
push
and
push
shl
pop
sub
fldenv
xchg
bound
mov
push
fstp
cwde
push
ret
xchg
xor
(bad)
sahf
pop
clc
mov
xchg
dec
cmp
dec
into
cmp
ror
mov
mov
js
ror
rol
mov
pop
or
mov
inc
inc
inc
fxch
xor
fmulp
cmp
inc
xor
dec
mov
push
rol
rcr
inc
cmp
rol
fwait
rcr
ins
or
into
mov
dec
ins
add
xchg
ja
ror
mov
je
jg
ret
sti
or
into
into
je
repz
into
mov
jl
jg
adc
cmp
push
dec
stc
xor
mov
inc
popf
aad
mov
ret
retf
pop
cwde
outs
cmp
or
aad
inc
jle
mov
mov
ret
mov
pop
inc
mov
pop
cs
or
mov
ficom
sbb
test
mov
mov
push
dec
fimul
ror
ss
mov
ror
or
mov
clc
mov
mov
dec
into
mov
movs
dec
jbe
ror
(bad)
test
ret
sahf
ret
jle
shl
dec
stc
fnstenv
into
aad
xor
cmp
ror
cmp
pop
movs
xchg
(bad)
push
jne
lea
lock
cmp
jo
jle
shl
(bad)
adc
ror
(bad)
push
sub
cmp
pop
lods
movs
ret
jle
shl
push
sub
pop
ins
into
cmp
rcr
push
sub
jmp
xchg
loop
push
mov
push
shl
into
push
stc
clc
mov
shl
out
lea
dec
into
ret
jle
shl
into
ret
jle
rol
jmp
popa
or
aad
ds
cmp
sbb
add
mov
pop
(bad)
mov
into
cmp
test
sub
cmp
mov
push
lock
outs
mov
ror
mov
mov
and
push
shl
int
shl
into
push
ror
mov
shl
inc
(bad)
imul
mov
movs
jge
ror
sub
and
mov
and
inc
mov
sbb
into
mov
rcr
cmp
and
push
inc
jmp
bound
iret
cmp
in
mov
cmp
adc
and
test
adc
cmp
cmp
xor
pop
(bad)
cmc
mov
mov
std
mov
xchg
hlt
adc
cwde
push
mov
and
dec
into
mov
mov
mov
mov
push
shl
icebp
cmp
mov
cmp
sub
or
dec
into
xor
cmp
or
mov
xor
mov
and
mov
sar
mov
rol
or
movs
mov
movs
test
into
xor
cmp
or
mov
iret
dec
(bad)
lock
cmp
push
pop
std
xchg
pop
nop
hlt
adc
ret
div
or
ror
sub
dec
into
push
shl
(bad)
aad
xor
cmp
movs
dec
(bad)
std
cmp
dec
leave
mov
sub
cmp
mov
aad
xor
cmp
sub
dec
(bad)
retf
movs
dec
(bad)
std
cmp
std
xchg
mov
sub
push
pop
inc
popf
imul
ss
(bad)
(bad)
fidiv
loopne
inc
push
gs
mov
mov
into
(bad)
mov
mov
call
mov
sub
into
or
mov
iret
lds
(bad)
xor
int3
xor
lock
cmp
dec
cmc
or
ror
(bad)
call
or
idiv
cmp
and
cmp
pop
or
mov
enter
cmp
(bad)
js
ror
sbb
into
dec
sub
rcr
mov
cs
ret
into
bound
shr
ror
cmp
cmp
pop
cmp
or
in
sahf
inc
pop
int
ret
inc
(bad)
clc
mov
sub
dec
mov
js
ror
sbb
into
dec
sub
dec
fmul
xor
cmp
(bad)
inc
push
pop
fmul
cmp
mov
jp
xchg
mov
pop
int
ret
inc
mov
pop
int
ret
cmp
pop
int
ret
inc
mov
pop
nop
out
pop
int3
retf
cmp
mov
cmp
cs
arpl
lods
dec
rol
sbb
cli
xchg
mov
add
inc
jbe
cmc
dec
into
retf
inc
js
ror
cmp
cmp
imul
cld
mov
aaa
and
add
ror
sub
out
mul
lods
sahf
inc
js
mov
and
pop
or
cmp
ror
(bad)
adc
inc
cwde
push
adc
cld
push
sub
ror
rcr
cmp
mov
imul
cld
mov
aaa
and
add
ror
sub
out
mul
lods
sahf
jbe
out
into
retf
inc
js
ror
xchg
dec
inc
js
mov
and
sbb
popf
imul
(bad)
xchg
mov
add
inc
js
ror
rcr
xchg
dec
inc
retf
inc
js
inc
jo
jmp
ret
xor
neg
sub
cwde
mov
(bad)
fisttp
mul
lods
test
push
sub
jns
bound
shr
sbb
mov
mov
lds
xor
movs
cld
mov
(bad)
xchg
inc
js
ret
xchg
xor
or
imul
xor
sbb
sub
stos
xor
cs
or
cmp
lds
scas
inc
js
ror
(bad)
adc
inc
cwde
push
adc
call
mov
inc
cli
cs
into
cmp
mov
dec
into
outs
xchg
movs
cmp
shl
mov
dec
cmp
pop
or
retf
sar
(bad)
adc
inc
cdq
mov
inc
jno
out
xchg
mov
ror
repz
movs
inc
outs
mov
pop
push
xor
ret
mov
cs
mov
xor
pop
push
xor
shl
ror
mov
adc
inc
popf
imul
repz
shl
sub
or
aad
movs
cmp
rol
mov
and
es
dec
into
mov
shl
sub
or
inc
adc
js
inc
push
dec
xchg
cmps
lea
or
push
aad
into
mov
mov
into
cmp
fcom
mov
fmul
dec
std
aad
cmps
popf
xor
into
mov
mov
mov
mov
sub
dec
into
cmp
cdq
add
cmp
(bad)
push
mov
lods
(bad)
std
movs
dec
(bad)
std
xchg
mov
ss
push
cmp
mov
fs
xchg
arpl
lods
jbe
ror
aad
cmp
cmp
pop
cmp
pop
nop
out
pop
mov
lods
cld
mov
movs
dec
dec
sbb
jmp
idiv
inc
dec
cmc
ror
mov
inc
ins
inc
gs
mov
ror
repz
movs
push
outs
mov
pop
js
imul
and
mov
ror
ret
into
mov
test
xor
mov
movs
cmp
mov
dec
fsubr
mov
ins
cmp
ret
or
in
mov
cmp
hlt
aam
jg
dec
daa
popa
ror
mov
ror
cmp
mov
mov
inc
jge
sbb
cs
shl
dec
sar
xor
out
ror
pop
sub
add
mov
cmp
es
inc
mov
pop
mov
cmp
or
jp
sar
leave
mov
ror
inc
gs
mov
mov
(bad)
aam
into
cmp
mov
nop
jmp
pop
mov
cmp
xchg
mov
into
mov
mov
dec
rol
shr
aad
into
cmp
fld
mov
xchg
icebp
ret
inc
js
rcl
xor
dec
in
mov
mov
retf
mov
sar
mov
rol
mov
add
into
cmp
sub
rcl
or
or
ret
sbb
jb
into
ins
pop
jo
stos
inc
dec
into
cmp
adc
jp
shl
mov
call
mov
add
dec
adc
dec
dec
add
mov
dec
jmp
cmp
xchg
js
ret
mov
call
popa
xor
cs
jmp
jb
into
cmp
sar
xor
ror
test
sub
xchg
add
dec
shl
xor
cmp
push
mov
dec
pop
sub
enter
inc
dec
lods
ror
xor
cmp
iret
cmp
pop
mov
ficomp
ss
mov
push
jne
mov
dec
mov
mov
in
jl
xor
push
sub
(bad)
mov
dec
iret
ins
mov
mov
dec
stc
fld
ss
mov
pop
(bad)
jmp
cs
std
movs
dec
dec
pop
sub
dec
mov
jg
jmp
mov
mov
lds
dec
pop
sub
mov
ficomp
ss
mov
retf
cmp
mov
call
xor
into
mov
jns
mov
push
inc
js
enter
inc
dec
push
cs
mov
lods
mov
dec
fidiv
push
jge
mov
and
sub
dec
movs
cmp
mov
dec
into
cmp
nop
dec
es
dec
into
mov
mov
aas
mov
mov
inc
js
ror
sbb
into
dec
sub
or
rol
or
sbb
dec
fnstenv
mov
mov
mov
fst
mov
inc
lds
scas
inc
js
ret
mov
pop
(bad)
xor
mov
xchg
arpl
lods
jbe
ror
aad
and
cdq
xchg
sti
mov
mov
cld
xor
ror
ror
xor
shl
inc
mov
pop
int
ret
sahf
aad
mov
ret
push
xor
(bad)
cmp
or
or
dec
ror
push
mov
test
ret
rcl
or
or
ret
lds
cs
ins
cmp
or
push
jne
sahf
xchg
dec
into
dec
sbb
xchg
cmp
dec
cmp
pop
int
ret
inc
(bad)
pop
int
ret
sahf
pushf
dec
jmp
cmp
xchg
inc
js
inc
push
dec
jae
push
retf
dec
xchg
cs
mov
lds
cs
ins
mov
ret
dec
(bad)
mov
ins
pop
jo
sub
dec
into
cmp
fmul
into
cmp
ror
mov
sub
sahf
mov
mov
inc
pop
or
dec
aas
(bad)
push
sub
push
ret
les
mov
mov
xchg
shl
mov
mov
test
ret
cs
popf
xchg
dec
inc
in
nop
inc
(bad)
pop
int
ret
sahf
pushf
dec
jmp
cmp
xchg
js
inc
push
xor
cmp
outs
mov
ret
dec
mov
dec
into
mov
cs
sar
dec
cmps
arpl
or
mov
mov
ret
sbb
cwde
daa
mov
mov
mov
jae
cs
mov
rol
mov
in
mov
cmp
ror
xor
push
ins
pop
int
ret
sahf
push
sub
mov
xor
dec
cs
sti
aad
sahf
popf
nop
dec
into
mov
cs
dec
add
inc
dec
(bad)
ror
mov
shl
iret
push
add
mov
shl
dec
stc
fnsave
ret
mov
repz
into
mov
mov
ret
cs
xor
mov
mov
cs
into
dec
fisttp
xor
dec
into
push
shl
paddusw
or
aad
mov
ret
mov
cmp
mov
lds
cs
push
cmp
cs
or
in
mov
cmp
push
loopne
ret
cs
into
cmp
jl
mov
shl
dec
stc
fnsave
ret
mov
test
or
mov
mov
ret
cs
es
mov
mov
cs
into
dec
fisttp
xor
dec
into
push
shl
ins
fst
or
aad
mov
ret
mov
cmp
mov
lds
cs
push
(bad)
ret
or
in
mov
cmp
push
loopne
ret
cs
into
cmp
xor
dec
popf
cs
mov
and
push
inc
test
cmp
shl
dec
stc
fnsave
ret
mov
ret
iret
cmp
mov
and
int3
and
inc
repz
into
dec
fisttp
xor
dec
into
push
shl
mov
xchg
dec
cmps
ins
jno
into
aad
mov
ret
mov
cmp
mov
lds
cs
push
out
ret
or
in
mov
cmp
shl
mov
sub
ret
pop
leave
cs
stc
fnsave
ret
mov
ret
iret
cmp
popf
inc
into
cmp
das
mov
dec
(bad)
mov
dec
gs
cmp
das
mov
aad
mov
ret
(bad)
aam
jp
ror
imul
mov
pop
mov
mov
shl
dec
into
xchg
dec
into
cmp
das
mov
mov
xchg
xor
sbb
cs
xchg
mov
mov
std
fmulp
cmp
ror
mov
add
xor
jo
push
ror
pop
mov
sub
dec
into
cmp
das
mov
mov
ror
imul
mov
cmp
das
mov
xor
into
cmp
scas
dec
into
pop
push
int
ret
fnstcw
das
mov
cmp
pop
mov
ret
dec
movs
cs
ins
pop
int
ret
sahf
mov
mov
and
cmp
pop
int
ret
inc
(bad)
pop
int
ret
sahf
push
inc
test
pop
ret
sahf
mov
mov
add
dec
into
cmp
adc
add
dec
into
mov
cwde
xor
sbb
add
ret
test
cwde
into
cmp
pop
nop
iret
in
mov
sub
dec
into
cmp
das
mov
mov
cwde
xor
sbb
cs
div
int
ror
into
cmp
addr16
mov
add
xor
jo
push
ror
sar
xor
ror
push
mov
cmp
cs
ins
pop
int
ret
sahf
mov
mov
sbb
xor
retf
mov
rol
pop
ror
mov
ror
imul
mov
cmp
das
mov
ins
jno
into
mov
mov
ret
sbb
or
dec
into
mov
cmp
mov
movs
cmp
ror
cmp
ret
xor
lds
cs
ins
mov
lds
cs
ins
cmp
cmp
pop
nop
out
pop
mov
ret
cs
into
mov
movs
xor
ror
mov
mov
aam
ret
sbb
pop
mov
ret
fidiv
dec
cmp
ret
dec
rol
shr
aad
into
cmp
cmp
icebp
ret
inc
js
inc
push
xor
cmp
cs
cmp
ror
mov
and
inc
mov
add
into
cmp
sub
addr16
cmp
mov
mov
call
inc
mov
add
inc
js
inc
push
xor
cmp
cs
cmp
shl
into
aad
and
cmp
or
or
ret
int3
cmp
das
mov
mov
pop
int
ret
sahf
mov
cmp
ret
cs
and
ror
into
je
jnp
cs
mov
push
mov
xor
cs
inc
add
pop
mov
dec
xchg
retf
dec
popa
cs
mov
retf
mov
rol
pop
ror
mov
cs
inc
mov
and
inc
mov
add
into
cmp
sub
pop
iret
cmp
cs
cmp
ror
mov
and
xor
cs
dec
mov
pop
jo
push
ror
pop
mov
sub
dec
into
cmp
cs
xor
ror
cmp
dec
std
ror
mov
adc
xor
cmp
cmp
xor
ins
adc
shr
or
mov
cs
sar
int
ret
iret
cmp
cs
retw
inc
mov
and
inc
mov
and
inc
shr
xor
in
dec
into
dec
sub
dec
lds
mov
mov
shl
xor
sbb
sub
retf
shr
xor
xlat
cmps
cmp
mov
mov
ret
xchg
fst
mov
ret
add
ror
stc
ror
inc
xchg
dec
into
mov
cs
mov
ret
sahf
mov
mov
xor
pop
int
ret
inc
(bad)
cs
ret
inc
mov
call
mov
mov
pop
int
ret
sahf
mov
mov
xor
das
mov
mov
mov
xor
das
mov
mov
call
mov
mov
push
cmc
ds
into
dec
(bad)
mov
cs
cmp
sar
xor
ror
sbb
cs
(bad)
mov
cs
mov
ret
sahf
mov
mov
xor
das
mov
dec
ffree
dec
jmp
pop
js
imul
dec
in
mov
ins
pop
js
imul
dec
loope
mov
ins
pop
js
imul
push
or
ror
sbb
cs
(bad)
aam
mov
xchg
hlt
adc
cmps
mov
dec
pop
mov
ror
pop
pop
ins
into
cmp
lds
cwde
push
sub
cmc
or
dec
push
xor
(bad)
mov
ror
cmp
hlt
dec
into
push
mov
cmp
ror
or
cmp
cmp
cs
repz
movs
xchg
and
ret
xor
stc
(bad)
mov
ror
cmp
pop
sub
aam
sub
inc
or
sar
sub
pop
nop
inc
ret
mov
mov
into
cmp
adc
pop
lods
lahf
push
pop
test
test
ss
mov
pop
(bad)
cmps
mov
shl
into
push
mov
mov
cmp
stos
cmp
cmp
pop
inc
popf
imul
sub
iret
int
mov
cmp
xchg
dec
sbb
fmul
cmp
ror
hlt
push
push
jl
dec
dec
sbb
xlat
(bad)
cmp
inc
or
cmp
nop
dec
retf
dec
or
xchg
ror
cmp
shr
mov
or
rol
xor
int3
cmp
ror
mov
dec
into
cmp
gs
mov
ror
daa
pop
ror
ret
jp
sar
mov
adc
dec
fst
or
sub
add
out
dec
into
cmp
nop
dec
mov
shl
mov
daa
dec
mov
jmp
iret
cmp
xlat
(bad)
cmp
jmp
mov
cmp
dec
xor
jmp
mov
cmp
gs
retf
aam
push
jl
pop
mov
adc
dec
into
mov
ror
ret
and
jno
push
jl
jmp
cs
retf
aam
push
jl
dec
mov
ror
mov
ror
ret
and
cmp
ret
retf
and
movs
dec
(bad)
std
cmp
or
into
mov
rol
jge
or
lahf
xchg
call
xor
cs
into
cmp
dec
(bad)
std
cmp
int3
cmp
and
or
ror
cmp
dec
into
cmp
cs
into
aas
movs
dec
(bad)
std
cmp
int3
cmp
fimul
mov
ror
cmp
dec
into
cmp
cs
dec
gs
ret
push
jl
sar
and
or
ror
daa
cmp
dec
into
pushf
cmp
dec
mul
mov
ror
leave
xlat
(bad)
cmp
ror
ror
mov
jmp
xchg
cmp
nop
dec
iret
cmp
fmul
cmp
nop
dec
iret
cmp
xlat
(bad)
cmp
shl
into
mov
ror
mov
and
mov
retf
retf
add
cmp
into
cmp
pop
dec
into
cmp
nop
dec
out
mov
rol
push
jl
dec
ins
ins
jno
into
xor
sahf
popf
xchg
dec
(bad)
std
lods
sbb
(bad)
leave
ret
pop
test
dec
into
inc
nop
jne
cmp
cs
dec
std
addr16
mov
ror
and
mov
movs
push
jl
dec
retf
add
repz
add
and
mov
enter
or
jge
inc
(bad)
std
cmp
iret
cmp
cdq
dec
into
ret
jp
sar
into
jge
int3
or
nop
ret
mov
mov
ror
ins
push
cmp
sub
cmp
test
mov
mov
mov
into
xor
into
cmp
xchg
cmp
pop
jge
leave
and
xchg
dec
into
xor
xor
cmp
dec
or
cmp
inc
pop
jge
retf
repz
or
aas
movs
pop
dec
inc
sub
outs
push
xor
dec
cmp
fmul
mov
cmc
enter
or
mov
pop
mov
nop
ret
xor
dec
(bad)
mov
sub
mov
aam
ret
mov
(bad)
retf
retf
xor
pop
mov
dec
sbb
fmul
mov
or
fstp
mov
les
jl
mov
xor
into
pushf
(bad)
mov
xchg
dec
mov
sbb
dec
dec
sbb
fmul
mov
or
fstp
mov
(bad)
loopne
jg
mov
xor
into
pushf
jmp
dec
ret
dec
mov
mov
nop
ins
cmp
into
or
or
mov
sbb
dec
cs
jbe
xchg
dec
into
retf
mov
pop
mov
cmp
inc
je
shl
inc
cli
mov
pop
es
(bad)
call
je
rcr
es
mov
sahf
rcl
cmp
sar
inc
sti
mov
pop
es
and
add
pop
es
dec
into
sahf
loope
(bad)
cmp
rcr
or
call
pop
inc
popf
imul
inc
in
nop
inc
(bad)
cs
mov
mov
xchg
loopne
ret
outs
jg
(bad)
mov
leave
dec
into
cmp
pop
mov
cmp
ror
ror
mov
ror
stos
(bad)
stos
rcl
retf
dec
gs
mov
or
mov
retf
stos
jmp
ror
cmp
ror
test
stos
inc
js
ror
rol
mov
cs
mov
js
dec
into
cmp
ror
ficomp
pop
mov
(bad)
mov
push
sub
jb
movs
cwde
ja
ror
into
je
mov
and
inc
js
sbb
sub
nop
jmp
pop
mov
dec
sbb
mov
dec
movs
cmp
cmp
into
cmp
cs
sahf
push
shl
xor
movs
cld
mov
jno
into
push
shl
retf
mov
fnstcw
xor
jge
dec
cmp
pop
or
mov
cmp
gs
mov
mov
inc
js
sbb
sub
or
and
bound
shr
cmp
ins
leave
jnp
ret
mov
pop
or
cmp
ror
xchg
inc
inc
js
ret
sub
mov
fwait
rcr
es
aad
into
push
rol
mov
add
mov
js
sbb
les
jl
ret
mov
cmp
push
sub
or
and
sub
or
aam
jp
shl
xor
rcl
cmp
sar
inc
cli
mov
dec
rcr
sbb
mov
inc
xor
movs
cld
mov
aad
repz
into
dec
in
js
out
repz
into
dec
stc
inc
js
out
repz
into
dec
int
js
out
repz
into
dec
rol
out
repz
into
xor
int3
cmp
pop
or
cmp
lock
jo
js
dec
ror
dec
lods
adc
int
cmp
fwait
inc
js
(bad)
jno
xor
cmp
cmp
mov
pop
idiv
movs
xor
push
mov
fadd
cmp
es
dec
cmp
mov
nop
xor
xor
inc
inc
cmp
and
rcr
es
xor
xor
pop
inc
sub
call
lea
cmp
sbb
call
dec
out
ror
inc
js
ret
mov
shl
fwait
leave
pop
pop
retf
cmp
dec
into
(bad)
icebp
inc
js
and
sub
retf
out
ins
or
cmp
cs
daa
or
mov
ret
jp
ror
repnz
cmp
dec
add
dec
mov
aad
enter
cmp
es
je
cmp
retf
dec
enter
fadd
outs
dec
into
cmp
push
mov
jmp
pop
inc
imul
retf
push
cmp
fstp
dec
into
mov
mov
ss
je
aas
movs
adc
lds
int3
mov
add
mov
xlat
dec
mov
aad
inc
js
xlat
jne
cmp
in
mov
loope
sbb
call
dec
out
rcl
mov
pop
or
retf
cmp
retf
cmp
ss
dec
iret
cmp
out
dec
mov
mov
cwde
shl
cmp
add
dec
mov
aad
enter
cmp
es
dec
cmp
jne
xor
mov
cmp
cs
into
cmp
mov
mov
pop
inc
imul
mov
iret
cmp
cs
retf
inc
dec
mov
xor
adc
inc
popf
imul
into
mov
inc
and
cmp
lock
mov
aas
mov
sar
fdivr
or
into
cmp
cmp
or
cs
mov
mov
repnz
(bad)
kmovw
ret
retf
dec
gs
xor
rol
cmp
cmp
ror
dec
icebp
retf
stos
rcl
shl
leave
mov
dec
xor
jmp
idiv
cmp
(bad)
test
and
shl
rol
mov
pop
mov
inc
(bad)
rcl
cmp
test
lods
xchg
dec
dec
(bad)
aam
inc
mov
rcl
iret
out
cwde
dec
aad
ror
pop
or
cmp
sbb
retf
dec
gs
mov
pop
sbb
cmp
cwde
dec
aad
ror
aad
iret
cmp
fdivrp
fwait
sub
in
xchg
adc
inc
xchg
arpl
lods
jbe
hlt
dec
into
aad
adc
cmp
cmpxchg
ret
sub
aad
adc
cmp
push
cmp
sti
push
stos
adc
cs
or
ror
retf
dec
gs
cmp
sub
dec
rol
and
retf
pop
ins
or
cmp
push
dec
xor
xor
sar
shr
mov
add
sub
ror
aas
cmp
ror
rcr
mov
push
sbb
xor
jo
jg
sbb
xchg
mov
mov
loopne
ret
retf
ror
into
ds
push
sbb
xor
xchg
jne
rcr
pandn
rcr
mov
ret
sahf
movs
nop
dec
fmul
in
adc
cs
icebp
(bad)
shr
mov
xor
cmp
std
iret
enter
repz
cs
sti
push
mov
ror
mov
push
je
sbb
fmulp
push
cmp
dec
ror
mov
pop
pop
fld
or
mov
pushf
adc
cs
dec
gs
mov
cs
sar
ja
ret
dec
in
mov
ret
jp
rol
pop
jmp
add
fdiv
dec
inc
mov
loopne
and
cmp
mov
mov
retf
cmp
scas
int3
mov
cmc
shr
mov
mov
shl
leave
ds
dec
push
lds
movzx
ins
cmp
xchg
cmp
gs
mov
cs
daa
mov
dec
into
push
cs
cmp
cs
mov
xchg
xor
cmp
ret
or
pop
or
lods
mov
cs
inc
mov
cmp
inc
pop
xchg
pmovmskb
mov
rcr
dec
fcmovnbe
jae
sub
xor
movs
inc
mov
cmp
mov
sar
shl
inc
mov
cmp
dec
(bad)
rcr
cmp
ror
mov
cmp
xor
mov
dec
sar
mov
cmp
push
les
ret
xor
ror
mov
fmulp
xchg
ret
xor
movs
cld
mov
cs
add
dec
into
aam
dec
into
cmp
ds
cld
xor
sub
push
pop
leave
ds
mov
cs
inc
test
cmps
xor
adc
daa
aas
adc
inc
xor
rol
xchg
xor
pop
fnstsw
shr
mov
(bad)
rcl
cmp
(bad)
dec
add
or
mov
leave
ds
mov
cs
retf
cmp
aam
jp
ror
jae
push
mov
cmp
ins
or
aad
push
into
cmp
cs
call
pop
retf
add
dec
into
mov
aam
ret
or
ror
mov
pop
int
jecxz
mov
test
xchg
xor
push
mov
ds
dec
test
push
call
pop
test
rol
dec
lods
movzx
mov
in
ret
dec
jmp
push
xchg
adc
cs
mov
lock
sbb
mov
sub
jmp
push
hlt
adc
cs
adc
ror
mov
cmp
xchg
adc
cs
mov
cmp
ror
push
rol
pop
mov
mov
cld
cmp
inc
lock
mov
and
cmp
jge
xor
cmp
xor
movs
cld
mov
ds
cld
xor
mov
xchg
xor
cli
lds
loop
mov
xor
js
jge
inc
js
and
int3
mov
pop
out
lods
xchg
dec
inc
test
cmps
xor
mov
sbb
add
clc
adc
cs
push
xor
cmp
rol
pop
ror
mov
mov
js
in
mov
sar
je
cmp
ror
mov
pop
pop
retf
cmp
dec
into
mov
ror
xor
int
jecxz
mov
mov
cs
inc
mov
mov
mov
aad
enter
push
inc
int
mov
mov
aad
enter
inc
inc
int
mov
mov
ret
jp
rol
test
xchg
xor
adc
push
cs
mov
rol
cmp
mov
fdiv
ror
aad
lds
(bad)
mov
(bad)
push
sar
faddp
dec
leave
ds
cmp
popa
ds
rcr
jmp
aam
in
jecxz
mov
xor
ins
jecxz
mov
(bad)
ret
jb
jne
xor
pop
dec
into
mov
ror
dec
stc
enter
dec
into
cmp
in
jne
cmp
(bad)
add
dec
into
cmp
in
jne
cmp
ror
and
sahf
movzx
xor
aaa
imul
inc
js
and
jnp
push
mov
ret
adc
mov
dec
stc
(bad)
jae
push
mov
cmp
and
ret
pop
leave
ds
cld
xor
in
mov
int
sub
xchg
xor
pop
dec
ffreep
push
mov
jae
ds
cmp
add
into
aam
mov
ret
cmp
xor
cmp
std
iret
enter
repz
sub
pop
inc
popf
imul
ss
jecxz
out
mov
ror
js
dec
inc
inc
ss
ins
or
test
dec
into
cmp
sub
mov
pop
or
inc
js
ror
in
jae
shl
sar
xor
jae
shl
leave
cmp
push
and
into
mov
xchg
enter
ret
mov
pop
mov
call
ss
xchg
mov
(bad)
mov
xor
xchg
pop
sub
enter
mov
iret
mov
xor
mov
inc
ds
fwait
shr
frstpm(287
fmulp
inc
cmp
sub
mov
rol
jle
jne
cmp
fdivrp
lea
mov
cmp
movs
dec
dec
js
dec
ror
stos
leave
mov
push
mov
dec
fmul
ss
dec
dec
js
dec
ror
mov
mov
push
or
ss
popa
or
test
jmp
ror
add
into
cmp
cs
ror
dec
mov
add
cs
dec
js
dec
dec
inc
sub
sar
or
inc
ds
fwait
shr
fucomi
movs
dec
dec
js
dec
and
cmp
xor
dec
push
sub
mov
in
retf
into
cmp
xchg
mov
xor
xor
adc
inc
inc
dec
fpatan
jle
or
pop
into
cmp
rcr
movs
cmp
rol
aas
mov
in
dec
into
dec
sub
or
(bad)
repnz
jg
cmp
cs
mov
pop
nop
jmp
pop
mov
push
icebp
dec
into
aad
sbb
cmp
mov
mov
adc
ror
sub
or
movs
inc
inc
mov
and
xor
and
ss
ror
daa
pop
nop
hlt
adc
pop
and
dec
inc
into
cmp
cs
push
outs
ror
pusha
adc
ret
pop
jno
(bad)
push
fnstcw
and
push
push
dec
into
cmp
mov
dec
dec
ret
and
retf
xor
movs
push
dec
inc
fisttp
cmp
ret
dec
inc
lds
scas
inc
js
ror
adc
cmp
retf
push
sub
adc
or
int
shl
into
mov
fld
mov
pop
or
mov
pop
or
popf
ret
cwde
aad
sbb
cmp
ror
js
mov
ss
pop
nop
data16
popf
imul
inc
(bad)
inc
cli
mov
dec
into
push
aad
into
push
shl
into
cmp
fldenv
inc
sti
push
pop
ret
cs
lahf
push
shl
into
push
rcr
es
xchg
inc
inc
cld
push
xor
push
je
cmp
mov
sbb
aad
sbb
cmp
sub
mov
test
nop
out
rcr
es
or
cmp
adc
ret
idiv
jne
jbe
xchg
dec
into
retf
mov
pop
(bad)
movs
cmp
shl
retf
and
push
ror
std
cs
into
cmp
es
inc
js
ror
das
mov
cmp
mov
cmp
xor
dec
inc
js
sbb
dec
shl
ins
ror
(bad)
inc
cli
xchg
(bad)
std
xchg
pop
nop
hlt
adc
cwde
push
cmp
daa
pop
pop
or
sub
jns
mov
mov
lock
pmaddwd
xor
outs
cs
mov
ror
mov
cmp
shl
dec
stc
sar
ret
cmp
sbb
aad
sbb
cmp
jmp
(bad)
fcmove
repnz
cmp
loopne
jmp
adc
std
sbb
cmp
xchg
mov
call
mov
sub
mov
imul
ret
mov
sub
aaa
dec
js
mov
cmp
xchg
dec
es
fs
and
push
and
fadd
inc
mov
cmp
push
imul
pushf
cmp
sub
rcr
adc
loop
xchg
jne
sahf
jae
mov
dec
push
mov
or
dec
into
mov
mov
into
mov
lods
mov
mov
sar
into
cmp
or
pop
iret
dec
xlat
or
push
into
mov
inc
ror
mov
into
cmp
or
or
xor
retf
int3
push
mov
cmp
movs
dec
inc
cs
mov
aas
push
mov
dec
push
cs
dec
inc
cs
mov
xor
int3
mov
mov
push
push
mov
ror
dec
aas
mov
cmp
mov
sar
int3
mov
lods
mov
dec
push
rcl
xor
mov
pop
mov
fld
cmp
pop
out
mov
dec
ror
dec
mov
pop
nop
iret
in
mov
cmp
push
push
xchg
movs
ror
or
inc
js
inc
jns
xlat
ret
fwait
xor
clc
cwde
ror
dec
mov
pop
or
(bad)
mov
inc
ror
or
and
in
mov
pop
inc
fcomp
inc
lock
sub
push
(bad)
mov
(bad)
adc
pop
lods
inc
cmp
lods
inc
fcomp
(bad)
pop
lods
inc
or
inc
fcomp
inc
fcomp
inc
or
inc
fcomp
inc
fcomp
inc
jno
lods
inc
fcomp
or
pop
lods
inc
lock
lea
test
mov
adc
pop
mov
inc
cmp
lods
inc
fcomp
(bad)
pop
lods
inc
retf
push
cmp
pop
add
fcomp
inc
cmp
pop
pop
inc
fcomp
inc
das
daa
mov
mov
(bad)
mov
pop
lods
inc
fsubr
cmp
inc
fmul
inc
in
or
lods
cld
push
inc
and
pop
add
lods
inc
fadd
(bad)
pop
lods
loopne
pop
lods
inc
fmul
aad
pop
lods
call
fdiv
lods
push
mov
lods
inc
fmul
rcr
pop
lods
movs
sbb
fsubr
lods
mov
jge
sub
into
sub
xchg
dec
mov
(bad)
adc
push
fcom
or
lods
inc
lock
sub
aad
pop
lods
inc
pop
pop
lods
inc
fcomp
sub
lods
inc
cmp
lods
inc
fcomp
push
(bad)
mov
inc
fcomp
adc
pop
lods
inc
jns
lods
inc
fcomp
inc
fcomp
inc
rol
inc
fcomp
fcomp
inc
fstp
inc
fcomp
inc
fcomp
inc
div
or
fcomp
inc
dec
lods
inc
fcomp
and
pop
lods
inc
lock
lea
dec
pop
lods
inc
cmp
lods
inc
fcomp
add
pop
lods
inc
fcomp
adc
pop
lods
inc
jns
lods
inc
fcomp
inc
fcomp
inc
rol
inc
fcomp
fcomp
inc
fstp
inc
fcomp
inc
fcomp
inc
test
loope
pop
lods
inc
dec
lods
inc
fcomp
and
pop
lods
inc
sub
inc
fcomp
cmp
shr
or
ror
sbb
mov
inc
test
xchg
inc
or
movs
mov
mov
mov
pop
mov
call
xor
or
dec
into
aam
dec
into
cmp
and
fwait
(bad)
push
xor
or
dec
and
cmp
imul
ror
cdq
push
retf
movzx
or
test
into
retf
inc
js
ror
mov
aas
fidiv
(bad)
fidiv
addr16
fidiv
addr16
rol
xor
cmp
sar
ror
pop
dec
js
stc
mov
shl
(bad)
push
inc
dec
into
cmp
cmp
cmp
sbb
sar
ror
mov
movs
cmp
ins
pop
nop
iret
int
mov
dec
stc
cmc
retf
or
push
cmp
into
pop
cs
ret
mov
mov
mov
xchg
hlt
adc
loop
xchg
jne
(bad)
fwait
aad
adc
in
shl
je
ror
ins
pop
mov
xlat
rol
aaa
and
add
ror
cmc
mov
adc
inc
js
sbb
dec
fldenv
dec
stc
fld
or
inc
dec
push
ror
xor
and
ss
inc
sub
in
jg
arpl
add
mov
lods
mov
and
ss
xor
in
loopne
jg
sar
in
mov
rcr
es
pushf
dec
into
push
frstor
into
mov
dec
retf
stc
ins
or
ds
mov
into
cmp
sbb
mov
(bad)
leave
or
mov
dec
mov
pop
pop
push
adc
xor
jo
jae
ror
icebp
ins
or
add
mov
in
pushf
jae
rol
mov
cmp
ret
into
retf
mov
pop
mov
ror
jae
sar
mov
add
dec
push
adc
sbb
cmp
mov
into
cmp
data16
(bad)
fdivrp
sbb
xor
jmp
dec
(bad)
iret
jg
cmp
rol
mov
cmp
cmp
fdivrp
xor
stos
fidiv
shl
ins
or
push
xchg
and
xchg
dec
inc
int
dec
push
adc
into
cmp
sbb
mov
(bad)
leave
and
mov
dec
mov
pop
pop
push
adc
cmp
jo
jae
ror
icebp
ins
or
add
mov
jae
rol
mov
cmp
int
or
jae
sar
mov
add
dec
push
adc
adc
or
xor
and
xor
fisubr
pop
inc
push
adc
cmp
in
mov
rol
push
(bad)
adc
mov
adc
ror
mov
sar
(bad)
xor
es
pop
mov
mov
cs
stc
fldenv
into
push
shl
int3
push
shl
into
push
ror
jge
cmp
into
cmp
and
fnstcw
xchg
mov
cwde
ret
es
cwde
dec
into
ret
es
dec
into
imul
xchg
cmp
out
dec
into
retf
mov
pop
mov
push
leave
dec
into
cmp
(bad)
fs
imul
sub
ror
aam
jp
shl
into
cmp
push
or
mov
jns
mov
mov
je
pushf
sub
ins
pop
mov
xlat
adc
out
pop
cwde
xchg
mov
retf
or
inc
test
mov
ret
xor
data16
call
xchg
add
bswap
cmp
rcl
rcr
pop
mov
mov
pop
add
mov
ret
xor
or
add
ret
es
adc
or
loop
dec
cmp
mov
(bad)
mov
inc
mov
and
cmps
enter
mov
mov
ret
or
and
push
shl
into
push
shl
into
cmp
sub
sbb
ror
mov
cs
mov
ror
cmp
cs
push
rcl
cmp
shl
xor
loope
into
cmp
pop
mov
mov
mov
dec
gs
outs
mov
lds
das
mov
ins
cmp
test
sub
xor
xchg
adc
lds
das
mov
ins
mov
mov
jbe
cwde
dec
into
retf
dec
aad
mov
mov
mov
dec
gs
push
adc
adc
lds
das
mov
ins
mov
mov
popf
push
mov
xor
int3
cmp
ror
mov
mov
cmp
adc
ret
pop
inc
dec
(bad)
inc
dec
fs
(bad)
inc
cli
cs
mov
lds
scas
inc
js
ror
mov
into
mov
mov
mov
mov
push
shl
icebp
cmp
mov
cmp
es
dec
into
mov
retf
push
ret
repnz
cmp
xor
push
movs
cmp
dec
xor
mov
sar
xchg
call
mov
rcr
pop
inc
in
or
sub
dec
into
ret
xor
sbb
dec
lds
ret
inc
es
dec
into
mov
adc
jno
in
jnp
mov
mov
inc
cli
mov
or
faddp
movs
inc
xor
mov
dec
stc
leave
pop
pop
inc
jno
xchg
ss
lds
rol
int3
cmp
mov
mov
xor
rol
dec
aad
push
(bad)
out
mov
ret
movs
cmp
movs
mov
push
cdq
dec
into
xor
cmp
ret
add
mov
ss
mov
sar
xchg
mov
dec
rol
push
cdq
mov
pop
inc
js
cs
js
div
sbb
retf
into
cmp
sub
mov
lds
cmp
cs
es
xor
cmp
or
mov
sahf
imul
faddp
movs
mov
fcom
cmp
ret
es
xchg
dec
into
or
mov
mov
or
and
ror
ficomp
ds
pop
nop
hlt
adc
cwde
push
out
test
leave
leave
or
dec
into
mov
ror
push
cmp
cmp
xchg
dec
into
mov
mov
(bad)
inc
cli
jo
sbb
jno
lds
mov
and
cmp
mov
sub
jg
mov
ins
rol
mov
rol
dec
aad
push
(bad)
(bad)
mov
rol
aad
push
into
cmp
xlat
leave
cmp
retf
dec
into
bound
aas
push
das
pop
and
pop
mov
cmc
dec
inc
sub
sbb
inc
cdq
mov
inc
inc
pusha
fisttp
inc
or
xor
mov
loop
jge
add
inc
mov
in
sar
or
xor
mov
dec
stc
ffree
ss
ret
fwait
sub
pop
mov
std
shl
sbb
ror
mov
adc
adc
add
cmp
dec
add
inc
mov
sti
ror
js
int
cmp
cmp
int
nop
sahf
aad
or
cmp
sub
inc
xor
sar
or
xor
mov
inc
js
ror
rcr
cmp
std
mov
xchg
hlt
adc
fisubr
pop
inc
pusha
(bad)
inc
cmp
ds
dec
into
outs
cmp
mov
pop
(bad)
pop
ficom
(bad)
push
or
mov
xchg
mov
ror
inc
push
dec
fild
cmp
retf
ds
pop
dec
std
jnp
cmp
mov
cmp
ror
jne
push
push
pop
mov
daa
ror
movs
es
jmp
mov
daa
ror
xchg
stos
pmovmskb
rcr
mov
inc
inc
and
or
push
xor
sub
dec
dec
jle
mov
mov
xchg
hlt
adc
into
aas
shl
popf
imul
pand
retf
imul
mov
cmp
sub
into
mov
mov
ret
sbb
dec
frstor
dec
stc
fld
or
mov
inc
adc
aam
inc
into
cmp
das
mov
dec
fcomp
es
xchg
dec
into
or
mov
xor
mov
inc
mov
imul
lds
mov
mov
pushf
xor
cs
jae
cs
push
ins
nop
xor
cs
test
mov
ret
hlt
cmp
mov
dec
into
mov
mov
ret
cs
or
movs
inc
cmps
cmp
dec
into
aad
or
cmp
pop
mov
fld
dec
in
cs
mov
retf
push
ret
repnz
cmp
(bad)
mov
cwde
xor
cs
xor
cmp
add
cs
or
shl
mov
mov
mov
shr
xor
mov
(bad)
aad
or
into
cmp
push
mov
inc
ret
fst
mov
ret
mov
pop
mov
xor
into
cmp
sub
push
cmp
lods
cmp
sub
inc
sub
lock
dec
cdq
aad
or
cmp
or
cmp
rcl
cmp
push
mov
inc
ret
fst
mov
ret
mov
mov
mov
shr
xor
xor
mov
aad
or
cmp
rcl
cmp
push
mov
inc
ret
fst
mov
ret
mov
cmp
mov
ror
retf
xor
lods
imul
xchg
dec
into
test
mov
xor
das
mov
push
out
xchg
mov
ror
stc
shl
jg
ret
dec
shr
xor
imul
je
dec
into
mov
adc
into
cmp
shl
les
sub
xor
lods
pop
cmps
int
or
ret
xor
mov
dec
stc
fldenv
(bad)
xor
cmp
cmp
cmp
les
sub
xor
lods
pop
cmps
int
or
ret
xor
mov
dec
stc
fldenv
int
xchg
dec
xor
cmp
or
shl
les
sub
xor
lods
imul
xchg
dec
into
test
mov
xor
das
mov
push
out
xchg
mov
ror
stc
shl
push
ror
fistp
add
sub
inc
sti
cmp
lea
ror
retf
cmps
ror
into
mov
xchg
xor
cs
es
xchg
dec
into
mov
xchg
xor
sbb
dec
rol
shr
xor
cwde
adc
sbb
ins
xchg
dec
into
mov
xchg
dec
into
test
dec
into
cmp
sub
push
cmp
cmp
ror
retf
inc
sub
lock
dec
cdq
aad
or
cmp
and
xor
ror
and
into
cmp
rcl
cmp
push
mov
inc
ret
fst
mov
ret
lea
cmp
les
sub
xor
lods
pop
cmps
test
into
ret
xor
mov
dec
stc
fldenv
ja
ror
movs
es
(bad)
aam
fst
test
cmp
das
mov
clc
xchg
dec
into
mov
loopne
inc
sti
mov
mov
sub
xor
das
mov
push
dec
xchg
mov
ror
stc
lds
ja
ror
movs
es
(bad)
aam
fst
xchg
mov
das
mov
inc
xchg
dec
into
mov
xchg
dec
into
test
dec
into
cmp
sub
cs
mov
shr
xor
mov
into
cmp
lds
into
cmp
rcl
cmp
push
mov
inc
repnz
ja
ror
movs
es
mov
mov
ret
cs
cmps
add
or
push
mov
cmp
push
xor
dec
cmp
dec
dec
cwde
adc
mov
or
ror
and
dec
into
mov
cs
and
ret
int
adc
ss
mov
ret
int
adc
repnz
pop
mov
daa
ror
movs
es
push
push
into
cmp
adc
mov
xor
rcr
push
sub
ret
cmps
addr16
or
mov
dec
into
ret
es
nop
dec
into
mov
test
retf
dec
test
mov
mov
mov
std
cs
mov
cs
inc
dec
dec
cs
ret
xor
cs
and
cs
mov
mov
ret
sbb
ins
cmp
cmp
cmp
les
sub
xor
lods
pop
cmps
pusha
(bad)
into
ret
xor
mov
dec
stc
fldenv
ja
ror
movs
es
(bad)
aam
fst
xchg
mov
das
mov
les
inc
inc
int
mov
mov
ror
retf
xor
lods
pop
cmps
int
or
ret
xor
mov
dec
stc
fxch
dec
stc
cs
mov
push
mov
dec
lds
mov
add
mov
shr
dec
mov
push
movs
xor
sar
aaa
ror
mov
mov
mov
inc
js
ror
mov
aam
dec
into
cmp
cs
xor
iret
cmp
and
or
sbb
add
mov
ret
cs
dec
jnp
dec
into
mov
mov
ret
ror
mov
ret
cmps
fs
into
mov
mov
es
dec
into
mov
and
xor
push
je
cmp
mov
jae
cs
mov
jns
mov
lds
shl
dec
sti
cs
mov
dec
cmp
sub
sahf
aad
jae
cmp
sub
sahf
aad
mov
ret
retf
mov
jnp
cs
ret
xor
pop
int
ret
sahf
push
mov
mov
ror
stc
leave
mov
ja
ror
movs
es
(bad)
aam
fst
xchg
mov
das
mov
cwde
out
dec
into
mov
sar
icebp
cmp
ror
retf
xor
lods
pop
cmps
test
into
ret
xor
mov
dec
stc
fldenv
ja
ror
movs
es
(bad)
aam
fst
test
cmp
das
mov
push
adc
mov
ret
cmc
cmp
(bad)
dec
into
ret
xor
lds
shl
ss
popf
aad
mov
ret
mov
ret
cs
push
xor
ret
hlt
jecxz
dec
xor
cmp
cmp
cmp
les
sub
xor
lods
pop
cmps
pusha
(bad)
into
ret
xor
mov
dec
stc
fldenv
ja
ror
movs
es
(bad)
aam
fst
xchg
mov
das
mov
sub
into
mov
es
inc
mov
pop
mov
push
out
dec
into
test
dec
into
cmp
sub
cs
mov
shr
xor
pop
jbe
cmp
jecxz
mov
das
mov
inc
out
dec
into
mov
out
dec
into
test
dec
into
cmp
sub
push
cmp
cmp
ror
retf
inc
sub
lock
dec
cdq
aad
jbe
cmp
shl
cmp
rcl
cmp
push
mov
inc
ret
jecxz
dec
xor
cmp
cmp
push
mov
es
fisttp
cmp
sub
cs
mov
shr
xor
and
mov
aad
jne
cmp
rcl
cmp
push
mov
inc
ret
fst
mov
ret
repz
cmp
repz
ror
retf
xor
lods
imul
in
dec
into
test
mov
xor
das
mov
push
out
xchg
mov
ror
stc
shl
jecxz
dec
xor
cmp
repz
pop
mov
es
dec
into
test
dec
into
cmp
sub
cs
mov
shr
xor
lea
cmp
int
mov
das
mov
je
dec
into
mov
in
dec
into
test
dec
into
cmp
sub
cs
mov
shr
xor
cmc
jne
cmp
retf
xchg
mov
das
mov
sub
dec
into
mov
xlat
pop
into
cmp
shl
les
sub
xor
lods
pop
cmps
int
or
ret
xor
mov
dec
stc
fld
dec
jecxz
mov
ins
pop
int
ret
sahf
push
rcl
push
stc
shl
aaa
ror
movs
es
(bad)
aam
fst
test
cmp
das
mov
cwde
in
dec
into
mov
(bad)
into
ret
xor
mov
dec
stc
fldenv
ja
ror
movs
es
(bad)
aam
fst
test
cmp
das
mov
push
in
dec
into
mov
stos
dec
into
retf
dec
std
cs
mov
mov
ja
ror
movs
es
jmp
cdq
mov
mov
ret
cs
cmps
aad
or
push
inc
repnz
cmp
les
sub
xor
lods
pop
cmps
int
or
ret
xor
mov
dec
stc
fldenv
adc
xchg
dec
xor
cmp
or
shl
les
sub
xor
lods
pop
cmps
int
or
ret
xor
mov
dec
stc
fxch
cmp
dec
into
aad
jae
cmp
rcl
cmp
push
mov
inc
repnz
ja
ror
movs
es
mov
mov
ret
cs
cmps
add
or
push
aas
cmc
cmp
mov
mov
shr
xor
pop
jae
cmp
shl
into
push
shl
into
push
shl
into
cmp
fldenv
inc
mov
push
mov
ror
mov
iret
idiv
ins
mov
sahf
ret
xor
cs
aad
mov
aad
jo
cmp
sub
es
out
into
ret
xor
mov
inc
int
mov
pop
or
dec
inc
mov
mov
xchg
hlt
adc
(bad)
cmp
dec
cdq
sbb
cmp
pop
int
ret
cs
cli
pop
or
ror
xchg
mov
cs
aad
jb
cmp
pop
(bad)
movs
cmp
rol
dec
ret
xor
dec
into
cmp
cs
stc
int
mov
rol
mov
in
dec
mov
add
fwait
xchg
mov
push
mov
cmps
jmp
or
push
or
jg
and
cmp
and
dec
ror
or
cmp
jp
je
pop
mov
lds
dec
cwde
dec
mov
ret
mov
inc
mov
rol
dec
lods
sub
xor
aam
into
cmp
sub
xor
jns
mov
inc
inc
sti
push
mov
imul
stc
cmp
pop
sbb
cmp
mov
imul
stc
cmp
sub
xor
fs
call
push
sub
xor
test
jg
fst
cs
(bad)
inc
cli
xchg
inc
mov
cs
outs
shr
es
out
into
mov
cmp
ret
jnp
sub
xor
xor
cmp
pop
xor
ret
call
mov
mov
inc
iret
mov
dec
iret
jg
fld
cs
retf
into
cmp
shl
inc
mov
push
mov
movs
sub
jne
xor
and
into
ins
cmp
cmp
ror
mov
and
cmps
mov
dec
into
mov
cs
or
fmul
push
std
cmp
int3
cmp
cs
cmp
dec
into
mov
mov
ret
inc
mov
and
xor
cs
pop
shr
xor
cs
inc
shr
xor
cs
outs
shr
cwde
mov
cld
xor
sbb
jae
mov
mov
dec
mov
ret
mov
or
dec
(bad)
std
cmp
outs
loope
dec
inc
mov
and
inc
cli
pop
int
shr
sahf
mov
mov
ret
lods
jmp
cmps
xor
pop
int
shr
movs
jns
dec
inc
mov
and
ss
ror
push
lock
cs
cmp
das
mov
cmp
dec
into
pop
push
int
ret
cs
cmp
cs
dec
int
or
ror
cli
into
or
cmp
cs
aad
mov
dec
cdq
sub
xor
int
ret
cs
push
shl
into
push
icebp
and
push
shl
into
mov
mov
ret
movs
cmp
rol
xor
into
cmp
sub
xor
imul
lds
xor
mov
and
mov
and
dec
dec
sub
xor
ficom
xor
cs
push
movs
xchg
mov
rol
or
push
cmp
cmp
ror
dec
dec
sub
xor
int
shr
repnz
sbb
into
aad
jl
cmp
cs
dec
(bad)
into
int
dec
es
dec
into
push
aad
into
cmp
cs
outs
cmp
cli
cmp
mov
int
ret
cs
aad
cmc
xor
push
mov
add
mov
cmp
dec
mov
ret
sar
cs
dec
cli
into
das
into
cmp
dec
mov
ret
or
push
cld
xor
sbb
pusha
in
into
test
into
cmp
mov
(bad)
cwde
aad
jnp
cmp
jne
xor
cmp
jnp
sub
xor
jne
into
cmp
cs
xor
les
push
and
ret
or
adc
call
dec
fwait
mov
retf
and
mov
fisttp
mov
jns
mov
mov
xor
rol
or
pop
sbb
ss
mov
xor
repz
cmp
pop
sbb
es
loop
into
mov
cs
push
loop
into
mov
cs
push
das
inc
jns
sub
sbb
jns
and
sbb
rol
or
jns
mov
inc
mov
and
enter
mov
and
mov
std
aam
es
dec
into
ret
ror
dec
mov
outs
(bad)
cmp
sub
or
movs
pop
ror
dec
ror
dec
sahf
aad
jns
cmp
das
lds
push
sbb
xchg
pop
int
cmp
mov
and
popf
jge
and
push
shl
inc
sti
push
cmps
xor
ror
ret
ins
psrlw
js
sbb
cmp
ror
js
pop
nop
data16
and
dec
es
xchg
inc
pusha
fincstp
sub
das
inc
(bad)
inc
cli
imul
sub
ror
push
hlt
cs
sar
xor
push
(bad)
mov
push
mov
mov
rol
or
inc
dec
lods
ror
mov
rcr
xor
cmp
cli
cmp
fmul
push
(bad)
mov
dec
frstor
inc
lds
scas
inc
mov
pop
(bad)
(bad)
std
xchg
mov
cs
sar
xor
push
(bad)
mov
imul
loope
rol
dec
in
ss
ror
cs
or
cs
or
dec
into
mov
movs
push
xor
cs
into
cmp
fcmovne
and
cwde
dec
into
(bad)
jnp
push
bound
shr
lds
cmp
rcr
cwde
push
adc
cmp
out
or
dec
inc
int
mov
retf
dec
es
into
mov
retf
push
ret
repnz
cmp
(bad)
mov
dec
xor
cmp
ret
or
rcr
es
dec
into
mov
inc
and
cmp
pop
mov
mov
dec
cs
es
dec
into
mov
loop
into
test
dec
into
cmp
sub
sub
lds
xor
std
cmp
cmp
std
cmp
ror
retf
xor
lods
popa
es
loop
into
test
mov
into
(bad)
mov
push
mov
(bad)
mov
aad
jnp
cmp
push
jnp
cmp
rcl
cmp
push
mov
inc
lds
fst
test
ret
push
push
ror
stc
fld
ds
ror
out
mov
cs
aad
jnp
cmp
xchg
jnp
cmp
rcl
cmp
push
mov
inc
lds
fst
test
ret
nop
push
ror
stc
fldenv
ja
ror
movs
es
(bad)
aam
out
fnstcw
cmp
rcl
cmp
add
cmp
mov
lds
xor
cld
cmp
cs
mov
cs
push
lock
mov
cs
aad
jp
cmp
and
adc
ror
popa
jp
cmp
rcl
cmp
push
mov
inc
lds
fst
test
ret
add
ror
stc
fldenv
(bad)
inc
mov
and
mov
aaa
ror
movs
es
(bad)
aam
ficom
test
cmp
cs
aad
jp
cmp
rcl
into
(bad)
mov
aad
jp
cmp
and
adc
ror
loope
into
cmp
rcl
cmp
push
mov
inc
clc
mov
ja
ror
movs
es
mov
dec
cs
cmps
gs
dec
cs
es
dec
into
mov
(bad)
into
mov
dec
cs
es
dec
into
mov
loopne
into
test
dec
into
cmp
sub
sub
lds
xor
(bad)
cmp
mov
lds
xor
(bad)
cmp
pop
mov
es
loopne
into
test
dec
into
cmp
sub
sub
lds
xor
(bad)
cmp
mov
lds
xor
(bad)
cmp
cmp
(bad)
cmp
ror
retf
xor
lods
pop
cmps
int
or
mov
dec
cs
es
adc
fs
cmp
push
dec
cs
cmps
adc
dec
cs
es
dec
into
mov
loopne
into
test
dec
into
cmp
sub
sub
lds
xor
(bad)
cmp
mov
lds
xor
(bad)
cmp
cmp
les
sub
xor
lods
pop
cmps
int
or
mov
dec
cs
es
dec
into
mov
mov
ror
mov
mov
mov
ja
ror
movs
es
jmp
cdq
mov
dec
cs
cmps
sub
dec
cs
mov
adc
dec
into
test
dec
into
cmp
sub
sub
lds
xor
(bad)
cmp
mov
lds
xor
(bad)
cmp
push
cmps
jl
ror
add
dec
into
test
dec
into
cmp
sub
sub
lds
xor
(bad)
cmp
cmp
cmp
ror
retf
xor
lods
popa
es
dec
into
test
mov
into
(bad)
mov
push
mov
(bad)
mov
aad
addr16
cmp
add
into
(bad)
mov
aad
js
cmp
shl
into
push
shl
into
push
shl
into
cmp
pop
fs
cmp
cs
sti
sbb
cmp
cs
aad
gs
cmp
sub
inc
adc
xor
xchg
xor
xor
std
xor
cs
inc
cli
dec
into
or
or
int
mov
push
push
dec
into
cmp
aas
sub
cmp
pop
int
(bad)
cs
cli
push
in
push
shr
into
or
leave
or
dec
into
mov
inc
popf
aad
fs
cmp
test
mov
fdiv
ret
ss
dec
mov
push
mov
sahf
aad
addr16
cmp
cs
or
in
into
push
rcr
in
rol
dec
popf
sub
xor
and
mov
in
xor
sbb
cld
dec
push
aad
into
cmp
cs
push
jle
mov
shl
int3
cmp
xor
xor
fmulp
arpl
ror
cmp
dec
into
mov
mov
ret
inc
mov
and
inc
cli
cs
outs
shr
popf
mov
cld
xor
sbb
adc
mov
mov
fmulp
mov
popf
or
mov
ret
es
dec
mov
cld
xor
sbb
sub
mov
es
xor
xor
shl
sub
or
and
mov
lock
sbb
sub
dec
into
mov
(bad)
dec
into
cmp
cs
cmp
xor
dec
into
cmp
cs
dec
int
or
ror
cli
movs
and
cmp
cs
aad
scas
xor
mov
dec
cdq
sub
xor
int
ret
cs
push
shl
into
push
icebp
and
push
shl
into
mov
mov
ret
movs
cmp
rol
xor
iret
cmp
sub
xor
adc
cmp
pop
(bad)
xor
mov
and
mov
and
dec
inc
sub
dec
cli
mov
int
ret
cs
push
movs
xchg
mov
rol
or
cmp
into
cmp
ror
dec
inc
sub
mov
cs
cmp
int3
(bad)
cmp
dec
cmps
cmp
and
lds
cmps
cmp
dec
into
mov
fdiv
ret
cwde
aad
(bad)
into
cmp
or
fdiv
ret
es
adc
dec
into
xor
into
cmp
sub
jle
cs
stc
fld
xor
into
cmp
fdiv
ret
dec
mov
mov
ins
cmp
out
ror
cmp
dec
into
mov
aam
ret
xor
cmp
ret
or
fdiv
ret
test
ror
ss
(bad)
into
cmp
xchg
dec
cwde
aad
fs
cmp
adc
mov
rol
push
mov
cmp
mov
dec
cmp
shr
or
mov
mov
pop
int
shr
dec
aad
sbb
ret
aad
cs
stc
(bad)
and
mov
dec
out
ror
xor
dec
into
mov
cld
xor
sbb
hlt
clc
dec
into
mov
dec
ss
and
ret
xor
mov
xor
cmp
cmp
sub
xor
xlat
leave
cmp
mov
into
bound
dec
fwait
mov
retf
and
mov
retf
scas
mov
rcr
es
xchg
mov
dec
frstor
inc
push
rcr
jge
xor
cmp
xchg
jbe
lahf
dec
into
retf
mov
pop
(bad)
popf
aad
popa
into
cmp
test
outs
cmp
cmp
test
push
rcr
cmps
xchg
(bad)
shl
into
aad
popa
into
cmp
xchg
inc
lds
scas
inc
js
ror
xchg
mov
imul
jmp
push
test
xchg
mov
arpl
lods
jbe
ror
inc
outs
into
cmp
xchg
ds
cmp
movs
inc
es
into
mov
shl
sub
or
cmp
lea
inc
into
cmp
cs
imul
out
shl
iret
ret
inc
mov
and
xor
ror
cmp
and
pop
ror
aas
xchg
inc
sti
cmp
xchg
arpl
mov
xor
push
dec
retf
into
cmp
ror
pop
fdivrp
mov
and
inc
js
sbb
in
sti
dec
into
mov
rol
mov
and
into
cmp
xchg
dec
es
dec
into
xor
xor
cs
mov
cmp
in
ror
or
mov
dec
into
ret
push
jl
mov
test
xchg
mov
mov
pop
bound
mov
xor
push
cmps
test
inc
into
cmp
sub
and
push
shl
into
push
aam
iret
push
shl
into
push
shl
pop
cmp
dec
movs
cmp
mov
dec
into
mov
lock
fistp
ss
and
push
js
or
mov
shl
iret
push
js
or
aad
cmp
shl
iret
push
js
or
mov
shl
iret
push
js
or
xlat
(bad)
cmp
shl
iret
push
js
or
fisttp
cmp
xchg
push
rcr
movs
or
nop
dec
es
dec
into
push
rcr
movs
or
nop
dec
es
dec
into
push
rcr
movs
or
xchg
dec
es
dec
into
push
rcr
movs
or
xchg
dec
es
dec
into
mov
jns
mov
and
push
js
or
ror
cmp
mov
aad
cmp
shl
iret
push
js
or
mov
shl
iret
push
js
or
mov
shl
jp
ror
fistp
cmp
pop
jno
iret
aad
mov
shl
xor
in
push
jl
mov
ins
sbb
ror
cmp
cmp
(bad)
cmp
shl
xor
in
outs
jg
mov
ins
add
into
push
ror
cmp
push
jmp
jmp
jg
dec
into
push
sub
or
aad
outs
into
cmp
shl
fidivr
cs
mov
test
and
aad
outs
into
cmp
shl
fidivr
cs
test
dec
es
test
adc
popa
outs
into
cmp
shl
fidivr
cs
mov
test
sbb
pop
outs
into
cmp
shl
fidivr
cs
mov
test
mov
and
ret
outs
jg
mov
ins
and
into
push
ror
cmp
push
jmp
call
push
lds
cdq
and
adc
ror
enter
ret
lods
sub
and
out
dec
cwde
aad
mov
ret
ficomp
mov
outs
into
cmp
ror
js
sbb
cmp
in
(bad)
cmp
xchg
mov
js
sbb
sub
int
and
push
shl
into
cmp
push
or
push
xor
int3
cmp
ror
jns
or
push
shl
into
push
rcr
movs
add
ss
xchg
mov
movs
sub
enter
xchg
mov
shl
into
aad
outs
into
cmp
rol
ss
ror
shl
into
push
shl
into
push
inc
dec
into
cmp
xchg
mov
movs
ins
mov
enter
xchg
mov
shl
into
aad
ins
into
cmp
shl
into
push
shl
into
push
shl
retf
push
shl
into
push
shl
into
push
ins
dec
into
cmp
mov
dec
call
push
rcr
movs
or
nop
dec
es
hlt
dec
into
push
shl
into
push
shl
into
push
shl
aas
ror
pop
mov
dec
sahf
push
mov
xchg
adc
aad
ins
into
cmp
ror
cmp
shl
into
push
shl
into
push
shl
aas
ror
inc
mov
dec
sahf
push
leave
xchg
mov
shl
into
aad
ins
into
cmp
shl
into
ret
push
jl
and
ret
outs
jl
and
push
add
cmp
shl
out
ror
ins
mov
and
xchg
dec
movs
cmp
shr
ret
dec
movs
cmp
nop
dec
movs
cmp
nop
dec
movs
sub
shl
jo
ror
adc
and
cmps
out
or
push
shl
ins
sub
into
push
shl
into
push
shl
into
push
mov
stos
push
jnp
into
cmp
ror
sahf
push
or
int
jg
and
aad
ins
into
cmp
ror
or
stos
xchg
mov
ror
ins
cmp
cmp
xchg
dec
movs
cmp
shl
into
aad
ins
into
cmp
in
(bad)
cmp
mov
mov
shl
cld
push
jnp
into
cmp
ror
sahf
push
or
int
jg
and
aad
ins
into
cmp
ror
or
dec
into
push
shl
into
push
shl
into
push
std
dec
into
cmp
ror
push
jg
into
cmp
and
cmps
mov
shl
ins
adc
into
aad
mov
ret
xor
in
(bad)
cmp
xchg
call
movs
push
mov
and
cmp
mov
xchg
adc
aad
imul
jb
ins
jg
shl
ror
cs
mov
cs
popf
nop
dec
movs
sub
shl
xor
ror
push
ror
ins
mov
and
xchg
dec
movs
cmp
shr
mov
cmp
nop
dec
movs
cmp
nop
dec
movs
sub
ror
push
adc
cmp
and
cmps
out
or
push
shl
ins
or
shl
into
push
shl
into
push
shl
cmp
ror
push
mov
into
cmp
or
into
push
or
es
and
(bad)
cmp
in
(bad)
cmp
xchg
call
movs
imul
outs
cmp
ror
push
xlat
xchg
mov
shl
into
aad
push
cmp
shl
into
ret
push
jl
and
ret
outs
jg
and
push
std
dec
into
cmp
shl
ficom
dec
dec
ins
mov
and
out
dec
cmps
cmp
mov
into
cmp
shl
into
ret
push
jl
and
ret
outs
jg
and
push
push
dec
into
cmp
shl
ficom
dec
dec
ins
mov
and
out
dec
cmps
cmp
cmc
push
cmp
rol
ss
ror
shl
into
push
shl
into
push
leave
and
push
or
pop
cmps
cmp
or
dec
adc
shl
into
aas
ror
fdiv
dec
into
sahf
stc
xlat
(bad)
cmp
in
(bad)
cmp
mov
mov
mov
and
push
ror
ins
mov
and
out
dec
cmps
cmp
jge
into
cmp
shl
into
ret
push
jl
and
ret
outs
jl
and
push
dec
dec
into
cmp
shl
rcl
dec
dec
ins
mov
and
xchg
dec
movs
cmp
shr
push
sahf
xchg
dec
sub
ss
mov
xchg
arpl
mov
and
mov
jns
mov
and
out
dec
xor
mov
inc
sti
mov
push
and
mov
mov
dec
or
mov
popa
ss
and
ret
push
jl
mov
inc
js
sbb
cmp
in
(bad)
cmp
xchg
mov
js
sbb
sub
int
and
push
shl
into
cmp
push
or
push
xor
int3
cmp
ror
jns
or
push
shl
into
push
rcr
movs
add
ss
xchg
mov
movs
sub
enter
xchg
mov
shl
into
aad
push
push
jl
leave
and
dec
into
push
shl
into
push
shl
into
push
std
dec
into
cmp
xchg
mov
movs
ins
mov
enter
xchg
mov
shl
into
aad
push
outs
jg
and
push
shl
into
push
shl
retf
push
shl
into
push
shl
into
push
ins
dec
into
cmp
mov
shr
cmp
rcr
movs
or
nop
dec
es
into
dec
into
push
shl
into
push
shl
into
push
mov
stos
push
lds
ficom
dec
dec
ins
mov
and
xchg
dec
movs
cmp
shr
mov
enter
mov
and
push
xchg
dec
into
cmp
ror
dec
or
into
push
shl
lea
dec
xor
cmp
(bad)
cmp
ror
rep
jae
into
or
cmps
jae
dec
into
ret
push
jl
mov
and
cmp
shl
into
aad
push
into
cmp
in
(bad)
cmp
mov
mov
shl
cld
push
lds
mov
ror
ins
mov
and
xchg
dec
movs
cmp
shr
dec
pushf
xchg
dec
inc
(bad)
inc
cli
mov
xlat
(bad)
cmp
mov
mov
shl
repnz
lds
pusha
cmp
ror
sahf
push
or
int
jg
and
aad
push
into
cmp
shl
movs
cmp
nop
dec
movs
cmp
nop
dec
movs
sub
shl
mov
cmp
and
cmps
out
or
push
shl
ins
dec
jo
into
push
shl
into
push
shl
into
push
shl
push
push
dec
into
cmp
shl
into
cmp
or
into
push
or
es
iret
dec
into
sahf
loope
(bad)
cmp
sar
inc
cli
mov
xlat
(bad)
cmp
xchg
call
cmps
rcl
into
push
jno
into
cmp
ror
push
ret
cmp
shl
into
aad
push
into
cmp
shl
into
ret
push
jl
and
ret
outs
jl
and
push
xchg
ja
ror
popf
ror
push
ror
ins
mov
and
xchg
dec
movs
cmp
shr
pop
sahf
xchg
dec
movs
cmp
nop
dec
movs
cmp
nop
dec
movs
sub
shl
sub
mov
and
out
or
push
shl
ins
inc
jo
into
push
shl
into
push
shl
into
push
shl
cmp
ror
push
iret
and
cmp
or
into
push
or
es
dec
into
sahf
jno
mov
in
(bad)
cmp
mov
mov
ror
push
cld
and
push
ror
ins
mov
and
out
dec
cmps
cmp
test
push
pop
jge
leave
cmp
shl
into
push
shl
into
push
leave
and
push
xchg
and
push
ror
ins
mov
and
out
dec
cmps
cmp
in
push
into
cmp
shl
into
ret
push
jl
and
ret
outs
jg
and
push
mov
xchg
push
lds
into
cmp
push
or
push
rcl
int3
cmp
ror
sbb
shl
into
push
shl
into
push
(bad)
and
ror
jge
dec
into
push
iret
and
cmp
or
into
push
sub
es
into
sahf
dec
jmp
cmp
cs
outs
ror
ficomp
es
mov
xchg
arpl
mov
and
repz
xor
cmp
pop
or
into
push
push
dec
into
cmp
mov
dec
dec
ret
mov
pop
retf
xor
fmulp
pop
cmp
xchg
inc
inc
dec
dec
pop
sub
dec
into
cmp
ror
and
inc
js
sbb
sub
and
mov
dec
dec
aad
jmp
ret
(bad)
add
mov
jp
dec
xor
and
or
into
ret
xor
mov
dec
stc
leave
ror
mov
or
ficom
cld
mov
push
mov
dec
stc
leave
shl
sub
or
adc
inc
iret
cmp
data16
mov
dec
shl
into
cmp
rol
dec
cmp
cmp
(bad)
cmp
ror
xor
dec
into
movs
es
out
pop
adc
iret
dec
shl
lea
mov
ret
clc
and
clc
mov
xor
movs
pop
cmps
in
or
mov
dec
xor
sbb
and
dec
into
mov
shl
lea
mov
ret
int3
and
cs
mov
jg
lds
cs
ins
cmp
ds
ror
lods
mov
dec
shl
mov
mov
ret
add
ror
inc
cs
mov
jg
lds
cs
ins
cmp
fnstcw
(bad)
cmp
mov
cs
aad
pop
into
cmp
movs
pop
cmps
mov
push
dec
xor
sbb
mov
dec
into
mov
popa
ds
enter
cmp
mov
cs
aad
pop
into
cmp
movs
pop
cmps
loop
or
mov
dec
xor
sbb
push
lods
mov
dec
shl
(bad)
xchg
dec
inc
mov
and
mov
jg
lds
cs
ins
cmp
cmp
fdivr
mov
cs
aad
pop
into
cmp
pop
int
ret
cs
sti
push
xor
cmps
push
push
dec
xor
sbb
rol
dec
into
push
shl
into
push
xchg
xchg
mov
rol
dec
cmp
mov
mov
cmps
push
or
into
push
outs
stc
mov
shl
cmps
std
test
and
cmp
and
xor
ror
div
pop
call
dec
fwait
mov
sbb
xor
pop
outs
pop
mov
lds
inc
retf
dec
and
xlat
dec
cdq
outs
cmp
ret
or
mov
push
into
cmp
adc
pop
lods
dec
shr
inc
into
cmp
xlat
jno
add
mov
shl
jno
cmp
rol
dec
shl
mov
ins
cmp
cmp
ror
xor
dec
into
movs
es
test
mov
ret
cmp
dec
shl
(bad)
xchg
dec
inc
mov
and
xor
sar
mov
cs
aad
pop
into
cmp
cs
dec
shl
(bad)
xchg
dec
inc
mov
and
into
retf
dec
fldenv
mov
mov
enter
mov
cmp
into
mov
movs
cmp
sbb
pushf
les
mov
cs
mov
jg
lds
es
ins
cmp
fstp
sub
cmps
or
into
mov
movs
cmp
sbb
push
les
mov
cs
mov
jg
lds
es
ins
cmp
fstp
and
or
cs
mov
jg
lds
es
ins
cmp
cmp
sub
cmps
mov
or
mov
movs
cmp
sbb
and
dec
into
mov
cs
mov
jg
lds
es
ins
cmp
jae
sub
cmps
hlt
bound
into
mov
movs
cmp
sbb
fadd
dec
into
mov
mov
cmp
ror
ins
mov
mov
jg
lds
es
ins
cmp
fidivr
sub
cmps
ds
mov
movs
cmp
sbb
cwde
lds
mov
cs
mov
jg
lds
es
ins
cmp
fidivr
xchg
dec
inc
mov
and
inc
mov
pop
mov
push
pop
cli
mov
cs
or
cs
and
xor
jecxz
ret
mov
cs
sar
cmps
dec
ror
int
scas
inc
mov
pop
mov
int
mov
out
dec
cmps
dec
jno
into
aad
mov
ret
(bad)
mov
movs
ss
push
xor
cmp
ror
sub
dec
hlt
ror
mov
cs
mov
push
cmc
xor
cs
xor
cmp
sub
add
cmp
push
pushf
cmp
ror
push
mov
ret
cmps
or
or
mov
mov
ret
es
adc
mov
ret
out
xchg
push
into
cmp
mov
inc
cld
mov
aaa
and
add
ror
jmp
mov
push
jne
mov
out
pop
pushf
xchg
dec
cmps
pop
or
into
mov
mov
ret
es
dec
into
mov
popa
ds
and
xchg
dec
cmps
and
or
mov
mov
ret
es
(bad)
dec
into
mov
mov
lds
sub
fidivr
ror
fistp
push
retf
inc
sti
pop
int
lds
mov
push
rcl
ret
cs
aad
pop
into
cmp
rol
dec
shr
xor
xchg
cmp
pop
int
ret
cs
aad
pop
into
cmp
cs
std
aad
inc
mov
and
inc
mov
and
into
mov
mov
ret
es
lds
push
shl
cmp
xchg
dec
inc
mov
and
push
xor
cmp
sub
dec
sahf
aad
pop
into
cmp
sub
sub
ror
ins
mov
ret
sar
std
lds
mov
lods
jo
into
push
xor
mov
cs
aad
pop
into
cmp
pop
cli
mov
cs
aad
pop
into
cmp
cs
aad
pop
into
cmp
cs
sbb
sbb
cs
adc
addr16
retf
or
cs
and
retf
dec
add
pop
mov
mov
cmp
ror
fs
ret
dec
shr
xor
sahf
push
jg
lds
das
mov
ins
cmp
fdivr
pop
int
lds
mov
aad
pop
into
cmp
cs
sub
jl
ror
sbb
xor
pop
xor
sub
xor
cmp
cs
retf
jp
into
cmp
cs
ret
ss
mov
mov
and
xor
xchg
jae
sub
iret
push
sbb
cmp
sub
xor
mov
and
push
shl
sahf
aad
pop
into
cmp
cs
outs
cs
and
cs
les
xor
fmul
xor
cs
and
cs
pusha
ret
dec
into
mov
shl
mov
dec
es
dec
into
fs
xor
cs
nop
data16
sub
cmp
fidivr
push
inc
test
or
cmp
rcl
aad
pop
into
cmp
cs
std
movs
pop
sahf
aad
pop
into
cmp
les
fs
mov
inc
js
jmp
mov
adc
into
cmp
pop
int
shr
mov
(bad)
mov
mov
cmps
ret
into
push
inc
jmp
fistp
ror
aad
pop
into
cmp
ror
cmp
dec
into
mov
stc
and
sbb
dec
fldenv
movs
cmp
fsubr
rol
dec
mov
mov
ins
cmp
ret
or
rol
and
dec
into
mov
rol
sbb
dec
mov
(bad)
mov
into
cmp
shl
sbb
mov
mov
pinsrw
add
add
inc
cli
push
(bad)
(bad)
mov
rcr
mov
sti
push
sti
and
cs
and
cmp
bound
sbb
inc
cld
mov
aaa
and
add
ror
pop
sub
pop
fdiv
sahf
cmp
xor
cs
inc
mov
in
inc
mov
dec
ror
mov
shl
inc
jmp
mov
dec
fisttp
xor
pop
int
shr
mov
mov
jmp
ret
cmps
lods
jo
into
push
sbb
int
shr
mov
aad
pop
into
cmp
ror
cmp
cs
mov
stc
and
sbb
je
dec
into
mov
xlat
and
sbb
jnp
mov
mov
jmp
ret
es
push
mov
mov
pop
int
shr
mov
aad
pop
into
cmp
fimul
mov
shl
jae
xchg
dec
cmps
lods
jo
into
push
pop
nop
mov
shl
inc
xor
retf
dec
ja
ror
into
mov
cmps
mov
or
push
inc
jmp
push
jg
and
dec
ret
mov
popa
push
mov
lds
aas
mov
mov
push
sbb
icebp
sar
je
gs
dec
cmps
lods
jo
into
push
pop
nop
mov
shl
inc
xor
xor
pop
jge
jmp
dec
ja
ror
into
mov
cmps
lahf
or
into
push
inc
jmp
push
jg
and
mov
ret
mov
outs
movs
xor
pop
jge
jmp
dec
ja
ror
into
je
push
adc
ror
aad
into
push
shl
into
cmp
dec
or
aad
inc
into
cmp
shl
into
push
rcr
es
fimul
cli
xchg
lock
ror
js
sbb
cmps
xor
and
xor
push
xor
push
je
cmp
pop
cmp
jae
ds
push
cmp
into
cmp
imul
cs
mov
mov
pop
cmp
xchg
dec
into
cli
xchg
lock
ror
js
sbb
cmps
xor
and
xor
push
xor
push
je
cmp
pop
cmp
jae
ds
push
cmp
into
cmp
imul
cs
mov
mov
daa
sar
inc
sar
dec
cmp
pop
int
shr
mov
mov
pop
mov
xor
cs
in
(bad)
cmp
aam
mov
rol
mov
mov
and
aad
inc
into
cmp
shl
into
cmp
fimul
mov
cwde
dec
(bad)
add
or
into
push
shl
inc
js
(bad)
mov
pop
nop
out
pop
mov
js
dec
into
cmp
ror
cmp
cmp
sar
jl
jl
and
push
shl
into
push
shl
into
push
shl
into
cmp
or
into
push
xor
es
dec
into
sahf
rcl
(bad)
cmp
shl
into
push
shl
movs
cmp
cs
or
cmp
ret
cmp
ror
mov
jg
mov
cmps
inc
or
into
ins
cmp
cmp
cmp
xor
mov
movs
cmp
mov
xchg
cmp
xor
push
in
ret
into
cmp
or
or
ret
inc
mov
and
cmps
inc
or
into
push
cmp
into
cmp
cs
stc
leave
inc
push
dec
(bad)
retf
jmp
gs
cmp
xchg
dec
iret
cmp
jns
xor
lds
aas
mov
ins
mov
movs
mov
push
shl
sahf
aad
inc
into
cmp
cs
push
shl
into
push
into
cmp
cmp
rcr
es
fisttp
push
shl
cmp
dec
movs
cmp
jge
mov
fisttp
(bad)
leave
lds
xor
dec
dec
(bad)
in
je
cmp
cmp
sar
and
mov
lods
sahf
aad
inc
into
cmp
mov
xchg
hlt
adc
push
jmp
push
cdq
or
pushf
pop
push
(bad)
dec
inc
js
retf
ss
ror
xor
int3
xor
iret
cmp
ror
sub
dec
into
xor
int3
cmp
ror
es
pop
iret
cmp
(bad)
add
dec
into
cmp
ror
mov
in
and
ror
mov
mov
mov
push
gs
aad
lods
xor
pop
int
shr
inc
(bad)
inc
cli
mov
mov
shr
xor
repnz
xor
push
mov
mov
mov
dec
in
mov
ins
cs
shr
es
dec
into
xor
inc
dec
mov
push
xor
sbb
or
mov
push
dec
mov
mov
push
push
nop
xor
cs
cmp
push
shr
in
sbb
mov
shr
in
or
mov
xor
arpl
sub
xor
cmp
push
rol
dec
fldcw
xor
push
xchg
xor
sbb
xor
push
shr
sahf
push
shl
into
ret
outs
jl
mov
dec
retf
into
cmp
xchg
dec
into
xor
leave
cmp
xchg
dec
ins
push
gs
mov
ror
jmp
gs
cmp
xchg
dec
into
dec
(bad)
sbb
ret
xor
mov
xor
cmp
gs
aad
scas
xor
mov
inc
(bad)
inc
cli
jo
push
jl
jno
xor
ror
cmp
shl
outs
cmp
xchg
inc
mov
aad
inc
into
cmp
sar
xor
ror
in
into
cmp
push
mov
ret
cmp
dec
into
push
aam
ins
jg
cmp
push
aam
outs
jg
cmp
push
aam
push
jl
cmp
push
aam
push
jl
cmp
push
aam
ins
jg
cmp
push
aam
outs
jg
cmp
push
aam
ins
jg
cmp
push
aam
push
jl
cmp
push
aam
push
jl
inc
dec
out
dec
into
push
shl
ret
ret
dec
lds
mov
push
aam
outs
jg
cmp
push
aam
ins
jg
cmp
push
aam
push
jl
cmp
fidivr
imul
shl
ret
lock
ror
ficomp
push
shr
inc
cli
push
in
adc
cs
mov
cs
inc
mov
and
xor
push
(bad)
dec
daa
arpl
dec
into
mov
popa
ss
and
cmp
shl
sti
aad
or
aad
inc
into
cmp
cs
dec
icebp
and
push
shl
popf
in
dec
movs
cmp
shl
into
aad
inc
into
cmp
rol
ss
ror
push
dec
xor
ror
mov
sti
push
mov
dec
add
inc
dec
cmps
ror
push
cs
into
cmp
cs
ret
outs
jg
mov
inc
mov
mov
ret
xor
je
cmp
aam
rcl
and
mov
and
stc
fnsave
ret
mov
cmp
shl
into
aad
inc
into
cmp
xchg
dec
es
fisttp
aam
dec
into
cmp
sar
xor
ror
push
dec
xor
sbb
and
xor
and
inc
mov
and
xor
shl
sti
and
aad
inc
into
cmp
cs
dec
icebp
and
push
shl
shl
dec
movs
cmp
shl
into
aad
inc
into
cmp
rol
inc
cmp
mov
mov
in
dec
into
dec
sub
ss
mov
or
push
shl
xor
int
mov
shl
or
shl
into
ret
inc
mov
cs
inc
aad
test
and
jmp
(bad)
cmp
inc
or
aad
inc
into
cmp
ror
dec
cmp
pop
int
ret
repnz
clc
mov
cli
pop
int
ret
sahf
mov
mov
cmps
adc
or
mov
mov
es
dec
into
mov
ror
mov
dec
xor
sbb
or
mov
ror
jae
cs
cmp
mov
or
push
shl
xor
push
jmp
(bad)
cmp
ror
rcr
and
cmp
cs
mov
mov
cmps
adc
or
mov
mov
es
dec
into
mov
ror
mov
dec
xor
sbb
or
xlat
(bad)
cmp
ror
jae
cs
cmp
mov
or
push
shl
xor
std
xlat
(bad)
cmp
shl
inc
(bad)
inc
cli
pop
int
ret
sahf
mov
mov
cmps
lahf
push
or
mov
mov
es
fisttp
mov
ror
mov
dec
xor
sbb
or
xlat
(bad)
cmp
ror
jae
cs
cmp
mov
or
push
shl
xor
stc
xlat
(bad)
cmp
shl
inc
mov
mov
ret
xor
je
cmp
sar
push
shl
into
push
std
lahf
mov
(bad)
ret
push
jl
mov
daa
cmp
dec
into
sti
push
mov
ret
and
ret
xor
cs
or
scas
push
cmps
adc
or
push
shl
xor
stc
xlat
(bad)
cmp
shl
dec
mov
rol
dec
ret
xor
sar
ja
sub
mov
lds
cs
ins
pop
int
shr
sahf
push
cld
nop
mov
cs
aad
inc
into
cmp
cs
into
cmp
cs
ret
push
jl
mov
dec
adc
xor
sar
into
push
rcr
nop
(bad)
dec
into
ret
push
jl
mov
daa
jno
dec
into
sti
push
mov
ret
and
ret
das
mov
mov
dec
iret
ret
repnz
scas
push
cmps
rol
or
push
shl
xor
icebp
xlat
(bad)
cmp
shl
dec
mov
rol
inc
cmp
mov
mov
in
dec
into
dec
sub
test
mov
ret
mov
lds
inc
mov
add
xor
gs
jg
lds
sub
xor
inc
(bad)
cmp
imul
sub
ret
dec
aad
mov
mov
and
push
shl
retf
and
push
ror
jge
or
shl
inc
mov
mov
dec
xor
cmp
retf
cmp
gs
cmp
loope
mov
push
je
cmp
mov
mov
ret
cmps
or
fs
adc
ror
cmp
cs
push
shl
fst
mov
ret
retf
cmp
sub
xor
in
dec
into
dec
sub
into
mov
mov
sahf
mov
mov
xor
cmp
retf
cmp
push
mov
movs
aas
mov
mov
leave
das
mov
aad
dec
into
cmp
cs
sub
dec
into
ret
outs
jl
mov
movs
cmp
mov
dec
into
cmp
xchg
dec
es
dec
into
mov
mov
ss
dec
fldcw
xor
ror
shl
into
push
shl
xor
gs
into
cmp
xchg
dec
dec
cmc
or
ror
les
movs
cmp
cs
outs
mov
mov
leave
das
mov
aad
dec
into
cmp
and
iret
push
cmp
std
cmp
cs
in
dec
into
ret
xor
mov
or
mov
dec
into
cmp
pop
(bad)
movs
cmp
or
push
test
mov
shl
iret
cmp
pop
mov
mov
cs
mov
aam
into
test
into
cmp
xor
and
ret
xor
mov
xor
rcl
nop
data16
sub
xchg
mov
xchg
mov
ss
ror
xchg
inc
repz
push
cdq
into
cmp
fadd
cli
ror
push
in
outs
jg
cmp
push
jl
mov
inc
lds
scas
inc
js
ror
in
push
jl
cmp
outs
jg
mov
cmc
or
mov
std
xlat
(bad)
cmp
shl
adc
into
dec
fidiv
into
aad
dec
into
cmp
pop
or
sti
and
dec
fidiv
into
aad
dec
into
cmp
nop
dec
mov
mov
aad
into
push
in
push
jl
cmp
jp
ror
ss
mov
aad
into
push
in
push
jl
cmp
jp
ror
sub
jge
pushf
xchg
dec
es
(bad)
fadd
ss
mov
pop
(bad)
jmp
jmp
cmp
out
test
dec
cmc
or
mov
in
xlat
(bad)
cmp
nop
dec
mov
mov
sbb
into
cmp
xchg
dec
mov
lods
xchg
dec
cmc
or
xlat
(bad)
cmp
test
jge
mov
pop
push
loop
xchg
dec
cmc
or
mov
int
(bad)
cmp
cs
xor
push
popf
aad
dec
into
cmp
xlat
push
into
cmp
adc
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
inc
cli
push
ja
dec
repnz
mov
or
cmp
xchg
mov
std
movs
popa
inc
cli
xchg
mov
out
dec
sub
leave
xor
cmp
mov
cmp
xor
(bad)
std
movs
dec
dec
(bad)
cmp
cmp
xchg
into
ins
cmp
ret
pop
dec
dec
into
adc
pop
into
cmp
rcr
cmp
push
dec
jmp
sbb
xor
cs
mov
or
xchg
pop
or
xor
aad
push
push
lahf
inc
jns
dec
or
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
cmp
xchg
dec
pop
lods
ror
.byte
