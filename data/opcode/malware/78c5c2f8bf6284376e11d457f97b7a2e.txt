or
cmp
jl
jg
cmp
dec
pop
cmp
push
shl
or
icebp
outs
pop
cs
push
repnz
sub
cmp
cmp
or
xor
xchg
cmp
repz
push
dec
push
hlt
push
dec
xchg
mov
pop
cmp
mov
xchg
add
jecxz
cmp
jns
stc
add
ins
iretw
sub
fcomp
gs
fs
jge
xchg
in
dec
cmp
push
lock
test
jmp
das
gs
dec
jno
mov
cmp
mov
jmp
jb
or
cmp
or
mov
sub
pushf
leave
jo
cmp
dec
add
dec
xor
mov
xor
pop
dec
imul
sub
or
xor
xchg
mov
fiadd
lea
mov
lea
fs
shl
or
mov
cmp
dec
jns
cwde
add
cmp
jo
push
es
ret
ss
push
repnz
xor
dec
mov
pop
repz
mov
sbb
popa
aad
xchg
ret
cmp
xor
xor
sub
cmp
adc
std
out
addr16
imul
xrelease
cli
or
jg
jb
cmp
pop
cmp
or
push
or
aaa
sub
or
xor
xchg
pop
inc
or
mov
add
repnz
or
xor
pop
int
sbb
jo
in
dec
cmp
repz
and
jo
xor
or
xor
daa
imul
jns
cmp
ficomp
jb
fst
cmp
push
jns
mov
adc
push
adc
jo
fs
jge
sub
sub
cmp
pop
das
gs
xchg
(bad)
in
pop
push
mov
aad
push
mov
data16
adc
sub
jo
fs
cmp
ja
or
int
and
jo
repz
push
lea
int
sub
jo
test
dec
jns
dec
jp
xor
test
ins
in
dec
cmp
scas
jns
cmp
test
aad
rdmsr
cmp
mov
popa
dec
test
ret
xchg
cmp
data16
cmp
sub
jb
in
dec
cmp
xor
cmp
loopne
int3
ret
mov
repz
or
xchg
pop
push
or
mov
mov
jno
cmp
hlt
mov
mov
xchg
fisttp
jns
rcl
inc
xor
or
add
data16
lods
scas
cmp
mov
dec
retf
xchg
sub
cmp
xrelease
cmp
dec
xchg
cs
push
jns
retf
mov
mov
inc
xchg
mov
dec
repnz
sti
(bad)
pop
lock
ins
pop
das
gs
cmp
or
mov
js
sub
fs
xor
or
xor
adc
ret
int
add
pop
mov
sbb
cmp
js
add
out
int
adc
inc
sub
or
push
or
inc
sub
retf
add
cmp
lock
stos
inc
or
cmp
js
add
out
mov
hlt
js
cmp
cmp
dec
bnd
daa
sti
(bad)
pop
lock
mov
mov
adc
or
(bad)
cmp
mov
hlt
ja
pop
adc
cmp
repz
ret
fisubr
jns
mov
jo
dec
or
(bad)
cmp
es
pop
cmp
jns
fidivr
jns
mov
xchg
in
dec
cmp
or
(bad)
add
jge
jo
(bad)
mov
bound
icebp
push
sbb
fs
or
cli
dec
add
js
lock
lock
dec
jns
pop
clc
jns
pop
lock
push
cmp
lock
lock
dec
jns
ret
mov
mov
jno
or
cmp
in
jns
jno
std
cli
cli
ret
push
cmp
or
add
or
ret
mov
leave
jns
mov
test
retf
mov
int3
(bad)
mov
jge
inc
xor
jle
int
lock
test
mov
or
cmp
xor
ror
or
ins
arpl
icebp
push
or
xor
aaa
or
gs
jne
pusha
sbb
mov
repz
or
test
ret
repz
lock
shl
int
or
ja
test
mov
or
mov
xor
inc
lock
lock
repnz
cwde
jl
cmp
rol
int
repz
repz
mov
(bad)
int
repz
mov
mov
ret
repz
repz
mov
push
ret
jl
cmp
mov
ret
ins
lds
fisubr
pop
das
gs
jne
js
fmul
inc
add
loop
or
lds
lock
test
or
xchg
adc
cmp
xor
fbstp
sub
out
enter
sub
test
or
in
inc
(bad)
ja
retf
cmp
dec
lea
leave
test
mov
test
push
mov
push
pop
das
gs
jne
js
dec
sbb
inc
bnd
test
into
or
xchg
adc
ret
push
xor
fbstp
sub
out
enter
sub
test
or
in
inc
fcmovb
jmp
or
lds
lock
test
ret
xchg
bnd
retf
cmp
iret
sub
fcomp
fs
or
mov
ins
cmc
js
std
or
rol
into
ret
xchg
lock
ja
add
ss
xchg
xor
or
fnstenv
dec
inc
in
inc
in
clc
pop
rcr
xor
push
mov
push
pop
das
gs
jno
jmp
hlt
dec
retf
xchg
dec
mov
jne
arpl
cmp
imul
iret
ret
ja
xchg
jle
adc
jns
aad
test
ret
outs
ror
aad
test
ret
push
(bad)
add
lock
test
icebp
push
pop
das
gs
jne
mov
sub
xor
lock
ret
ficom
js
xor
adc
and
popa
imul
cmp
adc
aad
or
cmp
or
aad
dec
cmp
arpl
icebp
push
pop
cs
or
and
cmp
dec
jns
dec
pop
fsubr
mov
xchg
xchg
ss
mov
mov
xchg
adc
popa
xor
test
mov
xchg
jmp
or
ins
arpl
icebp
push
adc
fs
or
or
sbb
sbb
sbb
push
cmp
xor
scas
or
cmp
fs
dec
or
mov
lds
mov
ja
add
adc
cmp
mov
imul
xor
jbe
std
test
xor
or
mov
cli
repnz
fmul
mov
sub
or
xor
jns
or
jo
xor
jo
dec
or
jge
jbe
lds
xchg
aaa
ret
imul
ins
lds
push
cmp
jl
xor
mov
aam
jmp
cmp
ret
xor
cli
pop
inc
mov
add
xor
std
cli
cmp
jns
js
fimul
dec
jns
dec
scas
sahf
dec
jns
dec
adc
scas
sahf
dec
jns
mov
xchg
xchg
mov
sbb
adc
ret
mov
ret
inc
xor
out
cmp
call
rol
xacquire
daa
or
(bad)
mov
xor
nop
fidiv
or
outs
cmp
jns
into
stc
jno
cmp
or
mov
js
bnd
pop
repnz
pop
gs
leave
or
mov
or
test
xor
cli
push
lds
cmovno
jns
dec
and
jmp
xchg
mov
xchg
inc
mov
lea
cmp
jo
jp
mov
jo
jo
or
dec
mov
mov
cmp
xor
xchg
iret
dec
or
imul
cmc
js
jnp
mov
cmp
js
sub
sub
or
xor
test
push
ss
inc
int
sub
ja
test
jmp
add
cmp
scas
cmp
push
int3
cwde
jo
xchg
ins
xchg
sub
jns
cmp
add
mov
mov
ret
scas
sahf
dec
jns
mov
xchg
mov
test
std
jns
cmc
cmp
jo
xrelease
cmp
mov
or
cmp
scas
cmp
cmp
scas
cmp
ins
xchg
imul
lds
cmp
sahf
dec
jns
test
cmp
fadd
ins
arpl
icebp
push
sbb
fs
mov
xor
jo
xor
lock
push
ror
xor
add
mov
out
ins
cmc
js
js
cmp
hlt
mov
mov
cmp
mov
xchg
mov
jp
add
or
ss
dec
jno
jns
js
push
pushf
(bad)
in
inc
cmp
test
retf
mov
xor
repz
dec
or
push
ror
ror
cmp
or
jns
hlt
js
mov
cli
push
ror
mov
mov
mov
cmp
into
jns
fldcw
xchg
mov
dec
push
add
jge
or
lock
lds
bnd
mov
cmp
xrelease
inc
lock
xor
or
push
cmp
jb
in
pop
cmp
retf
jmp
cmp
or
ss
or
xor
jns
jge
jns
jl
xchg
adc
jns
js
adc
push
or
xor
dec
pop
cmp
test
mov
or
mov
(bad)
ins
pop
xchg
repz
aad
push
xor
clc
sub
fs
jg
xchg
in
pop
cmp
jmp
ja
xchg
mov
xchg
in
pop
cmp
lds
call
jns
outs
pop
mov
addr16
cmp
mov
mov
xor
xacquire
push
call
sbb
or
mov
repz
mov
mov
fimul
xchg
fs
jno
cmp
test
inc
cmp
or
mov
ret
xor
test
int3
ret
test
xchg
out
int
(bad)
mov
xchg
jg
jns
div
shl
lock
mov
cdq
int
repz
ins
xchg
push
lock
add
mov
sahf
ret
mov
ret
bound
cwde
jo
xchg
rol
xacquire
xor
add
xor
int3
jbe
or
xor
hlt
mov
repz
ins
lods
in
jg
sub
mov
test
std
add
xor
lods
cmp
ret
int
repz
retf
(bad)
xrelease
jp
(bad)
retf
xchg
ret
xchg
jg
lock
(bad)
int
repz
ins
xchg
push
lock
add
jle
cmp
repz
cmp
or
mov
icebp
xchg
ret
mov
or
push
or
jns
mov
pop
xchg
xchg
retf
xrelease
pop
test
xchg
ret
mov
mov
cmp
repz
add
xchg
cmp
or
cmp
ret
repz
mov
ins
lods
cmp
aad
push
xor
mov
xchg
cmp
sub
cwde
movs
xchg
ret
sqrtps
cld
icebp
cmp
jns
(bad)
fcomp
data16
call
pop
fnstenv
in
(bad)
div
xor
adc
fisttp
mov
ret
aas
retf
xrelease
ret
inc
aaa
retf
cld
call
jns
cmp
mov
bound
stc
xchg
mov
repz
dec
sub
xor
cdq
jo
add
gs
mov
ret
ds
xchg
cmp
movs
xchg
ret
xor
in
cmp
push
pop
fnstenv
in
mov
xor
adc
fisttp
mov
ret
mov
stc
add
or
inc
aaa
retf
cld
call
jns
cmp
fcmovbe
jg
adc
dec
jns
pop
stc
xchg
mov
repz
dec
sub
xor
cdq
jo
add
gs
mov
ret
ds
xchg
cmp
movs
xchg
ret
xor
test
xchg
ret
mov
test
pop
fnstenv
in
mov
xor
cmp
mov
int
repz
cmp
(bad)
cdq
jo
sub
leave
xrelease
ret
inc
aaa
retf
cld
call
jns
cmp
add
jg
adc
dec
jns
icebp
clc
xchg
mov
repz
dec
dec
adc
push
mov
jo
add
gs
(bad)
int
(bad)
mov
xor
fs
jg
hlt
pop
repz
push
jmp
ret
div
xor
cmp
mov
int
repz
cmp
pop
jns
mov
repz
sub
jl
mov
xor
repz
xchg
test
cmp
cmp
dec
jns
pop
mov
dec
jmp
xchg
cmp
or
sar
xor
repz
ret
or
pop
and
repnz
hlt
mov
repz
ins
xchg
jmp
xchg
test
mov
js
mov
cli
dec
ror
clc
or
mov
repz
into
cmps
xor
cmp
xacquire
mov
repz
mov
jns
cmp
or
push
cli
mov
int
rep
xor
mov
int
repz
cmp
repz
ins
cmp
bound
repz
mov
mov
mov
std
int
repz
mov
lods
int
repz
in
cmp
mov
jmp
mov
cmp
dec
test
std
add
or
or
mov
ret
mov
repz
ins
xchg
stos
fdivr
cmp
aam
jmp
jbe
cmp
mov
mov
ret
or
pop
inc
mov
xor
clc
rcl
jns
(bad)
and
mov
repz
ins
xchg
out
ret
bound
test
test
xor
movs
xchg
ret
mov
lock
mov
cmp
bound
repz
mov
test
dec
cld
push
ds
mov
jge
xor
xacquire
ret
int
repz
dec
jns
mov
pop
xchg
add
jns
stc
add
xchg
shl
xchg
cmp
or
xor
out
xor
or
int
loopne
int3
ret
iret
ret
bound
cdq
jo
cmp
(bad)
aad
adc
es
push
jmp
xchg
ret
mov
ret
mov
mov
pop
hlt
xchg
loopne
mov
cmp
mov
cli
fisubr
or
xor
test
xchg
push
inc
int
and
ja
add
jnp
cmp
xacquire
mov
or
mov
repz
ins
fs
sar
repnz
repz
ins
xchg
sub
jns
cmp
add
jnp
cmp
or
mov
ret
mov
repz
ins
xchg
push
lock
add
js
cmp
xacquire
aam
js
cmp
data16
test
push
cli
mov
int
repz
mov
ror
ret
repz
repz
mov
stc
int
repz
ret
and
jns
cwde
or
mov
sbb
aad
or
cmp
test
int3
ret
or
js
rol
jns
fiadd
xchg
cmp
or
mov
mov
mov
repz
ins
fs
jg
repnz
repz
ins
xchg
sub
jns
cmp
add
js
cmp
xacquire
xor
hlt
mov
repz
ins
data16
mov
xchg
ret
mov
xacquire
xor
gs
aam
jmp
jbe
out
jns
pop
pop
push
ret
cmp
mov
push
repz
cmp
or
mov
ret
xchg
xchg
aad
mov
ret
cmp
xchg
ret
xchg
aaa
or
mov
push
xchg
ret
mov
or
xor
mov
xor
mov
hlt
mov
repz
ins
fs
jg
hlt
mov
repz
ins
in
pop
cmp
xor
mov
repz
les
xchg
cmp
icebp
xchg
ret
mov
repz
mov
jl
ret
(bad)
aad
adc
cmp
or
mov
repz
ins
fs
jg
hlt
mov
repz
ins
in
pop
cmp
lea
mov
mov
xor
repz
mov
mov
mov
and
ret
repz
ret
int
repz
repz
add
ror
ret
repz
xor
xchg
mov
(bad)
ret
repz
mov
in
ret
repz
ret
int
repz
repz
add
xchg
int
repz
shl
xchg
mov
repz
cmp
cld
iret
ret
xor
sti
call
test
int3
ret
add
pop
jno
sbb
int3
ret
ds
test
mov
mov
repz
xor
xchg
cmp
fs
xacquire
cmp
fs
xacquire
cmp
fs
test
int3
ret
add
pop
jno
sbb
xchg
bound
sti
(bad)
pop
lock
push
repz
cmps
sbb
xor
jns
cmp
sub
cmp
pop
das
gs
xchg
cmc
js
inc
add
fldenv
cmp
cmp
dec
popf
cli
sbb
pop
gs
jns
aad
adc
cmp
jle
int
pop
dec
jns
dec
rcl
int
repz
adc
or
xor
imul
dec
loope
xchg
ret
test
(bad)
mov
xchg
ret
imul
call
addr16
sub
pop
pop
adc
add
mov
adc
cmp
sub
xor
adc
aad
sbb
cmp
jmp
xor
test
mov
jno
inc
xor
push
mov
js
mov
xchg
dec
mov
cli
pop
cmp
xor
test
jae
or
pop
add
(bad)
pop
cmp
or
xor
xchg
cmp
cmp
xor
cmp
cmp
cmp
jb
xor
or
mov
ret
mov
xor
jae
dec
nop
push
aas
or
int
js
jo
cmp
jbe
std
inc
cli
sar
dec
lock
or
jns
add
jns
mov
or
les
jbe
adc
jns
retf
or
stos
jl
js
xor
js
add
or
xor
lea
cmp
xchg
cmp
aam
js
cmp
dec
jns
cmp
jae
sbb
xor
ds
mov
repz
cmp
dec
jns
popf
dec
loopne
cmp
or
add
repz
cmp
jae
or
xor
or
mov
dec
imul
mov
add
sub
or
aam
jnp
cmp
or
mov
adc
jae
add
jb
dec
jns
jge
cmp
aam
xchg
ret
sub
or
aam
jnp
cmp
test
jae
or
cmp
aas
or
xor
mov
jl
mov
or
aam
jnp
cmp
or
mov
adc
jae
push
mov
xor
or
xor
xchg
inc
mov
int
xor
jae
test
mov
adc
jae
dec
nop
ss
jns
rcl
inc
lods
jl
shr
jns
fild
stc
aas
and
in
xor
dec
jns
std
push
js
add
ret
cmp
or
aaa
xor
mov
xor
or
aaa
add
mov
jl
mov
mov
xor
jae
push
nop
scas
cmp
and
jl
mov
xchg
cmp
or
popa
lods
jl
pop
mov
inc
ja
cmp
or
bound
or
xchg
jg
jo
inc
pop
cli
retf
jle
sbb
inc
mov
or
dec
jl
mov
cmp
sub
repnz
mov
adc
jae
dec
xchg
add
jg
xchg
sbb
cmp
dec
jns
pop
repz
mov
cmp
je
mov
add
aam
js
cmp
or
int
js
jo
cli
jl
mov
mov
cli
jl
jns
dec
lods
cmp
mov
push
ret
jbe
cmp
cmp
or
ja
add
aaa
dec
lods
cmp
mov
div
js
inc
repnz
test
cmp
jns
int
add
jb
lea
cmp
mov
pop
fdiv
dec
jns
cmp
jb
pop
dec
jns
dec
sbb
dec
(bad)
or
pusha
mov
inc
cli
aaa
xor
out
mov
idiv
sbb
mov
cld
js
mov
lock
jl
jns
fst
jl
mov
or
ja
mov
cmp
mov
idiv
cmp
jns
mov
push
ret
cli
pop
xor
mov
xor
sub
jae
repz
lods
dec
jns
xor
or
jge
or
mov
or
pop
xor
mov
xor
sub
lods
dec
jns
add
or
jge
or
ret
xchg
lock
adc
fidiv
lods
dec
jns
std
dec
daa
imul
pop
sub
ss
ret
(bad)
jns
jns
fild
xchg
dec
mov
ret
jo
in
ins
cmp
pop
ret
jo
pop
xchg
mov
or
xchg
popa
lods
cmp
push
and
jo
pop
xchg
inc
bound
xchg
sub
dec
jb
cmp
hlt
lock
push
xor
jo
pop
xchg
bound
jns
leave
xchg
cmp
push
inc
ret
jo
pop
xchg
ja
or
xchg
or
push
ret
jo
pop
xchg
pop
bound
xchg
lods
cmp
bound
icebp
push
jl
fs
mov
jmp
or
mov
dec
jns
js
sub
sub
jo
retf
cmp
and
aam
jmp
hlt
ja
test
cli
dec
lea
or
mov
mov
cmp
(bad)
sbb
cmp
dec
jns
pop
fdivr
in
mov
out
retf
cmp
cmp
jns
cli
dec
movs
xor
sub
retf
ja
test
jo
test
ret
xchg
mov
xor
or
shl
cmp
cmp
jns
mov
jno
mov
cmp
cmp
cmp
ja
pop
xchg
leave
xchg
cmp
mov
dec
jmp
adc
mov
frstor
or
xor
adc
jns
fisub
dec
fldenv
jns
mov
cmp
fist
or
aaa
dec
mov
xchg
data16
cmp
repz
aad
sbb
cmp
or
shl
or
aad
and
cmp
dec
jns
js
sub
dec
mov
xchg
leave
xchg
cmp
mov
popf
fnstcw
lea
ins
arpl
icebp
push
sub
je
xchg
mov
popf
mov
fld
test
int
xor
mov
xor
mov
xchg
pop
cmp
pop
cmp
cmp
ins
cmp
push
or
ja
pop
adc
ret
int
cmp
jae
xchg
(bad)
or
pop
rcr
addr16
sub
or
sub
test
int
js
jo
repz
push
xrelease
sub
jmp
xor
lock
(bad)
lds
fidiv
pop
das
gs
jno
pusha
add
xor
jbe
cmp
inc
int
or
inc
or
iret
jbe
or
jns
adc
push
inc
int
or
inc
and
iret
jbe
cmove
cmp
add
jbe
or
or
cmp
cmp
dec
jp
mov
inc
mov
ret
test
jbe
cmp
sbb
sub
inc
lock
lock
sub
jns
cmp
push
jbe
sub
inc
lock
ja
enter
cmp
(bad)
jns
mov
xor
jns
cmp
dec
xchg
add
cmp
jo
pop
xchg
imul
cmp
out
sbb
es
lds
pop
sub
popa
push
jns
mov
xor
cmp
push
loop
dec
xor
mov
jp
cmp
cli
fidivr
xchg
mov
jl
cmp
add
ja
addr16
loopne
dec
jns
dec
add
ja
or
xchg
cmp
jo
mov
cmp
mov
cmp
or
mov
cli
fidivr
mov
cmp
mov
mov
cmp
retf
jge
mov
jg
push
js
jae
pop
lock
jl
add
pop
inc
sub
hlt
add
fdivr
(bad)
mov
xor
xor
pop
test
xor
lock
jnp
add
jnp
ins
test
push
cmp
or
mov
cli
fidivr
add
cmp
xchg
xor
in
xor
repz
or
push
loop
aam
fidivr
test
mov
imul
mov
cmp
add
xor
je
xor
mov
cli
fidivr
mov
cmp
dec
mov
xor
or
xor
or
xor
xchg
fwait
addr16
mov
or
mov
sbb
cmp
or
xor
xrelease
push
mov
push
add
fs
jl
mov
mov
or
xchg
xor
dec
add
jp
cmp
in
xor
dec
jne
aad
jns
add
pminsw
in
xor
or
test
mov
daa
sbb
xlat
lock
sub
mov
repz
mov
cmp
aad
jns
dec
sub
or
inc
sbb
out
mov
mov
jle
sub
xchg
lods
jge
jge
inc
ja
jle
fstp
xchg
mov
addr16
cmp
(bad)
js
adc
lock
loop
dec
lea
push
adc
jge
cli
leave
cmp
mov
repz
loop
idiv
cmp
cli
fidivr
test
sti
or
mov
xor
mov
mov
mov
repz
retf
addr16
cmp
cli
fidivr
test
sti
or
xor
mov
jnp
or
and
shl
mov
add
ins
lds
outs
sbb
(bad)
push
jns
outs
pop
cs
cmc
xchg
sti
mov
fiadd
or
xor
out
cmps
int
or
xchg
cmp
dec
jns
mov
repz
sub
iret
mov
jecxz
int
xor
dec
jns
dec
push
stc
(bad)
(bad)
xchg
cmp
mov
push
cmp
cmp
push
jbe
test
xchg
int
test
call
hlt
xor
fwait
fs
mov
ret
cmps
ins
xchg
cmp
xor
xchg
adc
ds
ret
pop
mov
xchg
jecxz
xchg
or
sub
gs
mov
ret
daa
sbb
mov
cmp
ret
repnz
xor
repz
mov
or
test
int
xor
dec
jns
xor
jbe
test
xchg
int
int
xor
dec
jns
test
cmps
int
repz
mov
mov
out
cmps
int
or
mov
or
or
test
jmp
int
cmp
xrelease
cld
out
outs
mov
jge
lock
jecxz
int
repz
adc
imul
gs
mov
cld
jmp
ret
mov
or
xor
xrelease
cld
mov
xrelease
push
and
cmp
dec
jns
cwde
loopne
int
or
mov
ret
xor
mov
xchg
aad
or
(bad)
mov
cmp
js
mov
mov
scas
mov
dec
dec
int
(bad)
mov
xor
pop
test
cmp
int
(bad)
int
add
jge
cmp
repz
cmp
or
cmp
rol
icebp
cmp
idiv
cmp
jns
fidiv
test
shl
xchg
cmp
and
cmp
jecxz
int
mov
dec
mov
mov
or
jns
jge
jns
xor
xchg
fisttp
repnz
jb
test
(bad)
shl
xchg
ret
cmps
leave
jecxz
int
out
jnp
in
nop
xor
in
jnp
jo
repnz
cmc
daa
aad
xchg
mov
(bad)
ffree
repz
repz
mov
into
cmp
stc
cmp
repz
(bad)
shl
xchg
ret
xor
js
jo
mov
shl
xrelease
dec
push
adc
jns
xchg
pop
jns
mov
fldlg2
ret
lock
or
mov
ret
dec
ds
lock
rol
in
ret
cmps
movs
rol
xor
test
cmps
jecxz
xchg
ret
cmps
jecxz
xchg
aas
test
mov
mov
xchg
out
xrelease
ret
mov
ret
xchg
rol
xor
xrelease
mov
jns
mov
ret
xchg
xrelease
mov
mov
shl
xrelease
dec
iret
adc
cmp
xchg
xchg
repz
xlat
add
mov
ret
outs
fs
cmp
xchg
(bad)
xchg
xchg
dec
mov
in
rcl
xchg
fisttp
repnz
push
sub
jb
add
cmps
into
jecxz
int
out
jnp
sub
pop
mov
leave
jecxz
int
or
xor
or
mov
ret
cmp
cmp
add
or
jns
mov
add
xor
in
xor
add
cmp
cmp
or
mov
jecxz
int
sbb
or
mov
repz
jbe
or
mov
rol
in
ret
mov
call
repnz
rol
mov
or
sbb
inc
xor
lock
jp
add
cld
cli
fidivr
mov
dec
push
lock
jl
add
out
int
js
jo
add
cmps
sahf
rol
mov
ret
mov
rol
xor
in
xor
cmp
cmp
cmp
fnstcw
xchg
(bad)
shl
xchg
lds
imul
repz
mov
repz
mov
mov
daa
cdq
(bad)
xchg
sti
or
add
js
cmp
mov
aas
or
xor
xor
cmp
mov
cmp
xor
xor
or
inc
ds
xchg
cli
xor
xchg
std
jae
mov
add
inc
and
iret
mov
jecxz
int
repz
out
loop
xchg
mov
cmps
int
in
retf
ret
div
mov
shl
xrelease
dec
dec
cli
xchg
leave
jecxz
int
xchg
(bad)
shl
xchg
fisttp
lock
in
repz
jp
rol
int
or
mov
(bad)
(bad)
(bad)
shl
xchg
cmp
inc
in
repz
mov
fist
lock
mov
repz
mov
adc
and
xor
xrelease
push
mov
push
xor
fs
and
cli
dec
or
push
hlt
imul
mov
dec
fiadd
jns
sub
jns
into
test
ja
test
mov
mov
pop
shl
stc
test
mov
mov
jo
mov
xor
jno
mov
cmp
or
xchg
mov
or
mov
imul
xchg
mov
js
mov
xor
sub
xchg
jns
sahf
inc
cmp
mov
bnd
inc
repnz
iret
cmp
or
xor
mov
ins
jmp
clc
ja
mov
xor
add
jno
xor
push
xor
jns
cmp
or
ja
or
lock
or
inc
xor
xor
or
(bad)
jno
int3
or
mov
or
mov
dec
cmp
jle
pop
repnz
or
xor
stc
ja
or
xor
cmp
dec
js
dec
or
ja
or
ja
or
jbe
imul
int
dec
test
(bad)
sbb
xor
mov
ins
jecxz
or
ja
or
test
mov
call
cmp
cmp
(bad)
jns
cmp
repz
mov
ins
arpl
icebp
push
pop
repnz
xor
inc
clc
fnstcw
jns
push
repz
cmp
or
xor
repz
les
inc
or
jns
hlt
jns
js
(bad)
or
mov
or
dec
jmp
mov
ss
pop
jns
imul
push
adc
(bad)
mov
ret
sbb
test
int
add
mov
in
xchg
ins
in
fs
in
xchg
ins
in
xor
test
add
push
daa
sti
(bad)
pop
lock
push
out
sub
jns
push
or
xor
jns
pop
cmp
or
outs
(bad)
pop
lock
mov
pop
(bad)
call
js
cmp
or
xor
adc
push
movups
cmp
add
das
outs
or
mov
dec
adc
or
mov
or
retf
lock
test
pop
cmp
or
mov
ins
cmp
stc
pop
jns
mov
test
cmp
add
xor
dec
(bad)
fnstcw
cmp
dec
clc
sub
dec
lock
(bad)
pop
jns
imul
bound
out
mov
cli
push
daa
imul
pop
sub
dec
sbb
es
lock
push
or
mov
or
pop
cmp
pop
cmp
int3
xchg
in
arpl
retf
xor
jns
add
out
pop
aas
data16
cmp
or
mov
mov
xor
dec
cmc
lock
push
or
rcr
dec
add
(bad)
pop
jns
push
or
ja
pop
adc
push
cld
cdq
jo
pop
xchg
mov
mov
aam
xor
or
mov
jns
bound
sti
(bad)
pop
lock
mov
mov
aas
cdq
sbb
adc
jns
fiadd
adc
push
mov
cmp
data16
cmp
jns
fcmovu
pop
jns
mov
lock
lock
test
ss
xchg
pop
push
push
adc
push
or
fcmovu
pop
jns
push
or
ja
pop
xchg
repz
imul
arpl
hlt
lock
imul
jge
or
bnd
daa
sti
(bad)
pop
lock
ins
pop
das
gs
jno
js
nop
push
mov
clc
pop
rol
mov
mov
inc
xor
dec
inc
dec
xor
popa
ret
pop
jl
cmp
aad
sub
cmp
dec
jns
push
aaa
cdq
jo
in
popa
cmp
cmp
iret
and
fisttp
fisubr
jns
mov
push
jne
aad
xchg
mov
cmp
xor
push
jno
dec
int
adc
fisttp
ficom
pop
jns
mov
lock
lock
hlt
iret
sub
fcomp
fs
and
mov
jne
js
stos
and
ror
xor
or
(bad)
outs
or
imul
and
mov
dec
sar
xchg
shr
jns
stc
add
or
jle
pop
sbb
cmp
aad
sub
cmp
test
into
bound
sti
(bad)
pop
lock
mov
pop
ret
aaa
dec
mov
(bad)
push
ja
or
jns
pop
in
mov
call
hlt
pop
cmps
mov
xor
fmul
retf
ja
test
inc
cmp
ja
adc
mov
jge
icebp
ja
out
mov
outs
jns
retf
ja
test
cmp
mov
loopne
dec
ret
ss
out
push
cmp
or
or
mov
jne
mov
js
xchg
adc
jbe
js
jbe
jns
mov
aad
add
aas
jns
mov
in
mov
bnd
inc
bnd
jmp
jmp
into
xor
push
push
loop
int3
adc
cmp
out
jbe
dec
js
mov
bnd
test
test
mov
mov
lods
xor
bnd
add
jb
xchg
xor
jbe
push
or
jne
mov
push
add
loop
dec
popf
mov
mov
js
mov
es
lds
mov
jge
jmp
xor
push
jmp
mov
lods
pushf
jmp
mov
lods
pushf
jmp
mov
lods
pushf
jmp
mov
lods
pushf
jmp
mov
jg
jmp
xor
dec
jmp
mov
lods
pushf
jmp
mov
lods
pushf
jmp
mov
lods
pushf
jmp
mov
sub
xchg
pop
pushf
jmp
fidivr
pushf
jmp
dec
add
adc
jb
pushf
repnz
inc
jge
lods
pushf
repnz
pop
jmp
icebp
cmp
mov
lods
pushf
jmp
mov
cmp
(bad)
jmp
mov
pop
in
and
repz
jge
std
mov
sub
cmp
sar
ds
dec
mov
mov
jge
jmp
mov
lods
pushf
jmp
mov
lods
pushf
jmp
xor
pushf
jmp
mov
lods
pushf
jmp
mov
lods
pushf
jmp
mov
lods
pushf
jmp
mov
sub
add
or
jmp
mov
jg
jmp
mov
lods
pushf
jmp
xor
pushf
jmp
mov
lods
pushf
jmp
mov
lods
pushf
jmp
mov
lods
pushf
jmp
mov
dec
add
or
jmp
mov
lods
pushf
jmp
iret
ret
addr16
cli
fisub
push
jno
js
pop
mov
shl
or
xchg
mov
js
mov
test
retf
push
ja
or
(bad)
or
xor
out
ret
mov
mov
or
sbb
pop
xor
repz
xor
or
test
lock
adc
loopne
les
loopne
les
shr
or
lds
lock
test
mov
addr16
dec
jle
push
inc
jnp
mov
xor
sbb
test
mov
pandn
jns
dec
sbb
jmp
jbe
jo
push
clc
mov
clc
ja
mov
jno
lods
or
xor
mov
iret
ja
pop
lock
jbe
push
in
jl
or
xor
dec
mov
aam
ret
add
cli
neg
(bad)
mov
add
or
push
ret
cmp
add
jbe
and
push
and
(bad)
pop
lock
mov
pop
ret
fbld
(bad)
mov
pop
jl
or
aas
cmp
int
fdivr
mov
sub
test
psubw
jle
std
in
xor
pop
xchg
in
retf
cli
div
add
sbb
or
cmp
fimul
repnz
ins
setne
ss
mov
repz
xchg
add
xor
enter
pop
xchg
repz
jns
xor
mov
or
js
sub
test
xor
mov
xor
mov
mov
mov
test
and
(bad)
les
(bad)
inc
lock
pushf
fadd
jo
test
(bad)
adc
int
or
(bad)
cmp
mov
lock
cmp
js
jge
jmp
or
ja
jle
ficom
jns
mov
movs
ficomp
jns
mov
movs
cmp
xor
jo
mov
test
fldenv
cmp
aad
xor
cmp
aaa
xor
cmp
mov
into
loopne
out
imul
or
jge
ror
or
fcmovu
inc
jns
mov
mov
xor
xchg
(bad)
(bad)
jns
int
cmp
mov
test
and
(bad)
les
(bad)
inc
clc
or
pushf
fadd
jo
test
(bad)
sbb
mov
cmp
cld
jge
jmp
or
ja
jle
mov
or
mov
jecxz
xchg
fnsave
test
ds
test
jo
add
addr16
fwait
mov
jg
repnz
loope
cmp
mov
inc
mov
sub
cmp
jns
mov
in
cmp
mov
jp
stc
mov
xor
aam
ret
div
data16
cmp
or
jb
jns
fidiv
dec
popf
mov
je
xor
in
int
in
das
int
call
jns
dec
call
jns
aad
xor
cmp
add
xor
or
(bad)
cmp
mov
es
lds
fisub
pop
cs
cmp
inc
test
lahf
mov
ret
mov
js
jo
cmps
jns
cmp
dec
jns
int
mov
cmp
outs
imul
idiv
les
push
clc
mov
and
mov
icebp
cmps
ret
int
dec
xchg
(bad)
and
cmp
out
inc
sbb
ins
test
xor
test
in
cmpps
int
dec
xchg
mov
xchg
xor
or
addr16
jns
(bad)
cli
mov
mov
repz
push
retf
ret
add
hlt
mov
repnz
ins
fs
(bad)
loop
jns
mov
pop
xchg
pop
jbe
jns
cmp
data16
cmp
dec
hlt
mov
icebp
xchg
ins
in
jne
or
mov
icebp
xchg
ret
mov
in
jns
or
xor
repz
adc
xor
les
repz
mov
xchg
or
cld
js
mov
xchg
aad
aas
xor
dec
jns
push
shl
int
xrelease
mov
xor
xrelease
shl
int
xrelease
or
xor
or
mov
or
(bad)
cld
fcmovb
xrelease
mov
pop
(bad)
sar
xor
cmps
jo
cmp
bound
jns
mov
or
pop
push
sar
xor
cmps
jo
fs
cmp
or
mov
pop
clc
les
jns
bound
sti
(bad)
pop
lock
mov
pop
repnz
sub
lock
lock
ret
xchg
lock
lock
test
mov
js
sub
fs
xor
or
xor
adc
ret
int
add
adc
mov
jge
inc
xor
hlt
xchg
pop
adc
push
or
inc
sub
and
xor
or
int
lock
iret
jne
jns
arpl
icebp
push
xchg
push
push
ins
lea
int
sbb
pop
cmp
xchg
repz
ret
int
add
pop
cmp
adc
outs
(bad)
pop
lock
ins
pop
(bad)
aad
aas
push
mov
js
lock
push
or
ss
ins
(bad)
jns
int
add
xor
push
mov
push
pop
(bad)
mov
xor
cli
cmp
ins
data16
cmp
xor
adc
push
or
inc
xor
or
aad
xor
cmp
cmp
or
ret
int
adc
xor
jns
int
lock
pop
jne
jns
std
js
int
lock
pcmpeqw
add
out
mov
cli
repz
aad
xor
cmp
lds
fisubr
sbb
ja
push
ja
mov
jns
sub
lds
jns
sti
or
lds
cmp
ins
fs
xor
or
xor
jns
int
add
(bad)
jp
jns
std
js
add
out
mov
push
or
xor
jns
int
lock
xlat
jp
jns
std
js
int
lock
repz
jns
std
out
int
lock
xchg
jns
mov
fnstenv
mov
and
mov
mov
(bad)
pop
lock
ins
pop
das
sub
je
or
mov
lock
jo
or
adc
or
xchg
jnp
jns
js
lock
lock
pushf
lock
jo
xor
dec
bnd
cmp
fs
xor
adc
push
ins
cmps
jo
in
je
or
into
call
sbb
inc
cmp
dec
into
call
dec
jns
mov
test
cmp
jns
arpl
mov
and
bnd
or
daa
pop
sar
xor
pushf
arpl
cs
xor
cmp
popa
dec
icebp
pop
mov
test
push
cmp
push
add
or
mov
push
jmp
xchg
in
jne
or
div
test
and
or
mov
cli
repnz
out
mov
lock
and
add
jns
clc
add
inc
or
jns
mov
cmp
or
mov
imul
ror
jb
cmp
ret
sub
cdq
dec
jns
mov
clc
ja
mov
xor
test
inc
sub
or
ja
test
into
mov
js
(bad)
push
dec
repnz
sti
(bad)
pop
lock
mov
pop
repnz
xor
sub
xor
jns
push
push
or
popa
aad
cmp
retf
test
mov
dec
xchg
mov
or
mov
(bad)
sbb
cmp
cli
ret
mov
ss
(bad)
or
push
jns
inc
fmul
jns
pop
retf
cmp
cmp
mov
inc
or
jns
retf
in
retf
mov
shr
or
mov
mov
fdivr
test
mov
cli
cmc
pop
pop
repnz
leave
pop
adc
dec
jns
aad
aas
xor
repz
xor
add
push
and
(bad)
pop
lock
test
cmp
or
fs
xor
aam
(bad)
fadd
ret
xor
repz
mov
pop
xchg
in
ret
cli
div
or
mov
fist
mov
int
repz
xor
fwait
jg
jns
std
in
cmp
in
jno
or
mov
repz
test
fmul
ret
mov
ret
jmp
xchg
ret
cmps
jmp
mov
xor
or
gs
dec
xchg
addr16
jns
mov
lea
int
add
ss
jns
test
xor
bnd
test
loop
icebp
xchg
jge
inc
xor
data16
test
xchg
ret
pusha
aad
mov
ret
cmp
cmps
jo
repz
aad
cmp
cmp
inc
cmps
jo
repz
into
ret
fisub
jns
mov
dec
jns
test
jns
cmp
idiv
fs
jg
xchg
aad
cmp
cmp
cld
dec
ret
xchg
aas
js
jns
aaa
or
xor
add
aad
cmp
xor
pop
repnz
repz
push
inc
in
jg
cs
dec
jns
mov
dec
jns
test
jns
cmp
idiv
fs
jg
xchg
aad
cmp
cmp
cmps
jo
repz
into
ret
fcmovu
dec
jns
mov
dec
jns
test
jns
cmp
idiv
fs
jg
xchg
aad
cmp
cmp
ja
xor
or
(bad)
xor
das
xchg
pop
jns
jns
pop
or
xor
test
ret
repz
add
cmp
push
pop
jbe
or
imul
push
cmps
jo
xchg
into
ret
bound
cmps
jo
pop
xchg
jnp
or
mov
sbb
fdivr
push
jns
aad
cmp
xor
pop
ret
jns
mov
xchg
ret
jbe
or
div
or
xchg
repz
aad
cmp
cmp
out
xor
or
(bad)
xor
pop
adc
fisttp
int
lock
ret
jbe
or
div
or
xchg
repz
aad
cmp
cmp
mov
jae
cmp
pop
xchg
jle
jns
pop
or
xor
test
ret
repz
add
cmp
push
out
cmp
mov
pop
cmp
mov
hlt
aad
cmp
cmp
or
vdivps
iret
jecxz
jns
adc
iret
ret
pop
jle
jns
mov
pop
xchg
xchg
into
ret
bound
cmps
jo
pop
xchg
arpl
jns
stc
sub
add
jns
aaa
or
xor
add
aad
cmp
cmp
or
vdivps
pop
repz
push
inc
in
jg
fisub
dec
jns
mov
sti
lahf
mov
ret
fcmove
dec
jns
test
jns
cmp
idiv
fs
jg
xchg
aad
cmp
cmp
(bad)
cmp
cmp
or
(bad)
xor
pop
adc
jecxz
jns
mov
xchg
ret
jo
or
div
or
cmp
cmc
cli
enter
pop
int
cmp
ret
int
repz
idiv
jns
stc
add
ret
lock
push
fwait
cmps
jo
repz
mov
test
ret
repz
sar
xor
pop
jo
or
imul
in
jo
or
cmp
cmc
cli
enter
pop
not
cmp
ret
int
repz
dec
jg
jns
stc
add
or
jns
aaa
or
xor
add
push
cld
cdq
jo
repz
into
ret
fisub
jns
mov
dec
jns
test
jns
cmp
idiv
in
jo
or
push
cmp
cmc
sub
ret
or
dec
jns
aad
cmp
cmp
jno
xor
mov
xor
repz
cmp
or
mov
or
int
lea
mov
int3
xchg
ret
dec
mov
mov
mov
repz
push
mov
dec
mov
mov
(bad)
std
repz
xor
shr
or
stos
retf
lock
pop
lock
jns
cmp
inc
mov
cld
out
mov
ret
mov
ins
cs
ret
push
or
ret
pop
jl
jns
stc
sbb
sbb
jns
fild
xchg
ret
mov
int3
xchg
ret
xor
repz
mov
xchg
ret
sub
repz
ret
push
jecxz
jns
aad
cmp
cmp
repz
cmp
or
(bad)
xor
pop
adc
dec
jns
mov
xchg
ret
jae
or
div
or
cmp
cmc
cli
enter
pop
not
cmp
ret
int
repz
retf
jge
jns
stc
add
ret
lock
aad
cmp
cmp
or
(bad)
xor
pop
adc
fisttp
int
lock
ret
jb
or
div
icebp
xchg
mov
xchg
retf
xchg
mov
add
lods
ret
xrelease
ret
(bad)
cld
bnd
mov
cmp
test
retf
xchg
je
jns
mov
repz
mov
test
mov
cmc
or
or
add
je
or
mov
ret
faddp
icebp
xchg
dec
sbb
imul
jns
mov
pop
xchg
sub
jns
stc
add
mov
mov
xor
dec
cmc
lock
pop
test
hlt
ret
mov
sti
cmp
bound
mov
xchg
shl
ficomp
aaa
jns
mov
(bad)
int
repz
mov
xchg
mov
cld
xchg
ret
mov
xchg
dec
adc
xchg
repz
mov
test
ret
repz
sar
xor
fisttp
and
or
cmp
cmc
cli
enter
pop
pusha
sar
xor
mov
xchg
xchg
add
mov
add
ret
lock
aad
inc
xor
or
(bad)
xor
pop
adc
jecxz
jns
mov
xchg
ret
or
xor
or
cmp
cmc
cli
enter
pop
int
cmp
ret
int
repz
add
jns
stc
add
xchg
repz
aad
inc
xor
or
int
clc
xchg
ret
xor
mov
sub
adc
enter
hlt
xchg
ret
cmp
ret
in
jg
xchg
aad
inc
xor
iret
inc
xor
or
(bad)
xor
pop
adc
dec
jns
mov
xchg
ret
or
or
div
or
cmp
cmc
cli
enter
pop
not
cmp
ret
int
repz
pop
or
mov
add
ret
lock
repz
mov
xchg
pop
add
mov
or
xor
add
push
cld
cdq
jo
repz
into
ret
fidiv
enter
sar
xor
mov
xchg
dec
add
mov
add
pop
add
mov
or
xor
add
aad
inc
xor
or
vdivps
pop
repz
push
inc
in
jg
ficomp
enter
xor
test
jns
cmp
idiv
fs
jg
xchg
aad
inc
xor
cli
bound
cmp
or
mov
or
xor
add
push
(bad)
cmps
jo
repz
into
ret
fcmove
xor
mov
xor
test
jns
cmp
idiv
fs
jg
xchg
aad
inc
xor
xchg
mov
xor
pop
dec
add
mov
jns
movs
sti
and
test
ret
repz
add
cmp
push
(bad)
(bad)
or
imul
or
xchg
repz
aad
inc
xor
cld
push
ret
xchg
str
mov
or
xor
add
push
cld
cdq
jo
repz
into
ret
fisub
jns
mov
sar
xor
mov
xchg
jnp
or
mov
add
aaa
add
mov
or
xor
add
push
cld
cdq
jo
repz
into
ret
ficomp
xor
mov
sar
xor
mov
xchg
and
or
mov
add
les
sbb
aad
inc
xor
or
(bad)
xor
pop
adc
fisttp
int
lock
ret
push
cmp
cmp
bound
repz
sar
xor
fisttp
cmp
in
push
cmp
or
stos
retf
enter
pop
int
cmp
ret
int
repz
xchg
add
mov
add
xor
dec
jns
mov
xchg
ret
push
cmp
in
push
cmp
or
stos
retf
enter
pop
int
cmp
ret
int
repz
pop
add
mov
add
inc
inc
or
(bad)
cld
bnd
mov
cmp
or
stos
retf
in
retf
imul
ret
(bad)
dec
jns
aad
inc
xor
jecxz
xor
or
(bad)
xor
pop
adc
fisttp
int
lock
ret
push
cmp
cmps
out
jg
xchg
aad
inc
xor
mov
jae
cmp
pop
ret
jns
mov
xchg
ret
or
lea
fidiv
push
jns
cmp
idiv
in
or
or
stos
retf
mov
ret
or
dec
jns
aad
inc
xor
fsub
ret
fidiv
enter
data16
aas
data16
cmp
dec
xchg
in
or
repz
mov
or
xchg
repz
aad
inc
xor
clc
xchg
ret
int
lock
ret
fcmovb
icebp
xchg
pop
xor
xor
mov
xchg
retf
or
int
lock
ret
add
cmp
lock
outs
in
add
shl
test
bound
sti
(bad)
pop
lock
mov
or
lea
cmp
or
sti
dec
xchg
(bad)
aaa
jbe
js
sub
sar
xor
repz
mov
jns
mov
dec
retf
adc
push
mov
ret
xrelease
or
mov
ret
mul
mov
add
or
dec
jns
ja
cmp
push
or
stos
ret
adc
loope
jns
out
cmp
push
out
jo
fs
cmp
xrelease
popa
inc
jns
(bad)
lds
fisubr
pop
lea
hlt
dec
retf
cli
xchg
mov
xchg
mov
int3
cli
sar
xchg
cmp
cld
mov
lds
mov
hlt
mov
inc
dec
xor
pop
jnp
jg
in
xchg
shl
fs
dec
xor
repz
mov
add
xor
xrelease
imul
loope
ret
retf
lock
imul
add
inc
icebp
xchg
ret
iret
ret
ret
or
mov
ret
stos
shl
fcmovu
cmp
mov
jno
mov
test
ret
cmp
xchg
inc
shl
mov
imul
icebp
iret
ret
lds
jns
push
or
jo
in
pop
cmp
icebp
xchg
mov
or
and
hlt
mov
icebp
xchg
ins
in
or
or
(bad)
aad
inc
xor
or
mov
icebp
xchg
ins
fs
out
jg
adc
aas
or
mov
sbb
push
xor
or
imul
pop
cmp
push
jnp
cmp
repz
cmp
jns
mov
pop
hlt
mov
icebp
xchg
ins
in
push
cmp
icebp
xchg
ret
iret
ret
xchg
mov
xchg
ret
iret
ret
mov
ret
jl
xrelease
mov
int3
or
imul
pop
cmp
cli
js
cmp
or
mov
repnz
ins
in
or
hlt
lock
mov
int
ret
mov
ret
mov
int3
jecxz
int
mov
iret
ret
jbe
or
mov
repnz
ins
in
or
test
cmc
mov
dec
jns
cmp
xrelease
cmp
mov
xor
repz
and
mov
repnz
cmp
clc
cmc
and
xor
repz
cs
xchg
fs
bound
repz
data16
sbb
data16
mov
pop
adc
aad
dec
xor
aad
xor
repz
test
jns
mov
push
retf
xchg
push
push
cmps
jo
fs
jg
hlt
mov
repnz
ins
in
add
sub
xrelease
(bad)
and
lds
push
jns
mov
test
ret
pop
dec
sar
xor
das
dec
xor
jns
pop
aad
jns
aad
dec
xor
xrelease
mov
or
ret
aaa
dec
les
dec
pop
adc
inc
or
fidiv
jns
mov
repz
aaa
fs
cmp
or
pop
cmp
test
ret
popa
aad
dec
xor
sar
xor
repz
jns
xchg
mov
repz
dec
sub
xchg
mov
out
mov
nop
test
ret
cmc
and
xor
add
xchg
mov
lea
mov
ret
outs
or
mov
jmp
mov
icebp
xchg
mov
das
fimul
jns
push
or
xchg
iret
dec
xor
repz
cdq
ds
mov
in
ret
cmp
cmp
pusha
test
ret
ins
arpl
lock
mov
outs
pop
cs
xor
mov
cli
repz
aad
dec
xor
pop
xchg
cli
repz
aad
dec
xor
pop
test
dec
sbb
lahf
push
or
mov
retf
pop
xchg
xchg
push
or
mov
leave
add
ja
add
ror
cmp
in
add
addr16
cmp
xor
pop
aaa
xor
adc
test
test
cmp
mov
in
pop
cmp
repz
mov
cli
repnz
or
jns
dec
add
js
hlt
jbe
or
(bad)
aad
dec
xor
test
test
hlt
jbe
or
push
push
sub
xor
add
ja
cmp
cmp
jns
jp
aad
dec
xor
data16
push
out
sub
data16
cmp
or
hlt
mov
or
int
in
add
pop
das
fimul
in
add
push
daa
imul
mov
sub
or
pop
repnz
xor
imul
adc
lock
test
sahf
mov
ret
cmc
mov
dec
data16
xrelease
mov
pop
pop
sar
xor
iret
push
xor
add
mov
retf
xor
in
xchg
aad
dec
xor
int3
or
ret
rol
xrelease
in
add
jmp
mov
in
xchg
mov
dec
bnd
and
mov
dec
data16
xrelease
mov
fs
push
xor
test
popa
ret
rol
repz
pop
or
mov
add
repnz
adc
xchg
ret
fucompp
and
or
cmp
aaa
lea
fst
push
mov
push
sub
xor
lahf
push
xor
push
jno
xchg
push
mov
retf
cmp
cld
lock
outs
fs
cmp
or
mov
jge
inc
xor
data16
out
and
vcmppd
jo
pop
xchg
ja
or
mov
add
les
cld
push
ret
adc
jns
mov
pop
xchg
xor
or
mov
add
ror
or
mov
or
xor
add
push
cld
cdq
jo
cmp
(bad)
aad
dec
xor
mov
xor
or
(bad)
xor
and
jns
pop
or
xor
jns
ret
pop
sar
xor
repz
enter
aas
jns
test
jns
cmp
idiv
fs
jg
hlt
mov
in
xchg
ins
in
add
test
pop
or
cmp
mov
jns
ret
fidivr
enter
aas
jns
test
jns
cmp
idiv
fs
jg
hlt
mov
in
xchg
ins
in
add
in
add
or
stos
retf
enter
fidiv
outs
jns
cmp
add
gs
push
movs
jo
add
gs
dec
xor
jns
pop
das
sar
xor
repz
sar
xor
repz
loope
jns
mov
sti
lahf
mov
ret
fimul
push
jns
cmp
idiv
fs
jg
hlt
mov
in
xchg
ins
in
add
fs
jg
hlt
mov
in
xchg
ins
in
add
in
add
or
stos
retf
enter
pop
int
cmp
mov
jns
ret
fisubr
enter
sar
xor
repz
mov
enter
sti
lahf
mov
ret
fimul
push
jns
cmp
idiv
in
add
or
stos
retf
mov
ret
push
dec
jns
or
ret
daa
(bad)
jns
stc
sbb
sbb
dec
jns
mov
pop
xchg
pop
(bad)
jns
stc
add
ror
jns
aaa
or
xor
add
push
cld
cdq
jo
cmp
(bad)
aad
dec
xor
inc
movs
jo
cmp
(bad)
aad
dec
xor
cld
dec
ret
xchg
xchg
or
jns
aaa
or
xor
add
push
cld
cdq
jo
cmp
(bad)
aad
dec
xor
push
cmps
jo
cmp
(bad)
aad
dec
xor
imul
mov
xor
pop
ret
jns
mov
pop
xchg
mov
or
mov
add
les
jns
mov
ret
sbb
dec
jns
mov
pop
xchg
(bad)
or
mov
sbb
das
or
jns
aaa
or
xor
add
push
cld
cdq
jo
cmp
(bad)
aad
dec
xor
or
jo
cmp
(bad)
aad
dec
xor
out
dec
xor
or
(bad)
xor
sbb
ret
jns
mov
pop
xchg
xor
jns
stc
add
or
fild
xchg
cmp
or
stos
retf
in
retf
imul
ret
and
dec
jns
or
ret
scas
or
sbb
dec
or
or
xor
add
push
cld
cdq
jo
cmp
(bad)
aad
dec
xor
shl
(bad)
xchg
mov
cmp
loop
jae
or
prefetchw
mov
or
xor
add
push
cld
cdq
jo
cmp
(bad)
aad
dec
xor
sbb
cmp
or
(bad)
xor
and
jns
pop
or
xor
jns
ret
pop
sar
xor
repz
and
mov
sar
xor
repz
xor
xor
data16
aas
data16
cmp
dec
sub
mov
jns
mov
test
ret
hlt
hlt
sbb
mov
jns
ret
fidiv
and
push
or
pop
rol
(bad)
cmp
repz
into
loop
xchg
fldenv
jns
ret
in
ret
dec
push
or
add
dec
xchg
xor
cld
push
ret
es
lds
fidivr
pop
cs
shr
pop
mov
mov
mov
std
leave
ret
cmc
mov
repz
retf
lea
mov
popf
and
mov
jno
imul
test
ret
(bad)
cld
mov
xrelease
cmp
and
aad
(bad)
int
lea
pop
cmp
jnp
xor
xrelease
data16
mov
pop
xchg
repz
pop
cmp
int
ret
pop
xchg
sar
xor
movs
jo
fs
cmp
xrelease
xor
adc
cmp
jns
mov
pop
hlt
mov
icebp
xchg
ins
in
sbb
hlt
lock
ret
iret
ret
mov
ret
sbb
xrelease
xor
adc
mov
pop
xchg
fwait
adc
mov
ret
mov
repnz
ins
in
sbb
or
(bad)
fdiv
xchg
ret
xor
test
mov
ret
daa
adc
mov
adc
cmc
sub
ror
repz
mov
repnz
cmp
jns
mov
repz
and
mov
repnz
cmp
clc
cmc
dec
data16
mov
ror
repz
es
shl
bound
repz
data16
sbb
data16
mov
pop
adc
aad
push
xor
mov
cmp
repz
std
and
js
mov
xchg
push
push
cmps
jo
fs
jg
hlt
mov
repnz
ins
in
pop
cmp
retf
(bad)
xrelease
(bad)
and
cmc
dec
xor
xor
repz
sar
xor
daa
push
xor
jns
pop
aad
jns
aad
push
xor
xrelease
mov
push
leave
ret
aaa
dec
les
xor
adc
int
jns
ins
es
mov
push
retf
adc
cmp
jns
mov
pop
das
(bad)
es
push
or
jns
mov
pop
xchg
addr16
xchg
ret
cmp
cmp
xrelease
in
(bad)
cli
div
mov
jns
mov
cld
mov
aad
push
xor
or
mov
ret
xchg
inc
scas
int
test
int
in
sbb
dec
jns
and
jns
ins
fs
jg
das
fcmovb
and
mov
jns
pop
sar
xor
repz
xor
xrelease
dec
in
iret
ret
add
xrelease
mov
in
ret
fimul
pop
das
int
cwde
test
ret
jmp
xchg
xlat
push
or
fs
push
xor
xrelease
cmp
mov
xchg
sti
adc
jns
lds
jns
mov
inc
sbb
icebp
xchg
aad
push
xor
repz
cmp
jns
arpl
lock
mov
outs
pop
cs
pop
sub
das
xor
or
mov
xor
xor
cmp
sub
xor
in
adc
jae
jns
fiadd
sub
sbb
jns
mov
aad
pop
xor
or
mov
cmp
dec
jns
cmp
and
adc
imul
sbb
jmp
ja
test
fs
pop
xor
or
mov
lds
xor
sub
imul
jns
pop
mov
add
jl
dec
add
iret
adc
test
cmp
jns
add
out
pop
ret
xor
repz
push
xor
add
mov
cld
xchg
ins
in
add
cli
div
xor
ss
xchg
and
adc
imul
sbb
mov
sub
fmul
cmp
adc
lds
retf
cmp
cmp
xchg
push
xor
jg
jg
hlt
ja
pop
xchg
jecxz
or
mov
and
xor
data16
jle
jns
ret
xchg
jg
xchg
sbb
jns
mov
mov
movaps
xlat
cmp
mov
lea
xchg
push
xor
dec
lea
or
jno
or
int
and
jae
in
sbb
bnd
js
cli
retf
in
ins
hlt
iret
sub
fmul
mov
add
xor
jmp
cmp
data16
cmp
pop
cmp
fs
xor
adc
sbb
unpcklps
mov
cmp
dec
cmp
mov
adc
data16
push
cmp
pop
aad
cmp
aad
push
xor
cmp
pop
mov
arpl
cmp
cmp
pop
adc
push
xor
cmp
pop
and
push
xor
or
pop
cmp
adc
ret
lods
jl
xchg
or
pop
adc
ret
lods
jl
xchg
sbb
pop
adc
ret
xchg
jg
xchg
sub
pop
adc
ret
xchg
jg
xchg
cmp
cmp
js
push
cmp
pop
or
call
cmp
cmp
pop
int
cmp
aad
pop
xor
cmp
pop
test
fistp
cmp
cmp
pop
movs
scas
cmp
aad
pop
xor
or
aam
dec
lea
(bad)
pop
(bad)
icebp
and
jae
cmp
in
jae
in
adc
test
jns
sub
lock
aad
cmp
aad
pop
xor
mov
jo
in
adc
mov
mov
xor
xchg
mov
sbb
cmp
or
pop
shl
push
mov
sub
sahf
sub
jae
imul
jl
xchg
fistp
or
pop
shl
cs
jns
jmp
or
jb
imul
jge
xchg
sti
sbb
pop
shl
sbb
sub
sahf
je
jo
imul
jl
xchg
xchg
sbb
pop
shl
adc
sub
sahf
and
jb
imul
jl
xchg
mov
or
mov
cli
test
or
sbb
dec
jns
sub
lock
mov
pop
pop
xor
jmp
cs
leave
jne
das
mov
or
(bad)
out
jns
dec
add
mov
sti
fs
jmp
mov
enter
xchg
cmp
push
or
fiadd
jns
mov
or
ja
pop
das
ficom
jns
push
or
pop
or
das
mov
leave
pop
bnd
daa
cmp
ins
data16
cmp
pop
adc
loop
jns
(bad)
cmp
push
or
xor
or
jbe
dec
jns
cmp
dec
jns
cmp
dec
sbb
pop
pop
adc
push
sbb
xor
xlat
cmp
push
(bad)
mov
fidiv
or
jae
test
pop
cmp
dec
jns
cmp
dec
jns
lods
or
sbb
pop
pop
adc
sbb
cmp
sar
xor
mov
(bad)
sub
sahf
ins
fnstenv
data16
aas
data16
cmp
data16
cmp
push
jns
push
or
xor
adc
aad
pop
xor
pop
adc
ret
lods
jl
xchg
push
sbb
pop
cmp
dec
jns
cmp
dec
jns
sub
or
push
push
and
xor
xlat
cmp
push
(bad)
mov
fisub
jns
sahf
jo
jo
lea
pop
cmp
dec
jns
cmp
dec
jns
sub
or
dec
push
and
xor
xlat
cmp
push
(bad)
mov
fisub
sub
sahf
lods
fidiv
data16
or
out
cmp
dec
fnstenv
imul
xor
jns
cmp
or
bound
mov
jmp
aad
pop
xor
or
xor
cmp
jl
adc
ret
xchg
jl
adc
push
je
xor
or
sbb
jns
ins
fs
jg
adc
out
jns
cmp
or
mov
repz
push
mov
repz
push
popf
dec
jns
pop
sbb
or
xor
adc
cmp
sar
xor
mov
fimul
jns
sahf
in
jae
lea
pop
inc
(bad)
cmp
push
or
jno
or
(bad)
aad
pop
xor
or
xor
js
cmp
dec
jns
and
jns
push
or
pop
or
xchg
pop
lods
cmp
push
and
cmp
or
xor
adc
cmp
sar
xor
mov
fidiv
sub
sahf
mov
jo
lea
pop
cmp
dec
jns
cmp
dec
jns
adc
adc
xchg
or
xor
jns
ins
movs
in
jg
adc
cmp
or
push
mov
test
or
xchg
jns
cmp
push
sbb
or
jns
cmp
or
xor
(bad)
cmp
push
(bad)
mov
fidiv
pushf
fidiv
test
fidiv
dec
lods
jl
adc
ret
xchg
jl
adc
push
lea
cmp
or
es
jns
cmp
pop
mov
jmp
aad
pop
xor
or
xor
cmp
jl
adc
ret
xchg
jl
adc
push
imul
cmp
jns
dec
xor
jns
ins
fs
jg
adc
out
jns
cmp
or
add
dec
push
mov
repz
jbe
dec
jns
sub
or
add
jns
pop
fs
cmp
dec
jns
out
cmp
push
or
out
or
xchg
int
cmp
push
or
pop
or
xchg
jns
cmp
push
sbb
fs
inc
js
cmp
or
xor
(bad)
cmp
push
(bad)
mov
fisub
cwde
fidiv
data16
or
out
cmp
ins
fnstenv
popaw
pop
adc
jns
cmp
or
bound
cmps
jo
fs
jg
adc
aas
or
ficomp
jns
sahf
mov
jo
data16
or
out
cmp
ins
fnstenv
popaw
pop
mov
iret
jns
cmp
or
bound
(bad)
fs
jg
adc
aas
or
ficomp
cs
sahf
adc
jb
test
pop
cmp
dec
jns
cmp
dec
jns
and
or
xor
adc
cmp
sar
xor
mov
xor
or
xchg
adc
or
pop
or
xchg
pop
lods
cmp
push
adc
push
push
stc
jns
cmp
or
bound
cmps
jo
fs
jg
adc
aas
or
ficom
sub
jae
data16
or
out
cmp
dec
fnstenv
data16
pop
cmps
or
xor
js
cmp
or
bound
mov
jmp
or
xor
jg
xor
or
imul
and
dec
ret
ins
hlt
iret
sub
fmul
mov
cmp
mov
jg
xchg
in
(bad)
lock
push
loopne
jo
pop
xchg
cs
mov
sbb
cmp
and
jns
or
jae
in
adc
pop
das
fidivr
or
pop
or
das
mov
leave
pop
bnd
daa
cmp
ins
data16
cmp
pop
adc
loop
jns
(bad)
cmp
push
or
xor
or
jbe
dec
jns
cmp
dec
jns
cmp
dec
sbb
pop
pop
adc
push
sbb
xor
aad
xor
mov
fisub
or
jae
lea
pop
cmp
dec
jns
cmp
dec
jns
adc
sbb
pop
pop
adc
sbb
cmp
sar
xor
mov
fisub
jns
sahf
ins
fnstenv
data16
aas
data16
cmp
data16
cmp
push
jns
push
or
xor
adc
aad
pop
xor
pop
adc
ret
lods
jl
xchg
retf
and
pop
cmp
dec
jns
cmp
dec
jns
pop
sbb
ins
pop
ds
bound
cmps
jo
fs
call
aad
data16
or
frstor
jns
push
jbe
jo
data16
jle
jns
ins
in
sub
out
jns
cmp
or
pop
aad
cmp
aad
data16
dec
jns
dec
sbb
xor
adc
jns
or
in
cmp
or
es
or
xor
js
cmp
dec
jns
pop
adc
push
or
pop
or
xchg
pop
lods
cmp
push
and
cmp
add
or
bound
cmps
jo
fs
call
aad
data16
or
retf
lock
push
or
pop
or
xchg
pop
lods
cmp
push
and
cmp
xlat
xor
mov
pop
loope
cmp
push
mov
fisub
and
jae
in
mov
cmp
jl
adc
ret
xchg
jl
adc
push
lea
cmp
or
jns
ins
fs
jg
adc
out
jns
cmp
or
inc
pushf
dec
jns
cmp
dec
jns
cmp
dec
jns
sub
or
xor
jns
cmp
pop
adc
dec
jns
out
cmp
push
or
xchg
and
xchg
or
in
xor
loopne
cmc
push
or
pop
or
xchg
jns
cmp
push
sbb
iret
cmp
or
xor
adc
cmp
(bad)
cmp
push
(bad)
mov
fisub
jns
sahf
cld
in
cmp
cmp
jae
data16
or
jae
imul
xor
or
pop
cmp
or
jmp
aad
xor
scas
in
xchg
jg
adc
ret
lods
jl
adc
ret
xchg
jl
adc
push
call
lahf
xor
or
xor
pop
jmp
or
call
cmp
or
dec
pushf
dec
jns
cmp
dec
jns
cmp
dec
jns
sub
or
int
or
pop
and
cmp
dec
jns
out
cmp
push
or
and
jns
popf
scas
cmp
push
or
pop
or
xchg
pop
lods
cmp
push
adc
mov
or
pop
adc
pop
cmp
pushf
(bad)
fs
jg
adc
aas
or
fiadd
jns
sahf
adc
jb
lea
pop
cmp
dec
jns
cmp
dec
jns
and
ins
pop
cmp
shl
call
aas
or
fiadd
adc
sahf
and
jae
data16
or
out
cmp
ins
fnstenv
popaw
pop
pop
es
sub
mov
dec
jns
cmp
cmp
push
or
xor
or
adc
repz
push
mov
repz
jbe
dec
jns
sub
cmp
or
pop
and
mov
dec
jns
(bad)
aad
xor
xchg
jmp
or
xchg
movs
scas
cmp
aad
mov
ret
pusha
cmp
dec
xchg
mov
ret
ins
hlt
iret
sub
fmul
lea
cmp
ds
mov
mov
xchg
mov
mov
movlps
push
movups
cmp
add
scas
daa
or
mov
xor
adc
imul
sub
in
sub
or
ja
or
cmp
test
mov
hlt
ja
pop
hlt
ja
pop
hlt
ja
pop
xchg
fs
xchg
adc
cmp
scas
xchg
mov
lock
or
inc
shl
or
data16
jns
dec
add
aam
repz
mul
int3
or
ss
and
mov
jns
mov
repz
mul
test
icebp
push
add
xor
and
mov
js
mov
clc
fmul
scas
leave
jo
cmp
(bad)
aad
popa
xor
or
cmp
retf
loope
push
xchg
sub
les
cmp
in
sub
cld
lock
mov
sbb
jns
mov
pop
xchg
sub
repz
sub
mov
cmp
in
sub
or
push
sbb
jo
cmp
(bad)
aad
outs
xor
test
inc
sub
dec
cmp
mov
repz
ins
in
and
ret
and
enter
cld
xor
xrelease
mov
add
cmp
pop
pop
mov
jns
ret
ficomp
jno
cmp
adc
mov
pop
xchg
mov
int
mov
xor
push
xor
repz
push
sbb
mov
sbb
jns
mov
pop
xchg
sub
jns
inc
repz
sub
js
jg
hlt
mov
repz
ins
in
and
ret
and
retf
jo
cmp
(bad)
aad
outs
xor
jns
pop
add
cmp
mov
jns
ret
fisubr
cld
mov
mov
test
ret
hlt
mov
sbb
jns
mov
pop
xchg
fild
or
pop
cmp
aad
xor
mov
xor
xrelease
or
jae
in
(bad)
ret
or
dec
jns
cmp
jae
in
iret
ret
repnz
jns
mov
sti
lahf
mov
ret
fistp
repnz
arpl
lock
mov
mov
jno
fimul
jmp
mov
push
retf
lock
jmp
cmp
or
xchg
int
(bad)
mov
cmp
fisubr
jns
bound
outs
dec
jns
mov
clc
fiadd
pop
mov
xor
or
cmp
xor
retf
jo
cmp
(bad)
aad
outs
xor
or
cmp
retf
cmps
into
hlt
xchg
mov
repz
sub
aad
jg
hlt
mov
sti
xchg
ins
in
daa
cmp
hlt
xchg
aas
jns
pop
sti
mov
xchg
(bad)
sub
fstp
jns
mov
repz
sub
sahf
cmp
mov
sti
xchg
ins
in
daa
cmp
or
(bad)
cld
(bad)
retf
mov
(bad)
ss
sbb
jns
mov
pop
xchg
xchg
sub
mov
inc
and
retf
cmp
(bad)
aad
ins
xor
xrelease
sbb
jns
mov
pop
xchg
pop
sub
mov
inc
and
retf
cmp
(bad)
aad
ins
xor
test
int
add
and
retf
cmp
(bad)
aad
ins
xor
xrelease
dec
sbb
jns
mov
pop
xchg
sub
or
mov
inc
and
retf
cmp
(bad)
aad
ins
xor
xrelease
dec
sbb
jns
mov
pop
xchg
xlat
sub
mov
mov
test
int
add
push
in
jo
cmp
(bad)
aad
ins
xor
xrelease
dec
sbb
jns
mov
pop
xchg
xchg
sub
mov
inc
and
int
cmp
xrelease
xchg
cmp
or
mov
sti
xchg
ins
in
ffreep
repz
lock
sti
xchg
mov
adc
dec
jns
mov
cmp
aad
xchg
int
(bad)
mov
(bad)
stc
(bad)
into
hlt
xchg
vmread
in
int
or
mov
vmwrite
mov
or
ret
lock
sti
xchg
mov
push
ret
dec
jmp
popf
dec
jns
jl
xchg
mov
loopne
int
add
jnp
cmp
or
pop
lock
cmp
or
mov
lock
ret
mov
or
xchg
ret
cmp
cmp
xrelease
test
xor
fmul
mov
ret
pop
in
jns
mov
pop
xchg
mov
or
mov
add
pop
hlt
xchg
cmp
adc
xor
pop
lock
enter
sub
test
retf
jbe
jno
jns
mov
or
inc
or
jg
adc
in
jns
mov
pop
xchg
daa
and
and
jmp
sub
mov
pop
xchg
retf
sub
mov
adc
jle
or
xor
xrelease
das
ins
xor
or
aam
mov
hlt
mov
test
ret
pop
sub
mov
fiadd
push
jo
cmp
(bad)
aad
outs
xor
mov
fisubr
sbb
mov
test
ret
repnz
shl
int
fs
or
mov
hlt
xchg
ins
in
and
sub
lock
sub
pop
cmp
(bad)
jmp
xchg
ins
in
scas
ret
div
add
js
cmp
xrelease
loope
jns
fs
retf
xchg
mov
test
int
push
jbe
or
or
pushf
dec
jns
fcom
cmp
mov
test
ret
fidivr
enter
mov
test
ret
fimul
push
jns
mov
test
ret
fimul
sbb
mov
lods
(bad)
xchg
adc
mov
mov
lock
ret
and
repz
int
or
cmp
ret
(bad)
int
jnp
mov
mov
test
int
cmp
bound
mov
into
ret
xrelease
jae
xor
mov
(bad)
pop
jns
mov
mov
ret
pop
repnz
push
retf
and
sti
xchg
mov
jle
push
cmp
fstp
jns
mov
(bad)
retf
clc
les
mov
int
clc
or
cmp
hlt
xchg
ins
in
and
repnz
push
(bad)
mov
xchg
aad
push
retf
xchg
or
xchg
hlt
xchg
push
out
or
data16
cmp
or
fucompp
sbb
test
ret
popa
ret
retf
xchg
retf
lock
xor
jbe
aaa
icebp
xchg
ret
retf
xchg
outs
das
or
mov
and
xor
or
pop
sub
imul
or
push
daa
imul
test
aad
imul
xchg
mov
pop
test
or
xor
push
jns
mov
fstp
ret
repnz
sbb
fisubr
jns
push
or
jns
mov
or
ja
scas
dec
lods
jl
mov
xor
aam
shl
lock
push
pop
in
cmp
or
int
or
pop
lods
lods
cmp
aad
push
and
sbb
mov
or
ss
jns
mov
pop
xchg
in
and
pushf
fdiv
cmp
(bad)
aad
loop
ret
and
xrelease
cmp
or
mov
js
jo
add
pop
dec
mov
or
icebp
pop
push
jns
aad
ins
xor
sbb
mov
(bad)
or
mov
mov
test
xchg
shl
xchg
mov
or
ins
xor
loope
int
fbstp
sub
out
enter
sub
test
shl
xchg
ret
mov
loope
int
add
repnz
or
mov
loope
int
in
es
into
js
xor
cld
fwait
shl
xchg
sti
mov
ffreep
repz
mov
ret
mov
icebp
aam
xor
repz
xor
jns
mov
or
xor
repz
ret
jnp
or
mov
ret
je
xrelease
ret
cli
cli
xrelease
mov
out
ret
fidivr
sbb
xchg
pop
xor
mov
sti
pop
xor
or
mov
sti
aam
xor
out
cmp
or
(bad)
pop
loop
int
cmp
jg
rcl
or
rcr
xchg
dec
jns
lods
lods
cmp
push
retf
cmp
or
inc
cs
mov
inc
xchg
cmp
or
push
cwde
fs
jg
adc
sti
aam
xor
jmp
and
loope
int
cmp
in
or
adc
test
jns
lods
lods
cmp
push
retf
cmp
or
daa
cs
mov
dec
hlt
pop
cmp
cmp
test
pop
cmp
data16
cmp
dec
adc
mov
add
mov
int
aas
data16
cmp
or
cmc
js
xchg
test
mov
xchg
ins
in
cmp
or
mov
mov
xor
dec
cmc
adc
mov
shl
xchg
xrelease
jns
(bad)
add
push
or
ja
pop
adc
push
cld
cdq
jo
repz
aad
jbe
cmp
or
cmc
js
xchg
test
mov
xchg
ins
in
and
jecxz
int
les
xor
adc
mov
shl
xchg
xrelease
jns
fidivr
or
ja
pop
adc
push
cld
cdq
jo
repz
aad
jbe
cmp
pop
ja
cmp
or
shl
repnz
loope
int
iret
hlt
aaa
(bad)
cmp
mov
cdq
xchg
or
mov
cmp
add
cmp
or
xor
add
mov
lods
pop
ds
xor
xchg
mov
or
mov
jmp
dec
movs
xor
in
and
retf
cmp
ds
xor
mov
xor
or
xor
lahf
jbe
cmp
cmp
jae
data16
cmp
data16
cmp
or
shl
dec
jns
(bad)
cmp
push
or
aaa
sub
xchg
cmp
push
cwde
leave
jo
data16
cmp
or
xor
scas
retf
(bad)
mov
xor
mov
sbb
cmp
or
dec
in
jns
aad
je
cmp
xrelease
cmp
or
xor
in
sahf
shl
xchg
mov
or
cmp
test
int
pop
hlt
mov
loop
int
fs
dec
in
jns
ins
mov
jns
mov
repz
mul
(bad)
pop
pop
mov
xor
or
xor
xrelease
inc
xchg
or
xor
or
data16
cmp
or
fidiv
mov
fadd
repz
data16
and
xor
adc
aad
je
cmp
or
pop
cmp
or
xor
cmp
jl
xchg
imul
jns
and
in
cmp
or
icebp
add
jns
mov
popf
(bad)
aad
ja
cmp
data16
js
sub
imul
or
bound
sti
call
addr16
clc
fiadd
pop
lea
retf
sbb
ja
pop
xor
hlt
jnp
mov
in
cmp
or
cmp
cmp
or
sub
sbb
cmc
lahf
xor
or
pop
xor
or
mov
fs
cmp
or
xor
mov
pop
mov
fiadd
call
xchg
iret
ret
retf
lock
push
loopne
jo
repz
faddp
repz
push
call
imul
shl
(bad)
mov
xchg
and
or
cmp
add
mov
or
mov
ret
pop
jns
cmp
aad
jne
cmp
xchg
rol
xrelease
mov
(bad)
xchg
ss
test
cmps
cmc
icebp
xchg
add
or
mov
popf
iret
ret
mov
icebp
xchg
mov
fadd
shl
or
js
pop
cmp
cld
(bad)
shl
sbb
pop
repnz
icebp
xchg
push
mov
pop
cmp
dec
fnstenv
in
aas
cmp
add
mov
or
cmp
cmp
or
pop
mov
mov
ds
xor
dec
jns
mov
or
inc
cmp
(bad)
xrelease
xor
xchg
js
mov
repz
pop
mov
fiadd
xchg
fs
xor
cmp
lock
pushf
or
jae
xor
push
xor
aad
je
cmp
or
xor
add
cmp
jns
fisubr
add
test
push
xor
loopne
int
test
xor
hlt
xchg
ret
pop
pop
or
or
pushf
fidiv
js
or
js
jo
js
or
cmp
jae
js
or
cld
in
cmp
cwde
fidiv
js
or
jo
jo
js
or
lods
fidiv
js
or
add
jae
js
or
sbb
jae
add
call
cmp
out
jne
cmp
xrelease
cmp
jo
js
or
lods
fidiv
js
or
cmp
jae
jns
pop
lea
xor
jns
fiadd
repz
cmp
xchg
jne
cmp
or
aad
mov
cmc
mov
repz
cwde
in
test
ret
mov
icebp
xchg
ins
in
ds
icebp
xchg
mov
or
ins
cmp
mov
cli
xchg
cmp
repz
ins
repz
fisub
push
jns
mov
repz
sbb
fs
jg
adc
aad
jb
cmp
dec
jns
cmp
jns
aam
jl
cmp
test
int
test
mov
cli
test
ret
cmovge
cld
test
or
pop
ret
xor
repz
or
(bad)
cmp
repz
mov
xor
dec
cmc
cli
retf
fs
cmp
daa
sar
hlt
scas
cmp
xchg
outs
in
mov
xor
xchg
cmp
or
xor
mov
(bad)
push
jns
ret
xchg
jg
xchg
inc
aaa
or
fistp
jns
test
sahf
mov
ret
mov
ret
mov
icebp
xchg
ins
fs
jmp
xchg
ins
in
ds
xchg
cmp
repz
ins
repz
cs
jns
rol
js
ret
inc
sbb
fs
jg
adc
aad
jae
cmp
dec
jns
cmp
jns
aam
jge
cmp
xrelease
add
and
push
or
aad
dec
jns
cmp
or
pop
and
jo
cmp
or
mov
repz
cmp
mov
ret
mov
or
dec
dec
cmp
inc
dec
sbb
fs
in
or
xor
out
jo
cmp
dec
jns
lods
add
jge
cmp
xrelease
mov
jns
ret
and
lock
lock
mov
js
ret
mov
ret
pop
in
jns
mov
pop
xchg
cmps
ss
mov
sbb
int
or
mov
ret
pop
mov
repz
cmp
xrelease
dec
sub
xor
adc
jmp
cmp
lods
cmp
aad
jo
cmp
or
fnsave
mov
ret
mov
ret
pop
in
jns
mov
pop
xchg
pop
ss
mov
sbb
int
or
mov
ret
pop
adc
jno
cmp
xrelease
dec
sub
xor
adc
cmp
or
pop
adc
jno
cmp
or
retf
lock
mov
js
ret
mov
ret
nop
jmp
int
pop
xchg
div
or
mov
sbb
int
or
mov
ret
pop
adc
and
cmp
xrelease
dec
sub
xor
adc
dec
jns
cmp
or
pop
adc
dec
jno
cmp
or
mov
mov
xor
dec
cmc
cli
retf
pop
pop
cmp
fstp
xor
xchg
push
xor
and
jae
in
cmp
or
hlt
mov
or
rdmsr
mov
xchg
ret
add
inc
or
adc
push
or
push
jmp
cmp
xchg
cmp
aad
jle
cmp
or
mov
repnz
cmp
cld
int
xrelease
ds
mov
cli
cmp
bound
repz
aam
xor
repz
in
jns
mov
or
xor
repz
or
jae
in
xor
cmp
xchg
cmp
data16
sub
cmp
push
or
lahf
cmp
int
sub
jae
in
xor
aas
or
hlt
mov
or
rdmsr
mov
xchg
ret
add
inc
or
adc
push
or
fsubr
dec
jns
cmp
or
pop
sbb
pop
jle
cmp
or
mov
repnz
cmp
hlt
xor
xrelease
add
iret
cmps
ret
repnz
add
or
mov
hlt
mov
repz
ins
cmp
bound
mov
mov
add
cmp
mov
xor
in
int
xchg
fcmovb
xrelease
cmp
data16
cmp
dec
out
cmp
or
mov
repnz
push
push
adc
push
or
xchg
repnz
aad
jl
cmp
dec
jns
dec
dec
hlt
aas
or
les
xor
lock
push
or
cmps
int
xchg
outs
pop
adc
movs
dec
jns
mov
xchg
ret
aaa
cmp
mov
pop
aas
fs
jg
xchg
aad
jl
cmp
xrelease
add
jns
test
test
ret
mov
ret
xchg
repnz
aad
jl
cmp
cld
test
ret
xor
cdq
jo
repz
mov
xchg
inc
or
ret
int3
ret
and
or
int
dec
fnstenv
in
xor
or
xor
adc
push
or
xor
jns
jge
pop
mov
cmp
mov
ret
(bad)
cld
(bad)
shl
mov
ret
pop
aas
data16
cmp
repz
mov
jns
mov
jmp
cli
ret
push
cmp
or
mov
adc
mov
mov
ret
popa
push
pushf
(bad)
repz
mov
xchg
leave
or
push
or
mov
icebp
xchg
ins
data16
rcr
cmp
ret
int3
ret
jmp
or
int
clc
xchg
ret
xor
mov
jns
mov
push
retf
adc
push
or
pop
mov
pop
inc
aam
xor
int
cmp
mov
mov
adc
aaa
ret
lods
jl
xchg
out
or
mov
jmp
mov
icebp
xchg
mov
xchg
and
jns
int
sbb
inc
xor
or
aad
jl
cmp
into
imul
rcr
fs
or
sub
pop
test
mov
cmp
jns
mov
pop
xor
cld
cmc
cmp
mov
jo
jns
int
in
jae
in
ss
jmp
ja
test
jae
jns
int
mov
jo
in
ss
lods
cmp
dec
pop
xchg
adc
jge
cmp
dec
jns
ss
cs
jns
popa
or
mov
mov
mov
lea
test
jns
ss
sbb
or
push
cmp
jl
or
ret
lods
jl
xchg
pop
cmp
or
sub
jae
jns
mov
jl
jo
or
cmp
cmp
and
or
or
sub
jae
jns
mov
jl
jo
or
std
xchg
jg
xchg
(bad)
ds
fnstenv
cmp
mov
dec
jmp
jl
or
mov
pop
cmps
jge
inc
pop
mov
or
das
add
push
lods
jl
or
mov
pop
lods
jl
clc
(bad)
adc
push
cmp
jge
or
mov
jns
jge
inc
pop
adc
or
das
inc
lods
cmp
push
cmp
jl
or
mov
push
stos
jge
inc
pop
mov
or
das
and
or
int
sbb
inc
xor
fimul
jns
(bad)
or
cmc
cmp
jns
bound
sti
call
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
pushf
arpl
(bad)
xor
xor
push
pop
mov
ins
or
mov
lock
dec
and
js
mov
out
jne
mov
cmp
js
mov
sub
rcl
ds
dec
or
retf
mov
in
xor
data16
aad
xchg
int
push
mov
lea
pop
cmp
or
cmp
out
idiv
or
xor
int3
ror
xrelease
in
xor
mov
pop
cmp
(bad)
frstor
or
xor
sub
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
sar
mov
ret
(bad)
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
jg
jmp
xor
sub
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
(bad)
jg
jmp
xor
sub
(bad)
jg
jmp
xor
sub
(bad)
jg
jmp
xor
sub
(bad)
jg
jmp
xor
sub
(bad)
jg
jmp
xor
sub
(bad)
jg
jmp
xor
sub
(bad)
jg
jmp
xor
sub
(bad)
jg
jmp
xor
sub
(bad)
jg
jmp
xor
sub
(bad)
jg
jmp
xor
sub
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
xor
sub
mov
ret
(bad)
jg
jmp
.byte
