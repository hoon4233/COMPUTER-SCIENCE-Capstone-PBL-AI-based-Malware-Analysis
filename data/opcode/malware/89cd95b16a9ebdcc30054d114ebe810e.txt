call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
jmp
jne
mov
loope
and
je
push
pop
add
neg
xchg
inc
xchg
push
(bad)
daa
add
lea
nop
(bad)
fcom
dec
test
mov
repnz
or
xchg
outs
push
movs
xchg
lds
test
adc
pushf
mov
jno
mov
loopne
sub
fs
adc
or
or
cmps
lahf
jmp
fild
ja
xchg
test
jbe
(bad)
lods
or
dec
mov
gs
xchg
cmc
ret
test
jbe
sub
test
jp
aaa
xchg
ins
mov
jp
mov
jg
les
mov
xchg
jp
mov
nop
dec
sub
sub
xchg
call
mov
mov
in
xor
push
xor
inc
stos
jo
retf
sub
jo
mov
aam
(bad)
dec
cwde
je
mov
add
xor
add
mov
lods
jle
(bad)
and
jns
cmps
xchg
sahf
repz
in
cmp
jp
mov
add
sahf
pop
in
(bad)
jns
mov
stc
aam
adc
arpl
test
les
into
mov
jns
mov
pop
xor
push
jmp
sub
in
aaa
xchg
or
pop
lods
jae
dec
cs
pop
cmp
mov
xchg
outs
in
sbb
scas
and
dec
xchg
jno
scas
adc
lds
pop
inc
xchg
fs
lods
(bad)
repnz
sub
pop
cmp
imul
jnp
lds
add
adc
xor
aas
test
push
mov
cld
(bad)
and
lea
xchg
leave
aas
or
mov
pop
in
mov
nop
nop
nop
nop
xor
lea
xchg
xor
xchg
add
add
cmp
jl
nop
nop
nop
test
and
icebp
sbb
sbb
dec
mov
lock
xor
cmc
xorps
mov
ret
test
add
push
cld
sbb
cmps
mov
xor
add
je
or
(bad)
cmps
cmp
leave
int
ds
loope
dec
mov
cmc
inc
xor
pop
inc
xor
jb
xor
dec
mov
pushf
enter
das
mov
int3
dec
idiv
lea
xor
jne
mov
xor
icebp
cld
mov
mov
mov
cmps
dec
dec
into
les
ja
loop
fisttp
push
je
sbb
rol
or
dec
mov
mov
int
test
fild
scas
xor
je
je
jb
xor
(bad)
lods
stos
hlt
or
mov
icebp
cld
pop
(bad)
mov
xor
pop
push
dec
cmc
(bad)
fnsave
call
mov
(bad)
movs
push
jl
pushf
inc
lods
sub
imul
aaa
icebp
sbb
sbb
scas
imul
lods
call
enter
dec
(bad)
jge
or
stos
loop
mov
imul
int
cmp
sti
(bad)
xor
int
push
loopne
mov
clc
(bad)
push
mov
push
dec
int
cmp
mov
lods
sti
(bad)
xor
int
cmp
mov
mov
push
dec
mov
mov
mov
fstp
push
dec
int
push
fstp
push
dec
int
push
les
mov
add
push
mov
push
fsub
lahf
sti
leave
push
mov
mov
les
mov
out
inc
loop
dec
int
push
jle
mov
push
dec
int
jb
mov
xor
int
push
les
mov
push
divps
push
dec
int
mov
pop
mov
push
loopne
mov
repnz
arpl
popf
pop
cmps
mov
(bad)
mov
push
dec
int
(bad)
fiadd
gs
dec
int
jbe
hlt
mov
(bad)
push
mov
push
dec
std
inc
loop
pop
xor
int
push
cmp
sti
dec
int
push
dec
int
push
popf
pop
xor
int
push
dec
int
(bad)
fstp
push
dec
int
push
leave
push
mov
hlt
in
outs
cmps
pop
leave
push
mov
mov
leave
push
mov
add
xor
mov
push
mov
es
test
push
rol
jae
xor
retf
push
sbb
mov
cmp
fistp
sbb
adc
jo
ja
mov
sub
inc
cmp
mov
inc
push
cmc
call
lea
mov
icebp
cld
rol
lock
xor
adc
mov
and
cmp
add
mov
pop
cmp
and
ja
in
xor
icebp
stc
mov
mov
enterw
fnsave
cmc
call
out
xor
icebp
(bad)
bnd
pop
data16
(bad)
fnsave
push
mov
pop
xor
add
mov
retf
mov
cld
push
mov
jb
xor
in
ss
mov
xor
sbb
jmp
mov
cld
mov
lock
int
mov
mov
inc
mov
xchg
call
hlt
cmp
int3
xor
mov
lea
pushf
push
std
mov
jno
xor
mov
aaa
retf
mov
std
cmp
mov
jno
fdiv
jp
lods
and
icebp
pop
and
icebp
scas
aas
ja
inc
(bad)
(bad)
mov
add
ins
dec
outs
leave
cmp
hlt
sbb
adc
out
xor
aam
retf
mov
push
enter
xor
dec
mov
and
lods
cmps
test
mov
icebp
mov
das
cmc
retf
test
pop
gs
(bad)
arpl
mov
test
(bad)
(bad)
icebp
pop
jmp
stc
jp
cdq
stc
(bad)
shr
test
outs
cdq
stc
jp
cdq
stc
jp
cmp
jmp
outs
cdq
popf
sbb
push
cld
dec
sub
cdq
stc
jp
cdq
stc
jp
dec
loope
outs
cdq
stc
jp
cdq
jmp
add
dec
push
outs
cdq
stc
jp
cdq
stc
fsub
xor
mov
outs
cdq
stc
jp
cdq
loope
outs
cdq
stc
jp
cdq
pop
xor
shl
outs
cdq
stc
jp
cdq
stc
jp
cdq
stc
jp
int3
outs
scas
(bad)
lock
aaa
cmp
sub
mov
or
int3
orps
mov
adc
jmp
mov
cmc
xchg
dec
mov
xor
mov
or
dec
add
test
dec
ins
jne
ja
xor
lahf
add
cmps
in
aam
inc
and
jno
(bad)
aam
in
aam
in
xor
ja
inc
cmps
in
aam
in
(bad)
loopne
icebp
aam
in
aam
js
je
inc
and
xor
icebp
inc
cmps
in
aam
in
mov
div
inc
ss
je
js
aam
mov
jbe
cmp
pop
les
enter
jbe
mov
in
add
icebp
aam
in
aam
in
aam
pushf
inc
test
icebp
inc
or
inc
leave
or
push
jbe
icebp
inc
xor
js
inc
sub
icebp
inc
out
icebp
inc
cmp
dec
rcr
mov
jns
xor
retf
xor
gs
sbb
xor
out
call
mov
xchg
call
iret
pop
(bad)
neg
mov
or
clc
enter
movs
js
mov
mov
pushf
out
div
mov
das
movs
push
in
cmps
jo
call
stc
das
sbb
xor
fsub
push
ror
xchg
inc
loope
and
mov
xor
jle
popa
inc
cmc
mov
xor
xor
iret
fnstenv
pop
leave
leave
fiadd
pop
sahf
jns
ja
cmp
out
xchg
inc
movs
inc
xor
mov
call
push
push
pop
inc
sbb
push
(bad)
fild
shl
loop
sahf
jns
inc
sti
jbe
arpl
ret
loope
sahf
jns
arpl
enter
test
iret
mov
xor
cmps
cdq
jbe
js
sbb
pop
inc
mov
jno
leave
leave
pop
pop
test
(bad)
mov
popa
inc
xor
ficom
mov
arpl
imul
add
stc
nop
cmp
outs
xor
and
sub
popa
xor
popa
leave
jne
popa
inc
xor
fbld
ss
inc
dec
pop
out
pop
outs
test
pop
pop
jb
jns
and
add
popaw
inc
scas
mov
pop
(bad)
mov
popa
inc
xor
jle
mov
fadd
outs
and
xor
mov
pop
jae
and
xor
jmp
retf
shr
leave
xor
out
leave
xor
or
xor
out
leave
xor
out
sbb
cmp
retf
shr
leave
xor
out
leave
xor
out
sbb
cmp
retf
shr
leave
xor
out
sbb
cmp
retf
shr
leave
xor
out
leave
xor
or
xor
out
leave
xor
out
leave
xor
or
xor
out
leave
xor
cs
cmp
sub
mul
leave
unpckhps
retf
repnz
sbb
repz
cld
(bad)
in
test
aad
sub
mov
leave
xor
out
leave
xor
out
dec
mul
add
xor
out
leave
xor
out
leave
xor
sub
fdiv
out
leave
xor
xor
cmp
xor
bswap
std
into
leave
xor
out
leave
xor
out
leave
xor
(bad)
leave
xor
leave
xor
and
aam
jl
imul
or
jge
cmp
dec
xor
shr
leave
xor
out
leave
xor
out
leave
mov
sbb
leave
xor
out
leave
xor
out
leave
mov
lds
pop
mov
push
adc
jbe
mov
xor
xor
sbb
leave
xor
out
leave
mov
sbb
leave
xor
outs
lea
and
inc
(bad)
retf
icebp
mov
enter
push
jo
aam
and
jmp
leave
leave
xor
out
leave
xor
out
leave
mov
or
leave
xor
out
leave
xor
sub
fdiv
mov
push
aam
and
hlt
pop
out
cmc
jnp
lods
dec
hlt
jo
scas
cmp
shr
add
or
xor
out
leave
xor
out
xadd
out
leave
xor
out
loope
adc
in
ja
or
fdiv
sub
fld
in
ja
sub
fdiv
dec
mov
(bad)
pop
and
shr
leave
xor
out
leave
xor
ror
imul
cmp
xor
out
leave
xor
xor
cmc
sub
scas
xchg
jmp
out
leave
xor
out
leave
xor
out
leave
push
adc
leave
xor
out
leave
xor
out
leave
fld
fwait
or
retf
ss
aad
add
sbb
sub
sti
xor
repnz
(bad)
mov
or
lock
in
xor
out
leave
xor
out
leave
xor
mov
cmc
sub
outs
xchg
jmp
or
adc
adc
leave
xor
out
push
adc
outs
mov
mov
lds
leave
xor
out
leave
xor
xor
xor
aaa
retf
xor
shr
push
sbb
shr
leave
xor
out
leave
xor
out
leave
mov
leave
scas
shl
leave
xor
out
or
inc
xor
in
jno
daa
in
xchg
cmp
outs
mov
ins
cdq
cmc
mov
(bad)
sub
mov
sub
sub
xchg
sub
xor
mov
mov
mul
mov
push
mov
mov
xlat
xchg
mov
outs
movs
add
test
jo
jns
ficomp
mov
push
ss
and
sub
ja
into
icebp
mov
ds
sbb
and
cmps
jmp
ja
int3
movs
jle
pop
adc
mov
es
(bad)
cdq
sahf
cmp
ja
test
cmp
sbb
mov
test
xchg
xor
inc
xor
mov
stos
loopne
in
iret
sbb
mov
fstp
cdq
sahf
jns
jle
push
xor
inc
js
or
xor
cs
push
dec
inc
inc
sbb
mov
mov
dec
fnstenv
or
xor
or
lock
dec
mul
push
fcompp
sahf
cmp
arpl
xor
xor
(bad)
loope
push
ja
mov
pop
and
scas
mov
movs
cmp
sub
mov
f2xm1
xor
dec
aaa
mov
popf
es
cmc
lods
cs
xor
push
xor
out
clc
gs
mov
push
mov
sub
retf
push
mov
data16
fs
scas
mov
enter
(bad)
imul
movs
jbe
es
repz
imul
jle
ja
outs
inc
and
dec
jo
push
js
push
(bad)
call
and
sbb
inc
pop
sbb
and
jb
and
jb
and
xchg
and
jb
and
jb
and
jb
in
pop
jecxz
sbb
and
jb
and
repnz
jge
push
inc
cmps
pop
xlat
aas
jb
and
jb
and
jb
and
not
cwde
pop
and
jb
and
jb
push
into
xchg
and
jb
and
sub
dec
dec
dec
out
mov
add
fisttp
xchg
aas
sub
out
push
fsubp
icebp
(bad)
fidivr
mov
shr
xchg
xchg
push
arpl
sbb
mov
aas
mov
add
call
jecxz
sbb
pop
(bad)
aas
jb
and
jb
in
jb
and
jb
and
jb
and
(bad)
in
jb
and
jb
and
jb
and
xor
and
jb
and
jb
and
jb
out
push
xlat
pop
lahf
push
inc
shr
mov
and
jb
and
jb
xor
jb
and
jb
idiv
mov
and
jb
and
jb
and
(bad)
fnstsw
xchg
jg
popf
inc
in
adc
or
and
jb
and
jb
in
jb
and
jb
addr16
push
in
sbb
and
jb
shl
(bad)
and
jb
and
jb
and
jb
out
aam
cld
ficom
pop
(bad)
aas
jb
and
jb
and
jb
and
mov
and
jb
and
mov
sbb
xlat
inc
cmps
xchg
ficom
and
sbb
push
pop
sbb
and
jb
and
(bad)
and
jb
and
jb
(bad)
not
and
jb
mov
out
push
movs
(bad)
not
and
jb
mov
out
push
movs
sbb
and
jb
idiv
call
stc
xchg
mov
adc
mov
xchg
mov
inc
xlat
mov
xchg
pop
std
cmp
(bad)
leave
inc
pop
(bad)
aas
out
ins
clc
xchg
xor
(bad)
sbb
jle
inc
xlat
mov
xchg
std
mov
cmp
push
das
rcl
lods
xor
jp
scas
push
or
neg
sahf
jns
pop
and
test
xchg
lea
and
loopne
jae
shl
jo
mov
pusha
xchg
aaa
rol
mov
div
mov
es
adc
xchg
mov
aas
adc
xchg
mov
(bad)
pop
mov
and
sar
cmp
mov
loope
xchg
jecxz
push
xor
popa
push
mov
jecxz
xlat
stos
adc
inc
sbb
push
stos
not
adc
ja
outs
sub
add
cmp
cmp
xor
xor
loopne
xchg
test
push
dec
xchg
test
iret
arpl
jg
mov
inc
jae
xor
in
loope
adc
popa
inc
xor
sbb
mov
cdq
and
jne
inc
(bad)
and
xor
loope
adc
pop
cli
outs
add
mov
add
out
loope
mov
sub
jno
sbb
clc
out
icebp
cmp
mov
lods
shr
popf
xor
retf
and
cwde
jnp
pop
popf
xor
retf
and
sbb
add
jno
mov
jnp
dec
popf
jb
pminub
mov
ds
shl
in
fnstenv
pusha
add
aaa
imul
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
shr
ret
xor
or
aaa
adc
and
jo
or
mov
or
xor
lahf
shr
imul
stos
popf
jae
(bad)
fnsave
(bad)
shl
cmp
(bad)
fnsave
mov
lahf
shr
imul
stos
popf
jae
(bad)
fnsave
(bad)
fnsave
lahf
icebp
xchg
(bad)
sbb
jae
(bad)
fnsave
mov
lahf
shr
imul
stos
popf
jae
(bad)
fnsave
(bad)
shl
jnp
jae
(bad)
fnsave
(bad)
fnsave
xor
lahf
shr
imul
stos
popf
jae
(bad)
fnsave
popf
icebp
xchg
(bad)
sbb
jae
(bad)
(bad)
sub
sub
cmps
cmp
inc
ins
imul
(bad)
fnsave
(bad)
shl
jnp
jae
(bad)
fnsave
xor
lahf
shr
imul
stos
popf
jae
(bad)
fnsave
xchg
icebp
xchg
(bad)
sbb
jae
(bad)
fisttp
shr
pop
fucomi
mov
xchg
xchg
or
or
xlat
or
inc
adc
cmp
leave
jnp
jae
(bad)
fnsave
jmp
xchg
(bad)
xchg
adc
call
dec
mov
xchg
sub
in
(bad)
jnp
aaa
lock
imul
xor
imul
(bad)
fnsave
dec
out
inc
mov
stos
fnsave
(bad)
fnsave
(bad)
fnsave
(bad)
xchg
shr
and
(bad)
(bad)
int3
fs
inc
fidivr
push
and
(bad)
fnsave
iret
call
sbb
stos
sbb
jae
(bad)
fnsave
pop
stos
scas
push
xchg
add
fnsave
(bad)
fnsave
jmp
sbb
xor
shr
and
(bad)
fnsave
mov
stc
jae
(bad)
fnsave
(bad)
fnsave
or
or
stc
(bad)
mov
stos
cmp
jo
xor
(bad)
fnsave
(bad)
fnsave
(bad)
pop
sbb
fnsave
(bad)
fnsave
(bad)
xlat
sbb
fnsave
(bad)
frstor
adc
jae
(bad)
fnsave
jno
(bad)
loope
cmp
pop
jmp
pop
fld
xchg
shr
int3
fs
inc
mov
imul
(bad)
fnsave
push
clc
mov
mov
fnsave
(bad)
fnsave
cdq
fist
and
mov
xchg
sub
in
(bad)
jnp
aaa
lock
sahf
shr
and
aam
inc
xchg
xor
imul
(bad)
fnsave
psraw
jo
fstp
(bad)
shr
mov
iret
bound
pop
pop
push
or
stc
inc
mov
stos
fnsave
(bad)
fnsave
psraw
fld
cdq
enter
or
lock
jno
sahf
shr
call
add
fnsave
(bad)
fnsave
mov
call
cmp
(bad)
fnsave
(bad)
fnsave
dec
enter
xor
shr
jecxz
fucomi
and
fucomi
and
fld
test
jnp
(bad)
into
bound
push
mov
stos
fnsave
(bad)
fnsave
(bad)
arpl
jl
xor
daa
xor
xlat
(bad)
jmp
ja
imul
shr
loopne
xor
mov
ret
imul
pop
popf
fcomp
pop
xchg
mov
pop
mov
pusha
hlt
loopne
mov
fstp
shr
add
cdq
sahf
stc
outs
gs
mov
aas
adc
mov
cmps
adc
(bad)
cli
out
or
xor
push
sbb
pop
xor
pop
in
fprem1
sbb
add
add
jecxz
adc
mov
mov
sub
mov
cdq
push
pop
fistp
sahf
iret
pop
pop
inc
add
clc
nop
or
push
push
mov
movs
jns
cmps
fisub
push
addr16
scas
mov
cmp
xor
pushf
pop
pop
loopne
xchg
test
dec
cmps
and
cmc
mov
mov
dec
xor
inc
inc
and
mov
jo
xor
xlat
sbb
lock
shl
inc
pop
es
inc
outs
test
push
daa
push
into
inc
xor
call
mov
arpl
xlat
or
cmps
stc
fsub
jp
fnstenv
cmc
mov
xor
push
xlat
enter
xor
mov
out
xor
loopne
nop
sub
(bad)
jb
arpl
imul
das
movs
and
lds
mov
and
or
sub
fild
or
dec
out
xchg
mov
aaa
cmp
cmp
das
cdq
lahf
sub
cdq
pop
sub
cdq
pop
sub
add
gs
or
cdq
pop
sub
cdq
pop
push
lods
jne
lods
pusha
iret
mov
out
jno
repnz
ds
scas
jno
fisubr
ins
jnp
scas
pop
icebp
fsubrp
pop
mov
iret
in
mov
mov
mov
iret
pop
sahf
mov
dec
inc
(bad)
in
addr16
inc
aam
scas
and
mov
dec
out
jmp
mov
mov
jmp
dec
mov
stos
cli
push
(bad)
pop
js
push
inc
cmp
jnp
rcl
test
(bad)
push
cmp
ds
add
test
pop
inc
xchg
(bad)
pop
jnp
push
jge
jbe
(bad)
push
mov
xchg
shr
les
pop
mov
push
push
(bad)
sub
xchg
sbb
(bad)
aas
dec
popf
add
nop
ror
add
fnstcw
les
dec
sti
add
sbb
movs
jne
cmp
jmp
hlt
xchg
add
adc
dec
fld
add
(bad)
mov
bound
fld
out
jmp
add
pop
(bad)
sbb
mov
add
and
add
fist
jmp
ret
cli
mov
imul
mov
jle
call
aas
test
sahf
push
pop
push
add
pop
jmp
mov
or
and
mov
call
shr
dec
scas
cmc
or
mov
ins
in
sar
js
imul
idiv
sub
es
mov
aaa
pushf
or
jbe
sbb
js
in
sar
in
or
in
sar
in
sar
in
sar
(bad)
dec
dec
in
sar
in
daa
ss
mov
sar
ins
in
push
push
pop
shl
ins
in
sar
in
sar
in
sar
or
cmp
js
in
xchg
dec
xor
idiv
in
sar
in
xchg
inc
cwde
adc
cwde
mov
mov
xchg
cdq
leave
sar
ins
in
sar
std
sar
in
sar
in
sar
in
sahf
dec
inc
sbb
js
in
sar
in
shl
daa
sbb
in
sar
ins
push
pop
mov
pushf
and
dec
in
sar
ins
in
shr
fdivr
int
shl
popf
dec
in
sar
dec
jle
int3
mov
ss
dec
in
sar
mov
int3
enter
dec
dec
jp
or
mov
sbb
ror
cwde
cmp
mov
mov
ja
pop
pusha
sbb
jmp
rcr
pop
es
imul
inc
and
into
inc
out
(bad)
imul
inc
and
into
inc
out
jmp
ds
inc
and
into
inc
clc
xchg
dec
in
push
cmc
cmp
mov
arpl
fistp
add
adc
xor
sub
push
into
sti
pop
push
cmps
pop
jle
inc
cmp
add
int
add
aad
adc
and
xor
cmp
mov
inc
(bad)
out
adc
ins
frstor
xor
sbb
loopne
rcl
pop
cmp
dec
in
cmc
cmp
pusha
pop
cli
cmp
mov
add
add
outs
in
jmp
jbe
cmp
mov
mov
stos
int
mov
add
fild
sub
ins
jge
sti
sahf
adc
dec
repnz
mov
aas
dec
popf
add
outs
mov
xchg
fldenv
and
les
ror
aad
retf
jecxz
ja
fisttp
jmp
add
dec
fild
pop
jle
lds
adc
pop
mov
out
dec
sar
add
mov
add
(bad)
jmp
or
pop
jnp
les
aad
aam
leave
pop
push
mov
dec
aam
cli
fdivr
xor
pop
jnp
add
(bad)
jae
sbb
add
pop
hlt
jb
lea
sbb
dec
mov
fcom
(bad)
jmp
pop
les
cdq
aam
adc
mov
iret
sahf
inc
cmp
cmps
mov
ret
xchg
push
xchg
push
xchg
setp
out
lods
xchg
push
xchg
push
xchg
push
loop
inc
pop
arpl
mov
ret
xchg
push
xchg
push
xchg
setl
out
lods
xchg
push
xchg
stos
mov
xor
lods
xchg
push
xchg
push
add
mov
jae
call
jecxz
(bad)
jb
push
xchg
push
xchg
push
xchg
mov
arpl
mov
out
dec
arpl
mov
out
or
jmp
inc
jae
dec
sub
or
in
add
jae
in
inc
call
out
inc
jae
mov
out
es
leave
jbe
icebp
inc
arpl
mov
les
sub
test
pop
les
bound
push
xchg
xor
sbb
dec
xor
mov
dec
arpl
dec
imul
nop
add
mov
out
js
dec
sub
mov
(bad)
out
dec
mov
in
add
jae
in
inc
call
jmp
into
adc
mov
hlt
mov
xchg
push
inc
sbb
cmc
bound
push
xchg
push
xchg
push
or
data16
xchg
push
xchg
push
out
adc
ret
push
scas
dec
arpl
pop
cmps
jle
pop
mov
add
pop
ds
xchg
and
jae
add
mov
add
xchg
out
xchg
and
jae
fimul
lods
xchg
push
xchg
hlt
jnp
out
lods
xchg
push
xchg
push
xchg
stos
xor
push
xchg
hlt
xlat
(bad)
out
lods
xchg
push
xchg
stos
xor
mov
add
xchg
je
arpl
mov
cmps
push
pop
cdq
movs
test
push
xchg
push
xchg
push
inc
sbb
sub
xchg
push
cdq
adc
dec
mov
add
xchg
push
inc
sbb
popa
arpl
push
xchg
push
xchg
hlt
int3
(bad)
out
lods
xchg
push
inc
sbb
arpl
push
xchg
push
xchg
push
xchg
je
arpl
mov
cmps
push
inc
cdq
cmp
mov
add
inc
sbb
pop
arpl
push
xchg
push
pop
xor
dec
mov
add
xchg
push
xchg
sub
adc
mov
push
xchg
stos
xor
add
lods
xchg
push
pop
sub
xchg
and
cmp
push
cmps
pop
jecxz
movs
pop
mov
add
xchg
stos
out
or
pop
and
mov
jb
push
xchg
push
xchg
xchg
mov
cmp
jb
push
xchg
push
xchg
dec
jno
sahf
mov
xchg
mov
stos
ret
lods
sahf
or
out
inc
jae
ret
lods
sahf
dec
cdq
lds
pushf
into
lods
inc
jae
mov
jg
ror
hlt
call
add
and
add
and
test
sub
test
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
push
add
sub
add
sub
add
sub
test
cmp
out
stos
imul
scas
sub
jecxz
jmp
add
out
inc
inc
push
xchg
pusha
push
inc
mov
pop
push
and
fst
(bad)
sub
loope
push
sti
pop
(bad)
repz
xor
(bad)
(bad)
and
lods
inc
push
scas
push
and
pop
cmp
or
push
sahf
retf
pop
jle
add
(bad)
inc
push
fldz
(bad)
sub
sub
jmp
cmc
aas
shl
push
enter
les
aad
cld
push
mov
cmp
push
jecxz
jbe
adc
(bad)
aam
xor
lods
test
(bad)
jmp
sbb
pop
pop
nop
lock
xchg
adc
inc
add
ret
(bad)
aas
shr
sub
nop
push
in
fld
adc
shl
pop
leave
ds
mov
mov
and
cmp
cli
aas
imul
xchg
push
dec
in
push
push
lds
test
int
(bad)
and
pop
cmp
mov
fs
stos
int
jae
pop
jle
dec
cdq
add
add
add
inc
(bad)
loopne
jnp
retf
and
xor
push
mov
push
movlps
adc
adc
adc
adc
adc
pop
xchg
sbb
dec
pop
dec
push
sbb
push
push
iret
test
inc
sbb
xchg
mov
mov
or
xchg
mov
ret
dec
push
mov
add
xlat
mov
iret
add
push
xchg
dec
inc
or
ficom
pop
adc
adc
push
lahf
ror
(bad)
adc
or
neg
pop
shl
xchg
lahf
sbb
jmp
in
imul
imul
imul
div
mov
shr
ficomp
shl
mov
shr
fistp
push
imul
fiadd
fld
fisttp
pop
pop
rcr
push
sbb
jbe
lock
sbb
ins
ror
fistp
shl
push
pop
sbb
ins
ror
fistp
rol
imul
imul
imul
jo
shr
imul
imul
imul
imul
test
sahf
mov
push
adc
push
add
leave
ss
in
imul
imul
imul
mov
in
ss
in
imul
imul
div
add
ss
in
imul
imul
imul
cmp
ror
shr
ss
in
imul
imul
imul
imul
in
dec
dec
shl
push
aam
out
add
iret
imul
ss
in
imul
push
sbb
jmp
in
imul
imul
idiv
loop
out
out
stos
loop
imul
imul
imul
imul
jbe
les
jno
adc
add
sub
dec
popf
add
leave
adc
imul
imul
imul
imul
mov
rcl
adc
imul
imul
div
imul
imul
imul
imul
imul
neg
mov
xchg
dec
jae
in
lock
fcomip
mov
ret
retf
push
push
jecxz
mov
cs
push
inc
push
dec
std
add
add
add
mov
add
sub
add
or
fimul
xor
push
or
dec
cmps
add
retf
repz
(bad)
jmp
push
adc
fadd
pop
ret
dec
movs
sub
fucom
and
cdq
add
js
adc
sar
sub
gs
push
loope
fs
cmps
fadd
fsubp
inc
ins
mov
in
and
test
stc
(bad)
sub
add
mov
loope
mov
mov
(bad)
and
or
inc
dec
out
stos
int
sub
pushf
sub
aad
sti
inc
or
xchg
jmp
xchg
inc
jnp
fadd
cmc
jg
shr
sub
cdq
add
adc
xor
inc
sahf
adc
(bad)
nop
int
aas
rcr
stos
loopne
movs
cmp
sub
and
jmp
add
inc
jmp
aaa
hlt
(bad)
aam
jp
xor
out
cmp
dec
psrlw
push
daa
sub
daa
mov
push
mov
popf
inc
test
mov
pop
imul
push
jecxz
cmp
adc
pop
xlat
cdq
js
sbb
xchg
add
pop
ret
fst
lds
addr16
xchg
add
pop
dec
aas
test
cmp
add
sar
add
clc
or
test
push
imul
or
fild
or
jno
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
retf
sti
shl
cld
aad
cmp
pop
sub
mov
mov
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
mov
jns
lock
lock
ins
lock
ins
jo
mov
popa
mov
jns
lock
lock
ins
lock
ins
xor
stc
jno
mov
push
xor
jns
xor
jns
xor
jns
mov
cmp
xchg
lock
lock
ins
lock
ins
jo
mov
gs
cmp
stc
ins
mov
mov
push
mov
stc
jno
sahf
cmp
mov
push
mov
stc
push
lock
ins
jo
stc
ins
jo
cmp
xchg
cmp
jns
xor
stc
jno
mov
ins
lock
ins
jo
mov
fs
jns
mov
jns
jo
jns
mov
jns
lock
cmp
mov
jns
lock
lock
cmps
cmp
xchg
imul
ins
lock
push
xchg
jno
mov
ins
lock
push
test
ins
lock
ins
lock
ins
xor
stc
jno
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
mov
push
lock
mov
stc
push
mov
mov
imul
cmp
mov
push
xor
jns
mov
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
cmp
jo
jns
mov
stc
jno
xchg
cmp
xchg
ins
jo
stc
ins
jo
stc
ins
mov
mov
push
test
imul
stc
jno
sahf
cmp
jns
jo
cmp
test
ins
jo
cmp
sahf
cmp
push
sub
dec
xor
mov
or
dec
popa
fst
push
jp
xchg
rcr
jl
pop
fst
push
jp
jo
xchg
imul
push
jp
xchg
push
jp
xchg
push
jp
jo
xchg
imul
push
jp
xchg
push
jp
jo
xchg
imul
push
jp
xchg
push
jp
adc
mov
imul
and
stos
pop
inc
mov
adc
push
jp
xchg
push
jp
xchg
push
jp
xchg
nop
mov
sti
jno
add
jg
sahf
and
mov
push
jne
mul
jp
xchg
push
jp
xchg
push
jp
xchg
push
mov
or
sahf
arpl
mov
mov
pop
pop
jmp
jp
xchg
push
jp
xchg
push
jp
dec
jo
sbb
mov
jns
idiv
mov
movs
iret
pop
and
xchg
push
jp
xchg
push
jp
push
sahf
cwde
stc
jno
jp
xchg
push
jp
xchg
push
mov
jg
pop
popf
xchg
push
jp
xchg
push
jp
xchg
push
mov
cmp
stos
sbb
popa
xor
pusha
jo
popf
xchg
push
jp
xchg
push
jp
test
pop
mov
mov
jp
xchg
push
jp
push
stos
push
stc
jno
test
push
jne
hlt
pusha
jo
popf
xchg
push
jp
xchg
push
jp
pop
cmp
sbb
xchg
push
mov
test
xchg
push
jp
xchg
push
jp
(bad)
push
jp
xchg
push
jp
xchg
push
cli
xlat
jg
sahf
mov
xchg
push
mov
mul
adc
sbb
xchg
push
jp
fistp
jp
xchg
push
jp
aad
mov
jg
pop
popf
xchg
push
jp
push
stos
sahf
clc
jno
test
push
jne
hlt
pusha
jo
popf
xchg
push
jp
xchg
push
mov
jg
pop
pop
xchg
push
jp
xchg
push
mov
cmp
loope
sar
jp
xchg
push
mov
jg
pop
pop
xchg
push
jp
xchg
push
mov
cmp
loope
sar
jp
xchg
push
jp
xchg
push
jp
pop
xor
sbb
xchg
push
jp
push
stos
sahf
clc
jno
test
push
jne
hlt
pusha
jo
popf
xchg
push
jp
xchg
push
jp
xchg
push
ss
mov
jp
xchg
push
jp
xchg
push
mov
cmp
loope
sar
jp
xchg
push
jp
xchg
push
ss
mov
jp
xchg
push
jp
xchg
push
mov
cmp
loope
sar
jp
xchg
push
fnstcw
pop
sbb
xchg
rcr
jg
sahf
cmp
pop
sbb
xchg
push
jp
xchg
push
jp
lock
nop
imul
jp
xchg
push
jp
xchg
push
cli
(bad)
xchg
nop
imul
pop
push
cld
nop
nop
imul
loope
outs
mov
xor
xor
pusha
jo
popf
xchg
push
jp
xchg
push
jp
add
mov
cmp
jp
xchg
push
jp
xchg
push
jp
xchg
push
out
clc
push
mov
sahf
cmp
push
jp
adc
mov
and
mov
popa
mov
sbb
pop
push
cld
scas
nop
imul
iret
pop
adc
mov
jp
xchg
push
cmp
xor
pop
pop
jg
sahf
sub
outs
mov
loope
xor
(bad)
stc
xchg
push
jp
xchg
push
jp
xchg
push
jp
sub
std
mov
in
pop
push
cld
scas
nop
imul
cmc
adc
push
jp
xchg
push
jp
cld
scas
nop
imul
push
jp
xchg
push
jp
cld
scas
nop
imul
push
jp
xchg
push
jp
cld
lods
nop
imul
push
jp
xchg
push
jp
cld
lods
nop
imul
push
jp
xchg
push
jp
xchg
push
mov
cmp
loope
sar
jp
xchg
push
jp
xchg
push
fnstsw
pop
sbb
adc
mov
jp
xchg
push
jp
xchg
push
jp
jle
fstp
test
mov
ja
mov
sbb
nop
imul
jmp
and
jne
mul
jp
xchg
push
jp
xchg
push
jp
xchg
push
dec
(bad)
fstp
pop
mov
stc
adc
pop
cmp
ret
sahf
cmp
mov
jp
xchg
push
jp
xchg
cld
lods
loope
out
mov
popa
mov
cmp
jp
xchg
push
jp
add
mov
cmp
jp
xchg
push
jp
xchg
aam
clc
push
mov
mov
xor
mov
nop
sub
mov
pop
xchg
jp
xchg
push
jp
xchg
push
cli
loope
and
sahf
jns
push
jp
xchg
push
jp
cld
xchg
nop
imul
lahf
dec
hlt
popa
jo
sbb
xchg
push
jp
int
dec
out
in
jo
ja
jmp
stos
jo
mov
jmp
jp
xchg
push
jp
aad
(bad)
stc
imul
sub
cmp
or
mov
jp
xchg
push
cli
loope
stos
jecxz
popa
jo
xor
jne
mul
jp
xchg
push
jp
xchg
push
jp
adc
jp
xchg
push
jp
sar
jb
sti
add
scas
fbstp
shl
sar
adc
mov
add
cld
xchg
nop
imul
rcl
pop
xchg
push
jp
xchg
push
cli
xlat
jno
sahf
cmp
push
jp
xchg
push
jp
dec
pop
loope
or
mov
push
jne
hlt
pusha
jo
popf
xchg
push
jp
xchg
push
jp
xchg
aam
loope
mov
cmp
xchg
push
jp
xchg
push
jp
xchg
push
jp
sar
(bad)
stc
jmp
nop
sub
push
sub
jo
mov
xchg
push
jp
xchg
push
jp
xchg
aam
fld
cmp
xchg
push
jp
xchg
push
jp
sar
das
jns
rol
repz
mov
enter
repz
mov
popa
jo
cmp
ds
stc
xchg
push
jp
xchg
push
jp
xchg
aam
loope
sbb
xchg
push
jp
xchg
push
jp
jle
cmp
dec
popa
(bad)
push
cmp
loope
aam
(bad)
stc
xchg
push
jp
xchg
push
jp
xchg
push
loope
push
mov
cmp
pusha
jo
popf
xchg
push
jp
xchg
push
loope
test
(bad)
stc
xchg
push
jp
xchg
push
jp
xchg
xchg
test
jg
sahf
ins
push
jne
hlt
pusha
jo
popf
xchg
push
jp
xchg
xchg
test
jg
sahf
arpl
mov
test
cmp
(bad)
stc
xchg
push
jp
xchg
push
jp
adc
jp
xchg
push
jp
xchg
push
jp
xchg
push
ror
shl
fst
push
jp
jle
fidivr
in
push
aaa
jo
nop
imul
or
jmp
jp
xchg
push
jp
xchg
push
cli
loope
sbb
mul
or
mov
loope
cmp
(bad)
stc
xchg
push
jp
xchg
push
jp
xchg
push
jp
pop
xor
sbb
xchg
sbb
popa
jo
sbb
xchg
push
jp
xchg
push
out
clc
jmp
stc
xchg
push
jp
xchg
xchg
and
in
mov
jp
xchg
push
jp
xchg
push
jp
adc
jp
xchg
push
jp
fbstp
jp
xchg
push
jp
pop
dec
cld
xor
mov
jp
xchg
push
jp
xchg
push
cld
div
mov
jp
xchg
push
jle
xor
jp
xchg
push
jp
xchg
push
jp
adc
pop
lds
pop
aaa
popa
mov
and
push
mov
jg
push
arpl
mov
jp
xchg
push
jp
push
stos
jnp
popa
jo
xor
mov
sahf
cmp
push
jp
xchg
push
mov
sub
add
add
jl
nop
imul
not
push
xchg
push
jp
xchg
push
mov
in
cwde
loopne
popa
jo
sbb
xchg
push
mov
jl
pop
fst
rcr
jl
pop
fst
rcr
jno
pop
sbb
xchg
rcr
xor
jp
xchg
push
cli
fidiv
nop
imul
mov
in
push
and
mov
jp
xchg
push
jp
adc
mov
cmp
pop
push
jl
nop
imul
push
jp
xchg
push
jp
xchg
push
mov
mul
jp
xchg
push
jp
xchg
push
cld
test
mov
xchg
push
jp
xchg
push
jp
pop
mov
jns
push
jp
xchg
push
jp
pop
dec
cld
ss
mov
jp
xchg
push
jp
xchg
add
loopne
mov
aas
mul
jp
xchg
push
jp
xchg
aam
lock
pop
sbb
xchg
mov
ror
mov
jp
xchg
push
jp
xchg
push
jp
pop
dec
xchg
jmp
xchg
push
jp
xchg
push
jp
adc
jo
sbb
xchg
push
jp
pop
mov
jmp
xchg
push
jp
xchg
rcr
jg
pop
popf
xchg
push
jp
xchg
push
jp
jo
nop
imul
push
jp
xchg
push
jp
xchg
rcr
jno
pop
sbb
xchg
push
jp
xchg
push
cli
fidiv
nop
imul
mov
in
push
and
mov
jp
xchg
rcr
jg
fidivr
xchg
push
jp
xchg
push
jp
xchg
push
mov
cmp
sub
cmp
loope
movsx
mov
xchg
push
jp
xchg
push
jp
xchg
push
out
clc
in
mov
popa
(bad)
xchg
push
jp
xchg
push
jp
imul
sub
add
popa
mov
pop
jno
pop
(bad)
jl
nop
imul
not
push
xchg
push
jp
xchg
push
jp
adc
mov
jp
xchg
push
jp
xchg
adc
arpl
loopne
popa
xor
stos
pop
(bad)
mov
adc
push
jp
xchg
push
cli
loope
sbb
xchg
push
jp
jle
ret
mov
add
pop
jl
pop
push
outs
mov
cmp
mov
xchg
imul
mov
popa
inc
pop
cmp
push
and
adc
cmp
xor
push
mov
sub
pop
(bad)
sub
aas
pop
mov
test
add
rol
test
data16
adc
sub
and
sub
retf
lahf
sbb
movs
ret
std
or
sub
aad
ror
cs
push
dec
inc
icebp
sub
jle
sub
aad
push
and
jmp
test
loop
sub
sub
test
icebp
(bad)
sub
dec
dec
and
jmp
mov
sub
adc
arpl
ds
fld
rcr
pop
sahf
adc
jmp
add
aas
push
fist
adc
and
add
pop
mov
add
dec
in
imul
sti
pop
repz
sbb
nop
cmp
inc
test
(bad)
fist
add
add
pusha
movs
les
arpl
inc
fld
cmc
aas
test
sub
aam
ds
dec
cmp
aad
jmp
cmp
sti
add
pop
jmp
push
jmp
arpl
pop
std
pop
jnp
call
sub
push
or
ds
add
push
inc
mov
push
push
pop
push
inc
js
into
jp
mov
jp
in
loop
push
(bad)
rol
sub
xchg
mov
(bad)
xchg
add
addr16
sahf
sub
cvtdq2ps
mov
push
dec
and
mov
xchg
fs
(bad)
xor
push
dec
and
lock
and
mov
fistp
movs
pusha
mov
mov
sahf
imul
fwait
aaa
jl
pop
xor
cmps
ret
fnsave
in
add
addr16
sahf
imul
or
and
repnz
movs
lock
movs
jno
mov
pop
fbld
popa
inc
fwait
je
(bad)
xor
pop
lahf
jae
add
jo
mov
in
fidiv
mov
xchg
cmc
loope
fwait
xor
sahf
movs
pusha
(bad)
icebp
mov
(bad)
retf
and
mov
rol
mov
lahf
(bad)
jl
sahf
repnz
xor
repnz
jo
adc
jmp
in
(bad)
and
inc
pop
jno
add
lock
les
aaa
jl
pop
jne
xchg
repnz
inc
fbstp
cmps
(bad)
(bad)
repnz
add
jo
pop
retf
push
retf
test
loope
pop
xor
test
out
sahf
xor
ret
fnsave
gs
test
out
push
xor
lock
mov
mov
inc
pushf
jmp
loopne
pop
xor
test
xor
lock
test
out
pop
jo
pop
(bad)
addr16
loopne
fwait
mov
test
jo
ret
pop
jno
ret
fidiv
cmps
test
cld
sbb
inc
fwait
test
pusha
ret
cmps
pop
fbstp
movs
lds
jno
sbb
cmps
(bad)
icebp
mov
(bad)
fdiv
movs
test
aaa
jl
pop
mov
xchg
xor
in
push
jne
ret
data16
fnsave
test
inc
fidiv
jl
pop
cmc
and
pop
xor
jl
or
(bad)
mov
xchg
jb
(bad)
pushf
imul
ret
pop
fs
or
pop
pop
repnz
test
in
sahf
jmp
mov
sbb
loope
pushf
jb
xchg
in
(bad)
ja
add
jo
ret
(bad)
movs
jo
or
jo
pop
xor
mov
push
mov
es
pushf
repnz
fbstp
(bad)
fidiv
cmp
(bad)
fs
pop
mov
xchg
icebp
out
(bad)
inc
fwait
jmp
cld
test
daa
test
xor
inc
pop
jo
ret
xchg
(bad)
call
test
mov
pop
(bad)
push
xor
popa
(bad)
call
add
xor
es
fwait
imul
(bad)
(bad)
xor
fwait
jb
(bad)
(bad)
jb
ret
movs
ret
jo
retf
movs
lock
pop
xor
(bad)
fnsave
sbb
out
inc
xor
(bad)
pop
jne
mov
jne
(bad)
fnsave
cmps
xchg
mov
movs
les
pop
fcomip
movs
push
pop
xor
popf
jmp
cmps
rol
inc
pop
jb
pop
fbstp
inc
pop
xor
inc
pushf
xor
inc
fdiv
jl
lahf
mov
lds
icebp
out
(bad)
xor
inc
fidiv
test
jb
rol
(bad)
loopne
(bad)
movs
add
(bad)
add
sbb
pop
jb
test
jno
xchg
mov
ret
(bad)
repnz
mov
fistp
mov
lahf
fdiv
movs
test
aaa
jl
pop
je
sbb
pop
pop
repnz
test
xor
cmc
and
fwait
test
out
(bad)
in
adc
in
(bad)
jo
test
jb
rol
cmp
fbstp
les
mov
sbb
mov
(bad)
fdiv
sbb
sbb
cmps
(bad)
(bad)
jl
pop
jb
inc
fwait
jmp
movs
sbb
cmp
fbstp
inc
pushf
jmp
in
inc
jo
sbb
rol
fs
pop
repnz
lahf
fdivp
movs
test
mov
test
xor
icebp
cmps
pop
lahf
jb
pop
popf
test
movs
les
jne
lahf
pop
xor
xchg
mov
inc
(bad)
cld
inc
fdiv
lds
lock
(bad)
jl
sahf
jb
add
xor
xor
fwait
test
les
addr16
fidiv
pop
fbstp
mov
les
jno
les
(bad)
cdq
aaa
mov
push
fwait
sub
test
ja
ret
pop
repnz
dec
and
rol
out
pop
xor
cmps
inc
fbstp
jl
fnsave
mov
inc
fwait
imul
sahf
xor
xchg
and
test
in
pop
jne
(bad)
fidiv
cmp
push
mov
add
pop
mov
inc
lahf
test
out
(bad)
repnz
fwait
je
ret
xchg
test
cmc
pusha
pop
fwait
jne
xchg
xor
out
fwait
test
out
(bad)
mov
sbb
mov
(bad)
fdivp
loopne
pop
jne
les
daa
pop
fwait
je
sbb
cmp
push
xor
les
jb
test
xor
les
sbb
pop
pop
xor
popa
add
fdiv
cld
sbb
and
(bad)
(bad)
fs
pop
xor
xchg
xor
sbb
cld
sbb
in
sahf
je
add
jb
rol
in
pop
xor
cmps
xchg
cmc
mov
les
jno
inc
pop
jb
pop
fwait
jne
add
aaa
cmp
pop
repnz
jo
(bad)
fidiv
mov
add
jl
(bad)
pusha
sbb
mov
inc
pushf
imul
popf
xor
xchg
es
pop
xor
(bad)
fdiv
mov
mov
(bad)
popf
jmp
movs
ret
(bad)
xor
mov
in
inc
jne
add
xor
add
mov
mov
cld
pop
fwait
mov
(bad)
mov
ret
mov
inc
pop
mov
les
aaa
bound
mov
les
out
fidiv
mov
lahf
pop
xor
sbb
inc
(bad)
pop
dec
in
adc
jno
pop
repnz
(bad)
pushf
test
in
xchg
sbb
addr16
fwait
jmp
and
pushf
jmp
les
jno
ret
movs
(bad)
sahf
test
out
(bad)
repz
inc
pushf
je
pop
(bad)
movs
lds
inc
sbb
out
(bad)
jb
ret
fwait
jae
lahf
pop
repnz
(bad)
pop
xor
cmps
xchg
mov
inc
pushf
jmp
loopne
fdiv
movs
add
fidiv
cmps
add
jl
pop
xor
data16
je
add
jb
mov
inc
fwait
mov
push
popf
jmp
in
pushf
imul
mov
fs
mov
loope
fidiv
cmps
xchg
xor
in
lahf
jmp
jl
fbstp
add
jae
ret
cmps
inc
fidiv
out
fdiv
cmps
test
cmp
sbb
repnz
pop
sahf
repnz
sbb
jl
sbb
and
inc
(bad)
les
jae
pop
fnsave
lahf
fdiv
sbb
mov
les
jo
test
xor
test
cmc
out
pop
xor
cmps
sbb
out
(bad)
inc
(bad)
cmp
sbb
xor
sahf
jmp
loope
xchg
pop
fnsave
sbb
lds
jae
sbb
and
fcomip
mov
xchg
mov
mov
in
fistp
inc
pop
xor
sbb
and
inc
pushf
je
inc
pushf
jmp
gs
xchg
loopne
(bad)
movs
test
xor
mov
add
out
sahf
sub
add
jae
mov
jl
lahf
mul
(bad)
pushf
xor
push
dec
fs
retf
daa
jl
fidiv
movs
test
hlt
add
xchg
mov
es
push
xor
movs
xor
jmp
cmps
xchg
jo
inc
fwait
imul
mov
sub
les
jae
ret
(bad)
mov
pop
fidiv
inc
fdiv
cld
add
je
ret
inc
jno
test
in
adc
jl
cdq
aaa
mov
pop
fdiv
mov
sbb
inc
fwait
test
cmps
xchg
daa
mov
mov
mov
(bad)
fdiv
pusha
pop
pop
repnz
lahf
fdiv
mov
mov
lock
pop
mov
fistp
cmps
xchg
icebp
fs
pop
xor
pusha
lds
jne
inc
fwait
sub
pop
xor
push
fwait
test
cld
(bad)
fwait
xor
loopne
push
xor
cld
test
out
pop
jno
(bad)
fidiv
mov
pop
pop
xor
push
pushf
xor
pop
fidiv
ror
icebp
ror
xor
(bad)
fpatan
loopne
pop
jne
sbb
pop
pop
icebp
pop
retf
gs
(bad)
movs
xor
jmp
fs
fdiv
jl
pop
je
inc
fwait
sub
les
loope
fwait
je
add
test
jo
mov
xchg
in
inc
jno
inc
fidiv
cmps
push
pop
xor
(bad)
add
jl
fdiv
loop
fidiv
loopne
pushf
repnz
lock
sbb
in
pop
je
ret
pop
hlt
sbb
and
add
addr16
fdiv
pop
fcomi
mov
rol
and
fwait
jne
les
jno
inc
fwait
imul
pop
pop
mov
(bad)
call
lds
aaa
movs
test
aaa
cmp
pop
xor
pop
jne
xchg
in
fistp
mov
sbb
es
inc
lock
pop
mov
pop
fwait
je
ret
pop
jno
inc
fidiv
movs
test
pusha
pop
sahf
jb
inc
pop
xor
and
pop
mov
inc
sbb
mov
dec
and
popa
mov
inc
fwait
jne
inc
pushf
test
in
lahf
sub
pop
jo
mov
gs
fdiv
push
mov
inc
pop
jae
mov
out
fnstenv
cmps
les
jne
inc
fdiv
mov
pop
fbstp
mov
xchg
mov
loopne
pop
jae
ret
xchg
daa
add
mov
(bad)
jo
sbb
cmp
fwait
mov
pop
fwait
mov
pop
fidiv
mov
test
jb
les
movs
mov
mov
out
xchg
ror
jae
ret
pop
jno
xchg
je
sbb
data16
fdiv
mov
les
jb
xchg
test
icebp
cmps
fistp
jb
(bad)
mov
mov
out
popf
imul
jne
test
aaa
cld
pop
pop
xor
pop
jne
inc
pushf
sub
test
xor
pop
cmc
cmps
add
xor
(bad)
fs
out
pop
xor
test
movs
adc
and
pusha
inc
fwait
test
loop
fbstp
pop
xor
fidiv
daa
mov
les
pop
fbstp
ret
movs
pop
fbstp
mov
lahf
lahf
mov
inc
fwait
xor
xchg
or
or
fnsave
mov
add
sbb
lock
(bad)
inc
fwait
imul
rol
jno
inc
fcomi
in
inc
xor
loop
retf
gs
mov
out
xchg
out
(bad)
cld
inc
(bad)
lahf
or
mov
retf
and
popa
rol
loope
pop
xor
out
sbb
rol
(bad)
cld
inc
pop
mov
pop
pop
xor
gs
fwait
test
in
(bad)
xor
repnz
fbstp
daa
mov
sbb
cmps
lahf
sahf
jb
ret
fnsave
movs
inc
fidiv
cmps
ret
movs
sbb
lahf
lahf
jo
xchg
mov
ret
movs
sbb
lock
sahf
aaa
mov
ret
inc
je
add
mov
fistp
cmps
add
sbb
mov
(bad)
lock
xchg
in
pop
jno
inc
fnsave
inc
pushf
jmp
jl
fidiv
ret
cmps
inc
pop
repnz
inc
jae
add
jmp
daa
mov
loopne
pop
xor
pushf
sub
add
lahf
xor
sbb
movs
sbb
es
call
les
jne
xchg
xor
inc
fcomi
gs
(bad)
jl
push
jb
ret
xchg
pop
xor
movs
add
test
out
pop
xor
mov
fnsave
mov
add
fdiv
movs
test
xor
pushf
xor
inc
pop
xor
adc
fs
or
fistp
jne
test
mov
test
aaa
jl
pop
jo
sbb
popa
test
xor
ret
fidiv
test
adc
jo
inc
jo
inc
sbb
in
fwait
imul
inc
xor
loop
fbstp
pop
fnsave
mov
test
and
fdiv
jl
sahf
xor
(bad)
jo
add
je
inc
pushf
test
out
pop
jb
inc
fidiv
in
(bad)
out
sbb
out
xchg
loop
cdq
sub
inc
pushf
sub
test
repz
mov
jo
inc
mov
add
jno
les
cld
test
jmp
in
pop
lock
ret
sahf
jmp
out
pop
jno
(bad)
call
(bad)
(bad)
and
inc
jno
(bad)
(bad)
movs
pop
fcomip
mov
test
cmc
in
fwait
jmp
mov
sbb
mov
jb
sbb
mov
xchg
cmc
mov
test
es
(bad)
xor
fnstenv
mov
mov
(bad)
fdiv
movs
mov
in
fidiv
cmps
ret
movs
add
popf
jmp
in
xchg
inc
(bad)
gs
fwait
jmp
cmps
add
xor
xchg
xor
adc
jno
ret
fdiv
cmp
sbb
loope
sahf
imul
sahf
sub
fidiv
inc
fwait
jmp
in
inc
xor
in
xchg
out
push
xor
loope
fdiv
cld
xchg
jno
lahf
fdiv
mov
test
jb
pop
fwait
jne
add
mov
pop
fbstp
mov
out
sahf
sub
(bad)
pushf
repnz
inc
icebp
out
sbb
movs
push
pushf
test
and
pop
icebp
out
pop
repnz
add
pop
jae
pop
pop
repnz
xchg
xor
popa
sbb
and
inc
lahf
jb
ret
pop
xor
push
jo
(bad)
icebp
mov
ret
fidiv
pusha
test
xor
fwait
imul
sbb
test
cld
xchg
cmc
cmps
test
and
xchg
sbb
inc
fbstp
ret
(bad)
icebp
pusha
inc
pop
xor
xchg
xor
mov
jae
pop
fidiv
in
fdiv
(bad)
popf
je
pop
(bad)
cmps
fistp
cmps
xchg
xor
fwait
imul
rol
icebp
push
mov
(bad)
call
sbb
(bad)
sbb
and
(bad)
popf
sub
pushf
mov
xchg
xor
pusha
test
and
mov
mov
loopne
xchg
ret
fidiv
in
pop
jne
pop
(bad)
loope
fnsave
addr16
fnstenv
movs
test
jb
mov
inc
(bad)
loopne
fdiv
cmps
sbb
movs
les
xor
mov
add
xor
jb
lahf
or
mov
fidiv
cld
add
je
inc
fbstp
mov
fistp
sub
inc
fwait
test
in
sahf
imul
rol
mul
(bad)
cdq
mov
xchg
xor
test
xor
cmps
xchg
xor
fcomi
mov
add
popf
xor
test
mov
pop
fwait
cmc
cmps
add
aaa
jl
fdiv
loope
sbb
loopne
lahf
test
in
xchg
sbb
addr16
(bad)
cld
add
pop
pop
jne
sbb
hlt
mov
pop
(bad)
movs
inc
fdiv
cld
add
ja
ret
call
inc
(bad)
cld
add
jne
inc
pushf
imul
add
jl
fcomi
in
pop
jb
xchg
xor
pusha
add
jo
fistp
mov
fs
fbstp
lock
and
cmps
(bad)
cld
add
pop
mov
inc
fnstenv
out
push
jb
xchg
xor
jb
add
jl
fbstp
and
add
sbb
and
xchg
retf
xchg
repnz
(bad)
fidiv
cmp
push
mov
pop
pop
xor
add
je
test
xor
cld
test
mov
sbb
cmp
(bad)
and
fbstp
mov
loopne
pop
xor
inc
pushf
test
bound
sbb
pop
fnsave
gs
fdiv
lahf
pop
xor
lds
jmp
popa
test
aaa
cmp
(bad)
mov
add
repz
(bad)
xor
push
fwait
hlt
loopne
fidiv
cld
sbb
popa
test
jb
les
repz
test
mov
(bad)
xor
sbb
cld
inc
(bad)
jl
pop
lock
inc
(bad)
mov
test
cmc
loopne
pushf
jmp
out
xchg
inc
fcomi
movs
test
and
addr16
aaa
cld
sbb
mov
inc
fidiv
cmp
(bad)
add
mov
pop
(bad)
movs
sbb
cmp
call
test
xor
cdq
sub
fbstp
loope
xchg
sbb
sbb
inc
fwait
test
in
fwait
xor
xchg
les
lock
fwait
jmp
cmps
ret
movs
(bad)
fidiv
out
fwait
hlt
out
pop
mov
ret
loopne
(bad)
mov
lahf
pop
mov
xchg
aaa
mov
ret
movs
inc
fcomi
pusha
ret
mov
sbb
movs
sbb
out
cdq
test
lock
xor
pop
fwait
xor
test
xor
and
pop
jb
ret
fwait
jb
pop
pop
jne
(bad)
fdiv
pop
(bad)
mov
add
add
xor
xchg
xor
(bad)
fnsave
sbb
pop
pop
mov
inc
fbstp
cmps
les
xor
movs
test
xor
sbb
xchg
fs
lahf
jb
les
daa
pop
pop
repnz
xchg
xor
repz
xchg
pop
fnsave
pop
lahf
jb
inc
(bad)
cld
(bad)
fdiv
xchg
xor
fnsave
mov
test
cmp
pop
jno
sbb
mov
inc
pop
jno
ret
inc
je
les
movs
add
xor
movs
inc
pushf
test
out
fbstp
cld
xchg
es
sahf
imul
adc
xor
inc
pop
xor
inc
pop
mov
test
xor
inc
(bad)
sbb
pop
push
jne
(bad)
call
sbb
and
pop
push
jne
add
repz
hlt
mov
fistp
movs
xchg
cmp
(bad)
call
mov
sbb
and
(bad)
ret
sbb
and
xchg
inc
fidiv
mov
lahf
leave
addr16
xchg
out
sbb
cmc
cmps
add
xor
je
inc
pushf
test
in
pop
mov
test
xor
pop
(bad)
inc
pushf
sub
fdiv
jl
pop
xor
and
mov
inc
pop
xor
pop
jae
mov
in
pushf
test
out
popf
xor
ret
fdiv
ret
inc
jne
inc
pushf
hlt
loopne
sahf
jb
(bad)
sbb
mov
in
sahf
test
xchg
xor
inc
fdiv
cld
add
mov
test
jb
inc
pop
xor
xchg
movs
pop
fcomip
movs
test
xor
add
mov
sbb
mov
test
xor
push
fwait
sub
add
pop
cmc
out
fwait
je
ret
pop
mov
inc
pushf
jo
lahf
pop
repnz
test
xor
xor
xchg
(bad)
fidiv
popa
inc
fwait
mov
add
pop
jno
les
daa
inc
fidiv
pop
lahf
jb
add
and
xor
mov
mov
add
imul
pop
jno
inc
fbstp
pop
fidiv
mov
(bad)
jl
push
jb
sbb
mov
lahf
fbstp
xchg
jno
mov
repz
mov
inc
fwait
je
lahf
pop
jne
add
and
(bad)
mov
pop
lahf
xor
pop
xor
inc
fwait
xor
add
xor
push
xor
retw
call
(bad)
cld
xchg
jae
ret
(bad)
pop
fidiv
cmps
inc
(bad)
jl
or
and
je
pop
(bad)
out
fdivp
movs
xchg
xor
daa
push
pop
lock
add
repz
cmps
add
pop
pop
icebp
out
sahf
sub
inc
pop
jae
rol
mov
inc
fdiv
cmp
sbb
in
pop
jno
inc
fdiv
cmp
popf
je
test
cmp
sbb
repnz
(bad)
(bad)
repnz
add
xor
ror
mov
mov
movs
sbb
daa
inc
fwait
test
daa
push
fwait
imul
inc
sbb
mov
out
fdiv
push
fcomi
loopne
fidiv
daa
pop
fbstp
(bad)
fnsave
in
pop
mov
sbb
movs
pop
pop
mov
add
xor
out
xchg
pop
fnsave
pop
pop
xor
xchg
jb
inc
pop
xor
test
xor
pop
pushf
mov
lahf
pop
mov
les
out
pushf
xor
ret
(bad)
gs
(bad)
(bad)
xor
ret
inc
lock
fdiv
fidiv
cld
xchg
in
sahf
imul
ret
fidiv
in
pop
mov
lahf
pop
xor
and
rol
pop
pop
jo
lahf
pop
je
ret
inc
repz
xchg
icebp
cmps
lahf
mov
mov
mov
daa
add
fcomi
cmps
ret
fdiv
mov
mov
test
xor
out
fbstp
ret
xchg
daa
test
aaa
cmp
pop
repnz
inc
fwait
jmp
cmps
ret
movs
inc
fbstp
les
imul
aaa
and
jmp
and
les
repnz
dec
and
rcr
jne
ret
(bad)
jno
ret
fwait
jb
test
mov
xchg
repnz
les
and
fidiv
cmp
(bad)
popa
inc
fwait
xor
sbb
addr16
xor
sbb
ret
inc
je
les
movs
ret
movs
sbb
cmp
fbstp
and
sbb
movs
mov
retf
fistp
jne
pop
pop
xor
mov
pop
pop
xor
lds
mov
ret
movs
(bad)
fnsave
mov
cmps
inc
fcomi
in
pushf
test
out
sahf
test
in
(bad)
xor
add
in
(bad)
movs
inc
(bad)
popa
test
xor
(bad)
(bad)
fs
pushf
jo
lahf
pop
mov
test
je
mov
movs
ret
pop
mov
lahf
retf
cmps
mov
pop
mov
inc
pop
jno
pop
fwait
je
add
jne
rol
add
je
ret
(bad)
jb
xchg
xor
add
fs
inc
mov
add
inc
xor
pusha
pop
fnsave
and
mov
out
fwait
sub
add
jae
add
test
cld
(bad)
sbb
xor
pop
xor
inc
pushf
mov
lds
xor
mov
xor
(bad)
mov
xchg
and
fwait
jne
test
mov
mov
inc
fdiv
loopne
sbb
sahf
test
lock
loopne
pop
xor
and
lahf
je
mov
inc
pop
mov
pop
(bad)
jl
pop
icebp
pop
fcomip
movs
test
cld
xchg
pusha
xchg
xor
jne
sbb
jne
ret
fidiv
cmp
sahf
ja
ret
pop
jno
(bad)
fdiv
mov
add
xor
mov
les
gs
xchg
les
sub
add
loop
lahf
xor
(bad)
pop
repnz
xor
or
cmps
mov
in
pop
xor
pop
jb
pop
fbstp
mov
test
mov
mov
jae
(bad)
mov
test
xor
ret
fnsave
cmps
test
xor
pop
xor
mov
(bad)
sbb
xor
mov
sbb
movs
pop
fcomip
mov
(bad)
fnsave
test
jno
pop
fdiv
movs
xchg
xor
gs
(bad)
xor
retf
lahf
lahf
xor
inc
pop
repnz
sbb
mov
(bad)
icebp
mov
pop
push
jne
pop
fnsave
cld
sbb
ret
fidiv
movs
xchg
cmc
pusha
(bad)
mov
xchg
xor
lahf
fdiv
movs
test
lock
(bad)
fidiv
cld
sbb
in
pop
xor
(bad)
repnz
(bad)
jl
lahf
je
test
jno
test
mov
xchg
xor
inc
pushf
mov
les
cld
inc
pop
jne
xchg
xor
mov
rol
in
pop
fnstenv
push
dec
hlt
loopne
xchg
popf
jb
lahf
pop
je
ret
fidiv
adc
jo
or
mov
pop
xor
lds
daa
push
fwait
je
ret
(bad)
cmc
and
je
sbb
(bad)
lock
(bad)
jno
ret
fnsave
xor
lahf
imul
inc
fsub
mov
adc
fs
or
pop
fcomip
mov
(bad)
popf
sub
(bad)
pushf
repnz
dec
and
lock
gs
or
mov
pop
je
ret
(bad)
movs
xor
retf
ror
jl
fwait
jo
ret
sahf
imul
fbstp
cmp
fwait
mov
push
dec
and
cmps
add
xor
mov
push
or
cmps
ret
sbb
repnz
(bad)
fdiv
jl
pushf
jb
adc
mov
sbb
and
jno
pop
fwait
jne
xchg
jne
inc
pushf
jmp
movs
push
pop
xor
dec
and
icebp
lahf
mov
mov
mov
xor
pop
aaa
loop
sbb
mov
push
dec
and
loopne
(bad)
jno
adc
mov
test
jo
xchg
lock
retf
lock
out
pop
xor
fidiv
cld
sbb
loope
fnstenv
mov
daa
(bad)
(bad)
cmc
loope
(bad)
data16
je
ret
lock
icebp
loopne
cdq
imul
xchg
popa
inc
fbstp
cld
xchg
xor
rol
jo
mov
les
daa
push
(bad)
pop
lahf
repnz
push
(bad)
addr16
fnstenv
mov
(bad)
pop
mov
mov
xor
lahf
xor
pop
pop
repnz
add
(bad)
movs
xor
retf
mov
xor
push
dec
gs
movs
xor
pop
jno
(bad)
fdiv
cmp
mov
mov
mov
xor
popf
jb
(bad)
popf
xor
test
inc
(bad)
(bad)
mov
rcr
xor
les
jno
inc
fbstp
lahf
pop
je
ret
fidiv
adc
cmc
and
gs
dec
mov
push
mov
loope
pop
icebp
out
fisub
fs
pop
jne
xchg
pusha
mov
inc
(bad)
lahf
pop
icebp
movs
xchg
lock
(bad)
movs
inc
fnsave
pusha
add
xor
lahf
xor
test
repnz
pop
xor
lock
mov
mov
(bad)
gs
retf
and
pop
fwait
test
in
lahf
jo
pop
fdivp
mov
(bad)
xor
sbb
in
(bad)
xor
retf
in
pop
lahf
jb
inc
lahf
jb
(bad)
mov
pop
je
pop
fwait
xor
inc
pushf
jo
xchg
in
pop
mov
jl
pop
xor
icebp
lahf
or
mov
dec
movs
mov
xchg
out
pop
xor
inc
fidiv
jl
or
mov
or
mov
mov
cmps
test
mov
sbb
mov
retf
xchg
mov
and
xor
add
mov
sbb
mov
(bad)
inc
pop
xor
out
fnsave
test
in
ror
in
xchg
mov
and
fcomi
mov
pop
fidiv
cmps
pop
fdiv
rol
cmc
loope
pop
xor
cmp
retf
movs
lock
retf
movs
lock
or
mov
pop
icebp
movs
mov
xchg
mov
xchg
and
push
dec
movs
icebp
rol
jno
adc
lock
sbb
out
pop
mov
(bad)
pop
mov
mov
mov
mov
mov
mov
xchg
or
xor
pop
mov
xchg
loope
fidiv
fs
pushf
xor
(bad)
fidiv
test
in
(bad)
jno
test
xor
xchg
mov
pop
mov
jno
fdiv
movs
add
(bad)
call
xchg
in
inc
fwait
xor
cmc
mov
ror
daa
jno
retf
rol
repnz
lds
mov
sbb
out
push
repnz
inc
fdiv
ret
pop
in
(bad)
sbb
jno
fnsave
push
sbb
out
sahf
imul
sbb
jo
mov
mov
mov
cmp
(bad)
les
lds
jae
(bad)
(bad)
je
ret
sbb
out
dec
in
lahf
fdiv
mov
lahf
retf
mov
add
xor
mov
inc
pop
jno
adc
icebp
and
pop
jb
mov
out
fnstenv
cld
inc
lahf
jae
ret
(bad)
data16
leave
addr16
leave
addr16
mov
add
mov
loope
pop
je
add
xor
inc
(bad)
inc
pop
jae
lahf
fcomip
mov
test
mov
sbb
xchg
mov
test
cmc
popa
mov
in
fnsave
mov
ret
(bad)
movs
jo
retf
ror
daa
jl
pop
jno
adc
icebp
mov
inc
mov
movs
add
xor
pop
xor
ror
and
mov
sbb
cmps
fistp
jne
xchg
popa
ret
(bad)
movs
jo
retf
ror
addr16
fwait
cmc
cmps
add
mov
inc
lahf
imul
pop
xor
inc
pop
jae
adc
xor
add
mov
(bad)
icebp
cmps
ret
fnsave
(bad)
icebp
mov
xchg
and
cmps
lds
loopne
(bad)
popf
je
push
dec
and
and
mov
in
inc
jne
test
jne
pop
pop
mov
(bad)
pushf
lock
or
mov
leave
daa
jl
push
jb
add
xor
sbb
daa
(bad)
pop
mov
lahf
fdiv
mov
add
hlt
out
pushf
jb
pop
fwait
mov
pop
sbb
inc
(bad)
cmp
(bad)
in
retf
mov
pop
dec
xor
mov
movs
add
loop
(bad)
out
lahf
imul
les
xor
inc
pop
lock
(bad)
gs
dec
in
ror
xor
ret
cld
sbb
fs
jmp
cmps
les
lock
sbb
fistp
cmps
xchg
in
rol
and
jo
retf
movs
mov
dec
and
mov
(bad)
pushf
jmp
cmps
test
and
xchg
lahf
fbld
jno
xchg
add
and
inc
jo
test
es
pop
xor
mov
gs
inc
xor
data16
imul
inc
jne
inc
fdiv
cmp
cdq
jne
add
addr16
sahf
test
mov
sbb
daa
xchg
aaa
mov
ret
gs
fdiv
movs
test
cld
add
jae
test
xor
pop
pop
jb
(bad)
call
push
dec
and
rol
jno
ret
(bad)
es
fdiv
movs
inc
sbb
fs
popf
lock
les
daa
add
jmp
loopne
sahf
xor
xchg
and
and
mov
test
ja
ret
fnsave
jl
pop
mov
rcr
sbb
mov
inc
fwait
jmp
pusha
pop
pop
xor
loop
call
rol
and
fidiv
pop
lahf
jmp
sbb
movs
sbb
cmps
ret
out
pop
repz
add
sub
add
call
add
gs
mov
lock
and
pusha
test
imul
mov
mov
or
movs
test
popa
rol
mov
pop
fbstp
mov
test
movs
xor
pop
jb
test
je
inc
cdq
aaa
jl
pushf
jo
add
mov
movs
test
es
mov
push
pop
jb
mov
out
lahf
jb
pop
(bad)
cmps
pop
(bad)
pop
(bad)
mov
rcr
cmp
or
les
cld
pop
fwait
mov
add
sbb
out
fldenv
movs
add
jb
pop
push
jne
push
fwait
je
inc
sahf
imul
test
movs
xor
and
in
(bad)
es
fwait
sub
(bad)
sahf
jo
xchg
mov
pop
pop
jae
test
movs
mov
dec
and
jno
dec
and
rol
jb
adc
jo
ret
pop
mov
mov
icebp
xchg
mov
jo
pop
xor
xchg
jne
add
addr16
sahf
imul
ret
push
xor
jo
test
mov
sbb
es
fdiv
pushf
sub
(bad)
fwait
jne
test
and
fbstp
cmps
xchg
in
inc
jne
sbb
sbb
daa
inc
fdiv
cld
sbb
fs
fdiv
es
push
jne
(bad)
pop
jb
rol
icebp
ror
xor
fidiv
inc
jno
sbb
mov
add
popf
imul
push
or
in
(bad)
and
(bad)
mov
adc
and
inc
fidiv
loope
fwait
jmp
in
sbb
movs
lahf
or
mov
or
mov
leave
and
cmps
ret
movs
push
fwait
xor
inc
pushf
xor
inc
fdiv
lahf
fidiv
inc
fdiv
inc
mov
pop
fbstp
(bad)
jo
sbb
push
pop
mov
add
xor
add
pusha
(bad)
retf
and
cmps
xchg
jno
(bad)
(bad)
addr16
jmp
popa
test
mov
add
pop
je
ret
fidiv
(bad)
mov
(bad)
out
(bad)
repnz
test
sub
pushf
div
ror
addr16
xchg
cmps
sbb
xor
(bad)
gs
retf
and
adc
xor
fidiv
movs
test
lock
fnsave
cmp
dec
mov
push
or
cmps
add
fwait
imul
les
addr16
pop
mov
mov
loop
fbstp
pop
pop
mov
add
mov
mov
icebp
xchg
retf
xchg
mov
pusha
ret
(bad)
jb
ret
movs
or
movs
xchg
xor
pop
fwait
je
ret
fnsave
loopne
pop
cmc
movs
sbb
and
dec
in
adc
jno
(bad)
addr16
leave
addr16
mov
add
je
test
and
(bad)
in
push
dec
fs
or
movs
add
cmps
pop
sbb
fistp
(bad)
fwait
jne
ret
inc
jae
add
and
jo
ret
fwait
jb
lahf
lahf
jb
sbb
jmp
in
(bad)
test
xor
fidiv
fs
mov
pop
retf
xchg
retf
push
dec
and
in
pop
je
(bad)
fidiv
pop
push
jne
(bad)
call
(bad)
call
inc
fbstp
out
sahf
sub
(bad)
(bad)
jl
fidiv
mov
mov
add
test
out
sbb
xor
cmp
sbb
loope
sbb
jl
fcomi
loopne
fwait
jmp
mov
lahf
leave
fs
dec
and
out
fdiv
in
pushf
sub
sbb
lock
(bad)
inc
(bad)
test
repnz
pop
xor
retw
pop
xor
push
xor
test
xor
pop
fwait
sub
adc
mov
xchg
xor
cld
pop
fwait
mov
push
dec
and
daa
inc
fidiv
cld
add
jo
ret
movs
lahf
popf
repnz
sbb
daa
xchg
xor
popf
sub
popf
jb
add
lock
inc
jno
add
icebp
cmps
mov
out
fdiv
movs
add
mov
mov
movs
sbb
inc
fbstp
daa
les
cmps
xchg
mov
test
xor
fidiv
cld
(bad)
(bad)
test
and
out
fwait
xor
test
and
loopne
push
xor
cld
push
mov
mov
addr16
icebp
loopne
(bad)
xor
retf
and
pop
fcomi
mov
rol
mov
inc
fidiv
jl
pushf
xor
mov
mov
adc
ja
sbb
loop
inc
jne
sbb
mov
mov
loop
fisub
repnz
dec
and
rol
in
fbstp
mov
or
test
pusha
inc
fwait
imul
rol
jb
inc
fbstp
in
push
xor
loope
sbb
xor
fbstp
loope
pop
je
add
jb
pop
lahf
jae
add
xor
lahf
lock
inc
fcomi
loopne
xchg
les
and
inc
je
inc
fdiv
fistp
add
xor
(bad)
fnsave
and
jae
or
xor
jno
adc
xor
(bad)
sbb
out
pop
jno
xchg
xor
fistp
(bad)
cld
inc
fdiv
lahf
popf
je
pop
fnsave
popa
ret
inc
xor
out
(bad)
movs
mov
retf
adc
movs
mov
retf
test
cmps
test
mov
add
lahf
imul
fidiv
fistp
jne
test
data16
pop
xor
fistp
mov
les
es
mov
ret
pop
je
(bad)
sbb
(bad)
(bad)
jb
xchg
jb
(bad)
(bad)
xor
inc
(bad)
les
jb
les
ja
or
fs
sbb
pop
sbb
addr16
pop
jae
sbb
mov
inc
fsub
movs
sbb
and
xchg
sbb
in
inc
jne
test
jne
lds
xor
push
pop
jne
xchg
jb
ret
pop
xor
lahf
xor
test
repz
xchg
daa
test
jno
ret
call
ret
in
fbstp
pop
pop
xor
inc
fwait
jmp
out
popf
test
addr16
(bad)
xor
sbb
movs
sbb
out
(bad)
les
movs
ret
fwait
jae
sbb
les
mov
xchg
jno
mov
out
fdiv
pop
(bad)
mov
xchg
jno
les
cmps
(bad)
fidiv
add
movs
mov
in
pop
jne
adc
repz
pop
(bad)
test
mov
sbb
pusha
rol
mov
(bad)
fnsave
out
popf
jb
ret
(bad)
daa
jb
retf
push
retf
and
movs
ret
mov
pop
pop
repnz
jne
push
sbb
fs
pushf
mov
pop
(bad)
xchg
jae
test
xor
fidiv
and
fdiv
xchg
je
sbb
daa
mov
xchg
jne
pop
pop
jne
les
daa
rol
movs
lock
movs
jno
pop
xor
sbb
daa
inc
pushf
jmp
out
fidiv
cmp
pop
mov
xchg
loope
xchg
add
movs
xor
retf
lahf
mov
mov
mov
xor
(bad)
jb
inc
fdiv
pop
(bad)
movs
add
(bad)
rep
(bad)
jl
pop
xor
(bad)
fwait
gs
mov
xchg
leave
addr16
leave
repnz
out
fdiv
loopne
(bad)
mov
add
xor
xor
pop
pop
repnz
or
mov
pop
repnz
ret
mov
pop
jne
(bad)
fnsave
mov
adc
jb
pop
dec
hlt
mov
mov
jb
fistp
cmps
ret
(bad)
movs
xor
movs
jo
(bad)
movs
lock
pop
je
xlat
push
and
xchg
fs
(bad)
jb
ret
fidiv
cld
push
dec
and
and
lahf
xor
leave
movs
mov
retf
add
add
lahf
fdiv
loopne
or
ror
gs
fisub
test
ret
inc
and
adc
mov
push
fidiv
out
(bad)
jne
adc
cmc
and
push
and
sbb
movs
pop
pop
repnz
or
mov
push
and
xchg
mov
xor
fdiv
mov
lahf
jo
inc
fsub
sbb
mov
in
xlat
movs
jo
inc
jne
ret
fidiv
push
mov
pusha
add
mov
add
xor
(bad)
fidiv
test
cmc
loope
fwait
xor
xor
(bad)
(bad)
movs
lock
mov
and
fdiv
out
(bad)
mov
xchg
in
rol
cmp
adc
and
(bad)
jno
inc
dec
icebp
xor
retf
lahf
retf
jne
rcl
rol
add
jo
mov
adc
and
jl
sbb
cmps
add
fbld
ins
add
jo
fisub
and
(bad)
xor
test
and
pop
cmc
les
add
mul
(bad)
mov
out
or
adc
cmc
jmp
test
icebp
mov
adc
movs
xor
(bad)
pusha
mov
inc
cmp
inc
pop
jo
test
movs
lock
movs
jo
pop
je
ret
xchg
pop
fidiv
pop
xlat
icebp
movs
sbb
stos
lahf
retf
mov
add
and
in
ret
fldenv
ins
xlat
xchg
pop
sbb
out
(bad)
cmp
test
fs
inc
xor
inc
fdiv
jl
dec
gs
jg
je
ret
inc
xor
xchg
stc
mov
xchg
mov
test
and
into
mov
and
dec
mov
cmps
push
fbstp
movs
mov
gs
dec
fs
mov
and
les
xor
inc
pushf
cmps
lock
fnstenv
rcr
loope
(bad)
popa
sub
gs
cdq
imul
sbb
out
inc
xor
test
pop
mov
add
xor
sbb
xor
sbb
mov
xchg
in
rol
cmc
cmps
ret
pushf
lock
pop
repnz
or
jb
or
in
pushf
imul
aas
jl
call
rcr
in
push
call
xchg
sahf
movs
pusha
rcr
fs
sbb
and
push
adc
cld
(bad)
fidiv
test
in
xchg
or
mov
sbb
jg
test
jo
mov
pop
jbe
jg
imul
(bad)
inc
sbb
inc
dec
mov
fistp
cmps
test
mov
dec
popa
jne
xchg
mov
sahf
test
jo
mov
sbb
lock
pop
xor
(bad)
fidiv
test
mov
movs
rcl
iret
(bad)
mov
jo
push
je
or
xor
pop
aaa
cmps
inc
pop
xor
test
xor
adc
and
rcr
daa
xchg
in
pop
fcomip
cmps
test
jb
xchg
je
ret
mov
ret
rol
cmc
addr16
fisub
jno
leave
daa
jl
fidiv
test
and
xchg
pop
fidiv
mov
xchg
cmp
add
push
dec
and
out
pop
cmc
es
popf
test
loopne
into
mov
and
je
adc
xor
inc
pop
jno
adc
and
(bad)
xor
sbb
fs
(bad)
xor
sbb
cmps
inc
pushf
and
loopne
fsubp
mov
retf
pop
pop
repnz
ret
mov
push
retf
inc
cdq
mul
inc
pop
jb
xlat
push
and
push
adc
cld
inc
pop
xor
(bad)
or
mov
pop
repnz
(bad)
fsub
addr16
fisub
ins
xlat
mov
loopne
lahf
jo
lahf
pop
repnz
lahf
or
mov
push
popa
loopne
sahf
sub
pop
cmc
loope
fwait
jo
xchg
retf
and
and
and
movs
add
jo
xchg
in
lahf
or
mov
adc
cld
push
dec
and
cld
inc
fcomi
fs
and
out
push
and
push
adc
cld
dec
pop
xor
push
dec
and
movs
add
push
cmc
mov
xlat
push
and
lahf
lahf
jo
inc
pushf
jns
adc
je
(bad)
lock
mov
inc
pushf
jb
test
xor
(bad)
push
es
(bad)
jns
xchg
pushf
jl
xchg
mov
lods
xchg
mov
push
dec
and
loop
pop
xor
mov
or
mov
mov
rol
xor
test
xor
mov
cmp
sahf
jo
jg
imul
mov
and
inc
xor
inc
pop
jo
test
imul
xchg
push
mov
mov
push
mov
cmp
fidiv
test
in
xchg
mov
jg
daa
cmp
pop
cmc
mov
push
retf
and
cmps
rol
in
dec
and
loopne
call
xchg
sbb
(bad)
pop
cmc
daa
(bad)
fisub
jno
mov
popa
inc
fbld
in
xlat
into
mov
and
fidiv
jl
(bad)
adc
mov
push
dec
and
mov
mov
fs
mov
lahf
lahf
jo
inc
sbb
cld
jg
jne
add
addr16
fisub
pop
pop
repnz
or
mov
or
mov
fnsave
gs
lahf
jo
inc
fsub
jno
(bad)
jne
add
and
pop
jno
adc
cmc
loope
fwait
jo
jg
xor
retf
xlat
into
mov
xor
retf
ror
cmps
ja
fdiv
jl
pop
cmc
mov
push
dec
and
cmps
test
xor
xchg
push
mov
mov
iret
(bad)
cmc
popa
inc
fwait
je
push
dec
gs
pop
retf
xor
iret
(bad)
movs
jo
retf
adc
gs
retf
and
lock
and
into
mov
es
repnz
fwait
and
mov
popf
lock
push
dec
and
cmps
pop
popf
imul
popa
lock
mov
sbb
cmc
push
adc
movs
add
and
sub
(bad)
fdiv
in
pushf
imul
(bad)
and
xlat
into
and
jb
test
in
xchg
push
ds
xchg
sahf
mov
loop
inc
jne
adc
cmp
jo
fisub
bound
fidiv
cld
add
lahf
jmp
in
xchg
mov
lahf
dec
gs
dec
gs
(bad)
gs
xchg
hlt
xchg
push
mov
movs
add
pop
ja
adc
xor
fwait
imul
ror
movs
jno
xchg
fidiv
adc
cmc
and
inc
retf
lock
mov
mov
sbb
lock
pop
jno
add
xor
pushf
imul
rol
fs
fdiv
mov
popa
call
xchg
mov
ror
cmc
mov
ror
jge
leave
push
cld
sub
iret
cmp
test
cmps
mov
jo
or
xor
retf
and
cmps
inc
pop
xor
and
cld
push
dec
and
and
lahf
jae
test
movs
xor
(bad)
xor
sbb
xor
mov
pop
pop
mov
sbb
pop
retf
movs
mov
ret
movs
ret
mov
sbb
and
jg
imul
retf
sbb
add
xor
repnz
or
mov
or
mov
pop
je
push
dec
and
in
fdiv
cld
test
jne
(bad)
(bad)
cmps
ja
retf
clc
jbe
mov
adc
and
aad
cmc
out
call
xchg
or
xor
fsub
pusha
pop
pop
cmc
loope
fwait
jo
ror
addr16
(bad)
cmc
popa
xchg
in
pop
fwait
xor
push
mov
out
sbb
out
xchg
add
addr16
sahf
gs
pop
jne
ret
(bad)
movs
sbb
and
pop
xor
sbb
daa
test
mov
ret
in
fisub
jno
shl
cmps
pop
fdiv
(bad)
je
sbb
jo
mov
adc
movs
xor
fwait
mov
add
mov
test
loope
fwait
jo
adc
xor
repnz
add
gs
fnstenv
add
movs
xchg
and
jb
(bad)
jno
adc
test
lock
(bad)
stc
je
or
mov
or
lock
pop
mov
test
and
push
arpl
rol
and
xchg
pop
je
pop
fwait
xor
xlat
push
and
push
adc
mov
adc
and
into
and
jb
inc
pushf
xor
push
popf
cmps
and
fist
movs
loopne
xchg
(bad)
fidiv
les
jo
pop
fnstenv
push
dec
and
and
inc
fwait
jb
rol
loop
mov
loopne
dec
and
cmc
pop
pop
jne
(bad)
fidiv
cld
xchg
mov
loopne
pop
hlt
loopne
or
mov
push
and
xchg
(bad)
stos
xchg
sahf
lock
je
sbb
jo
mov
push
pop
and
lock
cmc
and
pop
cmc
mov
adc
loop
test
popa
xlat
push
and
(bad)
(bad)
movs
lock
cmc
popa
inc
(bad)
in
xlat
mov
push
lahf
jns
or
lock
mov
push
dec
movs
not
and
lock
in
xchg
or
mov
test
adc
ins
lahf
retf
mov
add
xor
mov
test
lock
(bad)
std
test
(bad)
icebp
mov
(bad)
push
and
fidiv
jl
fbstp
cld
xchg
mov
icebp
ror
movs
mov
pop
xor
loopne
(bad)
movs
jo
mov
(bad)
movs
xor
retf
xlat
into
cmc
popa
inc
fwait
imul
les
les
loope
fwait
jo
adc
test
gs
(bad)
and
into
mov
jo
or
retf
xchg
or
fdiv
loope
pop
jb
lahf
(bad)
stc
mov
pop
je
adc
into
xchg
add
addr16
fisub
jno
mov
mov
add
xlat
push
and
xchg
or
mov
or
sbb
add
mov
ror
gs
xchg
add
addr16
sahf
jns
lahf
mov
mov
retf
mov
mov
push
dec
and
movs
(bad)
fdiv
adc
xor
or
mov
or
mov
leave
xor
lahf
imul
or
jg
mov
sbb
lock
cmc
cmps
(bad)
fisub
pusha
inc
pop
hlt
loopne
or
mov
or
xchg
or
lock
(bad)
add
mov
fbstp
mov
loope
(bad)
jo
frstor
loopne
cdq
stc
loope
cdq
imul
or
inc
retf
ret
cld
inc
pop
xor
push
dec
and
icebp
ror
lock
cmp
test
jne
add
in
dec
xchg
imul
add
lahf
pop
xor
cld
adc
sub
xchg
mov
fild
sub
xchg
mov
fild
sub
xchg
mov
fild
sub
xchg
cwde
cmp
pop
cmp
pop
mov
xchg
jmp
cmc
ret
jecxz
retf
mov
jg
imul
lds
mov
mov
xchg
cmp
mov
lods
cmps
in
pop
arpl
cwde
cmp
pop
mov
mov
inc
mov
sub
std
adc
sbb
fadd
daa
mov
xchg
sbb
ret
dec
popf
test
sub
into
xchg
jmp
stc
hlt
or
jl
arpl
pop
cmp
pop
cmp
inc
lahf
call
fild
pop
cmp
pop
and
int
cmp
cmp
cmp
pop
cmp
dec
aas
mov
sbb
jl
inc
retf
sar
int
cmp
clc
push
fild
int
cmp
pop
aas
mov
les
cmp
pop
cmp
pop
cmp
outs
xchg
jl
arpl
pop
cmp
pop
outs
inc
sub
test
dec
popf
test
aas
test
cmp
inc
add
inc
int
cmp
pop
cmp
pop
(bad)
stc
imul
mov
cld
lahf
adc
movs
xchg
inc
cwde
inc
and
dec
mov
arpl
pop
cmp
pop
pop
fisttp
in
pop
pop
cwde
mov
cmp
pop
cmp
lock
fild
int
cmp
pop
cmp
pop
outs
inc
leave
or
leave
cmp
add
cmp
cmp
mov
int
cmp
pop
cmp
pop
mov
arpl
pop
cmp
pop
pop
fisttp
in
pop
add
mov
cmp
pop
cmp
pop
outs
inc
cmp
(bad)
je
mov
pop
mov
mov
xchg
cmp
mov
lods
cmps
in
pop
arpl
cwde
cmp
pop
cmp
or
push
std
outs
stos
(bad)
out
clc
(bad)
xchg
jg
push
(bad)
ret
and
cmp
xchg
mov
cmp
pop
scas
inc
dec
ins
iret
inc
mov
xchg
inc
cmps
in
iret
(bad)
gs
xchg
xchg
iret
xchg
das
js
aam
xchg
cmp
push
inc
out
aam
pusha
sbb
inc
loopne
into
sar
sbb
lds
or
or
add
or
(bad)
(bad)
jmp
adc
cdq
stos
add
pop
push
inc
clc
sub
pop
push
(bad)
dec
aas
aam
fld
sub
in
or
adc
inc
or
ss
ret
ret
cmp
movs
or
jmp
ret
cli
mov
test
lds
ror
ds
jne
add
mov
ficomp
sbb
shr
test
xor
jne
sub
neg
push
jb
(bad)
jmp
jge
sahf
pop
movs
sub
(bad)
mov
and
imul
push
shr
lea
mov
ror
xchg
jle
mov
lahf
pop
sbb
les
pop
ds
add
(bad)
jle
cmp
push
aam
pop
adc
adc
(bad)
ret
(bad)
sub
(bad)
jmp
push
loop
pop
ds
test
loopne
mov
mov
les
mov
adc
add
jmp
arpl
pop
cli
pop
jnp
add
cmc
adc
sbb
aad
jmp
rol
add
int
sbb
sbb
dec
aas
mov
push
int3
push
cmps
jne
ret
inc
ret
inc
sbb
data16
mov
xchg
lods
and
inc
add
mov
xchg
lods
mov
mov
data16
mov
inc
js
mov
xchg
outs
adc
repz
data16
mov
data16
neg
mov
push
mov
data16
xchg
dec
jbe
adc
data16
cmps
call
xchg
mov
ja
adc
data16
cmp
js
mov
data16
xchg
dec
je
adc
data16
sub
pop
push
mov
data16
mov
mov
or
js
mov
data16
addr16
push
jb
mov
sbb
data16
fadd
cmp
rcl
sbb
dec
js
fdivr
mov
out
cmps
jge
mov
loope
pop
cmp
into
sar
and
mov
movs
mov
mov
shl
stos
or
push
in
jp
push
out
aaa
pop
pop
pop
(bad)
sub
and
bound
add
out
not
dec
sub
out
fisub
mov
mov
in
gs
into
pop
cmp
or
inc
mov
push
es
sub
les
pop
shr
test
push
hlt
add
ret
cli
aas
imul
ds
push
cmp
aad
(bad)
pop
fstp
test
out
push
and
sub
add
jb
cmps
bound
mov
and
jg
inc
jp
pop
das
(bad)
dec
aad
sub
imul
jne
test
jmp
jecxz
pop
nop
outs
fs
jmp
dec
inc
sub
mov
jecxz
or
mov
sub
ror
adc
sbb
and
cmp
popf
dec
adc
pop
inc
fsub
add
aad
jmp
or
mov
add
fxam
rcl
xchg
and
jp
sbb
push
les
pop
aad
push
shl
pop
jmp
loop
cmps
movs
retf
or
outs
jnp
imul
sub
mov
in
clc
cmps
xchg
xchg
jnp
push
push
imul
sub
xor
mov
gs
ja
retf
or
add
xchg
sti
cs
stos
in
imul
test
mov
mov
outs
inc
xor
jmp
in
movs
mov
or
retf
or
jnp
mov
retf
stos
leave
and
mov
mov
retf
or
dec
enter
cmps
movs
retf
or
jne
js
pop
or
or
outs
push
or
je
xlat
mov
scas
push
or
jp
ret
neg
stc
xchg
ja
bound
imul
das
xchg
xchg
jne
inc
ss
pand
call
cld
fcomp
into
rcl
fcom
dec
sub
data16
push
xor
jmp
les
lea
popa
fsub
popf
mov
ins
pop
stos
push
retf
lock
test
mov
add
xchg
lea
mov
mov
mov
dec
aad
scas
mov
retf
push
idiv
push
mov
aad
fadd
dec
out
ficom
(bad)
add
dec
in
cmp
sti
fild
cmp
nop
fs
jmp
jp
jne
push
gs
mov
(bad)
sub
or
test
(bad)
fcom
sub
(bad)
out
jmp
arpl
dec
jge
sub
pop
ror
push
inc
in
cmc
aas
adc
shr
push
or
add
dec
stos
add
mov
xor
cmp
loopne
cmp
add
mov
sbb
sbb
aam
push
test
cdq
stc
sahf
push
jecxz
add
dec
mov
sbb
(bad)
jmp
outs
adc
mov
(bad)
jmp
(bad)
jmp
pusha
xor
jnp
lods
add
inc
add
imul
add
int3
cmp
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
fs
std
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
gs
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
in
jle
in
jle
jle
pop
dec
in
add
add
or
call
scas
lds
and
mov
call
pop
and
les
pop
cli
or
lahf
add
mov
inc
jle
in
in
jge
inc
add
movq
add
mov
in
ds
adc
push
fs
fwait
inc
iret
xchg
cmc
inc
call
call
and
and
lahf
mov
mov
add
mov
jne
fild
call
mov
mov
jg
(bad)
xchg
jle
inc
cmp
add
mov
popf
adc
sbb
push
xchg
mov
scas
jne
jbe
add
mov
add
mov
and
call
call
jl
dec
and
js
outs
lahf
add
mov
add
mov
cmc
cmp
call
mov
inc
mov
push
and
call
call
sbb
call
sbb
call
xchg
call
mov
add
ds
fs
pop
pop
add
mov
add
daa
mov
add
mov
add
lahf
les
inc
push
pop
(bad)
pop
in
inc
call
call
xchg
call
mov
and
call
sub
lahf
in
call
inc
mov
mov
sub
push
fs
inc
rcr
cmp
in
(bad)
xchg
jle
repz
pop
dec
and
mov
jnp
call
scas
in
pop
pcmpgtb
xor
loope
shld
jns
xchg
adc
pop
pmulhuw
(bad)
sahf
(bad)
xchg
jle
sub
pop
jnp
into
sar
or
lds
mov
xor
or
arpl
lahf
jg
add
adc
push
xchg
sbb
push
sub
jnp
xchg
fmul
aam
(bad)
cmp
mov
test
jl
push
aad
aaa
and
frstor
inc
dec
inc
push
push
sub
call
mov
(bad)
(bad)
(bad)
push
pop
(bad)
sub
push
scas
(bad)
sbb
xor
sub
mov
cmps
and
mov
(bad)
(bad)
outs
add
lea
or
inc
mov
fsubr
adc
mov
add
or
imul
mov
inc
in
lock
arpl
inc
lock
(bad)
jmp
loop
sbb
or
add
sbb
and
aam
movs
das
add
xchg
xchg
aam
inc
jb
sbb
aad
cmp
aad
cmc
aas
dec
cdq
add
cs
pop
jp
push
jecxz
xor
dec
jmp
adc
out
jmp
mov
pushf
(bad)
and
pop
mov
adc
int
cmp
mov
xchg
aad
(bad)
das
aad
mov
adc
and
imul
shl
scas
out
inc
test
test
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
push
mov
sub
cli
stos
add
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
adc
cmps
or
xchg
mul
sbb
adc
daa
push
push
in
adc
daa
adc
out
cmps
adc
daa
adc
jmp
or
adc
out
adc
daa
push
push
in
adc
daa
adc
out
cmps
adc
out
push
jmp
adc
out
adc
in
out
push
in
out
xchg
jmp
adc
jmp
adc
adc
out
xchg
jmp
or
adc
out
adc
daa
push
push
in
adc
daa
adc
out
cmps
adc
in
daa
adc
jmp
or
adc
addr16
out
daa
adc
out
adc
out
shr
adc
or
adc
std
or
out
mov
pop
pop
bnd
inc
jmp
jecxz
js
ins
enter
aaa
inc
jmp
not
pop
xor
xchg
mov
inc
mov
fsub
addr16
not
inc
jmp
ret
pop
lds
adc
not
inc
jmp
loop
(bad)
ss
jmp
not
ret
outs
ffreep
sbb
adc
not
inc
lods
fnsave
cmps
xchg
mov
aaa
xor
ror
addr16
not
ret
aad
(bad)
scas
lods
adc
not
inc
jmp
not
or
push
int
xchg
not
mov
or
sbb
out
jmp
not
inc
jmp
adc
int
xor
jmp
cli
fiadd
jmp
imul
cmps
or
ja
int
xor
jmp
cli
fld
jmp
not
inc
jmp
adc
int
xor
jmp
cli
jmp
not
inc
jmp
adc
int
xor
jmp
not
(bad)
mul
addr16
imul
cmps
or
ja
int
xor
jmp
not
cvtpi2ps
out
jmp
not
inc
jmp
shl
cmps
lea
aaa
fmul
xor
int
adc
not
inc
jmp
mul
addr16
test
or
adc
not
inc
jmp
mul
cmps
or
adc
not
sbb
fiadd
sub
out
xchg
cmp
mov
sub
aaa
fadd
or
fmul
aas
jns
int
adc
not
inc
jmp
icebp
mov
sub
rep
adc
sbb
mov
sub
xor
mul
daa
pop
adc
addr16
not
inc
jmp
aad
sbb
adc
not
inc
jmp
rcl
loop
push
aaa
mov
hlt
push
dec
shl
outs
pop
call
inc
jmp
not
inc
inc
loopne
(bad)
mov
shl
int
adc
not
inc
jmp
jecxz
mov
inc
mul
jmp
not
inc
jmp
clc
shl
sub
aaa
fadd
or
sbb
out
mov
in
addr16
fisubr
sbb
adc
not
ret
adc
add
sbb
sub
aaa
inc
jmp
not
inc
jmp
inc
aaa
inc
jmp
not
inc
imul
mov
out
cdq
mov
clc
dec
sbb
sub
clc
out
lods
push
mov
inc
dec
cld
pop
outs
pop
fadd
jmp
not
addr16
neg
cmps
or
aaa
inc
jmp
not
inc
jmp
shl
add
jmp
retf
dec
ret
sub
xor
sub
mul
addr16
imul
pop
ret
(bad)
ja
mul
aam
push
ror
or
and
xchg
cs
loopne
cmps
lea
mov
(bad)
xor
outs
popf
fld
jmp
out
mul
jmp
in
xchg
sub
mul
addr16
not
addr16
not
ret
and
mul
jmp
not
fwait
in
mov
inc
jmp
retf
push
cmps
adc
adc
not
add
jecxz
daa
adc
adc
not
inc
jmp
imul
push
sbb
out
addr16
not
add
jecxz
es
adc
not
inc
jmp
inc
aaa
inc
jmp
not
iret
adc
out
jmp
not
inc
jmp
std
shl
sbb
adc
fadd
or
fmul
adc
mov
jbe
inc
jmp
not
addr16
not
inc
jmp
loop
mov
adc
not
inc
jmp
mul
cmps
xchg
and
mov
or
fadd
or
fmul
adc
mov
jbe
inc
jmp
not
addr16
not
inc
movs
loop
mov
adc
not
inc
sub
fadd
sub
ja
int
jp
sub
mov
add
jmp
not
inc
jmp
inc
mov
dec
adc
inc
jmp
enter
xchg
ins
xchg
sub
idiv
jb
fld
jb
mov
sbb
adc
not
inc
jl
lds
repnz
adc
not
inc
jmp
add
cmp
push
sub
cmps
int
jp
sub
mov
add
jmp
jecxz
push
cs
ja
pusha
and
in
push
jbe
cs
mov
dec
and
mov
fidiv
push
cs
neg
gs
aam
or
cmp
into
sar
sub
add
sub
add
inc
in
loope
push
mov
sub
or
sub
jg
and
mov
aad
jmp
jmp
rol
mov
jnp
push
add
sbb
jg
push
push
dec
les
lahf
fsub
shl
xchg
shl
and
(bad)
loopne
cmc
aas
nop
pusha
sub
cs
and
jne
add
inc
popa
rcr
pop
mov
add
dec
movs
pop
jne
loope
push
mov
nop
test
(bad)
stos
lea
das
ja
movs
test
ds
sub
jbe
inc
jno
jmp
ret
cli
mov
jmp
jmp
mov
or
adc
jmp
sbb
sahf
adc
jmp
or
test
clc
add
adc
add
ret
cli
mov
popf
add
(bad)
ror
repz
inc
neg
push
outs
(bad)
fisub
fs
das
(bad)
fidiv
rol
xchg
aad
les
add
aas
push
retf
and
test
mov
cmp
adc
cld
pop
add
sbb
jl
les
mov
jmp
es
jmp
es
repz
out
fneni(8087
es
jmp
data16
or
ret
add
jl
add
fstp
outs
xchg
adc
es
jmp
es
(bad)
in
add
jmp
es
add
cld
pop
add
sbb
jl
les
mov
jmp
sub
jmp
es
jmp
es
jmp
cmps
lahf
xchg
xor
sub
dec
lock
mov
cwde
jmp
es
jmp
lea
add
es
jmp
es
jmp
es
jmp
pop
test
ficom
mov
jns
mov
mov
jmp
es
loopne
cwde
jmp
cmps
movs
ret
movs
repz
fs
cmp
sub
dec
mov
push
inc
das
sbb
inc
mov
and
cmp
pushf
cmp
cdq
or
arpl
aad
mov
mov
cmp
xor
push
(bad)
(bad)
ins
cmp
sub
adc
sub
aas
stos
push
das
test
push
push
add
test
jne
aam
es
inc
popf
jle
sub
je
aad
mov
push
sbb
mov
mov
mov
enter
shl
enter
mov
(bad)
sub
sub
mov
inc
sti
or
cmc
aas
dec
test
ins
cmp
shl
sbb
sub
test
sti
push
dec
xchg
(bad)
sub
cmp
scas
mov
xchg
lahf
xor
test
cdq
rol
add
and
jmp
push
add
dec
in
jmp
inc
das
inc
stos
adc
dec
fld
lock
(bad)
cmp
add
adc
(bad)
lea
add
fcmove
jae
ret
push
sub
jp
adc
mov
adc
test
aad
jmp
pop
dec
fld
loop
jle
dec
ffree
mov
xchg
dec
retf
in
pop
jmp
add
jg
mov
mov
shl
cmp
adc
and
stos
pusha
mov
add
jp
and
xlat
inc
inc
push
xlat
inc
lds
push
repnz
xlat
xchg
popf
xlat
inc
lds
rol
xor
adc
loop
xor
cwde
push
bound
mov
xlat
xchg
popf
xlat
inc
ss
xlat
inc
jmp
xchg
ja
popf
xlat
xchg
popf
xlat
ins
sar
xchg
push
and
and
xlat
push
lds
xor
lds
xor
lds
pop
jbe
sbb
mov
lds
xlat
inc
(bad)
popa
lds
xlat
inc
lds
and
lds
xlat
inc
lds
test
xlat
inc
add
jns
xchg
popf
xlat
inc
lds
pop
je
pop
jae
es
mov
cmp
sub
pop
mov
xlat
push
lds
xlat
inc
stc
fld
in
sbb
and
arpl
and
and
popf
xlat
inc
lds
xlat
inc
sbb
int3
fstp
or
inc
pop
imul
and
jb
pop
imul
popa
xor
xor
mov
int3
pop
dec
pop
adc
test
adc
xor
jmp
lds
repnz
(bad)
jmp
sbb
inc
loopne
push
jnp
xor
xchg
inc
and
into
inc
loopne
into
inc
enter
inc
sbb
inc
loopne
into
inc
loopne
dec
sub
push
jmp
mov
and
into
inc
loopne
into
inc
cmc
out
sub
and
into
inc
loopne
into
adc
std
sub
and
into
inc
loopne
fwait
mov
(bad)
sub
loopne
into
inc
loopne
into
adc
sti
sub
and
into
inc
loopne
into
inc
loopne
fwait
mov
and
into
inc
loopne
into
inc
loopne
adc
iret
ins
rep
inc
or
add
mov
and
into
inc
loopne
into
inc
loopne
mov
cmp
ds
inc
and
into
xchg
pushf
out
loope
jmp
sbb
inc
loopne
fadd
aad
into
inc
and
into
inc
loopne
into
(bad)
retf
jae
out
sub
and
into
inc
loopne
into
inc
loopne
into
adc
cld
sub
and
into
inc
loopne
fwait
mov
(bad)
sub
loopne
into
inc
loopne
into
adc
(bad)
sub
loopne
into
inc
loopne
into
add
mov
push
add
inc
mov
add
into
inc
loopne
into
inc
loopne
into
inc
loopne
sbb
jle
sub
loopne
into
inc
loopne
dec
outs
add
cmp
sbb
inc
loopne
into
inc
enter
inc
sbb
inc
loopne
into
inc
loopne
jmp
gs
sub
and
sub
repz
or
pop
xor
mov
add
jmp
sbb
xchg
sub
inc
mov
sbb
inc
loopne
dec
jnp
mov
pop
cmp
sbb
inc
loopne
into
inc
loopne
(bad)
fadd
ins
cmps
mov
sbb
inc
loopne
dec
jnp
cmp
movs
fcomp
loopne
into
inc
loopne
into
xchg
les
inc
and
into
(bad)
fadd
jp
jmp
mov
add
popf
sub
xor
(bad)
sub
loopne
into
inc
loopne
into
adc
cld
sub
and
into
inc
loopne
into
inc
loopne
fwait
mov
(bad)
sub
loopne
into
inc
loopne
sub
and
into
inc
loopne
sbb
aam
adc
inc
(bad)
jmp
out
sbb
jmp
imul
cwde
jle
sub
loopne
into
inc
loopne
into
inc
loopne
xor
cmp
cmp
(bad)
(bad)
sub
imul
mov
push
in
stc
test
jmp
sbb
cmp
mul
push
(bad)
(bad)
fadd
aas
cmps
mov
sbb
inc
loopne
into
inc
loopne
into
fld
fdiv
stos
(bad)
daa
dec
mov
and
imul
repz
sbb
fadd
mov
and
into
inc
loopne
into
(bad)
ror
sub
xchg
(bad)
cmp
xor
sbb
(bad)
sub
imul
mov
adc
arpl
sbb
inc
loopne
into
inc
loopne
into
(bad)
out
aad
pusha
sbb
inc
loopne
push
cdq
out
sub
sbb
inc
loopne
into
inc
loopne
dec
mov
sbb
inc
loopne
into
(bad)
rcl
loopne
into
inc
loopne
into
inc
loopne
aaa
pushf
(bad)
scas
aad
jnp
into
inc
loopne
into
(bad)
rcl
cmp
aad
loopne
into
inc
loopne
push
pop
jmp
sbb
inc
loopne
into
inc
loopne
dec
outs
(bad)
fstp
arpl
sbb
inc
loopne
into
inc
enter
inc
mov
jmp
sbb
inc
loopne
into
(bad)
out
into
inc
mov
sbb
inc
out
aam
pusha
sbb
inc
loopne
dec
add
aas
into
inc
and
into
inc
loopne
into
inc
loopne
add
(bad)
(bad)
jmp
sbb
inc
loopne
cmp
sbb
inc
loopne
dec
mov
sbb
inc
loopne
dec
add
cmp
into
inc
loopne
into
inc
out
call
inc
loopne
cmp
sbb
inc
loopne
into
inc
loopne
into
inc
out
out
inc
pusha
sbb
inc
loopne
cmp
sbb
inc
loopne
into
inc
(bad)
cmp
sbb
xchg
cld
pop
jnp
nop
loopne
(bad)
jmp
sbb
inc
loopne
out
sbb
jmp
mov
add
popf
sub
xor
into
sub
xchg
(bad)
ret
(bad)
push
add
test
mov
and
into
inc
loopne
into
xchg
sub
inc
mov
pushf
out
loope
jmp
sbb
inc
loopne
fadd
retf
mov
into
inc
mov
out
jmp
inc
loopne
into
inc
loopne
dec
add
aas
into
inc
and
into
inc
loopne
dec
mov
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
cmp
sbb
inc
loopne
into
inc
out
out
inc
pusha
sbb
inc
loopne
cmp
sbb
inc
loopne
into
inc
(bad)
cmp
dec
popf
inc
mov
xor
dec
jmp
arpl
sbb
inc
loopne
mov
cmp
ds
inc
and
into
inc
loopne
into
xchg
sub
inc
mov
sbb
inc
loopne
into
rcl
into
inc
and
into
inc
out
out
xchg
inc
and
into
inc
enter
pop
scas
movs
mov
mov
sub
and
into
inc
loopne
into
inc
loopne
fwait
mov
(bad)
sub
loopne
into
inc
loopne
cmp
and
into
inc
loopne
fwait
mov
and
into
inc
loopne
adc
iret
outs
rep
shr
inc
mov
int
add
into
inc
and
into
inc
loopne
into
inc
loopne
mov
cmp
ds
inc
and
into
xchg
sub
inc
mov
pushf
out
loope
jmp
sbb
out
neg
jecxz
stos
mov
sbb
inc
loopne
into
inc
loopne
into
inc
out
call
inc
loopne
into
inc
loopne
dec
add
aas
into
inc
and
into
inc
loopne
into
inc
loopne
dec
mov
sbb
inc
loopne
into
inc
loopne
dec
add
cmp
inc
and
into
inc
out
out
inc
pusha
sbb
inc
loopne
cmp
sbb
inc
loopne
adc
iret
outs
rep
shr
inc
mov
xchg
mov
and
into
inc
loopne
into
inc
loopne
mov
cmp
push
sub
loopne
into
inc
loopne
into
inc
loopne
push
data16
arpl
sbb
inc
loopne
into
inc
loopne
into
inc
out
call
inc
loopne
into
inc
loopne
into
ror
btr
sbb
inc
loopne
into
out
div
loopne
fisubr
mov
pop
and
inc
loopne
into
inc
loopne
into
inc
loopne
cmp
into
inc
loopne
into
inc
out
jmp
inc
loopne
dec
rcl
into
inc
and
into
inc
loopne
into
inc
cmc
out
sub
and
into
inc
loopne
into
inc
loopne
cmp
and
into
inc
loopne
into
inc
loopne
fwait
mov
(bad)
sub
loopne
into
inc
loopne
into
inc
loopne
sub
and
into
inc
loopne
into
inc
loopne
into
cdq
rcr
aam
adc
inc
(bad)
jmp
out
and
inc
and
into
inc
loopne
cmp
into
inc
loopne
into
inc
out
aam
pusha
sbb
inc
loopne
into
inc
loopne
into
sar
sbb
fs
add
cmps
mov
sbb
inc
loopne
into
inc
loopne
cmp
into
inc
loopne
into
inc
loopne
push
stos
cld
(bad)
jmp
sbb
inc
loopne
cmp
sbb
inc
loopne
into
inc
loopne
into
xchg
mov
into
inc
loopne
into
inc
loopne
push
jnp
xor
xchg
inc
and
into
inc
enter
jnp
into
inc
loopne
dec
sub
push
add
inc
and
into
inc
loopne
mov
sbb
inc
loopne
into
rcl
into
inc
and
into
(bad)
out
call
inc
loopne
jmp
ret
cmp
test
pop
mov
add
into
inc
loopne
into
inc
loopne
push
xor
jmp
es
dec
cs
cmp
or
mov
data16
into
inc
mov
sbb
inc
out
jmp
mov
jmp
les
into
inc
loopne
dec
sub
(bad)
sub
pop
cmp
jnp
sub
loopne
into
inc
loopne
into
inc
loopne
out
rcl
sub
inc
and
into
inc
loopne
into
inc
loopne
repnz
pop
sbb
aam
push
loop
cdq
repnz
into
inc
loopne
dec
fcmovbe
into
sub
xchg
fcom
leave
into
es
mov
in
fnstcw
inc
loopne
into
inc
loopne
into
inc
loopne
push
data16
arpl
sbb
inc
loopne
into
(bad)
fadd
ret
cmp
sub
cmp
cs
ds
inc
and
into
xchg
add
pop
cmp
into
inc
loopne
into
xchg
(bad)
int
cmp
into
inc
loopne
into
xchg
test
inc
loopne
into
inc
loopne
into
pop
fidivr
push
data16
arpl
sbb
inc
loopne
sbb
out
jmp
push
inc
(bad)
jmp
sbb
inc
loopne
imul
cmps
dec
outs
add
(bad)
sub
loopne
into
inc
loopne
into
inc
loopne
imul
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
push
es
cmp
in
aad
jle
and
ds
cmp
arpl
sbb
inc
loopne
into
inc
in
mov
mov
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
adc
fnstcw
bound
sbb
inc
loopne
push
int
(bad)
sub
sbb
inc
loopne
into
inc
loopne
into
inc
out
std
adc
pop
mov
inc
and
into
inc
loopne
into
fmul
mov
mov
sub
inc
mov
dec
pop
and
xlat
cmp
inc
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
daa
xlat
in
out
jmp
sbb
inc
loopne
into
adc
aas
pop
mov
inc
and
into
inc
loopne
daa
(bad)
in
out
jmp
sbb
inc
loopne
into
inc
loopne
inc
sti
cmp
inc
and
into
inc
loopne
into
(bad)
ror
sub
xchg
(bad)
cmp
pop
and
cmp
and
into
inc
loopne
into
inc
loopne
dec
mov
push
inc
mov
ds
mov
mov
inc
mov
mov
and
into
inc
(bad)
cmp
scas
xlat
cmp
(bad)
sub
sbb
inc
loopne
into
inc
in
cs
cmp
mov
push
inc
mov
adc
jg
mov
mov
and
into
inc
out
out
or
cmp
out
out
or
cmp
out
in
or
cmp
addr16
mov
fmul
cdq
add
retf
inc
mov
sbb
inc
loopne
push
int
(bad)
sub
sbb
inc
loopne
into
inc
loopne
into
inc
out
mov
cmp
out
adc
inc
and
into
inc
loopne
into
inc
loopne
into
rcl
into
inc
and
into
inc
loopne
or
(bad)
inc
(bad)
sub
es
adc
and
jle
and
lock
sti
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
xchg
into
inc
loopne
into
inc
out
mov
pop
jmp
xor
push
(bad)
sub
sahf
movs
shr
repz
(bad)
stos
stc
add
stos
mov
stos
add
pop
mov
sbb
inc
loopne
into
xchg
outs
aad
jnp
into
inc
loopne
into
inc
loopne
into
rcl
add
mov
ds
jecxz
ret
dec
lea
mov
(bad)
ja
and
pop
mov
mov
add
jo
push
jle
and
call
jnp
aad
loopne
into
inc
loopne
push
cdq
repnz
pop
pusha
sbb
inc
loopne
into
inc
cmc
out
adc
inc
and
into
inc
loopne
into
cdq
rol
mov
or
lds
sar
mov
test
stos
mov
(bad)
jns
pop
sti
sbb
inc
loopne
into
sar
sbb
fs
pop
mov
add
jmp
sbb
inc
loopne
into
inc
loopne
into
ret
retf
cdq
add
push
jle
and
ds
mov
mov
aad
pusha
sbb
inc
loopne
into
inc
in
pop
mov
mov
in
out
jmp
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
or
lds
jns
xlat
cmp
out
mov
fadd
fsub
loopne
into
or
xlat
cmp
sbb
inc
loopne
into
inc
in
push
push
sub
inc
mov
sbb
inc
loopne
push
mov
sub
pop
cmp
into
inc
loopne
into
inc
loopne
into
sar
sbb
add
jo
push
jle
and
(bad)
push
repnz
sbb
inc
loopne
into
inc
loopne
stos
mov
test
jmp
sbb
inc
loopne
pop
mov
ds
inc
and
into
inc
loopne
into
inc
loopne
or
inc
sub
inc
loopne
push
mov
inc
aad
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
push
xor
cld
sub
fidivr
and
retf
aad
sti
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
enter
lock
jle
and
(bad)
push
lea
sbb
inc
loopne
into
inc
loopne
fistp
add
inc
loopne
into
xchg
das
aad
pusha
sbb
inc
loopne
into
inc
loopne
adc
fnstcw
push
xchg
jae
arpl
sbb
inc
loopne
ds
add
pop
mov
sbb
ror
sub
sahf
jle
and
jle
and
call
cmp
aad
loopne
into
inc
loopne
aad
mov
out
pusha
leave
out
jmp
sbb
inc
loopne
sub
pop
aad
mov
sbb
inc
loopne
into
inc
out
mov
cmp
jb
cmp
ja
es
into
inc
loopne
into
pop
clc
pop
fiadd
sbb
inc
loopne
into
inc
loopne
dec
xor
jmp
mov
es
rcl
into
inc
and
into
inc
loopne
into
inc
loopne
dec
lods
jmp
cmp
imul
arpl
sbb
enter
stos
jmp
mov
loopne
into
inc
loopne
into
inc
loopne
(bad)
add
mov
sbb
inc
loopne
into
inc
loopne
into
pop
cld
add
mov
sbb
inc
loopne
sub
out
push
and
or
out
sub
and
into
inc
loopne
inc
(bad)
mov
mov
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
aaa
popa
loopne
into
inc
loopne
into
inc
loopne
mov
sbb
inc
loopne
into
inc
loopne
out
hlt
jb
int
(bad)
sub
sbb
inc
loopne
into
inc
loopne
xlat
pop
in
jmp
sbb
popa
loopne
into
inc
loopne
into
inc
loopne
into
inc
out
aad
pusha
sbb
inc
loopne
into
inc
loopne
dec
sub
jge
sbb
out
call
inc
loopne
sub
and
into
inc
loopne
sbb
out
call
inc
loopne
into
inc
loopne
into
xchg
(bad)
(bad)
sub
loopne
dec
xor
jmp
es
cmp
and
into
inc
loopne
imul
pusha
sbb
inc
loopne
into
rcr
into
inc
and
into
inc
loopne
into
inc
loopne
rcl
sahf
adc
inc
(bad)
sub
pop
pop
and
bound
sbb
inc
loopne
imul
jmp
mov
loopne
into
inc
loopne
into
inc
loopne
(bad)
rcr
into
inc
and
into
inc
loopne
into
inc
loopne
mov
pop
fadd
sbb
inc
loopne
mov
sti
pushf
cmp
into
inc
loopne
into
inc
loopne
movs
loop
fiadd
(bad)
jmp
sbb
inc
loopne
push
xor
jmp
mov
sti
cmp
inc
and
into
inc
sti
out
aam
pop
sub
and
shr
mov
and
into
inc
out
mov
mov
add
inc
sti
cmp
cs
ds
inc
and
into
inc
loopne
dec
mov
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
nop
xchg
add
sbb
inc
loopne
into
(bad)
out
aam
pusha
sbb
inc
loopne
into
inc
loopne
into
rcl
ret
sub
and
into
xchg
push
pop
mov
loopne
into
inc
loopne
cmp
out
test
mov
and
into
inc
loopne
into
inc
loopne
dec
fcmovbe
into
sub
jecxz
inc
pusha
sbb
inc
loopne
into
inc
loopne
into
out
not
into
inc
and
into
inc
loopne
into
inc
in
or
mov
arpl
ret
pop
inc
lods
jle
in
mov
sbb
cmp
sbb
inc
loopne
adc
fidiv
push
pushfw
jae
arpl
sbb
(bad)
(bad)
and
pop
sti
cmp
inc
pusha
sbb
inc
loopne
into
inc
loopne
cmp
into
inc
loopne
into
inc
loopne
mov
mov
ret
jp
mov
es
inc
pusha
sbb
inc
loopne
into
inc
loopne
into
rcl
into
inc
and
into
inc
loopne
movs
(bad)
(bad)
lahf
loop
jnp
inc
mov
and
into
inc
loopne
into
inc
loopne
into
sar
sbb
fs
add
cmps
mov
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
cmp
sbb
inc
loopne
into
xchg
popa
es
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
cmp
xchg
call
inc
loopne
sub
and
into
inc
loopne
into
inc
loopne
mov
xchg
cmp
mov
mov
sbb
inc
loopne
into
inc
loopne
dec
rcl
into
inc
and
into
inc
loopne
into
inc
loopne
dec
mov
loopne
into
add
(bad)
mov
add
cmp
sub
loopne
into
inc
loopne
into
inc
loopne
adc
(bad)
push
mov
(bad)
in
mov
loopne
into
inc
loopne
adc
fst
push
mov
(bad)
jmp
mov
loopne
into
cmp
mov
cmp
out
fcomp
adc
and
into
inc
loopne
into
cmp
mov
cmp
out
fcomp
adc
and
into
inc
loopne
into
inc
loopne
into
cmp
imul
jmp
inc
loopne
into
inc
loopne
push
xor
cli
push
es
ja
sub
sub
loopne
into
inc
loopne
into
inc
loopne
sbb
loopne
into
inc
loopne
dec
mov
sbb
inc
loopne
into
inc
loopne
jmp
pusha
sbb
inc
loopne
into
inc
loopne
into
das
lock
mov
and
into
inc
stc
add
inc
loopne
into
inc
loopne
into
inc
in
stos
sbb
aaa
popa
loopne
into
inc
loopne
into
inc
out
jmp
inc
loopne
dec
sub
add
sub
sbb
inc
loopne
into
(bad)
ror
sub
jecxz
inc
pusha
sbb
inc
loopne
into
inc
loopne
into
adc
(bad)
sub
loopne
into
inc
loopne
into
inc
loopne
sub
and
into
(bad)
ror
sub
xchg
(bad)
rcr
into
inc
and
into
inc
loopne
fwait
mov
and
into
inc
loopne
into
(bad)
ror
sub
xchg
(bad)
cmp
dec
in
or
cmp
add
fbstp
add
adc
movs
add
or
lds
cmp
dec
pop
adc
jecxz
sbb
mov
jbe
mov
adc
and
jbe
in
jnp
mov
(bad)
pop
pop
jns
adc
jb
fistp
call
vmovaps
jmp
and
mov
pminub
add
les
out
dec
data16
fnstsw
pop
sbb
(bad)
jmp
data16
cmps
bound
adc
inc
loope
sbb
inc
jle
leave
adc
and
cmp
loope
(bad)
jg
xor
aam
cli
mov
rcr
sti
inc
or
mov
add
pop
enter
nop
cdq
aad
out
les
mov
das
rcl
sub
sub
idiv
jb
pusha
mov
xchg
inc
sbb
(bad)
ror
test
push
sub
mov
aad
jmp
pop
jnp
inc
(bad)
pmullw
(bad)
mov
aas
es
int3
mov
aad
cli
imul
jmp
pop
jnp
add
enter
clc
sti
and
nop
push
scas
lahf
sub
mov
dec
push
xor
jle
mov
mov
js
xor
pop
je
adc
push
fmul
add
mov
test
mov
js
xor
ins
dec
xor
push
xchg
xor
pop
pushf
or
stos
sbb
jo
mov
js
les
xchg
aad
mov
jo
mov
ins
test
pop
pop
xchg
adc
mov
jl
xchg
cmp
test
pop
pushf
dec
xor
int
xor
push
neg
js
xor
xor
cmp
jo
mov
jle
adc
mov
jo
mov
dec
push
mov
js
or
dec
push
xor
js
xor
inc
test
jo
mov
js
xor
inc
mov
cdq
js
xor
inc
test
clc
jo
mov
js
xor
fsub
xlat
push
test
mov
js
in
jl
or
mov
js
ret
dec
aaa
dec
fnsave
mov
js
jno
pop
xchg
aad
mov
jo
mov
push
sub
test
js
xor
js
aaa
inc
pop
jo
mov
js
jno
jle
sub
js
xor
push
jo
mov
jle
sub
js
aaa
(bad)
push
jo
mov
js
xor
ins
push
mov
lahf
hlt
jmp
fcom
movs
and
fwait
pop
xor
cdq
test
int
xor
jl
adc
ins
dec
xor
cmp
imul
mov
jo
mov
js
xor
bound
mov
js
xor
clc
jo
mov
js
or
inc
imul
mov
inc
jbe
cdq
clc
jo
mov
inc
test
js
xor
inc
jbe
cdq
clc
jo
mov
js
xor
pop
hlt
in
jl
jmp
cmp
xchg
cmp
test
pop
pushf
xlat
xor
arpl
sub
stc
dec
fcom
dec
imul
dec
pushf
fcom
lock
dec
sbb
out
movs
mov
test
mov
sbb
adc
sub
adc
push
cmp
sub
test
sub
sti
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
xor
mov
into
inc
loopne
into
inc
loopne
into
(bad)
in
or
xor
sub
(bad)
sub
aas
in
xchg
adc
cmp
cmp
push
fs
lds
test
les
mov
sbb
mov
add
adc
push
xchg
dec
or
(bad)
fs
mov
fsubr
fdivp
pop
cmp
jmp
aas
or
xor
push
sub
xchg
(bad)
(bad)
jmp
(bad)
sub
cmp
(bad)
out
sub
mov
adc
jmp
ficomp
test
inc
mov
jmp
xchg
and
mov
sbb
ret
cli
mov
pop
xor
loop
loop
ficomp
aas
push
in
mov
(bad)
fwait
in
aam
xor
nop
jb
shr
adc
into
scas
add
shr
out
jmp
pop
dec
fld
or
jle
add
fld
pop
sbb
push
out
or
sahf
adc
iret
les
aad
out
movs
pop
ds
shl
(bad)
jmp
je
std
pop
cmp
aad
rcl
pushf
enter
cmps
mov
aad
mov
or
push
jns
push
out
movs
jle
dec
jae
cmp
jae
cmp
jae
cmp
jae
cmp
jae
cmp
in
aad
in
push
fwait
cmp
jae
cmp
mov
xchg
xchg
mov
cmp
jae
cmp
lea
dec
ins
and
jae
cmp
jae
cmp
jae
clc
aaa
mov
arpl
shr
cmp
jae
cmp
jae
mov
in
inc
add
cmc
sbb
dec
jae
cmp
jae
cmp
jne
rcr
jae
cmp
jae
cmp
jae
in
sub
dec
add
gs
shr
xchg
inc
cs
(bad)
jae
cmp
jae
cmp
dec
push
std
clc
push
scas
or
fwait
cmp
jae
std
ds
jg
leave
jae
cmp
jae
cmp
jae
std
aas
push
jg
leave
jae
cmp
jae
cmp
jae
std
cmp
jecxz
xchg
jg
leave
jae
cmp
jae
cmp
jae
cmp
test
fsubr
jae
cmp
jae
cmp
mov
xchg
sub
ins
and
jae
cmp
jae
cmp
jae
cmp
and
or
cmp
jae
cmp
jae
mov
rol
cmp
jae
clc
cmp
fsubrp
push
fwait
cmp
jae
cmp
jae
ret
adc
std
daa
xchg
jg
not
movs
sbb
mov
mov
and
jae
cmp
jae
clc
aaa
fdivr
in
ins
imul
or
cmp
jae
cmp
repz
xor
mov
fsubr
inc
add
icebp
sbb
dec
jae
cmp
jae
cmp
mov
fsubr
mov
and
call
mov
cmp
jae
cmp
jae
mov
ror
int3
ins
xchg
mov
cmp
hlt
pop
add
push
jns
sub
jae
cmp
mov
sbb
xchg
sub
sub
jae
cmp
repz
cmp
jecxz
hlt
pop
add
push
stos
mov
sub
jae
cmp
hlt
pop
add
push
jg
stc
int
mov
leave
jae
cmp
jae
cmp
pop
repz
hlt
pop
add
push
(bad)
in
jmp
xchg
aas
dec
addr16
cwde
lea
pop
cli
iret
xchg
jg
mul
ja
shr
cmp
jae
cmp
jae
rcr
stc
outs
sbb
jae
cmp
jae
in
sub
push
cmp
jae
cmp
sbb
add
stc
jg
ins
push
fwait
cmp
jae
cmp
jae
clc
aaa
movs
jae
ins
sub
fwait
cmp
jae
cmp
jae
cmp
jae
mov
shl
aas
inc
addr16
outs
sbb
jae
cmp
jae
cmp
dec
and
ja
lea
xchg
in
jae
cmp
jae
cmp
stos
xchg
lods
or
and
mov
fsubr
jae
cmp
jae
cmp
jae
mov
rol
gs
dec
mov
and
sub
cli
xchg
jg
or
cmp
jae
cmp
jae
repz
and
retf
mov
xlat
sbb
(bad)
push
pop
fsubr
xlat
sbb
cmc
push
data16
push
fwait
cmp
jae
cmp
mov
(bad)
sub
hlt
pop
or
mov
fsubr
hlt
pop
add
push
push
fucomp
jae
cmp
jae
test
mov
and
xchg
jg
into
mov
and
sub
aad
jg
dec
jae
cmp
jae
repz
and
retf
cwde
xchg
jg
mov
sbb
aas
push
push
mov
push
fwait
cmp
jae
cmp
jae
std
aas
push
fwait
cmp
jae
cmp
jae
repz
push
ds
xchg
jg
lea
and
sub
cmc
jg
sub
push
add
aas
push
scas
and
add
xchg
mov
cmp
jae
mov
shr
and
sub
pop
and
and
inc
and
call
inc
cmps
adc
fwait
cmp
jae
cmp
jae
mov
dec
inc
and
inc
add
jmp
and
mov
lds
leave
jae
cmp
jae
mov
rcl
std
xchg
xchg
jg
mul
add
shr
cmp
jae
cmp
jae
std
cmp
and
jae
cmp
jae
cmp
cmp
or
cmp
cmc
jo
add
fwait
cmp
jae
cmp
ja
sbb
or
cmp
jae
cmp
jae
adc
retf
js
fwait
cmp
jae
cmp
mov
and
jae
cmp
jae
cmp
jae
in
das
add
or
cmp
jae
cmp
jae
mov
shl
cmp
jae
cmp
jae
cld
sbb
xchg
mov
cmp
jae
mov
in
jae
cmp
jae
cmp
(bad)
lahf
in
stc
xchg
jg
(bad)
push
fwait
cmp
jae
cmp
jae
cmp
jae
push
nop
cmp
jae
cmp
jae
repnz
fwait
cmp
jae
cmp
jae
cmp
mov
jg
retf
ins
and
jae
cmp
jae
cmp
jae
mov
xchg
int
fsubr
jae
add
cmps
mov
loop
xchg
jg
out
mov
and
xchg
mov
cmp
jae
out
mov
aad
dec
sbb
in
xchg
jg
int
ds
ret
xchg
jg
lods
jae
cmp
jae
data16
dec
sbb
in
xchg
jg
int
ss
ins
add
or
cmp
jae
cmp
jae
(bad)
pop
jae
cmp
jae
ds
jae
cmp
not
adc
pop
xor
inc
in
call
and
jae
cmp
jae
cmp
call
xchg
xchg
jae
cmp
jae
cmp
jae
cmp
call
inc
data16
and
jae
cmp
jae
cmp
pop
icebp
mov
push
cmp
loope
dec
icebp
mov
mov
xor
mov
push
outs
fadd
test
pop
sti
fimul
pop
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
xor
add
inc
loopne
sub
mov
ds
inc
and
into
(bad)
dec
xlat
pop
cmp
ret
or
add
lods
test
retf
hlt
(bad)
(bad)
jmp
push
push
mov
xchg
push
add
push
aas
(bad)
sti
pop
push
dec
fnstenv
sub
sub
push
icebp
pusha
sbb
rol
xchg
and
movs
in
pop
cmp
mov
add
clc
pop
(bad)
sub
fist
lds
les
popf
test
fnstcw
jle
mov
(bad)
loopne
(bad)
aas
push
mov
add
pop
sti
nop
ss
add
sbb
inc
add
inc
ds
(bad)
mov
ror
stc
push
push
mov
jns
stos
lea
rcr
cmp
or
mov
and
dec
js
call
fcmove
or
jmp
lods
sahf
push
loop
dec
les
xchg
aam
push
(bad)
stos
mov
out
stos
add
lock
imul
mov
fist
add
sub
adc
shr
addr16
pop
jnp
in
ret
add
mov
nop
jno
add
or
(bad)
cmp
les
aad
div
and
pop
jnp
jno
xchg
jle
mov
sbb
add
pop
in
stos
dec
popf
cs
pop
ds
retf
rcl
stos
fbld
mov
cdq
js
fsub
out
or
or
(bad)
lods
mov
cmc
xchg
xchg
or
in
js
cmc
aad
arpl
sar
xchg
mov
les
lahf
xchg
icebp
lahf
xchg
jne
(bad)
stc
add
or
jg
sub
adc
pop
xchg
icebp
lahf
xchg
icebp
cdq
ins
cmp
xchg
icebp
lahf
xchg
icebp
fwait
push
xor
mov
fist
pop
xchg
icebp
lahf
dec
cmc
adc
pop
xchg
icebp
lahf
xchg
icebp
lahf
xchg
cmc
or
retf
sub
arpl
adc
pop
xchg
icebp
and
xor
icebp
lahf
xchg
icebp
lahf
xchg
mov
and
add
lahf
xchg
icebp
lahf
xchg
cmp
xchg
icebp
lahf
xchg
sub
adc
xor
add
xchg
icebp
lahf
xchg
icebp
lahf
xchg
cmc
mov
pop
icebp
lahf
xchg
icebp
lahf
xchg
sub
jb
icebp
pop
xchg
icebp
lahf
xchg
cmc
mov
xor
lahf
xchg
icebp
lahf
xchg
icebp
lahf
fstp
icebp
pop
xchg
icebp
mov
fdivr
sub
cmp
mov
ja
stos
cmp
and
push
aaa
and
cdq
inc
pushf
or
inc
jb
pop
mov
mov
adc
add
outs
mov
add
bt
add
in
and
cmp
xor
popa
mov
xor
push
jne
push
xor
pop
cwde
aad
popf
dec
sub
arpl
test
(bad)
repnz
push
inc
js
scas
mov
xor
ret
aad
jle
cmps
bound
push
mov
mov
les
add
pop
loope
les
sub
mov
xchg
add
cld
ja
xor
jmp
push
xchg
sub
add
pop
jmp
jno
push
dec
cdq
test
mov
popf
add
cmps
cmps
pop
ds
rol
xchg
ds
in
aas
adc
inc
icebp
cdq
int3
push
xor
sahf
inc
lds
jmp
ret
jnp
add
(bad)
xchg
aam
xor
sbb
push
and
imul
iret
aam
adc
iret
jmp
mov
sub
gs
pop
jnp
add
loopne
push
sbb
scas
adc
add
clc
scas
inc
jp
push
mov
sbb
int
mov
inc
push
adc
mov
adc
adc
test
mov
mov
adc
leave
scas
mov
adc
repz
std
mov
adc
mov
enter
adc
inc
push
mov
sbb
mov
sbb
imul
retf
or
movs
xchg
sbb
push
inc
hlt
sub
pop
lds
add
mov
and
into
inc
loopne
into
(bad)
out
rcl
add
into
inc
loopne
into
inc
loopne
into
inc
loopne
cmp
and
into
inc
loopne
sbb
add
into
inc
loopne
into
inc
loopne
into
xchg
aam
sub
and
into
inc
loopne
into
inc
loopne
pop
mov
add
pop
sti
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
stos
stc
test
or
into
inc
loopne
into
inc
loopne
into
inc
loopne
aam
(bad)
pop
push
mov
cmp
into
inc
loopne
into
inc
loopne
cmp
sbb
inc
loopne
dec
mov
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
aaa
pusha
sti
cmp
sub
and
into
inc
loopne
into
pop
fstp
inc
loopne
repz
inc
sub
sbb
inc
loopne
into
inc
loopne
xor
out
adc
jecxz
fadd
movs
mov
sbb
inc
loopne
into
inc
loopne
into
cmp
ja
out
aad
pusha
sbb
inc
loopne
into
rcl
into
inc
and
into
(bad)
out
into
inc
mov
sbb
(bad)
out
adc
movs
xor
sub
and
into
inc
loopne
into
inc
loopne
or
arpl
(bad)
sahf
xor
fcomp
rcl
add
sbb
inc
loopne
into
inc
loopne
into
rcl
into
inc
and
into
inc
cmc
ds
mov
sbb
inc
loopne
into
inc
loopne
dec
fcmovbe
into
sub
xchg
fcom
(bad)
mov
cmp
sbb
inc
loopne
into
inc
cmc
ds
cmp
into
inc
loopne
into
inc
loopne
into
xchg
mov
into
inc
loopne
into
inc
loopne
or
jnp
aad
loopne
into
inc
loopne
into
inc
loopne
or
add
rcl
into
inc
loopne
into
inc
loopne
or
sbb
inc
loopne
into
inc
loopne
into
inc
out
dec
cmp
aad
mov
push
gs
jmp
add
pop
mov
xchg
pop
jnp
sub
and
into
inc
cmc
fist
les
into
inc
and
into
inc
loopne
dec
cmp
aad
nop
in
mov
jnp
adc
data16
cmp
sbb
inc
loopne
into
inc
loopne
or
std
mov
push
into
sub
sbb
inc
loopne
pusha
cmp
aad
mov
out
pusha
addr16
sub
sti
add
inc
and
into
inc
loopne
into
inc
loopne
dec
shl
aad
cmp
lock
(bad)
cli
rcl
into
inc
loopne
or
sbb
inc
loopne
into
inc
loopne
into
xchg
sub
inc
mov
sahf
add
jecxz
sti
xor
inc
(bad)
jmp
sbb
inc
loopne
into
inc
loopne
into
ret
jmp
aad
cmp
test
pop
out
jmp
inc
loopne
into
inc
loopne
or
inc
loopne
into
inc
loopne
into
inc
loopne
dec
add
sbb
inc
loopne
into
fld
pushf
cmp
sbb
inc
loopne
into
inc
cmc
ds
cmp
into
inc
loopne
into
inc
loopne
dec
fcmovbe
into
sub
xchg
fcom
(bad)
mov
cmp
sbb
inc
loopne
sbb
add
pop
loopne
into
inc
loopne
into
xchg
and
into
inc
loopne
into
inc
loopne
or
jnp
aad
loopne
into
inc
loopne
into
shl
inc
aad
cmp
sub
loopne
into
inc
loopne
into
inc
loopne
or
sbb
inc
loopne
into
inc
loopne
into
inc
out
dec
cmp
aad
mov
push
gs
jmp
add
pop
mov
xchg
pop
jnp
sub
and
into
inc
loopne
into
inc
cmc
fist
les
into
inc
and
into
inc
loopne
into
inc
loopne
dec
cmp
aad
nop
in
mov
jnp
adc
data16
cmp
sbb
inc
loopne
into
inc
loopne
into
inc
in
aad
and
inc
test
sbb
inc
loopne
pusha
cmp
aad
mov
out
pusha
addr16
sub
sti
add
inc
and
into
inc
loopne
into
inc
loopne
dec
shl
aad
cmp
lock
(bad)
cli
rcl
into
inc
loopne
or
sbb
inc
loopne
into
xchg
sub
inc
mov
sbb
inc
loopne
add
(bad)
fdivr
xor
inc
(bad)
jmp
sbb
inc
loopne
into
ret
jmp
aad
cmp
sub
add
sbb
jle
bound
jecxz
rcl
inc
and
into
inc
out
into
inc
and
into
inc
loopne
(bad)
fadd
ret
les
into
inc
loopne
into
inc
loopne
into
cmp
mov
(bad)
cmp
(bad)
sbb
inc
loopne
into
inc
loopne
jmp
sbb
inc
loopne
into
inc
loopne
push
xor
std
push
test
cwde
add
sub
fist
mov
and
into
inc
loopne
into
inc
loopne
push
shr
(bad)
jmp
sbb
inc
loopne
cmp
into
inc
loopne
into
inc
loopne
into
inc
out
jmp
inc
loopne
cmp
sbb
inc
loopne
dec
cmp
aad
mov
sbb
(bad)
(bad)
xchg
sub
add
sbb
inc
loopne
pusha
mov
mov
data16
popf
inc
mov
cmp
aad
test
sub
out
call
inc
loopne
into
inc
loopne
jmp
sbb
inc
loopne
fcmovb
out
aad
cmp
and
add
fsub
inc
aad
cmp
adc
inc
and
into
inc
loopne
into
inc
loopne
or
sti
add
inc
and
into
inc
loopne
or
jnp
adc
jecxz
fist
les
jmp
sbb
inc
loopne
aam
(bad)
lahf
ins
mov
ds
pushf
test
sub
sbb
inc
loopne
into
(bad)
out
nop
pop
jnp
ds
out
jae
out
call
inc
loopne
into
inc
loopne
jmp
sbb
inc
loopne
push
data16
arpl
sbb
inc
loopne
into
inc
loopne
add
(bad)
(bad)
jmp
sbb
ret
jmp
aad
cmp
jl
fist
inc
loopne
into
inc
(bad)
fist
test
add
pop
mov
sbb
inc
loopne
fs
and
rcl
into
inc
loopne
into
inc
into
fst
arpl
pushf
cmp
sbb
inc
loopne
push
inc
aad
nop
pushf
cmp
sbb
inc
loopne
into
inc
out
into
inc
and
into
xchg
sub
inc
mov
sbb
inc
loopne
into
cmp
div
(bad)
fist
mov
jnp
mov
push
ds
inc
and
into
(bad)
fcomp
inc
loopne
into
inc
loopne
cmp
push
mov
mov
sbb
inc
loopne
into
inc
loopne
push
(bad)
(bad)
jmp
test
rcl
into
inc
and
into
inc
loopne
sbb
add
pop
loopne
into
inc
loopne
into
inc
loopne
into
inc
out
mov
cmp
cmp
pop
pushf
cmp
sbb
inc
loopne
into
inc
loopne
or
sbb
inc
loopne
into
xchg
sub
inc
mov
sbb
inc
loopne
aam
fnstcw
dec
mov
sbb
inc
loopne
into
xchg
(bad)
(bad)
sub
loopne
into
inc
loopne
into
fxch
pushf
cmp
sbb
inc
loopne
into
inc
loopne
into
inc
cmc
ds
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
mov
cmp
cmp
cmp
arpl
sbb
inc
loopne
into
inc
sti
jecxz
fadd
movs
mov
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
sbb
lds
cwde
push
sub
inc
mov
sbb
inc
loopne
into
rcl
shr
add
into
inc
and
into
inc
loopne
dec
mov
stos
dec
mov
sub
push
sub
inc
mov
sbb
inc
loopne
cmp
sbb
inc
loopne
dec
mov
sbb
inc
loopne
dec
inc
les
into
inc
loopne
into
inc
loopne
push
xor
cld
push
es
les
sbb
cmp
sbb
inc
loopne
into
inc
loopne
adc
cld
add
inc
loopne
into
inc
loopne
dec
ret
retf
cwde
sbb
test
retf
test
jmp
pop
(bad)
out
jae
jmp
scas
mov
dec
ret
rcl
test
jmp
out
or
dec
mov
(bad)
(bad)
fmul
mov
aad
aam
or
add
push
cs
sub
adc
adc
ret
cmp
std
cmp
test
cmp
ret
cmp
imul
sub
inc
inc
or
sbb
aam
lds
inc
mov
ret
arpl
sub
push
imul
add
pop
mov
mov
sub
loop
pop
mov
int
pop
mov
shl
test
add
fsubr
mov
mov
(bad)
ficomp
adc
sub
add
int
imul
ds
or
adc
xchg
push
lea
(bad)
sub
sub
mov
inc
sub
and
test
add
jg
mov
aad
(bad)
jg
add
pop
aad
hlt
jb
lea
mov
pop
mov
aad
jmp
mov
mov
sbb
jl
ror
cmp
inc
inc
cmp
lds
dec
lds
(bad)
out
push
dec
lds
dec
lds
dec
inc
lock
dec
lds
dec
lds
dec
add
dec
lds
dec
lds
iret
ss
dec
lds
dec
lds
or
adc
sub
adc
ins
lds
dec
(bad)
mov
lds
dec
vcomiss
jbe
dec
lds
leave
add
dec
lds
dec
lds
sar
stos
ins
lds
dec
lds
or
sub
jbe
dec
lds
and
push
(bad)
and
push
fimul
jbe
leave
inc
add
lds
dec
lds
dec
test
mov
lds
dec
lds
dec
test
scas
sar
add
ins
lds
dec
lds
and
adc
lods
xor
loope
pop
dec
lds
dec
lds
fdiv
in
cmp
lds
dec
lds
dec
lds
sub
mov
aam
(bad)
fdivp
lods
cmps
mov
fistp
xchg
lds
cmp
lahf
xor
cmp
push
fld
or
pop
loopne
into
inc
loopne
into
inc
loopne
into
pop
fidivr
arpl
jecxz
fadd
movs
mov
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
cmp
sbb
inc
loopne
into
inc
loopne
or
jecxz
rcl
sub
and
into
inc
loopne
nop
xchg
(bad)
(bad)
push
adc
(bad)
fcomp
(bad)
nop
mov
loopne
into
inc
loopne
into
inc
loopne
dec
ret
fcmovne
or
xor
ds
mov
retf
inc
mov
sbb
inc
loopne
into
(bad)
push
push
data16
arpl
sbb
inc
loopne
nop
xchg
(bad)
stos
mov
add
xor
push
ds
popw
jae
arpl
sbb
inc
loopne
into
(bad)
out
fild
sbb
inc
loopne
push
aaa
fidivr
aas
leave
out
jmp
sbb
inc
loopne
push
jne
jmp
into
inc
loopne
in
inc
pusha
sbb
inc
loopne
into
inc
loopne
into
rcl
into
inc
and
into
inc
loopne
into
inc
loopne
or
loopne
into
inc
loopne
into
inc
loopne
aas
sbb
jmp
in
mov
leave
out
jmp
sahf
xor
adc
les
adc
and
into
inc
loopne
into
inc
loopne
push
mov
retf
inc
mov
sbb
sar
sbb
add
or
pop
stc
mov
mov
sub
adc
aad
loopne
into
inc
loopne
into
inc
in
push
adc
stos
mov
cmp
adc
fnstcw
push
sub
rol
(bad)
sub
loopne
into
rcl
into
inc
and
into
inc
loopne
into
pop
(bad)
jmp
sbb
inc
loopne
into
inc
loopne
sbb
ja
sub
in
mov
inc
les
add
and
dec
mov
icebp
adc
jecxz
add
add
scas
stc
push
add
mov
xchg
dec
dec
scas
push
ins
stc
push
call
jge
les
pop
in
imul
js
(bad)
sub
and
mov
xor
sbb
(bad)
movs
ror
sahf
adc
jmp
sbb
xchg
add
aas
imul
add
aad
cmp
shr
mov
sti
add
jg
adc
in
dec
inc
test
(bad)
push
dec
mov
push
in
movs
sti
inc
sbb
add
sbb
data16
cli
add
das
(bad)
(bad)
lds
pop
pop
xor
(bad)
cld
aam
rcl
les
mov
aad
dec
sahf
push
jecxz
aaa
(bad)
fdivr
add
pop
hlt
sahf
adc
sub
test
enter
xchg
push
push
sbb
std
pop
mov
ds
xor
les
push
push
retf
xchg
dec
pop
sbb
fisub
xor
rcr
das
addr16
mov
mov
lock
fucomip
mov
cdq
sbb
lahf
scas
ins
mov
add
test
and
mov
int
rcr
mov
mov
jmp
rcr
jmp
in
fwait
adc
jne
fdiv
rcr
jmp
in
cdq
fwait
xchg
rcr
mov
lahf
jmp
rcr
jns
repnz
xchg
rcr
jmp
rcr
jmp
in
mov
cmc
pop
jmp
rcr
enter
jmp
rcr
jmp
rcr
lock
lahf
jmp
rcr
cmp
mov
sar
inc
sbb
inc
jne
mov
push
sub
xor
cmp
xor
les
push
stos
paddsw
inc
add
nop
adc
nop
fidiv
add
inc
loopne
into
inc
loopne
dec
xor
cli
push
es
cmp
sbb
inc
loopne
into
inc
out
jmp
inc
loopne
into
inc
loopne
pop
mov
mov
into
inc
and
into
(bad)
(bad)
(bad)
sub
inc
xor
into
inc
stc
or
rol
sbb
and
into
inc
loopne
into
inc
loopne
enter
into
inc
loopne
into
inc
loopne
into
inc
(bad)
xor
into
inc
loopne
push
fcomi
add
add
into
inc
loopne
dec
add
stos
push
mov
retf
sbb
inc
and
into
inc
loopne
pop
arpl
shr
aaa
movntps
xor
fadd
jmp
mov
sbb
inc
loopne
jecxz
mov
sbb
inc
and
into
inc
loopne
into
inc
loopne
jecxz
and
into
inc
loopne
into
inc
loopne
into
add
ds
pop
or
je
imul
sbb
es
out
call
inc
loopne
into
inc
loopne
fsubr
lock
jmp
mov
sbb
inc
loopne
mov
cmps
aas
into
inc
mov
sbb
inc
loopne
xchg
pop
aad
cs
(bad)
addr16
mov
inc
loopne
mov
(bad)
mov
fldenv
mov
jge
hlt
jmp
test
sbb
cmp
data16
cmp
fbld
adc
rol
sub
call
sub
xor
cmp
aad
movs
iret
(bad)
fsubp
inc
ins
into
mov
sti
pop
cmp
jecxz
fld
mov
ret
pop
push
xor
or
sbb
add
cmc
lea
popa
pop
je
(bad)
ficomp
or
pop
stos
aad
inc
cmps
push
pop
ds
mov
jmp
fdiv
mov
les
cld
aad
ja
adc
or
loop
retf
data16
cmp
rcr
ds
push
ds
sti
sbb
push
push
mov
test
fsubr
inc
rcl
inc
lds
jo
sub
add
pop
(bad)
jb
dec
and
(bad)
push
cmps
add
ret
jp
mov
sub
fndisi(8087
sti
(bad)
fild
cmc
aas
push
inc
sub
in
and
jb
int
add
pop
inc
aas
jbe
pop
sbb
or
test
lds
ds
cmp
retf
and
ret
(bad)
inc
fcmovu
out
push
leave
loopne
jb
pusha
les
shl
jo
leave
pusha
mov
leave
loopne
jb
pusha
in
jo
test
inc
stos
mov
pop
stos
lock
popa
test
mov
push
lock
shr
cmp
mov
into
sub
movs
xor
xchg
push
(bad)
sbb
sub
(bad)
sub
jmp
pop
xor
leave
push
mov
add
mov
inc
cmp
and
push
jecxz
add
push
pop
ficom
scas
cmp
jb
add
mov
aas
adc
xchg
push
cdq
fisttp
push
sbb
fld
push
fldenv
sub
iret
jmp
adc
cmp
out
out
lock
add
and
jmp
(bad)
jmp
cmp
ret
cmp
mov
jnp
xchg
int
mov
push
(bad)
sbb
(bad)
push
mov
pop
sahf
push
loop
das
adc
sub
inc
stc
ret
(bad)
aas
add
sbb
aad
cmp
nop
and
add
repnz
add
imul
mov
shr
mov
cmp
pop
sti
adc
lea
fimul
jle
push
stos
and
or
and
jmp
test
test
out
std
xchg
int
inc
repz
les
xlat
add
fsubr
xchg
sub
fld
dec
cdq
inc
test
clc
sar
mov
push
adc
retf
retf
xchg
or
jmp
loope
or
cmp
test
mov
and
in
shl
push
xor
test
in
or
gs
xor
scas
mov
dec
jo
out
jo
sub
loope
popf
(bad)
js
hlt
lock
mov
loope
mov
mov
dec
popa
lods
popa
inc
(bad)
sub
std
jmp
mov
(bad)
loope
sbb
ds
dec
xor
sub
scas
jecxz
jno
imul
bound
cmp
sub
psrad
test
in
dec
mov
lods
ret
in
or
and
pop
(bad)
in
xchg
loope
or
xor
inc
(bad)
sub
std
jmp
mov
(bad)
loope
sbb
ds
inc
cmp
and
scas
jecxz
jno
imul
bound
cmp
sub
psrad
xor
and
mov
js
hlt
mov
into
jno
jmp
mov
loope
cdq
and
lods
pop
mov
sub
cmp
mov
cld
int
adc
clc
cmp
sbb
mov
sbb
mov
clc
sub
fsubr
jo
sub
cmp
jno
sbb
mov
sbb
mov
loop
(bad)
mov
cmp
push
icebp
or
cmp
clc
xor
cmp
cdq
movs
mov
cld
push
ss
mov
and
clc
mov
dec
cmp
push
mov
jnp
push
inc
hlt
(bad)
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
push
or
mov
mov
inc
(bad)
jmp
adc
daa
xchg
adc
(bad)
clc
and
and
add
or
popf
(bad)
loopne
mov
dec
cmps
push
add
push
add
lea
add
jnp
adc
push
add
cwde
cs
mov
popa
in
pop
aas
cmp
and
add
(bad)
rcl
add
mov
cmp
ret
(bad)
aas
dec
fld
call
pop
(bad)
sub
add
add
or
in
stos
or
xchg
cmp
mov
and
cmp
mov
adc
push
int3
sbb
push
loop
cmp
in
fdiv
xor
ds
mov
test
cdq
push
shr
bound
inc
mov
push
das
add
add
xchg
movs
adc
ret
cli
mov
push
pop
mov
add
add
xor
mov
nop
cmc
pop
enter
sti
add
or
(bad)
and
pop
cmp
fimul
arpl
pop
mov
(bad)
push
add
aad
(bad)
pop
sti
or
ds
pop
mov
ds
or
xchg
or
mov
dec
inc
sbb
and
stos
jnp
pop
movs
sahf
or
pushf
cmp
test
mov
pushf
cmp
cmp
mov
mov
pushf
cmp
cmp
jp
mov
pushf
cmp
mov
shl
sar
mov
shl
test
scas
mov
pushf
cmp
mov
pushf
cmp
xor
jae
repz
push
xchg
xor
aam
mov
mov
pushf
cmp
mov
fnstcw
ja
js
push
pop
js
rcr
cdq
in
stos
sbb
lods
mov
pop
sahf
push
pop
js
push
pop
js
push
fist
mov
dec
inc
arpl
push
pop
cmp
ja
pop
or
stos
pop
sahf
push
pop
js
push
or
cmp
cmp
mul
pop
js
push
pop
js
push
pop
xor
sub
cmp
cmps
mov
xchg
mov
sbb
ja
pop
sub
stos
pop
sahf
push
pop
js
push
pop
js
push
adc
push
push
pop
js
push
pop
js
lods
stos
xchg
pop
mov
jecxz
and
(bad)
cli
push
pop
js
push
pop
js
push
pop
js
pop
lahf
stos
jmp
js
push
pop
cmp
cmps
mov
xchg
mov
sbb
ja
pop
sub
stos
pop
sahf
push
pop
js
push
pop
js
push
pop
js
xchg
lea
push
pop
js
lods
stos
xchg
pop
mov
jecxz
and
(bad)
cli
push
pop
js
push
pop
mov
sub
ficom
mov
cmp
cdq
stos
push
pop
js
push
pop
js
xchg
outs
jecxz
sub
(bad)
cli
push
pop
js
push
pop
js
push
pop
js
enter
jg
pop
cli
jp
call
xor
int3
cmps
jnp
push
push
pop
js
aad
loop
cmps
jnp
push
push
pop
js
push
pop
js
mov
cmc
xchg
lea
push
pop
js
push
pop
js
push
mov
mov
pop
push
push
pop
js
push
pop
js
push
pop
mov
sti
push
add
call
push
pop
js
push
pop
js
cdq
mov
js
push
pop
js
rcr
sbb
sub
pushf
mov
push
pop
js
xchg
inc
js
push
pop
js
push
pop
jle
push
pop
js
push
pop
and
popa
lods
retf
fstp
push
push
pop
js
push
pop
js
cmp
cmp
js
push
pop
js
push
pop
js
push
sbb
mov
stos
push
cmps
jne
jnp
in
pop
cmp
test
cmp
jnp
pop
push
pop
js
push
lahf
es
pop
ficom
js
push
pop
js
push
pop
mov
fisub
pop
js
push
pop
js
push
pop
(bad)
cmc
aas
mov
push
pop
js
push
pop
js
cdq
cmp
push
pop
js
push
xchg
mov
pop
js
push
pop
js
push
pop
js
cmp
test
cmp
pop
js
push
(bad)
div
mov
inc
cmp
jnp
pop
pop
sahf
push
pop
js
push
pop
js
push
pop
cmp
push
or
jmp
ins
cmp
js
push
pop
js
outs
dec
or
sahf
push
pop
js
push
pop
inc
retf
cmps
cli
test
push
pop
js
push
pop
inc
retf
es
js
push
pop
js
inc
stos
sahf
cli
mov
pop
push
push
pop
js
push
pop
js
adc
pushf
cmp
fisttp
and
mov
iret
cmps
jnp
push
push
pop
js
push
pop
js
(bad)
les
cmp
js
push
pop
js
xchg
das
xchg
lods
mov
popf
and
mov
cmp
js
push
pop
js
jb
adc
pop
js
push
pop
js
cmp
test
sbb
mov
push
mul
pop
js
push
pop
(bad)
not
js
push
pop
js
aad
mov
push
push
pop
js
push
pop
js
outs
or
push
push
pop
js
push
sbb
mov
sub
sub
lds
bound
outs
fwait
add
mov
pushf
cli
ja
js
push
pop
js
push
pop
js
push
or
push
push
pop
js
push
pop
js
push
pop
cmp
push
cmp
push
pop
js
push
pop
js
lea
inc
fidivr
mov
xor
pop
sahf
push
pop
js
push
pop
js
adc
jle
push
pop
js
push
pop
(bad)
pop
js
push
pop
js
push
pop
js
push
pop
sub
fiadd
cmp
mov
or
push
push
pop
js
push
pop
sub
mov
dec
add
cli
lods
fwait
pushf
cmp
and
sbb
cld
imul
pushf
cmp
adc
sub
js
enter
cmps
jnp
sahf
push
pop
js
push
pop
js
lahf
mov
js
push
pop
js
push
pop
js
adc
mov
enter
cmps
sti
push
outs
jae
mov
cmps
jnp
or
push
add
stos
sbb
arpl
pop
sub
stos
pop
sahf
push
pop
js
push
pop
js
push
pop
js
mov
les
cmp
js
push
pop
js
rol
ret
cli
mov
arpl
jp
cld
imul
push
push
pop
js
cmp
js
push
pop
js
push
pop
clc
aam
mov
js
push
pop
mov
int3
cmps
jnp
push
push
pop
js
push
pop
js
push
pop
fdiv
xor
dec
popf
lods
ja
js
push
pop
js
push
pop
sub
imul
lea
cmps
jnp
or
pop
add
stos
pop
pop
push
pop
js
push
pop
js
push
xchg
das
mov
pushf
cmp
fisttp
and
xor
int3
cmps
jnp
push
push
pop
js
push
pop
js
(bad)
les
cmp
js
push
pop
js
push
pop
js
scas
lea
push
pop
xchg
lods
mov
push
add
cmp
imul
add
jns
mov
mov
jecxz
es
cli
push
pop
js
push
pop
js
push
pop
js
enter
cmps
jnp
aas
and
pop
js
push
pop
js
outs
sti
push
inc
mov
sbb
inc
mov
js
push
pop
jl
ja
jecxz
jnp
(bad)
cli
push
pop
js
push
pop
js
push
pop
dec
fmul
js
push
pop
js
push
pop
js
inc
pop
mov
sbb
js
push
pop
js
push
pop
js
adc
jle
push
pop
js
push
pop
js
push
pop
jl
aaa
bound
mov
add
adc
pop
js
push
pop
cmp
aaa
bound
xchg
lea
push
pop
js
push
pop
js
mov
jnp
aas
jl
(bad)
cli
push
pop
js
push
pop
js
push
lahf
xchg
sub
cmp
sahf
stos
push
pop
js
push
pop
js
push
pop
js
xchg
das
xchg
lods
mov
fcomp
jbe
cld
imul
(bad)
cli
jecxz
mov
push
push
pop
js
jecxz
adc
cmps
jnp
push
push
pop
js
arpl
pop
or
stos
pop
sahf
push
pop
js
push
pop
js
push
pop
cmp
jnp
pop
mov
push
pop
js
push
pop
js
push
pop
js
mov
les
cmp
js
push
pop
js
push
pop
js
ss
test
aaa
ja
shl
ss
push
neg
mov
jbe
push
inc
dec
pop
dec
inc
je
sub
jnp
into
shl
sub
pop
ds
or
sub
aas
shl
mov
test
movs
add
dec
ins
inc
push
inc
clc
and
scas
mov
rcl
sbb
or
jno
sub
push
xchg
ins
bound
cmc
fisttp
push
jne
mov
aad
(bad)
das
les
nop
pop
push
jno
daa
pop
bound
cmp
push
mov
sti
add
dec
int
lods
pop
dec
jg
in
pop
aad
mov
push
xchg
push
add
add
mov
or
xlat
pop
adc
fwait
xchg
ds
fldcw
mov
jmp
push
std
add
outs
fs
jmp
push
adc
push
jmp
adc
cli
mov
jmp
add
pop
(bad)
fcom
pop
hlt
sahf
push
loop
push
shl
mov
mov
mov
movs
ds
cdq
add
add
movs
shr
addr16
mov
add
sbb
aad
in
jmp
jge
mov
xchg
add
(bad)
(bad)
push
pop
add
pop
jmp
(bad)
xchg
or
call
inc
in
cli
ins
fcomi
fstp
scas
pop
in
or
mov
enter
enter
fstp
cs
ins
or
push
xor
in
sub
pop
dec
call
cmc
adc
js
xchg
jl
pop
inc
and
or
call
hlt
ror
sub
adc
and
(bad)
fild
push
int
xor
or
scas
push
dec
outs
and
inc
mov
jbe
int
ss
xlat
ja
adc
mov
mov
prefetch
fbld
inc
cmp
sub
push
jne
or
push
jne
or
push
cmc
ss
push
outs
or
push
cmc
mov
sub
mov
mov
enter
les
xchg
enter
enter
lods
add
dec
push
jne
pop
xchg
or
jmp
mov
aam
inc
mov
jmp
dec
test
jne
lea
adc
xbegin
or
mov
enter
les
gs
jmp
mov
enter
fsubr
lock
sbb
inc
iret
aas
inc
push
mov
jmp
stos
pop
loope
xor
in
jmp
mov
jecxz
popa
gs
mov
enter
enter
ins
int
xchg
or
mov
enter
into
add
inc
jl
mov
or
mov
enter
out
cmp
cld
push
(bad)
in
jmp
mov
enter
pop
sbb
sbb
mov
mov
enter
std
in
in
cld
ins
push
icebp
mov
test
jmp
lock
fstp
xchg
enter
enter
fstp
xchg
enter
enter
fstp
xchg
enter
enter
in
or
mov
enter
test
out
sub
xchg
addr16
sbb
loope
or
movs
pop
and
xchg
enter
enter
enter
cld
add
jmp
mov
enter
aam
xchg
xchg
or
mov
enter
enter
mov
inc
cmc
adc
das
adc
xchg
or
jnp
gs
jb
in
sbb
xchg
mov
mov
enter
enter
loope
ins
gs
jb
out
sbb
xchg
mov
mov
enter
enter
aam
xchg
xchg
or
mov
enter
enter
movs
int
xchg
or
mov
enter
int3
mov
pop
mov
jmp
mov
int3
mov
popa
gs
mov
enter
into
int3
mov
mov
mov
enter
in
jmp
mov
enter
int3
mov
adc
fwait
aam
hlt
movs
int
xchg
or
mov
enter
enter
in
aam
je
int
xchg
or
mov
enter
in
cwde
dec
mov
enter
int
xchg
or
mov
enter
enter
in
or
ins
gs
fldcw
mov
add
jmp
mov
les
gs
jmp
mov
fisttp
jl
push
jne
int
xchg
or
mov
enter
enter
loop
dec
mov
dec
sub
jne
int
xchg
or
mov
int3
inc
sub
push
movs
int
xchg
or
mov
enter
in
jl
paddq
xchg
xchg
or
mov
enter
shr
mov
enter
into
int3
mov
mov
mov
cmc
out
xchg
xchg
dec
jmp
mov
(bad)
hlt
les
xchg
add
ja
gs
or
mov
enter
enter
call
sbb
(bad)
aad
inc
leave
mov
mov
cdq
or
sub
call
movs
int
xchg
or
mov
int3
mov
pop
mov
jmp
mov
enter
int3
mov
push
jne
jmp
mov
enter
out
inc
jne
and
and
int
xchg
or
mov
enter
clc
pop
push
outs
lods
or
aaa
mov
ins
inc
jne
outs
xchg
addr16
sbb
and
gs
jmp
mov
enter
les
xchg
enter
enter
enter
sbb
inc
mov
jmp
mov
enter
test
mov
add
jmp
and
mov
dec
jne
out
inc
sbb
jne
inc
xor
jl
sbb
xor
stos
mov
movs
inc
dec
cld
int
xor
add
in
rol
and
pop
mov
sbb
sbb
leave
cmps
inc
les
clc
shr
jnp
mov
lds
(bad)
sub
and
add
lea
scas
sbb
jnp
push
enter
inc
clc
pop
(bad)
sar
and
aas
xor
fdivr
inc
or
add
adc
ds
rcr
(bad)
out
jmp
cdq
hlt
(bad)
sub
out
les
xchg
(bad)
(bad)
pop
enter
movs
iret
stos
or
movs
(bad)
jmp
jbe
sbb
out
add
pop
push
sahf
push
jecxz
xor
push
pop
sub
push
les
imul
cdq
add
inc
pop
pop
xlat
cdq
out
cmp
es
pop
dec
(bad)
jmp
aas
adc
mov
adc
bnd
push
xor
inc
jle
arpl
aas
push
adc
cmp
mov
add
or
cmc
mov
cmps
outs
add
push
push
cmp
xchg
or
(bad)
sub
pop
mov
shr
addr16
sti
test
pop
jnp
mov
movs
add
sti
fild
scas
pop
mov
ins
rcr
dec
rcr
dec
rcr
leave
sbb
fild
rcr
dec
xchg
jmp
hlt
pop
out
in
cmps
pop
mov
ins
rcr
dec
rcr
dec
rcr
dec
jg
imul
add
sti
dec
ror
fisubr
or
pop
jne
mov
out
jns
fisubr
scas
pop
loope
jbe
mov
or
pop
push
repz
and
sub
mov
aad
loopne
fidivr
test
sub
add
(bad)
(bad)
cmp
xor
push
mov
cmp
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
xor
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
and
jp
out
jmp
les
out
out
int
push
(bad)
inc
jp
pop
cmp
(bad)
jmp
add
mov
pop
push
lods
(bad)
inc
pop
pop
adc
jnp
adc
inc
sub
lds
push
ud0
arpl
sub
(bad)
lods
js
movs
(bad)
sub
sub
sub
xor
jmp
or
pop
mov
add
or
cld
add
mov
mov
and
dec
les
fbstp
pop
std
dec
add
int
aam
xor
lods
adc
int3
add
mov
add
pop
sti
nop
adc
bound
mov
scas
pop
mov
and
sar
aad
mov
jle
scas
or
aad
mov
push
jecxz
aas
push
dec
in
jmp
jo
enter
cmps
and
mov
xchg
dec
fild
sbb
sti
jb
sbb
push
pop
add
cdq
sub
(bad)
in
jmp
outs
pop
xchg
dec
pop
mov
and
push
dec
les
test
mov
sti
xor
aas
mov
aaa
cmp
mov
jae
sub
in
mov
and
jge
data16
mov
popa
cmp
ins
std
jmp
cmps
sub
data16
cmp
aas
out
mov
jmp
in
mov
sti
xor
jmp
push
fs
ss
ss
ss
ss
gs
rol
(bad)
pop
inc
or
aas
rol
(bad)
sbb
adc
pop
pop
jb
ss
rol
(bad)
sbb
adc
pop
pop
jb
ss
rol
(bad)
sbb
iret
lds
fs
push
movs
push
sbb
add
rol
(bad)
push
add
rol
(bad)
popf
mov
aad
rol
(bad)
sbb
loope
or
jo
adc
rol
clc
jno
je
es
imul
popf
aas
fs
push
adc
(bad)
push
bound
rol
(bad)
sbb
add
gs
xor
dec
mov
push
sbb
add
push
pop
loop
lock
(bad)
push
and
rol
(bad)
sbb
ret
movs
shr
add
rol
loop
rol
(bad)
(bad)
add
rol
(bad)
sbb
adc
sbb
sbb
add
rol
(bad)
sbb
push
add
rol
(bad)
sbb
jo
add
rol
(bad)
sbb
add
sub
clc
aas
dec
jns
inc
push
mov
sbb
add
push
jnp
sub
sar
ss
rol
(bad)
fwait
dec
fsub
push
adc
(bad)
push
bound
rol
loop
aas
mov
pop
loop
sbb
mov
add
rol
xor
fs
loopne
gs
rol
(bad)
sbb
add
pop
pop
repnz
rol
shr
or
test
sbb
pop
neg
aaa
movs
push
sbb
add
rol
leave
lds
movs
inc
add
daa
add
and
jo
pusha
das
repnz
fnstsw
add
jae
rol
(bad)
sbb
add
retf
cmps
jle
lods
test
cmp
jnp
cmp
in
es
cmp
cld
out
out
test
sbb
add
rcr
repz
push
lds
vscalefss
inc
and
adc
(bad)
iret
inc
and
rol
(bad)
sbb
add
es
repz
cmp
and
neg
cmps
ins
mov
add
rol
inc
sbb
add
rol
clc
jg
movs
sbb
adc
fwait
push
sbb
add
rol
clc
aas
dec
sub
lds
movs
pop
loop
sbb
dec
mov
push
sbb
add
rol
int
es
push
movs
push
sbb
add
rol
pop
sbb
add
adc
in
es
iret
push
cmp
rol
(bad)
sbb
add
mov
and
mov
test
sbb
add
stc
cmp
neg
ss
mov
mov
test
sbb
in
popf
or
(bad)
(bad)
fdivr
ss
rol
(bad)
sbb
in
fwait
or
loop
icebp
(bad)
fdivr
ss
rol
(bad)
sbb
add
cmp
out
jbe
push
push
mov
and
sbb
add
rol
jb
ss
rol
(bad)
sbb
loope
loope
pop
sub
in
xchg
or
(bad)
jmp
jae
push
and
movs
inc
sbb
add
xchg
fsubp
jno
daa
ret
cmp
fwait
popf
lahf
jns
fsubr
jbe
aas
cmp
pextrw
es
push
movs
push
sbb
add
rol
fsub
sub
es
(bad)
or
(bad)
div
fs
rol
neg
mul
cmp
pextrw
es
push
movs
push
sbb
add
rol
dec
lds
arpl
adc
(bad)
sbb
add
rol
out
ja
fsubr
ss
and
test
sbb
add
rcr
loop
jbe
cmc
add
fimul
or
fwait
xchg
rol
int3
push
and
rol
mov
inc
sti
div
bound
push
push
and
fs
push
add
rol
sar
bound
push
push
sub
jo
repz
(bad)
sbb
add
rol
(bad)
sbb
add
into
add
rol
inc
int3
retf
push
add
add
rol
(bad)
sbb
add
shl
daa
in
inc
and
movs
sbb
imul
sbb
ror
push
add
add
rol
(bad)
sbb
add
xchg
or
(bad)
jmp
je
test
sbb
sbb
add
dec
and
(bad)
test
sbb
push
in
mov
and
rol
(bad)
sbb
ret
mov
and
rol
(bad)
xchg
pop
pop
jb
rol
(bad)
sbb
add
fiadd
loop
rol
(bad)
sbb
inc
clc
int
je
inc
pop
mov
sbb
add
rol
jmp
movs
loope
jp
jl
es
mov
jp
push
lds
sbb
and
bnd
sahf
cmp
adc
(bad)
sbb
inc
loopne
into
inc
loopne
into
xchg
data16
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
sub
(bad)
(bad)
sub
cmp
inc
and
into
inc
loopne
shl
(bad)
(bad)
sub
add
push
add
push
add
push
add
push
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
aad
cmp
sub
add
sub
add
sub
add
aad
cmp
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
or
and
add
sub
add
sub
add
sub
add
nop
sbb
retf
test
sub
add
sub
add
sub
add
sub
add
sub
add
sub
adc
rol
and
cmp
xchg
fbstp
arpl
jg
add
adc
add
mov
sub
sub
jns
adc
and
shl
inc
lds
mov
scas
jp
cmp
fbld
imul
mov
shl
pop
(bad)
xor
cmc
sub
lds
sti
fsin
(bad)
jmp
or
mov
push
add
add
je
mov
js
shl
ffree
and
pop
js
out
lahf
xchg
inc
pop
cmp
xchg
dec
out
mov
int3
imul
mov
stos
or
add
sar
(bad)
jmp
push
pop
sbb
cmp
ret
(bad)
aas
shl
push
jmp
cli
ds
xor
sbb
add
pop
in
imul
lods
mov
ret
jmp
pop
jnp
test
or
fcomp
dec
fld
jo
add
(bad)
rcr
dec
popf
test
push
cdq
fadd
aad
in
stos
int
aad
pop
adc
sbb
push
inc
in
xlat
adc
push
add
imul
push
fst
add
pop
jmp
mov
xor
inc
mov
push
(bad)
out
lock
mov
call
pop
mov
dec
ja
jnp
mov
popa
mov
ins
pop
mov
dec
ja
push
(bad)
sub
dec
ja
mov
dec
mov
pushf
mov
pop
cmp
dec
ja
mov
mov
ins
xchg
dec
ja
mov
scas
test
pop
mov
(bad)
cwde
arpl
push
cmp
loop
arpl
scas
sub
loop
push
arpl
ins
xchg
push
test
add
xor
jmp
test
and
cmp
or
and
pop
addr16
adc
and
or
cld
add
xchg
aad
movs
mov
frstor
shl
push
cmp
xor
xchg
mov
jp
push
fmul
sub
mov
int
adc
shr
test
int
pop
pop
(bad)
(bad)
jmp
or
pop
fmul
arpl
jp
dec
mov
mov
bound
adc
add
pop
(bad)
cmp
call
aad
fiadd
out
(bad)
sub
mov
push
mov
sub
cmp
jb
(bad)
rol
pop
in
jmp
xchg
adc
(bad)
in
jmp
or
or
stos
add
add
push
loope
cmps
add
jae
(bad)
jmp
jp
mov
push
dec
(bad)
and
cmp
aad
cmp
cmps
out
aam
lods
rcl
xchg
ds
adc
cdq
(bad)
sahf
push
jecxz
cmp
push
sahf
push
jecxz
cmp
adc
sub
add
das
lds
inc
cmc
mov
aam
std
pop
(bad)
jo
mov
lea
pop
jnp
push
nop
addr16
xchg
lea
popf
fmul
fdiv
hlt
mov
mov
mov
mov
mov
mov
inc
movs
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
jno
xchg
add
push
mov
mov
mov
inc
add
cdq
mov
mov
mov
mov
mov
shl
dec
push
dec
out
dec
xchg
repz
shr
cmps
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
cmc
pop
les
repnz
xor
mov
mov
popf
xor
mov
mov
shl
xor
xor
nop
(bad)
loopne
push
call
mov
mov
mov
xchg
xor
xor
mov
mov
mov
repz
xor
sub
cmps
mov
mov
mov
mov
and
ja
inc
nop
push
sahf
dec
rcl
sub
nop
push
adc
sbb
push
test
scas
out
lods
into
pusha
sub
adc
mov
cmp
sahf
and
push
or
jmp
les
ds
fsubr
int
shr
fucom
add
lahf
mov
fstp
psllw
cmp
push
loop
retf
cmp
sub
sub
xchg
call
les
popf
mov
and
out
fdiv
loopne
jg
pop
cmp
lds
loop
xlat
sub
lock
aam
retf
jecxz
aam
mov
fdiv
sub
shl
pop
cli
(bad)
lock
(bad)
aas
dec
popf
add
sub
arpl
loopne
fisubr
mov
icebp
inc
add
es
pop
test
jbe
add
dec
mov
push
jecxz
and
mov
aad
jnp
mov
repz
(bad)
inc
aam
lds
(bad)
(bad)
rol
pop
jnp
aad
call
or
les
pop
mov
icebp
lock
stos
repnz
test
ret
(bad)
aas
test
add
cmp
push
test
out
jmp
or
cdq
add
popf
sti
pop
jnp
les
sub
sbb
das
lds
aad
into
nop
(bad)
add
add
jmp
xchg
sbb
mov
xchg
or
inc
clc
repz
or
push
inc
mov
inc
cld
(bad)
leave
inc
cld
ret
out
out
inc
pop
cld
cmps
mov
cmp
movs
jecxz
sub
cmp
and
cmp
loopne
sbb
rcr
add
rcr
or
and
xchg
pop
fwait
add
shr
jle
pop
std
xchg
fisubr
push
(bad)
fcomp
inc
loopne
into
inc
loopne
dec
mov
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
push
xor
jmp
es
and
sbb
lock
les
adc
sbb
dec
cmp
push
stc
jo
xchg
dec
dec
sar
xor
(bad)
adc
xor
jecxz
xor
add
xchg
rcl
inc
jbe
xchg
and
add
hlt
jb
dec
jg
adc
jle
sub
xchg
jle
cmc
xor
aam
adc
ret
shl
jp
shl
les
pop
jle
adc
cs
sub
jo
mov
(bad)
sub
cmp
sub
(bad)
sub
dec
test
cmp
sub
add
sbb
daa
jns
jns
jle
repz
sub
sub
inc
jno
cmp
inc
push
test
ret
cli
mov
fcom
inc
neg
mov
jmp
ret
cli
ds
jmp
inc
in
imul
ficomp
das
jb
dec
lds
les
iret
stos
int
lock
mov
mov
aad
cmc
sahf
adc
or
adc
jecxz
or
hlt
jmp
aaa
pop
std
cmp
sub
mov
sub
and
std
cmp
mov
(bad)
test
mov
adc
test
lds
test
pop
xor
mov
ja
fistp
sub
inc
mov
cwde
sbb
sbb
dec
xchg
cmp
call
mov
shl
mov
pop
or
adc
mov
ffree
sub
lds
stos
mov
ffree
xor
mov
sub
add
push
bound
sub
mov
(bad)
inc
loope
pop
rol
inc
mov
mov
out
test
mov
jno
ret
cmp
ret
(bad)
mov
in
sub
mov
out
aad
pusha
sbb
inc
loopne
push
xor
cld
sub
push
add
stos
jle
mov
add
push
es
and
mov
movs
stos
sub
(bad)
push
mov
pop
push
push
inc
pop
xchg
dec
stos
jmp
cli
test
mov
add
xchg
mov
push
aas
xchg
or
(bad)
cmp
mov
ret
add
out
(bad)
sub
sti
adc
mov
xchg
jbe
mov
retf
jle
rcr
cmp
jb
sub
sub
fcmovb
cmp
sub
dec
mov
jle
stos
cmp
jmp
ds
cdq
add
add
push
sub
(bad)
jp
inc
ror
icebp
sub
add
inc
sti
or
(bad)
cmp
dec
cli
add
push
pop
test
jmp
jecxz
or
push
sub
fcmovnb
cli
aas
imul
jmp
ret
(bad)
aas
test
jmp
add
iret
sar
fiadd
mov
cmp
call
mov
popf
add
lds
adc
jmp
nop
stos
rol
cmp
fnstenv
or
aas
mov
jnp
cli
shl
or
shl
fld
xlat
leave
push
and
cmp
mov
or
sbb
and
push
xchg
fisubr
jns
test
push
data16
add
and
cmp
mov
or
ror
sbb
dec
clc
cdq
mov
pop
cmp
mov
int
mov
sub
mov
or
cmp
mov
or
retf
or
cmp
mov
add
ficom
cmps
or
shl
push
xchg
mov
jo
or
les
(bad)
sub
push
popa
jb
aam
movs
xchg
xchg
iret
(bad)
leave
xchg
mov
xchg
push
sbb
leave
xchg
mov
inc
add
add
pushf
mov
pushf
push
xor
jmp
test
sbb
cmp
pop
sbb
arpl
pop
mov
cs
sbb
jae
fdivr
pop
(bad)
cmp
cmp
frstor
inc
std
jg
adc
arpl
or
xor
push
xor
cdq
aad
mov
push
arpl
or
inc
adc
cmp
pop
leave
gs
nop
jns
sub
fsubr
mov
retf
(bad)
sub
inc
inc
pop
cmp
aad
fiadd
pop
loop
push
cdq
mov
sub
and
cmp
jle
sub
out
jmp
shl
inc
push
fs
adc
out
lds
push
jecxz
push
adc
(bad)
jmp
jp
jne
ds
fmul
mov
rol
loopne
test
ret
cli
mov
(bad)
shl
push
mov
cmps
bound
nop
cmps
bound
jmp
mov
inc
pop
jle
pop
pop
popf
add
pop
in
stos
int
cmp
fdivr
aad
sti
sahf
adc
jmp
adc
repnz
nop
dec
(bad)
add
dec
hlt
add
pop
jnp
test
sbb
pop
push
sti
popa
push
push
inc
clc
loope
jle
nop
pop
test
jg
loope
int
fld
loopne
sub
leave
aaa
pop
add
das
fdiv
comiss
das
fdiv
comiss
test
push
inc
push
push
je
xchg
mov
pop
and
xchg
pop
add
mov
inc
pop
add
xchg
imul
fldlg2
aam
push
jle
fstp
jmp
and
mov
cmp
out
adc
inc
and
into
inc
loopne
into
inc
loopne
push
cmp
repnz
mov
sbb
inc
loopne
and
aaa
adc
lods
sub
sti
in
push
mov
rol
in
les
cdq
(bad)
sub
sub
stc
push
push
and
aam
adc
repz
xchg
jp
jmp
sub
gs
adc
adc
xor
sahf
push
loop
mov
push
sub
or
bound
jmp
mov
and
dec
add
div
push
jmp
push
add
(bad)
(bad)
stos
dec
(bad)
adc
add
jp
push
int
(bad)
sub
mov
fdivr
xor
lds
int
test
sti
lea
adc
cdq
inc
sahf
adc
fist
ror
or
sub
aad
mov
sbb
(bad)
nop
dec
cmp
aad
dec
aad
(bad)
jg
(bad)
ds
xchg
int3
in
mov
and
rol
sub
scas
les
int
cdq
pop
(bad)
es
jnp
push
jecxz
pop
test
jb
pop
outs
rcl
data16
add
and
out
push
add
sub
rol
sti
add
jecxz
cs
jnp
push
arpl
lahf
lock
jnp
push
add
mov
or
leave
mov
or
ret
dec
inc
int
leave
ret
leave
ret
leave
ret
dec
sub
jmp
out
popa
leave
ret
leave
ret
in
(bad)
repz
out
ds
rol
js
leave
ret
leave
ret
dec
(bad)
std
jmp
ret
leave
ret
leave
ret
cmp
clc
popa
leave
ret
leave
ret
leave
ret
ins
mov
fadd
leave
ret
push
sbb
test
les
test
ret
leave
ret
leave
push
loop
lock
xchg
push
es
test
ret
leave
ret
leave
ret
out
int
leave
ret
leave
ret
leave
ret
out
ror
daa
es
jmp
es
leave
ret
leave
ret
leave
ret
dec
cmp
(bad)
jle
jmp
loopne
xchg
rol
js
leave
ret
cmp
js
leave
ret
leave
ret
leave
ret
dec
aaa
bound
ret
leave
ret
leave
ret
pop
sub
mov
pop
aaa
arpl
leave
ret
leave
ret
leave
inc
int
leave
ret
leave
ret
leave
ret
call
loopne
cmc
and
sub
out
popa
leave
ret
leave
ret
rol
js
leave
ret
cmp
js
leave
ret
leave
ret
leave
ret
sti
sbb
cdq
cmovne
adc
daa
es
rcr
dec
test
dec
and
dec
(bad)
mov
int
mov
repnz
sti
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
cmp
into
inc
loopne
into
inc
loopne
dec
fcmovbe
into
sub
add
sub
add
sub
add
sub
add
sub
add
inc
inc
(bad)
stos
mov
test
mov
jmp
loopne
into
inc
loopne
into
inc
loopne
into
ret
retf
xchg
push
mov
(bad)
neg
push
cld
nop
cwde
ins
add
inc
loopne
into
inc
loopne
into
inc
loopne
push
sbb
add
pop
and
into
inc
loopne
or
inc
add
dec
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
push
das
in
add
inc
loopne
into
inc
loopne
into
inc
loopne
jmp
sbb
inc
loopne
into
inc
loopne
push
xor
(bad)
jmp
add
mov
cmp
into
inc
loopne
into
inc
loopne
into
mov
sub
sbb
cmp
sbb
inc
loopne
into
inc
loopne
push
jg
add
mov
mov
sbb
inc
loopne
adc
fxtract
xor
(bad)
sub
(bad)
aad
loopne
into
inc
loopne
sub
(bad)
sub
cmp
inc
and
into
inc
loopne
push
outs
sti
add
retf
sbb
test
dec
lock
(bad)
jmp
pop
push
cs
push
add
aam
sti
push
xchg
mov
js
or
jle
sub
dec
sti
push
js
sbb
les
sbb
add
mov
add
jg
pop
jns
daa
add
imul
jle
test
out
jmp
out
stos
fild
jmp
(bad)
cdq
fwait
pop
sbb
lock
das
lds
push
(bad)
(bad)
aam
mov
add
in
jmp
jp
jne
fisubr
mov
xchg
jle
pop
sbb
aam
xor
nop
jne
(bad)
jmp
jae
inc
pop
lds
dec
pop
cwde
les
daa
fimul
je
loopne
mov
out
sbb
adc
and
add
add
stos
or
jle
aad
jnp
push
jecxz
sbb
and
loopne
fincstp
push
dec
pop
lods
add
das
cmp
(bad)
(bad)
pop
test
cmps
scas
aad
cmp
imul
cmp
mov
aas
inc
hlt
ud0
pop
add
pop
(bad)
xor
dec
mov
push
mov
xor
jmp
fist
jmp
cmps
or
fwait
add
pop
pop
popf
call
mov
mov
pop
fdiv
mov
push
movs
leave
mov
cmp
mov
int
lods
mov
cmp
mov
int
mov
sbb
loope
or
movs
fwait
dec
xchg
daa
sbb
mov
call
std
fwait
dec
xchg
movs
ror
in
or
cmps
or
xchg
arpl
xchg
and
pop
or
cmp
pop
dec
aad
ficom
in
push
int
sbb
mov
push
fnsave
or
mov
push
movs
leave
mov
cmp
fbld
jne
mov
cmp
mov
std
mov
mov
jne
mov
cmp
mov
dec
mov
cmp
mov
cmp
cmp
mov
pop
sbb
push
in
mov
stc
lods
idiv
popf
fwait
pop
pop
fnsave
mov
cmp
aaa
add
test
pop
(bad)
aas
das
cld
push
leave
pop
sbb
push
in
mov
pop
mov
sahf
cmp
mov
push
cmp
cmp
pop
and
pop
leave
cvttps2pi
fdiv
mov
cmp
mov
(bad)
in
mov
cmp
rcl
inc
adc
xor
mov
fwait
mov
mov
cmp
add
mov
faddp
jne
fwait
cmp
cmp
mov
cmp
pusha
(bad)
mul
sbb
push
in
das
pop
push
leave
dec
sbb
test
popf
stc
dec
dec
pushf
movs
leave
adc
pusha
mov
popf
movs
leave
or
cmp
push
inc
in
neg
push
into
in
mov
sub
aad
loopne
into
inc
loopne
dec
mov
rol
jmp
inc
les
or
fsubr
arpl
outs
mov
cmp
add
jge
fidivr
test
inc
inc
inc
cmp
push
pushf
fsubr
mov
(bad)
jle
adc
loopne
inc
cmp
pop
inc
jp
xchg
nop
je
push
ins
jo
jno
pop
pop
stos
addr16
rol
add
adc
xchg
add
fldenv
sub
adc
cli
cmc
add
(bad)
jle
push
add
lock
pop
sti
inc
jmp
movs
push
out
jmp
jb
add
aas
ror
dec
rol
ror
sub
adc
mov
movs
les
sub
call
mov
fcmovb
(bad)
aas
inc
in
retf
cli
mov
pop
loop
mov
or
push
aad
jnp
fistp
test
in
add
clc
lea
and
pop
sti
sahf
adc
fistp
nop
dec
in
jmp
fwait
inc
(bad)
pop
(bad)
adc
(bad)
out
and
jmp
sbb
cs
sbb
cs
fimul
cs
sbb
cs
sbb
cs
fwait
aas
out
jmp
push
cmps
dec
pop
sub
sbb
cs
es
jmp
cld
retf
in
cmps
clc
mov
outs
mov
cmp
lods
mov
sbb
cs
sbb
cs
sbb
cs
and
scas
cmp
cs
sbb
cs
aaa
sub
mov
xchg
mov
sti
xor
outs
sbb
cs
sbb
mov
aaa
push
pop
pop
cs
sbb
cs
sbb
cs
pushf
push
fisttp
cwde
cs
sbb
cs
sbb
cs
mov
retf
mov
cs
sbb
mov
cmp
retf
pop
ret
lods
dec
mov
ret
nop
or
fsubr
dec
sbb
cs
mov
fsubr
dec
sbb
cs
sbb
test
sbb
cs
sbb
cs
fsub
mov
pop
iret
std
or
fsubr
dec
pushf
pop
inc
inc
jmp
or
test
add
out
gs
or
imul
dec
sbb
cs
sbb
addr16
call
sbb
dec
sbb
xor
or
fnstcw
test
push
icebp
fwait
icebp
and
push
ret
lods
or
fsubr
dec
sbb
cs
sbb
cs
sbb
cs
sbb
cs
sbb
outs
sbb
mov
gs
cs
sbb
cs
sbb
cs
sbb
push
mov
ins
mov
xchg
fmulp
mov
sbb
cs
sbb
cs
sbb
shl
test
cmovns
test
outs
(bad)
aad
imul
or
jl
fwait
cmp
clc
mov
or
(bad)
cld
push
aas
movs
and
add
loop
shl
out
fnstcw
mov
mov
js
or
jl
outs
cmp
scas
mov
mov
enter
or
jnp
mov
clc
or
js
jmp
js
jmp
iret
stos
jle
(bad)
cld
outs
test
retf
cmp
mov
std
cmp
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
jne
mov
cld
or
out
mov
add
scas
(bad)
cld
mov
clc
cmp
scas
clc
cld
retf
cld
mov
dec
cs
cmp
out
clc
cld
mov
mov
cld
retf
cld
retf
cld
retf
cmp
cld
scas
cmp
clc
mov
retf
fwait
jle
pop
stc
fucomip
fwait
test
push
imul
or
mov
pop
cmps
fstp
and
jae
add
or
(bad)
scas
mov
cmp
test
lods
mov
test
mov
jmp
dec
fsub
fld
xor
jmp
mov
add
mov
rcl
sbb
(bad)
int
dec
fucomip
data16
pop
pushf
cmp
addr16
jl
pusha
mov
cmp
in
lods
cmc
das
stos
and
out
dec
mov
in
cld
dec
call
fucomi
inc
mov
loopne
div
pop
mov
jle
addr16
out
mov
or
sti
rol
sub
fcom
pop
sub
jnp
sbb
add
pop
loop
or
loopne
and
mov
cmovnp
stos
push
push
pusha
inc
(bad)
(bad)
cmp
out
jo
jl
pop
ficom
pop
arpl
adc
xchg
leave
adc
aad
outs
out
loopne
and
cdq
call
into
jmp
jp
sub
test
or
add
fstp
push
cld
add
jecxz
pop
rcl
arpl
sar
test
cmp
test
lods
test
pop
sub
mov
fsub
dec
mov
lds
outs
push
dec
rol
xchg
ins
fld
adc
xor
mov
cmp
lock
mov
sub
fstp
bound
mov
inc
cmp
mov
jno
rcl
pusha
pop
cmps
mov
sub
dec
pop
nop
mov
imul
add
add
aas
sub
push
in
ret
lahf
out
mov
rol
inc
dec
cmp
adc
inc
push
dec
out
lahf
adc
movs
inc
pinsrw
sahf
push
cmps
adc
fcmovbe
pop
ja
push
fist
jmp
fld
inc
sub
adc
and
dec
dec
in
push
push
pusha
inc
(bad)
out
out
jmp
dec
stos
jae
mov
sahf
cmp
pop
xchg
je
and
pusha
jb
mov
fnsave
jge
mov
xor
dec
cmp
test
push
ss
push
pop
mov
gs
jo
or
xchg
sbb
scas
push
cmovbe
and
cdq
stos
(bad)
aas
jg
out
rcl
mov
popa
xor
mov
fld
mov
push
cmp
pop
hlt
mov
into
btc
add
int
lock
(bad)
xchg
pop
std
sub
out
lahf
aad
in
in
cld
or
gs
sub
in
call
adc
cmp
outs
(bad)
scas
lods
mov
xchg
jmp
push
enter
pop
xor
leave
pop
xchg
lods
and
pop
adc
(bad)
sub
mov
push
cld
or
adc
add
out
jmp
mov
mov
pop
cmp
sub
push
fisubr
adc
pop
adc
cmp
adc
inc
mov
xor
xor
hlt
leave
dec
mov
out
dec
jmp
add
pusha
sub
fstp
bound
leave
pop
stos
jle
cmp
xchg
rcl
adc
mov
push
rcr
sbb
cmp
jge
lds
mov
and
or
jmp
sbb
add
outs
test
xchg
jo
in
jo
add
xchg
clc
mov
and
xor
dec
in
pop
jp
movs
fdecstp
(bad)
cwde
in
jl
mov
mov
in
(bad)
das
out
adc
fidivr
sub
fild
jl
xor
(bad)
shl
in
bound
ret
sub
scas
clc
jle
js
adc
xchg
adc
jl
das
mov
(bad)
mov
sub
out
push
shl
cld
inc
jae
jecxz
fdivr
mov
jle
(bad)
int3
inc
mov
sti
mov
stos
enter
test
or
mov
cmp
scas
clc
cld
outs
call
shl
sbb
int
movs
cld
cld
dec
scas
mov
cld
retf
cld
retf
std
mov
js
retf
mov
cmc
clc
into
sub
lods
push
adc
mov
mov
js
or
push
jo
mov
mov
add
cmp
xchg
add
sbb
dec
mov
jb
sub
and
repnz
cmp
aaa
mov
and
arpl
dec
sub
lods
stos
or
sub
fs
or
jg
xchg
or
mov
dec
rol
clc
fcmovne
push
sbb
popa
je
inc
ds
cmp
pop
ret
es
out
pushf
in
push
inc
fmul
das
imul
mov
and
inc
sub
lods
jmp
sbb
mov
in
stos
cli
lds
add
rol
shl
or
pop
nop
gs
dec
inc
jns
inc
jbe
jae
and
mul
add
movs
add
cmp
and
enter
jmp
pop
jns
mov
idiv
inc
pop
cmp
or
jl
inc
push
or
lock
fild
inc
xchg
cmps
push
sbb
cmp
adc
sti
push
xor
dec
push
jge
cmc
ret
nop
inc
rcl
dec
data16
out
sub
and
cmp
jo
and
(bad)
sbb
dec
xor
shr
sti
or
xchg
stc
adc
mov
loope
or
popf
mov
out
inc
sbb
xchg
or
adc
popa
mov
mov
aad
pop
cli
std
push
sbb
cmc
outs
fist
add
test
mov
sti
jmp
jo
stos
push
add
es
or
push
cmc
mov
add
fmul
push
shrd
jmp
pop
jecxz
push
mov
mov
mov
mov
outs
loop
mov
std
in
lock
into
pop
and
test
out
or
ret
retf
idiv
and
outs
cmps
outs
sub
clc
dec
add
adc
repz
popa
adc
ins
mov
sbb
xlat
loope
icebp
mov
or
jecxz
aaa
add
inc
mov
adc
mov
test
stc
jle
scas
cmp
retf
cld
retf
cld
retf
cmp
dec
stos
mov
(bad)
loop
pushf
into
sub
call
enter
inc
ret
sub
repz
scas
mov
xor
fwait
pop
lea
mov
das
out
dec
mov
enter
dec
mov
xchg
mov
pop
push
mov
inc
aaa
in
dec
fucomp
(bad)
frstor
sub
dec
mov
icebp
inc
sub
xchg
movs
jp
pop
sub
xchg
mov
jg
mov
(bad)
pop
lahf
adc
addr16
in
adc
int
pop
ror
push
mov
js
adc
lods
xchg
inc
fst
cli
les
sbb
jmp
sbb
jmp
imul
dec
xchg
outs
push
das
popa
xchg
das
dec
out
dec
mov
or
shl
xor
jbe
xlat
push
add
arpl
(bad)
out
pushf
dec
stos
mov
scas
pop
pop
test
jmp
mov
xor
add
mov
fiadd
rcl
ins
mov
jb
lahf
lods
mov
fwait
sub
call
xchg
pop
jp
fisubr
out
inc
sbb
mov
push
retf
xor
sbb
inc
and
jecxz
je
les
mov
scas
jg
xchg
aad
loopne
loop
and
mov
aam
dec
lea
bound
pop
iret
(bad)
adc
outs
inc
adc
xor
xor
daa
mov
daa
out
fcomp
enter
push
push
mov
mov
(bad)
mov
xor
(bad)
xlat
adc
dec
pop
sti
cvtps2pd
imul
fld
dec
repz
adc
scas
jg
mov
xor
lds
ret
test
push
mov
cwde
aam
stos
adc
jecxz
xor
pop
and
mov
in
jp
mov
push
addr16
mov
mov
sbb
xor
enter
aaa
push
push
mov
in
sti
jecxz
stc
dec
push
adc
sub
clc
addr16
xor
(bad)
and
mov
cmc
cs
sbb
push
std
retf
mov
pop
ja
stc
stc
in
arpl
sub
and
xor
push
mov
aad
push
out
imul
sub
xor
shr
sbb
adc
dec
das
retf
lods
inc
gs
je
dec
popf
sub
outs
jno
test
cwde
icebp
pop
inc
jbe
not
loope
nop
pop
push
xchg
imul
ins
xchg
xchg
push
bound
inc
mov
adc
push
aas
(bad)
xor
mul
cmp
pusha
popf
mov
test
(bad)
aas
dec
jae
outs
mov
xchg
cmp
cli
inc
mov
daa
push
xchg
shl
cmps
and
cdq
pop
das
push
dec
or
inc
pop
and
call
fs
and
mov
nop
sub
mov
enter
pop
ins
or
xor
add
adc
mov
mov
jmp
daa
push
sub
add
and
cmps
push
inc
std
sbb
sub
dec
mov
sbb
(bad)
mov
cli
sub
(bad)
hlt
ror
xchg
imul
mov
cs
(bad)
jno
adc
inc
into
pop
xor
iret
dec
pop
cmp
jne
ss
mov
jnp
mov
push
cld
cld
dec
scas
jns
or
mov
cld
retf
cld
or
jl
and
lock
lock
mov
cmp
mov
jae
sbb
mov
sbb
imul
push
adc
cld
mov
jle
sub
mul
push
rol
(bad)
or
scas
cmp
or
mov
adc
mov
jmp
icebp
in
gs
cld
sub
in
jp
movs
or
push
dec
lock
test
(bad)
sbb
dec
movs
(bad)
mov
int
push
aam
fidiv
jl
xor
or
pushw
ja
sahf
mov
popf
movs
into
test
cld
xchg
jmp
int
in
shl
jne
loopne
lea
dec
and
(bad)
dec
fs
aas
iret
mov
ficomp
push
inc
(bad)
and
lods
fwait
inc
out
iret
movs
cmps
imul
je
rcl
fisubr
ins
adc
sub
test
push
imul
aam
cmp
dec
sbb
fidivr
inc
call
push
adc
mov
dec
jle
leave
imul
push
xchg
out
retf
mov
xchg
jecxz
gs
push
icebp
push
inc
cdq
psubsw
scas
push
push
mov
or
push
arpl
dec
sbb
cmps
out
cld
push
xor
sbb
(bad)
cmc
imul
jp
dec
push
jbe
ja
fisub
fisubr
mov
sbb
xor
push
mov
push
sar
pop
aad
cmps
gs
(bad)
xchg
gs
pop
jmp
and
xor
ror
adc
jno
xchg
inc
(bad)
push
fadd
cdq
loop
push
mov
mov
stos
xchg
push
xchg
addr16
ret
addr16
int
xor
and
outs
outs
mov
xchg
xchg
cmps
jns
das
cmps
push
pusha
(bad)
dec
or
clc
mov
retf
cmp
scas
js
or
lock
stos
mov
call
xor
cmps
test
mov
jg
call
(bad)
and
cld
scas
mov
mov
sbb
mov
into
adc
push
jecxz
daa
inc
xor
mov
loopne
out
push
pushf
dec
mov
cmp
(bad)
mov
mov
add
pop
mov
(bad)
cmp
jns
adc
(bad)
cmp
jo
sub
push
pop
cdq
cmp
cmps
pop
lods
out
aad
lock
sub
jmp
mov
(bad)
push
mov
xchg
and
pop
add
mov
stos
mov
and
jb
dec
pop
cmp
ds
sbb
in
add
aaa
fs
jg
popa
dec
mov
cmp
adc
in
lods
jmp
push
sahf
cmp
jmp
stos
das
jmp
sub
push
pop
repz
out
mov
mov
out
imul
or
addr16
mov
int
adc
push
je
dec
cmp
test
cs
es
adc
js
fistp
bound
sar
sbb
dec
popa
and
pop
mov
dec
push
push
xor
xchg
jbe
inc
dec
arpl
lods
xor
out
jmp
in
cmps
aad
movs
call
adc
pop
mov
adc
sbb
or
cld
les
fcom
add
sahf
fwait
sub
fcmovb
xor
jl
fstp
outs
iret
or
fs
xchg
jae
dec
data16
into
pop
retf
pop
(bad)
aam
mov
push
lea
pop
rcl
mov
popf
aad
sub
add
test
jbe
sahf
ins
jmp
xchg
xlat
sti
and
out
(bad)
out
pop
sbb
aam
jne
and
sar
push
out
sub
push
scas
xchg
bound
or
inc
out
outs
push
push
pusha
popf
mov
dec
xchg
push
dec
int3
dec
push
xor
daa
fmul
dec
mov
push
call
cmp
lods
push
sahf
and
dec
repnz
cmp
aaa
mov
mov
rcl
mov
dec
push
push
(bad)
xchg
and
and
pusha
dec
pop
out
or
jge
cmc
lods
stos
dec
inc
mov
adc
int
jp
xor
arpl
ja
jns
sbb
out
ins
fidiv
sub
test
mov
int3
jle
or
gs
imul
sahf
or
pop
jne
mov
pop
and
ret
jmp
push
push
pop
push
jne
mov
or
mov
xchg
cdq
dec
das
pop
mov
xor
mov
jns
push
sti
cmp
ret
push
mov
fdiv
stc
sub
push
push
out
and
ficomp
xor
or
js
adc
cmps
dec
dec
inc
in
mov
sbb
mov
outs
cmps
into
add
pop
push
mov
jge
scas
push
sti
nop
scas
(bad)
sbb
ds
ins
in
mov
or
mov
xor
je
int
jp
jne
cmp
dec
out
pop
pop
and
cmp
stos
rcr
pop
repz
xchg
imul
jle
mov
loopne
pop
je
mov
xor
sahf
icebp
outs
stc
xor
retf
or
inc
mov
xchg
push
(bad)
dec
mov
mov
cmp
scas
clc
mov
into
out
lock
(bad)
in
or
mov
nop
call
mov
or
xor
iret
dec
(bad)
cmp
adc
mov
inc
jbe
cld
dec
stos
test
in
inc
cmps
mov
jno
call
mov
test
jmp
arpl
leave
push
xor
aaa
shr
movs
fwait
loope
je
xor
cmp
jmp
fistp
and
fsub
out
rcl
div
clc
dec
addr16
jge
ja
and
std
stos
div
adc
mov
pop
in
push
inc
and
xchg
shr
pop
jnp
rol
scas
push
movs
sar
cmp
cmp
sbb
dec
into
jmp
pusha
jbe
and
pop
mov
xchg
sbb
inc
adc
or
or
push
or
lock
div
push
mov
xchg
xchg
test
stc
into
xor
inc
leave
fld
das
(bad)
into
daa
xlat
imul
xor
fadd
and
jnp
jge
jne
aaa
mov
into
imul
imul
push
pop
outs
push
push
arpl
aad
push
jmp
cmp
dec
or
dec
loop
ret
hlt
mov
xchg
pusha
xchg
push
sub
or
in
dec
popa
call
jg
lods
repz
addr16
fs
(bad)
cmp
pop
(bad)
loop
push
in
mov
push
xor
jae
es
sub
add
or
dec
xor
mov
xchg
sar
and
js
dec
cmp
mov
fld
imul
es
popa
(bad)
add
mov
adc
adc
fwait
adc
sbb
ds
ins
out
mov
mov
push
add
stc
hlt
adc
(bad)
jmp
retf
enter
fsub
adc
cmp
in
test
sub
push
ss
(bad)
mov
ficom
(bad)
scas
hlt
sbb
movs
cld
fst
inc
dec
pop
test
int3
into
or
and
sub
jo
jo
cmp
icebp
test
cdq
ja
popf
rol
dec
ficomp
mov
and
setge
sbb
in
rol
xchg
fdiv
push
jmp
cmp
xor
cs
test
fst
in
sub
mov
or
or
je
xor
or
add
adc
mov
pop
cli
clc
pop
inc
push
rol
movs
rcl
out
(bad)
mov
(bad)
cli
shl
movs
ss
jnp
inc
aaa
xor
xchg
push
das
cmp
inc
retf
mov
cld
retf
clc
cmps
mov
jl
scas
clc
cld
retf
jmp
retf
cld
jmp
xchg
shl
enter
jmp
sub
outs
(bad)
sti
jmp
loop
out
mov
cmp
mov
push
push
mov
cmp
or
retf
in
ret
mov
js
fld
popa
das
cmps
dec
(bad)
(bad)
mov
push
dec
cmp
add
inc
in
das
dec
gs
pop
sub
jns
push
jecxz
mov
aaa
jae
push
mov
gs
mov
cmp
dec
mov
pop
cwde
jge
loop
adc
mov
pop
push
mov
xor
int
push
(bad)
mov
movs
dec
ds
cmps
mov
push
gs
mov
pop
inc
pop
cld
sbb
int
jle
xor
jl
femms
mov
scas
jo
sbb
cdq
(bad)
scas
clc
std
lock
js
jecxz
jmp
(bad)
clc
cld
dec
daa
test
sub
scas
cli
jmp
xchg
mov
scas
clc
cmp
(bad)
clc
cmp
mov
pop
push
mov
jl
scas
clc
cld
dec
scas
xlat
loop
nop
leave
cld
sub
cld
dec
scas
jns
retf
cmp
scas
clc
cld
retf
clc
mov
mov
sahf
mov
mov
(bad)
aam
mov
fsubr
mov
scas
mov
xor
push
inc
cli
movs
fiadd
push
jl
adc
push
aad
xor
xchg
cli
scas
mov
cmp
inc
adc
sbb
sub
xchg
scas
add
loopne
ror
adc
shr
cld
jnp
cmp
cwde
call
adc
cld
rol
daa
pop
mov
ins
xor
cld
popa
aaa
nop
cmp
nop
clc
jp
arpl
scas
gs
inc
push
mov
ffree
sbb
addr16
dec
sub
outs
jb
pop
adc
mov
cmp
call
xchg
pop
ret
dec
aaa
outs
sbb
call
fcmovnb
(bad)
out
ins
mov
push
test
leave
imul
outs
xchg
repnz
cmp
and
adc
and
mov
cmc
into
arpl
cld
mov
mov
or
and
push
xchg
xchg
xchg
cmp
jmp
mov
and
pop
or
push
dec
lds
aam
retf
nop
mov
in
push
aam
jnp
adc
jno
out
jp
xchg
fcomp
je
arpl
jle
sub
cmps
out
mov
test
call
out
adc
push
mov
cmp
sti
mov
push
and
aam
sub
jns
mov
shl
outs
in
sbb
inc
cmp
xchg
pop
and
sub
test
pop
cmp
add
popf
retf
(bad)
ds
mov
retf
push
(bad)
adc
(bad)
loop
mov
inc
sub
xor
push
or
call
pop
call
pop
xor
es
repz
sbb
pop
hlt
adc
ja
or
mov
sbb
and
add
xor
mov
cmps
imul
sbb
fwait
mov
pop
mov
inc
xor
das
push
adc
sbb
dec
xchg
inc
lock
mov
xchg
sbb
(bad)
push
cmp
jl
xor
mov
jae
loop
je
out
pop
mov
ins
or
ret
ins
frstor
jmp
ror
idiv
(bad)
dec
mov
mov
inc
jbe
cmp
cdq
and
retf
clc
lds
mov
out
je
mov
in
jle
jnp
sbb
jge
shr
icebp
push
(bad)
ins
rol
sar
cmp
and
dec
cli
pop
mov
lods
jo
xchg
jns
cmps
(bad)
mov
retf
rcl
leave
cmc
xchg
shr
int3
daa
std
or
pop
sbb
jl
mov
xor
popa
rcr
jl
verw
aad
mov
mov
jmp
cmp
call
imul
bnd
les
sub
out
fwait
push
jns
int
jnp
and
sub
pop
or
sti
out
mov
retf
mov
mov
clc
cld
retf
mov
jecxz
nop
into
out
call
call
retf
js
mov
mov
cmp
aaa
lods
scas
xchg
rcl
mov
sub
ret
xchg
and
shr
es
mov
addr16
pop
fcmovne
push
adc
sar
mov
cli
push
pop
retf
sbb
std
hlt
jle
aad
ror
add
cs
cli
mov
jge
or
add
xchg
adc
push
cmp
mov
and
jbe
add
jb
dec
mov
lods
je
cmp
repz
xlat
icebp
push
add
jmp
sub
ds
inc
lods
xchg
inc
(bad)
jmp
cmp
std
push
test
ffree
or
inc
pop
(bad)
mov
ins
push
leave
xor
ss
test
xchg
cmp
push
push
jge
sub
repz
xchg
(bad)
pop
test
jne
or
or
inc
addr16
add
sub
jl
xor
fisub
xchg
pop
dec
xchg
sub
aad
call
xor
iret
imul
cld
lds
ins
ss
ss
mov
add
shl
sbb
adc
in
pushf
stc
retf
stc
das
scas
mov
pmaddwd
not
cmp
inc
out
jmp
sbb
sub
ins
sub
addr16
cmp
lea
nop
(bad)
loopne
push
or
in
inc
shl
or
mov
jecxz
stos
(bad)
xchg
call
ror
movs
ret
in
jmp
pop
cmp
sbb
jb
cli
les
and
sub
jg
pop
and
sbb
inc
push
mov
mov
(bad)
and
adc
out
pop
and
bound
jns
inc
daa
or
sub
lock
or
jmp
cwde
pop
retf
xor
cmc
sahf
js
mov
js
or
mov
cld
mov
mov
fsubp
cwde
movs
mul
in
scas
ret
nop
mov
clc
mov
int3
sbb
and
jns
into
mov
(bad)
pop
jg
push
lahf
fiadd
repz
cmp
call
dec
in
pop
pop
cmp
inc
push
pop
stc
aas
mov
je
mov
ffree
in
mov
pop
dec
mov
mov
dec
dec
mov
(bad)
push
call
push
ja
dec
add
jmp
mov
cli
jge
scas
xchg
pop
das
pop
in
dec
fisub
mov
(bad)
je
and
mov
add
outs
test
lods
imul
dec
loop
ja
push
rcr
mov
jmp
pop
push
cmp
gs
mov
shl
aam
or
ins
div
mov
adc
cli
(bad)
and
add
ins
(bad)
stos
adc
xchg
into
cmps
es
push
jmp
cdq
fdivr
ins
aad
xor
outs
dec
pop
fs
sbb
stos
in
test
sbb
adc
std
int
test
dec
adc
pop
mul
push
ss
and
jmp
jmp
push
dec
xlat
cs
inc
push
push
and
inc
in
in
movs
xor
pop
jp
pop
(bad)
lahf
jmp
push
pop
push
inc
mov
dec
js
mov
popf
(bad)
mov
stc
fisttp
mov
mov
ret
cs
or
xchg
xchg
inc
push
jle
fcomp
dec
push
jb
add
dec
cmp
enter
xor
dec
mov
jno
aaa
into
cli
mov
jl
cmp
iret
repz
in
adc
mov
mov
imul
push
push
xchg
xlat
fstp
aas
loop
dec
push
sub
imul
test
js
call
pop
push
mov
inc
mov
je
scas
aam
icebp
inc
xchg
mov
(bad)
fidiv
fidiv
ror
xchg
and
dec
push
xor
int3
mov
pop
mov
into
jo
fisubr
mov
les
mov
cmc
mov
push
jg
icebp
cli
push
mov
pop
jmp
out
mov
pop
jb
and
and
push
cmp
jae
stc
xchg
jl
repz
pushf
ficomp
scas
jmp
or
aas
out
pop
retf
call
or
push
stos
cdq
je
sub
and
dec
shl
rcr
pop
mov
loop
test
stos
fnstenv
movs
pop
repz
adc
test
hlt
dec
mov
cmp
retf
or
(bad)
neg
les
sub
mov
jg
in
addr16
test
jno
in
test
int3
jne
stos
sbb
data16
call
int3
stos
cdq
je
mov
adc
cmp
xor
xchg
out
test
gs
mov
mov
in
scas
jp
in
loope
call
retf
pop
and
pushf
and
adc
adc
fisubr
arpl
mov
aaa
mov
movs
add
mov
das
cli
cld
cld
lods
loop
call
loop
ficomp
jno
lods
dec
lds
or
lea
je
sti
into
lock
fs
enter
pop
iret
int3
enter
adc
out
xchg
mov
mov
cmp
call
or
push
push
jp
and
xor
dec
dec
add
leave
jp
mov
pusha
cld
repnz
popf
(bad)
rcl
call
leave
imul
fs
addr16
in
xchg
inc
push
push
sti
inc
rcr
mov
and
dec
xor
in
or
lahf
mov
(bad)
rol
pusha
fwait
mov
ret
(bad)
xchg
clc
retf
mov
(bad)
dec
jno
sub
adc
cmp
sub
test
cmp
xor
ret
adc
xchg
xchg
add
jnp
repnz
enter
test
jl
dec
jo
adc
cmc
inc
mov
fwait
int3
popf
lds
neg
je
retf
sbb
inc
mov
adc
xor
mov
leave
ins
stos
xchg
sub
bound
push
mov
repz
les
cmp
inc
mov
xchg
pop
mov
mov
clc
scas
retf
cld
xor
das
js
dec
das
cmp
outs
clc
cmp
mov
stc
std
mov
cmp
dec
scas
cli
aas
enter
or
jg
stos
mov
jle
sub
cmp
stos
mov
mov
dec
stos
mov
cld
call
std
mov
mov
dec
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
push
int3
mov
adc
js
mov
mov
int
js
or
mov
cld
retf
cld
retf
std
retf
std
dec
out
cmp
sti
outs
mov
cld
mov
clc
cld
retf
cld
mov
std
mov
cmp
cdq
clc
aas
mov
cld
cld
mov
inc
(bad)
cmps
test
retf
or
int3
movs
pop
popf
mov
dec
xor
je
jp
mov
retf
js
enter
dec
clc
cld
add
cmp
mov
bnd
pop
adc
mov
xchg
add
push
pusha
in
pop
jl
pop
(bad)
cmp
out
and
jg
ja
pop
xchg
cmps
add
and
mov
pop
in
jno
xchg
jmp
dec
add
and
cld
hlt
pop
imul
xchg
les
std
in
inc
or
retf
test
rol
sbb
test
push
nop
cmp
and
pop
cwde
test
retf
inc
mov
dec
push
cli
(bad)
sub
jg
push
push
inc
mov
dec
nop
popf
cmp
push
mov
push
mov
mov
outs
mov
sbb
neg
jb
cmp
or
fmul
mov
sbb
pop
adc
loopne
in
into
pop
test
xlat
cwde
les
scas
and
mov
dec
bt
call
jmp
pop
xchg
movs
mov
loope
out
js
push
test
push
test
push
inc
iret
push
pop
and
pop
pop
xchg
cmp
bound
addr16
call
sbb
xchg
rol
pop
lods
dec
pusha
cmc
outs
repz
pop
mov
dec
(bad)
jl
cwde
mov
jle
pop
sub
ficomp
call
rcl
mov
jg
mov
dec
cmp
in
xchg
jne
sub
xchg
gs
loope
jb
fldcw
xor
ins
xor
push
mov
cmp
dec
adc
sbb
inc
xlat
dec
push
pop
or
sub
jge
mov
shr
sbb
movs
lods
popf
stos
retf
pop
repz
push
jge
pop
mov
jmp
pop
mov
push
sbb
in
mov
mov
lods
iret
push
lock
or
sbb
fcomip
mov
xchg
xor
inc
add
pop
mov
(bad)
sbb
and
mov
jp
jecxz
adc
sbb
dec
call
das
daa
aam
out
ss
cmp
and
dec
lock
jecxz
or
mov
hlt
pushf
mov
pushf
out
ffree
xor
jnp
pop
pop
jmp
in
fst
repnz
fld
ds
lahf
pop
fcom
pop
push
int3
jg
mov
push
leave
and
dec
cwde
mov
pop
leave
popa
dec
cwde
push
fidivr
mov
bound
sub
dec
clc
adc
ins
neg
inc
sub
les
push
out
and
cmp
mov
div
(bad)
and
loop
mov
xchg
(bad)
mov
push
sbb
sbb
add
inc
jb
add
mov
xchg
lahf
pop
inc
clc
adc
fsubr
adc
mov
add
(bad)
mov
out
or
xor
add
retf
(bad)
push
xchg
dec
inc
(bad)
stos
mov
movs
mov
xor
push
cmp
jge
or
add
push
add
dec
push
es
aam
imul
fs
jnp
mov
push
push
sahf
xchg
jo
imul
std
add
xor
push
push
cmc
(bad)
iret
adc
dec
sbb
xor
rcl
push
out
out
jb
or
loopne
mov
ja
xchg
into
aas
push
mov
movs
inc
push
xchg
fsub
jmp
fisub
into
ss
xchg
ror
and
(bad)
repz
es
pop
sahf
or
es
out
xor
mov
adc
mov
jmp
mov
and
xchg
sub
sub
push
repnz
and
popf
push
and
(bad)
call
or
mov
mov
loope
and
scas
or
setge
sub
cdq
push
cwde
rcl
fistp
cmc
mov
js
call
dec
ins
mov
imul
repz
pop
adc
aaa
shl
enter
push
stc
mov
js
es
mov
mov
mov
mov
stos
lock
cmc
sahf
cmp
mov
jge
out
mov
cld
or
stc
mov
mov
mov
add
into
mov
mov
cmp
jge
int
daa
push
cld
fs
xchg
cmp
inc
pop
or
pushf
repz
pop
pop
sbb
int
mov
stos
push
xor
and
add
adc
push
aad
lods
adc
add
lods
fiadd
rcr
cmp
outs
scas
or
in
mov
sbb
or
(bad)
retf
(bad)
mov
add
gs
sbb
out
mov
test
fst
leave
jb
hlt
adc
push
lds
outs
scas
jo
imul
xor
mov
jno
gs
mov
(bad)
out
(bad)
not
mov
outs
arpl
add
xlat
mov
test
pop
dec
jmp
arpl
loope
push
or
or
push
ds
and
dec
jl
or
cmp
std
dec
leave
mov
cli
or
pop
sub
mov
sti
push
adc
jecxz
shl
cmp
sub
jnp
inc
jne
(bad)
int3
pusha
cdq
inc
inc
adc
jne
les
aam
test
bound
mov
pop
clc
or
dec
in
cmps
sub
and
mov
das
add
jle
pop
clc
or
add
cmp
arpl
in
repnz
xchg
cmps
lahf
pop
test
xchg
inc
ins
clc
push
pop
iret
and
sub
icebp
mov
push
idiv
xchg
cld
sub
and
jge
inc
frstor
fsub
xchg
fs
and
mov
icebp
push
lods
dec
sbb
test
(bad)
sub
mov
fiadd
bound
xor
in
inc
(bad)
iret
ror
or
rcr
cmp
int3
aas
jle
daa
mov
retf
cmp
lahf
jnp
xor
add
mov
in
test
out
adc
out
dec
sbb
mov
test
stos
sbb
imul
loope
aas
jp
je
mov
inc
ins
loop
imul
into
ret
iret
imul
shr
cmp
push
xchg
inc
push
int3
dec
pop
rcr
daa
aas
sub
jge
rol
out
jmp
js
addr16
dec
mov
aas
dec
fnstsw
rcl
idiv
fldenv
sbb
mov
or
cld
imul
push
lds
push
ins
add
adc
in
sar
pop
jno
nop
xlat
outs
out
sbb
scas
inc
and
push
xor
mov
xor
repnz
xchg
add
add
stos
push
(bad)
push
in
js
lods
mov
sub
push
mov
add
dec
inc
jns
or
cmp
cdq
fs
pop
xchg
gs
lods
cmp
jae
lea
dec
adc
xor
push
mov
shl
out
add
sub
xchg
pop
dec
cmps
repz
mov
lock
int
jle
pop
push
jmp
push
xchg
dec
add
fst
int
in
jo
and
or
fwait
inc
add
les
adc
lock
jl
fdiv
push
repnz
arpl
pop
sub
inc
dec
adc
xchg
loope
test
cmp
fwait
cmp
inc
jecxz
inc
dec
mov
mov
out
scas
(bad)
icebp
ss
mov
fild
xor
js
cmp
sbb
mov
xchg
sbb
bound
scas
loopne
sub
cmc
aad
mov
movs
sti
push
std
fnstenv
aaa
add
and
iret
pop
or
cmp
ins
lea
sar
xor
jecxz
inc
mov
loopne
aam
cwde
test
movs
or
cwde
scas
mov
out
cmp
fisubr
mov
cmps
mov
std
clc
jmp
(bad)
ficom
ss
jne
movs
mov
sbb
cdq
xchg
imul
push
push
imul
rcr
xchg
inc
call
popa
dec
mov
jmp
push
int3
push
outs
xchg
out
gs
mov
scas
fwait
xchg
add
xchg
iret
and
push
outs
inc
push
jno
ret
jecxz
and
sbb
inc
inc
(bad)
in
test
(bad)
add
mov
push
adc
xchg
sar
(bad)
xchg
cmp
mov
adc
inc
stos
dec
jl
add
ins
rol
inc
scas
push
sar
(bad)
push
leave
inc
pop
fiadd
outs
push
lods
mov
fist
ja
fdivp
lahf
xchg
aam
mov
cs
in
mov
pusha
call
mov
lahf
imul
and
mov
dec
cmps
(bad)
out
jb
jecxz
sub
ror
jmp
cmp
sub
(bad)
(bad)
jae
cmps
test
shl
pop
mov
cmp
sahf
push
mov
loop
mov
jnp
pop
arpl
pop
or
into
das
js
or
clc
mov
retf
mov
mov
mov
dec
out
stc
inc
jecxz
in
arpl
scas
sub
sahf
repz
cld
scas
mov
xor
call
cmc
mov
jo
imul
cmps
inc
pop
mov
mov
or
mov
jecxz
lock
jno
pop
and
push
mov
fistp
les
retf
test
and
and
jo
xchg
bound
adc
add
jmp
add
mov
scas
xchg
pop
popf
es
lock
cmps
mov
dec
retf
mov
daa
ror
add
dec
out
repnz
ins
adc
int
mov
or
dec
jge
addr16
addr16
xchg
pop
inc
adc
cmc
das
sub
mov
and
and
stc
xor
popa
or
(bad)
push
adc
in
(bad)
pushf
jl
loop
adc
dec
aaa
pop
sub
dec
jb
cmp
push
pop
(bad)
sti
adc
mov
lock
mov
pop
cmp
scas
cmps
sbb
push
arpl
push
adc
leave
(bad)
push
and
(bad)
mov
ds
xor
cmp
or
in
leave
or
mov
les
test
or
in
cmc
es
stos
hlt
push
inc
int
pop
pop
cmp
arpl
mov
not
push
jb
dec
in
adc
push
arpl
sti
retf
cmps
sbb
dec
and
sbb
fsubrp
jge
(bad)
push
and
fcom
and
stos
dec
retf
into
sbb
xchg
loope
adc
aam
cmp
inc
xchg
int
mov
xchg
sbb
cmps
shl
dec
jg
xor
cwde
cmp
dec
dec
dec
lock
inc
fwait
mov
dec
and
daa
rol
mov
fcomp
pop
sbb
push
pop
arpl
iret
jmp
out
mov
mov
or
jecxz
leave
and
jae
jmp
and
test
or
adc
daa
pop
loopne
sti
pop
daa
sti
cs
dec
dec
pop
icebp
in
push
and
popa
jnp
fadd
imul
inc
nop
inc
ret
test
or
xchg
mov
pop
cmp
xchg
stc
imul
popf
mov
push
pop
out
dec
dec
ss
xchg
pusha
shl
jge
mov
sar
fucom
(bad)
push
xor
test
mov
(bad)
fcmovnbe
dec
shl
ror
cwde
loop
and
loop
in
inc
sub
sbb
jecxz
ins
jo
loope
or
adc
loop
outs
inc
push
xor
out
leave
cld
les
das
stos
jl
cmc
xor
das
nop
cmp
enter
or
outs
lea
cld
les
push
and
jnp
je
pop
les
adc
rol
jb
add
mov
out
sub
imul
cmp
pop
mov
sti
xor
dec
add
mov
pop
loopne
aam
ins
cmp
mov
mov
aaa
jb
test
xchg
xchg
add
mov
enter
mov
repnz
jp
inc
js
push
dec
adc
or
xor
popa
fiadd
push
data16
mul
aaa
adc
enter
add
pop
ss
sbb
mov
push
push
pop
xchg
pop
mov
push
stos
data16
iret
add
dec
das
cld
adc
cmp
sub
pop
into
lahf
adc
mov
stos
pop
pop
hlt
stos
fwait
sbb
xor
loopne
xchg
push
cmp
scas
xchg
out
mov
dec
mov
(bad)
cmp
and
scas
mov
jne
mov
cmp
dec
and
push
es
push
push
sub
xor
outs
push
adc
stos
dec
in
add
sub
xchg
and
test
adc
xchg
mov
jp
jp
xlat
mov
inc
and
xchg
jne
cli
fisttp
lock
cld
hlt
xor
stos
pop
dec
icebp
push
ret
dec
out
stos
pop
(bad)
mov
xchg
sub
jmp
sahf
int
mov
sahf
out
inc
sbb
adc
fs
dec
test
jg
test
mov
ret
scas
aam
mov
mov
or
cdq
pop
add
jo
clc
daa
inc
out
fwait
lods
xor
jl
ins
dec
int
mov
sub
xchg
sbb
out
icebp
cwde
fs
je
dec
imul
xchg
fisub
mov
push
inc
jecxz
pop
jge
pop
ret
cmovae
mov
movntps
or
jmp
xor
cmp
arpl
ficom
retf
fsub
mov
fisub
jg
rcl
cmp
leave
outs
ss
sbb
and
fstp
pop
fs
jmp
push
cwde
and
stos
hlt
pop
(bad)
mov
add
or
into
mov
cmp
add
nop
leave
cld
xchg
js
retf
out
cmp
mov
clc
cld
or
xor
fisubr
lock
iret
std
jne
mov
adc
scas
mov
jae
ror
mov
aad
and
xchg
inc
or
lea
and
cmp
sahf
dec
lahf
sub
arpl
adc
fwait
sbb
jp
int
and
xchg
pop
in
adc
pop
ds
lock
and
(bad)
das
pop
add
les
call
pushf
pop
mov
pop
popf
dec
popa
mov
mov
jp
fwait
jmp
or
cmp
arpl
jno
xchg
and
pop
pop
pop
fst
(bad)
stos
and
pusha
scas
(bad)
iret
retf
adc
scas
shl
or
outs
xor
outs
neg
push
mov
lahf
(bad)
mov
mov
(bad)
jbe
fst
ret
fstp
shl
mov
mov
imul
loopne
call
or
sbb
pop
jmp
sub
icebp
cwde
sbb
dec
xor
pusha
dec
out
xor
pop
aam
lods
mov
repz
pop
test
ffreep
icebp
fimul
ins
add
mov
sub
stc
pop
cmp
push
fmul
(bad)
fdiv
push
sbb
inc
pop
fld
stos
pop
jmp
pop
repnz
adc
scas
mov
push
push
rcr
push
lahf
iret
rcr
fs
pop
stos
jge
mov
xchg
neg
jg
mov
loop
pop
or
shl
into
js
push
xchg
into
jns
xcrypt-ofb
cmps
sub
cmp
add
push
or
ds
add
push
retf
call
dec
lods
push
and
adc
aad
cmp
jp
lahf
(bad)
xchg
jge
and
in
stc
cli
xchg
mov
retf
inc
or
push
or
mov
xor
shl
adc
mov
or
cmp
and
es
iret
jmp
sbb
imul
jb
out
sbb
jb
test
cmp
inc
out
or
mov
adc
es
push
jecxz
pop
test
mov
sub
lods
into
aam
mov
cmp
call
sbb
adc
sbb
fst
jno
call
fistp
stos
mov
shl
sub
sub
call
mov
call
push
mov
das
sub
dec
in
cs
adc
and
jns
aaa
push
mov
inc
sbb
stos
not
inc
dec
pop
add
and
je
(bad)
mov
retf
cmp
outs
pop
hlt
mov
jp
(bad)
push
ins
cwde
pop
(bad)
(bad)
mov
dec
or
loopne
jae
xchg
xchg
and
ins
and
rcl
dec
sbb
dec
pop
mov
mov
loope
push
cmp
int
mov
not
sub
push
mov
sar
or
and
movs
loopne
pushf
fistp
sub
mov
es
das
cmp
enter
mov
mov
xor
fs
ins
adc
xchg
dec
repz
dec
stc
pop
fs
inc
ins
cmp
pop
cmp
lods
mov
(bad)
mov
dec
push
inc
shl
cmp
xor
mov
repnz
sub
pop
adc
jmp
lods
push
scas
and
rol
int3
xchg
pop
mov
fisubr
inc
add
cmps
ret
pop
in
jae
jns
aad
in
pop
loopne
adc
in
sub
out
mov
lock
sbb
jge
pop
xchg
mov
cmc
mul
xchg
fistp
sar
imul
movs
adc
push
add
out
cwde
push
jbe
les
pop
ja
(bad)
jg
adc
(bad)
adc
stos
out
jecxz
xchg
test
pop
lock
hlt
outs
out
xlat
dec
sbb
in
jge
xchg
pop
fmul
lahf
add
pop
xchg
loop
nop
adc
and
inc
test
fcom
test
sub
fstp
jg
mov
push
ins
out
sub
popf
or
push
or
lods
lock
xlat
iret
jle
mov
inc
fcomp
jae
or
mov
js
loope
ficom
mov
fstp
aam
mov
ins
retf
cmc
add
mov
repz
lahf
mov
arpl
sbb
push
adc
mov
or
lahf
in
xchg
iret
lock
dec
jp
retf
test
fidivr
(bad)
into
stos
push
setne
cmc
outs
xchg
sbb
outs
xchg
fcom
scas
retf
inc
mov
inc
sbb
sti
push
cld
xchg
cmps
mov
arpl
pop
pop
mov
xchg
fs
mov
sub
push
cli
push
and
sbb
xlat
or
add
pushf
or
es
aad
pop
imul
sub
mov
xchg
mov
(bad)
addr16
into
lahf
fcomp
add
imul
and
sub
fdiv
xor
mov
das
pop
call
fcmovnb
mov
popf
push
enter
dec
xchg
popa
mov
sahf
out
cmp
das
imul
inc
xor
scas
sub
mov
xchg
mov
hlt
movs
imul
jno
into
ret
mov
cli
in
mov
sub
mov
aas
cdq
neg
jnp
icebp
or
cld
sbb
cmps
mov
rcr
cmc
test
dec
aas
push
ret
xor
fstp
jmp
aas
or
(bad)
sub
aam
inc
fadd
and
xchg
push
mov
fwait
sub
(bad)
out
mov
test
pop
pop
cmp
std
cld
add
dec
arpl
pop
arpl
push
mov
test
jbe
sti
in
jo
push
xchg
dec
cmp
imul
into
pop
ins
test
popa
xchg
cmp
sub
arpl
jp
or
cmp
jmp
push
jle
jl
lahf
dec
aad
pop
(bad)
mov
shl
and
shl
xor
mov
pop
adc
fdiv
cmp
fdivr
sub
xchg
adc
mov
jg
pop
dec
pop
repnz
scas
sub
adc
bound
xchg
mov
pop
lock
pop
dec
cs
add
pop
sbb
aas
or
push
sub
test
pushf
dec
jmp
lock
inc
mov
mov
adc
mov
mov
push
add
lds
push
and
sub
outs
pop
sbb
xor
xlat
inc
mov
lahf
lds
jo
xchg
push
inc
xor
jne
jnp
mov
push
std
or
test
push
or
mov
xchg
jge
pop
inc
mul
and
call
add
pop
jge
ja
loopne
or
mov
mov
std
dec
out
mov
cld
or
cmp
xchg
lods
fs
daa
test
stos
retf
cmp
dec
(bad)
cmps
icebp
mov
aaa
in
push
aaa
pop
sbb
cmc
in
fild
ret
cld
scas
mov
mov
adc
jne
lock
out
pop
adc
push
das
jb
jo
mov
cmp
sub
hlt
mov
test
int3
add
push
jl
mov
push
lea
sub
dec
xchg
pushf
mov
mov
mov
lock
outs
frstor
in
dec
test
scas
adc
dec
lock
and
sub
pop
fs
iret
mov
jns
jg
iret
jg
iret
jl
mov
addr16
pop
adc
jnp
inc
xchg
pop
enter
xchg
xlat
dec
jo
xchg
jge
cmp
push
sub
leave
pop
and
xchg
dec
push
xchg
xchg
fstp
imul
mov
add
pusha
push
jp
adc
dec
jmp
rcr
jl
push
sbb
xor
jmp
movs
or
cmp
shl
mov
ret
push
fcomp
hlt
(bad)
sbb
push
lods
adc
movs
mov
(bad)
xor
into
jge
popf
xchg
out
sub
push
ins
push
or
push
imul
bound
and
data16
cdq
ror
lods
dec
outs
push
dec
xchg
fwait
sub
add
mov
jnp
(bad)
mov
in
int3
inc
hlt
sti
or
popf
adc
fisub
(bad)
ds
jmp
and
mov
or
xchg
sub
dec
je
pop
and
call
fild
pop
loop
push
jo
mov
es
cmp
or
and
or
stc
lock
inc
sub
lods
repnz
pop
sbb
in
or
retf
and
movs
imul
and
push
xor
adc
aad
repnz
lea
fistp
xchg
push
out
jns
lods
movs
add
push
(bad)
add
mov
and
ja
sbb
pushf
jl
and
fistp
(bad)
pusha
jp
and
sub
int
adc
jbe
mov
mov
or
dec
xchg
stc
addr16
dec
mov
mov
inc
test
outs
cmp
leave
adc
or
lea
mov
add
(bad)
dec
inc
test
or
inc
adc
sub
adc
or
aas
mov
adc
or
(bad)
mov
pop
test
ficom
leave
rol
retf
sbb
and
fisub
sub
pop
cmc
outs
pusha
sub
cmps
cmp
jae
inc
push
xlat
scas
mov
dec
pop
or
retf
aam
xchg
push
bound
jmp
xor
icebp
sub
fiadd
daa
sbb
cdq
nop
xchg
pop
and
mov
adc
in
dec
enter
xchg
out
add
fidiv
adc
dec
movs
je
pop
movs
test
xchg
sub
mov
dec
cmps
pop
jmp
adc
nop
xor
mov
aas
or
test
fincstp
or
mov
and
dec
or
jge
mov
pusha
loope
xor
jmp
(bad)
xor
test
mov
inc
dec
inc
and
mov
or
and
pop
xchg
sub
pushf
dec
or
xor
adc
(bad)
jl
cld
or
jg
loopne
lds
push
mov
mov
pushf
nop
mov
push
sub
fmul
pop
pop
pop
jge
pop
adc
jge
inc
add
cs
push
mov
ins
out
lds
mov
arpl
sub
pop
mov
fneni(8087
push
cwde
mov
dec
pop
popa
xchg
mov
stos
mov
adc
sbb
and
imul
xchg
jno
xor
movs
mov
and
sbb
ja
cdq
das
cld
push
pop
retf
mov
mov
xor
in
(bad)
mov
adc
into
mov
xchg
adc
dec
sti
scas
pop
int3
cmp
xor
sbb
fbld
push
xchg
iret
push
jne
addr16
ja
sbb
sti
sub
stc
sub
fwait
daa
or
dec
int3
es
sub
xor
pop
dec
pop
or
in
add
rcl
cmp
(bad)
jno
jmp
mov
or
pusha
cmps
xchg
push
mov
sti
test
mov
mov
outs
xchg
sub
jg
aam
ins
dec
rcl
inc
pusha
(bad)
cmp
mov
fiadd
xor
dec
adc
push
cmp
xchg
shl
xchg
(bad)
or
sub
cmps
mov
imul
xchg
xlat
or
and
adc
inc
ins
bound
out
mov
int3
aad
jns
mov
(bad)
adc
mov
jecxz
jns
xor
je
pop
stos
add
jo
imul
aad
cmp
pop
jns
retf
in
scas
cdq
(bad)
outs
ror
aas
dec
sahf
mov
stc
pop
or
ror
or
ds
xchg
in
adc
pop
pop
mov
loopne
inc
icebp
cmps
hlt
loop
dec
ret
mov
xchg
xchg
and
pop
jbe
es
jbe
mov
jne
or
jnp
aam
sub
jno
jbe
cmp
imul
sub
jne
xor
inc
cmp
push
or
jno
lahf
jae
test
mov
dec
pop
rcr
pop
jae
xor
sbb
jle
fild
js
mov
adc
in
in
cli
rcl
sub
js
sbb
mov
hlt
loopne
daa
mov
xchg
mov
aaa
push
repnz
adc
enter
mov
or
dec
shl
das
cmc
ficom
jnp
push
ret
(bad)
dec
in
repz
dec
loopne
jg
loopne
mov
test
nop
inc
setg
jns
add
jo
pop
ss
mov
add
leave
out
mov
and
mov
dec
xchg
call
loope
loop
(bad)
fisubr
rol
mov
mov
cmp
lea
inc
fimul
arpl
adc
repz
push
lahf
ds
repnz
je
in
push
jmp
dec
jmp
push
pop
sub
gs
int
jne
jno
xchg
or
xchg
das
dec
dec
sbb
add
xchg
ficom
ja
jb
stc
(bad)
fist
push
inc
mov
cs
fimul
pop
fild
sahf
xor
xor
fild
jne
xchg
mov
cmp
jnp
and
cld
xor
add
or
mov
icebp
aas
cdq
push
in
inc
pop
cmps
or
cmp
xchg
cmp
adc
fs
xor
and
or
adc
push
cmp
std
and
mov
add
push
mov
out
jp
pop
sbb
data16
ins
fimul
pop
pop
mov
mov
faddp
push
shr
adc
xchg
rcl
lods
and
inc
mov
jno
rcr
out
inc
mov
and
xor
mov
std
push
dec
inc
mov
push
sbb
add
jmp
ret
push
dec
lods
cmp
and
(bad)
and
jns
dec
(bad)
jmp
mov
xor
jne
mov
cmps
sti
xor
pop
shl
xor
cmp
mov
call
pop
cmps
loop
cmps
sub
lods
mov
and
popa
adc
xor
pop
sbb
imul
gs
and
call
hlt
mov
pop
fcomp
scas
inc
inc
jmp
cmp
dec
cmp
pop
push
rol
cs
lods
sub
into
push
imul
push
imul
mov
mov
or
shr
daa
or
add
push
add
int3
mov
add
into
mov
lods
mov
cmp
and
retf
xor
std
pop
or
jmp
scas
push
leave
inc
and
mov
jg
loope
dec
mov
jno
inc
je
mov
lea
adc
int3
iret
jmp
or
out
imul
movs
cmp
test
in
frstor
rcr
push
cmp
jmp
or
clc
sahf
dec
sub
push
and
push
add
in
ja
push
add
inc
cmp
jmp
push
loop
add
iret
mov
lea
fld
and
and
adc
jle
aam
or
scas
jge
cmp
jns
inc
push
mov
inc
shl
ins
sar
push
add
sbb
imul
call
pop
sub
xor
adc
outs
leave
mov
into
sub
pop
into
imul
push
ds
mul
add
addr16
fild
sub
retf
lds
sub
pop
mov
(bad)
jl
cmps
push
or
loop
fnstsw
sahf
shr
sub
hlt
push
cmc
pusha
xor
mov
outs
xor
daa
jne
dec
xor
xchg
inc
mov
cmc
(bad)
jg
xchg
push
adc
(bad)
jl
nop
mov
enter
ror
out
out
or
ins
in
pop
mov
mov
les
outs
ja
iret
or
push
sub
movs
inc
xchg
ret
aad
mov
(bad)
push
sbb
mov
outs
mov
sub
jge
stos
xor
out
sbb
add
xchg
add
out
jns
leave
fld
sub
jae
aaa
pop
(bad)
aas
xor
xor
aam
jmp
or
sub
add
and
ins
xchg
push
mov
sub
loope
or
jmp
sub
pop
fsubr
mov
loop
movs
mov
(bad)
dec
push
(bad)
xor
fadd
aam
dec
int3
mov
adc
mov
pop
push
xlat
jno
rcl
xor
mov
push
adc
(bad)
sbb
jno
mov
adc
(bad)
jl
std
out
jge
lds
scas
icebp
imul
dec
loop
mov
stos
and
push
pop
pop
mov
pop
imul
mov
push
push
and
inc
or
cmp
and
das
(bad)
adc
dec
not
sbb
xchg
(bad)
scas
or
pop
fstp
xchg
retf
adc
popf
fld
sbb
mov
aad
push
(bad)
sti
std
scas
xor
jmp
fwait
lock
arpl
stc
ret
iret
or
mov
mov
and
ret
sub
sub
(bad)
cmp
pop
sahf
cmp
add
jo
dec
scas
and
push
xor
xor
sub
push
push
xchg
jge
mov
fwait
xchg
adc
cmp
cmc
out
mov
mov
add
cmp
int
jmp
in
mov
add
(bad)
(bad)
cli
imul
jmp
push
or
lahf
mov
or
repz
cmp
inc
adc
cmp
xor
mov
push
pushf
and
sti
xor
mov
fs
mov
int
push
dec
jle
pop
pusha
add
jle
xchg
cmp
xchg
or
ss
lahf
pop
fsub
add
cwde
jge
push
stos
cmp
rcl
inc
in
ins
xchg
aaa
stc
add
lds
lahf
and
push
xor
scas
mov
out
add
mov
arpl
mov
rcr
into
lods
push
les
mov
pop
in
push
ds
cli
test
mul
lock
cmps
sub
sbb
dec
cmp
ins
ins
push
jbe
cmps
adc
mov
and
or
and
push
xchg
dec
ins
sub
mov
fnstenv
mov
and
lock
sub
push
test
lock
fsub
int
(bad)
iret
adc
mov
push
icebp
fisttp
sub
mov
adc
repz
pushf
mov
aas
add
(bad)
add
mov
test
xchg
loope
sbb
mov
xor
mov
xor
xor
push
sub
scas
cmc
das
mov
int3
sbb
push
imul
add
sub
out
ja
sbb
mov
rol
inc
xchg
push
loopne
shl
xor
test
mov
and
aam
xchg
fincstp
movs
xchg
mov
sar
push
inc
sti
xchg
sbb
xchg
movs
aam
pop
mov
dec
fsubp
sbb
sti
xor
sub
(bad)
adc
pop
shl
shl
sbb
xor
js
cmps
popa
mov
sub
icebp
mov
pop
sti
cmps
sbb
inc
and
gs
mov
push
xchg
or
js
(bad)
cmp
outs
or
stos
icebp
stos
push
or
add
add
sub
pop
xchg
pop
sti
mov
popa
xchg
xchg
gs
dec
mov
into
mov
das
retf
sub
jl
cli
push
or
test
aam
xchg
mul
jmp
test
push
dec
ins
scas
pop
arpl
sbb
loop
push
adc
repz
jne
mov
mov
jns
test
add
mov
xchg
xchg
xor
movs
and
nop
pop
xchg
xor
adc
xor
in
jbe
xor
pushf
pop
jl
push
and
mov
and
and
lea
out
push
add
adc
sbb
cli
in
pushf
and
mov
add
lds
mov
icebp
or
sbb
(bad)
pop
in
ds
xchg
mov
mov
cmp
loop
mov
iret
std
popa
imul
shl
inc
mov
mov
xor
jno
int
mov
add
repnz
out
mov
sahf
clc
mov
cmp
or
clc
cld
retf
cld
mov
cld
cld
and
test
repz
cli
ror
retf
cld
mov
hlt
je
sbb
jnp
mov
sbb
(bad)
mov
loope
sahf
pop
mov
das
mov
add
not
push
push
ja
clc
cmp
push
cwde
aad
xor
dec
addr16
inc
shr
stos
push
iret
stos
(bad)
and
sub
cmc
shr
xor
clc
shr
aam
push
ins
jle
scas
push
jns
inc
adc
xchg
pop
jo
int
or
jb
stos
idiv
fcmovnu
jmp
mov
jle
push
jmp
or
adc
pop
imul
mov
push
jge
adc
mov
(bad)
les
out
xor
sub
sub
nop
mov
pop
fdivr
mov
push
cs
enter
test
mov
inc
push
pop
das
xor
retf
xor
mov
push
mov
scas
sub
mov
push
ror
pop
dec
mov
push
and
adc
pop
test
stos
xchg
daa
push
rcr
and
pop
out
jne
cmp
fsubr
push
or
test
dec
(bad)
retf
xchg
and
aad
call
fstp
fstp
sar
xchg
jmp
aas
repnz
mov
sbb
inc
and
int3
mov
adc
pop
pop
pop
ins
xchg
push
xor
ins
mov
push
xchg
inc
and
sahf
mov
cmp
lods
pop
or
mov
imul
inc
cmp
or
mov
mov
mov
and
xor
dec
push
dec
jle
mov
test
mov
push
(bad)
push
(bad)
mov
sahf
hlt
pop
jp
or
aam
push
or
(bad)
jns
jmp
fadd
leave
xchg
loop
jl
f2xm1
test
out
push
fistp
jle
and
cmps
test
gs
pop
sub
aad
loopne
icebp
(bad)
arpl
inc
dec
in
mov
inc
fimul
bound
in
movs
or
fsubr
outs
xchg
push
mov
ror
out
fiadd
aas
bound
xchg
sub
daa
dec
jne
lods
sbb
xor
stos
and
jno
or
sbb
push
push
jg
mov
lds
mov
push
jge
std
inc
shr
loope
je
cmp
or
sbb
seto
pop
ja
mov
mov
fcmove
push
sub
jno
shr
mov
jge
out
pop
or
js
cmp
nop
fst
sbb
sahf
fdiv
movs
mul
mov
enter
adc
addr16
add
sub
repnz
in
loopne
push
cld
xor
pop
aam
xor
sbb
clc
add
and
ja
in
stos
inc
pushf
stos
aas
(bad)
pushf
xchg
cmps
pushf
aad
pop
jle
inc
movs
mov
into
xchg
xor
pop
push
adc
lods
les
jge
pop
aad
jnp
cmp
int
sub
faddp
pop
aam
xlat
call
dec
mov
pop
pop
mov
sbb
ss
sbb
lock
xlat
rcl
sar
push
imul
mov
mov
jmp
push
pop
sbb
pop
movs
cli
push
sbb
and
lock
clc
lods
ja
sub
leave
ret
jge
stos
sub
les
inc
movs
pop
or
cwde
push
jmp
les
arpl
int
push
gs
mov
into
fst
sti
scas
mov
jns
sahf
mov
pop
std
aam
cmps
rcr
out
mov
loop
out
call
not
retf
mov
mov
and
ror
jo
xchg
test
ret
cmp
mov
mov
lock
cld
mov
retf
mov
jg
jo
out
popf
mov
xchg
mov
in
test
or
push
jnp
rcr
cmp
es
sub
jno
fsubrp
inc
pop
call
pop
mov
sub
push
movs
pop
aam
push
ss
ds
js
jmp
mov
cld
and
xor
aad
mov
push
cdq
jo
push
or
mov
cmps
aad
push
fucomi
loope
sbb
loop
mov
jl
xor
mov
stos
retf
inc
mov
sahf
fild
jne
cmp
mov
cmps
pop
repz
jge
push
scas
mov
mov
add
inc
pop
shl
pop
outs
push
pop
mov
or
cmp
cmps
cwde
in
or
push
ret
cmp
ins
test
jo
mov
fiadd
test
gs
lock
xor
cli
mov
test
mov
hlt
cmp
jg
cwde
movs
pusha
xor
les
push
js
mov
sub
inc
loop
div
pop
jmp
repnz
sub
ja
xchg
push
(bad)
shl
mov
cld
xor
push
adc
mov
les
jmp
lea
inc
jg
gs
lahf
fimul
sub
into
push
and
mov
jbe
ins
and
aad
ror
sbb
mov
inc
std
xor
or
mov
jle
js
stos
rcr
les
cmps
cmp
js
fdiv
scas
imul
sti
push
shl
push
mov
mov
sbb
mov
mov
jmp
pushf
rol
stos
and
sbb
popf
adc
cld
mov
mov
hlt
mov
jbe
aad
mov
inc
and
xrelease
cli
int
or
jns
jmp
push
cld
push
push
shr
mov
pop
in
push
inc
aam
aas
adc
mov
or
jb
les
outs
es
fucom
fmul
sbb
cmp
popa
xor
dec
clc
call
adc
xor
stos
mov
shl
imul
les
inc
add
cmp
lock
sbb
hlt
jg
out
bound
lds
jmp
repz
movs
add
cmc
int3
mov
fiadd
or
mov
inc
push
jae
std
ins
icebp
aam
(bad)
iret
mov
es
push
movs
mov
xchg
stc
out
dec
outs
and
test
cld
or
xchg
and
cmc
xchg
bound
aaa
(bad)
or
(bad)
mov
bound
(bad)
push
mov
add
movs
loopne
xchg
jmp
pop
xchg
adc
push
or
movs
push
enter
mov
aam
lods
mov
mov
mov
shr
not
shl
lea
sub
pop
dec
mov
movs
pop
jl
gs
sub
cdq
add
jb
ss
mov
test
cmp
loope
aas
jae
ror
sub
sar
imul
fild
push
leave
cmp
xor
or
sbb
fisubr
sbb
mov
sub
mov
cmp
jmp
mov
ja
pushf
pop
mov
sbb
push
jne
jmp
or
mov
popa
cli
repz
(bad)
loop
mov
mov
lahf
scas
and
shl
or
mov
pushf
mov
ins
sub
xor
lods
enter
aaa
es
sbb
(bad)
or
test
iret
test
rcl
mov
aaa
and
ret
jg
(bad)
pop
sar
pop
pushf
dec
rcl
jae
mov
jecxz
or
or
adc
inc
mov
std
inc
pop
mov
push
mov
pop
jmp
pop
adc
mov
in
ss
mov
ret
nop
loop
data16
inc
jnp
clc
std
fimul
mov
jg
cwde
popf
push
stc
sbb
fdivrp
xchg
cdq
movs
repnz
sub
into
mov
cmc
adc
add
and
les
in
push
popf
bswap
lahf
dec
stos
jno
dec
imul
mov
js
adc
cmps
imul
cmp
int3
cwde
(bad)
out
imul
add
mov
(bad)
jecxz
cmps
sbb
outs
enter
je
sar
jae
inc
test
out
retf
dec
aas
mov
fstp
sti
inc
jmp
in
or
(bad)
and
fcmovbe
sahf
je
jno
push
mov
ins
push
add
setp
test
sub
aad
mov
jo
std
adc
hlt
ins
inc
fwait
(bad)
fcmovnbe
imul
sub
das
ret
or
adc
adc
xchg
popf
add
fwait
inc
cwde
data16
dec
sub
jecxz
stos
sbb
cmps
xchg
lods
mov
aas
ficom
jge
dec
inc
sti
scas
or
retf
add
cld
outs
out
outs
xor
(bad)
into
push
or
test
jp
adc
daa
lea
popa
mov
inc
shr
push
into
pop
push
jmp
in
jle
and
(bad)
cld
mov
jmp
xor
inc
fistp
(bad)
pop
aaa
jmp
mov
jp
lahf
xchg
add
ret
repz
hlt
repz
adc
cli
scas
aam
inc
les
jns
sub
jbe
or
ds
fs
addr16
cld
sub
fild
je
add
and
std
mov
ret
cmp
mov
test
or
ins
jg
sbb
pop
pop
sub
out
xchg
mov
sbb
fwait
ret
mov
mov
popf
inc
pop
xchg
les
sar
dec
xchg
inc
pop
sub
cmps
cmp
dec
cwde
mov
stos
lods
dec
adc
fild
int3
jb
stos
pusha
fdivrp
inc
cs
xor
shl
xor
inc
mov
ins
mov
cld
retf
clc
scas
mov
pushf
ins
ds
scas
scas
ror
and
mov
cmp
outs
inc
aam
add
adc
pop
mov
xor
and
adc
inc
push
icebp
cmp
push
movs
add
mov
pop
das
or
jb
push
dec
dec
push
(bad)
shr
pop
sub
not
fst
pop
mov
in
adc
shr
pop
out
mov
push
in
push
dec
mov
out
xlat
iret
add
call
std
mov
mov
outs
mov
hlt
xchg
sub
fsub
pushf
scas
add
(bad)
shr
outs
mov
retf
mov
or
clc
cld
retf
mov
mov
mov
stos
retf
nop
mov
cdq
clc
ds
mov
sbb
mov
lahf
mov
inc
mov
dec
(bad)
push
sbb
loop
imul
jg
fs
int
dec
cdq
retf
mov
out
lods
ins
into
imul
in
xchg
je
cmp
cmp
mov
pusha
div
popa
sub
lods
gs
(bad)
ret
mov
pop
js
(bad)
pop
xor
icebp
mov
icebp
loop
mov
dec
or
out
std
xlat
outs
or
push
es
mov
adc
cmc
(bad)
and
add
lock
inc
ins
(bad)
popa
dec
neg
dec
aaa
arpl
inc
scas
loop
movs
fisttp
ins
jle
or
mov
call
movs
gs
call
xor
and
lods
fsubr
cmp
jl
popf
lahf
rcl
sbb
fiadd
in
inc
and
mov
cmps
add
xor
push
pusha
or
jg
dec
ret
repz
inc
je
jmp
in
test
jns
xchg
dec
(bad)
sub
daa
cli
pop
stc
cdq
mov
test
hlt
dec
rcr
xchg
sbb
nop
cmp
stos
call
test
sub
ins
stos
ret
sbb
jl
cld
push
jmp
jns
jne
outs
stos
out
add
les
sub
cmp
imul
sub
or
pop
mov
pushf
ficom
push
dec
and
push
push
jecxz
int
out
pop
inc
pop
mov
daa
cmp
(bad)
ret
rol
(bad)
shl
mov
popf
sub
or
retf
push
loopne
sti
(bad)
out
and
inc
into
rcr
call
ins
cli
popf
mov
aaa
int3
repz
imul
into
out
sub
pop
movs
shl
push
mov
gs
imul
jo
jecxz
jmp
dec
cmps
repz
mov
clc
ret
cwde
and
add
cmps
out
inc
xor
xor
loop
ss
mov
neg
inc
adc
stos
xchg
sahf
adc
or
not
fs
mov
inc
js
nop
push
sbb
jmp
scas
inc
xchg
lods
iret
jnp
xor
jnp
pop
rol
lock
mov
loop
push
jmp
sbb
pop
add
fwait
into
pop
jno
xor
dec
jne
or
xchg
jmp
mov
jg
mov
inc
add
mov
call
lds
mov
push
sub
dec
jmp
pop
int3
jle
repnz
iret
rol
cmp
lahf
lahf
mov
xor
jb
dec
imul
add
jmp
popf
mov
dec
(bad)
in
rcr
jae
push
inc
mov
imul
cmps
mov
push
dec
dec
clc
scas
cdq
mov
shl
nop
jne
(bad)
pushf
mov
bound
sbb
jp
sbb
cmp
xor
movs
movs
dec
ret
test
mov
js
stc
cmp
test
pop
sub
loope
out
add
mov
leave
les
rcr
cli
push
aas
cdq
push
xchg
sub
and
dec
inc
mov
sbb
neg
adc
bound
mov
jmp
mov
fdiv
ins
adc
(bad)
hlt
jl
dec
ret
mov
(bad)
div
stos
daa
mov
pop
dec
into
cmp
loop
mov
idiv
fstp
out
cmp
jle
dec
inc
push
mov
retf
rol
xor
sahf
clc
mov
js
or
clc
jl
scas
clc
cld
mov
test
xchg
mov
add
mov
mov
inc
mov
in
js
mov
mov
outs
movs
out
or
add
or
mov
hlt
cmp
shl
mov
scas
adc
mov
cmp
scas
ror
and
mov
pushf
xchg
fwait
dec
jg
cmp
sbb
pop
dec
ffree
cdq
popf
ja
scas
pop
lds
cwde
xor
popf
clc
dec
inc
inc
(bad)
rcl
retf
xor
fsubr
push
repnz
sub
cmps
jg
cs
(bad)
adc
test
or
dec
stos
add
cmp
add
xlat
mov
jmp
mov
sub
lea
push
sbb
scas
sub
pop
dec
shl
int
out
shl
push
in
push
mov
into
inc
call
ins
loopne
in
pop
or
fldenv
and
das
leave
in
div
ret
or
jge
or
in
adc
vmread
jge
or
add
rcl
add
add
lods
dec
aam
lahf
cld
add
push
add
mov
imul
(bad)
jo
mov
popa
icebp
es
adc
ror
retf
and
mov
imul
mov
or
add
sbb
loope
test
fimul
ds
cwde
jno
(bad)
lods
jp
add
mov
mov
sub
mov
enter
out
(bad)
pop
pop
push
jbe
pop
push
or
add
aad
mov
lds
xchg
in
adc
(bad)
clc
dec
hlt
xchg
mov
inc
sbb
inc
jbe
dec
rcl
push
movs
or
jns
je
cmp
sub
cld
sbb
ret
pusha
mov
xchg
cmp
or
mov
or
xchg
and
mov
scas
inc
sti
(bad)
and
add
(bad)
loopne
fwait
outs
(bad)
enter
loope
mov
pop
mov
inc
in
sbb
push
popf
dec
(bad)
xchg
adc
xchg
add
pop
outs
sub
(bad)
xchg
jmp
(bad)
gs
dec
mov
daa
add
xlat
dec
mov
or
std
loope
shr
jecxz
in
std
or
imul
push
fcom
daa
jb
mov
shr
cmp
ins
or
jmp
test
jp
mov
popf
mov
pop
(bad)
retf
sar
pushf
lahf
ins
movs
jbe
mov
mov
xor
in
retf
lods
mov
pop
jno
stc
iret
add
out
cmp
mov
push
and
or
mov
inc
stc
mov
push
push
je
inc
scas
into
arpl
mov
mov
xchg
adc
add
fisttp
cmp
inc
xchg
jmp
push
mov
dec
pop
adc
gs
mov
shl
add
xchg
test
lock
mov
push
das
inc
mov
shl
xchg
(bad)
or
sub
push
shl
xchg
scas
or
push
push
jecxz
pusha
popf
jb
push
xchg
fst
cwde
dec
lods
sub
or
add
pop
cmps
add
inc
push
xchg
aad
mov
push
aas
in
dec
shr
div
dec
fnstenv
out
in
dec
daa
daa
jg
xchg
test
test
leave
mov
xchg
rol
adc
out
jbe
inc
jno
add
adc
sbb
(bad)
pushf
retf
ins
cdq
retf
jl
dec
(bad)
push
mov
loopne
call
or
daa
pusha
cwde
pop
xor
or
adc
into
dec
ja
add
sbb
js
dec
(bad)
repnz
and
cmp
cmp
pop
test
mov
adc
dec
sub
iret
(bad)
adc
dec
or
in
xchg
scas
and
mov
pop
jmp
or
out
xor
add
xchg
cmp
rol
loopne
jmp
cwde
mov
cmp
sti
hlt
or
mov
out
mov
adc
jmp
loopne
fwait
scas
pop
add
addr16
jle
jle
jmp
push
call
jl
cli
imul
ret
mov
das
stc
mov
and
sub
lea
jecxz
outs
lods
(bad)
dec
add
fistp
ss
and
fisubr
movs
mul
mov
int3
call
xchg
xchg
xchg
movs
add
sbb
xchg
dec
sar
dec
or
addr16
jae
into
push
ss
aaa
das
adc
lds
add
retf
iret
outs
retf
sbb
shl
pop
and
jne
fcomp
out
shl
cmc
adc
out
dec
iret
jmp
mov
jl
mov
shr
repnz
and
pusha
(bad)
int
movs
mov
mov
dec
outs
mov
cld
into
out
mov
call
cwde
mov
fild
mov
adc
or
add
or
dec
xor
outs
xor
loop
retf
in
sbb
icebp
pop
mov
mov
ins
jmp
sbb
mov
mulps
and
jmp
test
sbb
iret
lahf
mov
test
ins
xchg
push
das
fucomip
cmc
das
stc
add
cwde
mov
jmp
ret
mov
xchg
shl
mov
jnp
mov
push
addr16
jnp
loope
fstp
ret
int3
std
jbe
push
mov
push
pop
inc
sub
sub
pop
pusha
mov
sub
aam
int3
cli
pop
sub
inc
inc
jns
ret
mov
es
dec
jbe
(bad)
in
std
in
lods
xchg
jnp
shl
cmp
cwde
jno
sbb
adc
adc
and
(bad)
cmp
dec
mov
mov
call
(bad)
cmp
pop
push
mov
mov
retf
(bad)
fstp
outs
ins
dec
cmp
test
inc
and
ret
ins
into
mov
sub
clc
push
pop
out
test
pop
xor
dec
popaw
mov
mov
jb
out
mov
shr
gs
gs
pop
jne
dec
and
cmp
jmp
push
inc
inc
xlat
dec
xchg
add
sbb
pop
sbb
sub
mov
or
sbb
mov
cmp
bound
data16
gs
jecxz
dec
sbb
mov
(bad)
jae
jg
push
xchg
sbb
jl
addr16
xchg
mov
xor
ret
inc
mov
out
(bad)
inc
jl
mov
push
fsubr
and
jmp
les
mov
mov
inc
jbe
jp
sbb
cs
stc
in
mov
gs
test
mov
(bad)
fnstenv
out
mov
xor
sub
dec
pop
or
rol
leave
not
scas
jnp
out
pop
adc
dec
sti
mov
and
mov
inc
inc
daa
xchg
push
mov
cld
and
imul
mov
adc
jne
add
sti
mov
add
leave
stc
add
xor
jmp
mov
push
cmps
std
and
xchg
sub
pop
inc
pop
sbb
fmul
repz
jmp
sbb
mov
arpl
loop
int
xchg
cmps
dec
sar
mov
sbb
and
inc
jmp
lods
sub
adc
sar
jno
fstp
jmp
(bad)
mov
jnp
ficomp
aas
xor
fbld
cs
pop
sub
pop
in
and
ins
retf
adc
cli
leave
jb
fsubp
(bad)
neg
imul
mov
sbb
pop
movs
mov
mov
popa
(bad)
jge
cmps
mov
and
inc
xlat
jmp
out
retf
test
push
scas
push
pop
adc
or
push
(bad)
cld
dec
mov
jmp
add
lea
mov
cmp
push
mov
mov
mov
xchg
mov
add
inc
cmp
inc
add
mov
in
jmp
jae
inc
mov
xor
mov
(bad)
int3
push
dec
sbb
out
jl
cli
fs
jmp
mov
ins
push
xlat
mov
daa
ins
pop
xor
pusha
and
stos
ds
pushf
push
and
fcom
loop
or
or
sub
in
inc
add
mov
fdiv
push
mov
shl
mov
(bad)
movs
test
mov
pop
push
cmc
out
pop
cmp
lods
or
push
jb
in
ja
cli
xchg
dec
outs
mov
cli
aas
lds
add
call
dec
mov
jns
shl
imul
adc
scas
pop
xor
sahf
jge
pop
xor
lds
mov
into
rol
inc
cmp
test
push
mov
loopne
int
fmul
dec
mov
pop
stos
ja
mov
add
lea
mov
mov
aad
popf
fs
mov
retf
mov
xchg
inc
push
sub
push
mov
mov
dec
pop
lock
add
mov
add
int
(bad)
mov
pop
pop
clc
ret
cmp
jmp
push
pop
out
or
xchg
ret
pop
or
int
mov
fist
mov
das
jne
push
cld
cmps
or
adc
jns
adc
mov
xor
pusha
mov
push
cmp
test
cmps
or
push
jns
jmp
or
cmp
ret
retf
jne
retf
xor
ret
scas
ins
imul
in
call
gs
scas
shl
push
movs
push
je
pop
rol
push
jmp
xor
les
btc
and
fcmovnu
mov
mov
in
ss
push
lar
aam
and
push
lods
stos
or
into
in
popf
jecxz
dec
mov
push
rol
jmp
fld
dec
mov
in
pop
lahf
adc
and
add
inc
dec
mov
in
mov
and
scas
repnz
sub
dec
mov
xchg
arpl
cmp
pop
stc
stos
xlat
icebp
push
mov
mov
not
in
out
jmp
mov
push
inc
aad
mov
mov
(bad)
xchg
pop
sbb
into
pop
in
mov
push
dec
mov
pop
and
xor
das
mov
pop
jne
aad
fwait
mov
fist
dec
cmp
pop
mov
add
adc
aas
loope
iret
xchg
jg
and
(bad)
jg
bnd
mov
jmp
hlt
in
test
movs
sbb
and
mov
dec
cmp
stos
sbb
push
enter
mov
out
ret
(bad)
jmp
scas
mov
(bad)
js
mov
cmp
mov
test
push
mov
push
addr16
fistp
adc
fisub
mov
xchg
lock
popa
jg
adc
and
cmp
cmp
sti
fidivr
push
sbb
gs
aas
popa
xor
imul
adc
cmp
adc
out
in
call
push
cdq
xchg
push
add
loop
repz
sub
jno
push
daa
leave
and
push
mov
test
into
mov
out
xchg
pusha
or
in
sti
mov
pushf
dec
cmps
mov
sbb
sbb
(bad)
sbb
gs
(bad)
js
loopne
nop
std
shl
jae
sbb
fdivr
and
(bad)
xlat
nop
lods
shl
out
aad
std
and
mov
movs
mov
call
xor
pop
enter
ficom
jmp
sahf
lods
xor
ss
daa
xchg
xor
mov
sbb
jge
xchg
hlt
test
clc
dec
mov
mov
(bad)
out
mov
mov
and
lea
cli
mov
(bad)
lea
in
pop
mov
jge
rol
clc
adc
mov
sbb
pop
fwait
add
mov
sbb
(bad)
nop
das
pop
or
push
cld
sub
scas
cs
cmps
(bad)
mov
outs
mov
call
hlt
test
sbb
cwde
jnp
jg
aad
and
cmp
sbb
lds
cmc
movs
fdiv
fadd
fmul
fdivr
pop
xchg
xor
fmul
or
sub
mov
mov
out
mov
(bad)
mov
adc
nop
adc
and
dec
mov
xor
int3
iret
lahf
(bad)
fadd
xor
inc
cmp
sub
repz
cmp
fs
mov
je
sub
inc
sbb
jmp
or
(bad)
jne
loope
idiv
cwde
add
loopne
cmps
imul
sbb
cld
push
inc
push
lods
adc
add
cmp
push
int3
jmp
sbb
push
xor
inc
ffree
mov
sub
push
jge
xor
fcomp
imul
stos
sbb
sbb
fsubr
jmp
or
rcl
dec
push
stc
fadd
fcmovnu
mov
sahf
das
mov
or
shl
imul
les
or
or
mov
cld
enter
js
jmp
cmp
cmps
sub
jp
out
push
stos
lahf
ja
xor
and
out
mov
fisttp
fincstp
stc
in
pop
imul
int
mov
rcl
push
scas
push
pusha
dec
fwait
ret
ret
cmp
or
sub
shl
das
jp
xor
and
dec
je
cld
(bad)
sub
pushf
sub
xchg
data16
retf
pop
jmp
icebp
das
cmp
dec
aad
and
pop
or
sbb
sbb
mov
sub
xchg
pop
cs
sub
into
repz
adc
leave
aam
out
cs
push
repnz
xchg
out
jmp
lods
and
jg
jb
enter
nop
xchg
out
fidiv
or
nop
xor
xor
int3
xor
fild
mov
xlat
add
fs
fwait
dec
cli
fwait
repz
int
or
push
and
stos
imul
ss
bound
(bad)
jge
pushf
cmp
nop
js
mov
and
lods
out
push
loopne
xor
test
add
push
rcr
push
pop
and
sti
push
inc
nop
adc
push
imul
sbb
aas
or
leave
adc
popa
fmul
mov
cmp
or
call
into
mov
repnz
dec
sub
xchg
xchg
push
div
jg
push
dec
ss
inc
xchg
imul
iret
mov
or
imul
adc
(bad)
cmp
push
retf
sub
mov
ins
add
mov
fwait
outs
out
shl
(bad)
adc
stc
and
in
ja
sar
sbb
fwait
or
(bad)
ficom
or
mov
jl
inc
(bad)
ror
bound
repnz
cwde
and
icebp
jecxz
in
icebp
pop
movq
sub
popa
shr
sar
lods
cmp
xchg
mov
stos
inc
push
pop
leave
jns
jns
(bad)
mov
add
ins
jmp
mov
mov
pop
pop
les
retf
js
pushf
and
cli
or
in
adc
test
hlt
lods
int3
(bad)
loope
(bad)
(bad)
pop
mov
ret
stos
jmp
push
in
push
push
jb
gs
inc
cmps
loop
cmp
push
aas
mov
addr16
mov
and
xlat
pop
sti
add
pop
add
rcr
push
inc
sub
sub
xchg
push
out
adc
push
aaa
cmp
jbe
test
xchg
sub
jnp
lock
aam
inc
pop
jns
xchg
dec
or
fisubr
popf
fisttp
sub
xchg
dec
ret
xchg
bound
scas
test
add
or
pop
add
gs
ret
pop
mov
xchg
ret
sub
cld
mov
mov
test
popf
lock
pop
adc
div
dec
retf
push
out
stos
xor
addr16
jg
in
mov
sub
or
mov
iret
les
cmp
cwde
shl
or
sub
aam
into
test
lahf
pop
and
add
inc
xchg
inc
loopne
in
and
xchg
dec
retf
les
in
jmp
lds
push
mov
pop
sbb
and
out
rcr
popa
inc
mov
mov
out
jecxz
out
mov
cmc
ss
int
out
mov
std
mov
(bad)
stos
jmp
inc
add
lea
adc
jecxz
and
fbld
je
inc
mov
pop
mov
cmps
js
inc
mov
cmps
retf
pop
cmp
outs
fild
fdiv
aaa
movs
loopne
mov
xchg
in
bnd
xlat
cmc
fcomp
mov
aas
rcr
cld
add
mov
add
test
cld
jl
stos
xor
nop
loopne
call
ja
fcomp
inc
xor
loop
jp
and
leave
je
ret
jns
cs
in
jb
loopne
and
mov
jle
aas
fst
mov
idiv
cmp
pushf
shl
shr
and
js
sub
dec
bound
out
arpl
jno
sub
in
sbb
movs
(bad)
pushf
nop
push
gs
outs
iret
jle
or
test
or
pop
mov
mov
clc
scas
retf
cld
xor
das
js
dec
das
cmp
outs
clc
cmp
mov
stc
std
mov
cmp
dec
scas
cli
aas
enter
or
jg
stos
mov
jle
sub
cmp
stos
mov
mov
dec
stos
mov
cld
call
std
mov
mov
dec
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
push
int3
mov
adc
js
mov
mov
int
mov
mov
retf
cld
retf
cld
mov
dec
mov
cmp
das
cmp
scas
clc
cld
retf
cld
retf
cld
retf
jge
adc
cmp
out
clc
cld
retf
js
out
mov
lods
sub
bound
outs
mov
xchg
inc
sbb
shld
hlt
xchg
into
cmps
test
retf
js
(bad)
int3
sbb
outs
out
mov
(bad)
mov
and
cmc
sbb
inc
(bad)
fisubr
stos
lock
jmp
jp
(bad)
xchg
mov
pop
dec
dec
fmul
pushf
and
pop
or
data16
xchg
mov
jmp
stc
aad
push
int3
sbb
fs
jns
leave
push
fadd
cli
cmps
fisttp
ret
(bad)
fimul
(bad)
sub
pop
jbe
dec
js
pop
jmp
push
frstor
cwde
sbb
dec
push
cmp
sbb
popa
not
cmp
mov
jmp
scas
vmwrite
push
mov
or
mov
ins
jge
sub
and
inc
inc
nop
mov
add
loopne
mov
jmp
and
imul
test
sbb
xchg
jno
pop
neg
pop
xchg
and
test
push
lahf
jae
ds
dec
fwait
pop
lock
(bad)
dec
mov
push
mov
adc
xlat
xlat
cld
(bad)
std
in
add
push
xchg
inc
and
ja
jno
jle
sbb
in
gs
(bad)
aad
cmp
ins
adc
jecxz
dec
push
mov
cmp
mov
sub
sub
fisttp
das
xchg
stc
fadd
or
outs
fs
mov
push
psubd
dec
cmp
scas
push
push
add
xor
push
mov
cmp
cld
aas
push
xchg
adc
or
adc
inc
pop
nop
xchg
mov
lods
movs
mov
(bad)
mov
lea
fistp
pop
fmul
and
cdq
sub
test
mov
(bad)
pop
ja
sub
mov
aam
cmp
add
mov
cmp
lds
pop
cmp
add
rol
retf
inc
xchg
dec
(bad)
loope
xchg
mov
xor
std
add
loope
into
inc
ins
xor
mul
sti
mov
arpl
jmp
add
js
mov
cmp
aaa
jmp
sub
cmc
push
daa
inc
ins
and
push
fidiv
push
loop
lock
mov
cwde
rcr
push
ins
mov
jp
push
and
pop
pop
jo
sbb
add
xor
pop
std
mov
mov
retf
pop
or
repnz
loope
xchg
xor
rcr
movs
les
retf
pushf
adc
call
push
mov
rcl
mov
sbb
call
push
pop
mov
mov
inc
ss
or
and
dec
sbb
mov
jg
inc
int
or
or
mov
ret
mov
push
xchg
xor
pop
test
jo
retf
adc
in
mov
inc
mov
push
pop
shl
inc
call
popa
xor
das
fisttp
imul
mov
or
and
loopne
das
ret
push
(bad)
adc
dec
add
imul
jns
mov
pushf
mov
movs
push
add
cwde
call
repnz
sbb
adc
push
push
pop
call
ds
jp
mov
push
cmc
adc
std
jns
xor
dec
aaa
pop
adc
fs
push
pop
in
daa
mov
and
ja
sub
dec
inc
aad
jmp
ins
cmc
dec
mov
mov
scas
cli
js
lods
jnp
mov
pop
jecxz
mov
cmc
gs
popf
test
cmps
push
icebp
push
ret
cld
retf
lods
cld
jecxz
sbb
pop
pop
xchg
adc
and
aas
mov
jns
xor
js
call
retf
sub
jmp
ins
fild
js
call
or
int
cmps
cld
cld
dec
das
mov
cld
mov
cmp
dec
out
mov
js
sub
(bad)
cmps
xor
jl
out
mov
dec
cmp
adc
xchg
add
pop
pop
push
rcr
xchg
stos
xchg
shr
xchg
cdq
mov
mov
push
pop
and
mov
movs
lock
aad
adc
cmps
push
test
inc
dec
pop
or
push
jno
adc
push
or
fs
mov
push
sar
add
inc
or
xchg
js
add
lahf
sub
sub
mov
in
fs
repz
retf
jne
xchg
mov
jmp
arpl
add
(bad)
int3
add
inc
push
or
adc
nop
dec
jge
xchg
mov
out
test
(bad)
mov
xchg
add
or
cmp
inc
popa
test
je
or
mov
adc
adc
imul
(bad)
mov
out
gs
mov
cmp
sub
out
fist
dec
or
popf
add
pop
mov
fmul
sub
sub
int3
sbb
lock
loop
sbb
gs
and
loopne
call
cs
pop
loope
stos
and
dec
mov
pusha
daa
mov
or
popf
dec
mov
pop
push
shl
test
ins
or
push
fisttp
std
push
mov
jns
int
fbld
or
cmp
(bad)
xchg
xchg
shr
loop
adc
inc
test
mov
sub
jg
nop
pushf
cmps
scas
sub
mov
or
adc
call
xchg
test
dec
sbb
or
ror
inc
or
out
leave
movs
xchg
lds
je
jbe
mov
xchg
push
pop
(bad)
retf
fiadd
push
sbb
sub
lods
cmp
sub
movs
cdq
mov
mov
adc
push
jnp
push
mov
mov
bound
ret
mov
xchg
xlat
fistp
add
les
sub
sub
cmps
add
repz
cmp
and
push
jge
push
inc
adc
xchg
aas
mov
jno
out
cmp
lea
mov
fimul
retf
(bad)
stos
jl
mov
fsubr
jmp
jmpw
add
lea
nop
add
mov
xchg
(bad)
sub
dec
movs
jb
imul
adc
mov
xchg
(bad)
pop
adc
cmp
cmp
test
xor
mov
sbb
sahf
or
js
movs
popf
movs
sbb
sbb
addr16
repnz
adc
mov
push
dec
or
jne
mov
jbe
lahf
fst
jge
jbe
jb
shr
jg
ins
pop
or
mov
jmp
or
cmc
push
bound
push
jno
shl
xor
dec
test
sbb
int3
in
(bad)
scas
sub
iret
repz
mov
xor
and
or
in
cdq
mov
xchg
int3
mov
mov
dec
push
cs
es
in
cmp
push
arpl
ins
dec
sbb
dec
out
fs
pop
xor
adc
test
push
jecxz
fstp
or
xchg
je
and
daa
mov
fistp
ins
pop
addr16
mov
add
jns
sar
mov
js
jo
cmps
je
out
xor
xor
rol
fsqrt
push
cmp
in
(bad)
push
pop
(bad)
and
xor
pop
xchg
xlat
or
retf
ins
lods
repz
frstor
and
mov
adc
je
jae
pop
pop
jb
iret
loopne
aas
stc
sti
lahf
add
or
push
sub
or
iret
push
jno
nop
xchg
(bad)
xor
mov
cmp
adc
(bad)
fist
xchg
fwait
jo
mov
fdiv
cdq
das
sar
add
push
leave
cmp
jge
clc
pop
pop
pop
stc
loop
packssdw
fnstcw
repz
imul
adc
repz
dec
pop
lods
repnz
mov
imul
test
xchg
pop
call
push
(bad)
sub
les
adc
mov
cli
sahf
popa
js
pop
sar
sub
ins
movs
push
movs
test
and
jne
inc
jno
mov
xchg
lahf
imul
aas
adc
sub
push
push
xchg
scas
fistp
mov
adc
clc
mov
jge
add
sbb
fistp
add
test
mov
bound
ins
inc
jns
idiv
or
mov
ret
into
mov
sub
push
dec
movs
out
(bad)
(bad)
cmp
xchg
or
mov
mov
cmp
movs
icebp
call
ins
(bad)
(bad)
adc
(bad)
mov
aas
out
cmps
mov
xchg
dec
xor
or
cmp
test
xchg
or
mov
repnz
jnp
out
and
dec
popa
mov
shr
sbb
cmp
pop
mov
mov
add
mov
je
fdiv
mov
ret
jb
jo
mov
xor
xchg
loop
enter
(bad)
cmp
sahf
clc
xor
das
mov
cmp
retf
cld
mov
clc
cld
mov
lock
or
in
jns
aas
lods
and
push
lods
stos
inc
inc
mov
in
cmp
mov
mov
or
mov
stos
test
push
popf
push
fldenv
cmp
dec
xchg
jns
adc
cs
mov
push
inc
jp
(bad)
and
or
fadd
call
inc
lods
movs
mov
lds
out
and
add
dec
and
push
aad
mov
pop
mov
call
mov
adc
jecxz
mov
xchg
pop
dec
mov
jp
mov
outs
add
arpl
pop
sub
fcom
mov
jae
adc
jmp
jo
mov
and
pushf
xchg
push
lock
inc
outs
or
xchg
inc
imul
lea
daa
jl
loopne
fisubr
mov
in
or
outs
test
mov
lea
pop
add
or
pop
mov
in
je
push
cs
push
push
(bad)
xor
loop
xchg
sub
cmp
mov
xor
push
dec
mov
xlat
xchg
sahf
push
cmp
jae
jo
mov
imul
inc
xchg
sub
xchg
test
dec
xchg
cmp
loope
loopne
pop
out
mov
test
call
jmp
mov
or
sbb
sbb
sar
shl
(bad)
test
lods
gs
inc
ss
fld
jl
mov
pop
and
jg
imul
pusha
mov
sbb
dec
cs
add
jecxz
lea
test
lea
ins
or
or
in
je
gs
push
add
sub
xchg
and
mov
ja
icebp
push
jmp
loop
in
mov
cmp
mov
add
data16
in
movzx
xchg
jp
bound
pop
lods
mov
rcl
jnp
and
imul
or
inc
shl
test
jnp
push
sbb
push
nop
mov
ins
jl
xlat
clc
mov
pop
ret
xlat
jae
inc
mov
sub
xchg
int
add
in
(bad)
bound
addr16
sbb
stos
mov
cs
nop
sub
or
push
add
and
das
call
aad
stos
and
imul
jmp
lds
scas
cli
push
xor
icebp
push
mov
ja
xor
xor
mov
clc
stc
ror
xor
adc
mov
jne
add
jns
and
cmp
pop
mov
test
pop
cmp
movs
aam
add
retf
mov
int3
cs
jmp
inc
inc
jno
stos
jno
ss
jo
sub
inc
(bad)
lods
sbb
sbb
pop
sbb
scas
in
push
fs
cld
outs
es
inc
sbb
jmp
pop
and
dec
popa
and
xchg
and
mov
jg
or
sti
test
retf
pop
cmp
xchg
mov
inc
mov
fisub
dec
mov
nop
lods
inc
repz
cdq
cli
int3
cwde
sub
repnz
push
lods
leave
mov
int3
jno
out
rol
cmp
mov
mov
inc
and
mov
pop
pop
cdq
sbb
add
mov
not
mov
mul
cmp
rcr
aad
push
call
pop
dec
(bad)
mov
cmp
pop
mov
add
ud1
mov
jns
aad
push
and
inc
inc
cmp
mov
lods
pop
dec
mov
sub
into
repz
psrlw
mov
or
adc
dec
aam
or
ret
pop
aaa
jae
push
daa
js
in
add
aad
jo
or
je
sub
dec
jmp
ret
retf
loope
push
pop
add
scas
mov
dec
das
mov
cmp
retf
cld
dec
scas
cmp
cmps
cmp
cmp
in
sahf
idiv
mov
sahf
iret
rol
adc
mov
or
mov
xor
xor
mov
mul
loop
inc
popf
cwde
(bad)
pop
jecxz
add
shl
out
retf
int
sahf
leave
push
fild
and
xor
mov
(bad)
shl
and
ins
and
in
cmp
dec
loope
aaa
out
aas
dec
aas
enter
inc
push
(bad)
mov
inc
add
adc
sub
xchg
aam
dec
lods
push
std
cli
and
and
mov
rcl
fwait
in
adc
cmp
xchg
jmp
mov
jmp
and
scas
std
ret
pop
mov
adc
mov
jmp
lock
mov
mov
xchg
pop
mov
imul
rcr
outs
mov
cmp
xlat
out
xor
(bad)
adc
fbstp
mov
lea
outs
or
enter
sar
sub
sbb
sub
inc
or
daa
adc
sti
pushf
jno
inc
push
xchg
cmp
sahf
imul
add
sahf
xchg
neg
rol
iret
inc
xchg
mov
dec
inc
sub
add
stos
pop
adc
fld
push
leave
out
les
sbb
and
xor
into
cs
call
sub
shrd
cmp
mov
int3
arpl
add
and
push
dec
jo
cmps
movs
arpl
div
pop
inc
mov
clc
test
xor
jne
mov
cmp
cdq
lock
mov
loopne
jmp
cmp
mov
das
inc
popf
cdq
mov
jmp
aaa
and
outs
in
mov
mov
xchg
and
out
stos
dec
(bad)
shl
aaa
call
jnp
mov
aad
mov
and
mov
test
push
sbb
xor
test
inc
jnp
pop
pop
sub
sub
add
fnsave
ret
pop
jmp
or
inc
mov
mov
adc
mov
add
mov
cld
mov
mov
push
xor
js
inc
mul
aam
inc
mov
ds
xchg
jne
(bad)
adc
lods
inc
mov
in
shl
retf
cmp
or
(bad)
std
dec
stos
sbb
dec
adc
aam
push
jecxz
xlat
sbb
lahf
dec
ret
nop
or
iret
jns
movs
repz
xor
mov
repnz
sbb
test
clc
hlt
int3
je
push
imul
add
cmp
pusha
xor
mov
repnz
ss
ds
mov
dec
xchg
and
cmp
xchg
scas
data16
xor
push
inc
sahf
mov
xor
mov
js
jb
into
adc
pop
fwait
loopne
enter
xor
scas
add
leave
inc
jnp
inc
adc
pop
popa
nop
(bad)
aaa
sahf
mov
mov
pop
fs
xor
mov
ss
and
aad
inc
movs
xchg
jmp
or
xor
es
dec
out
mov
aam
inc
into
sahf
aam
mov
repnz
mov
(bad)
test
pop
push
es
nop
cmp
jecxz
add
aam
push
add
mov
push
sbb
add
lahf
sub
mov
push
aaa
sbb
scas
stos
in
aam
(bad)
mov
adc
ret
sub
xor
push
jmp
ins
xlat
inc
jmp
nop
aaa
inc
je
fdivr
test
cmc
das
pop
or
or
or
cmp
leave
mov
mov
imul
loopne
js
inc
cmc
add
std
mov
mov
jmp
je
(bad)
arpl
std
loopne
xchg
call
xchg
cmps
jo
adc
bound
jno
in
adc
add
mov
out
sbb
xchg
out
wrmsr
sub
inc
dec
cmp
pop
test
popf
mul
scas
leave
fs
xchg
das
or
push
cmp
mov
nop
add
push
fcmovne
scas
repnz
jne
out
nop
sub
or
clc
ins
xchg
popa
test
in
f2xm1
inc
fwait
sbb
fdiv
push
push
fstp
dec
test
fnstcw
(bad)
ins
push
xchg
cmps
lahf
ja
movs
fnstcw
aaa
outs
mov
mov
pop
fmul
dec
jmp
mov
cmp
bnd
adc
sahf
mov
cld
mov
cmp
outs
cli
std
mov
cmp
retf
clc
or
jo
xchg
lods
movs
(bad)
push
mov
imul
std
je
and
mov
bound
call
push
iret
add
cld
scas
mov
mov
nop
add
inc
xchg
add
add
inc
adc
xor
xor
mov
and
inc
lds
mov
hlt
std
xchg
adc
cdq
imul
adc
mov
adc
jmp
mov
mov
stos
loopne
je
aam
jb
cli
ja
cmp
jnp
retf
cmps
das
fdivr
outs
imul
add
lahf
ins
xor
lods
scas
dec
mov
xchg
pop
bound
aam
adc
push
adc
jbe
jg
fcom
ficomp
pop
rol
dec
inc
retf
sub
mov
xlat
in
aaa
jge
into
(bad)
out
mov
bound
in
sar
jmp
sub
stos
xor
pusha
and
sub
cmps
sub
adc
cdq
cs
popa
jp
retf
mov
adc
retf
pop
test
cmc
test
cmps
or
pop
xchg
shr
push
push
popa
rol
retf
adc
and
loope
sub
mov
cmp
or
pop
popf
mov
and
push
and
add
sbb
sbb
cmp
mov
ret
mov
jmp
adc
into
jmp
shl
cli
ja
pop
lds
outs
push
sub
sbb
xchg
lea
(bad)
scas
shr
push
daa
addr16
add
ror
sar
cs
jo
dec
popf
cdq
jb
jnp
xchg
pop
jb
fwait
ret
push
ret
mov
mov
shl
jns
ins
rcl
mov
or
retf
ja
or
sub
jo
fnsave
ins
loopne
sub
xlat
push
dec
jmp
dec
sbb
push
inc
xor
xchg
inc
sbb
(bad)
loopne
stc
or
mov
mov
pusha
jmp
stos
add
call
mov
repz
mov
sbb
in
lahf
cs
xchg
daa
dec
mov
scas
in
cmps
gs
mov
jno
jnp
repz
pop
mov
sbb
movs
arpl
push
adc
jae
sub
mov
dec
mov
pop
xchg
adc
sub
xchg
jae
jle
mov
ror
or
pop
popa
pop
scas
les
add
xor
icebp
mov
inc
movs
popf
pushf
xor
mov
add
push
fidiv
and
imul
stos
cmp
in
xchg
add
movs
push
mov
push
push
adc
mov
ret
mov
mov
repnz
test
and
xchg
fs
push
loop
js
repnz
inc
aaa
push
jl
pop
gs
bound
test
or
mov
jl
jb
(bad)
pusha
dec
mov
les
or
scas
mov
popf
outs
mov
xchg
fidivr
jae
mov
std
movs
xchg
retf
and
sti
not
dec
sbb
(bad)
in
aam
outs
jecxz
pop
dec
stc
aas
(bad)
and
mov
cmps
scas
push
pushf
mov
xor
les
clc
push
pop
inc
inc
xchg
dec
loop
fs
lea
movs
mov
mov
push
cmps
dec
adc
cwde
and
push
xor
clc
mov
fcom
jle
mov
jbe
or
adc
gs
rcr
mov
adc
aam
and
mov
inc
jge
hlt
cmp
mov
fwait
xchg
add
and
rol
jb
xchg
inc
push
out
out
call
test
sub
jl
mov
or
(bad)
cmp
inc
outs
in
fld
vmovlps
adc
shr
jecxz
xor
inc
xchg
or
call
in
add
and
int3
push
jl
pop
imul
retf
pusha
xor
adc
push
retf
fimul
fiadd
mov
sbb
and
mov
scas
or
dec
adc
cdq
xlat
pop
out
out
mov
sbb
lds
pop
ins
adc
mov
stos
or
pop
sbb
jecxz
inc
aad
cmc
jmp
bound
and
sbb
pop
xchg
mov
icebp
jmp
push
jbe
inc
mov
dec
xor
jbe
push
fwait
push
xor
sti
pop
jns
loop
rcl
mov
cdq
push
and
lea
fldcw
sub
jl
jne
mov
add
movs
in
mov
push
test
dec
mov
jno
sbb
xchg
addr16
jno
popf
cmp
(bad)
pop
(bad)
(bad)
cmps
inc
jl
mov
mov
outs
mov
push
(bad)
adc
(bad)
dec
cmp
les
jge
push
in
aad
jbe
stos
adc
pop
fbld
out
out
shr
mov
ins
(bad)
inc
(bad)
cld
mov
enter
lods
mov
dec
dec
mov
cdq
stos
mov
test
out
inc
push
mov
rol
ror
fdivr
or
movhps
or
inc
shl
imul
pop
(bad)
not
retf
jecxz
push
cmp
xor
mov
push
(bad)
adc
mov
add
cmp
sbb
sub
jbe
aad
rcl
call
mov
mov
das
push
aaa
test
shr
daa
or
adc
test
test
pop
(bad)
and
sahf
sub
(bad)
mov
je
cld
aas
in
ins
mov
xor
and
and
call
pusha
mov
(bad)
mov
stos
xor
and
mov
or
retf
stos
xchg
mov
mov
mov
call
adc
mov
lahf
ss
test
mul
ja
(bad)
push
es
jecxz
cmp
dec
pop
mov
outs
and
mov
retf
inc
out
jl
pop
je
in
rcl
stos
jg
cmp
shr
pushw
jge
fnsave
lahf
add
daa
lods
sub
mov
or
imul
ins
and
test
scas
test
mov
mov
aam
(bad)
in
add
and
in
pop
sti
mov
stos
loope
cmc
dec
das
repnz
xor
push
js
push
mov
inc
dec
icebp
mov
push
test
lds
pop
(bad)
(bad)
pop
fwait
push
fcompp
cli
push
add
mov
add
bound
retf
loope
cmp
or
les
test
bound
test
add
scas
inc
jnp
and
and
add
stos
and
mov
bound
ficom
movs
lahf
fneni(8087
rcr
adc
jae
jbe
mov
out
mov
push
(bad)
out
mov
xor
outs
ror
sti
shl
mov
imul
in
inc
pop
call
mov
mov
dec
popf
push
(bad)
sti
(bad)
pop
cmp
loop
pop
mov
jno
(bad)
cmp
sbb
adc
push
mov
jns
ds
sbb
lock
or
cmc
and
add
cmp
mov
in
push
imul
aad
xlat
adc
dec
ja
(bad)
mov
mov
ss
xchg
cld
jnp
adc
add
mov
in
fs
cmps
xchg
popf
push
ins
ins
aas
push
inc
js
mov
pop
fcmovnb
adc
dec
push
inc
ins
xchg
arpl
stc
mov
mov
or
push
repnz
cmp
jg
leave
or
jecxz
mov
adc
cmp
adc
mov
push
test
dec
push
movs
aas
and
xchg
adc
inc
sub
push
or
fidiv
arpl
dec
mov
jno
xor
xchg
or
cdq
repnz
push
pushf
lea
movs
fistp
stc
sahf
and
clc
sbb
test
fbstp
jge
les
sub
push
and
jne
jno
add
sti
adc
and
rcl
ins
lods
std
jno
jo
ins
pop
mov
jae
stos
cmc
(bad)
sub
xchg
push
mov
addr16
sti
mov
vfmaddps
xor
nop
push
jns
adc
adc
cmps
lea
dec
(bad)
in
inc
out
data16
retf
sbb
mov
test
mov
push
pop
ret
in
inc
popf
sbb
jb
xchg
add
pop
popf
test
add
sti
(bad)
sbb
pushf
sub
inc
cwde
adc
test
pusha
fld
fcomp
out
arpl
dec
fld
in
push
mov
inc
in
ins
or
or
xor
cld
xor
in
or
and
fs
inc
mov
test
cmp
test
mov
mov
jg
cdq
inc
xor
xchg
repz
clc
(bad)
push
jmp
sub
fwait
inc
push
pop
and
cwde
cmp
call
sbb
outs
push
iret
jnp
test
aas
dec
adc
mov
clc
jmp
mov
dec
jnp
mov
cs
mov
or
ficomp
sbb
add
add
lods
sub
cmp
adc
nop
or
dec
sub
fs
pop
ret
and
mov
or
daa
mov
cmp
push
mov
dec
fistp
and
push
cdq
pusha
dec
dec
add
mov
test
lods
push
adc
movs
idiv
mov
std
dec
sub
repnz
pop
fistp
or
cmp
mov
out
popa
add
(bad)
pop
pop
jmp
cld
dec
xor
ins
and
jg
ja
lds
pop
mov
or
adc
or
outs
pop
pop
out
outs
pop
rcl
repnz
outs
jo
loope
ss
shr
inc
inc
adc
outs
popa
push
jle
cdq
jns
adc
movs
mov
dec
ror
sbb
lods
push
icebp
lods
fwait
jae
pop
(bad)
retf
lock
mov
stos
out
pop
nop
js
in
idiv
dec
fwait
push
xor
sbb
or
mov
inc
lds
mov
inc
or
or
xchg
adc
loop
mov
add
and
inc
and
mov
call
mov
jg
fcom
les
cmp
jns
xor
xor
call
mov
push
pop
(bad)
std
sbb
inc
push
cmp
cld
psraw
or
jle
pop
jae
add
pop
cli
cld
lahf
mov
out
in
popa
neg
or
xlat
jns
inc
adc
mov
dec
xor
pop
jns
cmc
dec
dec
je
sbb
jo
into
cmp
dec
mov
cmp
cmp
jle
cmp
bound
jnp
sub
je
cmp
into
(bad)
icebp
jae
xchg
fnsave
or
mov
stos
mov
jo
loopne
je
into
sub
and
jl
loope
imul
lds
mov
mov
xchg
sub
cld
adc
jmp
inc
and
push
or
or
jmp
push
or
in
sub
ja
loopne
xor
and
jno
jo
(bad)
fidivr
iret
stos
imul
stos
cmps
retf
loop
(bad)
retf
jle
cmp
jmp
pop
fs
push
lods
fwait
dec
dec
or
pop
jne
sbb
cmp
add
out
and
sar
(bad)
jmp
ror
cmp
mov
inc
popa
sbb
xchg
in
repz
add
mov
loop
push
fisubr
movs
mov
test
xor
mov
mov
mov
xchg
sbb
test
clc
and
push
mov
call
mov
xor
cdq
push
xchg
xchg
adc
xchg
enter
dec
mov
arpl
xor
bound
aam
dec
cs
pop
gs
(bad)
in
pop
scas
xchg
inc
fld
adc
jle
pop
nop
pop
not
inc
pusha
mov
push
fcomp
in
jbe
out
xor
dec
adc
mov
addr16
pop
mov
add
fnstsw
jno
mov
pop
jp
ds
xlat
jo
(bad)
call
aaa
mov
aaa
or
inc
out
mov
jge
xlat
enter
push
out
inc
mov
jne
and
in
push
sbb
adc
or
in
jns
test
push
xchg
movs
movs
int3
cmps
aaa
inc
test
pop
cdq
ds
and
push
pop
and
(bad)
mov
jne
lahf
sbb
aaa
jecxz
call
out
adc
mov
xor
cmp
pop
out
mov
loopne
mov
mov
dec
in
add
pop
(bad)
mov
ja
adc
lock
jb
icebp
repz
inc
push
mov
movs
add
dec
daa
cmc
and
iret
ins
mov
mov
jb
psrlw
adc
cmc
jg
bound
clc
xor
ins
pop
push
ret
pop
sbb
test
jnp
in
gs
add
fsub
adc
add
push
test
xchg
stos
out
mov
test
je
mov
iret
add
daa
add
cmps
lahf
inc
dec
aaa
sbb
jns
add
outs
jbe
scas
pop
adc
loop
xor
lock
cs
sbb
xchg
pop
stc
fwait
bound
mov
out
(bad)
lods
ins
and
pop
xchg
in
or
mov
test
cmp
inc
inc
add
mov
shl
data16
push
mov
loop
adc
adc
push
hlt
rcl
xchg
xchg
jno
inc
fidivr
dec
sub
jne
ins
xchg
add
fadd
fild
mov
and
xchg
(bad)
jmp
sbb
cmp
arpl
bound
lds
and
xchg
(bad)
and
add
jno
rcr
les
mov
daa
add
stos
jb
inc
mov
(bad)
xchg
adc
jmp
lds
retf
xchg
inc
mov
(bad)
repnz
sahf
mov
sub
cmp
adc
push
imul
dec
retf
cld
mov
cld
mov
clc
mov
into
out
mov
call
nop
mov
int3
rol
add
cdq
clc
mov
(bad)
das
sbb
dec
das
je
push
inc
rcl
out
shl
sahf
cs
ret
lds
sbb
dec
out
cmps
lods
cmps
bound
jge
and
sub
out
std
movs
test
test
mov
sub
fimul
jl
fs
cmp
mov
(bad)
cmps
xchg
enter
or
fucom
adc
mov
outs
dec
mov
push
enter
lods
adc
cld
xchg
adc
fadd
fisub
push
shl
dec
in
dec
loope
out
jle
bound
inc
(bad)
jecxz
(bad)
mov
loope
add
jo
xchg
hlt
cmp
hlt
jp
xchg
test
call
inc
fmul
fwait
mov
inc
(bad)
adc
les
loopne
pop
cmps
pop
js
mov
sub
retf
pushf
sbb
bound
enter
xchg
inc
sub
push
dec
outs
fistp
inc
add
je
jb
in
das
mov
xchg
pop
xor
push
push
imul
push
inc
es
test
fcmovbe
or
rcl
mov
cwde
das
mov
xchg
and
movs
(bad)
lods
push
sub
xchg
scas
xchg
sub
mov
mov
ret
stc
pop
lds
sub
add
inc
sahf
retf
dec
in
leave
out
cld
(bad)
mov
pop
rol
pushw
popf
sub
retf
mov
rcl
enter
js
pandn
or
jb
sub
cmps
test
inc
and
xor
imul
adc
xchg
mov
pop
add
mov
or
jl
sub
cmps
push
mov
and
sub
adc
dec
fld
dec
pop
mov
jmp
cld
fst
mov
push
inc
call
adc
mov
call
pop
add
out
aam
lahf
repz
sub
cs
inc
int3
lahf
xor
and
jg
dec
pop
sahf
sbb
and
sub
fmulp
xchg
jp
mov
and
pushf
gs
cmps
das
out
or
jg
inc
arpl
pop
sub
leave
imul
fs
aas
mov
iret
(bad)
(bad)
mov
dec
inc
sub
in
jne
mov
test
and
xchg
(bad)
into
or
mov
xchg
inc
push
cmc
cmps
imul
and
mov
cmps
cli
jne
gs
(bad)
aaa
sti
in
mov
pop
xchg
icebp
xchg
xor
mov
fidivr
in
data16
shl
test
in
lds
ds
rcr
or
outs
icebp
mov
(bad)
mov
inc
jo
(bad)
jae
gs
dec
jmp
xchg
jmp
mov
ins
dec
outs
out
pusha
aad
xor
xor
push
cli
cwde
into
retf
fdiv
fdiv
rol
jbe
inc
sbb
into
scas
div
shr
cmp
mov
sub
push
mov
add
js
jg
adc
mov
pop
cwde
mov
loopne
fwait
cmc
or
gs
xchg
and
retf
dec
std
pop
mov
dec
xor
mov
movs
mov
jmp
mov
loop
and
fdivrp
cmps
dec
mov
aaa
adc
and
loop
mov
inc
mov
pusha
cmp
jecxz
jns
dec
movs
imul
xor
sub
loopne
jae
sbb
(bad)
into
inc
xchg
jmp
lds
xchg
push
ds
ror
loop
gs
push
xchg
dec
bound
fnsave
push
call
jg
test
sbb
inc
or
xor
push
fcmovne
ror
sahf
(bad)
out
popa
out
xor
arpl
inc
xchg
adc
adc
sub
sbb
xchg
test
out
xchg
pop
pop
xor
mov
call
add
xlat
leave
outs
xchg
in
mov
repz
(bad)
cmp
cmp
jns
out
outs
(bad)
jno
adc
ds
jecxz
pop
mov
cmps
sbb
cmp
imul
jbe
sub
pop
xchg
inc
jle
add
inc
push
shr
sub
mov
(bad)
aam
das
mov
adc
mov
ins
xchg
ins
sbb
fcomp
pop
daa
aaa
pop
scas
or
repz
mov
xchg
jecxz
dec
stos
not
pop
jmp
mov
pop
push
scas
jb
lea
pop
push
xchg
mov
retf
aaa
in
clc
cli
push
aas
xor
dec
outs
movs
adc
pusha
xchg
js
xchg
sbb
cdq
sub
ret
mov
push
add
ror
pop
test
adc
sar
leave
mov
push
aad
dec
or
dec
test
xor
mov
jo
and
cmps
mov
mov
dec
mov
or
(bad)
addr16
push
sub
or
hlt
mov
adc
sar
push
je
add
mov
es
jo
cmc
retf
outs
int
clc
fisubr
rcr
out
cdq
add
add
inc
add
and
dec
mov
mov
cmps
xor
movs
pop
mov
repz
cmp
aam
(bad)
es
std
std
test
les
out
push
xor
sbb
dec
scas
push
sub
or
test
xchg
aad
stos
repz
mov
pop
in
xchg
pop
repz
jns
es
div
dec
test
(bad)
repz
mov
and
popa
and
cmp
xchg
sub
jl
push
ret
dec
and
xchg
mov
test
sti
cmc
inc
out
xchg
push
dec
pop
pop
ror
mov
jp
pushw
xor
lds
pop
into
movs
retf
fmulp
cmps
outs
xlat
es
pop
in
push
lock
les
cs
jecxz
dec
out
test
cdq
or
out
cmp
hlt
push
in
pusha
xor
test
loopne
fsub
outs
dec
jmp
es
shr
adc
in
mov
add
inc
test
repnz
sub
dec
mov
pop
cmps
dec
or
rcr
xor
and
mov
xchg
hlt
loop
xor
cmps
pop
jg
in
pop
xchg
mov
scas
adc
test
pop
aaa
sti
int3
nop
(bad)
mov
imul
loope
daa
inc
jno
cmps
cmps
cmp
sbb
xor
test
outs
add
imul
push
call
and
outs
jmp
fwait
inc
pusha
imul
psubw
loop
data16
mov
jbe
xchg
sbb
mov
bound
jae
jge
mov
pop
out
xchg
(bad)
sub
push
mov
mov
outs
outs
adc
push
js
ins
cs
mov
xor
call
pop
ror
shl
inc
xor
push
or
jg
stc
daa
jmp
mov
and
or
neg
hlt
jne
adc
int3
push
loop
xchg
jle
or
test
add
not
loop
aad
cmp
or
imul
cmps
push
sub
sbb
cmp
aaa
fistp
pop
shr
out
outs
cmp
add
jo
test
test
sub
std
(bad)
(bad)
xor
sub
add
push
mov
popf
outs
cmps
or
push
fisub
call
cli
dec
cmp
xchg
sub
(bad)
mov
xchg
(bad)
(bad)
mov
push
pop
push
fwait
push
(bad)
cwde
cmps
ret
ds
push
mov
jnp
mov
sub
stc
loop
inc
cwde
inc
ins
jge
push
movs
rcr
cmp
ror
es
test
mov
mov
mov
fsub
jnp
or
cmps
out
jne
or
add
sub
adc
jmp
or
test
or
test
iret
ja
ds
dec
xor
add
js
fwait
cmps
test
adc
daa
loope
retf
and
cli
ffree
xor
jb
retf
jmp
repnz
ficom
(bad)
inc
and
dec
cmp
dec
(bad)
pop
fmul
push
and
or
sbb
rcr
enter
adc
cmps
(bad)
xor
pop
inc
rcl
jmp
in
jge
cmp
push
into
mov
xchg
jno
mov
xor
push
in
idiv
lods
das
jae
in
movs
pop
(bad)
outs
mov
movs
adc
movs
pop
call
movs
or
jbe
adc
dec
dec
mov
cwde
popa
(bad)
mov
push
dec
push
test
mov
gs
inc
mov
test
(bad)
mov
mov
cmp
push
in
add
sub
mov
les
jl
jae
mov
xor
cmps
inc
dec
popf
and
sti
cmp
fist
retf
ret
push
sbb
push
imul
shl
jg
sahf
mov
dec
jae
jns
ja
adc
sub
loope
jns
dec
test
dec
pop
(bad)
(bad)
add
xor
(bad)
adc
adc
add
push
mov
xchg
addr16
(bad)
push
inc
outs
jl
sbb
mov
fwait
retf
mov
cwde
shl
pop
(bad)
cld
xlat
cs
inc
mov
jge
push
loop
xlat
popa
mov
mov
fcmovnbe
mov
xor
pop
xlat
test
lahf
pop
inc
sbb
sbb
aam
jo
mov
mov
(bad)
hlt
rcr
sub
xor
ret
xchg
leave
cmps
inc
push
daa
add
scas
cmp
clc
mov
mov
mov
inc
dec
stos
sti
ror
sbb
xchg
imul
int
dec
scas
shl
cmp
ficomp
lods
sbb
xlat
adc
xchg
dec
cs
mov
push
mov
js
mov
sbb
or
xchg
aaa
lods
inc
sbb
sbb
ins
xor
rcl
in
bound
jae
iret
pop
enter
lea
outs
out
push
pop
sbb
aam
retf
dec
rcl
sar
std
xlat
out
test
xchg
mov
les
dec
retf
jmp
es
scas
ret
mov
xor
das
mov
retf
mov
mov
clc
cld
retf
mov
jmp
loop
mov
cmps
fisttp
cld
scas
mov
xor
adc
out
mov
cld
jnp
dec
stc
test
rcr
aad
and
lahf
out
cmps
ret
sbb
push
mov
rcl
ds
gs
es
lea
fisttp
mov
mov
mov
ror
sub
mov
fwait
test
(bad)
into
add
mov
mov
sbb
xchg
sahf
out
out
shl
ds
enter
les
jp
mov
jmp
push
mov
sub
and
scas
jecxz
iret
test
add
fisubr
cmp
xor
inc
fist
and
lods
xlat
xor
push
pop
xor
cmps
xchg
sbb
cs
test
cld
push
(bad)
and
add
test
dec
(bad)
fistp
int3
rol
jp
xor
jg
ins
lods
lahf
fst
jmp
fxam
movs
dec
xchg
cmp
push
sub
jmp
push
outs
adc
ret
dec
fsub
xchg
test
retf
and
jns
mov
mov
cmp
and
adc
mov
fisub
lods
pop
sub
and
ficomp
or
mov
adc
fimul
outs
mov
aam
out
jmp
mov
div
jmp
mov
(bad)
movs
jl
popa
repz
mov
clc
(bad)
jmp
cld
inc
jns
jmp
out
clc
jle
pop
loope
inc
jmp
xlat
xchg
les
loope
ds
sbb
sbb
dec
scas
push
sub
test
or
pop
stos
dec
cmps
clc
std
jge
jge
pxor
into
pusha
jmp
push
ret
call
mov
pop
ffreep
div
pop
(bad)
fcmovnu
sbb
jg
cwde
fs
(bad)
cmp
mov
inc
retf
clc
jge
pop
xchg
and
lds
out
push
scas
sub
push
cdq
mov
pop
jne
ins
rep
push
add
and
or
mov
repnz
mov
inc
(bad)
and
lods
sub
cmp
and
int3
aaa
sar
ss
jnp
je
push
jmp
mov
loop
xor
sti
not
mov
call
add
fsubr
pop
mov
jne
shl
and
nop
lock
imul
loope
cmps
jmp
shl
inc
cmps
jnp
cmp
icebp
into
popf
mov
jle
mov
cmps
aad
cdq
xchg
mov
jmp
xor
movs
cmp
mov
jno
scas
shl
repnz
xor
cmp
add
dec
push
xchg
jecxz
les
jmp
push
(bad)
in
outs
mov
inc
ficom
mov
add
adc
mov
jns
ins
mov
sub
pusha
and
into
and
icebp
cwde
adc
js
sub
or
xor
push
ret
or
jo
mov
xchg
mov
dec
mov
fcmovnbe
out
fcomp
loop
and
ret
jae
add
mov
pop
data16
push
fld
in
ins
daa
les
mov
hlt
xor
mov
pop
sbb
mov
jmp
mov
mov
xchg
dec
jmp
mov
cdq
or
cmp
push
outs
sbb
push
sub
(bad)
push
clc
mov
add
clc
(bad)
pop
inc
and
je
mov
pop
mov
cmp
xlat
jle
std
fisubr
das
inc
cmp
out
out
js
cmps
in
cdq
jmp
xor
mov
mov
pop
aam
xor
outs
rep
push
push
mov
inc
nop
leave
add
pop
push
ss
(bad)
mov
int
in
cld
dec
das
js
dec
das
cmp
scas
mov
lock
pushf
mov
rol
ds
out
mov
sbb
xor
pusha
mov
out
cwde
call
and
outs
shl
add
and
jno
jle
add
mov
pop
jl
jmp
or
lds
mov
into
fsubp
dec
dec
test
retf
rcr
shl
lds
sbb
das
enter
adc
xor
inc
addr16
repnz
arpl
pusha
sub
test
sbb
mov
jns
leave
mov
les
fimul
xchg
outs
(bad)
adc
ror
dec
adc
jl
jmp
mov
jmp
mov
mov
lods
loope
shl
lods
(bad)
or
jp
(bad)
sbb
stc
xchg
out
cmps
and
or
mov
and
push
loope
xchg
ins
or
mov
cmp
xchg
or
fmul
jb
mov
or
test
ds
adc
rcl
cmp
gs
enter
push
test
and
out
pop
lock
in
xor
mov
or
mov
push
sbb
stos
or
inc
push
dec
aad
mov
std
sbb
mov
shl
cli
xchg
outs
(bad)
and
jne
push
movs
mov
test
out
dec
sbb
push
loopne
call
(bad)
inc
cmp
stos
cmps
aaa
jecxz
push
mov
cmp
fnstcw
or
mov
adc
call
and
lea
cmp
iret
xabort
pusha
cmps
mov
mov
adc
out
cmp
jb
pop
fwait
xchg
xor
ret
pusha
jge
inc
sub
mov
call
repnz
addr16
test
inc
fidivr
repz
(bad)
cmp
xor
cdq
sbb
ss
test
sti
in
loopne
add
hlt
dec
jbe
loop
sub
enter
out
rcl
out
adc
mov
test
add
jnp
ss
sub
mov
cmp
lea
jne
and
add
imul
pop
pusha
(bad)
fisubr
repnz
mov
mov
or
arpl
leave
jmp
out
push
pop
push
sbb
enter
fmul
ins
scas
clc
jnp
movs
add
xor
cmp
neg
dec
bound
(bad)
dec
and
ins
nop
push
cmp
mov
lock
pop
jnp
call
repz
movs
(bad)
out
fwait
jbe
push
sub
and
add
xchg
cmp
into
lahf
xlat
lahf
retf
xchg
xchg
pop
inc
push
xchg
xchg
cmp
mov
outs
cmp
and
inc
in
stc
mov
std
mov
or
bound
inc
test
in
xor
pop
dec
hlt
lds
mov
test
push
xor
mov
test
in
aaa
daa
int3
test
lods
mov
or
int
int
jbe
rol
jp
xor
mov
inc
push
ss
test
mov
pop
jns
iret
push
in
sbb
jnp
and
repnz
xchg
or
cmp
jo
and
xlat
cmp
or
or
pop
push
xchg
dec
jge
adc
int3
xor
nop
ja
inc
pusha
or
push
popf
addr16
add
or
fiadd
add
fsubp
mov
mov
push
sub
ss
pop
mov
sahf
mov
xchg
pop
add
jmp
cmps
inc
sbb
push
sar
not
xor
fcom
addr16
ins
lods
dec
js
mov
inc
enter
jmp
mov
mov
jno
mov
add
lods
jo
data16
mov
sti
clc
dec
jmp
fs
mov
dec
dec
mov
(bad)
mov
sbb
cli
shl
adc
repnz
dec
xchg
call
js
add
out
icebp
clc
mov
clc
cld
retf
mov
mov
lods
movs
xchg
iret
fdivr
mov
in
mov
clc
cmc
pop
mov
and
adc
lock
das
movs
xor
sti
inc
inc
lahf
test
clc
pop
test
adc
mov
jnp
lods
dec
cmp
add
mov
cld
std
mov
fs
xor
xchg
mov
xor
out
xchg
in
dec
int
int3
inc
dec
out
push
pop
cmps
out
jno
pop
test
mov
(bad)
jns
xchg
cmp
sub
stos
dec
push
test
mov
retf
xchg
mov
or
sar
mov
stc
sahf
js
inc
jae
push
ja
(bad)
pop
scas
mov
push
fdiv
dec
cmp
cli
repz
int
jge
adc
test
aaa
stos
xor
xchg
nop
in
cmovb
mov
and
lahf
test
adc
xor
and
cld
loopne
and
mov
int3
call
and
sub
sahf
leave
loop
rcr
nop
mov
xchg
push
pusha
mov
dec
loope
or
cwde
cmp
(bad)
push
repz
lods
div
test
or
inc
sar
xchg
in
jns
mov
push
mov
mov
rol
cwde
cdq
out
push
mov
lahf
jns
lods
cwde
out
push
fdivr
stc
(bad)
jmp
add
cmp
cmc
or
or
inc
dec
ret
retf
retf
add
mov
retf
in
jmp
xchg
js
lods
fwait
push
cmp
cli
xor
push
dec
cmp
adc
pop
in
and
jns
sbb
fcom
or
sub
in
mov
sub
jl
sbb
pop
movs
std
fldenv
add
push
fadd
clc
idiv
dec
inc
adc
push
pop
popf
xchg
jns
loope
adc
mov
in
cmp
xchg
dec
rol
cli
dec
(bad)
(bad)
(bad)
out
leave
in
scas
mov
(bad)
outs
fst
fldcw
fs
loope
js
mov
retf
icebp
mov
pop
lds
iret
test
and
out
mov
xor
dec
dec
imul
push
push
cld
add
call
mov
sub
hlt
bswap
sub
cmp
and
mov
iret
(bad)
sbb
adc
push
jge
xchg
fist
adc
mov
xor
xor
sub
neg
imul
mov
push
jl
sbb
pop
sar
jge
jo
and
and
adc
sub
cli
mov
pop
div
mov
sbb
add
mov
outs
xchg
inc
(bad)
or
mov
jg
fsubr
dec
outs
sbb
shl
cmp
cmp
and
sti
in
loopne
sbb
mov
push
mov
mov
in
out
jmp
dec
test
push
lock
jecxz
fild
mov
push
add
or
sbb
popa
and
imul
es
dec
(bad)
sub
je
mov
push
push
mov
and
ret
retf
faddp
or
mov
test
push
clc
lahf
add
jl
sub
lods
out
js
aam
outs
scas
sbb
stc
sbb
(bad)
test
rcr
jae
cld
call
aas
push
cwde
and
or
and
cwde
fisttp
mov
lahf
lahf
lss
and
jg
jmp
cli
mov
pop
xor
aaa
mov
sti
mov
div
int
out
dec
jne
push
arpl
out
in
add
push
fnstenv
in
pop
cmp
test
jle
faddp
sbb
nop
pop
repz
dec
mov
call
test
pop
mov
sti
imul
bound
add
cmp
gs
stos
sub
jbe
pop
mov
add
clc
inc
lahf
test
mov
push
in
push
inc
dec
dec
scas
pop
loope
fdiv
sub
(bad)
cld
cmp
icebp
test
sbb
cmp
sbb
js
mov
(bad)
fidivr
jbe
cmps
lock
mov
int
sahf
cmps
(bad)
in
cmp
fisttp
aad
fdiv
xchg
inc
adc
stos
or
sbb
ret
mov
int
pop
mov
dec
pop
pop
xor
jno
adc
repnz
mov
push
jbe
mov
mov
ja
(bad)
jno
stos
ret
in
push
into
jae
dec
xor
in
cmp
cmp
cwde
sahf
jp
loop
out
ficom
dec
nop
add
lock
mov
pushw
(bad)
dec
jne
dec
jbe
sub
lea
mov
icebp
es
and
mov
mov
scas
push
add
mov
lock
cs
dec
sub
xor
jmp
and
ja
inc
sti
or
fisubr
repz
adc
xchg
pop
aam
icebp
mov
xlat
jae
jnp
jns
jbe
das
icebp
jmp
in
mov
out
mov
ins
enter
sti
jns
push
mov
mov
jne
stos
or
jl
push
lock
ins
dec
xor
dec
(bad)
push
pusha
and
pop
sahf
mov
nop
in
jecxz
mov
xor
js
push
(bad)
out
test
or
xchg
ins
jae
sbb
dec
dec
jnp
out
or
mov
dec
enter
sub
dec
data16
inc
nop
das
test
mov
aad
aaa
int
cmp
test
add
int
mov
pop
rcl
aad
aaa
dec
xor
stos
shr
jle
(bad)
out
jle
out
fsubp
sub
ss
jnp
mov
lahf
mov
mov
fidiv
mov
dec
sub
sbb
ins
adc
mov
jb
out
push
push
inc
add
fwait
stos
inc
xor
cmp
in
leave
lahf
push
fist
cmp
lahf
mov
ds
fld
mov
adc
jne
lds
popf
jbe
cmps
js
and
retf
xor
es
sub
mov
(bad)
das
cld
and
jo
call
dec
push
leave
arpl
dec
mov
nop
xchg
push
or
lods
outs
and
imul
add
cmps
lods
adc
(bad)
repz
ss
mov
popf
jns
(bad)
into
das
loop
hlt
cmps
push
xlat
outs
xchg
mov
fdivr
and
loope
outs
jo
scas
mov
ror
clc
call
mov
test
pushf
xor
mov
mov
dec
je
jge
imul
mov
sbb
push
mov
mov
idiv
shl
int3
jmp
js
pslld
sbb
cmc
icebp
sbb
jo
add
pop
sub
cmp
cwde
bound
pop
mov
(bad)
and
call
sub
sub
mov
stc
cwde
fwait
jb
or
dec
cmps
in
push
lods
mov
adc
pop
bound
cmp
dec
xor
fs
in
sbb
push
mov
in
enter
leave
mov
inc
pop
iret
dec
sub
out
(bad)
idiv
inc
mov
cli
dec
mov
ds
loopne
adc
sti
push
dec
hlt
shr
(bad)
outs
jo
mov
pop
aas
and
jo
lds
xor
cmp
repnz
sbb
add
cmp
mov
(bad)
nop
cmc
jg
ret
js
mov
push
dec
aam
test
fcom
jmp
cli
in
xchg
and
xchg
dec
pop
cli
cld
sbb
mov
jp
adc
in
in
call
mov
or
out
stos
dec
shl
ins
iret
ins
call
das
xchg
jns
adc
sar
fwait
xchg
and
and
pop
mov
cmps
xchg
movs
in
and
jo
mov
add
inc
out
jl
pop
lds
push
jne
xchg
mov
stc
cmps
lods
out
es
ins
outs
sub
(bad)
in
fwait
jmp
and
in
(bad)
jle
fiadd
das
inc
stc
or
ds
stos
clc
xor
ret
xchg
mov
sbb
out
cld
loopne
aaa
and
mov
sahf
mov
sbb
jge
push
shl
(bad)
pcmpeqw
mov
push
mov
mov
adc
enter
sbb
(bad)
sbb
stos
bound
neg
mov
jp
lahf
je
sub
ret
adc
lea
ret
movs
or
mov
sti
(bad)
push
(bad)
retf
jle
mov
push
adc
in
cmps
scas
pop
cmp
pop
cdq
add
add
outs
mov
in
mov
jmp
push
aad
mov
xchg
dec
addr16
dec
mov
movs
ret
and
out
dec
mov
adc
ja
loop
pop
lahf
sub
fs
cmp
aam
push
sbb
mov
or
sbb
mov
out
cmps
push
xchg
rcr
mov
fidiv
mov
mov
mov
cmp
jmp
sbb
(bad)
sahf
push
in
or
(bad)
ss
hlt
(bad)
push
mov
icebp
les
pop
sub
ja
out
pop
mov
in
(bad)
sub
mov
push
adc
jbe
mov
inc
pusha
and
retf
pop
shl
rep
jbe
leave
push
addr16
sbb
inc
push
stos
retf
iret
xor
adc
in
out
call
sbb
sub
and
rol
aad
sar
sti
int3
adc
jle
add
pop
les
pop
dec
sbb
jo
rol
jmp
xchg
inc
xor
mov
cmp
cmp
mov
or
dec
rcr
pop
lods
inc
pop
jle
(bad)
push
jbe
push
enter
aam
inc
adc
mov
jle
cmc
imul
rcr
jmp
pop
push
ins
arpl
adc
adc
sar
mov
inc
loop
xchg
imul
out
retf
pop
mov
shl
cmps
mov
sub
inc
jmp
push
cmps
ins
xor
push
xchg
fmul
movs
xchg
jl
mov
out
pop
cs
cmp
cmp
jge
repnz
(bad)
aas
add
pop
xor
xchg
mov
out
add
ror
pop
push
(bad)
push
add
xchg
jno
loope
addr16
push
sub
std
and
(bad)
jmp
fld
pushf
pop
pop
pop
sub
(bad)
loope
loope
jmp
and
jmp
rcl
lahf
sbb
es
xchg
je
addr16
push
lods
jmp
xor
jb
cmps
jmp
jmp
mov
(bad)
xlat
pushf
not
mov
push
(bad)
(bad)
inc
mov
mov
retf
pushf
in
rol
push
inc
pop
sti
es
adc
ret
add
(bad)
mov
cwde
stos
das
jmp
sbb
(bad)
sbb
cli
(bad)
daa
mov
popa
xor
mov
xor
loop
mov
pop
cmp
sub
data16
into
mov
dec
(bad)
sbb
push
cli
or
xchg
push
scas
shr
push
pop
das
clc
pop
push
jns
mov
sar
dec
add
cld
mov
push
scas
adc
loopne
sub
jb
fldcw
aad
nop
mov
pop
loop
adc
push
mov
clc
mov
jmp
fild
push
jle
sbb
stos
out
and
dec
js
call
lods
cs
bound
lods
sbb
jecxz
sbb
pop
jo
cmp
cmps
and
int
sahf
sbb
daa
inc
scas
mov
xchg
sub
test
push
add
not
add
xchg
mov
sbb
jb
mov
ins
adc
daa
sub
sbb
jp
mov
jne
pop
outs
dec
mov
sbb
out
mov
aad
js
or
fsubp
js
stos
stos
mov
sar
mov
out
sbb
fdivr
pusha
cmp
add
js
dec
ret
sahf
outs
push
cdq
ins
mov
aaa
std
sub
cmp
cmp
jae
sbb
jns
mov
jno
test
jmp
pop
sub
int
loopne
cmps
test
push
inc
add
mov
das
je
dec
jle
sub
jmp
mov
push
dec
mov
mov
xchg
xor
xor
(bad)
cld
cdq
iret
aaa
cs
(bad)
aas
loope
shl
stos
jno
xlat
jmp
mov
add
dec
xor
sbb
hlt
or
sub
pop
sub
and
icebp
jae
mov
cmc
inc
movs
ins
fsubr
inc
(bad)
nop
dec
les
loop
lods
inc
xor
pop
adc
or
push
dec
inc
cmps
ins
popa
or
and
lds
or
test
pop
mov
sbb
ret
mov
(bad)
clc
push
out
mov
(bad)
xor
cmp
push
cmp
mov
push
mov
imul
aas
jbe
or
ja
inc
pop
and
mov
mov
cmc
xchg
clc
cmp
push
mov
mov
out
retf
retf
cmp
dec
outs
js
or
jl
outs
cmp
scas
mov
mov
enter
or
jnp
mov
clc
or
js
jmp
js
jmp
iret
stos
jle
(bad)
cld
outs
test
retf
cmp
mov
std
cmp
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
jne
mov
cld
pop
out
mov
cld
mov
cmp
sti
scas
(bad)
cld
mov
mov
mov
retf
cld
retf
outs
clc
jge
cs
cld
mov
clc
cmp
scas
clc
cld
retf
cld
retf
std
or
mov
jl
out
clc
cld
retf
js
out
js
loop
jo
fstp
sahf
jns
inc
test
mov
xchg
stc
ds
ins
popa
retf
or
movs
jecxz
add
inc
pop
cdq
jmp
and
or
dec
setp
lock
popf
sar
pop
ror
sbb
jp
xchg
rol
or
retf
(bad)
aas
inc
mov
jo
xchg
cmps
fwait
push
jb
test
aam
add
out
xchg
fs
jge
adc
sbb
jecxz
mov
jl
loop
int
push
or
adc
xchg
popa
test
xor
jg
jns
push
mov
fwait
test
xor
jge
mov
jl
jae
dec
mov
jns
jns
das
fwait
pop
adc
daa
push
xchg
add
rcl
hlt
pop
and
sbb
pop
cmp
xor
sbb
in
jae
inc
popf
adc
jp
fiadd
jb
sbb
in
idiv
or
mov
mov
push
outs
pop
clc
xchg
aad
jl
jecxz
mov
inc
movs
in
test
mov
dec
dec
push
jle
bound
mov
dec
inc
mov
lock
inc
in
pop
push
dec
pop
in
dec
arpl
out
(bad)
xchg
outs
scas
and
aas
(bad)
sbb
popa
jecxz
adc
xchg
jbe
jmp
and
or
sub
xchg
cmp
jp
out
repnz
cdq
add
push
loope
fst
dec
mov
pop
push
jmp
dec
addr16
je
adc
fadd
mov
adc
fldenv
jno
inc
scas
push
or
dec
sbb
aas
out
mov
repnz
or
mov
scas
xchg
stos
repnz
xor
sbb
adc
pop
mov
(bad)
or
or
(bad)
in
rcl
pop
pop
push
dec
into
adc
cmps
push
and
dec
cmps
in
xor
jmp
ins
pop
sub
mov
cmp
push
or
jge
mov
lods
std
fs
shr
clc
lods
or
push
shl
push
push
mov
daa
(bad)
aad
retf
jle
xchg
add
pop
xor
and
mov
lods
lahf
inc
add
or
hlt
xchg
mov
jbe
lods
mov
outs
rcl
shl
lods
je
pop
mov
pop
push
push
or
sub
ret
(bad)
clc
call
sub
or
dec
pop
mov
pop
mov
inc
pop
cmps
and
imul
sbb
scas
stc
mov
pop
jg
cmp
in
in
lods
cld
hlt
call
in
push
stc
mov
mov
jl
outs
js
or
js
mov
cmp
iret
jmp
stc
add
mov
(bad)
loop
lods
sbb
into
jl
out
clc
cld
mov
js
mov
cld
mov
ins
push
rol
mov
movs
data16
and
mov
or
int3
test
pop
jae
mov
popf
jmp
out
jmp
inc
push
outs
push
ins
mov
aas
dec
inc
and
mov
or
popf
jnp
inc
mov
int
ins
mov
inc
mov
cmc
pop
pop
es
mov
es
rep
iret
sbb
and
int
pop
and
fild
scas
pusha
jp
pop
push
iret
push
dec
inc
test
jecxz
stos
or
shr
add
icebp
adc
cmp
imul
push
movs
mov
in
cmc
popa
sti
sti
int
push
jnp
ret
retf
ror
movs
sti
arpl
ss
shr
xor
cmps
pop
aam
jb
mov
inc
fiadd
dec
outs
rcr
sub
mov
jg
sahf
cs
loopne
dec
hlt
inc
in
dec
cmps
fdivr
out
pop
ds
push
fstp
adc
push
mov
jb
lods
jg
add
ins
outs
inc
fs
jl
ror
push
or
mov
pusha
push
xchg
ins
sbb
sub
add
ret
rol
jb
in
xchg
call
xlat
ins
or
aaa
add
call
jo
dec
cmc
mov
test
or
dec
mov
aaa
mov
and
and
fnstcw
sbb
or
sbb
adc
(bad)
lock
ficomp
test
gs
sbb
dec
je
int3
int
or
xor
xchg
push
nop
pop
inc
sbb
js
push
fstp
int3
sub
fcmovnbe
scas
jo
scas
mov
mov
xor
fisub
das
inc
xor
int
daa
pop
sbb
or
fimul
out
ret
pop
test
ret
dec
push
imul
xor
mov
je
aad
jno
call
out
inc
mov
mov
push
stc
popa
push
fxch
or
lock
and
mov
xchg
sub
xchg
fmul
mov
jae
pop
daa
cmp
pop
sub
push
ret
jno
dec
mov
(bad)
xchg
out
mov
test
pop
test
nop
jmp
push
and
fcom
inc
inc
push
mov
sbb
pushf
(bad)
retf
push
repnz
mov
ror
pusha
ja
rcl
sti
push
shr
fcmovu
cdq
(bad)
adc
xor
addr16
xor
daa
or
mov
push
push
mov
jp
(bad)
lods
dec
xchg
mov
dec
jl
ror
jge
jp
std
cmp
cli
mov
xchg
add
cwde
mov
or
fdivr
clc
test
cmp
pop
retf
in
jp
inc
dec
mov
movs
std
jecxz
inc
adc
cmp
add
jp
xor
cmp
sar
jae
xor
pop
xor
push
cli
cmp
mov
or
or
lahf
imul
or
out
dec
in
sbb
jmp
inc
dec
xchg
icebp
dec
push
sub
shl
mov
imul
popa
pop
(bad)
xchg
jl
xor
addr16
add
ins
inc
arpl
ja
or
add
(bad)
lods
(bad)
repz
jp
jb
xor
mov
mov
call
sub
cmp
(bad)
(bad)
cli
int
jmp
pop
cli
inc
lods
fld
test
addr16
sbb
outs
sub
clc
dec
out
cmp
or
clc
jl
scas
clc
cld
dec
scas
cmp
imul
mov
and
cld
scas
mov
xor
sbb
xchg
in
sub
jmp
jge
mov
loopne
hlt
dec
cs
ja
push
stc
in
jbe
push
sti
push
and
pusha
mov
xchg
mov
mov
mov
test
rcr
cmp
in
ficom
or
outs
sub
mov
mov
(bad)
mov
dec
es
aad
xchg
adc
lds
enter
adc
xor
les
test
mov
xchg
jl
jae
push
mov
ins
int
mov
add
mov
xor
or
xchg
mov
sub
popf
cs
out
xor
push
ss
mov
ja
or
test
mov
sub
ret
daa
sub
xchg
test
cld
sar
and
rcl
inc
mov
jmp
leave
or
mov
mov
imul
sub
arpl
out
pop
jmp
dec
mov
stc
mov
jmp
jge
js
gs
jbe
scas
fdiv
lahf
aas
mov
cmc
pop
fdivr
call
gs
adc
mov
pop
scas
inc
and
inc
pusha
pop
ins
stos
out
adc
mov
hlt
push
dec
jl
scas
std
test
js
stos
inc
mov
mov
(bad)
cwde
xor
(bad)
cmps
pop
or
pop
push
pop
push
sbb
xchg
push
mov
push
add
pop
xchg
mov
(bad)
push
jo
into
inc
adc
jo
push
call
mov
in
xchg
push
pop
or
imul
retf
dec
clc
cdq
stos
ret
aas
mov
leave
xor
adc
and
mov
dec
cmp
(bad)
jb
mov
imul
lds
lahf
je
cli
dec
outs
js
pop
jmp
ret
push
push
out
jge
and
add
and
cmp
adc
mov
dec
dec
sub
aad
jl
ss
dec
jmp
out
aas
add
loope
out
xor
inc
ror
cmp
fmul
mov
bound
rcr
int3
pop
mov
mov
mov
cld
(bad)
out
xor
fsub
xor
xor
(bad)
cmp
push
pop
sbb
inc
dec
inc
add
mov
sbb
pop
and
rol
mov
jle
ficomp
jge
push
lahf
bound
inc
mov
sahf
pop
outs
push
mov
sub
ror
dec
and
sahf
clc
xor
das
js
retf
mov
retf
scas
clc
mov
retf
cmp
out
stc
dec
jecxz
mov
ja
jo
mov
inc
mov
in
js
mov
mov
cmc
scas
push
and
cmps
call
adc
adc
cmp
jns
call
sub
imul
rcl
pop
int
sbb
cwde
pusha
push
or
xchg
mov
add
in
ja
push
and
ins
lds
sub
push
jae
jmp
sub
adc
(bad)
aad
jae
push
shl
xor
fild
sbb
lds
ret
mov
test
dec
inc
data16
inc
mov
scas
stos
repnz
push
test
mov
pop
fwait
jmp
push
xchg
fld
js
sbb
test
mov
add
sub
enter
enter
fcmovb
aam
or
fs
and
call
xor
adc
sahf
pop
sbb
outs
fwait
nop
retf
or
retf
mov
mov
jge
pop
inc
mov
pop
cwde
mov
movs
jne
mov
repz
lahf
mov
or
aad
mov
push
jb
dec
jbe
mov
mov
jae
inc
add
xlat
mov
ss
cmp
dec
jl
(bad)
rcr
in
repnz
lock
iret
add
cmps
add
rcl
xchg
pop
jge
(bad)
fs
adc
icebp
je
sub
pop
aas
shl
inc
jp
ds
ds
(bad)
out
das
or
pop
mov
iret
push
fnstsw
and
dec
icebp
clc
ficom
cs
pop
and
and
cmp
sbb
cli
or
ins
mov
pushf
mov
pushf
push
test
jae
punpckldq
sti
movs
lods
push
stc
dec
jp
shl
test
mov
imul
pop
mov
mov
call
shl
ds
pop
push
pushf
into
test
and
sbb
push
jnp
adc
mov
and
ds
std
in
xchg
stos
pop
xor
xchg
push
in
cmc
fldenv
jbe
outs
mov
xchg
and
mov
jmp
ja
xchg
pushf
pushf
pop
jecxz
es
je
aaa
test
nop
or
dec
ja
adc
pop
lds
cmp
mov
div
fdivr
int
xchg
push
popf
xchg
(bad)
pop
je
adc
dec
mov
xchg
mov
mov
rcr
push
rol
sbb
fisubr
mov
ss
shl
add
pop
mov
push
jb
dec
add
ja
sub
popa
cwde
outs
mov
int
es
jle
mov
icebp
xchg
cwde
pusha
inc
mov
xchg
(bad)
ins
sbb
dec
jb
jp
fcom
loop
repz
dec
jo
sbb
inc
aad
push
outs
test
outs
sub
mov
mov
xchg
pop
xchg
lock
dec
jo
jno
mov
(bad)
cmp
mov
add
shl
add
cmp
js
push
jns
push
stc
pusha
pop
cld
xchg
ins
mov
pop
mov
adc
inc
lea
pop
int3
pop
mov
je
xor
test
out
push
add
xor
in
nop
sub
sbb
ss
push
mov
pop
popf
inc
jo
test
mov
dec
ins
ret
or
xchg
ja
imul
out
sub
stos
jne
loop
sub
retf
ret
and
push
(bad)
mul
add
nop
xchg
fs
aaa
shl
inc
mov
dec
in
or
mov
xor
and
out
pop
add
pop
addr16
das
mov
add
stc
retf
sti
mov
pop
and
ja
mov
pop
fcom
push
ja
adc
loopne
inc
xor
inc
mov
fnstcw
aas
inc
dec
movs
nop
cld
sbb
pop
dec
cmc
sahf
js
into
das
mov
jge
scas
mov
mov
mov
mov
call
mov
aas
lods
pop
mov
cmp
cmps
xchg
jo
cli
sar
loopne
mov
or
clc
mov
(bad)
daa
(bad)
xchg
ret
pop
test
xor
and
dec
pushf
push
arpl
inc
sub
xor
and
fwait
and
sub
push
xor
xor
icebp
fnstsw
aaa
cmp
(bad)
je
xchg
mov
mov
sub
xlat
push
loopne
xchg
add
in
ins
movs
fnsave
outs
out
in
pop
gs
push
push
xchg
not
push
popa
outs
test
xor
jle
movs
lahf
movs
mov
shl
pop
jbe
push
ins
sbb
ins
or
fld
inc
stos
add
cmps
in
arpl
mov
add
mov
scas
cmc
ror
mov
mov
jmp
lods
mov
lea
popa
pop
cmp
xchg
mov
inc
mov
sub
popa
cmp
push
out
inc
add
cmps
add
pop
dec
and
pop
xchg
mov
pop
loope
mov
mov
in
psubq
stos
loop
pop
scas
inc
rcr
jmp
inc
or
xor
cmp
mov
pusha
in
ins
jo
adc
pop
adc
popa
ins
std
in
add
jp
mov
jmp
fcmovnbe
pop
(bad)
jno
nop
pop
push
movs
test
inc
ret
sub
dec
data16
repnz
or
sub
iret
adc
sahf
fiadd
popw
hlt
icebp
push
sbb
add
pop
mov
mov
stos
lods
push
cmps
out
dec
int3
cmp
rcr
add
js
jle
jmp
and
rcl
test
xchg
dec
jo
stos
push
add
movs
cmc
addr16
fist
mov
outs
jle
lods
dec
mov
(bad)
add
or
cmp
or
cld
fndisi(8087
popa
sub
mov
cmps
and
cmp
not
jle
(bad)
or
movs
into
ret
hlt
sti
loope
mov
sahf
pop
push
or
sub
xor
jle
nop
mov
xchg
pop
sbb
dec
lock
call
or
pop
cld
adc
loope
mov
ins
inc
cmp
jmp
stc
add
test
cld
jge
push
and
mov
adc
ss
loopne
push
sub
retf
pop
shr
int3
scas
out
cmps
mov
xchg
out
inc
jl
jne
cmp
sub
or
(bad)
ins
add
ins
add
ja
or
in
fbld
fs
adc
lahf
adc
test
into
jmp
pop
mov
jg
cwde
imul
mov
sbb
lea
adc
and
ds
cmp
cmps
inc
enter
push
cdq
pop
jo
xchg
cmp
or
fcmovb
push
push
rol
cmps
and
shl
je
pop
dec
adc
xchg
mov
scas
push
mov
test
jae
aam
int
rcr
sub
loope
in
lods
push
xchg
out
sub
sar
sbb
jle
stc
and
jmp
stos
int3
adc
pop
pop
lds
daa
mov
daa
aaa
mov
imul
push
push
dec
stos
repz
jbe
out
adc
in
mov
dec
inc
mov
nop
cwde
daa
adc
lahf
retf
or
or
clc
xchg
out
mov
and
mov
push
sub
shl
mov
dec
les
sahf
adc
mov
jle
adc
dec
les
add
or
jo
gs
pop
and
outs
ss
shl
push
mov
sub
sub
je
lahf
push
retf
and
shl
outs
std
push
mov
or
pop
lods
sbb
push
pop
dec
imul
xor
dec
out
pop
adc
icebp
add
loope
ds
sub
js
xchg
push
clc
jle
shl
adc
retf
pop
cmp
xlat
push
mov
inc
int
jp
lock
pop
jp
dec
add
outs
arpl
in
sub
or
mov
test
pop
sti
sub
mov
in
xchg
xchg
adc
push
mov
xor
fimul
sub
adc
mov
jg
lods
scas
or
push
push
bound
add
xor
pop
or
or
lods
mov
jmp
push
stc
out
push
push
cdq
cli
(bad)
aas
stos
mov
fcom
jge
data16
into
mov
pushf
int
jmp
mov
pop
push
pop
pop
jno
lods
bound
mov
mov
mov
sti
pop
jae
test
xor
xchg
cld
dec
adc
lahf
xor
shl
ins
mov
stos
inc
or
stos
jno
sbb
inc
aas
pop
push
enter
test
xchg
xadd
movs
out
stc
dec
pop
sbb
lahf
test
cmp
adc
or
sahf
jmp
mov
sahf
adc
out
or
or
retf
shl
adc
xchg
sbb
or
and
push
dec
gs
mov
mov
lods
and
daa
dec
aam
push
inc
push
scas
fldenv
rcl
mov
je
push
fmul
mov
retf
test
push
pushf
pusha
loope
imul
push
scas
mov
sub
nop
sbb
into
mov
push
(bad)
fcomp
push
loopne
lahf
mov
sub
les
int
mov
and
adc
xlat
aas
test
dec
pop
add
call
mov
je
sub
(bad)
hlt
rol
dec
mov
aam
stos
sub
jno
loope
rcr
movs
jnp
(bad)
mov
imul
inc
pop
or
xchg
fbld
mov
pusha
mul
(bad)
cmp
and
sbb
test
cmps
sub
inc
mov
lea
(bad)
jns
aad
pop
ins
and
adc
jge
int3
dec
fs
out
ds
into
and
mov
aad
or
sbb
mov
cmp
shr
xor
rcr
test
push
push
mov
cld
dec
leave
aas
xlat
ret
cmp
int3
outs
xor
(bad)
in
and
and
cmp
stos
imul
sbb
xor
push
cmp
mov
adc
jae
fdiv
lds
leave
add
sbb
mov
jmp
aad
add
sub
cld
add
cmc
outs
push
aas
adc
sub
jb
in
push
inc
jno
icebp
push
sbb
add
in
pop
leave
xchg
hlt
hlt
loope
clc
xchg
popf
adc
push
scas
push
lock
add
enter
xor
stc
push
xchg
dec
mov
pop
and
ins
push
adc
sub
mov
je
loop
inc
jp
jl
push
test
sbb
pusha
je
push
stos
xor
adc
(bad)
sti
dec
jae
push
outs
mov
jns
dec
sbb
or
std
cwde
or
mov
adc
jno
dec
gs
aas
test
cmc
sbb
jg
and
jns
xchg
ins
mov
jmp
push
cmp
in
gs
pop
xor
bound
nop
clc
pop
and
sbb
sub
outs
xchg
sub
or
arpl
retf
sbb
dec
dec
adc
ja
adc
cmp
inc
inc
xor
push
adc
loop
sahf
xor
jnp
inc
shl
pop
(bad)
pusha
test
cmp
pusha
ret
movs
or
cld
pop
and
pop
ds
push
cli
sbb
inc
cld
xchg
pusha
inc
in
jne
sbb
jmp
mov
mov
sub
jge
adc
jecxz
adc
push
sub
jge
xchg
ret
lahf
cli
stos
pop
sbb
rcl
sahf
push
stos
psraw
cmp
sbb
xor
frstor
dec
sub
popa
(bad)
jg
pop
sub
inc
nop
xchg
pop
sbb
add
repnz
(bad)
std
inc
and
cdq
mov
or
mov
sbb
fcom
fist
jle
cmps
movs
icebp
fucomip
lea
out
inc
scas
movs
or
imul
adc
xchg
mov
xor
jnp
adc
lock
dec
xor
cli
mov
pop
rol
mov
sbb
jmp
fiadd
outs
inc
(bad)
cld
wrmsr
cdq
cwde
cmc
das
sbb
xchg
xlat
addr16
ds
lods
test
xlat
xchg
or
imul
mov
outs
outs
dec
add
jne
pop
pop
cmps
ret
adc
stos
imul
and
adc
jl
popf
push
push
dec
jb
fistp
pop
call
xchg
sbb
jmp
lahf
scas
mov
ss
pusha
adc
scas
lds
sub
shr
mov
fist
cmc
scas
sbb
outs
xor
push
test
aas
mov
cmp
in
mov
push
push
add
out
repnz
retf
mov
mov
mov
cld
mov
lods
movs
xchg
iret
pushf
xchg
out
mov
rol
inc
retf
mov
hlt
cmc
add
fisttp
ss
daa
mov
inc
push
scas
mov
cwde
xchg
mov
pop
aas
(bad)
cmc
inc
inc
xlat
or
jl
mov
packuswb
sbb
mov
jmp
test
sub
pop
lds
(bad)
xchg
adc
push
or
cwde
daa
test
jp
and
fst
(bad)
icebp
loop
mov
loop
repnz
es
sub
nop
aas
pop
shl
jecxz
mov
js
sub
add
pop
inc
cdq
movs
sub
nop
not
mov
imul
jnp
test
movs
sar
(bad)
das
ss
cmp
jg
ror
jp
sub
mov
stos
dec
sbb
add
popf
cmc
xor
ja
adc
pop
add
fnstcw
pop
inc
inc
outs
or
mov
cmps
push
outs
iret
arpl
js
ja
iret
ret
hlt
test
xor
dec
loope
das
enter
hlt
xchg
push
push
loop
xor
adc
movlps
push
xchg
add
push
pop
imul
sbb
ins
mov
pusha
cs
jmp
lock
mov
jl
push
outs
out
inc
adc
xchg
cmps
xlat
push
push
inc
int
pop
dec
sub
aam
add
mov
repz
fcomp
pop
push
stos
cmp
(bad)
rcr
aaa
outs
mov
xchg
(bad)
rcl
(bad)
jp
mov
inc
rcl
sub
sbb
sahf
mov
mov
xchg
add
mov
push
sbb
sub
call
loop
mov
aas
mov
mov
sub
dec
mov
sti
xor
ret
in
pop
pop
inc
xchg
cmp
cli
das
sub
das
and
jmp
adc
test
xchg
cmps
(bad)
dec
cmc
jnp
pop
or
push
xchg
xor
vcvtps2pd
ss
mov
xchg
in
or
imul
in
ins
push
mov
or
mov
stc
shr
clc
xor
in
push
jnp
leave
loopne
mov
mov
data16
stos
inc
pusha
sub
cmc
out
jmp
xchg
mov
push
jp
mov
and
and
(bad)
fwait
nop
xchg
jmp
mov
push
retf
test
aam
ret
or
retf
dec
inc
stc
leave
and
cmp
mov
xchg
fild
pop
fld
dec
not
add
push
in
ss
inc
xchg
mov
lods
sub
lahf
data16
mov
or
xchg
test
outs
sub
pop
and
addr16
into
aas
cmp
xchg
lahf
lods
or
or
leave
in
stos
neg
lahf
mov
jp
or
fwait
cmp
pop
test
push
jg
lods
mov
xchg
inc
ins
cld
sub
stos
gs
stos
sub
iret
pop
mov
cmps
movs
fstp
fisttp
xchg
sub
loope
jge
fidiv
sub
jbe
imul
and
inc
and
or
pop
sbb
data16
or
nop
sahf
stc
cmp
mov
xchg
sub
and
sub
cmps
in
cmps
mov
and
and
mov
cwde
jnp
push
mov
cwde
sahf
repz
leave
pop
dec
jle
or
jl
imul
pop
jl
stos
push
dec
pop
cdq
pop
dec
push
test
out
ror
pop
sub
int
(bad)
je
xchg
pop
jl
repz
and
and
xor
repnz
movs
mov
mov
outs
dec
rcr
push
scas
push
and
add
bound
xchg
nop
or
out
dec
jno
inc
hlt
(bad)
push
jmp
fst
mov
stos
iret
fcmovu
add
sti
jmp
jl
ret
sbb
imul
push
ss
cmp
iret
jb
cmp
inc
les
mov
dec
cld
repnz
cmp
(bad)
jb
dec
sub
push
dec
aaa
stos
xor
hlt
jae
push
push
aas
xchg
add
aaa
jnp
dec
sbb
mov
cmc
sub
sub
ror
test
jne
dec
add
movs
aaa
std
sub
outs
push
pop
sbb
adc
or
push
dec
lea
dec
test
add
sub
pop
fcomp
jo
or
jbe
scas
movs
xor
ss
xor
in
div
inc
ins
sub
repnz
or
(bad)
leave
nop
mov
ds
fild
sbb
mov
pop
mov
jl
out
hlt
(bad)
push
cmp
sbb
dec
or
mov
rol
dec
ret
add
les
xchg
mov
std
cli
add
stos
mov
sub
mov
mov
(bad)
repnz
mov
cs
aaa
mov
push
cwde
rol
iret
std
mov
std
pop
cmc
outs
test
pop
stos
mov
mov
stos
lods
hlt
fcomp
mov
cmp
test
sub
movs
aaa
repz
jmp
jnp
cdq
sub
leave
jp
fsub
sbb
push
inc
inc
mov
nop
clc
rol
jae
outs
cmp
xor
add
xchg
and
cmps
ss
inc
in
fcmove
ficomp
add
into
test
mul
xchg
jmp
xor
test
mov
popa
faddp
jmp
popa
mov
out
loop
dec
cs
mov
push
es
(bad)
inc
sbb
mov
jecxz
sbb
into
mov
adc
lds
or
(bad)
xor
das
or
ds
out
daa
scas
pusha
pop
repz
push
dec
xchg
mov
scas
pop
idiv
fdiv
(bad)
aad
sbb
in
jo
js
pusha
cmc
jmp
gs
jl
sub
inc
jmp
std
into
pop
adc
std
loop
jg
shl
fwait
(bad)
xor
lods
mov
xor
mov
dec
mov
mov
(bad)
sbb
or
adc
push
adc
outs
cmp
in
es
and
dec
rcl
call
out
pop
hlt
adc
jmp
in
mov
enter
hlt
mov
fstp
ins
lods
and
dec
fisub
in
jmp
idiv
(bad)
dec
js
mov
adc
int3
mov
or
push
push
xlat
xchg
dec
xchg
es
pop
repnz
loope
inc
les
popf
fidivr
sub
and
adc
arpl
xor
cdq
push
shr
outs
mov
es
je
shl
mov
and
adc
mov
sbb
popf
dec
(bad)
dec
and
xor
imul
or
cmp
mov
aaa
push
dec
aam
je
inc
enter
mov
xchg
rcl
(bad)
out
les
pop
cwde
jle
push
ins
ret
fwait
shl
mov
dec
and
inc
cwde
sub
xor
popf
test
push
pop
push
pop
lods
cmp
add
dec
inc
retf
mov
cld
retf
clc
retf
jmp
sub
mov
xchg
cdq
nop
add
or
into
inc
loope
mov
fadd
lods
cmps
dec
in
fs
mov
mov
push
xchg
jae
sub
sub
jecxz
pusha
stos
inc
mov
pop
dec
jnp
xlat
lock
or
outs
(bad)
ret
outs
ins
test
mov
dec
lods
cld
mov
retf
iret
retf
cld
retf
cld
cmc
sahf
clc
xor
dec
das
js
or
clc
jl
scas
clc
cld
mov
test
mov
hlt
lods
out
inc
mov
in
cmp
mov
mov
in
sbb
mov
sbb
movs
sar
mov
inc
retf
dec
mov
or
test
popf
imul
retf
cmp
cmps
aad
and
lock
fs
mov
hlt
jnp
popf
ja
(bad)
push
rcr
(bad)
fadd
in
cli
or
add
jmp
int3
into
loope
xchg
add
fldenv
repnz
leave
mov
ins
xchg
pop
fnsave
mov
je
addr16
retf
(bad)
js
mov
push
jb
test
addr16
(bad)
mov
xchg
adc
sbb
call
outs
mul
jl
jns
jnp
pop
mov
mov
ins
cmc
mov
dec
dec
cmp
mov
cli
xor
pop
xchg
xor
leave
movs
sbb
or
jae
fimul
inc
aam
inc
xor
cmp
sub
mov
dec
cmc
std
mov
dec
sub
(bad)
mov
mov
mov
push
dec
mov
out
inc
leave
(bad)
fisubr
jo
xor
ins
sub
retf
clc
adc
cld
data16
hlt
pop
jo
xchg
add
imul
dec
shl
dec
xchg
push
(bad)
cmc
lea
fadd
loope
or
add
into
inc
sub
shr
jne
call
cmp
data16
out
sub
pop
int3
dec
(bad)
(bad)
rol
sar
shr
mov
fisubr
in
cmp
mov
push
mov
ja
leave
fistp
push
idiv
mov
xchg
(bad)
aam
adc
push
ins
xchg
sbb
sbb
call
call
jmp
std
jg
mov
sub
sub
aam
mov
sbb
bound
pop
rep
inc
add
dec
fmul
test
add
movs
int
xor
inc
jge
fidiv
mov
push
jnp
scas
mov
fs
pop
lods
inc
adc
cmps
(bad)
dec
dec
pushf
retf
les
cmp
or
(bad)
lock
fst
or
inc
add
cmp
jp
and
out
cmp
cmp
retf
mov
mov
mov
sahf
mul
mov
add
enter
shl
ds
out
mov
aas
cmps
sbb
xor
mov
into
sub
dec
jb
enter
nop
push
xchg
dec
sahf
(bad)
ins
jns
sbb
outs
and
push
ret
and
ret
pop
sbb
ja
push
clc
out
or
dec
(bad)
jbe
dec
outs
lahf
in
mov
push
fadd
arpl
mov
retf
inc
stos
pop
(bad)
(bad)
fisubr
inc
jo
pop
cmp
dec
das
or
dec
inc
push
cmps
cmp
push
loope
adc
fmul
ret
sbb
shl
dec
sub
inc
in
clc
jb
cld
cdq
or
jbe
push
xlat
and
jp
fpatan
(bad)
rol
or
call
cli
scas
mov
cmp
adc
cld
loop
out
adc
ret
retf
fstp
adc
pop
mov
or
fsubr
or
inc
mov
popa
ss
outs
xor
push
sar
xchg
loope
pop
xchg
ss
test
imul
inc
les
fsubr
mov
adc
push
into
loop
or
fisttp
leave
xor
pop
jmp
push
pop
das
add
lock
scas
add
fstp
dec
or
cmps
aad
leave
cmp
sub
out
pop
xchg
sbb
dec
add
inc
pop
movs
es
push
frstor
pop
shl
mov
xor
sub
push
inc
pop
fs
cmp
mov
fld
sub
in
push
add
rdmsr
lods
ins
outs
test
push
push
jl
dec
jo
mov
sbb
jg
fisttp
xor
nop
arpl
pop
inc
fsub
mov
pop
jp
mov
ror
adc
push
aam
dec
repnz
add
mov
pushf
cli
push
mov
pop
pop
jecxz
sub
push
ja
sub
mov
dec
xor
sbb
arpl
stc
mov
ret
mov
js
into
mov
xor
jecxz
dec
das
fdivp
mov
icebp
xchg
or
jo
inc
mov
(bad)
cmp
dec
stc
add
pop
jne
mov
sti
adc
push
xchg
or
outs
mov
cmc
ret
data16
into
icebp
mov
jbe
jmp
cdq
push
mov
jl
inc
stos
xchg
dec
push
shl
inc
test
sbb
daa
sub
dec
or
ror
xchg
pop
and
cdq
retf
rcr
jl
test
sahf
icebp
sahf
pop
sbb
push
sti
(bad)
pusha
add
mov
cmp
mov
jp
jl
xchg
xor
popa
std
add
sbb
add
cdq
out
dec
imul
popa
cmp
int3
add
pop
cmp
fiadd
or
mov
mov
jl
push
test
pop
(bad)
pop
sub
dec
clc
movd
test
or
add
fwait
and
das
js
mov
clc
mov
mov
mov
sahf
mul
cli
out
add
inc
retf
mov
clc
xor
fiadd
jp
xor
pop
xor
leave
in
loop
shl
dec
ds
jmp
test
push
xor
and
add
ret
(bad)
hlt
xchg
jl
movs
inc
imul
jmp
dec
les
mov
sbb
mov
clc
rcr
gs
xor
sub
test
fadd
or
xchg
loope
mov
pop
xlat
sbb
js
jecxz
ret
dec
xor
test
push
inc
inc
jno
push
push
stc
add
cli
mov
bound
add
push
and
int
lods
(bad)
popa
inc
pop
repz
rol
stos
clc
repnz
xor
sahf
and
movs
pop
test
jmp
test
enter
hlt
inc
std
xor
xor
pushf
dec
call
jge
push
lea
jmp
inc
int
cdq
mov
jg
xchg
adc
push
mov
in
adc
dec
and
std
adc
jae
adc
(bad)
arpl
ds
mov
cs
xchg
(bad)
popf
xor
clc
and
or
pop
mov
sub
jne
cmps
rcl
jmp
retf
outs
add
(bad)
loop
mov
jl
in
sbb
loop
stc
pusha
xor
pushf
rcl
mov
int
and
aam
rol
pop
out
rcr
cmp
into
test
pop
call
(bad)
sbb
out
jmp
xchg
int3
push
push
inc
fsubr
mov
adc
je
cmp
js
sub
pop
inc
iret
mov
test
call
idiv
mov
(bad)
mov
lahf
pusha
and
xor
pusha
xchg
inc
idiv
and
mov
out
loope
retf
scas
xor
loop
mov
dec
adc
(bad)
jle
fstp
pop
icebp
movs
cmp
xor
aaa
enter
xchg
out
xchg
lods
jl
jmp
add
movs
cld
mov
dec
lock
iret
adc
(bad)
mov
mov
push
push
cli
pop
dec
ins
dec
leave
test
cmp
in
adc
cs
jbe
clc
ins
mov
fstp
cmp
arpl
(bad)
loopne
sub
mov
jecxz
repnz
imul
hlt
mov
cli
imul
xchg
mov
clc
sbb
push
jno
mov
daa
cdq
adc
hlt
test
ret
dec
cwde
jnp
sbb
xor
xchg
pop
adc
aad
and
in
or
xchg
sbb
hlt
push
xor
sahf
xchg
mov
xchg
push
(bad)
cmps
ins
mov
adc
mov
(bad)
das
push
cmp
cmp
jmp
lds
adc
ss
cli
test
ror
imul
sbb
ins
jecxz
jge
enter
mov
(bad)
shl
int3
mov
xor
dec
cs
sti
scas
pop
jne
movs
int
shl
mov
test
loopne
test
cmp
adc
adc
cmp
sub
repz
mov
(bad)
cmps
sub
inc
or
movs
(bad)
js
sbb
out
and
(bad)
and
sub
xchg
dec
jmp
lea
inc
pop
dec
stc
sahf
push
cmps
mov
and
mov
rcl
in
lds
mov
(bad)
fdivp
cmp
pusha
call
jp
push
repnz
sub
in
rol
mov
stc
cmp
cmps
dec
popf
push
dec
xchg
pop
mov
pop
scas
jb
mov
dec
cmps
(bad)
enter
dec
icebp
xchg
shl
and
push
and
push
dec
std
mul
cmp
adc
dec
aas
fsubr
xchg
into
rcr
push
jae
in
enter
sub
or
in
mov
add
jle
pop
rcl
clc
jl
ins
cld
xchg
cmp
dec
jg
sbb
loop
test
(bad)
mov
cmc
pop
mov
popa
push
add
aas
xchg
mov
test
sbb
stc
or
icebp
leave
pop
mov
sti
jmp
or
sub
xchg
mov
xchg
fisttp
nop
pop
or
lods
pushf
ror
pop
xlat
inc
enter
stc
lds
ins
xchg
or
push
jmp
jecxz
stos
stos
les
aaa
cmp
fstp
cmp
sar
rol
mov
popa
mov
je
in
push
pop
mov
cmc
mov
push
jp
mov
sti
pushf
xor
mov
fnstenv
shl
inc
cmp
and
icebp
jne
mov
in
xor
cmp
je
retf
xlat
(bad)
test
pop
iret
(bad)
push
xchg
jmp
push
das
dec
enter
sbb
jg
push
shl
pop
daa
or
ret
ins
sbb
inc
and
js
mov
in
pop
lock
and
lods
int
push
lods
cli
mov
cld
jle
out
mov
hlt
sub
fsubr
adc
call
dec
test
xchg
jmp
pminsw
ret
fstp
sti
pusha
mov
push
cmp
xor
shl
icebp
mov
shl
dec
pop
jp
(bad)
add
jmp
test
in
cli
ins
leave
push
int3
outs
das
enter
pop
xchg
dec
inc
lock
inc
jno
fs
call
mov
mov
sti
mov
test
in
int3
(bad)
mov
push
(bad)
cdq
(bad)
jb
pop
add
lar
or
loope
cmp
sub
xchg
bound
lahf
fstp
mov
push
push
sub
add
dec
sub
ret
push
outs
cld
(bad)
out
sub
int3
mov
popf
and
dec
into
mov
push
stos
(bad)
ror
mov
ja
(bad)
jecxz
sahf
cmp
xor
mov
ret
push
loopne
fcom
loopne
movs
ds
(bad)
fmul
sub
rcr
movs
dec
and
loop
sub
cwde
clc
int
call
mov
cld
mov
(bad)
jle
pop
lods
(bad)
daa
ss
mov
in
call
inc
push
lock
enter
mov
and
add
push
mov
int
sti
pop
or
call
fxch
push
jp
nop
mov
mov
ja
xchg
js
xor
cmp
mov
adc
mov
sar
(bad)
scas
ja
imul
sub
retf
cli
mov
movs
test
adc
cmps
dec
ins
fadd
mov
cmc
mov
pop
sbb
int3
or
stos
inc
cmp
dec
sbb
xchg
cmc
das
(bad)
xor
adc
mov
cwde
loop
xor
(bad)
cwde
pop
dec
sbb
dec
push
das
sbb
xchg
pop
xchg
pop
mov
mov
mov
(bad)
div
xchg
dec
cmps
jnp
stos
call
jl
js
xchg
call
dec
sub
int3
cs
mov
mov
mov
or
inc
or
mov
sbb
retf
or
ror
mov
aam
jl
push
mov
xor
jmp
fistp
pop
push
dec
jmp
adc
jns
es
repz
(bad)
aam
or
inc
pop
pop
mov
js
xchg
or
cdq
push
xor
jb
retf
push
(bad)
leave
cwde
push
out
clc
jb
call
movs
scas
cli
sbb
xor
cmp
jl
sub
les
(bad)
xor
mov
clc
or
aad
lods
sub
sub
loop
outs
inc
lods
mov
lods
mov
mov
add
dec
cmps
test
ins
enter
das
popf
inc
xchg
loop
fld
mov
in
sar
scas
mov
mov
push
inc
pop
sti
movs
sbb
jbe
jecxz
jmp
mov
lahf
stos
xchg
mov
or
dec
mov
test
hlt
in
nop
dec
push
jp
and
mov
leave
and
sbb
sub
mov
or
jne
cmp
xchg
test
fild
movs
push
mov
adc
fs
js
enter
jmp
call
call
push
out
or
(bad)
test
pop
dec
aas
push
inc
mov
(bad)
popa
mov
lods
adc
cmps
push
and
push
push
(bad)
aad
shr
mov
paddd
sahf
imul
xchg
inc
push
aas
jne
inc
call
mov
shr
in
cmps
iret
jae
lods
xor
inc
hlt
push
mov
por
xor
mov
sub
adc
iret
(bad)
xchg
jecxz
jns
iret
cs
sar
movs
pop
ins
hlt
ins
pushf
mov
mov
fs
in
movs
addr16
pop
dec
dec
aaa
test
or
aam
or
scas
data16
dec
jg
add
sub
push
adc
inc
cmc
adc
jl
lds
pop
add
cmp
jnp
and
xor
cmp
cmps
mov
(bad)
or
xchg
clc
cmp
push
mov
mov
out
retf
retf
cmp
dec
outs
js
or
jl
outs
cmp
scas
mov
mov
enter
or
jnp
mov
clc
or
js
jmp
js
jmp
iret
stos
jle
(bad)
cld
outs
test
retf
cmp
mov
std
cmp
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
jne
mov
cld
sbb
mov
cld
mov
cmp
sti
scas
(bad)
cld
dec
outs
mov
mov
retf
cld
retf
lods
mov
jl
nop
leave
jl
out
mov
cld
retf
mov
retf
std
mov
cld
mov
dec
retf
cld
dec
scas
cmp
into
scas
mov
arpl
out
outs
in
sbb
aam
nop
jp
dec
das
push
movs
in
jmp
outs
jge
cmps
cld
fdivr
cmps
jp
into
into
lock
(bad)
(bad)
pop
push
or
movs
ret
movs
xor
xchg
ja
stc
movs
inc
adc
int
shl
cdq
int3
aad
jb
inc
scas
enter
out
fnstcw
jecxz
loopne
cmc
movs
ret
mov
cli
pop
dec
cli
out
pop
jge
mov
into
sbb
outs
sub
sub
pushf
mov
xchg
mov
call
push
shl
cmc
mov
sub
dec
ins
scas
dec
mov
mov
cs
mov
and
cmps
cld
test
sbb
dec
ficom
test
pop
scas
es
mov
sbb
in
dec
ret
xor
pop
jns
mov
cmp
ficomp
or
xor
rol
xchg
xor
fdivr
inc
mov
or
jb
cmp
add
cmp
ret
adc
and
mov
ss
popa
jmp
cli
int3
mov
shr
push
ins
shl
aaa
sub
cli
and
pop
rcr
xor
call
or
add
jmp
arpl
xchg
nop
in
ret
fwait
push
dec
cwde
sub
shl
mov
rol
cmp
loopne
(bad)
mov
dec
in
dec
sahf
jnp
xlat
fistp
push
iret
push
push
loop
push
not
mov
cmps
add
adc
dec
adc
push
(bad)
int
mov
push
mov
movs
mov
sar
sti
ret
lods
in
je
(bad)
imul
cli
add
xor
fs
fdivr
xchg
int
jp
rcl
cmp
mov
jge
xchg
(bad)
pop
int3
pop
in
and
call
jmp
btc
cld
fistp
cmp
xchg
and
dec
mov
into
mov
jmp
jns
cmp
jg
mov
cmp
jbe
call
int
xchg
dec
mov
retf
mov
call
test
(bad)
lea
cmps
cld
cld
retf
mov
retf
mov
or
jns
mov
stc
mov
cmp
dec
push
mov
mov
mov
mov
fistp
jb
fdiv
inc
cmp
push
cmovnp
inc
enter
scas
test
das
add
data16
jno
ins
pop
inc
in
pop
shl
sub
cwde
xor
and
cmps
jo
cdq
popa
dec
dec
div
int3
ror
(bad)
call
jae
aas
push
sbb
aaa
jmp
out
pop
push
dec
imul
jbe
adc
out
sub
mov
xchg
mov
ret
mov
int
adc
pop
add
aas
aaa
ins
mov
push
scas
leave
sbb
mov
sub
inc
inc
je
xchg
xchg
dec
mov
xor
inc
shl
push
lahf
xchg
xchg
(bad)
sti
pushf
xor
lods
add
ins
xor
mov
int
nop
sbb
jns
xchg
outs
mov
jne
xor
cli
lea
dec
cmc
dec
aam
xchg
sti
jl
or
test
mov
icebp
inc
xor
xor
jno
xor
dec
cmps
addr16
icebp
pop
in
push
dec
mov
dec
ret
pop
(bad)
mov
out
sti
and
push
mov
add
add
or
push
sub
das
out
dec
sub
inc
dec
cwde
add
and
and
bound
push
fcomp
call
pop
ins
jle
and
je
inc
sub
adc
jo
fwait
popa
jnp
or
pusha
xchg
mov
add
jnp
mov
mov
adc
stc
xchg
(bad)
ficom
retf
fstp
xchg
sbb
xor
(bad)
in
fisub
hlt
stos
xchg
hlt
ss
test
jb
(bad)
inc
out
pop
out
add
mov
xor
or
and
cdq
xor
or
xor
call
lock
jl
and
je
out
push
std
(bad)
sbb
call
out
and
mov
cmp
leave
js
cdq
sbb
pop
or
cmp
jmp
inc
xchg
daa
btr
lods
hlt
bound
jecxz
sbb
dec
xor
add
aaa
arpl
shl
neg
imul
sbb
pop
outs
sub
inc
pusha
repz
mov
bound
xchg
les
inc
enter
xchg
ins
imul
into
addr16
(bad)
push
stos
repnz
ins
cli
pushf
sti
out
xor
cmp
xchg
fcmovnbe
jle
pop
mov
imul
stos
in
lds
mov
sub
sbb
jae
mov
jo
inc
mov
pop
mov
aas
inc
mov
je
cmps
sbb
shl
inc
arpl
jb
arpl
xchg
out
daa
pop
iret
repz
(bad)
neg
arpl
dec
jg
sti
or
and
inc
dec
push
out
rcl
gs
mov
scas
sbb
adc
in
xor
pop
mov
and
xlat
not
pushf
jl
loope
pop
mov
adc
mov
test
mov
call
dec
shl
mov
movs
adc
sub
pop
in
sbb
jb
arpl
jb
jo
into
add
jle
loope
dec
or
repz
dec
cld
push
into
dec
inc
into
push
dec
mov
jp
pop
or
or
loopne
sbb
xor
popf
or
and
cmp
inc
rcl
ret
cmp
js
adc
jmp
sbb
cmp
cmps
shl
sub
outs
cli
punpckldq
mov
mov
jmp
shl
data16
push
fadd
and
xchg
arpl
pop
arpl
sahf
mov
mov
mov
clc
cld
mov
cmp
retf
out
mov
clc
inc
mov
ins
ins
stos
ret
std
mov
mul
cld
scas
mov
xor
push
stos
lock
mov
push
test
mov
(bad)
push
push
(bad)
(bad)
xlat
push
bound
xchg
cdq
addr16
loope
xor
adc
cwde
dec
imul
xchg
inc
sub
in
sti
cmp
pop
sbb
add
cdq
les
xor
mov
cmp
imul
scas
and
jne
aad
and
ins
(bad)
cli
cdq
scas
shr
add
or
pusha
push
js
xchg
aad
aam
add
inc
mov
repz
lods
imul
ins
dec
mov
sbb
je
aaa
sbb
ret
lods
cmp
mov
dec
cs
mov
ins
imul
xor
jno
hlt
or
cmps
sar
add
rol
xchg
and
(bad)
fbstp
movs
xor
push
or
jbe
call
jmp
fwait
fs
loop
dec
outs
shl
pop
mov
stos
or
xchg
cwde
call
push
or
out
in
push
(bad)
cld
cld
call
inc
out
push
jp
add
inc
cmp
sbb
and
add
inc
stos
ss
ins
jo
jl
sahf
jl
xlat
test
test
mov
push
in
ins
leave
inc
or
test
push
pop
sbb
cs
mov
xor
sbb
dec
loop
cld
or
clc
mov
retf
mov
or
mov
in
sahf
cmp
stc
inc
jecxz
pusha
stos
add
mov
and
pop
inc
mov
in
js
mov
mov
inc
dec
sahf
popf
sbb
pop
imul
cmp
in
sbb
movs
push
fsubr
inc
ss
add
(bad)
mov
inc
ret
add
mov
(bad)
pop
loop
int
or
scas
stos
mov
adc
(bad)
dec
xchg
sti
add
cmp
and
not
in
popa
mov
les
xchg
ret
in
lds
bound
push
sbb
ja
shl
mov
add
or
stos
xchg
mov
inc
jnp
cli
dec
das
pop
add
jle
push
push
sub
dec
pop
pop
fs
sbb
xchg
xor
or
scas
call
ins
lods
inc
or
ss
add
cli
(bad)
(bad)
retf
xlat
scas
ins
out
ret
mov
ret
xor
aam
rdmsr
icebp
cwde
pmuludq
add
lods
dec
repz
sbb
pop
lahf
imul
jg
imul
and
loop
jno
je
sub
dec
popa
sbb
xchg
xor
adc
sbb
xchg
fdiv
cld
mov
push
jl
mov
push
add
add
aas
add
in
adc
loop
jbe
add
leave
neg
outs
sbb
sub
jmp
les
xor
mov
aaa
scas
loop
jg
mov
retf
or
aam
cmp
sub
push
pop
ret
ror
inc
jne
cmp
(bad)
movs
scas
mov
inc
dec
(bad)
cmp
mov
jle
add
adc
pushf
mov
js
into
das
mov
or
jp
retf
cmp
das
cmp
retf
clc
mov
xor
cmp
fs
(bad)
enter
lods
pusha
stos
fwait
xor
pop
aaa
fs
pop
cmp
mov
in
jne
clc
mov
push
and
dec
out
and
push
mov
cmps
push
and
(bad)
adc
mov
push
cmp
add
xchg
sbb
pop
xchg
outs
jns
add
mov
xchg
mov
sti
pop
ins
mov
scas
fisubr
push
pop
out
xchg
sbb
adc
(bad)
mov
bound
aam
out
push
lods
arpl
(bad)
jbe
cmp
inc
jmp
push
dec
pop
icebp
push
outs
inc
jecxz
lahf
neg
pop
xchg
int
or
mov
in
adc
(bad)
sbb
mov
cmp
inc
push
mov
cdq
gs
popa
dec
cmp
xchg
xchg
or
or
mov
leave
jge
pop
dec
push
adc
test
push
xchg
and
sbb
repnz
daa
xchg
scas
in
and
pop
in
pusha
cdq
mov
nop
jbe
dec
imul
cmp
or
or
std
sbb
sbb
add
dec
inc
jbe
and
lods
gs
mov
and
lea
ss
mov
cmp
in
mov
mov
xchg
xor
out
icebp
push
nop
aaa
push
adc
pop
inc
in
jmp
ss
ret
and
std
jp
push
pop
mov
imul
push
scas
scas
ds
icebp
inc
push
push
in
cmp
dec
leave
adc
xchg
ret
fs
jbe
cs
mov
mov
(bad)
cmp
xor
and
movs
sub
push
xor
into
add
pop
jo
out
adc
int3
xchg
cwde
in
das
jecxz
pop
repz
into
dec
retf
dec
mov
dec
fwait
and
and
and
cmp
dec
mov
push
ss
inc
xchg
jmp
call
push
cwde
pusha
lods
jb
and
lock
popf
xchg
sahf
xor
retf
retf
sbb
addr16
dec
adc
push
jbe
sbb
adc
xor
outs
cmc
call
sbb
pop
cs
adc
rcr
(bad)
in
or
inc
div
mov
rcr
lds
dec
sub
mov
or
jae
xchg
sub
sbb
inc
push
stos
cld
cli
mov
mov
sahf
ja
data16
not
or
mov
jne
in
out
in
and
jnp
test
lods
out
aam
push
in
cdq
loop
nop
int3
push
jmp
call
ss
jmp
mov
xchg
ret
and
push
mov
(bad)
ss
xor
dec
mov
add
out
out
ret
aad
ror
shr
je
retf
repnz
push
pop
jb
aam
outs
test
push
pop
mov
dec
inc
cdq
adc
mov
(bad)
jne
mov
adc
xchg
adc
jecxz
sbb
into
imul
into
xor
fcom
sbb
sub
out
lds
nop
retf
xchg
movs
(bad)
ret
cmps
stc
aam
sbb
arpl
mov
adc
out
adc
inc
stc
pop
mov
and
dec
(bad)
mov
cmp
ds
ret
xor
scas
pop
sub
jne
inc
sub
loope
stos
lods
mov
fs
lods
cld
fbstp
js
push
lgs
cmp
sub
adc
inc
or
sub
jbe
sbb
mov
cwde
push
imul
sub
ret
aas
jnp
outs
ins
sub
inc
lds
lods
pop
dec
pop
xlat
mov
shl
adc
mov
into
cli
inc
arpl
adc
mul
movs
fstp
aam
mov
(bad)
fistp
mov
int3
aas
pushf
outs
sbb
sbb
out
ins
mov
xor
imul
repnz
sti
shr
sbb
outs
mov
dec
jnp
mov
fld
lea
div
js
rcr
ret
mov
and
cmps
icebp
pop
sbb
ja
cwde
or
or
and
ins
gs
xor
in
sbb
daa
jl
push
mov
aad
shl
sahf
icebp
scas
(bad)
or
add
jge
bound
mov
pop
pop
lods
or
jl
sbb
adc
jg
pop
and
and
into
add
mov
(bad)
lds
retf
and
lods
cmc
scas
test
cmp
arpl
sub
jae
push
cmp
ret
movs
stos
or
ins
nop
adc
js
mov
in
adc
xchg
inc
jecxz
sahf
inc
push
ss
xor
movs
stos
mov
push
enter
(bad)
stos
ficomp
sbb
in
lods
in
ins
iret
dec
mov
daa
pusha
pop
repnz
xchg
les
adc
int3
pusha
mov
call
cmp
jmp
jae
int
test
cmp
(bad)
in
pop
dec
pop
ins
inc
call
xor
mov
in
pop
test
mov
xchg
jmp
mov
or
and
cmp
test
sbb
into
jp
adc
pop
clc
xchg
mov
or
mov
enter
rol
and
jl
sti
popf
leave
(bad)
rdpmc
or
lods
jle
mov
ret
daa
mov
daa
into
shr
cli
or
jg
mov
sub
mov
pop
mov
mov
push
loope
out
adc
(bad)
loopne
movs
xchg
dec
jne
shl
cmp
outs
(bad)
dec
pop
clc
sar
dec
xchg
popf
ss
les
outs
(bad)
inc
outs
pushf
lds
pop
dec
sbb
shl
leave
dec
cld
xchg
out
and
pusha
pop
sub
(bad)
jae
neg
add
cwde
mov
push
scas
jne
addr16
das
or
outs
xor
pop
mov
sar
dec
imul
sub
push
les
add
sbb
dec
les
lds
inc
test
dec
repz
fs
shr
xacquire
addr16
adc
shl
ins
jb
movs
outs
xchg
push
adc
mul
test
cmps
adc
sub
mov
inc
ret
and
pop
sub
inc
and
adc
in
fs
or
or
jo
ret
in
scas
mov
ret
mov
pop
fmul
inc
out
sbb
adc
inc
jne
cmp
cld
mov
loop
jmp
cmp
sbb
push
xor
jo
sub
je
aas
cdq
fld
sub
sbb
sbb
inc
jmp
imul
in
clc
enter
inc
or
data16
xor
push
sbb
inc
add
(bad)
mov
lock
ret
xor
(bad)
xor
loopne
push
dec
fimul
sbb
(bad)
mov
das
scas
xchg
cmp
and
jne
push
into
xlat
jb
sub
test
daa
(bad)
jle
movs
cwde
push
jne
mov
cmp
iret
ror
pop
lds
cmp
sahf
push
std
jp
push
or
retf
ja
(bad)
in
movs
sub
loop
cld
jmp
push
push
mov
sbb
pushf
(bad)
retf
js
jp
or
mov
and
outs
out
and
jne
cdq
push
mov
test
push
add
call
je
sbb
fld
cmp
ror
mov
retf
add
push
cmp
inc
in
pop
jo
dec
mov
mov
cld
or
mov
mov
xchg
repz
xchg
cmps
lahf
mov
mov
hlt
in
ss
mov
or
lock
jae
push
xchg
int3
fwait
pop
or
ja
adc
nop
or
cs
cmp
movsx
movs
xchg
xchg
dec
or
jbe
push
pushf
loop
mov
out
shr
repz
xlat
adc
ja
push
mov
call
movs
std
push
lods
es
ins
and
mov
mov
hlt
retf
ins
ss
rcr
mov
arpl
lea
into
rol
sbb
lds
and
js
cmp
sar
movs
enter
cmp
xchg
pop
(bad)
push
iret
adc
cmovle
in
inc
repnz
sbb
ror
jmp
xchg
mov
sub
ficom
fcomp
jbe
xlat
add
jns
xchg
or
fidiv
pop
pop
mov
cmp
jo
bswap
pop
mov
jecxz
push
fiadd
sub
and
push
sbb
push
mov
iret
adc
data16
pop
push
popa
stc
sti
test
neg
and
fild
movs
and
call
inc
(bad)
out
mov
test
lds
push
sbb
lods
data16
cmps
pushf
jbe
(bad)
jp
retf
aam
push
lds
icebp
in
adc
or
fwait
(bad)
jp
imul
adc
jnp
dec
nop
or
and
dec
scas
loope
fistp
jl
scas
jecxz
scas
test
outs
test
push
sti
push
dec
mov
retf
cmp
and
sub
or
imul
xchg
push
mov
sbb
cld
ror
cmp
xchg
cmc
mov
push
stos
mov
sbb
inc
(bad)
(bad)
cli
mov
pop
or
(bad)
sbb
popf
stos
push
xchg
les
jecxz
mov
mov
add
and
mov
push
das
movs
aam
push
push
leave
icebp
cmps
fwait
mov
mov
push
(bad)
test
(bad)
jmp
mov
sbb
inc
jmp
aad
mov
loop
dec
add
aaa
add
sbb
cli
jb
movs
ja
inc
push
xor
push
push
fisubr
out
jge
loope
xchg
pop
inc
jns
loopne
or
mov
bnd
dec
pop
pusha
or
cmp
sbb
out
cmp
xchg
pop
mov
std
adc
in
jl
imul
pop
jne
hlt
jmp
pop
sbb
sbb
movs
jnp
(bad)
out
lds
xchg
jb
scas
inc
mov
mov
rcl
aas
push
cmps
sub
nop
lods
test
out
and
mov
xchg
mov
xchg
or
loopne
xchg
jno
pop
jae
retf
addr16
loopne
or
es
jne
sbb
dec
pop
cwde
stos
call
test
cmp
fwait
jb
adc
push
fs
pop
xor
ds
mov
arpl
jle
xchg
xchg
es
je
add
mov
adc
(bad)
push
pop
rcr
push
retf
sbb
sbb
jg
dec
popa
mov
in
retf
outs
mov
lock
retf
fsubr
dec
loope
outs
imul
out
sub
shl
enter
je
div
test
add
outs
loope
mov
pop
popa
add
lods
adc
sar
sub
cmp
mov
cld
jo
dec
imul
cmp
stos
mov
test
pop
dec
rol
xchg
pop
movs
movs
pushf
jle
mov
jo
out
push
pop
repnz
xchg
out
test
xchg
push
push
jl
cwde
xchg
fs
loop
mov
popa
add
lea
mov
(bad)
call
outs
jl
pop
in
enter
cmovns
xor
mov
nop
jmp
stc
(bad)
fs
push
mov
test
ss
inc
sub
jmp
mov
shr
addr16
mov
adc
push
add
int
push
xor
mov
dec
outs
repz
hlt
pop
out
pop
lea
jp
and
stos
imul
dec
cmp
pop
jae
jg
out
inc
sub
pop
std
mov
sbb
pop
jge
pushf
cwde
jb
cmp
bound
cli
jbe
mov
adc
clc
mov
mov
aam
stos
stos
inc
mov
and
test
(bad)
test
repnz
(bad)
cmp
lds
ins
(bad)
jo
mov
cs
ror
pop
sub
repz
xchg
inc
clc
xchg
xchg
daa
adc
mov
jbe
popf
pop
inc
fstp
sbb
cmp
xchg
test
sub
inc
or
xchg
pop
clc
mov
les
test
cmp
ja
out
push
ins
xchg
ja
data16
outs
or
add
rcl
shl
pop
push
inc
sbb
xchg
loopne
add
popf
movs
push
mov
push
push
movs
or
les
sub
inc
test
or
aad
xlat
rcr
jns
sbb
mov
out
pop
out
ds
jle
inc
dec
test
fsubrp
sub
imul
push
iret
imul
jne
mov
gs
mov
ret
sub
inc
pop
adc
xor
test
and
jle
cmc
out
and
push
inc
inc
fldenv
sahf
stos
popf
mov
shl
xor
xchg
mov
dec
sbb
jns
fiadd
cmc
das
adc
push
repz
xor
adc
inc
gs
popf
mov
out
(bad)
cli
xchg
jmp
xor
push
or
xchg
(bad)
xor
ss
pop
shl
xchg
cmps
xchg
scas
and
cmp
out
cmc
arpl
retf
cld
dec
scas
cmp
retf
clc
push
cmps
pushf
scas
inc
retf
jmp
daa
enter
clc
std
scas
mov
pushf
out
sub
mov
mov
mov
(bad)
cmp
aam
retf
dec
mov
cld
out
lods
mov
out
retf
cld
stos
scas
lock
(bad)
mov
cmp
fsubr
sti
rol
mov
pushf
out
ret
stos
cli
cld
mov
dec
shr
jmp
cs
jmp
mov
mov
int
in
cld
mov
clc
std
or
clc
jl
scas
clc
cmp
scas
mov
mov
sahf
repz
fsub
out
xor
ds
mov
or
rcl
gs
fadd
jnp
push
sub
inc
daa
loop
ret
dec
cmp
dec
and
in
mov
outs
loopne
icebp
or
add
cmp
jmp
dec
leave
add
cmp
xchg
rcr
test
arpl
lahf
stos
xchg
jbe
sbb
mov
jnp
cwde
xchg
in
out
not
mov
loope
loope
and
in
pop
push
sub
sub
xor
arpl
aas
and
mov
and
mov
cs
lea
push
pop
arpl
repnz
mov
mov
mov
mov
sbb
js
cmc
das
test
(bad)
fsubrp
pop
(bad)
mov
fs
ror
or
in
mov
jp
repz
popf
pop
mov
dec
call
sub
mov
lahf
es
sub
repz
and
push
push
aad
aas
dec
jmp
push
push
mov
xchg
(bad)
leave
pop
stos
cwde
lock
push
add
call
(bad)
xor
add
cmc
sar
mov
pop
xchg
add
or
in
ins
adc
or
call
shl
add
jno
and
xor
ret
pop
aaa
cmp
mov
retf
mov
mov
clc
cld
mov
mov
mov
lods
in
stos
lods
mov
(bad)
xchg
xor
mov
cmp
lahf
add
(bad)
dec
or
push
sub
test
mov
xlat
mov
lea
adc
push
xor
or
xchg
mov
cmc
mov
call
pop
out
mov
push
push
lods
out
adc
pushf
addr16
xchg
in
inc
mov
jmp
jmp
iret
mov
outs
inc
lds
push
dec
test
in
sbb
jmp
test
or
pop
ficom
ja
mov
jb
(bad)
mov
leave
mov
cmp
cpuid
lock
lods
scas
jle
xor
pusha
clc
cmp
cwde
inc
lods
and
mov
xor
xchg
adc
fnstsw
sar
sbb
sbb
mov
movntpd
xchg
pop
psadbw
jb
xor
in
sub
test
cli
cld
and
bound
ins
outs
xchg
lea
outs
xchg
push
ret
cmp
sbb
mov
or
pushf
cwde
loopne
adc
pop
cdq
outs
test
jge
xchg
add
inc
dec
add
daa
test
mov
push
push
int3
adc
scas
aaa
dec
and
xor
je
inc
sbb
xchg
push
popf
nop
mov
imul
mov
pop
(bad)
cld
sahf
fcom
(bad)
or
loopne
push
ds
add
xchg
stos
loope
inc
hlt
mov
xor
fmul
dec
push
pop
sbb
and
xchg
pop
inc
repz
sahf
clc
ss
clc
cld
mov
cmp
clc
mov
and
test
(bad)
mov
nop
cli
xchg
hlt
lods
mov
in
mov
clc
cmp
cs
icebp
call
jl
or
pop
or
jp
ins
cli
push
and
cmp
pop
dec
mov
mov
push
shl
push
(bad)
mov
jmp
xchg
outs
fldcw
ins
xor
sbb
fadd
addr16
out
loope
js
clc
adc
out
stc
and
dec
inc
dec
push
xchg
dec
cli
outs
(bad)
cld
and
aad
or
xchg
leave
dec
mov
xchg
les
sub
cmps
cmc
(bad)
xor
mov
push
sbb
and
push
call
aaa
push
push
mov
ss
jns
cmp
cmp
push
xchg
and
js
fisttp
popf
int
clc
int3
(bad)
xchg
jp
mov
sar
outs
outs
dec
cmc
das
mov
cmp
mov
gs
out
adc
and
push
fimul
mov
xor
mov
jno
mov
(bad)
mov
adc
push
push
mov
xchg
mov
aaa
add
mov
xchg
dec
sbb
repnz
push
hlt
xchg
mov
mov
leave
mov
pop
and
jb
xchg
mov
lds
call
xchg
dec
test
ins
mov
ins
sub
cs
jmp
sbb
out
add
test
xor
jg
mov
jbe
xchg
cmp
daa
sub
cmp
icebp
hlt
xlat
enter
mov
lods
xchg
cmc
mov
sbb
cmp
cli
in
or
dec
std
sub
dec
jns
neg
inc
jb
lods
dec
sub
push
and
not
and
mov
aam
cwde
idiv
(bad)
neg
or
(bad)
out
shl
das
jge
dec
dec
dec
inc
std
in
call
cs
out
sub
int
outs
jae
out
(bad)
das
jmp
nop
adc
aaa
call
push
retf
jns
call
jo
pushf
outs
add
sub
mov
sbb
mov
and
(bad)
jae
cmps
mov
and
jmp
push
daa
mov
dec
jle
add
mov
mov
jp
push
xchg
or
pop
adc
in
dec
mov
mov
xor
les
cmp
xchg
retf
xor
push
mov
mov
test
jmp
popf
xlat
jmp
lea
jne
mov
sar
hlt
arpl
or
aam
xor
arpl
jmp
ins
in
ds
sub
and
jge
popa
retf
mov
int3
jno
aaa
add
(bad)
enter
js
mov
mov
adc
or
dec
push
ret
leave
jl
scas
ret
(bad)
cmc
scas
mov
pusha
ds
mov
add
xor
out
jp
mov
ss
xchg
jle
mov
mov
(bad)
in
in
cdq
sbb
lahf
jbe
ins
ja
mov
jmp
xchg
sbb
clc
jle
sbb
cli
sub
jp
sbb
pop
dec
imul
das
adc
jo
aaa
js
or
pop
push
mov
cmps
cs
cmp
xchg
cmps
call
mov
es
or
dec
pop
cmps
mov
or
and
cmp
mov
div
sub
xchg
mov
xchg
jp
imul
push
repz
dec
xor
iret
or
test
xor
sub
out
in
adc
add
sar
arpl
and
xor
int3
mov
std
jmp
mov
dec
or
jl
xchg
ficom
push
mov
shr
std
jb
xor
pop
in
dec
dec
pop
popa
mov
pusha
adc
push
pop
fdivr
shl
jg
add
and
inc
out
pusha
xchg
sub
(bad)
lods
lods
(bad)
jns
sbb
mov
mov
ret
(bad)
cmc
test
dec
xor
dec
or
add
push
sub
push
test
inc
or
add
lahf
pushf
dec
add
fisubr
push
in
xor
adc
jg
out
mov
dec
outs
push
inc
mov
cmp
jecxz
out
jbe
clc
pushf
in
outs
sub
sahf
xchg
in
outs
add
sti
pop
mov
mov
mov
js
cmp
call
inc
jae
xor
fcom
imul
(bad)
lahf
xor
add
repnz
test
frstor
dec
xor
dec
xor
enter
mov
aad
sbb
(bad)
enter
sub
inc
(bad)
mov
dec
(bad)
adc
mov
sahf
xor
add
pop
imul
cmps
sub
cld
push
ins
into
jns
xchg
ins
data16
mov
jecxz
das
push
mov
sbb
pop
call
dec
pop
jo
jae
mov
out
sahf
daa
mov
xor
xlat
and
sar
ss
ror
or
pop
shr
enter
cmp
xchg
add
arpl
repnz
inc
pop
add
(bad)
sub
jg
movs
dec
scas
ret
cmp
xchg
scas
jmp
cmp
(bad)
mov
xchg
ror
mov
clc
and
neg
and
dec
mov
jg
xchg
sbb
js
inc
jmp
sbb
cld
dec
out
cmp
ror
inc
outs
add
xchg
push
aaa
fisttp
mov
enter
pusha
call
es
adc
inc
add
test
mov
movs
neg
call
sar
repnz
fld
push
cwde
jge
sub
int3
test
adc
arpl
shl
clc
(bad)
leave
inc
push
cmps
push
fdivr
dec
repnz
add
or
cmp
sbb
add
jbe
test
call
mov
adc
out
mov
push
cwde
mov
lock
sub
mov
ror
pop
push
out
scas
in
retf
or
cmp
cmp
mov
pushf
jg
mov
adc
inc
sbb
ja
xchg
cld
fidivr
je
test
mov
pop
mov
and
retf
push
int3
fidivr
sti
cmps
mov
pop
and
paddusw
jl
pop
cdq
ins
addr16
pop
xor
xor
jp
mov
jmp
test
push
stc
and
jp
sub
xchg
inc
pop
sbb
mov
loopne
sar
aad
(bad)
mov
mov
rcr
fwait
mov
rol
out
xchg
sahf
cmps
jge
test
mov
dec
mov
dec
cmp
jle
test
xor
shr
outs
cli
sbb
je
scas
cld
cmp
lods
faddp
icebp
jnp
mov
ret
inc
stos
dec
pop
push
mov
push
mov
jmp
sbb
jmp
pop
rol
pusha
mov
push
in
lods
sbb
pop
pop
in
pop
lods
test
repnz
ret
xor
mov
popa
std
scas
or
push
clc
iret
ins
std
cmp
xchg
neg
divps
scas
pop
loopne
int3
outs
(bad)
push
lock
and
scas
in
mov
pop
add
lds
and
and
(bad)
sbb
mov
repz
fisttp
mov
dec
addr16
jns
add
out
idiv
or
sbb
mov
div
xchg
xlat
push
xor
pop
xchg
cmc
pop
mov
mov
clc
scas
retf
cld
xor
das
js
dec
das
cmp
outs
clc
cmp
mov
stc
std
mov
cmp
dec
scas
cli
aas
enter
or
jg
stos
mov
jle
sub
cmp
stos
mov
mov
dec
stos
mov
cld
call
std
mov
mov
dec
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
push
int3
mov
cs
stos
js
mov
mov
iret
out
mov
mov
retf
cld
retf
std
or
mov
mov
retf
cld
retf
cld
retf
dec
retf
cld
dec
scas
cmp
into
scas
mov
in
scas
clc
cmp
scas
clc
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
jmp
popf
fdivr
clc
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
lock
mov
clc
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
mov
outs
(bad)
add
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
(bad)
daa
pop
(bad)
int
test
cld
mov
clc
mov
retf
cld
retf
std
mov
cld
(bad)
cs
movs
jne
clc
mov
cmp
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
ficom
mov
fiadd
push
cmps
sahf
xchg
pop
fadd
cmc
das
cmp
and
add
out
mov
mov
and
dec
dec
shr
pop
loop
std
std
addr16
xchg
int3
jb
daa
scas
xor
jmp
mov
cli
pop
pavgw
push
fstp
sbb
iret
mov
inc
(bad)
and
pushf
daa
mov
cmp
xor
test
arpl
shr
pop
loop
std
std
addr16
xchg
int3
jb
daa
scas
xor
jmp
mov
cli
pop
pavgw
push
fstp
sbb
iret
mov
inc
(bad)
and
pushf
daa
mov
cmp
xor
test
arpl
shr
jo
add
lea
cmp
scas
clc
mov
retf
cld
into
jmp
jne
clc
ds
mov
sub
dec
std
shr
fdiv
stos
jp
into
mov
cwde
test
cli
popf
iret
sub
xchg
in
push
iret
cmp
lods
sbb
movs
cld
jmp
shr
stos
xlat
jns
enter
shr
fdiv
stos
jp
into
mov
cwde
test
cli
popf
iret
sub
xchg
in
push
iret
cmp
lods
sbb
movs
cld
jmp
shr
stos
xlat
jns
enter
shr
fdiv
sbb
and
loopne
and
jbe
jp
std
push
mov
cmp
fnstsw
(bad)
fincstp
xor
pop
cmp
iret
ret
xchg
fld
cmp
stos
xchg
push
jmp
mov
pop
lods
outs
sub
std
push
mov
cmp
fnstsw
(bad)
fincstp
xor
pop
cmp
iret
ret
xchg
fld
cmp
stos
xchg
push
jmp
mov
pop
lods
outs
sub
std
push
mov
cmp
sbb
xchg
pop
jae
sahf
cmp
into
das
js
mov
clc
mov
mov
cld
into
jmp
adc
into
cld
mov
mov
cmps
pushf
test
movs
gs
mov
jle
adc
add
imul
push
loope
xor
scas
enter
ja
outs
pop
ret
push
and
mov
(bad)
mov
(bad)
xor
cmps
enter
and
popa
rol
nop
mov
pushf
fwait
push
lods
imul
loope
mov
jle
adc
add
imul
push
loope
xor
scas
enter
ja
outs
pop
ret
push
and
mov
(bad)
mov
(bad)
xor
cmps
enter
and
popa
rol
nop
mov
pushf
fwait
push
lods
imul
loope
mov
jle
adc
add
imul
push
pusha
pop
cmp
mov
es
add
cmp
lds
adc
sbb
sbb
and
ds
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
inc
data16
add
xor
sub
pop
and
dec
retf
cld
mov
stc
jl
out
mov
cld
retf
cld
retf
outs
mov
or
shl
xchg
loopne
cdq
clc
mov
test
mov
lock
bound
push
or
daa
stc
pop
dec
(bad)
sbb
pop
daa
movs
xchg
and
mov
jge
and
pop
jle
dec
push
outs
retf
sub
aad
shr
inc
fld
dec
push
add
push
sbb
mov
dec
adc
jmp
and
push
dec
je
scas
js
push
sub
jge
pop
fpatan
mov
xchg
rol
adc
sub
test
sbb
pop
dec
(bad)
sbb
pop
daa
movs
xchg
and
mov
jge
and
pop
jle
dec
push
outs
retf
sub
aad
shr
inc
fld
dec
push
add
push
sbb
mov
dec
adc
jmp
and
push
dec
je
scas
js
push
sub
jge
pop
fpatan
mov
xchg
rol
adc
sub
test
sbb
pop
dec
(bad)
sbb
pop
daa
movs
xchg
and
mov
jge
and
pop
mov
outs
mov
xchg
push
add
inc
sub
aaa
sbb
nop
and
mov
xor
and
adc
inc
aad
ds
imul
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
lea
mov
push
or
dec
mov
sub
jecxz
nop
cmp
cmc
sahf
clc
cmp
outs
mov
mov
retf
cld
retf
ror
inc
retf
mov
hlt
(bad)
pushf
out
cmp
sbb
in
movs
pop
out
cmp
imul
adc
(bad)
out
ja
jbe
mov
stos
dec
cdq
pop
ret
mov
or
xchg
jne
in
movs
pop
out
cmp
imul
adc
(bad)
out
ja
jbe
mov
stos
dec
cdq
pop
ret
mov
or
xchg
jne
in
movs
pop
out
cmp
imul
add
cdq
call
repz
std
cmp
(bad)
fcmovnbe
fwait
xchg
je
ss
mov
cmp
cmc
cmps
cmp
mov
or
or
(bad)
hlt
push
push
xchg
pop
pop
jno
pop
push
in
or
cmps
cmp
mov
or
or
(bad)
hlt
push
push
xchg
pop
pop
jno
pop
push
in
or
cmps
cld
pop
daa
cmp
cmps
arpl
out
clc
cld
retf
jl
scas
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
mov
cmc
scas
mov
pushf
scas
inc
retf
jmp
es
scas
inc
retf
jmp
es
scas
inc
retf
jmp
es
scas
inc
retf
jmp
retf
jmp
es
scas
inc
retf
jmp
es
scas
inc
retf
sub
cmc
sahf
cmp
into
das
cmp
scas
clc
mov
retf
in
(bad)
mov
adc
cld
mov
cld
or
pop
pushf
inc
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
addr16
mov
mov
inc
jg
adc
fwait
jb
inc
sbb
rcl
xor
xor
dec
mov
ds
je
pop
mov
xor
xor
dec
mov
ds
je
pop
mov
xor
xor
dec
mov
ds
je
pop
mov
xor
xor
dec
mov
ds
je
pop
mov
xor
xor
dec
mov
ds
je
pop
mov
xor
xor
dec
mov
ds
je
pop
mov
xor
xor
dec
mov
ds
je
pop
mov
xor
xor
dec
mov
ds
je
pop
mov
xor
xor
dec
mov
ds
je
pop
mov
xor
xor
nop
leave
cmp
stos
cmp
mov
mov
retf
cld
mov
test
fdivp
nop
nop
push
adc
mov
or
shl
scas
movs
sti
clc
popa
dec
popf
ss
jmp
sahf
scas
movs
sti
clc
popa
dec
popf
ss
jmp
sahf
scas
movs
sti
clc
popa
dec
popf
ss
jmp
sahf
scas
movs
sti
clc
popa
dec
popf
ss
jmp
sahf
scas
movs
sti
clc
popa
dec
popf
ss
jmp
sahf
scas
movs
sti
clc
popa
dec
popf
ss
jmp
sahf
scas
movs
sti
clc
popa
dec
popf
ss
jmp
sahf
scas
movs
sti
clc
popa
dec
popf
ss
jmp
sahf
scas
movs
sti
clc
popa
dec
popf
ss
jmp
sahf
xor
pop
inc
das
mov
fcom
fwait
adc
push
nop
out
popf
inc
ss
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
inc
movs
ja
lds
aam
push
enter
leave
cmp
jmp
jl
out
mov
cld
retf
cld
retf
clc
cmp
cld
mov
clc
cld
or
sub
cmp
pop
cmps
shl
push
sub
add
adc
push
and
push
or
inc
xor
sub
add
adc
push
and
push
or
inc
xor
sub
movs
cld
lods
cmp
jmp
jae
mov
sub
ds
call
pop
pop
mov
add
repz
xchg
push
or
clc
push
pusha
xor
mov
add
repz
xchg
push
or
clc
push
pusha
xor
mov
test
enter
cmp
push
xor
jl
fwait
cmp
clc
mov
or
cld
fisubr
cmp
das
js
or
cmp
outs
clc
std
retf
in
mov
dec
cs
ds
lods
sti
dec
cmp
dec
sub
mov
or
cld
stc
(bad)
or
cld
stc
iret
push
mov
(bad)
cmp
retf
out
stc
std
mov
mov
mov
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
cmp
jle
test
cmp
jmp
jl
outs
(bad)
(bad)
retf
cld
mov
mov
mov
retf
cld
mov
clc
jle
sahf
mov
mov
retf
cld
retf
cld
retf
cld
retf
add
scas
cmp
clc
mov
dec
xchg
sar
scas
clc
cld
retf
cld
retf
cld
retf
in
pop
push
pop
stos
pop
aad
dec
xchg
mov
clc
cmp
stos
xor
mov
and
ja
movs
and
pop
in
call
adc
push
fdivr
xchg
adc
cli
mov
mov
xchg
gs
dec
mov
ds
xor
fs
xor
push
jp
sbb
adc
neg
xchg
dec
in
retf
out
neg
add
and
ss
movs
outs
or
ret
es
sub
push
mul
push
test
jle
outs
dec
bound
mov
addr16
sbb
xchg
gs
push
cmp
outs
inc
out
cmp
xchg
int3
iret
outs
stos
rcr
call
leave
push
jmp
std
es
and
loop
aad
mov
jecxz
ins
int
sub
mov
stos
dec
or
inc
mov
dec
inc
pop
mov
jge
(bad)
pushf
inc
mov
in
mov
cs
jp
mov
sbb
jecxz
outs
jnp
pop
push
fcmovne
pop
pop
sbb
mov
push
or
mov
push
daa
pop
cmp
mov
inc
mov
jecxz
mov
inc
es
nop
push
push
sbb
cmp
add
inc
push
dec
(bad)
shl
add
jge
sbb
in
retf
ficomp
add
sahf
xor
add
sbb
xchg
stc
bound
sub
cmps
xor
clc
cld
(bad)
imul
xorps
push
sub
jl
cmc
fcos
aad
adc
(bad)
pushf
retf
hlt
dec
jns
xor
add
shl
push
inc
xor
clc
cld
retf
enter
mov
(bad)
xor
xlat
iret
aas
xchg
clc
mov
jnp
(bad)
test
arpl
(bad)
fld
scas
clc
cld
mov
and
mov
and
jl
scas
clc
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
or
mov
cld
or
cmp
retf
cld
retf
jl
sub
ret
stc
(bad)
jmp
dec
push
xor
mov
mov
mov
test
imul
adc
pop
jecxz
hlt
in
pop
int
pop
ss
(bad)
xor
sti
loopne
xchg
inc
adc
pushf
dec
mov
fimul
push
dec
push
hlt
shr
scas
adc
test
fs
fidiv
dec
retf
adc
add
dec
xchg
and
mov
push
lods
mov
and
push
imul
in
ss
dec
mov
inc
mov
dec
enter
dec
test
lea
inc
iret
pop
nop
mov
push
addr16
shl
add
and
je
mov
or
sti
rcr
lea
pop
push
push
pushf
fimul
or
mov
out
dec
cld
mov
pop
jl
shr
cli
stos
nop
ja
push
and
test
rcr
sti
mov
and
fsubr
dec
mov
inc
aas
test
inc
hlt
push
fcomp
adc
sbb
enter
cmp
mov
(bad)
retf
xchg
push
(bad)
mov
repnz
pop
mov
push
cmp
inc
loopne
popa
add
jnp
pop
psubsw
rcl
mov
pop
mov
retf
jl
add
xchg
enter
int3
(bad)
(bad)
out
into
dec
add
push
push
sahf
mov
push
lea
movs
xor
enter
stos
cmp
jb
xchg
pop
jmp
cli
adc
or
push
loopne
je
sahf
mov
adc
scas
stos
push
fcomip
cld
add
add
into
push
ret
test
(bad)
adc
arpl
add
sbb
hlt
and
mov
and
(bad)
bswap
sub
ins
add
inc
aas
push
das
test
add
mov
mov
push
adc
push
stos
mov
xor
mov
dec
add
mov
push
mov
and
sbb
xor
jo
call
xchg
sub
inc
mov
mov
inc
pop
in
cs
leave
xchg
jg
xchg
and
adc
data16
pop
mov
sbb
cmp
xor
clc
jne
jno
push
into
jle
cmp
movs
add
and
sbb
repnz
popa
sub
addr16
cmps
pop
shl
sbb
enter
stos
ret
push
and
sbb
ret
jnp
or
push
rcl
cmp
dec
push
or
push
xor
sti
scas
mov
mov
cld
retf
jge
scas
clc
cmp
scas
clc
cld
retf
mov
ret
jo
outs
cld
lods
pop
mov
mov
mov
or
js
cmps
xor
or
mov
mov
clc
mov
xor
inc
mov
ret
call
scas
xchg
cmp
ja
mov
dec
inc
std
inc
ins
mov
dec
push
cs
scas
aaa
xor
pop
fs
push
cwde
retf
popf
cwde
outs
xchg
xor
push
pop
xor
cdq
inc
cmp
ret
pushf
dec
lahf
loope
add
sar
shl
sub
popa
jge
inc
fisttp
mov
test
push
scas
test
inc
push
push
outs
popa
rol
ins
xor
aad
mov
pop
xchg
in
rcr
lods
pop
push
mov
hlt
call
clc
icebp
mov
mov
xchg
scas
call
outs
in
mov
test
pop
dec
lea
sti
xchg
mov
pop
adc
xor
or
adc
cwde
lock
fistp
fdivrp
int3
push
xchg
or
or
add
xor
pop
mov
rol
push
mov
push
test
sub
fcomp
outs
(bad)
daa
cmp
jle
cmp
mov
mov
pop
cmps
aas
rol
dec
push
mov
iret
lds
cld
pop
jg
xor
adc
outs
cmps
push
das
xor
cli
addr16
mov
jl
in
mov
pop
loope
mov
test
mov
xor
dec
test
cmp
push
pushf
ins
mov
in
sub
ds
test
in
sti
(bad)
cdq
mov
push
adc
(bad)
int
in
cld
mov
clc
jge
outs
clc
mov
retf
cld
dec
outs
mov
ins
push
sub
lock
lods
movs
dec
and
std
add
in
xchg
dec
inc
retf
js
mov
mov
jg
je
inc
cdq
neg
mov
mov
cdq
out
mov
ss
sub
ret
add
imul
pusha
nop
lods
lds
sub
inc
jge
cmp
cmc
fisubr
mov
jmp
ror
rcl
mov
lea
push
jns
scas
add
jbe
or
pop
and
test
retf
and
mov
mov
jbe
loope
mov
pop
movs
lock
xchg
pop
or
xor
xchg
dec
cmp
cmps
jne
and
xchg
lock
clc
mov
or
sub
sbb
gs
sub
mov
lods
(bad)
xlat
or
dec
jno
lahf
sub
mov
adc
pop
jo
mov
and
mov
cmps
mov
adc
nop
or
scas
jge
add
xchg
pushf
scas
popa
jge
jnp
arpl
test
hlt
fwait
mov
std
mov
cli
repz
gs
shr
sahf
aaa
pop
test
inc
adc
int3
rep
sbb
shr
test
data16
push
pop
out
mov
aas
sub
inc
outs
test
lods
aad
arpl
or
xchg
test
jnp
jae
es
inc
gs
out
fsub
ins
rcr
cdq
inc
push
pop
xchg
or
dec
out
cs
mov
cmp
or
aas
jmp
aaa
jp
add
addr16
xor
clc
dec
out
js
mov
stc
jl
scas
clc
cld
dec
outs
clc
mov
or
jo
pop
jmp
xchg
pushf
aam
mov
xor
aaa
mov
mov
(bad)
cmp
mov
pop
pop
aam
xchg
push
fild
cmp
xchg
mov
pop
mov
mov
scas
sub
cmp
sub
jno
scas
leave
loop
cmc
add
jnp
cmp
test
data16
stos
xor
dec
dec
sahf
aaa
fld
rcr
pop
es
jl
mov
jmp
mov
cwde
or
nop
stc
xor
mov
mov
xchg
fcom
dec
cmp
pop
jbe
std
lods
cmp
imul
mov
into
adc
sbb
dec
cs
mov
inc
(bad)
je
xor
inc
mov
in
lods
add
or
popf
int
ret
icebp
inc
call
bound
jg
sbb
or
sbb
jg
imul
nop
sbb
arpl
adc
jae
jmp
xchg
pop
mov
gs
and
adc
sti
or
ins
cmps
mul
mov
inc
sbb
jl
ds
rcr
imul
sub
and
xor
ins
mov
loop
cmp
xchg
pop
(bad)
dec
cdq
sbb
jno
out
lods
fbstp
xchg
jns
dec
ja
push
scas
adc
cmps
ret
in
add
sub
lahf
inc
int
push
xchg
xor
movs
repnz
lods
mov
fldcw
push
cwde
mov
jg
ins
adc
imul
packssdw
pop
addr16
sub
pop
popa
mov
inc
inc
sub
push
cwde
dec
lds
push
dec
adc
or
pushf
iret
stos
ins
adc
jmp
dec
mov
(bad)
je
xlat
aas
test
add
pushw
inc
sbb
sbb
add
out
(bad)
in
jbe
ret
adc
xchg
loope
push
cmp
cmp
out
pop
fwait
xor
xchg
retf
pop
(bad)
adc
leave
das
loope
push
stos
sahf
push
jbe
cmp
daa
aas
xchg
sbb
retf
aad
scas
inc
mov
mov
test
retf
neg
nop
jb
lea
xchg
mov
outs
jge
cmps
mov
mov
jmp
fwait
xchg
outs
fist
jmp
test
add
mov
pop
in
in
adc
xchg
inc
popf
fisub
adc
push
cmps
mov
dec
cmps
movs
mov
xlat
pop
retf
pop
cdq
(bad)
(bad)
sbb
pop
sbb
mov
mov
mov
loope
inc
cmp
fs
jp
or
dec
sbb
cmps
repz
fwait
pop
out
mov
(bad)
sub
rcr
les
pop
mov
daa
add
jne
stos
mul
addr16
jns
adc
out
xor
dec
push
and
icebp
xchg
pop
add
xchg
les
gs
dec
(bad)
mov
scas
repnz
hlt
sbb
sub
popf
fidiv
fcomp
xor
stc
pusha
repnz
rol
or
push
jae
mov
shl
jne
mov
mov
jo
jmp
in
loope
push
cdq
hlt
inc
scas
mov
jns
scas
loope
fcomp
adc
xchg
stc
in
pop
add
xchg
cmp
push
fdivrp
push
push
ror
and
fucom
and
popw
sti
fisubr
and
leave
int
dec
enter
sub
fild
jp
add
dec
int3
sbb
(bad)
or
nop
cmp
sete
ins
popf
cmps
loop
xlat
leave
jne
lods
pushf
mov
js
cmp
popf
or
cmps
xchg
pushf
inc
pop
call
retf
pop
or
add
adc
pop
out
gs
aas
pop
ret
push
mov
push
retf
sbb
(bad)
xor
in
jno
test
lds
f2xm1
cmp
mov
jae
lds
(bad)
pop
add
push
pushf
add
xchg
push
cmp
in
adc
pushf
pusha
sbb
lea
gs
mov
in
rcr
cmp
mov
and
popf
xchg
jl
inc
loop
mov
loopne
pop
push
in
adc
int3
in
xchg
sub
cmps
adc
add
mov
inc
rcr
push
ss
sub
pop
stc
xchg
shl
jecxz
and
pop
out
sub
test
and
bound
das
sbb
mov
mov
hlt
jb
push
imul
dec
push
or
mov
retf
cli
push
sub
mov
stc
aaa
push
shl
fnstsw
popa
out
push
in
out
mov
and
nop
leave
cmp
stos
js
mov
jl
outs
mov
mov
mov
mov
sahf
mul
sub
mov
repnz
test
fidiv
retf
mov
hlt
cmc
scas
shl
lea
mov
out
(bad)
fcomp
jl
sbb
dec
int3
into
es
xchg
repz
push
mov
ins
lods
sub
in
iret
sub
adc
popf
leave
ds
mov
cmc
mov
xor
mov
bound
push
sar
mov
push
js
sub
nop
retf
cmp
retf
stc
mov
lods
iret
inc
or
stos
and
jnp
fmul
movs
sti
iret
cs
xchg
fmul
scas
js
sub
jp
ins
and
jecxz
dec
xchg
or
std
add
dec
adc
jge
inc
push
les
xchg
out
rol
mov
jb
or
push
in
aam
mov
out
sbb
mov
maxps
pop
shl
push
dec
pop
inc
not
repz
mov
mov
mov
pop
retf
iret
xor
pop
rcl
into
jecxz
mov
add
sub
mov
fld
mov
inc
daa
or
call
mov
je
mov
je
sub
pop
push
inc
push
movs
bnd
xlat
aad
xchg
mov
xchg
out
mov
les
mov
dec
jbe
shl
je
(bad)
mov
jmp
jnp
in
add
hlt
dec
adc
mov
and
int3
push
inc
fdivr
mov
pop
sub
jmp
push
sbb
imul
in
mov
data16
mov
pop
push
out
cmp
ret
and
mov
scas
dec
xchg
std
std
call
mov
jmp
shl
dec
sar
xor
cmps
lea
aam
enter
call
or
and
cmp
push
cmp
push
mov
cli
push
lahf
sub
ret
loop
retf
cmps
inc
imul
adc
jecxz
test
das
(bad)
jmp
aad
mov
out
shl
std
xchg
fsubr
and
push
scas
rcl
xchg
popf
cli
retf
lea
rcr
jle
inc
stc
pop
cmp
in
test
mov
in
dec
push
aam
scas
icebp
in
mov
scas
outs
sti
cmps
mov
das
jmp
cmp
pop
into
imul
push
in
inc
dec
pop
sbb
xchg
cld
cmp
dec
out
pusha
jnp
sbb
xor
sti
imul
xchg
in
mov
lods
xchg
dec
mov
clc
mov
fisttp
pop
mov
in
movs
call
movs
dec
mov
jo
cmp
inc
mov
in
sub
movs
add
ror
inc
pop
ins
xchg
jmp
mov
leave
cmp
les
ds
data16
aam
js
push
cmps
jne
repz
adc
cmp
sbb
test
jbe
data16
enter
pop
sbb
mov
mov
out
lods
inc
push
add
(bad)
clc
int3
int3
sbb
lods
cmp
ret
lods
pop
pop
test
cmps
and
inc
rol
push
inc
and
out
cmp
iret
clc
mov
icebp
inc
cmps
adc
clc
xor
pop
outs
inc
scas
jecxz
and
dec
enter
ss
or
xchg
push
dec
mov
aam
or
xor
mov
out
jnp
clc
mov
call
rol
movs
retf
jae
(bad)
cld
les
(bad)
ss
adc
imul
lods
bound
xlat
mov
mov
mov
xchg
inc
test
dec
scas
jge
outs
xchg
xor
cmp
cld
mov
popf
ins
out
dec
fcom
jmp
(bad)
test
ficom
adc
or
fdivr
pop
mov
or
or
jmp
push
sub
mov
jl
je
jb
dec
cs
pop
mov
jmp
xor
iret
leave
push
sti
ds
pop
clc
cmp
loope
inc
(bad)
(bad)
jl
cld
jmp
repz
or
mov
(bad)
mov
cmps
push
scas
xchg
fistp
addr16
(bad)
in
cld
nop
sbb
add
ss
fs
and
mov
add
jne
clc
aas
mov
clc
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
mov
(bad)
retf
cld
(bad)
scas
cmp
imul
sbb
neg
mov
scas
fnsave
jle
mov
out
xchg
xor
clc
cmp
ins
push
stos
repnz
clc
cs
mov
ins
ficomp
out
ror
js
es
cwde
bswap
scas
clc
std
adc
out
or
scas
clc
mov
shr
hlt
jne
scas
clc
cld
dec
cld
aas
in
scas
clc
cld
retf
cli
leave
(bad)
clc
mov
cld
cmps
clc
mov
fsubr
clc
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
push
sahf
mov
mov
dec
outs
clc
cld
retf
cld
mov
test
sahf
mov
mov
mov
lods
cmps
fist
ret
cld
scas
mov
xor
nop
clc
test
push
jne
clc
imul
imul
enter
xchg
psrlq
stc
mov
sub
pop
(bad)
sbb
push
outs
mov
out
dec
lahf
push
out
cld
and
pop
fstp
adc
inc
or
dec
sub
sbb
cli
add
sub
pop
mov
loope
(bad)
jae
sub
movs
ficomp
cmp
mov
adc
mov
stos
inc
shr
mov
lods
pop
pop
xchg
hlt
(bad)
lea
aaa
xlat
cwde
xchg
ins
xor
or
pop
mov
cmp
inc
push
add
adc
xchg
fiadd
mov
sub
mov
jbe
jmp
jecxz
add
xchg
ins
push
int3
pop
test
js
xchg
scas
inc
sar
mov
mov
cmp
mov
pop
and
aad
pusha
icebp
lods
std
and
jp
push
fisttp
xor
cmp
sub
jp
lods
(bad)
mov
fs
pop
mov
int
outs
push
sbb
xchg
fcom
push
and
jnp
jecxz
loopne
(bad)
rcr
dec
lds
or
stc
push
cli
cdq
adc
sub
push
pop
jb
movs
inc
inc
add
aad
jbe
ror
sti
or
mov
call
mov
mov
inc
es
inc
pop
(bad)
xchg
push
inc
xchg
mov
out
rsqrtps
imul
pop
lods
cmps
xor
mov
ja
clc
adc
out
mov
fidivr
movs
or
pop
push
and
mov
in
call
rcl
in
jae
cmp
xchg
adc
int
bound
cmps
ror
ins
jp
sub
push
jb
jecxz
inc
(bad)
lea
mov
cld
or
mov
retf
cld
mov
mov
xchg
lods
in
repz
cmps
(bad)
test
push
inc
retf
js
mov
mov
arpl
sahf
call
mov
xchg
fstp
jnp
cmps
aad
pop
xor
je
jns
push
or
push
out
or
inc
retf
loope
xor
arpl
push
pop
scas
das
cmp
or
jbe
ret
jb
in
mov
int
jmp
fsubr
and
and
cmp
call
pusha
adc
or
mov
xor
popa
mov
hlt
(bad)
sub
out
jne
adc
repnz
cmp
or
arpl
into
inc
arpl
call
retf
aas
rcl
jns
fidiv
add
jmp
test
cli
lock
fucomp
pushf
imul
dec
mov
and
inc
dec
sub
out
bound
xor
mov
(bad)
or
xchg
cmp
mov
(bad)
push
cmp
or
mov
loopne
lds
inc
outs
arpl
shr
jmp
add
mov
out
in
out
iret
pop
add
jle
push
imul
ret
adc
xlat
push
sub
cwde
enter
mov
stos
sti
xor
lods
stos
xor
sbb
es
js
sahf
int
xor
hlt
cli
sbb
inc
mov
mov
jp
not
inc
les
xchg
xchg
cmps
mov
movs
sbb
sbb
cmps
cmp
jo
push
cmp
rcr
ins
sub
pop
repnz
(bad)
ds
les
adc
test
jge
pushf
les
fiadd
pop
jbe
shr
daa
add
xor
add
pop
or
int3
and
add
xchg
rol
out
sbb
jl
push
js
push
iret
jp
ja
out
dec
sub
leave
mov
dec
das
mov
cmp
scas
clc
mov
ret
lods
sahf
mul
xchg
mov
repnz
test
fidiv
retf
mov
clc
cmc
out
lea
mov
add
call
and
jp
xor
xchg
inc
cs
pushf
mov
cmp
or
dec
jmp
mov
not
shl
cmp
mov
jo
lock
ins
outs
in
mov
xchg
xlat
imul
or
xor
cmp
mov
movs
out
sbb
fs
aaa
retf
xchg
std
push
xor
lods
cmp
dec
mov
daa
add
out
ret
clc
sub
jmp
xor
jle
gs
cmps
imul
sub
aad
pop
xor
mov
sbb
sar
xchg
xor
(bad)
fwait
inc
mov
bound
jns
(bad)
mov
cmps
in
les
sbb
sti
fdecstp
dec
add
jb
mov
ficomp
push
mov
das
loopne
aam
xor
mov
retf
nop
mov
xchg
lds
push
out
je
xor
cmp
inc
scas
or
(bad)
test
push
in
lods
or
jne
adc
cld
add
cmp
dec
fmul
(bad)
xor
retf
cli
adc
dec
ret
and
clc
lahf
lock
mov
and
adc
pusha
pop
int3
ins
loop
cmc
lock
mov
dec
int3
mov
jge
jmp
lods
xor
push
xchg
fstp
sub
cmp
lea
or
and
mov
inc
pop
in
pop
(bad)
jl
fistp
outs
jmp
fdiv
mov
add
mov
adc
cmp
jmp
(bad)
fwait
int3
sub
adc
outs
aaa
out
in
loopne
jg
aas
sar
mov
jmp
sub
imul
xchg
adc
lea
sbb
mov
jg
data16
cdq
or
jne
cmp
xor
push
or
and
cdq
cli
push
mov
test
pushf
mov
inc
aam
or
js
and
std
cmp
sub
(bad)
mov
call
enter
mov
outs
sbb
daa
popf
(bad)
mov
test
and
loopne
in
jmp
in
jle
out
mov
stos
js
jae
scas
xor
sti
xor
aaa
push
xor
mov
sub
js
enter
xchg
adc
mov
pop
stc
dec
in
scas
std
js
jmp
dec
push
fidivr
test
fild
xchg
mov
dec
clc
xchg
sub
imul
dec
mov
scas
cs
cwde
jl
cmp
jae
mov
cmc
push
mov
test
test
dec
add
sar
jmp
daa
and
push
jae
pop
dec
jnp
inc
ds
or
fwait
in
test
or
add
movs
cld
cs
push
shl
add
sbb
mov
ret
lahf
loope
ins
jmp
cli
hlt
int3
jge
call
sbb
pop
iret
mov
jb
hlt
ins
dec
xchg
outs
fdivr
(bad)
js
lods
stos
outs
mov
retf
mov
sbb
out
fistp
add
jbe
daa
pop
mov
out
push
int3
out
clc
ret
daa
jb
cmp
std
adc
adc
stos
pop
jmp
shl
cli
into
stos
jb
push
call
cmps
jmp
out
and
mov
pusha
ret
lea
mov
push
xchg
ins
mov
sbb
dec
add
ret
mov
stc
sbb
jl
push
ret
(bad)
(bad)
std
jmp
mov
adc
pop
in
pop
shr
pop
mov
cmc
scas
(bad)
leave
pop
idiv
dec
fdiv
out
stc
test
jp
cmp
cwde
dec
out
mov
jle
div
into
mov
cld
push
xchg
xor
dec
mov
test
jecxz
ins
jmp
mov
aam
stos
hlt
fsub
loope
mov
xor
imul
inc
into
mov
xchg
sbb
scas
rcl
data16
mov
out
pop
sub
jle
mov
fild
sub
pushf
mov
jne
imul
ror
out
jnp
test
mov
clc
add
pushf
and
iret
push
shr
xchg
in
cmp
fisubr
test
test
test
mov
mov
out
repnz
sbb
test
sub
je
xor
jmp
jbe
movs
ins
and
mov
sub
dec
bound
lods
ret
add
daa
mov
mov
adc
sbb
stos
push
xor
cli
xchg
adc
ror
popf
rcl
jo
and
fistp
push
bswap
or
mov
fist
add
push
movs
clc
or
jl
js
dec
out
gs
adc
sti
jle
mov
and
pop
xchg
jno
mov
ret
pop
dec
in
fwait
fwait
loop
add
add
leave
inc
pop
dec
mov
shl
xor
pop
ror
test
pusha
div
mov
cmp
adc
lds
out
push
call
pop
jle
adc
in
cmp
push
jecxz
ds
fwait
mov
fs
dec
lock
push
into
aad
fwait
pusha
xchg
inc
mov
popa
jo
xor
mov
sbb
int3
mov
mov
add
cmp
mov
(bad)
(bad)
push
jg
mov
dec
jo
mov
cli
xor
mov
sub
mov
(bad)
cmp
cli
and
and
movs
iret
xor
mov
dec
and
cmp
jg
in
bound
sti
jge
sbb
push
adc
mov
pop
loope
aas
dec
fist
dec
sbb
sar
(bad)
out
jl
jmp
jmp
mov
lods
div
imul
mov
cmp
js
retf
loop
test
test
lahf
mov
xchg
out
mov
xor
jno
mov
bound
jns
aas
inc
lock
enter
add
retf
mov
sti
fiadd
mov
retf
shr
push
cmp
ss
out
outs
adc
mov
and
push
mov
fsubr
cmc
mov
je
stos
int
mov
adc
in
sub
mov
fistp
call
push
retf
and
iret
sub
mov
lock
and
cmps
pop
pusha
(bad)
(bad)
call
popf
ja
mov
loopne
push
popa
loopne
add
xor
pop
cmp
out
inc
pop
in
bound
or
xor
xchg
jns
sub
adc
fwait
aam
outs
xor
icebp
sbb
xor
stc
and
shr
pop
(bad)
sub
pop
jns
sub
imul
nop
push
dec
rol
xchg
cmp
mov
or
movs
popa
cli
add
push
test
ds
sub
cli
cld
nop
cmp
jae
cmc
mov
push
push
or
adc
xlat
ret
push
aad
dec
jecxz
imul
aam
ret
je
daa
icebp
or
aam
add
clc
and
cmp
jnp
in
cmc
out
cmp
cmp
push
xor
jl
fwait
cmp
clc
mov
or
cld
fisubr
cmp
das
js
or
cmp
outs
clc
std
retf
in
mov
dec
cs
ds
lods
sti
dec
cmp
dec
sub
mov
or
cld
stc
(bad)
or
cld
stc
iret
push
mov
(bad)
cmp
retf
out
stc
std
mov
mov
mov
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
cmp
jle
movs
js
mov
cld
cmp
jmp
jl
outs
(bad)
lea
clc
cld
or
mov
cld
retf
cld
retf
std
or
(bad)
dec
dec
jmp
mov
mov
retf
cld
mov
mov
dec
retf
cld
dec
scas
cmp
into
scas
mov
aas
fdiv
lods
mov
xor
jecxz
mov
jbe
imul
adc
mov
shl
mov
addr16
jno
outs
jl
sbb
iret
jae
push
in
adc
bnd
cwde
sub
sti
outs
(bad)
clc
dec
das
mov
cld
retf
cld
retf
cld
retf
cmp
into
jmp
mov
xchg
xchg
mov
cwde
fmul
adc
lods
mov
push
sub
mov
nop
js
push
push
sub
cdq
daa
ds
movs
push
fild
cld
mov
pop
out
fisub
repz
xchg
xchg
mov
lahf
push
clc
addr16
and
add
and
and
bound
mov
xor
cdq
(bad)
adc
leave
mov
dec
scas
jns
or
clc
cld
retf
cld
retf
cmp
jmp
and
sub
xor
ds
mov
push
cmp
xchg
mov
test
fwait
xor
fcmovbe
xor
rcl
push
mov
dec
ins
dec
in
cmp
mov
js
xor
rcr
ret
mov
inc
mov
stc
mov
adc
dec
gs
sub
pop
bnd
arpl
ins
fldenv
mov
mov
pop
repnz
xchg
mov
scas
aas
div
dec
xchg
dec
mov
mov
js
fcomip
add
jg
vpabsb
sub
loope
sbb
in
cwde
ret
xlat
add
jg
es
jno
jo
add
outs
mov
mov
cld
retf
scas
mov
mov
dec
outs
mov
clc
and
sahf
xor
mov
mov
mov
adc
cdq
clc
ds
out
mov
movsx
lock
mov
cmp
add
pop
mov
ins
daa
sbb
xor
push
adc
in
push
stos
cmps
push
push
bound
mov
inc
aad
repnz
(bad)
pop
jge
push
pop
jl
and
cmp
in
mov
out
ss
push
clc
jae
mov
sub
cmp
or
test
sub
cmp
aaa
sar
fistp
or
push
outs
push
mov
pop
or
test
ficom
shl
jbe
int
dec
cmps
ss
adc
pop
add
imul
mov
mov
mov
lea
test
inc
das
lods
lds
dec
mov
mov
fmul
inc
loop
inc
retf
dec
dec
cs
js
jbe
popf
pop
test
(bad)
push
mov
xor
jne
gs
enter
or
push
les
jne
sbb
xchg
ret
xchg
mov
or
jmp
mov
sbb
inc
aad
xchg
cmp
movs
in
or
dec
or
(bad)
dec
das
dec
scas
dec
ja
fs
loop
xlat
ja
mov
push
sbb
leave
sub
mov
ja
sbb
jge
scas
sar
jne
xor
jge
pop
je
(bad)
cmps
mov
int3
dec
enter
test
(bad)
dec
retf
cld
mov
jl
outs
mov
cld
retf
cld
or
cmp
xchg
movs
pushf
push
daa
xor
sbb
int3
jne
test
mov
xchg
mov
dec
ret
xchg
cmp
mov
inc
dec
fist
mov
mov
das
and
shl
pop
jbe
inc
in
inc
loop
xor
add
icebp
sar
lea
inc
push
fs
mov
stos
pushf
sar
sbb
mov
push
dec
fbstp
jno
into
mov
push
pusha
xlat
adc
mov
mov
inc
lods
xchg
cmp
xor
xor
add
retf
arpl
xor
inc
push
hlt
enter
in
sub
add
sbb
pop
fs
lock
mov
fwait
or
xor
cmp
cmp
mov
jmp
mov
push
test
mov
pop
mov
sbb
jge
imul
push
or
or
lahf
iret
cmps
dec
je
jne
dec
push
bound
inc
cmp
pop
lahf
mov
in
outs
mov
(bad)
sub
imul
ror
xor
clc
jg
inc
lea
in
and
or
push
shl
mov
cmp
jmp
fist
dec
or
out
lock
mov
clc
mov
retf
cld
mov
lods
movs
(bad)
jmp
xchg
mov
in
mov
hlt
push
add
je
jp
mov
pop
inc
jae
ds
push
(bad)
hlt
imul
inc
das
mov
jnp
icebp
or
dec
xor
pop
scas
adc
lds
jp
cmp
in
sti
data16
sbb
out
fcomp
adc
jmp
adc
repnz
fdiv
ret
in
in
mov
ss
outs
push
push
jmp
iret
fdivr
push
je
sbb
mov
ficom
dec
sbb
xchg
fs
out
fsub
mov
mov
ja
out
cmp
test
mov
pusha
mov
push
aas
jne
and
adc
(bad)
add
mov
pop
adc
push
add
jl
or
ins
mov
cld
retf
clc
sbb
sub
movs
push
jb
aaa
push
xchg
cmc
sahf
mov
mov
mov
clc
cld
mov
mov
call
out
sbb
mov
cmp
into
lods
pushf
enter
not
and
add
adc
js
mov
enter
lds
pop
jge
ins
mov
or
sub
jo
dec
fadd
sub
leave
cmp
inc
fcomp
sub
push
scas
pop
lods
pop
push
int
sahf
push
push
pop
or
push
imul
movs
out
mov
mov
rol
(bad)
fiadd
and
out
(bad)
fstp
fst
inc
sbb
push
add
fldcw
(bad)
mov
cdq
mov
sbb
rol
jns
out
or
leave
sub
jg
int3
lea
in
or
bound
cmp
mov
cld
mov
clc
mov
retf
clc
mov
mov
sahf
ret
mov
test
clc
ds
out
mov
and
mov
cld
out
scas
ret
sbb
cmps
jp
inc
das
sub
add
adc
rol
(bad)
cmps
(bad)
movs
add
adc
fstp
push
pop
ja
pop
sbb
test
fucom
enter
and
dec
stos
adc
xor
ds
xchg
aad
push
into
sti
stos
jno
sete
out
fld
repnz
scas
mov
or
sub
add
je
call
outs
fidiv
push
fstp
test
idiv
sti
pop
mov
ret
mov
mov
in
lods
pop
mov
mov
test
jne
dec
je
pop
xor
mov
cmp
pop
sbb
push
adc
pop
ds
mov
test
int3
push
push
hlt
ficomp
aaa
cmp
repnz
inc
sti
scas
lock
mov
mov
cld
mov
clc
cld
mov
lock
scas
repz
xchg
ss
mov
or
stos
pop
mov
imul
jbe
cwde
std
pusha
stos
push
dec
jp
xchg
mov
push
movs
add
popf
sub
or
sub
arpl
add
rcl
mov
clc
pushf
fisttp
ds
pusha
mov
pop
and
je
mov
push
cmps
scas
out
adc
or
pop
push
cmp
inc
dec
call
lods
dec
or
cmps
sub
mov
fsubr
dec
jmp
jne
push
sar
out
mov
es
(bad)
jmp
sub
repnz
mov
cli
xor
gs
jnp
mov
lahf
fadd
push
mov
and
adc
pop
mov
dec
in
sbb
sub
adc
mov
clc
jno
add
jl
mov
data16
or
out
jbe
gs
sbb
frstor
add
xor
ret
cmp
push
xor
jl
fwait
cmp
clc
mov
or
cld
fisubr
cmp
das
js
or
cmp
outs
clc
std
retf
in
mov
dec
cs
ds
lods
sti
dec
cmp
dec
sub
mov
or
cld
stc
(bad)
or
cld
stc
iret
push
mov
(bad)
cmp
retf
out
stc
std
mov
mov
mov
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
cmp
jle
retf
clc
stc
mov
cld
cmp
jmp
jl
outs
(bad)
lea
test
mov
mov
retf
cld
mov
stc
dec
out
cmp
sti
outs
mov
mov
retf
cld
retf
cld
mov
cmp
mov
jge
cdq
clc
aas
mov
cld
cld
mov
push
rcr
pop
mov
xor
add
sub
or
jp
mov
stos
add
adc
retf
cld
retf
mov
jge
adc
into
push
dec
push
sbb
pushf
fsubr
inc
cmp
scas
clc
cld
retf
retf
(bad)
out
out
hlt
push
iret
rol
mov
jl
mov
into
sub
push
jns
leave
je
in
shl
sub
scas
clc
cld
retf
lds
or
outs
aam
retf
out
int
in
data16
or
push
sub
xchg
jl
scas
clc
cld
dec
call
xchg
sbb
fwait
repz
pop
out
pop
mov
jecxz
xchg
fisttp
sub
inc
sub
scas
clc
cld
retf
cld
push
fsubr
test
or
rcr
dec
or
das
inc
je
sbb
cdq
mov
fld
ds
xor
mov
jl
scas
clc
cld
mov
(bad)
mov
pop
out
aad
or
scas
outs
(bad)
mov
jg
cdq
mov
inc
adc
cmc
(bad)
fild
xchg
enter
clc
cld
mov
retf
movs
icebp
je
jmp
mov
xor
outs
dec
mov
inc
push
cmp
call
retf
retf
cmp
pop
js
sbb
cli
sbb
sub
fchs
repnz
popf
xor
push
xor
scas
clc
cld
retf
jecxz
dec
lds
mov
test
bound
cmp
xor
inc
sub
lds
scas
clc
cld
retf
leave
adc
scas
clc
cld
retf
cld
retf
cld
push
nop
mov
mov
retf
cld
retf
fisub
clc
cmp
scas
clc
cld
retf
cld
retf
retf
add
scas
clc
cld
retf
cld
retf
std
(bad)
jno
jmp
clc
cld
retf
cld
mov
cmp
scas
clc
cmp
scas
clc
cld
retf
cld
retf
(bad)
scas
clc
cld
retf
cld
retf
cld
or
fdivr
scas
clc
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
cmc
sahf
js
into
das
js
mov
mov
mov
retf
cld
dec
cs
jl
push
ins
pop
and
in
cdq
clc
mov
push
test
inc
cmps
test
lods
test
inc
stos
pop
test
cmps
xchg
mov
shl
inc
cs
ja
jbe
icebp
jnp
rol
aaa
cmc
stc
loope
ret
aaa
push
dec
jo
and
mov
fimul
pop
mov
cmp
add
sub
scas
jg
ror
add
inc
cmp
xlat
sub
sbb
cmp
fsub
and
call
mov
fsub
and
call
mov
fsub
and
inc
sbb
sub
push
into
xor
dec
jne
inc
cmp
xor
out
stos
loope
sbb
pop
arpl
lahf
mov
push
add
rcr
jo
inc
scas
mov
out
neg
iret
xchg
cld
dec
jle
push
lods
daa
mov
and
adc
sub
sar
arpl
shr
inc
loop
std
std
inc
into
(bad)
daa
push
jg
ror
xchg
jae
xchg
jmp
sbb
stc
jno
sbb
hlt
pop
data16
aas
mov
push
inc
es
xor
pop
cmp
xlat
xor
scas
xchg
lea
outs
fild
pushf
dec
pop
push
shl
sti
sbb
std
sbb
sbb
push
mov
hlt
inc
and
mov
dec
dec
loope
inc
or
push
dec
inc
xchg
gs
push
aas
sub
sti
mov
imul
xchg
xor
rcl
cmp
cld
scas
outs
mov
test
fcomp
bound
cdq
clc
sub
loope
int
ins
add
dec
jns
pusha
call
jmp
inc
and
(bad)
pop
lahf
loop
rcl
jns
sub
xlat
iret
inc
gs
hlt
mov
cmps
or
es
push
dec
cdq
out
loopne
push
fstp
test
stos
mov
jmp
xor
fstp
test
stos
mov
jmp
xor
fstp
inc
lods
xchg
idiv
mov
aam
aaa
arpl
ins
add
ret
cs
xchg
out
xchg
mov
push
and
adc
data16
mov
inc
ja
pshufw
mov
mov
mov
cwde
(bad)
xor
ficom
cmp
cmp
mov
dec
pop
call
repz
lods
test
or
xchg
fadd
inc
addr16
push
sbb
and
push
mov
inc
adc
nop
push
nop
mov
sbb
bound
push
div
sbb
adc
jg
daa
pop
dec
or
addr16
cmp
scas
jnp
dec
dec
add
clc
pop
movs
shl
xor
mov
and
(bad)
xchg
repz
dec
aam
jmp
jp
je
mov
inc
enter
xor
push
jl
mov
cdq
mov
xchg
nop
clc
mov
mov
lods
mov
neg
add
ds
in
shl
and
(bad)
loope
adc
jmp
in
shl
and
(bad)
loope
adc
jmp
in
shl
loope
sbb
into
in
stos
retf
fstp
fwait
cmp
inc
div
ja
mov
dec
cmp
std
aam
stos
lahf
adc
push
add
lds
gs
shr
jmp
fwait
pop
pop
push
or
push
cld
stos
mov
(bad)
div
dec
push
push
cdq
cld
mov
mov
mov
ins
dec
sub
pop
repz
mov
cmp
ds
shl
nop
nop
and
sti
fwait
dec
dec
or
sub
hlt
mov
xchg
inc
and
(bad)
sbb
cli
or
loopne
xchg
hlt
mov
mov
push
leave
dec
jl
ds
sbb
fwait
xchg
out
jne
imul
ins
in
jl
outs
test
mov
add
dec
pop
pusha
ficomp
repz
nop
jecxz
mov
inc
mov
ds
fisubr
cmp
mov
sahf
cmc
fidiv
mov
push
mov
and
mov
xchg
sti
mov
or
in
jl
outs
test
and
add
lods
je
pop
mov
add
dec
sbb
repz
xchg
xchg
inc
dec
xchg
fs
dec
mov
push
into
imul
and
sbb
xchg
aaa
sbb
xor
and
jno
cmps
xchg
jns
push
add
push
add
ins
in
add
or
jbe
push
adc
ins
in
add
or
jbe
push
adc
ins
in
add
or
jbe
push
adc
ins
in
add
or
jbe
push
adc
ins
in
add
or
xor
(bad)
fidivr
mov
daa
mov
xor
xchg
pop
dec
push
sub
and
jl
(bad)
test
mov
psubb
and
hlt
mov
mov
push
leave
add
cli
cmp
fwait
add
add
mov
sahf
(bad)
fidivr
outs
(bad)
or
retf
std
retf
out
cmp
scas
clc
cld
retf
mov
mov
lods
enter
fs
jecxz
mov
cmps
mov
sahf
mov
ret
cld
scas
mov
xor
popa
xchg
sbb
stos
pop
adc
pop
add
cmps
jmp
mov
mov
movs
sbb
div
das
test
sahf
gs
cwde
jne
sub
adc
pop
fcom
inc
mov
push
jg
data16
int
sub
xor
cmps
sub
mov
xchg
je
(bad)
push
mov
xor
push
jnp
add
in
(bad)
sbb
neg
mov
push
shl
mov
jmp
mov
sbb
or
cdq
lea
pop
pusha
into
xchg
ret
loope
jl
fsubp
fdivr
push
sti
dec
dec
movs
mov
sbb
ficom
inc
jle
sahf
ins
call
frstor
nop
in
hlt
cs
inc
arpl
clc
shl
pushf
ss
test
out
or
ins
mov
hlt
or
push
std
mov
stos
jmp
mov
xchg
mov
push
mov
xlat
and
mov
(bad)
xchg
fisubr
lods
dec
and
sub
push
call
xlat
lods
ss
mov
sub
push
mov
call
jne
popa
fldcw
mov
ret
add
hlt
lods
mov
lods
cmc
add
mov
mov
lock
sub
dec
pusha
or
repz
fwait
repnz
call
stos
in
imul
aas
add
pushf
in
dec
pop
jg
xchg
mov
pop
(bad)
mul
lods
jne
test
mov
push
pop
adc
les
or
xchg
test
pop
test
add
mov
mov
and
xor
repnz
loopne
ins
inc
pop
or
inc
movs
jnp
adc
ficom
ss
lods
xor
dec
jae
xchg
mov
ins
push
neg
push
xchg
cli
xchg
cld
push
dec
jmp
xor
js
push
pushf
dec
mov
mov
repnz
imul
xchg
dec
in
inc
into
pushf
cmp
ror
das
mov
jne
mov
aas
sbb
mov
mov
icebp
retf
icebp
pop
mov
lea
xchg
cmp
bound
dec
jmp
(bad)
scas
xor
in
sar
mov
stos
(bad)
mov
mov
xchg
jnp
imul
mov
loopne
inc
pop
clc
test
and
cmp
aam
lea
movs
xor
jo
sti
pop
movs
sub
sub
jl
sub
dec
ret
repnz
adc
adc
into
mov
jl
test
or
jmp
call
aaa
cld
cmps
movs
ret
arpl
jbe
or
aad
sar
xor
leave
dec
xchg
(bad)
aaa
pop
jmp
mov
bound
push
adc
dec
setge
push
sub
rcl
enter
das
mov
dec
sub
mov
scas
lahf
adc
mov
dec
stc
loope
xchg
in
fsqrt
xlat
push
xchg
sbb
xor
pushf
mov
bound
push
adc
dec
setge
push
sub
rcl
enter
das
mov
dec
sub
mov
scas
lahf
adc
mov
dec
stc
loope
xchg
in
fsqrt
xlat
push
xchg
sbb
xor
pushf
mov
bound
push
adc
retf
or
push
ret
setg
stc
cli
nop
cmp
ret
setg
stc
cli
nop
cmp
ret
setg
stc
cli
nop
cmp
ret
setg
stc
cli
nop
cmp
ret
setg
stc
cli
nop
cmp
ret
setg
stc
cli
nop
cmp
ret
setg
stc
cli
nop
cmp
ret
setg
stc
cli
nop
cmp
ret
divps
sahf
test
cs
repnz
cmc
inc
cdq
leave
cdq
cmp
jmp
sahf
sbb
cmp
out
mov
dec
or
push
sti
call
cmp
nop
and
lea
pop
(bad)
clc
sahf
test
cs
repnz
cmc
inc
cdq
leave
cdq
cmp
jmp
sahf
sbb
cmp
out
mov
dec
or
push
sti
call
cmp
nop
and
lea
pop
(bad)
clc
sahf
test
cs
repnz
cmc
lds
es
pop
xchg
sub
mov
cmps
sub
sbb
jg
inc
mov
push
call
(bad)
(bad)
ja
ja
dec
loop
cmc
pop
cmp
mov
push
ror
xchg
mov
mov
push
mov
das
sbb
les
push
ds
in
mov
mov
and
pop
xchg
sub
jbe
mov
inc
out
pop
xchg
stc
repz
mov
or
mov
mov
fmul
loope
daa
call
jmp
push
fnstenv
ins
xor
gs
cmp
(bad)
fbld
daa
dec
adc
dec
mov
xchg
out
(bad)
jle
pop
mov
push
add
mov
js
test
adc
sbb
pushf
movs
or
aas
cmp
push
cmp
test
aad
jns
out
pop
xchg
stc
xor
cmc
outs
cmp
sti
out
mov
dec
das
cmp
retf
mov
retf
cld
dec
out
cmp
dec
jmp
cmp
mov
ins
jo
ja
retf
js
mov
mov
inc
jle
push
mov
adc
lahf
mov
xchg
inc
jecxz
or
and
add
jbe
mov
xor
jae
(bad)
outs
jp
out
int3
sahf
test
mov
enter
scas
fldcw
clc
adc
cdq
xchg
cmp
(bad)
push
imul
enter
jmp
cli
mov
enter
jmp
cli
mov
enter
jmp
cli
jl
mov
inc
and
dec
loopne
lea
dec
and
jne
xor
xor
jo
lock
inc
ror
dec
ror
sbb
dec
sub
pop
test
or
test
pop
dec
xor
inc
pop
or
mov
xchg
inc
cmp
push
mov
add
jmp
cld
test
add
push
mov
hlt
and
aam
rol
aam
dec
ds
sbb
mov
pop
inc
pop
fcomp
loope
jge
je
sbb
or
add
test
pop
ins
mov
(bad)
cmp
pop
add
arpl
loop
inc
cmp
test
inc
mov
out
in
outs
cli
sub
loop
int3
(bad)
rol
cmp
or
stos
aam
je
cmp
mov
nop
js
mov
fadd
pop
push
int3
fwait
pop
call
xor
push
dec
hlt
inc
in
dec
lahf
xor
retf
(bad)
mov
mov
loope
mov
mov
loope
mov
inc
mov
and
cmp
xor
icebp
out
addr16
sub
sbb
fsub
sub
sub
nop
rcr
pop
jnp
adc
xchg
cmp
ja
mov
pop
adc
push
mov
ja
scas
sbb
jmp
mov
push
out
ds
adc
sbb
inc
xchg
sub
daa
and
cmps
mov
add
leave
inc
ins
jae
test
iret
mov
adc
add
cld
inc
push
sbb
sbb
push
jge
jae
pusha
inc
inc
aaa
inc
ja
push
jae
jae
pusha
inc
inc
aaa
inc
ja
push
jae
jae
pusha
inc
inc
aaa
add
loopne
mov
and
int3
mov
loope
and
mov
pop
xor
add
aas
test
int3
inc
pop
xor
mov
cs
push
jle
into
arpl
push
out
pusha
loope
in
mov
cmp
addr16
add
test
cmp
ins
mov
mov
dec
aad
sbb
adc
ret
mov
and
outs
jl
add
xchg
push
(bad)
popa
jge
mov
adc
sbb
adc
and
call
movs
xchg
adc
sahf
loopne
sbb
sbb
in
and
adc
mov
in
dec
dec
outs
xchg
inc
je
lods
xchg
jmp
arpl
jae
mov
jo
leave
ret
push
es
jns
mov
push
fst
push
loop
loopne
sbb
pusha
fmul
add
fnstenv
sbb
pusha
fmul
add
fnstenv
sbb
pusha
fmul
add
fnstenv
sbb
pusha
fmul
add
fnstenv
sbb
pusha
fcmovnb
scas
add
popf
xchg
fmul
push
outs
scas
add
popf
xchg
fmul
push
outs
scas
add
popf
xchg
fmul
push
outs
scas
add
popf
xchg
fmul
push
outs
scas
add
popf
xchg
push
retf
scas
add
popf
xchg
push
retf
scas
add
popf
xchg
push
retf
scas
add
popf
xchg
push
retf
scas
add
popf
xchg
adc
(bad)
or
retf
std
dec
scas
stc
mov
retf
cld
dec
outs
clc
mov
outs
retf
or
and
(bad)
jg
call
xchg
repz
sahf
(bad)
cld
jne
ret
mov
pop
ja
in
iret
adc
scas
mov
mov
mov
or
fild
pop
pop
jecxz
mov
jle
sbb
test
mov
xchg
cmp
daa
jp
shr
sbb
add
ret
xchg
pop
push
int
fmul
iret
daa
or
sahf
dec
aam
je
mul
nop
data16
fisub
pop
sti
add
imul
xchg
pop
cwde
cmps
ds
mov
(bad)
mov
jmp
fisttp
dec
mov
cmps
test
jmp
add
fbstp
pop
movs
in
(bad)
ret
xchg
test
mov
inc
xchg
cmc
stos
adc
ret
add
adc
dec
jl
add
and
xchg
fisub
fsubr
call
jl
movs
cmc
scas
and
or
in
lock
push
mov
sbb
sub
mov
shl
movs
scas
movs
outs
push
fsubp
ins
inc
sbb
sbb
(bad)
ins
lahf
inc
retf
ds
fdivr
scas
add
pop
ins
fisub
loope
test
ds
lds
pop
fiadd
cli
sahf
sub
push
jbe
call
int
repnz
loop
call
xchg
sahf
sub
push
jbe
call
int
repnz
loop
call
xchg
sahf
sub
push
idiv
popf
ins
jmp
or
push
jb
repnz
inc
cwde
lods
call
std
dec
mov
mov
sub
add
jne
pop
jecxz
jmp
leave
out
mov
xor
loope
add
inc
popa
test
fistp
cmp
adc
imul
scas
enter
test
lahf
jle
sbb
aad
lock
call
call
xor
xchg
loope
jbe
sub
in
ss
sbb
push
not
xchg
and
pop
push
fs
mov
sub
pop
ins
cmp
popf
mov
jmp
stos
retf
mov
mov
mov
jmp
mov
mov
mov
loopne
mov
xor
iret
popf
mov
jmp
stos
retf
call
std
ret
mov
bound
aaa
imul
jge
ins
add
and
or
clc
es
cdq
sti
jo
or
mov
js
push
cmp
pop
jg
adc
ss
sbb
add
lods
fcmovnbe
xor
scas
out
xor
jno
cmp
lea
hlt
dec
arpl
mov
enter
pop
lds
add
and
pop
mov
mov
dec
push
mov
pusha
push
push
arpl
inc
stos
(bad)
sbb
push
pop
je
aaa
adc
retf
lods
clc
fs
retf
mov
cmps
push
xor
inc
rcr
cdq
jecxz
fisttp
jge
movs
xlat
sahf
adc
adc
inc
inc
and
mov
jb
inc
dec
pusha
mov
dec
xor
dec
mov
jmp
shl
xor
add
mov
loope
cld
mov
into
adc
dec
xchg
push
out
push
dec
push
fs
cmps
aas
push
(bad)
xor
and
adc
adc
adc
inc
push
adc
inc
and
and
mov
cdq
gs
inc
dec
(bad)
out
cmc
movs
sbb
sbb
scas
push
jge
and
(bad)
stos
sti
les
(bad)
adc
jmp
loopne
lods
shl
lahf
sub
jmp
fsubr
scas
in
push
and
mov
nop
fsubr
mov
ret
jo
das
adc
inc
shl
adc
add
sub
out
xor
jb
xor
fbstp
das
pop
mov
pop
adc
outs
cmp
icebp
dec
dec
fiadd
ins
popa
mov
push
xchg
cld
jno
push
gs
arpl
sahf
jb
mov
mov
inc
pusha
in
jo
and
mov
dec
adc
fwait
aam
loop
nop
mov
or
and
(bad)
call
cmp
mov
xchg
mov
cmp
xchg
arpl
popf
leave
inc
cmps
cmp
inc
pop
sti
mov
or
xchg
je
xchg
mov
int
sbb
adc
into
push
fs
jle
ret
lock
jb
mov
inc
data16
(bad)
pusha
in
out
xchg
push
test
push
ret
sub
mov
mov
retf
lea
fs
out
je
jecxz
and
mov
dec
imul
push
movs
loopne
fimul
aad
dec
gs
xor
fwait
mov
pop
movs
jmp
jl
into
pop
cwde
jmp
sub
cmp
inc
push
out
xor
in
cbw
pushf
ror
in
lock
cmp
dec
xchg
jecxz
mov
jmp
xor
iret
add
mov
add
dec
and
adc
or
(bad)
xchg
rcr
fdiv
dec
sbb
ja
xchg
stos
cdq
nop
pop
outs
gs
xor
cmp
mov
push
xchg
and
int3
xchg
call
dec
mov
cmp
out
aad
inc
mov
mov
or
mov
fsubr
sbb
pop
mov
jmp
mov
xchg
fisubr
call
nop
cmp
xlat
or
or
sti
aam
add
xchg
cli
sbb
lea
inc
xchg
jp
adc
ds
mov
inc
lods
xchg
cmp
jmp
push
call
sub
stc
cwde
jne
push
add
cli
xor
adc
or
mov
and
jecxz
out
jbe
inc
mov
pop
xlat
pop
data16
xor
or
adc
ins
pop
aam
or
push
mov
or
fdivrp
icebp
sti
or
jne
pop
dec
push
test
out
jp
or
cmovl
addr16
out
add
or
and
lea
and
test
aaa
sbb
cwde
xor
jbe
in
ret
add
mov
jnp
arpl
inc
jmp
inc
out
push
push
adc
movs
pusha
ret
and
addr16
cli
jecxz
lods
fdivr
or
jmp
mov
xchg
pop
lock
xor
mov
adc
cmp
xlat
or
or
mov
add
test
sub
vmwrite
cmps
and
jle
out
xchg
cdq
popa
out
div
stos
rol
cs
pop
sub
cmp
ins
nop
mov
inc
mov
adc
mov
outs
pop
pop
in
out
jecxz
mov
pop
inc
sbb
outs
cmp
scas
cmp
std
(bad)
jae
inc
jmp
pop
mov
pop
cmc
div
cli
push
sub
sub
cmp
ins
nop
mov
jmp
and
pop
sub
lea
test
pop
aad
rcl
aaa
mov
in
aad
ret
loope
stc
bound
push
add
and
popa
mov
cmp
xchg
lock
cmp
mov
cmp
dec
fldlg2
test
test
ja
mov
and
movs
jle
cmps
dec
outs
or
inc
inc
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
dec
dec
mov
or
js
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
pop
mov
sub
fcomp
mov
sub
fcomp
mov
sub
fcomp
mov
adc
inc
inc
jecxz
and
daa
inc
inc
jecxz
and
daa
inc
inc
jecxz
and
daa
inc
inc
jecxz
and
daa
inc
inc
jecxz
and
daa
add
fld
push
xor
pop
push
inc
test
sub
loope
lds
pop
mov
dec
push
sbb
sub
sbb
jnp
xchg
sbb
out
cdq
xor
(bad)
mov
mov
or
inc
ins
cmps
mov
pop
or
dec
push
(bad)
fdiv
sbb
lds
xor
aam
and
cmp
pop
dec
(bad)
sub
fld
push
add
cmps
push
add
or
adc
push
push
mov
ss
cmp
(bad)
add
aas
xor
push
push
mov
ss
cmp
(bad)
add
aas
xor
push
push
mov
ss
cmp
(bad)
add
aas
xor
push
push
mov
ss
cmp
(bad)
add
aas
xor
push
ficom
jle
test
mov
ins
nop
inc
mov
xor
mov
(bad)
inc
mov
sbb
adc
enter
stos
or
add
cli
cmps
mov
gs
aad
out
in
cmp
ret
jle
fcom
je
mov
cmp
mov
lock
out
or
push
mov
ja
cmps
push
enter
inc
rcr
sub
xchg
xor
call
mov
(bad)
xchg
cmp
pusha
and
push
movd
add
or
sti
scas
repnz
dec
out
cmp
retf
cmp
retf
cld
mov
test
mov
mov
xchg
iret
nop
shl
adc
mov
or
lock
or
ficomp
push
loopne
int3
cmp
in
cs
out
ins
mov
pop
icebp
lock
jmp
ins
mov
cmc
jge
push
dec
aad
jmp
sbb
mov
(bad)
iret
enter
jmp
mov
push
jl
or
push
loope
mov
mov
push
movs
retf
mov
leave
gs
hlt
dec
jno
ins
std
rcr
jno
ficomp
(bad)
jns
ins
jl
rcl
out
or
(bad)
out
jnp
and
dec
cmc
out
daa
mov
add
es
popf
mov
mov
fsubr
lock
cld
outs
mov
das
xor
dec
std
aas
aaa
push
imul
push
movs
pop
lahf
xlat
push
enter
fstp
mov
stc
sar
in
jnp
std
mov
pop
test
dec
stos
repnz
add
xor
pop
mov
inc
push
jmp
dec
or
loope
test
xchg
jp
(bad)
pop
stc
and
mov
gs
ins
scas
test
movs
sub
lods
cwde
lods
lods
or
and
cdq
aam
setbe
loopne
mov
lods
dec
adc
sbb
xor
mov
cs
xor
in
mov
pusha
aam
xchg
adc
inc
cmp
xchg
data16
push
push
ja
inc
dec
adc
bound
and
pop
push
bound
add
jo
es
push
aam
xchg
adc
inc
cmp
xchg
data16
adc
das
aam
in
aaa
jge
(bad)
js
add
sbb
xor
jo
mov
jge
sbb
xchg
retf
call
mov
sbb
loop
std
(bad)
jbe
lahf
cmc
cmp
fsubr
scas
jns
mov
push
bound
dec
sbb
cmps
outs
ror
mov
fwait
inc
mov
ret
sbb
xchg
mov
arpl
push
jbe
retf
pop
bound
ds
sub
(bad)
cld
nop
(bad)
add
sbb
call
xchg
dec
(bad)
ficom
push
push
dec
jmp
sub
jne
mov
adc
aam
push
jmp
sub
enter
inc
stc
(bad)
pop
test
cmp
mov
jnp
retf
fwait
fs
xchg
sbb
shr
mov
sub
and
push
fdivr
ror
mov
mov
cs
fild
mov
mov
add
mov
sbb
test
mov
push
fs
jle
jmp
inc
or
cmps
inc
fidiv
xor
iret
fmul
stc
inc
int3
cmp
outs
iret
mov
cmp
ret
dec
ds
push
dec
sub
pop
cdq
jp
xor
rol
pop
es
aaa
test
aas
jno
test
ja
test
add
ror
xor
rol
pop
nop
popf
test
int
push
fcmovnu
jb
js
sahf
dec
(bad)
scas
jmp
cli
push
sbb
pop
xor
ins
sub
outs
sbb
fcomp
rol
push
xlat
fnstenv
nop
clc
adc
out
lahf
push
inc
push
push
ja
and
aas
cs
mov
(bad)
rcl
sbb
mov
mov
pop
pop
xchg
mov
pop
and
pop
add
push
lock
test
pop
pop
xchg
mov
(bad)
ret
std
sub
loope
out
push
sub
lods
lahf
mov
sbb
and
and
iret
push
add
jmp
ins
mov
or
enter
inc
fst
mov
xor
loope
mov
mov
dec
into
mov
hlt
mov
jg
ss
test
xchg
lods
es
lods
ss
mov
dec
pop
dec
cmc
outs
out
daa
sar
sahf
ds
mov
pop
call
stos
scas
jp
fimul
outs
jae
sti
test
jmp
cmps
scas
jl
fcomp
stc
inc
cmp
in
leave
inc
bound
fidivr
cld
stos
xchg
mov
mov
xor
aad
jl
xchg
inc
cmp
push
idiv
cli
loop
out
inc
add
jg
or
neg
or
cmp
jbe
shl
sub
shl
ins
mov
repz
imul
leave
stos
out
imul
mov
lahf
push
test
xor
pop
dec
cmp
mov
das
repnz
arpl
mov
jmp
xchg
pop
retf
je
mov
jmp
lock
out
scas
jbe
xchg
in
xchg
retf
adc
pusha
repz
mov
scas
push
xchg
push
or
clc
push
pusha
arpl
mov
add
repnz
mov
mov
mov
std
mov
mov
div
xor
push
scas
xchg
pop
aad
push
aaa
in
shl
scas
ins
popf
addr16
pop
push
and
xchg
(bad)
sbb
fadd
xchg
test
mov
cmp
sub
xchg
inc
add
pop
mov
ins
lds
dec
hlt
pop
hlt
dec
ror
mov
stos
sbb
xor
inc
(bad)
cli
hlt
jmp
inc
cli
hlt
jmp
inc
mov
ficom
mov
or
jns
into
fistp
mov
lods
pop
xchg
cli
daa
aaa
cmc
dec
xchg
cdq
sbb
or
mov
fsubp
fidivr
ret
jle
push
mov
mov
mov
sub
dec
sub
xor
push
xchg
shl
ds
test
dec
(bad)
(bad)
pop
cmp
cmc
or
fwait
or
jno
pop
push
in
imul
mov
cld
retf
clc
dec
push
movs
adc
inc
mov
daa
lahf
pop
pop
fsub
pushf
scas
inc
retf
loopne
and
arpl
xor
or
mov
cmps
daa
fldenv
inc
sbb
xor
or
js
lds
jle
fsub
pushf
scas
inc
dec
jmp
xor
or
mov
lods
popf
jno
fsub
pushf
scas
inc
mov
xor
cmps
daa
cdq
loope
mov
scas
clc
cld
retf
cmc
scas
mov
pushf
scas
inc
retf
jmp
es
scas
inc
retf
jmp
es
scas
inc
retf
jmp
mov
pushf
scas
inc
retf
push
mov
inc
mov
cld
es
cs
retf
jmp
out
xchg
mov
inc
mov
push
inc
mov
mov
inc
mov
mov
inc
(bad)
lea
out
cld
mov
clc
std
retf
cmp
scas
clc
cld
mov
mov
enter
lods
xchg
or
cld
scas
mov
xor
xchg
arpl
add
js
push
xchg
xor
or
xor
sub
cmps
imul
ficom
clc
mov
adc
jmp
cmps
push
in
pop
mov
xchg
or
lods
(bad)
es
(bad)
xor
(bad)
adc
imul
xchg
dec
ins
jbe
call
mov
es
pop
das
jmp
call
add
mov
xlat
cmp
inc
lods
repnz
mov
ret
and
adc
pop
aaa
fs
and
sbb
sbb
cmps
jbe
gs
or
sbb
cmp
outs
in
sahf
popa
jl
add
inc
test
pusha
cmp
loopne
cmp
lahf
sub
jecxz
cmp
imul
imul
and
dec
cmp
clc
in
in
fcom
inc
scas
enter
loopne
mov
push
jp
test
out
shr
pop
test
add
jno
loope
mov
imul
mov
in
lods
dec
movs
pop
jecxz
sbb
and
or
jp
sbb
in
out
aas
js
sub
cld
jg
movs
mov
loopne
jb
push
(bad)
sub
fmul
mov
sub
cmp
stc
mov
cmps
scas
sbb
scas
or
clc
pop
loopne
pop
std
mov
shld
stos
lock
repz
cmp
test
in
sub
(bad)
in
cmps
jb
xchg
test
mov
mov
dec
in
shr
sbb
repz
sbb
retf
xchg
jg
je
out
jae
sbb
leave
shl
adc
xor
fimul
imul
add
jo
enter
inc
(bad)
cli
hlt
jmp
jmp
lea
mov
stc
lea
mov
stc
lea
mov
stc
lea
scas
repnz
mov
(bad)
sub
ficomp
out
popa
pop
add
ins
pusha
les
sub
push
xchg
cmp
popa
jle
inc
xchg
pop
call
dec
add
jne
xor
mov
movs
enter
imul
cli
das
mov
push
cmp
dec
mov
(bad)
sub
pop
nop
test
pop
cmps
int3
add
mov
fisubr
(bad)
push
xchg
pop
pop
pop
nop
test
pop
cmps
int3
add
mov
fisubr
(bad)
push
xchg
pop
pop
pop
adc
mov
stos
sub
xchg
movs
mov
movs
popf
dec
pop
push
xchg
aad
mov
mov
ss
pop
outs
(bad)
mov
stos
sub
xchg
movs
mov
movs
popf
dec
pop
push
xchg
aad
mov
mov
ss
pop
outs
(bad)
mov
mov
icebp
sub
mov
shl
adc
aas
enter
mov
mov
mov
fdiv
jg
pop
lahf
jmp
cmps
div
outs
sub
cli
mov
mov
ret
mov
inc
fmul
push
dec
nop
cmp
into
das
js
or
mov
cld
retf
clc
xchg
out
mov
retf
shr
push
inc
retf
js
mov
mov
in
lsl
pop
rep
gs
fmul
sbb
push
pusha
(bad)
inc
(bad)
dec
(bad)
cmc
jbe
in
retf
imul
jne
adc
sub
outs
pop
push
ffreep
cmc
sub
scas
add
loop
xor
imul
and
fisttp
bound
add
mov
aam
cdq
cmps
mov
lods
ja
jo
sbb
cmp
adc
lea
add
aam
push
or
mov
ret
mov
jecxz
mov
test
cwde
fsub
pushf
scas
inc
retf
jmp
bound
ins
add
fiadd
dec
hlt
inc
mul
mov
mov
ficom
adc
add
sbb
jae
loopne
xor
adc
loope
mov
test
or
imul
push
int
iret
mov
loope
das
lea
push
xlat
mov
leave
das
ror
mov
dec
loop
xchg
mov
data16
cmp
fdivrp
std
cmp
test
xchg
std
or
sub
rol
cwde
call
lods
test
sti
lods
test
sti
lods
test
sti
lods
test
sti
lods
test
lods
jo
outs
jl
adc
stos
mov
xor
jae
rcl
rcl
in
sub
push
xchg
xor
add
lods
aad
push
jecxz
jmp
push
pop
clc
ss
dec
dec
test
out
popf
popa
lock
sub
mov
push
sub
mov
leave
push
fild
cmps
pop
sbb
pinsrw
adc
ds
mov
in
xor
push
adc
mov
mov
shr
push
cmp
fwait
sbb
bound
aad
cmc
push
cmps
ret
mov
sub
mov
das
(bad)
sysexit
sbb
push
ins
cmp
inc
push
mov
arpl
aam
fwait
push
jmp
call
sub
popf
pop
int
in
cmp
call
aaa
icebp
(bad)
out
and
mov
movs
jb
aam
xchg
cmps
retf
loop
ja
inc
inc
(bad)
pushf
fwait
ret
adc
xchg
int3
ja
push
pop
sub
(bad)
and
sub
mov
pop
movs
in
cmp
test
retf
mov
or
call
in
ja
mov
push
fsub
movs
out
jae
mov
cwde
or
sub
paddsw
cli
mov
stos
inc
push
std
test
es
scas
inc
retf
jmp
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
push
outs
pusha
xor
bound
dec
into
rcl
sub
fucom
add
push
dec
into
rcl
sub
frstor
(bad)
xchg
xchg
mov
(bad)
xchg
xchg
mov
(bad)
xchg
xchg
mov
(bad)
xchg
xchg
mov
outs
(bad)
or
retf
mov
or
clc
jl
scas
mov
mov
shr
movs
into
mov
inc
mov
in
mov
clc
out
in
mov
fist
lods
retf
sti
bound
fadd
outs
push
icebp
mov
retf
jbe
mov
xchg
xor
push
loopne
dec
repz
inc
packuswb
lock
scas
sub
or
call
fisttp
push
popa
mov
sub
xor
or
adc
inc
and
xor
jmp
enter
es
loopne
lods
hlt
fdiv
fadd
(bad)
jp
pop
xchg
add
imul
pop
es
shl
mov
or
push
cmps
popa
sub
retf
cmp
dec
lds
gs
cmp
jecxz
adc
sub
lahf
pushf
mov
push
retf
(bad)
jecxz
mov
out
iret
add
mov
pop
sub
popa
xchg
add
test
repnz
fwait
mov
xchg
cmc
cmc
inc
clc
pop
mov
add
sti
repz
mul
xchg
push
or
leave
mov
sbb
in
jge
call
cmp
push
add
mov
mov
ins
mov
loop
push
xor
xchg
cmp
arpl
stos
add
cli
mov
adc
retf
xchg
dec
push
stos
movs
xlat
mov
or
pop
pop
fcomi
mov
not
mov
cwde
adc
fidiv
in
ss
cld
sbb
and
das
push
dec
imul
aam
jmp
not
arpl
pop
mov
add
repnz
fcomip
xchg
push
cmc
jecxz
jg
lods
hlt
not
loopne
sbb
push
cmp
sub
pushf
cmps
stos
xlat
addr16
jmp
push
call
shl
jmp
pushf
ja
xchg
sbb
cmp
(bad)
or
test
retf
ret
movs
push
iret
mov
sub
mov
sbb
ror
mov
pop
jo
or
dec
sub
pusha
(bad)
add
mov
jbe
jb
cmc
stos
pop
dec
imul
and
gs
dec
retf
push
out
cld
fcomp
xchg
enter
mov
rol
push
xor
popf
cdq
sub
pop
sbb
repz
out
imul
stos
xchg
call
pop
out
aad
js
cs
stc
cmp
shl
gs
out
mov
mov
or
sbb
mov
inc
int
jmp
cli
pop
cld
hlt
ret
retf
std
inc
lods
mov
int
sub
loop
push
push
fsubrp
ins
retf
stc
sbb
add
lods
xchg
inc
sub
xor
dec
xor
sti
adc
push
retf
retf
add
mov
pusha
inc
ror
pop
sbb
mov
aaa
add
lods
xchg
inc
sub
xor
dec
xor
pop
int3
push
jmp
cld
jb
(bad)
repnz
dec
adc
jae
jmp
pusha
xchg
push
shl
in
fistp
or
clc
out
fucom
pop
inc
cmp
cli
cwde
lds
lahf
(bad)
mov
pusha
cmc
mov
sbb
dec
jge
int
xchg
(bad)
sub
out
repz
in
push
js
fnsave
xchg
stos
lahf
sti
adc
sbb
fild
xor
mov
mov
mov
movs
adc
imul
mov
cmp
jne
fisubr
fs
jbe
jne
or
cmps
jge
outs
fnstenv
mov
test
mov
push
aas
xchg
push
inc
mov
lods
pop
cwde
adc
dec
lds
cmps
imul
sar
inc
jp
mov
mov
add
repnz
ins
in
aam
sub
mov
sbb
sub
dec
fstp
push
pusha
outs
mov
sub
pop
jb
jae
dec
cmps
ret
into
loopne
adc
xor
mov
and
mov
repz
call
pop
lock
cdq
sub
mov
mov
xor
in
popa
sar
in
xchg
aaa
fstp
push
pop
mov
gs
add
cmp
dec
ret
mov
leave
(bad)
ror
pop
or
push
idiv
push
sub
clc
repnz
sbb
pop
add
inc
mov
mov
mov
mov
inc
push
adc
(bad)
clc
jp
xchg
(bad)
into
mov
cmps
jecxz
push
and
xlat
mov
bswap
(bad)
sbb
scas
int3
add
das
mov
dec
leave
jmp
dec
ja
adc
std
pop
rcl
mov
aas
int
int
dec
inc
das
(bad)
adc
fs
adc
sti
stos
xchg
(bad)
sbb
mov
icebp
add
or
adc
repnz
(bad)
jecxz
es
fild
nop
push
xchg
das
and
repnz
retf
mov
les
dec
dec
pop
pop
jp
sub
push
push
jp
ins
leave
popa
or
fld
mov
pusha
cmp
xor
mov
sub
fistp
test
stos
fld
cli
push
push
lahf
add
repnz
xchg
mov
adc
sbb
and
cs
dec
out
jne
xchg
jp
stos
repz
xchg
push
cmp
add
nop
js
mov
push
mov
into
cmp
mov
sti
adc
mov
imul
jnp
adc
mov
out
mov
cmp
dec
cmp
fmul
pushf
retf
lods
(bad)
jo
pop
pop
std
leave
test
stc
mov
sub
(bad)
xchg
or
or
les
mov
rcl
pusha
and
cmp
xor
inc
and
aam
lds
ss
push
pop
data16
jbe
gs
inc
test
repz
xor
jno
xor
adc
popa
sub
xchg
pop
xchg
cmc
cmps
ds
test
dec
(bad)
ficomp
(bad)
aam
or
jno
pop
push
in
imul
jbe
push
pop
inc
(bad)
push
dec
in
mov
rcr
pusha
and
mov
xor
pusha
and
xchg
aaa
lds
pop
(bad)
jbe
gs
inc
test
repz
ret
xor
and
popa
sub
xchg
pop
xchg
fdiv
or
stos
repz
or
xchg
pop
pop
jns
stc
push
in
or
mov
xor
mul
ss
or
xor
cmp
icebp
add
cmp
and
xchg
clc
cmp
push
mov
mov
out
retf
retf
cmp
dec
outs
js
or
jl
outs
cmp
scas
mov
mov
enter
or
jnp
mov
clc
or
js
jmp
js
jmp
iret
stos
jle
(bad)
cld
outs
test
retf
cmp
mov
std
cmp
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
jne
mov
cld
or
out
mov
add
scas
(bad)
cld
retf
mov
retf
cld
retf
cld
retf
mov
or
clc
cld
or
mov
mov
retf
cld
or
cmp
scas
cmp
clc
mov
or
mov
dec
hlt
aam
not
add
aas
and
inc
dec
xchg
sbb
aam
xor
cmp
mov
xor
daa
adc
test
clc
cld
mov
gs
aad
xor
cmovg
xchg
add
je
push
and
inc
xchg
test
push
adc
cmc
out
sub
or
or
rcl
and
push
add
cmp
sbb
xor
ret
scas
js
int
fisubr
pop
push
push
xchg
(bad)
push
lahf
mov
mov
lds
test
push
das
inc
adc
jns
lahf
push
mov
and
xchg
dec
xor
cmps
xchg
push
hlt
retf
(bad)
fcomp
dec
push
jno
xor
data16
dec
aaa
and
adc
dec
ret
dec
das
mov
mov
(bad)
fwait
jnp
out
fisubr
add
daa
push
pop
jecxz
ret
cld
jge
popa
ret
cdq
je
mov
test
cmps
jp
add
xchg
mov
outs
stos
out
lods
retf
repnz
pop
sub
jmp
lds
jae
pop
cmps
sbb
and
adc
icebp
mov
mov
xchg
mov
ins
retf
scas
mov
add
pop
and
neg
pop
xchg
sub
inc
xchg
int
adc
ror
jne
dec
inc
loope
push
stos
mov
repnz
cmps
sbb
push
push
sbb
das
aas
push
cmp
cmp
aam
(bad)
or
xor
jge
add
scas
add
fmul
inc
icebp
je
sbb
clc
mov
cmp
and
jb
repz
pop
push
push
pop
or
imul
cdq
ins
pop
xchg
mov
imul
xchg
inc
add
xchg
daa
adc
push
aad
ss
cld
push
sub
push
or
imul
xor
and
les
and
jbe
push
add
inc
test
mov
mov
test
xchg
ret
in
pop
mov
mov
xchg
jo
push
mov
and
movs
push
icebp
cld
dec
out
dec
out
out
jp
retf
or
call
cld
add
test
and
out
lahf
pop
retf
clc
mov
out
fsubr
cli
clc
ret
cmps
clc
jl
or
and
mov
cmp
ss
mov
xchg
pop
enterw
mov
mov
add
cmps
icebp
js
pop
cmps
clc
cld
fldcw
clc
hlt
int3
cdq
fdivr
retf
cmp
sbb
pop
add
fstp
clc
cld
fisubr
mov
mov
pop
pop
mov
adc
arpl
add
dec
xchg
js
popf
clc
sub
lods
cld
clc
or
sbb
out
clc
push
mov
or
(bad)
cli
clc
out
dec
sahf
ja
(bad)
retf
cld
or
inc
iret
pop
xchg
lahf
push
ds
shl
shr
clc
cld
stc
sahf
fdivr
cmps
jecxz
xor
adc
inc
xor
(bad)
fmul
sub
hlt
retf
or
add
loop
mov
popf
sti
mov
jl
test
cld
hlt
retf
mov
iret
hlt
cld
ret
mov
cli
cld
retf
rol
scas
cld
cld
retf
jl
aas
clc
jge
in
fdivr
mov
(bad)
int
movs
cld
cld
or
mov
retf
mov
retf
cmp
outs
cmp
push
sub
(bad)
mov
lock
into
cld
mov
clc
cld
mov
clc
lods
(bad)
adc
fwait
push
push
scas
sub
add
adc
xor
fwait
add
sub
out
mov
cwde
(bad)
pop
lock
dec
dec
pop
mov
push
std
sub
aam
inc
sar
(bad)
popf
cmp
aad
out
mov
push
outs
pop
pop
shl
push
dec
inc
mov
shr
add
mov
xchg
xchg
fdiv
push
jb
sbb
lods
icebp
test
sahf
jne
in
dec
mov
(bad)
xchg
fisubr
loopne
jns
mov
push
hlt
fs
xor
pusha
push
shr
mov
mov
lea
mov
push
outs
adc
sbb
or
movs
(bad)
call
xor
ins
pop
xor
ins
pop
xchg
repnz
mov
aas
sub
or
movs
fmul
or
test
mov
pushf
sti
mov
test
push
daa
mov
cs
or
inc
mov
out
dec
mov
mov
daa
aaa
jb
push
in
sar
cmc
jg
dec
inc
mov
push
call
xchg
mov
xchg
cld
xlat
pop
pop
lods
dec
or
sbb
in
sub
inc
retf
jb
scas
ret
or
sub
fild
out
sbb
(bad)
scas
fnstcw
xor
cmps
mov
int3
inc
sbb
cld
xor
pop
imul
mov
lock
sbb
sbb
sub
cmp
push
cld
mov
test
in
add
(bad)
movs
in
jno
rcl
jp
pop
lods
push
frstor
pusha
sub
cmc
aad
or
inc
aam
stos
mov
clc
fisttp
in
in
push
sbb
std
rcr
ret
test
push
jmp
in
add
mov
aas
lahf
into
mov
and
add
scas
pop
or
fstp
mov
aad
push
popf
lods
aam
dec
aad
dec
mov
out
dec
imul
pop
jge
and
add
call
in
fistp
pop
mov
repnz
lahf
push
daa
(bad)
sbb
push
fist
daa
pop
daa
iret
xchg
loop
adc
nop
clc
rep
mov
mov
inc
out
push
mov
push
mov
fwait
push
mov
inc
jns
mov
aam
push
les
xchg
add
push
fstp
loope
sbb
push
jbe
xchg
mov
in
pop
cmp
inc
pop
std
or
and
and
and
fnstcw
retf
sub
mov
jmp
pop
int3
xchg
lahf
adc
pop
sar
jb
inc
movs
add
iret
pusha
enter
adc
clc
xor
out
js
dec
scas
cmp
dec
outs
mov
cld
dec
out
cmp
retf
std
inc
cs
xor
cwde
loop
lock
cmp
stos
sbb
or
xor
(bad)
dec
and
inc
inc
dec
retf
cld
mov
mov
pop
pop
stos
pop
mov
xchg
lock
or
ja
adc
and
and
lods
jmp
mov
test
and
jns
out
push
mov
cmp
inc
mov
inc
dec
test
fadd
test
sbb
push
push
mov
dec
xchg
stos
pusha
scas
dec
push
jns
xor
push
mov
jl
ins
fmul
outs
jo
add
sub
dec
or
aam
std
mov
bound
mov
xchg
lock
or
ja
adc
and
and
lods
jmp
mov
test
and
jns
out
push
mov
or
inc
mov
inc
dec
test
fadd
test
sbb
push
push
mov
dec
xchg
stos
pusha
scas
dec
push
jns
mov
sub
sub
movs
mov
and
bound
pop
xlat
pop
xchg
fsub
mov
je
(bad)
or
out
pop
xor
ret
iret
jb
xor
pop
sbb
pop
and
lahf
adc
sahf
push
sbb
xchg
xchg
jmp
pusha
cmps
dec
adc
jp
in
dec
retf
push
gs
stc
sti
ins
movs
rol
mov
cmp
jecxz
ja
loopne
fs
imul
(bad)
fwait
add
imul
xor
xchg
add
mov
xchg
and
and
repnz
sbb
ds
sbb
cmp
stos
movhps
push
jo
mov
jnp
dec
mov
and
arpl
mov
mov
aam
loope
push
add
jbe
in
mov
lods
xchg
test
sti
std
dec
popa
push
je
rol
mov
push
mov
push
cmp
(bad)
out
push
inc
sahf
and
je
dec
inc
bnd
push
rcl
add
and
or
cmp
mov
das
jb
sub
cmps
mov
adc
sub
and
popa
and
(bad)
lods
jl
(bad)
into
js
rol
mov
push
mov
mov
sub
sub
ss
sbb
lock
in
or
ret
stos
sbb
repnz
test
jnp
push
fld
and
pop
fadd
add
daa
jle
add
push
gs
jmp
stos
sub
popa
ins
lock
mov
fs
hlt
xchg
sbb
daa
(bad)
dec
(bad)
cmp
adc
inc
adc
pusha
mov
lock
xchg
jns
xchg
add
leave
inc
mov
sub
adc
rcl
test
cwde
lahf
pop
xor
pop
sbb
bound
lsl
stos
cmp
ins
sub
call
xor
mov
fstp
in
lahf
imul
xchg
outs
(bad)
sbb
ret
in
scas
fadd
xor
push
cmp
mov
or
fidiv
mov
les
out
rcl
push
iret
push
cwde
jae
and
loopne
jno
mov
mov
dec
mov
inc
aad
add
fimul
and
call
pop
(bad)
cs
xor
push
sbb
push
pop
inc
push
cmc
fs
ret
iret
jb
ss
repnz
push
clc
jmp
add
jmp
sub
(bad)
stc
retf
clc
scas
fidiv
daa
sbb
jbe
sub
je
or
inc
test
mov
imul
inc
or
jge
nop
aaa
mov
pop
rcl
pop
lea
call
nop
js
pop
fistp
stc
and
ret
popa
mov
fbld
or
mov
jo
in
jecxz
lea
in
mov
inc
cs
cdq
jbe
dec
mov
ins
je
jmp
push
cs
xchg
mov
add
das
je
int3
mov
btr
out
dec
cld
xlat
mov
add
ret
dec
cs
aas
ret
mov
pop
cmc
cmc
and
jl
ficom
add
mov
ror
movs
sub
loope
cmp
fcmovnbe
popa
cwde
sbb
jbe
add
ins
movs
xlat
in
fist
push
adc
test
push
in
out
and
push
inc
xchg
xchg
rcr
pminub
ins
sub
sub
neg
xchg
shl
xor
call
das
mov
mov
cld
or
cld
mov
clc
cld
retf
mov
mov
jns
fisubr
lods
fs
sub
scas
mov
jae
sbb
cmps
stos
lahf
ins
or
sbb
mov
sbb
inc
in
int
aas
jg
push
adc
in
jns
repz
lds
push
jb
test
(bad)
xchg
lods
icebp
fbld
imul
push
out
rcr
xor
xchg
int
aas
jg
push
adc
in
sub
aas
jnp
retf
imul
lods
jge
leave
aaa
pop
or
inc
jns
add
lock
lahf
and
push
lahf
rcl
cmp
jb
daa
sbb
mov
jae
push
pop
loop
fdivrp
stos
idiv
not
arpl
sahf
fcmovu
push
xchg
adc
jnp
mov
int
sbb
xor
sub
or
retf
jge
iret
add
push
jns
stc
adc
mov
enter
sub
call
jmp
xchg
jp
xchg
push
aas
sbb
add
icebp
inc
pop
push
jle
sub
sub
out
call
pop
pushf
mov
std
adc
adc
mov
push
inc
ror
push
jnp
sub
add
inc
sahf
mov
loopne
adc
dec
repz
sub
cdq
push
mov
frstor
or
mov
jl
and
pop
popf
call
cwde
movs
fisttp
inc
push
inc
aaa
fisttp
lock
jae
loopne
push
(bad)
gs
sbb
xchg
(bad)
arpl
ss
push
mov
shl
ret
mov
test
idiv
mov
gs
and
adc
cli
test
mov
and
jns
push
fnstenv
jbe
inc
push
test
and
add
pop
inc
js
icebp
call
push
int3
retf
or
cli
lock
fwait
ja
outs
not
mov
mov
aaa
mov
xchg
push
xlat
push
mov
push
xor
addr16
frstor
dec
fs
fwait
mul
push
ds
call
and
dec
pop
aam
les
pop
ds
arpl
dec
pusha
sub
pop
fisub
stos
jl
mov
or
ds
jecxz
leave
(bad)
push
sub
cmp
shl
mov
mov
(bad)
in
aas
cmps
push
push
test
es
jb
adc
mov
lds
sbb
push
mov
mov
cmc
scas
mov
lds
and
adc
imul
test
or
lds
test
mov
or
inc
scas
sahf
xchg
mov
push
ins
dec
into
dec
sti
in
fwait
mov
ret
jb
popa
iret
push
lods
jg
sub
pop
scas
leave
pop
cmp
mov
(bad)
in
xchg
shl
mov
push
xchg
cli
xor
pop
test
push
sbb
sti
scas
jmp
cs
cmp
scas
clc
cld
dec
outs
clc
mov
into
jmp
pop
jmp
iret
addr16
iret
sbb
(bad)
stos
icebp
ins
fidivr
ins
pusha
scas
ffreep
inc
(bad)
jnp
and
ja
mov
adc
mov
or
clc
jg
mov
add
out
mov
jmp
pop
test
fs
sub
add
lock
dec
and
test
neg
xlat
mov
stos
nop
repnz
int
lds
cli
in
pop
pop
(bad)
mov
pop
mov
push
cs
fistp
fstp
push
xchg
inc
inc
xchg
jle
cmp
sbb
dec
mul
pop
int3
in
xchg
aad
ds
push
and
jne
ja
add
sub
cmp
pop
(bad)
cmp
ret
mov
push
xlat
adc
xchg
test
dec
mov
sub
add
lock
dec
and
test
neg
xlat
mov
stos
nop
repnz
int
test
retf
dec
iret
mov
nop
pop
xor
lods
mov
push
dec
iret
out
stc
pop
pop
jnp
xchg
mov
sbb
mov
out
sbb
(bad)
cmp
nop
js
mov
adc
nop
mov
mov
shl
cmp
movs
mov
test
outs
lahf
or
cwde
cld
or
jne
ja
pop
adc
mov
mov
push
add
inc
fisubr
sbb
fimul
sahf
(bad)
xchg
sbb
xchg
dec
inc
fnstsw
ins
stc
imul
adc
mov
leave
cdq
jle
push
cs
xchg
aaa
mov
lds
pusha
stos
and
mov
cwde
and
and
xor
xchg
pop
inc
sub
push
(bad)
cmp
shld
rol
adc
ja
cmp
mov
xchg
daa
xchg
(bad)
push
push
or
sub
popa
je
cmp
pop
push
jb
(bad)
ins
jo
in
pop
(bad)
jb
ss
jmp
sbb
movs
mov
jecxz
jae
loopne
push
jb
(bad)
ins
jo
in
pop
(bad)
jb
ss
jmp
and
dec
test
push
mov
test
cmps
mov
mov
add
cmp
in
sub
mov
mov
mov
arpl
ret
push
ret
inc
loop
xchg
stc
push
test
ss
adc
aam
mov
aad
dec
hlt
pop
and
mov
cmc
mov
jno
dec
lds
je
(bad)
into
scas
pop
dec
stc
ins
mov
sub
retf
shl
push
ins
nop
pop
push
cmp
fst
add
fucomi
inc
fs
aaa
call
jmp
cmps
stos
inc
sbb
clc
aaa
xchg
add
mov
and
push
pop
(bad)
enter
and
loope
fsubr
pushf
push
loopne
fst
pushf
std
xchg
js
in
fs
jb
jmp
aas
test
cwde
repz
sbb
leave
adc
push
(bad)
dec
iret
je
mov
lahf
fdivp
pop
xchg
sub
lock
mov
cmps
dec
ud1
and
add
inc
or
outs
inc
adc
dec
jl
imul
add
and
jl
dec
adc
mov
ja
sti
inc
bound
jns
inc
pop
mov
shl
and
scas
popf
aaa
test
jl
pop
addr16
bound
jns
imul
sbb
mov
sbb
add
pop
adc
add
xchg
mov
push
(bad)
push
fcom
pusha
xor
jnp
pushf
rcl
xchg
or
ins
inc
xchg
ins
repz
lock
adc
shl
rcl
and
cmps
sti
in
int
mov
test
mov
inc
xor
cmps
std
cmps
pop
inc
dec
sub
and
dec
jns
jl
ss
lds
es
ror
rcl
push
or
jmp
and
push
inc
shl
jnp
repnz
mov
and
jnp
or
or
ja
xchg
xchg
push
in
mov
sub
or
popf
cwde
clc
pusha
sub
pop
push
adc
out
adc
out
and
xchg
pop
fbld
leave
push
ror
arpl
jmp
sub
xchg
mov
xchg
inc
jmp
xor
test
jbe
stos
jge
movs
out
sbb
xchg
int3
push
test
outs
outs
je
test
xchg
mov
rcr
sub
add
(bad)
adc
pop
jo
or
sbb
xchg
lods
jae
idiv
mov
jno
mov
inc
out
cmp
ss
hlt
mov
or
mov
adc
arpl
jno
mov
(bad)
retf
movs
nop
sbb
scas
leave
inc
into
mov
imul
sub
mov
pop
jo
sub
jnp
fnstenv
loope
stos
es
movs
(bad)
das
or
pop
(bad)
sub
push
std
fiadd
ds
add
(bad)
cmc
xchg
hlt
call
mov
push
cmp
ja
call
pop
ja
cmc
retf
sub
cli
push
pusha
push
cmp
add
imul
mov
or
add
inc
mov
data16
lock
sbb
mov
add
(bad)
jecxz
inc
push
add
adc
inc
repz
aad
sbb
out
mov
arpl
out
pushf
cmc
retf
fwait
mov
push
aaa
xchg
fisub
push
mov
xor
aad
xchg
jne
push
movs
(bad)
mov
dec
push
popf
out
jb
and
fnsave
cmps
popf
fstp
push
(bad)
fdivr
out
pop
stc
jne
call
or
add
pop
ret
jle
add
sub
and
sub
jmp
push
daa
push
jl
jmp
loopne
aas
gs
sbb
std
in
outs
cmps
xchg
rcr
jmp
das
ret
cmps
out
lahf
push
loope
loope
leave
stc
cmp
movs
xor
inc
mov
cmps
dec
rol
retf
fadd
popa
popf
test
nop
aad
cs
adc
mov
fadd
mov
data16
xor
jg
adc
mov
jnp
call
loop
mov
push
adc
(bad)
popa
mov
sub
jmp
mul
clc
loop
cmp
lea
in
xor
test
push
sbb
pop
xchg
push
sbb
cmc
dec
mov
jmp
adc
rcr
test
aad
ss
retf
cdq
mov
out
jle
and
mov
retf
jl
push
sub
push
stc
lock
push
(bad)
inc
(bad)
fdivp
inc
pop
cmp
dec
(bad)
cld
push
nop
leave
mov
or
mov
retf
mov
mov
mov
sahf
mul
or
mov
scas
fist
int3
div
mov
in
mov
hlt
ins
fstp
scas
cmps
add
pop
adc
inc
jnp
dec
lods
cwde
rol
call
mov
and
pushf
nop
push
inc
push
push
clc
mov
xor
in
cmp
pop
rol
das
or
sbb
mov
inc
and
adc
push
adc
inc
bound
push
ss
jge
dec
test
test
pop
sar
call
xchg
push
test
aad
push
pop
adc
jb
or
push
daa
and
dec
rol
mov
retf
lahf
mov
or
adc
push
cmp
mov
and
jmp
or
sti
jo
test
(bad)
fstp
repz
push
enter
mov
aaa
add
div
adc
in
gs
mov
fidivr
mov
fsub
pop
jb
xor
adc
xor
ins
dec
pop
jge
pop
sbb
fsub
dec
movs
jbe
adc
mov
repnz
add
xchg
hlt
jne
sahf
pop
xchg
add
add
xchg
pop
and
mov
test
imul
xor
jp
sbb
stc
mov
cmp
movs
int3
(bad)
mov
movs
xor
rcr
or
jmp
jmp
ror
or
adc
mov
in
cmp
outs
fwait
not
(bad)
inc
mov
fisub
add
pop
sub
push
aaa
gs
mov
outs
and
pop
cwde
jge
adc
mov
jne
sbb
push
mov
fnstenv
dec
xchg
enter
or
lods
imul
les
shl
jl
outs
out
add
scas
sub
lods
popf
sbb
cs
xor
add
sti
ins
pop
fwait
add
popf
mov
cld
push
(bad)
fldenv
jns
movs
mov
(bad)
(bad)
outs
jecxz
sahf
pop
mov
cli
fbld
lods
(bad)
call
pop
leave
mov
lea
sbb
sar
cld
shl
pop
cmp
inc
push
(bad)
in
push
int3
jbe
cdq
in
out
push
inc
fisubr
adc
aam
pop
test
in
iret
imul
mov
dec
jmp
loopne
dec
das
inc
aad
pusha
xchg
idiv
xchg
pusha
retf
or
adc
inc
mov
pop
mov
ss
push
dec
and
iret
xor
sub
or
xchg
in
cmps
pushf
dec
or
test
push
out
adc
push
pop
fst
xor
and
mov
sub
and
mov
loop
jnp
std
mov
mov
icebp
icebp
ss
push
(bad)
addr16
add
xor
mov
pushf
loop
pop
stos
out
jecxz
mov
loopne
not
add
ret
retf
gs
and
dec
call
stos
jno
push
out
cmp
cmp
data16
ss
mov
cli
mov
sub
dec
xor
jecxz
js
imul
push
in
jmp
dec
jmp
sub
leave
pop
in
xor
ss
pop
push
test
jecxz
movs
out
movs
jg
mov
into
mov
jl
outs
or
or
(bad)
cmp
dec
mov
imul
adc
fs
mov
int3
cdq
mov
in
and
iret
test
popf
outs
cmp
adc
mov
push
mov
adc
mov
lea
out
pop
rcr
loopne
push
jl
pop
push
cli
dec
inc
inc
cwde
stos
push
pop
ja
retf
and
push
pop
lea
in
mov
xor
movs
sar
imul
add
call
(bad)
mov
leave
sbb
sbb
cwde
imul
test
retf
and
and
shl
aaa
repnz
inc
dec
xor
in
clc
loop
loop
dec
icebp
xchg
cmp
fadd
js
jle
(bad)
xor
sub
pushf
js
mov
pop
outs
leave
jecxz
fmul
aam
mov
adc
mov
aad
pop
sahf
test
cmp
sbb
or
cmps
push
scas
xor
lds
adc
inc
rcl
inc
loope
clc
(bad)
mov
ret
mov
jns
in
addr16
mov
push
or
cmp
fidivr
rol
inc
mov
das
push
adc
xchg
clc
popa
lds
out
repnz
inc
fld
adc
ret
div
adc
movs
lods
les
add
outs
inc
cmp
push
daa
add
scas
cmp
clc
mov
mov
ret
in
sbb
rol
adc
ror
push
(bad)
cmp
outs
mov
test
or
xchg
cdq
popa
inc
cld
hlt
sbb
in
add
scas
mov
dec
sub
mov
mov
das
nop
clc
arpl
aam
push
sub
cmc
aam
inc
stos
add
push
mov
data16
cld
adc
fadd
(bad)
push
mov
adc
pop
or
scas
inc
adc
into
or
mov
pop
or
mov
and
mov
or
scas
inc
sbb
xor
fadd
cmc
out
and
cmp
out
loope
cmp
nop
inc
adc
cld
add
add
mov
icebp
jle
sub
rol
mov
pop
adc
xchg
push
pop
inc
mov
loope
cmp
add
js
clc
in
pop
icebp
cmc
out
add
cmc
outs
(bad)
or
mov
cmp
dec
outs
mov
mov
into
out
mov
call
add
cwde
fsub
xchg
and
mov
cmp
into
mov
sbb
adc
push
pop
xchg
adc
mov
adc
repnz
cmc
add
div
jecxz
pop
nop
cmc
(bad)
xor
call
mov
daa
mov
push
std
pop
in
dec
ja
xchg
mov
(bad)
push
in
or
retf
mov
pop
lods
and
pop
sub
jae
pop
mov
sub
fisttp
sbb
out
cmp
cmps
div
mov
add
xchg
sub
nop
imul
dec
mov
jno
adc
mul
pop
push
inc
test
stos
mov
or
cmp
mov
outs
test
cmp
stc
in
mov
inc
data16
rcl
mov
lds
out
cmp
cmc
xchg
sub
hlt
in
scas
aas
adc
jnp
push
inc
cmp
adc
and
out
add
(bad)
(bad)
call
push
xchg
push
adc
push
pop
jno
jb
jo
inc
aam
movs
sub
push
outs
(bad)
and
(bad)
inc
and
inc
push
inc
add
pop
movs
jmp
jo
push
les
push
xchg
call
cmp
cli
cmps
stc
popf
cmp
cmp
sub
xor
(bad)
pop
lahf
mov
mov
outs
cmp
inc
mov
and
gs
push
push
loopne
lods
int3
cmp
leave
test
retf
scas
retf
daa
pop
dec
mov
std
mov
ss
add
pop
inc
outs
outs
loope
mov
in
sub
mov
mov
pop
xor
fimul
add
fcom
cmp
or
add
cmp
or
mov
cmp
inc
add
jae
mov
xchg
mov
push
into
(bad)
ficomp
sub
xor
pop
scas
jae
scas
stos
mov
cmp
in
sbb
in
popf
cmp
in
or
push
jnp
nop/reserved
cmc
inc
fs
and
pop
and
sbb
sub
mov
or
pop
daa
push
loopne
push
movs
mov
dec
dec
out
push
xor
xlat
push
xor
or
fimul
div
test
dec
pop
xchg
push
lods
ficom
pop
xlat
push
or
stc
dec
jg
stc
fcom
sar
pop
ret
sbb
fcom
fcmove
xor
xor
and
or
mov
test
inc
add
retf
pop
add
xchg
pop
mov
fwait
mul
push
mov
mov
or
push
adc
fisub
test
ret
add
xlat
and
stos
lds
aas
sub
pop
xor
icebp
cmp
pop
inc
pop
and
in
sti
dec
xor
out
add
or
lds
aam
add
ins
jmp
fld
and
pop
xor
ss
in
mov
xlat
mov
or
xchg
in
bound
ja
scas
icebp
(bad)
cmp
mov
cmp
and
nop
cmp
sti
outs
mov
mov
cmp
retf
cmp
scas
clc
mov
retf
mov
imul
xchg
cli
jecxz
mov
cmps
les
jne
clc
ds
out
mov
es
imul
jno
sti
pusha
leave
(bad)
in
div
enter
mov
xchg
sbb
sub
sub
push
mov
fcom
js
push
sub
push
push
jg
or
aad
call
mov
imul
jno
sti
pusha
leave
(bad)
in
div
enter
mov
xchg
movs
fnsave
int
jno
repnz
inc
fimul
push
(bad)
pop
call
dec
dec
les
scas
loop
lahf
pop
ucomiss
lods
and
imul
inc
(bad)
rcr
inc
cdq
ficom
imul
pop
mov
outs
stc
adc
pop
pop
out
cdq
and
push
shr
in
xchg
retf
cwde
mov
daa
jb
leave
hlt
in
jl
loop
aam
mov
lahf
jmp
fldcw
rcl
sub
int3
xchg
adc
lea
sti
mov
cmps
(bad)
fdivr
cmp
adc
and
mov
retf
icebp
addr16
rcl
mov
add
push
jbe
cmc
shr
jne
and
dec
xlat
jl
adc
cmp
pushf
addr16
mov
mov
pop
in
push
retf
mov
jle
jo
inc
jecxz
scas
inc
mov
adc
outs
stc
adc
jno
xchg
fdiv
movs
mov
mov
adc
fimul
fldcw
clc
movs
sbb
pop
jecxz
cmp
imul
and
stos
jecxz
push
add
cmp
daa
bndstx
or
js
repnz
cs
cld
es
sub
into
mov
pop
xlat
xchg
sbb
mov
sti
idiv
outs
cmc
dec
jne
out
inc
(bad)
sbb
ret
mov
ins
cmp
ds
dec
jo
loopne
mov
jmp
jge
cmp
fidiv
loopne
inc
stos
shl
dec
mov
pop
addr16
inc
mov
rep
pop
add
or
mov
xor
sub
or
jns
stc
ds
in
xor
jl
dec
sbb
adc
cmp
inc
and
jmp
out
cmp
cmp
std
fist
adc
or
jb
pop
push
inc
(bad)
rcl
jl
lock
jb
(bad)
dec
mov
loope
or
in
in
sub
fmul
dec
mov
push
aam
dec
add
loope
popa
jl
xchg
stc
cmp
mov
repnz
movs
xchg
cmps
hlt
nop
fisub
mov
or
or
rcl
mov
or
or
adc
and
or
repnz
cli
mov
movs
jbe
sar
cmp
aad
mov
das
push
retf
mov
sub
iret
sbb
(bad)
rcl
loop
adc
call
bnd
pushf
dec
int
mov
dec
or
setno
ins
retf
jl
xor
loope
or
dec
arpl
mov
out
adc
sahf
dec
sahf
out
div
mov
inc
sub
(bad)
mov
ret
(bad)
cwde
mov
mov
mov
xor
jge
add
jmp
cmp
das
js
mov
clc
mov
mov
in
mov
lock
scas
pop
inc
mov
in
mov
clc
dec
or
adc
dec
test
and
cli
jo
and
ins
in
adc
ret
call
xor
out
jge
add
and
das
or
cdq
aad
(bad)
xchg
nop
lea
jns
jno
mov
(bad)
cmp
cmp
lahf
test
cmp
adc
push
and
les
fpatan
(bad)
mov
movs
mov
mov
je
in
ror
inc
ds
and
fcom
dec
sbb
inc
sub
adc
sub
jg
adc
js
sub
inc
popf
ds
jmp
dec
test
xchg
test
pop
arpl
mov
std
adc
push
and
(bad)
clc
dec
mov
test
sub
imul
clc
sub
js
jmp
lods
out
add
scas
and
je
cmp
ficomp
mov
jo
(bad)
add
jb
jae
jmp
loopne
inc
mov
push
pusha
dec
mov
mov
push
add
stos
int3
xor
je
jnp
or
xchg
cmp
sub
pop
cwde
adc
sar
les
dec
cmp
add
adc
mov
jmp
jmp
pop
jnp
dec
popf
into
push
js
sahf
hlt
seto
ins
imul
fwait
and
int3
int
test
xlat
sbb
lahf
or
fistp
lock
(bad)
mov
or
aas
mov
xchg
xchg
jnp
cmps
or
mov
push
lods
add
sbb
inc
pop
pop
and
scas
cmp
stc
jmp
jmp
aam
arpl
add
sbb
aad
pop
pop
sub
cmp
ret
ret
cmp
out
xor
retf
pop
sub
repnz
pop
in
jl
mov
jo
nop
cmp
mov
in
aaa
ficom
out
out
les
xchg
movs
jb
and
nop
cmp
ins
pusha
sub
out
mov
aas
cmc
xchg
mov
lods
out
mov
int3
xor
dec
test
fld1
inc
mov
scas
push
xor
int3
inc
outs
or
popf
jo
or
add
aam
in
hlt
imul
dec
sti
int
in
push
push
adc
push
sti
add
push
jg
or
scas
adc
add
movs
mov
lods
repz
sbb
in
fwait
push
push
mov
sahf
test
popaw
mov
dec
fadd
test
mov
scas
sbb
or
fsub
fcmovu
xor
mov
clc
and
xor
in
jl
mov
push
mov
or
pop
cs
stc
rol
pop
push
pop
or
lea
je
mov
div
add
mul
mov
push
push
gs
jle
gs
jmp
(bad)
and
jp
and
into
je
inc
(bad)
push
mov
fidiv
mov
pop
repnz
sar
cmps
sbb
div
xchg
bound
jg
outs
movs
adc
xor
aas
test
inc
sbb
das
ins
cmp
xor
mov
inc
jo
(bad)
xchg
out
(bad)
shl
or
mov
mov
test
mov
mov
inc
pop
mov
lahf
and
cs
sub
sar
sbb
js
lods
push
movs
fistp
sbb
adc
and
pop
jmp
into
mov
psrld
sahf
sahf
jae
and
mov
mov
test
push
jnp
push
mov
dec
mov
pop
shl
mov
les
in
cld
xchg
ret
shr
leave
or
and
(bad)
fstp
push
or
imul
xor
mov
add
enter
gs
leave
test
and
outs
scas
(bad)
movs
imul
mov
cwde
mov
rol
fwait
jle
dec
sub
gs
mov
pop
int
pop
mov
pop
sahf
leave
(bad)
push
hlt
xchg
mov
test
cmc
(bad)
mov
dec
data16
lock
shr
fwait
popf
mov
sahf
dec
add
aad
mov
movs
cmp
cmp
aaa
(bad)
cli
mov
mov
iret
(bad)
fidiv
sbb
fmul
or
cmp
sbb
cmp
add
xor
fdiv
in
adc
jg
dec
pop
sbb
cmc
call
shr
mov
in
xchg
leave
ror
adc
jmp
(bad)
movs
cmps
lock
pusha
xchg
lds
sub
push
xchg
lock
jmp
test
into
gs
(bad)
test
and
lahf
jle
(bad)
int3
jmp
retf
dec
jmp
mov
btr
cmp
(bad)
out
stos
mov
mov
xrelease
mov
xor
leave
mov
shl
scas
adc
jne
out
xchg
rcr
test
xchg
(bad)
inc
std
xlat
cmp
lods
in
xchg
jmp
pop
imul
push
xchg
xchg
xchg
jecxz
inc
xor
nop
(bad)
ja
ret
or
add
or
aam
mov
xor
ret
mov
dec
fdivp
fist
lahf
(bad)
mov
jo
inc
in
add
lods
xchg
mov
mov
call
push
inc
popf
lds
and
cs
pop
cmp
push
cmp
push
mov
pop
call
lods
call
aas
stos
mov
mov
cmp
in
std
sub
movs
int
sub
div
xchg
sahf
(bad)
sbb
ds
sbb
fidiv
inc
loop
mov
or
test
dec
loopne
mov
fidiv
mov
lahf
jle
inc
aam
lahf
shr
adc
mov
div
adc
nop
sar
cmp
mov
mov
cld
outs
call
cmp
outs
cmp
cmp
out
stc
mov
cmp
leave
ins
jp
or
jnp
into
jmp
jg
ins
cmp
into
jmp
dec
stos
std
cli
into
jmp
or
mov
mov
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
movups
cld
into
lods
cmp
into
das
mov
mov
mov
mov
cld
retf
cld
retf
std
mov
(bad)
(bad)
retf
cld
or
clc
mov
retf
cld
mov
mov
ds
clc
aas
mov
cld
cld
mov
push
jbe
xchg
(bad)
(bad)
push
xor
adc
dec
xor
sahf
push
(bad)
cld
sbb
adc
pop
cmp
or
into
push
pop
push
adc
adc
imul
clc
cld
retf
in
inc
cmps
and
mov
mov
stos
xchg
popa
xchg
ins
sbb
in
pop
sbb
pop
cmp
aam
xchg
std
shr
jge
out
retf
push
mov
daa
(bad)
sbb
lods
adc
cdq
outs
lock
clc
cld
retf
cli
xchg
xor
out
xchg
ret
xchg
or
add
xor
popf
pop
sbb
and
cmp
or
xchg
sbb
inc
sub
push
bound
call
clc
cmp
mov
cmp
aas
lods
test
test
scas
mov
(bad)
jo
loop
retf
rcr
add
inc
or
(bad)
js
(bad)
push
jg
jmp
into
popa
push
es
repz
cmp
popf
xchg
push
jg
inc
lods
rol
daa
or
dec
push
or
xchg
test
js
or
js
leave
push
pop
in
push
jo
mov
xor
imul
and
cmp
(bad)
clc
cld
retf
rcl
out
or
adc
xchg
mov
aas
adc
ins
inc
pop
ficomp
dec
fwait
adc
mov
sub
clc
js
jle
sbb
stos
ror
sub
(bad)
out
cli
das
test
mov
rcr
addr16
inc
or
into
lock
scas
popa
inc
push
test
or
fcomp
and
or
xchg
mov
sub
add
or
clc
mov
or
ins
inc
sbb
jns
mov
pop
aaa
push
mov
out
pushf
mov
and
enter
mov
mov
jae
xchg
mov
sub
add
push
dec
ins
fidivr
leave
leave
mov
pop
xchg
loop
lock
xor
fcomp
sub
test
dec
rol
push
dec
adc
repnz
sti
jp
jmp
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
lock
scas
clc
cld
retf
cld
retf
cld
or
mov
mov
inc
loopne
inc
xor
scas
clc
cld
retf
cld
retf
cld
xchg
outs
pop
and
shl
rol
clc
cld
retf
cld
retf
cmc
lea
(bad)
cld
lahf
clc
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
ret
sti
scas
repz
mov
stc
cmp
retf
cld
retf
outs
clc
mov
iret
cmps
mov
xor
cmc
ins
sahf
push
in
adc
cld
mov
clc
cld
mov
clc
movs
js
cwde
pushf
and
push
mov
mov
imul
xor
pop
xor
push
in
retf
cld
lods
loop
lds
gs
mov
mov
pushf
fstp
cs
inc
mov
mov
xor
sbb
mov
(bad)
cld
adc
(bad)
push
inc
retf
out
mov
dec
xchg
cwde
ss
fsub
icebp
sub
xlat
add
and
cmp
in
mov
xchg
mov
pop
gs
hlt
in
push
pushf
pushf
loope
sbb
add
push
sub
and
xchg
outs
fstp
scas
mov
ins
ss
sar
int3
mov
mov
inc
std
push
lock
rcl
xchg
inc
out
dec
xor
test
neg
inc
aaa
fmul
push
aaa
into
xchg
push
outs
scas
pop
xor
add
repz
xor
xor
out
stos
add
repz
push
jb
jmp
cmp
call
add
mov
retf
add
mov
loopne
dec
pop
aad
dec
mov
std
pop
adc
enter
aam
jo
mov
and
xchg
dec
inc
rol
int3
and
cdq
sbb
mov
lea
mul
mov
imul
dec
sub
scas
cmc
jmp
jno
jb
mov
das
sub
sub
add
sar
xchg
iret
xchg
inc
cmp
cmp
clc
stos
(bad)
mov
loop
mov
(bad)
(bad)
(bad)
popa
enter
sub
mov
inc
icebp
ins
arpl
fwait
and
and
js
add
rcr
lods
push
shl
push
mov
cmp
(bad)
push
fisub
fmul
aas
ja
sti
je
rcl
pop
aas
call
inc
xchg
imul
xor
arpl
cwde
movs
fiadd
xchg
and
adc
mov
fmul
mov
and
je
test
call
push
inc
add
adc
sbb
xor
xor
js
pop
test
mov
outs
mov
xchg
test
cmps
mov
out
addr16
xchg
or
xor
dec
ds
fst
cs
push
jbe
cmps
sbb
or
cld
cld
retf
cld
dec
scas
mov
mov
or
nop
mov
mov
push
call
lock
xchg
les
cmps
call
and
xor
cld
scas
mov
xor
loope
cmps
repnz
mul
ins
dec
rcr
call
jg
push
dec
mov
mov
push
or
add
push
ret
mov
or
adc
add
dec
mov
shl
mov
adc
mov
push
push
popa
or
dec
push
lock
push
(bad)
imul
(bad)
test
imul
aam
mov
and
repnz
jle
imul
js
test
pop
dec
in
sbb
jl
sbb
fild
jno
push
xchg
mov
sub
sbb
and
inc
outs
inc
ficomp
repz
aas
xchg
fwait
mov
or
cmp
scas
jl
popf
dec
test
pop
cli
mov
nop
cs
fisttp
add
mov
lods
mov
mov
push
je
adc
sub
pop
pop
in
jmp
iret
je
xchg
in
dec
or
retf
and
inc
into
push
popa
retf
inc
jbe
outs
mov
push
sub
mov
push
cmc
sbb
fs
mov
mov
mov
adc
push
sahf
push
stos
dec
arpl
mov
gs
outs
and
cli
in
(bad)
in
mov
mov
ret
jle
dec
mov
fbstp
mov
sti
push
scas
jp
xchg
cmps
ja
leave
ror
jmp
cmp
hlt
fnop
xor
sub
push
popf
call
lds
fs
repz
movs
mov
xor
je
adc
rcl
inc
aad
outs
xlat
add
cmp
cld
inc
imul
cld
out
rol
fstp
add
pop
mov
iret
jo
push
dec
mov
push
mov
fiadd
dec
mov
push
mov
fiadd
dec
mov
push
mov
(bad)
and
push
cmp
sbb
and
cs
stc
sti
xchg
mulps
test
mov
lods
push
mov
sub
mov
and
hlt
xor
movs
mov
mov
mov
pop
mov
mov
repz
jge
jno
pop
popa
and
sub
mov
sub
pop
mov
xchg
sbb
adc
fsubr
add
jp
lds
fwait
mov
mov
cdq
scas
test
pop
pop
scas
ds
mov
leave
dec
push
ds
(bad)
cli
jb
std
or
mov
pop
jmp
(bad)
pop
test
mov
call
pop
or
std
push
das
jmp
ins
popf
push
push
xchg
aas
in
push
pop
not
mov
or
es
imul
(bad)
retf
push
pusha
arpl
sbb
ja
xchg
mov
mov
xchg
hlt
lock
add
jle
mov
ret
mov
retf
xchg
aas
lahf
and
ja
loope
stos
cmc
inc
ret
jno
xchg
nop
mov
xor
mov
and
jp
aaa
cdq
sbb
int3
push
punpckldq
fdiv
bound
inc
rcl
(bad)
fwait
ret
jno
das
cmps
mov
aam
pusha
and
mov
mov
sub
xor
loopne
xchg
or
or
gs
fsubr
retf
popf
mov
jno
shr
mov
outs
sbb
jns
fs
repz
jl
pop
jmp
xor
jmp
loop
int
inc
jne
jmp
jg
inc
imul
jns
xchg
popf
cmp
mov
dec
and
es
and
mov
sub
or
mov
jne
cmp
ja
xchg
jne
or
or
js
cmp
es
lods
mov
mov
scas
mov
aaa
ss
xor
mov
sbb
mov
ins
jb
fdivrp
call
push
imul
or
cld
cld
or
clc
mov
retf
scas
clc
mov
mov
clc
std
sub
mov
fisub
mov
push
cmps
xor
pop
call
lods
sahf
mov
in
repz
cld
scas
mov
jae
xchg
lock
mov
fistp
dec
jp
mov
xor
adc
add
ffree
std
cli
scas
call
rep
dec
pop
jo
mov
pop
mov
adc
mov
jb
shl
stc
fild
and
jge
inc
inc
movs
add
push
mov
clc
xchg
pop
int3
retf
test
std
cmp
popf
inc
cmp
imul
lock
in
in
sub
adc
inc
add
inc
sbb
retf
mov
test
xor
aad
jecxz
xchg
retf
pop
mul
jo
jge
pop
(bad)
jg
dec
pop
popf
mov
stos
gs
cmps
jbe
and
jno
js
ja
sub
jae
(bad)
ja
mov
or
pop
mov
rcr
xchg
mov
cmps
stos
adc
ret
cmps
stos
adc
pop
fistp
and
jbe
stos
sub
mov
rol
add
dec
push
mov
mov
gs
sar
mov
or
popw
ror
inc
jno
jle
adc
fisttp
inc
out
jmp
jge
mov
bnd
sub
out
loop
es
mov
shl
adc
outs
mov
pop
mov
and
pop
inc
adc
ror
std
in
nop
dec
shl
sbb
ja
loope
sub
scas
test
shl
(bad)
shl
add
jb
(bad)
mov
ror
ins
sub
adc
adc
loope
xor
mov
cmc
out
mov
mov
fdivr
fsubr
mov
jl
sub
fcmovnb
jb
ins
sbb
inc
dec
das
scas
fild
jnp
stc
cli
pusha
adc
cmp
xchg
div
jg
and
dec
jg
or
(bad)
shl
add
jb
(bad)
mov
ror
in
test
outs
cdq
xchg
sahf
jne
cli
lods
test
inc
cmc
bound
imul
lds
xchg
int3
shl
cmp
stos
outs
xchg
stos
adc
iret
fsub
ins
push
lods
inc
rol
div
inc
mov
test
add
or
or
cmps
cmp
(bad)
daa
nop
push
popa
sub
fs
sub
iret
gs
xor
cdq
mov
mov
bnd
mov
mov
cmc
int3
sbb
sbb
cmp
stos
sbb
(bad)
adc
cmp
pop
sbb
and
mov
fiadd
loop
push
fdiv
(bad)
out
pop
sqrtps
xchg
or
inc
stos
jl
dec
ss
sti
scas
jmp
ins
cmp
dec
outs
clc
cld
retf
cld
dec
outs
clc
mov
dec
imul
and
jno
xchg
lods
pop
jae
pushf
mov
aaa
cwde
pop
scas
ret
mov
cmps
mov
fidivr
enter
loopne
and
into
jl
out
clc
cld
or
clc
jg
daa
stos
mov
clc
push
jae
pop
xor
stos
fdivp
pop
add
dec
cwde
dec
add
int3
lods
pop
inc
loopne
or
adc
lea
jns
inc
imul
xchg
sahf
push
cmc
in
mov
inc
sub
ret
(bad)
dec
arpl
in
shl
xchg
jle
loopne
inc
xchg
arpl
add
sbb
adc
iret
dec
mov
pop
adc
ins
fnstsw
lds
or
jmp
push
in
and
mov
and
outs
std
and
pop
and
push
test
and
in
fmul
(bad)
hlt
repnz
or
jne
data16
xchg
xor
pop
mov
fstp
mov
mov
mov
add
loop
mov
cmp
and
sub
mov
jbe
aas
test
mov
adc
(bad)
mov
ds
xor
or
sbb
ja
jae
xchg
xchg
jae
pushf
jbe
dec
pusha
mov
add
sbb
pop
cmp
loope
sub
xchg
call
in
mov
outs
cs
mov
test
aam
cmp
push
xchg
mov
stos
shr
cmp
ret
jl
xor
dec
pushf
idiv
inc
cmp
inc
repnz
pop
inc
push
ja
arpl
mov
fld
mov
(bad)
push
jmp
call
sbb
sub
es
xchg
xor
(bad)
xor
jle
ja
fadd
pop
mov
hlt
adc
das
nop
mov
(bad)
jo
pop
jl
lods
pop
mov
or
cli
mov
add
inc
aas
clc
dec
mov
popf
sbb
pop
sti
adc
mov
arpl
jp
jle
call
int3
dec
xchg
shl
movs
loop
pop
jle
dec
cmps
test
and
cld
out
dec
sbb
jno
mov
out
mov
mov
in
add
ins
sbb
ins
fist
lea
(bad)
shr
xchg
inc
les
sbb
mov
test
sbb
fadd
std
cmp
inc
jmp
or
pop
repz
xchg
lds
xchg
push
rcr
gs
test
push
pop
ret
addr16
sbb
div
loop
dec
jge
or
push
lock
cmp
xchg
repz
je
push
xchg
pop
bound
jmp
push
ins
js
xor
mov
and
mov
call
imul
dec
mov
mov
or
adc
inc
cdq
repnz
mov
cwde
repnz
cwde
out
push
add
test
jne
in
mov
lods
push
pop
cli
pop
mov
ins
pop
cdq
add
add
ret
sbb
jns
arpl
or
aam
dec
xlat
push
mov
cmps
popa
out
pop
xchg
jne
ss
sbb
inc
test
jl
cmp
adc
add
call
loopne
cmp
(bad)
mov
jbe
div
mov
mov
or
dec
sbb
or
pop
ins
dec
and
jmp
ins
adc
jmp
jae
xchg
(bad)
lock
js
sti
mov
dec
cmc
inc
inc
fldcw
nop
push
outs
rcr
sub
dec
imul
out
movs
lea
inc
pop
jae
pop
mov
loop
clc
ss
pop
sar
gs
pop
es
xchg
cmc
xor
fwait
and
lods
push
inc
cmp
repz
dec
mov
ss
icebp
setne
in
loope
xchg
and
inc
pop
(bad)
fisttp
mov
jge
in
sbb
aaa
je
sub
push
lods
jge
out
vrcpps
in
jo
div
jl
pusha
cmps
xor
stos
add
push
cmp
(bad)
cwde
adc
xchg
stos
mov
into
jb
xchg
pop
jmp
repnz
jnp
jnp
aas
shr
mov
and
loope
add
add
call
mov
adc
jecxz
jns
jle
add
dec
xor
adc
retf
cmp
cmp
lods
xor
push
clc
aad
jno
xchg
dec
mov
adc
sub
leave
cs
sbb
fmulp
data16
push
mov
lds
xor
and
mov
xchg
cmp
mov
inc
push
enter
cmp
shl
cmp
jle
and
or
and
xchg
push
lds
push
popa
ja
cmp
cmps
mov
sub
sub
add
(bad)
mov
loope
pushf
test
jecxz
ret
add
mov
popa
sbb
cmp
sbb
or
ret
fdivr
data16
call
and
rcl
jne
das
sub
pop
dec
jns
mov
ror
(bad)
or
mov
call
idiv
scas
je
imul
sub
bound
outs
sub
iret
fldcw
in
cmp
xor
aaa
or
cld
inc
mov
fwait
dec
(bad)
jl
out
mov
jl
rol
aam
bnd
jns
adc
sbb
push
mov
pop
jmp
daa
std
push
push
cmp
ss
pusha
jle
mov
mov
add
dec
test
mov
sbb
bound
push
push
add
sbb
inc
jb
xchg
inc
and
and
mov
int
movs
cld
cld
or
mov
mov
mov
mov
or
aam
xchg
mov
shl
mov
cmp
mov
mov
cli
dec
lods
mov
stc
ja
bound
dec
pop
retf
add
jmp
aad
test
cmps
mov
ror
adc
sbb
mov
mul
popa
pop
pushf
and
arpl
arpl
rcl
pop
inc
rcl
or
rcr
xor
or
push
loope
mov
xor
push
stc
jg
bound
dec
pop
movs
pop
test
and
ins
pop
mov
(bad)
fcomp
and
enter
adc
bound
jns
jg
pop
push
sub
ret
out
test
jno
dec
cmp
mov
das
push
popf
pop
mov
in
gs
sbb
fisttp
mov
dec
enter
out
mov
rol
stc
repnz
xchg
pop
(bad)
mov
xchg
fisubr
cmps
cmp
and
adc
inc
xchg
int3
loope
fadd
sti
mov
adc
xchg
lods
push
mov
ror
sub
pop
test
jno
cmp
imul
mov
and
mov
aad
icebp
cmc
add
(bad)
adc
pop
test
jb
inc
mov
out
pop
and
repnz
retf
out
(bad)
cs
xchg
pop
inc
cmp
inc
(bad)
jl
xchg
pop
inc
cmp
mov
test
sub
addr16
adc
jo
pop
(bad)
or
jp
xor
nop
clc
dec
xchg
jge
pop
(bad)
jmp
sbb
dec
mov
cs
hlt
pop
std
sar
faddp
dec
std
fimul
(bad)
cld
dec
mov
cld
lds
ret
cmp
stos
xor
popf
das
or
adc
sub
cmp
repnz
out
xor
dec
mov
stos
pop
enter
retf
into
cmc
xbegin
and
ins
lock
sub
ss
sbb
cdq
pop
sahf
addr16
cs
pop
jle
or
test
dec
ret
aam
dec
retf
gs
outs
rcl
push
sbb
sbb
mov
call
jecxz
fs
lods
pop
xlat
stos
aad
jbe
inc
push
mov
mov
jno
pop
or
jmp
mov
dec
jns
retf
fmul
sahf
ret
arpl
call
xchg
dec
add
sar
cmp
mov
and
cwde
inc
jbe
movs
jns
inc
mov
scas
inc
jnp
cmp
pop
mov
cli
ins
xor
into
sub
dec
popa
push
lods
pop
mov
and
fldcw
popa
mov
test
ins
dec
call
push
xchg
daa
or
mov
mov
adc
pop
in
cmp
cli
dec
ss
inc
les
iret
fbld
aaa
cmp
scas
add
pop
pushf
shl
lea
fadd
enter
in
(bad)
(bad)
jbe
or
(bad)
dec
js
inc
fmul
xor
cmp
(bad)
jmp
adc
xor
jmp
push
out
iret
or
xchg
in
iret
cmps
jb
dec
mov
hlt
outs
mov
dec
mul
mov
push
imul
gs
aad
js
(bad)
cmp
push
cmp
leave
fsubr
loop
mov
mov
mov
or
sti
sbb
jl
inc
repz
mov
push
xchg
jmp
retf
and
ret
in
xchg
adc
(bad)
xor
sar
cmp
ins
inc
fisttp
mov
inc
sub
imul
dec
push
je
pop
repnz
add
push
out
loope
dec
ins
adc
adc
out
clc
cld
retf
jl
scas
jl
push
gs
les
pushf
outs
inc
retf
jmp
push
stos
inc
jmp
mov
jl
retf
jmp
or
scas
mov
arpl
scas
std
je
fsub
cmps
imul
pushf
scas
lods
cli
jmp
data16
mov
cdq
cmp
sub
cld
inc
js
pop
sbb
inc
retf
jmp
es
scas
inc
retf
jmp
es
scas
inc
retf
jmp
es
scas
inc
retf
jmp
es
scas
inc
retf
jmp
es
scas
inc
retf
jmp
push
pushf
cs
retf
jmp
and
cmc
scas
mov
pop
stos
inc
retf
jmp
es
scas
inc
retf
jmp
es
scas
inc
retf
jmp
in
cld
mov
mov
jl
scas
clc
mov
into
out
mov
call
cwde
(bad)
rol
mov
fidiv
mov
xor
mov
dec
mov
imul
imul
sub
cmps
int
xchg
xor
xor
pop
ret
xchg
jmp
jb
test
push
sub
imul
mov
dec
nop
sahf
test
jnp
sub
cmps
jmp
cld
in
jb
in
mov
(bad)
mov
fwait
pushf
dec
pop
test
fisttp
mov
jns
les
jg
movs
loope
loopne
dec
lock
inc
int
into
add
test
mov
jmp
sbb
movs
movs
jnp
sub
aam
or
sbb
rcr
in
xor
loop
push
fstp
mov
ret
out
sub
sub
add
fisttp
sub
dec
test
(bad)
adc
pushf
or
lahf
in
test
popa
popf
push
add
mov
mov
cmp
pop
xor
dec
repnz
js
jmp
imul
xor
mov
sub
adc
mov
sub
adc
mov
sub
ficom
jl
jno
sub
inc
pop
ja
sbb
jne
inc
inc
sub
inc
pop
ja
pop
es
not
pop
outs
out
call
or
cdq
sub
cmp
jge
mov
dec
adc
lock
jo
pop
pop
sahf
mov
push
xchg
push
pop
inc
arpl
xchg
inc
xor
jp
dec
push
rol
add
pop
push
or
pop
bound
shl
popa
int3
add
push
jmp
jns
(bad)
sub
div
stos
mov
loop
or
mov
jbe
fmul
jne
call
add
cli
xchg
js
add
aam
inc
cmp
addr16
sub
or
dec
test
das
mov
in
ins
mov
arpl
daa
pusha
hlt
add
movs
adc
stos
cmp
xor
adc
mov
add
nop
dec
adc
adc
jmp
ror
mov
clc
inc
jg
jae
js
dec
neg
or
out
sti
jg
sbb
or
popf
push
ret
xchg
push
arpl
inc
lea
or
mov
mov
int
push
stc
inc
inc
enter
xor
mov
xor
mov
cmp
scas
add
xchg
push
test
dec
retf
mov
xor
ja
xor
rol
sub
jle
jbe
stc
es
push
pop
xchg
cmp
(bad)
inc
popf
shl
jecxz
adc
rcr
aas
sbb
push
dec
xchg
stos
aaa
xchg
rcr
daa
pop
das
xlat
jno
stos
enter
nop
mov
(bad)
arpl
test
scas
and
dec
out
dec
loopne
cli
fisttp
cmp
lods
fmul
ins
dec
pop
pop
sbb
xor
scas
cmp
xbegin
cmc
sub
dec
dec
sahf
push
jo
xchg
mov
ins
iret
sub
into
dec
in
xchg
stc
pop
fbld
mov
or
or
jae
dec
repz
dec
dec
pop
inc
in
dec
cmps
lds
jmp
std
sub
jbe
mov
sub
out
adc
stos
mov
jge
scas
cmp
clc
cld
retf
cld
mov
mov
call
mov
add
repnz
call
ret
cld
scas
mov
jae
outs
push
(bad)
test
dec
inc
loope
or
xor
pop
out
xchg
cwde
jbe
fwait
ss
jae
mov
cmp
jg
mov
enter
add
les
and
cdq
sub
jmp
div
push
mov
dec
sahf
xchg
jb
push
lods
xchg
jmp
je
enter
(bad)
jae
call
(bad)
out
arpl
outs
lock
fdiv
and
mov
aaa
enter
push
ret
jecxz
sbb
out
xor
stc
outs
dec
jns
push
mov
inc
cmc
xchg
test
mov
or
je
call
setno
xchg
imul
stos
repnz
add
in
data16
lock
mov
dec
pop
dec
push
loopne
mov
test
out
hlt
and
stc
mov
mov
in
push
sub
push
dec
mov
test
jnp
mov
xor
retf
repnz
mov
cld
out
mov
cld
mov
pop
(bad)
mov
xchg
mov
adc
(bad)
aam
iret
daa
mov
xor
mov
out
and
mov
pop
fstp
fcomip
push
mov
inc
mov
repnz
mov
push
inc
cmp
popa
dec
mov
in
ror
dec
pushf
in
and
push
or
and
sbb
aam
aam
test
lds
lds
outs
loope
mov
shl
pop
jmp
mov
sti
or
(bad)
jle
movs
pop
pop
and
test
or
jbe
push
sahf
pop
shl
aaa
not
add
cwde
sub
jge
in
ja
test
scas
loopne
adc
paddusw
cs
imul
out
cmp
retf
adc
mov
gs
fidiv
add
fwait
and
sub
lods
mov
loopne
ins
jl
xor
lods
xchg
fimul
mov
fimul
(bad)
loopne
loopne
dec
retf
pop
jnp
sbb
retf
es
call
enter
popa
jmp
inc
loop
jbe
mov
inc
sbb
int3
push
ret
mov
mov
scas
xchg
(bad)
fld
pusha
arpl
pop
outs
inc
jecxz
out
pop
out
je
xor
dec
jne
cwde
loopne
(bad)
ror
sti
cli
jmp
stc
cmp
aas
mov
jle
add
out
mov
pop
ret
hlt
xor
inc
sbb
out
xlat
in
xor
mov
in
fdivr
iret
push
jmp
and
lods
les
cmps
add
ror
aas
lahf
retf
push
mov
sahf
enter
mov
jns
in
xor
cmps
mov
mov
mov
mov
mov
mov
mov
out
mov
inc
retf
mov
clc
dec
test
mov
dec
arpl
shl
ret
xchg
push
mov
fwait
out
movs
movs
(bad)
loop
int3
arpl
cmps
mov
(bad)
push
xor
repnz
xchg
push
test
enter
xchg
iret
xor
cmps
icebp
sbb
dec
ins
mov
inc
fbld
leave
or
imul
and
push
cmp
xchg
cld
sub
sbb
pusha
stos
inc
push
fistp
mov
sbb
fxch
test
(bad)
jl
mov
cmp
mov
lods
movs
cmps
sbb
stos
or
pusha
sub
mov
les
push
add
or
fwait
jae
shr
clc
push
xlat
cmp
loopne
cmps
mov
je
adc
popa
iret
ficomp
add
(bad)
iret
cmp
adc
loop
adc
fs
clc
pop
jecxz
inc
clc
inc
es
push
scas
sub
pop
push
(bad)
fst
test
mov
sbb
mov
pop
scas
scas
jmp
sbb
and
retf
leave
or
inc
ss
fld
xchg
jmp
(bad)
xchg
sbb
jmp
jge
aaa
(bad)
jmp
call
cwde
sar
aad
addr16
in
jl
inc
jg
pop
scas
and
xor
test
call
pusha
mov
dec
jns
add
stc
push
je
adc
pop
mov
mov
xchg
jmp
inc
lods
push
inc
pop
add
or
mov
xchg
adc
add
idiv
cmp
fnsave
jmp
lods
cmp
int3
call
jb
les
dec
add
popf
jnp
test
into
push
stos
fadd
cmp
push
stos
into
xchg
mov
xchg
push
and
mov
jb
dec
shr
inc
mov
mov
or
xchg
outs
jmp
mov
lea
dec
pusha
clc
adc
ins
mov
dec
jp
aaa
mov
mov
ret
push
dec
test
into
jb
mov
sbb
cmp
cmps
xor
inc
shl
in
into
ds
xchg
aaa
push
retf
mov
xlat
add
mov
cs
adc
jge
(bad)
repz
mov
shl
and
jmp
mov
mov
pop
pop
mov
aad
jbe
fs
ss
icebp
jl
cmp
xchg
(bad)
cdq
mov
ret
fstp
xor
push
pop
inc
daa
icebp
mov
mov
(bad)
jne
or
in
stos
bound
dec
cmps
dec
sbb
push
mov
popf
dec
mov
cs
sbb
fs
addr16
and
dec
clc
stos
inc
dec
mov
mov
jecxz
out
mov
cmp
xchg
push
mov
je
xchg
mov
sbb
nop
lods
dec
or
dec
pop
xchg
xchg
loop
inc
dec
lea
jnp
test
call
leave
shl
ret
pop
call
cs
test
fisub
in
cmp
aad
sbb
or
cwde
outs
pop
sub
push
aaa
scas
jns
pop
and
sahf
stc
mov
popa
inc
mov
rcr
inc
jg
fadd
dec
into
stc
xor
das
xchg
pop
mov
std
mov
and
icebp
push
push
aas
sbb
stos
in
jg
ins
sbb
jb
or
jns
jnp
cmps
out
xchg
fcomp
loopne
call
enter
in
dec
cwde
pop
jmp
popa
imul
test
dec
mov
ficom
inc
rcr
xchg
ja
fcmovnbe
jb
lods
push
test
enter
int
outs
in
cmps
dec
xor
retf
or
mov
std
js
stos
ss
lock
xor
and
mov
and
ss
push
add
inc
outs
push
push
fnstsw
dec
dec
(bad)
loopne
das
call
mov
mov
fild
test
out
je
cmps
nop
jmp
js
push
mov
repnz
(bad)
in
adc
mov
jno
xchg
dec
jnp
pop
arpl
sti
add
call
sub
fdivp
pop
xor
je
mov
jnp
std
jmp
ins
xchg
push
mov
es
movs
cmps
int3
mov
lods
push
mov
iret
loope
mov
movs
popf
aaa
les
mov
dec
sbb
shr
add
push
xor
jl
fwait
cmp
clc
mov
or
cld
fisubr
cmp
das
js
or
cmp
outs
clc
std
retf
in
mov
dec
cs
ds
lods
sti
dec
cmp
dec
sub
mov
or
cld
stc
(bad)
or
cld
stc
iret
push
mov
(bad)
cmp
retf
out
stc
std
mov
mov
mov
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
cmp
jle
(bad)
mov
cld
cmp
jmp
jl
outs
(bad)
(bad)
retf
cld
dec
das
cmp
retf
mov
retf
cld
or
mov
cmp
out
clc
mov
retf
cld
retf
cld
mov
cmp
retf
or
ins
mov
cld
into
scas
mov
xchg
in
scas
clc
cld
retf
cld
retf
cld
fsub
cmp
lods
xor
cdq
retf
cld
retf
cld
retf
out
addr16
mov
mov
dec
mov
pop
adc
push
or
sbb
jl
scas
fsubr
retf
xlat
inc
xchg
into
inc
fsub
jge
stc
rol
or
out
lock
or
(bad)
pop
out
stos
in
pop
(bad)
imul
mov
es
mov
mov
retf
fidiv
mov
gs
lock
xchg
sbb
adc
arpl
jnp
push
or
les
shl
xchg
clc
cld
retf
cld
or
cmp
adc
popa
packsswb
jmp
mov
int
addr16
scas
clc
cld
out
mov
das
fnsetpm(287
and
xor
(bad)
(bad)
retf
jmp
push
mov
js
data16
fcomip
mov
and
push
dec
ins
jo
and
rcl
scas
mov
push
sub
scas
mov
jmp
scas
clc
in
out
mov
cld
or
iret
loope
add
scas
clc
std
loop
clc
cld
sub
push
inc
clc
scas
clc
cld
or
xchg
xchg
fdivp
mov
cmp
mov
sbb
pop
test
mov
popf
std
lods
retf
retf
(bad)
mov
lahf
jo
cmp
jmp
fdivr
sub
push
add
cmps
xchg
into
mov
retf
fstp
movs
adc
push
into
push
retf
imul
jp
dec
in
clc
jl
adc
xlat
das
arpl
ret
scas
enter
sbb
pushf
shl
add
push
in
xor
dec
adc
inc
loop
or
in
retf
cld
dec
outs
dec
(bad)
mov
push
jmp
add
jle
aaa
mov
retf
retf
inc
hlt
push
rol
test
mov
retf
lock
cmp
repnz
mov
repnz
pop
fldcw
repz
or
rol
xchg
leave
pop
retf
in
retf
out
jb
mov
inc
push
or
imul
mov
and
lock
adc
scas
clc
mov
dec
out
pop
iret
mov
pop
adc
adc
inc
cmp
(bad)
add
dec
cmp
pop
repnz
push
push
(bad)
jmp
inc
pop
jno
fisub
scas
clc
cld
dec
iret
ss
or
pusha
stos
imul
clc
cld
mov
clc
cld
xor
jmp
cld
retf
cld
retf
cld
retf
(bad)
(bad)
clc
cld
retf
cld
retf
cld
mov
sahf
clc
ss
das
js
dec
out
cmp
clc
cld
retf
cld
retf
cld
mov
stc
cmp
and
stc
iret
jmp
mov
sub
retf
mov
cld
cmc
outs
out
push
cwde
sti
inc
pop
test
iret
or
inc
je
add
pop
pop
push
push
out
imul
fwait
jbe
test
stos
out
sbb
(bad)
(bad)
out
adc
jge
aas
enter
cmc
(bad)
loope
adc
sbb
outs
mov
inc
shl
or
test
fnstcw
sub
xor
ror
stos
sahf
push
mov
add
das
rcr
add
ins
sub
lock
inc
sub
retf
xor
cld
pop
xchg
or
(bad)
scas
sbb
pop
dec
xchg
jmp
or
or
lea
xchg
inc
ror
data16
sti
ficomp
push
bsr
adc
dec
xchg
mov
pop
movs
adc
jb
(bad)
xchg
pop
cwde
inc
inc
clc
dec
pop
dec
das
popf
mov
cmp
mov
enter
or
aaa
push
(bad)
cmp
and
fst
cmp
aam
pop
adc
loopne
lds
cld
movs
mov
inc
mov
push
out
(bad)
xor
push
cmp
cdq
fsubrp
mov
mov
pop
gs
repz
dec
mov
mov
jp
push
iret
(bad)
loop
bound
xchg
sbb
sbb
imul
xchg
ja
pop
ret
dec
pop
das
and
xor
(bad)
pushf
sar
xchg
out
push
cld
sbb
pop
cmp
popf
scas
nop
and
movs
dec
(bad)
cmp
adc
int
sbb
bound
gs
scas
sti
inc
sub
xchg
mov
rep
dec
sahf
enter
xor
out
repz
adc
sti
outs
mov
mov
cld
or
mov
retf
cld
dec
outs
clc
mov
into
jecxz
xor
mov
mov
sahf
repz
lock
ds
mov
xor
das
pushf
in
cmc
scas
dec
ins
dec
pop
adc
ins
cmp
xor
sbb
out
rol
(bad)
mov
enter
jno
jmp
or
mov
add
(bad)
not
icebp
cmp
push
ins
ds
sar
repnz
in
leave
cmc
xchg
dec
stos
mov
xchg
loopne
stos
daa
push
mov
loop
dec
xchg
mov
or
mov
push
icebp
mov
movs
outs
pop
mov
cmp
push
sbb
or
rcr
pop
lods
fwait
adc
outs
fcom
add
cwde
lahf
pop
sbb
mov
stc
cmp
xor
dec
inc
das
jle
ret
or
jmp
sbb
and
mov
and
add
cmp
test
xchg
pop
daa
adc
into
inc
lock
fnstsw
adc
jecxz
fcmovnu
xchg
pop
mov
mov
sbb
(bad)
xchg
add
pusha
pop
jp
test
test
es
stos
data16
arpl
retf
jnp
test
pusha
stos
xchg
adc
cdq
movs
dec
xchg
(bad)
ret
out
jl
cmp
and
aad
aaa
imul
mov
and
fneni(8087
mov
jbe
rol
stos
jne
shl
call
lea
inc
inc
out
inc
pop
push
dec
pushf
aam
icebp
clc
fiadd
sub
xchg
cmp
les
fwait
cmp
pushf
retf
or
iret
dec
adc
ret
adc
and
sub
mov
push
cmp
pop
outs
js
xlat
fs
enter
addr16
mov
pushf
jge
mov
sbb
mov
push
mov
pop
scas
fisub
in
cmp
loop
mov
repz
imul
add
jmp
jb
cmp
mov
shl
sbb
retf
out
fs
adc
outs
jecxz
pusha
int3
jnp
outs
js
push
out
jb
cmps
leave
repnz
xchg
call
int3
xchg
fdivr
popf
sbb
sub
loope
pushf
xchg
and
xchg
sbb
aad
mov
xlat
xchg
sub
and
push
and
push
int
outs
retf
mov
or
adc
or
adc
movs
in
adc
mov
stos
and
ret
rcr
sti
mov
cmps
bnd
mov
jo
movs
sub
mov
jo
add
std
mov
or
or
dec
mov
mov
repz
loopne
sbb
mov
cmp
loopne
mov
push
push
add
sub
inc
xchg
ror
xor
mov
test
sbb
outs
pop
aaa
adc
push
stc
xchg
sar
das
retf
ret
sub
cmp
stos
mov
jl
outs
cmp
retf
scas
clc
mov
retf
cmp
mov
mov
xchg
retf
sar
sahf
fwait
add
add
xor
pop
aaa
movs
int3
mov
jge
inc
movups
cld
scas
mov
jae
adc
xchg
mov
jno
inc
or
push
fisttp
inc
sub
imul
or
dec
shl
shld
mov
dec
sub
or
cmc
mov
frstor
mov
xchg
ret
dec
or
mov
push
fwait
or
jae
das
xchg
jo
sub
out
icebp
sahf
stos
push
xchg
sbb
dec
or
call
pop
sbb
pop
lods
cwde
ins
xlat
sub
sub
pusha
inc
xchg
xchg
fmulp
aas
and
mov
fisttp
repnz
xor
xchg
scas
push
push
ror
dec
(bad)
scas
cmp
adc
xor
loop
pop
std
cmp
mov
lock
mov
xchg
push
lock
jl
icebp
repz
mov
mov
test
test
jmp
cmp
test
dec
dec
sbb
cli
dec
ds
cmp
xchg
add
movs
dec
int
pop
adc
push
(bad)
cmp
jnp
xor
sahf
mov
push
inc
sbb
push
cmps
xchg
cwde
fbld
(bad)
xchg
adc
std
jecxz
cdq
loope
ss
adc
cwde
adc
push
mov
fcmovu
fndisi(8087
or
inc
stc
lock
sbb
sbb
mov
mov
mov
mul
js
aam
xchg
push
push
mov
adc
std
add
ficomp
lds
sub
xchg
call
jb
ror
js
and
neg
mov
daa
dec
push
dec
pop
aas
retf
push
in
call
xor
mov
enter
push
and
ror
mov
repz
das
test
pop
inc
pushf
xchg
ficom
mov
mov
out
je
cmp
retf
(bad)
inc
cli
in
pop
fcomp
sbb
inc
int3
xlat
or
mov
imul
xor
neg
scas
jno
(bad)
int
mov
imul
sub
fdivr
adc
xchg
or
mov
and
mov
adc
cmp
mov
aas
jb
dec
cmp
shl
retf
adc
retf
sti
daa
or
dec
mov
lahf
xor
jns
int
jnp
mov
sbb
shl
(bad)
xchg
or
movs
pop
inc
cmp
js
jmp
mov
jno
bound
fldenv
inc
xor
movs
sub
imul
retf
xor
neg
imul
pop
push
xchg
push
inc
fwait
dec
in
mov
mov
mov
inc
dec
js
mov
jae
inc
scas
cmp
aas
ins
xchg
test
dec
xchg
shl
jge
int3
sbb
mov
mov
xor
mov
(bad)
or
dec
icebp
and
cld
mov
mov
cmp
(bad)
and
in
dec
outs
outs
fisttp
mov
fnstcw
pop
and
push
jp
imul
ss
jg
leave
mov
mov
leave
out
xor
popf
int
aaa
adc
jge
repz
cmp
pop
xchg
sub
ins
mov
div
rol
test
mov
mov
rol
lods
in
xchg
in
mov
or
mov
neg
inc
stos
mov
lock
sti
sub
test
xor
push
stos
ja
mov
aad
in
sahf
test
sbb
stos
loop
mov
mov
sar
aam
ss
pop
push
(bad)
push
dec
mov
xlat
rol
xchg
mov
test
clc
clc
mov
pushf
sub
inc
lods
outs
out
call
in
or
out
sahf
shl
and
sbb
dec
sbb
or
ds
mov
dec
dec
loopne
int
mov
in
in
jge
mov
retf
sub
fcomp
(bad)
call
adc
and
ror
sbb
imul
inc
(bad)
loopne
and
lock
imul
mov
push
shl
or
xor
in
xabort
mov
push
sbb
push
jmp
jae
push
das
sub
sub
and
call
outs
pop
(bad)
mov
(bad)
cmp
inc
in
dec
in
aam
inc
cdq
push
cmp
pop
sub
pop
push
push
lods
adc
stc
ret
std
cmp
adc
ret
pop
repnz
popa
xor
xor
fnstsw
add
(bad)
mov
cdq
rol
pop
aaa
loopne
xor
outs
popf
cmps
inc
xor
fmul
push
jge
call
push
nop
scas
cli
pop
push
cmp
sub
loopne
into
rcl
or
das
out
push
gs
adc
mov
mov
rcl
add
test
es
and
ds
inc
sbb
ds
fucomip
ss
add
mov
sub
dec
addr16
pop
rcr
nop
add
daa
or
jmp
ins
pop
lods
inc
jbe
rcl
adc
cmp
mov
mov
ss
(bad)
rol
into
and
test
aad
das
inc
cmps
ret
or
dec
mov
into
cld
mov
add
push
in
cmp
and
cwde
sbb
jnp
push
sbb
or
int3
mov
push
mov
jnp
push
add
adc
jbe
adc
imul
add
mov
das
dec
test
xor
js
dec
outs
clc
mov
retf
scas
clc
mov
retf
cmp
addr16
mov
(bad)
and
add
cwde
enter
rol
mov
into
jl
out
clc
cld
or
cmp
xor
std
cmp
inc
out
inc
cmp
and
pop
push
pop
cmp
push
test
mov
ss
xchg
mov
fsubr
add
lods
jmp
mov
jg
xchg
push
out
dec
pop
mov
mov
das
jle
or
mov
cmp
adc
mov
xchg
mov
sub
dec
(bad)
mov
cmp
loop
jbe
fcom
popa
(bad)
sub
and
gs
iret
xor
in
pop
mov
mov
jle
mov
adc
js
xor
nop
mov
fnstsw
hlt
push
dec
(bad)
not
push
mov
add
dec
repz
pop
gs
pop
jecxz
repnz
adc
sub
xor
mov
jp
adc
data16
xor
data16
retf
nop
cmp
push
mov
cli
lods
adc
push
jg
mov
stos
and
hlt
retf
xchg
xchg
xor
les
jo
inc
push
add
mov
jl
push
jnp
out
not
pop
fadd
add
loope
add
cli
sbb
cmps
fidivr
jae
add
and
and
jne
rol
stc
mov
cs
sar
xchg
dec
push
xor
mov
and
repnz
fwait
scas
jbe
mov
mov
inc
sub
lods
mov
cdq
mov
es
or
ja
mov
cmps
xchg
pop
push
lock
nop
sbb
pop
mov
cmp
xor
jmp
push
dec
stc
jo
xor
mov
mov
aas
retf
imul
xor
loop
out
pop
sub
xchg
mov
in
int
stos
adc
mov
lahf
retf
dec
int3
push
into
mov
popf
inc
int
popf
push
push
mov
mov
shr
and
ret
mov
and
xchg
add
test
ds
repnz
stos
xchg
sbb
into
cmc
or
int3
imul
sbb
test
mov
pop
adc
adc
xor
hlt
pmullw
add
into
fiadd
(bad)
xchg
outs
sub
test
dec
stc
adc
cmp
loope
ins
jecxz
dec
rcr
int
mov
or
rcl
sbb
ret
push
popa
test
out
xor
ret
mov
outs
fisubr
xchg
lods
ds
push
scas
mov
jb
mov
lods
sub
fisub
sub
vorps
out
add
in
mov
lock
stos
dec
and
test
aad
add
push
fimul
add
xchg
lock
sbb
std
sub
loop
dec
sub
cmc
das
aaa
xor
(bad)
sbb
or
imul
dec
in
or
xchg
test
or
cmp
xor
jg
mov
in
movs
nop
push
dec
scas
sub
xchg
bound
dec
push
inc
aam
sbb
jl
cld
mov
pop
test
mov
mov
aas
mov
(bad)
sahf
fwait
inc
fs
loopne
jnp
ins
xor
int
adc
fcom
mov
inc
add
sbb
cs
cmp
sti
movs
retf
ret
adc
sub
push
sti
push
int
pop
movs
es
test
mov
dec
shr
cld
cmp
imul
retf
fwait
ret
int
and
adc
pop
cli
sub
pop
ds
push
mov
jge
jl
fwait
movs
push
push
pop
cs
cmps
or
sbb
sahf
mov
cld
or
cmp
retf
cld
mov
cld
cld
and
test
jmp
out
enter
add
retf
mov
aad
xchg
mov
ret
aaa
inc
inc
mov
ret
sub
stc
and
sub
mov
in
into
sbb
dec
xchg
fnstcw
iret
xchg
aam
stos
sti
dec
add
adc
fs
xor
inc
ror
pushf
dec
ret
sub
inc
les
fldcw
sub
int
imul
(bad)
mov
mov
dec
icebp
neg
xchg
sub
rol
(bad)
xor
stc
stos
xchg
aas
imul
or
or
push
sub
inc
jae
mov
sti
dec
xor
(bad)
dec
js
inc
jo
xchg
xchg
(bad)
out
adc
add
cmp
jae
push
mov
mov
shl
sbb
jmp
add
xchg
inc
sub
call
pop
neg
mov
mov
xor
sub
push
jns
mov
pop
bound
aam
mov
scas
sub
sub
sbb
test
jle
popa
jle
xchg
push
xor
rcl
cmp
retf
jp
mov
jle
fisttp
pushf
xor
xchg
cmp
jmp
out
sub
mov
sti
ins
aaa
jg
dec
rcl
test
or
fwait
in
out
cs
cmp
clc
sti
popf
pop
jmp
xor
add
adc
cmp
push
xor
push
aas
add
lods
es
push
test
xchg
test
fidiv
ret
in
and
jp
rol
push
or
xor
clc
push
mov
dec
lods
out
mov
mov
mov
stos
or
loop
cmps
dec
inc
pop
std
sbb
sbb
popf
ficomp
jbe
and
dec
movs
(bad)
fidiv
jmp
imul
push
mov
sahf
aaa
lahf
arpl
mov
dec
xchg
cmps
out
(bad)
dec
adc
push
adc
jecxz
(bad)
(bad)
mov
inc
lahf
or
mov
xchg
mov
inc
sbb
mov
mov
and
dec
mov
rol
mov
js
daa
cmp
dec
imul
and
cmps
jb
mov
out
stc
mul
jns
aad
scas
jecxz
inc
aam
out
cwde
fstp
and
mov
xor
cs
rcpps
pop
cmps
loope
js
out
or
and
push
enter
xchg
(bad)
push
jmp
out
jmp
cmp
out
enter
out
scas
pop
icebp
and
loop
test
mov
push
(bad)
sti
sti
jle
jecxz
leave
mov
lea
adc
or
xchg
push
daa
push
je
adc
jns
pop
pop
mov
fldcw
std
jl
call
leave
call
int
call
int
call
int
call
push
rcr
clc
cld
retf
jl
scas
jl
mov
inc
mov
mov
inc
mov
daa
fldenv
mov
inc
sahf
cmps
daa
fldenv
mov
jmp
cmps
daa
fldenv
mov
sub
jns
mov
cmp
add
cld
je
or
dec
mov
mov
inc
dec
mov
mov
ret
daa
fldenv
jl
push
or
dec
nop
aas
fldenv
mov
inc
push
mov
fldenv
jl
or
dec
mov
jl
adc
push
inc
dec
(bad)
daa
fldenv
mov
inc
dec
and
bound
hlt
xor
push
ret
daa
pop
arpl
je
push
and
bound
xor
and
push
cmps
daa
daa
fldenv
mov
out
addr16
fldenv
mov
inc
mov
jns
xor
or
mov
daa
fldenv
mov
inc
mov
retf
cld
retf
(bad)
clc
cld
into
outs
cmp
sti
out
mov
retf
mov
mov
clc
cmp
scas
clc
cld
retf
mov
jecxz
call
out
jmp
nop
cli
dec
xor
cmp
mov
mov
pop
jb
jmp
and
hlt
test
cwde
mov
xor
dec
mov
paddb
mov
push
and
push
mov
out
repnz
cmc
scas
add
pop
add
fstp
icebp
cmp
mov
dec
shl
cmp
iret
fs
push
(bad)
inc
add
lods
loop
mov
mov
mov
je
xchg
mov
xor
xor
loope
in
xchg
push
out
or
mov
out
jge
ja
shr
add
retf
les
adc
adc
pusha
adc
repz
jmp
jmp
jae
jbe
inc
xor
out
les
jg
xor
jl
pusha
(bad)
pop
iret
xor
push
jmp
pop
ret
inc
xchg
enter
gs
pop
sub
call
outs
es
icebp
sub
(bad)
jo
lock
cmp
cmps
(bad)
leave
xchg
aas
ds
push
dec
sbb
push
push
inc
jp
clc
scas
sbb
repnz
jge
fcom
sbb
or
xor
or
dec
cmovg
jb
add
aaa
adc
imul
lahf
shl
mov
imul
cwde
mov
out
push
sbb
mov
lods
sti
cmp
add
ds
adc
leave
fcom
pop
stc
adc
mov
jge
pop
xor
xor
test
or
rcl
(bad)
mov
data16
loopne
mov
or
xchg
in
or
jnp
ror
loop
out
repnz
ins
adc
loop
mov
fiadd
push
outs
pop
out
out
add
jne
(bad)
ficomp
lods
xor
dec
fidiv
jle
cmp
cmp
enter
sti
add
inc
jns
aam
in
repnz
mov
xchg
push
push
idiv
jl
pop
jnp
xor
movs
out
sahf
fcomp
lock
in
pop
jmp
in
add
fucomp
and
jmp
and
iret
call
in
or
pop
inc
aad
inc
cmp
or
hlt
mov
jb
inc
test
(bad)
sti
mov
push
mov
inc
les
mov
or
mov
mov
mov
fisubr
or
cdq
lods
mov
or
mov
ror
dec
into
data16
push
xchg
dec
xor
test
add
(bad)
jl
je
jnp
inc
ficom
ins
pop
jae
lods
and
push
std
sub
lock
sbb
adc
mov
jae
mov
fisttp
mov
rcl
pushf
and
cwde
sub
or
push
fisub
fisubr
cwde
es
imul
jno
call
dec
(bad)
lea
out
cld
retf
mov
mov
mov
mov
mov
cwde
cwde
loop
lock
rol
cld
scas
mov
jae
pusha
dec
(bad)
pop
outs
pop
bound
xchg
std
mov
retf
mov
sub
loopne
test
xor
jmp
outs
ret
ret
sbb
cmp
mov
lods
mov
jnp
mov
mov
pop
in
fldenv
(bad)
mov
jbe
pextrw
dec
nop
repnz
lds
inc
aad
push
pop
retf
adc
pop
test
ret
cld
pop
out
sub
cmp
cmp
pop
cmps
shl
jae
xlat
mov
mov
cmp
cmp
sub
xchg
lds
test
or
and
les
or
xor
nop
aas
or
in
jne
push
mov
push
or
les
sub
imul
nop
stos
cmovp
movs
mov
retf
bound
ret
jnp
gs
add
sbb
xacquire
lods
add
jno
in
mov
xchg
mov
mov
push
and
scas
jmp
fmulp
out
add
fist
dec
mov
fcmove
popf
jns
inc
imul
nop
int
pop
sub
fs
pop
sbb
mov
call
pusha
(bad)
and
std
xlat
push
in
cmps
iret
(bad)
lds
aam
xchg
push
jae
cmp
shr
add
jns
icebp
and
or
and
adc
int3
ins
mov
xchg
mov
xchg
sbb
mov
ins
add
jle
addr16
(bad)
xchg
mov
in
lods
pop
imul
lock
jp
mov
xchg
rol
adc
jmp
mov
int
movs
out
push
xchg
mov
into
fild
jge
movs
stos
outs
shl
xlat
mov
dec
mov
xchg
sti
fst
jb
pop
gs
and
and
daa
sar
push
scas
sbb
sbb
adc
mov
je
movs
push
inc
xor
xchg
lds
mov
pop
out
inc
sbb
pop
arpl
and
por
in
mov
push
icebp
mov
xor
pop
mov
cmp
mov
(bad)
cmp
shl
mov
(bad)
lea
xor
ins
dec
(bad)
lods
mov
mov
pusha
jl
xor
jmp
(bad)
and
xlat
ins
call
cwde
(bad)
and
cmp
mov
outs
cmc
push
cmc
pusha
inc
sub
xor
cmps
cmp
fdivr
sbb
das
push
xor
stc
mov
cs
lods
and
pushf
jge
dec
mov
les
fldcw
fs
rcr
push
sti
icebp
cmp
or
rcl
add
fbstp
or
jbe
push
test
aaa
clc
jmp
jecxz
push
lods
out
sbb
ja
lods
jb
sbb
fsubr
dec
fdivrp
data16
mov
outs
mov
or
outs
xor
pushf
imul
(bad)
cmp
or
lods
xchg
nop
lds
mov
pop
cwde
pop
sbb
push
stos
in
cmps
icebp
vcvtsd2si
test
lds
adc
test
push
out
lahf
and
jo
inc
inc
int3
retf
aam
loopne
or
retf
adc
pop
mov
dec
gs
mov
fs
repnz
imul
and
fsubr
sbb
mov
cmp
pop
loopne
add
jae
cmp
add
cli
mov
ins
pop
pop
div
mov
mov
mov
add
push
inc
shl
dec
xchg
inc
and
cmp
and
cwde
punpckhwd
xor
mov
xchg
cmp
push
push
cli
test
mov
clc
lods
fisubr
mov
fcmove
lods
or
cli
fwait
xchg
rol
sbb
push
sub
cwde
dec
in
cdq
pop
test
push
test
mov
repz
dec
pop
scas
in
shl
int
dec
shl
cmps
xor
mov
aam
(bad)
mov
aaa
mov
shl
aas
sub
lock
clc
ss
dec
dec
test
out
popf
popa
lock
sub
lods
ret
movs
xchg
pushf
or
lea
lea
das
js
dec
outs
clc
jl
scas
clc
cmp
scas
mov
mov
mov
cld
mov
call
mov
or
pop
cli
ss
aas
dec
scas
xchg
pop
or
inc
inc
das
loope
mov
mov
xor
or
aaa
pop
pop
jo
fisttp
xchg
mov
jb
lods
clc
xchg
ja
or
ret
sti
and
mov
test
xchg
test
in
ss
rol
jmp
fucomi
outs
scas
push
xchg
repz
sbb
(bad)
nop
push
cmp
(bad)
retf
pop
out
mov
push
mov
test
ins
mov
sub
mov
out
pop
ds
into
lds
xchg
jg
fisubr
ja
jg
shr
outs
fcmovu
jmp
adc
mov
stos
idiv
fisttp
or
or
cmps
scas
dec
xlat
or
mov
lods
or
jmp
lahf
sub
das
ins
xor
jecxz
mov
lods
and
push
dec
push
loopne
mov
mov
pop
add
pop
out
bound
xor
fndisi(8087
push
loopne
fdivrp
iret
push
pop
aaa
nop
repz
push
mul
not
gs
jmp
sub
sub
jle
inc
stos
push
stos
scas
dec
mov
adc
adc
retf
loopne
jns
cmps
dec
shl
rcr
mov
retf
pop
cmp
xchg
xchg
jns
and
sbb
push
ins
or
inc
mov
cmp
dec
std
dec
std
test
stc
outs
push
dec
les
scas
test
cmp
pop
dec
cmps
or
jae
mov
stc
xchg
data16
push
xlat
lds
leave
jl
pop
mov
aad
inc
out
mov
jb
stos
pushf
fcos
xor
clc
sbb
xchg
movs
xor
scas
xchg
mov
sub
fwait
je
jnp
xor
push
mov
sub
out
jo
jp
cmp
add
jl
(bad)
repnz
addr16
jae
int
lock
in
dec
mov
movs
sar
mov
out
rcr
int3
call
and
inc
adc
cli
aaa
jne
cmp
lea
into
(bad)
and
ja
and
mov
mov
fist
mov
mov
xchg
ja
push
retf
in
jmp
test
add
sbb
mov
pop
dec
or
imul
loop
dec
frstor
loopne
neg
mov
push
shl
(bad)
push
aam
das
(bad)
fadd
stos
in
pop
stc
mov
inc
iret
push
jecxz
sahf
jl
into
sub
dec
ins
push
clc
pop
or
mov
mov
out
pop
inc
mov
retf
jno
ret
add
cmc
loop
(bad)
mov
add
dec
ss
jne
jmp
jns
test
enter
xor
add
jge
ds
mov
xchg
adc
mul
jmp
loop
xor
push
mov
stc
cdq
xchg
fcmovb
push
idiv
cld
xor
call
fwait
inc
pusha
jns
inc
lods
dec
mov
test
in
out
fldenv
push
sti
push
in
inc
or
(bad)
repnz
inc
repz
ret
push
jecxz
rcl
inc
repnz
call
mov
iret
scas
das
fimul
in
ror
aas
jo
add
(bad)
lock
ficomp
pop
jns
and
add
sub
out
ret
mov
retf
mov
in
mov
cdq
fbstp
mov
(bad)
idiv
mov
add
mov
ret
ja
jae
scas
cmp
fwait
in
push
sub
jns
leave
outs
rcl
cmp
mov
xor
dec
mov
cmc
scas
in
or
jp
adc
(bad)
fdiv
jo
dec
jl
jmp
jmp
mov
test
fst
iret
xchg
xchg
mov
test
fmul
std
mov
lahf
enter
adc
dec
xlat
fmul
push
jae
call
pushf
push
sbb
std
xor
fcmove
fcom
or
sbb
bound
dec
out
push
popf
js
jno
sub
leave
xchg
aaa
xor
outs
test
cdq
out
xchg
cmp
int3
xor
rol
jb
xor
mov
mov
test
movs
out
add
out
mov
imul
pop
daa
sbb
ucomiss
mov
xchg
adc
mov
shr
shr
sub
cmp
aam
and
jecxz
pop
mov
cdq
rol
daa
sbb
ucomiss
jb
mov
add
cmps
mov
push
cmp
je
adc
jmp
cmp
sar
cmp
mov
mov
cld
outs
call
cmp
outs
cmp
cmp
out
stc
mov
cmp
leave
ins
jp
or
jnp
into
jmp
jg
ins
cmp
into
jmp
dec
stos
std
cli
into
jmp
or
mov
mov
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
movups
cld
into
lods
js
or
cld
into
das
mov
mov
mov
clc
cld
mov
mov
mov
retf
std
retf
ins
clc
jge
ins
(bad)
lea
jmp
cmp
retf
mov
retf
cld
mov
jns
or
cmp
cld
scas
cmp
clc
mov
retf
cmp
pop
sub
push
or
push
fimul
retf
enter
or
ret
dec
iret
jmp
pop
jae
cmp
test
cs
adc
ins
add
enter
dec
cdq
xlat
fcomp
add
jecxz
je
bound
(bad)
cmps
std
push
daa
add
cmp
or
pop
test
test
shr
jecxz
mov
xchg
imul
mov
mov
js
xor
or
mov
mov
je
dec
das
shl
xchg
or
pop
mov
cmps
stos
add
and
jae
add
imul
jo
int
add
sbb
cmp
out
cdq
jg
gs
(bad)
loopne
xchg
fisttp
pop
mov
add
sub
mov
or
sbb
movs
add
fisttp
dec
les
mov
popf
lods
pop
sbb
lds
cmp
inc
cwde
out
jns
pop
repnz
push
jbe
mov
pop
pop
repnz
cmp
mov
popa
and
and
pop
pop
ret
das
push
push
xor
cmc
test
aad
cmp
sbb
xchg
movs
ja
call
leave
cwde
dec
hlt
xchg
test
cmc
loop
retf
lea
or
and
inc
shr
xor
test
fs
dec
push
jne
sahf
es
sbb
adc
loopne
jmp
pop
daa
pop
jbe
pop
scas
dec
add
loope
xchg
inc
or
pushf
fwait
xor
jne
jae
adc
xchg
mov
push
sbb
pop
and
into
outs
js
xor
repz
mov
push
outs
push
dec
dec
in
lods
retf
cld
rol
jmp
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
mov
dec
icebp
cmc
movs
clc
jl
outs
cld
(bad)
je
cmps
pop
xor
es
mov
scas
clc
cmp
out
or
std
mov
out
and
repnz
push
lods
xor
and
cmovle
fwait
jnp
lea
inc
imul
ror
inc
sbb
(bad)
out
pop
inc
push
imul
(bad)
adc
add
jmp
xchg
sub
std
ret
or
nop
sbb
push
jecxz
pop
sbb
retf
aas
arpl
mov
xor
movs
mov
mov
sar
xchg
add
mov
lea
push
popa
lahf
mov
ret
inc
(bad)
fistp
jecxz
ret
xor
cmp
cs
sahf
imul
push
(bad)
pop
call
mov
lods
je
jns
push
sub
fsubrp
mov
jl
sbb
out
xchg
push
std
imul
outs
push
ja
movd
test
sti
adc
mov
cmp
add
in
pusha
out
mov
nop
(bad)
repnz
jp
pop
pop
iret
bound
nop
cmp
inc
pop
daa
cmp
inc
cwde
out
jns
pop
repnz
push
jbe
mov
fimul
mov
pop
adc
xlat
mov
(bad)
fistp
enter
lahf
push
ja
cmps
pop
jle
push
inc
test
add
pop
xor
(bad)
mov
(bad)
js
xchg
xor
mov
sub
jbe
cli
sbb
movs
clc
mov
mov
sar
and
mov
shl
sub
das
pop
(bad)
xchg
inc
inc
mov
int
dec
outs
mov
xchg
dec
mov
jecxz
enter
adc
add
sar
and
adc
icebp
jl
or
retf
mov
or
mov
std
mov
mov
je
jecxz
mov
retf
cld
mov
jns
dec
mov
xor
inc
cmp
test
in
add
cdq
ins
cmp
mov
rol
cmp
rcl
sbb
repz
in
test
pop
xchg
call
mov
(bad)
adc
pop
xchg
int
add
std
inc
mov
cmp
sub
(bad)
jmp
and
mov
add
js
cmps
lds
add
(bad)
sar
lods
add
lods
std
call
icebp
jae
add
mov
jne
outs
test
adc
movzx
dec
add
(bad)
sub
jno
fldcw
mov
jno
(bad)
mov
jne
xchg
sbb
cli
mov
inc
cmps
lds
add
dec
push
xchg
lods
xor
cmps
sahf
popf
xor
mov
test
push
mov
and
mov
jmp
in
jns
xchg
ret
and
std
mov
ds
fbld
lahf
stos
dec
clc
aam
mov
retf
dec
ja
das
out
jo
mov
xchg
popa
in
inc
sbb
mov
gs
out
xor
out
rcl
pop
fwait
movs
jmp
and
sar
and
scas
(bad)
in
cmp
rol
stos
aam
lods
in
inc
outs
adc
mov
sbb
dec
cmps
test
add
inc
sub
adc
je
in
mov
push
inc
dec
fnstsw
jbe
stos
cmps
jne
es
jbe
pop
cmc
icebp
and
xchg
inc
or
jnp
jnp
jb
sar
push
or
jne
aam
nop
icebp
mov
out
sbb
ss
or
(bad)
xchg
out
inc
or
or
sbb
std
(bad)
jae
test
pop
out
xor
in
(bad)
data16
sbb
in
dec
jecxz
and
sub
sbb
mov
ss
lahf
jae
sub
add
mov
(bad)
data16
sbb
in
dec
jecxz
and
sub
sbb
adc
repnz
push
adc
(bad)
les
fidivr
movs
in
int3
pop
add
sub
stos
loopne
xor
fimul
in
adc
movs
xchg
mov
pop
push
mov
(bad)
dec
add
scas
popa
in
out
push
mov
bound
mov
add
mov
fimul
sbb
jbe
cmp
out
inc
sar
cld
cs
lods
adc
add
lods
push
jg
xlat
sbb
fwait
mov
frstor
loop
mov
adc
into
jge
xor
mov
mov
bound
sub
adc
jmp
fidivr
add
js
in
out
sub
jb
scas
je
mov
cmc
call
and
ret
or
shr
push
cmp
int3
in
outs
dec
mov
mov
gs
or
(bad)
cld
jle
jmp
adc
ret
or
sub
mov
into
scas
push
cs
mov
pop
cmps
ret
push
mov
adc
sar
and
fnstenv
ins
mov
(bad)
lods
and
je
sub
jne
mov
out
pop
inc
sbb
scas
in
push
xchg
push
mov
jge
lea
jb
scas
les
pop
pop
dec
je
sub
jne
push
cmp
jmp
push
pop
cmp
std
std
mov
jns
jl
cs
shr
ror
fidiv
xchg
clc
out
inc
out
iret
or
xchg
mov
fidivr
test
xchg
sbb
ficom
pop
pop
icebp
add
retf
and
cdq
xor
jo
fdivr
inc
inc
test
gs
dec
lock
les
jbe
aas
sub
add
jnp
pop
hlt
xor
clc
cdq
add
jb
pop
dec
inc
and
in
mov
sahf
mov
mov
dec
outs
mov
mov
or
jns
dec
out
test
sub
cmp
dec
cld
mov
jecxz
cmps
fist
sub
sti
add
mov
cmp
or
mov
push
mov
inc
pop
jo
push
mov
mov
sub
cmp
mov
pop
(bad)
xor
arpl
lock
pop
adc
and
jmp
sub
mov
jl
in
sar
mov
mov
pop
(bad)
xchg
inc
or
xor
cmps
repz
add
mov
jo
mov
jp
jno
dec
es
ss
jae
out
stc
sub
fdivr
push
push
call
jno
hlt
pop
inc
adc
jle
ja
popf
cwde
adc
mov
cdq
fld
(bad)
scas
pop
add
push
cdq
mov
jg
lods
mov
xchg
dec
fistp
dec
xor
mov
(bad)
lock
lods
pop
dec
xchg
fsubrp
push
sbb
test
lds
push
clc
sbb
lods
and
(bad)
sub
lock
xchg
je
arpl
ins
xchg
inc
bound
mov
frstor
push
in
inc
inc
adc
fwait
scas
mov
imul
push
(bad)
and
push
stc
mov
xchg
cdq
retf
das
adc
push
lea
mov
dec
lods
cli
pushf
adc
cwde
mov
pop
mov
mov
pop
arpl
leave
(bad)
enter
inc
sbb
mov
inc
cmp
fsubr
gs
ds
xchg
retf
repnz
xchg
(bad)
push
sbb
out
cmp
add
popf
ss
xrelease
enter
pop
adc
int3
sbb
arpl
cmp
jmp
inc
dec
and
into
into
cmps
mov
call
pusha
pop
mov
mov
mov
ins
aam
and
div
add
leave
adc
jns
rcr
outs
imul
mov
dec
(bad)
ins
cmp
rol
jl
sbb
xchg
mov
and
stc
test
sub
push
fwait
sub
repz
dec
(bad)
popf
call
inc
jne
mov
(bad)
loopne
cwde
dec
mov
mov
fimul
xchg
aaa
(bad)
retf
inc
gs
aas
sti
pop
xor
(bad)
fsubr
int3
push
mov
jno
dec
mov
or
sbb
fwait
loopne
dec
inc
xor
data16
clc
cmps
scas
push
adc
and
and
aas
and
sbb
pop
mov
daa
mov
push
pop
imul
jp
add
mov
jne
cdq
std
mov
outs
nop
mov
sub
or
mov
sahf
(bad)
sbb
inc
cmps
xchg
out
mov
nop
mov
cld
stos
jg
add
mov
outs
pop
push
sbb
out
jne
or
or
dec
(bad)
daa
inc
je
and
ja
cld
sub
xchg
fmul
lods
push
icebp
push
jmp
lea
cmps
jne
movs
std
xor
and
scas
cwde
in
jp
dec
mov
fnstenvw
mov
loop
ins
or
js
cmps
(bad)
leave
add
arpl
icebp
mov
shr
cdq
std
mov
outs
cmc
outs
cmps
sub
sub
jo
or
lea
mov
push
xchg
(bad)
fmul
repz
xchg
sub
jbe
mov
fs
or
xchg
fisttp
jnp
out
popa
div
lock
sti
std
mov
pop
xchg
aas
mov
data16
inc
push
stos
pop
mov
jo
or
lea
mov
push
xchg
(bad)
fmul
repz
xchg
sub
jbe
mov
fs
or
xchg
fisttp
jnp
out
popa
div
lock
dec
add
lods
mov
or
add
rcl
test
loopne
xor
fidiv
je
int
bound
sti
push
fidiv
out
adc
mov
jne
(bad)
jmp
add
push
lods
aaa
ins
cmps
push
cwde
daa
icebp
inc
cmp
rcl
sub
pop
fldcw
add
ds
rol
and
cmp
(bad)
or
lock
xor
xor
pop
push
addr16
stos
int3
popa
cmp
pop
cs
xor
dec
jmp
sub
js
xchg
sbb
ret
mov
out
hlt
inc
int
sub
sti
push
fidiv
out
adc
xor
in
loop
stos
scas
or
fstp
xor
pop
xchg
sahf
xchg
add
or
xchg
mov
ins
push
xchg
mov
sub
mov
mov
enter
scas
jp
add
or
jb
cmp
ins
mov
fdiv
add
aas
movs
retf
std
neg
xchg
jno
hlt
mov
repnz
push
imul
rol
stos
add
stos
scas
push
mov
mov
nop
sub
fcom
adc
sub
mov
push
dec
es
dec
push
retf
scas
movs
add
push
push
mov
jecxz
cmp
jns
mov
jno
stos
pusha
inc
pop
and
mov
xchg
add
xor
push
adc
test
repz
sub
add
std
test
xor
or
stc
dec
loopne
(bad)
aad
in
add
fcomp
sti
mov
mov
sahf
dec
in
adc
int
ja
inc
popa
mov
pop
and
mov
icebp
inc
cmp
rcl
add
pop
cmp
or
inc
(bad)
mov
scas
es
and
adc
arpl
(bad)
and
lds
jnp
fcom
mov
arpl
daa
ja
(bad)
arpl
pushf
cmp
imul
pop
xor
add
stos
scas
push
mov
mov
shr
fcom
inc
push
aas
push
mov
and
jecxz
fstp
out
test
adc
jle
in
pop
ret
sbb
or
pop
fld
gs
movs
(bad)
shr
das
pop
add
neg
push
aas
repnz
cmp
push
stos
in
pop
mov
or
imul
push
mov
push
mov
dec
jns
adc
adc
test
pop
shr
(bad)
and
cs
retf
lock
mov
scas
jle
push
xchg
leave
pop
and
sti
scas
mov
mov
cld
dec
das
jns
or
clc
jl
scas
clc
cld
retf
jl
scas
mov
jo
and
mov
push
cmps
les
adc
into
mov
or
mov
cmc
adc
sub
jge
nop
push
retf
push
fisubr
xor
stos
lods
movs
pop
jo
jl
(bad)
jmp
jle
inc
xor
xchg
int
or
pop
aaa
jo
xor
lea
jae
cmp
pop
mov
pushf
cmp
aad
je
in
cwde
fpatan
xlat
les
or
pop
mov
mov
pop
call
daa
ror
sbb
cmovne
xor
in
movs
clc
ror
arpl
mov
outs
lea
or
mov
icebp
pop
pop
fld
aam
mov
xchg
mov
inc
mov
repz
sub
outs
and
xchg
mov
jno
aaa
adc
push
adc
pop
or
add
mov
jbe
gs
dec
mov
(bad)
dec
fs
xchg
sbb
ins
add
xchg
adc
je
sar
dec
fsub
into
stos
rcr
fstp
mov
jbe
mov
mov
outs
mov
(bad)
pop
dec
push
jno
aaa
adc
cmp
pop
or
gs
popa
fsubr
mul
inc
test
dec
shr
out
mov
cli
dec
mov
xchg
cmps
mov
xor
dec
in
sub
inc
scas
sbb
or
cmc
sbb
jmp
mov
(bad)
lahf
cwde
fldenv
mov
fndisi(8087
mov
in
cli
outs
sbb
jmp
outs
jno
jl
pop
ret
pusha
mov
push
mov
xchg
out
loopne
dec
mov
ins
and
add
cmp
push
dec
xchg
add
shl
movs
fwait
add
rcr
js
gs
mov
pushf
or
jmp
test
movs
fwait
add
and
cmp
cmp
inc
pop
popf
push
jg
add
mov
push
and
xor
aaa
jae
xchg
ja
jecxz
fs
cmp
mov
jbe
aaa
sbb
cdq
sub
adc
in
and
dec
mov
xchg
inc
sbb
cdq
sub
adc
in
and
dec
aaa
xchg
fistp
int
xchg
les
dec
cli
mov
stc
pusha
int3
js
std
sub
mov
out
test
push
mov
sbb
out
dec
int3
cmp
adc
dec
stos
out
pusha
fistp
int
xchg
les
dec
cli
mov
stc
pusha
int3
js
std
sub
mov
out
test
push
mov
sbb
mov
mov
push
dec
mov
(bad)
sub
push
adc
xchg
ret
or
mov
(bad)
mov
mov
fbld
xor
xor
pusha
cmp
mov
pop
sti
sbb
mov
push
mov
(bad)
or
cwde
call
bound
in
cmp
adc
cmp
adc
cmp
jnp
pop
and
jp
inc
mov
jno
inc
scas
push
imul
pop
dec
cmp
mov
add
mov
les
xor
cmps
clc
jnp
jne
mov
cmp
fwait
xor
js
test
sub
call
inc
mul
sub
out
mov
loop
test
push
rcl
add
test
retf
or
and
imul
jnp
les
fdivr
hlt
jg
and
inc
mov
dec
mov
aaa
mov
pop
test
into
mov
mov
mov
add
leave
daa
or
cmp
inc
pop
outs
(bad)
mov
mov
cmp
gs
lods
jb
sbb
mov
xor
into
aad
jns
jmp
loope
ret
xor
mov
xlat
call
mov
nop
rcr
inc
mov
aam
dec
add
xor
leave
icebp
push
(bad)
push
sub
movs
in
loopne
xchg
arpl
or
inc
mov
inc
inc
pusha
add
cmps
arpl
mov
mov
mov
push
repnz
and
hlt
cmps
jmp
push
repnz
dec
sbb
ret
gs
in
sbb
sti
adc
stos
fcomp
arpl
sahf
js
into
out
js
retf
jle
outs
mov
mov
retf
lock
retf
stc
mov
call
mov
inc
jg
loopne
xchg
icebp
lock
cmp
je
idiv
fdiv
clc
mov
cmp
(bad)
jns
pop
jno
dec
pop
pop
or
inc
xchg
cmp
outs
jnp
int
xchg
pop
pop
push
pop
sub
pop
stos
push
cld
scas
or
fst
push
cmp
dec
ins
cmp
or
imul
and
inc
mov
pop
cmps
inc
or
mov
jnp
les
dec
inc
and
push
pop
(bad)
ins
jbe
pop
mov
ficom
inc
cmp
sti
pop
jmp
arpl
dec
push
jl
iret
mov
xchg
shr
jmp
and
mov
jg
cmps
fld
sbb
or
mov
test
and
ins
shl
xchg
sub
popf
(bad)
std
sub
fmul
aam
gs
loope
mov
fcom
mov
lahf
cmps
les
leave
movs
jne
in
mov
fcomp
mul
add
xor
test
mov
fldcw
xor
(bad)
push
data16
and
push
fimul
and
mov
out
pop
mov
in
mov
ja
and
xor
xchg
sub
sbb
pop
sub
lock
aas
lods
sbb
enter
xchg
std
popf
repz
mov
and
xchg
test
in
sbb
dec
sbb
push
movs
xor
adc
loopne
lds
into
shl
lea
jle
push
jle
ret
mul
xor
add
stc
arpl
repnz
repz
mov
lods
lahf
pop
pop
push
stos
and
and
cs
fdiv
mov
cmp
jecxz
and
rcl
frstor
cmp
sub
mov
mov
jbe
push
sar
or
sbb
fsubr
inc
mov
adc
retf
(bad)
adc
adc
inc
jmp
add
cmp
xchg
push
mov
movs
call
fld
cmp
daa
dec
dec
mov
cwde
outs
or
es
outs
xlat
hlt
aas
ins
enter
mov
xor
ins
mov
call
cdq
push
sbb
adc
inc
loopne
sahf
mov
leave
movs
sub
dec
or
mov
dec
mov
mov
loope
jns
xchg
push
inc
pop
cmp
and
cmp
shl
fcom
xor
push
enter
lock
int
test
test
out
out
lods
xchg
pop
cmps
adc
cdq
xor
cmc
out
sub
mov
cmp
ret
mov
dec
ins
icebp
adc
mov
xor
mov
cmp
push
mov
jmp
mov
adc
cmp
and
xor
mov
mov
(bad)
retf
cmp
xor
sub
int
ficomp
mov
xor
call
out
in
loope
and
jle
jns
pop
mov
in
mov
inc
mov
retf
into
nop
sbb
push
in
loope
jle
jne
adc
cmps
out
in
movs
or
je
loop
icebp
in
aad
js
cmp
jl
sbb
nop
mov
ds
xor
mov
daa
std
and
fisttp
fwait
inc
repz
clc
cwde
fwait
push
inc
jo
xchg
test
pop
stos
push
adc
pop
fcomp
outs
pop
sahf
retf
(bad)
pop
gs
imul
push
jb
int3
dec
(bad)
and
lea
or
mov
retf
enter
iret
daa
popf
outs
test
push
mov
pop
xor
push
and
cmp
mov
stc
sbb
inc
mov
push
test
test
pop
sub
repnz
or
jb
cdq
or
xchg
dec
and
out
rcr
push
and
retf
imul
xlat
ds
mov
call
nop
enter
cmp
jae
mov
fs
inc
cmp
aas
jecxz
movs
ficom
icebp
aad
loopne
sub
mov
nop
jl
fxch
add
xbegin
push
mov
or
add
iret
into
pop
or
mov
inc
mov
and
dec
push
test
repz
clc
mov
jo
xchg
xchg
xor
out
pop
pop
inc
sbb
dec
cmp
jb
inc
ss
cmp
inc
stos
mov
test
fucom
rcr
fstp
in
xor
stc
icebp
mov
int3
outs
shr
daa
std
daa
jecxz
or
clc
mov
jo
xchg
xchg
xor
out
pop
pop
inc
sbb
dec
cmp
jb
inc
ss
cmp
inc
stos
xchg
or
add
pop
pop
or
or
add
cmps
or
jne
jl
lods
jo
xor
rcl
lock
pop
dec
nop
aad
inc
adc
sub
cmp
add
stos
cmp
mov
std
in
dec
arpl
and
push
or
or
push
mov
retf
out
jae
test
(bad)
out
pop
ror
cmps
out
mov
xlat
loopne
add
dec
icebp
pop
pushf
(bad)
pop
and
stc
popa
leave
out
jl
push
adc
xor
add
sbb
(bad)
aaa
pop
aas
inc
sahf
xchg
movs
sbb
rol
lock
movs
sub
jp
(bad)
pop
ret
mov
inc
fs
xlat
jmp
xchg
lea
mov
call
and
lods
aad
scas
fcomp
mov
jmp
xor
or
inc
pop
movs
movs
neg
imul
add
lahf
adc
es
arpl
lahf
ss
sub
in
sbb
jae
xchg
imul
popa
bound
jne
jmp
xchg
mov
cli
shl
sbb
ret
fwait
in
inc
(bad)
jl
popf
fisttp
sbb
repz
or
lahf
es
xor
mov
inc
adc
in
cmc
stos
cmp
mov
mov
arpl
outs
sub
mov
popf
pop
fwait
popaw
mov
enter
imul
das
stos
mov
cmp
int
cmp
add
sub
out
jae
mov
cwde
xor
mov
xchg
cld
or
js
mov
sti
stos
sahf
and
xor
inc
mov
cdq
mov
push
adc
xor
add
stc
arpl
repnz
repz
mov
lods
lahf
pop
pop
xchg
jmp
aaa
pop
add
in
xchg
xchg
not
xlat
add
sbb
adc
mov
cmp
dec
mov
(bad)
xchg
loope
lds
and
sub
xor
ins
outs
rol
cdq
inc
push
fidivr
xchg
sbb
mov
sbb
xchg
js
nop
lea
mov
imul
xchg
out
push
and
scas
movs
jp
push
push
ds
bound
aam
mov
pop
loope
(bad)
jo
adc
fnstenv
adc
imul
lods
ret
xor
fistp
shr
mov
movd
imul
cmc
outs
test
repnz
jnp
jo
out
sub
add
and
or
(bad)
icebp
stos
mov
shl
xchg
cmp
xor
inc
rcr
out
leave
stc
mov
jbe
mov
add
div
into
icebp
xor
pop
sbb
mov
push
and
pop
sbb
fldcw
nop
int3
outs
jb
pop
loope
(bad)
jo
adc
mov
push
push
mov
adc
mov
inc
push
add
(bad)
ins
fincstp
jbe
sbb
outs
mov
retf
push
or
ror
xlat
add
loope
lea
jmp
out
popf
dec
or
jne
stc
cmp
adc
das
inc
outs
fidivr
int
dec
inc
mov
repz
mov
dec
jae
add
loop
push
leave
or
popa
repz
neg
xor
pop
mov
movd
dec
xchg
aas
mov
in
fidiv
and
jbe
std
mov
or
stos
mov
jl
out
mov
cld
retf
cld
mov
mov
mov
mov
mov
mov
scas
mov
mov
xchg
sub
retf
or
mov
sbb
fwait
jmp
mov
mov
sbb
mov
fcom
jmp
shl
imul
xor
push
test
pop
call
jle
mov
jg
ficomp
aad
push
outs
pop
out
test
add
sub
mov
sub
imul
jno
cmps
jl
pop
movs
pop
inc
inc
and
and
fnsave
xor
cmp
popa
in
fcom
test
adc
push
icebp
pop
hlt
into
mov
hlt
add
rcr
cmp
sub
mov
je
mov
hlt
(bad)
mov
mov
mov
jg
sahf
mov
(bad)
jbe
scas
jl
dec
sbb
dec
inc
mov
loop
js
int3
jmp
cdq
dec
sahf
sub
test
int
fmul
pop
movs
xor
enter
push
or
loopne
add
push
inc
cs
xchg
call
inc
mov
push
out
cld
in
(bad)
idiv
outs
jg
inc
scas
inc
in
in
icebp
out
jl
sar
or
and
dec
push
out
fstp
xor
sub
je
push
(bad)
fidivr
nop
clc
push
mov
addr16
neg
adc
sahf
mov
test
mov
cmp
stos
pushf
iret
lods
xor
cli
test
js
jl
out
not
stos
mov
into
pop
pop
fs
hlt
pop
les
and
cmps
gs
fisub
std
ror
push
xchg
scas
ret
into
sar
stos
jg
std
repnz
je
xchg
cdq
mov
nop
aaa
jns
mov
push
inc
cld
(bad)
lock
xchg
mov
fdiv
dec
or
mov
mov
iret
lock
aaa
loopne
sub
cmp
sbb
sbb
mov
cmp
pop
cmp
mov
ficom
int3
pop
sbb
push
icebp
add
xchg
push
adc
sub
lock
das
mov
(bad)
in
test
mov
xlat
repnz
xchg
push
jmp
retf
cld
or
adc
add
mov
add
int3
out
push
and
and
mov
scas
imul
xchg
and
mov
jnp
push
xchg
mov
mov
sub
or
lahf
or
ss
xchg
iret
sub
or
xchg
push
fimul
stc
aas
mov
xchg
and
popf
xchg
inc
jbe
imul
ins
jecxz
movs
xchg
leave
or
fstp
pushf
clc
loop
std
es
add
fldenv
push
mov
push
jmp
xchg
and
popf
xchg
inc
jbe
imul
cmc
das
test
cdq
cmps
cmc
sbb
bound
stos
and
fisttp
dec
ficom
iret
je
stos
out
mov
test
push
shr
scas
jge
sbb
cmc
repz
icebp
mov
dec
cmps
loopne
aad
call
ja
push
push
jmp
js
ror
fdivr
cmp
dec
fwait
cmp
mov
into
mov
scas
mov
(bad)
fmul
fcom
das
mov
sbb
push
fmul
inc
jl
mov
fmul
lods
fdiv
mov
aaa
jg
adc
out
or
jne
shl
pop
fisttp
sub
mov
out
push
or
in
inc
(bad)
loop
lock
mov
clc
inc
pushf
push
inc
fnstenv
adc
hlt
dec
pop
ja
dec
mov
sti
cli
jmp
ja
je
sub
mov
repnz
test
jmp
lods
inc
xchg
out
bound
fsub
mov
ficom
add
mov
out
mov
fcomp
fstp
sbb
sti
les
push
fbstp
ss
jb
or
xchg
cmc
ret
or
in
into
test
call
xlat
mov
mov
in
call
and
jnp
ss
xor
shl
fwait
mov
dec
inc
mov
rol
imul
test
in
fsub
nop
arpl
pusha
jne
cwde
cmps
ins
add
test
adc
and
stc
sbb
cwde
sub
and
or
and
cmp
ins
jo
dec
daa
je
ficomp
jl
mov
sub
cmp
je
add
call
pop
jns
xchg
mov
jne
mov
jmp
adc
jmp
jl
call
ud2
pop
inc
imul
mov
inc
cmc
es
sar
or
mov
into
and
in
fild
mov
push
xor
call
mov
je
das
mov
retf
aad
enter
inc
push
in
or
mov
repz
xchg
shl
pop
fisttp
sub
mov
jmp
cmp
int3
jecxz
jecxz
cdq
clc
aas
mov
clc
cld
retf
out
es
call
int
(bad)
out
or
enter
bound
mov
loop
fsubr
and
cmp
loope
popf
scas
cmp
test
ss
jne
dec
sub
retf
fisub
jno
pop
retf
jmp
es
scas
add
nop
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
jno
fsub
add
cmc
out
mov
mov
cld
mov
out
xchg
or
inc
out
or
or
ret
enter
test
cs
lea
pop
fcom
mov
ss
pop
mov
ret
sti
scas
mov
mov
clc
std
or
mov
mov
retf
mov
neg
mov
jmp
rol
jecxz
call
mov
cld
or
fld
xchg
fisubr
xlat
cmp
(bad)
test
cmps
mov
adc
dec
pop
jmp
rol
mov
mov
and
push
out
pop
loopne
dec
out
jae
lahf
loop
test
mov
pop
mov
inc
pop
and
call
into
pop
xchg
int
bound
adc
dec
sti
ins
lahf
dec
pop
mov
jnp
in
cmp
fsin
dec
add
(bad)
jno
and
int3
push
mov
cmp
cmp
xchg
dec
push
les
mov
fld
dec
clc
fstp
int3
adc
out
mov
mov
mov
out
jns
push
retf
dec
dec
sti
push
outs
sbb
int
popf
(bad)
cmp
lds
mov
adc
aad
cmc
pop
into
lock
and
popaw
pop
retf
in
lods
fcmovnu
push
rcr
mov
push
ins
ret
push
adc
xor
inc
into
das
in
mov
test
in
sub
movs
mov
retf
lods
push
sbb
pop
pushf
out
mov
inc
in
cmps
test
in
jmp
inc
xchg
retf
and
fisttp
inc
push
aaa
dec
sbb
loopne
ds
xchg
sub
cwde
jg
stos
nop
mov
mov
mov
jg
pop
mov
stos
in
cwde
ret
jno
ret
in
popf
fild
cmc
cmp
stc
jnp
inc
in
cmc
retf
int
in
jp
sbb
mov
out
imul
sbb
and
jp
sub
xlat
mov
push
add
sub
call
xchg
xor
xchg
fisub
mov
leave
and
lea
aas
ins
inc
retf
lock
rol
jno
pop
gs
aad
loope
inc
jecxz
mov
push
dec
jbe
psrlw
repnz
jecxz
adc
jg
lock
inc
jns
dec
shl
jl
daa
gs
pop
adc
imul
sub
test
pop
fnstcw
(bad)
icebp
das
add
cwde
cmps
stos
mov
iret
and
js
(bad)
icebp
das
add
cwde
cmps
stos
mov
pop
movhps
imul
rcr
mov
das
add
cwde
cmps
stos
mov
iret
and
js
(bad)
icebp
das
add
cwde
or
mov
sbb
js
cdq
mov
fist
adc
js
cdq
mov
fdivp
retf
fwait
or
jl
pop
inc
retf
mov
les
lock
push
ins
ffree
mov
les
lock
imul
xlat
or
jmp
rol
push
bnd
pop
cli
lods
das
lods
sahf
or
sbb
dec
mov
cmp
fdivp
loopne
cmp
scas
repnz
cmc
das
mov
mov
add
and
jno
mov
dec
push
(bad)
mov
fnstcw
sub
adc
mov
adc
xchg
movs
sbb
mov
fadd
dec
into
and
arpl
shr
das
(bad)
xor
mov
cwde
sbb
dec
push
ror
mov
in
sar
lods
mov
mov
sub
xor
shl
fninit
retf
add
sbb
pop
std
cdq
into
sti
dec
std
stos
test
push
lahf
jecxz
jno
mov
addr16
loopne
in
sub
in
jecxz
in
jb
jg
outs
mov
(bad)
bound
and
sbb
mov
gs
inc
icebp
sar
outs
in
mov
in
mov
mov
sbb
call
mov
or
dec
ds
dec
jg
mov
jnp
lahf
dec
fdivrp
in
cld
xchg
cli
sbb
(bad)
pop
(bad)
add
call
push
in
sub
pop
pusha
add
fcom
pop
(bad)
ror
mov
pop
stos
(bad)
mov
pop
fnstsw
rcl
aad
jne
adc
mov
ds
ror
sar
inc
push
into
mov
adc
icebp
aam
fisubr
iret
jl
adc
test
cmp
cwde
xor
sub
jle
or
test
test
mov
or
sub
add
(bad)
popf
fucomp
mov
inc
std
or
cmp
in
mov
cmp
enter
dec
mov
popf
ficom
mov
fdivr
mov
xor
cmps
repnz
sar
fldcw
inc
cmps
and
stos
mov
jge
out
clc
cmp
scas
clc
cld
retf
cld
mov
mov
fsub
(bad)
mov
jne
clc
ds
out
mov
adc
popa
int3
lock
mov
dec
mov
mov
mov
cmps
push
test
call
fnstsw
stos
(bad)
xlat
fmul
dec
test
ds
jp
(bad)
repz
push
xor
mov
out
jae
(bad)
cmp
pop
je
sub
sub
vpshuflw
mov
scas
fnstsw
xor
ret
call
mov
call
push
cld
push
test
jle
aaa
mov
lods
cli
pop
xchg
repnz
mov
adc
fidivr
mov
inc
sub
cmps
mov
mov
mov
into
out
fist
out
ficom
out
pop
fadd
jecxz
scas
jne
pop
push
and
and
ret
mov
je
hlt
jbe
push
adc
jmp
gs
inc
int3
jo
enter
rol
mov
add
call
xor
ins
aaa
jno
jne
jnp
in
or
in
dec
inc
std
lods
push
and
lahf
mov
sar
call
dec
push
in
daa
call
repnz
hlt
pop
gs
loop
jle
in
dec
hlt
mov
iret
sub
sub
lods
push
push
stos
pop
into
ficom
out
popf
mov
std
pop
jmp
loop
xchg
lea
stos
iret
dec
cmp
popa
(bad)
jae
inc
pop
inc
test
and
push
test
adc
stos
fcmovb
jmp
sahf
outs
xchg
jb
in
mov
scas
jle
jg
call
sub
fdivr
mov
mov
enter
mov
lahf
sbb
and
ins
mov
(bad)
jmp
pusha
lds
imul
xor
push
xchg
(bad)
hlt
xchg
div
arpl
adc
and
push
xchg
scas
and
cli
dec
outs
lods
inc
lods
imul
jb
inc
jmp
jb
inc
jmp
jb
inc
jmp
icebp
mov
mov
pushf
inc
mov
jne
inc
mov
jne
inc
mov
jne
inc
mov
lock
mov
jo
in
cmp
jmp
jge
sbb
hlt
jne
ror
out
rol
dec
adc
loop
and
nop
js
cli
mov
sub
es
sbb
das
loope
aam
jmp
cdq
shl
les
jns
dec
fistp
dec
pop
cmp
adc
jo
dec
xchg
out
sbb
xor
(bad)
mov
fwait
out
psubsb
mov
add
jmp
sbb
mov
test
mov
pop
pop
ja
sbb
movs
lock
mov
adc
push
movs
(bad)
bound
stc
mov
fsubr
enter
and
lea
cmp
jne
push
inc
pop
nop
push
and
xor
and
nop
jmp
xor
nop
xchg
pop
xchg
std
pop
call
or
rol
mov
call
or
jg
adc
ins
movs
dec
add
(bad)
mov
adc
hlt
mul
bound
jo
mov
dec
xchg
mov
xchg
or
or
xor
loopne
scas
clc
(bad)
mov
int
cmp
(bad)
sahf
test
mov
out
ja
ss
ins
call
cmp
jle
push
xor
dec
out
sahf
mov
stc
fwait
sub
dec
mov
jb
loopne
scas
clc
(bad)
stc
jmp
mov
in
mov
fsubr
call
rol
lds
nop
jnp
add
scas
mov
cmp
jmp
cld
mov
mov
mov
ret
lods
sahf
mul
mov
mov
and
cld
scas
mov
mov
sub
int
shr
dec
loop
js
bound
out
lock
cli
icebp
add
retf
mov
cmp
stos
dec
test
retf
dec
imul
and
les
cmp
pop
add
pushf
scas
dec
ret
test
je
stc
ret
xlat
aad
sub
lods
je
add
mov
clc
mov
mov
jmp
jbe
sub
mov
mov
pop
or
lods
mov
xor
inc
js
sti
push
mov
inc
outs
pop
sbb
cld
and
jle
xor
pop
div
cli
jno
js
jne
clc
inc
(bad)
pop
and
or
jmp
mov
fwait
rcl
adc
fcmovnbe
ds
push
retf
add
in
(bad)
scas
stos
aaa
xchg
xor
mov
jb
mov
push
push
jmp
icebp
repnz
call
or
(bad)
add
add
xor
dec
mov
retf
cmp
xor
lahf
cmc
xlat
sar
xchg
cmp
mov
ds
sbb
adc
neg
or
sbb
clc
lea
adc
aaa
sbb
enter
icebp
mov
and
cmp
sti
push
cld
adc
das
dec
daa
cmps
jmp
(bad)
icebp
jle
lods
out
pop
scas
pop
movs
in
pop
js
push
jle
push
out
ds
popf
daa
adc
repnz
popa
xrelease
daa
adc
ins
mov
popa
fwait
scas
jo
add
pop
int
ficom
cdq
xchg
iret
sub
and
cli
dec
lods
scas
pmaddwd
sub
stc
shl
inc
pop
mov
out
dec
faddp
outs
xor
adc
and
stos
movs
ja
std
call
in
xchg
inc
pop
hlt
test
fild
aam
sub
lahf
scas
and
shl
and
push
or
shl
push
push
pushaw
or
int
lock
mov
dec
push
add
cmp
(bad)
sub
mov
pop
jl
loope
mov
add
jl
and
mov
mov
add
loop
popf
sahf
lods
pop
xor
pop
arpl
(bad)
shl
xchg
not
pmulhw
dec
xchg
jb
test
xchg
mov
mov
cmc
push
fstp
add
xor
or
sar
lods
dec
test
or
in
mov
mov
sbb
and
mov
xor
mov
push
outs
mov
outs
pop
dec
mul
push
ds
stos
jle
retf
rcr
cmp
movs
fs
push
ret
or
cmc
out
jecxz
inc
pop
test
(bad)
xor
outs
ins
mov
stos
sbb
adc
rcr
je
mov
add
(bad)
cmp
pop
pop
jne
or
in
or
scas
ins
in
xchg
lahf
add
push
nop
pop
push
imul
mov
push
lods
shl
fidiv
aas
add
mov
sub
nop
js
adc
nop
mov
mov
shl
xor
iret
test
mov
pop
or
sub
fmulp
and
mov
call
ss
sbb
mov
dec
xor
lahf
test
jge
gs
shl
mov
mov
inc
sub
popf
cmp
les
icebp
and
aam
jmp
loop
call
outs
fucom
pop
mov
(bad)
cs
(bad)
movs
mov
inc
retf
shl
dec
dec
add
(bad)
cmp
jo
inc
xor
stc
jno
lods
mov
push
xor
jp
add
adc
cmp
test
mov
retf
add
dec
dec
xchg
nop
pop
loope
clc
adc
hlt
push
enter
stos
mov
pop
cmp
lods
mov
fadd
daa
mov
xchg
lahf
es
nop
(bad)
inc
jno
cmc
outs
dec
(bad)
stos
pop
aad
aam
jp
mov
cmps
cli
sub
enter
pop
and
icebp
int3
mov
retf
ja
sbb
ins
xchg
cmp
sbb
mov
inc
fadd
mov
test
aaa
arpl
ds
repz
cld
mov
pop
jg
inc
cmp
mov
dec
out
call
inc
ss
dec
loop
and
divps
stos
cmp
xor
fwait
aam
popa
add
push
push
loop
xchg
out
cmps
add
inc
inc
pop
iret
fwait
mov
inc
scas
cs
xchg
and
outs
std
jns
inc
fcomp
sbb
in
inc
adc
into
pop
repz
pop
je
fwait
adc
sti
sti
aad
push
test
idiv
cld
ffree
push
fcmovnb
pop
nop
shl
cwde
cdq
nop
sub
out
mov
cmp
test
xchg
or
mov
push
(bad)
int3
xchg
movs
fstp
scas
clc
fdivr
scas
ret
retf
out
scas
or
add
or
sbb
les
sub
push
call
sti
in
data16
movs
out
mov
outs
imul
clc
inc
mov
or
test
repnz
shl
add
jmp
test
inc
out
jo
mov
pop
cmp
popa
mov
fs
sbb
stos
cmp
cmps
rdtsc
iret
xchg
les
movs
(bad)
cmps
repz
jl
jecxz
ror
clc
aam
test
mov
stos
shr
jmp
mov
rcr
(bad)
loopne
xchg
hlt
cmps
sub
xchg
cli
push
retf
pop
scas
(bad)
dec
dec
out
adc
cli
jbe
loopne
sub
leave
loope
aam
sub
adc
clc
pusha
mov
clc
xor
mov
ins
sbb
pusha
inc
mov
in
inc
inc
jecxz
sub
out
imul
xor
mov
aas
mov
in
in
adc
mov
popf
es
xchg
cmps
cmc
idiv
cwde
mov
stc
loop
push
(bad)
js
(bad)
or
fimul
jp
fwait
mov
(bad)
or
xchg
clc
cmp
push
mov
mov
out
retf
retf
cmp
dec
outs
js
or
jl
outs
cmp
scas
mov
mov
enter
or
jnp
mov
clc
or
js
jmp
js
jmp
iret
stos
jle
(bad)
cld
outs
test
retf
cmp
mov
std
cmp
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
jne
mov
cld
cs
mov
cld
mov
cmp
sti
scas
(bad)
cld
dec
outs
mov
mov
retf
cld
dec
scas
mov
cmp
nop
leave
mov
mov
mov
cld
retf
cld
retf
std
retf
cmp
outs
inc
mov
ins
mov
cld
into
scas
mov
jl
scas
clc
clc
pusha
mov
jmp
cld
retf
cld
retf
cld
mov
mov
loope
mov
clc
cld
retf
cld
retf
std
sub
loopne
push
sbb
cwde
lea
leave
test
scas
clc
cld
retf
cli
lahf
sub
mov
lock
ins
push
sar
es
cwde
daa
fstp
clc
cld
dec
add
cmp
mov
xor
push
int3
scas
clc
cld
retf
cld
retf
cdq
test
push
fsubp
xchg
cmps
cmp
scas
clc
mov
mov
cmp
lds
xchg
and
xlat
mov
jne
push
stos
fstp
(bad)
std
jo
xchg
dec
pop
std
mov
xchg
dec
cld
mov
mov
scas
rcr
lahf
or
xchg
je
inc
repz
jl
out
mov
out
fmul
push
(bad)
bound
mov
mov
mov
(bad)
retf
adc
or
jg
retf
hlt
out
imul
scas
and
dec
cmps
imul
leave
cmps
add
sub
cmc
sub
ret
pop
rcl
shr
das
xor
xor
hlt
aaa
adc
leave
fiadd
pop
adc
push
jbe
cmps
ins
je
mov
out
push
lahf
inc
mov
mov
pop
in
xchg
sub
in
dec
dec
mov
imul
and
test
inc
jno
cdq
cdq
mov
stos
sub
movs
popf
je
sbb
addr16
inc
daa
or
mov
and
pop
test
aad
push
adc
pop
lahf
fistp
das
inc
add
outs
aaa
adc
dec
sub
and
mov
aaa
arpl
pop
or
mov
std
ins
out
sbb
dec
and
pop
push
push
sti
mov
ret
jbe
add
and
push
inc
addr16
adc
add
xchg
add
sbb
xchg
clc
sub
cmps
arpl
in
rol
inc
jp
js
jns
arpl
lock
(bad)
inc
sub
loopne
fs
push
icebp
loopne
dec
mov
mov
ds
pop
into
inc
sbb
xchg
mov
or
push
dec
loopne
mov
fwait
push
movs
jg
jns
adc
mov
popa
sub
aas
jbe
sti
mov
pop
std
dec
das
and
je
cdq
jnp
push
fidivr
jle
aaa
xor
or
fadd
aas
inc
jo
imul
mov
mov
add
mov
cmps
(bad)
push
fs
mov
js
mov
pop
or
fxch
pushf
imul
les
out
(bad)
jb
sti
inc
xchg
out
xlat
cld
lea
dec
pop
inc
inc
das
xchg
fiadd
mov
imul
sbb
mov
sub
(bad)
sub
mov
inc
mov
sub
sbb
mov
xor
dec
cdq
push
push
data16
add
cmps
sbb
adc
jne
js
jp
test
rol
sbb
fst
mov
xchg
mov
cwde
sbb
js
lods
mov
call
adc
jmp
lods
adc
je
test
inc
test
cmc
leave
cdq
jp
sbb
jg
mov
and
add
clc
mov
pusha
aaa
add
outs
icebp
clc
dec
outs
clc
cld
mov
clc
cmp
scas
clc
cld
retf
cmp
das
stc
mov
iret
mov
xor
cdq
clc
mov
xchg
div
cs
or
test
mov
pop
pop
sahf
aad
push
hlt
xchg
cmps
(bad)
pop
xchg
push
js
shl
cdq
fwait
push
jg
into
ret
mov
jns
mov
out
sub
sbb
or
jmp
fiadd
push
push
inc
inc
fsub
dec
push
add
ja
(bad)
push
dec
(bad)
cmp
repz
push
sub
mov
mov
mov
jo
pop
daa
(bad)
pop
inc
fst
dec
or
jle
jg
dec
adc
and
cmp
adc
mov
and
or
les
(bad)
push
dec
sbb
repnz
pop
push
sub
repz
xor
adc
(bad)
imul
dec
and
rcr
adc
fisttp
int
shr
pop
cwde
adc
and
xchg
lds
add
in
inc
push
mov
fsub
dec
push
inc
mov
xrelease
mov
nop
or
mov
push
stos
pop
lahf
and
mov
movs
inc
xlat
adc
sub
fldcw
std
push
fmul
aam
in
and
jl
inc
rcl
push
gs
push
mov
std
(bad)
or
repnz
dec
add
sub
adc
push
ret
jb
lods
dec
daa
adc
push
jecxz
dec
es
stc
or
pop
std
push
sbb
xchg
cmps
cmp
push
inc
inc
mov
aad
or
cli
loope
sub
fsub
adc
mov
es
or
add
adc
jno
lods
dec
ins
mov
dec
arpl
jns
ret
js
shl
mov
cmp
mov
mov
rcr
clc
jo
inc
sahf
les
daa
ins
xchg
or
mov
xor
fild
clc
mov
repz
cmp
sbb
jo
pop
lock
loopne
adc
mov
pop
xchg
int3
add
add
out
pop
ins
imul
pop
scas
bound
xchg
aaa
mov
int
push
sbb
or
sbb
mov
jg
ins
pop
arpl
inc
shr
jmp
inc
jo
jmp
mov
outs
test
adc
or
pop
jmp
dec
lds
mov
sbb
and
xchg
mov
xlat
add
pop
scas
cmp
sub
daa
(bad)
adc
loopne
push
ins
fstp
fimul
int
sbb
inc
mov
(bad)
stc
push
xor
sub
std
out
and
xchg
mov
inc
jle
add
stos
jno
pop
sub
dec
inc
xchg
popa
and
adc
mov
mov
int3
(bad)
dec
shl
cmp
pop
jae
retf
ja
lahf
inc
cmp
jg
mov
jno
pop
not
fs
push
push
dec
push
aad
xchg
sbb
add
(bad)
cwde
ins
leave
inc
mov
pop
loop
sbb
ja
xor
(bad)
lods
movs
xchg
mov
cmp
daa
cmc
mov
xchg
push
sbb
add
push
xchg
jae
sbb
sbb
sub
push
jb
xchg
(bad)
fcmovnb
call
sbb
mov
cmp
pusha
add
xor
scas
seta
popf
adc
(bad)
pop
iret
cmp
(bad)
sbb
xor
inc
fcom
and
add
movs
inc
data16
dec
lds
mov
add
movs
pop
lods
sar
cmp
and
or
fisttp
aas
(bad)
or
pop
out
out
(bad)
ret
push
xchg
mov
and
shl
xor
pusha
pxor
fdivrp
imul
jmp
mov
fmul
sbb
ds
rol
clc
jle
call
jp
push
loope
inc
je
dec
xor
cli
xlat
sbb
dec
leave
(bad)
dec
imul
sub
stos
js
dec
scas
jns
dec
lods
jns
retf
cmp
out
js
retf
cmp
call
mov
scas
(bad)
add
nop
(bad)
iret
data16
lods
call
jl
outs
mov
sub
gs
pusha
popa
mov
xchg
xchg
mov
scas
adc
jbe
call
and
out
gs
dec
jg
adc
and
iret
inc
add
aad
ins
scas
(bad)
ds
mul
data16
iret
movs
xor
out
jle
outs
(bad)
push
bound
mov
jo
jmp
dec
shl
pop
inc
stos
(bad)
push
imul
lock
xor
jmp
mov
mov
pusha
mov
mov
push
xchg
out
and
ins
scas
mov
inc
in
adc
add
mov
test
push
jmp
add
cmc
jmp
jmp
cmp
loope
outs
and
push
adc
inc
or
xchg
nop
mov
icebp
gs
pop
cmp
cmp
sar
xor
or
loop
fstp
lock
cmp
ror
xlat
mov
sbb
into
int
xchg
jle
fsubr
push
mov
add
add
inc
add
cli
mov
mov
mov
jne
test
mov
sub
xchg
cs
sub
retf
xor
imul
add
xor
(bad)
std
push
push
add
pop
cmp
out
adc
xor
pop
in
add
cmp
pop
push
xchg
scas
inc
jle
xor
xor
push
ficom
sub
out
sar
jp
test
jp
in
mov
sbb
mov
loop
mov
mov
inc
test
push
test
mov
xchg
push
jmp
fwait
push
cs
jns
add
pop
popa
pusha
sti
jmp
push
or
cmp
pusha
dec
clc
push
cdq
fmul
xor
test
xchg
cmc
mov
cdq
add
adc
int3
fiadd
int3
lods
out
inc
ficomp
retf
xchg
adc
test
inc
mov
sub
inc
push
daa
or
push
xchg
or
dec
int3
pop
xchg
dec
leave
mov
es
int3
outs
xchg
bound
ins
js
sbb
mov
and
ret
push
sbb
sbb
mov
cs
jno
jmp
sub
retf
sti
out
or
adc
addr16
or
iret
into
pop
and
cmc
jmp
out
mov
mov
xor
(bad)
pop
mov
ss
xor
cmp
jp
push
movs
jmp
ror
sub
cmps
mov
ret
push
outs
inc
sbb
cwde
push
adc
fisttp
sar
push
xchg
arpl
shl
js
fucomp
pop
inc
aaa
ss
stos
push
(bad)
aam
inc
fcom
push
repz
xor
(bad)
in
cmp
cmp
adc
out
sub
xchg
(bad)
cmp
hlt
mov
cli
push
push
addr16
into
and
inc
push
not
and
pop
sbb
and
xor
xor
pop
push
repnz
sub
out
pop
test
shl
popa
ss
ins
dec
test
xor
cmp
jecxz
cmp
ins
push
popa
in
sbb
rcl
in
dec
jno
cli
dec
fcom
sub
jo
fld
push
out
frstor
cdq
sbb
ss
xchg
sub
jecxz
jno
xchg
movs
call
jle
out
adc
add
pop
add
std
pop
call
add
xchg
jae
add
pop
ins
call
lea
xchg
or
icebp
mov
cmp
stc
mov
(bad)
jl
inc
aad
into
or
mul
adc
mov
pushf
daa
lds
adc
dec
sub
fisttp
mov
hlt
cmp
pop
stos
jl
xor
call
push
imul
adc
loope
cmc
or
xchg
push
(bad)
mov
enter
(bad)
or
cmp
add
scas
push
mov
fucom
cmp
jmp
push
sti
mov
jge
xchg
pusha
aad
push
test
fld
adc
adc
mov
shrd
xchg
mov
icebp
dec
cmp
mov
enter
push
mov
inc
and
fsubr
add
mov
mov
lock
cmps
cs
in
les
mov
ins
pusha
or
add
sbb
adc
fwait
imul
and
jne
idiv
stos
jge
pushf
xlat
push
jge
xchg
mov
dec
call
mov
(bad)
xlat
rcl
sbb
mov
mov
imul
jno
inc
push
sbb
rcr
out
(bad)
aad
xchg
fcmovnbe
rcl
das
not
adc
sti
movs
jno
mov
aaa
fwait
and
add
cmp
aas
inc
mov
mov
sbb
call
pop
push
(bad)
xchg
cli
push
or
pop
es
add
fimul
retf
xchg
lock
inc
push
push
(bad)
xor
jl
pop
cmp
push
jmp
inc
sbb
pop
stos
lahf
sub
mov
(bad)
sub
xchg
inc
push
ja
call
add
jg
adc
and
mov
xchg
fs
pop
shr
int
in
(bad)
arpl
mov
push
sbb
into
jecxz
push
scas
inc
sub
xchg
mov
jecxz
mov
jecxz
cli
popf
sbb
inc
mov
mov
add
pusha
add
sub
movs
dec
popa
inc
mov
inc
mov
inc
out
lahf
popa
mov
aaa
mov
mov
fidiv
sub
adc
lods
jp
cmps
imul
je
enter
jle
xchg
test
cmp
xchg
rol
(bad)
aas
stos
xchg
xchg
and
or
mov
and
jne
in
cli
xor
and
push
push
aad
dec
in
push
sub
or
leave
xchg
dec
(bad)
cmps
add
pop
fcomp
repnz
and
xor
add
and
and
pop
mov
in
adc
cdq
cld
ret
inc
jp
int
jae
sbb
nop
leave
cld
call
cmp
or
js
mov
mov
mov
lods
and
daa
mov
push
out
fsub
aas
ins
in
daa
movs
test
aas
pop
fsub
add
cld
scas
mov
jae
push
cmp
adc
std
push
sub
sbb
xchg
xchg
pop
(bad)
cmp
mov
mov
je
add
scas
jne
ret
(bad)
imul
push
imul
sti
jnp
jle
adc
inc
mov
or
bnd
das
imul
pop
int3
sbb
inc
repz
test
mov
xchg
js
or
inc
jp
mov
or
rep
sbb
data16
mov
test
enter
outs
leave
hlt
xchg
xchg
xchg
xchg
or
cs
popa
mov
lea
fmulp
loop
test
aad
push
xor
and
jo
les
or
movs
xchg
cld
cwde
pop
ss
test
lods
movs
les
gs
rcl
shr
mov
arpl
dec
scas
movs
cdq
mov
inc
or
(bad)
pop
lea
inc
jge
adc
and
popf
arpl
(bad)
scas
mov
dec
push
dec
or
(bad)
dec
xor
cdq
es
rdpmc
sub
movs
xchg
add
retf
sub
aad
mov
push
jno
fstp
scas
cmps
jmp
adc
jge
aad
inc
xchg
jbe
ror
cmp
iret
stc
cmp
inc
frstor
pop
test
gs
pop
or
xchg
dec
enter
sbb
cmp
mov
ss
inc
test
movs
xchg
dec
dec
addr16
ror
mov
scas
xor
sbb
push
stos
fwait
sub
std
aad
inc
(bad)
and
stos
cmps
lahf
retf
arpl
in
ds
dec
out
pushf
jmp
call
xor
cli
ds
cmps
or
mov
xor
mov
popa
dec
fimul
mov
inc
push
in
adc
icebp
fwait
pop
adc
jb
popa
jnp
sub
pop
lock
and
xchg
out
adc
repnz
sbb
mov
cmps
lock
dec
sbb
mov
loop
xor
mov
out
popa
lods
push
lds
popf
pop
popa
push
pop
rcr
arpl
lahf
adc
mov
mov
ss
out
nop
xor
loope
aam
pop
xchg
pusha
or
test
sbb
ins
xchg
jae
push
ja
jno
add
inc
fstp
pusha
jmp
fidivr
daa
xor
mov
and
xor
fstp
aam
dec
ja
pushf
push
mov
popf
pop
xor
stos
dec
jnp
lods
movs
mov
ret
adc
mov
cmp
inc
pop
cs
sub
push
push
add
mov
(bad)
dec
cmc
sub
mov
push
jp
cmc
fst
mov
cdq
out
xchg
jbe
das
leave
bswap
push
sar
jg
aam
xor
lahf
popa
aam
dec
add
loop
xor
sbb
adc
xchg
retf
sbb
add
push
test
cmp
mov
jns
jmp
push
adc
(bad)
sar
mov
fstp
xchg
out
imul
and
or
cmp
sbb
push
xor
push
out
adc
ss
adc
cwde
sbb
adc
mov
sub
mov
dec
cld
mov
sbb
jp
rol
push
cmp
and
jns
std
sbb
cwde
adc
add
sti
jl
repnz
jb
dec
outs
mov
jns
addr16
daa
dec
jl
ins
in
cmps
ins
nop
(bad)
fcmovnbe
xor
mov
out
imul
sti
leave
repnz
push
lock
rol
lods
cmps
dec
shr
adc
jo
sbb
adc
sub
mov
jmp
mov
xor
imul
sub
ja
test
jno
jo
(bad)
jmp
dec
pop
add
imul
fcom
sub
shl
xor
daa
das
jmp
pop
sbb
add
int3
mov
add
add
mov
pop
adc
movs
or
stc
mov
scas
jbe
daa
mul
outs
jecxz
xchg
jmp
jg
add
inc
inc
jg
ss
adc
xchg
(bad)
inc
les
loop
adc
add
pusha
loope
cmp
fimul
xchg
inc
add
xlat
sahf
retf
jp
data16
sub
pusha
fild
mov
mov
in
cmp
test
mov
pop
or
adc
jg
imul
sbb
xchg
rcl
or
mov
fwait
cdq
push
xor
stc
clc
inc
lods
push
dec
push
call
ret
popa
jno
and
add
lods
sar
mov
lahf
repnz
jnp
lods
fimul
outs
jae
cdq
out
fwait
(bad)
test
mov
(bad)
and
mov
das
mov
cmp
shl
push
ficomp
jecxz
and
pop
lahf
int3
xchg
jmp
push
stos
lahf
sbb
cmps
(bad)
stc
js
fild
mov
cmp
mov
push
mov
cli
loope
add
in
push
(bad)
mov
loop
sar
addr16
mov
stos
inc
in
jne
call
push
imul
out
sub
test
es
sbb
adc
xor
mov
movs
push
mov
mov
add
(bad)
jno
out
adc
sbb
hlt
std
mov
loop
std
mov
test
mov
mov
xor
std
push
xor
and
out
cmc
inc
inc
or
ret
xor
(bad)
imul
push
test
sti
(bad)
lods
repnz
jl
dec
jl
xchg
loope
lock
gs
repz
int3
push
mov
dec
sub
xlat
xchg
lock
push
xchg
out
test
push
sub
inc
and
adc
daa
jmp
sbb
inc
lock
add
pop
mov
xchg
jmp
in
push
aam
test
(bad)
cmp
cmc
mov
push
repz
mov
outs
stos
sub
xor
push
pop
sub
cmps
pop
mov
sbb
xor
loop
js
sbb
push
outs
inc
shl
in
loope
ds
sub
mov
mov
arpl
inc
push
aaa
dec
loope
pop
nop
js
cmp
lods
push
sbb
aad
sub
gs
sbb
adc
inc
les
push
xchg
out
xor
mov
arpl
cmp
jle
mov
es
add
cmc
fwait
jl
xor
in
or
mov
add
jp
and
mov
mov
daa
in
sub
cli
add
pop
shl
push
inc
xchg
pop
inc
jle
pop
ins
jecxz
xchg
add
std
and
sbb
cmp
mov
mov
mov
popf
push
shr
add
lea
mov
scas
push
add
adc
fsub
dec
add
fnstcw
cmp
movs
fldenv
hlt
push
mov
jbe
xor
add
sbb
and
pop
mov
inc
inc
lods
push
mov
stc
sbb
addr16
retf
out
push
in
sbb
aaa
ins
or
or
hlt
pop
(bad)
jecxz
je
sub
loopne
xor
rcl
add
fwait
test
loope
inc
pop
clc
leave
cmp
pop
dec
(bad)
xchg
mov
(bad)
shl
outs
add
jmp
(bad)
push
jmp
aad
cmps
mov
sub
sub
cld
cmps
mov
cs
sub
xlat
push
fsub
jecxz
call
in
sbb
neg
inc
adc
push
sbb
in
ss
dec
popa
fsub
xchg
lahf
repz
imul
stc
lods
jb
ret
aad
jmp
sbb
and
int3
dec
stc
in
sub
test
inc
mov
test
(bad)
jmp
cmps
fs
shr
xor
inc
mov
imul
adc
lahf
jg
ss
aaa
movzx
fidivr
fcomi
call
movs
arpl
ins
xchg
test
scas
outs
push
add
pop
daa
inc
push
adc
mov
cmp
je
lods
mov
push
sahf
sub
je
jmp
aad
cwde
jge
ins
cmp
call
xor
daa
out
or
jg
cld
fcomp
enter
push
outs
lods
dec
and
popf
cmps
add
inc
pop
loope
mov
call
xor
mov
pop
or
mov
jecxz
dec
ins
push
pop
cld
xor
pop
sar
sbb
dec
(bad)
mov
xchg
push
push
sub
inc
(bad)
sbb
jbe
scas
or
jnp
dec
jge
xor
mov
stc
in
xor
inc
dec
mov
call
mov
lods
xor
push
leave
icebp
pop
inc
jb
dec
inc
cdq
clc
mov
pop
sbb
fcomp
jmp
jl
jl
je
frstor
sub
mov
lock
cmc
out
xchg
fcomp
clc
lds
fadd
push
mov
jo
add
stos
js
or
js
or
mov
cmp
out
js
retf
cmp
outs
jl
xchg
lods
movs
push
and
mov
push
call
mov
arpl
es
mov
jg
mov
mov
clc
cld
or
mov
call
and
pop
stos
cld
pop
fcmovnu
dec
inc
mov
and
(bad)
or
xchg
add
or
cmp
imul
lea
aad
cmp
shr
sub
out
cs
mov
movs
fsub
dec
add
pop
je
jp
rcr
and
test
fiadd
push
jmp
test
fcmovb
and
jmp
mov
in
xor
mov
push
mov
sub
pop
test
es
add
leave
popa
icebp
pop
lahf
mov
add
stos
add
jbe
test
adc
lea
jb
(bad)
(bad)
mov
mov
inc
test
hlt
js
jg
dec
cmps
icebp
adc
add
sbb
jmp
dec
ins
mov
xor
fcomp
gs
adc
cli
xchg
push
inc
adc
shl
adc
loope
lahf
or
mov
js
sub
(bad)
ffree
push
lahf
jae
lea
sub
push
jg
into
fsub
jl
xor
mov
div
paddusb
sub
cmp
xchg
adc
or
cld
mov
jns
pop
(bad)
jge
dec
mov
mov
loop
loope
dec
cmp
lahf
sbb
imul
lods
mov
call
adc
in
and
pusha
mov
jmp
sub
nop
neg
ins
test
inc
dec
icebp
test
cmp
scas
push
sbb
mov
add
push
and
lods
js
popf
ret
ins
aaa
push
mov
mov
push
cmc
idiv
push
bound
retf
add
movs
xor
xchg
sbb
aas
aam
push
cmps
scas
mov
or
fisubr
push
xchg
(bad)
repz
inc
adc
jb
fcomp
fst
call
std
inc
jl
push
jl
pop
test
jge
mov
adc
or
loopne
adc
ja
arpl
mov
rol
cwde
xchg
outs
mov
or
dec
adc
(bad)
jge
jle
pop
xlat
lds
daa
xchg
int
frstor
and
std
jne
and
popa
pop
cwde
adc
xchg
cmc
cmps
mov
pop
sbb
ds
js
and
imul
jb
pop
ds
mov
xchg
dec
mov
scas
mov
test
jge
pop
mov
xchg
movs
pop
fimul
nop
js
popa
push
mov
cmp
les
ins
(bad)
xchg
ret
adc
push
add
pop
fyl2xp1
push
arpl
xchg
pop
inc
or
ror
fisubr
push
mov
sahf
lds
inc
jp
popf
xchg
xchg
xchg
cmp
mov
les
sub
pop
dec
jb
data16
and
inc
jmp
xor
dec
sar
jb
ins
sub
sub
pushf
shl
std
mov
jecxz
outs
addr16
out
push
push
fyl2x
clc
repnz
cdq
mov
int3
fwait
mov
inc
std
mov
retf
shl
test
dec
pop
jo
loop
sar
jecxz
sar
lock
and
push
xor
enter
in
scas
bnd
jmp
sub
imul
push
inc
test
out
fsubr
jo
sub
or
and
adc
sbb
push
sub
loop
or
clc
mov
js
push
scas
xchg
ins
mov
push
add
xchg
add
inc
stc
push
jmp
loop
xchg
cdq
mov
cdq
xchg
jg
es
call
push
int3
jnp
jle
fbld
and
or
sub
dec
xchg
(bad)
mov
movs
dec
mov
ficom
shl
jecxz
cmp
in
movs
pop
mov
ss
imul
sub
imul
aad
daa
out
add
xor
daa
mov
stc
test
cmp
mov
popa
les
in
(bad)
lds
loope
and
jmp
pop
cmp
pop
call
sub
xchg
inc
aam
das
scas
dec
lods
retf
retf
ja
sub
jmp
pop
cmp
sbb
adc
(bad)
inc
and
dec
sbb
fistp
inc
inc
int3
out
jp
and
clc
in
aaa
push
ror
hlt
xor
jl
add
sub
aas
int
data16
movs
int
and
push
scas
loope
pop
in
pop
out
xor
retf
push
in
cs
pop
test
mov
loop
sbb
dec
int3
cli
sahf
adc
pop
add
aas
pop
out
inc
sub
js
push
jl
outs
pop
mov
imul
ja
pop
cmp
dec
aad
sub
xchg
jno
pop
cmp
daa
arpl
outs
inc
cmp
or
mov
xchg
sub
not
xchg
push
sub
xchg
adc
test
push
(bad)
cld
xchg
sub
xchg
and
loope
mov
in
sbb
ss
scas
inc
stc
or
sbb
lds
test
and
add
xrelease
addr16
sar
(bad)
sbb
aam
jne
sub
mov
jge
loop
push
jne
add
clc
add
mov
cld
icebp
enter
xchg
inc
xchg
rol
push
pop
stos
mov
cdq
lds
xchg
jl
out
or
aam
or
lock
inc
pop
add
fwait
mov
dec
stos
pop
mov
mov
stos
loope
dec
push
inc
fisttp
and
arpl
jg
not
xchg
(bad)
add
xor
movs
inc
sub
retf
push
ror
sub
mov
and
mov
mov
fnsave
shl
imul
cs
dec
cmps
(bad)
fstp
pop
xor
iret
ret
les
iret
jbe
ja
out
out
xchg
mov
loopne
jbe
sub
mov
ins
sbb
or
adc
fist
imul
ins
call
push
movs
pop
mov
xchg
push
mov
ins
add
cmp
sbb
popf
call
jg
sbb
sti
popa
repz
es
mov
sbb
std
fidivr
aam
jno
cmp
aam
mov
imul
sub
mov
xchg
xchg
sub
pop
out
or
mov
push
aaa
jg
dec
fwait
add
mov
sub
mov
cmc
outs
mov
inc
adc
mov
stos
sub
xchg
test
and
push
lods
neg
test
inc
inc
nop
lods
call
sti
xchg
sub
in
jb
pop
shl
mov
(bad)
mov
adc
push
lods
retf
pop
ret
stc
idiv
dec
mov
repz
xchg
loopne
dec
pushf
cmc
das
push
adc
rcr
pop
or
mov
mov
es
and
bound
add
lahf
push
bound
enter
lods
jns
jmp
push
xchg
sbb
mov
inc
cs
arpl
cmp
retf
ja
das
mov
aaa
push
stos
sbb
inc
and
mov
xchg
sub
adc
stos
jnp
mov
xor
cdq
fcom
adc
div
mov
les
ds
cdq
adc
sar
daa
loopne
(bad)
int
xchg
push
movs
push
push
ins
popa
lahf
mov
(bad)
cmp
pop
or
jl
sbb
jae
sub
push
retw
dec
ins
rol
and
cmp
retf
or
push
or
or
push
push
push
(bad)
mov
je
jo
push
in
mov
faddp
xchg
adc
add
fcomp
xchg
outs
add
stos
push
jp
and
pop
adc
pop
lods
retf
es
xor
add
(bad)
jo
daa
sti
or
fbstp
daa
add
rcl
in
push
ror
mov
adc
lods
xchg
push
mov
pop
lds
inc
adc
jle
(bad)
cmp
push
xchg
cmp
or
je
(bad)
std
pop
pop
push
and
xlat
popa
retf
sub
dec
pop
pop
pushf
adc
sub
or
std
push
mul
movs
mov
sub
pop
mov
ins
je
cmp
(bad)
sub
mov
les
retf
popa
(bad)
fistp
rcr
lods
push
or
push
jmp
pop
xchg
push
pop
and
es
dec
scas
sub
jl
dec
ja
fs
xor
jns
pop
or
pop
push
mov
addr16
clc
mov
mov
icebp
jae
dec
push
xchg
mov
or
push
lods
ss
cmp
mov
cmc
or
cmp
ja
and
jge
xor
fdivr
xchg
push
sub
jl
mov
inc
add
dec
jmp
push
sar
mov
xor
or
pop
into
mov
repnz
je
rcl
inc
cmps
push
in
sbb
push
sub
push
xor
mov
call
mov
fxch
ss
clc
xchg
test
es
out
lods
lea
pop
dec
jle
or
out
sahf
add
pop
mov
sub
and
cld
cmp
shl
lahf
mov
inc
xchg
mov
or
mov
pop
adc
pushf
call
jge
push
je
retf
popf
cmp
sbb
mov
lahf
test
xor
sar
retf
mov
call
mov
repz
xchg
inc
pop
push
and
cwde
push
fcmovu
shl
out
sbb
inc
pop
mul
in
mov
jbe
cmps
test
adc
dec
out
sti
ins
les
fwait
mov
(bad)
daa
stc
adc
push
aas
cmp
mov
inc
xchg
jle
ins
mov
push
sub
dec
add
call
lods
call
retf
fcom
neg
cmp
nop
inc
arpl
int
mov
retf
add
pop
mov
inc
lods
mov
shr
adc
cmps
jbe
sub
jb
jmp
bound
sahf
aam
or
xchg
cdq
retf
dec
pop
xchg
jmp
imul
adc
cmp
sti
push
scas
bound
fidiv
mov
jecxz
(bad)
add
loop
and
inc
pop
adc
dec
test
and
cdq
sbb
clc
pop
dec
cwde
xchg
outs
push
xchg
shl
fsub
inc
mov
in
mov
in
dec
pavgw
push
popa
mov
sub
mov
retf
rcr
shl
push
loope
inc
lods
shl
sbb
mov
aaa
sbb
clc
mov
push
pop
pop
dec
sub
shl
or
or
mov
adc
inc
xchg
mov
cld
ja
and
fimul
ret
mov
stos
sub
movs
push
lods
jb
jae
(bad)
xchg
cmp
(bad)
mov
gs
pop
mov
and
shl
ret
and
pushaw
mov
jmp
int
(bad)
push
xor
cmps
mov
cld
mov
clc
cmp
scas
mov
mov
sti
mov
xchg
out
shl
mov
mov
nop
jp
or
or
dec
jnp
pushf
adc
popa
jno
retf
and
xchg
pop
push
int
or
xchg
popa
imul
loope
mov
cld
loop
xchg
stos
sbb
jmp
sbb
cmp
fxch
add
std
(bad)
shl
repz
cmps
mov
scas
mov
imul
add
mov
mov
stos
mov
pop
lods
adc
in
pop
out
loopne
call
cli
mov
xor
shl
mov
ss
shl
inc
mov
pop
clc
repz
cwde
pop
adc
clc
scas
not
in
push
push
int
mov
xor
(bad)
fstp
das
movs
shrd
mov
jno
stos
in
xor
mov
sbb
movs
dec
push
mov
nop
mov
sub
mov
pop
jo
test
not
jge
lds
shl
pop
jl
mov
les
in
retf
mov
jmp
lds
leave
loope
retf
ins
dec
dec
shr
cli
mov
inc
xlat
mov
jne
ins
imul
xchg
or
bound
mov
into
mov
dec
xor
xchg
iret
stc
call
mov
pushf
inc
ds
cdq
mov
inc
jl
pop
sar
ficomp
cmp
fisubr
shl
xor
aas
sub
ficom
pop
add
outs
(bad)
dec
ss
cmp
fwait
stos
sub
test
and
cmp
xchg
push
enter
imul
inc
ds
push
arpl
enter
jge
inc
mov
cmp
aad
xor
cmp
inc
cmc
repz
add
lahf
xlat
fstp
call
es
push
pushf
xchg
pop
es
dec
test
adc
push
aad
ins
clc
out
cdq
sub
xchg
in
adc
les
xor
lahf
mov
(bad)
out
xlat
test
stc
rcl
push
scas
sar
fcmovb
mov
mov
sbb
xor
jno
stc
call
jp
rcr
inc
cld
in
aaa
sti
pushf
fst
xlat
ret
popf
cs
adc
xchg
mul
retf
cmp
mov
stos
mov
lds
repnz
sub
sbb
adc
ret
lea
psubsb
adc
frstor
fidivr
push
cmp
mov
das
jb
aas
daa
je
lods
leave
jae
cdq
jecxz
mov
dec
mov
mov
cwde
js
ret
rcr
(bad)
jl
inc
cs
aaa
(bad)
std
cmps
int
mov
das
cmp
repz
outs
mov
xchg
sbb
pusha
sub
mov
(bad)
and
pop
or
rcr
ss
fwait
mov
push
mov
xchg
ret
xchg
mov
sbb
fist
hlt
popa
or
out
dec
ins
ret
repz
add
push
pop
jne
mov
jne
xor
jl
jns
adc
jmp
stc
or
mov
sar
push
dec
mov
dec
clc
pop
jne
arpl
jge
fdivr
pop
mov
aas
jg
adc
cmps
out
and
cmp
push
sbb
add
mov
div
add
or
inc
je
dec
retf
loop
pop
leave
cdq
cmps
cli
mov
push
aad
test
loop
jmp
loope
push
sub
and
fisubr
shl
retf
inc
fsubr
jmp
inc
je
fcom
xchg
mov
xlat
or
sbb
movs
adc
xlat
adc
and
add
mov
mov
popf
adc
sbb
cmp
test
sub
mov
cmp
push
leave
iret
jge
push
mov
inc
(bad)
test
dec
push
int3
cmps
lods
rcr
cld
popa
popf
cmc
jne
sub
mov
fsub
adc
mov
ds
fist
loop
cs
mov
jnp
fsubr
imul
mov
dec
(bad)
jno
jmp
cmp
dec
mov
sub
push
out
or
sbb
add
jle
clc
jo
movs
sbb
xchg
jp
xchg
aas
jp
div
jmp
cli
sub
push
les
data16
xor
aaa
ja
cmp
cmp
sbb
(bad)
mov
or
mul
bound
pop
test
mov
and
or
popa
or
cmovns
dec
mov
add
mov
clc
mov
adc
nop
add
sbb
lahf
imul
xchg
icebp
out
add
push
dec
(bad)
and
(bad)
sbb
and
movs
les
imul
adc
cmps
mov
cmp
popf
fs
or
sar
pop
fsub
pop
mov
fmul
(bad)
aad
cli
mov
mov
in
jo
das
dec
sub
rol
dec
icebp
out
jno
stos
inc
retf
or
rcr
pop
inc
pop
and
pop
shl
stc
idiv
add
push
and
test
mov
(bad)
fbld
xchg
in
nop
mov
(bad)
(bad)
das
jmp
aam
dec
push
repz
cdq
int3
call
push
or
mov
cmp
ins
cs
mov
(bad)
jmp
sub
dec
ret
pop
scas
sahf
mov
mov
jbe
repnz
and
fdivr
push
and
out
mov
inc
add
movs
nop
mov
pop
push
mov
cmps
mov
push
xchg
in
push
and
mov
sbb
out
scas
inc
out
rcl
and
xor
adc
int
mov
or
mov
mov
or
jmp
imul
pop
(bad)
and
add
pop
adc
bswap
pop
jmp
les
pushf
push
out
and
ins
xor
lods
retf
adc
bound
fcmove
mov
popa
enter
mov
xchg
call
stos
sbb
and
test
das
mov
cmc
inc
mov
and
cmps
sub
shr
lods
aad
mov
daa
jo
mov
push
dec
xchg
hlt
jmp
push
mov
stc
cmp
and
nop
xor
xchg
lea
lea
pop
data16
and
add
int
nop
dec
cmp
or
push
mov
xchg
add
stos
jle
inc
xor
out
xchg
push
icebp
xchg
fwait
mov
push
add
stos
call
ror
test
mov
fcomp
add
repz
lahf
push
jae
call
inc
(bad)
cmp
dec
and
into
lock
inc
dec
and
call
mov
out
sbb
fmul
mov
scas
inc
arpl
les
adc
pop
imul
sahf
ficomp
cmp
pusha
mov
xor
adc
push
dec
sub
jmp
mov
dec
(bad)
fist
push
or
or
(bad)
and
and
daa
pop
scas
mov
push
sbb
test
cld
jb
mov
mov
ss
fimul
movs
rcr
dec
outs
sahf
jo
dec
inc
push
mov
sub
xchg
or
jno
je
test
jo
fs
int
js
daa
and
cmovge
cld
sub
xor
push
dec
into
leave
mov
arpl
cli
loope
xchg
gs
cmp
data16
les
xor
xor
lea
loop
xchg
into
pop
aam
push
pop
and
xchg
jnp
in
cld
xor
(bad)
leave
scas
mov
jbe
push
movs
leave
mov
and
arpl
ret
push
popa
jmp
es
pop
adc
pop
loop
ror
adc
sbb
popa
jle
inc
jbe
pop
iret
mov
inc
fild
xor
ins
sub
mov
pop
mov
enter
loopne
xchg
leave
pop
add
(bad)
dec
dec
and
cmp
imul
in
lods
cmp
and
pop
jmp
xchg
loopne
mov
verw
cld
call
sar
popa
in
lods
mov
dec
test
ins
int
sbb
test
mov
jne
movs
xlat
add
xor
or
adc
mov
mov
jge
stos
enter
rcr
dec
scas
pusha
lds
xor
sar
les
inc
push
psubusw
adc
mov
or
rcl
stos
mov
ret
mov
mov
sbb
imul
movs
test
int3
test
idiv
in
mov
clc
clc
cmc
xor
test
push
sar
push
sub
imul
loop
sub
xlat
mov
cmp
pop
push
ins
sbb
mov
and
mov
lahf
adc
scas
in
jbe
xor
cld
or
clc
cld
retf
jl
scas
jl
fsub
mov
cmc
into
movs
jns
fsub
pop
test
scas
std
icebp
imul
pushf
scas
add
and
mov
inc
movs
mov
data16
push
fsub
cli
mov
fidiv
xor
cs
mov
cvtpi2ps
xor
xchg
or
daa
clc
in
xor
shl
shl
fcomip
jmp
cmp
cld
pusha
xor
and
xor
neg
add
xchg
rol
cli
jmp
outs
dec
xchg
add
xchg
or
out
push
and
push
(bad)
cs
cmp
sahf
mov
mov
mov
mov
cld
mov
cld
cld
and
test
repz
cwde
mov
fcmovnb
rol
mov
xor
xchg
sti
ror
(bad)
cld
repz
das
xor
push
inc
adc
sbb
aas
rol
add
leave
mov
xchg
xchg
inc
pop
into
xor
xchg
ins
sar
fmul
or
(bad)
ffreep
mov
pusha
or
stc
cmps
stos
lods
mov
(bad)
jmp
sbb
outs
loop
enter
aas
mov
xchg
mov
sub
fs
inc
call
ret
add
dec
jno
lods
pop
xchg
std
cmp
iret
repz
sbb
test
ins
pusha
mov
imul
pop
imul
cmps
dec
ret
inc
cmp
sbb
inc
add
jecxz
sub
dec
pop
jg
or
stos
movs
pop
mov
call
dec
outs
adc
add
dec
mov
xor
stos
out
icebp
repz
(bad)
data16
repz
mov
int
adc
mov
daa
mov
loop
xor
pop
dec
sbb
rcl
dec
aad
popf
fcom
scas
xchg
jne
je
xor
and
adc
mov
hlt
fisubr
sahf
pop
test
pusha
jge
dec
mov
out
jge
and
push
add
clc
adc
fisttp
inc
std
xchg
or
xchg
pop
xor
fs
add
mov
inc
fisttp
and
mov
xor
mov
push
jmp
cmp
push
jle
jmp
mov
cld
sti
movs
js
es
call
mov
push
mov
cmps
retf
int
xchg
pop
cmp
pop
pop
in
ret
cmp
dec
popf
xor
mov
or
cmps
dec
out
push
pop
cmps
inc
in
rcl
inc
leave
xor
mov
and
dec
fs
int3
jle
and
test
scas
pop
movs
jmp
and
rcl
jno
xchg
cmp
in
enter
mov
mov
dec
sti
adc
scas
cmp
ins
sbb
push
jae
addr16
push
mov
pop
fmul
call
test
test
pop
sbb
nop
shr
add
loop
aaa
sbb
mov
(bad)
sub
and
int3
xchg
sbb
mov
and
mov
pop
popf
lea
xlat
push
outs
xchg
lods
js
sahf
and
or
out
mov
mov
lea
push
push
mov
fdivr
mov
push
ret
cmp
cs
call
adc
ficom
xchg
fsub
mov
loop
imul
stos
sbb
push
push
sahf
icebp
add
test
in
inc
add
loop
arpl
xchg
mov
int3
ss
cli
sbb
arpl
mov
lods
popf
addr16
(bad)
mov
shl
sbb
imul
ja
mov
test
push
or
(bad)
fisubr
or
aad
push
and
push
int3
pop
and
dec
push
iret
mov
fisub
dec
inc
cwde
arpl
pop
shl
dec
pop
jle
cdq
adc
arpl
out
or
mov
(bad)
push
push
out
add
jbe
jp
add
pop
aaa
add
icebp
test
in
xchg
mov
les
ror
rol
cmp
mov
adc
sbb
add
and
les
or
xor
dec
inc
jns
fidivr
mov
data16
jge
jno
sti
frndint
push
dec
mov
add
sbb
and
fldcw
in
jl
mov
dec
shl
dec
push
bound
jmp
xlat
ss
mov
mov
ficom
sbb
les
pop
xchg
pop
push
sbb
cs
leave
in
rcr
pop
or
push
jb
jp
mov
mov
(bad)
mov
adc
aad
std
dec
push
mov
(bad)
adc
push
sub
and
mov
xor
les
pop
add
mov
cmp
pop
and
stos
cli
pop
xor
fisttp
sahf
add
adc
adc
int3
hlt
inc
fld
ins
test
repz
test
mov
das
push
add
mov
int3
outs
sbb
outs
sub
call
test
jmp
jecxz
sub
cld
stos
retf
jb
inc
jp
dec
dec
add
mov
add
scas
scas
popa
sub
mov
loopne
bound
scas
or
out
cmp
mov
push
dec
pop
in
mov
es
lahf
add
mov
inc
xchg
repnz
inc
loop
jp
les
dec
dec
gs
test
stos
rep
icebp
add
dec
pop
imul
pop
cli
xchg
(bad)
xchg
jbe
mov
leave
push
mov
aad
cmps
ror
in
mov
js
stos
sub
add
call
mov
aas
(bad)
mov
push
mov
push
jl
and
sub
call
and
fmulp
aas
or
jg
fild
xor
test
add
jecxz
and
inc
pop
and
shr
imul
xchg
pop
cmp
adc
daa
sub
mov
pop
jno
mov
(bad)
int
test
inc
inc
inc
cld
xchg
xchg
ins
and
xchg
mov
xor
mov
out
cmp
sub
je
cmp
cmp
pop
push
cmp
xchg
int
stc
ins
retf
adc
(bad)
sub
mov
jmp
sub
fcom
aas
movs
pop
aaa
test
sub
fs
and
jle
stos
pop
sbb
fiadd
ficom
add
out
inc
adc
int
aas
mov
sbb
pop
sbb
cmp
xchg
xchg
push
pushf
sahf
dec
cli
lods
repnz
lock
push
mov
ins
call
in
inc
mov
fadd
outs
dec
and
pop
sub
add
pop
cli
add
in
cld
and
sbb
sar
jns
int
iret
out
fcomp
cmp
ins
(bad)
movs
lahf
lods
mov
ret
in
cld
add
mov
loopne
aad
push
sbb
repz
shr
mov
scas
push
and
dec
cli
int3
clc
div
es
sbb
repz
mov
push
sbb
scas
jns
rcr
scas
ins
dec
sar
fbstp
ds
push
mov
neg
mov
mov
mov
aam
movs
add
fs
jecxz
mov
jmp
push
std
sbb
sub
cld
push
shl
jmp
inc
neg
push
xlat
imul
mov
pop
add
sub
(bad)
dec
mov
mov
cld
or
clc
mov
mov
mov
cwde
cmps
(bad)
mov
sbb
into
cld
mov
mov
sub
jle
cdq
ja
(bad)
ss
sub
ret
xor
xchg
dec
test
push
int3
js
dec
ss
clc
push
mov
fbstp
mov
add
cmps
int
mov
jns
test
sysexit
mov
pop
je
jmp
aad
(bad)
mov
xor
xchg
sub
(bad)
fisub
es
push
xor
sti
ds
xor
cmps
lock
stos
mov
outs
addr16
cmp
cld
xor
adc
cs
jg
push
les
dec
(bad)
jl
cmps
pop
sbb
outs
cmovb
sbb
jmp
jmp
outs
out
addr16
popa
(bad)
loope
imul
sbb
sbb
daa
or
scas
or
clc
repz
xchg
pop
inc
scas
jl
ins
dec
packsswb
sub
out
or
jae
rcr
in
dec
das
mov
jmp
cdq
push
sti
xchg
les
jno
sub
cmp
pop
xchg
cmp
xor
dec
cmc
jg
mov
icebp
(bad)
pop
rol
xchg
pop
pusha
leave
test
add
popa
inc
(bad)
arpl
inc
scas
test
and
adc
cdq
data16
mov
adc
mov
sbb
(bad)
movs
arpl
and
enter
xchg
xor
xor
fldenv
xor
cmc
out
retf
ja
push
(bad)
sbb
push
cdq
jns
jae
rol
ret
sbb
mov
and
and
aam
cwde
cli
inc
xchg
faddp
out
mov
lods
hlt
loope
push
mov
sub
call
jmp
aam
sub
movs
xchg
push
mov
add
out
pop
pop
cmps
test
in
(bad)
jmp
enter
cwde
inc
mov
push
xchg
std
lds
int
lea
sub
outs
cwde
(bad)
cli
in
sub
ror
or
mov
mov
add
scas
int
loop
push
push
and
les
push
in
mov
jbe
push
(bad)
cmp
add
nop
es
xor
addr16
jl
test
and
clc
pop
aad
add
cmp
add
aad
pop
into
jp
jmp
mov
sub
jmp
and
fidiv
cmps
cld
sub
outs
pop
shr
outs
mov
loop
add
jns
addr16
fstp
(bad)
call
movs
xchg
push
xlat
iret
mov
cmp
and
stos
jl
adc
outs
fadd
ja
add
mov
dec
jg
mov
cmps
xor
inc
movs
add
xor
inc
and
push
pop
jb
and
xor
repnz
dec
xchg
(bad)
and
mov
xchg
loop
retf
clc
popf
jg
(bad)
mov
or
cmps
hlt
cmps
out
ficomp
(bad)
dec
in
mov
xchg
popf
push
inc
out
inc
fimul
jne
sub
retf
dec
leave
iret
adc
push
dec
mov
add
push
dec
in
ds
fwait
push
addr16
in
fs
push
ja
test
cdq
ds
shl
cmp
xlat
data16
mov
jnp
push
push
mov
jmp
cs
in
aad
ret
xchg
pop
push
mov
pop
sub
sub
push
pop
jns
nop
jno
pop
les
add
or
inc
shl
hlt
fwait
cmp
rcr
movs
in
inc
cmps
cli
inc
jg
push
sub
mov
icebp
into
addr16
mov
cmp
out
mov
ds
add
jbe
adc
xor
nop
xchg
adc
dec
mov
inc
add
cwde
bnd
mov
retf
adc
repnz
js
iret
add
in
push
mov
push
mov
in
xchg
jbe
je
repnz
psllw
sbb
jo
push
xchg
mov
into
jns
bswap
mov
inc
mov
xchg
pop
nop
popf
inc
push
xor
mov
sub
sbb
mov
inc
mov
sbb
cwde
rol
retf
dec
mov
cmp
mov
data16
ret
cmps
push
add
dec
add
into
sti
in
adc
leave
push
sbb
out
movs
or
or
mov
lock
adc
in
scas
jmp
jg
jmp
mov
inc
jecxz
sbb
xchg
cmp
mov
jmp
das
sub
and
lea
fidiv
je
sbb
xchg
sar
dec
cmp
pop
xchg
push
mov
(bad)
or
jmp
jb
fstp
mov
cli
sub
or
add
jmp
test
dec
jmp
cld
sub
retfw
sub
cmp
hlt
(bad)
sbb
sub
mov
jmp
call
cli
add
shl
lods
add
mov
daa
mov
dec
mov
add
xor
mov
fldcw
dec
jg
jne
fwait
repz
add
cmp
or
xor
adc
out
movs
loop
mov
cwde
imul
enter
stc
hlt
dec
fld
unpcklps
dec
retf
push
ret
mov
fcmovne
mov
sub
pop
fld
fist
dec
and
std
push
and
bound
hlt
add
xor
(bad)
ins
sbb
inc
dec
outs
js
pop
cmc
std
push
fdivr
dec
sub
inc
retf
out
jns
leave
add
xor
push
xor
push
mov
xlat
outs
cmp
pop
cdq
fs
sbb
sbb
imul
inc
lock
xor
(bad)
dec
je
outs
xchg
add
jmp
mov
loop
xchg
cmp
sar
push
add
xor
xor
fwait
add
push
mov
repz
xlat
or
dec
pop
sahf
mov
(bad)
or
or
xchg
sbb
ror
ja
lea
mov
jno
pop
sub
cmp
pop
movs
stos
mov
jmp
in
jbe
int3
cmps
sbb
mov
add
jmp
leave
pushf
loop
pusha
je
inc
int3
cmp
ret
dec
pop
sub
adc
jnp
jmp
es
scas
inc
fwait
ja
int3
out
dec
pop
iret
aas
inc
stos
(bad)
pushf
(bad)
icebp
jbe
iret
mov
call
adc
lds
fcomp
and
in
mov
rcl
mov
sub
ret
(bad)
fst
minps
pop
leave
dec
mov
arpl
adc
or
jl
or
or
mov
js
scas
rcl
ss
lods
stc
mov
sub
enter
out
ret
aaa
into
(bad)
mul
jge
scas
(bad)
xor
jl
sub
mov
jmp
push
ret
shl
in
push
push
mov
in
mov
loop
outs
scas
retf
lea
sti
xchg
mov
dec
push
gs
jg
jmp
dec
sub
sbb
mov
imul
aas
inc
int3
cld
hlt
hlt
mov
scas
retf
pushf
mov
mov
pop
xchg
inc
repz
out
cli
std
stos
(bad)
hlt
in
dec
cmps
enter
into
imul
aas
in
cli
lea
cmp
stos
imul
mov
in
leave
(bad)
mov
(bad)
cmp
pop
imul
add
scas
adc
scas
test
or
scas
dec
add
lea
pop
dec
and
imul
mov
repnz
mul
(bad)
shl
retf
dec
adc
pop
cmp
jae
(bad)
js
out
cmps
shl
mov
mov
loope
fistp
outs
pop
jle
retf
popw
in
pop
pop
scas
fimul
sti
pop
cmp
repz
retf
test
(bad)
sbb
and
aas
pop
and
ror
(bad)
int
sub
sbb
dec
(bad)
cmp
cmp
jne
imul
std
push
jg
sub
cld
ja
aaa
inc
sti
das
lock
mov
clc
mov
mov
mov
mov
xchg
lods
movs
into
jecxz
fadd
scas
mov
mov
nop
fprem
pop
pop
clc
or
fwait
fs
fcomp
out
lods
es
retf
cld
inc
shl
jmp
clc
push
inc
jmp
(bad)
clc
cwde
mov
xchg
dec
jmp
mov
scas
mov
fisttp
lock
and
xor
mov
test
lea
enter
(bad)
jle
adc
stos
(bad)
test
mov
ins
mov
stc
add
adc
pop
ins
in
mov
fadd
or
stos
lods
mov
shl
dec
sub
adc
fwait
clc
sbb
js
pushf
ret
stos
aam
pusha
(bad)
push
shr
loop
shr
adc
dec
pop
or
inc
mov
or
out
dec
dec
sub
push
mov
(bad)
pop
jp
ret
mov
mov
mov
cmps
cmps
clc
adc
jns
dec
outs
shl
jmp
dec
sar
int3
ret
xchg
push
movs
stos
xor
push
test
xor
jne
cmp
sub
mov
es
jge
or
inc
jg
aaa
mov
(bad)
icebp
into
popf
addr16
mov
or
mov
cs
test
push
shr
xor
or
cmp
mov
cmps
in
in
add
call
cmp
jne
pushf
mov
jne
out
and
cmps
mov
imul
cld
xchg
push
and
fcmovnbe
arpl
jb
iret
imul
rol
cwde
and
adc
xchg
cmp
out
dec
cmp
cld
inc
out
repnz
ja
ja
jle
push
jmp
or
lods
add
lea
popf
mov
(bad)
ror
dec
ins
js
stc
pop
clc
mov
fwait
hlt
jo
ret
xchg
fdiv
push
adc
jno
ss
xchg
les
cmps
sbb
aad
fist
scas
shr
rol
mov
aam
aad
retf
add
loope
xor
out
dec
xor
mov
lea
stos
cmps
fdivr
mov
les
rcr
cwde
jp
mov
clc
pushf
adc
or
ins
cdq
jmp
outs
mov
push
mov
rcl
loope
cmp
lea
out
scas
arpl
fdiv
cmp
pop
dec
and
mov
sub
cmp
scas
nop
pushf
(bad)
loop
in
jb
push
in
dec
xchg
mov
repnz
xchg
mov
sub
fisub
dec
mov
pusha
pop
adc
jmp
mov
dec
iret
jmp
mov
jmp
popf
test
adc
movs
enter
sti
push
outs
inc
int
repnz
popa
outs
mov
mov
out
js
out
cmp
push
sub
pop
mov
dec
in
sbb
adc
adc
aaa
(bad)
cmc
mov
stc
inc
or
(bad)
cmp
(bad)
in
fmul
cdq
in
repnz
xchg
dec
push
sub
sub
push
popa
mov
xchg
push
lock
push
scas
daa
(bad)
xor
clc
sub
ror
std
idiv
push
dec
mov
pop
mov
in
pop
stos
push
popa
loop
aaa
dec
call
(bad)
and
jl
jns
pop
(bad)
mov
mov
and
(bad)
jmp
pop
movs
mov
push
cmc
push
cli
lea
mov
nop
movs
jb
jmp
mov
inc
icebp
iret
sub
aaa
ror
outs
stos
add
(bad)
sbb
idiv
out
push
shr
int3
sbb
test
ja
lods
sub
inc
mov
push
and
loope
scas
lea
ud0
or
mov
aad
sbb
and
inc
test
out
pop
retf
popf
jb
icebp
jecxz
(bad)
in
mov
push
or
cld
jns
out
out
stos
pop
(bad)
mov
inc
add
lods
int3
cdq
push
push
fwait
(bad)
push
in
lods
imul
(bad)
jb
dec
lods
lahf
ficomp
mov
ins
mov
repz
cli
nop
jp
cld
in
mov
in
or
mov
iret
repnz
mov
and
fdivr
repnz
xor
(bad)
push
into
call
iret
cvtps2pi
jnp
dec
dec
push
fs
test
fwait
and
mov
imul
mov
loope
mov
jg
out
add
inc
bound
pop
push
mov
repnz
test
es
test
xor
shr
out
xor
fisubr
fnstenv
icebp
cmp
or
neg
leave
cld
scas
jmp
scas
pop
adc
jg
lea
mov
or
stc
mov
fstp
xor
sbb
inc
lods
shl
xchg
scas
cld
aaa
iret
pop
scas
pop
loopne
sahf
retf
and
scas
test
int
jne
mov
jg
sbb
fist
and
xor
arpl
xchg
adc
mov
cmp
addr16
and
and
push
mov
jo
les
repz
mov
je
imul
data16
repz
js
xchg
clc
fadd
xchg
xchg
stos
jmp
sar
neg
push
std
call
in
cmp
(bad)
into
vpsrld
push
stos
or
add
mov
fcmovnb
stos
retf
xor
mov
mov
add
ror
mov
dec
mov
cld
mov
mov
jmp
outs
movs
data16
(bad)
and
out
jmp
ja
sbb
add
mov
aam
out
lea
mov
out
push
and
test
jmp
mov
fndisi(8087
sub
pop
jne
adc
(bad)
cmp
jmp
mov
stc
push
scas
fwait
sub
jae
mov
shr
bound
test
repz
sub
fild
inc
sbb
cmp
sub
cwde
jecxz
sbb
pop
repz
fnstenv
xchg
and
stos
mov
mov
gs
jno
dec
pop
sbb
imul
cmps
dec
dec
mov
push
xor
loopne
sbb
pop
into
jecxz
mov
pop
inc
pop
mov
mov
lock
sbb
cld
sub
mov
les
in
rcl
push
call
sahf
pop
loopne
pop
jl
inc
or
jb
ret
es
or
jmp
out
pushf
fnstenv
add
arpl
repnz
push
(bad)
sbb
outs
imul
in
xor
cmc
mov
xchg
jp
jecxz
mov
mov
call
pop
stos
push
icebp
int
push
sbb
fcmovbe
enter
and
fistp
out
dec
fwait
pop
pop
cmc
xchg
add
jp
bswap
sub
call
out
aas
lods
and
mov
sub
push
aaa
loopne
sbb
sar
aas
shr
test
fwait
retf
sub
loop
cmc
fadd
xor
or
das
lods
leave
adc
nop
call
loope
fdivr
mov
cmp
pop
in
xchg
xchg
cmp
scas
sahf
sti
neg
adc
fdivr
fiadd
test
push
mov
or
ins
pushf
lods
ret
jp
mov
test
ins
push
fdiv
loop
(bad)
jno
sbb
xor
dec
and
dec
cmp
lea
pusha
fdivrp
push
xor
mov
stos
xchg
cmps
call
pop
xchg
jle
daa
and
adc
iret
pop
int3
add
inc
fdivr
jmp
push
and
test
mov
test
imul
mov
bound
scas
ret
daa
test
dec
adc
cmp
jg
imul
ret
mov
push
ficomp
cmps
adc
jg
adc
dec
jle
scas
sahf
cmp
fwait
mov
retf
add
pop
cmps
icebp
out
push
lods
push
dec
push
fdiv
lods
imul
test
int
int3
jge
xchg
adc
mov
aam
in
retf
mov
push
sbb
cmps
cld
adc
dec
(bad)
rcl
retf
sti
sbb
popa
cwde
mov
add
mov
mov
bound
inc
cmps
popf
test
test
loop
dec
jecxz
sbb
ret
ret
push
mov
js
fs
rol
fsubr
xchg
lock
sbb
rcl
dec
mov
mov
cmp
mov
test
cwde
mov
or
xchg
mov
ja
lods
mov
(bad)
cwde
sbb
aas
push
outs
shl
cs
movs
cwde
and
ss
stos
ror
cmps
cmp
mov
jle
data16
pop
mov
mov
mov
jmp
icebp
mov
rol
mov
push
jns
test
call
in
inc
cld
adc
repnz
or
(bad)
rol
add
out
aad
push
retf
pop
xor
repz
(bad)
push
in
sbb
(bad)
fstp
inc
jl
push
(bad)
in
inc
fsubr
push
scas
adc
int
mov
jno
or
sti
icebp
jmp
cdq
sub
ins
add
pop
retf
dec
stos
jmp
cmp
scas
mov
jle
mov
dec
shl
add
ret
scas
sbb
loop
and
clc
cmps
jge
add
fcomp
loopne
ret
test
mov
fs
(bad)
sbb
popf
test
xor
sti
scas
xor
loop
mov
push
sbb
call
popa
cwde
jecxz
in
aam
adc
jnp
add
or
outs
push
shr
push
inc
stos
mov
and
pop
push
mov
mov
shl
iret
dec
sub
sub
push
xchg
call
aam
add
mov
movs
add
nop
inc
sbb
ficomp
adc
adc
sub
rol
dec
sbb
inc
mov
repnz
xchg
mov
push
or
mov
sbb
sub
and
into
int3
and
and
(bad)
dec
daa
out
(bad)
xchg
mov
inc
out
xor
dec
test
push
sahf
fstp
out
cmp
test
pop
cmp
ins
mov
mov
xchg
retf
inc
mov
cli
add
jp
int
jmp
stos
arpl
jp
xlat
sub
push
jno
push
cs
add
push
call
stc
(bad)
lods
inc
emms
loopne
jmp
dec
dec
mul
jb
cmc
jle
mov
pop
jecxz
mov
adc
dec
test
sti
xor
add
pop
jge
inc
fst
addr16
nop
mov
call
jnp
push
sbb
jge
add
std
push
aam
mov
(bad)
or
xchg
clc
cmp
push
mov
mov
out
retf
retf
cmp
dec
outs
js
or
jl
outs
cmp
scas
mov
mov
enter
or
jnp
mov
clc
or
js
jmp
js
jmp
iret
stos
jle
(bad)
cld
outs
test
retf
cmp
mov
std
cmp
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
jne
mov
cld
sub
mov
cld
mov
cmp
sti
scas
(bad)
cld
dec
das
cmp
mov
clc
cld
retf
cld
dec
out
cmp
retf
cmp
nop
leave
jl
out
clc
jl
out
mov
cld
retf
cld
retf
cld
mov
js
or
into
jl
out
clc
cld
retf
js
out
js
out
scas
clc
cld
add
retf
cld
retf
(bad)
cmps
cdq
repz
scas
clc
cld
retf
les
cmc
test
int3
mov
test
mov
and
cmp
push
push
out
adc
scas
clc
cld
or
adc
and
sbb
pop
pop
cdq
ror
mov
and
push
call
mov
add
fs
(bad)
movs
out
jnp
into
shl
or
pushf
retf
fbstp
scas
sub
or
fwait
sbb
mov
fnstsw
push
out
cmp
outs
adc
add
inc
add
sbb
push
idiv
mov
cmps
xchg
or
out
push
outs
popa
inc
js
aaa
inc
push
pop
push
addr16
sahf
or
pop
lods
jmp
cmps
xchg
pop
test
push
aam
mov
sbb
push
lods
lds
and
clc
inc
scas
xchg
push
cmp
stos
adc
push
adc
ins
retf
cmps
push
dec
not
cmps
xor
movs
aas
sbb
pop
adc
jbe
push
xor
int3
(bad)
xor
sbb
mov
dec
sbb
mov
cmp
mov
jmp
jge
in
das
jne
cwde
aas
lock
imul
das
or
inc
jne
adc
inc
les
or
(bad)
sti
or
pop
add
dec
movs
sahf
xor
(bad)
xchg
or
aad
mov
mov
pop
xchg
adc
push
mov
mov
sub
dec
cmp
rcr
stc
out
clc
sub
sbb
push
mov
or
ja
fnstsw
loope
and
scas
mov
js
enter
cmps
xchg
xor
scas
inc
or
pop
test
and
mov
popa
pop
loopne
retf
stc
jo
lock
dec
int3
out
aad
adc
cld
retf
lock
adc
jmp
cld
retf
clc
ret
lock
cld
retf
cld
retf
cld
or
stos
js
retf
cmp
outs
mov
cld
retf
std
dec
out
jns
or
xor
iret
daa
mov
cmc
and
retf
cld
mov
jns
xor
or
(bad)
popa
sti
adc
ins
add
rcr
(bad)
inc
sub
wrmsr
mov
gs
sbb
or
or
pop
popf
cmc
or
sub
mov
loopne
dec
push
inc
fisttp
inc
jp
sub
pusha
scas
jns
jp
push
ret
jmp
xor
xchg
xor
sti
out
push
pop
or
xchg
aad
xlat
test
sahf
fist
pop
out
mov
mov
sti
(bad)
xchg
cmps
out
sub
je
jnp
and
cmp
je
jge
aad
outs
fisub
ror
add
cmp
and
int3
mov
int3
shr
std
test
push
mov
push
adc
push
pushf
dec
add
lock
adc
mov
fsubr
fisub
cdq
fadd
arpl
push
sahf
mov
movs
adc
mov
adc
inc
in
dec
ins
cmc
mov
cmps
xchg
ds
and
ins
std
jp
push
jp
mov
loopne
dec
jno
or
addr16
mov
mov
lea
pop
fsubr
fistp
iret
daa
pop
mov
xlat
cmp
imul
pushf
push
jns
mov
mov
vmread
lods
xchg
es
loop
adc
test
xor
mov
fmulp
aaa
jle
mov
cmp
sub
leave
jae
mov
out
sbb
popa
add
out
(bad)
loop
test
cmp
je
stc
cmp
inc
(bad)
adc
jno
inc
cmp
or
test
iret
not
fnstcw
in
test
jbe
call
xor
test
pop
sbb
add
push
jae
pop
cmp
jbe
(bad)
in
dec
addr16
pop
addr16
mov
popf
pop
hlt
loop
lock
pushf
fs
mov
adc
lea
sub
call
mov
or
sbb
inc
cli
pop
xchg
xchg
sar
push
int3
popa
call
adc
xor
stos
push
cmps
cmp
stc
adc
jns
or
lea
repnz
pop
or
stos
loopne
stc
xchg
dec
scas
popf
imul
push
jmp
(bad)
aad
stc
fld
dec
test
mov
in
imul
imul
or
dec
mov
out
jmp
ins
mov
push
je
inc
xor
or
scas
aaa
xor
inc
mov
(bad)
pop
retf
jae
std
pop
inc
aad
aas
call
jae
ficom
mov
cwde
and
cmp
jecxz
push
fwait
stos
cs
mov
or
pop
(bad)
dec
repz
xor
pop
adc
popa
jb
fidivr
push
test
xor
cmp
and
mov
nop
or
inc
push
dec
call
movs
or
popa
jnp
xor
das
mov
lods
jecxz
outs
mov
pusha
push
movs
mov
pop
stos
test
sbb
inc
retf
cmp
mov
xor
fimul
nop
leave
cmp
stos
mov
cmp
cmp
out
clc
cld
or
jl
mov
mov
dec
cmps
mov
into
sub
out
xchg
xor
test
jl
out
cmp
mov
mov
ds
mov
pop
popa
aam
ret
add
into
test
ins
outs
aaa
jle
adc
adc
retf
stos
sbb
cdq
scas
cwde
jb
push
or
hlt
cwde
jae
shl
sbb
inc
stos
arpl
into
test
shl
jb
sahf
pusha
jne
ins
push
ret
add
cmps
mov
or
shl
test
ins
js
out
movaps
stos
(bad)
mov
cdq
sbb
fidivr
push
(bad)
jl
inc
fisttp
xchg
fsqrt
jnp
push
shl
mov
fst
dec
call
mov
popf
and
in
push
ret
ins
sbb
add
movs
in
pop
and
je
outs
and
ficom
outs
sbb
xor
mov
not
(bad)
sbb
(bad)
sub
aas
mov
or
ja
sub
pop
out
mov
mov
int3
push
jns
popf
test
repz
ds
xor
sbb
push
mov
into
rcl
neg
cmp
adc
and
adc
mov
(bad)
and
push
cmps
cld
mov
or
jge
(bad)
cmp
out
mov
xchg
pop
imul
test
jb
dec
dec
imul
mov
cmps
imul
movs
jge
cmps
cmp
xchg
add
ins
dec
std
mov
(bad)
sbb
leave
js
mov
mov
div
xor
jp
xchg
ins
mov
call
(bad)
mov
aad
imul
nop
mov
xchg
mov
popf
je
sahf
sti
inc
ret
pop
imul
out
push
pop
mov
mov
sub
mov
ja
lods
cwde
mov
fbstp
int
loop
cld
mov
jl
outs
cmp
retf
scas
clc
mov
or
xor
jecxz
hlt
fisubr
enter
mov
mov
not
ds
out
mov
add
and
mov
sbb
push
cmp
sar
hlt
dec
call
cmp
fwait
movs
jg
mov
inc
cdq
xchg
push
push
imul
mov
jmp
or
mov
or
adc
in
in
pop
out
and
gs
add
sub
adc
inc
xor
pop
jl
div
xchg
lds
ret
mov
lock
(bad)
mov
fsubr
sbb
mov
add
and
(bad)
mov
jp
dec
adc
(bad)
adc
jns
enter
popf
iret
push
outs
loope
mov
mov
xchg
imul
sbb
lea
nop
js
xchg
or
inc
loope
pop
lods
loopne
test
jnp
jp
sub
or
mov
sbb
retf
xchg
ds
in
mov
xor
or
sub
jge
mov
push
cli
sar
and
jnp
xchg
xchg
test
in
pop
and
mov
push
ret
push
jb
mov
test
addr16
xor
dec
push
mov
popa
ss
dec
mov
push
sub
xor
bound
arpl
popf
inc
adc
fnstcw
enter
dec
stos
rol
mov
(bad)
cdq
dec
(bad)
xor
fld
mov
add
xor
xor
popf
fcom
mov
push
jae
push
test
jne
mov
adc
add
cmp
jecxz
mov
je
fiadd
inc
or
sub
mov
add
lea
lock
mov
adc
sub
lock
sub
inc
dec
nop
mov
lods
mov
mov
loope
inc
ds
or
(bad)
es
shl
test
dec
sbb
push
add
cld
cld
mov
cmp
stc
mov
retf
cld
or
xor
and
push
xchg
iret
pushf
xchg
out
cld
mov
mov
xor
lods
pop
aaa
pop
adc
cmps
xor
or
in
mov
cld
mov
mov
push
sbb
xor
dec
std
add
sub
xchg
cmps
or
and
inc
pushf
mul
mov
mov
mov
(bad)
neg
sub
push
adc
fdivp
inc
repnz
or
mov
sub
stos
pushf
aaa
sahf
sub
call
xor
xor
into
xchg
aam
call
sbb
or
sbb
out
mov
pushf
mov
fwait
mov
out
xlat
push
(bad)
bound
or
push
outs
int3
ins
pop
sbb
mov
or
mov
scas
xor
add
mov
addr16
retf
fs
mov
bound
pop
fwait
xor
jnp
(bad)
rol
xchg
pop
imul
popa
leave
push
lods
das
fmulp
cmps
fwait
and
inc
stos
xor
ja
mov
ins
aam
sub
jmp
stos
fs
mul
inc
mov
clc
call
clc
sub
retf
loop
mov
and
dec
adc
int
in
outs
iret
lods
int3
mov
mov
std
fcmovne
mov
dec
mov
fdivr
and
out
and
mov
dec
out
jne
mov
sahf
inc
jmp
ja
call
or
ret
loope
(bad)
xor
inc
cmps
xchg
xchg
int3
jnp
lods
mov
test
popa
call
jns
add
dec
stc
ds
(bad)
js
sbb
xlat
fldcw
ret
lea
shl
(bad)
fidivr
test
sbb
pop
in
mov
cmp
(bad)
js
mov
inc
idiv
jo
shl
add
sbb
mov
and
pop
xchg
inc
xchg
imul
sub
leave
into
scas
in
jns
in
mov
enter
es
or
out
or
and
ret
mov
xchg
mov
ins
dec
mov
lahf
scas
ret
sti
adc
mov
inc
and
outs
cli
jne
xor
mov
or
ins
xchg
jmp
mov
cmps
lds
add
ja
imul
cmc
or
dec
sbb
push
jmp
jge
cld
pop
xchg
dec
inc
mov
add
enter
xchg
ins
mov
sbb
int
shr
sbb
rol
fidivr
jnp
inc
imul
cmp
push
retf
outs
dec
dec
(bad)
mov
repz
push
jmp
xor
jbe
(bad)
cmps
sub
movs
mov
mov
or
jg
jl
sub
jo
fiadd
scas
leave
xchg
pop
xor
rcpps
dec
mov
lods
sbb
ror
icebp
xor
addr16
retf
jo
out
or
cmp
sub
daa
retf
les
pop
sbb
rcr
and
scas
and
ret
ins
cmps
ins
and
adc
push
icebp
pusha
sti
cmp
dec
adc
adc
rcr
push
pop
test
push
loop
adc
cdq
push
sti
outs
mov
repz
out
les
(bad)
call
mov
call
push
and
repz
mov
idiv
add
cs
sub
jae
lea
jl
inc
repz
sti
or
inc
fsubr
mov
dec
xchg
cmp
hlt
hlt
out
test
push
push
add
push
nop
js
mov
mov
jo
ss
pop
pop
sbb
pop
pushf
mov
pop
sub
test
push
daa
dec
(bad)
or
xchg
cmp
int3
xor
sbb
jno
repz
or
fwait
movs
out
push
int3
adc
jo
push
cmp
xor
inc
call
xchg
dec
push
jl
xchg
cmp
lahf
and
das
sub
int3
bound
cmp
jb
add
outs
dec
fimul
loope
or
jge
hlt
std
add
mov
sub
mov
out
rcl
and
mov
or
xchg
fadd
iret
adc
loop
cmps
adc
cwde
xchg
mov
ds
and
and
loopne
mov
pop
mov
mov
xor
mov
xchg
scas
mov
lea
jecxz
adc
push
loop
nop
mov
es
mov
pushf
jp
test
out
pop
cmp
pop
mov
out
sub
mov
repnz
pop
inc
pusha
mov
stos
sti
(bad)
rep
aam
xchg
mov
cmp
data16
dec
push
into
and
call
pop
mov
xchg
mov
repz
push
xchg
stos
jge
idiv
xchg
popa
mov
mov
pop
and
out
push
sub
xor
pop
fmul
dec
or
mov
pop
pop
adc
sbb
lods
ret
cld
dec
add
nop
mov
inc
jle
cmp
push
and
jns
movs
add
mov
mov
sahf
pushf
adc
mov
mov
or
hlt
out
inc
lds
repnz
mov
mov
int3
fild
enter
dec
add
outs
xor
ss
pop
inc
test
popa
pop
mov
dec
iret
jae
sub
fidivr
add
jo
ficomp
ss
jge
int
xor
mov
xchg
pop
jo
sub
fld
adc
add
popa
and
push
jb
stos
inc
arpl
push
ins
ret
or
fcomp
mov
sub
retf
push
fnstsw
or
mov
mov
shr
lea
xchg
jno
test
int
mov
fld
add
cmps
(bad)
inc
fs
cmp
std
adc
or
sub
sub
cmp
add
sub
adc
(bad)
or
or
stos
inc
fbstp
les
mov
jl
and
(bad)
adc
(bad)
cli
lods
outs
int
cmp
hlt
(bad)
jb
stos
pushf
push
(bad)
mov
je
daa
adc
cdq
push
pop
ins
cdq
outs
cwde
inc
or
call
stos
push
test
fild
sub
aad
nop
xor
vmovhps
test
adc
sub
outs
sub
mov
push
dec
setnp
ret
outs
push
das
or
(bad)
aam
adc
pushf
jns
fidivr
hlt
jl
ja
push
jp
dec
sub
dec
mov
sub
inc
pop
xchg
cld
aad
mov
ja
enter
cmp
pop
shl
mov
add
or
cmc
inc
xor
ret
add
pop
cmp
push
daa
(bad)
mov
test
jp
outs
rol
inc
add
sbb
out
or
imul
retf
xor
rcr
inc
jbe
inc
or
cdq
push
in
or
test
mov
adc
sbb
adc
sbb
or
lahf
mov
dec
push
(bad)
fld
enter
pop
push
arpl
lds
jne
cmps
mov
jl
inc
jns
or
outs
cdq
stos
and
out
dec
movs
loope
(bad)
mov
fabs
mov
push
mov
lods
inc
repnz
pop
sub
pop
cmps
jae
(bad)
xchg
mov
faddp
or
out
dec
mov
cmp
daa
fsubr
test
sbb
int3
push
repnz
aad
movs
mov
jl
std
(bad)
sub
push
sub
lods
test
ret
popf
cmps
aam
repnz
inc
cli
adc
jbe
add
in
xor
sub
fld
mov
push
stc
dec
dec
cmp
pop
(bad)
je
xor
(bad)
mov
outs
xchg
jno
jmp
mov
addr16
sub
sub
clc
movs
jmp
scas
loopne
inc
(bad)
mov
test
je
mov
dec
cld
adc
push
add
jb
(bad)
jl
inc
lods
ficom
popf
and
inc
sub
pop
cwde
sahf
sbb
pushf
jle
cld
pop
(bad)
outs
push
jecxz
lods
adc
out
mov
push
inc
add
ja
add
adc
int
cmp
mov
or
les
lods
and
sbb
jns
xchg
jecxz
retf
pop
cdq
icebp
push
adc
repnz
loopne
inc
std
ss
js
arpl
push
loope
push
adc
push
loop
pop
lahf
xor
cwde
pop
cld
in
aas
outs
aam
jl
(bad)
push
and
in
test
cmc
outs
xor
xor
jb
adc
push
xchg
retf
mov
cmp
daa
(bad)
cmc
inc
jle
add
(bad)
lahf
aaa
stos
cmp
push
jno
dec
sar
out
mov
mov
pop
xchg
pop
and
out
outs
add
xor
cmp
push
dec
mov
or
lock
add
xor
movs
mov
add
push
or
xchg
sbb
mov
inc
dec
sbb
mov
add
xor
inc
pop
bound
sub
ret
sti
loopne
lea
std
ret
shr
jns
enter
dec
pop
mov
xchg
xor
sub
test
jns
(bad)
lea
inc
sub
mov
fwait
push
sahf
(bad)
popa
test
jl
movs
ins
jae
ja
retf
sub
sbb
dec
dec
add
fisttp
inc
jbe
loope
inc
pop
xor
sbb
repz
adc
pop
xchg
xor
out
outs
xchg
sub
(bad)
jnp
test
xchg
call
sbb
mov
sub
pushw
sub
popa
push
ret
aas
xor
fldenv
pop
mov
shl
in
push
dec
sar
jnp
adc
enter
inc
xor
dec
pop
add
jmp
stos
sbb
sbb
loop
jnp
xchg
sbb
mov
xchg
add
xchg
fucomip
rol
shl
bound
push
pop
dec
lock
pop
mov
aas
cmp
outs
mov
or
and
or
call
push
(bad)
dec
fsub
not
inc
dec
and
cmp
mov
mov
outs
pusha
add
stos
icebp
je
pop
inc
inc
pusha
ds
js
int3
mov
cdq
cmp
adc
fisub
pop
add
out
repnz
mov
clc
jl
outs
mov
cld
mov
lods
movs
xchg
(bad)
cld
mov
retf
nop
sar
xchg
test
mov
inc
mov
in
mov
hlt
xor
rcr
or
jmp
mov
test
scas
or
fwait
dec
push
mov
retf
add
mov
lds
scas
sub
cwde
dec
or
xchg
mov
arpl
xor
not
ja
jno
dec
sahf
mov
sar
cdq
in
bound
mov
call
cmp
mov
outs
xchg
xchg
xchg
push
mov
push
test
inc
mov
mov
cdq
fcomp
add
dec
loope
add
sti
or
into
xchg
push
fistp
cdq
dec
addr16
xchg
push
test
push
xchg
cmp
or
int
dec
repz
retf
loopne
test
ja
and
mov
in
xchg
push
ret
push
or
test
test
daa
rol
call
add
in
push
retf
sbb
inc
push
cli
push
rcr
icebp
iret
rol
or
in
pop
fistp
jmp
sub
or
cmp
sub
jbe
jo
jl
das
xchg
inc
xchg
xchg
outs
mov
adc
leave
es
mov
xor
cdq
and
xor
dec
or
pop
push
cmp
pop
push
dec
adc
adc
mov
mov
(bad)
retf
cmps
pop
ins
lock
movs
aad
or
ror
sub
add
test
and
jl
rol
rol
xchg
pop
sbb
push
dec
and
and
in
xor
clc
xchg
pop
sbb
sub
add
js
(bad)
(bad)
and
mov
mov
scas
pop
and
adc
retf
sub
scas
bound
sbb
xchg
hlt
mov
imul
mov
sbb
add
xlat
xlat
stc
fwait
(bad)
ja
or
out
sub
call
inc
mov
fnstsw
bound
mov
xchg
arpl
pop
fcom
xor
jns
add
add
cmps
pop
inc
ja
inc
add
fwait
retf
test
sbb
jl
scas
es
stc
test
(bad)
xchg
fcmovbe
mov
or
inc
imul
aas
dec
cmc
icebp
inc
sti
lea
sbb
xor
sub
icebp
cs
and
push
or
stc
test
(bad)
add
arpl
pop
push
mov
mov
(bad)
stos
adc
xlat
(bad)
lds
leave
xchg
cmps
mov
jg
jmp
mov
bound
fisubr
mov
je
fs
scas
cdq
and
out
clc
or
pop
inc
inc
adc
inc
mov
jmp
mov
(bad)
sbb
call
stc
(bad)
dec
ret
jnp
dec
(bad)
out
dec
stos
push
in
loope
loopne
jne
xchg
rcr
in
int
aaa
movs
pop
pop
cmp
cmp
or
out
enter
add
add
jp
das
shl
jbe
xor
popf
and
xchg
loop
push
add
div
in
cmc
or
xor
mov
(bad)
jmp
push
addr16
(bad)
cs
pop
sub
xlat
and
sbb
mov
pop
gs
pop
fs
sbb
sub
sbb
out
lods
fwait
pop
aas
aad
sbb
bnd
fcom
retf
jne
call
dec
push
jmp
or
das
cmps
inc
loopne
sub
mov
sub
mov
and
scas
arpl
adc
push
sahf
int3
loopne
jg
mov
data16
sti
and
js
sahf
cmp
jmp
fnstenv
sbb
(bad)
push
nop
loop
mov
jg
dec
(bad)
sbb
or
in
test
repz
pop
or
ins
sbb
hlt
add
fwait
pop
retf
call
data16
mov
dec
sbb
es
and
adc
es
inc
or
sub
fsubr
jbe
dec
in
repz
jno
pop
dec
mov
pop
test
jmp
test
and
fild
mov
inc
and
xchg
add
inc
retf
outs
sbb
xchg
sbb
push
dec
dec
pop
pushf
and
ret
in
and
push
push
or
or
xchg
mov
push
mov
mov
add
sbb
loopne
mov
dec
push
leave
lock
sbb
retf
gs
es
or
(bad)
xlat
mov
sub
xor
jg
dec
mov
push
or
xor
mov
sub
aad
or
inc
pop
add
cwde
adc
sub
mov
sti
push
cmp
and
sub
mov
or
xor
push
imul
mov
mov
repz
stc
shl
ins
xchg
ret
push
cmp
retf
xchg
es
sbb
dec
popa
jle
jg
jg
sbb
out
fs
push
cmp
sub
inc
cmp
jmp
jge
jo
(bad)
jmp
add
imul
xor
mov
fiadd
sub
aam
mov
out
pop
adc
pop
(bad)
shl
and
and
push
nop
das
dec
xor
sbb
cwde
sbb
frstor
call
sub
jmp
stos
xchg
ror
out
inc
xchg
sahf
xchg
data16
out
cmp
faddp
push
adc
std
jecxz
xchg
cmp
cmp
xor
mov
xchg
js
daa
xor
inc
add
sub
iret
xchg
and
fs
inc
add
into
jl
pop
jo
cmp
and
test
push
loopne
sub
push
xchg
shr
sub
fwait
daa
mov
pop
xchg
push
pop
inc
(bad)
xchg
in
sub
xor
ret
leave
mov
in
add
mov
jae
arpl
jecxz
mul
leave
ret
jbe
inc
aaa
sub
mov
inc
cmp
in
hlt
jb
lahf
jne
inc
and
dec
and
daa
push
pop
xchg
and
outs
fwait
xor
(bad)
xchg
dec
out
sub
mov
in
xchg
mov
dec
dec
jne
add
and
adc
or
jge
sub
push
outs
fstp
rol
cmp
jmp
data16
sbb
xchg
jmp
inc
fcomp
lea
xor
or
test
jno
out
inc
mov
fld
inc
cwde
dec
je
out
mov
or
pop
fidivr
xlat
push
adc
add
mov
add
push
xlat
addr16
lock
xlat
push
cdq
push
or
imul
xchg
push
(bad)
mov
pop
ins
mov
push
imul
adc
out
lock
data16
push
push
retf
mov
ins
cmp
sbb
sub
mul
mov
icebp
pop
pop
and
daa
pop
sbb
ret
mov
ins
pop
push
rep
ret
je
sbb
jno
loop
cmp
cmc
(bad)
les
stos
scas
add
aad
sub
jnp
xchg
lods
jle
(bad)
out
cmp
mov
aad
aad
les
cmp
dec
xor
(bad)
pop
aad
jb
add
aam
jne
(bad)
push
push
xor
ins
pop
cmp
adc
arpl
mov
icebp
mov
jbe
pop
test
add
push
(bad)
mov
or
clc
cld
retf
jl
scas
jl
fsub
mov
cmc
scas
lods
jno
fsub
pop
lods
dec
retf
jmp
fsubr
scas
mov
pushf
outs
inc
iret
jmp
mov
mov
ins
cmps
bound
jmp
push
or
call
xchg
push
retf
push
xor
out
fs
cld
cmp
mov
lahf
xchg
inc
es
imul
call
inc
mov
repnz
fcomp
cmps
pop
fwait
dec
fsubrp
xor
fsub
pushf
scas
ret
out
jmp
es
cmc
sahf
mov
mov
mov
clc
mov
mov
cld
cld
and
movs
mov
movs
fsub
cmps
hlt
sub
sub
cld
scas
mov
xor
nop
mov
shr
pop
bound
jbe
cld
test
sti
sub
shl
(bad)
gs
mov
xor
js
nop
adc
xchg
dec
pop
bound
xor
sbb
cmps
retf
jecxz
in
and
mov
pop
fs
pushf
retf
mov
fmul
xor
cmp
stc
mov
sub
and
jle
mov
cmovge
xchg
xchg
data16
sbb
add
fucomi
retf
xor
mov
cmps
fidivr
add
cmp
pop
dec
lock
int3
sub
push
cmps
pop
lds
imul
aaa
(bad)
xchg
mov
pop
pushf
push
iret
repz
frstor
outs
data16
aad
push
dec
loop
imul
stos
or
adc
aam
pop
xchg
cmc
dec
mov
loop
ror
sub
dec
pop
fisttp
scas
test
js
pop
xchg
lods
cmp
or
adc
je
cli
sub
or
xor
inc
jb
shl
pop
pop
sar
jl
call
mov
xchg
repz
push
mov
sub
sub
dec
mov
jle
ss
(bad)
inc
mov
sub
push
adc
ss
mov
das
ds
mov
mov
call
pop
xchg
sbb
test
dec
pop
jns
push
call
inc
or
add
stos
pusha
xor
and
fldcw
inc
sbb
or
stc
pop
cs
xchg
iret
addr16
dec
jmp
mov
retf
push
jns
fwait
adc
lahf
les
adc
jnp
in
mov
in
push
cli
adc
mov
add
aas
pop
xchg
push
add
pop
mov
pop
aad
sub
mov
ficomp
sub
pop
(bad)
mov
js
push
inc
sbb
in
xor
stos
dec
xor
pop
lea
pusha
fbstp
cmp
sub
inc
and
pop
mov
xchg
push
aam
es
mov
mov
fisub
add
adc
ins
rcr
call
mov
push
out
xchg
mov
mov
gs
mov
ins
ins
xlat
mov
sub
out
adc
scas
mov
into
sbb
pop
xor
lods
jmp
inc
mov
adc
inc
sbb
ja
mov
dec
test
fwait
ret
leave
cmp
jmp
jl
das
clc
mov
retf
mov
mov
mov
fsubrp
mov
cwde
mov
rol
test
adc
cld
mov
mov
or
scas
xchg
push
lea
ror
xlat
push
daa
pop
push
cdq
mov
xchg
imul
adc
ror
aad
push
arpl
imul
int
cs
je
into
push
daa
xchg
mov
add
retf
cmp
push
add
dec
nop
int
jmp
mov
ret
mov
loop
sub
shl
rcl
jg
xchg
push
ret
jmp
mov
loop
or
icebp
call
mov
pop
or
adc
dec
cmp
(bad)
sahf
push
not
or
das
mov
mov
cli
or
dec
rol
in
repnz
cmps
cwde
push
ss
or
repz
push
leave
cs
mov
std
wrmsr
jl
jecxz
mov
dec
or
mul
test
push
and
int3
ret
inc
popf
dec
(bad)
mov
or
dec
cmp
ins
mov
js
sar
fimul
sub
arpl
adc
arpl
test
push
ja
jmp
add
jns
xchg
(bad)
jmp
int3
test
add
and
ds
dec
ror
mov
aam
lahf
mov
or
movs
push
xor
cmc
inc
add
mov
sbb
jp
and
mov
(bad)
dec
sub
mov
iret
adc
add
nop
mov
rol
push
or
sbb
inc
leave
xchg
dec
jecxz
cdq
jnp
mov
sub
stos
push
js
shl
imul
push
out
sbb
sbb
pop
ds
pop
dec
jbe
push
loop
out
and
sahf
push
push
cmp
and
jecxz
inc
mov
pop
pop
call
cmc
xchg
test
add
xchg
push
dec
jecxz
cmps
dec
push
xor
imul
dec
call
outs
add
leave
in
push
bound
in
jno
sbb
pop
mov
mov
mov
xor
fwait
xchg
add
shl
call
push
cli
test
(bad)
adc
mov
(bad)
stos
sub
sbb
push
pop
ret
inc
pop
add
pop
mov
mov
ret
aaa
(bad)
mov
xchg
pop
mov
fsubr
mov
dec
(bad)
aas
sub
loop
sbb
test
fnsave
push
inc
xchg
pop
cmp
push
scas
push
push
mov
stc
sub
not
iret
loopne
ror
adc
or
retf
xchg
in
pop
popf
jae
push
shl
inc
jnp
iret
xchg
inc
jnp
popa
imul
xor
jmp
call
(bad)
int
cmps
mov
mov
or
clc
jl
scas
mov
mov
sti
loopne
ret
in
stos
retf
nop
nop
cmp
into
mov
or
xor
add
ds
add
xor
loopne
add
mov
int
mov
fnstsw
push
mov
ins
call
inc
pop
out
sub
cwde
adc
ret
loope
call
enter
ret
mov
hlt
and
ret
dec
sbb
pusha
adc
aas
cmp
test
mov
lods
jle
add
ins
int
int
mov
inc
fnstsw
xor
lock
movs
push
lds
fcmovnu
fwait
cmp
dec
adc
jg
cmp
xchg
push
cmp
outs
(bad)
stc
jecxz
fcomp
push
push
push
sar
in
jl
and
xor
ja
sbb
xchg
mov
and
aas
jl
jle
std
arpl
js
xchg
pop
lock
jne
idiv
sbb
push
cmp
(bad)
xor
jmp
mov
cli
jmp
pop
ds
call
sub
jle
jge
pushf
dec
jp
xchg
add
pushf
jle
cmps
pop
in
int
int3
add
sbb
je
sar
mov
dec
inc
sbb
call
cmp
inc
mov
in
push
push
push
adc
shr
mov
retf
(bad)
sti
(bad)
out
xor
cmps
cmc
cld
pop
addr16
or
pop
mov
retf
(bad)
in
jmp
ja
mov
sahf
pop
shl
aad
(bad)
retf
lds
clc
addr16
cwde
dec
shl
mov
loop
aad
pop
inc
je
jge
test
js
jmp
sub
dec
lock
cwde
and
cmp
fstp
mov
mov
in
outs
les
xor
jb
leave
inc
cmp
jb
test
push
mov
lock
(bad)
fdiv
stc
add
inc
cmps
les
in
mov
jle
stc
sub
cmps
xor
std
outs
(bad)
nop
inc
and
sub
repnz
mov
jg
sbb
sbb
in
inc
dec
imul
fcmovb
push
loop
std
mov
es
cdq
das
mul
inc
mov
and
(bad)
repnz
push
stc
fidivr
imul
pop
hlt
pop
mov
ins
mov
push
push
test
hlt
xchg
into
js
ins
rcl
popf
cmp
push
bound
clc
push
sub
mov
mov
rcr
and
call
dec
movs
int3
pop
stos
fst
jle
mov
dec
mov
call
inc
sub
jp
adc
inc
xsaves
inc
mov
jae
lea
in
push
pushf
xor
in
leave
sub
push
ins
xor
sub
and
inc
sbb
in
dec
jae
jb
lods
cmps
imul
out
inc
lods
lea
lds
inc
stos
stc
add
or
popa
imul
fiadd
ins
mov
and
scas
movs
adc
(bad)
jae
xor
cmp
inc
mov
pop
(bad)
out
aam
sbb
dec
test
movs
pop
or
mov
cmp
xchg
fcmovne
xchg
scas
xchg
dec
lock
inc
ficom
jl
(bad)
fbld
stc
push
loopne
sub
fcmovne
lds
(bad)
pop
and
fnstsw
arpl
popf
push
daa
outs
(bad)
loop
mov
xchg
in
or
jo
stos
dec
pop
(bad)
mov
stos
ror
jns
jmp
rcr
push
sti
mov
mov
mov
sti
xchg
add
add
dec
push
add
mov
ins
or
xor
in
imul
(bad)
lods
dec
imul
fld
out
mov
xchg
mov
ret
clc
mov
(bad)
push
arpl
sar
(bad)
sub
jae
inc
cdq
outs
or
add
js
(bad)
fisttp
jle
lods
cld
pop
fst
fisttp
dec
cmp
xchg
sub
clc
xor
movs
jns
jecxz
jge
addr16
clc
adc
cdq
mov
fild
or
push
clc
int
movs
jle
jne
sub
stc
mov
icebp
fimul
push
icebp
mov
call
mov
imul
jl
rcr
mov
test
and
xchg
pop
enter
popf
aam
das
xchg
mov
xchg
shl
lds
rsm
jns
pop
mov
fprem
jb
mov
cs
jle
xchg
pop
lds
add
pop
mov
mov
cwde
clc
push
xor
es
xor
cmps
mov
je
dec
inc
fild
cwde
pop
outs
ja
lea
mov
dec
retf
pop
cmp
or
popf
stos
add
jo
adc
jge
add
inc
cmc
retf
jo
in
xchg
clc
dec
(bad)
add
in
lahf
adc
pop
xchg
rcl
sub
(bad)
adc
or
inc
mov
and
and
sub
inc
aas
or
loop
es
loop
out
adc
imul
enter
stos
sub
jmp
jl
loopne
lods
push
daa
ins
push
fs
loop
inc
jns
pusha
popf
mov
jmp
stos
mov
jle
(bad)
scas
jae
and
pop
mov
sbb
shr
fnsave
ins
enter
xor
inc
scas
add
lods
cmp
adc
js
jp
jmp
mov
inc
ins
fcom
mov
and
mov
out
retf
mov
xchg
call
jge
out
jmp
call
nop
fidiv
test
sbb
or
repz
out
mov
or
pop
in
adc
mov
adc
xchg
mov
retf
xor
fistp
cs
push
movs
jne
imul
mov
mov
jns
gs
fadd
bound
xchg
or
mov
jmp
lea
clc
sub
(bad)
nop
mov
sbb
and
jmp
mov
scas
mov
mov
adc
sub
aad
cwde
jbe
jge
pushf
adc
sub
and
dec
cmps
ja
pop
cmp
cmp
add
adc
rol
aas
mov
jnp
add
push
push
mov
js
mov
cs
push
mov
mov
push
cmp
mov
test
pop
mov
aas
add
mov
pop
ins
pusha
fdivr
xchg
fwait
in
out
dec
dec
xor
xchg
pop
cs
and
sar
sbb
dec
inc
mov
nop
push
push
push
and
clc
aad
and
mov
xor
stos
mov
jbe
cmp
bswap
add
jge
rcr
cs
(bad)
fucomi
xor
shl
faddp
int3
or
call
mov
pop
scas
int3
aad
xor
in
mov
mov
(bad)
ja
cmc
cmp
stos
jbe
scas
stos
pop
stos
xor
adc
inc
pushf
mov
xchg
scas
mov
mov
das
jle
arpl
sahf
rcl
mov
cld
sub
inc
dec
sbb
test
outs
or
jb
shr
inc
push
jmp
xchg
fucom
outs
jmp
xchg
pop
bound
icebp
xor
push
sub
mov
jp
or
call
cwde
(bad)
push
sti
mov
fnstcw
xchg
and
mov
shl
mov
(bad)
idiv
jb
dec
movs
sahf
ret
sti
iret
nop
mov
daa
out
inc
test
shl
shl
jecxz
(bad)
mov
xor
movs
lods
call
push
push
cmp
xchg
stc
call
test
pop
jne
mov
mov
sar
sbb
mov
jne
shr
(bad)
pusha
cs
mov
test
cmc
outs
(bad)
mov
scas
or
cld
cmps
push
sub
fiadd
(bad)
dec
or
mov
loope
test
pop
push
ja
int3
ins
pop
mov
sub
xchg
cmp
test
call
dec
movs
mov
xor
pop
mov
mov
clc
scas
retf
cld
xor
das
js
dec
das
cmp
outs
clc
cmp
mov
stc
std
mov
cmp
dec
scas
cli
aas
enter
or
jg
stos
mov
jle
sub
cmp
stos
mov
mov
dec
stos
mov
cld
call
std
mov
mov
dec
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
push
int3
mov
and
mov
or
mov
cld
retf
cld
retf
cld
retf
cld
dec
scas
mov
add
outs
mov
cld
mov
clc
cld
retf
cld
or
clc
std
mov
cmp
mov
cld
cld
mov
pop
cld
mov
xor
jmp
mov
mov
ins
dec
cmp
stos
and
sub
cmp
rol
cwde
icebp
or
test
fnstcw
pop
lods
sub
jg
out
mov
inc
ins
cmp
ret
scas
xor
(bad)
call
pushf
cdq
neg
pop
outs
pop
inc
sub
jecxz
movs
add
shr
push
test
cmp
mov
test
dec
test
dec
and
and
ins
stc
jge
and
rcl
sbb
xchg
inc
push
xor
adc
repnz
sti
mov
(bad)
outs
push
push
inc
in
sub
ja
fdiv
mov
das
shl
leave
push
mov
(bad)
scas
adc
imul
push
xchg
jno
xlat
cmp
stos
mov
push
mov
jb
cmps
add
popa
jne
xchg
call
pop
sbb
jmp
cdq
cmp
inc
je
push
stc
loope
ins
add
sbb
sub
in
lock
mov
xor
int
pop
jo
lods
or
lahf
test
and
fbstp
push
outs
addr16
push
loopne
(bad)
dec
push
in
(bad)
cld
mul
jne
out
imul
(bad)
and
jg
hlt
pop
or
dec
xor
xchg
cs
pop
add
in
mov
fild
sahf
push
(bad)
mov
and
inc
test
js
xlat
and
xor
add
les
pop
pop
(bad)
push
lds
add
dec
cmp
out
jo
push
jnp
mov
dec
mov
addr16
inc
(bad)
(bad)
imul
popa
(bad)
sbb
and
loope
adc
test
fistp
and
or
pushw
ret
idiv
push
das
mov
lods
push
addr16
adc
out
cmp
dec
mov
push
out
mov
inc
je
sbb
add
fmul
add
or
xor
fcmovne
lock
loop
fstp
mov
push
loope
adc
ja
test
sbb
sub
cmp
lahf
iret
jne
cmp
mov
rol
mov
pushw
fwait
add
mov
shl
hlt
jge
jnp
mov
push
pop
push
pop
adc
dec
xlat
push
fsub
in
add
mov
pop
cld
or
adc
ret
fbld
ins
(bad)
lea
cld
cld
dec
das
mov
cmp
scas
clc
mov
or
mov
js
imul
(bad)
jecxz
mov
sub
inc
jg
or
in
mov
cld
cmp
clc
and
push
mov
add
xchg
mov
mov
(bad)
movs
inc
jae
adc
jp
mov
push
addr16
jne
test
imul
scas
dec
pop
pop
adc
inc
idiv
js
iret
push
arpl
push
push
push
mov
xchg
mov
or
mov
mov
aaa
mov
repz
pop
sbb
lds
ret
adc
xor
pusha
push
push
push
mov
and
jmp
pop
or
pop
jecxz
and
lods
mov
rol
sbb
jnp
es
lods
rcr
imul
mov
inc
lea
xchg
sbb
clc
cmp
adc
movs
fsubr
pop
inc
les
mov
push
or
call
adc
cld
jb
push
or
fadd
dec
xor
and
gs
pop
and
jge
fldenv
nop
mov
(bad)
ds
push
jns
xlat
or
(bad)
push
mov
lods
mov
pop
xchg
xor
or
push
fs
or
adc
icebp
jp
bound
(bad)
into
dec
and
xchg
mov
xchg
push
in
and
jge
pop
push
pushf
dec
cs
lea
inc
jecxz
pop
cmp
inc
lock
push
imul
and
sub
aas
out
mov
push
mov
add
push
cmp
stos
xchg
mov
pop
loope
dec
loopne
int3
ins
push
test
sub
adc
mov
lds
xchg
mov
pop
cwde
jp
adc
xchg
or
cmp
fidivr
not
xchg
cli
mov
adc
push
sbb
gs
xchg
test
fistp
inc
in
mov
mov
lock
adc
pusha
xor
or
add
pop
lods
xchg
(bad)
sahf
xor
cmp
ret
mov
mov
aam
lock
dec
and
gs
sbb
cmp
dec
int
popf
sbb
icebp
in
retf
cmc
or
int
pop
inc
sbb
jmp
das
ret
add
(bad)
popf
fwait
repz
mov
jp
xchg
mov
stos
les
mov
daa
fwait
sti
shl
pushf
mov
shl
inc
outs
jmp
sub
xchg
shr
imul
and
xchg
popa
ss
lods
adc
pop
xchg
sbb
(bad)
frstor
and
push
bound
in
mov
cmps
jae
fadd
fnsave
cmp
mov
test
jmp
mov
test
lea
push
dec
xor
scas
ss
fdivr
movs
sub
call
cli
or
loopne
jmp
aaa
ret
adc
jle
push
lods
bound
mov
sbb
(bad)
and
push
adc
ja
lds
jnp
sti
jns
cmp
shl
and
mov
pop
xchg
popf
jnp
int3
sub
mov
iret
or
retf
add
push
test
sub
push
adc
adc
or
xchg
stc
fidivr
dec
mov
sbb
popa
jns
(bad)
fs
sti
xchg
sub
push
je
mov
lea
hlt
ins
sbb
mov
mov
jne
cmps
aam
dec
jmp
aas
jo
test
adc
cmc
data16
clc
mov
mov
sahf
clc
xor
out
cmp
out
stc
mov
mov
lock
inc
jecxz
push
(bad)
addr16
xchg
retf
nop
push
mov
cwde
int3
mov
in
cmp
mov
mov
std
les
dec
shr
sub
pusha
add
xchg
push
and
ds
jmp
dec
and
mov
jno
mov
leave
jo
push
cmp
xor
inc
mov
inc
arpl
out
jne
inc
push
jo
cmp
loop
dec
aam
out
in
out
or
in
and
cmovb
xchg
es
push
aad
gs
jnp
mov
or
mul
jge
adc
add
mov
lahf
arpl
sub
or
cs
mov
call
mov
cli
adc
out
and
mov
lods
jmp
mov
mov
inc
adc
dec
call
adc
add
add
add
cmp
ins
sub
mov
add
rcl
mov
inc
test
add
mov
push
inc
aad
nop
push
cmp
jmp
jo
add
pop
stc
jnp
stc
fwait
push
ins
mov
push
cli
imul
ror
mov
inc
xchg
push
mov
rep
or
cmp
sti
mov
js
cwde
cmps
pushf
fincstp
adc
jecxz
ins
(bad)
and
movs
ds
mov
or
aam
cli
lods
mov
add
sbb
(bad)
div
lock
mov
jle
aad
pop
retf
icebp
into
out
xor
add
jg
imul
push
mov
mov
adc
(bad)
aam
(bad)
dec
ret
shr
mov
out
ins
ds
sbb
mov
(bad)
or
adc
dec
push
jb
icebp
jl
rol
retf
ror
in
fwait
sub
mov
cmp
add
sbb
cmp
mov
sub
out
sbb
dec
mov
in
out
jp
mov
es
pop
cmc
data16
push
cmps
xor
add
add
fcom
sbb
cmps
add
ds
cs
mov
pusha
mov
push
lods
sub
dec
(bad)
xor
outs
lods
lea
pop
jbe
xchg
in
mov
and
inc
es
mov
sub
xor
push
out
xor
pushf
pop
ds
test
pop
adc
icebp
hlt
dec
test
pop
adc
movs
mov
sbb
fucomp
jp
xor
xchg
sar
and
test
loop
in
and
js
or
cmp
scas
clc
cmp
out
js
retf
cmp
imul
sti
stc
mov
ret
loopne
out
mov
mov
clc
ds
out
mov
cs
pop
xor
adc
xor
div
gs
or
js
(bad)
pushf
mov
push
es
xchg
and
inc
lock
adc
out
jnp
add
mov
int3
in
inc
pop
push
add
mov
(bad)
ja
cs
adc
sbb
push
add
gs
jmp
adc
fldenv
inc
mov
inc
test
add
pusha
aam
stos
jb
dec
lahf
ret
push
lahf
ret
repz
dec
lods
or
inc
and
stos
mov
or
dec
je
pop
or
sbb
shr
xlat
add
repz
test
push
jge
pop
adc
mov
dec
fadd
daa
mov
daa
inc
mov
ss
cmp
jle
fwait
arpl
jae
lea
or
stos
cmp
pushf
push
adc
xor
cmc
xchg
push
add
shl
xchg
frstor
mov
pop
add
mov
add
fs
mov
(bad)
mov
push
and
mov
aas
inc
mov
pop
dec
dec
fwait
mov
adc
xor
gs
sub
pop
xor
movs
push
leave
dec
sub
or
mov
rol
xor
xchg
fidivr
inc
into
cmp
std
inc
mov
push
pop
push
es
sbb
inc
sti
and
sbb
xchg
loope
lock
add
frstor
and
inc
mov
out
xchg
fs
mov
rcl
jae
sahf
pop
cmps
sbb
fisttp
aam
push
push
data16
enter
stos
jle
jae
add
rol
dec
jnp
and
fldenv
clc
and
mov
fistp
add
sub
jns
fidiv
jp
loope
fwait
jne
push
dec
mov
or
xchg
fs
sbb
fimul
fsub
mov
pop
int
pop
test
mov
(bad)
popa
inc
inc
inc
call
add
cmps
push
loopne
xchg
inc
fisttp
jge
adc
mov
lds
scas
push
test
sub
dec
out
mov
sbb
xor
nop
clc
xchg
mov
push
neg
xor
xor
mov
jno
jl
cdq
pop
sub
add
aas
arpl
lods
push
push
ret
ds
sub
mov
hlt
sbb
int
mov
shr
mov
xor
jae
pop
out
in
arpl
lahf
or
popa
std
cmps
in
ret
scas
and
xchg
xlat
lock
mov
outs
pop
and
into
dec
stc
pop
daa
inc
sbb
cmp
addr16
movs
cmc
rol
dec
cmp
(bad)
shr
cmp
das
lods
adc
mov
mov
nop
stc
cmp
(bad)
out
mov
rcl
push
lea
xor
inc
fimul
xor
cmc
cmp
dec
bound
shl
pextrw
mov
cmps
sbb
xor
(bad)
neg
sahf
cdq
push
cmp
push
movs
mov
cmps
xor
shr
test
mov
mov
add
mov
jb
cmp
test
popf
neg
cmp
(bad)
fisub
sub
enter
lea
inc
sub
mov
rol
mov
iret
dec
out
fucomi
leave
in
sub
mov
retf
lock
cmps
fwait
adc
mov
(bad)
sti
and
pop
loop
push
mov
pusha
fnstsw
sub
das
lods
int3
sub
iret
jl
fimul
or
jmp
pop
pop
fistp
push
sub
xchg
fidiv
push
mov
imul
pop
cmc
pop
sub
cli
imul
mov
sub
jmp
and
stos
xor
push
push
xchg
sub
imul
mov
pushf
sti
ja
mov
das
sub
shl
jl
xchg
inc
mov
lods
sub
cmp
mov
add
mov
movs
mov
int3
frstor
imul
dec
test
bound
add
jge
icebp
xor
in
xchg
add
xchg
lahf
daa
xor
ficomp
ins
imul
pop
imul
fwait
dec
enter
retf
and
push
jecxz
dec
scas
jbe
and
adc
fidivr
jns
push
(bad)
or
or
cmp
outs
clc
cld
retf
cld
or
mov
sub
jmp
stos
retf
nop
mov
daa
lods
push
repnz
mov
arpl
pop
sub
subps
repnz
cld
scas
mov
mov
adc
jle
sub
shl
pop
ss
ss
push
stos
and
inc
add
sub
jne
retf
sub
js
sbb
imul
mov
outs
sbb
lea
ss
aad
mov
mov
mov
aas
sbb
dec
enter
push
lods
mov
mov
sar
in
sbb
mov
pop
inc
push
mov
enter
or
sbb
cmp
jns
sahf
pop
mov
xchg
ss
aaa
jbe
icebp
bound
dec
xchg
das
je
pop
mov
mov
das
and
xchg
test
jns
pop
out
mov
outs
cmp
mov
fnstenv
ret
mov
xchg
push
ss
add
push
adc
inc
push
xor
push
mov
and
and
mov
adc
mov
xor
jmp
mov
sbb
ja
inc
jp
ja
ret
mov
xor
out
(bad)
cmc
outs
sbb
sub
sbb
mov
icebp
shr
repnz
xchg
pop
mov
or
dec
mov
mov
faddp
mov
ror
in
jns
add
cli
or
scas
mov
and
sbb
ins
or
das
dec
out
sub
sbb
call
dec
(bad)
int
inc
push
cs
inc
ror
(bad)
stos
dec
or
sbb
cdq
xchg
inc
jle
js
daa
cmc
mov
cmc
outs
jnp
jmp
jmp
pop
pop
jecxz
xor
addr16
rcl
fcom
or
dec
xchg
clc
push
mov
inc
mov
std
bound
out
push
into
sti
cmp
sub
xor
mov
inc
(bad)
mov
mov
xchg
fstp
out
or
sbb
pushf
fwait
xchg
pop
aaa
mov
mov
pop
push
and
jb
mov
lods
loopne
outs
mov
or
fidivr
bts
mov
xor
jb
mov
jecxz
pop
int
jge
gs
mov
sub
adc
pop
out
cdq
xor
sbb
test
popa
jbe
pop
(bad)
inc
pop
lods
sbb
mov
jno
daa
(bad)
sahf
scas
outs
push
lahf
cmp
sub
and
add
dec
jp
jne
sbb
push
dec
mov
int3
pop
loopne
dec
lahf
jo
ficomp
sub
loope
mov
daa
xchg
jmp
xchg
rol
jbe
adc
rcl
movs
or
(bad)
adc
add
mov
push
in
mov
xchg
cs
int
mov
mov
jl
mov
jg
jl
lahf
test
adc
iret
push
or
imul
lods
and
mov
icebp
rol
push
lock
adc
pusha
popf
xchg
inc
call
ret
inc
sub
stos
cwde
lods
jmp
and
prefetcht2
fiadd
pop
sbb
out
outs
int3
cli
loop
inc
add
xchg
movs
mov
cmp
xchg
les
test
cdq
out
call
stc
popf
cmp
jp
inc
push
pop
ror
mov
xchg
mov
xor
retf
mov
xor
or
push
(bad)
(bad)
adc
fdiv
iret
sub
jnp
xchg
and
enter
int
xchg
xchg
ret
cs
jl
retf
push
repnz
jmp
fmul
(bad)
test
add
mov
inc
adc
push
test
mov
(bad)
lds
lds
xchg
stos
pushf
ja
popa
retf
(bad)
lock
push
xchg
or
fs
jecxz
pop
sbb
dec
into
imul
cld
inc
aam
aam
push
jb
xor
cmp
dec
pop
pop
leave
mov
sbb
jmp
loope
push
out
push
add
jno
retf
fisttp
gs
xor
ins
cmp
jno
lods
jbe
push
mov
repz
mov
retf
addr16
push
ja
mov
jnp
push
es
mov
aad
gs
ins
rol
pop
lea
pop
adc
ja
push
push
pop
add
(bad)
imul
daa
inc
dec
pop
imul
imul
or
or
dec
addr16
pop
or
call
mov
ja
in
cmps
movs
ror
jb
push
push
stos
movnti
mov
pusha
cwde
js
push
xor
loope
sub
and
(bad)
outs
xor
mov
and
jne
shr
out
xor
test
test
cdq
fidiv
lds
pop
cmps
push
xchg
loopne
icebp
(bad)
mov
sbb
sbb
dec
stos
adc
jno
xchg
(bad)
sti
mov
stos
xchg
mov
or
cmc
xchg
movs
mov
mov
repz
mov
inc
fbld
out
bswap
jl
mov
stc
xchg
cli
loopne
out
xchg
adc
ret
dec
mov
sti
mov
fst
push
cld
shl
aam
sub
and
sub
test
cli
or
mov
pop
mov
xchg
loope
lea
pop
cs
xchg
sub
mov
cmp
repnz
in
dec
mov
cmps
mov
popf
jecxz
movs
jg
or
mov
cmp
add
pop
xchg
and
xor
adc
aam
adc
retf
fdiv
int
pushf
idiv
pop
inc
pop
in
mov
gs
and
repz
outs
sub
daa
and
das
cmp
(bad)
imul
das
gs
outs
aas
jp
or
push
add
clc
pop
mov
repz
sbb
test
jne
sub
loope
stc
test
retf
jge
outs
mov
dec
outs
and
jecxz
add
xchg
push
test
push
push
loopne
lahf
icebp
jb
jae
leave
imul
rcl
mov
cmp
xchg
jo
out
adc
adc
xor
jns
dec
inc
adc
push
test
jge
and
loope
(bad)
imul
mov
dec
push
ss
in
inc
adc
adc
into
mov
push
mov
cli
push
push
pmullw
inc
iret
mov
daa
add
and
pushf
mov
test
or
push
pop
mov
pop
pop
sub
mov
mov
and
pop
stc
add
dec
xchg
jae
(bad)
xchg
jp
out
push
xor
dec
jg
jmp
out
out
outs
mov
in
mov
mul
stos
mov
inc
xchg
pop
push
mov
xchg
test
and
dec
jbe
xchg
retfw
adc
pusha
xor
outs
sbb
mov
dec
adc
jg
mov
cmp
js
cmp
les
xchg
imul
jl
inc
(bad)
sub
call
lea
jp
ss
inc
push
inc
fwait
pop
js
dec
mov
pop
inc
mov
hlt
cmp
imul
xchg
ficom
pop
sbb
cwde
outs
jno
scas
repz
and
pop
(bad)
mov
mov
out
jnp
mov
lldt
cwde
inc
mov
push
xchg
dec
fisub
call
stos
jl
nop
or
icebp
push
xor
sbb
dec
cmc
out
frstor
xor
fldenv
mov
rcr
or
gs
add
xchg
repnz
aad
xchg
(bad)
cmps
mov
mov
push
sub
fsubrp
push
or
pop
inc
daa
es
fld
ror
push
fld
mov
pop
jnp
jge
outs
mov
pop
(bad)
leave
icebp
jp
jb
dec
jg
out
sub
in
xor
ins
idiv
shl
nop
jbe
test
int
mov
dec
and
sbb
mov
inc
in
jmp
fistp
xchg
repnz
div
(bad)
int
jb
or
call
inc
jle
inc
add
cdq
test
(bad)
ins
mov
ret
jmp
test
fadd
pop
push
xchg
iret
call
call
pop
cs
fs
shl
mov
cmp
bound
pop
aas
movs
inc
das
fbld
leave
inc
cmp
xchg
ins
adc
push
pop
ficomp
pop
ss
cmp
in
push
fcmovnb
fwait
push
mov
mov
pop
pop
xchg
mov
mov
adc
cmps
stos
or
adc
pop
mov
inc
sbb
aam
fimul
mov
xor
call
inc
xchg
test
sub
fmul
cld
int
cli
sbb
jp
(bad)
gs
stc
btc
jp
xor
pushf
out
ret
scas
call
arpl
or
mov
aad
in
and
cli
mov
pushf
out
js
sub
lods
sub
ins
cld
mov
xchg
ds
mov
mov
mov
push
inc
push
xchg
outs
add
mov
jb
and
sar
mov
mov
mov
sar
jg
icebp
or
xor
push
sar
and
(bad)
lods
cmc
and
shl
inc
xor
fidivr
cmp
test
adc
sahf
mov
ins
popa
add
in
movs
test
or
fsub
fisttp
dec
mov
fwait
xchg
sbb
cld
xchg
mov
cmps
add
call
rcl
adc
bound
mov
outs
into
out
in
rol
sub
ja
imul
mov
cwde
in
cmp
lahf
adc
fmul
ins
and
fisubr
cmp
loopne
sbb
sbb
loopne
popf
push
fstp
dec
sbb
push
push
mov
and
add
cmps
mov
cld
dec
outs
clc
jl
out
clc
cmp
scas
mov
mov
sti
mov
mov
ret
mov
retf
cld
mov
hlt
xor
dec
stc
pop
lods
sub
jl
add
add
sbb
fs
retf
fsubr
clc
mov
jo
(bad)
fild
cld
jmp
and
shl
sti
push
jne
jecxz
out
(bad)
js
xlat
xor
push
jne
add
push
push
lods
out
out
leave
imul
and
mov
das
mov
sar
aad
lds
and
cmc
das
ins
xor
mov
adc
mov
cwde
stos
cmp
mov
mov
cmp
push
outs
mov
sar
and
lds
into
sar
mov
fistp
jl
and
dec
mov
loop
add
retf
fld
jmp
je
cmps
loopne
mov
sub
adc
test
push
int
add
js
jmp
in
xchg
or
fmul
add
add
pop
mov
sub
push
popa
cmp
sub
in
add
add
inc
or
xor
mov
call
mov
jp
fs
mov
xor
call
repnz
das
jl
fnsave
mov
pop
(bad)
mov
xchg
dec
fld
pop
jmp
push
je
leave
add
cwde
or
jns
inc
retf
sahf
dec
mov
test
aaa
popa
pop
jne
jle
fisttp
test
shr
fst
retf
cmps
mov
pop
test
dec
mov
out
lock
jge
inc
sub
mov
jnp
or
js
xor
add
jo
pop
and
fmul
in
repz
fdiv
add
xor
mov
out
mul
jnp
ds
into
sub
out
mov
sahf
in
jl
lds
bswap
lods
fidivr
nop
mov
(bad)
sar
pop
mov
stc
dec
(bad)
cmp
les
adc
out
mov
jmp
scas
out
mov
sbb
jb
inc
cmp
pop
cmps
jno
dec
test
and
xlat
sar
(bad)
jmp
dec
mov
in
add
and
ror
sub
mov
cmp
ficomp
pcmpgtd
pop
push
mov
rol
out
dec
sub
popa
sahf
push
lea
or
lds
lock
adc
cmp
and
push
dec
sub
scas
lods
test
clc
ss
addr16
sbb
adc
sbb
sahf
adc
sub
test
mov
fbstp
adc
mov
clc
jo
xchg
lods
lahf
sbb
sbb
leave
push
dec
enter
imul
mov
enter
arpl
xchg
movs
inc
push
mov
add
sbb
pop
ins
das
jne
push
sbb
jb
fisttp
daa
add
cmp
dec
dec
jl
sub
push
pop
xor
and
stos
sub
add
and
int3
mov
inc
mov
jne
pop
into
sar
or
mov
push
aam
jns
fcomp
push
nop
jns
xchg
js
hlt
mov
or
pop
push
dec
pop
dec
add
dec
push
add
cmp
xchg
cld
(bad)
nop
pushf
jae
xor
mov
push
sbb
cld
sub
xor
sub
pop
cmp
js
es
add
test
xchg
popf
stos
cdq
gs
sbb
or
rol
sub
cmp
(bad)
push
shr
dec
push
js
inc
ss
js
add
mov
rcr
out
jp
mov
dec
out
cmp
out
cmp
call
rcr
arpl
push
dec
sti
ret
xchg
fdecstp
(bad)
adc
mov
ins
dec
jmp
aad
loope
lahf
fld
jle
cmp
inc
sahf
test
imul
mov
stos
aam
xchg
jnp
fucom
sahf
loopne
lods
mov
mov
push
inc
scas
mov
mov
inc
mov
es
ret
dec
jb
(bad)
mov
mov
mov
mov
pop
sub
push
movs
mov
ss
mov
test
mov
out
mov
pop
jb
cli
cs
ds
loopne
jl
cdq
daa
push
sbb
sar
add
and
dec
sbb
aas
xlat
pop
and
mov
jo
dec
popf
stos
repz
pop
js
sub
ins
test
mov
stos
rcl
or
ret
or
lds
movs
aam
shr
jmp
jmp
(bad)
sti
cdq
bound
cld
mov
out
jge
push
in
stc
inc
mov
inc
popa
bound
xor
mov
in
ret
hlt
dec
imul
lea
lock
inc
sbb
dec
push
ds
jg
test
inc
retf
enter
aaa
icebp
sub
fimul
(bad)
shl
(bad)
cld
sar
(bad)
mov
dec
sbb
out
sub
pusha
outs
xchg
outs
std
push
test
xchg
stos
and
mov
adc
xchg
fmul
push
imul
sub
or
mov
mov
dec
push
mov
(bad)
fsub
call
mov
jmp
jb
stos
mov
mov
(bad)
into
xor
and
adc
mov
xor
push
mov
xlat
xchg
cmp
ret
mov
call
call
sub
jne
out
neg
jp
int
daa
mov
xor
movs
pop
mov
ja
xchg
fiadd
pushf
cmps
cmp
push
retf
fimul
repnz
div
or
jno
push
or
xchg
fisttp
arpl
div
loop
xor
lahf
js
inc
jmp
jmp
test
popf
div
ds
adc
lods
pop
adc
xchg
in
cmc
scas
add
xchg
or
xor
es
rol
pop
xlat
sub
lds
in
mov
fdiv
xlat
mov
popf
mov
and
in
(bad)
popf
inc
mov
sbb
cdq
xchg
test
sbb
mov
xchg
rol
clc
jp
in
jns
fcmovb
repz
dec
ror
cmp
and
and
push
sbb
cmp
sbb
sbb
adc
mov
xlat
or
pop
push
xchg
in
jp
xor
xchg
mov
lock
mov
daa
ins
inc
retf
mov
ror
dec
add
pop
sub
or
int3
mov
jno
and
adc
or
mov
(bad)
cli
faddp
dec
repnz
js
or
inc
cld
scas
cmp
clc
mov
dec
retf
sub
scas
mov
(bad)
outs
ret
dec
hlt
shl
cmp
scas
mov
pop
sub
cs
push
mov
jbe
std
mov
retf
mov
aaa
xor
pop
fidivr
pop
sbb
in
sub
mov
ret
les
pop
ss
or
es
mov
addr16
scas
mov
xchg
out
cmp
pushf
jle
enter
nop
leave
cmp
jmp
cmp
out
cmp
mov
mov
mov
mov
mov
mov
mov
ret
enter
inc
mov
in
cmp
mov
mov
mov
fmulp
adc
stc
pop
ror
out
pop
fsub
ja
dec
cmp
adc
lock
pop
jmp
movs
jns
push
and
ins
call
lea
push
aad
xor
mov
das
out
cmp
pop
jne
pop
mov
sub
int3
push
push
(bad)
jmp
xor
pop
shl
add
cld
jecxz
cmp
ja
sbb
dec
xchg
adc
dec
or
cwde
dec
aas
xchg
push
and
rol
jb
rol
test
pop
out
add
lock
jmp
xchg
adc
repz
(bad)
clc
jno
and
enter
movs
jnp
cmp
mov
or
fadd
add
sahf
and
mov
hlt
inc
add
arpl
push
xchg
mov
ins
out
daa
das
xchg
ficom
push
adc
jl
or
test
lock
test
mov
jge
cmp
xchg
ret
jne
out
inc
hlt
shr
shl
out
jecxz
sub
ror
movs
leave
ins
cmp
push
lds
xchg
idiv
loopne
stc
mov
cmp
mov
stos
out
and
leave
int3
stos
imul
movs
cwde
mov
daa
jb
mov
push
inc
cmps
retf
cmps
push
pop
xchg
loope
and
jnp
imul
fsub
pop
jo
jmp
jmp
dec
fs
or
lahf
aad
mov
inc
sub
cdq
jnp
loopne
sar
scas
jge
pop
add
ds
jns
stos
test
mov
shl
clc
repnz
push
dec
push
cld
stc
xor
fst
int3
sbb
(bad)
lods
movs
sbb
or
pop
test
adc
int3
xchg
mov
mov
in
sar
stos
inc
xchg
imul
test
add
imul
dec
ror
pop
leave
(bad)
test
cs
cmps
inc
das
xor
inc
xchg
stc
imul
push
loope
push
xchg
je
mov
sti
mov
push
mov
jae
mov
mov
or
enter
test
push
ins
stc
pop
jge
retf
lods
pop
cmc
std
int
cli
movs
sub
or
scas
cmp
movs
(bad)
ror
add
daa
sub
push
and
push
fisttp
data16
xchg
clc
ins
cmp
pop
xchg
xchg
movs
xchg
mov
xor
cmp
(bad)
adc
inc
push
into
das
nop
cmc
xchg
jns
mov
test
adc
or
clc
cld
or
mov
retf
cld
retf
clc
mov
mov
sahf
mul
(bad)
stos
les
scas
mov
jae
adc
dec
mov
(bad)
aam
nop
cmp
lods
inc
add
mov
std
fmul
jnp
pushf
dec
xor
mov
arpl
push
dec
dec
shr
and
mov
aam
jae
dec
and
dec
fisttp
aad
repnz
rcr
cmc
mov
jne
pop
add
adc
scas
jno
adc
sub
sti
push
movs
push
add
xor
ja
adc
add
arpl
test
mov
test
sbb
adc
fwait
(bad)
std
cmps
sbb
cmp
sub
out
repz
sub
fist
inc
sbb
and
mov
cmp
ret
jle
ds
out
(bad)
outs
cmc
xchg
dec
push
aaa
ins
daa
push
test
or
fidivr
enter
push
inc
scas
jmp
loopne
and
stos
nop
pusha
fstp
mov
scas
xor
push
cdq
les
or
gs
sub
inc
xchg
ins
nop
lock
push
mov
in
mov
add
mov
jl
jnp
pop
xor
or
add
daa
fmulp
lds
push
and
push
inc
xchg
xlat
pop
jno
cmp
mov
mov
sub
(bad)
cmps
jns
pop
call
loopne
mov
lahf
clc
dec
std
out
(bad)
or
adc
mov
adc
stc
loope
sbb
push
mov
fld
dec
push
inc
sbb
mov
imul
cmp
test
clc
sub
repnz
push
jmp
jmp
xchg
xchg
loop
sbb
sbb
push
push
adc
stos
sbb
nop
js
(bad)
fnstsw
or
inc
sub
cwde
jnp
mov
test
sub
inc
sub
sbb
retf
push
xchg
mov
clc
fnsave
out
or
call
shr
inc
jno
mov
xchg
test
jbe
adc
shl
bound
push
cmps
push
clc
sbb
aad
xchg
pop
xchg
outs
mov
or
retf
fwait
repz
call
scas
popf
adc
mov
jge
outs
and
mov
cld
push
hlt
clc
adc
(bad)
test
rcr
jo
or
inc
inc
sub
adc
stc
loop
ja
loope
mov
xchg
mov
jb
enter
std
pop
test
jnp
cmp
rol
imul
push
(bad)
push
outs
(bad)
imul
mov
pop
mov
pop
(bad)
ss
mov
mov
add
dec
sub
imul
dec
adc
sbb
push
popa
arpl
lahf
mov
adc
ss
sbb
jmp
add
push
lea
sbb
sub
scas
sub
bound
push
jno
jge
cmp
adc
int3
mov
xchg
push
and
arpl
pop
adc
jp
pop
loope
sub
sub
xor
dec
push
dec
jnp
popf
mov
mov
int3
sahf
repz
inc
add
mov
jbe
fstp
push
and
sti
mov
test
sub
and
fcmovb
and
and
mov
mul
enter
sub
in
dec
call
dec
and
(bad)
nop
mov
xchg
in
ficomp
scas
mov
xchg
cmp
(bad)
out
leave
xchg
sbb
pop
cmc
sub
or
(bad)
and
arpl
jmp
adc
or
push
xchg
jge
or
(bad)
mov
ja
xor
or
sti
and
fcmovnbe
lods
adc
cwde
xchg
push
push
mov
or
inc
int3
fmul
cmps
cmps
push
mov
div
scas
push
lahf
fdivr
js
mov
adc
fmul
call
test
(bad)
pop
ror
stos
sub
add
sub
push
hlt
fsubr
sub
or
and
or
movs
add
mov
gs
mov
pop
add
and
sbb
push
into
sub
adc
and
call
sti
adc
pop
test
out
enter
xchg
fiadd
xchg
loope
adc
xor
lea
retf
push
and
jmp
ja
fwait
cs
mov
jmp
add
pop
dec
arpl
leave
ins
mov
aas
or
inc
ret
js
or
mov
cwde
sub
xchg
int
in
inc
adc
mov
or
jle
ja
push
dec
jnp
or
retf
sub
daa
fsub
pop
jmp
dec
xchg
call
mov
in
bound
std
push
clc
sbb
je
sbb
pop
mov
aam
inc
cmp
movs
mov
mov
mov
mov
daa
lods
in
xchg
cmp
popf
mov
xor
mov
jne
mov
loope
xchg
scas
xor
stos
add
sub
mov
scas
xchg
fcomi
push
adc
xor
cmc
xor
push
sbb
pop
pushf
inc
mov
ds
stos
dec
dec
pushf
push
push
or
sbb
adc
dec
cdq
bound
cld
xor
push
jmp
lahf
and
jge
jle
call
sahf
sbb
call
jg
cmp
lds
(bad)
stos
adc
inc
ja
xor
mov
scas
jp
or
ja
lea
rol
sti
out
icebp
clc
mov
clc
std
or
clc
jl
scas
clc
cld
mov
lods
movs
into
out
fsubr
pop
inc
retf
mov
clc
mov
pop
cmc
(bad)
mov
jbe
iret
stc
out
push
nop
movs
xchg
sub
icebp
leave
dec
push
jne
or
pop
int3
scas
int
jns
mov
les
cmp
dec
sub
jmp
pop
out
pop
repnz
rcr
ds
jnp
xor
dec
push
js
add
inc
sub
cmc
test
scas
xchg
(bad)
or
clc
sar
dec
test
mov
or
jmp
cmp
xor
mov
mov
and
cli
mov
jg
mov
mov
jle
stc
mov
jle
jge
jl
stc
rcl
cmp
cdq
cmp
ss
into
sbb
movs
lods
sub
out
pusha
cld
jns
shr
mov
test
or
cs
hlt
icebp
cs
and
ficomp
dec
rep
cmc
out
cs
xor
sbb
jg
into
adc
fidiv
xchg
pushf
(bad)
sbb
and
loop
pop
push
or
add
(bad)
cli
jmp
mov
enter
mov
(bad)
mov
push
push
xchg
mov
pop
or
cmp
ficomp
cld
scas
out
mov
mov
aad
jecxz
imul
sbb
push
pop
xchg
popf
(bad)
loopne
call
jmp
cmp
add
or
js
fild
test
push
inc
cmps
(bad)
xchg
dec
ins
sbb
add
mov
iret
jmp
js
stos
jmp
sub
push
xlat
mov
ds
jne
xor
pop
pop
mov
push
jbe
push
sub
shr
cmp
or
xor
inc
iret
sbb
loop
sbb
cwde
push
push
jb
push
int
pop
nop
xor
mov
or
out
sbb
pop
xor
push
ret
mov
enter
jns
mov
mov
sti
jbe
and
test
enter
enter
dec
inc
out
fsubr
fdivrp
xor
sub
mov
and
into
fisttp
cmp
aas
inc
(bad)
xor
sub
cmp
hlt
popf
sub
(bad)
(bad)
jg
movs
retf
add
or
mov
inc
ja
cmp
mov
pop
dec
shr
fst
sub
add
inc
cmp
repnz
test
es
dec
dec
or
sub
test
ror
jns
xor
cld
imul
pop
iret
sbb
addr16
(bad)
icebp
push
loop
sbb
imul
pop
fstp
das
rcr
pop
inc
inc
dec
jmp
mov
push
out
push
aad
fild
xchg
and
dec
cwde
int
das
call
int
inc
aaa
xlat
mov
(bad)
jb
jle
nop
faddp
pop
sbb
xlat
nop
js
pop
push
cmc
sub
out
add
mov
pop
test
lock
adc
dec
mov
dec
mov
lock
xchg
push
mov
enter
dec
mov
jno
retf
(bad)
gs
rcr
(bad)
(bad)
sbb
leave
or
(bad)
fcomp
mov
sbb
mov
mov
lds
pushf
jns
cs
(bad)
cld
bound
test
fwait
xchg
(bad)
pushf
dec
or
jl
fidiv
call
mov
sub
test
mov
ins
repz
add
ror
lea
jg
pusha
add
retf
(bad)
jmp
sbb
outs
mov
jp
cmp
in
(bad)
lea
pushf
repz
test
jo
jae
inc
scas
movs
jl
mov
and
in
rcr
adc
pop
psubsb
ret
cmp
clc
mov
jne
mov
cmp
mov
in
fcomp
sbb
sbb
loop
dec
mov
lods
dec
cmovnp
inc
dec
xchg
f2xm1
jmp
scas
out
(bad)
fild
add
xor
cmp
cli
out
sbb
inc
pop
ins
movs
inc
or
icebp
les
fdiv
bound
jae
pop
mov
imul
mov
mov
retf
(bad)
(bad)
mov
jl
adc
adc
xchg
retf
repz
mov
sbb
fiadd
cmp
cmp
mov
rcr
loop
cmc
jo
push
dec
scas
jmp
xor
out
outs
mov
mov
mul
jmp
in
ins
inc
scas
cmp
jo
lods
fwait
scas
ret
jmp
cmp
mul
daa
(bad)
mov
scas
(bad)
fnstcw
ds
into
jmp
adc
mov
sub
out
stc
out
and
sub
fbstp
int
pop
ficomp
popf
in
pop
sbb
sbb
xchg
xchg
lock
fcom
push
mov
push
push
jl
mov
sbb
jmp
out
shl
data16
mov
adc
fwait
in
imul
test
mov
dec
aas
fnsave
push
pop
lods
xchg
mov
mov
stc
or
pop
cmp
push
mov
aad
jl
outs
mov
xchg
xchg
gs
ret
mov
hlt
push
mov
ret
inc
les
lods
cmp
push
in
mov
jmp
fnstcw
cmps
enter
push
cmp
ror
jecxz
inc
mov
mov
mov
outs
jge
jecxz
iret
std
mov
pop
fisttp
retf
loop
adc
rcr
jmp
mov
and
pop
push
push
jecxz
mov
xchg
movs
dec
lods
retf
ins
sar
cs
into
mov
adc
fsubr
iret
stos
xor
pop
sub
cmp
lock
mov
mov
or
loope
pop
mov
or
jmp
mov
sub
fldcw
addr16
adc
adc
pop
lahf
jp
jecxz
xchg
enter
sti
cmps
mov
stc
loop
mov
jecxz
data16
mov
push
fadd
clc
xchg
(bad)
int
rcl
xor
fbstp
push
ja
lock
mov
daa
in
imul
push
lods
stos
pop
jecxz
and
std
(bad)
in
jge
pop
mov
adc
mov
cmc
ret
enter
in
sbb
xchg
ds
pushf
cmps
mov
push
jp
inc
sbb
out
scas
sub
or
in
pop
push
sbb
mov
mov
out
mov
push
add
aas
dec
adc
push
jae
xor
sar
add
fsubr
mov
mov
sub
out
or
mov
cmp
mov
mov
adc
test
int
movlps
mov
int3
mov
sub
popf
add
mov
add
leave
scas
sub
in
sbb
mov
cmps
push
test
sbb
call
icebp
out
in
inc
fistp
cmp
and
mov
sahf
cmc
xchg
out
lea
inc
les
and
xchg
cld
or
(bad)
jae
enter
sbb
out
or
mov
xchg
in
dec
cmp
sahf
jmp
fld
(bad)
mov
mov
scas
and
sahf
das
sbb
cmp
push
stc
and
call
dec
cwde
jecxz
lahf
rol
aas
cmp
xor
pop
dec
stos
cmp
clc
mov
push
gs
jp
test
adc
nop
sbb
dec
pop
retf
xor
mov
test
ret
retf
je
and
test
mov
push
mov
dec
fwait
shl
pop
out
cmps
pusha
aad
in
mov
pop
push
(bad)
test
hlt
ja
xchg
nop
mov
fwait
sbb
or
cmps
mov
jl
mov
or
js
or
mov
mov
out
sbb
ret
mov
push
add
sar
cmp
mov
mov
cld
outs
call
cmp
outs
cmp
cmp
out
stc
mov
cmp
leave
ins
jp
or
jnp
into
jmp
jg
ins
cmp
into
jmp
dec
stos
std
cli
into
jmp
or
mov
mov
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
movups
cld
into
lods
js
dec
dec
mov
mov
cmc
sahf
clc
cmp
das
js
mov
clc
cmp
scas
clc
cld
retf
cld
retf
std
mov
(bad)
dec
or
clc
cld
or
mov
mov
retf
cld
or
cmp
retf
mov
retf
mov
pop
popf
inc
xor
xor
repnz
stos
xchg
fs
adc
sub
inc
pop
shl
mov
sbb
js
lods
fstp
cwde
mov
cli
jb
in
div
cmps
xor
push
jne
in
jg
and
jnp
xor
retf
cld
xchg
cmp
jns
data16
push
popa
mov
jnp
mov
scas
clc
cld
retf
sti
dec
mov
cmp
stos
bts
and
pop
jns
jle
inc
es
mov
sub
das
nop
dec
mov
scas
inc
or
sub
mov
inc
clc
pop
dec
loopne
sub
push
and
mov
xor
pop
fbld
icebp
xor
not
or
sub
pop
retf
mov
pushf
jle
jmp
out
(bad)
clc
mov
mov
mov
inc
cmps
mov
mov
push
ins
sbb
mov
or
xor
xchg
sub
icebp
pop
mov
loop
pop
retf
clc
cld
retf
int3
jl
xchg
sub
arpl
or
sub
xchg
ficomp
and
mov
cmp
lahf
ret
jbe
cmps
mov
xor
or
pop
mov
and
add
pop
xchg
xchg
mov
loope
pop
push
aas
adc
sub
stc
mov
xchg
lods
add
test
repnz
and
lds
xor
sbb
imul
cmp
xchg
add
aam
mov
inc
(bad)
adc
int3
(bad)
sahf
fwait
push
mov
in
xor
mov
inc
aaa
dec
fist
or
cdq
cmp
dec
mov
push
fdivr
add
adc
int
popa
ret
sbb
aas
rcl
mov
hlt
test
test
cmp
mov
scas
jns
cdq
push
and
push
fisub
mov
mov
test
fiadd
cwde
sbb
xchg
mov
dec
lods
push
outs
scas
nop
out
test
add
mov
(bad)
pop
inc
out
push
jno
pop
out
cmc
stc
inc
std
or
mov
sub
aas
mov
pop
mov
aas
cmp
lods
push
jp
adc
pop
ret
mov
xchg
aaa
enter
pop
xchg
push
(bad)
out
es
call
sahf
pop
in
sbb
mov
mov
push
scas
xor
and
fst
aad
retf
lds
xchg
sbb
out
(bad)
stc
scas
and
ret
add
mov
sub
cwde
imul
pop
jecxz
ds
xor
push
and
stc
fisub
js
add
xchg
sar
clc
cld
dec
mov
inc
fs
iret
fwait
inc
jle
int3
mov
(bad)
scas
clc
cld
retf
std
dec
push
iret
add
scas
clc
cld
or
mov
cld
or
clc
cld
retf
cld
or
mov
js
imul
(bad)
jmp
iret
es
cld
scas
mov
mov
or
cdq
addr16
mov
jecxz
es
and
cmp
out
inc
jnp
test
push
adc
or
int3
scas
inc
and
fs
pop
mov
push
in
aad
pop
sbb
sub
cmc
sahf
and
sbb
mov
xchg
xor
and
ror
adc
rcr
cmp
iret
cmp
fimul
leave
jmp
fcomip
sbb
push
(bad)
imul
popa
adc
in
bound
xor
call
sti
xor
inc
cmps
sbb
push
out
sub
scas
cmps
push
inc
cmp
fwait
mov
arpl
add
mov
push
push
js
retf
or
mov
or
push
and
(bad)
pop
sub
xchg
pop
mov
mov
and
mov
ficomp
jecxz
retf
jns
xchg
mov
shr
xor
cmp
leave
nop
xor
fs
sbb
pop
test
pop
or
xchg
add
iret
xchg
jle
dec
push
stos
sbb
sbb
dec
sbb
cmps
arpl
dec
sar
imul
mov
jo
clc
fwait
hlt
dec
push
cmps
retf
or
retf
into
fidivr
inc
aad
dec
fst
inc
test
jg
clc
not
adc
push
int3
mov
popf
mov
test
ficomp
in
or
and
xchg
scas
lods
push
and
les
shl
push
cld
cmc
into
vaddsubpd
mov
rcr
enter
inc
jne
xchg
ds
jb
cli
mov
push
sti
and
push
mov
and
sub
out
xchg
xor
sar
xchg
xor
mov
outs
jb
and
cs
stc
pop
mov
xlat
jne
push
ret
movs
ds
xlat
loopne
inc
ror
push
push
jmp
lods
loope
repnz
sub
or
ins
outs
jnp
cmp
push
rol
pusha
mov
xor
das
cli
push
cmp
loope
lods
mov
in
ins
fs
sub
out
sti
push
jg
test
or
cmp
movs
aaa
push
mov
div
push
lods
sbb
sub
mov
mov
stos
pop
jne
inc
mov
int3
imul
lahf
in
jmp
fcmovb
shl
mov
repz
or
stos
add
cdq
sub
pop
xor
add
outs
sbb
cdq
dec
movs
xlat
daa
or
xor
lods
xor
aam
adc
dec
xchg
mov
out
sahf
mov
or
mov
push
(bad)
sti
pusha
xchg
sahf
jae
aad
call
aaa
mov
outs
sbb
imul
or
sahf
test
jle
ins
loope
das
inc
dec
repnz
fcomi
sahf
js
into
das
js
dec
outs
mov
mov
retf
cld
retf
xor
xor
iret
daa
xor
inc
jecxz
call
jne
clc
ds
mov
sub
pop
cli
xchg
sbb
push
daa
out
ficom
lds
add
ret
inc
cmp
cdq
ins
push
push
jb
es
or
sbb
in
inc
rcpps
mov
xor
test
cmps
sbb
ficomp
je
sub
push
movs
jne
push
mov
ret
pop
xor
sub
or
jne
lahf
nop
(bad)
sbb
rcl
rcl
lea
into
stos
sbb
iret
mov
scas
mov
adc
loope
repnz
xchg
call
out
xchg
jmp
mov
push
imul
stc
push
or
inc
adc
sbb
scas
adc
and
stos
cmp
out
push
mov
mov
mov
retf
fdivp
in
mov
out
cmp
inc
mov
mov
sbb
mov
push
mov
test
vmovdqa
sti
push
jne
fsubr
lahf
cwde
stos
(bad)
(bad)
imul
mov
push
cmp
xchg
clc
aad
xchg
cmp
mov
cld
fistp
push
or
mov
je
jg
int3
pop
popa
(bad)
xor
test
sahf
sahf
retf
loop
scas
sbb
xor
outs
inc
and
stos
cld
sbb
and
jmp
aas
xchg
mov
xchg
pop
mov
and
ss
push
or
sbb
or
test
pop
pop
mov
fwait
repz
fucom
adc
mov
cli
or
pop
cmps
xlat
xor
int3
cmp
mov
sub
mov
inc
jnp
push
not
test
cld
dec
popa
stos
push
sub
es
std
add
aas
inc
mov
push
aam
and
mov
mov
jl
push
test
push
inc
int3
push
jp
sub
lea
xchg
ss
and
mov
push
(bad)
push
in
sub
lea
cmp
jp
add
cs
pop
cmp
rcr
ds
and
cmp
cmps
lahf
dec
inc
mov
ret
cmp
mov
stos
mov
fwait
adc
jb
cs
call
xor
int
jecxz
cld
or
mov
retf
scas
clc
mov
dec
outs
clc
std
mov
mov
mov
or
std
je
and
in
push
adc
jl
das
mov
cdq
mov
xor
dec
imul
(bad)
mov
xchg
mov
out
dec
and
mov
dec
push
js
xchg
retf
push
xor
add
(bad)
push
xor
rdpmc
mov
inc
xchg
addr16
cmp
shl
adc
mov
mov
mov
push
add
shl
mov
xchg
repz
test
in
icebp
xor
call
fld
popa
dec
xchg
(bad)
pusha
push
mov
jae
add
sar
push
adc
aam
popa
aas
mov
pop
(bad)
retf
bound
int
jge
xor
pusha
adc
sub
lods
retf
xchg
sub
xchg
(bad)
mov
(bad)
shl
js
out
mov
pop
or
add
inc
popa
call
inc
cmp
pusha
into
aad
data16
icebp
sub
push
xlat
test
ins
dec
mov
movs
aas
xor
mov
test
pop
jecxz
imul
into
inc
cmps
mov
popa
retf
retf
inc
ficomp
sahf
and
jb
jb
push
out
sub
mov
mov
loope
add
aaa
jge
imul
push
aam
out
jle
pop
addr16
cmp
inc
lea
adc
jb
mov
mov
ins
shl
outs
(bad)
pop
stos
lahf
jmp
stos
jmp
and
fisttp
dec
add
sbb
pop
adc
cld
mov
pause
pop
mov
xchg
out
jmp
cwde
adc
clc
or
dec
xchg
in
arpl
in
jl
sub
xor
xor
cmp
adc
push
mov
fsub
inc
cli
loopne
jae
dec
add
add
mov
and
(bad)
fst
add
pop
or
retf
inc
sub
(bad)
jge
cwde
int
jle
xchg
or
mov
jae
mov
(bad)
lea
test
pop
(bad)
xor
mov
test
imul
sbb
sub
cmps
adc
cld
lock
in
out
jmp
xor
imul
push
push
in
rcr
pop
jge
pusha
sub
jns
rcl
call
dec
(bad)
enter
test
pop
outs
rcr
add
jmp
push
ds
loop
test
adc
rcr
in
or
pop
sub
arpl
pop
clc
pop
xor
(bad)
gs
out
or
jecxz
(bad)
into
push
mov
jmp
mov
push
fcom
out
mov
repz
cmp
cs
mov
jne
ret
scas
cmp
jne
(bad)
scas
in
mov
int3
bound
retf
mov
test
mov
rcl
sar
stos
push
sti
push
or
sub
mov
mov
mov
cmp
cmp
sahf
cmp
jp
push
scas
and
push
jo
int
nop
clc
imul
jo
push
(bad)
mov
cmp
xor
je
mov
fld
hlt
lods
mov
xor
adc
jns
arpl
add
sar
pop
or
out
adc
adc
ficomp
sub
inc
jbe
or
lods
cmc
sub
cld
fisubr
mov
cmp
retf
cld
retf
cmp
out
xor
and
lahf
std
jne
jmp
mov
sti
pop
cwde
out
jp
and
iret
cmp
inc
or
in
mov
cld
popw
push
and
cs
cmp
and
and
test
daa
push
pop
das
scas
shl
add
jb
inc
push
scas
pushf
sub
push
jmp
or
cdq
push
jge
popf
pop
sti
xchg
ds
pop
mov
jbe
inc
ds
jae
xor
ins
jmp
xor
out
jecxz
cdq
int3
mov
shl
pushf
push
or
imul
cli
nop
mov
or
mov
in
or
xchg
sahf
popa
jnp
cwde
sub
movs
sbb
(bad)
jne
stos
loop
enter
int
mov
cs
ins
ins
push
cld
add
jbe
ss
mov
in
and
add
pushw
pop
ins
xchg
in
ds
jp
outs
mov
sbb
lds
addr16
cli
xchg
(bad)
mov
ret
mov
stos
mov
data16
lods
jne
mov
mov
daa
mov
daa
dec
test
xchg
not
mov
or
push
out
lea
ret
stos
retf
test
loope
ins
clc
dec
xchg
fsub
pusha
mov
les
jge
jmp
gs
(bad)
std
sar
popa
cmp
(bad)
rcl
push
adc
cmc
js
or
xchg
mov
lods
push
sbb
mov
popa
and
sbb
scas
dec
stos
cmps
clc
xchg
dec
ret
out
push
call
(bad)
sbb
mov
jecxz
dec
data16
push
xchg
stos
idiv
test
jae
(bad)
pop
in
ror
jle
dec
(bad)
jmp
xchg
fcom
and
inc
loope
xchg
push
jg
xlat
and
or
jns
push
fs
cdq
mov
and
pop
mov
xchg
inc
push
or
mov
mov
dec
jl
ret
les
out
and
push
xchg
xor
mov
inc
test
inc
out
popf
in
iret
or
xlat
push
jns
int3
mov
imul
mov
shr
loop
ja
mov
leave
xlat
bound
movs
aam
mov
jmp
out
out
mov
dec
adc
push
mov
neg
mov
daa
sbb
mov
pusha
dec
(bad)
jl
sbb
sub
test
jg
sub
pop
push
push
push
sbb
ins
and
or
sub
ror
jnp
pop
mov
stc
jbe
addr16
jl
pop
and
or
out
jg
shl
fsubr
call
aam
jmp
sbb
outs
jmp
in
fsub
out
mov
sub
pop
in
lock
jae
pusha
mov
add
pop
pop
pop
xchg
push
cmp
out
cmp
xchg
fisttp
mov
out
ficomp
sbb
add
fild
repnz
(bad)
leave
gs
test
fcom
mov
or
adc
mov
imul
jl
lods
xor
xchg
xchg
sbb
ins
add
add
sub
pop
cmp
loop
(bad)
ja
xchg
ret
fucom
push
bound
jb
sub
jo
jae
repnz
data16
jmp
dec
int3
imul
ror
cmp
movs
mov
movups
add
cmc
scas
sbb
xchg
icebp
fwait
jns
adc
inc
jecxz
in
sbb
and
inc
cli
neg
or
(bad)
clc
or
fisttp
lahf
in
fld
popf
fmulp
imul
or
cli
push
stc
imul
or
outs
sub
nop
jecxz
scas
mov
cdq
jbe
retf
cwde
cld
lds
adc
clc
xchg
push
cmp
inc
in
or
test
inc
(bad)
xchg
mov
push
(bad)
sbb
outs
enter
cmp
xchg
mov
pop
add
lar
mov
ins
push
test
inc
dec
into
xchg
js
lahf
or
sub
sub
or
test
fwait
push
fist
push
retf
mov
pop
test
data16
jp
inc
leave
imul
pop
(bad)
ja
mov
jl
push
mov
or
icebp
and
movs
test
nop
mov
inc
cwde
mov
push
ins
inc
je
vcomisd
xor
loope
in
mov
mov
mov
pop
cmps
sar
psraw
enter
xchg
jb
push
sar
neg
mov
cwde
pop
lea
lods
lds
adc
xor
sub
xor
xchg
rcl
sub
dec
retf
cld
dec
scas
clc
std
retf
outs
mov
mov
mov
mov
call
pushf
scas
ret
enter
add
cdq
clc
mov
inc
adc
cmp
add
fs
xor
inc
jo
push
(bad)
cmp
lock
popa
shl
push
pop
cmp
stos
pop
fcmovnbe
(bad)
lea
nop
xchg
jns
mov
xchg
sbb
inc
or
dec
lea
fld
add
and
loopne
dec
sbb
iret
jl
xchg
lahf
push
and
(bad)
repz
or
sub
or
shr
xchg
mov
sti
pusha
mov
and
ja
popf
scas
(bad)
jmp
mov
xchg
cmp
add
pop
loop
push
pop
mov
mov
and
int
test
scas
jmp
pop
fistp
and
xlat
pop
add
mov
push
mov
ds
fcmovnb
sub
and
pushaw
push
inc
in
fs
cmps
imul
dec
adc
test
aas
lahf
loopne
push
adc
mov
stos
push
shr
std
retf
xlat
outs
jecxz
push
pop
push
data16
xchg
pop
mov
and
add
add
pushf
cmps
xor
ins
dec
push
jns
inc
or
fistp
je
jge
ins
mov
retf
cmovle
rcr
xor
push
not
nop
js
mov
xchg
push
out
gs
into
push
dec
pushf
mov
fcom
xor
ret
mov
xor
(bad)
bound
xchg
mov
cmp
gs
addr16
mov
jmp
(bad)
ins
repz
outs
scas
adc
mov
test
fsub
pusha
add
sub
aas
fs
outs
mov
or
popf
mov
jge
sub
dec
sbb
scas
imul
in
in
aaa
bound
or
dec
in
(bad)
addr16
xor
pop
test
adc
mov
fst
push
hlt
ins
or
add
dec
cmp
jmp
movs
sub
lods
cmps
ds
pop
ret
xchg
outs
add
push
cmp
movs
xor
cwde
out
and
das
pop
sbb
mul
sahf
cmp
ss
xchg
mov
jl
push
inc
sbb
shl
jnp
push
mov
leave
mov
aaa
pcmpeqw
jae
and
xor
daa
jo
lock
and
cmp
pop
movs
inc
mov
div
mov
add
outs
sub
lock
mov
inc
mov
sahf
shl
(bad)
pop
and
or
pop
rol
mov
mov
fist
addr16
dec
push
inc
loope
pop
xchg
stos
mov
pop
adc
fcomi
in
mov
mov
das
add
sbb
imul
mov
jno
pop
push
inc
hlt
mov
hlt
in
xor
outs
and
xor
outs
sbb
pop
int
into
repnz
xchg
pusha
inc
out
hlt
leave
adc
fwait
movs
lea
and
bnd
aaa
jmp
pop
xor
iret
je
ffreep
adc
neg
arpl
rep
lock
inc
sahf
out
or
jae
enter
mov
xchg
xchg
test
cld
jns
dec
out
ret
gs
mov
pop
sbb
inc
or
bound
into
out
out
std
adc
sub
mov
xor
cmp
hlt
sbb
(bad)
cmp
jge
jmp
mov
gs
sbb
adc
rcl
popa
sub
dec
daa
mov
std
pop
prefetch
and
pop
pop
push
out
daa
sbb
xchg
hlt
stos
push
push
xchg
out
xor
cli
sbb
sub
push
loope
fcmovnu
adc
and
mov
jo
retf
ret
(bad)
ds
mov
jne
clc
aas
mov
clc
cld
retf
std
push
jl
push
pop
jmp
ret
push
int3
jl
out
iret
out
cmps
test
inc
inc
mov
retf
mov
or
in
ret
sti
popa
xchg
fidivr
test
in
push
mov
loopne
clc
pop
push
daa
xlat
cmp
push
ins
pop
xor
sub
jnp
xlat
jg
in
pop
in
inc
mov
jl
inc
jnp
cwde
scas
add
sti
mov
ret
out
add
(bad)
mov
mov
inc
retf
push
xchg
mov
cmp
mov
mov
cld
mov
clc
cld
mov
mov
in
adc
mov
or
push
and
call
mov
rcl
lds
shr
cmp
add
add
sbb
xchg
out
out
mov
in
push
xchg
sti
adc
pop
fadd
adc
mov
gs
dec
adc
and
and
es
out
fsubr
cmc
aas
popf
inc
pop
xchg
dec
or
add
mov
cmp
xor
ds
xor
cmp
jae
cmp
sbb
dec
repnz
xor
leave
leave
mov
inc
sbb
inc
les
call
into
ins
jno
push
inc
cmps
lods
in
mov
or
(bad)
(bad)
pop
pop
in
mov
call
add
clc
jno
pusha
out
push
mov
jmp
and
or
xor
in
inc
mov
repz
push
movs
jns
push
mov
mov
sub
jle
xor
cmp
stc
mov
cmp
retf
mov
inc
jns
imul
sub
add
pop
sub
test
jecxz
in
lods
sbb
or
daa
jmp
and
fs
(bad)
call
call
lds
or
xlat
mov
xchg
mov
lea
sub
test
loop
pop
xor
pop
imul
inc
sti
popa
xchg
jns
or
add
repz
(bad)
mov
retf
add
retf
mov
stos
iret
mov
mov
fs
dec
add
xor
add
sti
scas
mov
mov
mov
mov
retf
cld
retf
mov
jmp
mov
neg
mov
mov
mov
fs
dec
add
inc
das
mov
fisub
add
loope
icebp
data16
push
cmc
out
arpl
data16
cli
xchg
push
je
push
outs
xchg
mov
daa
xchg
retf
adc
pop
push
jnp
xchg
adc
ins
dec
dec
push
jmp
or
inc
jecxz
add
jg
shl
ret
mov
mov
or
jg
fcom
jl
daa
fldcw
mov
adc
pop
fisttp
dec
jne
sbb
mov
pop
cmps
adc
xor
jno
mov
(bad)
and
inc
mov
mov
scas
inc
xor
movs
adc
xor
adc
xor
adc
mov
xchg
cmp
mov
push
test
lea
mov
pop
shl
dec
pop
mov
dec
lea
cmp
jae
add
lods
mov
pop
push
bound
das
aaa
add
jo
icebp
sar
gs
mov
clc
mov
mov
ins
or
dec
popa
jns
outs
inc
loopne
fnstsw
arpl
pop
push
stc
daa
fist
pop
adc
adc
add
mov
mov
dec
add
int
sub
adc
xor
cmp
and
push
scas
sub
mov
sub
mov
sub
mov
in
out
push
repnz
arpl
xor
cli
sbb
fdivr
aaa
pop
and
nop
clc
mov
mov
mov
adc
and
les
out
cmp
das
xor
dec
mov
(bad)
aas
retf
and
popf
sbb
cmp
sbb
cli
cmp
add
xor
mov
clc
repnz
fisttp
sub
pop
inc
mov
lock
mov
movs
shl
inc
sbb
xchg
jle
sub
icebp
xlat
(bad)
mov
mov
out
sbb
xchg
mov
mov
jmp
push
sub
xor
mov
mov
clc
mov
clc
jge
out
mov
mov
and
test
repz
cwde
mov
jecxz
les
in
mov
clc
cli
cs
mov
push
lahf
pop
retf
lds
sub
std
jp
cwde
push
je
pop
xor
imul
int3
jne
adc
adc
add
pushf
push
dec
ret
push
xchg
retf
(bad)
repz
cdq
iret
adc
xchg
mov
bound
jns
xor
push
pop
rcr
loop
scas
fdivrp
dec
and
mov
inc
cwde
fcmovu
outs
or
push
mov
enter
fsub
xchg
adc
cdq
jb
add
inc
xlat
add
sub
xor
add
xchg
(bad)
nop
cld
sub
popf
mov
cmp
lea
mov
push
inc
and
inc
xor
out
and
(bad)
adc
rcr
stos
rcl
xor
shr
sbb
js
dec
shl
sbb
dec
in
push
retf
pop
xchg
mov
fisubr
(bad)
aam
out
jbe
in
dec
loopne
loope
cmp
(bad)
outs
jo
popa
dec
fisttp
jbe
push
xchg
lahf
fst
lock
repnz
test
ins
pop
pop
pop
in
push
inc
mov
pop
pop
or
idiv
mov
das
mov
push
retf
add
dec
dec
mov
cmp
out
add
mov
dec
jnp
adc
hlt
clc
or
(bad)
gs
icebp
or
adc
add
cmp
mov
das
and
push
popw
cmp
fmul
inc
jbe
mov
adc
sahf
jecxz
aaa
out
leave
js
ror
mov
test
xlat
outs
and
nop
inc
pushf
ret
adc
inc
inc
push
mov
leave
pop
adc
cwde
mov
xor
lods
xchg
js
add
adc
push
push
(bad)
out
shl
jne
or
clc
repz
movs
mov
sbb
iret
push
imul
adc
mov
mov
push
xchg
outs
popa
aam
fiadd
xor
loope
rcr
loop
stos
pop
add
cmps
ins
adc
xchg
inc
mov
and
mov
jmp
lods
push
loopne
shr
loopne
gs
(bad)
cdq
(bad)
fcomp
clc
dec
mov
mov
jl
jb
sbb
mov
or
das
jl
fstp
rcl
icebp
mov
imul
xor
(bad)
(bad)
jecxz
jg
pop
xor
test
add
retf
add
dec
pop
loopne
push
inc
push
mov
enter
fsubr
dec
cmp
loop
lods
mov
adc
xchg
mov
push
add
and
popa
adc
jnp
je
in
cdq
mov
idiv
adc
cmp
mov
jl
(bad)
mov
movs
sahf
imul
xchg
xchg
mov
test
sub
call
jb
xor
cdq
jae
mov
loopne
icebp
das
push
sub
int3
(bad)
sbb
xor
out
add
mov
mov
pop
mov
pop
inc
mov
shl
or
or
dec
add
rcr
add
xchg
aaa
dec
xor
mov
pop
inc
dec
cmp
jns
push
stos
in
(bad)
lods
or
and
fmul
hlt
xchg
and
pop
adc
mov
cli
xchg
xchg
xor
mov
test
dec
clc
lea
fs
cmc
comiss
and
das
mov
rcr
sbb
dec
inc
sub
(bad)
push
jbe
outs
sub
pop
or
cmps
and
push
test
loopne
inc
xchg
stos
call
or
xor
int
mov
sub
movs
in
mov
test
enter
cmps
movs
pop
dec
inc
das
test
in
and
and
movs
(bad)
mov
hlt
loope
cmps
mov
jle
jmp
packsswb
pop
sti
(bad)
call
aaa
or
add
jmp
les
push
jo
outs
sbb
in
xor
rcl
mov
mov
push
inc
jp
mov
aas
jnp
xchg
mov
aad
mov
pop
inc
cld
enter
dec
ja
or
mov
add
je
xchg
push
jnp
fadd
adc
adc
cmp
fist
lock
scas
jb
std
or
xlat
jb
sbb
dec
scas
push
jb
add
xor
iret
inc
add
sbb
mov
and
jno
test
inc
stc
iret
mov
or
sbb
pop
cmp
sti
pop
cmp
ret
jle
loope
cmovae
sbb
sti
ret
std
(bad)
jmp
jmp
xchg
mov
jb
cmp
jge
sbb
test
mov
dec
cmps
out
popa
aad
sub
leave
das
cmps
data16
sbb
and
push
dec
and
inc
xchg
sub
test
xor
std
in
sbb
(bad)
cld
rcr
or
mov
sbb
sbb
dec
in
sbb
fnstcw
outs
inc
mov
ss
cmp
daa
nop
adc
(bad)
xor
jnp
call
iret
inc
dec
jbe
pushf
inc
and
xchg
int3
jl
fs
(bad)
rol
in
xchg
ss
mov
xor
or
dec
rol
pop
outs
pop
aam
pop
ja
cwde
pushf
lock
dec
shl
int3
fstp
repnz
stos
enter
repz
(bad)
cmc
or
pop
or
or
sub
pusha
push
(bad)
jl
and
dec
push
xor
leave
pop
xchg
ret
shr
push
jmp
or
mov
sub
test
scas
jp
add
clc
mov
sub
out
cmc
ret
cmc
outs
xchg
cmc
pop
mov
mov
clc
scas
retf
cld
xor
das
js
dec
das
cmp
outs
clc
cmp
mov
stc
std
mov
cmp
dec
scas
cli
aas
enter
or
jg
stos
mov
jle
sub
cmp
stos
mov
mov
dec
stos
mov
cld
call
std
mov
mov
dec
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
push
int3
mov
adc
js
mov
mov
int
clc
cld
mov
mov
mov
retf
std
or
cmp
sti
das
mov
mov
retf
cld
retf
cld
mov
std
mov
cmp
scas
cmp
clc
mov
mov
clc
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
dec
pop
and
cld
retf
fdiv
sub
mov
push
std
pusha
sti
pop
dec
call
mov
push
stos
test
xchg
bound
loop
push
scas
outs
mov
mov
dec
js
lahf
push
sahf
out
out
fst
(bad)
and
or
add
fbld
jle
mov
mov
jo
cdq
(bad)
mov
ret
mov
jns
adc
popa
adc
mov
jg
jle
pop
sbb
icebp
xor
cwde
inc
dec
dec
sar
jo
fcomp
inc
xchg
pop
in
pop
outs
and
push
pusha
aaa
cdq
mov
(bad)
in
push
fcomp
push
test
(bad)
pop
daa
jne
xchg
fdiv
dec
and
(bad)
push
xchg
ret
ins
sub
mov
push
mov
rcr
ret
pop
fnstsw
sbb
out
inc
cmc
les
iret
jnp
int
sub
scas
pop
jb
cdq
and
out
data16
mov
and
pushf
add
pop
or
emms
fldenv
jno
jmp
inc
imul
scas
(bad)
cmp
(bad)
or
imul
pop
cmp
enter
adc
pop
aaa
out
inc
jo
push
rcl
inc
or
or
sar
adc
sbb
into
mov
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
ret
sti
das
icebp
clc
dec
outs
mov
mov
retf
cld
mov
cmp
mov
jns
sub
push
jmp
mov
mov
ret
cld
scas
mov
mov
mov
je
mov
rcr
nop
cdq
arpl
dec
out
call
sub
fwait
dec
add
xchg
adc
mov
int
frstor
cli
or
dec
sahf
div
mov
cld
or
gs
data16
xchg
sub
sub
mov
cld
xor
pop
mov
sub
jle
xchg
mov
or
xchg
mov
jnp
push
pop
jge
xor
xor
add
std
lods
and
dec
dec
or
sbb
xor
dec
push
add
push
mov
inc
icebp
icebp
clc
sub
mov
jnp
imul
dec
sahf
mov
sub
ins
cld
mov
jp
pop
aas
cli
xor
dec
push
test
mov
stc
mov
adc
push
sbb
mov
inc
sub
retf
(bad)
arpl
pop
mov
sahf
out
add
ror
inc
je
mov
pop
push
loop
stos
or
xor
jp
inc
ss
cmp
cmp
dec
xlat
pop
jle
adc
or
fld
ja
(bad)
ins
lea
pop
push
push
mov
adc
ret
push
push
aaa
cli
pushf
add
sub
xchg
popf
adc
(bad)
hlt
ror
dec
test
fistp
cmp
in
sub
fidivr
outs
sub
or
test
inc
rcr
repnz
jno
mov
jbe
std
and
fdivrp
fstp
mov
add
hlt
jle
xor
xor
movs
mov
ins
xchg
xchg
jl
inc
call
xchg
movs
data16
ds
jmp
test
out
out
imul
in
cdq
push
shr
sbb
movs
pusha
lds
dec
sbb
rol
push
inc
out
test
mov
fiadd
imul
pop
sub
or
popf
adc
lahf
pop
pop
jmp
clc
sub
lods
fnstenv
and
aam
xchg
cmps
movs
dec
dec
daa
push
inc
add
div
test
dec
adc
lds
xchg
and
jmp
scas
and
push
popa
xchg
neg
sub
in
std
mov
push
addr16
(bad)
enter
jno
push
xor
push
fisubr
ja
aad
shr
push
out
jge
jbe
(bad)
outs
sahf
xchg
test
mov
stc
daa
fidivr
mov
loope
jl
stos
mov
ret
cmp
lahf
xor
xor
fs
push
ja
add
arpl
jo
int
in
cld
or
mov
retf
mov
dec
scas
stc
mov
push
stos
jge
add
lods
jns
mov
movs
pop
jne
clc
ds
mov
cmp
push
mov
adc
std
add
jle
jge
push
fild
nop
xor
jne
and
or
aaa
dec
or
pop
xchg
push
jno
repnz
mov
mov
call
adc
gs
push
sahf
(bad)
sub
sbb
test
inc
loopne
sbb
mov
sub
mov
cmp
shr
fisubr
add
sbb
out
adc
dec
daa
xor
fldcw
(bad)
bound
push
adc
xchg
and
inc
xchg
pushf
cmp
into
ret
cmps
add
push
ret
cmc
shl
jmp
loope
in
test
inc
sahf
dec
das
into
(bad)
cs
pop
add
add
neg
xchg
fwait
sbb
or
ins
aad
mov
in
shr
mov
cmps
es
or
shl
inc
ja
imul
inc
mov
add
inc
jno
iretw
add
aad
addr16
inc
add
mov
in
mov
push
cmc
scas
sub
add
jnp
(bad)
inc
pusha
or
pop
sub
cmc
jmp
sahf
xlat
pushf
sub
fisttp
mov
ds
xor
fcomi
and
pop
clc
rcl
cdq
out
pop
mov
lods
daa
push
sub
sahf
push
mov
pop
add
fnstenv
cmp
cmp
mov
push
add
in
inc
ds
retf
lods
fisttp
fwait
mov
push
dec
jnp
or
lods
xlat
(bad)
out
in
xchg
retf
rol
dec
aad
xchg
inc
bound
test
inc
adc
and
add
icebp
fmul
dec
mov
cmp
adc
test
not
pop
les
add
nop
leave
cmp
stos
js
mov
jge
out
mov
cld
retf
cld
or
cld
std
push
jmp
jo
mov
and
sbb
into
cld
mov
mov
adc
js
lds
cld
outs
fst
dec
lods
mov
test
je
jl
shl
call
pusha
or
xchg
push
mov
push
cmp
pop
sub
cmp
test
or
xchg
fsubrp
or
mov
or
mov
inc
jns
lock
dec
jmp
fdivr
push
and
mov
cmove
adc
test
fld
lea
stc
dec
and
pop
call
std
push
dec
call
jl
cli
cmp
out
fst
call
test
dec
call
outs
mov
sub
xlat
jns
je
call
inc
dec
fsubr
mov
fild
or
mov
movs
push
sub
mov
xchg
adc
adc
pop
sbb
mov
mov
add
adc
jmp
mul
sub
sub
jg
mov
push
(bad)
ja
jns
out
mov
retf
mov
stc
in
xchg
xor
xor
sti
das
call
cld
or
mov
ds
cld
dec
outs
clc
mov
mov
hlt
mov
dec
jmp
xchg
into
data16
xchg
ret
mov
ss
pop
int3
mov
icebp
lods
fidiv
and
xor
cld
scas
mov
mov
nop
clc
pop
pop
or
cmc
scas
syscall
sub
in
lock
scas
scas
inc
mov
xchg
repnz
daa
dec
jae
daa
mov
loope
cmps
jno
std
mov
sbb
xchg
cmp
add
in
popf
fsubr
mov
out
xchg
sbb
add
and
push
sti
mov
xchg
add
add
mov
nop
sub
pushf
jbe
mov
pop
cmp
xor
xchg
lock
add
lods
loopne
push
imul
xor
pop
pop
nop
stc
push
jmp
inc
pusha
sbb
or
pop
rcl
or
add
cli
loope
push
push
jmp
sub
out
shr
add
data16
pop
(bad)
sbb
cdq
dec
inc
sub
sbb
cld
jge
lods
push
aas
mov
pusha
je
aas
jecxz
xor
ret
cmp
push
das
dec
adc
dec
addr16
pop
push
scas
inc
pop
cs
(bad)
mov
cld
cmc
outs
adc
add
(bad)
das
sub
xchg
pop
mov
(bad)
icebp
inc
out
or
(bad)
xchg
inc
mov
in
ins
jnp
xlat
mov
sahf
xchg
cmp
add
std
data16
rcl
pxor
enter
mov
push
xor
loop
cmp
call
pop
xchg
inc
jecxz
mov
shr
jno
cmp
and
stos
and
scas
add
movs
pusha
adc
and
cmp
and
out
add
jmp
dec
and
add
dec
xlat
xchg
test
jb
mov
adc
jb
pop
xor
sbb
xlat
in
std
cli
and
sbb
int
icebp
sti
es
out
out
cmp
sbb
fdivr
popa
dec
adc
fucomi
jp
(bad)
sbb
xchg
mov
cmp
aaa
stc
mov
test
loopne
mul
test
inc
add
iret
lahf
sub
ret
pop
cdq
cli
inc
fst
jecxz
ror
cmc
dec
mov
rcl
ss
pop
sub
fs
jae
sub
test
push
and
arpl
arpl
(bad)
inc
ret
gs
retf
addr16
add
push
call
out
and
into
mov
test
data16
daa
and
xchg
inc
(bad)
sbb
ss
jbe
jmp
ss
fidiv
iret
or
cmp
das
je
pop
div
add
rcl
mov
or
(bad)
jbe
(bad)
(bad)
ds
or
jl
js
mov
sbb
test
shl
push
ror
xchg
xchg
test
fcom
xor
mov
imul
pop
rcl
mov
mov
jg
loope
clc
adc
bound
xor
hlt
push
mov
enter
or
inc
sbb
or
pop
pop
cwde
push
pop
inc
sub
adc
add
les
cwde
mov
adc
jno
inc
out
mov
mov
popa
push
stc
push
(bad)
rcr
or
dec
inc
into
icebp
or
mov
call
pop
ins
push
add
mov
cmp
xchg
shl
jae
sbb
repnz
shl
out
xchg
aad
sti
adc
jns
lods
scas
enter
clc
xchg
(bad)
inc
cmp
sbb
movs
loop
dec
and
sbb
ins
out
xor
jno
jmp
jnp
test
or
and
cmp
sbb
ds
retf
cmp
shl
cmc
or
fdiv
outs
add
jmp
xor
pop
inc
cwde
cmps
or
pop
adc
push
repz
std
inc
and
or
add
xchg
pushf
mov
push
push
mov
scas
in
ss
adc
jne
sar
inc
nop
inc
in
jns
pop
sbb
cmp
jge
add
mov
pop
imul
mov
lods
add
mov
inc
cmp
sub
cmc
out
push
ss
xchg
dec
push
fadd
imul
call
(bad)
cld
ret
fldcw
(bad)
in
test
out
jmp
dec
enter
xor
js
mov
popa
sub
pop
in
jo
in
xor
std
popa
xor
sbb
sub
add
enter
aam
dec
add
ror
jne
mov
(bad)
fdivp
leave
inc
pop
push
or
mov
out
lods
imul
call
dec
enter
xor
ret
push
mov
jecxz
in
cs
xor
and
jbe
(bad)
fisub
jmp
ror
fist
mov
(bad)
retf
out
jmp
rcr
cmp
add
ins
jo
lahf
test
sub
xor
mov
loope
rcr
out
(bad)
clc
inc
cmp
daa
xor
pop
xchg
push
xor
or
or
cmp
pop
movs
rcl
jmp
add
mov
pop
pop
dec
cs
bound
xor
stos
pop
fisubr
jmp
mov
movs
jno
lock
jl
add
(bad)
sub
call
sar
pop
inc
aas
and
xchg
jb
pop
cs
sub
mov
fdiv
pop
cmps
leave
cmp
pusha
mov
cmc
ret
jne
sahf
dec
xchg
mov
inc
jbe
test
hlt
clc
cmp
pop
mov
xor
lds
mov
popf
add
int
mov
aas
(bad)
test
data16
pop
add
cmp
fiadd
add
repz
inc
xor
push
xor
mov
retf
mov
push
test
adc
dec
push
pop
and
cdq
std
gs
jne
out
dec
add
cmp
dec
aad
sbb
mov
daa
jge
int
cmp
sbb
dec
aaa
pop
js
sbb
rcr
jns
rcr
add
and
dec
pop
imul
add
mov
mov
mov
cmp
(bad)
adc
nop
in
shl
inc
dec
jge
fldenv
cwde
and
hlt
cs
sbb
stc
sbb
enter
iret
push
into
cdq
push
or
ins
jnp
pop
push
fld
lea
cmp
scas
and
cli
lock
sbb
xchg
in
mov
pop
cld
cmc
(bad)
out
dec
jae
sub
xchg
sti
push
imul
dec
rcr
mov
mov
xchg
imul
in
mov
cwde
repnz
loop
inc
fcomp
lods
xchg
call
push
adc
sahf
or
arpl
or
es
ficomp
aam
dec
shl
pop
rcr
add
jae
mov
push
mov
outs
or
and
xchg
xor
adc
mov
mov
outs
int
out
(bad)
or
sub
dec
inc
or
sbb
push
data16
sub
xchg
fiadd
mov
pop
pop
jmp
stc
in
popa
mov
jg
cmp
int
in
inc
mov
(bad)
pmullw
cmps
bound
and
shl
and
xor
leave
out
(bad)
xchg
into
xor
int3
mov
das
fstp
xchg
xchg
mov
push
(bad)
jl
js
dec
mov
js
dec
das
mov
cld
retf
cld
mov
mov
xor
xchg
mov
mov
into
mov
or
xor
jle
mov
rcr
les
sbb
cmp
dec
retf
ficomp
xchg
aad
push
push
rol
cdq
(bad)
rcl
sbb
pushf
retf
pop
(bad)
(bad)
stc
imul
sbb
xchg
rcr
out
lahf
lods
add
sbb
sub
sub
jns
in
jp
jge
out
mov
xor
push
ins
ds
(bad)
retf
call
js
inc
xchg
aam
out
cli
(bad)
out
xchg
cmp
xchg
or
inc
ret
out
add
sub
adc
js
call
ret
push
add
fmul
fsubr
ja
out
call
cmps
in
sbb
out
mov
sub
sub
ret
sbb
and
push
jno
cmp
pop
dec
(bad)
adc
jno
(bad)
mov
call
cmp
fisub
shr
loopne
mov
in
in
pop
fwait
(bad)
ror
in
add
ja
push
and
dec
hlt
(bad)
dec
pop
sti
sar
test
sti
xor
aaa
inc
jmp
pushf
pop
ficomp
pusha
sub
inc
(bad)
fmul
sub
test
mov
icebp
sbb
daa
test
ror
in
mov
pushf
jmp
or
aad
shl
sub
rol
lock
mov
in
sbb
sbb
aas
in
(bad)
jl
cdq
or
loop
fldcw
jmp
movs
aam
pop
test
xor
test
cmps
push
nop
inc
into
mov
xchg
mov
cmp
jbe
mov
sbb
sti
cmp
adc
jmp
push
lahf
push
adc
arpl
xchg
int
lds
retf
or
xor
sub
sbb
cwde
xchg
gs
mov
cwde
hlt
pop
test
pop
stos
outs
iret
inc
aas
adc
adc
add
outs
mov
and
test
cli
test
cmc
mov
dec
mov
dec
call
ja
dec
ret
sbb
outs
sub
xor
mov
or
push
call
and
sub
pusha
sahf
adc
dec
push
xchg
lods
cmps
out
lahf
mov
inc
pop
sub
sbb
sti
xchg
mov
push
shl
cmp
mov
and
inc
pop
fisub
add
or
mov
rol
dec
mov
icebp
loop
leave
jmp
jle
pop
pushf
(bad)
mov
cmp
inc
hlt
aam
sub
mov
ins
mov
sar
cmp
inc
(bad)
hlt
cmp
das
inc
int3
cmp
stos
ds
xchg
adc
mov
imul
(bad)
pop
pusha
sbb
jb
clc
push
fistp
cdq
mov
(bad)
adc
out
(bad)
jg
(bad)
retf
repnz
sub
inc
aas
scas
push
fs
adc
inc
jmp
popa
dec
mov
cld
mov
sub
pushf
sbb
shr
or
jb
mov
sbb
les
xlat
jmp
pop
enter
and
dec
out
stc
sub
jecxz
cld
jg
nop
fnstenv
lock
ds
fsubr
scas
pop
mov
cwde
(bad)
xchg
stos
dec
adc
cmp
es
xchg
mov
xchg
cli
xor
lds
stos
xchg
and
mov
inc
fsub
fld
outs
loope
xor
mov
int3
adc
and
sub
out
es
icebp
xor
aas
int3
inc
shl
mov
out
call
ret
in
add
jg
cwde
in
mov
test
add
and
adc
xor
or
dec
fisubr
mov
xchg
xchg
repz
sbb
mov
arpl
cmp
or
mov
jbe
push
sub
in
push
cmp
hlt
(bad)
imul
(bad)
je
jecxz
loop
cmp
jle
pop
fwait
lock
(bad)
xor
(bad)
or
jl
outs
push
mov
or
dec
jno
adc
and
aas
sub
ins
repnz
je
sbb
xor
push
xchg
jo
pop
mov
mov
jmp
inc
test
mov
jmp
jmp
cmps
(bad)
mov
xlat
lea
jl
push
cwde
test
mov
cmp
fnstsw
imul
ret
retf
test
cs
inc
imul
pushf
pop
rcr
or
pop
out
inc
fs
leave
mov
inc
dec
retf
cld
dec
scas
cmp
retf
clc
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
fmul
mov
clc
cmc
retf
jl
cmps
push
fsubr
mov
jno
and
jbe
lods
mov
scas
fisttp
inc
push
int3
pop
rdmsr
mov
dec
dec
clc
iret
inc
sub
jg
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
retf
cld
or
retf
cld
dec
das
js
or
mov
cld
retf
cld
mov
mov
call
pushf
scas
(bad)
mov
out
mov
xor
inc
sub
dec
imul
arpl
cmp
xchg
or
mul
stos
sbb
pop
jo
dec
sbb
out
push
mov
sar
push
ins
add
int3
adc
sub
(bad)
jns
cmp
lods
stos
push
mov
inc
pop
mov
or
push
fs
push
(bad)
adc
movs
pop
sub
sub
cmp
xor
sahf
or
fidiv
icebp
mov
mov
jle
cli
jecxz
sbb
in
jecxz
paddsw
cli
or
ins
cs
sub
xchg
pop
jmp
ret
or
push
pop
jmp
jbe
xchg
and
mov
adc
cmp
xchg
mov
fimul
push
loopne
cmp
push
loope
sub
xor
push
cmp
mul
outs
pop
cmp
fcmove
test
(bad)
dec
push
repnz
dec
adc
add
mov
retf
push
in
cmp
std
or
pop
enter
add
pop
mov
aaa
pop
(bad)
int
out
cld
retf
cmp
scas
cmp
scas
clc
cld
retf
cld
mov
mov
into
out
call
sub
into
mov
or
mov
mov
sbb
lods
mov
jmp
push
mov
mov
pop
or
ror
xlat
mov
icebp
lock
push
adc
sbb
mov
bound
aaa
cmp
fistp
cli
rcl
sub
xchg
and
and
stos
aaa
cmc
bound
and
ret
dec
imul
lahf
movs
and
(bad)
xchg
cmps
cmc
ins
out
xor
dec
in
ret
sub
xor
jno
in
and
ja
jb
inc
nop
pop
mov
in
jmp
imul
pop
xor
xor
int
cld
jno
jecxz
mov
in
mov
pop
loope
xchg
ret
mov
hlt
(bad)
lods
les
push
repnz
loopne
sub
ins
fwait
dec
mov
dec
or
clc
mov
mov
mov
mov
sti
mov
cwde
cli
xchg
loopne
cmps
fild
cmp
mov
mov
nop
clc
jmp
js
push
test
scas
xor
pop
mov
(bad)
cmp
shl
mov
inc
lahf
hlt
sub
faddp
pop
lea
jmp
out
sar
jo
(bad)
call
mov
pop
xchg
mov
add
xor
sub
or
jle
mov
mov
cwde
fwait
lds
aaa
or
jae
ds
ins
sub
cld
sbb
sar
outs
mov
shl
mov
push
sahf
inc
addr16
xor
adc
or
into
scas
adc
fnstsw
mov
fcompp
jmp
into
inc
push
fsubr
cmc
repnz
fs
aad
push
call
repnz
mov
mov
mov
jne
ret
es
cmp
sub
ss
mov
pop
cs
jle
addr16
sbb
sbb
adc
push
sub
push
les
push
(bad)
into
cld
dec
outs
(bad)
xchg
cmps
dec
pop
and
sub
mov
xchg
jae
add
xchg
popa
and
xor
xchg
repz
cmps
rcl
stc
jle
rcr
jo
fild
inc
stos
loopne
leave
sub
jae
sbb
enter
cmps
inc
mov
push
sbb
add
push
movs
stos
inc
movs
inc
jmp
cmp
fsubr
pop
out
pop
(bad)
adc
adc
(bad)
add
push
stc
or
pop
or
mov
dec
mov
enter
shl
lock
mov
data16
dec
push
call
ins
inc
push
retf
test
push
mov
xchg
inc
popa
mov
sbb
call
call
ficomp
(bad)
cdq
inc
mov
pop
shr
cmp
mov
adc
call
data16
mov
(bad)
and
or
test
mov
imul
dec
mov
xchg
clc
call
jmp
or
mov
into
imul
mov
sbb
mov
push
fnsave
adc
xchg
mov
or
imul
mov
push
mov
inc
mov
pop
ret
shr
and
js
pop
lahf
push
xchg
cmp
adc
and
rcl
and
pop
test
fiadd
sub
cld
dec
(bad)
mov
es
fiadd
movs
sti
dec
leave
add
outs
(bad)
sar
xchg
mov
ins
cmp
icebp
cli
out
fist
jle
xor
rcr
push
out
dec
outs
sub
mov
dec
adc
pop
pop
push
stc
pop
inc
das
adc
cmp
add
pop
mov
bound
aas
mov
out
std
pop
mov
xor
imul
mov
inc
and
mov
retf
xchg
add
xchg
std
enter
leave
sub
(bad)
ror
inc
xchg
scas
cmp
cmp
inc
jnp
adc
iret
cmp
mov
adc
mov
xor
pop
(bad)
mov
jae
xor
sar
enter
pop
ds
(bad)
mov
movs
cmps
test
out
add
adc
pop
mov
(bad)
scas
aad
mov
pop
dec
cmp
mov
add
fwait
imul
lea
ret
fsubr
jmp
loop
out
icebp
iret
idiv
lods
sbb
int
pop
dec
fcomp
je
cmp
adc
mov
adc
fsubr
ret
lea
mov
scas
popf
jl
sub
imul
push
(bad)
scas
ret
(bad)
cmp
(bad)
lahf
or
cwde
xchg
add
xchg
mov
sbb
retf
jne
fs
call
jbe
out
mov
fnstcw
lahf
js
sar
mov
jmp
or
out
loop
push
adc
enter
fistp
add
inc
fld
movs
(bad)
dec
mov
imul
adc
or
jmp
mov
fcmovnbe
ret
push
xor
std
retf
ret
retf
out
sub
fldpi
movs
int3
jno
xor
cwde
ds
jmp
std
retf
les
jecxz
or
jno
mov
push
mov
xchg
inc
and
adc
arpl
fucomip
loopne
sub
dec
ret
mov
inc
pop
cld
adc
jle
and
test
shr
mov
out
push
xor
mov
xchg
cmc
js
xor
sub
not
mov
dec
aaa
shr
push
movs
fimul
and
mov
sar
push
dec
cmps
push
mov
mov
inc
es
mov
or
push
lock
xchg
mov
(bad)
cmp
ficomp
cmc
pushf
and
je
cmp
fadd
and
cdq
ja
mov
jle
retf
dec
cwde
aas
rcl
pusha
stos
cmps
clc
out
adc
je
cmc
push
mov
mov
daa
aad
mov
out
jmp
cmp
dec
arpl
xchg
in
lods
loop
jg
add
dec
and
cmp
xor
dec
hlt
add
(bad)
fstp
dec
out
lds
cmp
mov
nop
nop
push
xor
jl
fwait
cmp
clc
mov
or
cld
fisubr
cmp
das
js
or
cmp
outs
clc
std
retf
in
mov
dec
cs
ds
lods
sti
dec
cmp
dec
sub
mov
or
cld
stc
(bad)
or
cld
stc
iret
push
mov
(bad)
cmp
retf
out
stc
std
mov
mov
mov
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
std
stc
iret
stos
cmp
jle
test
mov
cld
cmp
jmp
jl
outs
(bad)
(bad)
retf
cld
retf
mov
retf
cld
retf
cld
mov
cmp
scas
stc
mov
mov
mov
cld
retf
cld
retf
cld
or
jns
or
into
cmp
out
clc
cld
retf
js
out
clc
aad
or
jl
fld
rcr
mov
cld
mov
and
pop
mov
xor
pop
xchg
jecxz
or
das
out
fst
adc
cmp
mov
std
dec
into
ins
xchg
(bad)
mov
cmp
cwde
cmps
retf
sbb
add
cmc
mov
jmp
lods
push
(bad)
cli
push
jno
out
mov
(bad)
scas
call
mov
lods
mov
addr16
rcl
sub
mov
sbb
arpl
cmp
xor
cmps
pop
clc
loope
loope
mov
(bad)
frstor
pop
mov
adc
out
push
popa
xor
out
xor
mov
ss
mov
jge
je
bound
adc
idiv
xchg
fidiv
push
mov
outs
push
mov
das
jns
loope
jmp
in
fldcw
xchg
jg
sbb
aad
mov
pop
cmp
imul
push
vunpcklps
inc
jmp
add
jns
adc
popa
loope
pavgb
repz
(bad)
addr16
sbb
ja
fld
aam
(bad)
mov
mov
or
rcr
and
or
int3
in
aam
mov
mov
sbb
fmul
dec
in
or
dec
(bad)
scas
(bad)
push
sub
pushf
or
call
cld
jg
je
add
aaa
popa
sahf
jne
push
jle
hlt
push
das
sbb
outs
rol
gs
fdiv
xor
jge
lods
aaa
in
sub
(bad)
sub
(bad)
shl
inc
hlt
loope
add
(bad)
and
cdq
popa
xor
mov
sbb
xor
loop
jmp
les
(bad)
es
mov
test
aaa
mov
sub
sub
jo
fs
hlt
push
inc
cdq
out
lods
test
sbb
xor
push
push
js
push
mov
dec
cmps
call
cdq
pop
loope
clc
cld
or
and
pop
(bad)
xchg
out
cmps
clc
mov
cli
scas
clc
hlt
movs
lock
in
scas
clc
clc
pop
jmp
jmp
ret
sti
out
repnz
dec
das
js
retf
cld
mov
clc
cld
mov
std
dec
outs
jns
iret
mov
jge
ret
mov
jle
dec
retf
cld
mov
jns
cmc
retf
sub
xchg
push
xchg
add
aad
sub
pop
dec
pop
loop
aam
repz
mov
dec
cld
push
loope
or
push
ret
and
fst
add
xor
jmp
test
loopne
pop
lea
aaa
popf
cmps
es
cdq
ret
and
pop
xor
stos
or
cmp
sbb
fucom
inc
xlat
push
arpl
es
stos
lods
test
test
fstp
sbb
test
popa
push
or
outs
add
pop
mov
ja
push
sub
fmul
mov
fnstsw
dec
xchg
dec
aad
mov
mov
jle
int
repz
das
xor
sbb
inc
les
movs
(bad)
not
sbb
scas
int
ret
call
jecxz
mul
adc
shl
leave
xor
xchg
enter
rcl
jl
jb
cmp
int3
popf
push
add
sub
stc
pop
or
mov
mov
mov
jg
xchg
(bad)
dec
and
(bad)
cdq
icebp
mov
jp
call
cdq
add
mov
ss
mov
pushf
cdq
push
cld
call
sbb
pop
aas
cwde
in
mov
jp
pop
mov
aas
xchg
xor
adc
call
mov
pop
adc
inc
sbb
push
mov
lods
push
add
dec
ficom
int
jo
xor
rcl
cmp
mov
push
sub
sub
xor
cmp
test
push
fnstcw
jns
push
and
out
or
dec
jae
adc
fadd
cmp
aaa
jnp
cmp
xchg
repz
test
jbe
clc
mov
jb
mov
sbb
and
or
mov
xchg
inc
cdq
aaa
mov
div
pusha
retf
arpl
test
push
jnp
in
rcr
pop
daa
cmp
pop
not
(bad)
and
cli
jbe
dec
dec
lahf
xchg
lea
movs
imul
addr16
stos
ror
jle
popf
mov
jmp
mov
movs
and
fist
bound
sub
mov
fnstcw
jecxz
in
adc
adc
(bad)
fsubr
push
addr16
pop
repnz
retf
push
ss
jecxz
xor
dec
daa
nop
leave
mov
retf
jge
scas
clc
jl
scas
clc
cld
retf
cld
into
das
clc
mov
xchg
push
test
cdq
clc
ds
mov
and
cmp
js
mov
out
lods
mov
add
jmp
int3
sub
add
ss
inc
loopne
std
inc
inc
fstp
ins
push
push
jno
inc
lahf
gs
xlat
inc
test
popfw
push
scas
push
inc
or
or
sar
dec
pushf
inc
mov
mov
or
dec
mov
xchg
jge
pop
cmp
stos
xor
mov
cld
or
mov
retf
cld
or
jl
push
jmp
mov
call
test
jmp
add
scas
mov
jae
das
repnz
pusha
sti
push
sahf
jnp
push
scas
outs
sbb
dec
push
movs
(bad)
aas
aam
test
mov
sbb
lods
inc
adc
xchg
dec
cmp
jno
or
in
inc
stc
push
pushf
or
mov
movs
pop
push
clc
aas
call
retf
loope
mov
xor
sub
dec
or
je
les
icebp
mov
xor
push
fidivr
xor
xchg
into
test
adc
bound
cmps
lock
jne
add
(bad)
xchg
enter
shr
ret
sar
and
xchg
xchg
pop
cmps
pop
loop
and
scas
nop
retf
jae
sub
cmp
dec
inc
mov
sub
scas
sub
cmp
push
stos
push
and
ret
ret
adc
dec
std
jg
cmc
popf
dec
inc
sub
or
cmp
or
pop
rcl
and
cwde
repnz
dec
push
sub
sub
pusha
jns
dec
jne
mov
mov
mov
jp
xchg
fld
ins
push
adc
jecxz
cmp
test
imul
dec
xchg
jnp
aad
sti
mov
imul
pop
sbb
add
cmp
inc
shl
arpl
into
mov
xor
ja
fs
outs
not
sbb
mov
out
lea
push
arpl
cs
and
adc
imul
call
add
pop
(bad)
movs
push
add
dec
add
jcxz
rcr
rcl
jne
out
mov
bound
out
dec
stos
pop
fdivr
ins
cwde
pop
inc
shr
jo
iret
loop
in
clc
push
aad
loopne
hlt
sub
ja
push
clc
ret
sbb
jns
rcl
fstp
lahf
cmp
imul
retf
push
cmp
div
fmul
(bad)
movs
jns
arpl
jae
retf
add
ins
stos
mov
test
mov
pop
inc
popa
test
pop
push
xchg
push
jmp
fwait
cmp
sub
inc
inc
adc
fild
sbb
inc
xor
sub
inc
fucom
call
pop
in
xor
and
add
xlat
xor
xchg
aam
cmp
popf
jl
in
push
fwait
loop
add
fst
jmp
mov
mov
push
jns
push
mov
btc
sahf
dec
push
rol
add
scas
out
adc
cmps
pop
es
or
movs
aam
pushf
fs
clc
push
pop
nop
clc
lods
xor
lea
das
clc
mov
mov
mov
jl
cs
ret
mov
sti
mov
fsubr
cld
mov
cmps
cmc
sub
sti
nop
dec
mov
pusha
loopne
ret
mov
sub
adc
adc
mov
or
js
fld
aad
sub
jg
cmps
shr
xor
pop
mov
mov
jo
ss
dec
sub
xor
sbb
dec
loop
ret
gs
and
aaa
rol
popf
aaa
les
clc
test
or
scas
xor
sbb
and
test
sbb
int3
or
jo
aam
dec
mov
add
add
ficom
or
pop
fwait
cld
push
loopne
mov
popa
jb
sbb
add
push
inc
sub
(bad)
and
mov
and
daa
fucomp
xlat
aas
jmp
aaa
pop
(bad)
test
daa
inc
mov
or
mov
imul
xchg
icebp
jge
inc
mov
pop
gs
out
retf
pop
popa
lods
fnstenv
inc
shl
mov
add
imul
mov
push
dec
fnstcw
(bad)
fild
int3
adc
scas
pop
je
sbb
hlt
jmp
aas
outs
(bad)
cmp
sub
popa
inc
out
ret
pop
adc
xor
pop
and
es
xor
test
lock
mov
pop
mov
sbb
inc
pop
mov
not
imul
push
sbb
sbb
mov
xchg
retf
pop
out
test
mov
pusha
mov
cmps
fwait
sbb
push
addr16
fidivr
scas
dec
mov
mov
sbb
loopne
pop
scas
shl
(bad)
div
repnz
hlt
sbb
movs
stos
mov
cmp
and
out
jge
stos
inc
stos
fsubr
pusha
push
shr
ins
test
or
push
dec
ins
or
jge
lahf
cmp
ror
sbb
stc
push
mov
or
mov
scas
and
jmp
sub
cmp
rcr
add
mov
les
or
cmp
jge
cwde
pusha
cmps
inc
jmp
dec
dec
push
stc
movs
shl
jmp
and
xchg
jge
push
pop
inc
arpl
jl
mov
out
cmp
mov
adc
stc
movs
jmp
rol
and
mov
stos
cld
push
push
ficomp
xchg
jmp
add
fdivr
add
and
and
retf
and
clc
pop
and
dec
test
(bad)
call
xor
(bad)
pop
jae
xlat
out
mov
repz
mov
ret
and
inc
aaa
sbb
fidivr
or
mov
mov
(bad)
into
in
inc
call
je
call
movs
mov
das
sub
test
fmul
fs
nop
or
push
(bad)
addr16
mov
mov
dec
add
int
add
mov
clc
test
push
push
xor
adc
ret
push
jmp
jbe
call
ins
inc
in
jg
xchg
mov
ds
daa
jae
dec
and
add
dec
mov
(bad)
fstp
aas
pop
mov
pop
adc
dec
mov
mov
xchg
mov
push
rcl
arpl
test
das
sbb
add
ss
mov
out
lods
lods
scas
data16
sar
xor
ret
or
jge
aaa
adc
ret
es
xchg
add
and
aaa
sbb
sbb
mov
cwde
dec
aas
mov
sbb
lea
pop
ja
cmp
or
mov
lods
inc
jne
pop
test
jb
ds
(bad)
(bad)
mov
jl
(bad)
push
or
ins
jb
xor
je
aad
and
push
inc
add
ds
stos
wrmsr
push
lahf
popa
sar
inc
lahf
adc
jle
fisub
shl
push
cmps
cmp
call
push
pop
add
shl
add
outs
push
adc
hlt
xor
or
mov
inc
add
add
ficomp
adc
jb
pop
inc
inc
fstp
pop
jp
into
pop
add
fcom
popf
add
pop
push
push
xchg
mov
jmp
mov
push
das
jmp
jmp
(bad)
popa
(bad)
mov
repnz
fdivr
dec
jb
clc
jg
or
movs
ja
imul
outs
into
ins
pushf
dec
fdivr
bound
mov
mov
adc
(bad)
ins
and
int
sti
mov
mov
xchg
mov
mov
xchg
jno
dec
sar
jns
xchg
mov
in
popa
shl
pop
mov
add
call
call
mov
adc
xchg
sbb
fidiv
cmc
rcl
add
add
popa
cwde
div
setae
cmp
mov
dec
pop
jmp
pop
push
movs
imul
jb
(bad)
popa
add
push
cwde
jbe
stos
test
rcr
push
xor
int3
pop
jne
or
push
test
inc
adc
arpl
jae
shr
clc
mov
mov
mov
inc
stc
cmc
and
inc
(bad)
push
in
ds
and
shl
cmp
mul
lods
ffree
sub
aas
pop
jle
aas
(bad)
add
inc
push
pop
mov
aas
das
jb
push
adc
(bad)
(bad)
add
in
mov
push
xor
aas
pop
mov
ja
test
push
imul
je
fwait
rcr
das
shl
rcl
popf
dec
push
rcr
lahf
lods
call
dec
inc
sub
mov
push
out
mov
jns
and
push
je
call
dec
sub
fs
das
cmp
push
(bad)
pop
and
dec
int
movzx
mov
sbb
xor
adc
jmp
test
pusha
and
mov
push
je
pop
dec
mov
lea
fs
pop
ds
dec
rol
adc
addr16
je
jbe
test
mov
sar
sbb
push
cmps
pop
pop
lods
pushf
mov
jg
outs
mov
and
push
rcr
jge
mov
rcl
xchg
repnz
mov
das
sub
mov
repz
dec
cmps
add
std
sub
cwde
xchg
(bad)
cmp
pop
cmps
xchg
adc
jmp
cld
dec
das
mov
cmp
scas
clc
mov
mov
mov
sahf
mul
imul
enter
add
retf
mov
fmul
(bad)
pop
(bad)
aaa
xchg
xor
mov
movs
pop
push
movs
lock
data16
leave
dec
cmp
mov
sbb
daa
cs
aaa
repz
add
pop
mov
fnsave
inc
add
mov
xchg
enter
mov
js
mov
enter
push
stc
push
sbb
cmp
push
push
arpl
cmp
movs
ret
pushf
aam
pop
sbb
mov
(bad)
(bad)
mov
cwde
jp
hlt
aaa
ins
adc
int
lds
mov
xchg
cmp
or
jg
mul
lods
mov
push
jae
sbb
ds
xchg
pusha
pop
stc
sub
test
push
stos
mov
pop
rcr
dec
mov
inc
dec
jecxz
dec
cmps
ins
sbb
adc
outs
xchg
div
popa
sbb
mov
cmp
dec
pop
and
test
das
cli
dec
cmp
mov
call
xlat
cmp
sub
cmps
or
not
bound
ficomp
(bad)
jp
sbb
add
xlat
jno
mov
nop
js
stos
(bad)
mov
pushf
lea
jo
push
sub
mov
ins
leave
vmwrite
sbb
sbb
add
add
xlat
cmp
movs
mov
sub
mov
addr16
mov
stc
pop
cmc
imul
dec
ret
scas
ret
std
or
popf
jp
js
and
adc
fdivr
aam
ret
adc
add
cld
and
add
sbb
test
repz
pusha
mov
sbb
and
in
dec
cmp
cmp
adc
mov
test
call
int3
jns
popa
fldcw
fld
das
call
xchg
imul
and
lea
into
jns
pop
int3
inc
pop
add
xchg
xor
(bad)
pop
push
and
pop
sti
in
pop
jmp
sub
sbb
(bad)
cmps
ret
and
inc
cli
jmp
pop
mov
add
adc
sbb
outs
int
mov
loopne
cmp
in
mov
or
cli
std
push
clc
inc
push
push
jae
iret
jg
push
xor
sub
push
loop
push
sbb
cdq
or
mov
push
pause
std
(bad)
int3
push
aaa
scas
(bad)
test
add
out
arpl
push
call
imul
loope
imul
fs
fld
add
daa
cmp
ds
pop
arpl
les
shl
mov
jmp
xor
repz
or
vpminub
dec
les
arpl
mov
nop
sbb
jp
push
and
jns
mov
mov
add
mov
jp
sub
fimul
inc
fidiv
mov
popf
cli
push
dec
in
pop
push
call
or
sahf
push
mov
sbb
cs
jge
lds
clc
test
(bad)
xchg
clc
enter
dec
cmps
mov
push
call
push
jle
cmp
shl
add
(bad)
mov
mov
cld
xchg
xchg
shl
xor
sbb
adc
inc
and
cmp
jecxz
not
push
mov
pop
add
scas
cld
dec
jb
and
(bad)
jle
mov
ror
fcomip
push
cmp
test
pop
xchg
setnp
and
clc
adc
ins
dec
ins
popf
retf
or
fnstcw
movs
lahf
sub
jb
test
arpl
shr
mov
jmp
mov
cli
lea
fcom
inc
xor
mov
les
pop
in
test
pop
mov
push
loope
clc
jmp
or
je
clc
push
ss
dec
dec
push
lea
push
pop
movs
or
mov
into
rcl
ror
and
adc
dec
lods
xor
fdiv
movs
and
sub
in
in
iret
sbb
or
stos
sub
sub
push
push
push
jne
es
retf
xchg
add
in
cmp
jge
in
sbb
out
push
xchg
mov
jo
test
(bad)
jno
mov
cmc
in
les
ror
es
call
inc
out
adc
dec
retf
cld
dec
scas
cmp
retf
clc
mov
out
cs
fsubr
inc
jmp
ss
out
pop
jmp
mov
mov
xor
jno
loop
xchg
outs
jmp
pushf
into
xor
scas
test
pushf
cld
lea
cmp
adc
retf
mov
addr16
add
ret
popf
jmp
std
dec
(bad)
mov
daa
fdiv
mov
pop
and
dec
jl
fistp
js
mov
mov
xor
cmc
sahf
clc
xor
outs
clc
mov
mov
clc
cld
retf
clc
and
in
xchg
inc
inc
mov
in
cmp
mov
mov
push
jae
aad
lahf
aad
jbe
fwait
or
jns
pop
bound
mov
loop
xchg
push
xlat
jnp
stc
dec
out
xchg
mov
scas
dec
loop
fdiv
xchg
add
or
pop
xor
nop
mov
sub
rol
push
inc
mov
in
fistp
dec
sub
or
shl
jmp
or
lods
std
adc
je
xor
fs
cmc
or
dec
mov
adc
movs
mov
dec
xor
mov
jb
fiadd
imul
xor
cld
lods
call
mov
pop
pop
mov
(bad)
call
adc
push
add
iret
sbb
sbb
js
push
lock
mov
xlat
mov
sti
out
mov
retf
mov
mov
clc
mov
retf
mov
out
mov
cmps
pop
inc
mov
in
js
mov
mov
and
retf
or
and
xor
dec
add
pushf
retf
push
inc
stos
xchg
jl
(bad)
jl
outs
jb
sub
inc
add
cmp
mov
xchg
aas
xchg
ret
fadd
mov
imul
push
sub
test
test
lods
jb
mov
inc
xchg
in
ja
mov
aaa
add
mov
out
jo
mov
mov
fnstenv
xor
pop
and
ret
je
mov
mov
lea
inc
std
retf
mov
push
jecxz
mov
xchg
sub
pop
cld
xchg
hlt
(bad)
mov
jo
fisttp
sbb
clc
into
(bad)
rcr
xor
push
pop
popa
sub
mov
fld
(bad)
div
sub
dec
int
sbb
pop
aam
jae
add
aam
fcmovu
imul
xchg
pop
fcom
pop
mov
scas
rcr
enter
call
daa
mov
adc
mov
jb
movd
scas
jne
and
in
retf
data16
ins
inc
adc
rol
mov
int3
jg
repnz
jnp
neg
push
lods
or
push
lock
push
or
in
ins
cmp
cmp
repz
test
xchg
movs
fcom
add
inc
imul
daa
xchg
mov
dec
pop
mov
jmp
mov
mov
pop
pop
cmc
test
in
jge
pop
sbb
push
hlt
idiv
push
sti
leave
push
mov
cmp
or
adc
xchg
neg
mov
out
movs
(bad)
mov
xchg
pop
ja
mov
add
lods
and
stos
aam
stc
adc
cmp
xchg
sub
or
or
dec
push
imul
mov
retf
out
frstor
call
fucomi
popf
add
mov
retf
sub
inc
aas
and
adc
mov
cld
mov
clc
cmp
out
clc
cmp
out
mov
in
fsubp
mov
xchg
cmps
fisttp
cld
scas
mov
mov
jl
rol
retf
or
jbe
imul
mov
add
or
pushf
out
stos
stos
aaa
or
and
ret
xchg
sbb
mov
sub
xchg
mul
lock
mov
push
sub
movs
scas
inc
or
jmp
push
(bad)
sti
sahf
mov
sbb
sbb
iret
or
(bad)
cmp
and
add
shl
repnz
inc
in
je
sbb
mov
mov
xchg
sub
add
fcmovne
test
(bad)
cmp
inc
(bad)
cmp
nop
clc
loopne
pop
bound
jl
mov
mov
mov
dec
fisttp
adc
adc
sub
sbb
pop
xchg
ret
mov
(bad)
jo
xor
(bad)
jne
das
xchg
jo
jl
out
dec
xor
fisttp
adc
pop
push
sub
pusha
dec
adc
movs
addr16
icebp
push
jmp
xor
jno
pop
push
pop
mov
data16
mov
sub
out
push
gs
movs
xchg
cmps
retf
inc
pop
push
out
add
mov
retf
push
mov
dec
dec
inc
scas
xchg
fwait
jmp
inc
or
push
push
mov
pop
pop
push
pop
xor
sti
cli
xchg
shl
leave
dec
mov
das
mov
add
xor
stc
lea
jb
fmul
xor
jp
(bad)
or
add
mov
movs
lea
or
and
dec
xor
out
adc
fisub
sti
call
xor
inc
out
(bad)
pop
or
mov
clc
stc
pop
icebp
leave
inc
sbb
mov
add
mov
or
lods
movs
aam
dec
retf
outs
imul
in
call
clc
js
in
pop
in
lods
sbb
rcl
push
in
stc
push
loope
fwait
mov
add
test
add
popf
cmp
inc
je
xor
sbb
and
or
inc
push
(bad)
dec
cmp
adc
sahf
shl
movs
mov
pop
das
cld
or
pop
push
mov
neg
in
aas
sbb
sub
push
fwait
hlt
push
fimul
retf
lock
(bad)
aad
push
das
xchg
fistp
popf
xchg
mov
gs
in
stc
out
adc
aaa
int3
and
push
mov
pop
push
movs
pop
shr
sub
mov
cmp
jno
mov
cmps
or
jbe
out
in
mov
dec
ds
outs
pop
mov
mov
retf
dec
hlt
lahf
dec
push
lods
sti
test
rcr
je
loop
sbb
pop
int
xchg
jbe
mov
les
in
idiv
fst
sahf
xor
or
pop
shr
mov
pop
cmp
ins
jle
or
icebp
push
pop
imul
ins
push
out
push
pop
xchg
(bad)
call
(bad)
rcl
inc
(bad)
pop
pop
pop
sti
mov
fidivr
cmps
cld
xor
lods
inc
cli
xchg
jno
add
scas
cld
sub
sti
popa
inc
xchg
scas
adc
xchg
movs
ins
cld
(bad)
fistp
xchg
fwait
(bad)
cmp
mov
aaa
lock
sar
mov
(bad)
mov
jge
call
es
(bad)
pop
outs
ror
dec
lahf
dec
jl
imul
pop
mov
nop
adc
mul
gs
sbb
ja
test
xchg
fwait
mov
stc
xor
hlt
xchg
jecxz
add
leave
dec
or
jle
addr16
scas
cwde
push
retf
xor
xchg
(bad)
fdivrp
mov
ficom
fs
jl
cmp
jg
data16
dec
xchg
jo
xchg
jbe
retf
mov
out
push
xchg
fcmovnb
js
mov
fld
dec
shl
in
jbe
jge
adc
das
outs
pop
mov
jmp
sar
sahf
mov
(bad)
frstor
imul
pop
(bad)
mov
(bad)
lea
push
ins
xor
std
call
pusha
hlt
pop
mov
pop
push
xchg
or
sub
fcom
inc
inc
sub
push
sbb
sub
movs
push
adc
fld
cmp
cmp
gs
(bad)
stc
sub
inc
inc
adc
jge
mov
push
mov
cmp
outs
mov
cli
sub
loopne
jp
push
pop
scas
cs
rcl
or
fcomp
ret
sbb
fwait
scas
nop
movs
loopne
xchg
jp
fwait
lds
push
clc
ins
mov
inc
hlt
les
movs
mov
jl
sbb
imul
pop
jo
and
mov
add
aas
out
cmp
daa
xor
ds
mov
mov
push
sbb
mov
xchg
es
jl
cwde
mov
repnz
push
shl
pushf
xchg
test
stos
adc
jbe
fsubr
mov
stc
frstor
in
mov
mov
lods
loop
ficomp
test
or
inc
push
cli
mov
adc
je
test
das
fwait
sar
xchg
jno
mov
arpl
(bad)
adc
mov
cvtps2pi
test
sub
fs
push
not
dec
push
dec
or
fistp
sbb
aaa
mov
ss
xor
xor
xchg
lock
es
into
jle
in
push
xor
sbb
mov
inc
outs
jb
sub
in
xlat
dec
sub
mov
mov
dec
pushf
loope
sub
mov
mov
ins
push
(bad)
fadd
lea
pop
xchg
sub
lods
out
(bad)
in
jbe
enter
sub
jne
jl
arpl
jo
cdq
xchg
dec
push
ret
cmp
in
dec
inc
out
mov
movs
mov
das
pop
pop
aad
in
mov
les
(bad)
movs
jge
in
in
js
sbb
mov
es
push
jo
out
adc
sub
pop
ss
adc
cmp
pop
mov
jge
cmp
xchg
sbb
mov
cmp
sub
ficomp
retf
xor
shr
loopne
cmp
retf
cmp
pusha
push
sub
sbb
jae
pop
das
adc
sub
dec
xchg
mov
call
cmp
in
jl
mov
call
jl
shr
mov
shr
cld
jp
clc
jl
sub
jl
lods
clc
mov
mov
ds
cld
fwait
cmp
cmp
mov
call
mov
push
cmps
clc
jl
sbb
cmp
cmps
clc
jl
adc
mov
aaa
arpl
cld
and
cld
movs
clc
jl
inc
call
cmp
push
call
mov
lea
jmp
cmp
out
clc
jl
out
clc
cld
fucomi
loope
xlat
scas
in
(bad)
outs
loopne
shr
clc
cld
movs
push
call
cld
retf
cld
enter
push
push
pop
add
clc
jl
push
pop
or
clc
cld
retf
cld
out
clc
cmp
add
mov
retf
cld
enter
push
push
pop
add
clc
cld
add
scas
clc
cld
retf
cld
imul
call
jl
scas
clc
cld
int3
scas
clc
mov
add
pop
add
scas
clc
cld
retf
cld
imul
call
cld
retf
cld
leave
scas
clc
cmp
push
pop
ret
retf
cld
retf
cld
retf
cld
retf
cld
ret
scas
clc
cmp
in
call
cld
or
call
mov
add
push
pop
sbb
imul
clc
jl
sbb
cmp
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
leave
scas
clc
jl
sbb
cmp
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
iret
scas
clc
mov
xchg
es
cld
iret
scas
clc
cld
sbb
inc
add
pop
or
clc
cld
retf
cld
int3
scas
clc
mov
xchg
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
les
call
mov
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
lds
call
mov
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
fld
call
mov
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
fld
call
mov
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
fldcw
call
mov
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
fild
call
cmp
scas
clc
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
(bad)
call
mov
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
shr
call
mov
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
shr
call
mov
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
shr
call
mov
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
xlat
scas
clc
jl
sbb
cmp
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
jmp
sbb
cmp
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
jmp
sbb
cmp
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
jmp
sbb
cmp
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
in
scas
clc
jl
sbb
cmp
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
loop
clc
cmp
sbb
cmp
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
out
clc
cld
loope
call
mov
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
out
clc
mov
xchg
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
in
clc
cmp
sbb
cmp
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
clc
scas
clc
cld
loope
call
mov
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
jmp
call
mov
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
cld
scas
clc
mov
xchg
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
std
scas
clc
mov
xchg
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
std
scas
clc
cmp
sbb
cmp
push
call
cld
iret
scas
clc
cld
sbb
inc
add
push
pop
or
clc
cld
retf
cld
stos
pusha
mov
fisubr
loope
fidivr
dec
idiv
cmp
cs
sbb
cs
sbb
cs
sbb
add
cmps
movs
imul
scas
(bad)
scas
movs
hlt
stos
pusha
mov
fisubr
aaa
int
mov
clc
loope
iret
aaa
int
mov
mov
dec
idiv
cmp
cs
sbb
cs
fadd
push
dec
sbb
cs
adc
idiv
sbb
fidivr
jl
scas
cmp
cs
sbb
out
aad
aas
retf
fsubr
dec
sbb
shr
jns
and
cmp
dec
sbb
cs
sbb
cs
nop
sub
mov
sbb
cs
sbb
cs
pushf
push
fisttp
cs
sbb
cs
sbb
nop
outs
xchg
and
cmp
dec
sbb
cs
sbb
mov
dec
sbb
cs
sbb
scas
int
push
cs
sbb
cs
sbb
test
sbb
cs
sbb
cs
pushf
aaa
xor
adc
cs
sbb
cs
sbb
fisttp
cwde
cs
sbb
cs
sbb
cs
repz
scas
mov
rcr
sbb
cs
sbb
stos
pusha
jb
fisubr
(bad)
cld
retf
sti
mov
das
(bad)
cld
retf
fsubr
dec
sbb
cs
sbb
cs
cwde
cmp
push
adc
les
xor
dec
xchg
clc
cld
or
fsubr
dec
sbb
out
xor
(bad)
sti
rol
lock
dec
mov
ret
cmovp
or
fsubr
dec
sbb
test
les
scas
clc
mov
push
mul
cmps
push
cmps
clc
stos
xchg
xor
out
repnz
shl
mov
xchg
mov
hlt
pop
sti
imul
sar
clc
out
scas
clc
cld
shr
jns
and
cmp
dec
sbb
cs
sbb
cs
sbb
mov
dec
sbb
cs
sbb
out
rcr
mov
fisubr
fsubr
dec
sbb
cs
sbb
movs
lods
clc
mov
cs
sbb
jecxz
clc
std
retf
call
cs
sbb
cs
xor
xchg
pop
and
cmp
dec
sbb
cs
sbb
cs
sbb
xor
mov
sbb
cs
sbb
sub
cmc
pop
fistp
clc
mov
cs
sbb
test
sub
scas
hlt
cld
retf
std
retf
cld
mov
imul
outs
sbb
cs
sbb
mov
dec
sbb
cs
sbb
out
mov
cmp
pop
xchg
call
in
or
cmp
sbb
dec
sbb
cs
sbb
cs
fadd
test
ins
add
outs
sbb
cs
sbb
cs
sbb
cs
jmp
add
out
(bad)
dec
scas
cmp
cs
sbb
cs
sbb
and
cmp
idiv
cmp
cs
sbb
cs
sbb
fidivr
adc
mov
cmp
cs
sbb
cs
sbb
add
scas
and
sub
outs
xchg
les
jmp
sbb
dec
xchg
mov
(bad)
in
or
cmp
fsubr
dec
sbb
cs
sbb
outs
mov
pop
fistp
jne
or
fsubr
dec
sbb
fistp
sbb
cs
sbb
cs
mov
or
fsubr
dec
sbb
cs
or
dec
sbb
cs
sbb
cs
mov
or
fsubr
dec
sbb
fist
sbb
cs
sbb
cs
sbb
cs
xchg
mov
add
cli
add
out
hlt
int3
daa
ror
(bad)
enter
xor
lahf
sar
push
fld
lahf
adc
xchg
mov
mov
call
pop
cs
sbb
cs
adc
dec
sbb
cs
pushf
push
fist
cwde
cs
sbb
cs
sbb
cs
mov
or
fsubr
dec
sbb
cs
sbb
fist
sbb
cs
sbb
cs
sbb
shr
cld
dec
mov
ret
cmovnp
or
fsubr
dec
sbb
cs
sbb
scas
int
push
cs
sbb
cs
sbb
cs
mov
or
fsubr
dec
sbb
out
mov
and
das
loop
mov
push
xor
outs
sbb
cs
sbb
cs
sbb
test
add
cs
pushf
pop
fstp
or
jne
or
fsubr
dec
sbb
cs
pop
es
in
shr
loop
mov
sbb
xlat
or
mov
retf
fisttp
sti
fwait
std
les
cmp
cmova
or
fsubr
dec
sbb
cs
mov
fsubr
dec
sbb
push
imul
clc
hlt
mov
les
scas
clc
mov
fucomi
adc
idiv
sbb
cs
sbb
cs
sbb
ds
jb
in
sbb
scas
cmp
fild
pop
cs
sbb
cs
sbb
test
outs
mov
cs
sbb
push
dec
sbb
cs
sbb
cs
pushf
push
getsec
mov
fsubr
dec
sbb
cs
sbb
cs
sbb
cs
call
dec
sbb
cs
sbb
push
dec
sbb
scas
int
mov
sbb
cs
sbb
fild
pop
cs
sbb
cs
call
dec
sbb
cs
pop
sub
sbb
cs
sbb
scas
int
and
dec
sbb
cs
sbb
fild
pop
cs
sbb
cs
sbb
test
gs
cs
sbb
push
dec
sbb
cs
sbb
cs
pushf
push
rdtsc
mov
fsubr
dec
sbb
fbld
pop
cs
sbb
test
addr16
cs
sbb
cs
sbb
xor
or
rcr
cmp
imul
xor
mov
and
pop
cmp
rcr
add
loop
pop
pop
cs
sbb
cs
sbb
cs
pushf
and
pusha
pusha
cmp
scas
clc
mov
push
out
call
in
retf
aam
push
sbb
cs
sbb
adc
aaa
movs
mov
and
pop
ss
rcr
add
loop
pop
pop
cs
sbb
cs
sbb
cs
pushf
and
cmp
rcr
add
loop
pop
cwde
cs
sbb
cs
fsub
mov
inc
in
retf
aam
push
sbb
cs
sbb
cs
daa
movs
mov
call
ret
xor
dec
fsub
(bad)
cld
adc
(bad)
in
retf
aam
push
sbb
cs
sbb
cs
sbb
push
adc
retf
rcr
add
loop
pop
cwde
cs
sbb
cs
sbb
cs
sbb
or
les
dec
sbb
cs
sbb
cs
test
push
loopne
mov
pop
mov
ret
pop
in
les
mov
loop
mov
inc
xor
outs
sbb
cs
sbb
cs
sbb
cs
mov
retf
mov
cs
sbb
mov
scas
clc
cld
retf
fsubr
dec
sbb
cs
mov
retf
cld
cs
sbb
cs
sbb
cs
sbb
nop
outs
xchg
xchg
call
xor
outs
sbb
cs
sbb
cs
xchg
mov
std
cld
or
fsubr
dec
sbb
shl
or
jne
or
fsubr
dec
sbb
cs
pop
adc
scas
clc
cld
cs
sbb
cs
sbb
lock
and
retf
scas
clc
mov
push
sar
retf
fsubr
dec
sbb
jo
and
retf
scas
clc
mov
test
out
in
(bad)
movs
mov
sbb
cs
sbb
cs
sbb
call
dec
sbb
sub
sbb
dec
sbb
cs
mov
hlt
cwde
sar
mov
mov
cmp
scas
add
adc
call
ret
xor
scas
ret
aad
mov
add
fadd
arpl
cmp
cmp
sti
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
sub
nop
out
aad
mov
sbb
inc
loopne
into
xchg
adc
pop
sti
sbb
inc
loopne
into
inc
loopne
mov
leave
out
jmp
sbb
inc
loopne
into
sar
sbb
shr
push
add
jmp
sbb
shl
into
inc
loopne
into
inc
loopne
fld
sbb
inc
loopne
into
inc
loopne
sub
adc
shr
and
into
inc
loopne
xor
cmp
sub
or
fs
pop
pusha
sbb
inc
loopne
into
inc
loopne
into
inc
in
cmc
pop
jnp
sub
in
mov
test
push
mov
sub
cs
arpl
sbb
inc
loopne
into
inc
loopne
and
mov
sub
inc
mov
sbb
inc
loopne
jmp
js
sub
cmp
cs
ds
inc
and
into
inc
loopne
into
inc
loopne
push
pop
jmp
inc
loopne
into
inc
loopne
in
sbb
jmp
mov
add
(bad)
jmp
inc
sub
jmp
mov
or
out
push
ds
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
rol
sbb
inc
loopne
rol
sbb
inc
loopne
into
ret
jmp
aad
cmp
es
inc
mov
inc
loopne
into
inc
loopne
into
inc
loopne
xor
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
movs
mov
add
inc
loopne
into
inc
loopne
into
pop
fidivr
push
data16
arpl
sbb
ror
sub
lods
ret
les
into
inc
loopne
into
inc
loopne
ret
shl
ss
aad
pusha
sbb
inc
loopne
into
inc
loopne
into
pop
fdivrp
nop
mov
and
into
inc
loopne
into
inc
loopne
push
cdq
cld
out
aad
pusha
sbb
inc
loopne
into
inc
loopne
xor
cmp
and
into
inc
loopne
into
inc
out
mov
mov
add
inc
in
cmc
mov
mov
sub
(bad)
sub
dec
dec
daa
dec
push
inc
mov
adc
faddp
nop
jecxz
(bad)
push
cmp
(bad)
mov
xor
inc
clc
sbb
aam
nop
inc
rol
shl
cld
loopne
fwait
les
test
arpl
jb
stos
pop
out
jmp
add
pop
sti
test
pop
movs
sub
inc
scas
dec
fadd
call
lea
lock
mov
mov
(bad)
(bad)
jmp
nop
outs
repnz
stos
dec
adc
xlat
pop
hlt
push
dec
in
fadd
dec
cdq
lds
ror
aas
cmc
mov
mov
adc
push
adc
mov
dec
aas
rcl
(bad)
(bad)
test
add
sub
in
cli
add
pop
pop
add
sbb
loopne
bound
test
pop
inc
dec
fld
xchg
dec
fistp
arpl
fwait
shl
add
shr
out
sub
int3
add
sar
aad
mov
push
les
cld
adc
mov
sub
cmp
mov
add
mov
jl
jnp
mov
leave
scas
mov
outs
call
in
ins
xor
retf
scas
and
aas
xor
in
ins
xor
retf
cmps
mov
and
outs
js
mov
xor
mov
pusha
mov
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
jl
out
cmps
sti
(bad)
cmp
es
cmps
sub
shl
xor
dec
push
mov
ss
iret
cwde
add
cwde
ss
ss
or
shr
adc
dec
pop
push
das
xor
jb
icebp
add
cmp
es
cwde
ss
cwde
ss
cwde
add
push
cmp
sub
add
pop
lods
or
jl
out
cwde
ss
cwde
ss
cwde
add
inc
mov
pop
fs
xchg
adc
push
cmp
out
mov
ss
cwde
ss
cwde
call
mov
cmps
scas
retf
add
iret
cmps
ins
adc
cwde
ss
cwde
ss
adc
repz
cmp
sti
and
fs
xor
mov
mov
ss
iret
cwde
ss
pop
inc
cmp
test
jecxz
icebp
ret
es
cwde
ss
pop
les
push
mov
ss
iret
cwde
ss
sbb
sbb
add
hlt
cmps
ins
adc
cwde
ss
cwde
ss
cwde
idiv
jl
es
mov
ss
iret
cwde
ss
fmul
es
retf
add
jmp
ins
adc
iret
cwde
ss
cwde
ss
pop
retf
scas
sub
shl
or
ds
jle
add
jmp
jecxz
pop
mov
jbe
push
mov
ret
cmp
out
imul
addr16
test
aad
sub
out
fistp
ror
out
std
rcl
rol
pop
out
arpl
add
pop
bound
adc
jecxz
inc
and
inc
fcom
cmp
vmovss
stos
xchg
rcl
cmp
push
pop
mov
adc
pop
push
(bad)
jbe
icebp
push
push
jg
imul
(bad)
mov
jmp
and
in
retf
rol
mov
adc
cmp
shr
push
inc
push
jns
pushf
add
jno
mov
lea
das
lds
imul
(bad)
rcl
int
stos
dec
popa
scas
jp
jle
(bad)
out
jmp
xor
cdq
call
nop
inc
(bad)
jmp
push
push
pop
je
lds
pop
dec
cdq
add
add
add
sahf
adc
jmp
xor
jmp
ret
(bad)
aas
dec
popf
add
inc
ret
aas
les
adc
aad
cmp
les
test
out
add
(bad)
cmc
xchg
add
push
dec
and
jmp
xor
fistp
imul
pop
sub
or
pusha
cmp
shl
sub
cld
int
cmp
int
cmp
int
into
and
test
fmul
pusha
cmp
int
cmp
out
push
pop
mov
cld
int
cmp
int
cmp
int
into
loopne
pusha
cmp
int
cmp
int
mov
fmul
cmp
int
adc
hlt
pop
aaa
imul
pusha
cmp
or
(bad)
xlat
out
in
dec
push
and
(bad)
call
and
sbb
into
out
dec
push
and
(bad)
call
and
out
out
in
dec
push
and
(bad)
call
and
fistp
sub
into
cmps
repz
sub
xor
or
pusha
cmp
cmps
and
les
mov
cmp
or
mov
clc
fnop
fistp
sub
adc
xchg
pop
push
xor
scas
or
invd
and
cld
int
cmp
std
inc
cmp
or
pusha
cmp
fadd
and
add
sbb
inc
cmp
or
pusha
cmp
int
movs
mov
test
or
mov
adc
mov
cmp
or
pusha
cmp
int
cmp
cld
int
cmp
int
cmp
(bad)
jecxz
jmp
pusha
cmp
int
mov
pop
mov
and
add
sbb
les
mov
pop
cld
int
cmp
int
cmp
std
inc
cmp
or
inc
movs
and
add
sbb
inc
cmp
or
pandn
jmp
xchg
fistp
dec
scas
or
aad
or
pusha
cmp
int
cmp
int
cmp
std
inc
cmp
or
pusha
cmp
fadd
and
add
sbb
inc
cmp
or
pusha
cmp
fistp
jmp
xchg
pop
xor
and
into
and
adc
ror
pusha
cmp
int
cmp
cld
int
cmp
(bad)
jecxz
jmp
pusha
cmp
int
cmp
int
cmp
int
mov
imul
push
ds
jmp
cmc
jecxz
jmp
test
fmul
scas
and
inc
pop
sbb
iret
fistp
imul
ffreep
sub
mov
fsub
ds
jmp
cmc
jecxz
jmp
test
fmul
scas
and
les
sbb
mov
adc
xchg
pop
leave
sub
mov
pop
jp
ds
jmp
cmc
jecxz
jmp
test
fmul
dec
scas
and
add
sbb
mov
sbb
adc
xchg
pop
shr
icebp
sbb
inc
mov
pop
jb
ds
test
js
cmc
jecxz
jmp
test
fmul
dec
scas
and
add
sbb
mov
adc
xchg
fistp
sub
sbb
adc
xchg
lahf
cmp
test
inc
xor
adc
xchg
pop
cmp
test
inc
xor
adc
xchg
pop
xor
test
inc
ds
imul
fild
in
imul
(bad)
mov
pop
pop
test
sbb
mov
sbb
fistp
xor
mov
fmul
fistp
xor
mov
sbb
sbb
mov
pop
pop
test
sbb
mov
pop
pop
test
pop
xor
scas
or
ror
cld
int
cmp
std
inc
cmp
or
pusha
cmp
int
scas
(bad)
mov
(bad)
or
pusha
cmp
ror
or
pusha
cmp
int
cmp
std
inc
cmp
or
inc
movs
and
add
sbb
inc
cmp
or
pusha
cmp
sahf
popf
jnp
mov
push
or
pusha
cmp
int
cmp
int
cmp
int
xchg
mov
jecxz
jmp
jnp
cld
int
cmp
mov
mov
or
adc
lea
cld
int
cmp
int
sti
cli
call
pusha
cmp
int
into
mov
xor
sbb
xchg
lahf
jnp
jge
jmp
imul
int
jge
int
cmp
int
cmp
cld
int
cmp
inc
cmp
lea
cld
int
dec
enter
imul
dec
cmp
loope
hlt
out
mov
adc
and
inc
fdivr
jge
fld
xchg
mov
inc
xchg
js
cmp
or
pusha
cmp
movs
and
add
test
lea
cld
int
outs
mov
pusha
cmp
int
cmp
int
cmp
add
jecxz
jmp
pusha
cmp
int
cmp
rol
cld
int
cmp
aam
push
in
(bad)
jns
xchg
(bad)
cmp
or
pusha
and
sahf
ffree
lods
mov
inc
xchg
js
cmp
or
sbb
sbb
add
or
sti
sbb
pusha
cmp
int
cmp
int
mov
fmul
fiadd
repz
or
nop
in
xor
cld
or
pushf
xchg
add
or
and
call
pop
sub
dec
cmp
or
mov
add
dec
cli
sbb
aam
pusha
cmp
int
cmp
int
dec
sub
dec
cmp
or
mov
int3
add
jnp
cld
int
cmp
xor
or
pusha
cmp
int
mov
fmul
pusha
cmp
aad
mov
fmul
push
push
(bad)
xor
bswap
leave
mov
pop
ror
pusha
cmp
int
cmp
clc
cmp
lahf
adc
pusha
cmp
int
mov
fmul
pusha
cmp
int
jecxz
leave
retf
dec
and
les
xchg
aad
pop
cmp
dec
and
js
aad
mov
xchg
jecxz
test
jnp
jp
aad
mov
push
ficom
jnp
jnp
jns
aad
mov
(bad)
sub
pop
or
pushf
and
inc
mov
fmul
pusha
cmp
int
cmp
int
movs
fmul
popf
(bad)
sbb
out
sbb
test
cmp
lds
mov
sub
imul
push
outs
sbb
call
enter
xchg
lahf
push
sub
(bad)
or
jnp
dec
lock
fbld
and
dec
ficom
mov
cmp
shr
in
mov
xor
sbb
inc
loopne
into
sar
sbb
pop
out
jmp
mov
mov
(bad)
fild
mov
nop
sub
mov
(bad)
aaa
mov
mov
inc
adc
lea
(bad)
cmps
sbb
inc
fsub
nop
jecxz
loop
adc
mov
loopne
push
rcr
jecxz
cli
mov
aad
mov
aas
inc
lahf
rcl
stos
lds
inc
cmp
jno
and
enter
jne
add
les
lods
mov
sar
sub
inc
pop
in
adc
enter
nop
dec
mov
or
aam
push
sub
adc
adc
add
pop
sti
les
das
lds
pop
dec
aas
inc
and
aas
push
test
sahf
aam
inc
pop
sbb
(bad)
jmp
jo
and
test
clc
jmp
loope
adc
addr16
retf
sar
daa
adc
cmp
fnstsw
sub
pop
mov
ds
and
aad
mov
adc
dec
test
mov
cmps
frstor
ins
scas
add
je
jg
scas
ins
sbb
outs
mov
adc
ins
adc
mov
sub
adc
adc
xchg
jno
ja
test
xor
inc
sbb
adc
xor
mov
push
or
fwait
test
push
ror
retf
mov
push
xor
push
sub
add
push
xor
push
xor
xor
push
xor
sbb
xor
push
xor
push
xor
push
sbb
hlt
gs
dec
cmp
retf
test
push
xor
push
xor
push
xor
sbb
xor
push
xor
push
xor
ror
mov
push
xor
push
adc
push
adc
xor
push
xor
push
xor
dec
push
push
ins
push
xor
push
xor
push
xor
jg
out
push
xor
push
xor
xlat
ja
mov
test
cmp
or
jne
(bad)
push
cmp
retf
test
xor
call
push
xor
push
sbb
xchg
cmp
mov
test
jno
or
mov
jo
mov
adc
push
push
mov
retfw
adc
jne
and
gs
mov
in
outs
xchg
movs
push
loop
movs
jp
movs
and
outs
cmp
xor
fwait
in
(bad)
in
jg
outs
xorps
push
inc
out
mov
mov
aas
ficom
mov
test
inc
loopne
into
inc
loopne
dec
in
int3
loop
and
inc
arpl
jl
add
adc
jmp
push
xchg
mov
leave
xchg
or
push
and
sbb
pop
pop
popf
(bad)
sub
and
out
mov
sub
sbb
rcl
xchg
mov
or
fisttp
mov
mov
rcr
not
pop
pop
mov
xor
jbe
in
push
pop
shr
inc
shr
push
enter
push
mov
add
jmp
mov
stos
lea
sub
fsubr
shr
mov
loope
sbb
nop
rcl
loop
and
inc
arpl
fimul
push
sub
mov
(bad)
jmp
pusha
add
pop
in
imul
ror
xchg
mov
jg
sbb
push
inc
jnp
repz
das
add
add
fadd
add
adc
add
cdq
jmp
pusha
movs
add
neg
les
aad
iret
cld
hlt
pop
or
test
scas
cmp
cdq
add
sbb
jmp
pop
jnp
nop
dec
in
push
ins
nop
call
add
clc
adc
xlat
mov
mov
xchg
pop
jmp
dec
pop
dec
xchg
stc
xchg
loopne
lock
inc
shr
popf
mov
loope
popf
jle
sbb
push
bound
lds
clc
rcl
rol
aad
out
nop
push
jne
add
jp
add
adc
jne
push
push
jbe
adc
cmp
xchg
cmp
adc
sub
and
and
jae
pop
pop
pop
add
in
jns
and
adc
mov
sar
pop
or
or
ja
or
test
lods
enter
leave
sar
test
or
and
bound
stc
aad
mov
pushf
and
mov
or
sub
mov
sbb
inc
loopne
into
inc
out
std
xchg
inc
(bad)
sub
adc
push
ret
retf
arpl
mov
inc
or
(bad)
jmp
push
push
and
stos
or
jmp
or
rcl
cmp
push
mov
jns
dec
sbb
cmp
mov
es
mov
sahf
push
loop
ins
add
std
push
aad
fwait
(bad)
stos
ds
sub
sub
push
fwait
mov
and
add
sbb
not
stc
les
(bad)
sub
sub
inc
jmp
les
aam
cdq
add
sbb
cmp
push
les
stos
or
mov
pop
sbb
jg
icebp
jnp
iret
das
(bad)
dec
cmps
add
xor
mov
scas
jnp
sti
ret
(bad)
aas
les
lods
loop
arpl
cmp
test
out
jl
test
sub
pop
mov
(bad)
push
sbb
jecxz
sbb
inc
ret
shr
jmp
out
rcl
iret
stos
or
notrack
cdq
test
rcl
xor
les
das
push
inc
mov
pop
push
inc
push
aad
or
popf
lods
das
pop
es
movs
retf
mov
fist
mov
inc
push
pop
inc
arpl
adc
test
adc
test
push
outs
std
daa
cmps
cs
shr
and
outs
(bad)
cmps
scas
sub
leave
bnd
jnp
mov
dec
adc
cmp
out
jnp
dec
xor
jmp
es
sub
cld
repnz
mov
sbb
inc
loopne
and
(bad)
mov
test
sub
std
jmp
mov
or
pushf
jle
sub
rol
add
sahf
aad
inc
clc
out
cmp
cdq
shl
mov
jecxz
pcmpeqb
in
add
cdq
(bad)
outs
add
cmp
and
sub
inc
nop
retf
add
stos
shl
mov
push
jecxz
in
adc
(bad)
jmp
mov
(bad)
inc
cli
mov
lods
cmp
(bad)
stc
ret
(bad)
jg
je
dec
aad
(bad)
(bad)
sub
sub
stos
lea
push
pushf
lock
inc
ds
pop
mov
add
add
xor
ret
jns
mov
fwait
div
add
ret
cli
mov
rcl
aam
(bad)
add
stc
push
push
or
sub
out
mov
push
repnz
adc
test
sti
(bad)
rol
cmc
aas
dec
cdq
add
adc
int
sbb
fucomp
int3
sub
mov
(bad)
jmp
jp
cmc
or
cmp
sbb
nop
arpl
in
rcl
mov
adc
movs
fist
iret
inc
cmp
(bad)
fdiv
inc
test
adc
adc
inc
pop
sub
pop
repz
xchg
xor
repz
outs
push
mov
into
xchg
loop
mov
pop
fnsave
mov
fsubr
sub
call
mov
nop
sub
nop
sub
jmp
mov
dec
fimul
dec
sbb
mov
pop
fnsave
mov
cli
cmp
sbb
sbb
sub
push
call
push
push
out
sub
retf
fnstcw
sub
push
xor
mov
adc
sub
xor
lods
in
cs
mov
add
dec
add
scas
adc
push
or
add
inc
and
into
inc
loopne
into
inc
loopne
into
sar
pop
jbe
test
cwde
and
sub
test
inc
loopne
into
inc
loopne
xor
(bad)
loopne
mov
(bad)
(bad)
sub
imul
mov
daa
jecxz
arpl
lahf
jle
add
adc
add
and
jo
stc
nop
mov
rol
inc
retf
fld
sub
or
dec
jp
xchg
xchg
jle
push
ins
mov
pop
mov
adc
mov
(bad)
imul
call
fsubr
mov
imul
jmp
aas
adc
stos
or
mov
add
int
xor
fmul
aas
test
(bad)
pop
xlat
add
(bad)
clc
xor
aam
test
test
jmp
xor
aad
aas
sahf
push
jecxz
push
add
cwde
dec
aad
(bad)
push
sbb
int
cmps
and
inc
out
push
(bad)
pop
ror
push
test
pop
jnp
les
aad
cld
pop
sbb
ss
mov
in
dec
mov
add
les
or
push
(bad)
aas
cli
add
pop
jnp
add
shl
sub
sbb
adc
(bad)
sub
pop
sti
(bad)
imul
out
jmp
sub
jle
aad
jnp
jmp
mov
push
inc
clc
cwde
mov
sti
push
push
inc
push
inc
xchg
(bad)
retf
(bad)
jb
push
mov
cmp
pop
jns
adc
inc
aas
dec
ret
push
ficomp
cmps
or
test
or
sahf
jl
rcr
shr
xchg
not
ds
xor
cli
inc
repnz
inc
jb
mulps
ds
inc
repnz
push
inc
nop
mov
push
fiadd
push
ficomp
mov
imul
cli
add
ds
inc
repnz
inc
imul
loope
repnz
inc
repnz
inc
lods
call
pop
test
ss
sub
popa
arpl
ds
inc
repnz
inc
or
jge
int
loope
ret
mov
repnz
inc
bnd
aaa
ss
sub
loope
add
mov
xchg
rcr
sub
sahf
cmp
movs
fisttp
repnz
inc
repnz
inc
xor
in
push
sbb
mov
data16
inc
repnz
inc
bnd
data16
sahf
mov
fwait
retf
fiadd
ds
inc
repnz
inc
bnd
pop
and
cli
inc
or
add
push
ficomp
cmp
ficomp
cmps
or
add
or
popa
cmp
movs
(bad)
repnz
inc
repnz
add
mov
cdq
jmp
ds
push
push
jns
not
mov
xchg
(bad)
cdq
push
stos
push
xor
not
pop
lods
or
pop
push
adc
not
pusha
sbb
retf
pop
add
into
fld
fdiv
stos
(bad)
daa
dec
mov
and
imul
repz
sbb
test
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
dec
fcmovbe
into
sub
aas
ficom
mov
(bad)
sub
cmp
cmp
mov
sbb
inc
loopne
and
fisttp
int3
jmp
les
or
in
mov
cmps
inc
inc
dec
xchg
clc
jmp
inc
and
cli
les
mov
sbb
add
inc
add
pop
cs
in
das
not
push
(bad)
pop
std
inc
jp
adc
jmp
mov
sbb
ret
ds
stos
dec
cmp
push
jb
inc
push
jle
out
ss
lods
(bad)
sub
ins
add
push
or
pop
or
(bad)
in
jmp
jp
adc
mov
arpl
mov
nop
mov
retf
add
(bad)
fld
sbb
jmp
cdq
in
sub
xor
mov
mov
adc
jnp
jmp
and
pop
(bad)
xor
pop
mov
jle
and
adc
pop
(bad)
cmp
add
inc
xor
inc
test
pop
jnp
add
(bad)
(bad)
stos
lea
aam
pop
dec
cmps
loop
and
pop
cmp
pop
cdq
or
aad
aad
std
pop
jnp
push
push
add
or
jle
les
pop
cmp
or
fs
xor
mov
sub
or
loop
aad
out
scas
mov
out
not
push
aad
rcl
into
push
div
xchg
div
iret
(bad)
hlt
mov
push
repz
(bad)
out
movs
inc
inc
mov
mov
scas
loopne
(bad)
out
in
aad
outs
out
push
retf
xchg
iret
outs
jmp
scas
jmp
int
in
push
retf
push
retf
xchg
int3
out
out
aad
scas
jmp
int
in
push
retf
push
(bad)
out
aad
scas
mov
push
div
into
xchg
repnz
(bad)
hlt
mov
push
hlt
aaa
iret
(bad)
out
not
out
ins
adc
(bad)
ja
push
cmc
aaa
stos
adc
jp
push
or
xor
or
xor
or
xor
or
xor
or
jmp
xor
stos
retf
adc
sub
or
xor
adc
xor
adc
mov
lahf
aad
das
in
aad
out
mov
not
or
jmp
and
adc
xor
in
aad
out
mov
not
or
jmp
(bad)
aaa
stos
adc
jp
push
dec
adc
xor
adc
sub
test
fbstp
aad
repnz
stos
mov
aas
retf
(bad)
outs
aad
xor
adc
xor
adc
xor
pop
fcmovbe
scas
aaa
xor
retf
adc
xor
adc
xor
pop
iret
cdq
int3
(bad)
and
test
das
adc
xor
adc
xor
xchg
adc
jmp
adc
xor
adc
xor
adc
cmps
push
add
aad
out
adc
xor
adc
xor
adc
cmps
push
push
sub
shl
xor
or
xor
or
jmp
adc
xor
adc
xor
xchg
hlt
sub
add
sub
adc
xor
adc
(bad)
das
xchg
hlt
and
adc
xor
adc
xor
xchg
and
or
xor
adc
xor
xchg
hlt
es
or
add
xor
pop
mov
adc
xor
adc
xor
ror
sub
not
(bad)
das
adc
xor
adc
das
ins
adc
(bad)
ja
push
cmc
aaa
stos
adc
jp
push
or
xor
or
xor
or
xor
mov
xor
or
xor
or
jno
das
in
inc
(bad)
out
test
int3
out
in
push
int3
outs
mov
sub
xor
pop
mov
adc
xor
adc
xor
jmp
mov
xor
or
xor
or
xor
adc
cmc
or
out
not
(bad)
out
xlat
in
aaa
dec
xlat
(bad)
not
(bad)
scas
aaa
cmc
out
xchg
mov
fcmovnbe
adc
push
mov
xchg
call
xchg
jl
out
ins
out
or
sub
das
push
ja
ror
faddp
es
inc
loopne
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
dec
fcmovbe
into
sub
add
sub
add
sub
add
sub
add
inc
inc
(bad)
jmp
add
pushf
inc
into
inc
loopne
into
inc
loopne
into
inc
loopne
pop
mov
and
into
inc
loopne
into
inc
in
mov
inc
in
mov
sbb
cmp
sbb
inc
loopne
into
inc
loopne
into
inc
dec
cmp
sahf
xor
jg
add
adc
and
jmp
(bad)
out
mov
push
int3
pushf
mov
push
push
test
js
fdiv
push
push
sar
push
add
jno
lea
imul
mov
out
jmp
stc
inc
enter
mov
add
add
mov
(bad)
pop
or
or
sub
ds
sub
inc
ds
cdq
add
add
pop
enter
test
aad
ficom
jmp
cdq
add
sub
lahf
les
push
pop
mov
mov
push
and
pop
int3
(bad)
sub
adc
test
inc
pop
xor
aad
mov
push
test
stos
and
mov
jmp
cmps
mov
mov
les
jb
pop
cmps
popf
jp
int
cmc
aas
inc
ins
adc
jg
jae
dec
aad
jmp
enter
inc
pop
lea
int
sbb
cmp
stos
int3
clc
loope
arpl
test
pop
jnp
cmps
(bad)
jmp
pop
jnp
ficomp
adc
dec
loop
(bad)
fsubp
(bad)
sbb
bound
sub
rol
(bad)
ficomp
lahf
fiadd
xchg
scas
inc
xchg
push
inc
pop
xchg
faddp
jecxz
cmp
jecxz
cmp
push
fild
mov
loopne
jb
loopne
jne
idiv
jmp
cmp
jecxz
cmp
jecxz
cmp
xchg
outs
mov
les
vpaddusb
ret
dec
sbb
mov
popf
sbb
int
sahf
dec
push
push
sbb
int3
vpaddusb
ret
dec
add
dec
inc
inc
pop
(bad)
inc
sbb
lds
adc
add
mov
adc
vmovsd
fld
lds
xlat
or
(bad)
mov
(bad)
ror
retf
test
mov
int
mov
push
push
pop
pushf
dec
inc
aam
dec
iret
fimul
pop
push
lahf
(bad)
(bad)
mov
(bad)
lds
inc
dec
add
dec
add
fwait
dec
add
fmul
pop
fstp
fimul
sbb
add
fcom
vpaddusb
push
or
inc
add
sahf
or
pop
(bad)
inc
sbb
iret
(bad)
fst
iret
les
mov
test
push
mov
fstp
or
pop
fisttp
add
dec
add
dec
inc
dec
push
or
pop
(bad)
add
sbb
xchg
dec
push
test
pop
fisttp
xchg
sbb
adc
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fiadd
xchg
fs
inc
xchg
push
loopne
mov
loopne
jb
dec
(bad)
rcl
cdq
adc
push
loopne
mov
loopne
jle
sbb
push
cmp
jecxz
cmp
jecxz
cmp
jecxz
les
xchg
push
jnp
xchg
loop
(bad)
jmp
push
loopne
mov
loopne
jb
loopne
jb
jle
push
faddp
jecxz
cmp
jecxz
cmp
addr16
stos
sbb
push
sahf
sbb
mov
cmp
jecxz
cmp
jecxz
cmp
inc
fiadd
not
jo
(bad)
faddp
inc
mov
add
push
xchg
lds
iret
les
test
xchg
fcmovnu
add
out
jo
(bad)
sahf
add
xchg
push
loopne
mov
loopne
jb
loopne
jb
push
pop
dec
fimul
pop
xchg
les
xchg
pop
push
(bad)
test
push
loopne
mov
loopne
jle
sbb
push
cmp
jecxz
cmp
jecxz
cmp
jecxz
ss
inc
push
loopne
mov
loopne
dec
fiadd
dec
iret
les
inc
mov
push
cmp
jecxz
cmp
js
jns
push
push
cmp
jecxz
cmp
jecxz
cmp
scas
dec
(bad)
adc
jecxz
cmp
jecxz
pop
xchg
daa
(bad)
fimul
xchg
push
loopne
mov
loopne
jne
xchg
daa
(bad)
(bad)
js
add
push
mov
(bad)
loopne
jb
pusha
addr16
cmps
sbb
push
fiadd
pop
xchg
ret
pop
inc
and
push
mov
(bad)
loopne
jb
loopne
jb
loopne
fs
jecxz
cmp
jecxz
cmp
jecxz
cmp
jecxz
andnps
ss
pop
xlat
jle
inc
mov
fs
popa
rcl
dec
iret
inc
fs
dec
and
push
or
mov
adc
mov
push
loopne
mov
loopne
jb
loopne
jbe
inc
call
les
dec
mov
push
cmp
jecxz
cmp
jecxz
cmp
addr16
stos
sbb
push
push
inc
cmps
sti
fiadd
int3
pop
sahf
(bad)
test
push
loopne
mov
loopne
jle
and
push
cmp
jecxz
cmp
jecxz
scas
test
xchg
faddp
jecxz
cmp
jecxz
cmp
jecxz
cmp
push
dec
and
push
or
mov
adc
mov
push
loopne
mov
loopne
jb
loopne
dec
push
lock
test
push
push
cmp
jecxz
cmp
jecxz
cmp
jecxz
mov
(bad)
loopne
jb
repnz
loopne
jb
mov
adc
sbb
push
loopne
mov
loopne
jb
dec
mov
pop
loopne
xor
loopne
pop
(bad)
les
add
xchg
cmp
jecxz
cmp
jecxz
movs
xchg
inc
push
fs
add
mov
add
push
mov
add
xchg
inc
call
(bad)
out
push
inc
out
fiadd
mov
pop
push
dec
add
out
fiadd
mov
push
push
dec
add
out
fiadd
mov
fistp
(bad)
fstp
push
xlat
sbb
(bad)
fstp
xchg
push
push
inc
retf
mov
xlat
adc
iret
fstp
push
adc
push
jbe
adc
adc
pop
xchg
mov
(bad)
loopne
jb
loopne
jb
mov
xchg
test
js
or
jecxz
cmp
jecxz
cmp
jecxz
dec
push
pop
and
jecxz
cmp
jecxz
cmp
jecxz
enter
dec
mov
push
cmp
jecxz
cmp
jne
xchg
daa
(bad)
(bad)
js
add
push
mov
(bad)
loopne
jb
cmp
push
jg
clc
jmp
(bad)
adc
mov
push
loopne
mov
loopne
jb
loopne
jb
fs
pop
(bad)
fucom
aaa
push
faddp
addr16
scas
sbb
push
sahf
fxch
jmp
push
and
lahf
and
bound
inc
daa
xchg
xchg
inc
xchg
push
addr16
mov
into
inc
daa
xchg
pop
xabort
and
arpl
inc
daa
xchg
pop
push
push
mov
scas
sbb
push
sahf
sbb
sub
lea
(bad)
sahf
and
lahf
cli
add
(bad)
mov
lea
(bad)
sahf
and
lahf
push
add
xchg
mov
mov
(bad)
sahf
and
lahf
xchg
add
push
mov
mov
(bad)
sahf
and
lahf
mov
push
mov
addr16
mov
loop
(bad)
jmp
push
loopne
mov
loopne
jb
loopne
jb
jne
rcl
(bad)
fiadd
mov
loopne
jb
loopne
jb
jle
imul
loopne
jb
loopne
push
add
push
shr
pop
(bad)
push
xchg
lods
daa
cmp
push
cmp
jecxz
cmp
jecxz
cmp
scas
dec
(bad)
adc
jecxz
cmp
jecxz
iret
xor
(bad)
faddp
jecxz
cmp
jecxz
cmp
js
dec
cmp
(bad)
mov
xor
(bad)
faddp
jecxz
cmp
jecxz
cmp
jecxz
cmp
js
inc
cmp
(bad)
mov
addr16
mov
loop
(bad)
jmp
push
loopne
mov
loopne
jb
loopne
jb
jne
in
inc
push
fiadd
mov
loopne
jb
loopne
jb
push
(bad)
imul
loopne
mov
loopne
jb
loopne
jle
cmp
(bad)
cmp
jecxz
cmp
jecxz
cmp
jecxz
dec
pop
(bad)
test
push
loopne
mov
loopne
jb
ins
lahf
push
(bad)
loopne
jb
loopne
pusha
cmp
jecxz
cmp
jecxz
cmp
jecxz
mov
std
xchg
fiadd
ds
fiadd
ds
call
loopne
mov
loopne
jb
in
pop
and
out
in
add
xchg
add
test
mov
loopne
jb
dec
(bad)
pop
loop
inc
or
fs
pop
push
inc
ror
cmp
push
inc
(bad)
fst
pop
push
ficomp
lods
out
add
push
lea
inc
push
loopne
mov
loopne
jb
loopne
jb
data16
xor
loopne
jb
loopne
jb
loopne
addr16
xor
(bad)
faddp
jecxz
cmp
jecxz
cmp
jecxz
mov
les
jne
mov
cmp
jecxz
cmp
jecxz
cmp
js
inc
cmp
(bad)
mov
addr16
loop
jnp
xchg
loop
(bad)
jmp
push
loopne
mov
loopne
jb
jnp
pop
loop
(bad)
ss
stc
mov
lock
push
cmp
push
inc
(bad)
jne
bnd
push
cmp
push
inc
clc
jne
icebp
js
push
cmp
push
inc
(bad)
cmc
iret
mov
(bad)
mov
leave
inc
push
les
xor
jecxz
cmp
mov
repnz
jecxz
cmp
jecxz
cmp
arpl
stc
jmp
cmp
jecxz
cmp
jecxz
cmp
and
mov
xlat
dec
cmp
(bad)
fiadd
xchg
cmp
jecxz
cmp
jbe
mov
push
push
fiadd
(bad)
cmp
jecxz
cmp
jecxz
cmp
jecxz
in
repnz
cmp
jecxz
jp
(bad)
imul
loopne
mov
loopne
jb
mov
cmp
sahf
add
xchg
push
loopne
mov
loopne
jb
loopne
jb
in
jb
into
(bad)
loopne
jb
loopne
push
sub
js
sub
jb
into
les
push
cmp
push
inc
repz
and
lahf
and
adc
cmp
sahf
and
lahf
sbb
clc
imul
and
lahf
mov
adc
push
mov
and
clc
imul
loopne
mov
loopne
jb
loopne
jb
fs
(bad)
jmp
mov
pop
push
fiadd
xchg
cmp
jecxz
cmp
jbe
mov
pop
push
fiadd
xchg
cmp
jecxz
cmp
inc
push
les
das
mov
push
cmp
jecxz
cmp
jecxz
cmp
popf
push
(bad)
adc
ret
adc
jecxz
cmp
jecxz
cmp
jecxz
loopne
call
add
mov
xchg
pop
push
add
mov
(bad)
loopne
jb
and
dec
push
jnp
mov
adc
jecxz
cmp
push
ret
ret
addr16
test
pop
push
sahf
fld
mov
sar
sub
push
push
cmp
jecxz
cmp
daa
xchg
jnp
mov
adc
jecxz
cmp
push
inc
ret
addr16
test
pop
push
sahf
pop
or
js
sub
push
push
cmp
jecxz
cmp
jecxz
les
test
push
loopne
mov
loopne
jb
loopne
jb
and
push
add
addr16
test
pop
push
sahf
cdq
or
cmp
pop
xchg
mov
(bad)
loopne
jb
loopne
jb
mov
sbb
movs
push
adc
jecxz
cmp
jecxz
cmp
loop
pop
(bad)
popf
in
push
fiadd
adc
push
push
cmp
jecxz
cmp
scas
dec
(bad)
adc
jecxz
cmp
inc
(bad)
adc
(bad)
repnz
jecxz
cmp
arpl
xchg
daa
(bad)
(bad)
js
add
push
mov
(bad)
loopne
jb
loopne
jb
test
jbe
add
xchg
faddp
jecxz
cmp
jecxz
cmp
jecxz
cmp
js
fadd
push
cmp
jecxz
cmp
jecxz
cmp
jecxz
mov
inc
fs
loopne
push
xchg
bound
push
scas
test
jbe
inc
pop
xchg
faddp
jecxz
cmp
jecxz
cmp
mov
test
shr
push
jnp
mov
cmp
jecxz
cmp
push
ret
out
fld
and
push
sahf
sbb
into
mov
test
adc
mov
push
cmp
jecxz
cmp
jecxz
cmp
xchg
dec
(bad)
js
push
mov
push
cmp
jecxz
cmp
jecxz
cmp
jecxz
enter
dec
mov
push
cmp
jecxz
cmp
imul
ret
adc
jecxz
cli
pop
or
xchg
mov
(bad)
loopne
jb
loopne
jb
cmp
dec
sbb
loop
pop
(bad)
add
adc
jnp
movs
push
adc
jecxz
cmp
and
push
(bad)
(bad)
les
cmp
loopne
jb
loopne
push
adc
(bad)
fiadd
les
sub
test
cmp
jecxz
cmp
jecxz
cli
pop
or
add
call
mov
push
loopne
mov
loopne
jb
loopne
jbe
add
popf
mov
test
pop
pop
push
ret
neg
(bad)
loopne
jb
loopne
jb
xchg
cmps
push
adc
jecxz
jp
pop
dec
shl
push
les
pop
iret
(bad)
loopne
jb
loopne
jb
loopne
push
adc
(bad)
pop
inc
ficom
sbb
mov
push
loopne
mov
loopne
jb
loopne
jb
mov
cmp
fiadd
les
sub
cmc
mov
push
loopne
mov
loopne
jb
push
pop
dec
int
push
(bad)
les
pop
iret
(bad)
loopne
jb
loopne
jb
cmp
dec
adc
loop
xchg
add
ret
adc
jecxz
cmp
jecxz
sbb
loop
pop
(bad)
add
cmps
push
adc
jecxz
cmp
jecxz
adc
(bad)
faddp
inc
mov
add
xchg
mov
(bad)
loopne
jb
loopne
jb
loopne
push
fiadd
hlt
push
stc
jmp
cmp
mov
mov
test
cmps
push
adc
jecxz
cmp
jecxz
cmp
jecxz
loopne
add
add
les
mov
sar
mov
push
cmp
jecxz
cmp
daa
push
fiadd
int3
ficomp
sbb
cmps
push
adc
jecxz
cmp
push
frstor
gs
cli
clc
test
cmp
daa
xchg
pop
and
jecxz
cmp
jecxz
cmp
jecxz
(bad)
cmp
dec
inc
push
pop
int3
cli
and
(bad)
les
sub
hlt
mov
push
loopne
mov
loopne
jbe
les
in
pop
xchg
les
mov
sar
mov
push
cmp
jecxz
cmp
jecxz
cmp
daa
push
fiadd
mov
pop
sub
or
cmps
push
adc
jecxz
cmp
jecxz
cmp
push
frstor
gs
cli
clc
test
cmp
jae
cli
clc
imul
test
mov
sti
js
sub
push
push
cmp
jecxz
cmp
jecxz
cmp
dec
fs
cmp
add
dec
push
(bad)
jmp
and
addr16
adc
jecxz
cmp
and
push
(bad)
(bad)
les
cmp
loopne
jb
loopne
jb
cmp
dec
pop
push
xchg
add
mov
(bad)
loopne
jb
lds
faddp
jecxz
cmp
jecxz
cmp
jecxz
fs
xchg
inc
mov
inc
call
loopne
mov
loopne
pop
fcomip
cmp
push
and
xchg
add
cmp
mov
loopne
jb
loopne
jb
jle
je
or
pop
push
faddp
daa
cmps
lahf
fdivr
xchg
fiadd
mov
int
xchg
dec
sbb
(bad)
cmp
dec
push
popa
sbb
xchg
xchg
(bad)
iret
inc
dec
xchg
pop
sbb
(bad)
and
cld
test
iret
add
sahf
add
mov
add
jmp
sbb
inc
loopne
dec
cdq
sti
add
push
data16
arpl
sbb
ror
sub
adc
rol
xor
cmp
(bad)
(bad)
push
or
pop
cwde
test
or
(bad)
(bad)
jmp
rcr
movs
stc
inc
inc
inc
adc
or
in
addr16
xchg
add
sar
sub
(bad)
xchg
mov
jo
push
mov
nop
imul
mov
mov
mov
push
cdq
cmc
(bad)
sub
(bad)
jmp
jg
xor
shr
(bad)
mov
cli
mov
int
sti
les
cld
(bad)
sub
push
fdivrp
cli
adc
mov
sub
jmp
jle
pop
push
xor
in
inc
hlt
pop
movs
sub
les
mov
add
add
mov
mov
mov
adc
bound
pop
sbb
jae
push
and
adc
out
lahf
inc
mov
pop
adc
dec
cmp
aad
jmp
pop
aam
xchg
xor
call
dec
cdq
lds
test
ret
push
pop
pop
add
pop
cmc
jg
xchg
adc
jle
push
adc
sbb
sub
pop
jnp
nop
dec
in
stos
lea
cmp
mov
mov
mov
enter
and
out
stos
inc
add
or
and
in
add
add
in
add
in
lods
add
add
and
xor
adc
push
adc
hlt
add
xor
xor
pop
shl
mov
push
adc
sbb
sar
push
xchg
test
dec
lea
cs
rcr
ds
push
stos
cld
pop
mov
imul
mov
add
or
vpsrld
ds
inc
and
into
inc
in
mov
ds
cli
jmp
sub
fs
xchg
pop
and
sub
jle
jo
cmp
inc
jg
test
sbb
inc
pop
(bad)
sub
add
fst
cmp
push
add
stc
ret
push
stos
std
or
push
cwde
push
in
and
movs
xchg
retf
pop
cmp
ret
(bad)
jg
(bad)
cmp
xchg
int3
xor
cmp
(bad)
adc
mov
(bad)
sub
movs
cmp
mov
and
stos
dec
cmp
in
popf
sub
aad
sti
inc
or
sbb
das
arpl
jb
or
ds
mov
in
aam
sub
cld
sti
nop
retf
rol
push
push
shr
in
add
pop
jle
test
sahf
aam
inc
and
mov
mov
mov
cmp
xchg
(bad)
shl
pop
ds
push
dec
fs
jmp
jp
xor
sar
les
call
dec
mov
sar
aad
fnstsw
popf
dec
aas
add
mov
sbb
add
pop
in
push
jle
dec
xchg
movs
add
xchg
cmp
add
aas
adc
les
pop
and
jmp
addr16
pop
cmp
push
pusha
fs
jmp
sbb
pop
jle
clc
pop
mov
xor
test
push
inc
clc
or
dec
jns
cmp
cmps
les
arpl
push
mov
or
mov
jl
cmps
add
test
cmp
cmps
inc
mov
imul
cwde
push
inc
rcl
mov
imul
clc
aam
pushf
or
sbb
cwde
jne
test
mov
fdivr
cwde
jne
sub
inc
scas
fist
jne
test
cmp
adc
jne
sub
push
inc
pusha
cmp
sub
nop
pusha
push
outs
mov
fsub
lds
mov
inc
mov
test
pusha
cmp
cmps
inc
mov
mov
inc
mov
imul
mov
das
mov
push
imul
cwde
push
inc
rcl
mov
popa
fidivr
or
sbb
cwde
jne
test
mov
fdivr
cwde
jne
sub
inc
scas
fist
jne
test
cmp
adc
jne
sub
push
inc
pusha
cmp
sub
nop
pusha
push
outs
mov
fsub
lds
mov
inc
mov
icebp
xor
xchg
cmps
inc
cmp
cmps
inc
mov
shl
popa
adc
mov
inc
mov
mov
rcl
add
xor
mov
or
mov
mov
fs
inc
mov
or
rcr
mov
xchg
cmp
push
imul
pop
push
add
mov
push
loopne
push
dec
sub
push
add
mov
push
loopne
push
or
pop
push
add
mov
push
loopne
push
or
pop
push
add
mov
jae
pop
js
or
push
pusha
jmp
push
add
inc
mov
aas
add
inc
mov
das
rcl
fstp
pop
xchg
cmps
inc
cld
mov
les
xor
and
data16
push
imul
push
fnstcw
cwde
push
and
fnstenv
inc
popa
addr16
retf
adc
inc
mov
cmps
cwde
retf
adc
inc
mov
cmps
cwde
leave
pushf
or
inc
mov
cmps
cwde
leave
pushf
or
inc
mov
xchg
outs
loopne
ins
inc
lea
into
pushf
dec
xchg
xor
fdiv
out
mov
add
inc
mov
fstp
pop
xchg
cmps
inc
jl
cmps
inc
mov
xchg
add
js
es
test
clc
push
dec
push
dec
mov
push
loopne
push
retf
push
add
mov
push
loopne
push
dec
jmp
push
add
mov
push
loopne
push
retf
push
add
mov
retf
adc
inc
mov
cmps
cwde
retf
adc
inc
mov
cmps
cwde
leave
pushf
or
inc
mov
cmps
cwde
leave
pushf
or
inc
mov
adc
ins
pop
imul
or
cmps
inc
mov
jno
mov
sbb
pop
adc
loopne
xchg
dec
test
adc
push
mov
out
stos
test
add
xor
cli
sub
add
sub
add
push
es
add
add
cmp
sbb
(bad)
and
sbb
ss
(bad)
and
pop
(bad)
and
mov
mov
pop
(bad)
and
sbb
and
sbb
and
sbb
mov
sub
add
cmp
mov
push
jle
mov
sbb
aaa
jecxz
mov
cmp
cmp
xor
sbb
xor
mov
aaa
jecxz
jle
mov
sbb
mov
mov
sbb
xor
sbb
mov
xor
sbb
ds
lods
or
cmp
push
shr
add
adc
sub
adc
jmpw
push
mov
cmp
add
adc
ds
daa
movs
mov
jecxz
cli
dec
mov
mov
popa
cmps
or
pop
or
fnsave
dec
mov
and
rcl
sub
push
ret
cmps
jmp
mov
sbb
push
mov
leave
jmp
retf
sar
sub
lds
add
mov
and
pop
mov
sbb
shl
arpl
sbb
inc
loopne
into
inc
loopne
dec
and
aad
mov
sbb
inc
loopne
xor
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
gs
out
sub
sbb
arpl
cmp
cs
ds
inc
and
into
pop
fdivrp
nop
ret
aad
and
into
inc
loopne
into
inc
loopne
push
cdq
(bad)
cld
aad
mov
sbb
inc
loopne
dec
sub
fdivr
jecxz
mov
sub
push
sub
ror
arpl
sbb
inc
loopne
into
inc
loopne
adc
fldenv
dec
in
push
ret
test
mov
inc
sub
inc
mov
sbb
rol
xchg
or
test
sub
loopne
into
inc
loopne
push
sbb
pmullw
into
inc
loopne
into
pop
fdivrp
nop
jecxz
add
inc
and
into
inc
loopne
into
inc
loopne
push
cdq
fdivrp
aad
mov
sbb
inc
loopne
xor
cmp
and
into
inc
loopne
std
jne
xchg
jmp
(bad)
jmp
mov
lahf
push
mov
call
cli
push
add
sub
sahf
gs
out
push
sbb
dec
fcmovbe
into
cs
(bad)
sub
inc
mov
sub
loopne
dec
sbb
(bad)
sub
adc
dec
fcmovbe
into
cs
into
sub
inc
mov
sub
loopne
into
inc
loopne
into
inc
loopne
or
xchg
test
jmp
push
nop
cmp
sub
ror
cs
fisubr
mov
fnstcw
std
jne
xchg
jg
sub
repnz
aad
cld
sar
std
cmp
aaa
and
ds
data16
jae
arpl
sbb
inc
loopne
into
inc
enter
xchg
in
or
mov
add
sub
test
sub
(bad)
mov
add
push
data16
arpl
sbb
inc
loopne
into
pop
shr
dec
fcmovbe
into
arpl
sbb
inc
loopne
into
inc
loopne
enter
dec
and
aad
mov
sbb
inc
loopne
xor
shl
daa
mov
imul
mov
and
jmp
sbb
inc
loopne
call
sbb
inc
loopne
mov
(bad)
std
dec
inc
(bad)
sub
pusha
sbb
inc
loopne
dec
in
(bad)
cmp
cmp
mov
and
arpl
rol
pop
lds
mov
les
scas
fiadd
dec
pop
jmp
enter
in
dec
iret
jno
xchg
or
test
(bad)
jmp
(bad)
sub
data16
out
stos
int
(bad)
lahf
pop
jle
les
aad
lds
mov
add
jo
sub
fsubr
mov
jmp
(bad)
push
sbb
sub
gs
cli
sti
sahf
adc
jmp
mov
add
add
push
jnp
inc
mov
arpl
sti
add
adc
inc
jb
inc
in
cmc
aas
dec
cdq
add
(bad)
sub
sub
sub
(bad)
aas
add
add
jmp
outs
jnp
ds
add
test
aam
test
or
scas
test
pop
or
push
xor
mov
push
ins
sub
fistp
sahf
adc
(bad)
popf
(bad)
pop
jnp
add
mov
xor
jnp
test
adc
add
sbb
mov
pop
jnp
adc
add
sbb
push
out
enter
pop
add
loope
push
(bad)
das
push
imul
std
and
rol
dec
iret
adc
xor
jns
imul
jae
mov
ins
mov
jb
ds
xor
jl
jbe
mov
sub
cs
std
jno
mov
cs
clc
xor
outs
mov
scas
(bad)
mov
xor
aas
jge
ins
cmp
xor
mov
popa
arpl
sti
ss
jge
jae
lods
cmp
sub
out
jbe
std
aas
mov
mov
xor
jge
jae
in
mov
jbe
cld
cmp
lods
in
mov
repnz
mov
jp
push
std
jg
test
mov
mov
jae
aaa
jge
jl
cmp
cmp
ja
mov
scas
repnz
cld
jmp
(bad)
sti
ss
aas
jge
ins
cmp
mov
(bad)
mov
xor
jp
ins
cld
cld
icebp
ins
ins
jle
sub
cmp
in
sub
repz
in
mov
bound
xor
mov
ds
clc
mov
sub
cmp
push
mov
jg
test
mov
xor
jle
mov
idiv
in
mov
mov
ja
mov
aas
mov
in
jle
sub
outs
stc
jle
scas
ds
jmp
jns
(bad)
out
mov
cmp
popa
mov
std
js
ins
mov
jg
std
jl
ss
aas
cmp
clc
mov
xor
(bad)
jg
sub
cmp
sub
jbe
clc
mov
imul
std
mov
mov
outs
mov
cmp
clc
cld
jbe
cmp
aas
das
cmp
xor
cmp
jge
mov
hlt
jmp
stc
ds
mov
jmp
(bad)
mov
xor
mov
cmp
sub
ds
sub
cmp
xor
js
sub
mov
aas
repnz
icebp
cld
jbe
clc
jg
cmp
clc
(bad)
jbe
lods
cmp
sub
outs
jae
clc
mov
and
mov
xor
mov
mov
mov
mov
jle
lods
mov
mov
bound
jge
mov
jge
mov
xor
std
js
cmps
cmc
aaa
and
(bad)
cmp
xor
mov
ja
in
hlt
mov
jl
ja
cld
jle
out
ds
mov
ins
mov
ja
mov
mov
icebp
cs
xor
out
mov
mov
jns
ja
clc
cmp
sub
std
mov
cmp
jae
mov
cs
mov
cmp
ins
mov
outs
imul
lods
cmp
in
jle
sub
cmp
and
cmp
cmp
outs
mov
jp
sub
jg
test
(bad)
push
test
js
sub
mov
mov
mov
ins
mov
ja
mov
jnp
sub
aas
mov
mov
mov
jb
cmp
stc
cs
jmp
lods
push
clc
jg
lods
ds
in
mov
cmp
imul
sub
jp
outs
mov
jp
ins
(bad)
jge
call
(bad)
(bad)
ja
sub
cs
cmp
jg
lods
xor
sub
xor
std
xor
cmp
imul
cmp
cs
cld
jno
jge
repz
mov
jl
cmp
cld
cld
jno
in
mov
xor
cmp
mov
cmp
cmp
std
mov
cmp
jae
ins
cmp
cs
jnp
call
aas
cli
jbe
clc
push
test
lods
aas
jb
jge
xor
jge
sub
sti
ss
cld
jl
lods
mov
jp
push
cmp
cld
xor
jle
ss
aas
mov
jno
clc
mov
aas
scas
mov
outs
jo
mov
scas
ja
jnp
and
outs
jbe
mov
cld
jno
jmp
popa
mov
cmp
js
push
aas
cmp
jno
(bad)
jg
test
mov
mov
outs
aas
std
and
jl
movs
(bad)
cld
xor
jg
bound
xor
sub
std
icebp
push
mov
lock
mov
outs
ja
jge
mov
push
cld
cld
xor
cmp
ss
cmp
ds
mov
sub
cmp
push
mov
jg
test
mov
xor
cmp
cs
scas
mov
jg
jmp
sti
ss
stc
ds
cmp
mov
sub
cmps
cmp
jno
(bad)
jg
cmps
mov
ins
bound
cmp
cmp
bound
(bad)
sti
ss
jle
jb
mov
jp
outs
(bad)
mov
xor
jnp
sub
aas
mov
mov
jnp
sub
scas
jp
mov
mov
xor
jle
popa
jecxz
sti
ss
jge
xor
mov
cmp
cs
sti
xor
jle
jo
mov
cmp
lods
sub
ins
mov
icebp
in
lods
aas
jb
cmp
jno
sub
outs
jbe
sti
cmp
bound
jle
repz
std
js
mov
sub
scas
mov
ins
ss
mov
cli
imul
std
mov
mov
outs
jge
xor
ds
cmp
ja
mov
outs
aaa
scas
mov
jg
scas
mov
outs
jbe
mov
jnp
outs
mov
aas
xor
scas
xor
cmp
jl
out
sub
mov
mov
jmp
sti
ss
cmp
jnp
std
mov
scas
ja
mov
out
rep
jns
mov
cld
jg
cmp
(bad)
sti
ss
jle
jb
mov
mov
jo
cmp
jecxz
jnp
call
std
jg
lods
(bad)
(bad)
imul
jg
jge
cld
jno
mov
std
ja
mov
mov
ss
in
cmp
jns
and
cld
push
mov
jle
mov
cmp
cmp
mov
jb
(bad)
push
push
cld
jnp
mov
stc
mov
mov
cmp
mov
cld
aas
jno
mov
cs
cld
jg
lods
stc
jle
mov
mov
jnp
ins
cmp
jp
imul
xor
mov
jg
stos
cld
(bad)
imul
cld
xor
stc
jle
mov
ds
std
mov
push
jns
push
sub
cmp
mov
cld
aas
xor
cmp
mov
aaa
push
out
stos
daa
cmp
mov
mov
test
daa
jle
push
cmp
mov
mov
imul
mov
imul
jge
push
stc
(bad)
jbe
(bad)
js
sub
mov
cs
scas
cmp
ins
(bad)
jge
call
idiv
ss
push
clc
jg
lods
ds
in
mov
cmp
imul
sub
jp
outs
cmp
aas
mov
in
push
sub
mov
jg
lods
jg
mov
(bad)
jg
ds
cs
cmp
jg
cmp
mov
mov
das
mov
mov
icebp
call
(bad)
mov
xor
cmp
jge
out
(bad)
jg
test
mov
out
jbe
cld
ds
in
mov
ss
mov
mov
cmp
mov
sub
cmp
imul
lods
jnp
sub
mov
ja
jle
bound
jns
and
mov
outs
imul
ins
mov
and
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
xor
outs
aaa
scas
mov
cmp
lock
cmp
bound
mov
lods
repz
jle
jae
mov
xor
jle
mov
outs
aas
jge
addr16
ja
ds
aaa
std
cmc
jl
movs
(bad)
cld
mov
mov
jge
outs
mov
std
xor
clc
(bad)
jbe
cs
jbe
sti
cmp
jbe
mov
hlt
xor
mov
cmp
mov
in
mov
mov
std
jl
ins
mov
jbe
das
jge
mov
outs
jns
loop
ds
jno
mov
jp
lods
mov
std
jno
mov
outs
aaa
out
mov
push
outs
cmp
ins
mov
mov
mov
sub
cld
ja
cmp
bound
aas
mov
jbe
cld
mov
mov
scas
outs
jle
sti
cmp
bound
jns
jb
jns
xor
in
mov
cs
ds
js
mov
lods
mov
push
mov
sub
mov
cmc
jo
fs
xor
sub
movs
data16
movs
data16
movs
pushw
stc
cmp
scas
movs
data16
movs
data16
movs
data16
movs
jmp
xor
movs
data16
movs
data16
movs
pushw
stc
cmp
scas
movs
data16
movs
data16
movs
data16
movs
pushw
movs
data16
movs
data16
movs
data16
movs
jmp
ins
(bad)
jle
gs
data16
movs
data16
movs
data16
xor
data16
movs
data16
movs
data16
(bad)
sti
jbe
cmp
sub
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
(bad)
cmp
sub
movs
data16
movs
data16
movs
data16
xor
data16
movs
data16
movs
data16
data16
(bad)
cmp
sub
movs
data16
movs
data16
movs
pushw
movs
data16
movs
data16
movs
data16
movs
data16
(bad)
cmp
sub
movs
data16
movs
data16
movs
jmp
xor
movs
data16
movs
data16
movs
data16
(bad)
cmp
sub
movs
data16
movs
data16
movs
jmp
xor
movs
data16
movs
data16
movs
pushw
stc
cmp
scas
sub
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
mov
data16
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
mov
data16
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
pushw
stc
cmp
scas
sub
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
pushw
stc
cmp
scas
sub
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
pushw
stc
cmp
scas
sub
data16
movs
data16
movs
data16
and
jp
js
jno
mov
cmp
out
cld
mov
cli
outs
aas
jge
gs
mov
mov
mov
stc
outs
clc
jg
sub
js
imul
ins
mov
cs
mov
icebp
imul
xor
jge
lods
stc
jle
cmp
cmp
imul
jle
das
jge
mov
jle
xor
outs
mov
jg
sub
jg
test
in
mov
aaa
jge
(bad)
xor
jge
jb
jns
(bad)
out
mov
push
imul
imul
ds
xor
sti
jbe
mov
push
mov
mov
xor
in
ins
bound
mov
std
popa
in
mov
cmp
jo
mov
cmp
ins
aas
lods
repnz
mov
gs
sub
cmp
mov
sti
jbe
mov
jnp
out
sub
ds
mov
jl
mov
jge
(bad)
(bad)
ins
cmp
sub
sub
xor
daa
ins
jle
mov
cs
mov
jp
ins
(bad)
jg
ins
in
ins
and
test
loop
jl
imul
ss
(bad)
aas
xor
scas
out
repnz
mov
cmp
mov
std
jge
mov
mov
xor
sub
xor
test
xor
jo
cmc
jl
mov
std
(bad)
jno
mov
mov
cmp
test
std
xor
aas
ja
sub
scas
(bad)
cs
cmp
test
in
push
jl
mov
std
cmp
lods
jge
loop
clc
(bad)
ss
stc
js
mov
mov
sub
imul
outs
jle
bound
mov
mov
jbe
sub
in
gs
cld
icebp
lods
cmp
out
jp
js
jno
mov
ins
loop
cs
std
cmc
jnp
out
cmp
loop
cmp
jae
mov
std
jb
(bad)
in
mov
jne
mov
(bad)
jg
loope
ins
bound
mov
cli
jno
sub
cmp
jg
es
mov
sub
jg
out
aas
cmp
jp
cld
jg
mov
jle
xor
jne
mov
mov
push
mov
sti
jae
mov
div
sub
xor
mov
mov
cmp
test
jb
ds
idiv
and
in
mov
sub
sti
jo
scas
outs
jns
clc
jg
mov
mov
cmp
jge
jg
ins
(bad)
sti
mov
mov
aaa
test
test
jge
jns
mov
cs
jp
jle
ss
cld
jle
and
cmp
ins
ss
std
push
ins
mov
in
gs
jbe
mov
mov
outs
ds
mov
mov
jbe
std
jge
cmp
jle
xor
bound
cs
out
sub
cld
jg
loope
cmp
mov
push
mov
xor
cmp
xor
mov
out
jp
js
jno
mov
and
jmp
mov
jl
out
jg
jge
sti
jbe
mov
cmp
cmp
lods
xor
xor
jge
mov
in
jbe
es
mov
jb
clc
jg
cmp
sub
loope
std
jbe
cld
jl
sub
mov
cmp
cmp
cli
outs
aas
jge
imul
push
loope
std
jbe
cld
jl
sub
mov
cmp
mov
mov
es
addr16
jno
mov
push
mov
cmp
xor
cli
mov
ja
movs
cmp
ds
sub
cmp
jg
in
ins
mov
outs
jns
xor
mov
aas
xor
jge
mov
scas
outs
stc
cs
xor
cli
in
outs
jg
out
std
jle
lods
mov
cmp
repnz
(bad)
in
jbe
jae
lods
ins
jne
sub
jb
cs
jg
scas
js
xor
jg
xor
std
xor
jge
in
mov
bound
jne
ss
loop
aas
mov
xor
mov
cs
xor
hlt
jbe
cmp
mov
mov
push
stc
aas
mov
sub
mov
sub
jns
cmp
jle
xor
jge
(bad)
call
jp
std
jbe
jno
cmp
jb
lods
sub
aas
in
mov
cmp
jae
mov
out
ins
jle
jno
clc
push
mov
mov
ja
clc
jle
(bad)
jmp
push
mov
cmps
outs
cmp
imul
jg
loope
mov
loopne
mov
lock
lods
sub
aas
xor
lods
mov
cmp
push
test
outs
pusha
jns
cmps
jle
jns
xor
jle
xor
das
sub
xor
js
xor
jbe
ss
out
jp
mov
jmp
std
xor
outs
out
outs
mov
jle
jg
lods
sub
cmp
and
lods
sub
cmp
jg
sub
jp
ins
(bad)
cld
jno
clc
std
jbe
cld
(bad)
mov
jge
jno
daa
xor
in
jbe
es
cmp
mov
jge
jno
addr16
scas
mov
scas
repnz
aas
jge
ins
jns
loope
(bad)
mov
repnz
aas
cmp
popa
cs
xor
in
jbe
es
xor
xor
jge
mov
mov
cli
loope
(bad)
cmp
repnz
jge
mov
in
ds
test
cs
jbe
sub
cmp
jg
in
cld
xor
jle
repnz
lods
mov
cs
mov
loop
std
jge
push
call
jmp
jbe
test
(bad)
mov
cmp
icebp
imul
mov
mov
mov
lock
jle
loope
std
and
jbe
in
mov
mov
icebp
outs
mov
xor
jp
js
jno
mov
ins
mov
in
(bad)
cld
jno
cmps
push
out
test
mov
ds
ja
cs
out
mov
ins
loop
cmp
in
push
mov
mov
loope
(bad)
cmp
rep
xor
jle
scas
ds
jno
es
jns
sub
cmp
bound
jg
mov
mov
aas
jae
ins
jb
cs
std
xor
jge
in
mov
bound
xor
out
stos
out
js
mov
div
(bad)
cmp
mov
mov
jbe
sub
es
cli
in
out
cmp
in
std
jl
lods
(bad)
cld
mov
jge
xor
mov
mov
cs
jge
cmp
in
mov
es
jbe
mov
mov
bound
xor
ja
mov
jg
cmps
mov
sub
jns
xor
sub
cld
xor
mov
jp
std
jbe
jns
cmp
jb
scas
cs
cs
push
data16
hlt
icebp
test
aas
jge
gs
jge
gs
ds
mov
cmp
jae
mov
cld
xor
xor
lods
out
in
cmp
outs
mov
outs
jle
std
mov
mov
mov
cmp
mov
jle
ins
mov
mov
mov
std
icebp
mov
xor
cmp
mov
mov
scas
cs
cmp
xor
std
cld
xor
jp
jge
ds
clc
ins
jns
ds
bound
mov
js
mov
and
jle
lods
es
cli
in
out
cld
icebp
jmp
aas
cmp
repnz
(bad)
in
jbe
hlt
icebp
test
aas
jge
gs
jge
gs
ds
repz
jns
xor
mov
cmp
clc
in
cmp
cmp
mov
mov
xor
mov
cld
sti
ja
ins
xor
(bad)
out
jge
jmp
in
mov
cmp
sub
daa
jge
movs
imul
sub
repnz
(bad)
cld
jno
clc
std
loope
(bad)
cmp
rep
cmc
cld
icebp
sub
mov
xor
lods
repnz
(bad)
in
jbe
hlt
icebp
test
aas
jge
data16
jo
(bad)
ds
in
ins
mov
gs
jge
data16
jo
(bad)
ds
es
js
cmp
jg
ins
jl
and
std
mov
(bad)
push
imul
cmp
cmp
imul
xor
cli
in
out
cld
icebp
jmp
aas
cmp
repnz
jle
test
push
aas
cmp
jp
js
jno
mov
and
cmp
(bad)
cld
xor
jbe
xor
aas
xor
imul
das
mov
cmp
ja
scas
aas
repz
mov
mov
cmp
jae
mov
push
mov
sub
movs
imul
sub
repnz
cmp
repnz
(bad)
in
jbe
xor
in
aaa
mov
jge
jbe
scas
cs
cs
jge
gs
jge
gs
ds
mov
cmp
jae
mov
ds
movs
es
imul
clc
(bad)
lods
ins
jp
lods
cmp
xor
mov
in
jb
js
jno
(bad)
aas
mov
jge
jbe
outs
ds
out
mov
mov
mov
mov
jge
jbe
outs
ds
out
test
repz
xor
div
xor
aas
xor
lods
xor
sub
jle
jo
stc
in
stc
test
daa
cmp
scas
scas
ds
xor
xor
jmp
mov
in
clc
(bad)
lods
ins
xor
mov
sti
jbe
mov
std
xor
aas
xor
lods
hlt
and
movs
jle
mov
scas
cmp
es
ja
jg
out
lock
aaa
test
test
ds
mov
std
jg
out
clc
mov
idiv
test
bound
out
(bad)
cs
jle
jge
cmp
jge
ins
bound
jge
jmp
in
mov
ds
ss
mov
xor
gs
cld
in
jge
push
jge
cs
test
jg
loope
ins
and
(bad)
sti
ja
mov
mul
out
and
lods
sub
cmp
cmps
js
in
das
mov
lods
imul
cmp
jb
js
jno
(bad)
cmp
lods
cmp
test
push
cld
jle
in
out
jg
jle
jno
clc
push
mov
(bad)
cld
xor
mov
jns
cmps
jb
scas
(bad)
jmp
call
sub
test
std
clc
jle
in
mov
aas
xor
jle
jno
clc
push
mov
cmps
jl
test
test
ds
mov
stc
cmp
ins
stc
mov
loope
(bad)
cmp
xor
jge
aaa
gs
cmp
ins
stc
mov
loope
(bad)
cmp
aas
outs
std
jl
pusha
(bad)
jg
outs
std
cmp
jp
jg
mov
mov
jl
lods
(bad)
cld
xor
mov
jns
out
movs
mov
mov
jle
call
lock
icebp
lods
(bad)
sti
ja
mov
movs
jbe
mov
mov
sub
cmp
cmp
mov
mov
sub
outs
jle
mov
jl
lods
(bad)
cld
xor
mov
jns
daa
xor
test
mov
in
outs
mov
lods
imul
cmp
jbe
stc
jl
out
cmp
mov
sub
sub
scas
cmp
cmp
loope
scas
cmp
clc
mov
mov
es
ja
cmp
cmp
mov
out
and
stc
cmp
jge
(bad)
je
mov
out
lods
ins
jne
sub
xor
cmc
cmp
sub
addr16
xor
test
mov
in
outs
mov
lods
imul
cmp
jbe
stc
jl
out
cmp
mov
sub
push
lods
jge
mov
sub
cmp
jg
in
ins
bound
ds
jmp
outs
xor
mov
std
jno
mov
xor
xor
std
jnp
jge
mov
jns
cmp
xor
std
cld
xor
cmp
xor
outs
xor
cs
cmp
sub
scas
jle
mov
out
(bad)
scas
js
jae
sub
out
repnz
mov
jg
imul
cs
test
aas
jge
jle
mov
xor
mov
cmp
test
(bad)
jno
cld
ds
sub
popa
scas
jle
ja
jge
mov
mov
cmp
push
lods
jge
mov
lods
xor
jno
(bad)
jg
jle
ss
sub
cmp
repnz
(bad)
aas
test
mov
lods
aas
repz
cmp
and
jge
mov
mov
out
mov
mov
mov
sub
repnz
(bad)
cld
jno
clc
std
loope
(bad)
mov
push
ins
mov
js
and
cmp
es
xor
out
cmps
mov
cld
cmp
xor
cmp
cmp
sub
jb
mov
scas
jnp
mov
data16
sub
xor
jge
mov
in
jbe
es
jb
sub
mov
jle
jns
bound
cmp
push
ds
jmp
jo
cmp
lods
idiv
lock
mov
jo
cmp
lods
xor
in
in
scas
mov
in
xor
jge
xor
mov
cli
loope
std
in
outs
ds
repnz
jg
icebp
imul
repz
jge
aaa
jge
mov
jp
js
jno
mov
in
js
imul
test
aas
jo
mov
xor
jae
das
mov
out
cli
movs
movs
jle
mov
cmp
mov
jle
xor
jp
cmps
imul
xor
es
out
(bad)
out
ja
jge
jbe
popa
test
jl
mov
stc
in
scas
mov
lods
loope
js
mov
ins
mov
ds
daa
push
mov
scas
sub
jns
in
ss
ss
mov
hlt
ja
jge
idiv
loopne
xor
cmps
div
jp
lock
es
in
stc
test
sub
clc
imul
movs
mov
js
ins
idiv
je
bound
mov
data16
test
out
lock
mov
test
data16
bound
in
mov
sub
popa
jnp
sub
out
call
cmps
sub
daa
mov
mov
es
jns
in
out
jmp
sub
cmp
sub
cmp
xor
jbe
clc
js
cs
push
test
in
popa
jge
jo
js
mov
ins
jp
in
mov
bound
jne
das
mov
std
jbe
jl
mov
imul
div
cs
cs
push
js
imul
(bad)
jnp
das
ds
test
outs
xor
jge
call
cmp
jle
jns
xor
jle
xor
ins
mov
cmp
sub
test
jl
mov
mov
mov
jns
mov
in
jns
sub
jge
cmp
cmp
mov
cmp
(bad)
jle
mov
(bad)
jle
lods
movs
imul
in
jbe
cld
cld
jno
std
jl
lods
(bad)
cld
mov
std
ds
sub
clc
in
out
mov
lods
imul
cmp
call
jle
mov
jge
icebp
(bad)
es
js
cs
aas
jge
popa
mov
mov
and
ss
movs
imul
es
ss
mov
jae
lods
sub
aaa
xor
div
mov
mov
test
sub
loope
js
loope
stc
js
test
lods
jo
jle
mov
std
mov
cmps
mov
jle
mov
in
div
scas
out
stc
cs
ds
daa
xor
lods
aaa
repz
mov
imul
stc
jle
das
(bad)
jle
movs
clc
jmp
mov
ds
out
es
cli
in
outs
mov
rep
cmp
mov
mov
in
jbe
div
mov
jg
mov
(bad)
jle
mov
jl
jb
sub
cmp
ss
sub
mov
ins
jb
cmps
mov
test
scas
scas
mov
and
sub
sub
movs
cli
outs
ins
jle
cs
cs
lock
jo
sub
cmp
jg
es
jns
push
and
cmp
scas
mov
aas
xor
mov
jle
jge
jbe
mov
cld
ds
(bad)
std
jl
lods
jns
jo
jns
mov
cmp
cs
outs
xor
mov
jbe
jle
loope
(bad)
cmp
jno
cld
jle
mov
ins
mov
cs
cmp
ss
xor
in
jbe
lods
mov
sub
in
jle
cmp
mov
cmp
mov
jge
sti
jb
cmps
jae
lods
lods
xor
jbe
sub
cmp
jg
in
mov
mov
mov
mov
jno
mov
in
ins
mov
mov
aaa
jge
jge
sub
mov
xor
jl
lods
(bad)
cld
xor
aas
jge
push
in
jle
cs
cmp
test
sub
cmp
mov
jge
sti
xor
in
div
sub
cmp
and
mov
js
jge
jb
movs
sub
mov
aad
cmp
jg
cmps
jl
test
cli
in
outs
mov
mov
aas
jp
ins
cmp
lock
(bad)
aas
test
cmp
sub
jbe
xor
(bad)
mov
jb
js
jno
(bad)
cmp
lods
cmp
call
imul
xor
test
push
jge
mov
mov
es
ins
jle
jno
clc
push
daa
mov
mov
jmp
(bad)
jno
cld
ds
jnp
sub
std
jmp
addr16
daa
stc
movs
repnz
mov
div
js
jno
(bad)
cmp
lods
cmp
push
lods
cmp
lock
jbe
jbe
cmp
cmp
lock
jle
jle
cmp
lock
(bad)
jmp
call
sub
test
outs
ds
ja
mov
jle
imul
repnz
in
jbe
xor
jge
cmp
es
push
cmp
jb
out
in
stc
scas
push
jg
jne
popa
clc
test
loopne
stos
sub
jg
and
ja
ss
ds
in
mov
xor
lods
jne
sub
and
ins
jns
mov
clc
mov
mov
jge
jno
addr16
mov
jl
in
in
jmp
call
stos
addr16
ja
scas
ds
out
mov
in
cmps
cmp
in
daa
cmp
sub
jge
jp
jmp
out
(bad)
outs
mov
push
sub
xor
icebp
(bad)
imul
es
ja
ds
scas
mov
xor
sub
jo
es
ins
mov
cmp
test
jp
out
outs
mov
and
sub
jge
stos
addr16
fs
js
sub
jge
stos
addr16
jmp
movs
es
outs
js
cmp
mov
cmp
cmps
cmp
in
imul
cmc
xor
cmp
movs
jp
(bad)
jle
lods
scas
out
stc
cmp
in
jbe
mov
scas
mov
mov
repnz
aas
mov
xor
mov
jnp
std
jl
jnp
cmp
sub
sub
jno
jle
jno
js
mov
jge
jno
cmps
mov
scas
(bad)
in
mov
jge
ins
and
jmp
ins
cmp
sub
imul
std
loope
(bad)
cmp
sub
ds
sub
cmp
sub
jle
xor
std
jl
lods
(bad)
cld
icebp
jmp
es
ja
cmp
sub
xor
cmp
mov
mov
mov
loope
(bad)
cmp
js
cmp
and
cmp
sub
es
ja
jge
sub
cmp
call
cmps
mov
jbe
jle
repnz
clc
mov
jno
es
ja
cmp
xor
cmp
(bad)
jge
mov
cmp
xor
cli
mov
ja
in
outs
js
ja
mov
mov
imul
cs
test
out
in
hlt
xor
mov
mov
repnz
jle
jno
jle
loope
(bad)
cmp
sub
cmp
gs
test
(bad)
(bad)
mov
mov
jge
jno
out
test
mov
mov
xor
aas
lods
repnz
es
ja
cmp
jle
addr16
jno
ds
mov
outs
mov
test
imul
mul
jg
test
jge
mov
outs
mov
test
out
cmc
(bad)
jae
movs
repnz
aas
mov
loope
(bad)
cmp
cli
outs
aas
std
jp
stc
aas
test
out
std
mov
jno
es
ja
mov
das
ds
(bad)
cld
mov
jge
mov
jge
jno
out
call
in
aas
jae
addr16
mov
cmp
repnz
(bad)
in
gs
cld
xor
cmc
(bad)
jae
scas
cs
imul
mov
ins
mov
and
jge
mov
stc
in
movs
jns
icebp
scas
(bad)
clc
xor
sub
jmp
jg
jno
stos
outs
loopne
push
imul
imul
mov
mov
cs
mov
loope
(bad)
cmp
cli
outs
aas
std
mov
scas
(bad)
in
push
(bad)
cld
mov
ds
loope
(bad)
cmp
ss
jge
mov
cmp
mov
jge
mov
es
ja
mov
jp
addr16
repnz
cmp
imul
mov
test
sub
mov
mov
es
imul
repz
jno
lods
repnz
(bad)
in
imul
cli
jbe
jns
repnz
aas
std
loope
(bad)
cmp
cli
outs
aas
cmp
call
out
mov
cmp
jp
clc
xor
jge
test
test
outs
mov
aaa
test
mov
push
mov
sti
loope
ds
test
pusha
es
ins
mov
sub
test
movs
cmp
cmp
mov
cmp
std
loope
ds
test
test
xor
imul
in
outs
mov
lock
js
loope
(bad)
cmp
jle
jg
mov
mov
cmp
lock
aas
ds
jge
mov
outs
mov
test
jmp
stc
cmp
ins
aas
ds
jge
mov
outs
mov
test
outs
mov
jg
es
jmp
mov
jl
out
jg
jge
sti
jbe
mov
mov
mov
mov
lods
repnz
out
mov
call
lods
(bad)
in
test
sti
loope
stc
mov
repnz
mov
outs
(bad)
out
sub
xor
jge
mov
stc
in
out
jnp
out
cmc
cmp
aas
mov
rep
cs
mov
mov
in
movs
mov
mov
jnp
std
jl
jnp
mov
xor
xor
clc
loope
(bad)
cmp
mov
cmp
loop
test
mov
js
push
mov
jne
mov
mov
in
mov
es
push
jne
mov
outs
mov
test
call
std
cmp
aas
std
loope
ds
mov
es
ja
mov
das
mov
in
sub
loope
(bad)
cld
xor
ds
(bad)
jge
mov
std
cmp
pusha
stc
jle
lods
in
imul
cmp
xor
(bad)
ds
lods
cld
aas
jb
mov
cmp
ds
jno
out
jno
mov
jg
sub
mov
mov
mov
jp
imul
fs
ds
cmp
push
cmp
sub
es
sub
sub
push
mov
ins
xor
cmp
xor
(bad)
aas
xor
sub
and
ja
jg
in
mov
test
lods
(bad)
cld
xor
mov
xor
mov
jae
cmps
xor
bound
ins
loop
test
loop
mov
jp
mov
clc
in
es
cli
jno
sub
push
cmp
sti
jbe
(bad)
cmp
ss
xor
(bad)
cld
mov
jge
mov
std
cmp
outs
aas
std
js
mov
outs
cmp
sub
mov
(bad)
sti
mov
mov
jp
imul
std
jo
cmp
push
lods
(bad)
(bad)
imul
mov
imul
mov
jg
mov
in
movs
cmp
jmp
daa
mov
icebp
imul
sub
test
sub
mov
sub
cmp
mov
xor
jne
mov
jbe
xor
movs
repnz
aas
jge
outs
mov
std
popa
in
clc
in
jbe
mov
lods
mov
mov
test
sub
jge
mov
cmp
push
scas
jl
and
cmc
(bad)
jno
cld
cmp
cs
ja
sub
jl
jmp
ja
sub
jl
jmp
ja
sub
jl
jp
mov
cmp
cs
ja
sub
jl
jns
mov
cmp
cmp
mov
mov
mov
(bad)
jle
scas
ds
hlt
sub
jl
mov
std
cmc
jl
movs
(bad)
cld
mov
mov
jge
outs
mov
std
xor
clc
(bad)
jbe
cs
jbe
sti
cmp
jbe
mov
jle
sub
ja
mov
cld
xor
cmp
jno
clc
mov
and
jnp
ins
ds
jno
mov
push
in
(bad)
mov
test
das
jle
bound
mov
cmp
jp
js
jno
sub
push
stc
jg
in
mov
mov
mov
jnp
jo
jle
xor
mov
sub
mov
ins
cmp
and
outs
aaa
out
mov
cmp
sub
mov
xor
das
sub
cs
xor
mov
out
jno
cmp
xor
mov
jg
out
mov
jbe
es
jge
sub
outs
aaa
scas
mov
cmp
test
aas
mov
xor
cmp
jle
cld
mov
mov
mov
mov
mul
clc
jle
out
mov
jne
lods
mov
push
gs
imul
je
and
mov
xor
repz
push
repnz
mov
sub
loope
mov
cs
mov
mov
ja
mov
xor
xor
(bad)
jg
cmp
div
test
jp
imul
ss
cld
sub
bound
push
jns
loopne
mov
jle
mov
lods
cmp
sub
mov
cmp
bound
jge
xor
sti
jbe
in
mov
jbe
jns
imul
mov
scas
jbe
std
sti
jbe
scas
scas
jle
clc
jg
stos
(bad)
sti
ss
stc
mov
ss
ins
cmp
jle
cli
jbe
cld
push
mov
push
out
aas
cmp
lock
mov
jg
sub
je
xor
(bad)
jg
sub
jg
sub
jp
ins
mov
jnp
sub
cmp
in
in
(bad)
xor
jle
cs
jg
in
mov
mov
xor
stc
mov
ja
sub
cmp
xor
scas
cs
outs
jle
mov
outs
aas
jge
imul
sti
fs
jbe
scas
jge
loop
icebp
push
in
in
mov
cs
mov
and
(bad)
jg
cs
aaa
jle
push
sub
and
jg
sub
aas
jge
ins
mov
jp
std
mov
scas
jecxz
cmp
xor
ds
cmp
idiv
push
in
in
jle
sub
cmp
cs
jg
cmp
fs
outs
cld
cld
xor
js
bound
(bad)
sti
ss
cmc
jl
lods
(bad)
cld
xor
clc
jle
out
mov
mov
jb
ds
loope
mov
ins
icebp
cs
cld
xor
mov
lock
mov
xor
sub
jp
std
scas
cs
jns
sub
push
cmp
stc
jle
sub
scas
ja
mov
jp
jmp
clc
jg
das
cld
js
ins
mov
cld
icebp
sub
jl
cmp
mov
lods
jb
stc
jg
jmp
clc
cld
ja
scas
cs
mov
mov
loop
mov
xor
cmp
jge
aas
hlt
cld
scas
scas
cmp
ins
mov
in
mov
mov
repnz
mov
jg
stos
(bad)
sti
ss
cmc
jl
lods
(bad)
cld
xor
std
jle
lods
jle
xor
jl
imul
jnp
sub
cmp
xor
jle
xor
out
in
mov
xor
sub
sti
imul
jl
fs
mov
jb
cmp
xor
cmp
mov
jl
and
lods
outs
and
lods
outs
and
(bad)
cld
mov
ds
mov
std
jl
lods
(bad)
cld
mov
mov
cmp
jle
jge
imul
outs
and
cmp
mov
outs
aas
std
popa
outs
js
ja
(bad)
mov
ja
jle
std
test
mov
std
mov
outs
aas
std
popa
outs
js
ja
(bad)
mov
mov
jl
jb
js
jno
jle
and
mov
std
popa
outs
js
ja
(bad)
mov
icebp
(bad)
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
movs
data16
mov
push
mov
xchg
push
jecxz
jmp
or
add
retf
fcomp
adc
rol
into
rol
jns
jne
data16
and
pop
inc
cmc
movs
cmps
dec
and
or
inc
or
inc
add
lock
or
inc
or
inc
or
push
pop
scas
ins
jno
call
jbe
jne
pop
dec
cmc
movs
cmps
dec
cmp
pop
cmp
gs
push
test
aad
pop
or
inc
or
inc
or
rcl
pop
or
inc
or
add
into
rol
dec
(bad)
fs
push
fs
cmps
into
adc
into
rol
into
rol
or
jmp
test
sub
sub
jle
ja
push
movs
cmps
mov
inc
or
inc
or
inc
or
cmp
or
inc
or
inc
or
pop
cdq
into
rol
into
rol
retf
mov
adc
into
rol
or
addr16
mov
inc
or
inc
or
inc
or
dec
sub
gs
aas
cdq
jbe
xchg
inc
or
inc
out
xlat
pusha
in
push
gs
inc
or
inc
cmps
pop
sti
test
aad
sbb
aad
pop
mov
aad
sbb
aad
pop
mov
stos
jne
es
xor
mov
push
cmp
inc
or
inc
or
aam
pop
jmp
into
adc
into
rol
into
rol
nop
repz
jne
pushw
and
retf
pop
pop
cdq
push
mov
or
inc
or
inc
ret
lds
push
gs
loope
xchg
mov
sub
lods
mov
js
add
movs
jmp
rol
into
iret
and
and
push
xchg
mov
cmps
imul
ja
rol
into
rol
into
rol
cmp
rol
fcmove
and
cmp
mov
movs
out
das
(bad)
movs
mov
add
(bad)
mov
mov
(bad)
stos
mov
add
data16
mov
retf
data16
sub
ss
imul
leave
mov
push
mov
cdq
into
rol
into
rol
pop
hlt
aam
cmp
movs
data16
or
inc
or
(bad)
movs
mov
add
(bad)
mov
mov
(bad)
stos
mov
add
data16
(bad)
test
retf
data16
jmp
imul
sub
imul
imul
leave
mov
push
jg
and
cmc
clc
mov
cmp
inc
or
inc
sbb
jns
cmc
movs
data16
or
inc
add
mov
cmps
into
rol
into
rol
pusha
hlt
pop
pop
cmp
inc
or
inc
or
(bad)
ja
call
gs
ss
jbe
dec
pusha
mov
adc
into
xlat
out
push
gs
sbb
movs
jmp
gs
call
in
push
gs
fild
movs
jmp
gs
fisttp
movs
jmp
jnp
jnp
mov
push
jnp
aad
imul
in
mul
data16
push
sub
movs
jmp
rol
into
les
fs
sub
inc
or
add
gs
ss
jbe
dec
pusha
mov
adc
into
rol
into
xlat
out
push
gs
sbb
pusha
out
push
gs
call
in
push
gs
sbb
movs
jmp
gs
fwait
daa
movs
jmp
outs
movs
jmp
lods
movs
jmp
mov
push
movs
or
movs
jmp
movs
cmps
imul
jmp
jne
push
in
cdq
jbe
jne
mov
cmp
data16
inc
add
leave
movs
jmp
gs
aam
mov
xor
inc
or
inc
or
pop
push
sub
push
in
cdq
jbe
jne
pop
sbb
movs
dec
cmp
mov
push
gs
or
inc
or
rcr
movs
dec
cmp
mov
push
push
movs
out
sub
add
push
push
push
gs
and
adc
into
rol
into
rcr
pop
cmp
xor
sub
leave
and
cmc
inc
or
inc
or
inc
or
lds
jp
push
jbe
mov
jmp
rol
add
sub
mov
pop
cmp
(bad)
daa
mov
mov
mov
or
cmps
fs
inc
or
popa
pop
imul
jmp
rol
into
(bad)
in
push
gs
sub
inc
or
inc
pop
jmp
mov
jmp
rol
into
rol
into
xlat
out
push
gs
call
out
push
gs
sbb
movs
jmp
gs
pop
and
push
push
gs
pop
and
cli
sti
jnp
sti
cli
mov
push
sti
in
jmp
cmp
test
push
outs
pop
imul
jbe
mov
jmp
rol
into
rol
jmp
mov
jmp
rol
into
rol
jmp
xchg
adc
pop
cmp
add
in
push
gs
sbb
movs
jmp
gs
sbb
movs
jmp
jnp
sti
out
adc
loope
push
sti
loopne
or
movs
data16
inc
or
inc
or
fs
xor
xor
inc
or
inc
or
inc
add
cld
cdq
jbe
xchg
xchg
mov
cmp
add
cmps
dec
cmp
pop
cmp
add
cmps
dec
cmp
pop
cmp
inc
push
inc
jne
cmps
fs
mov
scas
in
mov
pop
cmp
movs
data16
or
inc
sbb
jns
cmc
movs
data16
or
inc
or
pop
cmp
lds
dec
xor
cmp
add
cmps
dec
cmp
pop
cmp
add
cmps
dec
cmp
pop
cmp
inc
push
inc
jne
cmps
fs
mov
stos
in
mov
pop
cmp
movs
data16
inc
or
inc
or
aam
pop
jmp
into
adc
into
rol
into
rol
dec
imul
cmp
lds
dec
xor
cmp
add
cmps
dec
cmp
pop
cmp
add
cmps
dec
cmp
pop
cmp
inc
push
inc
jne
cmps
fs
cmp
in
cmp
cmc
movs
data16
inc
or
inc
or
inc
or
aam
pop
jmp
into
adc
into
rol
into
rol
movs
mov
add
(bad)
mov
mov
(bad)
stos
mov
add
data16
mov
retf
data16
sub
div
imul
or
into
rol
into
rol
into
xlat
out
push
gs
fiadd
movs
jmp
gs
fidivr
in
push
gs
sbb
movs
jmp
gs
sbb
movs
jmp
jnp
mov
jmp
iret
les
into
rol
dec
cli
rcr
cmc
in
stc
pop
out
push
gs
fidivr
out
push
gs
sbb
movs
jmp
gs
sbb
movs
jmp
gs
sbb
movs
jmp
jnp
mov
out
mov
adc
into
rol
into
rol
dec
imul
cmp
lds
xlat
pusha
out
push
gs
sbb
movs
jmp
gs
fwait
or
jmp
gs
fwait
or
jp
jnp
jnp
mov
push
jnp
aad
or
movs
div
lds
movs
leave
mov
push
mov
xchg
sub
aad
inc
or
inc
or
out
push
gs
sbb
movs
jmp
gs
sbb
movs
jmp
gs
fwait
sub
mov
retf
sub
call
bound
in
cdq
jbe
jne
bound
(bad)
outs
adc
inc
or
inc
or
lds
jmp
add
cmp
jbe
xchg
adc
add
cmp
jbe
xchg
xchg
sbb
mov
add
aas
cdq
jbe
xchg
adc
dec
mov
inc
xlat
out
adc
sti
loope
adc
loopne
push
sti
jecxz
fs
gs
sub
inc
or
fs
xor
xor
inc
or
inc
or
inc
add
cld
cdq
jbe
xchg
adc
pop
cmp
add
cmps
dec
cmp
pop
cmp
add
in
push
gs
stc
sub
mov
imul
leave
mov
sub
inc
or
inc
or
inc
sbb
jns
cmc
movs
data16
or
inc
add
cmps
out
xor
movs
jmp
push
inc
or
inc
or
(bad)
jno
rol
into
rol
xchg
adc
mov
mov
mov
pop
cmp
lds
jne
cmps
dec
xor
cmp
add
cmps
dec
cmp
pop
cmp
add
cmps
dec
cmp
pop
cmp
inc
xlat
js
movs
cmps
fs
cmp
in
cmp
cmp
cmp
adc
movs
es
xor
xchg
rol
into
rol
mov
fs
gs
into
adc
into
rol
movs
mov
add
(bad)
mov
mov
(bad)
stos
mov
add
data16
(bad)
test
retf
data16
jmp
jbe
sub
jbe
imul
leave
mov
push
bound
and
cmc
js
pop
adc
cdq
aad
gs
inc
or
inc
or
inc
add
cld
cdq
jbe
xchg
xchg
sub
gs
cmp
jbe
xchg
adc
add
aas
cdq
jbe
xchg
push
adc
mov
add
aas
cdq
jbe
xchg
push
sbb
call
call
(bad)
push
and
xor
pop
pop
cmp
inc
iret
aad
fisub
into
rol
dec
cli
dec
sub
std
pop
out
push
gs
sbb
movs
jmp
gs
fimul
in
push
gs
sbb
movs
jmp
gs
fwait
adc
adc
jnp
mov
push
jnp
aad
or
movs
div
aam
or
or
inc
or
inc
or
out
push
gs
call
cmps
mov
cdq
jbe
xchg
xchg
add
mov
add
aas
cdq
jbe
xchg
xchg
or
call
call
(bad)
bound
cmp
loop
push
or
aad
gs
inc
or
inc
or
inc
add
cld
cdq
jbe
xchg
xchg
mov
cmp
add
cmps
dec
cmp
pop
cmp
add
cmps
dec
cmp
pop
cmp
inc
push
inc
jne
cmps
fs
cmp
in
cmp
cmp
cmp
dec
fisub
into
rol
into
rol
movs
mov
add
(bad)
mov
mov
(bad)
stos
mov
add
data16
mov
retf
data16
sub
mov
imul
leave
mov
push
and
retf
pop
pop
cdq
push
mov
or
inc
or
inc
or
pop
cmp
lds
dec
xor
cmp
add
cmps
dec
cmp
pop
cmp
add
cmps
dec
cmp
pop
cmp
inc
push
inc
jne
cmps
fs
mov
scas
in
mov
pop
cmp
mov
aad
fisub
into
rol
into
rol
dec
imul
cmp
(bad)
jne
cmps
dec
xor
cmp
add
cmps
dec
cmp
pop
cmp
add
cmps
dec
cmp
pop
cmp
inc
push
inc
jne
cmps
fs
mov
scas
in
mov
pop
cmp
mov
aad
fisub
into
rol
into
rol
dec
imul
cmp
lds
dec
xor
cmp
add
cmps
dec
cmp
pop
cmp
add
cmps
dec
cmp
pop
cmp
inc
push
inc
jne
cmps
fs
mov
scas
in
mov
pop
cmp
mov
aad
fisub
into
rol
into
rol
dec
cli
rcr
cmc
in
std
pop
out
push
gs
fidivr
out
push
gs
sbb
movs
jmp
gs
sbb
movs
jmp
gs
sbb
movs
jmp
jnp
jnp
mov
push
jnp
aad
call
div
aam
or
or
inc
or
inc
or
out
push
gs
sbb
(bad)
mov
mov
(bad)
stos
mov
add
add
mov
adc
lds
mov
movs
ret
in
cmp
cmp
cmp
adc
movs
es
xor
mov
dec
add
(bad)
mov
mov
(bad)
stos
mov
add
data16
mov
retf
data16
sub
idiv
imul
leave
mov
push
pusha
push
in
cdq
jbe
jne
in
push
or
aad
gs
inc
or
out
push
gs
call
out
push
gs
sbb
movs
jmp
gs
pop
and
push
push
gs
pop
and
jp
jnp
jnp
mov
push
jnp
aad
call
idiv
lds
push
sub
retf
pushf
pop
cdq
push
mov
or
inc
or
inc
or
aam
movs
mov
or
inc
or
inc
or
out
push
gs
sbb
(bad)
mov
mov
(bad)
stos
mov
add
data16
mov
retf
data16
sub
idiv
imul
leave
mov
push
pusha
push
gs
clc
in
push
or
aad
gs
inc
or
out
push
gs
sbb
movs
jmp
gs
sbb
movs
jmp
gs
fwait
sub
mov
retf
sub
test
call
(bad)
cdq
jbe
jne
in
push
or
aad
gs
inc
or
push
push
gs
imul
movs
mov
add
(bad)
mov
mov
(bad)
stos
mov
add
add
mov
adc
fs
movs
test
lods
movs
ret
in
clc
scas
dec
cli
retf
pop
cmp
in
in
xchg
push
push
movs
div
aam
or
or
inc
or
inc
or
out
push
gs
call
mov
(bad)
stos
mov
add
add
mov
adc
fs
movs
test
lods
movs
ret
in
clc
scas
dec
cli
retf
pop
cmp
in
in
xchg
push
push
gs
div
aam
or
or
inc
or
inc
or
dec
iret
aad
call
or
pop
jmp
cdq
jbe
mov
or
inc
or
lds
or
pop
sub
cdq
jbe
mov
or
inc
or
inc
or
aam
or
or
inc
or
add
adc
jne
data16
out
gs
adc
ja
rol
into
rol
into
rol
into
iret
stos
push
lds
cdq
push
mov
arpl
mov
sbb
adc
ja
rol
into
rol
into
iret
mov
cdq
xchg
mov
bound
mov
sbb
adc
ja
rol
into
rol
jnp
retf
movs
fs
inc
or
inc
or
gs
movs
div
mov
pop
pop
dec
pusha
xchg
cmps
fs
inc
or
inc
or
gs
movs
cmps
imul
inc
in
pop
cdq
into
rol
into
shr
jns
out
js
pop
mov
or
inc
or
inc
or
inc
push
xor
adc
je
aas
mov
or
inc
or
jno
out
sub
jmp
or
inc
or
add
add
mov
or
inc
or
inc
or
(bad)
jae
push
inc
or
inc
or
mov
push
xor
xchg
mov
loop
push
push
xor
adc
pushw
xor
push
mov
pop
jmp
mov
jmp
rol
into
rol
add
jmp
add
xor
into
rol
into
rol
into
rol
or
inc
or
retf
data16
gs
inc
or
inc
fdivr
aad
bound
push
scas
sti
jmp
mov
push
in
cdq
jbe
xor
pushf
pop
cmp
aam
pop
jmp
into
adc
into
rol
into
rol
add
movs
jmp
rol
into
rol
push
cmc
cmp
cmp
lds
js
sub
cmp
mov
cmp
fisub
into
xchg
inc
or
aam
adc
mov
sub
inc
or
inc
or
(bad)
ja
rol
into
rol
aam
out
add
movs
es
and
mov
sub
out
add
ja
rol
into
rol
ds
mov
into
adc
into
rol
into
rol
daa
jmp
jne
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
mov
jno
cmps
and
jb
fs
sbb
push
adc
pop
inc
or
cmps
and
jae
fs
cmp
jbe
xchg
movs
scas
adc
fisubr
or
popf
sub
das
pop
cmp
test
ja
cdq
push
jecxz
stos
mov
xor
or
xor
pop
cmp
mov
aaa
jb
jne
imul
mov
cmp
inc
or
inc
adc
mov
sub
inc
or
inc
adc
sbb
cmp
ja
push
in
add
push
xor
ja
popa
(bad)
ds
mov
push
xor
push
(bad)
stc
xchg
pop
sub
mov
loope
jmp
leave
mov
push
xor
push
(bad)
retf
sub
mov
leave
mov
push
xor
jnp
retf
movs
fs
imul
ja
and
mov
dec
movs
(bad)
mov
cmp
mov
test
sbb
test
pop
cmp
mov
test
sbb
call
mov
mov
push
mov
test
retf
jae
out
cdq
jbe
xchg
movs
scas
aam
mov
push
js
pop
cmp
test
dec
movs
jmp
js
pop
cmp
test
ja
cdq
aad
mov
push
js
pop
cmp
test
jnp
cdq
aad
mov
es
mov
sbb
sbb
cmps
into
adc
into
rol
push
clc
sub
cmp
test
retf
(bad)
ja
retf
push
gs
sub
stos
mov
xor
movs
aad
pop
add
mov
xor
or
xor
test
pop
sub
retf
cmp
mov
or
inc
or
fisubr
or
cwde
dec
and
sbb
cmp
jbe
xchg
movs
das
shl
dec
sbb
aas
cdq
jbe
xchg
movs
outs
inc
xor
dec
sbb
aas
cdq
jbe
xchg
movs
scas
inc
xor
dec
push
sbb
push
adc
mov
adc
out
cmp
inc
or
inc
sbb
cld
cdq
jbe
xchg
movs
outs
shl
dec
sbb
cmp
jbe
xchg
movs
das
shl
dec
sbb
aas
cdq
jbe
xchg
movs
scas
call
in
sbb
aas
cdq
jbe
xchg
movs
scas
inc
xor
dec
push
sbb
push
adc
mov
adc
adc
into
adc
into
rol
out
cdq
jbe
xchg
movs
outs
jmp
pop
cmp
test
dec
movs
jmp
js
pop
cmp
test
jnp
cdq
aad
mov
push
js
pop
cmp
test
push
movs
jmp
inc
dec
sbb
or
call
adc
into
rol
into
rol
push
clc
sub
cmp
test
retf
(bad)
ja
retf
push
gs
sub
data16
ja
retf
push
gs
sub
data16
ja
retf
push
gs
sub
data16
xchg
dec
push
popf
fs
xor
mov
jmp
or
inc
or
mov
call
hlt
pop
mov
dec
pusha
jne
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
jno
cmps
and
jb
fs
sbb
push
adc
mov
sub
cmps
and
jae
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jae
fs
sbb
push
adc
mov
adc
cmps
and
jb
fs
in
cdq
jbe
dec
movs
pushw
imul
jmp
stos
mov
xor
mov
jo
jmp
and
jb
or
jb
gs
and
ja
movd
out
cdq
jbe
xchg
movs
out
sub
fisubr
or
mov
xor
call
dec
sub
gs
and
ja
or
call
mov
data16
pusha
jne
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
mov
xor
cdq
jbe
or
movs
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jae
fs
dec
xor
cmp
xor
std
xor
mov
bound
je
outs
mov
mov
jno
clc
jg
cmp
mov
cs
std
cmc
(bad)
jno
cld
cmp
cs
cs
jns
jbe
cmp
mov
jno
cmp
mov
xor
mov
cmp
sub
push
in
(bad)
push
push
jle
jo
mov
mov
jo
ins
jg
cs
jg
test
mov
icebp
sub
mov
ja
jns
loop
mov
cld
jbe
clc
jg
cmp
cmp
mov
mov
ss
mov
data16
jne
cmps
xor
data16
mov
xor
cmp
lods
xor
mov
cmps
xor
mov
xor
mov
data16
mov
data16
mov
out
xor
mov
and
out
cmc
scas
data16
mov
xor
scas
data16
mov
xor
scas
data16
mov
xor
mov
data16
mov
xor
mov
cmp
mov
data16
movs
data16
mov
or
addr16
or
push
gs
sub
data16
xor
out
rcr
mov
clc
mov
cmp
mov
push
mov
test
hlt
jae
out
cdq
jbe
xchg
movs
scas
pop
xor
mov
addr16
mov
ds
jmp
leave
mov
push
xor
ror
mov
jmp
push
and
xor
adc
cmp
sbb
sub
pop
mov
dec
jb
gs
cmp
ja
cmp
fs
xor
sub
gs
and
ja
cmp
fs
add
dec
sub
gs
and
ja
psadbw
sub
mov
dec
movs
(bad)
mov
cmp
mov
test
dec
sub
movs
mov
cmp
mov
test
sbb
call
mov
mov
push
mov
test
push
movs
jmp
js
pop
cmp
test
inc
movs
jmp
js
pop
cmp
test
inc
movs
jmp
js
pop
cmp
test
inc
movs
jmp
inc
mov
sbb
and
int
dec
test
push
movs
jl
push
mov
push
cmp
mov
into
xchg
inc
or
fidivr
retf
movs
fs
and
xor
adc
cmp
sbb
sub
pop
mov
dec
jb
gs
cmp
ja
cmp
fs
xor
sub
gs
and
ja
cmp
fs
add
dec
sub
gs
and
ja
psadbw
sub
mov
dec
movs
(bad)
mov
cmp
mov
test
dec
sub
movs
mov
cmp
mov
test
sbb
call
mov
mov
push
mov
test
push
movs
jmp
js
pop
cmp
test
inc
movs
jmp
js
pop
cmp
test
inc
movs
jmp
js
pop
cmp
test
dec
movs
jmp
inc
mov
sbb
and
int
outs
movs
jl
iret
mov
push
cmp
mov
into
xchg
inc
or
fidivr
retf
movs
fs
pop
fisub
dec
mov
in
scas
sbb
or
inc
or
inc
adc
mov
into
push
inc
or
inc
adc
pop
cmp
movs
imul
lds
push
es
cli
dec
pop
cdq
into
rol
into
rcr
es
inc
or
inc
or
inc
adc
pop
cmp
movs
imul
mov
jl
das
gs
xor
data16
gs
or
jb
gs
and
ja
adc
into
rol
into
rol
into
aad
cli
push
movs
es
or
into
adc
into
iret
data16
sub
jbe
xchg
inc
or
inc
sbb
cld
cdq
jbe
mov
outs
cld
adc
movs
div
retf
mov
into
rol
into
rol
jmp
gs
inc
or
push
data16
cmp
jl
cmc
xchg
out
xor
repz
cmp
mov
jl
xor
(bad)
ds
mov
push
xor
or
inc
adc
pop
cmp
test
jns
data16
stos
mov
xor
mov
or
xor
movs
push
stos
das
and
sub
movs
jl
xor
movs
jmp
and
jno
fs
inc
or
push
inc
sub
data16
sbb
aas
cdq
jbe
xchg
movs
out
cli
or
cmp
lods
sbb
fisubr
xor
movs
data16
data16
mov
cmp
mov
into
xchg
inc
or
inc
adc
pop
cmp
test
push
movs
data16
mov
or
mov
or
xor
movs
push
stos
das
and
xor
popa
xor
movs
jmp
and
jno
fs
inc
or
inc
or
push
push
movs
cmps
imul
jbe
xchg
movs
outs
loop
movs
cmps
dec
and
sbb
cmp
jbe
xchg
movs
out
(bad)
xor
dec
sbb
aas
cdq
jbe
xchg
movs
outs
popa
xor
dec
sbb
aas
cdq
jbe
xchg
movs
out
js
movs
cmps
dec
and
push
sbb
push
adc
mov
cmp
imul
rol
into
rol
push
clc
sub
cmp
test
push
movs
data16
fisubr
or
sub
xor
and
cmp
gs
data16
mov
cmp
mov
into
xchg
inc
or
inc
or
inc
add
gs
cmp
sbb
sub
pop
mov
dec
jb
gs
cmp
ja
cmp
fs
or
dec
sub
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
or
push
gs
sub
add
mov
xor
pushf
sub
fisubr
or
cwde
dec
and
sbb
aas
cdq
jbe
xchg
movs
out
out
push
mov
es
mov
sbb
and
int
outs
call
cmp
mov
into
xchg
inc
or
inc
adc
pop
cmp
test
lock
ja
retf
push
gs
sub
data16
push
inc
sub
add
mov
xor
lods
dec
and
push
sbb
push
adc
mov
xor
push
repz
add
jbe
or
cmps
fs
inc
or
inc
sbb
(bad)
mov
dec
mov
dec
cmp
sbb
sub
pop
mov
dec
jb
gs
cmp
ja
cmp
fs
or
dec
sub
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
or
call
mov
or
movs
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jb
fs
sbb
push
adc
mov
xor
cdq
jbe
or
movs
fs
cmp
jbe
xchg
movs
outs
out
push
mov
push
js
pop
cmp
test
dec
movs
jmp
js
pop
cmp
test
bound
mov
das
pop
cmp
test
imul
sbb
and
int
outs
call
cmp
mov
into
xchg
inc
or
inc
adc
pop
cmp
test
lock
out
cdq
jbe
xchg
movs
outs
jbe
movs
cmps
mov
fnsave
ds
mov
push
xor
ror
push
imul
sub
fisub
dec
movs
(bad)
mov
cmp
mov
test
sbb
call
mov
mov
test
dec
sub
movs
mov
cmp
mov
push
mov
test
lock
out
cdq
jbe
xchg
movs
out
sti
and
jae
mov
jno
cmps
and
ja
fs
cmp
jbe
xchg
movs
outs
das
and
stos
mov
xor
mov
das
mov
cmps
ds
jmp
leave
mov
push
xor
sar
cmps
dec
je
push
cmp
gs
inc
or
sub
movs
cmps
test
jne
arpl
fs
inc
or
inc
or
shr
repz
ja
ss
dec
sub
aas
popa
push
and
sbb
sub
ja
xchg
inc
or
inc
or
jl
xor
xchg
ja
or
cmps
fs
inc
or
arpl
fs
inc
or
inc
or
mov
pop
add
pop
cdq
into
rol
into
rol
into
ror
or
inc
or
mov
or
inc
or
inc
or
(bad)
jmp
inc
mov
dec
cmp
cmps
into
xchg
inc
or
inc
cmps
into
adc
into
rol
sti
in
imul
aad
cmp
gs
inc
or
inc
pop
sbb
data16
or
inc
or
inc
adc
mov
mov
or
inc
or
mov
jmp
sbb
pop
fisub
dec
mov
dec
cmp
sbb
sub
pop
mov
dec
jb
gs
cmp
ja
cmp
fs
or
dec
sub
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
or
push
gs
sub
data16
push
inc
sub
data16
(bad)
ja
retf
push
gs
sub
data16
push
inc
sub
ja
stc
xchg
dec
push
popf
fs
xor
(bad)
jnp
pusha
jg
lock
sub
gs
add
ja
rol
into
rol
into
retf
push
jo
call
jge
mov
dec
pusha
jne
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jb
fs
sbb
push
adc
mov
xor
cdq
jbe
or
movs
fs
sti
out
inc
fs
xor
xor
inc
or
inc
sbb
(bad)
mov
dec
mov
gs
jmp
cmps
imul
daa
mov
or
movs
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jb
fs
sbb
push
adc
mov
add
cmps
and
jae
fs
cmp
jbe
xchg
movs
out
es
stos
mov
xor
xor
xor
jg
add
jb
gs
and
ja
or
call
sub
add
sub
mov
dec
movs
(bad)
mov
cmp
mov
test
sbb
call
mov
mov
test
dec
push
sbb
pop
cmp
mov
push
mov
test
stc
jae
out
cdq
jbe
xchg
movs
das
jns
movs
cmps
mov
pop
mov
ds
jmp
leave
mov
push
xor
ror
push
imul
sub
fisub
dec
movs
(bad)
mov
cmp
mov
test
sbb
call
mov
mov
test
dec
sub
movs
mov
cmp
mov
push
mov
test
lock
ja
retf
push
gs
sub
add
mov
xor
stos
dec
and
sbb
aas
cdq
jbe
xchg
movs
scas
clc
push
mov
es
mov
sbb
movs
jl
xor
es
sub
repz
jg
add
jbe
or
cmps
fs
inc
or
add
mov
mov
push
cmp
mov
into
xchg
inc
or
inc
or
or
inc
or
inc
or
inc
sub
cld
cdq
jbe
xchg
aad
or
inc
or
inc
or
inc
xchg
jmp
gs
sub
ja
retf
push
gs
sub
retf
push
gs
sub
add
mov
xor
mov
and
push
sbb
push
adc
mov
xor
in
aaa
push
xor
daa
pop
cmp
(bad)
ds
mov
push
xor
cmp
inc
or
inc
or
mov
repz
jg
push
and
cdq
jbe
or
cmps
fs
inc
or
inc
add
fadd
into
rol
pusha
hlt
sub
cmp
test
call
gs
sub
sbb
aas
cdq
jbe
xchg
movs
out
out
jmp
mov
sbb
or
movs
fs
cmp
jbe
xchg
movs
outs
das
and
stos
mov
xor
mov
lds
cmps
ds
jmp
leave
mov
push
xor
mov
xor
arpl
or
push
gs
sub
mov
cmp
mov
push
clc
mov
cmp
mov
push
mov
test
lock
out
cdq
jbe
xchg
movs
out
sysexit
movs
cmps
mov
sbb
(bad)
ds
mov
push
xor
mov
xor
arpl
or
push
gs
sub
data16
imul
clc
mov
cmp
mov
push
mov
test
lock
out
cdq
jbe
xchg
movs
out
add
das
test
iret
fnsave
ds
mov
push
xor
mov
xor
arpl
or
push
gs
sub
data16
add
cmp
mov
clc
mov
cmp
mov
push
mov
test
lock
ja
retf
push
gs
sub
data16
push
inc
sub
data16
push
inc
sub
data16
xchg
dec
push
popf
fs
xor
(bad)
jnp
pusha
jg
mov
mov
mov
jb
gs
add
ja
rol
into
rol
into
aad
pop
push
gs
mov
fisubr
or
les
xor
das
pop
cmp
test
dec
movs
jmp
xchg
sbb
or
movs
fs
cmp
jbe
xchg
movs
out
mov
push
inc
sub
data16
xor
and
pop
dec
cmp
mov
cmp
mov
push
mov
test
push
movs
data16
mov
or
and
xor
aas
add
gs
or
jb
gs
and
ja
or
push
gs
sub
mov
cmp
pop
cmp
test
dec
movs
jmp
mov
ja
loope
sbb
or
movs
fs
cmp
jbe
xchg
movs
outs
or
push
inc
sub
data16
xor
pushf
dec
cmp
mov
clc
mov
cmp
mov
push
mov
test
lock
out
cdq
jbe
xchg
movs
scas
outs
xor
movs
cmp
fdiv
ds
mov
push
xor
mov
xor
mov
out
cdq
jbe
xchg
movs
out
or
dec
sbb
aas
cdq
jbe
xchg
movs
out
xor
dec
and
sbb
aas
cdq
jbe
xchg
movs
out
js
movs
cmps
dec
and
push
sbb
push
adc
mov
xor
push
repz
push
and
cdq
jbe
or
cmps
fs
inc
or
inc
sbb
(bad)
mov
dec
mov
dec
cmp
sbb
sub
pop
mov
dec
jb
gs
cmp
ja
cmp
fs
or
dec
sub
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
cmp
fs
xor
movs
mov
cmp
mov
test
sbb
call
mov
mov
push
mov
test
movs
data16
fisubr
or
sub
xor
(bad)
jg
and
jb
or
jb
gs
and
ja
or
call
adc
data16
pusha
jne
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jb
fs
sbb
push
adc
mov
xor
cdq
jbe
or
movs
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jb
fs
sbb
push
adc
mov
xor
cdq
jbe
or
movs
fs
jmp
cdq
jbe
xor
and
or
inc
or
inc
or
popa
or
inc
or
pusha
pop
push
gs
inc
or
inc
or
mov
or
inc
sub
das
pop
cmp
test
jns
jmp
mov
jmp
leave
mov
push
xor
(bad)
retf
sub
mov
leave
mov
push
xor
jnp
retf
movs
fs
dec
cmp
pop
cmp
gs
jmp
cmps
sub
data16
lds
sub
add
sub
jbe
xchg
inc
or
inc
or
inc
or
mov
inc
or
inc
adc
pop
cmp
movs
imul
lds
sub
add
stos
in
jmp
pushf
test
xor
inc
or
inc
adc
pop
cmp
movs
imul
mov
jl
das
gs
cmp
data16
gs
or
jb
gs
and
ja
adc
into
rol
into
aad
call
imul
stos
mov
xor
sub
fisubr
or
aam
xor
fisubr
or
dec
sub
fisubr
or
cmp
xor
test
pop
sub
retf
or
sub
inc
adc
pop
cmp
test
jge
jmp
js
pop
cmp
test
inc
movs
jmp
js
pop
cmp
test
pop
movs
jmp
js
pop
cmp
test
outs
movs
jmp
inc
dec
sbb
or
call
adc
into
rcr
stos
mov
xor
sub
fisubr
or
aam
xor
fisubr
or
push
sub
fisubr
or
push
sub
test
pop
sub
retf
fld
mov
or
inc
or
inc
or
fisubr
or
or
xor
fisubr
or
jmp
fisubr
or
sub
fisubr
or
xor
xor
test
pop
sub
dec
sub
inc
or
inc
adc
pop
cmp
test
pop
movs
jmp
js
pop
cmp
test
jns
jmp
js
pop
cmp
test
movs
jmp
js
pop
cmp
test
bound
mov
inc
(bad)
das
cmps
mov
add
cmp
pop
cmp
fild
and
inc
or
rol
popa
fisub
dec
movs
(bad)
mov
cmp
mov
test
sbb
call
mov
mov
test
dec
sub
movs
mov
cmp
mov
dec
mov
movs
sti
out
adc
and
sub
sub
out
cdq
jbe
xchg
movs
out
pop
xor
push
inc
sub
data16
rol
mov
mov
clc
mov
cmp
mov
nop
test
sub
sub
out
cdq
jbe
xchg
movs
outs
pop
xor
push
inc
sub
data16
rol
cmc
mov
push
clc
mov
cmp
mov
nop
mov
mov
imul
sbb
jl
jbe
xchg
movs
outs
pop
xor
push
inc
sub
data16
rol
cmc
mov
push
clc
mov
cmp
mov
push
test
sbb
cmp
ja
push
in
add
push
xor
ja
popa
(bad)
ds
mov
push
xor
push
(bad)
retf
sub
mov
leave
mov
push
xor
push
pop
cmc
xchg
pop
sub
dec
sub
(bad)
ds
mov
push
xor
sub
test
jne
sbb
cmp
jbe
xchg
movs
outs
popa
xor
push
inc
sub
data16
rol
mov
mov
clc
mov
cmp
mov
push
mov
test
jle
data16
stos
mov
xor
pop
sub
mov
jb
or
jb
gs
and
ja
or
push
gs
sub
data16
cdq
jbe
xchg
movs
outs
imul
mov
ds
jmp
leave
mov
push
xor
sub
push
gs
out
or
movs
cmps
push
cmp
cmp
test
jle
data16
stos
mov
xor
push
sub
push
or
or
jb
gs
and
ja
or
push
gs
sub
data16
cdq
jbe
xchg
movs
outs
push
xor
mov
cmps
ds
jmp
leave
mov
push
xor
mov
xor
sub
push
cmp
pop
cmp
test
je
jmp
stos
xor
jno
cmps
and
ja
fs
dec
xor
xor
sti
out
push
inc
sub
data16
cdq
jbe
xchg
movs
outs
sbb
das
mov
cmps
ds
jmp
leave
mov
push
xor
sub
push
gs
js
push
js
pop
cmp
test
jle
data16
stos
mov
xor
push
sub
dec
or
or
jb
gs
and
ja
or
push
gs
sub
data16
cdq
jbe
xchg
movs
outs
push
xor
mov
cmps
ds
jmp
leave
mov
push
xor
sub
push
gs
out
sbb
movs
cmps
push
cmp
cmp
test
jle
data16
stos
mov
xor
push
sub
jg
or
or
jb
gs
and
ja
or
push
gs
sub
data16
cdq
jbe
xchg
movs
outs
push
xor
stos
cld
jecxz
mov
ds
jmp
leave
mov
push
xor
mov
xor
sub
push
cmp
pop
cmp
test
je
jmp
lods
xor
jno
cmps
and
ja
fs
cmp
jbe
xchg
movs
outs
popa
xor
push
inc
sub
data16
inc
inc
cmp
mov
push
clc
mov
cmp
mov
push
test
sbb
cmp
ja
push
in
add
push
xor
ja
popa
(bad)
ds
mov
push
xor
(bad)
dec
cld
sub
jne
pop
test
lods
jmp
movs
mov
or
jb
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
or
push
gs
sub
data16
jae
out
cdq
jbe
xchg
movs
outs
jnp
movs
cmps
mov
xchg
mov
ds
jmp
leave
mov
push
xor
ror
push
cmp
retf
pop
cmp
gs
jmp
inc
sub
data16
cdq
jbe
xchg
movs
out
addr16
lods
sbb
fisubr
xor
movs
data16
data16
mov
cmp
mov
into
xchg
inc
or
inc
or
inc
add
repnz
cmp
sbb
sub
pop
mov
dec
jb
gs
cmp
ja
cmp
fs
or
dec
sub
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
or
push
gs
sub
mov
mov
test
cmc
xor
out
sbb
mov
push
clc
mov
cmp
mov
push
mov
test
jle
jmp
js
pop
cmp
test
dec
movs
jmp
js
pop
cmp
test
in
(bad)
ja
retf
push
gs
sub
add
pop
cmc
xchg
pop
sub
dec
stos
das
loope
aaa
push
xor
mov
jmp
leave
mov
push
xor
cmp
inc
or
inc
or
fisubr
or
movs
dec
and
sbb
cmp
jbe
xchg
movs
out
fnsave
dec
sbb
aas
cdq
jbe
xchg
movs
out
in
push
mov
push
js
pop
cmp
test
push
movs
jmp
inc
mov
sbb
and
int
outs
loope
sub
cmps
sbb
jbe
or
cmps
fs
inc
or
inc
sbb
(bad)
mov
rcl
push
push
gs
fs
lds
jmp
add
sub
mov
dec
movs
(bad)
mov
cmp
mov
test
sbb
call
mov
mov
test
dec
sub
movs
mov
cmp
mov
dec
mov
ins
and
jmp
inc
sub
add
mov
xor
sub
fisubr
or
stos
dec
and
sbb
aas
cdq
jbe
xchg
movs
outs
dec
xor
dec
push
sbb
push
adc
mov
xor
push
jae
and
push
cmp
jmp
leave
mov
push
xor
cmp
inc
or
inc
or
fisubr
or
xor
xor
fisubr
or
(bad)
sub
fisubr
or
stos
dec
and
sbb
aas
cdq
jbe
xchg
movs
outs
dec
xor
dec
push
sbb
push
adc
mov
xor
push
jae
sub
push
cmp
(bad)
ds
mov
push
xor
cmp
inc
or
inc
or
fild
in
in
cdq
jbe
dec
movs
jmp
jne
sbb
cmp
jbe
xchg
movs
out
call
js
pop
cmp
test
movs
jmp
js
pop
cmp
test
stc
(bad)
ja
retf
push
gs
sub
data16
xchg
dec
push
popf
fs
xor
(bad)
jnp
pusha
jg
sub
mov
push
cmp
mov
into
xchg
inc
or
inc
adc
pop
cmp
test
movs
jmp
js
pop
cmp
test
push
movs
jmp
js
pop
cmp
test
stc
(bad)
ja
retf
push
gs
sub
data16
xchg
dec
push
popf
fs
xor
(bad)
jnp
pusha
aas
jg
test
ja
mov
jb
gs
add
ja
rol
into
rol
dec
iret
jne
sub
mov
pop
xor
fisubr
or
movs
dec
and
sbb
cmp
jbe
xchg
movs
outs
jp
movs
cmps
dec
and
sbb
aas
cdq
jbe
xchg
movs
out
out
mov
push
js
pop
cmp
test
push
movs
jmp
inc
mov
sbb
and
int
outs
mov
mov
pushf
sbb
jbe
or
cmps
fs
inc
or
rcr
es
cmp
pop
cmp
cwde
data16
movs
cmps
push
cmp
cmp
test
test
out
push
gs
sub
ja
retf
push
gs
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
mov
push
mov
lock
jmp
sbb
add
ja
rol
into
rol
into
retf
push
gs
sub
data16
push
inc
sub
ja
retf
push
gs
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
xor
xor
(bad)
ds
mov
push
xor
cmp
inc
or
inc
or
fistp
sub
push
in
cdq
jbe
jbe
(bad)
sbb
movs
cmps
push
cmp
cmp
test
test
out
push
gs
sub
ja
retf
push
gs
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
mov
ins
mov
data16
jb
gs
add
ja
rol
into
rol
into
retf
push
gs
sub
data16
push
inc
sub
ja
retf
push
gs
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
mov
sbb
xchg
ja
dec
sub
gs
add
ja
rol
into
rol
dec
iret
fwait
data16
mov
push
xor
nop
data16
mov
or
movs
dec
and
sbb
cmp
jbe
xchg
movs
outs
jp
movs
cmps
dec
and
sbb
aas
cdq
jbe
xchg
movs
out
out
mov
push
js
pop
cmp
test
push
movs
jmp
inc
mov
sbb
and
int
outs
mov
cmps
push
cmp
mov
into
xchg
inc
or
inc
adc
pop
cmp
test
movs
jmp
js
pop
cmp
test
push
movs
jmp
js
pop
cmp
test
stc
(bad)
ja
retf
push
gs
sub
data16
xchg
dec
push
popf
fs
xor
(bad)
jnp
pusha
jg
sub
mov
push
cmp
mov
into
xchg
inc
or
inc
adc
mov
sub
inc
or
inc
or
inc
adc
sbb
cmp
ja
adc
in
imul
daa
jge
mov
dec
pusha
jne
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jb
fs
sbb
push
adc
mov
xor
cdq
jbe
or
movs
fs
cmp
jbe
xchg
movs
out
call
js
pop
cmp
test
movs
jmp
js
pop
cmp
test
stc
(bad)
ja
retf
push
gs
sub
data16
xchg
dec
push
popf
fs
xor
(bad)
jnp
pusha
jg
sub
mov
push
cmp
mov
into
xchg
inc
or
inc
adc
pop
cmp
test
movs
jmp
js
pop
cmp
test
push
movs
jmp
js
pop
cmp
test
stc
(bad)
ja
retf
push
gs
sub
data16
xchg
dec
push
popf
fs
xor
(bad)
jnp
pusha
dec
xor
mov
push
cmp
mov
into
xchg
inc
or
inc
adc
sbb
cmp
ja
push
in
add
push
xor
ja
popa
(bad)
ds
mov
push
xor
push
(bad)
retf
sub
mov
leave
mov
push
xor
push
pop
cmc
xchg
pop
sub
dec
sub
(bad)
ds
mov
push
xor
stos
mov
xor
fs
or
push
gs
sub
lock
mov
jb
or
jb
gs
and
ja
or
call
pop
leave
mov
push
test
popa
fisub
dec
movs
(bad)
mov
cmp
mov
test
sbb
call
mov
mov
test
dec
sub
movs
mov
cmp
mov
push
cmps
(bad)
daa
dec
pop
mov
dec
pusha
jne
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jb
fs
sbb
push
adc
mov
xor
cdq
jbe
or
movs
fs
cmp
jbe
xchg
movs
out
sti
push
mov
push
js
pop
cmp
test
jle
jmp
js
pop
cmp
test
test
in
push
gs
sub
add
pop
cmc
xchg
pop
sub
dec
jmp
das
mov
mov
repz
aas
les
and
sbb
or
cmps
fs
inc
or
rcr
cmc
movs
es
cmp
pop
cmp
cwde
data16
(bad)
jnp
pusha
mov
ja
mov
jb
gs
add
ja
rol
into
rol
dec
iret
xchg
xor
mov
pop
xor
mov
repz
mov
sbb
or
cmps
fs
inc
or
inc
sbb
aad
pop
push
movs
and
dec
test
repz
mov
sbb
or
cmps
fs
inc
or
inc
sbb
aad
pop
push
gs
cmp
push
xor
andps
xor
mov
push
xor
cmp
inc
or
inc
or
fidivr
retf
movs
fs
in
cdq
jbe
jne
xor
cmp
sbb
sub
pop
mov
dec
jb
gs
cmp
ja
cmp
fs
or
dec
sub
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
psadbw
sub
mov
dec
movs
(bad)
mov
cmp
mov
test
sbb
call
mov
mov
test
dec
sub
movs
mov
cmp
mov
dec
mov
in
sti
dec
push
inc
sub
data16
push
inc
sub
data16
push
inc
sub
add
mov
xor
stos
dec
and
push
sbb
push
adc
mov
xor
sub
cmp
test
test
out
push
gs
sub
data16
push
inc
sub
add
mov
xor
stos
dec
and
push
sbb
push
adc
mov
xor
push
repz
rcr
and
sbb
or
cmps
fs
inc
or
inc
sbb
(bad)
mov
shl
push
push
gs
imul
daa
jge
mov
dec
pusha
jne
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jb
fs
sbb
push
adc
mov
xor
cdq
jbe
or
movs
fs
pop
fisub
dec
mov
ins
and
push
fs
push
fs
cmps
into
adc
into
rol
into
rol
(bad)
retf
into
rol
into
rol
or
inc
or
inc
or
inc
and
jbe
jnp
cmp
mov
mul
(bad)
daa
jge
mov
dec
pusha
jne
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jb
fs
sbb
push
adc
mov
xor
cdq
jbe
or
movs
fs
push
in
add
push
xor
ja
popa
(bad)
ds
mov
push
xor
push
(bad)
retf
sub
mov
leave
mov
push
xor
push
pop
cmc
xchg
pop
sub
dec
sub
(bad)
ds
mov
push
xor
mov
into
rol
into
rol
into
rol
cdq
into
rol
into
rol
into
rol
retf
sbb
cmp
jbe
xchg
movs
out
call
js
pop
cmp
test
jle
jmp
js
pop
cmp
movs
imul
mov
push
js
pop
cmp
movs
imul
inc
mov
sbb
and
int
popa
jno
cmps
mov
pusha
xchg
cmps
fs
inc
or
inc
sbb
(bad)
mov
repnz
xchg
mov
sub
lods
mov
call
jne
jmp
rol
stos
in
push
aad
fiadd
sub
mov
dec
movs
(bad)
mov
cmp
mov
test
sbb
call
mov
mov
test
dec
sub
movs
mov
cmp
mov
dec
mov
fidivr
test
out
push
gs
sub
data16
push
inc
sub
data16
push
inc
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
mov
or
jns
jb
gs
add
ja
rol
into
rol
dec
iret
mov
imul
add
sub
sbb
cmp
jbe
xchg
movs
outs
sbb
dec
sbb
cmp
jbe
xchg
movs
outs
push
xor
dec
sbb
aas
cdq
jbe
xchg
movs
out
call
js
pop
cmp
test
push
movs
jmp
inc
mov
sbb
and
int
outs
sahf
data16
mov
and
xchg
cmps
fs
inc
or
inc
sbb
cld
cdq
jbe
xchg
movs
out
mov
and
sbb
cmp
jbe
xchg
movs
out
(bad)
xor
dec
sbb
aas
cdq
jbe
xchg
movs
out
call
js
pop
cmp
test
push
movs
jmp
inc
mov
sbb
and
int
outs
mov
cmps
push
cmp
mov
into
xchg
inc
or
inc
add
jmp
sbb
mov
fisubr
or
push
sub
fisubr
or
sbb
xor
fisubr
or
movs
dec
and
sbb
aas
cdq
jbe
xchg
movs
outs
dec
xor
dec
push
sbb
push
adc
mov
xor
push
repz
call
and
xchg
cmps
fs
inc
or
rcr
dec
cmp
push
cmp
movs
jmp
gs
sub
data16
push
inc
sub
data16
push
inc
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
mov
pop
mov
lock
jb
gs
add
ja
rol
into
rol
into
retf
push
gs
sub
data16
push
inc
sub
data16
push
inc
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
mov
pop
mov
data16
mov
mov
jb
gs
add
ja
rol
into
rol
dec
iret
and
mov
imul
jns
out
cdq
jbe
xchg
movs
outs
sbb
dec
sbb
cmp
jbe
xchg
movs
outs
push
xor
dec
sbb
aas
cdq
jbe
xchg
movs
out
call
js
pop
cmp
test
push
movs
jmp
inc
mov
sbb
and
int
outs
icebp
data16
bound
sbb
or
cmps
fs
inc
or
rcr
dec
cmp
push
cmp
push
inc
sub
data16
push
inc
sub
data16
push
inc
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
mov
pop
mov
data16
ja
dec
sub
gs
add
ja
rol
into
rol
dec
iret
out
sub
popa
add
jns
out
cdq
jbe
xchg
movs
outs
sbb
dec
sbb
cmp
jbe
xchg
movs
outs
push
xor
dec
sbb
aas
cdq
jbe
xchg
movs
out
call
js
pop
cmp
test
push
movs
jmp
inc
mov
sbb
and
int
outs
shl
(bad)
call
cmps
and
xchg
cmps
fs
inc
or
rcr
dec
cmp
push
cmp
push
inc
sub
data16
push
inc
sub
data16
push
inc
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
mov
or
mov
retf
push
gs
add
ja
rol
into
rol
dec
iret
test
sub
mov
imul
sbb
mov
movs
outs
sbb
dec
sbb
cmp
jbe
xchg
movs
outs
push
xor
dec
sbb
aas
cdq
jbe
xchg
movs
out
call
js
pop
cmp
test
push
movs
jmp
inc
mov
sbb
and
int
outs
mov
cmp
cmps
push
cmp
mov
into
xchg
inc
or
inc
add
fisub
sub
ja
fisubr
or
push
sub
fisubr
or
sbb
xor
fisubr
or
movs
dec
and
sbb
aas
cdq
jbe
xchg
movs
outs
dec
xor
dec
push
sbb
push
adc
mov
xor
push
jae
or
dec
cmp
mov
push
xor
cmp
inc
or
inc
or
fbstp
and
ja
mov
cmp
test
inc
movs
jmp
js
pop
cmp
test
dec
movs
jmp
js
pop
cmp
test
test
in
push
gs
sub
data16
xchg
dec
push
popf
fs
xor
(bad)
jnp
pusha
jg
mov
mov
dec
sub
gs
add
ja
rol
into
rol
dec
iret
push
data16
mov
push
jl
jbe
xchg
movs
outs
sbb
dec
sbb
cmp
jbe
xchg
movs
outs
push
xor
dec
sbb
aas
cdq
jbe
xchg
movs
out
call
js
pop
cmp
test
push
movs
jmp
inc
mov
sbb
and
int
outs
nop
data16
or
cmps
and
xchg
cmps
fs
inc
or
rcr
dec
cmp
push
cmp
push
inc
sub
data16
push
inc
sub
data16
push
inc
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
xor
scas
add
jmp
leave
mov
push
xor
cmp
inc
or
inc
or
fist
sub
push
and
jbe
mov
cmp
test
inc
movs
jmp
js
pop
cmp
test
dec
movs
jmp
js
pop
cmp
test
test
in
push
gs
sub
data16
xchg
dec
push
popf
fs
xor
(bad)
jnp
pusha
mov
ja
mov
jb
gs
add
ja
rol
into
rol
dec
iret
cld
data16
mov
imul
cdq
jbe
xchg
movs
outs
sbb
dec
sbb
cmp
jbe
xchg
movs
outs
push
xor
dec
sbb
aas
cdq
jbe
xchg
movs
out
call
js
pop
cmp
test
push
movs
jmp
inc
mov
sbb
and
int
outs
and
jg
add
and
xchg
cmps
fs
inc
or
rcr
dec
cmp
push
cmp
push
inc
sub
data16
push
inc
sub
data16
push
inc
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
mov
or
mov
retf
push
gs
add
ja
rol
into
rol
into
iret
mov
ja
jbe
mov
cmp
test
inc
movs
jmp
js
pop
cmp
test
dec
movs
jmp
js
pop
cmp
test
test
in
push
gs
sub
data16
xchg
dec
push
popf
fs
xor
(bad)
jnp
pusha
call
xor
mov
push
cmp
mov
into
xchg
inc
or
inc
adc
sbb
cmp
ja
nop
mov
test
push
xor
daa
data16
mov
dec
pusha
jne
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jb
fs
sbb
push
adc
mov
xor
cdq
jbe
or
movs
fs
cmp
jbe
xchg
movs
out
call
js
pop
cmp
test
jle
jmp
js
pop
cmp
test
test
in
push
gs
sub
add
pop
cmc
xchg
pop
sub
dec
push
push
push
fs
int
outs
data16
cmp
mov
into
xchg
inc
or
inc
adc
pop
cmp
test
inc
movs
jmp
js
pop
cmp
test
dec
movs
jmp
js
pop
cmp
test
test
in
push
gs
sub
data16
xchg
dec
push
popf
fs
xor
(bad)
jnp
pusha
mov
cld
push
sbb
cmp
mov
into
xchg
inc
or
inc
adc
pop
cmp
test
test
out
push
gs
sub
data16
push
inc
sub
data16
push
inc
sub
data16
xchg
dec
push
popf
fs
xor
jns
cmp
mov
repz
sbb
or
cmps
fs
inc
or
inc
sbb
cld
cdq
jbe
xchg
movs
outs
sbb
dec
sbb
cmp
jbe
xchg
movs
outs
shl
dec
sbb
aas
cdq
jbe
xchg
movs
outs
sbb
dec
sbb
aas
cdq
jbe
xchg
movs
outs
dec
xor
dec
push
sbb
push
adc
mov
xor
mov
xor
(bad)
jnp
pusha
inc
xor
mov
cmp
mov
into
xchg
inc
or
inc
adc
sbb
cmp
ja
setbe
mov
test
jmp
jne
add
sub
mov
dec
movs
(bad)
mov
cmp
mov
test
sbb
call
mov
mov
test
dec
sub
movs
mov
cmp
mov
push
mov
test
test
out
push
gs
sub
data16
push
inc
sub
add
mov
xor
mov
sbb
in
adc
mov
xor
mov
xor
(bad)
jnp
pusha
mov
jb
gs
add
ja
rol
into
rol
into
retf
push
gs
sub
data16
push
inc
sub
data16
push
inc
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
mov
or
jns
jb
gs
add
ja
rol
into
rol
into
retf
push
gs
sub
add
mov
xor
sub
cmp
fisubr
or
inc
sub
fisubr
or
dec
sub
test
pop
sub
dec
push
stos
jle
fs
int
outs
fs
cmp
mov
into
xchg
inc
or
inc
adc
pop
cmp
test
inc
movs
jmp
js
pop
cmp
test
dec
movs
jmp
js
pop
cmp
test
push
movs
jmp
js
pop
cmp
test
push
movs
jmp
inc
mov
sbb
in
and
das
loope
aaa
push
mov
jmp
or
jb
gs
add
ja
rol
into
rol
into
retf
push
jo
call
sub
push
in
cdq
jbe
pop
movs
jmp
jne
add
sub
mov
dec
movs
(bad)
mov
cmp
mov
test
sbb
call
mov
mov
test
dec
sub
movs
mov
cmp
mov
push
mov
test
test
out
push
gs
sub
data16
push
inc
sub
add
mov
xor
mov
sbb
in
adc
mov
xor
mov
xor
(bad)
jnp
pusha
mov
jb
gs
add
ja
rol
into
rol
into
retf
push
gs
sub
data16
push
inc
sub
data16
push
inc
sub
add
mov
xor
add
xor
test
pop
sub
dec
stos
das
loope
aaa
push
mov
or
jns
jb
gs
add
ja
rol
into
rol
into
retf
push
jo
call
sub
add
sub
mov
dec
movs
(bad)
mov
cmp
mov
test
sbb
call
mov
mov
test
dec
sub
movs
mov
cmp
mov
push
mov
test
test
out
push
gs
sub
data16
push
inc
sub
add
mov
xor
mov
sbb
in
adc
mov
xor
mov
xor
(bad)
jnp
pusha
mov
jb
gs
add
ja
rol
into
rol
into
retf
push
jo
call
jge
mov
dec
pusha
jne
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jb
fs
sbb
push
adc
mov
xor
cdq
jbe
or
movs
fs
cmp
jbe
xchg
movs
outs
sbb
dec
sbb
cmp
jbe
xchg
movs
outs
shl
dec
sbb
aas
cdq
jbe
xchg
movs
out
call
js
pop
cmp
test
push
movs
jmp
inc
mov
sbb
and
int
outs
and
aas
sbb
and
sbb
or
cmps
fs
inc
or
inc
sbb
(bad)
mov
ror
push
push
movs
cmps
imul
daa
jge
mov
dec
pusha
jne
fs
cmp
jno
cmps
and
push
fs
sbb
push
adc
dec
pop
(bad)
or
cmps
and
jb
fs
sbb
push
adc
mov
xor
cdq
jbe
or
movs
fs
cmp
jbe
xchg
movs
out
call
js
pop
cmp
test
dec
movs
jmp
js
pop
cmp
test
test
in
push
gs
sub
add
pop
cmc
xchg
pop
sub
dec
stos
das
loope
aaa
push
xor
and
(bad)
ds
mov
push
xor
cmp
inc
or
inc
or
fisubr
or
movs
dec
and
sbb
cmp
jbe
xchg
movs
outs
shl
dec
sbb
aas
cdq
jbe
xchg
movs
out
in
push
mov
push
js
pop
cmp
test
stc
(bad)
ja
stc
xchg
dec
push
popf
fs
xor
(bad)
jnp
pusha
aas
pusha
xor
sub
gs
add
ja
rol
into
rol
into
retf
push
gs
sub
data16
push
inc
sub
data16
push
inc
sub
add
mov
xor
stos
dec
and
push
sbb
push
adc
mov
xor
push
repz
sub
cmp
mov
into
xchg
inc
or
inc
adc
pop
cmp
test
test
out
push
gs
sub
data16
push
inc
sub
add
mov
xor
mov
and
push
sbb
push
adc
mov
xor
push
repz
aas
jbe
and
sbb
or
cmps
fs
inc
or
inc
sbb
(bad)
mov
push
mov
test
cmc
(bad)
ja
retf
push
gs
sub
data16
push
inc
sub
data16
push
inc
sub
data16
xchg
dec
pop
add
mov
add
into
rol
add
sub
mov
dec
movs
(bad)
mov
cmp
mov
test
dec
sbb
xchg
mov
cmp
mov
test
aas
sbb
mov
pop
cmp
mov
push
mov
test
cmc
(bad)
ja
retf
push
gs
sub
add
mov
xor
add
xor
fisubr
or
or
cmp
test
pop
sub
dec
stos
das
in
add
sub
(bad)
ds
mov
push
xor
cmp
inc
or
inc
or
fisubr
or
mov
out
cdq
jbe
xchg
movs
outs
ins
xor
dec
sbb
aas
cdq
jbe
xchg
movs
outs
dec
xor
dec
sbb
aas
cdq
jbe
xchg
movs
outs
inc
xor
dec
push
sbb
push
adc
mov
xor
push
repz
mov
and
sbb
or
cmps
fs
inc
or
inc
sbb
cld
cdq
jbe
xchg
movs
scas
ins
xor
dec
sbb
cmp
jbe
xchg
movs
out
pop
xor
dec
sbb
aas
cdq
jbe
xchg
movs
outs
dec
xor
dec
sbb
aas
cdq
jbe
xchg
movs
outs
inc
xor
dec
push
sbb
push
adc
mov
xor
push
repz
mov
sbb
or
cmps
fs
inc
or
inc
sbb
cld
cdq
jbe
xchg
movs
out
pop
xor
dec
sbb
cmp
jbe
xchg
movs
out
movs
xor
dec
sbb
aas
cdq
jbe
xchg
movs
outs
dec
xor
dec
sbb
aas
cdq
jbe
xchg
movs
outs
inc
xor
dec
push
sbb
push
adc
mov
xor
push
repz
call
and
xchg
cmps
fs
inc
or
inc
sbb
cld
cdq
jbe
xchg
movs
out
movs
xor
dec
sbb
cmp
jbe
xchg
movs
scas
lahf
xor
dec
sbb
aas
cdq
jbe
xchg
movs
outs
dec
xor
dec
sbb
aas
cdq
jbe
xchg
movs
outs
inc
xor
dec
push
sbb
push
adc
mov
xor
push
repz
mov
sbb
or
cmps
fs
inc
or
inc
sbb
cld
cdq
jbe
xchg
movs
scas
lahf
xor
dec
sbb
cmp
jbe
xchg
movs
scas
jecxz
movs
cmps
dec
and
sbb
aas
cdq
jbe
xchg
movs
outs
dec
xor
dec
sbb
aas
cdq
jbe
xchg
movs
outs
inc
xor
dec
push
sbb
push
adc
mov
xor
push
repz
lahf
add
jbe
or
cmps
fs
inc
or
inc
push
in
cdq
jbe
jne
mov
cmp
test
jl
jmp
js
pop
cmp
test
dec
movs
jmp
js
pop
cmp
test
push
movs
jmp
js
pop
cmp
test
pop
movs
jmp
inc
mov
sbb
and
int
outs
mov
cmps
push
cmp
mov
into
xchg
inc
or
inc
adc
sbb
cmp
ja
adc
movs
cmps
imul
stos
mov
xor
cmps
dec
and
sbb
cmp
jbe
xchg
movs
outs
repz
mov
push
js
pop
cmp
test
push
movs
jmp
js
pop
cmp
test
pop
movs
jmp
inc
dec
sbb
or
call
adc
into
rol
into
rol
dec
hlt
ret
dec
cmp
sbb
sub
pop
mov
dec
jb
gs
cmp
ja
cmp
fs
or
dec
sub
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
das
in
add
sub
(bad)
ds
mov
push
xor
cmp
inc
or
inc
or
fidivr
retf
movs
fs
enter
dec
cmp
pop
cmp
gs
jmp
inc
sub
add
mov
xor
and
xor
fisubr
or
add
xor
fisubr
or
or
cmp
test
pop
sub
mov
mov
or
inc
add
ret
dec
cmp
sbb
sub
pop
mov
dec
jb
gs
cmp
ja
cmp
fs
or
dec
sub
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
das
in
add
cs
jbe
cmp
jmp
leave
mov
push
xor
cmp
inc
or
inc
or
fidivr
retf
movs
fs
xor
gs
jmp
inc
sub
data16
(bad)
ja
retf
push
gs
sub
ja
retf
push
gs
sub
data16
push
inc
sub
data16
xchg
mov
popf
fs
or
shr
movs
jmp
rol
into
rol
add
sub
mov
dec
movs
(bad)
mov
cmp
mov
test
sbb
call
mov
mov
test
dec
sub
movs
mov
cmp
mov
jo
(bad)
jnp
pusha
jmp
fwait
(bad)
ja
retf
push
gs
add
ja
rol
into
rol
into
retf
push
jo
call
sub
push
in
cdq
jbe
jne
inc
sbb
movs
cmps
push
cmp
cmp
test
inc
movs
jmp
js
pop
cmp
test
jnp
jmp
js
pop
cmp
test
push
movs
jmp
js
pop
cmp
test
pop
movs
jmp
inc
dec
sbb
or
call
adc
into
rol
into
rol
dec
hlt
ret
dec
cmp
sbb
sub
pop
mov
dec
jb
gs
cmp
ja
cmp
fs
or
dec
sub
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
das
in
add
sub
(bad)
ds
mov
push
xor
cmp
inc
or
inc
or
fidivr
retf
movs
fs
adc
retf
pop
cmp
fs
jmp
inc
sub
data16
(bad)
ja
retf
push
gs
sub
data16
(bad)
ja
retf
push
gs
sub
data16
push
inc
sub
data16
xchg
mov
popf
fs
or
rcr
or
inc
or
inc
sbb
(bad)
mov
dec
mov
dec
cmp
sbb
sub
pop
mov
dec
jb
gs
cmp
ja
cmp
fs
or
dec
sub
gs
and
ja
cmp
fs
xor
sub
gs
and
ja
das
in
add
sub
(bad)
ds
mov
push
xor
cmp
inc
or
inc
or
fidivr
retf
movs
fs
cmp
fisub
into
xchg
inc
or
inc
or
inc
and
pop
je
retf
movs
fs
inc
or
rol
inc
or
inc
or
inc
adc
add
cmps
and
lahf
cmps
fs
inc
or
mov
call
into
rol
into
rol
into
rcl
cmps
into
adc
into
rol
into
rol
mov
movs
mov
sub
inc
or
inc
or
aam
aaa
shl
imul
repnz
cmp
jmp
data16
jns
aad
mov
jne
retf
js
ror
(bad)
aam
mov
loopne
into
inc
loopne
push
sbb
(bad)
sub
sbb
inc
loopne
into
inc
loopne
push
addr16
and
(bad)
(bad)
jmp
daa
dec
mov
and
jecxz
xor
aaa
data16
jecxz
fcomp
push
mov
leave
out
jmp
sbb
xor
cli
sub
add
sub
sbb
inc
loopne
into
inc
loopne
into
inc
in
xor
add
rcl
add
into
inc
loopne
into
inc
loopne
into
inc
loopne
sub
sub
sub
loopne
into
inc
loopne
sub
cmp
sub
and
into
inc
in
xor
and
aad
loopne
into
inc
loopne
into
inc
enter
xchg
mov
into
inc
loopne
into
inc
loopne
push
in
push
mov
mov
gs
aad
cmp
into
inc
loopne
dec
add
sbb
inc
loopne
into
inc
loopne
into
shl
aad
cmp
into
inc
loopne
into
inc
loopne
cmp
sbb
inc
loopne
into
inc
loopne
into
inc
(bad)
cmp
sbb
in
or
ds
aad
sti
sbb
inc
loopne
into
inc
loopne
adc
aad
loopne
into
inc
loopne
into
inc
loopne
into
das
lock
out
(bad)
out
jmp
sbb
inc
loopne
into
out
neg
inc
loopne
into
inc
loopne
into
inc
loopne
into
shl
aad
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
imul
cmp
arpl
sbb
inc
loopne
fwait
mov
(bad)
sub
loopne
into
inc
loopne
into
sbb
pop
sbb
into
push
mov
push
aad
mov
sbb
inc
loopne
sbb
add
pop
mov
sbb
inc
loopne
into
inc
enter
xchg
mov
into
inc
loopne
push
out
mov
into
inc
loopne
into
inc
out
mov
into
inc
loopne
into
inc
loopne
into
inc
loopne
mov
jmp
add
ds
jo
mov
inc
(bad)
jmp
sbb
inc
loopne
jmp
xchg
push
sahf
adc
inc
(bad)
push
das
inc
cmps
pop
cmp
into
inc
loopne
into
inc
loopne
sbb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
repnz
mov
sbb
inc
loopne
and
sub
jmp
les
repnz
cmc
imul
lahf
dec
pop
arpl
movs
inc
fnstsw
imul
mov
add
inc
sahf
retf
pop
aas
in
jns
movs
add
mov
add
loopne
mov
pop
cmp
fsubr
pop
pop
and
jmp
(bad)
call
mov
iret
out
stos
sub
jmp
adc
iret
jmp
mov
(bad)
push
xor
sub
fisubr
mov
fld
pop
clc
fcom
sbb
mov
mov
(bad)
stos
dec
xor
mov
jmp
pop
ret
add
sub
aad
sti
push
inc
jmp
add
in
jmp
jp
jne
push
sub
pop
jnp
push
xor
sub
out
pop
xchg
aam
in
nop
lods
cld
mov
(bad)
inc
jmp
jg
cdq
inc
adc
xchg
ds
or
aad
lock
adc
cmp
aad
cli
aas
imul
jmp
mov
or
fnstenv
pop
and
and
add
add
imul
mov
jno
sbb
jno
sbb
jne
cmp
test
sbb
fist
lahf
test
cmp
mov
xor
sbb
test
sbb
jno
adc
jno
sbb
icebp
mov
xor
sbb
jno
sbb
icebp
jns
lahf
test
sbb
jno
sbb
jno
sbb
push
mov
xor
sbb
jle
test
xor
sbb
jecxz
cmp
mov
xor
adc
fiadd
xor
sbb
jno
sbb
mov
mov
xor
sbb
jno
sbb
icebp
jns
lahf
test
sbb
jno
sbb
jno
sbb
in
push
cmp
mov
xor
sbb
jno
sbb
mov
mov
xor
sbb
jno
sbb
mov
mov
xor
sbb
xchg
test
(bad)
mov
push
adc
aam
mov
aad
mov
cwde
aam
mov
xchg
sub
rcr
inc
clc
out
mov
sti
ror
fmulp
es
inc
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
sbb
div
cmp
mov
sbb
inc
loopne
and
mov
jmp
les
sub
cld
push
cmp
lahf
imul
(bad)
sbb
int
mov
inc
shr
pop
aam
sub
push
into
idiv
mov
jno
movs
inc
inc
add
and
pop
cmp
sbb
cmp
xchg
or
or
test
dec
push
or
hlt
adc
(bad)
(bad)
jmp
hlt
sub
test
ret
jb
sbb
sbb
jecxz
mov
sahf
adc
sub
push
loop
push
push
push
movs
les
sbb
pop
data16
test
cdq
ret
sub
loopne
fild
mov
jmp
jecxz
aas
les
jb
int
popa
xchg
cld
adc
out
xchg
mov
aad
cli
aas
imul
cli
inc
out
ret
cli
mov
mov
and
inc
outs
lock
(bad)
sub
sbb
cmp
scas
or
and
out
ss
test
pop
cmp
pop
cld
cmp
pop
gs
sbb
stc
add
(bad)
jns
inc
clc
sub
jmp
shr
push
ins
data16
ds
dec
pusha
iret
mov
data16
data16
xor
cdq
inc
pop
(bad)
movs
sbb
mov
data16
ins
data16
pusha
pop
push
ins
data16
data16
leave
iret
mov
data16
data16
xchg
sbb
ins
data16
stos
xor
cdq
inc
cmp
ins
data16
mov
cmp
ins
data16
push
push
ins
data16
data16
cmc
fidiv
data16
ins
stos
xor
cmp
ins
data16
data16
lock
ins
data16
data16
data16
xchg
push
push
ins
data16
data16
data16
sti
fidiv
data16
ins
data16
leave
iret
mov
data16
data16
scas
jbe
into
iret
mov
lods
fdiv
imul
cmp
cdq
ret
ds
iret
div
push
and
cdq
and
aad
mov
out
sub
and
into
inc
loopne
into
inc
loopne
into
inc
hlt
sub
sbb
jo
daa
jg
out
push
(bad)
ds
pop
and
pop
mov
sbb
inc
loopne
into
inc
in
inc
fcom
sub
in
fldcw
sbb
inc
loopne
into
inc
loopne
into
(bad)
in
outs
out
push
mov
sub
adc
sub
jg
repz
inc
or
rcl
add
lods
cmp
(bad)
in
inc
add
retf
pop
push
(bad)
sub
and
repz
pop
or
or
dec
sub
ret
aam
dec
sub
cmp
dec
fistp
int
xchg
xlat
pop
or
stos
or
mov
arpl
inc
repz
add
mov
pop
sbb
or
sub
sub
idiv
jmp
(bad)
fadd
cmc
aas
dec
cdq
add
add
arpl
sub
test
(bad)
cmp
add
inc
sti
int
xchg
mov
fld
pop
push
sahf
adc
fistp
scas
dec
push
pop
rcr
push
das
inc
nop
push
add
add
dec
jmp
jecxz
push
test
and
sahf
adc
pop
mov
jp
std
pop
jnp
mov
jmp
shr
fld
mov
mov
test
add
pop
aad
add
push
push
mov
sti
rcl
add
int
sbb
fdivr
xor
pop
cmp
mov
sbb
out
pop
fucom
ret
out
mov
jmp
(bad)
cdq
pop
(bad)
addr16
aas
add
cwde
inc
fbld
add
aas
add
jge
loope
mov
aas
add
jge
fimul
shl
nop
mov
loopne
icebp
xchg
and
pop
cmp
sti
cdq
sbb
cli
addr16
aas
add
jge
aas
add
shl
aas
add
jno
fsub
out
inc
sub
pusha
aas
inc
jge
aas
add
jecxz
(bad)
jge
aas
add
outs
inc
aas
lds
aas
add
call
cmc
mov
inc
aas
add
xor
lock
jns
in
cdq
mov
shl
cdq
mov
and
jge
aas
add
jge
aas
add
pop
inc
aas
lds
aas
add
cwde
dec
nop
mov
rcl
shl
aam
mov
imul
mov
inc
aas
add
mov
or
loope
rcl
shl
stos
mov
cdq
mov
aas
add
jge
stos
and
retf
mov
aas
add
jge
aas
add
mov
aas
lds
aas
add
je
retf
mov
aas
add
mov
aas
add
mov
test
aas
add
mov
inc
jge
aas
add
addr16
aas
add
jge
aas
add
mov
aas
lds
aas
add
jge
stos
and
retf
mov
aas
add
call
mov
aas
lds
aas
add
jl
retf
mov
aas
add
jge
stos
and
out
retf
mov
aas
add
jge
aas
add
mov
aas
lds
aas
add
mov
aas
lds
aas
add
pop
inc
aas
lds
call
add
aas
add
jge
aas
add
mov
add
lds
aas
add
inc
pop
and
jge
aas
add
jge
aas
add
loopne
in
scas
xor
mov
fstp
pusha
aas
lds
aas
add
inc
pop
and
jge
aas
add
jge
aas
add
pusha
cwde
sar
xor
mov
aas
lds
aas
add
stc
scas
xor
mov
fwait
mov
shl
sbb
jge
aas
add
jge
jg
cdq
sbb
addr16
aas
add
jge
aas
add
jb
retf
mov
aas
add
jge
stos
and
mov
aas
add
jge
aas
add
cdq
fimul
lds
aas
add
jge
shl
and
fbld
aas
add
jge
aas
add
shl
sbb
jge
aas
add
adc
aas
add
jge
aas
add
pop
inc
aas
lds
call
out
pop
and
jge
aas
add
jge
popa
sub
inc
aas
add
cdq
sbb
add
jge
aas
add
into
mov
push
mov
inc
aas
lds
aas
add
mov
mov
and
jge
aas
add
jge
jg
cdq
mov
aas
add
mov
mov
(bad)
add
(bad)
jge
aas
add
cwde
mov
jmp
loopne
fwait
xchg
jp
sahf
jge
aas
add
jge
aas
add
jge
aas
add
jge
aas
add
arpl
add
inc
aas
add
jge
aas
add
cdq
mov
and
jge
aas
add
jge
mov
loope
fistp
stc
adc
sbb
inc
aas
add
jge
sbb
mov
test
aad
fisubr
pop
das
xchg
mov
in
call
pop
and
jno
xchg
xor
mov
fld
adc
pop
jnp
mov
lods
and
mov
scas
add
xor
add
out
xor
out
jmp
(bad)
int3
call
and
into
inc
loopne
into
inc
loopne
xor
fidivr
push
scas
bound
repz
sti
sbb
inc
loopne
into
inc
loopne
and
jecxz
outs
xor
add
sub
jnp
mov
inc
and
into
inc
loopne
add
out
jmp
sbb
inc
loopne
stos
stc
test
sub
pusha
sbb
inc
loopne
into
inc
in
into
call
adc
cmp
push
(bad)
stos
mov
sub
inc
loopne
into
inc
loopne
into
mov
mov
arpl
sbb
inc
loopne
xor
fidivr
push
scas
pusha
mov
mov
sti
sbb
inc
loopne
into
inc
loopne
and
jecxz
outs
xor
add
sub
add
xor
cmp
inc
and
into
inc
loopne
into
inc
in
sbb
add
into
inc
loopne
into
inc
loopne
stos
stc
test
sub
and
into
inc
loopne
into
inc
hlt
sahf
and
adc
and
(bad)
jmp
retf
fsubr
cmp
dec
cli
pop
(bad)
adc
push
inc
clc
lahf
sub
cli
add
mov
cmp
xor
pop
push
or
xchg
int
adc
frstor
mov
cmp
popf
pop
cmp
inc
cmps
loop
xlat
sub
(bad)
sbb
(bad)
in
and
pop
(bad)
sahf
adc
shr
push
or
jle
sub
shl
or
mov
jecxz
jb
repnz
mov
not
pop
ds
push
jecxz
inc
test
cmp
ds
push
pop
sub
sub
and
fiadd
push
jns
les
pop
inc
cdq
test
mov
inc
sub
imul
outs
int3
jmp
cld
sub
jmp
mov
xor
sbb
(bad)
daa
aad
cmp
les
add
adc
sti
add
sbb
dec
jae
cli
(bad)
out
jnp
clc
int
mov
fidivr
aad
cmp
add
add
sub
loope
or
xor
aad
xchg
push
add
jmp
loope
rcr
cmps
cmc
fcmovnbe
dec
rol
das
mov
(bad)
jbe
data16
out
ss
out
jbe
data16
mov
jmpw
cmps
mov
jb
clc
ss
sti
jns
add
repz
imul
shl
or
mov
or
div
ret
(bad)
cmps
xchg
cmp
sub
xor
stos
or
mov
jmp
cmp
clc
imul
cmps
or
shl
inc
xchg
push
cwde
push
cmps
daa
xchg
add
rcr
or
mov
lea
xchg
jmpw
or
test
cmps
xchg
cmp
clc
ss
and
ss
or
mov
or
daa
push
or
adc
and
cmps
daa
aad
test
sbb
jp
cmp
leave
push
rcl
ja
dec
cmp
sbb
mov
es
and
push
dec
jecxz
mov
add
jmp
int
jmp
mov
inc
cmp
push
movs
jge
push
add
mov
std
mov
(bad)
nop
test
push
cmp
pop
cli
push
clc
leave
rol
sbb
mov
and
adc
push
pop
cmp
mov
cmp
xchg
dec
jmp
mov
jmp
ret
cli
imul
sub
cmp
jmp
sbb
sbb
fcmovu
pop
push
(bad)
in
xchg
jle
outs
sbb
aam
imul
test
rcl
cdq
inc
push
inc
retf
iret
ret
fist
ror
mov
nop
icebp
rol
jmp
ds
fld
or
pop
mov
inc
push
dec
adc
sub
stos
es
test
cmp
cmc
aas
dec
cdq
add
push
js
jmp
and
lods
pushf
pop
cli
(bad)
fistp
add
repnz
aad
and
(bad)
(bad)
leave
jmp
ds
test
ja
mov
jmp
pop
jnp
les
lds
sub
xlat
adc
add
pop
ja
push
add
xchg
inc
(bad)
cli
jg
sbb
push
cmp
test
and
cmc
add
and
fisubr
pop
sar
fistp
sti
adc
push
sti
pop
xchg
sti
fistp
sti
fistp
add
ss
push
cmp
sar
fistp
sti
fistp
adc
icebp
movs
fistp
retf
outs
cmp
push
jnp
mov
sti
pop
sar
fistp
sti
fistp
outs
sub
sar
fistp
sti
fistp
sti
fistp
cmc
pusha
ss
ds
sti
lds
sti
fistp
sti
fistp
sti
fistp
pusha
ss
ds
cmp
retf
aaa
movs
(bad)
pop
sar
fistp
sti
fistp
and
mov
cmc
aas
lds
(bad)
popa
mov
rcl
adc
fistp
sti
fistp
lods
loop
mov
pop
cmp
neg
sti
(bad)
je
cmc
pusha
(bad)
cmp
sti
pop
push
sti
fistp
sti
fistp
sti
pop
mov
rcl
jp
sti
fistp
sti
fistp
jnp
mov
sar
fistp
sti
fild
cmp
sti
pop
xchg
sti
fistp
sti
fistp
sti
lahf
arpl
mov
pop
adc
fistp
add
fisttp
sub
fistp
sti
(bad)
sub
add
fsub
fistp
sbb
icebp
movs
(bad)
pop
sar
fistp
sti
fistp
sti
pop
mov
push
sub
xor
cmp
mov
pop
mov
push
sub
test
mov
lds
je
cmc
in
mov
sar
fistp
push
aad
movs
pop
cmp
sar
fistp
sti
fistp
push
add
pop
sar
fistp
sti
fistp
sti
(bad)
xor
jo
cmc
pop
cmp
adc
fistp
sti
fistp
jge
inc
adc
fistp
sti
fistp
fst
or
inc
bound
pop
cmp
les
es
aad
jnp
mov
cmp
les
es
les
outs
cmp
cmp
sti
xor
cmp
stc
cmp
push
mov
out
je
jne
cmp
push
cmp
mov
les
mov
mov
ror
out
std
xchg
inc
(bad)
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
cmp
stos
lods
test
sub
jle
mov
add
sub
add
sub
adc
rol
ds
repnz
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
gs
out
sub
lahf
inc
mov
or
push
(bad)
(bad)
jmp
push
push
js
xchg
xchg
lea
add
add
push
cdq
adc
ss
sub
mov
pop
jnp
jb
les
xor
mov
pop
(bad)
mov
push
lods
push
pop
push
push
jp
adc
iret
jmp
mov
adc
fstp
les
pmullw
(bad)
aas
test
and
(bad)
sub
sti
shl
scas
fld
cmps
bound
mov
sbb
les
(bad)
add
aas
dec
cdq
add
sar
jg
repz
jle
jbe
jle
in
cmc
sub
scas
add
pop
(bad)
jno
pusha
dec
(bad)
arpl
adc
test
dec
dec
inc
in
pop
je
into
ret
cli
mov
inc
add
mov
sbb
test
rcl
lea
xor
sub
inc
rcr
add
cmp
xchg
jle
cs
jmp
push
aam
cmp
imul
pop
xor
test
(bad)
test
dec
mov
push
add
sbb
adc
test
sub
rol
pop
mov
lods
push
jbe
adc
or
pop
in
not
and
inc
mov
scas
enter
fst
jl
and
xor
sbb
cmp
loopne
cwde
sbb
int3
xchg
adc
mov
inc
dec
(bad)
arpl
pop
cmp
dec
cmp
jle
arpl
mov
repz
(bad)
push
pop
adc
aad
loopne
into
inc
loopne
push
sti
in
sbb
push
mov
sub
(bad)
sub
jg
pop
or
stos
cmp
shl
cmp
push
mov
or
and
aam
cmc
or
xchg
dec
inc
frstor
int
xchg
and
gs
lahf
pop
cmp
imul
les
adc
fxch
scas
clc
lea
fimul
or
(bad)
call
sbb
add
mov
ins
sub
mov
add
hlt
test
ret
cli
mov
call
adc
inc
(bad)
jmp
les
mov
mov
cmps
bound
jmp
pop
jnp
xchg
int
mov
adc
xor
add
inc
jle
pop
and
jmp
and
sub
mov
push
cmp
add
jbe
cmp
adc
arpl
cmp
nop
or
jbe
scas
add
fiadd
cmc
jg
cmp
shl
inc
sub
dec
adc
stos
or
scas
cmp
push
pusha
xor
retf
push
in
imul
aad
in
jmp
dec
imul
inc
js
push
movs
test
xchg
cmp
push
add
dec
xchg
arpl
(bad)
cld
jo
xchg
idiv
and
loope
cmp
in
jg
stos
imul
out
jle
sub
or
(bad)
or
fisttp
mov
(bad)
or
mov
push
mov
inc
push
dec
mov
push
(bad)
aam
nop
push
fistp
dec
cmp
jle
arpl
jecxz
cdq
inc
sub
pop
mov
sbb
inc
cmc
inc
call
add
into
inc
and
into
inc
loopne
into
inc
loopne
pop
mov
add
pop
sti
sbb
inc
loopne
into
rcl
shr
add
into
inc
and
into
inc
loopne
into
inc
loopne
jb
retf
dec
jnp
test
dec
test
std
dec
in
(bad)
(bad)
jmp
push
jae
popf
add
mov
inc
cmp
arpl
add
mov
sbb
jmp
sub
imul
dec
aam
mov
adc
mov
add
jmp
(bad)
cmc
ret
cli
mov
daa
add
ror
sahf
or
cmp
out
xor
icebp
in
mov
sub
adc
mov
(bad)
jmp
add
int
loope
fmul
iret
jmp
mov
aad
cmp
and
lock
repz
mov
push
mov
aad
loop
mov
cmp
push
cdq
fs
sub
iret
repz
neg
dec
cdq
lds
ret
cli
mov
dec
cdq
inc
push
movs
or
add
lahf
mov
(bad)
daa
aad
mov
out
jmp
dec
ret
pop
jle
adc
aad
jmp
push
in
add
add
inc
mov
pop
add
sbb
adc
test
pop
jnp
pop
add
ins
xchg
mov
pop
push
jge
jno
or
cmps
inc
add
xlat
out
xor
sbb
jl
sbb
jl
sbb
cli
dec
cmp
pop
jl
in
ret
xor
call
jl
popf
loop
mov
sbb
sbb
test
fcomp
mov
pop
stos
scas
loop
push
(bad)
adc
dec
mov
loop
mov
pop
dec
dec
dec
dec
mov
pop
into
inc
and
into
inc
loopne
or
(bad)
(bad)
sub
and
add
push
mov
sub
(bad)
sub
aas
rcl
or
lahf
sbb
or
in
shl
(bad)
ror
popf
jle
sub
out
or
in
mov
fld
fchs
in
sahf
pop
cmp
xchg
add
add
ja
sub
fs
sar
and
add
cmp
in
sub
sub
ror
sar
clc
popf
enter
xchg
adc
test
jmp
cld
aad
jle
push
js
outs
les
jae
or
add
js
(bad)
jmp
jp
imul
add
or
mov
add
aad
cmp
shl
les
sbb
add
cmps
(bad)
fild
(bad)
(bad)
mov
sbb
and
mov
sbb
pop
dec
std
mov
(bad)
sub
sub
and
test
sbb
sahf
adc
fisttp
dec
gs
aam
sub
shl
imul
push
gs
xchg
nop
inc
fs
addr16
aad
mov
mov
xchg
int
and
pop
mov
add
push
mov
adc
xchg
int
lea
fmul
jae
sbb
aad
stos
nop
and
push
adc
push
add
retf
cmp
jnp
push
jle
adc
dec
jmp
icebp
xchg
out
repz
pop
jb
cmps
jge
sub
std
hlt
pop
mov
jge
sub
mov
lahf
and
sbb
ret
les
adc
les
mov
mov
retf
and
sti
fimul
es
rol
sbb
inc
loopne
into
inc
loopne
into
cmp
imul
push
add
sub
loopne
into
inc
loopne
aas
pop
loopne
into
inc
loopne
mov
loopne
into
inc
loopne
into
inc
loopne
enter
into
inc
and
into
inc
loopne
mov
jmp
mov
repz
ds
and
cmps
dec
in
lods
cmp
mov
arpl
ds
pop
mov
out
inc
cmp
js
test
ror
popf
dec
sub
jle
xchg
or
and
xchg
retf
inc
dec
mov
or
dec
xbegin
sub
add
scas
(bad)
sub
iret
jmp
sub
fdivr
sub
(bad)
fild
mov
and
adc
add
mov
sub
cmp
sub
cmp
xchg
jle
jne
add
pusha
(bad)
sub
sbb
jmp
add
aas
adc
(bad)
jmp
jb
adc
cmp
out
fidiv
or
inc
adc
mov
rol
cmp
aad
les
mov
mov
test
int
shl
stos
movs
sub
test
fiadd
aad
jmp
sbb
out
jmp
nop
sbb
rol
inc
out
mov
das
add
add
and
jmp
pop
call
cmps
bound
ficomp
jnp
dec
cdq
(bad)
add
add
arpl
add
cmp
push
xor
adc
push
jecxz
nop
push
ins
cmp
push
inc
clc
in
aad
cmp
push
js
stos
push
inc
clc
ins
inc
sar
add
(bad)
aam
xchg
movs
inc
add
push
pop
imul
cmps
jle
sbb
dec
daa
mov
nop
fsub
ds
fidivr
enter
sbb
lods
push
ficomp
mov
cmp
add
pop
sub
pop
mov
mov
clc
inc
and
into
inc
loopne
into
rcl
into
inc
and
into
xchg
popf
addr16
inc
(bad)
sub
loopne
into
inc
loopne
into
adc
jmp
mov
and
into
inc
loopne
into
inc
cmc
out
sub
and
into
inc
loopne
into
inc
loopne
cmp
and
into
inc
loopne
into
inc
loopne
into
inc
cmc
out
mov
and
into
inc
loopne
into
inc
loopne
cmp
and
into
inc
loopne
fwait
mov
(bad)
sub
loopne
into
inc
loopne
into
adc
stc
sub
and
into
inc
loopne
xor
jmp
inc
loopne
into
inc
loopne
into
pop
in
push
jp
test
into
inc
loopne
into
inc
loopne
into
rol
pop
jp
inc
(bad)
sub
loopne
into
inc
loopne
imul
out
stos
or
pusha
sbb
inc
loopne
into
add
cmp
inc
and
into
inc
loopne
into
inc
in
push
jp
inc
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
imul
out
sub
and
into
inc
loopne
into
inc
loopne
dec
ret
retf
lea
test
lahf
add
mov
(bad)
(bad)
jmp
pop
(bad)
cmp
mov
rcr
and
push
mov
test
push
cmp
pushf
lds
push
push
call
and
fs
gs
das
icebp
push
lods
aas
pop
push
pop
inc
pop
in
jp
ror
pop
sahf
push
jecxz
xor
add
aad
sub
(bad)
int3
cli
add
das
lds
arpl
imul
popf
jb
xor
pushf
(bad)
retf
add
inc
add
int
(bad)
sub
(bad)
jmp
inc
neg
in
cmps
bound
or
inc
loope
push
jle
test
jg
dec
fld
sbb
pop
cmp
inc
iret
repz
aam
inc
push
sub
cld
add
sub
add
sub
and
and
stos
int
inc
pop
pop
mov
out
jmp
and
pop
mov
inc
lds
push
out
jmp
adc
cmp
stos
clc
mov
pop
cmp
mov
push
fldcw
pushf
xchg
or
sub
xchg
lahf
or
cwde
aad
pop
add
jnp
popa
outs
jnp
popa
outs
jnp
loope
mov
popa
outs
jnp
popa
outs
jnp
popa
outs
out
push
fmul
mov
fmul
ins
xchg
retf
sar
fmul
add
push
in
xchg
mov
add
pushf
loopne
dec
mov
sbb
inc
loopne
into
inc
loopne
adc
(bad)
pop
push
mov
or
test
add
mov
(bad)
(bad)
jmp
push
jnp
les
mov
sbb
add
push
mov
jge
ins
adc
jecxz
add
xchg
inc
les
xor
out
pop
jmp
pop
aad
movs
faddp
pop
int
in
cwde
pop
cmp
(bad)
push
jmp
jecxz
cmp
sbb
sub
sub
mov
or
mov
add
mov
sub
cmp
loop
xlat
sub
cmp
test
inc
les
arpl
mov
(bad)
ret
pop
xor
(bad)
mov
stos
add
jmp
add
pop
stos
(bad)
or
test
add
jg
or
jae
ret
jle
test
mov
pop
push
push
mov
sbb
mov
sub
inc
repnz
jnp
push
cmp
pop
xlat
mov
rol
jmp
pop
aad
test
(bad)
pop
jnp
push
dec
hlt
push
pop
(bad)
out
add
or
jle
add
jmp
jne
add
ret
(bad)
aas
adc
shr
addr16
pop
mov
out
aad
loope
push
mov
js
loope
mov
movs
xchg
int
mov
cs
cdq
out
push
mov
sar
les
jb
repnz
or
xchg
loopne
cmps
xchg
outs
xor
mov
xchg
cs
addr16
inc
addr16
inc
mov
popa
sub
xchg
loopne
addr16
inc
addr16
push
add
lods
pop
dec
scas
ret
bnd
mov
inc
scas
inc
stc
push
repnz
adc
sar
add
sub
jnp
mov
repz
ds
inc
and
into
xchg
push
jp
inc
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
jmp
and
into
inc
loopne
into
ror
jp
inc
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
dec
lods
jmp
cmp
les
in
dec
adc
add
jmp
out
push
pop
mov
sub
and
inc
not
and
or
sub
inc
pop
add
sbb
cli
pop
(bad)
mov
(bad)
jmp
loop
(bad)
mov
mov
and
fs
mov
jge
inc
js
out
and
add
add
pop
dec
aam
(bad)
shr
mov
jmp
(bad)
(bad)
xor
dec
cmc
aad
sbb
sar
mov
push
cmp
sub
(bad)
cmp
rep
cmp
stos
ins
jge
sti
add
mov
and
aad
inc
push
push
mov
sub
les
pop
inc
sahf
adc
fild
shl
test
ret
(bad)
aas
dec
fld
shl
dec
in
jmp
push
(bad)
addr16
bound
movs
jnp
mov
sahf
push
jecxz
add
push
(bad)
addr16
mov
push
int
(bad)
sub
pop
jp
cmp
pop
sti
rol
loopne
leave
sub
add
sbb
jmp
fwait
test
rol
xchg
jle
(bad)
cmc
and
retf
jo
add
pop
jmp
bound
jmp
movs
pop
push
mov
js
pop
call
aam
pop
outs
sub
push
mov
jns
int3
fwait
jns
int3
fwait
jns
int3
fwait
in
out
inc
sub
imul
out
sub
out
fs
jnp
aas
shr
sub
xlat
xchg
in
cmp
push
sub
pushf
mov
jge
arpl
mov
repz
(bad)
nop
mov
(bad)
jmp
sbb
inc
loopne
pop
mov
(bad)
(bad)
sub
sbb
inc
loopne
push
out
lock
cmp
inc
call
sub
sub
sbb
inc
loopne
into
inc
loopne
into
inc
cmc
inc
call
add
into
inc
and
into
inc
loopne
into
inc
loopne
push
loop
scas
cmp
push
out
sub
gs
sub
aad
stos
int
into
rcr
and
mov
retf
jmp
test
(bad)
push
js
test
pop
xchg
sub
push
mov
push
(bad)
pushf
push
and
sbb
push
jp
adc
inc
not
mov
or
push
mov
(bad)
stos
int
out
pop
jle
dec
fld
stos
dec
push
and
out
jp
or
sbb
jb
mov
add
das
lds
cdq
jecxz
sub
ds
sub
loop
sar
sub
sub
mov
push
js
jle
jmp
test
mov
test
add
aas
add
xor
xlat
ret
(bad)
aas
push
gs
push
push
nop
pop
or
xchg
pop
mov
out
jmp
jbe
pusha
push
nop
aam
sub
pop
mov
movs
shr
push
jle
in
add
pop
sbb
test
inc
int
(bad)
sub
jle
aad
mov
xchg
mov
das
lds
add
xchg
fld
push
add
sbb
pop
jle
inc
rcr
(bad)
jmp
add
fnstsw
aad
mov
inc
les
and
int
adc
mov
jnp
cmp
dec
je
lods
loope
fincstp
lock
mov
imul
shr
retf
stos
retf
stos
retf
mov
pushf
es
dec
fldcw
iret
ins
test
rcr
sbb
mov
sbb
es
push
adc
jo
mov
or
mov
push
jp
inc
add
inc
loopne
into
inc
(bad)
xor
addr16
jg
add
jmp
bound
aas
ds
scas
fadd
push
jp
inc
sahf
gs
inc
lahf
out
jnp
dec
mov
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
cmp
sbb
inc
loopne
into
inc
loopne
or
les
or
data16
inc
pusha
sbb
inc
loopne
into
inc
loopne
push
in
add
inc
loopne
into
inc
loopne
dec
sti
fcomp
cmp
in
rol
sbb
inc
loopne
into
inc
loopne
into
in
xlat
add
sub
aad
and
push
not
and
adc
sub
or
sub
aas
(bad)
push
aaa
mov
dec
frstor
xchg
iret
jle
dec
pop
or
sub
and
mov
ffreep
test
stos
outs
retf
xor
or
cmp
popa
sbb
mov
aad
xchg
sahf
adc
jmp
not
(bad)
sub
and
sub
stos
push
cmp
push
mov
add
jmp
test
ret
cli
mov
dec
or
push
add
fimul
push
loop
movs
nop
xchg
std
pushf
enter
scas
imul
sbb
push
in
push
mov
pop
bound
mov
or
out
cmp
sub
add
dec
cdq
add
aas
dec
cdq
add
add
shr
push
add
iret
(bad)
aad
add
dec
xor
add
push
adc
aad
in
push
arpl
or
stos
(bad)
dec
test
jb
sbb
fcom
(bad)
stos
or
stos
jns
dec
cmp
or
fdivr
sub
pop
mov
or
adc
nop
ja
repnz
repnz
fidiv
gs
fild
inc
inc
fcmovu
mov
mov
jecxz
mov
add
cwde
dec
mov
xor
sbb
and
inc
jne
mov
add
fcmove
sar
or
lds
sub
sub
sbb
inc
loopne
into
pop
fdivp
nop
mov
loopne
into
inc
loopne
into
inc
loopne
into
rcr
into
inc
and
into
inc
loopne
adc
pop
movs
test
test
sub
fld
jnp
into
inc
loopne
into
(bad)
in
shl
push
(bad)
push
mov
sub
(bad)
sub
aas
add
and
test
adc
pop
mov
fisubr
clc
and
add
add
sbb
mov
and
and
and
inc
jb
jmp
int
js
fsubr
sahf
adc
sub
dec
sti
inc
ss
lds
jmp
push
pop
dec
dec
fld
cdq
inc
sahf
adc
xchg
shl
sahf
push
loop
and
mov
or
fld
push
hlt
mov
mov
call
in
fsubr
ret
mov
fsubr
mov
shr
sub
push
loop
pop
and
aad
jmp
or
test
and
xor
jl
adc
pop
cmp
les
div
xlat
sbb
push
daa
sub
add
or
aam
xor
jmp
aas
add
mov
xlat
add
nop
jle
add
sbb
test
ret
cli
mov
xlat
mov
adc
das
(bad)
cmp
add
arpl
jmp
mov
leave
pop
and
jmp
inc
fild
addr16
imul
loop
jnp
inc
push
les
push
add
pop
push
lods
dec
loope
in
push
aas
mov
inc
cmp
cmp
mov
jmp
fistp
fnclex
fistp
fnclex
fisttp
jmp
(bad)
inc
jae
(bad)
and
mov
pop
jg
jle
imul
add
pop
cli
jmp
sbb
xor
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
and
int
(bad)
movs
mov
mov
int
push
js
popa
in
pop
push
mov
das
xchg
lea
js
push
jmp
(bad)
std
rcl
(bad)
push
cmp
dec
cli
push
(bad)
aad
mov
fstp
add
xor
xchg
loopne
and
pop
cmp
out
cli
aas
imul
sub
nop
jno
sub
fldcw
mov
(bad)
(bad)
jmp
inc
jg
jmp
aad
mov
jmp
sti
pop
mov
dec
cmc
push
ds
or
jle
mov
adc
inc
(bad)
sub
sub
mov
imul
inc
xchg
stos
pop
les
pop
jle
call
das
dec
ffree
mov
nop
jmp
jg
aad
js
add
test
and
jmp
sub
jmp
test
aas
dec
ffree
and
fnstenv
adc
or
add
jnp
cmps
loop
daa
aad
sti
adc
pop
cmp
push
shl
add
xor
inc
test
add
inc
cmp
xchg
sbb
push
add
sbb
xor
or
xchg
div
mov
mov
call
popf
mov
sub
xchg
retf
mov
sub
or
xchg
pop
xor
in
or
mov
sub
or
sub
popf
mov
sub
mov
ds
(bad)
and
or
xor
sub
hlt
ds
ret
fxch
xrelease
sbb
(bad)
mov
aad
mov
add
pop
pusha
sbb
inc
loopne
into
inc
loopne
into
inc
in
jmp
(bad)
pop
(bad)
pop
outs
mov
sub
sub
sbb
inc
loopne
into
inc
sti
fild
jnp
dec
mov
and
shr
mov
and
and
dec
sub
into
inc
loopne
clc
in
lds
popa
mov
mov
aad
fs
jecxz
cmp
aad
addr16
call
xor
aad
pop
fisub
cmp
or
sub
and
aad
jnp
inc
pop
jnp
push
mov
jnp
aad
(bad)
and
mov
loopne
into
shl
aad
cmp
into
inc
loopne
into
inc
loopne
sbb
or
aad
(bad)
in
mov
loopne
into
inc
loopne
into
cmp
ja
jnp
push
pop
cmp
adc
(bad)
(bad)
jmp
test
xchg
aad
cmp
push
jne
(bad)
jmp
ficom
ss
mov
loopne
into
inc
loopne
into
xchg
sub
push
add
pop
cmp
into
inc
loopne
into
inc
loopne
into
(bad)
inc
aad
jnp
push
xor
std
push
es
and
jo
imul
mov
add
stos
scas
shl
jmp
inc
ss
or
pushf
imul
mov
lods
or
push
jmp
loopne
jle
stc
sub
lods
psubsw
bound
pop
cmp
jp
sar
jmp
or
(bad)
jmp
sub
ret
cli
mov
jle
les
arpl
dec
popa
shr
call
and
fld
stos
dec
push
loop
sbb
jnp
jb
out
(bad)
sub
push
sbb
jp
or
cmp
push
and
sahf
cmps
add
stos
mov
(bad)
fst
vhsubps
add
mov
out
add
pop
jmp
jecxz
sub
(bad)
aad
jl
mov
mov
jnp
inc
std
enter
leave
ins
les
es
inc
add
xchg
mov
jb
jecxz
adc
pop
cmp
adc
aas
shl
shr
mov
jo
add
add
aas
dec
cdq
add
push
dec
mov
add
or
xor
gs
adc
shl
push
add
lea
test
(bad)
cwde
and
fnstcw
adc
mov
fwait
in
mov
fmul
jmp
inc
add
jne
add
jmp
and
push
jmp
rcr
mov
fmul
imul
ret
mov
push
jmp
xor
dec
lods
movs
inc
(bad)
inc
pushf
jne
rcr
mov
fmul
and
add
jne
test
in
mov
fmul
loope
test
add
in
cmp
mov
loope
fnstcw
cmc
cmp
mov
loope
fnstcw
in
adc
fidivr
mov
(bad)
mov
fdiv
pop
movs
mov
adc
mov
xor
cmc
and
and
mov
scas
and
sar
movs
je
cmp
mov
loope
fnstcw
cmc
std
mov
loope
fst
sub
cdq
mov
adc
jl
mov
pop
test
fistp
loope
fnstcw
inc
mov
add
fadd
sub
cmps
jmp
loope
fst
gs
sbb
xor
ss
dec
jp
cmp
mov
in
inc
pop
pop
xor
mov
loope
frndint
aam
xor
sbb
sub
or
xor
pop
mov
outs
andps
sub
aas
mov
pop
paddq
sbb
xor
adc
pop
loopne
into
inc
loopne
into
inc
loopne
dec
fcmovbe
into
sub
xchg
(bad)
cmp
dec
in
xor
sbb
inc
fbstp
add
adc
mov
arpl
mov
xchg
adc
scas
(bad)
and
popf
inc
in
ret
adc
push
adc
inc
jg
test
add
bound
or
pop
xchg
cmp
lods
pop
push
push
pop
inc
pop
or
adc
pop
fs
stos
jo
mov
fadd
dec
cdq
add
add
jle
aad
mov
add
mov
adc
pop
cmp
push
push
xor
fst
adc
xchg
jle
mov
sahf
xchg
int
les
arpl
sahf
push
loop
sub
xchg
sbb
aam
xor
jbe
add
lds
lock
leave
ja
pop
mov
and
pop
mov
(bad)
push
push
(bad)
sub
(bad)
cmps
bound
push
pusha
jnp
repz
jmp
pop
jnp
add
(bad)
push
das
lds
and
mov
push
mov
in
sahf
pop
cmc
mov
jno
xor
test
jmp
cdq
push
add
pop
in
imul
dec
xchg
jnp
sbb
les
sahf
adc
jmp
jno
and
adc
fistp
in
in
aad
jno
rcr
movs
inc
mov
jmp
fsub
mov
lods
scas
adc
and
mov
test
les
sbb
mov
pop
loopne
jns
xor
les
cmp
retf
cmp
jns
and
cmp
loopne
jns
mov
fdivr
loopne
ins
mov
push
xor
xor
or
sar
pop
and
mov
adc
les
cmp
gs
cmp
mov
popa
dec
cmp
jno
and
jns
and
cmp
pusha
sar
and
fs
cmp
or
sar
adc
fistp
pusha
les
add
mov
out
les
jns
add
popf
out
les
popf
outs
ret
aam
inc
xchg
in
retf
shl
retf
and
push
sbb
popf
out
les
popf
out
les
lea
add
aaa
push
jno
xlat
or
les
out
les
popf
out
les
inc
or
fnstenv
pop
aas
push
pusha
push
or
popf
out
add
popf
out
les
popf
outs
(bad)
jns
and
std
sbb
dec
dec
(bad)
jns
mov
and
retf
add
cmp
cmps
cmps
mov
js
cmp
add
popf
out
les
popf
out
les
popf
outs
(bad)
jns
and
std
sbb
dec
dec
sar
and
out
les
popf
xor
fs
dec
std
sbb
dec
dec
sar
and
out
les
stos
fiadd
adc
test
and
mov
out
les
popf
out
les
popf
xor
xchg
sbb
retf
pushf
push
or
and
xor
fs
dec
std
sbb
dec
dec
(bad)
jns
and
popf
out
les
popf
out
les
popf
out
les
xchg
sbb
popf
out
les
popf
out
les
push
in
push
retf
add
popf
out
les
popf
out
les
popf
out
fiadd
stos
sahf
push
cmp
push
cmp
pop
jno
jl
add
test
jno
xor
dec
sub
jbe
jno
inc
inc
pop
cmp
or
jmp
into
rcl
into
inc
loopne
dec
fcmovbe
into
sub
xchg
fcom
retf
sbb
test
adc
(bad)
(bad)
jmp
adc
xchg
leave
add
cmp
cmp
rcl
into
inc
inc
pusha
and
(bad)
sub
and
pop
popa
test
int3
fsubp
add
fadd
test
pop
xchg
mov
xlat
in
mov
aad
sbb
mov
fild
imul
arpl
imul
(bad)
xchg
add
movs
(bad)
sub
jg
sti
push
(bad)
loop
cmp
(bad)
jmp
aad
mov
add
and
iret
or
xor
add
add
add
lds
adc
iret
jmp
mov
(bad)
jmp
popa
nop
or
bound
add
int
sti
fistp
mov
dec
jnp
jmp
in
mov
add
add
jmp
cmp
dec
push
sbb
int
add
(bad)
adc
cdq
test
arpl
nop
clc
ret
cmp
imul
jmp
ret
cli
ds
jmp
or
leave
jae
inc
inc
retf
pop
rcl
les
xchg
jecxz
add
push
jns
int
add
pushf
in
pushf
scas
mov
scas
jp
and
popf
scas
mov
scas
mov
dec
les
scas
loop
mov
scas
and
dec
movlps
dec
mov
mov
sub
mov
scas
and
push
push
add
sub
sbb
out
retf
pop
jmp
dec
sbb
ds
dec
pop
or
xor
in
xchg
sub
mov
scas
and
call
scas
mov
scas
and
mov
scas
and
pop
dec
push
or
int3
sub
and
mov
push
add
loopne
aaa
dec
dec
mov
scas
mov
mov
bound
mov
adc
mov
adc
adc
retf
adc
mov
jecxz
adc
cmp
xlat
pop
jnp
dec
xor
std
push
test
cwde
xor
sub
movs
xor
push
mov
sub
jle
sub
shl
jge
add
push
push
bound
pop
push
stc
push
push
js
fist
loopne
sub
sub
repnz
jmp
les
pop
sar
fmul
imul
jb
mov
add
sbb
aaa
nop
cmps
fldcw
mov
inc
inc
pop
cmp
xchg
int
push
push
pop
(bad)
outs
les
cmp
fld
adc
and
(bad)
movs
les
or
xor
push
pop
fs
jmp
mov
add
xlat
push
aam
sbb
cld
rol
xor
sub
mov
nop
int3
(bad)
mov
shr
inc
fisttp
or
je
adc
mov
(bad)
jmp
imul
and
aad
stos
pop
sbb
sub
jecxz
(bad)
lahf
js
rol
aad
in
push
fs
(bad)
dec
aam
jmp
stos
push
sub
mov
inc
loop
(bad)
aas
adc
aam
nop
pop
jmp
jae
add
in
jnp
cmps
loop
sub
pop
sti
test
cdq
loopne
sti
cli
xchg
jle
mov
mov
or
daa
cli
push
(bad)
ficom
xchg
lea
bound
in
jecxz
hlt
jecxz
fwait
jmp
xor
(bad)
adc
jmp
xor
mov
fsubp
fstp
xor
mov
les
and
inc
ins
aad
and
and
add
sub
mov
xor
mov
mov
sbb
les
mov
aad
jecxz
xor
mov
hlt
and
fwait
jmp
xor
(bad)
daa
cdq
or
sub
nop
pushf
icebp
iret
cs
sahf
sbb
and
or
pop
or
xor
mov
mov
ins
fwait
sub
adc
add
xor
jp
adc
xor
mov
push
add
xor
add
das
inc
pop
cmc
scas
and
fild
jmp
gs
mov
sub
and
xchg
jecxz
jns
mov
xchg
dec
aad
mov
outs
sahf
xor
push
dec
mov
xor
xor
xor
mov
xor
inc
pop
les
ja
(bad)
aad
sbb
in
sbb
out
jecxz
xor
mov
hlt
xchg
and
and
out
and
pxor
in
outs
cmp
ret
sbb
in
pop
mov
xor
xor
mov
adc
into
int
aad
inc
jne
mov
xor
mov
stos
stos
mov
les
mov
adc
outs
jecxz
sub
mov
and
(bad)
aam
xor
mov
ss
movs
stos
stos
mov
xor
mov
(bad)
out
inc
jne
or
mov
and
mov
aad
mov
fs
mov
ja
mov
or
scas
and
or
xor
mov
loopne
div
adc
scas
jne
dec
mov
xchg
sbb
jne
jecxz
cmp
ds
stos
stos
mov
les
mov
in
das
and
mov
les
xor
mov
fld
movs
outs
cmps
cli
inc
fstp
cmps
mov
mov
xor
add
adc
xchg
mov
xchg
lahf
lahf
add
adc
dec
cdq
and
mov
mov
xor
mov
aam
and
mov
les
and
mov
xor
xchg
jne
das
and
mov
aad
and
or
xor
mov
xor
mov
pop
cmp
rcl
aad
mov
cmp
mov
xor
mov
adc
mov
adc
or
xor
inc
xchg
in
add
retf
mov
in
add
adc
mov
lds
mov
or
mov
xor
mov
inc
sub
xor
mov
enter
popa
xor
pop
jo
out
jecxz
xor
mov
aad
jecxz
xor
mov
rcl
xor
mov
mov
or
fs
or
xor
pop
jle
das
and
into
dec
fwait
sub
neg
adc
scas
jne
dec
mov
xor
mov
mov
sbb
mov
xor
mov
outs
inc
aam
sub
push
inc
retf
adc
and
outs
jle
cmc
mov
jp
mul
cmp
fisub
xor
mov
retf
out
cmp
or
xor
cli
push
lds
movs
xor
mov
aas
and
movs
movs
mov
sub
and
mov
fcmove
das
je
outs
(bad)
jecxz
scas
inc
inc
mov
or
dec
add
jecxz
xor
mov
cmc
xor
cmp
out
cmp
inc
imul
xchg
repnz
les
xor
mov
pop
mov
mov
sub
push
aad
dec
inc
mov
mov
(bad)
into
pusha
fs
add
aad
and
(bad)
out
jecxz
xor
and
xchg
retf
mov
fs
inc
aam
sub
popa
add
out
and
cwde
jle
int3
add
sub
xchg
jmp
xor
mov
or
xor
mov
mov
mov
jns
iret
sbb
jns
iret
sbb
iret
scas
inc
inc
sahf
nop
fcomp
push
or
xor
mov
inc
and
movs
xor
xor
mov
xor
mov
fs
inc
aam
sub
popa
add
out
and
cwde
jle
int3
add
sub
add
pop
mov
mov
repnz
fwait
sub
jp
aad
pop
mov
xor
xor
cmc
push
adc
cmp
test
das
and
in
cli
pop
aam
and
adc
cmc
test
les
cli
sbb
out
and
inc
ins
aad
and
jmp
jne
mov
xor
or
cwde
adc
sbb
inc
neg
adc
scas
jne
or
xor
mov
enter
inc
and
movs
xor
xor
mov
sub
mov
sub
inc
inc
fwait
nop
fcomp
adc
lods
pop
mov
mov
mov
and
add
aaa
cdq
data16
and
jecxz
in
push
movs
test
xor
movs
xchg
mov
xor
scas
mov
inc
mov
fs
call
les
inc
jbe
ror
out
mov
cmp
out
jmp
inc
loopne
into
inc
loopne
jmp
sbb
inc
loopne
dec
ret
retf
cmp
test
mov
cmc
(bad)
(bad)
jmp
pop
push
fisttp
push
inc
cmp
or
ffreep
nop
add
xor
push
fld
test
out
stos
add
sub
dec
inc
pop
push
or
nop
xchg
(bad)
(bad)
jmp
push
and
add
stos
int3
sbb
pop
cmp
inc
or
popf
add
pop
sbb
dec
sub
fstp
int
ret
dec
popf
mov
jmp
(bad)
sbb
add
cdq
jmp
sub
sub
inc
test
adc
lods
aad
les
pop
push
lods
pop
(bad)
jle
xor
mov
mov
jnp
out
ret
(bad)
aas
add
pop
(bad)
and
and
jmp
sti
add
sbb
jae
sar
jb
dec
in
push
pop
inc
dec
ffree
mov
(bad)
pop
hlt
nop
enter
rol
les
push
add
pop
jmp
pop
mov
pusha
xchg
inc
add
pop
jnp
jnp
(bad)
sub
pop
cmp
std
int3
add
ret
movs
cmp
stc
push
aad
cmp
cdq
lds
(bad)
retf
jecxz
add
rol
inc
pop
aas
aad
or
rcr
xor
adc
gs
in
int
adc
or
sub
lods
or
mov
or
mov
std
repnz
int
ss
seta
sub
sub
ror
sub
sub
sub
in
dec
jb
test
test
dec
or
jne
xchg
or
std
or
mov
or
mov
dec
dec
imul
int
sub
xor
or
mov
test
fisub
test
or
mov
or
mov
std
xor
or
mov
sub
dec
stc
in
int
imul
int
or
push
mov
sub
sub
mov
sub
in
int
cmp
icebp
test
in
or
mov
or
mov
in
mov
ss
mov
aad
fsubr
lods
or
push
pop
adc
or
or
mov
sti
xor
or
xchg
sbb
call
int
dec
sub
dec
lods
or
mov
push
sub
enter
xlat
int
dec
sub
dec
lods
or
mov
dec
xlat
test
std
idiv
xchg
or
std
or
mov
sbb
mov
dec
push
xlat
lea
lods
or
mov
sub
xchg
mov
sub
or
mov
in
lea
push
ror
dec
sub
pusha
sub
push
mov
or
mov
adc
mov
or
sub
xrelease
or
call
lods
or
mov
or
mov
int3
sub
int
dec
in
cdq
dec
pop
aam
adc
(bad)
int
lods
or
mov
or
pop
sub
xor
or
sub
or
mov
lods
push
ds
std
or
lods
or
mov
sub
or
mov
or
dec
lods
or
mov
mov
xchg
scas
push
loope
std
push
mov
or
mov
adc
push
mov
sub
or
mov
ins
pushf
js
push
adc
outs
ins
pop
dec
in
or
or
or
mov
int3
cmp
scas
lods
ror
jb
(bad)
fcomp
sbb
test
dec
(bad)
fsubr
lods
or
mov
lods
adc
repz
test
and
sub
sub
fisttp
mov
or
mov
push
sbb
fcmovne
xor
sub
lods
or
mov
repz
test
sub
dec
(bad)
std
or
mov
mov
stos
lods
or
mov
or
test
in
int
lods
or
mov
or
mov
std
push
mov
or
mov
in
int
mov
sub
sub
push
in
jno
in
int
dec
sub
pop
or
push
(bad)
int3
push
js
aad
pop
mov
sub
in
int
sub
int
dec
sub
ja
ins
adc
icebp
xor
mov
sub
sub
mov
or
mov
in
jno
in
int
dec
sub
pop
or
push
(bad)
int3
push
js
mov
call
or
fsubr
pop
lods
sub
mov
xor
test
mov
in
mov
sub
pushf
loopne
dec
ficom
into
sub
adc
rol
sub
add
pop
mov
pop
or
fs
jae
mov
retf
fwait
sbb
ret
rol
out
daa
jae
lea
sub
clc
or
or
ficomp
jmp
addr16
aam
ds
test
push
or
sub
cmp
cmp
int
lods
add
xor
jle
mov
jle
sub
jns
cdq
inc
(bad)
sub
sub
and
and
jns
les
mov
sub
cmps
jecxz
add
lds
xchg
mov
iret
stos
or
mov
out
stos
lea
ficomp
sti
add
das
(bad)
sbb
sub
fld
pop
inc
inc
jno
fiadd
aad
jmp
ffree
mov
mov
bound
sbb
add
fst
sbb
add
add
mov
(bad)
jmp
jo
push
cmp
dec
inc
ja
pop
ds
popf
test
cwde
int
or
xor
rol
add
clc
test
pushf
jnp
(bad)
or
push
inc
cmp
xchg
sbb
add
xchg
test
or
xchg
or
xchg
or
xchg
or
xchg
or
cwde
rol
add
mov
sti
push
pop
out
inc
inc
fnstsw
inc
test
aas
sub
push
pop
lahf
jg
and
jg
cmp
fistp
jnp
fcmovb
sbb
cmps
push
aam
jnp
inc
pop
jnp
aas
retf
push
mov
movs
arpl
jg
and
clc
push
clc
out
add
cli
(bad)
push
xchg
mov
and
add
popf
jl
rcr
fwait
xchg
mov
mov
jg
and
dec
sub
mov
and
pminub
popa
sbb
scas
in
shl
mov
and
dec
xor
push
(bad)
push
xchg
les
cmp
or
cmp
call
cmp
push
mov
jle
push
jp
add
pushf
mov
mov
enter
frstor
push
arpl
adc
push
xor
pop
js
and
loope
popf
inc
add
retf
call
jecxz
sub
sub
jle
cli
nop
xor
mov
xchg
cmp
sbb
xchg
pop
or
rol
add
sub
push
div
inc
test
aas
les
fcom
in
sub
adc
add
adc
jg
out
mov
(bad)
sub
les
sub
or
add
icebp
sbb
add
and
ds
cmp
and
jo
out
jnp
add
(bad)
sub
sub
or
sar
sub
pusha
les
ins
call
or
ss
int
add
pop
mov
mov
push
arpl
popa
or
or
add
jmp
fnstsw
inc
iret
push
(bad)
ds
cmp
nop
(bad)
jmp
add
movs
stos
add
pop
sti
shl
adc
adc
cmc
aas
test
push
sbb
add
(bad)
add
jb
(bad)
jns
test
ret
(bad)
jg
sbb
sar
push
ins
mov
or
movs
add
ror
cmp
cmp
sub
icebp
stos
popa
or
rcr
ins
jne
mov
xor
in
sbb
popf
or
rcr
clc
ror
shr
in
push
popa
scas
sub
js
ins
jmp
call
mov
je
in
loop
call
adc
pop
pusha
mov
xor
sub
rol
sub
adc
rol
fnstcw
inc
and
into
inc
loopne
into
inc
loopne
dec
mov
sbb
inc
loopne
into
inc
loopne
mov
lds
into
inc
and
into
inc
loopne
into
inc
loopne
mov
mov
add
or
lds
mov
mov
sbb
inc
loopne
jo
sbb
sub
repz
or
sahf
and
or
jmp
les
dec
sbb
push
jecxz
inc
add
sbb
sub
mov
add
xor
fldcw
sub
and
xor
retf
iret
rcr
and
repnz
push
int3
retf
sbb
adc
int3
loopne
adc
pop
cmp
or
mov
ins
fdivrp
test
mov
adc
or
mov
ins
add
pop
loopne
ret
jp
cmc
sub
test
les
cdq
add
add
add
sti
or
ds
stc
and
jmp
sub
icebp
int
int
popf
dec
aas
(bad)
cld
mov
lar
in
xchg
adc
jmp
xor
mov
int
shl
mov
add
lea
neg
mov
and
mov
sbb
sbb
and
dec
cdq
(bad)
ret
cli
mov
loopne
mov
(bad)
jmp
mov
sbb
adc
xchg
jle
jno
gs
sti
add
sbb
push
lds
inc
jmp
add
mov
jmp
pop
cmp
push
fs
pop
add
les
imul
aam
push
mov
ins
mov
pop
and
mov
cli
fidiv
mov
popa
cwde
adc
(bad)
xor
xchg
fidiv
pop
stos
sub
(bad)
xor
mov
(bad)
xor
mov
(bad)
xor
lahf
inc
pop
rcr
fidiv
xchg
fidiv
mov
cmp
(bad)
(bad)
xor
xchg
inc
mov
(bad)
fidiv
xchg
pop
into
movs
js
push
js
and
outs
cmp
scas
jg
and
pop
std
test
xor
cwde
cli
pop
shl
xor
push
(bad)
xor
xchg
inc
int3
popf
inc
daa
in
cwde
outs
lds
popf
(bad)
xor
xchg
fidiv
inc
(bad)
xor
sahf
(bad)
xor
xchg
ficomp
push
(bad)
xor
mov
dec
int3
sahf
pop
and
retf
xor
cmp
(bad)
clc
inc
int3
pop
and
scas
out
mov
mov
(bad)
xor
xchg
stc
mov
(bad)
fidiv
xchg
fidiv
lahf
(bad)
xor
xchg
fidiv
push
(bad)
xor
xchg
fidiv
xor
inc
int3
pop
inc
daa
in
cwde
or
cs
(bad)
xor
mov
cmp
(bad)
clc
fidiv
xchg
fidiv
push
(bad)
xor
xchg
fdivp
mov
(bad)
xor
push
(bad)
xor
xchg
pop
into
cdq
mov
daa
sub
(bad)
xor
xchg
pop
into
sahf
(bad)
xor
mov
fidiv
xchg
fidiv
pop
inc
daa
in
cwde
sub
cs
(bad)
xor
xchg
fisubr
pop
sub
inc
(bad)
xor
cdq
push
or
xor
xchg
fidiv
cdq
in
mov
ds
outs
and
icebp
bound
(bad)
scas
daa
scas
mov
mov
(bad)
xor
bound
(bad)
scas
daa
scas
mov
mov
(bad)
xor
lea
cmp
shr
xor
xchg
fidiv
inc
(bad)
xor
sub
xor
xchg
or
pop
sub
xchg
sbb
xchg
fidiv
xchg
push
and
(bad)
xor
mov
(bad)
xor
xchg
fidiv
sub
out
ret
dec
mov
pop
adc
nop
mov
sub
(bad)
fidiv
xchg
fidiv
xchg
fidiv
mov
(bad)
xor
movs
(bad)
xor
mov
jnp
jo
add
mov
(bad)
pop
into
cmps
js
pop
jnp
stos
sub
(bad)
xor
and
xor
xchg
js
shl
cmp
xor
xchg
adc
mov
mov
clc
je
loope
(bad)
mov
(bad)
inc
(bad)
xor
sub
xor
xchg
fidiv
xchg
fidiv
mov
push
cmp
loop
push
xchg
fidiv
xchg
fidiv
cmp
xor
xchg
cwde
les
(bad)
mov
cli
fidiv
mov
(bad)
xor
xchg
mov
push
dec
out
jae
(bad)
xor
xchg
fidiv
xchg
fidiv
xchg
mov
xor
xchg
cwde
les
(bad)
xor
xchg
adc
(bad)
xor
mov
(bad)
xor
xchg
xchg
cli
fisub
pop
sub
xchg
fidiv
xchg
xor
mov
inc
shr
cmp
jae
(bad)
xor
mov
fidiv
mov
(bad)
xor
xchg
fidiv
(bad)
(bad)
xor
xchg
fidiv
cmp
xor
xchg
fidiv
dec
dec
popa
cs
dec
mov
xchg
fidiv
xchg
fidiv
xchg
mov
xor
xchg
cwde
les
(bad)
xor
xchg
fidiv
xchg
fidiv
(bad)
(bad)
xor
mov
or
or
xor
xchg
fidiv
mov
(bad)
pop
into
cmps
js
sbb
push
(bad)
xor
xchg
cwde
adc
(bad)
xor
mov
clc
fidiv
mov
clc
pop
popa
loop
sub
jecxz
shl
shl
jnp
popf
mov
je
pop
cmp
jp
and
test
mov
sub
imul
aad
mov
out
mov
(bad)
(bad)
jmp
daa
dec
mov
and
and
xor
cmp
sti
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
push
xor
clc
sub
inc
jmp
add
sub
add
sub
add
sub
add
sub
add
sub
pop
sahf
cmp
pop
cmp
fbstp
add
adc
and
cmp
xchg
or
rcl
jmp
or
push
add
add
mov
sbb
sbb
lds
rcr
movs
add
test
push
in
push
popf
popa
pusha
xchg
push
add
(bad)
(bad)
jmp
aas
push
pusha
mov
sbb
jle
dec
sbb
xlat
cdq
add
and
pop
imul
(bad)
aas
dec
popf
add
in
fidivr
sub
add
fisub
test
mov
push
hlt
pop
mov
push
push
arpl
add
jbe
sub
test
jmp
sub
sub
in
sti
adc
xlat
ret
add
(bad)
fild
mov
in
jmp
inc
sahf
push
loop
adc
int
pop
clc
pop
ds
inc
shl
dec
jnp
aad
(bad)
sub
pop
mov
add
mov
test
xchg
or
jle
fimul
stos
loope
hlt
sti
(bad)
imul
in
jmp
cld
sub
stos
adc
dec
(bad)
cmc
mov
stos
jle
mov
inc
test
adc
aad
jmp
inc
clc
pop
dec
mov
scas
and
or
dec
test
mov
add
stos
pop
pop
and
pop
pop
and
pop
push
aad
lods
jnp
sub
and
pop
pop
and
pop
pop
call
pop
and
pop
pop
and
pop
pop
in
ret
sub
and
pop
pop
fimul
push
scas
mov
imul
stos
pop
pop
in
ret
sub
and
pop
fild
call
and
pop
pop
and
pop
push
shr
pop
pop
and
int3
jp
scas
lods
mov
and
pop
pop
and
pop
pop
mov
test
mov
and
pop
pop
and
pop
pop
ficomp
mov
cmp
dec
ret
sub
stos
pop
pop
sub
pop
pop
and
pop
pop
and
sbb
ror
rol
add
js
dec
push
jge
and
pop
pop
and
pop
pop
and
pop
push
into
scas
lods
jnp
sub
and
pop
pop
ficomp
mov
cmp
dec
ret
sub
stos
pop
pop
and
pop
pop
sub
pop
pop
and
pop
pop
and
sbb
ror
ror
add
sub
jge
and
pop
pop
and
pop
pop
and
lods
fcmovnbe
(bad)
pop
pop
and
pop
pop
ficomp
mov
cmp
dec
ret
sub
stos
pop
pop
and
push
mov
sahf
jge
and
pop
pop
in
cmp
jbe
scas
lods
mov
add
adc
and
pop
pop
and
pop
pop
and
fst
scas
lods
jnp
sub
and
pop
lahf
loopne
std
cmps
add
push
jge
aas
jo
pop
and
pop
pop
and
pop
pop
and
cld
mov
fistp
clc
mov
fsub
push
jl
mov
jo
inc
test
(bad)
pop
sti
fcmove
xchg
add
sub
add
inc
loopne
into
inc
loopne
inc
loopne
into
inc
loopne
jle
push
sar
add
cmps
mov
sbb
inc
loopne
into
inc
loopne
cmp
sbb
inc
loopne
into
inc
loopne
dec
mov
sbb
inc
loopne
into
inc
loopne
mov
je
xor
mov
jbe
cmp
sbb
sub
sbb
inc
loopne
into
(bad)
test
jbe
out
and
sbb
inc
loopne
into
inc
loopne
sub
fldcw
or
and
into
inc
loopne
into
inc
out
and
sbb
inc
loopne
cmps
push
stc
add
push
pusha
sbb
inc
loopne
into
inc
out
and
sbb
inc
loopne
into
inc
loopne
push
pop
out
into
inc
loopne
into
inc
loopne
into
(bad)
(bad)
fild
mov
loopne
into
inc
loopne
cmp
inc
loopne
into
inc
loopne
into
adc
sbb
inc
loopne
into
inc
loopne
into
adc
sbb
inc
loopne
push
push
jb
push
xchg
jb
pop
mov
clc
sbb
inc
loopne
into
inc
loopne
into
sahf
(bad)
in
xor
sbb
inc
loopne
into
inc
loopne
cmp
loopne
into
push
std
mov
aas
stos
shl
jg
lock
mov
mov
sbb
inc
loopne
std
xor
cmps
add
sti
pushf
test
into
inc
loopne
into
inc
loopne
into
inc
loopne
and
pop
push
leave
jmp
les
mov
push
aam
arpl
pop
push
lahf
jno
xchg
or
and
je
out
(bad)
rcr
das
stos
addr16
add
cmc
movs
or
pop
jmp
and
cs
aam
(bad)
das
(bad)
fnsave
(bad)
sub
setns
test
mov
and
iret
or
adc
or
mov
mov
stos
dec
sub
jecxz
mov
and
xchg
add
(bad)
jbe
add
jo
(bad)
sub
in
jmp
jnp
popf
jle
aad
jnp
(bad)
fiadd
shl
jns
jno
jmp
mov
cmp
aad
cld
std
pop
pop
mov
mov
(bad)
pop
jle
cmps
bound
add
mov
(bad)
xor
add
lds
pop
jnp
mov
into
adc
sbb
rcl
in
add
pop
push
dec
xor
sub
rol
jnp
add
ret
cli
mov
cmps
and
dec
mov
(bad)
aas
inc
retf
xchg
mov
aaa
aad
jnp
adc
jmp
pop
jnp
dec
ffree
and
inc
add
sbb
test
out
nop
dec
std
mov
imul
mov
jmp
xor
data16
popf
dec
xchg
enter
xchg
jge
push
movs
in
cmp
aaa
xor
(bad)
fcom
cmp
lods
adc
fldenv
xor
data16
inc
adc
lahf
mov
aaa
xor
data16
xor
data16
clc
data16
xor
div
xor
sbb
fldenv
aaa
xor
data16
xor
div
cld
data16
xor
data16
xor
data16
xor
push
jae
std
bound
jae
xchg
enter
mov
push
xchg
dec
aaa
loop
sar
sbb
fldenv
aaa
xor
pusha
adc
fldenv
xor
data16
xor
data16
xor
jae
xchg
enter
mov
push
xchg
enter
xchg
jge
xlat
sub
adc
xor
data16
xor
jle
out
cmp
xlat
mov
add
mov
sti
data16
xor
data16
jmp
and
xchg
enter
adc
mov
rcl
dec
inc
mov
adc
sub
lahf
xchg
inc
jecxz
xchg
jno
push
mov
inc
jmp
cmp
(bad)
std
pop
aad
mov
into
sub
xchg
(bad)
cmp
jb
or
dec
mov
fldenv
icebp
(bad)
(bad)
jmp
adc
push
pop
fsub
add
sbb
adc
pop
(bad)
sub
and
pop
mov
popf
xor
and
icebp
inc
out
mov
sub
xor
imul
ds
lea
adc
sti
adc
jle
xchg
adc
jmp
xlat
xchg
imul
fwait
aam
ds
stos
mov
pushf
cmp
push
mov
mov
ds
push
dec
and
sub
and
add
cmp
das
test
jnp
xchg
add
sbb
stos
test
dec
fsubrp
or
mov
test
jmp
ret
(bad)
jg
imul
aad
cli
mov
aad
jnp
sbb
add
fld
cdq
dec
sahf
push
jecxz
push
test
sub
push
pop
ds
push
inc
mov
push
rcl
aam
test
dec
ffree
mov
cmps
xor
add
and
inc
test
mov
stc
mov
push
pop
or
aad
jmp
shl
jb
aam
or
mov
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
out
xchg
or
outs
sbb
jp
inc
add
repz
push
or
push
or
call
sahf
in
push
or
or
data16
xlat
mov
lods
mov
bound
xchg
cmp
mov
push
or
cs
push
or
adc
jae
push
or
push
or
adc
push
pop
rcl
xlat
or
scas
retf
repz
lods
ins
js
sar
xlat
call
push
add
dec
adc
push
or
push
or
xchg
out
fsubrp
push
or
push
or
push
or
popf
scas
push
out
inc
or
push
or
push
or
aam
outs
xor
int3
push
in
push
or
call
push
or
inc
aad
ror
pop
pop
mov
fist
call
adc
inc
fisub
mov
repz
push
or
push
lahf
push
push
sar
pop
mov
xlat
dec
cld
mov
pop
inc
icebp
(bad)
cmc
sbb
sar
xchg
ss
sbb
aad
loopne
repnz
into
inc
loopne
cwde
xchg
(bad)
(bad)
sub
add
dec
ins
and
jmp
jle
(bad)
and
sub
or
sub
jg
push
cmp
retf
fld
adc
pop
xchg
sar
pop
adc
sub
fwait
leave
fs
inc
test
fsubr
mov
xor
push
jns
imul
mov
sahf
adc
sub
inc
sar
aad
jp
mov
jle
les
ret
fldenv
arpl
stos
dec
jae
cmp
jecxz
lahf
jnp
rcl
cmp
sbb
sub
stos
mov
pop
outs
test
inc
adc
not
inc
sti
fnstcw
adc
aam
jmp
cdq
sar
arpl
and
push
xor
jle
(bad)
and
rcr
ror
test
sub
push
jecxz
adc
js
out
sub
add
fdivr
es
jnp
sbb
(bad)
jmp
pop
mov
fld
add
int
xor
fdivr
push
xchg
jae
push
xchg
or
movs
or
lock
fucom
add
cmp
dec
xchg
cmp
cmp
(bad)
ffree
jmp
iret
pop
pop
jmp
mov
xor
push
or
xor
in
mov
or
movs
xchg
arpl
cmps
dec
mov
and
into
das
sbb
repnz
mov
or
cmc
pop
pop
loop
dec
pop
bound
dec
pop
bound
into
mov
mov
cs
pop
bound
mov
arpl
mov
dec
stos
loope
dec
sti
aad
sbb
xorps
imul
push
cli
imul
push
cmp
sbb
loope
cdq
iret
aad
test
mov
mov
cmp
ror
cdq
(bad)
push
cmp
pop
cmp
int
mov
lods
xchg
(bad)
push
ds
and
aam
sbb
iret
push
mov
sbb
and
and
mov
cmp
cmp
lea
data16
pop
mov
aad
jmp
stos
loope
lods
pmaxsw
imul
mov
stc
mov
push
sub
xor
lea
dec
push
xchg
pop
dec
pop
push
sbb
popa
(bad)
and
test
loop
arpl
and
and
inc
and
movs
and
arpl
xor
inc
mov
fmul
bound
retf
push
or
push
or
ror
push
call
xor
or
xor
or
xor
or
(bad)
push
push
mov
jg
sub
in
(bad)
fnstsw
jnp
cmp
dec
popf
mov
push
cmp
sbb
(bad)
push
cmp
sbb
iret
adc
xchg
iret
aad
test
mov
push
cmp
sbb
mov
cmp
cmp
lea
cmps
mov
cmp
mov
loope
test
int
sbb
iret
aad
jmp
stos
loope
lea
or
inc
mov
push
jne
mov
loope
lea
popa
add
lds
mov
and
xchg
sbb
loope
xchg
sbb
loope
out
aam
sbb
cmp
or
and
and
sti
sub
fbstp
(bad)
popf
ss
stc
fbstp
clc
sbb
cmps
fsubr
fbstp
(bad)
fbstp
fistp
xchg
popf
stc
fbstp
ficom
ret
fnsave
pop
push
cmp
stc
fbstp
(bad)
fbstp
cmp
fbstp
jecxz
and
sbb
cmp
mov
nop
sub
(bad)
shl
fimul
mov
stc
fbstp
cmp
mov
stc
stc
fbstp
idiv
fbstp
hlt
pop
pop
inc
stc
push
leave
mov
pop
stc
fbstp
(bad)
fbstp
adc
push
mov
stc
fbstp
clc
mov
inc
stc
mov
ins
mov
retf
pop
inc
cmp
sbb
sbb
pop
inc
mov
loop
out
fimul
dec
push
adc
pushf
loopne
sbb
and
retf
(bad)
push
(bad)
fsubr
adc
sub
aas
cmp
jle
lods
add
push
inc
js
imul
nop
test
pop
add
mov
jle
sub
mov
cmp
xchg
pop
push
ret
enter
push
xchg
and
and
les
inc
ds
pop
and
sub
les
sbb
add
cli
ret
cli
aas
imul
sub
sbb
add
add
lds
jmp
mov
jmp
sub
sbb
pop
push
jmp
sti
add
dec
mov
pop
in
push
dec
add
or
jmp
cmp
add
and
fisttp
les
mov
inc
pop
cmp
aad
std
pop
jns
jle
mov
cli
add
add
adc
sti
add
sbb
shl
stc
mov
cmps
(bad)
dec
pop
bound
test
jmp
pop
jnp
fimul
add
inc
nop
and
push
outs
and
add
shr
(bad)
mov
jnp
mov
sbb
jecxz
ret
cld
test
shl
jecxz
adc
scas
adc
adc
fst
adc
mov
aam
ds
fdiv
(bad)
in
mov
aam
out
fsub
jp
jecxz
imul
aam
lea
aam
mov
loopne
sbb
cmps
adc
jle
loope
pop
cmps
xor
and
push
iret
jle
cmp
popa
add
and
or
lahf
add
stos
adc
xchg
es
mov
test
and
cmp
inc
pop
jg
add
adc
in
imul
add
push
inc
js
out
jnp
push
and
adc
dec
(bad)
sub
and
(bad)
adc
jnp
fsub
stos
mov
lds
stos
(bad)
jne
mov
and
movs
pop
aam
(bad)
shr
mov
inc
jle
mov
jne
(bad)
out
adc
jmp
dec
stc
ja
fisubr
sub
xchg
adc
add
sub
add
pop
dec
mov
fdivr
(bad)
mov
in
stos
lea
pop
arpl
jo
add
out
jmp
das
dec
fld
add
jmp
and
test
icebp
jp
add
fnstcw
fwait
cmp
or
lds
int
mov
push
fadd
xchg
repnz
add
dec
sti
add
pop
jmp
(bad)
shl
call
xor
and
cmp
push
je
sti
test
pop
jnp
add
enter
mov
lahf
sbb
add
(bad)
(bad)
jne
pop
xor
sahf
sub
ds
sar
add
add
cmp
cwde
sbb
movs
add
cwde
mov
test
movs
cwde
cmp
movs
jb
in
std
stc
call
inc
data16
data16
data16
fwait
inc
aas
fchs
cmp
jl
cmp
popa
in
inc
fcomp
fcomp
add
js
inc
inc
jne
push
sub
xor
inc
data16
ret
das
cwde
cmp
sti
push
sub
clc
gs
icebp
ffreep
xchg
cld
inc
push
std
stc
jmp
inc
data16
data16
das
cwde
cmp
sti
push
sub
clc
gs
icebp
faddp
xchg
cld
inc
push
std
stc
jmp
inc
data16
data16
cbw
and
inc
inc
jne
push
sub
and
inc
inc
jne
push
sub
xor
inc
data16
es
mov
sar
xchg
cld
xchg
mov
in
xchg
cld
xchg
mov
gs
inc
data16
cbw
and
and
movs
cmp
push
std
icebp
in
xchg
cld
xchg
mov
gs
inc
data16
std
icebp
and
pusha
adc
fadd
fcomp
data16
repz
rcl
cmp
into
mov
je
neg
in
jge
rcl
inc
dec
in
pop
sub
adc
mov
(bad)
out
stos
mov
jmp
(bad)
jmp
cmc
stc
push
mov
push
xchg
iret
dec
inc
push
add
add
mov
push
fst
sbb
stc
push
push
out
push
xlat
lea
cli
xlat
push
sub
push
cdq
scas
(bad)
sub
sub
adc
in
add
repz
sahf
push
jecxz
ss
push
stos
add
in
shr
mov
sahf
add
cdq
add
adc
jne
mov
cmp
enter
inc
and
test
das
lds
icebp
aaa
rcr
jg
int3
nop
daa
xlat
add
mov
fld
cmp
cdq
test
adc
(bad)
jmp
push
jae
pop
shr
nop
fild
scas
add
outs
in
push
ins
test
mov
sti
nop
sbb
dec
and
imul
push
lds
add
add
push
sbb
aad
hlt
adc
sub
add
pop
(bad)
or
clc
test
push
cs
aam
hlt
pop
mov
and
xchg
adc
popf
out
loope
sbb
retf
test
in
jmp
pop
out
loope
sbb
dec
(bad)
jmp
add
inc
sbb
out
clc
pop
adc
cmp
loope
sbb
out
popa
dec
aaa
xchg
adc
popf
out
loope
sbb
or
inc
fucomp
loope
sbb
dec
(bad)
sti
and
push
cdq
mov
jecxz
cmp
retf
loope
fucomp
loope
sbb
outs
in
iret
and
out
loope
sbb
out
loope
cmp
add
inc
sbb
mul
ja
repz
retf
and
out
loope
sbb
out
popa
cmps
cmp
add
mov
out
loope
sbb
out
loope
sbb
retf
loope
fucomp
loope
sbb
or
inc
fucomp
loope
sbb
out
loope
or
mov
jmp
xchg
adc
popf
out
loope
sbb
arpl
inc
sbb
out
loope
ds
mov
out
loope
sbb
add
ds
mov
out
loope
sbb
xchg
adc
popf
out
loope
sbb
out
loope
adc
mov
out
loope
sbb
xchg
adc
popf
out
loope
sbb
retf
test
in
aam
sbb
inc
pop
out
loope
sbb
out
loope
push
xchg
adc
popf
out
loope
sbb
outs
in
shl
out
loope
sbb
jecxz
cmp
retf
loope
fucomp
loope
sbb
jnp
mov
out
loope
sbb
out
loope
sbb
retf
loope
fucomp
loope
sbb
out
addr16
xor
adc
popf
out
loope
sbb
idiv
dec
or
out
loope
sbb
jge
mov
out
loope
sbb
out
loope
sbb
sbb
out
jg
mov
jecxz
cmp
retf
loope
fucomp
loope
sbb
xchg
adc
xchg
jle
mov
out
loope
sbb
out
loope
sbb
sbb
cmps
mov
xchg
lahf
sbb
mov
inc
(bad)
neg
hlt
cli
pop
shr
addr16
sti
ror
hlt
sahf
and
adc
movs
mov
imul
out
pop
jmp
popf
rol
add
sub
sub
mov
mov
sub
movs
add
into
xchg
add
lods
ret
out
xchg
pop
inc
pop
ins
cmp
adc
int
(bad)
sub
sub
icebp
cli
les
mov
and
jmp
jae
loope
out
jmp
fld
mov
inc
ds
push
cmp
ret
mov
iret
jmp
mov
es
dec
adc
jle
add
(bad)
pop
adc
pop
cmp
cmps
and
stc
dec
cmps
cli
test
ret
cli
mov
mov
icebp
add
inc
les
das
lds
add
fld
shl
sahf
adc
fisttp
ficomp
inc
loope
lea
cmp
sar
add
inc
sti
add
sbb
test
pop
jnp
pop
mov
repnz
push
arpl
sub
pushf
mov
les
lds
dec
in
mov
inc
shr
mov
add
mov
rol
hlt
and
jnp
jb
daa
and
add
cmps
hlt
and
inc
pop
fbld
inc
cmps
hlt
and
cmps
hlt
and
rol
movs
cmps
hlt
and
inc
aaa
mov
inc
cmps
hlt
and
gs
loopne
inc
shl
cmps
hlt
and
pop
push
shl
cmps
hlt
and
fs
rol
hlt
and
inc
and
rol
hlt
and
fs
rol
hlt
and
gs
and
cmps
je
ins
fild
add
cmps
hlt
and
arpl
and
cmps
je
ja
add
in
hlt
and
arpl
and
cmps
hlt
and
inc
inc
adc
movs
cmps
hlt
and
gs
clc
mov
push
shl
cmps
hlt
mov
mov
inc
ins
adc
inc
xor
movs
cmps
hlt
and
and
pushf
add
mov
inc
cmps
hlt
and
cmps
je
inc
inc
adc
add
push
arpl
cmps
hlt
and
gs
clc
lods
pop
push
shl
cmps
je
push
test
and
cmps
hlt
movs
popa
jb
rol
clc
lods
popf
push
shl
gs
add
gs
clc
lods
pop
push
shl
gs
add
cmps
hlt
and
dec
stos
gs
rol
hlt
and
rol
shl
cmps
hlt
and
jge
cs
pop
inc
sar
jnp
push
xor
movs
cmps
hlt
movs
arpl
and
cmps
hlt
and
rol
hlt
and
inc
cmps
hlt
and
gs
adc
add
hlt
and
rol
mov
and
and
and
fwait
fs
push
sbb
inc
shl
cmps
hlt
and
inc
inc
adc
movs
cmps
hlt
and
inc
cmp
add
and
jo
rol
hlt
and
gs
lods
pop
push
rol
inc
loope
add
cmps
hlt
and
popa
dec
dec
movs
rol
push
pushf
test
rol
hlt
and
jnp
ds
shl
cmps
hlt
and
inc
cs
inc
add
stos
pop
push
push
arpl
xchg
and
cmps
hlt
and
inc
cmps
hlt
and
gs
dec
jno
push
rol
and
dec
mov
mov
add
mov
and
mov
inc
cmps
hlt
and
cmps
hlt
and
inc
(bad)
pushf
xor
mov
add
cmps
hlt
and
jge
aad
movs
cmps
hlt
and
gs
inc
adc
xor
xor
inc
in
cmps
rol
add
test
ret
rol
pop
adc
xor
mov
and
sbb
xor
push
(bad)
cmp
sub
jle
adc
jle
pushf
cs
xchg
int
mov
(bad)
gs
test
and
lea
sub
shl
clc
or
sub
xor
sar
mov
mov
int
movs
fidiv
inc
ds
fld
movs
int
jg
pop
hlt
nop
popa
mov
sub
test
dec
sti
add
pop
enter
test
adc
aam
add
int
imul
movs
shr
(bad)
in
or
stos
inc
data16
jb
fld
sahf
adc
ret
cmp
out
jmp
mov
outs
sti
lea
retf
test
lds
and
cli
sub
int3
(bad)
sub
add
gs
mov
arpl
dec
cdq
test
push
xchg
aad
sti
test
pop
or
push
jmp
dec
in
clc
sbb
les
(bad)
ficom
sbb
or
push
mov
xchg
lea
jne
mov
adc
iret
and
je
(bad)
mov
or
mov
pusha
pop
xchg
adc
xchg
mov
out
in
sbb
xchg
inc
jg
in
cmp
inc
(bad)
mov
xchg
inc
pop
out
in
sbb
hlt
xchg
mov
out
in
sbb
mov
out
in
sbb
xchg
inc
jg
in
cmp
inc
inc
mov
xchg
inc
addr16
in
pop
mov
xchg
inc
pop
out
in
sbb
hlt
movs
js
mov
out
in
sbb
mov
out
in
sbb
xchg
inc
jg
in
cmp
inc
(bad)
mov
xchg
inc
push
mov
xchg
inc
imul
mov
sub
test
mov
out
in
sbb
xchg
inc
jg
in
cmp
les
push
pusha
pushf
xchg
adc
ds
mov
lea
pusha
pushf
xchg
adc
xchg
adc
cmp
les
mov
out
in
sbb
xchg
inc
jg
in
cmp
hlt
inc
inc
mov
xchg
inc
arpl
in
pop
mov
xchg
inc
fs
in
sbb
hlt
movs
js
test
sbb
les
fiadd
mov
les
movs
in
sub
mov
test
dec
jnp
pop
fldlg2
test
add
in
into
xchg
cmp
loop
arpl
adc
sub
out
cli
nop
out
mov
(bad)
jmp
xlat
(bad)
sub
and
xor
mov
retf
ins
push
fsub
cmp
and
and
(bad)
neg
sahf
adc
jmp
mov
add
imul
sub
and
jp
or
add
push
sbb
sub
xor
jl
add
add
aas
dec
cdq
add
add
jle
push
ror
push
fs
add
lds
(bad)
mov
les
arpl
das
bound
lds
mov
pop
fwait
mov
les
lds
lar
add
pop
jnp
adc
jmp
inc
mov
(bad)
loopne
cli
mov
jp
stc
test
idiv
sub
jmp
(bad)
jmp
pop
loop
shl
add
pop
enter
mov
xchg
cmp
mov
xchg
(bad)
les
clc
int3
pop
movs
add
mov
lahf
xchg
popf
and
pop
repz
out
out
fisub
loop
pop
push
(bad)
jb
push
div
push
(bad)
jb
push
pop
or
dec
sub
(bad)
jb
push
outs
fs
sbb
push
addr16
cdq
jae
jb
push
(bad)
jb
push
pop
add
hlt
mov
mov
jb
push
(bad)
jb
int3
out
repnz
loop
ss
mov
or
dec
(bad)
jb
push
(bad)
jb
call
(bad)
jb
push
push
or
dec
(bad)
jb
push
(bad)
jb
call
(bad)
jb
call
jb
jmp
jb
push
outs
fs
dec
(bad)
jb
push
(bad)
jb
call
add
jnp
and
dec
(bad)
jb
push
jecxz
pop
push
(bad)
jb
fs
or
dec
(bad)
jb
push
push
or
dec
(bad)
jb
push
bound
adc
push
icebp
dec
push
or
int3
inc
push
lahf
push
(bad)
jb
push
push
or
dec
(bad)
jb
push
inc
or
dec
push
(bad)
(bad)
fild
jb
push
inc
push
dec
adc
xchg
cli
in
jecxz
addr16
and
adc
mov
jb
push
(bad)
(bad)
jp
mov
loopne
popf
loop
sub
jb
push
(bad)
xor
loopne
fild
jb
push
(bad)
mov
dec
inc
push
push
adc
push
sti
cwde
fnsave
(bad)
jb
push
(bad)
ss
dec
inc
pop
mov
xor
push
(bad)
jb
push
inc
or
dec
push
push
clc
popa
lock
int3
loope
out
loop
adc
movs
adc
push
fild
jb
push
inc
or
dec
(bad)
jb
push
(bad)
jb
push
xor
dec
(bad)
jb
push
(bad)
jb
dec
push
or
mov
xchg
mov
push
(bad)
jb
jle
xchg
push
(bad)
pop
jnp
add
fwait
inc
push
or
mov
cmps
fs
jmp
jb
sub
push
inc
push
(bad)
jb
mov
(bad)
jb
push
mov
jb
push
inc
jbe
mov
xchg
sbb
jb
push
jecxz
addr16
mov
xchg
(bad)
jb
push
(bad)
jb
fs
or
(bad)
jb
push
test
pop
mov
mov
dec
fcom
adc
mov
jb
push
sbb
ss
mov
push
(bad)
jb
outs
xor
push
(bad)
jb
call
inc
cmps
mov
inc
(bad)
push
hlt
jbe
enter
fcomip
fdivr
iret
ret
loop
jae
add
fimul
dec
jae
xor
xchg
(bad)
jb
push
(bad)
(bad)
jbe
mov
loopne
popf
bound
adc
push
fild
jb
push
(bad)
repnz
popf
loope
pop
push
push
imul
(bad)
jb
push
push
or
dec
(bad)
jb
push
inc
or
dec
push
(bad)
jmp
loope
out
loop
adc
jecxz
addr16
and
dec
push
or
mov
idiv
leave
cli
ss
repnz
iret
or
inc
dec
xchg
mov
outs
fidivr
dec
xchg
shl
cli
fs
xchg
shr
or
popf
and
aad
loopne
pop
ret
or
inc
mov
push
mov
std
retf
test
pop
cs
pop
lock
and
mov
(bad)
int
mov
mov
inc
nop
or
or
cmps
jecxz
sbb
mov
cld
push
in
cmp
add
pop
adc
jp
adc
sub
les
inc
(bad)
cmps
bound
xor
das
pop
test
imul
sub
stc
cmp
ret
cli
aas
imul
adc
nop
xchg
(bad)
stos
repnz
test
pop
movs
sub
adc
cmc
jg
leave
push
ds
les
adc
arpl
adc
stc
jmp
mov
movs
fidivr
test
ret
cli
mov
lds
les
jle
test
and
mov
jle
mov
out
jmp
xor
add
add
push
hlt
nop
mov
out
nop
dec
and
stos
or
dec
call
iret
jmp
mov
and
add
(bad)
(bad)
jmp
enter
add
pop
mov
stos
test
sbb
ret
fild
sbb
jmp
pop
cld
inc
stos
xchg
jae
lds
jle
xchg
xchg
and
stos
sbb
xor
retf
pusha
sub
fistp
in
cmp
mov
cli
xlat
pop
out
jns
mov
jecxz
and
(bad)
xor
retf
jns
and
lods
out
scas
pop
imul
or
sti
(bad)
sbb
retf
jns
std
cli
pop
xor
retf
jns
sahf
(bad)
adc
pop
outs
call
push
loope
adc
mov
mov
mov
mov
fmulp
xchg
mov
retf
jns
mov
(bad)
adc
fild
sbb
loope
adc
scas
cld
dec
dec
out
ficomp
rcr
adc
jno
popf
aam
or
mov
retf
jns
mov
popf
or
outs
daa
jmp
mov
retf
jns
sti
stc
retf
add
pop
add
dec
out
jns
mov
retf
jns
out
out
ins
xor
retf
jns
mov
(bad)
adc
pop
outs
jne
sar
xor
retf
jns
sahf
into
add
lahf
dec
push
mov
jle
xor
retf
stc
jbe
sar
mov
retf
or
cmp
out
jns
mov
call
rcl
push
repz
daa
xchg
(bad)
loope
xchg
jle
bound
and
jne
sar
xor
(bad)
cs
retf
std
adc
sahf
nop
push
test
jle
mov
pop
add
lahf
dec
pop
test
jle
xor
retf
jns
mov
jle
cmp
xor
mov
(bad)
sbb
loope
adc
mov
mov
retf
jns
xchg
push
pop
scas
arpl
pusha
scas
popf
adc
or
mov
sar
adc
retf
jns
mov
push
pop
test
jle
fisubr
test
cdq
into
lahf
in
rcr
pop
and
xor
das
test
mov
(bad)
popf
out
mov
loopne
dec
in
call
and
arpl
fistp
add
adc
push
pusha
and
movs
ret
mov
retf
push
push
fsub
mov
fisubr
pop
sub
xchg
xchg
mov
ds
pop
seta
loope
xor
sub
jmp
add
in
enter
mov
cmp
bound
cli
push
scas
inc
(bad)
stos
dec
add
shr
inc
add
xor
out
cmp
dec
(bad)
aad
les
push
imul
nop
push
je
adc
icebp
add
arpl
jbe
cmp
push
mov
xor
aam
ds
pusha
ss
sbb
ds
sub
mov
jmp
into
enter
iret
stos
or
ds
mov
sbb
call
in
pusha
mov
push
pop
arpl
add
int
mov
aad
sti
test
push
inc
xchg
cmp
mov
and
mov
jnp
mov
int
dec
cdq
inc
inc
out
ret
(bad)
jg
mov
jp
xor
pop
sti
sahf
push
loop
pop
test
sar
aad
outs
xchg
arpl
mov
aad
fmul
aad
sti
pop
push
mov
pop
xchg
dec
test
jge
fs
mov
iret
adc
in
rdmsr
mov
jns
inc
pushf
leave
rdmsr
mov
add
xchg
pop
in
rdmsr
mov
rol
ret
sub
leave
pslld
lea
dec
dec
in
lss
ds
xor
lds
mov
leave
pslld
leave
addr16
sub
rdmsr
mov
leave
pslld
ins
mov
mov
leave
pslld
cmp
jb
leave
pslld
leave
(bad)
popf
jle
inc
pushf
lds
mov
leave
pslld
leave
call
sub
pslld
or
(bad)
fsubr
ja
pushf
push
cs
cmp
mov
leave
pslld
loope
out
inc
ja
pop
sub
rdmsr
mov
je
inc
pop
ins
not
and
jmp
in
push
xchg
and
loopne
dec
in
mov
es
push
pushf
leave
rdmsr
mov
leave
pslld
lds
mov
leave
pslld
leave
addr16
jmp
mov
leave
pslld
cmp
jb
leave
pslld
leave
iret
into
sub
sub
rdmsr
mov
leave
pslld
mov
(bad)
pop
sub
pslld
leave
pslld
mov
dec
sub
out
sar
sbb
cmp
call
pushf
dec
xchg
(bad)
leave
pslld
(bad)
fcmovbe
(bad)
loop
repnz
leave
pslld
sbb
(bad)
clc
jg
mov
ja
pushf
leave
rdmsr
mov
sub
pslld
aad
xlat
or
retf
pop
pushf
cs
sub
ja
pushf
outs
mov
sub
jmp
pushf
leave
rdmsr
mov
leave
pmuludq
cmp
jb
sub
pslld
or
xchg
push
add
cli
(bad)
and
or
ins
rcl
adc
pslld
leave
pslld
(bad)
mov
leave
pslld
leave
rdmsr
mov
leave
dec
iret
ins
cmp
rdmsr
mov
leave
(bad)
hlt
into
out
rdmsr
mov
jmp
mov
leave
pslld
sub
mov
leave
pslld
leave
pslld
out
rdmsr
mov
leave
pslld
sub
leave
pslld
sbb
hlt
scas
leave
pslld
leave
pminsw
mov
(bad)
(bad)
dec
es
cmp
jb
leave
pslld
leave
pminub
mov
cli
xchg
mov
leave
push
(bad)
popf
pop
in
xchg
adc
cld
sbb
imul
or
pop
sub
push
sbb
mov
leave
pslld
sub
rdmsr
mov
leave
pslld
cmp
js
sub
pslld
sub
rdmsr
mov
leave
psubsw
push
call
push
mov
leave
pslld
mov
xchg
xchg
add
cmp
popf
jp
inc
pushf
(bad)
ficom
loop
retf
stos
mov
(bad)
aam
loopne
sub
mov
daa
push
xchg
xchg
dec
and
mov
dec
in
xchg
xchg
xor
loop
retf
stos
mov
cmp
jb
leave
pslld
cmp
push
mov
pop
sub
inc
pushf
leave
rdmsr
mov
jle
inc
pushf
outs
mov
mov
je
inc
pushf
dec
and
sar
pop
or
jmp
push
mov
(bad)
mov
leave
pslld
loope
out
(bad)
loope
leave
pslld
leave
push
jmp
lss
leave
out
test
and
sub
out
mov
cmp
jb
leave
pslld
add
(bad)
pop
in
rdmsr
mov
leave
pslld
mov
or
mov
daa
dec
outs
jmp
mov
leave
pslld
sub
imul
sar
ror
push
mov
cli
push
(bad)
mov
xchg
pop
popa
cmps
xlat
pop
inc
cli
push
adc
dec
ins
cmps
push
js
cli
push
data16
dec
lods
push
pop
pop
aad
and
pop
jbe
add
dec
in
xor
and
pop
jns
add
adc
xor
jecxz
inc
xor
xor
push
add
jno
add
retf
(bad)
cmp
mov
jo
push
inc
mov
pop
push
dec
pop
jg
add
pusha
dec
mov
mov
jmp
pop
cmp
or
jmp
mov
add
mov
in
jmp
push
inc
jne
add
stos
mov
xchg
cmp
inc
jp
sti
inc
add
or
inc
mov
fld
in
(bad)
sub
xor
jl
rcr
xchg
add
mov
(bad)
mov
adc
inc
inc
jmp
sbb
fst
jecxz
xor
sbb
addr16
mov
nop
aad
lods
rol
mov
cmp
pop
cmp
add
scas
sti
pop
or
(bad)
pop
(bad)
add
pop
(bad)
sbb
dec
sbb
mov
push
mov
jo
add
ret
(bad)
aas
dec
popf
add
dec
add
in
enter
add
fmul
mov
aad
out
sub
jmp
or
loopne
mov
add
push
or
(bad)
std
lahf
lea
or
push
or
cmps
shl
or
push
or
push
or
imul
loopne
push
or
push
or
dec
xchg
loope
sub
and
test
(bad)
sub
das
dec
or
push
or
push
or
push
mov
out
(bad)
jmp
push
arpl
lahf
dec
cs
icebp
lea
add
push
or
push
or
loope
lock
add
push
or
outs
push
movs
sbb
push
or
push
or
addr16
call
icebp
inc
mov
(bad)
inc
mov
(bad)
inc
mov
(bad)
inc
mov
into
cmc
inc
jns
icebp
inc
mov
into
hlt
dec
push
or
push
or
push
mov
cwde
mov
or
xchg
stc
jmp
test
push
or
pop
fsubr
scas
jae
add
push
or
push
or
cmps
in
push
xchg
stc
jmp
test
mov
jmp
test
xchg
stc
jmp
test
push
or
xchg
stc
jmp
test
push
or
mov
jmp
cmp
inc
jp
add
push
or
mov
or
push
or
push
mov
cwde
mov
or
xchg
stc
jmp
test
push
or
push
or
push
or
mov
jmp
push
push
or
push
or
mov
xchg
stc
jmp
test
push
or
push
or
push
or
cwde
mov
fiadd
mov
bound
mov
sub
or
and
test
push
mov
and
fisttp
push
or
ror
add
push
mov
imul
test
stos
das
rcr
pop
mov
or
cmp
popf
mov
cmp
loope
(bad)
mov
sbb
mov
loopne
lock
jb
push
pushf
mov
lea
adc
mov
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
aaa
pop
loopne
into
inc
loopne
into
inc
loopne
dec
mov
loopne
into
inc
loopne
push
xor
cld
sub
and
inc
into
push
mov
sub
jle
data16
jle
test
stos
dec
sbb
pop
frstor
or
arpl
mov
mov
dec
repnz
int
pushf
stos
sbb
cmp
ret
sbb
adc
sahf
fmul
xor
and
mov
push
sbb
add
pop
sti
les
pop
enter
test
dec
shr
fisttp
add
stos
enter
pop
sbb
std
xchg
loopne
sbb
add
mov
cmp
les
jge
aam
push
inc
add
outs
and
(bad)
sub
sub
ffreep
(bad)
jg
sbb
loop
ret
mov
xor
add
test
aad
add
adc
push
iret
popf
jp
test
lds
dec
cdq
inc
les
das
(bad)
std
mov
rcl
sub
les
aam
sub
les
pop
jle
les
lds
scas
mov
cmp
scas
fcmovne
aam
movs
adc
and
jmp
xend
pop
jmp
ret
cli
aas
imul
nop
sahf
jle
add
enter
int
inc
les
inc
mov
inc
cmp
mov
mov
or
(bad)
lock
push
cmp
push
fild
ins
sub
sub
dec
jmp
mov
aam
or
ror
fucomip
(bad)
mov
enter
div
add
pusha
pushf
or
repnz
fcom
sti
in
std
into
push
jle
ret
ds
sbb
mov
retf
cdq
mov
movs
inc
in
lds
dec
popf
(bad)
shr
mov
push
push
add
inc
retf
sub
push
push
mov
xchg
or
in
mov
jecxz
js
loopne
xchg
mov
cmp
xor
jbe
sbb
mov
pop
(bad)
xor
xchg
sbb
(bad)
in
jmp
jmp
adc
fst
mov
adc
sub
fldcw
mov
mov
sahf
adc
sub
mov
cmc
aas
push
lahf
sub
aad
sti
push
shl
inc
add
ins
xchg
aad
add
(bad)
sub
sub
icebp
sti
inc
outs
(bad)
stc
(bad)
sub
(bad)
jmp
pop
push
add
in
aad
jg
jl
stc
add
adc
movs
shr
push
sub
int3
add
movs
sub
adc
jp
add
rol
sub
(bad)
int3
dec
cdq
test
adc
add
pop
(bad)
sbb
inc
mov
aad
jmp
bound
cmp
out
pop
jnp
add
cdq
pop
add
sbb
into
inc
mov
nop
stos
out
add
daa
push
sbb
test
out
pop
push
out
ins
jle
inc
cmp
ret
std
or
inc
jmp
cmp
call
pop
and
rcl
and
jbe
scas
add
nop
pop
and
rcl
and
jne
scas
add
nop
pop
and
rcl
and
inc
in
and
rcl
(bad)
mul
stos
dec
and
inc
jns
dec
xor
pop
and
xchg
cmc
inc
and
rcl
nop
stos
inc
inc
cmp
pop
xor
pop
and
rcl
and
je
scas
add
adc
rcl
and
rcl
and
repz
mov
pop
aaa
outs
and
outs
and
imul
(bad)
in
repnz
in
rcl
gs
fisttp
dec
and
or
adc
cmp
adc
xchg
inc
(bad)
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
or
test
mov
(bad)
(bad)
jmp
pop
(bad)
mov
(bad)
and
add
sar
pop
(bad)
fs
inc
adc
jecxz
ret
mov
retf
sub
frstor
dec
int3
hlt
add
jmp
retf
iret
sub
rol
push
pop
mov
sub
sub
sub
test
nop
fs
stos
or
jle
call
pop
inc
mov
adc
xchg
add
arpl
pusha
add
or
jmp
jb
dec
cld
xlat
mov
mov
nop
mov
jmp
cmp
sti
sahf
push
loop
das
push
ja
les
pop
shr
nop
pop
jle
add
jo
sub
push
nop
out
fld
mov
(bad)
sbb
mov
jnp
add
ret
int
cld
test
mov
mov
xchg
(bad)
pop
in
jmp
lods
ror
cmps
test
int3
xchg
push
fnstsw
xchg
add
inc
xor
(bad)
rol
ins
inc
mov
jge
mov
mov
add
fild
aad
jmp
inc
in
retf
jl
sbb
cmp
fs
fsubr
mov
(bad)
mov
fisubr
mov
fucomi
mov
fisubr
xchg
fsubr
push
iret
push
repz
sbb
sbb
fisubr
stos
push
iret
xor
push
mov
xor
fsubrp
inc
mov
int3
inc
repnz
(bad)
aad
cmp
sub
inc
repnz
inc
repnz
add
fbstp
cmps
sbb
sub
or
push
bound
sub
inc
repnz
inc
repnz
sar
fsubrp
inc
jb
int3
inc
repnz
inc
repnz
mov
and
retf
iret
cld
fcom
popa
movs
mov
sub
inc
repnz
inc
repnz
and
inc
jb
int3
inc
repnz
xchg
outs
cdq
idiv
(bad)
push
rcl
addr16
int3
inc
repnz
inc
repnz
and
sub
inc
repnz
inc
repnz
fwait
cmp
aad
mov
arpl
cmps
push
sub
inc
repnz
inc
repnz
es
bswap
inc
xor
int3
inc
repnz
inc
repnz
(bad)
iret
xor
inc
repnz
(bad)
into
xor
int3
inc
repnz
inc
repnz
add
jle
cmps
retf
bswap
inc
xor
int3
inc
repnz
int3
iret
and
push
aad
mov
sub
mov
inc
xor
int3
inc
(bad)
mov
mov
sub
inc
repnz
inc
repnz
inc
repnz
test
int
icebp
inc
xor
int3
inc
repnz
inc
repnz
xchg
(bad)
into
je
(bad)
int3
inc
mov
int3
inc
out
push
or
loopne
jb
int3
inc
repnz
cmp
sub
inc
repnz
inc
repnz
inc
repnz
mov
cmp
call
inc
repnz
inc
repnz
xchg
int3
jl
push
and
push
bound
inc
cmp
sub
inc
repnz
inc
hlt
ret
inc
bswap
inc
xor
int3
inc
repnz
inc
(bad)
mov
push
scas
push
cmps
push
iret
push
jo
sub
inc
repnz
(bad)
sub
inc
repnz
inc
bnd
inc
pop
mov
loope
iret
call
inc
repnz
ins
mov
int3
inc
repnz
inc
repnz
xor
int3
inc
repnz
inc
repnz
xor
int3
add
push
sub
sub
inc
repnz
add
fisubr
inc
repnz
inc
bnd
cmps
ror
call
mov
lods
sub
fisubr
jae
or
inc
xor
int3
inc
repnz
add
fbstp
cmps
sbb
sub
or
push
bound
sub
inc
repnz
inc
dec
mov
sub
inc
repnz
inc
repnz
inc
repnz
scas
mov
xor
int3
inc
repnz
ret
fistp
repz
dec
inc
mov
aad
mov
fdiv
cmps
push
sub
inc
repnz
inc
repnz
scas
mov
xor
int3
inc
repnz
ret
fistp
repz
sbb
push
aad
mov
ret
xor
repnz
inc
repnz
scas
mov
xor
int3
inc
repnz
movs
xor
fwait
jnp
out
mov
cmp
test
push
fcmovnbe
cmps
push
iret
call
inc
repnz
inc
inc
mov
jle
cmps
xchg
sub
inc
repnz
inc
repnz
pop
out
icebp
pop
cdq
(bad)
jne
xor
stos
leave
inc
bswap
inc
xor
int3
inc
idiv
jle
shr
push
mov
test
jle
mov
sub
inc
repnz
inc
repnz
inc
repnz
cdq
addr16
xor
inc
mov
int3
inc
repnz
inc
repnz
dec
stos
shl
stos
or
retf
sub
inc
repnz
inc
repnz
out
clc
(bad)
test
mov
push
xor
adc
sub
inc
repnz
shl
int3
inc
repnz
inc
repnz
ret
clc
iret
sub
push
sub
inc
repnz
inc
repnz
fwait
call
push
push
fsubr
inc
xor
int3
inc
repnz
inc
repnz
inc
out
dec
jmp
stos
or
retf
sub
inc
repnz
out
clc
(bad)
test
mov
(bad)
test
inc
repnz
inc
repnz
(bad)
sub
inc
repnz
inc
repnz
(bad)
sub
inc
repnz
inc
repnz
inc
repnz
fnstenv
xchg
(bad)
call
inc
repnz
inc
repnz
(bad)
xlat
pop
inc
mov
ins
into
mov
fs
pop
inc
mov
sub
js
push
mov
jne
pop
sub
add
fisubr
popf
push
sbb
mov
inc
daa
push
scas
add
sub
inc
(bad)
push
or
pop
mov
cmp
test
mov
(bad)
(bad)
jmp
nop
lea
mov
cdq
frstor
in
pushf
or
push
mov
mov
add
dec
repz
sub
(bad)
cmp
mov
imul
fdivr
lds
mov
jmp
ret
cli
aas
imul
jp
or
daa
andnps
sub
call
add
mov
mov
jmp
ds
out
sbb
sub
les
pop
and
imul
and
movs
sub
rcr
cli
mov
adc
push
push
rol
ret
add
in
push
nop
ror
mov
aad
cmp
stos
jecxz
aad
leave
pop
sbb
(bad)
jmp
fs
fnstsw
daa
aad
mov
add
push
hlt
inc
jo
fiadd
aad
hlt
rcr
cmps
add
arpl
xchg
icebp
pop
mov
mov
(bad)
dec
aad
mov
cmp
aas
add
sbb
add
fmul
jg
jg
ja
cdq
outs
(bad)
stos
mov
out
stos
addr16
sub
dec
add
pop
(bad)
push
inc
dec
hlt
sub
adc
movs
and
clc
inc
add
push
xchg
lds
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
pop
dec
popf
ret
push
lods
repz
jns
int
inc
out
push
pushf
iret
frstor
pop
mov
fnstenv
repz
pop
mov
mov
jns
xlat
mov
adc
pop
dec
popf
ret
push
lods
repz
jns
xlat
mov
jae
repz
pop
mov
mov
jns
xlat
jge
ret
xlat
xor
ret
jae
repz
pop
mov
mov
arpl
out
iret
inc
cmp
sub
xchg
push
sahf
shl
fld
mov
repz
jns
xlat
mov
pop
ret
jae
repz
adc
mov
jns
fidiv
repz
pop
mov
mov
arpl
outs
sbb
repnz
int3
xor
fnstsw
xlat
mov
jns
cmp
sahf
cmp
dec
cwde
xor
popf
mov
pop
xlat
mov
jne
inc
dec
popf
pop
xlat
mov
jns
or
pop
popf
jge
pop
mov
and
mov
xlat
mov
inc
ret
pop
daa
mov
push
mov
and
int3
jge
mov
jns
xlat
mov
pop
pusha
cmps
inc
frstor
mov
sbb
lods
mov
frstor
mov
sbb
popf
sahf
mov
xor
aam
and
int3
jge
cwde
mov
pop
xlat
mov
inc
ret
pop
daa
mov
push
mov
and
int3
jge
mov
jns
sbb
pop
xlat
mov
jns
or
aaa
ins
lods
repz
aam
dec
popf
ret
push
lods
repz
jns
xlat
mov
arpl
inc
dec
popf
pop
xlat
mov
jns
or
fld
jge
push
mov
and
int3
jge
mov
jns
xlat
mov
popf
fnstsw
ins
lods
xor
js
push
xor
and
int3
jge
mov
jns
xlat
mov
int3
mov
ds
fcomp
xlat
mov
jns
xlat
sub
lods
inc
dec
sbb
(bad)
jg
pop
xchg
inc
dec
popf
icebp
mov
in
lods
jae
fdivr
inc
dec
popf
xchg
mov
ins
lods
xor
rol
pushf
and
push
addr16
mov
(bad)
(bad)
jmp
daa
dec
mov
and
jecxz
and
aaa
rcl
ror
sub
(bad)
sub
aas
int3
cmp
adc
ficomp
sti
pop
(bad)
loop
lea
clc
fdiv
mov
push
bound
pop
fwait
(bad)
sub
inc
loop
mov
or
mov
and
mov
mov
add
(bad)
(bad)
push
sub
sub
adc
jecxz
imul
jb
add
mov
stos
or
cmc
aas
aaa
rcl
ror
ds
cmp
(bad)
sub
(bad)
jmp
jnp
call
mov
inc
add
mov
(bad)
cmp
shr
(bad)
cld
(bad)
sub
sub
test
mov
shl
inc
adc
mov
adc
sub
push
cmp
adc
rcl
stos
(bad)
pop
mov
add
jb
ss
popf
add
add
(bad)
ret
jne
pop
mov
clc
pop
jnp
les
push
(bad)
add
pop
dec
jne
jle
dec
cdq
inc
(bad)
enter
inc
aam
mov
inc
jge
sbb
add
pop
jmp
(bad)
mov
(bad)
and
mov
sar
sbb
cmp
(bad)
mov
adc
idiv
and
jge
and
jge
and
jge
and
jge
and
jge
and
jge
and
jge
and
jge
and
jge
and
jge
and
jge
and
jge
and
jge
and
jge
and
jge
and
movs
mov
cmp
xor
xor
ins
sub
cmc
push
imul
pusha
and
cmp
jno
lds
mov
sar
and
cmp
jae
les
je
lds
mov
sar
and
cmp
mov
(bad)
xor
cdq
add
sbb
adc
xchg
jmp
jo
jne
test
xor
cdq
test
movs
int
pop
fsubr
mov
inc
call
push
(bad)
cmc
cdq
test
xchg
sub
and
push
jnp
loop
cdq
test
xor
sbb
adc
ins
loopne
xchg
imul
(bad)
xor
gs
cmp
ins
pusha
imul
mov
test
xor
cdq
mov
mov
test
xor
cli
data16
cdq
test
xor
lock
cmp
rcr
std
jp
lds
aaa
sar
test
xor
add
dec
cmp
jno
lds
movs
loopne
ins
mov
(bad)
xor
add
jne
test
xor
addr16
push
jno
and
jge
and
addr16
out
in
xor
cdq
test
xor
push
adc
add
test
xor
addr16
and
mov
jno
scas
mov
test
cmc
cdq
test
xor
pop
mov
push
cli
data16
cdq
test
xor
cdq
test
xor
shr
data16
or
add
(bad)
mov
test
xor
addr16
sar
and
jge
cmp
add
(bad)
jne
test
xor
mov
test
xor
pop
jp
adc
imul
mov
test
cmc
cdq
test
xor
jge
and
addr16
es
jp
out
mov
test
cmc
cdq
test
xor
ins
mov
(bad)
xor
addr16
sar
and
jge
cmp
add
(bad)
jne
test
xor
mov
test
fnstsw
cmp
jns
mov
ret
loop
cdq
test
xor
ins
mov
(bad)
xor
addr16
sar
and
jge
cmp
add
(bad)
jne
test
xor
mov
test
xor
ins
jp
fnstsw
cmp
jns
mov
ret
loop
cdq
test
xor
push
push
xor
cdq
test
xor
addr16
sar
and
jge
cmp
add
(bad)
jne
test
xor
cdq
test
sub
cdq
test
xor
cdq
test
or
and
add
aas
ins
and
not
xor
test
jno
jne
test
xor
pop
jp
adc
dec
xor
push
mov
imul
mov
test
xor
add
xor
jge
pop
loopne
pusha
js
or
and
add
aas
ins
pusha
pop
mov
cdq
test
xor
pop
mov
cwde
xor
cmc
cdq
test
xor
cdq
test
xor
push
push
cmp
retf
pusha
cwde
mov
jne
test
xor
pop
cmp
pusha
clc
mov
add
xor
jge
pop
loopne
mov
xor
xchg
(bad)
cmc
cdq
test
or
sbb
adc
sub
mov
test
xor
or
bound
xchg
sbb
adc
sub
mov
test
xor
mov
pusha
and
mov
test
xor
jo
dec
cmp
(bad)
xor
dec
cmp
(bad)
xor
dec
cmp
(bad)
xor
fbld
(bad)
xor
cdq
les
mov
test
xor
fbld
(bad)
xor
pusha
movs
and
rcl
int
inc
scas
jge
and
and
cmp
test
xor
cdq
test
xor
std
jns
cmc
cdq
test
xor
std
imul
test
cmc
cdq
test
xor
cdq
shl
adc
cmp
cdq
test
xor
pop
ins
mov
mov
test
xor
ins
mov
(bad)
xor
cdq
test
add
xor
cdq
test
xor
cdq
test
xor
cdq
test
xor
cdq
test
xor
and
loop
cdq
test
xor
cdq
test
or
rcl
int3
mov
sbb
jns
(bad)
int3
lea
loop
cdq
test
xor
data16
push
cdq
test
xor
cdq
test
xor
mov
(bad)
xor
cmp
test
xor
jge
and
jcxz
push
add
(bad)
jne
test
xor
push
pop
dec
add
test
xor
ins
jp
fnstsw
cmp
addr16
out
in
xor
cdq
test
xor
cdq
test
adc
jno
jne
test
xor
cdq
test
cs
sub
inc
sahf
add
xor
cdq
test
xor
cdq
test
xor
mov
test
xor
xchg
add
mov
test
xor
cdq
adc
mov
imul
cdq
test
xor
or
loop
jb
dec
cmp
(bad)
xor
jge
(bad)
cmc
cdq
test
xor
cdq
test
cmp
outs
mov
mov
test
xor
mov
ds
mov
test
xor
jge
and
addr16
and
std
jp
out
mov
test
cmc
cdq
test
xor
cdq
dec
pop
aas
ins
mov
(bad)
xor
jno
and
jge
and
addr16
out
in
xor
cdq
test
xor
push
push
dec
add
test
xor
cld
adc
xchg
pop
outs
pop
aas
ins
mov
(bad)
xor
mov
test
xor
xchg
adc
fisttp
mov
cmc
cdq
test
xor
cdq
test
mov
xor
in
adc
mov
test
xor
cdq
test
xor
data16
mov
test
cmc
cdq
test
xor
dec
cmp
(bad)
xor
popf
outs
(bad)
int3
xor
mov
push
cmp
(bad)
cmc
cdq
test
xor
cdq
test
cmp
pop
inc
sbb
adc
xchg
push
bound
xchg
mov
test
xor
cdq
pop
retf
push
popf
push
loopne
cld
sub
shld
pop
pop
inc
sbb
adc
xchg
pop
outs
pop
aas
ins
mov
(bad)
xor
mov
test
sub
or
mov
cmc
cdq
test
xor
mov
xor
out
adc
mov
test
xor
int
imul
mov
test
cmc
cdq
test
xor
dec
cmp
(bad)
xor
cdq
jno
push
cmp
add
(bad)
or
bound
pusha
and
cdq
test
xor
or
aaa
cs
lods
push
mov
jge
loop
cdq
test
xor
cdq
pop
retf
push
popf
push
loopne
cld
sub
shld
cdq
test
and
mov
fnstsw
push
cmp
(bad)
(bad)
pop
push
cmp
in
sbb
jmp
(bad)
pop
jnp
into
xchg
add
sub
and
mov
push
jle
mov
sub
or
sub
inc
pop
xor
add
add
or
popf
ds
sub
mov
fst
jmp
and
push
outs
ins
lahf
and
and
les
mov
add
mov
pop
mov
(bad)
jmp
enter
add
ret
(bad)
aas
dec
fld
scas
mov
pop
dec
mov
inc
mov
cmc
add
push
and
jmp
(bad)
mov
lds
push
das
push
xor
test
shl
sti
add
cdq
fadd
or
mov
out
stos
dec
pop
lea
arpl
xchg
add
jmp
cmp
jmp
sub
ds
cdq
add
jle
dec
sub
aad
les
int
ror
pop
mov
loopne
rol
adc
mov
(bad)
(bad)
pop
jnp
dec
ffree
arpl
push
jle
fimul
les
fnstsw
aad
sti
jb
sbb
add
sbb
adc
mov
aad
(bad)
int3
jb
frstor
mov
sbb
out
lea
mov
mov
loope
(bad)
sbb
xchg
ret
mov
sub
sbb
gs
movs
mov
gs
adc
sub
inc
sbb
movs
xchg
mov
jb
mov
ss
xchg
cmp
push
inc
js
mov
cmp
mov
gs
mov
loop
ds
sar
xchg
test
xor
mov
inc
js
mov
in
add
lock
fsub
add
push
(bad)
aad
inc
sub
lea
fcomp
(bad)
pop
dec
nop
sbb
mov
cmp
add
adc
inc
jbe
lea
fcomp
(bad)
pop
dec
nop
sbb
mov
cmp
xor
sar
xchg
test
jge
pushf
aad
add
cmp
inc
js
mov
cmp
push
or
adc
push
or
cmp
js
mov
cmp
add
adc
iret
ss
add
and
adc
jecxz
sti
or
and
and
out
mov
mov
gs
pop
inc
and
gs
movs
mov
inc
add
push
xor
or
adc
div
lea
or
es
jle
imul
jnp
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
inc
enter
sbb
dec
in
xor
cmp
loopne
arpl
pop
mov
cmp
ss
add
cs
add
into
std
les
shr
xchg
ds
or
cmc
dec
fucom
add
mov
jo
(bad)
and
js
mov
push
fldenv
adc
jmp
xlat
xchg
jle
shr
sahf
push
arpl
pop
add
and
sub
jg
xor
loopne
pop
rcl
mov
fs
stos
lea
sub
fs
jmp
cmps
std
xor
cmc
les
aad
lock
mov
xchg
jle
or
aad
mov
(bad)
sub
call
inc
ds
sub
sub
(bad)
aas
dec
popf
add
rcl
ret
add
je
cmp
loopne
and
ret
add
fadd
(bad)
jg
mov
(bad)
cli
mov
and
shr
inc
sub
fld
xchg
or
push
pushf
jecxz
jb
lea
pushf
pop
pop
(bad)
jle
jno
ds
fld
nop
lea
icebp
pop
jmp
pop
jnp
les
jmp
push
sbb
cmp
nop
mov
sar
fidiv
adc
fistp
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
js
and
cmp
lds
les
pushf
lods
les
sub
(bad)
mov
adc
xlat
ret
ret
mov
lods
les
pushf
lods
les
sbb
cmps
lds
les
pushf
lods
les
pushf
lods
les
pushf
lods
ins
(bad)
imul
repz
or
mov
jp
sbb
dec
loopne
pushf
ins
les
pushf
lods
les
pushf
lods
les
lods
les
pushf
lods
les
pop
xchg
jl
imul
les
pushf
lods
les
pushf
lods
inc
mov
mov
mov
lahf
or
and
lods
jbe
cmp
in
les
pushf
lods
les
pushf
lods
inc
add
cmp
add
inc
jl
imul
les
pushf
lods
les
pushf
lods
add
and
or
push
xor
lods
aaa
in
cmc
sbb
daa
pushf
ins
les
pushf
lods
les
sbb
daa
pushf
lods
les
pushf
lods
cli
mov
cmp
rcr
sbb
pop
pop
dec
loop
imul
push
sar
lods
add
or
iret
push
push
inc
mov
mov
sahf
or
loopne
jp
inc
mov
mov
mov
and
add
cmp
xchg
movs
fnstcw
sbb
daa
pushf
ins
les
sbb
adc
mov
sub
and
pop
ds
mov
ret
mov
lods
les
mov
arpl
and
cmp
in
or
loopne
pushf
ins
les
pushf
mov
inc
mov
push
and
pop
ds
mov
ret
mov
lods
les
pushf
test
ds
adc
mov
sub
daa
pushf
lods
les
pushf
lods
les
aaa
in
cmc
sbb
daa
pushf
ins
les
pushf
mov
and
js
loopne
pushf
ins
les
pushf
lods
les
cmp
cmp
lods
imul
lods
imul
dec
imul
les
pushf
lods
add
js
movs
fprem
xchg
mov
push
mov
les
pushf
lods
cli
jl
pop
mov
and
sbb
daa
pushf
ins
les
pushf
lods
les
pushf
test
ret
movs
dec
cmp
enter
mul
xor
sbb
daa
pushf
ins
les
pop
mov
sub
lods
les
xor
add
xchg
sub
pushf
lods
les
pushf
lods
les
pushf
lods
les
nop
xchg
push
sar
lods
add
cs
cmp
lods
les
pushf
lods
les
pushf
lods
les
pop
test
imul
les
pushf
lods
les
pop
test
imul
and
sbb
mov
xor
sbb
xor
mov
xor
lds
les
pushf
lods
les
pushf
lods
les
fdiv
and
mov
sbb
movs
dec
cli
mov
jns
inc
mov
mov
push
pushf
ins
les
pushf
test
pop
je
pusha
and
into
add
pop
into
add
xor
pop
or
les
pushf
lods
les
mov
dec
and
loop
push
sar
pop
into
js
and
and
ret
js
mov
fprem
push
mov
pop
je
pusha
and
into
add
pop
into
add
xor
or
pop
dec
loopne
pushf
ins
les
pushf
lods
test
mov
sbb
gs
pop
into
add
pop
into
add
xor
pop
or
les
pushf
lods
les
pushf
lods
cmp
pop
and
in
dec
xor
enter
enter
enter
enter
test
cmp
loop
jne
dec
sar
hlt
dec
sar
sbb
daa
pushf
ins
les
pop
xchg
mov
push
loopne
xor
pushf
in
les
pushf
lods
les
add
mov
mov
jb
sbb
leave
and
js
add
xor
cmp
mov
or
call
cmp
enter
test
add
les
pushf
lods
les
adc
les
pushf
lods
les
pushf
mov
and
pushf
ins
les
sbb
popa
push
or
and
pop
inc
das
mov
or
rol
les
pushf
lods
pop
in
jp
and
pushf
ins
les
pushf
lods
les
imul
xor
aaa
jp
sar
(bad)
push
sar
rcr
mov
or
pop
int
dec
imul
and
pop
dec
clc
dec
imul
ss
pop
dec
mov
imul
les
pushf
lods
js
cmp
pop
mov
xor
pop
or
les
pushf
lods
les
pushf
lods
add
mov
aaa
fistp
ja
push
cmc
sbb
daa
pushf
ins
les
pop
xchg
mov
imul
fprem
push
mov
fprem
push
mov
pop
je
pusha
and
into
add
pop
into
add
xor
pop
or
les
pushf
lods
les
pushf
lods
(bad)
out
nop
sbb
mov
sbb
daa
pushf
ins
les
pushf
lods
les
pushf
lods
les
jp
inc
ret
and
pop
jns
sbb
dec
stc
mov
mov
dec
sbb
xchg
fbstp
cmp
sahf
fistp
sub
les
(bad)
stc
push
push
sar
add
or
mov
adc
fadd
sbb
inc
loopne
dec
xor
jmp
es
and
loope
leave
jmp
les
int
ins
imul
ror
mov
retf
cmp
sub
xchg
or
or
bound
push
in
pop
les
xchg
xchg
sub
add
in
jmp
sar
ja
add
(bad)
adc
jno
jmp
les
arpl
add
cli
adc
jge
or
test
dec
fld
xchg
cdq
inc
aad
sbb
jmp
push
movs
xchg
mov
inc
mov
(bad)
jmp
je
jne
test
lock
lds
arpl
test
mov
cmp
adc
dec
rol
xchg
push
aad
sti
jb
fxch
pop
sbb
jmp
or
mov
arpl
cmp
lds
jecxz
ins
fucomp
mov
mov
cmps
adc
scas
call
pop
(bad)
cmp
xchg
add
lahf
clc
dec
retf
in
pop
movs
sub
les
clc
imul
mov
push
push
inc
cmp
aam
ror
xchg
icebp
inc
add
or
sbb
add
dec
add
mov
(bad)
lea
xchg
or
in
push
int
add
xchg
mov
mov
and
inc
out
jne
jge
cmc
mov
sti
pop
outs
pop
jge
jne
jge
jne
jge
mov
sbb
mov
mov
mov
xchg
ja
test
xor
add
push
pop
jge
jne
jge
cmc
xchg
mov
jne
in
xchg
adc
sbb
(bad)
xchg
ja
test
adc
jns
outs
jne
jge
or
(bad)
in
xlat
mov
jl
xchg
pop
jge
jne
jge
retf
jns
(bad)
in
xlat
mov
test
outs
jne
jge
jne
jge
jne
test
jns
out
jne
jge
jne
jge
jmp
mov
push
push
cdq
test
dec
add
mov
inc
dec
je
inc
call
dec
mov
cmc
aad
sub
mov
js
cmp
cmp
mov
outs
ror
adc
pushf
loopne
dec
ficom
into
sub
xchg
(bad)
cmp
dec
in
sub
cmp
mov
or
arpl
shr
pop
mov
mov
inc
sub
cmp
mov
sbb
frstor
loope
repnz
cmp
sub
ins
inc
jge
pop
cmp
jp
adc
cmp
sub
sub
outs
cmp
adc
(bad)
jmp
jp
mov
ds
sti
sbb
jle
xor
icebp
push
push
popa
mov
jmp
mov
aad
cmp
sub
(bad)
aad
lds
cmp
add
bound
(bad)
lock
aas
adc
sub
push
jne
cdq
add
mov
jmp
jecxz
xor
arpl
pop
mov
shl
dec
aad
test
pop
mov
js
mov
shr
and
inc
mov
clc
mov
arpl
cmp
jmp
je
jle
cmps
bound
(bad)
repnz
jnp
dec
cdq
lds
jecxz
and
pop
cmp
or
in
jmp
or
add
dec
dec
xor
xchg
or
movs
ret
xchg
mov
pop
adc
fld
movs
fld
movs
fld
push
ret
movs
fld
movs
cdq
jnp
pop
sbb
mov
jl
test
popa
ins
xchg
pop
scas
repz
sub
sahf
pusha
cmp
lods
sti
cld
sahf
pusha
cmp
lods
ds
mov
push
std
add
or
sub
mov
sbb
inc
push
add
add
mov
xor
inc
daa
and
int
(bad)
fbstp
icebp
ins
add
mov
jl
xchg
adc
jl
inc
in
int3
sub
mov
fld
push
ret
lds
(bad)
inc
(bad)
fbstp
icebp
ins
add
mov
jl
xchg
adc
jl
inc
in
int3
sub
mov
pop
jle
jle
mov
lock
xor
daa
mov
adc
test
mov
lods
movs
fld
jo
inc
in
int3
sub
mov
fld
mov
clc
mov
mov
mov
mov
sub
loop
pop
loope
or
sub
and
(bad)
jl
jno
push
ss
xchg
xor
sahf
xchg
sub
push
jl
inc
fldenv
ficom
into
sub
adc
rol
or
cmps
push
stos
mov
into
inc
loopne
into
inc
loopne
into
pop
clc
pushf
aas
pop
pusha
sbb
inc
loopne
into
inc
loopne
into
(bad)
in
adc
inc
(bad)
stos
jns
fs
adc
add
inc
mov
sbb
inc
loopne
adc
fnstenv
pop
and
cmp
and
into
inc
loopne
into
inc
loopne
push
mov
leave
out
jmp
sbb
inc
loopne
mov
lds
adc
add
inc
mov
sbb
cmp
mov
push
scas
aaa
mov
cmp
into
inc
loopne
into
inc
out
mov
xchg
or
sbb
inc
loopne
into
inc
loopne
cmp
sbb
inc
loopne
into
inc
loopne
into
mov
sahf
and
jo
(bad)
mov
(bad)
les
jl
out
int
add
in
cmp
xchg
or
or
jle
sub
popa
lods
push
inc
clc
ja
push
cmp
mov
sbb
inc
jle
mov
gs
ins
jae
loopne
(bad)
movs
pop
cmp
int
lahf
adc
ds
sub
loope
push
add
lea
and
(bad)
rol
jge
aas
push
loopne
nop
mov
clc
add
add
repnz
sbb
(bad)
jmp
pop
push
add
hlt
loope
lea
sub
mov
lods
adc
les
xor
mov
add
dec
(bad)
jbe
pop
adc
mov
push
arpl
das
mov
mov
push
(bad)
sbb
add
arpl
push
pop
les
shl
mov
mov
(bad)
sbb
dec
movs
shr
addr16
pop
sti
inc
into
push
in
jmp
jbe
ret
sbb
inc
inc
das
pop
in
aad
jmp
(bad)
les
aad
mov
mov
scas
cmp
mov
in
pop
jnp
les
popa
aad
adc
or
out
or
pop
ss
xchg
cmps
fcomp
cmps
fcomp
cmps
fcomp
cmps
fcomp
lds
das
xchg
add
push
xchg
cmps
fcomp
lds
inc
out
mov
cmp
cli
mov
inc
out
mov
push
xchg
cmps
fadd
test
add
cmps
fcomp
xchg
(bad)
mov
pop
cmc
push
cmps
xchg
add
and
popa
push
inc
cmp
jae
cmp
jae
aad
stc
mov
cmp
cmp
jae
cmp
jae
cmp
cmps
data16
xchg
mov
fcomp
push
inc
cmp
jae
mov
cli
jae
cmp
jae
cmp
jae
mov
dec
sub
inc
cmp
jae
cmp
jae
aad
stc
mov
cmp
cmp
jae
cmp
jae
jmp
adc
ficom
inc
cmp
jae
cmp
jae
mov
cli
jae
cmp
jae
cmp
idiv
loop
jg
daa
cmp
cmp
jae
cmp
call
jp
inc
cmp
jae
jmp
adc
pop
xchg
cmps
sbb
inc
cmp
jae
cmp
repz
cmp
jae
cmp
jae
mov
push
(bad)
in
fcomp
cmp
inc
sub
pushf
mov
cmp
jae
cmp
jae
mov
jp
inc
mov
jp
inc
cmp
jae
(bad)
pushf
(bad)
cmp
inc
and
fcomp
inc
cmp
jae
cmp
jae
cmp
jae
(bad)
pushf
(bad)
cmp
and
cmps
sbb
inc
cmp
jae
(bad)
pushf
(bad)
mov
sbb
jae
cmp
cwde
shl
jp
inc
cmp
cmps
data16
xchg
addr16
jae
cmp
jae
cmp
stos
mov
mov
pop
daa
jp
inc
cmp
jae
cmp
jae
xlat
stos
stc
mov
cmp
cmp
jae
jmp
mov
jae
cmp
jae
cmp
jae
sbb
xchg
cmps
sbb
inc
cmp
jae
cmp
mov
add
pop
cmp
jae
cmp
jae
mov
pop
jae
cmp
jae
cmp
jne
cmp
jae
cmp
idiv
xchg
sahf
xchg
cmps
loop
jg
daa
jp
inc
cmp
repz
jae
cmp
jae
cmp
cmc
test
mov
addr16
jae
cmp
jae
cmp
ja
pop
sahf
retf
sub
mov
sbb
push
inc
(bad)
pop
push
movs
stc
jne
cmps
sbb
cmp
jae
cmp
jae
cmp
jne
push
mov
jae
cmp
jae
(bad)
call
sbb
cmps
add
mov
jae
cmp
jae
cmp
out
cwde
add
mov
sahf
xchg
cmps
sbb
inc
cmp
jae
cmp
test
mov
mov
jae
test
pop
popa
retf
pop
retf
iret
adc
cmp
jae
cmp
test
mov
mov
jae
mov
mov
jae
cmp
ja
fcomp
shl
cmp
jae
cmp
jae
cmp
jae
sbb
xchg
addr16
jae
cmp
cmc
mov
mov
jae
cmp
jae
cmp
xchg
mov
jae
cmp
jae
jp
jae
cmp
jae
cmp
jae
cmp
idiv
mov
pop
jae
cmp
jae
cmp
jne
sbb
jae
cmp
jae
int
jae
cmp
jae
jp
jae
cmp
jae
cmp
idiv
mov
pop
jae
cmp
jae
cmp
cmc
mov
mov
jae
cmp
jae
mov
mov
jae
cmp
idiv
loopne
xchg
cmps
loop
jo
daa
cli
jae
cmp
jae
cmp
jae
cmp
cwde
shl
jp
inc
cmp
jae
cmp
xchg
xlat
xchg
inc
(bad)
popf
pop
cli
sbb
xchg
fcomp
jae
cmp
jae
cmp
sub
inc
cmp
jae
cmp
cwde
shl
jp
inc
cmp
jae
iret
pushf
jae
cmp
jae
cmp
pop
push
mov
jp
inc
cmp
jae
cmp
xchg
cmps
fcomp
push
inc
cmp
jae
cmp
jae
cmp
mov
(bad)
(bad)
jp
adc
movs
fcomp
arpl
xchg
cmps
fcomp
jae
cmp
jae
cmp
jae
cmp
in
pusha
cmp
cwde
xchg
outs
xlat
cmps
fcomp
push
inc
cmp
jae
cmp
jae
cmp
sbb
cmps
seta
fcomp
jae
cmp
jae
cmp
idiv
loop
jo
daa
cmp
cmp
jae
cmp
jae
cmp
push
xlat
mov
push
inc
cmp
jae
cmp
jae
cmp
out
xchg
sahf
xchg
daa
test
mov
mov
jae
cmp
jae
cwde
sahf
xchg
cmps
sbb
inc
cmp
jae
cmp
push
(bad)
jae
cmp
jae
cmp
cmps
fcomp
jae
cmp
jae
cmp
idiv
mov
pop
jae
cmp
jae
cmp
jae
mov
jp
inc
cmp
jae
mov
mov
jae
cmp
idiv
mov
pop
jae
cmp
jae
cmp
jae
cmp
jae
iret
popf
jae
cmp
jae
cmp
jne
cmp
jae
cmp
jae
cmp
jae
mov
inc
sub
inc
cmp
jae
cmp
jae
cmp
jae
sbb
and
inc
cmp
jae
cmp
jae
xlat
mov
push
push
cwde
ficom
inc
cmp
jae
sbb
push
inc
cmp
jae
xchg
nop
mov
arpl
pop
push
inc
cmp
jae
cmp
jae
mov
dec
sub
inc
cmp
jae
cmp
cwde
shl
jp
inc
cmp
jae
mov
sahf
push
inc
cmp
jae
cmp
xchg
jae
cmp
jae
cmp
jae
cmp
jae
cmp
jae
mov
inc
sub
inc
cmp
jae
cmp
jae
cmp
cwde
shl
jp
inc
cmp
and
jae
cmp
pop
push
mov
jp
inc
cmp
xchg
cmps
fcomp
push
inc
cmp
jae
cmp
mov
(bad)
(bad)
cli
popf
adc
movs
fcomp
fs
jae
cmp
jae
mov
sahf
dec
loop
ds
pop
inc
push
push
cwde
pop
xchg
cmps
sbb
inc
cmp
jae
cmp
mov
cmc
cdq
xchg
addr16
jae
cmp
in
outs
test
pop
xchg
cmps
fcomp
mov
rcr
cmps
sbb
out
outs
push
clc
mov
pop
push
sbb
fcomp
pop
lds
inc
out
mov
cmp
cli
mov
inc
out
mov
push
dec
mov
fsub
xor
cmp
jae
cmp
sub
inc
cmp
jae
cmp
jae
fst
mov
pop
adc
mov
adc
jmp
cdq
jg
mov
fs
daa
loope
mov
arpl
adc
fst
add
inc
mov
sbb
inc
loopne
into
sar
sbb
add
or
test
inc
loopne
into
inc
loopne
dec
in
rol
xchg
mov
add
push
sub
fiadd
iret
rcr
sbb
(bad)
sub
sub
mov
les
fstp
fsubp
jnp
inc
pop
inc
add
aam
ds
pop
sti
add
pop
retf
nop
mov
mov
test
jecxz
adc
sub
std
add
jecxz
(bad)
sub
icebp
inc
add
xchg
adc
vcvtsi2ss
arpl
fst
shl
sar
push
popa
or
xchg
sahf
push
jecxz
je
push
pop
loopne
pop
add
mov
add
aam
jle
add
and
aam
(bad)
nop
(bad)
sbb
add
hlt
adc
jmp
add
jg
sub
xchg
sahf
push
jecxz
inc
add
adc
xlat
(bad)
mov
lods
or
xchg
xor
adc
xchg
or
test
arpl
and
add
cli
pop
jnp
ficomp
in
imul
mov
inc
mov
mov
xor
fisttp
aas
les
mov
push
push
and
jmp
push
xchg
loopne
sub
ins
push
fld
adc
jmp
lock
stos
lea
sbb
hlt
rcl
push
mov
retf
mov
mov
mov
les
mov
fwait
add
cwde
or
mov
ret
push
dec
in
loopne
mov
mov
mov
loopne
and
cmp
mov
mov
add
sbb
add
cs
mov
mov
mov
(bad)
mov
pusha
into
sahf
mov
mov
cmp
in
sbb
add
test
pop
outs
les
mov
or
mov
loopne
mov
mov
mov
in
gs
test
push
pop
cs
lahf
dec
cmp
data16
mov
mov
pusha
into
cwde
mov
mov
adc
mov
test
mov
loopne
mov
xchg
adc
lods
sbb
adc
push
dec
scas
dec
lods
add
adc
xchg
cmps
push
dec
push
dec
scas
out
inc
jbe
ror
fmulp
es
inc
jns
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
mov
mov
add
sub
aas
fs
mov
jnp
into
inc
loopne
into
inc
loopne
and
cmp
jmp
les
and
stos
(bad)
(bad)
pop
xlat
push
sub
fldl2e
jp
push
pop
pop
in
aad
(bad)
xchg
xor
mov
xchg
sbb
sbb
sahf
jp
pop
add
and
loopne
mov
pop
cmp
inc
mov
mov
nop
loop
inc
bt
cdq
add
add
vpsrad
mov
(bad)
and
inc
xchg
jg
stos
or
push
aad
sti
(bad)
jmp
aas
nop
dec
mov
mov
add
jmp
add
or
ds
js
sub
shl
cmps
dec
aad
cmp
out
aad
adc
jmp
fldln2
shl
jmp
add
out
pusha
pop
sbb
(bad)
jmp
jbe
push
iret
xchg
add
dec
dec
in
pop
movs
sub
inc
rcr
adc
inc
xor
jle
pushf
adc
jg
cdq
xchg
add
fmul
jg
xlat
mov
jmp
add
fbld
retf
push
int3
fsub
stos
scas
add
jge
aam
sub
pop
pop
adc
fst
pop
xchg
inc
sahf
adc
adc
nop
pop
or
or
push
pop
push
pop
mov
or
les
stos
out
loop
stos
cs
stos
and
pop
or
stos
cs
stos
cs
mov
out
loop
stos
cs
cmps
cmp
and
push
hlt
stos
retf
add
(bad)
in
fwait
inc
fwait
(bad)
sar
push
mov
fwait
push
ins
div
stc
sub
jge
dec
lock
sti
fimul
jns
test
mov
cmp
into
inc
loopne
into
inc
loopne
dec
xor
jmp
mov
es
cmp
sbb
inc
loopne
pop
mov
(bad)
sub
loopne
into
inc
loopne
into
inc
loopne
out
hlt
jb
or
and
into
inc
loopne
into
inc
loopne
into
inc
stc
add
sti
(bad)
sbb
inc
loopne
into
inc
loopne
dec
jecxz
rcl
adc
aad
loopne
into
inc
loopne
into
inc
loopne
and
add
into
inc
and
into
xchg
(bad)
iret
pop
sti
sbb
inc
loopne
into
inc
loopne
inc
fcom
ds
inc
and
into
inc
loopne
push
mov
leave
out
jmp
inc
leave
sar
sbb
add
sub
nop
test
mov
jnp
into
inc
loopne
into
inc
loopne
adc
fsqrt
jo
pop
(bad)
sub
outs
aam
and
into
inc
loopne
pop
ret
retf
pop
push
mov
jmp
mov
(bad)
(bad)
jmp
push
xchg
mov
mov
push
push
inc
dec
pop
xchg
int
cmp
popf
jle
sub
out
mov
cmps
push
pop
stos
daa
out
sar
dec
lods
inc
test
daa
push
in
mov
pop
mov
jp
adc
cmp
dec
cdq
lds
test
out
push
outs
(bad)
sub
sub
push
mov
add
adc
lahf
movs
into
cli
les
mov
xor
fcomp
jmp
dec
pop
sbb
ret
les
aad
loopne
add
enter
mov
nop
push
test
add
stos
int
ret
adc
test
std
sbb
xchg
inc
aam
push
std
(bad)
in
sub
mov
nop
inc
movs
iret
jmp
mov
add
ret
cli
mov
(bad)
cli
cmp
leave
(bad)
fdiv
(bad)
pop
mov
mov
push
(bad)
cmp
mov
mov
sub
int3
inc
mov
ret
mov
jge
ja
(bad)
lock
jnp
cmps
(bad)
jmp
pop
jnp
cmps
(bad)
jmp
push
stos
dec
add
push
add
inc
cmp
lock
in
mov
mov
daa
xor
dec
mov
pop
pop
mov
call
fstp
daa
xlat
cwde
jge
mov
and
jmp
(bad)
pop
test
cmps
inc
repz
and
add
fcom
add
inc
mov
mov
cmp
out
jmp
mov
mov
fcomip
push
cmp
jp
jp
(bad)
mov
popa
jnp
sahf
jle
sub
jns
xchg
int
jp
pop
sub
xor
jl
aam
ds
dec
ffree
mov
jmp
cs
cdq
test
inc
cmp
in
sub
(bad)
jmp
jbe
push
arpl
(bad)
push
cs
sub
sahf
adc
mov
les
imul
out
cdq
data16
sub
sub
add
dec
sti
add
pop
jmp
(bad)
push
test
mov
aas
arpl
je
mov
fst
and
xor
sahf
or
cmp
jle
add
sub
sar
bound
(bad)
push
mov
and
stos
sub
jnp
call
or
xchg
add
fmul
mov
jnp
rcr
sub
inc
pop
(bad)
jecxz
sub
inc
mov
int
outs
dec
frstor
inc
sub
cmp
mov
cs
cmc
es
cmc
es
cmc
es
xchg
sub
in
gs
cmc
es
xchg
sub
jbe
stos
pop
add
shl
adc
cmc
es
sbb
cmp
jg
mov
out
mov
cmc
data16
clc
cmp
cmc
pop
jbe
or
lock
adc
lock
adc
lock
xchg
jmp
lock
adc
lock
adc
cmps
adc
adc
lock
adc
sub
out
cmps
into
cmp
ss
cmc
daa
adc
mov
popa
shl
es
jle
sbb
pop
adc
lock
adc
lock
rcr
jbe
or
jl
inc
lock
adc
lock
xchg
stc
(bad)
pop
adc
lock
adc
lock
adc
and
mov
adc
lock
adc
std
(bad)
cmp
adc
mov
in
das
push
gs
daa
adc
cmc
es
mov
gs
cmc
data16
dec
and
fcomip
es
xor
sub
jbe
stos
fiadd
shl
push
and
jl
mov
gs
int
call
lgs
push
push
jmp
hlt
sbb
lods
cmc
sbb
inc
or
aam
sbb
add
mov
add
sub
add
sub
add
sub
add
push
es
sub
mov
sbb
inc
loopne
into
cmp
ja
push
lods
aaa
mov
cmp
into
inc
loopne
into
inc
loopne
add
(bad)
(bad)
jmp
sbb
sar
sbb
js
stos
shl
mov
test
imul
imul
pop
sub
xor
push
add
inc
push
pop
cmp
and
idiv
sub
and
inc
push
mov
les
std
push
add
sbb
adc
xorps
xor
xchg
pop
sub
push
ds
lea
retf
sub
in
imul
(bad)
sub
rol
mov
out
jmp
cmps
bound
inc
fadd
cli
mov
add
inc
jle
shl
push
lea
sub
les
arpl
popa
ret
pop
push
adc
jmp
loop
jbe
sti
mov
aam
je
sub
stos
shl
dec
mov
ficomp
jnp
mov
xchg
add
xchg
les
lea
pop
jle
adc
adc
fucomp
aad
mov
retf
xor
add
test
aaa
test
rol
sti
add
fdivrp
es
jnp
adc
(bad)
(bad)
pop
jnp
(bad)
out
ss
sub
shr
repnz
jnp
jnp
jmp
pop
jnp
fimul
jle
aad
sti
test
add
jg
pop
sub
fst
aad
in
aad
mov
jl
and
aad
das
cli
push
(bad)
mov
mov
loopne
or
loopne
or
icebp
aas
jnp
inc
repz
xor
mov
sbb
icebp
dec
in
call
gs
es
loopne
or
loopne
retf
shl
and
or
add
out
inc
add
push
add
retf
sbb
inc
add
out
inc
add
pop
popa
xor
iret
cmps
ins
out
retf
sbb
inc
add
outs
push
dec
and
lahf
dec
movs
and
out
add
or
in
out
dec
and
stc
test
cmp
gs
sub
sbb
loopne
or
pop
std
rol
dec
in
fistp
lods
xor
aas
push
and
icebp
mov
inc
cmp
push
movs
outs
add
aam
xor
mov
mov
ja
mov
out
dec
test
loopne
xchg
call
dec
push
xchg
cld
pop
mov
cmp
mov
sbb
inc
loopne
into
rcl
into
inc
and
into
inc
out
mov
cmp
out
jmp
mov
mov
rcl
push
js
addr16
jp
xchg
out
cmc
push
mov
les
mov
add
add
in
add
pusha
lods
aam
(bad)
fmul
frstor
rol
and
movs
cmp
or
(bad)
das
test
lds
scas
mov
add
inc
jns
adc
or
(bad)
cli
(bad)
ret
ds
outs
cmp
jmp
daa
dec
cdq
lds
mov
mov
mov
cli
add
mov
adc
test
idiv
fsubr
mov
xchg
stos
dec
adc
sub
sbb
lock
cli
mov
dec
cdq
add
cmp
jmp
jecxz
aaa
add
sub
xlat
cdq
cmps
sahf
adc
fist
ficomp
mov
cmps
and
test
and
add
pop
(bad)
frstor
or
sub
xchg
xor
mov
jnp
push
dec
fs
jmp
scas
shl
fiadd
push
adc
dec
imul
dec
mov
int
ja
pop
jmp
or
mov
or
xchg
cli
imul
mov
or
pop
(bad)
sbb
cmp
inc
(bad)
sbb
or
sbb
in
mov
outs
xchg
mov
or
push
fadd
out
stos
leave
dec
cmp
jbe
in
dec
mov
in
dec
jbe
in
dec
jbe
in
dec
jbe
sub
out
mov
cmp
jbe
in
dec
jbe
xor
jae
outs
xor
mov
add
or
mov
imul
or
icebp
mov
sub
out
stos
leave
dec
fwait
jne
call
push
mov
(bad)
adc
(bad)
mov
not
jecxz
jbe
cmp
loop
mov
inc
out
add
jnp
rol
inc
test
(bad)
sbb
ror
ror
sub
xchg
fcom
retf
in
push
mov
in
mov
out
(bad)
(bad)
jmp
push
mov
cmp
dec
xchg
int
xlat
arpl
cmp
cmp
and
adc
and
jmp
push
and
mov
icebp
(bad)
sub
imul
ds
mov
inc
test
aas
nop
bound
imul
dec
inc
cld
cli
out
jmp
jbe
in
mov
mov
sahf
jmp
ret
cli
mov
push
jae
add
push
sub
outs
push
jmp
or
mov
add
push
mov
jle
sub
out
add
int
outs
pop
(bad)
sub
loope
push
in
pop
(bad)
sbb
loop
jle
mov
mov
shl
inc
fs
jmp
lea
jmp
dec
jb
pop
and
pop
and
cmp
pop
jne
mov
cmp
fdivr
sahf
push
(bad)
(bad)
sbb
les
sub
add
jne
xchg
or
adc
mov
call
je
mov
leave
or
arpl
je
mov
test
imul
mov
(bad)
retf
mov
lock
jns
push
jp
jns
mov
loope
or
push
gs
sar
out
inc
or
out
inc
or
mov
arpl
nop
out
inc
or
out
inc
or
jno
sbb
scas
mov
mov
mov
jmp
push
cmp
xor
dec
mov
jmp
arpl
inc
ret
sub
sub
ret
gs
ret
cmps
push
jne
sub
mov
test
adc
cmp
sbb
sti
les
arpl
inc
bound
mov
fnstsw
or
mov
xlat
pushf
sub
cmp
sti
add
mov
lds
or
test
retf
in
(bad)
(bad)
jmp
pop
push
popf
jno
aam
repnz
cmp
and
pop
aam
add
aad
adc
and
xchg
jl
cmp
test
clc
sbb
pop
cmp
movs
shl
pushf
(bad)
loopne
pop
lods
pop
cmp
jmp
add
out
stos
ficom
stos
or
mov
nop
sbb
lock
ret
ds
dec
popf
add
ss
fdivr
shl
into
add
sbb
cmps
bound
jecxz
push
jle
dec
ffree
popa
rcr
js
lahf
fst
add
cdq
lock
sbb
jmp
int
(bad)
sub
leave
jo
cmp
dec
cdq
test
jno
add
mov
popf
dec
aas
adc
xchg
rcl
push
clc
add
sbb
andps
xchg
inc
test
call
ror
pop
mov
inc
call
ds
jg
nop
push
mov
cmp
push
jecxz
xchg
adc
add
clc
fsubr
mov
into
inc
inc
inc
inc
push
inc
mov
nop
loopne
repnz
inc
push
xlat
cmp
push
test
dec
pop
test
sbb
data16
mov
push
into
scas
stos
cmps
inc
pop
inc
add
mov
clc
xchg
test
add
xchg
pop
cmps
mov
sti
mov
cmps
mov
out
mov
mov
pusha
test
pusha
add
mov
test
mov
pusha
and
inc
xchg
jle
inc
jp
xchg
or
cmp
and
inc
and
pusha
test
pusha
add
mov
dec
xchg
dec
mov
add
xchg
or
cmp
and
xchg
cdq
cmps
mov
pusha
or
cwde
lods
pop
test
sbb
test
pusha
add
sbb
cmps
mov
pusha
and
lea
pop
inc
inc
jae
pop
pop
inc
and
inc
pop
test
push
xchg
ret
stc
cli
aaa
add
out
sbb
push
jecxz
aaa
add
inc
pop
cmp
(bad)
jmp
and
movs
lods
xchg
cmp
test
dec
aad
sti
fcmove
sar
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
lds
or
loope
(bad)
std
dec
out
(bad)
(bad)
jmp
pop
xchg
push
push
pop
stos
sbb
cmp
cmp
push
and
aad
(bad)
mov
cmp
jp
imul
(bad)
cmps
mov
pop
ds
fcom
cli
mov
sub
lds
push
lea
sub
cmp
xchg
add
and
lds
int
sbb
mov
test
xchg
stos
xor
dec
retf
add
int3
cli
cmp
and
cli
add
jg
xchg
sbb
ds
nop
data16
stos
sti
sti
out
jmp
fidiv
pop
sub
lds
enter
or
mov
out
push
pop
add
pop
in
push
ins
les
dec
sti
add
pop
jmp
fxam
sahf
adc
fild
add
fiadd
(bad)
add
sbb
aad
fs
test
(bad)
(bad)
loop
(bad)
fldcw
mov
pushf
inc
add
sub
push
pop
fld
aad
hlt
test
pop
cmp
mov
sbb
pop
inc
(bad)
fcom
mov
mov
test
pop
jnp
mov
add
pop
sub
sbb
mov
sbb
adc
mov
bound
fucomi
sbb
jbe
fwait
bound
test
frstor
xchg
bound
xlat
cmps
mov
push
das
popf
add
adc
dec
mov
sbb
fnstenv
or
lods
dec
mov
or
(bad)
inc
adc
mov
addr16
ss
lock
lock
popf
push
adc
inc
adc
mov
addr16
ss
lock
lock
fadd
mov
sbb
imul
nop
add
xor
lock
mov
inc
add
test
mov
(bad)
jle
lock
lock
lock
into
cs
popa
add
(bad)
jle
leave
sub
stc
lock
ins
add
pop
call
xor
lock
(bad)
test
cmps
cdq
(bad)
jle
lock
lock
adc
(bad)
pop
leave
push
mov
cmps
mov
inc
adc
add
add
xlat
cli
sbb
mov
stc
lock
lock
mov
jle
(bad)
test
cdq
dec
xlat
movs
sbb
or
inc
dec
cmc
sub
stc
lock
lock
mov
jle
xor
mov
fadd
mov
sbb
adc
mov
(bad)
aam
sbb
lock
lock
jmp
cmp
push
mov
pcmpeqb
jle
into
xlat
movs
sbb
or
out
(bad)
xor
stc
xor
inc
sbb
movs
fsubr
cmp
sar
or
xor
stc
lock
lock
gs
adc
(bad)
stc
lock
lock
lock
add
xor
lock
xor
inc
adc
out
loope
sub
stc
lock
xor
mov
sbb
push
movs
popf
push
push
movs
(bad)
and
xor
stc
lock
lock
add
pop
stc
lock
not
pop
stc
lock
lock
jbe
inc
stc
lock
lock
sub
ret
sub
lock
lock
mov
jle
xchg
int
(bad)
adc
mov
(bad)
dec
jae
aam
sbb
lock
lock
add
pop
stc
lock
lock
lock
(bad)
xor
lock
lock
jbe
inc
stc
lock
lock
lock
sub
inc
loop
sub
lock
lock
lock
add
xor
lock
xor
stc
lock
shl
(bad)
lock
lock
ja
adc
xlat
mov
adc
push
popf
sbb
xlat
(bad)
fnsave
mov
bound
pop
test
int
aas
sbb
and
test
fnsave
cwde
bound
test
pop
push
retf
pop
retf
cs
mov
jmp
sbb
lock
add
xor
cli
sub
jmp
pop
stc
lock
lock
jo
js
lock
lock
xchg
pop
push
shl
or
xchg
test
call
adc
sub
xchg
jg
(bad)
jle
mov
inc
out
mov
mov
aas
ficom
mov
sti
sbb
inc
loopne
dec
rcl
into
inc
and
into
(bad)
in
mov
scas
xor
sub
pop
(bad)
sub
mov
add
wbinvd
xlat
int
cmp
inc
mov
add
test
and
fwait
jge
push
push
fistp
xchg
lea
push
loopne
xchg
mov
aad
cdq
sahf
push
arpl
fstp
mov
add
jmp
rol
lds
adc
stos
inc
stos
mov
nop
mov
push
pop
push
int3
and
aad
cdq
test
add
retf
repz
shl
mov
(bad)
jmp
jg
jae
jle
les
aad
rol
mov
es
push
lea
les
ret
in
sar
dec
xchg
add
xchg
jle
mov
jmp
mov
and
imul
nop
fcom
test
push
call
jnp
dec
popf
lds
or
(bad)
jae
inc
out
push
xlat
(bad)
cli
pop
in
stos
int
call
aad
sti
sahf
push
jecxz
cmp
dec
add
pop
mov
int3
adc
mov
jmp
mov
or
jle
aad
sti
dec
add
out
xchg
lea
and
fisub
retf
fwait
jbe
stos
add
cmc
jp
in
push
push
loopne
xchg
push
loopne
xchg
push
loopne
xchg
push
mov
ficom
inc
loopne
xchg
push
mov
ficom
inc
and
xchg
push
loopne
xchg
iret
paddusw
sub
iret
push
push
loopne
mov
loopne
rcl
icebp
punpckldq
xor
test
sub
add
ja
add
ja
lock
imul
add
ja
stos
fisubr
push
dec
dec
xchg
fiadd
in
dec
loop
shr
sub
add
ja
adc
sub
dec
mov
getsec
mov
sub
adc
push
xchg
into
hlt
pop
lock
adc
cmpxchg
int
xor
iret
push
push
and
mov
mov
loopne
shr
loop
jo
loopne
rcl
jmp
push
inc
and
xchg
aaa
out
and
push
push
cli
lahf
push
push
loopne
xchg
fcomp
xor
xchg
jae
ret
xor
xchg
mov
dec
ret
dec
nop
xlat
icebp
(bad)
pop
push
pop
dec
ret
inc
lods
test
addr16
xlat
icebp
iret
sub
cld
pop
sti
fcmove
sar
sub
jle
sbb
into
inc
loopne
into
inc
loopne
into
xchg
fimul
bound
cmp
into
inc
loopne
into
inc
loopne
into
inc
loopne
sbb
es
sub
ds
pop
jnp
into
inc
loopne
into
inc
loopne
adc
fprem
mov
sbb
sub
jne
pop
pusha
sbb
inc
loopne
into
inc
out
mov
in
push
jg
and
arpl
jle
add
adc
and
arpl
pop
push
jae
pop
aam
pop
int
sbb
cmp
xchg
ss
inc
clc
in
out
xchg
mov
rcl
cmp
push
rol
cdq
mov
iret
jmp
mov
mov
push
push
(bad)
sub
sub
cdq
test
pop
cmp
aad
(bad)
pop
(bad)
add
push
and
jmp
jg
sub
imul
les
jb
dec
sub
jp
jmp
xor
pop
cmps
mov
ret
inc
(bad)
jmp
adc
jo
jnp
mov
xchg
jle
rcl
(bad)
outs
push
mov
or
push
xchg
into
sti
jb
add
push
push
inc
adc
push
inc
push
add
add
or
mov
fcmovbe
lea
ficomp
stos
inc
aam
in
adc
lods
scas
(bad)
sti
(bad)
out
ret
cli
aas
imul
sub
sti
test
ret
cli
mov
xchg
mov
pushf
add
dec
xor
jle
stos
adc
aad
iret
and
fwait
or
sbb
xchg
(bad)
lds
xchg
rcl
add
out
adc
out
adc
out
adc
out
push
es
inc
xchg
push
rcr
adc
dec
xchg
push
push
lea
xchg
(bad)
shl
adc
adc
ja
sbb
nop
push
add
out
adc
adc
jno
mov
(bad)
das
les
out
shl
test
loopne
or
loopne
or
out
push
mul
test
loopne
sub
in
inc
pop
jmp
jg
and
lea
test
loopne
or
sub
adc
or
and
or
loopne
or
loopne
(bad)
or
push
repnz
cvtps2pi
out
push
sar
cvttps2pi
out
(bad)
or
shr
jb
adc
adc
jmp
adc
enter
adc
jmp
loopne
or
loopne
nop
push
stc
sub
cmp
or
loopne
or
loopne
or
loopne
lea
stc
test
loopne
or
loopne
push
adc
or
and
or
loopne
or
in
xchg
rol
sahf
adc
aad
add
test
loopne
or
outs
das
adc
xor
push
sti
in
adc
loopne
or
loopne
cmc
adc
or
and
or
loopne
or
in
xchg
rol
mov
add
xchg
cs
adc
loopne
or
loopne
repnz
sbb
mul
test
loopne
or
loopne
repnz
sbb
in
sti
test
loopne
or
loopne
or
loopne
pop
outs
adc
in
adc
loopne
or
loopne
(bad)
in
in
push
rol
das
in
jnp
aad
lds
das
sub
adc
adc
out
adc
out
adc
out
adc
bound
inc
add
bound
adc
adc
add
scas
jno
add
test
add
add
adc
ins
add
ins
mov
out
adc
lea
add
out
shl
lahf
std
xchg
push
ror
shl
or
loopne
or
loopne
dec
mov
jmp
mul
test
loopne
or
cmc
adc
mov
popa
out
adc
enter
das
mul
test
loopne
or
hlt
(bad)
icebp
movs
popa
out
adc
or
loopne
or
add
into
addr16
adc
mul
test
loopne
mov
in
xchg
adc
cli
sub
int3
adc
mov
test
loopne
mov
adc
or
loopne
mov
out
xchg
adc
out
shl
or
loopne
or
loopne
cvtps2pi
iret
sub
jp
jb
xor
mul
test
loopne
cvtps2pi
(bad)
fnsave
lods
icebp
in
out
adc
or
loopne
retf
retf
out
cs
xchg
ror
mul
test
loopne
or
loopne
and
inc
test
loopne
or
pusha
test
loopne
(bad)
push
out
sub
mul
mov
les
scas
icebp
and
test
loopne
or
loopne
or
loopne
into
les
scas
icebp
and
test
loopne
or
loopne
or
add
into
imul
and
or
loopne
or
add
into
push
adc
mul
test
loopne
or
loopne
mov
out
sub
xchg
ror
mul
test
loopne
or
retf
push
out
sub
loopne
or
loopne
or
loopne
(bad)
xlat
out
sub
loopne
or
loopne
or
hlt
iret
lods
icebp
xchg
(bad)
or
and
or
loopne
or
loopne
dec
add
lock
(bad)
loopne
or
loopne
and
shl
mul
test
loopne
or
loopne
(bad)
aad
add
or
loopne
or
hlt
dec
lods
icebp
xchg
aam
mul
test
loopne
or
out
sub
xchg
aad
mul
test
loopne
or
retf
push
out
sub
loopne
or
loopne
or
loopne
(bad)
(bad)
add
or
loopne
or
loopne
rcl
(bad)
cvtps2pi
or
(bad)
in
cmps
cmp
and
or
loopne
or
clc
jnp
retf
and
ja
mov
test
loopne
or
loopne
or
loopne
mov
jne
out
adc
fiadd
adc
mov
test
loopne
or
loopne
or
ret
test
loopne
or
hlt
(bad)
jmp
stos
or
or
loopne
or
loopne
or
in
retf
jne
dec
pop
push
push
out
adc
int
or
adc
adc
ficom
arpl
mov
adc
mov
add
out
shl
es
add
test
add
add
jae
add
test
sbb
repnz
and
loopne
or
cmc
add
mul
test
loopne
or
loopne
aad
les
out
adc
out
adc
out
adc
out
push
es
push
xchg
push
rcr
adc
xor
and
(bad)
shl
push
or
adc
ja
add
nop
push
add
out
adc
adc
jno
rep
add
and
jo
jmp
test
loopne
or
loopne
mov
and
or
loopne
sar
push
adc
mov
out
sar
pop
call
in
adc
loopne
or
loopne
or
arpl
mov
add
xor
adc
adc
and
nop
(bad)
push
les
out
sar
adc
jo
adc
adc
(bad)
out
xor
and
(bad)
shl
pop
or
dec
push
enter
adc
pushf
or
test
loopne
or
loopne
or
outs
out
adc
or
and
or
loopne
or
loopne
pop
sub
adc
adc
out
adc
out
adc
out
adc
bound
inc
add
bound
adc
adc
xor
scas
jno
xor
arpl
mov
out
mov
push
ins
add
ss
mov
out
adc
lea
add
out
shl
lahf
int3
nop
push
ror
shl
or
loopne
or
in
das
mov
test
loopne
or
ins
xor
sub
out
adc
mul
test
loopne
das
pop
hlt
push
jecxz
add
out
adc
sbb
retf
mov
add
out
shl
scas
retf
xor
push
out
adc
push
adc
adc
xor
xchg
(bad)
shl
fwait
int
push
ror
push
add
out
push
pxor
jle
in
mov
test
loopne
(bad)
outs
les
out
shl
test
loopne
or
loopne
pop
imul
add
xor
adc
adc
and
xchg
(bad)
push
test
out
sar
adc
jo
adc
adc
(bad)
out
dec
xchg
push
ror
shl
scas
dec
or
mov
sub
test
loopne
(bad)
outs
les
out
shl
test
loopne
or
loopne
(bad)
or
push
jb
jle
adc
sti
test
loopne
retf
sub
call
or
loopne
or
loopne
sahf
push
(bad)
xchg
(bad)
xchg
pusha
lahf
repz
xchg
(bad)
push
dec
xchg
xchg
xchg
push
push
mov
adc
adc
mov
adc
cmp
adc
and
add
inc
mov
sbb
inc
loopne
push
xor
cld
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
es
and
popa
mov
scas
sub
out
stos
(bad)
ror
fucom
ret
stc
or
jmp
stos
fsub
push
call
xchg
adc
aam
mov
in
rcl
pop
ja
pop
mov
jp
adc
jmp
or
out
sub
lock
add
les
lock
ds
dec
cdq
lds
mov
add
mov
nop
repnz
iret
imul
mov
call
inc
adc
sti
jmp
add
(bad)
xor
inc
nop
lods
dec
aas
inc
popf
fwait
in
jb
push
sbb
rol
sub
pop
in
add
ret
cli
mov
iret
fistp
inc
aas
frndint
add
pop
(bad)
ss
cdq
inc
push
(bad)
in
rol
inc
mov
(bad)
hlt
pop
jnp
dec
popf
lds
ret
adc
pop
cmp
lds
xlat
push
xchg
push
add
loope
adc
dec
sub
scas
idiv
adc
(bad)
jmp
jp
imul
cmp
add
repz
xchg
int
xlat
hlt
frstor
sbb
or
and
cmc
sbb
xor
xor
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
in
xor
enter
clts
xor
or
and
or
ror
outs
call
mov
out
out
sbb
das
out
lahf
test
enter
or
test
pop
leave
mov
xor
sub
loopne
jle
in
(bad)
jle
test
inc
outs
cmc
dec
outs
call
out
sbb
adc
ror
outs
call
hlt
mov
ror
call
outs
pop
das
sub
jle
rcl
retf
dec
call
call
or
ror
(bad)
mov
jne
and
outs
call
outs
call
call
or
ror
jmp
mov
ror
outs
call
jbe
and
outs
call
retf
loop
cmp
cmc
test
jbe
fdiv
sub
push
cmc
rcl
repz
outs
call
outs
call
ds
outs
call
(bad)
jle
rcl
iret
mov
enter
or
xchg
ss
add
shl
call
outs
call
jmp
mov
ror
outs
call
outs
call
outs
call
call
or
push
and
call
outs
sbb
cmp
xchg
enter
loop
mov
xor
scas
stos
pop
xor
call
sub
in
mov
lods
outs
call
adc
jle
lods
outs
call
outs
pop
das
sub
jle
rcl
repz
outs
call
outs
call
ds
outs
call
xchg
jle
in
dec
add
rcr
lock
outs
cmc
dec
outs
call
das
and
adc
jle
dec
outs
call
mov
gs
mov
xor
dec
cmp
or
pop
xor
jno
add
cli
push
outs
cmc
dec
outs
call
mov
mov
retf
cmp
fimul
jns
or
mov
retf
xor
les
outs
jne
or
jae
je
pop
sbb
outs
cmc
push
fcmove
sar
or
movs
xor
outs
xor
sub
sbb
aas
stos
and
jne
lock
inc
cmp
sub
jbe
xchg
dec
aaa
out
ficomp
inc
nop
mov
retf
or
fs
enter
ins
cmp
rol
mov
aad
mov
mov
sub
aad
cwde
adc
dec
xchg
cmps
loop
shr
mov
jmp
mov
and
jmp
cmps
nop
fcomp
pop
add
retf
rol
(bad)
xchg
test
adc
jle
ins
add
sub
add
sbb
jmp
cmp
dec
fist
pop
xor
mov
inc
into
ret
cli
mov
dec
xor
add
push
(bad)
mov
jmp
push
test
cmp
sub
cmp
fdivr
aad
cmp
in
rol
lods
std
sti
add
ret
(bad)
jg
stos
add
stos
int
dec
cmp
sbb
(bad)
jmp
jb
bound
add
ret
cli
aas
imul
(bad)
sbb
inc
mov
xchg
or
mov
xchg
call
cmp
pop
cmp
call
jne
add
jecxz
ret
test
mov
rol
cwde
jno
add
jno
add
jno
add
jno
add
jno
add
xor
ror
or
ret
xor
add
mov
inc
mov
mov
mov
or
ret
icebp
mov
call
aaa
and
xchg
aaa
in
add
addr16
inc
jl
aaa
in
xchg
aaa
in
adc
adc
xchg
aaa
in
xchg
aaa
in
adc
retf
xchg
adc
cdq
push
xchg
xchg
aaa
in
xchg
aaa
in
aad
(bad)
or
out
xchg
or
dec
popa
inc
xchg
xor
loopne
rol
xchg
aaa
in
xchg
aaa
in
cmps
jae
fisub
inc
push
clc
setb
sub
inc
sbb
jno
add
push
adc
xchg
aaa
in
xchg
aaa
call
jl
aaa
in
xchg
aaa
in
xchg
aaa
in
jno
add
ficom
sbb
in
pop
push
pop
xchg
aaa
and
xchg
neg
cwde
jne
add
jl
lds
hlt
ret
push
push
cs
xchg
aaa
in
xchg
mov
cdq
jnp
push
fcom
repnz
sub
jl
aaa
in
xchg
mov
fnstcw
push
fcom
repnz
sub
jl
aaa
in
xchg
aaa
in
retf
in
cwde
mov
and
xchg
aaa
in
xchg
repz
fsubr
pop
pop
push
ficom
sbb
jno
inc
jl
aaa
in
xchg
aaa
in
jno
add
ficom
sbb
in
pop
push
pop
xchg
aaa
and
xchg
aaa
in
xchg
aaa
in
imul
cwde
mov
or
sti
jo
inc
mov
mov
pop
xchg
aaa
and
xchg
aaa
in
xchg
mov
sbb
push
fcom
repnz
sub
jl
aaa
in
xchg
aaa
in
xchg
mov
pop
popa
push
push
fcom
repnz
sub
jl
aaa
in
xchg
idiv
mov
add
in
xchg
aaa
in
xchg
aaa
in
setae
push
sub
jg
bound
cwde
mov
cwde
mov
and
xchg
aaa
in
xchg
aaa
in
push
leave
sar
ficom
sbb
out
push
pop
xchg
aaa
and
xchg
mov
pop
jno
add
je
mov
aaa
in
xchg
aaa
in
adc
sub
jl
aaa
in
xchg
aaa
in
push
mov
rcr
aaa
in
xchg
aaa
in
push
mov
push
push
push
call
jl
aaa
in
xchg
aaa
in
push
std
ret
adc
xchg
aaa
in
xchg
aaa
in
xchg
mov
mov
sub
addr16
jmp
jl
aaa
in
xchg
aaa
cld
icebp
lods
adc
xor
aas
dec
push
(bad)
sub
sub
pop
fcomp
pop
xchg
aaa
and
xchg
aaa
in
push
in
rol
jb
bound
pop
xchg
aaa
and
xchg
aaa
in
xchg
ja
mov
retf
adc
fcom
in
sbb
or
aaa
in
rcl
mov
sub
addr16
aaa
in
xchg
aaa
in
cmp
push
movs
jl
aaa
in
xchg
ja
mov
xchg
aaa
in
xchg
xrelease
add
int3
cdq
(bad)
and
xchg
aaa
in
push
pop
call
push
push
sub
xchg
aaa
in
xchg
aaa
in
jmp
call
push
push
sub
pusha
adc
out
icebp
cwde
adc
xchg
aaa
in
xchg
aaa
in
push
arpl
cli
pop
mov
in
xchg
aaa
in
sbb
mov
movs
jl
aaa
in
push
pop
movs
jl
aaa
in
xchg
aaa
in
xchg
aaa
loopne
icebp
adc
dec
xchg
(bad)
inc
push
dec
jl
aaa
in
xchg
aaa
in
loope
cdq
jl
aaa
in
xchg
aaa
in
popa
rcr
jl
aaa
in
loope
cdq
jl
aaa
in
xchg
aaa
in
push
leave
loopne
jno
aas
xchg
bound
pop
push
push
sub
pusha
adc
xchg
ja
sbb
sbb
imul
push
ficom
sbb
dec
or
jl
aaa
in
xchg
aaa
in
aad
(bad)
sti
jo
inc
mov
mov
pop
xchg
aaa
and
xchg
aaa
in
xchg
aaa
in
imul
cwde
movs
lods
add
jl
aaa
in
xchg
aaa
in
aad
shl
rol
mov
test
ret
xchg
aaa
in
push
leave
rcr
pusha
rcr
xor
add
leave
add
ret
mov
int
mov
movs
jl
aaa
in
xchg
aaa
in
jno
add
aaa
and
xchg
aaa
in
xchg
aaa
in
and
rcr
lahf
rcl
add
mov
inc
mov
lahf
sbb
aas
fldcw
mov
lahf
add
pushf
mov
mov
cmp
out
push
mov
jmp
les
dec
fcom
sbb
inc
inc
and
aad
sub
nop
dec
xchg
jnp
pushf
in
mov
mov
stos
mov
xchg
loope
or
mov
aam
mov
in
imul
ret
cli
mov
and
cli
push
shl
dec
sub
mov
(bad)
jmp
ds
push
aam
pop
jl
adc
icebp
and
test
add
aas
push
or
push
pop
adc
add
jmp
add
xchg
repnz
test
jno
jb
lea
mov
add
test
das
lds
arpl
or
test
(bad)
dec
(bad)
shr
pop
ds
jnp
aad
in
jle
pop
cmp
push
movs
shr
adc
fild
ficomp
(bad)
sub
ret
mov
add
sbb
mov
push
icebp
fdiv
and
imul
add
sbb
sub
inc
pop
add
fldcw
push
adc
into
add
or
stos
(bad)
shr
pop
push
sbb
mov
shr
loop
mov
xchg
iret
clc
jmp
ror
addr16
inc
mov
and
inc
mov
and
push
dec
jp
popf
iret
jl
or
lock
out
ja
dec
shl
or
ja
pop
out
ja
pop
out
ja
pop
shl
or
ja
pop
out
ja
pop
mov
ror
push
ds
loope
or
cld
lea
sar
push
inc
clc
sbb
loop
adc
cmp
adc
loope
or
mov
out
ja
pop
out
ja
pop
xor
cmp
lock
dec
out
mov
imul
cmc
and
xchg
loope
jne
sti
jo
push
add
pop
out
aaa
aaa
push
out
ja
pop
out
ja
pop
out
push
sbb
xor
into
data16
jne
arpl
popa
jmp
pop
inc
js
push
sahf
cmp
sbb
add
pop
jne
inc
js
push
sahf
cmp
sbb
add
jg
adc
enter
lods
jg
adc
cmp
shr
(bad)
xor
push
xor
shl
cmp
pushf
pusha
call
sub
jecxz
sbb
pop
mov
cmp
xchg
js
push
jmp
pop
adc
jecxz
ret
cmp
push
add
jl
gs
sub
ret
aam
jle
sub
fld
(bad)
fcom
sub
sub
push
inc
rol
(bad)
aas
dec
fld
enter
shr
mov
fild
pop
inc
adc
pop
cmp
push
je
fwait
sub
jnp
and
inc
adc
jge
cdq
add
stos
or
mov
push
xchg
mov
fxch
cmp
ret
(bad)
aas
add
adc
aad
cli
mov
cmps
(bad)
jmp
(bad)
jmp
adc
mov
call
aad
in
jb
add
aas
add
daa
popf
aad
xor
push
inc
int
aam
(bad)
add
sbb
inc
std
pop
jnp
rcl
(bad)
jmp
inc
in
lock
fsubr
repnz
out
enter
les
xor
push
jne
add
cdq
repz
test
movs
xor
lahf
inc
les
(bad)
cli
aam
pop
imul
les
xchg
mov
fist
(bad)
(bad)
sti
mov
call
adc
cmp
(bad)
cmp
test
mov
rcr
into
shl
addr16
ds
add
sub
jle
or
sub
into
sbb
sti
rol
out
(bad)
rcr
or
fistp
cli
pop
(bad)
popa
inc
adc
(bad)
push
inc
pop
rcr
jp
adc
ds
test
push
inc
mov
xor
jge
adc
mov
jl
int
(bad)
sub
jb
cmp
jmp
cmp
add
sub
call
jae
sbb
or
test
(bad)
jmp
ret
(bad)
jg
fisubr
inc
aad
xor
or
aam
test
(bad)
jmp
int
mov
pop
je
push
loop
shl
cmp
xchg
dec
cmc
in
pop
and
push
jge
ret
add
rol
mov
mov
sbb
movs
(bad)
(bad)
icebp
pop
cmp
xor
std
shr
pop
cmp
aad
fnstsw
pop
(bad)
push
add
sbb
push
int
(bad)
sub
and
add
cli
mov
les
mov
(bad)
sbb
push
clc
prefetch
xchg
call
test
mov
push
or
jle
mov
jle
lock
or
mov
jle
mov
aad
or
imul
test
jle
xchg
sbb
xchg
dec
(bad)
mov
sbb
dec
rcr
mov
pop
sbb
cmp
pushf
call
loopne
inc
loopne
into
inc
loopne
into
inc
enter
fs
add
inc
loopne
into
inc
loopne
into
(bad)
hlt
int3
out
das
xor
daa
mov
and
into
inc
loopne
into
inc
loopne
xlat
pop
in
lods
jle
pop
call
sub
add
into
inc
loopne
into
inc
loopne
into
inc
loopne
push
add
sbb
inc
loopne
dec
sti
aam
cmp
fst
inc
sti
jecxz
rcl
mov
sbb
inc
loopne
into
inc
loopne
into
inc
loopne
fcom
fdivr
into
inc
loopne
into
inc
loopne
sbb
or
test
jmp
sbb
inc
loopne
(bad)
add
js
arpl
add
aas
pop
loopne
into
inc
loopne
into
inc
loopne
into
inc
in
xchg
mov
mov
cs
jecxz
sar
mov
inc
out
stos
mov
(bad)
jmp
les
loop
stos
int
pop
rcr
in
mov
mov
int3
pop
sub
lods
gs
rcl
test
push
cmp
div
jp
rcl
jmp
movs
add
jmp
loopne
scas
push
pop
cmp
or
(bad)
(bad)
mov
jmp
(bad)
(bad)
ins
les
lds
lods
mov
out
cdq
mov
les
aad
jecxz
add
shr
mov
in
jmp
xlat
sub
stc
add
enter
(bad)
int
cdq
sub
xchg
into
inc
aad
sbb
fld
sbb
push
loop
push
shr
mov
shr
icebp
cmove
mov
fs
mov
jbe
arpl
pop
(bad)
out
jmp
(bad)
aad
push
cmps
mov
inc
mov
pop
and
push
dec
adc
call
push
mov
or
dec
movs
iret
stos
lea
and
stos
jb
sbb
and
adc
lods
adc
in
sahf
adc
pop
cmps
bound
cmps
adc
add
iret
mov
stc
shr
into
add
clc
dec
popa
push
mov
shr
pop
mov
sbb
mov
int3
rcl
bound
shr
or
(bad)
cs
push
add
cmp
sar
xchg
mov
mov
add
stc
leave
rcl
test
or
sbb
mov
or
(bad)
cs
push
add
jg
inc
sar
xchg
mov
adc
mov
or
mov
or
test
or
sti
or
test
or
mov
dec
inc
pushf
mov
test
mov
dec
inc
fdiv
mov
dec
add
mov
inc
inc
shl
add
jbe
(bad)
mov
test
repz
dec
(bad)
xor
bound
shl
add
test
lds
or
cmp
dec
pop
xor
icebp
mov
sar
inc
pushf
repz
mov
(bad)
jnp
fisttp
jle
or
jns
add
mov
dec
push
(bad)
mov
dec
dec
pop
icebp
or
mov
leave
or
push
retf
or
mov
leave
or
nop
jne
mov
inc
xchg
sti
add
mov
lds
dec
ret
leave
dec
sbb
retf
les
dec
dec
xchg
inc
fdiv
mov
lds
ret
dec
dec
sbb
or
mov
inc
xchg
sti
add
les
add
test
dec
inc
xchg
dec
(bad)
add
cmp
xchg
sti
or
test
inc
xbegin
fmul
pop
mov
or
pop
inc
jle
rcl
repz
sar
add
ror
mov
dec
push
add
or
(bad)
dec
inc
inc
cmp
bound
inc
lea
dec
xchg
ror
test
inc
inc
(bad)
sti
add
dec
or
inc
inc
shl
add
mov
ret
dec
inc
cmp
add
cmp
add
dec
inc
stc
leave
dec
fdiv
dec
push
add
or
sar
add
add
inc
mov
leave
add
ror
add
mov
dec
(bad)
(bad)
cli
dec
xchg
mov
leave
add
inc
inc
shl
cmp
or
inc
inc
lds
dec
(bad)
(bad)
cli
dec
push
mov
inc
shl
cmp
or
mov
dec
inc
xchg
dec
(bad)
add
cmp
xchg
mov
lea
(bad)
stc
leave
dec
fdiv
add
repz
dec
dec
fdiv
or
or
mov
or
lahf
or
cmp
push
test
add
mov
les
or
jns
pop
(bad)
stc
test
enter
dec
inc
xor
dec
inc
inc
mov
or
mov
mov
mov
lds
dec
add
stc
or
inc
mov
add
mov
dec
inc
inc
sti
inc
inc
cmp
mov
xchg
mov
jp
push
(bad)
mov
inc
(bad)
add
jns
inc
pop
mov
test
cli
or
or
repz
stc
leave
dec
fdiv
or
test
rol
mov
dec
inc
pushf
repz
js
test
inc
inc
shl
ret
add
or
cmp
jg
add
mov
push
add
stc
mov
mov
stc
add
inc
mov
rol
mov
mov
stc
or
(bad)
add
mov
or
mov
add
mov
or
test
dec
inc
inc
bound
push
(bad)
dec
or
mov
or
into
add
inc
pop
repz
or
cmp
add
dec
inc
stc
dec
dec
fdiv
or
test
dec
inc
inc
mov
lahf
(bad)
dec
pop
inc
jle
pop
or
dec
add
stc
or
inc
ss
test
jnp
inc
pushf
repz
test
dec
xchg
inc
inc
sbb
int3
test
jnp
add
jnp
add
bound
add
mov
int
cmp
into
xchg
retf
dec
pushf
aaa
inc
inc
add
dec
add
aas
int3
pop
test
dec
dec
test
(bad)
(bad)
stc
leave
inc
inc
js
les
mov
dec
inc
inc
jb
les
jnp
add
bound
add
mov
ror
dec
xchg
jo
les
aas
int3
add
jo
les
jo
les
and
(bad)
jnp
(bad)
retf
add
mov
ret
stc
add
xchg
mov
jno
inc
(bad)
add
dec
dec
sbb
leave
push
inc
mov
dec
xchg
inc
add
add
mov
or
or
add
xchg
mov
inc
xchg
dec
push
add
cmp
inc
xchg
int3
add
or
test
add
test
dec
dec
sbb
mov
test
or
(bad)
dec
lahf
paddd
ret
(bad)
stc
mov
loop
inc
sar
dec
(bad)
mov
or
pushf
repz
mov
dec
dec
add
int
push
mov
inc
mov
inc
xchg
dec
push
add
aas
rol
jnp
add
or
add
jp
mov
or
test
test
or
int3
jnp
lds
mov
or
dec
fdiv
dec
xchg
test
push
push
mov
or
or
ss
test
mov
mov
mov
dec
xchg
mov
or
or
icebp
or
cmp
pushf
test
or
or
(bad)
stc
mov
repz
les
test
dec
dec
pop
mov
or
pushf
test
or
enter
mov
jg
(bad)
retf
inc
enter
push
jns
mov
xchg
dec
push
add
aas
int3
add
test
xchg
or
test
add
jle
dec
sbb
dec
lds
add
dec
inc
inc
jb
add
dec
lea
push
ret
or
mov
test
or
test
ret
jns
pop
dec
mov
dec
lea
dec
dec
add
or
dec
ret
inc
pop
cmp
pop
lea
ror
dec
push
add
leave
pop
mov
or
mov
dec
inc
inc
jnp
add
dec
add
mov
ror
add
xor
lahf
or
repnz
(bad)
mov
dec
xchg
push
lds
mov
bound
xchg
xor
mov
int
sar
pop
leave
mov
int
pushf
xor
dec
int
sti
mov
lds
or
or
rol
lahf
or
int
(bad)
jns
inc
fdiv
dec
push
add
or
into
jb
xchg
(bad)
(bad)
and
shl
lds
add
dec
inc
(bad)
cmp
mov
ret
dec
inc
lea
mov
jg
xchg
aas
dec
inc
cmp
inc
int
or
leave
xchg
mov
mov
or
test
or
jnp
push
and
shl
xor
add
mov
push
test
lds
lds
inc
pop
inc
jnp
lahf
(bad)
dec
mov
mov
iret
add
or
test
mov
add
xchg
jns
mov
pop
inc
mov
dec
add
or
mov
mov
xchg
leave
dec
sbb
retf
test
jnp
mov
mov
or
shl
ret
add
xchg
or
test
add
dec
mov
dec
test
add
leave
push
inc
mov
mov
add
xchg
or
cmp
dec
pushf
mov
test
xor
push
mov
or
inc
mov
inc
inc
test
add
pop
clc
mov
sti
mov
test
add
sar
or
cmp
cmp
add
ret
test
cmp
add
int3
dec
pushf
jb
les
cmp
mov
lea
push
jns
or
add
jns
add
(bad)
stc
lea
or
(bad)
dec
add
jns
or
lds
xor
dec
retf
sar
add
inc
add
retf
dec
sbb
dec
xchg
dec
test
adc
jb
xchg
js
inc
cmp
enter
rol
lds
dec
rol
dec
inc
pushf
mov
rol
inc
mov
or
add
lds
dec
xchg
or
lahf
add
retf
add
jle
xchg
mov
ror
or
cmp
mov
dec
(bad)
adc
mov
enter
or
pushf
sti
or
sti
mov
xchg
dec
inc
pushf
sti
or
pop
cli
dec
inc
pushf
mov
add
mov
dec
push
les
inc
mov
or
fdiv
or
js
add
stc
mov
icebp
or
jns
inc
pop
xor
add
inc
inc
(bad)
les
or
dec
dec
int
jnp
fisttp
dec
mov
mov
add
(bad)
repnz
mov
into
cmp
fisttp
cli
or
repz
sti
mov
test
fisttp
or
test
repz
psubq
lahf
inc
stc
mov
mov
retf
or
sti
retf
les
mov
test
jnp
add
ja
into
(bad)
dec
cmp
add
mov
popf
dec
sbb
loop
sbb
inc
hlt
mov
sub
xchg
adc
mov
adc
cmp
rcl
mov
mov
cmp
mov
or
inc
hlt
mov
cmp
sar
cmp
ror
inc
hlt
mov
cmp
push
or
pop
pop
inc
hlt
mov
cmp
cmp
(bad)
hlt
mov
cmp
jnp
push
adc
inc
hlt
mov
cmp
aas
adc
lods
in
mov
xor
in
bound
shl
pop
sahf
out
sub
pop
shl
xlat
lea
out
ja
sub
pop
out
(bad)
pop
mov
xor
push
(bad)
jmp
(bad)
sub
mov
mov
movs
adc
inc
sbb
movs
inc
add
inc
add
sar
jecxz
ret
inc
or
xchg
icebp
imul
add
push
test
pop
(bad)
jle
or
repz
mov
xchg
add
dec
imul
jb
repnz
mov
jmp
ret
cli
mov
dec
ffree
mov
stos
or
jle
lds
dec
out
stos
dec
movs
int
pop
ds
mov
(bad)
jmp
adc
pop
sub
push
jp
iret
jmp
mov
shr
push
add
les
shr
sub
mov
adc
pop
cmp
adc
lods
mov
jb
pop
icebp
add
int
rcl
inc
jle
dec
cdq
lds
adc
mov
aad
push
xchg
and
(bad)
push
sbb
aad
in
jmp
mov
int
cdq
ins
rcl
mov
sbb
aad
outs
mov
jmp
mov
cli
nop
jmp
mov
loopne
dec
jp
mov
aas
into
mov
sub
sub
in
mov
sub
(bad)
retf
jmp
outs
mov
inc
dec
jp
je
imul
mov
jmp
xchg
shl
shr
test
xchg
shl
xchg
mov
imul
mov
(bad)
shr
test
xchg
shl
(bad)
shr
test
xchg
shl
(bad)
shr
test
xchg
shl
(bad)
shr
test
xchg
shl
mov
sub
shl
shr
test
xchg
shl
inc
shr
ds
and
(bad)
retf
jmp
mov
sub
sbb
add
arpl
shr
pop
and
outs
add
fwait
xor
xchg
(bad)
lock
jp
je
aad
cmp
into
shl
cs
push
jle
dec
pop
sub
paddd
arpl
add
xor
(bad)
frstor
test
or
jle
sub
je
push
add
mov
pushf
mov
mov
sub
or
mov
jb
(bad)
jecxz
adc
dec
xchg
pop
outs
add
lea
add
pop
sti
shl
push
fs
jmp
xchg
xchg
lea
jne
mov
(bad)
sub
ds
mov
iret
aas
nop
sub
mov
ret
(bad)
aas
dec
popf
add
jb
xor
shr
jp
call
(bad)
mov
fadd
mov
leave
std
adc
nop
cdq
popa
mov
sub
dec
and
adc
test
(bad)
xor
add
lea
sub
ror
mov
add
dec
dec
jb
arpl
fimul
add
ret
cli
mov
test
(bad)
push
das
add
mov
push
(bad)
hlt
(bad)
sub
lea
pop
stos
(bad)
rcr
add
test
stos
lahf
rol
lahf
rol
jbe
das
push
jg
enter
rol
loope
movs
(bad)
lahf
rol
mov
rol
(bad)
lahf
aad
(bad)
lahf
rol
(bad)
lahf
rol
ins
imul
(bad)
lahf
rol
(bad)
sbb
mov
(bad)
lahf
rol
(bad)
lahf
push
xchg
lahf
rol
out
test
imul
gs
mov
in
mul
movs
inc
inc
aaa
movs
sub
jnp
pop
mul
movs
daa
cmp
jp
jnp
dec
mul
movs
push
ret
enter
es
mov
pushf
pusha
sbb
or
mov
cdq
mov
inc
std
retf
out
(bad)
(bad)
jmp
push
xchg
inc
xlat
dec
lods
adc
in
push
lahf
xor
or
stos
fwait
pop
cli
jp
xor
or
cmp
test
es
push
add
and
pop
cmp
or
or
mov
cmp
or
push
mov
shr
mov
(bad)
ss
aas
neg
rol
cdq
mov
inc
inc
rcr
inc
mov
sbb
sub
xchg
ds
clc
sub
sub
mov
adc
jmp
cmps
mov
nop
cmp
les
aad
fdiv
fimul
and
push
dec
push
add
int
aam
out
adc
fstp
aad
mov
mov
xlat
sub
add
dec
nop
movs
mov
cdq
add
add
ds
adc
retf
and
cdq
add
pop
in
imul
adc
push
add
inc
clc
mov
shr
xor
or
popa
jb
adc
rol
mov
add
test
push
out
sbb
cmp
xchg
mov
inc
test
das
mov
fld
xchg
ins
dec
aam
lods
enter
dec
xchg
mov
dec
cdq
retw
add
jmp
jp
outs
pop
inc
out
in
xchg
inc
imul
xchg
pop
out
in
xchg
inc
out
in
xchg
inc
out
ins
adc
arpl
in
xchg
inc
out
ins
adc
arpl
in
xchg
inc
out
in
xchg
inc
out
in
push
bound
iret
js
dec
inc
cmp
test
inc
or
out
sbb
and
mov
jecxz
sbb
jp
and
pushf
pusha
sbb
or
cmps
mov
lds
inc
std
or
(bad)
(bad)
jmp
push
out
fwait
or
sub
lds
std
movs
mov
test
mov
xchg
imul
std
inc
js
sub
push
push
outs
inc
pop
adc
jp
rol
sbb
sub
(bad)
inc
pop
cmp
aad
loopne
stos
fdivr
(bad)
mov
in
jmp
dec
sahf
adc
ds
popf
add
cmc
mov
fstp
imul
sub
(bad)
jmp
push
test
push
ret
push
sbb
(bad)
sub
sub
nop
push
pop
cmps
add
sub
int
inc
xor
adc
pop
rol
rcr
dec
ror
loope
mov
cld
add
hlt
shl
add
(bad)
jae
jecxz
xchg
arpl
add
scas
(bad)
iret
pop
cmp
inc
xor
out
cdq
mov
push
cmc
leave
add
int
mov
fdivr
sahf
push
jecxz
ds
or
jb
dec
sub
push
aad
icebp
pop
jnp
inc
in
xchg
aad
out
add
pop
jnp
dec
ffree
mov
mov
fild
add
cmp
xchg
mov
clc
popf
jns
sti
push
push
imul
push
push
pop
mov
mov
ins
and
fs
cmp
inc
and
loopne
inc
popa
xchg
cmps
sahf
xor
sbb
fs
cmp
pushf
sbb
sub
inc
inc
cmp
fs
cmp
les
pusha
or
inc
cmp
inc
cmp
xlat
pop
outs
or
mov
pop
ror
cdq
push
std
shr
lahf
or
pop
and
call
pop
mov
add
and
jecxz
mov
sub
sub
pop
jecxz
mov
mov
jecxz
jecxz
jecxz
arpl
jecxz
arpl
arpl
cs
ds
cs
(bad)
sub
adc
sub
add
add
mov
or
std
ins
retf
addr16
retfw
gs
retfw
ins
retf
gs
gs
addr16
jno
jecxz
outs
retf
jb
jecxz
sub
arpl
retf
gs
gs
lods
aad
jno
aad
or
mov
lods
aad
jl
retf
pop
retf
dec
and
ror
mov
(bad)
retf
and
xchg
retf
and
cwde
retf
jecxz
gs
addr16
addr16
jno
jecxz
jge
mov
push
retfw
outs
retf
jae
arpl
jbe
mov
adc
retf
jecxz
gs
enter
xchg
retf
and
nop
retf
jecxz
(bad)
cmc
mov
mov
jge
and
jo
arpl
retf
addr16
jb
jecxz
retfw
push
retf
outs
retf
addr16
jbe
and
push
retf
jbe
and
jae
arpl
retf
jecxz
outs
retf
retfw
addr16
outs
retf
retfw
gs
xchg
retf
jecxz
addr16
addr16
test
jecxz
scas
cmp
sti
mov
mov
fwait
aas
sub
push
inc
imul
imul
imul
imul
adc
imul
adc
imul
cmp
imul
cmp
imul
inc
imul
arpl
push
pusha
imul
imul
imul
cwde
je
ins
imul
or
pop
push
arpl
stos
jne
test
imul
cmp
and
inc
imul
add
mov
add
imul
popa
arpl
pop
movs
arpl
cmc
mov
pop
test
sub
mov
pop
ret
out
lock
inc
fmul
mov
pushf
test
arpl
repnz
and
jle
pop
out
mov
pop
or
je
jle
mov
jle
popa
aas
jle
mov
mov
jle
jae
jle
ret
xchg
jle
jne
jle
adc
jle
jmp
jle
popa
repz
mov
jle
inc
xchg
jle
pusha
gs
aaa
icebp
jle
loop
jle
nop
mov
jecxz
and
sub
jg
test
push
and
call
xlat
jecxz
out
xlat
mov
dec
stc
xlat
mov
ins
in
xlat
arpl
stc
xlat
and
xlat
arpl
xlat
mov
pop
stc
xlat
and
xlat
and
out
xlat
and
fisub
inc
mov
jecxz
jbe
arpl
daa
cmp
inc
cmp
imul
repz
ja
cmp
and
mov
sub
add
sub
add
inc
in
jae
push
ds
mov
push
(bad)
sub
mov
mov
scas
neg
in
push
test
add
fsub
sub
jecxz
retf
sbb
and
jp
(bad)
shl
push
in
call
pop
ret
aam
add
jl
cmp
jp
in
cmps
into
and
cdq
(bad)
shl
sbb
cmps
bound
sub
lock
sub
mov
jg
test
mov
add
(bad)
stos
or
ds
push
sti
add
or
mov
adc
mov
push
mov
cdq
xchg
pop
sbb
ds
cdq
add
add
inc
popa
iret
fst
inc
or
(bad)
stos
sti
inc
mov
cli
shl
aas
jae
push
ds
mov
and
jmp
mov
pmullw
and
mov
xor
dec
aad
adc
inc
inc
aam
push
sbb
add
pop
hlt
rcr
arpl
jmp
ror
mov
mov
ins
sti
add
(bad)
nop
sbb
adc
adc
out
jmp
cmp
pop
sti
sahf
push
arpl
sbb
test
ret
add
pop
scas
adc
pop
cmp
(bad)
aad
test
jnp
retf
ficomp
sub
mov
and
mov
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
call
xchg
es
cmp
inc
mov
cmps
mov
mov
es
cmp
aaa
inc
mov
cmps
mov
js
aaa
xchg
cmps
mov
mov
es
mov
cmps
mov
inc
mov
mov
mov
es
mov
mov
cmps
mov
xchg
cmps
mov
push
mov
mov
cmp
aaa
inc
mov
ja
cmp
test
out
cmps
sbb
cmps
mov
mov
mov
and
cmps
mov
mov
mov
and
cmps
mov
mov
mov
and
cmps
mov
mov
mov
daa
xchg
mov
clc
addr16
mov
add
inc
pop
(bad)
xor
pop
and
mov
ja
cmps
push
add
jno
pop
(bad)
xor
and
movs
lahf
out
mov
lahf
out
mov
mov
ja
jle
xchg
mov
mov
fnstenv
movs
lahf
out
mov
lahf
out
mov
jle
xchg
mov
js
xchg
mov
js
mov
mov
mov
mov
fnstenv
movs
lahf
out
mov
jle
mov
mov
mov
js
xchg
mov
js
mov
mov
(bad)
movs
lahf
out
mov
jle
mov
mov
mov
clc
and
(bad)
aaa
dec
js
xchg
pop
call
mov
mov
push
mov
jns
xchg
xchg
pop
mov
inc
jns
nop
pop
add
inc
mov
es
call
xchg
es
js
xchg
mov
cmp
dec
jle
les
xchg
pushf
pop
daa
xchg
mov
cmp
push
inc
jns
nop
pop
add
pop
add
pop
es
pop
mov
mov
loopne
jnp
cmps
mov
mov
mov
js
xchg
mov
cmp
push
inc
jns
nop
pop
push
xchg
mov
adc
xchg
addr16
mov
jp
xchg
pop
mov
jp
xchg
pop
es
jp
xchg
pop
es
jp
xchg
pop
es
stc
add
(bad)
clc
es
stc
or
pop
(bad)
ja
mov
ja
jp
xlat
mov
out
add
les
out
loopne
in
cmps
xchg
movs
mov
mov
js
xchg
movs
mov
mov
js
xlat
mov
out
inc
stc
les
jp
xchg
pop
daa
xchg
movs
mov
mov
js
mov
mov
mov
cmp
aad
stc
les
jns
xchg
pop
es
pop
push
xchg
pop
daa
xchg
movs
mov
mov
cmp
aad
jns
xchg
pop
add
pop
sbb
xchg
xchg
pop
daa
xchg
movs
mov
mov
cmp
aad
jns
xchg
pop
xor
or
xchg
clc
ss
mov
jbe
cdq
cmps
mov
clc
es
inc
mov
mov
inc
sti
pop
mov
mov
das
mov
call
inc
fisub
xchg
mul
es
mov
add
pop
dec
(bad)
call
inc
cwde
or
mov
jns
xchg
pop
add
inc
mov
es
call
inc
call
inc
mov
test
cmp
retf
out
pop
add
pop
add
inc
mov
es
(bad)
cwde
pop
iret
xchg
data16
stc
push
mov
mov
pop
mov
xchg
pop
mov
xchg
pop
mov
xchg
pop
mov
xchg
add
pop
xchg
sub
and
es
mov
out
inc
js
xchg
sbb
pop
mov
out
inc
stc
les
inc
jns
xchg
pop
push
xchg
js
jae
call
inc
cwde
pop
mov
pop
jns
xchg
pop
es
pop
add
(bad)
call
inc
call
(bad)
mov
es
cwde
pop
mov
dec
jns
xchg
pop
add
inc
mov
es
call
inc
xchg
mov
inc
cwde
pop
mov
inc
jns
xchg
pop
add
inc
mov
test
cmp
ja
mov
pop
mov
daa
hlt
cmps
mov
xor
cdq
out
test
mov
fnstenv
movs
popf
out
mov
jl
mov
mov
mov
js
xchg
mov
clc
daa
sbb
call
inc
add
out
mov
xchg
das
mov
call
inc
sbb
jbe
popf
out
mov
popf
out
mov
popf
out
mov
popf
out
mov
mov
and
dec
(bad)
mov
es
call
inc
sbb
jbe
popf
out
mov
mov
inc
hlt
mov
sbb
jne
cdq
out
mov
mov
out
mov
mov
out
mov
mov
out
mov
mov
out
test
mov
mov
sbb
ja
xor
mov
call
inc
call
inc
sbb
cmp
sub
movs
xchg
out
mov
cdq
das
mov
call
inc
mov
es
inc
sbb
mul
es
xchg
out
mov
xchg
out
mov
cdq
das
mov
call
inc
sbb
jbe
xchg
out
mov
xchg
out
mov
cdq
out
mov
cdq
das
mov
call
inc
sbb
jbe
xchg
out
mov
js
pop
push
xor
div
mov
movs
xchg
xchg
daa
mov
xchg
addr16
cmps
mov
push
xchg
pop
daa
xchg
stos
mov
mov
cmp
adc
pop
add
pop
or
movs
xchg
out
mov
inc
cmps
xchg
cmps
mov
mov
mov
fnstenv
movs
xchg
out
mov
jne
mov
mov
mov
js
xchg
stos
mov
mov
js
xchg
stos
mov
mov
js
mov
mov
mov
clc
daa
cdq
xchg
or
inc
add
out
mov
xchg
out
mov
jne
mov
mov
mov
cmp
xchg
mov
data16
js
lds
sbb
cmps
mov
mov
mov
and
cmps
mov
mov
mov
and
cmps
mov
mov
mov
and
cmps
mov
mov
mov
daa
xchg
test
clc
addr16
mov
add
inc
pop
xlat
xor
pop
sub
mov
ja
aaa
cmps
push
or
js
pop
xlat
xor
sub
movs
xchg
out
mov
xchg
out
mov
mov
ja
ja
xchg
test
mov
fnstenv
movs
xchg
out
mov
xchg
out
mov
ja
xchg
test
js
xchg
test
js
mov
mov
mov
mov
fnstenv
movs
xchg
out
mov
ja
mov
mov
mov
js
xchg
test
js
mov
mov
(bad)
movs
xchg
out
mov
ja
mov
mov
mov
clc
and
(bad)
aaa
dec
jns
xchg
pop
jmp
mov
mov
push
mov
jns
xchg
xchg
pop
mov
inc
jns
cwde
pop
add
inc
mov
es
call
xchg
es
js
xchg
test
cmp
dec
jg
les
xchg
pushf
pop
daa
xchg
test
cmp
push
dec
jns
cwde
pop
add
pop
add
pop
es
pop
mov
mov
jmp
mov
mov
mov
js
xchg
test
cmp
push
dec
jns
cwde
pop
push
xchg
mov
xor
test
test
lods
jnp
mov
das
loop
sub
jge
jns
outs
pop
mov
mov
(bad)
sub
scas
xchg
popa
aas
ja
test
sub
xor
jno
repnz
pop
fs
mov
fisub
out
push
test
lea
xchg
mov
mov
cdq
jb
xor
add
pop
ret
movs
jecxz
xchg
mov
push
inc
pop
ret
pop
ret
pop
ret
mov
add
pop
fisttp
inc
(bad)
sub
or
jmp
inc
pop
adc
ret
mov
sbb
or
ret
pop
ret
or
cmps
add
test
push
mov
(bad)
stos
add
test
call
add
test
es
cmps
inc
(bad)
enter
cmps
inc
(bad)
xlat
xchg
cmps
mov
(bad)
sub
or
call
add
test
call
add
test
es
cmps
inc
(bad)
xlat
xchg
cmps
mov
(bad)
sub
or
call
add
test
xchg
cmp
ss
out
adc
xchg
mov
sbb
in
sub
xchg
js
mov
in
sub
mov
ss
xchg
es
mov
cmp
ss
out
adc
xchg
mov
sbb
or
lds
ss
pushf
mov
es
bound
bound
xlat
ss
bound
bound
scas
jo
cmps
inc
pop
adc
ret
pop
ret
inc
adc
ret
pop
ret
jns
cmp
jmp
cmps
or
test
call
mov
pop
add
pop
ret
pop
ret
imul
cmps
xchg
add
pop
ret
pop
ret
outs
push
push
bound
bound
add
adc
ret
(bad)
push
or
ret
pop
ret
sti
jmp
mov
add
pop
ret
add
aad
imul
inc
pop
adc
ret
outs
push
jbe
js
push
bound
data16
mov
(bad)
out
xchg
push
bound
bound
or
add
pop
ret
mov
mov
push
add
pop
ret
pop
ret
pop
(bad)
jbe
inc
add
pop
ret
mov
cmp
pop
ret
pop
ret
pop
les
pop
add
pop
ficomp
mov
cmp
ss
in
xor
xchg
js
xchg
out
bound
bound
bound
mov
jmp
pop
ret
mov
hlt
out
out
inc
push
jecxz
or
ret
pusha
in
or
inc
test
cmps
mov
pop
add
pop
ret
sbb
push
bound
bound
xchg
add
pop
ret
pop
ret
shl
inc
ss
pop
jnp
and
lods
fsub
bound
bound
sub
jecxz
or
ret
sbb
dec
bound
bound
data16
xlat
idiv
call
push
bound
bound
(bad)
hlt
aam
inc
inc
(bad)
pop
ret
pop
ret
pop
ret
sbb
jbe
mov
xlat
mov
movs
push
lahf
inc
ss
bound
bound
bound
xchg
ret
pop
ret
inc
ficomp
bound
bound
fiadd
mov
mov
jbe
imul
outs
mov
add
pop
ret
adc
test
bound
(bad)
fadd
mov
bound
bound
ja
dec
cmps
int
mov
and
ja
jnp
xor
js
push
bound
bound
add
inc
xchg
in
pop
mov
xchg
sbb
jl
inc
mov
mov
ja
test
ret
pop
ret
xor
jns
gs
fld
pop
add
pop
ret
pop
ret
jle
xchg
xlat
mul
xchg
mov
clc
cmp
test
out
inc
pop
add
pop
ret
sbb
neg
jo
jae
ret
pop
ret
scas
repnz
sub
hlt
dec
xor
cmp
loope
or
ret
pop
ret
inc
fisub
mov
cmp
pop
ret
pop
ret
pop
jmp
gs
mul
inc
push
bound
bound
sub
mul
xchg
mov
clc
cmp
test
cmps
mov
pop
add
pop
ret
out
lock
bound
bound
test
cmps
push
out
test
pop
adc
mov
fcom
idiv
es
xchg
inc
mov
bound
bound
fs
push
bound
push
pop
jmp
pop
jmp
bound
bound
bound
jbe
enter
jle
cmps
(bad)
jns
cmps
leave
mov
cmp
fisubr
or
ret
pop
out
bound
bound
bound
pop
pop
jmp
pop
ret
jne
push
bound
data16
xlat
jbe
(bad)
mov
ss
xchg
inc
lds
and
inc
pop
mov
in
sub
xchg
js
mov
ss
lds
or
xchg
ret
pop
ret
sbb
jbe
mov
out
xchg
push
bound
bound
retf
dec
sub
pop
add
pop
ret
stc
out
bound
bound
bound
xlat
mov
es
pop
add
pop
ret
pop
ret
stc
out
bound
bound
xlat
js
outs
stc
mov
idiv
hlt
gs
add
cmps
inc
(bad)
pop
add
add
pop
ret
pop
ret
dec
enter
es
bound
bound
bound
cli
(bad)
or
bound
bound
bound
cmp
jecxz
xchg
push
bound
bound
jnp
call
mov
rol
ss
bound
bound
bound
push
ss
xchg
add
pop
ret
pop
in
or
inc
test
cmps
mov
pop
add
pop
ret
inc
ficom
idiv
test
push
jbe
rcr
xchg
add
pop
ret
pop
ret
add
aad
imul
pop
adc
ret
pop
ret
ins
in
or
(bad)
mov
js
push
bound
shr
mov
ss
pop
inc
and
inc
sub
add
pop
ret
pop
ret
fucomi
mov
test
sti
jb
mov
cmp
pop
ret
pop
ret
pop
fdiv
mov
xchg
js
push
bound
bound
imul
mov
aaa
and
bound
push
loop
lea
mov
add
pop
ret
cmp
mov
aas
mov
push
bound
(bad)
hlt
aam
push
bound
ja
pop
add
pop
ret
pop
ret
mul
or
jbe
je
(bad)
je
inc
pop
xlat
mov
cmps
xchg
push
mov
data16
bound
sti
push
pop
adc
ret
pop
ret
sub
mov
leave
and
bound
and
mov
bound
bound
aaa
pushf
mov
push
bound
bound
bound
push
mov
es
pop
add
pop
ret
sbb
daa
sbb
sbb
cmp
push
bound
(bad)
(bad)
sti
xor
mov
push
bound
bound
xchg
push
bound
bound
int3
and
mov
and
(bad)
xlat
mov
add
sbb
aaa
sbb
sbb
cmp
push
and
scas
mov
js
push
bound
(bad)
(bad)
das
xchg
call
(bad)
adc
sub
dec
mov
bound
bound
pop
ss
mov
bound
bound
bound
retf
arpl
xor
inc
bound
bound
or
xchg
ret
inc
ficom
bound
mov
jmp
ret
pop
ret
sti
jmp
pop
ret
pop
ret
mov
cmp
loope
xchg
push
bound
bound
jnp
not
bound
shr
mov
bound
test
push
jmp
add
pop
ret
pop
jmp
test
ret
pop
ret
ins
call
push
bound
bound
jnp
fnsave
ret
addr16
bound
bound
bound
icebp
ja
pop
inc
push
bound
bound
jno
cmp
bound
xchg
xchg
xchg
jbe
test
es
js
push
bound
bound
int3
and
mov
mov
es
pop
add
pop
ret
pop
ret
cmp
mov
dec
loop
inc
pop
add
pop
ret
pop
ret
(bad)
jmp
or
jmp
or
ret
pop
ret
pop
ret
pop
adc
ret
js
push
bound
bound
sahf
mov
stos
inc
sub
mov
and
add
pop
ret
pop
ret
sub
mov
bound
push
bound
loop
mov
fcom
cmp
cmp
mov
push
mov
pop
add
pop
ret
bound
bound
bound
bound
push
bound
(bad)
(bad)
sti
xor
mov
push
bound
bound
bound
xchg
add
mov
js
push
bound
pushf
cmp
mov
push
bound
bound
mov
js
push
bound
bound
int3
and
mov
mov
es
pop
add
pop
ret
pop
ret
cmp
mov
or
push
bound
bound
inc
(bad)
out
or
call
push
ins
inc
pop
mov
loope
inc
pop
add
pop
ret
or
ja
pop
inc
push
bound
bound
out
enter
test
ret
fsubr
add
test
and
add
test
ret
pop
ret
pop
ret
add
cmps
xchg
mov
mov
pop
add
pop
ret
pop
ret
inc
loope
xor
ja
bound
bound
in
sahf
cmp
pop
ret
pop
ret
(bad)
into
add
test
ret
pop
ret
je
xchg
mov
sti
jg
into
jnp
push
(bad)
or
in
pop
cmp
mov
add
pushf
sti
je
cwde
push
cmc
push
mul
sub
nop
pop
cmp
pop
ret
pop
ret
dec
call
neg
js
jne
xchg
pusha
addr16
enter
(bad)
or
bound
(bad)
fucompp
out
test
ret
pop
ret
pop
inc
push
bound
mov
ss
stc
mov
cdq
aad
add
cmps
inc
pop
adc
ret
pop
ret
jmp
adc
ret
pop
ret
cmp
cmc
in
xor
xchg
js
push
bound
push
test
loope
jnp
cmp
test
ret
hlt
aam
mov
cmps
inc
pop
adc
ret
pop
ret
sbb
mov
mov
movs
out
or
cmps
sub
ins
pop
ja
not
clc
in
data16
and
mov
push
bound
bound
bound
mov
mov
add
pop
ret
ss
bound
bound
mov
fcom
pop
ret
pop
ret
fsub
out
test
je
xchg
clc
addr16
add
cmps
inc
pop
adc
ret
pop
ret
fucompp
in
test
ret
sbb
mul
add
pop
ret
pop
fnstenv
mov
cmp
and
jns
xchg
mov
ss
xchg
add
pop
ret
pop
ret
mov
out
xchg
push
bound
bound
(bad)
fmul
add
test
ret
pop
ret
hlt
aam
jo
ret
pop
ret
pop
ret
jp
jno
pop
ret
pop
ret
pop
ret
mov
cmp
leave
addr16
test
es
bound
bound
dec
mul
jnp
test
movs
jo
test
dec
xchg
cmps
inc
leave
cmps
jns
test
push
bound
bound
bound
test
cmps
(bad)
in
outs
movs
dec
add
pop
ret
pop
ret
pop
les
pop
ret
pop
ret
pop
ret
jo
cmps
inc
pop
adc
ret
push
daa
xchg
inc
pop
inc
push
bound
movs
jl
push
bound
bound
bound
inc
sbb
or
push
(bad)
(bad)
sbb
push
bound
bound
bound
mov
idiv
test
call
jg
inc
sbb
mov
inc
pop
adc
ret
pop
ret
hlt
aam
dec
mov
addr16
addr16
out
inc
jnp
loopne
sbb
push
bound
bound
push
bound
bound
bound
add
pop
ret
pop
ret
inc
out
xor
ja
movs
jl
push
bound
es
neg
ss
inc
sbb
aaa
push
jnp
pusha
inc
pop
xchg
push
bound
bound
test
add
pop
ret
pop
fisttp
mov
test
pop
add
pop
ret
sbb
cmp
and
add
pop
ret
leave
out
out
push
mov
js
push
push
inc
pop
dec
in
idiv
xchg
js
push
bound
bound
bound
(bad)
ss
in
sbb
pop
ret
pop
ret
pop
ret
loope
cmps
(bad)
rcl
sti
(bad)
xor
(bad)
hlt
cmps
retf
or
push
dec
jns
dec
ror
test
cmp
push
inc
out
aad
pusha
sbb
inc
loopne
into
inc
loopne
into
sar
sbb
lds
sti
and
sbb
push
mov
sub
or
sub
dec
fild
mov
inc
es
or
jle
sub
inc
aas
push
inc
js
int3
mov
mov
std
loopne
in
pop
pop
cmp
xchg
add
or
fsubr
call
inc
and
ds
cld
ds
sub
sar
lea
pop
pop
(bad)
mov
jmp
xchg
mov
jb
mov
mov
lods
rol
ds
inc
out
pop
(bad)
jmp
retf
les
aad
loopne
and
adc
sbb
mov
ret
adc
or
or
inc
popf
test
(bad)
pop
hlt
test
pop
jnp
test
shr
jmp
mov
rcl
(bad)
mov
(bad)
not
cmp
aad
cli
mov
sti
mov
add
push
jmp
sbb
aad
in
jmp
test
dec
fld
leave
sbb
jl
dec
aad
int
cmc
pop
stos
mov
fs
es
add
rcr
pop
jae
pop
aaa
xchg
pop
ja
jmp
mov
xchg
inc
add
fimul
icebp
pop
mov
icebp
pop
ja
fs
test
adc
pop
jns
test
ret
stc
pushf
test
lods
dec
sub
cmps
add
mov
loopne
into
sar
sbb
pop
sahf
and
pop
(bad)
movs
mov
imul
jmp
les
jnp
mov
stos
or
mov
push
(bad)
in
ret
push
inc
js
jo
test
lods
cmp
and
in
pop
pop
cmp
mov
add
ds
popf
add
(bad)
push
sub
sub
sub
fisubr
mov
in
adc
adc
adc
(bad)
(bad)
jmp
ds
rcl
push
aam
push
push
cdq
cmp
stos
xchg
ds
jp
sbb
test
out
stos
or
stos
add
pop
sti
shl
rol
stos
jb
mov
test
and
xlat
ss
ds
cmp
xchg
sub
cmp
mov
cs
fnstenv
jecxz
aas
inc
dec
icebp
cmp
fst
shl
mov
jg
in
outs
aad
xor
mov
fstp
add
pop
in
jmp
inc
iret
out
pop
in
jmp
addr16
pop
cmp
push
mov
adc
add
adc
cmp
push
cmp
pop
jnp
ficomp
int
pop
mov
mov
xor
pop
cmp
xor
aam
shr
add
int
sub
mov
jnp
test
xlat
or
aas
dec
push
cmp
(bad)
and
push
add
call
xor
cmp
inc
aam
es
hlt
pop
jmp
or
leave
in
shl
xor
rcr
pushf
ret
sub
inc
and
inc
xchg
addr16
and
cmp
cmp
fsub
es
daa
test
inc
pop
fild
out
lea
push
(bad)
fsubr
mov
push
out
jmp
lods
sub
in
jmp
adc
or
mov
pop
push
daa
pusha
bound
mov
adc
push
mov
in
ret
or
retf
mov
mov
dec
sahf
adc
shr
adc
pusha
call
int
sbb
sbb
xchg
mov
and
(bad)
(bad)
stos
mov
push
cmps
addr16
loop
(bad)
mov
sar
mov
inc
ds
sbb
aam
adc
sar
mov
les
aad
in
outs
pop
(bad)
cmp
xor
add
inc
inc
(bad)
int
(bad)
sub
sub
mov
lds
ja
cmps
add
shr
aad
jmp
jmp
stos
aam
in
sahf
push
jecxz
adc
enter
push
push
mov
jp
push
(bad)
std
jmp
and
fldcw
pop
jnp
pop
pop
fadd
aad
(bad)
sahf
push
jecxz
push
nop
lahf
mov
test
pop
jle
add
push
adc
mov
aad
cli
and
pop
sub
pop
sti
push
xchg
outs
inc
jg
dec
jg
cmp
jmp
enter
dec
call
jmp
bswap
call
mov
jmp
test
call
jmp
(bad)
xor
fwait
sub
addr16
enter
mov
sub
and
cmc
iret
enter
dec
call
enter
enter
enter
mov
add
jmp
test
call
enter
enter
mov
or
call
enter
mov
or
call
enter
enter
dec
call
shr
bswap
call
mov
jmp
test
call
shr
(bad)
xor
fwait
add
call
enter
mov
add
call
enter
enter
dec
call
retf
iret
enter
enter
mov
add
jmp
test
call
retf
into
enter
mov
or
addr16
enter
mov
or
and
cmc
iret
enter
dec
call
ret
iret
enter
enter
mov
add
jmp
test
call
ret
into
enter
mov
add
addr16
enter
mov
add
and
cmc
iret
enter
dec
call
les
icebp
bswap
call
mov
jmp
test
call
les
dec
or
add
addr16
enter
mov
add
call
enter
enter
dec
call
jmp
sti
icebp
bswap
call
mov
jmp
test
call
jmp
sti
dec
or
add
addr16
enter
mov
sub
call
div
xchg
ins
add
dec
ja
bound
mov
bound
mov
bound
div
add
cli
xor
enter
sub
daa
adc
pop
cmp
js
pop
jmp
pop
xor
imul
add
dec
ja
xor
enter
sub
daa
adc
mov
xor
mov
inc
dec
ja
cmp
leave
and
daa
adc
cmp
jp
pop
jmp
pop
xor
call
or
xor
leave
and
daa
adc
cmp
jnp
pop
jmp
pop
xor
and
ins
add
dec
ja
cmp
enter
sub
daa
adc
pop
cmp
jae
pop
jmp
pop
xor
and
ins
add
dec
ja
aas
scas
adc
fisttp
enter
sub
daa
adc
pop
cmp
je
pop
jmp
pop
xor
bound
add
cli
ds
adc
popf
iret
mov
ret
lock
mov
gs
sbb
lock
gs
rcr
lock
and
mov
sbb
lock
gs
sbb
lock
and
mov
js
mov
gs
mov
gs
rcr
lock
sub
mov
mov
gs
clc
sub
iret
dec
adc
dec
movs
adc
and
adc
dec
in
iret
dec
movs
adc
dec
movs
adc
and
adc
dec
in
iret
dec
movs
mov
repnz
scas
inc
into
mul
test
in
cmp
mov
jo
in
or
out
(bad)
cmp
mov
jo
sub
iret
neg
icebp
dec
dec
and
mov
jo
sub
aaa
xor
test
inc
dec
dec
xchg
bswap
push
push
iret
inc
fstp
sbb
bswap
dec
or
(bad)
repnz
mov
sbb
ficomp
pop
inc
mov
cmps
dec
in
das
imul
arpl
fbld
add
adc
ss
in
rol
movs
or
lock
sbb
add
jnp
xor
fistp
mov
push
lahf
sub
push
and
cmp
enter
loopne
addr16
pop
cmp
popf
add
and
pop
xor
dec
rcr
sbb
inc
ds
cdq
add
fimul
ds
aad
sti
push
jae
les
adc
sub
adc
fcmovnbe
rcl
movs
scas
add
fdivr
nop
jnp
ret
add
test
stos
lea
cmps
neg
add
cdq
xchg
(bad)
in
jmp
pusha
adc
pop
cmp
cmps
(bad)
inc
pushf
cmp
in
rol
push
mov
mov
test
nop
je
fwait
add
dec
cli
(bad)
(bad)
ret
cli
mov
lds
stos
or
mov
push
fdivp
sti
das
test
jno
cdq
fwait
add
pop
jmp
jecxz
pop
add
adc
dec
inc
xor
adc
fnstenv
push
pop
and
js
xchg
sahf
cmp
lea
rol
js
in
mov
xor
xor
sub
inc
and
nop
pop
in
adc
pop
xchg
adc
xor
call
push
pop
iret
jne
mul
xor
lock
adc
push
aam
add
jo
in
imul
push
sbb
jne
mul
xor
or
fiadd
add
inc
iret
jne
(bad)
push
mov
adc
mov
fs
xor
xor
movs
xor
xor
and
jo
movs
xor
sub
inc
fs
lea
fcomp
inc
fs
shl
sub
push
pop
inc
iret
jne
mul
xor
xor
fs
movs
xor
xor
or
jo
movs
xor
adc
aam
mov
push
or
jne
pop
sub
rcl
aam
aam
stos
in
imul
sub
call
(bad)
push
or
jb
inc
std
dec
icebp
(bad)
(bad)
jmp
nop
xor
cmc
mov
in
jmp
cmp
push
add
pop
jle
cmp
pop
cmp
mov
mov
retf
inc
adc
xchg
and
add
cmp
mov
sub
mov
jmp
dec
sti
add
pop
inc
xor
sub
dec
(bad)
fstp
push
aad
adc
test
loop
aad
xchg
pop
sbb
les
pop
mov
and
cdq
jb
inc
push
test
test
sbb
jmp
and
or
or
fist
sahf
adc
and
fcmovnb
cli
mov
in
cmp
add
aad
fisubr
mov
leave
add
inc
add
or
push
sub
int
push
dec
sub
inc
icebp
pop
jnp
inc
xor
out
jmp
fist
sti
add
(bad)
fstp
pop
mov
fucomi
sbb
rcl
and
cmp
ins
cmps
push
arpl
mov
or
jle
mov
mov
mov
in
or
fsubr
dec
inc
arpl
pop
push
retf
push
jmp
ret
into
fild
ins
xor
mov
outs
mov
int
push
pop
sahf
dec
or
ja
inc
mov
into
xor
dec
paddsw
int
loope
dec
inc
pop
sbb
jne
imul
jne
jmp
jmp
lods
imul
or
sub
mov
xchg
or
dec
(bad)
push
xchg
or
outs
jbe
daa
les
or
pushf
mov
add
inc
and
into
inc
out
mov
cmp
cmp
pop
pop
jp
add
adc
pop
xor
jnp
mov
pop
(bad)
push
jne
push
inc
js
mov
fiadd
adc
in
(bad)
sub
and
in
push
pushf
add
xchg
dec
mov
pop
loopne
jno
and
imul
jle
sub
(bad)
mov
and
test
ret
(bad)
jg
push
sub
jmp
cmp
shr
and
sub
les
fidivr
(bad)
sub
aam
cmps
and
cmp
popa
movs
iret
jmp
cmps
je
pop
ds
cdq
jbe
aas
cmp
call
jle
dec
fld
or
call
pushf
xchg
sti
inc
test
cmp
sti
les
int3
(bad)
sub
sub
nop
int
pop
pop
pop
dec
mov
adc
and
mov
call
repnz
push
jecxz
pop
inc
retw
fldl2t
dec
add
mul
lea
sub
cwde
movs
fdivr
sahf
adc
jmp
pop
jnp
dec
popf
vpinsrw
test
jno
rol
iret
out
add
inc
inc
clc
push
push
inc
mov
or
aad
push
arpl
mov
ins
cmp
call
ins
icebp
mov
sbb
ficomp
sbb
fimul
sbb
ficomp
sbb
out
test
jmp
cwde
sbb
out
sub
(bad)
mov
sbb
ficomp
jmp
or
sbb
sbb
ficomp
mov
(bad)
(bad)
cmp
call
jmp
cwde
sbb
icebp
xor
(bad)
cmp
mov
cmp
call
jmp
cwde
sbb
les
jmp
mov
pop
cwde
sbb
fiadd
sub
xor
(bad)
cmp
mov
sub
sbb
ficomp
mov
outs
jl
adc
cwde
sbb
ficomp
aaa
inc
lock
mov
pop
mov
cwde
sbb
ficomp
cmp
pop
cwde
sbb
fcmovu
imul
ficomp
stc
(bad)
sbb
dec
(bad)
loope
mov
pop
cwde
sbb
fcmovu
dec
pop
inc
sbb
les
(bad)
sbb
(bad)
(bad)
popa
jbe
jg
sbb
pop
cwde
sbb
ficomp
dec
pop
(bad)
cmps
sbb
sbb
call
cwde
sbb
ficomp
imul
ficomp
inc
sbb
and
clc
paddd
mov
jmp
cwde
cwde
shl
jmp
mov
pop
cwde
sbb
fiadd
outs
icebp
xor
(bad)
cmp
mov
cwde
sbb
ficomp
add
fidiv
mov
(bad)
jmp
cwde
sbb
fiadd
outs
icebp
xor
(bad)
cmp
js
call
jmp
cwde
sbb
les
jmp
mov
pop
cwde
sbb
ficomp
clc
iret
fisub
dec
arpl
dec
dec
mov
cwde
sbb
ficomp
sub
jmp
cwde
pushf
jne
jl
iret
fisub
into
jge
fmul
jle
dec
mov
int
iret
sbb
jbe
(bad)
cmp
mov
cmp
call
fcomp
mov
sub
imul
cwde
sbb
out
sbb
inc
lock
cmp
dec
mov
cwde
sbb
ficomp
mov
outs
jl
adc
int
(bad)
mov
sbb
ficomp
aaa
inc
lock
mov
sahf
mov
cwde
sbb
ficomp
clc
(bad)
sbb
int
popa
jo
jg
sbb
call
stos
iret
sub
sbb
fcmovu
dec
sahf
dec
mov
jl
outs
and
dec
pop
push
clc
movd
jns
call
jmp
cwde
sbb
iret
sub
sbb
ficomp
sbb
fidiv
mov
iret
mov
sbb
ficomp
aaa
inc
lock
js
mov
mov
jmp
cwde
sbb
les
jmp
mov
call
jmp
(bad)
xor
icebp
xor
(bad)
cmp
js
call
jmp
cwde
sbb
les
jmp
mov
call
jmp
push
jmp
jmp
cwde
sbb
ficomp
pop
fdivrp
xchg
mov
mov
(bad)
(bad)
stc
(bad)
cwde
sbb
ficomp
sbb
fcmove
cmp
call
jmp
fmul
(bad)
pushf
sbb
ficomp
sbb
ficomp
jmp
mov
call
xor
lock
js
mov
mov
pop
cwde
sbb
ficomp
cwde
shl
jmp
mov
call
jmp
(bad)
xor
xor
(bad)
cmp
js
call
jmp
cwde
sbb
les
jmp
mov
call
int3
ficomp
pop
fdivrp
xchg
cmp
movs
sbb
ds
sbb
ficomp
cmp
call
jmp
fmul
(bad)
pushf
sbb
ficomp
dec
sahf
dec
jmp
cwde
sbb
ficomp
sbb
ficomp
sub
xor
out
std
loope
mov
pop
cwde
sbb
ficomp
mov
jmp
cwde
sbb
fsubr
jmp
cwde
sbb
ficomp
imul
sbb
dec
std
mov
sbb
call
jmp
fmul
(bad)
mov
sbb
ficomp
dec
sahf
(bad)
lahf
sbb
sbb
dec
fdivrp
jl
(bad)
xchg
movd
outs
xchg
jl
(bad)
pop
stc
(bad)
cwde
sbb
ficomp
sbb
ficomp
sbb
iret
sub
sbb
ficomp
sbb
fidiv
mov
iret
mov
cwde
sbb
out
aaa
inc
lock
js
mov
mov
sbb
ficomp
mov
outs
mov
imul
ficomp
xor
xor
(bad)
cmp
js
call
leave
fidiv
mov
iret
mov
cwde
sbb
ficomp
jmp
jmp
pop
pop
fdivrp
or
cmp
sahf
data16
stc
add
mov
push
mov
ins
clc
cmc
xchg
add
push
lods
pusha
push
(bad)
ds
(bad)
fsubr
mov
pop
cmp
scas
ss
mov
push
loop
jecxz
inc
pusha
out
repnz
add
fcmovne
push
inc
js
sbb
cmp
mov
ins
fdivrp
sahf
mov
adc
loop
mov
mov
cld
cwde
les
push
pop
inc
pop
aad
ss
ds
mov
pop
leave
mov
aad
push
inc
cli
ret
cli
mov
clc
int
test
pop
mov
out
push
mov
les
sbb
add
test
mov
ds
cli
(bad)
loopne
neg
add
icebp
adc
fstp
dec
aad
(bad)
aaa
pop
loop
cmp
scas
ss
add
inc
clc
push
jmp
mov
sub
sub
jmp
push
(bad)
push
dec
cdq
lds
and
lds
xchg
cmps
bound
or
rcr
cmovs
jb
fld
(bad)
pop
cmp
shr
adc
dec
mov
or
aad
add
ret
mov
add
clc
dec
xchg
or
push
(bad)
sub
(bad)
fsub
js
fiadd
add
adc
ret
add
fisubr
add
ds
add
fisubr
add
call
aaa
fisubr
add
fisubr
xchg
sti
(bad)
not
(bad)
cmp
sbb
push
outs
fs
cmps
lahf
mov
push
popaw
fs
out
mov
sbb
jmp
in
cmp
push
(bad)
fmul
dec
in
push
cmp
(bad)
adc
lahf
jg
add
adc
aas
dec
pop
and
pop
push
adc
adc
fistp
inc
nop
lea
sub
cmp
inc
mov
and
loopne
mov
mov
arpl
stc
pop
cmp
fld
adc
pop
cmp
jmp
mov
neg
add
stos
xor
mov
pop
mov
xor
cdq
xchg
push
shr
push
jecxz
cmp
xlat
lea
fsubr
mov
xor
(bad)
jmp
or
jmp
mov
add
lea
in
push
jae
mov
ds
or
stc
(bad)
jmp
jg
add
adc
lock
add
jmp
(bad)
jmp
push
pcmpeqw
ds
aad
mov
add
jbe
cmp
add
jg
jno
sbb
pop
mov
sub
add
popf
(bad)
(bad)
stos
int
cld
loop
mov
aas
inc
add
add
add
or
mov
jnp
push
or
pusha
stos
mov
dec
out
inc
test
retf
jecxz
ror
jns
or
pushf
bound
popf
ror
jns
or
jns
or
loop
push
popf
ror
jns
or
jns
sub
jecxz
ror
jns
or
stc
ror
jns
or
jns
mov
dec
in
jecxz
ror
jns
mov
pop
stos
std
inc
pop
push
lods
add
sub
sub
adc
push
(bad)
xor
ja
(bad)
sub
xor
adc
jne
ja
popf
ficom
(bad)
fsubr
mov
lds
sti
and
stos
cmp
dec
mov
sub
(bad)
sub
jg
leave
adc
push
fucom
inc
jnp
add
pop
jge
sub
and
popa
sub
or
js
pop
mov
jno
rcl
imul
(bad)
cmp
add
adc
arpl
sub
bound
pop
arpl
rol
cmp
rol
(bad)
aas
les
sbb
(bad)
add
pop
and
push
inc
nop
or
mov
iret
jmp
cwde
xor
jmp
jb
daa
arpl
inc
ror
jbe
das
lds
fwait
test
inc
mov
pop
jle
add
fldcw
ss
lea
mov
mov
mov
mov
push
aam
inc
test
pop
repz
pop
(bad)
mov
lea
fwait
cmps
bound
aad
hlt
sahf
push
loop
add
xor
aad
(bad)
xor
xor
(bad)
(bad)
sub
adc
inc
and
int
or
dec
mov
adc
cmps
adc
dec
shl
jnp
mov
(bad)
int3
sbb
push
adc
push
add
punpckhbw
xchg
push
sub
adc
xchg
xchg
punpckhbw
xchg
punpckhbw
mov
add
xchg
(bad)
enter
adc
adc
xchg
push
punpckhbw
daa
imul
jp
dec
jmp
popf
xor
jmp
dec
adc
cdq
mov
stos
(bad)
pop
cmp
dec
jnp
jecxz
inc
pusha
sbb
inc
loopne
into
sar
sbb
es
xor
test
cmp
jnp
into
inc
loopne
into
inc
loopne
dec
ret
retf
push
mov
test
mov
(bad)
(bad)
jmp
push
xchg
fidiv
xchg
or
movs
add
ds
rcl
(bad)
push
cmp
xchg
fwait
jnp
push
sbb
push
inc
mov
pop
xchg
(bad)
jns
push
ins
cmp
popa
leave
jp
nop
stos
jmp
push
lahf
ds
das
sub
repz
inc
adc
xchg
test
or
ds
ret
xchg
fcmovbe
rol
mov
mov
test
add
add
sbb
jb
pop
loopne
sub
les
pop
(bad)
daa
fimul
push
or
in
ds
repnz
mov
test
adc
popf
add
adc
aas
xchg
ds
push
push
jle
les
dec
fld
sbb
mov
les
sub
sar
sti
adc
mov
or
aam
icebp
sahf
adc
jmp
pop
jnp
dec
ffree
mov
cmps
pop
mov
shr
sti
inc
stc
pop
jnp
dec
ffree
and
push
push
or
jp
rol
cmc
aas
test
lock
sbb
(bad)
nop
(bad)
mov
mov
add
aam
push
cmp
mov
add
xchg
fild
icebp
xchg
fild
jno
fild
icebp
nop
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
icebp
xchg
ffreep
stos
or
pop
call
mov
dec
ret
cdq
sub
mov
retf
jge
push
sbb
push
ret
inc
adc
(bad)
lds
jmp
sbb
mov
pop
test
call
call
mov
or
sbb
mov
xchg
fild
icebp
xchg
fild
icebp
xchg
fild
mov
fild
icebp
xchg
fild
jno
fild
icebp
xchg
fild
xor
fild
icebp
nop
fild
icebp
xchg
fild
mov
fild
icebp
xchg
fild
jno
fild
icebp
xchg
fild
xor
fild
icebp
xchg
fild
xor
fild
icebp
adc
test
xchg
fild
xor
cli
shr
pop
xlat
in
xchg
fild
icebp
mov
lahf
add
nop
lahf
add
retf
nop
lahf
add
nop
pop
add
repz
seto
jno
fabs
xlat
xchg
fild
xor
stc
add
fsubr
xor
jmp
mov
fild
xor
sahf
mov
pop
add
push
aam
dec
xchg
pop
add
mov
pop
add
dec
std
or
xchg
fild
jno
sar
icebp
loope
mov
xchg
lahf
add
xchg
pop
add
hlt
and
xchg
lahf
add
mov
lahf
add
pop
int
inc
xchg
pop
add
into
pop
sbb
mov
ins
loopne
pop
add
int3
cli
mov
dec
inc
icebp
lods
imul
lahf
add
xchg
lahf
add
pop
cld
pop
fwait
xchg
pop
add
fidivr
inc
xchg
pop
add
aad
or
xor
jmp
add
loope
mov
lahf
add
cdq
fild
icebp
in
fisub
leave
hlt
push
out
cwde
pop
add
cwde
pop
add
cwde
lahf
add
(bad)
test
fild
xor
jmp
add
into
cmps
xchg
fwait
pop
add
fwait
pop
add
mov
fild
icebp
mov
fild
mov
ret
je
call
jno
lahf
add
cli
ret
pop
add
jle
imul
popf
pop
add
jecxz
push
mov
shl
popf
pop
add
std
push
and
sar
les
push
xchg
pushf
lahf
add
repz
pushf
pop
add
jmp
add
outs
fbld
lahf
lahf
add
lahf
pop
add
sti
loope
inc
lahf
pop
add
mov
sbb
xor
fmul
icebp
(bad)
sahf
pop
add
or
push
pop
sahf
pop
add
sahf
pop
add
sbb
pop
movs
sbb
add
into
loop
cmp
fisub
sbb
icebp
xchg
repz
xor
lods
jne
pop
add
inc
jmp
and
(bad)
cmps
fiadd
stc
jmp
(bad)
imul
add
sti
pop
cmp
in
jl
sbb
mov
ror
fild
jno
ret
test
lahf
add
jmp
add
add
cmps
test
loopne
test
add
inc
cld
jle
test
jno
ror
test
icebp
je
outs
mov
cmp
pop
add
xchg
sub
fild
icebp
add
lahf
add
icebp
jl
xchg
add
xor
add
add
xchg
add
(bad)
cmc
xchg
jno
aad
cdq
xchg
add
xchg
add
call
icebp
xchg
xor
mov
add
call
lods
mov
add
loope
inc
mov
icebp
test
pop
add
mov
aad
mov
sub
mov
xor
sti
(bad)
sbb
(bad)
xor
xor
xchg
mov
add
call
add
mov
pop
(bad)
mov
mov
aam
(bad)
xor
ins
ins
mov
pop
adc
loope
repz
fild
xor
in
xchg
ftst
jp
fild
jno
mul
sbb
fild
xor
xlat
loope
fild
xor
pop
add
mov
add
mov
jno
leave
and
(bad)
pop
add
dec
fstp
jno
lock
jno
lahf
add
(bad)
lahf
add
mov
sbb
enter
mov
add
pop
aam
add
lahf
add
in
shl
mov
add
mov
add
fwait
lock
addr16
add
mov
add
test
pop
add
in
inc
lea
inc
arpl
shl
push
mov
add
or
jmp
jno
out
(bad)
mov
add
mov
ret
pop
add
sti
neg
mov
add
(bad)
xchg
ret
mov
add
cmp
mov
jno
in
lods
dec
mov
add
sub
pop
cmp
js
and
mov
add
icebp
scas
mov
fcomp
xor
mov
cld
mov
xor
lock
test
out
push
mov
add
add
lahf
add
stc
xchg
shl
jmp
lods
mov
add
jo
call
icebp
(bad)
cli
inc
cmp
(bad)
sub
mov
add
mov
scas
cwde
mov
add
mov
add
hlt
lds
mov
call
add
mov
cld
adc
fild
xor
out
imul
inc
fisub
xor
(bad)
fsubr
repnz
ffreep
sbb
cld
es
lahf
add
xor
inc
pusha
in
retf
jp
lahf
add
lock
push
mov
repnz
sti
mov
loop
xchg
leave
jae
mov
ret
mov
out
or
mov
jmp
sti
aam
jno
lahf
add
stc
dec
(bad)
dec
(bad)
mov
shl
mov
enter
fild
mov
in
cmp
aad
mov
int3
and
ret
aad
ins
mov
clc
jl
mov
iret
xchg
int
pop
add
mov
ffree
dec
mov
loop
xor
lds
xor
call
loop
mov
call
add
add
test
mov
sti
xchg
pushf
mov
std
fwait
push
jae
(bad)
push
lahf
add
cld
dec
retf
mov
neg
xchg
mov
sar
mov
std
dec
and
fbld
icebp
test
xchg
(bad)
mov
ret
mov
sar
or
cld
or
movs
pop
add
jb
call
in
in
push
inc
into
xor
call
add
xor
lods
mov
add
fld
add
ins
in
or
pop
add
leave
cs
cmps
pop
add
cmps
pop
add
add
fadd
pop
add
das
jmp
enter
cmps
fild
jno
fnsave
cmps
fild
mov
dec
cmps
pop
add
retf
cmps
pop
add
or
das
lock
(bad)
mov
cli
jl
test
sar
lahf
add
shr
test
add
hlt
or
or
dec
cli
stos
fild
mov
(bad)
jl
stos
fild
jno
out
mov
jno
out
sub
pop
add
ja
mov
stos
pop
add
clc
ret
xchg
mov
add
push
inc
stos
lahf
add
in
cmp
mul
imul
cli
scas
test
(bad)
jo
lods
lahf
add
iret
add
xchg
hlt
pop
clc
lods
lahf
add
repz
iret
xchg
pop
add
pop
xlat
mov
mov
cli
mov
scas
pop
add
imul
add
scas
lahf
add
xlat
int3
lock
pop
add
scas
fild
xor
lahf
add
ret
sar
inc
out
vaddsubps
lock
add
rcr
add
in
lds
xor
cli
and
rcr
icebp
(bad)
ins
mov
test
mov
rcr
test
rcr
pop
(bad)
add
adc
stos
call
lahf
rcr
icebp
inc
(bad)
test
mov
jmp
icebp
aad
add
cmp
dec
mov
ins
in
jns
aad
add
push
jmp
cmp
pop
add
aam
add
aam
add
sti
jbe
aam
add
xchg
fcomp
cmp
sti
frstor
icebp
scas
lock
cwde
xlat
pop
add
xlat
fild
icebp
scas
(bad)
jo
xlat
fild
mov
iret
(bad)
fcom
pop
add
(bad)
xchg
(bad)
fild
jno
loopne
jle
pop
add
sar
push
(bad)
lahf
add
mov
fild
mov
cli
sub
(bad)
add
call
xor
movs
add
pop
add
cmp
aas
cli
fcomp
add
fcomp
add
fcomp
icebp
in
ret
test
fnop
in
mov
fild
mov
cld
ins
fistp
add
mov
push
adc
pop
add
or
or
ficomp
cmp
xor
(bad)
inc
ins
fcmovu
add
dec
imul
jno
ficomp
mov
aad
xchg
fstp
add
jns
das
jae
pop
add
fstp
add
int
popa
fstp
pop
add
into
mov
call
mov
jmp
and
pop
add
mov
pop
add
fistp
add
repnz
fild
mov
out
(bad)
(bad)
add
push
stc
push
mov
in
popa
push
ficomp
icebp
shl
mov
pop
add
test
lahf
add
rcr
adc
out
in
faddp
pop
add
out
pop
mov
pop
add
fcom
pop
add
rcr
ffreep
pop
add
ret
lahf
add
cmp
lahf
add
repnz
adc
pop
add
xchg
icebp
repnz
add
ret
xor
fild
ret
icebp
dec
ret
ret
mov
out
(bad)
cmc
lds
add
int3
or
lds
add
movs
loope
imul
fcomp
(bad)
mov
jmp
add
les
add
mov
lahf
add
stc
(bad)
iret
xlat
(bad)
lahf
add
(bad)
fild
mov
loopne
pop
(bad)
lahf
add
adc
hlt
sub
pop
add
sub
dec
iret
(bad)
fild
icebp
(bad)
sub
aam
push
dec
(bad)
lahf
add
aas
stc
add
jno
aam
int3
leave
fild
xor
pushf
movs
leave
pop
add
shr
jno
dec
leave
lahf
add
(bad)
sar
enter
push
std
lods
pushf
enter
sar
or
pop
add
test
cmp
enter
je
js
retf
pop
add
and
dec
cmps
retf
pop
add
jmp
mov
retf
lahf
add
loopne
mov
fild
icebp
inc
in
in
retf
mov
leave
push
xchg
retf
jno
(bad)
mov
jno
cmc
lods
push
int
add
xchg
fcomp
jno
hlt
(bad)
in
int3
pop
add
(bad)
jmp
add
int3
fild
icebp
test
mov
mov
xchg
stc
iret
pop
add
test
xchg
iret
fild
jno
in
cs
iret
pop
add
repnz
iret
lahf
add
out
jmp
mov
loopne
popf
into
fild
icebp
test
and
xor
add
test
ds
je
mov
icebp
pop
add
push
xlat
mov
mov
cli
xchg
xor
lahf
add
lock
add
push
imul
mov
pop
add
lock
add
call
add
repz
repz
add
inc
fidivr
jno
mul
repz
jno
(bad)
jno
repnz
add
out
fnop
cmps
repnz
add
repz
push
repnz
add
adc
mov
xor
pop
add
div
hlt
pop
add
ret
hlt
pop
add
push
out
aam
hlt
pop
add
pop
jecxz
stc
neg
dec
test
lahf
add
(bad)
call
lahf
add
cmp
retf
lahf
add
neg
add
and
js
neg
add
or
test
mov
out
adc
pop
add
ret
cld
into
stc
pop
add
push
leave
mov
pop
add
adc
adc
pop
add
pop
in
jnp
stc
fild
jno
ror
fild
mov
ret
clc
fild
mov
std
mov
clc
lahf
add
aas
int3
test
clc
fild
icebp
test
cdq
(bad)
pop
add
sti
pop
add
sti
fild
jno
test
mov
fcomp
jmp
mov
pop
add
fisubr
cli
pop
add
mov
fild
xor
pop
add
fisubr
lods
std
pop
add
dec
jmp
push
std
pop
add
mov
pop
add
pop
loope
(bad)
cld
lahf
add
out
loop
mov
add
pop
push
cld
lahf
add
loope
pop
cld
fild
icebp
or
(bad)
(bad)
call
jno
hlt
mov
mov
lahf
add
(bad)
call
add
faddp
sbb
(bad)
fild
jno
fdiv
icebp
inc
les
(bad)
pop
add
(bad)
pop
add
ss
iret
loope
add
loope
add
or
xchg
outs
loope
add
loope
add
cmc
and
loopne
add
loopne
add
rcr
xchg
fild
mov
cld
sub
loopne
add
sub
ds
jecxz
add
pop
retf
adc
(bad)
(bad)
jecxz
add
fdiv
adc
jecxz
add
loop
add
pop
clc
pop
mov
fild
xor
fsubr
dec
loop
add
xchg
aad
sub
mov
(bad)
in
add
dec
(bad)
jmp
icebp
jns
cmp
add
jmp
push
in
add
in
add
fdivr
scas
mov
rcr
popa
in
add
push
int
or
pop
add
iret
or
out
add
ret
int
movs
out
add
pushf
int
dec
out
add
out
add
shl
out
add
inc
call
add
sar
pop
add
out
add
in
(bad)
jmp
les
sahf
jmp
ror
pusha
jmp
iret
push
ss
(bad)
cld
call
rcr
pop
add
xchg
rcl
adc
loope
call
not
in
pop
add
cli
out
mov
pop
add
jmp
add
jmp
add
dec
stc
icebp
jmp
lds
inc
std
dec
jle
fild
xor
pop
add
in
lahf
add
in
lahf
add
jmp
addr16
lahf
add
ret
in
pop
add
jae
cmp
fild
icebp
cmp
pop
nop
in
pop
add
in
lahf
add
dec
in
or
pop
add
xadd
mov
fstp
nop
out
pop
add
int
outs
out
pop
add
out
lahf
add
out
fild
xor
ins
mov
cmp
cmc
pop
out
fild
mov
loop
adc
pop
add
call
mov
rol
and
int
adc
cmps
sbb
pop
add
adc
add
out
nop
adc
add
(bad)
retf
adc
add
icebp
into
xchg
cmp
pop
add
adc
add
js
xor
adc
add
lock
fild
mov
fdivr
mov
fild
xor
sar
in
mov
adc
push
(bad)
adc
repnz
(bad)
test
adc
retf
popf
adc
mul
pop
add
adc
add
ret
retf
leave
inc
adc
add
pop
(bad)
repnz
add
jmp
add
cs
adc
xor
in
(bad)
pop
add
shr
pop
pop
add
push
pop
add
sub
test
push
lahf
add
push
lahf
add
and
daa
int3
sbb
add
imul
sbb
add
or
lahf
add
sbb
adc
pop
add
jle
sbb
sbb
add
sbb
mov
leave
xchg
pop
add
pop
lock
sub
lahf
add
sbb
add
int3
icebp
lahf
sbb
add
sbb
icebp
popf
in
dec
pop
sbb
jno
enter
pop
add
sbb
add
repz
pop
sbb
xor
in
sbb
xor
jo
int3
xchg
sbb
out
lahf
jg
pop
add
repz
sbb
(bad)
(bad)
sbb
add
sbb
retf
lahf
add
cmp
ds
pop
add
sbb
add
pop
pop
add
jecxz
call
jno
ret
pop
pop
add
lods
fidiv
pop
lahf
add
iret
sbb
push
pop
add
fist
push
fild
icebp
ret
in
mov
fild
xor
jle
push
pop
add
hlt
icebp
int3
add
add
into
dec
add
add
push
neg
pop
add
add
shl
adc
es
sti
clc
add
add
add
stc
jge
lahf
add
mov
lahf
add
cmp
jl
add
add
out
mov
pop
add
loop
push
add
add
les
add
add
jae
jle
add
add
sub
leave
cdq
add
add
(bad)
adc
lahf
add
cmp
fild
xor
lahf
add
icebp
test
aas
lock
add
leave
dec
mov
cs
pop
pop
pop
add
sbb
pop
add
push
pop
add
sbb
int
push
lahf
add
push
lahf
add
inc
push
and
lahf
add
sbb
add
or
icebp
add
pop
mov
pop
add
or
jno
retf
or
xor
repnz
icebp
in
ret
lahf
add
or
adc
or
cmp
or
xor
add
or
add
je
add
or
add
cmc
cli
ror
pop
add
lahf
iret
xchg
or
cli
mov
or
add
add
inc
sbb
fild
mov
lds
icebp
push
leave
add
(bad)
cmp
lahf
add
mov
or
mov
shl
mov
jmp
mov
mov
ins
imul
jno
rcr
or
add
in
(bad)
maxps
xor
out
or
add
pandn
icebp
ret
sub
fild
jno
repz
clc
push
lahf
add
movs
loop
mov
lock
lahf
inc
push
lahf
add
push
pop
add
enter
xor
add
xor
add
(bad)
xor
pop
xor
pop
add
add
pop
add
or
icebp
mov
pop
add
frstor
xor
arpl
xor
add
xor
add
adc
pusha
mov
loopne
add
xor
add
fsub
xor
push
loope
lahf
add
fistp
mov
lock
je
lahf
add
jmp
add
pushf
out
(bad)
xor
retf
xor
out
jns
lahf
add
jns
sub
shl
xor
xchg
(bad)
xor
add
xor
add
lds
xchg
push
out
pop
add
daa
fisub
icebp
inc
fistp
jl
lahf
add
jmp
add
jge
xchg
jmp
pop
add
mov
enter
add
dec
enter
pop
add
mov
pop
add
mov
fild
mov
jmp
or
inc
cmp
mov
icebp
(bad)
xchg
cmp
icebp
addr16
mov
jno
into
enter
add
cmp
icebp
dec
retf
cmp
add
jl
imul
cmp
add
in
nop/reserved
lahf
add
pop
mov
icebp
add
loope
cmp
add
cmp
mov
mov
fist
mov
fstp
mov
loopne
in
inc
cmp
out
ds
shr
icebp
push
sar
cmp
add
loope
inc
cmp
add
sti
in
add
add
or
fwait
sti
aas
fild
mov
hlt
pop
sahf
aas
pop
add
aas
pop
add
inc
aam
and
lahf
add
mov
lahf
add
shr
fild
jno
aam
inc
ds
add
fild
icebp
push
jmp
add
aam
loop
and
add
push
ret
and
cmps
xor
pop
add
loop
loopne
pop
add
imul
test
fild
mov
enter
lahf
add
out
cmp
icebp
xchg
fidivr
(bad)
and
add
and
add
(bad)
in
jno
pop
add
dec
stc
out
and
add
call
jno
std
icebp
sahf
and
add
lock
fild
xor
repnz
aas
and
icebp
ins
icebp
push
frstor
hlt
call
icebp
fadd
pop
add
icebp
fsubr
cmp
cmp
fild
icebp
imul
add
fdivr
cmp
pop
add
adc
retf
shl
add
fdiv
daa
pop
add
daa
pop
add
daa
pop
add
cdq
xlat
shr
fild
xor
cld
mov
pop
add
pop
les
jne
pop
add
xchg
fiadd
fild
icebp
pushf
aam
jecxz
fild
mov
(bad)
(bad)
mov
pop
add
sbb
lahf
add
and
scas
aas
sub
xor
sub
add
sub
add
mov
pop
add
sub
push
leave
sub
add
sub
add
mov
pop
add
fisttp
mov
out
xlat
sub
add
idiv
mov
jl
and
pop
add
aad
cmp
pop
add
inc
clc
in
lds
ret
adc
pushf
fst
sub
cld
shl
hlt
leave
sub
add
std
out
and
sub
add
sub
pop
dec
sub
add
retf
sub
add
fnstcw
jno
fcom
das
pop
add
hlt
fidivr
pop
add
pusha
fldpi
add
pop
add
xor
pop
add
cs
add
rol
pop
add
fsubr
jb
cs
add
cli
(bad)
loop
fild
icebp
cmp
fwait
xchg
push
pop
add
push
pop
add
rcl
and
pop
add
jnp
daa
fst
add
jae
pop
xchg
push
pop
add
(bad)
ret
push
pop
add
icebp
adc
push
pop
add
push
pop
add
addr16
mov
add
xor
jl
push
lahf
add
rcr
mov
call
add
fdiv
push
pop
add
sbb
add
push
lahf
add
shr
cmps
int
lahf
add
push
pop
add
retf
push
push
pop
add
dec
iret
mov
mov
loop
stc
push
pop
add
inc
call
add
lds
jno
(bad)
sbb
fild
xor
fild
icebp
adc
inc
mov
add
push
pop
add
or
add
leave
jmp
ret
xchg
pop
add
cmp
test
jmp
cmp
or
xchg
fild
icebp
add
mov
jno
in
xchg
scas
nop
pop
add
lods
mov
nop
lahf
add
jmp
or
cli
inc
les
sti
push
xchg
pop
add
cwde
(bad)
push
push
xchg
fild
icebp
std
in
add
sar
xchg
pop
add
mov
push
adc
pop
add
xchg
lahf
add
(bad)
stc
inc
fcom
retf
dec
cdq
xchg
pop
add
xchg
lahf
add
push
rcr
jmp
pop
add
sbb
cmps
nop
xchg
lahf
add
xchg
lahf
add
fidiv
xchg
fild
xor
rcr
xchg
pop
add
les
jno
call
add
dec
into
adc
push
jecxz
in
xchg
lahf
add
lds
xchg
lahf
add
sahf
out
ret
inc
xchg
lahf
add
xchg
lahf
add
cdq
fild
xor
out
fcom
jge
jmp
icebp
adc
inc
cmp
les
xor
add
cwde
pop
add
aaa
shr
push
fisubr
fwait
lahf
add
fild
xor
fldenv
mov
loopne
xor
int
int3
call
mov
test
pop
add
(bad)
in
cmp
fcmovne
push
mov
stc
scas
scas
popf
pop
add
inc
aad
jp
fild
jno
jmp
add
out
ficomp
pop
cwde
pushf
pop
add
pop
call
add
aad
pop
sub
sbb
loopne
lahf
pop
add
lahf
lahf
add
or
jo
lahf
lahf
add
sub
daa
and
in
mov
xor
add
xchg
fidiv
inc
sahf
pop
add
test
mov
jecxz
fadd
in
xchg
mov
pop
add
cmp
mov
mov
jmp
and
test
loop
mov
sbb
ja
fild
mov
xlat
or
xor
lahf
add
iret
aaa
xchg
sbb
pop
sbb
dec
(bad)
push
sbb
fdiv
pop
int3
sbb
mov
lahf
add
xchg
rol
inc
sbb
xor
rcr
cmc
leave
out
test
jno
(bad)
fldcw
fcmovnbe
ret
pop
add
(bad)
push
add
aad
rol
mov
lahf
add
test
add
jo
add
pop
add
(bad)
jge
xchg
xor
jmp
dec
int
fild
imul
mov
jmp
inc
xchg
jnp
xchg
mov
mov
add
hlt
rol
and
lahf
add
leave
cmc
loope
mov
add
in
(bad)
jnp
mov
add
jmp
mov
mov
push
inc
mov
jno
out
push
mov
add
xlat
push
mov
jno
repz
lods
mov
mov
add
repz
jno
(bad)
xor
mov
inc
lahf
mov
add
cli
out
inc
mov
fwait
mov
dec
repz
jno
iret
fld
xor
and
pop
add
mul
pop
or
int3
in
ror
push
mov
add
addr16
mov
icebp
fcos
lahf
sbb
mov
jno
(bad)
pop
add
mov
pop
add
mov
pop
add
add
fild
icebp
inc
leave
or
mov
in
mov
fisub
push
lahf
add
or
lahf
add
icebp
xor
xor
pop
add
mov
add
fsubr
lds
mov
add
mov
add
or
inc
pushf
mov
add
xlat
jge
mov
add
ret
adc
pop
add
mov
add
fdivr
icebp
aad
jmp
mov
add
mov
add
mov
add
add
dec
xor
mov
mov
xlat
mov
mov
add
mov
add
inc
rcr
mov
add
pop
enter
pop
add
(bad)
imul
push
sti
pop
in
fild
mov
hlt
xor
adc
lock
mov
add
mov
add
hlt
fld
push
out
movs
mov
add
aad
fcomp
pop
add
mov
add
jp
dec
std
mov
add
cld
loop
xchg
mov
add
jecxz
xchg
lahf
add
cdq
(bad)
mov
mov
aam
fdivr
sti
retf
fild
mov
hlt
mov
mov
int3
mov
xor
(bad)
fnstcw
(bad)
mov
rol
mov
push
mov
in
lds
enter
pop
add
sar
mov
inc
icebp
adc
add
aam
dec
xchg
mov
cli
mov
mov
fisubr
jmp
sbb
mov
iret
xor
sbb
xchg
dec
mov
ror
pop
add
loop
(bad)
mov
ret
pop
mov
xlat
ror
jbe
pop
add
sar
xchg
mov
jmp
add
xor
cdq
test
out
ja
fild
xor
jecxz
es
into
stc
fstp
xlat
push
mov
cli
pop
js
fild
mov
les
adc
pop
add
ret
(bad)
loope
mov
pop
add
mov
les
xor
and
mov
shr
fwait
mov
std
fisub
fild
jno
cli
pop
and
not
fisub
call
add
inc
test
pop
add
xchg
(bad)
(bad)
and
rcr
mov
int
lahf
mov
fmul
pop
mov
(bad)
mov
std
pop
shl
jne
movs
fild
mov
cmc
inc
push
sbb
outs
cmp
lahf
add
sub
lods
in
movs
lahf
add
in
fwait
movs
lahf
add
movs
lahf
add
int3
and
icebp
lods
leave
sbb
stc
in
inc
cmps
pop
add
cmps
lahf
add
push
cli
add
cmps
pop
add
test
add
xor
hlt
aad
pop
add
jmp
jno
test
add
pop
add
fst
test
add
in
lock
jecxz
push
test
add
into
into
jmp
test
add
cmp
jne
stos
pop
add
push
cli
pop
mov
jmp
xor
jmp
ss
pop
add
mov
fdiv
stos
lahf
add
cli
jmp
mov
xlat
mov
xor
out
pusha
push
lods
pop
add
lds
lods
fild
jno
aam
mov
lahf
add
jecxz
dec
lods
lahf
add
inc
ficom
icebp
push
int3
ret
inc
scas
pop
add
scas
pop
add
scas
fild
icebp
fcmovnb
and
scas
fild
xor
dec
(bad)
rcr
add
rcr
add
rcr
jno
retf
rcr
add
push
out
icebp
rcr
add
dec
fst
mov
call
lahf
add
rcr
xor
add
enter
pop
add
pop
(bad)
cmp
icebp
fcmovnu
(bad)
or
pop
add
ret
out
aad
add
aad
add
push
aad
add
mov
sub
aad
add
fidiv
(bad)
fild
xor
mov
mov
jecxz
sbb
lahf
add
out
int3
xlat
lahf
add
lods
ficom
xlat
fild
icebp
add
or
lahf
add
call
add
loopne
stc
int
lahf
add
ret
int3
mov
lahf
add
stc
loopne
jp
lahf
add
call
mov
ret
(bad)
add
jmp
inc
mov
add
jge
(bad)
add
fcomp
add
retf
cmp
fild
xor
out
jmp
add
add
mov
lea
lahf
add
fistp
int
ficomp
xor
fnstsw
pop
add
ficomp
ret
xchg
fstp
imul
lahf
add
es
stos
adc
pop
add
xchg
cld
inc
fcomp
jno
fsub
fcomp
lods
dec
fcomp
cdq
xor
mov
cmps
in
lahf
add
fistp
add
fistp
xor
jmp
add
add
ficomp
jno
out
sub
aam
or
lahf
add
sbb
or
rcr
jno
std
fldcw
sbb
pop
add
int3
jno
rcr
outs
hlt
ds
pop
add
(bad)
add
add
xlat
shr
push
rcr
sub
xor
rcr
hlt
ret
fild
icebp
mov
das
mov
pop
add
lods
hlt
mov
xor
fsubr
add
lahf
add
icebp
sbb
ret
mov
repnz
pushf
ret
xor
rcl
fild
mov
div
xor
lahf
add
jae
xor
lds
add
jb
das
xchg
pop
add
call
add
call
jno
int3
stos
fld
lahf
add
adc
lahf
movs
les
fistp
fild
jno
leave
cmp
(bad)
fild
xor
leave
pushf
in
(bad)
fild
icebp
or
repz
lahf
add
(bad)
fild
mov
icebp
je
(bad)
pop
add
out
inc
loop
pop
add
pop
in
leave
mov
stos
(bad)
cmp
pop
add
fdiv
add
sub
xor
leave
pop
add
jle
add
lahf
call
add
xchg
(bad)
cmp
outs
fbld
enter
cmp
adc
fucomip
cwde
push
enter
mov
lods
cs
pop
icebp
rcr
pop
add
retf
pop
add
mov
pop
dec
retf
fild
icebp
call
xor
in
mov
xor
lahf
add
retf
xor
jecxz
pop
retf
jno
into
fdivr
int
add
(bad)
int
(bad)
int
add
sti
xor
lahf
add
cmp
sub
int
add
call
xor
out
(bad)
int3
pop
add
int3
lahf
add
int3
pop
add
stos
out
call
ret
scas
sahf
iret
pop
add
sub
and
pop
add
movs
retf
loopne
iret
lahf
add
out
in
into
lahf
add
ror
xchg
pop
add
pop
cld
cmp
pop
add
mov
push
or
lahf
add
shr
jmp
pop
add
icebp
pop
add
jae
(bad)
pop
add
ror
sub
pop
add
lock
mov
out
mov
inc
ror
lahf
add
lock
icebp
inc
sti
cmps
out
pop
add
ins
mov
(bad)
pop
repz
add
repz
add
repnz
add
jnp
cmc
mov
pop
add
repnz
xor
call
add
out
mov
cmc
lahf
add
gs
mov
xor
fild
jno
(bad)
xor
shl
hlt
lahf
add
hlt
fild
icebp
cmc
jmp
sub
out
hlt
lahf
add
(bad)
(bad)
pop
add
neg
mov
iret
jb
neg
add
gs
or
fild
mov
sar
icebp
mov
fild
mov
call
add
neg
adc
stc
lahf
add
mov
lahf
add
push
inc
mov
shl
jno
jmp
aad
pop
add
(bad)
ficom
clc
pop
add
xor
into
push
clc
fild
icebp
mov
adc
icebp
pop
sar
(bad)
cmc
stos
sti
pop
add
movs
in
pusha
sti
fild
icebp
sbb
retf
fild
mov
sar
std
cli
fild
jno
leave
call
jno
sti
and
xor
pop
add
repnz
std
fild
jno
enter
lahf
add
loop
jne
pop
add
sbb
cmp
std
pop
add
pop
in
int
fild
jno
leave
inc
mov
fild
icebp
jb
mov
mov
les
cmps
in
fcos
lahf
add
call
icebp
xchg
out
push
je
pop
add
fsqrt
call
mov
(bad)
sbb
(bad)
pop
add
neg
(bad)
pop
add
fmul
(bad)
pop
add
and
in
(bad)
fild
jno
repz
pop
add
call
jno
icebp
test
pop
add
loope
add
loopne
add
nop
into
or
cmp
pop
add
shl
jno
call
add
xchg
xchg
(bad)
jecxz
add
icebp
mov
xor
jmp
or
pop
add
shr
popa
leave
cmps
mov
fild
icebp
xor
fild
mov
jecxz
sbb
lahf
call
add
in
add
fcmovbe
and
add
test
xor
(bad)
loop
pop
add
scas
into
movs
mov
cmp
aam
in
add
ins
hlt
loope
in
add
retf
fisub
out
add
repnz
xor
fbld
jb
pop
add
(bad)
fnsave
mov
aad
in
pop
add
out
add
(bad)
fnstenv
xor
add
jmp
stc
inc
mov
scas
aam
inc
jmp
icebp
push
mov
in
fsubrp
fild
icebp
(bad)
repnz
ins
(bad)
sbb
call
jmp
or
fild
jno
stc
dec
in
jmp
add
jecxz
jns
jmp
add
rol
icebp
popf
call
add
jmp
sahf
jmp
inc
jmp
xor
lahf
add
adc
pop
add
in
pop
add
jae
pop
push
in
pop
add
jmp
adc
in
fild
jno
jecxz
(bad)
lahf
add
jmp
mov
fild
xor
outs
in
fild
jno
enter
pop
add
out
lahf
add
iret
out
rsm
out
lahf
add
adc
adc
fild
jno
call
add
outs
retf
out
pop
add
cmp
and
out
pop
add
repz
push
out
lahf
add
sbb
add
adc
sbb
adc
cs
adc
adc
pop
add
adc
call
icebp
(bad)
out
imul
int3
call
rcl
push
adc
add
adc
jle
adc
add
inc
dec
pop
adc
add
call
jno
div
cli
adc
mov
adc
add
adc
add
adc
mov
cmc
adc
adc
aad
sahf
adc
repnz
mov
xlat
xchg
adc
cli
mov
jno
loope
lea
add
adc
add
(bad)
in
sbb
add
fidivr
mov
clc
dec
xchg
pop
lahf
add
xchg
int3
inc
dec
pop
lahf
add
adc
sar
pop
lahf
add
push
pop
add
mov
pop
add
neg
mov
lds
data16
sbb
add
xor
dec
mov
adc
mov
pop
add
mov
fild
icebp
pop
loop
fcomp
pop
add
jmp
add
adc
mov
pop
add
stos
(bad)
jmp
sbb
add
sbb
add
sbb
jno
vpunpckhdq
pop
add
lock
sbb
add
mov
fild
mov
ret
inc
mov
pop
add
fpatan
inc
outs
sbb
loopne
sbb
jno
sbb
int
sahf
sbb
fbld
jno
mov
xor
jmp
popf
test
pop
sbb
add
adc
pop
add
pop
pop
add
inc
jmp
add
jb
cdq
push
pop
pop
add
fdiv
dec
add
lahf
add
jae
pop
out
push
pop
add
in
cmp
fcmovb
push
bound
pop
add
jmp
sbb
lahf
add
out
jl
add
xor
in
xchg
add
jno
leave
mov
add
mov
cmc
dec
xor
pop
add
dec
loop
loope
pop
add
fwait
out
mov
pop
add
inc
aam
push
xchg
clc
jg
add
add
dec
ret
add
add
sbb
ins
mov
inc
enter
pop
add
adc
pop
add
fstp
mov
mov
rcr
add
add
add
add
fsub
xor
mov
mov
icebp
loope
mov
sahf
lds
push
fild
mov
hlt
arpl
add
add
mov
neg
and
add
repz
push
add
add
pop
lahf
add
pop
lahf
add
rol
pop
fild
xor
loop
and
(bad)
iret
daa
fadd
lahf
add
jne
pop
mov
pop
add
adc
jbe
push
lahf
add
fcmovnb
mov
push
fild
mov
retf
or
icebp
sbb
pop
add
fwait
clc
and
pop
add
js
popa
add
fild
mov
rol
or
add
mov
pop
or
add
icebp
and
pop
add
ss
xor
lahf
add
mov
lahf
add
cmp
popf
mov
rcl
mov
lahf
add
fsub
out
or
xor
lock
or
add
sbb
pop
add
fstp
pop
add
pop
(bad)
sub
lahf
add
or
hlt
imul
or
cli
shl
pop
add
fisttp
or
add
and
inc
or
mov
lds
or
add
mov
pop
add
jmp
add
pop
fldenv
nop
mov
fild
jno
sti
mov
nop
mov
fild
push
pop
add
mov
xor
fadd
jns
lahf
add
push
fild
icebp
jp
pushf
clc
xor
add
fild
mov
fild
xor
icebp
and
fild
xor
clc
(bad)
xchg
xchg
pop
add
xchg
fild
mov
shr
fild
icebp
ret
hlt
in
in
pop
add
dec
rol
mov
push
pop
add
call
add
cmc
das
les
call
add
repnz
fild
mov
retf
xchg
lahf
add
cli
push
xor
cld
inc
mov
ret
xchg
pop
add
aad
xor
enter
fild
xor
shl
adc
pop
add
xchg
lahf
add
xchg
lahf
add
xchg
pop
add
dec
leave
test
pop
add
xchg
lahf
add
out
not
test
dec
xchg
pop
add
xchg
pop
add
xchg
pop
add
xchg
lahf
add
cli
repnz
jne
pop
add
xchg
pop
add
call
xor
pop
add
loop
ins
cdq
pop
add
loope
cmp
pop
add
cwde
lahf
add
mov
pop
add
lds
cwde
pop
add
xchg
aam
sbb
sti
push
lock
lahf
add
out
mov
fild
xor
pop
add
sub
jg
fild
icebp
push
(bad)
call
sbb
aaa
jns
lahf
add
(bad)
je
call
lds
aad
mov
xchg
fadd
jno
cld
(bad)
int
pop
add
fmul
pushf
lahf
add
pushf
fild
icebp
pop
call
add
lahf
pop
add
xchg
fiadd
jno
out
das
dec
lahf
lahf
add
push
shr
icebp
sub
jno
sahf
pop
add
repnz
mov
pop
add
sub
out
push
xor
clc
push
sahf
lahf
add
std
jmp
add
(bad)
into
mov
fadd
pop
sbb
mov
sbb
in
sbb
es
out
test
stos
rep
pop
sbb
icebp
sub
lahf
add
std
imul
retf
int
mov
xchg
lock
inc
sbb
fnstsw
xchg
xor
rol
ret
add
cld
rcr
xor
fild
icebp
or
(bad)
adc
pop
add
xchg
(bad)
adc
jno
fstp
mov
push
out
mov
add
fmulp
push
test
add
shl
jmp
fild
jno
in
mov
test
jno
out
sub
add
out
xchg
icebp
and
adc
adc
std
jnp
pop
add
xlat
out
xchg
add
int
stc
xchg
dec
lods
xchg
add
iret
retf
xchg
add
xchg
add
mov
add
or
xor
test
jecxz
mov
add
aad
adc
repz
out
lahf
add
(bad)
mov
pop
add
mov
sub
mov
add
mov
add
out
mov
lahf
loop
data16
fild
icebp
push
imul
xor
in
jmp
pop
add
mov
ss
icebp
push
repz
mov
add
shl
mov
add
dec
cmc
pop
push
mov
add
add
fild
jno
retf
inc
mov
pop
add
fidiv
mov
add
(bad)
xor
mov
add
mov
add
call
add
jb
xor
add
std
cmp
mov
add
ror
jno
div
mov
cmp
adc
pop
add
shl
ror
mov
add
cld
push
std
push
mov
(bad)
sub
pop
add
aam
jno
mov
add
mov
add
lahf
cld
add
mov
inc
dec
mov
add
dec
neg
sbb
lods
aam
pop
add
jmp
lahf
shl
leave
int3
cmp
sbb
retf
add
mov
add
sar
mov
add
push
(bad)
in
adc
aam
stc
mov
std
push
mov
jecxz
out
mov
jecxz
sbb
lock
mov
fcmovu
mov
lahf
add
int
dec
mov
loop
cmp
ret
mov
mov
(bad)
jno
neg
and
jmp
lahf
add
rcl
mov
mov
in
mov
jmp
push
mov
leave
push
cmp
lds
int3
mov
lock
xchg
mov
sar
jno
sti
push
xor
hlt
xchg
ret
mov
ret
mov
int3
cmp
lahf
add
(bad)
cmp
icebp
in
xchg
int
lahf
add
mov
(bad)
and
pop
add
mov
pop
add
jns
jbe
mov
leave
neg
hlt
(bad)
and
pop
add
mov
out
retf
add
ja
inc
xchg
jmp
retf
or
lahf
add
mov
lahf
add
shr
mov
jmp
inc
loop
mov
aam
out
mov
jmp
add
shl
mov
rcr
mov
jmp
cld
fist
mov
jle
outs
movs
fild
icebp
mov
fild
jno
fisttp
fsub
jae
movs
fild
jno
call
add
(bad)
out
movs
lahf
add
out
out
lahf
add
cmps
fild
icebp
sub
lahf
jnp
pop
add
cmp
adc
cmps
fild
mov
repnz
repnz
pop
add
pop
clc
outs
nop
cmps
pop
add
out
sbb
aam
sbb
ja
add
test
in
xchg
test
fadd
inc
test
loope
or
aad
sub
xor
sub
ror
add
(bad)
push
sub
jecxz
retf
stos
fild
xor
fild
icebp
sbb
aam
stos
pop
add
int3
and
jno
ror
clc
stos
fild
xor
pop
add
inc
cld
dec
inc
stos
pop
add
(bad)
sub
(bad)
xchg
retf
add
call
add
scas
out
(bad)
dec
lods
lahf
add
fstp
lods
fild
xor
fild
jno
out
int3
pushf
lods
lahf
add
lods
pop
add
lock
lods
fild
mov
shr
pop
add
repnz
mov
mov
pop
add
scas
pop
add
sbb
lahf
add
scas
lahf
add
(bad)
inc
scas
lahf
add
scas
pop
add
cmp
cli
hlt
rcr
add
fprem
retf
lahf
add
rcr
and
rcr
add
div
rcr
add
pusha
out
mov
mov
push
push
rcr
add
rcr
add
jg
ja
rcr
mov
sti
das
mov
pop
add
into
sbb
pop
add
aaa
jmp
add
rcr
add
rcr
mov
fidiv
jae
fild
icebp
mov
cmps
aas
rcr
icebp
ret
ror
aad
add
add
repz
fild
icebp
ss
(bad)
jle
fild
mov
loop
sbb
pop
add
mov
adc
aam
add
fbstp
aam
add
push
in
fld
fild
mov
sti
std
add
pop
add
loope
jo
xlat
fild
jno
dec
xlat
pop
add
repz
xlat
pop
add
das
cld
daa
and
pop
add
(bad)
pop
add
lds
enter
(bad)
lahf
add
jmp
and
mov
(bad)
add
test
test
xor
mov
xor
add
and
push
aam
pop
add
and
inc
mov
imul
add
fcomp
test
icebp
out
inc
xchg
fistp
add
inc
loope
imul
add
inc
in
and
fcmovnu
add
fsubr
icebp
ins
enter
pop
add
fcmovu
add
aam
cmp
lahf
add
repnz
fstp
leave
mov
push
out
inc
fstp
out
push
fstp
jno
ret
sbb
fcomp
icebp
xchg
cli
sbb
aam
inc
fcomp
add
add
push
fcomp
icebp
push
retf
fistp
xor
lahf
add
xchg
sbb
pop
add
dec
cmc
nop
adc
mov
lahf
add
daa
loope
mov
aad
ror
icebp
pop
out
add
pop
add
rcr
jno
fidiv
icebp
push
fild
mov
retf
push
sub
fild
xor
icebp
xor
rcr
fwait
rcr
push
rcr
or
pop
add
xchg
fild
icebp
mov
add
xchg
lahf
add
xchg
into
pop
xchg
xchg
pop
add
xchg
fild
xor
xor
xor
fsubr
rcl
sub
sbb
(bad)
pop
nop
pop
add
dec
clc
repnz
nop
pop
add
cmp
loopne
xchg
pop
add
ss
into
mov
inc
retf
xchg
fild
xor
lahf
add
xchg
pop
add
mov
idiv
pop
clc
cmp
fild
xor
lahf
add
jmp
pop
add
mov
pop
add
xchg
pop
add
retf
xchg
fild
icebp
add
pop
add
cs
lods
xchg
fild
mov
ret
push
push
xchg
fild
mov
shl
adc
lahf
add
adc
adc
xchg
lahf
add
xchg
fild
mov
jmp
add
jno
push
sbb
shl
xor
lock
enter
xchg
fild
xor
enter
pop
add
push
stc
outs
rcr
pop
mov
cmp
mov
jno
cld
lea
cdq
lahf
add
cwde
pop
add
clc
out
ja
cwde
pop
add
cwde
pop
add
out
mov
cwde
pop
add
and
out
fild
jno
std
into
mov
fild
jno
retf
fwait
pop
add
jge
pop
sbb
(bad)
ins
out
pop
add
in
out
xchg
call
fs
sbb
iret
add
popf
fild
xor
jae
popf
lahf
add
sti
xor
lahf
add
jo
jecxz
popf
pop
add
retf
xlat
push
loop
lahf
add
in
jge
pushf
fild
icebp
int3
shl
pushf
pop
add
out
mov
jno
out
(bad)
fild
icebp
ror
movs
popf
lahf
pop
add
stos
retf
xor
add
arpl
jbe
lahf
pop
add
sahf
pop
add
leave
les
scas
vpcmpgtd
retf
and
mov
out
clc
sbb
lds
movs
(bad)
jle
fild
xor
lahf
add
fwait
(bad)
ffree
sbb
jno
sti
call
xor
sti
mov
xor
fsub
sbb
loopne
fild
icebp
cmp
dec
outs
enter
pop
add
sub
test
les
xor
fbstp
sbb
jno
out
pusha
sbb
icebp
mov
lahf
add
std
or
test
add
inc
shl
icebp
inc
cld
dec
push
test
add
fsub
enter
add
inc
jecxz
loopne
fild
xor
cwde
test
xor
loope
ins
test
add
test
add
xchg
add
xchg
add
into
fnstsw
add
ret
xor
sti
iret
jmp
pop
cmps
xchg
add
xchg
add
pop
add
fdiv
sbb
test
inc
(bad)
in
mov
xor
inc
mov
lds
mov
add
mov
add
sub
mov
mov
add
cmc
ret
fild
mov
inc
sub
pop
std
dec
les
(bad)
mov
(bad)
mov
mov
jno
into
idiv
mov
mov
retf
jbe
mov
add
mov
cld
arpl
rcr
sbb
fdivp
jmp
push
mov
call
add
mov
lahf
add
nop
fild
mov
fild
jno
iret
add
leave
mov
xor
lods
nop
pop
add
rcl
dec
nop
pop
add
nop
fild
icebp
adc
cmc
jmp
aam
cwde
mov
xchg
inc
jl
pop
add
mov
dec
xor
cmps
lds
rcl
ret
mov
jno
out
xchg
ins
xchg
lahf
add
aad
sbb
fdivp
sahf
jmp
retf
lods
xchg
fild
mov
ficomp
xchg
lahf
add
je
(bad)
adc
fstp
icebp
mov
or
out
ins
xchg
pop
add
jae
lods
aas
xchg
fild
icebp
mov
sbb
xchg
fild
mov
fsubr
mov
in
cdq
inc
xchg
fild
mov
fnstcw
lahf
add
dec
repz
repz
lahf
add
ficom
xchg
lahf
add
cmp
dec
fstp
iret
ret
pop
add
cwde
pop
add
cwde
lahf
add
outs
jecxz
pop
cwde
pop
add
out
cmp
lahf
add
(bad)
(bad)
fwait
pop
add
fwait
pop
add
fstp
je
pop
add
fwait
lahf
add
adc
cli
loop
lahf
add
call
ins
call
add
(bad)
movs
fistp
repz
mov
(bad)
loop
push
popf
pop
add
popf
lahf
add
repnz
cmps
pushf
pop
add
cmp
sbb
pop
add
pushf
fild
icebp
test
add
jno
(bad)
adc
ret
sti
and
lahf
fild
icebp
and
pop
add
retf
sahf
lahf
add
xlat
aad
sahf
pop
add
sahf
pop
add
sahf
pop
add
sti
daa
int3
sbb
lds
inc
shl
jo
lahf
add
sbb
jb
sbb
mov
ficomp
add
inc
out
xchg
and
stc
xor
sbb
mov
pop
repz
pop
add
mov
cld
sub
dec
shl
sbb
mov
jmp
add
ss
mov
xor
dec
sbb
(bad)
(bad)
lock
jecxz
test
jnp
test
jbe
test
add
test
add
test
add
retf
mov
xor
ffree
pop
test
add
xchg
icebp
ret
loopne
cmps
xchg
icebp
aam
shr
lahf
add
int3
adc
cmp
and
icebp
in
adc
mov
xlat
int
xchg
test
xchg
mov
icebp
push
enter
pop
add
mov
mov
aad
push
mov
and
fild
mov
aam
cwde
mov
xor
cld
in
inc
mov
jno
rcr
aas
mov
xor
leave
cli
in
fild
icebp
int
mov
jno
div
jb
fild
mov
loopne
pop
mov
xor
lahf
add
mov
add
pop
leave
adc
mov
add
mov
rcr
mov
add
fnstenv
(bad)
fild
xor
hlt
inc
cdq
(bad)
fild
icebp
sub
sbb
pop
add
lea
fisttp
add
sti
fistp
mov
add
icebp
(bad)
cmp
and
(bad)
pop
add
push
aad
xchg
(bad)
pop
add
sbb
sub
fild
jno
out
cmp
mov
xor
pop
inc
mov
rcl
pop
add
xchg
jecxz
xlat
mov
add
rcl
lahf
add
push
into
and
pop
add
jecxz
xor
cmc
mov
mov
add
mov
add
inc
clc
jge
mov
add
mov
add
mov
add
dec
retf
sub
jmp
or
in
cmp
outs
shl
mov
add
cmp
inc
xchg
mov
add
pop
aad
inc
mov
add
cmp
pop
add
mov
add
clc
sub
mov
add
fild
cmp
loop
cli
mov
add
iret
inc
xchg
int3
pop
mov
add
sub
stc
es
add
mov
add
out
loop
ja
fild
icebp
cmp
adc
mov
loop
mov
add
add
mov
pop
add
mov
add
mov
lahf
add
mov
vpunpcklqdq
aad
push
mov
clc
mov
jno
test
(bad)
push
mov
repz
mov
in
jmp
inc
jecxz
aas
mov
leave
fdivr
std
not
jo
mov
mov
(bad)
mov
mov
(bad)
loopne
mov
retf
mov
out
mov
xor
mov
mov
sar
pop
add
or
mov
hlt
popa
mov
test
mov
rcr
mov
enter
fild
xor
hlt
lahf
adc
mov
lahf
add
add
fdiv
test
push
jno
in
add
fcom
mov
repnz
mov
pop
add
aam
inc
mov
stc
aad
mov
repz
retf
add
sub
dec
mov
lahf
add
inc
mul
icebp
jecxz
jno
mov
fcomp
mov
jmp
add
movs
fild
icebp
retf
(bad)
cmps
fild
icebp
mov
fisttp
neg
pop
arpl
imul
cmps
lahf
add
cmps
fild
jno
iret
ror
jecxz
jb
fild
icebp
scas
into
arpl
cmps
fild
mov
(bad)
stos
fld
(bad)
or
or
mov
test
lock
sub
pop
add
(bad)
in
test
add
pop
stc
rcr
add
fsub
xor
pop
add
icebp
sub
stos
pop
add
lock
jno
rol
xor
sti
jo
xchg
pop
add
sub
pop
add
jae
scas
and
out
int3
nop
pop
add
imul
movs
nop
pop
add
add
mov
icebp
mov
add
xor
dec
xchg
xchg
pop
add
dec
fbld
xchg
pop
add
jge
adc
xchg
pop
add
xchg
lahf
add
enter
fild
mov
sar
add
rol
xchg
fild
mov
les
cld
xchg
pop
add
xor
xchg
xchg
xchg
lahf
add
push
into
inc
ds
lahf
add
push
test
xchg
lahf
add
adc
push
sbb
fild
jno
out
adc
out
xchg
lahf
add
add
inc
mov
xor
lods
inc
xchg
pop
add
add
jecxz
xchg
lahf
add
xchg
lahf
add
xchg
pop
add
scas
ror
xchg
pop
add
cld
pop
or
loop
in
lahf
add
mov
pop
add
mov
pop
add
into
rol
mov
fisub
rcr
mov
xor
ret
sbb
jno
icebp
(bad)
mov
dec
loopne
pop
add
fwait
pop
add
fwait
pop
add
aad
das
fwait
pop
add
int
neg
fstp
icebp
mov
call
in
lods
sub
clc
dec
call
hlt
in
mov
and
aaa
ja
fild
mov
enter
pop
add
pushf
fild
jno
aam
fwait
pushf
pop
add
shl
dec
pushf
lahf
add
mov
sbb
pushf
pop
add
inc
shr
lahf
lahf
add
iret
lds
jno
loop
jns
fild
jno
(bad)
mov
jno
(bad)
call
xor
fidiv
sahf
pop
add
and
and
fild
jno
ret
mov
mov
ret
mov
pop
add
sbb
add
sbb
add
sbb
icebp
scas
mul
js
pop
add
sti
loopne
sbb
rol
movs
mov
jmp
jle
lahf
add
xlat
aaa
xor
pop
add
sbb
mov
fild
icebp
mov
lahf
add
test
shl
sbb
jno
test
pop
add
test
xchg
add
fistp
test
add
test
jno
fmul
test
add
(bad)
jmp
jb
enter
add
xchg
add
mov
pop
add
mov
pop
add
xchg
add
hlt
sar
push
fistp
arpl
fidiv
xchg
add
leave
push
lds
jecxz
cwde
mov
dec
fs
add
sub
jnp
mov
jno
sti
sbb
mov
add
sahf
shl
mov
pop
add
fcomi
mov
mov
int
fmul
sti
cdq
mov
test
add
mov
add
aam
scas
aam
fild
xor
out
ret
pop
add
into
loop
mov
mov
fisttp
jno
loopne
aam
lahf
add
sub
(bad)
mov
lahf
add
std
int
(bad)
fild
xor
aam
sub
xbegin
jno
ret
mov
enter
add
fstp
xchg
or
pop
xlat
dec
ficom
(bad)
fild
jno
jmp
inc
(bad)
jno
(bad)
pop
add
adc
pop
add
retf
(bad)
mov
ss
inc
mov
add
cmp
repz
rcl
jmp
fcmovb
mov
xor
pop
add
mov
add
mov
lahf
add
mov
jne
mov
add
mov
add
push
ds
mov
add
retf
in
out
out
mov
add
mov
add
(bad)
retf
mov
add
mov
add
jmp
add
mov
add
mov
add
int
repnz
fild
mov
in
push
aad
lahf
add
(bad)
or
add
dec
fs
add
mov
add
jmp
add
scas
enter
pop
add
movs
(bad)
jbe
fild
xor
repnz
fild
mov
cmc
sahf
cld
mov
add
das
loope
call
test
pop
add
mov
add
push
into
fsubp
mov
add
retf
(bad)
mov
add
mov
add
fdiv
ss
add
stos
in
pop
clc
mov
clc
dec
stos
mov
fmul
jae
pop
add
jecxz
cmp
stc
push
mov
ret
mov
jmp
dec
mov
icebp
rcl
pop
add
in
repnz
int3
retf
lahf
add
add
cmps
dec
mov
inc
jno
in
jmp
out
or
jbe
inc
mov
repnz
mov
fstp
lahf
add
pop
enter
pop
add
push
retf
inc
inc
mov
loopne
or
jae
clc
sar
call
jecxz
push
mov
fucomi
add
lods
hlt
mov
shl
(bad)
lock
dec
mov
lock
mov
lock
mov
clc
lods
mov
cs
fsubr
pop
add
in
call
(bad)
mov
(bad)
scas
mov
pop
add
mov
in
sbb
and
pop
add
sub
pop
and
sbb
pop
add
pinsrw
fild
icebp
add
pop
add
mov
enter
add
jb
pushf
jno
lahf
add
adc
dec
push
mov
out
repnz
mov
icebp
fmul
(bad)
enter
pop
add
hlt
fmul
pop
add
movs
pop
add
pop
stc
or
das
ret
daa
pop
movs
pop
add
pop
sti
or
lahf
add
bswap
fcmovb
movs
pop
add
movs
shr
test
mov
pop
add
pop
call
add
aad
cmp
cmps
pop
add
and
jmp
lds
dec
cmps
pop
add
(bad)
loopne
or
fcmovb
frstor
repz
cmps
cmps
fild
icebp
mov
mul
pop
add
cmps
pop
add
sar
mov
call
add
mov
dec
addr16
cmc
or
test
fcom
test
add
cdq
iret
cmp
test
add
out
jae
fild
mov
rol
pop
add
out
int3
stos
pop
add
stos
lahf
add
out
stos
inc
stos
fild
mov
enter
pop
add
cmc
loope
stos
fild
mov
out
test
std
(bad)
lods
inc
stos
pop
add
not
rol
fild
jno
jmp
add
dec
loopne
test
hlt
stos
bound
(bad)
sbb
into
lahf
fisubr
mov
cmp
mov
lods
pop
add
jb
dec
adc
pop
(bad)
icebp
ins
fwait
scas
pop
add
jbe
movq
ror
scas
pop
add
pop
jmp
icebp
scas
pop
add
retf
scas
pop
add
scas
fild
mov
jmp
adc
sub
jae
rcr
mov
div
xchg
rcr
add
or
imul
int3
add
rcr
icebp
int
add
xor
pop
add
mov
ret
lahf
add
rcr
loope
rcr
xor
(bad)
sahf
rcr
mov
retf
movs
js
pop
add
shl
mov
ret
fucomp
rcr
add
out
hlt
adc
add
jp
cwde
pusha
rcr
fiadd
rcr
add
pop
fiadd
icebp
push
leave
out
mov
xchg
fcom
aad
add
hlt
pop
or
jmp
fild
mov
repz
jno
rcl
inc
aam
add
sub
pop
add
dec
repnz
lahf
add
sbb
pop
adc
(bad)
xchg
jge
pop
add
sub
sbb
icebp
pop
(bad)
(bad)
fild
icebp
call
lahf
add
(bad)
lahf
add
(bad)
out
sbb
fild
jno
mov
fstp
add
cmc
out
cmps
fstp
add
icebp
mov
xor
out
mov
jno
into
jnp
fcomp
add
inc
fidivr
sbb
repz
jnp
lahf
add
loopne
cmp
pop
add
out
inc
rcr
lahf
add
fistp
add
add
(bad)
jle
pop
add
fistp
icebp
and
int3
loop
lahf
add
sub
mov
xor
(bad)
popa
fcmovu
add
fsubr
ficomp
add
xor
adc
fstp
add
fstp
add
aad
xor
fild
jno
aam
push
fstp
add
fcmovb
shl
fcomp
mov
jmp
add
cli
in
fcomp
add
jno
les
fcomp
add
fst
(bad)
add
push
sar
jno
les
fistp
daa
aaa
fistp
icebp
js
dec
cmc
(bad)
add
(bad)
add
adc
and
pop
add
loopne
ficomp
pop
aad
pop
add
jge
jp
rcr
or
out
rcr
mov
(bad)
sub
rcr
jno
and
rcr
xor
fld
xchg
fadd
(bad)
rcr
mov
into
xchg
add
pop
add
sub
pop
add
xrelease
push
in
ret
pop
add
xchg
lds
ret
pop
add
mov
test
ret
icebp
shr
fisttp
mov
repz
ret
mov
fild
jno
int3
(bad)
lock
xor
fild
icebp
scas
rcl
pop
add
inc
fild
lds
icebp
scas
(bad)
jle
les
add
movs
shl
les
call
jno
fsubr
xor
cmc
repnz
fild
icebp
int
lahf
xchg
(bad)
pop
add
(bad)
pop
add
aam
cmp
fild
xor
jmp
and
adc
add
or
lahf
add
(bad)
pop
add
leave
pop
add
int
mov
pop
add
leave
fild
xor
vunpcklpd
fild
mov
int
lock
stos
lds
(bad)
rcr
enter
mov
push
or
fild
jno
jmp
retf
retf
pop
add
outs
retf
retf
pop
add
fldenv
popa
retf
fild
icebp
dec
call
add
loope
cld
retf
icebp
sub
lahf
add
iret
(bad)
(bad)
retf
mov
stc
into
cmp
jge
dec
(bad)
int
add
int
add
pushf
ror
int
add
int
add
fcomip
in
pop
add
pop
retf
mov
int3
pop
add
icebp
cmp
add
repnz
icebp
clc
ret
into
ror
fild
xor
in
push
mov
pop
add
iret
pop
add
jle
and
iret
pop
add
fnstcw
into
lahf
add
into
pop
add
mul
outs
into
pop
add
movs
(bad)
sub
into
fild
icebp
mov
iret
out
icebp
fild
mov
aad
mov
pop
add
dec
out
push
icebp
fild
jno
sar
xor
lahf
add
les
lock
add
sbb
or
jno
fstp
lock
add
ins
loopne
push
lock
add
loope
xor
jno
fild
mov
fiadd
mov
(bad)
mov
xor
loop
xchg
xchg
fild
jno
hlt
bnd
pop
add
clc
imul
in
fcom
int
xchg
nop
lahf
add
retf
nop
pop
add
nop
fild
jno
rol
fild
mov
in
cdq
xchg
pop
add
shr
fs
fild
jno
in
inc
xchg
pop
add
int3
in
sbb
xchg
pop
add
(bad)
mov
fild
xor
clc
stos
lods
xchg
fild
icebp
(bad)
aam
jg
fild
mov
leave
dec
sub
(bad)
mov
jno
icebp
jle
xchg
fild
jno
hlt
xchg
push
xchg
lahf
add
icebp
xlat
jecxz
xchg
fild
jno
shl
ficom
sar
xchg
pop
add
ror
inc
xchg
pop
add
sti
mov
xor
in
and
xchg
fild
xor
fdivr
scas
xchg
fild
jno
in
jge
lahf
add
jne
in
add
fidivr
pop
add
in
retf
not
rcr
aas
inc
cdq
pop
add
jecxz
xor
pop
add
cs
push
loope
pop
add
cwde
lahf
add
clc
ds
cwde
lahf
add
jmp
cmp
loope
cwde
fwait
pop
add
fwait
std
scas
arpl
lds
call
or
in
into
popf
pop
add
inc
mov
jno
rol
daa
popf
fild
jno
jecxz
hlt
pushf
lahf
add
out
cmp
out
jns
pop
add
fadd
mov
fimul
stc
lahf
pop
add
fist
jno
repnz
jne
pop
add
lahf
lahf
add
jmp
pop
add
sahf
pop
add
ror
ins
shl
sahf
pop
add
mov
iret
aam
lahf
add
in
inc
add
ins
pop
sbb
sbb
in
rol
fxsave
in
test
pop
add
outs
call
add
repz
sbb
xor
(bad)
xor
sub
inc
inc
sbb
mov
cmc
sub
sbb
jno
call
add
pop
loopne
mov
or
mov
xor
in
ds
pop
add
test
mov
(bad)
ror
data16
fild
xor
lahf
add
imul
mov
mov
pop
add
nop
(bad)
aaa
push
mov
pop
add
fadd
mov
cld
lock
fwait
inc
xchg
add
jmp
sub
pop
add
loope
fiadd
shl
xchg
add
ret
xchg
sbb
icebp
and
push
(bad)
into
add
ffreep
fcomp
pop
add
fcomp
fmul
(bad)
in
mov
mov
jmp
add
inc
out
inc
xor
out
mov
mov
add
loopne
xchg
mov
mov
jmp
add
mov
xor
pop
add
mov
icebp
push
leave
inc
popa
mov
mov
mov
add
std
rol
outs
cli
sub
std
cmc
popf
pusha
lea
add
in
mov
icebp
inc
fidiv
mov
shl
xchg
mov
mov
cmc
sub
mov
add
aad
cwde
and
stos
cmc
(bad)
fild
xor
xor
(bad)
lahf
add
cmp
pop
add
xchg
lds
mov
shr
mov
jno
idiv
mov
add
mov
add
mov
mov
mov
add
jno
mov
mov
int3
push
arpl
call
sbb
fcomp
mov
iret
ja
mov
add
mov
push
inc
mov
add
xchg
fcmovbe
push
mov
add
cli
sub
mov
add
push
shl
mov
add
push
test
add
xsaves
mov
add
mov
fild
xor
retf
mov
add
jp
out
mov
add
cli
popf
and
data16
icebp
mov
add
shl
mov
add
cli
(bad)
and
pop
add
fstp
mov
add
ror
jge
out
cdq
mov
add
daa
int3
mov
pop
add
enter
fild
mov
xlat
mov
mov
add
mov
add
pop
fdivr
pusha
mov
add
or
push
jno
(bad)
add
mov
add
movs
int3
jb
mov
add
jbe
outs
push
mov
add
mov
add
sahf
(bad)
mov
xor
out
cmp
mov
mov
in
jne
mov
fisubr
mov
int
test
lds
mov
out
sub
mov
in
int3
xchg
mov
out
push
mov
aad
das
mov
hlt
fcmove
mov
in
cdq
mov
(bad)
fdivr
pop
add
mov
int
idiv
shl
mov
pop
loope
dec
mov
les
icebp
jae
add
mov
jecxz
xchg
mov
ficom
jno
in
push
mov
ret
mov
jmp
xchg
mov
sar
mov
std
or
rol
xor
pop
add
add
sahf
ins
mov
int3
repnz
loopne
shl
ror
xor
add
mov
call
add
mov
loopne
jne
pop
add
fisub
mov
xlat
shl
rcr
(bad)
dec
mov
(bad)
cld
pop
mov
fstp
xor
loope
xchg
mov
out
ins
mov
std
popa
add
std
jb
movs
pop
add
movs
pop
add
sti
add
add
movs
pop
add
jecxz
jmp
inc
(bad)
movs
pop
add
movs
lahf
add
movs
pop
add
cmps
pop
add
push
repz
cmps
lahf
add
xor
or
lahf
add
pushf
repz
cmps
fild
mov
std
int
cmps
pop
add
inc
into
xor
mov
or
mov
fisubr
cli
(bad)
jne
test
call
icebp
nop
in
js
pop
add
in
or
lds
test
add
ffree
lea
cmc
aam
test
add
fild
mov
jmp
int3
stos
lahf
add
shl
stos
pop
add
stos
pop
add
test
jno
stos
fild
icebp
int3
rol
pop
add
pop
retf
stos
pop
add
pop
sti
pop
jae
lahf
add
fdivr
sbb
mov
xor
jp
lods
pop
add
pop
iret
or
lahf
add
lods
fild
mov
out
out
lahf
add
inc
std
sbb
fldcw
jo
pop
add
iret
or
mov
in
scas
shr
ficom
mov
cmp
jno
scas
pop
add
test
push
or
inc
fisttp
imul
loopne
xchg
scas
pop
add
scas
lahf
add
ja
call
lahf
add
xchg
inc
xor
call
add
fst
rcr
icebp
xchg
ret
outs
and
pop
add
jb
std
icebp
rcr
jno
int
test
jne
(bad)
jns
pop
add
(bad)
int3
push
xor
lahf
add
rcr
add
rcr
jno
int
sub
lahf
add
ror
rcr
jno
call
add
rcr
xor
rcl
rcr
add
cld
out
clc
aad
add
push
int
scas
aad
add
aad
add
aad
add
mov
fmul
aam
add
jmp
lods
aam
add
(bad)
sbb
pop
add
aam
add
jmp
add
xlat
pop
add
jecxz
mov
xlat
fild
jno
shl
(bad)
pop
add
(bad)
fild
xor
int3
xchg
and
lahf
add
(bad)
add
repnz
test
xor
mov
fild
mov
ror
fstp
add
stos
jmp
(bad)
add
fcomp
add
fcomp
pushf
adc
lahf
add
ja
push
leave
fistp
fistp
jno
(bad)
imul
add
in
std
jne
fcmovnu
add
ficomp
add
cmp
jno
ficomp
jno
out
sbb
pop
add
fcmovu
add
jnp
sbb
fstp
icebp
jp
ja
fstp
add
out
int3
jnp
fstp
xor
add
popf
ret
add
(bad)
add
mov
pop
add
fcomp
mov
ret
xor
fcomp
add
xlat
fwait
loopne
pop
add
out
mov
pop
add
mov
fnstsw
pop
add
xlat
leave
jp
fistp
icebp
mov
fild
mov
fidivr
mov
nop
out
nop
jle
pop
add
loope
fld
ficomp
xchg
rol
add
leave
mov
xor
pop
add
shl
or
lahf
add
ror
in
rcr
aaa
jmp
fwait
rcr
icebp
lahf
in
pop
rcr
xor
inc
cmp
sbb
lahf
add
loop
push
jno
cmc
pop
pop
ret
pop
add
ret
fild
xor
pop
add
and
pop
fwait
ret
xor
leave
jle
pop
add
ret
jno
fisttp
test
add
repnz
lds
mov
fild
cmps
shl
xor
mov
fild
jno
int
test
lahf
add
outs
fbld
xor
lahf
add
in
test
out
mov
pop
add
(bad)
jmp
(bad)
lahf
add
(bad)
pop
add
mov
lahf
add
(bad)
pop
add
rcl
push
(bad)
fild
icebp
xor
inc
sbb
lahf
add
xor
mov
xor
lahf
add
(bad)
and
pop
add
leave
lahf
add
cmc
rcl
fild
icebp
enter
enter
xchg
mov
icebp
imul
add
mov
xor
retf
lahf
add
retf
pop
add
in
jg
pop
add
retf
pop
add
retf
jno
fidiv
mov
lds
retf
jno
fisub
jno
ror
int
add
in
inc
(bad)
int
add
(bad)
into
push
int
add
add
pop
add
int3
lahf
add
(bad)
cld
call
add
lahf
add
std
sar
int3
pop
add
loope
repz
pop
add
iret
pop
add
mov
pop
add
(bad)
mov
jno
leave
hlt
out
pop
add
into
pop
add
out
pop
jns
fild
mov
(bad)
popf
adc
pop
add
icebp
pop
add
xchg
fisttp
icebp
pop
add
leave
ret
icebp
lahf
add
jmp
fstp
icebp
fild
icebp
dec
in
fcomip
lahf
add
sub
jno
lock
icebp
jg
inc
add
adc
stos
fcomip
pop
add
(bad)
fild
icebp
test
lods
imul
add
out
push
and
pop
add
and
cwde
out
lahf
add
int3
leave
jne
repnz
icebp
push
lahf
add
repnz
add
repz
cmc
lahf
add
cmc
fild
mov
rol
pop
add
inc
lds
jno
enter
pop
add
in
jmp
hlt
fild
xor
in
dec
hlt
fild
xor
cmc
xchg
and
pop
add
push
call
add
neg
jno
cmc
sti
pop
neg
add
mov
add
neg
add
add
sub
neg
dec
xchg
fild
jno
fiadd
cmp
jmp
fild
xor
xchg
stc
pop
add
std
add
clc
pop
add
(bad)
xlat
pop
inc
clc
lahf
add
jge
push
cmp
pop
add
lock
sti
pop
add
add
imul
imul
mov
push
push
sti
lahf
add
test
rcl
les
(bad)
xlat
mov
mov
(bad)
sub
pop
add
loop
xlat
std
pop
add
lock
std
pop
add
std
lahf
add
out
sbb
fild
mov
fild
cld
pop
add
cld
fild
xor
shl
(bad)
adc
cld
fild
jno
(bad)
arpl
call
add
call
add
(bad)
fild
mov
(bad)
cld
xor
fild
xor
add
(bad)
lahf
add
dec
hlt
and
fild
xor
retf
mov
xor
jb
loope
add
xlat
not
pop
add
pop
(bad)
addr16
lahf
add
stc
add
loopne
add
ffreep
test
push
(bad)
mov
loopne
add
loopne
add
jecxz
add
(bad)
ret
pop
add
jmp
jne
push
cmp
lahf
add
not
add
loop
add
outs
cld
popf
mov
pop
add
es
cli
pop
loop
add
sbb
ror
test
cld
ret
in
add
fdiv
in
add
mov
cmp
lahf
add
pop
(bad)
xchg
pop
in
add
jns
ss
fild
xor
in
lods
in
add
in
add
nop
aad
push
in
add
xchg
aad
enter
mov
fnstenv
(bad)
aad
pop
out
add
out
add
cmp
icebp
out
add
sub
mov
mov
fcmovnbe
pop
out
add
sbb
popa
sub
lahf
add
jmp
out
fsubr
daa
(bad)
mov
mov
in
fld
jmp
fmul
(bad)
call
fdiv
mov
std
lds
lahf
add
call
out
jmp
aam
sbb
xor
jbe
lahf
add
dec
fimul
jmp
add
jmp
add
lahf
add
dec
cli
jge
in
lahf
add
mov
mov
mov
fsubr
jno
lahf
add
out
repnz
pop
add
sub
hlt
clc
in
pop
add
in
lahf
add
std
hlt
imul
add
(bad)
add
in
pop
add
add
sbb
out
lahf
add
mov
fild
mov
not
jno
loope
or
fild
xor
pop
add
add
add
(bad)
mov
jno
test
call
xor
rcr
movs
adc
add
(bad)
mov
icebp
jg
mov
jmp
add
scas
ret
adc
mov
lahf
add
jmp
mov
adc
icebp
scas
enter
lahf
add
(bad)
enter
add
out
add
fild
xor
add
inc
and
fild
jno
in
push
adc
icebp
mov
aas
daa
adc
add
adc
aad
stos
adc
iret
push
imul
pop
add
fs
or
adc
add
shl
mov
and
movs
pop
adc
add
adc
add
idiv
call
in
mov
xor
loope
jg
lahf
add
pop
fild
jno
out
fcom
pop
add
push
fild
icebp
sbb
lds
add
inc
in
adc
pop
add
sbb
add
adc
clc
jnp
lahf
add
sbb
add
or
pop
add
mov
fild
mov
out
test
icebp
dec
std
movs
ficomp
pop
add
rol
sbb
add
xchg
rcl
ret
aad
sbb
pop
add
inc
std
aad
sbb
add
aaa
std
adc
jno
(bad)
sub
lahf
add
sbb
icebp
jne
jmp
ret
mov
jno
cmc
mov
fild
icebp
cmp
jne
sbb
add
sbb
add
xor
repz
add
push
call
add
out
leave
pop
lahf
add
inc
(bad)
jmp
icebp
or
test
mov
pop
lahf
add
push
pop
add
cwde
lock
daa
loope
jne
pop
add
add
mov
test
fisub
fild
xor
not
xor
sar
popa
ror
add
add
cmp
ret
or
lahf
add
add
inc
movs
rcr
pop
add
icebp
dec
aad
or
lahf
add
add
jns
add
add
add
call
push
icebp
cmp
aad
add
bnd
mov
into
push
add
add
add
add
into
pop
jl
fild
xor
fild
mov
fisub
xor
stc
pop
stos
pop
pop
add
stc
scas
push
pop
fild
mov
fild
push
pop
add
faddp
xchg
push
pop
add
cmps
aam
fs
pop
add
fldcw
adc
fild
mov
push
or
xor
jno
in
popa
or
add
test
pop
add
not
scas
jmp
mov
lahf
add
retf
or
lahf
xor
pop
add
movs
ret
jmp
mov
int
mov
sub
cdq
inc
or
jno
dec
push
leave
pusha
test
stc
xchg
mov
int3
ret
das
push
or
mov
jecxz
cmp
pop
add
ins
hlt
sub
mov
fild
icebp
ror
lahf
jne
lahf
add
aaa
repnz
jno
les
icebp
cmp
jae
or
add
loopne
imul
add
lods
retf
sub
or
add
clc
loope
ror
pop
add
nop
xor
and
pandn
icebp
sbb
repz
fild
mov
retf
fwait
jmp
pop
add
pop
lds
adc
cmp
pop
add
loop
int3
xor
xor
mov
xor
aam
xor
mov
(bad)
fwait
jmp
pop
add
jmp
pop
add
xor
add
in
scas
sbb
pop
add
outs
stc
in
xor
add
xor
loope
xor
add
(bad)
in
pop
shl
fild
jno
out
mov
fild
xor
dec
xor
add
xor
add
xor
jmp
sbb
push
dec
xor
ret
xor
enter
fild
xor
add
retf
dec
push
xor
add
in
sbb
add
retf
dec
clc
aaa
pop
add
lock
test
movs
(bad)
jg
aaa
fild
xor
jns
aaa
pop
add
fnstenv
pop
add
(bad)
std
xchg
ss
add
hlt
int
pop
ss
add
or
jbe
fild
mov
lock
cmp
add
cmp
jno
ret
cmp
shr
cmp
add
(bad)
mov
cmp
icebp
xchg
shl
xor
fcom
or
pop
add
ret
fdivr
pop
add
lahf
cli
shr
mov
lahf
add
cmp
add
cmp
add
cmp
mov
fdivr
push
cmp
add
int
mov
xor
idiv
in
mov
mov
out
cmp
(bad)
and
cmp
fild
lahf
add
outs
out
test
sbb
sbb
pop
add
jmp
rol
cmp
add
aas
pop
add
loope
cdq
aas
pop
add
aas
fild
mov
clc
test
mov
int3
psadbw
pop
add
dec
out
(bad)
sub
fild
icebp
and
out
and
xor
fild
jno
jmp
jmp
jno
iret
jae
and
add
and
add
shl
pop
and
add
xor
retf
pop
add
rol
jmp
pop
add
and
add
fst
sub
pop
add
fcmovbe
pop
and
add
and
add
jecxz
call
jno
ficom
and
icebp
(bad)
jnp
and
add
sar
pop
add
ficomp
fild
xor
ins
and
icebp
adc
lahf
add
inc
ror
sti
and
add
mov
rcl
(bad)
lock
mov
sti
fisub
xor
mov
icebp
cmp
fidivr
(bad)
xlat
jmp
ret
retf
pop
add
es
add
enter
es
add
push
sar
dec
fild
icebp
or
mov
xor
pop
add
imul
mov
pop
add
icebp
cmp
jno
ret
sub
je
sub
adc
in
jns
fild
xor
lahf
add
dec
test
sub
mov
(bad)
mov
jno
jecxz
push
sub
add
sub
add
shl
(bad)
fild
icebp
icebp
int
xchg
sub
add
sub
add
ret
lods
pop
sub
add
cmps
icebp
pop
fild
loope
sub
test
xor
xchg
xor
xor
(bad)
add
out
shr
mov
add
(bad)
dec
pop
sub
add
(bad)
jmp
sub
add
das
lahf
add
ret
das
lahf
add
(bad)
inc
das
pop
add
std
scas
xor
fild
jno
fbstp
xor
scas
cs
add
jmp
repz
sub
adc
cmc
(bad)
push
pop
add
push
pop
add
push
shl
jge
fild
icebp
sti
aam
or
add
js
or
push
lahf
add
pusha
lds
xor
in
push
push
fild
xor
mov
push
lahf
add
xor
lahf
add
xor
pushf
adc
xor
fstp
push
pop
add
dec
inc
xor
add
fcom
mov
jno
loope
xchg
push
pop
add
push
lahf
add
rcr
popa
or
add
rcr
push
lahf
add
out
xchg
add
ffree
sub
pop
add
push
pop
add
out
pop
retf
add
scas
mov
push
pop
add
out
add
lahf
add
adc
mov
icebp
sbb
cwde
mov
add
retf
push
pop
add
push
fist
push
pop
add
retf
int
fild
xor
pop
add
out
jns
lahf
add
pop
loope
es
pop
add
stos
enter
pop
add
(bad)
pop
pop
pop
add
dec
in
and
add
pop
pop
add
not
pop
pop
add
(bad)
pop
add
ins
std
fidivr
pop
pop
add
and
out
fild
jno
jmp
test
add
pop
fild
jno
into
and
pop
pop
add
imul
pushf
mov
pop
add
pop
fild
jno
loopne
or
pop
add
dec
(bad)
in
pop
lahf
add
jp
mov
add
jae
movs
jge
lahf
add
dec
cld
mov
pop
fild
jno
imul
ficomp
jno
shr
fild
jno
int3
adc
fild
mov
in
ds
pop
add
cmp
ss
pop
pop
add
jecxz
mov
xor
dec
pop
pop
fild
xor
fmul
sub
add
cdq
int
(bad)
pop
pop
add
pushf
cli
or
sbb
cmp
(bad)
pop
pop
add
inc
lahf
add
retf
mov
jno
(bad)
iret
push
lahf
add
shl
add
fild
jno
mov
inc
pop
add
adc
and
sti
aad
dec
inc
fild
mov
rol
xor
add
paddd
lds
add
icebp
hlt
add
cld
mov
inc
pop
add
inc
pop
add
inc
pop
add
cmp
add
jle
jb
inc
lahf
add
in
std
inc
pop
add
in
stos
inc
lahf
add
or
fs
pop
add
xor
scas
or
lahf
add
cmps
fisttp
fild
mov
cmc
loop
inc
fild
jno
std
cmp
pop
add
fdivr
adc
jno
ret
inc
fild
mov
jecxz
inc
fild
icebp
inc
shl
pop
add
add
out
inc
pop
add
mov
(bad)
stos
inc
pop
add
inc
fild
jno
loop
or
add
dec
fild
xor
or
inc
inc
dec
lahf
add
lock
sub
add
movs
int3
add
dec
pop
add
fild
xor
add
jmp
xor
xchg
mov
test
fild
xor
add
jecxz
jmp
sub
icebp
mov
lahf
add
xor
adc
add
xor
lahf
add
repnz
test
lahf
add
dec
fild
mov
loopne
add
pop
add
mov
in
call
movs
xlat
or
shl
js
lahf
add
dec
fild
xor
pop
add
pusha
lds
dec
lahf
add
inc
in
sti
or
add
dec
pop
add
xchg
in
lea
add
xchg
push
inc
dec
pop
add
dec
fild
jno
rcr
div
add
fidivr
mov
cmc
out
inc
jno
add
fsubp
push
jno
add
jo
add
inc
fndisi(8087
test
add
call
pop
add
retf
mov
mov
cmc
das
(bad)
jae
add
int3
test
jae
add
test
sbb
fild
xor
fild
xor
rol
jb
add
adc
imul
sub
jb
add
aaa
lds
xor
fadd
mov
fild
icebp
stos
int
push
jne
add
out
pop
jne
add
fisubr
icebp
pop
sti
lods
mov
adc
clc
pop
je
add
je
add
push
into
mov
ja
add
dec
popf
lahf
ja
add
pop
loop
pop
ja
add
sar
sbb
add
jbe
add
movs
rol
jbe
add
jbe
add
jbe
add
sub
cdq
sar
add
in
ficomp
retf
push
into
call
add
js
add
sar
xor
leave
dec
js
add
push
fcmovb
sub
add
loop
sar
add
jnp
add
mov
sub
xor
add
jp
add
jp
add
jmp
jae
pop
add
jp
add
daa
xlat
mov
pop
add
jge
add
loopne
outs
jge
add
jecxz
rol
pop
shl
xor
cmp
jo
xchg
pop
add
jl
add
dec
stc
fcmovnu
jg
add
jno
ja
jg
add
aad
gs
add
jg
add
jle
add
ret
jle
add
gs
push
jle
add
jle
add
sti
call
popa
fild
xor
fild
xor
fbld
popa
pop
add
mov
fild
icebp
mov
lahf
add
pusha
fild
jno
clc
(bad)
jne
fild
xor
idiv
pusha
lahf
add
jmp
cli
arpl
loopne
arpl
add
arpl
add
scas
loop
xor
in
pop
iret
bound
icebp
jae
test
stc
jo
bound
jno
ror
add
add
popa
fnstenv
mov
out
data16
add
gs
add
fild
xor
add
fild
jno
rol
fs
add
add
pop
add
popa
loope
xchg
addr16
add
std
pop
pop
fild
xor
sbb
addr16
add
outs
ret
(bad)
xor
into
neg
call
add
fdiv
data16
add
pop
ficom
imul
nop
imul
das
ins
imul
push
imul
aam
push
in
test
add
lods
fist
xor
(bad)
pop
push
into
xchg
shr
add
inc
icebp
add
outs
imul
mov
aad
push
imul
in
push
add
out
sahf
pushf
push
add
push
leave
je
push
add
xlat
pop
sbb
add
arpl
dec
(bad)
ins
pop
add
ins
lahf
add
sbb
pop
add
ins
lahf
add
ins
pop
add
jmp
add
shl
push
ins
pop
add
int
out
sub
jle
(bad)
out
outs
pop
add
outs
pop
add
out
call
add
stc
in
outs
lahf
add
push
sti
call
icebp
mov
mov
shr
and
add
jno
lds
outs
fild
mov
int
std
xchg
fiadd
mov
int
xchg
leave
rcl
sahf
add
xchg
sahf
add
nop
fiadd
icebp
dec
jmp
lods
nop
push
add
nop
sahf
add
xchg
(bad)
jno
cld
mov
mov
imul
test
push
add
loopne
aas
inc
xchg
push
add
xchg
push
add
sbb
xchg
jmp
lahf
popf
xchg
fiadd
icebp
in
icebp
jg
xchg
pop
add
sub
cmp
xchg
pop
add
jl
cmp
xchg
pop
add
cmps
std
imul
fisubr
ja
sahf
add
push
out
sbb
push
add
xchg
fiadd
xor
in
movs
xchg
push
add
mov
fiadd
icebp
dec
int
sub
push
xor
sub
sbb
mov
pop
add
(bad)
in
sbb
xchg
push
add
xchg
fiadd
mov
loope
cmps
xchg
sahf
add
leave
mov
mov
call
add
cdq
pop
add
cdq
fiadd
jno
in
mov
xor
cld
fadd
cdq
pop
add
mov
(bad)
lds
out
jecxz
cwde
push
add
cwde
push
add
cwde
sahf
add
pusha
loope
int3
fwait
sahf
add
push
cld
loope
fwait
sahf
add
fiadd
icebp
pop
iret
xchg
imul
add
call
inc
call
xor
retf
popf
fiadd
xor
pop
add
fadd
popf
fiadd
mov
jecxz
es
push
add
iret
pusha
clc
pushf
fiadd
icebp
imul
arpl
pushf
shl
jnp
pop
add
aaa
cld
in
xor
pop
add
cmp
mov
lahf
push
add
shl
movs
lahf
fiadd
mov
cld
and
icebp
icebp
in
or
add
push
add
sahf
sahf
add
out
xor
jno
jmp
sub
shl
out
fiadd
xor
fdiv
mov
gs
or
cli
sbb
sbb
icebp
cld
in
mov
pop
add
sbb
lds
retf
sbb
xor
lds
pop
sbb
xor
int3
pusha
and
ret
(bad)
ret
add
mov
aam
sbb
xor
jecxz
outs
sbb
xor
out
jb
out
fadd
in
xchg
test
add
test
xor
push
add
test
push
mov
sub
aaa
inc
test
mov
jmp
add
clc
sbb
xchg
mov
fidivr
mov
int
jae
push
add
xchg
(bad)
and
xchg
add
icebp
in
xchg
add
xchg
add
xchg
add
mov
push
xchg
jno
loope
jecxz
sahf
add
ins
ror
mov
add
clc
icebp
ja
mov
add
mov
xor
push
ror
fsub
mov
add
mov
add
fistp
mov
jno
into
xor
mov
mov
jno
ret
mov
icebp
test
pop
add
xlat
les
jno
(bad)
mov
icebp
retf
ja
push
add
mov
add
pop
fdiv
mov
ret
ins
test
fiadd
xor
mov
jno
repnz
sbb
out
ror
pop
mov
inc
push
mov
add
in
push
mov
mov
ret
mov
jno
fst
mov
in
(bad)
(bad)
sahf
add
fldz
fisttp
(bad)
push
add
loope
test
fwait
mov
iret
mov
mov
fsub
xor
into
nop
les
fmulp
mov
push
add
fwait
shl
mov
add
mov
add
mov
add
jmp
mov
stc
iret
pop
pop
mov
add
fabs
dec
push
mov
add
(bad)
mov
add
mov
add
mov
add
int3
retf
add
(bad)
fdivr
sti
mov
add
ror
jmp
mov
add
div
mov
add
mov
add
stc
(bad)
jo
mov
add
mov
add
push
jle
mov
add
jecxz
aaa
mov
add
nop
fild
jno
fild
xor
(bad)
mov
jno
ror
mov
(bad)
inc
xchg
pop
add
xchg
pop
add
jns
lods
aad
pop
add
out
test
nop
fild
icebp
int3
into
sub
pop
add
nop
pop
add
shl
and
repz
xchg
(bad)
(bad)
push
xchg
pop
add
(bad)
ror
sub
pop
add
jbe
mov
fild
jno
enter
lahf
add
xchg
lahf
add
frstor
aas
xchg
pop
add
pop
retf
push
cli
xchg
pop
add
or
inc
test
pop
add
out
inc
xchg
pop
add
ins
(bad)
fcomp
xchg
fild
jno
fstp
mov
fdivr
lods
xchg
pop
add
sbb
xchg
pusha
xchg
pop
add
xchg
fild
jno
shl
xor
out
mov
pop
add
ror
xchg
pop
add
and
sbb
jno
cmc
xor
mov
jmp
add
xchg
pop
add
into
(bad)
(bad)
sub
test
xchg
cdq
pop
add
cdq
fild
icebp
jbe
cmp
int3
and
cwde
fild
icebp
pop
loope
mov
fild
mov
jmp
dec
(bad)
sub
cwde
fild
jno
dec
fild
xor
sar
fild
mov
int
inc
fwait
pop
add
popa
loopne
cmp
std
enter
add
in
sar
cdq
call
inc
call
cmp
sar
lock
pop
add
pop
sti
xchg
pushf
popf
pop
add
popf
pop
add
enter
fild
xor
fild
mov
shl
pushf
fild
xor
lock
pop
add
(bad)
push
pushf
pop
add
lahf
pop
add
clc
int3
and
lahf
pop
add
lahf
lahf
add
data16
sbb
mov
int3
cmps
aam
pop
add
cli
rcl
call
arpl
fild
mov
in
xor
enter
pop
add
(bad)
in
mov
pop
add
(bad)
rcl
fild
xor
jmp
sub
sti
jp
sbb
jno
(bad)
dec
scas
sbb
mov
retf
arpl
fild
xor
pop
add
stc
push
lock
icebp
mul
push
lods
sbb
mov
loop
jo
pop
add
and
cmc
or
ds
test
fild
jno
test
xor
(bad)
cmp
cmc
pop
fadd
fdiv
movs
test
add
test
icebp
(bad)
int3
fmul
test
icebp
fucomip
xor
test
add
test
mov
add
out
sub
xchg
call
push
fst
push
ret
xchg
add
xchg
neg
push
xchg
mov
lds
push
jmp
jno
leave
sub
mov
add
mov
add
ret
jp
pop
add
pop
(bad)
ins
and
repnz
aad
pop
add
idiv
mov
mov
pop
add
arpl
mov
mov
add
clc
xchg
mov
add
jmp
inc
mov
adc
push
inc
mov
mov
mov
add
pop
jmp
in
mov
add
mov
add
cmp
mov
mov
add
fbld
mov
xor
push
ror
ret
(bad)
fild
icebp
pop
(bad)
adc
fild
mov
sti
and
jno
out
mov
mov
add
mov
lahf
add
in
sub
lahf
add
mov
cdq
ror
out
mov
ret
dec
(bad)
lahf
add
xchg
call
add
out
retf
pop
ror
adc
ins
stc
and
mov
call
mov
add
stos
cmc
into
(bad)
mov
add
mov
add
push
in
dec
mov
add
jmp
fild
xor
(bad)
jle
mov
add
ss
mov
xor
pop
add
ret
mov
add
mov
add
mov
xchg
pushf
mov
add
aam
pusha
mov
add
mov
cmp
jns
and
lahf
add
shl
ret
mov
(bad)
jecxz
mov
add
arpl
mov
mov
add
rol
sub
test
mov
cli
inc
mov
add
(bad)
jmp
das
mov
add
cld
in
std
mov
add
aad
mov
icebp
pop
shl
mov
add
outs
ret
sbb
mov
add
rcl
(bad)
into
inc
mov
fild
jno
int
inc
mov
add
jbe
popa
sub
pop
add
mov
add
mov
add
jmp
icebp
mov
cmp
iret
repz
mov
fsubrp
xchg
mov
shl
dec
mov
inc
xor
sahf
loope
sar
int3
jmp
icebp
dec
leave
jmp
aam
cmp
in
out
lahf
add
sub
arpl
in
rcr
add
lds
ss
(bad)
(bad)
in
mov
fbld
icebp
or
adc
fild
jno
rcl
pop
add
mov
int
mov
sub
cwde
jne
lahf
add
pop
loope
and
rcl
ins
into
fld
sub
dec
mov
sti
lock
(bad)
fild
icebp
fsub
fnstcw
mov
in
inc
mov
int3
ret
movsx
add
loope
repnz
ret
mov
out
jne
mov
aad
das
mov
clc
pop
shl
repnz
jno
sar
jge
pop
add
add
enter
add
into
fidiv
mov
loop
mov
pop
add
mov
lds
xor
pop
add
mov
fild
jno
jmp
outs
mov
cld
mov
clc
push
lea
rol
pop
add
sbb
pop
sbb
test
(bad)
shl
movs
pop
add
cld
push
pop
movs
pop
add
movs
fild
icebp
or
xchg
out
movs
fild
mov
jmp
xchg
movs
fild
jno
fsubrp
jg
pop
add
rcl
mov
pop
add
cmps
lahf
add
cmps
lahf
add
or
push
cmps
fild
mov
loopne
das
cmps
fild
mov
fcom
hlt
cmps
fild
jno
imul
cmps
pop
add
sbb
xor
pop
add
fld
pop
cmps
pop
add
xor
xor
test
into
push
mov
loopne
push
test
int
sub
fdiv
hlt
test
add
test
add
cmp
push
jne
pop
add
test
add
jmp
icebp
jo
and
stos
fild
jno
retf
stos
fild
mov
fcomp
and
icebp
fild
std
stos
xchg
stos
lahf
add
push
inc
dec
stos
fild
jno
loop
sub
clc
icebp
shr
ror
sbb
pop
add
lods
lahf
add
out
into
lods
pop
add
popa
retf
lods
pop
add
ror
inc
push
lods
lahf
add
cmc
into
cli
xor
pushf
fcmovb
les
div
mov
mov
fild
mov
xlat
mov
jno
lds
scas
pop
add
xlat
shl
xor
jb
scas
lahf
add
scas
pop
add
stos
out
ret
lahf
add
aam
lahf
rcr
add
mov
fild
xor
cld
push
aaa
rcr
add
cli
fistp
(bad)
rcr
add
hlt
mov
rcr
add
fst
inc
rcr
int
rcr
add
iret
clc
loop
fild
mov
cmc
fidivr
xchg
fsubr
inc
rcr
add
rcr
add
cmps
shl
rcr
add
rcr
rcr
add
and
add
out
push
rcr
icebp
loop
movs
in
aad
add
aad
add
retf
or
xor
call
add
leave
das
repnz
add
ins
int
mov
cmp
lds
lahf
add
rcr
cmp
lahf
add
hlt
push
(bad)
xlat
lahf
add
fucomp
repz
xlat
pop
add
(bad)
(bad)
outs
xlat
pop
add
xor
pop
add
hlt
push
icebp
or
aad
(bad)
pop
add
(bad)
lahf
add
cmps
(bad)
out
(bad)
lahf
add
or
iret
(bad)
add
fstp
add
aas
in
js
lahf
add
fstp
icebp
jl
pop
fstp
pop
add
(bad)
stos
fcomp
mov
(bad)
into
js
pop
add
add
ss
fild
jno
fdivr
jno
jmp
clc
(bad)
lea
pop
add
push
cmc
or
fcmovnu
add
ficomp
les
jecxz
pop
dec
ficomp
add
loope
and
pop
add
fstp
add
fstp
add
aad
jb
fstp
shr
fstp
fcomp
add
fcomp
add
cmc
leave
xor
pop
add
in
or
jae
cmps
out
pop
add
jmp
add
mov
mov
into
clc
push
fistp
add
jmp
int
ficomp
add
(bad)
jl
ficomp
add
ficomp
add
das
(bad)
inc
ficomp
mov
ror
inc
pop
add
lock
xor
pop
add
test
rcr
fcmovu
xor
rcr
pop
int
scas
rcr
jno
out
fld
pop
add
rcr
inc
into
jbe
ret
pop
add
je
mov
mov
loop
ret
pop
add
mov
fild
mov
(bad)
sbb
ret
mov
in
cmps
ret
jno
fistp
inc
ret
xor
fld
ret
xor
jl
(bad)
mov
leave
xchg
xchg
lds
jno
call
add
lock
mov
jno
loope
jecxz
fild
mov
dec
les
add
clc
repnz
pop
les
mov
aad
das
les
add
(bad)
fild
mov
call
(bad)
fild
mov
vcvtpd2ps
fild
xor
sbb
pop
add
sub
pop
test
fidivr
xchg
(bad)
pop
add
push
repnz
(bad)
fild
xor
lds
push
(bad)
lahf
add
icebp
fld
leave
fild
icebp
int
dec
xchg
leave
pop
add
mov
shl
fild
jno
shl
jno
jmp
aaa
in
mov
stc
jmp
enter
pop
jmp
sub
jb
mov
retf
lahf
add
retf
lahf
add
dec
loop
push
retf
fild
xor
push
retf
pop
add
retf
xor
pop
add
retf
mov
ret
lds
lahf
add
mov
xor
int
add
add
cmp
icebp
popf
(bad)
inc
int
add
shl
jno
ret
call
jno
stc
sub
test
pop
add
leave
icebp
ins
aaa
int3
fild
jno
leave
mov
mov
stc
jl
iret
lahf
add
rcr
or
fs
lahf
add
fcomp
jno
bnd
into
lahf
add
hlt
leave
push
push
pop
add
cmp
lahf
add
daa
leave
in
icebp
fild
mov
clc
inc
call
hlt
inc
icebp
pop
add
std
fcomp
pop
icebp
lahf
add
lock
icebp
out
loop
xchg
lock
add
lock
icebp
sub
adc
lock
add
push
shl
repz
add
sbb
lahf
add
pop
jmp
add
repz
add
cld
dec
clc
repnz
xor
fild
jno
stc
add
repnz
add
add
xor
repnz
add
mov
lahf
add
cmc
lahf
add
cmc
pop
add
in
(bad)
std
cmp
pop
add
hlt
pop
add
bswap
pushf
lods
hlt
pop
add
je
(bad)
dec
hlt
fild
jno
int
xor
fild
jno
in
nop
neg
add
push
leave
test
pop
add
neg
icebp
idiv
ret
pop
add
xchg
ror
lahf
add
neg
addr16
pop
add
out
out
mov
mov
lahf
add
dec
call
mov
(bad)
in
ret
clc
fild
icebp
sub
mov
sbb
sbb
pop
add
out
cmp
mov
psubb
lahf
add
nop
shr
sti
lahf
add
sti
lahf
add
sti
fild
icebp
call
jno
lock
xchg
cli
fild
icebp
mov
pop
add
cli
pop
add
mov
cld
sar
lahf
add
ror
std
lahf
add
jecxz
jg
std
pop
add
std
out
leave
cld
pop
add
mov
int3
mov
loopne
stc
inc
cld
pop
add
call
add
mov
fidivr
mov
fild
icebp
cmc
dec
(bad)
fild
icebp
pop
shl
(bad)
(bad)
lahf
add
(bad)
lahf
add
cld
scas
ins
loope
add
loope
add
sub
pop
add
loop
add
jmp
fild
icebp
pop
fld
adc
shl
in
add
out
add
xchg
cmc
cmp
mov
fmul
shl
add
xchg
out
mov
ret
retf
out
add
xor
fld
addr16
call
icebp
fcomi
mov
call
fadd
icebp
test
sub
mov
into
sbb
addr16
dec
jns
pop
add
(bad)
retf
xor
lahf
add
scas
sti
dec
in
lahf
add
out
jge
in
pop
add
in
pop
add
(bad)
fwait
and
pop
add
in
pop
add
cli
(bad)
gs
lahf
add
in
lahf
add
cmp
lahf
add
xchg
jmp
xor
aad
mov
and
fild
xor
cli
cmp
dec
enter
pop
add
test
das
mov
lahf
add
out
fild
mov
in
call
lds
not
lahf
add
fwait
cld
movs
popf
adc
icebp
and
jnp
adc
add
xchg
leave
fidiv
adc
add
in
retf
adc
add
adc
icebp
add
sub
xor
lds
adc
inc
retf
adc
push
mov
fild
mov
loop
dec
adc
add
test
dec
or
pop
add
push
out
cli
adc
add
loopne
loope
adc
add
pusha
retf
mov
mov
ror
icebp
aas
(bad)
mov
jno
out
sahf
adc
out
jmp
mov
fiadd
mov
(bad)
aam
pop
add
adc
add
add
int3
jg
lahf
add
adc
add
test
out
pop
cmps
pop
lahf
add
out
jb
pop
add
pop
pop
add
or
mov
icebp
jno
pop
mov
lahf
add
add
pop
push
pop
add
movs
clc
das
sub
fild
mov
clc
pop
mov
pop
add
ror
mov
sbb
leave
and
lahf
add
test
pop
in
sbb
add
sbb
cmps
pop
sbb
ins
adc
fild
icebp
cmp
sbb
sbb
add
sbb
add
sbb
icebp
push
out
add
pop
add
fst
jp
(bad)
pop
sbb
pop
add
pop
add
sbb
call
add
sbb
lock
add
mul
in
fild
icebp
sbb
and
popa
fst
pusha
sbb
add
inc
aad
cmp
sub
nop
fistp
pop
add
bswap
push
xchg
lahf
add
addr16
add
in
cmp
pop
add
sub
dec
ficomp
pop
add
cld
mov
ins
sti
movs
arpl
pop
add
push
fild
jno
int
jmp
sbb
fcmovbe
pop
push
add
add
(bad)
fstp
xor
fild
mov
lock
pop
add
fsub
adc
add
add
outs
jmp
mov
lahf
add
rol
ins
add
mov
int
xor
lahf
add
mov
sbb
mov
aad
mov
pop
add
lock
ins
add
add
call
add
jo
dec
inc
call
add
add
aam
sub
add
push
rol
jno
(bad)
ins
mov
fild
mov
repnz
imul
icebp
and
lahf
push
add
add
pop
fild
icebp
aad
sub
out
and
jno
fisttp
jno
jmp
enter
icebp
sub
fild
mov
ror
ins
push
fild
mov
icebp
adc
or
add
xchg
fild
mov
fild
mov
repz
jp
pop
add
mov
ins
pop
test
add
in
and
cmp
and
rcr
xor
ins
mov
fild
jno
enter
pop
add
or
jle
rcr
add
cmp
mov
mov
iret
cmp
xor
ret
retf
xor
pop
add
int
add
ret
hlt
pop
in
pop
add
cmc
pop
add
loopne
jae
lahf
add
fbstp
cmc
pop
add
adc
xor
xchg
fild
jno
fild
icebp
dec
shr
hlt
cmps
pop
add
cmps
lahf
add
sar
pop
inc
cmps
pop
add
xor
hlt
dec
stos
pop
add
ror
sbb
stos
fild
xor
fild
icebp
ss
pop
lods
pop
add
lods
pop
add
pop
repz
scas
lahf
add
xor
lahf
add
das
cmc
cdq
sub
jmp
add
js
sub
rcr
push
mov
lahf
add
repnz
jnp
lahf
add
pop
loop
jp
lahf
add
test
add
(bad)
add
sub
ds
fcomp
add
(bad)
out
nop
fcomp
add
out
out
mov
fcmovu
add
in
ret
retf
fstp
add
add
xchg
pop
add
xchg
fild
xor
icebp
mov
adc
cmc
cmp
in
jne
in
rcl
mov
icebp
adc
xchg
sbb
sub
not
xchg
sbb
adc
lds
add
xchg
lahf
in
jne
in
jne
in
jne
mov
loopne
mov
mov
stc
fisttp
scas
lds
cmp
aas
adc
out
call
jne
in
jne
sbb
xchg
rol
mov
loopne
loopne
ins
sbb
rcl
cmp
xchg
pop
add
out
ror
xchg
sbb
xor
adc
xor
in
jne
jno
scas
pop
xor
mov
in
jne
movs
sub
push
aas
mov
jnp
adc
xor
mov
in
jne
movs
add
in
jne
in
jne
in
and
icebp
xchg
(bad)
adc
jne
in
loopne
cmp
xchg
ffreep
adc
mov
pop
push
outs
mov
in
jne
in
jns
pusha
loopne
sti
in
jne
in
(bad)
add
xor
in
jne
in
jne
in
out
adc
sbb
loopne
aas
shl
fild
mov
dec
jne
in
jne
in
jne
in
sub
lods
push
outs
jnp
adc
jne
in
mov
mov
adc
out
adc
sbb
cmp
adc
xor
dec
das
dec
mov
sti
in
jne
in
jne
in
jmp
add
push
sti
in
jne
in
jne
shl
out
in
jne
in
jne
in
jne
inc
xor
xchg
adc
push
mov
in
jne
in
push
daa
pushf
loopne
mov
rcl
cmp
adc
and
adc
mov
(bad)
in
jl
in
jne
in
jne
in
pop
push
mov
push
mov
in
jne
in
jne
adc
jne
in
jne
in
jne
cmp
dec
cmp
in
jne
inc
xor
xchg
adc
jmp
test
outs
jnp
adc
jne
and
mov
jnp
adc
cmp
call
mov
inc
cmp
fs
adc
jne
in
stos
sbb
jae
in
jne
in
cmc
aaa
pop
ins
sbb
adc
jne
in
jne
sbb
nop
fild
movs
repnz
sub
sub
add
push
jge
push
jne
in
jne
in
xor
fnstenv
nop
pop
inc
in
repz
sbb
in
jne
in
jne
in
xor
in
jne
in
jne
in
jae
rcl
cmp
adc
jne
in
jne
loop
push
cmp
adc
jne
fs
sbb
adc
jne
loop
push
cmp
adc
sbb
jne
in
jne
in
dec
and
push
outs
jnp
adc
jne
in
cmc
and
lock
loopne
cld
adc
outs
mov
rcl
cmp
adc
jne
in
jne
in
jne
cs
lahf
rcl
and
xchg
sub
adc
ror
out
jge
icebp
xor
(bad)
adc
jne
std
or
xchg
iret
std
or
cmp
adc
xchg
(bad)
out
mov
in
cmc
cmp
in
jne
in
jne
in
nop
pop
add
sar
adc
in
jne
in
repz
out
jne
in
jne
in
jne
in
xor
cmc
xchg
(bad)
adc
ins
and
and
icebp
xchg
lahf
inc
xchg
cmp
adc
jne
(bad)
out
jns
in
jne
in
jne
pop
pop
jne
in
jne
in
jne
(bad)
adc
mov
fcom
jne
in
jne
loop
rol
adc
jne
in
jne
in
cmc
aas
xor
xchg
pop
inc
adc
xor
xchg
pop
inc
adc
cmp
adc
jne
adc
add
(bad)
in
jne
in
jne
in
dec
sbb
cmp
jne
in
jne
loopne
push
adc
or
jge
adc
in
jne
in
jne
(bad)
loopne
cmp
adc
jne
and
xchg
push
add
vmovups
test
in
jne
in
jne
in
repz
adc
jne
in
jne
fs
and
ret
lock
pop
sbb
adc
in
jne
in
cmc
cmp
in
jne
in
jne
in
sbb
in
jne
in
jne
mov
adc
jne
adc
jne
in
jne
in
jne
in
xor
ret
sti
in
jne
adc
jne
in
jne
in
xor
ret
adc
jne
imul
aaa
xchg
jl
pop
in
jne
in
scas
sub
adc
jne
sbb
mov
add
push
pusha
sbb
sbb
rcl
xor
in
jne
in
jne
aas
add
jne
in
jne
sbb
out
ret
mov
jg
jmp
adc
scas
sub
adc
mov
arpl
stos
mov
jg
sbb
sbb
rcl
xor
in
jne
aas
add
jne
in
mov
arpl
stos
mov
jbe
lea
pop
mov
mov
rcl
cmp
adc
gs
adc
jne
in
mov
arpl
rcl
cmp
into
gs
adc
jne
in
jne
jg
cmp
in
mov
les
outs
mov
in
jne
in
repz
adc
jne
cs
nop
pop
rcl
cmp
adc
mov
sti
in
jne
in
inc
xor
repz
(bad)
adc
jne
in
sub
in
jne
in
mov
add
das
inc
xchg
sub
adc
jne
sub
mov
inc
lods
push
mov
(bad)
mov
fsub
popa
mov
in
jne
pop
mov
or
pop
shl
xchg
mov
adc
jne
in
rol
jo
push
sti
in
jne
in
sub
push
repz
cmp
cmp
adc
repz
adc
cmc
xor
xor
cmp
adc
push
cs
xchg
fild
icebp
push
sti
in
jne
in
xor
adc
jne
and
cwde
pushf
in
jne
in
jne
out
jns
ffreep
adc
jne
fs
adc
rol
rcl
cmp
adc
adc
icebp
xchg
ffreep
adc
jne
in
jne
in
nop
push
cmp
xchg
(bad)
adc
jne
or
mov
or
rol
rol
adc
icebp
xchg
ffreep
adc
jne
adc
xchg
frstor
loopne
sbb
ror
fucomi
sub
sti
in
jne
in
jne
(bad)
(bad)
inc
mov
fsubr
pushf
das
faddp
adc
jne
fs
adc
into
adc
mov
shl
jge
xor
xchg
(bad)
adc
ins
and
in
cwde
sbb
in
jne
add
cwde
sbb
inc
out
das
mov
push
popa
inc
cmp
mov
mov
in
lods
cmp
in
jne
adc
push
loopne
cmp
ror
push
fsub
outs
mov
(bad)
in
jle
in
jne
in
cmc
aas
mov
push
pop
sar
xchg
lock
pop
add
jne
in
jne
in
jne
std
int
sbb
adc
jne
in
jne
push
and
dec
jne
movs
in
icebp
xchg
pop
in
jne
in
repz
stc
adc
jne
in
mov
in
jne
in
xor
mov
xchg
pop
(bad)
loopne
cmp
adc
jne
in
cmc
cmp
ret
sti
in
jne
in
cmc
cmp
ret
lock
cmp
adc
jne
fs
sub
adc
jne
(bad)
loopne
cmp
adc
jne
fs
and
out
rcr
inc
nop
stos
pop
add
outs
std
sbb
adc
repz
adc
jne
in
cmc
aas
mov
push
push
shl
cmp
in
jne
in
jne
cmp
outs
cmp
in
jne
in
repz
adc
jne
in
cmc
aas
mov
push
push
shl
pop
pop
aaa
repz
adc
jne
in
jne
jmp
xchg
sub
adc
repz
adc
jne
in
jne
adc
push
ret
lock
pop
pop
add
mov
adc
jne
adc
adc
jne
in
mov
imul
pop
(bad)
in
jle
in
jne
fs
pusha
pop
add
push
jge
aaa
jne
in
jne
in
jne
mov
ss
in
jne
mov
push
jne
in
jne
in
jne
mov
push
jne
in
jne
loopne
sbb
sbb
fadd
xor
in
jne
in
repz
stc
adc
jne
in
jne
and
rcr
icebp
imul
icebp
push
mov
fs
and
adc
jne
in
jne
(bad)
in
jle
in
jne
in
cmc
aas
icebp
jns
pop
inc
push
and
out
jle
in
jne
in
jne
in
cmc
aas
icebp
jns
pop
rcl
fucom
rcl
icebp
sub
(bad)
pushf
das
pop
rcl
cmp
adc
jne
in
jne
in
jne
pusha
out
xchg
pop
popf
xor
rol
or
dec
xor
sbb
icebp
imul
icebp
push
shl
xor
in
jne
inc
in
cmp
in
jne
in
imul
icebp
push
sti
in
jne
in
jne
fs
sub
adc
jne
(bad)
in
jle
in
jne
in
jne
in
xchg
in
jne
in
jne
mov
adc
jne
in
jne
sbb
adc
xor
dec
fistp
sti
in
jne
in
jne
(bad)
out
cmp
adc
push
aas
xor
icebp
outs
inc
xchg
outs
xlat
add
xchg
inc
stc
add
adc
inc
mov
in
jne
in
jne
in
movs
das
lock
mov
in
jne
in
movs
das
(bad)
jge
and
add
(bad)
in
jne
in
mov
or
jne
in
jne
in
jne
and
cwde
popf
in
jne
in
jne
in
mov
or
jne
in
jne
in
jne
in
sbb
pop
rcl
cmp
or
aas
ds
pop
adc
mov
in
jne
in
inc
cmp
in
jne
in
jne
mov
clc
push
sti
in
jne
in
xchg
ret
sti
in
jne
in
jne
movs
shl
in
jne
in
jne
in
loope
(bad)
adc
jne
xor
outs
mov
in
jne
in
jne
mov
xor
inc
and
in
popf
or
xchg
leave
adc
jne
in
cmc
cmp
in
jne
fs
test
in
jne
in
jne
mov
shl
in
jne
in
jne
iret
adc
jne
in
jne
in
pusha
adc
pop
sti
in
jne
in
mov
add
rol
sti
in
jne
in
jne
or
adc
jne
in
sbb
das
jno
cmp
icebp
xchg
lahf
add
jne
in
jne
jno
imul
xor
ror
adc
fstp
ins
sbb
mov
adc
stos
pop
fmul
outs
test
push
xchg
adc
enter
inc
loopne
into
inc
out
mov
mov
push
into
jmp
add
inc
loopne
into
(bad)
in
adc
jle
ret
sub
push
(bad)
sub
call
inc
push
ds
jmp
in
neg
and
mov
fild
test
pop
add
pop
xchg
(bad)
sub
and
lahf
jnp
inc
test
mov
push
inc
cmp
mov
sub
imul
fisubr
mov
inc
shr
sub
push
test
in
(bad)
sahf
adc
jmp
(bad)
(bad)
fisttp
add
or
sub
cmp
jnp
and
sub
sub
mov
add
ret
cli
mov
cmps
bound
add
mov
cmp
sub
inc
rcr
cld
enter
xor
cmps
pop
(bad)
add
int
fdivr
mov
iret
jmp
mov
ficom
jmp
and
ds
jp
fmul
out
les
aas
adc
jle
ret
rcl
add
int
stos
adc
mov
sar
inc
popf
adc
add
pop
(bad)
nop
cmps
bound
jmp
fwait
adc
jle
aad
cmp
int
adc
sti
add
jmp
pop
jnp
dec
popf
lds
leave
cdq
popa
push
push
cmp
mov
clc
(bad)
sub
jge
inc
add
je
push
inc
mov
ins
adc
xor
jb
shl
popa
aaa
pushf
mov
xor
mov
sti
popa
das
js
movs
mov
pushf
out
cwde
(bad)
inc
adc
push
out
pop
xchg
test
in
or
cmp
fwait
mov
jo
test
add
in
mov
jecxz
cmp
je
xor
movs
fcom
movs
stos
nop
and
xlat
and
mov
int3
or
push
mov
data16
mov
xchg
xchg
shl
popf
fsubr
ja
int3
cmp
cmp
jo
arpl
push
mov
das
in
mov
jle
adc
icebp
push
mov
shl
pop
inc
into
enter
neg
das
shl
dec
rol
add
pop
jno
std
pop
dec
iret
xchg
inc
mov
xchg
div
mov
mov
idiv
dec
loope
rcl
cmp
sar
push
outs
into
xlat
pop
test
enter
neg
das
xlat
xor
jg
inc
and
jae
adc
jo
inc
repnz
dec
jmp
int
sub
jb
sub
pop
mov
dec
rol
add
pop
jno
std
pop
dec
iret
xchg
inc
mov
inc
fnsave
jbe
clc
adc
idiv
dec
loope
rcl
mov
mov
sar
push
outs
into
xlat
pop
test
enter
neg
das
xlat
repnz
loope
and
ja
adc
jo
inc
repnz
dec
jmp
int
sub
jb
sub
add
rol
add
pop
jno
std
pop
dec
iret
xchg
inc
leave
pop
mov
lock
mov
idiv
dec
loope
rcl
loopne
dec
pop
mov
call
jl
xor
pop
test
enter
neg
das
xlat
xor
push
and
jnp
adc
jo
inc
repnz
dec
jmp
int
sub
jb
sub
std
cmps
call
rol
add
pop
jno
std
pop
dec
iret
xchg
inc
leave
push
test
out
mov
adc
idiv
dec
loope
rcl
out
and
dec
mov
sar
push
outs
into
xlat
pop
test
enter
neg
das
xlat
repnz
push
frstor
sbb
adc
jo
add
push
dec
imul
inc
jmp
jb
sub
in
sub
rol
int3
add
pop
outs
retf
jno
jge
dec
iret
xchg
inc
or
mov
lock
mov
idiv
dec
fdivrp
mov
push
loopne
and
mov
xor
pop
inc
into
enter
neg
das
xlat
xor
fisttp
dec
inc
test
(bad)
pop
pop
scas
retf
jno
std
pop
dec
iret
xchg
inc
dec
addr16
stc
xor
cld
push
dec
shl
dec
fdivrp
cmp
jae
push
data16
call
jl
mov
out
into
push
pop
test
enter
neg
das
shl
add
inc
and
aas
lds
iret
jo
xor
or
retf
ja
pop
clc
or
dec
(bad)
pop
pop
scas
retf
jno
std
pop
dec
iret
xchg
inc
lea
fcmovnb
jo
jmp
dec
shl
dec
fdivrp
cmp
jae
push
es
xor
mov
sti
adc
push
out
into
push
pop
test
enter
neg
das
shl
dec
lds
pop
xor
adc
jo
xor
or
retf
ja
es
popa
xor
dec
(bad)
pop
pop
scas
retf
jno
std
pop
dec
iret
xchg
inc
dec
jno
(bad)
jo
out
cmp
je
cld
push
dec
shl
dec
fdivrp
cmp
jae
push
cmps
repnz
adc
push
out
into
push
pop
test
enter
neg
das
shl
adc
pop
test
xor
or
retf
ja
xor
xor
dec
(bad)
push
pop
inc
retf
das
shl
or
sbb
jo
xor
rcl
out
or
std
adc
xor
pop
ror
ror
cmps
call
(bad)
adc
idiv
imul
in
jne
xor
dec
(bad)
push
pop
inc
retf
das
shl
sbb
jo
xor
rcl
out
add
mov
mov
scas
retf
ror
ror
addr16
jl
jno
(bad)
adc
idiv
imul
dec
mov
rol
(bad)
push
pop
inc
retf
das
shl
rcl
and
jo
xor
rcl
repnz
push
into
jo
add
cmp
outs
jbe
(bad)
loopne
cmp
push
mov
not
cmp
xor
pop
add
xchg
les
mov
int
mov
jecxz
ror
idiv
iret
sub
xchg
jns
xor
(bad)
int3
add
fldcw
aad
(bad)
inc
dec
and
mov
inc
add
cmp
outs
jbe
(bad)
mov
mov
xor
pop
add
xchg
les
mov
loope
xor
ror
stc
mov
out
jbe
aam
popf
cmp
adc
jo
shl
inc
mov
imul
xor
popa
or
push
pop
jno
aaa
pop
add
xchg
ror
mov
in
jl
jbe
(bad)
ror
stc
xor
jbe
shl
add
xchg
pop
mov
lock
jl
cmc
push
scas
retf
into
retf
das
shl
data16
and
jo
shl
inc
mov
imul
xor
popa
or
push
pop
jno
aaa
pop
add
xchg
ror
pop
repz
and
ror
stc
xor
jbe
shl
js
aam
mov
hlt
push
jl
cmc
push
scas
retf
into
retf
das
shl
pop
outs
and
jo
shl
inc
mov
imul
xor
popa
or
push
pop
jno
aaa
pop
add
xchg
ror
in
in
cmps
in
xor
ror
stc
xor
jbe
shl
fs
jo
daa
clc
push
jl
cmc
push
scas
retf
into
retf
das
shl
shl
sbb
jo
shl
inc
mov
imul
xor
popa
or
push
pop
jno
aaa
pop
add
xchg
ror
inc
push
(bad)
mov
loope
xor
ror
stc
xor
jbe
shl
call
cmps
cld
push
jl
cmc
push
pop
lock
arpl
icebp
jne
dec
jo
and
out
jne
mov
add
xor
div
dec
dec
cmp
jne
or
push
mov
dec
pop
jne
dec
jl
xlat
int3
popa
cmc
out
lea
jne
or
mov
repz
pop
in
loope
fstp
loopne
sbb
(bad)
nop
lea
sbb
inc
loopne
into
inc
loopne
mov
add
inc
inc
(bad)
stos
jns
and
popa
adc
add
inc
pusha
sbb
inc
loopne
into
inc
loopne
mov
add
sub
add
push
or
sub
out
sub
setge
mov
pushf
and
inc
out
jmp
(bad)
sub
add
stos
mov
and
cli
imul
mov
and
jecxz
xor
push
mov
sub
or
sub
aas
outs
leave
sbb
xchg
aam
push
inc
(bad)
movs
and
xchg
or
mov
adc
mov
add
push
loop
add
mov
(bad)
mov
xchg
or
mov
mov
ins
mov
add
jmp
and
pop
rcl
retf
das
sbb
fld
add
pop
cmp
push
ds
call
mov
cmp
aad
les
nop
xor
(bad)
jmp
(bad)
out
push
test
add
loop
aam
push
lods
in
cmp
lds
inc
outs
and
cdq
or
les
adc
cdq
xor
and
stos
mov
shl
nop
jnp
add
(bad)
mov
iret
jmp
mov
ror
jno
sub
nop
inc
add
shr
mov
retf
adc
fmulp
aas
test
xchg
aad
xor
inc
int3
js
(bad)
jmp
pop
inc
dec
div
lea
sbb
cmps
dec
mov
push
imul
into
mov
sub
push
jb
into
mov
sub
push
imul
pop
repnz
add
jmp
imul
jb
repnz
dec
push
ret
popf
dec
sub
push
test
lea
mov
mov
adc
fmul
push
imul
push
mov
dec
mov
sub
sub
push
lods
add
jae
int
mov
sub
sub
push
imul
push
mov
jno
(bad)
dec
repz
retf
rcr
sub
push
imul
out
mov
into
das
ror
pop
pause
xor
dec
outs
inc
pop
dec
imul
out
mov
into
das
fisttp
scas
mov
or
in
pushf
int
push
(bad)
xlat
mov
mov
sbb
fmul
push
imul
int
(bad)
int3
mov
out
in
push
jno
xor
push
imul
repz
pushf
xor
pop
sti
out
fsub
xchg
jp
dec
add
into
push
imul
int
mov
push
int3
out
fdivr
sbb
mov
add
into
push
imul
jmp
int3
push
dec
out
fsub
push
imul
jmp
sub
push
cmps
int3
dec
dec
out
fsub
push
imul
jmp
sub
push
scas
int3
dec
dec
in
sar
lea
or
mov
or
pop
dec
imul
in
lods
inc
xor
imul
jmp
into
das
cwde
mov
into
xchg
inc
scas
scas
pop
jae
xor
nop
and
lods
push
xor
repnz
out
lods
adc
jae
adc
lods
push
xor
lea
jmp
imul
out
sub
lock
xlat
into
out
lods
sbb
mov
aam
repnz
jb
jb
dec
repnz
repz
mov
add
sub
push
imul
jae
jb
jmp
sub
push
mov
cmp
xor
imul
jmp
xor
imul
aam
lods
int
repz
popf
dec
mov
adc
fmul
push
imul
repz
xlat
into
out
lods
sbb
mov
icebp
mov
repnz
jb
jb
dec
repnz
repz
mov
add
sub
push
imul
jae
jb
jmp
sub
push
mov
pop
mov
xor
xchg
into
dec
imul
icebp
xchg
jg
outs
inc
jo
xor
nop
ds
lods
inc
xor
push
mov
xor
sub
push
cmp
xor
xor
sbb
into
repz
xlat
into
pause
cmp
mov
repnz
add
jmp
xor
imul
jmp
jl
mov
das
pop
jo
xor
sub
push
jmp
xor
push
imul
push
dec
repnz
pushf
or
pop
dec
imul
jmp
shr
pushf
or
jno
xchg
(bad)
in
lods
inc
xor
pop
mov
inc
jo
xor
mov
xlat
into
pause
xor
jno
repnz
add
jmp
xor
push
imul
das
add
in
mov
repnz
dec
imul
jmp
mov
mov
dec
sub
imul
jmp
mov
dec
imul
in
popf
popa
sub
imul
jmp
sub
push
imul
in
in
dec
xor
imul
xlat
in
adc
int3
ror
mov
mov
imul
jmp
and
push
imul
loopne
(bad)
int
push
imul
jmp
jo
mov
imul
jmp
or
jae
or
jmp
mov
and
dec
jo
xor
push
mov
jno
repnz
(bad)
int
push
imul
lock
(bad)
out
pop
jo
xor
lods
push
jae
jb
jmp
mov
xor
imul
jmp
xor
sbb
mov
xor
jecxz
jo
xor
dec
pop
ret
popf
dec
sub
push
sub
into
out
lods
jb
jae
pop
aam
out
call
(bad)
mov
mov
sbb
imul
jmp
in
les
sub
push
popa
scas
pop
outs
out
fsub
push
imul
jmp
xor
push
scas
fild
push
mov
and
push
(bad)
int
push
imul
scas
xor
xor
xchg
xchg
mov
repnz
add
jmp
imul
jno
repnz
sub
push
repnz
jno
xor
mov
repnz
add
jmp
xor
pop
scas
jmp
jo
xor
sub
push
sub
icebp
mov
repnz
jno
xor
dec
sbb
pop
dec
imul
jmp
sub
imul
into
mov
sub
sub
push
imul
jmp
(bad)
into
mov
sub
push
in
loop
jno
repnz
xchg
dec
mov
inc
jo
xor
dec
(bad)
rcr
sub
push
imul
xor
repnz
add
jmp
shl
or
or
xchg
jae
dec
add
into
push
imul
into
ror
xchg
jno
or
add
jmp
sub
xchg
mov
push
dec
repnz
repz
sub
popf
dec
sub
out
pushf
or
push
imul
or
mov
dec
ror
ror
dec
add
stos
push
imul
iret
rol
ror
int
iret
sbb
push
ss
xor
jae
inc
int3
popf
lea
loopne
push
push
dec
mov
or
(bad)
sub
fmul
push
(bad)
(bad)
jmp
(bad)
sub
iret
jecxz
setge
mov
pushf
and
(bad)
out
jmp
imul
xor
pop
sub
(bad)
sub
mov
mov
rcl
ret
stos
mov
jle
push
adc
inc
bt
inc
xchg
es
dec
js
add
mov
or
add
int3
mov
or
xchg
sub
xchg
and
sti
les
mov
cmp
xchg
dec
not
pop
sub
stos
dec
in
ins
fcomp
dec
cdq
lds
pop
aad
dec
popf
inc
mov
ret
add
addr16
mov
out
sub
cdq
and
les
mov
sbb
pop
sbb
mov
mov
jmp
test
mov
inc
ds
jp
sub
rcr
push
rol
jns
push
cwde
pop
rol
jge
xor
push
(bad)
sub
mov
mov
mov
sub
jmp
shr
aam
in
dec
popf
xor
pop
jle
mov
sar
cdq
add
jg
mov
iret
add
pushf
enter
cmps
in
sbb
adc
pop
add
push
int
aad
in
push
jl
ss
adc
add
ret
cli
mov
je
jnp
loope
jnp
retf
xor
jo
cmp
xchg
jmp
mov
sti
cdq
push
cmp
xchg
cmp
xchg
push
xor
stos
mov
fidiv
rol
sti
or
fcomp
ins
mov
and
and
fld
pop
xor
pop
xor
(bad)
or
mov
ja
pop
lahf
pop
aad
loopne
lock
push
out
sub
xlat
cwde
aam
pusha
sbb
inc
loopne
dec
fcmovbe
into
sub
and
adc
xor
(bad)
sub
dec
jbe
mov
mov
add
add
mov
clc
inc
scas
jnp
les
mov
sub
and
mov
sbb
pop
pop
pop
and
jp
nop
pop
(bad)
push
cmp
sub
mov
jmp
jp
cdq
call
int3
jmp
jb
cdq
retf
xchg
ds
jne
lock
cld
cli
push
push
mov
add
mov
call
(bad)
inc
(bad)
jg
popa
sbb
loop
jp
gs
jmp
jp
lahf
loop
aam
dec
in
fmul
jg
inc
lods
retf
jmp
je
sub
out
jmp
leave
les
aad
loope
int3
pop
cmp
aad
jmp
pop
jnp
dec
popf
lds
aad
(bad)
and
pop
sti
adc
bound
call
inc
push
jp
fcmovnbe
(bad)
sahf
push
arpl
pop
sti
pop
jnp
les
retf
mov
sbb
pop
sbb
(bad)
cs
test
pop
jnp
inc
inc
fnstcw
xchg
or
jmp
push
inc
daa
push
inc
js
xor
mov
mov
inc
adc
cmp
cmp
cmp
xchg
jmp
pusha
inc
adc
arpl
xchg
push
mov
aad
mov
fmul
call
fcmove
and
fimul
jno
lahf
sbb
mov
hlt
into
dec
and
test
xchg
mov
or
jmp
pop
jmp
pop
jmp
xchg
stos
mov
cmc
nop
ins
aam
sub
mov
pusha
push
and
fs
icebp
aam
add
jns
xor
dec
loop
popa
stc
pusha
xor
xchg
xchg
dec
loopne
mov
std
push
xchg
dec
inc
(bad)
enter
popa
stc
fs
std
adc
adc
cmp
xchg
clc
push
mov
fldcw
xchg
stc
push
pushf
test
loopne
xchg
stc
cli
push
xchg
stc
pusha
pushf
aad
jae
test
add
jno
add
jno
add
jno
fbstp
sbb
add
jno
add
std
or
add
jno
add
jno
add
icebp
pop
pusha
xchg
sbb
add
jno
or
cmp
inc
jno
add
jno
add
and
and
fld
jno
inc
pop
sub
cmp
inc
jno
add
jno
add
jno
add
div
inc
test
lods
mov
ss
pop
cwde
popa
ins
xor
sub
bound
add
jno
add
daa
or
inc
jno
add
jno
add
jno
add
les
outs
hlt
dec
add
or
fwait
mov
jno
add
jno
pusha
cmp
sub
add
cmp
jno
add
jno
add
fld
jno
jno
lds
pop
mov
mov
and
inc
aad
vpmaddwd
lock
test
retf
and
retf
push
test
jl
(bad)
pop
jns
aas
and
retf
pop
cmp
into
xchg
add
sub
adc
rol
push
imul
mov
les
(bad)
cmp
into
inc
loopne
into
(bad)
in
ds
mov
sub
pop
(bad)
sub
jg
les
mov
retf
jbe
cmp
(bad)
sub
mov
push
mov
push
add
es
cmp
xchg
jg
and
test
dec
pop
pop
add
(bad)
(bad)
(bad)
jmp
(bad)
jmp
out
jmp
adc
mov
inc
mov
mov
jmp
in
xchg
pop
sti
inc
cmc
int
inc
loope
mov
inc
shr
les
imul
mov
inc
test
add
pop
je
and
xlat
add
adc
cmp
push
rol
xchg
lea
popf
mov
(bad)
xchg
in
aam
xor
inc
and
xor
sub
adc
push
in
add
jmp
add
inc
bound
push
inc
outs
call
(bad)
jmp
ret
cmp
ret
movs
sahf
adc
(bad)
popf
repz
jnp
test
enter
sub
push
cmp
stos
or
stos
inc
sub
jnp
test
ret
dec
sti
add
fdivr
xor
pop
mov
jno
dec
cmp
loope
stos
lds
out
out
(bad)
loop
das
(bad)
loop
das
(bad)
loop
das
(bad)
loop
das
(bad)
loop
das
call
das
in
out
das
jle
outs
xor
(bad)
loop
pop
cmp
bound
push
or
sbb
or
sbb
or
add
out
das
(bad)
mov
(bad)
ds
or
sbb
dec
cmc
(bad)
ss
sub
(bad)
out
sbb
or
sbb
or
mov
(bad)
cmc
out
push
outs
xor
repz
jle
popf
sub
jae
das
mov
push
or
sbb
or
sbb
test
out
and
retf
sbb
or
sbb
or
sbb
out
in
cmc
scas
and
das
sub
ss
sub
(bad)
out
sbb
or
sbb
or
(bad)
mov
(bad)
ds
or
sbb
or
sbb
jmp
(bad)
mov
(bad)
ds
or
sbb
or
sbb
ret
xor
mov
ficom
(bad)
loop
or
ds
or
sbb
or
loop
loope
sub
(bad)
(bad)
loop
outs
add
in
sbb
outs
and
push
or
sbb
or
sbb
or
btr
sbb
or
sbb
or
(bad)
das
mov
push
or
sbb
or
sbb
or
rdpmc
outs
mov
push
or
sbb
or
sbb
or
psllq
mov
push
or
sbb
or
sbb
or
(bad)
mov
jle
push
or
sbb
or
call
call
sbb
or
sbb
or
sbb
or
sbb
and
sbb
or
sbb
or
sbb
or
add
outs
mov
add
imul
out
and
sbb
and
sbb
or
sbb
or
sbb
or
add
outs
mov
add
ins
pop
repz
out
arpl
sbb
or
sbb
mov
cs
xchg
or
xchg
and
das
sbb
or
sbb
or
sbb
or
sbb
es
out
and
sbb
and
sbb
or
sbb
or
add
outs
mov
and
ins
sbb
jnp
add
fsubrp
popf
out
outs
(bad)
and
or
push
or
sbb
adc
loop
and
das
and
or
sbb
or
sub
nop
jmp
or
sbb
or
sbb
nop
loop
and
das
and
or
sbb
or
sbb
sahf
inc
sbb
or
sbb
or
sbb
das
shl
mov
jle
popf
sub
jae
das
mov
push
or
sbb
or
xrelease
jle
popf
sub
sbb
or
sbb
or
repz
jle
popf
sub
sbb
or
sbb
or
sbb
or
sbb
or
inc
and
out
repnz
out
(bad)
and
jmp
loop
lods
arpl
mov
(bad)
scas
mov
(bad)
loop
in
sbb
(bad)
outs
test
pop
cmp
push
xchg
imul
mov
add
(bad)
cmp
into
inc
loopne
into
inc
out
mov
cmp
cmp
xchg
popa
inc
mov
cmp
push
jbe
sahf
and
popf
loopne
jmp
les
(bad)
(bad)
stos
sbb
cmp
cmp
pop
and
mov
push
mov
add
push
sar
push
inc
mov
pop
(bad)
mov
mov
push
sbb
mov
push
fldenv
(bad)
sub
les
mov
add
jmp
add
dec
(bad)
jecxz
pop
and
push
inc
ror
pop
mov
push
jg
test
das
lds
push
out
adc
stos
(bad)
push
(bad)
popa
in
dec
cdq
test
and
jmp
add
add
(bad)
aad
sbb
fs
test
pop
aam
in
adc
dec
cmc
dec
push
mov
stc
add
ret
(bad)
aas
shr
adc
add
xchg
ret
out
sub
js
adc
ds
sti
push
rol
jmp
in
mov
add
ret
cli
aas
imul
and
pop
sti
push
dec
in
add
dec
les
push
pop
retf
add
pop
in
jmp
jp
imul
cmp
fcomi
or
pop
and
jp
add
in
or
stos
cmps
jg
les
arpl
mov
fldenv
nop
retf
clc
xchg
retf
clc
xchg
retf
clc
push
call
push
add
das
push
add
mov
in
or
xchg
retf
clc
xchg
retf
clc
push
fistp
loopne
das
sbb
sbb
fist
xor
fcmovnbe
mov
fst
nop
retf
clc
xchg
retf
clc
push
call
loopne
gs
push
push
or
mov
es
retf
clc
xchg
retf
clc
pushw
mov
mov
mov
fdivr
shl
mov
or
dec
gs
clc
es
retf
clc
xchg
retf
clc
xchg
retf
arpl
call
mov
out
clc
es
retf
clc
xchg
retf
clc
cs
inc
add
jecxz
or
jp
cmp
(bad)
(bad)
jmp
aam
pop
pusha
popa
fsub
cmp
lahf
int3
jne
cwde
mov
push
jns
fdivr
mov
cmps
nop
retf
clc
xchg
retf
clc
data16
enter
xchg
shl
clc
xchg
retf
clc
data16
jb
hlt
jbe
xchg
int
jle
dec
add
in
jle
into
ss
hlt
jbe
xchg
iret
xor
hlt
jbe
xchg
mov
mov
mov
pushf
fwait
push
mov
or
mov
or
inc
gs
arpl
mov
clc
xchg
retf
clc
xchg
mov
inc
or
inc
gs
arpl
mov
clc
xchg
retf
arpl
push
fldenv
nop
retf
clc
xchg
retf
clc
xchg
pop
sbb
mov
push
fadd
mov
pop
into
mov
fcmovnbe
xor
pop
mov
ds
or
jecxz
fsubr
push
je
je
add
cmc
shr
dec
fcmovbe
into
sub
add
sub
adc
push
ret
retf
cld
loop
test
mov
inc
std
dec
out
(bad)
(bad)
jmp
push
push
mov
or
jmp
mov
adc
sub
push
push
jnp
and
push
add
inc
rcl
jle
cmps
bound
cdq
scas
(bad)
sub
div
stc
jp
adc
add
pop
jmp
mov
add
xchg
add
add
sub
add
repnz
shr
xchg
add
pop
sub
les
pop
jne
sub
mov
les
jle
cdq
or
shr
test
out
sub
mov
jmp
aas
add
lods
inc
aam
test
rcl
pop
xlat
fild
hlt
dec
xor
sub
xor
jge
push
jmp
int
repnz
push
jne
or
dec
fs
jmp
ror
imul
imul
enter
fild
jnp
pusha
push
cdq
iret
add
fsub
sub
or
xor
frstor
retf
stos
xchg
pop
push
cmp
imul
or
movs
push
or
(bad)
mov
outs
mov
pop
js
or
pushf
jp
mov
mov
jp
mov
sub
xor
stc
pushf
ret
cmp
push
or
mov
retf
pusha
mov
or
stc
cmps
inc
push
js
leave
mov
mov
retf
push
cmp
push
(bad)
ror
sub
movs
xor
push
ds
clc
add
sub
jle
sbb
movs
push
xlat
push
js
adc
sti
pop
(bad)
mov
or
push
ret
add
mov
push
imul
cmp
xchg
push
ins
sbb
pop
sti
sahf
jp
rol
aas
adc
les
mov
xchg
add
sub
sar
pop
fwait
push
aas
mov
cmp
aad
sbb
ds
cdq
add
add
jl
call
push
callw
iret
stos
dec
xchg
mov
pop
addr16
sar
adc
mov
(bad)
loopne
and
imul
jno
sub
nop
adc
inc
ficomp
jmp
loop
xor
mov
adc
pop
cmp
nop
imul
mov
loop
les
cmps
les
pop
cmp
xchg
int3
les
cmp
mov
neg
les
add
shl
inc
add
mov
push
mov
aas
add
fsub
inc
jg
rol
stos
pop
xchg
jmp
rcl
sbb
or
mov
mov
cmp
out
sub
xchg
mov
jecxz
call
and
mov
les
push
push
mov
xchg
pop
sbb
ror
hlt
(bad)
jmp
(bad)
sub
test
sub
jno
adc
pop
push
stos
repz
into
sub
adc
clc
inc
nop
fldcw
jae
add
xchg
sbb
adc
or
std
push
cmps
add
xor
push
pop
mov
xor
mov
cmp
mov
cmp
call
js
sbb
push
gs
mov
movs
lock
xchg
fild
test
pop
pusha
scas
or
out
test
sbb
mov
inc
xchg
repnz
sahf
lock
xchg
call
jb
adc
pushf
stc
dec
movs
hlt
inc
call
(bad)
pop
imul
out
inc
mov
daa
jo
add
xchg
out
cmp
push
pop
mov
push
popf
in
cmp
jg
pop
push
in
cmp
sbb
std
dec
(bad)
jecxz
js
adc
idiv
test
sub
arpl
ss
pop
gs
dec
cmps
out
cmp
sub
adc
add
sub
adc
or
cli
push
cmps
cmc
inc
nop
(bad)
xor
pop
data16
push
sahf
out
mov
and
mov
push
lods
cmc
inc
xchg
out
sbb
ja
and
adc
add
fild
je
push
pop
scas
cmc
dec
xchg
fisubr
jae
adc
dec
call
(bad)
sub
imul
sahf
repz
cdq
repz
mov
xor
and
retf
mov
cmp
ror
xlat
and
clc
cmp
or
dec
popf
jmp
jle
sbb
hlt
dec
xchg
fisub
outs
mov
dec
xchg
in
ja
sbb
clc
ds
in
mov
pop
push
jecxz
jnp
sbb
inc
test
sub
dec
mov
sub
or
hlt
inc
mov
es
or
mov
sbb
or
lods
sti
inc
nop
in
jg
pop
outs
mov
inc
xchg
fisubr
jbe
sbb
push
pop
cmps
repnz
fwait
out
nop
fdiv
adc
jp
and
divps
cmp
fnsave
pop
dec
xchg
fistp
or
pop
cmps
add
ds
sub
mov
dec
mov
daa
jae
or
hlt
cmp
ror
cmps
repz
mov
sub
punpcklbw
daa
jae
or
test
inc
pushf
test
cmp
sti
dec
mov
dec
xchg
loopne
jb
adc
cmp
fstp
gs
pop
scas
add
ds
and
popf
out
jnp
adc
mov
and
add
out
cmp
adc
add
jge
addps
jbe
or
jmp
fs
push
lahf
call
ins
mov
popa
stos
sti
dec
xchg
fdiv
mov
sbb
iret
sbb
inc
cdq
call
imul
adc
imul
jl
sbb
add
loope
(bad)
in
sbb
imul
jle
adc
cmp
add
inc
nop
jmp
sbb
(bad)
push
fwait
in
jns
or
hlt
cmp
int
jo
push
pop
stos
cli
push
popf
jmp
ins
les
pop
stos
add
jmp
jle
push
pop
mov
push
call
fsubr
enter
push
push
test
ss
and
shl
jnp
daa
jl
sbb
add
xor
mov
aaa
adc
ins
mov
pop
movs
in
ss
outs
mov
inc
xchg
loope
jbe
sbb
push
pusha
test
sub
lds
pop
scas
cli
dec
cwde
out
ds
xor
sub
punpcklwd
cmp
shr
jge
and
sbb
adc
or
dec
xchg
out
ds
sub
mov
push
call
mov
aaa
mov
and
pop
mov
bound
dec
mov
xor
pop
outs
ret
mov
dec
mov
push
std
dec
xchg
out
inc
(bad)
in
jg
and
mov
pop
mov
push
cmps
repz
xchg
call
imul
xchg
loopne
xchg
sub
les
addr16
pop
movs
test
sub
enter
packsswb
dec
pushf
call
xchg
das
js
and
add
mov
and
adc
jmp
mov
sub
adc
or
dec
icebp
cmp
fisub
jae
pop
jns
push
pop
cmps
std
inc
cwde
out
ds
sub
ret
pop
imul
push
lahf
test
cmp
pop
push
stos
stc
inc
mov
cs
ins
mov
pop
stos
repz
cdq
in
mov
es
js
push
push
add
call
retf
mov
inc
mov
and
retf
mov
dec
xchg
jmp
or
ins
mov
inc
pushf
loop
jp
adc
add
cmps
test
aaa
mov
sub
aad
addr16
dec
mov
aaa
adc
outs
mov
push
mov
sbb
movs
lock
sbb
or
cmps
lock
nop
fild
jg
pop
ja
(bad)
mov
cmp
loop
adc
or
fs
inc
call
retf
mov
push
cmps
std
dec
sahf
cmc
ds
out
test
cs
and
sbb
or
test
inc
xchg
out
(bad)
fsub
or
pop
mov
dec
cwde
cmc
inc
nop
in
adc
jno
push
pusha
lods
cmc
dec
fwait
loope
jbe
sbb
adc
repnz
cwde
out
(bad)
fdiv
jl
and
mov
pop
movs
add
xchg
call
xchg
sub
sbb
pop
test
jp
punpckhwd
inc
mov
sub
pusha
lods
cmc
inc
sahf
lock
xchg
loop
mov
cs
adc
lods
cld
push
test
cmp
rcr
push
or
cld
dec
xchg
jecxz
xchg
push
js
or
xchg
jmp
mov
das
jle
sbb
or
xchg
jecxz
or
fs
cmp
xchg
in
mov
sub
mov
inc
sahf
jmp
and
adc
push
jns
and
and
sbb
inc
shr
jns
adc
cli
inc
xchg
jecxz
test
and
ret
mov
push
test
inc
(bad)
fnstenv
sbb
jp
or
scas
sti
push
mov
aas
mov
es
outs
mov
inc
mov
xor
leave
sbb
movs
repz
pushf
call
jb
sbb
adc
add
hlt
cmp
mov
pop
test
dec
call
(bad)
adc
push
test
inc
push
loopne
cmp
cmp
jbe
(bad)
and
ret
inc
(bad)
ss
test
mov
mov
push
fisub
push
int3
ss
sub
aaa
cmp
fidiv
cmp
shr
push
fdiv
mov
push
out
jbe
imul
cmp
sbb
sub
fld
sub
sub
jmp
les
in
ror
jae
js
mov
xchg
jmp
bound
inc
mov
popf
or
jle
adc
sub
adc
fcom
sub
xor
mov
(bad)
adc
jl
mov
ss
mov
out
cmp
xor
xor
xchg
pushf
test
je
inc
add
cwd
xchg
sub
add
sbb
sbb
jno
or
xor
pop
ret
add
and
cmp
and
mov
aad
popa
cmp
or
mov
xor
adc
inc
cmps
push
or
ss
retf
sbb
push
ss
aad
or
and
jle
add
mov
sbb
call
daa
xor
mov
pop
fidivr
cmp
scas
ss
aad
sub
dec
sbb
xor
in
xor
add
xchg
ss
pop
aam
retf
or
(bad)
ss
mov
push
cmp
js
push
fxch
jecxz
into
pop
mov
mov
arpl
dec
sbb
jne
mov
cmp
mov
mov
mov
mov
mov
sbb
out
cmp
into
imul
and
inc
aaa
mov
clc
fsubr
cmp
mov
or
adc
xchg
inc
dec
jl
jg
sbb
sub
cs
inc
or
mov
(bad)
mov
jecxz
jne
xchg
daa
cmp
push
or
popw
(bad)
lea
popf
mov
(bad)
cmp
icebp
lea
scas
cmp
cmp
dec
adc
cmp
jno
xchg
push
jae
dec
ret
push
add
mov
pop
call
push
loope
add
and
mov
jecxz
or
xor
cmp
add
ret
daa
push
dec
and
cmp
leave
(bad)
aad
dec
xor
vdivsd
cmp
jno
test
(bad)
cmp
test
xchg
sbb
mov
sbb
aam
or
push
cmp
dec
pop
data16
and
into
cli
and
jnp
mov
jne
pop
pop
pop
aam
or
lahf
outs
mov
call
pop
or
sti
fwait
push
sub
xor
in
fs
mov
mov
sub
retf
dec
mov
pop
clc
sbb
dec
mov
and
popa
push
cdq
imul
popw
outs
xor
cwde
aam
xor
pushf
ss
pop
mov
fwait
jg
ret
cmp
sbb
push
sub
or
out
div
xor
adc
hlt
fstp
lods
pushf
mov
sbb
push
(bad)
fnsave
push
sub
pop
jle
or
das
push
into
and
ds
mov
pop
xchg
hlt
cmp
xchg
(bad)
mov
dec
fsubr
call
push
mov
or
pop
das
push
adc
xor
cmp
mov
jo
dec
jbe
sub
lea
mul
add
xor
pop
mov
out
mov
into
lahf
cmp
and
adc
xor
daa
mov
and
ret
mov
fs
inc
pcmpeqb
das
lahf
mov
add
mov
mov
lods
dec
loop
xchg
jae
cmp
jbe
jae
xlat
jle
push
pusha
mov
jecxz
push
jecxz
add
push
add
xchg
mov
icebp
sti
int3
sub
lods
int3
cmp
sti
jne
in
(bad)
or
jl
jecxz
aaa
call
sub
outs
sbb
push
sub
je
retf
rol
in
(bad)
rcr
jae
aaa
adc
xchg
out
aad
mov
pushf
jecxz
out
in
bound
xchg
(bad)
pop
cmp
cmps
pop
lods
scas
cmp
ret
push
stc
loop
out
sbb
cwde
out
rcr
and
(bad)
lahf
rcl
xchg
js
mov
pop
sub
push
(bad)
sti
popf
out
sbb
dec
sbb
push
imul
jg
outs
test
inc
ret
mov
xor
push
mov
cmc
rcl
add
mov
mov
(bad)
cmp
push
add
iret
movs
pop
xor
pop
jp
push
mov
fsub
inc
loopne
xchg
sti
loop
aam
cdq
mov
movs
pop
sahf
ins
and
xchg
jp
mov
out
out
ja
mov
mov
nop
shl
js
mov
shr
jmp
push
prefetch
mov
or
jmp
mov
(bad)
mov
adc
push
push
xor
in
jmp
sbb
imul
push
loope
xchg
imul
push
jo
xchg
call
adc
lods
enter
jo
push
fs
mov
dec
cwde
push
dec
lea
jmp
pop
mov
sti
pop
dec
mov
iret
fcomip
cmp
adc
cmp
adc
rep
adc
mov
repz
lods
mov
push
loop
mov
push
inc
xor
pushf
sahf
mov
push
push
stc
pop
test
xor
mov
(bad)
cs
scas
loope
push
pop
mov
pop
int
jmp
test
inc
sbb
sub
pop
nop
or
and
loopne
rol
cmc
std
in
repnz
(bad)
xor
scas
ret
cmp
fstp
or
out
movs
fnstenv
xchg
mov
adc
sbb
adc
rcl
arpl
or
mov
jne
sbb
add
out
dec
push
ret
ret
cld
into
stc
sti
bound
cli
jecxz
sti
jmp
pusha
call
daa
shr
ficom
fadd
mov
clc
and
push
test
lds
repz
mov
aad
inc
fadd
call
pop
or
out
jns
push
data16
or
es
dec
mov
into
jae
data16
xor
or
add
xchg
dec
lahf
lods
pop
lods
call
loope
inc
sub
int3
outs
push
fcom
mov
jg
cld
push
hlt
pop
adc
jmp
aam
cmps
into
mov
xchg
xchg
mov
mov
mov
pusha
xchg
outs
add
lods
and
pop
mov
and
xor
rcr
push
ins
leave
push
inc
movs
ins
jae
into
ja
mov
fisub
inc
adc
pop
mov
call
(bad)
jb
inc
add
mov
mov
stos
(bad)
dec
test
jle
pop
je
cli
(bad)
jne
xchg
dec
pop
and
sbb
jmp
sahf
sar
sahf
js
ja
xchg
xchg
pop
popa
adc
popf
push
inc
jmp
scas
inc
xchg
xchg
jp
in
fld
jno
les
adc
push
mov
test
pmulhuw
mov
fadd
rcl
not
ret
lea
test
xlat
jmp
ja
scas
jl
popf
arpl
jns
fwait
repnz
inc
shr
push
pop
sbb
jae
jl
push
jle
xchg
xchg
fimul
mov
outs
cmc
test
test
in
ret
inc
push
je
fs
or
jo
loope
push
movs
loopne
call
inc
jns
out
sbb
cld
ficomp
cmp
sbb
lock
pop
pop
mov
pop
shr
sti
sbb
ss
and
inc
mov
addr16
out
dec
iret
pushf
(bad)
jnp
(bad)
mov
cmc
mov
mov
test
mov
repnz
paddb
imul
imul
ss
push
aaa
mov
test
dec
inc
dec
test
add
pop
push
xor
jno
das
push
mov
mov
mov
inc
push
stos
fcmovb
retf
push
mov
pusha
popf
push
mov
enter
mov
dec
inc
lock
jge
enter
fidivr
and
popf
into
xor
(bad)
hlt
into
clc
mov
aad
scas
ret
test
add
call
ror
xlat
xchg
push
jns
xor
daa
mov
(bad)
jbe
stc
in
push
inc
lods
dec
jg
ret
ds
cmps
pop
mov
sahf
aam
push
cmc
loop
add
fs
stos
cmp
retf
daa
mov
aad
inc
repnz
daa
rcl
fmul
in
jmp
cwde
lahf
cs
arpl
push
inc
inc
mov
pop
dec
push
pop
jmp
push
ja
imul
pop
test
cmp
les
sub
and
inc
adc
sub
scas
jp
rol
jmp
dec
or
in
test
ds
push
and
popw
push
mov
retf
ror
add
aaa
mov
(bad)
mov
mov
mov
inc
or
jns
rcl
cmp
aas
or
push
mov
inc
mov
shl
into
(bad)
and
cld
push
ffreep
pop
les
ffreep
and
rcr
jp
fistp
pop
out
jne
and
cmp
call
ss
xlat
ss
(bad)
ss
loope
jns
in
mov
or
ss
add
shr
inc
ss
xchg
mov
sub
and
push
xchg
popa
mov
loopne
test
fs
sbb
jbe
xor
fst
pop
mov
mov
push
dec
jge
cwde
xor
loop
mov
cdq
add
lods
xor
adc
fucom
in
loope
repnz
arpl
repnz
(bad)
add
push
das
jns
dec
stos
lods
js
mov
pusha
aam
das
sub
dec
xlat
out
sbb
inc
rol
scas
out
mov
add
shl
cmp
enter
xor
xchg
fisub
clc
xor
mov
rol
mov
push
jmp
loop
mov
push
jmp
loop
mov
push
jmp
loop
mov
push
jmp
loop
ror
mov
ror
jg
pop
cmp
sub
iret
jg
pop
xchg
sahf
arpl
jl
shr
mov
jnp
and
pop
sub
pop
lock
pop
out
loope
std
retf
add
outs
shr
imul
jmp
aam
mov
and
jecxz
in
sub
dec
sar
cmc
test
push
arpl
add
add
mov
in
sub
xchg
ds
and
imul
lods
fimul
or
push
cmp
mov
cmp
ret
ret
cmp
inc
inc
push
push
mov
fdiv
jne
xor
ins
addr16
out
js
mov
xchg
xor
cdq
sbb
shl
fsubp
dec
sbb
lds
xor
cmps
imul
imul
mov
aad
(bad)
out
sbb
mov
mov
scas
in
aam
xor
jbe
push
outs
push
jbe
scas
dec
std
adc
sbb
pusha
and
sub
sbb
icebp
out
jecxz
jmp
das
enter
mov
mov
add
jecxz
addr16
sub
xchg
mov
cmp
or
or
mov
cmps
push
jo
inc
mov
fidivr
aas
xchg
xor
test
imul
adc
cmp
in
dec
imul
sub
rcl
push
sub
imul
call
and
push
hlt
push
xchg
adc
dec
je
xor
ins
out
neg
jge
call
sbb
stos
mov
icebp
test
sub
lods
iret
or
hlt
mov
popf
stos
and
xchg
inc
outs
es
inc
outs
dec
enter
inc
(bad)
fld
loope
sub
mov
aam
call
cdq
data16
scas
add
add
mov
jns
hlt
rcl
sub
dec
jb
xchg
sub
mov
or
mov
inc
pop
mov
adc
je
push
mov
stos
arpl
add
sub
movs
sbb
add
aaa
mov
mov
jo
int3
out
adc
dec
bound
xor
push
(bad)
sbb
ins
lahf
ror
jae
cmp
vminsd
gs
xchg
mov
stos
jmp
xchg
dec
movhlps
add
dec
lock
mov
cs
xchg
out
xchg
imul
cmp
mov
push
enter
popf
mov
jb
not
dec
ds
cmps
inc
jle
mov
add
lds
out
inc
pop
(bad)
stc
add
pushf
adc
dec
nop
mov
add
mov
ins
push
dec
cdq
sub
sar
lds
dec
sbb
cmp
xchg
not
sub
push
div
out
jle
out
xchg
or
pop
rcl
jne
iret
pop
push
sbb
dec
les
add
in
inc
cmps
arpl
sbb
popa
add
jg
mov
les
loop
push
shr
sub
pop
mov
cmc
pop
inc
loope
mov
sbb
es
test
test
scas
aas
xchg
or
jl
push
(bad)
and
shr
frstor
jns
jnp
jmp
mov
inc
lea
adc
rcr
rcl
aas
inc
mov
pop
push
adc
out
adc
enter
fidiv
enter
test
dec
movs
and
jnp
inc
xchg
ins
aad
jo
fwait
shl
int3
mov
adc
mov
xchg
fstp
jns
pushf
test
ins
inc
in
fwait
loop
pop
cmps
mov
int
pop
xchg
sbb
pop
aad
(bad)
push
jecxz
xchg
mov
xchg
dec
imul
xchg
mov
push
or
push
shl
or
pushf
daa
lahf
(bad)
pusha
outs
jmp
(bad)
mov
sub
fs
int3
mov
int
mov
in
fcom
mov
mov
sbb
xor
(bad)
pop
xchg
into
jo
add
dec
pop
or
sbb
std
xchg
out
stos
int3
xor
ret
adc
jge
cmp
xor
ds
ins
into
cmp
sub
sti
mov
push
mov
and
lea
add
or
cmp
fbstp
inc
fidiv
pop
push
cmp
gs
pop
push
or
or
scas
push
mov
or
nop
xchg
mov
sub
aad
stc
popa
(bad)
push
pop
and
ins
cmp
xchg
sbb
and
mov
pop
in
bound
mov
mov
idiv
and
or
mov
mov
sub
or
adc
and
add
mov
or
nop
sbb
push
dec
adc
popa
gs
das
sbb
or
icebp
fmul
mov
mov
cmp
push
mov
aam
xchg
shl
jecxz
call
cmp
gs
sub
fcomi
jno
xchg
test
push
sahf
push
aas
push
dec
ffree
stos
mov
scas
mov
aam
dec
mov
sbb
ss
hlt
jge
mov
jmp
fisttp
fst
add
gs
pop
daa
call
repz
mov
enter
mov
shl
(bad)
mov
in
out
data16
test
int3
or
xor
ret
(bad)
(bad)
and
stos
dec
cmp
sbb
(bad)
sbb
xor
xchg
add
dec
nop
mov
or
add
fild
lods
clc
and
push
push
aam
mov
test
outs
mov
mov
leave
dec
popa
push
jecxz
adc
cmp
dec
mov
cli
push
fcmovnb
inc
test
xor
push
mov
fisub
push
ret
xchg
jmp
cmc
pop
retf
das
add
sbb
dec
test
aam
mov
add
xor
jg
push
out
int3
xchg
mov
fpatan
outs
or
xlat
jmp
lods
xor
and
cmp
push
push
jmp
ret
push
inc
mov
imul
xchg
and
cmp
retf
sub
xchg
xor
and
mov
cmp
addr16
cld
jnp
sbb
jnp
jns
je
(bad)
stc
mov
adc
or
cli
sar
add
dec
mov
ss
stos
dec
xchg
mov
xor
cmp
inc
jae
cwde
or
shr
neg
push
xor
cmp
or
mov
ins
hlt
fwait
lods
cld
mov
ret
ret
and
call
out
mov
push
xor
jnp
sub
call
and
fsubr
cmps
or
(bad)
icebp
xlat
les
push
cld
jne
cmp
rcr
cmp
mov
ja
push
mov
inc
dec
test
test
dec
cdq
rcl
jmp
arpl
ja
xchg
and
idiv
push
or
out
fnstsw
(bad)
cmp
and
fisttp
loopne
sub
inc
aas
mov
push
xchg
push
pop
dec
jl
(bad)
fcomp
cmp
mov
pop
inc
les
mov
movs
sahf
mov
cmp
enter
add
fmul
mov
xchg
xchg
test
lock
cwde
and
mov
push
sub
cmp
leave
sub
imul
ins
cmp
or
and
push
and
adc
out
pop
pop
retf
push
(bad)
jmp
mov
inc
outs
mov
fisub
xor
repnz
iret
stc
popa
jecxz
in
sbb
adc
and
iret
mov
jbe
ds
xchg
or
pop
cmp
dec
sbb
and
and
sub
xchg
cmp
inc
mov
pop
mov
mov
mov
mov
adc
js
push
out
stos
mov
or
dec
push
xor
imul
jmp
ja
(bad)
fnstcw
out
xor
icebp
aaa
outs
mov
out
movs
(bad)
cld
push
cli
inc
imul
cli
xor
push
cmp
fwait
add
inc
and
xchg
inc
sub
cmp
pop
or
sub
shr
cmp
jge
push
sbb
adc
mov
dec
jb
ret
dec
mov
test
add
and
pushf
outs
mov
outs
fld
out
cmp
jbe
fwait
adc
and
ret
mov
push
xchg
adc
mov
jl
rcr
xchg
test
jmp
inc
mov
cli
dec
push
pop
ret
fdivr
movs
sbb
pop
push
stos
push
leave
cmps
fst
imul
mov
stc
mov
mov
movs
pop
int3
adc
mov
cmp
out
jl
cwde
add
add
inc
aaa
test
adc
inc
push
js
mov
imul
cmp
clc
cmp
popf
mov
dec
(bad)
test
mov
out
sbb
jle
stc
(bad)
out
jecxz
es
bound
(bad)
idiv
(bad)
and
sbb
mov
dec
leave
js
mov
test
test
aas
inc
out
xor
mov
jo
jle
jne
jo
pop
outs
jg
into
(bad)
out
push
(bad)
dec
jmp
pop
push
movs
xchg
and
sub
cmps
inc
jne
cs
cmp
(bad)
fld
int
cmp
xchg
lods
cld
xchg
cmc
pop
xchg
push
fistp
mov
sub
cli
stos
adc
ins
mov
jg
mov
push
mov
popa
cmp
imul
xchg
cmp
sbb
push
arpl
cmc
cdq
push
fdiv
arpl
sub
xchg
add
jns
icebp
ss
add
jne
ret
shl
inc
jmp
mov
xchg
mov
div
mov
jmp
fst
jbe
mov
ins
pop
mov
push
das
push
int3
fwait
lods
sbb
and
pop
jmp
test
movs
out
lods
out
xchg
int3
sbb
and
inc
jl
stos
and
sub
nop
aam
(bad)
out
mov
jge
pop
shl
xchg
pop
push
jmp
add
fcmove
gs
xchg
(bad)
add
adc
fwait
fs
dec
imul
fisub
scas
shl
add
cmp
jecxz
ror
add
mov
pop
inc
mov
dec
or
(bad)
retf
sbb
cwde
pop
inc
add
(bad)
adc
(bad)
fmulp
sbb
jmp
(bad)
aaa
push
dec
lahf
cmp
(bad)
and
cmps
pop
mov
iret
push
xor
cmp
hlt
mov
cmp
out
icebp
sahf
sub
gs
aad
jmp
dec
xor
rcr
cmp
xor
aam
es
jo
sti
pop
push
mov
mov
and
dec
pop
mov
push
pop
xor
mov
fistp
inc
dec
ins
test
mov
or
(bad)
lds
(bad)
jl
pusha
push
dec
push
xchg
sub
aas
jno
jp
bound
idiv
hlt
and
hlt
dec
cdq
dec
(bad)
stc
mov
xor
push
mov
hlt
sub
jae
mov
adc
fdiv
inc
and
rol
out
daa
or
leave
adc
add
jl
ret
jno
ds
push
jge
cmp
inc
mov
jnp
adc
adc
daa
pop
sub
xchg
(bad)
pop
add
lods
add
pop
addr16
dec
lds
(bad)
mov
imul
xchg
xor
loopne
jmp
inc
cli
(bad)
mov
test
shl
cli
push
fwait
add
add
fcomp
aad
out
inc
jne
jmp
sbb
sbb
sbb
sub
jmp
pop
add
test
adc
push
or
dec
fidivr
fmul
xchg
or
sub
rol
loop
out
mov
shr
popf
mov
loope
and
xchg
mov
popf
(bad)
or
jg
(bad)
or
fistp
xor
mov
xchg
ins
leave
pop
sub
dec
stos
ja
fild
cmp
mov
adc
xchg
not
or
xchg
adc
rcl
jmp
je
stc
mov
push
mov
idiv
jmp
nop
xor
mov
xchg
adc
leave
stc
adc
ja
cmp
cdq
ret
inc
mov
gs
(bad)
xor
or
xchg
jmp
push
push
mov
sub
adc
mul
rol
mov
clc
mov
repz
jbe
arpl
xchg
dec
add
mov
dec
ins
adc
loopne
cmp
out
sub
sbb
enter
or
loope
jo
push
push
cmp
jnp
movs
adc
fidiv
popf
sete
jmp
retf
jbe
sub
je
push
pop
gs
rol
cmp
call
adc
out
lock
fdiv
fwait
push
mov
jnp
cwde
push
addr16
cmp
jbe
popf
jle
pop
data16
or
sub
aas
jle
in
aad
in
pop
bound
cmp
add
mov
sbb
inc
ins
int
dec
imul
or
out
retf
and
pop
icebp
xchg
movs
fnstcw
add
(bad)
or
and
out
loope
mov
popf
inc
and
cwde
out
stos
cmovs
and
jbe
add
adc
fidivr
mov
push
inc
repz
push
inc
in
jo
dec
add
enter
cmp
repnz
int
into
(bad)
and
lods
je
daa
sbb
xor
repnz
je
scas
dec
call
or
xchg
and
xchg
dec
outs
repnz
mov
test
or
dec
iret
mov
cwde
and
sub
lds
(bad)
adc
and
adc
push
repz
in
aas
inc
mov
movs
pop
mov
cdq
lock
push
je
xchg
shl
(bad)
mov
pop
jns
outs
into
rcr
mov
rcr
pop
adc
cmp
retf
add
jmp
jmp
clc
gs
xchg
ins
shr
jb
icebp
sbb
ret
mov
add
sub
test
and
jecxz
shr
cli
cmp
mov
pushf
pop
jnp
pushf
jmp
cmp
pusha
aas
xchg
outs
mov
mov
mov
cmp
lods
mov
mov
xor
iret
inc
or
leave
call
mov
sbb
clc
sub
mov
dec
hlt
dec
mov
mov
push
or
mov
sar
mov
fstp
cmc
les
xor
dec
lods
(bad)
jo
mov
data16
add
lea
stos
cmp
fsub
sbb
cmp
mov
ja
sbb
scas
call
(bad)
jg
xor
lods
mov
and
enter
cmp
scas
sbb
arpl
jecxz
test
cli
cli
jmp
push
movs
cmps
cmp
jle
jg
ja
mov
sti
adc
mov
xor
in
sahf
out
scas
les
cmp
outs
scas
cwde
mov
mov
push
ret
sbb
sub
xchg
xor
call
fidivr
fldenv
fisubr
sub
push
inc
push
in
repnz
arpl
mov
call
scas
aam
(bad)
xlat
xlat
(bad)
(bad)
dec
(bad)
dec
cmp
add
xchg
(bad)
in
jo
adc
or
outs
fcom
add
lds
xor
cmps
jmp
xchg
jmp
pop
jne
push
ror
hlt
sahf
jmp
xchg
(bad)
dec
test
mov
xor
loope
inc
push
jecxz
rcr
xchg
pop
imul
sbb
sbb
ret
clc
xor
mov
adc
hlt
xor
adc
xchg
xchg
scas
mov
cmps
sbb
mov
shr
mov
sub
daa
jg
retf
sbb
push
jl
mov
popa
scas
stos
imul
add
out
je
mov
scas
lahf
in
movs
push
mov
cmp
ins
test
sub
add
and
shr
dec
pop
xor
mov
adc
jae
movs
sbb
out
cmp
dec
in
fnstsw
and
lods
or
xor
call
inc
jecxz
sar
aad
jo
xor
sub
lods
je
push
dec
xchg
xor
js
int3
adc
xchg
jecxz
push
jne
push
lock
sbb
inc
test
ss
fcmovnu
and
stos
add
les
or
call
(bad)
cmps
fidiv
mov
lahf
in
jmp
push
push
out
add
in
add
test
push
dec
mov
jl
pop
dec
pop
scas
mov
mov
and
push
dec
dec
adc
mov
sub
das
pop
test
jae
sub
push
mov
ja
stos
outs
out
pushf
sbb
push
mov
pop
adc
shl
shl
mov
and
add
push
int
loop
int3
push
xor
adc
or
stc
dec
mov
sar
out
sub
push
sti
fdiv
mov
adc
push
xchg
sar
mov
(bad)
mov
mov
fs
and
pop
cs
jne
jmp
sbb
in
out
xchg
jge
fdivrp
loopne
and
push
mov
mov
mov
sub
cdq
add
enter
in
add
fist
mov
nop
pusha
pusha
out
retf
mov
sub
mov
icebp
cs
adc
ret
jmp
dec
add
movs
pop
ret
mov
cdq
inc
cdq
loop
stc
mov
or
mov
or
pop
sbb
add
out
add
sbb
in
or
pop
push
shr
rol
sub
dec
lods
inc
jmp
sub
jo
aas
push
or
sbb
cmc
dec
jno
jnp
adc
int
jnp
addr16
ds
jge
jo
out
xchg
push
std
aas
cs
dec
adc
push
xchg
jmp
jb
mov
int3
fucom
dec
mov
mov
mov
jbe
inc
xchg
rcl
push
cld
sub
mov
sbb
std
lahf
mov
xchg
shl
out
push
test
icebp
adc
or
xchg
adc
arpl
adc
push
aaa
lock
mov
sub
lods
iret
scas
inc
pushf
dec
push
mov
mov
cmp
push
(bad)
dec
inc
js
in
dec
pushf
adc
inc
inc
or
mov
jnp
ds
jle
retf
cmps
ror
sub
mov
push
sti
pop
(bad)
fdiv
in
adc
test
into
mov
jnp
push
pop
in
sbb
sub
or
push
jecxz
mov
pusha
push
loope
xor
jecxz
arpl
mov
jle
mov
ins
ins
out
stos
lods
daa
mov
sub
movs
and
mov
pop
mov
popa
mov
adc
call
mov
shl
jmp
jge
stos
mov
jbe
test
icebp
sub
mov
dec
jg
int
in
add
inc
pushf
pushf
call
addr16
f2xm1
icebp
mov
mov
pop
push
inc
push
and
ja
mov
inc
and
or
clc
retf
fst
jns
icebp
dec
cld
xchg
stos
(bad)
neg
popa
outs
adc
jecxz
or
xchg
rol
or
loope
pop
into
xor
out
mov
sbb
aad
xor
aaa
ds
ins
adc
stos
add
test
jbe
vmovhps
ror
push
sbb
xchg
sbb
je
xchg
imul
adc
adc
or
push
fnsave
fs
icebp
jmp
(bad)
iret
xor
fdiv
dec
clc
shr
(bad)
call
dec
aaa
fldenv
popa
xor
scas
out
repz
mov
or
and
mov
sub
mov
push
div
rcr
inc
mov
adc
cs
scas
and
sub
sbb
dec
xor
dec
test
fcmovb
fwait
and
jnp
push
into
test
inc
jge
inc
test
pop
enter
xchg
add
push
cmps
push
adc
xor
fwait
std
pop
adc
pop
and
and
test
mov
stc
fistp
and
or
mov
mov
and
mov
or
popf
or
ret
mov
sbb
bound
inc
(bad)
jno
xchg
fimul
test
jae
int3
push
neg
dec
lods
popa
sbb
hlt
cmp
pushf
(bad)
xchg
imul
push
push
in
xchg
inc
xchg
jo
xor
jmp
jnp
xchg
popa
movs
xchg
xor
or
cmps
fwait
lock
jmp
gs
mov
add
out
loopne
stc
imul
cmp
inc
xor
push
dec
addr16
pop
sti
ss
add
mov
xchg
cwde
jp
shl
adc
inc
ins
mov
pop
xor
jno
jl
test
mov
inc
jb
outs
jae
fimul
(bad)
js
fistp
push
clc
arpl
jb
cmp
pushf
std
sub
pop
(bad)
xor
das
test
ins
jns
mov
dec
aaa
dec
jle
and
imul
aad
int3
push
cmp
test
stos
pop
xor
inc
mov
fxch
cmp
test
xchg
cmps
rol
cmp
sub
jmp
les
sub
loopne
sbb
lds
aam
cmp
(bad)
add
push
ret
call
push
jge
inc
mov
inc
je
xor
sbb
and
out
pop
or
(bad)
and
loopne
or
lods
or
pop
jb
dec
or
cld
mov
into
(bad)
pop
adc
xor
inc
mov
repz
mov
imul
adc
leave
adc
add
lea
repnz
inc
pop
and
mov
js
(bad)
in
cwde
imul
xor
movs
sbb
repnz
retf
sub
fimul
clc
pop
mov
inc
cmp
es
out
xor
jo
mov
mov
jl
stos
push
retf
sbb
sbb
cld
add
and
out
test
cmps
inc
cdq
and
push
jae
int3
aaa
jae
ret
repz
sub
(bad)
out
or
pop
les
in
in
pcmpgtd
and
ret
jae
mov
add
das
xchg
or
dec
das
enter
jmp
int3
add
mov
test
not
rcl
jp
mov
aaa
mov
scas
out
push
xchg
repz
inc
cmc
outs
fistp
cmp
fsub
mov
mov
cwde
and
adc
add
jecxz
lahf
test
movs
(bad)
enter
popa
stc
adc
and
push
or
sbb
mov
xor
push
and
inc
xor
hlt
add
cmp
gs
inc
xchg
rcr
mov
add
xchg
call
add
cmps
out
cmp
rol
lods
inc
mov
ins
dec
sub
in
test
mov
add
pop
mov
rcr
into
adc
xchg
adc
dec
out
inc
xchg
int
ret
or
and
stos
and
cmps
pop
sub
in
cld
jmp
push
mov
xlat
inc
repz
dec
pop
iret
clc
mov
movs
pop
mov
repnz
in
into
call
les
das
add
pop
jo
jmp
out
fwait
xchg
push
inc
ret
scas
push
mov
mov
cmp
nop
fnstcw
arpl
shl
shrd
lods
in
mov
fcmovnu
pop
lods
scas
and
(bad)
sbb
and
add
ds
adc
addr16
add
add
test
dec
push
int3
mov
mov
arpl
sar
sbb
popa
and
lahf
dec
and
push
xor
mov
and
and
lods
pop
fidiv
std
jl
xchg
push
cmp
xchg
dec
add
jmp
add
pop
outs
out
inc
push
scas
mov
pop
cmc
xchg
adc
adc
push
mov
mov
aad
pushf
pop
inc
or
xchg
(bad)
out
in
(bad)
push
sbb
hlt
dec
sbb
fidivr
repz
sar
sbb
xchg
adc
lds
add
es
cmp
dec
ss
aaa
imul
lods
cmp
mov
into
pop
cmp
ret
arpl
jmp
push
jl
push
popa
cwde
mov
sub
idiv
cmps
call
sbb
std
mov
pop
adc
mov
mov
or
loopne
mov
jl
jg
sbb
stc
add
cmc
loopne
push
xchg
nop
sub
and
or
pop
leave
mov
sub
mov
ja
lods
scas
or
cld
mov
inc
mov
ins
ja
fwait
sbb
pop
mov
mov
aas
cwde
stos
pushf
out
or
xchg
jmp
pop
mov
inc
mov
mov
cmp
(bad)
xor
pop
les
dec
xlat
shr
jge
rcl
jo
push
mov
xor
xor
movs
ja
out
stos
cli
xchg
sbb
test
cmps
jmp
fistp
dec
arpl
xchg
ret
xchg
sub
xor
cmp
sbb
jno
cmps
pop
mov
cmp
outs
mov
cld
test
or
pop
xor
sub
xchg
inc
dec
dec
imul
int3
(bad)
(bad)
or
pusha
je
stos
not
xchg
pop
je
popf
icebp
out
arpl
mul
jmp
or
dec
ret
sub
(bad)
sbb
rcl
dec
ds
mov
push
jecxz
imul
push
mul
cdq
pop
gs
ret
int
into
cmp
into
mov
cld
xor
das
xor
hlt
xor
and
call
scas
(bad)
sbb
leave
rol
fcmovnbe
jb
mov
mov
sbb
sbb
retf
inc
jmp
fnstenv
add
sub
pop
das
ficomp
int
inc
hlt
dec
popf
adc
enter
cmp
test
rol
(bad)
dec
add
lahf
fwait
pop
jo
enter
outs
mov
cmps
add
lods
inc
je
(bad)
scas
mov
(bad)
sub
ds
sar
popa
out
jb
or
add
mov
jnp
jg
add
xchg
mov
push
inc
lahf
push
xchg
(bad)
pop
shr
or
cmp
out
icebp
dec
cld
push
pop
fs
add
sbb
adc
mov
cmps
or
jle
fwait
aam
inc
sti
das
pop
add
push
dec
jnp
mov
test
xchg
dec
cmp
fistp
jl
push
xchg
dec
pop
retf
ds
sub
xchg
data16
rcl
dec
pop
stos
fbstp
fldpi
xor
mov
sbb
push
or
ror
jns
push
adc
cmp
sbb
xor
push
xchg
shr
xchg
add
add
aad
pop
push
dec
dec
jns
mov
sbb
sub
inc
xchg
jo
cmp
les
jns
adc
jae
in
je
shl
push
mov
mov
out
push
repz
push
hlt
(bad)
(bad)
jo
inc
sub
(bad)
dec
jge
repz
dec
jmp
gs
lahf
outs
sub
adc
outs
outs
addr16
out
sbb
push
jno
push
xchg
xchg
les
loop
jmp
and
xchg
loop
mov
ins
or
xchg
adc
fucomp
ins
push
fcmovnb
retf
mov
pop
pop
sbb
inc
test
mov
cld
in
sbb
outs
cmps
cwde
iret
(bad)
cmp
sub
sbb
cdq
fstp
movs
pop
jo
dec
mov
push
fidivr
stos
test
mov
adc
rol
xor
sbb
and
bnd
add
dec
in
retf
push
loopne
mov
retf
cmp
sti
xor
out
push
mov
ja
pop
and
push
ins
mov
imul
push
out
je
push
nop
ss
or
ret
cdq
outs
sbb
add
repnz
mov
push
xor
fcom
pop
sbb
fwait
outs
out
jb
adc
sub
jae
je
dec
inc
mov
je
and
fs
mov
arpl
add
shl
into
dec
push
lds
adc
retf
add
or
adc
and
nop
or
xor
jmp
cmc
sti
cdq
call
sbb
sub
cmp
jmp
push
imul
dec
dec
clc
jmp
jg
adc
pop
mov
fsub
pusha
ja
inc
test
sbb
int
fistp
mov
retf
lock
mov
sbb
ins
xor
cli
lea
stos
cld
xor
push
push
ins
sbb
aaa
pushf
loop
add
aas
(bad)
out
(bad)
cld
out
fsubr
xchg
cdq
xchg
arpl
outs
add
imul
jae
add
pop
sbb
add
cmp
dec
mov
mov
mov
pop
int3
cmp
xor
adc
enter
cmc
out
inc
test
xlat
or
sub
pop
xor
mov
jb
add
imul
or
test
cwde
lds
stc
mov
nop
xor
(bad)
mov
test
lds
sbb
mov
jns
cmps
cdq
mov
outs
mov
mov
fstp
fidiv
sbb
arpl
push
inc
test
push
fdivr
call
cmc
cmps
stos
sbb
push
aas
repz
xchg
loopne
out
in
ins
or
sbb
inc
pushf
mov
sete
pop
ret
loope
fadd
jl
stos
dec
xchg
mov
mov
and
xchg
out
(bad)
mov
add
pop
mov
mov
mov
add
movs
fldcw
enter
retf
cmp
cli
in
pushf
(bad)
int3
ss
jg
stc
pop
xor
xchg
xor
std
or
push
mov
aaa
pushf
jl
stos
pop
push
clc
cdq
mov
loope
mov
hlt
fsub
push
dec
adc
jae
les
lock
push
fmul
add
adc
mov
mov
adc
jb
aas
out
cmp
hlt
adc
inc
icebp
mov
adc
pop
cdq
movs
bound
and
dec
sar
cli
ret
pop
mov
ins
and
fistp
cwde
inc
push
mov
jo
outs
scas
sbb
cmc
mov
xchg
(bad)
outs
sub
into
adc
or
sbb
sbb
dec
aaa
xchg
jp
scas
std
dec
mov
mov
jle
sub
mov
mov
jge
bound
int3
ja
inc
cmp
jae
std
pop
mov
loope
fisubr
aam
sbb
pop
inc
mov
pop
les
dec
lock
cmps
int3
cs
in
jnp
xchg
cmp
mov
mov
ja
loopne
xchg
ret
or
movs
retf
add
pop
pop
adc
cmp
shl
in
int
add
mov
mov
xchg
mov
adc
inc
lea
mov
xchg
in
add
stos
cld
fwait
lea
lods
cmps
adc
mov
and
or
ss
xor
data16
mul
and
inc
sub
test
je
ret
mov
jo
xor
dec
mov
jecxz
sub
imul
mov
pop
mov
pop
aam
ins
jmp
cmp
push
les
sbb
inc
add
xor
push
sbb
mov
pop
(bad)
lods
fld
je
mov
push
pop
retf
jmp
or
rep
nop
scas
loopne
hlt
inc
outs
cli
or
shr
mov
fwait
or
mov
mov
inc
jmp
adc
icebp
adc
dec
ds
loope
dec
mov
jl
mov
inc
lods
clc
cmp
mov
fsubr
inc
cmp
loope
adc
stos
adc
mov
inc
or
pop
xor
sbb
retf
das
pop
inc
and
cmp
cpuid
inc
jl
push
(bad)
push
mov
and
mov
mov
push
pop
jmp
imul
movs
movs
sbb
std
loopne
sbb
adc
ret
jecxz
gs
or
xor
xchg
loope
jo
mov
fcomp
outs
out
pop
scas
retf
add
cmp
sar
mov
mov
iret
mov
outs
mov
fst
sbb
xchg
pop
fldenv
and
into
mov
mov
add
(bad)
mov
mov
out
bound
jnp
imul
int3
in
ret
jl
push
push
stos
movs
push
ror
test
and
jg
jg
mov
xor
scas
xor
out
je
out
push
imul
xchg
sahf
(bad)
out
(bad)
sar
imul
inc
mov
cmp
add
adc
shl
pop
mov
and
xor
mov
push
pop
cwde
mov
scas
mov
mov
or
popa
jnp
loop
sbb
fild
mov
int
xchg
jmp
xlat
jb
(bad)
adc
jp
loop
xchg
sbb
shl
mov
inc
shl
sub
pop
pushf
xor
mov
add
scas
dec
and
push
pop
dec
push
retf
test
loop
sbb
sub
out
in
paddw
ins
lds
mov
repnz
xchg
ins
cld
je
popf
fld
call
push
or
cdq
xor
fisubr
jo
xchg
dec
jle
dec
test
mov
sub
ja
gs
sub
lea
xchg
repz
and
or
jno
ret
scas
mov
sbb
add
dec
loope
imul
inc
out
cmp
push
adc
neg
or
add
ins
dec
aad
xor
pop
jb
dec
dec
imul
or
hlt
clc
pusha
dec
adc
sahf
retf
das
call
cmp
push
es
jge
outs
lods
sar
sbb
push
imul
jle
inc
add
in
loope
cmp
iret
xor
mov
fimul
out
lods
sbb
add
bswap
cld
fsubr
dec
stos
sar
ror
sub
push
or
adc
faddp
fs
movs
ror
add
cdq
push
ins
inc
aaa
(bad)
ins
xor
ds
xchg
data16
idiv
test
inc
(bad)
cwde
adc
mov
aam
pop
fnsave
add
and
push
xchg
jmp
jnp
add
mov
je
shr
fmul
cmp
pop
and
stos
test
lahf
add
mov
out
ins
cmps
and
test
pop
jae
adc
mov
jp
daa
adc
add
mov
or
jecxz
sbb
mov
mov
jnp
pop
paddsb
adc
jecxz
in
(bad)
lds
pop
dec
pop
in
loopne
and
lods
sbb
xor
push
pop
dec
add
mov
aaa
xor
inc
mov
sti
sbb
inc
pushf
push
jle
pop
sub
lahf
or
cmp
mov
dec
in
fnstsw
inc
ret
cmp
adc
fcmove
mov
(bad)
cmp
pop
add
inc
jbe
ja
jmp
test
out
scas
das
int
dec
fucom
popa
jmp
fld
cdq
dec
or
shr
arpl
push
rol
jmp
out
fcomp
xchg
mov
das
arpl
mov
test
stos
vmovupd
push
scas
mov
xor
pop
jmp
in
scas
lds
push
pusha
into
movs
mov
push
sub
in
adc
daa
add
cwde
(bad)
xor
leave
dec
or
inc
and
inc
jae
xchg
sub
inc
(bad)
in
pusha
fnsave
daa
out
jmp
out
test
loope
adc
jmp
dec
and
pop
in
bound
retf
xchg
ss
jmp
js
add
pop
xchg
ret
mov
mov
push
push
jo
repz
call
xor
je
jo
jmp
cbw
addr16
addr16
inc
inc
in
dec
mov
pop
adc
lods
pop
out
xchg
loopne
mov
fwait
mov
icebp
mov
daa
sub
mov
push
fisttp
sub
xlat
popa
(bad)
into
mov
adc
int
test
int3
xchg
or
aad
pop
retf
mov
or
movs
je
mov
fdivr
cmps
or
sub
jecxz
cmps
and
sti
pop
in
pop
outs
fadd
sub
cs
aad
mov
inc
aad
xchg
jbe
dec
cmp
pop
adc
dec
retf
lock
and
mov
jno
pop
int3
shl
xchg
(bad)
jmp
xor
jg
sub
inc
jecxz
mov
xchg
pop
push
scas
vfrczss
mov
inc
jp
fdivr
ins
aam
sbb
jb
jne
xor
jl
push
dec
jmp
sub
cmp
inc
xor
out
lahf
sahf
cmp
xor
call
out
sub
repnz
add
imul
fwait
in
inc
fstp
fwait
(bad)
push
arpl
cmp
inc
repz
push
jmp
jbe
pop
sahf
sbb
add
inc
mov
scas
pusha
add
stc
ja
ficomp
jle
push
sub
nop
(bad)
jbe
add
dec
xchg
or
out
sub
push
sbb
sub
in
push
cmp
pop
scas
sbb
pop
sbb
push
and
or
idiv
mov
cmp
test
cwde
jge
jb
push
pop
mov
fwait
outs
into
les
stos
mov
sbb
out
push
lahf
out
repnz
fdecstp
int
xchg
retf
dec
xor
les
inc
push
pop
xor
mov
(bad)
or
dec
out
add
mul
xchg
imul
add
(bad)
mov
mov
xchg
call
dec
ja
xchg
ja
retf
enter
outs
mov
loope
ja
xor
push
aaa
ds
call
push
mov
jl
sti
jae
out
int
pusha
sub
imul
jmp
add
push
fwait
outs
mov
ins
xchg
jae
mov
int
add
popa
call
sbb
stos
pushf
dec
jae
push
outs
xlat
sbb
mov
mov
mov
addr16
jge
push
or
iret
fld
shr
adc
movs
dec
movs
das
inc
mov
ret
ror
es
xor
out
stos
ss
adc
dec
xor
call
cmp
push
jecxz
enter
jo
sbb
mov
add
pop
inc
sub
lock
enter
test
pop
retf
shr
dec
ror
rcr
add
dec
sbb
xor
arpl
rol
xchg
leave
mov
push
push
ficomp
push
cmc
leave
pop
jp
out
or
push
add
scas
cmp
add
test
loope
or
lods
mov
lea
sbb
test
in
cdq
adc
xor
arpl
pop
jmp
lea
jno
push
push
out
call
(bad)
cli
inc
call
pushf
cdq
rcr
push
xchg
fld
psubb
jmp
lods
pusha
dec
outs
adc
push
and
jecxz
sub
push
out
push
shl
shl
es
cmp
mov
inc
mov
out
icebp
dec
cmps
pop
pop
cmp
xchg
or
mov
jg
xchg
fisubr
outs
inc
and
dec
sbb
push
mov
fisub
add
sbb
gs
movs
inc
mov
fadd
hlt
add
mov
and
les
(bad)
stc
imul
stc
stc
je
xchg
out
sbb
push
sub
dec
int
shl
test
xchg
jmp
add
pop
pusha
repnz
retf
loop
rcl
or
mov
shl
fwait
repz
push
call
sar
das
fwait
and
int
xchg
retf
movs
jmp
(bad)
sub
aad
pop
and
sub
jmp
imul
push
retf
inc
sbb
scas
pushf
ror
mov
imul
icebp
inc
cmp
dec
jne
xchg
xor
in
out
into
rcl
mov
xchg
call
ret
daa
add
jmp
mov
push
or
sar
adc
jecxz
pop
cmp
addr16
xchg
in
xchg
pop
dec
mov
popa
inc
sti
or
or
inc
jecxz
shr
dec
gs
shr
into
or
ret
xchg
fnstenv
and
mov
fs
shl
fimul
add
dec
jge
push
jnp
pushf
sub
mov
lea
mov
mov
push
sahf
push
scas
add
xor
cmp
or
retf
and
xor
mov
stos
cdq
and
in
fisub
(bad)
push
lods
rcl
movs
imul
push
stos
add
cmp
scas
xor
scas
es
lods
and
int
out
out
shl
mov
pop
loopne
add
mov
and
jge
into
loop
cld
leave
retf
pushf
fdiv
jmp
jge
add
fwait
mov
cmc
lahf
push
movs
sbb
(bad)
hlt
in
adc
push
loope
imul
jmp
sbb
lahf
fnstsw
retf
in
idiv
lods
dec
mov
inc
out
in
rol
retf
mov
clc
jmp
adc
mov
xchg
dec
xchg
push
push
sub
inc
dec
fstp
test
jns
push
scas
and
pop
add
or
and
in
movs
call
sub
dec
mov
mov
imul
add
loop
or
es
pop
inc
add
fadd
mov
adc
fisttp
sub
mov
and
aam
mov
sub
ins
call
dec
mov
gs
xchg
retf
scas
cmps
dec
add
(bad)
mov
dec
leave
jae
fs
scas
xor
shr
ins
add
popf
in
inc
xor
in
loop
in
push
div
push
data16
fld
add
xchg
idiv
xchg
ds
pop
sub
xor
xor
sub
aam
ins
jnp
mov
and
fist
fs
ins
dec
imul
ja
ins
arpl
inc
inc
call
in
push
jl
adc
dec
aam
loop
cmp
and
psrld
jge
push
call
out
rcl
xor
add
pusha
xchg
mov
fild
enter
iret
jne
sub
add
sub
or
out
scas
idiv
(bad)
xchg
ins
into
fld
shl
ja
or
mov
cmp
ret
test
cld
mov
mov
jmp
mov
test
jle
shr
popf
push
test
jecxz
out
icebp
mov
mov
xchg
fisttp
mov
adc
div
sub
and
xchg
sbb
pusha
pop
or
out
xchg
sbb
mov
jns
cwde
push
xchg
mov
adc
pop
or
imul
cmps
sahf
jmp
mov
movs
iret
push
jp
jp
(bad)
xchg
push
pop
sbb
dec
sbb
mov
dec
push
arpl
cli
jo
dec
into
jns
ror
adc
sbb
stos
out
out
aam
sti
mov
or
xchg
lahf
jbe
and
inc
adc
addr16
push
jnp
sti
xchg
or
xor
ins
outs
xor
cmp
addr16
into
data16
mov
pop
dec
mov
shr
sbb
bound
call
stos
aas
call
test
jmp
adc
push
push
loop
cmps
push
imul
sub
xchg
push
fwait
jne
std
jg
xor
lods
xchg
lods
cmps
xor
fimul
stos
or
movs
cld
sub
jle
fnsave
and
retf
cmp
sub
shl
call
pop
daa
mov
sub
fs
loop
test
clc
or
fwait
arpl
jnp
lods
std
mov
jl
mov
mov
pop
repnz
inc
pop
jo
jg
sub
adc
jge
lock
push
pop
shl
les
jecxz
push
jae
pop
lahf
mov
pushf
aaa
push
int
jp
sbb
pushw
inc
jecxz
ss
fadd
jmp
call
inc
shl
rcl
mov
add
popf
loopne
xchg
xor
iret
pop
and
or
stc
inc
inc
jnp
pop
dec
aas
pop
jle
dec
xchg
mov
push
loopne
mov
xchg
pop
pop
sub
jecxz
inc
add
mov
(bad)
outs
push
fst
adc
(bad)
out
cmp
add
pop
call
add
rcr
xchg
xor
push
scas
rol
popa
cdq
mov
xchg
push
(bad)
lea
adc
fsub
sub
aaa
mov
sbb
jmp
scas
cdq
in
lds
clc
out
xor
addr16
jo
jno
cdq
or
fstp
jns
movs
addr16
rcl
dec
test
stos
jmp
scas
sbb
fwait
adc
hlt
xor
sbb
js
loop
push
mov
adc
mov
push
out
jns
mov
jb
inc
mov
mov
adc
and
aaa
mov
ret
xchg
call
sti
sbb
cmp
into
add
fcomip
pop
icebp
in
popa
(bad)
icebp
es
addr16
xchg
out
paddw
(bad)
iret
xchg
in
popa
mov
pop
fldcw
(bad)
push
jmp
adc
outs
out
adc
scas
xchg
mov
cwde
out
fstp
mov
ret
out
xchg
mov
pop
imul
jg
push
es
add
or
into
push
and
push
sbb
mov
and
fwait
mov
dec
jns
lahf
push
pop
cmps
addr16
xor
daa
fist
fcmovnu
mov
retf
dec
sahf
push
clc
cmc
gs
cmps
mov
and
addr16
sbb
sbb
mov
mov
call
repnz
mov
sub
lahf
les
cmp
cmp
mov
lock
into
inc
cmp
ja
sbb
xor
add
fnstenv
arpl
sub
add
adc
mov
retf
dec
mov
fdiv
mov
ficom
jno
inc
lods
in
jae
mov
mov
cmp
daa
ins
jbe
mov
cmc
pop
cwde
test
adc
and
add
push
call
fs
test
movs
gs
cmp
popf
test
add
into
(bad)
fs
outs
sbb
ins
pop
pusha
cmp
mov
or
cmc
jns
ja
fimul
ret
dec
test
(bad)
lock
outs
outs
mov
inc
mov
ret
cmps
ret
lods
std
sub
pop
pop
add
(bad)
shl
stos
xor
xor
mov
sar
and
xchg
sub
int3
sbb
iret
push
jne
(bad)
pop
mov
lods
mov
clc
fs
jge
pop
add
mov
cli
mov
xor
das
ror
mov
out
pop
jmp
cwde
adc
xor
int3
test
bound
bound
or
and
jno
iret
std
dec
loop
loopne
(bad)
repz
scas
cli
popa
cdq
stos
popa
aas
pop
mov
jge
mov
mov
imul
call
adc
jp
rol
call
jmp
js
mov
loopne
xchg
(bad)
cmps
add
dec
mov
icebp
jge
pop
jno
inc
pop
mov
dec
test
or
pop
outs
fldcw
jg
sbb
or
or
out
xor
adc
sbb
mov
mov
adc
cdq
mov
out
xchg
and
movs
add
fcom
shl
dec
jge
out
adc
pusha
inc
imul
dec
es
test
ret
call
fist
jns
cmc
xchg
mov
pop
mov
dec
dec
cdq
fcom
or
dec
dec
xchg
out
pop
xchg
rcl
xchg
cmp
mov
fisttp
and
movs
stc
xchg
aad
add
out
jbe
pop
cmp
fidivr
nop
xor
push
adc
sbb
xor
imul
pusha
out
and
test
cmp
push
mov
mov
mov
mov
sbb
jecxz
addr16
in
(bad)
imul
movs
sbb
mov
test
mov
adc
nop
int3
pop
test
stos
mov
aam
pop
adc
xchg
aad
push
cmp
fdiv
mov
int
push
imul
arpl
push
fidivr
pop
stc
rcl
je
fwait
mov
cmps
add
mov
scas
add
nop
xchg
or
cmc
sub
out
xor
dec
xlat
(bad)
cmp
xchg
dec
xor
jno
mov
dec
aad
cmp
sbb
into
mul
jl
cmp
sbb
pop
mov
ror
pop
cmp
or
push
movs
stc
daa
sbb
mov
pop
sbb
pop
dec
iret
pop
cmp
xor
shl
inc
jnp
leave
mov
mov
jae
push
pop
xor
xchg
add
add
mov
xchg
scas
outs
test
xor
sub
pop
add
call
adc
and
sahf
arpl
push
cmp
mov
imul
cmps
mov
mov
pop
xchg
sbb
popa
sbb
xlat
cmps
jle
aad
jnp
mov
jno
inc
dec
sar
arpl
test
mov
stos
loop
scas
jle
sub
xchg
inc
out
aaa
add
jae
lods
cwde
sub
in
shl
les
push
xor
jae
fs
pop
sub
retf
adc
mov
jmp
xchg
fisub
or
pop
ins
xor
adc
inc
fstp
lods
mov
scas
or
mov
pusha
aad
dec
out
mov
push
mov
push
stos
adc
loope
inc
lods
mov
jnp
cmp
pop
mov
jno
in
int
push
dec
mov
add
in
in
cwde
mov
jl
jbe
retf
in
jne
cdq
inc
(bad)
xor
inc
test
jno
or
mov
dec
iret
jmp
xor
mov
pop
xchg
push
sbb
out
pushf
ror
std
add
inc
xor
dec
cmp
mov
or
jae
loope
loop
shr
mov
add
push
mov
mov
loopne
mov
fld
int
ins
aas
ret
cli
fwait
pop
jle
ins
aad
gs
jno
fcom
mov
dec
lods
stos
imul
popa
mov
out
icebp
push
adc
add
lds
adc
stc
pop
xchg
loop
push
sub
rcl
stos
div
pop
fldenv
test
push
pushf
jmp
xchg
ror
adc
(bad)
sub
call
mov
(bad)
sub
out
pop
sub
xchg
xchg
mov
sub
cmps
int
repz
int3
xchg
and
es
sti
cmp
fidiv
xor
or
hlt
mov
mov
xchg
out
push
aad
add
outs
sub
jmp
inc
xor
jle
in
int
loop
xor
out
(bad)
repnz
aas
mov
es
inc
xchg
stos
pop
dec
push
sbb
cmp
out
int
lods
adc
lea
repz
adc
cmc
das
aad
fwait
js
add
call
jecxz
lods
in
ins
dec
add
retf
mov
fsubr
mov
bound
sar
fiadd
scas
mov
xchg
pop
les
jne
lods
push
loopne
test
call
push
dec
jl
mov
cwde
popa
cmp
mov
sahf
add
inc
bound
jne
cwde
adc
xor
stc
and
xchg
(bad)
jmp
daa
cld
stos
jg
jne
ret
ret
(bad)
mov
inc
fwait
sub
gs
(bad)
je
(bad)
cwde
inc
cmps
ins
dec
repz
popf
adc
adc
int3
in
stc
adc
scas
or
fstp
mov
mov
stos
lock
cs
push
jmp
xchg
jecxz
retf
mov
push
and
(bad)
jae
xchg
lock
sub
fcom
sub
mov
int
mov
es
out
call
lods
ret
ss
mov
in
and
(bad)
adc
xor
imul
popa
lahf
mov
inc
mov
dec
cmps
mov
mov
push
pop
cmps
out
mov
scas
cmp
add
aad
cdq
push
call
mov
pop
mov
or
inc
rcl
shr
pop
add
cs
xchg
xor
inc
jg
daa
xchg
adc
jg
clc
imul
adc
dec
mov
cli
hlt
mov
test
ins
aam
into
cmp
and
xor
mov
cmc
push
div
pminub
sub
inc
neg
imul
or
sbb
jo
add
loope
mov
out
add
nop
jno
dec
idiv
xor
cwde
sub
call
int3
and
sbb
test
jmp
xchg
adc
popf
xchg
scas
iret
jp
jmp
mov
push
test
sar
ins
push
push
cs
in
loop
xchg
iret
leave
stc
mov
loope
cmp
fwait
arpl
cwde
data16
sbb
into
in
sbb
mov
imul
js
movs
leave
ror
inc
int
add
call
or
cmp
cmp
cmps
cmps
cmp
fs
jle
mov
cmp
pop
(bad)
out
or
in
and
in
out
mov
or
xor
std
sub
clc
fimul
retf
mov
pop
mov
mov
and
and
stos
jnp
cmp
cmp
cmp
sub
jnp
pop
ins
dec
daa
cmps
inc
fsub
loopne
jle
mov
dec
aam
xchg
mov
push
mov
out
in
push
push
mov
and
nop
push
jne
inc
ja
scas
mov
mov
inc
stc
repnz
loop
cld
aaa
jne
mov
pop
cmp
mov
cmp
test
cmp
inc
(bad)
adc
call
mul
scas
xchg
hlt
push
lods
(bad)
dec
mov
icebp
(bad)
mov
jb
div
jnp
and
jno
cwde
(bad)
pusha
and
dec
loop
push
or
mov
ror
push
xchg
sub
adc
repnz
adc
movs
fisttp
cmp
jnp
imul
scas
fldenv
mov
sub
pop
mov
iret
in
mov
(bad)
xchg
in
leave
xchg
mov
outs
pusha
pop
nop
add
fild
test
jnp
std
add
in
push
(bad)
xor
out
pushf
popf
loopne
xor
jbe
and
or
out
mov
lods
sti
push
stc
cld
jbe
pop
mov
sar
(bad)
pop
mov
jae
jl
or
iret
fs
inc
pop
hlt
pop
xchg
(bad)
unpckhps
pop
movs
sti
outs
call
test
dec
mov
sti
test
rcr
sub
scas
fisttp
push
xor
mov
ss
add
js
dec
mov
push
push
fstp
sbb
mov
aaa
dec
mov
dec
repnz
aad
pop
fnsave
or
mov
std
cmps
cmp
(bad)
mov
icebp
cwde
push
loope
loop
cdq
cs
movs
jl
jle
xchg
fwait
cdq
adc
stc
or
call
sar
clc
jns
sbb
popf
rcl
add
xor
retf
iret
scas
inc
cmc
rol
stc
aaa
(bad)
(bad)
sub
fldz
xchg
jmp
call
sbb
jg
jecxz
int
cs
mov
aas
adc
mov
in
ret
out
lock
xchg
cdq
sar
data16
mov
call
cmp
ror
and
mov
sub
mov
loope
and
lds
cli
inc
sbb
pusha
mov
ins
stos
adc
cmps
dec
mov
mov
or
out
cmp
in
sub
pop
jle
or
int3
fist
in
in
add
add
iret
std
int
mov
sbb
add
mov
lds
in
mov
in
js
les
pop
je
scas
cld
popa
jo
imul
sub
pushf
push
sbb
sbb
xchg
test
push
mov
dec
test
lahf
ds
dec
rcl
mov
out
jmp
or
loope
call
and
fst
mov
data16
lahf
mov
nop
out
add
xchg
out
jo
cmp
cmp
imul
push
mov
mov
out
or
(bad)
sahf
(bad)
jmp
in
test
in
or
dec
cmp
pop
(bad)
repnz
adc
adc
sti
imul
xchg
adc
loop
mov
pop
pop
loopne
mov
push
lds
out
sbb
imul
mov
dec
call
fild
call
clc
fmul
leave
imul
stos
and
ret
shr
jo
aad
sub
mov
cmps
jle
movs
or
(bad)
jne
popa
pop
sbb
pusha
xchg
sbb
pop
data16
mov
add
(bad)
ds
lahf
sahf
dec
sub
retf
inc
fild
push
inc
stc
dec
cmp
nop
stos
lahf
cmp
pop
lods
add
daa
mov
sbb
enter
mov
loopne
cmp
xchg
fcomp
aaa
jge
push
addr16
dec
cmc
mov
outs
mov
and
adc
ror
dec
hlt
inc
or
loopne
fs
nop
jne
in
(bad)
fwait
pop
sub
sahf
sub
adc
add
(bad)
popf
push
cs
popf
sub
sub
pop
adc
push
adc
(bad)
inc
rol
xchg
push
mov
mov
jne
cs
sahf
dec
lods
sub
cmp
adc
mov
iret
mov
jbe
mov
cmp
mov
jmp
popf
fild
je
pop
in
push
fldcw
call
adc
repnz
(bad)
leave
inc
je
push
mov
mov
cwde
retf
inc
adc
push
invd
jle
jno
sub
sub
jmp
movs
cs
sbb
inc
add
xchg
push
jp
jnp
movs
mov
ret
push
mov
ja
push
push
aam
pop
add
xchg
mov
cmp
mov
(bad)
iret
arpl
hlt
or
lock
cmp
rcl
adc
mul
rcl
loope
add
adc
outs
add
aam
cmps
jg
sub
les
scas
cmp
sbb
mov
adc
mov
(bad)
fs
into
les
loope
aaa
sub
popf
mov
inc
inc
add
adc
shl
pop
mov
mov
pop
and
rol
stos
retf
popf
pop
jnp
lods
inc
push
ret
lods
pop
dec
rol
movs
ret
cmp
cli
movs
lods
xor
sbb
dec
mov
xchg
cmp
shr
lods
test
jb
add
nop
push
add
inc
je
cmps
inc
cs
(bad)
fild
cmps
dec
mov
xchg
inc
pushf
leave
cmp
std
mov
int
mov
lea
push
inc
clc
lods
xchg
or
gs
xor
mov
adc
cmps
ins
nop
dec
neg
or
shr
xchg
or
(bad)
pop
imul
mul
inc
sbb
mov
cdq
xlat
cmps
and
and
inc
xor
sti
(bad)
aam
test
fimul
pop
adc
fcom
or
lods
outs
or
and
retf
or
mov
lds
sub
xchg
push
fdivrp
scas
cld
cmp
dec
rol
daa
and
mov
sahf
adc
(bad)
lods
movs
(bad)
fisttp
and
mov
loop
int
out
int
ret
inc
out
leave
push
inc
or
inc
ror
push
push
ficomp
dec
mov
mov
dec
cmp
(bad)
pop
mov
jp
sbb
sbb
cmp
iret
jmp
mov
push
sahf
add
rcr
adc
loopne
lods
mov
mov
pop
mov
inc
mov
push
jae
icebp
pop
sbb
aas
cmp
push
stos
ins
jbe
fisttp
mov
jle
xchg
or
nop
test
mov
int
pop
jmp
mov
push
pop
ds
dec
test
outs
cmc
imul
imul
stos
inc
jns
ret
enter
stos
mov
dec
ins
add
aam
js
inc
jo
cmp
cli
xchg
mov
or
cmp
add
sub
add
cmp
cmp
mov
ja
cdq
hlt
or
sbb
pusha
fdivp
(bad)
jecxz
sahf
enter
and
and
neg
in
cld
stos
cmp
cmps
outs
int3
mov
loope
fidivr
push
sub
std
or
mov
dec
push
popa
out
outs
stc
(bad)
les
loope
lds
adc
adc
adc
inc
pop
add
sbb
leave
sbb
mov
in
xchg
and
xchg
mov
cli
add
cmps
and
retf
stos
pop
loope
ins
ret
jl
push
dec
loopne
jg
pushfw
xchg
pop
mov
or
jnp
mov
xchg
or
push
jmp
loopne
and
cmp
and
pop
or
dec
mov
xor
jo
jl
jge
sti
inc
xchg
ror
mov
aad
sub
movs
inc
in
int
mov
repnz
nop
fldenv
lea
imul
pop
lock
jmp
jmp
jb
repnz
xchg
movs
xor
aam
(bad)
jl
inc
daa
loop
adc
int3
repnz
int
push
adc
push
pop
cmp
xor
popf
cmp
frstor
mov
sbb
fiadd
das
in
in
in
jmp
sub
test
repz
dec
ins
jecxz
jno
rcl
cmp
jb
imul
push
inc
mov
loopne
mov
movs
in
adc
test
shl
xchg
mov
je
repz
mov
xor
and
not
(bad)
jle
out
rcr
mov
jbe
mov
cmp
pop
cmp
dec
shr
jle
fisubr
pop
movs
mov
in
dec
and
jb
aam
shl
out
dec
int
adc
adc
fild
or
push
fst
cmp
fiadd
cdq
je
xchg
cmp
adc
push
inc
dec
and
cmp
jl
(bad)
imul
cli
dec
xchg
mov
sbb
(bad)
out
adc
loopne
dec
sahf
mov
pop
sub
sub
mov
fcom
pop
scas
mov
inc
pop
dec
pop
xchg
dec
sbb
jb
mov
lods
sbb
pop
mov
mov
test
popa
(bad)
fcomp
add
sub
dec
push
enter
pop
and
and
nop
dec
inc
jb
(bad)
jmp
rol
add
mov
sti
mov
jmp
mov
idiv
mov
cld
lods
mov
inc
out
ret
lock
ret
pop
xor
adc
retf
cmp
hlt
xor
and
fld
sub
cmps
mov
inc
xchg
mov
xchg
shl
imul
mov
stc
punpcklwd
jns
loope
fcom
shr
outs
push
mov
push
mov
inc
push
in
pop
jnp
or
xor
out
repz
mov
jge
jp
mov
not
lods
or
jb
push
(bad)
pop
mov
xchg
push
inc
arpl
push
icebp
mov
dec
cwde
inc
push
std
push
fldenv
mov
imul
add
inc
call
dec
mov
push
mov
xor
in
xchg
lods
xchg
repz
std
dec
inc
arpl
mov
sbb
mov
jo
pop
or
cli
or
xlat
adc
cld
inc
push
sti
aas
adc
stos
popf
adc
mov
imul
retf
je
shr
sbb
xor
es
jp
sub
sbb
dec
push
jle
adc
cmp
xchg
leave
dec
inc
cmp
inc
out
loopne
or
(bad)
in
push
fdivr
sti
jns
pop
sub
int
inc
inc
into
js
cmps
lahf
hlt
ror
(bad)
cmp
into
inc
clc
and
add
or
lahf
mov
les
adc
popf
cmp
and
push
jle
xchg
jecxz
pop
inc
add
push
(bad)
gs
or
neg
out
hlt
std
outs
push
push
mov
adc
in
jne
xlat
pop
xor
out
outs
jg
sub
add
imul
pusha
in
imul
mul
jmp
cwde
popa
popf
data16
dec
int
daa
xchg
sahf
jl
outs
push
cmps
dec
(bad)
jmp
jp
jp
cmp
add
cld
(bad)
mov
mov
or
cwde
inc
cmp
mov
dec
push
sub
xchg
std
inc
jnp
jmp
lods
das
fcom
sbb
cmp
dec
ret
fisubr
ja
retf
ss
mov
xchg
sbb
(bad)
rcl
push
push
and
jns
stc
cmp
inc
sub
inc
shl
push
push
in
dec
aad
xchg
pop
data16
jecxz
jge
fld
jmp
sbb
(bad)
pusha
jg
push
xchg
or
mov
sub
sahf
mov
sub
aam
pop
mov
rcl
or
and
fidivr
ss
out
and
xchg
cmc
cmp
xlat
fisubr
dec
dec
int3
mov
cmp
loope
ret
and
pop
push
mov
xchg
int
test
sub
push
mov
jns
aam
(bad)
sub
(bad)
mov
inc
xchg
add
push
dec
addr16
in
sub
cmp
outs
fist
arpl
ror
aam
inc
(bad)
clc
add
(bad)
out
fldcw
arpl
mov
outs
mov
pop
pop
call
lock
mov
repz
xchg
arpl
(bad)
jmp
pop
adc
pop
adc
sub
cmp
int
xchg
sub
bound
std
(bad)
dec
lahf
outs
lods
mov
pusha
adc
(bad)
arpl
scas
sub
or
add
test
cld
dec
int
daa
cmp
ret
cmps
xchg
push
(bad)
sub
adc
out
outs
cld
adc
aad
dec
push
scas
popf
mov
jl
ss
imul
sti
mov
mov
xor
dec
fs
std
sbb
sbb
push
push
push
push
mov
sbb
dec
inc
cmp
cmp
shr
xor
cmp
and
into
shl
xchg
xor
lods
add
lock
(bad)
or
xchg
push
xchg
jl
add
xor
loope
fnstsw
jae
cmps
mov
xchg
sbb
dec
lahf
loope
ret
xor
pop
mov
xchg
fsubr
mov
fstp
inc
mov
sbb
lds
add
xchg
push
pop
cld
test
add
sbb
icebp
mov
jo
mov
push
mov
xor
xchg
enter
dec
lock
pmaxub
cdq
leave
nop
mov
lods
icebp
ins
xchg
xor
cmp
popa
pop
popf
out
xor
out
into
xor
cmp
cmp
xchg
test
stos
add
out
out
mov
aaa
sub
xor
dec
sub
push
aam
cmp
call
fdivrp
jnp
adc
js
test
adc
xor
jmp
sbb
test
aas
jnp
ror
xor
sbb
test
mov
ins
ret
add
fild
idiv
mov
and
cld
sub
xor
mov
dec
pop
xor
or
(bad)
xor
and
jp
pop
mov
mov
jl
fs
cmp
push
or
xor
jecxz
dec
xchg
and
sub
call
rep
mov
(bad)
clc
adc
lods
pop
mov
aas
pusha
outs
xchg
je
or
arpl
lock
jne
in
in
xchg
(bad)
outs
hlt
sbb
or
sub
push
movs
xchg
mov
push
xchg
loopne
or
dec
cmp
dec
das
push
xchg
aad
pop
push
pop
inc
rcl
push
mov
(bad)
xor
pop
sbb
add
mov
out
daa
dec
or
out
stc
push
xchg
ins
test
arpl
lea
push
fisubr
sub
lock
mov
and
and
xor
rol
mov
ret
fadd
repnz
xchg
mov
or
clc
sub
outs
out
rol
fist
pop
mov
cmp
or
push
fdivr
cmp
add
inc
add
cwde
adc
hlt
scas
scas
mov
and
cmp
adc
aad
fidivr
in
jl
sub
mov
adc
push
inc
(bad)
test
scas
shr
mov
xchg
xchg
ins
jl
mov
mov
mov
rol
out
or
sbb
nop
retf
ss
pop
push
fidiv
sbb
fcom
jb
xchg
leave
repnz
and
hlt
push
xor
pop
inc
dec
shl
cdq
gs
popa
xchg
sti
ror
loopne
sahf
or
jge
jno
mov
out
jle
or
in
lods
inc
cmovnp
rcl
out
adc
loope
xchg
adc
test
dec
jbe
add
jae
mov
movs
aad
xchg
adc
pop
aam
or
(bad)
mov
in
hlt
xchg
or
cmp
xchg
clts
cdq
sub
out
out
shl
fs
mov
xchg
mov
mov
lea
mov
fucomip
pop
mov
vmovd
sbb
mov
sub
pop
movs
push
(bad)
and
sub
lds
in
xchg
push
pop
cmp
push
mov
(bad)
aaa
mov
test
xor
xor
movs
push
retf
cdq
mul
and
and
into
mov
pop
sub
or
ret
sub
add
mov
inc
cmp
(bad)
lods
mov
xlat
std
jno
sahf
sub
lods
idiv
cmp
outs
dec
dec
xor
sub
les
shl
enter
push
pop
bound
adc
movs
mov
sbb
adc
add
or
mov
jne
mov
jmp
mov
clc
add
mov
cmps
repz
push
sub
fnsave
add
aad
sbb
cmp
call
sbb
push
lea
mov
imul
retf
lods
sub
adc
push
stos
test
mov
or
inc
aad
bound
jbe
xchg
xchg
jo
inc
lods
sbb
out
xor
push
iret
xor
cmps
sbb
cmc
scas
shr
loopne
iret
aas
rcr
pop
push
repnz
in
fdiv
call
inc
pop
push
xchg
popf
ds
(bad)
fwait
hlt
xor
sub
cmp
sbb
cmps
push
ja
pop
retf
xor
scas
add
jb
loop
dec
sar
inc
aas
lods
lea
push
idiv
push
add
mov
cs
lods
sbb
xchg
repnz
sub
test
add
mov
pop
mov
lahf
mov
aad
jecxz
cs
imul
jmp
xchg
in
xchg
scas
in
ss
jnp
cmps
js
das
idiv
mov
add
(bad)
stc
cwde
inc
add
cmps
cld
in
cmp
cld
loopne
jecxz
cld
or
scas
xchg
xor
inc
leave
lea
add
out
pop
adc
int
stos
out
mov
xor
das
into
sub
std
je
fdiv
jae
and
sub
mov
jns
and
iret
cld
sahf
addr16
mov
scas
rcr
add
in
and
push
popa
mov
jmp
push
das
inc
mov
dec
fadd
jmp
push
mov
inc
movs
sbb
dec
jp
aam
or
daa
lock
jne
jae
call
lods
add
jmp
cmp
loope
xlat
xor
in
das
mov
jo
sub
(bad)
push
push
cld
pinsrw
popa
dec
daa
dec
stos
mov
out
mov
fucomi
jmp
repnz
icebp
pop
loope
js
int3
das
call
jo
jge
fdivr
es
add
lds
mov
sub
(bad)
(bad)
mov
fld
ret
mov
in
(bad)
popa
shr
cwde
rol
xor
adc
call
scas
xchg
dec
mov
jmp
ins
mov
cmp
push
mov
nop
xor
jnp
push
xor
sbb
ror
clc
inc
in
out
imul
add
inc
mov
mov
rcl
push
cmp
loope
mov
sbb
lods
cdq
jb
and
mov
ins
xchg
xchg
stos
pusha
pop
mov
adc
pop
jne
out
push
cmps
test
mov
sbb
jge
pusha
sub
jmp
and
mov
cs
cmp
fstp
jns
ins
and
ds
mov
shl
mov
push
movs
test
test
mov
lods
out
mov
inc
fnstsw
mov
cdq
xchg
jmp
mov
popa
dec
fst
das
pop
ds
jns
mov
adc
mov
shr
dec
or
push
test
ins
loop
addr16
in
je
sbb
loopne
rcr
jecxz
mov
ins
outs
jne
and
rcl
mov
add
cld
cmps
fstp
cmps
xchg
xchg
movs
ins
push
hlt
test
fsub
mov
sub
loop
push
jo
sbb
fistp
jmp
repnz
and
xchg
mov
dec
(bad)
sbb
add
xor
sub
movs
jne
int
sbb
movs
div
imul
jne
sbb
call
shl
sar
stos
inc
push
mov
xor
cmp
dec
aad
out
ror
cmc
sbb
repnz
sti
pop
popa
add
jno
xchg
bound
dec
or
arpl
repz
adc
cmp
sti
enter
push
lods
inc
out
mov
mov
ret
push
push
xchg
aaa
test
jecxz
push
outs
out
enter
jb
into
int3
lods
dec
rol
enter
aam
repz
rcr
sar
ins
dec
xor
cmp
ins
cmp
in
imul
cmp
aam
jg
into
sbb
(bad)
and
pop
pop
ins
stos
ins
push
or
cmps
inc
dec
mov
mov
pop
repz
call
cmp
mov
mov
and
dec
inc
cmps
mov
push
mov
jle
pop
(bad)
add
aaa
jae
mov
jl
jno
popf
test
inc
mov
jp
push
xchg
xchg
shl
jbe
int3
mov
outs
popa
pop
mov
repz
pop
pusha
popa
ds
mov
inc
movs
shr
sar
xchg
dec
enter
and
push
icebp
out
jge
cmps
or
jae
(bad)
aad
loopne
ins
jno
mov
leave
test
add
pop
cmp
jno
jb
leave
cdq
rol
test
jo
jo
scas
push
sub
imul
sahf
pop
lahf
push
xor
(bad)
mul
icebp
cwde
(bad)
cmps
lahf
ret
dec
cmp
fistp
add
mov
sbb
int
push
or
mov
dec
cdq
loop
cdq
popf
push
out
call
(bad)
bound
pusha
cmc
xlat
push
pop
(bad)
not
cld
aaa
into
sti
mov
ins
cmp
js
mov
mov
push
cmp
je
and
dec
mov
xchg
pop
pop
ins
sbb
dec
and
jne
rol
xchg
push
push
movs
sub
fs
jmp
ins
adc
push
pop
push
jae
xchg
repz
pushf
aam
pop
mov
or
add
cmp
pop
fld
sub
xchg
xchg
or
test
xchg
fcom
dec
retf
inc
rcr
mov
push
mov
dec
mov
xchg
add
cmp
rcl
cmc
pop
adc
mov
fst
cmp
or
jo
fucom
cs
cmp
jno
dec
jnp
xchg
adc
mov
dec
leave
mov
jg
movs
stc
push
cmps
and
sub
nop
cmp
sub
les
loopne
mov
sbb
dec
lock
and
cmps
cwde
xchg
adc
fimul
popf
push
aam
not
mov
out
repz
pop
or
add
lods
xor
xchg
push
mov
xlat
icebp
mov
pop
outs
inc
jae
call
mov
push
repz
out
pop
fdivr
(bad)
jnp
mov
retf
clc
lahf
xlat
(bad)
fisttp
jb
add
mov
mov
and
jl
add
addr16
inc
adc
sbb
push
jecxz
dec
inc
call
push
push
sbb
test
in
cmc
test
outs
ficomp
mov
mov
adc
cdq
add
test
js
jbe
pop
inc
stc
(bad)
push
sub
jle
push
inc
push
lods
std
or
lock
dec
hlt
or
add
add
sysenter
(bad)
jo
cmp
out
das
inc
add
ins
fwait
sbb
adc
jbe
shr
jne
or
pushf
mov
xor
inc
lwpins
lods
std
xchg
xchg
inc
(bad)
add
mov
idiv
sbb
lahf
bound
pop
popf
xor
pushf
mov
mov
mov
stos
and
cmp
dec
retf
pusha
test
adc
mov
or
sbb
jp
stos
jmp
push
repz
jmp
ror
push
dec
imul
push
push
test
call
sbb
or
mov
test
xor
jg
add
xor
push
outs
mov
jno
sbb
popf
cmps
fmul
clc
cmp
add
fsubp
out
dec
icebp
pop
inc
out
out
sub
fsubr
fnstsw
xchg
addr16
push
hlt
add
jnp
jno
fs
xlat
push
pop
adc
jbe
lahf
add
aad
mov
xchg
sub
(bad)
adc
inc
mov
mov
dec
and
pop
enter
xchg
pushf
and
inc
sbb
enter
push
cmp
cdq
mov
fldenv
mov
inc
(bad)
lods
mov
adc
lods
xor
pop
or
(bad)
xchg
adc
fisttp
mov
mov
fstp
jo
into
or
jb
ret
xchg
fild
shl
adc
cmp
mov
outs
arpl
sub
call
pop
dec
rol
sti
gs
adc
push
pop
push
mov
sub
mov
scas
pop
(bad)
sti
outs
stos
and
pop
mov
inc
mov
and
jg
mov
lods
mov
mov
push
out
setae
and
cld
je
inc
mov
cld
outs
jecxz
xchg
mov
fcomp
or
or
ins
out
sub
pop
mov
dec
dec
push
adc
movs
mov
mov
aam
sub
dec
sbb
arpl
inc
pop
or
test
pop
outs
dec
hlt
mov
inc
fidivr
lods
cmps
xor
fild
cmps
es
and
cld
movs
int3
sar
dec
sub
adc
xchg
(bad)
cmp
(bad)
lahf
shl
push
and
pop
movs
lahf
scas
jg
scas
es
push
inc
jmp
jbe
sub
ds
dec
and
pop
scas
je
lock
bound
push
inc
xor
je
cwde
xor
mov
cmps
dec
dec
rcl
push
adc
jbe
repz
pop
(bad)
cmps
sbb
imul
hlt
mov
cli
and
push
pop
or
cdq
ret
mov
(bad)
or
das
repz
aam
push
sahf
xchg
loop
push
and
cli
imul
or
pushf
loop
test
fiadd
jge
inc
icebp
add
das
pop
leave
aaa
ror
jp
adc
jns
scas
ja
stc
les
scas
jo
lods
cmps
out
mov
push
hlt
and
cmp
mov
cmp
dec
call
jo
xor
rcl
mov
bound
inc
mov
fwait
(bad)
jmp
sar
fnstsw
jnp
neg
pop
dec
rol
jne
jmp
fisubr
in
js
lahf
pop
add
call
lea
mov
fsubr
icebp
cmps
mov
fisttp
jo
xor
pop
mov
jle
cmp
xchg
in
jo
add
xor
xlat
retf
xor
mov
data16
mul
adc
cli
test
and
dec
mov
mov
sti
movs
fs
add
shr
repz
mov
std
rol
cli
retf
lahf
mov
pusha
repz
pushf
push
les
call
and
sub
dec
jecxz
enter
push
add
sbb
dec
xor
mov
jmp
sbb
add
jbe
inc
(bad)
sub
ins
mov
add
outs
sbb
test
mov
mov
jmp
lods
lods
popf
pop
add
mov
mov
ins
push
(bad)
jo
out
sub
xchg
push
sbb
dec
mov
pushf
push
cmp
int3
mov
or
mov
xchg
ss
dec
ss
xor
or
xchg
jp
loope
or
dec
icebp
daa
jmp
imul
pusha
add
out
div
jo
pop
sub
popf
fisubr
and
shl
add
std
inc
inc
jp
inc
adc
mov
(bad)
mov
cmp
fs
rcl
fiadd
lods
outs
sahf
loope
mov
dec
xor
pop
cmp
jmp
int3
(bad)
dec
cli
mov
add
fwait
loopne
movs
push
jmp
pusha
cmps
push
lahf
cmc
fisttp
repnz
je
ja
pop
mov
xchg
xor
jl
scas
sti
ret
repz
fcmovnbe
mov
fimul
cld
mov
arpl
out
movs
pop
ret
cmp
mov
mov
arpl
leave
xlat
push
js
rcl
fxam
pop
ins
jns
push
gs
and
inc
out
hlt
call
jge
xor
shl
ss
aas
push
(bad)
out
sbb
cmps
lds
repnz
or
in
lock
arpl
sub
pushf
stc
ds
out
aam
mov
pop
xchg
xor
ret
dec
movs
mov
add
aad
pop
add
fwait
aas
xchg
inc
jb
xchg
push
popa
mov
int3
sub
mov
mov
sbb
mov
sub
cmps
pop
cmp
in
push
xchg
xchg
adc
mov
jb
push
pop
repz
repnz
pop
idiv
xor
mov
mov
xchg
sbb
inc
fs
push
or
inc
data16
xor
dec
sub
sbb
add
xor
xchg
mul
xor
push
mov
arpl
cmp
cs
or
lock
sahf
mov
(bad)
rol
(bad)
jmp
dec
push
push
pop
or
pop
push
ins
mov
retf
jne
and
pop
xlat
cmp
pop
mov
scas
inc
lock
into
movs
shr
(bad)
data16
xor
and
pushf
(bad)
mul
mov
enter
mov
retf
imul
adc
stos
mov
ins
fwait
xor
cmc
dec
icebp
pop
sbb
xor
fs
imul
or
mov
retf
cmp
push
mov
sbb
sbb
jecxz
push
push
inc
and
and
stc
movs
push
and
cli
xchg
(bad)
lods
in
ds
out
fidivr
xor
sub
add
jge
jmp
and
in
pop
and
jbe
xor
push
mov
test
and
and
mov
test
popa
stc
mov
pop
call
jb
sahf
jnp
mov
mov
icebp
xchg
xor
sbb
aaa
out
pop
dec
adc
adc
adc
adc
jl
jecxz
mov
test
fs
test
inc
out
add
and
call
test
mov
std
repz
push
xor
out
cmp
push
dec
in
xchg
inc
xchg
std
xchg
xor
mov
sub
call
loope
jmp
add
jnp
js
(bad)
ins
(bad)
mov
dec
mov
mul
cld
lock
xor
in
mov
dec
out
sbb
mov
scas
mov
dec
loop
push
add
in
pop
adc
aad
dec
aas
or
push
aam
pop
dec
push
jmp
pop
xor
xlat
cmp
push
mov
je
mov
out
mov
dec
and
adc
mov
call
jecxz
and
push
push
jae
cmp
jne
adc
adc
stc
sub
ret
les
xor
push
and
xor
test
mov
cmps
enter
pop
sbb
call
test
jp
push
sub
cmp
and
and
mov
aad
int
adc
clc
inc
mov
outs
push
adc
out
inc
les
cmp
(bad)
push
mov
pop
or
sbb
(bad)
aam
cmp
dec
pop
in
movs
retf
jae
jns
inc
or
enter
jns
add
shl
and
or
push
xor
jg
js
jo
jp
lock
pop
jge
jl
and
loopne
or
cmps
jb
dec
dec
call
out
imul
pop
or
dec
cmps
push
mov
jle
fstp
cmc
cmp
pop
cmp
cmp
jecxz
cmp
xchg
imul
in
jo
je
(bad)
in
arpl
test
repz
mov
pop
fcmove
into
retf
and
cs
out
push
ins
aas
call
dec
outs
sbb
(bad)
mov
pop
mov
sbb
(bad)
fcomp
out
dec
mov
adc
cld
mov
inc
mov
pop
pop
int
add
in
call
push
clc
mov
fstp
xor
and
push
int
jo
cmc
xlat
or
sbb
and
adc
mov
clc
inc
test
retf
jg
mov
pop
jmp
hlt
xchg
frstor
add
popf
int3
mov
fisubr
sbb
scas
cmp
adc
idiv
fdivr
adc
adc
sbb
and
rcr
mov
pushf
dec
data16
push
jecxz
loopne
(bad)
inc
jmp
clc
stc
mov
je
adc
das
add
je
mov
mov
sti
ret
mov
or
ror
in
or
push
push
jp
xchg
rcl
pop
ss
sbb
xchg
add
loope
shr
out
mov
fdiv
mov
(bad)
imul
push
fisub
push
inc
jp
xchg
pushf
mov
fs
sahf
and
stos
xchg
mov
adc
jp
xchg
fmul
ror
cwde
mov
repnz
jne
jl
adc
or
push
sub
int3
movs
(bad)
mov
rcr
movs
or
stc
movs
sbb
call
mov
pop
loopne
sahf
sbb
sub
test
rcr
jp
rol
lods
ffree
stos
sar
mov
enter
and
mov
xor
imul
sub
xor
or
mov
or
lods
cmp
xchg
in
out
hlt
xor
and
jmp
and
out
cmp
push
enter
push
sub
jo
xchg
std
arpl
cwde
inc
pop
sbb
out
add
ja
pop
ja
fimul
test
or
and
jp
cdq
push
or
in
enter
sub
ds
stos
test
lock
jl
std
dec
mul
mov
adc
jno
stos
mov
call
stos
sub
cmp
in
mov
fadd
fisubr
pop
out
std
fld
adc
cwde
fadd
js
test
cmp
cdq
loop
call
mov
cmp
out
pop
push
adc
mov
sub
lds
pop
sbb
jp
(bad)
and
(bad)
clc
ss
push
imul
dec
dec
jmp
cmp
fld
jmp
sbb
repz
sbb
push
test
sub
icebp
mov
gs
mov
sahf
xor
scas
iret
inc
std
jo
scas
xor
and
xchg
ret
jb
add
jae
(bad)
dec
inc
push
lock
push
les
xchg
(bad)
movs
sbb
push
popa
int
movs
seta
loope
push
cmp
and
adc
pop
scas
push
std
js
stos
fild
test
aam
mov
(bad)
fidiv
test
in
outs
in
xor
mov
scas
scas
mov
pop
adc
rcr
scas
int3
movs
jb
test
int3
cdq
aaa
test
ud2
test
jbe
adc
out
and
repz
and
loopne
call
or
dec
(bad)
ins
jmp
mov
mov
(bad)
fsub
push
xor
mov
pop
das
mov
and
sbb
das
movs
adc
scas
xor
mov
and
out
(bad)
xor
ins
or
or
xchg
cld
sub
popa
shl
pop
dec
cmp
sbb
fsubr
(bad)
adc
cmc
sbb
inc
push
ror
or
cdq
ss
jbe
push
stos
mov
das
sub
mov
pop
jo
and
icebp
ss
add
pusha
ss
out
mov
jo
push
xchg
cmp
neg
retf
fld
push
jno
js
hlt
pop
jmp
js
arpl
jp
cmp
stos
and
xchg
push
stc
clc
xor
jle
pop
retf
in
iret
dec
jmp
push
scas
jbe
imul
push
push
xchg
(bad)
mul
add
push
mov
bound
daa
fst
xor
push
das
popf
or
cld
repz
sbb
cwde
or
aad
xor
add
loope
adc
mov
xor
aas
out
and
inc
movs
int3
fisttp
pop
jbe
adc
xchg
fld
mov
push
mov
mov
push
jmp
rcr
sub
ds
jecxz
fild
fadd
fld
hlt
mov
in
push
clc
iret
fcom
scas
shr
out
dec
dec
sbb
sbb
pop
push
jns
es
lods
movs
leave
sub
push
das
sub
cdq
or
mov
cmp
lods
push
cmc
repnz
iret
into
mov
jl
or
jl
add
xor
inc
std
(bad)
mov
ds
mov
(bad)
(bad)
jl
sub
in
rcr
cmp
sbb
jne
xchg
cmc
rcl
mov
cmp
popf
sbb
fwait
jl
push
and
cmp
push
push
imul
xchg
or
(bad)
xchg
mov
xchg
mov
inc
push
jae
sub
add
retf
aas
aad
es
std
mov
repz
mov
and
rol
jl
jno
std
gs
sub
xchg
mov
imul
sahf
outs
es
fbstp
inc
sub
sbb
and
les
dec
not
lock
imul
jmp
inc
sbb
mov
mov
mov
imul
add
jmp
sbb
ins
xchg
or
push
in
cld
jp
push
inc
xchg
and
dec
scas
pop
jns
aad
in
in
(bad)
es
cmp
mov
jno
outs
jge
push
jbe
hlt
cmp
icebp
push
inc
add
js
or
mov
sbb
div
test
mov
inc
test
lods
mov
sti
jae
or
loopne
fbstp
mov
xor
fstp
and
cdq
add
pushf
std
cs
add
fwait
lods
repz
jo
xchg
inc
sbb
stc
fdivr
mov
aad
xor
hlt
mov
xchg
hlt
pushf
push
xchg
push
(bad)
pop
in
mov
lock
ror
mov
outs
sub
or
bound
sub
lods
rsm
dec
jbe
loopne
jmp
mov
or
dec
icebp
inc
es
and
outs
sbb
add
not
or
dec
xlat
fcmovbe
push
mov
and
js
inc
push
fcomp
movs
loope
sub
daa
aam
fstp
sbb
pop
fcomp
out
xchg
or
mov
ror
retf
adc
aad
adc
ficomp
loop
aas
fadd
push
shr
dec
adc
call
dec
cmps
jmp
mov
imul
ds
cdq
inc
pop
xchg
int
lahf
movs
mov
add
pop
dec
arpl
inc
xchg
ja
or
call
sbb
(bad)
xor
mov
sub
cli
mov
jmp
or
or
pop
cmp
add
pop
leave
cli
pop
hlt
mov
nop
ret
push
mov
pop
mov
add
scas
ror
retf
jae
gs
inc
xlat
into
sub
lahf
push
clc
in
clc
push
mov
jmp
out
push
imul
dec
(bad)
mov
in
mov
cwde
ja
inc
add
ins
fisttp
shr
dec
and
cli
fwait
jge
dec
loopne
lock
sub
and
and
push
adc
fmul
inc
add
ret
push
cmps
xchg
push
jmp
mov
clc
call
icebp
stos
lds
out
push
(bad)
cli
js
cmp
pop
mov
(bad)
call
push
jl
(bad)
pop
jno
sbb
fdiv
mov
sub
std
xchg
xlat
xor
dec
lea
scas
(bad)
call
(bad)
fs
sub
int
sbb
dec
loope
lahf
jecxz
jno
jne
sahf
jno
in
and
(bad)
lahf
add
cmp
push
(bad)
mov
das
adc
or
push
mov
cli
pop
sub
les
sbb
lahf
fwait
xlat
adc
mov
mov
popa
mov
scas
cli
mov
pop
push
mov
mov
jns
lock
add
cs
lods
cld
cmp
pop
jnp
lods
adc
xchg
push
mov
and
push
cdq
dec
fsub
cmp
sar
mov
test
xor
adc
(bad)
push
xchg
pop
lahf
push
scas
out
leave
push
lea
in
xchg
mov
aad
mov
add
loopne
xchg
push
xor
dec
xchg
jg
fcom
ret
push
jge
sub
jle
cmp
nop
repz
cmp
mov
mov
aaa
sub
add
pop
and
call
pop
pushf
jae
push
and
shl
xchg
pop
std
mov
(bad)
jp
xchg
mov
fdiv
and
push
and
sbb
push
test
lods
nop
add
or
retf
pop
cli
int
adc
inc
dec
imul
cmp
push
outs
je
hlt
cmp
sub
in
mov
dec
mov
aaa
pusha
idiv
mov
test
mov
inc
imul
dec
pop
mov
and
xor
mov
jge
mov
(bad)
sbb
sahf
cmps
mov
int3
jp
fisttp
push
mov
jmp
gs
lds
fwait
ins
mov
and
xor
outs
cmp
aam
adc
dec
xchg
push
add
jmp
cmp
gs
sub
lock
int3
lahf
mov
mov
(bad)
cmps
lods
jle
ja
mov
cmp
push
jo
cmp
je
movs
xor
stc
push
retf
xchg
xor
cmp
sub
push
(bad)
out
inc
mov
and
das
sub
sub
xor
and
sbb
sahf
xchg
push
fnstenv
push
jns
fdivp
ins
adc
mov
push
call
nop
iret
push
(bad)
movs
and
push
cs
lds
pop
dec
jo
mov
fistp
inc
or
pop
adc
repz
jmp
or
xor
call
cmp
sahf
mov
sub
add
arpl
out
inc
test
push
mov
imul
(bad)
jmp
adc
(bad)
jmp
xchg
add
shl
cmp
in
mov
iret
pushf
or
mov
jge
push
clc
(bad)
cmp
mov
adc
xchg
hlt
push
dec
das
adc
pop
add
adc
iret
sub
out
dec
dec
inc
pop
pop
push
into
test
mov
mov
cld
dec
fbstp
movs
(bad)
shl
cmps
sbb
jo
add
cmp
sbb
imul
jge
cmp
movs
scas
or
and
and
jnp
lock
mov
ret
and
scas
jnp
enter
add
in
sbb
(bad)
sbb
jg
les
jno
in
pop
popf
mov
inc
inc
pusha
nop
push
ds
ins
adc
sti
adc
xlat
retf
pop
cmp
stos
dec
jg
imul
aas
cli
movs
cli
push
mov
dec
in
jg
jo
or
popa
inc
push
div
xlat
or
sbb
xor
inc
inc
or
push
cld
repnz
lea
pop
push
and
cmps
xchg
ss
pop
jmp
add
das
imul
les
cld
dec
repnz
aam
ret
popf
push
fmul
fmul
rol
jne
mov
out
lahf
dec
les
fldenv
cdq
add
mov
and
mov
mov
jno
mov
dec
fldenv
(bad)
and
jg
mov
js
int3
push
popf
(bad)
push
or
cmp
jg
stos
cmp
retf
rcr
mov
or
in
cmps
mov
cmp
call
lds
xor
ret
ret
fs
push
dec
xchg
jge
dec
jbe
pushf
in
xchg
add
sub
dec
rol
jb
cli
(bad)
jl
dec
leave
(bad)
cdq
sbb
and
clc
repnz
(bad)
aas
push
add
xchg
push
fwait
stos
inc
and
call
add
mov
pop
pop
push
mov
cmps
arpl
ins
(bad)
cmp
outs
push
push
ret
imul
adc
xlat
sub
and
add
mov
and
popf
popa
movs
lods
push
xchg
aas
mov
popa
mov
push
arpl
add
jb
outs
push
xchg
lods
loope
iret
dec
test
mov
adc
jmp
jmp
stc
cs
or
mov
adc
cld
push
push
sub
cmp
cmp
sub
stos
or
mov
mov
push
aad
rcr
(bad)
bound
fidiv
jmp
repz
and
adc
lds
sbb
je
and
fs
cmp
cld
inc
mov
(bad)
push
jae
lock
clc
or
int
inc
mov
daa
cli
xor
or
stos
xor
test
and
pop
sbb
or
cmc
jle
dec
call
pop
outs
jno
inc
dec
shl
jno
xchg
cmp
test
xchg
xor
retf
mov
ficomp
or
(bad)
xchg
ds
pop
loope
mov
sahf
(bad)
loopne
jne
mov
movs
fs
call
add
repz
add
rol
mov
add
pusha
fs
xor
hlt
mov
xor
imul
add
loopne
inc
mov
inc
aad
ss
cmps
dec
and
out
xor
je
pop
mov
push
leave
je
adc
call
adc
mov
inc
int
mov
mov
xor
jmp
stos
lods
push
(bad)
in
cdq
(bad)
fwait
or
shl
test
js
xlat
(bad)
cmp
pop
xchg
scas
leave
fcmovne
int3
or
jbe
neg
into
inc
daa
in
aaa
cmps
add
jecxz
rcr
fucom
mov
popf
(bad)
retf
and
dec
push
cmp
jg
push
lock
outs
add
popf
scas
jge
dec
and
test
and
pop
jge
mov
bound
fnstcw
inc
adc
adc
inc
scas
hlt
add
fist
stc
mov
les
ja
pop
inc
sbb
and
lods
sbb
push
lahf
in
mov
add
sub
push
add
loopne
test
aaa
jmp
(bad)
or
xor
push
sahf
xchg
lods
inc
retf
xlat
das
and
ss
ins
sbb
cmp
mov
jnp
leave
mov
cld
mov
cli
xor
mov
mov
mov
pop
mov
test
inc
call
imul
mov
mov
loop
movs
jae
push
jbe
adc
mov
fdivr
adc
inc
sti
fild
xor
ror
test
push
cmp
adc
cmp
sub
(bad)
xchg
sbb
mov
stc
addr16
lods
aad
jb
stc
out
inc
adc
xchg
cmps
test
xchg
outs
jo
pop
mov
scas
out
add
add
push
adc
jmp
push
into
or
jne
sbb
jle
mov
into
push
and
es
xor
out
repnz
jnp
pop
ret
push
adc
stos
xchg
push
jmp
gs
jle
daa
push
bound
rcr
inc
inc
data16
add
xchg
push
jmp
out
mov
sub
jle
dec
push
daa
add
adc
and
mov
inc
addr16
sbb
and
sti
imul
sub
cmp
int
cmp
lds
loope
(bad)
or
je
fstp
jl
xor
iret
repz
sbb
pop
outs
mov
outs
xchg
xchg
rcl
out
xchg
adc
xchg
inc
retf
cmp
out
jae
aam
pusha
push
ret
scas
mov
sar
lods
inc
mov
sub
aad
std
sbb
jp
ret
ret
ret
(bad)
call
jno
xor
sub
pop
(bad)
fcmove
mov
adc
cmp
sub
and
sbb
outs
stos
imul
or
xchg
lods
xor
jb
test
lods
addr16
jmp
push
cwde
popa
cmp
add
scas
scas
xor
jge
push
ss
retf
pop
retf
mov
cli
inc
and
pop
pop
call
inc
dec
pop
inc
stos
jnp
leave
pop
aam
pop
jbe
inc
dec
cmp
push
and
dec
jb
(bad)
ds
jl
cmp
pushf
fisttp
outs
cmp
loop
cmp
jmp
jo
retf
lds
idiv
and
std
je
(bad)
gs
pop
fsubr
pusha
pop
dec
in
fisttp
sub
stos
movs
popf
dec
pop
mul
icebp
pop
hlt
xchg
scas
dec
jl
jmp
xchg
mul
imul
mov
ret
push
xor
cmps
call
mov
mov
dec
sbb
cmps
mov
ins
pop
fs
jge
mov
xor
jb
or
mov
lods
mov
ins
adc
sbb
adc
outs
adc
cmps
cmp
or
out
cwde
rcl
push
ss
mov
sahf
cmp
out
sub
js
dec
repz
mov
adc
in
jmp
mov
gs
jmp
ja
movs
lock
xor
push
sub
test
sti
adc
out
cmp
and
adc
jl
ds
jge
push
hlt
dec
mov
cmps
fisub
add
in
xchg
mov
sub
push
neg
cmp
in
jno
out
add
and
pmuludq
ret
sub
inc
sti
mov
inc
(bad)
cdq
jle
lahf
xchg
loop
add
and
xor
or
mov
jle
cmps
push
push
mov
dec
les
sti
or
out
pop
jg
push
pop
push
pop
in
mov
fidiv
nop
scas
dec
loop
pushf
dec
push
xor
int
cdq
inc
pusha
in
mov
jg
dec
aad
aas
es
cmp
fiadd
movs
adc
das
pop
sti
add
outs
xchg
mov
int3
in
test
movs
add
mov
retf
and
imul
mov
sbb
in
xor
mov
dec
mov
jnp
test
(bad)
mov
mov
in
mov
out
(bad)
fimul
lods
je
jmp
adc
xor
jo
mov
daa
addr16
neg
ds
or
xor
jmp
dec
cs
fwait
test
ret
test
test
clc
(bad)
out
into
xchg
pushf
xchg
or
int3
cmp
neg
and
sbb
shl
xchg
xor
xchg
sar
imul
xchg
pop
xchg
cld
shl
lea
xor
mov
sbb
pop
cmp
mov
sub
pop
jp
mov
xlat
shl
sar
adc
cmp
mov
pop
mov
jbe
pop
loop
or
mov
mov
adc
idiv
xchg
jge
ins
ins
and
pop
ffree
fdivr
sti
out
(bad)
jmp
cmp
cld
movs
mov
jbe
push
pop
or
jne
push
sub
fimul
hlt
test
cmp
or
cwde
addr16
outs
sahf
push
jno
pop
fbstp
cmp
xor
dec
jge
mov
jnp
xchg
mov
std
movs
pop
iret
lahf
sbb
aas
dec
loop
rep
icebp
popa
jns
jo
(bad)
popf
lds
std
test
xor
push
mov
loop
popa
jmp
inc
add
xchg
mov
xlat
in
mov
push
fcmovbe
out
xor
lahf
jno
jmp
pop
xor
mov
stos
ins
pop
ret
xor
scas
movs
fisubr
mov
cmps
bound
fimul
and
jl
lods
fwait
arpl
lahf
dec
jno
stos
jge
arpl
cmp
push
cli
cmp
pushf
mov
or
inc
mov
(bad)
lds
inc
mov
sbb
add
dec
add
dec
repnz
push
das
in
xor
arpl
outs
adc
lea
ds
inc
xlat
mov
out
mov
jo
xchg
(bad)
mov
inc
popf
pop
xor
xchg
(bad)
std
popf
xor
adc
movs
xor
nop
test
adc
mov
mov
add
jno
enter
mov
or
push
hlt
scas
addr16
mov
cmp
cmps
sbb
mov
mov
or
icebp
xor
mov
outs
xchg
xchg
stos
(bad)
dec
cmp
mov
repnz
or
sbb
jnp
test
jecxz
adc
aam
js
fsubr
addr16
leave
jns
rol
pop
fistp
jmp
sti
pop
sub
dec
jae
rcr
mov
or
push
xor
call
fldcw
movs
or
and
dec
icebp
rcr
jmp
test
cdq
mov
add
jns
lock
xchg
push
add
hlt
je
mov
es
jae
int
lods
mov
imul
push
push
pop
aam
pop
push
push
iret
add
ror
fwait
stos
sbb
ret
retf
xlat
mov
call
pusha
sbb
or
ret
sbb
bound
stos
jne
fdiv
add
pop
call
pop
push
loope
xlat
jmp
mov
or
es
or
xor
mov
cld
iret
and
idiv
(bad)
jle
dec
mov
pop
aam
adc
jge
in
cmp
int3
push
jns
leave
ret
repnz
mov
add
jno
xchg
(bad)
clc
xlat
inc
sti
mov
int3
dec
add
pop
add
fistp
dec
loopne
cmp
mov
lods
mov
pop
push
out
rcr
jmp
xor
push
aas
xor
popa
xchg
in
cld
repz
push
test
(bad)
into
pop
sbb
(bad)
and
shl
imul
sbb
stc
dec
rol
xor
and
dec
sbb
ds
mov
sbb
cmp
dec
lods
pop
pop
in
and
and
stc
mov
or
sub
inc
jmp
lods
mov
pop
sub
fsub
pop
push
jne
jg
adc
aam
sbb
push
add
rcr
icebp
call
cwde
icebp
jmp
xlat
sub
stc
(bad)
test
vmovdqu
mov
out
outs
pop
es
fiadd
leave
mov
pop
dec
pop
mov
inc
idiv
imul
or
mov
xchg
imul
arpl
dec
je
loope
dec
ret
pusha
pop
sub
mov
(bad)
pushf
bound
push
test
dec
cmps
pop
sbb
repnz
scas
jle
ret
(bad)
mov
sub
jnp
adc
dec
dec
addr16
inc
(bad)
and
sbb
sub
jb
fucom
pop
cmps
in
out
or
xchg
pop
mov
cld
(bad)
xchg
cmp
sti
jne
mov
add
mov
pop
dec
mov
retf
out
scas
inc
(bad)
(bad)
clc
jo
inc
pop
fwait
retf
dec
push
lds
jno
cmp
stc
fistp
jmp
aas
test
movs
xor
add
cmp
int
cmp
cmps
int
stc
fisttp
hlt
mov
jge
inc
push
hlt
and
out
jo
adc
test
xchg
loop
inc
std
adc
test
cmps
jae
fwait
cmp
cmps
mov
scas
fldcw
mov
lahf
lods
add
jg
mov
mov
rcl
mov
cmc
push
dec
lahf
mov
std
mov
cmps
add
and
cmp
movs
sub
lahf
retf
jb
sbb
sbb
cmp
jge
scas
and
jae
out
cmp
pop
std
(bad)
jmp
push
stos
sub
dec
(bad)
cli
mov
mov
jecxz
pop
jne
lods
jnp
xor
(bad)
in
loopne
or
arpl
fadd
add
in
push
cmp
xchg
stos
pop
mov
cmps
dec
loopne
mov
push
adc
sahf
lock
inc
push
mov
stc
cli
or
jle
cld
sbb
jno
(bad)
mov
lds
adc
outs
or
outs
test
push
xchg
aad
mov
cmp
mov
jno
cmc
div
test
mov
int
jl
and
jo
cmps
popf
(bad)
fdiv
lock
je
popa
adc
or
(bad)
fld1
mov
pop
pop
ins
fs
sbb
xor
mov
fcmovnbe
dec
iret
sbb
sbb
cmps
iret
or
mov
sbb
push
cmc
add
jb
pop
or
inc
push
scas
mov
mov
sbb
xchg
adc
retf
inc
fdivrp
cmps
jae
xchg
retf
cdq
lahf
push
jbe
out
lods
cmp
jmp
dec
mov
and
add
adc
shl
ss
add
imul
(bad)
loope
dec
retf
fild
mov
bound
loop
dec
out
ss
dec
sbb
jns
iret
test
jmp
or
in
lea
rcl
shl
imul
stos
and
hlt
and
out
lea
or
or
in
cmp
ins
pop
call
ret
mov
stc
jge
xchg
(bad)
ins
mov
adc
into
ret
or
jne
out
mov
xchg
jo
and
jnp
pop
mov
mov
fidivr
mov
lods
sub
cmp
fdiv
mov
mov
sbb
jecxz
sub
js
imul
add
repnz
out
(bad)
jns
ja
or
cmp
cmp
in
sbb
pop
loop
aad
mov
add
adc
ror
mov
popf
mov
call
mov
xchg
pop
inc
arpl
push
out
imul
xor
jb
js
dec
mov
adc
dec
bound
inc
test
mov
fidiv
outs
mov
or
jns
cld
mov
lock
jl
popf
das
xchg
cmp
push
imul
dec
mov
adc
push
repnz
test
pusha
mov
ds
inc
adc
loop
jae
cwde
mov
and
sub
mov
pop
push
and
and
jmp
fsin
jns
dec
(bad)
cmp
(bad)
inc
in
mov
jg
mov
outs
mov
(bad)
push
and
sub
mov
inc
adc
ds
cld
popf
mov
cmps
push
call
pop
jns
test
sbb
mov
push
aam
test
int3
jno
popf
push
jmp
test
xchg
ror
adc
mov
int
mov
and
push
les
imul
mov
gs
lahf
mov
jl
mov
dec
pop
daa
call
cdq
gs
mov
in
cld
mov
out
inc
imul
imul
in
xchg
ins
ja
(bad)
cmps
dec
xor
mov
imul
push
mov
fst
cmp
mov
sbb
jbe
lods
push
jns
pop
lds
movs
xor
bts
adc
sub
mov
adc
mov
cmps
pusha
out
retf
jmp
mov
jo
pushf
fcmovbe
test
jg
mov
lock
jmp
xlat
push
hlt
push
push
mov
gs
push
mov
lahf
xor
(bad)
mov
mov
or
adc
test
and
pop
sbb
inc
mov
cmp
ret
div
fsub
sub
mov
jle
mov
push
out
dec
push
mov
xchg
rcr
call
(bad)
(bad)
and
sbb
lahf
jne
pop
fmul
push
cwde
sbb
gs
sub
cmp
sub
aaa
in
jp
dec
mov
add
std
pop
add
pop
xor
lds
loopne
mov
cs
pop
xor
pusha
int3
xor
mov
jne
popa
add
push
mov
bswap
sub
sub
enter
mov
cmps
fidiv
xchg
rol
cwde
(bad)
cli
dec
push
retf
mov
add
or
sbb
sbb
stc
popa
sbb
ror
dec
fist
ret
jo
pushf
sti
add
stos
test
cwde
sti
or
fs
pushf
sbb
fcmovne
mov
and
push
jae
(bad)
loop
and
jmp
xor
popa
out
pop
xchg
cld
lods
or
pushf
or
pop
jo
jno
xchg
jmp
inc
pushf
ds
loope
jno
shr
mov
in
bound
cmc
pop
and
ret
lock
aaa
push
push
cld
dec
out
push
pop
push
xchg
sub
scas
adc
test
inc
scas
inc
ss
sbb
sbb
push
call
xchg
fwait
jne
shl
push
mov
push
in
sbb
cmp
cld
out
bound
fldcw
stos
adc
adc
outs
les
test
aad
jl
pusha
push
ffreep
pop
mov
ror
sbb
fwait
sti
fld
inc
neg
jno
and
adc
add
mov
test
cs
push
xor
call
add
shl
jge
cmps
out
cmp
scas
(bad)
ret
inc
push
aaa
inc
inc
leave
sbb
push
out
pop
jmp
mov
mov
(bad)
les
mov
jge
push
jecxz
cmp
fldenv
in
sub
dec
mov
pop
movs
add
mov
adc
call
adc
pop
sub
jge
int3
jnp
pushf
xchg
jae
int3
mov
push
xchg
push
cmps
fidiv
scas
push
mov
adc
sbb
dec
mov
in
sub
or
jmp
push
jnp
iret
jecxz
retf
and
out
jl
pusha
lods
fsubr
cmps
xchg
sbb
js
xchg
leave
dec
repz
push
(bad)
das
push
dec
jge
mov
sub
ret
cmp
adc
(bad)
lods
pop
inc
mov
inc
imul
test
lds
(bad)
xchg
sub
hlt
hlt
inc
or
inc
stos
xor
jmp
jae
cmp
jae
imul
mov
mov
fild
push
cmps
cmps
bound
jno
cmc
loop
(bad)
adc
cmp
not
pop
push
fwait
push
inc
(bad)
mov
and
in
jo
mov
jns
inc
sahf
mov
fsubr
outs
cmc
ficomp
sub
sahf
or
lods
nop
ds
jbe
sbb
ja
pop
dec
jmp
sub
ja
jne
fdivr
lea
ins
cmps
mov
lods
cmp
outs
inc
and
inc
inc
mov
pop
or
xchg
ret
adc
retf
into
pop
dec
enter
jmp
bound
inc
fisttp
pop
mov
es
pop
jge
cdq
adc
push
and
mov
arpl
ss
es
mov
add
imul
add
imul
dec
test
sbb
imul
sub
mov
jae
ret
ins
xchg
or
push
test
fdivr
(bad)
arpl
out
cmp
enter
fistp
mov
(bad)
inc
adc
mov
dec
outs
outs
add
pop
jmp
jo
popf
idiv
scas
ss
mov
out
aaa
and
pop
jo
pop
inc
jb
js
cld
and
mov
pusha
iret
sbb
nop
ss
dec
or
and
stos
loopne
push
idiv
mov
jae
loope
or
cmps
push
pop
push
pushf
push
outs
and
out
cmp
sub
push
xor
push
(bad)
cld
dec
loop
leave
test
xchg
stos
lea
mov
sbb
out
(bad)
mov
dec
mov
add
pop
std
retf
xchg
push
jle
into
mov
push
push
mov
pop
mov
jecxz
int
inc
dec
popa
in
pop
gs
cmp
in
pusha
and
adc
pop
sub
nop
or
and
scas
rcl
mov
(bad)
lock
in
xchg
mov
adc
inc
mov
stos
sub
mov
lods
aad
sbb
ja
mov
pop
jmp
mov
mov
adc
add
lods
or
nop
jmp
jae
cdq
push
pop
cmp
mov
jp
fwait
ss
xchg
retf
punpckldq
inc
shl
das
and
cmp
mov
mov
sbb
jne
mov
sbb
push
adc
jle
test
paddd
ss
mov
dec
jp
pop
mov
push
pushf
jge
movs
sbb
mov
movs
fidivr
ret
mov
(bad)
mov
push
jg
es
xor
xor
div
gs
lea
(bad)
fsubr
inc
mov
sti
sbb
sahf
xor
cld
pop
bnd
arpl
push
dec
stc
add
pop
imul
jp
out
cdq
(bad)
push
dec
sub
retf
sbb
add
cmp
aaa
popa
adc
mov
mov
sbb
movs
out
fist
jne
push
sbb
pop
inc
cmps
sub
(bad)
xor
or
(bad)
jmp
add
rol
jno
add
pop
aaa
adc
inc
and
(bad)
jnp
ja
xchg
clc
shr
jae
stc
mov
out
pop
xor
adc
shl
mov
mov
sbb
xlat
mov
daa
jmp
jle
sub
pop
(bad)
push
(bad)
dec
stc
movs
sbb
mov
bts
gs
push
or
push
inc
int3
(bad)
out
jo
dec
sub
push
(bad)
into
cmp
movs
jmp
inc
lods
add
leave
nop
mov
and
jl
daa
sub
repnz
shr
std
cmc
out
or
push
push
sti
mov
xor
test
inc
and
(bad)
jmp
ret
pushf
cwde
aaa
xchg
stc
mov
sar
aaa
add
push
dec
push
jp
cdq
jg
dec
repz
inc
pop
xchg
xchg
push
xlat
test
(bad)
dec
lods
or
cmp
movs
or
lods
cli
pop
cwde
in
retf
cmps
or
inc
jbe
and
dec
das
mov
mov
jle
and
jmp
ss
call
hlt
pop
push
rol
lods
into
popf
xor
popf
rcr
je
pop
inc
inc
mov
je
aam
lods
dec
in
adc
adc
sbb
xor
sbb
rcr
adc
psubd
sub
inc
mov
arpl
push
in
sbb
js
xor
sub
jl
dec
fs
scas
jl
xchg
adc
lea
push
fidivr
and
cmp
xor
cdq
dec
xor
cmps
test
jmp
popf
inc
test
sub
in
cmp
cmp
jmp
nop
mul
mov
sar
sahf
dec
adc
sub
repz
xchg
std
dec
ja
xchg
neg
push
mov
jp
aas
shl
pop
mov
and
push
mov
and
je
loope
dec
and
ss
sti
cmp
test
test
push
cmc
in
xchg
inc
or
push
xchg
jns
mov
cli
int
xchg
mov
bound
jge
cdq
out
or
enter
out
cmp
jb
shl
loope
or
adc
hlt
push
mov
xor
adc
sub
mov
add
xor
cwde
fnsave
or
xchg
jnp
sub
xchg
popa
(bad)
xchg
mul
dec
inc
arpl
add
fwait
lods
fld
or
je
cmp
fs
iret
sbb
int
mov
fcmovnbe
neg
loope
mov
dec
sub
inc
scas
int
mov
movs
mov
mov
push
add
test
xlat
cmp
out
jo
add
adc
cmp
(bad)
mov
in
loop
adc
sti
mov
sub
ins
punpcklbw
jo
stc
(bad)
mov
add
in
(bad)
icebp
lods
sub
mov
xor
call
retf
(bad)
mov
and
adc
fld
ret
mov
sub
jne
adc
inc
pop
aaa
jb
sub
xchg
out
mov
cmps
jno
ins
mov
imul
mov
push
(bad)
mov
hlt
push
cmp
adc
xchg
std
and
inc
cld
(bad)
fcmovnb
dec
test
loopne
mov
inc
pop
fmul
hlt
inc
pop
(bad)
aaa
call
pushf
pusha
push
mov
push
push
cmps
mov
push
mov
test
add
sub
xor
push
dec
in
inc
repz
retf
(bad)
jae
(bad)
push
ds
jle
sub
push
xchg
loopne
mov
pop
iret
retf
cmp
shl
movs
pushf
dec
mov
es
leave
cmp
ins
lds
movs
movs
cld
sbb
add
lods
test
ins
mov
aam
loopne
push
cmp
jno
push
cmps
or
adc
pop
dec
(bad)
shr
shl
adc
jecxz
out
aam
jmp
push
ins
mov
inc
jo
add
or
dec
push
cs
fisttp
adc
cmps
or
add
push
div
or
popa
outs
mov
cmp
mov
jae
mov
jmp
repnz
nop
out
and
jae
pusha
xchg
xchg
mov
fmul
or
sti
loopne
mov
lds
loop
mov
sbb
cld
test
xchg
mov
cmps
mov
xor
inc
xchg
mov
sub
mov
add
pop
pop
xchg
cmp
mov
xor
cmp
mov
pop
push
fidiv
push
and
fnsave
cmp
ficomp
cmp
ss
mov
adc
cs
fisub
pop
xchg
into
xchg
add
xor
shl
mov
and
jmp
add
dec
shl
sub
sub
mov
xor
mov
bswap
and
add
xor
xor
xchg
mov
jmp
add
add
xor
xchg
neg
or
add
or
ror
rol
sub
jmp
add
shr
xor
mov
ror
rol
jmp
call
mov
ror
rol
and
xchg
mov
jmp
mov
bswap
xchg
and
shr
or
add
jmp
pop
xchg
or
mov
sub
and
xchg
jmp
push
add
xor
mov
shr
mov
rol
jmp
push
or
dec
or
not
add
add
xchg
dec
ror
and
and
and
sub
jmp
pop
add
and
mov
xor
mov
or
jmp
push
and
mov
dec
xchg
mov
sub
and
and
not
dec
jmp
push
and
rol
add
or
add
add
shr
or
not
or
nop
and
or
or
xchg
xor
jmp
push
xor
bswap
xchg
inc
sub
inc
and
jmp
push
xchg
not
or
dec
neg
add
sub
and
jmp
mov
add
shr
add
and
mov
xor
add
jmp
mov
mov
or
xchg
or
mov
jmp
pop
or
xchg
xchg
add
xor
add
rol
or
jmp
push
xchg
mov
or
ror
xor
mov
mov
jmp
mov
mov
xor
dec
not
bswap
xchg
add
add
or
jmp
pop
xor
or
xor
sub
neg
or
jmp
nop
mov
xor
add
xchg
mov
dec
add
mov
add
not
jmp
pop
ror
mov
xor
and
or
jmp
add
and
add
and
mov
jmp
push
sub
dec
mov
bswap
jmp
pop
rol
xor
ror
xchg
sub
mov
shl
not
jmp
push
not
mov
xchg
and
xor
xchg
or
ror
add
and
jmp
push
xchg
or
xchg
add
xchg
sub
xchg
add
not
ror
xor
jmp
push
mov
xor
xchg
bswap
jmp
push
or
dec
xchg
and
shr
xchg
and
and
bswap
add
mov
dec
dec
or
jmp
rol
sub
not
ror
xor
add
or
jmp
mov
or
mov
and
not
or
xor
inc
or
xchg
shr
or
neg
jmp
rol
add
ror
sub
mov
and
jmp
nop
sub
xor
bswap
sub
and
or
and
mov
mov
or
xor
xor
mov
xchg
jmp
pop
xchg
rol
not
sub
mov
dec
and
xor
jmp
inc
and
or
bswap
and
not
or
xor
or
jmp
ret
add
xchg
xchg
and
bswap
or
shr
bswap
and
or
not
jmp
sub
and
or
add
not
sub
xor
add
or
or
neg
xchg
and
sub
ror
jmp
pop
and
xchg
and
sub
sub
or
xor
or
jmp
pop
sub
xchg
or
add
sub
or
nop
jmp
push
dec
ror
sub
and
and
rol
xchg
bswap
mov
mov
add
sub
jmp
pop
xchg
xchg
add
mov
and
add
shl
mov
dec
xor
mov
mov
jmp
mov
rol
xchg
mov
or
rol
mov
inc
or
xor
not
not
xor
rol
mov
sub
jmp
call
not
shr
ror
add
mov
shr
jmp
push
not
shr
and
shr
or
shr
inc
and
xor
jmp
ret
ror
xor
xor
sub
xor
add
sub
inc
rol
sub
not
shl
jmp
pop
sub
neg
mov
sub
or
sub
bswap
ror
xor
mov
sub
xor
or
mov
jmp
ret
mov
dec
not
or
xor
shl
shl
sub
ror
sub
and
not
mov
xchg
and
jmp
push
mov
mov
or
bswap
xchg
shr
sub
shr
or
shl
jmp
push
and
and
and
xor
neg
add
sub
xor
xor
add
xor
jmp
pop
neg
or
add
xor
neg
add
or
bswap
ror
and
jmp
mov
xor
xchg
mov
shr
inc
shl
or
and
add
jmp
add
inc
xor
inc
and
and
dec
or
shr
xchg
sub
inc
xor
jmp
cmp
jmp
pop
dec
add
or
mov
sub
shl
not
jmp
pop
rol
or
neg
and
or
shl
inc
mov
sub
xor
xor
jmp
push
xchg
xchg
and
rol
and
neg
xchg
sub
add
or
xor
or
mov
jmp
pop
xor
ror
or
not
sub
or
or
or
jmp
push
xchg
mov
neg
xchg
or
sub
jmp
pop
mov
xor
add
xchg
shr
xor
shl
or
rol
xchg
ror
jmp
pop
xor
ror
or
shl
xchg
xor
xchg
and
xchg
jmp
push
xor
sub
and
add
sub
mov
neg
ror
bswap
shr
or
jmp
rol
sub
xor
shl
mov
neg
or
or
inc
or
and
xor
jmp
pop
sub
add
add
xor
mov
dec
sub
sub
shl
jmp
push
and
or
sub
and
sub
mov
mov
bswap
xchg
shr
xor
jmp
call
xchg
add
sub
and
xchg
xchg
xchg
shr
not
and
and
xor
mov
xchg
sub
jmp
call
ror
or
xor
dec
xor
dec
add
and
and
sub
not
rol
and
jmp
pop
and
xchg
or
xor
add
shl
xchg
jmp
push
sub
xor
sub
add
inc
bswap
add
jmp
mov
xchg
or
or
sub
mov
add
mov
ror
sub
mov
jmp
mov
or
shr
not
sub
bswap
nop
and
shl
sub
mov
sub
xchg
bswap
jmp
mov
xchg
and
add
xor
sub
mov
add
inc
mov
inc
jmp
nop
xchg
and
mov
and
xchg
shl
and
and
jmp
mov
sub
neg
or
xchg
add
shr
xor
mov
jmp
pop
sub
xor
sub
or
shr
shl
neg
jmp
push
and
sub
add
rol
or
mov
not
mov
mov
inc
mov
mov
mov
or
inc
xchg
jmp
call
xchg
add
add
inc
neg
or
rol
mov
and
shr
mov
xor
jmp
mov
xchg
xchg
or
or
nop
sub
xor
and
add
jmp
add
sub
shr
and
and
add
sub
mov
xchg
and
shr
jmp
mov
add
add
neg
add
sub
and
mov
and
or
ror
jmp
pop
or
neg
add
mov
or
xor
shr
add
shr
mov
add
and
and
jmp
push
or
sub
or
xchg
mov
dec
xor
add
jmp
mov
add
mov
and
rol
jmp
pop
or
add
mov
mov
rol
dec
add
and
ror
xchg
mov
sub
and
jmp
ret
neg
xchg
or
xchg
and
mov
not
jmp
pop
and
mov
or
and
xor
inc
xchg
sub
sub
jmp
pop
or
add
sub
xchg
sub
sub
and
add
or
xchg
and
dec
inc
inc
rol
add
jmp
xor
shr
xor
and
shr
add
or
shr
xor
inc
mov
ror
add
add
xchg
jmp
push
mov
sub
and
xor
sub
and
add
and
jmp
mov
or
shl
xchg
add
xchg
bswap
shl
or
mov
sub
xor
xor
jmp
push
and
or
sub
sub
or
add
mov
xchg
ror
jmp
push
or
mov
or
sub
mov
ror
or
sub
not
dec
jmp
mov
and
xor
add
sub
mov
xor
mov
sub
dec
xor
mov
or
xchg
jmp
mov
add
sub
xor
rol
rol
mov
not
mov
xor
jmp
push
nop
add
and
or
xchg
mov
add
or
xor
xchg
xor
shl
and
xchg
or
jmp
push
xor
add
add
ror
add
or
jmp
pop
sub
xchg
inc
and
sub
sub
and
jmp
pop
and
and
or
ror
or
neg
jmp
push
xchg
mov
xchg
rol
bswap
or
add
shr
jmp
pop
xor
xchg
xor
sub
xor
add
jmp
mov
shl
neg
add
sub
sub
mov
xchg
add
add
sub
jmp
call
or
mov
dec
xor
xor
mov
and
and
bswap
mov
add
sub
jmp
call
and
dec
and
and
xchg
xor
jmp
push
xor
and
add
dec
or
and
shr
rol
or
or
ror
jmp
push
sub
bswap
add
xor
neg
jmp
pop
or
and
xchg
sub
neg
sub
mov
rol
not
or
dec
jmp
pop
not
bswap
or
and
neg
and
bswap
and
mov
jmp
pop
xor
add
inc
xchg
not
and
shl
xor
jmp
push
add
mov
xor
shl
inc
sub
shr
mov
xor
sub
xor
or
jmp
pop
or
xchg
neg
inc
not
xor
sub
ror
xchg
jmp
mov
shr
mov
ror
rol
add
not
mov
mov
jmp
inc
xor
and
mov
shr
mov
xchg
and
xchg
add
xchg
jmp
mov
and
ror
xor
ror
inc
xor
sub
shl
sub
jmp
call
and
add
and
rol
xor
xchg
add
mov
mov
shl
not
jmp
mov
xchg
bswap
jmp
cmp
jmp
mov
mov
ror
and
mov
ror
xchg
xor
xor
rol
jmp
mul
sub
and
nop
sub
mov
not
mov
xchg
and
sub
and
sub
jmp
nop
mov
sub
sub
xor
add
and
jmp
call
sub
ror
bswap
mov
and
shl
add
sub
shl
dec
jmp
call
mov
xchg
and
xchg
add
xchg
ror
xor
shr
sub
xor
not
neg
jmp
push
shr
mov
and
inc
mov
xor
inc
or
inc
mov
xchg
add
shl
jmp
ret
or
mov
add
dec
jmp
jne
shr
sub
and
xor
xor
dec
or
jmp
call
xor
or
and
xor
and
mov
and
add
jmp
pop
and
and
xor
mov
add
bswap
sub
dec
not
add
add
add
or
jmp
sub
add
add
shr
mov
xchg
xchg
and
jmp
pop
add
bswap
or
jmp
sub
and
and
xor
or
xchg
xor
shr
jmp
rol
xor
xor
shr
sub
xchg
not
xor
and
jmp
call
and
add
xchg
ror
mov
or
jmp
push
or
mov
neg
dec
sub
sub
dec
jmp
pop
or
shl
xchg
bswap
or
and
rol
not
xor
inc
jmp
mov
shr
ror
and
or
add
mov
jmp
push
add
add
shr
or
or
sub
mov
or
xor
xor
add
mov
xchg
and
jmp
push
and
neg
inc
mov
mov
bswap
mov
mov
jmp
pop
xor
xor
shl
xchg
jmp
call
rol
and
add
or
neg
add
mov
or
or
xchg
xor
jmp
pop
shr
inc
or
sub
xor
xchg
xor
and
shl
bswap
dec
mov
jmp
ret
sub
or
shl
shr
xor
mov
sub
neg
jmp
push
mov
add
or
sub
nop
jmp
pop
inc
dec
xchg
sub
and
bswap
and
mov
jmp
movzx
ror
and
mov
or
xchg
bswap
mov
and
xchg
xor
jmp
pop
mov
mov
neg
and
xor
jmp
add
add
shl
shr
xor
or
not
xchg
nop
or
and
not
xor
jmp
rol
sub
mov
sub
xor
xor
shr
or
bswap
jmp
mov
and
add
sub
dec
mov
add
mov
shl
xchg
mov
or
mov
jmp
push
mov
and
xor
xor
sub
mov
inc
and
sub
xchg
shl
bswap
jmp
mov
or
sub
shl
shr
and
or
rol
shl
sub
jmp
pop
or
xchg
and
mov
xchg
xchg
xor
add
xchg
sub
neg
shl
xor
not
jmp
mov
or
xor
sub
and
shr
jmp
add
or
add
mov
sub
and
mov
jmp
push
xor
bswap
inc
add
jmp
rol
xor
sub
rol
add
shr
bswap
xor
mov
sub
jmp
add
xchg
sub
or
sub
add
nop
xor
or
jmp
xor
xor
shr
add
xor
and
ror
xor
jmp
call
and
add
mov
xchg
xor
xchg
xchg
jmp
call
mov
bswap
add
shr
xor
shr
xor
sub
inc
inc
rol
ror
jmp
push
and
dec
and
sub
not
xor
sub
xor
xor
or
or
mov
jmp
push
mov
not
xor
or
add
or
add
jmp
call
bswap
xor
xchg
sub
xchg
xchg
jmp
call
and
dec
sub
xor
mov
dec
jmp
pop
ror
mov
not
add
xor
mov
shr
shl
or
shl
and
jmp
mov
mov
sub
shl
or
mov
xchg
and
and
and
mov
xor
jmp
push
and
mov
and
nop
xor
shl
neg
inc
or
jmp
call
inc
and
sub
or
mov
ror
xor
sub
xor
dec
or
jmp
call
xchg
or
rol
add
or
add
xor
bswap
mov
jmp
call
xor
dec
not
jmp
mul
xor
bswap
xchg
xor
and
mov
or
jmp
push
and
and
add
mov
not
or
sub
xor
and
jmp
pop
or
inc
dec
mov
add
or
mov
xor
add
or
add
neg
jmp
add
mov
and
xor
xor
xchg
xor
and
mov
nop
dec
not
jmp
mov
mov
bswap
not
xchg
or
xor
sub
xchg
or
rol
mov
xor
jmp
ret
and
neg
add
sub
or
xchg
shr
jmp
nop
xor
sub
add
or
xor
shl
add
xor
or
xor
jmp
shl
xchg
inc
and
xchg
jmp
ror
or
xchg
sub
xchg
or
xor
add
inc
jmp
pop
or
add
or
xchg
shr
mov
sub
add
xchg
add
jmp
pop
not
xor
neg
mov
ror
mov
mov
xor
jmp
cmp
jmp
push
nop
neg
and
or
or
not
mov
dec
jmp
mov
and
add
sub
add
xor
mov
xchg
and
mov
neg
not
or
jmp
jne
bswap
add
xor
mov
add
add
sub
xor
xchg
mov
xor
shr
add
add
ror
jmp
bswap
and
xchg
sub
and
and
mov
xor
rol
or
sub
or
dec
jmp
call
or
sub
sub
mov
and
mov
jmp
push
ror
xor
xor
xor
inc
or
mov
and
mov
or
mov
bswap
dec
jmp
pop
mov
xor
or
sub
sub
xchg
and
jmp
ret
or
and
neg
ror
and
rol
sub
dec
xor
jmp
call
xor
or
ror
xor
ror
or
jmp
pop
ror
sub
inc
inc
add
sub
rol
jmp
call
sub
add
xor
dec
not
sub
xchg
mov
neg
not
neg
jmp
shl
neg
sub
dec
sub
xor
and
jmp
call
mov
dec
add
add
ror
mov
mov
ror
shr
mov
shr
jmp
push
or
and
shr
xor
or
nop
xchg
xor
rol
xchg
jmp
call
xor
shr
and
xor
add
dec
xchg
inc
mov
jmp
nop
bswap
not
sub
xor
add
mov
and
add
mov
mov
jmp
pop
or
xor
mov
inc
sub
add
and
and
add
jmp
pop
add
mov
bswap
xchg
sub
xor
xor
sub
shr
or
sub
or
jmp
call
mov
inc
sub
add
inc
xor
and
xchg
nop
jmp
pop
or
rol
xchg
mov
or
add
mov
mov
xor
jmp
pop
mov
and
mov
neg
add
and
add
sub
rol
xor
jmp
call
xor
mov
neg
nop
neg
jmp
mov
xchg
sub
add
add
and
rol
add
jmp
call
ror
xchg
nop
xchg
and
add
jmp
push
sub
sub
or
ror
nop
inc
mov
jmp
push
dec
inc
neg
or
shr
dec
xor
or
or
ror
ror
not
sub
jmp
nop
add
xchg
xor
bswap
shr
dec
add
or
rol
inc
shl
jmp
sub
add
sub
jmp
mov
or
or
ror
or
mov
mov
or
and
xor
rol
xor
mov
not
jmp
push
neg
shr
ror
sub
shr
and
not
xor
jmp
mov
xor
not
bswap
not
mov
neg
xor
mov
jmp
push
and
xchg
sub
add
add
sub
inc
or
and
or
jmp
push
or
mov
xor
xor
mov
shl
xor
not
or
mov
and
ror
shr
add
bswap
jmp
nop
xor
xchg
mov
dec
rol
jmp
add
or
not
xor
add
or
sub
mov
shr
sub
mov
and
xchg
not
rol
jmp
pop
or
or
or
xor
inc
sub
shl
xchg
mov
jmp
mov
shr
sub
and
and
and
or
add
xchg
add
and
or
bswap
jmp
pop
or
dec
and
not
add
add
or
inc
mov
sub
jmp
call
shr
nop
mov
inc
xchg
mov
jmp
add
xchg
or
and
sub
bswap
jmp
pop
and
or
shr
xor
sub
shl
sub
add
xor
jmp
mov
xor
neg
and
add
shr
ror
sub
shl
xchg
add
and
jmp
push
inc
and
xchg
add
sub
shr
bswap
rol
xchg
add
jmp
pop
and
dec
add
sub
xchg
neg
xor
or
mov
dec
jmp
add
add
mov
mov
xchg
sub
xchg
and
rol
jmp
pop
or
shl
xchg
and
mov
jmp
mov
mov
inc
add
sub
add
inc
mov
not
and
sub
shl
not
mov
jmp
push
or
or
or
add
or
shr
jmp
push
shl
or
mov
neg
add
add
add
and
xchg
jmp
mov
dec
inc
xchg
and
mov
or
and
jmp
rol
sub
neg
mov
sub
not
xor
xchg
and
add
and
shl
ror
sub
mov
jmp
mov
sub
xor
xchg
jmp
push
neg
xchg
ror
xchg
sub
mov
sub
sub
jmp
mov
or
shr
xchg
add
bswap
add
nop
inc
xor
xchg
xor
sub
and
sub
mov
jmp
push
and
add
or
dec
and
xor
neg
ror
sub
rol
jmp
pop
or
not
xchg
or
shl
xor
and
dec
jmp
mov
xchg
add
add
jmp
push
inc
and
xor
inc
xor
inc
xor
bswap
ror
sub
jmp
rol
xor
mov
sub
sub
xor
bswap
rol
jmp
call
shr
mov
mov
xor
shl
sub
sub
xchg
not
jmp
mov
xchg
sub
sub
and
sub
xor
xor
inc
mov
sub
jmp
call
sub
xor
xor
sub
sub
jmp
push
mov
shl
sub
ror
mov
xchg
inc
neg
dec
mov
neg
xor
jmp
push
rol
sub
xchg
and
mov
mov
mov
sub
add
xor
xchg
dec
jmp
add
inc
or
not
or
xor
jmp
mov
mov
xor
or
shl
xor
not
and
xor
jmp
push
bswap
ror
neg
xchg
xor
and
mov
xor
jmp
ret
xchg
add
add
add
and
mov
xor
and
mov
and
xor
jmp
mov
neg
and
xor
neg
or
or
not
neg
bswap
xor
xchg
nop
jmp
xor
and
dec
xor
or
or
add
not
shl
jmp
not
shr
inc
or
mov
xor
xchg
mov
and
shl
xchg
add
sub
jmp
add
xor
sub
not
inc
inc
xchg
bswap
or
shr
jmp
call
add
xor
dec
mov
sub
mov
xor
dec
shl
jmp
push
sub
bswap
xchg
add
or
inc
xor
xor
xchg
mov
sub
and
sub
jmp
push
shl
and
neg
xchg
mov
shl
ror
xor
jmp
push
add
mov
nop
and
add
xor
sub
rol
xchg
and
jmp
call
xor
or
dec
xchg
or
sub
xchg
and
bswap
jmp
push
sub
ror
mov
or
add
sub
not
jmp
pop
add
add
bswap
and
mov
and
shr
xor
or
or
jmp
call
sub
sub
sub
xor
rol
add
mov
xor
or
shr
add
inc
or
jmp
call
xor
rol
xor
xchg
xchg
mov
xor
add
add
shl
inc
jmp
mov
and
and
mov
neg
mov
xchg
inc
xor
jmp
call
sub
mov
shr
add
xor
mov
mov
and
bswap
and
and
mov
jmp
pop
or
mov
rol
or
xchg
mov
rol
mov
xor
jmp
push
xor
sub
ror
or
and
add
sub
dec
xchg
and
mov
jmp
call
and
inc
mov
xor
rol
not
not
mov
xor
mov
jmp
mov
and
inc
and
xchg
or
mov
ror
ror
add
xor
xchg
jmp
mov
add
and
mov
xchg
xor
or
and
mov
xchg
not
mov
and
dec
not
jmp
call
xor
neg
add
xor
rol
add
jmp
mov
sub
bswap
xor
add
jmp
mov
xor
xchg
add
add
and
or
or
or
or
rol
jmp
pop
bswap
bswap
xor
sub
not
add
jmp
pop
and
xor
jmp
push
sub
add
xor
mov
xor
mov
shl
inc
add
sub
add
and
dec
jmp
call
shr
mov
mov
ror
xchg
or
and
jmp
push
xor
ror
dec
and
mov
or
or
nop
xchg
and
or
jmp
push
and
or
or
and
mov
sub
add
xor
ror
or
jmp
call
mov
xchg
and
dec
and
or
add
inc
add
jmp
call
nop
xor
xor
sub
or
add
and
jmp
mov
mov
mov
bswap
neg
sub
rol
xor
xor
rol
jmp
call
and
not
and
shl
and
and
jmp
call
and
inc
add
sub
add
xor
or
or
and
not
xchg
and
shr
sub
jmp
pop
mov
inc
rol
sub
add
xor
shr
bswap
dec
bswap
or
jmp
pop
rol
mov
ror
and
mov
dec
xor
sub
or
or
jmp
call
xor
xchg
sub
inc
xchg
xchg
jmp
pop
add
sub
not
sub
sub
jmp
pop
and
add
shl
xor
add
sub
xchg
xor
sub
jmp
add
or
or
xchg
sub
xor
xchg
add
add
xchg
jmp
mov
bswap
sub
sub
mov
not
or
and
or
add
or
mov
jmp
pop
xor
neg
ror
sub
xor
and
xor
neg
jmp
pop
mov
mov
add
sub
and
neg
or
and
sub
or
rol
xor
xchg
and
mov
mov
jmp
call
sub
and
sub
sub
add
mov
add
and
or
jmp
mov
sub
add
inc
xor
add
jmp
pop
or
neg
add
or
sub
shr
add
or
xchg
jmp
mov
xchg
xchg
mov
or
add
not
shl
jmp
mov
add
inc
sub
xchg
jmp
push
ror
sub
add
neg
mov
xor
and
add
dec
xor
jmp
call
xchg
xor
bswap
and
or
sub
mov
add
inc
rol
dec
sub
xor
sub
jmp
add
add
add
xchg
jmp
mov
add
mov
neg
add
or
sub
sub
xor
xchg
xchg
jmp
pop
and
inc
or
xchg
bswap
xor
bswap
xchg
xchg
shr
not
xor
add
sub
and
jmp
push
xchg
xchg
shr
sub
or
and
neg
inc
inc
jmp
ret
xor
neg
dec
shl
neg
shr
rol
jmp
mov
add
add
mov
inc
xchg
bswap
add
dec
or
sub
sub
add
or
jmp
pop
xchg
add
ror
jmp
call
shl
or
add
and
xor
nop
bswap
mov
jmp
mov
mov
xor
not
or
sub
xchg
rol
mov
mov
bswap
inc
jmp
push
ror
rol
and
not
sub
and
xor
shr
jmp
call
add
xor
xchg
xchg
sub
and
sub
and
jmp
mov
add
shl
bswap
add
and
not
shr
neg
add
jmp
pop
xor
neg
xor
add
xchg
mov
xor
xor
xor
jmp
mov
mov
not
or
add
nop
xchg
mov
neg
mov
bswap
neg
jmp
mov
shl
xor
ror
and
sub
shr
xor
neg
or
jmp
pop
mov
shr
xchg
sub
add
sub
jmp
mov
shr
or
xor
xor
xor
sub
or
xor
xchg
dec
or
and
sub
ror
or
jmp
mov
add
nop
xchg
mov
add
mov
xchg
jmp
push
and
xchg
and
or
and
xchg
add
mov
xor
xchg
or
sub
inc
and
jmp
mov
add
and
or
mov
and
and
jmp
push
add
and
jmp
mov
sub
shl
mov
mov
mov
sub
not
or
xchg
and
rol
jmp
call
xchg
bswap
add
add
or
xchg
and
jmp
push
add
neg
mov
mov
mov
or
add
mov
add
xor
and
xor
neg
jmp
call
add
or
add
or
mov
xchg
xchg
xchg
jmp
jl
bswap
xchg
not
rol
xchg
xor
and
sub
mov
xchg
mov
shr
mov
mov
and
xor
jmp
mov
sub
shr
and
shr
xchg
mov
rol
shl
inc
or
ror
xchg
jmp
mov
inc
xor
dec
ror
mov
shl
rol
neg
shr
jmp
xor
mov
rol
rol
or
neg
mov
and
bswap
mov
add
jmp
push
not
and
or
dec
sub
shl
add
dec
and
bswap
jmp
add
xchg
bswap
add
mov
dec
sub
add
ror
xchg
bswap
and
rol
jmp
push
shr
xor
bswap
xor
mov
and
xor
bswap
add
sub
mov
jmp
pop
sub
not
mov
and
sub
mov
jmp
add
dec
and
xor
sub
not
xchg
mov
add
jmp
add
mov
sub
or
not
and
and
mov
sub
sub
mov
xchg
and
jmp
sub
mov
or
ror
ror
sub
jmp
pop
neg
or
not
and
sub
or
ror
jmp
pop
xchg
ror
neg
xchg
add
or
xor
and
shr
sub
jmp
mov
and
xor
and
ror
mov
and
sub
not
sub
or
xor
inc
xchg
jmp
push
add
xor
mov
and
and
and
add
xor
shr
and
and
xchg
jmp
call
sub
sub
shl
xchg
or
xor
sub
and
and
mov
add
add
and
jmp
jmp
jmp
jmp
