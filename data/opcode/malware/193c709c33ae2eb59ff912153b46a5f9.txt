pop
data16
inc
inc
add
pop
inc
outs
outs
ins
gs
outs
add
or
add
jmp
jae
add
jb
lea
sub
add
push
fcomip
mov
add
dec
outs
je
addr16
and
iret
scas
xchg
ffreep
pop
cs
jns
ins
daa
push
outs
jb
aas
int
fs
or
popa
imul
add
cwde
or
push
je
sub
or
hlt
push
mov
retf
cmps
imul
mov
neg
xor
pop
push
dec
bound
arpl
pop
sbb
push
mov
jae
ins
mov
adc
add
or
popaw
arpl
add
dec
push
mov
int3
add
jmp
ds
mov
adc
fmul
int3
inc
mov
ficomp
or
lods
and
loopne
jno
add
inc
cs
or
mov
test
leave
dec
xchg
pop
adc
inc
and
and
push
fmul
and
inc
xchg
rol
fs
mov
fs
inc
lods
lock
nop
inc
push
in
movs
mov
pushf
cwde
xchg
inc
push
sbb
mov
sbb
cmp
nop
inc
je
jo
nop
inc
push
ins
push
or
cld
clc
or
pusha
pop
adc
jb
popa
invd
pop
and
or
push
add
mov
lods
pusha
push
call
sub
je
movzx
mov
xchg
pop
ret
dec
inc
cmovo
ins
nop
inc
cmp
(bad)
xor
daa
or
push
mov
std
fistp
add
push
add
add
push
test
loopne
mov
mov
ret
lea
mov
mov
mov
mov
cmp
jne
mov
mov
mov
push
nop
mov
add
scas
mov
mov
popa
mov
rcl
mov
or
adc
popa
pop
adc
add
or
jnp
lock
or
(bad)
push
push
push
mov
mov
fidivr
mov
add
rcr
(bad)
mov
out
mov
or
push
or
ret
and
inc
lea
dec
sti
xchg
dec
or
inc
add
adc
or
sti
std
mov
cmp
jne
(bad)
mov
sub
cmp
jle
pop
pop
pop
push
fidiv
jg
mov
mov
xchg
cmp
jb
mov
add
call
ja
cli
ficomp
mov
aaa
or
mov
xchg
jne
ret
jmp
pop
mov
add
pop
push
mov
xor
cmp
or
std
or
mov
lock
ffreep
sub
or
jmp
sbb
jle
add
sbb
nop
es
mov
cmp
mov
or
add
pusha
and
add
and
push
xor
call
xchg
mov
mov
test
je
mov
mov
mov
add
add
pushf
lock
jle
pop
push
mov
sub
mov
inc
cmp
movs
jne
icebp
add
neg
es
popf
cmp
in
sbb
dec
inc
mov
in
mov
or
xchg
retf
mov
ja
ret
push
and
call
sub
mov
mov
out
ja
mov
add
cmp
out
mov
je
jae
or
or
sbb
or
push
in
or
add
ror
mov
push
out
jbe
cmps
mov
jmp
jns
mov
mov
or
mov
dec
hlt
ffreep
jg
outs
mov
mov
and
sbb
ret
dec
ds
mov
sub
ret
outs
or
sub
mov
pop
cmp
mov
add
and
mov
cmp
or
or
jbe
scas
adc
sti
push
push
cmp
pushf
xchg
dec
jmp
ss
jae
and
data16
mov
inc
(bad)
xchg
and
xor
add
mov
or
or
jle
sbb
jae
mov
cmp
jae
std
add
xor
push
add
add
sub
add
dec
(bad)
js
arpl
clc
mov
(bad)
aas
jmp
out
shl
shl
cmp
jg
jmp
xlat
mov
push
cld
in
je
mov
inc
es
cdq
inc
ds
jmp
add
jne
cs
cmp
movs
and
push
mov
pop
nop
ins
pop
mov
and
cmp
add
jo
sti
icebp
je
cmp
inc
jle
cwde
sahf
mov
sub
push
stos
dec
cmp
xor
sbb
or
sbb
test
sub
mov
pop
push
xchg
or
nop
or
bound
cmc
jne
mov
cmp
gs
cmps
sub
inc
popf
popa
xchg
mov
ret
imul
mov
mov
lea
addr16
(bad)
sti
loope
adc
fidiv
mov
out
ror
ret
add
mov
add
je
imul
jo
mov
push
adc
jmp
add
ss
aam
hlt
pop
sbb
rol
sbb
in
aaa
push
push
idiv
xchg
push
mov
push
cmp
dec
xlat
mov
and
(bad)
adc
push
and
cmp
jp
sbb
leave
add
imul
cmp
in
mov
jle
mov
mov
rcr
pop
pop
pop
add
push
ret
ja
out
sub
mov
dec
push
and
mov
xchg
test
shl
adc
or
in
out
mov
pusha
adc
ret
adc
jns
imul
inc
outs
imul
adc
jmp
mov
(bad)
mov
fistp
push
cmp
push
mov
jb
or
push
pop
jg
adc
test
jns
add
sar
pusha
in
adc
hlt
jmp
sub
mov
sub
mov
mov
mov
and
imul
fld
jb
add
or
mov
cmp
and
add
lock
dec
lea
cmp
jl
mov
fidivr
pop
jb
pop
lahf
daa
add
or
or
mov
(bad)
mov
mov
mov
sub
test
cld
stc
jg
pop
fcom
adc
jbe
or
push
or
push
ror
add
or
xchg
or
add
ret
dec
(bad)
xor
mov
or
stos
(bad)
fisubr
lods
enter
ret
pmaxsw
add
je
mov
or
int
sti
sub
cmp
cmp
test
add
sti
jmp
xor
add
out
out
or
fsub
test
jne
mov
(bad)
(bad)
ror
sub
pop
stos
cmp
push
mov
jno
in
inc
dec
xor
into
jge
cld
jg
jo
std
(bad)
sub
sub
cmp
jge
mov
mov
(bad)
jmp
daa
xlat
pop
loopne
mov
and
in
mov
aad
sub
mov
lds
cmc
pop
out
jge
or
fcom
jnp
xor
sub
mov
xchg
out
cli
pop
push
iret
(bad)
mov
mov
add
sub
and
pop
cdq
jo
(bad)
aaa
adc
rol
ret
nop
hlt
pop
pop
into
mov
mov
sbb
cmp
(bad)
js
hlt
inc
adc
push
pop
add
sub
cmp
jge
cs
mov
pop
mov
out
sbb
sub
mov
sbb
adc
or
push
jge
sbb
inc
sub
adc
jo
or
mov
loopne
cmp
dec
cmps
(bad)
lock
psubb
add
mov
cdq
push
in
daa
push
xchg
pop
and
or
push
mov
cmp
push
mov
cmp
popa
push
add
pop
add
sbb
or
add
(bad)
sub
xor
adc
jecxz
call
add
mov
add
mov
leave
aam
loope
repnz
int3
or
fwait
mov
sbb
xor
popa
pop
pop
inc
stos
adc
sahf
mov
int3
(bad)
rol
pusha
mov
mov
cmps
mov
cmp
push
push
and
or
jmp
lock
or
mov
mov
js
jle
adc
cs
pop
or
inc
daa
pop
je
pop
jmp
sub
test
sbb
mov
pop
jle
aaa
cmp
movs
sub
cmp
mov
sbb
int
mov
xor
repz
scas
inc
sub
xor
mov
pop
inc
aad
out
xor
cmps
rol
(bad)
xchg
leave
jmp
mov
pop
jne
js
pop
or
pop
xor
retf
test
pop
aad
shl
or
int
clc
stos
sar
cld
jbe
mov
mov
out
mov
mov
add
or
sti
pop
dec
movs
pop
mov
mov
(bad)
push
lods
bound
push
scas
js
jns
mov
pop
inc
scas
shl
das
xor
dec
es
jle
pop
add
pop
or
sub
or
clc
add
repz
and
mov
push
test
sbb
movzx
jmp
shl
jmp
inc
adc
out
and
arpl
and
sub
push
pop
pop
push
push
sbb
push
lods
sub
mov
scas
cmp
out
or
jno
push
and
lods
xor
(bad)
mov
mov
test
jne
test
ja
jmp
inc
js
or
call
clc
add
add
loopne
push
or
or
pusha
xor
(bad)
jge
aam
add
inc
das
sbb
hlt
rol
push
pop
in
mov
mov
cmp
ss
mov
in
and
add
fisttp
aaa
loope
mov
adc
ret
sbb
cli
add
(bad)
aas
inc
test
jmp
mov
cmp
pusha
bound
clc
push
adc
shr
cmps
add
pop
mov
jp
push
cmp
mov
cmp
out
mov
(bad)
jl
mov
jge
push
jecxz
jmp
scas
pop
(bad)
cmp
icebp
mov
push
inc
adc
xchg
adc
(bad)
iret
imul
push
addr16
adc
adc
out
mov
jge
jnp
fstp
sub
rcl
mov
sbb
mov
push
pop
sub
mov
cmp
sub
pop
push
pop
sbb
cmp
jl
fcomp
xor
hlt
xor
dec
(bad)
or
add
sbb
(bad)
aaa
mov
mov
icebp
test
push
ret
add
cmp
sub
shl
or
gs
loopne
mov
or
jp
retf
cmp
xchg
ret
les
cmps
jmp
add
add
cmc
add
call
xchg
in
or
mov
call
cmc
adc
ror
add
add
cmp
popa
test
jo
fild
ss
adc
ret
jmp
fstp
lock
aaa
jno
pop
cmp
xchg
dec
sbb
das
dec
or
fwait
mov
test
jle
call
ins
jo
stc
push
or
add
(bad)
sub
xor
je
int
add
leave
je
das
sbb
enter
fucom
mov
mov
ret
push
jmp
jns
sub
jmp
add
shl
(bad)
out
mov
loopne
mov
sbb
pop
jg
inc
or
rol
add
xor
mov
mov
movs
sbb
inc
or
rcl
mov
mov
jle
jecxz
cmp
sbb
dec
sbb
cld
xlat
cwde
add
jo
mov
mov
cmp
adc
adc
and
adc
ret
push
push
push
xor
or
jle
pop
jne
xor
pop
lldt
cdq
pop
jmp
cli
clc
xor
ret
nop
lds
popf
rcr
push
je
jae
sbb
ret
sub
inc
pushf
cli
(bad)
aas
cmc
jl
cmp
jg
add
mov
inc
rep
jmp
mov
das
shl
jmp
mov
jmp
mov
iret
ret
loopne
mov
add
(bad)
hlt
hlt
aad
je
push
fld
mov
sbb
cmp
add
lea
add
mov
add
lea
jle
lea
and
mov
inc
cmp
aad
mov
lahf
popa
adc
js
js
nop
sbb
mov
xlat
pop
mov
div
je
push
js
rep
ja
out
jg
shl
lahf
jns
je
cld
lea
xor
inc
fs
mov
xor
mov
cmp
or
add
mov
jg
std
fwait
mov
and
cmp
lahf
cmp
add
mov
(bad)
jmp
xor
mov
jmp
cmp
xor
push
cs
shr
rol
jmp
test
mov
aad
mov
das
cmp
ds
jmp
outs
cmp
idiv
leave
adc
mov
mov
inc
inc
adc
dec
mov
loope
pop
into
test
test
push
cld
test
mov
xor
js
sub
inc
test
enter
mov
push
and
test
addr16
loop
dec
jmp
mov
or
mov
fldcw
imul
fstcw
pop
jae
fwait
pop
pop
inc
lock
inc
sahf
sub
mov
test
adc
jp
or
lea
push
add
adc
mov
add
fisttp
mov
jecxz
jle
clc
ins
jne
push
in
push
test
mov
push
adc
cmps
xor
push
push
adc
add
push
or
std
inc
cmps
js
test
lock
sete
and
mov
jno
sbb
test
cmc
jne
pushf
cmps
in
xor
or
adc
test
je
add
rcl
sbb
mov
xchg
mul
sbb
sub
daa
cs
add
jl
inc
pop
push
shl
outs
mov
pushf
cmp
mov
fild
push
cmps
push
push
lea
push
jmp
outs
fstp
add
(bad)
cmp
mov
cmp
jne
ret
dec
dec
dec
push
outs
adc
out
mov
or
xchg
push
aaa
inc
pop
into
in
lods
retf
loop
ror
pop
push
inc
sub
mov
jae
cmp
push
add
out
push
xchg
sub
pop
idiv
dec
jne
jmp
lea
pop
push
jo
lods
pushf
imul
cld
rcl
mov
xchg
push
push
cmp
add
jmp
cmc
je
movs
je
popf
fiadd
outs
out
mov
pop
mov
add
shl
mov
mov
inc
mov
in
cmps
jmp
xlat
(bad)
mov
lds
cmp
mov
iret
adc
cmps
mov
mov
pop
push
inc
sbb
inc
imul
js
push
dec
pop
imul
in
sub
dec
idiv
adc
arpl
pusha
cmovns
jmp
or
(bad)
sar
xor
jmp
cmp
or
leave
je
cmp
rol
cmp
adc
sbb
push
sbb
mov
rcl
inc
adc
mov
add
rcl
std
fnstenv
pusha
inc
cld
imul
push
push
fdivr
push
or
movs
add
adc
mov
pop
psrld
jae
sbb
loopne
lock
mov
aad
push
jne
je
sbb
lea
mov
stc
ret
sbb
pop
or
clc
push
cmp
push
jo
pop
cmp
aas
bound
iret
jae
jl
jge
ret
xchg
cs
imul
mov
ja
and
pop
leave
push
or
sbb
pushf
adc
and
sbb
sbb
adc
xor
jge
xor
xchg
mov
cmp
mov
inc
and
cmps
xchg
imul
mov
mov
inc
inc
ja
add
ret
(bad)
call
jmp
pop
cmp
jne
dec
je
mov
pop
add
xchg
neg
loopne
add
(bad)
or
loop
push
adc
cld
(bad)
inc
mov
cmp
jne
dec
je
mov
cmp
jne
or
pop
(bad)
sbb
stc
adc
cmp
mov
std
jne
shr
shr
sbb
cmovnp
into
shr
or
pop
das
and
aas
cmp
rol
pop
gs
mov
cmp
jne
dec
dec
dec
cmp
dec
dec
sbb
add
aaa
sub
add
leave
mov
sbb
sub
jbe
mov
sbb
push
inc
lea
pop
or
lds
push
sub
and
pop
and
test
sbb
sub
and
mov
(bad)
mov
mov
shl
or
scas
push
or
stos
mov
stos
pop
cs
sbb
or
in
mov
inc
popa
sar
loopne
loopne
iret
jnp
ret
or
div
lock
xchg
fist
retf
neg
pop
xor
xor
inc
sbb
dec
arpl
mov
adc
cld
mov
rcl
sub
and
adc
cs
je
pusha
inc
xchg
pop
or
je
lods
sbb
iret
in
dec
jb
je
mov
jmp
out
xchg
jmp
and
sub
sbb
pushf
cmc
jmp
(bad)
push
sysret
das
inc
mov
inc
js
inc
pop
add
scas
mov
mov
repz
in
scas
sub
and
ja
sub
loop
aas
dec
add
(bad)
inc
adc
jmp
ins
out
out
(bad)
mov
add
push
inc
cmp
je
mov
sti
sub
das
das
aas
retf
je
and
je
pop
je
xor
icebp
and
dec
inc
jg
jmp
hlt
dec
and
ja
cmp
ja
lea
jg
or
out
add
push
iret
out
int
or
jge
jmp
jo
jmp
jle
js
pop
sub
jmp
inc
inc
jmp
mov
pop
andnps
popa
jb
xchg
and
loopne
mov
adc
scas
leave
sbb
stos
aad
cdq
push
ret
xor
pop
xor
mov
pop
mov
retf
xchg
stc
sbb
add
sub
stos
jg
inc
mov
dec
jne
pop
iret
mov
push
std
mov
repz
mov
ret
add
sub
dec
jno
cmp
test
mov
inc
pop
lea
fucomi
test
call
pcmpeqb
out
clc
in
xor
and
ss
mov
jmp
pop
xchg
jge
mov
add
pop
leave
xor
sbb
clc
push
jbe
jmp
fstp
fist
jmp
sub
test
jb
pop
cdq
aas
mov
push
in
push
cli
or
or
ret
setg
in
and
adc
mov
xchg
sbb
imul
stc
add
ins
js
inc
mov
lock
sub
test
jg
hlt
and
mov
adc
xor
leave
sbb
jg
cs
jbe
imul
cmp
mov
(bad)
in
cld
int
bound
cmp
xlat
fadd
das
call
xchg
aas
push
push
int3
into
sbb
(bad)
(bad)
(bad)
call
dec
inc
mov
push
pop
test
enter
mov
inc
cmp
and
daa
(bad)
retf
into
pop
(bad)
(bad)
(bad)
inc
or
pop
inc
in
mov
mov
addr16
leave
repnz
bound
(bad)
(bad)
jmp
add
inc
sahf
mov
sub
inc
aad
iret
dec
js
inc
mov
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
(bad)
cmp
inc
xor
cmp
call
mov
sti
jmp
stos
push
inc
(bad)
(bad)
(bad)
dec
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
(bad)
(bad)
(bad)
(bad)
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
(bad)
(bad)
(bad)
ds
push
cmps
scas
mov
pop
or
add
cmp
xor
mov
pop
cmp
sahf
xchg
pop
cmps
lock
mov
popa
mov
fsub
(bad)
(bad)
(bad)
(bad)
repz
mov
sub
and
and
outs
bound
xor
cmp
in
xor
fsub
sbb
sti
scas
sar
sbb
add
and
cmp
add
pop
sbb
pop
sub
outs
jbe
pop
mov
mov
inc
clc
(bad)
or
imul
test
dec
xor
push
push
call
mov
mov
addr16
jmp
mov
and
fidiv
je
add
xlat
lahf
ds
mov
or
aas
data16
sbb
ror
inc
(bad)
(bad)
(bad)
call
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
dec
popa
jae
add
jne
fninit
fwait
xor
stos
mov
mov
xor
mov
inc
rep
call
call
sub
cmp
jne
cli
add
adc
cmp
xor
out
jne
fwait
repnz
mov
jecxz
lock
inc
fcomp
and
dec
or
adc
sbb
in
pop
xor
rcr
mov
xor
sub
mov
adc
mov
pop
mov
cs
xor
add
mov
mov
call
sahf
ret
jge
mov
jp
ret
rcl
add
stos
pop
mov
sub
mov
push
mov
lds
sbb
in
cmp
je
pop
pop
jg
test
mov
scas
pop
and
ss
sbb
cmp
aas
cmp
mov
mov
jbe
sub
mov
push
fcom
jmp
stc
(bad)
cmc
fldenv
aam
adc
(bad)
jb
vmptrst
or
cld
xchg
jmp
jmp
mov
add
cmp
add
adc
or
out
pop
clc
popa
enter
push
cld
mov
dec
mov
inc
xchg
push
xor
ficom
add
mov
or
push
mov
push
add
pop
lea
push
sbb
or
and
sub
and
ret
rol
dec
setne
adc
xchg
pushf
dec
hlt
jmp
aaa
pop
add
mov
sub
sti
inc
sbb
int
xor
xor
jb
cmp
sub
retf
pop
fisttp
or
jne
or
mov
inc
inc
fcom
mov
scas
and
stc
sub
out
sub
shl
push
mov
mov
cmp
je
mov
cmps
aam
dec
jg
jne
mov
imul
lahf
scas
mov
jle
and
mov
or
lock
ret
pop
add
sbb
inc
cld
pop
jg
sub
push
xchg
add
dec
pop
pop
jmp
out
inc
(bad)
fwait
ins
mov
inc
mov
cmp
(bad)
pop
mov
mov
cmp
mov
push
push
pop
push
xchg
xor
jge
add
std
pop
mov
adc
loop
xchg
mov
aas
popf
mov
popa
lock
add
dec
jmp
dec
int3
bound
mov
cmp
(bad)
(bad)
into
dec
jne
icebp
fucomi
sbb
add
sbb
mov
sahf
pop
jecxz
dec
cmp
scas
lahf
xchg
xchg
out
push
pushf
enter
xchg
ja
sbb
repnz
sbb
lahf
sub
push
pop
add
mov
(bad)
cmps
push
xor
hlt
xor
cmps
jecxz
(bad)
call
mov
mov
mov
mov
or
loope
loop
or
pop
clc
sub
mov
or
cmc
iret
xor
xlat
xor
popf
stos
jmp
jg
jmp
jge
add
call
sub
push
mov
cwde
pushf
(bad)
in
push
call
inc
sbb
pop
pop
push
popa
push
dec
dec
fimul
cmp
or
xor
int
pop
into
das
add
add
js
sub
or
jae
data16
and
mov
xlat
pop
push
push
and
mov
cmp
je
or
jne
movsx
inc
inc
jmp
cmp
addr16
imul
fild
push
aas
loop
loopne
pusha
pop
fdivr
adc
sbb
test
pop
jne
fiadd
push
fnstenv
add
dec
adc
outs
mov
adc
adc
or
adc
and
out
sar
clc
pop
sbb
push
je
dec
and
cdq
test
lock
test
call
out
dec
cmp
pop
ja
mov
hlt
leave
or
xor
cmp
repz
push
jns
shr
fidiv
dec
add
mov
sbb
jecxz
sbb
push
sub
movhps
inc
cmp
or
add
dec
sub
xchg
lahf
dec
sbb
rol
push
add
pop
jo
jecxz
fwait
add
cmps
aas
mov
mov
push
adc
cmp
push
outs
je
dec
cmps
sar
enter
or
add
push
mov
or
and
add
lds
xchg
mov
sub
repnz
add
pop
mov
outs
jg
push
or
mov
jg
data16
(bad)
je
jne
xchg
dec
jne
sbb
push
daa
mov
jmp
enter
sbb
push
adc
lahf
adc
adc
ins
or
cs
push
ins
aas
pop
adc
popa
adc
mov
inc
icebp
add
arpl
aaa
sbb
jno
pop
jmp
dec
addr16
pushf
ret
push
sub
sbb
inc
outs
or
mov
cmp
pop
push
push
push
push
push
mov
js
js
and
mov
imul
nop
or
sub
and
test
add
rcr
adc
adc
sbb
mov
xlat
inc
cwde
(bad)
sti
lods
pop
mov
jmp
ret
xor
mov
setle
mov
or
(bad)
xchg
jle
push
mov
add
je
cmp
call
adc
pop
sub
je
jmp
sahf
jg
inc
sub
jb
je
jmp
cmp
cmp
(bad)
test
sub
cmp
mov
jmp
mov
(bad)
in
dec
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
or
lahf
add
fldpi
push
mov
gs
cmp
popa
call
in
pusha
jp
inc
mov
jg
sbb
loopne
xchg
jno
xchg
dec
aad
outs
jp
mov
jmp
test
mov
je
cmp
scas
add
imul
in
add
out
push
inc
cli
sub
mov
add
leave
je
sub
test
loopne
imul
jo
(bad)
loope
scas
add
pop
(bad)
(bad)
pop
call
cmp
aas
mov
cmp
psadbw
repz
cmp
jne
adc
mov
in
push
xlat
sub
mov
xor
sahf
dec
cmp
enter
jl
jno
fstp
dec
mov
inc
fiadd
call
and
or
sbb
mov
adc
imul
xor
jo
pop
dec
mov
cmp
dec
mov
dec
js
loope
mov
repz
add
add
ins
sti
sbb
jg
out
je
mov
fwait
xor
cmp
call
sbb
xor
mov
push
ds
jnp
mov
ret
xlat
sbb
das
or
fadd
pop
push
mov
sbb
pop
pop
inc
pop
sbb
add
pushf
jmp
dec
add
mov
je
sbb
xchg
or
mov
mov
push
loopne
push
ret
ror
lock
mov
xchg
mov
mov
jmp
xchg
mov
mov
mov
push
aaa
inc
sbb
push
cld
sti
xchg
lahf
xor
sbb
inc
movs
pop
dec
(bad)
jle
sbb
push
add
or
rcl
enter
pop
push
cmps
dec
add
xchg
push
cmp
leave
adc
cmp
mov
cmp
xor
jno
adc
test
jae
nop
aas
xchg
jg
add
inc
inc
pop
ret
push
clc
cmp
xor
pop
mov
jge
fld
out
add
push
sub
mov
cmp
jne
cmp
jg
mov
cmp
mov
push
cmp
aad
jne
dec
and
xchg
xor
or
loopne
push
jne
sub
add
sbb
imul
sbb
icebp
lds
inc
adc
cmp
pop
lahf
aaa
inc
push
ins
and
add
js
sar
xor
pop
dec
shl
jne
cmp
adc
imul
ret
push
pop
mov
pop
push
outs
ret
mov
hlt
jl
push
pop
inc
or
dec
clc
sub
cmp
jl
lock
clc
es
inc
inc
pop
out
(bad)
mov
push
sbb
add
lea
jnp
imul
dec
jne
scas
dec
and
inc
jg
out
add
cmp
ss
ret
dec
add
fdivrp
sbb
ja
xchg
adc
lea
xchg
jle
call
ud0
rcr
(bad)
push
retf
mov
arpl
push
cld
or
rol
clc
ins
bound
ss
mov
das
add
sahf
icebp
stc
mov
loope
aas
mov
cmp
dec
push
arpl
or
icebp
add
in
pop
or
aaa
add
icebp
mov
les
inc
mov
jg
loope
(bad)
fild
jmp
lea
cmp
push
push
sbb
pop
aas
mov
jl
sub
mov
test
xchg
fstp
rol
pop
sbb
mov
sub
cmp
pop
icebp
call
loop
or
out
xor
mov
je
cmp
fucomip
imul
(bad)
jo
std
add
jmp
inc
add
jmp
in
(bad)
pop
sub
and
pop
pop
or
idiv
je
push
data16
in
add
jbe
jbe
adc
or
nop
push
pop
shr
push
retf
popa
rcr
lds
add
pop
pop
xor
call
das
sbb
outs
pop
cld
xchg
adc
fnstcw
clc
jne
aad
inc
arpl
mov
pop
or
ds
add
aas
bound
test
xor
ja
push
cld
add
cmp
pop
enter
and
mov
adc
mov
(bad)
push
jbe
sub
lock
test
or
cmps
ss
sub
sub
std
or
(bad)
je
mul
mov
lds
push
sbb
pop
pop
xchg
clc
mov
out
jle
mov
jmp
ds
idiv
xor
(bad)
xchg
adc
or
inc
clc
mov
inc
cld
dec
jmp
ret
ja
sbb
or
pop
cmp
gs
dec
jne
add
pop
out
ja
jge
xor
push
add
dec
jmp
and
inc
pushf
or
sbb
into
pop
or
jmp
loope
pushf
sbb
dec
pop
and
lea
jmp
jecxz
popf
adc
rol
xchg
push
sub
(bad)
imul
sbb
dec
and
inc
pop
lods
xchg
icebp
cs
cmp
mov
popf
and
and
inc
daa
pusha
jbe
sbb
or
push
jp
cmps
push
clc
inc
lods
jl
jmp
add
dec
cmp
xor
cmc
mov
scas
push
sti
pop
adc
xchg
inc
daa
pop
mov
out
or
cmp
ds
inc
push
es
jl
cmp
jge
sub
aas
sbb
push
(bad)
jg
pop
fst
mov
jmp
inc
jmp
and
retf
sub
cmp
ret
mov
dec
jl
sub
mov
jle
sub
mov
add
stc
add
lea
inc
push
cmp
pop
dec
movs
push
pop
cli
mov
repnz
sahf
cdq
mov
push
icebp
mov
pop
mov
sub
xlat
adc
imul
aas
cmp
stc
add
gs
cmp
mov
lea
adc
ror
push
add
mov
cmc
jmp
in
and
mov
push
jbe
neg
mov
inc
jae
adc
adc
mov
retf
mov
lock
frstor
push
adc
pop
push
push
xchg
dec
out
and
sbb
sub
(bad)
push
pop
xbegin
and
(bad)
lods
jmp
sub
xchg
out
(bad)
arpl
cli
add
icebp
(bad)
pop
push
mov
push
pusha
test
sub
xchg
out
std
rol
push
push
cmp
mov
push
push
sub
sub
push
cmp
pop
lods
and
mov
sub
or
int
add
cmp
jmp
pop
clc
jle
or
and
cmp
clc
sub
imul
or
das
cmps
mov
int3
(bad)
pop
push
or
jo
mov
and
push
sub
add
and
cmps
ja
cmp
add
add
dec
jmp
add
xchg
dec
and
je
mov
inc
adc
enter
call
pushaw
and
push
cvtps2pd
or
aam
xchg
adc
out
stc
adc
imul
enter
les
dec
cmp
xchg
pushf
call
jno
mov
clc
push
lods
add
add
push
rcl
xchg
jmp
shl
cdq
cmp
and
xchg
cmp
adc
mov
add
xchg
lahf
jle
pop
js
dec
add
je
pop
jge
adc
xor
lea
aaa
aas
push
xchg
pop
push
mov
jg
das
sahf
mov
xchg
fisubr
and
push
add
cli
mov
dec
je
cmp
je
cmp
je
cmp
je
cmp
mov
je
mov
in
fsubr
dec
mov
adc
or
jle
scas
xchg
adc
jmp
xchg
aad
push
or
gs
(bad)
dec
cs
adc
cmp
pop
jmp
in
pop
ficomp
sub
push
jno
add
xchg
sub
or
pop
call
pushf
jmp
jns
xor
mov
and
rcl
jbe
test
loope
(bad)
jnp
bnd
mov
inc
and
mov
push
fdivr
aad
cmp
emms
xor
jmp
in
add
daa
push
dec
sbb
repz
or
enter
inc
call
jmp
test
test
cmp
inc
dec
icebp
jmp
stos
or
pop
dec
dec
adc
cmp
xchg
adc
call
and
add
xchg
mov
clc
push
pop
add
sar
mov
lock
out
loope
xchg
xlat
pop
push
mov
cmp
xor
or
retf
retf
retf
je
or
dec
or
jo
xchg
sbb
adc
mov
pop
xor
repnz
add
jge
cmp
push
iret
pop
jns
lea
mov
call
push
or
test
inc
pusha
pop
jmp
aas
add
sbb
jns
xor
xlat
dec
adc
mov
aas
and
js
addr16
jne
inc
push
xor
add
loopne
or
mov
ins
and
mov
xchg
out
cmps
in
inc
push
popa
jge
sub
nop
xchg
pushf
clc
fistp
add
pop
mov
inc
dec
pop
pushf
in
cmp
jmp
cmps
or
adc
les
jle
sub
cmp
cmp
or
ja
sti
adc
add
add
inc
jmp
out
pop
sub
add
je
cmp
cmp
dec
iret
xor
mov
sub
pop
fimul
mov
xlat
sar
jg
outs
mul
mov
sbb
and
add
mov
fst
call
retf
ret
pop
jmp
fdivrp
jne
mov
mov
jge
xchg
call
loopne
loop
cmp
addr16
cld
add
mov
test
jg
das
fld
rol
mov
test
inc
xor
adc
fdiv
pusha
sub
xchg
in
int3
outs
pop
push
pop
inc
add
(bad)
bsf
add
call
mov
jne
test
call
jnp
in
in
cmp
je
inc
add
cmp
jne
es
dec
lock
pop
sbb
ds
adc
scas
xchg
add
mov
sub
add
sti
ret
lea
mov
mov
or
loop
lock
in
mov
in
jge
or
add
mov
xor
mov
sar
stos
nop
mov
mov
(bad)
fadd
repz
mov
mov
or
push
lock
test
ds
ret
cmps
cmp
jle
cdq
or
xchg
dec
push
test
jno
and
add
into
(bad)
loop
or
mov
or
jne
enter
mov
sub
mov
cmp
add
outs
cld
or
out
xor
dec
jne
jno
imul
push
inc
pop
dec
adc
cmp
sub
sbb
scas
adc
sub
ror
push
push
push
icebp
inc
out
pop
js
lock
pop
mov
mov
push
in
js
and
js
loop
inc
jne
mov
inc
cmps
loope
lods
idiv
jmp
dec
jne
das
cdq
mov
and
push
xor
push
dec
sbb
sbb
cdq
sbb
adc
adc
cmp
inc
sbb
(bad)
repnz
and
lahf
push
jg
sbb
ret
jmp
pop
mov
test
cmp
jne
ds
mov
adc
or
hlt
jg
cs
push
mov
inc
push
pop
add
fwait
test
sub
test
shr
and
dec
push
vmovapd
loopne
inc
jmp
popw
clc
push
js
pop
and
add
inc
mov
cmp
test
out
in
not
mov
mov
fisubr
popf
lea
mov
iret
(bad)
int
sub
paddd
(bad)
sub
add
inc
cmp
jnp
ja
inc
push
push
lds
mov
mov
ret
pop
mov
jo
push
call
mov
out
fild
call
pop
mov
push
push
call
inc
mov
or
sahf
test
jg
sub
dec
mov
jb
(bad)
inc
gs
xor
cs
ins
pop
inc
gs
outs
outs
addr16
popa
je
dec
popa
ins
gs
test
pushf
loop
outs
loopne
sbb
or
cmps
mov
retf
inc
loope
int3
push
dec
pop
add
and
cmp
or
rol
ja
mov
and
pop
jo
dec
mov
mov
mov
pmaxsw
clc
int3
or
sbb
mov
mov
add
pop
movs
cmp
(bad)
sub
sbb
sti
and
outs
mov
lods
repz
enter
addr16
mov
cwde
imul
or
out
push
sar
lds
imul
dec
cmp
jns
mov
fdiv
adc
cmp
xchg
scas
inc
sub
sub
sbb
ret
or
push
ins
sti
ds
mov
das
outs
sti
jo
pop
repz
cmc
add
in
js
mov
mov
(bad)
outs
data16
popa
jb
outs
mov
mul
gs
aaa
cmps
or
bound
ja
rol
mov
jae
pop
dec
add
mov
adc
push
inc
ja
and
push
mov
inc
mov
push
aaa
mov
or
daa
mov
add
mov
sar
sbb
adc
add
add
test
lods
adc
cli
mov
(bad)
(bad)
inc
arpl
dec
loope
pop
mov
inc
loopne
pop
lock
add
or
arpl
jno
(bad)
mov
mov
shl
cmp
outs
int3
adc
enter
pop
sahf
inc
repz
mov
test
cmp
mov
pop
mov
or
mov
cmp
jne
pop
mov
or
cmps
xchg
xchg
loop
movs
ins
ret
mov
inc
mov
ret
sub
addr16
loopne
ret
sub
or
sbb
dec
push
inc
call
push
sbb
xor
sub
pusha
(bad)
fadd
pop
mov
dec
pop
xchg
div
and
mov
pop
pop
ret
sbb
repz
or
or
(bad)
jmp
sbb
js
adc
out
dec
sar
sub
fsubr
xor
inc
mov
mov
or
or
mov
push
cmp
inc
jbe
js
inc
(bad)
push
es
or
ret
mov
jp
xlat
rol
movs
mov
pop
mov
xor
mov
inc
xchg
inc
cmp
ja
(bad)
jg
push
mov
inc
jmp
cmp
pop
add
pop
cld
ja
(bad)
(bad)
pop
push
fcmovb
jmp
or
mov
adc
and
sbb
mov
loop
retf
add
and
mov
popa
add
dec
popa
rol
dec
add
dec
or
jge
mov
cmp
repnz
dec
mov
and
sbb
add
dec
jbe
pop
add
add
jb
lea
ret
push
fs
hlt
std
mov
cmps
sbb
dec
or
cvtpi2ps
sub
xlat
xor
cmp
add
xor
(bad)
sti
mov
inc
mov
aas
clc
test
je
or
mov
aas
and
mov
cmp
adc
add
punpcklwd
cmp
cwde
and
sub
loope
or
mov
pop
lea
mov
dec
cld
mov
rcl
fwait
pop
ja
inc
inc
fwait
xlat
or
xor
cld
sahf
rcl
or
mov
sub
inc
mov
ret
xor
jo
inc
adc
in
xor
mov
or
jb
inc
sbb
inc
mov
adc
inc
scas
and
mov
dec
(bad)
push
movs
rol
mov
sbb
lea
mov
in
mov
inc
push
and
hlt
out
pop
pop
add
in
int
or
jmp
adc
enter
pop
adc
bound
and
push
pop
pusha
or
jno
xchg
mov
add
inc
push
jb
inc
ds
js
dec
enter
loopne
loopne
daa
jns
cmp
cmp
pushaw
pop
xchg
mov
cmp
scas
pop
fisub
rol
cmp
lahf
push
inc
sub
add
stos
lods
pop
inc
mov
push
jge
jg
adc
leave
mov
sub
push
xor
je
adc
(bad)
or
pusha
mov
jle
add
mov
push
push
pop
pop
push
lock
jp
push
lea
push
push
xchg
cdq
stos
lock
sub
mov
push
and
xchg
je
jge
popa
daa
sbb
repnz
add
stc
pusha
out
shl
mov
iret
cmp
adc
dec
xchg
in
xor
dec
stos
aam
mov
int
fstp
sub
add
or
xlat
xor
adc
push
fstp
push
icebp
es
adc
xor
push
call
xlat
adc
call
daa
cwde
mov
mov
or
mov
std
aad
cmp
jbe
mov
imul
and
adc
sub
pcmpeqd
xor
jmp
dec
cmp
enter
push
inc
cmp
clc
shl
cmp
cmp
enter
out
int3
fdivrp
mov
inc
or
jmp
push
mov
dec
movs
aas
sub
test
jne
mov
ret
push
cmp
mov
retf
add
mov
push
add
enter
outs
fstp
mov
mov
imul
mov
or
mov
adc
cs
pushf
push
mov
jle
in
push
test
xchg
xchg
lods
xchg
lock
or
mov
retf
xor
or
push
fcomip
pusha
sub
inc
add
add
push
or
dec
push
cmp
push
fs
enter
fs
add
stos
xchg
faddp
xor
(bad)
push
jle
outs
fs
gs
daa
gs
mov
es
imul
inc
push
xchg
lahf
adc
arpl
inc
gs
jne
je
dec
outs
je
imul
popa
lea
gs
outs
inc
arpl
or
adc
ret
or
(bad)
jg
mov
pop
xor
(bad)
outs
ins
bound
outs
js
imul
paddd
jae
sbb
cmp
ja
dec
inc
xor
jo
ja
je
dec
add
fs
popa
xchg
and
cmp
inc
push
sbb
sub
and
pop
push
push
or
enter
inc
xor
and
and
and
and
sbb
or
enter
add
in
add
and
nop
inc
push
sbb
lock
inc
push
sbb
loopne
sbb
fcom
shl
enter
int3
enter
or
mov
mov
lods
or
test
mov
and
and
and
and
ins
or
push
xor
and
push
arpl
and
inc
xchg
push
push
cmove
sbb
cmp
sbb
sub
and
nop
inc
push
and
nop
inc
push
sbb
or
push
sbb
add
enter
clc
hlt
lock
and
and
and
int3
or
enter
or
enter
mov
enter
test
enter
mov
or
xchg
nop
mov
test
and
es
mov
movs
nop
inc
push
sbb
sbb
cwde
push
sbb
nop
mov
test
push
js
jo
inc
push
sbb
inc
push
sbb
pop
push
sbb
push
dec
dec
sbb
inc
inc
cmp
nop
inc
push
cmp
nop
inc
push
sbb
and
push
sbb
sbb
sbb
adc
sbb
nop
inc
add
cld
and
clc
hlt
lock
in
or
enter
aam
ss
mov
push
(bad)
sar
mov
push
sbb
movs
push
sbb
pushf
cwde
xchg
or
ins
dec
nop
jl
add
js
jo
and
and
pop
or
push
push
dec
dec
or
enter
cmp
enter
xor
enter
sub
and
or
sbb
or
adc
or
push
xor
and
cld
and
nop
inc
dec
clc
hlt
lock
inc
push
sbb
call
fs
fadd
sbb
ror
enter
inc
(bad)
sar
mov
inc
push
sbb
mov
fs
xchg
nop
mov
test
push
js
jo
inc
push
sbb
inc
push
sbb
pop
movzx
(bad)
outs
add
shl
or
push
push
nop
push
adc
dec
xchg
or
dec
(bad)
fsub
loopne
or
repnz
nop
xor
daa
mov
or
mov
movsx
mov
push
add
aam
cmp
xchg
jle
mov
imul
sbb
xchg
retf
pop
iret
push
and
mov
xchg
mov
jl
cmps
add
push
sub
fcom
or
adc
xor
adc
sbb
and
mov
add
push
pushf
loopne
cmps
out
jle
sbb
(bad)
gs
jnp
push
mov
cmps
add
and
xchg
stc
in
or
sbb
push
or
pop
mov
pop
pop
clc
ror
push
push
loopne
mov
cmps
cld
fnstcw
or
push
fs
xor
iret
str
test
cdq
in
or
xchg
(bad)
mov
ror
sti
mov
popa
gs
xchg
and
push
dec
inc
inc
dec
add
div
mov
push
and
dec
pop
(bad)
into
mov
push
dec
pop
and
mov
push
push
pop
sub
fdivr
pop
cs
inc
dec
pop
dec
dec
dec
inc
push
das
push
enter
mov
nop
pop
fs
je
icebp
cdq
xchg
add
js
js
xchg
sbb
lock
and
and
and
cli
or
sti
cld
std
dec
enter
loope
enter
jecxz
enter
in
out
or
jmp
enter
out
or
enter
shl
enter
rcl
enter
aad
xlat
and
fiadd
(bad)
fimul
enter
shl
and
and
and
retf
xor
retf
int3
int
or
enter
mov
enter
mov
enter
mov
mov
or
mov
enter
mov
mov
and
and
xor
stos
pop
jb
popa
pop
add
xor
cmp
add
je
mov
cs
xlat
add
xchg
or
cdq
fsubr
arpl
je
outs
outs
enter
nop
push
enter
je
mov
inc
dec
gs
jo
nop
and
mov
pop
inc
fidivr
mov
or
dec
jne
dec
dec
gs
pop
push
call
mov
imul
or
outs
mov
inc
jb
mov
scas
fcomp
loope
retf
pop
in
lds
xor
scas
xchg
out
push
ds
mov
mov
nop
mov
nop
or
sbb
inc
jnp
jle
adc
cmp
inc
inc
imul
nop
add
inc
rol
ds
aam
(bad)
bound
popa
outs
addr16
scas
repnz
xor
test
push
jb
ins
outs
ja
mov
adc
inc
xor
pop
dec
mov
dec
mov
gs
dec
js
cmp
cmp
addr16
xchg
push
imul
dec
mov
add
ins
jle
or
or
rcl
jns
in
adc
fs
loopne
in
nop
lods
scas
ds
jl
inc
movsx
imul
or
cmp
or
inc
popa
jae
fisub
xor
mov
or
gs
shr
inc
pop
ds
adc
push
loopne
fdiv
push
adc
nop
pop
leave
cmps
push
and
jnp
inc
mov
lds
mov
mov
aam
and
aam
test
lock
je
ins
inc
xlat
sub
(bad)
push
push
test
popa
fs
add
sbb
inc
and
or
fsub
or
or
sbb
jo
bound
dec
pop
out
inc
jge
mov
cmps
or
or
nop
sbb
stos
push
clc
xor
xor
adc
sub
jmp
test
add
aaa
xor
pop
dec
pextrw
ja
pusha
or
push
inc
ins
jae
and
inc
cmp
or
xchg
add
aad
aaa
ds
xchg
or
sbb
test
adc
jb
popa
lds
(bad)
icebp
push
push
int3
add
test
cwde
movnti
shl
inc
push
cmp
cmps
imul
(bad)
call
push
mov
jnp
sbb
push
loopne
sbb
mov
sub
push
add
loopne
xor
adc
shl
rol
push
dec
cmps
imul
mov
xchg
push
or
or
fld
lods
outs
arpl
fisubr
pop
cmp
fst
scas
cmp
jmp
mov
sub
add
lea
retf
mov
mov
cwde
das
push
push
sub
or
pop
adc
mov
cmps
push
mov
add
pop
ror
adc
icebp
outs
or
mov
mov
mov
or
call
pop
aas
or
ficomp
fmul
push
add
mov
adc
cmp
push
fisttp
out
aaa
movs
(bad)
jg
or
push
cmp
ja
sub
mov
inc
inc
dec
scas
fimul
push
sub
mov
add
int
dec
lods
or
or
iret
(bad)
dec
pop
mov
cmp
jbe
cmp
repz
je
movzx
cmp
scas
gs
xchg
loop
addr16
inc
pop
mov
pop
xchg
jne
inc
inc
aas
cmp
mov
adc
mov
cdq
push
mov
push
idiv
repz
out
and
sti
je
loope
out
sub
pop
dec
(bad)
sahf
(bad)
jmp
xchg
push
dec
jge
cld
push
or
inc
pop
add
jno
ret
aam
push
push
pop
pop
xor
call
inc
loopne
lds
cmp
lock
mov
aas
xor
(bad)
in
adc
push
ret
xchg
test
push
push
jo
add
cmp
sbb
xchg
rcr
popa
xor
fnstcw
push
adc
ins
push
push
cdq
mov
fdivrp
pop
jl
inc
cmp
jl
cmp
jbe
adc
jns
xchg
clc
imul
pop
add
mov
paddusb
lock
sub
mov
add
sub
jb
sub
je
(bad)
jae
sbb
add
mov
dec
rcl
rol
psubw
int
neg
or
sbb
jae
inc
dec
jne
pop
cmp
fwait
mov
sar
icebp
sbb
mov
inc
dec
repz
mov
jg
push
xor
div
dec
das
cmp
push
pop
mov
cmc
jmp
sti
outs
(bad)
push
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
outs
pop
inc
mov
pop
mov
jecxz
(bad)
xor
mov
and
jo
push
mov
neg
cmp
pop
outs
inc
jge
jb
(bad)
xchg
sub
inc
jmp
add
or
inc
fisubr
adc
cmc
mov
and
push
jg
loopne
and
fistp
ret
add
add
sub
add
ror
or
fstp
stc
mov
xor
jp
scas
cmp
pop
sub
loopne
jae
fldcw
mov
ffree
ffree
ffree
ffree
pop
aad
(bad)
loopne
sub
add
push
and
frstor
push
push
or
cmp
pop
das
cmp
test
push
push
mov
mov
and
popf
push
sub
add
add
sbb
xchg
jno
or
test
sbb
outs
enter
add
mov
rcl
ins
in
in
jp
imul
repnz
clc
push
je
mov
cwde
pop
outs
mov
cmc
pop
inc
inc
add
mov
sbb
jle
sahf
sbb
inc
sbb
mov
mov
mov
xor
movs
and
mov
(bad)
adc
push
lock
pop
rcl
int3
add
sti
push
mov
repnz
jl
inc
pop
or
xor
mov
lods
jb
out
and
cmp
jmp
pop
jecxz
pop
dec
add
jmp
jo
fisttp
xchg
push
jbe
mov
fld
fcomp
add
jmp
ss
push
sahf
jge
cmps
dec
pop
addr16
nop
test
fmul
xchg
add
jg
popa
mov
or
pop
add
sub
mov
adc
loop
adc
ficomp
aaa
jmp
and
jl
and
xor
ss
scas
call
enter
add
jno
cmp
and
ja
or
test
push
sub
jl
iret
dec
mov
mov
push
xchg
or
push
add
sbb
jae
(bad)
xchg
lock
or
or
test
adc
sti
call
add
cmps
int
pop
(bad)
scas
test
bound
mov
les
out
pop
push
dec
icebp
retf
cdq
enter
stos
jae
loope
mov
das
outs
inc
mov
add
retf
es
popa
scas
out
cmp
push
jmp
jo
or
xor
iret
push
cmp
push
enter
cmp
mov
and
dec
inc
cld
or
xchg
jg
or
fwait
rcr
sub
iret
cwde
add
rol
mov
lods
sar
or
pop
mov
cmp
je
and
inc
mov
or
pop
push
cmp
stos
mov
mov
mov
pop
push
lds
jb
popf
jne
dec
push
mov
stos
jg
test
sar
int3
and
mov
and
inc
push
pop
pop
cmp
cwde
(bad)
out
push
push
adc
mov
je
push
add
push
xor
stos
xor
aad
call
push
jl
mov
mov
cld
jnp
adc
lds
mov
jg
call
ja
cmc
hlt
adc
lahf
retf
pop
mov
movs
and
push
repnz
adc
in
nop
sbb
inc
test
adc
mov
(bad)
adc
enter
bound
inc
jmp
cmp
pusha
aaa
adc
xor
mov
add
mov
xchg
and
mov
pop
pop
ret
test
retf
dec
and
sti
add
retf
pop
retf
fld
pop
pusha
pop
setno
(bad)
pop
loop
dec
ins
adc
aas
push
cs
fnsave
inc
out
cld
lahf
dec
shr
(bad)
aas
xor
xor
repz
mov
mov
rol
ins
sub
cli
xchg
or
jmp
or
repnz
adc
pop
pop
jmp
sar
int
jnp
sub
shl
scas
xor
shr
loop
mov
inc
dec
je
mov
mov
pop
sub
jbe
sbb
fdivp
inc
(bad)
lods
mov
mov
push
add
sub
add
cmp
mov
push
add
mov
jns
mov
or
in
xor
fadd
jo
inc
mov
cmp
push
fidivr
mov
or
lds
fcomp
clc
cmp
jbe
jmp
ror
xor
jne
js
mov
mov
mov
add
cmp
jle
pop
loope
and
push
leave
add
test
jg
sbb
mov
jg
lds
add
sbb
aad
dec
and
outs
(bad)
sbb
les
mov
nop
aam
test
fcomi
add
jmp
add
jge
adc
or
add
jg
or
jne
ins
sub
rcl
mov
test
dec
cmp
sub
fsubr
inc
outs
out
cmp
das
hlt
and
lods
jmp
and
push
cmp
sub
sub
mov
jno
mov
pop
or
jle
loopne
imul
jge
xchg
or
retf
mov
mov
xchg
pop
mov
rep
sbb
adc
pop
xor
scas
mov
aam
pop
mov
cmp
(bad)
aas
movs
sub
cmp
imul
jg
xor
mov
add
and
in
dec
sbb
adc
aad
cmp
or
add
jnp
ret
je
xchg
jns
mov
ret
and
mov
dec
cmp
(bad)
(bad)
(bad)
addr16
jne
lea
mov
fwait
push
add
and
xor
fisub
jns
push
pop
das
cmps
pop
mov
cs
inc
ss
inc
call
xchg
std
fadd
fsubr
shr
icebp
jle
test
and
ror
jmp
les
out
sub
int
push
sbb
hlt
or
cmp
int3
fucomi
mov
cmps
pop
outs
adc
nop
add
data16
pop
dec
jo
jg
and
cmp
jne
(bad)
test
bound
cmp
jbe
mov
out
(bad)
aad
or
jmp
xor
inc
inc
pop
cli
xorps
cmp
add
mov
cld
aas
and
mov
call
pop
jns
mov
cmp
adc
out
ins
cld
adc
dec
fdiv
or
dec
je
scas
jmp
jecxz
jbe
add
dec
mov
cdq
pop
ds
leave
inc
add
pop
lods
out
pop
ins
inc
jmp
mov
outs
mov
(bad)
std
sub
aas
mov
or
add
adc
add
hlt
dec
jge
mov
mov
loope
pop
cmp
jbe
mov
icebp
inc
xchg
xchg
adc
fdivr
sbb
clc
adc
(bad)
push
dec
push
mov
repnz
iret
dec
adc
stc
xchg
ret
xor
and
pop
cmp
dec
jno
lahf
movs
test
scas
aad
je
daa
dec
and
test
mov
ds
mov
mov
jl
icebp
pop
add
adc
pop
daa
inc
popa
mov
sub
fcomp
mov
jg
push
jle
cmp
sub
push
dec
inc
in
(bad)
inc
stos
(bad)
and
or
cmp
push
test
lea
sbb
push
int
jmp
dec
fidiv
cli
or
xor
loopne
pusha
or
xor
sbb
push
lea
loopne
sar
xchg
pop
push
lea
loope
xchg
ss
push
xor
jmp
arpl
pop
jge
mov
neg
jmp
or
leave
mov
stos
xchg
mov
mov
fbstp
xchg
in
adc
fldln2
or
jg
dec
mov
stos
cmp
jne
pop
pop
adc
bound
out
aam
fld
push
cmp
mov
mov
jle
cli
mov
test
mov
(bad)
aad
mov
bound
add
sbb
add
add
mov
cs
daa
repnz
call
jb
ror
test
mov
test
mov
sub
and
out
lea
(bad)
and
sub
(bad)
xlat
fstp
push
add
ja
movsx
out
inc
fistp
mov
add
lea
sbb
or
ror
popf
jmp
fstp
pop
nop
cli
dec
dec
inc
dec
or
or
(bad)
jl
xchg
std
mov
aam
lock
jg
cmp
jl
pop
sbb
xchg
cmp
sbb
sti
jge
jmp
jmp
inc
inc
mov
loop
push
adc
jnp
stos
push
pop
inc
clc
dec
test
jle
arpl
jmp
mov
out
gs
cmp
xchg
pop
pop
dec
sbb
sub
xlat
add
aas
clc
add
inc
mov
mov
lods
cmp
pop
ins
ins
cmp
add
push
xor
es
sti
stos
jg
je
mov
dec
mov
repz
inc
test
jne
jnp
xor
cli
mov
call
ficomp
sti
add
je
xor
pop
dec
jne
ret
xchg
repz
xchg
mov
repnz
clc
scas
(bad)
mov
adc
xchg
iret
mov
shr
je
push
push
cmp
(bad)
push
xlat
(bad)
sbb
add
ror
adc
test
rol
mov
test
mov
inc
add
and
and
adc
and
cdq
in
sti
jle
sub
xor
sub
sbb
and
sub
sub
or
wrmsr
sub
sub
sub
loopne
mov
dec
dec
cmp
adc
or
adc
hlt
shl
cmp
(bad)
cli
and
inc
push
adc
jmp
push
mov
inc
inc
xchg
hlt
fld
jne
imul
mov
iret
cmp
push
adc
aam
fistp
rcr
cld
rcr
scas
mov
fcomp
fstsw
fwait
mov
neg
call
add
or
mov
call
jne
lea
mov
loop
jmp
inc
sub
xchg
shr
and
add
push
(bad)
push
(bad)
std
cmp
xor
stos
mov
add
jns
fwait
cli
sbb
jge
jg
call
adc
cmp
jb
mov
js
scas
add
and
ja
jmp
or
xor
xchg
mov
xor
ja
push
not
push
shr
mov
xor
ret
xchg
out
xor
add
adc
rol
movs
mov
test
adc
scas
iret
neg
sbb
or
pop
(bad)
jmp
jl
mov
push
inc
sub
mov
loopne
jae
dec
add
neg
inc
loopne
push
in
ins
or
pop
lock
xchg
or
mov
add
fisttp
fwait
mov
pop
sub
push
popf
and
jne
dec
sub
cmp
fsubr
mov
add
aas
and
js
(bad)
jp
jmp
enter
cmp
js
cmp
div
pop
jmp
jo
loopne
mov
sbb
inc
inc
dec
cmp
lsl
mov
push
jns
add
mov
xchg
sub
inc
sub
mov
cmp
sti
inc
div
inc
sbb
dec
and
jne
inc
sar
pop
add
jg
jne
mov
sbb
add
(bad)
add
loopne
adc
aas
jmp
fstp
add
movs
lahf
test
or
push
data16
push
ins
and
push
or
push
pop
int3
xchg
test
or
fimul
add
jmp
aaa
mov
idiv
cmp
pop
stc
daa
push
push
inc
imul
rcr
pop
cmp
add
cdq
adc
inc
pop
jp
push
int
(bad)
cmp
addr16
xor
mov
sbb
fistp
stos
pop
and
mov
or
test
and
mov
and
nop
aam
fld
fstp
fwait
and
push
fnstcw
leave
mov
mov
mov
fistp
xor
inc
mov
push
mov
movs
xor
push
adc
adc
adc
or
enter
or
scas
add
dec
or
cmp
inc
stc
inc
cmp
lahf
inc
adc
test
adc
addr16
add
imul
repnz
addr16
call
nop
(bad)
mov
xor
fstp
fwait
xchg
mov
pop
cmp
pop
je
push
retf
movs
dec
outs
movs
jp
aaa
push
push
sub
push
hlt
pusha
dec
lods
cld
adc
(bad)
mov
outs
lods
push
mov
push
cmp
in
or
cld
call
inc
(bad)
or
enter
std
xor
and
out
adc
ins
mov
and
test
mul
adc
mov
ss
add
ja
(bad)
sbb
std
(bad)
les
add
lea
pusha
xor
inc
jb
pslld
out
daa
ja
and
or
jb
sti
dec
test
fild
cmp
ja
adc
pop
idiv
test
mul
pop
dec
inc
jne
sub
dec
shr
aas
cdq
idiv
imul
imul
xchg
aas
pusha
popa
mov
fnstsw
stc
add
popa
ret
or
ficomp
rol
std
std
pop
into
rcl
jmp
sbb
call
jg
jge
enter
clc
psubb
loopne
push
das
or
inc
pop
mov
imul
ds
inc
aas
dec
pushw
jle
xchg
add
jl
add
cmp
mov
in
shl
lock
xchg
das
lods
mov
(bad)
pxor
sub
cmp
dec
lds
sub
cmp
add
sub
add
dec
pop
mov
push
dec
cmp
mov
aas
or
jns
mov
jmp
and
xchg
inc
jp
sbb
inc
jmp
inc
sbb
div
and
int
mov
cdq
ja
gs
aaa
jbe
inc
aas
ret
lods
sbb
mov
pop
popf
call
cmp
xchg
mov
icebp
mov
push
fadd
mov
dec
scas
adc
je
lock
loopne
pop
push
rol
outs
xlat
or
lea
daa
or
add
lods
ja
cmp
sub
mov
mov
sahf
or
mov
std
clc
jae
popa
in
stc
(bad)
push
add
pop
popf
jmp
test
or
data16
mov
fwait
xchg
rcr
sbb
push
inc
sub
mov
xchg
or
sti
je
fadd
jecxz
mov
out
mov
cmp
jne
outs
add
fstp
jo
add
out
or
xchg
repnz
jbe
adc
inc
in
add
jecxz
fs
call
jmp
loope
(bad)
call
into
adc
sahf
fild
xchg
pushf
push
lahf
test
ds
pop
and
out
out
repnz
fld
or
add
ror
add
ret
mov
sbb
mov
mov
nop
stos
dec
sbb
loope
pop
cs
or
mov
ins
mov
jnp
cmp
mov
cmp
sub
add
add
push
sbb
inc
dec
gs
imul
sbb
mov
sbb
arpl
inc
ret
xchg
sbb
xchg
xor
xor
in
das
addr16
iret
in
ret
xchg
sub
dec
mov
enter
mov
mov
je
jecxz
push
ret
arpl
cmova
push
or
imul
das
adc
add
xchg
loope
sbb
aaa
add
dec
xor
leave
fadd
ret
fisttp
cmps
adc
loopne
xor
xchg
push
lahf
mov
add
sub
inc
(bad)
out
dec
pop
jecxz
inc
xchg
les
movs
adc
aad
xor
jae
pop
push
into
or
cmp
cmp
xchg
ret
retf
jns
mov
ret
mov
adc
dec
push
mov
xlat
dec
pop
cmp
jne
mov
xor
xchg
ficomp
jecxz
cmps
cmp
xchg
aas
sbb
int
sti
sub
js
add
dec
push
pop
or
or
add
add
lock
pop
or
mov
imul
and
mov
xchg
retf
(bad)
mov
and
push
les
je
xor
pop
or
(bad)
mov
push
and
pop
lds
sub
cdq
lea
pop
in
sub
add
popf
lea
lea
or
pop
mov
mov
pop
mov
fdiv
imul
adc
mov
mov
(bad)
shl
push
inc
sub
movs
pop
xchg
xor
fcomp
dec
in
leave
mov
cmp
dec
add
aad
loop
sub
push
fs
(bad)
mov
into
mov
push
daa
nop
je
shl
pop
mov
add
xor
cwde
or
mov
jl
push
add
adc
pop
jle
mov
add
push
jmp
sub
je
shl
fistp
push
cmp
dec
mov
and
daa
in
je
mov
mov
hlt
inc
jne
rol
jmp
cmp
xor
pop
push
fistp
push
popa
outs
jne
push
mov
jmp
sub
xor
or
test
call
outs
fstp
pop
or
or
mov
mov
fcomip
pop
jb
mov
out
arpl
mov
movs
retf
leave
and
push
xor
sub
mov
and
cmp
movs
mov
sbb
popa
add
(bad)
daa
jns
and
pop
add
add
sbb
jae
fs
es
cwde
inc
jmp
and
add
mov
cmc
xchg
(bad)
enter
and
add
fmul
out
xor
(bad)
cmp
test
adc
out
adc
sysenter
dec
call
jge
add
sbb
sub
popf
add
mov
cmp
data16
aaa
or
dec
xchg
je
inc
xchg
mov
popa
sbb
push
test
fucomi
add
mov
add
test
sbb
(bad)
mov
(bad)
mov
fist
push
jmp
adc
rol
mov
cmp
fcomp
pop
or
movs
push
fsubr
ja
dec
das
push
int3
into
dec
test
adc
add
jo
out
push
or
pop
clc
out
int3
cmp
ins
mov
xchg
mov
inc
ret
jne
or
mov
int
sbb
lea
in
pop
adc
adc
xchg
retf
cwde
sub
push
les
iret
pop
std
clc
aas
mov
or
jmp
je
mov
add
lea
es
pop
inc
push
xchg
clc
jne
dec
(bad)
int3
test
xor
(bad)
cwde
cwde
ds
xchg
sbb
mov
add
mov
push
pop
(bad)
jmp
mov
adc
sub
jae
jo
cmc
dec
jp
int
sbb
sub
call
push
call
xor
push
(bad)
ins
jge
mul
and
pop
aaa
pop
mov
int
xor
mov
nop
inc
adc
iret
push
pop
daa
loop
aam
fld
and
inc
jns
add
mov
inc
jb
(bad)
and
test
daa
adc
push
mov
outs
sub
fcomp
pop
jl
pop
in
(bad)
cmp
jne
inc
lea
inc
adc
mov
inc
notrack
sub
je
dec
je
call
or
sub
je
jmp
mov
jmp
push
jge
aaa
mov
jmp
inc
mov
jle
shl
mov
or
mul
adc
jp
xchg
or
inc
mov
add
pop
aaa
shl
and
call
loop
mov
mov
scas
xchg
je
mov
cmp
(bad)
jmp
cvtps2pd
(bad)
jmp
add
add
sub
xchg
pop
jmp
or
cmp
jg
or
dec
dec
mov
ror
cdq
xor
sub
add
lahf
(bad)
imul
add
cmp
jle
adc
pop
and
push
out
cld
gs
xchg
psubusb
stc
jno
push
push
and
xchg
jbe
sbb
or
add
popf
add
inc
not
scas
ins
scas
mov
ds
or
dec
gs
cmp
sub
in
jb
cmp
push
call
mov
cmp
leave
or
mov
mov
xchg
lods
cwde
mov
ins
or
and
fcomp
pop
jmp
into
add
lock
dec
xor
bound
mov
test
jmp
mov
and
nop
or
mov
hlt
push
sbb
ss
mov
repnz
sbb
out
xchg
hlt
jmp
cli
lock
mov
cld
pop
adc
call
jo
jge
add
fist
sub
adc
sub
push
(bad)
stos
xchg
loop
data16
icebp
xchg
std
mov
cmp
cmp
jle
and
fs
jne
sub
(bad)
(bad)
test
or
sbb
imul
(bad)
adc
cwde
cmp
daa
inc
push
aaa
pushf
cmp
cwde
jmp
mov
and
cmps
push
test
jne
scas
movs
mov
jne
sar
in
adc
fcomi
fidivr
das
fisub
nop
in
sub
fcomp
das
xor
inc
repnz
out
dec
enter
mov
idiv
jle
jno
or
add
ret
pop
cwde
or
out
gs
fs
add
pop
lock
repnz
fild
pop
adc
sbb
cdq
mov
jg
imul
test
jmp
pushf
nop
sub
pushf
nop
add
add
jo
inc
push
loope
mov
shl
add
xor
push
or
aaa
adc
fdiv
inc
mov
daa
daa
in
inc
or
add
sbb
or
shr
fwait
add
and
in
(bad)
ja
push
imul
jne
push
add
sbb
ss
add
xor
sbb
push
add
pop
sub
loop
push
sbb
sbb
inc
cdq
xor
pop
fist
push
dec
and
out
xchg
into
ins
or
dec
stc
sahf
pushf
sub
xchg
cmp
mov
les
call
ins
mov
jno
rcl
adc
cwde
mov
fwait
pop
das
dec
fwait
in
mov
push
cmp
ret
adc
test
daa
out
xor
mov
aam
sbb
or
mov
stos
fstp
fwait
jmp
sbb
and
in
and
(bad)
mov
add
push
dec
push
pop
adc
and
xor
(bad)
mov
sub
jb
or
xchg
adc
pop
sbb
out
neg
or
ins
xchg
lea
test
adc
pop
or
and
adc
out
push
sub
arpl
mov
add
and
xchg
call
push
push
fnstenv
leave
movs
cmc
mov
mov
add
mov
adc
pop
dec
push
add
arpl
pop
shl
cli
fmul
push
push
push
mov
cmps
loopne
dec
lea
dec
push
mov
cdq
or
adc
xchg
daa
cmp
lock
inc
ficomp
mov
sar
jne
ror
ret
imul
add
add
repnz
add
xor
in
ins
inc
xchg
xchg
dec
call
rol
or
xlat
pop
add
into
push
ds
xlat
pop
mov
push
xor
mov
sub
je
xchg
cmp
add
dec
ja
cmc
add
dec
bound
popa
mov
xchg
cmp
sbb
adc
or
pop
mov
lods
sub
jne
mov
adc
push
xchg
int3
add
mov
add
or
(bad)
or
clc
mov
or
outs
std
adc
add
repz
jo
push
test
xor
fdivr
or
dec
jne
push
push
mov
and
push
(bad)
pop
retf
arpl
ja
push
in
(bad)
mov
mov
test
rcr
pusha
(bad)
clc
mov
xchg
pop
clc
test
add
pop
adc
or
repz
mov
jmp
mov
loop
mov
sbb
je
scas
ret
sbb
add
test
daa
xor
cmps
sub
cmp
dec
cs
mov
cmp
push
jbe
enter
lods
add
add
cld
jle
mov
popa
rcr
fisttp
dec
mov
shl
jmp
mov
aas
movs
sbb
fadd
mov
and
pop
je
shl
mov
jmp
in
adc
and
movs
jns
adc
push
test
movs
dec
xor
fisubr
ins
lahf
push
push
addr16
or
mov
add
push
cs
cmp
mov
or
sub
clc
pop
dec
test
adc
or
xor
xlat
test
jno
add
loopne
pop
jne
pop
xchg
and
out
rol
rcr
or
mov
cmp
sub
ficomp
mov
mov
xor
xchg
mov
inc
sbb
adc
mov
mov
or
mov
sub
and
xchg
mov
jns
fcom
call
jmp
jnp
bound
fwait
mov
inc
add
sbb
and
nop
lea
adc
daa
rcr
mov
cld
inc
fisub
add
and
mov
xchg
addr16
xor
mov
mov
fstp
mov
aam
loopne
clc
push
lea
cmp
sbb
test
data16
pop
fsubr
push
or
cmp
cmps
or
loopne
sbb
pusha
(bad)
test
pop
sbb
jno
mov
xchg
inc
push
or
cwde
out
gs
mov
adc
hlt
xchg
int
add
push
push
bound
mov
push
aam
push
jnp
mov
adc
pop
jbe
inc
les
scas
pop
inc
pop
push
mov
adc
jg
lea
clc
adc
add
adc
outs
xor
sub
add
repnz
sub
pop
loop
pusha
int
cld
les
mov
jo
mov
ror
ja
stos
adc
nop
add
(bad)
mov
stos
test
sub
sub
clc
fwait
dec
add
or
cmp
sub
add
dec
mov
mov
or
inc
inc
jge
or
inc
cmp
dec
xor
push
pop
clc
call
add
jg
cmp
xchg
mov
or
dec
retf
xor
sbb
and
test
(bad)
pop
in
outs
mov
or
cmp
dec
gs
or
das
js
dec
push
xor
inc
icebp
add
jg
fst
dec
xchg
push
adc
jmp
outs
ja
xchg
jmp
sub
cwde
sub
inc
lds
das
sbb
adc
ret
out
loopne
or
jo
and
sbb
mov
mov
mov
sbb
cmp
in
or
jge
xchg
lahf
test
xchg
push
loopne
jo
cmp
jo
loopne
cmp
xchg
int3
add
mov
adc
int3
inc
adc
ins
add
loop
icebp
pusha
mov
add
enter
lods
nop
pop
iret
xor
fcomp
call
fs
and
pop
cmp
je
jmp
xor
inc
int
iret
enter
jmp
and
(bad)
jmp
mov
ret
mov
add
mov
retf
mov
or
rcl
pop
daa
lods
aam
xadd
mov
xchg
outs
adc
mov
pop
lods
mov
sub
lods
pop
cld
cmp
pslld
add
inc
adc
jae
arpl
or
dec
pop
inc
and
adc
or
mov
sub
cwde
and
pop
adc
dec
mov
add
lea
fadd
popa
sub
sbb
jnp
cmp
or
enter
addr16
mov
mov
cmp
imul
lea
outs
je
jmp
enter
sub
leave
enter
test
leave
and
retf
add
xor
dec
dec
mov
mov
xchg
ds
xchg
and
dec
(bad)
dec
mov
call
imul
add
sub
sub
pop
mov
jae
jae
test
rcr
push
xor
lods
(bad)
hlt
push
repnz
aad
lock
push
pop
clc
in
fadd
jne
push
push
jnp
cmp
add
(bad)
mov
xlat
test
hlt
in
adc
in
or
(bad)
sub
sbb
pusha
jns
mov
loopne
xchg
mov
nop
dec
rol
test
gs
das
out
xchg
jbe
mov
mov
pushf
mov
aam
mov
mov
out
adc
sbb
push
mov
add
movs
lods
and
cwde
cwde
add
mov
outs
add
add
in
inc
je
aam
push
jns
cwde
es
ins
dec
xchg
ja
mov
shl
lahf
fcom
add
in
or
lds
repz
hlt
and
push
adc
in
and
adc
add
mov
cmp
jne
cmp
fadd
or
inc
dec
cmp
adc
adc
je
pop
js
pop
pop
and
jns
push
in
nop
mov
imul
ja
je
xchg
pop
dec
xor
mov
punpckhbw
ins
inc
adc
xchg
cmp
pusha
imul
mov
inc
and
mov
cmp
test
pusha
stc
adc
add
dec
or
xor
rcl
mov
and
mov
iret
sub
and
adc
and
or
inc
xchg
add
add
xchg
mov
add
dec
cmp
and
mov
pop
gs
mov
(bad)
xor
cmp
daa
xor
ja
test
jle
call
btr
test
inc
inc
enter
mov
inc
pop
jg
mov
scas
das
adc
push
sub
push
add
and
and
push
mov
cmc
inc
call
(bad)
pop
xchg
imul
popa
mov
sar
(bad)
mov
mov
(bad)
xchg
retf
mov
jge
out
mov
out
jl
jne
sbb
ror
dec
imul
xor
inc
pusha
xor
pop
pop
bound
dec
mov
xchg
cwde
aas
sar
fild
push
cs
enter
push
xchg
gs
dec
jg
mov
ficomp
or
mov
test
movs
test
mov
inc
jno
es
mov
fisub
or
pop
nop
sub
fnstenv
nop
loop
cmp
mov
dec
mov
and
jae
fwait
add
les
shr
jae
fisttp
leave
push
(bad)
xor
movs
in
shl
leave
jmp
popa
loop
add
inc
mov
(bad)
mov
aam
jmp
jl
mov
js
jge
fadd
adc
xchg
dec
and
aad
test
ret
push
addr16
mov
mov
adc
scas
push
push
(bad)
clc
sub
xor
add
mov
adc
ret
sub
xor
push
jle
sar
cli
jbe
bound
imul
and
mov
push
lock
daa
sbb
or
repnz
mov
rol
adc
je
dec
ficom
add
inc
(bad)
jne
ins
sub
sub
hlt
fs
push
cmp
cmp
dec
xchg
xchg
push
inc
shl
xor
rcr
fcomp
repz
fldcw
hlt
adc
xor
imul
pop
in
push
mov
outs
adc
push
mov
hlt
push
pop
sub
jb
inc
mov
mov
stos
dec
dec
jne
or
jbe
pop
or
xchg
gs
push
aas
clc
pop
ja
pop
sub
stc
les
imul
cmp
sti
push
mov
xor
dec
add
push
je
pop
mov
leave
data16
mov
mov
or
bound
mov
pop
jbe
add
test
les
add
lock
xchg
mov
pop
mov
jnp
popa
pop
dec
and
in
sbb
mov
or
popa
mov
mov
inc
cmp
sub
mov
and
push
xchg
push
aad
scas
jae
sbb
imul
cmp
xchg
ror
dec
lds
push
dec
jne
mov
lock
pop
mov
test
cmp
and
sub
pop
arpl
mov
push
add
out
jecxz
retf
dec
jne
push
scas
int3
inc
stos
sbb
mov
mov
movs
and
popf
loop
test
rcl
add
fstp
inc
sub
or
inc
cwde
mov
test
test
out
add
sbb
test
sub
(bad)
call
mov
fld
xor
mov
mov
iret
xor
dec
pop
fmul
push
cmp
mov
mov
repnz
aam
sar
fdivr
push
fldenv
fmulp
xchg
sar
sub
repz
sar
sub
and
xor
and
mov
or
sbb
aaa
jbe
scas
or
push
fs
les
les
nop
cmp
nop
pmulhuw
hlt
mov
not
cld
push
and
mov
xchg
movs
inc
add
lock
add
push
mov
mov
push
icebp
dec
push
mov
das
fs
xlat
scas
ins
retf
inc
add
das
add
das
enter
jo
push
jne
push
outs
ins
and
sbb
dec
cdq
ds
fnstsw
int
push
cmp
out
(bad)
sbb
dec
in
cdq
fmul
jne
add
int
inc
or
je
(bad)
or
push
ret
dec
jno
lea
jmp
or
sub
adc
ins
pop
or
mov
sub
push
mov
js
dec
add
ss
mov
mov
sub
popf
dec
rcr
(bad)
xor
mov
rcr
stos
pop
mov
out
clc
add
imul
or
or
inc
dec
add
cmp
in
push
sub
inc
mov
aaa
mov
(bad)
std
daa
in
aaa
add
pop
icebp
push
mov
repz
scas
cmp
add
cmp
fs
jge
adc
fcom
mov
ret
ret
pop
stos
jg
movs
sbb
mov
adc
mov
sbb
push
(bad)
jmp
add
mov
inc
repz
mov
mov
push
and
jl
(bad)
push
pop
stos
cmps
pop
in
ja
std
mov
push
push
and
push
icebp
pushf
or
fs
or
aad
inc
ret
sbb
xor
inc
jb
gs
jo
dec
jg
loop
js
sti
xchg
lock
inc
add
lahf
sbb
ret
xchg
push
adc
and
xor
daa
push
cmp
mov
xchg
pop
loop
outs
or
ins
or
jne
inc
sbb
jne
sti
and
sub
fisttp
mov
adc
adc
adc
mov
or
loop
(bad)
jbe
push
addr16
popa
mov
mov
int
mov
in
xchg
add
jmp
push
loopne
push
shr
sub
adc
pop
mov
inc
or
adc
in
mov
lea
scas
ins
mov
scas
les
mov
(bad)
mov
xchg
xchg
int
or
cmc
imul
mov
and
inc
or
es
mov
jb
stos
js
xchg
nop
mov
movs
fsubr
push
loopne
cmps
dec
loopne
dec
cmc
xor
sub
inc
xchg
les
in
or
inc
clc
js
ins
xlat
adc
cmps
push
mov
push
xchg
sub
stos
add
popf
aaa
sub
fdiv
aad
lods
and
push
or
mov
jns
lds
das
adc
cmp
mov
mov
(bad)
(bad)
mov
push
xor
arpl
xor
push
sbb
es
mov
pop
adc
cmps
clc
mov
jnp
ja
je
push
shr
das
loope
outs
sub
pop
lock
out
xchg
ret
mov
lea
and
mov
sbb
mov
lea
cmp
xor
rol
mov
in
aam
or
and
push
pusha
mov
xchg
sub
lds
xchg
ret
inc
cmp
sub
xor
xchg
and
lahf
adc
inc
dec
cmp
mov
inc
shr
scas
xor
sbb
or
sub
hlt
rcr
lock
daa
inc
scas
add
icebp
and
loopne
inc
(bad)
cmp
lock
xor
push
jbe
pop
add
(bad)
mov
loopne
sbb
shl
and
push
inc
ja
dec
or
or
inc
xor
je
data16
int
enter
or
les
inc
adc
adc
xor
push
adc
imul
lahf
inc
or
xchg
pop
mov
sbb
cmp
ds
sub
and
rol
aas
iret
dec
cmp
loope
ret
jl
jne
cmp
test
movs
mov
push
sar
cmp
mov
jg
xchg
sbb
pop
int
inc
ss
fst
(bad)
and
(bad)
push
xor
xchg
cdq
lods
inc
int3
(bad)
jmp
popa
ja
rol
cmp
cmp
add
outs
fsubr
dec
mov
outs
and
add
test
adc
lods
cmps
imul
clc
repnz
add
push
xor
lods
imul
(bad)
call
rcr
mov
adc
mov
mov
push
xchg
imul
cwde
pop
loopne
jle
mov
call
(bad)
and
call
ds
mov
xor
pop
movs
dec
addr16
xor
inc
mov
push
imul
add
or
rol
imul
movs
or
mov
movs
int3
and
ss
cld
sbb
mov
inc
mov
fisub
adc
xor
inc
enter
or
mov
push
push
add
xor
icebp
pop
hlt
push
pop
or
inc
das
in
push
pushf
call
pop
inc
in
loopne
ins
nop
out
ins
std
fdiv
fcom
les
je
mov
sbb
sbb
imul
ss
cmp
ret
outs
nop
data16
mov
mov
imul
test
test
dec
add
pushf
adc
js
pop
cwde
ins
or
jl
mov
dec
outs
je
sub
mov
inc
pop
hlt
mov
enter
adc
pop
arpl
int3
add
popf
cdq
test
pop
or
cmps
sbb
jge
sub
inc
xchg
cdq
jbe
cmp
xchg
dec
es
nop
mov
add
cdq
adc
rcr
leave
in
push
loopne
and
pop
iret
dec
xchg
js
sub
rcl
clc
in
daa
inc
xor
aad
mov
popf
loope
jge
xchg
in
pop
jno
adc
mov
clc
in
pop
mov
out
js
in
rol
es
sbb
aaa
cmp
add
mov
pop
data16
adc
xor
leave
movs
pop
ret
dec
rol
cdq
xacquire
mov
or
pop
xor
and
call
call
add
cmp
xlat
sbb
jns
xor
fild
add
cmp
xor
or
fcom
add
fcom
mov
lea
mov
clc
lea
jbe
mov
dec
jge
add
sbb
adc
mov
std
and
enter
imul
rol
sub
push
in
pop
or
fst
sbb
call
outs
or
fninit
div
dec
pop
frstor
(bad)
or
and
and
ja
or
bound
(bad)
pop
xchg
fadd
loopne
or
lea
and
out
jmp
repnz
cmps
adc
(bad)
popa
enter
rol
test
jns
daa
dec
ins
pop
movs
push
lods
push
xor
inc
cmp
mov
mov
mov
mov
loopne
add
outs
or
push
mov
and
mov
jg
loopne
movs
repnz
test
ins
leave
and
mov
xchg
pop
jb
mov
xchg
pop
jb
mov
jb
and
leave
and
pop
repnz
mov
inc
imul
jns
fcomp
fcom
dec
fucomi
loopne
xchg
cmp
mov
in
iret
enter
or
call
enter
(bad)
xchg
addr16
cmp
retf
(bad)
sbb
pop
jne
mov
xor
out
test
or
push
jns
or
dec
push
jns
in
add
outs
je
fs
jne
jbe
xchg
inc
dec
jne
inc
imul
mov
pop
outs
dec
jb
pop
outs
mov
inc
ins
jo
inc
jb
ins
push
je
push
ret
leave
push
cmp
ficomp
mov
mov
jnp
mov
jae
shr
mov
mov
in
sbb
sbb
js
clc
ss
maxps
movs
mov
add
and
fcomp
imul
lea
dec
dec
jo
xchg
scas
loope
in
add
loop
and
adc
js
loop
fcom
xor
sti
pop
inc
add
or
push
mov
fadd
das
adc
push
inc
sub
mov
ins
int3
es
es
push
adc
dec
in
inc
cmp
dec
inc
cmp
jns
pusha
xor
adc
sub
add
and
leave
hlt
loop
loop
jnp
xor
sbb
jecxz
add
inc
pop
pop
jecxz
inc
test
xor
mov
(bad)
mov
mov
and
jb
repnz
or
fld
jb
retf
test
test
gs
nop
inc
popa
adc
adc
nop
cld
call
call
adc
push
shr
dec
in
(bad)
and
dec
inc
or
xchg
dec
outs
jb
lea
inc
int
iret
mov
xchg
cmp
shl
iret
sbb
or
add
out
sub
test
dec
ins
jo
mov
ins
(bad)
(bad)
pop
sbb
rol
call
cmp
in
dec
out
je
push
jmp
(bad)
xchg
mov
daa
arpl
adc
pop
stos
jg
out
js
and
daa
inc
pusha
repnz
or
adc
adc
mov
add
jbe
cmp
retf
cmp
sar
movs
pusha
or
call
add
jle
in
fs
in
enter
dec
call
pop
jb
adc
sahf
call
and
and
aaa
jmp
enter
jmp
mov
call
jb
in
jmp
outs
aad
jmp
mov
add
pop
add
jg
mov
sbb
repz
daa
clc
sub
(bad)
mov
(bad)
int3
in
fld
dec
je
sbb
fsubr
gs
in
jns
push
xchg
daa
loopne
ja
add
rcr
xlat
pusha
adc
pop
ss
pop
cmp
dec
pop
fcom
imul
std
retf
clc
out
(bad)
pop
stos
hlt
mov
mov
pushf
add
dec
loop
fs
add
in
mov
scas
scas
in
dec
shr
mov
ins
es
adc
(bad)
aam
jmp
movs
cdq
mov
repnz
xchg
loopne
stos
or
daa
jmp
mov
cmp
out
aas
sti
int3
or
jae
shr
xchg
xor
fmul
sub
not
jmp
movs
sar
and
nop
jl
dec
loopne
or
fimul
and
fst
dec
clc
pop
aam
sub
or
cdq
ret
mov
push
adc
pop
enter
iret
jbe
pop
std
sbb
and
fist
icebp
push
pop
push
pop
mov
shr
add
adc
or
js
outs
(bad)
xchg
adc
dec
pop
xlat
mov
push
sub
xor
inc
mov
(bad)
add
loope
test
pop
das
jmp
jmp
stc
mov
sub
dec
cmp
adc
fadd
call
daa
test
call
adc
das
push
add
add
mov
sub
dec
inc
cli
mov
(bad)
(bad)
jne
lods
in
pop
les
adc
ins
imul
loopne
in
sbb
lock
or
sar
jl
inc
xor
lea
mov
xchg
call
add
cmp
add
int
and
test
and
into
add
adc
fcmovnu
xchg
inc
sub
inc
pop
dec
inc
sbb
sahf
jmp
inc
lea
mov
mov
nop
ret
in
repz
dec
mov
fcom
in
add
pop
in
or
out
lds
push
ins
shl
adc
mov
mul
push
fwait
js
jae
push
aas
jmp
retf
xadd
pop
loopne
sbb
fwait
pop
inc
sub
or
iret
(bad)
and
adc
dec
xor
div
and
loopne
je
fstp
and
and
add
shl
cmp
mov
pop
jae
mov
loope
lods
jp
cwde
ss
inc
push
mov
pop
ret
aas
fbld
ds
sbb
(bad)
clc
fimul
nop
inc
aaa
add
mov
xor
or
or
inc
mov
sbb
in
loopne
fs
inc
loopne
nop
and
xchg
in
loopne
fisubr
shl
xchg
std
clc
push
push
test
xor
(bad)
push
sub
mov
sbb
mov
and
int
cdq
nop
in
fbstp
dec
call
or
xor
or
xchg
push
inc
hlt
out
aad
pusha
xchg
jmp
push
(bad)
sbb
pushf
out
test
mov
xchg
push
inc
call
xchg
cdq
cs
dec
push
adc
call
add
add
cmps
or
or
inc
adc
cmp
xor
inc
(bad)
xor
mov
rcl
fild
(bad)
nop
out
jmp
(bad)
cmp
sbb
(bad)
sub
or
pop
dec
in
add
lock
je
pop
jne
imul
(bad)
retf
pop
xchg
neg
call
out
aad
inc
das
or
nop
xchg
or
cmp
rcr
and
popf
rcr
sub
push
imul
and
repnz
bound
imul
ss
repz
push
mov
push
jbe
or
lea
and
inc
dec
adc
cli
adc
cld
ficomp
lods
pushf
cmp
lock
dec
lock
jo
mov
fs
mov
repz
nop
ret
mov
push
call
pop
nop
hlt
jp
mov
push
mov
inc
dec
push
add
mov
adc
lea
add
fdivr
dec
cmp
je
movs
jg
ds
dec
inc
dec
and
test
push
adc
xchg
int
mov
es
mov
pusha
xor
xchg
mov
mov
xor
adc
or
push
mov
ror
and
loope
pop
or
jne
jge
push
add
xchg
pop
cmc
xchg
mov
loope
retf
and
push
sbb
(bad)
enter
inc
fs
outs
sub
pop
add
cdq
arpl
xor
inc
cli
sbb
mov
cmp
ja
inc
test
cmps
pop
mov
push
add
sub
imul
push
mov
pop
push
sub
dec
shl
cdq
rol
cmps
jge
push
cmp
adc
or
dec
pusha
sbb
ror
mov
scas
movsx
jae
mov
enter
xor
lahf
ret
sub
add
mov
add
hlt
and
jb
(bad)
and
enter
or
or
sahf
mov
cmp
mov
call
push
inc
inc
bound
mov
pop
push
fsub
loop
cdq
sub
xor
neg
cmps
popf
mov
aam
aaa
aam
(bad)
inc
shl
or
xchg
int
je
int3
enter
mov
sti
repnz
mov
(bad)
inc
adc
je
dec
je
ss
sbb
enter
shl
test
add
and
pop
je
clc
es
test
clc
imul
(bad)
jmp
or
sub
inc
pop
push
or
cmps
dec
daa
js
push
mov
xchg
shl
mov
or
add
inc
ret
mov
mov
leave
rol
cdq
mov
inc
fld
fs
pop
push
shr
cmp
inc
push
jl
mov
adc
loopne
sbb
cwde
movs
and
pop
pop
mov
cmp
pop
pushf
cmp
sahf
cwde
mov
xor
pop
sbb
xchg
jmp
push
sbb
adc
jmp
popf
mov
gs
dec
fisub
out
in
adc
mov
and
mov
sbb
leave
mov
mov
dec
jle
mov
or
mov
mov
mov
in
and
pop
sti
cmp
sti
or
push
shl
in
dec
scas
nop
inc
test
inc
sti
popa
pop
leave
bswap
cmp
(bad)
cmp
scas
xchg
pop
inc
(bad)
mov
mov
and
sti
loopne
xor
push
sub
loopne
sar
enter
in
fs
sbb
addr16
jne
cmp
jo
mov
in
test
in
test
dec
nop
dec
cwde
movs
or
push
push
fcmovne
xchg
cmp
add
into
movs
and
imul
shr
cmps
int
pop
(bad)
jecxz
imul
push
inc
pusha
mov
xchg
mov
push
cmp
bound
or
ins
xor
push
xor
push
xor
xor
push
add
ret
push
mov
test
cmp
cmp
and
test
pop
adc
loopne
and
lods
jnp
fmul
mov
pop
fdiv
fdiv
popa
mov
ret
aam
push
ror
aaa
rcl
iret
add
inc
adc
xchg
dec
inc
cwde
imul
jae
jmp
aaa
cmp
and
jmp
les
in
mov
push
push
jmp
dec
push
test
sub
mov
dec
fidiv
shl
ja
and
dec
imul
jmp
xchg
jns
daa
aaa
rol
pusha
add
cs
fs
inc
imul
or
jge
xchg
mov
mov
cmp
es
mov
dec
pop
aaa
pusha
test
jno
popa
test
test
pop
jb
shl
or
mov
cmp
and
jo
cwde
jno
mov
test
mov
nop
nop
popf
nop
sahf
mov
cwde
jmp
and
inc
mov
adc
pop
mov
mov
ins
ret
push
test
das
dec
sbb
pop
jb
loopne
test
pop
cmps
nop
dec
mov
or
(bad)
(bad)
ret
enter
adc
pop
push
mov
sbb
pop
jmp
mov
sub
int
ja
pop
push
xor
rcl
icebp
mov
fwait
hlt
adc
outs
and
or
(bad)
fiadd
adc
fwait
jne
pop
(bad)
scas
xor
dec
fstp
fwait
scas
daa
pop
sub
fistp
cmp
test
push
or
mov
or
or
push
sub
push
out
jae
add
repnz
sbb
adc
cmp
jb
inc
dec
inc
pusha
test
sub
or
aaa
inc
ins
jo
jns
sub
add
dec
jne
push
and
and
popa
jnp
xchg
mov
pop
or
mov
push
aas
ins
add
inc
outs
jne
cli
fist
jb
outs
arpl
sbb
adc
arpl
scas
pop
dec
popa
xchg
test
or
add
and
mov
fiadd
fwait
aas
push
outs
imul
pop
adc
arpl
(bad)
xor
xor
push
ss
push
inc
jns
or
xor
add
inc
and
popa
xchg
enter
inc
adc
sub
add
mov
and
dec
ja
test
pop
dec
clc
adc
mul
cmp
mov
pop
call
ins
das
add
hlt
mov
jmp
imul
loopne
(bad)
fdivr
cld
clc
mov
push
push
cmp
push
cdq
sbb
sbb
jae
cmp
das
jne
je
mov
adc
test
pusha
xor
inc
in
or
xor
and
adc
call
scas
movs
arpl
ror
sbb
mov
popa
enter
and
es
push
push
gs
push
cmc
dec
and
push
xchg
jle
not
inc
inc
lock
inc
push
pop
xor
push
or
test
loop
jne
js
test
mov
mov
mov
enter
push
repz
clc
xlat
mov
jl
sbb
dec
loopne
xor
push
add
cmps
out
jb
push
lahf
dec
retf
out
sbb
outs
mov
push
push
sub
pop
mov
xchg
cmp
sbb
and
add
adc
sbb
add
or
cmp
je
outs
(bad)
adc
inc
loop
into
repnz
xchg
or
dec
xchg
pop
push
imul
jg
(bad)
push
adc
cmp
inc
call
ret
jmp
inc
add
sub
add
mov
inc
mov
jb
cmp
add
mov
jns
outs
mov
and
std
cmp
fwait
les
les
sub
push
mov
(bad)
sub
je
enter
or
adc
lea
xor
sub
push
push
xor
add
inc
js
mov
mov
adc
add
mov
cmp
add
paddusb
addr16
aaa
adc
setnp
fcmovu
enter
pop
and
mov
outs
addr16
sbb
dec
sbb
or
jbe
faddp
pop
dec
adc
xlat
sbb
js
lds
fwait
xchg
sti
cmp
in
iret
mov
lahf
jno
inc
mov
lods
xchg
ds
push
fnstenv
loope
inc
add
mov
cmp
pop
test
lock
and
adc
imul
or
add
or
and
inc
xor
push
mov
inc
sbb
sahf
cmp
or
inc
add
add
sub
jno
or
sbb
jne
dec
jne
sbb
adc
xchg
pop
jmp
jl
and
adc
cmps
jne
add
loopne
push
pop
leave
nop
mov
ss
push
inc
repz
(bad)
les
stos
fild
ret
xchg
jl
push
and
inc
out
lds
out
sub
sub
sub
mov
or
mov
mov
fs
jnp
cwde
cli
sub
fdivr
add
fist
inc
repnz
ins
cmc
sbb
add
ds
inc
xchg
cld
add
lds
or
inc
popa
daa
pop
and
stos
lods
clts
sbb
scas
scas
nop
sbb
xchg
xchg
xchg
fs
inc
push
xchg
xchg
xchg
nop
inc
push
sbb
sbb
pushf
push
sbb
sahf
lahf
sbb
nop
inc
add
nop
inc
push
sbb
sbb
mov
or
mov
shl
cld
or
mov
jae
cmp
(bad)
or
std
add
add
pop
and
fcmovbe
aaa
ret
or
inc
or
add
lea
ret
xchg
mov
scas
cmps
lock
pop
adc
xor
test
jne
out
movs
lea
inc
dec
xor
cmp
inc
sub
sar
or
loope
iret
cmp
je
out
xor
in
jge
inc
int3
repz
mov
enter
sub
add
mov
(bad)
test
jle
clc
and
sar
or
aaa
mov
imul
xchg
lock
pop
or
push
or
mov
in
or
and
pop
inc
cmp
je
mov
dec
and
sbb
ins
aas
dec
inc
add
and
fild
sbb
loop
mov
ins
sbb
test
clc
push
hlt
out
jne
es
mov
mov
mov
cmp
je
jg
pop
ret
push
pop
lar
dec
push
adc
ja
rcl
jmp
call
jmp
add
or
fisttp
fldln2
(bad)
pop
std
push
add
add
adc
movs
adc
add
mov
enter
jg
add
daa
inc
add
mov
in
ds
dec
cmp
adc
jg
add
cmp
ja
jb
add
add
call
repnz
cmps
(bad)
out
mov
mov
(bad)
adc
or
xchg
fwait
in
lea
adc
inc
sbb
ds
cmp
pop
dec
fwait
xlat
or
nop
iret
jno
(bad)
(bad)
mov
dec
or
cli
test
mov
stos
mov
aaa
adc
or
hlt
add
les
movs
ret
repz
sub
push
sub
add
aas
pop
inc
jo
mov
inc
or
inc
mov
bswap
out
dec
cmp
adc
xlat
sbb
pop
or
and
mov
stc
test
dec
pop
adc
lahf
inc
inc
lahf
mov
mov
mov
cmp
or
adc
lods
fnstenv
push
and
enter
mov
dec
hlt
and
adc
pusha
outs
rol
mov
lea
push
cli
or
aas
fst
adc
mov
bound
adc
jb
sub
inc
cmp
jne
out
neg
dec
ins
adc
jp
cmp
fidiv
(bad)
sti
push
xchg
add
mov
clc
pop
push
inc
add
mov
adc
mov
xor
iret
lods
pop
jecxz
and
(bad)
inc
jmp
and
inc
stos
test
xor
dec
jnp
cmp
jno
cmc
mov
push
ja
cmps
mov
mov
out
stc
or
jle
fld
fstp
fild
add
fst
mov
push
sbb
push
inc
add
fisub
movs
pop
inc
or
cmp
ret
fdivr
or
pop
pop
push
cs
adc
mov
jno
jge
stos
addr16
retf
or
imul
pushf
mov
cld
add
sub
fucomi
sub
fisttp
mov
dec
and
jg
lods
mov
outs
xor
call
add
adc
pop
add
and
cmp
jmp
adc
inc
lock
or
es
inc
sbb
inc
loop
loope
sbb
push
jp
jns
jno
push
dec
adc
(bad)
fild
sbb
adc
mov
pop
outs
sbb
pop
pop
ins
adc
sub
ja
jb
pushf
sub
loopne
cmc
pop
adc
punpckhdq
inc
sub
jbe
add
shr
pop
(bad)
icebp
jbe
fnstcw
xor
fxch
loopne
xchg
std
dec
or
cmp
(bad)
inc
jns
or
inc
fwait
or
ins
cmps
ja
adc
scas
inc
mov
or
mov
add
adc
xor
in
inc
inc
enter
into
aas
adc
dec
push
sbb
inc
sub
add
push
add
inc
imul
sub
fs
gs
outs
push
jnp
es
sbb
sbb
adc
xchg
fsub
adc
inc
ins
outs
sbb
cld
scas
movs
add
aas
dec
outs
ins
jns
inc
ins
popa
mov
outs
pushf
fimul
cmp
pop
or
push
push
(bad)
idiv
inc
je
ins
or
cmps
or
dec
imul
adc
nop
lock
and
or
test
sbb
jge
or
push
or
dec
and
dec
adc
js
add
imul
add
imul
dec
cs
and
or
sub
xchg
cli
dec
gs
arpl
jae
movs
aas
jne
pop
cmps
outs
or
jne
sbb
(bad)
or
ja
js
or
jbe
imul
mov
pushf
retf
add
inc
mov
scas
or
push
inc
mov
sub
shr
mov
pop
mov
pop
ja
ds
jb
mov
push
inc
mov
arpl
sub
or
neg
sbb
pop
retf
or
outs
mov
scas
xchg
and
cs
or
scas
mov
or
dec
scas
xchg
sbb
inc
pop
cmp
add
pop
pop
fidiv
pusha
scas
pusha
push
mov
and
inc
sbb
add
mov
inc
fisub
mov
sbb
mov
sub
dec
test
or
jo
imul
enter
rol
imul
inc
fistp
sub
mov
and
xcrypt-ofb
cmps
ins
jo
mov
mov
xchg
je
mov
test
cwde
xchg
jb
or
outs
adc
and
adc
bound
push
lock
jg
sbb
push
sbb
inc
popf
shr
(bad)
fwait
in
pop
test
pop
ins
inc
xor
mov
push
int
repnz
add
movs
movs
and
push
or
mov
scas
cld
or
push
pop
inc
cmp
push
or
push
sbb
pop
pusha
lods
push
push
add
aam
in
std
or
pop
in
add
jecxz
jmp
lock
inc
mov
jae
xor
in
popf
test
mov
or
test
ror
sbb
ins
xor
lock
adc
int3
mov
fcom
lock
enter
push
sbb
clts
imul
push
xchg
add
cmp
movs
inc
inc
xor
inc
lea
adc
add
out
sbb
fadd
xor
fild
(bad)
cmovns
jae
fs
jo
(bad)
dec
jo
add
pushf
jae
push
rcl
sahf
cmps
add
scas
cmp
(bad)
and
cli
call
mov
pop
shl
int3
pop
xlat
mov
push
dec
mov
inc
xlat
fisttp
movs
retf
sbb
adc
xlat
mov
jl
test
dec
pop
pushf
push
sar
push
ins
(bad)
jl
rol
es
pop
dec
mov
shl
inc
mov
sub
pop
mov
aaa
mov
push
push
push
cmp
ss
test
jo
mov
sbb
or
scas
pop
ret
push
test
enter
lock
push
or
lods
pop
sar
pop
ret
mov
pop
and
add
pop
hlt
jns
ins
xchg
and
loopne
dec
push
fsubr
or
push
pop
and
sub
fidiv
pop
pop
cld
rcr
or
out
or
movs
jbe
push
pop
dec
push
pop
mov
sbb
clc
push
pop
mov
push
(bad)
ficom
adc
xor
sub
xlat
sbb
dec
push
add
cmp
inc
xlat
xchg
jne
je
out
sub
inc
rcr
and
pop
xor
aam
pop
pop
push
fwait
adc
fild
xor
sub
adc
data16
fcomp
call
jno
push
dec
sbb
pop
in
inc
inc
pop
and
js
leave
inc
leave
cwde
call
data16
addr16
and
adc
and
inc
pop
bound
repnz
sbb
(bad)
test
and
and
and
mul
fsub
cmp
arpl
repz
enter
test
in
lock
out
cwde
test
mov
xor
adc
or
or
adc
and
adc
sbb
adc
and
and
lds
xor
push
add
sbb
movs
xchg
in
in
dec
imul
mov
lods
pop
ss
and
adc
pop
sub
cmp
gs
xchg
push
or
adc
inc
popa
retf
mov
push
and
add
and
cmp
dec
je
fadd
dec
shr
inc
push
pop
adc
xor
push
fbld
nop
fmul
add
or
add
and
dec
cmp
es
nop
in
dec
es
fsub
sar
gs
popw
push
add
pop
rcr
and
(bad)
es
in
(bad)
stc
ss
leave
mov
dec
pusha
jo
cmp
jno
int
push
ds
pushf
jge
push
loopne
xor
jo
xor
call
or
inc
sub
pop
inc
fcomp
mov
cmp
jno
xchg
arpl
daa
ds
test
icebp
mov
ds
call
rcl
stos
mov
ror
mov
jg
mov
and
inc
fsubr
nop
enter
enter
aam
aam
mov
and
mov
xchg
push
mov
dec
stos
mov
loop
inc
sti
inc
int
dec
add
into
sub
cmp
repnz
aas
fisub
sub
sub
xchg
movs
sub
inc
mov
aaa
mov
(bad)
ins
mov
call
dec
cdq
je
int
call
push
push
sahf
ja
ins
and
push
fs
mov
cwde
mov
xor
sti
adc
(bad)
dec
(bad)
clc
push
push
push
push
push
push
jecxz
ins
add
jle
push
or
imul
rcr
sbb
push
adc
int
cld
pushf
inc
or
jbe
pop
and
mov
mov
jge
xchg
pop
add
cmp
(bad)
sahf
adc
add
mov
addr16
hlt
sub
xchg
and
mov
mov
xor
in
push
shl
movs
clc
jmp
imul
cs
cmp
push
sub
ficomp
sub
pop
and
add
sub
mov
push
mov
pop
dec
lock
call
push
or
and
pop
sub
and
and
sub
push
xor
pop
dec
dec
fs
cmp
sbb
or
xlat
arpl
adc
xor
push
rcl
in
test
js
push
cdq
ins
mov
int
mov
nop
cmp
mov
xchg
or
adc
movs
rol
je
dec
jbe
mov
sub
sub
pop
add
jb
jne
xlat
xor
xchg
in
in
ds
mov
ins
push
(bad)
inc
loopne
sub
adc
or
jo
in
push
mov
dec
xchg
stc
mov
and
bound
pop
ss
jp
lods
mov
adc
or
xor
retf
nop
mov
ror
(bad)
(bad)
pop
or
inc
inc
jg
imul
pop
fdiv
sub
sub
ret
aam
push
or
mov
jmp
sbb
adc
ret
add
and
cmp
xchg
mov
cmp
fcom
stos
ffreep
inc
mov
mov
fsub
inc
dec
sbb
and
cmp
jl
cmp
js
addr16
jge
sbb
je
ret
std
push
outs
add
xor
repnz
or
sub
jmp
rol
add
mov
clc
mov
push
daa
and
and
push
sub
push
scas
loope
cmp
and
push
sbb
call
adc
pop
mov
dec
fmul
mov
push
inc
or
(bad)
(bad)
and
mov
mov
jbe
jne
pop
add
sub
push
hlt
jecxz
das
test
inc
or
jns
jmp
lock
inc
adc
and
(bad)
or
lea
push
add
push
push
cld
call
mov
push
push
sub
adc
sbb
inc
xchg
shl
gs
mov
setge
and
push
inc
inc
lods
cmp
sub
xchg
mov
les
les
push
or
cs
nop
or
int3
(bad)
add
pusha
inc
push
add
pop
jno
enter
imul
retf
push
sub
jmp
inc
and
je
jb
jmp
in
sbb
and
or
mov
inc
dec
jecxz
sahf
jnp
push
pop
dec
rcr
fwait
cs
or
shl
cmp
(bad)
loop
lock
mov
int
call
stos
enter
push
nop
sub
mov
cdq
push
cmps
xor
inc
dec
jne
(bad)
mov
lods
sub
xchg
xchg
sub
lds
add
push
je
push
movs
inc
rcr
xchg
es
sbb
and
jns
cmp
dec
out
xor
inc
xchg
mov
mov
xchg
mov
xor
sub
cmps
aam
push
pop
dec
or
inc
iret
add
inc
xchg
movs
fld
hlt
ror
push
xchg
push
sub
(bad)
leave
mov
adc
int3
test
and
aam
jl
adc
push
adc
add
sbb
xor
cmp
xchg
test
iret
fstp
push
mov
mov
cmp
xor
xor
or
imul
aad
loopne
imul
icebp
pushf
popf
mov
cmp
push
xor
cmps
loop
mov
jecxz
(bad)
(bad)
dec
call
sbb
cmps
add
mov
add
mov
adc
je
or
inc
aaa
pop
sbb
xchg
or
retf
out
ret
fld
ja
xor
int
add
(bad)
mov
cmp
mov
xor
pop
cmp
sub
les
and
repz
xchg
mov
test
mov
push
mov
cld
adc
test
pop
inc
push
jge
xor
and
cmp
xor
ror
cmp
and
pop
sbb
mov
adc
sbb
shl
stos
fmul
enter
rol
inc
jnp
pop
daa
rol
xchg
sub
jecxz
pushf
mov
adc
jae
lods
sub
push
xlat
adc
in
das
adc
cwde
inc
sub
lahf
inc
xor
xchg
imul
xor
push
sub
and
xchg
dec
or
push
shl
mov
and
cmps
out
add
xor
pop
add
idiv
xor
mov
or
xchg
adc
ja
xor
or
(bad)
sbb
push
scas
add
push
imul
cmp
ss
popa
inc
push
aaa
pusha
test
es
sbb
xchg
out
test
enter
sbb
sbb
push
je
mov
ins
cmp
push
shl
sub
fisttp
mov
jb
inc
xchg
fimul
loope
dec
pop
ins
mov
popa
sbb
(bad)
rol
mov
mov
xchg
cld
mov
clc
ins
and
adc
cmp
add
add
adc
pop
jo
pop
or
dec
add
lock
jae
addr16
add
xchg
aaa
and
or
or
push
ins
push
xchg
(bad)
mov
sub
cmc
pop
xchg
cmp
fstp
or
pop
(bad)
push
mov
enter
inc
push
pusha
pop
popa
and
mov
cmp
jne
mov
and
cmp
adc
or
pop
pop
test
pop
sub
inc
sub
inc
add
rol
push
popa
das
pop
dec
cld
mov
jmp
ret
pusha
sub
in
loope
mov
push
inc
and
cmp
jne
sbb
sbb
pop
xor
sbb
test
add
jecxz
adc
mov
xchg
pusha
fst
push
mov
mov
adc
or
sub
enter
xor
xor
adc
or
enter
lea
push
fwait
cwde
inc
or
mov
mov
add
movs
or
mov
mov
or
inc
push
shl
xchg
xchg
dec
push
xor
jl
dec
repnz
jno
sub
cmp
xor
mov
xchg
add
lds
sub
xchg
loope
or
sbb
sbb
and
nop
sahf
mov
lods
(bad)
and
mov
pop
sbb
adc
xchg
xchg
sar
adc
lods
and
loope
inc
and
clc
test
mov
push
or
test
dec
pop
xlat
adc
arpl
dec
xchg
cld
enter
rcr
or
xor
cmp
cmp
push
popf
jo
je
mov
ret
inc
cmp
cvtdq2ps
inc
inc
and
stos
cld
cld
xchg
inc
mov
or
fsubr
adc
mov
xor
xchg
add
lahf
std
or
sbb
and
fmul
rol
inc
imul
in
xchg
mov
push
mov
loopne
enter
cmps
cdq
sub
sub
pusha
cmps
test
(bad)
rol
je
push
sub
add
xor
add
push
ja
and
sbb
xor
mov
push
adc
bound
inc
cmp
leave
int
ins
in
mov
cwde
xchg
outs
pop
clc
adc
xchg
sub
adc
inc
mov
cld
sub
into
or
dec
adc
fcmovne
daa
inc
in
sbb
shl
loop
adc
aas
or
sbb
cmp
xchg
lock
push
fild
test
mov
dec
sub
dec
pop
int3
aaa
jmp
mov
add
push
mov
into
test
jno
aaa
aas
(bad)
push
xchg
sub
outs
inc
inc
ret
and
es
sbb
(bad)
sar
push
or
ja
inc
jge
retf
adc
or
jmp
aaa
xor
xchg
inc
add
mov
aad
lahf
adc
mov
dec
or
add
sahf
pop
sti
cmp
jne
sbb
leave
daa
rcl
xchg
or
stc
std
jle
outs
xor
sbb
mov
push
or
sbb
pop
add
push
or
jecxz
inc
rol
in
push
mov
pop
mov
mov
retf
aaa
xor
push
add
mov
pop
push
pop
pop
inc
dec
adc
(bad)
jp
mov
pop
repnz
push
aam
and
loop
mov
cwde
inc
pop
imul
push
push
jns
(bad)
jle
adc
fsub
lock
fcmovnb
sbb
inc
mov
test
arpl
test
sub
adc
cmp
jg
dec
cmc
dec
dec
inc
mov
ret
sub
jg
sbb
sub
inc
push
test
ds
loope
mov
xchg
call
mov
pop
and
addr16
cmp
mov
push
inc
nop
jmp
sub
pop
enter
jmp
lods
inc
sub
lea
xchg
inc
jne
sub
ins
out
add
add
cmp
or
or
pusha
sub
pop
das
add
xor
inc
and
lds
inc
pop
mov
pop
test
in
and
dec
jl
inc
and
inc
stos
adc
ja
xchg
fisub
lods
mov
jge
cmps
adc
jecxz
cmp
dec
test
pop
std
clc
add
dec
sbb
call
mov
je
sbb
sbb
pop
test
mov
daa
test
mov
sbb
mov
fcmovnbe
xchg
xchg
pop
outs
adc
xor
jno
sbb
pop
pop
cmp
jae
jo
lock
leave
je
stos
adc
btr
ret
int
rcpps
jl
inc
adc
clc
inc
sub
jmp
popf
dec
add
add
enter
dec
test
fld
js
lea
jg
xor
ja
cli
pop
ja
pop
sbb
and
bt
jb
jbe
mov
test
fisubr
ret
idiv
out
ret
adc
jmp
inc
cmp
jne
inc
dec
jne
les
mov
xor
ror
cmp
mov
xchg
xor
ret
push
adc
ss
retf
mov
adc
dec
add
adc
fwait
add
fstp
inc
in
lock
scas
inc
add
test
fs
test
pop
inc
add
add
dec
ret
pop
lock
add
ins
add
data16
push
icebp
cli
test
pop
jb
add
ret
mov
sub
mov
sbb
or
push
or
mov
cmps
push
jns
mov
jb
jne
inc
aaa
and
shl
jbe
mov
add
or
and
pop
dec
in
(bad)
in
pop
fsub
outs
in
sub
and
add
nop
scas
mov
add
dec
out
aas
or
cmps
and
mov
sbb
aam
js
jb
imul
cmp
das
cs
dec
and
inc
pop
pusha
xor
pop
shr
sub
sub
pop
jns
ins
xor
or
and
mov
repnz
scas
push
jp
popf
popa
adc
int
popf
adc
lock
fdivr
(bad)
ror
ror
cmp
add
mov
cmp
adc
mov
icebp
lock
inc
loope
and
cmp
push
or
push
sub
xor
add
(bad)
(bad)
in
dec
push
fst
inc
cmp
dec
test
mov
movs
lock
push
inc
and
arpl
cld
inc
mov
mov
pop
mov
pop
inc
fiadd
adc
pop
push
push
mov
or
pop
js
add
cmps
pop
movs
dec
xchg
and
sub
adc
dec
call
and
and
or
pop
mov
mov
sbb
ja
mov
(bad)
dec
clc
ror
mov
cs
adc
jecxz
xchg
cmp
mov
sub
push
mov
inc
jb
es
pop
push
push
push
fdiv
rcr
dec
idiv
test
xchg
push
lds
dec
shl
push
mov
in
pushf
inc
jmp
jg
dec
(bad)
(bad)
loopne
mov
xor
jnp
fstp
sbb
cmp
lock
lock
cld
jmp
jl
in
push
in
sbb
les
and
jne
sar
enter
sbb
in
mov
sbb
out
cmp
xor
dec
jl
cmps
and
aaa
pop
test
cmc
(bad)
jns
cmp
iret
lds
and
scas
dec
addr16
adc
push
imul
dec
outs
sub
adc
enter
stos
or
and
pop
fcompp
xchg
xor
and
and
inc
jb
pcmpeqw
mov
neg
or
xchg
mov
dec
sbb
movs
cmps
ins
sub
and
add
push
int
dec
nop
mov
xor
mov
or
add
and
fiadd
inc
test
pop
and
mov
popf
dec
xor
lea
out
sbb
xor
adc
mov
push
inc
retf
in
dec
inc
out
pop
mov
cwde
pop
xor
stos
call
adc
or
cmp
sub
cmc
and
iret
adc
mov
add
xchg
jo
ret
mov
cmps
loopne
addr16
clc
aam
test
adc
in
or
xor
or
xor
rcl
add
ins
call
jb
dec
fisub
inc
or
mov
test
xor
and
test
jle
into
in
or
vprotd
mov
mov
sub
mov
dec
les
retf
or
sbb
lods
jecxz
mov
or
out
dec
stos
adc
pop
addr16
xor
cmp
or
(bad)
cli
cmp
pop
dec
jns
sub
adc
or
ss
retf
and
adc
dec
xlat
xor
add
into
adc
mov
ins
addr16
push
pop
(bad)
cmp
clc
add
push
jae
in
add
sub
lock
sub
lea
push
mov
inc
loopne
out
sub
add
jmp
push
aam
inc
push
pop
clc
xlat
in
lods
or
lea
cmp
xor
dec
push
jo
clc
add
push
push
bound
dec
push
add
cmp
push
push
lods
push
push
push
pop
ins
mov
push
jmp
loope
(bad)
loopne
call
movs
push
mov
fild
push
mov
push
and
clc
ins
mov
inc
test
push
mov
push
loopne
sub
push
lock
faddp
pop
push
enter
int
scas
jg
rcl
lea
imul
push
ds
dec
xor
push
loopne
imul
nop
or
mov
lods
icebp
dec
cld
xor
jbe
pop
out
or
mov
es
ds
adc
xor
out
in
fsub
daa
mov
push
cmp
mov
mov
mov
je
movs
pop
repnz
out
cmovge
cmp
out
cmp
das
or
je
jne
std
jmp
add
mov
sub
in
fidivr
push
and
cmp
jne
or
nop
pushf
mov
int
push
lea
jnp
leave
icebp
and
ror
push
gs
and
sub
xchg
cmp
xchg
imul
and
frstor
int3
js
sbb
test
cmp
inc
sub
pop
fnstsw
push
test
or
sbb
inc
mov
sub
ficom
inc
cli
sub
inc
or
sub
push
adc
mov
pop
or
jmp
test
xor
test
lock
cs
sar
inc
xchg
mov
push
mov
fidivr
add
inc
add
scas
cmp
(bad)
pushf
sbb
leave
pop
jl
fcom
into
mov
mov
addr16
mov
or
inc
and
xchg
imul
and
sub
sub
xchg
sub
adc
mov
xchg
test
sub
push
sbb
adc
les
sub
test
add
inc
and
les
fild
inc
adc
or
rol
arpl
and
sub
or
iret
imul
mov
aas
pop
cld
icebp
inc
test
pop
or
sbb
mov
and
push
pop
add
mov
pop
out
lock
adc
sti
sti
pop
sub
cmp
aas
mov
(bad)
jmp
jmp
xchg
mov
jae
jmp
add
lods
mov
sar
lock
xlat
or
mov
repz
shl
adc
xor
test
sbb
inc
repnz
addr16
icebp
push
pop
outs
adc
aas
loopne
in
fisttp
sbb
repnz
mov
(bad)
mov
mov
or
xor
into
cmps
push
scas
push
and
sbb
and
es
test
adc
das
int
je
clc
sub
add
sbb
lods
and
scas
add
pop
popf
or
and
push
or
or
xchg
and
ret
jns
push
lock
sbb
xor
sbb
(bad)
jge
rep
aad
adc
mov
xchg
imul
ror
scas
inc
jne
add
shr
out
sub
mov
ins
or
and
adc
dec
(bad)
jg
arpl
mov
add
dec
fcomip
iret
xchg
cmp
jne
mov
or
or
and
inc
dec
inc
jge
sbb
jle
in
and
dec
cmp
shl
daa
push
sbb
pusha
push
push
fstp
out
sbb
mov
shl
push
push
or
cwde
or
and
adc
or
rcl
cmp
stc
retf
or
enter
and
rcl
push
jge
lock
add
push
add
or
arpl
add
and
push
mov
or
sti
jno
lfs
push
pusha
add
or
mov
xchg
and
mov
sbb
and
ins
ret
jno
popf
fxch
add
add
mov
mov
pusha
xchg
(bad)
cmp
(bad)
movs
cmp
dec
mov
test
adc
clc
mov
mov
sbb
mov
dec
sahf
adc
hlt
jbe
mov
rcr
pop
jno
loop
cmps
sbb
mov
mov
mov
daa
das
inc
dec
cmps
scas
lock
push
cmp
mov
mov
cmps
dec
sbb
or
lahf
test
or
add
cmps
mov
pop
mov
test
mov
into
jne
sbb
mov
les
xor
call
arpl
jo
jg
xor
push
out
(bad)
jne
test
push
or
das
ror
adc
push
(bad)
push
add
xchg
(bad)
or
fdiv
inc
mov
enter
sub
sbb
sub
pop
outs
adc
in
inc
and
popf
sbb
xchg
or
int3
movs
dec
mov
cwde
adc
or
adc
(bad)
sbb
mov
sti
add
push
lock
sbb
or
pop
and
add
push
fst
adc
cmp
add
pop
xchg
push
or
imul
add
imul
stc
dec
les
inc
es
pop
sbb
mov
daa
sub
add
out
arpl
(bad)
and
xchg
mov
pop
push
pop
dec
sahf
sub
(bad)
(bad)
lahf
jne
adc
pusha
add
mov
dec
lods
fbld
sbb
mov
popf
inc
pop
mov
je
cmp
lods
aas
fs
mov
ffreep
xor
or
cmp
aam
xchg
(bad)
ficomp
inc
inc
fdiv
push
sbb
pop
mov
pop
shr
lods
adc
lds
dec
xor
push
loope
nop
fwait
sub
mov
push
(bad)
sbb
(bad)
repnz
sub
pop
fwait
push
fldcw
imul
icebp
push
push
dec
std
dec
mov
and
loope
daa
jns
lock
push
push
call
and
repz
cs
xlat
or
in
add
pop
pop
jae
js
jmp
ret
jns
in
lock
leave
loopne
and
in
(bad)
xor
inc
mov
xchg
in
and
or
sar
mov
add
call
aad
or
cmp
jb
jge
or
mov
pop
sub
ja
cmp
pop
enter
icebp
or
add
or
jmp
cmp
je
dec
popa
outs
cs
jmp
mov
add
add
sbb
(bad)
mov
dec
and
sub
cmps
out
push
clc
outs
or
mov
icebp
imul
or
push
add
test
sub
mov
xor
dec
or
ds
pop
xchg
cmps
std
movs
cmp
jge
push
sbb
data16
and
pop
js
mov
cmp
fwait
or
pop
pop
or
call
add
loopne
or
jge
xchg
cmp
loope
xor
je
push
jne
pop
mov
mov
inc
loope
lds
push
or
mov
pusha
lods
data16
pop
fnstcw
stos
xchg
mov
pop
aas
ror
adc
lds
jmp
in
iret
xor
jg
hlt
mov
cmp
jle
or
jo
cmp
mov
js
xchg
mov
retf
ins
inc
jne
sub
imul
(bad)
pop
add
mov
mov
or
jb
enter
or
and
sub
inc
push
daa
nop
add
add
sbb
pop
les
sbb
mov
int
adc
mov
(bad)
add
pushf
xor
adc
sub
ficom
call
add
jg
out
inc
jle
cwde
adc
pop
pop
or
cmp
loop
and
pop
ficomp
mov
lods
mov
ja
sbb
add
cmp
jae
push
sbb
jo
pop
test
mov
mov
pop
inc
popa
pop
pushf
addr16
mov
adc
push
(bad)
dec
adc
push
push
jb
jo
imul
outs
jmp
xchg
popf
test
lods
mov
push
ret
nop
push
add
inc
sbb
dec
js
add
inc
inc
xchg
ja
enter
or
popf
mov
jp
mov
mov
fidiv
lods
cs
ret
sbb
std
jmp
out
mov
lea
pop
pop
inc
sbb
cmp
mov
ja
in
rcl
es
or
paddd
mov
and
sbb
cs
jle
add
add
push
aaa
add
stos
push
mov
mov
imul
fdivr
add
fild
push
sbb
push
xor
add
jmp
xor
(bad)
(bad)
jmp
mov
mov
jmp
mov
enter
cmps
adc
sub
aam
xchg
mul
aaa
fisubr
sub
inc
sub
(bad)
imul
and
ins
sub
adc
ja
rcr
jbe
clc
jl
inc
sub
cmp
mov
xchg
out
add
sbb
sar
inc
nop
pop
inc
adc
pop
repnz
repnz
jg
or
ret
jle
sub
sbb
dec
sar
xchg
xor
push
popa
repz
adc
mov
gs
pop
pop
cmp
out
pop
ss
fstp
pop
sub
jbe
(bad)
shr
dec
and
pop
fwait
popa
cmps
xor
cli
aad
or
nop
(bad)
mov
pop
sub
inc
cmp
jl
or
or
or
aaa
and
sbb
clc
and
mov
xor
outs
push
and
stc
push
lea
and
mov
jae
nop
sub
mov
(bad)
and
pop
cmp
out
lock
cmp
fnstcw
lea
add
xchg
fst
inc
pusha
dec
ins
pop
mov
cmp
ret
mov
inc
repnz
imul
sub
and
cmp
and
and
xlat
dec
ins
mov
retf
aad
lock
add
pop
xchg
mov
and
pop
or
std
or
fs
add
jle
push
and
cmps
lea
adc
dec
pop
adc
add
daa
(bad)
mov
test
jnp
cmp
jg
adc
jl
out
aam
gs
mov
cwde
add
notrack
add
call
sbb
(bad)
dec
lods
cmps
jecxz
push
jae
mov
mov
sar
sub
repz
jo
cmc
pop
sbb
dec
adc
add
(bad)
sub
xchg
loopne
js
adc
pop
or
or
xchg
aaa
inc
inc
loopne
mov
fmul
(bad)
xchg
test
dec
hlt
aaa
test
jo
pop
adc
outs
inc
or
shl
fbld
test
dec
fisub
adc
push
int
inc
retf
call
mov
imul
mov
(bad)
stos
popf
and
mov
push
push
pop
xor
sbb
lods
in
sbb
and
jnp
and
outs
imul
ret
pop
sbb
add
pop
inc
add
fld
nop
and
fidiv
sub
jge
push
add
push
(bad)
or
push
add
pushf
fs
out
loope
cmp
adc
test
nop
ffree
scas
rol
dec
jo
cmc
adc
loop
dec
shl
xor
cmp
xor
and
popf
nop
aad
add
add
sub
loop
dec
sbb
mov
and
stos
fs
jno
xor
mov
rol
xor
leave
das
loopne
sahf
xor
movs
inc
dec
daa
dec
push
repnz
xchg
cmp
cmp
dec
repz
jo
outs
(bad)
(bad)
hlt
popa
push
pushf
and
int
mov
dec
sbb
aaa
dec
je
arpl
jge
xchg
xor
jne
cmp
loopne
and
jbe
out
imul
lods
dec
loope
icebp
mov
jmp
scas
and
xor
xor
mov
shr
pushw
inc
xchg
pop
in
xor
or
cmp
xor
fisttp
fnsave
jp
call
sbb
jne
jl
push
pusha
mov
sub
mov
or
add
xor
rcr
xor
xchg
push
jecxz
pop
jo
push
inc
stos
div
mov
cld
add
loope
ja
ja
mov
aas
push
mov
jle
sbb
(bad)
fst
retf
cmp
pop
sub
mov
cld
xchg
mov
jne
pop
xchg
adc
iret
dec
xchg
mov
jmp
jno
shl
xor
int
mov
jb
dec
pop
int3
or
dec
jle
push
mov
inc
or
or
bound
and
test
test
and
pop
cmp
mov
aaa
js
inc
lods
dec
loopne
mov
add
adc
outs
ins
jl
xchg
and
jmp
ror
movs
jns
hlt
mov
nop
int3
inc
nop
imul
fwait
lock
jns
jae
xor
push
inc
es
ss
loope
pop
hlt
icebp
dec
add
test
bound
adc
daa
fimul
and
ror
cmp
sbb
sub
push
jl
cwde
or
daa
mov
test
sar
inc
mov
sbb
mov
add
push
loopne
clc
xor
gs
cmps
mov
mov
cdq
pusha
xor
and
fwait
mov
test
sti
mov
cmp
inc
sbb
or
gs
cmp
shl
sub
pusha
jecxz
push
int3
ret
dec
sar
jle
test
cmps
add
add
mov
and
es
mov
fistp
push
pushf
mov
jecxz
pop
test
sbb
popf
cmp
sbb
push
adc
int3
push
int3
(bad)
jne
cdq
mov
pop
lods
add
shl
ret
or
shl
sbb
in
xchg
sahf
stos
cmp
imul
ret
or
and
pop
jne
iret
ret
pop
popw
push
pop
mov
dec
sbb
adc
add
or
ins
dec
sub
retf
sub
xor
pop
das
pop
pusha
sub
test
and
in
data16
sahf
xor
sub
push
cmp
js
adc
clc
test
in
fisttp
popa
or
and
adc
adc
xchg
shl
xor
cmp
in
and
ja
and
in
add
xor
lods
xrelease
adc
sbb
xor
inc
daa
xor
js
sbb
jns
imul
and
xor
jns
adc
add
jne
adc
fcomp
cmp
xor
push
not
mov
pop
jmp
fs
pop
ss
in
test
repz
arpl
cmp
jno
js
into
fisub
jo
pop
pushf
jne
gs
outs
pop
arpl
cmp
add
rcr
hlt
add
fwait
add
sbb
in
adc
push
repnz
pusha
sbb
push
xor
fimul
add
stc
mov
adc
xlat
sub
xor
pusha
cwde
fs
mov
mov
imul
sbb
je
dec
lds
stos
js
or
lods
jb
cmp
fld
push
jo
loop
and
mov
ins
or
add
adc
mov
cdq
mov
sar
and
test
pop
inc
add
fcmovnu
fwait
test
dec
leave
mov
in
jns
dec
mov
xlat
pop
out
outs
sbb
jmp
cmp
mov
test
jmp
xchg
adc
mov
mov
nop
xchg
in
jp
cld
push
jbe
sub
sbb
popa
sub
xor
xor
nop
daa
addr16
stc
pop
inc
xchg
out
jp
clc
cld
hlt
xchg
xor
xchg
je
sub
in
push
add
mov
int3
cmp
cmp
mov
xchg
adc
ins
psrld
sbb
adc
jns
nop
xchg
push
enter
add
movs
mov
fstp
add
add
mov
add
or
or
dec
add
mov
add
sub
ja
pop
and
adc
fstp
mov
stc
xchg
fld
mov
dec
pusha
cmp
add
jl
adc
and
(bad)
add
and
call
js
inc
sbb
push
dec
sub
call
aas
in
mov
sub
stc
add
test
das
sbb
and
adc
push
rcr
push
xchg
sub
iret
out
inc
xchg
xor
clc
sub
fstp
push
ss
fidivr
pop
ss
movsx
add
mov
push
call
bound
push
dec
cmps
daa
push
mov
icebp
cmp
ret
in
ins
test
cs
sqrtps
inc
out
movs
lock
sbb
push
aas
mov
add
mov
mov
jne
mov
and
das
test
mov
retf
iret
jno
jecxz
push
jg
mov
ds
inc
sbb
leave
adc
pop
and
add
pop
mov
jne
sbb
shl
push
inc
fwait
out
fsub
mov
or
daa
in
or
jb
mov
pop
sbb
(bad)
test
stos
shr
dec
aad
or
xchg
jge
mov
cwde
test
push
dec
inc
fimul
stc
enter
or
hlt
sbb
inc
xor
ret
or
xchg
push
aad
into
or
fdivr
sub
fild
or
cmp
jne
xor
rcl
lock
or
lods
xor
inc
imul
std
test
push
cld
std
jae
lods
in
push
push
xchg
std
sbb
ds
ror
pop
pop
jno
fs
dec
imul
dec
fwait
outs
fsub
sub
or
pop
sar
in
sbb
lock
jb
jmp
or
mov
scas
lock
inc
sub
mov
add
cmp
sbb
addr16
mov
dec
xor
cmp
sub
push
push
fidivr
jno
xor
icebp
iret
and
fs
adc
out
sub
cmp
cmp
pushf
(bad)
call
mov
jne
push
sbb
aad
add
cmps
or
in
xchg
push
into
mov
and
das
sbb
mov
sar
xor
xchg
add
cmp
(bad)
push
pop
and
adc
add
cmps
hlt
add
or
fild
xor
and
data16
or
jne
sbb
adc
aad
sub
mov
addr16
clc
jge
and
dec
clc
out
pushf
pusha
leave
test
sub
cs
xchg
call
ret
rol
loopne
add
hlt
pop
hlt
icebp
dec
lock
es
sub
xor
(bad)
jnp
es
or
aam
stos
stc
sub
adc
test
jge
fdiv
dec
rcr
push
xchg
push
mov
div
test
fidiv
inc
es
and
push
inc
sub
and
push
ret
cs
inc
lea
aad
jne
xor
daa
sbb
shl
bound
fwait
aaa
or
pop
cmps
in
ret
push
(bad)
fdivr
sbb
test
xchg
add
xchg
gs
fsub
fmul
arpl
in
add
or
outs
rol
iret
xchg
push
xor
shl
add
leave
and
jno
pop
loopne
inc
mov
into
sbb
inc
sbb
push
repz
mov
mov
adc
adc
mov
cld
dec
push
je
jb
shl
jnp
push
ficomp
mov
ficom
aas
in
pop
mov
aaa
adc
mov
xlat
dec
pushf
adc
(bad)
aaa
push
stos
mov
pusha
pop
ret
pop
js
loop
jmp
inc
pop
jge
mov
xchg
adc
call
int3
dec
add
or
in
adc
mov
and
(bad)
push
aam
rcr
fsub
adc
dec
imul
mov
fisttp
sahf
mov
cmp
jmp
fdiv
lods
cld
sub
mov
pop
jns
push
sub
cmp
adc
data16
add
sbb
pop
mov
fdiv
repnz
daa
fsubr
xor
int
retf
lar
and
cmps
mov
adc
mov
push
inc
lahf
push
les
and
in
cmp
imul
and
xchg
je
cmp
xor
adc
cmp
gs
and
dec
imul
loop
adc
fadd
or
cld
dec
pop
xchg
shl
inc
scas
mov
mov
test
xchg
(bad)
and
int3
mov
aaa
aad
jne
push
adc
fst
and
retf
cmps
or
push
fistp
push
dec
pusha
dec
je
in
push
or
loop
lock
sbb
sub
sub
dec
mov
cld
mov
mov
ins
daa
pop
or
pop
or
pop
hlt
mov
test
mov
add
sar
loope
push
jbe
popf
sbb
sbb
xor
push
inc
pop
xor
mov
sub
lods
sub
adc
lods
pop
sub
push
pushf
ds
stos
ret
jmp
add
push
lds
mov
sbb
je
scas
inc
pop
lock
(bad)
aam
cmp
sbb
cmp
mov
daa
adc
inc
mov
mov
sbb
leave
(bad)
(bad)
outs
or
rol
jmp
not
sub
and
shl
js
adc
mov
inc
pop
idiv
fldcw
xor
mov
(bad)
adc
cmp
cmp
pop
out
push
inc
jae
mov
adc
popf
push
int
inc
jo
test
ja
adc
adc
je
jmp
push
inc
jl
adc
loopne
popf
push
inc
adc
adc
sub
movs
xchg
cmp
mov
dec
les
(bad)
mov
call
ja
add
sub
sbb
mov
lods
lock
and
out
ret
cld
cs
sbb
or
pop
jmp
dec
fadd
and
imul
mov
pop
pop
or
leave
popa
mov
das
pusha
repz
xchg
nop
sub
mov
pop
xor
jno
push
mov
sub
imul
adc
js
or
xor
mov
cmps
mov
call
call
cmp
jnp
mov
mov
ins
ret
push
mov
leave
xchg
dec
add
call
(bad)
mov
out
les
xlat
addr16
jmp
das
pop
push
adc
mov
mov
and
add
cmp
push
mov
mov
mov
mov
adc
outs
and
adc
in
mov
mov
mov
cli
and
sub
push
cmps
xchg
pop
and
les
leave
dec
inc
nop
lock
ret
add
fsub
and
call
push
sub
sbb
jae
fldcw
mov
inc
(bad)
es
or
inc
inc
push
push
cli
xchg
mov
hlt
sub
call
jno
xchg
inc
daa
jl
pop
jmp
cwde
mov
jg
nop
ins
arpl
test
push
not
retf
ins
push
fimul
inc
xchg
dec
inc
clc
stc
inc
push
adc
jl
fxch
cmp
inc
call
call
in
(bad)
sub
pusha
mov
sbb
pop
cmps
sbb
push
cmp
cmove
(bad)
(bad)
leave
push
rcr
jae
fs
bound
sar
or
add
mov
add
push
xchg
das
jle
cmp
adc
sub
inc
cwde
dec
call
rol
(bad)
(bad)
js
mov
js
in
lds
(bad)
mov
pop
mov
pop
cld
pop
mov
xchg
cli
gs
mov
mov
fwait
xchg
add
mov
mov
jno
mulps
hlt
rol
push
xchg
jnp
hlt
jle
xlat
mov
enter
clc
mov
in
into
clc
mov
lea
xor
mov
xchg
or
mov
cs
daa
jg
sub
add
sub
adc
mov
adc
cmp
clc
stc
dec
call
int3
das
add
outs
or
dec
mov
sub
aas
sbb
xor
adc
pop
mov
ficom
popf
and
lods
mov
mov
push
int3
in
xchg
bound
js
cs
fidiv
xchg
dec
cli
jno
dec
mov
je
push
xor
mov
das
jecxz
ror
mov
icebp
lock
enter
(bad)
fild
inc
shr
cld
push
daa
repnz
imul
inc
dec
push
in
xchg
xchg
fcomp
xor
out
clc
xor
xor
jnp
ins
sub
pushf
ret
jmp
daa
pop
sub
aam
icebp
pop
jmp
push
mov
sbb
cmp
addr16
sub
push
sub
shr
mov
cmp
and
cmp
int
or
xchg
fs
inc
xor
arpl
sub
sub
push
test
mov
test
dec
mov
loope
and
mov
popf
test
shl
js
(bad)
mov
add
dec
arpl
ret
mov
bswap
dec
or
cs
jl
or
sbb
cmp
loopne
lea
test
or
cmp
and
pop
sub
jg
mov
push
add
xlat
ds
xor
push
and
mov
push
xchg
inc
jecxz
fnstsw
les
movs
dec
mov
(bad)
xchg
call
pusha
in
add
(bad)
dec
cs
inc
ss
(bad)
mov
pop
pop
cmps
sub
push
loope
in
int3
xchg
sub
mov
pop
xor
mov
push
push
xor
adc
in
mov
cmp
fisttp
jg
inc
nop
mov
inc
xchg
sbb
push
pop
stc
or
xchg
pop
sbb
adc
add
sbb
daa
cld
dec
loopne
adc
add
loopne
nop
pop
push
lahf
cmp
xchg
sub
mov
outs
mov
ss
inc
xchg
retf
mov
and
or
xchg
jg
mov
cmps
fcomp
movs
sbb
movs
es
pop
dec
sbb
dec
jmp
(bad)
push
dec
repnz
push
xchg
dec
xchg
(bad)
cmp
in
loopne
adc
pop
or
lods
adc
sbb
mov
xor
cwde
test
test
jnp
clc
or
rcr
inc
cdq
xlat
inc
and
imul
adc
add
(bad)
iret
add
arpl
and
cmp
dec
in
mov
les
hlt
sub
mov
jle
fisttp
sub
movs
outs
dec
and
adc
dec
movs
jne
push
ret
cmp
in
xor
(bad)
xor
jnp
aaa
mov
add
arpl
rol
adc
faddp
push
fcmovnb
or
sbb
and
mov
or
pop
cmp
xchg
mov
jnp
jae
xchg
xchg
daa
sbb
mov
inc
sub
xchg
sbb
lock
adc
adc
in
push
scas
mov
pushf
inc
mov
ror
or
pop
adc
xlat
add
jmp
and
mov
cwde
sub
cs
mov
jnp
shl
inc
(bad)
jmp
sbb
adc
sub
xchg
dec
inc
shl
adc
out
ss
and
xchg
lock
clc
(bad)
adc
jg
sbb
mov
inc
sbb
retf
sub
inc
or
jb
imul
add
sub
stos
mov
scas
adc
sub
dec
inc
sahf
or
or
mov
adc
inc
sbb
adc
xchg
xchg
mov
inc
retf
dec
jnp
stos
adc
test
jmp
test
aam
in
outs
aad
je
jp
dec
xlat
adc
lds
loopne
icebp
cmp
jl
add
out
mov
inc
aam
and
loope
add
cld
push
push
dec
mov
fild
setne
mov
pop
(bad)
inc
xor
pusha
repnz
mov
inc
sbb
dec
js
or
sub
rcr
jo
cmps
bound
movs
(bad)
push
fild
rol
push
mov
add
nop
pop
mov
push
arpl
inc
pop
fisttp
imul
fbstp
rcl
or
test
sti
sub
jne
cmp
jne
es
or
mov
sbb
hlt
dec
test
sbb
inc
mov
adc
je
push
movs
in
pop
adc
adc
and
ret
hlt
pop
dec
mov
or
cmc
inc
xor
call
std
and
in
sbb
dec
hlt
inc
loopne
push
arpl
inc
dec
jne
add
add
inc
add
add
outs
cs
jecxz
cmp
jb
and
and
cmp
xchg
sub
(bad)
jmp
sbb
push
gs
adc
test
mov
dec
inc
or
dec
inc
add
xor
dec
and
mov
aad
add
push
aam
pusha
leave
aas
lds
xor
jp
lock
jge
inc
cli
std
or
(bad)
jg
push
dec
cmp
(bad)
xlat
push
sbb
jbe
ins
fs
pop
aam
mov
or
loop
add
mov
jmp
or
data16
and
push
sub
mov
sub
cmp
sub
aas
xchg
arpl
or
lea
idiv
fild
sub
jmp
pop
js
dec
(bad)
adc
sub
(bad)
icebp
push
or
sbb
jg
cmp
rol
xchg
add
sar
or
push
push
xchg
jge
pop
outs
jge
jne
daa
inc
and
xor
(bad)
or
vmovsd
or
inc
and
rcl
cmp
or
ins
push
xchg
push
add
out
in
scas
aas
or
pop
sub
movs
shl
das
bound
sub
out
pop
xor
xchg
test
nop
loope
add
(bad)
or
or
test
jnp
les
jg
xchg
lods
enter
cmp
je
int
pushf
add
xchg
js
push
fisttp
test
sbb
daa
add
pop
mov
push
inc
sub
pop
mov
inc
xchg
inc
add
mov
outs
xor
scas
or
call
sar
call
ja
push
out
inc
push
test
(bad)
das
mov
inc
adc
ja
mov
xor
ja
fwait
(bad)
fcmove
cmps
pop
inc
push
sub
arpl
repz
mov
dec
dec
dec
pop
or
xchg
dec
cmp
ret
add
or
inc
je
dec
push
jbe
push
outs
out
sbb
xor
mov
mov
push
xchg
push
and
daa
add
or
lds
or
xor
lods
test
ror
cmp
jne
mov
ins
dec
pop
adc
ret
frstor
enter
push
sub
mov
cmp
aam
aad
mov
push
in
or
pop
push
mov
and
push
adc
cmp
xor
add
ret
movs
inc
(bad)
(bad)
inc
btc
add
xor
aam
add
adc
addr16
add
cmp
or
cmovb
cmc
(bad)
or
fisttp
fimul
iret
sub
xchg
add
add
xlat
pop
adc
scas
adc
fld
arpl
out
sti
add
add
xor
test
in
push
or
adc
and
jns
add
or
pop
sti
adc
jge
loope
std
arpl
dec
adc
push
adc
pusha
mov
add
retf
(bad)
inc
xchg
enter
iret
mov
cmp
sbb
mov
jmp
in
mov
retf
pop
jne
call
or
movs
xchg
pop
aam
or
mov
or
je
sub
xchg
xchg
dec
xchg
test
jne
inc
test
pop
mov
shl
mov
(bad)
fnstcw
mov
std
into
xchg
sbb
fmul
inc
(bad)
adc
clc
add
adc
jns
push
sbb
push
cwde
add
xor
pusha
push
loopne
mov
jne
sbb
pop
add
sub
and
sbb
push
(bad)
push
(bad)
pop
cmp
int
sbb
and
or
cdq
pusha
and
sbb
call
arpl
inc
push
sbb
faddp
popa
sahf
loopne
jnp
sub
cdq
mov
adc
(bad)
call
push
cmps
fsubr
sbb
xchg
jmp
mov
and
push
add
sbb
cdq
(bad)
mov
neg
inc
inc
or
outs
add
sahf
inc
sub
mov
sub
or
sbb
and
sub
and
adc
pop
mov
(bad)
daa
or
xchg
lea
cwde
sti
add
daa
mov
inc
dec
inc
test
add
xor
fild
and
icebp
or
push
rol
cli
add
clc
mov
adc
xor
pop
sbb
ret
aaa
mov
add
push
ror
test
mov
push
sbb
pop
push
ror
adc
add
push
mov
out
ror
mov
pop
or
add
(bad)
std
lods
movs
shl
add
pop
add
(bad)
sub
cld
pcmpeqw
xor
dec
mov
pop
jo
adc
or
sti
xor
add
xchg
call
movs
xchg
pop
lahf
sbb
xor
int
in
js
adc
pop
test
adc
stos
and
in
and
pop
jne
mov
inc
pop
inc
and
push
sub
mov
mov
(bad)
add
mov
inc
and
call
add
adc
cmp
push
cld
sahf
mov
ins
and
sub
dec
outs
cld
push
jo
ror
pop
sahf
xor
xor
or
and
and
ror
enter
adc
retf
dec
je
pop
stc
inc
cwde
popa
bound
fisubr
in
or
pop
xor
gs
nop
mov
mov
pusha
pop
or
and
gs
stos
and
inc
lods
aaa
pop
pop
lods
cmps
push
add
push
popa
and
retf
mov
fwait
push
xchg
inc
shr
add
or
shl
pmulhuw
inc
mov
xor
leave
inc
xor
aam
leave
and
lods
mov
enter
mov
or
jo
and
je
or
enter
js
xor
and
jnp
enter
jge
enter
jg
popa
and
or
gs
enter
imul
and
and
and
push
or
push
push
push
pop
or
enter
pop
xor
and
and
and
inc
or
inc
inc
inc
dec
or
enter
dec
xor
and
and
and
xor
xchg
and
xor
leave
add
lock
cld
add
cmps
ins
outs
and
jne
push
neg
call
adc
dec
push
inc
xchg
inc
mov
cld
fiadd
or
je
imul
movs
fst
xor
data16
adc
adc
test
call
or
push
or
push
add
dec
add
or
je
dec
mov
push
icebp
imul
cmp
ja
mov
xor
data16
leave
mov
dec
je
sti
dec
mov
arpl
adc
adc
bound
add
imul
and
cmc
inc
cwde
ins
or
jae
nop
das
mov
daa
push
outs
int
lock
lods
pop
jo
outs
sbb
cmovns
jbe
inc
popa
jae
add
sbb
or
cmp
jge
or
add
(bad)
not
and
sbb
(bad)
iret
jbe
int3
adc
ins
inc
ins
cmp
sti
fisubr
push
push
je
iret
ins
dec
outs
jo
je
pop
shl
retf
inc
jns
sbb
or
(bad)
in
addr16
and
add
cdq
lea
pop
xor
or
gs
ss
adc
adc
pop
js
pop
ret
adc
mov
inc
jb
imul
pop
shl
ss
add
dec
jge
jp
lods
ja
shl
or
push
add
sub
pop
arpl
imul
sti
sbb
outs
jae
es
sbb
mov
mov
push
sbb
lar
or
enter
mov
pusha
mov
sbb
pop
sub
fadd
or
xor
in
mov
dec
and
mov
cmp
and
mov
cmps
inc
mov
ins
sbb
imul
ins
mov
js
pushf
pop
mov
pop
shl
and
dec
mov
push
sbb
mov
loopne
sub
and
retf
add
icebp
into
pop
adc
pop
rcl
adc
pop
push
add
pop
mov
scas
(bad)
cmp
inc
xor
jmp
icebp
xlat
bound
retf
test
push
push
dec
gs
pop
jmp
xchg
sbb
dec
inc
pusha
clc
dec
dec
popa
add
or
add
cmp
mov
add
push
cdq
xchg
mov
in
jge
push
outs
scas
add
sub
out
pop
add
mov
sbb
push
cmp
int3
push
add
mov
sahf
pop
sbb
mov
add
test
jo
sbb
into
xor
add
shl
sub
outs
lods
ror
test
iret
add
movs
sbb
sub
xor
add
enter
push
inc
je
addr16
out
add
sbb
mov
jmp
iret
les
push
cmp
nop
sahf
pop
sbb
mov
add
cld
rol
sar
loope
dec
add
sar
and
add
lods
aad
ins
sub
pop
les
inc
push
shl
shr
fadd
out
or
fmul
push
inc
popa
sbb
pop
mov
jne
sbb
push
movs
mov
gs
(bad)
imul
and
push
aas
jnp
inc
jnp
int3
push
or
pop
fst
rcr
mov
mov
rcl
add
sbb
sub
(bad)
push
cmp
mov
and
sbb
enter
(bad)
fdiv
mov
cdq
push
mov
dec
jmp
es
ror
(bad)
cs
div
mov
in
xor
lods
mov
sub
and
out
jo
in
sbb
psubusb
push
and
cli
out
pop
movs
btr
lods
loope
lock
lock
sbb
in
out
imul
mov
pop
adc
push
mov
inc
pop
nop
or
and
push
mov
sbb
adc
nop
mov
pop
lock
push
xchg
gs
ins
popa
addr16
js
and
call
inc
mov
pop
add
test
in
mov
fcom
jae
mov
in
adc
(bad)
sub
in
popf
mov
inc
dec
xor
psubsb
sub
mov
inc
jmp
or
ins
adc
cmps
js
adc
adc
punpckhbw
mov
call
pushw
enter
cwde
and
(bad)
xchg
push
xor
pop
xchg
stos
lock
in
popw
sbb
pop
xor
sar
sub
add
push
add
or
mov
mov
pop
add
xor
xor
cmp
inc
fs
xlat
pushf
pop
inc
cld
pop
inc
pop
xchg
sbb
xlat
jl
inc
out
fcmove
and
sbb
push
sbb
push
mov
pop
xchg
jo
sub
pop
sbb
xchg
sbb
test
cmp
mov
pop
sbb
mov
daa
or
jno
inc
dec
popa
outs
nop
loopne
fild
pop
mov
mov
xor
rol
xor
inc
dec
jne
xchg
or
mov
and
jne
add
pop
sub
test
out
das
or
icebp
jae
push
lahf
push
movzx
inc
cmp
adc
jl
inc
adc
push
xchg
or
je
sbb
or
(bad)
test
loop
es
ins
fild
into
inc
cmp
xor
imul
add
or
(bad)
push
dec
rcr
ror
sub
outs
adc
or
cmp
cwde
dec
(bad)
imul
das
mov
dec
(bad)
adc
lahf
dec
lock
jo
and
test
pop
repz
add
inc
mov
or
cwde
lods
in
sub
jo
cmp
mov
add
add
push
push
inc
add
dec
movs
movs
mov
jnp
fidiv
movs
enter
lock
je
js
xlat
cmp
mov
lods
xor
das
add
cmp
rol
ret
inc
push
jle
add
and
mov
cmps
int
rol
dec
(bad)
adc
or
or
cmp
jp
fld
mov
and
sbb
in
sub
mov
push
sub
push
cdq
pop
(bad)
sbb
dec
or
lds
(bad)
cmp
lods
outs
neg
mov
mov
mov
push
xor
xor
pop
cld
lods
ins
in
adc
push
cmps
or
loope
or
popa
sub
sbb
push
add
or
cld
mov
outs
mov
push
inc
xor
in
dec
ins
imul
jbe
add
adc
add
ins
mov
ins
pop
sbb
dec
in
aaa
addr16
imul
pop
mov
ins
and
sbb
imul
or
daa
in
inc
jne
push
jno
popa
mov
push
pop
or
loopne
les
jmp
fild
push
imul
sbb
xchg
mov
inc
dec
add
cdq
sub
mov
push
mov
pop
pop
in
jno
cmovae
sti
pusha
imul
jo
pop
imul
fcomp
mov
inc
loopne
mov
addr16
das
inc
outs
sub
inc
push
xchg
dec
sbb
call
or
add
and
pop
cmp
sub
xlat
sti
daa
or
mov
imul
sbb
cmp
push
or
inc
pop
pusha
add
push
xchg
sub
mulps
sbb
mov
jg
sbb
aaa
push
rcl
popa
adc
pop
or
outs
inc
cmp
adc
imul
in
(bad)
push
outs
jne
or
xchg
mov
bswap
inc
inc
dec
mov
cs
cmp
aas
push
arpl
add
inc
xor
rol
xchg
cmp
add
es
movs
das
or
mov
or
rcr
push
pop
cwde
ret
push
mov
mov
out
pop
sub
ret
xor
inc
outs
jg
xor
rcl
(bad)
pop
or
pop
pop
test
dec
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
inc
inc
push
dec
push
mov
inc
imul
iret
les
xchg
inc
inc
push
adc
fild
dec
dec
push
mov
shl
adc
popa
out
movs
pop
enter
xor
xor
adc
inc
xchg
lahf
fcmovu
dec
inc
and
inc
xor
inc
dec
push
jo
pop
not
dec
sub
mov
lea
(bad)
cs
in
mov
dec
push
mov
push
push
push
test
repnz
js
dec
pop
adc
push
push
daa
stc
push
push
dec
push
inc
scas
dec
inc
dec
push
sbb
or
nop
jl
mov
push
mov
mov
jo
pop
dec
cmp
xchg
mov
pop
or
jl
add
push
add
or
fsubrp
or
sbb
add
add
movs
push
or
mov
lea
clc
xchg
jp
cmp
sbb
and
cld
push
push
sbb
pop
movs
dec
push
adc
and
and
jnp
or
or
jmp
add
pop
cmps
push
bound
rcl
daa
jl
mov
or
or
cmp
es
mov
inc
ins
xchg
mov
mov
pushf
pop
push
add
and
dec
lods
rol
loope
mov
and
inc
and
mov
loopne
enter
test
das
call
sbb
xor
push
rcr
and
mov
into
push
div
mov
or
mov
nop
fst
popf
leave
cmp
or
cmp
pop
lea
push
cmp
ins
cmp
sbb
cdq
add
imul
in
and
jae
jmp
adc
cmp
pop
push
cmp
pushf
mov
mov
xor
je
pop
mov
add
push
sbb
aad
xchg
ror
mov
xor
mov
dec
(bad)
xchg
dec
out
test
cmp
ficom
enter
call
sbb
mov
ds
mov
stos
xor
push
mov
mov
or
push
pop
cld
fisttp
lea
inc
rcl
mov
es
or
inc
push
cmp
test
jno
call
inc
fiadd
pop
fcomp
mov
mov
aas
in
sub
jmp
inc
fild
or
or
cmps
loope
pop
shr
push
or
mov
xor
or
inc
pop
out
inc
ret
call
and
loope
mov
xlat
repz
inc
jmp
rcr
mov
sbb
lods
adc
mov
sbb
push
mov
nop
push
adc
push
inc
int3
hlt
popa
cmp
mov
lea
dec
aam
mov
(bad)
loope
cmps
loopne
xlat
mov
shl
cmp
push
cmps
test
inc
(bad)
or
mov
inc
cmp
add
gs
pop
xor
push
das
fcomip
fiadd
pop
xor
push
xor
ret
fmul
shr
sub
sub
mov
aam
xor
outs
inc
sbb
cli
ss
xchg
pop
leave
xchg
sbb
js
ror
pushf
test
cmovns
mov
enter
pop
aaa
fcom
pushf
mov
enter
fwait
int
inc
push
sbb
leave
sub
mov
lods
add
mov
or
or
es
in
pop
enter
sbb
sbb
pop
lock
pop
in
mov
enter
push
push
fucomip
push
leave
sub
mov
ror
jmp
or
pop
movzx
movzx
lods
shl
in
or
dec
ds
add
into
fadd
das
mov
push
cmp
adc
sbb
add
cmp
mov
inc
pop
pop
sbb
cmp
aam
pop
or
mov
mov
push
imul
add
shl
and
inc
inc
jno
rcl
push
jb
rcl
ret
js
and
repnz
aas
int
loopne
loope
jns
rcl
mov
fmul
inc
rol
shr
dec
dec
and
add
dec
or
xor
inc
cli
pop
repnz
stos
mov
inc
mov
fistp
nop
or
in
aas
add
ins
das
cmp
adc
inc
jle
cmc
xchg
xor
jmp
mov
std
sub
jmp
je
pop
adc
scas
imul
gs
call
or
loopne
imul
adc
or
cld
and
in
mov
(bad)
nop
xchg
push
pushf
pop
leave
inc
mov
fild
mov
mov
jecxz
jle
mov
fcomp
daa
inc
sbb
dec
sahf
and
jae
mov
pop
adc
fiadd
and
adc
(bad)
lods
xchg
mov
or
mov
outs
(bad)
outs
fdiv
inc
fs
movups
add
cmp
rcl
jge
pop
jge
add
loope
hlt
push
sbb
pusha
sbb
shl
call
mov
mov
push
mov
sub
or
sub
or
sbb
data16
xor
in
ja
xchg
push
sub
push
pop
fs
sub
add
test
or
or
add
jb
in
mul
(bad)
data16
ja
mov
aam
add
ins
scas
rcr
sar
cwde
enter
cmp
rol
ins
sbb
movs
jo
dec
sbb
ror
ds
adc
push
arpl
fmul
shl
in
jno
jbe
add
stos
(bad)
jge
aad
ins
jge
lods
cmp
or
fadd
sub
inc
push
sbb
mov
mov
xchg
mov
push
mov
pop
addr16
cmps
add
sbb
pop
test
mov
lock
adc
adc
pop
repnz
in
(bad)
imul
popf
inc
mov
jne
shr
pop
rcl
fwait
mov
push
stos
lods
xchg
aaa
(bad)
cmp
xchg
daa
adc
psubusw
js
jnp
push
push
add
fcom
pop
sub
jg
rcr
pusha
popa
mov
or
shl
dec
dec
and
adc
cmps
jbe
inc
add
xchg
pop
repnz
in
pop
push
clc
(bad)
push
sub
adc
mov
call
and
jo
sub
lds
inc
xlat
popa
cdq
inc
and
lods
pop
sbb
pushf
mov
add
mov
iret
add
or
sub
pop
mov
jae
dec
mov
(bad)
push
shl
inc
or
je
mov
mov
pushf
push
aad
mov
jne
add
inc
(bad)
out
xchg
cmp
push
xchg
add
dec
dec
(bad)
jecxz
test
(bad)
aam
sbb
loope
(bad)
sub
add
arpl
(bad)
and
or
js
cmc
ins
pop
(bad)
xlat
xabort
pop
dec
loope
and
mov
not
and
mov
outs
cli
cmp
je
inc
and
mov
mov
and
inc
ss
dec
fld
pop
cmp
add
fiadd
or
or
mov
loopne
ins
pop
xor
call
push
test
sub
or
dec
dec
adc
cmp
ror
mov
out
sbb
pop
mov
rcr
cmp
sbb
rol
and
adc
and
and
mov
inc
movs
and
add
not
je
xor
movs
in
push
test
ja
add
or
mov
pushf
bnd
into
ins
scas
cmp
adc
adc
ins
dec
mov
mov
fcomp
inc
ds
std
cmp
inc
rcr
inc
sub
rcl
dec
inc
and
jo
inc
push
inc
or
push
jb
dec
adc
das
lea
popa
inc
scas
movs
push
nop
xchg
aaa
dec
retf
cmp
adc
add
inc
xchg
popa
fisttp
test
(bad)
daa
call
fnstcw
icebp
rcl
call
push
jo
fmul
push
push
sub
sbb
sub
sbb
and
jne
add
pop
sar
mov
dec
(bad)
in
and
sub
inc
dec
test
mov
push
bound
pop
or
or
sar
push
cmp
aam
jle
push
out
ins
lds
ja
push
je
or
push
nop
mov
ret
(bad)
adc
add
cmp
pushf
dec
neg
push
adc
or
add
imul
je
or
mov
(bad)
lods
enter
ror
jge
adc
xor
not
and
push
pop
sar
adc
fcomp
(bad)
xor
sub
mov
or
iret
fild
sbb
sub
test
ss
popa
xchg
sub
cmp
js
test
nop
or
ss
inc
frstor
hlt
popa
mov
call
ins
mov
sub
xchg
xchg
cmp
(bad)
push
and
jo
rcr
es
dec
add
pop
(bad)
adc
lock
fbstp
mov
push
push
jge
mov
neg
mov
clc
cmps
neg
jnp
jl
and
fcomp
push
sub
dec
jmp
jns
shl
mov
ror
out
mov
cmp
mov
fmul
sub
inc
inc
das
inc
call
push
js
add
push
or
xchg
pop
pop
pop
stos
dec
out
shl
rcl
loopne
pop
repnz
je
pop
call
adc
cmp
pop
rcl
add
mov
or
mov
push
add
push
mov
mov
or
add
mov
dec
iret
faddp
inc
add
and
inc
and
adc
cmp
aas
dec
test
es
sahf
pop
xchg
in
fwait
mov
push
mov
pop
pop
sbb
inc
dec
jne
jmp
jge
adc
adc
adc
sbb
push
inc
add
cmp
pop
cmps
adc
adc
cmp
add
cmp
dec
js
(bad)
mov
and
enter
mov
dec
jns
jmp
inc
and
(bad)
mov
sub
shl
mov
mov
jmp
sub
mov
add
cli
jne
cld
add
mov
enter
mov
xor
pusha
enter
adc
or
push
jp
push
mov
mov
ret
shl
add
jne
aas
sbb
add
xchg
mov
lea
gs
pop
push
cmp
imul
daa
jmp
add
fsub
addr16
and
push
shl
(bad)
icebp
cmps
(bad)
xor
clc
das
push
pop
inc
pop
sbb
popa
adc
add
in
xchg
cwde
pop
loop
and
repnz
and
and
aaa
xor
dec
mov
and
or
cmps
inc
popa
loop
cs
or
pop
pop
cld
arpl
adc
push
add
sar
adc
cmp
dec
clc
cwde
fisttp
daa
test
aaa
daa
push
fs
imul
aas
or
in
ins
jg
dec
mov
sub
and
retf
sbb
add
repnz
pushf
movups
add
shl
mov
add
fidiv
fsub
sub
xchg
sbb
mov
je
push
push
in
sub
cmp
ss
push
mov
add
ret
psrad
jns
in
shr
push
push
push
pop
leave
mov
fiadd
int
test
ss
mov
push
xor
nop
and
in
cld
movs
inc
jge
add
mov
imul
push
push
add
(bad)
movs
mov
ret
hlt
shl
mov
dec
dec
push
(bad)
cmp
jmp
cmp
jo
out
fld
pop
or
(bad)
shl
push
sub
sbb
and
adc
loopne
push
inc
push
and
ins
pop
cld
push
push
lock
enter
repnz
cdq
add
imul
and
pop
in
pop
push
popa
(bad)
sti
mov
movs
add
jne
jmp
aaa
or
add
popa
xchg
pop
adc
adc
pop
and
push
push
movzx
sbb
cmc
pop
cmp
dec
sar
sahf
test
adc
clc
jg
test
int
jnp
jle
cmp
jl
mov
pop
jp
cmc
enter
cmp
jle
mov
adc
loope
add
cmp
push
pop
outs
in
inc
mov
mov
mov
repz
fs
out
and
sbb
sar
das
and
pop
mov
or
cmp
adc
push
add
fsubr
pop
pcmpgtb
movs
out
fiadd
xchg
sbb
imul
push
test
in
or
sbb
add
lods
out
aas
inc
adc
add
aad
xchg
pop
test
mov
mov
in
out
xchg
inc
jmp
jg
or
jl
push
cmp
ja
lea
lea
mov
mov
jae
xor
mov
cmovb
add
sub
adc
and
aam
xchg
call
ss
repnz
add
sub
sub
outs
inc
add
adc
mov
pop
fiadd
xchg
test
pop
cwde
dec
sub
ror
push
jns
imul
(bad)
xchg
ja
xchg
pop
cwde
adc
(bad)
loope
mov
ins
mov
push
mov
loope
xor
dec
call
xor
jo
sar
rol
repz
push
mov
mov
dec
sbb
sbb
pop
mov
sbb
or
lods
pop
mov
addr16
aaa
dec
ja
cmp
inc
or
div
or
jmp
call
or
or
lods
dec
sbb
push
xchg
ds
lock
push
js
sbb
jmp
adc
cmp
sub
sub
cmps
jo
cld
jae
je
or
sbb
jmp
mov
add
mov
mov
and
(bad)
mov
push
js
cmc
idiv
lock
jmp
aad
in
xlat
mov
push
mov
jmp
adc
popa
std
adc
adc
ins
test
in
sbb
or
inc
and
jmp
xchg
loopne
fstp
rcl
sub
lock
or
not
push
xor
dec
sbb
ins
push
adc
fadd
cs
jmp
imul
add
vmovups
or
sub
adc
push
test
daa
xor
push
aad
add
movs
xlat
inc
jecxz
jo
xor
loopne
cmps
mov
mov
hlt
cmps
mov
xor
push
(bad)
pop
rol
pop
aad
shl
jns
fsub
jmp
mov
movs
clc
clc
hlt
hlt
pusha
test
(bad)
mov
daa
jg
adc
adc
call
xchg
ja
ret
xor
out
(bad)
and
adc
pop
clc
jle
mov
add
pop
adc
ja
adc
in
hlt
int3
das
add
in
imul
cmp
call
stos
adc
hlt
loopne
xchg
sbb
fdivr
retf
sbb
shl
shl
and
int3
out
sub
aaa
mov
repnz
rol
cmps
in
inc
fmul
fidivr
and
push
and
add
add
out
mov
or
lods
data16
cwde
jge
pop
push
ins
mov
lods
cmps
mov
mov
push
outs
jg
mov
push
jne
add
push
(bad)
dec
hlt
test
sbb
in
in
jae
dec
xchg
shl
retf
hlt
loopne
fcom
clc
call
jo
sbb
inc
call
inc
mov
jmp
mov
adc
add
add
jg
sbb
aaa
pop
mov
outs
xchg
frstor
pop
in
sbb
rol
call
xchg
mov
das
pop
les
into
xor
nop
(bad)
jbe
mov
adc
mov
push
loop
xor
in
pop
daa
mov
enter
xchg
ret
or
out
adc
xchg
shl
push
and
and
je
rcr
and
test
pop
adc
int3
push
mov
push
pxor
clc
pop
ins
push
add
inc
dec
hlt
and
cs
repnz
hlt
ror
jmp
rcl
push
add
addr16
xor
(bad)
cmp
pop
jne
cmp
lea
sub
add
dec
stc
out
movs
inc
or
mov
mov
ret
inc
jb
dec
ja
out
push
add
in
ja
lock
push
mov
push
pop
adc
add
mov
add
out
aam
loop
cmps
pop
ret
push
cmp
push
jo
adc
inc
(bad)
add
cmp
ss
ja
mov
shl
fcmovb
ins
cdq
pop
je
add
sbb
es
adc
repnz
cs
ins
and
mov
or
mov
inc
xor
stos
xlat
mov
or
icebp
adc
add
(bad)
jl
xchg
pop
mov
mov
(bad)
sub
xor
sub
xor
js
ret
pop
test
dec
sbb
jne
dec
imul
dec
in
sub
movs
adc
imul
leave
lds
gs
lock
popf
xor
mov
xchg
mov
adc
dec
sti
lea
leave
(bad)
jns
popa
cmp
or
es
pop
sub
test
dec
out
mov
add
adc
mov
add
cs
pop
inc
lds
call
sbb
or
test
sub
push
test
ins
sbb
fild
das
or
mov
xchg
fcomp
repnz
add
ss
jg
dec
sbb
pop
ror
mov
shl
and
imul
loope
aaa
test
aam
or
dec
jo
or
cmps
int
cs
pop
jmp
test
pop
dec
adc
int
mov
xchg
clc
pusha
pop
rcr
push
xchg
and
loope
cmp
ss
jb
repz
inc
cs
stc
iret
in
add
ret
add
jne
and
pusha
pop
or
ja
or
pop
mov
lahf
imul
inc
fs
fs
dec
std
push
pusha
lea
es
add
push
pop
sbb
adc
push
mov
or
fild
adc
iret
stos
movs
int
xchg
sbb
addr16
or
sahf
mov
jns
or
xchg
add
mov
stc
jp
mov
sub
fstp
push
xor
mov
sahf
js
ins
stos
pop
cmc
test
movs
ret
inc
pop
sbb
cmc
lea
imul
cmps
xlat
(bad)
not
add
inc
cld
jp
add
mov
add
mov
sub
pop
test
int3
mov
mov
add
or
call
adc
pop
or
mov
test
lds
dec
adc
push
push
mov
push
sbb
sbb
cmp
jne
sub
or
add
vpshrdq
dec
pop
mul
or
mov
adc
add
cmp
jge
xchg
sbb
call
stos
in
add
(bad)
sub
cmp
or
mov
or
outs
or
add
test
cmp
(bad)
(bad)
inc
dec
call
sbb
add
loopne
add
cdq
sbb
pop
add
push
mov
and
ins
test
and
sbb
mov
rcl
fistp
out
push
fmul
mov
add
adc
sub
and
jbe
lea
lods
ss
fistp
aad
xor
mov
sbb
out
sub
push
and
rol
dec
test
cmps
hlt
xchg
adc
pusha
stos
add
xchg
in
nop
add
or
mov
je
scas
fwait
dec
pop
rcl
push
inc
cmp
and
xchg
cmp
out
sbb
pop
mov
mov
mov
cmp
je
mov
pop
daa
sub
shl
push
adc
imul
add
or
push
mov
jne
popa
xchg
aam
rol
add
cmp
outs
in
xor
cmp
jne
mov
xor
test
xchg
stos
inc
sub
aad
mov
add
lock
imul
and
sti
mov
add
mov
xor
imul
jg
and
cmp
pop
shr
or
out
or
jo
(bad)
out
push
sbb
add
sbb
test
adc
mov
ret
jge
mov
sar
pop
pusha
pop
push
dec
in
xor
mov
jo
sar
lea
aas
adc
jmp
push
xchg
cmp
push
enter
pop
dec
repnz
xor
push
push
pop
loopne
leave
and
mov
push
sbb
add
adc
pusha
xor
loopne
outs
mov
cmps
jge
push
mov
or
call
push
inc
imul
sti
loopne
ret
mov
adc
repnz
(bad)
shl
loope
les
cdq
out
rol
or
sub
dec
or
call
pusha
jp
jg
mov
mov
or
sahf
and
cmp
add
movs
mov
push
push
sub
push
xchg
shl
(bad)
or
and
and
pop
mov
out
push
sbb
mov
rol
mov
or
arpl
adc
enter
cmp
scas
push
iret
mov
popa
cwde
mov
fs
xor
cmp
pop
pop
jbe
sbb
mov
hlt
mov
(bad)
movs
(bad)
loopne
sub
pop
test
or
sbb
mov
or
add
push
psubsb
inc
mov
push
inc
sub
cmps
lock
ins
mov
mov
and
test
sbb
sub
in
popa
cmps
lods
popa
popa
jle
or
lea
movs
ret
rcl
fcom
dec
jg
dec
addr16
loopne
inc
and
ins
push
bound
mov
jg
ja
clc
jecxz
cmp
rcr
ins
jge
mov
sub
adc
mov
cvttps2pi
and
sub
in
gs
inc
loop
mov
inc
(bad)
ficomp
ss
add
sub
js
or
mov
pushf
gs
inc
and
xor
cmp
js
sub
shl
test
daa
jns
les
clc
ins
xlat
jmp
or
fs
mov
add
and
add
push
inc
or
or
adc
fild
movs
loop
pop
or
push
mov
sbb
jge
mov
push
imul
stos
add
dec
movs
shr
dec
xchg
clc
mov
mov
ds
adc
or
inc
sahf
xchg
mov
inc
ss
add
adc
mov
ret
ror
or
xchg
dec
repz
mov
push
daa
inc
add
or
ins
pop
mov
fsub
aas
lods
and
adc
imul
or
loopne
cdq
sub
or
das
xor
sbb
lea
push
scas
push
push
sbb
pop
outs
or
add
adc
int3
add
ret
rcl
sbb
ret
push
inc
adc
or
and
sbb
and
and
lods
rcr
push
sbb
loopne
jmp
sub
dec
sub
scas
rol
xchg
imul
and
out
lds
push
sbb
pop
mov
pop
xor
repz
dec
pop
dec
sbb
mov
adc
push
mov
nop
pop
fcmovnb
mov
mov
out
sub
lods
or
hlt
dec
add
inc
cmp
and
shr
sub
push
add
inc
sbb
jb
or
call
movs
sub
dec
inc
or
inc
leave
fstp
adc
pop
and
rol
mov
pop
int
(bad)
fcomp
nop
mov
mov
sbb
inc
(bad)
and
ret
nop
xor
imul
jmp
inc
adc
jo
out
dec
sbb
inc
mov
sub
add
jo
es
ja
jnp
xor
jbe
sub
cmp
lock
inc
test
adc
mov
mov
xchg
imul
push
and
call
xchg
jo
add
or
loop
(bad)
jnp
add
clc
lods
cmc
dec
int3
sbb
sub
mov
call
cli
dec
es
inc
xor
xlat
es
xor
shl
or
cmp
lock
dec
dec
mov
xor
ins
jl
or
push
adc
pop
and
sbb
xchg
jmp
sbb
aaa
push
mov
nop
pop
mov
adc
(bad)
push
aaa
sbb
lea
out
add
pop
test
push
mov
ss
in
mov
sub
ja
dec
and
push
sbb
inc
pop
(bad)
sbb
ret
int3
shl
mov
xchg
jge
(bad)
movs
cmp
adc
mov
push
jbe
jae
sbb
pop
mov
mov
or
jge
and
das
jnp
jmp
adc
push
ja
jae
add
test
repnz
mov
mov
push
ret
pop
mov
outs
add
xchg
inc
ins
mov
or
or
mov
pop
mov
cmp
xchg
dec
(bad)
fcomp
pop
sub
and
iret
mov
and
mov
mov
push
js
dec
or
xor
fidivr
es
or
push
push
and
sbb
jnp
jo
inc
adc
js
mov
pop
xor
add
and
add
xchg
cmp
mov
pop
sbb
xchg
adc
mov
sbb
out
call
(bad)
leave
shr
or
retf
and
inc
sub
lea
movs
mov
sbb
push
push
adc
(bad)
leave
adc
cdq
shr
cmps
pop
push
sub
jmp
enter
push
mov
call
adc
adc
lock
into
mov
pop
aas
lods
es
push
mov
ret
jge
xor
mov
mov
jmp
add
mov
retf
mov
out
and
sub
rcr
clc
adc
inc
inc
mov
jecxz
mov
jg
inc
and
js
imul
das
jp
lods
mov
sub
lea
mov
mov
outs
test
or
fwait
lock
mov
lea
(bad)
mov
pop
jbe
lods
jo
dec
sub
mov
rcl
and
fmulp
adc
and
pop
xor
rcl
pusha
or
adc
popa
inc
fs
lea
and
(bad)
in
or
push
jecxz
xor
sub
mov
fidivr
add
pop
mov
sbb
outs
push
lods
or
(bad)
push
push
(bad)
lahf
ret
fsub
xchg
cmp
aas
sahf
(bad)
ffreep
fild
add
dec
lods
loopne
loopne
or
add
adc
movs
sbb
shl
sbb
or
mov
lds
pop
les
pop
push
stos
mov
mov
test
out
push
dec
loope
inc
sti
dec
jmp
cmp
cdq
sub
nop
xchg
cmp
sub
lahf
xchg
mov
pop
das
test
or
dec
clc
push
push
push
jo
aad
inc
dec
enter
cmp
pop
sbb
inc
js
push
lods
mov
pop
ret
out
pop
and
and
dec
adc
push
xchg
mov
xor
neg
and
adc
dec
mov
adc
or
jp
add
inc
in
add
xchg
add
and
push
or
jne
jae
fdivr
sahf
cmc
inc
push
cmp
inc
adc
jnp
pushf
cmc
mov
dec
les
ret
or
ror
clc
mov
inc
ror
mov
cmp
mov
dec
xchg
xor
popa
fst
je
jle
and
push
sub
dec
sub
adc
adc
pop
(bad)
ss
(bad)
mov
adc
iret
mov
hlt
or
add
call
ret
pop
test
in
jo
or
xchg
into
pop
lods
adc
sub
in
int3
into
sbb
sub
jbe
mov
daa
call
rcr
jbe
dec
fdivrp
aas
mov
or
add
test
(bad)
xchg
add
aaa
out
fs
sub
or
loopne
in
pop
dec
addr16
rcl
jns
loopne
push
mov
fwait
mov
loope
in
punpcklbw
stc
cmp
sub
movntps
xor
test
loop
inc
enter
in
xchg
sub
mov
mov
in
pop
jbe
adc
sub
push
dec
and
push
jb
pop
fs
and
fsubr
enter
adc
and
mov
adc
mov
push
add
sbb
dec
rol
adc
and
fisttp
sbb
jmp
and
xor
mov
pop
lds
popa
outs
adc
loopne
pop
or
outs
mov
mov
fs
test
cld
sbb
sub
jle
inc
movs
ins
mov
rcr
movs
or
dec
push
add
add
jle
into
adc
ins
fst
sbb
fsub
jmp
(bad)
test
jle
or
imul
jno
cld
add
push
addr16
cld
sbb
cmp
mov
add
mov
jle
cmp
or
inc
pop
out
outs
popa
ss
add
pshufw
mov
pop
gs
inc
gs
push
fmul
cmp
fdiv
arpl
and
out
sbb
add
sub
jg
mov
adc
adc
push
jo
xchg
int
aaa
pop
pop
ss
mov
lea
in
je
or
jns
das
int
jmp
iret
or
jmp
pop
ja
or
xchg
jne
test
call
push
icebp
add
mov
mov
push
jecxz
and
mov
mov
dec
arpl
fild
jl
mov
cmp
xor
or
cs
or
and
nop
jle
dec
adc
movs
push
adc
xchg
push
shr
lea
jnp
adc
rcl
inc
rol
push
retf
mov
idiv
jle
or
adc
inc
pop
push
dec
xlat
mov
lahf
inc
mov
adc
pop
jne
pop
mov
pop
in
arpl
sub
ror
and
jo
inc
mov
retf
xchg
aam
push
enter
inc
pop
iret
xchg
popa
shr
or
(bad)
or
dec
sbb
bound
adc
in
mov
rcl
sbb
sbb
cmp
and
add
ins
popa
add
mov
mov
cmps
fidivr
es
lds
add
pushf
stc
ror
data16
je
add
dec
pop
ins
fist
inc
test
movs
add
add
push
adc
outs
sub
jmp
push
push
push
in
loope
icebp
jno
pusha
cmp
push
jno
and
jecxz
ss
movs
ds
jne
test
mov
jne
jo
shr
leave
sub
push
in
jmp
int
push
lea
sub
int3
pop
xchg
scas
inc
push
inc
imul
sbb
add
cmp
jne
sub
sub
push
adc
sub
inc
push
adc
inc
or
mov
cmp
icebp
jl
adc
cdq
or
dec
lods
xchg
shl
lock
sbb
in
daa
and
push
xchg
push
and
pusha
mov
call
imul
add
cmps
sar
test
adc
ffreep
pop
fcmovbe
sub
push
loopne
jle
test
cld
push
push
mov
std
pop
lods
jge
xor
test
je
je
sbb
aaa
pop
jns
jo
sahf
js
jae
cld
test
pop
mov
mov
fwait
push
or
dec
test
retf
push
mov
mov
lahf
shl
fdivr
rcl
jp
stos
push
xchg
mov
add
pop
jmp
xlat
mov
inc
pop
lea
mov
push
fs
push
mov
jmp
adc
in
movs
sub
pop
inc
sub
push
repnz
ss
scas
cmps
push
add
sub
mov
sbb
pop
ror
push
bound
iret
fwait
and
add
push
pop
test
pusha
xchg
popf
mov
mov
(bad)
(bad)
sti
mov
popf
pop
adc
or
ss
sbb
add
jo
adc
rcl
mov
cmp
fs
fwait
rol
jmp
ror
inc
inc
mov
xor
outs
sbb
jne
inc
mov
mov
inc
adc
fs
dec
mov
push
adc
mov
test
cmc
aam
in
push
sub
out
add
call
cmp
add
add
ins
xor
movzx
adc
xchg
xor
jo
xor
and
push
cs
xchg
push
inc
popa
dec
or
rcr
call
push
cmp
mov
idiv
push
imul
mov
fimul
pop
enter
pusha
and
sbb
data16
add
sub
cmp
pop
dec
sbb
(bad)
push
shl
sub
shld
es
cld
inc
stos
and
adc
pop
retf
add
arpl
or
pop
scas
xchg
mov
lods
mov
scas
outs
je
icebp
or
test
fdiv
loope
cmp
push
sbb
xor
aas
shl
sub
or
les
xchg
jle
mov
ret
mov
rcl
fidiv
sub
rcr
mov
or
sub
inc
or
neg
mov
imul
push
or
jp
imul
push
mov
(bad)
push
inc
mov
fadd
mov
add
enter
mov
daa
mov
lea
adc
and
add
lods
xor
mov
dec
stos
pop
cmp
dec
(bad)
gs
inc
sbb
inc
mov
pop
mov
into
or
sub
sar
xchg
jge
shl
mov
inc
ins
xor
outs
adc
bound
or
and
cmp
add
dec
mov
pop
sbb
or
sub
das
or
cmps
sub
sub
push
aas
mov
sbb
or
pusha
leave
jmp
std
xor
cmp
jne
push
pusha
sub
ss
mov
and
sbb
mov
pop
sar
inc
and
add
loopne
inc
ret
in
cwde
addr16
dec
cmp
mov
cs
cs
xchg
imul
jle
out
test
push
mov
or
sbb
call
inc
daa
add
es
sbb
fcom
or
ror
lea
bound
and
daa
pushf
push
call
test
aad
and
(bad)
fwait
rcl
inc
push
sbb
inc
cmp
pop
fiadd
add
or
js
cmp
das
or
psllw
retf
(bad)
test
(bad)
push
jg
pop
pop
jb
push
pop
outs
hlt
inc
enter
pop
xor
adc
enter
pop
hlt
inc
push
adc
xchg
jmp
ss
sub
(bad)
pop
push
aad
push
xchg
je
mov
cmp
cmovns
cmp
mov
mov
ins
or
pop
lods
pop
ja
jne
inc
mov
test
push
sahf
imul
mov
ins
fidiv
hlt
xor
pop
fcom
nop
xchg
dec
xor
loopne
cwde
and
xor
cmp
cmp
mov
fsubr
inc
ins
hlt
xchg
push
push
shr
xor
add
inc
test
in
rol
in
clc
adc
push
and
mov
pop
pushf
or
cmps
inc
imul
push
(bad)
sub
cld
mov
mov
mov
sbb
pop
repnz
fsub
ret
int
jo
xchg
or
mov
add
sahf
and
out
xchg
cwde
or
and
nop
(bad)
mov
adc
jmp
push
jl
nop
das
ss
mov
inc
in
inc
ins
rol
xor
in
adc
cmps
and
add
add
sbb
dec
xchg
inc
or
inc
lods
push
shl
iret
test
xor
xor
iret
and
and
add
or
push
adc
lea
iret
cmp
cmp
in
sub
inc
cmp
jne
adc
pop
and
jbe
stos
adc
xchg
das
adc
inc
enter
xchg
mov
sbb
pop
inc
or
jge
xchg
adc
mov
xor
ret
add
add
fadd
dec
inc
add
or
sar
hlt
test
cs
iret
adc
mov
int
push
or
in
mov
add
inc
cmp
and
push
and
jo
lock
or
daa
cmovo
cmp
push
stc
and
mov
ficomp
(bad)
and
sbb
adc
push
xor
and
cld
es
inc
dec
clc
hlt
out
inc
cmp
hlt
fs
hlt
addr16
cs
fsub
xchg
das
es
pop
daa
or
sbb
add
mov
jbe
cmp
mov
and
xor
mov
mov
or
mov
sti
add
mov
mov
inc
add
mov
mov
daa
and
mov
jmp
lods
je
mov
out
mov
xor
es
lods
add
pop
add
pop
jmp
or
daa
sbb
cmp
and
into
mov
jmp
push
push
pop
test
mov
add
je
stos
dec
adc
adc
sbb
pop
jmp
xchg
or
sar
push
push
sbb
mov
adc
push
cwde
sub
jb
retf
xor
jge
jns
ret
add
and
mov
or
in
push
push
sbb
cmp
adc
inc
xor
pop
sbb
inc
and
or
push
popa
cmp
jle
push
js
dec
popa
pop
cmp
mov
jbe
std
pop
das
push
push
mov
sub
cmps
nop
pop
or
aam
shl
push
jne
and
mov
mov
cld
mov
cld
push
aas
sub
iret
cld
cmp
sbb
mov
iret
mov
jnp
cmp
std
cdq
sub
or
lock
push
adc
push
(bad)
daa
aad
push
xor
add
adc
and
dec
add
add
jns
and
ret
shl
sub
push
es
jecxz
cwde
gs
lock
jo
xlat
shl
jl
inc
or
xor
xchg
scas
das
adc
enter
int
jno
(bad)
lock
and
sub
pop
sub
dec
call
or
call
jne
jmp
pusha
cmp
jb
sub
push
jl
xor
dec
nop
fisttp
fidiv
ins
adc
sub
call
push
lea
lea
fcomp
(bad)
sbb
sar
ds
jb
push
sbb
add
xchg
es
pop
add
push
push
dec
inc
pop
cmps
and
xor
or
or
or
or
sub
inc
xchg
out
enter
adc
mov
adc
xlat
test
aam
sahf
(bad)
adc
jne
daa
cs
pop
aaa
jns
push
add
pop
imul
mov
sbb
mov
push
and
pop
add
mov
inc
cmp
stos
gs
pop
cmp
popa
cmp
pushf
neg
scas
xor
mov
pop
pop
mov
pop
sbb
jb
sar
outs
ss
sub
imul
pop
jmp
ds
loop
mov
add
adc
ror
es
lea
adc
cwde
adc
inc
outs
jne
ds
xchg
cmps
ins
popa
jns
jae
push
sbb
push
mov
pusha
mov
push
pushf
daa
shl
add
or
sahf
int
repz
jge
rep
dec
sub
mov
push
push
inc
push
dec
mov
dec
dec
(bad)
call
sub
sbb
sub
addr16
pop
cmp
daa
dec
nop
imul
sub
iret
xchg
cmp
sub
prefetchw
add
push
push
(bad)
cmp
dec
jne
mov
cld
mov
pop
rcl
(bad)
std
add
mov
cmp
inc
mov
iret
ins
outs
enter
or
push
cmps
hlt
xor
adc
fdivr
and
gs
fbld
xor
or
adc
push
and
pop
(bad)
fisttp
sub
cs
adc
imul
jnp
push
movs
cmp
add
pop
cs
inc
sbb
mov
xor
or
adc
aad
or
ret
(bad)
cmp
jae
mov
pop
daa
dec
movs
and
adc
test
andps
sub
or
shl
ret
push
add
in
call
cwde
aam
adc
dec
fidiv
outs
fmul
es
sub
sub
lock
and
sub
sub
pop
test
retf
int3
jns
xor
shl
jno
shl
lahf
cmps
push
xor
scas
mov
mov
cs
rol
sub
mov
xor
and
add
add
xor
xlat
dec
jecxz
cmp
outs
xor
out
and
or
fst
inc
ss
pabsd
inc
cmp
(bad)
jne
jns
push
sub
cmp
pusha
xor
or
jge
mov
adc
jl
test
mov
imul
mov
test
push
add
adc
sub
push
add
lock
jmp
clc
mov
ins
or
outs
gs
and
dec
cmp
mov
test
pop
enter
sbb
sub
pop
in
or
test
add
jmp
xor
mov
movs
mov
mov
pop
inc
popa
jmp
into
sub
inc
inc
pop
push
imul
mov
cmp
jl
outs
leave
add
jnp
jb
dec
and
sbb
and
dec
and
nop
xor
pop
mov
sub
or
les
xlat
shl
or
inc
push
sbb
mov
jg
in
and
in
mov
xor
mov
jns
xchg
sub
lahf
mov
add
test
mov
and
xor
xchg
lock
sbb
mov
pop
or
and
sbb
in
push
pop
mov
pop
xchg
inc
or
hlt
or
test
test
cmp
cmp
mov
sti
adc
sbb
jne
push
movs
in
in
pop
add
cs
dec
rcr
push
push
je
ror
or
daa
or
sub
mov
and
enter
cmp
movs
ins
test
movs
add
stos
mov
xchg
xor
cmp
jge
push
sbb
or
sbb
jg
jne
mov
dec
pop
mov
or
rol
bound
and
adc
in
ss
into
and
inc
push
cmp
xchg
lock
pushf
ss
rol
sbb
dec
daa
xor
push
das
jne
inc
and
loop
jno
fxch
mov
cmp
dec
ret
shr
mov
or
or
and
mov
repz
sub
fcmove
daa
xor
push
pop
add
pop
fdiv
or
ins
pusha
inc
lea
iret
push
or
enter
fdiv
push
scas
push
mov
dec
sub
push
xor
pop
or
sub
mov
push
and
test
rol
mov
test
jp
imul
in
sub
addr16
js
fadd
cmp
test
or
inc
dec
lea
ror
jbe
bound
mov
inc
outs
lock
loopne
dec
and
loopne
test
dec
sbb
pop
inc
data16
sti
les
inc
inc
dec
xchg
inc
shl
(bad)
mov
ins
ja
es
push
pop
fsubrp
add
sub
xor
mov
in
dec
mov
inc
adc
out
js
cmc
jne
mov
inc
inc
xor
jle
adc
xchg
cmps
enter
lock
and
cdq
mov
push
and
call
ret
cld
loope
test
push
(bad)
cmp
fsubr
lock
sahf
rol
jbe
imul
and
and
dec
es
mov
dec
or
xchg
and
pop
clc
and
in
push
(bad)
scas
sbb
inc
xchg
xor
leave
jae
xchg
stos
retf
nop
or
sub
sbb
cmp
and
stc
cwde
ins
and
pop
cmp
inc
mov
dec
and
sub
movs
repnz
jne
aad
loope
mov
jns
ins
arpl
or
push
or
and
sbb
adc
popa
rcl
jmp
push
(bad)
sub
and
push
push
jb
cmp
pop
add
ret
lods
inc
les
and
bound
pop
mov
pop
and
or
sbb
sub
push
adc
nop
or
mov
clc
pusha
push
dec
aaa
stc
pushf
cmp
dec
cmps
xor
push
sbb
lods
xlat
idiv
push
pop
dec
pop
cmp
xor
in
pop
cmp
shl
push
cmp
sub
add
cmp
cmp
(bad)
cmp
ins
test
or
cwde
xchg
and
cmp
push
sbb
in
adc
xor
rcl
ins
push
dec
ins
sub
xchg
mov
push
imul
add
outs
pop
mov
cmp
jo
fs
xchg
cmp
push
jge
xor
push
push
in
fwait
xor
test
cld
enter
dec
mov
adc
repnz
sbb
jl
sub
iret
and
push
test
cmps
jns
test
push
jns
cdq
nop
push
pop
xchg
pop
popf
inc
es
pop
movs
sbb
outs
ins
arpl
jmp
pop
dec
pop
or
or
sub
add
inc
es
sub
pop
lods
ret
dec
or
jp
das
push
push
push
push
and
movs
cmp
pop
push
push
sub
xchg
das
jnp
add
pop
outs
jae
sbb
push
fild
cdq
in
xchg
test
or
mov
pusha
fld
add
ds
test
aaa
nop
push
xchg
test
push
icebp
push
nop
je
jl
fild
daa
les
dec
or
push
mov
push
inc
jb
ficom
inc
mov
aas
push
xor
push
cmp
ja
push
nop
icebp
movs
add
pop
add
and
inc
push
push
inc
je
inc
rcl
test
cmp
sbb
sbb
pop
inc
pushf
ja
es
add
dec
fistp
sbb
xor
xor
imul
daa
daa
and
mov
daa
daa
daa
mov
daa
daa
pushf
mov
daa
daa
lods
mov
mov
mov
daa
daa
daa
int3
rcl
fsub
daa
daa
daa
fsub
in
daa
daa
daa
daa
in
lock
clc
xchg
xchg
daa
daa
cld
add
add
xchg
xchg
xchg
or
adc
xchg
xchg
xchg
sbb
and
lds
sbb
(bad)
rcl
push
and
cmp
scas
mov
mov
jnp
sti
ror
in
xor
stc
cmps
xor
add
xchg
je
ins
or
push
js
cmp
fisttp
dec
and
jae
iret
sub
and
xchg
sbb
mov
enter
xchg
test
cmp
sbb
jae
mov
pop
repnz
iret
lods
add
sub
cmp
inc
mov
push
in
les
inc
sahf
enter
jns
in
shr
add
int3
fmul
in
nop
fsub
hlt
in
iret
cmp
sbb
sbb
jae
sub
inc
iret
cmp
push
enter
je
sbb
add
add
in
nop
out
test
mov
add
adc
adc
cmp
sbb
cmp
repnz
and
jae
iret
and
sub
pop
repnz
jl
xlat
add
push
cmp
loop
inc
add
cs
je
gs
push
gs
gs
push
sbb
dec
popa
inc
ins
outs
jae
and
push
test
sbb
gs
adc
adc
or
xor
add
test
popa
jb
in
daa
mov
je
outs
mov
or
test
or
dec
imul
and
scas
pop
adc
jbe
arpl
jae
jbe
and
adc
std
mov
ins
jns
jnp
jae
mov
add
inc
inc
(bad)
push
add
out
pop
pop
pop
mov
jg
popa
ins
or
sub
pop
imul
pop
imul
or
cwde
adc
scas
pop
mov
xor
popa
dec
xor
imul
cmps
aas
repnz
lock
outs
push
lods
sub
jbe
inc
sub
daa
movs
xor
in
push
mov
shl
pop
in
pop
xchg
and
and
or
ins
dec
and
cmps
and
fs
jg
fisttp
outs
addr16
jne
ins
sub
xchg
fimul
mov
or
adc
mov
les
pop
cmc
ror
cmp
xor
push
frstor
arpl
pop
jmp
outs
pop
mov
pop
mov
jbe
fist
add
and
pushf
adc
loop
pop
mov
dec
pop
fs
cld
dec
scas
popa
les
jne
xchg
push
add
shr
mov
sbb
es
enter
dec
scas
sub
mov
xor
dec
pushf
dec
dec
out
sbb
dec
pop
xchg
dec
cmp
adc
mov
xchg
add
nop
ror
add
add
xchg
pop
add
and
dec
push
cmp
and
xor
pop
xor
and
test
and
xor
pop
xor
and
in
dec
sbb
pusha
ss
jo
add
pop
outs
push
lods
or
pop
aaa
inc
inc
jmp
(bad)
fiadd
dec
inc
nop
pop
mov
ret
add
addr16
pop
aam
xor
inc
fadd
lock
nop
push
push
ds
push
or
lods
pop
add
sub
bound
add
shr
xor
jae
jge
fs
fld
sub
add
pop
cmp
cmp
imul
retf
or
movs
imul
dec
and
outs
ret
push
mov
sbb
inc
loopne
mov
xor
push
push
test
lods
mov
add
adc
dec
jle
inc
and
call
inc
inc
adc
adc
jg
sbb
in
jle
fs
adc
add
pop
sbb
mov
pop
cmp
and
cdq
mov
mov
inc
pop
add
or
adc
dec
repz
ins
and
inc
aas
jecxz
sub
sub
cmp
sbb
jbe
hlt
mov
aad
inc
outs
movs
das
pusha
in
inc
dec
es
test
xor
dec
or
fiadd
pop
cmps
movs
sbb
lahf
pop
mov
add
ins
outs
jmp
cwde
mov
lahf
sub
and
ins
call
mov
das
in
pop
bnd
dec
mov
fnstcw
cdq
mov
inc
xlat
push
call
ds
in
and
mov
and
es
pop
fst
or
pusha
mov
fstp
jp
and
fbld
jo
(bad)
pop
sub
fs
or
gs
pop
es
push
push
sbb
pusha
pop
pop
ret
push
pop
cmp
int
dec
outs
add
shl
arpl
lods
stos
mov
loop
xor
pop
push
loope
inc
out
dec
outs
outs
or
mov
and
inc
ins
ins
pop
push
outs
pop
sub
fisttp
jmp
paddw
test
call
ds
sbb
jo
add
add
or
xchg
adc
sub
xlat
cmps
push
push
in
and
sub
sti
fldpi
sub
mov
mov
mov
cmp
push
inc
ins
fs
addr16
push
pop
mov
ins
cmp
lods
sti
shr
arpl
and
xor
mov
cwde
test
mov
xor
test
nop
add
mov
imul
cwde
sbb
je
cs
ss
fmul
nop
ss
xchg
push
out
(bad)
push
push
mov
int
ins
dec
mov
out
push
push
or
jne
xchg
sbb
jg
mov
fs
mov
jg
inc
mov
xchg
xor
adc
inc
mov
frstor
ja
xchg
adc
xor
adc
and
xor
js
loopne
loopne
fbld
adc
sbb
inc
inc
sbb
push
pop
clc
push
fistp
cmp
test
out
push
fdivr
ja
push
imul
enter
jo
or
ss
sbb
jae
jb
jno
int3
inc
push
mov
iret
jl
xor
fstp
push
hlt
lea
cs
mov
lea
mov
jno
mov
or
inc
add
rcr
movs
push
push
inc
mov
fdivr
jle
jmp
inc
mov
dec
or
cmp
adc
sahf
push
jb
sbb
inc
jmp
jmp
lods
push
cmp
outs
mov
or
imul
shr
push
test
pop
push
add
xchg
add
out
xor
test
add
or
mov
fst
sbb
inc
sub
mov
cmp
or
sub
pop
and
outs
ja
or
imul
or
inc
add
enter
cmp
(bad)
and
aas
or
and
and
or
enter
es
and
and
and
das
movs
or
enter
inc
push
sbb
adc
push
pop
sbb
sbb
sbb
sbb
nop
inc
push
sbb
push
sbb
add
inc
push
sbb
add
push
pop
or
xor
mov
in
pop
sahf
push
in
xor
rcr
adc
or
fnstenv
clc
mov
hlt
mov
lods
in
imul
imul
imul
cmps
imul
test
call
sub
and
call
dec
mov
call
push
dec
shl
and
xor
shl
fcom
or
ss
ror
add
cld
idiv
mov
lods
in
cmps
imul
cmps
imul
lods
pop
je
das
nop
dec
call
das
mov
inc
(bad)
and
hlt
pop
sbb
mov
in
push
cs
das
cmp
or
pop
out
das
cmp
push
pop
sbb
fcmovbe
movs
test
daa
les
inc
daa
push
mov
sub
jle
call
dec
lea
arpl
cmp
inc
and
jno
stos
adc
inc
and
ins
add
clc
adc
sbb
mov
test
mov
adc
cmp
add
pmulhuw
nop
std
and
inc
mov
mov
mov
push
push
jl
add
adc
data16
xchg
push
push
ins
nop
out
loopne
push
mov
fwait
xchg
int
dec
sbb
inc
cld
add
sahf
xchg
inc
inc
(bad)
cmp
rol
imul
lods
jae
mov
mov
cmp
repnz
dec
leave
daa
pop
mov
nop
imul
mov
xchg
mov
leave
sbb
mov
cmps
or
sahf
loopne
adc
pop
stc
add
addr16
shl
ror
pop
adc
add
xchg
and
cmp
stos
inc
pop
cwde
pop
inc
push
adc
push
jecxz
out
imul
test
or
aas
xchg
sub
dec
je
adc
push
mov
sbb
addr16
add
add
arpl
inc
adc
jg
add
lar
jb
dec
adc
jmp
add
xchg
adc
(bad)
loop
scas
push
add
mov
ins
mov
dec
call
retf
das
pop
and
and
adc
xchg
cmovo
mov
sets
mov
xchg
leave
repnz
mov
dec
fst
loope
add
test
mov
mov
ret
sbb
ret
imul
mov
dec
push
inc
nop
dec
pop
popa
hlt
(bad)
jbe
mov
adc
mov
outs
jne
cs
adc
xor
cmp
aam
hlt
retf
mov
fcomp
test
(bad)
shr
rcr
push
inc
xchg
mov
inc
fild
xor
les
add
iret
(bad)
adc
push
fwait
sbb
rcl
retf
sbb
jbe
js
dec
jo
add
dec
dec
push
or
mov
sbb
popa
inc
push
sub
xchg
mov
xor
pop
xchg
jmp
inc
sub
dec
add
or
fwait
mov
jp
dec
push
ret
jge
dec
sbb
jecxz
mov
mov
push
js
aam
inc
adc
mov
dec
arpl
mov
bound
jmp
cmc
push
xchg
inc
add
lahf
fimul
push
popf
cmps
enter
jo
mov
outs
arpl
push
inc
test
cld
dec
jbe
sbb
or
int3
or
ror
cmp
(bad)
sbb
mov
add
jo
sbb
push
mov
(bad)
pop
inc
jecxz
pusha
xor
pop
repnz
jge
jmp
fcom
add
iret
sbb
adc
pop
(bad)
ret
imul
dec
sahf
nop
jne
add
nop
loop
adc
inc
test
ficomp
and
fs
dec
push
iret
arpl
lahf
adc
dec
les
outs
push
dec
outs
in
iret
mov
xor
cmp
and
mov
sub
mov
sbb
and
scas
mov
fstp
cmp
rcl
shl
ror
xchg
dec
int3
scas
lds
xchg
int3
pop
adc
ret
and
daa
sub
mov
nop
gs
les
or
les
and
(bad)
push
adc
inc
outs
jb
popa
je
cmp
div
data16
cmp
je
loope
cld
pop
cli
call
outs
mov
mov
inc
mov
ss
pop
ja
shr
pop
or
xchg
fs
bound
(bad)
daa
adc
inc
data16
loopne
jns
push
loopne
in
ret
or
push
test
mov
ret
inc
dec
dec
data16
fsub
retf
mov
movs
data16
data16
sub
js
inc
push
push
push
sar
outs
inc
imul
sub
ins
imul
aas
add
xor
xor
sub
xor
dec
imul
sbb
verr
mov
add
outs
pop
arpl
ins
push
arpl
imul
inc
outs
pop
js
arpl
(bad)
outs
xor
daa
jo
jb
jb
into
ficomp
popa
or
jbe
mov
add
data16
daa
ja
aaa
rcr
jo
addr16
jb
push
mov
sahf
addr16
push
mov
out
movs
mov
arpl
ins
daa
push
(bad)
sub
sub
stos
outs
in
ins
ss
das
je
cmps
sbb
dec
and
mov
imul
xchg
cmp
pop
je
and
pop
jb
arpl
in
cwde
int
jns
outs
dec
pushw
das
add
push
imul
icebp
popa
jecxz
cmc
lock
pop
mov
fwait
push
mov
inc
mov
xor
add
aas
lock
and
add
pop
clc
jmp
mov
dec
xchg
pop
mov
(bad)
das
pop
clc
adc
int
daa
inc
adc
loopne
xchg
ins
sti
and
sub
inc
cmp
lock
(bad)
fisttp
imul
cmp
outs
pop
fisubr
or
push
add
jmp
ins
mov
push
out
ins
push
sub
mov
dec
push
outs
mov
mov
movs
mov
call
cld
outs
ret
xchg
popa
adc
pop
ret
add
cmp
push
mov
push
dec
inc
pop
sbb
ins
xlat
add
or
inc
cs
sbb
(bad)
rol
jge
sub
int3
inc
loop
repz
xchg
das
mov
mov
sbb
jae
int
push
dec
and
je
ret
jae
daa
push
clc
rcl
adc
sbb
ficom
or
adc
loope
or
nop
pop
or
sub
inc
mov
add
ret
imul
mov
cmp
imul
sub
mov
add
add
add
sar
push
or
or
or
or
or
dec
movups
adc
adc
dec
shl
push
dec
rcr
sbb
and
and
jl
imul
push
data16
imul
imul
dec
shl
inc
push
gs
xor
rol
fnstenvw
outs
sbb
ss
push
pusha
outs
scas
mov
pop
jg
push
jbe
fwait
add
inc
sahf
add
add
push
push
adc
inc
sahf
add
or
in
nop
or
or
sahf
add
or
push
sbb
push
add
in
movaps
sub
xor
in
adc
cmp
sahf
add
adc
inc
push
inc
pop
inc
sahf
add
sbb
nop
sbb
push
sahf
add
sbb
pop
mov
imul
push
repz
repz
imul
cmp
and
and
int
xor
xor
data16
push
cmc
and
and
and
push
mov
dec
adc
add
les
test
mov
ins
and
les
iret
fcomp
inc
enter
sar
outs
inc
push
lea
inc
pop
cmp
push
mov
mov
test
cmp
pop
push
xor
push
xchg
out
mov
add
call
xor
in
adc
ds
lock
outs
sbb
mov
push
jbe
and
or
test
sbb
fadd
inc
mov
pop
(bad)
int3
mov
mov
adc
dec
pop
les
inc
pop
pop
sbb
mov
push
adc
pop
jb
cmp
clc
cdq
mov
sbb
mov
add
in
adc
fnstsw
enter
nop
cmp
sbb
xchg
jo
nop
jo
aad
sbb
sub
jno
dec
jno
cmp
mov
push
xchg
(bad)
aas
add
inc
adc
adc
cli
pop
xchg
inc
daa
nop
jno
outs
pop
jnp
inc
mov
xchg
inc
mov
aam
pop
dec
dec
add
and
test
pop
sub
mov
fs
jae
popa
dec
sbb
sub
inc
movs
jb
movs
jg
out
add
mov
nop
dec
ds
icebp
jno
push
into
xchg
cmp
jno
cs
push
cmp
or
push
nop
daa
dec
fimul
addr16
push
or
fs
xor
ins
nop
inc
aam
jg
xchg
push
sbb
sahf
test
lods
enter
sub
loopne
imul
cmp
inc
dec
push
pop
gs
sbb
test
or
inc
in
shr
and
rcl
pop
loopne
inc
add
and
and
js
xchg
xchg
andps
add
sti
push
imul
je
or
nop
adc
ds
sbb
imul
movs
fcomp
mov
adc
sub
outs
xchg
in
clc
sbb
clc
push
mov
paddb
dec
ins
je
mov
jns
fadd
cld
shl
mov
ror
adc
inc
dec
ficom
sbb
fiadd
cmp
test
lea
call
lods
pusha
cdq
mov
mov
retf
xchg
call
sub
push
cmp
add
add
pop
jne
mov
inc
jns
jae
sub
pop
lea
inc
jnp
xchg
shl
pushf
mov
mov
add
aam
cmp
and
ins
xlat
dec
dec
push
mov
and
cmp
ret
add
inc
clc
cdq
fidiv
adc
popa
sbb
mov
dec
push
mov
and
pop
stos
pusha
test
popa
add
fld
mov
mul
mov
mov
rcl
mov
jb
or
or
movs
ret
dec
inc
test
cmp
xchg
ja
inc
sub
pop
gs
jae
inc
push
inc
or
xor
add
xchg
(bad)
pushf
dec
push
sbb
stc
clc
arpl
pusha
mov
or
sbb
cs
sub
idiv
inc
dec
sub
and
sub
push
pop
sbb
cmp
sub
sub
outs
sub
jl
dec
dec
xor
das
sub
clc
pop
sbb
or
mov
cmp
push
ds
in
adc
mov
xchg
or
daa
or
xchg
add
sbb
jp
xor
pop
js
inc
sbb
mov
push
aaa
in
adc
pop
jns
mov
add
pop
inc
adc
rcr
fldcw
push
lock
nop
pop
pop
cld
(bad)
sub
sub
mov
mov
sbb
(bad)
stc
daa
and
cmp
inc
jne
jo
inc
jmp
test
sub
leave
mov
jns
and
adc
add
adc
jbe
xor
fnstenv
jbe
jp
mov
and
lahf
sbb
dec
sbb
sbb
mov
add
mov
add
mov
adc
daa
imul
and
pop
adc
add
je
jmp
je
or
je
sub
cdq
or
add
pop
push
cmps
out
jae
xchg
popf
dec
cmp
cmp
imul
adc
mov
in
sub
jl
shl
sbb
dec
fist
(bad)
rol
fild
outs
jnp
in
pusha
xchg
adc
sub
inc
mov
inc
adc
pop
sub
mov
int3
xchg
and
jnp
add
pop
add
add
mov
xor
jnp
call
inc
dec
push
pop
push
dec
dec
dec
inc
dec
and
add
jl
in
dec
ficomp
clc
mov
add
mov
mov
xchg
jle
xor
aaa
aaa
in
or
or
xor
inc
jl
or
jo
pop
inc
imul
pop
cmps
lods
and
or
hlt
aas
test
adc
xchg
jb
jne
clc
imul
ins
jo
xor
jmp
jno
or
stos
leave
pop
cmp
or
pusha
fsub
pop
xchg
adc
shl
ss
les
pop
dec
xchg
shl
hlt
push
dec
pop
adc
lock
fdiv
push
push
lods
xor
mov
aam
adc
nop
cmp
fs
jnp
retf
push
nop
xor
or
ret
cmp
pop
shl
cmc
or
inc
or
xlat
adc
rol
(bad)
rol
push
(bad)
push
loopne
mov
inc
or
cmp
jb
cs
jns
outs
mov
mov
outs
es
adc
clc
jl
and
rcl
fidivr
(bad)
fidiv
jns
popa
add
sbb
sub
add
retf
cs
jo
fdivr
shl
out
and
fcmovnu
push
lock
nop
shl
add
push
jb
clc
mov
jae
jb
push
add
xor
inc
add
push
mov
(bad)
xchg
movs
sbb
cmp
popa
rol
push
int
or
je
cmp
or
sub
ins
cs
gs
inc
jae
outs
adc
or
movs
aad
ins
xchg
mov
in
xchg
or
inc
add
movs
inc
add
movs
inc
xchg
dec
fstp
push
mov
ins
pop
imul
push
mov
xchg
je
fstp
mov
and
shl
mov
dec
fwait
out
cmp
jg
cwde
movs
mov
jns
inc
movs
ins
es
sub
mov
cmp
stos
movs
adc
inc
shr
jbe
bound
push
adc
test
ins
dec
into
dec
add
or
leave
xchg
pop
jb
movs
lock
adc
adc
pop
and
add
xor
adc
js
push
adc
movs
jo
mov
(bad)
mov
imul
xchg
and
das
xor
call
pusha
cld
cmps
ds
inc
imul
ret
imul
out
pop
sub
push
inc
sub
xchg
cmp
push
xchg
sbb
and
in
nop
test
mov
cmp
shl
hlt
pop
add
inc
js
cmp
mov
pop
or
sub
pop
sub
and
xor
test
push
in
in
sbb
mov
inc
cld
cld
jl
fs
xor
xor
in
and
xor
pop
inc
sbb
push
test
push
push
lods
rcr
mov
mov
rcr
or
adc
out
adc
jo
sub
jecxz
cld
jbe
or
pusha
add
cmp
add
test
popa
jb
xchg
test
bound
ins
movs
push
jle
test
dec
or
or
ss
pop
outs
jne
adc
dec
sti
test
mov
arpl
or
out
js
or
jae
mov
repz
or
(bad)
ret
pop
xor
dec
gs
jbe
or
scas
pusha
loopne
adc
imul
shr
imul
cmp
out
imul
mov
pop
or
sbb
mov
adc
xchg
or
jnp
or
add
test
sbb
jae
js
or
str
movs
test
mov
adc
adc
mov
pop
loopne
repnz
mov
sbb
out
inc
push
adc
push
movs
test
mov
adc
leave
mov
cwde
or
mov
add
or
and
mov
js
inc
or
xchg
inc
sbb
xchg
mov
add
enter
imul
xor
imul
pusha
repnz
or
jge
sub
mov
cs
in
adc
push
sbb
retf
pop
dec
repnz
add
sbb
adc
addr16
push
(bad)
bound
mov
int
add
nop
(bad)
mov
cmps
mov
and
add
mov
sbb
nop
fcom
push
push
jb
mov
add
mov
int3
jnp
prefetcht0
lods
test
mov
push
pop
pop
mov
add
sbb
push
or
inc
jmp
ffreep
imul
nop
mov
mov
test
and
into
add
or
mov
sub
xor
inc
loopne
ja
cmp
fcmovb
iret
push
iret
or
push
pushf
addr16
xchg
jns
addr16
mov
push
outs
enter
or
icebp
jo
inc
and
jmp
or
sub
adc
es
lods
xchg
xchg
jmp
fmul
or
or
dec
xchg
or
xchg
adc
rcl
xchg
or
adc
jp
movs
(bad)
xchg
sbb
outs
arpl
jge
cmp
pop
loope
add
movs
movs
cmp
mov
jae
cwde
mov
jae
jo
popa
dec
lea
or
xchg
mov
fwait
xchg
fwait
and
out
lods
dec
fadd
jb
push
inc
gs
add
push
out
and
inc
push
ins
xor
add
rcr
cwde
(bad)
int3
sbb
adc
gs
fld
or
adc
addps
aam
out
sub
mov
push
push
or
ja
cmc
arpl
addr16
xchg
mov
imul
jo
mov
mov
sar
pop
imul
xchg
pop
fisub
or
in
loop
pop
jle
aas
iret
mov
daa
jecxz
(bad)
push
loope
fist
ret
jbe
clc
int3
inc
lahf
xchg
int
mov
pop
pop
fiadd
pop
sub
fs
pop
cs
or
shr
mov
icebp
push
loopne
sub
(bad)
xor
jg
iret
int
fstp
xchg
aam
(bad)
aam
ss
jg
andps
mov
stos
mov
add
adc
add
add
inc
xchg
add
(bad)
aas
mov
pop
adc
mov
mov
mov
mov
mov
mov
(bad)
(bad)
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
jg
in
(bad)
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
call
call
call
call
(bad)
stc
mov
into
dec
dec
dec
dec
sub
ret
jg
dec
dec
call
push
mov
xor
loopne
mov
jo
cmps
imul
shl
jo
cwde
mov
xchg
lods
xor
movs
icebp
cld
add
cmps
jns
out
sbb
dec
in
inc
pusha
loopne
pop
imul
push
push
xlat
ss
adc
test
push
xchg
fldenv
ss
clc
repnz
xor
pop
sbb
cmp
dec
fld
fsub
fld
mov
out
addr16
jae
jns
mov
out
mov
fistp
cs
pop
cmp
push
aam
mov
xchg
and
nop
sbb
cs
push
enter
leave
nop
inc
sbb
call
pop
or
push
cmp
call
mov
sbb
mov
and
add
or
mov
inc
lock
push
jns
or
hlt
push
(bad)
jnp
imul
sbb
movs
xchg
or
cmp
add
scas
lods
sub
or
push
add
mov
dec
mov
sub
add
mov
ds
and
sbb
inc
cmp
inc
and
pop
repz
movs
pop
es
repz
push
(bad)
repz
into
dec
push
pop
lock
cdq
clc
sub
xchg
add
pop
adc
or
unpcklps
std
sbb
pop
push
jns
mov
jmp
imul
push
xchg
inc
xchg
pop
test
pop
push
push
push
sbb
adc
cld
fiadd
hlt
dec
inc
pop
adc
inc
lahf
ss
and
xor
ins
push
sbb
test
cmp
sahf
jl
(bad)
add
pushf
push
mov
inc
lahf
call
in
jge
xor
les
shr
test
out
mov
std
xchg
or
pusha
add
pop
pop
mov
or
adc
or
xor
pop
mov
xor
xor
add
fcom
mov
adc
dec
pop
add
cli
pop
iret
add
add
pop
pop
pop
movs
das
jmp
retf
fdivr
add
add
add
rol
mov
(bad)
push
inc
test
adc
sbb
shr
fistp
add
dec
cld
aas
push
cs
mov
mov
mov
or
mov
mov
and
mov
mov
mov
mov
and
(bad)
(bad)
mov
mov
mov
mov
add
push
mov
ror
mov
mov
mov
rcr
add
in
inc
jmp
adc
inc
inc
inc
inc
inc
inc
inc
mov
ret
mov
(bad)
mov
jg
inc
adc
mov
mov
xlat
lock
push
jb
pop
in
sbb
cwde
mov
fld
sub
call
nop
and
and
pop
ss
cmp
or
mov
or
xor
mov
jbe
add
pop
js
fwait
(bad)
mov
mov
or
sbb
inc
cmp
sub
push
push
pop
pusha
push
ins
or
push
push
lods
ins
in
imul
sub
aaa
cwde
cmp
push
xor
rcr
cs
push
je
test
sub
das
es
cdq
scas
stc
pop
call
xor
addr16
and
jl
push
push
xchg
inc
pop
mov
xor
imul
push
es
pop
xor
dec
mov
push
adc
(bad)
ficom
hlt
cld
mov
retf
mov
nop
cmp
test
add
mov
xor
fdiv
push
xor
xor
xor
mov
clc
cmp
pop
inc
pop
and
mov
outs
push
jne
dec
fs
dec
cdq
mov
and
sub
cdq
cmp
sahf
or
ror
je
inc
push
jb
and
push
add
add
fiadd
mov
aaa
ds
sub
call
xchg
pop
ret
popa
lea
int3
call
mov
mov
inc
in
inc
jl
fs
mov
or
push
js
fs
mov
sti
adc
pop
push
shr
inc
dec
fisub
and
adc
or
xor
pop
and
sub
or
js
sub
pop
pop
mov
sub
cmp
dec
dec
and
or
pop
jb
sbb
jb
pop
jb
sbb
adc
es
sbb
pusha
xchg
leave
and
mov
cmps
into
push
fmul
call
jnp
xchg
cwde
xchg
push
add
rol
je
mov
retf
push
jmp
js
rcr
xchg
out
add
lods
ins
bound
jne
es
addr16
cwde
imul
push
ins
push
push
xchg
pop
addr16
mov
pop
and
or
test
push
lahf
xchg
inc
and
aas
lea
mov
clc
in
nop
rcl
or
xor
bound
pop
and
push
and
imul
(bad)
test
push
sub
and
les
or
add
mov
add
add
scas
test
mov
push
push
lock
mov
test
fdiv
xor
nop
xor
dec
sub
int
lds
in
dec
scas
jne
xor
and
jo
cmps
add
cmp
adc
enter
dec
xor
test
dec
(bad)
enter
xchg
iret
mov
dec
inc
aas
adc
(bad)
push
or
mov
es
add
jb
push
inc
adc
daa
inc
fwait
mov
mov
add
and
dec
inc
gs
ins
or
add
lods
pop
push
xchg
daa
repnz
push
fmul
push
inc
loopne
pushf
inc
push
inc
daa
push
jo
imul
add
or
inc
ins
popa
xor
xor
push
mov
fimul
add
outs
lock
daa
adc
dec
jo
imul
push
mov
btc
push
mov
or
xor
xchg
push
or
or
pop
mov
std
sbb
(bad)
adc
fisubr
add
pop
sub
jo
mov
mov
add
inc
ret
cmps
jmp
inc
retf
adc
push
xlat
retf
jl
les
push
in
js
or
dec
mov
sbb
dec
sti
nop
hlt
push
or
mov
movs
push
clc
ret
popf
in
out
sub
adc
sbb
jne
mov
lods
and
add
nop
pop
mov
push
mov
inc
mov
jne
push
add
cmp
pop
add
adc
cs
cdq
sub
inc
sub
pusha
movs
sar
jl
mov
imul
pusha
adc
add
push
dec
(bad)
or
(bad)
int
xchg
int3
pop
out
add
xlat
lock
rcl
adc
popa
sbb
test
shl
clc
fild
outs
xchg
sbb
daa
adc
pop
shr
xor
adc
pop
icebp
test
jne
out
int
mov
cmp
mov
dec
shl
imul
mov
push
or
push
dec
pusha
jnp
xchg
add
(bad)
(bad)
cmps
gs
pop
pusha
dec
or
adc
adc
sbb
and
gs
and
sub
sbb
gs
scas
push
fisub
sbb
in
in
pop
outs
jno
sbb
out
adc
mov
imul
sub
jbe
fdiv
aaa
aas
icebp
and
push
movs
add
lds
jbe
je
sub
inc
out
xor
or
je
(bad)
xchg
inc
sub
push
dec
je
ja
xchg
push
jp
(bad)
shr
ret
dec
mov
fist
or
movs
movs
jmp
mov
xchg
mov
jne
mov
inc
xor
dec
mov
sbb
lds
cmp
popa
test
sahf
add
mov
mov
inc
ins
test
mov
adc
pop
jl
xchg
test
(bad)
jmp
or
push
cmp
mov
dec
xchg
movs
push
adc
mov
rol
add
sub
jne
inc
mov
mov
call
xchg
lods
iret
push
xchg
scas
xchg
xor
add
add
cmp
add
add
or
mov
xor
call
cmp
dec
pop
xor
push
inc
add
fild
lods
loope
xor
and
pop
test
je
(bad)
add
ss
inc
push
pop
aas
cmps
aas
popa
push
mov
or
cmp
add
mov
(bad)
xchg
sbb
jae
mov
sub
jo
ror
cmp
pop
stos
xor
pop
or
xchg
xor
push
mov
pop
fimul
xor
ins
ins
lods
mov
lea
sub
je
movs
push
pop
pop
inc
add
lock
jb
sub
addr16
in
jno
sbb
arpl
sahf
and
pop
jmp
add
daa
test
sub
rol
add
adc
dec
movntps
mov
xchg
aam
inc
dec
or
adc
and
shl
cmps
pusha
fdivp
and
hlt
loopne
ficom
or
arpl
outs
push
mov
xor
inc
daa
mov
mov
jbe
mov
mov
cmp
scas
inc
sbb
sub
and
cmp
ja
add
push
or
inc
mov
sar
jb
mov
fild
mov
jmp
cmp
jne
sub
pop
(bad)
and
enter
(bad)
fst
int
data16
pushf
loopne
inc
or
in
push
rol
cmp
test
lock
sub
sub
mul
mov
add
and
js
sub
inc
fnstsw
cmp
pop
adc
push
mov
je
pop
cs
pop
mov
in
sub
movs
gs
or
sub
mov
ins
lods
fidiv
sti
or
(bad)
(bad)
test
push
adc
xor
out
ret
or
iret
adc
mov
call
dec
es
mov
and
xchg
sar
jmp
mov
es
push
cli
add
and
sar
shl
mov
lea
or
lea
dec
cs
or
xor
dec
in
lea
lea
fcom
lea
adc
test
sbb
aad
jmp
adc
or
ds
iret
xor
sub
inc
or
pop
pop
jnp
add
mov
mov
add
sub
and
lea
(bad)
test
jae
cmp
or
mov
push
mov
push
jno
push
or
cmp
pop
sbb
mov
lahf
gs
xor
push
inc
aas
adc
dec
jle
inc
jno
jmp
push
nop
mov
push
add
out
or
fmul
adc
mov
test
sub
adc
cmp
xor
and
or
ins
and
push
add
cmp
ror
or
movs
dec
add
add
or
mov
pop
and
test
jmp
shl
inc
push
sbb
inc
adc
cmp
sbb
rcr
sbb
and
lock
pop
adc
mov
dec
mov
shr
(bad)
push
push
add
push
push
fbld
dec
push
push
inc
repnz
inc
cmp
es
xor
scas
add
xor
sub
shr
cld
inc
in
xchg
inc
pushf
xor
and
fsubr
xor
leave
sub
fld
push
mov
fst
sbb
cli
inc
ins
mov
jo
fisubr
fdiv
adc
jmp
outs
and
push
xchg
push
pop
or
mov
popa
pop
ja
lods
aaa
xchg
inc
jo
cdq
mov
cmps
jb
jae
mov
push
js
ret
adc
adc
xchg
dec
je
push
cmp
je
out
xlat
scas
pop
jo
test
mov
jne
pop
out
or
and
mov
repz
mov
mov
xchg
fistp
shr
fsubr
stos
mov
int
jge
mov
sub
addr16
mov
mov
imul
or
mov
sbb
sbb
or
aam
xor
cmp
mov
mov
js
(bad)
mov
adc
out
push
jecxz
sti
cmp
je
jmp
ja
mov
mov
xchg
adc
fcom
add
or
pop
in
xor
and
ins
inc
xchg
retf
and
add
mov
mov
adc
or
mov
ins
adc
cmovae
and
mov
scas
cmp
push
test
jnp
call
adc
or
mov
mov
inc
jmp
mov
mov
cwde
and
mov
pop
pop
aad
mov
mov
sbb
xchg
jl
js
or
push
sub
add
daa
sbb
xchg
not
cmp
mov
cwde
cdq
pop
aaa
xchg
lods
pop
and
(bad)
fist
pop
ss
inc
xchg
fdiv
mov
jmp
push
jge
xor
sub
dec
out
push
sbb
imul
or
repz
ror
inc
or
cmp
cwde
xchg
mov
js
cs
inc
das
push
stc
push
jbe
mov
xor
push
pop
mov
enter
fcomp
aam
inc
adc
shl
imul
out
adc
ds
(bad)
lea
js
or
stc
ja
(bad)
(bad)
jno
mov
cmp
(bad)
or
inc
dec
daa
or
mov
xchg
fld
stc
fstp
fwait
jmp
inc
imul
out
and
adc
adc
cli
imul
jge
push
xor
sub
rcl
pop
add
add
jmp
pop
popa
xchg
or
pop
sub
or
cmp
retf
xlat
inc
retf
cmp
in
mov
rcl
pop
mov
mov
loopne
loope
stos
movs
xchg
adc
lods
ficomp
in
mov
shl
sub
mov
dec
lods
add
in
daa
jbe
and
mov
add
dec
mov
ret
xchg
jecxz
sbb
and
pop
and
not
sbb
cmovs
not
loop
pop
cmp
sub
cmp
adc
push
retf
lahf
push
adc
inc
dec
jmp
or
xor
sub
xchg
sbb
xchg
mov
outs
xor
call
push
dec
sub
add
pop
call
mov
add
pop
jno
dec
ret
push
call
and
call
or
dec
rol
inc
ror
iret
pop
or
push
push
jne
mov
inc
sbb
sbb
mov
mov
retf
es
or
sahf
xchg
aas
inc
scas
out
icebp
push
add
xor
mov
outs
ds
loopne
push
inc
or
add
sbb
inc
jle
je
cmp
cs
inc
xor
adc
sbb
mov
jo
pop
xor
xor
outs
pop
mov
mov
(bad)
or
adc
bound
sub
push
test
cli
jmp
and
int3
adc
movs
mov
or
stc
shr
je
icebp
movs
adc
dec
mov
add
and
(bad)
arpl
push
cli
push
mov
je
test
and
add
(bad)
cmp
adc
dec
push
sub
add
ins
adc
cmp
and
dec
pop
mov
or
jmp
mov
(bad)
sub
(bad)
mov
pop
or
add
jne
mov
sub
lods
adc
arpl
cli
sub
sub
adc
lds
xor
pop
pop
arpl
and
gs
and
fmul
(bad)
not
add
iret
mov
enter
jnp
sub
push
jbe
stos
ins
mov
inc
pushf
in
dec
adc
loopne
je
popa
sbb
xor
push
cmps
fwait
fwait
(bad)
push
adc
movs
mov
push
imul
fbld
jno
dec
mov
sub
scas
sub
call
add
add
ins
mov
leave
add
sbb
dec
xor
sbb
cmp
cmp
sub
add
shl
mov
and
push
mov
call
mov
sub
push
or
daa
jp
dec
push
mov
loope
(bad)
mov
nop
scas
(bad)
cmp
inc
mov
cld
(bad)
sub
sbb
pushf
aas
jp
xor
stos
les
sbb
jmp
and
sbb
inc
lock
lahf
dec
inc
movs
sub
add
lea
and
inc
xor
xchg
lds
in
push
jno
inc
inc
fistp
xchg
pop
dec
pop
jnp
mov
or
outs
mov
xchg
pop
gs
pop
sbb
or
data16
(bad)
ins
test
pop
lea
cmc
dec
xor
add
sub
and
mov
cmp
inc
dec
lods
mov
xor
or
imul
inc
sub
shr
xor
cmp
adc
sbb
jp
jae
dec
pushw
mov
and
pushf
adc
adc
or
mov
std
sar
or
push
jg
add
add
fld
mov
mov
jle
pop
popa
add
mov
daa
mov
adc
inc
dec
sub
lock
dec
loopne
shl
loopne
add
cmps
sub
mov
(bad)
call
out
pop
jmp
cmp
je
mov
test
jbe
pop
adc
fucomip
xchg
add
or
push
or
sub
pop
je
leave
jnp
movs
cwde
jbe
cmp
cmp
mov
je
cmp
xor
scas
sbb
mov
sbb
pushf
xchg
dec
test
in
xchg
or
mov
sbb
inc
jbe
add
and
or
cmp
cmp
mov
out
mov
outs
push
inc
popf
pop
mov
test
lods
adc
inc
inc
popf
scas
iret
add
test
add
rcr
in
scas
or
bound
pop
and
mov
out
and
bswap
xlat
mov
mov
jns
bound
ret
add
aam
xor
fs
popf
xchg
dec
xchg
test
call
sar
ficomp
sbb
cmp
cmps
sbb
nop
addr16
dec
out
sub
or
sbb
cmp
sbb
sbb
(bad)
pop
das
mov
push
fisubr
mov
xchg
call
loop
mov
add
inc
pop
daa
mov
or
xchg
add
cs
mov
iret
sbb
imul
aas
adc
or
(bad)
add
push
aaa
xchg
ins
dec
(bad)
mov
out
xchg
adc
inc
and
or
popa
add
and
imul
jne
je
ret
pop
(bad)
sbb
xchg
jne
cmp
mov
les
scas
cmp
push
or
test
pmulhuw
xor
cwde
mov
test
or
mov
lahf
add
stc
mov
(bad)
arpl
mov
push
aas
(bad)
mov
pop
sar
jae
mov
jae
hlt
inc
mov
rcr
inc
popa
sbb
(bad)
retf
repnz
sbb
rcr
inc
mov
push
add
pop
pop
mov
mov
push
adc
push
pop
add
and
jg
jp
jmp
mov
aas
push
add
add
inc
mov
in
xlat
and
xchg
aas
in
lahf
dec
mov
jmp
mov
outs
sub
nop
mov
jl
pop
mov
fcmovu
sub
xor
in
adc
je
push
fs
outs
and
call
sbb
pop
ret
push
and
add
xchg
adc
push
sbb
xchg
and
push
add
push
call
pushf
push
adc
in
mov
ins
xlat
imul
xor
cmp
add
sysexit
mov
clc
inc
(bad)
ret
(bad)
clc
adc
push
push
inc
adc
lds
and
push
fwait
mov
push
xchg
mov
in
xchg
sbb
mov
push
mov
or
add
call
push
push
outs
icebp
dec
clc
dec
adc
jmp
or
sahf
sub
push
fnstcw
(bad)
mov
sbb
mov
inc
stos
cld
inc
test
or
push
imul
out
rcr
mov
in
push
xor
inc
pop
push
rcl
mov
inc
ror
test
xor
adc
inc
mov
cli
mov
fadd
or
pop
or
dec
dec
push
inc
lds
xor
mov
popf
lea
mov
idiv
icebp
cdq
cmp
je
or
pop
or
sbb
or
xchg
cmp
mov
push
(bad)
and
jle
jne
add
sti
mov
and
clc
jne
sub
xlat
xchg
and
mov
xchg
mov
nop
jo
push
pop
into
xor
hlt
push
shr
pop
xlat
push
je
nop
test
fisub
or
dec
sub
fistp
aaa
out
ret
jmp
cs
mov
(bad)
jne
bound
retf
sti
scas
inc
dec
push
pop
dec
dec
inc
mov
fwait
cmp
cmp
or
out
adc
ret
rcl
pop
sub
or
push
or
inc
std
mov
adc
dec
jne
shl
and
inc
push
push
push
ret
sub
ror
mov
mov
mov
xchg
or
push
jo
cs
or
test
or
jmp
add
fbstp
inc
sub
mov
mov
ds
cmp
cmp
xchg
je
add
sub
sbb
cli
sbb
inc
dec
das
mov
push
jns
push
push
adc
clc
arpl
sbb
jnp
retf
sub
out
or
dec
mov
dec
repnz
adc
pop
and
add
imul
cmp
and
(bad)
xchg
jle
fisubr
mov
push
push
test
pop
mov
or
jle
pop
das
in
sbb
adc
das
push
dec
adc
dec
ins
xor
push
push
sbb
dec
or
pop
ins
fadd
retf
inc
dec
add
dec
push
xchg
dec
add
cs
xchg
push
inc
or
cmp
push
in
in
outs
jbe
xchg
and
cmp
or
dec
add
dec
cmp
and
inc
ret
inc
mov
mov
xchg
inc
sub
dec
push
sub
mov
pop
adc
in
mov
mov
fdivr
clc
mov
and
mov
push
bound
cli
lds
out
gs
and
(bad)
mov
inc
add
inc
dec
jecxz
adc
fbld
push
loop
(bad)
mov
imul
or
adc
mov
ret
mov
(bad)
adc
add
adc
mov
xchg
scas
xor
cmps
popf
mov
add
cmp
jp
pop
mov
or
outs
sahf
mov
adc
dec
dec
mov
fsubr
inc
sub
jmp
add
lds
int
or
and
pop
mov
mov
cmp
dec
ror
rcr
inc
pusha
ss
pop
mov
mov
call
pop
es
sbb
adc
fsubr
hlt
hlt
add
sub
and
clc
mov
mov
mov
sbb
rol
sub
add
or
adc
scas
xchg
xor
movs
ret
pop
mov
jl
add
sar
pop
mov
and
movs
mov
sub
dec
and
pop
and
loop
sbb
xchg
cmp
cmp
sub
push
rcl
pop
add
sbb
aaa
(bad)
mov
inc
cmps
add
and
push
imul
dec
adc
retf
mov
and
scas
jg
or
cmp
movlps
rol
xlat
sahf
pop
jmp
mov
or
inc
adc
sbb
mov
or
shl
outs
inc
adc
inc
into
push
rcr
repnz
sar
push
out
mov
sbb
sbb
dec
pop
jnp
xchg
dec
xchg
sahf
or
jecxz
data16
mov
nop
add
pop
ret
sub
cmp
in
or
jnp
and
dec
adc
daa
imul
adc
test
and
fmul
pop
pusha
cmp
xchg
sbb
das
or
push
fcom
cmp
rcr
add
arpl
xchg
push
popa
(bad)
rcr
cmp
xchg
mov
adc
(bad)
adc
outs
dec
fimul
push
cmp
je
mov
push
pop
(bad)
iret
mov
and
inc
push
and
xor
pusha
and
cmp
mov
xchg
arpl
or
lods
mov
push
jo
push
in
outs
or
pusha
add
adc
call
cmp
jge
dec
(bad)
call
dec
sbb
add
les
and
sbb
fadd
jmp
faddp
and
inc
cmps
xchg
aam
mov
bnd
add
test
sbb
je
jl
mov
in
lahf
sbb
or
sbb
pop
pushf
xor
adc
repnz
lahf
or
dec
jnp
mov
push
add
or
mov
sar
add
(bad)
fld
xchg
or
adc
in
movs
ins
bound
or
leave
xor
into
or
mov
or
xchg
push
pusha
loopne
or
loop
adc
dec
mov
loopne
sbb
test
xchg
mov
or
sub
test
jmp
call
cld
std
and
je
mov
mov
ja
out
dec
and
mov
arpl
mov
or
sbb
loop
xor
jnp
adc
mov
push
and
push
add
mov
mov
mov
es
pop
je
mov
mov
cmps
adc
cmp
or
nop
cdq
sbb
mov
(bad)
mov
dec
and
push
jo
dec
xchg
movsx
sub
jns
pop
pop
pop
sub
xchg
or
pusha
jnp
out
xchg
cmp
data16
xchg
adc
setg
or
fcomp
in
push
dec
add
or
or
cmp
nop
in
jp
enter
or
mov
das
xlat
imul
(bad)
imul
cmp
push
inc
xor
fisub
mov
xor
jno
mov
mov
adc
je
cli
ror
push
clc
jge
mov
leave
je
push
mov
(bad)
dec
push
push
rcl
stc
test
test
lahf
call
xchg
dec
das
mov
inc
repz
adc
inc
sbb
clc
rcl
add
leave
xor
sub
rol
dec
mov
adc
pushf
retf
(bad)
aad
mov
xchg
add
cmp
dec
test
cmp
test
dec
jmp
xor
add
xlat
fsub
aad
pop
pop
js
and
sub
xor
std
xor
mov
(bad)
pop
sub
out
add
imul
push
adc
dec
movs
daa
js
mov
add
loopne
xor
aas
imul
pushf
cmp
pop
mov
jno
sub
push
setae
jcxz
mov
xor
adc
fidiv
(bad)
adc
cmp
scas
lahf
xor
xchg
inc
add
or
adc
adc
xor
dec
fisttp
adc
and
inc
bound
(bad)
xor
sbb
xadd
cmps
outs
sub
or
mov
sub
and
inc
or
ret
js
xchg
std
pop
cld
add
push
popa
xchg
enter
push
adc
xor
xor
inc
jle
mov
aad
inc
pusha
mov
ins
sub
jecxz
nop
psubsw
fsubr
and
add
push
jp
jbe
sub
mov
add
(bad)
push
jne
pop
mov
xchg
add
stos
adc
pop
and
jl
mov
mov
scas
jo
test
stc
mov
xor
mov
(bad)
adc
jne
mov
ret
inc
push
jns
push
mov
pop
bound
inc
sbb
xchg
mov
pop
ror
jge
daa
pop
xor
mov
clc
dec
xor
cli
mov
add
jbe
add
cmp
icebp
sahf
addr16
dec
mov
inc
repnz
sbb
pop
int
jg
dec
adc
dec
or
mov
cmps
pusha
hlt
lock
mov
pop
lods
jmp
inc
mov
call
fpatan
push
adc
adc
adc
adc
mov
xchg
sbb
(bad)
xchg
iret
sub
sbb
jo
jne
mov
fiadd
pusha
cmp
aas
or
adc
mov
fild
fmul
fild
fsubp
xor
mov
out
mov
adc
fwait
lea
fstp
mov
(bad)
push
sbb
push
fucomp
adc
and
add
mov
lea
loope
rcl
jb
adc
cmp
ja
sbb
push
mov
push
cmp
fs
sbb
inc
mov
shr
push
repnz
xchg
pop
xor
lahf
add
add
add
add
add
hlt
and
dec
nop
aaa
xchg
test
jno
jecxz
mov
not
sbb
jmp
rol
pop
xor
push
mov
shl
push
mov
pop
popa
adc
ficomp
lea
dec
adc
sub
ja
imul
jmp
sub
mov
sbb
cmp
jge
mov
sub
jb
outs
add
test
cdq
add
lahf
jns
fs
add
lea
or
sbb
jl
add
cmps
pop
sbb
ja
dec
sub
mov
nop
and
loopne
and
adc
ins
scas
push
arpl
loope
(bad)
pop
loope
dec
movs
add
jmp
sbb
jo
xor
push
dec
mov
scas
fiadd
cs
setnp
adc
sti
push
sbb
push
call
ret
cmp
push
aaa
int
adc
dec
enter
sbb
(bad)
cmp
(bad)
aaa
call
push
loopne
in
or
or
adc
mov
mov
or
sub
shr
adc
xchg
shr
(bad)
call
stos
adc
add
cli
adc
push
les
push
add
adc
add
aaa
rol
jns
in
jne
or
(bad)
jp
inc
add
add
je
and
retf
jo
loop
imul
push
ss
gs
test
mov
sub
outs
sti
and
inc
fisubr
push
or
mov
ficom
dec
call
mov
dec
mov
adc
sbb
mov
jle
cmp
in
sub
loope
pop
loope
push
adc
add
lods
inc
shl
jmp
cmp
in
pop
inc
or
fsubr
or
add
fistp
inc
sub
jecxz
jmp
cli
pushf
xor
push
pop
mov
mov
gs
call
ja
call
in
inc
int
lahf
mov
sti
jmp
mov
mov
or
mov
xchg
or
mov
dec
fs
fwait
sbb
inc
push
fcmovu
mov
dec
xor
retf
stc
inc
push
mov
sbb
in
mov
js
or
add
push
adc
repz
js
jne
pop
push
push
pop
stos
js
call
std
push
(bad)
mov
and
or
lock
rcl
sbb
iret
mov
sbb
push
sub
icebp
cs
cmp
cmp
in
sar
sbb
inc
xor
add
movs
mov
sub
repnz
push
cmp
lods
push
mov
add
add
ret
cwde
fcomi
push
add
inc
mov
pushf
rol
std
adc
and
inc
bound
push
dec
int3
adc
jo
dec
rol
or
or
loopne
(bad)
cmp
aas
cmc
mov
popa
add
sub
ins
mov
aaa
(bad)
push
push
push
xchg
pop
xlat
cdq
xor
ins
xor
and
iret
mov
movs
shl
retf
jb
daa
sub
jle
int3
shr
xor
(bad)
dec
dec
cmp
cmp
mov
inc
or
adc
mov
xchg
out
outs
xor
xor
add
xor
cmp
je
syscall
adc
or
pop
jmp
inc
push
cmc
out
cmps
lock
je
push
in
add
cmp
jbe
ins
iret
ror
xchg
int3
daa
adc
cs
sub
enter
or
or
or
or
push
fnstsw
cmp
add
(bad)
cmp
inc
call
push
jmp
xchg
jns
sbb
or
in
loopne
sub
pop
sub
mov
or
pop
jmp
sub
push
or
or
add
push
or
les
rcl
nop
cmps
adc
or
mov
add
sub
push
fistp
imul
dec
mov
pusha
adc
lods
jb
aas
scas
push
inc
cmp
mov
ror
or
in
ins
mov
jmp
add
std
adc
enter
fwait
mov
repnz
inc
sub
dec
jno
sti
nop
xchg
sub
dec
dec
(bad)
or
push
mov
shl
inc
adc
(bad)
push
sbb
and
out
cmp
inc
ins
test
add
cmp
cmp
mov
xor
mov
xchg
pushf
je
mov
jge
arpl
(bad)
jle
jb
jmp
call
xor
add
or
jle
test
add
fmul
stos
cmp
add
ret
retf
sub
mov
es
repz
jg
xchg
cmc
sub
adc
(bad)
jmp
xor
ja
adc
inc
imul
sub
sbb
mov
(bad)
fisub
xor
call
hlt
jp
aam
pop
sub
and
fdivr
cmps
and
dec
inc
(bad)
popa
mov
ror
mov
test
loopne
or
adc
dec
xchg
enter
add
movs
outs
(bad)
(bad)
(bad)
cmps
clc
ja
jo
xchg
lods
fisub
add
je
adc
cdq
js
das
aas
mov
dec
pusha
ret
or
sbb
xchg
and
and
clc
xchg
adc
enter
sub
adc
lods
(bad)
ror
bound
inc
pop
not
pop
inc
movs
ret
dec
ja
mov
mov
add
cmp
cmp
jo
pop
add
mov
outs
push
or
sbb
dec
add
nop
or
inc
or
jne
dec
dec
cmp
test
sub
mov
add
dec
or
sbb
out
aas
inc
and
repz
ret
jne
das
aaa
or
in
sub
popf
push
arpl
fldcw
mov
outs
loope
cmp
jmp
mov
xchg
pop
sub
aam
or
add
rcr
cmps
lods
sar
dec
loope
xor
jg
outs
jg
adc
add
iret
push
inc
cwde
or
mov
pop
out
and
or
fadd
les
movsx
rcr
(bad)
or
ins
lds
xchg
mov
adc
mov
add
rcr
or
dec
add
imul
aam
and
xchg
and
dec
rcl
leave
jnp
push
and
mov
pop
fdivr
ret
ret
ss
sbb
pop
mov
adc
push
add
adc
pop
add
call
push
inc
das
pop
cmp
push
dec
mov
inc
sbb
pop
inc
test
and
ins
mov
jle
dec
call
cmps
dec
loopne
clc
ret
repz
and
enter
dec
into
lock
add
enter
out
sub
xchg
and
lahf
push
dec
adc
sub
mov
fiadd
and
inc
arpl
fadd
jne
leave
out
dec
fs
cmp
in
cmp
shl
(bad)
(bad)
sysenter
enter
es
pop
aam
inc
pusha
fist
rcr
dec
or
enter
mov
and
loopne
leave
dec
or
mov
call
and
xor
push
sbb
push
xchg
call
push
pop
adc
or
dec
push
inc
xchg
mov
popf
stos
jmp
adc
xor
out
outs
and
sbb
inc
aas
test
adc
popf
inc
xchg
jne
inc
mov
call
dec
push
add
lsl
jbe
xor
and
xor
add
fcom
add
xchg
mov
iret
push
jmp
xor
pop
ret
adc
inc
lock
outs
mov
enter
jmp
add
sub
or
or
adc
adc
sahf
xchg
aaa
mov
push
adc
or
out
pop
or
dec
xor
mov
loopne
loope
arpl
jne
test
in
pop
xchg
popa
sahf
or
mov
push
and
js
inc
fwait
pop
push
stos
ds
mov
je
pushf
push
push
inc
loop
adc
add
lea
jl
pop
mov
ins
and
test
retf
rol
sbb
bound
shl
or
mov
push
jo
sbb
mov
icebp
inc
daa
push
mov
add
loop
inc
sbb
push
loope
add
ja
push
aad
jbe
add
sub
lahf
mov
or
inc
add
addr16
fild
les
sbb
pop
add
es
popa
sbb
xchg
lock
in
lahf
mov
mov
push
sahf
mov
scas
jns
ret
push
das
popf
add
cs
push
inc
lahf
xor
inc
dec
or
jbe
adc
loope
dec
daa
or
xchg
or
add
test
mov
mov
lods
inc
call
cmp
sub
jl
xor
fwait
jge
adc
cld
xchg
mov
adc
mov
stos
mov
jne
lods
ss
pop
jne
mov
icebp
jb
and
sub
lahf
inc
push
or
cld
icebp
xor
sub
sub
push
add
or
xlat
mov
and
add
paddb
or
or
mov
add
ja
es
lea
dec
(bad)
fld
inc
push
imul
call
inc
je
dec
test
adc
pop
nop
mul
pop
pop
clc
fcom
fld
adc
or
push
loope
int
pop
or
push
fs
into
and
inc
xchg
imul
adc
xor
cmp
or
test
mov
cld
or
clc
pop
jns
or
inc
and
dec
or
imul
call
sub
pusha
mov
call
dec
or
xor
arpl
test
dec
ins
push
xor
aas
cmp
push
xor
add
or
push
shl
outs
adc
add
aas
shl
sbb
(bad)
cdq
push
push
adc
lahf
mov
pop
xchg
sbb
sbb
xor
sub
sub
mov
mov
(bad)
repnz
xchg
pop
cmps
sub
lock
sahf
enter
nop
pop
push
sub
and
adc
inc
jg
or
add
and
jae
adc
movs
sbb
dec
jg
icebp
mov
xor
dec
clc
mov
jg
mov
test
adc
lds
mov
jmp
or
add
dec
cli
imul
ins
cmp
push
add
gs
div
adc
or
or
add
mov
sub
sub
call
xor
and
xor
rol
and
out
outs
or
sub
loopne
adc
dec
je
call
push
jmp
repz
in
aam
int
xchg
add
daa
jmp
sbb
js
sti
or
sbb
adc
push
jns
or
jmp
dec
ins
mov
(bad)
out
ror
pop
data16
dec
push
jb
sbb
aam
mov
xchg
arpl
and
shl
sbb
ins
or
dec
sbb
cmp
mov
aad
and
shl
retf
inc
mov
sbb
sbb
ror
cmp
es
test
or
ret
mov
adc
out
xchg
dec
fidiv
push
inc
jne
xor
or
cmp
mov
scas
loopne
pushf
mov
inc
sbb
xchg
sub
dec
xor
(bad)
push
test
push
jno
lock
mov
sbb
cmp
or
stc
pop
xor
loop
mov
xor
dec
mov
sub
mov
(bad)
or
inc
or
(bad)
scas
fsub
push
movs
data16
movs
loop
hlt
loop
sbb
mov
push
push
add
and
call
jo
int
icebp
movs
jo
ror
(bad)
push
jl
and
or
adc
lea
adc
pusha
adc
xchg
mov
pop
test
cmp
mov
pop
mov
push
or
stos
stos
lea
test
add
imul
test
mov
or
retf
xchg
fld
and
sbb
xchg
pop
into
call
mov
dec
or
xchg
cmp
repz
in
mov
dec
sbb
ss
int
push
gs
jbe
cld
push
cwde
aaa
in
jne
shl
(bad)
mov
dec
movs
push
mov
push
pop
mov
jns
pushf
aam
mov
test
shr
cwde
hlt
mul
sbb
pushf
ret
push
jno
rol
call
data16
mov
dec
imul
mov
aam
ja
(bad)
pop
jge
addr16
mov
imul
sbb
sar
not
xor
daa
fs
out
test
test
ret
iret
add
aam
je
popf
imul
lahf
jnp
js
mov
in
cmp
retf
adc
adc
test
paddb
outs
ds
mov
pop
jmp
sbb
pop
ja
jmp
xor
imul
push
add
add
dec
ror
shr
call
mov
dec
inc
add
cmp
setle
in
inc
inc
es
dec
pop
mov
xchg
inc
dec
adc
push
loopne
adc
inc
mov
repnz
or
cmp
es
ffreep
pop
lea
sub
(bad)
loop
cmp
jmp
push
or
ins
mov
and
sbb
or
xor
dec
and
xor
dec
imul
sub
fist
xor
test
inc
lea
popa
add
out
(bad)
add
and
adc
sub
cmp
sub
stos
jmp
aaa
hlt
jmp
xor
(bad)
sbb
clc
push
adc
sar
nop
mov
jmp
mov
or
sbb
add
jns
aaa
lock
add
leave
leave
and
or
pushf
mov
jns
xchg
fs
loopne
and
push
cmc
movs
add
sub
rcl
push
jne
icebp
mov
sub
test
dec
sub
aaa
loope
shl
or
sub
outs
and
or
mov
leave
popa
or
pop
fisubr
fs
pop
add
cmc
out
inc
(bad)
lock
scas
not
lods
sub
repz
jp
pop
out
push
call
push
and
jp
jns
fwait
inc
ret
and
loope
mov
mov
sbb
push
or
or
xor
adc
push
sbb
rol
mov
adc
cmp
jo
xchg
lea
rol
mov
mov
sub
inc
dec
pop
add
sub
pcmpgtb
jo
pop
lods
movs
das
xchg
push
mov
inc
xchg
cmovno
add
jb
mov
call
push
sti
stos
(bad)
jo
inc
push
sub
sub
inc
and
test
inc
push
ret
inc
cmp
jnp
add
pop
adc
aaa
hlt
fmul
hlt
test
mov
ja
mov
and
jge
(bad)
sbb
cmp
pop
jne
and
ins
test
aaa
add
xor
clc
sub
out
sub
jg
push
mov
mov
jle
sbb
or
sub
xchg
dec
or
dec
push
cmp
mov
push
xchg
add
cmp
jge
shl
pop
push
sbb
icebp
or
lods
(bad)
sar
iret
shl
iret
mov
clc
sbb
and
mov
mov
inc
push
(bad)
outs
pop
xor
or
aam
jle
ds
cmp
sub
outs
cmps
jne
fild
pop
pop
add
push
push
inc
xchg
xor
sub
mov
loope
jo
or
pop
aas
xor
dec
mov
std
popa
push
popa
jne
push
mov
pusha
push
or
mov
add
adc
pop
sbb
aaa
dec
mov
pusha
sbb
push
(bad)
call
jmp
call
ret
and
movs
sbb
je
push
jb
sti
mov
jmp
pop
adc
add
and
ret
cmp
shl
mul
(bad)
xchg
or
and
cmps
pushf
popa
call
dec
test
das
jbe
sub
movd
sti
pusha
clts
cs
sbb
jae
jnp
(bad)
int3
inc
or
retf
or
rcr
pusha
push
out
lods
jnp
dec
pop
call
faddp
nop
or
fs
add
pop
inc
call
in
call
inc
xor
mov
test
mov
pop
pop
arpl
cmp
push
and
xor
adc
push
dec
sub
fdivrp
shl
(bad)
jmp
dec
push
dec
mov
jmp
xor
add
pusha
lods
in
pop
aam
nop
adc
mov
test
push
sbb
mov
test
sub
add
add
add
lahf
cmp
inc
cli
rcr
aas
adc
mov
xor
jne
mov
imul
loopne
fnstcw
cmp
mov
mov
jmp
mov
adc
leave
mov
push
xor
xor
fucomi
pop
add
sbb
jmp
test
adc
pop
xor
into
jg
push
fld
push
add
jne
lgs
ret
and
daa
cmp
xor
movs
or
add
xchg
adc
mov
mov
mov
rcr
dec
xchg
adc
xchg
jmp
sbb
mov
mov
loopne
pop
mov
cmp
and
adc
jne
call
sub
rcl
pop
or
std
dec
mov
adc
in
test
cmp
jne
inc
adc
mov
jmp
adc
pusha
xor
push
add
and
mov
call
adc
jmp
jno
ror
sub
xchg
pushf
adc
outs
jns
add
jecxz
lods
test
sub
push
jmp
les
inc
addr16
les
(bad)
cmp
(bad)
in
add
in
imul
add
push
or
pushf
ret
push
mov
xchg
xchg
mov
and
es
(bad)
pop
inc
xchg
call
cmps
push
and
pop
js
mov
sbb
mov
mov
add
add
jbe
jae
sbb
mov
push
or
lock
inc
addr16
in
sub
jmp
adc
sub
add
sub
cmp
adc
adc
in
add
add
cmp
add
inc
xchg
lea
sbb
push
(bad)
push
add
dec
sub
or
and
adc
cmp
or
dec
sub
(bad)
inc
or
inc
adc
sub
mov
lods
ins
jle
push
adc
dec
mov
lock
xchg
add
xlat
sub
sub
jp
cmp
inc
in
inc
add
push
sahf
lea
icebp
jp
sbb
and
test
inc
cs
call
jmp
cmp
cwde
inc
sti
lds
test
hlt
or
sbb
adc
xchg
jo
add
rol
sbb
inc
(bad)
fmul
sbb
out
push
ins
fcom
lea
xlat
gs
inc
pushf
mov
and
dec
cld
mov
popf
jno
push
inc
je
jbe
jbe
and
mov
(bad)
ds
icebp
lods
das
inc
inc
cwde
xchg
call
sbb
inc
dec
loopne
xor
movs
sahf
pushf
mov
fsub
inc
rcr
push
sub
xchg
shl
push
xlat
pop
cmps
or
addr16
push
push
dec
aad
add
xchg
xchg
sbb
mov
jmp
in
push
mov
dec
jg
xor
sbb
sbb
cmp
and
adc
pop
das
add
call
add
ja
sub
cmp
add
and
ins
sub
inc
and
jb
adc
jae
outs
ja
xchg
ins
xchg
jno
mov
pusha
dec
and
(bad)
adc
push
cli
mov
fist
or
pop
mov
lea
inc
arpl
add
test
sbb
mov
es
sub
cmp
mov
cmp
mov
pop
jge
inc
popa
jne
or
lea
or
cmps
lods
xor
mov
loop
push
add
shl
adc
mov
cmp
or
add
or
sub
dec
mov
xor
jge
mov
icebp
xlat
sbb
add
sar
lock
xor
mov
adc
mov
jbe
inc
cmp
xchg
mov
ins
adc
arpl
and
rcl
or
cmps
adc
std
popa
outs
loope
fs
pop
in
inc
pop
(bad)
jo
jge
sub
mov
inc
retf
jmp
push
shl
fnstsw
sub
adc
or
sbb
or
aaa
and
test
mov
and
add
call
dec
sar
push
and
push
hlt
jne
pop
mov
rol
cwde
fsubr
cmps
and
xchg
outs
add
(bad)
dec
adc
sbb
sbb
mov
and
inc
fild
aaa
(bad)
mov
call
mov
dec
xor
pushf
or
ret
sub
pop
pop
(bad)
sbb
xchg
sub
adc
adc
inc
call
dec
xor
push
jmp
add
stc
xlat
sbb
rcl
(bad)
je
scas
stc
mov
cmp
je
sbb
mov
xchg
nop
and
or
add
hlt
sbb
es
xor
cmp
add
mov
clc
add
aaa
rcr
jmp
jno
es
pushf
push
sub
sbb
imul
aas
pop
data16
sbb
xlat
lock
mov
sbb
jo
push
arpl
inc
mov
cmp
js
cmp
cmp
pop
xchg
aam
ss
jne
mov
fidivr
fadd
dec
jno
sbb
jmp
adc
mov
and
adc
inc
call
jno
xchg
add
sub
ss
shr
sbb
(bad)
shl
mov
sub
mov
xor
jecxz
sub
out
xchg
sar
push
aad
push
add
pop
imul
hlt
sub
inc
add
inc
xlat
shl
sub
add
or
xor
repz
or
adc
dec
bound
adc
xor
mov
aas
add
test
enter
mov
jnp
fist
push
shl
dec
ins
add
inc
xchg
cs
loop
sub
adc
ins
cwde
adc
scas
add
dec
and
cmps
mov
daa
cld
push
adc
test
xor
sbb
adc
inc
xor
dec
js
mov
cs
sbb
sub
or
jecxz
or
push
push
ins
add
add
push
cmp
mov
pop
adc
pop
adc
dec
sub
aaa
add
aas
and
cwde
or
or
xor
pop
mov
ins
not
mov
cmp
mov
push
or
and
jno
push
push
imul
loope
sub
add
mov
(bad)
and
mov
inc
call
call
cwde
push
test
mov
dec
imul
and
adc
dec
es
or
leave
sbb
and
and
rcr
(bad)
es
add
cmp
sbb
les
xlat
in
loope
(bad)
stc
xchg
mov
test
pop
rcl
mov
jb
add
mov
sbb
pop
stos
push
pavgw
popf
mov
retf
not
(bad)
sbb
pop
xor
sar
test
cmp
cdq
xor
xor
sub
cmp
cs
cmp
les
je
sbb
inc
mov
sbb
and
add
shl
(bad)
repnz
jl
arpl
pop
test
or
xor
ret
inc
mov
sbb
push
(bad)
mov
jl
push
call
cmp
js
das
jmp
adc
or
shl
or
add
xor
and
aaa
popa
cmps
fimul
inc
push
inc
lock
xchg
cwde
jb
test
adc
dec
je
cmp
fs
inc
xor
and
push
inc
adc
or
movs
sub
and
es
xor
pushf
adc
mov
mov
out
adc
jp
pusha
leave
push
xor
(bad)
cwde
mov
push
dec
rcl
dec
sbb
movs
xlat
cmp
adc
sub
sar
push
xchg
push
push
jl
or
out
jbe
pop
push
add
cmps
loopne
jl
(bad)
shl
fistp
or
or
or
mov
sub
add
sub
add
(bad)
cmc
add
sbb
inc
dec
out
inc
sub
dec
inc
popf
xchg
repz
test
add
inc
push
pop
xor
inc
add
sub
loope
push
and
aam
test
dec
cmp
cmps
mov
push
adc
cmp
data16
push
add
mov
fdivr
pop
mov
in
enter
pop
xor
mov
shr
mov
in
fldenv
push
repnz
scas
loope
push
mov
xchg
unpcklps
in
xchg
sbb
sbb
mov
pusha
fwait
inc
test
mov
dec
sbb
pop
shl
les
(bad)
loopne
jmp
push
xchg
aam
add
jmp
cmps
(bad)
cmp
out
sub
inc
arpl
or
jp
mov
ficomp
xchg
inc
add
cmp
rol
and
call
hlt
popf
neg
in
sbb
sbb
ret
inc
sbb
mov
popw
setae
mov
mov
repz
loopne
jo
inc
jo
or
je
push
shl
push
sub
xor
sub
xor
sub
push
or
push
les
pop
and
pop
adc
jp
mov
mov
add
mov
jp
out
sbb
movs
push
imul
xlat
adc
inc
popa
pop
cld
(bad)
enter
pushf
lock
sbb
sbb
dec
js
pop
fs
lods
jns
or
and
cmp
sub
pop
ins
sbb
aaa
inc
aas
mov
push
add
or
adc
push
add
sbb
jo
lea
inc
js
push
stos
es
sub
mov
inc
and
scas
mov
call
rcl
mov
and
enter
daa
pop
push
add
daa
aas
and
add
jmp
add
pop
jl
jae
inc
dec
or
add
jb
imul
shl
and
push
call
repz
sub
or
scas
sbb
imul
loop
and
or
(bad)
cmp
xchg
mov
cmp
adc
int
xor
or
sbb
add
push
pop
pop
xchg
in
add
add
adc
adc
adc
inc
inc
or
xor
push
add
out
mov
push
loop
ins
ins
fnstcw
sbb
shl
les
lahf
mov
jge
imul
(bad)
out
mov
dec
adc
push
adc
mul
pop
pop
or
add
or
ret
adc
xor
sub
add
pop
mov
cmp
adc
xchg
idiv
jns
and
and
add
mov
imul
inc
cmp
leave
push
arpl
pusha
les
stos
enter
iret
mov
inc
add
call
je
movsx
sbb
jo
sbb
pop
lahf
mov
add
cmps
push
inc
fadd
sub
adc
mov
cmps
lock
mov
cmc
push
xor
xchg
daa
or
mov
daa
push
inc
mov
(bad)
xor
push
sbb
inc
push
inc
lods
jo
popa
imul
push
adc
pop
xor
lahf
ret
and
(bad)
push
adc
xchg
push
cmp
test
dec
xchg
test
and
adc
sub
punpckhdq
push
pusha
xor
xchg
xchg
adc
dec
add
ds
inc
xlat
inc
lods
in
ror
jle
lea
sahf
mov
ret
dec
lock
popf
inc
cmp
and
or
test
adc
cmp
aad
loop
pop
pop
xor
and
or
fisttp
repnz
ret
jns
movs
sbb
retf
or
adc
sbb
mov
test
pop
out
and
sub
mov
xor
mov
inc
inc
stc
mov
addr16
fucom
lods
ror
mov
call
pop
jo
movs
das
add
aas
mov
popw
xor
iret
push
hlt
jmp
adc
adc
cmp
xor
rcl
test
push
push
cmps
pop
mov
in
add
les
dec
lods
push
movs
mov
retf
(bad)
cdq
cld
mov
ja
or
jge
out
adc
loopne
or
sbb
mov
rcr
or
pop
inc
loope
pop
inc
cwde
xchg
aam
aaa
loopne
stos
dec
stos
lds
ins
inc
shl
sbb
push
lods
fnstcw
dec
xchg
fsubp
addr16
jecxz
push
xor
retf
daa
cmp
lock
mov
add
mov
mov
pop
rcl
add
test
xor
mov
es
push
add
adc
pop
and
out
and
lahf
in
je
mov
xor
jno
jne
push
sbb
or
sbb
add
cmp
cwde
adc
icebp
dec
arpl
jno
pop
imul
xchg
xchg
pop
mov
adc
cmp
add
sub
es
mov
aas
sub
add
out
xchg
jbe
cmp
cld
sub
mov
cmps
div
and
push
pop
push
cmp
lea
cmp
inc
add
or
and
std
push
xchg
test
fadd
add
mov
cmc
mov
enterw
lods
and
cmps
xor
sbb
mov
loopne
(bad)
add
dec
(bad)
push
les
out
or
mov
dec
jecxz
ror
mov
or
adc
jecxz
dec
xchg
pop
add
lock
sbb
call
pop
int3
push
mov
xchg
mov
stc
mov
jb
out
sbb
cmc
imul
neg
gs
je
js
inc
sbb
add
sbb
movs
inc
mov
jnp
mov
jg
inc
mov
scas
ficomp
data16
sbb
push
jb
inc
nop
iret
jmp
adc
fs
in
mov
aas
inc
sahf
or
adc
adc
pop
int
push
cmp
aam
mov
pop
mov
xor
nop
xchg
aam
pop
test
sbb
rcl
je
fdivr
and
pop
je
rol
and
mov
dec
xor
or
sar
adc
push
and
fst
icebp
push
push
fld
xchg
jne
pop
aam
sbb
vprotb
push
maxps
lock
loopne
loop
sub
or
jecxz
js
mov
sub
retf
jno
cmp
adc
sub
das
fnstcw
pop
inc
pusha
push
or
push
and
pushf
pop
dec
mov
pop
sub
or
adc
lods
cmp
push
mov
ret
cmp
jae
retw
fimul
or
add
test
pop
cmp
xchg
es
(bad)
and
ror
in
push
xchg
mov
jecxz
sbb
pusha
das
call
lds
mov
jge
sub
imul
int3
sub
mov
jl
test
jne
popf
js
dec
mov
add
or
inc
push
div
inc
pusha
cs
add
xor
push
mov
add
sbb
lds
outs
add
sub
pop
pop
jo
or
fistp
xor
jo
cmp
(bad)
pop
fcomp
das
into
rcl
push
or
xor
lds
xchg
imul
jmp
dec
cmp
sbb
fs
cmp
ret
sub
inc
sbb
inc
xchg
add
push
in
nop
mov
mov
or
jle
push
fadd
rol
stos
mov
xchg
fisub
repz
js
xor
fidivr
test
dec
cmp
jg
adc
mov
inc
mov
ret
add
dec
xchg
scas
inc
mov
pop
push
xor
push
sti
stos
dec
add
pop
mov
xchg
xor
mov
dec
test
imul
pushf
mov
les
xor
pop
and
dec
(bad)
dec
sub
les
or
sbb
xchg
mov
pop
pop
sbb
sub
es
xor
(bad)
xor
add
xlat
pop
je
(bad)
jo
xor
adc
mov
dec
add
das
dec
loopne
dec
or
or
push
cli
jnp
or
pusha
daa
adc
adc
adc
aam
xor
pop
ins
les
sub
test
jnp
(bad)
pop
call
push
and
cli
xor
cmp
test
retf
sub
(bad)
push
(bad)
sbb
outs
push
stos
jne
lods
and
jg
shl
push
aam
adc
lods
and
pop
jmp
cmc
je
inc
xor
xor
add
cwde
(bad)
jno
dec
dec
test
inc
inc
adc
mov
mov
pop
(bad)
rol
sar
sub
ret
stos
sbb
int
lahf
inc
add
or
add
retf
xchg
mov
add
movs
add
mov
std
cmp
lods
dec
add
cs
and
cmp
inc
add
clc
sbb
cs
sub
push
je
dec
popa
repz
add
pop
jmp
add
jb
xchg
icebp
dec
retf
rcl
mov
mov
out
dec
add
fldenv
test
mov
test
xor
add
loopne
push
mov
data16
adc
popa
add
push
aaa
sar
(bad)
pop
inc
lds
pop
(bad)
dec
and
iret
jae
sbb
jmp
or
jne
push
iret
adc
cmps
movs
cmp
push
inc
test
push
or
and
out
add
or
lods
sbb
adc
retf
adc
and
and
dec
adc
lds
repnz
sbb
push
(bad)
pushf
or
test
adc
jne
push
or
loop
retf
jge
data16
jmp
or
loope
xchg
cmp
inc
aam
push
imul
popa
pop
pop
rol
cmp
xchg
inc
add
dec
das
pop
mov
int
outs
mov
pop
and
cwde
sbb
lods
nop
push
loope
in
dec
shufps
in
pop
jecxz
mov
icebp
enter
pop
push
adc
test
pop
and
dec
arpl
je
mov
mov
push
push
popa
mul
stos
cli
add
mov
mov
(bad)
sbb
add
jno
test
imul
das
hlt
out
add
imul
push
xor
or
or
sbb
or
xchg
test
push
ins
(bad)
data16
add
inc
or
xor
idiv
into
jle
in
inc
jmp
retf
jne
cmp
xor
out
add
cmps
xor
inc
and
popa
xchg
sub
or
xchg
adc
pusha
mov
rcr
cmps
ds
arpl
mov
adc
cmp
ror
into
push
cmp
inc
sub
js
add
les
(bad)
sub
icebp
and
and
sar
xchg
dec
leavew
sbb
push
cmp
cmps
cmp
test
push
dec
xor
jge
push
sbb
sar
mov
adc
jle
and
test
rcl
adc
pop
movs
sub
shr
xchg
les
or
push
xor
push
movs
add
js
mov
jo
pop
ror
push
ret
out
inc
movs
inc
aaa
jb
push
dec
jnp
pusha
push
(bad)
fcomp
add
mov
sar
cmp
sbb
mov
scas
push
push
sar
pop
fist
dec
cmp
add
pop
scas
pop
int3
mov
ror
pop
add
rol
fdiv
xor
cli
and
dec
sti
add
pop
or
inc
js
xchg
fcomip
ret
or
or
pop
sub
pusha
xchg
or
or
dec
add
adc
(bad)
in
cmps
push
or
fist
ror
daa
push
xor
add
or
aam
sbb
push
adc
es
das
jne
out
sbb
xor
pop
ja
ffree
je
sar
xor
pop
mov
fcomp
pop
jmp
push
cwde
(bad)
dec
inc
dec
loopne
or
mov
or
mov
push
cwde
or
adc
repz
and
pop
inc
sub
mov
das
loope
nop
mov
test
mov
out
inc
fcmovnbe
sub
test
jp
sub
mov
addr16
or
adc
int3
popa
daa
or
mov
mov
inc
lahf
dec
fidivr
inc
push
jge
call
xlat
push
lahf
(bad)
sbb
sub
and
sub
pop
ins
sbb
lds
ret
nop
ins
lods
adc
femms
add
enter
data16
push
mov
mov
add
pop
xor
or
inc
fs
sub
stc
and
push
mov
bound
lahf
lock
clc
xor
cmp
sbb
(bad)
cmp
ja
clc
add
aad
xlat
or
cdq
add
lods
or
aas
ins
push
pop
jo
cmp
xchg
cmps
das
mov
jmp
ret
dec
push
movs
add
push
ins
das
xchg
or
mov
les
mov
je
add
cs
add
sbb
push
xor
cs
loopne
and
clc
sub
test
or
xchg
jmp
mov
inc
(bad)
sub
dec
or
add
les
imul
jae
adc
mov
test
out
and
push
daa
cmp
aam
add
movs
rcl
mov
imul
mov
icebp
cld
xchg
test
dec
sti
mov
(bad)
les
popf
hlt
in
xchg
lock
fwait
and
cmp
loopne
xchg
push
xlat
sbb
pop
add
sti
push
les
push
enter
lock
mov
or
adc
xchg
call
adc
cmp
mov
mov
jg
mov
or
lds
cmp
dec
inc
pushf
pop
push
cmp
test
pop
in
hlt
lahf
jle
lods
push
xchg
std
xor
push
adc
cmc
lock
retf
les
sar
mov
and
js
out
sti
dec
jge
xor
inc
adc
lea
loop
inc
dec
lods
pop
out
ror
mov
mov
outs
loope
push
xchg
mov
sub
into
pop
(bad)
push
or
jbe
push
push
or
mov
pusha
pop
daa
adc
mov
adc
jecxz
or
adc
mov
adc
adc
movs
cmp
dec
add
sub
pusha
sbb
bound
push
add
scas
call
or
inc
push
pop
xchg
mov
ins
inc
sub
stos
sub
hlt
aas
dec
sub
dec
scas
sub
sub
xchg
ins
retf
and
in
or
pop
cmp
hlt
sub
gs
add
clc
lock
push
jns
or
or
call
movs
data16
inc
ins
jmp
mov
int3
or
cdq
mov
dec
pop
inc
jl
imul
xor
xor
loop
mov
xchg
ds
xor
push
xor
sub
shl
inc
sbb
mov
mov
jmp
mov
or
dec
cmp
add
fstp
mov
xor
pop
in
sbb
cmova
sub
inc
jmp
rcr
popf
add
cs
or
fadd
lods
sub
adc
add
mov
retf
inc
js
xchg
xchg
jl
cs
mov
jns
push
push
dec
or
imul
xchg
pop
add
sub
inc
jl
push
mov
mov
jmp
sbb
xor
jbe
jle
sar
dec
dec
or
loopne
adc
das
das
or
mov
adc
and
or
fdivr
adc
mov
rol
mov
sbb
adc
adc
in
jns
or
sub
into
adc
repz
mov
mov
loopne
mov
dec
jl
jle
sbb
cmp
and
xchg
jbe
xlat
xchg
fmul
or
dec
imul
cmp
clc
sbb
push
sbb
aam
aam
les
add
into
or
jb
sub
add
and
add
test
aaa
loopne
das
mov
or
inc
mov
ins
mov
jge
iret
and
mov
add
test
add
mov
mov
test
cld
xchg
sti
popa
mov
mov
fisttp
out
inc
xchg
jl
dec
inc
add
dec
imul
mov
repz
dec
fiadd
push
sbb
mov
or
xchg
lea
sbb
not
jns
mov
nop
inc
cmp
movs
nop
cmp
dec
mov
add
sbb
(bad)
popa
sub
mov
icebp
fmul
mov
sub
call
sub
inc
sub
sub
jmp
mov
mov
inc
inc
pop
icebp
push
push
and
ins
aaa
loopne
push
mov
es
jnp
pusha
pop
inc
dec
or
mov
rcl
add
cmp
stc
push
rcl
gs
in
xchg
sub
test
fmul
jns
aam
hlt
add
imul
add
ins
xchg
dec
mov
int3
call
push
mov
clc
ret
ss
in
arpl
cmp
or
sbb
inc
mov
mul
fistp
adc
je
dec
pop
outs
das
mov
or
jae
stos
jne
dec
les
and
dec
push
ds
ins
xacquire
hlt
pushf
aam
mov
adc
(bad)
imul
aam
inc
inc
sahf
inc
int3
aam
and
(bad)
cld
aad
sub
lea
mov
push
ins
ins
add
in
mov
mov
xchg
outs
aaa
fs
test
(bad)
mov
push
add
sub
adc
sub
mov
jp
pop
aam
add
rcr
nop
into
add
test
pop
ficom
xchg
mov
imul
or
adc
loopne
push
outs
ror
adc
in
call
or
fcomi
arpl
test
dec
sbb
jg
imul
fadd
jl
xchg
aam
jo
or
nop
mov
aam
fwait
sbb
cmp
cmp
aam
pop
pop
stc
lock
loopne
inc
sbb
xchg
setl
inc
pop
mov
xor
and
shl
push
adc
add
add
adc
sbb
ss
fs
popf
shr
(bad)
inc
ss
xor
out
or
or
add
adc
cmp
add
out
inc
sahf
add
cmp
add
jp
add
sbb
test
ret
clc
inc
imul
adc
xchg
sub
add
add
xor
imul
add
mov
mov
or
jmp
not
and
sbb
sbb
fwait
fwait
add
push
bound
aas
jo
xor
mov
cmps
clc
pop
xchg
add
(bad)
lods
adc
xchg
pop
leave
repnz
mov
dec
jmp
enter
dec
and
adc
pop
adc
enter
(bad)
call
xor
add
mov
or
in
inc
xchg
or
or
and
jmp
xchg
mov
outs
mov
test
jns
pop
dec
inc
jo
mov
push
sbb
ret
add
xor
add
pop
repz
cmp
jne
adc
sub
aas
stos
add
and
(bad)
pop
adc
add
or
icebp
cdq
mov
inc
add
pop
jbe
js
mov
iret
push
adc
invlpg
cmp
jns
xor
sub
add
popf
xchg
shl
jbe
(bad)
or
add
call
into
pop
dec
jno
into
sub
mov
mov
lea
mov
and
mov
leave
sbb
or
loopne
add
and
inc
pop
pop
js
jno
dec
repnz
mov
add
cmp
mov
nop
inc
dec
inc
mov
push
add
movs
ficomp
test
jge
les
dec
jns
or
jg
pop
inc
outs
inc
mov
call
inc
dec
call
or
fisub
sub
dec
push
push
shl
enter
dec
pop
add
adc
stos
lods
adc
mov
adc
cld
rol
sbb
cmp
xchg
daa
add
int3
in
dec
fwait
rcl
and
sbb
add
neg
imul
(bad)
pop
or
pop
test
popf
in
xor
call
out
push
xor
ss
xor
and
adc
inc
inc
jmp
or
mov
sbb
lock
xor
mov
(bad)
sbb
xor
or
mov
sbb
push
lds
mov
or
pop
or
dec
outs
movs
es
push
(bad)
in
add
inc
test
push
cmp
mov
sub
inc
or
push
push
xchg
jno
pop
mov
add
daa
(bad)
jbe
sbb
test
sbb
xor
adc
movs
dec
mov
add
test
scas
jmp
mov
clc
sub
mov
paddb
lods
push
adc
sbb
sub
cmp
stc
xchg
mov
add
mov
xor
ror
and
js
fs
add
jecxz
movsx
mov
add
mov
scas
sbb
outs
sub
xchg
inc
add
std
out
xchg
sub
out
inc
or
add
sub
mov
cmp
idiv
mov
jecxz
xor
jecxz
push
jo
popa
(bad)
jg
push
or
jecxz
or
ret
scas
sub
(bad)
cmp
pop
inc
dec
not
xchg
push
ret
out
cmp
push
push
call
adc
test
cmovno
pop
ret
(bad)
and
mov
cmp
je
jne
aas
int
ds
fimul
push
(bad)
lock
push
ret
retf
mov
or
pop
mov
jae
adc
cs
or
call
in
adc
ins
jno
cmps
pop
and
pop
mov
fprem1
or
hlt
sub
(bad)
aad
and
add
jl
loope
lahf
das
je
pop
nop
pop
mov
mov
loope
jo
mov
mov
or
ret
jl
inc
ret
fld
push
dec
(bad)
xchg
sub
mov
(bad)
push
xchg
lock
in
xchg
or
or
(bad)
(bad)
pop
and
ds
sbb
mov
aaa
sar
enter
mov
fwait
pop
sbb
jno
mov
frstor
xor
xor
inc
or
push
cmc
lds
add
mov
jmp
ins
pop
or
retf
pushf
call
and
or
jp
push
push
sbb
inc
fs
xchg
sbb
adc
add
cmp
loopne
and
inc
inc
sar
sar
pop
add
push
mov
adc
inc
aaa
iret
sub
in
inc
repz
mov
inc
and
push
jmp
mov
push
xchg
dec
sar
jbe
adc
cmp
int
outs
mov
cmp
lea
inc
and
pop
or
xchg
add
mov
leave
fisub
and
sti
adc
out
and
nop
nop
jge
nop
inc
fnsave
jmp
push
or
enter
adc
(bad)
push
cli
fimul
add
inc
pop
jmp
call
push
loope
adc
test
push
sbb
inc
pop
popf
(bad)
lods
or
push
or
fadd
lods
cs
fldenv
inc
pop
fs
push
mov
jo
loope
inc
jne
ds
enter
outs
inc
dec
jne
into
inc
inc
adc
adc
adc
add
push
les
jmp
sbb
movs
dec
sti
and
mov
outs
add
push
stos
xchg
pop
xchg
sub
daa
jne
add
lock
jmp
test
sbb
iret
adc
fs
push
test
or
jg
or
cs
push
add
pop
pop
es
inc
jo
xchg
outs
rol
adc
and
xor
icebp
gs
cmc
adc
pop
inc
or
imul
add
jg
pop
mov
and
loope
dec
stos
aaa
inc
add
jmp
mov
xor
into
pop
fmul
or
push
mov
pushw
xchg
mov
mov
pusha
and
xor
in
adc
inc
in
add
enter
hlt
jmp
jb
xchg
data16
out
mov
and
xchg
and
xchg
mov
mov
mov
loop
push
cmps
push
(bad)
dec
fs
fist
retf
aam
dec
add
push
cmp
cs
xchg
pop
jg
xor
or
mov
push
mov
test
adc
xchg
inc
sub
mov
push
add
xor
jnp
adc
sbb
jp
pop
mov
xor
test
pop
push
adc
loopne
cmp
fdivr
lock
mov
pop
mov
inc
mov
mov
or
sahf
pop
sbb
pop
adc
jo
shl
jne
push
repz
outs
or
and
idiv
data16
jl
ins
xchg
pushf
inc
je
clc
loope
mov
pop
inc
cmp
inc
xor
push
out
and
outs
mov
sbb
or
cmp
mov
pop
repz
pop
(bad)
ror
push
scas
adc
scas
(bad)
fld
inc
mov
in
cmps
addr16
cs
repnz
add
scas
mov
jp
sub
idiv
cmps
pop
or
mov
cli
and
jle
xor
or
loop
pop
mov
inc
(bad)
mov
dec
pop
sti
mov
and
adc
(bad)
jmp
(bad)
repnz
inc
inc
ret
ins
push
push
dec
or
shl
dec
xchg
int3
fistp
in
movs
add
sbb
adc
mov
and
add
xor
and
and
sbb
sti
jo
mov
add
mov
and
sub
shr
addr16
adc
sub
inc
sub
(bad)
push
or
hlt
or
aaa
mov
adc
mov
add
pop
test
in
out
inc
or
int3
cmps
cmp
sahf
mov
pop
mov
dec
cwde
fisttp
cmp
dec
imul
fadd
jmp
xor
mov
inc
scas
push
mov
xor
dec
xchg
xchg
xchg
and
dec
imul
pushf
push
frstor
mov
add
add
inc
pop
push
fsubr
ins
es
push
mov
popa
mov
xor
add
add
test
neg
or
pop
ret
xor
push
pop
pop
imul
or
xchg
or
fs
(bad)
clc
xlat
fdivr
dec
or
or
push
aam
sub
xor
pop
rcr
and
fcomp
pop
push
add
adc
xor
dec
add
jp
and
cmps
sub
or
ret
(bad)
pop
nop
in
jle
push
imul
mov
mov
and
xor
shl
pop
rol
push
jp
cdq
cmp
out
mov
hlt
pop
dec
cmps
daa
test
mov
pop
mov
adc
cli
jge
sub
jae
shl
fstp
sub
outs
dec
adc
pushf
mov
add
dec
add
pop
mul
(bad)
dec
rcl
jmp
pop
push
mov
xor
dec
adc
inc
adc
or
add
pop
ret
xor
add
mov
ret
fadd
ds
rcr
pop
outs
outs
xchg
data16
inc
rol
cmp
push
jnp
xor
pop
mov
or
or
push
mov
hlt
sub
and
mov
dec
adc
jle
pop
mov
jmp
push
add
and
enter
xor
mov
mov
add
dec
jp
push
into
push
fild
cmp
xchg
jne
call
adc
inc
xor
fnstcw
das
test
dec
mov
lea
(bad)
adc
mov
sub
mov
dec
or
or
push
xchg
inc
daa
or
inc
push
jmp
add
inc
mov
cmp
in
inc
xor
mov
add
int
sub
mov
cdq
sub
outs
pop
push
sbb
dec
jmp
xor
enter
sbb
or
or
ja
dec
inc
mov
add
adc
push
and
stc
ja
ja
and
pop
or
(bad)
pop
or
or
retf
or
xchg
daa
cmp
pop
adc
push
mov
fstp
pop
call
sub
or
ins
mov
mov
dec
cmp
inc
lods
pop
mov
jmp
pop
(bad)
push
push
ret
pop
or
inc
ret
arpl
mov
xor
sbb
sub
sbb
pop
sbb
inc
mov
sti
inc
popa
jmp
sub
sbb
mov
or
pop
mov
and
sbb
mov
sbb
cwde
in
inc
icebp
call
xor
clc
sub
cmp
jmp
jg
mov
dec
adc
and
cdq
add
add
or
xchg
sbb
and
pusha
adc
cmp
cmp
sbb
nop
not
lea
aad
(bad)
clc
sbb
inc
out
add
cmp
xor
push
cmp
inc
add
sbb
pop
add
aaa
and
sub
mov
scas
xchg
jge
ja
imul
jns
jg
push
cmps
loopne
or
jp
jg
pop
jg
jbe
add
jl
sti
loopne
pop
ror
push
jnp
and
sti
jmp
cmc
(bad)
in
or
movs
imul
in
pusha
repnz
push
sbb
shl
xchg
popa
inc
rcr
aas
outs
add
mov
jmp
push
push
arpl
cmc
ret
inc
push
sub
inc
sbb
lahf
jp
jne
clc
push
xor
sub
inc
inc
add
scas
adc
pop
rol
push
sbb
ds
sub
jbe
push
dec
pop
int3
sahf
xchg
push
or
and
sub
push
daa
adc
pop
and
adc
les
adc
movs
adc
xchg
rcl
add
xlat
cmps
das
dec
repnz
fs
repz
popa
or
xchg
inc
fs
in
inc
mov
dec
in
test
pop
mov
or
inc
push
xchg
push
sub
mov
arpl
test
ret
mov
pop
inc
sbb
or
outs
cmp
pushf
xchg
clc
lock
jne
sub
push
push
jb
test
cli
add
xor
lea
xchg
pop
fwait
jno
jae
push
and
adc
push
ins
pop
pop
inc
ret
mov
pop
add
add
leave
mov
loopne
or
pop
fs
call
and
push
jecxz
retf
fisttp
mov
or
or
rcl
sub
xor
pop
cmp
gs
in
jecxz
fld
sbb
popf
sbb
sub
call
movs
dec
fs
or
inc
cmp
and
ror
push
addr16
add
js
mov
add
iret
add
ins
fs
sub
mov
and
adc
jge
or
mov
popa
mov
inc
adc
fwait
imul
pop
adc
(bad)
add
and
lods
cmp
pop
or
mov
test
inc
mov
ret
dec
adc
jo
sbb
add
jb
add
inc
lahf
sbb
rol
inc
enter
push
nop
lock
push
sub
test
mov
mov
push
add
fist
jg
mov
cdq
xchg
or
and
ja
sub
add
leave
out
cld
xchg
or
xchg
sbb
fidiv
xchg
mov
ins
push
mov
popa
nop
add
ss
add
or
adc
xor
dec
and
push
adc
js
in
add
sub
adc
sahf
inc
call
cmps
push
popa
sub
push
in
dec
lock
jp
jo
xchg
call
and
cs
sub
push
dec
data16
fiadd
int3
mov
cmp
mov
or
(bad)
xor
push
and
adc
adc
mov
ins
push
inc
dec
loope
bound
cmp
xor
or
sti
(bad)
sbb
sub
mov
pop
in
or
ror
das
in
inc
scas
pop
add
or
mov
(bad)
inc
add
jnp
add
jmp
adc
adc
mov
or
dec
inc
outs
add
clc
sar
jns
adc
adc
push
inc
pop
or
xor
enter
pop
jne
add
hlt
add
test
xchg
or
in
lea
out
pop
push
add
xchg
dec
pop
mov
outs
sub
pop
add
es
push
mov
dec
push
pop
push
outs
out
cmp
ror
sar
leave
sbb
ss
hlt
xor
fs
outs
leave
adc
loop
or
inc
ins
imul
mov
shl
dec
add
repnz
fnstsw
es
les
push
or
pop
and
mov
hlt
in
outs
push
hlt
lock
xchg
add
cmp
push
dec
xor
movs
call
mov
sbb
idiv
add
dec
sbb
fnstsw
dec
cmp
sbb
rcl
sar
ins
mov
xchg
test
jmp
mov
mov
sbb
add
cmp
mov
adc
loopne
fwait
div
movs
jmp
jb
pop
mov
mov
test
jmp
jl
xchg
enter
div
xchg
mov
sbb
add
cmp
xchg
sbb
xchg
or
pop
push
int3
sbb
ins
cmp
jmp
pop
sub
fcomp
or
enter
(bad)
mov
ins
pop
fcom
push
shr
inc
push
dec
test
das
sub
ins
inc
lock
jbe
dec
add
pop
das
imul
fs
adc
(bad)
mov
imul
adc
mov
push
das
adc
adc
shr
pop
ja
jnp
and
xchg
pop
mov
dec
and
ror
dec
push
sbb
arpl
cmc
mov
push
sbb
cmp
fcom
aaa
leave
jns
push
pop
jecxz
addr16
ins
or
adc
inc
xchg
(bad)
iret
push
add
ins
test
sub
xchg
scas
add
inc
dec
fistp
push
fild
inc
sbb
or
pop
xor
ins
inc
imul
mov
cli
stos
jle
adc
cwde
icebp
sub
push
mov
adc
and
mov
(bad)
push
cdq
adc
and
and
push
into
mov
fs
sar
sub
or
test
or
mov
xchg
pushf
in
pop
in
in
aad
pusha
or
adc
enter
lock
test
jo
xor
shr
nop
sub
inc
jmp
sub
popa
out
or
(bad)
push
xchg
cmp
inc
(bad)
in
popa
sahf
lea
add
push
push
inc
push
adc
xor
and
sbb
imul
pop
mov
adc
outs
fsub
sahf
inc
or
int
loope
outs
in
cwde
hlt
mov
pop
mov
dec
mov
fwait
inc
outs
xor
dec
jae
cmp
shl
(bad)
jne
pop
das
loope
dec
pop
and
fcmovne
mov
mov
xor
adc
cmps
inc
nop
cdq
add
sub
mov
retf
push
inc
mov
cwde
xor
xchg
loopne
ds
jae
push
pop
adc
lock
add
xor
xor
push
adc
add
xchg
jbe
addr16
and
adc
jle
pop
shl
popa
inc
pop
mov
and
lock
lahf
fcom
cwde
push
outs
xchg
cmp
and
add
jae
jp
cmp
pop
sub
and
enter
arpl
and
and
jae
sbb
pushf
add
xchg
rdmsr
adc
push
or
retw
xor
dec
jmp
mov
ror
inc
inc
or
clc
mov
add
mov
push
jmp
aaa
pop
pop
add
and
mov
addr16
adc
xlat
add
pop
add
pop
sbb
ins
in
enter
pop
adc
or
movs
mov
js
or
cdq
mov
push
adc
dec
aam
ror
push
arpl
pop
test
pusha
cmps
pop
cld
je
dec
dec
lods
sbb
jecxz
adc
xor
cdq
inc
loopne
or
(bad)
push
and
push
rcl
daa
dec
sbb
adc
clc
jne
fmul
ins
and
iret
clc
sbb
xlat
dec
retf
jo
xor
add
sub
shl
(bad)
jbe
leave
call
inc
add
clc
push
std
loop
sub
mov
pop
ins
bound
xor
dec
sub
lock
and
xchg
lock
push
fstp
pop
pop
xor
lock
ss
mov
mov
add
es
pop
lahf
or
xor
test
dec
scas
mov
add
push
mov
xchg
mov
cmp
inc
unpckhps
mov
sub
sub
mov
pop
xor
addr16
and
aam
and
jecxz
aas
aad
mov
ins
adc
sbb
dec
js
sub
mov
ja
sbb
or
ds
adc
popa
inc
cmp
sub
clc
shl
xlat
sub
cmp
jnp
jbe
mov
pop
and
(bad)
cdq
mov
out
pop
jmp
retf
xor
adc
popf
mov
fadd
xor
ins
or
inc
popa
push
push
dec
les
and
pop
add
inc
aaa
fisubr
xchg
fldenv
lock
mov
pop
add
inc
push
and
mov
push
adc
dec
retf
loope
test
push
mov
cmp
ins
daa
xchg
or
pop
ss
inc
or
pop
xor
cmp
jl
or
ror
sub
jg
jmp
push
das
and
xor
push
adc
pop
aam
dec
mov
es
jl
jp
add
mov
(bad)
xchg
and
call
push
call
test
add
sub
mov
adc
test
xor
adc
aaa
dec
test
or
in
gs
out
fisub
xor
retf
mov
xor
push
pusha
(bad)
pop
dec
data16
push
test
xchg
cmp
dec
inc
mov
shl
adc
jp
cwde
inc
cmps
aaa
leave
mov
lock
inc
add
popf
hlt
mov
sbb
adc
test
pop
je
ret
fdiv
fwait
sub
enter
movs
adc
hlt
sbb
adc
pusha
xchg
xor
xchg
adc
popa
ficom
pop
adc
mov
push
cli
leave
dec
mov
cmps
and
xchg
enter
mov
adc
xor
mov
mov
es
nop
cmp
fistp
repnz
ss
enter
lock
mov
or
jno
pop
or
pusha
inc
add
data16
dec
daa
sub
sbb
in
shl
pushf
mov
movs
inc
div
add
adc
sbb
gs
ins
cmp
das
and
push
add
mov
retf
and
pop
cld
(bad)
and
mov
cdq
leave
cmp
pop
clc
cdq
xchg
xor
mov
jne
and
mov
lahf
repnz
inc
loopne
inc
inc
cmp
jle
in
call
aaa
nop
xlat
adc
xchg
mov
jmp
add
or
js
mov
jne
jmp
pusha
shl
cld
jno
sub
inc
and
out
jp
adc
or
dec
loope
or
cmp
mov
ins
arpl
jns
jne
jg
adc
add
push
and
dec
inc
or
imul
pop
pop
cmp
leave
and
and
mov
cld
push
push
or
bound
arpl
mov
jle
pop
pop
push
cmp
inc
mov
cmp
inc
adc
rol
jle
add
jp
dec
adc
push
and
loopne
xchg
xchg
pop
cwde
daa
pop
inc
outs
dec
mov
mov
push
and
and
dec
jge
stos
push
mov
adc
mov
cmp
and
sti
push
inc
pop
or
and
push
popa
enter
lods
lods
rcl
mov
das
pop
sub
xor
movs
loopne
cmp
ins
adc
fwait
or
adc
rcr
mov
xchg
cs
inc
retf
(bad)
xor
fs
sbb
inc
es
fisub
push
mov
and
cdq
test
add
push
push
or
fs
fld
and
push
jns
ins
mov
sbb
js
jns
in
jl
enter
cmp
sbb
inc
repnz
mov
xchg
cmp
cmp
dec
pop
cmps
and
(bad)
and
push
jecxz
dec
jns
and
dec
pop
inc
gs
pop
push
gs
fadd
dec
dec
daa
inc
xor
cdq
in
jle
jae
push
cmc
ficomp
ins
jo
add
imul
inc
out
cmp
sbb
dec
jae
add
ss
pop
lahf
lods
push
cmp
pop
jno
loop
(bad)
aas
sbb
mov
test
fist
mov
les
mov
push
int
xor
or
add
sbb
mov
push
jbe
pushf
or
jo
imul
jnp
dec
sbb
push
adc
xchg
ja
and
loopne
xor
sub
lods
das
loop
ret
mov
mov
ins
movs
loopne
mov
cmp
sbb
adc
nop
pop
lea
and
cmp
push
rcr
adc
fld
mov
mov
mov
shl
xor
rcl
sbb
push
cmps
(bad)
loop
cmp
add
mov
mov
mov
rcl
call
int3
fnstcw
or
push
mov
mov
test
mov
adc
push
mov
and
int3
xchg
dec
and
sub
xchg
test
pop
mov
enter
pop
outs
rcr
scas
inc
or
inc
rol
daa
mov
ret
sub
pushf
cmp
lods
mov
push
mov
out
mov
xor
(bad)
jg
ss
or
push
in
or
sub
test
ja
and
fisttp
xchg
push
aas
es
fucom
xchg
mov
ja
or
pop
pop
add
add
jle
call
lea
adc
sbb
outs
cmp
or
gs
pusha
sbb
push
adc
test
scas
cmp
pop
add
inc
jecxz
pop
push
cwde
dec
cmp
add
sahf
scas
mov
pop
mov
cmp
mov
jb
adc
cmps
mov
pop
xor
xchg
mov
or
lock
nop
adc
push
hlt
test
data16
(bad)
out
mov
scas
mov
mov
in
push
ror
push
adc
push
add
adc
loopne
mov
xor
mov
lds
outs
fadd
ss
jmp
or
ja
inc
cmp
pop
pusha
mov
daa
add
stos
mov
pop
xor
dec
push
push
aaa
or
and
adc
test
push
add
psllq
fild
retf
pop
sbb
fld
pusha
mov
shr
les
push
or
pop
push
xor
jo
test
xchg
inc
(bad)
adc
or
test
mov
add
popa
or
in
jnp
hlt
xchg
pop
mov
mov
xor
and
mov
popa
sbb
add
outs
push
add
out
cwde
mov
or
and
and
add
push
jo
into
cld
xchg
je
sbb
pop
add
sub
mov
shl
mov
imul
cmps
imul
imul
mov
fmul
push
dec
push
push
dec
inc
iret
pop
adc
jp
sbb
or
xchg
cmps
pop
popf
lods
aas
les
xchg
and
push
ret
ds
aaa
inc
fstp
or
add
sbb
clc
pop
xor
inc
and
ror
adc
adc
jns
dec
or
daa
sub
lock
mov
inc
inc
xor
test
nop
mov
mov
loop
movs
jnp
pop
inc
mov
in
or
push
sub
sbb
stos
test
mov
mov
(bad)
add
movs
jnp
add
inc
pushf
push
xor
jle
jo
add
push
int3
add
pop
xchg
into
shl
and
rcl
push
mov
rcl
scas
lock
jb
adc
arpl
lahf
xor
dec
arpl
xchg
inc
out
xor
imul
add
mov
loopne
inc
xor
inc
js
mov
(bad)
ja
mov
lods
inc
push
jmp
and
(bad)
loope
or
int3
and
and
inc
stos
shl
add
adc
and
xor
inc
adc
sub
mov
mov
enter
pop
es
sbb
cmp
xor
xchg
in
xchg
mov
adc
rol
cmp
xor
sar
jne
jle
rcl
adc
cmp
mov
sbb
or
stos
nop
jno
pop
push
aas
mov
pushf
loopne
pop
add
sbb
push
inc
or
push
pop
sub
add
pop
add
dec
pushf
in
xor
cmp
adc
dec
popa
mov
cmovbe
sub
mov
ret
lods
outs
data16
sub
push
and
sbb
loopne
les
sub
cmp
add
add
add
test
(bad)
mov
jmp
jge
dec
adc
call
int3
mov
and
dec
daa
ins
dec
aas
push
xchg
lea
add
or
or
daa
adc
pop
and
xchg
add
add
or
cmp
add
add
mov
add
cmp
mov
lea
test
jno
sbb
push
xchg
mov
dec
aas
push
fs
jnp
bound
push
pop
pop
inc
in
fwait
loop
and
sub
jl
mov
or
test
mov
es
mov
inc
sti
retf
mov
inc
mov
dec
cmp
jmp
mov
cmp
sub
adc
dec
iret
es
arpl
aaa
xchg
rcl
daa
sti
or
add
jnp
and
scas
fmul
mov
xor
loopne
xchg
pop
mov
loop
pop
jp
out
out
test
test
cmp
stc
loopne
add
pushf
push
jnp
inc
mov
or
mov
sbb
fiadd
or
pop
out
ret
in
xchg
loope
jnp
dec
jnp
mov
movs
cwde
push
jno
inc
pop
cmp
mov
je
lds
sub
call
xor
popa
rol
(bad)
js
lea
xchg
inc
push
(bad)
aas
inc
push
pop
(bad)
cmp
mov
jecxz
or
xchg
aad
sbb
mov
sbb
add
jae
test
mov
jmp
cmp
xor
push
mov
adc
mov
enter
iret
js
movs
dec
ret
aas
adc
je
cmp
je
test
dec
cmp
jg
add
inc
aas
jl
call
and
adc
inc
jne
add
aam
jns
mov
out
add
mov
ret
pop
and
mov
push
mov
jmp
loopne
cmps
inc
inc
mov
mov
pop
mov
shl
int3
add
out
test
ror
push
cmp
dec
mov
arpl
push
add
jnp
mov
pop
push
js
add
test
out
push
ins
sbb
ror
or
mov
pop
mov
lea
cmp
jle
cmp
cmp
or
cmp
and
push
arpl
sbb
data16
or
arpl
pop
pop
dec
jle
mov
int
mov
xchg
out
inc
cmp
mov
shr
les
fmul
or
xchg
cmps
adc
rol
or
in
out
sbb
pop
ret
daa
call
or
fisubr
add
test
nop
jg
xor
(bad)
bound
lds
lds
jno
fmul
push
je
cmp
test
sub
mov
(bad)
adc
inc
add
js
adc
lods
(bad)
retfw
dec
xchg
inc
pop
or
mov
sub
xchg
xlat
gs
dec
push
mov
mov
cmp
mov
daa
popf
inc
pop
and
outs
mov
lds
push
adc
aam
push
inc
addr16
xor
xchg
int
daa
sbb
and
adc
or
pop
je
dec
dec
or
sbb
xor
je
cwde
fnsave
push
aas
and
mov
and
inc
out
sbb
sub
lahf
out
arpl
inc
cmp
stc
xor
mov
cs
sbb
rcr
xor
daa
adc
jne
dec
sbb
mov
scas
push
dec
fdiv
jl
cmp
add
repnz
lods
jge
dec
inc
jg
and
inc
cmp
inc
inc
add
jo
mov
je
lds
inc
sar
je
dec
xchg
cmp
lds
enter
cdq
ins
cdq
or
test
cmp
dec
(bad)
push
add
ror
sub
dec
shr
in
icebp
or
xchg
xchg
push
enter
inc
loopne
ins
sub
shl
int
popa
ret
add
outs
xor
sub
sbb
mov
std
icebp
ds
mov
push
inc
pusha
cwde
inc
ja
shl
or
sub
aam
movs
xor
jmp
or
adc
loop
jecxz
mov
xor
out
and
in
mov
add
xor
jecxz
sub
lock
or
aaa
push
pop
add
and
jmp
icebp
or
xor
call
lock
cmp
or
(bad)
jg
xor
push
adc
fwait
aad
call
push
push
or
mov
xchg
xchg
dec
sti
(bad)
mov
ret
push
or
xor
pushf
inc
jb
popa
jecxz
cmp
je
dec
cmp
sub
xchg
fwait
inc
mov
or
lock
cmps
adc
jnp
hlt
mov
inc
push
sbb
cs
sbb
inc
add
rdmsr
ins
push
push
sbb
dec
lock
cmp
nop
xchg
sub
xor
mov
push
push
adc
mov
inc
(bad)
mov
sbb
add
pop
mov
jne
sbb
pop
pop
xchg
jne
retf
push
xchg
enter
std
not
popf
lea
mov
pop
(bad)
stos
pop
ret
jae
jo
mov
mov
mov
out
test
dec
cmp
jle
dec
cmps
fsub
mov
dec
xchg
imul
add
xor
sbb
dec
icebp
xchg
aad
adc
mov
test
hlt
retf
and
jmp
push
xor
push
aad
rcl
movs
aam
outs
pop
add
add
push
and
xchg
inc
bound
push
cmps
add
ja
ror
push
pop
mov
adc
adc
fdiv
inc
cmp
mov
add
dec
sub
mov
sub
xor
or
inc
cmp
ret
mov
jp
and
into
inc
pop
loop
out
sub
or
push
mov
adc
in
push
and
mov
sahf
xchg
not
mov
inc
mov
js
imul
push
sahf
inc
add
xchg
imul
retf
addr16
sti
mov
dec
fadd
adc
sub
jb
sbb
in
adc
push
cmp
pop
and
push
xchg
ja
cmp
fndisi(8087
nop
test
shl
cmp
js
mov
lock
adc
in
jl
pop
or
dec
out
fbstp
int3
div
add
mov
sbb
out
pop
(bad)
call
xchg
pushf
pushf
mov
adc
icebp
popa
pop
mov
and
sahf
mov
icebp
mov
dec
cmp
push
leave
pop
pop
mov
mov
dec
cli
ror
push
loope
mov
add
inc
dec
jbe
cmp
add
mov
or
mov
rcl
inc
inc
ret
ret
adc
sub
daa
jmp
lea
adc
jo
push
ins
push
loope
les
add
ins
inc
xor
mov
arpl
push
lods
cmps
outs
test
and
sbb
dec
jge
ins
mov
inc
cmp
xlat
jl
pop
sub
in
pusha
push
sbb
pop
adc
sbb
mov
(bad)
ja
retf
and
inc
adc
pop
fmul
dec
pop
stos
nop
mov
sub
and
inc
dec
fimul
pop
daa
ds
dec
pop
inc
lahf
jmp
adc
js
scas
aam
push
(bad)
(bad)
cs
or
dec
xlat
in
xchg
test
dec
ins
jecxz
xor
dec
dec
push
mov
mov
inc
loop
inc
add
and
aad
sbb
sub
sahf
or
pop
push
je
lods
popa
(bad)
mov
cmp
mov
adc
mov
push
in
or
bswap
dec
hlt
mov
adc
shl
xchg
inc
mov
add
ss
push
mov
bound
fimul
sbb
or
sub
push
xchg
setg
xchg
push
mov
mov
inc
xchg
lods
cmp
xchg
mov
sub
jecxz
or
ror
mov
mov
call
dec
les
mov
inc
cmp
ret
or
test
test
pushf
xor
jne
xchg
jge
lock
mov
jno
loope
mov
jno
in
adc
xchg
adc
in
push
adc
xchg
rcl
xor
(bad)
mov
call
shl
mov
loopne
(bad)
(bad)
adc
fist
and
push
mov
data16
movs
add
rol
xlat
fcomp
ds
inc
clc
jne
imul
ror
inc
ins
add
jo
lock
test
in
dec
in
arpl
cmp
sub
dec
in
cmp
inc
sbb
loopne
push
aas
sub
push
enter
fistp
lods
cmps
test
xchg
xchg
inc
nop
sbb
in
cmp
jp
lods
or
popf
aam
lods
test
hlt
cmc
shr
ins
jge
or
inc
mov
sub
test
xchg
stos
loope
push
jmp
sub
push
sub
out
loopne
jmp
dec
xchg
mov
dec
pop
add
dec
cmp
(bad)
(bad)
xor
or
xchg
add
dec
push
shl
jnp
inc
add
lock
jb
cmp
add
imul
sub
sub
mov
das
imul
leave
int
add
push
push
push
mov
add
rcr
sbb
and
repnz
xor
mov
pop
xchg
cmp
xlat
cmp
jne
cmps
dec
mov
push
pop
adc
xchg
sub
sub
lds
cwde
dec
cmp
out
lods
mov
imul
xchg
xor
inc
cmp
push
push
shr
mov
dec
push
sbb
jb
add
dec
pop
pop
cld
in
push
and
push
mov
dec
stos
mov
jne
sbb
daa
sbb
adc
in
pop
pop
pop
inc
lods
in
lods
dec
shr
nop
push
jno
in
(bad)
or
mov
inc
push
not
cli
push
add
dec
cmp
mov
inc
or
in
inc
leave
add
xchg
dec
add
repnz
psllw
clc
lods
xchg
ret
push
lods
adc
inc
dec
inc
ins
mov
out
mov
xchg
outs
iret
and
inc
jmp
sbb
inc
pop
or
ins
or
popa
jb
add
sub
jle
adc
xor
popa
adc
or
add
push
gs
jne
ins
adc
add
scas
adc
adc
inc
jge
pushf
movs
inc
and
adc
inc
ror
popf
sti
ficomp
fs
(bad)
sbb
jns
arpl
mov
pop
test
lea
icebp
pop
imul
fsubr
mov
xchg
cmc
add
push
sub
movs
mov
scas
(bad)
adc
sub
dec
in
inc
ins
and
ins
dec
or
mov
movs
or
ja
outs
add
bound
gs
inc
(bad)
add
cmp
es
clc
rol
lahf
mov
pop
lds
ret
ins
or
push
movs
cmp
pop
aam
rcr
je
test
cmp
mov
xchg
les
cwde
les
fcmovbe
cmp
push
sbb
mov
pop
mov
pop
adc
aad
pop
cmp
sbb
scas
and
xchg
mov
mov
push
out
sub
out
inc
int3
aam
rcr
mov
test
aam
jo
outs
mov
iret
lock
push
aam
inc
mov
sbb
pop
ds
mov
clc
and
in
pop
sub
sub
mov
pop
clc
xor
jmp
push
in
imul
cmp
mov
mov
push
xor
test
sbb
mov
push
inc
jb
sbb
mov
ds
imul
fimul
jns
dec
cmp
clc
push
mov
test
rcr
mov
mov
mov
push
cmp
scas
dec
cwde
mov
inc
dec
repz
add
test
ret
or
imul
in
xchg
mov
or
push
(bad)
jae
dec
xchg
inc
test
js
les
or
or
jo
adc
xchg
cmp
push
out
pop
mov
add
dec
repz
cmp
cmp
inc
jb
push
xchg
aam
and
or
mov
dec
push
nop
das
push
fucomi
(bad)
(bad)
push
es
xor
pop
int3
xchg
xchg
jae
fcom
inc
jmp
sub
add
pop
mov
sbb
cld
jmp
cmp
ret
popa
fs
pop
sbb
fs
or
sub
adc
imul
js
out
mov
das
push
out
adc
jae
lock
mov
add
ins
inc
mov
vunpcklps
hlt
rcl
dec
nop
inc
adc
mov
dec
cwde
cwde
mov
loopne
rcl
and
nop
xor
fsub
dec
adc
test
pop
xlat
outs
daa
cmp
ins
pop
dec
push
pop
inc
shl
pop
cmp
add
ror
inc
xor
(bad)
pop
dec
mov
push
aaa
div
retf
call
daa
jo
inc
stos
add
std
arpl
inc
inc
scas
push
fild
adc
dec
jo
add
xor
pushf
fild
sub
mov
hlt
or
mov
xor
mov
shr
nop
inc
cmp
rcl
loopne
inc
mov
loopne
rol
and
or
and
jnp
sbb
inc
add
sub
dec
inc
sar
add
push
add
pop
and
add
add
xor
dec
shl
add
push
out
xchg
and
dec
xchg
add
shl
jne
inc
into
test
or
test
inc
inc
mov
mov
or
mov
cmp
add
popf
pushf
mov
mov
out
andps
(bad)
or
and
arpl
mov
popa
and
popa
out
xchg
adc
bound
rcl
lahf
mov
enter
bound
or
mov
sbb
mov
ret
add
jae
add
mov
sub
aam
pop
jb
popa
sbb
jo
fisubr
shl
sbb
and
push
fs
jecxz
ror
nop
je
push
push
pop
mov
add
push
jae
mov
enter
nop
or
inc
pusha
lds
push
or
push
nop
push
pop
and
push
or
fcom
or
lods
in
pusha
mov
and
popa
jmp
fsub
pop
and
push
fsubr
loopne
dec
or
out
and
jo
pop
imul
jecxz
in
sub
fs
push
jmp
or
and
inc
sbb
jo
in
xchg
call
sbb
es
xlat
push
lds
ja
pop
dec
push
cmp
xchg
nop
pxor
or
pop
xlat
hlt
daa
cs
sbb
xchg
push
cmc
push
inc
adc
push
loope
xchg
pop
(bad)
and
xor
xor
ss
cmp
xor
inc
cmp
and
inc
dec
dec
dec
dec
dec
dec
dec
dec
rcl
dec
sub
push
push
push
pop
pop
pop
inc
jmp
mov
ret
or
adc
inc
fisub
adc
or
xchg
push
pop
mov
add
add
adc
push
push
inc
jmp
add
rcl
inc
mov
mov
les
ja
sti
and
add
popa
movs
sbb
sbb
cmp
js
push
popa
mov
and
sbb
mov
xchg
xchg
(bad)
pop
push
nop
psrlw
pop
(bad)
cmps
sub
jmp
mov
mov
sbb
sub
clc
pusha
stc
xor
add
rol
dec
in
sub
in
jmpw
cmc
scas
jge
inc
jge
retf
push
call
pushf
aas
or
sar
pop
fisubr
sbb
pop
stos
aad
fmulp
inc
sti
push
mov
popa
pop
leave
ins
add
and
push
cdq
or
outs
aas
add
ret
aaa
mov
retf
and
inc
inc
dec
and
dec
call
jmp
sti
dec
mov
pusha
nop
(bad)
(bad)
jmp
xchg
push
rol
xor
js
mov
lds
jo
retf
or
and
enter
sub
cmps
adc
pop
xchg
xchg
(bad)
or
xchg
inc
cmps
mov
iret
mov
xor
adc
fnstenv
bswap
or
ins
jmp
mov
add
jl
cdq
retf
push
outs
clc
imul
shl
inc
in
push
ret
pop
add
inc
sar
sbb
out
push
das
mov
daa
inc
jmp
pusha
inc
xor
test
popf
movs
cmc
cli
sbb
test
push
lods
adc
idiv
in
add
jmp
inc
arpl
or
clc
sti
push
add
and
cmps
adc
shl
mov
add
inc
fst
add
jo
and
getsec
or
pop
push
inc
loope
and
jmp
popa
(bad)
cmp
mov
mov
cmp
ja
adc
xor
outs
add
aaa
popa
jne
mov
add
ror
cmp
jg
mov
ret
add
mov
xchg
sbb
or
ins
add
add
stc
lock
push
cmp
add
fdiv
jmp
fcom
arpl
mov
adc
sti
sub
push
in
outs
jge
shl
adc
lods
push
ss
pop
xor
jmp
aaa
jmp
xor
push
cdq
nop
ja
xor
pop
cmp
out
in
(bad)
adc
in
sbb
sbb
jb
(bad)
or
dec
adc
adc
nop
mov
shr
ss
pop
or
movs
pop
jo
sub
pop
inc
push
xchg
loopne
mov
cmps
dec
add
dec
inc
inc
imul
aad
add
xchg
mov
cmps
or
sbb
pusha
pop
push
test
xchg
(bad)
pop
popa
xlat
or
adc
data16
cmp
imul
mov
neg
aas
cmp
fild
pop
or
in
xor
xchg
ja
scas
imul
pop
movs
add
and
mov
js
inc
adc
jbe
push
add
sub
iret
pop
push
push
cli
add
add
ds
mov
xor
push
sub
fnstsw
or
add
aas
fiadd
mov
inc
aas
sbb
adc
xchg
adc
pop
add
je
add
int
push
xor
mov
pop
cmp
push
stos
pop
xchg
add
ds
pop
adc
push
pop
mov
mov
or
xor
les
push
jmp
test
movs
jmp
or
sub
sbb
fld
pop
inc
sbb
fild
mov
std
jg
cmp
adc
push
(bad)
mov
call
push
jmp
adc
vmread
adc
test
leave
mov
js
add
xchg
lods
nop
push
dec
dec
jbe
rol
push
cli
or
je
jnp
or
das
mov
das
xor
pop
push
icebp
fucomi
lds
sahf
test
pusha
dec
jae
sbb
lods
fs
popf
fs
adc
pop
adc
rcl
jne
push
sub
stos
leave
pusha
push
imul
mov
xchg
jae
push
sub
(bad)
sub
or
aas
jno
in
jo
call
jle
and
add
adc
clc
xor
dec
(bad)
call
xor
and
dec
add
pop
sbb
and
inc
cld
push
cmp
addr16
push
leave
mov
or
les
dec
pop
test
jmp
ret
xor
pop
cmp
mov
in
rol
or
iret
cmp
(bad)
pop
jb
push
stc
jmp
or
(bad)
xor
adc
push
imul
enter
sti
pop
add
cmp
ss
push
adc
jg
or
in
push
or
push
in
inc
imul
adc
xchg
shl
adc
inc
xchg
movs
push
bound
test
and
sti
adc
xchg
js
adc
mov
dec
or
aas
popf
add
add
in
adc
call
dec
adc
and
pop
and
push
pop
push
or
mov
add
push
pop
push
retf
les
dec
jb
add
mov
add
lods
test
fcomp
mov
add
test
mov
mov
fild
outs
sbb
mov
mov
xor
mov
pop
loop
push
push
adc
pop
push
je
shl
pop
int
jmp
in
jne
pop
push
adc
je
mov
iret
ins
out
pop
and
call
xchg
stos
sahf
jecxz
aaa
stc
or
push
in
dec
loope
inc
push
test
xor
gs
sub
sub
popa
jg
imul
adc
mov
or
xor
rol
test
inc
mov
push
inc
lds
and
cmps
das
mov
mov
and
mov
or
aas
popf
fcom
clc
jae
mov
push
jno
push
cmps
sbb
push
movs
push
xor
adc
adc
mov
mov
icebp
mov
out
xor
jmp
adc
push
or
fadd
in
mov
add
(bad)
je
push
inc
int3
inc
add
dec
mov
adc
pop
or
cmp
or
hlt
imul
and
into
sbb
jmp
sbb
jnp
mov
jecxz
or
and
dec
add
scas
rol
push
and
add
add
mov
lea
add
and
adc
cmp
jne
push
js
sbb
or
sub
sbb
outs
sbb
fldl2t
and
lock
ja
add
mov
adc
retf
inc
shl
sar
(bad)
aad
jle
out
and
dec
cdq
std
popa
jmp
mov
les
mov
xchg
es
rcr
or
fs
inc
or
or
fadd
mov
and
pusha
or
js
sti
dec
xor
movs
sub
pop
xor
mov
jbe
and
jb
cwde
out
xchg
into
ret
inc
mov
dec
and
shl
daa
icebp
mov
dec
xchg
scas
xchg
add
mov
push
mov
xchg
add
sbb
xor
jl
xlat
shl
mov
mov
cwde
dec
imul
jecxz
sbb
fsub
fld
push
push
cmp
test
scas
popa
push
xlat
or
ins
(bad)
cmps
jno
jp
push
hlt
leave
in
popa
stos
inc
cmp
inc
iret
mov
jmp
sub
sbb
iret
dec
pop
das
loopne
cdq
dec
imul
sbb
jns
movs
xlat
popa
das
call
xchg
je
sbb
sub
call
add
outs
cmp
inc
cdq
mov
inc
outs
jle
sbb
sar
fimul
sub
lds
push
loope
cmp
sbb
aaa
push
dec
xor
add
imul
mov
mov
dec
jo
or
xchg
push
retw
cmc
mov
sbb
lods
pusha
add
sub
(bad)
loopne
push
add
jns
sub
jb
hlt
xor
ret
push
add
add
jno
inc
sub
movs
push
mov
nop
pop
add
dec
cld
in
and
adc
sbb
ins
and
mov
cmp
push
dec
aam
lock
pop
ficom
adc
cs
push
mov
hlt
push
xchg
add
add
xchg
dec
jge
pop
push
fxch
ret
mov
adc
fcmovu
jno
push
fsubr
push
sub
clc
xchg
dec
pop
xor
mov
jmp
ss
loope
pop
mov
jl
clc
test
mov
lock
cdq
add
nop
imul
fisttp
or
sub
sub
outs
add
lods
push
add
inc
push
test
sbb
sub
sbb
aad
clc
movs
in
and
rol
xor
movs
sub
xchg
movs
pop
in
sbb
push
test
push
lock
mov
add
dec
cmp
inc
and
and
rcr
mov
xor
into
pop
ret
pop
into
hlt
cmp
hlt
hlt
pop
push
(bad)
pusha
jp
hlt
sub
mov
lds
lock
and
clc
or
sbb
push
icebp
pop
jns
inc
cmp
inc
and
lock
int
hlt
ror
or
add
(bad)
ds
fistp
(bad)
pop
fild
push
add
sbb
retf
inc
dec
dec
movs
jb
push
mov
dec
mov
pop
sbb
sar
loopne
mov
ror
adc
test
outs
ja
cmp
fistp
xchg
or
sub
sub
dec
sbb
mov
dec
add
mov
adc
dec
ja
or
xchg
ret
out
push
xor
dec
iret
push
inc
adc
mov
pusha
not
add
mov
fwait
sbb
add
cmp
dec
pushf
adc
nop
pusha
leave
loopne
sub
arpl
mov
popa
ins
cmp
sbb
cmp
add
xchg
pushf
or
(bad)
or
aaa
fstp
enter
add
shr
inc
test
in
cmp
mov
lds
cmp
repnz
xchg
aam
addr16
nop
or
and
enter
cmp
dec
call
ret
pop
lods
inc
sbb
call
adc
(bad)
or
xor
pusha
inc
(bad)
jae
loopne
sbb
dec
daa
(bad)
or
cmp
dec
clc
int3
loopne
xor
mov
xor
ins
stos
inc
jb
rol
int
inc
enter
lods
clc
or
and
lock
les
jmp
lock
mov
dec
lock
xchg
pop
dec
clc
int
pop
mov
add
fisttp
dec
or
movs
clc
inc
inc
fadd
aad
bound
pop
xor
push
jne
mov
pop
nop
add
nop
cmp
lock
call
test
repnz
movs
leave
inc
and
add
dec
and
cmp
pop
push
and
loopne
les
adc
imul
addr16
ds
fistp
loopne
inc
dec
ficomp
stos
add
add
mov
sub
mov
adc
sbb
cmps
mov
mov
sbb
cmp
add
in
xchg
jl
jge
retf
sbb
add
mov
rcr
pop
movs
mov
add
lock
push
mov
aaa
aas
mov
push
call
(bad)
push
je
or
int3
dec
add
pop
pusha
inc
in
repnz
retf
push
sbb
loope
int3
adc
imul
hlt
pop
or
push
fs
sub
fs
add
rep
pop
jl
or
sub
pop
dec
mov
out
mov
pop
nop
push
test
ins
mov
push
xchg
sbb
retf
or
dec
mov
nop
push
xor
push
nop
fbld
in
pop
push
inc
stos
xchg
xor
mov
add
xchg
pop
mov
xor
pop
fs
cmp
mov
repnz
and
add
cld
cmp
mov
xchg
loop
or
jno
loope
inc
push
mov
push
in
sbb
mov
xchg
jmp
dec
dec
es
bndldx
adc
cli
sbb
or
stc
fst
dec
stos
ds
out
adc
sub
xchg
or
xchg
cdq
or
adc
mov
outs
add
rcr
std
ja
sbb
(bad)
int
imul
xor
mov
fisub
call
adc
add
and
loopne
ins
dec
or
push
sbb
add
fnsave
mov
cld
mov
or
xchg
out
dec
repz
add
stos
pop
leave
lock
xchg
jmp
mov
(bad)
dec
cmc
popa
add
xchg
xor
ins
and
add
adc
mov
lea
cmp
and
js
inc
mov
cmp
inc
pop
jae
ret
jg
jp
aas
inc
fstp
fst
daa
inc
cmp
mov
or
das
and
inc
fmul
loop
jne
test
and
dec
inc
push
mov
or
pop
pop
test
add
xchg
out
jle
pop
add
ss
out
cmps
cmp
and
mov
invd
fwait
ret
(bad)
mov
ins
mov
mov
add
mov
fcmovnbe
out
aas
je
(bad)
mov
pop
fldenv
retf
jne
mov
push
rol
mov
mov
sbb
fadd
sub
mov
pop
xor
xlat
outs
pop
test
inc
cmp
(bad)
pop
inc
jno
push
out
mov
ficom
ds
inc
adc
inc
adc
fadd
jne
outs
(bad)
add
ret
fs
fsub
lea
mov
(bad)
xchg
cmp
jnp
and
inc
add
call
aaa
mov
out
mov
sbb
and
and
and
scas
outs
pop
pop
add
pop
cmp
faddp
jl
cmp
fs
outs
aas
add
mov
push
pop
mov
fsub
fimul
pop
lods
xchg
es
sub
push
or
bound
add
or
or
out
in
adc
inc
jp
cmps
push
add
mov
jbe
and
popa
(bad)
fsub
mov
popa
adc
das
shl
aam
mov
sahf
jmp
sub
mov
or
pop
rcr
out
xor
dec
jo
test
jg
cmp
cs
push
mov
or
nop
mov
popf
lods
jmp
clc
push
cmp
sahf
gs
jne
popf
jo
dec
test
pop
and
lods
popa
xor
jge
jo
mov
dec
cmps
dec
lahf
and
mov
dec
leave
xor
jmp
and
sub
arpl
mov
push
and
hlt
dec
arpl
xchg
loope
loop
and
into
adc
ret
inc
(bad)
sbb
shl
jo
sbb
fprem
xor
ins
scas
xchg
push
jl
ret
mov
jo
ror
adc
push
mov
cmp
or
cdq
(bad)
ja
fdiv
adc
push
adc
sbb
or
or
xor
sbb
jno
adc
dec
out
or
mov
jno
jno
push
dec
inc
dec
or
sub
push
push
jl
movs
aas
inc
jmp
mov
and
and
inc
push
repnz
dec
in
inc
test
addr16
inc
dec
push
or
or
dec
add
xchg
jmp
adc
and
lock
out
cmp
loop
ret
push
ror
iret
int
adc
pushf
neg
les
enter
icebp
in
inc
fnstcw
outs
cmps
sbb
ss
adc
outs
shl
inc
arpl
fidivr
push
cmp
test
jl
cmp
pop
movs
(bad)
retf
outs
sub
je
int
mov
mov
mov
test
in
pop
dec
inc
in
mov
xchg
and
daa
mov
aad
cmp
push
cmp
pop
ja
mov
mov
push
pop
pop
test
cli
mov
inc
pop
out
leave
ins
in
jbe
movs
aas
ins
jge
dec
sbb
xchg
je
mov
sar
push
mov
and
nop
ds
je
add
stos
dec
adc
xchg
mov
cmps
(bad)
xchg
(bad)
and
pop
outs
inc
and
xchg
or
pop
and
inc
leave
push
xor
xor
xchg
or
inc
inc
or
leave
push
or
and
xor
je
or
add
push
pop
(bad)
and
pop
push
inc
loope
inc
xchg
test
and
mov
bound
xor
das
and
popf
or
mov
pop
fist
push
inc
dec
stc
cmp
pop
(bad)
jl
jl
and
sbb
ja
ss
(bad)
ffreep
mov
lea
add
push
xchg
into
xor
and
and
(bad)
mov
sti
aad
xchg
inc
mov
xchg
cmps
ss
mov
loopne
add
(bad)
xchg
adc
test
popa
cmp
add
adc
in
mov
lds
dec
xor
repnz
ret
push
sbb
jno
dec
ror
popa
or
or
dec
bound
leave
add
inc
xchg
shr
lea
adc
jne
mov
cmp
xchg
(bad)
adc
pop
aam
loope
jne
jae
add
push
pop
push
pop
loope
mov
mov
jne
mov
xchg
sbb
cmp
inc
enter
fisub
inc
push
lock
push
iret
ss
mov
push
sbb
mov
into
push
imul
inc
add
adc
jno
movs
mov
nop
jl
inc
mov
mov
cmps
add
es
sub
adc
mov
or
xchg
aaa
int3
add
out
mov
mov
out
out
xor
cmp
or
fadd
cmps
popa
sbb
push
fstp
or
loopne
in
loopne
adc
lds
push
pop
hlt
sbb
in
loopne
jecxz
dec
ins
adc
(bad)
xor
and
push
push
cdq
and
jle
div
les
adc
sbb
pop
xchg
adc
sbb
dec
lods
push
jne
dec
mov
pop
dec
xor
mov
fs
sbb
push
je
push
pop
repz
repz
cmp
sti
shl
out
xor
push
mov
pop
xlat
adc
and
imul
repnz
inc
cmp
adc
leave
int3
push
out
lds
out
cmps
or
or
(bad)
jmp
aam
jo
inc
mov
xchg
in
ror
jmp
fild
jae
inc
jmp
fld
xchg
or
sbb
dec
pusha
sbb
xor
jmp
dec
(bad)
je
inc
add
mov
sbb
inc
adc
ret
test
push
shr
(bad)
push
out
pop
mov
sub
and
pop
popf
dec
jle
loopne
pop
xlat
cdq
inc
arpl
dec
pop
cmp
fcmovu
fsub
adc
(bad)
xor
pushf
loop
int
jo
iret
add
mov
call
jb
popa
movs
add
inc
jo
xchg
clc
and
lahf
mov
mov
jl
push
or
push
loope
sub
add
pusha
test
adc
lock
jbe
sbb
test
mov
shl
mov
not
jne
push
adc
mov
pop
popa
lea
push
not
mov
cmp
sbb
and
dec
repz
idiv
fs
popf
and
loope
into
mov
jmp
push
cmp
adc
mov
add
xchg
call
xor
mov
pusha
sti
xchg
inc
(bad)
out
and
(bad)
ins
adc
cmp
ja
jns
mov
dec
mov
sti
jl
inc
movs
mov
je
sbb
cmp
inc
imul
push
rcl
mov
dec
ret
xor
jbe
inc
sbb
mov
mov
cmp
mov
arpl
shl
daa
add
pop
fcmovu
stc
sahf
jne
loopne
in
fsub
add
jl
jg
aaa
dec
jle
cmps
in
adc
mov
ret
(bad)
idiv
loop
jns
mov
loopne
inc
jge
pop
cmp
call
das
ret
mov
pop
repz
push
cmp
push
rol
add
daa
rcr
dec
adc
mov
sub
icebp
mov
mov
pop
jo
and
xor
inc
sbb
iret
lds
cmp
mov
cmc
les
mov
push
aas
xor
push
(bad)
inc
jae
add
xor
push
dec
or
test
cmps
sahf
scas
out
les
pop
lods
stc
(bad)
jmp
and
mov
and
jne
xchg
pop
push
cs
dec
inc
lahf
das
dec
mov
push
xor
jg
ret
jns
call
popf
xor
jne
pop
sbb
pusha
xchg
and
mov
xchg
xor
xor
lock
and
arpl
inc
xchg
push
add
cmp
repz
xchg
xchg
hlt
stos
inc
lock
mov
adc
and
call
push
push
pusha
inc
sub
int
xchg
gs
or
lock
loopne
call
addr16
cmp
and
aad
jmp
inc
fs
js
je
js
int3
js
pop
push
cmp
mov
mov
push
(bad)
rol
test
add
inc
popa
cdq
sub
mov
pop
cmp
xchg
sbb
mov
loope
adc
inc
ffree
rcr
jno
push
cmp
inc
into
aas
xchg
js
mov
jmp
inc
and
cmp
retf
mov
xchg
xor
adc
ret
bound
cmp
loope
dec
sbb
or
or
inc
cs
(bad)
push
inc
jmp
ror
sbb
push
xor
push
sub
aad
push
repnz
inc
and
xchg
in
mov
pop
or
mov
cs
lar
xchg
jbe
inc
or
mov
inc
outs
adc
ret
mov
push
cli
in
mov
lods
add
es
popa
push
and
jmp
(bad)
loop
shl
daa
or
cmp
inc
outs
inc
(bad)
sbb
int
jmp
dec
into
push
std
adc
test
add
sbb
dec
les
add
xor
mov
xchg
inc
rcl
pop
mov
xchg
je
sub
xor
rcl
movs
cli
and
add
in
test
sub
(bad)
shr
inc
test
je
sub
add
enter
cwde
jle
fs
mov
mov
and
push
push
dec
shl
sbb
add
inc
addr16
inc
pop
add
inc
inc
or
nop
push
test
or
rol
pop
clc
mov
xor
pop
and
push
cmp
xchg
xchg
inc
cmps
mov
test
sub
add
jle
add
xor
dec
xor
es
sub
mov
sahf
fimul
add
mov
xchg
xor
inc
cmp
je
jl
mov
xor
and
lahf
push
sbb
(bad)
fcmovb
mov
sbb
je
aad
cmp
sbb
inc
mov
sbb
lea
dec
ror
ds
rol
push
into
inc
cdq
sub
pop
push
fwait
pop
xchg
fadd
lahf
push
test
pop
(bad)
fimul
sub
and
pop
int
inc
jle
jns
add
or
inc
mov
clc
jb
mov
aas
std
mov
pop
mov
ret
test
jmp
add
sub
cmp
push
inc
fstp
cmp
lea
add
pop
mov
xor
add
sbb
imul
add
ja
popa
sub
sbb
lods
xchg
jle
mov
mov
ja
add
inc
add
pop
cmc
mov
(bad)
push
test
xchg
das
mov
hlt
in
inc
or
xchg
xchg
mov
fwait
les
out
add
mov
cmp
inc
jmp
jo
and
sub
data16
or
xchg
mov
inc
or
pop
xchg
fbld
ja
lods
add
cmp
or
cmp
dec
push
cmp
(bad)
push
dec
ds
out
iret
dec
inc
dec
loop
in
inc
dec
jmp
add
cmp
push
push
xchg
rcl
and
pop
jg
les
ret
sbb
push
pop
mov
or
mov
xchg
ins
jmp
adc
lock
xor
sbb
(bad)
mov
test
rol
add
pop
push
and
mov
(bad)
add
enter
(bad)
call
(bad)
sbb
or
and
es
or
sbb
lock
xchg
xor
aam
dec
sub
clc
fadd
dec
xchg
(bad)
hlt
cmps
mov
and
pop
mov
ret
adc
inc
xor
add
jb
jmp
inc
xchg
(bad)
adc
inc
lock
add
adc
out
adc
push
(bad)
aad
pushf
cmp
jb
lock
fisttp
inc
and
xlat
dec
les
into
ja
clc
and
jno
aas
push
mov
or
sti
repnz
dec
retf
push
fiadd
movs
sar
(bad)
(bad)
jmp
pop
les
sbb
out
and
xor
test
adc
pop
and
(bad)
jl
adc
std
xor
jne
dec
inc
xor
adc
icebp
mov
jno
cmp
and
add
and
jmp
mov
sbb
(bad)
repnz
adc
or
nop
push
in
aaa
in
test
jno
push
out
sbb
in
add
je
pop
sbb
imul
enter
push
daa
clc
popf
lods
dec
call
xor
adc
mov
je
mov
and
test
(bad)
add
int3
js
jb
adc
or
pop
pop
pop
add
ja
outs
jl
mov
loopne
hlt
add
mov
push
inc
or
push
aaa
add
mov
sbb
or
push
mov
push
mov
add
push
sub
xor
lahf
mov
mov
mov
push
sbb
mov
ret
aas
cmp
imul
pop
xchg
aam
ror
lds
or
fild
inc
loopne
test
in
and
sahf
test
mov
(bad)
or
sbb
pusha
cwde
adc
adc
inc
fmul
pop
mov
push
daa
mov
lods
std
retf
ins
nop
ss
cmp
jne
xor
outs
or
cmp
jno
ror
outs
aaa
push
pop
iret
adc
ret
das
jb
test
inc
adc
rcr
jmp
cmp
hlt
xchg
test
dec
dec
or
add
daa
sub
sub
xchg
sub
pop
adc
or
pop
add
leave
sbb
sub
add
popa
adc
dec
scas
iret
jmp
mov
add
cmp
fmul
cmp
jnp
adc
push
test
cli
adc
add
add
adc
and
xchg
stos
lea
ror
cdq
stc
mov
and
mov
inc
int3
mov
cli
leave
hlt
mov
and
adc
outs
pop
sar
mov
mov
lods
and
rol
xchg
cli
mov
add
push
loopne
mov
ins
fcom
sub
lods
mov
add
xlat
jne
xor
xchg
mov
cwde
inc
mov
mov
jp
push
stos
mov
push
int3
sar
push
sub
mov
imul
sub
add
push
mov
enter
push
cwde
xchg
lock
sbb
pop
pop
cmp
xlat
nop
jmp
fdivr
cwde
sub
and
fmul
mov
ret
xchg
cmp
in
idiv
or
(bad)
inc
sahf
jns
mov
and
cmp
cli
pop
(bad)
pop
inc
in
jbe
not
mov
inc
inc
jmp
dec
sbb
fwait
or
cmp
loope
pushf
sub
popa
sub
xor
daa
movs
imul
xor
adc
push
mov
inc
pop
fs
push
adc
fdiv
add
and
sbb
rcl
dec
pushf
sbb
cmp
or
dec
sti
or
mov
inc
xchg
in
or
inc
fmul
or
add
xchg
in
loope
xor
nop
pop
jne
ds
lock
pop
or
loope
stos
push
dec
mov
or
fisttp
imul
iret
test
mov
jmp
xor
lds
or
sbb
jmp
repnz
rol
mov
ret
cdq
bound
or
ins
cmp
or
inc
or
xor
mov
clc
les
push
cwde
mov
xor
fwait
mov
sbb
cmp
cmc
pop
sub
popa
add
loope
adc
imul
ja
cld
fstp
leave
(bad)
cmps
add
xor
jb
fnstsw
push
push
je
mov
add
sar
into
xchg
lock
jo
aaa
(bad)
xor
test
sub
cmp
xor
xor
or
mov
sub
arpl
jbe
or
add
mov
mov
neg
clc
ss
loop
push
and
jae
pop
std
std
call
inc
xor
bound
pop
inc
xor
add
or
jne
jmp
fwait
sub
outs
jg
sbb
or
in
push
imul
inc
push
bound
stos
bound
jo
lds
stc
out
stos
or
and
fisub
add
fistp
add
enter
cmp
xor
outs
cs
add
dec
mov
pusha
stc
pop
test
xchg
xor
sub
or
add
sbb
sbb
pusha
js
leave
mov
sbb
jns
push
push
je
add
and
pop
cmp
aaa
pop
and
scas
dec
call
stos
jmp
dec
test
xor
in
xchg
retf
xchg
outs
pusha
xor
add
mov
loope
or
(bad)
push
cmp
jne
icebp
ss
or
mov
xor
sub
shr
leave
sbb
ret
mov
sbb
lods
fbstp
pop
mov
sbb
jmp
arpl
test
cmp
lock
daa
clc
jecxz
mov
cmp
xor
out
adc
xchg
stc
sbb
jmp
frstor
xchg
std
in
jl
inc
sbb
sub
jge
mov
push
adc
shl
pushf
jo
mov
movs
push
pusha
adc
aad
shr
lods
ins
adc
mov
dec
mov
sbb
std
mov
shl
cwde
pop
xchg
imul
mov
call
inc
jl
xchg
lods
imul
dec
and
jo
call
ds
fs
shl
lods
adc
int
test
ficomp
mov
sbb
(bad)
jg
adc
outs
mov
xchg
test
pop
ret
mov
loope
xchg
xor
in
ret
mov
xor
fsub
dec
add
mov
lods
xchg
xchg
inc
outs
and
mov
pop
cmp
movs
push
adc
or
push
scas
dec
outs
arpl
fnstcw
pusha
add
dec
movs
inc
sub
add
cmp
imul
fistp
push
adc
je
or
js
ins
add
mov
adc
sbb
dec
cmps
push
add
mov
adc
lea
outs
mov
xor
retf
push
push
add
mov
add
cmp
and
cmp
add
fsubr
dec
(bad)
mov
nop
push
clc
sub
scas
mov
adc
inc
or
push
movs
and
or
or
call
push
jns
cmps
sbb
cmp
and
jmp
test
add
or
data16
mov
or
sbb
adc
push
inc
push
or
add
dec
dec
adc
mov
push
ins
outs
adc
mov
or
sub
fidiv
or
scas
dec
and
or
cmp
and
inc
push
push
jecxz
movs
cmp
sbb
pushf
xor
arpl
pusha
dec
je
or
push
sub
cs
and
and
hlt
xor
ja
dec
into
in
fistp
jge
dec
inc
imul
hlt
ins
imul
daa
push
mov
in
inc
pop
pushf
pop
pop
pop
push
add
lock
xchg
sbb
repnz
add
(bad)
mov
push
adc
dec
scas
es
pop
sub
(bad)
push
inc
inc
fs
inc
(bad)
out
sbb
pop
test
inc
jbe
mov
mov
pusha
imul
fwait
lods
and
dec
inc
mov
in
adc
jp
test
xchg
adc
mov
xor
sbb
sbb
test
pop
inc
sub
jnp
dec
inc
jp
dec
or
and
jbe
cmps
lock
sbb
adc
add
jecxz
cmp
sbb
bound
or
pop
or
xor
push
fistp
adc
int
inc
sbb
add
nop
prefetch
jle
push
dec
daa
mov
(bad)
call
out
mov
das
mov
pop
(bad)
(bad)
scas
mov
or
iret
sub
jg
add
loope
int
pop
inc
push
mov
add
in
or
loopne
rcl
les
data16
xchg
cmp
or
adc
popa
jns
outs
ret
data16
sbb
push
das
cmps
mov
xor
in
add
aaa
cmps
jnp
jne
sbb
popa
js
dec
add
push
mov
in
test
nop
(bad)
(bad)
mov
into
cmc
cmp
call
dec
cmp
add
dec
jmp
or
adc
sbb
lock
(bad)
gs
jno
lea
mov
pop
adc
sbb
ret
shr
scas
mov
std
sysenter
xor
ret
or
adc
icebp
or
jns
adc
cs
mov
cmps
mov
scas
js
sub
outs
adc
mov
fcomp
outs
add
rol
sbb
aas
inc
add
mov
mov
fadd
inc
rcl
out
or
imul
adc
sbb
pop
sar
or
rcr
in
cmp
pusha
adc
jno
xchg
fs
and
outs
dec
fist
add
les
aas
adc
rcl
push
push
push
dec
fcomip
cs
loopne
js
cmp
add
pop
push
pusha
push
sbb
pop
sbb
add
popa
dec
sbb
pop
xchg
mov
sbb
add
xlat
js
add
in
iret
pop
pop
call
not
inc
pop
dec
push
idiv
js
call
add
jg
adc
sbb
(bad)
idiv
pop
inc
not
adc
fcom
int3
push
inc
pop
loopne
and
mov
inc
add
pop
mov
push
loopne
jg
idiv
jno
push
repnz
sub
inc
inc
lea
stc
fisub
pop
pop
dec
fsub
xchg
into
dec
daa
and
adc
jae
jae
mov
jno
cmp
jl
bound
aas
xchg
push
mov
cmp
loop
aaa
std
add
add
add
add
add
jmp
idiv
pop
dec
adc
adc
sbb
and
sub
add
push
sar
inc
inc
add
rcl
pop
lahf
add
or
femms
mov
pop
pop
sar
sbb
mov
lahf
or
repz
push
scas
jmp
loopne
jmp
or
dec
stos
sar
or
or
mov
in
jl
or
data16
and
add
pusha
in
shr
push
push
mov
mov
lods
xor
add
test
(bad)
mov
pop
xor
push
xor
lock
jbe
nop
loopne
call
xchg
int3
in
jne
push
push
shl
ins
(bad)
ss
mov
mov
call
scas
mov
pop
pop
pop
int3
popa
push
adc
in
xchg
aam
jns
fcom
scas
add
sbb
lods
jo
cwde
sub
add
pop
sti
add
mov
add
add
cmp
fbld
sub
mov
in
outs
pop
sbb
ror
push
push
shl
(bad)
xchg
rcl
sub
enter
fist
loopne
loopne
pusha
fs
mov
add
xchg
add
outs
and
pop
xchg
push
pop
lods
or
add
out
mov
pop
aas
fiadd
jo
popa
inc
ins
imul
or
jecxz
add
or
add
add
data16
adc
pop
inc
out
pusha
fsubp
adc
pop
inc
popa
push
sub
jne
add
xor
sub
rol
or
stos
or
jo
and
inc
xor
mov
adc
push
dec
call
repz
dec
xchg
bound
add
sub
loopne
ret
add
xor
loopne
test
iret
pop
inc
sub
inc
gs
aad
push
xor
inc
sbb
ss
add
push
xchg
out
out
and
sbb
or
cmp
test
pusha
push
fadd
xor
and
in
mov
and
sbb
add
shl
je
repz
je
and
inc
mov
add
push
dec
xchg
push
shl
sbb
and
push
push
jae
lea
add
mov
add
push
mov
push
and
mov
test
and
jo
or
sub
popf
int3
rol
mov
mov
jmp
pusha
and
cmp
fs
aam
inc
rcr
jb
(bad)
es
pop
hlt
sub
daa
ror
mov
inc
and
xor
dec
add
sub
lea
pop
das
int3
nop
fs
sbb
test
push
xor
push
inc
jno
and
pop
rol
shr
adc
cdq
adc
mov
icebp
dec
push
fs
push
pop
cwde
in
dec
sub
in
sbb
and
jo
mov
or
dec
push
lock
xor
popa
sbb
cs
ins
fs
repz
dec
loop
mov
pusha
mov
push
ret
push
call
xor
lods
addr16
shl
or
cli
lock
imul
sub
sbb
into
int
add
nop
adc
hlt
xor
push
and
xor
add
and
pop
push
sbb
sbb
fnsave
or
ds
mov
push
int
cmps
jecxz
dec
out
push
sbb
pusha
sbb
nop
sub
inc
ja
inc
call
or
xchg
mov
jne
gs
jns
es
movs
ret
adc
xor
fbld
sbb
enter
add
ins
test
sub
imul
rol
imul
mov
mov
or
pushf
mov
pop
xchg
xchg
mov
push
inc
mov
add
fdivr
and
cmp
inc
sbb
or
fcom
dec
cmp
pop
inc
cwde
cwde
or
pop
pop
inc
ins
add
and
test
push
add
add
dec
imul
pop
xor
xor
sub
pop
scas
fs
xchg
jbe
sar
rol
or
enter
adc
adc
ja
cmp
fadd
dec
add
stc
jns
mov
xor
inc
popa
cmc
sbb
ja
mov
fbstp
dec
mov
mov
mov
pushf
mov
mov
xchg
adc
aaa
fs
call
rcr
dec
mov
push
mov
or
mov
cmps
cmp
int
or
mov
add
add
and
and
xchg
test
inc
inc
mov
(bad)
fmul
lods
inc
add
mov
fadd
add
lods
dec
jnp
adc
nop
call
and
push
add
push
jo
xchg
rcr
sbb
sar
sub
dec
fcomp
pop
cmp
xchg
loopne
loopne
add
xchg
mov
cmp
test
cmp
or
and
dec
repz
inc
inc
push
add
dec
call
dec
jae
imul
cmc
cs
mov
dec
inc
sbb
clc
add
icebp
mov
sbb
test
imul
shl
mov
inc
loopne
and
sahf
nop
xor
or
push
dec
lock
push
or
sub
cmp
push
push
cs
popa
jg
adc
inc
inc
fcom
cwde
add
mov
sub
add
add
(bad)
cld
or
mov
push
adc
daa
ins
xchg
cdq
ins
inc
call
scas
xchg
xchg
aaa
sub
ins
fiadd
out
pop
sub
ror
inc
xchg
add
mov
nop
add
inc
add
sbb
push
fcmovb
mov
mov
test
adc
ror
call
out
mov
inc
pop
fwait
inc
pushf
mov
adc
(bad)
push
pop
sbb
dec
movs
or
enter
and
shrd
inc
je
inc
xchg
nop
xor
inc
jb
add
xor
test
scas
adc
push
ss
pop
lods
push
sbb
(bad)
add
sbb
loope
repnz
or
mov
pusha
nop
popw
and
bound
mov
movaps
and
mov
sahf
ins
in
in
es
sub
fidivr
jmp
out
jmp
push
je
and
pop
mov
or
lahf
and
mov
push
and
mov
aaa
sub
adc
mov
add
sbb
ss
je
add
mov
add
cld
adc
xor
icebp
dec
pop
pop
cmp
sub
jmp
fbstp
pop
ja
(bad)
jge
hlt
mov
and
dec
pop
nop
xor
sbb
inc
add
mov
or
(bad)
fldenv
sub
lock
sub
out
outs
call
add
mov
or
sub
sub
fimul
loope
ins
jae
dec
push
sbb
es
ror
xchg
sbb
mov
push
ja
adc
mov
inc
jb
leave
xor
ss
push
enter
test
jns
push
bound
out
jnp
lods
mov
push
push
xor
sub
lahf
pop
or
jo
push
or
cmp
mov
mov
sbb
sbb
out
cmp
daa
rcr
ror
mov
cmp
or
ret
or
inc
jmp
push
dec
ins
adc
pop
xor
clc
dec
loopne
sti
(bad)
mov
out
fisttp
xchg
les
(bad)
lock
aam
or
jno
push
mov
fidiv
lods
pushf
nop
xchg
je
xchg
pusha
addr16
ror
adc
clc
sub
js
imul
sub
adc
xchg
data16
sbb
or
add
inc
call
aam
pop
sbb
dec
sub
outs
cmps
mov
mov
fisttp
das
pop
fcomp
ja
xor
inc
pop
add
xchg
gs
add
add
inc
xchg
adc
xchg
add
(bad)
xor
inc
inc
lods
ss
or
pop
push
aam
and
dec
jmp
sub
pop
loopne
lods
add
push
xor
fsub
push
sub
mov
(bad)
std
adc
inc
ret
lahf
stos
dec
mov
sbb
std
hlt
(bad)
mov
or
aam
mov
pop
inc
or
mov
or
sbb
cmp
sub
aas
sub
inc
cmps
inc
jl
inc
add
mov
inc
pop
push
aas
add
psubw
dec
inc
ret
push
adc
push
or
mov
and
or
sbb
bound
sbb
lock
mov
aam
rol
ja
mov
mov
mov
sti
pusha
cmp
movs
push
fisttp
sub
jg
mov
inc
sub
mov
inc
popa
mov
pushf
adc
sub
bt
add
test
addr16
dec
pop
aas
jae
xor
push
hlt
mov
add
add
jae
inc
push
retf
add
cmp
retf
xchg
sbb
cmp
inc
call
mov
test
dec
mov
inc
cmp
enter
fst
in
push
enter
jmp
loope
js
push
push
cmp
popa
jp
xor
adc
pushf
fld
mov
mov
jl
rcl
mov
mov
sar
xchg
pop
into
mov
js
adc
adc
add
mov
add
lock
sahf
out
adc
clc
mov
xor
fmul
xchg
test
or
or
adc
icebp
das
add
sbb
loope
push
mov
sub
neg
jmp
arpl
cmp
das
cli
add
push
push
adc
ss
fadd
cwde
xlat
test
adc
mov
stos
ins
dec
ins
mov
ds
jae
cmp
test
dec
add
les
add
sbb
addr16
sub
and
mov
js
jo
mov
push
ret
push
shr
mov
or
je
loop
inc
or
xchg
jmp
pop
js
jp
sub
in
sub
lea
xor
add
and
inc
or
ret
out
mov
cmp
push
push
into
mov
xor
or
in
pop
dec
cmp
adc
and
mov
dec
shl
inc
rcl
pop
and
(bad)
mov
add
push
sar
cmp
imul
jne
sub
sub
(bad)
enter
xor
aaa
and
or
adc
pop
fld
(bad)
gs
dec
jns
dec
enter
adc
ss
test
lock
push
dec
cld
jmp
pop
ja
and
cmp
test
mov
xor
jmp
cmp
lds
daa
xchg
rcr
or
mov
add
and
dec
inc
xor
xchg
mov
cmp
sbb
xor
and
rcl
sahf
push
push
and
sbb
sbb
es
ss
pop
push
movs
adc
and
pop
fdivr
push
and
push
ret
outs
jne
mov
add
sbb
pop
inc
sbb
std
mov
ret
addr16
xor
xchg
ja
inc
std
jle
je
mov
mov
dec
inc
cwde
ret
add
(bad)
sub
mov
add
sub
in
xor
mov
stos
dec
pop
pushf
sbb
xor
or
mov
sar
add
and
jne
dec
dec
js
rcl
dec
xchg
mov
cmc
stos
fnstcw
fadd
das
(bad)
lock
push
xchg
cld
and
enter
sbb
mov
es
sub
enter
(bad)
push
xor
(bad)
cmp
sbb
imul
jmp
push
cmp
or
aam
xor
xor
xchg
add
aas
xor
js
or
add
retf
or
jns
leave
jge
into
xor
mov
mov
arpl
add
cmp
ficomp
xchg
lds
mov
xor
mov
das
jmp
jbe
jp
sbb
jmp
movs
lea
ins
pop
mov
shr
add
and
sub
xor
xor
adc
jo
cmp
xor
mov
xor
js
sub
add
jl
mov
add
pop
cmp
cmp
fisttp
pop
lss
stos
test
push
xlat
and
push
sbb
sbb
clc
adc
shr
sbb
pushf
or
mov
jb
add
out
adc
or
dec
xchg
ficom
pop
jmp
xchg
jnp
ds
inc
jecxz
stc
not
cmc
fwait
push
jns
mov
(bad)
or
movnti
pusha
shl
int3
push
ret
xchg
add
dec
cmp
mov
or
or
pop
sub
sbb
xor
fistp
lock
mov
add
fmul
adc
sub
mul
cmp
push
sub
xchg
dec
lods
cmp
dec
inc
pop
movs
addr16
add
addr16
les
add
imul
inc
mov
fs
sbb
imul
mov
sub
in
mov
mov
sbb
mov
mov
or
in
inc
inc
mov
out
aaa
ss
adc
cvttps2pi
xchg
xor
pop
sub
and
fs
cmc
jg
lock
add
xchg
mov
lds
in
inc
adc
push
xor
arpl
jno
clc
outs
repz
inc
mov
lock
ret
stos
inc
leave
data16
jns
(bad)
sub
ja
xchg
pop
or
div
nop
pslld
inc
stos
outs
loopne
or
sbb
ja
fld
mov
or
adc
pop
addr16
push
stc
lea
fadd
adc
out
mov
xchg
sbb
add
push
imul
and
or
movs
pop
pusha
adc
dec
nop
add
xor
outs
pusha
push
pop
imul
xchg
mov
inc
xor
mov
fisttp
jb
mov
mov
movs
hlt
xor
(bad)
xor
and
sar
jnp
jmp
mov
sbb
jge
adc
or
sbb
xchg
movs
ficomp
and
or
jns
mov
adc
push
push
lea
clc
retf
push
mov
mov
or
add
xor
add
outs
or
lds
sbb
out
sbb
cmp
add
mov
push
inc
outs
outs
stos
mov
mov
ret
in
fs
sbb
or
retf
test
retf
or
fs
inc
push
jbe
(bad)
jns
jge
add
dec
adc
mov
frstor
jle
mov
adc
je
xchg
stos
inc
fstp
rol
add
rcl
and
in
or
xchg
sbb
in
add
dec
inc
sub
lea
lods
enter
fadd
and
push
stos
inc
mov
push
inc
ss
push
dec
popf
xor
dec
sbb
mov
scas
into
loopne
dec
je
mov
mov
add
fld
sbb
out
mov
sub
scas
ret
push
dec
or
fistp
pop
test
or
pop
inc
push
ret
cmc
mov
xchg
stos
cmp
jg
pop
jns
or
and
jle
nop
push
or
or
lods
adc
or
ret
not
cmp
adc
dec
push
adc
sbb
jnp
mov
enter
cmp
fdiv
jb
in
mov
out
inc
movs
xor
mov
stc
lock
pusha
pop
mov
add
push
(bad)
test
xlat
je
leave
xor
sbb
test
clc
add
dec
adc
scas
push
xlat
push
mov
(bad)
cmps
fsub
adc
and
cs
mov
xor
repnz
xor
mov
mov
sub
xchg
dec
mov
les
test
or
fs
mov
and
mov
pop
in
cmp
test
fmul
inc
mov
jecxz
and
stos
add
xchg
sub
add
push
dec
inc
das
inc
in
mov
and
adc
mov
icebp
cmp
cmc
sbb
or
outs
in
inc
cmp
mov
inc
ins
push
adc
jnp
ret
sub
je
sbb
movs
push
add
mov
stos
inc
out
add
pushf
mov
ret
and
aam
arpl
mov
mov
fdivr
nop
add
mov
cmp
mov
cmp
das
mov
cwde
pop
in
push
daa
popa
push
cs
movs
xor
push
ins
adc
add
add
cmp
cmps
cdq
daa
mov
or
pop
jo
add
ret
jl
pop
push
xor
in
in
daa
mov
mov
test
in
adc
dec
adc
adc
movs
cmp
(bad)
adc
in
fld
or
and
lods
or
xor
mov
or
and
mov
mov
xchg
push
jl
test
xchg
push
shl
mov
ror
pop
callw
stc
pop
jge
add
stos
call
daa
pop
pop
or
inc
dec
je
push
rcl
jne
mov
cwde
dec
inc
lods
dec
inc
and
sub
cmp
outs
pop
add
inc
dec
rcl
inc
add
adc
dec
dec
inc
fcom
xor
add
add
in
dec
test
pop
in
pop
cwde
push
clc
xor
or
cmp
jb
lods
push
loop
cmps
xchg
sub
sub
in
cdq
sub
leave
addr16
sbb
fcomp
jb
pusha
mov
dec
push
add
or
fbstp
nop
pop
sbb
add
movs
lea
sbb
loope
test
jno
in
aas
sub
mov
ja
inc
pop
ret
mov
outs
fs
aaa
sub
or
test
cld
xchg
dec
jp
jle
jne
std
ds
fs
add
aam
scas
(bad)
test
pop
dec
aam
dec
(bad)
ret
mov
aaa
jo
xchg
or
pop
lods
pusha
or
iret
(bad)
xchg
sbb
push
or
repnz
popa
rcl
inc
xchg
fistp
or
adc
loop
(bad)
mov
xor
xchg
call
repz
nop
dec
hlt
push
mov
inc
push
dec
or
push
std
pop
inc
sub
das
daa
push
pop
js
cmp
push
mov
xchg
ret
sbb
in
dec
pop
pop
inc
xchg
mov
cmp
in
add
mov
daa
fsub
mov
add
add
and
push
adc
cmp
aam
pop
or
jb
push
ins
ins
and
inc
leave
adc
fstp
sub
fs
xchg
cmp
ins
mov
adc
cwde
sub
jmp
inc
sbb
and
test
dec
cmp
add
scas
das
outs
adc
aas
stc
adc
pop
or
push
pop
add
adc
icebp
add
push
in
sbb
shl
fsubr
pusha
and
(bad)
retf
pop
or
arpl
xchg
test
pop
adc
inc
dec
adc
push
nop
cs
jno
cmc
sbb
icebp
stos
adc
push
xlat
das
adc
pop
in
outs
les
arpl
xor
dec
mov
push
dec
mov
sub
into
xor
lahf
popf
or
and
call
add
xchg
cmps
int3
cmp
loope
dec
fcmovnb
push
aam
mov
and
push
imul
add
fisttp
and
mov
xlat
outs
adc
ds
adc
loope
jo
fnstsw
cmp
movs
xchg
push
ins
and
in
ins
add
imul
sbb
fild
inc
sbb
xchg
cmp
sbb
int3
jp
in
and
sbb
cs
inc
pushf
in
out
fcom
ret
add
sub
mov
or
das
ds
mov
rol
jns
add
leave
enter
sbb
arpl
fs
push
cmp
lahf
mov
cmp
mov
out
loopne
or
cmp
dec
or
cmc
mov
fiadd
push
mov
add
mov
cli
ins
xor
ficomp
cwde
cmp
es
leave
or
(bad)
jl
or
test
pusha
pop
(bad)
adc
add
jne
mov
fld
and
adc
test
adc
pop
ret
sub
jmp
mov
rol
sbb
adc
sub
sub
inc
and
sbb
mov
sbb
je
mov
sub
int3
xor
push
pop
xor
enter
imul
mov
add
xchg
fisub
mov
or
int3
test
pop
ins
adc
mov
int
or
xchg
mov
or
jmp
and
ss
pop
push
test
pop
dec
imul
add
mov
popf
mov
daa
mov
add
adc
pusha
bound
neg
and
inc
cs
sbb
sar
or
ret
loop
rol
lea
arpl
or
imul
push
mov
das
add
add
add
xor
ds
sub
push
push
clc
dec
fcomp
or
loop
jmp
push
mov
stc
sbb
or
sar
ret
scas
dec
mov
mov
adc
add
inc
or
stos
cmp
cmps
sub
sub
add
in
cmp
cmp
cmps
inc
ins
push
pop
pop
xchg
push
pop
repnz
pop
and
rcl
dec
fs
inc
out
mov
enter
push
and
add
jo
add
xchg
(bad)
arpl
add
adc
add
xchg
push
or
sbb
inc
sbb
xchg
push
bound
add
cmp
or
add
or
test
cmp
mov
jnp
cmp
or
pop
scas
dec
sar
adc
hlt
mov
in
mov
repnz
cmp
hlt
out
pushf
pushf
pop
outs
hlt
in
in
daa
inc
jmp
mov
pop
jne
push
pop
sub
clc
push
or
adc
ins
pop
mov
sbb
ds
nop
adc
mov
push
out
(bad)
aam
jmp
nop
test
pop
sub
xchg
pop
lock
fwait
xor
mov
inc
push
dec
or
aas
or
adc
aas
push
pop
or
push
popa
cmp
dec
sbb
and
and
dec
or
(bad)
jmp
sub
lahf
enter
cmp
add
dec
lds
adc
sbb
sar
or
sbb
dec
or
imul
mov
add
jno
sub
jecxz
fcmovbe
adc
or
dec
push
xor
jle
mov
(bad)
(bad)
jns
dec
mov
xchg
jecxz
scas
add
movs
inc
push
pop
ror
pop
jns
test
mov
xchg
std
test
mov
sbb
dec
aam
pop
dec
adc
mov
xchg
dec
push
or
fild
mov
and
xor
test
stos
add
push
aad
xchg
adc
add
dec
mov
jns
xchg
cdq
sub
mov
pop
(bad)
shr
add
loope
and
lea
or
mov
and
add
pop
js
xchg
add
retf
inc
xlat
and
adc
jbe
xor
sbb
out
inc
or
neg
xchg
movs
test
in
add
enter
test
retf
ror
adc
loopne
rcr
in
cmc
xor
fcom
add
lea
test
add
iret
push
adc
and
push
push
fld
jbe
ja
sub
mov
and
ins
or
lea
pop
and
stos
jno
or
cmp
es
bound
iret
jnp
dec
fistp
daa
js
adc
ficomp
mov
jae
fidivr
push
sub
mov
add
sbb
or
(bad)
in
jne
leave
cs
rcr
or
js
das
ins
sub
adc
sbb
mov
jmp
sbb
push
imul
ins
jmp
popa
mov
test
adc
adc
or
xchg
aam
loope
mov
cmp
cli
mov
mov
rcr
xor
test
xor
and
adc
popf
xor
jbe
pop
mov
mov
adc
adc
xor
sub
icebp
xchg
sub
xor
lahf
test
ret
and
cmp
sub
mov
push
pop
popa
push
mov
sub
or
sub
adc
aaa
pop
xchg
jno
cmp
add
jecxz
inc
test
add
cmp
gs
cli
sbb
and
loopne
test
(bad)
adc
das
adc
mov
inc
mov
(bad)
push
test
sbb
ror
xchg
inc
ja
test
push
pusha
cmps
or
data16
in
aam
sbb
mov
add
adc
jae
cmp
fld
inc
or
push
push
pop
pop
ja
pop
or
jmp
ror
xor
div
push
and
and
arpl
push
in
inc
add
ror
or
pusha
sar
cmp
inc
cs
add
sub
gs
mov
idiv
sahf
das
ins
adc
cmps
jp
cmp
lock
fiadd
sub
pop
add
sahf
out
shl
movs
add
arpl
inc
sbb
mov
sbb
adc
xor
xchg
xor
jl
cmp
adc
sahf
data16
xchg
fstp
and
pop
push
xchg
xlat
ret
and
pop
pop
and
xchg
xchg
test
lds
fimul
adc
xor
inc
xor
xor
push
ret
push
sbb
mov
mov
mov
push
inc
push
sahf
lods
jo
sbb
xor
or
shr
mov
ror
cmp
fadd
xchg
sbb
xor
cmp
inc
xor
pop
(bad)
xor
jne
jmp
mov
pop
sub
or
or
inc
adc
and
leave
jmp
add
push
ss
iret
and
stos
mov
push
dec
je
lods
dec
repnz
add
test
sbb
push
sbb
push
fadd
into
adc
fldenv
aam
push
push
das
jge
sahf
popf
and
pop
movs
addr16
lock
dec
and
push
imul
lock
pop
push
ret
add
jl
(bad)
scas
and
pop
pop
loope
mov
iret
fs
bound
and
cmpxchg
mov
lock
mov
pop
xlat
inc
xchg
mov
sbb
je
inc
cmp
push
add
and
pop
cmp
or
jo
and
adc
ins
cmp
add
dec
sub
call
mov
test
jne
lods
and
cmp
xor
dec
rol
ret
or
cmp
push
scas
fnclex
mov
sub
xchg
jge
mov
pop
and
cmps
sbb
push
pop
inc
loop
mov
mov
pop
mov
and
test
mov
out
and
adc
pop
cmp
movs
inc
ja
xchg
ja
out
add
outs
mov
out
push
mov
pop
cmp
push
ficom
ins
push
xor
add
rcr
inc
sbb
movs
add
aad
ret
(bad)
xchg
retf
cmp
cmp
and
push
outs
sbb
xor
or
xor
or
jo
sub
xor
push
and
imul
mov
push
and
lds
test
lds
cmp
dec
and
jne
mov
add
cmps
pop
out
(bad)
and
das
adc
push
sbb
sub
add
mov
sub
add
popf
nop
push
xlat
es
add
inc
lock
sbb
aaa
cwde
or
sbb
sub
jmp
or
push
mov
or
push
(bad)
dec
xor
popa
sub
mov
sbb
ins
adc
pop
sub
jns
bound
ds
call
adc
xchg
aas
fmul
test
adc
mov
xchg
jne
cmp
push
add
sbb
data16
cld
mov
cmp
xor
adc
or
iret
ds
cmps
mov
inc
rcl
or
(bad)
test
cmp
punpcklwd
add
lock
mov
in
jmp
addr16
test
add
xor
adc
push
rcr
std
mov
jns
rcl
(bad)
test
loopne
and
jne
adc
mov
dec
das
or
mov
xor
add
dec
xchg
add
push
shl
and
adc
mov
and
lock
fdiv
sub
popf
xor
xchg
es
rol
nop
sub
add
sub
add
les
add
xchg
stos
sub
sbb
out
(bad)
aas
add
out
mov
push
or
add
sbb
jnp
aas
jmp
or
sub
(bad)
js
push
adc
mov
sub
add
loopne
sub
test
add
repz
pop
add
outs
pop
jmp
jecxz
add
jnp
add
aaa
push
and
sbb
jmp
jecxz
adc
xchg
cmp
mov
mov
add
sbb
stos
and
cld
mov
test
cld
dec
call
jo
xor
push
xor
mov
add
xor
adc
dec
inc
in
adc
dec
push
scas
dec
inc
push
sub
and
out
and
dec
mov
jge
inc
inc
add
test
es
ins
dec
adc
inc
or
or
into
loopne
and
or
adc
adc
sbb
xchg
gs
hlt
add
and
xchg
loope
push
push
inc
imul
das
pop
push
or
jmp
add
and
and
dec
sub
cwde
xor
nop
retf
(bad)
dec
mov
jno
dec
push
or
or
and
(bad)
push
sbb
cmc
out
les
adc
inc
add
lock
lods
push
adc
cmp
inc
sar
adc
cmps
cli
ds
adc
mov
(bad)
fist
pop
imul
(bad)
ss
je
xor
leave
mov
inc
bound
data16
imul
xchg
clc
mov
or
add
push
or
xlat
sbb
icebp
sbb
pop
in
(bad)
xchg
xor
push
sahf
ret
fistp
je
outs
sahf
cs
cs
jmp
inc
fcomp
pop
outs
xor
das
push
push
sar
add
add
loop
jge
cwde
(bad)
push
in
sub
jbe
shl
js
dec
popf
test
test
pop
cwde
(bad)
sbb
loop
xor
std
sub
test
ins
dec
dec
loopne
sub
jmp
and
dec
sub
inc
aam
push
or
sbb
shl
stos
push
xor
enter
js
push
ins
daa
loopne
pop
adc
xor
and
data16
adc
dec
cmp
lds
cmp
data16
sar
add
nop
bound
mov
mov
mov
xor
test
sbb
cmc
int3
sub
sbb
mov
mov
xor
test
in
ins
sbb
cmp
es
pop
xchg
jne
fs
and
or
shl
outs
mov
or
inc
mov
imul
xchg
xchg
sub
rcr
sub
jnp
cmp
std
mov
and
push
mov
mov
sub
adc
and
inc
push
jmp
push
js
xlat
mov
adc
movs
iret
mov
test
sbb
mov
xchg
mov
jge
aaa
xchg
cmp
in
cmp
lods
ret
rcr
imul
ins
ror
stos
cmp
ja
and
xor
dec
rol
and
loope
jbe
rcr
sbb
add
inc
mov
adc
push
jp
mov
or
lea
jns
pop
mov
cmp
jmp
and
inc
inc
je
ja
inc
cli
in
mov
cmp
loop
pop
add
mov
jns
mov
(bad)
push
pusha
hlt
xchg
dec
cmc
nop
shl
aam
sbb
lods
fist
inc
adc
test
pop
sub
(bad)
ficom
mov
ds
loope
rcl
mov
mov
popa
jo
mov
push
xchg
push
mov
inc
test
or
mov
sub
movs
scas
mov
mov
inc
lods
sar
xor
push
cmp
and
inc
sbb
fidivr
or
cmp
inc
lahf
sbb
add
dec
sti
sub
mov
mov
mov
pop
movs
aaa
loope
push
ins
jecxz
cwde
mov
ss
or
fcmovnu
popf
push
mov
mov
mov
or
dec
xchg
icebp
ret
sub
icebp
test
test
pop
fcom
dec
cmp
inc
jmp
sti
mov
movs
mov
bound
sbb
adc
sar
push
jne
mov
inc
test
jns
inc
aaa
add
sub
push
or
xor
xchg
sub
gs
rol
loope
hlt
in
ret
lods
mov
dec
(bad)
hlt
lods
arpl
xor
stos
dec
add
sub
or
ss
xor
popa
mov
stos
ret
(bad)
pusha
sub
and
inc
adc
imul
sahf
popf
cs
test
add
test
dec
mov
lock
int3
mov
lds
icebp
jnp
loope
es
call
sbb
es
add
mov
fwait
inc
or
dec
add
pop
outs
pop
dec
aaa
add
or
mov
mov
push
nop
mov
adc
mov
test
mov
lds
pop
fstp
jne
mov
ins
data16
cmp
shl
pop
and
add
loope
push
fadd
or
test
pop
xor
push
and
push
sub
maxps
and
adc
je
lds
or
in
xchg
push
shr
dec
inc
xor
dec
shr
les
ret
adc
pop
jmp
cwde
mov
cdq
addr16
or
lods
dec
rol
mov
dec
shl
pop
in
repz
push
xor
loope
ds
cld
xor
pop
add
adc
ins
pop
push
xchg
sub
add
popf
enter
inc
push
popa
push
and
imul
xchg
sbb
test
inc
xlat
jbe
popf
and
enter
adc
cwde
mov
cli
jge
arpl
adc
(bad)
pop
popa
xchg
stos
lock
movs
in
dec
test
sbb
push
mov
loopne
fnop
xchg
push
sbb
fistp
jno
push
int
in
test
nop
push
pop
push
or
mov
dec
xor
jl
push
xchg
push
sbb
jp
das
fsub
hlt
jae
push
push
(bad)
mov
pop
xor
mov
cmps
shl
pop
call
daa
inc
fst
cmps
dec
ret
fdiv
fwait
arpl
adc
inc
loop
loopne
not
movs
les
adc
test
xchg
fsubr
cmp
or
jnp
icebp
popw
adc
out
inc
nop
pop
or
cld
inc
aad
xchg
ja
iret
mov
fsub
xor
cmp
xor
mov
and
add
dec
test
add
inc
mov
add
xor
cwde
add
cmp
es
into
inc
ret
in
push
and
or
sbb
mov
mov
or
xchg
sub
mov
sbb
neg
vcvtsi2ss
push
arpl
scas
inc
push
xor
fadd
add
rcl
adc
fwait
sub
outs
ja
lods
lahf
pop
lods
push
add
(bad)
test
jne
daa
ins
xchg
xchg
push
add
mov
mov
loopne
jnp
je
outs
adc
xchg
xchg
mov
rol
push
adc
sub
jns
add
cmp
adc
or
jmp
fisttp
test
xor
adc
cmp
jo
sbb
xor
xor
push
aam
mov
mov
gs
cmp
jmp
dec
pop
mov
sub
push
cli
movs
movs
pop
and
in
inc
jl
cdq
(bad)
sbb
js
xchg
loopne
(bad)
jae
cmps
jne
in
(bad)
push
les
inc
jle
clc
mov
(bad)
out
arpl
add
push
repnz
mov
or
lods
or
xchg
mov
call
sub
dec
cvtps2pd
je
dec
in
ja
dec
xchg
or
ficomp
add
and
out
cs
inc
inc
and
and
sbb
ins
shl
frstor
pop
stc
xchg
adc
mov
add
shr
mov
ins
rol
jge
sub
mov
scas
clc
and
mov
mov
test
push
or
or
push
adc
bound
mov
push
stos
inc
inc
scas
and
mov
xchg
add
in
dec
cmp
loopne
xor
pop
lock
pusha
mov
hlt
and
jmp
dec
xchg
mov
sbb
pop
xor
dec
mov
and
pop
xor
or
xor
jl
jb
adc
call
push
gs
jmp
retf
jl
je
scas
pop
sub
into
jne
mov
xchg
inc
test
sbb
neg
mov
cli
daa
mov
adc
shr
add
pop
mov
in
dec
cmp
xchg
sub
lock
clc
sbb
shr
in
repz
mov
sbb
jg
mov
movs
or
js
mov
setb
dec
setl
shr
or
push
xchg
xor
pop
adc
int
add
or
pop
loopne
test
pop
dec
sar
ret
cmp
arpl
jo
push
jb
int
jmp
arpl
imul
js
add
pop
ins
xchg
in
or
adc
popa
jecxz
push
or
cmps
inc
jo
test
sbb
sub
js
js
inc
jbe
inc
add
into
dec
shl
sti
jo
jmp
jne
pop
xchg
ss
sub
push
xor
(bad)
push
loopne
pop
aaa
movs
daa
or
pop
inc
clc
mov
mov
pop
add
add
leave
mov
cmp
sub
mov
mov
mov
(bad)
mov
pop
(bad)
adc
cmp
ss
sbb
sub
cmp
push
imul
xchg
fcomp
xchg
push
in
das
adc
rol
lods
add
test
pusha
sbb
out
push
jp
in
add
and
jne
push
and
ins
in
or
sub
dec
lds
and
xchg
jle
pop
push
lods
adc
mov
cwde
jle
fcmovu
inc
cdq
mov
and
push
mov
xor
sti
or
jmp
das
lock
in
mov
loope
and
jbe
cmp
bound
or
jecxz
push
iret
inc
lods
mov
push
add
mov
shl
bound
sub
xchg
ja
dec
and
pop
adc
pop
(bad)
push
push
dec
jmp
imul
inc
mov
cld
jl
and
xchg
dec
mov
arpl
loopne
outs
stos
sbb
ficom
or
jo
xchg
mov
or
jmp
and
das
fst
fld
xchg
jmp
or
paddq
mov
inc
(bad)
push
sub
jnp
cmp
add
jbe
inc
jmp
sbb
jne
and
pop
sbb
pop
test
ror
scas
or
xor
outs
fiadd
pusha
(bad)
nop
inc
cmps
sbb
leave
dec
sbb
and
add
dec
add
add
fild
and
outs
je
or
xchg
hlt
mov
pusha
cmp
adc
sub
and
mov
pop
push
por
sub
mov
ss
retf
call
inc
ss
ins
ret
jle
sbb
call
inc
or
mov
xor
aaa
adc
mov
ins
push
push
popa
or
pop
xchg
mov
mov
jne
jmp
mov
xchg
loopne
push
mov
int3
push
xchg
inc
and
push
add
sbb
arpl
ss
push
(bad)
loopne
sub
xor
jmp
lods
je
mov
sbb
or
test
call
push
add
in
in
rcr
mov
sti
jge
js
data16
int
xor
dec
add
les
xchg
movs
push
add
ret
push
repnz
hlt
out
popa
xor
sub
ror
in
push
and
add
sub
sbb
aam
and
js
jns
adc
dec
inc
fisubr
inc
add
inc
mov
pop
xor
add
xchg
sub
mov
fdiv
jb
ja
(bad)
(bad)
push
icebp
fwait
aam
add
std
xor
adc
addr16
test
outs
or
mov
pop
jl
pop
imul
rcl
or
jo
test
push
sub
or
js
or
pop
jecxz
dec
and
push
mov
xchg
neg
rol
mov
nop
loop
arpl
mov
xor
je
xchg
mov
xor
inc
adc
add
xor
mov
pop
ins
shr
or
fadd
push
xor
push
cmps
mov
lea
and
fimul
inc
adc
adc
xlat
fild
fistp
loope
fisttp
sbb
sahf
test
sar
cwde
hlt
enter
add
or
xchg
das
jne
push
mov
(bad)
sbb
mov
xchg
outs
adc
repz
or
pop
and
xor
lock
adc
les
fnstcw
inc
hlt
xor
fadd
ret
mov
sbb
sub
nop
sbb
es
imul
mov
jb
mov
push
inc
jb
pop
add
add
lock
xchg
cmp
and
sub
pop
cmp
adc
add
cmp
ja
scas
mov
(bad)
test
xchg
ret
jo
jmp
push
scas
mov
scas
inc
jns
dec
push
stos
dec
push
jno
xchg
mov
xor
dec
aad
loop
pop
daa
or
push
push
sbb
or
mov
nop
mov
sub
sub
pusha
repnz
std
sbb
(bad)
xchg
adc
inc
add
les
mov
jno
cli
or
xchg
ffree
or
push
mov
stos
mov
pop
add
iret
mov
ret
lods
gs
test
push
push
rol
dec
add
(bad)
mov
mov
call
or
xchg
cld
cmp
jmp
cmp
and
dec
inc
cmp
out
movs
push
ret
xor
and
aam
or
push
in
ret
daa
loope
cmp
(bad)
nop
in
mov
dec
call
call
cmp
idiv
push
popa
mov
sbb
push
aaa
jmp
push
cmpps
nop
rcl
push
jecxz
mov
lea
ja
pop
lea
stos
scas
xchg
push
or
lds
add
inc
sbb
ja
lea
push
nop
aaa
add
push
test
daa
shl
push
sbb
add
je
jg
dec
in
test
out
(bad)
fiadd
mov
add
pushf
or
fadd
stc
mov
add
arpl
fwait
sbb
mov
push
test
or
or
jne
pop
sbb
mov
out
or
in
sbb
outs
inc
push
das
mov
jg
dec
cmp
fisttp
push
adc
fsubr
add
sub
pusha
lahf
pop
sbb
adc
ss
repnz
add
jge
je
add
fnstcw
inc
and
adc
jns
mov
add
adc
cmp
dec
loope
in
ss
and
adc
(bad)
cmps
add
jnp
cmp
out
sbb
or
fwait
call
pop
mov
adc
adc
call
mov
push
sub
loop
mov
mov
and
(bad)
fs
cld
cld
cld
inc
add
sbb
and
cld
lea
adc
cld
cld
dec
and
xchg
inc
cmp
add
add
sbb
dec
xchg
popf
xchg
test
fs
add
push
sbb
loope
popf
inc
push
add
cmp
jmp
outs
mov
pop
cwde
or
lahf
das
adc
cmp
mov
sub
sub
add
jo
lods
and
mov
inc
jg
pop
adc
add
xchg
add
mov
arpl
mov
sbb
and
pop
(bad)
xlat
sub
and
pop
jb
lds
push
push
adc
jb
pop
jl
mov
and
and
in
daa
inc
xor
cs
dec
cmp
in
lahf
add
mov
mov
adc
mov
pop
pop
add
sbb
mov
js
pop
repnz
or
mov
push
(bad)
dec
xor
enter
jl
jecxz
lea
outs
mov
dec
adc
sub
enter
or
mov
jo
cdq
pop
adc
jp
out
add
ret
fs
scas
sbb
pop
dec
dec
mov
inc
push
dec
dec
jb
sbb
fild
sti
test
pop
stos
jne
push
push
ror
pop
fist
dec
dec
shl
ss
push
xor
call
aaa
mov
sbb
inc
fs
xchg
ficom
mov
iret
aaa
sub
xor
xor
xchg
dec
mov
jb
sbb
in
sbb
push
and
or
sbb
(bad)
push
adc
cmp
ja
in
inc
(bad)
push
leave
cs
xchg
add
push
iret
call
out
inc
pusha
mov
mov
out
jl
or
jle
pop
and
nop
daa
cmp
imul
movs
jae
xor
inc
inc
sub
es
push
out
loope
aaa
dec
aas
pop
cmp
fdivp
call
or
pop
pushf
fadd
push
add
pop
lock
jb
jne
sub
or
mov
call
sbb
pop
jno
jo
lahf
iret
and
inc
arpl
mov
cmp
dec
mov
add
js
sub
inc
dec
cmp
cmp
xor
add
pop
sbb
and
pop
lock
aaa
mov
lock
inc
adc
cli
add
cmp
test
sahf
or
push
mov
jne
push
int3
mov
mov
sbb
pop
push
cmps
ror
sub
adc
inc
add
add
push
repnz
in
std
and
sbb
dec
inc
js
cmp
cmp
push
out
jno
shr
adc
mov
pop
add
cmps
xor
outs
mov
inc
sbb
push
sub
sub
ffree
pop
adc
sub
add
pop
pop
adc
je
adc
inc
jge
outs
lods
and
in
cmp
je
pop
fistp
ins
sbb
pop
aam
loop
and
push
push
and
data16
cmp
int3
jne
cmp
mov
push
pusha
imul
push
push
xor
cmp
xchg
sahf
mov
or
add
dec
cmc
adc
enter
pusha
push
or
shl
pop
jl
xor
jae
cmps
mov
mov
inc
icebp
div
into
test
dec
inc
pusha
dec
add
and
pop
xchg
imul
add
dec
sbb
loopne
outs
scas
into
xor
lds
jnp
and
cmc
les
mov
or
inc
mov
data16
(bad)
popf
das
mov
mov
jo
enter
or
push
rol
push
ret
and
xor
data16
aaa
fs
shl
mov
xchg
mov
jecxz
test
outs
dec
add
xor
enter
sbb
xor
mov
push
fsub
ret
(bad)
(bad)
dec
clc
out
dec
inc
pop
jns
dec
sbb
xor
pop
add
adc
popf
test
icebp
sub
or
or
xor
(bad)
mov
mov
push
jge
loop
ror
test
inc
add
or
inc
pop
ret
movlps
dec
mul
jo
mov
adc
in
xor
jmp
es
cdq
adc
adc
push
mov
shr
or
and
sbb
add
lods
and
dec
jae
sub
or
test
sti
clc
jl
dec
rol
push
or
mov
adc
mov
jns
sub
hlt
push
fnsave
pop
movs
add
pop
mov
mov
and
sbb
cs
add
mov
push
lock
dec
and
(bad)
call
jmp
sbb
mov
pop
sub
push
into
or
adc
movs
ins
inc
push
shr
cmc
or
jne
sub
add
push
fs
push
dec
cmp
add
je
into
xchg
add
dec
add
pop
cmps
add
dec
shl
stos
enter
mov
or
cmp
and
inc
or
xor
lock
mov
(bad)
xchg
sub
pop
add
sbb
or
or
xor
pusha
xchg
clc
hlt
dec
es
push
dec
loop
rol
cmp
bound
sub
mov
xchg
sbb
mov
mov
adc
or
push
aas
mov
sub
inc
pop
or
iret
mov
nop
inc
or
xchg
data16
pop
rcl
xor
inc
ins
int
outs
cmps
pop
hlt
je
clc
sbb
push
test
lods
add
sbb
cmp
and
retf
lahf
mov
aam
adc
push
cmp
dec
mov
loop
outs
nop
xchg
sbb
fbld
js
nop
mov
fwait
mov
adc
or
sbb
mov
pop
lea
gs
mov
mov
push
cmp
jns
dec
mov
adc
shl
add
inc
add
enter
cmp
nop
add
add
call
clc
dec
pusha
push
inc
xlat
push
fdiv
lock
outs
into
sbb
retf
inc
or
sbb
cmp
dec
ins
mov
js
add
test
mov
cmp
and
cmp
fisubr
xor
add
add
sahf
cli
xchg
push
inc
fs
hlt
or
mov
or
sub
call
pusha
sub
shl
rcl
cwde
adc
sub
ret
ins
xor
mov
pop
test
mov
adc
sub
and
sub
ror
sbb
cmp
push
inc
add
psubusb
pusha
push
mov
cmp
xor
jno
jl
rcl
icebp
push
pop
ret
outs
and
push
mov
cmp
adc
push
jns
cwde
add
js
push
push
lahf
aaa
ret
test
movs
(bad)
bound
jne
cmp
mov
jbe
xchg
add
add
out
pop
adc
cmp
adc
in
ror
mov
mov
xchg
cmp
loope
sub
mov
cmp
push
jo
or
xor
ins
xor
sub
sub
xor
sub
inc
sbb
in
push
pusha
jle
ret
fsubr
xchg
nop
push
and
push
push
scas
jo
enter
(bad)
shr
loope
pop
pop
cmp
cmps
in
cmps
adc
in
mov
dec
dec
xor
ret
in
adc
mov
test
mov
and
test
add
shl
lea
jne
pop
imul
lods
ss
push
xor
in
add
jno
aam
in
or
pop
test
or
icebp
and
mov
jge
inc
js
test
xor
mov
ins
or
popf
add
mov
push
jo
and
add
mov
in
add
js
sbb
inc
sbb
lods
sbb
(bad)
arpl
daa
or
mov
pop
fld1
lea
daa
cmp
arpl
mov
xchg
jno
inc
sti
jo
push
and
xchg
stc
mov
add
inc
rcl
addr16
pop
enter
xchg
call
mov
aad
test
dec
dec
dec
inc
dec
dec
xor
js
ss
adc
sub
xchg
rcr
loopne
mov
mov
or
test
mov
sbb
sbb
es
ret
push
xchg
and
fisttp
popf
out
pop
push
sbb
(bad)
mov
les
push
push
and
clc
mov
sub
mov
dec
arpl
cmp
mov
or
or
or
add
test
pusha
enter
nop
cwde
and
push
pusha
jecxz
or
adc
movs
inc
xchg
jae
jmp
movs
repnz
bound
sbb
enter
mov
or
mov
sub
jnp
std
ss
push
nop
jnp
sbb
cmp
or
dec
ror
and
jg
aam
in
and
aam
(bad)
push
add
inc
arpl
push
retf
xor
repz
add
loopne
test
pop
inc
outs
out
test
adc
movs
loopne
rcr
fwait
and
or
sub
ss
sbb
inc
arpl
push
or
add
mov
add
sub
inc
xchg
(bad)
nop
daa
lock
aam
xchg
jo
xchg
mov
loopne
add
cdq
inc
adc
test
fs
fbld
xchg
sbb
jne
repz
jns
push
js
pusha
sbb
test
sahf
test
into
jmp
sar
test
mov
adc
pop
je
das
js
loope
lea
or
ins
nop
mov
inc
mov
adc
or
fadd
mov
push
mov
es
inc
push
sbb
fcom
xchg
or
(bad)
xchg
mov
sbb
add
pop
fwait
jne
shl
pusha
je
or
adc
inc
pop
jb
mov
lock
dec
push
xchg
inc
add
jmp
cmp
sub
add
jp
xchg
rcl
inc
inc
mov
mov
aad
add
dec
push
or
in
mov
test
jns
loop
cs
jecxz
push
mov
jmp
loope
(bad)
(bad)
mov
das
or
ret
sub
push
(bad)
in
cmp
aas
jne
test
daa
push
mov
add
retf
cs
mov
xor
cwde
dec
or
adc
sbb
push
das
call
jl
cdq
test
ds
cmps
sbb
jne
cdq
jl
adc
mov
push
cwde
jl
mov
xor
xor
or
jecxz
xor
and
inc
inc
sbb
pop
add
cmp
lahf
inc
xor
or
adc
adc
ficom
mov
dec
js
xchg
and
adc
pushf
ficom
pusha
fild
adc
pop
and
mov
sub
mov
mov
xor
mov
or
push
jo
pop
jmp
sub
cmp
fldcw
xchg
jg
add
clc
push
jg
adc
mov
mov
push
and
arpl
pop
ret
mov
daa
jmp
pop
adc
sbb
call
retf
enter
add
inc
cs
in
aaa
cmp
adc
cmp
imul
sub
sti
mov
cmp
jb
out
pop
stc
jns
add
add
xchg
adc
pop
push
add
outs
fs
sbb
add
shl
xor
push
shl
and
pop
dec
or
jns
sub
neg
jo
sbb
stos
in
je
lods
xchg
push
arpl
mov
int3
sbb
mov
mov
mov
js
dec
and
add
test
pop
cld
js
or
ret
mov
movs
lods
addr16
sub
pushw
inc
stos
and
lods
mov
mov
inc
fiadd
add
xor
sub
mov
loopne
inc
push
lods
adc
inc
add
mov
adc
fs
scas
push
call
add
sub
mov
mov
ret
adc
inc
mov
pop
mov
ror
add
(bad)
dec
cmp
add
push
inc
push
fidivr
add
pusha
ficomp
xchg
ret
gs
test
test
cmp
cmp
inc
mov
add
xchg
mov
add
popf
push
xchg
loopne
jge
rcl
push
cmp
xor
not
(bad)
mov
jno
or
ffree
jl
jecxz
add
cmp
xor
out
cwde
and
mov
sti
and
je
and
aas
push
add
aad
shl
(bad)
jmp
int3
or
inc
aaa
add
push
cmp
inc
pop
fwait
rol
mov
push
mov
mov
addr16
or
fild
cmp
push
xor
sti
jbe
mov
xchg
sbb
pusha
aad
push
add
cmp
fisub
sbb
leave
fistp
dec
inc
mov
ins
add
jno
ret
out
mov
jmp
ins
mul
arpl
in
mov
add
jo
cmps
in
shr
cmp
pop
and
dec
cmp
mov
lea
sbb
in
jnp
mov
add
jbe
hlt
imul
xor
and
popa
fild
gs
movs
fst
shr
or
and
push
sbb
and
scas
mov
cmp
adc
dec
pop
jo
enter
inc
inc
xchg
dec
adc
or
jcxz
cmp
mov
or
dec
mov
rcr
cmps
icebp
or
movs
sub
jmp
add
mov
mov
or
daa
stc
pop
test
jb
adc
push
cmp
or
pop
push
pop
push
icebp
or
add
add
mov
fmul
sbb
cmp
mov
fcom
add
push
test
add
sub
inc
sub
loope
adc
push
nop
inc
dec
std
adc
rcr
xor
sub
hlt
aam
dec
add
call
and
enter
js
jmp
test
and
add
rcl
cwde
in
(bad)
push
dec
mov
add
jmp
scas
sub
jno
fild
pop
xchg
mov
xor
fild
sbb
add
add
mov
jne
arpl
ret
mov
sar
add
imul
pop
or
mov
rol
add
or
mov
(bad)
inc
or
sub
(bad)
mov
sbb
test
(bad)
enter
aaa
jmp
push
jmp
inc
jne
pusha
jmp
aam
add
add
mov
in
mov
pusha
push
jnp
cmp
repnz
xchg
js
cli
cmp
pop
enter
xchg
fcom
and
or
mov
mov
pop
shr
popf
jmp
mov
adc
cmc
mov
adc
push
pop
or
aaa
push
add
pushf
push
enter
add
and
lock
mov
push
jmp
pop
xchg
push
hlt
mov
and
mov
xor
rcr
or
popf
sub
jle
pop
fsubr
mov
pop
repz
xchg
mov
push
or
mov
movs
jmp
movs
push
test
dec
sbb
and
mov
test
cmp
fidivr
or
rol
(bad)
enter
cmps
mov
enter
cmp
mov
dec
repz
or
shl
cmp
test
dec
pop
mov
rcl
clc
push
mov
add
in
imul
es
add
cli
cmp
nop
lahf
sub
into
and
pop
sub
loopne
data16
adc
(bad)
rcl
cmp
inc
pop
inc
lods
jnp
and
aas
mov
mov
and
shl
mov
mov
stc
jmp
adc
popa
je
push
sbb
jge
sbb
add
cmps
and
xchg
push
push
add
xchg
int
xor
ret
mov
lds
jnp
sti
dec
add
mov
xchg
add
outs
daa
xor
addr16
mov
ss
lea
iret
stos
sbb
inc
aam
add
and
sbb
pop
xchg
lods
jmp
sub
push
mov
dec
and
push
sub
dec
jp
rcl
(bad)
lods
cmp
push
xor
mov
(bad)
hlt
loop
adc
jecxz
in
sub
add
sub
ss
dec
cmp
inc
mov
pop
call
cmp
js
dec
xchg
push
adc
sub
sar
push
ror
jmp
push
mov
or
jne
shl
shr
js
add
sar
in
fcom
xchg
stc
retf
push
xor
lds
mov
dec
dec
push
sub
xor
and
retf
mov
and
les
or
in
dec
movzx
push
retf
cmps
clc
es
enter
mov
movs
rol
sub
adc
je
xchg
js
mov
and
pop
dec
nop
ins
sbb
dec
inc
mov
adc
repnz
fcom
test
out
rcl
pop
ret
pop
cmp
xor
inc
clc
nop
sbb
iret
mov
push
stos
xor
sbb
sbb
add
mov
imul
sub
test
sbb
clc
jb
fist
xchg
(bad)
xchg
xchg
out
inc
mov
dec
mov
das
inc
sbb
add
add
cmp
inc
mov
call
fld
inc
adc
inc
mov
xor
test
add
adc
cmp
ret
call
div
mov
fs
pop
(bad)
jo
push
inc
dec
inc
sbb
pop
cmc
push
mov
outs
dec
xchg
les
enter
dec
push
jns
xor
movs
cs
int3
movzx
push
cmps
ret
fisub
or
repnz
not
inc
(bad)
sub
mov
lds
add
(bad)
push
je
sub
in
fs
xor
inc
or
add
mov
push
xor
and
cmp
sub
int3
inc
dec
out
pop
mov
jmp
ret
ret
xchg
or
xchg
mov
dec
adc
add
movs
dec
mov
iret
adc
xchg
in
sbb
aaa
push
out
sub
shl
lea
push
cmps
adc
test
jmp
dec
sbb
add
lods
or
push
cmp
dec
jne
adc
dec
inc
in
adc
inc
dec
adc
(bad)
loopne
nop
lds
inc
mov
retf
mov
nop
les
mov
jo
call
mov
ror
xlat
dec
hlt
dec
test
dec
jbe
mov
add
scas
sar
popa
jmp
adc
xchg
cmps
mov
sbb
mov
outs
es
add
inc
repnz
and
inc
mov
imul
ins
add
daa
dec
cmps
jne
icebp
adc
inc
dec
add
or
inc
outs
sub
pop
jmp
or
in
xchg
mov
gs
and
ds
inc
push
(bad)
and
rcr
xor
jo
push
add
popa
mov
or
jb
inc
mov
int3
inc
bound
int3
push
add
adc
cmp
cmps
sti
shl
sbb
shr
push
in
ret
or
and
mov
inc
pop
add
and
sbb
or
aaa
pop
and
mov
push
int3
xor
sub
jmp
or
inc
mov
xchg
sbb
call
or
in
je
pop
ret
cwde
ffreep
lock
push
fiadd
mov
xchg
dec
loop
xchg
mov
mov
pop
cmps
(bad)
inc
adc
adc
addr16
mov
(bad)
sub
enter
dec
jbe
push
add
test
cmp
or
scas
fwait
call
push
jno
ror
stc
jmp
mov
test
adc
inc
pusha
add
add
mov
pop
aaa
add
js
jnp
add
popa
dec
or
jnp
mov
add
daa
mov
and
stc
xor
icebp
add
jl
clc
jmp
inc
dec
mov
jp
mov
arpl
lock
shl
mov
pop
push
sbb
pand
imul
adc
add
inc
mov
out
sub
mov
push
xlat
dec
inc
imul
push
adc
add
inc
sbb
and
les
call
sub
ins
xchg
add
fmul
sub
clc
sahf
sbb
(bad)
mov
and
add
mov
ins
add
or
or
add
dec
sbb
pop
clc
jne
push
fdivr
setns
push
ja
mov
shl
push
rol
rcr
dec
push
add
and
mov
pop
sar
clc
clc
or
jge
mov
sub
sub
mov
sbb
adc
es
rol
mov
mov
jo
xor
pop
push
pushf
fstp
sub
scas
add
mov
dec
jo
(bad)
lock
in
les
aas
in
rol
adc
xor
pop
mov
(bad)
mov
sar
sub
test
sbb
mov
xchg
mov
cmp
iret
push
bound
clc
shr
dec
inc
fst
jmp
fst
adc
pusha
es
pop
cwde
mov
mov
sub
mov
or
add
mov
xor
and
das
jmp
bound
sub
mov
inc
jb
and
inc
cld
div
jecxz
dec
je
and
mov
push
das
jmp
pop
and
dec
inc
mov
cwde
sub
cld
pop
fld
lea
inc
and
into
add
cmp
adc
xchg
jge
jne
(bad)
jle
retf
cmp
test
lods
ds
add
sub
jbe
mov
and
out
lds
in
dec
and
mov
sub
jmp
cs
pop
mov
xchg
pop
imul
or
sbb
daa
pusha
pushf
or
sub
adc
add
lea
and
mov
mov
adc
xchg
jo
ja
fadd
test
sub
push
inc
ds
sbb
pop
ins
rol
arpl
in
push
cmpxchg
and
push
lea
inc
jno
or
xchg
clc
jecxz
jge
cli
dec
jge
adc
and
xor
les
test
mov
xchg
and
(bad)
fcom
adc
push
stc
push
in
pop
repz
aam
or
and
push
xchg
fcomp
nop
push
sub
xor
mov
scas
pusha
test
pop
dec
mov
adc
fsubr
cdq
xor
lock
pop
sbb
(bad)
lock
adc
mov
adc
shl
and
pusha
mov
dec
or
out
popa
lea
aam
add
aam
or
push
jmp
xchg
jmp
mov
push
aam
sbb
cmp
mov
cmps
je
scas
movs
call
das
fiadd
mov
push
jle
popf
movq
push
mov
push
push
pop
xchg
and
xchg
dec
jo
ins
push
add
in
jg
cmp
std
outs
inc
cmp
je
test
aaa
or
or
sbb
jne
retf
sbb
mov
adc
lods
movhps
pop
icebp
arpl
xchg
dec
pop
push
pop
nop
xchg
ret
or
mov
mov
retf
add
clc
sub
push
nop
paddusb
inc
clc
jp
aam
dec
push
mov
and
add
add
mov
push
pop
mov
adc
dec
or
fisttp
inc
add
add
test
mov
sub
inc
arpl
dec
pop
fisttp
shr
and
mov
les
mov
sub
xlat
inc
mov
stc
sub
(bad)
test
enter
stc
add
(bad)
dec
(bad)
and
bound
adc
inc
es
fs
and
ret
outs
daa
sub
cmp
pop
sbb
sub
(bad)
idiv
sub
dec
clc
lds
fist
add
addr16
cmp
stos
push
push
adc
xor
xor
xchg
pop
sbb
test
pop
pop
push
je
mov
push
mov
xor
dec
mov
jb
movs
fs
cmp
test
cmovo
xor
scas
fld
cwde
xchg
pop
add
aam
mov
in
mov
sbb
inc
pop
or
dec
outs
adc
enter
mov
or
dec
movs
or
mov
cmp
jle
xor
sub
adc
add
and
jne
aas
adc
jae
movs
mov
imul
pop
lea
sbb
out
push
add
shl
cdq
sbb
lea
in
or
and
test
mov
out
js
sbb
not
nop
add
mov
mov
mov
je
or
pop
(bad)
inc
loopne
dec
adc
scas
loope
(bad)
mov
mov
pop
arpl
mov
mov
out
or
add
inc
or
repz
scas
adc
adc
or
clc
pushf
mov
int3
jmp
(bad)
pop
and
add
adc
sbb
dec
dec
ficom
xchg
in
sahf
ret
sbb
xchg
mov
jns
out
push
adc
pop
or
pop
bound
dec
rol
leave
push
(bad)
out
jns
mov
inc
and
or
mov
or
nop
lods
icebp
push
cmp
xchg
or
add
jp
mov
jae
pushf
add
dec
icebp
in
jns
shl
in
or
push
fild
and
nop
add
in
hlt
push
daa
in
nop
out
hlt
enter
push
mov
enter
lock
jb
(bad)
push
jp
xchg
inc
ins
inc
stos
sbb
lock
ss
push
cmp
or
sub
add
mul
(bad)
dec
bound
mov
iret
out
dec
xor
pop
pop
rcr
or
mov
dec
dec
sbb
adc
arpl
ror
sar
in
iret
adc
sahf
sub
cmp
dec
and
inc
xchg
jb
xchg
pushf
in
in
call
pop
dec
dec
in
dec
or
loopne
xchg
fcom
xchg
fsub
dec
es
aam
fcomp
nop
dec
es
rol
call
cld
repnz
cld
jecxz
sub
test
int
sti
shl
nop
or
sbb
rcr
repnz
or
jecxz
enter
mov
fsub
popa
jg
xor
xchg
xchg
sub
sub
lods
in
add
(bad)
and
clc
loopne
xor
sbb
jne
das
in
sti
inc
sti
in
nop
pop
les
adc
inc
sti
add
or
rol
lock
xchg
add
xor
or
cli
nop
imul
inc
retf
mov
rol
fdivr
mov
test
and
push
enter
add
adc
mov
je
mov
je
xchg
les
ins
nop
(bad)
es
and
adc
or
push
jbe
and
aaa
icebp
jns
push
pop
dec
push
sub
adc
sub
xchg
mov
xchg
test
mov
popf
sub
clc
push
push
push
pop
pusha
(bad)
mov
add
sub
mov
sbb
fisubr
in
in
dec
popa
cmc
movs
xor
mov
movs
and
nop
pop
xor
adc
sub
sub
test
add
imul
cmp
jb
and
add
push
leave
add
inc
cld
add
xchg
add
adc
add
xchg
sub
push
loope
sub
cld
inc
push
pusha
mov
int3
adc
xchg
ss
xlat
out
lods
aam
sar
out
movs
in
pop
sub
mov
sar
sub
call
mov
mov
popf
adc
push
pop
pushf
push
jmp
push
push
and
cs
pop
arpl
jle
imul
je
or
push
ret
js
jne
push
inc
sub
inc
pop
cs
jo
std
mov
inc
push
push
pop
push
inc
push
dec
ds
dec
adc
dec
push
push
das
inc
sar
sbb
push
pop
shr
(bad)
gs
dec
sahf
or
loope
push
outs
jae
and
das
xchg
pop
xor
jp
cmovge
(bad)
sub
pop
sti
pop
inc
push
push
das
dec
push
push
mov
xchg
inc
push
dec
dec
dec
pop
push
dec
std
inc
dec
dec
pop
xchg
or
and
ja
dec
es
daa
sub
cmp
jle
inc
dec
xchg
inc
ds
jecxz
push
ffreep
ins
(bad)
mov
adc
inc
pop
pop
inc
inc
push
push
inc
shr
neg
dec
push
add
and
sbb
jo
test
adc
lock
aaa
pop
dec
inc
mov
aaa
or
pop
inc
and
dec
inc
push
out
inc
data16
or
leave
inc
ret
adc
pop
popa
mov
(bad)
push
mov
aam
xchg
arpl
adc
call
pop
adc
mov
shr
gs
fs
jo
cld
fild
sbb
and
lock
or
xchg
retf
in
push
jae
adc
nop
xlat
jl
dec
jns
retf
outs
and
inc
add
push
call
cwde
push
aam
and
mov
mov
xchg
cmp
loopne
call
cmp
outs
pop
pop
(bad)
scas
rol
and
lods
pop
inc
jmp
push
sub
rcr
pop
dec
inc
inc
push
or
dec
repz
mov
dec
push
cmp
add
cmps
pop
ss
int3
pushf
lods
dec
jl
mov
shl
jo
pop
mov
imul
imul
out
push
pop
pop
jo
cmps
pop
mov
and
pop
mov
fld
aam
ss
sub
hlt
pop
btr
test
and
pop
pop
and
jno
inc
fs
lock
push
dec
(bad)
jl
imul
ss
fsub
es
ins
ins
push
cld
or
mov
(bad)
enter
mov
mov
ds
fldcw
jmp
popf
push
mov
push
push
fistp
test
pop
scas
pusha
loopne
mov
scas
sbb
add
addr16
push
mov
imul
pop
and
inc
das
add
add
inc
add
push
mov
lock
mov
xor
and
shl
(bad)
jmp
push
es
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
dec
adc
in
add
push
(bad)
shl
stos
repnz
sbb
gs
and
popa
je
xor
xor
mov
pusha
inc
inc
add
or
or
pop
push
and
sbb
test
pop
jle
cwde
xchg
pop
adc
cmovl
or
aam
pop
push
push
nop
dec
aaa
mov
push
add
call
sub
inc
mov
mov
cmps
imul
shl
cmps
cld
add
or
sbb
shl
inc
dec
xor
shl
pop
fs
je
xor
sar
xchg
pushf
dec
shl
(bad)
int3
add
xor
add
nop
popa
syscall
fist
push
inc
ja
in
daa
cwde
dec
js
xchg
daa
pop
sbb
push
jns
jp
jb
nop
shl
aam
nop
mov
pop
cmp
xor
jge
rcr
pop
xchg
into
pop
and
push
clts
xchg
mov
mov
adc
adc
(bad)
push
add
xchg
push
jo
xchg
cmps
imul
sub
cld
or
sbb
cmp
xor
shl
ins
jl
mov
jmp
iret
adc
rcl
add
push
in
push
inc
xor
pop
jmp
inc
lea
adc
stos
mov
push
cmp
imul
push
inc
shr
imul
adc
je
test
cmps
popf
xchg
mov
xchg
aas
pop
test
mov
test
loopne
mov
mov
push
(bad)
cld
and
shl
and
xor
push
inc
sar
fist
retf
ins
sti
jo
mov
or
push
add
aam
in
(bad)
ret
shr
sbb
xor
cmp
dec
rol
and
push
imul
sbb
push
adc
cmps
imul
xor
or
or
cmp
xor
shl
sbb
shl
lods
sbb
rol
ret
fistp
in
push
add
dec
imul
adc
cmps
imul
push
cwde
push
add
lds
add
cmps
imul
mov
cmps
imul
dec
shr
and
cmp
shl
inc
adc
cmp
push
cdq
or
mov
pop
lds
or
or
push
nop
mov
pop
mov
pop
or
jg
cmp
adc
push
(bad)
mov
ret
shl
aad
sbb
cmps
imul
addr16
push
cwde
mov
push
push
fwait
push
dec
shl
pop
ins
imul
js
pushf
test
mov
dec
shl
loopne
inc
nop
cmps
imul
adc
pusha
adc
or
fwait
add
and
xor
imul
xchg
das
sbb
popf
mov
setbe
and
and
adc
xor
sbb
push
or
fs
add
sbb
adc
nop
inc
add
enter
inc
rcl
or
add
cmps
xor
push
push
inc
dec
imul
mov
test
mov
push
jl
mov
out
xchg
out
xor
and
pop
push
in
inc
addr16
inc
scas
les
in
call
sbb
inc
imul
imul
sub
in
add
and
inc
out
xor
xor
jo
mov
inc
or
nop
mov
mov
push
std
mov
sar
xor
rcl
stc
in
clc
cmps
imul
cmps
imul
cmps
imul
call
call
jmp
jmp
sbb
xchg
add
pop
pop
es
out
jbe
cs
add
or
mov
mov
xchg
xchg
sbb
sahf
mov
scas
pop
outs
fcmovb
(bad)
test
add
add
add
pop
or
inc
adc
or
call
or
cmp
pop
and
outs
lods
pusha
dec
fiadd
pusha
mov
fcmovb
cmp
dec
pop
pop
add
or
ins
imul
lds
adc
jbe
out
or
fild
mov
jnp
push
jno
xchg
xchg
pop
xlat
mov
or
mov
xchg
stc
mov
dec
sar
cld
std
(bad)
dec
xor
add
add
xchg
add
xor
push
lea
xor
arpl
aas
pop
jno
in
xor
iret
sub
sub
fistp
test
leave
scas
aad
js
ja
scas
sub
test
mov
icebp
mov
push
out
mov
jbe
stos
popa
push
push
pusha
push
push
loopne
xor
push
push
pop
cmp
pop
jmp
push
dec
pop
inc
jno
rol
lods
imul
mov
jbe
inc
int3
push
dec
sti
(bad)
dec
or
repz
sahf
dec
push
loopne
out
pop
add
jb
scas
xor
mov
mov
cmp
cwde
lods
push
jo
xlat
or
test
adc
mov
imul
or
sub
jo
pop
sub
push
in
(bad)
ror
xchg
inc
sbb
shl
lods
add
ins
adc
add
imul
push
aam
add
mov
adc
cs
or
fldenv
sbb
push
dec
sbb
clc
out
cld
push
and
rcr
nop
cs
pusha
push
je
push
push
or
push
enter
pop
add
cmps
imul
ss
data16
lods
inc
add
call
push
or
push
call
popf
mov
lock
mov
movs
push
cwde
push
xchg
or
addr16
mov
cmp
(bad)
mov
cwde
out
push
sub
cmp
adc
mov
mov
test
cs
mov
cs
ss
adc
pop
jl
xor
lock
nop
and
hlt
outs
or
fisubr
in
scas
inc
sahf
pushf
inc
mov
dec
inc
lods
mov
sub
dec
dec
push
or
mov
data16
mov
push
push
mov
push
scas
fsub
data16
mov
inc
loopne
inc
pop
ror
dec
mov
(bad)
mov
fisub
mov
pop
jno
shl
push
ss
movs
and
mov
imul
mov
imul
inc
ins
cmp
add
sbb
lods
outs
sbb
call
push
dec
sbb
xchg
adc
mov
ret
and
je
mov
adc
dec
add
and
adc
inc
(bad)
in
jno
nop
daa
push
add
add
movs
stos
mov
sbb
or
int3
daa
mov
add
pusha
inc
aam
add
loop
and
inc
add
add
add
push
dec
xchg
iret
add
ins
(bad)
add
pop
inc
sbb
inc
and
ss
mov
dec
pop
push
and
pop
dec
aaa
push
pop
pop
in
push
dec
add
inc
add
xchg
test
adc
dec
xchg
push
loop
imul
pop
imul
mov
mov
push
xchg
lods
cmp
push
ret
inc
push
pop
push
cs
and
ss
inc
push
cs
and
call
dec
cmp
test
or
mov
push
push
push
jbe
dec
or
retf
xchg
dec
inc
pop
sub
and
add
dec
and
cwde
add
inc
jno
inc
add
imul
add
rol
sbb
sbb
add
mov
add
push
mov
inc
cld
jg
clc
nop
out
inc
aas
push
pop
jmp
shr
add
pop
or
push
aas
or
in
and
addr16
ret
or
inc
add
inc
or
push
mov
fs
shr
das
add
psubb
ja
pop
add
pop
out
fisub
sub
fwait
neg
out
(bad)
cmp
and
add
loopne
lock
ja
mov
pop
(bad)
aas
push
cs
mov
ds
xchg
psrlq
addr16
lock
xor
xor
cmp
mov
push
mov
mov
lahf
pushw
jbe
jg
push
mov
cdq
sbb
add
jo
cmp
rol
inc
xor
sbb
cdq
popf
xor
pop
nop
es
push
add
invd
mov
into
push
add
add
and
cmp
loopne
ds
cmp
xorps
(bad)
pop
ds
pop
outs
es
fwait
data16
jg
popf
pop
cs
rcr
dec
add
jbe
pop
cs
pop
outs
es
loope
mov
lods
adc
in
hlt
and
(bad)
pop
in
in
sbb
mov
mov
cs
jle
push
xor
add
(bad)
shl
bound
in
les
test
xor
aas
push
push
cs
add
addr16
inc
pop
cld
pop
cmp
fsubr
mov
jae
jb
pop
lock
shl
cmp
xchg
and
or
out
mov
cmp
sub
inc
add
pop
rep
in
inc
add
pusha
xor
sbb
push
push
sbb
inc
adc
pop
call
cmp
in
mov
push
sbb
or
test
sbb
(bad)
inc
xchg
push
pop
and
xor
push
ror
or
adc
add
and
add
inc
and
mov
mov
xor
add
mov
cmp
sub
mov
daa
pop
data16
jbe
das
cmp
(bad)
xor
daa
and
cs
xor
pop
mov
or
push
adc
cmp
clc
in
(bad)
out
out
dec
push
dec
push
mov
mov
push
push
daa
cmp
jbe
shl
ja
push
(bad)
sbb
dec
daa
dec
add
daa
mov
(bad)
das
retf
fmulp
ja
push
es
push
(bad)
hlt
sbb
or
mov
mov
inc
cmps
lahf
adc
inc
push
jbe
cmp
inc
and
cmp
(bad)
lock
xor
and
daa
inc
jnp
mov
sub
enter
aas
push
xor
mov
xchg
cmp
push
js
pop
aas
js
iret
out
nop
mov
push
lds
push
int3
push
and
and
jle
icebp
push
(bad)
cmp
(bad)
mov
mov
jo
pop
push
(bad)
cmp
(bad)
push
retf
jbe
ins
daa
push
and
push
mov
adc
mov
or
sub
push
and
loop
daa
push
xbegin
enter
test
sar
imul
clc
adc
das
inc
inc
inc
(bad)
sti
inc
or
mov
scas
scas
enter
pop
daa
xor
(bad)
daa
inc
aad
stos
adc
dec
pop
and
ret
daa
mov
out
in
mov
inc
and
(bad)
imul
clc
add
arpl
xor
cmps
cmp
or
cmp
aas
data16
xor
adc
inc
arpl
cmc
ins
adc
inc
shl
xor
es
add
xchg
jbe
xchg
daa
lahf
dec
mov
in
cmp
lahf
(bad)
mov
mov
nop
aaa
out
fs
sbb
daa
push
(bad)
in
shl
push
aas
es
jo
dec
retf
jmp
call
es
arpl
repz
daa
xor
in
repz
movs
or
rcl
adc
shl
sbb
xor
in
loop
cmp
xor
push
stos
movs
xchg
pop
imul
sub
or
xor
xor
cmps
arpl
aas
cs
mov
daa
cld
fld
push
inc
sub
push
xor
adc
and
sub
cmp
ins
push
je
stos
inc
push
mov
sbb
push
inc
mov
in
aas
(bad)
and
inc
ds
cs
stos
sub
ins
lock
nop
inc
fldenv
movs
pop
xor
arpl
fmul
pop
mov
xchg
sub
mov
lahf
jmp
xchg
jne
adc
(bad)
sbb
mov
inc
sub
dec
fcomp
and
jle
adc
cdq
jno
dec
mov
sbb
dec
sbb
or
daa
(bad)
int
push
jl
and
clc
or
pop
test
mov
daa
fcom
daa
fld
imul
xor
dec
daa
ret
popw
dec
daa
dec
daa
clc
dec
mov
(bad)
dec
sar
dec
retf
sub
fst
dec
ror
cmp
sbb
(bad)
pusha
pop
es
xor
cdq
cdq
push
mov
mov
add
inc
push
and
cwde
xor
xchg
mov
imul
(bad)
sbb
adc
sahf
(bad)
cmps
sbb
mov
cmp
sbb
dec
push
daa
shl
pusha
or
cmp
lahf
adc
pop
push
inc
sub
inc
cmp
into
es
mov
scas
or
jno
stos
imul
test
rol
daa
aaa
jl
mov
dec
sbb
and
mov
sub
cdq
stos
sub
xchg
mov
cmp
sub
and
jbe
push
adc
les
push
and
fwait
jbe
daa
sbb
xchg
inc
push
and
out
jmp
loopne
add
xchg
add
enter
xchg
and
aas
adc
push
sub
or
out
(bad)
adc
dec
and
jg
mov
pusha
ret
or
sets
paddb
inc
(bad)
mov
add
pop
mov
lock
repz
jbe
out
xchg
add
pop
or
push
mov
jne
rcl
adc
sbb
xchg
cmps
push
cmp
dec
ss
xchg
push
hlt
add
push
push
jae
lahf
push
je
xchg
retf
addr16
add
inc
push
add
int
cmps
add
xor
push
mov
sub
jbe
xor
mov
push
jb
xchg
dec
cmp
or
scas
dec
jmp
pop
sbb
push
inc
sbb
in
rcr
pusha
fwait
push
or
push
imul
push
adc
mov
pop
or
inc
ss
ins
push
and
pop
or
dec
sbb
imul
ret
jo
imul
jbe
out
pop
fs
jae
dec
arpl
gs
push
push
cs
adc
mov
lods
jb
into
imul
stos
fwait
and
or
cmp
mov
ja
sbb
das
dec
aas
ins
and
imul
ret
push
inc
sahf
bound
jo
imul
mov
ins
rol
jns
push
rol
adc
aas
mov
(bad)
xor
sub
rcl
aas
outs
mov
movs
ficom
ss
and
pop
mov
ins
adc
or
push
add
jbe
add
push
push
ins
xor
xchg
xor
pop
test
ret
add
jne
pop
out
xor
imul
test
cmp
add
scas
dec
mov
and
adc
or
popf
out
movs
pop
imul
imul
cmps
mov
xchg
and
sbb
mov
(bad)
sti
push
ss
pop
fsubr
rcl
bound
mov
and
xchg
fsubrp
in
pop
cmps
jne
repnz
dec
jmp
pop
retf
daa
add
jp
sub
push
cmps
pop
fisub
jne
sub
popa
or
push
push
pop
fdiv
cvtdq2ps
je
loopne
add
ins
xchg
mov
or
ja
and
pop
stos
sbb
jbe
stos
sub
(bad)
imul
push
push
sub
dec
inc
jp
push
and
cmps
call
clc
sub
ret
push
mov
sar
push
cs
imul
push
mov
xchg
or
sub
xor
push
and
push
and
stos
sub
xor
cs
sbb
(bad)
ins
aaa
fiadd
int
and
je
mov
into
cmp
jns
push
cmps
or
sti
je
mov
cmps
cmp
fwait
dec
dec
xor
cli
mov
retf
sbb
mov
add
add
push
fxch
fmul
add
inc
dec
mov
outs
add
dec
dec
push
mov
or
jg
push
adc
js
cmp
xchg
rol
out
xor
push
bound
fldcw
sub
fisubr
add
mov
sbb
imul
data16
adc
and
ss
arpl
push
scas
ss
push
inc
inc
cli
sbb
pop
cmp
pop
pop
jns
es
outs
cmp
fcmovb
sbb
mov
and
ss
and
or
sub
pushw
imul
mov
add
mov
call
xchg
add
fnstenv
sub
arpl
pop
(bad)
dec
loop
call
bound
and
mov
ja
sbb
push
mov
mov
daa
xlat
add
repnz
add
leave
scas
add
push
or
jmp
mov
scas
inc
repz
ja
jbe
jle
ins
gs
push
ins
xchg
daa
sub
ret
xlat
jae
fisubr
jbe
(bad)
data16
ror
shl
out
iret
arpl
xchg
outs
mov
lds
test
ds
mov
mov
dec
outs
test
adc
ret
jl
jae
mov
adc
ja
adc
jb
retf
cmp
and
adc
pop
xchg
dec
dec
loop
jno
jbe
pop
inc
xchg
xchg
cmps
rcl
cli
scas
fwait
fs
inc
ins
inc
(bad)
jnp
mov
add
cmps
ja
cmps
test
mov
sar
jnp
arpl
inc
(bad)
jmp
in
sub
sahf
pop
sbb
arpl
sub
ins
cmp
mov
xchg
sub
ret
call
imul
dec
and
sti
mov
outs
xchg
mov
repnz
dec
push
mov
(bad)
fs
inc
pop
adc
sub
out
repz
jae
or
fneni(8087
and
mov
dec
push
xor
mov
inc
sbb
add
pop
and
mov
or
jb
or
pop
adc
imul
push
scas
push
inc
push
or
xlat
dec
mov
cmp
and
and
sbb
arpl
mov
adc
mov
add
test
jns
push
(bad)
push
dec
pop
sub
add
sbb
es
or
outs
lds
cmps
xchg
jae
(bad)
jae
inc
mov
xor
retf
xor
sbb
pop
xor
push
add
fdiv
shl
loopne
sti
dec
out
dec
shr
add
mov
sub
jae
ins
mov
mov
mov
arpl
add
adc
jecxz
pop
and
mov
add
dec
add
pop
sub
out
sub
pop
mov
push
add
retf
mov
cmps
shr
push
call
daa
push
test
xchg
repz
stos
sub
dec
arpl
test
pop
add
sub
mov
pop
pop
push
cmp
scas
and
pushf
mov
sbb
(bad)
jno
push
sub
xor
ret
loop
mov
mov
daa
mov
mov
inc
sbb
adc
mov
or
inc
sbb
fimul
outs
addr16
inc
mov
pop
dec
xlat
inc
imul
add
scas
cmps
test
jo
lods
ficom
push
mov
push
mov
ficomp
pop
scas
push
fadd
jns
imul
mov
aaa
imul
ds
(bad)
fs
fld
ja
inc
aad
in
ja
sub
mov
sti
(bad)
scas
call
repz
scas
xor
dec
pop
repz
popf
scas
call
push
jnp
jne
inc
dec
push
loop
pop
or
pop
sbb
sbb
pop
jae
push
xchg
ds
or
mov
jne
inc
and
xchg
push
inc
and
stos
rol
mov
outs
push
and
(bad)
mov
pop
pop
cmp
fadd
daa
cmp
pop
pop
jecxz
jg
pop
adc
or
inc
jb
sbb
ss
jb
addr16
sbb
out
das
pop
pop
and
mov
xchg
mov
mov
mov
push
pop
push
add
push
sbb
xchg
or
add
pop
jne
mov
xor
xchg
inc
bound
and
daa
or
lods
fst
out
add
ds
jp
jmp
pand
xor
inc
inc
pop
loope
jae
or
sbb
dec
mov
pusha
pusha
inc
xchg
or
call
shl
push
push
sbb
adc
setne
xor
aaa
test
daa
pop
ja
push
mov
and
call
adc
and
push
cmp
(bad)
mov
and
adc
cs
fadd
loopne
mov
jp
inc
or
push
out
lahf
cmp
mov
rol
sar
push
pusha
xchg
arpl
scas
fild
cmp
sub
fdiv
pop
lods
js
xchg
add
dec
pop
jno
push
repz
push
retf
fwait
pop
lods
fiadd
daa
push
shr
sub
mov
jae
add
cwde
or
push
loopne
adc
pop
cmps
(bad)
ins
sbb
pop
mov
mov
stos
fst
jg
jbe
arpl
and
push
shl
shr
pop
and
(bad)
push
je
mov
mov
xor
push
sbb
mov
les
cmps
retw
pop
pusha
daa
movs
mov
or
adc
mov
adc
pop
push
mov
pop
pop
push
push
or
retf
adc
pop
jmp
pop
js
sbb
mov
sub
ficom
and
xchg
rcr
arpl
out
jne
inc
jb
cmps
adc
ins
arpl
fwait
mov
nop
fimul
cli
xlat
dec
xchg
jae
jle
mov
daa
inc
lds
repnz
mov
outs
sbb
shr
push
mov
rol
ret
add
rcl
ret
push
sub
push
fld
pop
sub
pop
and
push
push
push
(bad)
pop
jb
jmp
stos
popa
push
dec
add
ins
sbb
mov
add
jo
push
adc
ret
jmp
inc
fadd
lods
xor
lods
(bad)
dec
aaa
lds
adc
(bad)
(bad)
jnp
mov
inc
test
jae
shl
dec
pop
sub
add
test
movs
dec
jb
jbe
or
add
xor
test
(bad)
jae
jb
or
fwait
or
das
xor
push
add
push
mov
mov
mov
mov
jmp
mov
fild
pop
dec
jp
jns
outs
adc
icebp
dec
dec
add
pop
add
pop
cwde
fimul
pop
(bad)
out
jns
outs
movnti
xlat
push
mov
or
pop
dec
pop
ins
les
sar
dec
ret
jo
outs
lahf
jb
arpl
int
jo
adc
imul
(bad)
pop
cmps
sahf
push
dec
aas
push
cmps
arpl
xchg
dec
loope
pop
lds
add
shl
xor
push
pop
repz
test
adc
(bad)
jg
inc
add
cmp
aaa
mov
pop
lods
and
add
int3
cmp
sub
adc
push
(bad)
pusha
jge
xchg
adc
icebp
sbb
add
jp
xor
push
push
movs
cdq
jp
arpl
push
add
xchg
fisttp
or
jb
and
dec
sbb
add
popf
push
push
push
or
popf
test
adc
(bad)
int
pop
aad
cmp
xor
jae
imul
adc
or
add
adc
pop
adc
je
les
mov
jo
mov
and
mov
push
imul
sbb
mov
test
in
push
mov
and
sub
je
popa
neg
push
push
hlt
push
add
dec
sbb
xor
inc
int
cmp
or
cmp
dec
mov
imul
dec
jbe
sbb
int
adc
(bad)
jno
dec
add
add
ins
addr16
xor
cmp
or
cmp
mov
sbb
push
addr16
cmp
mov
adc
loope
mov
loope
xor
inc
lods
rcl
cs
jp
xchg
add
data16
xchg
push
cmp
outs
nop
sub
ret
inc
dec
popf
movs
xor
xchg
adc
cmps
(bad)
shl
popf
push
inc
fstp
lods
add
add
add
loope
and
jb
add
add
or
add
loope
in
xor
and
and
aam
and
pop
or
nop
test
jmp
xor
cmp
and
or
ins
or
popa
fbstp
hlt
or
ins
pfcmpgt
push
push
popa
push
ret
cli
or
(bad)
jne
lea
inc
ins
cdq
add
int3
shr
add
mov
test
daa
add
add
add
or
push
push
add
add
dec
inc
push
mov
pop
ss
xor
enter
add
gs
adc
ins
inc
and
ss
mov
or
or
sub
jne
sub
mov
ret
sbb
or
adc
inc
sbb
push
ss
xor
movs
lods
push
adc
dec
fs
push
rcr
ins
out
frstor
and
outs
loope
dec
mov
sub
ss
xchg
je
cmp
push
inc
pop
mov
mov
sub
imul
xor
arpl
pop
adc
adc
pop
bound
dec
shr
inc
gs
ins
add
and
jne
inc
(bad)
sar
inc
cmp
test
gs
cmps
add
push
dec
add
daa
mov
(bad)
dec
fistp
add
aaa
and
loopne
inc
outs
mov
pop
jnp
push
mov
test
pop
push
sub
popa
push
int3
js
mov
aas
mov
inc
adc
shl
pop
cs
imul
out
(bad)
inc
push
dec
outs
push
je
jne
mov
or
sub
xlat
xchg
js
xchg
or
dec
push
adc
mov
sub
sar
sbb
push
xor
xchg
pusha
pop
sbb
adc
arpl
sbb
or
mov
pop
or
pusha
adc
and
sub
mov
jne
clc
(bad)
adc
mov
jno
push
pop
xchg
sub
rol
jbe
adc
shr
xor
mov
sbb
mov
jbe
mov
push
sbb
inc
in
shl
cmp
bound
neg
mov
mov
push
xchg
sbb
das
xor
es
fsubr
stos
add
xchg
jle
dec
test
adc
add
call
mov
stos
pop
or
arpl
aam
push
add
mov
sub
adc
aaa
inc
in
jnp
cmp
jo
cmp
add
push
jns
ins
call
data16
add
mov
daa
dec
ret
mov
xchg
sub
inc
or
or
aam
sub
mov
jo
pop
out
inc
and
and
outs
and
xor
sub
out
xchg
sub
and
sbb
mov
out
(bad)
pop
das
push
repz
xor
mov
mov
or
sub
cmp
add
jb
arpl
mov
test
les
dec
(bad)
cmp
push
sbb
push
sbb
jo
or
push
leave
clc
mov
test
or
fcom
add
(bad)
mov
scas
movs
sbb
sbb
in
sbb
adc
and
cmps
test
xor
outs
or
js
add
sahf
adc
mov
ins
adc
cwde
sub
in
sub
pop
fld
loope
pop
mov
ja
push
xor
jg
rol
or
pusha
daa
fisubr
push
jbe
inc
dec
sti
mov
or
popa
sub
(bad)
pusha
or
and
out
and
add
adc
popa
cmp
push
inc
ins
push
lea
stos
mov
or
xchg
adc
outs
sbb
add
adc
cmp
mov
adc
gs
popa
(bad)
pop
jnp
shl
jbe
jge
push
or
push
lods
dec
shl
sbb
pusha
fild
and
pop
adc
xchg
iret
sbb
pop
movs
jnp
lds
sub
pop
dec
jmp
xor
mov
mov
mov
push
jae
dec
sub
inc
mov
popa
xor
inc
fdivr
loop
push
push
push
inc
mov
cs
or
je
gs
daa
ret
test
aam
adc
and
add
or
outs
push
sbb
les
or
pusha
or
in
cmp
mov
in
and
push
movs
popf
lock
outs
and
mov
dec
data16
sub
fidiv
or
cmp
jecxz
mov
inc
call
ror
daa
jnp
ins
adc
push
cmp
pop
aam
cmp
mov
lods
xchg
dec
popaw
sub
dec
cs
mov
push
inc
and
inc
add
leave
and
add
mov
push
aam
sbb
or
adc
add
lods
rcr
and
and
jg
push
pop
pop
sahf
add
push
ret
stc
jne
sub
inc
pusha
rcr
outs
push
adc
adc
jnp
adc
popa
add
inc
(bad)
leave
outs
adc
fs
adc
aaa
mov
sub
out
iretw
mov
and
pusha
mov
adc
dec
retf
push
aaa
fstp
(bad)
push
pop
mov
add
and
rol
xchg
adc
shl
and
stc
xor
int3
xor
sub
pop
call
loopne
les
xchg
dec
daa
sbb
sbb
pop
mov
mov
mov
sbb
xor
fcom
and
add
sbb
or
retf
int
adc
pusha
(bad)
push
sub
xchg
pop
retf
and
imul
dec
loopne
push
cmp
push
or
xor
adc
sub
loope
dec
cmps
add
inc
adc
into
addr16
mov
loop
inc
pop
fs
ss
push
jg
je
jne
xchg
pop
fiadd
imul
aad
data16
dec
jae
int3
push
adc
ins
cmp
sbb
adc
les
gs
jnp
mov
mov
sub
or
inc
sub
adc
test
call
dec
imul
jne
jae
and
not
pop
test
and
(bad)
push
jmp
adc
dec
sbb
imul
xchg
and
adc
test
rol
sub
sbb
lds
jae
fmul
mov
jmp
pop
jo
push
xchg
stos
cmps
inc
pop
inc
lock
loope
add
out
mov
adc
imul
test
push
enter
popa
inc
inc
pusha
leave
push
pop
inc
dec
inc
sub
adc
push
jge
sbb
and
sbb
shl
sub
lea
dec
scas
daa
jmp
adc
(bad)
shl
js
pop
nop
jmp
pop
inc
adc
aaa
xchg
fmul
jns
movs
cmp
imul
lahf
sub
sub
into
sbb
push
jne
push
mov
imul
inc
jno
sbb
push
je
popw
adc
mov
(bad)
lea
popa
(bad)
(bad)
popa
mov
inc
in
adc
or
mov
dec
sbb
es
adc
mov
inc
fs
stos
inc
sub
lods
out
pop
sbb
shr
lods
sbb
xchg
mov
pushw
push
push
enter
jbe
dec
mov
sbb
adc
jnp
mov
lea
push
(bad)
mov
xchg
cwde
cwde
adc
repz
test
xchg
cmp
fist
or
sbb
inc
adc
sbb
jo
push
mov
call
inc
inc
fs
ret
mov
movs
std
shl
inc
push
repz
in
mov
fs
sub
rol
dec
cdq
pop
mov
int
add
xor
push
sti
push
mov
mov
push
inc
pop
dec
push
xchg
and
sbb
sub
add
(bad)
aas
add
sbb
fadd
daa
jl
outs
add
lock
mov
add
xor
jbe
mov
xadd
pusha
adc
(bad)
fcmovb
sub
and
sar
add
es
jo
push
push
iret
sbb
pusha
add
inc
scas
mov
fcmovnu
add
and
push
or
fsub
not
inc
push
inc
in
cmp
sbb
rol
(bad)
adc
loope
shr
popa
rol
dec
and
ins
jae
jb
xchg
lahf
adc
jb
dec
call
push
in
push
add
dec
mov
or
xor
jae
dec
push
sbb
outs
dec
ja
xchg
and
out
test
lods
aaa
push
add
inc
and
add
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
sbb
add
pop
inc
add
lock
