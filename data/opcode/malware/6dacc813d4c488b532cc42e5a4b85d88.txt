inc
mov
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
adc
add
adc
add
add
and
or
jge
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jle
add
or
add
add
sub
add
or
add
sbb
add
lock
add
add
adc
inc
add
add
cmp
add
or
add
add
add
add
add
add
add
adc
add
dec
add
add
add
add
add
add
add
add
add
in
add
add
add
add
fwait
sbb
fwait
sbb
inc
inc
add
add
iret
add
add
add
add
add
add
push
mov
add
add
pop
or
add
add
sub
add
push
pop
push
add
jle
add
add
and
sub
add
push
add
sub
add
push
or
add
adc
add
adc
sub
add
or
adc
add
jge
add
add
add
pop
push
add
add
add
mov
cmp
inc
sub
add
push
jb
add
jo
adc
add
sub
and
add
add
(bad)
call
mov
add
mov
add
cmp
add
add
gs
push
add
or
add
mov
cmp
(bad)
(bad)
(bad)
cmp
pop
add
add
(bad)
(bad)
jle
add
add
ins
and
add
add
(bad)
jmp
shl
add
add
(bad)
inc
sub
add
sbb
leave
and
add
mov
cmp
push
add
push
add
add
push
push
and
add
add
(bad)
jmp
pop
jle
add
add
pop
push
add
add
or
jp
(bad)
jmp
mov
add
(bad)
inc
jnp
add
add
sub
add
push
sub
add
sub
and
add
add
(bad)
jmp
cwde
pop
or
or
add
mov
cmp
inc
(bad)
(bad)
jmp
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
mov
add
pop
add
add
add
add
or
or
and
add
add
or
add
add
pop
rol
and
mov
mov
add
add
test
(bad)
inc
add
add
push
mov
add
add
and
add
add
add
push
add
push
xor
add
add
mov
sub
or
add
lea
add
add
push
jb
add
jo
or
jb
add
jo
or
adc
sub
or
push
add
or
or
add
and
add
add
(bad)
jmp
add
sub
add
push
and
add
add
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
rcl
add
adc
add
add
add
inc
add
add
add
add
test
test
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
xchg
xchg
xor
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
sbb
add
pop
add
add
add
adc
mov
or
or
add
add
add
add
inc
add
add
pop
add
add
or
add
add
add
add
add
add
add
pop
add
add
or
or
pop
popa
push
add
add
add
mov
or
rol
pop
jb
sbb
add
sub
push
pop
pop
push
add
mov
or
mov
add
add
add
mov
or
cmps
ficomp
ficomp
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
or
add
inc
add
add
pop
add
add
or
add
add
add
add
add
sbb
add
or
add
push
or
add
or
xor
dec
and
add
add
sub
jle
add
add
push
add
add
push
add
add
add
mov
or
mov
loope
jp
and
stc
jp
mov
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
sub
and
add
add
(bad)
(bad)
(bad)
fld
fidivr
push
add
add
push
pop
rol
jle
add
add
ret
add
or
add
add
fiadd
adc
adc
add
adc
(bad)
add
add
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
and
add
jecxz
(bad)
dec
add
add
add
pop
and
add
add
sub
adc
sbb
add
and
add
add
sub
fmul
push
jae
add
or
add
jne
(bad)
jmp
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
jecxz
(bad)
dec
add
add
sub
and
add
add
sub
or
add
or
add
add
mov
or
into
sub
fsub
sub
push
inc
add
add
xor
add
adc
inc
or
add
(bad)
add
add
add
add
add
add
add
add
add
jne
add
dec
add
add
add
push
adc
add
loopne
add
pop
push
add
add
adc
sub
add
xor
add
add
mov
or
cdq
sub
add
pop
sub
or
add
mov
or
cmp
add
lock
add
frstor
add
add
mov
or
addr16
(bad)
jmp
add
pop
add
add
(bad)
(bad)
(bad)
jle
add
add
add
add
add
and
add
add
(bad)
(bad)
jmp
add
or
add
mov
or
sub
(bad)
call
push
jle
add
add
sub
add
add
mov
or
adc
(bad)
jmp
add
add
add
push
or
add
add
add
mov
or
idiv
(bad)
jmp
add
or
add
mov
or
call
add
fiadd
fiadd
jle
add
add
push
add
add
pop
jle
add
add
push
add
add
pop
pop
or
add
frstor
std
(bad)
call
pop
sub
inc
les
add
add
jne
add
add
add
adc
add
add
add
cdq
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
adc
add
add
add
das
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
adc
add
add
add
nop
add
add
add
add
add
sub
add
adc
add
add
add
das
add
add
add
add
add
push
add
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
mov
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
cwde
mov
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
jmp
cli
add
jmp
cli
add
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
sar
and
cmp
cs
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
add
add
inc
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
clc
xor
and
xor
mov
add
add
add
add
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
sub
mov
mov
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
adc
add
add
add
push
mov
push
adc
inc
add
add
add
add
push
inc
add
add
pop
add
add
push
inc
add
add
popa
add
add
add
mov
add
jge
add
jle
add
or
jle
add
add
pop
rol
jle
add
add
inc
push
or
add
pop
pop
sbb
or
add
sub
add
or
add
sbb
add
sub
add
or
and
add
add
push
jb
add
jo
adc
add
sub
and
add
add
sub
jle
add
add
pop
push
add
add
add
mov
push
cmp
jmp
add
add
add
mov
push
cmp
(bad)
(bad)
(bad)
frstor
add
add
or
add
popa
or
add
test
add
ficomp
ficomp
jle
add
add
pop
rol
fstp
fst
add
add
push
inc
add
add
pop
add
add
push
inc
add
add
add
add
add
(bad)
(bad)
(bad)
jle
add
add
push
pop
mov
sbb
add
and
aas
and
xchg
int
jp
inc
inc
add
add
xor
add
add
pop
mov
add
mov
add
push
mov
add
add
and
add
add
cmp
(bad)
dec
pop
push
adc
sbb
add
add
mov
push
sub
dec
outs
push
add
or
add
add
(bad)
(bad)
(bad)
ficomp
add
add
mov
push
sub
push
inc
add
add
adc
add
adc
inc
add
add
jecxz
(bad)
dec
add
add
sub
and
add
add
sub
or
add
or
add
add
mov
push
sub
sub
fsub
add
add
or
add
or
ret
(bad)
(bad)
jmp
add
mov
sub
mov
stc
add
add
add
add
add
rol
push
adc
add
add
mov
adc
add
add
loop
adc
add
adc
add
add
mov
add
add
sbb
add
add
xor
pop
push
and
xor
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
jae
add
or
add
add
jo
lea
add
add
push
push
jle
add
add
and
add
mov
add
jge
add
add
jb
add
jo
lea
add
add
pop
push
jb
add
jo
pop
sub
add
or
or
add
jle
add
add
cmp
add
add
add
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
mov
add
xor
add
add
add
add
and
cmp
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
push
add
add
sldt
or
push
add
push
add
add
sldt
or
push
push
or
add
add
sbb
add
outs
add
add
add
adc
mov
or
or
add
add
add
add
and
add
pop
push
add
add
add
es
add
add
inc
add
add
pop
add
add
or
add
add
add
add
add
add
add
push
adc
adc
pop
pop
adc
add
add
pop
push
add
and
add
pop
jge
add
add
add
add
mov
or
mov
add
add
dec
and
add
add
sub
add
pop
pop
pop
pop
jge
add
add
add
add
mov
or
(bad)
and
sti
push
and
sti
push
mov
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
sub
and
add
add
(bad)
(bad)
(bad)
fisttp
add
add
fld
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
rol
add
scas
add
add
add
add
add
push
adc
or
push
add
jnp
add
add
jnp
add
add
jge
add
add
add
add
mov
or
mov
add
add
add
sub
jnp
add
add
jnp
add
add
pop
pusha
pop
jge
add
add
add
add
mov
or
xchg
push
and
add
mov
or
ja
(bad)
call
push
jb
add
jo
adc
add
sub
and
adc
cmp
jmp
mov
add
add
add
jnp
add
add
pop
push
pop
add
add
add
push
add
add
add
mov
or
das
(bad)
(bad)
jmp
test
add
add
jnp
add
add
jge
add
add
add
add
mov
or
or
popa
ficomp
inc
add
add
sbb
add
adc
inc
add
add
add
add
adc
add
add
add
add
adc
add
and
add
adc
and
add
add
cmp
sub
add
or
sub
push
mov
sub
mov
stc
add
add
add
mov
or
scas
sub
adc
add
and
add
add
cmp
std
(bad)
call
lea
add
add
add
mov
or
xchg
jne
(bad)
call
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
xchg
add
add
add
test
add
das
add
add
add
or
push
or
imul
jo
and
add
add
pop
jb
add
jo
adc
add
sub
and
add
add
sub
and
add
add
or
push
das
inc
and
add
mov
or
xchg
sub
add
jnp
add
add
inc
and
add
add
(bad)
(bad)
jmp
sbb
add
add
add
adc
add
add
adc
cmp
(bad)
jmp
stos
and
add
add
(bad)
(bad)
(bad)
fst
add
add
fisttp
inc
add
add
and
add
adc
inc
pop
add
add
add
cmp
add
add
add
add
add
push
adc
push
adc
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
adc
and
add
add
adc
pop
and
inc
and
add
add
sub
add
jnp
add
add
mov
add
pop
jge
add
add
add
add
mov
or
sub
add
add
pop
jge
add
add
add
add
mov
or
gs
(bad)
jmp
and
add
(bad)
(bad)
call
or
lods
add
add
mov
add
add
(bad)
(bad)
jmp
mov
add
(bad)
(bad)
(bad)
fimul
fiadd
and
add
pop
jge
add
add
pop
jge
add
add
and
add
pop
push
add
pop
(bad)
(bad)
jmp
fst
(bad)
(bad)
inc
outs
and
add
or
add
std
(bad)
jmp
mov
push
mov
add
adc
movs
pop
add
add
add
dec
add
add
add
and
add
adc
add
add
sub
mov
add
adc
add
add
in
jmp
add
adc
add
add
outs
add
xor
push
adc
add
add
cmp
fist
add
add
sbb
inc
add
adc
add
sbb
add
rol
add
add
adc
inc
add
add
push
add
add
inc
add
add
add
add
pop
add
add
or
add
add
add
cmp
add
add
add
add
add
mov
sub
push
pop
cmp
arpl
ins
in
data16
add
inc
inc
add
add
aaa
add
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
and
add
add
add
add
add
add
pop
pop
pop
aaa
pop
add
add
add
push
add
add
add
mov
cmp
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
push
add
add
add
add
add
add
sldt
or
push
or
add
add
add
int
add
popa
push
add
pop
pop
or
add
add
mov
sub
push
add
add
add
and
add
add
mov
sub
sldt
add
jnp
add
add
or
add
add
mov
sub
jle
inc
and
jle
inc
mov
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
test
add
add
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
dec
add
add
add
add
pushf
inc
cmp
and
add
add
add
add
add
add
inc
add
add
push
mov
add
add
push
or
push
and
add
inc
jge
add
add
push
push
popa
jge
add
add
add
add
mov
sub
add
add
mov
sub
add
add
add
push
add
mov
add
mov
add
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
add
add
xor
add
add
add
add
add
pop
jge
add
add
sub
add
sub
add
xor
add
add
add
add
and
xlat
div
xor
div
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
jae
add
or
sub
sbb
add
(bad)
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
call
add
add
mov
add
push
or
or
add
add
sub
add
push
pop
pop
xor
sub
add
push
pop
pop
push
add
pop
sub
add
push
jle
add
add
pop
push
add
add
add
mov
sub
add
add
mov
sub
xor
cmps
lods
jl
mov
add
add
add
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
sub
add
add
and
add
pop
push
adc
add
add
mov
cmp
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
mov
add
add
xor
add
add
adc
mov
pop
adc
inc
add
add
add
add
jle
add
or
jle
add
add
pop
push
add
push
add
or
jle
add
add
pop
push
add
adc
add
pop
push
add
fld
add
es
add
add
inc
add
add
cmp
add
adc
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
or
add
or
imul
add
mov
pop
sub
add
adc
adc
pop
xchg
add
xchg
popa
add
pushf
add
add
pushf
and
add
mov
pop
cmp
(bad)
(bad)
cmp
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
adc
pop
adc
add
add
mov
pop
cmp
(bad)
(bad)
cmp
add
add
or
add
mov
pop
cmp
(bad)
(bad)
inc
mov
dec
and
add
add
(bad)
(bad)
jmp
scas
push
push
push
adc
sbb
jle
add
add
mov
add
pop
push
add
retf
add
ffree
add
add
or
add
add
mov
pop
cmp
(bad)
(bad)
jmp
jb
inc
add
add
pop
add
add
pop
inc
add
add
sbb
add
add
add
add
add
or
or
pop
pop
push
pop
push
add
add
add
mov
pop
sub
push
and
sbb
add
sub
push
pop
pop
ror
and
add
add
sub
and
add
add
fisubr
fisubr
and
add
add
(bad)
(bad)
call
add
mov
mov
or
add
mov
pop
cmp
(bad)
(bad)
cmp
(bad)
(bad)
inc
mov
pop
lea
and
add
add
(bad)
(bad)
jmp
and
add
(bad)
(bad)
inc
cmp
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
push
add
add
(bad)
jmp
(bad)
(bad)
(bad)
call
or
add
std
(bad)
(bad)
cmp
inc
add
add
pop
add
add
pop
inc
add
add
outs
add
add
add
sbb
add
push
add
add
push
add
add
adc
add
push
add
add
adc
dec
and
dec
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
and
add
add
sub
jle
add
add
pop
push
add
add
add
mov
pop
cmp
(bad)
jmp
add
add
add
mov
pop
cmp
(bad)
(bad)
fnsave
cs
(bad)
dec
sub
add
add
add
add
add
add
adc
add
add
xor
and
push
adc
add
add
outs
add
add
adc
add
add
dec
add
pop
add
adc
add
add
jne
movs
sbb
push
adc
add
adc
add
xor
add
add
add
add
sldt
or
jae
add
or
add
push
add
add
or
sbb
push
sub
add
push
add
sub
add
push
add
sub
add
push
sub
add
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
in
lahf
bound
in
lahf
bound
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
clc
push
push
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
aaa
and
and
and
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
and
adc
and
and
add
add
add
add
add
add
add
add
add
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
inc
daa
push
jns
inc
daa
push
jns
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
inc
pop
xchg
jge
inc
pop
xchg
jge
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
aaa
dec
test
and
dec
test
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
pop
sub
dec
and
sub
dec
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
add
add
add
adc
jle
mov
mov
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
push
or
pop
pop
ror
add
and
add
and
adc
add
add
and
add
es
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
push
push
add
adc
add
add
add
inc
add
add
add
add
mov
add
mov
add
and
push
movs
push
and
push
movs
push
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
xor
dec
pop
and
adc
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
cdq
add
add
add
push
mov
push
adc
inc
add
add
add
add
jle
add
add
sub
adc
add
add
sub
inc
add
add
sub
add
adc
inc
or
add
stos
add
add
add
add
add
add
add
add
add
add
add
rol
add
push
add
add
and
or
or
add
or
add
add
cmp
add
add
inc
add
add
pop
add
add
push
inc
add
add
add
add
add
pop
add
add
adc
and
add
add
adc
sub
icebp
data16
data16
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
and
add
add
sub
jle
add
add
rol
add
add
or
add
add
mov
push
sub
add
add
fisttp
add
add
fld
inc
add
add
pop
add
add
push
inc
add
add
pop
add
add
add
add
add
add
add
or
add
pop
push
add
adc
add
pop
push
add
pop
pop
ror
add
or
and
sub
add
add
mov
push
sub
adc
add
or
inc
pop
push
add
add
add
mov
push
sub
add
add
ficom
fimul
mov
mov
adc
and
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
push
add
add
fiadd
push
lea
push
lea
and
add
mov
push
cmp
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
xor
adc
add
inc
fiadd
add
add
mov
push
cmp
(bad)
(bad)
call
add
adc
add
add
mov
push
cmp
(bad)
(bad)
(bad)
cmp
adc
pushf
adc
pop
adc
add
add
mov
push
cmp
std
(bad)
jmp
cmp
adc
adc
add
std
(bad)
jmp
test
adc
pushf
adc
pop
adc
add
and
add
add
std
(bad)
jmp
test
add
add
pop
push
add
adc
add
pop
push
add
adc
add
push
pop
push
add
adc
add
pop
push
add
cmps
fisub
push
add
or
pop
adc
jle
add
add
push
add
mov
add
lea
add
add
or
adc
add
adc
add
mov
mov
adc
add
adc
or
pop
adc
jb
add
jo
adc
add
fisttp
fld
adc
pop
or
sbb
add
adc
and
add
add
std
(bad)
(bad)
ficom
add
add
or
or
add
add
adc
add
jg
add
add
adc
add
jg
add
add
adc
add
sub
add
or
or
add
add
pop
push
add
or
add
jo
adc
add
(bad)
frstor
add
mov
sub
mov
stc
add
mov
add
mov
add
adc
sub
add
inc
fadd
add
add
add
add
add
add
add
add
add
add
jns
add
lea
add
push
add
add
add
add
add
add
add
or
add
xchg
add
xchg
add
add
add
add
add
add
add
mov
add
sldt
add
add
add
add
add
add
add
add
jecxz
add
adc
add
repz
add
add
add
add
add
add
jno
add
aaa
add
add
add
add
add
add
add
stos
add
add
add
or
add
push
add
add
add
add
add
and
add
or
add
sub
add
add
add
adc
add
add
add
das
add
add
add
jp
add
push
add
add
add
sbb
add
scas
add
add
inc
add
add
add
add
inc
or
add
dec
add
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
push
add
jnp
add
add
loope
add
push
add
inc
sub
add
push
add
add
jo
or
sbb
add
sub
add
and
add
and
add
add
add
pop
add
push
and
add
add
pop
or
cmp
add
add
add
add
mov
cmp
(bad)
jmp
jge
pop
add
add
(bad)
inc
jnp
add
add
cli
add
add
fiadd
add
and
add
add
(bad)
jmp
jo
add
and
add
add
and
add
inc
pop
add
push
and
add
add
(bad)
jmp
pop
out
mov
pop
out
mov
inc
inc
add
add
pop
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
add
push
pop
dec
popa
shr
and
add
and
add
add
(bad)
jmp
sbb
add
add
pop
push
add
add
add
mov
cmp
add
push
pop
pop
shr
and
add
and
add
add
(bad)
inc
sub
add
jb
add
jo
adc
add
cmp
(bad)
(bad)
jmp
add
or
jle
(bad)
(bad)
cmp
(bad)
jmp
push
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
lahf
add
add
add
add
add
sbb
add
jnp
add
push
add
adc
pop
adc
adc
add
add
add
add
add
add
add
add
add
push
mov
add
add
push
inc
add
add
and
add
or
add
add
add
add
add
mov
add
add
add
add
add
or
push
push
pop
pop
push
or
add
and
add
and
add
add
add
pop
add
push
add
push
pop
pop
shr
and
add
add
sub
add
push
pop
outs
popa
shr
and
add
jb
add
jo
lea
add
add
push
adc
sub
add
or
add
jo
or
push
add
or
jle
add
add
pop
push
add
pop
adc
or
add
add
mov
cmp
(bad)
inc
add
sbb
add
sub
add
sub
and
or
jmp
aas
add
add
push
jge
add
add
add
add
mov
cmp
(bad)
(bad)
jmp
inc
and
add
add
(bad)
inc
sub
add
push
sub
and
add
add
(bad)
jmp
rol
sub
add
push
add
and
add
inc
pop
add
push
and
add
add
(bad)
jmp
mov
add
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
popa
add
add
add
add
add
adc
add
add
add
dec
add
add
add
add
jbe
cs
and
cs
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
jae
add
or
push
adc
add
add
add
xor
add
add
adc
inc
add
add
push
add
add
inc
add
add
cmp
add
add
add
dec
add
add
cmp
mov
inc
add
add
push
add
add
add
add
add
add
push
mov
add
add
push
or
add
add
add
sbb
add
add
add
mov
sub
add
push
cs
add
add
and
push
pop
push
sub
add
push
and
add
add
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
cdq
cdq
add
adc
add
sbb
add
adc
add
adc
add
push
inc
add
add
and
add
pop
inc
pop
add
add
add
add
add
add
add
add
add
les
add
push
or
add
xor
add
pop
push
pop
shr
xor
add
and
add
mov
sub
push
add
add
add
cmp
add
add
mov
sub
add
jo
jl
add
add
adc
add
sub
add
or
pop
mov
add
mov
add
and
add
add
push
add
(bad)
inc
sub
add
push
pop
dec
push
push
and
add
add
(bad)
jmp
pop
mov
sbb
pop
mov
sbb
add
add
add
add
push
mov
add
add
sub
add
add
pop
push
add
push
add
add
(bad)
jmp
cwde
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
inc
sbb
add
add
add
add
add
add
add
add
adc
add
sub
add
add
add
add
sldt
or
add
add
add
jle
add
or
xor
push
sub
add
push
add
push
aaa
add
push
sub
xor
jae
add
adc
add
push
mov
push
adc
inc
add
add
add
add
jb
add
jo
cmp
sbb
add
sbb
add
jo
lea
add
add
or
or
jle
add
add
adc
pop
jle
add
add
adc
sbb
add
jo
adc
sbb
add
jo
adc
sub
add
or
jle
add
add
and
add
jle
add
add
and
add
sub
add
or
fiadd
sub
or
or
and
add
add
or
and
add
add
or
add
or
pop
push
pop
pop
adc
sbb
push
pop
pop
or
add
fiadd
push
inc
add
add
adc
add
adc
inc
add
add
into
add
add
add
add
cmp
and
add
add
cmp
inc
add
add
pop
add
add
push
inc
add
add
imul
add
inc
add
add
add
push
push
add
jnp
add
lea
add
add
or
or
adc
sub
add
or
add
or
adc
sbb
adc
adc
add
add
adc
add
pop
and
add
add
sub
adc
add
add
sub
and
add
add
(bad)
(bad)
(bad)
fnstsw
fnsave
jae
add
push
adc
add
add
mov
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
call
inc
add
add
pop
add
add
push
inc
add
add
inc
add
add
add
bound
add
jno
add
push
or
add
pop
ror
jo
lea
add
add
or
or
jle
add
add
and
add
mov
add
or
or
push
pop
ror
add
or
pop
xor
add
sub
or
pop
ror
add
sub
and
add
add
(bad)
(bad)
(bad)
fisttp
(bad)
jmp
fisttp
(bad)
call
add
outs
xor
add
adc
and
add
add
(bad)
(bad)
(bad)
(bad)
add
add
sub
push
inc
add
add
pop
add
add
push
inc
add
add
js
add
and
add
push
add
add
add
push
adc
jb
add
jo
sbb
pop
add
sbb
add
add
mov
push
sub
adc
pop
adc
stos
popa
inc
and
inc
inc
add
add
fdivr
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
and
add
add
sub
adc
pop
pop
adc
and
add
add
sub
and
add
add
(bad)
(bad)
(bad)
fiadd
fiadd
fiadd
pop
adc
jb
add
jo
lea
add
add
or
pop
add
add
and
add
mov
mov
adc
add
adc
or
jb
add
jo
sbb
adc
adc
(bad)
std
(bad)
jmp
(bad)
std
(bad)
jmp
add
mov
sub
mov
stc
add
mov
add
mov
add
adc
sub
inc
lods
add
add
add
add
add
add
add
add
test
add
das
add
add
add
adc
add
add
add
jmp
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
arpl
add
fwait
add
add
add
add
add
add
add
add
add
test
add
fild
add
pusha
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
add
add
adc
inc
add
add
cmp
add
and
and
sbb
add
add
pusha
add
add
add
add
add
add
mov
add
add
or
add
add
add
jae
add
add
add
push
or
or
add
xor
add
pop
push
pop
push
add
pop
push
pop
or
jb
add
jo
lea
add
add
push
jb
add
jo
or
push
add
or
xor
add
add
mov
sub
add
xor
and
add
add
(bad)
jmp
add
and
push
pop
pop
shr
xor
add
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
leave
add
adc
add
or
add
pop
add
add
add
add
cmp
stos
dec
and
stos
dec
mov
add
add
add
add
add
push
mov
add
add
add
add
pop
push
add
pop
jge
add
add
add
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
adc
add
add
add
add
adc
add
sbb
add
add
add
adc
mov
or
or
add
add
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
int3
add
add
add
add
add
mov
add
add
or
add
or
add
add
jo
lea
add
add
add
sub
add
push
adc
adc
sub
adc
or
xor
push
add
add
push
pop
xor
push
and
add
add
sub
add
jnp
add
add
jnp
add
add
push
add
add
add
mov
or
ins
(bad)
(bad)
jmp
dec
add
jnp
add
add
sub
add
push
popa
push
aaa
add
push
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
cmp
(bad)
inc
jle
add
add
adc
add
sub
and
adc
cmp
(bad)
(bad)
jmp
xchg
and
add
add
(bad)
(bad)
(bad)
fucomp
add
add
fucom
add
add
inc
add
add
adc
add
adc
inc
add
add
sbb
add
pop
add
add
add
add
add
mov
sub
mov
stc
add
sub
inc
add
add
pop
add
add
or
add
add
add
add
add
nop
add
add
add
or
jle
add
or
add
loope
add
lea
add
add
pop
adc
push
add
add
adc
add
mov
add
or
add
and
add
pop
push
add
add
add
mov
or
sahf
adc
in
add
adc
add
sub
and
add
add
sub
add
push
pop
push
sub
add
push
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
pop
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
jmp
fstp
(bad)
(bad)
push
add
push
add
inc
add
push
or
add
add
mov
or
or
(bad)
jmp
jp
add
add
mov
or
or
inc
add
add
pop
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
xor
add
jle
add
add
adc
add
sub
and
add
add
sub
add
jnp
add
add
xor
jge
add
add
add
add
mov
or
mov
add
add
add
mov
or
movs
ffree
add
add
ffree
add
add
inc
add
add
inc
add
add
or
xchg
pop
dec
mov
add
add
add
add
add
add
dec
add
add
pop
mov
add
mov
add
push
mov
add
add
adc
inc
add
add
or
add
pop
add
add
add
add
add
push
or
add
or
sub
add
push
xor
and
add
add
sub
add
xor
add
pop
push
popa
ror
add
sub
and
add
add
(bad)
(bad)
(bad)
fiadd
fiadd
and
add
add
std
(bad)
dec
cmp
(bad)
(bad)
jmp
add
add
mov
or
sar
(bad)
(bad)
cmp
std
(bad)
inc
jnp
add
add
dec
add
push
or
jnp
add
add
dec
add
push
sub
inc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
pop
add
cwde
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
and
xchg
sub
mov
add
add
add
add
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
jge
jmp
jmp
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
add
add
inc
add
add
add
add
into
sub
and
sub
mov
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
mov
and
mov
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
movs
repz
and
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
jmp
fisubr
and
dec
fisubr
mov
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
add
jge
add
add
add
add
push
add
add
add
add
mov
add
mov
add
and
arpl
pop
adc
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
jle
add
or
jae
add
or
sub
add
adc
add
pop
add
add
add
add
sub
add
or
add
xor
add
add
adc
add
add
mov
sub
push
inc
add
add
adc
add
pop
inc
add
add
in
(bad)
call
add
add
and
add
sub
add
or
add
loopne
jo
and
push
jo
mov
add
add
add
add
add
add
dec
add
add
push
mov
add
add
sub
pop
mov
add
mov
add
jb
add
jo
pop
add
add
sub
add
outs
sub
add
or
push
and
add
add
mov
sub
mov
stc
add
add
add
mov
cmp
(bad)
jmp
add
add
add
add
add
xor
add
add
add
add
and
adc
and
adc
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
jle
add
add
add
add
add
inc
add
add
add
add
mov
add
mov
add
and
sub
and
sub
mov
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
sub
adc
add
pop
add
add
add
mov
and
iret
mov
mov
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
push
jb
add
jo
and
add
das
add
or
push
je
add
sbb
adc
add
sbb
add
add
add
add
sldt
or
push
sub
add
add
add
or
inc
add
push
sub
add
sbb
add
lods
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
or
add
jo
add
sbb
add
cmp
add
push
or
add
add
mov
sub
push
and
add
add
push
and
add
add
add
push
pop
or
jnp
add
add
pop
pop
pop
pop
sar
add
add
add
add
mov
sub
adc
imul
inc
add
add
nop
(bad)
(bad)
inc
add
add
push
mov
add
add
sub
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
adc
add
add
add
add
add
xor
add
add
push
add
adc
inc
add
add
and
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
cmp
inc
add
push
jb
add
jo
sub
push
outs
and
add
sub
add
or
jb
add
jo
pop
add
jo
sub
xor
add
and
add
add
add
add
rol
add
jge
add
add
add
add
add
dec
pop
sar
add
add
movs
mov
movs
mov
inc
inc
add
add
jns
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
and
add
add
(bad)
inc
pop
xor
xor
add
add
mov
cmp
(bad)
(bad)
jmp
inc
push
pop
push
pop
add
add
add
or
mov
add
mov
add
and
add
add
(bad)
jmp
inc
and
add
add
(bad)
inc
and
das
and
or
in
(bad)
(bad)
jmp
mov
add
add
jnp
add
add
sub
add
and
add
add
(bad)
jmp
mov
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
dec
add
add
add
add
add
adc
add
add
add
inc
add
add
add
add
mov
js
and
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
sbb
add
aad
add
pop
add
adc
inc
add
add
push
add
add
inc
add
add
cdq
add
add
add
add
add
add
add
pop
sar
add
add
jnp
add
lea
add
add
push
push
jb
add
jo
push
sub
add
or
and
add
add
sub
add
and
add
add
dec
and
add
add
jno
and
and
and
mov
add
add
add
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
sub
jle
add
add
sub
add
add
add
mov
cmp
(bad)
jmp
add
add
add
mov
cmp
(bad)
call
mov
add
mov
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
lds
add
add
add
add
inc
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
nop
ja
push
and
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
xor
add
add
add
add
fwait
shr
fwait
shr
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
inc
add
sbb
add
push
inc
add
add
cmp
add
and
mov
and
mov
mov
add
add
add
add
add
push
mov
add
add
or
add
add
add
pushf
add
add
add
mov
add
push
or
add
or
push
pop
pop
push
push
add
lea
or
jb
add
jo
or
jb
add
jo
or
add
add
adc
or
adc
sub
add
or
add
or
add
add
mov
cmp
(bad)
inc
jle
add
add
adc
add
sub
and
add
add
(bad)
jmp
add
jnp
add
add
repz
add
or
add
add
mov
cmp
(bad)
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
adc
add
add
add
in
add
add
sbb
add
add
add
adc
mov
adc
adc
add
add
add
add
or
add
jo
lea
add
add
or
add
sub
add
mov
add
or
jle
add
add
sub
add
sub
add
inc
sub
add
fstp
inc
add
add
pop
add
add
adc
add
add
add
add
add
push
add
add
add
add
adc
jg
add
add
adc
add
and
add
or
cdq
add
add
or
add
add
mov
adc
ret
adc
pop
xor
and
add
add
sub
adc
and
add
inc
sub
add
add
add
mov
adc
xchg
sub
and
add
add
frstor
frstor
inc
add
add
sbb
add
adc
inc
add
add
add
add
add
add
add
add
add
add
or
jle
add
add
inc
sub
add
add
add
test
add
adc
add
sub
add
add
add
mov
adc
mov
add
add
pop
add
adc
add
sub
add
mov
adc
cdq
sub
and
add
add
jle
add
add
adc
add
add
mov
adc
jns
(bad)
call
sub
sub
add
popf
add
jo
lea
add
add
adc
adc
jb
add
jo
adc
sub
add
or
jb
add
jo
add
add
add
add
mov
adc
add
sub
add
rol
add
sub
add
adc
add
jb
add
jo
xor
add
and
add
add
add
mov
adc
push
(bad)
(bad)
(bad)
fnstsw
fnsave
add
add
sub
add
popf
add
jo
lea
add
add
adc
adc
jb
add
jo
adc
pop
jb
add
jo
adc
sbb
add
add
adc
sub
add
or
jle
add
add
and
adc
add
sub
add
sub
add
adc
add
jle
add
add
adc
add
and
add
add
add
das
add
jo
adc
add
sub
add
fst
add
add
mov
adc
or
inc
add
add
dec
add
add
adc
add
add
add
xor
add
cmp
add
stos
(bad)
(bad)
jmp
add
add
add
or
add
pop
add
add
add
add
add
jmp
add
add
add
sbb
inc
je
(bad)
jmp
add
mov
sub
mov
stc
add
or
add
mov
adc
xchg
cmp
std
(bad)
inc
push
xchg
or
add
cmp
push
sub
add
push
adc
and
add
add
(bad)
(bad)
(bad)
cmp
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
fadd
add
sahf
add
add
add
int
add
jne
add
push
or
add
or
jb
add
jo
adc
add
sub
add
jb
add
jo
adc
add
sub
add
sub
add
adc
add
and
add
pop
pop
ror
pop
pop
pop
ror
and
add
add
pop
pop
pop
xor
and
add
mov
adc
sub
adc
sub
add
add
push
add
add
(bad)
(bad)
jmp
add
add
add
mov
adc
pop
(bad)
(bad)
dec
jb
add
jo
adc
add
sub
and
add
add
(bad)
(bad)
jmp
add
add
jo
lea
add
add
push
adc
push
adc
sub
adc
sub
add
or
add
adc
cmp
(bad)
(bad)
jmp
add
add
add
mov
adc
add
(bad)
(bad)
ffree
(bad)
(bad)
jmp
fnstsw
sub
add
or
jle
add
add
inc
sub
add
jns
add
add
add
fwait
add
jo
xor
add
and
add
sub
add
sub
add
fnstsw
push
add
add
std
(bad)
call
push
cmp
sldt
add
std
(bad)
(bad)
cmp
add
add
adc
push
adc
mov
xor
add
and
add
mov
adc
retf
std
(bad)
jmp
add
inc
add
add
pop
add
add
adc
add
add
add
mov
add
add
add
adc
push
push
or
or
pop
adc
adc
and
add
add
or
or
mov
add
inc
inc
sub
add
or
push
pop
adc
jle
add
add
stos
add
jo
adc
add
sub
add
add
add
mov
add
adc
add
sub
add
or
pop
adc
and
add
add
adc
pop
jno
cmp
add
add
mov
adc
outs
(bad)
(bad)
jmp
add
add
add
adc
add
adc
sub
add
or
adc
add
and
add
add
add
mov
adc
inc
(bad)
(bad)
jmp
add
add
add
mov
adc
ss
(bad)
(bad)
fnstsw
add
fnsave
add
adc
sub
add
push
adc
and
add
add
cld
(bad)
call
mov
add
mov
add
cmp
mov
pop
lea
push
and
add
add
cld
(bad)
jmp
push
jae
add
or
jae
add
or
jle
add
add
pop
sub
add
lds
add
add
add
xor
(bad)
jmp
(bad)
(bad)
(bad)
jmp
push
add
add
cld
(bad)
dec
pop
pop
pop
inc
adc
add
add
mov
adc
pop
cld
(bad)
(bad)
cmp
inc
add
add
pop
add
add
adc
add
add
add
inc
add
add
add
das
add
add
adc
jb
add
jo
lea
add
add
movups
push
jb
add
jo
adc
sub
add
or
and
add
add
adc
and
and
add
add
mov
adc
cmps
sub
adc
pop
and
adc
and
add
add
sub
and
add
add
fucom
std
(bad)
jmp
fucom
std
(bad)
call
inc
add
add
pop
add
add
adc
add
add
add
add
add
add
jae
add
push
push
add
adc
push
add
inc
sub
add
add
add
add
inc
sub
add
add
add
mov
adc
mov
push
and
add
add
sub
jb
add
jo
add
or
sbb
add
and
add
add
add
mov
adc
test
add
add
add
mov
adc
jbe
(bad)
(bad)
(bad)
(bad)
jmp
frstor
(bad)
(bad)
jle
add
or
or
add
jo
add
add
popf
add
jo
lea
add
add
adc
adc
jb
add
jo
adc
sub
add
or
or
add
add
sub
add
adc
jo
or
add
jo
xor
add
and
add
sub
add
inc
sub
add
xor
add
sub
add
adc
add
sub
add
or
or
add
add
inc
sub
add
frstor
(bad)
jmp
add
adc
cmp
cmp
std
(bad)
jmp
add
add
mov
adc
jge
(bad)
(bad)
cmp
add
add
or
add
mov
adc
imul
call
push
cmp
(bad)
jmp
pop
add
add
cli
(bad)
(bad)
cmp
cli
(bad)
call
inc
add
add
sbb
add
adc
inc
add
add
add
add
add
add
cmp
add
push
adc
aas
add
jo
sub
add
adc
add
jle
add
add
add
add
xor
add
and
add
or
push
pop
rcl
or
add
add
mov
adc
lods
jle
add
add
dec
and
dec
xor
popa
ja
xor
add
add
add
add
push
mov
add
add
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
adc
fs
(bad)
call
or
sbb
add
adc
add
add
mov
adc
dec
(bad)
(bad)
call
sub
sub
add
or
pop
rcl
or
arpl
jo
or
adc
add
add
sub
add
adc
add
sub
add
and
add
add
add
mov
adc
or
(bad)
(bad)
fisubr
fisubr
and
adc
cmp
(bad)
inc
mov
cmp
stc
(bad)
jmp
adc
add
mov
adc
sub
(bad)
(bad)
cmp
call
push
sub
add
push
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
loop
add
or
add
jmp
add
push
add
add
add
add
add
icebp
add
add
add
push
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
push
add
add
add
add
add
mov
fld
add
lahf
add
add
adc
add
add
add
in
add
daa
add
add
add
push
add
add
add
add
add
cmp
add
mov
add
ret
add
add
add
add
add
add
enter
cdq
add
add
add
push
add
add
add
add
add
addr16
add
test
add
in
pop
add
push
add
add
add
add
add
cmp
add
add
or
add
add
add
add
sbb
add
loop
add
sbb
add
push
inc
add
add
push
add
add
inc
add
add
sub
add
cmps
add
add
add
add
or
add
add
add
loope
add
pop
sar
add
add
add
add
mov
sub
push
sub
add
mov
sub
and
(bad)
shl
and
(bad)
shl
mov
add
add
add
add
add
add
pop
add
add
push
mov
add
add
sub
jb
add
jo
lea
add
add
pop
push
jb
add
jo
pop
pop
jg
add
add
adc
add
mov
daa
add
add
adc
pop
sub
add
or
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
enter
adc
add
add
add
dec
add
add
add
add
inc
scas
sbb
sbb
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
jle
add
or
pop
sub
add
add
add
xor
add
add
add
add
add
jae
add
or
add
add
pop
jge
add
add
sub
add
or
add
add
add
sbb
add
in
add
add
add
adc
add
add
mov
sub
push
inc
add
add
sbb
add
push
inc
add
add
add
add
pushf
add
add
(bad)
(bad)
jmp
add
add
add
xchg
add
add
add
jnp
add
add
xchg
add
add
add
inc
sub
push
mov
add
add
jnp
add
add
pop
popa
push
add
add
add
mov
sub
add
add
and
add
pop
push
add
add
add
mov
sub
add
aaa
and
ins
push
inc
and
ins
push
inc
mov
add
add
add
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
and
add
add
(bad)
jmp
adc
movs
and
add
mov
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
(bad)
add
adc
add
sbb
add
je
add
sbb
add
push
mov
or
or
add
add
add
add
inc
add
add
adc
add
adc
inc
add
add
fiadd
add
jbe
add
or
add
pop
or
add
add
mov
or
loope
retf
add
add
sti
imul
and
add
add
add
add
push
mov
add
add
or
xor
add
or
add
add
sub
add
outs
aaa
add
or
add
or
add
adc
add
inc
add
add
pop
add
add
or
add
add
add
sbb
add
pop
add
add
add
add
adc
add
add
pop
sar
add
add
add
add
mov
or
int
add
add
sub
add
add
mov
or
mov
jnp
add
add
cwde
add
add
add
add
add
add
add
mov
or
call
add
fiadd
fiadd
adc
add
adc
add
or
mov
add
or
cmp
add
fadd
add
add
add
push
add
add
add
pop
add
add
add
push
add
pop
jge
add
add
and
add
pop
sar
add
add
and
add
pop
push
add
sar
(bad)
jmp
(bad)
(bad)
(bad)
push
add
or
or
or
cmp
add
outs
cmp
add
outs
cmp
or
mov
add
mov
add
and
add
add
(bad)
(bad)
(bad)
cmp
add
adc
push
push
pop
add
add
pop
jge
add
add
jnp
add
add
and
add
pop
pop
pop
adc
add
jnp
add
add
push
pop
jge
add
add
and
add
pop
push
add
add
add
add
and
jge
add
add
add
add
fstp
add
push
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
push
add
test
add
sub
add
add
add
or
and
add
pop
sar
add
add
add
add
mov
or
ret
iret
add
add
daa
and
add
mov
or
mov
add
and
add
pop
sar
add
add
add
add
mov
or
xchg
sub
and
add
add
add
add
add
xor
and
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
mov
or
pop
(bad)
(bad)
jmp
add
add
adc
cmp
(bad)
(bad)
frstor
fstp
add
jo
and
or
or
add
jo
add
or
sbb
add
adc
sub
add
or
add
std
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
add
add
jnp
add
add
jnp
add
add
pop
push
add
add
add
add
cmc
add
add
add
inc
jge
add
add
add
add
add
push
pop
sar
add
add
and
add
pop
push
add
je
(bad)
jmp
(bad)
(bad)
jmp
add
mov
sub
mov
stc
add
sub
dec
add
add
mov
jle
add
adc
add
add
cmp
pop
add
add
add
and
dec
push
push
adc
add
add
cmps
add
add
adc
add
add
or
(bad)
into
add
adc
add
add
or
push
pusha
add
adc
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
clc
or
add
push
je
imul
add
add
mov
add
push
push
add
push
add
adc
add
and
dec
inc
add
add
push
add
hlt
add
add
inc
ins
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
or
add
xor
add
dec
add
add
add
add
add
cmp
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
or
push
add
add
add
rol
outs
add
add
add
push
add
add
add
push
add
cmp
push
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
cmp
push
add
cdq
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
inc
add
add
add
enter
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
aaa
add
add
add
add
adc
cmp
push
add
add
add
add
add
adc
sbb
add
adc
cmp
add
add
add
add
add
add
and
cmp
add
adc
inc
add
and
add
add
add
xor
add
add
add
cmp
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
inc
add
inc
add
dec
add
dec
add
aaa
add
cmp
cmp
cmp
add
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
inc
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
inc
add
aaa
add
cmp
aaa
add
cmp
cmp
cmp
add
add
inc
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
add
add
xchg
dec
add
add
je
add
add
xchg
aaa
add
mov
add
add
xchg
cmp
pushf
and
add
add
add
add
add
add
aam
add
add
add
add
fsub
add
add
or
add
sub
add
add
or
add
jl
add
add
xchg
add
add
test
add
add
or
add
clc
sub
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
add
add
sub
add
add
add
add
xchg
sbb
popf
add
add
add
add
add
add
aam
add
add
add
or
mov
add
add
add
add
xchg
xor
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
fdiv
add
add
xchg
add
add
dec
cmp
add
add
add
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
add
or
add
enter
add
or
adc
sbb
add
add
add
add
add
add
or
adc
mov
add
add
add
cmp
add
add
mov
or
adc
fdivr
or
adc
sub
add
add
xchg
add
add
lods
inc
add
add
add
add
test
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
in
dec
add
add
add
pop
add
add
add
add
pop
add
push
add
add
or
sbb
mov
add
add
add
add
push
add
add
or
sbb
sub
add
add
add
add
add
add
or
sbb
enter
add
or
sbb
sbb
add
xchg
sbb
popf
add
add
add
add
sbb
add
add
add
xchg
or
add
dec
push
add
add
xchg
or
add
cwde
push
add
add
xchg
or
add
call
add
add
dec
push
add
add
sbb
add
add
je
add
add
add
sbb
cmp
add
add
add
add
les
add
add
add
adc
add
add
or
add
fs
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
xchg
sbb
popf
add
add
add
add
sbb
add
add
add
push
add
and
inc
imul
add
add
add
add
aaa
add
cmp
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
pop
add
dec
add
pop
add
pop
add
pusha
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
pop
add
add
adc
dec
add
add
add
add
or
sub
dec
add
add
add
or
cmp
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
xor
fld
repnz
add
add
add
add
add
add
add
imul
icebp
add
add
loope
in
pop
add
add
add
jno
dec
add
add
add
add
add
or
push
add
add
add
add
add
add
ja
adc
dec
add
add
mov
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
into
add
add
pop
add
add
pop
add
pop
add
add
ja
fld
inc
add
add
dec
add
loopne
dec
add
add
add
add
add
(bad)
add
add
dec
add
add
dec
add
add
add
adc
add
test
add
adc
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
or
loopne
imul
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
imul
add
imul
add
imul
add
imul
add
add
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
imul
add
add
add
add
pop
add
add
pop
add
add
add
add
add
and
add
and
add
inc
add
add
inc
add
add
pusha
add
add
mov
add
add
add
and
inc
add
inc
push
imul
add
imul
add
add
add
push
imul
add
push
imul
add
or
pop
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
jle
xchg
xchg
add
lods
add
fld
add
add
add
fs
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
inc
cdq
add
add
add
add
add
add
add
add
add
gs
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
add
push
arpl
popa
jb
push
push
gs
bound
arpl
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jb
outs
add
jo
jns
dec
outs
je
add
je
imul
ins
gs
outs
add
outs
arpl
add
pop
dec
outs
gs
popa
ins
imul
jno
popa
ins
imul
jo
imul
add
imul
gs
cs
dec
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
jb
popa
ins
add
imul
ins
add
jo
jae
add
ins
jo
gs
imul
add
je
xor
inc
outs
jb
popa
je
push
gs
add
imul
jb
jns
inc
jae
gs
bound
dec
gs
outs
fs
outs
outs
add
je
outs
fs
popa
jae
add
jbe
imul
outs
popa
add
je
inc
outs
je
jns
outs
imul
xor
add
imul
imul
gs
jb
popa
jns
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
data16
outs
arpl
jno
popa
ins
jae
push
jns
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
bound
arpl
jb
popa
jns
inc
outs
jo
add
jo
outs
ins
popa
imul
add
jo
outs
ins
popa
imul
js
arpl
imul
ins
bound
addr16
inc
outs
fs
popa
jae
add
je
inc
jne
ins
dec
popa
ins
add
gs
je
dec
outs
jae
popa
outs
arpl
jb
ins
inc
outs
fs
outs
ja
popa
jo
push
outs
ins
outs
popa
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
jae
je
inc
jo
ins
imul
inc
popa
jae
add
jae
gs
cs
arpl
imul
arpl
inc
jbe
fs
arpl
inc
jb
popa
je
inc
outs
ins
popa
imul
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
popa
jne
jb
outs
cs
add
arpl
ins
imul
jne
arpl
outs
jb
je
jb
bound
add
bound
arpl
add
data16
push
add
inc
pop
xor
arpl
outs
jb
inc
pop
xor
inc
pop
xor
inc
pop
xor
inc
add
ins
jae
jne
jb
outs
add
jb
jae
jne
arpl
add
add
add
jbe
jb
jne
ins
add
add
add
or
imul
add
popa
add
ins
add
outs
add
add
sbb
jb
jne
jae
outs
add
ins
add
pop
add
xor
jge
sub
add
ja
jb
add
add
sub
add
popa
add
ins
add
jne
add
jne
imul
add
add
add
add
jne
ins
add
ins
add
outs
add
jbe
outs
add
imul
jne
ins
add
imul
outs
add
add
popa
add
jb
imul
push
add
add
add
ja
outs
add
jae
outs
add
jne
add
outs
add
jbe
jne
add
popa
add
ins
add
or
add
add
or
add
data16
sbb
outs
add
push
add
cmp
jnp
xor
jge
add
or
imul
add
add
or
push
add
add
imul
popa
add
add
jnp
xor
jge
and
add
imul
je
popa
add
jbe
ja
add
add
add
jo
ins
add
jne
imul
outs
add
adc
jae
outs
add
add
outs
add
jne
add
das
add
add
or
data16
jo
jne
add
jne
js
add
add
cmp
add
popa
add
outs
add
add
outs
add
ins
add
data16
js
add
popa
add
outs
add
imul
add
data16
imul
data16
imul
add
add
or
outs
add
outs
add
add
add
or
jb
outs
add
add
outs
add
jae
jne
add
jnp
xor
jge
and
jnp
xor
jge
and
add
outs
add
jae
popa
add
pcmpgtw
imul
add
data16
add
or
jae
jne
outs
add
and
xor
jge
sub
add
cmp
jnp
xor
jge
sub
jnp
xor
jge
and
add
popa
add
add
outs
add
or
jne
add
jne
add
imul
ins
add
or
add
add
add
sub
add
outs
add
push
add
popa
add
imul
add
imul
adc
outs
add
imul
add
popa
add
add
je
ins
add
outs
add
imul
pop
add
xor
jge
and
jnp
xor
jge
and
add
imul
add
add
jae
jb
outs
add
add
arpl
outs
add
outs
add
imul
add
add
add
add
outs
add
jne
add
adc
jae
add
jb
imul
add
popa
add
imul
je
outs
add
jb
add
outs
add
add
arpl
ins
add
jb
add
jne
popa
add
add
jne
je
outs
add
and
data16
add
add
cmp
jnp
xor
jge
sub
jnp
xor
jge
cmp
add
push
jb
jne
jb
jae
popa
add
add
jne
jae
add
je
add
imul
add
pcmpgtd
imul
add
add
adc
add
add
add
push
add
add
cmp
add
add
push
adc
jae
ins
add
add
popa
add
push
add
add
and
jnp
xor
jge
and
jnp
xor
jge
and
add
outs
add
jb
popa
add
popa
add
add
jae
add
jb
and
jnp
xor
jge
sub
jnp
xor
jge
and
jnp
xor
jge
and
add
imul
outs
add
or
outs
add
add
or
jnp
xor
jge
add
dec
add
add
add
and
push
inc
mov
mov
inc
add
and
add
add
or
add
push
add
add
add
push
push
add
add
add
push
add
push
push
add
push
push
sbb
add
add
popa
adc
add
push
push
sbb
and
or
and
add
and
sbb
sbb
sbb
adc
add
jne
add
adc
push
push
push
push
add
push
add
sbb
add
adc
add
add
jno
and
add
adc
and
sbb
adc
push
add
push
push
sbb
push
add
push
push
sbb
add
sbb
or
add
push
sbb
sbb
add
push
push
push
push
add
add
jno
and
sbb
push
push
add
add
and
movs
add
add
push
or
add
and
and
xor
sbb
mov
add
add
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
push
or
or
and
or
push
add
push
sbb
push
push
add
add
and
add
add
sbb
and
or
add
or
and
push
add
add
push
push
add
sbb
add
add
and
or
add
sbb
and
add
add
add
add
sbb
push
sbb
add
or
or
or
add
lea
xchg
push
add
add
adc
push
and
sbb
sub
push
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
add
or
jae
jne
jb
outs
add
push
add
adc
jo
jb
addr16
and
xor
xor
add
xor
xor
popa
xor
cmp
ss
sub
sub
cmp
xor
popa
xor
or
add
xor
xor
xor
xor
add
add
dec
push
outs
jne
jo
jno
jb
js
ja
jbe
js
test
test
push
push
push
push
and
add
xor
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
add
or
pop
add
push
sbb
or
add
pop
push
add
pop
pop
push
sbb
or
add
pop
or
jno
or
jne
sbb
push
or
add
or
add
or
or
pop
or
or
or
add
add
sbb
or
push
push
or
push
sbb
sbb
add
or
pop
add
or
add
add
pop
pop
invd
add
sbb
or
add
sbb
push
sbb
add
or
or
push
sbb
push
add
pop
add
or
add
or
or
pop
add
push
sbb
adc
add
sbb
push
or
sbb
push
sbb
add
sbb
add
push
pop
or
or
and
add
mov
out
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
push
xchg
imul
add
add
add
add
outs
add
add
add
and
add
add
rcr
rcl
lahf
dec
lods
movs
inc
inc
xor
dec
push
imul
adc
lahf
stos
push
jae
stos
pop
in
push
push
mov
rcl
cmps
fcomp
mov
xchg
push
(bad)
mov
scas
mov
idiv
mov
push
scas
xor
cmc
movs
imul
sbb
sahf
sbb
jle
mov
fs
icebp
add
jle
mov
mov
ins
rcl
adc
lds
stos
mov
mov
lea
and
mov
xor
jp
pop
mov
lahf
mov
mov
fs
jne
(bad)
mov
cmp
fsubr
ds
mov
(bad)
out
push
je
lods
lods
adc
icebp
dec
mov
arpl
pop
inc
xor
mov
lods
(bad)
stc
mov
mov
nop
jne
mov
out
mov
(bad)
pop
scas
call
pop
dec
xchg
mov
mov
stc
jl
data16
stos
movs
fdiv
retf
data16
retf
in
outs
(bad)
adc
jo
(bad)
test
mov
loopne
jb
neg
inc
aaa
scas
pop
in
jnp
pushf
push
clc
add
icebp
lahf
jnp
pop
mov
jbe
mov
test
fisub
xchg
push
inc
outs
iret
ficomp
popf
xor
mov
into
repz
push
lods
loop
fstp
fwait
cmp
icebp
(bad)
sbb
movs
retf
push
sub
lods
add
xor
ss
push
out
out
repnz
(bad)
fsub
je
xor
sbb
jo
jl
es
jne
xchg
clc
sub
fsub
sub
(bad)
and
pop
popa
push
retf
push
stos
jp
xor
and
(bad)
sti
lods
push
mov
inc
fcom
addr16
xor
xor
outs
jnp
lods
and
and
mov
gs
jbe
or
(bad)
js
add
dec
mov
xchg
sbb
out
jb
mov
jns
push
in
cwde
ss
mov
lea
call
das
outs
xor
cmps
cmp
in
mov
sub
xchg
jmp
jge
popa
sub
xor
ja
cmps
aaa
cmp
test
mov
int3
add
xor
hlt
push
adc
inc
enter
lea
mov
sub
sub
scas
mov
jg
pop
leave
dec
lahf
vxorps
xchg
and
mov
dec
jge
or
mov
mul
sub
dec
jmp
mov
hlt
sbb
jb
mov
jns
aas
dec
pop
mov
out
mov
dec
leave
mov
add
pop
rol
mov
xchg
fidiv
scas
pop
bound
popf
jg
ss
paddusw
ins
jge
cmps
(bad)
sbb
sub
xlat
pushf
int3
addr16
sti
imul
dec
comiss
hlt
dec
pop
xor
sub
in
ja
lahf
rcr
int
jmp
popf
cs
cdq
adc
lahf
sbb
ds
add
loop
pop
sbb
pop
lods
jmp
mov
inc
cmp
jb
cs
inc
gs
and
inc
jp
adc
inc
stos
push
and
mov
clc
xor
dec
adc
rol
mov
hlt
cld
out
pop
daa
cld
dec
xor
push
xor
sar
(bad)
loop
or
xor
xchg
fmul
imul
cmp
(bad)
imul
loop
mov
sar
test
cwde
imul
js
cld
pop
popa
push
dec
sti
ins
adc
mov
push
and
(bad)
jmp
cmp
mov
(bad)
repnz
test
adc
int3
pop
mov
in
sub
or
jmp
sbb
jmp
test
jne
ret
xor
das
jle
inc
push
fsub
xor
jbe
idiv
je
pop
ficomp
movs
push
dec
mov
daa
lock
cdq
xchg
sub
push
leave
ins
addr16
retf
arpl
sub
call
cmp
gs
(bad)
call
sbb
test
pop
and
repz
sub
cwde
ins
leave
mov
sub
adc
mov
cmp
xor
xchg
outs
push
and
add
and
xor
dec
icebp
test
cmps
fsub
xor
sahf
sbb
pop
repnz
jecxz
stc
adc
fwait
push
stc
xor
mov
mov
cmc
rcl
xor
addr16
inc
call
call
fs
mov
fld
pop
les
out
test
lods
clc
inc
fadd
xchg
nop
jp
mov
sbb
mov
enter
imul
jnp
lods
retf
mov
add
ss
cmp
mov
lods
xor
(bad)
xlat
ret
(bad)
xchg
(bad)
out
inc
in
ret
xor
inc
shl
jns
mov
mov
bound
inc
fadd
sub
fmul
mov
lods
mov
iret
sub
pop
jmp
jo
jns
jb
push
enter
aam
call
or
push
push
call
bound
or
xor
jno
mov
outs
in
addr16
jl
sbb
cmps
loopne
rcr
and
or
sbb
push
xor
mov
ficomp
ins
popf
mov
push
xchg
inc
mov
push
pop
ins
cmp
and
or
addr16
mov
mov
pop
inc
add
out
xchg
mov
pop
xchg
cwde
outs
mov
pop
or
ds
into
mov
and
fadd
inc
sub
iret
je
out
loop
movs
in
xchg
fdiv
mov
pop
dec
add
div
aad
call
sub
aaa
push
push
fnstcw
aad
sbb
sbb
outs
push
jge
sti
sub
or
sbb
popf
cmp
into
xchg
jecxz
mov
push
test
cmp
sbb
xor
loop
outs
xor
xabort
mov
xor
ror
mov
add
(bad)
jge
or
mov
pop
es
repz
mov
arpl
jae
adc
(bad)
mov
mov
test
mov
cmp
push
std
or
mov
shl
pop
and
add
jns
cdq
push
call
pop
nop
push
test
mov
(bad)
cwde
adc
int3
loope
and
ins
punpckhwd
xchg
rcr
push
fldenv
popf
out
push
into
mov
scas
fcmovnbe
sahf
cmp
mov
nop
rcr
shl
push
adc
shl
in
pop
in
jo
mov
and
test
sbb
bound
mov
leave
jb
stos
lods
dec
dec
dec
leave
push
popf
push
mov
outs
cmc
push
xlat
cmp
xchg
lea
pop
popf
pushf
mov
or
lahf
inc
int
push
pop
push
sti
lahf
xchg
movs
mov
xor
cmp
dec
rep
push
adc
fsubr
(bad)
xchg
repz
mov
jne
mov
mov
mov
shl
mov
pop
jecxz
xchg
gs
test
push
sub
out
mov
(bad)
cmp
jl
xchg
sar
push
add
outs
xchg
repz
fidiv
dec
push
mov
push
retf
enter
mov
js
(bad)
aaa
adc
data16
xchg
ins
cmps
aad
push
jne
arpl
or
push
add
xchg
jbe
push
sbb
sahf
cwde
add
in
xchg
mov
sahf
push
sub
(bad)
mov
pop
stos
dec
in
adc
fcom
in
sbb
shl
retf
sub
mov
inc
idiv
mov
mov
cmp
call
test
pop
sub
dec
sahf
cmp
and
pop
jo
xor
hlt
je
popf
pop
imul
je
es
and
push
push
stc
sbb
dec
or
or
mov
pop
sub
and
(bad)
fldcw
int3
dec
pop
neg
dec
xchg
adc
int3
xchg
sti
or
jecxz
and
je
sar
sub
pop
or
les
xor
cmp
gs
cmp
(bad)
call
aam
(bad)
movs
sbb
push
in
or
in
(bad)
push
pop
cmp
inc
xor
stc
inc
movs
stos
clc
adc
out
sub
xor
or
jae
scas
int3
lods
push
mov
sub
cmp
jo
lock
fistp
ror
retf
jle
out
pop
pop
(bad)
mov
sub
add
popf
test
cmp
sub
ret
cmp
cmp
mov
sbb
sbb
sar
adc
popf
push
loope
fmulp
adc
xchg
xchg
rcl
push
pop
add
arpl
mov
leave
sub
out
fcmove
mov
lods
and
add
bound
test
xchg
or
sub
ret
mov
xor
adc
jle
cdq
cdq
fs
sub
jge
shl
lods
test
push
sbb
xchg
out
in
sbb
je
mov
or
pop
scas
or
sti
add
bound
cld
aam
adc
mov
xchg
fisub
pusha
mov
adc
dec
sbb
sub
or
or
mov
pop
sbb
std
cmp
sub
xchg
hlt
retf
xchg
addr16
movs
out
jmp
dec
mov
jle
add
cwde
scas
inc
sbb
or
retf
sahf
cmp
repz
test
imul
ss
xor
addr16
retf
retf
mov
mov
push
and
jne
cmps
sub
lods
cmps
jmp
sbb
dec
or
mov
xchg
int3
inc
inc
dec
idiv
ds
dec
adc
jmp
mov
mov
mov
test
xchg
mov
jle
addr16
(bad)
and
mov
mov
adc
dec
lods
out
jl
jle
mov
mov
pushf
cdq
mov
push
push
jg
jp
jge
popa
sub
into
jbe
push
cmc
(bad)
fld
sti
push
mov
inc
(bad)
in
out
add
dec
outs
ins
pusha
sbb
xchg
ret
rcr
cmp
retf
jg
pusha
movs
adc
and
test
lock
fadd
nop
dec
outs
jmp
cmp
ds
leave
and
mov
cdq
jb
push
ret
shl
mov
xchg
xlat
adc
xchg
movs
cmp
hlt
dec
out
xor
xor
daa
push
test
leave
stos
adc
push
sti
cmps
push
lds
dec
jmp
push
rol
or
push
lock
cmps
or
inc
fistp
ja
mov
push
popf
scas
push
inc
sti
fnstsw
sti
lock
pushf
adc
ss
and
test
or
xor
xchg
cs
mov
mov
sub
(bad)
ds
mov
sbb
add
cmps
mov
xchg
cmp
pop
sub
daa
dec
fisttp
mov
test
push
ja
test
pop
jno
and
inc
std
or
scas
dec
shl
bound
and
jmp
mov
mov
mov
adc
push
fcom
inc
int
adc
in
xor
mov
add
jl
(bad)
jb
xchg
mov
mov
mov
sar
dec
mov
retf
mov
aaa
jge
stc
sub
jno
add
jle
rcl
mov
xchg
dec
push
inc
lds
js
add
mov
lods
mov
xor
loopne
push
dec
ins
or
fisubr
icebp
mov
sahf
fs
or
mov
jmp
push
loop
jl
dec
jmp
stos
and
jae
mov
sbb
mov
int3
mov
inc
mov
or
or
mov
xor
data16
or
retf
adc
xor
comiss
pop
ds
mov
sub
imul
pop
cmp
lods
pop
xchg
pop
inc
arpl
daa
xchg
push
cmp
or
aas
popa
outs
repnz
outs
arpl
imul
sub
inc
push
xchg
movs
leave
pop
jns
and
pop
and
pop
inc
je
adc
call
add
enter
push
leave
je
mul
neg
add
lock
pop
cmps
(bad)
pop
test
cmp
adc
sbb
add
jl
in
and
sub
out
cdq
shr
mov
retf
pop
out
(bad)
loope
pop
aam
mov
int
jns
inc
test
push
lds
mov
pusha
ja
cmp
push
push
cmps
hlt
enter
jbe
inc
sub
jno
cmps
seto
cmp
out
retf
shl
pusha
jmp
mov
adc
fbld
sbb
cmps
ins
loopne
or
xchg
call
jmp
sbb
jne
mov
or
jne
aaa
call
xchg
jo
mov
sbb
in
adc
lock
mov
jns
and
adc
dec
jmp
sbb
repnz
pop
fisubr
xchg
lahf
mov
rcl
adc
mov
imul
mov
stos
mov
ror
mov
data16
mov
pop
std
out
popa
or
bound
inc
outs
xor
cmp
sub
je
xor
push
popf
test
xchg
ins
cmc
dec
jl
loop
cvttps2pi
adc
or
push
or
cmps
dec
mov
je
repz
out
sub
sub
cmp
adc
movs
int
dec
aam
cmp
or
sub
sbb
xchg
cld
ret
sub
push
fcom
xchg
add
cwde
xchg
xchg
xchg
sbb
fcmovnb
shl
cwde
gs
shl
sbb
test
adc
rol
cmp
cmps
dec
xor
stc
retf
ror
rcl
iret
jl
mov
mov
or
fisub
push
(bad)
mov
inc
int
cmp
sbb
xchg
test
xchg
add
jae
test
push
jg
mov
pop
rcr
fsubr
jmp
sub
xor
adc
or
out
sbb
pop
fadd
xor
add
rcl
xor
inc
mov
or
cmp
jo
adc
fs
aam
bound
pop
or
mov
inc
add
outs
(bad)
jmp
inc
shl
add
daa
mov
and
ss
bound
or
(bad)
iret
int
add
jo
xchg
pushf
jg
pop
cmp
pushf
cs
add
pop
test
out
inc
sar
ins
enter
fild
std
inc
or
jbe
fisubr
push
in
sub
push
mov
fwait
xlat
sbb
fistp
pop
repz
fdivr
in
ins
add
imul
test
push
push
sub
adc
ss
cs
add
xchg
inc
daa
ficom
jp
adc
retf
lahf
pusha
mov
mov
xlat
shl
in
pop
popa
sbb
nop
dec
and
jmp
mov
push
xchg
push
(bad)
cdq
push
sbb
mov
xor
mov
shl
lock
mov
loope
addr16
cli
aad
stos
inc
shl
cmp
sub
jl
lahf
lahf
push
inc
data16
adc
shr
adc
mov
jg
mov
inc
cmp
xchg
cmps
mov
and
dec
sbb
aaa
xor
add
mov
add
jmp
cmp
lods
call
mov
fidiv
cmp
pop
adc
ficom
or
out
daa
xchg
out
shl
jg
add
and
leave
and
push
call
adc
dec
(bad)
mov
xor
mov
dec
stos
add
das
xchg
or
jae
js
add
jbe
cmp
rcl
jnp
cmp
cdq
and
lea
jge
sbb
sub
cld
je
jo
pop
mov
cmp
jnp
loope
mov
cmp
ret
(bad)
xor
sahf
movlps
pop
sub
xor
and
movs
push
rcl
arpl
pop
fstp
push
lock
xchg
add
test
out
fbstp
xchg
stos
mov
push
xchg
inc
mov
call
xor
int
dec
and
test
loope
cdq
(bad)
lock
or
mul
add
hlt
mov
mov
add
inc
pop
ss
(bad)
xor
sub
jecxz
mov
fs
xchg
leave
adc
adc
add
jnp
repnz
popf
add
mov
ds
outs
dec
sbb
add
push
int
fidiv
leave
mov
mov
or
push
inc
shr
loope
call
bnd
xchg
push
add
test
sbb
cmp
or
int3
mov
xchg
clc
dec
jge
jbe
fild
add
jge
jne
mov
xchg
and
xor
pushf
gs
enter
push
aaa
mov
mov
jne
leave
mov
xor
pushf
popf
in
push
push
ins
cs
or
cmp
out
xchg
dec
call
and
nop
out
pop
pop
fwait
jg
in
enter
dec
loop
cs
or
repz
xchg
push
push
or
pop
aas
(bad)
into
mov
ins
cs
push
shl
icebp
push
push
call
xor
enter
mov
icebp
scas
loopne
out
push
push
les
jne
scas
push
into
nop
js
aam
jns
xchg
mov
xor
xor
aam
je
mov
xchg
jno
cmc
retf
mov
ror
mov
push
cmp
mov
mov
adc
test
imul
xchg
sbb
mov
push
sahf
xchg
gs
rep
add
sbb
aaa
dec
(bad)
leave
jo
fistp
enter
mov
es
sub
sub
pop
leave
pop
jmp
jecxz
jp
push
mov
cmp
inc
push
push
retf
rol
movs
add
pop
adc
retf
(bad)
pop
test
jmp
pop
push
inc
leavew
sbb
add
sar
test
arpl
mov
mov
sub
iret
or
push
imul
sub
mov
inc
fiadd
inc
in
mov
aam
bound
jnp
xor
bound
arpl
vmovq
add
dec
or
pop
das
out
ja
shr
add
mov
inc
fild
cmp
push
aaa
push
jb
push
jle
pop
dec
gs
xor
cmp
adc
loopne
cmp
jg
test
mov
sbb
mov
adc
mov
jno
xlat
rcr
pop
dec
push
add
pop
fist
rol
mov
push
idiv
(bad)
fwait
jecxz
ins
mov
test
cmp
cwde
enter
out
in
call
pop
cmp
test
into
or
fwait
cmc
xchg
std
repnz
inc
std
cdq
adc
lds
rcr
not
pop
sub
inc
call
pop
ds
inc
mov
inc
addr16
shl
sub
and
mov
call
pop
lahf
sar
(bad)
jmp
push
loope
pop
or
or
pusha
sub
sub
pop
sbb
ins
(bad)
out
daa
cdq
xchg
nop
cmp
pop
nop
lods
xor
sbb
lods
xchg
xor
out
cmp
mov
sub
push
pop
daa
xor
jp
jnp
dec
jmp
(bad)
pop
loope
xlat
cdq
and
jne
sbb
inc
repnz
inc
push
pushf
dec
push
(bad)
imul
jecxz
dec
daa
mov
sbb
lea
test
mov
ror
das
inc
adc
(bad)
pop
jl
sbb
pop
xor
or
sbb
sahf
fucom
out
sub
mov
loopne
sub
imul
add
xlat
cli
aad
outs
cmp
out
loope
out
add
gs
jle
xchg
fst
jle
or
inc
dec
sbb
aam
sbb
popa
push
or
out
and
test
mov
or
out
sbb
scas
cmp
push
js
pop
mov
sahf
xchg
cmps
test
mov
push
jecxz
rcr
mov
cmp
jecxz
(bad)
mov
sar
mov
jp
dec
fistp
mov
adc
or
in
sub
jae
lods
arpl
fs
(bad)
jecxz
cmp
cld
(bad)
or
inc
sub
(bad)
int3
mov
out
sbb
fst
jno
xchg
call
sbb
lea
mov
jle
cmp
div
fwait
dec
pusha
jg
push
add
push
cmp
pop
test
pop
in
xchg
pop
adc
fdivr
shr
inc
stc
(bad)
adc
mov
mov
push
push
outs
pusha
in
clc
xchg
test
punpckhwd
out
arpl
lds
mov
pop
jne
jp
rcl
lds
and
leave
pop
or
mov
mov
xor
add
aam
fwait
and
inc
sub
mov
cmp
cmp
test
pop
adc
pop
adc
shl
aaa
pop
mov
mov
mov
in
inc
mov
popa
dec
in
dec
(bad)
mov
inc
mov
leave
in
jge
pop
xor
repnz
dec
call
stos
fld
fnstenv
adc
xlat
pushf
mov
mov
fmul
or
rcl
adc
int3
mov
in
repz
xchg
or
xor
mov
stos
jbe
xor
popf
push
mov
ret
and
jl
(bad)
mov
mov
cmps
gs
or
ret
sub
inc
clc
aaa
jno
daa
xor
call
sub
(bad)
dec
in
pushw
mov
ret
movs
xor
mov
sub
mov
pop
xchg
jecxz
std
xlat
loope
add
das
push
repz
(bad)
ds
addr16
or
test
sub
xlat
inc
pusha
ret
pop
pop
aam
out
mov
(bad)
or
shr
mov
idiv
cmp
adc
sar
add
imul
popf
xor
ins
aad
dec
shr
jo
ss
sbb
jge
mov
and
outs
pop
xchg
ds
xor
add
adc
inc
or
scas
mov
add
mov
add
cmp
gs
pop
sub
pop
sbb
xchg
ficomp
inc
add
lahf
rcl
sub
out
xchg
cld
leave
retf
fs
fimul
jne
ret
add
outs
rep
xchg
inc
pop
js
push
bswap
sub
(bad)
test
or
in
in
dec
xchg
das
gs
or
lea
pushf
jle
and
mov
(bad)
add
sbb
scas
outs
aaa
jge
dec
int3
mov
and
ret
dec
inc
cmp
lods
repnz
sahf
pop
mov
adc
jne
in
pop
leave
sar
loop
sbb
in
daa
sti
xchg
jb
xor
and
mov
lods
pusha
test
jecxz
sub
or
fmulp
cmps
retf
mov
xor
push
mov
lods
inc
xchg
das
sbb
mov
xlat
mov
push
sbb
sub
into
pop
jp
fisub
jge
das
inc
repz
xchg
cmc
add
data16
outs
in
cmp
inc
ss
push
icebp
in
jl
mov
stc
jbe
xlat
and
mov
mov
xchg
test
sbb
into
mov
or
movs
add
mov
push
inc
loope
repnz
sub
push
or
pop
xor
fsub
loop
loopne
aaa
(bad)
jp
stc
data16
out
cmp
mov
inc
and
cld
xchg
fstp
mov
add
cmp
mov
test
push
mov
mov
cld
call
pop
adc
push
push
pop
adc
gs
adc
cli
sbb
dec
dec
xor
xchg
movs
adc
mov
cmp
iret
pushf
shl
pop
cmps
scas
mov
sub
cmp
cld
ret
dec
xchg
dec
xchg
ins
fcom
mov
or
sar
mov
test
int
dec
jp
test
adc
cmp
dec
mov
jmp
adc
pop
mov
adc
lods
outs
jp
je
or
and
test
ins
stos
cmp
mov
movs
pusha
dec
ficomp
fnstsw
gs
hlt
xchg
ins
dec
push
mov
push
inc
(bad)
mov
lods
ins
ja
inc
xchg
or
and
cmp
mov
ret
out
rcr
push
xchg
cmp
imul
mov
and
push
push
xchg
(bad)
adc
inc
sub
in
xchg
sbb
add
dec
mov
push
pop
mov
mov
and
mov
jae
add
mov
retf
movups
in
mov
popf
and
add
fcomp
jae
addr16
aam
mov
mov
mov
mov
lahf
pop
xor
jb
popa
loope
test
cmps
test
mov
dec
(bad)
pusha
jge
iret
sahf
in
sbb
sub
or
inc
xor
push
cmp
popf
fnstsw
or
mov
daa
mov
data16
sub
xor
push
cmp
jmp
scas
mov
mov
jecxz
inc
mov
xor
push
jb
push
xor
mov
fwait
lods
cmp
leave
aaa
push
jo
inc
aas
push
mov
sub
and
es
retf
jno
fs
(bad)
mov
jae
push
dec
call
cdq
aas
not
adc
xchg
cmp
out
jmp
arpl
adc
cmp
fist
lea
aad
dec
cmp
jno
clc
and
and
inc
xchg
inc
movs
out
sbb
call
xchg
pop
xchg
scas
popa
mov
sbb
push
push
push
mov
mov
nop
mov
and
jnp
repz
cwde
cld
sub
icebp
push
pop
loop
cdq
inc
or
push
dec
adc
in
aad
repz
ret
sti
enter
dec
adc
leave
cmp
ds
je
fsub
cmc
jb
div
jp
xchg
jae
ret
jns
fst
clc
retf
jmp
fwait
adc
ins
adc
test
and
lahf
movs
adc
push
shl
jl
mov
inc
jge
lahf
sub
fwait
ret
mov
and
stc
movs
dec
xchg
cmp
outs
retf
add
arpl
imul
add
sbb
dec
cmp
test
out
pop
sbb
bound
popa
test
sbb
std
push
dec
add
in
xlat
pop
jno
imul
daa
and
add
mov
sub
lods
in
add
cdq
push
sti
sub
pop
sbb
neg
sbb
dec
mov
imul
push
lods
add
(bad)
int3
add
pop
sahf
fidiv
sub
cld
fiadd
sahf
ins
mov
lea
fimul
fstp
sbb
push
mov
pop
icebp
cmc
pop
test
lahf
mov
dec
lea
push
std
popf
outs
sub
xchg
dec
inc
or
mov
push
mov
mov
dec
(bad)
mov
mov
dec
mov
(bad)
mov
xor
jecxz
repz
sub
pushf
push
push
push
cld
mov
cmps
dec
movs
std
sbb
jle
bnd
in
cmps
mov
cmp
push
imul
ins
or
mov
mov
mov
hlt
add
inc
push
xor
mov
retf
shr
pop
xor
dec
call
sub
mov
xor
add
add
jo
push
inc
(bad)
adc
(bad)
cmp
add
mov
jo
les
or
fisttp
test
loop
arpl
add
hlt
inc
mov
pop
sar
pop
(bad)
pop
pop
sbb
gs
push
push
inc
lds
movs
icebp
pop
js
lds
adc
int3
stos
fst
mov
mov
push
in
(bad)
mov
push
in
jo
jne
js
jb
adc
jae
lock
(bad)
mov
repnz
nop
jnp
in
stos
ds
mov
sub
xchg
lds
xor
test
add
xchg
inc
(bad)
retf
mov
js
mov
inc
jmp
push
retf
jle
and
scas
push
hlt
ja
cmp
pop
jmp
sbb
and
in
pop
dec
jge
pop
into
div
repnz
xchg
mov
xchg
mov
js
xor
rcr
jp
push
and
mov
jns
adc
jmp
jno
out
hlt
cdq
push
popf
cs
sub
icebp
mov
jp
add
push
das
test
add
je
ds
(bad)
cdq
xlat
int
pop
xchg
mov
pushf
mov
push
mov
repz
inc
imul
or
out
inc
arpl
pop
in
cmp
and
in
pop
fmul
dec
pop
jg
and
dec
js
and
pop
pop
xor
jmp
and
retf
adc
rcl
js
out
pop
add
sbb
mov
mov
jnp
stos
jmp
and
xor
sub
lods
inc
sbb
mov
sbb
pop
pop
call
mov
aam
and
popa
or
aam
shr
xchg
push
push
sub
jmp
sub
(bad)
shl
xor
pop
imul
lea
xchg
sbb
inc
lods
sub
sahf
push
jg
and
fnstsw
fwait
xlat
sub
cmp
pop
mov
iret
test
inc
mov
neg
mov
dec
inc
movs
imul
call
and
fs
enter
out
clc
das
mov
or
retf
(bad)
popf
sub
gs
pop
push
add
add
rol
push
dec
jbe
outs
add
int
inc
and
stos
adc
es
fnstcw
nop
outs
xchg
pushf
push
dec
push
mov
xchg
jne
jecxz
pop
ss
hlt
in
leave
pop
jecxz
pop
jae
jno
push
retf
ins
or
xchg
repz
imul
adc
aad
scas
jecxz
dec
xchg
lahf
outs
mov
cwde
inc
sub
cdq
sbb
ds
stc
ja
into
mov
clc
mov
movs
enter
adc
mov
adc
pop
loope
dec
popa
rcl
retf
and
xor
sub
xor
push
inc
add
mov
mov
xchg
and
xor
sbb
lock
pop
jg
sbb
dec
(bad)
mov
push
div
sbb
jmp
adc
xchg
adc
fadd
icebp
cmp
lds
or
out
into
cmp
mov
sub
push
push
dec
jmp
cwde
ret
dec
shr
jne
out
add
inc
jns
add
jo
jge
sbb
scas
pop
and
push
call
popa
popa
xchg
adc
mov
jmp
inc
mov
repz
lods
(bad)
ss
test
pop
cli
or
in
and
(bad)
icebp
(bad)
call
arpl
aas
mov
lods
mov
adc
jae
rcl
inc
loope
xchg
pop
pop
sub
jmp
or
jecxz
mov
mov
adc
sbb
push
call
movs
std
add
or
mov
aad
sub
call
lds
add
pop
push
push
sbb
xor
inc
dec
lahf
inc
mov
pop
es
pusha
adc
push
and
shl
cdq
leave
dec
inc
pop
sahf
hlt
int
popf
stos
dec
lock
sbb
test
adc
(bad)
lods
mov
push
pop
jmp
mov
adc
inc
and
or
nop
sbb
into
out
sub
sbb
lds
pop
sbb
popa
add
sbb
les
xchg
or
ficom
shl
das
(bad)
mov
sub
or
adc
aam
std
jge
popf
pop
add
add
stos
inc
xchg
stos
and
(bad)
movs
dec
mov
gs
fndisi(8087
pop
adc
bnd
repnz
or
xchg
ret
pop
mov
pop
add
dec
mov
mov
bound
cmp
fisttp
repz
daa
hlt
sub
add
jmp
movs
pop
test
jp
xlat
jns
inc
push
shl
mov
jge
fild
out
mov
dec
cmps
test
addr16
mov
adc
pusha
mov
outs
push
inc
repnz
sub
popa
mov
fwait
outs
adc
scas
movs
mov
lods
xor
shl
and
aas
fsubr
xchg
dec
xchg
xor
sti
mov
inc
add
sbb
mov
push
(bad)
sar
adc
pop
pop
movs
sub
gs
fnstenv
pop
rol
jno
inc
dec
cmp
pop
iret
iret
add
leave
mov
adc
cwde
or
jnp
outs
push
ds
jae
and
sbb
test
mov
add
sbb
lods
inc
outs
sbb
loop
push
retf
jbe
stos
pop
xor
in
adc
ret
nop
cmps
gs
je
or
sub
mov
and
xor
sbb
stos
lds
adc
mov
xor
jae
repz
lods
xor
mov
int
repz
xlat
and
cli
loopne
imul
mov
jb
hlt
jle
hlt
xchg
jno
inc
ret
adc
mul
push
fist
cmp
jae
push
inc
xchg
outs
das
retf
(bad)
bound
xchg
inc
in
fwait
sub
lock
adc
and
les
sub
cmp
push
jmp
pop
sub
adc
or
shl
data16
push
xor
(bad)
mov
mov
ja
pop
and
jae
jmp
pop
xchg
mov
mov
jnp
sbb
xor
xlat
sub
xchg
jle
push
in
scas
rcr
dec
aad
mov
(bad)
adc
sub
and
mov
and
in
das
mov
push
add
jae
(bad)
cs
adc
inc
mov
sub
sub
mov
xor
les
inc
push
loop
inc
leave
mov
and
jb
lahf
std
push
jns
je
out
dec
outs
outs
out
add
je
push
cmp
xor
add
push
jnp
sbb
retf
pop
pusha
gs
pop
mov
cmc
sbb
jns
imul
mov
push
adc
rcl
xchg
and
icebp
xor
retf
ret
push
(bad)
dec
add
adc
syscall
dec
mov
inc
ss
rol
xor
xor
adc
mov
jle
add
shl
cmp
test
cmp
adc
outs
imul
ins
repnz
or
mov
or
mov
and
mov
push
out
ror
and
aas
int3
xchg
call
dec
mov
(bad)
pop
aaa
pop
xor
rep
outs
(bad)
movs
adc
mov
xchg
jmp
dec
dec
dec
sub
push
ins
sub
xchg
fprem
pop
jmp
fdivp
inc
ins
jg
pusha
sbb
(bad)
data16
mov
xchg
fstp
jmp
pop
(bad)
dec
out
test
xchg
mov
(bad)
int3
or
stc
mov
sbb
dec
xchg
aaa
xchg
shl
push
pop
shl
jne
jl
mov
cmp
test
pusha
scas
(bad)
gs
in
int
sahf
adc
xchg
(bad)
ds
lahf
imul
sbb
mov
and
and
jg
sub
jne
adc
mov
pop
mov
sahf
inc
punpckhdq
adc
idiv
sti
xchg
or
popf
xchg
and
mov
pop
mov
mov
mov
les
mov
push
adc
fisub
or
pop
mov
mov
dec
push
push
int3
sti
inc
and
jb
call
addr16
es
pop
mov
or
sti
and
adc
mov
sbb
fdivr
in
or
dec
inc
ins
inc
in
or
int
cmc
jmp
jo
dec
mov
je
jno
sti
clc
push
rcr
and
scas
jno
fisubr
cmp
xchg
pop
mov
cmp
push
loope
xor
mov
loop
add
pop
add
cs
pop
jo
pop
rcl
js
push
sbb
mov
cwde
xor
les
mov
mov
aam
out
scas
in
dec
pop
mov
and
pop
cmps
mov
xchg
sahf
adc
sahf
out
into
(bad)
enter
add
(bad)
fbstp
outs
cmps
cmp
xor
das
lds
shl
enter
cmp
mov
push
cld
repz
sbb
test
add
retf
imul
icebp
mov
adc
loopne
xor
fisubr
out
icebp
test
add
jle
stos
cmp
inc
add
stc
mov
test
jecxz
xchg
ret
shl
scas
jmp
out
xchg
inc
call
and
popa
adc
mov
add
fistp
push
push
cmps
in
rcr
xlat
jae
lods
cmps
imul
dec
loope
xor
out
scas
pop
jno
jle
xchg
enter
push
aam
out
dec
ret
mov
xchg
(bad)
stos
in
xchg
shl
out
test
dec
cmps
or
mov
push
push
mov
mov
dec
cmp
test
jmp
movs
daa
xchg
or
arpl
scas
jmp
sti
scas
pop
jge
in
test
aas
out
push
lods
mov
add
ss
mov
fistp
in
js
or
mov
pop
arpl
push
in
jge
and
mov
mov
or
jmp
(bad)
and
xchg
out
dec
push
xor
and
jbe
outs
sub
scas
xchg
shl
pop
test
imul
aam
jge
jle
mov
and
inc
dec
pusha
and
stc
xchg
xchg
adc
push
dec
mov
repz
retf
out
mov
into
inc
pop
xchg
jle
addr16
pusha
jmp
mov
popf
or
nop
cld
stos
mov
sbb
jbe
cmp
cmp
cmp
xchg
sub
mov
inc
ret
inc
imul
lahf
ret
xor
add
repnz
call
inc
cs
fcomp
mov
adc
rcl
scas
test
ret
sbb
push
dec
mov
cmp
cmp
xchg
int3
add
das
dec
lock
js
fdivr
sbb
test
lds
mov
pop
inc
(bad)
jnp
popa
popa
xchg
ins
(bad)
sbb
ja
clc
xlat
mov
gs
popa
(bad)
into
lods
jmp
sub
outs
mov
mov
sub
data16
dec
lods
jns
inc
sub
and
aas
xor
(bad)
xchg
add
mov
sbb
pop
push
daa
cmc
fsubr
aad
ins
push
nop
pop
popf
mov
inc
sbb
and
fxch
dec
loope
call
stos
(bad)
xor
mov
retf
lea
mov
push
dec
push
mov
js
mov
in
inc
adc
or
ja
(bad)
mov
into
(bad)
mov
xlat
test
gs
inc
ins
pushf
rcr
scas
sbb
aas
movs
mov
push
cmp
nop
fnstsw
int3
mov
gs
outs
adc
and
test
dec
lods
dec
out
push
adc
ret
xchg
add
cli
mov
ins
inc
mov
jmp
inc
adc
aaa
test
out
mov
cli
imul
xchg
mov
xor
fmul
(bad)
cmps
fcmovnb
idiv
xchg
cmps
inc
push
cmp
ds
imul
xor
xchg
pop
pop
cmps
loop
in
out
repnz
movs
ror
mov
xchg
sbb
dec
icebp
xchg
xor
and
sbb
add
push
sub
mov
leave
rcr
stos
pop
xchg
jae
mov
cmps
adc
inc
(bad)
mov
aas
xchg
mov
sbb
out
test
cmp
dec
dec
fs
(bad)
rcl
dec
inc
int3
imul
mov
(bad)
scas
retf
retf
aaa
rcl
out
inc
cmp
scas
sbb
loope
push
call
adc
dec
add
mov
push
rol
pop
mov
sahf
pop
xor
cld
nop
push
aaa
loopne
aad
inc
xchg
dec
stos
out
add
stos
ins
ror
loop
xor
pop
push
mov
mov
aas
jnp
mov
mov
cmc
test
repz
push
jnp
mov
nop
fcompp
fdivr
push
shr
popf
ja
ds
lock
xchg
popf
xor
jmp
add
les
xor
adc
mov
cmc
pop
jne
cmps
mov
cmp
fcomp
cmp
movs
movs
mov
inc
sbb
mov
xchg
xchg
pop
mov
jmp
and
add
dec
out
adc
rcr
or
stc
sbb
in
(bad)
mov
xor
sbb
mov
aad
xchg
int3
adc
das
cli
pop
sbb
add
cli
stos
and
adc
jg
pop
mov
aaa
cwde
(bad)
stc
mov
push
rcr
ja
inc
scas
test
nop
xor
ret
paddsw
xchg
fcomi
jno
sub
das
pusha
pop
nop
xchg
fbstp
ror
int
push
xor
call
imul
fs
or
mov
xchg
arpl
cmc
mov
call
jnp
xor
pushf
mov
xchg
js
inc
outs
loope
inc
mov
mov
dec
imul
push
push
lock
jge
rcl
in
or
sbb
xchg
aam
retf
loopne
das
pop
fsubr
mov
mov
or
aam
stos
repz
push
dec
cld
add
xchg
mov
mov
push
les
inc
push
inc
dec
frstor
xchg
dec
mov
sub
out
stc
outs
(bad)
scas
lds
jmp
xchg
pusha
ret
mov
div
sbb
jae
xchg
dec
jns
lock
add
mov
addr16
sub
push
cdq
mul
sbb
(bad)
and
sub
js
mov
push
sar
addr16
out
sar
xchg
and
cwde
outs
mov
push
or
mov
xor
inc
push
pop
ins
xor
sub
push
mov
(bad)
add
mov
adc
sbb
jbe
idiv
jne
jmp
ret
popf
dec
imul
loopne
std
sbb
mov
sbb
int
test
mov
stos
(bad)
and
push
mov
mov
inc
cmp
push
xor
push
cmps
clc
prefetch
jge
dec
dec
nop
xchg
xchg
or
test
mov
ja
and
mov
inc
das
and
xchg
es
div
icebp
dec
inc
test
mov
fnstsw
movs
ins
push
adc
in
mov
ret
pop
push
push
cmc
dec
test
in
mov
push
jp
cmc
call
pop
mov
dec
scas
les
movs
aas
shr
mov
sti
mov
push
daa
inc
ss
jno
lods
ja
mov
aam
scas
fiadd
stc
aaa
loope
outs
mov
xor
cmps
ret
dec
xchg
sbb
xchg
lods
retf
fcmovnb
add
add
fdiv
jmp
xchg
push
push
and
cli
ret
lods
cmps
pop
leave
jge
add
push
or
rol
add
scas
cld
jns
mov
clc
push
fst
jmp
push
adc
push
test
pop
add
ins
(bad)
not
enter
mov
add
cmp
addr16
adc
mov
dec
jb
ins
lods
dec
idiv
cwde
jge
cli
jno
aad
repz
psubw
mov
xor
arpl
movs
jle
idiv
retf
xchg
mov
mov
fst
push
jno
push
add
mov
addr16
xchg
mov
in
add
adc
mov
sub
pop
xlat
bound
pop
pop
loop
mov
fadd
push
cmp
pop
cmp
pop
loop
adc
cmp
pop
sbb
movs
jnp
aam
outs
aam
push
push
and
aad
bound
mov
(bad)
mov
daa
sbb
xor
jmp
inc
mov
or
outs
and
pop
(bad)
push
inc
mov
mov
mov
adc
aam
imul
js
(bad)
icebp
push
(bad)
xor
push
(bad)
test
mov
jne
sbb
xlat
ins
int
xchg
cmc
out
retf
lahf
inc
pop
sub
inc
cld
addr16
fldenv
sub
adc
xor
call
ja
test
push
adc
outs
jmp
fist
(bad)
loop
or
dec
dec
mov
xor
(bad)
fs
mov
int3
mov
pcmpeqw
dec
jl
in
inc
mov
lock
(bad)
lock
ja
push
jb
mov
js
fdiv
imul
leave
dec
ja
fdiv
sbb
(bad)
dec
xor
xor
mov
mov
leave
outs
cmp
jbe
(bad)
mov
inc
nop
mov
cmp
xchg
xchg
cmp
gs
mov
fwait
sub
imul
xchg
test
ja
cmp
int
add
xchg
push
xchg
xchg
js
sbb
and
outs
jle
int
adc
jmp
adc
jp
and
mov
or
xor
sub
aaa
jle
push
stos
pop
sti
sahf
and
sbb
lods
ret
add
mov
je
lods
out
mov
mov
lods
xchg
xor
xor
std
mov
lods
mov
inc
int
fdiv
ret
loopne
mov
push
fidivr
push
jle
in
(bad)
cmp
inc
or
dec
fimul
lods
mov
iret
mul
cld
xchg
hlt
jge
cmps
adc
mov
imul
push
dec
dec
mov
push
adc
pop
xor
rcl
pop
mov
mov
cmc
dec
push
dec
pop
popf
cmps
fbld
jmp
sub
lods
adc
inc
inc
sub
in
ret
int3
cmp
loope
frstor
jg
std
pop
loop
cli
xor
add
movs
xchg
rcl
jno
add
std
xchg
push
jmp
xchg
mov
inc
inc
or
jbe
inc
fcmovnb
push
ret
add
call
xor
mov
push
fsubr
out
test
pop
mov
ja
mov
push
scas
adc
push
jns
mov
jb
sub
dec
dec
mov
push
pushf
sub
call
mov
aad
addr16
add
push
push
pop
mov
mov
movs
test
mov
inc
jno
dec
xor
into
add
outs
test
(bad)
arpl
stos
cmps
imul
retf
sbb
inc
sti
out
sbb
xchg
cmp
test
xchg
dec
inc
aaa
jmp
mov
sbb
cwde
and
add
dec
dec
xchg
movs
xlat
js
add
jnp
xlat
lds
fs
or
add
ins
and
inc
pop
sbb
pop
(bad)
xor
mov
push
(bad)
shl
in
add
mov
mov
jo
fbld
(bad)
pushf
cli
xor
call
jno
psubq
cmp
inc
push
mov
mov
lea
cdq
mov
mov
lds
add
lods
mov
shl
and
scas
cwde
sti
les
shl
pop
sbb
lock
aaa
sbb
mov
fucomi
push
cli
push
jecxz
int
push
das
movs
in
cwde
jle
xchg
test
js
addr16
sub
call
push
push
stc
xchg
clc
push
loopne
adc
dec
mov
adc
test
push
aas
pop
bound
inc
dec
int
in
neg
loope
cs
jl
cmp
popf
je
into
je
jle
and
pop
mov
rol
addr16
xor
jnp
imul
adc
retf
add
mov
or
imul
mov
es
sub
popa
daa
adc
arpl
retf
push
sti
movs
xor
lahf
jae
int
inc
in
mov
jl
mov
xchg
xlat
xchg
push
push
sub
dec
outs
aaa
push
mov
dec
xor
cmp
int
ss
xor
ret
imul
cmp
call
adc
ud0
mov
stos
mov
call
repnz
xor
jg
loopne
mov
fs
dec
mov
fwait
dec
in
iret
inc
(bad)
push
sub
or
scas
xlat
cmp
rol
xor
xchg
jne
dec
aad
lea
test
fld
aam
xchg
mov
adc
cmps
das
(bad)
fcomp
mov
xor
add
fs
repz
(bad)
in
xchg
pushf
pusha
into
adc
inc
sbb
dec
jns
mov
loopne
cmc
dec
scas
out
inc
push
xor
cmp
mov
xchg
jmp
or
call
push
and
mov
sbb
xor
int
cmps
fdivr
or
js
aaa
xchg
mov
adc
mov
ror
stos
xor
daa
sub
inc
mov
lods
enter
cmp
mov
sub
repz
jp
sub
das
fadd
es
xchg
xchg
mov
(bad)
mov
dec
mov
in
fidivr
outs
xchg
int3
add
(bad)
mov
stos
stc
mov
icebp
call
xor
arpl
mov
test
xchg
pop
mov
xchg
cmps
popa
sub
call
jbe
fidiv
stos
fnsave
ja
(bad)
cmp
add
fldenv
pushf
in
mov
test
adc
shr
mov
xchg
push
pop
mov
xor
loop
stos
jl
jle
enter
repnz
(bad)
(bad)
push
enter
(bad)
fiadd
pop
cld
in
or
ins
xchg
push
or
cmps
inc
jno
retf
mov
sti
inc
add
inc
cwde
cmp
ds
mov
sbb
xchg
cmp
cmp
or
sar
xor
shl
sbb
cmp
clc
or
mov
sub
mov
pop
loop
sahf
ins
ror
fcomp
neg
retf
loopne
test
xlat
call
and
enter
jns
cvttps2pi
imul
dec
and
sub
cld
stos
xchg
retf
scas
repnz
scas
loope
cmp
(bad)
(bad)
cwde
js
(bad)
loopne
into
(bad)
or
cs
pop
pop
jmp
dec
aas
jge
pop
retf
fxch
push
xor
ret
scas
(bad)
add
gs
loope
mov
sub
push
push
mov
fmul
pop
cmp
repnz
(bad)
push
retf
and
ret
jbe
jns
retf
pop
retf
mov
das
ss
and
iret
nop
xchg
sbb
jne
or
fnstenv
int3
mov
jb
and
mov
sbb
shl
movs
out
dec
sub
jo
movs
push
enter
xchg
popa
ret
mov
xchg
daa
dec
push
mov
xchg
ins
push
dec
jmp
imul
ds
ins
dec
dec
cmp
sub
xchg
pop
lods
adc
sub
mov
add
jmp
dec
into
and
popa
(bad)
loopne
inc
and
mov
mov
cmp
inc
ins
out
jnp
into
inc
dec
cmp
push
xlat
out
cld
fadd
adc
mov
(bad)
ja
leave
push
cmps
into
mov
bnd
push
xchg
dec
stos
xchg
and
sbb
cmps
xchg
ja
and
mov
adc
ja
jb
cwde
jne
mov
test
test
xor
in
xchg
sub
xor
sub
scas
push
out
xchg
fsub
hlt
outs
pop
adc
ins
call
ins
inc
push
imul
add
or
and
or
outs
call
std
xor
loopne
test
jle
jns
jle
sbb
(bad)
xchg
fld
pop
inc
(bad)
mov
and
sub
mov
jecxz
xlat
das
xor
mov
xchg
xchg
test
jnp
int
jb
jp
cdq
mov
pushf
test
jmp
adc
xchg
adc
sbb
mov
xchg
or
mov
(bad)
sti
mov
mov
outs
jmp
sub
sti
add
out
ror
sbb
mov
cs
adc
cmps
stc
mov
and
push
sahf
(bad)
mov
sbb
arpl
cwde
popa
cmp
out
sub
jns
add
jp
and
into
in
dec
lods
adc
dec
inc
sbb
in
std
adc
and
mov
or
cmp
fidivr
scas
jmp
aaa
dec
inc
ins
sahf
sbb
fld
es
daa
pushf
jge
push
nop
mov
call
dec
movs
(bad)
in
rcr
mov
inc
mov
mov
mov
sub
sub
pop
jmp
jnp
adc
push
int3
or
outs
xchg
add
add
inc
enter
fsub
add
dec
inc
inc
cli
mov
lds
call
and
mov
bound
dec
cli
div
es
rcl
push
push
cmp
in
test
mov
(bad)
dec
inc
inc
scas
push
ret
aad
inc
and
ja
or
xor
push
cmp
ret
push
push
jno
xlat
fsub
jae
push
fisttp
pushf
or
xchg
je
cmp
mov
mov
mov
dec
cmp
call
call
or
ds
je
push
imul
addr16
out
mov
pop
xchg
repnz
dec
pop
rcl
cs
push
ss
ret
xchg
push
scas
cmps
aas
pop
inc
repz
pop
popf
jno
scas
les
dec
pop
in
dec
add
cwde
shr
xlat
loope
inc
rcl
pop
cs
cmc
xor
stos
pop
sub
and
(bad)
arpl
inc
cmps
addr16
and
xlat
xchg
cli
cmc
rcr
xor
and
outs
aam
push
jle
loopne
sahf
inc
lods
into
outs
jmp
push
cmp
aad
in
out
xlat
test
lods
pop
(bad)
fsub
repz
jp
xor
pop
call
test
(bad)
and
jge
inc
mov
stos
xchg
inc
push
loop
pop
jmp
imul
cld
ffreep
stos
outs
push
or
cmp
(bad)
xor
les
add
sub
dec
test
popa
arpl
mov
neg
sub
imul
mov
stc
out
sti
mov
jp
cmp
leave
jge
je
xor
xlat
enter
test
addr16
and
iret
adc
test
stos
cmp
fdiv
outs
stos
das
mov
mov
mov
call
mov
je
fbstp
sub
or
xor
inc
mov
mov
and
clc
cli
or
pop
add
jnp
push
jnp
cmp
call
aam
dec
mov
(bad)
loopne
in
std
mov
push
add
cli
jne
pop
sbb
xor
dec
mov
ret
xchg
cmps
lahf
cmp
call
jg
stc
stos
xchg
lods
adc
mov
mov
cld
jg
lods
xchg
je
jb
xchg
sar
cmps
or
inc
dec
mov
xchg
fs
call
repz
inc
das
pusha
xchg
je
cmp
aaa
mov
and
push
lds
mov
test
add
std
addr16
xor
sbb
shl
jnp
mov
mul
dec
leave
arpl
mov
or
xchg
push
jne
dec
inc
dec
out
repnz
test
xor
sbb
jg
push
ja
out
push
jl
adc
rol
mov
les
jg
and
test
bound
adc
sbb
sbb
sahf
adc
cs
lock
push
pop
in
addr16
mov
push
or
xchg
add
out
sub
pop
popa
shl
push
push
int
cwde
out
aam
ins
lahf
call
test
(bad)
sahf
lods
mov
stos
ret
cmp
ins
xchg
call
push
ja
cdq
int3
fstp
add
cmp
mov
pop
ja
xor
push
sbb
arpl
pop
mov
fnsave
mov
shl
cli
outs
push
mov
cmp
jge
clc
mov
das
mov
mov
xor
and
add
push
and
inc
xchg
cmp
int3
pop
ins
dec
loope
scas
dec
inc
movs
mov
adc
scas
popa
adc
mov
or
cdq
lds
jno
test
xchg
sbb
sub
js
mov
fucomp
mov
xor
pop
mov
sar
ror
cmp
cmp
data16
cmps
and
sub
in
mov
cmp
or
mov
mov
(bad)
or
repz
bound
push
call
sbb
adc
adc
lods
pop
in
shl
ds
add
add
and
enter
dec
push
mov
sub
stc
mov
outs
or
arpl
test
call
loopne
imul
stos
jp
mov
stc
lods
xchg
adc
loop
sbb
stos
std
in
es
pop
xor
mov
jne
pop
aaa
aad
mov
pop
ror
jge
xchg
mov
call
cmp
add
movs
cmp
cli
ins
inc
xor
fcomi
sbb
movs
and
or
cmps
or
jo
and
cmp
repz
pop
scas
push
push
iret
stos
jnp
leave
mov
cwde
and
aas
out
arpl
add
aam
cmps
ins
push
js
mov
jmp
sbb
push
mov
in
lds
inc
jb
clc
shr
pusha
sbb
lock
jne
ds
stc
adc
inc
or
inc
mov
cmp
dec
push
add
movs
je
(bad)
push
cli
retf
mov
rol
jge
push
sub
mov
lea
adc
cmp
cmp
mov
pusha
out
adc
dec
jmp
sub
lods
adc
sti
(bad)
aad
out
rcr
mov
(bad)
cmp
adc
out
sti
cmc
push
and
mov
movs
and
jno
add
lds
jmp
dec
(bad)
popa
inc
or
mov
movs
(bad)
xchg
xchg
sti
push
jecxz
push
test
and
loopne
push
ret
and
ja
lds
xchg
in
xor
lods
mov
inc
hlt
fsubr
out
sub
cmp
repz
push
ret
cmp
or
leave
xchg
or
fs
out
ss
lea
mov
ret
jnp
dec
mov
xchg
loop
jmp
xchg
jae
add
es
jns
jl
mov
add
jno
cmp
jns
in
xchg
lds
or
test
inc
push
sub
movs
cmc
inc
dec
xor
pop
scas
mov
fadd
push
daa
dec
sbb
pop
test
int
test
inc
mov
test
add
jns
cmp
sbb
jg
sbb
jbe
push
pop
imul
pop
retf
ret
adc
dec
mov
add
push
out
aam
dec
inc
ins
mov
inc
jbe
add
out
(bad)
movs
stc
mov
add
mov
nop
sbb
mov
inc
jecxz
and
cdq
inc
push
jle
test
je
sar
sahf
sub
push
cmp
jno
daa
stc
dec
jge
dec
imul
sbb
jno
mov
shl
scas
out
sub
sbb
mov
movs
mov
popa
pop
dec
jb
imul
xchg
sub
lds
int3
popa
stos
or
loopne
mov
(bad)
movs
ret
or
sbb
xchg
test
(bad)
out
jecxz
xor
or
test
loope
in
fldenv
adc
int
or
das
add
cwde
mov
leave
mov
adc
jl
in
rcr
pop
jecxz
call
cmc
(bad)
pop
mov
mov
out
xchg
adc
pop
adc
jl
fdiv
retf
ins
fsubr
cmps
in
pop
cwde
arpl
sbb
jmp
push
fld
cmc
lods
lock
lea
sbb
loope
mov
and
sti
mov
xchg
cmp
lock
mov
inc
push
in
sub
into
nop
ss
xor
test
jmp
movs
jnp
out
pop
dec
ds
imul
jo
mov
mov
ss
xchg
push
out
and
mov
mov
or
cmp
mov
fnstsw
push
dec
mov
mov
xlat
cmps
jmp
aad
test
(bad)
sti
fadd
dec
cmp
jo
pushf
outs
sub
inc
pop
push
push
xor
pop
std
imul
sbb
ret
pop
retf
pop
pop
adc
int3
aas
push
jnp
add
test
test
cli
pop
repz
ins
dec
daa
bswap
and
popa
ins
jle
(bad)
mov
or
popa
mov
outs
jp
inc
add
ds
add
int3
push
(bad)
jp
mov
outs
lock
xchg
out
add
out
xchg
je
xlat
ja
mov
jnp
sbb
mov
xor
cdq
clc
cld
in
xor
fistp
mov
mov
cs
mul
adc
retf
xor
jge
push
(bad)
fadd
aam
test
or
ss
addr16
test
rep
mov
xchg
cmp
jge
mov
xor
ror
in
sbb
adc
stos
mov
je
icebp
div
mov
pop
jg
mov
cs
xor
arpl
cmp
inc
and
xor
paddq
loopne
jbe
jbe
mov
sbb
adc
adc
xchg
popa
rcl
ror
or
mov
dec
mov
rol
adc
xrelease
jns
xchg
jge
icebp
cli
rcr
out
lods
mov
call
hlt
add
daa
or
int3
sti
ror
cmp
jo
cmp
sti
pushaw
iret
pop
adc
retf
push
add
jno
dec
icebp
push
cmp
cmc
sub
fmul
add
pop
mov
loope
sub
jno
dec
sahf
inc
hlt
push
hlt
xchg
sbb
jp
push
pop
mov
dec
out
cmp
les
push
mov
push
arpl
sti
out
(bad)
lahf
rcr
or
pop
push
jae
arpl
daa
out
mov
jbe
xchg
xchg
je
sar
push
cmp
sbb
out
and
inc
fcomp
out
pop
jl
stos
adc
clc
xor
mov
aas
(bad)
mov
cdq
jp
xchg
pop
mov
ds
sahf
nop
movs
sbb
push
outs
(bad)
loopne
and
mov
pop
aad
ret
cmp
ds
les
imul
jecxz
fwait
clc
pop
test
fwait
pop
(bad)
pcmpgtb
jno
inc
push
cmp
sub
push
data16
or
inc
and
inc
dec
ins
out
add
movs
imul
movs
inc
clc
push
sbb
sbb
sbb
push
jae
clc
(bad)
fbld
rcr
mov
cmp
out
scas
mov
sub
add
add
cmp
adc
jge
dec
sub
and
sbb
push
ins
sbb
xchg
cwde
out
or
out
loope
jl
(bad)
xor
jge
jb
cmp
pop
mov
retf
popf
fcmovnbe
in
inc
mov
sar
jle
aas
cmp
popf
out
scas
aaa
xlat
ins
jp
aad
jb
push
rcr
call
cmp
xor
cli
cs
and
shl
push
cmp
cmp
cmp
or
mov
or
(bad)
sti
(bad)
cmps
push
(bad)
push
repz
pushf
mov
pop
gs
push
pop
jl
into
lock
and
add
mov
test
xor
sub
mov
shr
stos
cmp
mov
fs
push
aaa
cmp
cmp
and
sub
inc
aaa
push
into
loopne
mov
mov
mov
ins
pop
adc
cmp
ja
xchg
ffree
test
inc
(bad)
clc
xchg
push
dec
jle
dec
fs
dec
(bad)
sbb
out
jecxz
cli
stos
sub
rol
add
es
xor
or
sti
jno
xchg
or
cmc
fstp
nop
mov
pop
out
xchg
ss
scas
add
mov
inc
sub
adc
mov
jne
lds
inc
into
pop
inc
add
imul
pushw
jnp
cld
arpl
int
or
pop
jle
loope
xchg
sbb
int3
push
push
pop
in
mov
dec
add
sbb
jecxz
sub
push
jae
mov
in
jne
add
adc
mov
and
pusha
sbb
xor
icebp
jl
mov
jge
cmp
ins
cmovp
inc
push
jno
pop
adc
jg
loope
jnp
xor
mov
inc
mov
jg
rcr
repnz
fst
cmp
shr
pushf
and
and
cld
das
rcr
test
pop
fsubr
ficomp
jmp
jno
jecxz
add
or
inc
(bad)
iret
jg
xlat
xchg
add
mov
movs
shl
pop
push
loopne
or
mov
mov
rcl
lock
dec
pop
cmp
sub
sbb
adc
cmp
rol
sti
and
mov
xchg
push
mov
push
or
rdrand
mov
sub
pop
popa
div
arpl
inc
xchg
cmp
cmp
xchg
jae
xlat
arpl
daa
and
cmps
jge
jg
mov
dec
adc
stos
pop
and
test
xor
mov
or
sbb
sbb
int3
mov
jbe
inc
pop
pop
stos
push
retf
mov
in
fidiv
xor
push
dec
adc
cmp
xor
loop
inc
inc
sbb
cmp
fist
xlat
or
mov
or
out
xchg
or
xchg
cwde
fsub
or
in
jge
xor
aas
test
dec
aam
mov
mov
pop
jae
push
add
xchg
mov
sbb
push
xchg
xor
nop
mov
and
(bad)
jbe
fldenv
lea
mov
push
cmps
not
cs
out
and
rcr
xchg
test
aam
xor
dec
mov
movs
add
and
les
cs
int
cmp
loop
out
and
lahf
inc
outs
div
lds
add
pop
dec
push
loop
pop
std
mov
xlat
and
push
add
sub
pop
sbb
and
cmp
frstor
pop
mov
ret
int3
dec
fdivr
rcr
sub
rep
mov
mov
iret
movs
sub
pusha
jge
popf
(bad)
mov
int3
adc
pop
lahf
scas
mov
imul
(bad)
push
xor
xor
jne
mov
repz
cmp
add
test
les
add
xchg
push
push
repnz
mov
and
and
test
add
scas
fldpi
jbe
imul
pop
sar
hlt
sub
(bad)
cmp
cmp
xor
in
mov
xchg
shr
and
lahf
mov
inc
and
mov
nop
daa
shl
aad
sub
sbb
jmp
jae
sbb
inc
pop
fwait
ror
sahf
mov
pop
push
fnstcw
out
cmp
sbb
xchg
test
push
xchg
std
xchg
push
xor
adc
fld
and
jae
icebp
ret
mov
dec
test
jb
pushf
xchg
xor
inc
loope
sbb
out
cwde
mov
adc
ret
lock
and
not
mov
sub
bound
jne
cdq
jle
mov
fild
icebp
hlt
push
and
sahf
stos
popa
cs
in
imul
sub
imul
outs
aas
icebp
call
xchg
(bad)
dec
cld
pusha
jg
mov
jg
xchg
fwait
stc
add
push
push
cmps
in
imul
dec
sahf
pop
xor
cmc
or
leave
retf
push
pop
mov
xchg
and
in
jmp
jp
adc
jmp
sbb
cmps
cmp
syscall
(bad)
ret
and
test
and
lods
xchg
mov
dec
in
mov
clc
xor
fdiv
in
inc
fist
stos
add
jne
mov
mov
xlat
or
arpl
stos
mov
retf
jmp
xchg
mov
mov
addr16
inc
xor
push
or
xchg
push
lods
mov
lods
push
inc
xor
jle
(bad)
fldl2e
inc
jo
push
les
or
or
mov
fstp
sub
add
retf
adc
call
scas
cli
in
and
mov
xor
arpl
sbb
test
jmp
or
das
dec
iret
cdq
inc
out
inc
jb
scas
ss
imul
scas
and
inc
mov
xor
cdq
ficom
(bad)
xor
arpl
mov
adc
sub
jo
cli
xor
inc
cmps
push
shl
adc
rol
xor
and
pop
pop
cmp
ret
ins
push
sti
add
add
mov
inc
stc
mov
add
arpl
jge
clc
sub
pop
jmp
mov
push
test
xchg
push
sub
icebp
es
xor
and
mov
or
neg
adc
xor
fxch
mov
xchg
mov
arpl
mov
std
jns
push
(bad)
and
push
lods
icebp
or
jecxz
jne
sub
mov
(bad)
aam
pop
adc
adc
mov
fcmovnb
or
jmp
loop
out
scas
mov
lock
outs
push
push
out
sub
outs
sbb
sub
clc
das
sbb
(bad)
and
xor
add
mov
inc
push
jge
aas
repz
setge
mov
cmps
jne
dec
mov
test
jmp
xor
fisttp
fnstenv
inc
xchg
popa
lock
add
rcr
cmp
sub
lods
mov
rol
mov
jno
jmp
arpl
ror
aaa
aad
inc
mov
repnz
dec
and
jb
mov
xchg
loop
in
call
mov
or
int
retf
bound
dec
cmp
(bad)
lods
and
add
push
pop
or
dec
or
xchg
mov
rcr
sbb
cmps
lds
push
fldenv
cmp
pusha
inc
dec
pop
sub
dec
mov
sbb
mov
mov
(bad)
adc
jo
jecxz
push
out
or
lahf
repnz
xor
xor
leave
in
je
push
stc
cli
je
popf
mov
addr16
xor
or
cwde
and
outs
dec
sahf
add
and
pop
push
scas
(bad)
pop
(bad)
sub
lds
ins
mov
shr
vmovaps
test
mov
or
das
mov
pushf
(bad)
imul
or
rcl
sbb
in
mov
push
mov
jnp
jge
sbb
cmps
adc
jl
iret
loope
rcr
jo
sub
cmps
fadd
push
mov
popf
fdiv
or
loope
sub
(bad)
and
xchg
pop
mov
mov
repz
pop
dec
in
mov
scas
neg
test
or
or
inc
jb
pop
cwde
fst
inc
lds
daa
std
xor
and
mov
pop
mov
xor
dec
xchg
clc
add
stos
popa
repz
push
fs
pop
push
out
cld
aad
jo
out
rcr
mov
dec
xchg
sar
dec
mov
cmp
jnp
jo
xor
pop
sbb
jp
add
and
jmp
inc
std
add
(bad)
int3
inc
ins
and
inc
int
mov
bound
sub
(bad)
int3
imul
outs
mov
xor
lods
xchg
retf
xchg
sub
scas
mov
cmp
psrld
xor
pop
jne
mov
and
adc
or
inc
jmp
push
data16
xchg
ds
cmp
cmp
mov
pushf
mov
imul
stos
and
fld
dec
cmps
test
cmp
inc
jge
mov
ins
outs
ja
inc
loope
sbb
push
(bad)
gs
push
sahf
call
adc
ror
lea
xchg
dec
movs
mov
out
std
mov
mov
xchg
(bad)
mov
dec
sbb
jns
xor
dec
mov
and
pop
push
mov
mov
test
pushf
sbb
xchg
in
lods
and
lock
cmp
(bad)
xchg
fwait
test
nop
jnp
jno
into
mov
pop
shl
jmp
adc
xor
sub
xor
inc
fs
repz
jo
cmp
mov
pop
in
lock
mov
xchg
pop
sahf
cmp
adc
xchg
outs
jno
(bad)
out
and
add
(bad)
mov
mov
stos
aad
mov
outs
loope
loopne
sbb
jae
dec
add
and
fmul
lea
ins
call
cld
fmul
dec
dec
inc
mov
xor
sbb
sti
jbe
fnstsw
imul
add
add
in
out
or
test
add
ret
pop
fld
dec
dec
dec
pusha
int3
aaa
jb
push
cmp
test
in
push
pop
adc
or
sbb
ret
jns
xchg
lock
cmp
adc
test
rcr
mov
pop
sbb
test
fs
mov
pop
xchg
mov
dec
sub
cmp
xchg
fbld
xchg
xchg
pop
ins
shl
jge
jmp
fisttp
out
lock
sbb
mov
pop
nop
mov
aam
call
repnz
xor
lods
dec
fwait
pusha
mov
sar
lock
sbb
cmps
mov
sbb
mov
xor
sub
std
mov
cdq
xchg
jl
and
inc
pop
push
in
aaa
mov
in
dec
pop
mov
or
fstp
jp
sub
adc
movs
ror
mov
neg
inc
pop
cmp
fadd
mov
sar
in
cmps
dec
or
(bad)
push
in
call
gs
out
or
add
mov
inc
push
cmp
mov
stos
push
(bad)
mov
add
popa
call
mov
ja
mov
fwait
test
es
or
pop
jle
lahf
push
out
leave
cmc
jnp
enter
repnz
(bad)
xlat
fadd
xlat
cmp
fwait
inc
jl
or
sbb
mov
pop
mov
or
mov
das
mov
xor
and
rcl
jae
cmp
sbb
or
hlt
int3
retf
cmp
cmp
hlt
ror
inc
and
xchg
cwde
fs
stc
clc
call
iret
add
cmp
or
add
or
xchg
mov
jne
ins
and
popf
push
les
fs
fdiv
pop
jne
xchg
jmp
into
cmc
mul
into
shl
jbe
shl
test
rcl
or
idiv
std
addr16
out
mov
add
mov
imul
cmps
sbb
adc
(bad)
test
or
or
int
(bad)
in
push
or
aaa
imul
aaa
mov
fsub
mov
push
inc
xchg
cmp
scas
sub
adc
ret
in
dec
jge
sbb
sbb
sti
add
or
jae
pusha
std
dec
mov
pop
aas
jg
sub
xchg
mov
sbb
jmp
push
push
call
hlt
xchg
cmp
fwait
aam
ficom
xchg
adc
in
sbb
add
in
(bad)
xlat
xor
test
out
add
mov
outs
mov
cmc
mov
js
sbb
push
xchg
loop
movs
dec
ins
push
mov
call
pop
ss
jae
int3
dec
test
sub
in
xchg
jl
sub
cmp
pushf
mov
in
ss
xor
(bad)
mov
push
pop
jb
sub
(bad)
xchg
retf
stos
popf
stc
xchg
lods
in
sti
call
aaa
cmps
add
mov
cmp
xchg
inc
aaa
fisttp
adc
jmp
mov
add
pushf
outs
sub
mov
int
jo
and
mov
mov
mov
xor
test
sub
cmp
dec
jmp
xor
dec
adc
xchg
iret
test
jmp
mov
stos
mov
aaa
sub
cmp
or
das
sti
fist
mov
and
jg
cmp
lods
push
sbb
inc
xor
cmp
or
call
rcl
retf
push
cmps
sbb
and
sub
in
pop
stos
out
(bad)
out
into
pop
inc
cmp
jge
call
or
movs
pop
jmp
(bad)
shl
mov
aad
mov
mov
cmc
adc
sub
rol
jmp
outs
shl
fwait
and
sahf
push
sub
stos
dec
jl
popa
rol
fcmovu
pop
repz
pop
int
dec
arpl
or
out
dec
dec
or
mov
mov
aam
mov
sub
lock
pop
xlat
lods
les
pop
shl
outs
ficom
out
dec
dec
retf
mov
or
aaa
sbb
scas
das
sbb
lods
mov
sbb
xchg
sub
test
movs
stc
pop
cmps
out
cmp
out
push
fsub
in
sbb
stc
xor
test
add
xchg
addr16
pop
mov
jecxz
and
push
out
xchg
hlt
inc
gs
fucom
xlat
dec
xor
dec
movs
fld
mov
sahf
ror
mov
aam
ficomp
das
or
out
cwde
inc
push
rcl
gs
popf
dec
add
push
repnz
sub
pop
pop
je
mov
imul
(bad)
sahf
sbb
cwde
jle
cmovl
xor
xor
and
inc
xlat
in
or
jmp
add
and
in
scas
rcr
sbb
cmp
inc
aas
xlat
lock
pop
push
pusha
sub
scas
inc
mov
test
sub
pushf
fdivp
shl
sub
xor
jp
mov
outs
test
sahf
mov
cmp
jmp
repnz
cmp
mov
or
(bad)
loopne
and
loop
mov
stos
ss
add
push
scas
sub
aaa
or
ins
repz
ffree
or
fstp
adc
pushf
int3
in
xchg
push
mov
aas
into
aam
and
iret
scas
call
outs
push
jp
and
fwait
ror
fimul
in
shr
fldcw
and
iret
pop
mov
je
sbb
sahf
nop
and
(bad)
mov
mov
mov
ss
push
je
stos
sbb
push
cs
lahf
in
ins
outs
cmc
sbb
enter
jae
adc
push
test
(bad)
rol
test
cmps
mov
fs
pushf
popf
adc
ficom
addr16
stos
or
mov
popa
push
mov
dec
mov
imul
mov
retf
imul
pusha
xchg
js
mov
adc
or
adc
adc
pushf
hlt
jg
ficomp
or
outs
ins
mov
adc
xor
mov
fcom
sbb
aad
rcr
mov
fadd
mov
lods
and
(bad)
retf
adc
lods
lahf
ja
inc
aaa
leave
ret
inc
inc
mov
in
loopne
shl
or
mov
stos
dec
push
outs
fdiv
cmp
repz
ds
sub
scas
(bad)
pop
daa
shr
lods
mov
jge
xor
jb
in
fld
inc
or
cmp
or
push
loop
(bad)
aaa
add
mov
aad
rcl
push
and
push
and
sub
inc
nop
adc
das
push
out
pop
or
sub
stos
inc
leave
mov
lods
xor
repz
in
push
out
xchg
ret
xchg
lahf
sti
pop
int3
push
ja
enter
pop
inc
imul
and
inc
sub
adc
push
stos
shl
push
xchg
popa
push
addr16
push
enter
mov
int
ror
sar
fs
lods
and
add
xor
loope
outs
into
mov
ret
ret
jg
push
adc
jno
mov
jnp
mov
sbb
scas
imul
dec
div
out
inc
dec
mov
adc
pusha
inc
mov
mov
xor
xchg
fcom
lahf
dec
pop
arpl
cmps
std
mov
and
dec
ins
bound
popf
sub
adc
fs
in
gs
cmp
cld
data16
lea
or
mov
mov
push
inc
add
add
mov
pop
mov
(bad)
sahf
lahf
xor
or
sbb
lock
data16
lea
rcr
xchg
loope
xchg
pusha
sbb
pop
jb
aas
(bad)
in
xchg
dec
cs
jmp
pop
dec
mov
iret
pop
adc
cmp
shl
push
push
ret
mov
mov
in
cld
sti
fistp
dec
out
inc
add
fcom
rcl
sub
js
sub
inc
jne
pushf
mov
sbb
(bad)
mov
dec
adc
mov
mov
mov
movs
mov
inc
inc
not
adc
sbb
adc
mov
dec
push
ins
cli
add
inc
pop
dec
mov
mov
add
pop
pop
or
mov
cmp
and
dec
jp
sar
dec
pop
inc
cld
sub
lds
clc
mov
out
add
ret
clc
push
aas
ror
fmul
fmulp
mov
fmul
push
adc
clc
push
and
mov
xchg
pop
and
or
jae
add
and
sti
mul
mov
cmp
adc
push
(bad)
sub
fild
test
sub
sub
push
stos
clc
aam
rcl
sub
xchg
pop
pop
frstor
and
aam
jmp
pop
scas
add
test
outs
hlt
shl
jne
div
jge
scas
add
inc
(bad)
cs
and
(bad)
shl
xor
icebp
sbb
icebp
cmp
(bad)
sbb
cld
jg
xor
ja
cmc
adc
fcomi
repz
daa
lock
out
push
mov
out
movs
retf
mov
das
cmc
jg
mov
movs
sahf
jmp
inc
into
inc
test
jmp
jne
adc
mov
(bad)
push
xchg
fld
mov
retf
cmp
sub
add
xchg
adc
loop
cmc
sub
das
cli
(bad)
(bad)
int3
inc
and
adc
pop
pop
pop
jbe
and
push
ret
xchg
mov
(bad)
(bad)
pop
cmps
and
sbb
mov
nop
pop
inc
mov
mov
add
(bad)
out
jp
or
dec
mov
xchg
psrad
and
icebp
rcl
xchg
push
pop
in
addr16
pushf
ret
add
popf
div
test
cmp
pop
add
push
push
jns
sbb
mov
jl
mov
and
xor
nop
xor
loopne
(bad)
push
repz
cli
sbb
lahf
ja
div
call
stc
in
mov
aam
fsub
push
(bad)
out
mov
fisub
scas
in
ror
movs
add
pop
in
frstor
jmp
arpl
fcom
or
aad
ret
fild
sbb
js
fistp
ror
push
mov
ret
mov
shl
sub
sub
lods
pusha
mov
lock
sbb
pop
xchg
gs
in
push
fbld
ds
sbb
pop
mov
or
jns
xor
xor
(bad)
(bad)
adc
arpl
in
pop
not
cmp
mov
fist
sti
movs
dec
inc
les
mov
mov
outs
inc
adc
ret
xchg
std
mov
mul
or
jae
pop
into
fist
fstp
ds
cmp
or
xchg
call
dec
(bad)
ds
in
pop
xor
pop
inc
jno
retf
dec
add
ret
mov
sub
xchg
in
lock
pop
in
dec
shl
cmp
cmc
or
test
iret
xchg
inc
dec
mov
inc
mov
pop
sub
fdiv
xor
or
add
shr
jns
movs
pop
iret
dec
leave
fldpi
imul
push
sub
int
lock
popf
jge
pop
dec
mov
bound
mov
pop
jbe
xchg
scas
xor
fs
aam
pop
retf
movs
iretw
hlt
pop
and
(bad)
mov
dec
call
test
or
mov
or
fnsetpm(287
stos
in
push
mov
into
xor
mov
mov
adc
rcr
or
adc
sub
out
dec
cdq
imul
retf
cmps
pusha
rol
sub
sub
and
std
jge
or
pop
dec
pop
pop
fnstcw
stos
sbb
xchg
call
ins
mov
pop
cld
sub
xchg
mov
(bad)
je
mov
fcom
pop
inc
call
dec
jne
(bad)
cs
mov
pusha
xor
cmp
ja
xor
(bad)
hlt
cmp
lock
add
sub
inc
(bad)
xor
movs
push
ds
mov
loopne
aaa
xor
fcmovnb
lods
sub
loopne
sti
xor
cld
les
pop
retf
iret
into
sub
push
xor
mov
scas
xchg
cmc
inc
mov
rcr
dec
xor
xchg
inc
lods
dec
lods
js
jl
push
adc
jae
mov
sub
inc
xchg
jo
scas
or
nop
ror
je
je
cmp
scas
xchg
mov
mov
xchg
and
mov
js
scas
adc
jnp
jo
addr16
fidivr
jnp
popa
jbe
scas
(bad)
cmp
or
mov
and
cs
aad
les
mov
das
jbe
pop
mov
popa
push
add
jnp
and
mov
cld
es
in
sub
cmps
retf
pop
xchg
test
push
das
pop
or
mov
cdq
sbb
adc
push
(bad)
sbb
add
push
lds
lahf
punpckhbw
sahf
pop
xlat
retf
adc
jbe
jge
shl
je
neg
rcr
sbb
pop
in
shr
xor
jmp
xor
hlt
cmp
push
loop
aam
xor
pop
mov
ins
push
pop
shl
push
stos
add
lds
xor
push
loop
jnp
mov
(bad)
(bad)
std
hlt
and
clc
xchg
pop
xor
pop
pop
cmp
(bad)
es
or
adc
cmc
cld
xchg
xor
out
aad
lahf
fcomp
lods
ror
loopne
mov
adc
in
daa
stos
jno
sub
fwait
add
add
xchg
pushf
nop
add
mov
std
repz
les
fld
lea
jg
mov
ins
inc
in
mov
inc
xor
adc
ret
xchg
inc
fistp
(bad)
xchg
dec
mov
jmp
push
cmp
inc
mov
cmps
shl
push
sahf
jge
pop
mov
dec
test
movs
and
lea
sub
out
pusha
cmp
stos
hlt
ficom
daa
int3
pusha
ins
add
sub
lods
div
cmp
or
addr16
and
out
and
mov
xchg
ret
jg
inc
stc
adc
jb
out
mov
xchg
retf
clc
test
xchg
mov
gs
cmp
sbb
xchg
leave
jbe
fs
mov
ret
loop
lods
lds
out
mov
imul
xor
cmp
xor
push
xchg
lahf
cdq
arpl
jmp
mov
mov
mov
mov
call
fcmovbe
jg
pop
jns
cmps
aad
int3
push
movs
push
adc
dec
and
into
xor
cmp
fidivr
lock
sub
push
xchg
mov
imul
or
outs
loopne
pushf
ret
and
dec
(bad)
std
idiv
imul
rol
or
jo
imul
fs
in
cmp
fild
in
icebp
shl
movs
or
data16
pop
push
jb
cwde
and
fst
(bad)
cld
popa
and
xor
mov
push
jmp
fcmovnbe
(bad)
(bad)
test
and
cld
pop
fstp
ret
cmp
inc
mov
xor
inc
enter
xor
outs
es
push
scas
iret
push
sar
sti
test
aas
xchg
jle
sti
cmps
push
push
dec
cmp
and
dec
ss
mov
dec
inc
shr
push
and
sbb
js
or
xchg
cli
adc
pop
or
pop
js
into
sub
cmp
or
dec
dec
loopne
imul
mov
stos
mov
sti
push
xor
mov
add
dec
loope
adc
xchg
add
sub
sar
popf
pushaw
fwait
cmp
or
sbb
les
push
mov
rcr
call
inc
pop
mov
xlat
lahf
movs
sbb
mov
dec
mov
jae
ror
adc
repz
mov
sbb
xchg
test
xor
stos
push
movs
cmp
add
inc
and
push
mov
or
cmc
jp
mov
mov
out
and
div
ret
pop
or
and
mov
stos
(bad)
out
sub
(bad)
call
and
push
jecxz
xor
xor
xor
shl
mov
stos
cmp
pop
cmp
xchg
les
dec
push
dec
popf
fst
xchg
sub
add
jno
nop
test
jbe
jnp
data16
out
aas
fild
inc
pop
retf
xchg
mov
push
outs
(bad)
out
add
cmps
mov
inc
clc
sub
cli
mov
fwait
cld
ror
call
ins
lods
pop
icebp
dec
adc
fwait
in
jo
xchg
stc
push
(bad)
jl
mov
jbe
jl
or
mov
mov
adc
jecxz
js
sbb
out
sahf
dec
xor
jb
lea
bt
fs
out
stc
aad
jb
das
rol
lods
fs
sbb
mov
push
and
sub
cmp
mov
movs
sbb
xchg
test
popa
sbb
data16
jmp
jecxz
push
stos
popf
rol
mov
jmp
add
mov
mov
jg
sti
int
add
retf
outs
mov
pop
adc
push
push
test
in
mov
mov
and
sbb
pop
cmps
iret
lock
mov
jle
mov
lods
or
add
xlat
inc
pop
fnstcw
and
int3
pusha
jnp
stos
popf
mov
outs
in
mov
aad
arpl
arpl
repz
sbb
push
add
push
cmp
inc
push
push
mov
jns
push
aad
xchg
inc
sbb
aas
jb
inc
jmp
mov
gs
outs
sbb
fisubr
ret
ins
mov
xor
sub
call
nop
pop
std
pushf
hlt
mov
jmp
aad
xor
adc
imul
jle
aaa
add
sub
repnz
pop
and
enter
xchg
and
push
sbb
sbb
cmc
movs
pop
pop
sar
pop
xchg
sub
mov
jns
das
movs
cmp
add
clc
sub
and
and
mov
mov
jno
or
jbe
push
jmp
test
add
stc
inc
inc
sar
fild
jg
popa
aad
sbb
rcl
xchg
stc
mov
mov
pop
addr16
inc
xlat
ds
cmp
lea
mov
jbe
mov
pop
aaa
mov
ffree
loopne
pop
and
mov
dec
lods
mov
stos
mov
(bad)
cli
mov
(bad)
shl
dec
xor
cwde
lock
mov
pop
mov
pandn
mov
out
jle
ins
js
fnstenv
movs
sbb
adc
push
stc
sahf
fnstcw
push
bnd
dec
jne
in
retf
out
int
mov
cli
inc
jge
mov
(bad)
cs
stc
into
popf
gs
push
jbe
(bad)
call
push
jp
jmp
arpl
xchg
or
mov
sub
jp
mov
sti
movs
mov
addr16
aad
pop
sahf
sahf
das
inc
test
dec
xlat
and
push
outs
sub
jb
adc
xor
xchg
add
shl
mov
fbstp
push
jno
add
(bad)
xlat
mov
iret
into
mov
fistp
or
jl
aam
stos
test
add
std
sbb
inc
aad
inc
fnstcw
ficom
sub
cmp
pop
or
je
in
mov
cld
mov
test
movs
enter
(bad)
je
movs
pushf
test
arpl
xchg
xchg
push
and
ins
sbb
or
pop
hlt
int
pop
or
inc
rcr
pop
lods
jo
dec
push
or
jl
ret
push
adc
mov
mov
push
dec
sub
push
and
out
pop
aam
push
push
mov
cld
mov
mov
lods
neg
fnsave
jnp
pop
aam
rcl
xchg
ins
ret
(bad)
fisttp
std
stc
lahf
pop
lock
scas
mov
mov
call
inc
lods
in
inc
pop
adc
mov
addr16
add
adc
sar
and
ret
mov
and
sahf
les
es
fld
cmp
in
push
iret
mov
sub
repnz
icebp
iret
ins
jg
mov
dec
es
mov
and
cmps
or
lods
pop
sar
mov
cmp
shr
adc
lea
pop
push
adc
inc
or
and
pop
cwde
xor
and
or
cdq
int3
jne
aad
(bad)
xor
jnp
mov
dec
in
iret
rol
mov
inc
fist
jge
icebp
mov
dec
in
js
clc
mov
and
mov
cmp
into
cli
push
and
add
loop
mov
sub
dec
xchg
pushw
cmp
mov
mov
ins
popf
push
mov
(bad)
(bad)
jle
mov
jg
push
mov
fs
xor
mov
xor
int
mov
stos
jmp
js
adc
add
and
inc
mov
push
jmp
jmp
retf
mul
stos
jmp
cmp
pop
xchg
push
sub
jne
jnp
ds
sub
scas
mov
pushf
in
fistp
leave
ds
ss
loop
xchg
inc
mov
jo
inc
push
ror
xor
rol
movs
cvttps2pi
or
test
xor
outs
(bad)
je
and
xchg
cmps
mov
inc
mov
shr
clc
in
or
daa
movs
aaa
stos
out
imul
push
pop
jnp
push
sbb
les
(bad)
cld
clc
jo
sbb
imul
fnsave
popf
aam
and
ins
call
push
xor
call
or
dec
jp
dec
mov
or
mov
or
nop
dec
sar
jmp
xchg
sub
out
mov
sbb
ds
(bad)
fsub
xchg
fst
aaa
add
inc
ror
jmp
movs
xchg
xchg
test
mov
inc
mov
vfrczps
adc
ret
neg
xchg
mov
das
mov
aas
arpl
and
clc
mov
or
ins
and
and
shr
(bad)
idiv
aas
xor
dec
add
imul
(bad)
movs
pop
repz
sub
push
jae
inc
out
mov
js
into
mov
int3
cmp
mov
loope
sbb
mov
or
jle
and
icebp
jecxz
movs
dec
cmc
js
add
mov
jbe
or
es
jno
cmp
dec
pop
loope
cwde
mov
sar
xchg
add
in
push
xlat
pop
dec
std
icebp
aad
sti
fsub
fmul
mov
movs
scas
jle
or
cmc
sbb
shl
jne
dec
shr
xchg
or
test
sahf
or
xlat
pop
cmp
call
inc
xchg
jmp
and
mul
scas
inc
ret
test
cmp
or
pushf
pop
iret
push
jmp
add
lods
cli
fmul
mov
jecxz
add
dec
jno
xor
pop
jne
mov
xchg
sbb
in
std
sub
lods
arpl
jecxz
sbb
fnstcw
mov
out
pop
daa
sbb
mov
push
cmc
fist
xchg
sub
imul
cmps
dec
out
xor
pusha
pop
pop
mov
ja
dec
aam
jge
push
jo
dec
jg
adc
stos
push
xchg
test
xchg
or
shl
data16
and
ja
fbstp
(bad)
jmp
xlat
imul
int
sub
cmp
jecxz
das
int
jge
adc
dec
out
pop
and
jb
mov
xor
cmp
dec
gs
inc
ror
xor
jge
jmp
mov
das
stos
test
sahf
mov
or
shr
cmp
and
cs
aas
movs
mov
jo
sbb
xor
div
mov
rcr
pop
imul
sub
cli
sbb
popa
daa
jmp
stos
test
jns
push
inc
fdivr
inc
push
push
push
jae
cmps
lock
add
movs
pmaddwd
fcomp
jnp
pop
cmc
les
mov
sti
movq
not
or
fs
jmp
outs
fmul
and
sahf
sbb
xor
mov
int3
sbb
or
cld
stc
iret
push
dec
ins
popa
(bad)
mov
lea
iret
or
jge
mov
pop
cmp
fadd
pop
and
xor
addr16
std
xchg
fstp
addr16
int
sbb
jg
stos
mov
add
add
addr16
test
fmul
iret
jne
pop
rol
add
push
cs
int3
pop
add
sbb
and
mov
sbb
push
iret
cmp
ret
test
mul
hlt
xor
popf
cmp
(bad)
adc
loope
sar
rcl
inc
pop
jnp
fs
pop
test
xchg
mov
out
setge
add
jge
push
mov
sbb
sub
pop
mov
call
imul
imul
lds
inc
data16
and
adc
out
movs
fldenv
pop
cmps
mov
daa
cmp
dec
in
xchg
cmc
add
fxch
adc
sbb
adc
and
inc
ret
out
in
js
fisttp
jle
pop
test
cmp
dec
repz
sbb
add
sub
call
cmp
pop
outs
fdiv
jg
out
mov
ret
add
mov
cmp
(bad)
cmps
dec
add
mov
shl
nop
or
(bad)
cmp
mov
pop
mov
xor
jno
test
jmp
(bad)
or
pop
add
icebp
lds
repz
lock
enter
mov
retf
add
inc
xchg
pushf
mov
stos
rcr
cmp
mov
jae
mov
jb
and
icebp
aam
bound
int
cmps
jo
mov
dec
and
repnz
push
xchg
or
xchg
inc
lea
push
push
adc
lea
push
pop
int3
cmps
xchg
lds
fisttp
retf
pop
in
jno
sbb
sbb
(bad)
jmp
xor
and
jo
cmps
test
push
inc
sbb
jecxz
inc
add
or
jg
test
sbb
cmps
mov
shl
lods
xchg
and
pop
pop
aam
adc
or
popf
shl
in
aaa
jmp
jbe
fistp
cdq
and
jo
test
fs
adc
icebp
stos
ins
sub
loop
cmp
int
pushf
mov
leave
ror
lock
and
(bad)
sbb
sub
movs
gs
movs
xchg
imul
aad
adc
fnstcw
out
inc
jnp
lahf
and
shr
mov
clc
shl
dec
fisttp
xor
jecxz
or
mov
(bad)
std
xchg
mov
cmps
mov
stos
jns
add
fmul
cmp
fs
call
(bad)
rcl
and
out
aad
into
sub
sub
sar
xchg
adc
push
jnp
movs
call
mov
(bad)
and
jecxz
push
retf
lock
inc
ja
mov
lock
jge
push
dec
test
scas
dec
sbb
clc
aam
leave
(bad)
mov
xchg
shr
repnz
pop
jo
int
jne
movups
shl
cmp
mov
sbb
ss
push
icebp
sahf
or
mov
outs
dec
sub
fnstcw
fstp
fiadd
mov
in
mov
mov
out
retf
mov
dec
dec
lods
mov
xor
jl
(bad)
mov
mov
out
test
adc
cmp
push
rcr
mov
pop
test
pop
mov
mov
inc
sub
lahf
adc
dec
imul
fmul
les
in
repz
les
es
cmp
mov
mov
cld
add
dec
mov
shl
enter
jnp
adc
dec
push
xchg
movs
and
(bad)
shl
mov
popa
jb
out
dec
leave
aam
jle
ret
aas
test
pop
rcr
cld
jns
push
cmp
outs
jl
mov
(bad)
dec
adc
scas
sbb
(bad)
test
xor
jecxz
sti
stos
data16
cwde
jbe
fwait
sbb
xchg
rcl
jns
aas
movs
adc
xchg
jb
shr
pop
lahf
in
lock
xor
sbb
and
inc
mov
inc
daa
jp
sub
fisubr
call
sub
popf
inc
mov
ret
jg
(bad)
in
xchg
or
inc
sbb
inc
rcr
ja
rep
jl
js
mov
mov
adc
(bad)
jnp
shr
jg
mov
lods
sar
cs
rcl
pop
test
stc
cmps
fnstcw
cmp
xor
fild
xor
jbe
push
inc
into
aam
(bad)
int
jmp
mov
xchg
pop
scas
xchg
adc
fimul
sub
fild
mov
xlat
(bad)
xchg
jle
sub
jmp
pop
xchg
push
ret
bound
cmp
xor
or
mov
imul
dec
sti
outs
xor
inc
push
sbb
jbe
cmc
pop
and
push
fs
push
push
into
mov
jmp
xor
data16
daa
xchg
jp
pop
sbb
shl
aad
dec
rcr
cld
sub
cmp
jle
loope
pusha
sar
jae
push
js
sub
or
xor
xor
fwait
or
sub
adc
cmp
test
rcr
or
xchg
mov
mov
into
mov
cli
into
inc
addr16
daa
pop
js
popa
call
pop
xor
mov
movs
xor
pushf
mov
mov
cmc
in
and
lea
mov
dec
in
inc
mov
xor
sbb
call
and
adc
pop
test
(bad)
(bad)
(bad)
std
pop
xchg
sbb
(bad)
sbb
jp
xchg
outs
fs
mov
and
es
mov
shl
fsub
xor
sbb
ja
sub
cwde
inc
cld
ficomp
mov
inc
dec
mov
push
mov
ja
arpl
mov
push
xchg
or
imul
fwait
and
adc
and
add
mov
xor
loop
xor
or
sub
inc
outs
loop
or
pusha
or
sbb
pop
mov
mov
imul
or
mov
ins
mov
in
lahf
jp
sub
leave
mov
push
push
and
out
inc
pop
push
les
fdivr
or
call
sub
or
ror
dec
pushf
outs
add
cmp
xchg
push
inc
das
and
imul
nop
enter
daa
shl
(bad)
jecxz
in
pop
sti
fs
inc
popa
xchg
cld
cmps
pop
jmp
xor
and
test
push
xchg
jecxz
jbe
out
mov
les
xchg
mov
aad
les
jmp
leave
add
push
test
pusha
or
lods
les
mov
inc
xor
scas
dec
sbb
and
and
mov
mov
sahf
cmp
call
jb
dec
dec
mov
sub
aam
jnp
mov
sub
xor
add
add
test
(bad)
xor
mov
icebp
sbb
xor
push
mov
clc
inc
xor
jmp
add
rcl
mov
push
or
into
cmp
pop
lock
sar
sub
dec
xchg
mov
push
pop
ja
fsubr
cs
jecxz
loopne
pop
pop
pop
dec
loope
adc
sbb
inc
rol
dec
cmp
xchg
stc
cli
jb
stc
ja
mov
add
dec
out
pop
push
pusha
es
int3
sub
cmp
outs
lahf
mov
mov
add
adc
jbe
popa
shr
imul
in
xor
and
jge
out
push
xor
mov
in
lds
leave
push
inc
lock
push
inc
daa
dec
in
xchg
mov
adc
adc
das
ret
hlt
lods
adc
cmp
sbb
gs
imul
xor
je
push
mov
add
xor
shl
add
ror
mov
cdq
or
and
sub
mov
lods
pmaddwd
icebp
(bad)
sbb
or
leave
push
xchg
inc
inc
fidivr
fwait
pop
mov
popa
dec
(bad)
int3
add
data16
jbe
lods
inc
enter
push
popf
dec
ret
pop
pop
fdecstp
fld
add
fwait
das
adc
sub
clc
shl
test
fcmovb
push
xchg
and
push
sar
js
inc
dec
add
fucomp
jne
sahf
xchg
out
(bad)
out
add
sub
sbb
adc
movs
int
add
or
inc
cwde
mov
dec
ja
leave
call
jb
outs
xchg
pop
dec
cmps
es
fdiv
mov
es
mov
mov
dec
xchg
and
gs
sub
or
jp
mov
ins
cs
rcr
sbb
xor
xchg
cmp
adc
pusha
loope
stos
adc
inc
ins
call
lods
mov
aaa
retf
sbb
pop
and
movs
(bad)
mov
or
cli
jne
mov
xchg
gs
xor
retf
sbb
int3
sar
push
imul
scas
sub
pop
xchg
into
js
mov
and
inc
jmp
mov
rcl
pop
mov
cmp
xor
loop
mov
stc
mov
jmp
imul
cmp
mov
add
scas
repz
or
or
cmp
lods
dec
add
daa
mov
or
cmps
sub
aad
xchg
pop
mov
mov
bound
sbb
jmp
pushf
pop
inc
push
xchg
push
test
aas
ds
mov
test
fidivr
mov
add
xor
xchg
repnz
cmp
inc
pop
lock
pop
inc
pop
jmp
inc
arpl
or
jecxz
jl
xor
xchg
fs
rcr
lock
addr16
ja
sbb
shl
das
lods
(bad)
and
outs
imul
or
xor
dec
dec
inc
call
mov
adc
adc
call
aam
imul
repz
xor
sub
fwait
leave
mov
nop
cmp
fiadd
arpl
clc
cmps
or
bound
ja
ins
test
push
fisub
and
aas
and
mov
mov
out
cld
movs
dec
mov
jge
mov
icebp
and
ins
or
retf
xchg
fwait
ss
bound
push
dec
lods
cmp
call
sbb
xor
shl
ins
inc
pop
repz
sbb
mov
lods
stos
mov
fild
dec
ret
aaa
pop
or
mov
sub
jb
je
mov
jmp
or
iret
or
pusha
pop
div
aam
aaa
stos
fsubrp
sub
mov
into
push
and
dec
out
out
cmp
addr16
cmp
jl
test
dec
add
mov
ins
and
add
pop
push
ret
popf
stc
ins
cmp
mov
bound
mov
sbb
mov
pop
test
dec
xlat
repz
pop
cdq
cmp
mul
rol
aam
dec
shr
inc
xlat
sub
daa
rcl
in
outs
push
jmp
dec
stos
cs
xchg
sbb
bound
shl
and
out
mov
aad
push
jmp
jo
or
and
frstor
mov
std
movs
mov
lea
mov
inc
mov
or
mov
pop
int3
int
enter
ret
cmc
inc
cmc
int3
fdivrp
xor
out
fwait
xor
loope
js
and
call
aaa
mov
mov
sbb
add
push
mov
cmp
icebp
mov
jl
in
fdiv
mov
adc
xchg
cmps
dec
pop
xor
push
cs
stc
popa
mov
(bad)
or
aam
out
(bad)
leave
push
xlat
push
into
mov
jns
pop
jl
inc
adc
leave
mov
test
inc
mov
sbb
fdivr
aaa
in
cmp
test
xor
std
fidivr
push
lock
mov
pop
enter
(bad)
add
add
add
and
imul
or
jmp
sub
jb
enter
xlat
jno
cs
and
jmp
mov
xlat
das
push
movs
jnp
jp
xchg
inc
jmp
cmp
push
inc
ja
das
sahf
xchg
lock
stos
fst
ret
bound
stc
pop
hlt
inc
outs
jge
cmp
and
cli
mov
repnz
mov
gs
mov
aaa
jecxz
mov
mov
push
cmp
loop
ss
sahf
scas
and
dec
aad
and
scas
xchg
fwait
out
sar
cwde
int3
pop
sti
aad
xor
pop
sar
mul
lea
sub
add
out
movs
xor
sar
push
hlt
xchg
lea
push
cmp
push
das
jl
adc
fild
pusha
cmps
push
adc
xor
pop
add
pop
retf
mov
or
cmp
mov
inc
in
shl
adc
sbb
cmp
jl
or
cmp
add
fdiv
fstp
les
loope
je
pop
mov
inc
je
or
mov
pop
loop
cwde
sub
shr
adc
jl
or
mov
and
jge
or
punpckhdq
dec
sti
xchg
ins
ror
mov
inc
mov
jmp
in
and
add
mov
or
inc
aad
fcmovnbe
not
inc
outs
xor
inc
or
xchg
mov
fst
out
mov
and
lods
mov
test
mov
fwait
outs
out
call
xor
xchg
add
inc
std
mov
jno
daa
mov
inc
popa
outs
push
aas
jge
int
mov
cmps
cmp
das
jmp
pop
push
shl
mov
je
mov
fwait
ins
fsub
add
inc
dec
pop
aaa
push
pop
repz
fst
iret
rcl
xchg
xchg
fcmovnbe
scas
pop
mov
pop
xchg
(bad)
test
push
mul
icebp
jmp
xchg
xchg
push
pop
stos
and
xchg
ret
jg
sahf
in
out
mov
mov
jmp
add
daa
push
dec
cmc
dec
dec
dec
cmps
(bad)
into
loop
bound
dec
pop
adc
sbb
lea
jae
push
(bad)
aam
pop
mov
push
xor
in
or
xchg
mov
mov
(bad)
jo
cmps
jno
repnz
(bad)
mov
xchg
xchg
pop
add
jp
xchg
adc
es
jge
enter
add
jl
hlt
daa
jb
retf
lahf
dec
test
scas
ins
jg
imul
cmp
scas
sahf
cwde
xchg
stos
mov
xchg
inc
add
out
push
in
mov
int3
adc
mov
lock
mov
jb
or
jo
xchg
les
push
(bad)
xor
sbb
cld
out
mov
rcl
ds
mov
int
sub
xor
daa
dec
push
(bad)
dec
xchg
mov
pop
mov
jl
dec
nop
sbb
addr16
xchg
jl
mov
lahf
or
sahf
jne
arpl
jne
jge
mov
leave
in
icebp
xchg
add
cwde
popa
daa
xchg
sahf
int
popf
fcmove
es
and
cmc
adc
xor
xor
jle
jae
xor
adc
shl
xlat
je
and
mov
std
cli
push
mov
inc
enter
and
mov
push
jl
cmp
les
xchg
jb
mov
push
xchg
jle
adc
pop
and
clc
(bad)
rol
pop
cld
cmp
adc
pusha
pop
rcl
gs
mov
cmp
lahf
(bad)
into
ret
and
popa
(bad)
and
jle
(bad)
sbb
sub
pop
mov
leave
push
out
xchg
ins
mov
jecxz
push
and
adc
mov
scas
outs
jo
int3
sbb
mov
outs
dec
jl
das
dec
xor
int3
rcl
xor
punpcklbw
inc
mov
enter
ins
mov
inc
test
ins
add
jge
adc
jp
jae
add
pop
or
mov
test
add
out
loopne
stc
cs
jl
idiv
jne
bound
mov
dec
(bad)
sahf
mov
sahf
mov
sub
pop
sub
adc
(bad)
loopne
sbb
aas
std
inc
mov
(bad)
jg
push
inc
movs
call
add
mov
mov
out
fisttp
aam
sub
sub
sbb
or
jb
test
fxch
cs
in
sub
mov
xor
xchg
jb
mov
push
sbb
push
mov
jmp
mov
fld
xchg
lock
xor
(bad)
cmp
loopne
xlat
test
mov
sbb
mov
xchg
movs
test
nop
jmp
jp
mov
inc
jnp
sub
mov
xchg
lahf
ins
mov
(bad)
mov
jbe
fldcw
mov
out
mov
jge
repnz
jo
mov
mov
loop
cmc
and
popa
mov
jp
fistp
ror
mov
add
jne
fldln2
pop
mov
dec
es
dec
xchg
xor
cmp
pop
ret
hlt
mov
loope
adc
mov
out
int
add
iret
or
cli
clc
ret
xchg
out
adc
test
into
test
mov
push
(bad)
mov
sbb
mov
das
mov
adc
jp
xchg
retf
mov
adc
xor
jo
frstor
push
mov
sar
in
pop
(bad)
xchg
ret
sub
mov
jo
mov
inc
int
addr16
cmp
ins
xor
xor
div
push
fidivr
fidiv
(bad)
or
mov
out
xor
fist
or
xor
imul
cmps
push
mov
mov
xor
and
xchg
call
pop
mov
popf
push
fiadd
push
mov
mov
mov
push
sub
push
cmp
inc
es
xor
loope
pusha
push
or
pop
(bad)
pop
mov
pop
pushf
shl
push
aas
mov
mov
mul
push
dec
cld
cmp
jo
mov
out
(bad)
jne
sbb
dec
inc
sbb
int3
push
mov
leave
dec
fdiv
pop
hlt
or
sbb
popa
mov
pusha
and
xchg
push
ror
subps
fwait
aas
xor
scas
jg
and
pop
pop
xchg
arpl
(bad)
iret
or
imul
test
inc
pop
jl
fs
jle
jne
mov
ins
sbb
mov
movs
jnp
xchg
les
or
add
sbb
stc
push
mov
inc
adc
jne
mov
pop
daa
mov
stos
lea
out
cmp
pop
aas
ret
or
sar
out
lahf
cmp
pusha
ds
lods
xchg
push
pop
aad
adc
jbe
dec
es
dec
inc
in
xchg
cmp
inc
ss
cdq
stos
daa
in
imul
sub
aaa
cmp
mov
sub
mov
sti
test
or
xchg
dec
stos
aam
mov
or
inc
std
add
add
inc
xchg
mov
(bad)
sub
dec
sub
jb
adc
jge
lahf
push
mov
fnstenv
add
sahf
shl
les
call
jno
mov
mov
cmps
ret
popf
mov
xor
enter
sub
mov
repnz
and
sub
movups
pop
imul
or
mov
mov
cld
mov
mov
dec
in
jno
ins
xchg
mov
xor
in
test
loopne
cmp
bnd
sub
jl
fimul
stc
loop
jb
mov
mov
sub
add
lahf
rol
push
dec
(bad)
daa
sbb
cmps
movs
or
outs
aaa
add
or
push
sub
jmp
sbb
pop
pop
dec
je
shr
pop
or
mov
cwde
dec
pop
push
mov
lods
ret
xor
dec
jns
outs
adc
cmp
cs
mov
in
xchg
ins
xchg
mov
lods
inc
inc
or
push
pop
pop
push
pop
loopne
fmul
ins
and
int
dec
repz
aad
leave
popa
xor
adc
outs
mov
add
mov
or
into
dec
scas
push
hlt
add
fidivr
and
ret
aas
push
sub
std
fmul
push
sbb
jg
cmp
test
dec
lds
push
(bad)
push
gs
cmp
mov
push
jle
inc
shr
push
inc
xor
xchg
jne
aaa
(bad)
jmp
mov
jne
fnsave
(bad)
div
cwde
jge
(bad)
shr
pop
sub
dec
das
out
out
jle
cmp
sbb
dec
mov
imul
mov
or
push
adc
inc
jge
daa
pop
daa
int3
adc
add
mov
shl
lock
mov
add
mov
hlt
data16
mov
ret
xor
mov
loop
lea
jmp
mul
pop
shl
adc
les
mov
adc
jne
add
mov
mov
xchg
test
mov
out
jnp
adc
iret
test
ror
mov
mov
rcl
sbb
rcr
sub
sbb
loopne
loop
ficom
repnz
xchg
pop
dec
stos
or
rcr
sbb
dec
jmp
out
das
push
inc
sub
adc
sbb
out
xor
xor
(bad)
popf
mov
and
sub
sbb
mov
xchg
stc
stos
mov
(bad)
or
fcmovb
xor
mov
mov
xchg
mov
jo
retf
outs
shl
add
mov
loop
jne
xor
add
sub
pop
test
dec
stos
faddp
dec
(bad)
jb
xchg
jae
mov
ss
lahf
leave
and
mov
pop
pop
daa
pop
pushf
movs
stos
div
fs
cs
cmp
(bad)
int
or
jo
push
xchg
aaa
mov
clc
push
mov
sbb
out
les
pop
mov
(bad)
sub
add
stos
rcr
aam
adc
sbb
loop
inc
pop
int
in
mov
sar
arpl
gs
nop
outs
out
jns
jbe
push
ret
(bad)
sahf
test
loop
pop
add
sub
mov
and
pop
dec
and
je
and
jp
inc
lods
pop
inc
ror
push
or
scas
xchg
stc
inc
adc
retf
sahf
lahf
rcl
pop
mov
push
or
sbb
inc
mov
mov
lds
cmp
xchg
add
(bad)
inc
inc
in
xchg
jl
xor
push
sub
xor
lock
mov
out
and
push
sub
into
enter
jecxz
shr
out
jnp
bound
inc
and
mov
(bad)
std
xor
bound
js
sub
dec
iret
add
jle
add
sub
add
popa
stc
jne
fs
adc
or
sub
enter
inc
jp
push
rol
pusha
test
popf
inc
jo
jl
mov
mov
scas
cdq
pop
mov
push
fwait
bound
shr
pop
loopne
or
mov
loopne
cmp
fsub
repnz
inc
loopne
fadd
and
dec
retf
xchg
sbb
xchg
into
cs
fcomp
test
cdq
inc
adc
hlt
pop
int
sbb
and
sub
mov
push
stos
inc
imul
movs
out
sub
xor
push
mov
and
push
data16
mov
fwait
gs
btr
add
(bad)
cmp
mov
dec
push
pop
adc
jmp
mov
sub
cmp
add
jb
inc
push
cmc
add
jp
mov
add
hlt
(bad)
js
retf
(bad)
xlat
add
xchg
push
mov
in
jecxz
jnp
ins
dec
adc
sub
(bad)
call
(bad)
xor
jl
dec
add
sahf
xor
test
retw
rol
lds
retf
aas
sar
dec
mov
mov
push
shl
scas
inc
jno
jnp
cdq
inc
or
stos
sbb
or
xchg
mov
inc
fld
push
(bad)
out
cmp
jmp
adc
scas
cdq
movs
loop
add
aas
(bad)
mov
daa
add
outs
scas
call
scas
and
jge
test
or
jmp
add
int
cmp
mov
xor
xor
je
int3
jns
jae
jo
lods
jb
loope
pop
push
add
inc
ret
and
push
mov
xchg
cmp
sub
jmp
test
daa
xor
and
xchg
inc
push
call
push
sub
les
pop
mov
sbb
std
rcr
pop
call
(bad)
pop
dec
adc
jns
jnp
ins
bound
cdq
ret
out
pop
jmp
int3
sbb
pop
aaa
and
js
dec
loope
mov
pop
lock
jl
xor
mov
retf
lahf
push
or
loopne
pop
add
outs
les
ficomp
iret
into
stos
xchg
inc
xlat
out
leave
mov
fldlg2
aad
mov
jge
push
cmc
and
loop
pop
aad
or
daa
pusha
and
pop
pop
push
pushf
pop
mov
push
cmps
rol
aam
shl
stc
xor
sub
jecxz
push
and
mov
cmp
pop
stc
cmc
add
mov
loope
xchg
cmc
repz
lods
adc
in
mov
xchg
pop
dec
rcr
(bad)
imul
pop
push
push
inc
sbb
(bad)
cmps
jp
imul
sub
jnp
xor
mov
sbb
mov
cld
or
aam
mov
mov
iret
sub
fisubr
fiadd
pop
inc
adc
inc
push
shr
lods
and
es
enter
and
fiadd
mul
cwde
jnp
cmp
adc
test
or
mov
and
jmp
or
push
push
push
xor
sbb
frstor
push
sub
dec
inc
lahf
call
scas
stos
idiv
sbb
repnz
bound
(bad)
sub
cli
cmp
dec
or
push
mov
retf
pop
dec
in
cdq
pop
adc
push
xchg
mov
in
lods
pop
jle
xchg
mov
mov
or
inc
push
call
adc
sub
inc
or
jge
icebp
cmp
out
nop
jo
xchg
inc
adc
sub
into
pop
dec
push
or
sub
cmp
sub
push
loopne
mov
xchg
(bad)
enter
inc
int
ffreep
aam
leave
xchg
xor
pop
add
push
sbb
out
add
arpl
jmp
mov
clc
pop
sub
hlt
aad
in
pop
test
mov
sbb
pop
sbb
int
xor
pop
and
aad
test
into
sub
hlt
xchg
jno
adc
sbb
adc
xchg
ficomp
sbb
in
cmp
push
out
cli
xchg
test
sbb
popa
pop
dec
xchg
loop
ins
stos
into
adc
fist
pop
pop
(bad)
sbb
mov
loope
inc
push
scas
sub
mov
bound
inc
jne
scas
outs
in
jg
retf
arpl
test
mov
mov
(bad)
ds
dec
cmp
std
sbb
jmp
cmc
sub
add
addr16
mov
cmp
fiadd
addr16
lods
gs
or
loopne
out
mov
pop
xlat
js
and
test
dec
sub
cwde
xchg
loope
outs
xchg
add
je
leave
jb
lods
fdivp
inc
lods
pop
pop
xor
jo
jge
push
sbb
pop
jecxz
mov
test
iret
(bad)
jns
cmp
ret
cdq
dec
xor
pushf
dec
das
cmp
call
or
push
mov
sbb
jb
fisubr
adc
jg
or
dec
rcl
test
push
sub
fiadd
fxch
pop
pop
jge
div
pop
xor
pop
cli
cmp
push
mov
pop
sub
jae
mov
aam
xor
mov
clc
mov
sub
cmps
out
xchg
or
in
mov
int3
cmp
test
pop
in
xor
or
rcl
adc
in
or
xor
jae
mov
out
inc
or
movs
jg
cli
sub
mov
push
and
aaa
std
rol
jno
lock
(bad)
fist
xchg
and
mov
fcom
daa
mov
dec
sbb
jp
not
fstp
(bad)
lods
out
cmp
xchg
and
fwait
mov
daa
add
or
inc
(bad)
jl
lea
loope
ficom
out
cmc
loopne
lods
adc
sbb
ret
imul
xor
mov
je
in
adc
stos
not
jbe
out
pop
push
cmp
cmp
pop
iret
and
lahf
pop
mov
sub
cmp
lahf
dec
retf
and
loope
xor
(bad)
jb
mov
ins
dec
xor
sub
gs
push
(bad)
xchg
xor
push
push
leave
and
loopne
pop
dec
push
dec
dec
adc
loopne
fst
xchg
cmp
jae
sahf
adc
movs
jnp
fst
loopne
mov
fdivr
out
add
push
mov
or
pop
mov
out
push
imul
dec
add
fist
imul
test
and
inc
sub
push
xlat
xor
ins
test
dec
and
leave
cld
sahf
fdivr
add
in
add
pop
and
add
xor
adc
inc
aam
popf
push
sub
push
retf
xchg
lock
dec
retf
push
sbb
shr
xchg
push
sahf
inc
mov
fstp
out
mov
pop
adc
icebp
jbe
(bad)
loop
test
mov
(bad)
das
pop
or
mov
jg
(bad)
mov
stos
data16
out
loop
dec
and
enter
stc
cmc
fsubr
lahf
inc
and
aad
ins
sahf
jne
xchg
leave
jecxz
clc
xchg
sub
or
out
jae
jge
xchg
and
sbb
adc
xor
sbb
loop
push
(bad)
lods
call
dec
out
mov
pop
xor
push
pop
cmps
or
jno
ds
cmp
repnz
adc
gs
push
out
mov
cmps
je
and
mov
pop
mov
ror
cmp
sbb
xchg
jmp
mov
xor
jl
push
xor
icebp
lea
and
imul
in
jge
cmp
sbb
jb
ds
jo
bsr
sub
mov
imul
test
js
jmp
hlt
std
in
cmps
ins
in
push
jo
lahf
inc
mov
(bad)
and
scas
mov
rol
or
cdq
mov
lods
mov
jmp
dec
rcl
js
sub
cmp
xor
in
and
cli
push
ret
adc
lods
pop
test
fidivr
repz
loopne
(bad)
jnp
icebp
lods
out
xor
out
inc
in
shr
adc
test
in
(bad)
jp
cmp
dec
mov
dec
mov
loopne
mov
fist
int
ins
and
push
pop
lock
ret
xchg
lds
push
jne
mov
adc
add
popa
into
cs
xor
(bad)
fistp
lods
mov
repnz
and
adc
jmp
lea
push
cmps
gs
mov
lods
inc
std
push
mov
cmc
and
xor
or
and
sub
out
clc
mov
push
scas
hlt
daa
push
jno
mov
push
and
fprem
(bad)
mov
xchg
(bad)
xor
dec
mov
enter
pop
dec
inc
jp
jb
add
and
lods
and
sbb
retf
mov
xchg
inc
inc
or
pop
cmp
dec
mov
sbb
es
mov
fucomp
mov
out
push
dec
jnp
pop
xor
scas
sub
sbb
jmp
sbb
xchg
loope
jnp
push
adc
inc
popa
ret
mov
push
int
jmp
cdq
ja
inc
xchg
mov
dec
sub
test
or
mov
sbb
and
cmps
adc
mov
and
cmc
mov
push
rol
std
mov
sub
nop
(bad)
scas
xchg
out
mov
push
ss
mov
dec
dec
xchg
shl
inc
mov
pop
in
push
xchg
adc
and
sahf
cmps
mov
fisub
scas
icebp
pop
dec
fadd
adc
xchg
mov
cdq
jp
sub
ficom
f2xm1
fdivr
in
ret
mov
cmc
pusha
faddp
scas
push
push
ror
repnz
inc
into
aad
hlt
js
cmp
pmulhw
add
ss
cmp
cmc
data16
add
in
push
mov
xor
sub
push
adc
and
mov
arpl
imul
push
rol
in
jp
icebp
and
rcl
fstp
sbb
shrd
cmp
push
xchg
leave
nop
in
sahf
jmp
(bad)
push
in
push
lods
mov
neg
test
je
xlat
inc
rcl
push
and
mov
add
shl
test
movs
pop
xchg
mov
jmp
mov
pop
aas
push
sti
mov
jae
sbb
xchg
inc
mov
clc
pop
sbb
adc
jg
loop
mov
inc
cmp
inc
std
(bad)
in
cli
push
and
aam
or
jl
sahf
push
xor
pop
xchg
pusha
push
sub
sub
dec
dec
sub
mov
int3
cmp
retf
sahf
(bad)
xchg
in
pop
aad
xchg
pop
mov
sahf
inc
int3
sbb
dec
add
push
cmp
push
mov
in
and
fdivr
lea
sub
aam
push
cwde
adc
inc
inc
frstor
mov
fld
mov
scas
sbb
movs
pop
inc
shr
test
out
cld
sbb
jmp
or
lods
retf
push
sub
outs
setge
mov
bndldx
sub
jnp
or
call
test
ret
js
cmps
sbb
sbb
dec
sub
jnp
cdq
sub
ds
sub
mov
or
adc
push
push
call
ror
push
sbb
jne
xchg
mov
pop
retf
adc
cli
mov
adc
mov
rcr
dec
or
sub
icebp
sahf
aaa
in
mov
mov
add
cmp
sub
push
mov
sbb
pusha
test
adc
jmp
push
dec
and
or
jbe
int
into
daa
clc
(bad)
popa
push
and
cs
out
mov
dec
retf
xchg
das
xchg
mov
jbe
mov
frstor
into
cmp
xchg
arpl
cmp
stc
pop
xchg
jb
mov
inc
sub
ins
xchg
mov
mov
pop
sbb
push
fisttp
jecxz
cs
es
xor
xor
cmps
mov
loopne
inc
popf
pop
dec
in
fdivp
cmp
outs
stc
imul
daa
lahf
cmp
add
scas
sub
adc
or
xchg
out
fild
sti
adc
fld
inc
mov
les
jge
push
jo
cmp
enter
repz
or
mov
mov
aaa
(bad)
add
dec
gs
sbb
add
adc
mov
js
ret
cdq
ds
std
movs
popa
add
sahf
mov
lds
jb
fs
and
les
imul
ror
inc
mov
ja
mov
mov
in
add
mov
popa
shl
call
ins
adc
ffreep
out
in
sar
rcl
inc
pop
xchg
sub
dec
push
xor
sbb
sbb
adc
add
stos
push
jg
retf
inc
cmps
xor
xor
fmul
push
pusha
popf
jg
adc
ins
add
inc
jne
xor
out
lods
mov
inc
leave
push
movs
xor
addr16
jne
jmp
jmp
sub
popa
jl
jae
pop
and
push
cmp
jnp
jge
frstor
frstor
xor
adc
push
xor
xchg
das
push
mov
mov
outs
test
push
imul
clc
dec
sub
cmp
inc
inc
enter
cmp
pop
or
lds
or
add
(bad)
pop
push
fisttp
adc
lahf
in
out
ins
mov
pop
add
fsubr
lods
out
bound
out
in
mov
or
or
xor
jge
xchg
xchg
loopne
pop
or
mov
dec
clc
loop
je
mov
dec
push
mov
not
cld
popa
in
dec
sbb
mov
push
int
pop
js
das
inc
sub
pusha
stos
int3
jns
out
test
add
test
pop
scas
retf
aad
or
ret
mov
inc
cmc
jnp
inc
movs
test
pop
sub
std
cmp
mul
or
int3
sbb
bound
cmp
dec
cs
ja
retf
push
lds
jno
xor
or
xchg
mov
call
popa
repnz
mov
mov
jb
push
outs
push
sbb
sbb
push
mov
mov
push
sub
jmp
jecxz
push
inc
adc
sar
das
add
ja
add
push
push
js
cmps
mov
cmps
add
int3
outs
adc
outs
or
sub
test
int
push
sub
dec
add
ret
(bad)
mov
cli
jno
inc
push
mov
pop
movs
cmps
test
or
les
fsubr
sub
repz
push
xor
(bad)
push
pop
fcom
or
in
fwait
leave
aad
pop
int3
sar
add
test
icebp
bound
leave
stos
and
in
and
mov
leave
fcomp
mov
mov
dec
neg
scas
xor
mov
adc
pusha
sti
(bad)
xor
rcl
sar
in
cwde
cmps
addr16
sbb
maskmovq
imul
cmp
call
cmp
inc
and
jno
lahf
lahf
aam
dec
imul
stc
leave
or
je
in
dec
push
clc
stos
in
dec
or
movs
popa
aas
xor
push
movs
mov
xlat
stc
adc
pop
mov
into
inc
test
xor
or
dec
in
pop
jno
mov
mov
repz
(bad)
cmp
aad
(bad)
nop
sub
int3
inc
xor
test
xor
jmp
dec
or
mov
push
xchg
test
push
adc
in
xor
ins
mov
shr
jecxz
adc
inc
jmp
test
popf
sub
push
clts
or
dec
pop
stos
cmp
and
inc
xchg
dec
call
and
cmp
mov
cmps
mov
sbb
jmp
mov
es
je
mov
leave
retf
fcom
aaa
sub
add
dec
rcl
jno
mov
(bad)
sub
icebp
sbb
add
mov
push
lea
(bad)
mov
mov
add
out
add
sbb
sbb
cmps
clc
add
push
jae
das
fmul
jp
jo
xchg
cmc
leave
mov
mov
out
ret
sbb
fptan
call
xlat
sbb
(bad)
into
pop
ins
shl
and
leave
mov
out
add
addr16
xor
jb
aad
mov
cwde
ss
mov
cmp
ja
or
jmp
popa
outs
push
pusha
mov
(bad)
inc
inc
cmp
fistp
aad
repz
pusha
ds
jecxz
aam
movs
es
dec
xor
das
add
rcr
inc
movs
(bad)
stc
aaa
out
or
mov
mov
or
push
fnsave
shl
fst
mov
jp
push
fld
addr16
out
dec
cdq
cli
dec
dec
loopne
cmp
xor
outs
and
xchg
mov
mov
jb
jb
cmp
push
loop
and
mov
push
pusha
push
fidivr
mul
out
xchg
dec
xchg
push
and
jno
mov
jp
nop
jnp
push
jmp
push
pop
jb
or
test
pop
sub
inc
scas
fwait
clc
sahf
and
mov
jns
out
mov
mov
mov
loope
add
retf
cmp
lock
push
sub
xlat
and
mov
mov
push
cli
dec
call
movs
push
sub
cs
xlat
mov
cld
sbb
(bad)
into
mov
sub
lods
add
sbb
mov
movs
outs
mov
retf
cwde
out
arpl
inc
mov
jg
movd
xchg
inc
stc
aad
and
in
and
nop
jo
jae
dec
push
fadd
mov
push
dec
cmp
inc
mov
outs
cmc
jae
adc
rcl
cmps
and
and
lods
mov
movs
ds
inc
and
lahf
and
repnz
adc
div
push
pop
jnp
ficom
lods
test
pop
out
xchg
retfw
push
mov
or
inc
xchg
leave
scas
or
fidivr
push
and
xchg
test
cmp
inc
xor
sub
stos
retf
int3
cmp
sar
pop
in
ins
push
mov
or
xor
mov
sub
inc
movs
pop
ret
loopne
adc
jns
xlat
push
call
jb
repnz
mov
aam
pusha
shl
loopne
xchg
xchg
pop
mov
mov
push
mov
sbb
sub
sar
test
(bad)
gs
stos
push
and
jg
(bad)
(bad)
pop
ins
test
cmp
(bad)
outs
sub
aam
dec
std
shr
mov
(bad)
push
pop
cmc
dec
or
jne
cmp
push
xchg
mov
ins
cmp
xor
in
out
dec
pop
(bad)
movs
jnp
stos
cmps
in
push
sub
adc
dec
adc
dec
and
test
les
and
mov
or
mov
nop
(bad)
sti
and
test
sub
gs
ds
cmp
je
or
mov
test
jnp
xor
sub
xchg
sbb
ret
pop
es
jmp
lahf
leave
inc
test
xor
xor
jg
daa
jae
xor
call
and
push
bound
mov
push
fld
pop
cs
bnd
jo
mov
fldcw
add
sbb
shl
push
add
add
mov
scas
outs
and
loopne
shl
push
mov
movs
popa
jg
and
lods
push
inc
cmp
dec
add
cmp
popf
jl
inc
xchg
sub
shr
and
(bad)
in
fsubr
jae
mov
cwde
sbb
mov
push
adc
stos
jge
mov
adc
add
lods
mov
mov
stc
cmps
xor
test
push
sbb
test
arpl
and
hlt
jge
push
mov
(bad)
fcomp
sub
std
xor
or
das
push
pushf
mov
iret
(bad)
(bad)
sti
not
push
jae
in
pop
sub
dec
adc
fcom
cmps
sub
mov
les
mov
aaa
xchg
push
push
xchg
mov
outs
pushf
xor
sub
xor
lahf
push
aad
dec
fisubr
jp
push
enter
lea
inc
popa
in
cdq
dec
push
push
(bad)
neg
mov
cmp
fstp
call
fiadd
enter
je
adc
xlat
mov
imul
mov
in
lock
push
mov
push
dec
jb
mov
outs
jecxz
mov
xchg
inc
adc
(bad)
fnstenv
push
sbb
jge
mov
popf
mov
push
dec
lods
and
mov
inc
aaa
xchg
pop
ss
je
loopne
mov
out
cs
mov
or
(bad)
(bad)
mov
and
xchg
push
je
jns
pop
test
out
movs
or
add
cmp
push
call
push
cdq
test
nop
and
add
fimul
cld
out
iret
mov
inc
dec
xor
ss
adc
outs
fcmovne
pop
jns
dec
jns
sbb
pop
sub
pop
inc
pusha
(bad)
adc
clc
test
cmps
pop
jo
into
jb
(bad)
sub
dec
mov
mov
push
cs
cmp
jbe
mov
push
cmp
je
mov
bnd
inc
sub
xchg
(bad)
or
mov
sbb
loopne
adc
mov
inc
jge
or
out
scas
xchg
mov
mov
ret
sub
cmc
scas
jbe
es
fdivr
push
in
mov
mov
ds
mov
je
mov
push
dec
popf
adc
data16
(bad)
jge
sub
nop
lahf
jnp
adc
sbb
mov
mov
mov
aad
mov
adc
push
pop
add
addr16
xor
ins
(bad)
jecxz
clc
xlat
pop
xor
cmc
or
imul
sbb
xchg
pop
scas
mov
jne
hlt
push
inc
xchg
shl
inc
cs
push
mov
add
inc
and
clc
mov
jne
pusha
inc
sub
out
ret
mov
or
cli
lods
enter
ret
shr
jbe
mov
xchg
ret
push
dec
retf
into
push
xor
mov
xor
pop
xor
cmps
mov
jle
add
fisttp
cmp
adc
js
xchg
mov
adc
or
push
or
jl
xlat
add
push
cmp
loop
pushf
leave
inc
scas
out
in
mov
fadd
add
mov
add
jae
pop
(bad)
dec
data16
sub
xor
jae
xor
mov
xchg
in
jecxz
pop
in
repz
xchg
out
stc
add
pushf
aaa
sti
pop
ret
mov
lock
cwde
dec
(bad)
cmps
out
cmp
fld
mov
push
sub
lds
jns
pop
pushf
les
shl
adc
mov
arpl
ins
loop
mov
push
out
mov
arpl
xchg
lods
out
vmwrite
scas
ja
movs
mov
mov
inc
push
lods
stos
push
retf
mul
(bad)
imul
inc
cmps
sbb
ja
sub
pop
loopne
jmp
aas
(bad)
push
mov
fisubr
xchg
add
jnp
ss
loope
dec
cmp
add
aas
xor
inc
adc
dec
push
cmp
pusha
pop
and
sbb
or
icebp
fidivr
mov
inc
ret
push
stos
aas
ins
jge
jne
jae
shl
and
vmread
or
aad
ds
xor
in
loope
jb
fiadd
inc
rcl
pop
inc
scas
loope
sub
cmp
popa
aam
cmp
xchg
xor
mov
or
jecxz
fldenv
xor
xor
pop
dec
scas
mov
adc
movs
sub
aas
aad
nop
mov
push
sub
and
push
es
shl
xchg
inc
sub
add
xchg
call
xchg
mov
mov
sbb
cmps
or
mov
das
mov
or
push
call
popa
leave
daa
daa
mov
inc
cs
outs
and
or
sbb
shr
jge
pop
xchg
add
pop
fimul
sbb
daa
ss
adc
mov
jae
stos
push
call
jmp
mov
mov
jmp
call
std
cmp
mov
fisub
repnz
pop
nop
sub
scas
and
fisttp
push
mov
push
ss
cmps
xchg
jae
mov
xchg
cmc
jb
popf
add
and
mov
push
sbb
repz
mov
sti
pop
push
out
(bad)
xor
or
out
push
mov
sub
mov
mov
(bad)
add
cmc
ss
in
shr
push
fcomp
xor
pop
push
fs
or
imul
jbe
add
sub
les
(bad)
sti
imul
test
dec
xchg
outs
test
xchg
add
stc
and
pop
nop
(bad)
outs
dec
loope
into
mov
jecxz
pop
nop
pop
add
xchg
inc
in
adc
mov
xor
pop
push
mov
out
retf
push
and
sbb
dec
ins
push
sbb
js
leave
int
(bad)
sti
pop
inc
outs
fsubr
mov
shl
xchg
jmp
xchg
sub
ins
inc
out
addr16
out
inc
fnstenv
sub
and
stos
cmps
aam
xlat
ins
sbb
adc
std
dec
ja
push
cmps
lock
mov
fwait
in
mov
gs
call
sahf
ja
out
push
ss
mul
(bad)
pushf
inc
cdq
pop
fwait
inc
hlt
or
shl
sbb
push
mov
fdivr
push
enter
cmps
aas
jne
mov
push
fsubr
xchg
push
jno
xor
in
inc
jnp
pop
sar
popa
fnstcw
std
out
mov
jecxz
bound
push
sbb
shl
push
pop
(bad)
mov
shl
pop
es
pop
es
mov
hlt
adc
jnp
sub
xchg
dec
(bad)
mov
and
(bad)
call
sahf
mov
push
jmp
ds
sbb
loope
sub
lock
cs
mov
push
nop
add
std
inc
lahf
cmc
enter
add
ja
jge
cmp
in
mov
sub
xor
mov
xlat
or
and
call
add
or
fisubr
fiadd
in
or
jge
repz
mov
pop
push
jge
xor
push
xor
movs
dec
pusha
cmp
sbb
inc
sti
and
pushf
push
or
adc
xchg
ins
pop
inc
cld
imul
push
ret
lods
jno
aaa
mov
ror
test
pop
neg
sahf
mov
and
mov
bound
mov
in
push
xchg
and
sbb
(bad)
test
pop
repnz
push
(bad)
xchg
jbe
cli
mov
add
cmp
adc
push
bound
xor
add
inc
dec
sub
rsm
fbstp
stos
xchg
mov
push
repnz
cld
dec
cmp
pop
test
mov
jnp
lea
mov
mov
iret
movs
adc
push
sbb
das
ins
ja
add
fnsave
test
aaa
test
cmc
sub
xor
ds
rcl
jae
aad
mov
mov
xor
xchg
jns
js
cmps
fs
retf
rol
loop
dec
push
xchg
ds
inc
jno
shl
pop
adc
inc
dec
enter
adc
push
(bad)
test
cmp
jno
leave
mov
lahf
(bad)
out
iret
or
xlat
inc
mov
pop
xchg
lds
cmc
xor
stc
jle
sub
mov
inc
pop
pop
mov
outs
xlat
stos
inc
inc
push
montmul
cmps
ret
or
mov
push
lock
mov
jne
inc
cmp
sub
loop
xchg
jbe
jae
fs
xor
out
jnp
out
mov
out
pushf
or
add
popa
push
ja
xchg
loope
adc
mov
sbb
sbb
sub
add
cmp
lahf
leave
adc
sbb
or
push
or
add
mov
xchg
pushf
std
or
int3
das
push
xor
xor
test
lock
sub
arpl
mov
xchg
push
inc
or
rcl
enter
enter
stc
nop
stos
call
fmul
lahf
fwait
imul
or
fcomip
dec
ret
cmp
mov
stc
adc
popf
cmps
fstp
dec
into
or
pop
icebp
lahf
pop
cmps
stc
mov
rcr
iret
sbb
adc
aas
mov
mov
jge
popa
ja
push
in
leave
fstp
retf
dec
jp
test
shr
aas
or
add
and
out
int3
pop
(bad)
mul
jne
mov
arpl
fisttp
sub
add
mov
jmp
outs
xchg
dec
rcr
int3
popf
popa
sbb
sub
mov
leave
jge
cmp
fsub
jno
dec
dec
push
mov
imul
dec
les
mov
ins
mov
cmp
cmc
into
js
pop
pop
add
pop
adc
(bad)
sub
jb
ins
jg
fld
adc
pop
add
loope
dec
int
dec
ret
sbb
data16
xchg
pop
ficom
dec
ror
rol
std
sub
or
idiv
xlat
inc
cmp
xchg
call
mov
and
mov
(bad)
jne
lods
fwait
push
lahf
cmps
push
test
lds
stc
add
movs
jae
dec
outs
mov
jge
js
js
out
xor
adc
aas
ret
test
dec
fwait
xchg
adc
movs
in
pusha
mov
sub
nop
pop
pop
jmp
loope
sub
push
xchg
push
pusha
out
jbe
aas
stos
sbb
sbb
xchg
mov
stos
xchg
and
fwait
push
cmp
cmp
clc
std
adc
inc
sti
leave
retf
adc
add
mov
add
xor
ret
(bad)
sar
lods
scas
imul
int3
xchg
sub
pop
repz
mov
inc
js
cmc
inc
xor
pop
addr16
fbld
xor
int3
icebp
inc
xchg
adc
das
xchg
push
inc
push
jp
jne
ds
jne
fistp
lods
dec
ja
dec
xchg
call
arpl
bound
jecxz
xchg
mov
sahf
dec
jl
(bad)
mov
xchg
mov
or
jmp
mov
or
mov
sbb
sbb
pop
add
xlat
push
rol
mov
jecxz
int3
ret
test
inc
xor
mov
outs
jmp
fs
cs
push
ret
mov
fild
push
jecxz
mov
adc
test
ja
imul
bnd
jnp
push
(bad)
dec
dec
jl
out
jne
arpl
ins
dec
inc
les
xchg
add
mov
add
jmp
out
call
retf
ret
test
stos
cvtps2pi
mov
sar
iret
js
mov
pop
push
stos
out
pop
adc
mov
lock
retf
adc
mov
sbb
test
cmps
sbb
inc
adc
in
in
inc
sbb
push
aaa
outs
mov
std
out
xchg
ret
ja
sbb
xor
daa
daa
pushf
adc
cmp
add
mov
mov
loope
push
fmulp
mov
nop
dec
xor
rcr
lods
sahf
addr16
fwait
ret
and
adc
xchg
dec
add
xchg
push
inc
dec
mov
iret
push
enter
(bad)
std
loopne
daa
jne
add
fdiv
and
lea
push
fsub
xchg
and
pusha
stos
xchg
inc
and
ja
sti
scas
(bad)
xchg
popf
push
inc
xor
sub
shr
pop
sbb
(bad)
cmp
push
arpl
gs
push
sbb
sar
outs
sbb
clc
push
pop
or
mov
xor
jg
mov
push
(bad)
clc
loop
push
or
outs
and
dec
(bad)
movs
inc
(bad)
scas
sbb
and
int3
arpl
mov
inc
push
(bad)
push
xchg
fcom
jmp
addr16
and
mov
sbb
stos
sub
stc
stc
in
mov
push
adc
inc
lds
adc
mov
and
pop
hlt
(bad)
repz
or
mov
retf
retf
es
sbb
aaa
out
mov
aas
or
mov
cmps
pop
jmp
rcr
sub
rcr
cmc
movs
loope
inc
stc
pop
fs
arpl
and
mov
adc
mov
stos
mov
lea
repnz
mov
fdivr
jae
inc
xchg
inc
je
jne
dec
test
stc
jl
push
fdiv
ss
aaa
loope
cld
mov
mov
mov
test
inc
retf
stc
or
sbb
pop
jle
loope
cmps
hlt
mov
jbe
jne
pop
xchg
push
pop
(bad)
jmp
mov
add
cli
std
jo
sbb
lahf
sub
jl
stos
or
cmc
es
fnstenv
sub
leave
inc
mov
mov
and
or
mov
inc
jnp
lods
xchg
inc
test
cmp
push
mov
jno
cmp
mov
loope
adc
add
lods
out
(bad)
sub
jmp
sbb
mov
jae
adc
mov
retf
cmps
pop
rcr
popf
xlat
cmc
jmp
imul
(bad)
adc
mov
fwait
push
fadd
mov
adc
ja
pop
push
in
jae
fcomp
iret
hlt
dec
cmp
jnp
sbb
retf
adc
add
das
mov
inc
sbb
cdq
ficomp
fcomi
pop
mov
adc
das
ficomp
scas
leave
sub
retf
test
shl
gs
ret
pop
test
mov
sbb
movs
ror
neg
pop
xchg
add
fst
cmp
movs
stos
mov
or
loope
xchg
pusha
shl
sbb
pop
jno
dec
inc
xchg
cmp
into
fstp
test
mov
icebp
dec
add
dec
daa
dec
inc
jbe
pop
pop
mov
sub
jl
fiadd
mov
jae
dec
and
sub
retf
inc
pusha
cs
ins
jns
out
aas
push
pop
mov
jmp
lea
loope
cmp
stos
or
mov
mov
jmp
xchg
sbb
sbb
out
inc
stos
(bad)
push
jg
imul
pop
mov
dec
adc
(bad)
out
jo
adc
fstp
inc
push
arpl
imul
mov
addr16
std
mov
scas
lds
adc
adc
sbb
add
push
sbb
sbb
mov
bound
dec
call
loop
not
dec
imul
loope
repz
out
push
sub
test
idiv
push
mov
cdq
ins
mov
imul
shl
div
repnz
enter
push
leave
sub
sti
xor
std
xor
fidiv
xor
sub
jno
push
xor
fstp
sub
mov
es
fld
outs
das
push
(bad)
jmp
into
dec
inc
push
push
mov
pop
test
nop
test
push
and
sar
cmp
movs
mov
jae
test
jmp
int3
mov
shr
cmp
popa
jp
mov
dec
retf
cdq
pop
lods
(bad)
mov
sub
mov
aaa
data16
cmp
pop
xor
lods
sbb
ret
inc
cmps
dec
cli
dec
add
pop
push
sub
sub
sbb
ficomp
enter
push
dec
dec
aad
xor
int3
mov
xor
pop
ret
mov
or
push
lods
icebp
aas
dec
lock
lahf
fld
imul
sahf
adc
dec
jecxz
scas
cmp
add
dec
mov
loope
cmp
dec
sub
pop
add
bound
add
cli
loope
mov
pop
scas
cli
int
push
mov
xchg
sub
push
retf
(bad)
and
test
jnp
in
inc
retf
(bad)
lock
jmp
shr
mov
vxorps
sbb
lds
(bad)
nop
test
aad
mov
repnz
ret
aas
mov
sub
nop
mov
sbb
dec
push
fsubr
clc
jg
or
cmp
icebp
sbb
inc
xor
sbb
jmp
bound
pop
mov
dec
jle
mov
fcom
test
outs
adc
adc
dec
mov
xchg
in
lods
jp
call
cmp
pusha
pop
in
popf
inc
and
mov
mov
dec
ss
ja
jle
aam
add
imul
lds
in
leave
test
mov
cmp
scas
imul
jge
xor
out
cmp
ja
ds
jb
xchg
clc
test
pmaxub
and
jg
push
adc
push
ja
aad
rcr
inc
cs
pop
inc
mov
lea
sub
cmp
jae
ja
push
mov
fld
aad
push
dec
sub
rcr
pop
in
xchg
add
shl
dec
jne
or
jne
lock
jo
sbb
in
cs
aas
inc
(bad)
inc
xchg
jl
hlt
stos
inc
cmp
xor
add
inc
mov
xchg
fadd
or
push
xchg
cmp
daa
(bad)
iret
gs
xor
mov
adc
sbb
je
mov
and
pop
mov
xor
mov
popf
lods
xchg
mov
nop
or
(bad)
into
sub
cmp
jl
mov
jle
add
or
push
mov
repz
mov
inc
xor
or
or
jbe
ds
movs
push
sbb
in
inc
jmp
inc
pop
sar
test
cli
test
jg
cli
and
mov
rol
cmps
mov
xor
add
sbb
or
int3
dec
into
popa
or
sub
jns
scas
lea
mov
rcl
loop
or
inc
jle
lods
shl
mov
pop
mov
shr
sub
fs
jno
push
sbb
add
stc
jg
js
jb
das
cmp
fwait
fwait
cld
add
push
fld
lds
test
outs
add
test
mov
out
sbb
jmp
mov
lahf
out
and
outs
mov
fucompp
dec
lahf
add
cwde
sar
in
xor
jg
xor
xor
xchg
sbb
mov
sub
sbb
out
and
shl
test
retf
in
imul
push
arpl
mov
add
jo
or
mov
enter
mov
inc
(bad)
xchg
mov
xchg
adc
int
push
(bad)
in
retf
bound
jge
outs
add
outs
jno
add
push
sbb
and
iret
and
xor
xor
xchg
or
ret
repnz
xchg
xor
sbb
xor
and
jno
cmps
fwait
jnp
push
bound
xor
pop
dec
lock
mov
xchg
mov
es
sub
xor
enter
js
icebp
add
(bad)
sbb
out
cmp
xchg
push
cmc
cmp
lds
push
dec
fmul
fbstp
push
in
and
xor
pushf
aad
mov
mov
push
sti
idiv
push
push
sbb
loope
out
mov
mov
add
addr16
xchg
sbb
push
adc
mov
xor
in
in
and
sbb
int3
rcl
dec
adc
xor
pop
jge
stc
pusha
inc
mov
xlat
sub
mov
imul
mov
pushf
ficom
mov
cmp
fwait
or
push
mov
push
out
dec
ret
xor
aad
or
setnp
imul
mov
pop
faddp
adc
retf
addr16
int
and
inc
sub
xchg
push
in
or
push
jnp
jle
pop
inc
dec
les
pop
(bad)
lods
jne
pop
popa
jae
fimul
pop
or
push
movs
ret
pop
jns
mov
sub
std
cs
jle
(bad)
mov
ins
push
cdq
data16
pushf
imul
fsub
test
cmc
test
dec
sahf
mov
gs
icebp
mov
adc
pop
test
popa
sbb
stos
in
int3
pop
or
cmp
(bad)
outs
shl
data16
mov
jnp
xchg
sbb
stc
or
mov
scas
retf
jo
jecxz
nop
inc
and
imul
repnz
cmp
jnp
xchg
xor
adc
cmc
push
push
mov
xchg
sbb
and
out
fwait
test
daa
movs
mov
jb
mov
fs
mov
into
jmp
or
loope
pop
push
mov
or
and
pushf
sub
js
sub
out
out
jmp
xchg
inc
sar
mov
xchg
fwait
add
xchg
inc
inc
xchg
mov
mov
in
push
sbb
test
inc
dec
dec
idiv
mov
(bad)
fldcw
xor
jmp
and
das
test
aas
sub
aas
mov
ret
jns
push
mov
mul
iret
inc
lahf
scas
int3
into
cmp
gs
adc
loopne
out
cmps
or
jmp
or
test
inc
jmp
movs
jne
cdq
fwait
add
adc
mov
adc
xchg
push
sub
dec
adc
or
in
or
adc
inc
jg
in
int3
dec
push
popa
das
sub
in
mov
jns
push
aas
movs
cmps
mov
das
dec
cmc
and
aaa
retf
or
jg
xor
adc
gs
jo
jmp
xchg
rcr
pop
into
aaa
sub
inc
adc
ficomp
cmps
xor
mov
sub
sbb
or
sbb
bound
mov
jecxz
repz
jmp
jge
(bad)
push
dec
scas
mov
and
pop
pop
popa
movs
xchg
ret
cdq
aaa
push
inc
xor
adc
gs
sub
cmp
pop
adc
push
jnp
mov
fwait
shl
mov
mov
xor
mov
jae
mov
fcmove
push
outs
fdiv
arpl
call
dec
(bad)
push
fcom
pop
les
and
push
mov
out
xor
sbb
fs
fadd
loopne
xor
mov
jbe
shl
or
xor
in
bnd
cmp
mov
add
aaa
scas
xor
inc
jle
mov
arpl
int3
xor
stos
push
or
push
adc
push
repnz
ja
ins
les
add
jno
adc
push
or
pop
in
add
add
bound
sti
dec
aad
sar
fstp
xor
push
xor
inc
xchg
and
loope
push
mov
fscale
xor
out
or
xor
shr
scas
call
out
dec
sti
sbb
clc
out
aam
push
jecxz
mov
retf
(bad)
mov
leave
xchg
dec
fwait
sub
lods
dec
cmps
test
and
sbb
fstp
fidiv
jecxz
mov
dec
ret
cmp
or
hlt
and
fsubr
and
mov
out
push
aas
xchg
sar
int3
cmp
shl
aam
and
ds
adc
dec
push
fidivr
cdq
ror
fwait
jnp
adc
(bad)
xor
mov
jns
shl
adc
inc
xchg
jg
ret
xlat
loope
dec
or
nop
clc
in
leave
jmp
(bad)
cmp
popa
cmp
je
xchg
fistp
outs
push
sti
and
repz
xor
pop
inc
push
and
ja
push
stc
fisttp
ds
add
test
test
push
mov
ret
mov
movs
shl
xchg
xor
lock
ins
retf
or
inc
dec
aas
dec
scas
dec
dec
adc
push
test
mov
mov
xchg
cli
in
nop
fs
or
jge
inc
adc
scas
xor
push
into
add
ds
lods
sub
das
aad
ins
bound
add
cmp
cmp
pop
fcomp
test
adc
xor
shr
fild
ss
xor
ja
mov
lds
jnp
leave
sbb
test
shl
push
bound
shl
mov
call
push
popf
mov
sbb
jo
stos
push
je
fcomp
dec
ror
pop
ins
jmp
xor
test
aaa
out
lock
shl
jo
cmp
std
cmp
cmps
sbb
dec
push
adc
les
in
inc
inc
(bad)
mov
inc
sbb
and
xor
mov
mov
mov
mov
mov
sbb
dec
cli
test
fmul
test
leave
adc
sub
mov
aaa
xchg
ret
fcomp
scas
add
push
pusha
mov
lahf
mov
inc
pop
add
cmc
stc
arpl
sub
int
retf
inc
into
mov
enter
out
or
dec
mov
dec
test
retf
adc
stc
loop
cdq
stc
fistp
pop
test
and
mov
cwde
les
push
or
mov
sbb
bound
loopne
je
mov
or
out
inc
xchg
div
jmp
das
cwde
xchg
outs
push
pop
les
pushf
add
mov
cld
daa
add
adc
and
in
xchg
mov
cmp
push
jno
push
ror
(bad)
sub
loopne
add
aam
mov
mov
jp
push
push
repnz
mov
inc
fst
pop
pop
es
jecxz
stos
retf
rcr
dec
mov
cli
xor
fucomi
push
outs
ret
int3
ja
out
xchg
std
push
mov
pop
imul
jecxz
call
adc
jno
or
ror
cld
int
push
(bad)
std
inc
mov
sbb
dec
cmp
retf
int
mov
mov
les
jns
xchg
inc
(bad)
sbb
inc
rcl
mov
bound
cmp
push
push
pop
adc
mov
idiv
dec
cmp
jae
imul
(bad)
xchg
sbb
dec
stos
push
ins
icebp
fdiv
stc
dec
aaa
rcr
lock
jp
or
sbb
push
add
xor
pop
out
scas
imul
sbb
hlt
mov
mov
addr16
lock
xor
(bad)
sub
std
inc
(bad)
mov
icebp
nop
xchg
test
nop
enter
lods
mov
push
xor
leave
test
retf
ret
push
adc
xor
mov
out
mov
int
shl
adc
shr
les
cs
xor
int3
dec
jp
inc
pop
fdiv
ja
inc
icebp
xor
add
(bad)
repnz
cdq
mov
(bad)
pop
das
cmp
test
jns
loopne
retf
sbb
das
mov
sub
or
jbe
push
lods
mov
cmp
iret
idiv
or
dec
cmp
push
(bad)
xchg
xchg
mov
sub
mov
mov
(bad)
and
je
mov
or
das
xchg
xlat
dec
lea
pushf
push
(bad)
cld
les
and
mov
or
add
call
inc
pop
mov
into
and
movs
loopne
in
repnz
stc
retf
lock
in
mov
in
inc
int3
popa
xchg
mov
inc
in
jne
fxch
mov
cwde
adc
rcl
mov
push
(bad)
sbb
cmp
shl
xchg
adc
jne
xor
sub
xor
inc
mov
cmp
add
gs
ins
inc
pop
and
(bad)
lahf
mov
mov
inc
pusha
retf
pop
hlt
sbb
push
mov
adc
add
iret
sub
xor
add
aas
sbb
icebp
dec
xor
mov
hlt
daa
lock
out
jbe
fmul
mov
inc
out
movs
out
mov
jmp
and
ret
inc
ja
(bad)
cli
sub
and
fcom
xor
jb
xchg
mov
jo
sub
cmp
and
mov
rcl
sbb
lea
aad
(bad)
jmp
sbb
fcmovbe
mov
adc
scas
fcmovu
mov
add
cmp
or
pop
dec
mov
or
iret
sub
popa
pushw
fmul
stc
adc
fwait
add
mov
push
push
lock
fcom
js
ins
mov
arpl
(bad)
cdq
loope
in
jp
xchg
add
sbb
js
pushf
cld
jns
pushf
pop
sbb
mov
shl
jl
inc
dec
fwait
inc
cwde
pusha
mov
fnstcw
or
jnp
outs
daa
xor
ins
or
dec
or
xor
fwait
and
jmp
in
cmc
inc
xchg
fcmovnu
mov
xchg
and
aad
call
mov
and
int
loope
jg
fmulp
mov
dec
aas
in
add
sbb
xor
push
xchg
cli
pushf
and
cmp
add
jmp
aam
cmps
retw
arpl
sbb
inc
pop
inc
aas
scas
call
or
jg
mov
xor
xchg
inc
aad
jmp
pop
loop
mov
test
imul
jnp
sbb
cmp
mov
jl
test
jmp
pop
(bad)
ror
cmp
aas
aad
repz
movs
cmp
xchg
push
fild
clc
dec
fild
les
xchg
ds
retf
xchg
and
adc
aaa
push
or
and
out
ins
(bad)
movs
xchg
adc
stc
jns
retf
stos
test
sti
add
xchg
das
int3
in
sub
popf
out
mov
cmp
push
push
add
adc
ret
mov
and
jge
jmp
ins
out
inc
push
dec
fmul
sbb
add
iret
jb
mov
mov
jnp
out
sub
cmps
in
cmp
loope
gs
jg
cld
test
ja
stos
and
mov
or
xor
je
and
mov
scas
push
stos
js
sub
xor
mov
push
mov
imul
aam
pop
pushf
inc
and
imul
out
sub
mov
shl
lods
pop
movs
loopne
inc
fisub
xchg
repnz
jle
dec
loopne
(bad)
adc
lahf
lock
mov
(bad)
fiadd
enter
mov
xor
out
xchg
jne
mov
lds
dec
aaa
dec
fldcw
fld
test
sub
pop
sar
(bad)
movs
out
daa
mov
add
mov
pop
xor
lahf
xchg
fdiv
xchg
jl
cmp
adc
inc
outs
fcomp
adc
pushf
pop
inc
sar
fs
je
test
push
cmps
jecxz
arpl
sbb
mov
mov
shl
cmps
ret
stos
inc
dec
xor
aam
sub
jno
mov
jae
jae
mov
ss
pop
cdq
mov
es
arpl
or
pop
add
das
xor
xchg
mov
mov
clc
movs
push
xor
jae
xchg
outs
cdq
ins
xchg
xor
lods
and
xor
je
fwait
push
jl
pop
das
dec
xchg
cmp
xor
pop
inc
pusha
sar
mov
in
mov
push
test
adc
fdiv
popa
sub
repz
add
and
pop
aam
xchg
fisub
fistp
cli
sbb
or
xchg
lock
xchg
mov
mov
adc
sbb
jecxz
mov
imul
sbb
lock
jne
jmp
sub
enter
push
add
mov
mov
les
inc
adc
arpl
pop
in
mov
cwde
out
xchg
lods
dec
pop
mov
dec
(bad)
hlt
ds
mov
into
mov
into
and
inc
das
fwait
adc
pop
sbb
sbb
xchg
inc
es
popa
retf
cs
add
cmp
mov
sbb
lods
cdq
shr
mov
mov
pop
mov
jo
xchg
inc
mov
rol
fcmovbe
cmps
(bad)
daa
mov
retf
xbegin
push
fist
cli
dec
push
clc
ror
push
xor
icebp
hlt
aam
add
(bad)
inc
sbb
push
dec
ror
fbld
add
xchg
aad
daa
push
jmp
mov
call
mov
jl
loope
pushf
mov
sbb
retf
test
inc
icebp
fs
mov
shl
in
or
or
inc
jl
sbb
call
cmps
sbb
cmp
pop
test
in
repnz
xor
in
lea
inc
add
jl
aaa
ja
repz
in
fadd
pop
test
inc
out
je
int
mov
neg
pop
xlat
and
sbb
aam
mov
push
dec
sbb
shl
out
add
add
sbb
dec
out
fcom
adc
mov
xlat
xor
pop
inc
lahf
int
dec
(bad)
dec
sub
out
lods
and
mov
jae
aad
inc
ror
pop
dec
jle
je
daa
jge
mul
mov
pop
cmps
mov
loopne
mov
push
nop
loope
xor
cmps
or
push
push
jle
pop
push
and
outs
or
jp
popf
sub
sub
push
outs
fisubr
pop
ins
push
cs
push
xchg
pushf
push
lods
jo
xchg
mov
push
mov
fisttp
icebp
push
pop
jl
jmp
int3
sub
cmp
shl
inc
retf
popa
out
cwde
jns
mov
and
add
je
icebp
xchg
jmp
xor
xchg
xchg
inc
lods
hlt
add
sbb
jbe
lods
fsubr
cmc
dec
loopne
cmp
inc
dec
movs
(bad)
sub
aad
mov
in
add
stos
push
fstp
cmp
aas
add
idiv
(bad)
das
call
cmp
jge
mov
popf
inc
and
daa
lods
test
push
dec
mov
mov
ja
(bad)
stc
aad
in
(bad)
lods
inc
iret
or
out
or
retf
scas
push
or
mov
jmp
lds
fisubr
dec
adc
pop
ss
leave
or
mov
(bad)
stos
add
and
fadd
pushf
scas
inc
xchg
outs
pop
inc
mov
mov
les
xchg
(bad)
scas
lock
mov
mov
lahf
loope
in
popa
icebp
call
inc
retf
mov
pop
aad
mov
lods
es
arpl
cmp
cmc
enter
mov
rol
in
ret
push
add
cmc
imul
sub
and
clc
test
add
repz
sar
jb
jmp
mov
jg
ucomiss
push
stos
sub
jmp
lods
add
push
cwde
int3
push
icebp
cmp
push
mov
jmp
cmp
cmps
ins
jo
mov
hlt
data16
test
push
jns
repz
shl
and
mov
mov
xor
xor
mov
dec
enter
jmp
jl
mov
scas
sub
out
sti
jns
je
sub
xor
xor
mov
loopne
scas
ss
xor
or
sub
iret
(bad)
out
jmp
(bad)
out
xchg
fadd
cs
fild
pop
mov
xor
inc
xlat
pop
mov
(bad)
add
div
test
movs
imul
pop
imul
ds
in
cmps
sbb
pop
xlat
gs
add
sub
xor
cwde
pushf
fmul
jg
cmp
push
dec
adc
pop
jecxz
les
pop
push
push
mov
movs
xlat
je
outs
sub
fs
xor
pop
add
je
pop
sub
test
arpl
(bad)
out
es
lods
adc
lods
mov
mov
sub
pop
mov
or
(bad)
mov
pushf
cld
shr
sbb
out
adc
adc
sbb
pop
rcl
data16
push
lahf
mov
bound
outs
sbb
xor
xor
jmp
mov
imul
push
adc
aad
inc
jmp
sbb
test
fs
jns
fs
sbb
retf
xor
cmps
popf
push
call
mov
sub
add
out
cmps
jmp
xchg
sub
and
stos
repnz
pop
push
mov
icebp
pop
les
dec
imul
stos
sar
mov
aas
dec
mov
mov
push
jmp
data16
cmp
(bad)
pop
int3
fsubr
(bad)
push
fadd
mov
sub
or
test
shr
add
imul
cdq
addr16
jecxz
pop
outs
shl
out
aas
into
pop
push
jecxz
inc
nop
xchg
cmp
push
push
(bad)
or
jmp
out
ins
add
daa
imul
jmp
cmp
shl
pop
add
cmps
xor
je
xchg
pop
mov
lods
sbb
ret
mov
clc
or
sbb
or
pop
fs
lods
ja
jns
mov
sbb
xchg
push
cmc
clc
dec
add
pop
xor
gs
dec
nop
mov
mov
mov
jns
cld
and
imul
inc
and
test
jae
retf
inc
out
in
push
shl
sub
push
jns
jmpw
fdiv
mov
push
mov
sub
nop
fadd
test
jb
mov
outs
call
cmp
ins
xor
bound
int3
loope
mov
xor
jno
or
popa
je
nop
call
addr16
test
cmp
(bad)
(bad)
lock
sbb
fst
sahf
jmp
xchg
loop
xchg
aam
xchg
xchg
cmp
and
sbb
cli
jo
in
loop
mov
rcr
repnz
lods
and
(bad)
xor
jge
movs
movs
pop
sub
push
in
xchg
outs
jne
mov
push
ds
popa
cld
cmps
jmp
scas
mov
sahf
and
retf
test
pop
cmp
je
cmp
data16
or
pushf
mov
fisttp
fstp
aas
mov
cmp
add
and
push
xchg
dec
(bad)
loopne
dec
je
jg
js
pop
movs
mov
sti
jle
adc
pop
pop
outs
jb
aas
jge
sbb
xor
push
rol
mov
lds
mov
gs
add
add
jmp
xchg
fdivrp
xchg
aam
mov
push
mov
(bad)
fsub
inc
sbb
shl
bound
sub
jp
xor
push
inc
icebp
pop
xchg
pop
jb
shl
mov
aad
(bad)
aam
popa
repnz
(bad)
push
add
mov
push
lods
scas
and
cwde
push
int3
jl
xor
movs
jnp
and
jg
mov
push
int3
cmps
fcmovne
fwait
lods
adc
ins
mov
addr16
mov
aas
movs
jbe
mov
fwait
movs
jle
lock
push
dec
jno
xlat
sbb
mov
mov
xchg
je
sub
or
mov
shr
xor
bound
into
add
pop
sub
jne
js
lds
scas
sbb
popa
popa
xchg
movs
jnp
mov
or
out
(bad)
jne
pushf
cli
sti
cmp
xchg
sub
dec
ins
xchg
jmp
xchg
lds
movs
stos
pusha
pusha
movs
sti
shl
shl
outs
cld
cmp
push
xor
add
retf
mov
push
scas
inc
cmps
xlat
aad
fld
cmp
fnstcw
int3
ffree
mov
js
cmp
mov
dec
mov
or
mov
jl
jl
rol
and
xchg
js
pop
adc
in
xchg
std
cli
ret
sbb
jb
cmp
mov
dec
ret
mov
lahf
and
ret
or
sbb
daa
xor
xlat
inc
mov
int3
mov
not
fist
dec
sti
fidiv
imul
dec
out
mov
push
lahf
xor
pop
(bad)
pop
iret
mov
retf
fs
pop
xchg
xor
cmp
adc
sbb
mov
scas
mov
dec
in
imul
stc
dec
sbb
aam
fwait
ins
lods
inc
ins
push
inc
and
cld
and
cwde
ins
std
outs
retf
jae
push
div
jmp
stos
shl
inc
lea
clc
mov
movs
mov
and
cmp
mov
ret
push
adc
out
popa
nop
ds
movs
mov
or
mov
add
mov
push
pop
jl
das
mov
or
mov
jmp
xor
scas
add
jns
fild
js
mov
js
mov
mov
or
sub
icebp
lock
push
sub
adc
xor
stos
lds
dec
lea
xor
adc
adc
std
mov
mov
fimul
pop
(bad)
mov
or
popa
call
push
aas
sbb
and
add
adc
dec
cmp
inc
or
dec
jbe
or
sbb
mov
sub
imul
aas
push
and
lock
push
push
shl
leave
(bad)
xlat
neg
call
ficomp
mov
xor
dec
out
cwde
repz
inc
xor
pop
sbb
cmps
movs
rcr
push
lods
ret
repnz
mov
xor
adc
popa
add
fld
mov
add
call
sbb
popf
and
add
sub
xor
lea
add
idiv
jns
ror
fadd
sub
js
out
mov
ret
jle
sbb
jo
jb
mov
xchg
mov
out
inc
xor
jmp
fsubr
loop
push
aam
ficomp
or
and
mov
sub
add
push
cmps
add
fadd
vmread
in
mov
lds
mov
mov
and
aaa
mov
cmp
and
sbb
jl
push
xor
cmp
test
push
or
lock
scas
xor
(bad)
pop
inc
xor
pop
mov
adc
xchg
jb
sub
outs
ret
fwait
dec
movs
ins
dec
out
cmp
lahf
jbe
cwde
or
inc
or
cld
sbb
adc
sahf
push
push
daa
dec
ds
sub
shl
scas
jecxz
jae
call
stos
and
jge
jmp
add
add
iret
test
pop
(bad)
mov
lods
mov
adc
gs
add
push
jl
jne
pop
fist
test
aaa
sub
jo
test
jns
push
loop
sub
popf
xchg
sub
out
das
outs
dec
repnz
xchg
cli
mov
add
dec
lds
cmp
push
(bad)
test
sbb
(bad)
push
test
dec
loope
pop
adc
sbb
enter
in
cmps
push
mov
and
mov
data16
and
repnz
cwde
je
test
es
stc
mov
pop
popa
push
and
jge
push
cmp
frstor
pop
inc
sbb
leave
int3
shr
test
xor
int
out
fistp
inc
stos
shl
or
out
leave
fucom
sub
sub
xchg
or
sub
mov
pop
inc
fiadd
xor
test
fmulp
dec
fwait
xchg
call
pop
shl
stc
aaa
in
imul
ror
mov
lea
adc
or
mov
(bad)
mov
xor
ret
push
or
mov
popf
pop
xor
mov
mov
pop
or
in
sbb
shr
test
leave
xchg
jnp
in
aad
(bad)
xchg
xor
popf
repz
in
jns
and
retf
mov
outs
int3
sub
xchg
pop
mov
dec
test
dec
stc
and
jo
in
cmp
shr
sahf
mov
or
ret
inc
in
or
retf
or
mov
ret
mov
mov
xchg
call
fldcw
inc
mov
data16
cmove
sub
js
imul
mov
cwde
repnz
outs
retf
xchg
aam
cmp
jge
xchg
imul
xchg
pop
jmp
sub
mov
xchg
in
out
push
cmp
movs
push
mov
test
out
call
aas
add
xchg
jno
jb
ret
sbb
ret
lods
cmp
fist
jne
std
push
scas
popf
sub
sub
aad
xor
push
div
repnz
clc
xchg
sti
push
jo
mov
int
sub
cmp
xor
test
vcvtsd2si
loopne
vmovntps
gs
or
adc
sub
data16
cmc
adc
xor
push
shl
(bad)
in
inc
pop
inc
pop
push
lock
test
imul
jbe
(bad)
jnp
push
rcr
clc
outs
jmp
jmp
jg
stos
ret
sbb
fidiv
cmp
or
test
adc
movs
add
sbb
movs
(bad)
sti
ja
mov
rep
cs
sub
xor
add
or
dec
ret
xor
mov
mov
xor
xchg
mov
xchg
fwait
push
test
scas
lods
push
dec
jbe
mov
mov
sbb
int3
jb
adc
mov
inc
repz
mov
loopne
fcmovnu
jmp
cld
imul
xchg
xchg
aaa
cmc
dec
inc
(bad)
fistp
and
mul
pop
mov
mov
sbb
ds
adc
fld
mov
jbe
sub
xor
fisttp
in
dec
(bad)
sti
in
and
cld
dec
sbb
push
cwde
add
inc
jae
jmp
mov
bswap
jl
mov
cld
rol
dec
cdq
xor
push
aam
mov
fidiv
sbb
les
jge
mov
push
mov
mov
mov
inc
cs
dec
jo
cmp
scas
inc
cmp
cwde
mov
pop
(bad)
idiv
(bad)
les
into
les
mov
imul
pop
inc
add
bound
mov
pop
and
in
xchg
movs
add
movs
sub
mov
data16
std
repz
xchg
mov
jnp
rcr
dec
data16
out
ja
cmps
out
add
lods
sbb
repz
inc
rcr
inc
pop
pop
cmp
popa
cli
jnp
mov
jb
pop
loop
retf
pop
jge
adc
or
mov
lahf
jmp
push
jo
jb
pop
das
or
and
mov
(bad)
xchg
push
and
jae
pushf
ret
mov
cmp
pop
inc
or
fistp
pushf
int
or
fcomp
and
leave
push
test
inc
imul
xlat
mov
jne
cmp
stc
add
out
faddp
pop
and
adc
or
dec
cs
xor
push
ja
xor
loop
clc
jns
jle
push
aaa
(bad)
neg
test
std
mov
push
cs
mov
xlat
scas
cmps
(bad)
shl
or
cwde
fild
shr
clc
and
icebp
test
in
ret
pop
pop
cld
hlt
jne
out
pop
fdivr
jecxz
sbb
sub
pop
cs
jne
ins
(bad)
int
(bad)
popf
mov
pop
addr16
leave
push
mov
pop
scas
xchg
in
sub
outs
icebp
movs
xor
invd
mov
(bad)
push
pop
jmp
outs
adc
shr
repnz
jae
mov
xchg
jo
jle
cs
add
or
cmp
adc
mov
ins
mov
cs
aad
ins
shl
jle
retf
push
sub
xor
stos
and
inc
pop
ins
jne
jne
xchg
hlt
dec
int3
and
jno
stos
push
mov
push
add
inc
imul
inc
push
retf
push
mov
lea
jmp
sub
push
outs
addr16
pop
xchg
retf
and
into
push
sbb
cmp
pop
jmp
loope
mov
dec
stos
sbb
mov
push
push
xchg
push
jp
jmp
lahf
(bad)
lock
or
fwait
xchg
mov
mov
push
sbb
test
cmp
xchg
sub
xor
or
cli
outs
aas
cmp
outs
cmp
and
pop
adc
test
retf
add
mov
mov
xchg
test
in
out
push
sbb
jmp
aas
lea
mov
addr16
test
cwde
pop
jae
push
xchg
ins
inc
shl
in
mov
outs
lds
(bad)
push
xchg
retf
xor
jb
aas
and
or
push
addr16
lahf
inc
je
push
lahf
inc
data16
sar
adc
xchg
add
xchg
jle
mov
js
pusha
outs
aaa
test
dec
mov
push
xchg
int
repz
test
mov
aad
jle
mov
or
jae
shr
xor
test
mov
repnz
mov
xchg
lods
push
repz
scas
mov
sbb
sub
mov
fsubr
pop
fcomp
sub
popf
inc
xchg
dec
pop
lods
pusha
jb
inc
(bad)
xchg
or
xor
xchg
fbld
sub
add
mov
mov
out
data16
gs
in
(bad)
ficom
test
test
popa
dec
ret
arpl
push
xchg
xor
sbb
call
ss
in
mov
mov
repnz
cmc
inc
dec
aad
psubq
fisubr
imul
fst
(bad)
push
pop
or
cmp
xlat
xchg
dec
cmp
mov
mov
mov
add
aas
and
jns
xchg
xor
xor
xor
sbb
adc
xor
cmps
adc
aad
mov
hlt
icebp
pop
xor
push
mov
out
mov
ins
xchg
sti
retf
add
mov
add
push
inc
adc
lea
rcr
mov
cld
stos
mov
jmp
jo
sahf
jne
mov
in
movs
or
push
(bad)
loop
xchg
retf
adc
sar
inc
(bad)
shl
(bad)
or
sbb
sbb
sub
sbb
mov
cmp
ja
mov
jecxz
je
fiadd
push
and
aas
test
retf
rol
data16
adc
mov
xor
mov
pop
pop
movs
or
pusha
push
pop
sub
int3
jnp
adc
icebp
and
out
inc
bswap
jp
xor
push
push
adc
rol
popa
popf
cmp
mov
lods
inc
mov
mov
ficomp
ret
pop
(bad)
lods
sti
cmp
clc
js
loope
adc
and
lods
push
mov
lods
aam
xchg
and
or
repnz
jne
inc
hlt
jmp
cmp
call
call
xchg
pop
pusha
pop
inc
adc
scas
xchg
inc
aad
adc
icebp
sub
pushf
gs
inc
lods
data16
xor
dec
lea
sub
jmp
and
mov
imul
inc
dec
inc
mov
xor
lock
add
sbb
(bad)
shl
push
idiv
xchg
aad
out
inc
daa
into
jmp
popf
or
xchg
adc
dec
jo
data16
loop
xlat
ins
sub
add
jbe
test
ins
and
or
sub
jo
nop
inc
rcr
(bad)
mov
sbb
arpl
ret
cmp
and
shr
in
add
mov
cmc
mov
xchg
inc
mov
addr16
int3
movs
sbb
mov
jg
or
fidiv
push
pop
imul
cmp
shr
dec
(bad)
jl
and
adc
dec
stc
dec
jmp
mov
cdq
repnz
push
pop
shl
dec
call
test
jle
push
out
(bad)
(bad)
xor
push
movs
cmps
cmp
lods
push
and
jb
out
xlat
test
leave
lahf
pop
mov
aas
shr
jo
jno
lahf
std
outs
repz
add
sub
xchg
pop
das
imul
dec
xor
mov
scas
fisub
stos
and
popf
push
jge
push
mov
and
sbb
into
dec
cmp
ja
jmp
sub
in
lock
daa
fld
sbb
in
retf
sub
mov
dec
push
bsf
ror
xchg
movs
or
test
ret
jb
jge
mov
push
push
xchg
fisubr
xchg
daa
pop
sub
dec
push
lahf
mov
lds
les
adc
mov
mov
xor
mov
scas
xchg
xor
pop
jmp
cmp
addr16
inc
sub
call
test
mov
inc
pushf
scas
lea
(bad)
mov
mov
mov
sbb
inc
cmp
(bad)
cwde
clc
inc
pop
adc
nop
cmp
iret
add
dec
cwde
fdivr
movs
sbb
call
mov
out
or
add
sbb
xchg
jae
add
xchg
jae
mov
repz
sub
jecxz
fisubr
(bad)
adc
xchg
adc
dec
mov
lods
pop
aaa
sti
or
sub
xchg
test
jbe
nop
mov
sbb
sbb
into
lahf
xlat
mov
xchg
cmps
gs
mov
sbb
and
push
push
ins
push
jmp
loope
stc
xor
(bad)
or
jp
cld
stos
or
cs
loope
repz
sub
or
push
dec
stc
sbb
test
jae
cmp
dec
fnstenv
mov
and
mov
sahf
fidivr
out
xchg
psrlq
jge
cli
int3
test
jb
pop
adc
push
fist
hlt
or
pop
lods
adc
mov
push
jle
fidiv
pop
test
push
fld
fsub
sub
out
push
xchg
xor
sbb
push
cmps
test
pop
xor
sbb
jnp
push
adc
jecxz
inc
ins
rol
in
xchg
shl
jmp
les
popf
and
aas
cmc
sahf
dec
add
imul
sbb
push
cwde
imul
stc
ins
outs
xchg
in
sub
jnp
xchg
in
mov
dec
add
out
xchg
jae
cs
pusha
mov
js
xchg
fisttp
jmp
xchg
ins
cmp
hlt
in
inc
pushf
sub
push
adc
or
(bad)
pop
cwde
push
mov
sti
ins
call
mov
mov
jl
mov
pop
loop
(bad)
cmp
imul
aam
sbb
ss
in
sbb
sbb
int
jg
ds
test
pop
or
aaa
loope
lea
js
cwde
mov
rol
aad
out
push
jb
xchg
hlt
inc
and
sbb
inc
adc
fbstp
cmp
or
mov
jmp
std
scas
fcomp
adc
lods
cmp
mov
jae
pop
pop
sar
xchg
neg
xchg
sub
sub
sub
xor
dec
int
xchg
xchg
mov
out
fdiv
dec
sub
das
pop
test
cmp
pop
mov
pop
ins
xchg
(bad)
ins
ins
mov
ds
add
arpl
sahf
rcl
ja
int3
mov
sti
xchg
(bad)
adc
xchg
mov
cmc
sub
outs
push
or
mov
mov
ret
mov
or
inc
sub
test
adc
xchg
dec
dec
cmp
ins
shl
mov
ja
dec
pop
push
mov
out
and
(bad)
mov
mov
cdq
mov
jle
cmp
or
mov
pop
mov
push
xor
xor
clc
jne
inc
rcl
sub
xchg
fs
in
ss
ja
xchg
cli
pop
call
test
xchg
mov
sub
ins
mov
mov
jmp
in
xor
jl
pop
sti
loopne
sub
sub
gs
lahf
retf
mov
mov
sub
push
sbb
mov
xchg
je
sti
lock
rcr
mov
rcr
mov
push
mov
sahf
mov
lds
pop
add
jae
repnz
jbe
(bad)
stos
rcr
call
psubusb
or
or
xchg
ins
mov
fmul
pop
and
pop
out
mov
mov
lock
xor
inc
bound
test
fisttp
mov
jmp
jb
call
sub
sbb
pop
dec
ficomp
or
inc
popf
inc
sub
out
mov
dec
dec
mov
xchg
gs
pop
push
repz
movs
mov
jne
mov
xor
dec
adc
shr
pop
sbb
jecxz
jne
mov
test
pop
inc
je
ret
pop
out
and
(bad)
mov
sub
mov
aad
dec
retf
repnz
not
pop
dec
loopne
push
cmp
out
push
dec
inc
or
inc
add
(bad)
xchg
mov
je
daa
imul
lods
pop
inc
ja
pop
gs
inc
lea
js
cmp
jg
xor
lods
(bad)
pop
or
cwde
leave
pushf
or
push
jl
in
push
mov
mov
mov
aam
cmp
and
test
mov
jmp
jns
test
mov
push
cmp
repz
stos
fst
adc
xchg
leave
scas
or
dec
mov
jns
sub
inc
inc
lock
fimul
sbb
fld
jmp
push
or
dec
pop
js
sub
or
fucomi
push
jmp
gs
or
fwait
int3
adc
mov
push
sbb
inc
and
mov
xchg
imul
sub
add
inc
enter
or
jle
and
fs
xor
jae
in
mov
and
mov
loope
cmps
mov
cmps
or
inc
loopne
xchg
hlt
and
push
cli
cmps
sahf
and
test
or
inc
popf
hlt
cmp
sbb
cmp
jae
pop
mov
cmp
and
mov
lods
aaa
push
mov
push
js
push
sub
dec
jge
inc
hlt
mov
shr
sub
mov
add
jge
outs
leave
jmp
int
imul
fadd
fidiv
mov
sbb
sub
(bad)
std
mov
jmp
in
popf
mov
repz
sbb
out
xor
jl
inc
jp
scas
add
sti
pop
fwait
adc
mov
sbb
or
and
(bad)
call
retf
push
stos
leave
rcl
mov
pop
ret
adc
lock
pop
cld
fld
inc
sub
mov
push
iret
add
cld
jbe
cld
push
xor
pop
mov
mov
hlt
sbb
stc
push
xchg
sti
xor
bound
jnp
pop
pop
daa
and
mov
pop
mov
pop
data16
rcl
adc
sti
fbstp
mov
test
sbb
dec
sbb
cmps
sub
jecxz
push
addr16
cmp
inc
leave
outs
hlt
(bad)
dec
add
sub
xchg
jno
xor
jne
mov
loopne
add
cmp
xchg
movs
inc
or
xlat
inc
and
ins
sub
push
movs
sbb
mov
xchg
int
and
xor
mov
mov
inc
mov
cmp
sbb
dec
sbb
inc
sub
(bad)
mov
adc
push
es
(bad)
das
sti
sbb
cmp
cmps
out
fs
loope
int3
in
jl
cs
sub
mov
es
and
ds
jne
add
ss
mov
pusha
pop
es
adc
pop
add
rcl
nop
push
push
adc
or
stos
fstp
je
pop
pop
sbb
and
lea
adc
xchg
shl
dec
cmp
es
add
ss
ror
or
xchg
dec
dec
retf
jbe
bnd
or
mov
(bad)
mov
sti
fld
stos
movs
and
add
add
push
sbb
scas
aas
cdq
push
aas
jge
sub
mov
test
or
int
test
push
and
repz
sbb
jbe
sub
mov
mov
xchg
shr
add
mov
fidivr
lods
push
popf
add
add
and
xor
int3
sub
dec
xor
mov
ja
and
adc
cdq
or
mov
lahf
xor
or
movs
adc
cmp
iret
daa
pushf
ss
mov
repnz
push
jo
push
test
push
gs
mov
pop
jns
aaa
push
sti
or
ja
fistp
bound
test
cmovbe
jl
or
scas
xchg
imul
sub
pop
ficomp
xlat
mov
mov
sbb
(bad)
ja
sub
iret
ins
inc
sub
jbe
int
pop
and
push
imul
adc
xchg
xchg
mov
outs
out
jno
bound
push
scas
dec
mov
sbb
icebp
sbb
mov
(bad)
xchg
into
lods
cli
dec
jle
icebp
hlt
mov
or
mov
ror
lahf
dec
sbb
mov
sub
daa
cld
jbe
aas
popa
adc
(bad)
mov
loop
movs
push
retf
pop
daa
xchg
rol
fidivr
mov
mov
test
and
mov
push
and
js
call
cmp
mov
mov
daa
sti
mov
or
inc
stos
outs
jmp
sti
or
icebp
iret
cmp
ror
aad
out
mov
push
enter
pop
jecxz
out
rcr
fistp
loopne
add
xchg
fcomp
mov
sub
xor
ficom
pop
mov
adc
xchg
shl
fcos
pop
test
dec
popf
stc
int3
in
inc
sub
or
popa
sub
sar
movs
xor
fdivr
addr16
cmc
lea
ja
jp
and
ds
push
bound
mov
gs
repnz
add
xchg
in
test
mov
cmps
sub
sub
push
push
inc
lods
push
and
mov
cmp
mov
cld
dec
fwait
(bad)
add
fild
daa
xchg
mov
push
push
aaa
(bad)
mov
dec
out
jns
adc
adc
push
mov
or
mov
xor
sbb
mov
sbb
xrelease
icebp
fild
retf
adc
sahf
out
dec
push
dec
leave
and
mov
pop
aad
and
std
push
jns
ret
aad
out
push
fst
enter
into
cmps
ja
repz
jbe
and
push
adc
call
ret
pop
dec
in
sub
mov
sub
mov
jnp
adc
push
(bad)
lock
fild
mov
push
inc
ret
imul
popa
mov
add
jmp
rcr
aam
fiadd
sahf
test
shl
jg
sbb
pop
xlat
jns
or
add
pop
cdq
add
sub
(bad)
in
loope
mov
mov
sub
in
push
sbb
mov
pop
aas
jmp
cmp
add
jmp
fdiv
xor
retf
pop
ror
mov
hlt
sub
add
add
stos
adc
ss
out
dec
pusha
sbb
adc
jns
jo
gs
jge
mov
jne
mov
les
sbb
(bad)
xor
xchg
inc
or
xchg
ins
adc
mov
pusha
neg
pop
fnstsw
cdq
dec
adc
test
hlt
jmp
ja
xor
mov
pushf
xchg
aam
dec
and
sub
cmp
inc
jbe
int
lods
mul
cmc
mov
inc
psrlq
repnz
hlt
push
(bad)
out
push
add
data16
(bad)
push
outs
add
cmp
imul
clc
pop
into
jo
div
test
scas
push
lods
jbe
mov
adc
xchg
cmp
xchg
pop
arpl
pop
xor
mov
jnp
add
push
mov
jne
pop
cld
int3
pusha
out
pusha
jns
test
xchg
mov
punpcklwd
mov
jmp
sub
icebp
add
imul
sti
in
ret
cs
and
aam
jmp
mov
push
repnz
test
sbb
popa
fistp
mov
add
into
xlat
js
clc
leave
push
adc
mov
fidiv
adc
pop
enter
xchg
pop
clc
xchg
aaa
int3
out
into
sbb
ds
enter
cmp
xor
imul
mov
lods
cs
mov
mov
lds
jb
imul
xchg
adc
pusha
(bad)
jb
xchg
in
pop
repz
pop
pop
jmp
sbb
sbb
mov
sbb
dec
and
dec
jmp
call
fdiv
imul
jmp
mov
pop
stc
loop
(bad)
inc
push
data16
push
hlt
leave
movs
popa
xor
and
inc
mov
xor
test
cli
outs
xor
pop
mov
mov
(bad)
mov
cmp
push
adc
or
inc
push
(bad)
in
push
push
inc
jmp
test
cs
bound
shr
test
pop
pop
push
jne
push
or
sbb
xor
mov
push
mov
jb
push
into
and
inc
add
pop
int3
ins
into
repz
(bad)
mov
test
ja
mov
mov
shr
ins
xchg
jmp
das
aad
jecxz
xor
pop
sub
adc
push
lods
jmp
jl
lods
add
dec
dec
xlat
out
fild
pushf
cli
test
jmp
mov
cmps
hlt
leave
inc
sub
inc
or
and
into
sbb
(bad)
inc
movs
mov
call
cmp
fwait
xchg
xchg
dec
iret
addr16
pop
xchg
call
cld
int3
inc
dec
jno
sub
cmp
adc
imul
test
ins
xor
aaa
cmp
mov
mul
sbb
(bad)
mov
cmp
push
cmp
dec
mov
mov
(bad)
in
adc
jno
inc
mov
add
or
repz
imul
jb
aas
ja
(bad)
aad
mov
mov
aaa
fs
enter
fs
arpl
push
dec
cmp
xor
mov
sahf
je
aad
ins
jmp
sbb
in
and
int
cdq
into
fucomp
xchg
int3
mov
iret
jno
mov
xchg
icebp
pusha
(bad)
pop
pusha
dec
in
lock
(bad)
inc
mov
xor
fstp
mov
xor
cmp
and
and
sbb
sub
fwait
xlat
mov
das
push
inc
mov
dec
mov
adc
jae
push
cmps
pop
fnstenv
and
js
scas
xchg
pop
push
inc
cdq
add
ror
mov
fstp
mov
(bad)
cmp
loop
jae
scas
(bad)
fldcw
stc
add
sub
test
jae
test
inc
and
xchg
fldenv
aas
stos
jb
pop
pop
xor
pop
pop
fsub
stos
out
push
mov
pop
pusha
mov
cld
js
(bad)
inc
pop
(bad)
(bad)
leave
cmp
push
mov
(bad)
cmp
xchg
imul
fldenv
jmp
cmp
and
adc
test
lea
mov
add
sti
aad
inc
jb
sbb
iret
inc
dec
cmp
pop
jno
imul
jge
inc
jle
and
mov
stos
rcl
push
jmp
inc
and
outs
imul
aas
sub
leave
stos
sbb
cmp
(bad)
rcr
dec
pop
xchg
dec
retf
cmp
dec
add
idiv
pop
aas
push
fs
shl
fidivr
push
test
cmp
cmc
neg
ins
pop
xchg
cmp
push
pop
lods
inc
mov
fld
pop
out
fisubr
dec
push
xor
nop
mov
ds
and
mov
jbe
fld
(bad)
fdiv
retf
out
xor
mov
out
sub
gs
and
mov
sbb
mov
jge
mov
pop
js
popf
(bad)
xor
pop
mov
push
stos
inc
aam
push
jns
cmp
test
mov
loope
lds
sub
jnp
mov
dec
movs
and
mov
div
mov
mov
jecxz
scas
nop
mov
neg
jmp
dec
jnp
cmp
jge
inc
push
cmps
test
bound
sbb
das
enter
xor
add
aam
test
adc
inc
(bad)
out
sub
fisttp
adc
sbb
div
daa
fcmovu
cvtpi2ps
jnp
mov
fldenv
mov
xor
aam
scas
sti
test
out
sbb
enter
call
inc
adc
daa
jno
push
dec
bound
mov
inc
jno
repz
jb
add
fistp
cmp
jno
fstp
out
push
jmp
cs
mov
pusha
sub
into
push
push
xor
cmc
outs
dec
mov
fidivr
mov
dec
setg
and
std
sar
add
imul
movs
in
in
and
adc
mov
and
mov
xor
push
repnz
mov
mov
sub
aam
or
inc
cdq
sub
pop
shl
lods
sub
xor
push
std
sub
out
ds
fs
sbb
jno
xor
ror
inc
shr
and
mov
xor
adc
ror
xor
aaa
pushf
aad
cwde
mov
rcl
imul
xchg
(bad)
xor
js
pusha
pop
shl
pop
ret
mov
scas
(bad)
dec
mov
and
leave
mov
stos
sub
add
pop
pop
mov
mov
stos
ins
(bad)
xlat
jns
sar
jmp
ins
pop
dec
icebp
cmp
adc
(bad)
outs
mov
xor
fimul
aam
mov
into
rcr
cdq
iret
aas
cmp
out
jbe
outs
lds
out
push
dec
mov
aad
or
jmp
sub
xor
push
jns
adc
xor
(bad)
lahf
xchg
or
shl
xor
xor
sub
aam
add
sar
aad
leave
sahf
imul
daa
dec
(bad)
in
mov
mov
aad
mov
ja
jb
jb
push
(bad)
sub
mov
loop
push
(bad)
nop
cmp
sbb
daa
test
xchg
and
mov
cld
movs
lds
push
cmc
and
pop
ret
sbb
cdq
bound
xchg
sbb
sub
fnstenv
or
xor
call
arpl
or
jae
inc
mov
(bad)
or
pop
test
and
cmp
push
mov
adc
cmp
in
call
jl
jmp
dec
jp
mov
in
ja
aam
and
call
inc
test
lea
out
(bad)
add
addr16
pop
xor
adc
jmp
int3
sub
add
stos
popa
xchg
xchg
imul
push
movs
sbb
mov
push
mov
push
lock
sbb
adc
pop
mov
and
sub
in
and
or
pop
ret
mov
lock
mov
outs
cmc
int
push
lds
bound
ftst
mov
cld
inc
ret
cmc
inc
mov
xchg
pop
push
iret
mov
and
mov
dec
dec
dec
and
xchg
add
jmp
pop
nop
mov
fadd
jg
aaa
and
push
mov
enter
mov
movhps
pop
repz
lahf
xor
mov
xchg
imul
sub
vmovupd
int3
aaa
icebp
and
movs
dec
enter
aad
or
ret
clc
cld
jae
jle
cwde
mov
xchg
mov
inc
inc
lods
idiv
add
imul
inc
and
push
inc
mov
pop
lahf
sub
pop
mov
cli
jp
fwait
dec
sbb
int
pop
mov
pop
out
xchg
pop
movs
jb
fisub
fisub
cmp
pop
jg
push
lahf
imul
clc
(bad)
cdq
cmp
dec
sub
cwde
lea
sub
sub
add
mov
std
ins
loopne
fiadd
js
add
sub
mov
setb
out
mov
out
pop
mov
lea
pop
fist
xlat
mov
mov
add
add
sub
sbb
dec
popa
pop
gs
cld
and
mov
mov
sbb
sti
data16
es
sbb
sub
imul
loop
cld
dec
inc
sar
sbb
jmp
push
xchg
mov
lods
fadd
sbb
icebp
jmp
loopne
and
xchg
aas
pusha
clc
imul
sub
adc
ja
sbb
outs
pop
jno
jmp
and
xchg
out
or
add
movs
aas
mov
(bad)
cmps
rcl
xchg
pop
(bad)
imul
loopne
mov
ror
fistp
push
nop
(bad)
pop
cmps
inc
xchg
stos
and
xor
out
sbb
jmp
push
div
(bad)
aad
(bad)
mov
push
mov
cmp
lods
push
xor
fidiv
test
add
mov
adc
loope
mov
ins
push
pop
(bad)
ja
(bad)
or
sbb
xchg
repnz
and
pop
aas
push
inc
out
mov
mov
repnz
test
or
pop
lods
mov
leave
out
pop
sbb
push
jb
shr
movs
mov
mov
push
jae
nop
pushw
add
sbb
push
sub
inc
sub
mov
out
mov
popa
xchg
dec
hlt
pop
retf
outs
(bad)
and
adc
jg
mov
pop
fsub
popf
push
dec
aas
ret
push
sub
mov
test
std
xchg
push
mov
sub
pop
sbb
and
pop
or
jle
addr16
xchg
(bad)
mov
jmp
out
stos
adc
pop
jmp
jg
add
jecxz
lds
ds
mov
int
lods
mov
aad
adc
dec
xor
out
push
(bad)
add
daa
ds
call
repz
mov
outs
test
inc
mov
pop
pop
es
push
inc
mov
cmp
jae
pop
movs
test
cli
out
cs
or
sti
fcomp
shl
popf
xchg
mov
adc
fistp
loopne
jle
vmovntpd
sub
or
cld
sahf
add
aam
sbb
mov
add
dec
mov
sub
cwde
xchg
shl
jmp
sbb
test
mov
jbe
add
push
mov
pop
sti
mov
and
sub
inc
in
mov
jae
jg
push
fcomp
leave
sub
and
test
push
cmp
adc
lods
sub
repnz
mov
pushf
jae
push
js
cld
stos
scas
js
sub
jne
iret
push
or
ror
out
cmc
jo
pop
adc
add
icebp
mov
fld
mov
add
pop
mov
mov
sbb
sub
mov
add
rcr
loop
or
aad
idiv
shr
xchg
mov
movs
jmp
(bad)
fidivr
mov
or
icebp
mov
in
scas
inc
das
dec
xchg
out
sahf
pop
out
dec
or
add
jns
test
gs
sub
and
inc
call
lods
sbb
in
mov
imul
icebp
sbb
rcl
enter
xchg
cmp
cmp
or
mov
and
mov
icebp
shl
or
add
mov
xchg
mov
pop
(bad)
shl
ss
fs
sub
movs
sbb
mov
data16
mov
rcr
out
es
xchg
xchg
mov
arpl
sbb
repnz
mov
mov
add
stos
sbb
jnp
xor
lahf
imul
pop
push
in
xchg
and
inc
mov
(bad)
imul
shr
mov
cwde
dec
sbb
jb
push
mov
add
pop
mov
int
sub
inc
xchg
loop
into
xlat
lods
cdq
popf
rcr
push
rcr
cmps
int3
jmp
ds
stc
nop
mov
clc
sbb
rcr
dec
test
mov
inc
and
aad
or
loopne
push
mov
dec
retf
daa
mov
pop
stos
outs
xchg
fsubr
call
fmul
rol
lods
xor
sub
dec
movs
stc
or
cwde
mov
ds
call
imul
into
ds
sub
retf
xchg
leave
jno
test
push
inc
cdq
or
scas
pop
xchg
jl
cmc
ds
add
or
push
adc
ins
xor
fs
xchg
push
mov
xlat
adc
push
add
jno
or
enter
sub
jb
mov
jge
mov
and
fild
js
ss
adc
out
clc
sub
addr16
fsubrp
and
add
cmp
mov
xchg
aas
push
dec
mov
push
add
mov
dec
leave
add
sub
jp
or
and
xor
pop
pop
mov
je
stc
fsub
inc
rol
hlt
out
inc
xor
mov
push
fcom
and
fcomi
xor
xchg
mov
dec
scas
movs
cmp
add
(bad)
jg
mov
mov
or
sub
xchg
ret
jg
sbb
test
mul
scas
add
xchg
sbb
jns
mov
push
mov
xor
mov
lea
jb
dec
xor
cs
out
ret
jae
aam
imul
popf
in
js
and
xchg
iret
pop
or
fadd
in
sbb
ja
xchg
idiv
das
adc
retf
xor
add
push
sbb
cmp
mov
ret
xchg
(bad)
leave
rol
push
xchg
rcl
and
arpl
sti
or
push
jmp
aad
leave
repz
rcl
mov
add
jg
ss
dec
stc
xchg
jg
iret
into
push
adc
or
and
xor
loopne
daa
xor
xor
jmp
jge
mov
or
clc
or
xchg
jle
imul
bound
jbe
or
fild
mov
push
pop
test
push
push
in
imul
enter
dec
in
jmp
ins
adc
push
or
xor
cld
add
mov
cli
sub
mov
not
mov
rcr
adc
rcl
loope
cld
inc
cld
push
vpunpcklbw
outs
hlt
mov
xor
sar
sub
xchg
shl
mov
icebp
in
and
push
mov
dec
ss
movs
and
cld
xor
push
fst
mov
in
jle
aaa
pop
jo
mov
lods
and
mov
repz
fist
mov
add
shl
xchg
lahf
leave
push
xor
into
jmp
xor
push
jae
sbb
jecxz
cdq
pushf
xrelease
and
jne
push
cmps
cmps
sbb
in
jmp
pop
xor
scas
inc
mov
shr
loope
add
les
add
fcmovne
sbb
test
sbb
mov
loop
lea
fnstsw
dec
cmp
dec
add
push
fidiv
ret
add
push
mul
hlt
and
in
dec
and
icebp
(bad)
jo
dec
jnp
shl
test
push
jae
stos
in
add
aaa
mov
rol
rcl
xchg
or
ss
repz
cmps
inc
mov
xchg
and
adc
sbb
and
and
gs
and
xchg
mov
adc
fsubr
sbb
cmc
xchg
stc
jle
pop
ror
cmps
gs
maskmovq
dec
test
or
pop
mov
aam
lock
and
dec
(bad)
fadd
xchg
cmp
add
mov
mov
push
mov
xchg
add
push
fstp
push
lea
push
(bad)
or
mov
out
inc
shl
cmp
dec
shl
jl
int
pop
js
sbb
dec
(bad)
loopne
xchg
movs
jge
jg
sub
rol
arpl
scas
sub
rcr
sahf
pop
pop
sbb
cmc
pop
(bad)
cli
and
push
dec
movs
pop
jne
lods
adc
push
pop
xor
nop
pop
ds
jmp
adc
mov
outs
ja
into
sti
push
fldenv
jmp
(bad)
push
mov
out
popf
ret
mov
shr
cmp
pop
cmp
mov
or
jno
not
mov
std
xor
jmp
add
shl
or
call
mov
jp
movs
jno
in
popa
neg
dec
or
rcl
fs
jecxz
cdq
dec
xchg
adc
movs
mov
ins
(bad)
imul
adc
je
xor
mov
ret
data16
xchg
push
test
shr
call
inc
ret
js
(bad)
jg
mov
(bad)
cld
mov
push
call
xchg
call
(bad)
popf
mov
mov
mov
cs
add
cs
jns
fldcw
push
xchg
imul
push
inc
je
xchg
mov
sub
jg
out
out
fild
inc
imul
mov
and
inc
jmp
repz
xor
mov
and
push
iret
xchg
jmp
les
mov
mov
dec
inc
stos
jge
or
bound
(bad)
std
stc
stos
pop
repz
xchg
and
adc
sub
into
adc
mov
jnp
mov
add
scas
mov
sbb
add
(bad)
adc
mov
lds
iret
sti
xor
out
loopne
rcr
je
mov
jnp
or
adc
xchg
pop
and
out
dec
test
cmc
sub
rcl
adc
sub
inc
inc
(bad)
in
mov
xlat
and
bound
jecxz
xchg
ds
xor
daa
not
outs
int
in
xor
ret
sbb
mov
pop
pop
or
dec
pop
mov
mov
in
push
mov
sbb
dec
add
xor
adc
xor
dec
jmp
xchg
nop
mov
shr
ins
mov
xchg
xor
push
pop
out
add
shr
nop
loopne
addr16
adc
jne
aad
outs
test
jnp
icebp
dec
mov
adc
mov
sub
pop
add
das
popa
std
stos
and
inc
cmp
cmp
dec
sub
sub
retf
sub
and
jecxz
leave
mov
cmp
xchg
mov
icebp
popf
adc
and
adc
push
cmp
arpl
outs
xchg
arpl
adc
lock
or
mov
in
(bad)
or
inc
xchg
push
imul
mov
cmps
icebp
in
cld
(bad)
fstp
xchg
iret
cdq
fs
rcr
rol
inc
ds
int
adc
adc
push
int3
mov
sub
fwait
movs
lock
cwde
add
(bad)
repz
hlt
inc
(bad)
inc
mov
pop
mov
pushf
lds
mov
stc
inc
mov
sbb
dec
js
fsub
mov
sbb
mov
add
(bad)
cmp
jmp
movs
imul
nop
fsubr
inc
int
shl
test
nop
pop
fidiv
xor
call
mov
pop
in
mov
and
ins
or
sahf
xchg
(bad)
mov
or
mov
inc
lock
fdiv
sbb
add
add
lods
(bad)
cs
mov
idiv
jb
pop
pop
daa
jle
adc
mov
mov
xchg
js
loope
mov
mov
ret
addr16
jb
mov
sti
and
or
sbb
cmc
movs
lock
ret
inc
movs
pusha
jge
cmc
pop
adc
adc
mov
gs
jno
shl
pop
inc
dec
inc
cmp
pop
jae
mov
call
jns
mov
pop
out
retf
jbe
sub
cmp
or
addr16
jmp
js
mov
fsub
pop
sbb
mov
shl
sbb
xchg
inc
sbb
add
aad
jl
dec
movs
lods
mov
pushf
ror
sub
enter
clc
or
cdq
ins
int3
mov
inc
mov
push
push
lea
test
nop
cmp
mov
loop
fnstenv
pop
mov
movs
and
push
sbb
jnp
sbb
mov
out
push
mov
cmps
xor
leave
and
fisub
mov
sbb
(bad)
mov
mov
or
fmul
pop
loope
xchg
mov
hlt
mov
cmp
inc
add
xchg
ret
lock
lock
xchg
mov
data16
popf
mov
aas
and
jmp
mov
loop
push
add
pop
dec
add
sahf
sbb
out
sub
or
xor
call
or
rcl
call
(bad)
xchg
mov
aas
call
xor
inc
(bad)
aam
fst
repnz
and
dec
mov
pop
scas
das
pusha
pop
std
cmp
xchg
jbe
fist
push
or
in
addr16
or
aad
sar
add
xlat
in
push
push
mov
data16
cs
dec
and
rol
nop
xchg
fistp
mov
push
xor
aam
jle
add
fistp
cs
add
icebp
stc
adc
push
mov
mov
clc
xchg
push
lock
mov
push
mov
inc
mov
inc
mov
and
xor
out
xor
jo
mov
in
add
cmp
jecxz
mov
popa
dec
cld
push
sub
cmp
mov
push
in
lods
mov
sub
ja
rol
scas
jbe
cmp
das
push
test
cld
mov
mov
cli
mov
arpl
jle
pop
aam
clc
sbb
out
pop
jmp
cld
aaa
es
mov
je
cdq
aas
cli
add
mov
cmp
add
push
aas
xor
mov
in
and
(bad)
xor
jg
mov
pop
bound
sub
pop
mov
sbb
ds
jl
adc
dec
add
mov
or
fwait
dec
ja
jp
cmp
repz
pop
(bad)
xchg
inc
jge
and
mov
call
jne
dec
sbb
das
xchg
(bad)
push
imul
lods
dec
push
push
or
stos
fisub
xchg
xor
mov
das
push
xchg
jae
inc
jo
pop
mov
jno
mov
call
mov
js
out
lock
pop
push
dec
or
sub
cmp
nop
add
fsub
daa
pop
and
retf
fistp
mov
xor
mov
cdq
aas
jne
mov
inc
iret
adc
repz
xor
ret
pop
fldenv
mov
push
rcl
mov
rcr
jle
(bad)
enter
jmp
retf
fmul
jae
cmps
ins
outs
icebp
les
xlat
ins
repnz
mov
rcr
cmp
xlat
push
and
sbb
call
(bad)
ret
dec
jmp
out
mov
jle
mov
std
jp
or
push
sbb
or
mov
sub
pop
and
xor
mov
shl
mov
test
add
data16
mov
add
inc
js
pop
scas
jbe
scas
or
jp
pop
lds
rcr
add
or
in
pusha
push
(bad)
in
inc
sbb
out
hlt
(bad)
cdq
adc
xor
and
mov
sub
inc
push
push
or
mov
jns
and
cld
cmp
push
int
mov
add
xchg
idiv
inc
adc
out
es
call
inc
pop
xor
mov
sub
dec
xchg
cmp
xchg
sbb
jno
(bad)
ins
inc
sbb
mov
ins
aaa
pop
pushf
dec
and
test
imul
xor
adc
mov
repnz
retf
add
push
pop
xchg
test
cs
or
nop
and
mov
loop
mov
adc
aad
mov
in
leave
mov
sbb
popa
mov
adc
xchg
push
mov
in
sub
jb
cmp
jmp
sub
xchg
and
(bad)
jp
iret
adc
div
pushf
and
mov
popf
xchg
enter
in
pop
xchg
jg
in
dec
xchg
sahf
std
push
or
mov
lods
movs
push
xchg
or
jge
cld
adc
retf
xchg
dec
xor
mov
jmp
outs
jae
ds
and
push
mov
stos
rol
sub
dec
int3
mov
je
xchg
xchg
mov
mov
hlt
ret
add
push
outs
clc
add
fs
pop
mov
(bad)
addr16
lahf
stos
rcl
imul
mov
in
mov
mov
push
and
test
jne
mov
loop
xchg
fs
and
or
mov
xor
loopne
retf
or
mov
and
or
dec
inc
cmps
and
in
add
xor
js
dec
push
in
jl
and
stos
inc
outs
sub
push
mov
js
adc
xor
sub
int3
mov
loop
mov
pop
mov
loope
aas
jge
bound
pop
pop
test
inc
jmp
pop
sti
repnz
mov
outs
sbb
pop
in
jns
cwde
dec
cs
stos
pop
xchg
inc
jecxz
in
addr16
test
je
in
clc
inc
lock
push
enter
sbb
xchg
fs
xchg
jo
push
je
cli
push
pop
movs
aad
mov
int3
inc
add
fidivr
and
jns
mov
popf
mov
adc
pop
inc
fwait
mov
fbld
outs
push
push
pop
ja
dec
(bad)
cmp
mov
(bad)
fsubr
scas
adc
xchg
jns
sbb
jnp
int
cmp
icebp
add
cli
ja
cwde
fs
inc
dec
ror
lods
(bad)
sbb
or
cmp
ss
jae
aad
sub
jo
xchg
mov
(bad)
repz
jp
ffreep
std
fwait
ret
jmp
pop
int3
call
aad
je
or
jae
ret
xchg
jl
adc
mov
pop
push
dec
(bad)
sub
xor
sbb
xchg
push
outs
sbb
movs
inc
push
in
and
cli
int3
imul
repz
pusha
lods
push
fild
popf
cwde
lock
aas
fcmovnu
cwde
jns
push
pop
imul
cmp
fstp
dec
jnp
data16
aam
movs
aaa
pop
aas
inc
sub
call
or
jp
pop
out
and
mov
iret
movs
xchg
push
push
jno
add
sbb
mov
mov
inc
push
mov
cmp
jae
icebp
jae
mov
loope
repnz
pop
mov
pop
in
xor
(bad)
or
mov
mov
sbb
push
aam
jb
dec
fs
movs
ds
test
test
pop
mov
xchg
fbld
pop
enter
fcomp
push
jne
sar
loopne
in
xchg
push
xchg
push
cmps
out
ret
js
push
pop
mov
jb
push
push
xor
mov
in
pop
fsubp
mov
(bad)
cmp
sbb
ja
popf
mov
and
push
push
lahf
add
sar
push
shl
mov
fmul
in
clc
loop
scas
sbb
mov
and
pop
setns
inc
lock
mov
int3
aaa
xchg
rcl
sti
jl
je
or
mov
push
xor
jle
ficom
fstp
mov
pop
fild
push
ret
xchg
jo
pop
stos
jp
jmp
fiadd
js
lea
mov
adc
repnz
inc
ja
xor
out
xlat
bound
shl
mov
and
fwait
pop
mov
jmp
das
popa
jno
or
jecxz
std
xor
mov
call
out
pop
jmp
push
mov
ror
lea
into
lods
fidiv
mov
jns
stos
mov
or
movs
mov
xchg
cmp
push
shl
lods
(bad)
popf
lds
sub
cmps
fwait
jp
adc
std
inc
stos
mov
retf
cwde
jg
ins
sub
pop
stos
xchg
dec
arpl
retf
in
rol
and
rol
pushf
(bad)
dec
rcl
xchg
nop
mov
les
jmp
fist
xchg
jl
add
sub
and
and
xchg
mov
or
pop
jns
daa
pop
in
cmp
pop
push
and
adc
push
add
in
aaa
mov
mov
xlat
pop
popa
das
push
mov
jae
mov
push
lods
popa
pop
test
or
and
push
sub
or
icebp
xchg
xor
int
add
jp
dec
or
jge
pop
outs
mov
xchg
scas
(bad)
stos
pop
adc
push
(bad)
cmp
mov
das
xchg
jbe
dec
leave
mov
and
js
mov
fist
push
out
sahf
inc
ret
sbb
add
mov
leave
nop
xlat
out
call
bound
test
dec
xchg
mov
mov
pop
mov
int
cdq
cwde
jnp
mov
xor
and
mov
stos
inc
or
push
xchg
cmp
sub
fcomp
cmp
cmp
test
int
cmps
enter
movs
enter
xor
je
aaa
and
ss
xchg
and
and
cwde
out
cmps
(bad)
and
dec
mov
jnp
pop
not
jl
out
leave
add
adc
cmp
sbb
js
loopne
mov
xchg
cmp
cli
cmps
sbb
mov
xchg
mov
out
div
sbb
fadd
pop
pop
aas
lahf
xor
(bad)
jmp
sbb
jo
sar
xchg
sbb
cmps
imul
rcr
(bad)
jmp
stc
add
fucomi
psubsw
and
dec
push
cli
dec
or
push
popf
outs
mov
sbb
xor
mov
xchg
(bad)
sar
ja
sub
test
(bad)
call
scas
out
mov
sub
push
pop
jmp
push
xchg
sbb
sub
inc
lock
nop
xor
adc
addr16
clc
int3
ins
fistp
xchg
in
call
js
hlt
pop
cld
jbe
and
or
stos
ins
popf
fdivr
add
pop
mov
fdiv
lock
or
inc
ror
jne
or
mov
cdq
adc
int
jge
and
xor
movs
jmp
mov
in
inc
scas
test
cdq
adc
pop
mov
push
mov
xor
xor
or
imul
hlt
pop
or
cli
xchg
push
arpl
cmps
in
push
les
add
out
loop
pushf
loop
mov
in
call
jl
pop
push
dec
push
int3
lods
pushf
mov
pop
fcmovnb
enter
scas
or
cld
outs
mov
jle
sbb
pusha
sbb
cld
adc
aad
and
inc
stos
loope
sbb
inc
dec
aaa
push
xor
inc
xchg
imul
and
sbb
mov
and
add
and
or
ret
int
fidivr
cdq
outs
div
imul
sub
aam
and
push
and
adc
mov
hlt
jns
xchg
add
jl
aam
imul
test
outs
out
xchg
bound
cmps
mov
in
loopne
rcr
repnz
cld
iret
fstp
cli
adc
daa
jb
inc
clc
xchg
imul
inc
and
out
movs
adc
xor
pop
push
and
cmp
fst
lahf
mov
lock
sub
adc
jg
leave
push
ja
xchg
divps
mov
or
je
inc
xchg
cdq
icebp
add
lods
mov
adc
scas
aad
loope
adc
call
mov
push
add
in
mov
rcr
cmp
nop
cmp
push
cld
xor
cmp
test
hlt
hlt
xchg
call
jns
mov
cmps
int
dec
mov
add
cmc
jmp
mov
out
mov
and
out
popa
xor
xor
mov
cmc
or
inc
or
or
ret
daa
out
popa
mov
adc
movs
mov
stos
dec
xor
and
fs
data16
into
lds
scas
mov
enter
daa
jle
pop
sub
test
mov
jp
mov
sbb
ins
add
enter
imul
sbb
cmps
and
sbb
adc
mov
and
and
and
add
repz
test
aas
cmc
push
or
mov
ins
sbb
or
pop
lock
mov
push
dec
shr
nop
movs
(bad)
jmp
dec
pop
sub
xchg
sub
test
pop
popf
jae
inc
adc
inc
add
movs
jmp
mov
movs
inc
mov
out
inc
popw
call
xor
out
dec
call
lods
mov
les
aas
je
(bad)
or
pop
mov
stc
out
sbb
push
je
test
sbb
or
in
push
dec
or
fidiv
call
sub
pop
and
mov
pop
ds
ins
(bad)
push
xchg
inc
shl
gs
jmp
xor
xor
push
lds
adc
stos
lods
cdq
jecxz
leave
and
out
mov
xlat
mov
mov
mov
test
(bad)
push
xchg
div
add
bound
movs
sub
pop
cdq
call
cwd
mov
retf
mov
imul
sub
or
mov
xor
cli
and
pop
and
dec
daa
jo
jae
test
inc
jge
pop
adc
and
xchg
jno
push
movs
rcr
ins
push
movs
xor
jne
xchg
mov
rcl
xchg
es
adc
add
scas
cwde
mov
idiv
xchg
hlt
sub
das
pop
fisubr
pop
cs
fiadd
daa
repnz
inc
(bad)
lahf
or
movs
jb
lods
adc
test
dec
sbb
xchg
setne
out
ror
es
call
inc
fsubr
jne
je
fdivr
lds
fild
test
ins
xchg
sbb
jmp
jecxz
or
data16
jecxz
add
and
test
jp
aaa
fbstp
mov
jg
test
leave
mov
js
xchg
sar
xchg
push
xchg
mov
rcr
dec
cmp
in
ror
mov
add
jmp
test
retf
push
dec
or
cmp
push
cmp
(bad)
mov
stos
cmp
and
ss
pop
aas
mov
push
mov
fsub
adc
or
or
enter
add
pushf
lods
mov
xchg
je
shl
push
mov
mov
jge
sub
cmp
pop
daa
test
or
(bad)
aaa
mov
mov
push
mov
test
dec
out
in
sar
das
imul
add
adc
mul
cli
(bad)
stos
scas
jmp
hlt
adc
test
pop
loop
jb
ret
in
cmps
sub
das
sahf
mov
lea
xchg
cmc
(bad)
(bad)
mov
(bad)
fldenv
add
shr
adc
lock
popa
jnp
lock
pushf
ficom
jl
inc
mov
iret
das
mov
xor
jnp
loope
push
mov
icebp
jns
imul
fistp
js
inc
cld
frstor
repz
(bad)
sti
sub
repnz
cdq
push
test
fnstcw
inc
outs
fnsave
xor
xchg
test
sbb
cmc
ja
push
dec
mov
or
and
in
push
xor
xchg
dec
mov
adc
adc
xor
imul
cmp
adc
ins
fstp
mov
fst
test
ror
jnp
pop
fcomip
repnz
cmp
jb
imul
iret
sbb
out
lahf
stc
inc
cmp
cmp
pop
ss
inc
sub
mov
leave
mov
add
inc
xchg
fild
sbb
cmp
mov
imul
jp
cmovp
ins
ins
sub
sbb
pop
mov
xchg
movs
or
popf
jnp
jle
adc
lds
adc
stos
jecxz
out
repz
dec
cwde
pusha
movs
mov
dec
loop
fnstenv
inc
mov
mov
inc
pop
pop
xor
sahf
push
jg
sub
shl
add
fs
(bad)
(bad)
loope
clc
pop
shl
mov
fimul
icebp
pushf
pop
jae
fstp
mov
call
xor
in
dec
cli
jecxz
pop
mov
lods
jo
push
imul
push
jo
adc
push
les
cmp
mul
stos
mov
xor
or
js
dec
pop
int
sub
jae
std
pop
mov
sub
xchg
ret
cmp
clc
cld
inc
or
xchg
test
popf
jl
imul
lds
xor
xchg
xchg
xor
popa
fmulp
daa
dec
test
call
retfw
sub
lods
pusha
mov
sbb
jp
ffree
adc
xchg
mov
dec
std
test
dec
jp
test
cmp
push
mov
sub
add
and
pop
fwait
sbb
sbb
mov
fwait
stos
js
mov
int3
or
mov
add
fnstsw
cli
aad
push
and
pop
sbb
popf
cmps
or
(bad)
push
xor
retf
cmp
in
mov
mov
in
lods
int3
ficomp
(bad)
fidiv
ret
loope
lds
lahf
adc
push
add
lock
pop
cs
out
call
pslld
rol
das
fdiv
in
cli
cmp
push
lahf
jle
cmp
xchg
mov
xchg
pushf
repz
mov
call
sub
push
and
ins
cmps
clc
mov
push
repz
aas
jbe
sub
adc
rcl
jmp
mov
jp
xor
rcl
jmp
popf
test
cmp
and
cld
jb
xor
mov
mov
xor
xchg
cli
pushf
pop
(bad)
stc
or
jbe
add
aad
push
adc
pop
je
pop
inc
les
and
mov
jae
ret
ss
fs
xchg
cld
stc
xlat
sub
fld
stc
add
int
jbe
shl
iret
cmps
inc
ja
inc
adc
cmp
sub
out
xchg
xor
jmp
push
push
jmp
dec
pop
add
fild
cmp
(bad)
pop
les
mov
bound
mov
sbb
call
(bad)
sbb
pop
push
in
jno
sti
xchg
xlat
sbb
fldcw
jae
aam
sbb
imul
mov
cmp
mov
jnp
icebp
jecxz
test
add
ret
imul
sub
adc
jge
mov
inc
push
in
shl
mov
mov
mov
dec
pop
push
movs
shr
xlat
mov
xor
neg
repnz
leave
sahf
push
cmp
ret
ror
in
xchg
inc
sbb
pop
out
(bad)
std
dec
ss
cwde
push
js
pop
rol
aam
add
mov
add
js
loope
or
stos
loop
push
mov
std
dec
retf
cld
ficom
lock
adc
fs
sahf
xor
stos
dec
ret
adc
fwait
sbb
(bad)
push
and
fs
mov
xchg
ss
sti
je
dec
mov
mov
mov
retf
inc
sub
iret
out
in
int
pop
mov
stc
ror
gs
push
movhps
fld
sub
stos
cmp
jg
xchg
sahf
ja
xchg
jmp
jmp
or
xchg
dec
out
ja
mov
mov
mov
mov
sub
fwait
push
stos
xlat
xlat
icebp
(bad)
sti
mov
jge
adc
call
cmp
push
out
mul
jb
sub
rcl
pop
imul
shl
in
jmp
inc
pop
adc
ja
mov
or
mov
jnp
inc
push
adc
jb
pop
push
jl
jne
pop
sti
mov
imul
pop
and
std
xor
dec
arpl
leave
cmp
adc
in
mov
pop
push
adc
fmul
nop
inc
and
stos
mov
jge
es
test
jecxz
ss
push
sub
(bad)
(bad)
int3
fs
test
jo
sub
js
popf
je
add
ror
sub
jg
mov
push
aad
stc
fbstp
out
lds
jmp
pop
sub
mov
add
stos
inc
hlt
ss
pop
scas
jo
mov
cmp
(bad)
bound
in
push
or
cmp
fwait
pop
je
mov
icebp
xor
xor
pusha
sbb
mov
and
pop
adc
mul
sbb
mov
push
jecxz
xor
adc
push
int3
int3
test
add
cmp
jecxz
cmp
cmp
add
retf
sbb
cmps
add
mov
mov
jae
pop
adc
or
sbb
fsubr
mov
dec
lea
fdivr
sar
mov
cmp
out
cs
in
repnz
jle
and
push
scas
or
movs
and
je
and
fsub
sti
inc
add
shl
fbld
loop
pushf
mov
push
in
xchg
xchg
lahf
mov
adc
and
icebp
ins
mov
mov
mov
call
cmps
or
loop
jle
in
or
adc
(bad)
push
sbb
pop
push
push
inc
mov
mov
pop
add
xor
adc
xor
xor
push
int3
out
push
pop
dec
and
cs
cmps
mov
int
retf
imul
fwait
or
(bad)
scas
sbb
add
jbe
mov
xor
adc
dec
out
xor
pusha
push
mov
stos
dec
xchg
mov
jnp
inc
leave
test
xor
xor
imul
xor
aaa
rcl
cmp
cmp
mov
ja
add
cwde
mov
mov
mov
push
fst
adc
in
sbb
fldenv
pusha
js
and
adc
lahf
xlat
jecxz
push
pop
inc
and
push
jae
push
dec
push
xor
mov
mov
js
dec
cmp
jp
mov
adc
call
push
push
loopne
cmp
or
push
xor
xor
jge
outs
shr
dec
pop
cmp
xchg
neg
int3
aam
das
lods
inc
aas
mov
lods
or
pop
call
into
xor
call
jno
add
cmp
sub
sbb
sub
pop
ins
aad
mov
pop
jnp
fs
jmp
clc
mov
or
ret
push
ja
dec
sbb
dec
xchg
fsubr
js
stos
cdq
ret
shl
fs
xchg
xchg
ret
rep
daa
fmul
scas
loope
xchg
retf
mov
std
xor
inc
nop
xor
mov
imul
imul
mov
dec
sub
jb
lock
fisttp
mov
(bad)
movs
shl
in
loop
inc
xor
lods
mov
outs
ds
inc
iret
jge
dec
xchg
mov
jp
outs
mov
out
cmps
or
pop
or
jmp
dec
pop
pop
popa
fstp
dec
push
add
pop
push
inc
shl
push
in
add
xchg
rcl
mov
ins
out
into
or
mov
lahf
(bad)
ds
or
or
cmp
add
fld
xchg
cmp
pop
push
jmp
inc
sbb
push
fxch
push
xchg
cmp
adc
mov
rcl
add
xor
sti
add
das
pop
or
push
cmp
es
xchg
jbe
cmps
movs
or
xor
inc
iret
pusha
test
xor
test
jg
add
pop
pop
pop
daa
xor
ret
mov
xchg
mov
mov
lock
push
mov
popa
pop
das
xchg
hlt
mov
jbe
jns
out
push
jno
(bad)
pop
pop
out
mov
movs
push
pusha
(bad)
sahf
das
(bad)
repz
push
popf
xchg
mov
sbb
int3
ret
inc
mov
lahf
pop
cmp
mov
xchg
retf
into
fidivr
retf
pop
mov
mov
retf
push
cmp
stos
push
add
inc
loop
or
and
add
push
int3
pop
mov
call
imul
shr
into
jo
mov
inc
or
test
test
and
aam
sbb
clc
pop
xchg
adc
cmp
aaa
sbb
cld
lock
xor
push
into
push
jecxz
imul
push
mov
xor
stos
mov
xchg
sbb
mov
call
or
ins
pop
mov
repz
cdq
adc
clc
call
dec
loope
xor
shr
xor
int3
into
pop
sub
outs
cmc
popa
push
sbb
and
(bad)
mov
shl
add
(bad)
xchg
jmp
add
rol
mov
daa
out
inc
xor
data16
lods
mov
in
nop
mov
fadd
dec
daa
arpl
pusha
dec
push
push
mov
pop
mov
cmps
aas
sti
dec
(bad)
stc
sub
inc
or
mov
xor
push
add
out
xchg
popa
jmp
int
jno
add
aaa
push
xor
push
jmp
mov
xchg
mov
mov
pop
inc
lahf
rol
movs
stc
ja
out
aam
lods
and
sub
push
jmp
retf
pop
mov
jle
aam
shl
loopne
test
cmps
sbb
aam
fwait
dec
mov
mov
jno
movs
pop
or
mov
cmp
jo
or
test
(bad)
rol
pop
push
xor
jg
jmp
aaa
jge
sbb
or
jno
and
das
xor
aaa
xchg
jmp
inc
enter
shl
lods
jae
sub
mov
jmp
aad
mov
xor
push
adc
hlt
enter
inc
test
gs
jmp
and
inc
addr16
and
push
call
push
sti
jbe
push
pop
ret
rol
ret
mov
mov
push
into
scas
daa
jg
mov
xchg
clc
push
scas
xchg
rcl
push
add
ret
aam
fisubr
iret
ja
lods
fistp
jl
inc
aad
nop
iret
and
push
cmps
pop
push
loopne
pop
pop
xor
sub
add
push
test
fisttp
aam
adc
push
dec
shl
dec
sbb
mov
sar
add
ret
in
adc
mov
dec
scas
add
push
popa
sbb
adc
or
cvtps2pi
movs
cdq
add
cmc
mov
pop
movs
mov
rol
sbb
in
loopne
arpl
pop
jecxz
push
cmp
sub
ins
xor
mov
sti
pop
and
mov
add
or
movs
sbb
retf
shl
dec
xchg
es
mov
or
hlt
push
in
and
cmp
adc
pop
dec
mov
dec
(bad)
(bad)
xchg
cdq
mov
jmp
or
daa
mov
int3
es
push
stos
mov
add
test
cli
int3
inc
adc
dec
cmc
mov
adc
sbb
add
xchg
xor
push
jecxz
daa
sbb
xor
daa
invd
hlt
push
add
fs
add
adc
add
cdq
mov
xchg
loope
ja
in
adc
xchg
inc
int
mov
pusha
nop
or
inc
adc
dec
mov
les
cs
mov
mov
inc
mov
pop
cmp
(bad)
jmp
mov
cdq
cmp
xchg
xor
mov
(bad)
cmc
inc
push
sub
cdq
mov
retf
js
lods
icebp
and
cmp
jb
cmp
test
add
mov
inc
sub
mov
sub
jb
lods
pop
jno
repz
(bad)
push
in
retf
adc
das
in
fdivr
mov
cmp
mov
movs
out
mov
cdq
stc
inc
xor
adc
or
pop
sar
sbb
or
lea
push
fdivr
sub
(bad)
dec
jmp
outs
mov
daa
push
out
pop
dec
xor
xor
and
out
xchg
neg
fwait
repz
mov
add
stos
cmp
dec
inc
imul
movs
lds
test
idiv
rep
stos
sub
adc
xchg
lahf
sbb
xor
and
add
mov
mov
mov
ins
cmc
es
add
xchg
rcl
add
jp
dec
in
stos
jge
push
fnsave
xchg
dec
lds
je
add
push
xor
xor
call
jecxz
adc
in
adc
movs
mov
iret
cmp
jge
data16
sub
hlt
movs
pop
add
(bad)
mov
push
push
mov
clc
ror
add
ret
cdq
sti
lahf
rcl
pushf
xchg
add
jo
aaa
mov
mov
sub
bound
cmps
push
and
repz
sbb
lods
push
push
xchg
call
add
cmp
(bad)
push
cmovp
dec
inc
push
in
xlat
and
lods
and
out
shl
dec
mov
mov
test
lea
add
mov
inc
add
sub
dec
out
adc
out
lds
xchg
mov
mov
mov
mov
mov
jmp
call
pop
outs
aad
push
fistp
mov
dec
jmp
out
sbb
mov
bound
cs
ss
scas
pop
imul
push
lahf
jae
adc
mov
sbb
(bad)
iret
push
push
dec
push
fwait
mov
inc
lahf
add
push
jp
jne
mov
sub
lea
or
xchg
dec
inc
ror
pop
adc
inc
rcr
mov
pop
pop
inc
jb
rcr
mul
jp
push
mov
or
jg
cmp
sbb
call
sti
jle
and
mov
adc
or
cmps
jnp
or
ret
add
imul
mov
dec
lea
nop
pusha
xchg
fld
xchg
add
lods
pop
xor
jge
jl
or
or
out
adc
mov
sbb
fstp
adc
test
rcl
xchg
or
pop
sbb
(bad)
cmp
daa
ds
add
jb
addr16
pop
mov
es
mov
and
inc
ins
(bad)
jmp
and
out
fwait
push
enter
mov
shr
jo
sbb
in
or
jae
jp
and
pop
les
xor
fsub
inc
xchg
mov
pop
sahf
xchg
movs
lock
adc
and
adc
add
retf
mov
movs
cmp
mov
not
adc
and
xchg
dec
shl
xchg
mov
sbb
in
ror
or
mov
mov
inc
int3
or
scas
or
js
int
cmp
cmp
cmp
sti
jge
mov
movs
stos
addr16
inc
retf
aas
adc
jecxz
pop
xchg
mov
pusha
dec
or
iret
movs
mov
xchg
and
inc
inc
test
xchg
push
push
push
in
lods
cmps
inc
fld
xchg
pop
div
ror
mov
adc
outs
xor
scas
or
es
vcvtss2usi
into
or
cwde
push
push
(bad)
into
and
add
test
xchg
cmps
sbb
int
loopne
loopne
hlt
pusha
push
icebp
rcr
stos
mov
inc
mov
and
xor
rcr
pop
repnz
fadd
push
xchg
push
frstor
and
xchg
sti
gs
addr16
outs
shr
cmp
pop
mov
cmc
or
add
dec
push
and
push
adc
xchg
or
cld
stc
push
fwait
stos
sub
jbe
push
scas
repnz
lea
sub
and
cmps
inc
(bad)
lds
mov
dec
movs
adc
sub
sbb
push
push
lock
sbb
outs
cmp
adc
(bad)
xor
sub
in
call
aam
cmp
pop
imul
fist
xor
je
push
xor
in
jecxz
add
jecxz
xchg
scas
cwde
inc
mov
lea
mov
mov
sbb
shr
inc
mov
pop
imul
sbb
push
das
ficom
sub
cs
jmp
mov
sbb
mov
mov
pop
in
jp
ins
sbb
rcr
xor
dec
clc
add
mov
out
inc
jecxz
sub
jb
pop
adc
jbe
scas
pop
ins
cs
in
out
cmp
loopne
cmp
mov
shr
(bad)
jb
cmp
xchg
dec
mov
movs
repnz
sub
gs
cmps
aaa
and
pop
fadd
sbb
cmps
shr
(bad)
fsub
mov
test
idiv
cdq
movs
mov
shl
cld
lods
cmc
mov
cs
repz
adc
jb
sub
pop
add
pop
jmp
or
fbld
mov
xchg
adc
out
or
sub
retf
sahf
jmp
and
mov
sub
adc
pop
push
jecxz
cs
push
or
cmps
sahf
adc
cmp
inc
outs
sub
ret
sar
das
adc
dec
inc
dec
shl
loope
cmp
pop
js
adc
in
mov
and
add
fidiv
push
jl
lods
xchg
sub
fsub
in
aas
aam
(bad)
jnp
adc
dec
inc
and
or
ins
and
psubw
fst
outs
push
and
pop
add
add
stos
outs
jno
mov
mov
xchg
dec
jo
pop
les
push
xlat
mov
enter
pop
push
push
imul
out
inc
jns
mov
adc
imul
mov
mov
mov
movs
daa
cmc
repz
cmp
or
xchg
cmps
test
aaa
mov
cmp
sbb
cmp
pop
jnp
ds
jecxz
cmps
jge
or
repnz
lods
xor
and
aad
int
daa
pop
dec
or
pop
les
mov
or
les
(bad)
jnp
pushf
adc
jb
sbb
in
push
fcmovbe
dec
(bad)
(bad)
mov
lock
outs
dec
mov
sbb
dec
jae
cmp
fdivp
jnp
cmps
les
std
mov
dec
icebp
dec
sub
out
sti
and
lods
mov
push
test
dec
jg
cmp
adc
mov
push
fsub
cmps
shl
push
jnp
(bad)
mov
pop
fcomp
ficomp
xchg
mov
shl
retf
sbb
popf
and
mov
xchg
sbb
push
cmc
inc
sub
call
push
les
xchg
lea
jmp
lock
pop
rol
mul
mov
lds
and
or
or
mov
test
cmp
mov
out
adc
mov
pop
rcr
shr
test
add
and
lahf
cmc
neg
popf
std
in
or
mov
sub
cmovno
iret
fimul
pop
aas
mov
inc
sub
xor
daa
adc
loopne
stos
rol
out
pop
xchg
dec
cwde
dec
and
inc
std
in
xor
or
or
rep
jmp
cwde
shr
ret
int3
xor
jns
in
test
into
jg
jge
sbb
test
xlat
sbb
out
outs
pop
xchg
adc
ret
into
pop
xchg
shl
rcl
jp
hlt
ss
popf
xchg
aas
push
xor
push
push
dec
or
mov
inc
adc
fbstp
sub
xchg
or
ins
sbb
push
(bad)
sti
hlt
cli
js
add
jle
in
mov
xor
pop
pop
in
shl
icebp
push
inc
mov
cs
xor
mov
sbb
clc
jp
jmp
mov
push
mov
gs
(bad)
mov
neg
lds
popa
cli
mov
sub
int3
cmps
cli
mov
xchg
retf
xlat
lea
inc
call
cmp
(bad)
repz
aam
retf
ja
xchg
push
push
push
data16
adc
leave
test
(bad)
out
mov
xor
es
adc
daa
into
scas
and
data16
fisttp
mov
jbe
dec
xchg
dec
adc
icebp
ret
in
fldcw
int
mov
push
jmp
retfw
fst
ins
test
in
out
and
in
pusha
iret
push
dec
fiadd
or
stc
pop
iret
test
ins
out
and
pop
aad
cmp
dec
in
bound
test
pushf
dec
xchg
mov
jle
push
rcl
mov
sub
stc
cmp
icebp
nop
retf
(bad)
xchg
jae
aas
jp
stos
dec
jmp
and
das
jp
or
adc
add
ins
cmc
mov
imul
pop
xchg
sub
dec
pop
xchg
jmp
leave
fidiv
sbb
fisub
in
(bad)
div
cmp
mov
iret
nop
test
hlt
mov
jmp
repnz
mov
in
fisttp
inc
xor
aad
fbstp
xlat
xchg
add
dec
leave
jnp
pushf
push
xor
and
mov
sub
cmp
aaa
imul
cld
scas
mov
push
cmps
or
mov
(bad)
fcmovu
es
stos
aas
int
push
pop
push
sbb
test
sub
fiadd
xchg
bsf
push
jmp
mov
and
jns
mov
(bad)
out
test
and
(bad)
jmp
cld
xchg
ret
pusha
cs
sbb
enter
call
pop
ss
test
jbe
imul
mov
std
loope
lods
jmp
xchg
clc
lds
xrelease
mov
jae
cmps
cmp
repz
sub
mov
or
pop
push
adc
in
aam
loop
int3
add
aaa
push
mov
fnstcw
jb
add
aas
sbb
mov
xlat
les
dec
fbld
jmp
popf
jl
daa
dec
inc
das
and
jo
mov
mov
es
push
sbb
shl
sti
pop
add
sbb
inc
xor
pop
add
mov
mov
sbb
inc
or
pop
sbb
jae
shl
rol
hlt
into
iret
or
daa
mov
inc
dec
mov
adc
add
jle
imul
mov
(bad)
ja
retf
test
out
lods
out
add
popf
adc
cld
jo
lock
jle
jmp
xchg
pop
mov
call
test
bound
mov
maxps
test
jb
xlat
mov
movs
jmp
jno
xchg
sub
mov
pop
imul
dec
out
retf
pop
pusha
sub
arpl
jnp
gs
fist
(bad)
mov
cmc
popa
sub
popf
and
sbb
sub
mov
jb
adc
addr16
mov
adc
fldcw
push
dec
cmp
push
add
scas
cld
mov
fild
lods
std
enter
fs
xchg
or
aas
jne
pop
dec
inc
dec
sub
sub
sbb
loopne
aad
cmp
add
pop
sub
sahf
test
lea
sub
in
enter
fild
dec
cdq
ins
lahf
jnp
push
repnz
arpl
push
js
and
inc
mov
iret
xor
xor
aaa
push
ds
cdq
jmp
sub
lea
or
push
out
jns
adc
xor
bound
mov
jp
push
lods
lods
mov
stos
jb
and
mov
je
mov
add
sar
cmp
fs
xor
cmp
mov
adc
pop
adc
pop
xor
mov
fdiv
inc
pop
pop
cdq
cld
pop
jns
dec
dec
pusha
jge
pop
push
mov
clc
xchg
dec
retf
imul
mov
mov
aas
sub
push
(bad)
cwde
ins
(bad)
xor
dec
jl
pusha
pushf
or
sbb
jb
push
leave
sahf
pop
mov
push
retf
pop
sbb
(bad)
mov
xchg
and
shr
adc
and
xor
sbb
sub
jl
push
cmc
sti
sbb
ins
cs
mov
imul
mov
in
cmp
jae
adc
push
jae
push
push
dec
cmp
mov
mov
cmc
mov
ret
fild
xchg
cmc
sbb
push
xchg
add
push
fsub
fisub
scas
mov
jne
retf
jmp
jo
enter
xor
sbb
fisttp
ja
ror
cmp
pop
neg
lods
ret
scas
cmp
shr
fwait
into
ja
loopne
out
enter
add
stc
inc
mov
movs
mov
hlt
in
mul
scas
mov
shl
lahf
adc
into
sbb
fnsave
xchg
cld
jno
nop
shr
sbb
xchg
mov
rcr
cmp
adc
mov
mov
imul
xchg
cwde
shl
jo
add
cmp
dec
out
loopne
stos
xor
cmp
xchg
adc
pop
(bad)
int3
push
mov
into
(bad)
jno
je
sahf
test
gs
jo
test
enter
div
shl
retf
test
test
push
inc
daa
inc
sbb
test
lods
jae
mov
xor
icebp
pushf
or
adc
movs
in
cmp
pop
or
mov
lods
cdq
sub
mov
sbb
push
or
sbb
bound
pop
arpl
test
cmp
gs
call
add
je
add
and
fimul
shr
mov
and
xor
mov
add
inc
xchg
loope
inc
sahf
xchg
cs
lods
mov
xchg
or
dec
adc
or
push
mov
pop
xor
sbb
rcr
ins
js
js
xchg
dec
fistp
xchg
stos
pop
sar
fldcw
shl
pop
sub
pop
test
add
js
and
sub
jbe
sub
shr
push
arpl
xchg
and
push
xor
and
dec
sti
mov
in
cli
test
add
mov
mov
add
imul
fwait
clc
push
xor
test
pop
add
shr
invd
cmp
mov
add
pop
js
cmp
xchg
pop
cdq
sub
xor
retf
aad
inc
inc
aaa
pop
inc
or
push
sbb
in
test
aam
leave
xor
jbe
pop
lods
gs
mov
jmp
xor
int
(bad)
scas
inc
sbb
mov
xchg
shr
(bad)
gs
lds
xor
mov
cmp
and
push
mov
or
(bad)
aam
add
adc
ins
aam
fwait
adc
lahf
and
jle
xor
arpl
jge
cmps
mov
pop
jecxz
enter
fwait
sub
fxch
into
pushf
inc
mov
sub
je
ret
ins
push
sub
jns
or
jae
sub
adc
movs
adc
in
rcr
(bad)
mov
lods
push
inc
ret
out
out
repnz
adc
lahf
or
inc
(bad)
ins
and
inc
lods
rcl
inc
arpl
inc
sahf
icebp
add
daa
mov
xor
fidiv
clc
cmp
adc
inc
loopne
out
mov
adc
aam
(bad)
fs
ret
mov
add
mov
cmp
adc
loop
push
xor
int
sbb
mov
shl
push
jmp
xchg
test
jmp
and
xchg
xchg
cmps
pop
adc
addr16
jnp
push
jnp
push
dec
retf
arpl
sbb
mov
push
retf
sahf
shl
movs
inc
mov
or
fadd
xlat
jb
aas
xchg
cmp
xchg
stc
mov
cli
int
fldcw
push
mov
test
pop
add
es
mov
push
fiadd
fwait
dec
repnz
jecxz
shl
(bad)
repnz
(bad)
and
cmp
das
arpl
dec
ss
mov
ret
adc
retf
pop
arpl
std
ret
adc
xchg
xchg
fwait
arpl
enter
add
pushf
in
dec
adc
push
test
xchg
xchg
test
daa
lea
jmp
pop
pop
push
dec
jns
iret
int3
int3
xchg
ins
jnp
imul
push
jno
int3
rcl
adc
push
jae
shr
lods
ss
mov
int
arpl
or
cmp
test
retf
xor
lods
pop
ret
test
mov
inc
inc
rcr
arpl
fisttp
lahf
retf
popa
in
or
jmp
sahf
out
data16
sbb
add
js
gs
call
ror
mov
(bad)
xor
out
inc
inc
xor
repnz
pop
int3
or
js
jle
pop
(bad)
xchg
fiadd
push
adc
enter
mov
daa
jge
aam
adc
(bad)
scas
dec
repnz
mov
mov
(bad)
jecxz
pop
mov
dec
ja
int
nop
xchg
sti
pop
cmp
cs
add
mov
push
or
pop
inc
mov
push
sub
or
adc
rol
jmp
scas
outs
mov
fldcw
test
cld
dec
jns
mov
mov
sub
add
lods
imul
aas
adc
jg
push
xor
sbb
dec
jge
iret
xchg
sahf
jmp
fidivr
and
sbb
pusha
sbb
cmc
pop
cpuid
jp
imul
lods
into
xlat
mov
or
sbb
adc
int
fs
mov
pop
cmp
and
mov
xchg
pusha
dec
lods
lds
mov
mov
dec
xchg
add
pusha
sbb
cld
popf
fucomi
pop
jns
ret
loope
ficomp
retf
cmp
dec
mov
cmp
sbb
aaa
mov
jno
xor
(bad)
mov
jne
push
mov
mov
push
rcl
fidivr
jle
(bad)
push
pop
jg
xchg
ret
leave
inc
xor
add
push
daa
jne
fild
icebp
mov
ds
xchg
in
lods
xchg
(bad)
test
mov
or
mov
clc
cdq
call
jmp
adc
mov
dec
in
xor
xor
loop
jne
mov
sub
jno
call
lock
int
sbb
bound
mov
sar
movs
push
ret
dec
sti
int
inc
leave
xchg
lahf
xchg
pop
ins
push
mov
sub
movs
xor
push
call
jbe
cmp
fwait
mov
push
scas
and
mov
arpl
pop
sahf
jp
arpl
sbb
xchg
dec
sbb
fbstp
mov
aas
inc
cmp
out
test
cmp
int3
(bad)
mov
push
cmps
cli
mov
pop
add
nop
inc
cmc
scas
aaa
push
loop
out
call
aam
ficomp
sub
icebp
nop
popf
mov
pop
dec
mov
xor
fadd
mov
and
mov
cmp
xchg
mov
jge
mov
mov
mov
lods
es
icebp
rcr
leave
mov
jns
mov
sbb
ss
sbb
add
mov
or
pop
js
push
test
pop
scas
xchg
xlat
jmp
push
scas
sbb
or
loop
jmp
pop
jge
arpl
les
sub
cmp
dec
fs
stos
mov
push
shl
repz
jecxz
daa
dec
pop
int3
mov
push
movs
fidivr
xchg
mov
xor
mov
shl
xor
xor
mov
shl
add
mov
retf
into
and
inc
mov
jle
mov
enter
test
sbb
adc
bound
pop
sub
imul
cmp
xor
adc
outs
add
xlat
mov
enter
cld
ror
test
mov
cmps
inc
stos
mov
pop
pop
inc
(bad)
jmp
(bad)
into
aam
jns
push
inc
je
std
enter
or
add
in
fnstsw
pop
rcr
ret
xchg
neg
jmp
test
jns
scas
pop
adc
int
dec
pusha
mov
arpl
jns
push
xchg
and
sub
stc
add
jle
push
ja
xor
movs
aam
fld
add
loopne
int
(bad)
pop
push
jmp
fisttp
jne
xor
retf
or
retf
xchg
outs
sbb
inc
shl
loopne
ds
aam
fistp
fnstsw
enter
or
inc
pop
mov
aad
(bad)
inc
fsubr
sahf
adc
arpl
push
pop
sbb
xchg
pop
adc
mov
movs
outs
pop
cmp
jl
inc
mov
jmp
addr16
sub
sti
sbb
test
retf
mov
or
cld
mov
movs
sbb
or
out
cli
push
mov
lahf
jl
and
retf
arpl
imul
aad
int3
pop
test
das
mov
sbb
into
dec
call
mov
push
daa
add
shl
cmp
sub
mov
mov
mov
cmp
xor
push
inc
imul
cmps
xchg
pop
rol
hlt
retf
sbb
(bad)
add
xchg
adc
popf
xor
das
mov
in
xor
mov
inc
repz
push
xchg
in
mov
loope
push
jle
cmp
dec
fwait
test
imul
and
fwait
sub
mov
mov
(bad)
vpaddq
pusha
xchg
pop
xchg
dec
xor
iret
push
xlat
jle
je
mov
outs
into
ja
inc
inc
adc
cmps
jno
aad
ins
pop
xor
add
js
push
scas
mov
test
sqrtps
mul
fnstsw
push
mov
outs
(bad)
jnp
ret
inc
mov
adc
xchg
or
fist
sub
or
movs
into
dec
dec
push
add
sbb
stos
dec
lock
neg
dec
mov
arpl
push
cmp
js
or
xor
lahf
rcr
push
rcl
mov
sbb
or
sbb
ret
xchg
inc
dec
cdq
lds
mov
adc
xlat
inc
or
fwait
mov
pop
add
stos
pop
or
adc
(bad)
adc
fwait
adc
jmp
lods
(bad)
fsubr
rol
mov
mov
stos
xor
adc
add
xchg
xchg
inc
xor
out
outs
jl
adc
out
mov
pop
sub
dec
mov
adc
outs
cwde
ficom
dec
ds
xchg
pop
pop
or
fninit
cmp
mov
adc
sbb
jae
sbb
jmp
mov
cdq
test
stc
fild
add
fs
lods
mov
jge
dec
iret
outs
(bad)
sbb
add
movs
pop
dec
repz
cwde
jnp
loope
imul
neg
inc
icebp
test
imul
xor
and
retf
out
jp
fwait
cdq
inc
scas
inc
in
pop
pop
daa
repz
cmp
loop
xor
add
sbb
sbb
sahf
test
bound
xchg
outs
or
out
jmp
retf
sbb
mov
dec
test
sahf
or
cmp
cmc
in
lahf
aas
xchg
retf
xchg
shl
pop
fisttp
add
cmp
jg
shr
ja
cmp
les
cmp
ins
movs
mov
in
sbb
sar
div
mov
add
jmp
cmp
repz
rol
iret
add
push
xor
js
dec
pop
xchg
adc
jp
cmps
loop
xchg
cs
mov
comiss
mov
cmc
xchg
outs
push
dec
in
shl
xchg
xchg
xor
push
call
mov
aaa
fadd
inc
es
pop
(bad)
push
lahf
stos
stos
ror
(bad)
mov
(bad)
into
mov
sbb
sub
mov
cli
test
add
data16
add
jle
mov
ret
or
addr16
push
jge
lods
hlt
dec
mov
aaa
nop
shl
scas
outs
aam
and
ins
mov
mov
gs
popf
js
test
sub
test
jne
and
xchg
xor
xor
xor
stos
sub
in
popa
(bad)
mov
adc
rcl
jno
in
jo
cmp
movs
sbb
adc
fwait
mov
cwde
addr16
stos
mov
mov
add
adc
jp
jae
sbb
int
inc
mov
add
mov
mov
mov
mov
in
cmp
and
sbb
dec
ja
and
movs
sub
xchg
lock
xchg
jge
mov
call
int
pop
add
fisubr
test
dec
hlt
adc
cmp
xchg
scas
js
ret
popa
push
mov
jmp
sahf
pop
pop
jmp
push
adc
or
or
ret
outs
or
aas
mov
or
inc
mov
and
mov
jbe
xor
jmp
mov
in
mov
test
sbb
inc
shr
sbb
or
fdivr
jnp
xchg
xlat
pop
push
cmp
xchg
push
pushf
mov
push
add
xor
mov
jle
aad
outs
mov
shr
dec
scas
cwde
fstp
push
(bad)
aas
nop
jmp
push
iret
daa
into
out
push
out
xchg
mov
call
add
js
xor
icebp
mov
xor
cmp
lods
test
lods
loop
out
xor
adc
nop
and
xor
or
bound
fs
sub
mov
fwait
inc
pop
call
mov
push
repnz
div
pop
or
pop
pop
add
ret
stc
and
cmp
mov
jne
outs
retf
mov
mov
ret
xchg
aad
inc
dec
sbb
out
cmp
fst
push
xchg
enter
push
cs
aaa
sbb
cmp
sbb
push
push
xor
(bad)
test
clc
int3
cmps
test
pop
fcom
jle
inc
fcmovb
mov
in
jmp
int
repnz
mov
jl
sub
or
adc
pop
mov
inc
montmul
cmps
inc
cmp
push
out
and
loop
jge
inc
push
xor
cmp
xchg
and
pop
cmp
jle
cdq
lock
(bad)
gs
or
test
mov
(bad)
scas
fdiv
movs
in
shr
cwde
and
ins
rcr
xor
bound
out
lods
shl
in
shr
pushf
cmps
push
pop
mov
lods
loope
adc
adc
lea
dec
(bad)
xchg
loope
ins
cmp
xchg
mov
jecxz
inc
mov
pusha
scas
and
inc
mov
test
imul
dec
adc
fnstenv
push
dec
adc
ds
cmp
sbb
iret
inc
add
not
inc
sbb
aad
pop
push
out
cmps
sbb
dec
cs
cli
or
fiadd
test
lds
cmp
push
pop
jbe
fcmovnu
sbb
aas
push
out
and
and
repnz
imul
inc
aaa
mov
pusha
shl
jmp
jns
mov
xor
call
shl
xor
sub
aaa
fnstenv
xchg
aas
push
inc
out
push
stos
ds
outs
add
sub
and
clc
push
sar
stc
test
sub
jmp
test
fimul
mov
loop
imul
enter
sbb
mov
mov
popf
rol
adc
pop
mov
cs
pop
dec
stc
cmp
cmp
fld
dec
aam
jmp
test
add
sbb
jg
or
lahf
retf
mov
rcr
js
cwde
xchg
add
in
retf
cwde
cmps
repz
pop
xchg
push
shl
add
mov
and
or
leave
mov
imul
lods
mov
push
lea
clc
xor
mov
jb
and
stos
fsub
mov
(bad)
cs
sub
jle
cld
movs
nop
sbb
out
retf
mov
or
jnp
ins
enter
cli
ja
jbe
jae
test
pop
mov
out
add
mov
mov
adc
xchg
(bad)
mov
cmps
jns
mov
mov
(bad)
pop
cmp
inc
in
sub
pushf
xchg
sub
rep
sti
dec
shr
loopne
out
mov
das
inc
push
mov
adc
aaa
shr
adc
js
mov
aad
xchg
adc
push
aas
jae
or
sbb
(bad)
xor
ins
fs
push
or
mov
and
nop
mov
or
or
add
(bad)
leave
mov
gs
add
pop
loope
pop
xchg
addr16
xor
xor
nop
jnp
xchg
cmp
ss
xor
push
repnz
in
xchg
outs
es
cwde
adc
mov
and
mov
adc
mov
dec
bswap
and
bound
inc
adc
pop
in
pop
dec
xchg
in
mov
lds
sbb
aaa
pushf
ss
push
or
sbb
and
jb
xchg
cld
adc
xor
js
mov
jge
aas
aad
or
sbb
cld
add
inc
sbb
icebp
cmc
jns
in
lea
cmp
sbb
xchg
es
cmp
push
jmp
fs
ret
push
test
and
in
shl
xor
mov
adc
dec
(bad)
sbb
sub
pop
enter
mov
rcr
or
enter
repz
xor
inc
xchg
pushf
out
je
pushf
and
ds
and
in
xchg
hlt
pop
vpunpcklqdq
jns
into
push
cmc
mov
lds
xchg
aaa
jmp
lock
jle
ins
sbb
arpl
ffree
or
lods
xor
pop
retf
mov
fs
fidivr
jle
ds
es
test
mov
push
sub
xchg
xlat
xor
pop
fst
(bad)
pop
adc
or
mov
push
mov
div
les
xchg
imul
loopne
stos
scas
xchg
and
add
xchg
mov
jnp
repnz
xchg
push
mov
ins
sbb
inc
mov
outs
sbb
xor
add
inc
sub
jl
sub
xchg
ss
inc
inc
test
sbb
cmp
test
(bad)
ret
add
hlt
in
mov
cwde
mov
xor
popa
mov
(bad)
cld
add
aaa
pushf
mov
xchg
je
jp
xor
iret
outs
pop
ficomp
mov
and
mov
das
jp
loopne
std
(bad)
push
data16
daa
xor
(bad)
push
es
pop
in
adc
iret
push
sub
add
retf
xchg
push
stos
push
out
mov
cmp
cmps
inc
dec
jle
mov
shl
push
jbe
loopne
fidiv
sbb
fwait
stc
test
rcl
cmc
sub
sub
dec
jle
imul
xchg
test
inc
not
lahf
cmp
xchg
popf
test
cli
cld
jmp
inc
movs
mov
pop
cmp
pushf
(bad)
adc
push
mov
push
ss
adc
push
inc
fisttp
mov
(bad)
ja
lahf
jns
mov
ins
js
push
xchg
adc
repz
lods
mov
push
out
inc
fdiv
ficom
push
dec
push
xchg
stc
leave
enter
daa
adc
mov
jecxz
cmp
test
sub
mov
imul
xchg
adc
mov
mov
inc
cmp
shl
mov
inc
mov
shr
add
mov
pop
(bad)
outs
(bad)
push
imul
or
(bad)
push
jno
fsubr
push
stos
popf
jno
mov
cmps
call
mov
out
into
js
cmps
(bad)
test
iret
add
jnp
in
xchg
jmp
sti
adc
stc
push
or
ret
mov
shr
pop
pop
mov
mov
into
(bad)
push
out
mov
test
outs
(bad)
bound
retf
mov
pop
mov
pop
xchg
shl
sahf
aaa
inc
add
mov
jle
call
mov
(bad)
jmp
stos
sti
adc
gs
cs
mov
pop
mov
dec
rol
in
stc
or
jp
mov
mul
add
repnz
sbb
adc
push
cmps
js
leave
jmp
sar
lock
inc
imul
add
arpl
cmp
pop
and
lods
inc
stos
add
mov
movs
sahf
dec
lods
mov
cdq
xchg
cmp
push
or
add
and
mov
jns
retf
out
cdq
popf
mov
or
cmps
repz
ja
dec
and
popf
mov
sub
ror
adc
jns
push
popa
lds
lds
scas
sahf
repnz
iret
arpl
dec
aam
push
xlat
ret
ficom
arpl
test
cmp
aaa
push
mov
fs
cld
(bad)
std
pop
fcmovu
add
outs
popf
lea
jle
mov
push
pop
jae
sti
shl
fld
sar
mov
pop
lds
inc
pop
lds
sbb
adc
cwde
pop
outs
push
int3
retf
(bad)
fcom
idiv
cmps
ret
cmps
sbb
aam
cmp
adc
xchg
xchg
and
enter
mov
xchg
jge
jnp
popf
(bad)
xchg
repnz
cmp
pusha
hlt
aam
and
jle
mov
xor
mov
sbb
cmp
mov
in
dec
mov
jb
je
lods
push
sahf
retf
shr
inc
cmp
(bad)
nop
ins
sti
mov
push
dec
outs
sahf
jge
jno
out
push
xchg
ret
stc
ret
test
shl
adc
mov
jle
xchg
fisttp
pop
mov
cmps
clc
add
jbe
xchg
sti
jae
ret
stc
adc
jb
mov
mov
xchg
push
(bad)
cmc
add
xor
ins
cmp
inc
test
dec
fist
imul
adc
mov
push
push
fidivr
enter
sub
mov
cmps
cmp
pop
data16
ror
mov
xor
sahf
cs
sub
nop
and
and
fadd
sbb
ds
fstp
loop
movs
cmc
xor
inc
ror
cwde
xchg
sub
stc
paddsb
pop
ins
sbb
int
mov
mov
mov
pop
jmp
cmp
and
cld
dec
dec
shl
sub
sub
rcr
inc
inc
ds
mov
mov
outs
jp
mov
mov
cmp
mov
inc
popa
outs
ss
fistp
inc
outs
jle
jne
jp
(bad)
dec
int3
add
ja
mov
jge
pop
arpl
test
push
bound
dec
stos
mov
cs
outs
push
fsubr
mov
cmps
add
pop
cwde
hlt
jp
push
jbe
inc
ds
data16
aam
test
cmp
(bad)
hlt
xchg
loopne
stos
mov
sbb
mov
mov
sub
aad
cwde
xchg
shl
xor
mov
xchg
cmp
xor
sub
mov
fwait
push
outs
retf
and
and
mov
cmps
neg
xlat
iret
mov
aas
ret
outs
retf
inc
es
inc
fmul
jbe
push
pmulhw
pop
lea
push
lock
add
test
sub
stos
or
mov
std
sub
rcl
sbb
dec
pushf
test
js
mov
push
and
lods
sub
xor
test
cmp
add
test
dec
and
dec
adc
cmp
and
or
or
mov
fist
push
and
inc
mov
cmp
dec
loop
(bad)
std
xchg
into
fdivp
(bad)
leave
pop
mov
adc
sbb
add
dec
dec
mov
pop
mov
adc
jg
pusha
xchg
xlat
jne
(bad)
xor
sbb
jl
mov
pop
sbb
pusha
fbld
and
inc
lods
xor
adc
cmp
iret
pop
inc
push
enter
jmp
pop
fwait
inc
outs
es
add
xchg
in
fwait
out
test
lds
pop
fcom
mov
cdq
popf
xchg
sbb
(bad)
and
iret
fisttp
or
nop
cmp
test
movs
jne
gs
dec
pop
sbb
imul
dec
push
jl
mov
push
or
fstp
inc
cwde
leave
fs
sub
mov
popf
rcr
mov
rcr
fisubr
dec
in
jecxz
cmp
fild
ins
fisttp
sbb
jns
jmp
leave
push
popf
xor
dec
inc
jnp
sti
sub
je
out
xchg
iret
or
mov
(bad)
nop
cwde
(bad)
shr
cwde
mov
lahf
mov
mov
mov
mov
xchg
cmp
mov
push
clc
(bad)
xchg
sub
push
out
aad
cmp
fdivp
mov
stos
out
mov
repnz
jmp
lds
mov
imul
jecxz
ficom
mov
sbb
call
leave
jo
xor
jmp
push
hlt
sti
pushf
hlt
neg
jg
fimul
xor
mov
add
dec
scas
ins
pop
repz
fstp
dec
and
ret
shl
out
mov
enter
bound
add
cmp
mov
js
in
dec
not
sbb
xchg
fucomp
xchg
xchg
dec
icebp
inc
push
outs
dec
test
daa
xor
push
aad
xor
jg
push
push
xlat
push
(bad)
test
test
xchg
daa
sub
jecxz
clc
fisub
push
test
mov
in
xlat
dec
shl
imul
in
fisubr
jo
push
cmc
imul
sti
mov
call
dec
jmp
das
inc
or
movs
and
sub
mov
cmc
fwait
(bad)
mov
mov
pop
cmps
jb
loopne
cmc
add
gs
and
int3
mov
(bad)
mov
push
cdq
inc
ds
pop
ror
jle
dec
dec
lock
sahf
push
ins
addr16
mov
mov
xor
repnz
popa
movs
repnz
repnz
sub
test
dec
mov
mov
and
add
jecxz
cmp
sub
add
add
cmp
mov
(bad)
ja
iret
shl
pop
mov
cli
mov
xor
jns
xchg
rol
push
pop
div
jmp
mov
rol
cld
fnstcw
inc
inc
in
pop
aas
rcl
out
call
stc
shr
pop
idiv
mov
call
mov
dec
sub
xlat
pop
je
jo
fimul
and
mov
sbb
popa
add
retf
mov
sub
push
outs
add
sahf
not
int3
pushf
rol
ja
int3
outs
(bad)
xlat
mov
jge
in
movs
daa
sahf
in
(bad)
call
sbb
out
shl
jg
stc
rcr
hlt
xor
inc
mov
mul
jo
ins
repnz
and
or
daa
mov
mov
xchg
jno
xlat
arpl
push
mov
(bad)
fild
aaa
test
jne
fsubr
repz
lods
pusha
sti
mov
adc
js
mov
scas
test
mov
inc
test
or
gs
sub
std
sbb
sub
jne
lea
inc
mov
inc
cmp
ins
and
sbb
and
aas
sbb
stos
dec
cmp
sbb
xchg
adc
mov
aam
retf
xchg
jb
sub
push
xchg
out
push
push
leave
sub
lods
in
loopne
fadd
cwde
mov
(bad)
pop
dec
fs
jmp
ja
jp
add
xchg
out
aam
js
(bad)
in
sub
mov
jo
push
push
pushf
jmp
lock
pop
inc
sub
mov
sbb
aas
push
mov
(bad)
or
inc
cs
int3
and
sbb
mov
in
stos
out
pop
cli
nop
cmp
push
rcl
adc
xchg
pop
fsubp
mov
jmp
inc
cmp
frstpm(287
dec
lgs
sub
push
movs
mov
iret
out
dec
int3
inc
dec
add
add
cmp
aaa
ror
xor
jl
jno
and
rcr
(bad)
jge
inc
lods
jo
add
inc
sar
push
fadd
pop
xlat
pusha
mov
sbb
jmp
cdq
pop
mov
es
pop
mov
clc
push
add
push
mov
jae
ins
adc
mov
shl
sahf
or
jg
dec
cld
jmp
inc
enter
lds
mov
enter
jns
push
push
pushf
std
cmp
inc
(bad)
adc
pop
pushf
adc
mov
push
push
in
xchg
mov
(bad)
or
pop
jl
les
push
xor
mov
pop
or
(bad)
loope
in
jle
jmp
add
imul
and
inc
mul
aad
aam
add
push
push
sbb
mov
push
pop
jmp
popa
sbb
sbb
loopne
adc
mov
js
(bad)
jmp
(bad)
mov
enter
imul
add
sbb
mov
stc
and
adc
sbb
pop
cwde
int3
push
lods
pop
out
test
push
fcomp
mov
sub
mov
inc
mov
sbb
and
mov
test
mov
mov
push
mov
push
mov
mov
mov
aas
jmp
jb
mov
int
adc
lods
ja
xchg
ret
fistp
xor
imul
mov
iret
inc
push
dec
clc
out
adc
enter
push
vmovlps
js
es
sbb
dec
aam
and
push
add
and
dec
popa
test
sbb
and
sub
dec
adc
mov
add
or
dec
push
test
cmp
or
cwde
test
add
push
in
ds
pop
das
stos
das
jecxz
sbb
dec
adc
call
rcr
inc
out
and
push
or
ins
imul
add
fwait
jo
pop
(bad)
cmp
pop
cmp
outs
fcmovnbe
int3
not
dec
and
xor
inc
mov
fistp
pop
fcmovbe
xchg
out
lds
in
imul
adc
xor
cli
fnstenv
stc
mov
repz
jl
les
fs
std
jns
call
cmp
and
fwait
and
push
sar
stos
int3
xor
lods
xor
pop
push
call
cmp
nop
add
and
call
or
je
lea
out
sub
stos
hlt
pop
test
inc
je
ret
mov
in
pushf
(bad)
cmc
fwait
jl
cmp
cdq
stos
inc
and
shl
pop
inc
inc
jne
jp
das
inc
dec
icebp
mov
or
int
sbb
dec
push
or
dec
mov
cmp
pop
sub
sbb
inc
das
jmp
dec
mul
sbb
popf
jle
cmps
adc
psrlw
mov
push
xor
enter
or
sub
jno
pop
loope
jbe
mov
retf
dec
movs
xchg
arpl
cmp
sub
mov
in
jno
mov
xchg
js
lahf
pop
into
cmp
mov
jg
outs
cmp
or
lds
aaa
repz
mov
xchg
jg
loop
fstp
(bad)
ds
push
mov
mov
test
stos
out
jge
ins
xchg
stos
out
inc
dec
and
cmp
outs
es
sbb
mov
mov
lahf
dec
mov
in
mov
loope
cmp
pop
pop
outs
pop
xor
mov
fistp
jnp
cmp
cld
xor
(bad)
loope
imul
sub
fstp
adc
bound
inc
(bad)
je
fiadd
test
lock
mov
add
lods
pushf
push
add
ror
pop
call
jmp
sbb
test
dec
dec
push
mov
fistp
cmc
or
adc
dec
mov
adc
cmp
repz
lods
into
or
cmp
fisub
push
dec
sub
test
in
retf
mov
aaa
ja
(bad)
(bad)
fistp
outs
mul
mov
push
fsub
push
and
mov
mov
sbb
or
js
js
bound
fisub
in
repnz
sub
pop
data16
sub
cli
inc
in
jle
and
mov
or
inc
adc
inc
push
mov
ret
add
cld
stc
or
pop
scas
jle
cmps
jp
jae
jns
je
movs
imul
xchg
push
inc
inc
jno
sti
mov
aam
adc
cmps
mov
in
aas
lea
arpl
mov
or
push
mul
and
pop
mov
outs
in
adc
ins
mov
cmp
cdq
pop
lods
mov
adc
jmp
lea
jg
or
fbstp
or
ins
cmps
or
mov
adc
push
dec
mov
cmp
movs
xchg
ss
xor
sbb
adc
inc
dec
sbb
lock
mov
push
aad
xor
out
inc
fadd
adc
add
scas
shr
scas
test
jl
fsubrp
dec
mov
aas
daa
jb
add
imul
in
xchg
ds
dec
sub
loopne
xchg
xchg
mov
jne
int
adc
icebp
and
sbb
xor
add
xchg
xchg
arpl
xlat
std
push
lods
outs
cmp
fdiv
loope
jb
inc
pushf
cmps
ret
nop
(bad)
sahf
mov
test
dec
xor
pop
or
inc
sti
push
fist
retf
scas
pop
mov
push
rcr
jecxz
rol
pop
dec
mov
xchg
loopne
ins
cmp
les
jo
and
fldenv
pop
test
enter
test
dec
mov
js
stos
ins
out
call
loope
into
sub
mov
sbb
test
shl
shl
test
xor
test
push
rol
xchg
(bad)
stos
xor
daa
in
not
pop
push
hlt
dec
push
xchg
pop
shl
and
mov
outs
inc
(bad)
rcl
pop
mov
fwait
dec
mov
xchg
push
arpl
arpl
dec
clc
mov
jbe
xor
cmp
xchg
push
ficom
dec
fdiv
call
in
pop
xchg
dec
cdq
call
sub
sahf
test
nop
xor
inc
add
mov
scas
retf
int
jge
dec
das
outs
(bad)
mov
lods
push
jne
xlat
jg
jle
shl
cli
aaa
pop
ss
fcomip
aas
dec
fsub
leave
pop
push
sbb
mul
jp
cmp
in
xchg
push
mov
mov
and
pop
xchg
test
lea
stos
lods
add
jo
aam
push
cmp
and
in
push
lods
xor
mov
call
cmp
into
gs
ret
iret
fsub
mov
retf
fistp
pop
mov
mov
out
push
int
jno
pusha
push
dec
mov
mul
retf
retf
jb
add
dec
push
imul
jno
aam
bound
pop
sbb
sbb
push
rcl
in
out
xchg
test
xor
and
es
xor
(bad)
adc
xchg
or
aad
out
es
(bad)
popf
cmp
dec
icebp
(bad)
or
adc
cmps
and
in
ins
cdq
xor
popf
inc
xor
push
or
cs
rol
rcl
retf
and
ficom
xor
mov
shl
cmps
mov
ror
popf
rcr
xchg
ss
cs
sbb
pop
push
popf
retf
enter
inc
add
pop
fdivr
push
test
push
jp
sbb
push
loop
ja
ja
cmp
push
imul
xchg
jbe
push
push
gs
xor
fs
js
arpl
out
aaa
clc
push
inc
loopne
cmc
sub
jns
div
cmp
inc
or
nop
cdq
cmc
jb
stos
loope
hlt
sub
ins
test
and
stc
call
and
mov
cdq
cmps
cmp
(bad)
jmp
(bad)
sub
shl
jmp
sahf
mov
mov
mov
pop
aaa
pop
imul
xor
call
test
mov
dec
sahf
out
push
movs
cmps
mov
not
call
aas
fs
ja
adc
pop
test
js
loopne
mov
cli
mov
aas
(bad)
cmp
cmp
pop
pop
ret
sbb
pop
es
enter
inc
lock
sbb
cmp
out
dec
cmp
ds
movs
and
push
mov
cld
xchg
adc
adc
mov
(bad)
pop
enter
shr
xor
stc
add
jae
shl
and
scas
jns
inc
add
shl
inc
dec
scas
addr16
popf
xchg
xor
ret
call
sahf
xchg
hlt
jecxz
push
ror
mov
push
int3
mov
push
xor
(bad)
int
scas
adc
mov
loope
jne
jecxz
xor
repnz
pop
mov
mov
repz
mov
ja
movs
adc
dec
movs
mov
jb
or
aam
or
cmp
les
pop
cmp
pop
(bad)
icebp
xchg
aaa
cli
or
dec
inc
cwde
lds
retf
jl
fild
inc
fisub
xchg
out
pop
push
or
push
cmps
mov
inc
mov
sub
xchg
or
mov
(bad)
in
adc
inc
movs
popa
cwde
addr16
or
in
and
add
hlt
mov
std
mov
inc
push
push
and
jns
pop
adc
pop
push
xlat
inc
popf
or
mov
cmps
and
inc
or
sub
xchg
ss
mov
xor
xchg
dec
ins
mov
mov
pop
hlt
add
cmp
jne
sbb
xor
int3
ja
icebp
(bad)
sti
adc
inc
pop
fldenv
push
int
cmp
sub
movs
adc
cmp
jl
pop
sahf
addr16
(bad)
mov
cmp
pop
dec
or
fist
ja
mov
in
xchg
hlt
push
imul
push
test
add
into
aad
mov
outs
mov
pop
add
mov
lea
aas
cdq
or
cmps
call
test
mov
jns
lds
repnz
cmp
cdq
mov
xor
mov
cld
inc
sbb
xor
jns
sbb
fstp
mov
sbb
dec
js
retf
fcmove
bound
in
bound
icebp
push
inc
and
inc
enter
xchg
pop
mov
stc
jge
es
pop
cli
or
arpl
add
dec
pop
out
add
xchg
retf
pop
call
cs
push
mov
jg
pop
xor
leave
cmps
mov
mov
es
dec
push
cwde
int3
aaa
mov
mov
inc
cmp
pop
jmp
dec
add
pop
dec
mov
hlt
or
cmps
shr
mov
(bad)
into
dec
or
or
fstp
imul
(bad)
pop
in
sub
push
adc
data16
mov
js
aad
or
mov
xor
retf
dec
push
loopne
(bad)
fld
cli
mov
sbb
mul
or
mov
in
push
call
mov
in
idiv
add
cld
xchg
retf
cdq
lds
idiv
mov
pop
out
mov
xchg
scas
test
push
mov
mov
mov
imul
push
cmc
aad
push
xor
mov
jg
dec
cld
arpl
add
sbb
jge
mov
sub
or
ror
movs
repz
jle
popf
jmp
pop
dec
(bad)
loopne
xchg
data16
mov
sub
push
cmp
and
neg
outs
jmp
add
rcr
jge
stos
pop
or
or
fidivr
jecxz
mov
push
sub
popw
mov
out
out
outs
shl
inc
in
mov
ja
jg
sbb
imul
sub
jnp
imul
mov
sub
mov
mov
mov
sbb
jne
cmps
and
fidivr
mov
(bad)
xor
mov
or
aas
dec
cmp
add
inc
sbb
jmp
mov
push
lds
xchg
out
adc
mov
push
or
ror
mov
fcmovu
jg
xchg
cwde
mov
je
(bad)
cmp
sti
push
push
push
fadd
div
xchg
sub
es
retf
pop
add
mov
pop
stc
retf
mov
xchg
in
pop
jmp
(bad)
cmp
cmps
pop
cmps
call
(bad)
stc
in
popf
mov
jmp
jae
loope
mov
(bad)
cli
mov
call
jmp
(bad)
loope
lock
xor
jge
sub
add
pop
enter
cmp
xchg
fadd
adc
jmp
fild
shl
mov
mov
jl
or
sbb
mov
shr
add
sbb
cli
and
cld
fdiv
mov
sub
push
push
aad
mov
pop
jecxz
cmovae
pop
push
push
push
pop
dec
fwait
sub
nop
movs
popa
xor
aam
outs
or
sbb
mov
jmp
into
int
mov
div
adc
fdivrp
out
aaa
repnz
jne
repnz
addr16
pop
retf
(bad)
push
cdq
(bad)
ror
inc
pop
in
and
sbb
out
dec
and
jae
xchg
pop
mov
in
jl
dec
sub
adc
lahf
pushf
mov
push
pop
push
sar
pop
jl
jmp
mov
sbb
out
cmps
(bad)
dec
enter
ins
push
not
fdiv
mov
pop
inc
cs
or
inc
jle
sub
add
(bad)
retf
fdiv
jge
xor
dec
cmp
cmp
cmp
dec
mov
pushf
(bad)
out
sub
stos
adc
or
dec
daa
pop
mov
int
add
mov
add
imul
or
pop
rcr
xor
call
movs
js
sub
add
mov
les
add
mov
pop
ins
mov
xlat
adc
jno
leave
lock
mov
jecxz
xchg
dec
or
jo
cmp
das
call
pushf
shl
test
inc
(bad)
retf
sahf
adc
and
stos
add
push
hlt
mov
aas
cmps
(bad)
adc
pop
std
fisubr
push
outs
arpl
call
cmp
rol
loop
ja
das
cmps
lods
fs
or
mov
out
mov
fidiv
and
sub
jle
adc
or
mov
mov
out
and
cli
jb
not
out
ins
or
mov
out
nop
xchg
(bad)
inc
sub
lods
xor
clc
sbb
xchg
dec
shl
leave
add
push
sub
(bad)
gs
pop
xchg
(bad)
pop
popa
jmp
outs
pop
push
out
sbb
test
inc
mov
inc
add
inc
add
arpl
daa
dec
repz
(bad)
(bad)
fdivr
pop
push
int
inc
dec
pop
jno
sbb
push
sbb
dec
out
mov
mov
repnz
or
dec
xor
sub
int3
add
repz
out
sbb
add
cmp
xchg
jle
sbb
out
imul
dec
adc
cdq
mov
aam
jb
add
jecxz
mov
addr16
pop
cmp
pushw
cs
sbb
mov
sbb
test
out
mov
ja
mov
cmp
popf
dec
pop
in
test
mov
sub
(bad)
sbb
push
lock
sti
(bad)
ss
dec
rcl
and
in
mov
xor
arpl
movs
movs
sub
jns
jno
mov
les
mov
js
or
movs
pop
and
scas
daa
fnstenv
loopne
into
fisttp
repnz
and
mov
and
sub
adc
jae
sahf
les
push
shl
jge
lds
or
push
mov
mov
into
cmp
or
xor
mov
add
pop
in
loop
(bad)
add
adc
outs
mov
shl
mov
dec
mov
mov
ins
clc
scas
pop
add
or
mov
lahf
in
xor
or
or
mov
xchg
pop
cmps
cmps
int
pop
aam
jecxz
jl
jo
scas
das
(bad)
popa
lahf
add
mov
cmp
and
aam
mov
cmp
mov
fadd
scas
xor
test
mov
xlat
xlat
jae
out
inc
movs
ja
mov
aas
mov
xchg
call
jg
add
adc
out
mov
scas
push
sbb
rcr
mov
add
xchg
test
sbb
test
push
sub
cmp
pusha
pop
scas
pop
in
test
xlat
iret
daa
ins
(bad)
push
cmp
and
sbb
add
xor
dec
and
jecxz
aam
rcl
mov
cmp
pop
fld
cmc
xor
dec
mov
jnp
retf
test
and
xchg
push
adc
jns
inc
dec
sub
push
mul
mov
jp
stos
push
mov
sbb
ret
sti
fsub
stos
jbe
rcr
xchg
mov
dec
jge
jle
cmp
call
inc
mov
dec
loopne
mov
movs
xor
jmp
mov
sbb
cmps
ret
test
mov
and
and
cmp
dec
int
pop
and
xchg
jge
(bad)
test
inc
bound
enter
xchg
movs
add
lock
pop
xchg
adc
xor
jp
test
fs
xor
outs
in
mov
retf
sub
es
xor
iret
xor
cld
sbb
pop
add
adc
or
xor
add
inc
movs
mov
sbb
xor
popf
sbb
cmp
xchg
mov
pop
hlt
or
adc
scas
add
lods
dec
pop
loop
(bad)
or
cld
sbb
jmp
jp
xor
repnz
in
cli
or
xchg
in
sub
loope
sub
or
arpl
popa
daa
dec
and
pop
int3
mov
out
mov
and
sub
(bad)
retf
stc
rol
jnp
sbb
test
fwait
popf
outs
fwait
or
or
cmp
pop
dec
sub
scas
outs
jecxz
mov
add
test
out
push
xor
sub
jl
add
xor
cmps
sbb
push
dec
push
xor
xor
inc
fistp
rol
out
and
mov
or
cli
jns
cmc
nop
and
push
adc
aam
(bad)
jne
rcr
add
addr16
mov
in
xchg
mov
sbb
inc
xchg
imul
loope
mov
pop
sub
aad
sar
outs
in
dec
push
scas
push
repz
imul
adc
add
jnp
mov
das
mov
cld
jmp
sub
in
jp
cmp
retf
rcr
enter
inc
loope
jne
and
ds
into
dec
xor
icebp
mov
jae
adc
xor
ret
shl
or
mov
or
add
dec
pop
and
mov
ins
and
mov
outs
stc
push
jmp
cdq
ror
push
push
fst
push
(bad)
cwde
cmp
push
inc
data16
xor
mov
inc
xor
(bad)
pop
mov
pop
out
rcr
retf
jns
and
mov
repnz
lea
cmp
mov
sub
xor
nop
push
or
ins
mov
or
mov
jecxz
sbb
mov
leave
stc
cmps
inc
jns
into
imul
xchg
xchg
mov
push
frstor
xchg
sar
mov
and
xchg
pop
mov
fld
jbe
dec
sti
sub
push
cwde
shr
stc
inc
or
adc
es
mov
lods
xchg
pusha
ret
mov
adc
mov
push
mov
cwde
int3
or
mov
xchg
jle
ins
pop
push
add
fs
iret
mov
dec
cmps
sub
cmp
test
cmp
mov
jge
idiv
push
jnp
mov
in
sub
pop
sbb
pop
xlat
jecxz
mov
push
xchg
call
cmp
adc
inc
jecxz
xchg
retf
adc
xchg
arpl
sbb
sub
pushf
cld
lock
dec
mov
sub
push
mov
and
jmp
fstp
mov
js
pop
jmp
test
jmp
test
leave
pop
sbb
lods
pop
and
dec
inc
retf
mov
in
scas
mov
mov
sub
mov
dec
lods
jecxz
cmps
inc
aaa
push
inc
xor
fcom
mov
and
mov
int
lods
or
gs
cmc
call
jnp
inc
pusha
in
cmps
mov
inc
xchg
retf
fist
or
add
jbe
mov
cmp
(bad)
rcl
ins
call
push
shl
jmp
inc
mov
fnop
repz
and
retf
je
dec
push
jmp
xor
adc
jo
pusha
imul
dec
sub
test
in
arpl
std
out
lahf
push
jns
int
rol
mov
pop
cli
and
stos
dec
test
test
test
dec
iret
bound
retf
shl
push
push
xor
adc
das
push
sub
outs
push
ret
xchg
xchg
push
jmp
jns
pop
mov
in
sub
push
pop
dec
adc
xor
ins
push
rdmsr
in
sbb
or
or
jne
mov
rcl
mov
(bad)
(bad)
cmp
fdivr
mov
jnp
mov
stos
inc
push
sub
repnz
sub
scas
mov
outs
(bad)
push
loop
jbe
aas
xor
or
push
inc
out
movs
push
in
or
cmps
cmp
shl
cmp
outs
cmps
jo
mov
gs
js
xchg
bound
ficomp
cmp
cmp
push
mov
fwait
ds
mov
mov
sub
outs
dec
jae
mov
inc
add
mov
mov
fbstp
jae
ror
inc
add
in
adc
jmp
xor
jbe
jecxz
mov
test
xor
in
mov
out
jle
mov
dec
or
adc
cmp
sar
mov
fiadd
rcl
mov
stc
ins
cwde
fs
mov
sub
cmc
jp
mov
push
cmp
pop
sbb
mov
mov
sbb
aam
enter
push
push
jl
loope
stos
add
add
sbb
jns
loope
fadd
cmp
inc
pusha
out
call
xchg
inc
mov
and
xlat
shl
add
push
sbb
mov
fisubr
push
jecxz
call
or
mov
dec
cmp
jne
pop
dec
mov
or
inc
(bad)
sbb
loope
pop
fs
xor
loope
jmp
(bad)
out
jp
mov
inc
scas
fcomip
push
cmp
cmp
fs
aaa
test
(bad)
xor
test
mov
fst
pop
mov
add
dec
xchg
js
push
imul
les
fwait
add
in
cmp
stos
pop
ja
mov
xor
sbb
adc
and
sub
pop
push
inc
loope
stc
aas
cdq
in
in
stc
xor
dec
push
push
(bad)
pusha
dec
int
jg
or
and
cmc
mov
jmp
scas
inc
xor
popf
popf
push
jmp
jmp
push
fcmovnbe
add
adc
lods
jmp
or
ja
mov
cdq
inc
scas
inc
xchg
popf
inc
inc
mov
or
arpl
sub
pop
sbb
fwait
dec
aas
add
jg
call
test
movs
or
mov
pop
cwde
sahf
and
outs
stos
scas
jle
sbb
push
sub
cld
xchg
rcr
les
or
xchg
add
pop
cli
and
xor
lods
(bad)
sbb
mov
adc
loope
jge
or
test
outs
xor
adc
xor
sub
mov
and
pop
fwait
jmp
aaa
not
dec
pop
adc
cmp
icebp
cwde
adc
cli
pop
adc
ins
jecxz
or
into
xchg
imul
ret
popa
push
mov
js
dec
sbb
sbb
xchg
mov
sbb
addr16
(bad)
or
(bad)
arpl
dec
mov
ror
adc
push
fist
jae
xchg
movs
pusha
sti
jne
fs
cmc
sub
sar
ins
adc
enter
sub
and
mov
dec
movs
push
retf
leave
mov
add
mov
fcomip
ds
or
mov
adc
stc
pop
jl
inc
pusha
and
fistp
xchg
jb
(bad)
mov
test
push
mov
add
in
xchg
test
inc
inc
clc
mov
out
(bad)
rcl
pushf
lods
jle
sbb
(bad)
iret
fwait
push
(bad)
mov
mov
rol
inc
inc
rcr
addr16
push
daa
lea
ins
loop
sub
inc
mov
push
fsubr
hlt
xor
fld
xor
mov
fld
adc
in
and
and
jle
jbe
sub
mov
cdq
fild
xchg
sbb
or
aaa
shl
in
or
xchg
mov
lahf
sahf
test
or
push
int
fidiv
sbb
test
jnp
mov
dec
adc
cmp
and
popf
adc
in
stos
jnp
dec
xchg
fisttp
pop
sbb
or
mov
cli
js
add
out
adc
(bad)
mov
and
cmc
sub
js
cmp
jl
test
pusha
test
mov
lds
xchg
xor
bound
aad
mov
mov
popa
loopne
and
mov
imul
fbstp
test
mov
pop
into
in
in
jle
mov
sbb
cmp
ret
icebp
cmps
push
dec
sub
mov
outs
pop
scas
nop
cld
out
mov
inc
movs
mov
xchg
stos
int
sub
cmp
dec
jp
cmp
jo
je
retf
mov
mov
and
and
or
sbb
std
(bad)
xor
mov
jnp
ret
clc
(bad)
fist
sub
pop
rcr
jmp
int3
ret
std
mov
jne
sub
in
mov
pop
cli
sbb
nop
mov
fstp
jb
push
cli
js
dec
push
push
sbb
sbb
or
inc
cs
loop
jg
addr16
iret
enter
pop
mov
(bad)
cmps
call
sar
scas
pop
call
fimul
push
lods
add
xor
ret
pop
pop
and
fidivr
jmp
js
jb
add
xor
mov
js
dec
dec
pop
push
cmp
in
adc
nop
mov
int3
jge
jmp
xor
shl
das
ja
fisub
jb
add
inc
sub
or
add
ficom
push
jno
pop
nop
mov
cwde
mov
repz
sbb
jb
jmp
pop
mov
jo
outs
mov
ret
sub
adc
jg
mov
xchg
retf
mov
sbb
stc
inc
cmp
loope
test
add
sub
jmp
pop
and
push
sbb
lock
sub
xchg
xchg
cmp
ret
ret
mov
xor
(bad)
outs
cmps
fsubr
jne
leave
sbb
or
push
test
in
in
push
loop
or
sub
std
sub
pop
ins
and
hlt
out
(bad)
iret
pop
das
mov
les
jne
int3
stos
sbb
fdivp
test
mov
imul
mov
push
adc
push
or
xchg
mov
cmps
rcl
popa
(bad)
das
movs
inc
inc
xchg
mov
pop
int
sbb
pop
fadd
inc
xor
xchg
adc
loope
cmp
jns
xchg
mov
not
dec
push
aam
addr16
cmps
outs
cmp
add
jae
into
jbe
adc
add
rcl
and
adc
jae
icebp
pop
mov
mov
mov
lds
add
sub
loop
sbb
xchg
sub
xor
jmp
mov
xchg
mov
mov
call
dec
in
mov
or
pop
add
rcl
in
loope
push
mov
(bad)
in
out
add
ins
cmc
add
cmp
ins
mov
jns
sub
int
ja
push
jns
adc
dec
xchg
scas
sbb
mov
(bad)
in
dec
mov
jo
adc
xor
jns
mov
mov
stos
sub
add
sar
push
adc
cmc
mov
or
adc
comiss
jmp
movs
xchg
cmps
neg
add
xorps
adc
(bad)
les
sbb
or
dec
leave
cmpps
add
sti
inc
fild
imul
adc
mov
mov
mov
pop
mov
fistp
movs
sbb
clc
pop
rcr
xchg
scas
push
mov
aas
fisttp
xchg
dec
ror
pop
ss
xlat
cmp
(bad)
aam
mov
and
push
mov
sub
scas
pop
fadd
xor
and
adc
mov
(bad)
leave
jmp
sbb
pop
out
retf
es
jns
pop
sahf
fadd
pop
jo
add
sub
rcr
popa
mov
mov
gs
rcr
ins
shl
mov
mov
add
shr
mov
dec
rcl
std
popf
push
ss
imul
or
ret
fs
pop
cmps
or
rcr
or
ret
add
icebp
shl
cmp
sub
ja
lods
retf
adc
push
ja
jmp
leave
cld
cmp
mov
mov
imul
inc
push
adc
mov
movs
iret
or
mov
pop
mov
fadd
adc
data16
and
retf
pop
dec
(bad)
sahf
sbb
mov
out
or
vblendps
mov
iret
bts
fwait
sbb
out
movs
sbb
cmc
push
das
add
fld
mov
icebp
(bad)
clc
mov
lock
loopne
iret
pop
jbe
cmp
and
sub
fdivr
fistp
loope
jmp
setne
shl
cli
mov
mov
push
das
scas
(bad)
movs
pop
into
adc
sbb
add
aad
cmp
outs
pop
mov
push
fidivr
fnstsw
fimul
fld
lods
popa
popa
push
aaa
hlt
sub
xor
aas
jns
inc
xor
gs
retf
inc
repnz
jmp
sbb
xor
pop
movs
pop
ss
sti
mov
mov
(bad)
sbb
mov
loopne
mov
out
nop
or
push
and
jp
movs
daa
ds
xchg
xor
jbe
sbb
mov
stc
jns
mov
push
pop
(bad)
pop
shl
mov
mov
movs
std
scas
cmp
mov
ret
mov
xchg
test
mov
inc
add
mov
xor
in
in
cs
jp
imul
ficomp
pop
cmp
mov
xor
(bad)
ds
push
adc
jne
retf
outs
shl
mov
add
int
inc
stc
lods
push
and
and
xor
push
mov
ins
or
aam
cmc
fistp
push
pop
push
call
ins
cwde
push
jb
rol
dec
lods
ftst
sahf
js
sub
jp
hlt
das
inc
call
push
and
pop
adc
jp
fdiv
stos
lods
pop
fs
and
leave
mul
retf
mov
inc
push
ds
mov
adc
mov
test
mov
add
pop
in
cmp
lds
loope
retf
cmp
inc
(bad)
xchg
iret
mov
jb
sub
and
mov
sbb
sti
clc
sub
ins
and
inc
mov
out
(bad)
or
xchg
ss
(bad)
sbb
sub
scas
adc
je
les
and
mov
adc
push
arpl
push
pop
es
mov
cmps
inc
dec
mov
inc
or
add
jl
mov
and
inc
pop
sbb
dec
pop
fsubr
jno
lock
mov
retf
dec
imul
add
cmp
into
in
ss
lahf
mov
jbe
push
mov
dec
cwde
ss
or
jo
aad
and
ins
and
push
mov
loop
cmp
push
nop
jmp
sub
cmc
xor
into
aaa
and
lahf
(bad)
jmp
inc
mov
mov
mov
cmp
fild
jbe
cmps
mov
test
das
sahf
and
dec
(bad)
jmp
push
and
in
push
(bad)
ror
sbb
(bad)
push
sbb
cmp
jmp
(bad)
mov
inc
jns
daa
jo
jmp
into
xor
dec
mov
idiv
or
xor
sub
push
xchg
shl
pop
out
popf
adc
and
dec
jl
push
sub
(bad)
mov
lock
repnz
bound
cdq
inc
sub
fnstcw
mov
mov
or
push
dec
daa
movs
mov
xchg
in
jbe
inc
outs
add
sub
cs
dec
adc
div
and
adc
cmps
sub
inc
fsub
mov
push
xlat
pop
and
lahf
mov
adc
push
popf
call
and
fdiv
lahf
xor
test
or
add
pop
push
rcl
aam
enter
and
cmp
mov
dec
call
iret
jl
sbb
mov
add
cmp
(bad)
daa
es
mov
mov
nop
pusha
cs
into
rol
cmp
mov
mov
inc
das
inc
jne
stc
push
add
es
clc
fnsave
arpl
scas
movs
add
iret
mov
sub
push
int
sbb
mov
jo
js
pop
push
(bad)
ja
in
xor
push
lods
mov
dec
fsubp
rol
pushf
in
(bad)
shl
sbb
ja
icebp
sbb
jp
fsubr
mov
mov
dec
(bad)
outs
xchg
inc
jle
outs
test
neg
sar
mov
fs
mov
push
push
xor
in
and
test
(bad)
icebp
push
fadd
lods
add
into
cld
jbe
jecxz
dec
pop
aad
cs
in
mov
in
sub
in
aaa
ss
jmp
pop
adc
mov
add
mov
in
jne
or
mov
mov
xchg
sub
pop
mov
rcl
(bad)
dec
and
cli
dec
dec
test
rcr
(bad)
pop
xor
sbb
mov
sub
jbe
mov
ret
popf
inc
cmc
iret
dec
inc
xchg
mov
popf
sbb
cli
mov
xchg
aad
stos
rol
in
push
cmps
add
inc
lods
mov
daa
mov
mov
sub
and
stos
loope
fs
pop
into
xlat
cli
(bad)
and
lods
cs
cs
push
mov
fld
add
sub
pushw
jne
pusha
std
jb
dec
movs
cmps
test
psubsb
xor
ror
xor
arpl
std
sbb
and
popa
dec
or
arpl
sub
dec
cmp
sar
or
(bad)
aam
fadd
inc
cld
enter
jns
dec
mov
(bad)
jl
pop
push
loop
push
fs
loop
add
cmp
cmp
daa
sbb
movs
mov
jnp
mov
ror
arpl
xor
(bad)
sbb
adc
lock
movntps
scas
adc
xor
out
pop
push
mov
xchg
cmp
mov
pushf
mov
add
mov
scas
inc
in
movs
ds
ss
outs
mov
mov
cld
cmps
rol
in
adc
stos
dec
clc
outs
lahf
jmp
iret
inc
cmp
mov
jp
fstp
popf
(bad)
cli
or
add
inc
fadd
fs
xchg
adc
inc
add
in
in
nop
fldcw
shl
cmp
xchg
dec
je
sahf
shl
loope
xchg
xor
ss
stos
mov
push
sti
mov
xor
fld
add
movs
cmp
out
shl
loopne
mov
ror
xor
icebp
call
cwde
and
cmp
in
in
adc
jmp
ss
loope
dec
shr
dec
aam
mov
cli
out
mov
(bad)
iret
(bad)
es
test
in
jo
fcomp
jge
cs
jo
inc
fild
pop
push
mov
imul
packuswb
cmc
clc
xchg
inc
sub
add
addr16
aaa
pop
push
cmp
imul
adc
call
imul
cmp
das
mov
mov
mov
push
in
push
pop
les
inc
ss
call
mov
jge
ret
push
inc
cmp
popa
cmp
dec
shr
btc
dec
mov
sbb
(bad)
test
(bad)
mov
xchg
das
cmp
pushf
jo
call
ins
mov
mov
add
aam
mov
iret
sbb
fcmove
inc
push
aas
mov
repnz
mov
out
(bad)
push
dec
mov
aam
or
xor
adc
cmc
es
fisttp
jnp
test
rol
push
retf
dec
fdivr
sbb
sbb
sub
es
hlt
sbb
nop
ins
mov
enter
xlat
sbb
jl
jmp
cdq
les
adc
daa
stc
push
jo
pop
push
je
fcomp
dec
out
jmp
sub
cmc
xor
xor
scas
(bad)
into
loope
lods
repnz
ss
jns
pop
scas
je
ja
jne
push
mov
cdq
adc
pop
rcl
lock
add
mov
xchg
dec
mov
aad
xchg
and
pop
push
jnp
pop
call
jb
repz
jns
(bad)
addr16
lods
xlat
xchg
inc
cmp
std
dec
mov
jecxz
mov
xlat
dec
(bad)
mov
and
lock
test
fs
inc
sub
mov
pop
mov
cs
push
lea
dec
sub
stos
ja
cmp
sub
(bad)
pop
repz
aad
lods
mov
jae
jns
adc
inc
mov
mov
fidivr
jae
(bad)
repz
(bad)
lods
adc
push
xchg
mov
and
pop
stos
sub
cmp
mov
sub
adc
ss
mov
inc
pop
call
add
jecxz
push
inc
or
pop
jne
imul
shr
int3
jg
mov
je
outs
xor
sbb
xor
cs
xor
push
push
sub
retf
or
mov
cmp
arpl
loop
int
ins
or
(bad)
sub
scas
xchg
mov
(bad)
jns
test
mov
neg
push
push
popa
(bad)
push
jecxz
pop
mov
adc
inc
retf
(bad)
ins
int3
stos
jae
adc
jecxz
imul
ror
jbe
popf
jl
sbb
and
jnp
xchg
ins
xlat
in
test
mov
leave
aas
add
sar
out
dec
unpcklps
test
shr
sbb
adc
out
ret
add
je
ins
inc
ret
cli
cmp
fimul
ret
push
sbb
mov
repnz
ret
pushf
dec
mov
adc
lahf
std
and
pop
sub
mov
dec
push
shr
fistp
jl
(bad)
fdiv
jecxz
fild
enter
mov
jle
and
repnz
cmp
fwait
movs
leavew
mov
hlt
xchg
imul
mov
push
mov
nop
or
adc
ror
mov
loopne
(bad)
adc
mov
xchg
jecxz
dec
hlt
or
dec
adc
addr16
inc
lods
sub
cmp
hlt
repz
int
xchg
into
or
stc
sub
pop
div
cmp
scas
ret
lods
ss
mov
sub
xor
or
push
fild
cmp
pop
push
jb
sbb
push
loopne
push
enter
xor
ret
sbb
pop
xchg
or
jnp
push
lods
int
jno
and
cmps
iret
dec
mov
dec
inc
ds
mov
push
sbb
daa
shl
mov
ret
mov
sub
dec
add
push
jnp
gs
lods
mov
pop
mov
adc
bndstx
push
sti
dec
sbb
jo
xchg
mov
divps
or
ret
ror
mov
mov
jbe
int
in
fwait
dec
dec
fisub
inc
sar
sub
cmps
mov
mov
in
in
cmp
sub
imul
in
movs
mov
out
sub
imul
and
xor
fmul
push
outs
mov
cwde
and
dec
and
dec
hlt
fnstenv
mov
mov
retf
inc
mov
loope
push
jnp
inc
pop
xor
imul
(bad)
push
movs
addr16
cmp
jbe
lock
jb
mov
into
scas
ficom
ins
iret
mov
mov
int
cmp
push
mul
outs
cmp
fidivr
jmp
pop
add
lea
test
adc
(bad)
mov
je
ins
xor
mov
bound
stos
dec
mov
jbe
add
inc
xchg
add
test
daa
mov
mov
std
sub
dec
ret
mov
pop
xchg
repnz
dec
(bad)
into
addr16
popf
xor
xchg
jno
mov
push
jo
repz
jne
dec
push
lods
aaa
leave
inc
push
ds
push
pop
or
out
adc
shl
fld
dec
pop
pusha
dec
in
cmp
js
mov
imul
cmp
xchg
aaa
mov
daa
adc
addr16
call
jge
inc
shr
add
(bad)
and
dec
lock
aas
and
sub
mov
fist
lods
add
dec
add
dec
ss
fsub
xor
dec
push
mov
shl
jae
jmp
fstp
lahf
jp
add
daa
jmp
xchg
cdq
adc
(bad)
jecxz
mov
or
jo
mov
ret
mov
stc
bound
enter
pop
push
xadd
add
stc
jns
jle
inc
cmp
pop
(bad)
mov
xchg
cmp
leave
inc
cdq
push
aaa
jb
inc
fcomp
lea
push
pop
pop
movsd
jmp
or
ror
mov
push
les
es
nop
mov
ja
push
push
(bad)
sahf
retf
out
fst
loope
sub
aaa
jae
in
shr
add
lds
movs
out
jmp
mov
pop
jl
sub
jge
addr16
int3
xor
dec
and
sub
add
xchg
or
xchg
and
(bad)
movs
xor
out
xchg
jb
xor
mov
mov
retf
pusha
sub
and
sub
mov
mov
and
inc
and
adc
adc
or
xchg
call
(bad)
sub
sbb
inc
jmp
les
ja
arpl
mov
(bad)
or
jo
sub
or
lods
imul
cwde
mov
mov
pop
add
jl
mov
ds
dec
movs
test
mov
or
lods
adc
sbb
fcomp
out
aad
pop
(bad)
xchg
jno
or
xchg
imul
scas
mov
pusha
ss
dec
inc
test
cmps
or
loopne
jle
inc
sar
mov
outs
test
push
adc
sub
push
outs
(bad)
inc
mov
loopne
fwait
dec
push
mov
sbb
cmp
jle
push
ins
or
or
xchg
pop
arpl
ins
mov
sub
sub
ins
add
outs
mov
stos
jle
jle
add
(bad)
les
enter
mov
add
ja
aad
dec
sub
pop
jmp
xchg
or
in
fadd
jnp
and
mov
retf
ins
fcomp
daa
adc
(bad)
nop
add
mov
(bad)
loopne
test
loop
mov
stos
cmp
pop
ins
outs
into
ficomp
mov
test
pop
in
scas
fldenv
call
stos
fnstenv
xor
inc
add
cmp
jl
stos
ret
push
loop
mov
lods
dec
aam
stos
sub
in
pop
inc
inc
stos
adc
lds
lods
xor
xchg
dec
arpl
in
mov
or
jmp
push
loope
cdq
mov
pop
xor
xchg
movs
cmp
xchg
jo
push
lock
push
xchg
dec
iret
loopne
shl
xor
sbb
test
mov
mov
xchg
dec
sahf
cmps
or
jge
add
clc
sbb
jo
dec
scas
es
mov
and
aaa
pop
push
imul
pushf
daa
popf
add
xchg
nop
les
adc
mov
retf
aas
mov
(bad)
mov
fimul
xlat
jmp
imul
add
loopne
aam
iret
mov
jle
push
mov
xor
xor
nop
pop
int
mov
pop
sbb
xchg
iret
je
dec
pop
sub
hlt
inc
adc
fnsave
cmc
add
xchg
aad
push
outs
sbb
xchg
daa
jno
push
cmp
inc
push
adc
jo
add
inc
mov
cmps
adc
mov
dec
jge
xor
cmp
test
mov
(bad)
fwait
loop
fdiv
pop
jp
out
push
push
cli
mov
out
pop
shl
mov
xchg
je
push
in
pusha
test
(bad)
movs
sub
push
sub
sbb
mov
mov
aaa
sub
das
outs
mov
lods
mov
popf
sbb
stos
js
sub
leave
xlat
out
shl
add
mov
retf
repz
shr
enter
xor
sub
xor
jl
mov
add
movs
dec
push
lea
mov
push
mov
in
cwde
sub
enter
xor
cmp
mov
fild
sbb
imul
and
or
and
outs
rcr
adc
xchg
sbb
mov
or
dec
lods
push
mov
mov
bound
xchg
pop
sbb
repnz
sbb
jle
imul
mov
imul
jae
cmp
add
cmps
dec
xor
mov
mov
jnp
(bad)
mov
outs
ret
pop
shl
jecxz
ret
lahf
xor
sti
shl
popa
int
sbb
pop
sub
aad
pushf
add
sub
add
cmp
mov
rcl
imul
pop
lods
leave
adc
jo
push
mov
or
inc
xchg
cmp
pop
scas
imul
push
(bad)
leave
pop
mov
push
jnp
rcr
cmp
jecxz
or
mov
daa
mov
inc
or
loope
mov
in
push
add
lods
xchg
(bad)
repz
int
push
add
mov
pop
(bad)
sub
jne
and
push
inc
cmp
fisttp
data16
sbb
jmp
ss
or
add
fninit
out
jb
icebp
idiv
inc
xchg
dec
fwait
nop
cmc
mov
xchg
cmp
dec
mov
or
or
pushf
sub
(bad)
sar
pop
adc
out
sbb
cs
fist
fwait
pop
test
movs
in
xor
jo
add
sbb
hlt
jl
inc
dec
and
inc
arpl
(bad)
popa
sbb
or
(bad)
dec
jbe
hlt
out
mov
jns
dec
cwde
add
push
int
or
push
cld
xor
lods
push
js
xchg
not
test
pop
js
arpl
mov
pushfw
or
(bad)
rcr
enter
pop
xchg
test
fmul
loope
lock
mov
xchg
push
cmp
xchg
inc
push
fbstp
mov
mov
les
inc
push
jecxz
add
sub
(bad)
fsubr
push
push
inc
or
inc
xchg
pop
jge
jge
dec
inc
mov
cs
mov
ins
(bad)
and
xchg
mov
jmp
jno
jl
mov
movs
mov
in
or
pusha
or
(bad)
push
nop
mov
or
xor
xor
sbb
pop
sbb
or
js
retf
(bad)
and
cld
mov
iret
lds
dec
jmp
ret
das
mov
stos
not
sub
sbb
sbb
adc
sti
mov
lock
aas
mov
aas
aad
out
and
adc
popa
pop
inc
pop
in
imul
(bad)
dec
loope
shl
inc
push
fs
cs
pop
std
and
jbe
add
call
pop
test
or
pop
xchg
dec
jmp
fiadd
outs
idiv
jge
sbb
call
inc
push
adc
push
sub
cmp
or
mov
sar
dec
fldcw
xor
ror
sbb
jnp
jecxz
sub
ds
mov
push
add
out
cmp
scas
jne
mov
lods
cmp
mov
push
dec
fild
sub
lds
jmp
and
mov
pop
stos
xor
mov
mov
mov
sbb
pushf
dec
sahf
scas
ret
jb
add
stos
(bad)
ss
out
mov
(bad)
hlt
ror
mov
fistp
mov
mov
out
sub
les
push
imul
retf
and
pop
leave
jae
inc
jne
stos
gs
jno
imul
pushf
push
fs
sub
addr16
sub
pop
mov
lock
xor
fstp
dec
das
test
pop
stos
mov
xor
rol
neg
push
push
and
int
adc
jmp
cmp
add
push
int
inc
fistp
adc
test
int
lds
dec
inc
or
clc
in
sbb
mov
call
adc
ds
push
dec
mov
mov
and
xchg
mov
ror
sub
jge
imul
sub
pop
or
retf
push
loopne
jne
mov
sub
adc
push
or
xchg
(bad)
fild
stos
mov
mov
add
jl
mov
jo
adc
fstp
out
xor
call
call
das
into
sbb
or
retf
sbb
xchg
cmps
adc
mov
jg
or
pop
test
xchg
add
or
popa
sub
xor
push
mov
cmps
in
sub
add
jg
pop
and
inc
inc
push
jnp
lods
pop
xchg
out
iret
jg
lea
xchg
push
arpl
lahf
ja
sbb
ret
inc
or
daa
aas
sub
pop
fnsave
push
in
ret
mov
out
jl
int3
push
cmps
out
pusha
(bad)
(bad)
cmps
jne
ficom
shl
mov
jmp
push
xchg
test
pop
push
mov
inc
mov
or
mov
test
mov
sbb
sub
mov
inc
(bad)
icebp
and
and
add
in
inc
mov
mov
xor
inc
cmps
jmp
test
jmp
adc
outs
xor
int
int
fdivr
mov
mov
pushf
push
sti
mov
pushf
sub
mov
in
sbb
jmp
rol
aad
inc
jbe
add
or
jle
dec
aas
add
cmp
(bad)
xor
test
add
mov
les
imul
pop
fdiv
cmp
std
into
pop
enter
jmp
retf
adc
sub
jne
ds
js
mov
cmp
add
fidiv
stos
cmps
push
jo
outs
lock
es
cmp
or
je
jae
scas
movs
adc
mov
enter
xchg
leave
loopne
lock
in
int3
enter
cmp
dec
pop
repz
fcom
out
push
xor
ja
cmc
ss
std
cmp
rcr
jae
adc
int
int
cs
je
mov
mov
pop
add
(bad)
fcom
ins
hlt
lea
dec
mov
jbe
adc
clc
cmp
movs
leave
or
mov
ins
sbb
cmps
or
xor
pop
jnp
out
mov
cmps
inc
push
cmp
out
pop
xchg
mov
div
sub
cmps
imul
jmp
loop
les
data16
ins
imul
inc
pushf
mov
sbb
pusha
cdq
sub
xchg
mov
lock
(bad)
cmc
xchg
stc
add
xchg
sub
dec
push
xchg
gs
mov
cmp
sbb
jmp
mov
inc
cld
push
jmp
jmp
xor
(bad)
cli
aas
in
jnp
xchg
mov
int
mov
xor
stos
fistp
lock
pop
jb
mov
test
push
jae
pushf
cmp
inc
stos
fcomp
sub
std
repnz
je
push
mov
movs
pop
retf
stc
xor
out
push
ss
push
xor
xchg
push
stos
mov
fadd
icebp
ror
sub
jmp
popf
inc
mov
test
add
jb
in
cmps
je
add
dec
push
fidiv
in
fstp
int
cmp
adc
inc
mov
push
mov
fs
xor
pop
daa
inc
sub
dec
stc
cmp
sahf
mov
mov
int
pop
cmp
sbb
rcr
ds
mov
shl
loop
pop
or
mov
push
sbb
inc
outs
lods
mov
pop
jbe
sti
cli
cdq
xor
xchg
daa
in
jg
leave
inc
mov
inc
xchg
fwait
(bad)
call
cmps
jmp
test
jg
add
cmovl
push
push
dec
imul
sub
rep
popf
xchg
dec
or
cmps
out
xor
(bad)
sti
ins
rol
sbb
or
add
(bad)
mov
jg
xchg
push
sub
ret
shr
aas
pushf
imul
movs
push
(bad)
(bad)
push
inc
ficomp
inc
bound
inc
mov
xor
in
mov
push
retf
mov
cs
sub
pop
enter
jo
js
jg
xchg
jp
push
test
daa
test
out
shl
jl
add
sti
call
inc
aad
push
mov
inc
mov
jae
movs
mov
push
jmp
or
cmps
cmp
push
xlat
loope
test
push
mov
push
xor
mov
mov
enter
fwait
adc
pop
add
lock
mov
mov
xor
or
fst
jl
pop
(bad)
icebp
arpl
gs
fwait
sti
xchg
sbb
sub
bound
cld
pusha
shl
cdq
aaa
mov
mov
repz
aam
pusha
gs
sar
mov
jns
mov
inc
jae
mov
mov
fstp
jns
addr16
in
aam
sub
pcmpgtb
arpl
pop
js
or
scas
sbb
out
jne
jnp
pushf
sbb
cli
loope
mov
adc
adc
call
jmp
fcomp
pop
xchg
sub
dec
add
ins
cmps
arpl
pop
xor
repz
xor
pop
pop
xor
daa
dec
sub
add
pusha
ds
jmp
cmps
fs
xchg
rcl
pusha
pop
icebp
sub
jno
into
push
sbb
outs
jnp
push
mov
push
inc
int
inc
lock
adc
iret
adc
or
clc
sbb
bound
mov
in
or
adc
push
call
push
not
cwde
into
add
cmp
xchg
retf
outs
sub
jmp
enter
push
leave
dec
inc
ja
mov
cmp
test
sbb
push
cs
or
gs
mov
jae
cmp
sti
and
pop
add
lods
popa
push
addr16
pop
jo
mov
int3
clc
xchg
dec
mov
mov
xor
jmp
inc
in
add
loop
std
mov
fsubr
push
ins
pushf
cmc
or
leave
cmps
in
out
shl
jno
inc
(bad)
cmp
sbb
cdq
mov
mov
lock
pop
and
cld
cmp
mov
fdivr
loopne
ins
stc
or
int3
out
inc
(bad)
xchg
loop
cld
call
mov
or
iret
lock
retf
xlat
xchg
jmp
push
xor
hlt
loope
sub
pop
retf
pop
mov
test
or
cli
jg
cmps
mov
sub
cvtpi2ps
shr
push
or
cmps
cmp
popa
push
mov
cmp
adc
fnsave
push
pop
adc
aad
call
repnz
dec
fdivr
(bad)
push
add
sub
in
lea
cmp
sahf
pop
out
mov
cli
mov
fld
mov
xor
pop
outs
imul
jl
cmp
data16
xor
inc
mov
test
push
pusha
mov
out
in
es
jmp
mov
mov
enter
dec
leave
aam
dec
xor
lds
out
pop
nop
push
jns
(bad)
mov
outs
int
jmp
mov
in
es
push
fild
bound
outs
push
inc
in
xchg
movs
ficomp
(bad)
xchg
retf
pushf
mov
nop
pop
mov
xchg
addr16
sbb
xchg
popf
mov
jl
push
and
or
mov
idiv
aad
retf
pusha
push
movs
dec
dec
sub
cwde
es
ror
scas
cmp
je
inc
push
bound
or
out
jp
jmp
adc
and
hlt
pop
inc
cmps
mov
sar
fwait
xor
inc
add
sbb
in
arpl
dec
inc
push
sbb
push
xlat
or
adc
and
aas
inc
dec
or
jge
in
dec
add
dec
call
dec
fist
scas
cli
in
push
popf
mov
(bad)
rcl
cmp
hlt
(bad)
es
iret
pop
out
jmp
mov
scas
scas
pusha
jl
cld
or
or
sbb
retf
pop
fld
dec
fisttp
pop
imul
popa
icebp
in
mov
data16
xor
out
sbb
sub
dec
sar
push
sub
and
rcl
fcom
imul
push
push
sbb
out
mov
jnp
mov
jge
outs
neg
(bad)
rcl
scas
mov
mov
mov
pop
lea
(bad)
xlat
mov
shl
xchg
push
out
fucomip
lea
test
push
sub
lahf
addr16
add
push
cmp
cmp
std
stc
stos
mov
(bad)
add
jge
push
test
cmp
into
jne
mov
mov
push
push
mov
cs
mov
pop
mov
jb
(bad)
pop
ja
test
sbb
ja
cwde
push
mov
aas
enter
fstp
fwait
mov
out
loop
rcl
mov
mov
jmp
xchg
sub
or
in
cmp
dec
inc
movs
lds
test
arpl
pop
add
adc
add
fdiv
jb
cmp
mov
cmp
jns
xor
shl
call
pop
jmp
adc
pop
mov
sub
outs
jmp
jl
xchg
cdq
pop
dec
cld
imul
and
pop
in
lods
stos
adc
repz
in
hlt
xchg
mov
(bad)
out
int3
xchg
xor
push
mov
xor
ins
cmp
xor
push
or
mov
test
add
(bad)
arpl
adc
ret
outs
and
mov
xchg
push
out
push
mov
add
xor
(bad)
xchg
push
sbb
daa
mov
adc
adc
push
dec
fdivr
adc
dec
or
and
int3
ret
into
inc
lods
sub
daa
xchg
jnp
call
xor
xchg
aaa
xchg
cdq
ja
leave
fisttp
loope
jp
xchg
cdq
or
cmp
retf
and
inc
(bad)
dec
retf
push
jno
jle
imul
bound
loopne
ins
rcr
and
out
dec
repnz
aam
add
cmp
retf
test
or
sub
xchg
push
js
gs
dec
jle
sub
rcl
and
out
mov
std
jnp
push
ja
mov
aaa
aam
and
sbb
mov
cmovp
icebp
sub
xchg
xor
mov
inc
push
sub
xchg
cmc
pop
and
int
xor
xchg
push
lods
fsubr
mov
je
lahf
cdq
scas
lds
pop
pop
xchg
push
in
mov
ins
add
loope
jle
call
ss
shr
sahf
xchg
xor
push
adc
cld
loopne
in
gs
int3
mov
mov
div
popf
(bad)
jp
stos
je
ins
xlat
aam
push
mov
(bad)
push
popf
sbb
fimul
cmp
(bad)
dec
adc
cmp
mov
cs
(bad)
jmp
xlat
rcl
and
or
lods
xor
fild
loope
push
in
ins
mov
imul
mov
jne
push
popa
jbe
fadd
ret
imul
push
mov
pop
repnz
(bad)
loope
movs
xor
mov
push
cmp
iret
aaa
adc
mov
arpl
in
xchg
movs
push
jle
mov
dec
inc
and
pop
lea
jmp
xor
scas
fnsave
out
bound
cmc
mov
std
mov
jne
cmp
add
inc
(bad)
lock
or
add
ret
xchg
fdiv
les
sub
repz
or
push
arpl
scas
imul
test
retf
mov
(bad)
mov
mov
add
jae
repz
or
test
fmul
movs
in
in
sub
dec
iret
cmp
nop
mov
fadd
and
add
xor
outs
pop
jo
repz
adc
into
xor
and
cmp
out
adc
mov
(bad)
xchg
inc
leave
cli
mov
mov
cmp
pop
nop
out
rol
cmp
xchg
xor
fisttp
(bad)
outs
clc
popf
stos
push
cmp
cld
adc
ret
and
xor
inc
stc
sub
or
push
icebp
stos
adc
les
retf
in
movs
arpl
lea
ret
lea
xor
cmp
sub
push
jle
xor
add
daa
fwait
push
and
push
ror
pop
jo
lock
iret
shl
out
(bad)
leave
rep
add
push
arpl
cmp
pusha
in
test
or
mov
lea
stos
mov
pop
inc
mov
int
ret
dec
addr16
fistp
dec
jge
or
mov
jmp
mov
retf
add
sbb
outs
mov
hlt
test
mov
dec
call
dec
stos
pop
jbe
adc
mov
adc
(bad)
icebp
test
pop
loope
dec
push
cmp
inc
in
add
cmp
adc
in
jge
loop
sbb
push
mov
(bad)
xlat
std
add
pushf
ins
push
jns
and
adc
adc
adc
retf
cmp
sbb
lods
aas
dec
add
sbb
mul
out
or
repz
cmps
push
push
(bad)
sub
xchg
adc
pop
es
cs
cmp
test
outs
cmp
pop
mov
mov
ja
aaa
push
cs
arpl
fcom
cmp
int
sub
(bad)
out
rcr
adc
mov
jae
push
out
jae
ror
xor
or
adc
stos
cmps
nop
ja
xchg
inc
sbb
sahf
jecxz
add
ja
lds
popf
jmp
sbb
sti
sub
jbe
mov
(bad)
retf
movs
xchg
test
add
hlt
xchg
xor
out
daa
fldenv
mov
cmps
ror
into
mul
mov
out
inc
pop
mov
aaa
push
fiadd
movs
push
mov
popf
pop
sbb
test
sub
stc
sub
mov
das
jo
adc
xor
xchg
arpl
inc
mov
or
pop
adc
aas
xchg
cmp
jno
mov
dec
jno
mov
sub
pop
xchg
cmps
call
xchg
xchg
ror
repnz
jle
sub
push
pusha
and
and
ror
fistp
jg
lea
cdq
bound
daa
pop
lds
sub
sub
xchg
pop
shl
jmp
mov
pop
out
adc
aad
and
imul
xchg
int3
(bad)
and
mov
add
popf
outs
xchg
(bad)
in
std
adc
enter
sbb
adc
mov
out
stos
sti
clc
aam
outs
addr16
movs
mov
xor
ror
loope
popf
cs
mov
mov
cmovs
xchg
pop
js
imul
pop
out
pop
add
out
test
sahf
je
aaa
sahf
jge
popf
dec
and
sbb
inc
(bad)
or
repz
cmps
sbb
cli
je
loop
push
frstor
adc
iret
fwait
std
cmps
sub
call
std
pop
sub
add
jae
push
out
test
int3
inc
loopne
sub
dec
inc
cld
jo
leave
sub
sub
add
jl
pop
lods
sar
bound
dec
push
add
js
mov
adc
sbb
shl
inc
idiv
mov
or
jecxz
mov
pop
cli
call
or
(bad)
jmp
mov
aas
push
jne
stc
sti
dec
in
into
retf
adc
mov
mov
xchg
mov
out
inc
mov
scas
inc
xchg
outs
sbb
push
push
pop
inc
xor
gs
outs
movs
nop
hlt
xor
(bad)
adc
sbb
ret
std
push
arpl
repz
ds
call
out
retf
jae
jne
and
dec
dec
(bad)
cld
inc
test
call
jne
xor
stos
adc
sqrtps
jns
or
sti
fcom
fild
mov
mov
or
shl
shr
fdivr
jo
sub
ret
imul
xchg
jg
mov
xor
jo
cli
stc
in
in
add
lods
ret
(bad)
(bad)
mov
inc
test
les
xchg
pop
fcom
leave
or
imul
inc
cmp
cwde
sub
in
ins
xor
imul
enter
mov
shr
mov
jne
call
mov
adc
stc
lock
imul
xchg
loop
into
leave
xor
sub
jecxz
scas
push
jo
movs
mov
jno
sub
mov
jge
je
mov
jns
add
cwde
loopne
retf
xchg
xor
mov
cmp
and
sbb
or
ret
pop
inc
mov
mov
dec
pop
mov
repnz
fcom
cld
add
pushf
xor
and
push
push
ins
mov
sub
pop
xchg
pushf
not
and
xchg
cmps
lea
aas
test
daa
mul
fs
rcl
mov
imul
mov
neg
inc
sbb
sar
(bad)
pusha
cmp
mov
adc
jmp
cli
inc
pop
ror
into
cmps
test
add
(bad)
movs
ror
xchg
icebp
pop
pop
and
pushf
sub
in
bound
push
lock
mov
sub
or
mov
das
loope
push
movs
leave
jge
ret
fwait
aaa
pop
or
movs
retf
aas
sub
push
sbb
ficomp
or
push
push
int3
sar
(bad)
data16
xor
hlt
push
stos
sub
jl
pushf
adc
imul
jle
mov
or
sub
push
ret
leave
scas
push
and
inc
movs
or
sti
stc
add
cmp
sbb
pop
in
xlat
leave
inc
dec
pop
call
in
mov
mov
mov
dec
pop
ret
loop
push
fs
cmp
sub
pop
shl
stos
test
mov
shl
mov
rcl
inc
lods
inc
into
ja
mov
dec
cwde
(bad)
rcr
bnd
das
jg
pop
fisttp
ret
lock
cmp
mov
retf
ds
and
outs
lahf
xchg
aam
leave
pusha
(bad)
aam
adc
test
aad
shl
push
push
inc
cmpps
dec
xchg
push
xlat
mov
jmp
fstp
mov
mov
dec
stos
sbb
xor
xchg
rcr
and
(bad)
scas
clc
push
mov
int
jno
sbb
jmp
xlat
push
inc
xchg
jg
dec
xchg
jp
scas
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
mov
imul
sti
out
jecxz
sbb
sti
stos
sbb
cmps
jg
jno
add
add
dec
mov
add
and
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
