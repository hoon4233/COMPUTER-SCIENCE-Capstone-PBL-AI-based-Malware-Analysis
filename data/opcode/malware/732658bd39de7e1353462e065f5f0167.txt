pusha
inc
sldt
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
or
sub
add
or
add
push
sub
add
or
add
xor
add
add
adc
add
add
and
add
jo
add
add
sub
add
outs
adc
push
add
or
push
add
add
add
add
push
add
pop
add
or
add
sbb
add
add
adc
add
sub
adc
add
sub
add
adc
and
add
or
lea
add
add
push
or
adc
add
add
pop
and
add
add
pushf
pop
pop
pop
or
push
xor
sub
adc
add
add
add
add
xor
add
add
adc
add
add
sbb
add
or
sub
sub
add
push
sub
push
adc
or
add
sub
add
or
xor
jnp
add
add
sbb
add
sub
add
add
add
add
mov
pop
sub
add
add
mov
pop
pop
add
add
add
add
outs
push
add
or
lea
add
add
add
or
sub
xor
add
add
add
add
jae
add
or
push
push
pop
jl
and
add
shr
push
add
add
or
push
sub
adc
add
mov
add
add
add
add
add
pop
adc
or
sub
add
push
es
or
or
or
add
popf
pop
pop
pop
or
push
mov
in
add
sub
add
or
jb
add
jo
and
add
cmp
add
and
daa
add
add
pop
adc
push
jb
add
jo
adc
pop
jb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
aaa
add
jo
adc
sbb
jo
adc
push
jb
add
jo
adc
pop
or
add
jo
adc
pop
or
add
jo
adc
pop
or
add
jo
adc
pop
or
sbb
add
adc
pop
or
jo
adc
pop
push
jb
add
jo
adc
pop
(bad)
imul
jo
adc
pop
adc
add
jo
adc
pop
adc
add
jo
adc
pop
adc
add
jo
adc
pop
adc
add
jo
adc
pop
adc
or
add
adc
pop
adc
jo
adc
pop
push
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
cmc
add
jo
adc
pop
sbb
jo
adc
pop
push
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
and
add
jo
adc
pop
and
add
jo
adc
pop
and
add
jo
adc
pop
and
add
jo
adc
pop
and
fild
jo
adc
pop
and
jo
adc
pop
es
add
pop
pop
daa
jb
add
pop
pop
sub
add
pop
pop
sub
add
pop
pop
sub
add
pop
pop
sub
add
pop
pop
sub
in
add
pop
pop
sub
jo
adc
pop
cs
push
add
adc
pop
das
jb
push
add
adc
pop
xor
push
add
adc
pop
xor
push
add
adc
pop
xor
push
add
adc
pop
xor
push
add
adc
pop
xor
jecxz
add
adc
pop
xor
jo
adc
pop
ss
pop
add
adc
pop
aaa
jb
pop
add
adc
pop
cmp
pop
add
adc
pop
cmp
pop
add
adc
pop
cmp
pop
add
adc
pop
cmp
pop
add
adc
pop
cmp
out
pop
add
adc
pop
cmp
jo
adc
pop
ds
or
jo
adc
pop
aas
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
inc
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
dec
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
push
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pop
jb
or
jo
adc
pop
pusha
jb
or
jo
adc
pop
popa
jb
or
jo
adc
pop
bound
or
jo
adc
pop
arpl
or
jo
adc
pop
fs
or
pop
pop
gs
or
pop
pop
data16
or
pop
pop
addr16
or
pop
pop
push
jo
adc
pop
imul
adc
pop
push
sti
or
pop
pop
imul
add
adc
pop
ins
jb
push
add
adc
pop
ins
jb
push
add
adc
pop
outs
jb
push
add
adc
pop
outs
jb
push
add
adc
pop
jo
popf
push
add
adc
pop
jno
ror
jo
adc
pop
jb
fisttp
add
adc
pop
jae
out
push
add
adc
pop
je
sbb
add
adc
pop
jne
cmp
adc
pop
jbe
push
(bad)
jo
adc
pop
ja
ja
add
adc
pop
js
xchg
(bad)
jo
adc
pop
jns
test
adc
pop
jp
ror
jo
adc
pop
jnp
(bad)
add
adc
pop
jl
icebp
(bad)
jo
adc
pop
jge
sbb
add
adc
pop
jle
aaa
adc
jo
adc
pop
jg
inc
adc
jo
adc
and
imul
jo
adc
and
adc
pop
and
popf
adc
jo
adc
and
mov
add
adc
and
adc
jo
adc
and
loope
add
adc
and
stc
adc
jo
adc
and
adc
add
adc
and
cmp
adc
and
pop
adc
jo
adc
and
jnp
add
adc
and
mov
add
adc
and
adc
jo
adc
and
ret
adc
jo
adc
and
out
adc
jo
adc
and
or
adc
and
xor
add
adc
and
dec
adc
jo
adc
and
adc
jo
adc
and
lea
add
adc
and
adc
jo
adc
and
mov
add
adc
and
rcl
add
adc
and
icebp
adc
jo
adc
and
sbb
add
adc
and
cmp
add
adc
and
push
adc
jo
adc
and
ja
add
adc
and
adc
jo
adc
and
test
adc
and
(bad)
adc
jo
adc
and
jmp
adc
and
add
jo
adc
and
sub
adc
and
pop
adc
jo
adc
and
jnp
add
adc
and
adc
jo
adc
and
aad
add
adc
and
jmp
add
adc
or
adc
sub
or
or
add
push
adc
and
add
je
add
sbb
add
adc
add
adc
xchg
pop
push
popa
rcr
push
adc
adc
add
add
push
adc
pop
pop
adc
adc
adc
mov
scas
add
add
add
outs
and
jp
sub
add
add
add
or
jnp
add
add
add
or
add
daa
add
or
add
xor
lock
add
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
sub
add
outs
sub
jnp
add
add
outs
add
or
jnp
add
add
outs
das
add
or
jnp
add
add
or
add
or
add
or
jnp
add
add
pop
adc
add
or
jnp
add
add
pop
pop
daa
jae
add
or
add
or
jnp
add
add
outs
xor
jnp
add
add
daa
adc
add
or
jnp
add
add
adc
add
or
jnp
add
add
inc
pop
add
push
jae
add
or
add
or
jnp
add
add
cmp
add
outs
sub
jnp
add
add
outs
add
or
jnp
add
add
outs
das
add
or
jnp
add
add
adc
or
xor
add
outs
xor
add
add
add
add
xor
add
or
jnp
add
add
outs
cmp
add
add
add
add
adc
push
jae
add
or
add
or
jnp
add
add
daa
adc
add
or
jnp
add
add
outs
cmp
add
add
add
add
inc
or
aaa
add
or
add
or
jnp
add
add
outs
cmp
jnp
add
add
add
or
add
or
jnp
add
add
outs
add
or
jnp
add
add
outs
das
add
or
jnp
add
add
loopne
add
pop
pop
jae
add
or
add
or
jnp
add
add
inc
adc
add
or
jnp
add
add
dec
pop
or
add
or
add
or
jnp
add
add
push
adc
add
or
jnp
add
add
inc
push
add
push
jae
add
or
add
or
jnp
add
add
outs
add
or
jnp
add
add
outs
das
add
or
jnp
add
add
fild
add
pop
inc
jae
add
or
add
or
jnp
add
add
pop
adc
add
or
jnp
add
add
xchg
add
add
and
add
or
add
or
jnp
add
add
daa
adc
add
or
jnp
add
add
add
add
outs
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
inc
add
or
add
or
jnp
add
add
inc
add
or
add
or
jnp
add
add
outs
das
add
or
jnp
add
add
fwait
add
add
aaa
jae
add
or
add
or
jnp
add
add
outs
adc
add
or
jnp
add
add
ins
pop
es
add
or
add
or
jnp
add
add
outs
xor
jnp
add
add
adc
jnp
add
add
outs
inc
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
and
add
add
mov
xor
add
sub
add
add
inc
add
or
jnp
add
add
inc
add
or
sub
or
jnp
add
add
inc
add
or
sub
or
jnp
add
add
inc
add
or
sub
or
jnp
add
add
inc
add
or
sub
or
jnp
add
add
inc
add
or
sub
or
jnp
add
add
inc
add
or
jb
adc
add
or
add
push
push
add
push
jae
add
or
inc
add
or
push
sub
add
add
dec
add
or
inc
repnz
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
jae
gs
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
mov
test
sahf
cld
mov
fdivr
push
adc
mov
call
and
enter
out
js
adc
jnp
xchg
inc
or
cwde
mov
scas
call
sbb
xchg
popf
pop
out
popf
inc
pop
pop
sahf
test
pushf
lahf
scas
iret
pop
mov
daa
repz
lods
imul
pop
jle
cmps
ret
cmps
mov
sbb
sbb
pop
scas
jb
inc
scas
cdq
(bad)
push
scas
lods
sbb
mov
data16
repnz
jl
sbb
mov
outs
outs
mov
cmp
mov
ds
sar
repz
mov
faddp
and
mov
ret
mov
inc
retf
enter
leave
jl
ror
jnp
ins
retf
imul
(bad)
sbb
in
inc
(bad)
iret
cs
xlat
dec
cmc
ja
jg
pand
adc
fadd
jno
loop
xor
in
lahf
inc
out
xchg
out
rcl
call
mov
shr
ficomp
push
dec
xlat
cmps
out
pop
imul
es
push
hlt
ja
cs
mov
not
cmp
int3
mov
jno
push
ret
push
(bad)
cld
pop
xchg
(bad)
(bad)
in
call
xchg
sub
ja
mov
push
xchg
fwait
pop
or
or
(bad)
lock
sti
or
jle
or
or
mov
xchg
push
ss
adc
push
push
jg
call
(bad)
xchg
outs
pop
(bad)
sbb
cmps
mov
xchg
sbb
xchg
or
sbb
data16
pop
call
and
add
add
push
and
mov
and
adc
fisub
pop
push
frstor
pop
mov
sub
fwait
mov
lods
push
retf
cs
ins
stos
das
mov
loopne
icebp
clc
xor
or
xor
jb
xor
fucomp
xor
jno
sbb
cmp
nop
daa
cmp
movs
mov
ficomp
inc
fcom
inc
mov
sub
dec
cli
mov
mov
dec
dec
loope
push
shr
push
test
pop
addr16
push
pop
cmp
dec
pop
mov
pusha
jne
dec
fs
and
and
imul
jecxz
ins
push
std
fwait
jno
cmp
jns
jge
jp
popf
add
pop
(bad)
jge
add
add
adc
add
add
ficom
add
jo
add
leave
push
add
mov
adc
add
add
add
in
adc
add
add
mov
push
add
add
add
adc
add
jo
add
pop
adc
add
or
add
add
rcl
add
mov
add
add
add
add
add
add
mov
sldt
jecxz
add
out
add
sbb
add
pop
add
add
add
add
add
add
add
or
add
add
and
add
movs
add
add
add
add
adc
add
or
add
or
add
add
in
add
push
or
add
add
add
pop
push
add
inc
add
add
or
add
sub
add
or
add
push
add
add
or
add
add
aad
add
mov
add
add
or
add
adc
add
or
add
push
add
das
pop
add
xchg
add
pusha
or
add
or
add
add
add
jnp
add
mov
adc
add
adc
add
add
add
adc
add
adc
add
dec
or
add
or
add
or
add
add
add
add
push
push
add
lock
add
or
add
push
add
xor
or
add
add
fisttp
add
jl
add
lods
add
add
add
add
or
add
add
xchg
adc
add
add
mov
add
imul
add
or
add
adc
add
bound
add
inc
push
add
pop
add
add
jge
add
adc
add
jb
add
ret
add
add
adc
add
or
add
inc
or
add
add
xchg
adc
add
add
add
adc
add
push
add
fild
add
mov
add
lock
add
gs
add
je
add
xchg
sldt
fadd
add
loope
add
mov
adc
add
add
pop
add
add
add
add
or
add
add
add
add
lea
add
arpl
add
sldt
jns
add
mov
sldt
jb
add
lea
add
and
add
push
add
push
add
jne
push
add
add
add
and
dec
dec
push
adc
jle
ds
jg
jle
jle
ds
cmp
jg
ds
adc
inc
pop
adc
jo
xor
add
push
or
push
jle
jle
jle
or
jmp
pop
into
aaa
add
or
push
mov
shl
or
hlt
jle
call
mov
hlt
jle
dec
jo
jle
jmp
dec
add
adc
dec
adc
pop
pop
sbb
jg
shl
mov
jg
sbb
add
or
cmp
cmp
(bad)
ds
add
sbb
push
add
gs
inc
mov
adc
test
jnp
add
or
sbb
sbb
push
hlt
jle
xor
or
shl
push
hlt
jle
dec
jle
out
hlt
jle
dec
or
pop
ss
add
and
dec
jle
jle
rcl
cmp
pop
sbb
aam
sbb
pop
pop
sbb
cmp
lea
push
shr
dec
jle
jg
shl
jle
or
or
pop
jle
inc
mov
jle
hlt
jle
pop
dec
push
dec
push
pop
pop
push
add
push
aas
push
or
or
or
inc
mov
jle
pop
jle
add
add
push
aas
push
jle
adc
out
shl
mov
push
sahf
in
add
sbb
push
jle
jle
or
jle
jle
ds
test
gs
jle
add
add
aas
push
test
mov
(bad)
aam
jle
jle
mov
inc
mov
or
or
push
rcr
add
adc
push
inc
mov
rcl
(bad)
dec
hlt
jle
xor
add
push
ds
jle
jle
rcl
pop
shl
xor
push
sbb
or
inc
pop
jle
sbb
cmp
jle
or
push
ds
push
inc
add
sbb
sbb
or
push
ds
hlt
jle
adc
pop
pop
aas
push
sbb
lea
dec
push
jg
inc
pop
rcl
jle
push
or
or
pop
jg
cmp
add
and
push
dec
push
adc
scas
gs
ds
pop
pop
or
push
jle
rcl
call
jle
or
add
adc
push
sbb
jg
dec
push
dec
push
hlt
jle
push
jle
mov
outs
mov
push
adc
aam
shl
push
dec
push
jle
sbb
rcl
pop
jle
cmp
cmp
ds
or
push
inc
pop
jle
cmp
hlt
jle
add
jle
or
sbb
inc
pop
mov
or
aam
cmp
jg
hlt
jle
cmp
rcl
dec
jle
jo
jle
jle
cmp
add
and
push
jle
or
push
jle
jle
inc
pop
jle
hlt
jle
push
aas
push
dec
push
hlt
jle
push
sbb
add
push
dec
push
(bad)
sti
add
or
or
pop
sbb
lea
rcl
dec
aas
push
jmp
lea
dec
ins
call
jle
aas
push
hlt
jle
adc
add
or
hlt
jle
sbb
push
jle
cmp
scas
gs
gs
ds
or
add
sbb
push
jle
jle
sbb
(bad)
ds
sbb
mov
imul
add
sbb
push
jg
jle
dec
push
ins
call
scas
gs
pop
or
pop
ds
add
sbb
push
jg
jle
adc
inc
pop
jle
mov
jle
aas
push
sbb
pop
add
ins
add
adc
push
dec
push
jo
ds
ds
pop
pop
inc
pop
test
add
and
push
dec
push
cmp
aam
out
jle
sbb
inc
pop
inc
pop
or
jle
out
dec
push
ds
jo
jle
or
add
sbb
push
rcl
lea
jle
gs
shl
pop
or
out
cmps
mov
add
ds
or
aas
push
or
jle
jle
aam
test
add
ds
ds
test
call
jle
ds
jle
fcmovu
add
adc
push
adc
hlt
jle
pop
ds
mov
cmp
test
hlt
add
sbb
push
cmp
hlt
jle
or
jle
jle
jle
sbb
lea
push
or
add
ds
add
push
add
(bad)
jle
sbb
push
jle
cmp
jle
jle
ds
sbb
jle
cmp
add
adc
push
jle
or
ds
jle
jg
hlt
jle
add
add
ds
jle
test
adc
cmp
jle
jle
test
mov
dec
add
push
ds
jle
sbb
pop
ins
call
adc
push
or
pop
scas
gs
sbb
jle
lea
jl
add
out
aas
push
jle
inc
pop
ins
call
or
dec
push
cmp
pop
pop
or
imul
push
add
adc
test
push
hlt
jle
test
push
jmp
jle
jle
push
jle
jmp
add
sbb
ds
hlt
jle
pop
jle
jle
jle
jle
sbb
out
jle
adc
jle
or
jle
jle
jle
scas
gs
jle
inc
pop
jle
js
add
sbb
inc
pop
ins
call
inc
pop
cmp
jle
jle
sbb
jle
cmp
add
sub
scas
gs
call
adc
dec
push
aam
ds
jo
ds
hlt
jle
cmp
jg
jle
jmp
add
sub
ins
call
jle
jle
jg
jmp
or
pop
hlt
jle
cmp
push
add
(bad)
aam
inc
sbb
sub
aas
push
or
pop
dec
push
or
jle
sbb
or
jle
ds
rcl
jle
cmp
lea
push
loopne
add
push
adc
pop
pop
sbb
pop
sbb
jle
push
cmp
ds
jp
add
adc
jle
scas
gs
jle
adc
jle
shl
push
adc
add
adc
cmp
shl
or
out
jle
or
add
adc
jmp
push
hlt
jle
mov
dec
mov
sbb
pop
or
or
or
out
or
jg
shl
dec
shl
push
loop
add
cmp
jle
add
xor
jle
aas
push
jle
jle
sbb
imul
jle
jle
inc
pop
inc
mov
push
jle
hlt
jle
lea
pop
jl
add
cmp
pop
pop
jle
aam
cmp
ds
add
pop
inc
pop
jle
ds
sbb
or
dec
push
mov
or
sbb
push
iret
add
sub
pop
jle
sbb
arpl
dec
or
ins
call
jle
ds
aas
push
aas
push
jle
sbb
xor
pop
jle
ds
test
cmp
push
ds
test
jle
push
or
pop
jle
aam
jle
or
add
and
pop
jg
cmp
sbb
pop
ds
sbb
push
pop
pop
jle
jle
test
add
inc
pop
ds
ds
cmp
jle
jle
test
push
jle
shl
cmp
push
jle
add
sbb
mov
sbb
imul
dec
dec
push
aam
ds
jle
inc
mov
pop
jle
scas
or
jle
sbb
add
inc
pop
jo
pop
pop
ds
cmp
hlt
jle
sbb
addr16
add
ds
dec
push
adc
ds
shl
dec
jle
ins
call
pop
out
jle
mov
out
mov
ds
ds
scas
gs
ds
shl
add
or
cmp
ins
call
inc
mov
push
add
call
sub
jle
ds
jle
aam
inc
pop
adc
aam
hlt
jle
adc
scas
gs
add
cmp
add
add
mov
cmp
jle
cmp
jmp
arpl
dec
jle
jle
or
addr16
add
jmp
call
jle
sbb
push
sbb
or
sbb
dec
sbb
add
pop
pop
ds
test
mov
pop
jmp
mov
pop
dec
push
dec
push
ds
jmp
sbb
hlt
add
hlt
jle
call
out
jle
jle
ds
mov
sbb
cmp
jle
cmp
jle
jg
pop
pop
mov
or
add
pop
pop
cmp
or
mov
jmp
pop
push
add
pop
or
pop
test
cmp
cmp
cmp
push
or
cs
add
pop
ds
jle
pop
pop
sbb
pop
jle
aam
jle
les
sbb
pop
shl
(bad)
jle
ds
inc
mov
cmp
rcl
arpl
mov
pop
pop
push
add
pop
jle
jle
or
aas
push
jle
or
push
jle
adc
aam
jg
inc
mov
jle
push
or
mov
jle
jle
adc
clc
jno
add
mov
test
or
jmp
push
jle
sbb
mov
add
mov
cmp
scas
gs
ds
jo
out
rcl
push
or
push
sbb
test
shl
push
inc
mov
ds
pop
pop
jle
inc
pop
cmp
sbb
jle
or
cmp
shl
cmp
cmp
pop
pop
(bad)
mov
add
shl
jle
push
jo
out
jle
out
add
cmp
or
or
jle
cmp
pusha
int3
push
add
arpl
jle
xor
jle
jle
or
jo
jle
cli
loop
add
arpl
or
hlt
jle
cmp
push
test
push
test
sbb
or
push
jle
xchg
stc
push
add
arpl
pop
pop
aas
push
jle
hlt
jle
xor
hlt
jle
push
adc
add
shl
xor
scas
cmp
jle
jle
jle
jg
ds
enter
sbb
arpl
jle
jle
inc
pop
out
or
ds
inc
pop
or
jle
bound
or
call
jle
jg
cmp
jle
shl
push
cld
push
pop
add
scas
gs
jle
mov
jle
cmp
inc
mov
scas
gs
jle
ds
jle
aam
inc
pop
dec
push
hlt
jle
push
cmp
xor
addr16
hlt
jle
push
cmp
mov
jle
ds
jle
inc
mov
dec
hlt
jle
gs
or
cmp
and
jle
retf
add
jo
ins
call
dec
push
sbb
or
aas
push
sbb
jle
jmp
aam
or
dec
or
dec
scas
or
mov
imul
push
sbb
push
cmp
jle
ds
out
jle
inc
pop
add
aam
or
(bad)
aas
push
dec
push
ins
call
test
pop
or
sub
scas
gs
push
rcl
sbb
imul
mov
jle
jo
test
repnz
add
hlt
jle
dec
sbb
jle
jle
jle
ds
or
pop
jle
pop
pop
jle
jle
int3
or
add
jle
push
cmp
or
inc
pop
or
adc
scas
gs
jle
mov
popw
or
adc
jle
push
or
jle
sbb
pop
out
jle
add
or
and
jle
push
jle
sbb
mov
ins
call
rcl
cmp
pop
sbb
out
hlt
jle
(bad)
call
hlt
jle
push
jle
ds
aam
aam
aas
push
sbb
mov
cmp
jle
or
xor
or
sbb
jle
jle
mov
ds
aam
hlt
jle
push
cmp
hlt
jle
cmp
arpl
add
jle
cmp
jle
ds
hlt
jle
sbb
push
shl
xor
mov
sbb
cmp
push
or
jle
mov
or
sub
jle
cmp
push
cmp
ds
sbb
push
sbb
sbb
ins
call
add
cmp
lea
jle
add
jle
cmp
pop
aam
or
cmp
ds
scas
gs
aam
shl
pop
ds
out
jg
aam
pushf
mov
jle
mov
push
ds
rcl
cmp
pop
or
or
sbb
imul
(bad)
ss
add
hlt
jle
mov
aas
push
or
sub
jg
jle
jle
dec
push
pop
pop
adc
sbb
jmp
dec
sbb
pop
or
jle
sbb
pop
ds
or
cmp
scas
gs
jle
sbb
push
or
and
or
push
inc
mov
jle
cmp
mov
hlt
jle
jle
push
dec
push
jle
or
pop
jle
add
or
sub
cmp
pop
pop
jle
jmp
dec
pop
pop
ins
call
jle
jle
hlt
jle
dec
or
or
ds
sahf
or
sbb
cmp
sbb
arpl
cmp
add
push
sbb
or
cmp
or
sbb
adc
sbb
pop
or
push
inc
mov
cmp
jle
dec
push
rcr
add
jle
or
sbb
ds
sbb
jle
jle
sbb
or
pop
jle
mov
aam
sbb
ins
jb
add
or
jle
aam
ins
call
jle
inc
pop
push
mov
add
cmp
cmp
mov
sbb
push
or
adc
jg
jle
test
adc
jle
jle
jle
ds
mov
jle
ds
shl
push
inc
pop
ds
jle
hlt
jle
pop
out
jle
dec
push
jo
cmp
cmp
jle
rcl
pop
ins
call
jle
or
mov
mov
push
pop
pop
ds
jle
ds
hlt
jle
sub
or
and
ds
jmp
add
call
out
jle
test
push
outs
jecxz
add
jle
out
sbb
cmp
add
inc
mov
aam
aas
push
or
or
adc
sbb
ds
sbb
mov
jle
jle
sbb
add
jle
adc
or
sbb
aam
jmp
call
cmp
or
and
adc
jo
sbb
cmp
or
out
hlt
jle
call
jle
jmp
add
jle
cmp
or
rcl
dec
test
adc
imul
dec
add
or
ds
dec
push
jo
or
sub
cmp
aam
ds
jg
aas
push
jle
hlt
jle
push
jle
jle
out
or
or
ds
jle
scas
cmp
ds
or
add
jle
pop
pop
aam
or
aas
push
mov
jle
jle
jle
jmp
or
mov
ds
cmp
ds
pop
pop
inc
pop
ds
or
and
mov
hlt
jle
rcl
push
ds
scas
gs
or
pop
jle
jle
adc
jle
jle
jo
fsubr
sub
aas
push
cmp
jle
ds
sbb
jle
mov
ds
inc
pop
add
push
shl
xor
add
jle
scas
gs
jle
jle
sbb
cmp
ds
sbb
sbb
add
jle
jo
shl
mov
push
ds
mov
add
pop
pop
pop
sbb
xor
jg
ds
cmps
repnz
and
xor
hlt
jle
pop
or
mov
jo
hlt
jle
dec
scas
gs
pop
jle
aam
aam
jle
jle
add
or
add
jle
hlt
jle
(bad)
jle
ds
sbb
call
cmp
dec
ds
jle
aam
aam
jle
je
or
es
jle
out
inc
pop
sbb
sbb
or
call
shl
dec
inc
pop
hlt
jle
dec
or
sbb
jle
cmp
jle
out
jle
test
lea
pop
test
or
and
cmp
gs
ds
jle
jle
pop
pop
rcl
add
or
dec
jle
jle
cmp
ds
inc
jp
add
jle
jle
jle
or
push
jle
ins
call
cmp
sub
hlt
jle
pop
hlt
jle
cmps
or
push
jle
jle
sbb
push
ds
aas
push
shl
push
jle
jle
hlt
jle
cmp
jmp
jle
jle
sbb
call
or
mov
jle
cmp
dec
push
scas
or
lea
hlt
jle
cmp
mov
push
stos
aam
add
jle
jg
out
ins
call
or
or
es
jg
jle
hlt
jle
push
jle
or
jle
mov
aam
jle
ds
jle
ins
call
sbb
add
jle
test
push
jle
cmp
jle
or
jle
sbb
jle
jle
jg
js
or
sbb
test
xor
ins
call
sbb
push
adc
or
and
inc
mov
pop
shl
pop
aas
push
jg
rcl
push
cmp
jle
jle
aas
push
jle
jle
sbb
lods
inc
or
cs
inc
mov
push
test
pop
jmp
mov
mov
sbb
ds
or
addr16
scas
cmp
inc
pop
or
sub
sbb
push
hlt
jle
push
jmp
mov
shl
mov
mov
ds
jle
inc
mov
loopne
or
cs
cmp
test
pop
jle
jle
jle
adc
hlt
jle
push
sbb
cmp
mov
ds
jle
cmp
jle
jp
or
push
jle
jmp
or
push
adc
jle
jg
jle
jle
pop
pop
jle
hlt
jle
mov
mov
dec
add
pop
jle
hlt
jle
push
test
add
mov
push
or
pop
pop
or
aas
push
shl
pop
dec
push
jo
or
push
dec
int
add
jg
inc
pop
or
inc
mov
mov
loop
or
adc
inc
pop
hlt
jle
pop
jle
ds
sbb
(bad)
jl
or
sub
mov
arpl
xor
gs
jle
push
rcl
pop
jle
aam
jle
jo
jo
jle
ds
ds
inc
mov
push
jle
push
adc
adc
ds
mov
ins
call
jmp
cmp
pop
sbb
mov
hlt
jle
daa
or
jle
jle
sbb
call
ins
call
mov
jle
or
or
hlt
jle
jle
imul
pop
aas
push
in
or
sbb
jle
jle
jmp
imul
pop
pop
pop
test
inc
mov
sbb
or
addr16
push
jg
or
push
rcl
push
hlt
jle
gs
out
shl
(bad)
jle
or
jle
jle
jle
sbb
mov
aam
mov
sbb
cmp
adc
aam
inc
pop
jle
jle
jle
or
pop
sbb
add
mov
hlt
jle
pop
test
push
rcl
push
ds
jo
or
dec
scas
or
adc
pop
pop
out
jle
ds
jle
aam
ins
call
sub
push
aas
push
jle
jg
jg
jmp
push
ds
inc
mov
sbb
dec
push
hlt
jle
pop
aas
push
test
cmp
ds
scas
gs
push
add
pop
or
jle
push
pop
pop
inc
pop
sbb
or
sbb
or
cmp
jle
or
jle
or
push
jle
cmp
push
add
cmp
jle
jle
rcl
pop
ds
jle
inc
pop
pop
pop
jo
shl
gs
push
dec
and
add
jmp
dec
or
ds
sbb
pop
jg
call
jmp
gs
jg
or
dec
jle
ds
or
(bad)
jg
jle
jle
aam
add
dec
or
and
(bad)
jo
dec
push
ins
call
jle
jle
inc
pop
cmp
test
dec
aam
sbb
push
add
jmp
push
or
jle
inc
mov
mov
push
add
ins
call
ds
jle
shl
sbb
mov
or
cmp
aas
push
jle
jle
adc
ds
aas
push
or
jle
lea
push
add
ins
call
jle
jle
shl
or
adc
jle
jle
jle
or
push
or
push
add
call
inc
pop
inc
mov
jle
xor
inc
pop
test
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
cmps
add
add
add
add
cmp
mov
xchg
scas
in
mov
mov
in
xchg
in
mov
scas
mov
mov
call
xchg
out
xchg
in
xchg
in
mov
mov
in
mov
nop
mov
add
add
xor
xchg
cmps
in
mov
mov
jmp
popf
jmp
mov
nop
mov
mov
in
mov
mov
out
xchg
push
add
add
xor
mov
in
mov
test
jmp
mov
mov
mov
in
mov
scas
mov
nop
mov
mov
push
add
call
mov
mov
test
in
popf
in
xchg
jmp
mov
mov
mov
mov
in
mov
mov
in
mov
push
add
add
call
and
mov
mov
mov
in
mov
pop
add
add
scas
mov
mov
in
mov
test
out
mov
scas
xchg
call
mov
mov
test
mov
call
mov
movs
mov
mov
out
mov
or
add
cmp
mov
mov
in
mov
mov
in
mov
nop
mov
mov
mov
in
mov
mov
scas
xchg
out
scas
call
push
pop
cli
mov
enter
dec
sbb
mov
add
mov
scas
xchg
les
pusha
enter
push
cmp
xchg
xchg
lds
jb
icebp
add
xchg
mov
inc
iret
cmps
mov
and
mov
hlt
xchg
mov
add
les
mov
jo
cld
cmp
lods
loopne
add
xor
jnp
in
pop
pop
movs
loope
sub
xchg
mov
aas
push
fisttp
stos
popa
or
or
rcr
mov
jmp
movs
ja
push
dec
mov
mov
lock
in
test
and
and
mov
pop
out
mov
push
or
xchg
jns
lock
outs
cmp
dec
mov
sub
mov
mov
call
outs
push
ss
retf
mov
sbb
mov
rcl
pop
push
mov
add
int
lahf
neg
add
loop
add
ds
mov
push
push
cli
mov
mov
add
das
inc
icebp
xchg
aam
ins
sub
lahf
(bad)
xlat
jns
xor
aam
add
add
cmp
test
fmul
ror
push
stos
cli
xor
mov
cmp
in
ins
fidiv
rol
add
xchg
push
add
ja
lods
leave
lea
jnp
dec
repz
push
add
jbe
push
lock
cmps
int3
ins
cvtps2pi
xchg
rcr
int3
mov
(bad)
jb
pop
xor
test
inc
inc
cs
dec
sbb
mov
ds
mov
adc
jbe
test
pop
cmps
int
mov
and
fs
mov
pop
xor
mov
pop
ret
xchg
pop
pop
call
ret
dec
sbb
aad
repz
push
jbe
sar
cmp
fisub
mov
pop
aaa
arpl
mov
xchg
or
js
add
outs
push
push
adc
push
xor
or
mov
push
lds
cli
xchg
sahf
cld
fisttp
pop
add
in
sbb
stos
(bad)
fdiv
loop
out
addr16
imul
fs
popf
adc
jmp
pop
adc
imul
mov
cld
mov
jle
iret
fwait
loope
push
push
popf
mov
ja
outs
dec
add
mov
mov
mov
pop
sub
dec
adc
mov
test
(bad)
mov
popf
jmp
push
push
adc
dec
and
push
dec
or
inc
sbb
inc
and
ja
dec
add
push
push
adc
mov
mov
repnz
test
inc
sbb
jg
out
mov
in
je
bound
js
jge
add
push
and
add
call
xchg
(bad)
mov
lods
inc
or
cmp
and
cmp
jle
jne
loop
loopne
adc
iret
jnp
imul
pop
arpl
pop
pop
push
ja
dec
es
cld
test
xchg
loop
outs
add
std
lods
and
cmp
sar
dec
cwde
fisub
or
imul
les
imul
leave
sahf
out
fist
in
or
retf
lds
inc
adc
inc
pop
pop
push
inc
test
leave
les
stos
out
cdq
mov
je
sbb
jge
mov
or
mov
mov
lods
test
mov
les
jno
adc
cdq
fmul
xchg
in
mov
xor
jmp
xor
pop
push
dec
xchg
mov
test
js
test
and
jne
(bad)
sub
dec
add
cmc
xchg
mov
fistp
xchg
out
push
push
fidiv
add
cmp
lahf
xor
dec
mov
mov
dec
mov
aam
ret
test
inc
sub
mov
mov
push
aas
pop
test
shr
adc
enter
and
sub
cmps
neg
xchg
jge
stos
int
stc
sub
pop
xor
mov
mov
sub
test
xchg
jnp
popf
inc
adc
adc
int3
mov
or
push
push
cmp
push
test
aas
lea
inc
movs
enter
popa
adc
mov
xchg
fwait
dec
and
fstp
stos
rcl
cmp
loope
jl
mov
ja
push
jb
imul
add
adc
and
adc
sub
mov
cmp
mov
nop
retf
jno
arpl
xor
dec
add
loopne
(bad)
test
outs
cmp
out
jbe
pop
and
addr16
mov
pusha
add
pop
sbb
sti
mov
pop
sub
and
pop
cmp
fisttp
les
add
aas
rol
push
sub
out
xlat
mov
mov
push
push
cmp
sub
stos
iret
mov
mov
imul
das
ja
jg
push
dec
and
xlat
repz
cmps
lods
(bad)
mov
shl
pop
mov
movs
fiadd
xor
shr
clc
xlat
cli
(bad)
fdiv
es
add
idiv
(bad)
stos
xchg
cmps
out
mov
clc
popf
int3
lods
outs
push
or
aam
hlt
jg
(bad)
out
inc
inc
add
nop
jmp
imul
jmp
push
fwait
retf
pop
mov
mov
inc
add
std
lods
add
push
pop
inc
loope
rol
outs
inc
in
out
lods
(bad)
mov
add
mov
scas
stc
test
fisttp
or
or
mov
les
lahf
fldcw
xchg
call
sbb
jb
push
add
cmp
repnz
push
ror
cdq
bnd
push
push
mov
mov
xchg
mov
mov
scas
add
and
sub
hlt
mov
in
and
pop
bound
imul
cmp
xchg
loopne
cmps
add
iret
xchg
lock
shl
(bad)
test
cli
not
fstp
inc
jae
push
idiv
inc
cs
repnz
or
dec
inc
dec
sub
xor
add
pushf
out
xchg
or
pop
adc
adc
pop
and
adc
lock
mov
pop
push
pop
mov
xchg
loope
mov
movs
in
ret
scas
cld
mov
movs
push
dec
es
icebp
mov
call
dec
or
pusha
cmp
popa
ja
xchg
ret
(bad)
ficom
adc
cwde
jecxz
fcomp
mov
xchg
or
mov
cmps
imul
(bad)
into
cmps
aam
rcl
xor
jo
outs
sub
adc
inc
adc
push
lahf
or
xor
sub
aam
repz
jno
mov
jbe
sbb
mov
cmp
clc
sub
ficomp
out
xchg
aad
js
pop
pushf
sbb
(bad)
popa
and
ins
xchg
cli
mov
les
sub
inc
add
xchg
jecxz
jne
jns
xchg
in
out
call
(bad)
mov
inc
cmp
xchg
ret
or
icebp
call
fist
andnps
popa
mov
dec
and
xchg
jmp
ins
adc
call
loopne
ret
adc
(bad)
sbb
movs
call
pop
pop
je
mov
push
movs
(bad)
xchg
rcr
and
dec
jecxz
retf
scas
loope
shl
mov
xchg
retf
retf
mov
jbe
cmp
aam
int3
mov
inc
xor
xlat
sbb
dec
test
cli
scas
ja
dec
add
push
mov
pop
lds
ins
sbb
retf
xchg
rcl
out
(bad)
add
or
cli
mov
test
ret
push
pop
ins
outs
push
ins
cmp
inc
push
push
rol
nop
stc
mov
fisub
inc
out
in
inc
adc
popa
sbb
pop
repnz
jno
in
sahf
retf
xor
inc
fdiv
inc
(bad)
popa
sub
add
cmps
les
cmp
mov
stos
repnz
fcom
imul
add
cwde
fcom
jle
adc
and
neg
loop
retf
fcomp
shr
jnp
inc
add
push
pop
inc
mov
fmul
and
pop
mov
fnstenv
aad
pop
adc
mov
xor
sbb
push
pop
and
mov
mov
ret
mov
mov
or
push
or
sbb
ins
mov
ficomp
and
push
jmp
push
movs
rcl
and
xlat
(bad)
call
adc
mov
pop
or
cmp
dec
sbb
or
cld
mov
fcom
das
pop
or
dec
sbb
movs
jmp
popf
hlt
pop
mov
xor
sub
out
cmovnp
arpl
inc
ds
add
aaa
dec
and
in
ret
daa
pop
jo
pushf
outs
cmp
fs
sub
xchg
aad
push
rcl
mov
jp
xor
jnp
mov
stos
adc
xor
cmps
mov
push
sbb
and
xchg
popf
icebp
movs
out
cmp
sub
cmp
jno
test
scas
adc
daa
and
mov
in
(bad)
stc
daa
jo
pop
pop
cs
adc
stos
cld
mov
mov
js
pop
inc
dec
cmp
jbe
push
pop
cmp
ret
es
dec
push
sbb
inc
add
ret
mov
and
daa
push
add
cli
or
fsubr
rcr
sub
sub
inc
add
in
aad
inc
cmp
sahf
not
out
pop
and
pop
or
inc
leave
push
and
jbe
movs
neg
mov
mov
hlt
nop
rcl
neg
push
xchg
in
mov
ins
pop
fs
mov
cmp
dec
sbb
test
sbb
lock
dec
add
pop
adc
das
out
add
push
push
xchg
inc
push
push
outs
cmp
repz
or
cmp
icebp
mov
mov
dec
xor
sbb
pop
or
pop
fist
lahf
jnp
pop
ret
fild
loop
stos
dec
das
jle
cmovle
clc
or
adc
pop
add
les
push
sub
xchg
shl
test
out
xchg
ret
ins
pop
dec
sbb
jle
push
mov
lods
and
dec
imul
pushf
mov
xchg
gs
(bad)
(bad)
out
xor
push
scas
dec
push
pop
fst
inc
pop
outs
das
jmp
mov
or
in
mov
jbe
push
add
pop
or
ds
adc
das
dec
and
dec
add
pop
or
data16
jae
inc
sub
pop
stc
nop
in
mov
sbb
call
sbb
jmp
aad
stc
scas
test
adc
sub
dec
repnz
out
mov
xchg
retf
push
mov
xchg
popa
or
jge
out
movs
push
push
sbb
pushf
imul
xchg
stos
cld
sub
ss
out
fs
jmp
out
dec
add
pop
mov
add
xchg
mul
jp
js
in
nop
mul
push
or
gs
fist
xchg
mul
jl
jle
push
push
add
push
nop
fstp
addr16
xchg
rcl
nop
ret
push
inc
adc
loope
das
dec
or
mov
jne
pop
sbb
dec
adc
out
test
mov
sbb
push
or
(bad)
xchg
rep
iret
stos
mov
mov
arpl
push
push
inc
push
dec
or
jno
mov
or
cmps
lds
sub
rcr
hlt
popf
into
cdq
clc
mov
inc
sub
dec
jecxz
repz
imul
sti
mov
push
pop
cld
cwde
(bad)
xor
or
inc
stos
int3
imul
add
mov
(bad)
mov
and
inc
xchg
bound
push
stos
leave
imul
add
mov
in
mov
xchg
rol
mov
mov
cmp
mov
cmp
and
xchg
push
sbb
pusha
sbb
xor
mov
jae
inc
sub
sub
mov
ficomp
push
push
sub
pop
mov
and
cld
inc
adc
mov
jle
ja
mov
and
inc
add
imul
loop
add
add
xor
jg
ja
xchg
movs
lock
mov
xchg
(bad)
lahf
shr
pcmpeqw
xor
addr16
imul
fs
ret
cmps
cmc
mov
cwde
cli
push
push
inc
push
inc
or
pop
adc
push
jmp
dec
sbb
inc
(bad)
pop
adc
xchg
mov
sbb
push
out
cdq
enter
out
jp
dec
idiv
jnp
add
pop
rcr
sbb
mov
dec
pop
jo
adc
push
dec
and
jnp
adc
dec
push
pop
pop
sbb
repnz
gs
jno
mov
pop
push
adc
jle
sti
mov
mov
scas
stc
sar
jo
hlt
scas
shr
jmp
ss
aam
hlt
sar
xchg
daa
jge
inc
pop
ds
xchg
adc
adc
stc
mov
arpl
lds
outs
ud0
push
sub
test
movs
sbb
icebp
lods
jecxz
mov
dec
pop
pop
pop
bound
fild
outs
aas
dec
sbb
fisttp
inc
push
push
cmp
fimul
push
or
pop
or
pop
xor
mov
push
inc
push
jge
lods
cmp
rcr
adc
out
clc
jmp
iret
mov
push
pop
sbb
inc
arpl
push
adc
call
les
xchg
(bad)
lods
addr16
fimul
test
nop
aam
outs
js
pop
or
mov
jge
dec
mov
jmp
xchg
xchg
mov
int
mov
nop
push
ds
movs
in
ins
push
or
(bad)
lock
in
and
or
sahf
cmp
mov
sub
retf
add
ja
jg
retf
stos
push
dec
push
dec
mov
(bad)
sahf
iret
mov
jo
(bad)
sub
xchg
sub
or
cwde
(bad)
std
cmps
stc
xchg
dec
xor
inc
dec
push
inc
add
shl
(bad)
adc
jns
mov
dec
das
jns
ins
sub
nop
and
jb
pop
jnp
adc
out
dec
push
or
xor
in
jmp
clc
mov
sub
pop
push
aas
jb
push
pop
pusha
cs
sbb
sahf
(bad)
mov
jecxz
fimul
jmp
mov
leave
xchg
stos
cld
xchg
adc
ins
sub
addr16
cmp
inc
push
outs
or
pop
push
jne
jle
jbe
(bad)
out
pushf
retf
(bad)
retf
(bad)
popa
sbb
pop
push
and
pop
cs
add
and
adc
jl
imul
sub
jb
inc
add
pop
ins
aas
dec
sbb
bound
jns
push
or
xchg
nop
fstp
fisttp
js
pop
or
jge
dec
aas
jle
(bad)
retf
scas
xchg
cmc
lahf
retf
dec
add
pop
sbb
and
jae
pop
lods
leave
xchg
shl
dec
and
jle
mov
cs
push
inc
adc
xchg
ret
cmps
(bad)
ret
xchg
std
jmp
cmps
repnz
loope
mov
push
jecxz
ret
pop
sbb
inc
arpl
cmp
pop
xchg
clc
js
push
sub
push
add
sar
adc
push
push
or
adc
dec
or
push
xchg
cwde
enter
jb
cdq
jmp
dec
xchg
stc
inc
adc
xlat
arpl
(bad)
fistp
rep
push
add
rdmsr
imul
cmp
cmp
pop
or
push
xor
adc
sbb
imul
jg
pop
ins
adc
jb
jb
or
popa
or
js
push
xor
loope
jnp
inc
imul
outs
sub
inc
sbb
or
push
mov
and
mov
mov
and
mov
mov
dec
int
mov
jmp
ss
adc
je
mov
push
divps
add
inc
or
daa
fs
xchg
mov
lock
push
ret
mov
mov
mov
stos
cli
xchg
(bad)
(bad)
adc
cwde
lds
or
mov
push
adc
ins
sub
mov
lahf
retf
mov
(bad)
xchg
std
lods
rol
pop
sbb
ror
dec
or
(bad)
scas
fisttp
dec
or
clc
movs
hlt
lahf
adc
out
jmp
arpl
ja
push
or
sub
in
mov
dec
adc
imul
in
cmps
dec
adc
or
loop
sbb
fdivr
push
and
mov
ja
arpl
icebp
mov
popf
int
(bad)
test
mov
jno
out
stos
out
(bad)
retf
sub
sub
aam
hlt
mov
sbb
inc
loope
dec
adc
mov
xor
xchg
ret
les
jb
pop
movs
shr
jle
dec
shl
leave
fwait
lock
mov
jbe
fistp
mov
xor
dec
or
movs
neg
mov
and
mov
jo
das
stos
cld
(bad)
into
pop
sbb
lods
(bad)
xchg
mov
repnz
les
ss
adc
mov
or
rcl
int
dec
push
dec
pushf
fadd
sub
cld
cwde
push
pop
js
ficomp
test
in
div
inc
add
ret
adc
fs
mov
pushf
push
push
and
shrd
add
mov
jnp
fmul
gs
test
inc
adc
call
pop
je
push
add
sub
iret
repnz
cli
xchg
ret
inc
or
ins
aaa
data16
mov
sahf
leave
push
shl
rol
aam
ror
mov
and
xor
mov
pop
push
xlat
mov
les
cli
test
adc
sbb
inc
fistp
mov
retf
sahf
ficomp
jb
ret
lea
pop
xor
call
(bad)
xchg
or
or
loope
in
lods
call
loope
sub
xor
dec
pop
cmp
inc
add
mov
xor
pop
sbb
(bad)
aad
hlt
mov
cmp
inc
das
je
dec
pop
add
cmp
dec
or
push
shl
test
mov
cmp
arpl
dec
adc
ja
pop
or
test
gs
adc
jl
and
pop
pop
daa
sub
fs
aam
hlt
mov
xchg
rcr
je
bound
and
pop
clc
mov
sti
stos
out
dec
adc
jo
cmp
pop
sub
xchg
ret
cmps
pusha
or
inc
pop
add
dec
mov
jae
push
pop
sbb
jmp
mov
jp
dec
push
pop
push
add
inc
mov
jle
inc
adc
mov
imul
jmp
sub
xchg
iret
cdq
int3
mov
inc
sbb
loope
retf
mov
(bad)
push
or
pop
shl
call
ins
cmp
mov
outs
lds
pop
xor
push
sbb
enter
rcr
stos
retf
push
adc
push
out
icebp
call
sbb
stos
or
loopne
mov
jecxz
add
cmp
stc
mov
jno
cmp
mov
pop
or
cdq
lds
or
test
sbb
test
jne
popf
out
scas
xchg
mov
loope
xchg
xchg
rcl
das
jns
push
jp
pusha
or
xchg
pop
push
retf
ret
jp
(bad)
(bad)
call
test
cli
popa
ucomiss
adc
jns
stos
aas
push
out
mov
in
test
mov
mov
jae
bound
push
dec
std
mov
rcr
mov
pop
mov
fistp
xchg
xlat
dec
adc
fwait
in
mov
mov
je
add
jb
xor
mov
and
jbe
or
xlat
xchg
retf
mov
jb
push
xchg
cli
ins
cmp
add
jg
sahf
mov
inc
xor
xor
xor
add
jmp
fistp
dec
loope
xor
dec
ss
inc
loopne
sub
mov
xor
push
or
stos
push
sbb
mov
fist
add
adc
xchg
dec
arpl
push
dec
xor
iret
es
inc
pop
jmp
test
push
pop
xchg
std
xor
jle
jmp
mov
fwait
sub
(bad)
cmp
mov
or
stc
mov
fmul
call
xchg
jle
imul
fsub
out
push
jl
inc
in
and
into
xchg
rep
pop
loope
add
aad
push
aas
aas
jle
scas
and
xchg
enter
inc
push
popf
aam
lods
test
gs
mov
inc
xor
add
xchg
push
add
push
imul
scas
iret
outs
xor
ja
push
pop
jmp
add
push
xchg
bound
pop
xchg
push
add
add
add
loop
adc
dec
xor
shl
loopne
(bad)
nop
jne
add
jb
push
push
pop
out
lds
call
lahf
mov
mov
test
js
xor
mov
sbb
scas
cmps
(bad)
stos
rol
mov
div
or
sahf
int3
sub
add
xchg
aad
jecxz
paddd
sbb
push
loopne
rcl
cli
call
xchg
stc
mov
ins
cmp
bound
nop
ret
mov
push
rcl
outs
out
mov
rol
ret
ins
into
xchg
fdiv
rcr
(bad)
push
in
fild
out
jno
sub
sti
push
pop
jne
test
push
jno
jno
jb
cdq
test
mov
loope
inc
mov
mov
jno
test
jge
dec
sbb
daa
jl
push
push
jnp
push
and
ret
call
jmp
iret
mov
sub
test
xchg
fwait
cmps
retf
dec
adc
mov
mov
xchg
outs
(bad)
mov
add
inc
outs
sub
or
addr16
popf
int
push
fcomp
and
add
jg
push
push
aad
add
js
lods
les
ds
push
sub
pop
add
pop
loope
movs
pop
and
popf
fmul
sbb
jl
mov
aad
adc
mov
push
jbe
fistp
jns
jae
xchg
inc
repz
adc
xor
repnz
jp
xor
call
pop
mov
mov
mov
std
xchg
xlat
adc
xor
jbe
xor
cmp
js
inc
mov
adc
xchg
ret
xchg
push
jb
inc
arpl
stos
into
btr
fdiv
loopne
add
out
popa
sbb
pop
push
(bad)
imul
es
fdiv
sub
and
mov
repnz
xor
adc
outs
outs
loopne
inc
push
adc
pop
icebp
sbb
popf
retf
mov
pop
adc
cs
and
push
in
or
outs
cmp
hlt
mov
(bad)
mov
mov
arpl
hlt
ret
mov
retf
arpl
gs
push
xchg
mov
test
jo
imul
add
sbb
jne
pop
lods
xchg
rcr
aad
and
cmp
xchg
enter
or
mov
popa
scas
jg
inc
add
jmp
out
jecxz
add
and
imul
ds
in
dec
cmp
dec
mov
sti
cdq
sti
mov
in
mov
and
mov
add
icebp
mov
mov
addr16
inc
cmp
dec
in
fstp
cs
dec
or
inc
pop
dec
sbb
push
clc
xchg
xchg
(bad)
mov
mov
mov
stos
out
daa
jbe
outs
sub
jle
ins
add
call
and
es
lock
sbb
jnp
xor
stos
retf
movs
rcr
inc
sbb
ins
adc
dec
adc
xor
shl
pop
sbb
cs
add
inc
test
addr16
cmp
daa
daa
cmc
mov
sub
int
mov
push
push
repnz
in
lea
shl
mov
push
push
movs
jne
xchg
xlat
adc
push
jae
jns
inc
sbb
mov
lea
pop
dec
mov
or
jecxz
(bad)
cmps
jns
dec
push
inc
xchg
cmp
add
add
repz
fcom
xchg
mov
jmp
xlat
test
jmp
mov
add
jmp
dec
sbb
inc
or
popa
cmp
aam
shl
push
xchg
adc
inc
add
pusha
mov
adc
test
mov
mov
outs
or
xchg
mov
mov
xchg
fild
jg
push
mov
dec
out
xchg
arpl
inc
push
fdiv
dec
adc
xor
pop
xor
push
test
addr16
sbb
sub
ret
call
and
inc
cwde
pop
dec
xor
das
cmp
fisttp
ja
popa
push
xor
pop
push
adc
dec
or
ds
xor
aaa
pop
jmp
jmp
adc
pop
icebp
movs
rcl
fsubr
cwde
fcom
inc
sub
js
dec
pop
pushf
les
pusha
sbb
outs
pop
jae
sbb
inc
cmp
cli
sub
sbb
scas
mul
push
sub
push
and
and
les
ins
in
dec
aaa
inc
adc
jecxz
ret
xchg
je
and
xor
sbb
imul
sahf
fcomp
cdq
rcl
mov
jns
push
jmp
inc
xor
out
mov
outs
xchg
or
movs
shl
mov
pop
in
movs
inc
pop
jl
inc
push
and
in
mov
xchg
inc
jl
js
xor
push
fadd
inc
sbb
fisubr
jge
sub
pop
in
or
jge
and
push
dec
xchg
clc
bound
sbb
ja
push
in
cli
xchg
ret
cmc
xchg
and
shl
rol
cmps
repz
cmp
aad
pop
mov
in
push
push
jno
dec
xchg
ins
add
ss
sar
dec
jecxz
test
ins
or
xor
inc
mov
cmp
aam
mov
outs
mov
xchg
xlat
mov
adc
fcomp
cmp
jo
inc
xchg
push
jb
retf
pushf
lods
dec
cmp
fsubr
push
add
pop
cmp
iret
outs
scas
stc
mov
cmp
ret
mov
xor
and
inc
cmp
mov
movs
sti
xchg
lods
fcomp
and
mov
xchg
jle
pop
in
mov
mov
sbb
ret
xchg
sti
scas
mov
cmp
inc
xchg
call
cmp
pop
push
xchg
clc
mov
pushf
aam
fnstcw
mov
mov
shl
push
jmp
mov
adc
sti
stos
rcr
cmp
loope
ins
add
jns
(bad)
fmul
xchg
fbld
and
inc
xchg
lds
ret
popf
fadd
fst
pusha
lods
outs
out
leave
adc
xor
pop
mov
mov
xor
dec
cmp
jns
mov
loop
int
scas
dec
sahf
xlat
mov
call
push
jnp
jnp
call
int
les
jnp
mov
cmp
add
adc
push
out
int3
ins
stos
sub
push
jmp
mov
inc
mov
mov
sbb
mov
rep
fistp
sbb
mul
data16
mov
inc
push
pop
loopne
scas
retf
cli
sbb
xchg
popf
pop
inc
cmp
push
adc
div
(bad)
imul
cld
cwde
fdivr
sbb
push
jmp
mov
sub
inc
call
cmp
daa
pop
out
popa
cmp
imul
dec
and
or
xor
lock
jns
inc
popf
pop
mov
or
aam
fidivr
pop
adc
push
xchg
pop
adc
(bad)
sahf
cmps
out
inc
pushf
cmps
jmp
cwde
hlt
xor
aad
ret
mov
rcl
popa
mov
addr16
jo
and
loopne
sar
xor
icebp
mov
hlt
test
cs
mov
scas
jge
sub
mov
dec
cmp
sub
adc
ret
pushf
scas
fst
inc
adc
mov
bound
outs
out
enter
mov
stc
scas
repnz
(bad)
mov
sbb
ror
lods
push
xchg
rcr
outs
jmp
retf
xchg
(bad)
sub
mov
mov
push
jecxz
fstp
jbe
inc
cmp
and
mov
mov
call
inc
xchg
cmc
xchg
lds
sti
sub
adc
add
retf
stc
mov
cmps
iret
mov
add
retf
sti
and
push
adc
xor
dec
or
inc
add
jle
rcr
rol
add
xlat
stos
shl
adc
iret
mov
cs
cmp
fdiv
jecxz
(bad)
mov
(bad)
add
mov
adc
sub
stos
leave
outs
sub
dec
mov
push
out
(bad)
out
adc
cmovns
fwait
lods
outs
inc
adc
pop
ss
fisubr
pushf
retf
push
and
popa
xor
dec
mov
pop
xor
mov
mov
les
push
pop
hlt
adc
loopne
mov
cli
sahf
pop
pop
or
mov
adc
mov
adc
call
xchg
out
imul
push
add
imul
aam
sub
into
sub
bound
push
cmp
cmp
jo
and
ins
mov
test
push
or
imul
pop
in
add
push
add
adc
dec
push
sub
mov
xchg
ret
xor
jbe
push
xchg
inc
mov
push
lods
sti
adc
pop
ret
mov
aam
outs
aam
test
out
fidiv
adc
sti
add
pop
sbb
dec
sub
sub
push
pop
add
in
cmc
lods
in
xchg
push
mov
int3
sbb
fst
mov
push
daa
or
and
jae
jb
push
in
pop
sub
retf
mov
sbb
call
inc
aaa
dec
in
xor
fcomp
and
inc
add
xor
cmp
test
and
cmp
jg
jl
jmp
add
pusha
and
push
mov
jae
pop
daa
jns
sub
shr
sub
xor
pop
xor
xor
dec
aaa
inc
loop
push
outs
out
add
push
test
inc
cwde
imul
iret
js
pop
fs
xchg
out
mov
push
dec
(bad)
mov
ins
sbb
mul
sub
outs
sbb
not
dec
out
aam
ror
jmp
adc
push
push
sub
cdq
sub
push
mov
sub
cdq
inc
imul
hlt
fs
repnz
(bad)
inc
xchg
push
cmp
test
pop
scas
cli
mov
lahf
imul
mov
popf
shl
gs
and
xor
add
lds
pop
popa
les
and
inc
push
sar
push
sbb
push
sub
jl
dec
mov
xor
sub
inc
cdq
jle
dec
sbb
push
add
loop
mov
sbb
add
or
mov
movs
not
imul
stos
mov
mov
jbe
inc
stos
js
pop
sbb
mov
imul
adc
dec
add
or
xor
mov
adc
enter
inc
arpl
sar
data16
out
mov
push
push
in
out
ror
adc
pop
xlat
inc
pop
inc
call
loope
cmp
jp
fsubr
dec
sahf
ins
xor
dec
xchg
or
jae
nop
(bad)
mov
repz
inc
lods
cmps
rcl
inc
pop
xor
fld
and
and
shl
xor
pop
stos
clc
xchg
mov
inc
test
sub
bound
sbb
in
rcl
rcr
sub
cmc
sbb
cli
xchg
ret
(bad)
into
(bad)
fnstsw
push
es
pop
sub
xchg
rol
push
fidivr
jmp
and
int
dec
jmp
scas
retf
push
cmp
and
and
jne
dec
or
inc
xor
mov
lods
jmp
stos
std
mov
retf
jb
mov
clc
mov
cmp
shl
jmp
ins
cmps
aam
cli
or
repz
ja
lds
ins
movs
sbb
mov
inc
add
loop
cld
sub
(bad)
cwde
jae
xor
in
xor
mov
sub
ins
sbb
jae
sub
sbb
mul
push
pop
shr
ins
test
cmps
inc
adc
jmp
jb
dec
mov
mov
pop
loope
xor
fcomp
mov
xor
imul
mov
aad
jl
fisubr
jnp
je
jb
push
sub
data16
adc
mov
xchg
push
add
xor
mov
adc
pop
inc
adc
dec
in
cmp
and
add
pop
out
sub
fsub
(bad)
stos
ficomp
jnp
adc
lock
lds
daa
and
test
dec
loopne
ret
mov
add
pop
push
leave
jne
mov
mov
call
jle
sbb
iret
sbb
fnstsw
fst
add
loopne
mov
sbb
(bad)
xchg
push
pop
or
popa
loop
out
dec
popa
cmp
and
and
clc
mov
mov
sub
cmc
test
(bad)
cmp
in
mov
loope
dec
ds
mov
adc
retf
in
rcl
mov
adc
popa
adc
bswap
pusha
push
inc
add
mov
mov
je
stos
cmc
mov
pop
pop
je
data16
mov
loop
(bad)
nop
fnstcw
mov
in
jns
dec
push
lock
retf
mov
lds
and
push
dec
cmp
mov
xchg
fbld
dec
call
jbe
cmc
scas
fist
rol
dec
sbb
xchg
out
test
mov
push
adc
nop
cli
stos
mov
fstp
sbb
scas
fdivr
xchg
pushf
fild
cmc
test
pushf
push
fmul
mov
mov
popa
mov
imul
jg
mov
adc
sub
out
mov
leave
mov
shr
arpl
aaa
(bad)
mov
fisttp
aad
nop
stos
shl
mov
dec
mov
cmc
xchg
aam
movs
clc
pusha
xchg
add
mov
push
xor
cmp
sar
lods
rcl
je
inc
das
cs
mov
jecxz
ja
pop
clc
scas
sti
add
std
lods
(bad)
arpl
jne
pop
cmp
out
(bad)
fst
sbb
jb
inc
test
sub
adc
leave
shl
cdq
push
cs
mov
lods
cld
mov
pusha
xchg
gs
dec
ds
mov
mov
pop
pop
or
imul
les
mov
fimul
fwait
xor
popa
or
or
(bad)
inc
push
jbe
add
jnp
pop
pop
in
pushf
and
xchg
mov
push
pop
sbb
es
lahf
fist
sbb
outs
push
or
hlt
jmp
mov
or
cmp
xor
add
ja
push
xchg
pop
sbb
jb
pop
in
inc
mov
popa
or
fisttp
xor
cmp
fcomp
retf
xor
push
out
adc
enter
mov
sub
jl
imul
push
js
iret
into
sub
push
div
mov
shl
add
cmp
jbe
jb
push
cmp
push
in
(bad)
outs
inc
add
icebp
ja
dec
or
mov
mov
xor
clc
mov
ret
mov
sti
popf
jmp
gs
sbb
jnp
shl
test
or
push
add
shr
mov
cwde
les
sub
(bad)
movs
mov
fild
loopne
adc
hlt
and
lock
sar
pusha
xor
push
in
pop
mov
xchg
pop
mov
adc
cmps
repz
push
inc
and
minps
jecxz
scas
cmps
cli
nop
pop
gs
mov
data16
mov
sbb
in
mov
aas
xchg
in
call
cs
in
or
ret
add
push
sub
sub
pop
pop
jmp
inc
add
sub
sub
pop
sbb
dec
pop
cs
mov
jbe
retf
mov
movs
ja
jns
push
sub
enter
jle
pop
xor
retf
xchg
movs
loopne
inc
push
add
dec
or
sti
sub
dec
xor
mov
sub
test
scas
pop
das
jl
dec
loope
movs
dec
adc
test
mov
call
cwde
mov
retf
out
rcl
mov
sub
retf
or
dec
adc
mov
addr16
mov
loopne
cli
ins
or
push
jecxz
add
scas
fst
dec
add
jl
fisttp
(bad)
mov
xor
ret
jo
repnz
mov
nop
push
xchg
out
mov
xor
jge
ret
pop
sbb
(bad)
adc
call
retf
xor
and
xchg
xchg
(bad)
adc
mov
add
sub
and
jns
sub
ficomp
adc
outs
out
sar
in
xor
jbe
push
(bad)
xor
stos
iret
push
ss
dec
aaa
push
sub
push
nop
das
jns
je
xor
push
mov
sub
adc
push
movs
jmp
mov
xchg
(bad)
mov
jbe
push
xchg
mov
aam
fmul
in
inc
in
mov
int3
cmp
pop
adc
dec
push
es
pop
mov
pusha
loope
iret
xchg
mov
xchg
aad
jo
shl
test
ror
xor
neg
and
arpl
mov
mov
push
and
inc
cmp
or
jmp
(bad)
pusha
ss
ja
shr
xor
push
std
mov
imul
cdq
fcomp
(bad)
enter
bound
ins
sbb
and
call
cmp
inc
or
popa
std
mov
sbb
xchg
clc
xor
adc
jmp
adc
aaa
add
pop
add
out
sub
enter
div
cvttps2pi
fild
mov
add
pop
mov
xlat
gs
test
add
xchg
fiadd
scas
addr16
mov
mov
xchg
in
test
(bad)
mov
into
adc
ja
pop
arpl
push
std
lahf
xlat
mov
bound
imul
hlt
jo
jle
jmp
xlat
sbb
jle
in
cld
arpl
push
call
std
push
jmp
mov
mov
bound
push
adc
cmps
les
mov
es
sbb
(bad)
ret
push
je
jnp
push
jl
jb
push
cmp
ss
call
mov
arpl
cdq
rol
jl
xor
lods
cmp
xor
in
out
mov
xchg
movs
iret
mov
pop
mov
adc
push
pop
sbb
stos
jle
jmp
mov
out
cmps
div
pop
mov
pop
inc
mov
jmp
inc
xor
push
mov
cmp
std
push
sub
push
ds
lods
fistp
mov
xor
rol
jg
lods
call
add
mov
dec
or
data16
jg
cld
mov
fnstenv
sub
pop
mov
arpl
ret
and
outs
movs
in
inc
dec
xchg
ret
dec
daa
test
push
in
mov
imul
stos
imul
xchg
stc
fs
icebp
mov
in
and
mov
cmp
ret
or
jecxz
jbe
lock
mov
dec
or
mov
sbb
mov
enter
repz
push
or
aam
mov
xor
int
pop
sbb
xchg
mov
pop
cmp
ret
add
stos
pusha
adc
xchg
sti
stos
ins
add
xor
push
mov
push
sub
sbb
or
mov
push
xchg
jmp
sar
nop
jne
sbb
aad
xchg
lds
or
inc
or
jnp
pop
(bad)
cmc
mov
adc
popa
add
dec
out
mov
test
jo
add
xchg
push
add
jecxz
sti
pusha
stos
jnp
jne
push
mov
mov
cmps
rcr
aad
loop
ret
cwde
fdivr
push
dec
sahf
jge
inc
adc
je
inc
ss
mov
sub
dec
aaa
popw
daa
push
adc
dec
or
xchg
(bad)
scas
rcl
inc
add
out
daa
arpl
jmp
mov
outs
xor
inc
mov
movs
test
cmp
add
into
mov
xor
push
dec
cmp
and
jb
pop
sbb
les
push
scas
rol
shl
ins
sbb
ss
ins
sbb
inc
adc
xchg
ret
jl
sbb
pop
imul
push
and
das
pushf
movs
cmc
mov
push
mov
sbb
and
xor
add
jge
outs
ss
dec
outs
mov
movs
popa
mov
sub
in
(bad)
shr
(bad)
ret
neg
and
cmp
stos
dec
add
sbb
sbb
shl
add
lds
outs
mov
not
movs
pushf
call
and
in
add
(bad)
or
add
leave
mov
icebp
mov
add
test
pop
push
das
js
retf
mov
sahf
test
mov
fsub
out
mov
rcl
popa
stos
sbb
or
cs
mov
mov
push
sub
mov
add
sbb
lods
cli
xchg
or
push
mov
add
(bad)
out
xchg
add
or
dec
mov
fistp
daa
loopne
enter
xor
nop
shl
ins
xchg
jp
push
pop
cmc
mov
idiv
rcl
dec
sbb
mov
jb
mov
mov
movs
adc
pop
lahf
div
mov
mov
xchg
sbb
jg
pop
dec
or
or
aas
inc
das
pop
push
cli
add
repz
cmp
pop
sub
pop
out
fstp
adc
not
arpl
outs
or
jo
repnz
adc
adc
ret
aas
sub
repz
inc
add
loope
lahf
in
fld
imul
ins
call
pop
or
ds
pop
inc
sbb
mov
stos
leave
jb
push
out
enter
pop
pop
pop
cmps
(bad)
aam
int
mov
test
lock
fistp
jmp
push
xor
in
push
inc
bound
call
xchg
out
test
outs
adc
jo
add
cdq
fdiv
test
jne
mov
repnz
or
loop
fwait
stc
scas
stc
xchg
xchg
jne
dec
push
repz
loope
(bad)
push
add
and
out
cmp
and
inc
pop
add
test
das
dec
push
dec
das
hlt
mov
nop
mov
jmp
xor
ds
mov
loop
out
xor
dec
in
adc
jp
dec
push
xlat
push
or
sbb
popa
rol
mov
cmc
mov
pusha
or
cmps
fmul
mov
pusha
mov
push
sub
add
sbb
(bad)
mov
lods
sub
mov
cwde
idiv
mov
xchg
pop
and
xchg
cld
(bad)
mov
test
push
imul
mov
mov
popf
(bad)
xchg
movs
fsub
and
inc
add
mov
fimul
push
cmps
lock
fsubr
(bad)
frstor
inc
cmp
dec
out
mov
repnz
retf
mov
dec
sbb
in
(bad)
dec
sub
bound
jo
jg
inc
sbb
pop
es
sbb
ss
mov
fbstp
fld
sbb
arpl
les
(bad)
es
sbb
dec
cs
sub
mov
mov
jo
stos
xchg
aad
mov
mov
mov
nop
scas
lock
data16
jae
and
and
jg
add
pop
cmp
(bad)
aas
dec
add
daa
inc
add
inc
ja
push
sbb
mov
aas
lds
addr16
stos
cld
sub
pop
jecxz
inc
xchg
mov
xor
xchg
enter
add
push
or
in
adc
cmc
mov
test
jp
jg
test
lods
dec
sbb
arpl
and
cld
fisttp
aam
(bad)
sti
lods
xchg
cdq
dec
rcl
iret
or
xchg
fidiv
out
lock
mov
fstp
mov
stos
enter
mov
frstor
lods
enter
ret
xlat
test
xchg
mov
xchg
test
xchg
fs
push
mov
pusha
xor
fcom
lahf
scas
call
mov
mov
pop
jmp
fistp
(bad)
mov
cmp
pop
or
adc
cmp
mov
push
xor
pop
leave
pop
sbb
mov
loopne
add
inc
out
lods
popf
iret
xchg
lock
mov
xor
inc
or
loopne
and
fs
inc
sbb
stc
pushf
xlat
push
aam
cmc
mov
sar
or
jb
int
outs
sbb
inc
in
pop
and
lea
test
mov
xor
xchg
hlt
xchg
mov
xchg
xchg
mov
cld
mov
mov
out
pop
xor
je
push
cmp
ds
add
imul
xchg
shl
gs
add
xchg
clc
nop
std
or
jo
rol
jns
(bad)
and
and
pop
push
pop
outs
add
dec
das
or
iret
xchg
into
cmps
imul
rep
fisttp
xor
data16
popa
or
xor
dec
mov
ds
xchg
sar
inc
mov
fsub
jp
daa
dec
vmwrite
dec
in
repnz
loop
mov
mov
xor
xor
or
pop
xor
jp
dec
ds
movs
jecxz
hlt
(bad)
aad
pushf
mov
imul
fisttp
mov
(bad)
xor
sbb
pop
xor
ret
xchg
fnsave
mov
xchg
fstp
mov
test
ds
or
xor
push
dec
adc
or
dec
stc
xor
jg
push
or
ss
add
and
or
fst
in
retf
xchg
sti
xchg
int3
xor
mov
aad
(bad)
cmp
mov
(bad)
nop
fisub
pop
xchg
xchg
cld
mov
cdq
mov
in
lea
ret
pop
push
jmp
mov
mov
dec
pop
loop
jmp
dec
xor
and
retf
xchg
inc
mov
out
cmp
inc
loop
fnstsw
popa
cli
mov
xchg
xlat
mov
(bad)
stc
mov
and
cmp
loopne
icebp
mov
(bad)
fisub
ret
add
cs
ins
add
push
dec
out
sti
arpl
dec
out
mov
mov
adc
je
lahf
test
jl
mov
movs
(bad)
jnp
xchg
in
mul
rcl
mov
mov
sahf
int
sbb
gs
sbb
fistp
in
stc
and
mov
sub
gs
ret
cdq
in
mov
sbb
mov
scas
out
pop
mov
mov
std
pushf
dec
fcom
aad
mov
cmps
into
mov
sbb
sahf
call
jbe
outs
adc
mov
sub
enter
enter
jmp
pop
lock
stos
outs
cmp
ja
ds
test
ds
push
push
adc
inc
sbb
aaa
dec
add
clc
xor
push
in
das
jbe
outs
test
fmul
adc
inc
cmp
jne
test
stos
fs
fisub
or
ja
nop
shl
cmc
lods
out
adc
and
and
jae
outs
sub
fs
lds
shl
data16
and
pop
(bad)
xchg
sar
mov
xchg
sub
pop
fsubr
jmp
push
cmp
imul
push
sbb
out
xchg
fmul
pop
loop
retf
adc
aaa
dec
sbb
or
(bad)
xchg
aam
stc
je
ud0
xchg
leave
lea
mov
int3
xchg
dec
fimul
inc
mov
in
pop
mov
and
cmp
sbb
fs
push
dec
and
movs
in
movs
xchg
sbb
imul
pushf
into
sahf
stc
xchg
imul
adc
jg
ror
jb
pop
mov
fwait
retf
scas
loop
les
adc
gs
or
out
ror
je
data16
add
cmp
inc
lods
lock
out
push
fcom
xchg
frstor
pop
icebp
scas
aam
out
xlat
cdq
(bad)
xchg
sub
sti
sub
pusha
sub
outs
outs
cmovp
fld
dec
or
movs
stos
cld
scas
cmc
push
loop
sar
div
repnz
stos
lds
jno
and
outs
sub
mov
imul
aad
sbb
pop
xor
clc
cmp
jl
stc
push
sbb
loop
rcl
xchg
cmp
bound
pop
cmp
and
inc
cmp
ins
pop
inc
sbb
xchg
xor
into
cmp
jle
mov
scas
icebp
cmp
or
shr
xchg
test
jb
inc
adc
push
dec
or
xor
arpl
dec
sbb
dec
adc
xor
sub
leave
xchg
mov
or
mov
movs
fstp
pop
cmp
adc
jno
lahf
fidivr
push
add
dec
cmp
pop
jo
pusha
sub
sbb
repz
push
sbb
xor
dec
and
pop
push
sbb
int3
mov
xchg
sti
mov
js
push
and
xor
add
nop
clc
fwait
dec
sbb
inc
xor
mov
rol
xor
and
and
jbe
neg
pusha
cmp
pop
cmp
mov
les
movs
test
lods
shl
cwde
into
cmp
fs
or
add
inc
mov
mov
jne
dec
or
adc
cmp
in
add
jg
fwait
push
add
popf
mov
test
lahf
in
icebp
call
cmovbe
adc
push
jne
call
scas
in
in
xlat
adc
push
sub
xor
scas
retf
lods
in
test
call
icebp
lahf
fs
iret
xchg
fldcw
add
dec
mov
mov
pop
sbb
push
or
pusha
add
rcr
xchg
inc
mov
xchg
shl
xchg
xchg
pop
dec
push
inc
les
lods
jmp
mov
retf
das
pop
loop
leave
pusha
mov
jle
cmp
sub
xchg
iret
data16
mov
add
push
adc
in
mov
mov
pop
aas
push
push
or
hlt
or
int
out
mov
push
test
fbstp
inc
loope
outs
adc
fs
ds
leave
xchg
ror
sbb
push
sub
sub
dec
loopne
ja
sub
push
idiv
out
out
add
push
add
shr
dec
loopne
outs
add
sbb
jne
mov
lods
fimul
mov
xchg
or
lahf
into
mov
xor
adc
pop
or
xor
out
cmp
jbe
dec
jecxz
rcpps
imul
sbb
pop
fild
inc
add
mov
and
pop
repz
mov
(bad)
xchg
outs
add
jo
and
cmp
push
push
dec
pop
push
ret
outs
add
push
dec
fcom
ret
xchg
jns
aad
neg
test
xchg
fcomp
mov
xor
jne
addr16
xor
sbb
dec
test
lahf
shl
out
fwait
sar
dec
cmp
in
outs
and
adc
ins
sub
dec
or
(bad)
fisubr
ret
xchg
repnz
imul
adc
mov
movs
call
sahf
std
xchg
leave
(bad)
retf
mov
mov
out
xor
cli
mov
inc
loope
in
mov
jno
nop
aam
pushf
mov
mov
out
int
iret
mov
enter
repnz
pusha
ss
popa
pop
pop
and
jmp
add
sub
outs
xor
jmp
jmp
pop
mov
scas
cld
sub
mov
aaa
push
xchg
iret
imul
in
cld
mov
imul
jmp
xor
adc
pop
ss
cmp
ss
(bad)
fldcw
dec
add
dec
mov
mov
cmp
jge
inc
sbb
push
pop
sub
add
addr16
cmp
scas
clc
mov
mov
jp
inc
mov
bound
ror
in
data16
inc
cmp
shl
jo
pop
xchg
or
aas
cld
cdq
enter
ins
pop
dec
out
mov
mov
dec
movs
dec
in
jmp
int3
add
xor
pop
adc
xchg
sbb
pop
fadd
inc
sbb
add
in
cld
jge
hlt
test
lods
xchg
ror
mov
das
ins
sbb
mov
xchg
shr
adc
js
dec
outs
mov
push
sbb
mov
mov
lea
imul
(bad)
retf
pop
pop
pop
xor
push
sbb
outs
cmp
popf
repnz
out
ins
xchg
fwait
repnz
mov
fwait
imul
sbb
dec
outs
cmp
iret
(bad)
cmp
xchg
in
jnp
inc
pop
cmp
push
lods
push
or
mov
push
xor
ins
adc
push
push
sub
fs
jne
xor
mov
push
mov
jecxz
les
shl
xchg
ins
jecxz
les
rcl
dec
fld
das
js
jp
es
neg
inc
xor
je
dec
cmp
jle
sub
jmp
imul
arpl
es
scas
mov
push
inc
xor
dec
icebp
sahf
out
mov
call
test
test
dec
movs
shr
push
adc
and
push
daa
jb
jo
jb
xchg
lds
xchg
mov
cmp
dec
adc
out
cli
cdq
int
inc
mov
js
jmp
cli
scas
pop
(bad)
rcr
and
jae
dec
cmp
mov
xor
jl
fst
pop
adc
fistp
movs
loopne
adc
loope
repz
xor
loop
jmp
lea
mov
mov
int
and
cmp
out
retf
sub
add
jno
loop
loop
mov
div
sahf
jns
(bad)
fdiv
add
psubb
jne
ret
pop
cvttps2pi
push
adc
jp
imul
pop
je
sbb
pop
xor
sub
push
sbb
cmp
push
or
mov
add
inc
mov
mov
xor
push
pop
xlat
mov
arpl
sbb
popa
add
inc
sbb
call
dec
mov
mov
mov
les
int3
mov
mov
mov
lods
lock
mov
and
xchg
and
pop
sbb
ins
xor
cdq
retf
fwait
hlt
sahf
jbe
repnz
fwait
inc
cmps
(bad)
xchg
(bad)
xor
jnp
int
push
and
pop
(bad)
in
xchg
int
mov
pop
in
lods
(bad)
xchg
rcl
or
das
dec
cmp
push
fstp
cmps
pusha
add
jp
xchg
rol
test
push
cmp
adc
xor
dec
sub
or
ror
mov
xchg
cmp
pop
jge
jns
out
mov
fisub
xchg
mov
jo
push
sub
ficomp
inc
sub
cmp
push
sar
cmp
(bad)
xor
dec
push
loopne
push
imul
dec
std
scas
(bad)
lods
aad
pusha
es
cmp
jns
jns
jecxz
push
adc
outs
or
ins
push
arpl
push
jno
stc
cmp
ja
dec
cmps
jge
inc
or
add
inc
es
dec
mov
daa
daa
jg
jle
pop
or
xor
push
ins
jecxz
and
mov
or
pop
add
dec
sbb
push
hlt
test
xchg
(bad)
int3
mov
icebp
mov
fiadd
cwde
and
cmp
repnz
ret
sbb
add
imul
dec
loope
out
outs
ss
push
pop
lock
or
xor
jo
add
int3
sub
pop
or
enter
xor
(bad)
pusha
pop
dec
adc
sub
mov
xchg
and
push
sar
out
mov
push
ss
sub
xchg
enter
pop
cmps
and
sub
adc
jne
int
ret
adc
jp
dec
sbb
hlt
mov
in
mov
pushf
stc
or
imul
clc
fs
daa
inc
aas
ins
(bad)
mov
pop
add
js
pop
je
push
bswap
aaa
jnp
push
sub
adc
cmp
cmp
fiadd
adc
jnp
pop
adc
sahf
movs
rcr
xor
int
icebp
mov
mov
mov
mov
push
adc
ds
xlat
mov
jns
cmps
mul
pop
js
jo
(bad)
sub
push
hlt
xchg
xlat
cwde
mov
sbb
mov
leave
ss
test
cdq
sahf
int
fsub
push
jl
jns
push
push
xor
adc
loop
gs
dec
fwait
jbe
test
cwde
mov
pushf
fld
xchg
mul
xchg
(bad)
mov
aaa
sub
pop
adc
cmps
fisttp
pop
sub
jecxz
scas
retf
fs
cmp
aam
(bad)
mov
imul
push
ret
jns
jno
inc
ret
mov
bound
dec
enter
push
and
ins
sbb
js
mov
sbb
rcr
pop
setbe
test
or
ds
sti
xchg
outs
ret
mov
sbb
shr
mov
sahf
jp
cmp
test
add
call
mov
mov
jl
sub
ds
sbb
mov
test
push
call
jo
daa
arpl
cmp
jno
mov
mov
add
(bad)
adc
mov
mov
mov
xchg
sahf
lds
mov
jmp
cwde
std
or
fistp
loope
repz
sahf
dec
loopne
into
(bad)
fbstp
fs
push
dec
sbb
js
sub
in
loopne
repnz
rcl
hlt
mov
mov
cmp
pop
ss
mov
mov
sahf
jns
fwait
retf
cli
jl
cmp
call
cmp
jns
push
fwait
and
mov
fwait
jmp
jmp
test
or
jnp
dec
out
mov
xchg
(bad)
scas
movs
fldcw
dec
loop
out
mov
mov
ds
aas
pop
adc
xor
inc
retf
enter
into
dec
pop
and
enter
sbb
cwde
into
lea
pop
sbb
jl
xchg
rol
in
cmp
scas
mov
pop
daa
es
dec
daa
inc
loopne
pop
jmp
mov
sbb
pop
sub
push
xchg
mov
cwde
sbb
(bad)
fstp
cmp
inc
fld
jmp
shl
or
imul
out
stc
xchg
rcl
loop
mov
fbld
or
adc
bound
popa
add
out
adc
in
stos
movs
adc
jo
push
xor
inc
in
mov
and
sbb
add
and
push
pop
jmp
pop
emms
loopne
fwait
stc
mov
(bad)
test
shr
inc
xor
cmp
cs
(bad)
cmp
sbb
dec
hlt
nop
mov
mov
rcr
mov
add
(bad)
jbe
pop
xchg
mov
xchg
in
cld
add
push
test
cmp
xor
cdq
inc
inc
cmp
dec
push
push
and
push
js
and
push
or
addr16
fwait
into
imul
push
fmul
dec
push
js
or
push
jmp
xchg
cld
arpl
dec
push
daa
sbb
jg
ret
stos
and
repz
aad
rol
(bad)
retf
mov
xor
fisttp
dec
sub
or
mov
test
cmp
xor
sbb
loopne
sub
jb
dec
nop
aam
inc
pop
jmp
(bad)
jmp
dec
and
lods
sbb
cld
inc
popf
mov
push
sub
jae
adc
jns
out
push
pop
pop
pop
ror
scas
xchg
adc
rep
test
mov
not
movs
push
aad
push
out
out
repnz
je
cmp
sbb
mov
push
mov
mov
jo
test
in
std
jge
xor
test
push
mov
cmc
jnp
aaa
(bad)
xchg
iret
stos
push
lock
mov
test
popf
mov
(bad)
xor
nop
pop
stc
mov
jmp
and
or
pusha
enter
or
aas
sub
ss
cmp
pop
in
aam
int3
das
jmp
jne
add
bnd
cld
rol
int
pushf
jge
jmp
push
jle
push
aad
movs
push
push
bound
cdq
test
push
test
shl
mov
lahf
ds
cdq
icebp
dec
jbe
ret
xor
mov
jns
pop
cwde
jp
ret
fsub
jne
inc
cmps
mov
and
(bad)
mul
(bad)
gs
xchg
pop
enter
mov
mov
mov
xor
push
or
cmps
cmp
cmps
jnp
mov
fs
sbb
inc
cmp
xor
xchg
pushf
add
cmps
neg
dec
pop
fxch
int3
jns
push
and
lea
or
enter
inc
pop
fsubr
in
add
mov
jne
movs
sub
(bad)
add
pop
inc
xchg
sub
scas
out
arpl
sbb
sahf
inc
aam
and
cmp
mov
pop
nop
cmp
sahf
ss
xor
jp
mov
addr16
adc
mov
aam
call
sub
jns
mov
repz
lds
cmp
push
(bad)
lods
xor
inc
xchg
int3
int
iret
cmp
loopne
lods
mov
xchg
dec
add
push
add
inc
out
dec
rol
repnz
lods
xchg
movs
ins
jge
(bad)
push
test
xor
cmps
cli
(bad)
dec
sar
in
mov
push
jp
mov
mov
mov
daa
mov
fst
jns
xor
cmp
int
ins
ja
repz
enter
addps
inc
push
lds
mul
mov
fcmovbe
repnz
stos
mov
adc
sub
or
jmp
jb
gs
popf
adc
repnz
sbb
and
cwde
(bad)
int3
push
jae
arpl
jg
xchg
xor
(bad)
adc
jecxz
stc
idiv
push
dec
jp
mov
in
pop
cdq
push
push
cmps
sahf
adc
mov
shr
das
std
dec
push
cmp
imul
push
add
je
clc
nop
leave
scas
ins
mov
aas
push
mov
xchg
sbb
inc
push
push
movs
jae
cld
xlat
add
pushf
call
repnz
pusha
xor
push
lods
push
imul
pop
arpl
and
sub
mov
inc
xor
enter
stos
adc
cmp
mov
out
into
mov
mov
fst
je
pushf
and
sar
or
sbb
fwait
push
and
inc
movs
inc
out
jmp
add
ins
fwait
pop
sti
les
jmp
bound
push
fisub
popf
(bad)
and
dec
div
rcr
push
jbe
mov
popa
je
mov
out
imul
fistp
dec
add
xor
jb
or
cmps
gs
xchg
adc
cwde
and
add
retf
push
cmp
cmp
xor
mov
jecxz
test
iret
cs
jg
fcomp
leave
sub
pop
enter
xchg
mov
xor
xor
xor
and
fild
sbb
add
cmps
int3
add
jnp
mov
fwait
fwait
mov
push
mov
pop
and
cmp
cmps
cwde
push
inc
sub
loopne
adc
fistp
sti
retf
lods
push
fwait
cs
ds
jae
aam
dec
mov
inc
cs
jnp
jl
xchg
xchg
dec
ss
mov
aaa
xchg
out
lock
outs
ret
push
and
and
ret
addr16
mov
xchg
out
push
cmp
jno
sahf
pusha
inc
dec
jmp
jge
jno
pop
xchg
adc
daa
xchg
cmps
cdq
retf
int3
adc
push
jns
sub
jb
(bad)
mov
push
inc
dec
xor
fucomi
sbb
push
pop
aam
xor
cmp
dec
enter
pushf
xchg
mov
jge
xchg
popa
or
lods
jnp
jns
cmps
mov
mov
test
add
pop
or
and
fnsave
movs
xchg
pop
jmp
int
loopne
jne
xchg
xor
daa
mov
ins
xor
xchg
loop
cld
sbb
fisub
pop
in
sub
push
pop
xor
dec
and
ja
(bad)
push
leave
aaa
add
mov
call
inc
retf
jne
out
nop
addr16
fisubr
test
push
icebp
repnz
jne
add
pop
push
jle
pop
xor
inc
sub
nop
inc
sub
(bad)
retf
and
call
mov
stc
mov
repz
scas
sub
inc
not
nop
(bad)
cli
sub
clc
dec
das
cli
and
sar
mov
retf
cli
lahf
pop
adc
pop
movs
das
xchg
pop
ror
kandnb
sahf
loop
push
adc
push
scas
aam
icebp
xor
mov
icebp
scas
mov
jge
xor
ficom
push
mov
movs
adc
or
pop
hlt
or
sbb
pop
jb
add
cli
fwait
sub
xchg
cmps
add
add
pop
shl
rcl
gs
loope
add
add
jp
retf
and
xchg
shr
int
or
cli
fsubr
jne
mov
(bad)
(bad)
ret
xchg
out
dec
sbb
sbb
mov
push
cmps
mov
addr16
pop
and
adc
test
lahf
jb
imul
iret
xor
dec
repnz
in
fsubp
rcl
add
cwde
lds
ret
cmp
pop
mov
adc
es
not
cmc
sbb
sti
dec
scas
mov
and
sbb
nop
addr16
xor
sub
push
jge
mov
cmp
jp
sub
xlat
enter
mov
int
enter
popf
xchg
xor
js
adc
dec
into
int3
aaa
cdq
das
and
mov
fsub
arpl
xchg
cli
sbb
ror
pop
rcl
je
pop
mov
cmps
xor
mov
mov
mov
cmps
mov
mov
repnz
lods
loope
push
xchg
adc
daa
call
jns
xchg
pop
pop
cli
jmp
lods
hlt
dec
clc
and
push
sahf
scas
mov
mov
cmp
push
pop
inc
fld
jno
inc
mov
push
std
pop
cmp
fstp
les
pop
pop
mov
enter
out
xchg
add
loopne
mov
fcmovne
and
add
lods
jl
or
and
(bad)
sbb
test
push
ds
rol
cmc
pop
std
retf
ja
cdq
(bad)
xlat
or
addr16
mov
int
leave
cli
not
xchg
imul
sub
jne
xor
jne
and
jb
ret
inc
xor
xor
iret
sub
ds
add
dec
mov
outs
mov
inc
inc
inc
cmp
daa
push
mov
fdiv
add
sub
mov
push
jae
xchg
mov
mov
(bad)
cmp
add
psubq
dec
mov
not
jmp
dec
stos
rcl
cmp
(bad)
fsubr
cmps
push
aaa
mov
mov
adc
sbb
jo
fwait
daa
inc
mov
shl
je
sbb
pop
mov
aad
(bad)
ja
mov
mov
cmc
jge
push
gs
retf
xchg
or
dec
rol
push
stc
mov
mov
xchg
scas
hlt
faddp
add
mov
fwait
dec
(bad)
(bad)
jae
out
dec
and
bound
repnz
or
cmp
push
ds
call
sbb
sub
xor
inc
mov
mov
enter
add
fisttp
scas
push
ins
push
cld
inc
jo
push
cmc
jno
clc
iret
xchg
cmp
cmp
aas
test
mov
adc
pop
ins
sbb
ins
loope
mov
test
sti
movs
packuswb
jmp
imul
pusha
and
fidivr
aaa
and
mov
adc
mov
and
jmp
ret
sub
out
mov
(bad)
xor
dec
popf
add
adc
dec
cmp
push
inc
adc
shl
scas
sub
lods
xlat
jo
addr16
cwde
outs
dec
inc
into
xchg
mov
push
sub
mov
fsub
les
xchg
test
imul
jmp
cmp
imul
cld
and
push
xchg
push
js
jmp
aas
jl
cmps
cwde
cmp
fdivr
dec
xor
mov
sar
in
jg
jp
(bad)
or
pop
paddd
xchg
aam
mov
push
dec
outs
loope
xor
mov
(bad)
iret
or
pop
out
jnp
jmp
add
lods
or
loope
pop
loopne
push
fmul
cmp
or
mov
inc
lea
leave
mov
push
pop
push
enter
xor
mov
cli
loop
and
sbb
jl
mov
ins
xchg
jbe
mov
jno
xchg
mov
mov
aaa
jns
dec
cwde
push
jmp
in
adc
mov
(bad)
sbb
cwde
mov
sbb
mov
cld
push
mov
cdq
cmp
and
xor
pop
mov
xor
mov
imul
scas
fdivrp
cmps
retf
adc
mov
sbb
cmp
(bad)
jne
adc
push
cmp
xchg
sbb
imul
fucomi
pusha
out
loopne
mov
mov
cmc
mov
lea
or
jbe
dec
push
repnz
push
sar
or
inc
cs
(bad)
xchg
sub
mov
(bad)
aas
cmc
in
data16
bnd
xchg
dec
mov
outs
test
cs
lods
in
dec
(bad)
mov
rcr
cdq
ret
sbb
outs
into
stos
inc
pop
ret
xchg
stc
xor
das
out
push
mov
int
repz
pop
nop
dec
arpl
adc
push
mov
in
mov
xchg
sahf
jl
ftst
xchg
std
fnsave
pop
lock
mov
push
dec
push
mov
ins
call
inc
cld
dec
mov
ficomp
xchg
cmp
inc
call
into
and
adc
fild
adc
aam
pusha
dec
hlt
in
add
retf
test
dec
add
test
dec
pop
div
outs
sbb
xchg
sub
(bad)
mov
xchg
mov
rol
jle
loope
(bad)
aaa
data16
sub
aad
popa
nop
push
imul
jmp
sahf
jo
ret
and
xchg
push
xchg
mov
mov
push
jb
pop
sbb
jns
jne
mov
or
jmp
push
mov
adc
jp
jl
sahf
push
hlt
jne
rcr
gs
push
dec
pop
loop
jmp
gs
push
adc
out
or
fwait
lods
mov
retf
push
cmp
pop
adc
dec
js
mov
clc
dec
pop
adc
test
xor
pop
pusha
retf
sbb
lods
xchg
xchg
pop
sbb
adc
nop
(bad)
lods
cdq
jecxz
ins
stc
mov
adc
and
ja
mov
and
dec
retf
adc
mov
outs
fstp
jle
mov
movs
or
or
mov
inc
jno
aas
and
mov
sbb
mov
adc
leave
inc
fisubr
jp
sub
and
js
push
mov
sub
inc
test
outs
cmp
inc
mov
mov
sbb
cmps
xchg
je
sbb
mov
ret
mov
fistp
jge
lahf
shl
out
or
pop
mov
in
sub
test
(bad)
cli
call
dec
nop
inc
inc
inc
sbb
add
push
scas
pop
inc
cmps
xor
mov
ins
jle
sub
inc
mov
inc
mov
adc
adc
mov
and
jmp
xchg
inc
add
or
pusha
push
mov
stc
sub
stos
and
mov
add
leave
adc
sub
adc
mov
imul
mov
cli
pop
pop
pop
pop
mov
adc
mov
dec
out
out
and
xor
and
mov
rcr
(bad)
jecxz
stos
shl
ds
stos
sahf
push
shl
fisttp
gs
mov
aaa
mov
call
dec
inc
mov
mov
dec
dec
imul
mov
inc
imul
cmp
les
inc
push
add
and
inc
pop
int3
mov
adc
sbb
inc
enter
cld
pop
dec
out
mov
por
xchg
mov
pushf
mul
adc
clc
and
mov
adc
in
add
dec
mov
cmps
cmps
or
lods
fcomp
in
pop
(bad)
sub
jne
add
lock
sahf
cmp
std
fdivr
outs
test
leave
xor
mov
jb
mov
repz
ret
int3
add
and
ss
xor
or
jl
(bad)
mov
shl
push
jo
mov
xlat
lods
ficomp
iret
enter
pop
xor
sbb
mov
(bad)
push
xor
xchg
mov
popa
pop
js
sub
sbb
and
fistp
arpl
clc
data16
aam
inc
mov
and
dec
and
sub
dec
dec
mov
aam
lea
enter
leave
pop
push
ret
call
cdq
mov
push
enter
mov
or
imul
into
jae
fild
fs
inc
cdq
dec
jecxz
test
loope
jnp
xor
push
(bad)
outs
mov
cmps
cmp
mov
lahf
ss
(bad)
adc
jno
mov
pop
inc
xchg
push
rcr
mov
or
leave
cmp
adc
adc
aaa
push
cmp
fild
xchg
(bad)
or
fisub
inc
inc
or
lock
jl
add
movs
xor
jmp
add
push
cmps
xor
mov
test
or
cmp
jmp
xor
into
(bad)
jle
dec
std
xchg
addr16
pop
push
dec
addr16
xchg
out
scas
(bad)
pop
cld
jmp
ja
mov
add
adc
jle
fnstsw
call
(bad)
sti
cmp
add
and
retf
fadd
popf
sub
call
stos
fiadd
into
clc
add
movs
cld
dec
and
xchg
mov
out
sbb
dec
pop
fisttp
inc
out
(bad)
mov
daa
xchg
sahf
cmp
mov
jp
ret
ret
inc
fwait
sti
popf
leave
adc
push
pushf
sub
ror
dec
bound
inc
aad
shl
xlat
dec
push
push
loopne
call
push
push
jbe
lods
lock
loop
push
mov
adc
loopne
ds
rcr
int3
and
jmp
cmp
or
mul
mov
idiv
aas
fidiv
inc
inc
movs
inc
fabs
or
sub
setb
cmp
push
pop
cmp
pop
dec
ins
mov
inc
neg
gs
rcl
add
or
push
test
mov
ret
popa
shl
mov
xchg
ret
es
sti
movs
fstp
mov
sahf
jae
dec
jno
cmp
add
out
mov
int3
or
cld
xor
fidivr
aad
test
xor
popa
cli
int
add
arpl
xor
nop
movs
stos
dec
(bad)
mov
mov
clc
cs
xchg
(bad)
out
int
sub
arpl
test
jmp
jne
push
sub
ins
pushf
dec
jp
xor
push
scas
aaa
add
mov
jo
test
mov
out
ins
sub
mov
mov
pop
mov
mov
push
rol
mov
pop
cmp
les
pop
pop
pop
jecxz
dec
and
aaa
pop
xchg
movs
inc
lods
int
jecxz
lock
pop
out
lahf
push
(bad)
xor
dec
popf
jmp
xchg
push
mov
mov
pcmpeqw
imul
dec
mov
clc
mov
add
stos
add
fsubr
retf
or
pop
adc
jp
pop
lock
shl
in
(bad)
xchg
je
ja
xchg
push
adc
sbb
jp
xor
xchg
fyl2x
retf
pop
das
sub
nop
loopne
shr
pop
shl
or
jge
retf
inc
or
and
call
push
stos
cmps
sti
xchg
sub
(bad)
sub
pop
adc
cli
mov
mov
imul
jecxz
xchg
es
mov
pop
fs
inc
sbb
add
and
sbb
lahf
sbb
aas
aas
mov
cmp
jns
adc
cmc
cmovs
dec
mov
and
call
stc
pusha
lea
push
or
in
arpl
cmc
ins
mov
mov
push
(bad)
arpl
cmp
mov
adc
xchg
das
cmp
test
into
push
and
and
sti
ds
sti
movs
jl
outs
test
and
xor
ror
lock
mov
push
add
cmc
xor
call
mov
mov
push
xor
cmp
or
sub
push
popf
shr
jmp
mov
in
push
jmp
sub
xchg
outs
jns
and
mov
adc
std
shl
imul
jnp
hlt
(bad)
adc
mov
sti
out
pop
dec
xor
and
retf
rcl
jmp
mov
or
loope
mov
stos
sbb
stos
xor
cmp
add
mov
inc
int
or
xchg
int
jb
inc
ss
jns
cmps
(bad)
pop
shl
jp
mov
hlt
addr16
data16
xor
push
sahf
jo
cmps
inc
push
popa
das
dec
popa
femms
jg
out
sti
add
shl
pop
xor
scas
clc
mov
jmp
fld
mov
xchg
loop
mov
ret
adc
cwde
cmps
pop
outs
jno
icebp
fwait
mov
mov
sti
hlt
(bad)
sbb
outs
mov
ja
pop
data16
ficomp
in
xchg
mov
test
test
mov
ss
jmp
adc
dec
gs
leave
xor
mov
xchg
push
push
inc
inc
mov
adc
outs
jle
mov
iret
push
sbb
jmp
sbb
adc
(bad)
mov
sbb
nop
sub
inc
cmp
int3
(bad)
shl
bound
inc
mov
pushf
inc
pop
xor
arpl
loop
out
es
pop
jne
push
add
or
test
xchg
js
mov
mov
popa
mov
pop
cdq
enter
or
or
(bad)
adc
mov
and
ja
hlt
push
pusha
push
popa
cmp
xor
xor
xor
dec
push
aaa
rol
cmc
mov
rcl
add
lods
xor
mov
mov
pusha
aas
add
xchg
push
add
cmp
xor
mov
das
sbb
jge
repnz
or
xchg
movs
sub
mov
sub
shr
movs
cld
mov
add
outs
in
shl
jg
push
in
cmp
add
mov
xchg
iret
sbb
xor
ror
xor
aam
jae
sub
inc
add
add
aam
dec
or
xchg
call
adc
test
fdiv
gs
adc
push
pushf
stc
test
pop
in
add
lahf
mov
mov
ret
jnp
pop
push
movs
fiadd
cmps
jl
pop
cmps
mov
dec
mov
icebp
(bad)
jne
push
mov
pop
into
loope
ins
sub
es
out
add
in
in
mov
js
pop
lahf
div
sub
xchg
sbb
mov
add
adc
add
jecxz
mov
sub
out
inc
mov
mov
(bad)
sbb
or
out
and
mov
add
sahf
pop
movs
jl
pop
mov
jbe
jle
frstor
enter
mov
popf
ja
pusha
(bad)
enter
rcl
xchg
cmp
test
mov
mov
(bad)
outs
jns
rcl
jns
in
mov
inc
movs
cmc
sahf
dec
xor
int3
movs
push
rcl
mov
adc
push
aam
dec
and
fdiv
mov
movs
lds
in
sbb
stos
cmps
imul
test
push
sub
mov
mov
push
ucomiss
xchg
int
adc
jmp
mov
(bad)
xchg
mov
ret
jae
call
add
cs
xor
(bad)
les
out
sub
fidivr
mov
rol
adc
sbb
mov
adc
in
imul
xchg
and
adc
adc
jmp
pop
fmul
pop
sbb
das
loopne
scas
inc
add
outs
mov
bound
dec
lods
sbb
xchg
aad
or
inc
add
ret
xchg
loop
test
lds
call
dec
mov
push
fwait
(bad)
scas
fwait
mov
outs
loope
jno
xor
mov
pop
call
cmps
(bad)
call
sub
cmp
rol
xor
scas
cli
jge
add
jge
cld
mov
aaa
jmp
stos
jno
push
xchg
(bad)
pushf
jmp
sbb
in
lds
pop
jecxz
retf
rcr
jle
repnz
(bad)
es
das
jnp
lods
fist
push
sahf
sti
stos
push
sbb
jb
add
inc
ror
outs
(bad)
out
aaa
inc
xlat
adc
ret
fwait
or
cmp
inc
arpl
inc
inc
or
xlat
fwait
and
dec
mov
sub
jle
ds
xchg
mov
fidiv
ss
mov
mov
out
test
pop
scas
je
inc
sti
xchg
ret
jne
sbb
dec
out
mov
movs
mov
mov
or
lds
push
push
ja
push
rol
shl
mov
stc
mov
test
daa
inc
dec
ret
mov
stos
outs
adc
ss
push
inc
cmp
adc
mov
cmps
jmp
and
scas
ret
mov
and
(bad)
mov
fsub
stc
sbb
inc
xor
cs
dec
inc
mov
cdq
add
dec
push
xchg
inc
xor
movs
out
call
jmp
aaa
jae
jle
dec
sub
arpl
fistp
push
popa
adc
lds
push
adc
out
les
into
mov
pop
lds
push
sbb
pop
push
imul
cmp
(bad)
pop
int
fimul
jmp
dec
mov
cmp
or
movs
jecxz
sar
dec
pop
sbb
cmp
mov
popa
sub
int
not
dec
aas
imul
mov
cmc
lods
out
movs
lods
enter
pop
idiv
pop
sti
and
mov
mov
test
js
div
ins
(bad)
clc
scas
sbb
lods
jmp
inc
pop
(bad)
mov
pop
repz
xchg
pop
nop
ret
xchg
imul
xchg
mov
and
xchg
mov
jecxz
loope
movs
je
mov
pop
rcl
call
sub
adc
mov
mov
out
fstp
loope
scas
jnp
dec
ss
fidiv
outs
mov
mov
push
cld
xchg
test
or
xor
in
cwde
iret
mov
dec
sahf
and
mov
mov
and
add
mov
mov
sbb
shr
inc
xor
mov
lods
mov
xchg
leave
lahf
fstp
and
xchg
fbstp
and
xor
call
mov
jbe
out
test
imul
mov
es
ret
xor
gs
fbstp
mov
in
cmc
mov
xor
sub
pop
arpl
stos
out
daa
or
mov
aas
pop
(bad)
push
aam
out
mov
retf
jp
dec
xchg
in
mov
dec
not
inc
add
and
shr
mov
mov
aas
dec
sbb
mov
xchg
lods
mov
inc
fsubr
call
adc
and
in
(bad)
nop
sar
jecxz
call
sub
fisub
out
mov
mov
pop
dec
cli
inc
stos
push
test
mov
mov
dec
lds
sub
pushf
scas
movs
in
xor
lods
movs
shl
add
loop
clc
(bad)
(bad)
test
dec
out
mov
pop
call
push
adc
fwait
into
mov
stos
jmp
js
pop
addr16
je
push
mov
fild
mov
sub
dec
xchg
dec
aas
imul
pop
adc
dec
loope
in
adc
mov
push
das
jne
and
and
mov
outs
or
test
es
stos
std
dec
lock
ret
inc
adc
ret
mov
les
outs
daa
mov
jnp
call
jg
cdq
jmp
push
dec
mov
dec
movs
dec
cmp
adc
pop
jge
xor
ins
add
mov
mov
ins
cmp
xor
adc
xor
xor
xchg
ret
inc
push
push
inc
xor
test
loop
pop
and
adc
pop
adc
enter
jae
cmp
inc
add
lahf
not
je
push
sub
sbb
jmp
xor
mov
test
fsub
mov
in
xchg
mul
push
pop
sub
in
(bad)
cmps
xlat
loopne
loop
mov
mov
jno
inc
adc
dec
cmp
mov
mov
and
mov
pop
sub
mov
adc
or
mov
ror
dec
push
mul
pushf
les
cli
lods
out
jae
dec
mov
jne
push
idiv
xchg
mov
mov
cs
lods
jo
iret
cmps
in
cmps
out
jae
push
ficom
ds
fiadd
sbb
leave
mov
add
loope
add
mov
sbb
out
mov
or
sub
add
xlat
inc
sbb
ins
jo
jnp
adc
and
(bad)
jae
(bad)
aam
sbb
push
div
mov
adc
fisub
mov
cld
fs
mov
pop
dec
or
mov
xchg
add
sub
inc
lods
cli
sbb
into
cwde
fdivr
cwde
in
mov
outs
sbb
jmp
mov
cmc
mov
js
divps
mov
div
cmc
and
mov
sub
cld
mov
pushf
mov
mov
loopne
dec
push
in
lods
mov
adc
or
ins
aas
jnp
(bad)
mov
test
pop
aas
jle
int3
mov
into
test
mov
imul
sahf
inc
ja
gs
push
and
pop
sub
nop
fcomp
mov
mov
push
push
inc
pop
dec
cmp
or
mov
push
ret
pop
sub
adc
pop
cmps
iret
lods
icebp
test
in
mov
xchg
sbb
and
adc
add
jle
(bad)
mov
dec
jmp
mov
stc
dec
dec
pop
pop
repnz
fadd
sub
je
movs
retf
fdivrp
xchg
cld
lahf
movs
sub
mov
mov
in
loope
repz
ja
mov
add
push
jp
enter
loope
add
into
xchg
hlt
movs
mov
aam
in
jecxz
xor
cs
dec
cmp
and
pusha
adc
jae
or
add
scas
lds
inc
xor
dec
mov
push
es
dec
cmps
and
add
outs
or
test
dec
or
data16
cld
inc
adc
(bad)
jns
dec
popf
jmp
retf
adc
cld
sub
jo
cmp
mov
sub
aad
sbb
sti
xchg
lock
enter
imul
maxps
out
xchg
jl
jb
inc
rcl
cmp
push
ds
loope
not
inc
sub
and
inc
sub
dec
xor
cmp
add
xlat
(bad)
mov
inc
and
movs
data16
test
mov
idiv
fwait
cmp
mov
cmp
mov
sti
adc
or
in
imul
mov
pop
sbb
int3
movs
data16
xchg
(bad)
stc
xchg
cwde
jae
(bad)
mov
stos
fisubr
jae
push
loope
push
rol
mov
fidivr
loop
retf
pop
js
add
mov
movs
jae
shl
adc
inc
sub
mov
sub
pusha
leave
or
xchg
pop
sbb
pop
stc
and
fnstenv
inc
add
and
lock
add
in
rcr
xchg
sti
nop
xchg
jge
(bad)
cld
test
imul
enter
add
mov
and
sub
pop
iret
add
cmp
jmp
mov
test
mov
repz
sti
jno
pop
(bad)
dec
adc
test
mov
jmp
sbb
int3
movs
(bad)
mov
push
sub
iret
lahf
fstp
test
fmul
cmp
bound
xor
dec
cmp
jne
(bad)
loopne
aam
daa
scas
out
xchg
inc
cmp
push
push
sub
and
push
adc
into
mov
mov
and
addr16
sar
clc
push
dec
pop
je
sub
mov
lock
imul
test
and
adc
or
stos
leave
adc
int3
(bad)
mov
adc
leave
sbb
and
cmps
inc
movs
or
push
mov
and
add
stos
jmp
fnstsw
out
out
(bad)
jge
mov
shr
jmp
pop
xchg
xchg
add
push
test
inc
adc
mov
xor
pushf
enter
int3
xor
pop
xchg
ins
cmp
imul
pop
add
xchg
add
xor
and
cmps
xlat
adc
sahf
cmc
xchg
pusha
adc
lods
jo
jo
and
lahf
into
aad
aam
push
neg
mov
shr
xlat
int
iret
jo
push
or
xchg
stc
scas
push
mov
rcr
jns
jne
test
dec
push
pop
mul
stc
js
jb
xchg
or
sbb
scas
(bad)
movs
call
fldenv
mov
push
dec
retf
sbb
mov
mov
dec
je
push
(bad)
fidivr
out
ret
nop
aam
pop
enter
push
aas
fimul
jmp
in
pop
push
adc
mov
popf
jmp
mov
jbe
pop
sbb
xchg
ret
dec
push
and
xchg
nop
fwait
jmp
adc
pusha
cmp
sub
jne
push
pop
inc
fs
inc
call
mov
xor
ss
fisubr
scas
push
pop
or
jge
stos
or
inc
retf
jb
mov
pop
sub
cs
mov
pop
inc
cld
enter
xor
sub
dec
or
test
add
jns
(bad)
stc
mov
sbb
not
clc
adc
push
mov
xchg
test
and
xor
and
mov
mov
retf
bound
push
or
add
ins
stos
arpl
fwait
enter
pop
mov
jae
adc
xchg
in
mov
retf
test
dec
or
nop
mov
mov
not
bound
jle
and
cmc
add
push
xchg
stc
(bad)
fabs
test
jecxz
cs
or
mov
inc
dec
jb
jns
xor
shl
mov
adc
sbb
out
dec
sbb
push
adc
mul
sbb
xlat
jl
adc
dec
std
push
lahf
pop
pop
sbb
movs
aaa
popa
and
inc
inc
xor
outs
ror
mov
cmp
xor
push
pop
mov
test
ret
dec
xchg
inc
inc
sub
add
fidiv
inc
test
sahf
loop
shl
lahf
push
sub
add
sbb
int
mov
mov
adc
call
jmp
data16
xor
in
lds
jae
cmp
hlt
jne
jge
xor
xor
sbb
retf
xchg
in
ficomp
adc
or
xor
push
xor
fs
adc
add
pop
sti
and
pusha
or
(bad)
cli
ds
jne
cmp
(bad)
fiadd
adc
pop
dec
leave
das
les
aas
imul
shufps
in
test
jb
cmp
adc
xchg
addr16
ffree
dec
push
dec
lea
push
or
add
jp
dec
and
push
cmp
retf
dec
call
mov
cs
sbb
dec
mov
imul
mov
push
call
fmul
and
inc
test
jecxz
les
aaa
fs
dec
(bad)
das
jmp
push
add
popa
cmp
xchg
xchg
jno
cmp
cmps
cmps
jae
jno
sbb
fwait
or
mov
cmp
stos
jle
in
fwait
rol
push
sbb
jmp
mov
sub
pusha
mov
jo
pop
cmp
jg
pop
ins
loopne
mov
mov
adc
(bad)
fistp
add
add
(bad)
jb
adc
xor
cmp
inc
push
outs
jns
sub
and
cmp
mov
add
push
fldcw
sub
in
mov
jmp
cmps
cmp
sbb
sahf
sti
stos
cmp
dec
cmp
mov
repnz
add
fistp
xor
mov
imul
(bad)
fiadd
mov
cmps
jmp
ins
add
sbb
cmp
xchg
push
movs
fst
jl
add
iret
push
xchg
and
mov
pop
into
dec
xchg
sub
pop
mov
xor
xor
lods
cld
xchg
and
push
retf
les
in
shl
inc
sub
add
mov
sub
xor
inc
test
adc
jmp
fmul
pusha
(bad)
sub
imul
out
push
and
mul
sbb
dec
pushf
or
fld
xor
pop
push
adc
pop
call
imul
mov
sub
pop
mov
inc
xor
into
sub
hlt
retf
scas
call
aam
in
(bad)
push
(bad)
in
shl
test
cwde
sub
ret
adc
div
adc
mov
push
fwait
lds
cmp
push
pop
sbb
mov
out
xchg
iret
pop
push
int3
das
cld
ret
cs
add
cmps
lock
icebp
push
or
pop
mov
pop
or
mov
out
dec
mov
shl
gs
cmp
in
in
out
mov
pop
jge
test
dec
or
arpl
jge
add
les
mov
fs
jae
fdivr
push
add
jmp
mov
xor
and
adc
mov
adc
test
aaa
pop
loopne
aam
xor
ret
jno
inc
unpckhps
shl
adc
in
stos
out
pop
aas
inc
sbb
and
jmp
sub
xor
ret
xchg
stc
lock
stos
loop
dec
sbb
fisttp
jmp
cmc
scas
xor
xor
sbb
dec
adc
or
dec
sbb
bound
es
push
bound
jo
sti
lods
fist
xchg
call
outs
push
xor
dec
inc
mov
mov
xchg
into
imul
sti
cwde
test
mul
lods
(bad)
dec
pop
sub
ins
sub
test
retf
dec
push
adc
mov
mov
jbe
sbb
push
mov
mov
mov
xor
jle
cmps
movs
ret
pop
inc
sub
sahf
call
imul
sub
jecxz
xchg
call
ret
xchg
rcl
aad
aad
pushf
shl
int
es
movs
hlt
lahf
(bad)
fsubr
push
out
loope
fs
(bad)
sub
pop
add
outs
mov
lahf
(bad)
(bad)
jae
sbb
test
mov
fsub
cmp
mov
nop
push
shl
out
mov
(bad)
rcr
js
push
add
mov
test
addr16
mov
pop
sbb
jecxz
ror
movs
sbb
popa
popa
leave
mov
sar
xor
mov
cmc
movs
div
aad
aam
sbb
imul
pop
adc
sbb
mov
cli
lods
call
inc
dec
aas
push
fcomp
xchg
cmovne
jp
into
sub
les
call
mov
or
fldenv
ins
push
cmc
mov
mov
call
ret
xchg
adc
movs
in
in
sbb
jb
into
mov
lods
jb
and
sbb
jg
jno
jmp
fadd
lods
stc
mov
mov
data16
adc
cmc
adc
les
jae
push
add
sub
inc
div
dec
add
xor
dec
in
test
xor
mov
(bad)
popf
jns
jbe
nop
mov
mov
adc
adc
aad
loopne
mov
loope
jae
or
loopne
and
xchg
cwde
rol
xor
and
cmps
fadd
pushf
push
push
adc
rol
push
pop
jo
jne
xchg
jne
mov
sub
push
daa
jae
test
cmps
jecxz
scas
retf
jge
push
jp
dec
or
fnsave
sub
jmp
inc
push
adc
sbb
add
fisttp
cmp
jbe
mov
and
xchg
or
dec
push
dec
xchg
fnsave
sbb
loopne
repz
stos
or
fstp
cld
(bad)
cli
mov
pop
pop
in
daa
inc
adc
lods
sub
outs
cs
into
dec
nop
push
jle
jp
dec
mov
pop
jmp
sub
add
cmp
mov
mov
jle
test
test
push
add
and
enter
(bad)
cmp
adc
(bad)
cdq
cli
addr16
inc
pop
es
rol
or
nop
mov
push
dec
cmp
aaa
add
jno
adc
or
sti
mov
jno
ins
mov
lods
std
out
enter
dec
push
add
les
push
fld
dec
xor
js
sbb
and
out
out
or
xchg
xchg
fsubr
aas
mov
nop
hlt
movs
adc
int3
pop
sub
cmp
add
scas
jmp
lds
mov
int
in
or
int
(bad)
inc
or
std
mov
(bad)
and
enter
mov
out
stc
stos
add
out
mov
mov
fisttp
shr
push
adc
in
push
dec
lods
ret
shl
push
xlat
xchg
cmps
pop
jb
test
xchg
or
adc
inc
cs
imul
xchg
lock
sub
lea
xlat
add
lods
dec
sub
xlat
mov
mov
shl
data16
mov
mov
and
cmp
sub
pop
pop
dec
fldenv
cmp
sub
mov
mov
and
adc
jmp
and
or
leave
pusha
mov
add
pop
mov
xor
call
neg
mov
xchg
lods
jno
ret
cmp
(bad)
std
sahf
std
je
xchg
jo
or
cmc
popf
jge
and
es
jns
out
aas
dec
mov
(bad)
retf
sbb
mov
rol
or
daa
jmp
inc
mov
mov
jmp
push
xchg
jns
std
ret
out
or
jmp
scas
mov
mov
jae
pop
push
jecxz
sbb
mov
dec
ror
pop
repnz
loope
inc
sub
add
adc
and
sbb
sbb
inc
lock
xchg
ss
cs
gs
cs
pop
inc
cmp
xchg
sub
ret
jp
xor
outs
add
mov
sahf
sub
js
xchg
sub
sbb
mov
retf
xor
cmp
xchg
adc
and
adc
jnp
sahf
sub
das
rcr
popa
jns
int
push
sbb
ror
je
neg
add
cdq
adc
jg
adc
pop
fdivr
inc
cmp
or
ficom
aas
xchg
cmp
mov
sbb
sub
inc
inc
int3
arpl
pop
and
sar
lods
lahf
popf
pop
add
shl
hlt
fwait
inc
inc
mov
cmc
mov
pop
out
mov
in
(bad)
xor
dec
call
lds
aaa
aaa
fisttp
mov
(bad)
jbe
div
xchg
(bad)
(bad)
int3
mov
das
jne
lock
adc
push
aad
mov
pop
mov
test
mov
popa
mov
add
int
fsub
dec
pop
arpl
push
jp
inc
fimul
mov
mov
or
sub
aas
sub
sub
dec
loopne
fwait
push
out
(bad)
cmp
addr16
call
pop
push
and
bound
int
push
xlat
jge
mov
mov
sub
add
adc
ins
ins
dec
enter
pop
cmp
jne
mov
xchg
cmp
(bad)
stc
in
sbb
cwde
cdq
test
mov
dec
jecxz
push
into
out
iret
add
repz
(bad)
jnp
fdivr
(bad)
sbb
sub
sbb
ret
inc
mov
cmp
sar
push
or
test
sbb
inc
(bad)
mov
loope
lahf
xchg
jmp
fwait
xor
(bad)
scas
jmp
shl
cmc
xchg
or
inc
push
push
cmp
mov
cwde
push
mov
pop
pop
out
out
dec
shrd
mov
mov
ret
pop
shl
jp
test
inc
je
leave
in
fcomp
sbb
jl
js
sahf
mov
jno
mov
jnp
stos
pop
(bad)
not
loop
(bad)
movs
enter
leave
test
and
and
nop
sub
dec
mov
cmp
add
nop
jo
cdq
js
aad
sahf
push
mov
inc
mov
lahf
test
jle
mov
ja
jnp
out
dec
xlat
xchg
shr
sahf
call
pop
mov
les
jns
xor
(bad)
arpl
lock
ja
xchg
pusha
pop
xor
pop
ret
xor
shr
fbstp
sbb
iret
sbb
out
mov
pop
int
push
out
aas
dec
iret
sbb
rcl
ins
lahf
stos
xor
mov
inc
adc
js
xor
loope
stos
fs
sbb
xchg
scas
mov
dec
add
adc
adc
sub
xchg
pmaddwd
popa
push
push
int
in
test
mov
cmps
cmp
add
dec
dec
push
fisub
call
lods
mov
data16
pop
call
aaa
lock
jo
xchg
and
jo
sbb
test
and
lds
mov
cdq
xor
repnz
call
out
ffreep
fwait
(bad)
sbb
and
int3
cmp
iret
shr
pop
wbinvd
rol
jns
cdq
mov
pop
stos
cs
xchg
xchg
sbb
icebp
loop
mov
inc
mov
adc
lds
out
(bad)
cmp
adc
cmp
dec
in
cs
and
inc
ins
fsubr
and
shl
call
test
imul
iret
xchg
and
push
add
add
cmp
or
xor
cmp
fldz
jl
sbb
mov
pop
mov
dec
cmp
scas
js
cmp
in
in
imul
adc
cld
pop
rol
es
in
inc
jbe
sahf
jecxz
in
stos
dec
cli
push
or
pop
jno
xor
sub
adc
dec
xchg
out
pop
push
test
and
xor
jle
sub
hlt
in
or
int3
fiadd
lahf
mov
mov
leave
(bad)
and
js
cmp
pop
mov
push
outs
sbb
popa
mov
enter
jle
add
cmp
loope
je
mov
arpl
cmp
fbstp
dec
es
dec
jne
xchg
nop
mov
mov
xchg
lock
stos
shl
les
inc
xor
mov
xor
daa
mov
pop
pop
mov
xchg
(bad)
pushf
inc
test
sbb
mov
ss
leave
aad
jmp
mov
jnp
ret
(bad)
ds
inc
clc
mov
xchg
push
cdq
jno
push
ret
push
add
jl
xchg
push
jmp
int
push
mov
inc
push
shl
mov
pop
dec
mov
cmp
stc
in
ja
or
pop
xchg
push
fistp
mov
outs
cmps
xchg
aad
mov
scas
aaa
cmp
clc
cmps
inc
xor
rol
cmp
dec
clc
push
jae
xlat
cdq
mov
lea
test
fiadd
aam
sbb
mov
inc
addr16
xchg
push
cld
les
imul
jle
or
or
add
imul
je
lds
add
sub
pop
xor
cld
push
enter
arpl
outs
iret
loope
pop
inc
pop
das
sbb
js
in
mov
dec
retf
mov
in
mov
lock
sbb
jbe
arpl
je
and
fistp
in
outs
pop
shl
sti
in
jmp
adc
or
xor
mov
adc
jg
push
rcl
jle
ins
mov
jmp
movs
cmps
push
push
and
mov
and
ins
xchg
mov
popf
or
(bad)
sub
nop
push
mov
cmp
inc
jnp
imul
cdq
loope
sub
fisttp
xor
pop
rol
mov
and
out
scas
and
push
adc
adc
inc
xchg
jecxz
ja
pop
in
dec
add
repnz
out
add
dec
(bad)
sub
cs
sbb
push
test
into
loopne
popa
jno
enter
ficom
push
xor
jl
repz
out
mov
mov
xchg
and
push
jp
mov
xchg
mov
mov
frstor
cli
sub
shl
adc
not
es
test
movs
ins
inc
adc
dec
(bad)
jl
cmp
pop
pop
add
mov
sbb
retf
hlt
sbb
aad
xchg
ja
movs
mov
adc
sbb
jle
leave
out
dec
xor
jg
fdivr
out
push
jo
or
jl
inc
outs
jbe
pop
jl
jge
rcl
add
fsubp
adc
push
mov
cli
xchg
fldenv
or
xchg
mov
pusha
adc
cmp
inc
sub
lods
mov
lock
mov
neg
fdivr
lods
add
xchg
mov
mov
cmp
andps
aam
fst
mov
test
ja
sub
repnz
xchg
mov
cdq
jno
xchg
jae
lock
push
outs
lods
dec
jbe
cmp
mov
and
dec
adc
fbstp
pop
out
shl
loope
and
or
imul
push
add
mov
lahf
int
sub
clc
mul
adc
add
cmp
mov
(bad)
mov
pop
xor
out
inc
sbb
and
loope
aad
stos
popa
inc
and
sar
aam
or
xor
sub
inc
lahf
stos
aad
(bad)
sbb
push
stc
or
xchg
cdq
ficom
(bad)
aas
sub
cmps
xchg
xchg
or
in
pop
push
sti
data16
adc
sub
push
add
fmul
add
cli
es
aas
hlt
mov
sub
(bad)
jnp
lods
adc
sti
rcl
shr
push
lods
repz
int
out
inc
and
loopne
and
clc
jo
mov
xor
dec
dec
jg
pop
cmp
shl
aas
es
loopne
push
shr
ds
xchg
push
cmp
mov
cmp
fisttp
in
sahf
xor
dec
int3
cmc
sub
pop
int3
push
xchg
mov
aad
jge
ins
sub
inc
(bad)
ud1
add
mov
sbb
add
std
fs
cmp
cmp
sbb
shl
push
push
mov
push
adc
dec
add
jnp
push
xor
xor
stos
cwde
and
or
movs
push
adc
mov
pushf
or
cmp
xor
test
popf
arpl
mov
or
mov
inc
cmps
call
aad
cmps
and
sbb
push
jmp
adc
mov
and
aad
adc
retf
mov
dec
mov
cmps
xchg
rcl
pop
push
ins
imul
sub
xchg
sbb
jo
cdq
fdiv
mov
mov
xchg
imul
cmp
and
xor
mov
mov
pop
sti
sub
movs
scas
xchg
sub
shr
ss
cmp
jmp
or
ja
mov
scas
out
cs
push
add
fcomp
jecxz
xlat
jb
mov
std
lahf
xchg
dec
add
inc
cli
pop
xor
pop
and
mov
adc
fld
in
fyl2x
cmps
mov
xor
call
aam
in
lods
mov
fisubr
arpl
rcr
jg
data16
jo
xor
test
pusha
jne
sbb
stc
xchg
inc
nop
int
call
mov
sub
cld
das
hlt
pop
in
arpl
div
stos
cmc
xchg
in
repnz
movs
clc
das
mov
loope
in
fcmovnbe
jns
push
mov
jmp
sbb
or
cmps
or
das
xchg
jnp
jle
cmc
lods
adc
jge
jmp
int3
adc
push
mov
cmps
fdivr
dec
std
and
add
jmp
out
(bad)
fdiv
dec
hlt
dec
sbb
adc
push
stos
mov
push
push
sbb
nop
add
loop
(bad)
mov
cwde
sub
mov
jmp
dec
mov
mov
daa
fwait
sbb
sahf
into
push
pusha
push
js
in
adc
mov
imul
mov
dec
fadd
scas
adc
jbe
add
test
sbb
mov
inc
add
push
inc
jecxz
push
mov
pushf
enter
sahf
mov
mov
retf
dec
sbb
or
xor
xchg
inc
add
rol
xchg
test
test
out
in
outs
sub
jge
pusha
sub
(bad)
mov
add
cmps
out
mov
and
into
mov
inc
inc
pop
jl
cmp
xlat
ds
or
inc
xor
adc
addr16
dec
pop
sub
js
push
jle
mov
jae
js
std
mov
fcmove
mov
mov
movs
jecxz
push
ds
in
xchg
std
(bad)
push
xchg
mov
cld
lods
xchg
mov
cmps
into
xor
cmps
ret
(bad)
icebp
fistp
repnz
adc
jae
jbe
push
adc
jns
popa
pop
jge
scas
or
ja
mov
movs
loope
into
pushf
int
fld
mul
scas
loop
iret
mov
pop
cs
cmp
push
add
xor
fcom
or
mov
dec
cmp
bound
jecxz
xor
pop
in
pusha
fimul
das
sbb
or
loope
loop
fnsave
ja
mov
fucom
outs
sub
fisttp
jb
shl
jle
cmp
jno
fldcw
mov
out
mov
dec
stc
mov
and
dec
aas
or
and
mov
pop
mov
mov
clc
xchg
out
rcl
mov
imul
inc
sbb
jecxz
scas
cld
xchg
jl
into
mov
(bad)
lahf
loop
add
ret
es
or
lock
push
xor
inc
xor
rol
and
sar
dec
addr16
shl
pop
sub
and
imul
hlt
mov
outs
popa
repnz
lock
je
xor
inc
xor
arpl
stos
jmp
or
jbe
inc
clc
cmp
pop
xor
or
mov
fs
jg
js
mov
std
and
lds
fcom
repnz
test
fwait
mov
xor
pop
and
icebp
pop
mov
fisttp
js
(bad)
mov
mov
lock
jmp
push
call
out
cdq
shr
not
leave
mov
shr
jecxz
jg
cmc
lock
xor
push
xor
cwde
push
pop
inc
xor
xor
push
xor
push
adc
sub
pop
push
dec
or
sub
jge
xchg
loop
les
call
mov
hlt
mov
mov
cmc
pushf
call
xchg
cmps
neg
cmp
lock
cmps
jecxz
mov
cmp
(bad)
cmp
inc
cmp
ja
xor
jno
and
pop
jae
push
adc
sbb
cmp
pop
outs
or
sub
pop
push
ins
xor
and
push
add
xchg
test
mov
pop
sbb
fcomp
xor
adc
adc
pop
outs
call
cmp
iret
packuswb
and
push
push
fs
sub
pop
or
jae
push
adc
sbb
cmp
pop
outs
or
sub
jno
das
xchg
aaa
pop
das
mov
pop
sub
or
push
adc
pop
push
push
mov
aam
arpl
xchg
xor
inc
xor
mov
mov
mov
cmps
repnz
xchg
mov
mov
fsubr
shl
and
xchg
mov
mov
or
mov
mov
aas
pop
and
add
jl
push
xor
pop
punpckhbw
mov
je
jno
inc
sbb
pop
or
push
popf
scas
push
aaa
sar
imul
aad
and
call
shl
scas
stc
fucomp
fs
jns
in
cdq
out
into
jns
xchg
pop
out
mov
rol
ins
sbb
or
mov
out
cmc
push
cmp
test
movs
ficomp
pusha
bound
inc
and
(bad)
mov
(bad)
add
outs
pop
sub
icebp
test
(bad)
sub
mov
fld
ins
les
(bad)
leave
mov
cmps
pop
cmp
dec
cmp
ds
data16
or
mov
outs
inc
push
in
pushf
call
out
pusha
pop
add
inc
xor
inc
xor
dec
or
ds
and
jb
jno
dec
adc
dec
and
jno
lods
(bad)
mov
ret
jle
adc
add
push
aas
mov
and
xchg
cmc
push
mov
shl
call
cmps
push
cmc
call
and
imul
xor
cmp
sbb
sbb
dec
pop
xor
inc
ds
sub
das
dec
cmp
(bad)
std
fmul
jno
jb
test
ret
fstp
adc
dec
jnp
rol
fisubr
dec
or
mov
mov
addr16
xor
mul
add
cmp
shl
movs
ficomp
cmp
scas
test
xlat
stc
ja
hlt
push
loopne
mov
rol
mov
test
jge
popa
add
inc
jnp
lods
jecxz
mov
mov
gs
or
cmps
fnsave
sbb
outs
sbb
cli
mov
push
ins
idiv
(bad)
or
jp
pop
jecxz
popa
aam
retf
ins
fst
xlat
out
pop
jl
sub
dec
cmp
jnp
popa
pop
xor
mov
adc
cmp
dec
es
add
dec
sub
pop
cmp
xlat
push
outs
arpl
scas
out
fistp
(bad)
dec
call
push
pop
add
pusha
es
add
cmp
push
aas
jo
push
sbb
jmp
ret
xchg
in
xchg
fldenv
push
xchg
lods
call
leave
int
dec
sub
add
xor
das
jge
or
dec
cmp
jle
push
cmp
call
and
cmp
inc
test
mov
jo
xchg
jge
addr16
xchg
int3
test
xor
out
jo
jb
sbb
movs
out
idiv
dec
jnp
pushf
add
jp
sub
or
fldcw
jo
jl
inc
mov
rcr
retf
mov
call
add
repnz
ret
enter
xchg
pop
sub
pushf
clc
loope
jmp
sbb
jg
push
mov
cmp
dec
loop
test
fbld
nop
mov
xchg
mov
in
cmps
mov
fisttp
xchg
xchg
fisubr
or
add
jno
sahf
(bad)
jmp
imul
stos
adc
fs
mov
mov
jmp
out
pop
shl
std
push
call
sub
pop
pop
outs
mov
mov
mov
arpl
repnz
imul
jl
jl
in
mov
ins
push
jge
jae
xchg
or
sbb
push
jp
imul
xchg
lock
call
and
sahf
push
push
and
ret
cwde
and
push
and
jge
popa
dec
cld
lods
or
pop
aaa
inc
adc
and
sub
sub
lods
pop
pop
lahf
mov
aam
push
jge
dec
neg
mov
jp
xchg
repz
fnstenv
das
ss
mov
test
fdivr
arpl
jbe
cmovg
sbb
dec
jle
addr16
jge
aas
pop
das
jnp
jns
inc
cmp
aaa
jae
popa
add
and
xchg
lock
xor
call
addr16
cld
fadd
outs
or
adc
popa
loopne
out
sbb
jnp
inc
adc
xchg
div
fs
addr16
dec
sbb
cli
mov
jmp
add
clc
sbb
int
fistp
hlt
repz
(bad)
repz
sbb
jbe
xchg
push
lds
in
data16
fisubr
dec
call
fsub
imul
mov
loopne
aam
div
int
lds
aad
repnz
xchg
mov
xchg
mov
(bad)
adc
xchg
push
and
std
cmps
jmp
jnp
jno
or
outs
imul
jl
out
mov
stos
std
mov
mov
mov
aad
repnz
xchg
mov
mov
retf
mov
adc
push
call
leave
popf
fistp
rcl
(bad)
xchg
sar
out
mov
shl
loope
ror
pop
in
mov
sbb
xchg
repnz
repnz
xchg
mov
and
jno
jp
push
repz
(bad)
mov
movs
int
xlat
cmps
clc
mov
mov
shl
leave
mov
mov
fisubr
repz
retf
mov
mov
cld
mov
jb
bound
xlat
adc
test
mov
xor
out
stos
push
cmp
cli
cld
pushf
and
sbb
pop
sub
dec
or
addr16
pop
xor
and
ss
dec
aaa
outs
cmp
cs
pop
sub
and
inc
add
outs
aas
push
cmp
sub
ds
and
jno
mov
fild
popf
xchg
scas
add
pop
push
ins
clc
mov
in
xchg
loop
loopne
mov
xor
std
mov
pop
and
xor
std
pop
pop
adc
add
push
push
and
pop
dec
sbb
push
dec
das
jle
pop
sbb
and
dec
pop
je
jg
pop
push
pop
sub
das
and
imul
mov
xor
pop
daa
cmps
mov
fistp
xor
std
(bad)
pop
cmp
jge
jno
sbb
xor
scas
mov
mov
dec
das
xchg
lock
les
in
pushf
fstp
into
cmps
lds
fbld
inc
xchg
mov
mov
xor
push
cmp
xlat
sahf
jmp
rcl
mov
adc
adc
push
je
(bad)
loope
(bad)
mov
sub
stos
(bad)
les
mov
sbb
loope
jmp
mov
and
(bad)
jp
jno
or
mov
adc
push
pop
cmp
mov
sahf
call
inc
inc
add
add
push
pop
arpl
xchg
loop
cmp
in
enter
push
ret
or
rcr
mov
push
dec
std
sahf
in
mov
(bad)
cmps
cmc
mov
rcl
cmp
push
xchg
mov
jg
(bad)
(bad)
mov
lods
push
or
fld
cdq
and
imul
adc
sub
inc
dec
jnp
mov
aaa
movs
mov
(bad)
loopne
xor
mov
(bad)
(bad)
jmp
jmp
xchg
(bad)
add
lock
xchg
sbb
jae
dec
js
gs
jle
xchg
pop
xlat
ins
sub
aas
inc
xchg
mov
mov
xor
and
push
xor
das
pop
add
add
pop
cmp
push
push
popa
or
and
sbb
popf
jmp
or
dec
dec
cmc
mov
adc
dec
cmp
scas
std
mov
pop
sub
adc
inc
das
test
movs
adc
jno
js
adc
je
cdq
sti
fbld
ror
aam
ficomp
movs
(bad)
mov
mov
mov
repnz
icebp
adc
lds
stc
(bad)
fidivr
cmps
add
dec
sub
pop
stos
jmp
inc
hlt
(bad)
not
cmp
(bad)
in
or
inc
arpl
dec
and
dec
cmp
pop
or
dec
push
pop
push
je
cmp
jno
push
and
js
test
fidivr
(bad)
mov
and
pop
cmovne
jno
add
addr16
pusha
in
dec
xchg
pushf
out
ds
(bad)
dec
sbb
out
adc
ins
js
stos
fstp
or
adc
jo
test
inc
jmp
int3
xchg
rcl
xor
mov
jmp
and
and
mov
test
retf
cdq
std
sbb
push
popa
mov
scas
loop
test
pop
pop
cwde
mov
aad
add
or
addr16
inc
adc
or
int3
jbe
fnstenv
data16
jnp
outs
out
push
adc
retf
pop
loope
(bad)
repz
sbb
push
and
mov
fiadd
retf
sub
pop
adc
sub
xchg
dec
and
xlat
mov
in
pushf
call
adc
bound
mov
xchg
pop
clc
xchg
adc
jae
xor
inc
call
arpl
dec
fmul
jle
pusha
cmp
movs
aad
mov
ficomp
lds
mov
out
out
retf
mov
fldcw
jmp
loope
adc
adc
jae
mov
movs
fild
pop
test
jnp
arpl
mov
bound
aad
aas
ins
lock
into
mov
sar
pop
add
jl
add
sub
dec
ss
aad
rcl
push
add
popa
adc
jne
inc
xor
pop
and
mov
pop
movs
fsubr
mov
fnsave
xchg
push
les
in
dec
loope
lea
test
movs
into
mov
in
enter
aam
xchg
cmp
dec
or
loop
pusha
pushf
adc
test
cmps
pop
sbb
jl
dec
cmp
xchg
in
in
pop
sub
iret
jg
gs
aam
enter
sahf
mov
(bad)
lds
(bad)
dec
in
lods
(bad)
mov
retf
mov
ret
adc
rol
cdq
cwde
stc
mov
fstp
aad
lds
cmp
mov
mov
lods
or
je
inc
test
outs
in
add
sti
lods
or
js
jge
lock
out
test
xchg
xlat
test
lods
lock
mov
mov
popf
rcl
gs
int3
and
and
inc
sbb
mov
iret
mov
mov
push
and
adc
icebp
mov
xlat
ja
outs
jbe
(bad)
stc
out
xchg
jecxz
jecxz
aaa
nop
ss
mov
movs
fdivr
scas
mov
sub
jmp
stc
and
es
sbb
sub
jo
sbb
pop
push
add
sbb
sub
jbe
adc
jns
or
mov
mov
pop
repz
aas
inc
cmp
call
je
call
or
jge
imul
mov
mov
fcomp
inc
xchg
js
outs
xchg
call
adc
sahf
in
div
pop
in
jbe
xlat
stos
inc
lea
push
inc
fwait
xlat
mov
imul
push
test
push
pop
aaa
mov
or
cwde
mov
arpl
data16
pop
xor
(bad)
in
pop
fdivr
(bad)
sysexit
pusha
inc
nop
stos
fild
popf
xchg
scas
add
pop
push
ins
add
xchg
push
add
push
jecxz
sub
or
fst
clc
imul
fidiv
test
push
mov
fwait
mov
jmp
jle
or
cmp
sub
and
adc
mov
push
push
fistp
push
(bad)
aad
hlt
xchg
movs
and
ret
sub
sub
(bad)
pop
jnp
push
pop
add
scas
arpl
pop
and
mov
cmc
ret
daa
pop
hlt
mov
and
or
cmp
jno
mov
out
loop
test
dec
rol
pop
or
sbb
jo
adc
mov
pop
outs
lds
addr16
sub
and
std
push
mov
cmp
int
jbe
loope
jb
and
inc
inc
jecxz
xchg
push
bound
in
mov
aad
jno
hlt
mov
inc
sub
sub
ins
fs
cmp
movs
inc
dec
loopne
arpl
out
test
sbb
pop
ja
movs
mov
mov
xchg
pop
ss
jb
jle
sub
getsec
sbb
or
pop
pop
jbe
lock
cmps
dec
mov
les
mov
mov
ins
cmp
mov
aad
cmps
ds
and
int
inc
sbb
pop
and
push
jp
mov
and
in
cs
pop
jnp
mov
cmp
pop
loopne
aas
ret
sti
sbb
add
nop
lods
fdiv
dec
test
aaa
or
inc
ins
mov
mov
ficom
or
xchg
pusha
lods
int
sbb
call
leave
(bad)
ins
ret
or
scas
int
cmp
daa
push
mov
lea
xor
jne
out
add
pushf
cmp
stc
mov
stc
in
hlt
add
pop
movs
aam
fs
pop
outs
mov
cmp
gs
pop
pop
ret
dec
and
cmp
cs
retf
mov
cmps
ret
mov
push
inc
int
or
retf
icebp
and
adc
cmps
dec
xchg
sub
ss
fiadd
outs
sub
mov
xor
sub
mov
lods
add
add
or
inc
mov
mov
mov
into
in
jle
ret
and
push
popa
(bad)
mov
ja
and
(bad)
mov
sub
ds
mov
fs
xchg
cwde
ds
push
neg
fst
js
mov
jno
mov
pop
cmp
icebp
in
outs
mov
or
into
(bad)
cmps
push
xchg
cmps
jle
test
jns
fstp
xor
jl
mov
xor
aas
adc
xlat
shl
xor
push
pusha
(bad)
jmp
mov
pop
jae
mov
es
inc
cmp
into
out
push
inc
mov
xchg
mov
push
push
dec
pop
jbe
das
pop
fimul
sahf
and
mov
xor
dec
movs
add
ss
pop
js
(bad)
lods
cmc
in
cmps
sub
mov
out
ins
int
(bad)
mov
cli
icebp
push
xchg
cmps
adc
xor
fcom
out
push
mov
dec
lods
or
mov
adc
xchg
mov
movs
inc
call
mov
dec
pushf
lahf
mov
cdq
push
push
jle
cwde
pop
out
adc
stos
imul
add
xor
aad
dec
stc
jnp
or
into
mov
imul
push
retf
mov
pop
push
cld
dec
pop
jns
mov
jg
ins
(bad)
fisubr
shl
pop
push
sbb
mov
jg
enter
adc
cmp
mov
inc
cld
sbb
neg
in
pusha
jno
mov
les
xor
stc
out
inc
jbe
call
scas
lds
jmp
dec
add
int
jae
fwait
inc
fbstp
mov
inc
repnz
jno
inc
movs
enter
ds
push
cmp
cwde
and
(bad)
adc
in
sbb
mov
push
xchg
das
adc
add
retf
test
inc
add
imul
enter
jp
inc
jo
adc
mov
outs
inc
in
in
fist
add
(bad)
aam
in
test
pop
jo
fsub
outs
jmp
outs
fs
pop
fld
imul
pop
cld
fs
(bad)
pop
cmps
and
(bad)
outs
out
pop
jnp
push
mov
push
pop
mov
out
ror
test
aad
push
movs
mov
jmp
in
mov
das
fadd
inc
mov
jno
stos
cmp
imul
dec
or
ins
fsub
sbb
movs
(bad)
retf
shl
mov
aam
into
inc
push
mov
retf
cmp
sbb
inc
ss
loopne
cmp
dec
xor
ins
sub
cwde
jae
int
dec
or
jbe
jmp
xor
push
mov
mov
and
cmp
mov
pop
jmp
sar
add
sbb
jge
cli
addr16
add
jno
cdq
dec
sbb
cs
pop
icebp
mov
cmp
xor
add
mov
shr
and
or
xchg
dec
mov
jo
and
popf
cmps
(bad)
sbb
inc
bnd
push
pop
lods
mov
sbb
outs
or
dec
inc
mov
sahf
fs
sub
mov
scas
dec
lods
dec
out
rol
fdecstp
js
xlat
stc
push
fmul
sub
xlat
outs
dec
push
push
push
jmp
and
mov
xor
mov
cmc
loopne
loop
push
mov
fbstp
mov
xchg
dec
outs
mov
push
jae
aaa
arpl
rcl
xchg
pop
jns
mov
ins
adc
out
mov
lock
int
mov
mov
push
data16
in
fs
inc
push
and
sbb
or
test
mov
in
mov
inc
sahf
lods
or
ins
sub
mov
jne
jmp
std
retf
rcl
xor
cdq
jp
cmp
dec
mov
sar
dec
inc
mov
push
push
lods
add
call
xchg
es
cmc
scas
ins
sbb
ins
xchg
fidiv
xor
pop
xor
inc
pop
mov
fisttp
inc
mov
js
dec
jecxz
xchg
fsub
(bad)
dec
lds
cmps
int3
ficom
xor
mov
xchg
fld
ins
dec
mov
ins
fucom
daa
cmps
out
std
ret
js
je
ss
dec
stc
fadd
and
xor
xchg
test
pop
sbb
test
xor
pop
add
(bad)
pop
out
cmps
mov
lock
scas
nop
and
into
mov
push
mov
xchg
ins
cwde
fidivr
pop
(bad)
outs
lock
mov
das
mov
jbe
cmp
mov
and
xchg
xchg
mov
push
iret
aam
in
cmc
out
(bad)
mov
loope
clc
fwait
icebp
add
lods
cmp
pusha
jb
ss
pop
fsub
imul
jbe
push
mov
jecxz
call
sti
sub
cdq
jecxz
ins
cwde
xchg
or
pop
lock
inc
mul
ret
daa
cmc
js
rcl
sahf
movs
retf
mov
pop
jbe
repnz
push
shl
scas
or
mov
stos
jle
ret
mov
sub
ja
push
push
cmp
mov
fwait
mov
out
fdivrp
lods
inc
pop
(bad)
clc
mov
xchg
cdq
inc
repnz
push
call
call
push
gs
cmps
neg
lock
aam
xor
ficomp
ret
bound
push
mov
pop
fs
pop
mov
lahf
xchg
bound
scas
cmp
pop
movs
push
(bad)
setbe
aad
mov
and
and
add
or
jp
add
pop
popa
or
xchg
mov
push
nop
xlat
push
stc
mov
xchg
not
mov
sar
jns
adc
dec
dec
fwait
add
sbb
mov
imul
retf
sub
jnp
mov
push
aas
pop
or
(bad)
push
out
movs
mov
fisttp
inc
and
ret
jmp
add
jge
add
add
les
mov
mov
js
bound
or
fdiv
cdq
sub
outs
std
retf
pop
or
(bad)
call
xchg
out
mov
cmp
outs
imul
retf
stc
jecxz
inc
cmp
loop
mov
shl
sbb
mov
pop
or
retf
fisttp
jge
popf
xchg
mov
mov
mov
mov
sbb
sub
xchg
aaa
mov
in
lods
fld
inc
cmc
cli
dec
and
cdq
jle
int
add
cmp
sbb
mov
push
jnp
ja
add
pop
movs
or
mov
iret
ret
add
es
dec
jl
scas
call
and
fstp
push
xchg
cmps
jl
jge
and
retf
arpl
inc
mov
retf
outs
jmp
push
imul
adc
or
loopne
pushf
sahf
mov
pop
std
std
lds
test
into
sbb
sbb
pusha
xchg
fiadd
movs
sar
or
jg
clc
mov
sub
fisubr
add
pop
push
aam
popa
or
xor
or
scas
sub
mov
in
enter
sub
(bad)
popa
dec
sub
or
xor
scas
stc
push
push
or
out
in
popa
jge
ret
jmp
int
out
pop
in
push
mov
pop
ret
cmc
jb
pop
or
xchg
mov
cld
gs
or
enter
out
mov
inc
jmp
xchg
mov
xchg
scas
loop
sbb
push
je
imul
pop
add
icebp
sub
jmp
jb
mov
loopne
arpl
pop
(bad)
call
pop
inc
ins
mov
push
mov
into
pop
inc
ins
xor
mov
cmc
sbb
fild
mov
scas
enter
aam
aam
pop
push
mov
dec
mov
dec
adc
pop
call
jp
pavgw
ja
cwde
jno
inc
icebp
or
out
sub
jg
push
sub
retf
or
jge
das
aas
pop
add
sbb
xchg
jns
mov
mov
dec
sti
xchg
sbb
sar
inc
out
push
sub
dec
test
xor
imul
jnp
icebp
jo
inc
sbb
jmp
mov
ret
mov
mov
movs
sbb
or
jmp
push
push
mov
test
fucom
jge
or
xchg
sub
mov
mov
out
dec
cmp
icebp
and
sbb
push
add
mov
xchg
pop
mov
rol
xchg
dec
cmp
xor
push
(bad)
es
dec
add
sub
add
or
sar
mov
ret
scas
mov
adc
rcl
(bad)
mov
fbstp
lahf
jmp
outs
push
repnz
add
and
lahf
and
loope
mov
popa
dec
lahf
dec
lods
cmps
add
pop
jecxz
and
sahf
sbb
es
fnstsw
inc
mov
cli
mov
sbb
pop
or
fisub
pop
out
cmps
or
inc
repz
and
jne
test
dec
loopne
mov
bound
bound
ror
fwait
clc
ins
pushf
or
push
or
sbb
add
retf
sub
cwde
inc
mov
movs
loope
jns
lods
in
xchg
pop
mov
ss
pop
in
cmp
adc
mov
mov
sub
dec
neg
(bad)
xchg
enter
adc
pop
retf
jbe
dec
ror
pop
cmps
retf
pop
inc
stos
scas
int
xchg
movs
dec
(bad)
movs
out
mov
and
lahf
add
test
push
adc
into
jns
push
pop
aad
jnp
cwde
mov
sub
pop
sub
xchg
retf
cs
sbb
in
push
in
in
push
cmp
movs
dec
xlat
push
and
xchg
xor
lods
jge
aad
imul
inc
dec
xor
adc
dec
inc
jmp
xor
jns
adc
pop
repnz
cmp
mov
pop
sbb
pop
lea
mov
jb
jp
lahf
mov
cmp
or
sar
out
int
ja
sbb
aas
test
fwait
cmp
iret
jnp
jle
xchg
out
dec
inc
daa
pop
mov
stos
ror
and
inc
(bad)
xor
fs
pop
mov
jmp
in
push
pushf
test
loopne
mov
rcl
aas
adc
push
sub
stc
dec
sub
cmp
dec
rol
cmp
retf
and
shl
mov
lods
out
push
sbb
lea
and
(bad)
out
sbb
or
jne
push
push
or
test
repz
shl
mov
xchg
scas
and
mov
(bad)
fdivr
adc
xchg
(bad)
das
sbb
fs
cmp
mov
add
les
cmp
xchg
add
sbb
xlat
xor
(bad)
ins
repz
dec
int3
dec
scas
std
(bad)
mov
or
lds
mov
push
xchg
adc
add
aam
in
pop
div
aad
ret
or
mov
jp
fldcw
fstp
ret
add
int
xchg
pop
leave
in
push
cdq
mov
movd
inc
(bad)
leave
mov
mov
and
jecxz
nop
mov
arpl
stos
and
popf
fs
in
cmp
add
and
jns
mov
pop
je
fnstsw
loop
sub
imul
ret
mov
jmp
and
xchg
enter
add
outs
fmulp
pop
(bad)
and
imul
int
scas
das
push
cdq
xchg
or
sbb
fisttp
mov
clc
pop
(bad)
test
leave
hlt
sub
and
imul
push
scas
mov
and
pop
call
lock
pop
aaa
nop
jp
push
rcl
hlt
xchg
aam
mov
cmp
nop
pushf
xor
jmp
add
push
inc
lds
(bad)
inc
gs
hlt
pop
xor
xchg
jne
push
and
mov
(bad)
pop
add
push
or
loope
icebp
scas
xchg
test
inc
test
sbb
sbb
adc
ror
mov
jmp
leave
loop
lods
popa
cmps
mov
sub
pop
dec
mov
sti
mov
mov
lods
or
cmp
mov
push
in
mov
cli
mov
jle
mov
cmp
out
pop
or
mov
mov
pop
push
call
lods
cli
adc
cmp
xchg
sub
rol
test
pop
sar
push
xor
cmp
sbb
imul
sar
stc
mov
jmp
sub
pop
inc
or
pop
ret
dec
mov
cmp
pop
out
sub
scas
jae
aad
add
fnstsw
pop
mov
jbe
rcl
aaa
mov
mov
sub
int3
imul
or
test
loope
pop
xlat
jmp
pop
adc
mov
add
push
movs
clc
scas
fcmovb
jae
rcr
(bad)
lods
les
mov
or
mov
sub
pop
ja
push
inc
mov
xchg
sahf
fmulp
(bad)
jmp
int
cs
cmp
cmps
xor
inc
mov
je
scas
cmp
rcr
dec
fs
gs
and
movs
enter
jno
stos
pop
mov
sub
xor
fwait
inc
retf
cmp
mov
das
rol
mov
cmp
mov
ds
push
icebp
popf
xor
nop
test
mov
popf
mov
inc
out
push
mov
cmp
mov
fst
or
bound
test
cld
ins
dec
adc
adc
sbb
movs
int3
dec
mov
xchg
mov
cmp
or
shl
jae
lds
jb
jnp
fadd
adc
jae
pop
icebp
call
and
cdq
cmp
xchg
xor
jbe
pushf
mov
add
ficomp
jne
frstpm(287
pop
and
ja
inc
push
je
ds
or
pop
arpl
fisubr
inc
aad
pop
mov
out
mov
scas
pop
jp
mov
mov
imul
out
sub
and
or
add
jae
das
cmps
push
inc
pop
adc
test
jmp
mov
into
inc
sbb
int
dec
cld
outs
stos
leave
jnp
jge
jb
(bad)
pop
adc
cdq
clc
imul
push
(bad)
(bad)
(bad)
jae
push
inc
neg
jle
push
ds
fistp
dec
fst
es
pop
repz
ja
iret
dec
loopne
add
xor
adc
push
in
sbb
fdiv
sbb
jecxz
stc
retf
call
cmp
jnp
fs
adc
je
mov
pop
iret
mov
(bad)
cmp
addr16
xchg
mov
jle
push
fiadd
hlt
mov
cli
call
call
fsubr
sti
pop
aad
enter
mov
jl
pop
dec
aaa
sbb
imul
and
jns
add
fild
cmp
fs
lahf
xor
(bad)
ja
loopne
pop
and
and
pop
fdiv
movs
fnsave
aaa
mov
ror
scas
es
ja
mov
pop
ret
fisub
les
mov
fs
push
shr
adc
js
cli
jb
cdq
ret
cld
mov
clc
jae
cli
cmp
pusha
(bad)
adc
cmps
adc
out
push
jbe
push
enter
aas
and
add
xor
pop
xor
(bad)
repnz
push
std
sbb
es
sbb
sub
cmp
out
int
fsub
sbb
daa
sbb
inc
loopne
idiv
pop
cwde
pop
lahf
enter
fxch
inc
pushf
inc
push
into
xchg
ss
imul
hlt
cs
or
mov
leave
dec
xor
into
ja
push
xchg
cs
pop
imul
or
shl
lods
rcl
clc
es
sub
mov
rcr
mov
retf
hlt
icebp
cmps
test
dec
mov
fstp
out
jl
lock
inc
push
(bad)
push
jne
dec
loope
stc
iret
push
mov
jp
(bad)
xchg
mov
or
ror
or
mov
ss
adc
aad
push
push
out
mov
jl
xor
div
mov
adc
push
push
cmp
test
cmp
scas
sub
or
ins
stos
xor
pop
out
punpckhwd
xor
loope
les
push
sbb
(bad)
mov
cmps
cmc
hlt
fisub
xlat
cwde
mov
cmp
or
test
(bad)
pop
mov
mov
test
cmps
cwde
inc
pop
xchg
iret
loope
pop
mov
add
pop
outs
outs
int
mov
pop
mov
(bad)
mov
jmp
mov
rcr
pop
enter
(bad)
aam
fiadd
sbb
js
xchg
jb
outs
cli
add
pop
icebp
xor
jl
add
jo
cmp
push
fsub
xlat
pop
dec
aam
rcl
mov
cmp
pandn
lock
xchg
cmps
lods
jp
stc
inc
mov
or
cmp
mov
fimul
pop
xlat
mov
inc
jnp
inc
cmp
inc
nop
xor
aad
(bad)
jb
dec
clc
pop
lods
cdq
cmp
outs
or
push
imul
pop
and
mov
cdq
(bad)
retf
mov
paddb
cli
int
xchg
xchg
dec
repz
push
fyl2xp1
mov
gs
mov
jns
(bad)
aam
sbb
pusha
(bad)
jl
mov
pop
sbb
fidiv
out
dec
fld
js
push
inc
lods
pop
int
sub
and
test
shl
pop
sahf
and
fmul
(bad)
popa
and
fwait
adc
jmp
sbb
jl
add
xchg
push
add
loopne
adc
xchg
cmc
arpl
push
(bad)
sbb
add
sub
cmp
sub
jl
cdq
mov
stc
aas
jnp
fidiv
je
scas
bound
enter
inc
outs
sti
cs
test
push
mov
fidivr
jmp
out
sbb
lods
pop
mov
lods
cdq
mov
pop
push
xor
inc
test
lea
imul
mov
pop
jle
repnz
pop
arpl
jle
fmul
dec
inc
pushf
jle
jno
inc
adc
aaa
fcomp
add
test
(bad)
pop
xlat
cmp
loopne
dec
jb
les
adc
mov
pop
in
mov
push
sysexit
inc
and
xchg
lock
push
popa
(bad)
fwait
movs
stos
add
push
je
push
adc
xchg
xor
inc
push
retf
mov
and
cmp
loope
dec
fdivr
mov
inc
or
sbb
neg
int
pop
(bad)
mov
inc
push
test
inc
test
push
fwait
sar
imul
fsub
ficom
cmp
push
cmp
xor
and
dec
pop
inc
test
jae
inc
stc
and
leave
in
repnz
stos
cmps
or
call
cmp
jecxz
push
jo
adc
mov
jle
call
fldcw
sub
popf
lock
scas
pop
xor
pop
out
jbe
std
inc
sub
in
mov
call
and
adc
pop
add
mov
iret
cmc
inc
jge
inc
mov
xor
sub
jbe
mov
jbe
sub
mov
adc
cdq
mov
scas
pop
sub
ret
call
sbb
mov
ja
mov
std
xor
cdq
in
push
sub
popa
add
int
cdq
mov
std
imul
mov
fwait
or
shr
or
mov
es
ds
push
adc
call
or
cli
jo
and
test
jo
push
cmps
xchg
cmps
sub
cwde
inc
cmc
lods
inc
fimul
xor
cld
lahf
pop
fsubr
movs
arpl
ds
jo
ficom
repz
mov
mov
(bad)
cmp
sub
sub
jns
mov
sbb
fsubr
popf
dec
jecxz
arpl
or
mov
fstp
mov
xchg
fbld
loopne
mov
mov
movs
jae
adc
stos
stos
dec
push
ficomp
mov
push
inc
(bad)
fnstsw
mov
xchg
and
popa
pop
fld
in
sbb
stos
mov
and
xor
(bad)
int
jnp
xor
out
and
xor
or
xchg
pushf
jmp
retf
ror
add
jmp
lea
fdivr
dec
adc
loopne
sbb
fadd
mov
adc
out
or
dec
lds
jg
xchg
jo
adc
add
add
fdiv
loopne
sub
add
dec
daa
jns
test
xchg
not
cmp
jmp
mov
jle
aaa
lds
add
dec
push
fsub
mov
push
fnclex
leave
pop
or
in
push
mov
cmp
jno
clc
and
jg
sub
pusha
call
pop
aad
fstp
adc
inc
sub
mov
popa
xor
mov
inc
jg
inc
xor
mov
aam
popa
stos
sbb
test
sub
adc
mov
test
fwait
or
mov
std
adc
dec
xchg
jno
push
ins
fisttp
pop
add
mov
cwde
js
repz
adc
fcomp
mov
xchg
mov
mov
loope
inc
xor
add
push
mov
ret
arpl
repz
push
imul
jecxz
pop
inc
dec
mov
jmp
pop
or
lds
mov
xchg
outs
mov
sub
sub
push
inc
mov
adc
inc
adc
mov
cmp
push
and
push
inc
mov
or
stos
dec
inc
and
push
push
push
mov
std
sbb
shr
mov
cdq
xchg
jb
xor
cmp
pushf
test
add
sbb
out
adc
adc
cmp
scas
xchg
pop
mov
xchg
and
lea
loope
jge
sbb
(bad)
popf
inc
icebp
das
sbb
xchg
jmp
sbb
xchg
pop
dec
into
lds
out
aam
jp
(bad)
ret
enter
arpl
or
je
jno
jae
popf
test
pop
enter
cmp
popf
loope
cmp
gs
add
pop
mov
sub
aam
xor
(bad)
fldenv
or
jp
or
inc
arpl
jbe
mov
into
out
cwde
sub
mov
arpl
add
mov
xchg
dec
jns
jno
xchg
mov
shr
aam
jl
bnd
xlat
(bad)
sar
imul
lds
xchg
fwait
dec
xor
xor
pusha
in
inc
aas
jmp
push
pop
xchg
sbb
inc
xchg
in
fld
stos
sbb
in
and
and
icebp
ds
xor
push
lds
xchg
add
mov
add
sbb
xor
push
sbb
adc
xlat
dec
aas
cmp
test
jmp
popf
push
mov
js
stos
inc
or
adc
cmps
xchg
dec
sti
jl
sti
movs
les
cmps
add
arpl
xor
jmp
(bad)
(bad)
adc
xor
adc
push
jmp
cmp
xchg
(bad)
lock
repnz
(bad)
pop
push
ins
jns
icebp
test
test
mov
sub
jmp
xchg
cmc
test
sbb
sbb
or
fidiv
xchg
sbb
jmp
xor
mov
xchg
cmp
cwde
jo
add
div
sbb
ret
cdq
cs
addr16
inc
ret
adc
add
fistp
leave
inc
push
cmp
ret
or
xchg
fs
dec
jae
mov
dec
lds
inc
retf
dec
jl
cmp
clc
inc
adc
xchg
popa
pusha
xchg
fnstenv
mov
add
ja
push
jo
inc
das
cdq
shr
dec
cwde
xchg
cmc
mov
pop
jmp
mov
scas
ret
(bad)
(bad)
cdq
fisub
mov
mov
adc
jbe
and
ins
jecxz
push
lahf
lahf
dec
js
mov
dec
jge
cmps
les
xor
or
push
cwde
test
xchg
rcl
rcr
scas
ins
pop
repnz
(bad)
sub
fdiv
mov
enter
repz
stc
aaa
add
xchg
cmp
lds
xor
pop
fimul
(bad)
jns
dec
or
(bad)
cld
(bad)
push
xlat
outs
or
mov
jno
xchg
sti
loop
and
pop
out
pop
pop
repz
mov
dec
rol
push
fadd
xor
pop
mov
pop
hlt
(bad)
dec
imul
push
inc
(bad)
cmp
dec
shr
fwait
mov
jg
ds
cmp
retf
lods
mov
inc
fld
xchg
(bad)
xor
repz
das
pop
sti
rol
sbb
rcl
pop
(bad)
xor
sub
cmp
and
call
pop
jno
jmp
mov
test
ss
in
sub
add
inc
jae
mov
mov
aas
push
lock
fs
aam
hlt
and
sbb
jmp
xchg
xor
xor
or
sub
push
adc
(bad)
repnz
cmp
sti
lods
in
sub
inc
icebp
mov
lock
(bad)
inc
(bad)
fdiv
idiv
call
not
(bad)
jge
fucomi
daa
sub
or
dec
xlat
pusha
mov
sub
out
test
stos
dec
push
lds
add
mov
jne
push
cdq
rcl
mov
loopne
or
add
sahf
not
or
rol
mov
daa
popa
sbb
cs
jmp
daa
(bad)
out
fadd
test
cmp
jle
push
call
(bad)
xor
mov
sub
lock
dec
and
push
jns
ror
out
sub
jbe
push
pop
cmps
les
popf
push
and
(bad)
mov
push
xlat
mov
fcmovu
pop
fdiv
sbb
cmp
and
jbe
pop
cld
cmp
dec
or
mov
retf
add
mov
or
and
xor
jmp
jl
pushf
adc
bound
sti
pushf
leave
sbb
cmp
imul
jmp
fiadd
or
push
cli
mov
mov
lock
jo
xor
pop
out
stos
jecxz
ins
and
xchg
adc
fst
stos
xchg
mov
in
sub
daa
fistp
je
sbb
sti
and
mov
or
dec
out
push
mov
and
xor
js
mov
daa
(bad)
arpl
ins
aas
pop
outs
cwde
gs
es
es
lds
cmp
xor
sub
cli
ror
mov
cmp
neg
sbb
cmp
pop
add
int3
movs
ins
retf
and
dec
retf
arpl
(bad)
cmps
in
fsub
xlat
and
mov
or
mov
xchg
sbb
aaa
out
pop
pop
aas
ror
xor
inc
pop
cmp
inc
or
loop
push
mov
shr
mov
js
shl
bound
clc
adc
push
jbe
jnp
mov
pop
xchg
jmp
arpl
sbb
rcr
mov
or
jmp
mov
sub
ret
popf
clc
ds
mov
jle
or
lea
mov
call
imul
add
xor
cli
pop
cli
fcom
rol
mov
pushf
pushf
outs
cld
pop
je
cli
and
in
in
adc
sti
pop
lea
call
icebp
xchg
outs
add
mov
adc
outs
loope
or
mov
pop
inc
xchg
pop
pop
ins
mov
push
(bad)
mov
stc
idiv
xchg
ins
ds
test
push
fadd
je
sti
push
xlat
lods
add
enter
mov
xor
icebp
stc
jp
or
cli
cmps
adc
adc
in
shl
mov
imul
aas
pushf
fst
push
(bad)
xlat
jmp
jmp
ins
sti
xor
push
cmp
in
sbb
aam
inc
dec
repz
dec
vprotb
sub
cmp
imul
iret
jmp
mov
mov
or
dec
and
add
es
pop
xchg
sahf
xor
(bad)
cdq
fist
(bad)
inc
mov
es
mov
adc
push
repnz
jns
cmovl
(bad)
fldenv
popf
jno
and
stc
add
mov
mov
jg
fistp
xchg
lods
jbe
pop
popa
add
nop
push
std
daa
push
fmul
jbe
xchg
cmp
mov
sub
repnz
lds
cdq
cmp
neg
fstp
aas
fnstenv
push
xchg
stos
and
outs
xchg
mov
mov
add
or
cmp
inc
mov
pop
and
dec
xchg
sbb
push
ret
pusha
loopne
inc
pusha
adc
fdivr
mov
pop
mov
es
cmps
outs
fbld
cmp
ret
xchg
neg
(bad)
push
push
inc
mov
cld
cld
into
jle
jnp
(bad)
data16
mov
mov
dec
fisttp
je
cwde
add
cmp
pop
or
add
stc
call
int
or
jmp
cs
std
mov
push
bound
fnstcw
pop
mov
jb
std
xchg
outs
lods
scas
test
pop
adc
xchg
lods
sti
fisttp
test
pop
mov
mov
sub
xchg
push
pop
pop
add
cli
jge
cmps
and
push
push
ds
xor
jo
movs
mov
xchg
scas
cmp
lahf
xchg
or
push
leave
and
movs
cmc
xor
fucompp
cmp
ret
xchg
adc
jge
xor
mov
xchg
push
mov
neg
xchg
fsubrp
push
or
sar
pop
add
sbb
xchg
mov
movntps
cdq
data16
cmp
neg
mov
test
vmread
inc
and
cmp
pop
out
pop
movs
add
jb
arpl
scas
clc
add
fmul
mov
mov
pop
adc
cmp
xor
ins
inc
pushf
pusha
dec
mov
sbb
push
not
(bad)
mov
or
mov
add
xchg
dec
mov
xor
shr
aaa
daa
or
pop
adc
loopne
dec
xlat
mul
cmp
jmp
adc
(bad)
cmp
add
scas
mov
push
jbe
pop
in
sub
xor
jae
mov
imul
movs
fs
push
mov
jmp
ret
arpl
repnz
scas
pop
mov
mov
cmps
add
and
cmp
data16
mov
push
fcmovnb
pop
retf
in
and
pop
xchg
retf
pushf
popf
dec
shr
or
cmp
in
into
test
pop
mov
out
mov
jo
cmp
pop
shl
or
and
sahf
push
test
add
jno
in
test
jmp
enter
and
pop
jbe
jecxz
mov
cdq
in
pop
push
mov
jae
push
xchg
rol
in
dec
stos
imul
ret
jnp
pop
sbb
jno
jb
jno
add
lock
xor
test
movs
ja
in
xor
fsubr
mov
mov
enter
movs
test
mov
inc
outs
(bad)
jo
cs
in
xchg
mov
push
jle
jge
sub
inc
jb
jmp
test
and
sbb
mov
jl
push
call
out
lods
add
mov
dec
add
(bad)
mov
fcomp
sbb
inc
xchg
or
pop
sti
push
dec
cmp
pop
pop
leave
pop
pop
aaa
ds
push
ins
adc
cmc
pushf
mov
sti
cwde
jle
jl
push
jae
xchg
mov
sbb
das
ins
add
jecxz
xchg
jecxz
imul
and
dec
aaa
pop
inc
sahf
(bad)
neg
adc
(bad)
jns
and
dec
mov
or
imul
cwde
cmp
je
imul
sub
inc
cmp
test
div
add
cmp
xchg
aaa
mov
mov
and
stos
popf
cwde
pop
xor
(bad)
cli
stc
pop
jmp
pop
fwait
(bad)
retf
sub
mov
fisttp
push
dec
add
mov
movs
sar
cmp
test
jne
xor
mov
or
cmp
fmul
jge
mov
je
test
mov
lahf
mov
aad
aaa
lock
sbb
adc
(bad)
scas
inc
ss
sub
dec
jns
or
mov
adc
push
mov
mov
rcl
xor
fistp
xor
sbb
sahf
mov
sbb
push
into
cmp
pop
push
retf
js
add
or
pop
jne
dec
mov
sbb
sti
sub
shl
cwde
jo
std
cmc
lahf
inc
mov
jge
(bad)
repz
mov
dec
pop
les
fstp
jl
xchg
lds
and
cs
xchg
shl
dec
mov
add
jecxz
xor
call
lods
mov
aam
inc
fstp
mov
or
(bad)
cli
jecxz
sbb
out
loopne
add
int3
inc
inc
pushf
inc
std
lock
into
fs
je
ja
je
adc
push
mov
jnp
fisub
sbb
xchg
ins
mov
test
mov
cmps
(bad)
comiss
dec
pusha
mov
sbb
neg
add
push
xor
xor
mov
loopne
sbb
js
das
and
pop
push
dec
push
int
sub
and
ss
in
xchg
int3
rol
jg
add
dec
or
call
iret
jne
call
and
mov
loop
mov
mov
inc
xor
mov
xchg
mov
jmp
jo
pop
mov
bound
popf
ins
fidiv
mov
adc
scas
sbb
adc
xor
xor
mov
xchg
in
fwait
sub
or
jno
fs
dec
sub
(bad)
in
fcomi
dec
adc
fist
sub
sub
movs
sub
mov
cmp
mov
pop
add
mov
jns
cdq
add
outs
mov
aas
aas
mov
mov
xor
movs
cld
stos
dec
and
adc
gs
outs
xor
cmp
sbb
(bad)
sbb
test
les
or
mov
push
enter
popa
shl
sbb
pop
not
cmp
mov
and
and
pop
in
xchg
mov
add
mov
mov
popf
adc
pop
out
add
clc
xchg
push
sbb
mov
xor
out
sbb
dec
xor
and
xor
test
sar
pushf
retf
cwde
(bad)
mul
mov
sbb
pop
cmp
jae
cdq
push
sub
jo
dec
repz
mov
cmp
ficomp
sar
xor
outs
repz
cmp
inc
sub
xor
mov
or
push
or
jmp
inc
in
stc
pop
call
out
pusha
adc
or
cmp
xor
adc
sahf
xchg
rcr
xor
inc
arpl
ins
push
cli
push
sbb
mov
mov
mov
(bad)
out
dec
mov
push
out
jnp
jl
cs
push
iret
push
push
push
push
mov
push
in
fcomp
mov
dec
and
scas
es
retf
and
movs
cmp
dec
outs
jp
stc
xor
xchg
popa
lahf
or
inc
pusha
ds
aam
stos
xor
dec
cmc
or
cmp
mov
sub
movs
jmp
push
sahf
push
and
enter
mov
sbb
cmp
mov
cmp
in
(bad)
or
lods
dec
dec
(bad)
arpl
movs
and
test
fwait
sub
cmp
pop
mov
mov
(bad)
sub
add
or
in
bound
aas
jae
cmps
and
out
pop
pushf
dec
cmp
nop
inc
jbe
(bad)
or
mov
mov
aad
cmc
sahf
loop
push
in
aaa
imul
jl
cdq
cmp
add
popa
jp
push
xchg
rol
add
push
jmp
jge
test
sub
sahf
out
fs
xchg
mov
push
into
push
(bad)
in
pop
xchg
and
jne
(bad)
push
add
cmps
jno
movs
xor
loope
fld
mov
jno
pop
xor
inc
pop
xchg
std
or
enter
cmp
cmp
icebp
scas
cmp
clc
mul
sub
adc
or
xchg
pop
fsubrp
mov
(bad)
fidiv
push
push
dec
and
sub
(bad)
inc
sahf
loop
lea
xchg
outs
pop
add
dec
pop
dec
cwde
and
or
in
mov
rcl
gs
popa
and
jmp
mov
sbb
inc
and
fstp
jbe
rcr
adc
jmp
shr
xor
fcomp
mov
dec
test
jp
repz
fst
lea
std
std
rcl
shr
js
inc
arpl
mov
cdq
out
prefetcht0
or
ja
les
jno
jmp
and
pop
cmp
pop
sti
adc
ret
je
cmp
mov
add
call
cmp
les
adc
or
mov
sbb
cmp
xlat
rcl
sti
jbe
stc
(bad)
cmp
idiv
or
mov
cld
xor
push
sub
pop
mov
pop
mov
dec
arpl
repz
lock
repz
(bad)
push
loopne
inc
xchg
add
or
jmp
add
xchg
push
add
jne
lods
ror
jo
push
add
pushf
stc
test
rol
ss
sub
pusha
pusha
adc
inc
sub
jmp
xchg
aad
lea
pop
push
dec
pushf
xchg
rcr
push
es
(bad)
jg
mov
faddp
nop
mov
outs
dec
sar
adc
add
lock
sbb
mov
xchg
jnp
lahf
enter
adc
stos
shr
adc
and
icebp
xchg
lds
mov
adc
inc
sub
outs
test
jne
pusha
cmp
inc
rcl
jp
stos
cld
jp
pop
adc
pop
ins
les
add
jnp
ins
test
data16
jbe
mov
sahf
adc
loopne
das
sub
jns
dec
add
jae
sbb
pop
sub
dec
xchg
ffree
jbe
dec
stos
enter
push
js
dec
adc
hlt
mov
lods
in
test
mov
loopne
into
inc
cmp
aaa
jae
enter
mov
loope
iret
push
adc
and
fisttp
inc
push
(bad)
xchg
lods
in
clc
stos
out
mov
js
push
xor
ficomp
icebp
call
sub
add
push
add
jb
push
aas
inc
retf
cwde
enter
pop
or
jb
dec
adc
mov
out
les
outs
jae
jne
dec
or
gs
mov
push
jmp
mov
jo
cmp
cmp
mov
sub
test
add
and
(bad)
cmp
push
xchg
rol
xor
outs
cmp
xchg
shr
retf
outs
or
arpl
cmps
(bad)
lods
mul
pop
mov
test
push
ss
(bad)
and
jl
not
sub
andnps
test
rcr
repnz
dec
and
jle
cli
imul
mov
retf
or
mov
sahf
idiv
outs
lods
in
jno
mov
xor
call
jmp
push
movs
repz
(bad)
mov
mov
cmps
les
xchg
repnz
(bad)
leave
femms
imul
sbb
rol
xchg
mov
xor
cmps
loop
js
pop
das
jae
mov
xchg
loope
neg
mov
lods
inc
add
inc
adc
push
out
xchg
int3
lahf
fist
push
(bad)
xchg
scas
test
lods
fmul
fiadd
data16
mov
icebp
pop
sbb
push
fisubr
leave
push
inc
mov
pop
rcl
adc
ins
inc
push
arpl
std
stos
mov
jo
js
stos
mov
and
inc
fistp
jne
call
push
mov
xchg
pusha
jmp
sub
cs
outs
sub
stc
mov
mov
xor
inc
add
and
add
(bad)
mov
and
clc
test
stos
enter
mov
xor
into
stos
cli
(bad)
fcomp
dec
into
pushf
in
lods
outs
and
scas
jmp
in
icebp
pusha
sbb
addr16
in
dec
cmp
inc
mov
shl
aad
xor
xor
adc
rol
jge
mov
dec
pop
ins
aaa
sbb
mov
jge
push
xor
jp
cwde
xor
gs
das
jg
repnz
adc
sti
(bad)
les
jecxz
xlat
push
push
in
test
rol
ret
stos
enter
fld
or
mul
cdq
ins
sub
call
xchg
adc
int
push
outs
js
jmp
clc
test
sub
test
mov
cmp
rcr
jne
jmp
gs
sbb
pushf
jo
push
test
inc
xor
in
je
cmp
mov
pushf
enter
lods
xlat
(bad)
and
nop
jno
adc
std
mov
ficomp
daa
rol
pusha
bound
sub
mov
mov
adc
rcr
mov
mov
mov
adc
inc
add
pusha
mov
js
(bad)
fbstp
dec
push
jle
in
push
pusha
sub
scas
repnz
xchg
mov
fild
imul
xchg
xlat
fwait
addr16
ror
aam
fistp
pop
paddq
test
mov
ds
daa
xor
pop
push
jl
xchg
xlat
add
and
outs
xchg
and
shl
dec
adc
dec
push
imul
call
dec
push
ins
aad
out
xchg
sbb
cmp
jp
fidiv
jae
mov
xor
fs
mov
es
add
jns
icebp
lea
inc
mov
(bad)
int3
movs
push
add
popf
aad
inc
cmc
xor
adc
not
ficomp
pop
ss
adc
mov
mov
test
sub
imul
sbb
jge
test
xchg
lds
loope
fisub
dec
sbb
jnp
dec
cmovae
repz
xchg
inc
add
cmp
dec
or
fwait
(bad)
in
(bad)
stos
rcl
cmp
(bad)
lods
jl
mov
and
call
imul
mov
xor
inc
add
cmp
dec
test
jg
cmps
xor
sbb
cmp
repnz
dec
inc
lds
push
dec
lahf
inc
or
gs
movs
xchg
fwait
pause
jecxz
inc
or
inc
cmp
push
mov
fs
cmp
dec
adc
jne
and
test
mov
xchg
bound
dec
imul
imul
mov
mov
add
cwde
rcr
dec
daa
push
add
aaa
stc
lea
pop
sbb
cmp
push
dec
or
mov
adc
pop
sub
jg
adc
rcl
mov
mov
xchg
leave
(bad)
loope
lods
mov
xchg
inc
cmp
pushf
cdq
js
jo
push
xchg
std
sub
icebp
add
out
hlt
out
sbb
inc
sub
inc
mov
leave
and
add
aas
lods
into
xor
pop
add
cli
cdq
jg
ins
or
aad
jns
pop
xor
inc
mov
inc
out
jge
dec
add
enter
mov
xchg
ret
xchg
adc
js
jae
push
cwde
movs
push
shr
pop
push
shl
scas
jmp
fldcw
push
in
outs
cmp
jge
cmc
movs
lds
jbe
imul
je
mov
ror
push
adc
pushf
lods
sti
mov
sti
cmp
sub
mov
movq
popa
cmp
mov
es
adc
mov
dec
or
inc
out
in
and
sbb
out
dec
jmp
(bad)
in
dec
cmp
mov
sbb
loop
cmc
mov
push
adc
ret
add
xchg
out
mov
mov
inc
add
inc
mov
inc
mov
mov
add
xchg
call
push
and
popf
(bad)
jle
ret
mov
sbb
sub
sbb
inc
mov
loop
pop
cmp
fidiv
xchg
out
mov
das
mov
xor
sbb
stc
rcr
js
jp
mov
enter
dec
mov
mov
xchg
imul
out
inc
and
int3
mov
mov
xchg
ret
add
lahf
ficomp
push
fwait
mov
pop
or
lock
dec
adc
push
sub
xchg
fidivr
dec
or
popa
cmp
inc
sub
mov
stos
out
ficomp
jb
ret
jns
jno
push
daa
dec
sar
hlt
push
retf
mov
rol
addps
fimul
rcl
stc
push
out
mov
imul
or
mov
cmp
mov
pop
test
mov
xchg
push
cmp
dec
xchg
dec
sar
pop
(bad)
mov
jmp
test
lods
pop
adc
add
jno
fidiv
mov
or
inc
adc
imul
xchg
nop
jne
pop
sub
fadd
or
ret
mov
pop
mov
pop
mov
mov
inc
xchg
rol
shl
(bad)
scas
lds
push
adc
(bad)
mov
sbb
dec
jno
xchg
(bad)
div
sbb
push
scas
int
and
fisttp
addr16
ins
sub
mov
js
pop
push
rol
ficom
inc
xor
xor
(bad)
lahf
cmp
push
stc
test
fcomp
ret
mov
dec
cli
outs
sub
int
dec
dec
mov
movs
rcl
sbb
push
jbe
and
mov
js
cmps
rcr
xor
idiv
mov
adc
scas
(bad)
movs
(bad)
or
ja
push
mov
lds
pop
daa
daa
arpl
aad
add
push
mov
jb
cmp
dec
(bad)
fiadd
dec
or
shr
dec
sbb
mov
pop
and
cmp
js
push
mov
xchg
jecxz
jns
movhps
xor
adc
cld
movs
jge
jmp
adc
jmp
sti
mov
pop
andnps
sub
mov
fsub
jp
pusha
adc
test
push
push
push
fs
lahf
pushf
xor
dec
and
mov
inc
scas
mov
jo
sar
push
dec
and
sub
sbb
popa
aaa
jae
inc
mov
mov
mov
jp
inc
push
jge
jbe
rol
mov
push
lock
imul
mov
cs
addr16
mov
test
sub
xchg
inc
adc
(bad)
ficomp
pushf
fcom
cmc
xchg
xchg
shr
pusha
das
cmp
adc
adc
dec
or
inc
sbb
jmp
retf
adc
sub
mov
cmp
push
mov
popf
jmp
add
aas
outs
add
sbb
retf
mov
(bad)
xchg
loop
add
lahf
out
scas
jmp
pop
add
aaa
pop
cmp
sbb
cdq
retf
sbb
pop
sub
cmp
lods
loope
rcl
shl
test
cmp
rol
inc
out
nop
cmp
nop
retf
pop
push
sti
mov
mov
add
ja
push
pop
mul
pop
repnz
xchg
cmc
or
or
push
into
fstp
xchg
ret
pop
outs
push
or
cmp
mov
pop
shl
pop
cmp
fidiv
xchg
out
mov
das
mov
and
lahf
enter
and
and
push
cmp
dec
pop
mov
jmp
neg
jne
push
lods
les
aas
cmc
sahf
xor
add
idiv
or
push
sahf
leave
cwde
ins
sbb
jle
movs
jb
jg
ret
inc
sbb
lods
in
(bad)
push
push
push
fnstcw
or
test
xchg
xchg
shr
or
mov
arpl
loopne
ret
xchg
ins
test
mov
adc
pop
sahf
(bad)
movs
jb
cmc
mov
mov
pop
xor
pop
outs
cs
pop
push
push
cmp
mov
xor
imul
inc
adc
ins
imul
or
pop
cmp
fwait
mov
retf
fmul
mov
in
shl
sbb
inc
jg
jne
jbe
imul
xchg
mov
xor
lods
sti
mov
sub
icebp
mov
and
jo
add
push
inc
add
fs
dec
sbb
ret
mov
in
lods
jbe
je
dec
xor
(bad)
scas
mov
sub
or
mov
enter
cmp
cmp
add
div
mov
push
adc
adc
imul
in
clc
mov
fcomp
add
repz
xchg
push
adc
jge
(bad)
push
add
fadd
push
adc
mov
arpl
jbe
dec
stos
shr
test
fwait
stos
loopne
daa
loope
repz
(bad)
cmp
inc
xor
ret
fwait
out
mov
imul
popf
inc
int
repnz
repnz
repz
(bad)
mov
sub
mov
or
iret
rcpps
ds
ins
sub
mov
sahf
data16
push
imul
jns
pop
sbb
push
sbb
mov
push
adc
pop
mov
xchg
data16
mov
fistp
pop
mov
mov
inc
push
in
(bad)
mov
cmp
mov
mov
sub
es
(bad)
mov
lods
inc
or
dec
pop
mov
sti
xchg
(bad)
push
jg
jp
rcl
xor
inc
pop
pop
xchg
jmp
loopne
js
psubsw
jo
jmp
pop
sub
test
iret
xchg
fs
inc
push
push
dec
mov
icebp
mov
sub
jl
cwde
fdivr
cmps
and
mov
xchg
ret
fcom
inc
add
aad
push
push
cmp
sbb
sahf
xlat
aaa
outs
push
adc
out
shl
scas
ficomp
push
mov
push
adc
pop
and
mov
inc
ins
mov
dec
neg
pop
push
repnz
jg
shl
jmp
call
xor
add
xchg
dec
cmp
xchg
retf
out
je
inc
setnp
push
fisttp
jp
add
js
pop
maxps
(bad)
rol
jmp
push
jmp
xor
inc
or
test
sti
xchg
lock
mov
push
retf
popa
adc
mov
mov
dec
(bad)
leave
test
movs
jbe
xor
jle
cli
scas
out
xchg
xchg
mov
xchg
rol
shr
pop
mov
xor
sub
sub
ds
or
(bad)
dec
lock
int
inc
or
sub
jns
cli
mov
iret
mov
jmp
cwde
iret
jecxz
dec
cmps
xlat
xchg
shl
je
inc
sub
ins
or
sbb
rcr
ss
pusha
and
cwde
ret
not
xor
aam
pop
pop
push
adc
mov
int
push
pop
retf
push
push
fs
or
dec
or
repnz
cmc
sti
test
dec
push
adc
hlt
add
gs
cmp
and
in
inc
in
out
mov
in
xchg
leave
mov
ja
shr
test
mov
daa
outs
adc
lahf
fistp
cmp
mov
scas
mov
in
mov
repz
xchg
stos
ficom
jo
mov
inc
push
push
jo
je
inc
sbb
mov
test
and
mov
fisubr
test
cmps
retf
sub
dec
sbb
stc
pop
sub
call
inc
pop
stos
mov
push
repz
iret
lahf
hlt
pushf
dec
jae
dec
fsub
fidivr
pusha
imul
iret
ins
sbb
js
pop
cdq
fnstsw
out
test
scas
fisttp
push
mov
stos
fmul
enter
fisub
lahf
leave
lea
dec
sbb
adc
test
cwde
aam
les
push
or
aam
dec
sub
(bad)
inc
xchg
stos
hlt
xor
or
and
pop
and
in
or
pop
fsubr
push
stos
lock
iret
pop
idiv
dec
adc
rcl
sar
xor
jnp
pop
mov
sbb
ja
outs
iret
xchg
lds
cmps
shl
jmp
push
or
fidivr
dec
add
xchg
or
fstp
call
dec
pop
and
inc
cs
mov
popa
sbb
mov
out
shl
mov
push
pop
push
sbb
dec
aas
imul
push
adc
imul
mov
mov
adc
xchg
int3
div
shl
dec
xchg
scas
fld
push
aas
dec
sbb
lods
jge
mov
sar
out
stos
fst
lods
leave
cwde
sub
leave
mov
push
mov
ja
test
rol
add
add
add
in
push
inc
mov
jg
jmp
mov
stos
inc
cmps
std
sub
int3
mov
movs
(bad)
and
outs
cmp
leave
adc
pop
adc
aaa
test
add
cmp
mov
pop
sub
pop
push
dec
das
jle
fsubr
addr16
inc
cmps
jmp
push
test
data16
sbb
dec
(bad)
out
nop
imul
outs
add
(bad)
sub
stos
xor
aad
ret
add
jo
pop
lods
sti
pop
ds
mov
xchg
mov
or
mov
out
rol
cmps
out
cli
lods
pop
sbb
push
cmp
push
dec
add
cmps
inc
loop
pop
jp
inc
jne
lock
ss
shl
stc
pop
mov
ror
ss
adc
mov
ins
sub
es
dec
out
test
mov
popf
dec
ud0
adc
enter
push
mov
inc
rcl
retf
mov
sub
adc
and
pop
rcr
fs
icebp
test
in
push
push
inc
daa
jbe
aam
outs
mov
adc
les
popf
outs
adc
lock
les
mov
aad
popa
or
out
es
sub
int3
adc
bound
dec
mov
and
add
leave
or
sbb
hlt
jecxz
jecxz
sub
into
cwde
fnstenv
clc
xchg
out
dec
push
jne
pop
(bad)
adc
jno
sbb
test
xor
pusha
and
test
inc
and
imul
push
lock
cmps
rol
(bad)
mov
rcl
dec
cmp
rcr
jnp
scas
ficomp
loop
add
mov
aam
outs
cwde
fld
push
adc
inc
pop
push
mov
out
sub
sub
adc
xchg
hlt
sbb
xchg
mov
pop
inc
es
aad
pusha
das
adc
xchg
mov
or
pushf
enter
clc
sbb
(bad)
nop
cmc
movs
rol
scas
mov
cmp
ss
xor
and
mov
sbb
xor
sub
stos
ret
aaa
pusha
bound
add
lahf
lds
mov
mov
or
jge
and
and
push
pop
ss
adc
or
mov
sahf
fcomp
ret
cmp
jae
xor
xor
and
stos
and
lods
lds
call
mov
sub
adc
fs
mov
fcomp
scas
jmp
or
int
jno
pop
imul
retf
mov
rcl
iret
xchg
lds
cmps
ror
mov
ins
or
jnp
jno
repnz
ja
int3
and
sbb
sahf
sti
mov
ins
cmp
test
lods
in
jbe
popf
(bad)
xchg
std
xchg
test
in
mov
popf
sti
mov
imul
cmc
mov
mov
jp
or
popf
in
mov
inc
push
clc
cdq
(bad)
es
push
std
jb
jne
push
adc
cmps
out
out
fidivr
outs
sub
lock
push
pop
movs
enter
pop
ficomp
ror
push
xor
mov
mov
xor
cmc
mov
mov
scas
jge
shl
or
mov
jmp
lods
jae
fmul
jg
je
out
pop
jmp
xchg
mov
jmp
popa
or
je
rcl
outs
cmp
fistp
dec
idiv
dec
sbb
fwait
test
pushf
(bad)
xchg
std
adc
mov
mov
dec
jmp
out
(bad)
xchg
bound
ja
into
sahf
cmc
mov
mov
xor
and
cmps
lds
push
cmp
sbb
(bad)
scas
(bad)
movs
(bad)
add
int3
xor
test
sti
mov
mov
cdq
jecxz
sub
or
pop
stos
loop
xchg
outs
leave
lahf
fcmovne
jp
movs
in
clc
scas
pop
pop
lods
sar
push
cmp
xor
or
test
jnp
popf
movs
into
test
push
add
pop
sub
push
nop
jmp
mov
jne
mov
pop
jp
mov
mov
cmp
test
das
jg
loope
adc
push
mov
xlat
inc
push
(bad)
mov
jno
inc
xor
lods
xchg
out
pop
or
sub
popf
into
xor
stc
push
adc
pop
mov
cmps
std
data16
or
hlt
mov
pop
or
pop
in
cwde
xchg
aam
cmp
retf
mov
mov
fidiv
cmps
cmc
and
mov
in
cdq
inc
xor
movs
call
push
mul
mov
mov
pop
mov
pop
sbb
and
mov
mov
mov
repz
icebp
xchg
jl
push
jl
cmps
fwait
repz
in
stos
cdq
out
push
sub
mov
ret
and
sub
jl
cdq
sahf
mul
push
stos
in
push
and
arpl
adc
(bad)
clc
mov
aaa
jae
test
mov
mov
stc
pushf
je
les
in
mov
shl
push
stos
in
dec
cmp
outs
mov
pushf
js
retf
mov
test
int3
pushf
xchg
(bad)
adc
xor
scas
(bad)
neg
cli
lods
call
(bad)
pop
cs
push
cmp
push
out
xchg
ja
mov
fisttp
js
loopne
inc
mov
sub
cmp
test
inc
aaa
loope
jnp
xor
stos
push
add
xchg
inc
add
mov
icebp
cdq
cli
(bad)
les
jne
or
call
out
jne
div
int3
cdq
mov
and
xchg
call
mov
sub
xchg
push
out
lahf
dec
or
retf
loop
outs
fld
retf
sub
xchg
jbe
shl
fwait
loope
jns
scas
mov
(bad)
mov
out
call
push
adc
lods
idiv
aas
jns
stos
test
dec
sbb
pop
sub
mov
xor
jns
and
xchg
lahf
idiv
dec
xchg
sub
shl
popa
fisttp
das
outs
hlt
adc
les
mov
test
test
jb
cs
lods
fst
mov
aam
sub
pop
scas
fdivr
inc
xchg
(bad)
es
add
xchg
data16
test
push
xchg
cmc
and
jmp
or
lods
xchg
repz
mov
aam
jo
ret
or
xchg
jbe
hlt
mov
xchg
in
ror
out
dec
or
mov
out
xchg
mov
mov
push
push
xor
mov
add
leave
das
outs
fist
mov
adc
arpl
and
inc
adc
dec
sbb
pop
mov
and
and
arpl
mov
rcr
lock
sub
mov
clc
pop
xor
lods
push
pop
call
cdq
xchg
pusha
and
sbb
mov
add
dec
cmps
out
pop
pop
pop
call
mov
sub
and
sbb
cmps
xchg
sahf
les
retf
sbb
xchg
rcr
rcr
lds
jmp
rol
adc
mov
jle
sbb
repz
leavew
test
test
sar
jl
xchg
xchg
leave
or
test
dec
sbb
and
mov
popf
not
jae
pop
out
dec
pop
dec
adc
aas
jnp
scas
mov
outs
mov
cmp
cmp
or
push
push
fiadd
dec
push
adc
rcl
xor
jns
loope
xor
xor
movs
loopne
ins
test
cmp
das
js
test
sbb
mov
sub
or
cmps
mov
bound
dec
or
mov
and
lods
lods
loope
pop
mov
xchg
inc
push
loope
inc
sbb
xchg
fwait
dec
daa
mul
sbb
inc
fnstcw
daa
outs
hlt
lods
nop
aam
ins
mov
mov
xchg
fstp
lds
jmp
xchg
fld
rcr
mov
mov
retf
mov
xchg
fiadd
sub
ins
or
push
or
movs
arpl
hlt
movs
jnp
jecxz
popa
ss
mov
stos
rcr
mov
jge
push
adc
scas
inc
adc
dec
mov
and
cmc
xchg
fisttp
repnz
gs
push
add
in
sbb
xchg
scas
dec
sbb
pop
mov
pop
add
mov
scas
jmp
fs
enter
sti
add
adc
je
xchg
pushf
(bad)
es
fnstcw
jecxz
pusha
cmp
outs
adc
mov
imul
jg
push
lods
call
and
cld
xor
jmp
pop
mov
push
xor
dec
pop
jmp
movs
loope
movs
hlt
xor
mov
out
and
es
push
jge
xchg
lds
outs
sbb
jmp
pop
xor
jecxz
mov
es
shl
out
inc
push
cli
mov
call
outs
(bad)
int3
bound
(bad)
push
add
mov
push
mov
cmp
sub
cmp
jo
ficom
div
mov
dec
or
inc
aam
data16
or
not
loop
cdq
int
jge
stc
aaa
outs
movs
loopne
and
cld
xchg
rcl
cs
xor
(bad)
mov
add
retf
pushf
dec
es
scas
jle
pop
push
les
cwde
int3
push
cmp
mov
test
pusha
sar
jl
in
mov
lock
pop
cvtdq2ps
cli
pop
sbb
mov
sub
mov
not
inc
sbb
jb
ficom
mov
out
sbb
push
push
push
push
add
and
dec
sbb
mov
repz
pop
cmp
out
mov
sahf
fisubr
jl
mov
fs
cmp
jae
in
jnp
rep
ins
sub
inc
rol
enter
cmp
loope
cli
push
xor
jne
cmps
(bad)
les
and
mov
mov
dec
add
xor
jae
mov
xchg
mov
es
in
xlat
je
ret
adc
pop
fcomp
xchg
(bad)
cmp
mov
idiv
mov
xchg
push
sub
inc
jmp
sub
dec
mov
xchg
mov
jno
jns
mov
cwde
ret
push
xor
jne
xchg
rcr
and
pushf
mov
pop
or
test
sub
cmps
imul
pop
sbb
fs
mov
retf
mov
jo
push
or
push
sbb
mov
fiadd
adc
shl
dec
sbb
js
cld
pop
add
lahf
imul
push
mov
not
lock
and
lahf
dec
and
xchg
xchg
shl
test
aas
push
mov
mov
retf
push
sbb
neg
clc
scas
push
adc
sti
mov
fmul
dec
adc
scas
data16
stos
outs
cmp
and
mov
lods
(bad)
xchg
hlt
outs
cmp
outs
mov
jecxz
sbb
pop
xor
ja
mov
in
mov
loop
push
hlt
mov
in
mov
fnsave
jb
out
or
call
push
sbb
dec
(bad)
lods
movs
(bad)
es
lahf
pop
pushf
les
jp
in
adc
inc
lods
lds
sbb
push
scas
les
stos
inc
or
loopne
sub
int
jo
hlt
fwait
xlat
xchg
into
pop
xor
inc
add
mov
call
sub
mov
xor
bound
dec
adc
retf
mul
(bad)
aad
jo
xchg
fwait
retf
scas
(bad)
pusha
aaa
or
jnp
mov
out
adc
inc
in
movs
stos
repnz
out
cdq
fstp
add
push
adc
loop
addr16
adc
pop
sbb
pop
push
xor
fbstp
cli
mov
jp
in
pushf
enter
test
bound
out
ret
int
pminsw
neg
mov
test
retf
sub
mov
sub
dec
xlat
lea
not
test
pop
add
mov
xor
into
cmps
jg
leave
mov
leave
xchg
or
fmul
cmp
dec
sbb
loope
xor
ja
clc
cmp
xchg
cdq
ret
ss
cmps
les
test
adc
cmps
rcl
pushf
call
retf
es
push
inc
add
xor
jmp
fsubr
push
mov
or
mov
sub
jne
out
pop
mov
sahf
xlat
dec
adc
mov
iret
mov
and
ja
mov
sbb
clc
cmp
hlt
lods
jae
inc
add
sub
cmc
das
outs
fcom
dec
mov
rcr
xchg
push
inc
loopne
popf
hlt
cmp
les
js
xchg
rol
(bad)
sahf
int
mov
add
push
shr
dec
xor
jmp
pop
push
or
div
adc
pop
or
or
iret
xor
xchg
test
sub
xchg
movs
loopne
data16
push
cmp
xchg
mov
add
xor
jo
or
xchg
int3
xchg
ins
sub
mov
and
xchg
jp
push
pop
int
jge
sub
cmps
jl
adc
jnp
rep
ins
sub
in
mov
fimul
fld
xchg
(bad)
xor
gs
push
in
test
fisubr
add
call
lock
ins
lds
rol
lds
repnz
popf
retf
pop
pop
rcr
scas
cdq
fstp
dec
adc
mov
sbb
jmp
push
enter
cdq
ret
ds
mov
je
repz
daa
dec
(bad)
retf
push
add
mov
mov
aas
jae
out
xor
mov
movs
in
pop
pop
mov
mov
and
jp
loop
inc
add
hlt
scas
gs
sbb
mov
and
fwait
jno
sti
stos
dec
sbb
push
retf
pushf
call
in
es
mov
int
add
mov
movs
cdq
enter
add
mov
push
in
mov
cmp
lods
jae
adc
js
pop
cli
lods
push
adc
mov
icebp
pop
or
int3
and
fild
pop
rol
xlat
xchg
ja
repz
mov
dec
paddsw
sti
or
int3
fwait
dec
and
cwde
call
adc
mov
mov
mov
dec
or
dec
mov
push
cmp
stos
dec
or
movs
outs
xor
jle
loope
imul
jge
out
or
push
fmul
xlat
xchg
inc
or
xchg
or
cld
sub
mov
daa
arpl
lea
retf
adc
retf
mov
outs
add
in
add
mov
aas
icebp
test
fmul
mov
push
cli
mov
fmul
mov
inc
out
mov
mov
ss
xchg
jmp
(bad)
xor
adc
nop
enter
cli
add
push
mov
aas
push
mov
xor
les
in
or
std
pop
sbb
mov
les
stos
lock
cmp
cmps
dec
sbb
fnstsw
mov
iret
cmp
std
lods
inc
adc
stos
inc
adc
push
or
test
(bad)
mov
cwde
fadd
inc
rol
aad
fs
dec
and
fwait
call
mov
fnstsw
push
cmc
pushf
pushf
retf
jl
in
mov
pushf
dec
pop
push
enter
pop
dec
fimul
les
ja
out
mov
add
push
scas
jmp
outs
mov
fstp
loopne
mov
xor
and
dec
aad
mov
cs
cmp
mov
popf
call
stos
ins
sub
push
cmp
nop
xchg
shr
xor
mov
pop
adc
jno
mul
test
xor
jl
xchg
mov
sub
fcomp
fcomp
jnp
mov
jmp
or
bound
outs
lds
mov
int3
xchg
mov
jae
arpl
sbb
call
data16
jmp
sbb
jg
out
cmp
stos
rcr
xchg
aad
sbb
push
push
pop
mov
add
(bad)
and
push
int
jne
pop
jl
jecxz
push
adc
xchg
les
push
xor
sub
mov
imul
jae
in
adc
call
daa
dec
lods
sti
mov
into
dec
sub
nop
jnp
idiv
sti
mov
int
ja
(bad)
mov
retf
mov
jo
idiv
mov
xor
mov
dec
adc
out
sahf
retf
mov
xor
popa
mov
cmp
or
inc
clc
mov
or
(bad)
push
cmp
mov
dec
std
lods
mov
xchg
xchg
aad
push
es
cmps
xchg
lock
xchg
ficom
rcl
and
jne
in
dec
mov
xor
arpl
adc
mov
add
fisttp
pushf
mov
push
out
test
pop
sbb
int3
xchg
mov
and
or
pop
in
mov
ret
jg
dec
sbb
inc
adc
std
js
in
mov
stos
dec
or
dec
jmp
cmp
movs
xchg
pop
adc
inc
xlat
xchg
jb
rcl
ficom
(bad)
mov
xor
in
mov
mov
and
fcomp
ins
add
dec
rcl
arpl
pusha
adc
xlat
push
or
test
jecxz
mov
popf
fld
or
lods
loope
movs
into
imul
push
sbb
push
mov
dec
push
or
fmul
(bad)
into
mov
xchg
cmp
popf
mov
sub
mov
push
dec
mov
ja
in
jae
sbb
mov
daa
clc
lods
xchg
aad
sbb
jbe
xchg
fs
mov
movs
repnz
rcr
test
out
jbe
xor
jb
mov
xchg
mov
add
jb
mov
arpl
ret
mov
xchg
ins
sub
mov
push
adc
xor
jno
scas
ja
in
xchg
dec
scas
out
pop
mov
pop
sbb
cmp
mov
xlat
lea
xchg
push
adc
add
jle
pop
add
les
in
mov
cmps
mov
add
mov
outs
(bad)
lahf
dec
sldt
sbb
dec
sbb
cmps
retf
(bad)
pushf
neg
jnp
scas
and
jne
cmp
or
out
cmps
lock
cmp
cmp
sbb
xchg
mov
jp
add
test
lock
test
adc
cmps
rcr
ja
and
cmps
or
xor
lea
rcr
lods
iret
push
add
rcr
std
add
outs
cmp
mov
sub
scas
jo
jae
cmp
popf
cwde
rcr
lock
repz
dec
mov
add
hlt
or
scas
push
call
mov
pop
pop
dec
enter
mov
jmp
sbb
sbb
push
push
cmps
loop
ins
movs
std
mov
pop
sbb
mov
mov
hlt
add
xor
mov
in
mov
int3
push
dec
das
inc
sbb
jmp
pop
or
lods
xchg
sub
pop
adc
pop
pop
rcl
xor
fimul
aad
push
aas
not
scas
out
push
mov
dec
psraw
stc
mov
aas
xor
mov
xchg
(bad)
push
adc
cmp
nop
gs
mov
fs
pop
xor
ds
dec
rep
mov
daa
arpl
add
fidiv
sahf
rcr
shr
xchg
cwde
ror
jmp
ds
and
lahf
xchg
aam
jae
loopne
mov
enter
mov
test
mov
cli
xchg
mov
jg
lock
pushf
cwde
fsub
ja
loope
jmp
and
mov
movs
jp
push
push
fcom
cmp
stos
push
add
and
and
mov
xchg
pop
inc
aam
xchg
retf
js
cmp
fcom
in
lahf
enter
in
pop
pop
mov
shr
pop
and
cmovnp
fdivr
push
(bad)
xchg
xchg
aam
dec
mov
sbb
jp
xchg
mov
pusha
cmp
jg
lahf
imul
cmps
(bad)
in
push
aam
jle
cli
mov
and
xchg
mov
sub
inc
mov
shl
pop
rol
inc
push
shr
push
and
push
leave
lea
add
js
cmps
fwait
int3
jl
jns
sbb
int3
ins
push
cmp
cs
cdq
cmps
jmp
jge
jecxz
mov
pop
ss
sbb
jns
mov
retf
pop
xor
sub
cmc
mov
(bad)
jns
xor
hlt
inc
adc
jp
sbb
lds
or
mov
xor
sbb
mov
icebp
jb
loop
push
adc
adc
(bad)
mov
add
pop
rol
sbb
inc
(bad)
mov
je
pop
mov
push
sbb
jno
mov
scas
pusha
xor
inc
ret
stos
ins
cmp
loop
cwde
ret
add
div
or
aas
push
ret
xchg
inc
movs
repz
sbb
inc
push
loop
(bad)
out
push
fmul
sub
cdq
enter
xor
push
or
lods
je
or
rcr
inc
mov
dec
or
scas
(bad)
and
mov
es
stos
(bad)
in
cmp
cld
mov
out
xchg
jno
sbb
ja
mov
push
dec
stos
shr
scas
out
add
cmps
lock
or
out
fdiv
mov
bound
retf
hlt
and
in
and
lahf
mov
mov
out
xchg
mov
mov
push
sti
stos
outs
cmp
retf
pop
adc
pop
fidiv
lahf
fist
push
push
mov
test
jg
clc
mov
xchg
cld
add
pminsw
outs
sub
mov
cmp
daa
xlat
(bad)
fld
cmp
xchg
iret
inc
add
pop
or
outs
leave
mov
arpl
call
dec
adc
mov
adc
xchg
xlat
ss
call
pop
dec
mov
jecxz
pop
clc
mov
arpl
in
ret
fwait
outs
and
xchg
outs
add
dec
paddsw
(bad)
dec
sbb
in
jae
mov
div
push
fisttp
ret
inc
rcl
jg
pop
jle
lea
lock
xor
test
sbb
xchg
xchg
ja
int
call
stos
popa
sub
loop
arpl
in
inc
pcmpeqw
cmps
xchg
xlat
and
in
push
cmp
cmps
js
icebp
mov
test
push
push
adc
idiv
mov
aas
outs
sbb
ds
aad
call
sub
pushf
mov
retf
into
mov
jmp
sub
enter
adc
xchg
aad
fwait
ret
cmp
mov
jb
cli
ss
in
or
(bad)
mov
movs
inc
or
or
xchg
mov
add
bound
(bad)
jae
or
mov
jmp
into
jge
cld
stos
xchg
jmp
jns
jmp
adc
mov
or
push
call
dec
sbb
cmp
xchg
xchg
int
imul
inc
push
sti
mov
(bad)
mov
mov
sub
and
mov
mov
sbb
or
dec
mov
mov
inc
sbb
xchg
jne
pop
inc
test
call
fwait
dec
adc
jnp
loop
mov
adc
lahf
(bad)
pop
add
mov
std
stos
lahf
test
dec
mov
int3
movs
int3
dec
push
loopne
dec
add
enter
and
rcr
cmps
xchg
frstor
outs
mov
adc
imul
movs
hlt
das
js
mov
es
lea
cmp
popf
bound
in
gs
sub
mov
test
push
shr
jmp
push
cs
cmps
int3
rol
inc
pop
retf
push
adc
mov
aam
fwait
arpl
pop
sub
(bad)
sti
das
scas
mov
test
xor
jge
cmps
(bad)
jbe
iret
push
bound
xchg
adc
int
and
out
mov
mov
adc
rcr
sub
movs
xor
sbb
mov
sar
mov
jl
out
sub
pop
enter
dec
imul
sbb
adc
les
cmp
mov
dec
fwait
cmp
js
sub
mov
or
sar
js
jbe
lea
call
xor
push
pop
in
js
xor
sahf
cmp
and
inc
dec
xchg
xor
rol
sub
inc
push
icebp
fcom
sbb
xlat
retf
mov
nop
or
jo
xor
pop
mov
inc
adc
std
loopne
or
add
lods
movs
xor
xchg
ret
jbe
(bad)
mov
xchg
add
(bad)
pop
xchg
pop
fwait
inc
test
and
add
mov
clc
mov
pop
fdiv
add
and
jecxz
rol
mov
xchg
push
rol
shl
mov
das
enter
and
pop
and
jns
lods
rcr
dec
dec
push
mov
mov
sbb
mov
movs
repz
cdq
arpl
in
sbb
mov
out
xor
jns
fimul
dec
and
data16
das
cmps
ss
push
push
cmp
es
push
movs
ss
sub
jle
adc
mov
sbb
sahf
js
fld
fisttp
iret
mov
jge
mov
js
inc
dec
add
icebp
mov
jp
cli
sub
dec
and
push
(bad)
jp
sar
inc
retf
mov
dec
ds
sbb
sub
pop
inc
mov
cmps
mov
xchg
pop
(bad)
std
sub
cdq
dec
cmp
gs
pop
stos
jb
stos
(bad)
xlat
loope
pop
shl
ror
dec
cli
fs
push
lea
lock
aaa
push
daa
sub
(bad)
in
lock
out
jge
movs
and
test
push
shl
xor
adc
(bad)
loopne
lea
xchg
test
mov
mov
fbld
arpl
fld
test
sbb
push
mov
inc
gs
das
inc
movs
jno
retf
pop
adc
xor
sbb
push
test
xor
enter
adc
ret
and
mov
(bad)
push
and
or
icebp
loop
call
dec
add
dec
stc
push
xor
cmp
nop
or
and
jbe
inc
xchg
and
arpl
retf
repz
rcr
push
dec
xor
mov
push
and
pop
clc
shl
loop
es
enter
jmp
sar
rcr
sub
rcl
or
mov
fstp
outs
ds
pop
inc
pop
pop
jne
aam
xchg
dec
and
sbb
(bad)
loope
mov
cld
cmp
or
inc
add
inc
inc
jl
sbb
idiv
pop
add
mov
dec
or
or
mov
rol
daa
(bad)
xor
jnp
cmp
mov
push
es
mov
xchg
inc
retf
pop
out
hlt
adc
retf
mov
fnstenv
icebp
pop
popf
inc
push
sub
pop
dec
mov
push
aam
pushf
xchg
cmp
pusha
movs
test
sahf
in
mov
fmul
ret
cli
pop
div
mov
movs
sub
in
in
mov
and
mov
imul
(bad)
repnz
cmp
adc
ds
xor
jne
push
and
rcr
sub
loop
mov
mov
mov
call
mov
ret
aad
push
dec
push
rcl
in
add
push
mov
mov
jb
and
jmp
pop
in
shr
mov
mov
(bad)
sbb
jne
lods
outs
clc
jmp
or
xchg
loope
cmc
lds
(bad)
shr
dec
js
push
or
push
mov
daa
jl
sbb
pop
xor
mov
aaa
and
fsub
(bad)
lds
hlt
lods
ror
cmps
push
call
jl
ret
(bad)
cmp
fild
cs
xor
jnp
mov
retf
ror
std
mov
out
mov
(bad)
mov
adc
sbb
adc
(bad)
dec
pop
lods
push
ins
xchg
jo
int
pushf
dec
out
xlat
cmp
test
mov
in
pop
das
xchg
loope
sbb
mov
fwait
cmp
ret
or
mov
jg
mov
mov
mov
inc
xchg
jg
je
fld
add
popa
punpckldq
sub
push
adc
fbld
mov
(bad)
and
aad
jl
test
pop
and
repnz
mov
(bad)
(bad)
aam
inc
jae
inc
pop
push
push
(bad)
cs
pop
jge
cld
scas
mov
jae
ror
popa
xchg
xor
gs
test
int
and
xor
cmp
aad
in
or
shl
sti
addr16
mov
fiadd
aad
and
ins
pop
idiv
cmp
sahf
dec
(bad)
stc
pusha
lahf
in
jae
sbb
mov
rol
enter
mov
leave
adc
push
lea
loop
movs
arpl
in
sub
dec
mov
cmp
cmp
pop
inc
sub
pop
mov
jecxz
jle
cmp
cmps
rcl
les
add
adc
shl
outs
int
dec
xchg
js
jmp
das
(bad)
retf
add
sbb
adc
in
icebp
inc
outs
mov
(bad)
xor
test
(bad)
adc
pusha
leave
mov
adc
jge
mov
adc
sbb
or
or
neg
sub
jne
jp
xor
leave
scas
mov
(bad)
outs
cmp
jge
cmp
(bad)
push
(bad)
cmp
int3
call
pusha
mov
inc
inc
aaa
imul
mov
sub
mov
mov
fist
js
mul
mov
and
sbb
mov
addr16
cmp
cmp
cmp
sub
cmp
mov
xor
and
out
inc
dec
loopne
xchg
(bad)
lock
jmp
push
bnd
imul
sbb
pop
jnp
retf
sahf
test
in
(bad)
mov
cmp
aam
imul
out
ds
(bad)
xchg
mov
mov
int3
xchg
pushf
in
jg
xchg
jbe
xor
retf
loope
push
jle
retf
xlat
adc
sub
popa
scas
(bad)
mov
std
in
push
add
mov
sahf
ins
idiv
sti
mov
adc
push
popa
leave
xor
dec
hlt
jb
dec
cwde
mov
or
push
lods
lods
popa
xchg
fisubr
push
in
inc
cld
inc
push
xchg
stos
fadd
cld
stos
movs
add
mov
and
shl
jne
add
fldenv
dec
mov
jecxz
cs
pop
jns
or
push
xor
popf
addr16
and
mov
bound
int
jmp
mov
test
mov
nop
ret
inc
cmp
(bad)
mov
(bad)
adc
or
in
pop
lods
xchg
out
and
or
add
mov
lahf
inc
push
jp
mov
popf
xchg
fisttp
sbb
fwait
pop
std
popf
dec
int
jb
pop
ficomp
lds
jecxz
imul
mov
xlat
add
frstor
or
test
xchg
sub
mov
sub
dec
test
in
je
fistp
cwde
test
jnp
mov
jle
cmp
adc
int3
mov
adc
add
test
pop
cmp
jno
and
push
and
mov
in
sub
cmp
pop
scas
out
mov
mov
mov
xor
lock
iret
or
push
fwait
jge
push
xchg
outs
or
pop
jae
pusha
mov
sbb
and
neg
and
pop
in
jo
and
rol
push
jecxz
fisttp
jmp
cmovge
push
mov
dec
sub
(bad)
shr
fcomp
pop
or
mov
mov
inc
in
leave
dec
je
mov
aam
loope
cwde
cmp
jg
into
pop
out
ror
loopne
add
xor
cs
pop
jge
sbb
ret
fmul
into
cs
test
jle
mov
int
mov
mov
mov
cld
mov
dec
mov
xor
or
mov
sbb
icebp
jl
repz
popf
inc
rol
and
or
ret
iret
call
and
arpl
lahf
mov
movs
loopne
ret
sahf
mov
arpl
sbb
iret
(bad)
mov
fiadd
ret
iret
sti
outs
pop
dec
jg
das
ds
add
jno
popf
clc
pop
jne
add
mov
sub
push
aas
pop
add
mov
loop
cmp
add
das
or
mov
cmp
and
sub
inc
mov
xlat
inc
out
aad
retf
fst
xchg
adc
in
mov
add
ror
pop
push
retf
mov
popa
in
rol
cmp
enter
ficomp
push
ficom
ins
dec
jno
mov
loopne
stos
lds
or
pop
test
je
(bad)
push
pop
ins
lock
rcr
dec
rcl
iret
test
test
xchg
add
xor
outs
(bad)
leave
jle
leave
adc
lods
mov
cmp
mov
out
lea
dec
push
ret
clc
dec
pop
in
or
ss
mov
test
and
sbb
jmp
ret
xor
stos
je
addr16
push
jb
or
cmps
dec
jecxz
cmc
cli
pop
pop
jns
add
xchg
sbb
push
push
dec
add
sub
pop
enter
cld
adc
call
in
lea
mov
mov
movs
fldenv
sahf
jg
repz
push
pop
stos
pop
scas
jge
dec
out
xchg
popa
shr
outs
idiv
call
jo
pop
fcomp
bound
shl
scas
push
inc
(bad)
push
fdivr
push
(bad)
sbb
vunpcklps
sbb
retf
cmp
fcomp
gs
movs
leave
cdq
loop
test
jno
inc
out
gs
fmul
sbb
or
out
jg
sub
add
add
cli
xchg
retf
xchg
out
adc
mov
add
enter
jno
jno
sub
mov
es
je
pop
jp
mov
adc
xchg
add
adc
xor
ins
mov
div
mov
jae
aaa
and
aam
or
imul
int
cdq
mov
dec
mov
xchg
jb
sbb
aad
(bad)
cli
lds
adc
jle
fild
dec
sahf
mov
in
fimul
sub
mov
xchg
pop
(bad)
in
dec
lods
ret
inc
je
jae
and
pop
push
cwde
xchg
retf
xchg
nop
shr
jb
enter
mov
hlt
xchg
imul
mov
mov
xchg
add
adc
jp
fbstp
lahf
xchg
and
jp
dec
aam
cmps
cmps
jl
sub
jmp
cmc
test
push
cs
les
add
dec
sub
(bad)
pop
call
jne
(bad)
in
inc
into
rcr
dec
cmp
mov
mov
jno
into
lock
mov
or
lahf
cmp
cmp
push
cmps
leave
popa
xor
popa
retf
mov
scas
adc
test
fwait
push
mov
jnp
xchg
jmp
addr16
pop
movs
outs
sub
cmp
int
push
out
scas
rol
ret
add
jae
sbb
imul
stos
and
ja
mov
xchg
push
(bad)
add
or
(bad)
loope
xor
xchg
(bad)
jmp
pushf
mov
lds
mov
neg
xor
mov
lods
xchg
pop
dec
into
sti
xor
ins
(bad)
enter
div
scas
push
add
jae
scas
mov
cmp
and
ds
cmc
or
fmul
cmp
pop
dec
mov
(bad)
mov
aad
add
xor
in
out
sbb
pop
loope
add
cmp
out
enter
mov
pop
xchg
in
stc
(bad)
in
add
jnp
jne
adc
adc
ret
or
or
dec
fild
(bad)
arpl
cwde
dec
mov
std
ret
addr16
leave
mov
call
outs
(bad)
jecxz
into
jecxz
push
and
int3
mov
sbb
xchg
mov
and
cmp
mov
or
sbb
imul
loope
xchg
xor
mov
xor
inc
jmp
push
imul
repnz
and
jo
fild
xor
lock
push
inc
jbe
iret
sahf
jb
add
pop
scas
lahf
mov
nop
lods
push
leave
loope
jge
das
out
xor
inc
mov
cmps
jae
jg
pop
xor
and
jl
sbb
fxch
repz
jnp
or
jne
iret
jne
stos
stos
sti
push
out
ret
nop
jbe
or
cmp
inc
mov
ins
inc
out
xor
retf
dec
shl
(bad)
push
and
out
cwde
fidivr
sar
mov
and
mov
add
adc
fwait
sbb
dec
sub
mov
dec
inc
or
cmp
sbb
fwait
scas
push
rcr
mov
or
push
das
aas
rcr
daa
mov
out
inc
adc
loopne
mov
mov
retf
jae
stos
pop
mov
inc
(bad)
jmp
pop
push
jbe
loopne
adc
dec
push
xor
sar
and
dec
test
pop
sbb
jb
mov
adc
lock
popw
mov
inc
add
add
imul
jmp
rcr
mov
or
sub
pushf
xor
popa
dec
jg
sub
comiss
in
push
add
test
ss
mov
push
fsubr
cmp
inc
dec
not
std
sub
popf
dec
mov
cmp
data16
mov
in
push
mov
and
pop
ror
xchg
shl
mov
in
jecxz
adc
jb
mov
sbb
cmps
dec
sbb
ss
scas
pushf
push
out
jbe
cmp
dec
out
ret
xchg
mov
push
fisubr
cwde
test
sub
pop
push
push
jae
mov
xchg
sbb
les
jbe
sbb
mov
and
inc
ja
in
xchg
sub
cmp
scas
adc
(bad)
fdiv
push
(bad)
iret
pop
push
(bad)
fild
jle
and
mov
mov
cmp
push
mov
ja
fnstcw
xor
packssdw
in
xlat
inc
sbb
xor
mov
test
pusha
pop
ret
ret
je
shl
dec
aas
mov
call
push
cdq
lods
stos
mov
mov
repnz
sbb
loope
push
sub
mov
jae
or
shr
jb
dec
pop
inc
cmc
dec
push
pop
aas
xor
mov
pop
loopne
jmp
imul
fimul
int3
test
push
mov
stc
inc
fisubr
and
pop
mov
ret
sub
cmp
lods
ret
test
in
adc
sbb
cld
ret
push
xor
xor
dec
add
xchg
test
adc
mov
fistp
pop
(bad)
adc
xor
ins
(bad)
(bad)
outs
mov
xchg
scas
mov
cmp
xchg
lock
xchg
xchg
adc
sbb
pop
fisttp
les
push
inc
jbe
in
cmps
push
fcomp
imul
adc
lods
lea
out
jb
mov
push
ret
cmp
test
and
and
adc
adc
or
rol
cmps
xchg
sbb
sbb
inc
cmps
aam
ss
jnp
stos
push
push
xor
push
test
pusha
arpl
retf
push
add
mov
or
mov
cmps
mov
mov
retf
stc
push
sbb
mov
mov
mov
add
mov
dec
nop
in
cmp
dec
mov
scas
sub
(bad)
cmp
ins
(bad)
leave
aad
adc
cmc
sbb
cmp
cdq
sub
cmp
out
add
mov
sbb
test
sahf
mov
shr
push
test
imul
(bad)
pop
ins
ja
jno
dec
div
and
lock
call
mov
jb
jne
sbb
fisttp
cmp
add
add
in
test
jns
rcr
cmps
mov
sbb
mov
call
mov
mov
adc
push
ja
into
rcr
add
adc
push
fisub
add
nop
jmp
cmp
jae
fisub
bound
xchg
ds
cld
sub
and
call
call
shl
(bad)
mov
sar
or
jns
jl
fldenv
fst
gs
repz
aaa
lock
xchg
into
pop
push
mov
inc
loop
fnstenv
ret
mov
inc
in
or
int3
adc
rcr
mov
xor
inc
inc
cmp
jbe
ins
outs
pop
in
out
pop
pop
sar
mov
mov
aas
mov
call
pop
xchg
ret
push
dec
dec
call
fcmovb
mov
xchg
sbb
or
aaa
(bad)
mov
jo
inc
call
cmp
add
adc
lods
pop
mov
adc
inc
cmc
xor
fadd
xchg
loopne
sbb
inc
fdiv
add
dec
mov
jbe
pop
rcr
imul
mov
pop
jp
jle
pushf
ret
repz
inc
int
(bad)
in
rol
daa
lahf
mov
mov
daa
push
mov
bnd
inc
mov
test
es
je
xchg
std
hlt
fs
xor
das
shl
push
frstor
jp
das
out
(bad)
scas
pop
adc
mov
add
daa
mov
jo
call
cs
mov
pop
stc
push
add
push
repz
and
fistp
daa
dec
dec
jo
and
adc
xor
es
push
movs
jb
mov
in
imul
cmp
add
fist
mul
inc
fadd
xor
add
lds
cmp
test
mov
invd
and
scas
fcomp
sbb
push
fnstenv
pop
dec
adc
mov
outs
mov
stos
ret
enter
and
or
sub
je
rcr
shl
std
ja
mov
rcr
mov
addr16
or
mov
mov
sub
sti
bound
sbb
mov
div
sbb
dec
rol
xchg
and
pop
mov
sbb
mov
retf
scas
(bad)
in
xchg
lods
fild
xor
scas
icebp
xchg
rol
push
or
sub
sub
inc
pop
jge
xchg
adc
dec
fiadd
pop
or
and
ja
cmp
xor
mov
scas
or
data16
cmp
dec
push
and
xor
sub
add
dec
iret
sbb
and
mov
xchg
ror
mov
and
dec
loop
jle
sbb
pop
aas
push
pop
inc
add
ss
pusha
dec
sbb
sbb
add
das
jnp
pop
jno
mov
mov
mov
cmps
out
add
push
das
jne
xchg
cli
cdq
lahf
retf
add
outs
inc
pop
push
adc
dec
push
mov
xchg
jg
and
enter
mov
xchg
cwde
lods
fadd
int3
mov
xchg
(bad)
lahf
(bad)
xlat
mov
xchg
repnz
inc
cmp
lods
mov
push
je
sub
push
in
outs
adc
add
in
vmread
push
mov
dec
pop
pop
sbb
sahf
repz
mov
mov
int
lock
adc
mov
div
inc
xor
xor
jae
je
mov
lahf
(bad)
add
pop
adc
cmp
dec
repz
test
jl
inc
aas
pop
adc
xor
or
dec
cmp
dec
out
idiv
xchg
out
sahf
fbld
inc
sbb
int3
jo
clc
and
stos
(bad)
fwait
clc
or
and
dec
lods
sti
stos
retf
dec
pop
pop
out
cmp
(bad)
bound
dec
or
jno
jns
sub
mov
mov
inc
add
enter
(bad)
data16
sbb
mov
xchg
test
mov
test
fwait
repz
mov
add
mov
pushw
and
xor
mov
int3
(bad)
mov
cmps
mul
loope
lods
mov
mov
fwait
mov
inc
xor
pop
mov
cdq
jecxz
aam
and
or
lds
enter
jl
and
mov
scas
cli
xor
xor
daa
ja
or
push
adc
mov
(bad)
movs
imul
inc
cmp
loope
fidiv
push
jno
push
add
jmp
sbb
loop
sti
and
std
mov
and
jge
cs
rol
or
jmp
fadd
mov
or
xor
push
sbb
mov
or
jmp
out
xor
js
div
xchg
int
fld
sbb
pop
jnp
pop
sbb
push
pop
or
mov
lods
mov
cli
mov
mov
mov
mov
add
adc
not
mov
mov
out
ins
add
ret
rol
mov
add
aaa
sbb
ja
out
mov
shr
cmc
xchg
movs
(bad)
(bad)
call
mov
sbb
mov
into
xchg
jo
popa
das
sub
sub
dec
sbb
dec
shr
push
jae
ins
jecxz
xchg
ror
push
aas
push
es
test
push
or
push
mov
mov
push
pop
push
int3
les
adc
and
inc
aam
or
cmps
pushf
mov
test
dec
icebp
addr16
push
cli
add
aad
mov
sbb
pop
rcl
or
pop
sbb
jns
xchg
xlat
xchg
dec
xor
lods
in
mov
cmp
lea
adc
pop
jbe
jl
xchg
mov
hlt
mov
xchg
sub
adc
sub
sub
xor
iret
xchg
xchg
inc
clc
cmp
and
pop
push
dec
push
sub
xlat
cmps
addr16
imul
fimul
fstp
cmp
inc
dec
cs
cmovg
mov
jmp
fisub
jns
ret
popa
and
dec
or
sub
mov
stos
lock
sub
jne
dec
leave
cs
push
jge
cdq
call
fwait
pushf
aad
retf
popa
cmp
jmpw
mov
loopne
dec
adc
pop
add
in
lock
inc
sbb
dec
(bad)
iret
cwde
test
sahf
fmul
adc
push
mov
ins
rcl
cld
jne
fisub
push
push
or
cdq
ret
mov
pop
dec
add
imul
int3
xor
popa
push
push
pop
pop
sub
rcr
(bad)
adc
mov
cmps
mov
pop
aaa
jbe
jg
sub
pop
xor
pusha
push
and
jns
je
inc
sub
add
icebp
mov
mov
vmwrite
jae
mov
nop
enter
mov
movs
enter
inc
cmp
ret
adc
dec
in
jmp
retf
arpl
and
or
adc
inc
mov
aad
xchg
test
int3
xchg
retf
mov
adc
fcom
mov
xchg
(bad)
add
and
inc
cmp
ss
pop
aas
aaa
outs
sub
out
aad
fistp
add
(bad)
xchg
jecxz
fisttp
pop
jecxz
jmp
test
cmp
sahf
retf
mov
sub
add
sub
add
(bad)
pop
in
frstor
push
sub
in
shl
and
push
dec
add
jbe
nop
jecxz
cmps
jecxz
fdivr
jp
dec
pop
dec
or
or
pop
(bad)
jnp
jmp
repz
mov
fisttp
pushw
neg
sub
(bad)
xchg
in
pop
or
ins
or
into
adc
(bad)
sti
addr16
add
dec
and
mov
sar
imul
sbb
cdq
ins
pop
or
stc
mov
fmul
and
lea
mov
jge
mov
outs
sub
shr
fsub
fs
lock
hlt
mov
xchg
into
cdq
bound
pushf
repz
mov
jmp
jmp
int3
test
and
mov
fisttp
test
(bad)
rcl
frstor
cwde
in
stc
mov
addr16
push
into
and
push
pop
adc
(bad)
test
test
dec
loopne
jge
push
inc
or
fimul
fwait
shl
xchg
shr
cmps
lock
cmps
iret
test
test
xor
cmp
xchg
shl
shr
xchg
ja
outs
adc
jl
pop
loope
pop
je
xchg
rcl
(bad)
imul
sar
inc
vmwrite
push
out
loope
shl
rol
dec
adc
mov
xor
jb
jnp
js
cld
(bad)
into
mov
sti
lods
call
sub
ret
mov
add
jno
push
adc
and
cmc
test
nop
mov
leave
xchg
xchg
ror
in
stos
out
jb
(bad)
mov
arpl
popf
fsubr
aas
sub
push
das
jne
dec
add
xchg
aad
fsubr
out
inc
and
std
lods
in
xchg
loop
hlt
mov
and
sub
mov
(bad)
popf
fstp
hlt
popf
mov
sahf
stc
test
sahf
xchg
ss
outs
cmp
mov
cmp
fisttp
jnp
and
push
adc
and
aaa
xchg
loope
ret
mov
xchg
icebp
mov
inc
xor
and
jns
dec
adc
push
adc
dec
sub
(bad)
jecxz
in
mov
scas
enter
arpl
pop
call
jno
js
push
or
data16
sub
pop
add
es
enter
ficom
mov
mov
xchg
div
inc
cmp
push
jnp
adc
jo
daa
dec
xor
adc
push
dec
maxps
es
and
inc
stc
nop
xlat
xchg
movs
mov
cmps
(bad)
inc
xor
dec
call
enter
or
sub
pop
push
pop
mov
push
xchg
aam
mov
dec
jecxz
enter
mov
mov
mov
cwde
fsubr
pop
adc
jle
add
and
inc
jmp
data16
nop
shl
xor
je
jl
(bad)
sti
mov
scas
dec
or
or
and
dec
pminsw
in
repnz
fadd
mov
mov
sub
pop
cmp
and
adc
push
add
retf
mov
jns
push
pop
les
adc
in
push
sub
sbb
je
add
sub
pop
sbb
mov
mov
addr16
(bad)
(bad)
pushf
fcomp
outs
ds
movs
(bad)
mov
jno
push
or
adc
imul
loop
jge
je
sub
std
mov
pop
jno
inc
loop
sar
sub
sub
cld
call
xlat
push
mov
xchg
retf
stos
mov
push
pop
pop
fsubr
loope
mov
inc
sub
mov
cwde
mov
pop
ja
inc
fisub
arpl
cmp
enter
cmp
cmp
dec
or
push
jbe
inc
sbb
xchg
repnz
les
pop
inc
mov
jle
xor
mov
adc
test
mov
ds
add
sbb
push
and
mov
mov
jnp
dec
mov
mov
jno
dec
add
sbb
xor
inc
xor
sub
in
outs
sbb
loope
in
push
sti
mov
call
das
arpl
push
or
cmp
sub
cmc
scas
fimul
das
js
pop
dec
pop
or
das
js
jae
dec
adc
dec
or
jb
ins
mov
mov
add
nop
call
pop
gs
(bad)
arpl
cmp
daa
push
xor
and
inc
or
pop
jae
imul
mov
mov
jne
push
dec
and
mov
imul
jg
ins
sub
inc
pop
dec
or
push
addr16
fnsave
pcmpeqw
inc
sub
mov
cmps
jecxz
cmp
push
mov
fisttp
shl
retf
add
call
sbb
inc
and
push
inc
pop
ins
adc
mov
adc
dec
pop
dec
adc
jge
push
mov
out
retf
pusha
sub
and
shl
mov
xor
adc
inc
adc
pop
lock
add
push
mov
aaa
fsub
jno
and
cmp
jbe
push
sbb
stos
stos
jns
pop
in
lds
js
add
xor
sub
cwde
shl
stc
test
sar
movs
movs
enter
pop
or
dec
or
jno
dec
movs
or
and
add
dec
push
and
stos
add
jg
in
(bad)
mov
repz
and
pop
cmp
jg
rcl
js
sub
pop
sbb
or
adc
das
push
dec
mov
push
adc
loopne
out
aam
xor
pop
add
and
push
in
fcomp
out
jbe
push
cmp
jb
and
xchg
jno
jo
xor
jns
enter
call
push
xchg
(bad)
stos
cli
xchg
jg
xchg
cwde
xchg
mov
add
adc
inc
in
scas
inc
cs
adc
sub
loopne
xor
or
jg
dec
cmp
and
and
adc
jbe
outs
cmp
pop
loop
fisubr
sub
mov
clc
mov
jno
and
nop
in
mov
aas
imul
mov
arpl
outs
das
out
pop
dec
add
das
and
pop
xor
es
out
push
add
inc
in
dec
jecxz
(bad)
cdq
out
popa
add
push
cmp
jb
push
or
addr16
pusha
sub
imul
imul
leave
jb
pop
frstor
push
cmp
mov
popf
out
mov
jecxz
int
jns
pop
jmp
or
and
cmc
fcom
xor
sbb
aad
outs
push
jl
fnstenv
jo
(bad)
arpl
mov
fidiv
sub
call
sbb
xor
dec
adc
stc
outs
or
loopne
add
loopne
sti
or
sbb
add
and
test
and
sub
jno
outs
cmp
imul
fsubr
minps
mov
mov
fisub
jne
popa
rcl
xor
dec
add
outs
out
sub
inc
adc
cli
sbb
add
ja
push
add
stos
mov
jmp
sub
pop
pop
and
push
push
jge
in
and
fbld
mov
and
fist
stos
aad
enter
enter
(bad)
lods
rcl
cdq
shr
out
xlat
(bad)
fcomp
fiadd
xor
and
jo
cmps
out
xchg
int
sbb
add
adc
or
and
(bad)
cdq
ret
addr16
adc
jb
dec
cmp
jp
int3
test
nop
fstp
push
adc
(bad)
jp
inc
xor
fs
or
inc
push
dec
or
mov
jb
and
jne
stc
arpl
sub
cld
cmps
fdiv
imul
fisub
inc
sbb
bound
or
xchg
jb
dec
cmp
js
(bad)
retf
cmps
lea
dec
in
jmp
push
into
xor
and
cmps
jecxz
jge
pop
jle
push
ins
cmp
jp
mov
(bad)
and
push
jecxz
ror
dec
or
shr
jbe
aaa
pop
imul
sbb
cmp
retf
cmps
cld
lods
rol
sti
xchg
fsub
pop
adc
add
push
ret
mov
sbb
ins
cmp
loopne
retf
ret
outs
es
push
pop
inc
(bad)
int
inc
aaa
pusha
sub
ja
jnp
inc
rcr
or
pop
jecxz
fist
push
adc
push
inc
add
jbe
jge
pusha
aaa
aam
shr
xchg
(bad)
xchg
stc
xchg
(bad)
popa
and
xor
and
push
ss
gs
mov
clc
xchg
retf
popf
(bad)
and
xor
inc
adc
pop
sub
cli
gs
adc
xor
pop
in
cmp
add
outs
dec
cmp
sbb
iret
adc
imul
and
imul
call
test
cmp
js
inc
aaa
js
(bad)
mul
adc
sar
lods
dec
nop
bound
addr16
xchg
outs
xor
iret
fistp
fs
lahf
ret
xchg
jmp
jmp
push
adc
push
outs
adc
xchg
(bad)
xchg
out
mov
cdq
enter
xlat
movs
outs
(bad)
mov
mov
sub
jbe
jb
(bad)
push
push
xor
and
add
pop
add
bound
fs
xor
jg
mov
outs
or
ja
bnd
inc
pop
sub
mov
jle
jb
pop
adc
pop
dec
in
mov
mov
daa
pusha
xor
or
jle
pushf
enter
out
iret
cmp
or
jle
into
mov
cdq
xchg
cmp
push
pop
ds
pop
imul
retf
pop
xchg
iret
sbb
push
sub
dec
adc
movs
jecxz
cmp
dec
or
mov
jge
dec
adc
imul
add
js
jae
and
frstor
dec
pop
push
cmp
pop
js
mov
sar
(bad)
mov
cmps
test
scas
fisub
pop
lock
push
push
mov
addr16
adc
std
mov
ins
or
pop
nop
aaa
inc
or
int
and
cli
popf
in
bound
mov
(bad)
scas
xlat
test
jb
push
fwait
mov
ret
xor
pop
dec
test
and
mov
mov
or
ss
imul
cmp
rol
movs
int3
sub
mov
scas
(bad)
mov
jecxz
xlat
xor
retf
outs
add
mov
test
jo
dec
pop
pop
in
mov
scas
stc
scas
xchg
xlat
lods
out
test
outs
adc
cdq
fistp
sbb
inc
out
cmp
push
xor
sub
adc
add
sbb
push
sbb
jae
(bad)
mov
add
xchg
into
pop
cdq
icebp
jno
mov
scas
mul
lods
cli
mov
mov
stc
scas
inc
add
or
arpl
sub
sub
movs
or
add
iret
stos
lds
mov
in
scas
jmp
jge
inc
sub
add
add
or
cwde
int
test
mov
inc
mov
stc
jnp
mov
ror
call
fistp
add
mov
pop
hlt
ins
cmp
rcr
xor
test
stos
stos
pop
or
push
mov
mov
or
xor
nop
std
lods
mov
in
lds
sub
sub
jae
pop
cmp
icebp
loop
pusha
or
mov
pop
inc
cmp
je
clc
xchg
or
sub
call
bound
add
pop
out
or
cdq
int
pop
les
movs
jp
xor
or
es
xlat
pop
aaa
jbe
inc
cmp
inc
sbb
mov
fs
in
ins
fcomp
repz
cs
pop
or
xor
out
mov
xchg
cmp
fwait
les
out
mov
pop
jecxz
div
sbb
pop
xor
div
mov
add
push
test
inc
sbb
cmp
data16
pop
xor
or
pop
out
pop
and
mov
imul
sub
jb
test
loop
movs
sub
mov
push
(bad)
cs
sub
or
or
stos
lock
pushf
out
xor
cmp
imul
inc
sub
jae
sub
jo
out
lock
out
push
pop
mov
nop
enter
mov
(bad)
mov
call
mov
cdq
cmps
xlat
xchg
imul
mov
mov
mov
push
out
lods
call
dec
or
xor
jl
inc
add
add
xchg
fs
or
inc
xchg
sub
ror
xchg
mov
and
into
rcl
out
cli
mov
int
inc
pop
sub
in
imul
mov
xor
test
enter
out
cmp
push
push
pop
xor
push
cmp
ss
loope
int
push
(bad)
sub
inc
ret
mov
xchg
stos
mov
aad
shl
mov
lods
xchg
xchg
lods
(bad)
mov
mov
xchg
lds
lahf
(bad)
mov
pop
adc
mov
nop
mov
outs
sbb
pop
xor
sub
and
push
sar
mov
movs
out
les
rol
(bad)
fistp
sahf
lods
stos
cmc
popf
ja
nop
(bad)
xor
out
fwait
int3
jbe
pusha
aas
dec
sbb
sbb
pop
fidiv
hlt
xor
inc
jecxz
movs
mov
pop
mov
out
and
pop
jle
pop
icebp
and
mov
jb
out
jecxz
enter
rcl
div
cmps
jl
pop
ins
cmp
sbb
daa
pop
(bad)
adc
mov
lea
jb
scas
xlat
popa
loop
jge
jle
mov
mov
and
sub
pop
jle
pop
pop
jg
lods
in
test
loopne
jmp
jnp
jns
inc
cmp
cs
js
mov
xchg
fdiv
jmp
call
js
dec
add
and
adc
jns
xor
dec
add
and
repz
in
aad
test
mov
call
ja
jb
leave
xchg
ret
dec
ds
jb
dec
aaa
outs
cmp
xor
pop
or
iret
mov
xlat
mov
stc
xchg
fsub
fwait
outs
ds
sbb
nop
in
into
(bad)
retf
xchg
cmps
neg
inc
xor
fimul
inc
add
jg
pop
sub
dec
std
cwde
fdivr
push
add
repnz
mov
mov
fimul
sahf
lods
in
out
cmps
repz
mov
sbb
mov
sbb
movs
(bad)
xchg
shl
push
sbb
push
push
add
mov
es
inc
adc
cmc
push
adc
call
mov
dec
cwde
jmp
sub
pop
dec
push
sbb
sbb
and
shl
and
jmp
ret
dec
call
add
inc
lock
mov
inc
sbb
ret
xchg
clc
cmps
leave
dec
pop
mov
addr16
lds
test
push
push
inc
fbld
jg
fisubr
pop
cwde
xchg
ret
test
adc
jecxz
jo
dec
lea
cdq
inc
jmp
add
dec
cli
xchg
icebp
sbb
je
scas
idiv
jle
push
je
push
ret
mov
pushf
push
mov
imul
lock
add
inc
adc
scas
rol
fcom
enter
cmps
(bad)
add
push
push
dec
stos
std
mov
pop
fsubr
retf
addr16
and
shl
inc
or
loope
aad
jp
cmp
cmc
fnstenv
push
add
pop
jae
dec
or
movs
(bad)
lods
jmp
sub
jnp
ret
xchg
add
jb
dec
iret
mov
out
leave
call
das
outs
pop
(bad)
nop
loop
fnsave
dec
adc
mov
mov
popa
sub
jmp
add
jp
aam
xor
push
pop
ins
sbb
jnp
das
pop
adc
and
push
add
or
call
cmp
adc
pop
sti
scas
in
test
shl
jne
cmp
rcl
es
xchg
xchg
jl
(bad)
cld
test
popa
lods
fs
bound
jne
pop
aad
repz
or
fwait
lock
sbb
cmp
mov
inc
add
jmp
cmp
les
mov
dec
mov
xor
data16
inc
stos
outs
jge
mov
sbb
xchg
sbb
mov
mov
pop
lahf
add
xchg
int3
ins
push
out
outs
mov
mov
std
xchg
lods
xchg
jns
adc
jle
add
mov
je
jbe
rol
pushf
pushf
out
fs
rcl
fadd
lock
loop
clc
and
jbe
mul
into
cmp
das
sub
cmp
dec
cmp
shr
inc
idiv
and
test
out
mov
sub
mov
add
out
inc
sub
packssdw
mov
sbb
dec
fwait
pushf
out
mov
add
scas
jmp
mov
jbe
push
sbb
stos
lock
or
aad
ss
pop
cmp
les
sar
out
sub
or
jns
inc
(bad)
jp
or
sbb
out
xchg
popf
pop
shr
sbb
dec
mov
popa
neg
es
retf
jge
adc
aas
pop
movs
popa
scas
bound
inc
rcr
jp
loope
lahf
je
stos
fmul
push
inc
add
mov
pop
cld
mov
lea
and
shr
xchg
dec
adc
lods
jmp
dec
retf
sub
pop
or
xchg
mov
adc
retf
call
adc
mov
fidivr
rol
jp
add
int3
cs
(bad)
pop
adc
in
neg
push
sar
movs
ins
pop
dec
fidivr
ins
dec
mov
ins
mov
dec
stc
pop
lahf
mul
pop
add
movs
inc
sub
push
jmp
inc
test
or
inc
into
mov
ins
(bad)
pop
adc
sub
lock
inc
cld
inc
or
sahf
into
lahf
out
scas
jle
push
sysexit
hlt
pushf
jmp
pop
loope
das
pcmpeqw
push
test
fcom
rcr
iret
push
repnz
xchg
das
sbb
or
mov
sbb
enter
push
inc
shl
sbb
dec
cmp
push
pop
sbb
mov
push
add
ins
fisttp
or
fst
push
mov
jge
push
sbb
ss
aam
jl
dec
or
ins
sub
dec
add
pop
retf
outs
into
and
lods
call
inc
add
aad
pcmpgtd
push
mov
cmp
or
cmp
ret
push
push
adc
xchg
mov
test
stc
push
lahf
inc
test
mov
leave
xor
outs
stos
add
mov
cs
lods
inc
inc
mov
xor
movs
ja
jl
mov
mov
push
and
mov
in
ja
pop
mov
cmp
int3
je
adc
rol
je
test
sbb
push
cmp
in
sub
lods
fwait
js
xor
pusha
mov
fiadd
xchg
xchg
out
inc
loope
in
and
mov
das
sti
mov
add
sub
sub
sbb
xchg
pop
ins
ds
lock
int3
jbe
add
sbb
ins
mov
fcomp
aad
pop
sub
lods
jo
sbb
pop
rol
popa
mov
pop
pushf
retf
adc
xchg
xchg
ja
adc
mov
or
mov
adc
test
and
cmp
test
mov
mov
clc
test
out
and
test
dec
xchg
xchg
arpl
push
mov
mov
dec
pop
aam
imul
pop
rcl
ret
or
aaa
fdiv
push
cld
xor
shl
into
add
mov
inc
xchg
push
aas
mov
adc
fdivr
and
ss
test
mov
adc
iret
and
stos
fwait
retf
mov
popf
inc
xor
and
adc
call
sar
add
call
hlt
adc
and
dec
push
fbld
and
adc
shl
adc
dec
push
mov
xchg
(bad)
mov
in
das
jne
int
cwde
xchg
push
push
das
adc
push
ret
or
bound
sbb
xor
cmps
push
push
xor
sub
jbe
jne
inc
xchg
fidiv
outs
mov
xor
mov
pop
inc
imul
cmp
hlt
or
dec
and
dec
push
sub
inc
pop
test
(bad)
mov
mov
mov
push
mov
rcl
push
pop
test
icebp
in
cmp
(bad)
ja
gs
popf
jmp
ins
mov
or
dec
add
dec
mov
inc
sub
aaa
inc
pop
sti
mov
cmps
push
test
mov
jbe
ror
bnd
pop
jno
jne
mov
jge
ret
cdq
repnz
and
xlat
xchg
jmp
lods
iret
sahf
aas
adc
cmp
ins
jecxz
adc
mov
xor
pop
cmp
outs
aas
dec
adc
in
xor
inc
adc
xchg
(bad)
ror
out
fimul
jg
mov
inc
and
add
loopne
push
adc
xchg
mov
pop
loop
sbb
push
aad
ss
jp
pop
xchg
shr
ret
sar
push
sub
ret
push
xchg
outs
cs
popa
adc
sub
repnz
add
cld
mov
fld
push
mov
jg
pop
fwait
mov
ja
mov
or
fistp
sub
inc
jmp
jecxz
imul
cmc
sub
shr
jnp
shl
popf
dec
cmovae
push
cmp
mov
jmp
gs
mov
popf
popa
cmove
jo
xchg
hlt
fnsave
ss
lds
jno
icebp
mov
mov
jae
jg
sub
je
pop
mov
jmp
test
adc
ret
or
out
xchg
jmp
rcl
pusha
aaa
int
aam
test
lock
into
in
inc
adc
dec
add
rol
or
adc
mov
and
test
push
pop
pop
enter
or
adc
es
cmp
dec
mov
xchg
dec
mov
dec
and
retf
mov
jnp
xor
fisttp
in
inc
add
xor
cdq
leave
adc
arpl
imul
xor
shl
stc
push
add
sbb
push
mov
pushf
push
pop
je
daa
sbb
fst
sub
dec
jecxz
(bad)
pop
mov
cwde
sub
fs
add
fbld
inc
xchg
mov
xchg
bound
shl
adc
push
mov
daa
std
add
jo
jb
pop
rol
mov
add
in
mov
dec
mov
fs
sub
adc
repz
pop
lea
(bad)
mov
xchg
and
add
sub
sti
mov
push
aaa
pop
sti
and
out
stos
mov
jbe
push
ss
cmps
push
maxps
sub
cmp
mov
jno
add
mov
ret
mov
fisub
add
or
xor
mov
mov
mov
out
fs
inc
jecxz
mov
push
add
mov
lods
fdivr
pop
cmp
rcr
iret
mov
jae
pop
(bad)
jp
push
mov
fwait
int3
fwait
mov
lock
rcl
aam
lds
cmp
add
xchg
jo
aas
sbb
sbb
aam
mov
sahf
jmp
push
cmp
dec
add
add
jnp
pop
mov
xchg
loop
mov
popf
sbb
cmp
sti
scas
movs
in
dec
xor
out
test
ins
xor
rcl
mov
pop
and
fwait
retf
mov
jmp
mov
(bad)
call
push
fstp
dec
push
push
clc
mov
or
push
pop
repz
push
or
dec
mov
sbb
inc
popf
dec
or
mov
xchg
inc
or
mov
outs
or
jnp
lahf
neg
push
and
cmp
jge
cmp
pop
jecxz
push
dec
sbb
jle
xor
ret
(bad)
mov
int
and
xor
int
enter
fisttp
fs
push
inc
hlt
pushf
jmp
mov
inc
mov
pop
jmp
in
ror
in
test
inc
idiv
xor
adc
push
sti
xor
xlat
xchg
cmps
ret
jl
mov
xchg
mov
push
add
adc
pop
pop
sbb
pop
mov
pushf
fisubr
mov
sbb
stc
icebp
pop
pcmpgtb
je
or
and
int3
fist
jbe
cmp
dec
inc
mov
mov
call
inc
fcomp
mov
in
xchg
jmp
pop
or
cmp
fcom
(bad)
les
call
sub
add
imul
in
sub
add
repnz
sbb
in
icebp
fs
mov
(bad)
fbstp
test
mov
inc
fidivr
or
pop
add
in
fstp
in
test
push
test
sbb
fld
(bad)
(bad)
xchg
fisub
pop
mov
addr16
adc
push
xchg
les
in
push
cs
stos
cwde
jnp
mov
pop
sub
fnstsw
nop
shl
jge
ss
mov
into
cmp
retf
scas
call
and
aas
jle
lods
ins
mov
sub
fsubr
add
or
aam
mov
test
sub
movs
call
fnstenv
inc
pop
(bad)
jae
adc
xor
clc
popf
mov
lahf
fidiv
or
xchg
adc
ja
jne
fisubr
aas
cmps
aam
mul
sbb
cmp
neg
dec
aas
jbe
movs
lea
and
(bad)
mov
dec
cmp
into
dec
nop
cmps
inc
sub
jl
xor
fnstcw
push
push
mov
jecxz
stos
(bad)
retf
xchg
dec
cmps
xchg
pop
xchg
cmps
je
arpl
or
and
into
push
xchg
pusha
movs
fild
sub
mov
sbb
push
(bad)
xor
mov
pop
test
inc
xchg
pop
(bad)
iret
push
xchg
fcom
jo
enter
dec
mov
cmc
xchg
sbb
add
xor
cdq
jecxz
jle
jecxz
mov
out
mov
sbb
xchg
fdivr
inc
test
cmps
jbe
cmp
rol
push
adc
jge
jg
jmp
ret
or
jp
pop
pusha
call
and
imul
or
mov
mov
pop
mov
mov
jg
retf
loope
ins
test
mov
sub
movs
mov
shl
stc
and
fst
cmp
sbb
hlt
adc
pushf
enter
inc
adc
add
jmp
ficomp
mov
jmp
sub
out
cmc
out
mov
sahf
outs
sbb
lea
xchg
(bad)
lods
pop
push
cmp
cld
xor
retf
jo
cmp
pushf
test
push
dec
xchg
in
ja
cmp
mov
mov
fwait
ret
out
imul
or
sbb
dec
add
xor
rcl
mov
and
mov
adc
loop
ret
push
add
neg
ret
or
lds
shl
fbld
hlt
movs
iret
cmp
aas
dec
add
imul
and
(bad)
mov
or
out
xor
inc
sub
mov
fld
pop
mov
stos
inc
push
or
lds
jnp
mov
pop
cs
mov
pop
push
test
xchg
pop
push
loope
jle
push
mov
addr16
(bad)
mov
pop
sub
sub
outs
mov
pavgb
jle
mov
jecxz
test
hlt
sub
jp
cmp
out
mov
add
out
sahf
fcomip
call
(bad)
arpl
aas
jmp
es
movs
mov
dec
sbb
jge
repnz
dec
movs
xlat
sbb
jmp
retf
ins
fisttp
(bad)
cmp
std
mov
cmps
dec
add
loope
adc
mov
movs
push
in
lock
sub
shl
pop
pusha
mov
(bad)
jge
and
mov
ret
es
ins
or
mov
arpl
sub
sbb
ret
dec
xchg
fisubr
inc
and
jo
enter
inc
xchg
or
cmps
frstor
enter
mov
and
mov
ss
int3
sbb
or
loope
cmp
mov
push
pop
enter
sbb
test
adc
mov
repnz
sub
outs
mov
push
fadd
pop
xchg
loopne
sub
ja
add
int
retf
adc
mov
test
inc
xor
mov
sbb
(bad)
out
cmp
scas
movs
data16
aam
fdivr
lods
inc
push
mov
xchg
sub
sbb
mov
pop
xor
imul
push
push
shl
inc
mov
mov
and
mov
cmp
sbb
call
xchg
mov
inc
loop
paddw
jbe
and
sti
sub
jb
inc
mov
push
jbe
push
add
aad
add
mov
aam
test
cmps
jge
push
sub
lods
sub
fnsave
mov
pop
aaa
(bad)
push
retf
loope
mov
or
or
mov
sbb
sbb
loope
xor
test
cwde
jg
icebp
cmp
push
pop
cmp
fistp
ins
and
int
lock
push
pop
xor
stos
jo
sar
into
popa
cmps
fld
leave
pop
bound
jmp
ins
and
nop
jecxz
inc
loopne
in
jmp
cld
add
shr
das
push
lgs
out
sub
pop
retf
or
arpl
lea
call
sar
cmp
shr
or
sbb
sbb
add
retf
test
mov
enter
inc
xchg
shl
push
push
push
fnsave
pop
mov
stc
xor
fcomp
repz
add
mov
xchg
pop
push
cmp
xchg
inc
add
lods
ins
mov
sbb
push
shl
push
in
(bad)
or
(bad)
fnsave
and
push
out
pop
pushf
stc
test
inc
fidiv
cmc
and
stos
(bad)
push
mov
retf
inc
fstp
test
retf
aas
aaa
sbb
adc
xchg
fnstcw
inc
cmps
dec
mov
dec
lahf
mov
(bad)
retf
repz
xchg
inc
pop
outs
jo
or
fcom
push
dec
push
add
test
jp
jb
enter
mov
xlat
or
scas
stos
outs
mov
(bad)
or
or
adc
jae
aam
daa
dec
enter
mov
into
jbe
(bad)
sahf
and
rol
jbe
idiv
push
int3
mov
adc
adc
cmc
or
repnz
xor
enter
lock
or
jbe
sbb
push
je
aam
mov
mov
leave
adc
add
add
mov
cmp
shl
and
(bad)
sub
std
ss
add
jnp
cmp
movs
je
push
loop
jmp
jle
into
xchg
pop
cld
inc
test
shl
sbb
mov
xchg
rcr
cmp
test
ja
shl
fsub
daa
adc
xchg
or
lock
iret
cdq
fisttp
cmp
enter
in
repnz
push
dec
xchg
(bad)
lods
pop
push
cmp
es
fnstsw
inc
and
pop
mov
mov
mov
mov
and
xchg
cwde
pop
jo
aam
pop
push
adc
cli
cmp
fbld
and
or
fcmovb
sbb
mov
inc
xchg
sbb
(bad)
in
mov
repnz
out
or
push
xor
cmp
hlt
mov
and
sbb
or
and
lods
mov
sbb
or
movs
frstor
cs
mov
add
or
adc
mov
or
icebp
sub
das
inc
and
(bad)
es
daa
pop
add
icebp
and
(bad)
pushf
mov
mov
pop
mov
dec
add
es
arpl
or
mov
sbb
push
shl
jns
jmp
in
imul
xchg
mov
rol
ss
push
loop
ja
pop
mov
lods
xchg
push
int3
or
mov
pushf
in
lods
jle
aas
in
iret
cmps
les
stc
sbb
cmp
xchg
jnp
xchg
in
mov
or
push
into
lea
lea
xor
sub
aam
pusha
cmp
adc
mov
pushf
mov
shl
add
fs
lods
mov
std
inc
add
hlt
mov
cwde
and
cli
push
mov
sbb
in
add
and
stc
push
xchg
test
jae
das
bswap
pop
mov
scas
fstp
scas
jecxz
mov
fisttp
dec
xchg
lds
mov
mov
jecxz
push
sbb
hlt
and
es
push
add
pusha
stos
jl
jbe
push
xor
scas
(bad)
xchg
retf
inc
dec
nop
out
mov
punpckhdq
pop
in
inc
stos
aad
ja
inc
repz
test
cmp
push
jmp
ins
xor
fs
xlat
xchg
ins
sub
sub
cli
lock
adc
jecxz
adc
out
mov
dec
into
(bad)
xor
add
fcom
ret
les
call
dec
stos
fisttp
adc
jbe
das
fsubp
xchg
fdivp
mov
test
int
stc
cwde
lods
repnz
add
lods
in
mov
mov
(bad)
pop
cmp
in
mov
stos
data16
jecxz
fstp
add
mov
neg
push
rol
outs
ds
stos
ret
lds
xor
cmp
movs
loop
fdiv
push
leave
adc
jo
dec
sbb
push
push
and
push
hlt
push
mov
addr16
mov
(bad)
add
sub
sub
out
ud0
or
xor
and
pop
xchg
xor
in
cmps
xchg
xchg
xchg
data16
pop
in
and
ret
pop
out
sub
add
repz
mov
push
shr
in
test
mov
pop
ret
xor
pop
fnstcw
in
inc
fldcw
push
stos
lea
jg
lea
js
add
push
mov
pop
sub
dec
fmul
lea
ins
mov
pushf
mov
dec
test
xchg
and
popf
jg
jle
mov
push
mov
rcr
arpl
cs
repz
mov
test
jno
aas
in
cld
call
outs
lea
ret
cmp
xchg
xchg
or
mov
push
stos
ins
and
out
mov
retf
or
and
pop
pop
ss
sbb
jecxz
std
test
sub
repnz
mov
fsub
xor
sahf
jnp
es
rol
repz
or
lods
(bad)
dec
cmps
xchg
data16
std
mov
mov
shl
clc
pop
test
or
push
mov
ins
mov
sbb
aas
jnp
inc
aam
out
ja
mov
test
xor
xchg
mov
les
jae
pop
cdq
nop
popa
mov
mov
mov
add
sub
push
mov
pusha
mov
arpl
aaa
in
cmp
cli
jg
sub
add
push
retf
daa
jmp
lods
cdq
cld
ins
mov
jno
ds
es
and
out
cmp
or
mov
xchg
mov
adc
jg
pop
mov
pop
cmp
iret
add
call
popa
mov
sahf
jle
fld
mov
iret
cs
push
int
xlat
push
fdivr
inc
mov
rcr
jo
mov
(bad)
sbb
sbb
xor
jl
sub
in
pop
mov
out
in
push
sbb
add
dec
xlat
pop
std
pop
mov
inc
(bad)
fs
jg
push
mov
push
pop
pop
lds
aas
(bad)
push
aam
call
inc
test
cmp
(bad)
leave
sub
sub
paddw
mov
ficom
mov
mov
inc
mov
jns
inc
mov
lods
jp
(bad)
rol
clc
sub
cmp
dec
cmp
movs
dec
or
(bad)
adc
add
dec
ficom
outs
das
sbb
add
ins
stos
js
xchg
ins
sub
in
push
shr
into
add
adc
pop
into
cmp
jmp
adc
(bad)
cmp
pop
scas
fisttp
cmps
inc
mov
cdq
inc
(bad)
or
cmc
sub
sub
add
pop
int
clc
pop
adc
xor
xchg
xchg
push
loope
leave
ss
jnp
pop
sub
xchg
or
pop
mov
jl
push
mov
and
or
in
pop
xchg
dec
sbb
imul
cmp
pop
mov
es
xchg
xchg
jo
mov
outs
test
jge
xchg
ficom
dec
sbb
shl
adc
leave
sub
sbb
cmp
inc
mov
inc
fidiv
(bad)
lahf
pushf
inc
mov
scas
popa
mov
fcomp
lahf
xchg
(bad)
fistp
fstp
jno
add
xor
dec
cmp
jnp
or
or
test
loopne
mov
dec
test
ds
push
add
stc
cs
adc
xor
push
adc
and
outs
sti
cmp
add
and
adc
enter
cmp
iret
ss
js
das
or
pop
lods
bound
xchg
inc
push
push
pop
std
cmp
aaa
clc
lods
arpl
adc
shl
and
out
and
out
push
stos
add
test
mov
mov
push
shl
dec
call
sahf
xchg
pusha
mov
or
sahf
mov
sbb
ds
adc
dec
lods
mov
cwde
je
mov
fild
pop
or
mov
in
pusha
xchg
outs
cmps
jp
sub
pop
mov
push
stc
pop
out
pop
loope
mov
nop
je
mov
mov
xchg
xchg
sub
je
pop
or
shl
ja
xchg
outs
(bad)
pop
stos
inc
mov
retf
push
cmp
xchg
xchg
popa
fistp
sahf
fwait
pusha
in
lea
and
int3
push
scas
js
mov
ins
mov
(bad)
ficom
mov
scas
ins
sbb
sub
sbb
pop
rcr
or
pusha
call
inc
mov
fcomp
mov
push
ret
dec
lea
push
std
cmp
leave
pop
jmp
into
es
mov
jne
and
dec
shr
into
or
push
mov
rcr
jp
xchg
push
inc
test
sub
cmp
leave
cmp
es
lea
jnp
adc
test
sar
pop
imul
or
call
lea
jns
dec
scas
sahf
shr
pop
cmps
inc
leave
push
clc
sub
jl
push
shl
je
test
inc
rcl
xchg
mov
mov
ret
dec
adc
add
mov
xchg
leave
pmaxsw
add
and
pop
fnstcw
pop
xchg
fimul
dec
loop
jmp
adc
adc
push
scas
arpl
mov
jmp
(bad)
push
test
mov
push
sar
pop
div
pop
icebp
pop
aaa
out
int3
sub
(bad)
cmp
sbb
imul
pop
in
jbe
ins
fistp
mov
stos
lahf
mov
push
adc
add
ror
adc
push
mov
fst
in
dec
iret
sub
xchg
jnp
jno
push
mov
cmp
mov
inc
fidiv
neg
jmp
lock
test
fcomp
add
add
cmp
xchg
imul
out
in
mov
shr
pop
icebp
push
test
test
mov
or
cmc
add
cld
pop
mov
mov
inc
cmps
scas
inc
mov
jecxz
cmc
cmp
mov
fldenv
mul
push
in
jns
push
and
jno
xor
aas
call
retf
(bad)
mov
stos
inc
mov
cmp
jmp
retf
xor
out
add
(bad)
jbe
xor
sub
add
inc
sub
test
scas
popf
mov
mov
xchg
call
imul
das
jmp
in
or
cmp
add
jmp
scas
ins
test
fstp
ins
rcr
bound
or
cmp
aam
mov
arpl
pop
fdiv
cmc
sub
(bad)
sub
mul
cmp
pop
xlat
(bad)
push
in
xchg
call
and
std
push
(bad)
cmp
jp
sub
arpl
pop
movs
arpl
cmp
dec
aad
je
pop
repnz
stos
lea
push
rcl
jp
pop
xchg
xor
push
(bad)
outs
test
xlat
xor
dec
lods
cwde
push
xchg
sub
in
pop
mov
test
jp
xchg
jl
xchg
ja
gs
adc
xor
nop
imul
cli
pop
(bad)
jecxz
add
inc
cmc
xor
push
lods
xchg
jne
jmp
sbb
sub
leave
sub
and
loopne
(bad)
arpl
and
or
xor
adc
ds
ss
pop
jmp
mov
fnstenv
sbb
out
dec
xchg
dec
sbb
test
adc
xor
inc
ror
dec
sbb
ins
(bad)
push
mov
arpl
cmp
xor
in
test
inc
std
dec
cmp
mov
push
sbb
aas
ss
enter
xor
sub
dec
lods
call
repnz
cmp
pop
cld
pop
aad
cmp
sar
out
or
mov
dec
mov
call
push
in
pop
adc
or
pop
leave
aas
loopne
scas
mov
mov
(bad)
inc
fist
call
mov
jno
adc
into
pop
les
or
hlt
sub
pop
cmps
xchg
jo
cwde
jg
jg
add
adc
or
clc
cmp
ss
int
nop
mov
arpl
enter
aaa
pop
or
ds
sub
pop
cmps
addr16
rcr
push
out
enter
or
mov
pop
fnstsw
neg
aam
push
mul
push
xchg
out
inc
fstp
jl
aas
loop
cli
xor
sub
push
int3
jnp
je
pop
mov
aaa
pop
cs
jbe
ss
mov
sahf
mov
add
add
inc
rol
xchg
imul
stos
iret
sub
out
shl
loopne
lock
ja
and
xor
and
inc
retf
or
les
enter
les
jmp
pop
shl
std
xor
es
aaa
sbb
ds
aad
aad
lods
in
pop
mov
pop
adc
cs
push
mov
imul
cmp
push
mov
iret
dec
(bad)
xor
cmps
sahf
popf
jno
test
lahf
mov
mov
xchg
push
push
dec
test
inc
test
fwait
(bad)
jle
(bad)
in
das
in
pop
nop
xchg
inc
cmps
push
and
dec
das
repz
push
push
ret
inc
scas
js
sub
push
ins
xchg
push
test
shl
imul
repnz
movs
xchg
dec
lods
xchg
jo
and
add
mov
rcr
movs
gs
or
pop
mov
or
mov
mov
inc
rcl
and
nop
imul
clc
push
aad
call
jge
test
mov
ss
stos
jge
push
cmps
fwait
popf
xchg
outs
xchg
nop
jbe
jle
call
(bad)
and
cmc
push
mov
inc
(bad)
push
mov
xchg
nop
imul
pop
mov
(bad)
lea
aaa
pop
adc
or
push
mov
dec
mov
adc
cmc
test
ins
mov
jg
dec
(bad)
sub
fcomp
dec
xor
js
lahf
dec
mov
mov
sbb
xor
ficom
xor
out
ds
int3
push
out
std
xor
cmp
mov
iret
push
jmp
and
ins
shl
mov
xor
or
cmp
repnz
shr
loope
jge
inc
scas
imul
inc
sbb
(bad)
das
adc
push
iret
xor
lds
daa
sbb
test
test
or
xchg
(bad)
xchg
cmp
call
in
test
add
das
and
add
aaa
int
and
not
push
and
sbb
loop
or
fistp
outs
mov
and
div
sbb
inc
ror
adc
sti
pop
sub
inc
mov
mov
rol
call
xchg
mov
jl
dec
enter
repz
test
sub
sub
cmp
ss
adc
push
or
push
add
add
inc
scas
outs
mov
mov
mov
adc
dec
xlat
xor
sar
out
add
add
or
movs
mov
mov
dec
xchg
mov
cmp
out
cmps
nop
mov
stc
push
mov
retf
xor
sti
cmp
dec
and
or
mov
imul
cmp
mov
pushf
dec
scas
cmps
inc
pop
dec
stc
cmp
lds
js
lahf
bound
xor
dec
ret
jmp
jecxz
mov
jp
xor
hlt
inc
mov
mov
push
add
cmp
xchg
cwde
fisttp
mov
dec
les
xchg
jo
or
push
fild
jmp
leave
cmp
cdq
test
popa
test
retf
xor
sub
and
or
dec
sar
or
dec
fidivr
cli
dec
test
aad
add
imul
push
ficom
xchg
fwait
ins
fcomp
pop
scas
data16
das
out
and
clc
aaa
pop
int3
push
stos
ja
popa
retf
add
out
pop
(bad)
ins
rcl
mov
jb
popa
enter
call
and
and
or
jge
add
rol
xchg
loopne
fidivr
repz
aam
shr
fnstsw
jmp
cmp
loope
loope
push
(bad)
pop
into
sub
cmp
dec
aam
ja
xchg
mov
fist
push
mov
data16
(bad)
or
call
xchg
xchg
retw
xor
mov
mov
adc
add
pop
cmps
rcl
or
push
into
cmp
loope
shl
jl
and
int3
cmp
sbb
dec
leave
pop
mov
cdq
add
push
shl
or
repz
pop
sti
push
mov
sti
and
and
pop
xor
pop
aam
adc
xor
sbb
inc
scas
lahf
popf
mov
cmp
jle
ds
or
adc
adc
sub
and
pop
stos
xchg
lds
std
pop
fistp
loop
icebp
push
into
xor
test
sub
rol
aaa
adc
inc
mov
pop
mov
ss
jmp
push
out
pop
fisubr
leave
push
dec
rcl
popf
jae
push
mov
jo
and
neg
add
fdivr
sbb
jl
push
les
pop
idiv
loopne
into
mov
jbe
stos
addr16
scas
xchg
mov
lea
inc
scas
pushf
inc
cmps
xchg
je
cld
jg
xchg
jb
jne
add
cmp
xor
pop
shr
icebp
push
mov
cli
cmp
leave
inc
(bad)
shl
sub
iret
push
movs
imul
jb
add
xchg
popa
adc
cmp
inc
mov
push
mov
cmps
test
mov
inc
pop
es
or
out
lahf
fs
cs
mov
xchg
jbe
cmp
push
dec
mov
in
cmp
int3
pop
lea
push
mov
jne
fwait
lea
or
or
or
cmp
adc
fisttp
jmp
mov
mov
mov
jae
push
test
mov
dec
mov
mov
sbb
push
ret
sub
dec
shl
inc
mov
mov
and
inc
ficomp
lahf
imul
push
test
data16
sub
repnz
adc
sahf
xchg
bound
xchg
nop
outs
mov
cmps
inc
adc
loope
shl
push
mov
jnp
cmp
push
or
sub
and
iret
jns
call
test
jbe
xor
ror
push
int3
cmp
sbb
push
add
mov
jmp
pop
mov
sub
and
push
sti
and
into
cmp
dec
mov
mov
dec
mov
je
sub
daa
push
jecxz
push
hlt
push
(bad)
cmp
mov
mov
xchg
jb
and
sub
mov
cld
and
and
push
movs
xchg
jp
fcomp
and
add
lahf
inc
movs
fs
sub
dec
mov
adc
inc
movs
xchg
cmps
pushf
jnp
push
lods
lahf
pusha
scas
xchg
xchg
imul
rol
into
and
not
push
(bad)
and
inc
cmp
ror
sub
push
mov
sbb
pop
movs
outs
sti
add
push
mov
and
shl
jmp
sub
sahf
(bad)
dec
int3
push
ss
push
mov
int3
pop
lods
(bad)
jmp
loop
push
icebp
es
aaa
jae
pop
mov
popf
mov
pop
retf
and
stc
pop
clc
pop
int
lock
and
pop
movs
mov
(bad)
(bad)
xor
mov
ret
mov
cdq
mov
data16
pop
sub
ja
outs
stos
push
psubb
les
cwde
(bad)
les
and
inc
mov
dec
fild
pop
xlat
and
jbe
cdq
dec
int3
pop
lods
dec
push
jmp
fdiv
or
out
out
xchg
out
stos
mov
mov
ja
dec
(bad)
ss
push
mov
fmul
dec
scas
js
add
pop
lods
sahf
xchg
data16
xchg
test
mov
stos
jl
ss
pop
(bad)
adc
push
mov
cli
pop
aam
test
push
mov
mov
sbb
in
adc
adc
push
(bad)
cmp
and
xor
add
sti
xor
xor
xor
in
sub
cmp
loop
call
cmp
push
call
jns
dec
int3
adc
and
stos
inc
mov
xchg
inc
int
cld
pop
sub
pop
mov
dec
mov
movs
xchg
xchg
addr16
add
cdq
popa
mov
out
sbb
das
loope
clc
sub
sbb
das
lock
xlat
xor
add
rol
add
sub
cld
or
cmp
dec
mov
ins
mov
cmp
pop
nop
pushf
mov
xchg
inc
mov
cmp
cmp
retf
mul
pop
push
movs
test
xor
out
loope
mov
int
push
inc
movs
xchg
inc
scas
xchg
xchg
jbe
and
das
sar
mov
ss
dec
iret
mov
push
popa
xlat
ss
inc
push
xor
repnz
hlt
dec
mov
jle
jecxz
(bad)
xor
sub
push
mov
jmp
mov
dec
movs
xchg
mov
call
add
adc
jmp
cmps
mov
inc
adc
in
movs
jne
sub
cmc
and
xor
pop
cmps
js
aas
push
push
ret
dec
and
cmc
aaa
sbb
cli
sub
jmp
cs
cmp
sub
mov
cmc
and
jne
xor
hlt
push
stos
inc
xchg
jns
fidivr
in
aas
jbe
gs
inc
mov
je
xchg
rcl
inc
test
push
inc
aam
add
shr
xor
sbb
adc
psubsw
cwde
lea
dec
fist
jae
and
push
enter
aaa
ret
add
push
test
push
icebp
cmp
jp
dec
or
cmp
push
loopne
mov
mov
test
push
enter
adc
pop
and
push
or
push
stos
outs
stos
cwde
imul
pushf
jae
repz
cmps
inc
mov
xlat
sub
sbb
and
and
dec
les
popf
dec
mov
sub
cmp
add
pop
mov
pusha
stos
xchg
lock
int
hlt
paddsb
xor
and
pop
or
or
shr
cmp
sub
or
pop
mov
jb
aas
push
push
shl
push
mov
lods
sahf
inc
fisttp
add
pop
(bad)
(bad)
pop
(bad)
push
aad
idiv
jae
arpl
sub
push
xor
in
xor
or
pop
nop
inc
xor
ds
jae
popa
mov
aaa
enter
ins
stos
push
test
mov
inc
lock
inc
fadd
push
ret
dec
mov
movs
arpl
jnp
ss
fdiv
adc
and
xor
xor
out
das
push
sti
and
ins
mov
nop
xchg
retf
pop
(bad)
adc
xor
pop
cli
and
retf
xor
sbb
inc
shr
adc
lock
mul
int3
ds
xor
in
cmp
dec
icebp
or
stos
mov
aaa
pop
repnz
shr
sbb
ss
and
lahf
test
das
dec
sti
jae
add
sbb
stos
js
push
lods
mov
fnsave
jmp
mov
(bad)
je
loope
lds
outs
shl
jnp
add
sar
cs
mov
js
popa
mov
or
jmp
(bad)
jp
add
es
cmc
pop
mov
cmps
xchg
fistp
xor
jp
pop
mov
fidiv
pop
pop
xor
pop
repnz
push
sub
pop
sbb
pop
cmp
ror
cmp
repz
scas
jne
dec
mov
ror
xor
or
loope
mov
xchg
popf
jp
test
or
or
sbb
sbb
daa
adc
push
mov
ins
mov
pushf
pusha
aam
mov
std
dec
mov
sub
ss
mov
les
push
retf
pop
cli
push
and
out
push
mov
mov
xchg
jo
mov
sub
pop
mov
add
dec
mov
shl
mov
pusha
lods
sahf
dec
(bad)
jl
ins
mov
or
jno
pushf
xchg
jne
and
xor
ja
inc
mov
(bad)
sbb
movs
pusha
ret
lea
push
inc
lods
cdq
jnp
je
lea
(bad)
js
out
or
and
cmc
and
dec
xlat
push
add
out
sbb
rcl
popf
xchg
arpl
sub
xor
push
mov
ds
push
shr
in
cli
pushf
lahf
dec
lods
xchg
mov
push
ds
enter
ret
and
jp
and
repnz
ins
std
mov
xchg
dec
and
push
pop
push
adc
xchg
(bad)
sub
(bad)
mov
push
lds
test
push
push
ja
outs
cmp
and
test
adc
mov
fidivr
(bad)
int
out
js
std
test
adc
add
popa
sbb
nop
loop
ins
sub
daa
mov
and
cmps
data16
sbb
mov
out
mov
icebp
cwde
retf
pop
push
test
rol
dec
sbb
cmp
aad
xor
or
or
pop
pop
jmp
in
push
inc
add
aam
xchg
std
sahf
jge
dec
sbb
dec
movaps
dec
imul
mov
adc
fisub
icebp
mov
movs
jb
outs
pop
push
push
adc
inc
dec
loopne
rol
hlt
mov
mov
jne
pusha
cmp
fs
rol
inc
xor
inc
jo
sbb
add
push
sbb
pop
xchg
(bad)
mov
mov
movs
(bad)
mov
leave
mov
jle
dec
and
or
mov
xchg
in
lods
push
sbb
addr16
call
fdivr
(bad)
retf
jl
adc
inc
dec
or
jae
inc
add
sub
cmp
lods
leave
push
cmp
dec
push
out
test
add
dec
es
add
mov
xchg
call
inc
out
mov
mov
cwde
cld
lods
dec
sbb
lahf
mov
mov
add
es
xchg
test
mov
push
jb
out
mov
and
call
in
mov
push
add
or
mov
sbb
add
jecxz
inc
add
inc
movs
retf
pop
push
pop
adc
dec
mov
push
dec
mov
rsm
call
xor
(bad)
mov
inc
add
movs
sbb
mov
repnz
cmp
outs
add
mov
cmp
ret
daa
dec
popf
int3
cmp
pop
ins
mov
dec
pop
ja
stc
mov
mov
fstp
js
stc
scas
push
inc
dec
sbb
xor
pushf
pop
aas
ins
adc
push
sbb
xchg
rcr
pop
sub
pop
lods
push
pop
dec
jmp
dec
call
in
mov
jl
retf
lock
and
and
jae
jo
retf
(bad)
cmp
add
cmp
ret
sub
or
xor
inc
adc
rol
jae
bound
call
test
xor
aad
(bad)
sub
or
cwde
out
mov
pop
jecxz
fnstcw
dec
add
push
in
fdivr
popf
fisub
push
hlt
dec
nop
(bad)
and
add
or
inc
sub
das
js
sub
div
arpl
cmp
js
lods
or
stos
clc
mov
out
iret
cmps
adc
ss
mov
xchg
add
sbb
jl
jle
inc
ins
pop
inc
loop
repz
and
jg
pop
imul
cld
nop
xor
mov
imul
push
aaa
dec
sbb
or
dec
add
ins
cmp
(bad)
imul
js
pop
push
aas
pop
pushf
fimul
test
fld
mov
and
and
cmc
mov
leave
mov
adc
push
dec
push
aas
xchg
sbb
pusha
and
call
out
xor
xchg
shr
pop
out
aad
out
ret
and
(bad)
cvtps2pd
xor
idiv
mov
inc
movs
sar
xchg
out
stc
mov
(bad)
adc
add
dec
or
(bad)
mov
test
pop
inc
sbb
in
mov
push
in
cwde
fdiv
fs
jl
mov
sbb
mov
fisub
inc
adc
sbb
addr16
xchg
shr
and
jmp
test
repnz
mov
mov
sbb
push
fnsave
push
push
and
cdq
lock
retf
jecxz
jmp
sbb
sub
pop
bound
nop
cmps
hlt
mov
out
mov
lahf
into
(bad)
out
xchg
cs
inc
sbb
fcomp
nop
lahf
cmps
lock
inc
pop
pop
xchg
adc
push
jmp
adc
sub
cmova
inc
jecxz
fsubr
mov
lock
jl
jp
inc
sub
and
aas
jnp
xor
mov
mov
dec
xchg
(bad)
mov
imul
test
inc
pop
push
ins
sbb
mov
xchg
jmp
push
jmp
fstp
xchg
mov
mov
push
(bad)
mov
stos
ds
imul
jbe
xor
inc
and
and
je
idiv
and
push
jge
xor
or
dec
jmp
xchg
jne
out
cdq
fistp
test
cmps
jae
sbb
jae
in
jp
repz
outs
add
aas
repz
in
sub
sbb
in
jb
rcr
mov
mov
mov
push
push
xchg
xor
jo
fisub
xor
dec
adc
mov
dec
es
and
clc
aad
ror
or
mov
cld
mov
dec
sbb
aaa
ins
adc
jbe
ror
cmps
repnz
jge
aas
outs
sub
xchg
or
jae
or
pop
xor
outs
sbb
hlt
mov
ret
std
xchg
mov
cmps
loop
add
and
mov
mov
out
dec
in
call
dec
cs
jmp
mov
fst
add
push
xor
ror
pusha
adc
call
cld
mov
push
xor
adc
or
and
inc
add
push
push
aas
xchg
repz
jns
pop
mov
adc
mov
in
fmul
dec
imul
idiv
ret
push
retf
xchg
call
push
push
push
and
or
and
adc
jne
or
mov
in
cwde
iret
jle
and
jno
inc
test
push
cmp
je
sbb
(bad)
xchg
rcr
pop
pop
adc
jmp
nop
repz
xchg
rcr
ds
(bad)
and
jnp
pop
js
adc
mov
popa
fisttp
rcl
and
dec
sub
mov
shl
cli
mov
pusha
repnz
(bad)
mov
pop
out
sub
adc
fstp
jb
jle
cmp
mov
jle
mov
adc
sahf
fidiv
push
sub
mov
adc
mov
pop
fsubr
(bad)
inc
add
jecxz
mov
xor
cmp
jle
ins
(bad)
fsubp
xchg
cdq
in
mov
enter
enter
mov
(bad)
les
movs
rcl
daa
push
pop
test
les
bound
(bad)
mov
xchg
dec
or
push
or
pop
xor
dec
add
push
mov
out
ja
push
inc
fnstenv
or
cmp
xchg
sar
xchg
mov
lods
mov
rcr
mov
in
loop
into
aas
inc
je
xor
ins
movs
ror
jl
dec
add
cwde
jb
mov
mov
cmovle
shr
clc
mov
xchg
add
jge
pop
popf
neg
adc
stos
xlat
add
out
jmp
ror
dec
in
out
fbstp
ret
jnp
pop
lahf
mov
inc
and
sub
fimul
pop
fwait
popa
clc
mov
in
(bad)
es
xor
in
sub
arpl
sbb
mov
dec
cmp
or
mov
cmp
jmp
leave
es
pop
or
cmp
and
cmp
mov
cmp
mov
mov
mov
xchg
ror
mov
nop
(bad)
scas
out
xchg
jns
pop
dec
repz
push
jge
jns
xlat
nop
aam
push
jg
mul
jge
sti
xchg
(bad)
inc
aaa
pusha
cmps
mov
adc
mov
ja
cld
jp
pop
and
inc
pusha
cmp
jno
inc
add
je
xchg
ins
cmpps
call
cmp
jbe
(bad)
xchg
(bad)
xchg
ficom
add
sti
mov
ds
sub
push
loope
test
xchg
(bad)
adc
mov
sbb
inc
cmp
jp
jnp
add
dec
inc
stc
scas
jmp
pop
bsr
arpl
or
lahf
mov
in
ss
(bad)
xchg
and
data16
nop
rcl
not
xchg
push
jae
js
cld
and
das
lds
adc
xor
dec
mov
push
fiadd
add
jo
sub
pop
pop
mov
push
adc
repz
or
sub
mov
xchg
rcl
jns
push
inc
push
stos
leave
mov
mov
popf
jno
fisttp
cmps
div
push
add
lods
xchg
into
sbb
jae
ds
xchg
mov
scas
or
push
or
mov
shr
outs
sub
cmp
popf
jge
xchg
ret
mov
mov
xchg
les
or
mov
xchg
adc
cmc
imul
jmp
mov
jp
xor
jne
push
inc
fcomp
shl
loop
pop
jecxz
sti
mov
jmp
not
xchg
mov
adc
mov
xor
rol
add
les
add
pop
or
jecxz
imul
out
stos
push
sub
dec
and
cwde
pop
jmp
int3
cmp
xor
test
inc
cwde
mov
mov
dec
sub
(bad)
mov
push
aas
lds
add
push
and
rcr
stc
and
js
push
dec
xchg
mov
cmp
mov
push
and
mov
add
std
in
dec
push
push
fld
sbb
and
and
mov
dec
xor
add
mov
and
jg
mov
or
scas
stc
mov
push
sbb
push
in
scas
fst
cmp
mov
je
jmp
fstp
mov
sbb
and
jo
hlt
mov
aas
dec
sbb
sbb
pop
adc
mov
loop
adc
(bad)
int3
call
mov
enter
fistp
and
inc
cmp
pop
adc
fstp
lds
push
in
jae
push
aam
add
add
push
cmp
mov
add
cmps
(bad)
xchg
inc
cli
sahf
iret
cmp
dec
out
xlat
push
dec
push
xor
pop
xor
test
imul
mov
or
out
jmp
cdq
jne
ins
cmp
inc
ins
sub
adc
mov
sub
adc
(bad)
lea
lods
movs
fstp
sub
out
mov
mov
js
mov
retf
jne
mov
fs
out
fdiv
outs
adc
fmul
jl
push
pop
or
je
inc
mov
push
aas
pop
scas
cli
addr16
xchg
movs
fiadd
and
push
fwait
repnz
nop
int
sar
push
add
mov
(bad)
xor
and
or
push
push
sub
int
or
imul
les
jge
jp
imul
xor
fist
cs
push
inc
and
popf
aam
scas
je
test
clc
test
dec
in
aam
or
ja
mov
xlat
ins
push
dec
sbb
imul
xor
aad
ret
adc
ficomp
neg
sti
sbb
sbb
mov
add
pushf
nop
in
mov
call
sub
and
xchg
pop
fisttp
and
jl
imul
mov
sub
pusha
in
cmps
out
fadd
neg
sub
das
out
mov
jbe
dec
nop
clc
fwait
lahf
retf
movs
lods
(bad)
mov
sbb
je
xchg
les
or
les
ins
into
mov
xchg
out
sub
or
dec
out
addr16
pop
adc
dec
xor
addr16
pusha
sub
push
fbld
imul
jns
cmps
icebp
inc
fisubr
or
jns
pop
scas
shl
mov
xlat
push
xor
mov
fidivr
stc
test
ins
add
cmp
aas
and
push
or
xchg
(bad)
pop
jle
push
loop
and
or
push
add
jnp
mov
int3
daa
lods
sar
je
out
mov
(bad)
movs
jp
mov
jge
fadd
cmps
dec
sbb
ins
arpl
leave
cdq
dec
inc
adc
xor
cmp
out
sub
outs
or
sub
sar
inc
add
mov
mov
cmp
add
retf
pushf
scas
sahf
shl
push
in
xor
push
pop
or
cmps
fsub
scas
jmp
xchg
shl
test
out
mov
push
or
xor
outs
sub
jo
bound
dec
pop
imul
ret
ss
xchg
mov
ror
inc
and
or
xchg
aad
mov
sbb
cmp
fcomp
jp
push
xor
add
and
ins
and
inc
xor
loop
xor
jno
dec
repnz
adc
xlat
and
outs
dec
iret
mov
xor
and
ins
dec
in
cwde
xor
stos
ds
popa
adc
ins
retf
sbb
sbb
(bad)
frstor
push
ins
fdivr
and
cmovno
xchg
jbe
sar
ss
and
popa
cmp
test
add
ins
cmp
xlat
xchg
fidivr
pusha
fild
pop
loope
dec
and
inc
cmps
in
xchg
arpl
xor
clc
jnp
pop
popa
or
fstp
fwait
imul
mov
fidivr
cli
(bad)
push
or
in
fmul
cmp
and
pop
or
cmp
push
adc
dec
movs
xor
repnz
add
and
push
pusha
cli
mov
push
fiadd
jecxz
cmps
mov
jbe
rcl
aam
pop
sbb
xor
mov
push
outs
xor
cmp
jmp
push
mov
mov
mov
sbb
mov
test
arpl
or
test
jns
icebp
inc
out
sbb
imul
cli
xor
(bad)
movs
push
mov
jmp
mov
imul
or
inc
adc
cmp
and
mov
adc
out
outs
adc
pcmpeqd
jnp
scas
jmp
push
adc
or
sub
test
cmp
icebp
dec
test
mov
lock
and
pop
popa
xor
mov
aam
in
jl
outs
sar
push
hlt
cmp
scas
repz
push
lds
add
sar
sub
fild
imul
mov
cli
xchg
ja
enter
sbb
dec
sub
mov
mov
jne
stos
std
stos
out
out
fst
xor
pop
or
stc
sub
mov
div
push
adc
add
xchg
push
sub
jle
jne
fdivr
repz
sbb
imul
cli
adc
sbb
pop
mov
sar
and
sub
or
xor
mov
mov
cmp
mov
mov
jmp
int
xchg
cli
or
fcmovne
adc
lods
jno
dec
sbb
fisttp
jmp
rcl
push
mov
xor
push
jle
dec
pop
aas
and
dec
rcl
jmp
xchg
hlt
xchg
sbb
iret
mov
(bad)
retf
fcomp
mov
outs
imul
mov
aas
xor
push
mov
mov
dec
sub
pop
aas
js
movs
cmc
sahf
mov
xor
sub
fimul
stos
leave
adc
loop
rcl
add
outs
(bad)
sub
(bad)
fld
jb
xchg
out
mov
nop
push
jmp
push
jb
mov
inc
or
ror
lods
bound
adc
xor
mov
cmps
push
pop
mov
(bad)
pop
and
ins
push
stc
jo
fistp
aaa
pop
push
adc
std
adc
cmp
call
movs
into
es
sahf
mov
aas
or
sub
ja
push
pop
fst
jmp
imul
sub
ins
lods
ret
sahf
mov
sub
xchg
(bad)
es
adc
cs
jmp
rcl
push
or
and
in
cdq
ret
adc
mov
ins
aas
jns
rcr
mov
jae
adc
inc
xor
es
mov
push
int3
push
arpl
xchg
jb
stos
sub
xor
and
xchg
jae
retf
sub
imul
xchg
jmp
jge
rol
lods
popa
cmp
les
pop
push
mov
(bad)
stos
clc
pop
cmp
mov
test
dec
and
push
scas
rcl
call
push
adc
shl
mov
sub
xor
mov
es
jge
xchg
out
ja
xor
and
les
xor
rep
sbb
xchg
fdiv
cmovp
ret
mov
sub
xchg
pop
fisttp
(bad)
jmp
mov
ins
stos
xchg
cli
xchg
stos
in
test
stc
push
add
popa
movs
adc
dec
mov
(bad)
jl
xor
jnp
inc
mov
cs
dec
sub
adc
dec
cmp
and
jnp
jo
lahf
sbb
jmp
ror
mov
popf
retf
dec
sbb
push
cmp
lods
fimul
pop
fst
adc
cmp
inc
mov
mov
pop
enter
sub
lock
pop
push
adc
out
xchg
loopne
cmps
icebp
cmp
adc
mov
out
arpl
mov
fisub
jbe
dec
call
out
mov
sub
outs
cmp
inc
retf
movs
jge
pop
repz
inc
jecxz
(bad)
jmp
lods
imul
inc
add
jns
sbb
xchg
shr
cwde
push
rcr
shl
pop
retf
sub
aaa
jbe
fs
scas
std
mov
push
sub
fild
sub
int3
or
call
inc
push
pop
pop
jp
popf
retf
and
loope
and
mov
or
lahf
scas
cmp
cwde
mov
fldenv
push
pop
fidiv
ror
pop
xor
ins
call
push
lods
xchg
(bad)
mov
sub
inc
aam
pop
data16
mov
test
ins
add
xchg
xchg
jo
adc
pop
or
adc
cmc
sbb
add
shl
out
mov
xor
push
and
imul
adc
or
inc
sti
mov
lods
(bad)
jo
mov
push
and
dec
(bad)
nop
jg
cwde
aam
stos
jb
mov
retf
mov
in
jno
outs
sub
nop
mov
js
test
mov
test
xchg
mov
cdq
inc
adc
mov
out
les
sbb
neg
loopne
fild
fwait
(bad)
scas
or
and
(bad)
cwde
je
jg
xor
jnp
out
xchg
int
jae
sub
int
cmp
idiv
and
sbb
ret
nop
aam
aas
cmc
mov
in
lods
les
call
mov
out
pop
push
adc
sbb
add
sub
lods
or
adc
imul
mov
dec
in
movs
aad
test
jge
div
fcomp
xchg
add
cmp
and
jne
adc
pop
daa
push
dec
sti
xor
jae
rcr
mov
dec
sbb
xchg
add
stos
stc
mov
pop
jmp
adc
pop
add
popa
add
xchg
push
add
jns
mov
repnz
mov
enter
sbb
add
push
mov
movs
push
cmps
mov
cwde
xchg
xchg
xor
dec
ficom
inc
aam
out
pop
mov
pop
mov
xchg
or
fadd
push
sbb
sbb
push
fcomp
fstp
inc
mov
mov
inc
es
outs
rcr
xor
sub
add
cdq
xchg
jno
adc
xor
popf
xchg
jl
outs
into
push
cmc
dec
mov
imul
or
sbb
into
add
adc
and
and
pop
test
mov
pushf
push
mov
inc
(bad)
int3
aas
jmp
int3
test
rcr
arpl
mov
aaa
xor
psubsw
sti
push
movs
inc
mov
and
xor
sbb
push
cmps
ja
xchg
mov
pop
mov
dec
xchg
aam
icebp
aaa
in
std
sub
mov
imul
arpl
pop
fisub
cmp
movs
movs
inc
mov
(bad)
ss
mov
adc
hlt
xor
(bad)
es
cmp
xor
shr
push
rol
pop
mov
fst
pop
cmps
fwait
inc
push
push
ret
xor
pop
lods
push
sti
outs
sub
dec
(bad)
xor
push
cld
pop
scas
(bad)
sub
out
xor
repnz
push
pop
adc
xor
jle
or
stos
pusha
stos
data16
add
icebp
or
retf
sub
lds
cmc
es
pushf
jno
lahf
push
fstp
push
and
adc
cmp
jmp
mov
rcl
jo
jae
push
jmp
cdq
push
mov
xchg
inc
sub
sub
add
inc
test
fwait
mov
pop
mul
loopne
test
dec
and
sub
adc
sti
add
cmp
ja
enter
mov
call
repz
xor
and
add
aaa
ss
push
iret
pop
enter
popf
inc
fild
push
pop
in
retf
repz
mov
inc
mov
mov
jo
add
jne
pop
xor
outs
mov
fist
pop
mov
aad
xchg
mov
mov
mov
xor
sbb
xor
out
cmc
sbb
imul
out
dec
mov
mov
xchg
inc
into
pop
sbb
mov
sbb
out
ss
inc
cld
cs
fisttp
mov
inc
aad
mov
mov
movs
aam
test
sbb
loope
inc
movs
mov
xchg
call
pop
sub
sub
inc
stos
cdq
xchg
je
dec
lds
popa
std
pop
fidivr
in
sub
mov
lahf
je
and
dec
cmp
dec
mov
pop
pminsw
test
inc
(bad)
adc
add
sbb
lods
jno
xor
pop
mov
xchg
jb
test
xor
cmp
imul
mov
mov
inc
aam
push
les
ins
jecxz
stos
jo
pop
mov
xchg
push
sub
jnp
jg
sahf
jle
icebp
cmp
add
daa
add
push
out
mov
shl
imul
mov
fmul
adc
aas
sbb
pop
fmul
stc
push
int3
cmp
scas
and
aad
or
dec
or
mov
xchg
outs
adc
mov
mov
jmp
(bad)
int3
pop
mov
mov
es
ins
sbb
xor
cmp
jns
cmp
ret
dec
mov
dec
mov
stc
cmp
push
into
add
push
ret
ds
test
add
call
dec
adc
das
jmp
imul
jo
and
jmp
jg
dec
enter
cmps
test
call
int
mov
into
add
add
push
cmp
out
les
sbb
push
retf
lds
test
xchg
mov
mov
inc
stos
sahf
jl
ja
bound
jo
add
xor
pop
mov
ins
cld
cmp
dec
mov
mov
cmp
sti
xor
push
mov
xchg
jb
jmp
jmp
lds
xor
div
js
dec
cmps
dec
xchg
ins
test
and
adc
xor
mov
jg
dec
scas
les
ja
xchg
std
cmp
cli
cmp
dec
int
les
xchg
fwait
data16
push
push
shl
dec
xchg
inc
rol
test
pop
test
xor
mov
fnstcw
add
sub
dec
mov
mov
les
cmp
push
fdiv
out
mov
dec
test
xchg
sahf
jge
loope
fist
cwde
inc
mov
mov
cmc
add
mul
adc
and
(bad)
cs
sbb
cmp
cs
dec
aam
fnstcw
in
dec
movs
push
stos
(bad)
jl
pop
xor
loopne
sbb
ss
lods
(bad)
frstor
or
sub
std
cmp
cdq
jb
xor
or
repz
sbb
clc
and
sub
jbe
fwait
jae
pusha
and
inc
cmps
xchg
xchg
push
je
fwait
push
xchg
mov
pop
sbb
cwde
fsubr
push
pop
jmp
jp
fisttp
popf
push
and
pop
(bad)
es
sub
xchg
mov
xchg
(bad)
aad
in
add
enter
rcr
imul
(bad)
daa
sbb
repnz
add
pop
mov
jb
sub
mov
and
repnz
cmp
and
ds
sar
push
aam
cmp
ret
xor
iret
push
mov
popf
push
lods
fstp
cmps
addr16
das
push
in
mov
mov
sub
out
mov
jle
jg
rcl
rol
xor
or
xchg
js
dec
test
add
lea
xchg
sub
and
pop
sar
adc
and
push
ret
outs
mov
cli
pop
xlat
xor
push
or
add
pop
adc
mov
out
sti
sub
add
cmp
jbe
inc
mov
dec
movs
inc
mov
iret
pop
sti
mov
fnstenv
ss
ds
and
jae
xchg
xchg
sahf
addr16
dec
mov
jbe
push
mov
xor
push
sbb
lods
mov
xchg
outs
fst
mov
sbb
or
push
retf
push
rol
pop
repz
inc
cmps
jb
sub
pop
stos
mov
fidiv
jecxz
lods
xchg
mov
sub
(bad)
cmp
sub
es
icebp
push
shl
adc
mov
lods
mov
or
pop
cmp
cmp
adc
jnp
inc
mov
pop
lods
inc
xor
in
sub
sub
inc
int
lods
dec
xchg
pusha
fst
jns
jo
cvtps2pi
pop
mov
leave
sub
arpl
sub
pop
test
push
mov
imul
hlt
dec
mov
push
stos
jae
jp
pop
mov
pop
(bad)
xor
push
mov
test
popf
popf
inc
shr
es
push
push
xor
pop
fisttp
out
or
outs
mov
shl
daa
les
in
add
jecxz
ret
aaa
sbb
ins
int3
and
in
push
fdivr
jecxz
mov
pop
aam
jmp
sub
addr16
fcomp
jge
push
int3
das
out
push
test
cmps
test
lods
mov
pop
mov
scas
gs
cmps
mov
dec
stos
popa
mov
xchg
inc
cmps
jo
inc
pop
loope
mov
lea
test
arpl
or
add
pop
mov
cmp
sbb
mov
cs
xor
push
rcr
jg
ficom
and
stos
mov
mov
das
add
repz
cmp
xchg
arpl
cmp
push
stos
arpl
arpl
iret
pop
or
mov
hlt
xor
fimul
inc
aam
ss
(bad)
fadd
pop
in
or
mov
lahf
lds
dec
leave
pop
(bad)
pop
int3
mov
retf
dec
test
jns
(bad)
in
and
mov
push
sbb
inc
cmps
mov
jno
cmp
jmp
and
pop
lock
stos
ins
mov
ds
adc
enter
je
popf
mov
(bad)
cmp
push
cmps
inc
shl
rcl
cmp
push
test
mov
or
sub
arpl
pop
aam
mov
lahf
inc
fisttp
adc
sub
rcr
pop
scas
ins
xchg
in
fidiv
add
repz
ret
jge
scas
std
jne
push
mov
sub
pop
sbb
xor
add
out
and
jnp
scas
call
nop
jno
xor
pop
icebp
cmp
ret
stos
jg
dec
inc
jl
sahf
xchg
outs
mov
stos
mov
scas
cmp
sbb
adc
(bad)
cmp
dec
int
stos
addr16
ja
aaa
sbb
and
mov
imul
movs
xchg
xchg
ja
ins
lods
jb
popf
fistp
xor
push
lods
cdq
jge
aas
bndstx
out
sub
or
dec
into
sub
jg
js
add
cmps
arpl
pop
mov
clc
cmp
push
jmp
out
(bad)
sub
cmp
push
mov
ins
or
push
hlt
jge
je
mov
push
mov
cs
inc
(bad)
push
mov
add
daa
loope
out
imul
adc
inc
lods
(bad)
ins
lds
inc
stos
xchg
dec
fidiv
out
sbb
stos
xchg
inc
mov
mov
pop
mov
mov
mov
dec
sub
int
push
push
int
push
cld
sub
lea
pusha
shl
enter
fisttp
push
(bad)
jae
(bad)
call
xor
int3
das
sbb
addr16
rcl
jge
dec
stos
arpl
test
lahf
bound
stos
push
test
and
sar
ss
pop
(bad)
push
(bad)
and
pop
sbb
cwde
popf
dec
mov
pop
mov
xchg
ja
popa
adc
add
out
add
push
mov
arpl
xor
clc
push
mov
test
xchg
mov
ss
push
call
jge
popa
mov
dec
test
or
add
push
not
push
sbb
xor
and
push
test
pop
xor
or
sub
ja
and
lea
mov
jb
dec
retf
test
inc
mov
dec
mov
aam
mov
dec
mov
jnp
add
cmp
fwait
movs
test
data16
xchg
dec
fimul
ud0
sahf
xchg
jo
lods
nop
inc
movs
arpl
push
loope
shr
inc
fisttp
pop
repnz
(bad)
and
or
test
loope
push
rcr
xor
xor
cmp
push
cmc
dec
push
in
pop
fstp
repnz
enter
mov
add
cmp
jne
call
lock
inc
fnstcw
repnz
mov
pop
scas
inc
movs
xchg
shl
and
or
call
push
test
xor
push
and
sbb
and
adc
ret
pop
test
daa
add
and
inc
ret
mov
jg
xchg
inc
test
jle
xchg
xchg
xchg
imul
aas
out
sar
cld
and
push
rol
imul
push
test
push
adc
repnz
xor
hlt
push
fisubr
int
inc
int3
sub
sub
add
mov
mov
jno
pop
movs
cwde
fwait
inc
add
jecxz
(bad)
dec
mov
mov
mov
in
into
push
leave
xor
dec
fnsave
cmc
push
mov
or
and
jmp
dec
mov
rcr
lahf
fld
or
stos
jae
inc
mov
aam
adc
pop
(bad)
xor
test
lods
call
push
test
mov
sahf
jbe
mov
jmp
in
pop
fnstcw
lock
cmp
sub
ds
xor
dec
xor
and
mov
ja
xchg
imul
imul
repnz
stos
xchg
gs
or
sub
movs
xchg
imul
shr
ret
(bad)
push
lods
ins
mov
adc
retf
hlt
and
push
fcomp
lea
dec
scas
mov
or
push
out
sbb
repnz
mov
outs
or
pop
mov
dec
mov
jns
cdq
imul
cmp
cld
and
inc
les
or
pop
fimul
cdq
fsub
sbb
(bad)
push
cmp
mov
(bad)
push
icebp
pop
mov
(bad)
inc
mov
and
add
hlt
adc
or
sub
(bad)
movnti
sub
inc
fistp
and
jmp
into
dec
nop
jnp
jns
cmp
std
sub
dec
sbb
jmp
sbb
xor
push
(bad)
sub
jae
xchg
jne
loopne
loop
std
jne
pusha
retf
pop
and
outs
sbb
cmp
sbb
ds
ret
(bad)
cmp
and
xchg
mov
push
int3
add
push
fnstsw
out
pop
fbld
icebp
add
push
mov
adc
cmp
rol
enter
and
cmp
in
push
mov
xchg
ficomp
sub
pop
mov
mov
cdq
nop
jb
and
pop
mov
shr
adc
loope
or
push
and
out
sub
dec
mov
fmul
add
mov
and
and
cli
xor
pop
dec
(bad)
out
dec
mov
xlat
aas
std
cmp
and
pop
mov
shr
sub
(bad)
cmp
in
out
and
cmc
xor
inc
test
imul
jmp
lods
inc
test
aas
sbb
cmp
jmp
mov
inc
mov
xor
pop
cmps
bound
imul
out
pop
mov
jg
mov
movs
xchg
fist
imul
test
std
sub
and
add
mov
sub
adc
mov
sub
popf
cwde
ins
rcr
fwait
gs
imul
(bad)
ja
xor
data16
repnz
stos
xchg
inc
sub
(bad)
pop
lods
arpl
add
xor
pop
int
in
mov
lahf
cdq
jbe
xchg
mov
stos
mov
ficom
mov
pop
out
or
push
mov
xchg
mov
pop
adc
fsub
adc
push
shl
push
movs
test
xchg
jbe
xchg
dec
leave
pop
movs
imul
dec
scas
sub
pop
sbb
cli
jg
push
retf
mov
dec
shr
inc
mov
pop
lods
call
ins
stos
push
mov
or
mov
jl
aaa
and
loope
int
in
push
int3
push
in
mov
popf
push
stos
test
inc
cmp
jmp
mov
into
sub
push
mov
scas
jg
xchg
aam
retf
cmp
(bad)
push
mov
fdiv
add
dec
mov
(bad)
push
mov
call
push
sub
add
xor
jecxz
gs
outs
stos
ins
mov
sub
or
popf
lahf
inc
stos
addr16
retf
and
and
rcr
xchg
popf
xchg
inc
cmp
sub
jmp
mov
xchg
pusha
stc
js
and
push
aas
icebp
sub
fst
sub
sbb
pop
mov
enter
cmp
add
pop
fcomp
cs
inc
fnstenv
ret
cs
sub
xchg
nop
mov
or
mov
mov
dec
xor
fidiv
repz
or
mov
iret
push
pop
sbb
sbb
mov
xchg
popf
jp
test
or
add
sub
xor
sub
out
cmp
pop
sbb
ja
sub
push
mov
jnp
or
lock
adc
test
jo
push
test
pop
mov
sub
inc
mov
jbe
aaa
or
sbb
loopne
mov
mov
movs
test
push
shl
in
dec
mov
cdq
xchg
xchg
xchg
xchg
outs
ficomp
sub
ret
ss
in
cld
jno
pop
fnstenv
inc
dec
ins
stos
gs
ins
mov
pushf
mov
adc
jno
xor
in
cmp
pop
test
mov
cmp
sti
pop
enter
inc
mov
(bad)
cmp
out
jmp
(bad)
fist
xchg
(bad)
js
pop
retf
cmp
clc
je
and
dec
movs
xchg
xchg
jns
mov
sbb
clc
das
sbb
ja
inc
stos
jnp
dec
mov
mov
jns
and
adc
das
lock
xlat
dec
lods
jnp
pop
adc
and
dec
mov
push
cmp
dec
mov
xchg
push
shr
loopne
lods
mov
fldenv
sbb
daa
sub
xor
retf
xor
aas
adc
dec
mov
xchg
data16
push
or
in
sub
(bad)
ss
mov
xlat
jb
pop
pop
or
das
xor
pop
enter
cmp
mov
repz
out
push
movs
sbb
push
scas
fiadd
pop
ret
jle
jb
xchg
dec
lods
dec
movs
popf
inc
or
sub
das
push
imul
cmp
push
mov
scas
xchg
cwde
outs
fisttp
ret
cmp
pop
mov
scas
pop
sbb
sub
xor
int
fist
mov
xor
pop
movs
pushf
xchg
jne
cmp
dec
ficom
les
sti
mov
mov
inc
int3
cmp
aam
pop
or
xor
lock
pop
sub
sti
sub
inc
mov
mov
shl
pop
test
es
jmp
mov
(bad)
push
jmp
pop
mov
sahf
jge
add
je
sub
sub
jmp
outs
lods
jne
imul
push
jae
or
jmp
xor
jmp
pop
aad
rol
fstp
push
mov
push
scas
jle
das
pop
int
inc
test
xchg
xchg
inc
mov
test
mov
dec
scas
addr16
ins
movs
jne
xchg
mov
clc
and
call
mov
js
mov
xor
adc
stc
xor
jno
xchg
nop
ja
jle
popf
mov
and
or
sub
cmp
and
ret
pop
rol
jp
push
not
or
dec
scas
arpl
add
mov
call
out
sub
in
add
add
jmp
mov
and
adc
xor
ds
push
fnstcw
lock
pop
imul
add
and
mov
xor
or
push
sbb
into
inc
fild
dec
or
lds
sbb
cmc
xor
adc
ss
adc
bswap
sub
jo
fwait
cmps
fisttp
repz
sbb
sub
or
dec
cmps
inc
mov
pop
mov
mov
sub
sbb
or
adc
pop
mov
xchg
fs
lock
and
push
or
and
or
adc
or
sub
push
movs
inc
test
cld
push
mov
mov
shr
pop
dec
lds
sar
xchg
cmp
jnp
imul
push
shl
rcr
cmp
jg
xchg
sahf
(bad)
aad
movs
xchg
imul
sti
or
xchg
dec
fistp
mov
aaa
popa
call
leave
dec
lods
imul
cmp
cs
pop
lds
in
sub
mov
xchg
inc
mov
xchg
inc
mov
fidiv
out
call
push
mov
mov
lods
outs
pop
repz
mov
bound
leave
sub
sbb
and
rcr
addr16
test
dec
sub
mov
rcr
fstp
ds
in
ficomp
inc
cmps
cwde
xchg
dec
retf
xor
jge
test
es
xchg
mov
inc
fild
rcl
arpl
mov
imul
pusha
(bad)
loope
adc
mov
xlat
add
pop
shl
loopne
shl
sub
xor
adc
cmp
daa
sub
push
retf
mov
cmps
dec
clc
dec
lods
dec
mov
mov
mov
retf
or
push
mov
and
scas
outs
xchg
pusha
fisubr
icebp
add
sbb
ror
adc
clc
adc
cmp
iret
xchg
stos
mov
xor
push
rcl
dec
call
pusha
fstp
iret
or
sub
repz
sub
adc
cmp
repz
iret
ss
pop
mov
and
push
aad
int3
sub
dec
scas
ja
dec
lods
lahf
jl
jo
push
mov
xchg
jnp
call
push
(bad)
dec
or
xlat
pop
sti
inc
ror
jbe
pop
add
mov
enter
rcr
movs
push
mov
xchg
mov
stos
inc
mov
mov
add
in
cmp
and
cmps
pop
leave
rcr
fist
mov
xchg
adc
ins
sti
or
in
add
gs
hlt
repnz
xor
icebp
xor
rcl
add
clc
mov
retf
or
(bad)
xor
inc
sbb
pop
lea
adc
cmp
xor
jge
cmp
imul
fmul
imul
ins
mov
mov
enter
or
add
daa
adc
mov
jns
mov
clc
fisttp
sbb
das
push
pop
cmp
inc
inc
add
dec
pop
test
mov
mov
pop
test
sub
aas
xchg
test
int
imul
xchg
movs
xor
add
cmp
mov
mov
in
icebp
sub
nop
stos
mov
sar
mov
mov
sub
popf
jmp
inc
or
out
daa
push
cmp
add
adc
pushf
pop
cmp
xor
or
dec
sti
out
fild
popa
pop
inc
repz
pop
push
sbb
xchg
adc
inc
rol
into
bound
retf
mov
adc
adc
call
adc
add
ret
or
jecxz
repnz
xor
cmp
jne
xchg
cwde
sub
jecxz
mov
gs
fs
cmps
and
mov
mov
and
bound
jae
outs
(bad)
aam
cmps
add
mov
enter
mov
ins
push
ror
sub
and
xor
cmp
cld
xor
cld
les
xor
(bad)
retf
imul
add
stos
xor
outs
ja
icebp
or
adc
jnp
add
ficomp
rcl
mov
lods
push
fsub
jle
sahf
sub
jbe
les
movs
outs
pop
cmp
push
sub
mov
xchg
push
ja
adc
cmps
and
sti
cli
jb
pop
mov
into
lock
cmp
imul
push
pushf
ins
fdivrp
sub
push
mov
data16
jo
mov
aam
jb
xchg
pop
adc
cmp
pop
cmps
imul
test
nop
mov
sbb
rcr
ins
ret
sub
xchg
outs
pusha
jge
pop
data16
iret
js
mov
mov
fbstp
adc
mov
mov
jns
out
mov
lock
mov
dec
inc
ins
pop
dec
stc
pop
mov
ins
cmps
rcl
mov
ins
repnz
adc
std
xor
cmp
cmc
or
ds
mov
or
mov
cmps
and
inc
adc
pop
je
sbb
mov
jl
jae
std
(bad)
and
ins
add
ds
mov
mov
push
test
call
in
mov
push
out
das
fisubr
aad
shr
push
add
pusha
dec
mov
or
imul
daa
cmp
adc
jb
lahf
and
xor
dec
shr
sub
adc
stc
lds
sbb
and
mov
adc
adc
sub
add
lds
jne
(bad)
mov
clc
add
fadd
mov
out
fstp
lods
mov
gs
(bad)
int
aad
mov
fstp
mov
rcr
jp
in
push
dec
mov
test
cmc
sar
fdivr
add
dec
mov
ret
aas
push
repz
stos
js
fwait
outs
aas
jmp
lds
test
lea
ins
lods
or
sti
out
inc
lahf
pushf
or
jmp
sub
adc
push
lahf
fwait
imul
icebp
rol
inc
mov
mov
(bad)
fild
in
mov
pop
(bad)
and
push
iret
pop
and
pusha
ret
ret
dec
and
call
out
(bad)
aam
xor
call
xor
fs
fidiv
jbe
movs
pop
jnp
mov
push
movs
out
(bad)
int3
stc
adc
pop
mov
xchg
rol
js
in
mov
call
daa
fistp
rcl
push
ror
repnz
or
rdmsr
push
mov
push
scas
jo
inc
pop
ret
xor
cmps
std
cld
movs
ins
aas
adc
cmps
aas
xor
dec
adc
hlt
jp
inc
das
mov
adc
cmp
shl
push
lock
sbb
inc
test
stos
stc
mov
int3
loope
fisttp
stc
jnp
lds
aam
mov
and
xchg
icebp
mov
mov
test
fst
or
inc
das
imul
jmp
(bad)
sar
or
cmp
jp
dec
jge
pop
movs
bndstx
pop
pop
test
inc
cli
mov
dec
sbb
mov
inc
dec
int
sti
push
mov
adc
stos
push
sbb
jmp
xor
lods
mov
dec
xchg
ror
jg
into
add
xchg
jb
fs
xchg
outs
ins
cmps
sti
cmp
or
inc
cmp
test
stc
scas
movs
aas
mov
std
and
dec
jle
jmp
mov
sahf
jle
mov
cmc
lock
or
lods
sub
sti
jbe
jp
and
cmp
sbb
sbb
into
stos
add
mov
pop
mov
pop
xchg
out
bound
dec
std
cmp
xor
pusha
daa
movs
sub
mov
into
je
xchg
cdq
fnsave
daa
sub
adc
out
cmp
(bad)
xchg
pop
push
jmp
movs
lods
xchg
jns
dec
adc
das
ins
mul
mov
add
sbb
imul
(bad)
inc
(bad)
adc
mov
stos
sbb
(bad)
(bad)
loopne
mov
fstp
sub
jmp
push
jbe
out
mov
xchg
and
adc
jnp
mov
call
test
rcr
lahf
dec
scas
and
aam
(bad)
test
shl
mov
lods
jg
popa
and
in
aam
in
push
mov
lea
pushf
push
(bad)
fild
sub
dec
iret
shl
pop
shl
out
imul
sbb
jmp
cmps
into
test
mov
mov
push
cmps
comiss
push
sbb
icebp
add
xor
aas
push
imul
mov
in
or
lea
imul
rcl
mov
push
clc
stos
call
rol
inc
imul
xor
imul
(bad)
sbb
mov
ss
push
xchg
sub
sbb
and
out
and
and
loopne
xor
xchg
daa
and
cmp
icebp
inc
sub
pop
outs
dec
std
bnd
push
cmp
in
gs
mov
lock
push
test
xchg
xor
cmp
in
pop
stc
unpckhps
sub
mov
ins
lods
push
fidivr
loope
retf
adc
xor
ficom
int
les
sahf
loope
leave
pop
js
ror
xchg
fisttp
ins
xor
mov
pop
xlat
ret
xchg
int3
mov
dec
push
xchg
in
jno
cmp
dec
pop
push
in
retf
mov
xchg
dec
adc
lods
out
adc
dec
mov
add
xchg
shr
mov
or
ret
fs
fisubr
sar
or
jno
mov
xchg
sbb
dec
push
push
xor
inc
(bad)
hlt
add
jle
ret
movs
cmp
pop
mov
cmp
push
dec
(bad)
sub
call
xchg
xchg
das
cmc
xchg
xor
ficomp
movs
mov
fisub
sub
test
jecxz
shl
jae
repnz
jbe
data16
stos
add
cwde
fdivrp
cmps
xor
repz
mov
in
mov
sbb
aaa
sahf
frstor
outs
inc
mov
stos
mov
fldl2e
in
add
pop
mov
sub
in
shl
cmp
call
sub
mov
jo
ret
sub
jge
sub
stos
ins
xor
push
xchg
out
cmp
adc
imul
push
into
dec
loop
nop
mov
cmp
mov
mov
adc
cmp
adc
loopne
ret
dec
jl
cmp
jb
inc
cmp
or
and
pop
imul
inc
and
mov
sub
test
imul
nop
jns
in
inc
fld
xor
(bad)
xlat
push
call
cmp
inc
dec
dec
pop
scas
nop
cmc
ins
jb
dec
adc
and
ins
ficomp
(bad)
retf
je
xor
xchg
lahf
sub
mov
cmp
push
push
rol
xor
jb
aas
push
(bad)
fdiv
daa
push
loope
dec
test
adc
sbb
ret
jno
pop
pop
inc
lods
cwde
test
adc
test
cs
pop
fcom
or
(bad)
and
mov
icebp
test
adc
mov
push
pop
lahf
xor
add
mov
sub
mov
in
and
cmp
(bad)
jecxz
aam
xchg
pushf
jmp
sub
stos
or
dec
xchg
xchg
pop
fdivr
scas
js
and
fadd
out
es
sbb
jecxz
pop
or
icebp
xchg
cli
xchg
cmps
pop
jl
xchg
ficom
cs
xchg
das
inc
xadd
repz
je
xchg
aad
mov
clc
cmps
push
or
scas
push
push
mov
aad
add
sbb
xchg
imul
mov
dec
push
hlt
js
pusha
dec
arpl
add
sti
dec
xor
mov
jp
imul
(bad)
ss
cwde
and
mov
dec
pop
and
pop
mov
mov
mov
xchg
xor
dec
mov
xlat
test
stc
pop
sahf
or
jp
xchg
ret
add
sub
xor
sbb
pop
test
xchg
sub
ja
or
sahf
lods
rcl
push
rcl
sbb
fsub
loop
push
adc
scas
push
aad
dec
aas
fmul
and
(bad)
adc
les
test
int
cli
push
jne
mov
ret
sbb
mov
sub
adc
jmp
sbb
jg
int
mov
jmp
xchg
retf
outs
sti
fwait
inc
jbe
jbe
int
fcom
retf
movs
jle
aaa
fnsave
pop
xchg
bound
ficom
inc
loopne
mov
inc
mov
js
mov
cmp
arpl
sub
out
int
pop
inc
xor
and
cmps
cmps
std
sbb
cmps
das
mov
inc
bound
sbb
lods
sub
mov
push
jle
jle
sub
mov
adc
and
test
adc
mov
cli
fst
(bad)
jno
movs
pop
pop
mov
jecxz
push
cli
bound
cmp
xor
mov
xor
add
data16
pop
jo
or
popa
jmp
xor
mul
fistp
pop
nop
fcom
bsf
popf
ret
clc
push
dec
lds
mov
push
mov
out
adc
jb
and
gs
leave
add
jns
mov
sbb
mov
inc
(bad)
ret
add
cmp
mov
cmc
jbe
dec
xor
xor
scas
cli
adc
movs
movs
outs
ja
or
sub
pop
je
rcl
lea
push
adc
fmul
mov
out
dec
xchg
push
jle
test
lock
sbb
mov
call
enter
inc
inc
or
jno
rcl
dec
adc
scas
mov
jae
mov
sbb
mov
inc
or
cmp
aas
into
sbb
sbb
xor
cdq
cli
cs
jecxz
sub
pop
or
hlt
and
sbb
shr
xor
push
jae
xor
ja
sti
push
pop
aad
dec
addr16
in
inc
lds
fwait
in
sar
ins
pusha
mov
sar
or
push
sub
fs
jns
imul
xor
fwait
sub
xchg
push
mov
add
pop
lahf
ficom
mov
test
mov
mov
pop
stos
cmp
fidivr
mov
lahf
out
sub
popf
sub
sub
loope
push
xor
shl
xor
addr16
mov
sahf
popa
fild
push
cli
add
add
xor
iret
push
js
xchg
ja
std
imul
arpl
push
loopne
ret
sbb
iret
imul
mov
hlt
leave
xchg
out
or
and
cmps
or
pop
and
xor
dec
repz
jmp
frndint
adc
aaa
test
jmp
sub
xor
mov
addr16
inc
pop
pop
xor
or
ror
adc
in
cli
mov
in
cld
cmp
test
dec
xchg
xlat
and
movs
je
mov
daa
in
push
aaa
pop
lock
mov
inc
aaa
jmp
mov
ret
sbb
vphaddbd
das
fcom
cmps
cmc
xchg
adc
xchg
jne
cli
popf
dec
loope
rcr
ficom
in
lea
out
sub
mov
jl
sub
or
push
mov
inc
xchg
mov
adc
ror
aas
sbb
push
mov
mov
fidiv
iret
xor
rol
pop
adc
inc
cmp
xor
and
jns
bound
(bad)
or
imul
adc
das
pop
lds
dec
stos
add
scas
or
stos
pop
stos
mov
mov
cmc
pop
jae
mov
xchg
xor
bound
xchg
xchg
xchg
add
lods
mov
xlat
fsub
or
cmp
call
and
ror
mov
dec
mov
cmc
clc
pop
mov
jmp
into
in
ds
inc
mov
fistp
pop
sbb
mov
mov
and
sub
xor
add
jp
sbb
stos
push
jae
mov
sbb
dec
or
inc
(bad)
cmps
inc
outs
pusha
stos
sub
jle
bound
add
les
inc
(bad)
fmulp
int
xchg
dec
jg
sub
rol
adc
int
shr
cmp
fdivp
out
push
xchg
xor
add
lods
stos
jnp
xchg
outs
cmp
mov
stc
test
mov
inc
mov
shl
(bad)
dec
push
ja
push
push
lds
sbb
add
pop
add
jmp
lods
jne
leave
and
add
push
rol
mov
mov
mov
or
xchg
mov
add
hlt
(bad)
adc
mov
inc
mov
mov
pop
dec
push
jp
into
ja
imul
mov
push
out
ret
adc
les
sbb
gs
repnz
adc
test
xlat
xlat
jno
cmp
mov
popa
ja
xchg
inc
push
add
or
gs
pop
inc
clc
test
push
aam
mov
pop
aam
sbb
repnz
pop
(bad)
xor
push
sar
outs
sbb
setae
pop
fwait
mov
xor
xchg
fist
pop
cmp
push
je
(bad)
imul
arpl
shl
(bad)
mov
(bad)
lea
inc
and
dec
stc
mov
mov
pop
sub
loope
das
jp
bound
jae
adc
das
adc
pop
cld
inc
retf
jae
adc
xchg
xor
inc
fisubr
inc
xchg
leave
push
xor
(bad)
out
xchg
mov
in
retf
inc
jp
cmp
add
(bad)
mov
mov
iret
mov
pop
pop
outs
mov
sub
les
lods
pop
xor
push
stc
popf
ds
push
clc
dec
dec
fmul
popa
xor
pop
mov
jae
add
lea
fmul
lea
call
cs
adc
fdivr
(bad)
dec
sbb
cwde
mov
jmp
in
xchg
cmp
push
outs
fsub
movs
sub
push
push
push
mov
pop
and
jne
(bad)
imul
jp
retf
jne
sub
jp
pushf
mov
mov
in
into
icebp
mov
cmc
sbb
outs
or
daa
cmc
sub
xchg
stc
retf
mov
xchg
sbb
adc
jmp
add
enter
pop
int3
pop
int3
add
pop
fisttp
push
adc
(bad)
aam
clc
addr16
aas
add
fisttp
mov
add
adc
icebp
sub
push
lar
shr
call
cmp
add
and
clc
iret
adc
call
xchg
and
sbb
into
push
iret
inc
push
mov
lods
xchg
icebp
call
aad
shr
mul
repz
(bad)
mov
(bad)
sbb
aad
mov
sbb
pop
or
ins
adc
js
into
dec
jmp
adc
pusha
dec
adc
mov
push
retf
adc
jecxz
(bad)
sub
mov
adc
mov
sub
jle
in
adc
pop
test
dec
jge
jmp
fidivr
in
or
imul
push
and
push
fldcw
mov
inc
push
call
cmp
and
daa
icebp
outs
inc
clc
icebp
dec
mov
int
test
lea
cmps
jmp
fnstsw
out
or
js
mov
mov
scas
pop
and
not
pop
stos
mov
jo
pusha
stc
lahf
imul
popf
icebp
aas
jbe
xchg
cli
outs
fdiv
retf
and
dec
xchg
lock
pop
js
in
sar
xor
in
mov
and
fnsave
dec
cwde
pop
push
cmps
jno
jbe
std
or
mov
aad
pop
loopne
fs
lahf
jb
pop
stos
jmp
sbb
pop
mov
cmps
mov
pop
shl
push
cmp
inc
lahf
adc
adc
push
(bad)
sub
sub
adc
push
or
adc
sti
in
inc
and
jge
and
fimul
cmp
sbb
fild
sub
inc
inc
pop
cdq
ret
or
or
inc
pop
mov
inc
jne
add
xor
sahf
test
adc
or
sbb
in
jp
cmp
cmp
(bad)
loope
jb
add
mov
or
(bad)
cmp
and
(bad)
imul
and
mov
lea
cmp
jns
add
fucomip
or
push
cmps
popa
and
rcl
jne
out
sahf
outs
bnd
in
imul
ss
sbb
dec
inc
dec
pop
sahf
add
in
dec
xor
in
mul
sbb
push
push
mov
loopne
xchg
cmp
ja
add
xchg
std
push
ret
adc
cmps
inc
sub
fiadd
pusha
scas
ror
adc
aad
call
pop
and
imul
cmp
and
lahf
dec
or
test
fcmovnbe
retf
movs
dec
cld
adc
idiv
xor
cdq
lds
(bad)
cli
repz
mov
push
pop
jb
dec
pop
sbb
pusha
sub
sahf
cld
mov
cmps
sub
pushf
push
ror
fsubr
sub
arpl
jmp
add
fbld
and
ret
pop
pop
fistp
mov
sbb
inc
pop
jp
mov
adc
scas
xor
shr
out
sbb
enter
mov
inc
dec
xchg
aam
inc
pop
sub
popa
pop
push
sti
mov
sti
pop
dec
sbb
jbe
sbb
push
call
or
mov
clc
fs
or
popf
dec
sbb
int
add
push
shr
mov
call
mov
repz
adc
cmps
hlt
cmp
pop
imul
push
adc
add
xchg
push
add
lea
mov
dec
loopne
clc
push
das
sar
xchg
into
je
lock
or
cli
jb
sbb
inc
lock
aaa
je
and
retf
cli
and
push
loop
inc
in
adc
dec
adc
cmp
sar
xchg
js
sub
dec
retf
mov
cmp
or
dec
ja
(bad)
(bad)
push
dec
es
jp
js
pop
sub
pop
es
cld
push
mov
mov
test
mov
out
mov
xchg
xchg
je
jo
les
or
and
leave
fisub
inc
mov
or
add
mov
pusha
ins
mov
clc
aaa
dec
les
mov
in
adc
cwde
arpl
mov
xor
cli
inc
test
cmp
ds
stos
test
icebp
xchg
imul
dec
je
and
outs
out
mov
fidivr
nop
bound
sbb
mov
lea
and
in
jmp
test
sbb
stos
xor
gs
inc
leave
xchg
cli
daa
pop
add
adc
adc
xor
push
into
ror
daa
cmp
inc
outs
movs
push
int
lahf
test
bound
add
mov
loope
scas
pushf
iret
xchg
jecxz
or
mov
les
outs
inc
shl
into
pusha
xchg
bound
mov
jg
or
xchg
mov
cmp
pop
repz
mov
mov
mov
mov
fs
push
or
cmp
mov
sbb
adc
adc
adc
adc
pop
add
lahf
div
pop
ins
mov
sub
nop
push
push
mov
jo
out
test
inc
adc
fidiv
mov
test
mov
fild
adc
sar
push
pop
dec
mov
xor
shl
jnp
mov
stos
mov
stos
mov
cmp
mov
sub
mov
stos
sub
xor
retf
adc
out
sbb
pop
adc
jg
lods
jl
fwait
cdq
hlt
ins
inc
ret
push
sub
aad
ret
jnp
je
xor
inc
in
xor
(bad)
clc
xor
inc
mov
xchg
daa
xlat
xor
jb
jp
mov
mov
icebp
mov
adc
dec
jmp
add
push
jp
stc
cmp
in
gs
je
or
and
cmps
repnz
sahf
lods
(bad)
in
inc
adc
test
cmps
or
ins
pop
(bad)
xlat
jle
lods
mov
loope
imul
mov
std
dec
xchg
enter
push
pop
leave
fisubr
rol
ds
aam
aad
mov
push
(bad)
shr
jbe
and
(bad)
cs
outs
dec
push
cmp
cmp
adc
push
ret
sub
popa
jle
fs
mov
push
mov
mul
cwde
repnz
or
jns
stos
retf
and
std
cs
les
in
mov
jecxz
add
js
dec
push
fnsave
inc
or
clc
push
cwde
(bad)
pop
test
or
add
sub
jg
cmp
mov
jno
xchg
and
add
xchg
(bad)
cmp
jg
adc
xchg
test
add
or
neg
jnp
xchg
or
jge
scas
aam
jmp
inc
sub
push
mov
mov
(bad)
inc
rol
popa
inc
test
jb
vmread
jecxz
fwait
ja
sbb
or
add
jmp
adc
lods
cmp
dec
jge
in
mov
sti
sbb
popf
das
leave
jns
xor
test
stc
jbe
inc
pop
dec
dec
xchg
call
dec
jns
mov
sub
ins
mov
retf
push
fwait
jb
mov
imul
ins
jp
push
cwde
test
cmp
cdq
adc
xor
dec
test
stos
cwde
push
rol
add
xlat
mov
or
and
shr
out
pop
hlt
push
div
jae
rcl
xchg
jg
in
clc
arpl
clc
mov
and
int
and
or
mov
retf
loop
and
into
jb
or
pop
(bad)
fwait
scas
ror
lea
fisub
mov
popf
jmp
ror
(bad)
das
or
cmp
adc
cmps
push
push
mov
mov
fidivr
aam
xchg
popa
lahf
pusha
jmp
les
xor
mov
xchg
push
pop
cmp
xchg
xor
push
in
xchg
mov
mov
dec
xor
popf
loop
xchg
adc
(bad)
sbb
cwde
out
sub
pushf
fcom
mov
xchg
(bad)
jmp
sub
add
(bad)
rol
cwde
add
lahf
nop
push
in
mov
push
mov
mov
fbld
stos
out
push
jbe
adc
ins
and
hlt
pop
nop
adc
jmp
inc
push
xor
push
mov
fs
mov
sub
mov
call
arpl
adc
xor
pop
push
loop
mov
arpl
or
stos
adc
jmp
xchg
xor
aaa
clc
inc
cmp
mov
and
repz
push
mov
sbb
cmps
sub
(bad)
out
mov
mov
test
cmps
sub
dec
mov
neg
pop
call
fisub
call
xchg
repz
push
rol
mov
or
mov
es
inc
xor
test
mov
mov
fld
xor
xor
imul
pop
fwait
or
call
lea
adc
add
call
mov
imul
pop
or
and
out
add
adc
in
xchg
sbb
mov
pop
cmovb
sub
push
fcomp
inc
jmp
ss
push
sar
outs
movs
cmp
jb
leave
mov
adc
into
sub
jmp
(bad)
push
sub
popa
rcl
rcr
lahf
stos
dec
enter
xchg
sub
mov
pop
sub
popf
inc
mov
loope
sbb
cmp
sahf
aas
sbb
and
cmp
sbb
ins
aaa
mov
hlt
or
push
mov
mov
call
sti
test
jge
and
mov
pop
adc
arpl
outs
pop
fs
inc
cmp
dec
jno
loop
(bad)
hlt
add
or
push
jmp
mov
sub
popa
sub
ds
sbb
jnp
addr16
cmp
mov
adc
ins
or
cwde
rsm
sub
mov
push
lock
add
test
enter
mov
imul
or
sti
imul
xchg
pushf
repnz
cld
mov
nop
add
jbe
inc
or
add
inc
bound
pushf
cmp
imul
imul
pop
and
sub
mov
mov
sbb
xchg
push
inc
rol
push
add
out
pop
repz
xchg
jo
and
ins
jmp
push
jg
pop
jne
mov
(bad)
sub
mov
cwde
sub
loop
int3
xchg
mov
in
pop
xchg
and
popa
mov
daa
add
adc
cmc
pop
push
pop
loope
popa
pop
(bad)
popf
fdiv
imul
inc
loop
jne
mov
dec
push
sub
push
mov
inc
rcr
inc
jmp
add
push
add
out
or
pop
sahf
iret
xor
push
movs
or
and
push
adc
aad
push
data16
call
and
loope
cdq
xchg
mov
and
xchg
mov
xchg
out
cmp
arpl
jbe
xlat
add
mov
iret
fadd
in
push
inc
add
cmps
push
sbb
adc
mov
std
add
pop
mov
dec
fs
movs
jbe
fcomp
scas
jbe
or
movs
outs
imul
fldenv
or
add
jmp
in
add
push
out
popa
les
call
in
mov
movs
or
or
lods
outs
nop
sub
fistp
ins
out
adc
(bad)
cli
ficom
or
ds
call
and
inc
sub
xchg
sbb
scas
jge
aam
call
or
push
or
xchg
pop
je
mov
mov
push
lods
sbb
or
sahf
std
mov
and
mov
test
adc
fstp
push
rdtsc
mov
pop
jmp
enter
xor
mov
add
sbb
pop
cmp
xor
dec
add
pop
add
inc
imul
sub
cmp
(bad)
jge
and
rol
rol
lahf
(bad)
jp
sbb
or
dec
rcr
ins
inc
fdiv
adc
dec
mov
jbe
(bad)
je
or
movq
repnz
ins
aam
inc
and
inc
rcr
or
xor
hlt
ds
jbe
out
mov
arpl
dec
jno
cmp
mov
cdq
movs
mov
sti
dec
out
add
or
call
add
dec
clc
outs
(bad)
cmp
jg
test
das
cwde
xor
jne
cmp
and
aaa
xchg
outs
and
fwait
sbb
or
mov
fdiv
inc
add
xchg
aad
ss
lock
rcl
jg
call
and
cmp
mov
mov
sub
mov
sub
jns
push
dec
lods
and
sub
push
mov
push
les
or
test
mov
jecxz
push
outs
adc
aam
jmp
pop
cmc
daa
adc
les
shl
lods
imul
int
sahf
out
inc
enter
pop
mov
aaa
lock
fld
pusha
xchg
mov
shl
in
and
es
xor
rol
jbe
pop
dec
push
jg
ds
call
mov
sub
lods
fcmovne
outs
rol
or
outs
mov
or
sbb
mov
rol
pop
mov
clc
jecxz
cmp
jns
test
cmp
cli
adc
sub
xchg
pop
out
stos
cmp
pushf
repnz
js
sbb
(bad)
fsub
xchg
push
jne
daa
fcomp
pop
outs
push
xchg
fwait
shl
xchg
pop
sbb
fisttp
fs
mov
jmp
leave
and
jb
xor
jp
pop
pop
add
mov
scas
xor
lahf
mov
out
enter
cld
int3
movaps
push
inc
std
dec
into
jle
inc
int3
dec
in
(bad)
jecxz
loope
pop
mov
stos
syscall
inc
or
xor
xor
fidiv
sub
sub
push
push
bound
mov
pop
scas
fidivr
jb
push
pop
mov
pop
imul
add
gs
imul
aas
push
dec
(bad)
div
pop
sub
dec
in
inc
xchg
pop
inc
cmp
push
dec
cmp
ds
xchg
lahf
and
pop
movs
shl
daa
mov
push
push
js
in
call
pop
pop
lea
adc
push
mov
mov
sub
add
aad
fimul
dec
cld
jmp
icebp
pushf
jbe
push
inc
sub
mov
jecxz
retf
hlt
mov
dec
arpl
lds
stos
rcr
dec
mov
pop
data16
movhps
xchg
int3
mov
xchg
pop
add
inc
and
xbegin
xor
out
lea
int3
push
jbe
xchg
push
xor
mov
std
fidiv
aaa
jmp
jno
sub
adc
jo
jmp
dec
jmp
mov
cmp
jbe
retf
mov
dec
mov
inc
dec
clc
aas
aaa
aaa
outs
jl
adc
mov
xor
or
mov
adc
aad
fmul
xchg
push
data16
xor
popf
mov
ret
cmps
sbb
inc
cs
lods
jg
js
dec
adc
xchg
shl
pop
and
inc
or
(bad)
adc
jp
mov
adc
movs
daa
pop
xchg
int3
mov
push
aas
xor
mov
jge
adc
xchg
xor
push
pop
aas
mov
cmp
mov
mov
sub
pop
inc
pop
retf
loop
stos
mov
icebp
or
pop
test
or
mov
shl
aam
pop
movs
mov
call
idiv
bound
dec
mov
lahf
fbld
arpl
sbb
cld
mov
ja
popf
jb
pop
mov
pop
mov
in
adc
mov
mov
add
leave
loope
(bad)
loopne
shl
adc
pusha
push
mov
mov
enter
js
xor
mov
pop
ficomp
and
ficomp
test
jo
or
in
call
mov
jl
outs
nop
jge
data16
mov
mov
jne
aam
jne
sub
jbe
repnz
aad
jecxz
call
push
mul
or
cli
xor
pop
xchg
hlt
push
mov
inc
mov
inc
mov
aaa
bound
in
test
adc
ja
jmp
in
cmp
sub
popa
xchg
cs
cdq
pop
lods
in
mov
popa
shr
por
push
pop
call
cs
cmp
pop
jae
leave
sub
or
cmc
gs
cmp
int
mov
jno
jmp
mov
inc
pop
mov
outs
shl
jb
test
imul
icebp
dec
pop
lahf
fst
mov
mov
enter
sub
mov
xchg
jle
sbb
retf
test
sbb
cdq
push
int3
not
xlat
jecxz
out
inc
jne
aad
mov
aas
ucomiss
sbb
pop
outs
repz
or
pop
dec
enter
sbb
inc
sub
pop
mov
sub
mov
(bad)
aam
add
pop
or
stos
lds
mov
and
clc
mov
push
outs
dec
mul
mov
in
pop
in
dec
pop
xchg
les
or
out
out
cmp
push
adc
jae
mov
vpshld
dec
(bad)
(bad)
daa
imul
adc
pop
test
jno
jns
es
push
leave
daa
bound
sub
inc
add
rcl
mov
adc
jns
leave
retf
mov
jle
inc
add
adc
pop
data16
pushf
sti
jne
call
ret
call
pop
mov
lea
mov
or
jo
cmp
push
test
mov
ret
jno
bound
mov
iret
rcr
sbb
lods
std
dec
mov
iret
push
daa
call
jb
test
xor
pop
sub
mov
nop
inc
lock
xor
shl
fsub
xor
ds
adc
mov
icebp
adc
add
or
push
movs
dec
cmps
int3
lods
imul
daa
jae
or
ret
sbb
push
jge
cmp
jmp
or
pshufw
int3
fidivr
sub
add
push
or
ja
add
sbb
jmp
mov
mov
or
sbb
xor
jnp
sbb
ret
lea
mov
(bad)
popa
movs
je
pusha
mov
aaa
std
add
adc
imul
mov
je
mov
into
(bad)
fmul
out
xor
popf
jge
dec
in
cmps
out
sub
mov
jmp
inc
xchg
mov
jae
mov
push
push
inc
out
push
and
aas
add
mov
mov
push
push
mov
clc
ud0
sub
in
clc
add
jns
arpl
add
jg
mov
pop
inc
xchg
fnstsw
aam
jmp
cwde
and
clc
jns
stos
into
cld
mov
or
xchg
mov
scas
pop
mov
mov
inc
jl
mov
cmps
rol
(bad)
mov
ror
jecxz
sbb
jecxz
pop
dec
xor
xchg
jmp
mov
mov
push
or
pop
clc
xchg
(bad)
mov
cld
xchg
jnp
sbb
push
adc
pusha
add
and
js
push
adc
loopne
fdivr
pop
imul
lods
sbb
xchg
sbb
or
adc
push
movs
stos
rcl
ins
movs
fadd
movs
into
lahf
mov
retf
popf
cwde
les
xor
(bad)
pop
adc
adc
mov
pop
pop
(bad)
fcomp
or
shl
cmps
ficomp
es
scas
ret
mov
xchg
mov
(bad)
shl
sub
jl
xchg
mov
inc
sbb
push
jle
loop
cs
cmps
jl
in
pop
aam
mov
ins
(bad)
in
in
dec
inc
jmp
loopne
out
ins
xlat
repz
call
jb
cdq
xlat
fiadd
movs
push
(bad)
and
stos
fisttp
cmp
push
xchg
movs
int3
or
shr
sbb
and
xor
mov
and
pop
adc
loopne
cmp
aaa
sar
loopne
push
das
push
adc
mov
sbb
(bad)
and
sbb
inc
nop
outs
fucomip
pushf
sbb
dec
mov
test
out
pop
jb
stos
cdq
fstp
dec
xlat
ins
ficom
clc
ficom
ins
mov
xchg
mov
mov
test
pop
fwait
mov
aaa
add
pop
clc
inc
and
xchg
popa
fistp
mov
or
mov
push
pop
mov
or
movs
cmps
(bad)
call
pop
repz
setno
cmp
loope
js
jae
shr
and
cs
mov
jb
push
pop
mov
cmp
inc
xor
fst
rcl
mov
iret
aaa
test
movs
mul
jmp
mov
mov
and
popf
std
add
sbb
xor
in
inc
jmp
inc
push
mov
nop
push
xlat
stos
sbb
jnp
jmp
dec
out
add
push
popa
(bad)
jl
mov
aam
mov
mov
jnp
inc
mov
dec
xor
inc
xor
daa
gs
push
xor
popa
shr
idiv
ror
dec
out
shl
pushf
cwde
push
(bad)
out
cmp
sub
fwait
mov
test
int
xchg
dec
jae
xchg
call
addr16
in
addr16
je
cmp
and
lds
out
repz
inc
sbb
(bad)
dec
add
and
inc
jb
xchg
xchg
outs
pop
cli
test
xor
clc
cmp
cs
cli
mov
stos
mov
loopne
mov
sbb
cli
add
addr16
xor
or
adc
sub
mov
pusha
test
mov
repnz
jnp
mov
dec
call
xchg
ss
arpl
push
ret
add
bound
test
lahf
imul
sahf
adc
mov
sub
popaw
jns
dec
xchg
push
inc
adc
into
mov
nop
int
shr
rcr
cwde
mov
vpmacsww
mov
jp
add
push
mov
mov
inc
cmc
ror
xchg
retf
and
(bad)
rcl
jg
xchg
sbb
mov
je
nop
mov
nop
cwde
mov
add
pop
shl
mov
sar
push
dec
xor
jne
inc
mov
xchg
xchg
addr16
das
push
and
pop
xchg
mov
cld
iret
sbb
fild
aad
enter
sar
out
or
push
mov
cwde
(bad)
mov
iret
sahf
dec
add
xor
sbb
xchg
sbb
mov
mov
dec
adc
mov
push
hlt
repz
in
enter
shl
or
xchg
push
add
inc
pop
push
ss
iret
mov
jmp
stos
(bad)
popf
xchg
loopne
ror
and
jo
stc
mov
mov
mov
xchg
loop
repz
xor
or
dec
push
cmp
sub
(bad)
cmps
stc
xchg
add
add
sub
push
test
lods
(bad)
jns
jae
jb
clc
or
aaa
dec
push
scas
mov
cwde
std
lods
fisttp
out
scas
jmp
enter
jmp
pop
call
ret
ins
sub
test
push
and
je
shr
icebp
mov
shr
mov
scas
ret
test
sub
add
inc
adc
or
mov
out
xchg
movs
aam
ss
cmc
scas
call
mov
jnp
mov
xchg
ret
mov
dec
cdq
leave
mov
outs
jmp
test
sub
jp
(bad)
stos
jmp
push
aaa
inc
adc
adc
inc
sbb
pop
push
loope
in
repz
outs
xor
or
mov
jmp
dec
sub
add
mov
fcmovu
cmps
fadd
je
mov
test
mov
loop
lods
jmp
and
pop
or
inc
or
sub
push
cmp
ja
inc
ss
and
inc
cmp
jo
push
mov
cmc
xchg
in
clc
mov
adc
fcomp
jl
push
and
sahf
fst
push
popa
xor
leave
out
mov
rcr
test
mov
xchg
aad
sar
retf
push
adc
dec
in
js
jne
inc
cmp
mov
test
dec
mov
call
or
jnp
mov
jmp
mov
cli
mov
mov
mov
cdq
jmp
les
cli
(bad)
fcomp
test
mov
lods
call
sbb
(bad)
add
aad
loop
test
rcl
mov
mov
mov
out
stos
fcom
mov
nop
shl
rol
dec
and
popa
es
mov
sbb
int3
or
mov
scas
stc
mov
aad
(bad)
fs
inc
add
pop
stos
ror
fldenv
push
add
pop
or
dec
or
cmp
pop
ret
xchg
in
div
jne
and
mov
pop
das
js
dec
std
dec
xor
push
cmp
sub
pop
adc
mov
lock
loopne
shl
popf
neg
xor
xchg
mov
mov
lods
cli
mov
xor
sbb
aaa
arpl
test
sbb
dec
aas
push
mov
js
inc
dec
ret
mov
mov
adc
ret
mov
jmp
xchg
shl
mov
sub
ja
inc
or
and
pop
or
jnp
inc
jecxz
push
add
js
xor
cmp
shl
inc
pcmpeqw
jg
pop
or
and
std
mov
nop
jmp
aaa
push
daa
jae
jo
adc
sub
imul
push
and
pop
sub
or
jp
mov
pop
push
pop
push
dec
sbb
cmp
punpckhwd
inc
xor
jo
push
pop
dec
sub
pop
push
pop
sub
push
inc
or
rol
rcl
shr
sahf
call
xchg
hlt
shl
jbe
inc
add
outs
out
and
push
adc
in
div
inc
sub
jbe
div
clc
retf
in
out
fdiv
jb
add
push
retf
scas
imul
push
outs
loopne
loop
frstor
cwde
std
lods
fisttp
aaa
je
mov
xor
je
test
aam
addr16
push
std
cs
push
pop
push
outs
xor
rol
add
inc
pop
push
cmps
aad
ret
stos
mov
shr
nop
loop
lock
lea
xchg
mul
jns
pop
pop
mov
loopne
call
pop
adc
iret
sub
pop
(bad)
sub
es
(bad)
in
out
sahf
retf
std
mov
xchg
les
das
js
push
mov
jno
jns
pop
std
cmp
inc
push
push
pop
daa
adc
arpl
jae
pop
repz
lahf
test
cmps
cld
scas
les
dec
push
pop
sbb
and
lds
cld
dec
or
push
add
xor
dec
sbb
jns
push
adc
push
dec
jmp
push
sbb
bound
push
sbb
das
inc
sub
aas
imul
dec
xor
ds
call
sub
fst
mov
mov
inc
cmp
jbe
data16
mov
jbe
cmps
ins
loope
repz
mov
outs
or
inc
xor
push
movs
mov
retf
sti
mov
out
fisttp
(bad)
ja
cld
stos
ficomp
cmp
pop
sub
or
cs
or
dec
sbb
xor
jae
inc
push
adc
ins
pop
dec
or
sti
pop
es
imul
fcomp
fisub
push
or
nop
les
(bad)
mov
xchg
ins
das
inc
xor
push
movs
mov
retf
sti
mov
out
push
add
jb
pop
mov
push
dec
cmp
jo
aad
out
xchg
cdq
int
test
xchg
in
xchg
leave
lea
mov
test
sub
or
jge
dec
push
(bad)
aas
push
xor
aad
inc
sbb
and
xchg
in
repnz
lock
daa
adc
popa
sbb
dec
sub
dec
push
jnp
mov
leave
(bad)
fistp
sub
enter
lods
(bad)
mov
mov
mov
bound
push
or
jns
imul
dec
sbb
lds
cmp
call
adc
push
add
shr
pop
pop
pop
outs
xor
or
jae
inc
add
dec
addps
fwait
icebp
cmps
out
cld
stos
psadbw
loope
leave
mov
xlat
stc
dec
sbb
dec
das
jle
sbb
xor
(bad)
ins
push
dec
sbb
push
jge
add
jne
dec
adc
icebp
cmps
loop
xlat
movs
repnz
fcomp
aaa
pop
cmp
sbb
ss
or
jge
in
sub
pop
sbb
jle
jbe
dec
scas
xchg
cld
lahf
in
mov
movs
std
scas
jmp
push
cmp
mov
es
dec
sbb
xor
(bad)
fistp
inc
push
push
pop
inc
sub
clc
mov
ret
mov
leave
add
add
cli
sbb
sti
lods
call
or
sub
sbb
pop
xchg
fs
aaa
push
sub
add
cmp
dec
or
test
cmps
jmp
cld
inc
xor
jnp
pop
in
dec
sub
jecxz
lock
mov
mov
mov
out
out
xchg
into
popa
or
push
and
clc
stos
out
mov
pop
sbb
add
addr16
les
call
popa
sub
mov
sbb
sbb
lahf
push
aas
jae
mov
(bad)
in
hlt
mov
sub
sub
jmp
out
retf
mov
out
xchg
xchg
ret
test
scas
cmp
dec
or
mov
loop
and
sub
or
xor
dec
ds
push
mov
mov
test
lods
fmul
mov
sub
loope
dec
or
jno
push
cmps
ret
xchg
shl
mov
lods
in
test
jmp
mov
stos
ja
dec
add
jne
out
mov
xor
jecxz
dec
jmp
fistp
adc
push
jp
imul
mov
push
inc
cmp
xor
sbb
sar
icebp
mov
scas
jmp
shl
pop
jbe
push
sub
mov
shl
mov
mov
cmp
sub
inc
xor
adc
pop
cld
pop
or
(bad)
push
dec
xchg
fsubr
ror
push
xor
inc
add
or
jg
dec
adc
sbb
xor
sbb
mov
mov
sbb
addr16
jge
jg
cld
mov
nop
ret
add
popa
and
(bad)
leave
lahf
fild
test
mov
mov
clc
xchg
call
mov
mov
leave
sahf
fidivr
xchg
in
ret
test
jle
pop
arpl
lock
mov
xchg
sti
cmps
movs
aad
rcr
push
and
cmp
or
js
ins
sub
leave
mov
loope
jmp
jecxz
ret
xchg
jmp
movs
rcr
add
je
ret
sahf
leave
mov
fs
ss
stc
and
and
addr16
aas
repnz
jecxz
xlat
movs
repz
mov
xchg
out
out
jmp
push
daa
jae
bound
popa
mov
std
xchg
dec
cdq
jmp
out
mov
sub
ins
sub
inc
ds
bound
mov
call
mov
lods
call
pop
sub
es
or
pop
cmp
cwde
fnstenv
xchg
lods
xlat
(bad)
fnsave
rol
data16
bound
loop
out
sbb
pusha
or
dec
push
out
cwde
shr
cmps
ret
mov
fwait
add
jbe
inc
sbb
stc
mov
pop
or
pop
inc
in
cwde
iret
mov
xchg
lds
ins
cmp
out
jmp
or
jno
arpl
inc
adc
out
into
mov
das
push
maxps
cmp
add
xchg
push
sub
or
aam
fimul
call
add
pop
push
adc
lods
enter
std
xchg
mov
pop
push
adc
jge
inc
xor
jne
jno
pop
sub
xor
jmp
cdq
into
sub
push
sub
sub
jno
push
adc
in
inc
adc
inc
and
pop
loope
cld
stos
fcomp
lahf
hlt
lahf
cld
fdiv
ja
dec
xor
push
xor
inc
dec
(bad)
sub
sbb
pop
repnz
adc
pop
outs
cmp
inc
xor
pop
pop
push
dec
outs
scas
int
jmp
xor
lock
scas
int
jmp
pop
sbb
and
inc
sub
pop
ds
dec
push
dec
and
jae
push
adc
push
into
popf
(bad)
dec
or
js
aam
hlt
movs
iret
cmps
lds
pop
sbb
sbb
mov
fwait
(bad)
scas
fmul
bound
data16
jbe
push
jecxz
push
push
sub
cmps
ret
mov
call
jnp
js
cmc
xchg
in
div
popa
and
out
lock
in
mov
ins
imul
pop
inc
xor
push
mov
leave
cwde
hlt
sub
ja
push
adc
mov
mov
push
and
dec
test
repnz
mov
mov
xchg
rcl
(bad)
scas
int
aad
pop
sub
inc
adc
ret
adc
std
test
cmp
dec
adc
imul
mov
test
inc
loopne
ret
popa
ss
jle
pop
adc
cli
mov
fild
adc
lods
js
push
and
int
in
mov
je
jno
dec
aaa
outs
pop
retf
mov
inc
cmp
pop
sbb
leave
mov
jo
inc
cmp
je
lock
lds
jae
inc
add
cmp
mov
mov
dec
xor
aas
jnp
push
scas
(bad)
mov
lahf
sub
add
pop
xor
loope
rcr
jns
pop
or
fdiv
lea
aad
and
mov
mov
adc
data16
inc
adc
fwait
int3
mov
or
pop
cmp
gs
jo
inc
sbb
pop
xlat
mov
xchg
(bad)
mov
shl
iret
cmc
cld
xchg
test
pushf
fcom
fisubr
repz
ja
jg
pop
adc
ss
adc
imul
inc
add
push
leave
mov
xchg
ret
mov
test
mov
std
scas
mov
cwde
std
lods
fmul
sub
sub
and
inc
xor
ret
xchg
(bad)
retf
jb
call
mov
fld
ret
xor
je
jo
xor
inc
push
push
pop
push
pop
push
adc
pop
mov
jne
dec
jmp
fmul
push
inc
add
jns
ret
je
pop
sub
push
loope
adc
push
jne
jl
mov
out
pop
dec
sbb
dec
rcr
test
shl
retf
mov
aaa
inc
xor
pop
pop
cmovnp
jnp
pop
or
and
mov
fisttp
mov
mov
mov
rcl
test
mov
push
adc
lea
push
add
je
xchg
scas
fimul
inc
sbb
daa
dec
sub
and
sbb
sbb
push
imul
pop
or
lock
(bad)
xchg
rcr
stos
leave
mov
into
mov
mov
adc
jo
adc
xor
inc
sub
outs
sub
xor
inc
pop
push
adc
push
sbb
jbe
jle
pop
adc
push
ins
cmp
push
sbb
retf
(bad)
fstp
cmp
jno
inc
xchg
cmps
fadd
cmp
pushw
inc
imul
imul
ja
push
and
mov
mov
mov
jae
inc
sbb
mov
sub
pop
sbb
sbb
outs
and
cmps
sub
and
inc
repnz
sub
imul
test
cmps
out
cld
stos
ja
aad
jecxz
jmp
sbb
and
adc
mov
dec
or
inc
xor
test
movs
cmc
sahf
clc
fwait
and
mov
mov
stos
repnz
fisttp
pop
pop
sbb
cmp
add
jl
out
sbb
pop
add
adc
xchg
icebp
mov
pusha
xchg
out
loop
(bad)
mov
loopne
call
shl
xchg
leave
call
(bad)
int3
movs
rol
mov
mov
hlt
xchg
xchg
shr
les
push
adc
jb
jns
pop
or
imul
xlat
scas
div
or
and
xchg
jmp
sub
inc
sub
push
add
daa
push
sbb
imul
mov
in
test
xchg
out
loop
(bad)
mov
jns
imul
sub
mov
popf
hlt
adc
jbe
jle
pop
adc
retf
mov
shl
je
arpl
div
into
xlat
inc
cmp
pop
xor
mov
jmp
pop
cmp
dec
sbb
push
pop
jbe
jne
stc
add
push
xor
and
outs
sub
inc
or
xor
jbe
dec
xchg
mov
stos
in
test
out
les
in
les
push
adc
jg
inc
jmp
cmc
push
in
mov
fbld
aaa
pop
sbb
adc
push
mov
mov
jae
(bad)
sbb
adc
outs
cmp
push
inc
or
out
popf
mul
pop
or
or
jae
cmp
push
push
pop
push
adc
or
cmovle
add
cdq
(bad)
xchg
aad
iret
mov
xchg
lds
loop
loop
cmp
dec
das
jnp
inc
add
inc
or
les
mov
mov
imul
sbb
loope
(bad)
dec
sbb
icebp
fwait
or
xchg
mov
es
popa
mov
xchg
rol
inc
adc
mov
jmp
std
cmp
jb
mov
inc
lods
clc
popf
fldcw
arpl
dec
cdq
fsubr
(bad)
xchg
(bad)
test
stc
mov
inc
xor
mov
cli
les
sub
sbb
leave
xchg
(bad)
sbb
xchg
fnstcw
xchg
fstp
and
sbb
gs
stc
sbb
push
xchg
lock
retf
repz
es
scas
cmp
add
retf
inc
pop
cmp
lock
sbb
lods
push
fstp
xor
mul
mov
xchg
fst
dec
gs
addr16
xchg
inc
jnp
aaa
pop
xchg
les
fst
sbb
imul
sbb
popf
sub
dec
adc
movs
(bad)
nop
(bad)
repz
pop
xchg
into
movs
out
mov
cli
cdq
sub
xor
lea
leave
push
cwde
ror
xchg
add
mov
adc
mov
inc
xor
pop
sub
or
dec
nop
mov
in
mov
loop
adc
add
pop
dec
and
dec
cmp
or
aaa
add
and
push
es
jp
dec
adc
xlat
cwde
fadd
xor
scas
test
cmp
or
call
push
jecxz
cwde
shl
mov
aas
outs
scas
(bad)
mov
jp
gs
inc
fwait
lock
aas
outs
sub
add
xor
enter
enter
xchg
out
sar
movs
out
fcomp
inc
ret
xchg
cmps
xchg
clc
and
dec
inc
or
sub
sub
lds
call
(bad)
std
xchg
xchg
les
dec
add
cmp
push
push
aam
popa
sub
test
xchg
adc
mov
adc
cmp
aaa
fstp
pop
adc
sub
inc
or
sbb
adc
ss
add
and
dec
and
mov
(bad)
mov
mov
mov
dec
out
xlat
mov
push
cmp
add
adc
pop
add
stos
fisttp
movs
in
test
sbb
sahf
in
mov
daa
inc
pop
push
pop
pop
push
push
jle
outs
push
push
pop
inc
add
push
or
fstp
clc
loop
fadd
rol
mov
add
mov
sub
lods
fist
das
jae
inc
call
fild
test
mov
mov
add
jb
icebp
xchg
shl
je
repnz
out
mov
sbb
or
out
jo
lods
jmp
add
ja
cld
pushf
fdiv
dec
cmp
adc
sbb
mov
stos
std
mov
mov
int
push
adc
push
jae
ja
les
sub
leave
jnp
(bad)
call
mov
jg
aaa
or
sub
pop
add
push
arpl
add
and
jg
add
imul
mov
out
lods
loopne
add
bound
jmp
and
jecxz
add
dec
stc
mov
stos
sbb
jg
sbb
sub
push
in
lods
sbb
jp
inc
out
mov
mov
ja
and
sub
cmp
and
test
mov
in
cdq
(bad)
out
mov
ins
sub
mov
fisub
call
inc
adc
pop
cs
ret
cmps
aam
add
jmp
cld
push
adc
add
jp
push
fisttp
daa
jge
leave
sbb
fcomp
fwait
cmp
adc
sti
les
push
sbb
mov
je
dec
add
ja
(bad)
fcomp
call
std
cmps
enter
pop
or
push
call
imul
std
stos
aaa
and
mov
xchg
retf
jmp
jp
call
data16
mov
lahf
retf
and
out
fnstenv
test
pop
sbb
(bad)
fimul
pop
mov
stos
cld
mov
adc
das
and
imul
mov
ins
or
jmp
data16
sbb
mov
mov
imul
adc
xchg
jle
lds
ja
add
lods
not
jge
cmp
cdq
fisttp
inc
inc
call
retf
dec
or
xor
bound
sbb
les
cwde
pop
pop
fadd
xor
lods
sar
out
(bad)
pushf
int3
cmps
mov
xor
test
aam
cwde
mov
adc
fmul
fmul
and
sub
add
add
bound
dec
sbb
cmp
sbb
ja
jl
or
dec
add
es
outs
sub
push
jle
arpl
ins
sub
dec
sbb
(bad)
lahf
in
mov
leave
xchg
ret
xchg
repz
mov
or
inc
cs
and
js
dec
adc
dec
or
outs
cmp
dec
cmp
in
loope
xlat
(bad)
fnsave
cmp
inc
sbb
and
into
popf
cmps
shl
inc
cmp
cwde
clc
nop
std
aas
stos
cmc
mov
pop
and
int
repz
dec
loopne
(bad)
mov
cmps
push
or
jmp
and
sbb
cld
mov
mov
test
lods
dec
ds
push
pop
fistp
sahf
neg
ror
cmp
out
dec
jl
xchg
(bad)
addr16
jge
dec
sbb
test
xor
fcomp
add
ret
xor
lds
in
mov
mov
in
fdiv
lods
push
pop
push
push
xor
iret
stos
ret
call
push
pop
xchg
inc
adc
dec
sub
test
sahf
ficom
xor
pop
and
jg
pop
push
dec
cli
mov
adc
or
and
cmc
movs
into
mov
cwde
fistp
sub
into
and
rcl
cs
dec
cli
lods
inc
inc
daa
push
add
pop
xor
pop
and
pop
or
adc
fdiv
lahf
xchg
lock
cli
xchg
sti
cwde
jmp
retf
mov
in
repnz
test
jns
and
jecxz
test
sub
stos
enter
mov
fs
mov
cmps
xlat
popf
ja
cmp
adc
test
rcr
cmp
shl
xchg
and
bound
std
push
mov
inc
and
outs
sub
das
pop
add
push
sti
push
ins
in
hlt
movs
aam
movs
in
call
xchg
mov
(bad)
xchg
sub
cmp
inc
cmp
leave
cmps
ror
pusha
add
xchg
out
popa
(bad)
cld
mov
ja
jae
push
pop
and
push
or
cmp
pop
dec
cmp
in
xor
cs
xchg
jmp
and
or
xchg
mov
sti
lahf
in
mov
push
or
jg
(bad)
mov
popa
loopne
inc
dec
pop
outs
xor
(bad)
mov
sbb
dec
xor
mov
or
in
adc
inc
add
les
inc
and
ins
inc
test
imul
gs
adc
and
pop
cwde
ret
mov
jb
fs
pusha
push
inc
mov
imul
int3
jp
pop
jecxz
mov
jle
pop
push
in
cwde
fldcw
mov
mov
es
imul
xor
test
mov
push
jle
jle
ins
sub
cmc
cs
jns
xchg
mov
nop
jbe
imul
xor
xor
lods
fisttp
add
clc
sbb
and
dec
push
pop
enter
fidiv
jle
and
shl
fs
xchg
stos
rcl
retf
mov
pop
or
xor
in
dec
add
sub
inc
add
out
or
jae
inc
add
mov
mov
or
mov
test
test
add
xor
adc
jno
outs
test
add
mov
sbb
jge
addr16
sub
rol
or
push
mov
cmps
out
push
sub
add
or
add
xlat
mov
int3
test
mov
lds
inc
adc
jne
in
scas
(bad)
mov
scas
mov
ror
stos
fdiv
xor
and
mov
mov
ss
rcl
mov
mov
xchg
iret
pushf
ficomp
call
ins
repnz
nop
int3
scas
fbstp
into
xchg
fist
mov
div
fnstsw
inc
out
xchg
fist
mov
sbb
div
dec
add
dec
sub
inc
fidiv
js
pop
and
mov
out
aam
loope
jmp
test
xchg
inc
ss
pop
xor
and
pop
lock
mov
into
jb
ds
loop
jmp
cmp
cmp
fdivr
nop
shr
pop
sbb
mov
adc
inc
and
call
addr16
sub
inc
push
arpl
and
dec
aas
jle
pop
push
inc
pop
inc
adc
outs
xor
push
jecxz
ins
or
xor
shr
imul
pop
cmp
mov
or
jns
pop
cmp
add
sub
or
stc
mov
(bad)
stos
in
test
jecxz
rcl
xchg
cmp
jno
sub
and
outs
ds
pop
fs
inc
add
pop
or
test
xchg
leave
mov
jmp
sar
cld
js
dec
adc
pop
sbb
adc
add
data16
dec
sbb
mov
enter
bound
jne
imul
sub
push
xor
imul
sbb
pop
sbb
mov
fisttp
bound
push
push
xor
cld
mov
bound
sti
cmps
div
adc
inc
lock
sbb
dec
cs
repz
mov
mov
popf
bound
ror
enter
mov
cs
push
pop
imul
dec
sub
call
sbb
sbb
test
jle
jp
rol
(bad)
xor
mov
dec
sub
into
xor
dec
mov
push
mov
daa
jo
inc
mov
fdivr
fild
jbe
jecxz
jmp
ds
imul
repnz
movs
shl
sbb
jp
push
sbb
mov
pop
stc
mov
jno
mov
or
jmp
sbb
mov
xchg
popf
hlt
mov
xchg
dec
andps
loop
(bad)
cwde
xchg
mov
inc
push
pop
push
(bad)
ror
mov
push
cmp
mov
or
mov
imul
push
push
sub
in
fisttp
std
sub
ret
pop
cmp
mov
push
push
jg
shl
cli
xchg
je
jl
jb
pusha
sub
adc
leave
cmp
arpl
sub
adc
cli
test
into
call
sbb
add
lock
test
fwait
int3
mov
imul
push
dec
sbb
enter
int
mov
push
xor
lds
ja
loope
out
jmp
pop
adc
jbe
push
or
push
test
mov
nop
fnstcw
sbb
push
aaa
pop
adc
cmp
aam
aas
inc
adc
and
int3
mov
fnstenv
xchg
push
push
loop
les
add
aas
push
inc
pop
and
mov
mov
mov
into
cwde
fsub
inc
loopne
inc
and
dec
cmova
inc
cmp
and
mov
cmp
jge
sub
inc
sbb
ja
dec
or
push
sbb
xchg
xor
mov
mov
mov
or
aaa
into
or
call
adc
aad
(bad)
sub
lahf
out
scas
les
sahf
push
and
ins
loope
test
inc
cmp
fwait
rcl
adc
sbb
adc
mov
sbb
adc
and
adc
sbb
push
fisttp
jnp
scas
push
cmp
and
mov
mov
pop
mov
test
loop
scas
fist
movs
rcl
retf
(bad)
push
fstp
into
cdq
ficomp
not
pop
push
gs
repz
dec
es
pop
push
in
out
fs
mov
push
jle
and
jmp
mov
mul
jae
jl
add
and
inc
test
xchg
xlat
gs
ins
and
dec
sbb
xchg
cli
stos
(bad)
xchg
sar
in
rcr
cmp
mov
mov
jbe
sbb
add
jge
jmp
push
cmp
sahf
ficom
mov
or
add
add
xchg
or
jae
pcmpeqd
sub
ds
pop
push
retf
bound
dec
or
mov
call
inc
sbb
push
idiv
inc
adc
sub
sbb
ins
cs
sub
(bad)
mov
icebp
mov
adc
xor
shl
cdq
popf
jl
jmp
mov
adc
das
pop
addr16
cmp
push
cmp
mov
mov
mov
stos
jno
jl
repz
je
movs
repz
test
xchg
repnz
ror
pop
and
jge
pop
push
jns
ins
out
in
add
push
mov
scas
pop
jno
jecxz
(bad)
clc
mov
je
push
push
and
fisttp
cwde
mov
mov
mov
xchg
add
ss
mov
mov
lods
call
retf
mov
add
test
xlat
mov
adc
push
inc
sub
and
jno
cmp
ds
dec
mov
xor
je
das
mov
sub
and
mov
sbb
add
mov
popa
repnz
fwait
call
call
push
push
movs
hlt
sub
cmp
aaa
and
push
sbb
movs
cld
mov
adc
sub
adc
cmp
icebp
sar
xchg
in
fld
minps
data16
inc
adc
add
(bad)
mov
mov
jns
jg
inc
scas
in
add
icebp
push
bound
jnp
das
sbb
pop
jae
and
adc
mov
jle
jnp
and
mov
mov
mov
or
push
sbb
adc
outs
jmp
cwde
movs
icebp
mov
cmp
mov
gs
into
mov
out
sub
outs
cmovg
pop
cs
clc
and
leave
jmp
xor
add
jnp
xor
inc
out
dec
cmp
xor
jae
imul
lods
icebp
mov
mov
mov
idiv
ror
retf
inc
pshufw
and
adc
lods
in
mov
xchg
jp
pop
out
jg
pop
sbb
imul
js
xor
cmp
or
jge
inc
and
or
and
retf
add
loop
rol
out
mov
push
dec
test
pushf
push
sub
xor
in
lds
xor
cld
dec
cmp
iret
aam
leave
popa
adc
and
adc
rol
outs
sub
fs
jmp
les
mov
clc
inc
push
bound
dec
or
push
cmp
pop
sti
add
int3
mov
icebp
mov
mov
add
jp
ins
add
xor
daa
ja
je
fisttp
mov
sbb
sub
frstor
leave
ds
adc
adc
add
sub
pop
push
ss
scas
int
repnz
fisttp
cmp
mov
test
iret
pusha
sbb
test
mov
push
or
jno
mov
mov
push
adc
ret
mov
in
sahf
fbld
cmp
daa
retf
clc
or
aad
popa
cmp
push
pop
dec
mov
push
aas
dec
mov
push
call
loopne
cmc
movs
in
dec
cs
add
jmp
jl
lods
push
imul
xchg
loopne
cmps
cs
sti
mov
mov
imul
cmp
jnp
inc
xchg
hlt
bound
ins
repnz
aad
dec
or
loop
push
push
or
into
movs
aam
fstp
data16
or
jns
cmp
movs
(bad)
mov
inc
add
fsubr
pop
jecxz
aad
fbstp
add
icebp
test
lock
inc
nop
or
adc
sub
mov
mov
xchg
iret
mov
inc
cmp
in
neg
add
push
xchg
je
loope
test
lahf
mov
arpl
jae
xor
push
ds
in
lahf
pop
or
jno
push
in
push
enter
lds
lahf
fist
fwait
(bad)
xrelease
or
xor
(bad)
mov
push
push
inc
sub
mov
mov
mov
adc
fnsave
pop
cdq
rcl
bound
or
inc
jmp
clc
pusha
mov
lock
je
pop
push
aad
cmps
lods
jge
dec
cmp
xor
jns
sub
icebp
sahf
retf
lods
fisttp
ror
sahf
fimul
hlt
jp
add
rcl
xchg
mov
cli
adc
push
add
sub
data16
shr
shl
(bad)
shl
pop
repz
jno
sub
jae
dec
in
imul
sbb
lods
mov
mov
mov
sub
and
inc
sbb
xchg
fldcw
xchg
in
test
mov
jno
aas
imul
dec
(bad)
jg
ins
add
mov
jecxz
jecxz
rcl
sbb
jno
ins
invd
jle
daa
push
je
pop
lds
push
call
clc
xchg
cmps
cmps
int3
jnp
mov
mov
int
into
mov
mov
frstor
ja
dec
in
dec
or
push
pop
aam
mov
jle
sub
mov
cmp
jne
or
pop
(bad)
cmps
iret
(bad)
in
scas
(bad)
mov
cmp
push
jl
jge
push
push
cmp
(bad)
jge
imul
sub
dec
fwait
out
icebp
xchg
sti
mov
je
ins
adc
jmpw
xchg
aam
call
fnstenv
or
(bad)
cmps
fdiv
popa
adc
scas
mov
push
and
mov
pop
leave
rcr
push
aas
and
int
aad
cdq
imul
mov
dec
adc
dec
sbb
dec
xchg
sbb
inc
aas
outs
(bad)
jmp
jecxz
cmp
mov
xchg
xchg
or
sbb
adc
push
cmp
retf
xchg
push
je
daa
shr
mov
mov
mov
fisub
push
ss
mov
cmp
bound
das
pop
adc
ror
data16
and
loope
shl
xor
sahf
ret
mov
ss
pusha
and
out
aam
aad
jno
or
fs
in
jl
imul
adc
scas
jmp
mov
ins
sub
(bad)
and
add
mov
scas
out
outs
nop
cmp
lock
push
int3
arpl
fs
jbe
jle
cld
test
pop
or
jns
xor
out
mov
call
inc
pop
push
add
mov
add
into
cmp
imul
in
test
pushf
in
rcr
push
add
and
cmp
sar
dec
aaa
data16
sub
ffreep
test
xchg
pop
sub
pop
out
and
or
sub
rol
dec
or
data16
adc
dec
mov
add
repz
scas
call
jnp
loop
ins
xor
aaa
jnp
dec
jp
inc
(bad)
es
inc
cs
daa
rol
hlt
mov
test
adc
add
jb
icebp
xchg
sbb
cmp
xchg
rol
jp
pop
out
enter
mov
mov
imul
mov
push
push
dec
sbb
les
mov
fwait
jmp
lahf
enter
sbb
addr16
xchg
xchg
ficom
pop
sbb
xchg
leave
mov
inc
call
inc
add
jmp
fdiv
cmp
mov
nop
retf
add
inc
or
int
out
mov
inc
cmp
pop
xor
(bad)
aad
mov
data16
loopne
loop
fnstcw
pop
stc
movs
xlat
add
push
cmp
pushf
scas
call
jb
dec
ss
rcl
push
add
ret
xchg
cwde
in
data16
outs
cmp
xor
push
pop
inc
bndstx
daa
pop
sbb
sbb
clc
mov
mov
fisub
push
aaa
sbb
pop
outs
aas
dec
adc
push
push
push
ins
or
mov
mov
pushf
(bad)
jle
out
adc
enter
dec
cmp
ret
mov
adc
dec
or
dec
movntq
mov
push
xor
mov
inc
aaa
dec
out
(bad)
aas
popa
sub
xchg
jge
push
and
pop
loop
fisubr
out
test
jbe
pop
mov
push
and
push
retf
movs
push
add
or
dec
fwait
(bad)
mov
xchg
ret
test
dec
cmp
dec
aaa
ins
pop
jmp
fild
scas
imul
mov
imul
ficomp
push
cmp
xor
cmc
outs
cs
jnp
ja
xchg
ret
add
ins
mov
and
jae
inc
aaa
dec
cmps
fst
aam
mov
pop
out
dec
jae
and
mov
arpl
into
retf
lahf
leave
add
jbe
inc
xor
cmps
in
scas
jmp
xchg
dec
and
pop
xchg
adc
arpl
add
inc
xor
sbb
inc
mov
inc
cmp
scas
jmp
and
aaa
out
inc
mov
mov
in
cmp
adc
mov
pop
xor
inc
cmp
jp
daa
push
mov
jb
push
jnp
dec
add
push
xchg
out
(bad)
jb
sbb
xchg
ret
mov
arpl
adc
mov
std
mov
xlat
cmp
loop
(bad)
nop
mov
push
ins
loop
cli
gs
fild
dec
sub
cmp
pop
xor
jnp
push
cmc
leave
aaa
ins
cmp
inc
adc
adc
inc
loopne
movs
inc
es
pop
(bad)
pop
sub
adc
jge
jle
and
mov
aam
xor
mov
ins
sbb
nop
aaa
pop
xor
xor
addr16
mov
nop
lds
mov
js
xor
dec
or
pop
pcmpgtb
sbb
adc
mov
call
jle
inc
xor
pop
push
gs
push
mov
sbb
inc
push
push
cmp
sbb
adc
jbe
jle
pusha
xor
scas
fisttp
cmp
pusha
add
ja
xchg
mov
icebp
mov
gs
cmps
push
es
out
rcr
fimul
out
mov
and
loop
sbb
push
ja
inc
in
mov
xor
or
fimul
aas
inc
cmp
sub
jge
ja
xor
fs
jecxz
arpl
cmp
pop
sub
push
pop
sbb
(bad)
test
mov
mov
pop
add
dec
or
xchg
scas
xchg
rcl
pop
(bad)
scas
retf
mov
pop
sub
adc
and
gs
pop
loopne
stc
mov
pop
dec
add
pop
xor
jmp
sar
test
mov
call
add
jno
or
or
push
inc
adc
dec
pop
inc
or
(bad)
cmps
test
inc
adc
out
cmp
je
pop
cdq
fild
push
call
retf
mov
call
jl
add
(bad)
les
in
sahf
mov
enter
test
xchg
leave
xor
pop
lds
sbb
mov
xchg
iret
outs
cmp
mov
jo
ja
in
cli
scas
lds
mov
add
(bad)
cmp
std
mov
push
addr16
push
add
add
test
adc
or
jg
mov
fidiv
mov
mov
pusha
xlat
cs
outs
loop
loopne
ret
mov
xchg
mov
fwait
push
cmp
bound
cdq
xlat
add
mov
ret
or
dec
jecxz
jmp
es
mov
clc
ret
xchg
xchg
loope
in
add
sbb
and
and
icebp
mov
mov
pop
add
or
pop
test
loope
ret
mov
jns
push
or
pop
or
adc
and
pop
sbb
push
pop
mov
cmps
out
lahf
jecxz
mov
scas
aam
cdq
adc
xor
gs
add
lds
scas
jmp
mov
pop
or
test
mov
jns
cmp
push
jbe
push
mov
dec
pop
inc
in
sub
push
jo
imul
mov
seto
mov
mov
push
pop
adc
cmp
ins
rcr
mul
mov
and
pop
adc
push
movs
or
pop
or
xor
dec
jmp
mov
jne
js
pop
pop
ins
aas
jno
sub
inc
aaa
pusha
sub
call
lahf
jmp
sbb
out
lods
or
push
inc
sbb
les
loop
and
test
sub
sub
ss
or
adc
sub
jno
sbb
jae
push
cmp
shl
jg
jo
adc
aaa
jo
cs
popf
bound
mov
mov
mov
in
ret
jl
pop
in
retf
and
mov
jmp
je
adc
jne
sub
retf
xchg
cmps
fisttp
loopne
test
xchg
rol
sbb
cmp
lds
push
cmp
pop
leave
mov
hlt
push
out
jmp
mov
clc
mov
fisttp
ror
(bad)
(bad)
fstp
jno
xchg
lds
sti
add
mov
gs
(bad)
cwde
mov
test
mov
mov
dec
adc
dec
sbb
push
jbe
inc
cmp
push
aam
clc
mov
imul
std
sub
pop
push
dec
push
push
or
(bad)
fwait
repnz
je
push
fdiv
inc
pop
das
data16
sahf
fimul
mov
popa
aad
sub
adc
inc
stos
xlat
stos
(bad)
mov
scas
std
mov
ja
test
aaa
ins
cmp
jns
imul
jge
inc
jmp
push
and
mov
popf
sbb
and
jns
pop
sub
rcr
push
scas
dec
mov
mov
lods
iret
mov
imul
jmp
and
jle
push
or
(bad)
(bad)
cmc
scas
leave
(bad)
adc
inc
adc
lods
dec
xor
stc
sub
add
and
jbe
dec
adc
xor
ret
ror
and
pop
js
inc
mov
ins
mov
xchg
test
outs
cmp
push
sub
push
pop
push
jne
ret
mov
pusha
loop
movs
jmp
int
test
icebp
mov
push
sbb
je
xor
in
and
in
cmps
jmp
fwait
clc
mov
add
mov
pusha
sub
xchg
call
dec
or
loopne
hlt
mov
push
adc
add
and
dec
idiv
aad
imul
add
add
test
push
outs
or
cmp
push
adc
sub
ss
push
push
adc
or
push
push
push
adc
push
pusha
sbb
push
sbb
or
or
cmp
push
adc
and
pusha
sbb
push
sbb
or
push
sbb
or
test
push
push
push
adc
or
adc
outs
ins
pop
push
push
outs
jno
push
push
adc
or
invd
jno
push
push
adc
pop
push
push
add
sbb
or
push
sbb
push
sbb
push
test
push
outs
and
push
adc
or
and
push
adc
add
or
push
outs
or
cmp
push
adc
sub
push
adc
add
sub
push
adc
push
push
push
adc
loopne
syscall
ins
adc
push
push
adc
push
push
push
adc
loopne
inc
xor
add
or
and
push
adc
push
ss
push
adc
add
or
and
push
adc
dec
push
push
adc
xor
or
and
push
adc
push
ss
push
adc
add
or
and
push
adc
dec
push
push
adc
pusha
sbb
push
sbb
pop
test
push
outs
or
cmp
push
adc
pop
retf
push
or
push
adc
add
add
add
sub
push
adc
push
push
push
adc
loopne
lar
push
outs
and
push
adc
push
push
push
adc
loopne
inc
xor
or
or
lea
push
push
pusha
sbb
push
sbb
add
or
push
sbb
add
sbb
push
sbb
add
in
adc
outs
or
cmp
push
adc
sub
pop
(bad)
ss
push
push
adc
xor
sbb
push
outs
or
cmp
push
adc
sub
cs
ss
push
push
adc
xor
sbb
push
outs
or
cmp
push
adc
sub
push
(bad)
ss
push
push
adc
xor
adc
push
outs
or
cmp
push
adc
sub
(bad)
ss
push
push
adc
sbb
push
outs
jno
push
push
adc
pop
push
push
add
sbb
or
push
sbb
pusha
sbb
push
sbb
add
or
cmp
push
adc
sub
push
adc
ds
push
outs
and
push
adc
sbb
push
sbb
retf
push
push
push
pusha
sbb
push
sbb
add
or
cmp
push
adc
sub
push
adc
cs
push
outs
and
push
adc
sbb
push
sbb
mov
sbb
push
sbb
add
or
cmp
push
adc
sub
push
adc
pop
push
push
outs
and
push
adc
sbb
push
sbb
push
sbb
add
or
cmp
push
adc
sub
push
adc
jl
push
outs
and
push
adc
sbb
push
sbb
push
sbb
add
or
cmp
push
adc
sub
sub
push
adc
pusha
push
push
outs
and
push
adc
sbb
push
sbb
push
sbb
add
or
cmp
push
adc
sub
push
adc
sbb
push
sbb
push
push
sbb
test
push
outs
or
cmp
push
adc
sub
push
push
push
sbb
push
push
adc
dec
push
push
adc
aas
(bad)
or
push
push
adc
aas
jno
push
push
adc
sub
sbb
push
sbb
pusha
push
push
push
sbb
xor
push
sbb
rol
ss
push
push
adc
cmp
cmp
inc
push
push
adc
or
dec
push
push
adc
ss
push
push
adc
push
xor
cs
push
push
push
push
push
sub
push
push
mov
push
push
adc
push
push
add
push
push
push
push
push
push
push
pop
push
push
push
pop
push
push
push
add
push
push
add
sbb
ja
push
push
adc
push
(bad)
inc
push
push
adc
jno
push
push
adc
or
nop
test
jo
je
(bad)
test
sbb
push
sbb
nop
test
sbb
nop
test
sbb
sbb
push
or
sbb
nop
test
push
pop
push
push
enter
push
push
inc
stos
adc
enter
das
fistp
dec
nop
test
push
push
xor
push
push
add
push
push
push
adc
push
invd
sbb
pop
ins
inc
push
push
adc
sbb
sbb
sub
push
adc
adc
ss
push
push
adc
ss
push
push
adc
push
xor
pop
adc
push
push
push
push
push
or
push
adc
sbb
pop
push
push
push
push
push
push
punpcklbw
push
push
sbb
push
outs
pusha
push
push
push
sbb
xor
push
sbb
ss
sbb
inc
push
push
adc
sbb
push
push
adc
into
sbb
push
cmp
push
adc
aad
ss
push
push
adc
ss
push
push
adc
push
xor
adc
push
push
push
push
push
sub
push
adc
sbb
or
push
adc
add
push
push
push
nop
(bad)
inc
push
push
adc
jle
push
adc
jg
push
adc
xor
push
push
adc
es
push
pop
adc
push
adc
jp
push
adc
jnp
push
adc
push
ins
test
push
outs
or
cmp
push
adc
xor
push
ins
or
outs
jno
push
push
adc
sbb
adc
xor
jno
push
push
adc
movs
sar
imul
push
pop
xor
push
pop
jno
push
push
adc
rcl
push
push
push
adc
adc
push
push
push
adc
push
sbb
pop
push
push
push
sbb
push
push
inc
inc
push
or
push
push
pop
push
push
push
push
jno
push
adc
cs
push
push
push
push
or
push
(bad)
mov
push
outs
ss
push
adc
test
or
push
push
push
or
fmul
push
outs
ss
push
adc
test
or
push
push
push
or
push
(bad)
int3
push
push
outs
ss
push
adc
test
push
or
add
sbb
sahf
adc
push
sbb
sbb
or
push
adc
or
push
push
push
or
push
punpcklbw
push
push
sbb
push
or
push
push
push
or
push
(bad)
cld
push
push
outs
adc
push
adc
push
push
push
add
sbb
push
(bad)
sub
push
outs
sbb
je
push
adc
or
loopne
adc
push
loopne
adc
push
sbb
sbb
adc
or
push
adc
jne
push
adc
arpl
push
sbb
adc
adc
ins
and
push
outs
sbb
adc
sbb
pusha
jae
push
adc
jae
push
adc
add
jae
push
adc
or
or
ss
push
sbb
sbb
push
push
adc
sbb
and
jno
push
adc
adc
unpcklps
sub
ss
push
adc
adc
push
xchg
pop
push
push
pop
or
ds
pop
push
xor
push
push
adc
sub
adc
push
sbb
push
ss
push
push
sbb
add
push
push
adc
or
adc
push
sbb
push
ss
push
sbb
sbb
push
push
adc
movhps
aaa
mov
adc
push
sbb
pop
add
or
add
sbb
cmp
push
sbb
sbb
push
push
adc
unpckhps
sbb
adc
push
sbb
sbb
cmp
push
sbb
xor
ins
jo
push
adc
sbb
adc
dec
enter
push
adc
or
unpcklps
dec
enter
push
adc
(bad)
push
adc
push
sbb
adc
cs
push
add
aaa
push
push
sbb
movlps
sub
or
adc
push
sbb
(bad)
ds
cs
push
add
aaa
push
push
sbb
sub
push
adc
or
adc
push
sbb
adc
(bad)
(bad)
sbb
cmp
push
sbb
sbb
push
push
adc
unpcklps
out
push
push
enter
unpcklps
enter
push
adc
adc
movlps
les
test
push
push
sbb
push
add
enter
push
adc
or
femms
add
enter
push
adc
or
femms
add
enter
push
adc
or
or
xor
or
or
xchg
pop
push
push
pop
or
wbinvd
or
or
push
adc
push
adc
push
sbb
adc
or
wbinvd
wbinvd
nop
test
push
push
sbb
sbb
push
push
adc
or
adc
push
sbb
adc
or
ss
push
push
adc
or
ss
push
sbb
sbb
push
push
adc
femms
add
enter
or
prefetchw
add
inc
loope
loope
adc
push
push
adc
adc
adc
push
sbb
pop
add
movups
sbb
cmp
push
sbb
sbb
push
push
adc
sbb
adc
ss
push
adc
sbb
sbb
sbb
adc
add
movlps
sbb
xor
push
push
adc
sub
adc
push
sbb
push
ss
add
push
push
adc
or
adc
push
sbb
push
cmp
push
sbb
sbb
push
push
adc
or
adc
push
sbb
xor
push
sbb
sub
push
adc
or
gs
push
push
sbb
sbb
sahf
adc
jp
ss
push
push
adc
push
pusha
adc
push
sbb
adc
push
jno
push
push
adc
imul
adc
or
gs
push
push
sbb
adc
pop
sysret
xor
sysret
jno
push
push
adc
adc
add
push
push
sbb
enter
push
sbb
push
push
sbb
ss
push
push
adc
adc
push
push
adc
sbb
xor
xor
push
push
pop
push
push
push
push
push
push
push
sub
sbb
push
jmp
push
push
jp
push
push
add
sub
push
rcl
icebp
mov
(bad)
push
push
push
jb
ins
push
jae
dec
jnp
jno
ins
jge
ins
xor
jno
ins
jge
dec
jnp
jp
ins
xor
jae
jge
ins
jb
jl
ds
jnp
ins
ja
jo
sub
xor
xor
xor
pop
imul
ins
jnp
jo
imul
jb
ds
imul
push
jnp
dec
jno
jnp
and
jg
jge
sub
daa
sub
daa
cmp
jnp
xor
jno
ins
jge
ins
xor
push
jae
dec
jnp
jno
ins
jge
dec
jnp
sbb
push
push
pop
push
push
push
push
push
push
push
dec
pop
pop
dec
pop
pop
dec
push
xchg
push
push
push
push
iret
push
push
push
push
jae
jg
ja
jo
js
ja
jb
jnp
push
push
push
push
ds
sub
push
or
jae
fs
inc
xor
jo
push
pop
push
pop
gs
das
inc
sub
cmp
cs
push
das
ja
pusha
ss
inc
xor
cmp
pop
sbb
ja
dec
and
xor
cmps
loop
fnsave
stos
(bad)
test
dec
out
cmps
shl
add
call
out
mov
pusha
mov
mov
mov
es
inc
in
add
add
sbb
and
push
push
adc
jle
out
repnz
jle
mov
enter
hlt
lahf
not
jnp
push
add
add
add
es
jp
or
push
sbb
dec
sub
ds
xor
push
push
ja
popa
or
sbb
outs
adc
jg
fsubr
sbb
push
or
cmc
mov
mov
cmps
fadd
movs
icebp
mov
test
xchg
(bad)
leave
lahf
fstp
in
mov
pop
add
lahf
cld
add
ja
inc
sbb
or
jl
pop
cmovle
push
add
aam
shl
lods
stc
mov
out
icebp
cmps
jecxz
xlat
mov
dec
out
fnsave
repz
mov
mov
fild
xchg
out
scas
jmp
mov
xchg
fistp
inc
(bad)
sahf
int
fistp
int3
movs
mov
int
in
jno
ins
(bad)
or
jl
ja
jl
ins
sub
imul
inc
add
pop
(bad)
ins
and
popf
aad
ret
ret
xchg
out
ret
stos
fisubr
cmps
jecxz
aad
fbstp
call
aad
leave
cmp
aaa
pusha
adc
or
lock
fstp
xlat
xchg
lds
xchg
xor
call
stc
lods
jmp
test
sti
lods
jmp
push
ss
scas
rol
rcr
mov
aad
div
int3
mov
mov
aam
repz
xchg
mov
mov
(bad)
hlt
test
or
mov
adc
push
add
inc
push
push
sub
xor
push
xor
add
and
mov
adc
push
or
xor
shr
mov
inc
jmp
jle
pop
sub
daa
pop
mov
xchg
mov
mov
xchg
inc
pop
outs
mov
call
sar
mov
mov
push
add
jl
pop
sbb
sbb
cmp
add
or
fld
je
push
add
rcl
pop
adc
cmp
movs
(bad)
mov
sub
dec
cmp
mul
jg
pop
xor
dec
or
xor
mov
mov
add
lds
aad
cmp
movs
mov
jnp
inc
xor
mov
mov
cmp
adc
xchg
mov
jns
xor
adc
mov
pop
pop
sbb
enter
and
sbb
sub
sar
xor
in
stos
push
loope
ret
xchg
test
inc
adc
stos
fisttp
jl
inc
sub
ret
cmp
addr16
sahf
mov
sbb
aas
pop
xchg
xchg
out
mov
push
or
add
fld
and
stos
aad
std
xchg
jne
pop
sbb
imul
aad
aas
cli
mov
bound
and
shr
jmp
bound
retf
addr16
jae
jle
xor
inc
aaa
lock
xchg
xor
push
inc
ss
xchg
rol
mov
pop
inc
cmp
xchg
xchg
shr
pop
sub
or
sar
cmps
data16
mov
lea
movs
jl
mov
mov
dec
adc
outs
push
add
dec
cmp
int3
xchg
mov
pop
or
sub
fisttp
imul
cmps
xlat
xchg
fadd
dec
adc
pop
mov
popf
(bad)
push
ds
in
aam
cli
sub
mov
call
jl
ins
cmp
test
(bad)
cmc
mov
pop
or
sub
ins
mov
loop
fldenv
and
jo
stc
pop
xchg
pop
jmp
dec
sbb
xchg
out
mov
xchg
jl
jb
retf
cmp
mov
xchg
sar
inc
xor
mov
mov
call
pop
sub
pop
sub
test
xchg
xlat
lea
pop
sbb
jmp
adc
xchg
repnz
loopne
fimul
and
aaa
adc
push
add
xchg
sar
ja
lods
mul
add
jmp
mov
push
cmps
in
adc
imul
pop
cmovns
pop
push
lds
dec
and
dec
sti
xor
ins
pop
sbb
dec
test
mov
xchg
fimul
sub
or
lods
fst
call
loope
call
cmps
loop
cli
popa
lods
mov
mov
(bad)
mov
(bad)
out
push
dec
cmovae
mov
cmps
cmc
and
(bad)
mov
dec
xor
xor
fldcw
add
jp
leave
(bad)
call
pop
jae
xor
mov
and
cwde
rcr
cmc
mov
lods
retf
xor
jle
mov
fild
sbb
adc
push
pop
sbb
jae
adc
pop
loop
fbld
fimul
ror
push
xor
sbb
repnz
scas
repz
mov
nop
retf
in
sahf
retf
out
aam
push
in
neg
fbstp
mov
and
inc
movs
rcl
adc
pop
sbb
scas
fimul
adc
aas
and
cs
sub
mov
pop
and
aaa
push
add
aad
hlt
mov
adc
or
arpl
dec
or
mov
and
and
cwde
fnstenv
ins
and
(bad)
lods
les
inc
or
add
loop
aaa
jbe
jne
add
neg
pop
pop
sub
rcl
jge
adc
sub
sub
and
jno
imul
xchg
loop
inc
xchg
pop
pop
hlt
mov
mov
jle
lods
loope
jmp
mov
sub
push
push
sub
pop
outs
sbb
pop
cmp
and
pop
pop
pop
aaa
pop
add
arpl
mov
arpl
je
movs
rol
xchg
aad
fcmovnu
mov
imul
sbb
push
sbb
repz
ficom
adc
jp
fild
jp
pop
psubb
inc
sbb
pop
cmp
popw
push
push
add
dec
sub
sub
push
popa
in
mov
test
mov
or
dec
pop
push
in
out
(bad)
loopne
loop
push
adc
push
int
jmp
mov
pop
adc
push
icebp
cdq
cli
xchg
lods
aad
out
test
repnz
(bad)
mov
mov
xchg
(bad)
pusha
mov
inc
xor
or
cdq
jecxz
repnz
jg
dec
sbb
mov
test
xor
push
lods
mov
jle
mov
lahf
pop
lds
cmp
sbb
sub
xor
cli
stos
shr
xor
jae
pop
push
dec
mov
or
movdqa
dec
cmovnp
imul
mov
mov
imul
ret
xchg
je
ins
cmp
out
scas
mov
cmp
push
scas
mov
cmps
cld
bound
outs
daa
daa
and
in
fs
repnz
jmp
cmps
std
lods
(bad)
scas
int
jmp
pushf
dec
fstp
repz
(bad)
popf
int3
mov
mov
hlt
cmp
test
dec
call
sbb
push
ror
pop
sbb
jge
cmp
jl
push
add
xchg
push
add
xor
aas
inc
out
into
cmps
into
lods
mov
in
push
add
sub
out
mov
jbe
ja
clc
stos
cli
xchg
ret
pop
cmp
jae
ret
sbb
(bad)
pop
aas
outs
pop
dec
mov
push
pop
push
sub
mul
jbe
jmp
pushf
inc
mulps
fidivr
in
stos
rol
push
push
sub
sbb
jl
jmp
test
lds
out
test
and
cli
pop
jmp
imul
push
jl
call
pop
gs
adc
sbb
xchg
ret
or
or
pop
cli
mov
add
inc
sbb
mov
pushf
jle
mov
into
(bad)
aad
call
cmp
pop
cmp
pop
mov
fisubr
dec
or
ror
adc
and
jl
jg
cmps
loopne
(bad)
jl
push
dec
out
daa
cmovne
sub
pop
cld
pushw
ins
call
add
or
or
push
pop
xor
popa
adc
sub
ins
cmp
or
lahf
(bad)
into
cwde
mov
inc
fldcw
dec
sbb
rcr
dec
or
repnz
int3
lahf
fistp
pop
cmp
mov
jecxz
iret
xor
jg
dec
xlat
mov
lods
cmc
mov
add
jbe
pop
inc
es
movs
retf
pusha
cmp
nop
aam
out
test
imul
cmps
fld
adc
loope
pushf
call
xchg
clc
movs
jno
mov
bound
loop
cld
es
call
shl
and
mul
inc
add
ret
add
inc
sub
mov
(bad)
mov
dec
xor
dec
lea
inc
push
push
ret
popf
rcr
mov
push
adc
pop
mov
int3
add
out
mov
xchg
int3
cmp
pop
adc
mov
xchg
loop
jp
pusha
sub
or
sub
mov
mov
jge
imul
mov
mov
xor
jmp
sub
jmp
pop
push
or
mov
mov
fiadd
dec
or
hlt
add
lock
repz
repz
aas
jle
inc
stos
(bad)
xchg
cld
sahf
dec
sub
and
inc
sbb
xchg
xlat
mov
or
fsub
outs
sbb
sbb
jmp
sbb
add
xor
pop
adc
and
adc
jae
mov
mov
dec
pop
inc
or
rcl
sbb
enter
cld
scas
jle
test
cmps
xchg
mov
mov
dec
or
daa
pop
loopne
mov
scas
ficom
test
and
push
daa
push
jecxz
xlat
adc
jle
ret
xchg
mul
dec
pop
jb
rcr
cli
cdq
hlt
mov
jnp
add
pop
pop
cs
push
ja
jb
je
enter
and
mov
icebp
aad
xor
mov
or
pop
sbb
push
fisttp
or
mov
in
es
ss
pop
sbb
jl
mov
in
dec
cmp
ffree
popf
popa
mov
inc
adc
out
stos
scas
pop
adc
jae
outs
add
xchg
lods
mov
aad
icebp
pop
jl
jbe
jbe
cmp
loope
fst
ret
pop
sub
xchg
rcl
xchg
cdq
enter
shl
(bad)
or
sbb
loop
and
mov
inc
sub
sbb
aam
movs
and
(bad)
cld
out
out
add
jl
movs
pushf
pop
pop
dec
cmp
fst
fwait
cmps
cmps
cmp
cmps
int
push
cmp
cmc
push
fdiv
jo
adc
sbb
aad
cmp
inc
pusha
addr16
(bad)
jb
xchg
enter
add
add
mov
fbstp
fwait
jnp
push
mov
mov
lea
les
fcmovne
push
fcom
cmp
or
mov
jae
call
dec
jno
sbb
sti
pushf
addr16
aaa
sub
frstor
lods
or
mov
push
jmp
fist
(bad)
add
shr
rol
(bad)
push
popf
retf
mov
cli
add
in
movs
(bad)
mov
dec
test
cmp
shl
test
push
or
aad
sbb
int3
jl
gs
mov
and
push
cmps
sub
mov
fistp
cmp
pusha
adc
adc
movs
push
fldenv
icebp
ins
(bad)
icebp
mov
xor
call
inc
repz
mov
gs
retf
push
stos
cmp
scas
ret
shr
jae
imul
int
pop
out
lahf
dec
aad
adc
jne
push
pop
dec
mov
dec
dec
pusha
xor
(bad)
fldenv
sbb
sbb
ror
ja
cwde
xor
cmc
mov
retf
sbb
mov
fdiv
jmp
or
fwait
hlt
idiv
mov
loop
pop
dec
mov
dec
xor
scas
movs
lods
mov
mov
icebp
std
out
es
idiv
add
std
call
add
ins
iret
inc
add
push
push
call
jb
mov
bound
hlt
or
popa
jo
jne
pop
fs
pop
(bad)
pop
mov
mov
or
stos
or
xlat
je
mov
bound
je
xchg
in
jp
(bad)
cs
xor
inc
jge
jge
add
fisttp
cmp
rol
mov
jne
out
inc
push
(bad)
les
sbb
xchg
maxps
xlat
outs
test
test
aam
shl
adc
sbb
mov
xor
xor
jmp
fistp
(bad)
cmps
fisttp
xor
inc
and
rol
ret
fs
mov
movs
inc
xor
jns
add
cmp
test
test
aad
retf
add
je
sub
xor
fmul
mov
push
das
pop
xchg
xor
sbb
and
mov
in
push
cld
jns
or
push
dec
xor
xor
call
mov
or
sub
aas
movs
aaa
mov
push
loope
mov
push
cmps
adc
int
mov
shl
cli
rol
dec
mov
add
std
cmp
int
mov
(bad)
jmp
jbe
neg
dec
inc
adc
loop
loope
ins
mov
cs
scas
fs
outs
sbb
retf
inc
adc
xchg
rcr
sbb
mov
inc
shl
fisub
inc
jmp
cmp
push
stos
loop
dec
mov
mov
shr
or
dec
pop
push
cmps
test
pop
call
je
das
std
inc
arpl
add
sbb
and
mov
xor
xor
int
mov
cld
ins
sbb
sub
push
rcr
mov
pop
jl
mov
xchg
push
xchg
inc
and
xor
shl
inc
cmp
adc
icebp
dec
mov
mov
pop
retf
in
stos
jmp
fiadd
push
inc
call
cmp
dec
movs
stos
(bad)
cmps
xchg
add
rol
mov
stc
sub
dec
inc
in
aam
fs
xchg
(bad)
fcmovu
mov
mov
pushf
pop
stos
dec
or
imul
bound
je
out
add
sub
inc
dec
sbb
(bad)
dec
cwde
sbb
inc
mov
(bad)
ret
pop
adc
inc
mov
fs
jmp
cmps
mov
aad
mov
inc
inc
ins
push
xchg
adc
mov
leave
in
sub
mov
in
(bad)
shl
sahf
mov
sbb
les
inc
jne
dec
dec
jmp
ds
pop
stos
jl
hlt
push
cld
inc
adc
jmp
dec
dec
cmp
popf
test
inc
mov
pop
sahf
out
inc
mov
sub
cli
(bad)
(bad)
loope
scas
in
loop
imul
sub
or
xor
dec
icebp
mov
dec
mov
adc
push
out
into
push
(bad)
sub
popa
ret
pop
sub
sbb
add
add
cs
test
rol
sub
ficomp
daa
push
jecxz
pop
add
cdq
jmp
jp
lds
sahf
and
lahf
dec
dec
aad
cmc
mov
js
iret
aaa
stos
neg
pop
push
pusha
jmp
inc
or
pusha
pop
sbb
test
and
out
push
(bad)
pop
pop
das
xchg
and
call
retf
pop
data16
adc
mov
fs
sub
out
sbb
jge
sbb
mov
or
dec
xor
push
cmc
cwde
adc
sub
cmp
ja
jge
dec
xchg
xchg
(bad)
in
push
shr
sbb
jecxz
into
or
push
test
mov
add
cmps
pop
sub
std
shl
cmp
or
in
pop
in
inc
pusha
pop
or
in
not
cmps
repnz
push
dec
mov
xchg
mul
dec
xchg
jle
and
out
(bad)
and
xlat
dec
pop
or
push
push
gs
inc
dec
push
sbb
repnz
jne
clc
jl
lods
mov
mov
inc
aaa
and
push
inc
hlt
ins
adc
bound
sbb
pop
sbb
je
in
data16
cmp
and
add
cmp
pusha
test
mov
ins
xchg
inc
xlat
mov
arpl
test
cmp
rcr
xor
in
je
in
(bad)
mov
mov
clc
mov
push
cmpps
adc
nop
sub
iret
mov
add
addr16
shl
loopne
mov
scas
retf
jbe
push
outs
stc
lahf
mov
xor
icebp
inc
jmp
ror
push
mov
into
jbe
jl
pop
retf
repz
arpl
addr16
mov
sub
fdiv
call
test
neg
jo
cmp
and
addr16
test
(bad)
mov
call
cmps
and
call
les
in
loopne
inc
and
push
inc
je
mov
ror
(bad)
in
xchg
std
shr
inc
or
and
rcl
js
push
xor
xchg
sti
pop
jle
jl
lea
(bad)
mov
jbe
cmp
std
adc
ds
test
lods
push
add
fisttp
mov
sub
repnz
mov
push
sbb
xchg
test
ret
jge
inc
scas
xchg
cs
xchg
mov
aas
fld
dec
jl
pop
hlt
push
(bad)
mov
dec
xchg
xlat
scas
inc
shl
cmp
mov
lea
stc
loop
mov
icebp
sub
jne
fsubr
in
ss
and
lahf
mov
movs
jb
inc
sbb
loope
xchg
pop
jne
adc
dec
iret
repnz
sub
fwait
cmps
mov
sub
dec
std
cli
mov
push
or
pop
neg
int
add
stos
mov
or
call
push
pop
lahf
mov
scas
and
(bad)
iret
jmp
ror
lods
imul
jae
mov
ret
pop
and
jo
mov
ss
es
(bad)
jne
adc
hlt
popa
call
clc
loop
mov
push
jg
or
sti
sbb
dec
cs
dec
xor
fs
movs
(bad)
enter
ficom
and
repz
int3
adc
int3
ins
xchg
leave
cld
dec
ret
or
icebp
aad
jmp
lods
add
mov
sub
inc
inc
add
stos
pop
mov
stc
lea
out
mov
scas
loop
sbb
pop
enter
sub
sbb
lods
les
inc
or
out
sti
int
ja
rcl
and
cmp
scas
aaa
mov
cmp
push
mov
adc
adc
xchg
xchg
movs
cmps
pop
out
mov
lods
icebp
mov
icebp
or
pop
or
push
fdiv
cmp
test
and
mov
push
int
mov
push
fcom
jl
(bad)
pop
push
pushf
sbb
in
addr16
(bad)
pop
pop
fimul
xor
pop
fwait
not
hlt
hlt
mov
cmp
sti
shl
push
adc
pop
outs
popf
js
ret
xor
out
sub
push
sbb
dec
jle
sbb
push
sahf
dec
and
mov
daa
popa
sar
call
push
sub
test
sub
lea
push
repnz
outs
sub
push
jecxz
add
xor
repz
xchg
xor
ins
cmp
dec
lods
cdq
in
outs
xor
dec
(bad)
jno
add
mov
mov
adc
add
dec
addr16
mov
lahf
out
xchg
loope
test
lods
(bad)
xchg
sub
movs
xbegin
push
imul
fisttp
movs
mov
xchg
cmc
(bad)
pop
or
dec
movs
sub
xchg
iret
push
jns
push
fldenv
in
test
pop
fdiv
sub
in
jmp
xor
mov
mov
push
adc
xchg
dec
movs
(bad)
cmp
(bad)
inc
aaa
push
lods
jmp
and
xchg
arpl
push
inc
inc
cli
(bad)
dec
test
xchg
test
enter
xchg
jnp
aad
ret
aas
sbb
test
stc
mov
fild
push
retf
les
loope
jns
or
xor
rol
imul
popf
in
movs
xchg
and
mov
jg
popa
ret
cmp
xchg
fsub
mov
enter
stos
int
inc
dec
pop
or
pop
jp
daa
lods
icebp
lea
xor
jmp
test
mov
push
cs
fs
scas
mul
imul
mov
ja
cmp
js
ja
packsswb
adc
inc
fnstsw
push
jmp
xlat
stc
sub
sbb
push
lock
loopne
cmp
ror
and
retf
leave
enter
inc
and
xor
mov
mul
mov
sahf
fld
jmp
(bad)
jae
lods
(bad)
mov
push
iret
add
addr16
in
repz
call
ret
imul
outs
mov
inc
xchg
and
gs
push
push
pop
xlat
jae
out
xchg
iret
jmp
fisub
inc
dec
sub
pop
pop
xchg
ret
rcl
pop
inc
inc
xchg
push
scas
pop
ret
jbe
add
fcom
fwait
bswap
clc
lahf
fdiv
stos
ret
adc
mov
inc
xchg
push
stos
movs
(bad)
mov
scas
xchg
sti
mov
fstp
sub
add
inc
sub
fmul
add
movs
adc
out
dec
in
into
and
clc
lds
arpl
xor
sub
data16
dec
mov
xchg
aas
pop
pop
adc
dec
push
les
dec
and
cmps
cmp
adc
add
pop
sbb
enter
fcomp
inc
fwait
mov
xchg
pop
add
out
ss
inc
pusha
sbb
nop
dec
mov
push
dec
out
sub
test
icebp
mov
push
adc
aaa
sub
imul
and
mov
jmp
add
enter
enter
jb
mov
data16
inc
leave
out
std
in
pop
pop
cmps
pop
int3
pop
mov
ret
mov
pop
aaa
dec
cmp
push
(bad)
mov
sti
cli
dec
adc
sahf
dec
aas
fmul
cmp
mov
mov
lds
mov
popf
push
(bad)
cmp
inc
enter
xor
mov
fwait
mov
sbb
mov
push
(bad)
push
and
jle
cmp
add
sub
inc
cmp
js
inc
or
xor
or
mov
mov
add
cmps
ss
jae
fcom
dec
loopne
inc
cmp
or
mov
pop
cwd
out
push
mov
lds
and
mov
fstp
pop
sub
or
lods
das
das
loope
adc
adc
mov
mov
dec
or
jnp
add
shl
mov
jb
jns
sbb
push
jae
jmp
ins
sub
add
xor
sub
mov
cmp
cmp
mov
xor
sub
jbe
jmp
xor
in
outs
mov
mov
inc
enter
stos
fcom
xchg
les
sti
leave
sbb
add
icebp
not
out
repz
int3
mov
cdq
cld
add
ret
(bad)
repnz
in
inc
sbb
call
jne
mov
push
jns
add
rcr
push
sti
movs
fcmovu
pop
test
pop
icebp
or
sub
push
and
test
push
and
mov
pop
shl
ins
mov
inc
imul
sub
and
sbb
sub
xchg
xchg
enter
bound
sbb
xchg
mov
inc
push
xchg
xchg
add
jno
ins
jo
push
push
test
mov
in
movs
scas
or
push
mov
dec
jb
push
mov
call
push
loop
ret
rcl
xlat
jne
sub
popa
int
neg
lock
pop
and
mov
mov
fnstenv
xchg
xchg
mov
xchg
fisttp
call
cmps
aam
adc
stos
mov
call
add
nop
mov
loope
jb
nop
inc
clc
cmps
pop
lea
test
mov
inc
jmp
fwait
aaa
nop
push
mov
xchg
pop
nop
mov
add
cmp
std
pop
and
and
fild
neg
cmp
pop
shl
push
call
add
mov
fwait
mov
mov
pusha
mov
add
loop
fwait
arpl
cwde
mov
push
loope
adc
mov
mov
or
adc
scas
dec
cld
or
and
(bad)
(bad)
div
leave
xchg
std
add
aaa
pop
fimul
xchg
retf
in
daa
imul
js
jns
cdq
inc
jmp
fs
inc
mov
xor
mov
daa
imul
not
dec
mov
add
add
push
in
jmp
and
scas
jne
jge
je
xchg
ror
push
cwde
enter
(bad)
xchg
iret
sub
jb
movs
xor
(bad)
and
sub
sbb
and
push
retf
aaa
sub
inc
fistp
mov
dec
aad
mov
xor
xor
add
mov
rol
adc
sub
scas
loop
push
es
xor
mov
shr
mov
bound
(bad)
adc
sbb
xor
mov
jl
xchg
pop
mov
sub
push
push
mov
cwde
push
in
xor
dec
pushf
cwde
push
mov
addr16
sub
add
sbb
in
push
(bad)
into
pop
js
int
mov
cmp
push
fsubrp
(bad)
(bad)
das
cmc
in
aas
add
cwde
das
xchg
jecxz
ja
fldln2
ja
mov
or
xchg
fwait
or
mov
jmp
inc
push
push
mov
icebp
cwde
loopne
inc
mov
jmp
cdq
mov
mov
ret
rcl
mov
int
xchg
pop
jae
mov
fimul
dec
sti
or
and
test
sahf
pop
repnz
sub
jmp
adc
push
dec
retf
enter
add
dec
movs
mov
or
push
xor
cmps
sbb
jl
inc
pxor
jno
in
aas
jecxz
xor
mov
sbb
fist
mov
outs
pop
daa
dec
dec
lds
test
nop
retf
out
adc
mov
mov
sbb
xor
leave
(bad)
adc
(bad)
loope
repz
mov
and
imul
mov
jg
pushf
add
jmp
sar
mov
pop
mov
mov
push
jp
pop
and
fdivp
bswap
and
or
cwde
mov
mov
jle
jbe
dec
out
ss
fisttp
hlt
(bad)
pop
and
retf
mov
call
jb
outs
out
addr16
add
in
cmp
cli
xchg
inc
xchg
add
inc
mov
cmc
xor
jbe
mov
shl
std
addr16
mov
(bad)
nop
mov
cmp
pop
movs
mov
in
mov
push
shl
scas
sub
ds
(bad)
iret
cmp
inc
xor
or
mov
pop
rol
icebp
and
push
retf
push
xchg
jge
test
cld
mov
imul
xor
cli
jg
mov
mov
test
dec
sub
mov
xchg
lea
gs
sti
push
pop
addr16
inc
mov
or
adc
inc
push
pop
xchg
test
push
mov
sub
fld
adc
int
jo
and
xchg
xchg
gs
and
sub
and
and
pop
ret
mov
push
or
cmp
dec
fistp
popf
push
mov
jg
fwait
stc
inc
mov
xchg
xor
les
pushf
mov
sahf
xor
add
and
mov
lea
add
adc
pop
shl
mov
ret
xchg
xchg
push
dec
dec
push
cmp
and
aad
in
sbb
push
das
(bad)
add
add
or
sub
fdivr
jns
xor
or
sbb
stc
dec
jmp
and
scas
aaa
clc
loopne
sbb
pop
out
dec
into
inc
jg
ins
leave
dec
ror
inc
sbb
push
sub
rcl
rcr
or
pop
dec
and
inc
xchg
fst
xchg
mov
(bad)
xchg
lahf
lods
out
dec
iret
push
repnz
fs
pop
leave
je
sub
imul
pop
add
pushf
xor
and
inc
into
pusha
rcr
sub
dec
jle
pop
inc
(bad)
pushf
sub
ret
sub
push
enter
sahf
in
mov
jle
sahf
adc
ror
cmp
sub
add
inc
std
dec
repz
aam
pop
shl
ins
xlat
or
xor
stos
mov
jb
(bad)
aad
pop
jno
ret
ins
dec
mov
push
add
loopne
dec
jl
scas
push
dec
or
xchg
imul
js
mov
stc
or
repz
adc
sbb
stos
rcr
xor
mov
push
pop
ja
lahf
not
mov
add
and
in
paddw
mov
cmp
xchg
mov
adc
sub
mov
aas
ins
repz
or
or
(bad)
cmp
das
mov
iret
mov
dec
ficom
das
cmp
jmp
add
movs
push
or
fwait
sub
jns
pop
(bad)
lock
ins
jae
inc
in
in
ret
icebp
add
out
and
ret
xchg
push
add
stc
mov
mov
pop
pop
push
cmp
xor
ficomp
fwait
cmps
lock
xor
jg
aaa
pusha
adc
push
xchg
ss
jns
fmul
mov
into
into
not
iret
adc
arpl
inc
pop
adc
push
push
or
in
cdq
into
(bad)
out
ret
add
aas
push
xchg
adc
aam
in
loope
rcl
dec
call
xchg
aam
and
push
cmp
int
and
push
pop
and
mov
test
clc
daa
mov
in
mov
fwait
clc
mov
push
mov
mov
xchg
retf
(bad)
and
inc
sub
adc
pop
and
call
mov
dec
adc
push
adc
pop
sub
cmp
adc
dec
repz
(bad)
mov
aad
(bad)
cmps
neg
clc
mov
les
xchg
(bad)
popf
sbb
stos
mov
leave
mov
js
dec
cmovae
gs
jge
loopne
fbld
in
mov
lods
sti
mov
(bad)
xchg
fisub
(bad)
sub
cdq
or
js
ins
sub
call
cdq
into
push
push
adc
and
inc
mov
scas
cli
mov
jle
imul
das
outs
pop
jae
push
adc
jb
jo
mov
popf
jmp
sub
cmp
push
and
add
cs
jge
ins
cmp
sbb
jo
popa
lea
inc
adc
jne
dec
shl
int
xchg
cli
cdq
jmp
(bad)
fcomp
inc
adc
sub
fdiv
pusha
and
sbb
pop
inc
add
jbe
xor
fstp
ret
inc
lods
jmp
fst
jmp
mov
test
test
mov
jns
jp
ins
cmp
cmps
rcr
mov
dec
or
shl
xchg
aam
fsubr
addr16
or
leave
mov
mov
ds
sbb
xor
adc
mov
ret
(bad)
movs
icebp
mov
xchg
aad
adc
inc
and
mov
mov
dec
push
inc
sub
rcl
and
arpl
push
and
sbb
jo
mov
sbb
stos
xor
jne
inc
add
punpckhdq
dec
sbb
mov
adc
sar
xchg
test
inc
pop
rol
mov
mov
mov
cmp
mov
test
pop
inc
pop
push
add
xchg
sar
shl
aam
xor
test
add
mov
mov
(bad)
in
sahf
retf
sub
inc
adc
jecxz
rol
push
sbb
pop
sbb
xor
pop
sbb
stos
fimul
mov
add
(bad)
(bad)
xchg
aam
jmp
mov
addr16
(bad)
out
lds
mov
mov
mov
addr16
xorps
dec
das
jle
pop
in
mov
into
call
jle
xor
mov
adc
ss
mov
repnz
mov
inc
and
inc
push
arpl
mov
mov
pusha
adc
dec
adc
mov
xchg
(bad)
in
sub
inc
or
mov
xchg
leave
mov
int
in
mov
cmp
dec
add
sbb
popf
retf
(bad)
xchg
sub
and
sbb
bound
rcr
test
aam
cmp
jns
outs
pop
sbb
pop
push
pop
push
outs
xor
stc
lods
jmp
push
push
inc
scas
enter
ret
out
hlt
mov
and
ins
cmp
dec
pop
xchg
outs
cmp
inc
cmps
test
lods
(bad)
xor
push
add
or
jg
push
or
mov
fcom
jo
inc
pop
dec
sbb
jbe
jge
inc
mov
loop
hlt
(bad)
shl
loopne
pop
sub
mov
outs
cmp
popf
out
in
test
test
jb
fs
mov
xchg
mov
push
jle
pop
pop
pop
sub
or
dec
push
push
fstp
loopne
ins
sub
and
stc
mov
(bad)
inc
aaa
pusha
loop
push
add
jbe
or
mov
(bad)
out
adc
sub
pop
sbb
jge
dec
cmp
sub
stos
ret
mov
mov
sbb
jmp
test
xor
pop
push
dec
pop
pop
jmp
mov
test
sbb
imul
or
inc
pop
push
adc
fcomp
in
sub
scas
xor
inc
sub
fst
aam
outs
cmp
dec
aas
push
lock
mov
mov
mov
sbb
ins
sub
repz
(bad)
mov
test
mov
mov
pop
je
push
adc
(bad)
fbld
cli
add
adc
outs
sbb
lods
cmp
xor
adc
sub
xor
push
pop
pusha
sub
xchg
xchg
pop
push
aas
dec
sbb
sub
stc
xchg
std
sahf
cmp
movs
inc
push
pop
sbb
sub
popf
pop
jae
push
adc
pop
in
adc
shl
mov
(bad)
rcl
test
jmp
add
inc
adc
jns
adc
outs
cmp
xor
ss
inc
push
push
cmp
jecxz
icebp
mov
mov
jo
bound
inc
adc
xor
ins
cmp
mov
iret
stos
enter
iret
mov
mov
lock
pop
mov
stos
ficomp
stos
shr
mov
test
mov
or
js
pop
or
int3
mov
retf
popa
loopne
jmp
int3
mov
mov
xor
dec
xor
push
cmp
movs
div
stc
pusha
push
and
ss
inc
adc
(bad)
xchg
int3
scas
out
xchg
movs
aam
(bad)
fsub
shl
add
jp
pop
inc
pop
push
dec
das
jle
pop
fmul
imul
loopne
fwait
cwde
enter
fisttp
das
ja
outs
dec
cmps
ret
mov
lahf
xchg
xchg
aam
fisubr
cmps
aad
mov
(bad)
xchg
(bad)
push
pop
das
js
push
daa
jo
push
adc
jge
inc
push
int3
mov
xlat
addr16
test
xchg
sar
pop
sub
cmovle
jmp
mov
mov
in
mov
xchg
rcr
push
cmp
pushf
jmp
sahf
sti
stos
fisttp
add
add
ins
sub
mov
add
test
mov
adc
sub
std
mov
pushf
fdiv
cmp
cs
sbb
int3
lea
jns
jae
jb
cli
xchg
rcl
jg
dec
or
sbb
rcl
dec
daa
dec
sub
ja
add
inc
sbb
movs
hlt
adc
int3
(bad)
leave
test
fwait
jp
inc
es
add
adc
sbb
iret
cwde
fdiv
mov
xchg
lods
xchg
(bad)
cmc
scas
(bad)
xchg
aaa
jno
push
adc
out
add
aad
loop
mov
fcomp
add
push
gs
add
stc
sbb
cmps
icebp
mov
xor
ins
sbb
push
push
ins
add
test
mov
call
add
cmps
add
jbe
inc
sbb
mov
rcl
dec
or
sbb
popa
adc
cwde
hlt
mov
xchg
(bad)
in
xor
push
adc
sub
sbb
pop
sbb
sub
pop
mov
push
inc
and
jge
jg
inc
cmp
std
xlat
add
or
mul
sub
ins
loopne
mov
pop
pop
sbb
call
dec
ss
push
inc
push
ja
adc
hlt
xchg
in
stc
mov
xchg
rol
push
inc
cmp
xor
sbb
push
sti
mov
call
xor
dec
sbb
xor
jnp
dec
push
fs
inc
adc
push
jne
into
mov
mov
pop
or
pop
fs
bound
shl
push
es
les
leave
out
retf
mov
inc
add
jo
lds
rcl
add
adc
mov
les
dec
adc
retf
xchg
rcl
pop
sbb
outs
aas
aad
into
cmps
rol
and
jne
in
test
xchg
mov
mov
xchg
shl
inc
or
test
in
mov
dec
adc
frstor
push
and
mov
add
push
jbe
jge
pop
pop
pop
mov
mov
loopne
es
add
sub
or
mov
xchg
cmps
stc
xchg
inc
xor
push
push
arpl
fisttp
mov
push
add
rcr
inc
push
inc
xor
push
pop
xchg
fisttp
(bad)
out
int
jmp
icebp
mov
and
fs
mov
ret
sahf
lahf
cli
stos
fimul
pushf
fstp
movs
int3
scas
fmul
les
dec
shr
cmovae
arpl
pop
cmp
imul
enter
mov
stos
ret
mov
xchg
ror
push
sub
es
and
gs
jge
dec
or
dec
sbb
xchg
(bad)
call
cmp
out
xchg
int
and
jl
ins
add
fwait
jmp
(bad)
xchg
cmc
xchg
xchg
shr
popf
int
mov
ja
popa
or
retf
outs
sub
inc
push
jge
mov
repnz
pop
sbb
xor
test
add
and
pop
jbe
icebp
scas
call
mov
cmp
dec
sbb
adc
jbe
jns
sbb
and
inc
or
js
push
sbb
pop
push
push
cmp
xchg
in
loopne
fld
push
add
out
stos
ror
ror
clc
scas
pop
sbb
adc
xor
or
aaa
inc
adc
data16
iret
call
sbb
test
outs
xor
pcmpgtd
in
movs
mov
cmp
jb
test
mov
(bad)
rol
add
js
push
sbb
pop
add
repz
test
stos
jmp
sbb
pop
(bad)
mov
test
xchg
push
adc
inc
aad
aad
jecxz
call
cmp
mov
add
(bad)
jnp
push
daa
jo
inc
sub
jnp
inc
sub
sbb
jno
inc
sbb
pop
or
jp
pop
jmp
(bad)
mov
leave
mov
loope
fisub
mov
in
pop
sub
pusha
sbb
inc
xor
sub
jb
jns
push
cmp
nop
pop
push
push
push
fs
loop
adc
inc
xor
loope
mul
xor
dec
push
in
xchg
int
mul
cmps
fcomp
ret
add
push
dec
or
pop
adc
sub
js
imul
cmp
jle
je
or
dec
sbb
ds
or
dec
push
dec
push
jg
sbb
pop
sub
mov
cmps
(bad)
lods
jmp
(bad)
fcomp
inc
add
outs
add
cs
or
jle
bound
sub
sete
dec
imul
jo
dec
and
add
inc
sbb
test
mov
mov
jo
jae
bound
fistp
xchg
aas
xchg
icebp
mov
push
inc
xor
jnp
pop
mov
mov
cmps
repnz
lock
fcomp
push
adc
daa
bound
push
push
and
sbb
jp
dec
add
call
mov
sbb
jp
pop
sub
jle
pop
push
gs
ins
pop
or
or
dec
pop
mov
mov
nop
shl
xor
je
push
dec
and
pop
or
fisttp
xchg
jecxz
hlt
popf
push
add
xor
sub
in
ret
test
in
retf
test
xchg
cs
in
mov
or
cmp
add
and
adc
adc
pushf
int3
mov
xchg
(bad)
mov
push
push
sub
es
daa
inc
jnp
ja
inc
or
and
ret
mov
test
sub
sub
das
dec
ds
mov
jecxz
xor
arpl
push
inc
push
ja
inc
out
xchg
xchg
ret
jp
sub
xor
or
outs
push
je
sbb
jo
push
add
(bad)
mov
cmps
loop
ficom
pop
push
dec
sbb
aas
outs
mov
adc
aad
adc
jae
jle
cmps
loopne
rcr
and
push
sub
int3
mov
(bad)
or
jo
jae
bound
jge
mov
mov
push
xor
adc
pusha
push
jmp
mov
retf
gs
inc
adc
or
mov
les
imul
or
dec
cmp
outs
sbb
imul
pop
shl
dec
cmp
pop
in
pop
dec
sbb
add
inc
sbb
rcl
or
jg
xor
dec
es
cmp
or
jmp
call
leave
mov
or
pop
sbb
imul
sub
push
push
inc
push
jmp
xchg
xchg
mov
leave
mov
mov
mov
mov
mov
push
or
ret
sahf
leave
mov
xchg
les
jae
inc
or
sahf
enter
rol
inc
add
(bad)
imul
jns
iret
mov
les
xor
sbb
nop
fsubr
les
test
out
call
rcr
int3
outs
pop
sub
inc
or
ja
sbb
pop
sub
mov
xchg
lds
mov
mov
add
and
pop
in
sbb
jle
jno
mov
mov
xor
cdq
lods
ficom
jle
bound
inc
adc
addr16
jbe
jae
inc
push
inc
add
jnp
push
(bad)
test
cdq
fld
fisttp
mov
mov
mov
lock
aam
in
add
arpl
jno
push
add
cdq
lock
movs
in
dec
xor
push
cmp
jp
js
inc
cmp
add
pop
sbb
pop
or
cwde
in
mov
mov
lock
adc
addr16
adc
inc
sub
pop
push
sub
sti
xchg
lock
xlat
aam
add
dec
sbb
or
push
add
mov
cmp
out
ret
test
mov
int
and
push
pop
mov
test
mov
pop
ins
aaa
addr16
add
(bad)
mov
xchg
push
push
pop
sbb
sub
cmp
ins
and
dec
daa
dec
sub
or
cmp
jb
push
and
arpl
sbb
xor
pop
rcr
mov
imul
adc
cmp
dec
adc
sub
pop
or
jg
pop
ret
add
cmc
inc
xor
ins
cmp
out
cmp
repnz
lock
xchg
hlt
lods
enter
es
push
fcom
movs
repz
retf
mov
cli
sub
outs
aaa
data16
mov
out
xchg
xchg
out
mov
xor
dec
sbb
adc
inc
sbb
pop
pop
inc
fld
lock
sub
pop
add
loopne
sbb
push
dec
ds
mov
les
in
mov
and
inc
sub
push
push
int
aas
jnp
dec
cmp
(bad)
(bad)
mov
pop
xor
dec
push
and
aas
outs
sub
imul
rcr
inc
daa
push
add
scas
jo
push
add
push
fldcw
dec
or
dec
movs
les
aam
scas
fmul
xchg
jmp
jmp
cs
xor
push
shr
(bad)
jnp
or
or
rep
loopne
aam
test
jmp
sar
sti
(bad)
les
fdivr
in
xor
inc
or
inc
xchg
sti
cwde
jmp
clc
mov
sti
mov
jecxz
cmc
pushf
jmp
push
push
pop
push
ins
imul
add
jp
mov
fmul
sti
lods
fcomp
popf
mul
add
or
movs
loopne
aam
imul
mov
lods
in
stos
out
das
jle
jge
outs
cmp
aas
dec
add
je
xor
dec
push
imul
call
mov
xchg
dec
cs
and
cld
mov
fcomp
jge
arpl
je
jl
pop
push
gs
push
and
dec
push
push
add
push
xor
lods
in
test
cmps
(bad)
xchg
imul
add
xor
dec
aaa
outs
fist
inc
and
pop
data16
or
ret
bound
pop
xor
je
ret
xchg
(bad)
retf
in
enter
std
xchg
imul
cmp
dec
adc
lods
lds
test
mov
cld
dec
(bad)
mov
jmp
add
jno
jge
stos
push
cmp
test
sbb
sub
adc
dec
sbb
cs
movs
cmc
sahf
stc
call
retf
xchg
xchg
icebp
mov
mov
(bad)
add
sub
daa
push
add
add
jnp
in
mov
lods
sti
mov
rol
jge
ins
cmp
jmp
out
in
test
lock
out
cli
lods
jnp
mov
xchg
(bad)
in
inc
xor
fs
inc
adc
aaa
data16
lods
fs
(bad)
xchg
std
cdq
cli
adc
inc
add
dec
adc
sub
pop
inc
jge
pop
das
outs
sub
cmp
scas
inc
jmp
xchg
(bad)
in
mov
pusha
cmc
xchg
or
in
pop
hlt
lahf
cld
(bad)
fistp
repnz
add
popa
or
call
jmp
and
push
push
int
cmc
mov
mov
aam
leave
sahf
out
scas
hlt
jge
pop
or
mov
mov
mov
lods
mov
lea
or
nop
(bad)
fdiv
xchg
xchg
frstor
sti
popa
xor
pop
xor
jp
dec
cmovae
(bad)
fidiv
js
pop
sbb
test
mov
sahf
ficom
test
div
push
adc
inc
cwde
and
add
je
in
xchg
mov
dec
or
inc
xor
dec
sbb
jns
and
push
sbb
push
inc
daa
jbe
push
inc
jmp
mov
xchg
in
jle
jno
inc
sbb
and
jnp
je
xchg
xlat
xchg
fbld
movs
(bad)
or
test
sub
cmp
add
pusha
or
or
js
je
push
cli
mov
call
jmp
stc
sahf
iret
mov
dec
aas
push
ds
cmp
ret
mov
test
sub
and
xor
shl
push
into
popa
or
jbe
adc
pop
sbb
rol
ficomp
jno
jp
pop
sbb
sub
mov
add
aam
dec
cmp
inc
xor
js
jae
push
add
jg
pop
sbb
pop
push
adc
data16
mov
mov
mov
pop
and
inc
sub
pop
inc
add
cmp
sub
jae
push
add
push
mov
xchg
rcr
and
pop
or
mov
cmp
mov
xchg
(bad)
mov
cmovae
popa
sub
inc
add
int
out
mov
call
fsubr
outs
and
pop
xor
pop
ins
cmp
push
sbb
lods
(bad)
mov
rcl
jg
pop
xor
sbb
popf
(bad)
xchg
cld
xchg
hlt
jl
mov
out
les
iret
pop
(bad)
mov
xchg
aad
fnstcw
mov
out
and
data16
sub
cmps
test
ret
mov
mov
mov
fisub
lds
cdq
in
mov
cmp
cmp
mov
nop
(bad)
xchg
jmp
xchg
rol
jecxz
shl
xchg
(bad)
fwait
clc
dec
mov
mov
mov
scas
sub
and
pop
fstp
int
sahf
sbb
push
or
push
xor
pop
xor
pop
or
pop
or
pop
xor
pop
xor
pop
or
pop
xor
pop
or
pop
xor
pop
xor
pop
or
pop
xor
pop
xor
sbb
push
xor
push
sbb
push
dec
pop
jle
in
sbb
pop
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
nop
sbb
push
push
push
push
push
adc
pop
push
push
push
push
push
adc
pop
pusha
pop
popf
pop
(bad)
pop
ret
pop
repnz
in
in
push
sbb
neg
(bad)
pop
(bad)
pop
ret
sbb
sbb
pop
push
sbb
sbb
push
push
nop
push
push
aam
dec
push
push
push
addr16
inc
push
push
push
enter
push
push
jge
mov
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
pop
push
sbb
adc
adc
adc
imul
push
inc
pop
inc
pop
js
jae
je
push
sbb
loopne
pop
push
push
pop
pop
push
mov
pop
pop
push
ficomp
pop
push
les
push
push
cmc
sbb
push
push
pop
sbb
push
push
pop
push
push
pop
sbb
push
push
pop
push
push
jge
sbb
push
pop
dec
push
data16
push
push
pop
dec
push
mov
pop
dec
push
out
sbb
push
sbb
push
push
push
push
push
push
push
push
push
push
push
push
cld
adc
push
sbb
push
push
push
push
push
push
push
push
push
push
pop
push
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
or
push
sbb
push
push
push
push
push
push
push
push
push
push
pop
push
add
push
push
push
push
sbb
push
push
push
push
push
push
push
push
push
push
pop
push
and
push
push
push
push
push
push
push
push
pop
push
push
push
lahf
adc
push
sbb
sbb
sbb
sbb
adc
pop
push
adc
push
push
push
adc
ds
push
push
push
pop
push
ds
push
push
push
add
push
call
sbb
push
ficomp
push
and
jp
jb
and
jae
jge
ins
jb
jl
push
ja
ins
jno
jno
push
dec
ja
imul
jg
ja
push
push
addr16
outs
outs
jb
jge
push
jno
push
push
addr16
push
addr16
jno
outs
imul
push
push
addr16
ins
jno
jnp
push
push
addr16
jnp
dec
jnp
push
push
dec
jbe
jnp
jp
jg
jnp
jl
jnp
push
ins
jno
ja
jnp
jle
push
ins
jnp
push
pop
jo
ja
dec
imul
push
dec
dec
push
pop
pop
dec
dec
inc
push
push
pop
push
dec
push
pop
dec
push
push
push
push
dec
dec
pop
dec
dec
dec
dec
inc
push
push
pop
push
dec
push
pop
dec
push
push
push
push
push
ja
ins
jno
jno
push
dec
ja
imul
jg
ja
xor
outs
jb
jge
push
jno
dec
jnp
push
push
pop
outs
outs
jb
jge
push
jno
pop
jg
jnp
xor
jno
push
push
ja
ins
jno
jno
push
dec
ja
imul
jg
ja
xor
push
push
pop
jno
outs
imul
push
dec
ins
push
jae
push
jl
jnp
push
xor
push
ins
push
jns
push
pop
jno
outs
imul
push
jae
pop
jno
outs
imul
push
jl
jnp
push
ins
jno
ja
jnp
push
jns
push
pop
outs
outs
jb
jge
push
jno
push
jae
pop
outs
outs
push
jl
jnp
push
ins
jno
ja
jnp
push
dec
ins
jnp
push
jns
push
dec
ins
jnp
push
jae
dec
ins
jnp
push
jl
jnp
push
ins
jno
ja
jnp
push
jns
push
dec
jnp
dec
jnp
push
push
jae
push
addr16
jnp
dec
jnp
push
push
jl
jnp
push
ins
jno
ja
jnp
push
pop
outs
outs
jb
jge
push
jno
push
dec
jnp
dec
jnp
push
push
pop
outs
imul
push
jno
pop
jnp
push
jg
jbe
jno
jnp
dec
outs
jnp
pop
jnp
dec
outs
jnp
dec
jno
push
ja
jns
pop
ins
jnp
push
inc
inc
push
jo
push
jo
jnp
inc
push
dec
push
ja
ins
push
jo
jnp
pop
ja
outs
jno
jnp
inc
push
jo
push
jo
jnp
inc
push
jns
push
pop
jnp
push
jo
push
jo
jnp
jae
dec
jbe
jnp
jp
push
push
jge
jg
imul
jnp
push
jo
push
jo
jnp
outs
jg
jg
push
push
jo
jg
jbe
jae
ja
pop
ja
jnp
outs
ins
jno
dec
jnp
ins
dec
push
pop
push
outs
ins
jno
dec
jnp
ins
push
push
pop
push
push
jg
jo
jge
jo
js
pop
jnp
ins
outs
push
pop
jg
jg
push
jnp
ins
push
pop
pushw
jg
jno
jo
ins
push
push
imul
jne
addr16
jb
jg
jnp
push
ja
dec
jg
jp
jno
ja
push
ja
dec
ja
jnp
jbe
ins
jne
ja
pop
ja
jp
jnp
push
ja
dec
dec
pop
push
pop
ins
jnp
push
dec
ins
jno
jnp
ins
push
jg
outs
jb
jge
push
jno
push
jg
jnp
jge
jae
jg
jp
ja
jnp
outs
ins
jno
jnp
ins
pop
push
ins
ja
imul
push
push
ins
jnp
jp
push
ins
ja
imul
push
ja
jbe
ins
ja
push
jg
jp
jnp
push
jge
jnp
push
jno
pop
jb
jns
push
jnp
push
jae
jo
push
jge
ins
ins
jnp
push
ja
jnp
push
ins
addr16
ins
push
ins
push
outs
push
jo
jno
outs
ins
jno
jnp
ins
push
jo
jno
jae
push
jno
push
pop
jnp
dec
jbe
jnp
jp
jno
push
pushw
push
ins
jnp
jp
jge
jo
jnp
push
dec
jno
sub
pop
jnp
dec
jbe
jnp
jp
jno
push
pushw
dec
jnp
dec
jbe
jnp
jp
jno
push
pushw
dec
jno
sub
dec
jnp
dec
jbe
jnp
jp
jno
push
pushw
dec
jnp
jp
ins
jno
jnp
ins
push
jnp
jno
addr16
outs
ins
jno
jnp
ins
push
jl
ins
jnp
jp
ins
jnp
ins
push
jl
js
jnp
push
jl
js
jnp
dec
ja
jnp
jl
push
ins
dec
jnp
jp
dec
ins
ja
jnp
ins
jno
jnp
ins
push
jnp
jno
addr16
jl
push
ins
dec
ins
ja
push
jo
push
push
jo
jg
dec
ja
imul
ja
jo
dec
ja
push
jg
dec
ins
jno
jnp
push
pushw
jbe
ins
jno
jnp
ins
push
jb
pop
jp
ins
jnp
ins
push
jp
dec
ja
jnp
js
push
jnp
dec
ins
jno
jnp
push
jb
js
push
jb
dec
ins
jno
jnp
push
dec
ja
push
jg
pop
jb
jno
pop
pushw
jbe
jo
jb
push
jg
jp
jnp
ins
push
jb
jo
push
push
push
outs
jnp
outs
ins
jno
jnp
push
dec
jnp
imul
jbe
jnp
jp
ins
jnp
ins
addr16
outs
ja
push
ins
jb
imul
push
pop
push
outs
outs
outs
push
dec
imul
jg
jbe
jge
jp
jp
push
push
jge
jae
jg
ja
jb
push
dec
jg
imul
outs
jnp
dec
ins
jno
jnp
ins
push
jg
jp
jnp
dec
jbe
jnp
jp
jg
jp
jnp
dec
ins
jno
jnp
ins
push
jp
dec
jbe
jnp
jp
jp
dec
ja
jnp
dec
jnp
jnp
push
pop
jnp
jne
jno
push
dec
ja
jb
push
push
ja
jge
dec
jnp
jnp
push
dec
push
push
jo
imul
push
push
imul
push
dec
push
pop
ins
ins
jno
push
dec
ins
push
jae
pop
jno
outs
jno
jnp
push
jno
jnp
push
pop
jp
push
ins
pop
ins
jno
ins
jg
jb
pop
push
ins
ja
imul
pop
jp
push
ins
pop
ins
jno
ins
jg
jb
dec
push
push
push
dec
ins
push
jae
pop
jno
jnp
jno
xor
jae
ja
jnp
push
pop
jnp
jnp
jg
jnp
pop
jno
jnp
push
ins
ja
imul
dec
ins
push
jae
pop
ja
jns
jno
push
jge
push
pop
jnp
imul
ins
push
ja
jp
jo
push
ins
ja
imul
push
ja
ins
jno
jno
push
dec
ja
imul
jg
ja
xor
jae
ja
jnp
dec
jnp
push
push
dec
push
jo
jg
jp
jno
imul
push
ins
ja
imul
push
ja
jnp
jno
imul
jg
jnp
push
ins
ja
imul
dec
ins
push
jae
pop
jno
outs
jno
jnp
push
jno
jnp
xor
ins
ja
jo
push
jnp
outs
push
jnp
imul
ins
ja
imul
dec
ins
push
jae
dec
imul
jae
xor
jae
ja
jnp
dec
jnp
push
push
dec
imul
jae
push
jnp
outs
jnp
ins
push
pop
jnp
push
jl
jnp
push
jg
imul
imul
jae
dec
outs
jnp
jg
jp
jnp
pop
jnp
dec
outs
jnp
ins
jno
push
jg
jp
jnp
pop
jge
ja
jg
jno
push
pop
ins
jnp
push
push
jo
push
jo
jnp
push
addr16
ins
jno
outs
pop
jno
jb
jge
ja
jo
push
ins
ja
imul
dec
ins
push
jae
dec
imul
jae
xor
push
ins
jno
dec
jnp
push
push
pop
jno
dec
ja
ja
jb
pop
push
ins
ja
imul
dec
jbe
jnp
jp
push
push
jge
push
ins
ja
imul
pop
jno
outs
ja
jnp
pop
jnp
jnp
jg
jnp
pop
push
ins
ja
imul
pop
jno
push
jno
ins
push
dec
ins
push
jae
dec
jnp
jno
ins
jge
ins
push
dec
jnp
jno
ins
jge
push
jg
jg
jnp
push
dec
ins
jno
jnp
ins
push
dec
jg
jp
jae
dec
ins
jno
jnp
ins
dec
push
ins
push
jo
jno
push
ja
ins
jno
jno
push
dec
ja
sub
jns
ins
push
addr16
jnp
push
pop
data16
outs
push
jno
push
dec
ins
push
jae
dec
jbe
jnp
jp
jo
push
dec
jbe
jnp
jp
dec
ins
push
jae
dec
jnp
jb
jge
ja
jo
pop
ins
ins
jnp
jl
addr16
pop
jnp
pop
data16
imul
jns
ins
ins
jnp
jl
addr16
pop
jnp
push
jg
ja
jnp
push
jnp
jno
ins
jge
push
jg
jnp
push
dec
push
ja
jns
dec
jnp
jb
jge
push
dec
push
ja
jns
push
pop
jno
outs
jg
jnp
jnp
jbe
jp
dec
outs
jb
push
dec
jno
jo
jnp
jnp
push
dec
jb
jnp
push
push
outs
jnp
jg
jno
ins
push
pop
jno
outs
jg
jnp
push
ja
jns
jns
push
dec
push
ins
push
jo
jno
ins
jnp
inc
pop
ja
jnp
jg
jnp
dec
ins
jno
jnp
ins
dec
ja
jp
imul
ins
jnp
inc
dec
ja
jp
imul
dec
ins
push
jae
dec
ja
jp
imul
ins
push
jns
push
pop
data16
imul
jb
dec
jg
jbe
pop
jno
jge
push
ins
jnp
inc
pop
ins
jns
jae
jo
ins
push
dec
push
ins
push
push
ja
jb
dec
ins
push
jae
dec
jnp
imul
xor
ja
jge
outs
jg
push
dec
ja
jp
imul
ja
addr16
pop
jnp
pop
imul
push
dec
ja
jp
imul
ja
jg
push
dec
ja
jp
imul
push
jo
jno
jnp
push
ins
push
jo
jno
jnp
ins
jnp
inc
dec
ins
jnp
jbe
jb
pop
data16
imul
pop
jnp
pop
jo
ins
addr16
ins
ins
jnp
jl
addr16
jns
push
push
jno
jg
ja
jo
ins
jnp
inc
dec
jnp
jl
dec
ins
jno
jnp
push
jg
jg
pop
jo
pop
outs
outs
push
pop
jo
ja
jno
jae
jo
push
dec
outs
jnp
ja
jb
jno
jp
ins
push
pop
jnp
pop
jno
jp
ins
dec
jg
jbe
dec
ins
push
jae
push
push
push
pop
ja
jnp
pop
data16
push
push
dec
jnp
jp
jb
pop
addr16
ins
push
dec
ins
ja
jnp
jb
pop
addr16
ins
push
pop
jnp
pop
jo
ja
jno
jae
jo
dec
jg
ja
jl
jnp
push
jnp
push
dec
jg
jbe
pop
jno
jl
jo
push
jns
push
push
jg
jnp
dec
ins
ja
jnp
jb
dec
jnp
push
dec
jg
push
jno
pop
data16
push
pop
jnp
jnp
jnp
dec
jnp
ja
push
addr16
push
jno
jg
push
jg
jbe
jo
push
push
outs
jnp
dec
imul
push
pop
jnp
dec
jg
imul
jnp
dec
jg
imul
ja
jnp
push
ins
ja
imul
push
dec
jnp
pop
push
ins
ja
imul
push
dec
jnp
dec
ins
jno
jnp
push
ins
ins
jno
push
pop
jb
jg
dec
ins
jno
jnp
push
ins
ins
jno
push
pop
jno
push
ja
ins
push
pop
jnp
push
jl
jnp
push
push
jo
jnp
jg
push
jno
push
push
ins
jns
jno
dec
jnp
imul
push
ins
jns
jno
dec
push
jb
push
push
ins
jns
jno
push
dec
imul
jae
pop
jo
ja
jno
jae
jo
push
pop
jnp
dec
imul
jae
pop
ja
jnp
push
ins
addr16
jns
push
dec
ins
push
jae
ja
jnp
push
ins
addr16
dec
jbe
jnp
jp
push
ins
push
pop
outs
jg
push
jnp
push
push
push
push
dec
jnp
pop
outs
jg
push
jnp
push
push
push
push
jns
push
push
jnp
ins
jg
jnp
dec
ins
push
jae
dec
jnp
push
pop
jo
jno
ja
jns
jns
push
pop
jnp
jg
jb
push
pop
jnp
pop
addr16
ins
push
pop
ins
ins
jg
push
dec
jnp
ja
jnp
push
imul
push
pop
jnp
dec
ins
jno
jnp
ins
pop
addr16
jp
dec
dec
pop
dec
jbe
jnp
jp
push
ins
ja
imul
dec
ins
jno
jnp
ins
push
jno
imul
dec
ins
push
jae
pop
jno
jb
jge
ja
jo
push
push
pop
jo
jae
ins
jg
jno
push
pop
jnp
pop
imul
push
ins
jno
jnp
ins
push
dec
ins
jno
jnp
ins
push
jno
imul
jno
jb
jge
ja
jo
jns
push
push
jno
imul
push
dec
jnp
jp
jo
addr16
jno
jb
jge
ja
jo
jg
jnp
pop
jnp
pop
jo
jae
ins
jg
jno
push
jns
push
pop
imul
push
jns
push
push
jno
imul
jg
jnp
dec
jno
jno
jnp
push
dec
ins
ja
push
push
jno
jnp
jnp
push
push
pop
ja
outs
jno
jg
jb
push
pop
ja
outs
jno
jnp
pop
jnp
dec
ins
jno
jnp
ins
jnp
pop
addr16
jg
jnp
pop
jno
jae
push
push
jg
ins
jbe
jb
dec
ja
jnp
js
push
ins
push
imul
ins
pop
jae
push
push
push
jo
dec
push
push
inc
jnp
jno
pop
ja
pop
jno
push
ins
push
dec
jno
jo
sub
push
sub
jns
push
dec
ja
jnp
dec
jno
jo
das
sub
pop
addr16
push
pop
imul
ins
push
pop
jb
jge
pop
jno
addr16
jno
inc
pop
data16
jb
jge
push
push
jnp
ins
jg
jnp
jno
push
pop
ja
jb
jns
jnp
imul
dec
jbe
imul
jnp
xor
jge
ins
ja
addr16
dec
imul
jnp
ins
dec
jo
jg
jg
jnp
pop
jno
jnp
jnp
imul
pop
push
ins
ja
imul
pop
jb
push
jae
jno
push
push
ins
ja
imul
jne
ins
jo
jb
sub
jp
jb
jo
jp
jb
jp
jb
dec
push
imul
jg
jno
push
push
ins
ja
imul
push
jg
jno
push
ja
jp
push
jg
ins
jbe
jb
ins
pop
push
ins
ja
imul
dec
jo
jg
jg
jnp
dec
outs
jnp
je
dec
inc
push
ja
ins
pop
jnp
pop
jl
push
push
jns
inc
addr16
ins
jnp
jno
ins
jge
ins
push
pop
jno
outs
ja
jg
ja
jo
jnp
jg
jg
ja
jo
pop
push
ins
ja
imul
dec
imul
jae
pop
jno
outs
jg
ja
ja
ja
addr16
push
ins
ja
imul
inc
jl
push
jo
dec
pop
jge
pop
push
push
jbe
jg
push
fs
dec
jo
pop
push
inc
jl
push
jo
dec
pop
jge
pop
push
push
jbe
jg
push
fs
dec
jo
pop
xor
jnp
push
pop
push
xchg
xchg
and
and
pushw
jae
jb
ds
push
push
ins
push
ja
jno
jo
and
cmp
das
push
xor
cs
cmp
ds
jnp
jo
jge
jno
jp
ja
jo
jns
and
cmp
dec
push
dec
push
pop
push
xor
das
push
sub
cmp
and
and
and
dec
push
jg
ins
push
jne
ds
push
push
ins
push
ja
jno
jo
and
cmp
das
push
xor
sub
cmp
ds
pushw
jae
jb
jo
ins
push
and
cmp
jbe
push
push
outs
push
and
xor
xor
ins
push
jge
jbe
jnp
jae
jg
ins
push
xor
jae
ja
jge
ins
push
jno
ins
push
jno
js
push
xor
jge
jno
jae
xor
imul
jp
jno
imul
sub
cs
cs
sub
xor
cs
sub
xor
jae
ja
push
xor
push
jg
ins
push
jne
cmp
and
ds
ds
and
dec
push
jnp
jns
ja
ins
push
push
ins
push
jg
push
ja
jno
jo
push
push
jo
js
jno
and
ds
ds
ds
ds
and
pop
push
jg
push
jnp
and
sub
cs
das
push
sub
xor
das
push
cs
xor
sub
sub
dec
push
das
push
sub
and
sub
sub
and
sub
sub
xor
es
daa
push
sub
daa
push
cs
sub
sub
and
xor
pop
push
jg
push
jnp
and
ds
ds
ds
ds
and
pop
push
imul
push
jbe
jno
ins
push
and
inc
push
dec
push
dec
push
pop
push
dec
push
push
push
pop
push
inc
push
and
xor
pop
push
imul
push
jbe
jno
ins
push
and
ds
ds
and
xor
dec
push
jnp
jns
ja
ins
push
push
ins
push
jg
push
ja
jno
jo
push
push
jo
js
jno
and
ds
ds
and
dec
push
ins
push
ja
jns
jns
jnp
ins
push
ins
push
and
ds
ds
ds
ds
and
push
push
jno
jns
jno
jo
dec
push
ins
push
ja
jns
jns
jnp
ins
push
and
ds
ds
ds
ds
ds
ds
and
pop
push
jo
jg
jl
jb
jnp
jp
and
push
ins
push
imul
push
and
xor
pop
push
jo
jg
jl
jb
jnp
jp
and
ds
ds
ds
ds
ds
ds
and
dec
push
ins
push
jnp
ins
push
push
push
jp
and
inc
push
dec
push
dec
push
pop
push
dec
push
push
push
pop
push
inc
push
and
xor
dec
push
ins
push
jnp
ins
push
push
push
jp
and
ds
ds
ds
ds
and
xor
push
push
jno
jns
jno
jo
dec
push
ins
push
ja
jns
jns
jnp
ins
push
and
ds
ds
ds
ds
and
dec
push
jnp
jns
ja
ins
push
push
ins
push
jg
push
ja
jno
jo
dec
push
ins
push
ja
jns
jns
jnp
ins
push
and
ds
ds
ds
ds
ds
ds
and
pop
push
jo
jg
jl
jb
jnp
jp
and
js
jg
jb
ins
push
jnp
and
xor
pop
push
jo
jg
jl
jb
jnp
jp
and
ds
ds
ds
ds
and
xor
dec
push
jnp
jns
ja
ins
push
push
ins
push
jg
push
ja
jno
jo
dec
push
ins
push
ja
jns
jns
jnp
ins
push
and
ds
ds
and
xor
dec
push
ins
push
ja
jns
jns
jnp
ins
push
ins
push
and
ds
ds
and
dec
push
ins
push
ja
jo
jge
ja
outs
push
jg
jb
ins
push
and
ds
ds
ds
ds
and
dec
push
ins
push
ja
jo
jge
ja
outs
push
jg
jb
ds
ja
jp
and
cmp
pop
push
imul
push
jbe
jno
ins
push
cmp
and
ds
ds
ds
ds
ds
ds
and
dec
push
ins
push
jnp
ins
push
push
push
jp
and
inc
push
dec
push
dec
push
pop
push
dec
push
push
push
pop
push
inc
push
and
xor
dec
push
ins
push
jnp
ins
push
push
push
jp
and
ds
ds
ds
ds
ds
ds
and
push
push
jno
jns
jno
jo
dec
push
addr16
outs
push
jnp
and
push
push
jo
push
jnp
ins
push
jg
jge
push
ja
push
push
jno
jne
jnp
jo
and
xor
push
push
jno
jns
jno
jo
dec
push
addr16
outs
push
jnp
and
ds
ds
ds
ds
ds
ds
and
dec
push
imul
push
push
push
jnp
push
push
and
push
push
jnp
jg
ins
push
push
dec
push
ins
push
ja
push
push
jnp
jns
jnp
and
xor
dec
push
imul
push
push
push
jnp
push
push
and
ds
ds
ds
ds
and
xor
dec
push
ins
push
ja
jo
jge
ja
outs
push
jg
jb
and
ds
ds
and
xor
dec
push
ins
push
ja
jo
jge
ja
outs
push
jg
jb
ins
push
and
ds
ds
and
dec
push
jnp
push
push
ja
jo
jns
ins
push
and
ds
ds
ds
ds
and
push
push
imul
push
push
ja
outs
push
jb
jnp
push
push
jo
ins
push
push
jg
jo
and
mov
daa
imul
arpl
sbb
jecxz
ja
idiv
(bad)
es
rol
mov
int3
pop
mov
ds
jmp
push
xchg
cmp
cwde
push
cmp
cmp
jb
(bad)
cmp
test
leave
mov
ret
pop
sub
sysenter
(bad)
push
sets
sbb
cmp
out
cmp
pushf
lods
test
mov
out
cmp
pop
push
(bad)
cs
retf
add
call
or
fisubr
movs
push
aam
mov
pop
psubb
ins
retf
push
mov
or
push
outs
movs
ret
ins
adc
iret
bound
fisubr
mov
in
mov
xchg
loopne
rcr
retf
fld
mov
inc
movs
pop
jb
mov
and
out
push
in
cmp
dec
hlt
pop
pop
and
or
push
sub
ins
sub
pop
ror
sbb
xchg
out
xor
mov
and
adc
mov
cmp
cmc
push
movs
push
int
cmp
sbb
sbb
outs
stos
pop
adc
add
aaa
fstp
ins
mov
dec
scas
jg
sbb
repz
pop
jno
mov
mov
ss
std
dec
mov
cmp
mov
mov
and
jb
ins
jbe
or
or
ja
dec
or
cdq
test
pop
sbb
gs
mov
icebp
icebp
inc
mov
push
ret
jle
leave
rcl
pop
lea
rcr
or
daa
enter
add
dec
(bad)
in
sub
push
cmp
dec
pop
lock
popa
pusha
or
mov
in
sub
xlat
mov
sub
cmc
push
adc
jne
add
sub
repz
sbb
mov
into
jle
daa
pop
out
bound
hlt
push
sbb
fucom
sbb
mov
stc
jno
sub
std
je
or
and
(bad)
sbb
xchg
mov
mov
pusha
in
cmc
xor
push
mov
jae
or
mov
inc
loop
mov
call
enter
loope
pop
push
movs
pop
and
std
out
adc
in
push
into
jnp
dec
mov
movs
or
cmp
sbb
shl
xchg
ds
sbb
imul
push
jno
cmps
aas
push
lods
pop
dec
loop
jg
outs
rcr
cmp
out
jmp
lahf
cmps
fst
mov
mov
out
add
cmps
mul
adc
push
push
sbb
push
sahf
cmp
repz
call
sti
sbb
xchg
lea
lock
jns
jb
cmp
je
out
xchg
out
add
lock
xor
inc
xlat
xlat
inc
pop
xchg
dec
dec
test
sbb
movs
jne
or
loopne
pop
pop
mov
dec
pop
lea
retf
lock
sbb
and
dec
(bad)
lahf
xchg
or
in
cld
dec
add
xor
sbb
fdivr
mov
pop
or
outs
cmp
xchg
inc
dec
push
mov
int
add
push
sub
xchg
jecxz
imul
cmp
sbb
(bad)
xor
das
xchg
ins
mov
test
push
ret
pusha
pand
retf
ss
xor
test
pop
scas
dec
push
dec
add
pop
outs
int3
mul
ins
call
xor
daa
pop
cmps
sbb
mov
iret
xchg
popa
in
idiv
jb
retf
fcom
jae
inc
mov
mov
fmul
out
shr
ss
and
mov
aam
ja
xor
or
and
mov
pop
mov
mov
leave
(bad)
sub
(bad)
gs
push
pop
sbb
loop
int3
pop
xchg
push
fnsave
xchg
fist
in
push
sbb
int
cli
daa
adc
jne
js
mov
pop
mov
push
mov
sbb
lea
jmp
add
mov
dec
xor
dec
adc
gs
adc
stos
mov
fwait
sub
dec
(bad)
sub
ficom
pop
and
daa
mov
inc
dec
push
jmp
jmp
pop
es
int
and
fwait
xchg
adc
xor
jnp
ret
cmp
jg
pop
cli
push
outs
test
cmp
fisubr
nop
pop
mov
out
aad
adc
imul
xchg
jne
or
icebp
jne
jb
shl
mov
push
std
xor
dec
popa
add
fwait
xor
out
call
imul
mov
mov
push
cmps
sub
dec
jge
ja
sahf
xchg
scas
pop
cmps
pop
fs
push
aam
xchg
sbb
sub
leave
sub
jge
pushf
mov
pop
mov
mov
es
fdiv
jp
push
jge
sbb
xor
in
mov
int
mov
icebp
mov
movs
mov
movs
jbe
ins
cmp
pop
(bad)
shr
add
dec
(bad)
cmp
xlat
and
cs
rcr
shl
sub
iret
outs
mul
add
xchg
xchg
fisttp
in
xchg
sub
mov
pop
ret
sbb
cmp
push
push
fwait
cmps
jo
mov
pushf
cmps
fdiv
ins
xor
xchg
xchg
dec
mov
cmps
sahf
or
in
xor
xchg
pop
push
icebp
dec
rcl
jbe
fidivr
pop
in
adc
sub
loop
and
sbb
jp
xchg
aam
pop
push
xor
jae
mov
jl
pop
xor
cmp
cdq
inc
push
bound
stos
xchg
and
mov
stos
or
mov
aaa
lods
adc
jle
xchg
jb
inc
(bad)
xor
in
sub
cmp
pop
ss
shl
mov
and
movs
data16
sbb
sub
(bad)
xchg
jo
leave
cmps
xor
pushf
add
les
push
push
mov
ds
xor
popf
ror
and
retf
jecxz
mov
sbb
out
xchg
cmp
adc
btc
mov
movsx
mov
rcr
or
jbe
add
imul
pop
sti
out
mov
pop
cmps
into
pop
in
adc
neg
jmp
adc
ror
push
mov
dec
or
int
ds
mov
lahf
xchg
jmp
clc
pop
jg
inc
jle
sbb
inc
cmp
mov
rcr
mov
out
adc
dec
jns
mov
pop
jecxz
xor
(bad)
pop
sub
dec
xor
dec
sub
retf
mov
lods
test
in
hlt
sub
mov
fdivr
pop
lods
rcl
movs
jmp
cli
cmps
call
ins
xchg
addr16
xor
push
stos
movs
mov
cmp
dec
test
nop
and
jge
or
or
lods
mov
addr16
push
push
mov
push
push
cmps
fld
in
rcr
jecxz
int
in
das
lods
inc
data16
arpl
dec
mov
inc
and
std
stc
retf
push
and
aam
xchg
jnp
mov
dec
push
push
push
ror
fmul
and
pop
inc
int3
or
or
(bad)
das
jne
sub
stos
jno
sub
xchg
pop
dec
mov
push
fcmovbe
add
xchg
and
fadd
iret
mov
cmp
neg
shl
sbb
cli
and
lock
mov
gs
(bad)
fiadd
js
loopne
mov
push
popf
mov
mov
xchg
in
push
cli
(bad)
pop
adc
pop
call
and
push
jnp
add
mov
int3
jo
jae
cwde
push
fnstsw
pop
and
fnsave
xlat
imul
jno
das
add
push
mov
pop
xor
mov
mov
dec
jecxz
nop
stos
sbb
es
mov
xor
arpl
outs
xchg
sub
movs
mov
std
(bad)
pop
push
xor
inc
icebp
stos
mov
je
jno
mov
in
into
nop
add
dec
aam
lahf
rol
jmp
mov
push
mov
add
das
dec
int3
inc
data16
shl
dec
or
jl
mov
arpl
jecxz
(bad)
mov
movs
pop
or
pop
jl
das
lock
and
bound
xchg
retf
jns
pusha
add
pop
iret
inc
jl
dec
sbb
jecxz
loope
dec
pop
push
mov
add
xor
or
fs
add
mov
sub
cli
push
xlat
xor
xlat
cmp
leave
push
jmp
or
inc
sub
fsub
cs
pop
push
cmps
jae
push
xor
vpunpcklqdq
out
ret
loopne
mov
and
jle
mov
aaa
mov
dec
xchg
xchg
popa
mov
popa
test
cmp
xchg
std
imul
pusha
dec
mov
daa
pop
pop
dec
std
push
lods
cmp
nop
pusha
xlat
std
ret
pop
xchg
push
ins
fs
sbb
cmp
nop
inc
or
js
mov
cmp
and
sub
sbb
mov
sub
sub
into
adc
push
hlt
enter
sahf
(bad)
adc
adc
call
mov
sub
test
daa
lods
dec
inc
cmps
add
test
jl
sub
cmps
jmp
jge
aam
sbb
mov
cmp
cmp
xchg
aam
shl
iret
mov
sahf
test
mov
aam
jl
jbe
mov
xchg
repnz
sub
ds
mov
jp
or
rcl
mov
or
mov
movs
enter
and
aas
or
xor
mov
imul
mov
inc
mov
outs
jmp
sbb
xchg
leave
dec
das
and
inc
cld
outs
popf
dec
xchg
or
add
pusha
and
test
imul
xor
dec
mov
loope
or
mov
nop
int3
fadd
ret
stos
push
push
fimul
in
lock
cs
mov
scas
xchg
sub
adc
mov
leave
cs
popf
xchg
xor
inc
je
push
mov
mov
(bad)
daa
jae
add
dec
lea
fist
push
test
test
and
mov
xchg
pop
add
mov
je
clc
or
std
or
rcl
sub
sbb
cdq
mov
sub
stos
pop
leave
leave
pop
loop
pop
stos
ja
xchg
xchg
call
push
ins
into
aas
adc
dec
mov
fld
add
and
mov
push
push
sbb
xor
and
mov
jnp
scas
jo
cmp
ret
mov
add
xchg
push
outs
push
xor
xor
mov
xchg
add
jecxz
ficomp
push
popf
loope
dec
dec
pop
shr
xor
pop
ror
cmp
in
adc
jge
enter
sbb
jl
jns
sar
jle
ret
push
xor
xor
or
aam
call
dec
dec
inc
popf
add
aas
sbb
xchg
loope
pusha
mov
cmp
retf
ret
(bad)
jnp
add
test
xchg
sub
adc
add
fmul
(bad)
xor
xchg
or
sbb
sub
outs
sub
sbb
pop
leave
dec
jge
xor
clc
retf
pushf
idiv
loop
sub
add
jne
pop
or
mov
cmc
pop
cmp
idiv
outs
pop
cmp
pop
dec
in
sub
push
ror
aad
push
add
mov
shr
mov
mov
sbb
shl
cmp
and
jge
in
inc
nop
arpl
add
gs
lods
ins
inc
adc
push
pop
popf
xchg
gs
ficomp
xor
les
push
pop
dec
int
jbe
mov
add
mov
inc
xor
add
out
ins
sbb
scas
(bad)
stc
mov
sub
not
into
mov
mov
pop
jmp
add
mov
jno
and
sbb
fbstp
in
test
fmul
sti
mov
adc
les
sbb
cli
push
iret
inc
push
mov
outs
xor
mov
xchg
scas
mov
lea
xchg
push
or
repnz
sbb
mov
hlt
mov
lock
dec
out
pop
push
(bad)
mov
pusha
xchg
jg
cmp
rcl
jmp
(bad)
ror
lods
pop
or
dec
mov
(bad)
ja
mov
test
pop
out
out
mov
pop
dec
mov
xchg
jbe
outs
jno
out
pop
cmp
adc
dec
push
je
cmc
arpl
mov
mov
aad
mov
inc
mov
mov
lods
jmp
xchg
aaa
sbb
nop
cld
test
mov
and
out
fidiv
dec
punpcklwd
sahf
sub
ret
fdiv
xchg
mov
pop
mov
test
arpl
ja
xchg
(bad)
pop
ror
push
ftst
mov
pop
mov
jbe
mov
adc
xchg
or
into
jmp
jns
enter
stos
add
xchg
cmp
add
push
mov
jmp
xchg
pop
jae
js
mov
popa
jbe
add
ja
push
push
and
push
add
sbb
cmp
scas
sbb
loop
and
movs
std
pop
outs
adc
pop
jmp
out
jne
jmp
and
mov
call
jp
scas
mov
imul
jns
pop
aad
clc
fs
mov
dec
push
sti
lock
outs
movs
test
into
ds
mov
push
in
rcl
jno
cmp
jecxz
scas
loopne
jae
inc
and
xor
(bad)
(bad)
push
mov
and
rcr
retf
push
cmp
sbb
sub
or
pop
test
fidivr
(bad)
mov
lods
enter
rol
and
or
jp
cmp
jp
jecxz
stos
pop
lahf
dec
repnz
aas
jl
xchg
jb
dec
xchg
mov
stos
mov
cmp
sub
arpl
xchg
sub
fild
or
mov
or
dec
enter
sbb
adc
in
sub
inc
pusha
neg
or
jg
std
mov
add
div
stos
cli
dec
sbb
or
cmp
bound
fiadd
and
ret
add
push
or
in
xor
mov
fnsave
xchg
or
mov
retf
daa
les
fs
imul
test
fimul
mov
(bad)
cmp
or
sub
mov
(bad)
sub
das
pusha
xlat
xchg
push
jns
(bad)
push
dec
test
data16
shl
shr
retf
fist
dec
ss
fcomip
das
mov
mov
cwde
(bad)
jmp
mov
call
out
cmp
xchg
mov
iret
xchg
jle
xchg
outs
data16
xor
out
push
mov
push
mov
bound
dec
or
fs
push
leave
cmp
jnp
out
shl
pop
push
out
adc
inc
ins
jmp
sbb
xchg
mov
mov
dec
jbe
push
js
stos
dec
sub
rcr
test
inc
jae
int3
adc
outs
ficomp
mov
cdq
inc
cmp
mov
push
scas
ins
cmc
or
jo
jae
mov
stc
addr16
mov
int
push
mov
outs
cmp
pop
jp
jno
and
xchg
jnp
sbb
sahf
shl
adc
pop
leave
(bad)
or
pop
jo
test
(bad)
repnz
push
xor
xchg
xchg
xor
mov
add
lea
xchg
cmp
or
shr
loop
push
xor
sub
and
ja
dec
dec
inc
imul
aaa
lahf
out
dec
or
adc
jnp
inc
jae
js
xor
dec
sub
mov
sbb
jge
pop
adc
xchg
push
cmps
adc
cwde
xor
cld
daa
and
add
mov
popa
loop
repz
mov
dec
pushf
mov
pop
xchg
icebp
dec
jae
fwait
icebp
pop
push
cwde
push
mov
repnz
fnstcw
and
pop
cmp
pop
loopne
shr
inc
xor
push
lahf
xor
leave
jnp
mov
in
dec
(bad)
es
std
mov
jl
das
fild
mov
jmp
call
sub
out
dec
xchg
mov
and
das
fs
pop
dec
fstp
xor
dec
je
jecxz
test
das
gs
cdq
pop
pop
xor
sub
or
sahf
shl
ja
mov
scas
test
push
repnz
inc
adc
out
dec
xchg
inc
push
retf
adc
jl
fdivr
outs
aam
enter
jmp
sar
rol
(bad)
push
jns
fcomp
and
jle
sub
movs
call
pusha
imul
inc
dec
nop
xor
pop
adc
and
and
rol
repz
sub
sub
jnp
rcr
test
dec
(bad)
jbe
jo
std
mov
(bad)
ret
inc
mov
es
test
mov
inc
mov
sub
test
je
push
call
adc
adc
sti
in
mov
add
js
aas
inc
ss
js
cmp
jmp
mov
dec
inc
(bad)
int3
and
fwait
sbb
dec
das
mov
mov
enter
xchg
loop
xchg
addr16
and
mov
push
mov
inc
mov
jno
rol
shl
jnp
out
sbb
std
in
mov
jnp
pop
enter
sbb
and
outs
mov
adc
dec
xor
dec
inc
push
or
out
dec
jae
jecxz
scas
push
inc
imul
xchg
mov
sub
and
sub
dec
hlt
arpl
retf
cld
aam
clc
sbb
lds
cmp
(bad)
jbe
pop
sbb
sti
ja
mov
arpl
sub
(bad)
addr16
add
fld
dec
jle
addr16
push
stos
test
xchg
mov
jmp
push
push
xchg
push
cwde
inc
nop
hlt
xchg
xchg
or
imul
jmp
xor
adc
push
mov
daa
ins
or
cmc
mov
jae
lods
(bad)
add
sub
and
fimul
jle
mov
cli
in
aam
leave
or
cli
fcmovnu
dec
xchg
jecxz
jbe
or
and
push
mov
ret
addr16
jle
(bad)
push
mov
fwait
pushf
(bad)
or
lods
dec
pop
mov
stos
shl
inc
cwde
sub
fsub
add
and
or
loop
push
mov
mov
jmp
add
les
pop
fadd
pop
cli
push
sub
out
mov
hlt
fistp
adc
scas
ins
mov
cmp
mov
test
sub
fist
jge
stos
inc
pop
inc
mov
pop
pop
lods
lods
(bad)
mov
xchg
arpl
push
leave
jnp
xchg
xchg
sub
sub
mul
cmp
jne
stc
popf
(bad)
inc
in
sub
adc
add
test
cs
fld
outs
stos
movs
xchg
push
jbe
out
lods
mov
xor
lods
or
adc
sbb
leave
add
mov
std
shl
jmp
mov
jns
scas
int3
mov
pop
xchg
popf
mov
or
push
repz
add
cs
scas
movlhps
push
mov
mov
push
jns
jae
lahf
inc
retf
and
push
push
mov
outs
jmp
in
retf
and
imul
out
cmp
clc
lods
xchg
pop
mov
iret
out
js
into
sbb
stc
dec
repnz
imul
cmp
fs
xor
mov
mov
daa
mov
or
and
inc
cld
inc
add
mov
mov
push
add
cmp
xor
inc
aaa
jae
ret
jbe
pop
pop
ins
adc
je
push
dec
out
jnp
xchg
sbb
sub
int3
aaa
push
ror
enter
pop
cmps
fwait
inc
pusha
sub
xchg
inc
inc
sbb
ins
cwde
cmp
fnstsw
push
out
push
sbb
(bad)
push
pop
ja
data16
call
jge
xchg
cmc
jno
pop
nop
sub
call
out
pop
pop
inc
sbb
inc
or
jmp
shr
movs
xchg
cmps
outs
sbb
dec
ss
and
pop
lds
push
bound
and
push
push
mov
(bad)
and
scas
mov
pusha
into
scas
jmp
or
inc
and
adc
imul
adc
popa
retf
in
fisubr
and
xchg
jb
jnp
aaa
xchg
cmps
gs
mov
inc
jmp
inc
xchg
mov
popf
loopne
xchg
pop
fs
sbb
pop
retf
pop
loopne
adc
push
jmp
nop
daa
stc
aam
mov
cmp
and
mov
out
outs
jge
sub
push
fisttp
cmp
sub
enter
pusha
cdq
int
mov
pop
jno
mov
pushf
inc
sub
psubd
sti
iret
jmp
xor
xchg
cmc
or
aad
sbb
js
dec
enter
aas
call
mov
pop
inc
sub
inc
jecxz
setg
push
test
sar
clc
dec
cmp
loope
scas
mov
inc
sbb
movs
out
ss
adc
inc
push
(bad)
lods
xor
add
in
gs
push
sub
dec
test
push
pop
pop
outs
sbb
mov
out
fs
inc
fisub
ja
xor
adc
push
icebp
pop
or
or
and
push
xor
and
loope
ins
adc
fst
inc
xchg
dec
or
clc
sbb
ss
(bad)
(bad)
push
aam
dec
test
mov
sub
pop
pop
jno
aam
call
test
mov
pop
movs
test
add
(bad)
xor
fnsave
inc
sbb
ret
mov
(bad)
and
dec
push
mov
aas
pop
xchg
sbb
outs
or
aas
add
jmp
js
fstp
pusha
(bad)
sbb
xor
aad
mov
mov
pop
inc
pop
rcr
cs
sub
call
mov
sub
ret
or
into
mov
ss
dec
xchg
stos
add
aas
add
mov
sub
cdq
mov
pop
daa
pusha
inc
mov
sar
out
ja
push
daa
jge
push
jb
xchg
(bad)
sbb
xor
movs
xchg
cdq
pop
sbb
inc
jl
adc
pusha
ja
push
bound
mov
pusha
mov
scas
movs
add
adc
scas
inc
xchg
lahf
pop
sbb
mov
out
xchg
cmc
pop
sbb
and
das
xchg
movs
sbb
test
add
je
rcr
(bad)
es
add
addr16
stc
xchg
or
cld
and
sbb
jnp
xor
(bad)
mov
pop
arpl
xchg
sub
pop
jnp
pop
pop
ins
adc
daa
fs
loopne
fldcw
(bad)
xor
cld
cli
dec
pop
std
xchg
fs
(bad)
sub
call
lahf
jae
shl
or
scas
mov
scas
mov
xor
or
dec
mov
mov
xchg
ret
push
pop
xlat
mov
fisttp
mov
jg
pop
pop
xchg
dec
pop
inc
xchg
stos
xor
add
lahf
add
arpl
outs
jmp
cdq
jecxz
test
sbb
out
std
aad
pop
mov
mov
dec
and
lods
retf
ja
fidivr
arpl
or
test
test
push
addr16
cdq
fistp
icebp
aas
std
mov
xor
dec
pop
stos
jecxz
cmp
sub
add
fadd
aam
call
out
push
movs
add
mov
shl
test
jb
pop
clc
inc
xchg
jle
adc
inc
fidiv
pop
cwde
fsub
pop
sub
call
jg
push
mov
xchg
xchg
cmps
push
mov
sbb
adc
mov
ret
mov
add
mov
push
(bad)
mov
xor
pop
enter
or
add
push
int3
mov
pop
or
sar
mov
add
in
xchg
popf
push
(bad)
mov
cmp
movs
enter
sbb
jl
xor
xchg
ret
inc
std
dec
cmp
add
inc
or
aas
dec
leave
loop
cmps
jmp
packuswb
ds
push
fild
(bad)
adc
xor
rcl
sub
ins
movs
loop
xchg
and
stos
out
push
cdq
icebp
cmp
lahf
(bad)
jbe
pop
test
xor
scas
clc
and
cwde
jmp
in
cpuid
into
das
ds
push
cmps
jmp
pop
pusha
inc
nop
inc
pop
cmp
jmp
add
imul
sbb
out
rol
sbb
push
sbb
mov
dec
jo
cmp
or
sbb
pop
dec
(bad)
dec
jae
shl
pushf
sbb
ds
retf
in
jnp
cmp
clc
leave
mov
push
das
mov
xor
mov
mov
push
adc
cli
jae
sysret
dec
adc
sbb
(bad)
repnz
sbb
jae
lds
fchs
frstor
lods
mov
(bad)
jmp
push
cmp
mov
arpl
xchg
push
je
push
mov
jle
xor
mov
pop
stos
mov
data16
xlat
lods
imul
cmp
xchg
popf
mov
mov
dec
inc
jmp
into
jb
mov
mov
mov
nop
jo
mov
mov
(bad)
clc
pop
sub
movs
imul
in
fbstp
and
pop
jae
lods
fcmovnbe
cmp
(bad)
pop
jl
mov
xor
pushf
clc
inc
push
cdq
(bad)
sub
inc
loopne
jmp
sbb
in
mov
mov
popa
fsubr
jmp
pop
mov
push
out
inc
lds
pop
push
sub
scas
dec
mov
enter
and
cdq
scas
xlat
adc
cmp
lods
(bad)
int3
jle
loope
clc
jns
test
and
sub
xor
gs
(bad)
fwait
sub
add
cmp
(bad)
(bad)
mov
or
call
fsubr
call
icebp
mov
cli
pop
adc
sub
lahf
fst
retf
cmps
or
add
call
jmp
stc
hlt
jbe
push
cmp
(bad)
push
adc
test
cli
adc
inc
mov
xchg
and
add
hlt
adc
ret
mov
mov
mov
das
pusha
and
adc
pop
push
and
popf
test
inc
pop
mov
jmp
cmp
aas
ss
setle
mov
movs
mov
mov
jmp
loopne
xchg
push
pop
sti
mov
vpunpckldq
adc
mov
push
ror
push
das
mov
fdivr
push
push
dec
and
pop
pop
mov
inc
ja
mov
pop
daa
into
add
call
jmp
in
ja
(bad)
cwde
pop
sub
sbb
lahf
sub
arpl
or
inc
cdq
daa
sbb
lea
xchg
arpl
imul
shl
jo
mov
sub
aad
add
aam
push
test
jmp
adc
dec
mov
int3
in
js
(bad)
and
sti
scas
or
clc
or
pop
jno
xor
cdq
daa
jns
and
popa
jno
pop
iret
or
in
sub
sbb
(bad)
sub
aam
ja
rol
call
popf
mov
sub
in
stc
fisttp
fidivr
popf
cmps
nop
or
and
mov
fwait
clc
rcr
std
add
repz
xlat
jge
and
retf
cli
gs
add
push
push
mov
mov
mov
mov
inc
push
sbb
add
pop
frstor
cmc
in
into
dec
mov
aaa
or
ret
push
xchg
js
je
add
mov
test
sbb
leave
xor
sar
(bad)
jns
aas
in
and
(bad)
mov
bnd
mov
adc
aaa
jns
jnp
mov
sub
addr16
adc
mov
mov
imul
not
rcpps
ss
add
(bad)
into
int
call
dec
imul
and
push
jmp
pop
add
iret
push
add
lahf
mov
sahf
xchg
add
outs
lds
outs
push
xchg
lds
rol
cmp
jbe
mov
cmp
sub
fbstp
mov
mov
or
jae
fucomi
enter
mov
inc
cmp
cmp
test
jno
cld
push
adc
fist
icebp
pusha
out
movs
cdq
dec
rcr
xchg
mov
outs
fwait
in
fidiv
bound
ja
mov
sub
mov
rol
stos
lds
cwde
xlat
sbb
xor
adc
into
cs
sar
pop
push
ror
ret
dec
mov
mov
jo
ss
pop
jmp
pop
push
xlat
sbb
test
push
mov
pop
and
mov
cwde
mov
dec
jg
or
fistp
inc
jge
push
loope
les
es
jnp
loop
and
push
or
rcr
stos
cmps
lods
push
sub
in
les
sbb
enter
push
jle
pusha
mov
push
adc
pop
or
jmp
xor
dec
push
cmp
dec
push
jb
rcl
scas
leave
push
push
or
dec
push
sub
push
inc
cmp
jmp
inc
mov
std
sti
loop
sbb
rol
imul
adc
add
xor
out
fs
jns
push
add
fcomip
and
cmps
inc
pop
sub
jmp
aas
adc
into
cmp
pop
and
out
shl
add
cmps
and
pop
jp
cdq
inc
mov
inc
mov
or
xlat
add
(bad)
xchg
(bad)
mov
and
dec
mov
dec
aas
cwde
bound
sbb
jmp
jae
dec
(bad)
pusha
sub
jne
and
sub
xchg
inc
cmps
jne
mov
popf
popf
jmp
jns
mov
or
inc
jle
shl
add
mov
test
xor
imul
mov
xor
mov
jne
add
test
stos
inc
dec
ret
ja
jecxz
loope
push
aad
jecxz
cli
push
dec
repz
push
mov
or
aam
ja
sub
jecxz
mov
and
add
inc
sub
inc
pusha
xor
pop
dec
stos
add
lahf
dec
and
dec
mov
sub
mov
cmps
mov
ret
dec
inc
push
popa
sar
push
mov
mov
mov
xchg
(bad)
xchg
push
lock
mov
push
sbb
fmul
popa
int
push
sar
push
(bad)
sbb
mov
iret
adc
jo
fstp
jbe
mov
inc
sahf
retf
pop
ins
mov
loopne
mov
add
push
jge
bound
int3
sbb
into
fld
stos
sbb
push
and
(bad)
scas
mov
add
aam
add
in
mov
cmp
lahf
jmp
ins
xor
mov
xor
add
shl
push
dec
iret
loopne
jmp
aas
mov
ins
cmp
ficomp
xchg
mov
add
out
and
int3
cmp
jb
or
xor
loope
push
cmps
xor
mov
jmp
frstor
(bad)
fstp
push
cmps
xchg
mov
mov
dec
cmp
cmps
pushf
and
lock
out
and
adc
xchg
xor
and
mov
cmp
pop
jp
call
or
popf
push
jo
sub
dec
imul
fisub
cmp
test
pop
movs
call
loop
cmp
loop
push
stc
mov
shl
cmp
pop
jae
pusha
enter
xor
mov
xor
pushf
(bad)
pop
sub
lock
pop
lds
les
out
push
pop
jns
pop
sbb
into
fs
rcl
xchg
aad
jne
retf
retf
punpckhdq
jg
iret
cmp
lahf
adc
scas
mov
in
(bad)
cli
mov
xchg
adc
dec
push
push
jmp
push
shr
ret
and
inc
xchg
inc
mov
adc
test
cwde
pop
int
ja
mov
adc
sbb
dec
add
and
push
fwait
xchg
xor
jge
and
inc
sub
je
jae
ficom
(bad)
jo
pusha
inc
inc
aad
push
ss
aad
add
pop
pop
pushf
dec
loope
lods
mov
(bad)
lods
pop
jecxz
dec
mov
mov
js
outs
ss
fsubr
stc
push
jmp
pop
out
or
gs
in
or
jge
jg
es
jmp
mov
push
out
push
mov
xchg
sahf
jnp
push
call
xor
jle
(bad)
retf
cs
ror
xlat
add
aas
scas
xlat
aam
je
cmc
and
(bad)
je
imul
pop
movs
xor
mov
inc
mov
lods
cmc
jno
add
popf
(bad)
cmp
arpl
cmc
and
leave
mov
jnp
cmp
ja
mov
ret
cmp
push
inc
cmp
out
sbb
mov
movs
inc
mov
push
icebp
lock
into
jnp
jb
hlt
cmc
test
test
scas
and
and
mov
dec
je
push
and
xor
scas
outs
cld
mov
(bad)
int
fiadd
add
rcl
enter
int3
dec
jp
xchg
mov
es
push
mov
xchg
mov
test
push
and
add
pslld
cmc
(bad)
repnz
cmps
xor
xchg
ins
and
sbb
loop
mov
mov
mov
out
test
cmc
jg
loope
loope
(bad)
add
(bad)
mov
adc
push
aas
mov
push
jl
ins
retf
xchg
scas
jns
bound
neg
fwait
dec
mov
xchg
dec
mov
pop
ss
rcl
test
xor
stos
(bad)
retf
sub
cmp
popf
out
cmp
stos
push
test
(bad)
jnp
cs
movs
loopne
inc
dec
stc
fiadd
(bad)
sbb
popf
pop
(bad)
addr16
in
xor
sbb
fst
jno
cmps
hlt
mov
sbb
rcl
and
jbe
ins
sbb
sbb
nop
mov
aad
pop
sub
repnz
sbb
dec
xchg
scas
pushf
les
retf
icebp
add
imul
sbb
std
push
shl
shl
xor
jmp
data16
xchg
sahf
ret
in
add
fsub
add
or
jb
sbb
dec
jbe
mov
mov
pop
adc
gs
dec
pop
pop
jecxz
fmul
arpl
imul
cmc
out
out
ret
ret
imul
mov
sbb
sti
outs
push
dec
inc
outs
aaa
mov
pop
scas
jae
in
sti
add
xor
addr16
imul
add
ret
jo
fucomp
dec
push
adc
int3
(bad)
int
(bad)
fiadd
out
jmp
xlat
jle
jnp
pushf
out
stos
je
pusha
cmp
xor
popf
add
xchg
pop
imul
(bad)
ret
cmps
lods
pop
push
movs
cmp
sahf
imul
pop
(bad)
movs
inc
fisttp
mov
nop
pop
and
fdivr
fwait
out
cmps
mov
cmp
outs
xor
clc
ins
inc
outs
cmp
push
mov
aam
pop
nop
adc
lods
out
push
mov
(bad)
(bad)
in
mov
sub
inc
mov
add
mov
loop
dec
aam
nop
rcr
inc
xchg
(bad)
sub
shl
or
js
arpl
cmp
rcl
stos
sub
hlt
cdq
or
stos
shl
fwait
iret
push
mov
out
sbb
dec
ret
sti
xor
dec
mov
mov
arpl
mov
push
adc
repnz
lock
pop
(bad)
ror
or
jno
call
ss
jmp
or
inc
aam
icebp
fsubr
sub
mov
stos
adc
sbb
pop
push
imul
cmc
pop
jmp
xor
mov
jmp
hlt
call
sbb
inc
inc
adc
pop
sbb
add
jb
xor
test
aaa
ror
mov
popf
cs
call
lahf
cwde
(bad)
outs
call
ss
pop
mov
call
in
and
test
sub
sbb
sub
mov
scas
add
lods
lods
sub
repz
dec
in
lods
(bad)
es
ret
icebp
push
dec
mov
shr
mov
ror
scas
mov
inc
leave
mov
adc
mov
mov
ins
test
cmp
mov
leave
clc
imul
xchg
mov
div
ror
fwait
jmp
bound
pop
ja
xor
jecxz
and
idiv
mov
nop
jne
cs
mov
dec
pop
jge
arpl
push
add
xor
mov
out
xchg
xor
sbb
xchg
and
popa
(bad)
sbb
and
shl
cli
dec
in
cld
xlat
cmps
retf
xchg
sbb
sti
cdq
pop
(bad)
sub
aam
push
loope
xchg
jle
cmp
lods
arpl
sbb
mov
retf
dec
outs
ror
or
lock
add
jp
cmc
sahf
adc
pop
mov
mov
jbe
mov
push
and
hlt
inc
dec
and
pop
std
(bad)
iret
lods
(bad)
pop
push
data16
in
cmc
imul
jmp
pop
hlt
add
and
jno
fs
inc
test
pop
scas
sbb
js
ins
sbb
adc
jl
adc
cmp
jne
adc
call
retf
pop
mov
test
dec
mov
add
stos
or
out
stc
push
cmps
push
push
icebp
mov
or
sub
or
xchg
mov
ss
xchg
pop
ins
je
xchg
or
data16
dec
add
outs
mov
sbb
xor
fisttp
dec
jge
and
mov
ja
loope
cmp
or
push
retf
test
xor
push
jge
xchg
push
dec
sti
or
or
adc
cmp
(bad)
xchg
add
pop
arpl
add
xchg
sbb
push
fsub
dec
in
cmp
cmp
push
test
(bad)
jp
dec
rol
add
scas
loop
mov
fstp
mov
cmp
inc
pusha
repz
mov
mul
pop
scas
stos
inc
sbb
cld
jl
imul
push
fmul
cld
sub
ror
repnz
stc
in
push
mov
fimul
ja
div
fdivp
sbb
pop
mov
jg
dec
retf
and
jmp
jl
cmp
sub
lea
retf
movs
ss
lods
lds
lods
sbb
mov
jmp
cmps
(bad)
call
and
pop
cmps
sub
sti
(bad)
aaa
xchg
sub
out
(bad)
xlat
dec
call
outs
or
out
mov
cmps
push
aad
mov
outs
pushf
bound
dec
mov
push
mov
das
cmps
adc
sub
or
(bad)
mov
push
mov
dec
or
or
cdq
xor
outs
jbe
sub
fsubrp
or
aaa
enter
push
xchg
js
arpl
test
sub
mov
div
ins
push
(bad)
ds
repnz
loopne
dec
pop
ins
mov
and
rcr
hlt
loope
js
test
lods
dec
push
inc
nop
jmp
pop
mov
inc
pop
inc
jl
je
jns
js
hlt
je
cmps
add
es
repz
(bad)
sbb
jmp
add
cmp
mov
shl
test
push
mov
sahf
ja
sbb
pushf
mov
dec
add
dec
cmp
aaa
(bad)
push
mov
cwde
fistp
iret
(bad)
push
sti
jl
mov
cmps
mov
jns
cmps
and
or
dec
int
mov
sub
push
aaa
sub
mov
dec
lock
loopne
aam
push
xor
retf
int
jne
pop
js
or
lds
push
arpl
jne
jge
ds
jb
mov
mov
jl
mov
ss
imul
enter
push
ds
or
mov
fisub
mov
push
sbb
dec
mov
stos
js
cmps
mov
popf
popa
jp
xor
(bad)
cmp
std
test
push
pop
ins
dec
lahf
jge
movs
dec
loopne
loopne
outs
jle
pop
in
(bad)
and
mov
(bad)
mov
cwde
xor
mov
out
clc
aaa
fnstenv
test
sub
jbe
xor
inc
add
sbb
or
mov
test
mov
popa
mov
mov
add
or
sub
cmps
mov
(bad)
cwde
xchg
dec
inc
call
cmp
adc
cli
jmp
imul
test
mov
pop
xchg
(bad)
fcom
dec
mov
into
push
repz
call
fiadd
adc
cmp
pop
sbb
adc
fimul
popf
cs
bound
mov
dec
lahf
clc
xor
pminub
imul
ins
push
jno
and
jmp
(bad)
lock
ins
jge
ins
cmp
or
shl
xchg
sbb
or
jge
fs
jecxz
stos
cmc
sbb
pop
sub
je
jmp
push
xor
xor
adc
or
mov
int3
ret
and
leave
loop
cmps
jnp
out
ja
cmp
aas
cld
push
mov
adc
mov
or
iret
jle
push
inc
cld
or
xchg
pop
sub
pushf
pop
outs
test
shl
mov
lea
not
push
pusha
jl
and
fwait
push
sub
and
mov
in
sbb
shr
dec
loop
outs
bound
std
pop
test
or
(bad)
mov
sub
hlt
outs
mov
shl
into
fnstenv
lea
dec
xor
gs
movhps
pop
xchg
xchg
jo
sub
call
or
shr
stos
mov
shl
sub
sub
nop
fmul
mov
cmp
jle
or
js
mov
mov
movups
inc
add
popa
mov
gs
popa
call
cmp
div
fucom
outs
dec
mov
cmovle
cmps
mov
cmc
and
mov
mov
cli
jb
cmp
movs
add
pop
xlat
dec
std
push
pop
call
push
mov
sub
dec
loop
int
mov
cmp
push
inc
les
or
in
sbb
xor
cmp
pop
lds
or
xchg
xor
je
sbb
and
cmp
aam
mov
mov
or
int
sbb
fwait
jne
push
mov
fisub
(bad)
mov
mov
bound
(bad)
outs
rol
cdq
cmp
retf
cwde
ja
cmp
into
sub
int
cmps
lock
(bad)
idiv
int
lahf
add
(bad)
(bad)
test
dec
cmp
sbb
push
jo
xchg
gs
xor
mov
retf
scas
out
xchg
stc
aad
pop
push
cli
ret
xor
xor
cmp
repnz
jle
fistp
hlt
push
int3
push
es
mov
fmul
xor
pop
push
je
scas
lock
ss
push
aam
cmp
aam
pop
jecxz
xchg
arpl
sahf
cmp
scas
xchg
dec
jo
stc
lds
jae
sub
mov
popf
inc
dec
pop
inc
mov
or
sub
stos
aad
mov
loop
dec
sbb
ret
or
inc
jae
xor
or
mov
pop
xor
xor
pop
or
push
mov
mov
iret
cmp
not
jmp
push
cmps
stos
xor
mov
mov
mov
push
into
mov
adc
mov
pop
push
sbb
mov
movs
fwait
addr16
mov
xchg
mov
adc
sar
or
repnz
adc
mov
lea
jb
mov
shl
mov
ja
xor
std
aas
fbstp
jne
adc
aam
cmp
call
push
inc
push
hlt
aas
dec
(bad)
mov
les
sbb
jbe
add
cli
adc
jo
mov
add
loope
cmp
cdq
sbb
test
mov
xor
addr16
popf
aaa
add
movs
fdivr
retf
pop
dec
xchg
sub
repnz
pop
cmp
adc
inc
in
add
sub
or
pop
shl
or
cmp
fstp
adc
xor
or
ss
cmp
push
fmul
out
out
mov
scas
ret
sbb
js
pop
push
pop
addr16
xor
pop
ja
call
cmc
and
inc
imul
push
aam
out
mov
pop
and
out
aad
jge
das
out
xchg
mov
mov
(bad)
xchg
inc
(bad)
inc
clc
cmps
xchg
push
call
push
mov
mov
push
xor
pop
leave
enter
push
and
sti
retfw
jmp
(bad)
cmp
mov
push
adc
aam
dec
loopne
aas
pop
dec
mov
jg
jo
mov
fsub
adc
jg
int
add
cmp
dec
mov
push
add
stos
repz
add
test
fnsave
mov
test
jb
push
or
repnz
adc
xor
adc
jbe
fsub
and
mov
xchg
jb
pop
jae
cmp
shl
je
or
push
aam
push
or
aam
pusha
movs
mov
test
lods
(bad)
imul
stos
cmp
popa
mov
ss
out
movs
jecxz
icebp
(bad)
jo
push
and
mov
mov
stos
mov
nop
aaa
push
and
xor
sub
fcomi
shl
cmc
dec
inc
xchg
mov
clc
loope
mov
sub
push
fxam
les
scas
gs
push
add
stc
push
mov
aaa
enter
mov
lods
bound
lods
sahf
fiadd
ins
test
ficom
sahf
cs
mov
and
hlt
outs
inc
sub
iret
push
ds
adc
das
(bad)
fimul
xchg
movs
retf
xor
int
cmp
or
jo
lock
jle
xor
pop
jg
mov
cli
paddb
and
inc
loopne
imul
adc
lock
pop
jcxz
push
cmp
inc
adc
scas
rcl
adc
xchg
inc
cmps
iret
jbe
push
mov
retf
push
fst
mov
ret
ror
jae
sbb
int3
aaa
cmp
iret
xor
scas
jecxz
cmps
add
loope
jle
retf
ror
push
shl
(bad)
in
bound
outs
cmp
jle
jmp
cmp
xchg
pop
push
mov
xchg
shl
inc
jg
pop
js
nop
fsubr
(bad)
xchg
test
xlat
retf
rcl
shl
mov
push
xchg
mov
aad
xor
(bad)
les
inc
dec
mov
dec
mov
test
xor
cmp
push
xchg
cmp
loop
xor
test
mov
cmps
sbb
sub
push
adc
popa
int
sub
and
mov
aam
jg
jp
mov
pusha
pop
dec
add
jbe
lds
mov
inc
xchg
shl
mov
pop
pop
mov
loopne
and
jmp
dec
push
push
fisubr
ret
(bad)
jl
popa
inc
push
(bad)
aam
mov
mov
cli
mov
out
retf
out
adc
or
ss
dec
aam
mov
dec
dec
imul
jle
adc
or
dec
xchg
cmp
or
xor
mov
xchg
scas
mov
in
(bad)
mov
mov
or
dec
adc
scas
sub
hlt
outs
push
jb
mov
push
into
push
sbb
adc
pop
sub
(bad)
popf
loope
sbb
jae
test
aam
xchg
popa
mov
add
scas
les
and
ins
adc
outs
ins
pop
not
mov
dec
cmp
fild
sbb
push
arpl
add
dec
sub
iret
mov
and
movs
int
ja
cli
xor
movs
adc
ror
scas
and
(bad)
js
xlat
add
push
mov
mov
mov
bound
cli
call
mov
mov
push
inc
jbe
fst
inc
out
lea
dec
dec
mov
jbe
cwde
push
in
push
or
push
out
mov
inc
push
fst
int
jb
ja
mov
sbb
fild
mov
icebp
push
fisub
add
mov
stc
inc
xor
repz
jno
inc
add
jno
shl
cld
cli
loop
fld
loope
pop
sbb
outs
mov
fidivr
dec
inc
das
inc
push
jbe
xchg
retf
loope
mov
or
iret
sahf
(bad)
sbb
rcr
xor
jle
mov
add
fsub
stos
in
bound
inc
into
in
ins
push
popf
or
ret
movs
jle
pop
adc
add
psubsw
push
pop
mov
lods
int
cmp
sbb
cmp
mov
jne
adc
fidivr
loope
int
call
mov
jae
out
xchg
in
push
js
xchg
gs
ret
pop
lahf
mov
out
cdq
xor
mov
mov
cmp
ss
jmp
ds
(bad)
mov
ffreep
test
icebp
out
outs
in
jns
test
ffree
pusha
push
push
xchg
jnp
pop
push
pushf
and
stc
fdivr
add
mov
sub
lods
lea
das
xchg
pop
xchg
scas
dec
movs
mov
pop
addr16
jne
mov
inc
aad
aas
mov
call
gs
jo
cmp
jge
add
xor
push
xor
fcomp
xchg
ror
and
(bad)
repz
out
ins
gs
mov
dec
mov
mov
cmp
lahf
push
inc
cmp
nop
jnp
pusha
ja
(bad)
and
arpl
retf
stc
add
loopne
cmp
push
sbb
cli
int3
sbb
mov
sbb
(bad)
mov
cmp
test
loope
mov
int
add
retf
aam
mov
mov
scas
push
inc
push
cmp
(bad)
push
mov
shl
push
dec
in
add
push
pusha
es
pop
(bad)
popf
mov
lea
rcl
sbb
cwde
enter
add
inc
push
pop
out
cmp
js
sar
xchg
rcr
mov
movs
dec
adc
dec
xchg
arpl
dec
daa
dec
xchg
scas
and
aaa
inc
inc
and
jmp
fstp
scas
jae
push
dec
bound
inc
js
loopne
jne
test
es
mov
shl
inc
mov
sbb
xlat
fnsave
ret
jp
jb
dec
cwde
push
push
sub
xchg
mov
fxtract
ror
imul
or
mov
std
mov
jle
adc
add
mov
xchg
cmc
ds
pop
and
enter
sub
fst
push
xor
add
mov
ror
imul
xchg
cld
jo
mov
xor
jns
js
jecxz
int3
mov
sub
sbb
inc
imul
sbb
jae
mov
adc
mov
imul
(bad)
pop
rol
mov
iret
mov
jmp
int
dec
dec
ret
push
xchg
push
adc
dec
scas
mov
sub
mov
sbb
xchg
popa
dec
lock
call
sub
sub
jo
xchg
lea
aas
(bad)
(bad)
cmps
add
xchg
mov
xor
push
vpsubsb
push
repz
mov
mov
push
ds
outs
push
lods
dec
xor
out
sub
jmp
neg
mov
push
es
sbb
xor
pop
add
adc
lods
push
sub
gs
xor
jbe
push
(bad)
sub
in
cwde
add
adc
call
xchg
(bad)
iret
movs
xor
cmp
in
adc
xor
or
pop
enter
hlt
sub
sbb
pop
(bad)
adc
inc
sub
cmps
or
(bad)
movs
xor
outs
ffree
call
dec
inc
and
xchg
sti
add
jb
ins
mov
or
clc
inc
inc
out
loop
sbb
mov
cmp
jmp
stc
ds
push
push
push
cli
and
and
movs
in
in
sbb
pop
jl
retf
xor
mov
fstp
das
cdq
mov
popf
jl
aas
mov
mov
and
imul
test
lahf
mov
mov
ss
sub
and
add
adc
loopne
(bad)
fisubr
aaa
xor
pop
and
add
adc
ret
shl
jmp
cmps
jbe
mov
or
mov
xchg
dec
pusha
inc
jo
adc
(bad)
lahf
mov
int3
adc
rcr
add
cmp
outs
lds
xchg
adc
outs
aas
scas
and
pushf
pop
push
shl
add
arpl
pop
stc
inc
mov
mov
(bad)
mov
mov
lock
sbb
fcmovb
inc
ins
pop
mov
push
ins
pop
xor
int
int
adc
mov
inc
cld
idiv
xchg
std
cmp
or
dec
xor
adc
dec
lea
dec
arpl
(bad)
xchg
aaa
jne
mov
mov
int3
scas
jbe
push
scas
xchg
lahf
pop
popa
ins
push
cld
adc
add
stos
(bad)
out
shl
outs
shl
cmp
popa
jae
pop
(bad)
sbb
push
ret
mov
mov
and
and
and
add
push
dec
xchg
xchg
sub
adc
adc
pop
mul
icebp
adc
stos
pop
dec
popf
(bad)
in
fnsave
mov
mov
and
mov
dec
mul
lods
pop
adc
call
sbb
xchg
(bad)
push
in
not
test
fadd
sbb
push
lods
mov
push
adc
add
pop
cli
cmps
idiv
xchg
fisttp
add
in
push
cmp
xchg
mov
fmul
push
outs
add
inc
jmp
retf
xor
xchg
mov
jae
and
inc
loope
push
inc
retf
mov
fs
dec
dec
dec
movs
cmp
clc
aad
inc
jle
inc
add
and
cmp
cli
das
adc
dec
or
inc
pop
repnz
fst
ret
push
scas
mov
push
or
lods
adc
adc
sub
xchg
imul
fidiv
mov
mov
push
(bad)
stc
pushf
sub
mov
adc
mov
mov
ss
(bad)
pushf
lock
dec
fdivp
jb
sbb
jmp
cmps
jl
call
ss
xchg
sub
add
add
cmp
retf
retf
mov
in
lea
inc
lahf
jnp
aam
sbb
or
xor
fnstenv
rcr
dec
adc
or
shl
lds
aaa
div
cmp
repnz
pop
adc
mov
mov
xchg
cli
push
xchg
or
iret
or
inc
stos
cmp
popf
stos
and
cld
jp
sbb
mov
addr16
add
pop
pop
mov
sar
mov
mov
pop
inc
retf
push
cmp
push
(bad)
sti
mov
push
test
jb
(bad)
push
fistp
mov
and
add
mov
cmp
call
lea
not
push
lahf
out
(bad)
jo
clc
pop
stos
in
fnsave
jns
add
mov
lock
fdivr
add
push
xor
xor
push
dec
mov
bnd
xchg
add
unpckhps
inc
aaa
shl
pop
aad
(bad)
jp
call
adc
inc
rcl
adc
mov
fild
adc
add
iret
pop
jb
sbb
inc
pop
push
out
and
stc
fwait
sahf
pop
xchg
arpl
or
add
ds
mov
inc
mov
cmp
xor
rol
in
jbe
push
and
dec
pusha
js
imul
(bad)
adc
in
mov
arpl
mov
jmp
in
sub
(bad)
cwde
sub
dec
int
iret
cmp
sbb
inc
jg
dec
adc
adc
sahf
pop
out
mov
jl
dec
dec
xor
jl
pop
scas
loopne
and
sbb
std
gs
sbb
ret
mov
mov
pop
pop
lods
out
mov
sub
imul
repz
sahf
pop
aaa
pop
mov
cs
shl
pop
cmp
jns
cmps
xor
sub
pusha
(bad)
cld
out
and
je
rcr
push
in
pop
mov
pop
pop
stc
mov
inc
cs
(bad)
jns
loope
fwait
ss
or
popa
add
aam
push
sti
xor
rol
or
daa
inc
sbb
pusha
les
cmc
push
fs
adc
inc
in
xchg
add
repz
mov
jbe
inc
xor
call
arpl
dec
cmp
fisub
jno
jns
(bad)
bound
mov
or
shr
fwait
ret
ror
shrd
fimul
inc
retf
out
dec
icebp
(bad)
fcmovnbe
(bad)
cli
cli
stc
fstp
int3
imul
aam
shr
cwde
and
ins
out
dec
mov
(bad)
leave
or
clc
fisttp
call
and
mov
dec
ins
xlat
repz
xchg
and
ret
xchg
mov
mov
aas
pop
lods
jb
pop
fisttp
ret
fs
or
adc
cmp
and
mov
adc
aaa
jae
test
add
arpl
pushf
inc
xchg
out
cmp
inc
mov
cmps
rol
test
adc
sub
mov
lea
popa
dec
jbe
adc
aam
mov
mov
outs
mov
and
pop
mov
cld
aad
nop
(bad)
jnp
adc
sti
cld
ret
mov
rcr
mov
loope
push
test
fs
sub
mov
psubd
push
(bad)
sbb
repz
jle
aaa
cli
cmps
(bad)
jge
inc
mov
push
hlt
icebp
sbb
nop
dec
movs
ret
ret
ror
or
movs
or
enter
jae
in
fs
jno
xor
repz
pop
push
mov
cwde
adc
sahf
stos
pop
std
mov
data16
mov
cmp
xchg
xchg
and
mov
add
xchg
sub
ror
xor
lea
mov
inc
jns
movs
sbb
scas
stos
jns
bound
test
cmps
push
jne
pop
dec
adc
loope
out
add
xchg
push
add
push
jge
jnp
ins
push
dec
push
jno
jb
ja
jge
addr16
and
dec
push
push
jno
outs
push
pop
push
pushw
ja
ins
push
push
ja
jo
jns
and
xor
push
push
imul
push
push
ja
outs
push
jb
jnp
push
push
jo
ins
push
push
jg
jo
jge
jnp
ins
push
dec
push
jno
jb
ja
jge
addr16
and
ds
ds
ds
ds
and
pop
push
ja
ins
push
jg
jb
jb
jno
imul
jg
ins
push
push
push
push
js
push
push
jo
pop
push
jg
push
push
jnp
ins
push
ja
jnp
ins
push
and
js
jg
jb
ins
push
jnp
and
xor
pop
push
ja
ins
push
jg
jb
jb
jno
imul
jg
ins
push
push
push
push
js
push
push
jo
pop
push
jg
push
push
jnp
ins
push
ja
jnp
ins
push
and
ds
ds
ds
ds
and
dec
push
push
jno
outs
push
push
push
js
pop
push
jno
ja
jo
jns
push
push
jo
pop
push
jg
push
push
jnp
ins
push
ja
jnp
ins
push
and
push
ins
push
imul
push
and
xor
dec
push
push
jno
outs
push
push
push
js
pop
push
jno
ja
jo
jns
push
push
jo
pop
push
jg
push
push
jnp
ins
push
ja
jnp
ins
push
and
ds
ds
ds
ds
and
pop
push
jb
jb
jno
imul
ins
push
jp
dec
push
jnp
ins
push
jae
ja
jo
jg
push
jnp
and
js
jg
jb
ins
push
jnp
and
xor
pop
push
jb
jb
jno
imul
ins
push
jp
dec
push
jnp
ins
push
jae
ja
jo
jg
push
jnp
and
ds
ds
ds
ds
and
dec
push
push
jg
ins
push
push
dec
push
jbe
jnp
jo
pop
push
push
push
jb
jg
jl
jb
jnp
and
push
ins
push
imul
push
and
xor
dec
push
push
jg
ins
push
push
dec
push
jbe
jnp
jo
pop
push
push
push
jb
jg
jl
jb
jnp
and
ds
ds
ds
ds
and
dec
push
imul
push
push
push
jo
jb
addr16
push
push
js
push
push
jnp
push
imul
jne
pop
push
push
push
jb
jg
jl
jb
jnp
and
js
jg
jb
ins
push
jnp
and
xor
dec
push
imul
push
push
push
jo
jb
addr16
push
push
js
push
push
jnp
push
imul
jne
pop
push
push
push
jb
jg
jl
jb
jnp
and
ds
ds
ds
ds
and
push
push
jp
jb
jnp
dec
push
jnp
push
push
ja
jo
jns
ins
push
and
ds
ds
ds
ds
ds
ds
and
dec
push
push
jno
outs
push
push
push
jo
push
push
jp
jb
jnp
pop
push
jo
jp
and
push
ins
push
imul
push
and
xor
dec
push
push
jno
outs
push
push
push
jo
push
push
jp
jb
jnp
pop
push
jo
jp
and
ds
ds
ds
ds
ds
ds
and
dec
push
jnp
ins
push
push
jg
ins
push
push
push
push
jo
push
push
jp
jb
jnp
and
js
jg
jb
ins
push
jnp
and
xor
dec
push
jnp
ins
push
push
jg
ins
push
push
push
push
jo
push
push
jp
jb
jnp
and
ds
ds
ds
ds
and
xor
push
push
jp
jb
jnp
dec
push
jnp
push
push
ja
jo
jns
ins
push
and
ds
ds
ds
ds
and
pop
push
jb
jb
jno
imul
jg
ins
push
push
push
push
jo
pop
push
jnp
jae
jg
jo
jp
and
push
ins
push
imul
push
and
xor
pop
push
jb
jb
jno
imul
jg
ins
push
push
push
push
jo
pop
push
jnp
jae
jg
jo
jp
and
ds
ds
ds
ds
and
pop
push
jo
jg
jl
jb
jnp
jp
and
push
ins
push
imul
push
and
xor
pop
push
jo
jg
jl
jb
jnp
jp
and
ds
ds
ds
ds
and
push
push
ja
jp
jp
jnp
jo
and
js
jg
jb
ins
push
jnp
and
xor
push
push
ja
jp
jp
jnp
jo
and
ds
ds
ds
ds
and
dec
push
imul
push
push
push
jo
jb
addr16
push
push
js
push
push
jp
jb
jnp
and
js
jg
jb
ins
push
jnp
and
xor
dec
push
imul
push
push
push
jo
jb
addr16
push
push
js
push
push
jp
jb
jnp
and
ds
ds
ds
ds
and
dec
push
jg
jne
jnp
dec
push
jno
dec
push
imul
push
and
js
jg
jb
ins
push
jnp
and
xor
dec
push
jg
jne
jnp
dec
push
jno
dec
push
imul
push
and
ds
ds
ds
ds
and
pop
push
pushw
jnp
jge
imul
push
ja
jno
jo
dec
push
ja
jae
jnp
push
push
ja
jae
ja
push
and
dec
push
dec
push
cs
dec
push
and
xor
pop
push
pushw
jnp
jge
imul
push
ja
jno
jo
dec
push
ja
jae
jnp
push
push
ja
jae
ja
push
and
ds
ds
ds
ds
and
dec
push
ins
push
ja
jno
ins
push
ja
push
addr16
and
sub
and
xor
dec
push
ins
push
ja
jno
ins
push
ja
push
addr16
and
ds
ds
and
xor
dec
push
jnp
push
push
ja
jo
jns
ins
push
and
ds
ds
and
pop
push
jge
push
ja
jno
jo
ins
push
ds
pop
push
jno
jo
push
jnp
pushw
push
and
cmp
pop
push
imul
push
jbe
jno
ins
push
cmp
and
ds
ds
ds
ds
and
pop
push
pushw
jnp
jge
and
ds
ds
ds
ds
ds
ds
and
pop
push
jno
jae
jae
jg
jo
jp
and
inc
push
push
push
push
push
pop
push
pop
push
dec
push
push
push
push
push
push
push
inc
push
and
xor
pop
push
jno
jae
jae
jg
jo
jp
and
ds
ds
ds
ds
and
xor
pop
push
pushw
jnp
jge
and
ds
ds
and
xor
pop
push
jge
push
ja
jno
jo
ins
push
and
and
xor
dec
push
jg
ins
push
jne
and
pop
or
push
ins
push
jnp
ins
push
jno
imul
push
jge
jnp
ins
push
push
lahf
pop
das
push
bound
dec
push
dec
push
dec
push
jns
push
push
jp
pop
push
outs
push
push
push
jl
push
push
dec
push
dec
push
pop
push
push
push
outs
push
jns
dec
push
jl
inc
push
pushw
pushw
jns
addr16
dec
push
pop
push
bound
cs
bound
cs
bound
cs
bound
cs
bound
cs
bound
cs
bound
cs
bound
cs
bound
das
push
cs
cs
cs
cs
bound
das
push
bound
ja
jo
push
jnp
ins
push
jo
jnp
push
xor
jnp
pushw
jnp
bound
pop
push
outs
push
outs
push
pop
push
jg
push
jg
bound
jg
jp
jae
ja
jo
bound
cs
bound
cs
bound
cs
bound
cs
bound
das
push
bound
cs
bound
cs
bound
push
push
jnp
jb
dec
push
pop
push
jg
push
push
push
push
bound
cs
bound
cs
bound
cs
bound
cs
bound
cs
bound
inc
push
pop
push
ins
push
ins
push
pop
push
dec
push
je
jne
pop
push
pop
push
bound
pop
push
pop
push
push
push
inc
push
dec
push
pop
push
dec
push
pop
push
jnp
dec
push
imul
push
pop
push
ja
push
dec
push
outs
push
pop
push
pop
push
push
push
fs
inc
push
dec
push
jne
jbe
jge
ins
push
dec
push
bound
sub
bound
das
push
bound
push
sbb
das
push
push
adc
jae
jp
xor
jnp
pushw
jnp
push
pop
xor
jge
ds
jnp
jge
jbe
jno
ds
inc
push
fs
jno
jo
jnp
dec
push
ins
push
jg
jo
ins
push
js
jnp
ins
push
inc
push
inc
push
jno
jo
jnp
push
push
pop
push
ds
and
ds
sub
ds
and
ds
push
xor
inc
push
push
push
push
push
pop
push
xor
ja
jp
jnp
jo
push
ja
js
ja
jnp
ins
push
ds
cmp
ds
jnp
pushw
ja
push
push
adc
jo
jg
ins
push
push
adc
outs
push
outs
push
pop
push
jg
push
jg
push
sbb
dec
push
pop
push
push
push
dec
push
push
sbb
inc
push
dec
push
dec
push
pop
push
dec
push
push
push
pop
push
inc
push
push
or
push
push
push
push
pop
push
pop
push
dec
push
push
push
push
push
push
push
inc
push
push
pop
ins
push
jge
jbe
push
jg
ins
push
jne
ins
push
xor
jnp
pushw
jnp
push
aaa
xor
pop
push
ins
push
jnp
jg
push
jnp
ds
xor
dec
push
push
push
ds
cmp
dec
push
outs
push
jp
jg
push
jnp
inc
push
push
(bad)
push
ds
xor
inc
push
push
push
push
push
ds
cmp
push
sbb
dec
push
push
push
pop
push
dec
push
dec
push
pop
push
dec
push
pop
push
inc
push
push
push
ja
jge
ins
push
jno
ins
push
jno
js
push
inc
push
dec
push
ja
jo
jp
jno
imul
pop
push
imul
push
ins
push
jnp
jo
push
dec
push
jnp
ins
push
ins
push
ja
jno
jo
inc
push
dec
push
jno
jb
ja
jge
ja
jnp
ins
push
inc
push
dec
push
addr16
ins
push
push
jnp
jae
push
or
jg
jl
jb
jnp
push
push
dec
push
pop
push
push
sbb
push
push
push
push
pop
push
inc
push
inc
push
pop
push
dec
push
dec
push
dec
push
pop
push
push
push
dec
push
inc
push
dec
push
dec
push
pop
push
dec
push
inc
push
dec
push
jno
js
push
imul
jnp
inc
push
dec
push
jno
jb
ja
jge
ja
jnp
ins
push
inc
push
push
push
ja
jge
ins
push
jno
ins
push
jno
js
push
inc
push
dec
push
ja
jo
jp
jno
imul
dec
push
addr16
ins
push
push
jnp
jae
push
or
ja
ins
push
jg
jl
jb
jnp
pop
push
push
push
pop
push
push
sahf
mov
push
push
pop
push
inc
push
inc
push
pop
push
dec
push
dec
push
dec
push
pop
push
push
push
dec
push
inc
push
dec
push
dec
push
pop
push
dec
push
inc
push
dec
push
jno
js
push
imul
jnp
inc
push
push
push
ja
jge
ins
push
jno
ins
push
jno
js
push
inc
push
dec
push
ja
jo
jp
jno
imul
pop
push
imul
push
ins
push
jnp
jo
push
dec
push
jnp
ins
push
ins
push
ja
jno
jo
inc
push
dec
push
jno
jb
ja
jge
ja
jnp
ins
push
inc
push
dec
push
addr16
ins
push
push
jnp
jae
push
add
ja
ins
push
jg
jl
jb
jnp
dec
push
jg
ins
push
jne
push
push
jns
ins
push
push
sbb
sub
push
push
(bad)
push
jg
ja
jo
js
ja
jb
jnp
push
adc
jl
jge
xor
jnp
pushw
jnp
push
or
push
jns
pop
push
ins
push
jae
xor
jnp
pushw
jnp
push
add
outs
push
push
push
jg
imul
push
jge
jbe
xor
jnp
pushw
jnp
push
or
push
push
jno
ins
push
push
xor
jnp
pushw
jnp
push
sbb
jo
jno
push
jnp
outs
push
jg
jp
xor
jnp
pushw
jnp
push
sbb
and
push
adc
jl
ja
jnp
jp
jb
jb
push
or
ins
push
jnp
ins
push
jbe
jg
ins
push
jne
push
adc
ja
jp
jp
jb
jnp
ins
push
push
adc
dec
push
pop
push
ds
dec
push
dec
push
push
push
push
push
pop
push
cmp
push
pop
push
cmp
push
pop
push
cmp
push
cmp
push
pop
push
cmp
push
pop
push
cmp
push
pop
push
cmp
push
cmp
push
pop
push
cmp
push
pop
push
cmp
push
pop
push
push
adc
cs
arpl
cmp
push
sbb
push
call
pop
mov
sub
test
sub
xchg
push
scas
and
bswap
adc
sbb
push
push
pop
sbb
push
or
sbb
or
pop
or
sbb
push
or
sbb
or
pop
or
sbb
push
or
sbb
or
pop
or
sbb
push
or
sbb
or
pop
or
sbb
push
or
sbb
push
or
sbb
push
or
sbb
push
or
sbb
pop
sbb
sbb
ds
or
sbb
add
sbb
pop
pop
add
add
sbb
pop
pop
pop
push
add
sbb
push
sbb
push
or
push
sbb
push
or
adc
adc
push
push
adc
push
sbb
sbb
pop
sbb
push
push
push
sbb
pop
pop
adc
push
adc
adc
push
push
sbb
push
adc
rdmsr
push
(bad)
sbb
sbb
push
add
adc
sbb
push
push
push
push
push
push
adc
sbb
push
add
push
push
push
sbb
sbb
push
push
pop
push
sbb
push
pop
push
push
push
push
push
sbb
push
push
push
push
push
sbb
pop
push
push
sbb
push
sbb
sbb
push
push
push
push
push
sbb
adc
sbb
sbb
sbb
pop
sbb
pop
pop
(bad)
push
pop
push
pop
push
push
push
push
push
sbb
sbb
adc
or
push
adc
addr16
jnp
outs
jb
push
sbb
xor
xor
xor
push
push
sbb
push
push
push
sbb
or
pop
or
sbb
or
pop
or
sbb
or
pop
or
sbb
or
pop
or
sbb
pop
or
sbb
pop
or
sbb
pop
or
sbb
pop
or
sbb
pop
pop
adc
xor
outs
jb
jge
push
jno
push
push
or
xor
jl
jnp
push
push
push
push
pop
push
adc
jno
outs
imul
push
push
adc
push
sbb
xor
jnp
push
push
sbb
pop
add
sbb
sbb
push
sbb
pop
or
mov
sbb
or
sbb
push
pop
push
add
sbb
add
sbb
pop
add
sbb
sbb
adc
adc
jg
push
sub
ins
push
jae
dec
jnp
xor
ins
push
xor
jno
jno
jno
ins
xor
jg
push
push
outs
pop
jb
jnp
push
ins
jno
jno
jno
or
ins
jnp
push
inc
inc
push
jo
push
jo
jnp
inc
or
jno
jnp
inc
push
jo
push
jo
jnp
inc
push
push
push
sbb
or
pop
or
or
or
pop
sbb
pop
push
push
push
push
sbb
pop
adc
sbb
push
or
sbb
push
add
sbb
sbb
adc
sbb
sbb
adc
adc
sbb
adc
adc
setle
adc
push
pop
pop
push
sbb
sbb
sbb
push
or
sbb
pop
pop
setle
adc
adc
push
push
or
(bad)
sbb
pop
pop
or
(bad)
sbb
pop
sbb
sahf
xchg
push
pop
adc
sahf
mov
adc
push
pop
add
adc
push
sbb
adc
sbb
push
pop
adc
sbb
sbb
push
push
sbb
sbb
adc
sbb
sbb
adc
sbb
pop
adc
adc
push
pop
or
or
sbb
ds
ja
sbb
ds
add
sbb
sbb
adc
sbb
sbb
adc
sahf
stos
sbb
pop
pop
or
sbb
pop
sbb
sbb
sbb
push
pop
or
adc
sbb
setle
add
ds
add
sbb
pop
pop
or
xlat
sbb
pop
pop
setle
sub
cmp
or
or
sbb
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
sbb
adc
sbb
adc
or
or
add
add
sbb
push
or
iret
sbb
pop
add
adc
push
pop
sbb
push
add
push
push
sbb
sbb
add
add
push
push
sbb
sbb
sbb
sbb
or
sbb
pop
or
push
push
sbb
or
push
sbb
jae
push
push
or
sbb
push
or
neg
ds
or
sti
sbb
sbb
sbb
sahf
call
or
sti
sbb
pop
add
adc
push
pop
adc
sbb
sbb
add
push
sbb
adc
sbb
pop
push
or
sbb
sbb
add
push
sbb
sbb
add
push
adc
sbb
or
retf
push
or
retf
push
push
sbb
pop
push
push
sbb
pop
add
push
sbb
pop
setg
adc
sbb
sbb
xor
sbb
add
push
push
push
push
sbb
add
push
push
push
push
push
push
push
add
or
or
push
sbb
pop
pop
setg
sbb
pop
pop
setg
sbb
cmp
ds
pop
push
push
pop
push
push
push
push
push
push
push
add
push
pop
push
dec
sbb
dec
ins
jg
push
jno
pop
data16
outs
push
jno
dec
jbe
jno
ins
pop
push
push
cli
mov
push
push
push
push
push
push
push
push
push
loopne
adc
push
ds
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
out
mov
push
push
push
push
push
push
push
push
push
push
push
inc
pop
jno
pop
data16
jg
jo
jae
jge
ins
jnp
xor
jb
push
push
push
push
loope
push
ds
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
xchg
push
add
mov
jno
sbb
and
sar
test
test
push
fcom
aas
mov
pushf
bound
ror
lock
jne
or
not
test
cmps
cmp
(bad)
fisub
not
cli
push
out
pop
dec
inc
loope
repz
pusha
nop
movmskps
or
jo
push
call
lods
int3
cld
sbb
and
xor
data16
sar
inc
or
xor
cld
jb
ret
jnp
jg
inc
push
add
jmp
je
push
aas
push
shr
xor
int3
and
mov
jne
fsubr
mov
push
out
xor
mov
inc
idiv
ficom
sub
out
leave
jns
cmp
push
sub
call
pop
add
or
lahf
lods
jmp
mov
mov
popf
data16
xchg
test
(bad)
loope
xchg
cwde
sbb
pop
mov
jb
sbb
shr
mov
call
mov
mov
sub
adc
jl
jns
cmp
sti
outs
pop
xchg
push
lods
pushf
cmp
xchg
push
data16
mov
sbb
mov
inc
cmps
vsqrtsd
inc
mov
xchg
add
arpl
inc
push
adc
and
nop
pushf
movs
xor
sub
test
scas
add
mov
test
jb
pop
dec
pop
cmp
aam
ins
mov
ins
and
popf
call
fs
mov
inc
(bad)
(bad)
xor
dec
arpl
mov
inc
call
clc
sbb
sub
fld
and
add
xchg
pop
loop
ins
popf
(bad)
mov
call
aad
(bad)
push
(bad)
mov
lods
daa
xchg
push
fwait
cmps
popf
xor
jl
xchg
cs
wrmsr
int
cmp
lea
xchg
(bad)
adc
mov
pop
xchg
sti
and
dec
jmp
cmp
mov
pop
push
pop
bound
or
fist
repnz
mov
or
xchg
pop
jne
(bad)
mov
repz
inc
sub
fcmove
stos
cmps
or
inc
ficom
sar
pop
and
aaa
shr
retf
popa
arpl
jns
pop
push
push
pop
push
daa
adc
test
leave
inc
xlat
add
das
sbb
push
push
and
les
leave
ins
mov
push
enter
das
dec
ja
movs
pop
push
nop
repnz
pop
imul
ins
push
mov
cld
jge
in
and
aaa
mov
daa
sbb
xor
retf
loopne
not
xor
ins
pusha
cmp
jmp
xor
test
rcr
icebp
into
ins
mov
jne
out
cmp
pop
xchg
ror
ins
xor
out
mov
in
sbb
xchg
adc
rcl
mov
mov
sahf
push
cmp
scas
inc
hlt
test
outs
xlat
xlat
mov
adc
pop
in
fwait
mov
(bad)
push
push
xor
inc
les
sub
in
jp
(bad)
cmp
mov
sbb
xor
lods
inc
mov
mul
imul
or
xchg
or
mov
push
mov
xchg
add
and
xor
jl
in
daa
xor
xor
retf
popa
mov
mov
mov
test
jno
ds
ja
test
add
shr
pop
inc
sub
ja
push
es
rcl
inc
loop
mov
aad
iret
dec
xchg
dec
sub
and
pop
enter
add
cmp
cmp
(bad)
loopne
cmp
rcl
ins
adc
std
mov
cs
in
repz
cmps
adc
repz
or
lock
jp
scas
mov
cmps
sub
mov
inc
cld
inc
dec
icebp
inc
push
out
or
cmc
hlt
or
mov
cmp
jmp
xchg
xor
mov
fidiv
sub
or
test
sub
ficomp
ss
dec
jge
and
fs
outs
out
pop
xchg
lds
or
add
in
mov
movs
ret
adc
jecxz
dec
dec
inc
mov
adc
push
inc
cmp
lahf
pop
jne
mov
idiv
mov
lods
hlt
inc
cmps
mov
or
mov
out
jg
mov
add
push
add
scas
or
out
sub
daa
xchg
xor
cmp
call
jb
push
sub
loop
lock
cwde
icebp
sti
sub
dec
jmp
retf
sub
sub
test
fadd
jmp
xchg
mov
xchg
or
ins
sub
jle
jo
daa
sub
cmp
mov
neg
inc
add
mov
sbb
or
mov
aad
jb
sub
jle
repz
enter
cli
cmps
push
xor
popa
bts
cmc
jecxz
push
add
aad
adc
dec
lahf
push
in
shl
dec
and
loop
test
mov
cdq
out
hlt
add
movs
fmul
mov
pop
xchg
push
cwde
cs
mov
aam
pop
mov
mov
jge
inc
cmp
sahf
nop
dec
popf
push
mov
push
mov
ror
test
pop
stos
mov
fs
lock
mov
loop
mov
mov
or
rol
xchg
push
cmp
pop
add
mov
dec
dec
mov
and
dec
(bad)
hlt
ins
inc
test
bound
ror
mov
sahf
cs
pop
in
pop
ss
scas
in
fsubr
push
stos
mov
sub
fst
cwde
pop
gs
pop
cmp
(bad)
out
pop
sbb
mov
dec
pop
loop
pop
repnz
ret
outs
mov
push
jmp
sbb
je
fild
fisttp
cdq
sbb
stc
inc
mov
lea
fiadd
add
or
cmp
cmp
shl
mov
and
rol
jmp
mov
jl
shr
xor
xor
lods
and
push
sar
mov
push
ror
cmps
or
mov
xchg
inc
out
mov
js
mov
mov
adc
mov
int
jo
in
pop
mov
cmp
pop
ror
cmp
(bad)
cmp
retf
mov
dec
push
push
xor
sahf
pop
loope
jo
jae
imul
jl
adc
call
ret
sbb
jg
inc
std
pusha
jg
jo
xor
add
push
adc
xor
not
mov
inc
addr16
cmp
fwait
out
mov
push
lock
xor
in
xchg
mov
mov
mov
popa
push
mov
out
push
lea
popf
push
and
push
std
adc
sub
dec
mov
fld
inc
popa
sub
pop
lea
add
push
push
jno
add
mov
add
es
and
fldenv
mov
gs
sar
loop
ret
cwde
test
push
ret
aam
inc
pop
les
ror
nop
rcl
or
push
scas
leave
sub
lods
ret
addr16
stos
loopne
mov
out
in
(bad)
xor
or
cli
adc
in
imul
dec
add
test
mov
dec
icebp
outs
aaa
and
aas
aaa
and
mov
jp
push
fisttp
push
mov
add
mov
js
pop
lock
xchg
(bad)
dec
ins
jl
cmp
cmps
jle
mov
sbb
xor
outs
jmp
inc
inc
out
dec
mov
mov
mul
shr
mov
add
xchg
cld
rcr
lods
xchg
pushf
sahf
inc
scas
sti
int
xchg
iret
ss
pop
in
cmp
ds
outs
call
sub
jb
(bad)
push
inc
mov
shr
push
mov
in
ins
dec
cmp
pushf
hlt
in
pusha
dec
cwde
mov
ret
sub
lea
mov
and
add
xor
shr
iret
jp
(bad)
call
movs
jecxz
ins
dec
nop
jb
xor
lock
out
mov
push
stos
dec
sar
popa
popa
mov
and
(bad)
jo
call
mov
hlt
add
mov
movs
adc
ds
dec
pop
push
sub
mov
push
cmp
rol
es
sbb
adc
mov
hlt
in
pop
jbe
xchg
iret
push
sbb
push
jnp
jg
cmp
xchg
jmp
out
arpl
push
jbe
xor
cmps
adc
cwde
fwait
push
pop
lods
mov
jo
fmul
rol
stc
push
iret
jge
cmp
and
mov
shl
loop
into
movs
sbb
xchg
cwde
rcr
pop
pop
(bad)
mov
addr16
sbb
mov
aam
mov
pop
adc
icebp
arpl
fld
or
inc
fldenv
rol
sub
mov
iret
pop
cmp
daa
icebp
add
(bad)
or
movs
cli
jno
daa
add
and
jmp
pop
call
and
pop
movs
test
pop
sbb
cmp
gs
pop
call
add
nop
mov
(bad)
and
data16
shl
add
jbe
cld
push
iret
clc
sub
test
in
daa
jecxz
sub
ret
popf
adc
ja
in
repnz
fisttp
fcomp
pop
or
rcl
daa
push
hlt
xchg
test
adc
std
movs
mov
sti
fcom
(bad)
jle
lods
das
adc
sub
cmp
fldcw
jmp
jmp
ins
into
push
int
add
jo
std
add
(bad)
sub
inc
mov
es
lahf
pop
cmp
(bad)
inc
xor
and
in
repnz
sbb
sub
sbb
jne
push
aaa
leave
outs
mov
int
adc
popa
push
xlat
adc
xor
mov
inc
mov
mov
jg
pop
push
mov
fisttp
xchg
sbb
push
jno
jmp
jecxz
outs
cwde
adc
pop
stc
cmp
sub
in
repnz
cmp
xchg
sub
popa
movq
loope
fs
fdivr
rol
je
pop
jno
xchg
push
push
add
ss
das
nop
or
or
daa
sbb
mov
adc
cmp
mov
xchg
int
ins
xor
mov
retf
mov
dec
cdq
sbb
test
in
sbb
lds
inc
xchg
inc
push
je
jg
adc
or
test
or
cs
pop
jge
inc
icebp
mov
pop
shl
cmps
inc
and
data16
add
retf
int
ja
(bad)
cld
add
xor
dec
int
and
push
fisttp
pop
out
xor
jb
movs
push
stos
maskmovq
test
pop
mov
add
pop
cld
nop
repnz
xor
and
fst
jbe
push
cmc
rol
(bad)
and
shl
test
jp
or
or
mov
add
sub
mov
ror
outs
and
lods
xchg
cmp
ds
sbb
or
push
inc
pusha
jl
and
jno
jmp
jbe
sbb
arpl
mov
sub
cmp
fcmovne
repnz
daa
not
addr16
movs
add
mov
inc
leave
sbb
push
xchg
mov
dec
sbb
xor
jle
nop
mov
out
xchg
mov
inc
std
sti
mov
jmp
adc
loopne
sub
jge
sahf
int
cld
fistp
push
popa
scas
test
adc
stc
(bad)
xor
adc
inc
cmps
les
cmp
mov
fcomp
mov
imul
or
jo
inc
add
xchg
push
add
retf
mov
fcom
xchg
dec
out
or
icebp
sbb
jle
icebp
dec
and
das
scas
int
pop
xchg
(bad)
pusha
push
ins
fisttp
clc
cmp
cmp
xor
cmps
mov
imul
xor
fidiv
pop
rcr
cmp
xchg
mov
enter
jo
mov
fistp
inc
fisub
cdq
sbb
fbld
dec
xor
add
sti
jle
ins
jecxz
into
jmp
mov
cli
cmp
stos
mov
imul
xor
fwait
es
outs
stos
ja
push
mov
or
imul
and
pop
repz
pop
scas
leave
mov
fwait
xchg
dec
je
or
inc
dec
je
rcr
mov
es
adc
in
fidiv
sbb
ins
pop
jle
or
inc
loopne
pop
jmp
ffreep
out
pop
in
das
jne
sub
or
lahf
or
sub
adc
jnp
sub
add
sbb
sub
or
or
into
sub
ffreep
mov
mov
into
push
dec
(bad)
imul
pop
dec
mov
sbb
xchg
mov
add
test
push
int3
ja
hlt
jbe
jmp
bound
or
jnp
imul
and
xor
cld
imul
pop
cmc
repz
out
mov
jle
xor
add
cs
jmp
inc
or
mov
push
fcmovu
sub
in
jmp
shl
js
and
dec
in
out
lds
sub
cwde
dec
pop
imul
(bad)
data16
jae
int
sub
inc
stos
xor
pop
jne
jns
or
movs
cmp
mov
in
or
jno
clc
xchg
xor
inc
test
jb
out
das
call
ja
fcom
mov
pop
xchg
movs
add
xor
test
shl
jbe
sbb
or
pop
neg
sub
ret
scas
push
cdq
dec
jp
mov
stc
ret
inc
inc
sub
cli
mov
add
and
xor
push
push
mov
sbb
pop
std
jns
jo
es
inc
loope
test
xchg
loopne
xor
sbb
push
pop
fs
aam
inc
mov
push
popf
mov
aaa
or
cli
sbb
pop
push
sub
mov
xor
movs
mov
int
mov
lea
lock
mov
mov
mov
pop
dec
push
cmps
mov
dec
or
mov
mov
and
cmp
sbb
xchg
mov
test
push
arpl
push
test
push
fwait
pop
mov
push
and
xsaves
lahf
repnz
pop
xor
outs
retf
out
push
jns
scas
pushf
push
(bad)
(bad)
mov
xor
repz
push
push
jmp
pop
jge
rcr
sbb
pop
in
mov
movs
add
sar
pop
pushf
jno
pushf
add
xor
or
fwait
sub
adc
pop
dec
ins
into
xchg
xlat
xchg
adc
and
mov
mov
aaa
and
test
scas
inc
pop
movs
mov
movs
xor
cmps
scas
(bad)
retf
das
sub
pop
push
mov
push
xor
and
push
jmp
(bad)
adc
sub
or
mov
mov
mov
jl
mov
sti
cmp
inc
out
xchg
std
mov
add
lahf
pusha
sub
mov
and
jg
aad
into
pop
retf
xchg
xchg
stc
lahf
and
adc
pop
inc
jmp
je
mov
xor
sbb
and
jne
and
push
ret
sti
rol
in
ror
dec
outs
es
jge
mov
push
pop
das
push
out
xor
ins
cdq
add
mov
add
push
xchg
and
(bad)
in
rol
pop
call
outs
cmp
and
pushf
add
inc
pop
ja
(bad)
push
push
mov
xchg
pop
push
fs
adc
rol
popf
enter
sbb
aaa
inc
or
test
xor
ins
nop
inc
(bad)
adc
out
inc
push
mov
(bad)
frstor
mov
loope
cmp
sbb
xor
mov
leave
mov
mul
inc
mov
xor
das
adc
jo
sbb
cli
clc
in
outs
dec
leave
pop
(bad)
popf
rcr
cmps
into
repz
xchg
dec
dec
xor
test
dec
ret
and
pusha
addr16
cmp
movs
leave
movs
in
(bad)
or
(bad)
sbb
(bad)
sar
xchg
and
jbe
imul
mov
mov
fadd
pusha
cmp
cmc
stos
into
out
push
imul
push
mov
mov
fdivr
push
sbb
add
fcomp
cmps
in
fdivr
pop
mov
jo
mov
dec
sbb
add
cmc
into
imul
jmp
dec
(bad)
sbb
jge
dec
xchg
in
mov
(bad)
jnp
jmp
call
out
lods
add
jmp
add
std
icebp
and
hlt
push
call
loop
sahf
stos
sahf
add
mov
jno
mov
ror
xchg
loop
push
push
imul
cwde
retf
jnp
je
icebp
mov
mov
pop
fcomi
xchg
or
(bad)
outs
std
adc
retf
push
in
cmps
inc
cmc
pop
mov
or
ja
xor
loope
jg
ror
das
jecxz
out
pop
nop
repnz
xchg
pop
int
jecxz
cmp
ret
pop
in
pop
push
popf
call
xlat
mov
call
repz
jp
adc
xlat
rol
or
add
jo
push
sub
std
call
cmc
or
stos
scas
popa
jno
aas
mov
xchg
jns
adc
mov
rol
inc
into
jns
adc
call
adc
jnp
mov
arpl
iret
shl
mov
iret
in
ficomp
fldcw
sbb
pop
sbb
xor
cmp
jae
imul
cli
cs
fist
xor
mov
mov
inc
and
xor
sub
repnz
or
push
sub
and
xor
push
loope
int
xor
mov
cmp
test
fdivr
outs
push
int
test
ss
sti
inc
ret
cmp
mov
stc
call
and
push
mov
xchg
inc
test
adc
or
and
int3
lods
add
xor
pop
mov
add
push
and
cwde
jb
rcl
cmp
cld
test
ret
fisub
repnz
mov
pop
je
lea
push
idiv
int
pushf
mov
out
cld
xlat
mov
pop
dec
push
push
ds
fnsave
int
jmp
mov
adc
dec
shl
inc
jbe
adc
and
inc
retf
dec
add
mov
mov
(bad)
fistp
jmp
daa
push
imul
stos
xor
(bad)
sbb
mov
push
jne
seto
ret
sti
inc
dec
jns
scas
sub
popf
or
test
(bad)
je
(bad)
sbb
and
aam
fcmovnu
addr16
popf
sub
mov
inc
in
js
retf
mov
mov
jge
add
pop
xchg
adc
xchg
jg
outs
mov
fidivr
xchg
outs
in
dec
cli
cmp
(bad)
inc
add
push
xor
mov
scas
movs
adc
pushf
xchg
gs
push
lea
stos
fnstcw
pop
pusha
sub
jb
mov
cmps
dec
mov
pop
fxch
jns
loop
js
or
sbb
jnp
mov
(bad)
cmp
fld
sahf
push
inc
dec
and
into
cmps
je
jns
retf
inc
shl
call
sar
(bad)
pusha
pop
clc
add
add
dec
mov
cld
push
xchg
rcr
add
xchg
push
add
sbb
xor
aam
add
int3
fwait
(bad)
enter
adc
and
ins
jle
pop
xor
pop
js
mov
iret
xchg
loop
inc
dec
sub
pop
ds
push
retf
mov
idiv
sahf
stc
call
sub
imul
pop
xor
dec
sub
nop
loop
in
hlt
mov
test
fwait
loopne
rcl
pusha
adc
mov
xchg
shl
in
sbb
lds
adc
movs
int3
test
popw
push
cmp
rol
pop
xchg
ss
fimul
ins
inc
cmp
jo
mov
outs
adc
pop
pop
xor
xchg
loope
aas
push
push
add
xor
inc
sbb
xchg
mov
(bad)
xchg
das
adc
rol
jecxz
inc
sub
test
shl
ins
adc
or
sub
dec
cmp
enter
mov
inc
xlat
xchg
loopne
pop
add
push
and
arpl
push
call
jmp
std
mov
loop
fwait
cmp
mov
mov
pop
push
ja
cmps
fistp
xchg
test
cmp
cmp
cdq
retf
sbb
into
cmps
jmp
adc
addr16
and
inc
sbb
cli
scas
jmp
dec
cmp
mov
test
mov
scas
(bad)
jecxz
sbb
cs
push
jnp
cmps
test
cld
mov
mov
movs
(bad)
fistp
jno
je
jl
retf
mov
jns
pop
jb
int
inc
push
adc
scas
les
fisttp
mov
outs
sub
fisttp
sub
inc
or
aas
inc
push
dec
and
xchg
xlat
daa
outs
sbb
mov
cwde
std
lods
pop
loopne
jecxz
shl
aaa
inc
sub
push
int3
xchg
out
sti
mov
ret
mov
das
cwde
fwait
in
lods
xor
push
imul
pusha
and
in
cdq
rcr
jne
sbb
inc
add
jne
rcl
dec
jg
pop
sbb
xchg
xchg
push
aas
and
mov
fwait
out
mov
mov
pop
lods
adc
ror
in
pop
xor
inc
xor
lahf
iret
movs
push
inc
ds
xchg
out
aam
and
mov
jns
aas
jle
jbe
mov
adc
cmp
outs
sub
jne
push
mov
sbb
es
dec
lahf
hlt
sbb
mov
hlt
sub
repnz
xchg
pop
test
js
jb
repnz
out
mov
bound
xlat
scas
sti
mov
or
dec
xchg
mov
sub
dec
sub
adc
jne
inc
aaa
pusha
inc
xor
popa
adc
xlat
mov
bound
inc
mov
sbb
std
mov
test
sbb
inc
rcl
pop
push
mov
lods
jmp
mov
addr16
adc
pop
scas
not
sub
clc
popa
ret
mov
mov
dec
or
dec
or
sub
ins
rcl
movs
repnz
jecxz
cmp
dec
into
xchg
int
adc
push
or
add
push
pop
cmp
sub
xchg
retf
dec
in
out
push
movs
ror
movs
js
add
xlat
sbb
rcl
inc
test
imul
hlt
into
pushf
fmul
xchg
sar
pop
cmp
dec
and
scas
add
mov
sbb
nop
leave
(bad)
call
mov
stos
push
adc
inc
out
xchg
cli
xchg
icebp
or
dec
aas
jbe
retf
pop
add
jae
fdivrp
jp
dec
pop
retf
xchg
iret
and
addr16
mov
mov
(bad)
sbb
jns
stos
rcr
jno
mov
movs
aam
fild
mov
add
xchg
ret
sub
enter
sub
sbb
sub
imul
xor
cwde
fdiv
lahf
into
(bad)
out
lds
push
cmp
mov
push
sbb
out
sub
add
dec
clc
xchg
daa
xchg
out
loop
pop
or
pop
ss
(bad)
lahf
mov
out
enter
cli
xor
cmp
mov
repnz
mov
dec
sub
dec
cmp
cmp
sbb
mov
js
aaa
cmp
test
movs
hlt
lahf
jge
mov
movs
xchg
rcl
ja
add
pop
cmps
shl
mov
sahf
std
in
mov
stos
loop
cmp
imul
mov
xchg
nop
loopne
pop
mov
mov
adc
data16
pushf
jp
test
jae
pop
pop
jbe
cmps
or
pop
adc
call
mov
out
stos
fsub
cwde
or
dec
mov
add
dec
add
je
int
rcr
aad
mov
jne
push
adc
mov
stos
xchg
leave
pop
imul
or
js
dec
mov
pop
cmp
scas
ficomp
adc
movs
out
mov
xchg
lds
int
mov
inc
push
dec
xor
cmp
xor
and
call
xlat
mov
push
add
sbb
imul
push
adc
out
or
mov
lahf
cli
stos
rcr
ja
or
jmp
leave
mov
mov
or
movs
xlat
push
sub
aam
cmp
dec
sub
(bad)
leave
pusha
dec
xor
nop
ds
cmp
ja
leave
pop
cmp
sahf
in
mov
pop
or
iret
mov
jae
push
mov
stos
push
push
ss
les
js
dec
leave
sahf
fisubr
enter
lahf
enter
es
mov
cmp
ss
or
add
jmp
pop
sub
sub
aas
xchg
xchg
call
jb
push
add
in
cmp
lods
shl
sub
fidiv
mov
cmps
hlt
(bad)
xlat
xchg
xchg
sar
imul
mov
mov
mov
push
add
jmp
aad
xor
adc
jbe
pop
push
daa
jo
cli
inc
push
je
jo
jae
cmps
repz
hlt
or
scas
test
xchg
shl
add
sub
mov
jnp
imul
xchg
mov
dec
test
adc
into
cdq
lods
sbb
adc
ins
(bad)
mov
cmp
sbb
xchg
sbb
leave
and
aaa
ins
popa
sub
jbe
jbe
cli
mov
sbb
repz
fadd
inc
push
sub
inc
pop
sub
cs
pop
ss
add
pop
jb
ja
cdq
enter
(bad)
fistp
inc
idiv
jl
cmp
std
movs
div
test
sbb
mov
stos
out
mov
or
push
cmp
jg
imul
imul
fwait
leave
mov
mov
mov
push
dec
repz
loope
loopne
cmp
push
add
inc
adc
jb
stos
or
icebp
mov
push
push
ins
pop
sti
mov
or
push
stc
test
mov
stos
adc
and
jns
sahf
sahf
mov
push
cmp
dec
retf
stos
(bad)
jbe
pop
outs
sbb
push
dec
and
xor
rol
cmc
mov
jno
clc
ss
popa
push
cmp
jae
add
xor
leave
pop
adc
loopne
mov
fs
pop
test
bound
pop
and
push
sbb
mov
cmp
stos
mov
es
sbb
fnsave
cmp
adc
(bad)
push
stc
mov
loopne
pushf
rcr
push
sbb
jle
(bad)
xchg
daa
jne
icebp
out
test
mov
push
pop
inc
das
mov
iret
mov
mov
sahf
fistp
clc
mov
xor
in
pop
adc
mov
dec
cmp
shl
pop
push
sub
mov
xchg
loopne
loopne
xlat
mov
xchg
sbb
jbe
push
inc
dec
jns
sub
push
mov
retf
js
aas
pop
push
jae
push
adc
cmp
fmul
test
adc
cmp
loope
push
sbb
inc
ss
ret
(bad)
pop
adc
fisubr
test
mov
lea
dec
pop
jns
inc
or
int
sbb
cwde
les
dec
in
push
add
jmp
xchg
mov
hlt
mov
jecxz
into
xchg
cld
xor
fisub
stos
(bad)
neg
mov
mov
std
mov
ret
dec
push
inc
sub
nop
aam
popa
xchg
lds
push
and
xchg
lds
adc
mov
pop
cmp
ins
sub
or
jl
dec
cmp
mov
call
(bad)
out
popf
leave
in
sub
add
mov
dec
sbb
fmul
cmp
pop
cs
js
sub
xchg
jbe
fisubr
icebp
push
push
and
and
out
stos
out
cdq
shl
inc
cmps
out
hlt
pop
inc
stos
ret
sahf
hlt
adc
in
imul
mov
movs
in
xchg
into
in
and
iret
sahf
popa
ss
sahf
cmps
out
sahf
fistp
aad
fidiv
(bad)
lahf
in
out
stos
jle
cs
aas
dec
cs
mov
test
mov
aas
sub
jle
pop
daa
arpl
push
js
ins
inc
cmp
adc
mov
add
cld
mov
mov
push
test
sti
sahf
iret
cmp
ja
int
dec
sbb
jg
je
jge
xor
scas
jns
add
pop
push
xor
scas
fistp
push
cmp
inc
push
jae
aam
rep
dec
adc
mov
sti
scas
clc
out
add
or
inc
adc
xchg
cdq
in
mov
test
outs
pop
jae
stos
jmp
outs
adc
imul
adc
cwde
call
out
jp
arpl
jle
pop
in
ficom
aas
addr16
and
push
jno
je
lds
(bad)
idiv
out
je
pop
mov
nop
dec
int3
add
jno
jnp
pop
xchg
cli
imul
gs
out
cmc
mov
or
pop
pop
xor
pop
es
inc
mov
mov
ret
lods
out
mov
push
jmp
fnstenv
loope
inc
lds
pop
adc
ins
cs
cmp
out
movs
xlat
xchg
and
std
lods
ins
or
add
pop
mov
xchg
sub
leave
xchg
dec
jmp
sbb
add
add
ret
scas
out
jecxz
icebp
mov
or
(bad)
jg
frstor
dec
imul
out
das
fstp
push
sbb
mov
cwde
jo
sar
mov
imul
add
addr16
cmps
lds
pop
outs
sub
pop
adc
into
nop
dec
sbb
sub
lahf
mov
mov
(bad)
pushf
ficom
sbb
addr16
add
mov
dec
push
pop
or
mov
out
or
xchg
retf
mov
or
mov
adc
out
daa
cmp
jne
retf
jmp
or
jge
jle
hlt
mov
mov
push
adc
push
nop
lock
inc
add
mov
mov
scas
div
cmps
aam
ret
or
dec
je
pop
sbb
cmp
xchg
mov
add
je
imul
push
or
ss
dec
push
adc
fisttp
sub
imul
mov
inc
push
aam
sbb
jo
or
out
adc
or
(bad)
xchg
faddp
pushf
mov
mov
dec
inc
jmp
pop
xor
inc
adc
cs
adc
mov
ins
adc
daa
je
push
add
push
push
mov
mov
dec
xchg
fld
mov
mov
lods
mov
push
lock
mov
xor
retf
pushf
jae
aam
loopne
retf
mov
js
jne
mov
jecxz
xlat
jno
inc
xor
xor
cmps
cmp
pop
cs
sbb
arpl
clc
mov
hlt
mov
mov
ficom
xchg
into
mov
div
sbb
xchg
jle
dec
and
xchg
(bad)
shr
rol
xor
xor
xchg
iret
cdq
jle
outs
pop
mov
jns
sbb
push
push
jne
daa
push
sub
retf
mov
cmps
aas
imul
test
scas
out
stos
out
xchg
xchg
lds
xor
jno
jp
out
cmp
and
loopne
cld
mov
nop
jecxz
dec
push
and
lods
popw
dec
or
int3
mov
rol
mov
nop
icebp
mov
or
(bad)
jns
dec
or
push
jnp
mov
in
rep
into
cmps
(bad)
jae
push
sbb
mov
or
ss
add
es
push
inc
xor
adc
push
ret
mov
xchg
mov
jg
test
fbstp
inc
cmp
inc
push
add
adc
std
inc
xor
bound
jb
push
inc
add
fcomp
xchg
pop
and
pushf
push
cmp
sahf
xlat
xor
out
cmc
push
inc
xchg
retf
(bad)
in
fwait
int3
mov
dec
sbb
retf
shl
and
stc
jmp
adc
sub
push
adc
out
cdq
stc
xchg
repnz
push
je
cmp
imul
mov
xchg
inc
das
mov
std
xchg
adc
mov
xchg
pop
sbb
call
in
lods
lds
mul
lods
mov
les
popa
lahf
jo
jge
mov
or
rep
aas
dec
shl
pop
mul
xchg
into
ror
shl
mov
xor
dec
add
(bad)
fcomp
push
xor
cmp
repz
pop
or
and
mov
sahf
ficom
fsub
inc
add
mov
mov
jne
dec
and
pop
cld
test
cmp
pushf
pusha
jo
out
bound
bound
fcomp
inc
xor
push
xchg
fstp
or
je
pop
(bad)
fnstenv
dec
pop
test
mov
sub
test
das
and
imul
int
mov
push
adc
shl
mov
out
ror
outs
cmp
or
stc
mov
cdq
iret
mov
dec
pcmpgtd
push
nop
xlat
sub
ins
cmp
test
mov
test
pop
lods
ror
inc
push
dec
cmp
das
fst
xchg
hlt
or
jecxz
stc
sbb
ins
adc
pop
or
mov
jo
mov
adc
leave
repz
lods
cmc
movs
lea
jg
outs
cmp
jmp
lea
jle
pop
jge
cwde
mov
jns
out
je
and
test
inc
sti
mov
out
mov
loopne
push
mov
jmp
push
icebp
mov
cmps
test
cmp
shl
(bad)
scas
(bad)
pop
adc
cmp
pop
lods
adc
add
inc
add
push
cmp
mov
ret
mov
and
xor
push
fnsave
push
jl
stc
xchg
add
push
push
add
inc
add
jge
out
cmp
inc
aam
or
xor
or
ins
cmp
jo
stos
in
mov
push
popa
push
daa
outs
add
mov
xchg
movs
add
adc
mov
inc
retf
test
mov
add
and
adc
jae
mov
mov
jl
adc
pop
ins
cmp
xchg
ficomp
inc
push
cwde
fdiv
test
mov
mov
push
sar
pusha
xor
ss
or
(bad)
and
cld
stos
ficomp
es
pop
loopne
popa
daa
arpl
cmp
mov
sbb
xor
push
mov
test
and
imul
sub
jae
jnp
pop
push
add
xor
jge
sbb
je
arpl
pop
sbb
(bad)
cld
add
icebp
stos
sti
nop
ds
push
adc
mov
ret
mov
and
adc
rcl
sbb
jns
jb
push
pusha
int3
mov
or
pop
or
adc
adc
gs
inc
dec
sbb
rcr
out
lock
xor
add
fidiv
hlt
enter
mov
shl
pop
cs
ins
add
(bad)
aad
stos
pop
inc
xor
addr16
fdiv
lahf
xchg
outs
cmp
rol
fsubr
jle
loope
bound
gs
iret
sub
in
mov
cld
(bad)
into
mov
add
pusha
mov
mov
rol
or
mov
mov
dec
or
cmp
movs
das
cdq
jmp
sti
stos
out
mov
jmp
dec
cmc
xchg
retf
fwait
lock
inc
or
test
add
pop
cmp
jb
push
add
mov
pop
sub
add
xchg
cld
lahf
xor
mov
mov
adc
jnp
pop
or
sub
cwde
jmp
add
aas
push
xor
xchg
sub
ds
pop
mov
push
and
xor
ror
div
sbb
bound
lock
cld
call
dec
and
xor
outs
cmp
lahf
sti
and
or
push
cmps
out
out
enter
jbe
into
lahf
mov
mov
pop
sar
push
add
hlt
mov
push
and
cwde
jp
push
and
inc
or
xor
and
mov
cmps
ja
add
je
rcr
xchg
daa
push
adc
daa
push
into
mov
out
movs
clc
mov
add
jne
rcl
cdq
cmc
pushw
inc
adc
sbb
mov
cmp
add
and
push
push
stc
xchg
jo
imul
xchg
ret
mov
cmps
ret
bound
jne
push
push
int
pushf
into
mov
mov
adc
and
xlat
xchg
clc
or
in
mov
adc
ins
cmp
xor
lea
inc
adc
fcom
mov
test
dec
iret
mov
mov
xor
es
cwde
loopne
mov
mov
sub
mov
mov
lahf
rol
nop
fldenv
xor
cmp
jns
dec
cmovae
ss
and
gs
sbb
or
cmp
cmps
push
mov
enter
inc
sub
sbb
std
mov
movs
loopne
repnz
xchg
imul
les
add
cld
and
js
pop
fwait
leave
repnz
jp
dec
pop
or
cli
mov
outs
and
repnz
iret
cmps
(bad)
(bad)
test
popa
pop
pop
mov
mov
in
cmc
movs
rol
mov
jnp
sar
cmp
pushf
fmulp
push
and
dec
out
iret
mov
or
add
or
adc
scas
cwde
retf
push
sub
adc
push
mov
outs
dec
xor
fld
add
ss
jb
rol
aas
(bad)
sub
inc
or
scas
lds
sbb
lods
mov
cmp
dec
sub
in
sar
push
adc
dec
and
in
mov
push
jge
int
xor
scas
(bad)
out
mov
fs
addr16
inc
sub
sub
outs
sub
lea
in
mov
emms
sub
xchg
aam
(bad)
mov
mov
mov
std
mov
xor
mov
div
mov
mov
sub
or
xor
mov
xchg
pop
(bad)
mov
xchg
(bad)
sbb
xchg
in
movs
xchg
call
cmp
stos
(bad)
std
mov
push
out
scas
(bad)
cmp
mov
xchg
inc
xor
cmp
cmc
mov
lds
inc
sbb
(bad)
fisubr
sbb
div
outs
in
pop
inc
test
pusha
push
inc
xor
cli
jp
test
adc
xchg
iret
push
shr
push
iret
cmp
or
pop
sbb
mov
inc
sbb
xor
jge
fcom
jne
bound
mov
lds
fisub
out
mov
ror
pop
cmovnp
fmul
inc
sbb
nop
retf
(bad)
leave
add
add
xchg
push
add
leave
mov
pop
(bad)
imul
sbb
loope
xor
movs
scas
ficomp
fs
daa
push
inc
add
cli
addr16
(bad)
pop
fist
jnp
mov
cli
xor
sub
jbe
or
cmp
or
shl
jecxz
sbb
or
div
cdq
icebp
pushf
pushf
pop
push
pop
ss
cmc
xchg
(bad)
xor
movs
rol
or
pop
sub
enter
jno
mov
sub
ja
push
loop
ins
stos
dec
cli
mov
popf
jle
adc
add
and
pop
and
cmps
ror
jns
clc
dec
std
mov
and
loop
xchg
arpl
inc
or
sbb
sub
ror
(bad)
(bad)
lods
out
push
adc
(bad)
fld
pop
and
ds
sti
mov
call
sub
scas
fild
pop
sti
sub
pop
adc
pop
in
xlat
jmp
mov
sub
adc
pop
or
cmc
sub
pop
push
dec
out
jg
pop
or
lods
jmp
test
add
fbstp
(bad)
sub
and
and
stc
mov
cmp
(bad)
ja
rcl
das
mov
push
sbb
mov
inc
sbb
mov
out
mov
adc
pop
leave
inc
pop
push
adc
movs
int3
jns
cmp
pop
in
popf
fcomp
mov
das
jno
pop
aam
dec
or
aas
sub
sub
mov
dec
push
xchg
xchg
(bad)
shl
and
daa
fistp
sub
jmp
call
add
adc
xchg
shl
push
es
or
clc
nop
std
arpl
mov
add
push
push
or
(bad)
imul
loopne
std
mov
jb
xor
cmp
ss
mov
xchg
rcr
ret
xchg
fistp
scas
jl
push
adc
and
mov
adc
cdq
rcl
jle
pop
xor
cmps
repnz
cmps
les
bound
aas
ja
pusha
sub
add
mov
aam
leave
(bad)
retf
lea
fnsave
in
scas
dec
lahf
jmp
jmp
cmps
out
xchg
push
sub
xor
dec
sbb
icebp
lock
gs
and
push
pop
push
add
inc
cmp
cmp
clc
adc
push
cmp
mov
or
ficom
jecxz
mov
add
or
push
loop
imul
mov
mov
dec
cmp
or
xchg
mov
and
dec
xor
or
ret
sti
lods
repz
pop
andps
cmp
jg
sub
push
add
lods
cmc
bound
jg
or
or
mov
sar
pop
loope
fisubr
dec
sub
pop
sbb
push
and
ds
push
mov
push
dec
or
sbb
push
or
(bad)
add
fmul
cdq
(bad)
pop
jnp
pop
or
outs
sbb
stos
mov
pop
push
jge
cwde
jbe
fisttp
jmp
sbb
ins
pop
dec
sub
jle
push
push
cmp
dec
sbb
arpl
pop
popf
pusha
das
push
adc
inc
or
ins
add
icebp
mov
mov
mov
mov
mov
sahf
mov
sti
scas
lahf
pop
in
ficom
xchg
dec
cmovnp
jno
popa
adc
inc
sbb
dec
cld
mov
push
mov
call
test
in
inc
add
add
add
jb
pop
loopne
fadd
retf
add
inc
into
fwait
retf
stos
stos
pop
das
jnp
push
mov
mov
cmps
jmp
push
sar
dec
sbb
std
fwait
clc
xchg
(bad)
mov
and
mov
je
(bad)
clc
mov
jns
pushf
lds
lahf
call
push
jne
add
xor
rcl
gs
je
jp
dec
add
jae
out
enter
fisub
push
add
xchg
(bad)
out
clc
mov
cmp
jg
addr16
xchg
push
add
xor
push
call
xor
mov
test
pushf
dec
xchg
int3
mov
dec
test
ds
mov
adc
mov
loope
jg
es
hlt
mov
mov
shr
xor
sbb
outs
sbb
jle
inc
add
pop
sub
sub
jae
addr16
sbb
dec
mul
push
inc
add
inc
in
xchg
jns
hlt
test
mov
mov
movs
fisttp
sbb
cmp
dec
jecxz
test
mov
popa
xor
call
sahf
pop
jno
inc
cld
mov
lods
cmc
add
pop
xor
mov
hlt
lahf
test
test
addr16
js
push
or
daa
dec
cmp
push
fdivr
mov
sbb
jb
and
add
aas
pop
pop
push
es
(bad)
xchg
int
hlt
mov
sbb
test
mov
xchg
rcl
xor
xchg
shl
test
adc
push
and
cld
(bad)
aad
jge
(bad)
fwait
aam
rcl
xor
mov
test
mov
inc
add
inc
or
jmp
xchg
fwait
sti
xchg
call
mov
mov
xchg
repnz
daa
je
jne
pop
adc
push
add
inc
idiv
jns
inc
or
cs
rcl
xchg
mov
call
sub
mov
les
ja
and
jle
es
dec
cmp
ror
outs
sbb
cld
stos
mov
add
loopne
mov
mov
mov
cdq
mov
pop
ds
mov
fdivr
xchg
popf
shl
rcr
lods
lock
inc
cmp
xchg
loope
test
xchg
out
mov
mov
lods
test
fwait
scas
fadd
pop
add
xor
bound
xor
ret
inc
add
xchg
mov
in
mov
das
mov
add
xchg
ret
xor
xor
push
lds
inc
bound
push
ss
stos
fld
add
in
cdq
fadd
sub
inc
mov
jg
sub
mov
mov
pop
inc
push
retf
push
adc
cmc
jmp
mov
das
pop
pushf
mov
push
ss
sbb
dec
ds
aaa
mov
xchg
xchg
clc
xchg
(bad)
lea
sti
xchg
or
fnstenv
outs
jecxz
sbb
pop
lock
jne
pop
fisub
ret
mov
arpl
ds
mov
call
jb
dec
mov
sbb
bound
cld
je
inc
sbb
xchg
mov
xlat
mov
lods
(bad)
jp
push
pop
adc
jmp
stos
push
pop
es
push
pop
shl
enter
cmp
cmps
xchg
inc
push
das
jne
sub
es
test
cmp
call
sbb
sar
mov
leave
mov
jo
icebp
xchg
xor
or
retf
pushf
dec
aad
test
mov
sbb
mov
inc
xchg
movs
clc
mov
cmp
push
and
and
mov
mov
xor
in
(bad)
lahf
pop
add
add
jae
ins
sub
pop
sbb
jne
dec
es
pushf
enter
push
fs
sub
jnp
push
aas
dec
pop
jo
jne
push
push
pop
xor
je
inc
or
pop
push
jnp
pop
or
pop
adc
sub
pop
cmp
sbb
dec
loop
ror
test
mov
xchg
dec
fisub
imul
mov
int3
test
jmp
jns
popa
cmp
inc
daa
std
test
adc
pusha
xor
jo
push
bound
or
ret
pop
sbb
push
lds
ja
sbb
stc
mov
add
or
adc
ds
cld
stos
stc
cmp
in
bound
jo
dec
mov
xchg
xchg
retf
pop
retf
xchg
jecxz
mov
xchg
push
add
mov
jl
sub
(bad)
push
and
daa
je
rcl
fwait
dec
fcmovnu
mov
mov
inc
pop
xor
jmp
fs
imul
mov
xchg
(bad)
lods
ins
lods
pop
pop
ret
es
leave
mov
lahf
movs
fild
jge
outs
sub
aad
fiadd
cs
div
push
or
mov
lods
jmp
rol
gs
cmp
xchg
or
movs
clc
bound
sbb
jo
stc
mov
ja
pop
pop
ja
push
repnz
aam
sbb
sbb
adc
stc
xchg
mov
loopne
fistp
js
or
mov
sub
ret
popf
cld
xchg
shl
ja
dec
out
mov
mov
ins
push
xor
sbb
call
mov
pop
and
push
rcr
sahf
mov
pop
int
in
data16
push
jl
jne
xchg
(bad)
mov
cld
or
pop
pop
and
fsub
mov
mov
inc
and
jnp
or
gs
sbb
ins
sbb
popa
sbb
inc
fisttp
pop
sbb
pop
ss
es
add
dec
pop
adc
dec
xor
repz
outs
sbb
and
dec
xor
jne
sub
pop
adc
ret
xchg
shl
je
inc
xor
pop
fbld
ja
xor
push
jp
imul
add
call
into
(bad)
xchg
xchg
mov
mov
addr16
dec
or
xchg
mov
out
movs
jmp
and
enter
jbe
or
aaa
pop
add
pop
jmp
or
(bad)
lahf
adc
lods
fldenv
lahf
push
or
js
in
call
cli
mov
movs
jl
pop
sub
jbe
mov
arpl
int3
mov
inc
inc
or
sub
cmp
das
mov
mov
int
out
ins
aas
and
or
dec
clc
fwait
call
mov
cmps
pusha
mov
xchg
enter
mov
push
or
das
(bad)
pop
xor
dec
cwde
shr
es
pop
sbb
inc
sbb
in
lds
pushf
mov
mov
sahf
jp
mov
push
pop
rol
loopne
dec
sub
and
sbb
jne
rcl
pop
push
push
and
mov
sahf
shl
mov
and
adc
inc
cmp
push
es
in
cmps
jmp
lods
dec
mov
push
or
push
ud2
imul
call
cli
test
jp
xor
mov
mov
lock
cld
xchg
mov
movs
rcr
(bad)
mov
sar
and
retf
xchg
stc
call
in
mov
push
out
mov
adc
push
das
jne
dec
movq
pop
sbb
cmp
or
dec
cmp
inc
xor
sbb
fs
inc
push
jge
jbe
pop
pop
pop
cmp
push
pop
push
add
arpl
loop
sbb
loope
push
xor
outs
or
sbb
pop
pop
scas
test
fdiv
pushf
adc
shl
xor
inc
or
push
icebp
mov
sbb
retf
rcr
loop
out
mov
(bad)
cmps
cmc
mov
sbb
push
adc
scas
adc
stos
sub
test
mov
(bad)
pushf
mov
mov
mov
mov
fld
fldenv
out
shl
data16
arpl
xor
outs
(bad)
fcmovu
lahf
cdq
mov
enter
adc
in
xchg
inc
repz
mov
dec
inc
add
cdq
popa
push
add
or
ins
cmp
mov
hlt
mov
cmp
sub
or
sbb
push
push
push
aaa
out
mov
loopne
int
sti
mov
adc
(bad)
call
xor
inc
xor
in
mov
mov
or
mov
dec
pusha
xchg
shl
mov
push
add
inc
test
pushf
fisttp
das
(bad)
mul
mov
and
jns
pop
inc
add
push
pop
mov
push
call
aad
stos
movs
into
push
pop
push
lahf
adc
(bad)
dec
movs
push
add
xor
fwait
sub
stos
lods
stos
lods
ficomp
sbb
jnp
aaa
or
jo
inc
sbb
pop
sbb
adc
inc
sub
cmovnp
push
or
cs
cmps
rcr
mov
test
cmp
sub
mov
call
pop
shl
adc
movs
ficomp
cwde
icebp
xor
xchg
and
stc
push
adc
popf
fldcw
les
ds
xchg
cwde
dec
inc
or
cmps
sub
sbb
xchg
add
xchg
or
push
adc
(bad)
ret
xchg
(bad)
fwait
test
push
dec
xchg
rcr
mov
jns
out
sti
mov
pusha
dec
jecxz
sti
xchg
mov
sbb
jecxz
cmc
mov
push
add
add
jmp
iret
data16
xor
(bad)
xchg
mov
push
test
mov
pop
icebp
xor
leave
imul
jge
push
inc
and
sbb
mov
(bad)
or
int
es
ja
xor
xor
lahf
cdq
cdq
push
sbb
sbb
lds
mov
mov
xchg
push
and
adc
inc
sub
cmp
jnp
inc
push
xor
mov
dec
or
arpl
push
push
push
test
pop
add
into
mov
aas
jge
inc
sbb
pop
fst
push
in
mov
xchg
in
in
fs
pop
pop
push
in
inc
push
arpl
push
(bad)
mov
mov
inc
sub
adc
mov
je
pusha
cs
mov
mov
and
xor
jmp
or
cmp
add
dec
sbb
es
inc
mov
iret
xchg
iret
push
and
jns
mov
sub
cli
xchg
test
cmp
xchg
stos
fwait
leave
mov
mov
movs
jge
jle
jbe
ror
pop
add
out
xor
test
dec
or
arpl
je
hlt
mov
push
addps
pop
stc
mov
push
ja
and
jge
adc
push
sbb
rcl
dec
jmp
daa
push
inc
movs
int3
mov
out
addr16
rcl
jl
ins
xor
inc
ss
adc
sub
int3
push
ds
aas
std
fsub
dec
cmp
jne
popa
das
sti
fbstp
or
push
call
jmp
stos
ror
movs
(bad)
mov
lods
ja
mov
xor
call
cmp
and
jbe
dec
sub
pop
repz
dec
pop
jb
ja
mov
pusha
pop
pop
pop
sub
fidiv
add
mov
rcl
test
aaa
xor
leave
out
jl
jl
mov
stc
cmp
je
jmp
cmp
ret
and
dec
sub
sub
outs
or
cmp
cmp
inc
add
cmp
cmp
sbb
inc
adc
adc
(bad)
shl
push
xor
hlt
push
inc
sub
add
and
mov
xchg
shl
sbb
repz
ins
out
mov
int3
scas
scas
sti
mov
jmp
xchg
jns
clc
mov
rcl
mov
jnp
jbe
dec
icebp
movs
inc
call
int3
mov
movs
into
mov
into
call
sub
xor
dec
test
arpl
push
cmc
mov
xor
mov
xchg
inc
jo
and
jecxz
or
in
pop
or
and
stos
mov
push
lods
jmp
aad
in
cmp
add
les
mov
out
add
push
es
out
cmps
das
push
mov
xlat
aaa
cmp
sub
fsubr
mov
mov
pop
pop
loop
and
sbb
inc
daa
out
cmp
jo
xchg
rcl
xor
sub
xchg
sbb
popw
push
pop
jl
mov
aaa
loopne
pusha
mov
cs
(bad)
pop
lea
pop
sbb
adc
adc
sbb
retf
test
mov
adc
jnp
inc
out
xchg
xadd
loopne
jae
xlat
xchg
fldcw
mov
(bad)
xchg
aam
inc
ds
and
or
push
jmp
jmp
or
pop
or
jo
jmp
retf
sahf
ficom
cdq
dec
add
mov
add
addr16
jp
inc
xor
sbb
xlat
add
imul
ds
or
out
lds
cdq
fisttp
jmp
jg
dec
jmp
xor
inc
mov
(bad)
jle
pop
out
or
gs
ds
push
out
xor
or
test
cmp
push
add
ret
ins
sub
dec
adc
push
add
jnp
pop
fwait
push
push
fs
enter
movs
les
ficomp
xchg
sbb
jno
pop
shl
lea
inc
daa
push
or
vmwrite
rcl
adc
addps
push
mov
movs
pop
mov
test
iret
repnz
ins
adc
or
jb
jnp
pop
sbb
jl
cmp
je
dec
sbb
adc
(bad)
xor
daa
pop
xor
(bad)
ins
cmp
cmp
jmp
sti
cdq
cli
lea
push
lds
or
call
mov
jecxz
fnstenv
lahf
lods
in
test
inc
xchg
jp
aad
inc
sub
jmp
addr16
push
cmp
xchg
ret
fs
sub
push
aaa
ja
dec
out
lock
fwait
into
cmp
mov
aad
dec
stos
mov
dec
push
add
mov
stos
les
dec
in
in
dec
xlat
cdq
in
mov
and
pusha
push
inc
add
ss
and
std
pushf
or
cmp
mov
test
xchg
iret
ss
adc
mov
ret
addr16
cmc
popf
enter
mov
clc
cs
push
aaa
push
adc
imul
test
dec
loopne
in
jbe
jb
jbe
mov
int
push
push
mov
sbb
inc
call
xchg
inc
aam
(bad)
int3
mov
imul
cmps
imul
mov
mov
nop
les
or
inc
sub
sub
cld
mov
ja
push
and
adc
or
mov
add
gs
sub
(bad)
retf
xchg
hlt
and
push
cmp
cmp
or
sub
push
pop
out
cli
cmp
inc
or
(bad)
fisttp
in
fsubr
adc
ins
lods
fst
mov
mov
cmp
push
adc
shl
inc
xchg
jns
dec
loopne
or
pop
mov
hlt
dec
sbb
jmp
aas
dec
or
and
repnz
inc
xor
xchg
in
lods
repz
(bad)
mov
mov
fdivrp
stos
dec
xchg
js
cs
rcl
xacquire
call
sbb
bound
dec
in
cmc
xchg
stos
movs
push
sbb
pop
mov
xchg
xchg
scas
cwde
add
dec
in
mov
cli
cmp
cmovne
call
scas
les
js
inc
adc
cmp
sub
dec
stos
std
test
bound
jmp
in
sbb
pop
sub
mov
ss
outs
or
test
sub
cmp
xor
dec
or
xchg
je
jns
and
jle
fnsave
cdq
out
scas
out
mov
pop
sbb
das
inc
adc
ficom
stos
repz
rcl
sbb
dec
shl
dec
in
xchg
pushw
jp
jb
call
mov
lods
ficomp
pop
pop
sub
or
jg
out
shl
mov
jmp
adc
push
out
jle
jbe
ja
fmul
add
push
dec
out
rcl
jne
pop
ret
mov
es
sbb
xchg
clc
pop
fld
nop
shl
add
inc
sub
ds
sbb
dec
(bad)
xchg
jmp
ror
stos
mov
stos
add
xchg
push
add
push
and
jae
pop
xor
sub
pop
sbb
or
pusha
sbb
dec
lods
rol
adc
dec
cmp
ds
xor
or
push
ficom
mov
push
pop
inc
ins
cli
push
add
scas
out
xchg
jl
mov
stc
es
ins
loope
loop
ret
outs
pop
inc
add
call
hlt
dec
adc
mov
mov
push
daa
jae
inc
xor
or
add
xchg
cmc
movs
push
add
mov
shl
jns
jae
dec
lds
push
loope
leave
call
loope
mov
call
push
and
ins
jb
dec
or
(bad)
xchg
(bad)
scas
(bad)
aam
and
dec
adc
mov
and
sub
xor
retf
add
ins
pop
inc
test
movs
retf
jge
dec
sbb
movs
int
sti
(bad)
int3
ficomp
add
es
jp
mov
mov
in
xor
push
mov
xchg
in
(bad)
push
push
add
lahf
mov
dec
cs
or
loopne
and
xor
jnp
jbe
cmp
cld
mov
add
idiv
sbb
out
cmps
retf
(bad)
push
and
xchg
(bad)
push
mov
xchg
test
jmp
lods
cmc
jecxz
xor
das
js
adc
xor
data16
mov
sbb
jae
stc
stos
out
dec
mov
mov
xchg
fwait
int
pop
leave
mov
out
jmp
jmp
cmp
mov
(bad)
mov
xchg
xchg
imul
pop
adc
lods
shl
jle
das
jg
dec
ret
test
dec
mov
arpl
mov
aad
mov
ds
adc
cmovp
push
mov
add
ins
sub
cmp
push
jb
inc
int
out
push
and
add
cmp
out
cmp
lock
lock
and
fldcw
fs
(bad)
mov
clc
pushf
out
mov
mov
jl
dec
xchg
(bad)
imul
adc
push
mov
mov
push
push
pop
jg
les
aas
aas
outs
add
outs
lds
adc
xlat
xchg
mov
int3
mov
out
mul
imul
in
sbb
sbb
add
shl
push
xor
pmullw
bound
enter
jne
mov
add
add
inc
add
bound
pcmpgtd
xchg
retf
out
stos
(bad)
dec
xor
cmps
rol
add
xchg
mov
(bad)
(bad)
jecxz
sub
push
jb
mov
mov
aad
hlt
fisttp
inc
sub
xchg
aad
out
les
call
mov
xchg
loopne
add
push
pop
ins
add
pop
push
mov
lds
pop
jbe
outs
das
jns
stos
lock
push
pushw
sbb
out
(bad)
imul
jmp
movs
out
add
push
xor
jnp
ins
mul
xchg
jns
push
inc
push
mov
xchg
ins
mov
bound
xor
jo
pop
nop
mov
popf
shl
add
loopne
adc
pop
or
icebp
xchg
mov
adc
cld
mov
add
jle
jp
retf
mov
cli
jne
push
cwde
fistp
add
movs
mov
xchg
xchg
aad
push
or
push
push
sub
inc
fisttp
sahf
les
ins
fst
jnp
xor
gs
js
pop
push
add
aam
add
jecxz
into
cwde
fmul
sub
inc
ss
sbb
pop
adc
sbb
cmp
mov
int
les
je
mov
sbb
(bad)
loope
or
cs
ins
nop
sub
je
aaa
dec
adc
pusha
cmp
pop
xor
loope
call
neg
jg
ret
mov
lods
mov
movs
dec
or
cmp
in
cdq
outs
loope
sbb
xor
or
mov
and
jg
xor
imul
push
dec
lods
(bad)
enter
mov
xlat
mov
leave
adc
push
rcr
push
lea
push
xabort
enter
or
pop
cmp
pop
and
add
sub
mov
sbb
outs
add
pop
or
pop
loop
ror
or
or
lods
(bad)
in
mov
daa
cs
mov
mov
pop
sbb
add
gs
jno
dec
in
mov
xlat
enter
cmp
inc
shl
jl
fstp
ins
int
das
jne
sar
sbb
out
fild
adc
sti
dec
adc
inc
lock
xchg
pop
sub
movs
pusha
enter
add
and
or
mov
push
iret
sub
jmp
sbb
dec
fimul
pop
sbb
jae
xchg
js
jae
mov
mov
sti
imul
push
outs
rcr
sbb
fbstp
sar
inc
sbb
push
add
ins
test
xor
inc
adc
test
enter
cli
inc
bound
test
addr16
mov
mov
shr
cmp
stc
sbb
arpl
imul
and
jmp
dec
std
mov
call
dec
pop
je
pop
cvtdq2ps
fist
and
addr16
(bad)
in
retf
inc
mov
lock
dec
sub
pusha
sbb
lds
mov
mov
shr
jno
mov
sub
clc
mov
(bad)
xlat
or
dec
sbb
dec
sub
call
ins
imul
out
inc
aas
addr16
js
jne
cmp
loope
xchg
rol
dec
aas
jnp
inc
mov
test
fcomp
test
(bad)
fisub
adc
sahf
nop
sti
cwde
jmp
out
adc
adc
mov
in
sbb
stos
iret
mov
add
inc
scas
push
xor
shr
xchg
imul
cld
cmps
jl
push
movs
(bad)
scas
push
shl
addr16
add
ins
(bad)
enter
add
aas
frstor
jmp
dec
mov
sbb
cwde
leave
add
sub
jg
push
les
cmp
and
jb
sar
xor
and
push
add
and
xchg
fldl2t
pop
(bad)
xchg
pop
inc
xor
ja
test
push
pop
dec
or
dec
inc
cs
fisubr
xchg
jmp
das
test
xor
mov
xchg
ret
push
fldcw
push
sub
outs
pop
dec
xchg
cld
mov
fisubr
pop
sbb
xor
and
in
lods
push
imul
dec
and
imul
int
out
push
jmp
push
add
shr
cmp
and
mov
cmp
jl
imul
push
push
mov
fidiv
stos
xchg
popa
(bad)
out
pop
sbb
and
cld
mov
(bad)
push
daa
jo
sbb
outs
(bad)
aas
outs
add
and
les
dec
shl
ins
add
int
cmps
jge
leave
mov
sahf
stos
pcmpeqw
mov
jnp
mov
mov
das
inc
aam
sub
push
sub
jns
imul
and
test
inc
sbb
mov
neg
call
push
add
popf
ja
push
shl
push
or
inc
arpl
daa
outs
imul
and
call
icebp
shl
loopne
dec
and
fdiv
cmps
jmp
dec
sbb
sub
inc
aad
not
jp
jb
cli
jge
loope
push
add
cmp
(bad)
cmp
jle
cmp
les
sahf
les
retf
mov
ss
rcr
pop
adc
into
call
and
scas
lds
in
int
adc
mov
mov
es
adc
xchg
jmp
fstp
repnz
push
lods
mov
sbb
push
add
mov
mov
add
mov
stos
inc
pop
jo
into
add
icebp
and
call
jl
and
mov
mov
ret
ficomp
cmp
jae
and
mov
inc
add
xchg
push
aas
loop
push
mov
icebp
mov
add
das
jg
ins
cmps
arpl
push
ret
xchg
out
mov
inc
sub
(bad)
mov
cmps
pop
inc
push
and
push
and
daa
pop
push
jg
lahf
sar
aas
and
nop
loop
add
pop
bound
sbb
mov
cmp
test
mov
rcr
jle
imul
push
push
out
jp
push
out
push
daa
jo
shr
out
retf
bndstx
jmp
pop
jecxz
es
adc
and
fist
lock
std
pop
xchg
pop
jbe
out
scas
push
sbb
xor
push
ficomp
outs
stos
mov
aad
jns
jo
cmp
pop
stos
fmul
and
jp
pop
out
mov
inc
jmp
aad
push
adc
lock
or
shr
push
inc
pop
sbb
jmp
repnz
jne
retf
arpl
xor
aaa
or
cli
cs
cmp
hlt
test
loope
(bad)
pop
in
xchg
sub
xor
lds
mov
sub
ja
hlt
mov
lds
jns
out
test
repz
fnstsw
call
(bad)
or
sbb
cdq
xchg
inc
in
arpl
div
jne
div
push
out
sub
sti
mov
mov
jecxz
icebp
or
sbb
push
dec
mov
sub
int
add
test
mov
ins
push
test
mov
cmp
stc
mov
loopne
clc
and
xor
mov
ja
pop
test
cdq
(bad)
jo
push
push
sbb
pop
adc
and
sbb
cmp
bound
or
xchg
rcl
xchg
aam
aad
pop
push
fld
addr16
mov
jecxz
mov
scas
mov
pop
mov
out
pushf
enter
add
cdq
int
imul
dec
add
jbe
cmp
fsub
sbb
fsub
fld
daa
jecxz
call
repnz
jp
cmps
aad
cmp
sahf
xlat
inc
or
fistp
(bad)
scas
in
xor
sbb
data16
call
inc
jb
push
add
mov
test
mov
adc
movs
xchg
in
push
pop
push
cmp
into
push
pop
jns
rcl
lods
fnstenv
sub
push
das
ja
xor
outs
mov
xchg
jl
int3
fwait
or
or
call
push
ss
sbb
or
sub
leave
daa
loope
loop
daa
pop
push
push
pop
sbb
cs
add
add
push
add
cli
stos
sar
addr16
dec
cmp
jbe
test
ss
dec
pop
sbb
sub
aad
pop
inc
push
inc
cmp
push
xchg
(bad)
xchg
fild
jns
sub
(bad)
mov
inc
sbb
pushf
ja
test
cmps
add
fs
hlt
mov
jne
(bad)
mov
mov
mov
jb
(bad)
mov
mov
fimul
cli
push
pop
ins
push
cmp
mov
cs
jp
dec
test
inc
sbb
push
mov
inc
adc
mov
adc
sbb
sub
jo
jae
xchg
jp
pop
sub
outs
jae
jecxz
out
(bad)
adc
and
mov
test
inc
mov
mov
cmps
pusha
cmps
data16
sbb
lds
push
mov
mov
push
cmp
retf
or
dec
sbb
int3
sub
mov
xchg
pop
into
mov
push
sub
test
xchg
jne
pop
cli
imul
leave
sub
jecxz
shl
sahf
(bad)
sub
mov
in
cwde
iret
and
adc
pop
cmp
dec
gs
inc
or
adc
bound
add
jl
dec
ds
retf
test
enter
mov
push
jnp
and
addr16
xchg
mov
or
aaa
mov
jns
outs
xor
jge
pop
sahf
or
push
push
jg
bound
push
dec
mov
(bad)
push
mov
dec
push
pop
les
xor
es
in
lahf
enter
mov
test
inc
push
test
mov
pop
dec
or
aam
ja
pushf
cmc
fnstsw
push
adc
pop
mov
test
(bad)
adc
lock
rcr
xor
inc
lahf
into
movs
in
add
pop
fwait
in
movs
int
pop
pop
sbb
mov
xchg
ja
push
mov
out
scas
cmp
gs
repnz
sbb
push
cmp
lods
jmp
mov
sub
daa
mov
lods
(bad)
sbb
(bad)
fyl2xp1
xchg
mov
mov
adc
dec
xchg
out
sub
call
aas
jnp
sti
xchg
aaa
and
mov
sbb
cld
mov
lods
aad
pop
or
and
sbb
mov
mov
mov
test
cmps
dec
and
cmp
lods
jmp
xchg
dec
loop
jbe
rol
(bad)
movs
call
inc
mov
pop
adc
aas
xor
rol
cmp
mov
ins
mov
and
adc
dec
pop
pop
je
test
(bad)
in
cwde
iret
sti
xor
mov
test
shl
sub
pop
cmp
pop
sbb
(bad)
fwait
retf
or
fwait
jmp
ds
xor
aam
popf
lds
popf
jmp
stos
jbe
pop
mov
add
xor
mov
std
jns
hlt
mov
jg
pushf
lods
inc
add
stos
nop
and
xchg
cmc
add
lahf
(bad)
loop
and
repnz
jecxz
lahf
int
sub
xlat
xchg
(bad)
in
fiadd
xchg
sar
ins
popf
pop
cmp
stos
retf
xlat
test
leave
scas
dec
es
xor
fs
stos
ror
xchg
jge
pop
retf
jg
jb
jne
jle
pop
mov
or
mov
and
xor
sub
aaa
les
or
scas
jmp
mov
mov
loopne
std
das
push
sub
test
adc
leave
popf
fist
lods
into
adc
push
js
pop
pop
adc
adc
movs
jmp
lock
retf
jo
jbe
pusha
and
(bad)
mov
mov
push
jo
fstp
pop
adc
jnp
pop
sub
inc
xchg
pop
or
jb
dec
add
push
lods
push
addr16
sub
bound
jae
hlt
mov
movs
movs
cld
mov
push
push
xor
fldcw
xchg
js
(bad)
cmc
mov
cld
add
cmp
(bad)
call
and
test
jo
xchg
mov
int
mov
xchg
fs
jp
dec
imul
dec
or
imul
inc
mov
mov
xor
mov
lahf
add
arpl
fiadd
dec
or
xchg
leave
cld
adc
dec
fsub
mov
sbb
adc
iret
sbb
adc
mov
add
pop
mov
sti
mov
icebp
mov
movs
cmp
mov
scas
push
xchg
jmp
push
mov
imul
(bad)
shl
push
add
enter
lea
inc
mov
jl
aad
inc
adc
mov
les
cli
or
mov
xor
ja
fadd
xchg
jle
mov
mov
dec
sbb
dec
xor
ins
mov
pop
inc
cmp
stos
sti
mov
sub
out
mov
jmp
jns
jae
sub
push
jg
dec
xchg
cmp
(bad)
ins
cmp
repnz
sbb
mov
je
mov
int
test
paddd
push
pop
sbb
sar
jne
push
adc
fs
les
inc
pop
sti
sub
je
and
int
add
dec
jmp
jge
loop
rcr
mov
in
shr
adc
aam
outs
xor
sbb
into
lahf
fistp
lock
call
mov
das
imul
jb
outs
cmp
cmps
push
scas
(bad)
mov
push
cdq
(bad)
mov
or
add
pop
push
pop
iret
jecxz
lock
mov
mov
mov
cmp
sub
and
jns
or
aaa
jp
xor
mov
ds
pop
sbb
xchg
mov
loope
inc
stos
mov
cmp
add
fwait
xlat
inc
hlt
stos
rcl
(bad)
pop
adc
js
outs
sub
pop
cmp
rol
jge
inc
retf
push
(bad)
push
add
je
mov
mov
loop
rcl
and
lahf
pop
push
gs
fs
jecxz
fst
dec
sub
mov
mov
data16
jae
arpl
imul
int
ds
lahf
enter
addr16
ret
(bad)
pop
or
push
bound
push
sbb
js
addr16
rcl
adc
dec
ds
aas
adc
dec
or
xor
outs
sub
cs
or
xchg
xlat
xchg
fsubp
push
dec
and
push
sub
jns
imul
jno
add
jmp
sbb
or
inc
and
mov
cmp
popf
fcom
and
pop
out
or
aas
push
push
xchg
jmp
out
mov
push
pop
arpl
jno
ret
pop
jns
js
jmp
jg
(bad)
int3
mov
mov
add
repz
jmp
sbb
or
imul
cmovnp
mov
jb
in
sbb
jle
xor
xchg
shr
fisubr
push
lds
pop
xor
test
call
add
sub
pop
pop
enter
fisttp
adc
adc
test
add
jle
ret
nop
aam
(bad)
and
add
lahf
retf
add
adc
popa
or
xchg
jae
dec
fild
push
ss
ret
xchg
ret
dec
or
cmp
jge
lds
imul
jnp
adc
repz
fidiv
jg
dec
jb
xchg
hlt
xchg
fstp
les
loopne
neg
sbb
loopne
aam
repz
push
dec
pushf
into
popf
fst
push
adc
pop
or
inc
cmp
adc
adc
push
pusha
sub
dec
bound
push
add
xor
cmc
mov
add
shl
mov
add
clc
scas
shr
fidivr
pusha
xchg
retf
mov
dec
stos
shr
inc
dec
out
call
dec
or
ret
neg
cs
mov
mov
sub
imul
adc
xor
mov
out
mov
push
add
jae
fadd
jnp
pop
mov
lahf
rol
dec
sbb
jnp
fstp
xor
cli
mov
adc
fdivr
push
mov
fdiv
cmc
nop
jmp
pop
push
jl
out
nop
movs
loope
xchg
stos
(bad)
mov
mov
mov
push
or
push
add
mov
pop
cmp
dec
ds
aam
mov
call
sbb
int
mov
mov
or
or
int
dec
or
aaa
arpl
push
pop
xor
add
or
cmps
inc
aas
push
xor
cdq
mov
aas
ins
sub
test
or
push
adc
jle
fcmovb
mov
cmp
scas
cld
mov
cmp
in
adc
jmp
mov
sbb
adc
cwde
outs
cmp
das
pop
or
inc
out
jmp
push
imul
xor
fisttp
loopne
les
cmp
mov
(bad)
scas
int3
mov
add
fsub
movs
lods
mov
xchg
sar
add
loope
not
xchg
rol
pop
sbb
push
adc
or
int3
pop
pop
ins
aaa
in
xchg
mov
mov
fisttp
das
jle
mov
xchg
mov
xchg
clc
push
add
xchg
push
add
inc
(bad)
jbe
pop
pop
ds
bnd
nop
stc
sub
jge
fwait
and
mov
or
cmp
mov
dec
dec
inc
dec
ror
add
in
jae
push
loopne
push
int
fwait
test
leave
jle
pop
int
repnz
push
(bad)
mov
mov
imul
(bad)
mov
push
dec
test
or
call
in
xchg
sahf
nop
sar
(bad)
loop
mov
int
inc
js
mov
test
sbb
imul
fdiv
lahf
fcom
fcomp
xor
xchg
out
or
arpl
icebp
es
ds
or
sahf
(bad)
aas
cmp
sti
jo
imul
sub
test
cmp
dec
mov
push
sub
mov
cmp
int
push
pop
dec
mov
and
or
jl
mov
mov
rcr
cdq
xor
retf
push
adc
jmp
mov
jge
xlat
sbb
add
xchg
or
or
mov
xor
test
cmp
sub
stos
cmps
jno
les
dec
inc
fs
mov
jl
and
out
loope
and
adc
cmps
adc
cmp
mov
scas
cmps
add
inc
addr16
sbb
int3
push
jmp
dec
or
jb
cmps
in
sub
mov
jp
mov
icebp
sahf
adc
cdq
(bad)
xchg
shl
in
cmc
dec
ins
cmp
call
cli
lods
mov
nop
mov
fsub
shl
xor
adc
aam
xchg
sub
pop
push
das
adc
xchg
mov
jp
jg
jmp
ss
pop
je
pop
daa
repz
dec
(bad)
xchg
adc
js
ins
mov
fisttp
test
pop
pop
(bad)
push
add
jno
ins
push
cld
mov
sbb
xchg
loopne
push
aam
in
fwait
or
sbb
js
pop
popf
call
in
pop
cmp
adc
paddsb
popa
mov
jns
dec
sub
jp
sub
push
or
daa
(bad)
in
or
iret
cs
int
aas
xor
(bad)
jnp
dec
or
lahf
leave
out
aad
test
or
mov
mov
mov
fidivr
sub
push
loop
mov
rol
push
push
jae
add
jns
inc
out
aam
xor
aam
ret
int
leave
jne
cmp
sahf
jbe
jmp
dec
bnd
adc
sub
pusha
lods
shl
mov
or
sti
(bad)
pusha
push
push
pusha
cmc
or
(bad)
stc
mov
jmp
cmps
lock
(bad)
ret
std
iret
call
imul
(bad)
(bad)
in
fstp
(bad)
(bad)
push
and
cdq
dec
jb
fcom
jns
sti
pop
push
mov
cmp
cmp
repz
sahf
aam
cmps
push
jae
pop
outs
xchg
push
mov
sbb
dec
push
retf
icebp
mov
leave
outs
ds
pop
movs
int
push
or
pop
sub
jecxz
push
xor
inc
push
pop
sbb
mov
iret
push
pusha
sub
adc
inc
jnp
inc
sub
sbb
jne
or
mov
adc
xchg
call
mov
and
xor
xchg
sub
lds
outs
jmp
mov
loop
xchg
xchg
lahf
xchg
add
adc
pop
out
mov
xchg
sbb
dec
jbe
cmp
pusha
mov
out
add
je
jne
mov
std
pop
dec
inc
jecxz
mov
add
xchg
lods
mov
outs
jge
(bad)
pop
mov
push
add
mov
ret
xchg
xlat
inc
pop
dec
sub
test
fdiv
adc
lock
daa
movs
push
push
add
xchg
mov
repnz
movs
call
xchg
leave
adc
jecxz
adc
(bad)
popa
mov
lahf
jne
sub
xor
jg
sbb
jne
jg
out
and
fcmovu
push
fwait
lods
sahf
psrld
cmp
cwde
ins
fsubr
je
cld
ss
pop
not
cmp
xor
cmp
pop
and
stc
sub
xor
inc
pop
dec
std
retf
loopne
xor
push
imul
sub
push
div
retf
xor
push
cs
fadd
daa
pusha
mov
ret
push
jb
call
mov
mov
stos
es
pop
jp
cli
or
mov
std
test
(bad)
out
add
mov
and
push
scas
xchg
in
repnz
pop
imul
jo
and
pusha
sub
retf
add
or
out
inc
rcr
iret
cmp
and
adc
inc
ins
mov
repz
push
push
call
xchg
cmp
add
(bad)
cmc
sbb
cmp
sub
js
jne
lahf
push
xchg
xchg
jecxz
push
pop
inc
pop
fisttp
push
(bad)
push
retf
mov
lahf
push
pushaw
leave
inc
fisubr
test
push
outs
retf
jecxz
lahf
sar
mov
popf
out
test
inc
hlt
sub
out
movs
pop
retf
mov
out
mov
xlat
mov
out
jmp
pop
(bad)
mov
jns
jb
pop
or
ins
cmp
sti
shl
loopne
xor
movs
dec
aaa
push
aad
or
in
aad
add
addr16
ret
fistp
lds
gs
jne
je
jmp
out
cmp
hlt
mov
mov
jns
mov
cmc
fxch
nop
lods
cmp
mov
jne
or
push
pop
out
sbb
sbb
mov
ja
aad
pop
dec
xchg
retf
nop
xor
pusha
cmp
sbb
rcl
jb
dec
xlat
in
mov
fild
(bad)
add
sahf
sbb
repnz
cmp
cld
xchg
je
xchg
aaa
sbb
or
xlat
icebp
test
jns
xchg
cmp
mov
mov
xchg
mov
shr
call
div
movs
adc
dec
cld
sub
sub
inc
leave
stc
mov
outs
es
std
xor
in
shl
fsubp
sbb
outs
push
cli
sahf
mov
(bad)
cmc
xor
std
fldcw
ja
jns
mov
gs
repz
mov
or
mov
imul
aas
outs
dec
pop
clc
call
lahf
aaa
pusha
sub
dec
and
lds
mov
int3
rcl
dec
pop
sbb
das
or
int3
push
adc
lods
das
popa
(bad)
cmp
aam
das
cmp
xchg
add
into
cmp
inc
dec
jp
in
pusha
out
jo
fdiv
mov
ret
push
sahf
and
in
jg
cdq
cmps
jecxz
adc
leave
test
adc
jecxz
in
retfw
retf
test
test
retf
mov
fsubr
mov
loopne
loopne
and
rcr
in
mov
cmps
dec
pop
retf
push
mov
adc
fisttp
mov
mov
daa
(bad)
jne
push
xlat
xchg
aaa
into
xchg
imul
bound
dec
xchg
mov
jg
shl
mov
jmp
test
test
xor
dec
test
push
data16
nop
mov
xchg
je
sbb
add
push
or
lock
not
test
test
loop
mov
lock
cmps
fbstp
gs
jmp
retf
and
sub
add
inc
push
aas
(bad)
mov
fucomi
hlt
xor
jecxz
adc
lods
mov
mov
int
jge
xchg
cdq
xlat
rol
cmp
gs
sbb
aaa
pop
adc
imul
(bad)
loopne
pusha
(bad)
into
cmp
in
jno
cmp
mov
xchg
ret
mov
mov
mov
fwait
pop
and
add
pusha
retf
(bad)
xlat
rol
or
and
add
mov
lock
leave
mov
inc
pop
lods
(bad)
mov
pop
ins
xchg
inc
push
ins
dec
xor
add
call
cli
jbe
sub
aam
adc
nop
mov
cmp
imul
push
mov
mov
adc
add
ret
dec
adc
repz
ror
mov
je
jge
cmp
pop
pop
sub
add
xchg
pushf
pop
(bad)
mov
les
pop
cmp
sahf
in
pop
adc
inc
(bad)
in
add
lods
gs
test
pushf
add
in
pop
mov
sbb
sub
aam
push
mov
pop
(bad)
ret
rol
add
inc
dec
sbb
push
jmp
jno
push
mov
test
clc
and
test
mov
mov
loopne
push
pop
mov
loopne
sahf
add
repnz
cmp
rol
jmp
addr16
scas
je
jns
loopne
imul
inc
xchg
inc
mov
jns
sub
std
pop
scas
movs
fwait
aad
les
je
and
pop
jno
imul
push
mov
pop
push
xor
dec
jne
jmp
retf
or
dec
pop
jns
cmp
into
xchg
pop
mov
stc
int
xor
nop
jg
lods
cmp
xchg
or
and
mov
pusha
mov
xchg
retf
xchg
out
cmps
cmp
imul
shl
test
and
call
aam
xor
lahf
je
sub
pusha
mov
mov
sbb
push
mov
test
sub
cmp
mov
cmp
int
ins
aaa
jge
lea
sub
or
inc
jmp
outs
xchg
jo
mov
push
(bad)
fmulp
add
iret
inc
out
sar
call
xchg
iret
adc
cwde
pushf
psubusb
rol
cmp
push
and
mov
retf
mov
inc
or
fwait
and
push
or
cwde
sbb
mov
cdq
inc
ins
cdq
gs
test
arpl
jle
div
add
pop
cwde
push
popf
push
call
js
cli
sbb
adc
xchg
push
test
xor
push
sub
repz
cmp
sbb
call
sub
lea
sbb
je
fs
mov
enter
dec
fistp
jle
sbb
jmp
dec
cmp
or
mov
mov
daa
in
and
mov
int3
movs
ins
loope
mov
(bad)
or
xor
dec
and
hlt
sub
or
fyl2x
push
adc
push
movs
sub
dec
adc
dec
std
lock
jl
and
je
sub
scas
fcomp
xchg
pusha
push
stc
and
outs
xlat
mov
xchg
in
jle
adc
loop
jge
call
push
mov
push
cs
mov
jnp
pushf
xor
loope
sbb
stos
sbb
mov
lods
pop
pop
mov
dec
pop
inc
xor
std
mov
mov
add
cmps
or
pop
aam
sub
add
xor
mov
sbb
mov
int
dec
dec
cmp
test
pop
xor
dec
inc
xchg
push
sbb
add
hlt
shl
rcl
xchg
and
arpl
inc
mov
jae
mov
ror
js
mov
outs
push
jecxz
add
add
sub
shl
pop
jae
xchg
xchg
pushf
dec
fisttp
add
mov
sbb
mov
popf
mov
stos
clc
imul
dec
xor
shl
inc
pop
push
xor
or
shl
mov
gs
out
(bad)
test
repnz
in
cmc
enter
ror
push
clc
fst
dec
cmp
xor
paddq
push
ds
push
ret
inc
fadd
enter
fcomp
daa
cdq
mov
jno
imul
dec
push
push
fxam
cdq
dec
sub
push
hlt
mov
mov
clc
cs
push
mov
add
aad
xchg
mov
push
sti
push
js
loope
rol
jg
pop
mov
xchg
mov
mov
push
in
jno
mov
xchg
xchg
(bad)
aad
pop
dec
sar
cld
lods
add
xor
jecxz
es
cmps
push
je
lods
dec
mul
fdiv
or
mov
sahf
xor
jl
fdiv
jbe
dec
fs
iret
lock
leave
cmp
jmp
adc
dec
and
sub
mov
fwait
and
inc
pop
punpcklwd
mov
pop
test
dec
stos
xchg
pop
cld
xor
and
pop
push
ret
and
or
push
and
mov
sti
movs
lock
inc
adc
mov
in
and
fidivr
into
pusha
test
nop
cmps
lahf
add
cmp
add
test
sar
adc
and
test
sbb
(bad)
adc
outs
stos
gs
(bad)
(bad)
outs
test
dec
inc
daa
(bad)
outs
arpl
sbb
cmc
loop
mov
dec
jno
rcl
(bad)
dec
or
push
clc
or
arpl
out
sub
push
(bad)
sbb
add
imul
sub
mov
ret
ds
arpl
ror
(bad)
loope
jae
leave
mov
sub
pop
jle
neg
sub
sub
sar
adc
xchg
outs
sbb
add
fldcw
stc
xchg
ret
sbb
shl
dec
dec
mov
jns
inc
xchg
cld
pop
lods
fadd
cmp
push
(bad)
mov
bound
popf
cmp
sar
hlt
in
dec
cmp
adc
fcmovb
(bad)
int
adc
jp
mov
popa
lods
xchg
and
movs
xor
pushf
fisttp
bound
data16
xor
clc
dec
frstor
ret
push
inc
fiadd
dec
add
push
inc
push
gs
mov
and
cld
or
out
push
cmp
mov
sahf
jg
push
std
clc
addr16
dec
popf
xchg
mov
leave
pop
ds
cmp
(bad)
pusha
rol
stos
jmp
(bad)
aad
adc
mov
inc
and
mov
pusha
xchg
iret
add
push
and
ret
clc
(bad)
mov
mov
push
cmp
push
mov
ret
pop
dec
popa
(bad)
sub
lods
rcr
mul
fmul
popa
mov
loope
inc
call
rol
lods
lds
xchg
imul
sti
pop
jns
out
aam
(bad)
call
ja
mov
aas
stc
pop
jo
add
sahf
bound
fs
popa
inc
push
mov
pop
cmp
mov
std
mov
ret
xchg
dec
dec
xchg
push
dec
sub
in
fdiv
mov
mov
scas
or
hlt
dec
and
sbb
lock
jo
(bad)
rcl
add
je
or
bound
dec
mov
mov
sbb
adc
xor
lods
movs
and
pop
mov
out
mov
rcr
pusha
cmp
dec
stos
jnp
or
sbb
(bad)
std
dec
dec
cwde
push
cli
dec
cmp
loope
(bad)
aas
xchg
mov
mov
not
ror
mov
movs
mov
sahf
cmp
ret
adc
in
jle
lock
addr16
call
fwait
icebp
cld
std
mov
mov
sub
lea
add
cmp
mov
or
lods
mov
cmp
dec
mov
add
sub
adc
sub
add
rcl
cs
xchg
dec
mov
fnstsw
or
cmp
(bad)
or
add
adc
(bad)
dec
and
(bad)
and
or
imul
dec
pushf
xchg
ja
sbb
idiv
fldcw
xlat
push
(bad)
std
and
(bad)
icebp
xchg
(bad)
mov
pop
dec
mov
mov
sbb
scas
push
jno
pop
fsubr
into
mov
movs
ds
adc
imul
mov
xchg
outs
add
pop
push
cmp
fiadd
std
fld
cwde
sahf
xor
pop
outs
mov
jge
or
std
and
sbb
jecxz
sbb
aad
xor
clc
sahf
add
pushf
or
push
mov
mov
repz
in
popf
inc
or
add
inc
adc
mov
test
inc
xchg
cmp
daa
mov
int3
jmp
add
or
jbe
or
je
int
inc
test
jb
and
inc
pop
jecxz
xor
out
das
imul
bound
and
enter
shl
pop
retf
(bad)
(bad)
push
in
adc
test
fmul
mov
cmc
pop
out
out
xchg
xchg
pop
pop
test
cmps
mov
xor
(bad)
repnz
test
(bad)
pop
push
dec
jmp
leave
fmul
outs
std
test
scas
daa
pop
and
ret
aam
xchg
push
add
hlt
and
inc
arpl
xor
mov
bound
lods
ret
push
add
clc
inc
(bad)
hlt
xor
(bad)
dec
push
xchg
lods
mov
mov
idiv
sbb
push
shl
jl
mov
jmp
test
stc
loopne
adc
dec
(bad)
sbb
sub
xchg
mov
dec
pop
daa
cmp
mov
out
cs
out
cmp
cs
mov
pushf
ins
push
retf
js
jae
sbb
add
nop
jo
into
mov
push
test
ins
shr
ss
xor
mov
ret
ror
adc
inc
pop
push
movs
mov
gs
push
data16
(bad)
pop
leave
fbld
and
sbb
repz
pop
and
xchg
and
cli
xor
pop
jo
jne
out
fscale
ss
push
cwde
rol
icebp
inc
xchg
iret
mov
inc
test
push
cdq
mov
data16
lods
mov
mov
div
fimul
mov
(bad)
or
fild
cmp
and
jbe
jmp
inc
(bad)
loopne
test
das
adc
inc
iret
in
jg
ins
sbb
mov
data16
addr16
xchg
(bad)
jge
pop
and
add
daa
in
pop
sbb
or
xor
call
push
pop
stos
test
cwde
or
rcl
cmp
push
xor
inc
mov
outs
jnp
sar
sub
and
mov
mov
cli
icebp
mov
add
in
dec
cmp
call
mov
retf
and
mov
xor
add
jmp
sub
sub
out
jmp
movs
and
sbb
test
xchg
sti
push
dec
cld
mov
push
inc
aas
aaa
jmp
mov
xchg
cdq
add
dec
mov
loop
mov
dec
push
out
cmp
hlt
aad
das
push
pushf
cmp
cmp
int
lahf
mov
mov
pop
je
(bad)
movs
lea
inc
mov
push
dec
je
and
cmc
jp
sub
jecxz
dec
in
xchg
mov
cmp
pop
popf
dec
adc
or
leave
cmps
push
scas
sub
lahf
sar
ret
call
in
and
xor
jp
sbb
mov
in
sbb
leave
cmp
sbb
mov
clc
scas
call
dec
mov
vsubsd
lahf
jl
(bad)
jmp
mov
pop
push
pop
sub
lods
fisttp
test
and
fsubr
stos
and
jnp
fisub
add
mov
jmp
loopne
dec
mov
sahf
idiv
scas
div
and
mov
sub
imul
repnz
xlat
loop
ins
mov
imul
dec
adc
jecxz
jl
ret
mov
das
pop
pop
div
mov
cmp
jl
call
add
sbb
loope
inc
(bad)
push
lods
mov
or
cmp
mov
ror
(bad)
(bad)
stos
movs
sub
lahf
mov
or
rcr
adc
(bad)
sub
stos
pop
data16
xchg
fmulp
pop
(bad)
arpl
scas
jp
into
add
rol
icebp
fstp
and
jae
and
pop
and
cmp
xor
mov
hlt
push
imul
xchg
ja
xchg
pushf
imul
mov
cld
ins
mov
fldz
add
sub
ins
retf
xchg
cmp
gs
jno
mov
fbld
stc
(bad)
fsubr
xchg
mov
mov
stos
add
lea
jecxz
outs
push
sti
and
or
int3
xchg
push
push
xchg
in
cdq
mov
inc
out
(bad)
push
xor
or
push
out
lahf
cmp
mov
jmp
or
movs
repnz
cmp
imul
sbb
das
(bad)
aad
adc
dec
mov
cs
xor
gs
xchg
retf
or
ror
mov
push
jecxz
jg
adc
je
adc
jbe
xchg
arpl
mov
es
mov
enter
jne
mov
xchg
jmp
jae
mov
ucomiss
in
movs
jb
out
call
mov
or
and
ret
in
mov
pop
sub
jmp
(bad)
inc
fldenv
loopne
dec
arpl
mov
retf
aas
imul
jp
in
loopne
rcr
lds
dec
add
bound
ja
cwde
xchg
push
and
push
dec
sub
add
mov
mov
mov
repnz
jns
push
lods
pop
cmp
fdiv
das
fistp
sub
jnp
int
dec
getsec
psrld
loop
adc
mov
pushf
stc
inc
dec
ret
into
cmp
xchg
pop
jae
fs
(bad)
sub
sub
out
js
enter
aaa
xor
js
pop
jne
push
leave
int
and
mov
jmp
push
or
mov
push
(bad)
jp
into
pop
push
and
pop
mov
in
inc
and
jo
cs
fs
push
imul
fs
daa
cmp
xor
cwde
xor
imul
jg
cli
push
add
out
int
inc
cwde
les
push
xchg
dec
test
xchg
and
inc
ss
xor
pop
jle
mov
mov
pop
pop
arpl
nop
mov
rcl
stc
xchg
test
inc
mov
ficomp
pop
xchg
arpl
aaa
movs
dec
xchg
mov
cmp
mov
push
cmps
xlat
sub
sbb
stc
pop
push
cmps
pop
rcr
cs
in
nop
(bad)
xchg
mov
jg
es
rcl
jp
out
lods
cmp
imul
jns
cmp
popf
sbb
jge
pop
iret
fwait
add
lods
xor
xchg
ja
cmp
cmps
jo
mov
cdq
pop
add
or
sbb
gs
push
and
adc
jp
mov
sub
cmp
aaa
jp
popa
inc
ret
xchg
fist
and
popa
(bad)
pop
push
add
xchg
add
in
lahf
jle
fcomp
inc
xor
pop
adc
retf
or
(bad)
fstp
adc
outs
add
cdq
xor
push
pop
repnz
pusha
inc
xor
fsubr
gs
(bad)
adc
aad
out
mov
mov
sub
es
cs
gs
cmp
push
test
ds
pop
stos
retf
fnsave
push
mov
inc
xchg
adc
jns
add
aaa
adc
leave
and
pusha
aam
add
cmp
ins
inc
sub
jmp
sbb
or
fnstsw
and
jnp
pop
popa
jae
mov
inc
and
push
xor
(bad)
jmp
push
adc
(bad)
inc
xchg
pushf
pop
popf
sbb
push
add
pop
lds
push
addr16
push
pushf
jno
inc
loopne
mov
(bad)
xchg
inc
ja
xchg
mov
(bad)
pop
mov
inc
mov
dec
adc
daa
pop
dec
dec
loope
push
mov
pop
inc
add
lahf
in
mov
add
adc
cmp
pop
xchg
mov
sub
jg
movs
dec
sub
or
pop
adc
and
push
imul
mov
xor
dec
pushf
xchg
dec
xor
mov
and
stos
jo
xchg
jns
and
add
fdiv
cmps
test
int3
(bad)
ret
or
aad
enter
adc
sbb
adc
sub
(bad)
retf
inc
xor
mov
sub
xor
mov
inc
jbe
sbb
push
inc
ins
enter
fwait
hlt
repnz
push
outs
fcom
cli
test
imul
(bad)
mov
call
ret
sub
pop
ins
mov
je
jp
ins
and
cmc
int3
xchg
test
mov
out
mov
cmp
adc
fcom
lods
imul
dec
and
bound
mov
fisttp
or
test
jmp
cmp
jns
mov
push
mov
(bad)
mov
xchg
shl
mov
test
test
popa
or
inc
adc
add
ja
(bad)
jg
pop
cmp
push
cmp
mov
adc
out
push
or
cmps
inc
and
xor
push
mov
loope
pop
jg
in
jmp
push
fwait
dec
out
out
daa
mov
xchg
test
adc
add
aad
pop
cmps
popf
shr
and
xchg
mov
mov
jmp
adc
shl
fwait
cdq
dec
addr16
lods
sub
call
pop
jbe
adc
pop
clc
sub
xchg
adc
mov
ss
push
cmps
mov
xor
sar
aad
xchg
fwait
ds
(bad)
sbb
push
xchg
fiadd
cli
test
ins
mov
jmp
sub
add
dec
aad
dec
xchg
jg
mov
cdq
and
out
out
xor
or
pop
test
xchg
cmp
xlat
xchg
jecxz
imul
mov
scas
fisttp
adc
ret
retf
loopne
sbb
pop
outs
imul
mov
dec
cmp
pushf
push
adc
jo
(bad)
mov
push
mov
pop
retf
rol
add
add
int3
inc
jmp
adc
ret
xchg
push
sub
xchg
jnp
movs
jno
pop
mov
stc
push
(bad)
jmp
mov
dec
bound
test
adc
sub
fist
loopne
clc
xchg
xchg
scas
test
jmp
sbb
xor
sub
jmp
popa
dec
ret
push
add
rcr
inc
xchg
mov
add
cmp
mov
(bad)
push
sbb
and
scas
push
call
enter
nop
inc
mov
sub
movs
jbe
data16
inc
mov
mov
mov
ins
mov
jp
mov
test
(bad)
cmc
test
inc
inc
retf
les
leave
jecxz
mov
(bad)
mov
jae
enter
jne
xor
cmps
or
rol
cmp
push
popf
clc
inc
xor
aas
fld
mov
mov
or
aaa
adc
mov
mov
xchg
cwde
sub
pop
fdiv
or
jo
push
pop
or
leave
arpl
retf
aam
and
cmp
sub
xor
jmp
push
pushf
rol
aas
mov
push
cmp
push
xchg
mov
mov
frstor
mov
add
fst
sub
ins
pop
jmp
out
out
adc
mov
sar
push
cmp
js
sahf
push
sub
ret
aaa
or
adc
add
jecxz
in
in
xchg
pushf
sub
push
fsubr
and
sub
sub
adc
arpl
dec
fsub
inc
cmp
jl
jle
xor
jle
or
cmp
add
ret
inc
jns
bound
clc
inc
hlt
push
push
movs
cmp
pop
neg
add
enter
pop
push
ret
lahf
xchg
sbb
sbb
xchg
xor
mov
jnp
int
out
mov
ret
mov
cs
inc
(bad)
enter
and
cmp
loop
(bad)
fild
push
leave
cmp
scas
(bad)
addr16
xchg
jmp
scas
movs
cmp
loop
shr
xor
mov
jge
or
outs
ja
nop
dec
out
shl
adc
call
cmp
jb
fimul
and
fs
sub
cdq
cmovno
mov
adc
mov
outs
or
ret
jl
in
xchg
je
sub
jl
call
xlat
addr16
push
loope
ret
mov
push
jge
adc
inc
movs
mov
(bad)
mov
in
rcl
mov
or
pop
cmp
jl
rcr
out
pop
mov
movs
cli
(bad)
fdiv
xchg
mov
outs
addr16
xchg
mov
mov
lds
lds
jle
inc
push
mov
pop
inc
pop
movs
adc
push
dec
xlat
scas
ror
cmp
fsubr
int3
stos
fwait
dec
mov
mov
dec
push
dec
(bad)
icebp
bound
inc
lods
aas
xor
xchg
daa
mov
or
pop
jmp
lods
mov
push
dec
mov
dec
jnp
jb
fmul
push
mov
daa
mov
jno
pop
int
xchg
fisttp
ins
int3
imul
pop
repnz
loopne
aaa
test
mov
imul
pop
xor
mov
jno
xchg
jmp
inc
pop
pop
sbb
(bad)
xchg
cmp
mov
adc
and
addr16
ins
and
rol
cmp
push
xor
rol
cmps
push
jg
adc
out
loope
aad
pop
cmp
test
cmps
xchg
or
pushf
dec
popa
cmp
mov
cli
mov
dec
pop
into
aad
and
jmp
mov
out
jo
mov
add
mov
push
adc
mov
or
pop
mov
rcl
das
and
addr16
mov
repnz
int3
shr
push
(bad)
sbb
push
je
retf
cmp
pushf
adc
ret
cli
inc
fld
in
jne
add
pop
xchg
das
out
xchg
fist
fidivr
sbb
cmp
xchg
xor
and
retf
aad
in
outs
cmps
mov
ja
jecxz
mov
inc
and
push
nop
out
jmp
icebp
push
or
in
enter
and
add
(bad)
shr
adc
sbb
mov
lods
xlat
mov
cmp
adc
lods
cli
xchg
adc
xchg
jp
mov
das
pop
nop
test
std
out
sbb
pop
lock
rcr
pushf
sbb
push
into
push
jecxz
sbb
mov
aad
lods
cmp
mov
dec
mov
js
bound
repnz
mov
dec
mov
mov
inc
call
repz
pop
xor
(bad)
scas
(bad)
enter
mov
ja
sbb
cmp
sbb
dec
retf
add
xlat
add
push
mov
dec
test
xchg
sbb
icebp
xlat
in
sub
lock
cdq
push
pop
sub
pop
aam
das
add
mov
mov
fcomp
mov
cmp
adc
mov
xor
sub
(bad)
in
ja
xor
(bad)
mov
pop
jl
sub
inc
mov
dec
not
add
es
xor
les
ss
sub
scas
inc
retf
fnstenv
mov
call
xor
cmp
mov
push
xor
loope
pop
enter
xchg
jae
xor
dec
cmp
mov
lods
dec
div
mov
mov
idiv
ret
ins
push
ins
je
arpl
test
std
xor
test
push
bound
leave
sbb
cmps
inc
mov
dec
(bad)
fadd
xchg
cdq
inc
jl
sbb
js
in
out
jnp
int
mov
ja
dec
dec
inc
mov
gs
std
dec
gs
jb
and
inc
fsubr
rcr
stc
sbb
jno
xchg
mov
push
mov
push
repz
mov
(bad)
add
adc
jns
daa
imul
adc
add
pop
dec
cmp
mov
push
add
ret
mov
adc
fs
mov
push
cmp
cwde
out
call
lods
add
mov
popa
dec
mov
mov
xor
in
and
inc
xor
mov
mov
mov
add
adc
aad
int
cmc
inc
push
pop
xor
cmp
mov
retf
rol
fwait
adc
movs
bound
or
movs
arpl
cwde
out
mov
cdq
dec
pop
stos
stc
cli
jb
in
xchg
sub
xor
cdq
or
popa
jno
xor
xor
in
and
mov
jmp
test
sti
sub
es
mov
inc
inc
rcr
pop
push
jns
div
mov
mov
xor
sbb
and
popa
pop
pop
mov
jmp
mov
sti
in
lods
xor
(bad)
(bad)
adc
or
push
xchg
dec
add
adc
push
imul
or
adc
movs
popa
mov
pop
imul
in
test
in
das
jb
ins
mov
aam
cmp
ror
cmps
mov
imul
repnz
adc
fldenv
lods
fild
mov
add
fidiv
movs
cs
fucomi
ss
cmp
hlt
cld
mov
lahf
pop
imul
ret
inc
xor
repz
mov
pop
sbb
and
inc
fs
sti
or
inc
not
inc
out
and
add
imul
std
add
jnp
jp
jmp
retf
fdivr
into
sbb
les
in
shl
out
icebp
ss
test
and
leave
fcmovnb
lods
fwait
aaa
xchg
inc
pop
mov
leave
cli
mov
inc
and
lock
push
es
jne
dec
call
add
sub
retf
je
sub
test
mov
ja
push
call
pop
adc
adc
and
cmp
jmp
sbb
sub
pop
lods
loop
jle
dec
push
adc
inc
push
push
mov
dec
mov
push
stos
jo
pop
mov
adc
cmps
mov
and
stc
sub
mov
in
mov
jp
out
into
and
dec
sar
shl
into
ret
push
or
sub
lea
add
xchg
fmul
ds
cli
ffreep
aas
cwde
push
popf
iret
pop
sub
adc
int
and
test
push
mov
adc
sahf
icebp
jl
adc
leave
test
sbb
cmps
bswap
std
sbb
rcl
loope
jmp
shl
and
mov
mov
lock
jmp
cli
sbb
xchg
jge
push
lahf
cli
ins
xchg
push
xchg
mov
push
call
push
inc
adc
iret
loop
in
mov
(bad)
pop
and
or
arpl
mov
test
xchg
imul
(bad)
mov
inc
call
cdq
aaa
je
jmp
or
push
inc
icebp
(bad)
call
and
jne
mov
or
mov
fbld
pushf
pushfw
mov
jae
sbb
mov
cli
inc
mov
sbb
in
add
lahf
jge
cmc
mov
push
pusha
(bad)
faddp
jns
sbb
xlat
jmp
inc
mov
loop
xchg
dec
sbb
in
into
loop
ret
sbb
inc
xor
push
xchg
stc
movs
mov
outs
adc
add
pop
push
xchg
jmp
mov
sbb
mov
mov
push
push
mov
(bad)
and
fsub
scas
(bad)
es
stos
dec
ror
fcom
push
shr
mov
push
(bad)
sar
sbb
pop
rcr
mov
bound
fadd
outs
add
retfw
dec
jge
mov
pushf
pop
push
fwait
cmp
mov
inc
push
jne
push
faddp
cmc
fmul
out
mov
push
cmp
loop
push
inc
sti
aaa
mov
outs
mov
shr
mov
mov
sahf
shl
xor
sbb
mov
add
daa
loop
pop
xchg
jl
push
mov
retf
leave
dec
int3
and
push
push
cmp
dec
push
call
push
mov
test
das
scas
rol
pop
es
fwait
add
movs
stos
xor
in
and
ret
mov
fwait
xor
or
(bad)
xchg
arpl
jle
mov
add
shr
enter
inc
shr
pop
ficomp
cmp
in
sti
div
idiv
adc
push
or
push
and
leave
add
mov
jmp
pushf
mov
mov
stc
sbb
ret
das
movs
mov
jns
xchg
mov
mov
push
outs
pushf
clc
xchg
cmps
mov
out
je
ret
inc
xlat
mov
mov
test
mov
test
push
pushf
std
popa
sahf
fwait
xchg
xor
jle
mov
dec
movs
data16
inc
out
loope
mov
bound
sub
daa
mov
pop
aaa
sub
or
mov
xor
pusha
mov
cmc
mov
arpl
pop
test
pop
daa
addr16
movs
ret
lock
ss
(bad)
jae
test
dec
fs
inc
lds
adc
shr
stos
aaa
mov
add
scas
in
stos
adc
mov
aam
lock
pushf
ret
setge
retf
cs
xchg
mov
int3
stc
add
aas
xor
aad
jb
jae
inc
mov
sub
sbb
in
pusha
inc
or
push
push
jbe
or
xchg
jmp
std
loop
ins
mov
mov
sbb
leave
jecxz
loop
jl
pop
inc
cmc
adc
or
mov
daa
cmp
mov
sub
mov
push
jg
fcomp
jp
sub
lds
jno
mov
xchg
cmps
cmps
shl
or
sar
pop
pop
jge
cmp
mov
not
(bad)
and
test
inc
cmp
sbb
mov
pop
arpl
sahf
outs
(bad)
jmp
ret
jp
and
pop
ins
mov
hlt
xchg
cli
mov
es
(bad)
aaa
xchg
cwde
cli
aaa
call
inc
sub
inc
fcmovu
daa
dec
test
xlat
sub
dec
mov
mov
popa
pushf
adc
shl
imul
add
out
jge
jb
or
rcl
mov
xor
cmp
pusha
add
mov
jno
imul
out
sub
test
shl
loopne
das
repz
mov
movs
(bad)
pop
jle
and
in
les
int3
sub
mov
push
(bad)
mov
ret
jno
dec
in
mov
out
test
leave
popa
into
lods
jno
xor
mov
mov
out
fs
adc
mov
sbb
xor
pop
mov
mov
retf
imul
or
es
call
loope
fs
imul
outs
jnp
loop
aam
stc
les
or
push
cmp
and
pop
mov
nop
mov
vcvttpd2dq
je
frstor
cmp
add
sbb
or
pop
xchg
or
cmp
jge
push
xchg
cld
adc
inc
shr
scas
call
sub
push
xor
dec
sti
pushf
gs
mov
fsub
pop
add
cli
neg
and
dec
enter
popa
cmp
xchg
fisub
and
xor
movs
cmc
out
jb
jmp
js
ja
imul
xor
das
pop
call
jge
outs
fisttp
pop
imul
dec
push
enter
ss
dec
enter
and
out
mov
sar
jge
(bad)
and
adc
sti
cmp
ins
(bad)
cmps
xchg
adc
jns
rcr
ret
js
rcl
cmp
ror
gs
push
mov
or
xchg
xchg
fs
xchg
cs
pop
imul
or
sub
and
cmps
repz
adc
arpl
adc
nop
loopne
push
mov
dec
push
call
mov
clc
or
jmp
sahf
and
dec
xor
fadd
in
jl
jae
shl
imul
add
sahf
jl
shr
cmp
ds
outs
pop
add
push
enter
mov
das
xor
rol
or
(bad)
sbb
jg
or
mov
imul
adc
or
ins
add
and
jb
int3
leave
shl
cwde
not
lea
pop
jne
push
call
in
jle
sub
jo
dec
xlat
arpl
mov
frstor
push
js
retw
inc
pop
mov
scas
inc
pop
cmp
dec
pop
xor
mov
jae
loop
lods
sbb
cmps
shl
pop
or
mov
mov
ins
dec
push
inc
xor
mov
xor
in
push
mov
mov
pop
sbb
mov
xor
sti
cmc
call
xor
bound
mov
loope
xchg
outs
js
inc
test
cmc
mov
stos
icebp
mov
sub
pop
adc
xchg
popf
in
call
fstp
xchg
les
aad
les
cmps
into
(bad)
jmp
jecxz
cdq
repnz
jmp
add
bound
mov
sbb
push
pop
outs
add
add
in
mov
inc
and
and
jle
movs
jno
test
mov
mov
aam
push
adc
aam
ret
push
push
add
cmp
jne
into
leave
add
xor
cld
mov
push
xor
loop
das
dec
adc
test
shl
xor
xchg
out
push
adc
mov
ret
test
add
sbb
mov
xchg
mov
mov
inc
push
(bad)
or
loope
daa
out
call
push
pusha
xchg
pop
sub
loop
les
xchg
hlt
test
(bad)
mov
mov
pop
adc
retf
inc
sar
add
popa
xchg
data16
and
(bad)
retf
sbb
pop
fsubr
xchg
clc
arpl
mov
push
arpl
sub
add
push
jnp
pushf
int3
jno
mov
popf
outs
into
dec
fwait
cmp
adc
jnp
ins
lods
sub
adc
push
loop
sti
nop
shl
jnp
jp
pop
ret
icebp
not
mov
test
fidiv
mov
push
mov
cmp
add
adc
push
inc
out
inc
outs
pop
or
mov
js
sub
inc
sbb
pop
retf
mov
(bad)
fs
and
in
or
int
leave
or
jb
or
sti
and
xchg
rcr
stos
(bad)
out
cmc
or
and
out
cmp
lahf
imul
xchg
xchg
stc
test
dec
and
mov
(bad)
mov
pop
mov
dec
les
jecxz
mov
or
test
cmp
retf
and
xchg
std
sbb
mov
scas
pop
mov
dec
lods
mov
mov
mov
mov
cs
xor
add
loopne
jge
rcr
imul
sbb
sti
loopne
and
adc
adc
pop
dec
mov
adc
test
jno
mov
add
and
cmp
jno
popa
mov
fnsave
xchg
outs
lock
ret
dec
std
mov
pop
(bad)
dec
aaa
int
aas
fsub
mov
pop
dec
sbb
int
sub
mov
les
mov
dec
sub
retf
sbb
jge
cmps
adc
aaa
repz
sub
push
jo
mov
dec
jecxz
add
imul
lods
sbb
sub
stos
cwde
add
inc
xchg
cs
and
jno
pop
call
jae
cdq
xor
mov
jne
inc
push
das
or
shl
fcomp
outs
adc
push
xor
xchg
ss
cmp
mov
scas
fisttp
es
sar
push
cmp
cmps
adc
popa
loope
test
js
dec
xchg
inc
(bad)
(bad)
mov
mov
inc
push
cmp
cmp
mov
pusha
adc
inc
lds
inc
push
fcomp
outs
daa
bound
dec
sbb
in
mov
or
mov
sbb
in
icebp
ror
xchg
mov
sub
mov
(bad)
sbb
cdq
push
out
xchg
out
xor
arpl
and
loopne
fwait
sahf
pop
pop
xor
test
scas
aas
(bad)
out
lock
mov
adc
fisttp
int
adc
pop
sub
das
fcmovb
retf
cmps
iret
mov
mov
xor
jne
sbb
inc
icebp
sub
fmul
movs
and
push
cs
sub
pop
mov
mov
movs
stc
cmps
jg
ror
xor
dec
or
push
jle
mov
pop
fdiv
je
and
cdq
sub
iret
into
cli
aaa
xlat
mov
dec
cmp
fidiv
or
mov
sub
retf
es
loopne
add
dec
and
in
mov
pusha
push
stos
cld
mov
or
push
add
out
and
jl
lahf
retf
xor
mov
cli
pop
ds
(bad)
jb
and
inc
aad
arpl
pushf
int3
mov
adc
ins
rcr
inc
mov
dec
cmp
(bad)
sub
or
jo
jecxz
mov
push
xor
fcom
aas
sub
out
mov
mov
aaa
and
arpl
inc
mov
loope
pop
movs
(bad)
jb
je
xor
push
aas
inc
lahf
shl
fwait
adc
jbe
add
mov
int3
pop
inc
sbb
cdq
shl
enter
popf
fimul
dec
in
mov
mov
mov
test
dec
sbb
jmp
dec
sub
in
lods
aaa
in
push
jmp
inc
fs
retf
adc
pop
retf
shr
jmp
xchg
sti
je
inc
(bad)
sbb
mov
cmps
mov
ja
test
lea
mov
mov
out
out
xor
push
cmp
adc
or
inc
loop
cli
ins
push
mov
mov
mov
add
je
dec
mov
dec
jae
pop
fwait
sub
cmp
enter
xchg
mov
cs
pop
adc
in
pusha
das
push
pop
pop
in
iret
nop
hlt
out
je
retf
js
outs
add
cmp
loope
sbb
ror
popa
and
iret
mov
jmp
lds
cs
sbb
popf
inc
les
call
(bad)
(bad)
lock
outs
lahf
pop
jmp
aaa
ret
xor
xor
jno
push
mov
out
movs
ds
pop
inc
and
push
dec
xchg
add
ja
mov
(bad)
rcl
xchg
inc
shl
pop
adc
push
stos
test
(bad)
mov
(bad)
js
pushf
adc
(bad)
cmps
pop
inc
nop
pop
fcmovne
pop
sub
rcl
cli
ins
jl
test
outs
inc
dec
loop
adc
xchg
jb
bound
add
clc
or
xor
mov
mov
call
fsub
icebp
sub
int
cwde
aad
push
jmp
imul
push
jno
fs
hlt
jae
pop
push
mov
push
cld
icebp
test
add
out
mov
dec
sbb
xchg
leave
int3
dec
xchg
dec
xchg
add
cmps
mov
scas
shr
and
stos
fsub
pop
(bad)
inc
sbb
fldcw
jl
int
ret
adc
dec
add
sub
nop
xchg
dec
or
and
pop
jnp
cmps
lea
or
or
(bad)
dec
add
cwde
imul
sub
inc
add
mov
or
cmps
push
movs
(bad)
mov
push
aaa
loopne
xchg
inc
(bad)
aad
sub
xchg
mov
sbb
lods
(bad)
sbb
pop
imul
fucomi
shl
movs
mov
sbb
push
jle
lds
pop
sbb
push
mov
push
test
js
lods
int
(bad)
(bad)
scas
out
loopne
push
sbb
cmp
mov
dec
dec
pop
jmp
mov
retf
outs
mov
mov
mov
mov
cmc
pop
push
ja
push
ret
lea
ret
sub
cmp
cmc
out
mov
sbb
cli
fst
mov
leave
jno
and
jp
sub
lahf
retf
push
add
fcomp
sahf
loopne
dec
loope
mov
popa
inc
pop
in
inc
retf
mov
cmp
cmp
data16
jecxz
test
sub
fwait
popa
out
sbb
add
jecxz
loop
jg
jp
add
dec
ds
xor
jo
jnp
sub
retf
push
lea
sbb
jnp
retf
sahf
jb
mov
dec
jle
jle
push
imul
push
loop
xor
pop
inc
xor
pushf
div
sub
jle
retf
add
jne
and
xchg
pop
xchg
mov
xor
das
xchg
dec
xchg
or
rcl
add
mov
xchg
test
imul
inc
out
sub
push
inc
daa
sbb
stos
add
xchg
(bad)
pop
and
(bad)
in
or
mov
pop
sub
inc
or
mov
or
cli
push
sar
mov
jmp
or
and
inc
lahf
hlt
xchg
mov
pop
mov
xlat
fmul
inc
and
mov
ins
ficomp
sete
xor
mov
popa
rcr
inc
push
sti
popf
aam
fs
jo
js
aad
pop
lds
push
push
sbb
retf
jge
addr16
call
cmp
adc
jge
imul
push
inc
(bad)
js
or
(bad)
mov
les
xchg
retf
mov
in
loope
cmp
ret
adc
jge
mov
sub
pop
loope
mov
sbb
fwait
inc
mov
cmp
(bad)
hlt
sbb
adc
mov
scas
jns
stc
dec
dec
sub
and
or
retf
in
in
fst
in
push
stos
icebp
out
enter
movs
icebp
cmps
rep
mov
hlt
mov
leave
(bad)
jmp
ficom
lea
jno
ror
push
cwde
push
loopne
call
rcl
push
pop
mov
pop
outs
js
sub
retf
dec
cmp
fwait
int
mov
xchg
das
into
push
xor
inc
into
rcr
cli
fcomp
pusha
jp
jne
dec
xor
into
test
lods
or
xchg
dec
dec
adc
inc
das
dec
retf
(bad)
cmp
fs
aad
xchg
mov
mov
loope
jecxz
ss
add
sti
call
push
in
(bad)
mov
dec
sbb
jg
ret
mov
cmps
and
in
mov
mov
test
cs
xor
enter
xchg
mov
or
les
cmp
jmp
ret
adc
mov
push
ins
pop
test
or
xlat
push
mov
loope
push
mov
das
mov
test
imul
sub
scas
ins
or
and
xchg
push
movs
pop
pop
add
stos
cwde
lock
(bad)
repz
les
fdiv
xor
mov
dec
movs
dec
pop
inc
jb
sbb
push
add
mov
stos
cld
outs
aam
cmc
lahf
push
dec
es
or
xor
je
pop
xchg
pop
dec
push
pop
adc
test
das
dec
ss
add
mov
pop
mov
xchg
mov
clc
sbb
and
push
lods
sbb
out
mov
test
or
div
popf
in
icebp
rcr
mov
call
out
pop
push
daa
sbb
adc
movs
ja
loop
or
add
jbe
push
inc
pop
push
xchg
push
sbb
sbb
not
fcomp
push
out
sub
pusha
or
outs
sub
inc
cmp
ret
aam
dec
ds
adc
inc
jge
out
ds
dec
fst
xor
sub
(bad)
lds
inc
mov
jge
loop
cmps
inc
jl
mov
push
cmps
jnp
lods
mov
inc
test
xchg
aas
add
xor
mov
push
in
jmp
mov
or
push
mov
or
stc
xor
fcmovne
sub
adc
or
xchg
leave
xchg
arpl
xchg
ret
push
fld
test
ret
mov
pop
adc
push
cmp
mov
popf
repnz
push
adc
dec
push
fwait
shr
adc
pop
ret
repnz
cwde
cwde
mov
jne
xor
mov
les
pusha
push
mov
push
push
fiadd
cmp
dec
out
and
mov
pop
sbb
xchg
neg
mov
test
jmp
call
pusha
repnz
cmp
sub
mov
dec
xor
sbb
xchg
(bad)
jo
call
ins
ss
mov
test
adc
push
jle
dec
mov
pop
out
loope
jb
fcos
cmp
jne
mov
dec
sbb
push
in
xor
mov
out
(bad)
jmp
cmp
popa
add
mov
in
(bad)
sbb
outs
cmp
push
cwde
push
addr16
mov
xchg
cmp
std
and
dec
push
inc
int
stos
(bad)
cmp
jne
sar
pop
xor
sti
into
mov
adc
rcl
ds
sbb
test
mov
xor
sub
scas
std
push
loop
mov
pop
push
and
lahf
push
sub
outs
dec
scas
sbb
adc
or
into
fst
outs
sub
lds
push
mov
xchg
ins
retf
push
into
test
mov
in
adc
movs
mov
xor
cmp
int
mov
lods
sbb
cmp
dec
neg
mov
push
push
std
mov
pop
or
das
imul
or
mov
pop
xchg
xor
daa
inc
inc
ret
inc
push
mov
or
add
mov
mov
mov
scas
jae
loopne
cld
cmp
arpl
pop
add
es
movs
aas
pop
ret
mov
mov
cmp
mov
js
mov
xchg
idiv
cld
and
(bad)
cdq
outs
retf
xlat
mov
stos
scas
retf
stos
xor
pop
dec
cmp
adc
fstp
cmp
mov
cmp
repnz
das
(bad)
fstp
push
ds
xchg
lods
xlat
adc
ins
sbb
adc
xchg
cmc
ins
adc
addr16
xchg
inc
inc
or
out
push
xchg
je
and
shl
fcom
jecxz
popa
aaa
pop
repz
push
cmp
adc
mov
and
adc
adc
pop
je
jo
aaa
jmp
mov
lahf
data16
cmp
mov
test
loop
pushf
mov
and
fnstsw
xchg
sbb
sar
call
data16
add
out
dec
int
sti
mov
repz
sub
imul
ja
(bad)
xchg
and
call
dec
cwde
stc
mov
int3
je
rol
lock
dec
add
test
sub
mov
aam
ins
jae
mov
scas
xor
nop
adc
sbb
and
mov
pop
bound
cmp
iret
aad
inc
mov
ficomp
cmc
fidivr
jmp
mov
pop
lahf
(bad)
adc
sbb
arpl
jnp
ja
pop
in
cmp
sub
xor
mov
enter
cli
loop
cs
xor
xchg
pop
movs
jl
jo
sbb
mov
inc
dec
and
mov
mov
push
das
js
sahf
mov
push
xchg
(bad)
mul
imul
dec
enter
xchg
push
and
inc
cmps
shl
adc
and
outs
lods
pop
dec
cmp
(bad)
out
js
cmp
inc
pop
inc
and
add
xchg
pop
xor
test
mov
(bad)
in
movs
inc
sbb
and
int3
sbb
jl
(bad)
cdq
and
add
nop
repz
ror
imul
cmp
and
dec
(bad)
out
pandn
mov
stos
sbb
addr16
fstp
cwde
sbb
and
fild
sub
leave
xchg
sti
adc
xor
adc
jp
loop
ja
cmp
adc
test
mov
cmps
pop
xor
mov
ins
mov
aam
ss
aad
mov
sub
mov
sub
pusha
inc
mov
std
inc
xchg
out
jl
add
test
mov
pop
pop
mov
hlt
cmc
les
pushf
and
(bad)
sub
mov
xchg
popa
xor
ds
out
fisttp
out
mov
out
imul
cmp
aam
test
xor
mov
fimul
ins
cdq
stos
cmp
icebp
adc
test
das
popf
xor
mov
mov
dec
cmp
xchg
inc
mov
data16
int
add
sub
jne
call
add
or
cmp
out
icebp
cmc
into
jl
dec
adc
lods
mov
outs
inc
and
jns
movs
out
sub
addr16
jae
fwait
icebp
xchg
js
stos
mov
add
xchg
lahf
or
sub
inc
cmp
push
xchg
lods
inc
pop
scas
(bad)
mov
jmp
mov
adc
or
adc
in
out
cmp
imul
mov
adc
mov
ror
dec
cmp
cld
es
mov
nop
in
push
push
les
ins
out
mov
repz
test
inc
test
sbb
daa
inc
or
aas
push
add
test
push
pusha
pop
mov
fisubr
pop
mov
into
mov
add
call
dec
and
pushf
or
nop
jmp
test
(bad)
mov
out
dec
cmp
mov
lahf
sbb
int3
ja
sbb
jg
jg
sbb
loope
lds
mov
cmp
or
xor
jo
pop
pop
rcr
popw
sbb
adc
retf
and
sbb
pop
outs
cdq
jne
pop
je
inc
lds
or
add
stos
adc
or
inc
sqrtps
ins
inc
(bad)
ja
mov
jle
xchg
sbb
dec
popw
cld
cmp
push
imul
movs
cli
ret
imul
mov
push
sub
addr16
push
pop
or
push
mov
jnp
out
movs
jae
stos
push
cmps
daa
mov
sbb
pop
out
inc
sti
dec
cld
jae
mov
add
retf
es
out
cmp
xor
in
test
xchg
call
push
enter
(bad)
movs
retf
or
imul
in
add
inc
or
add
xchg
dec
xor
cmp
test
sub
call
jbe
in
int3
(bad)
xchg
clc
jns
jae
xor
add
xchg
push
add
mov
cmp
loop
fcom
cmp
cmp
test
cdq
nop
jne
clc
pop
xchg
jb
dec
retf
push
(bad)
cmp
test
call
pop
fnstcw
sub
enter
dec
xlat
inc
stos
jno
aaa
out
jo
pusha
aad
or
dec
fmul
ja
imul
popf
push
cmp
push
aam
out
add
fldenv
in
sbb
mov
xchg
jle
nop
or
hlt
daa
adc
add
pop
scas
jmp
sbb
icebp
jnp
ins
scas
fisttp
sti
daa
sar
outs
(bad)
push
fimul
inc
cmps
inc
mov
ja
or
add
out
pop
mov
mov
inc
mov
cmp
loopne
clc
ds
repz
dec
aam
ret
xor
rcr
sub
pop
(bad)
dec
mov
es
sbb
push
test
or
and
sti
xor
ins
(bad)
jg
jns
in
add
pop
mov
xchg
xor
and
pop
clc
mov
jecxz
mov
iret
es
dec
nop
jno
test
into
sub
es
cs
push
and
ret
xor
push
(bad)
or
push
stos
imul
sti
sub
pop
mov
and
push
mov
dec
mov
outs
cmp
rol
sahf
ins
lods
lods
call
data16
xchg
icebp
dec
xchg
push
inc
test
dec
sbb
retf
xor
pop
mov
(bad)
aaa
ror
xchg
jb
jl
push
lods
jo
shl
not
fnsave
inc
test
pusha
mov
in
cld
push
xor
jmp
popf
ins
fild
add
cmp
sbb
add
fcom
popf
popf
data16
test
sub
out
mov
xchg
inc
mov
repz
and
loope
adc
call
ret
bswap
xor
icebp
pop
mov
into
cmp
xor
dec
mov
outs
nop
jne
loope
out
cmp
int
push
or
ja
out
les
adc
outs
stos
ins
mov
imul
addr16
pop
jmp
loopne
adc
pop
(bad)
ss
daa
les
int
pusha
cmps
inc
test
rcr
xchg
inc
xchg
mov
xlat
xchg
jo
ficom
nop
xchg
imul
xchg
jg
mov
push
push
push
clc
xor
inc
push
mov
shl
cmc
pusha
fdivr
hlt
sub
dec
mov
dec
fnstcw
pop
cmp
cmc
xor
pop
loopne
fdivr
pop
(bad)
pop
lea
jl
das
call
mov
lods
inc
mov
push
cmps
jl
or
adc
lods
outs
sbb
inc
xlat
inc
rcl
imul
xchg
cmc
das
push
int3
sub
pop
ret
add
inc
xchg
test
es
cmp
outs
mov
mov
int
pop
adc
sub
sbb
push
test
sbb
mov
iret
or
das
mov
jge
ds
ins
fnsave
hlt
inc
retf
pushf
in
inc
mov
pop
mov
sbb
mov
inc
mov
loopne
out
aam
out
ja
dec
or
sub
scas
cwde
inc
mov
push
repnz
aaa
icebp
and
or
sbb
sub
xchg
mov
inc
scas
jge
cli
pop
xchg
aam
loope
xchg
ins
test
inc
add
test
aas
enter
jl
push
mov
mov
xchg
jno
add
cmp
rol
pop
sbb
ret
push
jmp
push
fmul
inc
aam
lds
aad
sbb
or
adc
sub
pop
xor
inc
mov
mov
push
lds
or
je
div
push
push
push
pcmpgtd
push
loope
mov
jge
jo
dec
cmps
aad
jp
stos
mov
sub
xor
and
stc
xor
ret
aaa
cmp
(bad)
pop
movs
test
push
sbb
addr16
fild
or
cmp
add
or
xor
push
ret
sbb
adc
xor
arpl
xchg
ins
mov
xchg
bound
xor
pusha
movs
test
and
adc
in
not
cmps
call
mov
ins
les
sbb
xor
xor
push
mov
mov
cmc
mov
and
into
push
mov
cmp
bswap
cs
jb
sbb
xor
pop
lods
cwde
addr16
sbb
cmp
xor
imul
push
test
push
mov
movs
mov
ins
test
cwde
call
stos
mov
mov
xchg
xchg
cmp
sub
pop
or
ins
mov
out
jne
pushf
xchg
xchg
jl
xchg
repnz
mov
jmp
lods
cwde
into
pop
fistp
cmc
jbe
arpl
fist
in
dec
(bad)
and
jo
or
push
aad
mov
pop
clc
ds
leave
imul
in
sub
aaa
sar
mov
repnz
xlat
cmp
jno
and
pop
cmps
inc
xchg
je
xor
add
lds
sahf
lahf
jl
inc
mov
ds
rol
out
xor
pop
not
jecxz
(bad)
sub
cli
push
shr
into
or
xor
adc
dec
icebp
push
fsub
adc
das
jne
add
(bad)
dec
into
add
push
fdiv
gs
pop
mov
xor
in
fidivr
out
push
push
jecxz
in
mov
int
push
(bad)
or
icebp
xor
adc
call
pushf
imul
sbb
inc
(bad)
push
mov
(bad)
xor
es
shl
or
sbb
xor
push
xchg
inc
test
test
rcl
loopne
cld
dec
stos
xchg
inc
and
sbb
adc
lahf
dec
mov
sar
dec
mov
ja
push
xchg
das
stc
inc
mov
cmp
sub
aaa
dec
test
sub
add
sub
aaa
adc
push
shr
retf
xor
sbb
inc
mov
rol
sub
lods
arpl
sbb
(bad)
xor
xlat
sub
(bad)
pop
mov
test
aam
in
adc
sub
or
push
mov
mov
inc
mov
das
or
sub
dec
aad
xlat
push
mov
ja
sbb
dec
call
loope
(bad)
js
lahf
jle
out
ds
cmp
and
sub
lods
jg
or
aas
rol
ins
fsub
cmps
mov
cmps
inc
mov
mov
xlat
push
mov
dec
leave
push
xlat
push
imul
dec
mov
jl
pop
cmps
mov
xchg
jo
inc
fisttp
mov
scas
shl
jo
js
imul
jle
cmp
jg
inc
retf
dec
mov
cmp
pop
fisttp
retf
xor
push
daa
adc
pop
push
call
popa
scas
pusha
mov
xchg
inc
fisub
retf
sub
pop
aas
add
sbb
inc
fdivr
mov
fidivr
push
stc
pop
mov
pop
xor
aad
mov
jns
add
adc
mov
sbb
cs
push
sbb
adc
les
add
mov
dec
ror
fcomp
arpl
mov
dec
mov
scas
cmc
jb
test
lea
sahf
jno
fisubr
sub
adc
and
pop
fisttp
sti
daa
or
in
retf
cwde
fiadd
sbb
pop
iret
adc
daa
adc
and
or
sub
es
lock
cld
adc
div
add
ins
mov
rcr
xchg
jns
test
or
sbb
dec
mov
add
xor
clc
sub
xor
adc
sbb
sub
push
shl
outs
in
adc
in
ficomp
pop
mov
cmps
jo
fwait
pushf
jns
fnstenv
push
mov
std
jo
fwait
jnp
jbe
push
mov
das
in
sub
ds
mov
mov
mov
rcl
outs
(bad)
xor
(bad)
cmp
push
and
loop
mov
pop
push
stc
pop
test
inc
shl
sti
pop
or
in
inc
rcr
cmp
(bad)
aas
loopne
test
ja
fs
xlat
xor
or
add
or
aam
out
jns
or
cmp
das
sbb
or
es
mov
dec
repz
mov
inc
xchg
aam
mov
xchg
jge
ss
movs
xchg
bound
add
loop
shl
inc
movs
fcomp
push
stos
xchg
fldenv
imul
or
arpl
push
int
icebp
push
adc
add
unpckhps
xor
icebp
xor
pop
xor
shl
rcl
cmp
push
enter
mov
lds
xchg
push
inc
fimul
lods
mov
test
sbb
das
out
aam
and
adc
xor
std
push
test
fsubr
jnp
ss
pop
adc
cmc
pop
(bad)
push
les
push
rol
loop
mov
ret
sub
dec
fsubr
loope
(bad)
retf
jo
push
stos
lods
jnp
mov
xlat
mov
hlt
push
(bad)
xor
sub
cmp
cmp
loope
sbb
js
xchg
mov
dec
mov
jne
cmp
daa
sbb
mov
fsub
ins
mov
jmp
adc
and
cmps
test
nop
addr16
ds
dec
mov
mov
or
loopne
imul
(bad)
ds
cmc
dec
xor
addps
pop
mov
inc
rcl
xor
push
jmp
mov
loopne
hlt
push
cmps
xchg
je
ja
mov
ret
and
and
jecxz
(bad)
push
mov
jle
ins
int
fdivr
and
les
ror
xchg
call
jecxz
lds
icebp
jbe
push
les
into
lahf
mov
nop
ret
ss
out
rcr
jg
data16
and
arpl
mov
scas
jne
jp
in
dec
movs
call
mov
test
bound
loope
test
mov
fstp
aas
jmp
jmp
or
dec
fimul
je
xchg
jne
cmp
push
aad
add
in
or
dec
mov
mov
mov
outs
lods
popf
pusha
adc
adc
cmp
sub
ss
xchg
jb
icebp
push
mov
xchg
jns
sub
(bad)
rcr
fdiv
in
sub
dec
test
jge
fwait
jne
inc
aad
(bad)
push
add
jmp
cmp
sti
pop
mov
pop
lods
outs
(bad)
fst
out
sbb
clc
and
test
xchg
ficom
jns
jge
std
push
fnstenv
pop
sbb
mov
mov
cmc
cmp
dec
test
aaa
stc
jae
mov
gs
xor
dec
mov
inc
cmc
mov
push
adc
push
mov
in
mov
scas
push
mov
dec
lds
mov
jno
dec
mov
push
call
cwde
ins
stos
jno
call
jne
dec
mov
adc
and
adc
inc
fbld
sti
cmp
sbb
sbb
mov
sub
and
sub
adc
and
push
mov
retf
pop
iret
cmp
dec
ds
and
push
scas
clc
dec
mov
ja
xor
movs
xchg
inc
lods
dec
mov
call
jecxz
cdq
jno
xchg
lea
(bad)
aam
out
jo
jo
lahf
js
scas
inc
lods
jg
mov
adc
sub
fdivr
stc
sub
sbb
xchg
sbb
retf
shl
in
in
sub
mov
mov
pusha
lods
inc
fidivr
in
push
ror
jae
pop
mov
cmp
push
scas
dec
mov
cmp
push
rcr
xchg
sub
or
sbb
inc
test
dec
mov
or
ror
mov
adc
in
pop
mov
mov
xor
in
push
(bad)
cmp
mov
xchg
imul
repnz
and
mov
(bad)
outs
stos
imul
call
les
out
mov
mov
out
retf
cmp
xor
std
inc
mov
pushf
jo
loope
scas
inc
mov
sahf
jb
out
sub
jns
lahf
mov
add
ret
push
mov
shr
sar
loopne
jmp
push
fdivr
std
dec
cmps
pusha
movs
test
dec
mov
call
cmp
mov
out
daa
adc
or
and
jge
ds
inc
mov
sbb
jnp
xchg
pushf
xchg
js
ds
aad
sbb
popf
cdq
dec
(bad)
dec
mov
(bad)
ss
xchg
pusha
mov
push
test
jbe
out
mov
and
or
ins
lea
xchg
jo
jne
cmp
cs
adc
xchg
xchg
jge
ss
(bad)
cmp
sub
add
xor
dec
lods
mov
les
jmp
retf
aaa
dec
test
fdiv
in
mov
sub
adc
push
sbb
iret
and
inc
mov
and
jecxz
mov
xlat
xor
sub
push
xor
movs
inc
lea
stos
movs
dec
xchg
cs
jmp
test
dec
and
fst
and
loopne
test
pop
sbb
and
dec
cmp
loope
loope
sbb
xor
into
aaa
adc
fisttp
jecxz
(bad)
sub
xchg
mov
sub
adc
xlat
xor
or
sub
and
jno
add
dec
iret
cmp
sub
dec
mov
inc
mov
(bad)
pop
scas
jp
jge
pop
lock
xchg
xchg
ins
frstor
femms
ror
retf
mov
data16
or
sub
in
arpl
das
sbb
jg
xchg
cdq
push
fst
cs
sub
xor
xchg
jne
jo
cmps
mov
jne
cs
sub
cs
xor
ret
pop
stos
outs
sbb
and
push
cmc
add
push
xchg
js
push
lods
popa
or
lods
dec
aad
stc
xor
aas
sbb
vmwrite
dec
add
outs
lods
jo
push
sbb
sub
fidiv
pop
in
inc
rol
or
and
push
std
jae
popa
shr
out
psllw
and
aad
(bad)
call
lods
test
sahf
jle
mov
pop
int
(bad)
or
sub
add
pop
fisubr
sar
dec
or
int
in
adc
xor
mov
imul
sub
loopne
add
dec
mov
outs
mov
cwde
jg
xchg
jnp
loope
into
cmp
cld
xor
popf
fs
arpl
test
mov
jbe
mov
mov
sbb
and
and
dec
and
push
sbb
add
(bad)
cs
jmp
outs
cmps
nop
cmc
dec
cmps
popf
inc
repz
dec
mov
and
mov
push
xchg
mov
in
dec
mov
popf
jl
jae
sub
ds
les
xchg
jb
add
mov
inc
mov
add
xchg
mov
mov
ss
mov
lea
popa
fild
jbe
out
enter
ror
push
leave
or
push
mov
xlat
dec
(bad)
outs
ficomp
cwde
arpl
add
adc
retf
call
jge
xor
cmp
pop
lea
inc
stos
jge
or
sub
es
cld
mov
mov
fistp
sbb
mov
jg
xchg
jno
xchg
repnz
xor
int
loope
mov
loope
(bad)
pop
scas
js
(bad)
(bad)
inc
leave
add
or
icebp
xor
call
in
and
pop
mov
(bad)
sub
add
sbb
ja
cs
sub
hlt
sub
nop
mov
jge
daa
iret
daa
or
xor
inc
outs
mov
movs
sbb
mov
sub
push
shr
int
cmp
push
clc
dec
(bad)
and
mov
fidivr
adc
xchg
mov
adc
aaa
icebp
dec
mov
mov
mov
jmp
repz
pop
xor
xchg
jge
data16
push
ins
xor
and
les
mov
mov
add
add
add
jle
jae
and
adc
add
or
push
inc
and
push
into
dec
stc
push
enter
and
cmps
fs
cmp
dec
scas
imul
hlt
push
mov
jmp
test
mov
(bad)
dec
fiadd
retf
and
daa
test
xlat
dec
mov
lds
cmp
push
pop
data16
mov
outs
mov
jle
and
mov
rol
cmp
add
outs
(bad)
ds
pop
sar
jecxz
lahf
jo
xchg
jle
jmp
inc
movs
arpl
das
les
(bad)
push
aam
call
cmps
jns
add
xor
push
adc
sub
xchg
lea
mov
addr16
mov
(bad)
in
pop
mov
fwait
xchg
hlt
sub
dec
aad
sbb
movs
jbe
(bad)
call
pop
mov
mov
icebp
sub
or
mov
mov
dec
mov
ins
mov
mov
bound
push
mov
xlat
dec
fimul
cmc
mov
mov
sub
fild
jge
fwait
push
fist
or
xor
movs
gs
aaa
out
or
adc
cmp
mov
sar
adc
and
xor
in
aaa
inc
fistp
sahf
jle
mov
cdq
cwde
pushf
xchg
(bad)
and
add
add
dec
mov
cmp
pop
fmul
dec
rcr
push
push
out
lds
jmp
sub
pop
cmp
inc
mov
dec
shl
enter
and
in
pop
mov
cwde
gs
xchg
add
fdiv
in
sbb
adc
pop
test
mov
mov
mov
jg
push
fsubr
jns
outs
ror
pushf
inc
(bad)
or
sbb
dec
fdivr
ret
aas
cmc
push
mov
mov
loop
lods
jae
jns
pusha
xor
stc
add
stc
and
arpl
push
mov
sbb
pop
adc
sbb
sbb
loope
(bad)
(bad)
in
xor
pop
mov
sahf
(bad)
xlat
and
inc
test
popf
ja
aaa
add
add
sub
dec
aad
ins
mov
aam
(bad)
and
jmp
adc
pop
mov
icebp
mov
adc
sti
and
nop
push
cwde
xchg
sub
popa
fdivr
out
xor
sub
out
xor
dec
fist
sar
sub
adc
adc
jge
dec
mov
sbb
cmp
sbb
jmp
sub
or
dec
aad
fidivr
int
not
xor
aas
adc
cmp
sbb
sub
cmp
lds
xor
cmp
push
ror
jecxz
mov
xor
push
fsub
std
pop
call
lods
and
mov
mov
push
call
dec
mov
jb
arpl
das
out
cs
rcr
imul
in
or
xor
data16
sub
dec
(bad)
aam
(bad)
sub
inc
movs
popa
retf
pop
cmps
call
inc
mov
arpl
(bad)
hlt
xchg
lea
add
pop
in
jmp
imul
cmps
dec
mov
inc
adc
pop
mov
inc
xor
sub
cvttps2pi
sbb
fstp
mov
sahf
dec
(bad)
and
dec
mov
test
xchg
jle
rol
xor
sub
and
sub
loop
or
pop
mov
les
cs
add
jmp
pop
mov
xchg
xor
jbe
xchg
mov
cld
dec
mov
popa
stos
ins
stos
popa
aad
out
dec
test
add
out
mov
jae
pop
lods
mov
xchg
ins
mov
mov
xchg
jno
bound
adc
sub
daa
cmp
repnz
lock
sbb
and
call
xor
and
jp
sub
cmp
stc
dec
mov
jmp
push
out
cmp
out
sub
rol
or
call
mov
push
cmp
inc
xchg
cmp
add
and
cmc
js
rcl
cdq
xchg
cmps
nop
xchg
jnp
cdq
xchg
inc
push
add
inc
and
lock
ret
fisub
lds
xchg
inc
iret
jno
gs
sub
xor
imul
scas
dec
(bad)
jg
mov
imul
call
mov
popf
inc
scas
pushf
inc
mov
mov
add
retf
xor
jae
pop
out
cmp
add
xchg
push
add
pusha
pushf
(bad)
out
push
xchg
mov
adc
or
nop
in
jns
ror
in
mov
hlt
dec
(bad)
bound
mov
mov
add
push
cmp
aaa
outs
pop
or
xor
rcr
push
ins
ins
sar
mov
adc
mov
jle
inc
iret
cmp
xor
(bad)
adc
popf
ret
mov
enter
and
xchg
xor
mov
mov
arpl
test
jbe
fnstcw
not
jns
push
leave
ja
mov
and
in
out
enter
inc
in
and
mov
pop
adc
inc
in
pop
sti
imul
mov
adc
sbb
call
shl
xchg
sbb
call
dec
mov
jmp
mov
dec
lea
xchg
stc
inc
inc
nop
push
and
mov
(bad)
and
div
arpl
ins
aad
and
inc
xchg
or
pusha
sub
add
sub
add
xchg
jmp
and
sbb
fidivr
mov
jl
jg
aam
xchg
or
push
std
outs
retf
(bad)
mov
cmp
stc
into
push
retf
rcr
mov
jbe
xor
in
fstp
push
sub
mov
stos
call
test
mov
pop
dec
pop
call
outs
ss
pop
fmul
call
std
leave
inc
imul
sub
pop
or
mov
mov
xchg
jae
js
mov
hlt
outs
mov
(bad)
push
pop
jmp
scas
icebp
mov
outs
push
bound
in
shr
loop
movs
in
adc
dec
das
(bad)
jmp
adc
fnsave
mov
int3
mov
daa
dec
inc
xchg
and
setge
not
inc
mov
push
mov
out
cmp
sbb
mov
sub
mov
pop
push
push
leave
out
sub
add
fdivr
mov
mov
mov
(bad)
jae
stc
push
imul
jmp
call
pop
lods
push
ds
jmp
cmc
fs
fadd
add
scas
in
cmps
or
dec
and
jmp
pop
dec
cmp
dec
push
sub
dec
ins
std
icebp
es
xor
jo
pop
sub
xor
pop
mov
out
and
dec
(bad)
mov
ss
sub
adc
(bad)
rcl
inc
sub
data16
test
cmp
jo
sahf
or
arpl
test
arpl
push
xor
lahf
mov
mov
dec
fwait
repnz
dec
and
or
cmp
in
xchg
ins
jmp
stc
test
bound
xor
aam
mov
sahf
and
push
int3
mov
inc
data16
dec
inc
es
cmp
in
ja
add
push
push
jb
repz
mov
mov
leave
mov
xor
cmp
(bad)
xchg
test
jg
and
in
hlt
cmp
imul
stc
scas
and
inc
jmp
xchg
sahf
xchg
retf
call
and
jmp
jmp
xor
xor
repz
scas
jg
sbb
adc
ds
dec
mov
aas
(bad)
aad
sub
ds
sbb
(bad)
retf
jecxz
jp
jne
push
push
mov
xchg
xchg
mov
mov
mov
dec
cmp
jg
in
movs
push
sub
lods
lods
shl
push
pushf
push
mov
adc
nop
xor
xor
sbb
lds
(bad)
jno
or
sbb
jae
sbb
test
pop
fadd
mov
pusha
pop
movs
cmp
dec
jp
push
inc
loopne
and
shr
xlat
adc
inc
fstp
mov
jecxz
out
rcr
xchg
enter
sbb
imul
xchg
rcr
bound
retf
popf
xchg
xchg
les
outs
out
or
fild
loope
push
sbb
push
fisttp
pushf
idiv
es
adc
cmps
rep
xchg
fldenv
mov
pop
mov
in
mov
mov
mov
rcl
mov
jo
test
fcmovne
loope
mov
in
sbb
lahf
repnz
enter
(bad)
addr16
mov
jne
xlat
ficomp
mov
pop
shr
fdivr
(bad)
or
cs
jbe
mov
fcmovb
inc
ss
xchg
or
mov
inc
jnp
fs
xlat
(bad)
in
sbb
jbe
enter
out
ret
xchg
das
outs
cmp
jnp
mov
jo
adc
sub
mov
xchg
pop
dec
adc
inc
(bad)
addr16
dec
jmp
fs
jg
sbb
pop
cwde
adc
jge
mov
xchg
in
in
aam
xor
push
cs
or
sahf
(bad)
cmp
mov
add
pop
lea
inc
sub
mov
std
in
ds
fimul
jge
inc
cmp
test
add
push
push
xchg
fistp
lods
mov
outs
jmp
in
inc
dec
mov
stc
add
sbb
ret
test
aad
cld
ret
or
cli
push
add
arpl
out
dec
dec
ins
neg
(bad)
xchg
xchg
mov
test
jae
jbe
es
stc
or
je
test
and
cmp
mov
adc
adc
aaa
and
jbe
mov
fwait
leave
ins
mov
lock
mov
call
shl
push
ins
mov
mov
fucomp
jmp
mov
mov
enter
ja
mov
jp
fcmovnbe
leave
sbb
or
fnstcw
rol
mov
mov
cmp
es
dec
mov
add
sub
movs
sub
loope
lahf
xor
pop
sub
mov
add
pop
mov
sub
nop
shl
ins
jge
ret
lock
xchg
ins
mov
mov
ffree
inc
mov
ficomp
mov
inc
icebp
dec
mov
jmp
in
imul
cld
pop
(bad)
dec
(bad)
or
rcr
(bad)
loopne
inc
mov
mov
mov
cmps
xchg
addr16
xchg
add
ds
call
push
lods
push
pop
pop
iret
and
dec
mov
pusha
mov
xchg
scas
bound
aad
test
adc
rcl
rcr
cvttps2pi
inc
add
push
(bad)
aaa
add
outs
push
sub
test
je
jp
movs
popa
add
mov
add
cmp
jmp
ins
fcom
repnz
or
je
hlt
inc
dec
inc
(bad)
aaa
fwait
push
add
pop
cmp
iret
imul
test
jo
aas
mov
mov
ins
gs
fcom
call
push
mov
mov
pop
sbb
sub
leave
mov
push
mov
imul
dec
std
ja
mov
or
pop
mov
sar
call
out
jbe
sar
sbb
xlat
pop
into
jl
sbb
mov
jmp
call
loopne
pop
ins
cli
and
inc
xor
in
loop
int
mov
loope
inc
addr16
pop
sub
jae
mov
sub
dec
stc
add
pushf
das
add
dec
jmp
imul
pop
jp
add
int
xor
push
data16
jb
mov
jo
(bad)
inc
jle
ss
test
jmp
adc
pushfw
or
jae
sbb
mov
loop
dec
(bad)
addr16
sub
pop
mov
mov
fcmovbe
js
je
jne
jl
push
mov
popf
leave
loope
mov
inc
and
cmp
jnp
sbb
push
inc
in
pop
add
cmp
adc
in
push
call
repnz
scas
adc
call
imul
mov
lea
sti
imul
pop
es
lods
mov
fistp
hlt
push
mov
out
retf
mov
imul
xor
mov
mov
aam
xchg
push
dec
sub
jnp
pop
call
outs
xor
aaa
and
jnp
jnp
dec
gs
add
add
pop
cmp
adc
cmc
push
mov
cmps
pusha
mov
or
mov
pop
shr
mov
ds
mov
and
sub
mov
dec
stos
push
sahf
push
aad
pop
int
or
cmps
jecxz
inc
fist
xor
push
in
mov
cwde
or
or
pop
push
and
sub
jle
fbld
mov
test
ret
ins
fchs
xor
retf
retf
fs
or
repnz
inc
inc
data16
mov
push
in
cwde
clc
gs
imul
ficomp
cli
push
ja
sbb
aam
ds
mov
out
jnp
(bad)
aas
aam
icebp
or
sbb
xchg
push
mov
or
imul
jnp
les
inc
fsubr
xor
jae
lods
mov
in
popf
(bad)
add
mov
test
retf
add
cmp
into
jmp
mul
lock
mov
or
jns
test
push
mov
mov
xlat
dec
adc
xor
sub
or
sub
sub
stos
jp
and
dec
movs
mov
jmp
push
ja
inc
sub
jmp
and
imul
jb
ss
ins
add
mov
pop
jecxz
popa
(bad)
xor
jbe
leave
dec
test
std
cmp
fwait
dec
mov
xchg
inc
jnp
stos
stos
push
js
fisubr
stos
enter
js
rcr
mov
cmp
xor
dec
xor
xchg
nop
dec
jno
stos
sbb
or
dec
call
pop
add
jmp
inc
loopne
lahf
out
ss
cmp
fmul
cdq
adc
(bad)
mov
clc
(bad)
mov
lahf
js
pop
ds
aad
adc
pop
mov
jmp
pop
xchg
fisubr
jae
push
jbe
sbb
adc
popf
in
xchg
mov
mov
xchg
jmp
lods
add
iret
inc
push
inc
(bad)
sbb
jl
xor
cmp
sar
mov
rcr
scas
sub
loopne
adc
ror
rcr
bswap
mov
jne
pop
mov
outs
ja
xor
iret
xlat
cmc
mov
jne
in
div
pop
stos
paddsb
add
call
adc
jp
pop
ficom
(bad)
pop
mov
movs
xor
add
cs
int3
jae
cli
pop
adc
fadd
loop
fdiv
xchg
cld
test
pop
and
mov
js
iret
and
sbb
aad
add
mov
jns
dec
daa
das
iret
jg
or
and
repz
out
xor
ins
cmp
mov
aad
popa
scas
imul
nop
(bad)
xor
add
test
sti
mov
aas
xchg
and
(bad)
dec
xor
cmp
mov
jno
inc
add
dec
pop
mov
jb
fcomp
sbb
jmp
popa
(bad)
jle
scas
repnz
lods
mov
je
mov
xor
mov
out
sahf
fidiv
outs
sub
cli
movs
add
stc
add
pop
daa
add
cmp
dec
push
rcr
mov
pop
jp
mov
cmps
ds
fbstp
icebp
clc
jle
push
xchg
ret
jno
adc
adc
xor
or
retf
add
xor
add
inc
aam
xchg
xchg
addr16
jmp
out
mov
or
inc
or
cmp
sbb
jns
retf
xchg
and
int3
jl
scas
cmp
pop
in
pop
adc
add
inc
retf
mov
cmp
(bad)
mov
mov
ror
neg
in
inc
xbegin
dec
iret
jb
push
mov
nop
outs
enter
nop
pop
or
jno
scas
jne
popa
cmp
or
add
ret
inc
dec
nop
paddsb
ins
dec
icebp
in
mov
mov
outs
out
enter
cmp
lock
dec
aas
and
mov
repz
dec
and
xlat
jle
callw
es
lahf
out
in
retf
cmp
push
inc
es
sahf
out
add
scas
iret
(bad)
mov
repnz
retf
loop
aad
adc
cmp
imul
scas
pushf
and
fs
sbb
dec
and
xor
rcr
push
cli
sti
inc
and
sub
pop
(bad)
leave
sbb
pop
jnp
cmps
dec
jmp
mov
pop
add
and
out
movs
in
loope
scas
pop
mov
ja
jmp
shl
mov
mov
icebp
sub
lock
addr16
repz
lds
out
and
inc
call
sub
fild
cwde
repz
cmp
lahf
mov
mov
int
in
inc
or
inc
ror
sub
adc
mov
cmp
retf
xor
les
inc
rol
and
and
or
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
xchg
push
add
stc
xchg
fstp
out
mov
retf
pop
jmp
sub
jno
test
sahf
sar
sub
and
dec
xor
pop
pop
dec
pop
sub
inc
adc
cs
sbb
ret
mov
je
in
cmp
pop
adc
pop
mov
mov
lods
iret
test
sahf
fsub
test
dec
jecxz
sbb
inc
push
sbb
sahf
leave
mov
mov
dec
jecxz
adc
xor
inc
js
mov
shr
add
mov
mov
lds
inc
adc
aaa
or
xor
aaa
xchg
bound
ret
arpl
cwde
into
(bad)
out
int
sbb
jmp
fdivr
and
fsub
test
repz
push
cmp
push
and
ds
out
les
rep
sub
inc
push
jmp
outs
movs
rcl
out
mov
push
mov
shr
cmp
or
sti
sahf
iret
push
add
and
mov
xor
mov
nop
inc
int3
xchg
fwait
test
sar
loope
clc
popa
cmp
out
shl
pop
int
rcr
in
stos
clc
jp
imul
fcomp
add
or
push
aam
mov
pusha
add
ss
xor
xor
sti
addr16
jb
es
adc
pop
aas
jl
(bad)
sub
cwde
scas
ror
stc
mov
sar
and
int
xor
xchg
xor
std
mov
mov
out
sbb
scas
call
in
outs
add
inc
sbb
xor
cmp
xchg
rol
clc
xchg
fisubr
pop
jb
pop
mov
or
jns
add
ja
mov
pop
sub
sbb
and
pop
push
retf
mov
or
hlt
mov
pop
sbb
pop
loopne
push
js
and
das
cmp
dec
or
push
jmp
mov
mov
mov
jo
sub
shr
repz
and
cmp
out
(bad)
popa
jecxz
rcr
inc
mov
bswap
mov
les
inc
adc
stc
pushf
fsubr
pushf
out
push
gs
dec
sar
pushf
hlt
xchg
out
bound
je
pop
mov
loope
jmp
xor
(bad)
or
ror
test
fnsave
test
add
inc
test
or
ss
xor
dec
or
adc
inc
xchg
inc
add
mov
outs
sub
sar
repz
mov
sahf
xlat
mov
xchg
das
mov
in
add
pop
pop
das
jb
push
(bad)
imul
and
(bad)
mov
ficom
sub
and
push
adc
outs
adc
dec
out
dec
adc
adc
lahf
shr
mov
xchg
fidivr
cdq
sbb
pop
hlt
iret
mov
pusha
jecxz
shr
adc
loope
imul
jnp
inc
and
cld
xchg
ror
popf
(bad)
cs
inc
or
shl
dec
(bad)
movs
cli
mov
fdivr
pop
jmp
push
ins
cmp
push
dec
aaa
jne
inc
adc
xor
add
cmp
fsubr
or
inc
adc
imul
popa
or
push
adc
int
into
xchg
inc
cmp
push
push
push
dec
push
ins
xchg
ins
in
in
lds
popf
(bad)
xchg
call
jae
pop
or
stos
xchg
mov
and
lock
mov
jmp
daa
jle
pop
sbb
sbb
lds
aam
div
inc
sbb
xchg
fist
es
push
pop
or
in
sub
movs
mov
mov
cmovns
jbe
dec
push
pop
jecxz
ret
test
leave
fwait
cmps
cli
mov
push
push
sbb
out
lds
aaa
jns
jno
jo
dec
sbb
inc
fwait
mov
xor
(bad)
js
push
add
cmp
in
mov
dec
sar
popf
out
or
pop
ficom
cs
push
das
ja
and
aas
xor
sbb
mov
pop
out
stos
rol
imul
and
sbb
inc
sbb
push
sub
dec
cld
push
pop
sbb
pop
out
pop
jl
in
mov
pushf
out
mov
xchg
loopne
leave
(bad)
pop
sbb
add
jae
jnp
adc
mov
mov
and
imul
pop
and
pop
dec
or
scas
push
cmp
jge
jl
ja
push
and
daa
inc
add
clc
daa
push
retf
popa
mov
adc
aas
mov
mov
scas
int3
or
add
int
(bad)
or
loope
retf
xchg
test
retf
aaa
sbb
ins
sbb
and
pop
xor
xchg
mov
icebp
mov
cdq
or
dec
mov
mov
xchg
movs
out
enter
and
sub
leave
push
mov
sub
cli
push
sub
sub
int3
lods
into
add
sub
jno
enter
mov
pop
adc
je
sub
fmul
push
pop
cld
dec
push
imul
adc
leave
test
lods
inc
add
sub
jle
inc
out
retf
jae
xchg
jae
in
xlat
pop
mov
mov
lahf
sahf
data16
push
add
fcomp
push
daa
dec
cmp
cli
jle
in
imul
xor
lods
lds
pusha
sub
xor
jne
leave
data16
pop
aas
jno
sbb
imul
xchg
lds
pop
mov
out
fldenv
pop
push
popa
sub
jnp
sub
cmp
pop
push
gs
repz
pop
inc
jmp
fld
mov
lods
ins
inc
aaa
inc
push
inc
mov
loope
leave
stos
mov
out
popf
lds
dec
imul
xor
mov
daa
dec
lods
adc
jl
mov
stos
stc
inc
xor
and
jl
xlat
mov
mov
das
es
cmp
ss
add
inc
cwde
jns
jg
inc
sbb
sub
push
xor
pop
fbld
jl
inc
aad
lahf
fldenv
push
pop
or
in
cli
addr16
leave
push
add
pop
aaa
jbe
inc
add
xor
push
pop
imul
outs
cs
pxor
pushf
cmc
mov
in
cmp
dec
loope
pop
inc
out
sti
xchg
out
xchg
ret
pop
jle
daa
sub
xlat
push
mov
or
stc
cmp
pop
sbb
inc
stos
sub
xchg
dec
xchg
cmc
scas
leave
mov
jb
js
inc
sbb
dec
jecxz
call
mov
data16
retf
nop
scas
fstp
(bad)
mov
ins
and
mul
cmp
push
push
(bad)
fistp
mov
int3
mov
or
push
pop
jecxz
out
sahf
test
sbb
xor
add
fcomp
aad
push
add
or
cdq
into
movs
rol
mov
mov
add
inc
das
es
outs
adc
(bad)
xor
in
mov
inc
dec
xor
mov
sub
push
or
jae
pop
adc
push
aas
inc
sub
jmp
loopne
ror
outs
aaa
outs
adc
dec
out
dec
adc
adc
dec
arpl
pop
mov
xor
in
add
in
cmc
pop
mov
pop
aas
dec
out
mov
stc
mov
ret
sbb
sar
dec
adc
pop
mov
shl
push
and
loopne
ins
cmp
add
clc
xchg
mov
dec
sbb
xor
pusha
sbb
cmps
cwde
ret
xchg
in
cmp
aas
push
xor
inc
out
fild
retf
mov
inc
sbb
nop
jmp
es
test
scas
sar
push
cmp
sbb
pop
adc
jl
dec
adc
aaa
arpl
and
popf
push
cmps
jmp
mov
daa
dec
scas
in
jmp
sbb
test
sar
add
je
popf
icebp
cmps
mov
daa
jnp
(bad)
popa
das
inc
add
loopne
push
mov
mov
sub
(bad)
xchg
call
push
aaa
outs
push
sub
mov
cmp
mov
and
inc
cmp
das
ror
jae
inc
or
mov
adc
in
popa
ss
cmp
shr
sar
mov
xor
add
xlat
nop
repnz
cli
es
je
pop
das
clc
subps
jbe
inc
sub
sbb
jae
pop
mov
pop
andnps
sbb
jb
pop
out
fild
jbe
push
lods
call
jmp
or
cwde
xlat
xchg
leave
mov
xor
push
cmp
mov
jbe
cmc
fcomp
cmps
icebp
mov
mov
(bad)
cmc
mov
mov
scas
repz
test
test
rol
adc
sub
add
push
jle
je
cmp
pop
pop
daa
outs
cmps
mov
(bad)
scas
mov
inc
mov
xor
js
jb
jae
arpl
out
mov
call
iret
add
shr
mov
pushf
aam
mov
xchg
mov
popf
imul
push
adc
arpl
inc
adc
and
sahf
fiadd
sub
pop
sbb
loopne
lock
in
(bad)
adc
add
and
or
xchg
movs
fisttp
dec
pop
retf
in
pusha
mov
dec
push
and
call
mov
mov
or
jbe
int
rcr
inc
dec
and
add
jne
mov
sbb
pop
or
cmc
pusha
adc
push
mov
lds
gs
cwde
(bad)
mov
push
sbb
push
sar
inc
pop
push
pop
out
dec
xor
not
test
mov
cmc
adc
fist
test
(bad)
int
dec
pop
cs
xor
jnp
pop
xor
loop
retf
xchg
jl
cmc
xchg
jmp
cli
test
icebp
pop
fst
lock
(bad)
aaa
jo
push
adc
jmp
push
adc
cmp
in
std
stos
aad
mov
pop
mov
inc
adc
jp
imul
out
fsub
cmps
movs
int3
bound
inc
adc
xchg
cmp
imul
mov
test
ror
fsubr
outs
ds
mov
call
mov
loopne
jb
adc
cs
into
and
push
out
mov
jmp
gs
add
adc
arpl
dec
sbb
je
dec
pop
inc
out
test
lock
xchg
aad
mov
rol
in
imul
sbb
sar
fstp
adc
(bad)
pusha
sbb
fidiv
and
call
stc
mov
pushf
div
mov
mov
lahf
hlt
in
mov
pop
cs
inc
std
and
shr
data16
fs
add
imul
out
mov
shl
sub
mov
popf
int
inc
fstp
fnstenv
inc
cs
repz
pop
pop
xlat
adc
stos
inc
fcom
in
mov
push
add
sbb
std
(bad)
into
ins
add
or
sbb
loope
inc
cmp
jb
cs
cdq
fdiv
int3
pushf
rcl
mov
jo
icebp
xchg
retf
xchg
retf
(bad)
fwait
or
push
loope
jb
sbb
mov
stos
stc
jnp
push
adc
sub
ins
movs
int3
xor
jb
inc
or
push
icebp
ins
or
lds
jle
mov
lods
rcl
cmp
iret
fsubr
mov
mov
mov
test
lahf
movs
test
imul
sbb
neg
add
sbb
mov
mov
xchg
dec
sbb
call
sbb
stc
test
dec
xor
stc
movs
lds
imul
lahf
dec
ins
loopne
push
add
jbe
push
cdq
cmc
mov
jmp
test
movs
fistp
push
sbb
ror
xchg
sahf
adc
pop
(bad)
popa
aas
jnp
aaa
cmp
push
and
sbb
push
push
adc
sub
and
jmp
out
mov
loope
bound
loop
push
sbb
out
mov
mov
mov
sub
push
enter
jb
inc
aaa
inc
in
rol
in
adc
rcr
outs
sbb
es
and
add
push
add
je
push
out
mov
push
push
pop
fwait
mov
repz
cmps
iret
scas
fistp
inc
in
clc
sub
inc
or
aad
inc
add
lods
sahf
xlat
mov
leave
or
gs
cld
push
inc
and
jg
outs
push
xor
xchg
shl
push
adc
jo
leave
(bad)
std
xchg
push
int3
lahf
(bad)
inc
repnz
add
jns
inc
sub
outs
call
scas
(bad)
sub
and
mov
fistp
jmp
inc
xchg
push
int3
lahf
fbld
cmc
jg
ret
sahf
leave
mov
out
call
(bad)
sti
mov
les
inc
adc
repnz
xchg
std
add
xchg
rcr
call
and
popa
test
cwde
ret
mov
mov
imul
fwait
arpl
in
mov
push
adc
dec
sbb
xchg
sbb
std
push
push
aaa
addr16
jns
sti
push
jmp
lahf
int3
mov
int3
arpl
jne
dec
xchg
jp
or
inc
add
icebp
mov
popf
jmp
fsubr
sbb
ins
xchg
ins
xor
inc
aas
call
or
push
fs
icebp
mov
loope
std
dec
fimul
div
inc
adc
jecxz
lds
(bad)
lods
test
cs
or
lahf
into
movs
iret
sub
sahf
fsub
scas
mov
pop
pop
icebp
(bad)
ficomp
sbb
jbe
sbb
out
fcomp
and
ror
jae
inc
pop
imul
sbb
mov
inc
aas
push
retf
sub
aad
cmps
iret
mov
enter
sub
aaa
adc
adc
mov
les
jle
cmp
jg
jmp
fs
sti
mov
sub
jo
pop
push
and
movs
cli
mov
arpl
dec
arpl
push
mov
rcr
jno
ins
adc
sub
or
sbb
and
sti
xchg
sti
call
pusha
test
mov
push
add
aad
pop
sbb
loopne
cmc
movs
fmul
mov
inc
std
mov
fs
pop
xchg
ins
scas
xor
push
mov
cmp
pop
dec
sbb
jnp
inc
adc
mov
mov
jo
inc
push
imul
sbb
push
sub
inc
adc
cmp
inc
sub
loop
adc
repz
mov
imul
pushf
mov
jbe
pusha
add
sbb
lods
in
or
sub
or
pop
mov
jb
sub
pop
inc
pop
pop
add
adc
push
push
pop
adc
mov
dec
repnz
bound
dec
out
mov
lahf
jge
ret
xor
mov
movs
popf
inc
rol
sub
outs
xor
pop
adc
leave
or
push
dec
or
dec
sbb
test
jecxz
aad
out
adc
dec
cmp
pop
cmp
test
rcr
bound
(bad)
mov
pushf
cmps
mov
inc
or
stc
cmp
dec
sub
push
pop
out
lahf
mov
add
sub
pop
jecxz
rcl
mov
cmovle
inc
mov
(bad)
jne
inc
inc
sub
ficomp
ins
adc
sbb
je
add
jbe
data16
pusha
cmp
inc
in
pop
adc
arpl
ins
mov
aam
imul
rcl
jp
cdq
jno
jb
repz
arpl
mov
loop
add
and
cmp
cmp
mov
inc
dec
adc
dec
push
adc
pop
in
pusha
retf
xor
jmp
sbb
pop
adc
sub
xchg
fimul
sahf
cmp
mov
call
or
add
dec
sub
nop
jns
jo
std
mov
ret
mov
adc
inc
jmp
mov
mov
jge
retf
xchg
(bad)
fs
pop
add
inc
push
imul
cdq
cmps
retf
ja
shl
cmps
mov
push
cmps
cmc
sub
inc
or
jmp
cmovb
rcr
sub
iret
das
ins
(bad)
xchg
in
sahf
into
jns
ja
scas
fisttp
inc
jmp
xor
xchg
ror
sbb
loope
mov
push
pop
out
and
and
lea
dec
les
popa
sbb
inc
and
mov
retf
lds
xlat
mov
xchg
out
(bad)
mov
push
in
mov
adc
cmp
fcomp
jle
(bad)
xchg
jmp
mov
cmp
pop
sub
movs
bound
jae
jns
jb
das
into
scas
fist
pusha
cmp
push
ds
add
dec
adc
push
and
push
sbb
mov
inc
out
lahf
shl
lods
stc
mov
pop
and
rol
lds
and
dec
fist
dec
aas
jl
test
mov
std
stos
jmp
aam
adc
test
movs
sar
push
sub
push
es
sub
nop
in
les
mov
and
cli
imul
push
dec
sbb
pop
pop
push
mov
adc
pop
das
and
ins
imul
jmp
and
popa
and
arpl
aaa
or
es
adc
je
add
sbb
inc
cli
cmps
lock
jns
mov
xor
jnp
dec
loope
ret
push
add
xchg
out
mov
xchg
int3
cmp
xchg
loop
jns
mov
inc
push
dec
mov
cmp
add
inc
stos
jmp
int
fdivp
mov
mov
mov
fwait
in
jg
jl
arpl
push
adc
or
inc
add
xchg
fstp
inc
cmp
retf
xor
pop
movs
mov
push
cdq
dec
in
mov
inc
test
daa
std
lods
(bad)
mov
imul
into
xchg
iret
ja
ja
xchg
xor
sub
mov
nop
fisubr
icebp
and
push
aad
pop
sbb
sub
jbe
sti
pop
pop
sbb
add
ins
sub
add
adc
sbb
ins
stos
mov
(bad)
xchg
rcl
scas
cmp
shl
push
dec
or
jge
int3
and
xor
fcom
leave
(bad)
fld
mov
or
or
aad
leave
mov
add
(bad)
ins
push
pop
inc
xor
pop
mov
adc
mov
repnz
cmps
ret
popf
stos
enter
or
test
scas
ins
iret
cmps
lds
xlat
mov
mov
pop
sub
sbb
mov
mov
inc
xchg
into
sahf
sti
jae
bound
jo
fs
(bad)
(bad)
mov
shl
jg
cmp
sahf
push
int3
mov
pop
or
jl
push
sbb
(bad)
jp
ins
push
jmp
enter
add
inc
fnsave
in
bound
pop
jmp
js
sub
callw
lahf
(bad)
(bad)
lahf
hlt
data16
add
xor
inc
(bad)
rcr
int3
repnz
adc
or
jge
inc
or
or
js
sbb
adc
add
leave
stos
mov
nop
aad
xor
shl
add
out
pop
and
xlat
cmps
icebp
xchg
mov
mov
repz
add
in
cwde
(bad)
xchg
jmp
inc
adc
push
jle
js
dec
loope
ds
pop
and
pop
inc
xor
(bad)
mov
dec
pop
aaa
arpl
jl
sub
pop
mov
sti
gs
sub
fstp
es
add
jb
inc
sbb
push
adc
pop
(bad)
mov
das
pop
pop
jbe
movs
jmp
mov
cmps
repz
xchg
xor
jp
icebp
xchg
lds
add
xchg
push
add
dec
stos
push
stc
mov
ret
test
icebp
sub
out
fcom
and
scas
mov
or
in
push
mov
pusha
mov
add
push
push
jge
call
inc
psraw
jmp
mov
data16
push
in
movs
lock
sub
mov
or
xchg
add
test
int3
dec
adc
sub
call
loope
test
pop
aam
xchg
xor
ins
pop
sbb
(bad)
and
or
es
addr16
nop
mov
jne
call
js
cmp
pop
idiv
mov
cmps
popa
or
retf
mov
(bad)
mov
ds
rcl
mov
sub
cld
lods
inc
adc
push
test
pop
out
mov
fcomp
sbb
nop
xchg
fdivr
and
cmps
xchg
ret
pop
or
push
out
pop
sbb
stos
imul
inc
mul
test
jno
sti
xor
iret
cmps
test
imul
push
fwait
ins
push
add
fimul
sub
mov
sub
rol
inc
push
pop
sbb
movs
into
jl
xor
mov
mov
cmc
movs
xchg
lds
pop
cmps
icebp
xor
aam
dec
aam
jle
xor
xchg
div
mov
rcl
push
leave
mov
jmp
mul
adc
mov
adc
ret
shl
sub
lahf
arpl
xor
in
add
ins
cmp
push
(bad)
mov
pop
ss
xchg
test
(bad)
and
mov
mov
xchg
inc
lock
shr
dec
retf
retf
lock
leave
adc
(bad)
xchg
test
outs
push
daa
jo
scas
xchg
fst
xchg
mov
dec
or
inc
scas
neg
rol
pop
mov
pop
push
inc
mov
cld
and
mov
ss
xor
mov
and
in
jnp
adc
fsub
test
ficom
into
mov
call
jb
lahf
mov
sahf
pushf
not
jb
lods
gs
mov
fistp
scas
(bad)
push
add
mov
ins
rcl
outs
sub
imul
mov
pop
sbb
xchg
cmp
jmp
sub
test
jne
in
xor
jb
cwde
dec
or
clc
mov
push
inc
leave
mov
clc
mov
cmp
jne
int
pop
out
inc
lar
mov
push
add
xchg
xchg
lahf
lds
arpl
mov
and
cmps
bound
ss
xchg
mov
sub
clc
scas
inc
add
movs
dec
adc
lahf
mov
and
cmps
jp
cli
mov
adc
mov
xor
out
push
add
cld
and
gs
pop
test
cs
out
sbb
jne
xor
mov
adc
in
sar
or
repnz
aad
cs
pushf
xchg
dec
sbb
push
pop
outs
xor
inc
pop
pop
inc
int
push
add
or
movs
mov
push
stos
out
ja
fwait
mov
sub
jmp
pop
out
mov
fiadd
stc
test
push
into
cmps
jne
stc
mov
cmps
int
icebp
push
add
mov
xor
popf
jno
iret
cwde
pushf
cmc
and
jmp
cwde
sti
pop
or
cmps
mov
or
sbb
and
sti
add
fstp
cmovbe
mov
cmovnp
test
adc
mov
call
push
int3
ss
add
in
add
add
dec
sbb
jle
add
cmps
ja
adc
lea
push
inc
movs
loopne
sbb
jge
popf
cwde
iret
sub
loop
inc
clc
fwait
mov
jno
cmovbe
mov
cwde
data16
dec
xlat
or
sub
scas
hlt
xchg
std
and
mov
cmp
cmp
mov
cmp
gs
jnp
test
rol
in
mov
js
jmp
lock
sbb
cmps
dec
adc
jo
ret
push
sti
pop
add
inc
test
ins
cmp
xor
inc
stc
mov
and
sub
jg
call
data16
outs
mov
jne
(bad)
sub
ror
stos
(bad)
jge
sbb
xchg
mov
outs
sub
or
mov
(bad)
sub
mov
pop
je
cmc
jl
repz
add
inc
out
mov
cwde
dec
add
idiv
jno
and
jmp
xchg
(bad)
pop
or
dec
pavgw
cmps
les
push
push
pop
adc
adc
mov
iret
and
stc
cmp
sub
dec
sbb
aas
addr16
mov
mov
pop
xor
scas
xchg
(bad)
cmp
xchg
mov
lods
popa
and
cmp
das
ret
xchg
xchg
adc
xchg
data16
dec
fidiv
pop
push
aad
mov
and
xchg
ins
cmp
xor
jne
mov
int3
scas
inc
adc
dec
mov
push
bswap
mov
adc
retf
and
mov
cmc
pop
adc
push
cmp
loop
push
test
loope
push
mov
cmps
aam
mov
test
add
test
add
bound
mov
xchg
fiadd
std
xchg
jbe
xor
jp
lock
ror
jmp
mov
jnp
call
or
stc
jae
hlt
mov
and
inc
jmp
ss
mov
daa
add
mov
sub
push
out
cmps
sahf
mov
popa
xor
cmps
cdq
lock
pusha
fstp
push
mov
ja
nop
xlat
(bad)
jb
push
push
in
scas
stc
jle
push
push
repnz
in
imul
jno
adc
cmp
data16
pop
cld
stos
scas
(bad)
pop
or
dec
mov
js
cmp
ret
ficomp
or
idiv
sbb
enter
xchg
lods
jb
sbb
sbb
jno
sbb
pop
pmulhw
mov
adc
bnd
add
cmps
(bad)
retf
xor
fisub
in
test
mov
shl
fcom
cli
mov
bound
xor
mul
jmp
ds
xchg
mov
movs
mov
dec
fidiv
cmp
in
(bad)
imul
add
mov
test
aas
push
aaa
ins
cmps
int
xor
cmps
mov
and
lahf
jno
sub
pmulhuw
mov
nop
stos
leave
push
add
pushf
les
inc
mov
inc
(bad)
idiv
call
inc
enter
jo
das
imul
mov
lods
(bad)
int3
push
sbb
jne
cmp
sub
xchg
ja
pop
pop
leave
cwde
mov
jb
in
and
scas
les
and
xchg
mov
inc
test
jg
cld
stos
mov
xor
out
pop
adc
push
push
inc
mov
cmps
lods
call
mov
add
enter
ins
and
lahf
sub
push
rol
cdq
ror
stos
cdq
enter
jge
xchg
push
ret
test
sbb
mov
and
xchg
mov
mov
out
mov
enter
add
cmp
mov
sub
jb
pop
dec
shr
mov
stc
call
inc
pop
push
push
test
jmp
inc
push
push
pop
cmp
mov
and
(bad)
movs
inc
push
add
mov
mov
rol
pop
push
sbb
adc
push
out
mov
mov
das
or
sbb
gs
mov
push
push
xchg
and
xchg
mov
dec
adc
fwait
mov
jle
repz
add
pop
mov
and
push
dec
sbb
inc
int
mov
inc
sub
push
rol
ror
and
cld
dec
and
push
div
sti
nop
imul
xchg
ficom
in
je
nop
js
xor
pushf
pop
jle
sbb
test
retf
inc
push
cmp
mov
outs
sub
inc
adc
xor
pavgb
jmp
adc
mov
in
mov
rol
xor
int3
jo
or
add
adc
js
pop
mov
xchg
pusha
or
mov
(bad)
cs
into
xchg
outs
add
push
adc
xlat
xchg
test
es
pop
mov
push
pop
add
int3
xor
dec
mov
nop
mov
(bad)
(bad)
out
cmps
push
or
dec
mov
pop
or
inc
call
cli
mov
(bad)
xor
mov
fcom
sbb
push
stos
ret
push
push
in
movs
call
xchg
lock
sbb
mov
push
jmp
push
add
daa
dec
xlat
mov
sub
bound
stos
add
lds
in
test
mov
lods
iret
sub
lods
inc
or
inc
cmps
loop
addr16
mov
cmp
mov
ins
xchg
(bad)
xor
nop
mov
xor
stos
popf
int3
pop
or
push
adc
mov
aas
imul
push
sbb
out
sub
lock
add
cwde
cmps
lock
mov
and
and
xchg
fsubr
or
into
ja
push
dec
fdiv
xchg
fistp
sti
nop
jae
cmp
in
sbb
je
pop
cmps
jecxz
sub
pop
lods
les
mov
inc
push
sbb
iret
movs
jg
adc
pusha
xchg
jl
add
sub
inc
mov
arpl
lahf
retf
aaa
jae
dec
or
cdq
pusha
xor
fnsavew
push
ror
sbb
or
mov
enter
cdq
mov
dec
and
pop
aam
xchg
fistp
cmc
sahf
fwait
clc
add
xchg
fcom
adc
mov
pop
cmps
out
aad
sbb
mov
inc
scas
not
jns
(bad)
pop
or
(bad)
leave
sahf
mov
cld
lahf
hlt
push
jne
lahf
dec
or
xchg
leave
or
mov
mov
jle
jmp
test
dec
push
(bad)
mov
stos
out
js
sbb
call
lods
loopne
push
int
aaa
out
mov
pop
adc
mov
cmp
xor
push
rcl
pop
ins
int3
scas
dec
sbb
xchg
(bad)
lahf
cmps
call
adc
aaa
adc
jmp
push
loopne
mov
dec
mov
mov
aam
xor
mov
out
scas
fwait
xlat
jnp
add
retf
adc
fst
out
popa
xor
dec
mov
push
jne
es
int
mov
dec
add
pop
int
xchg
(bad)
and
inc
test
and
mov
les
mov
push
pop
div
sbb
sti
add
rep
mov
adc
lods
lods
loopne
dec
sar
sbb
shl
adc
neg
cmp
les
mov
gs
ja
xchg
nop
aam
push
or
mov
xor
test
xor
mov
daa
and
in
dec
adc
dec
xchg
aad
sub
mov
ins
cmp
mov
mov
fs
mov
(bad)
mov
(bad)
fisubr
sub
stos
push
sbb
stos
imul
cmps
out
xor
mov
mov
adc
pop
lods
jmp
leave
lea
sbb
sub
push
lods
test
in
fwait
rcl
rcl
xor
push
cs
into
xchg
jb
daa
inc
clc
lods
mov
mov
icebp
cmps
mov
push
mov
jo
out
fdivr
mov
call
jo
pop
or
inc
ficom
lock
test
inc
add
push
mov
mov
adc
fnstenv
out
mov
and
or
fadd
sbb
xchg
outs
pop
add
stos
mov
cmp
rcr
mov
jae
sub
mov
xor
inc
(bad)
mov
stos
out
dec
mov
mov
push
or
int3
and
sti
dec
and
inc
repnz
daa
(bad)
pushf
xchg
call
loope
arpl
les
fistp
cmp
movs
mov
cmp
xchg
mov
pop
or
sub
lods
ja
sbb
mov
cld
stos
dec
or
push
loope
xchg
cli
pop
cmp
test
stc
inc
or
pop
rol
mov
sub
xchg
dec
(bad)
out
inc
rcl
sahf
popf
fstp
push
sbb
jb
hlt
arpl
sbb
stos
shl
fistp
lds
retf
cmp
push
rol
pop
enter
in
test
add
mov
fdiv
jae
idiv
outs
cld
xchg
mov
jo
in
jns
in
xchg
sbb
jne
repnz
xchg
popf
rcl
jno
push
adc
dec
fadd
push
xlat
xor
inc
iret
mov
pop
mov
scas
mov
(bad)
push
push
out
mov
je
std
cmp
ret
aas
push
ins
stos
enter
inc
test
lock
(bad)
pusha
(bad)
fisubr
inc
(bad)
nop
cdq
fsub
push
fistp
retf
test
sbb
xchg
rcr
sbb
stc
pop
xor
pop
loop
cdq
aad
sbb
mov
pop
or
cmp
pushf
stos
cld
dec
and
xchg
mov
pop
adc
imul
mov
cmp
jmp
adc
pop
mov
dec
sbb
arpl
in
add
xchg
sub
mov
push
or
push
mov
test
lea
je
aam
sbb
scas
mov
inc
push
(bad)
mov
sub
retf
push
push
test
mov
rcl
or
scas
cdq
enter
pop
rep
push
cmp
pop
lds
leave
lea
sbb
push
cmp
lds
je
in
daa
adc
mov
push
or
scas
mov
js
mul
rol
pop
sbb
in
or
pop
or
call
popa
sbb
cmps
popa
and
bound
cmp
stos
cmps
jecxz
inc
scas
idiv
and
sub
iret
mov
cmps
mov
push
scas
not
(bad)
xchg
rol
test
inc
stos
shl
addr16
push
or
mov
push
pop
fmul
push
adc
pop
(bad)
popf
xchg
dec
imul
aas
pop
sbb
pop
out
pusha
or
retf
in
mov
js
pop
sbb
scas
mov
sub
jmp
push
fisttp
retf
cmp
mov
cmps
rcl
test
out
mov
mov
enter
mov
les
in
test
(bad)
jmp
test
dec
stos
icebp
dec
and
pop
cmps
bnd
idiv
in
test
cld
xchg
rol
movs
call
stc
call
retf
(bad)
sub
stos
xchg
shl
aad
test
jns
(bad)
pushf
inc
sub
xor
(bad)
call
mov
lds
call
test
out
outs
cmc
mov
(bad)
imul
cmps
imul
jg
fwait
test
bound
push
inc
in
mov
dec
int
mov
push
or
or
fimul
mov
movs
(bad)
data16
cmps
jns
imul
out
ja
xor
mov
mov
add
cmps
repz
out
jb
push
rcl
jne
lahf
push
movs
arpl
or
mov
cmp
cli
pop
sbb
push
mov
xchg
lods
cli
pop
sbb
mov
sar
les
rcl
aam
gs
mov
cmc
addr16
mov
in
mov
test
inc
add
push
cld
lods
xor
pop
(bad)
mov
push
cmp
jge
mov
push
mov
data16
xchg
bound
mul
mov
push
rol
mov
fcomp
xor
popf
push
aas
sbb
in
push
sbb
push
(bad)
mov
xchg
and
loope
and
stc
test
ficom
jmp
push
push
ins
not
adc
push
rcl
inc
hlt
mov
sbb
popa
xor
jmp
mov
push
pop
or
jo
call
cld
test
call
fild
jp
mov
jg
test
pop
ss
stos
sahf
retf
ror
dec
rol
add
ret
dec
adc
jns
retf
lds
lahf
fistp
push
push
retf
pushf
inc
sub
stos
out
pop
fidiv
(bad)
mov
mov
push
adc
scas
push
add
jge
popf
sahf
les
or
fs
jle
test
in
or
mov
cmp
jmp
adc
sti
nop
test
and
pushf
movs
in
or
loop
and
mov
add
out
popa
retf
xchg
xor
mov
sub
pop
sbb
lods
mov
ins
sub
mov
es
fisttp
xchg
ins
pop
cs
mov
inc
cld
movs
xchg
inc
add
jne
adc
mov
push
leave
stos
lahf
retf
add
in
daa
jg
xchg
jnp
hlt
movs
push
out
sahf
leave
jg
add
lock
ds
rol
ret
icebp
mov
es
scas
xchg
or
mov
and
test
push
dec
movs
in
dec
adc
push
mov
push
pop
sub
retf
push
add
pusha
(bad)
mov
int
jge
and
scas
jmp
in
popa
ss
(bad)
cs
xchg
xchg
dec
sbb
xchg
rcr
ss
out
es
sar
pop
fs
push
push
inc
fistp
mul
push
adc
dec
imul
mov
mov
cmp
pop
int
xchg
les
je
(bad)
mov
je
adc
in
mov
in
and
xchg
inc
add
popa
cmps
loop
push
adc
or
mov
push
push
clc
mov
mov
inc
add
sbb
mov
and
lahf
mov
pop
xor
jns
icebp
sub
nop
fst
rcl
xchg
jmp
retf
pcmpgtb
js
out
dec
adc
jge
pop
lds
test
and
repnz
std
pop
ds
mov
ror
inc
push
cmp
test
rcr
sub
cli
sub
iret
inc
pop
sbb
mov
sbb
lock
data16
sub
mov
arpl
mov
fisttp
adc
ret
push
pop
stos
out
push
mov
inc
and
push
mov
cmp
sbb
sbb
sbb
jo
sahf
cmps
lds
cmp
mov
jbe
xor
xchg
pushf
aad
test
lods
mov
inc
and
mov
ret
xor
aam
xor
push
mov
sub
mov
jmp
nop
les
pop
adc
dec
mov
popa
int
popf
hlt
push
add
push
fist
aaa
push
out
mov
outs
aaa
push
adc
test
cmp
mov
mov
mov
fadd
add
scas
jmp
sub
cmps
js
es
test
jmp
daa
sti
mov
ret
sub
xchg
test
scas
mov
jp
in
cmps
repnz
pop
cmp
sbb
jae
popf
gs
pop
mov
pusha
lock
shl
cmc
mov
cmc
mov
cmp
and
rcl
retf
mov
ret
xchg
sbb
ret
add
cdq
mov
and
data16
mov
mul
add
stc
jae
add
test
mov
and
mov
hlt
ss
mov
jge
and
mov
cmc
push
bswap
mov
sbb
in
adc
sub
sti
mov
daa
in
xchg
mov
lock
mov
sar
push
retf
(bad)
or
test
xor
sahf
mov
sub
(bad)
and
mov
fs
and
mov
fistp
gs
stos
aaa
cmp
inc
xor
sub
std
into
dec
ins
jae
icebp
xchg
fidiv
mov
jge
aam
loopne
lock
inc
push
arpl
lods
xchg
test
lea
dec
or
neg
fnsave
lock
mov
fs
dec
daa
clc
in
clc
xor
(bad)
pop
cmp
mov
push
(bad)
bound
and
jmp
and
and
cmp
ror
jl
and
pop
bound
mov
sub
xchg
fwait
rcl
pop
sbb
sbb
retf
inc
or
ins
adc
pushf
loopne
outs
dec
aas
dec
dec
aad
inc
popa
jb
pop
sbb
adc
out
pusha
lea
pusha
scas
std
sub
(bad)
into
and
fldcw
pop
std
sysenter
mov
lock
mov
stos
data16
inc
jl
and
sbb
mov
mov
loopne
cmps
jno
mov
fidivr
stc
mov
sahf
dec
call
cmc
mov
lahf
ins
pop
mov
shl
sahf
inc
dec
xlat
fimul
lods
ins
and
lods
out
and
mov
nop
xor
cdq
fimul
loopne
movs
cmp
or
sbb
or
mov
sbb
bound
mov
sti
aaa
mov
dec
adc
xchg
xchg
outs
clc
mov
enter
push
mov
push
fcomi
out
xchg
and
cmp
out
iret
push
sbb
je
mov
mov
mov
loop
pop
dec
add
std
les
imul
leave
lea
pop
(bad)
push
sbb
cld
xor
arpl
mov
out
cwde
in
daa
rol
xchg
lds
fcomp
mov
add
jbe
sahf
int3
fwait
pop
fldcw
clc
icebp
ret
dec
bound
jne
outs
shl
lods
fnstcw
int
sub
sub
jns
pop
daa
push
push
sub
retf
ds
inc
das
fnstsw
adc
imul
push
fst
(bad)
fs
ror
popa
push
mov
test
cmc
inc
aam
add
inc
lahf
inc
xchg
sbb
xchg
sahf
push
out
sub
cmp
test
mov
lock
inc
test
ins
and
hlt
imul
pop
in
push
and
xor
aad
fimul
xchg
adc
dec
jg
leave
fdiv
mov
dec
je
ins
lods
sbb
xchg
xchg
inc
fcom
(bad)
xlat
jmp
ror
dec
xchg
adc
movs
mov
call
dec
fdiv
std
and
lock
adc
jo
jmp
push
jno
dec
popa
fbstp
mov
scas
bound
push
push
retf
fcomp
push
xchg
pop
or
loopne
leave
push
and
cdq
or
aad
dec
aaa
popf
mov
pop
mul
dec
pushf
jnp
mov
mul
int3
(bad)
call
xor
arpl
aas
aas
fwait
gs
push
dec
cmp
adc
rol
arpl
or
inc
jge
fs
das
lock
mov
popf
sub
and
movs
je
xor
cmp
shl
loopne
stos
pop
test
and
sbb
int3
(bad)
fimul
inc
pop
imul
scas
outs
sub
(bad)
scas
push
imul
add
inc
inc
xchg
xchg
out
std
pop
(bad)
xlat
lea
or
fistp
jne
sti
je
jmp
arpl
and
xor
sbb
sti
in
add
imul
mov
fist
les
push
ret
add
int
aam
jns
aad
xor
js
push
mov
nop
cmp
adc
jp
dec
(bad)
out
mov
cld
gs
(bad)
sti
jae
cwde
outs
lds
mov
div
and
cmp
aaa
int3
sub
call
xor
adc
cld
pop
mov
inc
adc
dec
bnd
inc
rcl
push
in
xor
es
fstp
mov
cmp
div
ret
out
mov
out
loopne
scas
loop
sbb
inc
or
cwde
mov
rol
adc
fdiv
add
add
dec
lock
jecxz
repnz
into
jne
inc
mov
gs
or
sub
and
cwde
movs
xchg
je
outs
mov
dec
mov
mov
adc
enter
ror
es
mov
push
dec
xchg
adc
loope
xchg
aaa
push
push
pop
xor
add
xlat
mov
and
int3
cmp
ins
(bad)
push
add
movs
pop
cmp
ror
dec
int
nop
shl
add
fs
jmp
or
mov
inc
xchg
pop
pop
call
mov
sub
sub
jbe
and
inc
add
lods
outs
jno
inc
ins
fsubrp
cmps
jae
jg
stc
and
adc
pop
shr
mov
outs
xchg
out
pmuludq
ja
inc
lea
mul
add
ins
ret
add
dec
pop
push
cdq
xor
push
xlat
bound
mov
out
mov
push
cmp
aaa
test
mov
stc
test
add
in
or
jb
adc
push
pusha
jmp
pop
std
adc
scas
je
mul
(bad)
sbb
fwait
push
or
push
not
mov
test
adc
lods
scas
add
mov
pop
into
and
(bad)
mov
in
mov
nop
dec
fstp
sti
jae
mov
nop
inc
adc
add
cs
les
inc
ins
xchg
sub
outs
or
arpl
sub
nop
fst
cmc
adc
xor
test
cmps
mov
inc
sbb
xchg
inc
fs
in
pusha
(bad)
sar
jl
cmps
push
inc
lahf
int3
sub
aam
test
mov
pop
js
push
in
jb
jecxz
or
and
out
rol
dec
div
ds
and
bound
xlat
stc
push
sar
and
fs
mov
sub
xor
jbe
cmp
js
loopne
xchg
and
outs
add
fadd
pop
dec
jmp
mov
xchg
(bad)
pop
ins
fst
sub
mov
jno
in
ins
ins
jmp
dec
repz
and
or
sub
out
ret
loope
ds
ins
icebp
rcl
pushf
or
fcmovnb
dec
push
dec
push
clc
cmp
test
mov
lods
push
or
shl
xlat
sti
pop
xchg
fs
mov
cmps
add
ja
inc
dec
mov
ficom
xor
bound
fcomp
hlt
sub
fld
and
pusha
enter
mov
cmc
cmp
in
icebp
fwait
xchg
scas
sbb
mov
push
(bad)
jmp
mov
pop
sub
and
mov
mov
shl
jne
iret
call
nop
push
pop
fmulp
adc
call
or
pop
adc
test
test
popf
icebp
inc
pop
mov
cs
jge
aas
lods
scas
push
fistp
jl
pop
add
ss
xor
jp
sub
xchg
mov
and
int3
mov
stos
adc
push
nop
(bad)
pop
sbb
pop
push
out
xchg
dec
xchg
call
call
push
int
sbb
push
repz
mov
in
cmps
(bad)
aam
jnp
inc
cmp
mov
out
or
ret
in
mov
mov
stos
jbe
mov
adc
pusha
inc
dec
sub
cwde
aad
aam
shl
call
xchg
pop
push
xor
jne
cli
xchg
in
jnp
test
xor
retf
(bad)
lods
cmp
lods
adc
mov
clc
add
fcomp
outs
xor
shl
into
pop
and
(bad)
cs
or
test
dec
jmp
nop
add
dec
ficom
inc
movs
daa
jno
pop
gs
ret
add
(bad)
adc
jp
and
mov
into
jp
fiadd
adc
mov
(bad)
mov
cmp
fidiv
jle
dec
or
jo
repnz
mov
push
xor
xlat
pop
push
sbb
in
add
pushf
and
imul
sub
adc
sbb
pop
jmp
cmp
fsub
int
sub
cdq
data16
xchg
scas
(bad)
pop
cld
mov
out
adc
sbb
xor
inc
jmp
jmp
scas
pop
retf
mov
and
repz
xchg
(bad)
jecxz
pop
jns
das
push
inc
outs
push
sar
jno
(bad)
mov
fbld
jmp
ror
imul
mov
fistp
mov
sub
dec
inc
mov
ror
scas
mov
pop
cli
in
enter
retf
ins
pop
inc
mov
hlt
test
mov
clc
adc
xchg
cld
mov
bound
fnstsw
fsubr
xor
xor
pop
fild
ret
retf
icebp
sbb
jmp
repz
jns
and
hlt
xchg
push
cmp
push
pop
jmp
loopne
sbb
inc
mov
push
sub
loope
mov
adc
stos
scas
mov
cs
sub
xor
jnp
pop
or
mov
sub
xchg
std
cs
or
mov
cwde
xchg
(bad)
sti
mov
mov
xor
ret
add
cmps
jnp
(bad)
(bad)
movs
inc
jmp
mov
rol
cmps
sub
jge
pop
and
xor
iret
push
in
mov
mov
or
scas
call
repz
cmovae
mov
mov
popa
in
mov
mov
mov
outs
pop
jge
jae
lods
mov
gs
jmp
jecxz
cmp
icebp
xor
fs
sub
pop
addr16
or
adc
sbb
xchg
popf
xchg
sbb
data16
push
xchg
jb
jbe
jmp
or
data16
cdq
lds
popa
jl
iret
pop
xchg
cli
mov
cmp
lahf
(bad)
lahf
lods
pop
jnp
inc
popa
push
push
aam
sbb
xor
adc
xchg
adc
dec
add
mov
lahf
pop
int
jbe
lock
dec
and
push
cmp
xor
lea
fdiv
dec
iret
inc
mov
mov
mov
nop
iret
fsubr
or
mov
out
dec
inc
aas
sahf
push
mov
inc
xchg
pop
adc
nop
mov
or
or
adc
mov
lds
mov
sti
rcl
cmps
pop
mov
outs
push
cmp
js
xchg
imul
adc
sbb
(bad)
loop
cwde
scas
call
int3
pop
mov
sbb
xor
(bad)
icebp
and
push
push
lock
loopne
xchg
mov
sub
jne
test
inc
sbb
push
lock
rcr
sahf
jb
sub
fcom
loope
aad
dec
in
push
fs
das
cmps
cmp
push
not
leave
imul
test
jmp
out
push
lods
leave
addr16
pop
sti
out
(bad)
mov
xor
sub
inc
xor
shl
in
imul
fld
test
fisub
out
sub
rol
ja
shl
xchg
mov
xor
into
dec
and
and
daa
and
ds
(bad)
movups
inc
aas
ins
xor
je
mov
or
inc
mov
pop
popa
cmp
jns
(bad)
fwait
lods
test
loop
iret
sti
cmp
dec
pop
icebp
call
cmp
add
scas
adc
ret
popa
mov
push
jmp
dec
sub
or
daa
outs
or
in
(bad)
cmp
sub
and
imul
add
je
iret
add
pushf
dec
test
mov
std
test
nop
leave
ffreep
lock
popf
daa
mov
inc
xchg
push
or
adc
xor
ficomp
cs
ja
mov
mov
xor
div
add
mov
loop
mov
and
pop
pop
jp
ficom
pop
(bad)
sub
cmp
in
xchg
mov
mov
pop
xchg
or
jno
mov
(bad)
loopne
std
cli
daa
mov
and
rcr
loopne
out
mov
mov
mov
adc
and
gs
xchg
je
js
sbb
xchg
repz
iret
arpl
xchg
(bad)
arpl
mov
mov
les
pop
ins
ds
dec
in
sub
add
push
ja
not
and
icebp
(bad)
fcmovne
in
jo
fdivr
(bad)
push
imul
dec
les
or
xor
dec
leave
xchg
fisttp
xor
xchg
dec
adc
ret
retf
in
xchg
mov
xor
push
cmp
jmp
loopne
mov
pop
cmp
ficom
or
add
sbb
sbb
imul
push
xchg
out
mov
rol
or
outs
xchg
mov
shl
int3
in
sbb
and
and
dec
arpl
pop
add
shl
pop
fcomip
lahf
and
push
fcomip
or
dec
pop
mov
scas
je
push
xchg
mov
inc
fisttp
int
mov
inc
into
jns
xchg
fnstcw
imul
out
push
jnp
sbb
icebp
iret
and
hlt
ret
fild
jae
test
data16
and
test
pop
(bad)
(bad)
daa
push
pop
and
jmp
pop
dec
fidivr
adc
pop
mov
pop
xchg
cmp
pop
mov
sub
fiadd
xchg
pop
mov
data16
vpsrlq
or
rol
xor
sbb
into
scas
lods
(bad)
mov
arpl
outs
fcom
xor
sub
popa
adc
leave
in
mov
sahf
mov
test
pop
call
lds
dec
push
mov
pop
call
push
or
not
sbb
xchg
mov
or
sub
sub
(bad)
outs
imul
(bad)
and
inc
jne
cmp
and
jecxz
and
adc
jmp
(bad)
neg
fisttp
sbb
pop
loope
inc
stc
mov
stos
popa
jno
arpl
cmp
scas
xor
cmp
in
pop
and
dec
loop
shr
into
leave
shl
dec
out
les
inc
in
add
xchg
pop
jbe
dec
or
jl
dec
clc
inc
aam
je
inc
and
and
sub
sbb
ds
xlat
cmps
gs
out
test
ds
jge
push
scas
jne
mov
pop
hlt
lods
repnz
sub
daa
pop
mov
arpl
(bad)
xchg
cmp
mov
jmp
test
jbe
(bad)
stc
repz
inc
iret
mov
cdq
sbb
out
xchg
bound
jno
sbb
push
or
cld
daa
in
push
and
sbb
imul
and
fdivr
jg
push
lock
mov
arpl
gs
icebp
pop
std
aad
push
xchg
cld
nop
push
mov
xchg
or
jno
ret
sbb
loopne
int
fisubr
jmp
mov
push
sbb
loop
ins
cmps
out
pop
mov
jb
es
in
sub
sub
mov
mov
push
es
cmc
lods
lea
fdivr
in
mov
addr16
outs
sub
test
retf
dec
aaa
xor
mov
push
or
out
cmp
adc
jp
mov
inc
inc
test
call
sub
pusha
aaa
sbb
neg
js
push
mov
(bad)
and
push
test
hlt
xor
retf
rcr
je
(bad)
sub
xor
add
out
mov
int
popa
out
and
imul
dec
fisttp
enter
cmp
push
or
jno
sub
fadd
sbb
dec
dec
push
loopne
nop
movs
imul
or
and
in
dec
push
fisttp
les
fild
push
in
aad
out
in
repnz
mov
pop
mov
pusha
lods
enter
int3
mov
in
jmp
cmps
fs
mov
int3
enter
outs
jle
repnz
xchg
popa
xchg
es
sbb
adc
outs
stos
inc
pushf
push
ja
imul
cli
dec
fidiv
jnp
mov
loope
test
push
jmp
aad
jbe
adc
lods
pop
adc
iret
pop
push
inc
and
sub
aas
sbb
dec
cwde
add
enter
adc
scas
imul
cmp
push
push
mov
mov
imul
pusha
xor
xchg
mov
mov
add
push
xor
loopne
or
push
xchg
mov
jo
dec
(bad)
jns
movs
adc
(bad)
sub
xchg
and
rol
adc
retf
mov
mov
mov
push
frstor
out
rcr
sti
rol
mov
aas
jmp
mov
sbb
sub
mov
sbb
pop
jge
nop
in
push
aam
inc
loope
mov
fidiv
push
jae
add
push
cmc
(bad)
ss
pop
inc
or
mov
cmp
mov
mov
stos
sbb
xchg
sub
sbb
in
sub
test
sti
lock
xchg
fsubp
mov
int
stc
daa
stc
daa
adc
retf
mov
mov
or
pop
adc
aam
mov
adc
and
sub
call
sub
xlat
movs
add
mov
sub
test
and
js
mov
xor
(bad)
xor
sti
mov
sbb
cmps
inc
and
mov
movs
add
add
pop
shl
cmp
stos
mov
(bad)
jne
mov
inc
mov
xchg
aaa
fisttp
icebp
or
ds
cdq
jne
xchg
push
dec
in
mov
int
push
imul
dec
daa
sbb
dec
push
sub
out
and
xor
mov
cdq
leave
cmp
call
mov
and
xor
scas
mov
xor
mov
sub
or
test
dec
sbb
dec
dec
int3
movs
retf
imul
cwde
leave
jmp
cli
ss
stc
push
fcmovb
pop
or
in
mov
sbb
pushf
iret
daa
rcr
in
xchg
mov
pop
repnz
in
aad
jo
mov
xor
std
pop
or
cs
inc
and
mov
movs
fidiv
mov
xchg
test
dec
or
movs
inc
not
sbb
push
jb
mov
jmp
out
mov
call
inc
xchg
sub
icebp
mov
mov
lahf
dec
aad
mov
xchg
std
int
(bad)
jle
lods
mov
retf
mov
adc
mov
xor
shr
retf
ret
mov
not
and
jge
rsm
movs
jg
pop
imul
jge
or
add
mov
xor
test
(bad)
push
xor
jnp
shr
xor
rcl
inc
sub
cmp
xchg
outs
rcl
adc
and
movs
dec
dec
fldenv
dec
mov
cmc
cli
or
lds
mov
sar
and
lods
dec
lahf
js
jmp
sbb
call
push
jg
inc
add
sbb
or
(bad)
jle
pop
clc
mov
sar
pop
mov
loopne
fistp
mov
xor
test
xor
movs
daa
loope
sub
or
inc
inc
dec
jns
dec
add
xchg
push
add
dec
mov
mov
fbstp
pop
in
or
pop
stos
ins
mov
ds
sbb
sub
push
sar
pop
adc
jmp
popa
xlat
outs
leave
pop
lods
(bad)
das
sbb
inc
(bad)
push
aad
leave
rol
sti
pop
enter
stc
or
mov
(bad)
and
sub
push
les
daa
or
scas
mov
jne
inc
mov
dec
scas
aam
stc
xor
adc
push
cld
das
adc
jmp
stc
push
xor
cmp
sbb
dec
test
out
dec
fist
xor
ret
xor
rcr
ss
pop
xor
sbb
sub
es
lea
inc
fadd
xor
fdiv
pop
rcl
leave
jnp
xor
push
mov
repnz
(bad)
cmp
pop
sar
call
xchg
popa
scas
inc
mov
fbstp
icebp
pop
mov
mov
lock
sbb
icebp
sub
imul
movaps
in
pop
adc
stc
sub
or
pop
rcr
mov
inc
or
in
das
sbb
pop
fidivr
cmc
push
sbb
sbb
daa
rcr
adc
mov
out
push
shr
push
retf
test
imul
dec
rcl
dec
aas
or
in
sub
icebp
jbe
jg
xchg
je
mov
mov
aad
mov
jno
xchg
sahf
call
std
or
das
es
or
pop
mov
mov
es
(bad)
push
fisubr
add
pop
mov
and
xor
jbe
cmp
or
sbb
sub
dec
fnstsw
out
imul
ins
fld
call
(bad)
cld
pop
mov
test
xchg
push
int
pop
iret
cmp
ret
or
cmp
sbb
shl
push
call
call
mov
inc
mov
mov
jmp
scas
push
mov
addr16
or
pop
stos
ins
test
and
shl
adc
sub
(bad)
push
mov
stos
lea
push
xchg
xor
icebp
or
push
xchg
cwde
arpl
cmp
stos
arpl
je
sahf
jl
dec
pop
or
push
ss
test
xchg
jne
cmp
or
pop
fistp
imul
loopne
les
div
mov
xchg
mov
mov
mov
dec
aad
repnz
sub
lahf
je
or
sub
ja
jb
and
outs
xchg
inc
mov
mov
push
dec
test
cmp
fs
cmp
and
sub
ins
scas
fwait
jle
pushf
xchg
jge
cmp
into
cmp
mov
(bad)
outs
mov
and
sub
aas
adc
fldcw
xchg
pusha
mov
xchg
xchg
lahf
jge
inc
rcl
mov
mov
fldenv
jb
pop
icebp
or
push
sar
clc
pop
hlt
push
mov
lods
jge
xor
push
retf
daa
shl
adc
xchg
inc
(bad)
or
dec
mov
ds
mov
imul
popa
(bad)
add
in
push
cli
xor
dec
test
shl
push
sbb
adc
call
mov
loop
xchg
mov
sbb
dec
rcl
adc
clc
and
pop
test
sbb
dec
fcomp
sub
not
imul
lea
arpl
daa
call
inc
stos
ja
pushf
cdq
inc
xor
jmp
jne
push
adc
or
cmp
sub
out
je
cmp
dec
mov
cmp
adc
mov
mov
(bad)
dec
pop
loop
out
mov
in
push
cmp
dec
int3
pop
mov
popf
lods
ficom
ins
mov
fwait
jae
mov
in
sub
and
sub
sbb
sbb
add
shr
loop
les
xchg
jae
ja
xchg
xchg
inc
mov
fistp
adc
mov
repnz
shl
add
(bad)
push
mov
or
daa
pop
adc
dec
mov
rcl
ins
mov
push
sti
es
shr
adc
xor
mov
test
scas
jno
cwde
xchg
inc
scas
inc
mov
test
cmc
inc
cmps
mov
inc
mov
dec
mov
mov
test
mov
popf
jns
and
cld
push
adc
out
ret
mov
cmp
loopne
loope
retf
dec
push
push
or
int
in
test
jns
test
xchg
lea
push
jl
push
cmp
pop
icebp
xchg
jp
xor
ret
pusha
cmps
stos
jae
nop
test
add
jbe
jge
add
pop
mov
int
stos
push
mov
xor
dec
test
aas
int3
inc
xor
mov
addr16
add
xor
pop
out
xor
push
cmps
jns
mov
sub
aaa
out
sub
or
aas
or
jne
xor
in
aam
leave
sahf
xor
jg
jge
jns
(bad)
mov
sar
in
xor
inc
lods
outs
mov
sub
cmp
push
and
add
ud2
sbb
jo
mov
mov
popf
jae
lods
jb
jnp
and
or
aas
fnstsw
push
sti
sub
or
dec
into
and
or
xchg
cdq
(bad)
jle
lods
jl
xchg
je
push
mov
cmc
dec
xchg
xchg
xchg
outs
aad
rol
jle
sub
add
icebp
movs
mov
xor
jp
cmp
cwde
jl
ins
mov
pop
pop
call
lods
push
cmp
xor
cli
and
std
cmp
or
pop
loope
add
push
or
push
int
lods
inc
mov
or
push
mov
mov
and
pop
movs
mov
xlat
pop
mov
push
test
ins
test
scas
mov
arpl
jecxz
cmp
adc
xchg
xchg
jbe
dec
mov
(bad)
sbb
sub
mov
fist
and
stos
dec
mov
enter
mov
outs
lea
fnstcw
and
int
shl
add
pop
lea
clc
push
lods
jae
ja
ja
xor
push
jmp
cdq
ja
jo
fwait
xchg
push
jnp
and
iret
sub
push
scas
(bad)
pushf
jnp
sub
or
cld
mov
dec
xor
cmps
imul
push
mov
ins
mov
les
jl
das
cli
and
das
out
outs
cmps
xchg
arpl
dec
(bad)
int3
push
(bad)
xor
daa
push
cld
dec
mov
mov
imul
ins
aam
mov
jae
jle
cdq
popf
inc
mov
pop
jmp
repz
xchg
sub
test
push
push
call
xchg
imul
call
mov
xchg
je
pusha
iret
and
shufps
and
dec
cmps
jae
or
cs
leave
sub
pop
(bad)
push
mov
mov
fiadd
data16
jne
cmp
aas
out
sti
pop
sbb
push
cmps
cdq
pushf
push
pop
sub
loopne
add
cmp
or
sub
add
pop
mov
ficom
jbe
push
mov
and
add
push
leave
pop
mov
mov
mov
adc
pushf
popa
ror
mov
jg
in
mov
xchg
lds
jge
pop
outs
stos
outs
pop
sub
sbb
cmp
lds
leave
xor
push
lods
mov
xor
jp
pushf
nop
jb
xchg
cwde
jo
add
jmp
imul
sbb
xor
cld
pop
lods
lods
imul
xor
dec
mov
add
loope
out
scas
dec
mov
call
push
mov
push
cmps
jnp
xchg
inc
enter
mov
mov
add
and
shl
(bad)
sbb
lock
jmp
xchg
jle
adc
mov
sub
mov
xchg
mov
test
test
repnz
shr
add
adc
inc
fisttp
push
mov
test
and
sub
dec
xor
adc
and
loop
retf
ss
mov
aaa
out
pop
shl
push
add
push
movs
test
xchg
cs
cs
xchg
or
mov
add
repz
leave
add
inc
mov
call
mov
inc
cmps
out
pop
test
icebp
dec
mov
mov
pop
xchg
out
and
les
pop
fnstsw
call
jb
add
in
jle
inc
fidivr
test
mov
mov
mov
(bad)
ss
or
ja
dec
mov
jge
xchg
js
movs
imul
sub
dec
fild
jmp
enter
outs
adc
push
xor
mov
mov
call
jmp
jnp
jnp
ds
inc
jecxz
clc
sahf
fdiv
or
push
shl
sbb
loopne
into
das
in
pushf
outs
into
sub
push
mov
imul
int3
push
es
sub
add
pop
cdq
mov
movs
dec
nop
dec
xchg
sar
cmp
adc
and
out
or
leave
sub
push
rcr
cwde
dec
aad
mov
jns
jne
xor
out
(bad)
xor
and
or
dec
stos
inc
mov
into
adc
es
push
loop
cmps
jne
repz
sub
cmp
mov
and
ret
lds
fst
mov
data16
add
push
lds
pop
pop
adc
and
outs
loop
leave
cmp
jle
dec
mov
daa
stc
sub
div
xor
sbb
or
outs
enter
out
and
jbe
je
sub
in
int3
cmp
sbb
sub
xor
add
jle
das
jmp
mov
cmp
mul
xor
push
scas
adc
dec
(bad)
cmp
pop
fcomp
jns
mov
movs
lea
dec
loop
(bad)
sub
ja
sub
mul
push
mov
ficom
in
pop
sbb
adc
pop
adc
sbb
pop
fsub
in
mov
call
fwait
dec
mov
mov
inc
into
pop
mov
call
add
xor
les
cmc
pop
xchg
inc
scas
arpl
fadd
push
or
mov
fs
and
xchg
inc
cmps
cdq
rcr
pushf
ins
xchg
out
and
popf
inc
mov
int
adc
popa
fdiv
adc
xor
cmp
int3
ss
push
and
inc
test
shr
sti
cmp
adc
and
or
in
adc
sbb
pop
shl
or
paddsb
cwde
in
dec
mov
test
xlat
ins
fild
test
pusha
stos
bound
xor
push
mov
nop
jno
in
sub
sub
push
xchg
cld
pop
scas
outs
fimul
jbe
jbe
ss
push
mov
mov
(bad)
push
mov
dec
mov
xor
loop
pop
in
fwait
mov
jmp
lahf
js
popf
test
or
dec
mov
sbb
jmp
add
shl
out
xchg
pusha
adc
aaa
loope
mov
ret
dec
fsubr
mov
leave
push
leave
sub
and
sub
sbb
mov
imul
popa
rcr
add
xor
dec
(bad)
jb
xor
jmp
sbb
pop
out
jb
(bad)
imul
fnsave
sbb
test
ss
aad
mov
push
sub
push
sbb
adc
adc
ss
pop
and
adc
xor
push
sti
xor
adc
dec
mov
lock
and
inc
std
dec
cld
movs
mov
mov
jne
mov
inc
aam
call
or
pop
aad
ror
add
pusha
cmp
imul
pop
adc
dec
and
(bad)
fs
shl
cld
and
sub
dec
sbb
cs
out
les
stc
nop
mov
xchg
jns
daa
into
or
push
add
adc
retf
pop
scas
xchg
dec
mov
jecxz
sar
and
mov
mov
fistp
pop
mov
mov
mov
push
std
pop
mov
ins
nop
fcomp
xchg
xor
cmp
out
xor
outs
movs
jo
ja
sub
or
cmp
nop
jb
js
push
lods
mov
(bad)
cmp
pop
mov
cmp
xor
out
dec
cmp
push
cmc
push
scas
ins
mov
inc
rcl
inc
mov
(bad)
and
sub
(bad)
cmp
cmp
pushf
jbe
rcl
jge
imul
fisubr
mov
or
add
fs
fldcw
cmps
popf
bound
adc
call
push
leave
push
add
int
clc
aaa
sbb
dec
mov
mov
xor
outs
cld
pop
scas
mov
cmp
mov
dec
mov
ret
dec
fmul
(bad)
jle
add
ins
stos
inc
mov
push
ret
loopne
out
repz
push
dec
or
xor
(bad)
xor
lds
rcr
fmul
repz
jne
mov
call
cdq
outs
retf
or
dec
mov
sti
sub
push
add
fbld
repz
jmp
cmp
pop
mov
in
jns
arpl
dec
jmp
sbb
out
aaa
cmc
dec
mov
cmps
mov
aam
hlt
inc
shl
xor
clc
es
mov
fwait
addr16
ret
xor
add
and
push
or
call
jl
sahf
dec
add
sub
cmp
daa
push
les
xor
jecxz
sti
dec
fsubr
rol
cmps
cmps
int
movs
jnp
pop
imul
sbb
sbb
jg
stc
cmp
dec
lods
lahf
xchg
inc
stos
stos
jo
xor
cmp
and
dec
or
rcr
(bad)
jbe
nop
das
pop
ret
pop
aad
lock
shr
hlt
pop
or
pop
add
pmaddwd
sbb
pop
mov
cmp
cmp
outs
mov
std
xor
stc
cs
pop
add
aaa
call
loopne
mov
(bad)
daa
cmp
das
lock
cmp
gs
xor
xor
dec
(bad)
cmp
bound
add
sub
push
repnz
pop
xchg
cmp
data16
repz
mov
call
lods
jo
sub
out
sub
sti
call
adc
push
pop
adc
and
or
adc
and
stc
and
add
cwde
xchg
js
test
cmp
mov
dec
out
mov
jbe
cwde
fwait
inc
out
dec
fbstp
jmp
pop
cmps
jae
gs
sbb
hlt
push
mov
lock
fwait
dec
enter
leave
cmp
cmp
in
push
lds
ins
ficomp
pushf
mov
call
xchg
mov
xchg
mov
mov
jp
or
or
add
daa
loop
mov
xchg
and
test
lea
into
sub
pop
lds
sbb
lods
pushf
push
rol
pop
(bad)
pop
mov
jle
sub
cmp
push
mov
push
scas
dec
mov
ficomp
jecxz
inc
or
adc
mov
mov
arpl
inc
test
je
fadd
sbb
cs
push
iret
add
cdq
test
call
xlat
jb
sub
sub
push
test
(bad)
jge
add
sbb
ss
pop
movs
inc
mov
pop
mov
sahf
cdq
jne
dec
xor
pusha
into
dec
mov
repz
and
push
adc
ret
lods
mov
dec
mov
je
nop
xchg
js
add
cli
cs
sar
test
or
mov
fwait
outs
retf
in
mov
add
cmp
dec
cmps
mov
xchg
fwait
pushf
imul
and
xor
das
or
sub
jmp
aaa
adc
cmp
and
lds
(bad)
and
jnp
add
loopne
(bad)
sub
popf
cmps
ins
lods
jae
adc
in
inc
xchg
xchg
icebp
push
frstor
ret
not
idiv
pop
movs
js
outs
(bad)
in
inc
stos
xchg
jns
dec
test
mov
inc
les
dec
fisub
jmp
and
loopne
movs
imul
jbe
xor
daa
std
xor
and
and
pop
lods
dec
mov
and
test
call
or
mov
data16
aad
xor
cs
and
pop
iret
add
cmp
shr
push
shr
lock
mov
push
lods
popf
jno
jns
mov
fcomp
pushf
inc
fbld
mov
xlat
jb
ja
sub
cld
and
jge
mov
mov
xchg
(bad)
(bad)
test
push
retf
push
icebp
dec
xor
adc
inc
mov
data16
dec
mov
jl
nop
test
call
inc
iret
dec
shl
cmp
pop
jmp
ins
aaa
sbb
inc
mov
out
jmp
mov
fcom
jae
daa
sbb
pop
lods
jl
jns
mov
mov
into
sub
pusha
rcl
outs
mov
je
xchg
popa
test
out
mov
mov
inc
adc
push
sar
pop
(bad)
jne
js
push
movs
fimul
fwait
xor
sub
xor
je
jmp
retf
cmp
xor
dec
int
pop
leave
add
sbb
or
cmp
dec
fnsave
inc
mov
jae
mov
sbb
aas
push
dec
iret
and
sbb
jl
push
mov
sub
pop
loope
or
aas
(bad)
and
dec
mov
jg
call
mov
xchg
imul
sbb
mov
test
pop
scas
lahf
data16
cs
add
xor
push
xlat
cmp
nop
data16
xor
(bad)
popa
shl
push
mov
inc
enter
das
rcr
inc
mov
xchg
dec
(bad)
ss
xor
add
cmp
push
mov
(bad)
or
xchg
xchg
jp
xchg
xchg
mov
cmps
data16
xor
cmp
xor
xor
retf
push
lods
dec
(bad)
cmp
icebp
pop
mov
cdq
dec
fistp
cld
and
dec
mov
mov
arpl
and
or
or
add
dec
or
hlt
sub
ficomp
xchg
jg
cwde
ins
mov
cdq
inc
cmps
bound
stos
inc
mov
pop
mov
push
mov
mov
xchg
call
pusha
fnstenv
push
in
xor
cmp
adc
std
and
cmp
mov
mov
sbb
push
int
sbb
pop
mov
retf
adc
(bad)
and
or
pop
nop
ins
sub
inc
lock
dec
retf
xor
enter
pop
mov
fst
push
cmp
sub
gs
dec
mov
rol
pop
mov
adc
xor
push
fistp
push
sub
icebp
mov
std
push
fild
idiv
jle
arpl
push
leave
ud0
mov
jnp
inc
mov
fbld
mov
call
dec
nop
aam
lds
test
jbe
pop
shl
call
mov
ficomp
adc
fcom
jbe
test
jle
inc
sub
push
pop
out
jno
pop
mov
jae
xchg
jae
fld
mov
mov
pop
test
ins
mov
fnstsw
in
pop
out
idiv
daa
and
adc
push
mov
or
arpl
cmp
dec
in
iret
cmp
es
add
in
lock
mov
fisubr
dec
stc
gs
push
aad
(bad)
sub
jb
inc
bnd
dec
iret
inc
(bad)
and
ja
jle
inc
mov
fstp
push
std
jae
sbb
or
dec
fistp
addr16
sub
pop
shl
jmp
ss
div
push
push
in
lods
jne
lea
or
xor
mov
fldenv
add
pop
or
shr
and
stos
scas
ins
test
pusha
sti
sub
movs
popa
mov
sub
add
push
mov
xchg
inc
test
push
aam
sbb
xor
outs
mov
xor
les
out
mov
jle
push
jb
int
stos
dec
mov
jne
jae
dec
xchg
not
test
arpl
and
push
mov
push
sub
mov
test
or
das
jmp
mov
inc
(bad)
adc
sahf
xchg
mov
mov
aas
pop
pop
ret
or
pop
mov
dec
mov
add
pop
mov
cmc
add
xchg
push
add
pop
sbb
lock
sti
xor
retf
adc
cli
mov
add
adc
adc
sbb
arpl
xchg
jmp
xchg
std
inc
xchg
sub
bound
cli
jb
add
cdq
sub
pop
jmp
xchg
sar
sub
push
clc
data16
add
popa
cmp
inc
ins
pop
cmp
jae
pusha
ror
(bad)
sub
pop
mov
cld
mov
push
mov
retf
ret
(bad)
push
and
movs
adc
addr16
pusha
push
dec
call
outs
dec
cmc
push
das
cwde
dec
sub
mov
push
jmp
push
add
inc
imul
retf
adc
jp
jmp
cdq
not
mov
loop
int
jle
lahf
cdq
and
cmps
fldcw
rol
mov
ror
mov
mov
pop
push
push
pop
adc
add
addr16
add
mov
sub
sbb
xchg
dec
dec
mov
inc
retf
push
out
stc
repnz
stc
pusha
rcr
push
popf
mov
push
out
jge
in
ss
xchg
mov
xor
pushf
movs
jge
cmp
or
loope
sbb
inc
int3
rol
in
lods
pop
leave
in
fs
inc
sub
idiv
shl
xchg
mov
inc
or
sbb
mov
cmp
xchg
add
pop
loope
nop
inc
fsubr
jle
xor
jb
lahf
cmp
adc
adc
dec
call
sub
xchg
in
xor
sub
jb
xor
jb
(bad)
stos
lock
jnp
iret
in
clc
jmp
movs
mov
dec
scas
mov
xlat
(bad)
scas
jo
je
jge
dec
movs
dec
pushf
sbb
js
mov
sub
cmps
int3
pop
vpperm
mov
int
fs
movs
push
cmp
xlat
ror
push
std
(bad)
adc
cmp
xchg
mov
fst
pop
add
call
shl
cwde
pop
push
sbb
stos
push
pop
mov
stos
inc
dec
sub
(bad)
aad
adc
cmp
fimul
mov
cmp
into
mov
jge
mov
imul
and
in
mov
sbb
aas
xchg
mov
movs
scas
(bad)
fsubr
imul
int
inc
aad
jle
jbe
dec
pop
jmp
pushf
xchg
and
(bad)
ss
or
into
cmp
or
inc
xchg
imul
arpl
sbb
popf
xor
sub
mov
pop
mov
lock
mov
(bad)
cld
push
neg
call
fadd
cmc
xor
aam
mov
adc
inc
fnstcw
pop
in
push
and
push
in
pop
dec
cmps
ret
mov
rcr
fimul
and
jecxz
add
mov
enter
out
packsswb
outs
push
pop
ret
jge
adc
rol
and
adc
and
stos
push
or
sub
jae
ins
popa
jg
fwait
sbb
imul
fwait
lds
push
inc
hlt
jge
push
fnstenv
clc
xor
inc
adc
pushf
adc
adc
loopne
push
jp
cmp
add
fstp
(bad)
arpl
cmps
xchg
adc
mov
mov
mov
shr
cli
stc
sbb
push
jp
pop
push
retf
das
out
or
(bad)
ror
inc
(bad)
fidivr
ins
sub
sub
jge
or
(bad)
dec
mov
les
inc
xchg
arpl
in
push
arpl
or
ss
or
mov
xchg
mov
mov
imul
jnp
sbb
hlt
gs
jnp
push
leave
ja
jg
repnz
sub
sbb
lahf
popa
cmp
xchg
sti
inc
xchg
jb
ret
xlat
adc
sbb
adc
cdq
data16
xchg
pushf
(bad)
dec
adc
(bad)
jb
lea
pusha
jg
mov
xlat
cdq
xor
xchg
and
test
push
fbld
jns
outs
add
call
jb
lods
sub
push
push
cmc
adc
mov
mov
sub
enter
add
jae
not
or
aam
or
push
int3
sbb
inc
cdq
mov
jbe
push
push
inc
fld
js
or
fst
lods
mov
inc
inc
mov
pop
or
fnstsw
and
leave
inc
adc
fsubr
or
mov
sub
cdq
sbb
sbb
int3
(bad)
jo
test
inc
adc
cmc
cs
ins
dec
aaa
mov
pop
dec
cs
xchg
or
pop
dec
inc
xchg
xchg
xor
push
dec
mov
scas
sbb
ja
ds
inc
ja
popa
ror
aas
(bad)
lods
lock
cmps
(bad)
aam
fld
xor
xchg
cmp
inc
push
xor
(bad)
push
push
outs
xchg
fcom
mov
movs
dec
das
mov
push
in
xchg
or
sub
or
adc
lods
dec
adc
jns
and
idiv
jg
into
jge
add
sub
in
xchg
jne
lods
mov
mov
ret
or
loopne
cmp
cmp
and
fmul
shl
adc
xor
rcl
call
push
(bad)
adc
imul
inc
cmp
shl
inc
mov
cdq
mov
popf
sbb
mov
mov
mov
sbb
mov
or
xor
xchg
and
dec
or
mov
xor
(bad)
mov
popf
mov
jg
je
inc
popa
pop
fdiv
call
jne
and
push
or
scas
and
cmp
cmps
fimul
mov
test
ins
jp
in
js
jmp
dec
mov
dec
loop
dec
add
icebp
add
push
std
push
jne
lods
ret
call
jecxz
pop
retf
inc
sahf
mov
sub
mov
fst
neg
xchg
sbb
lods
and
sbb
call
jae
test
xor
or
fsubr
ja
inc
jmp
addr16
cdq
dec
jl
xor
dec
pop
stos
cwde
xchg
pop
xor
push
adc
movs
hlt
sti
test
rcl
sahf
lds
data16
ins
dec
sbb
mov
sar
bound
js
xchg
js
mov
lods
mov
mov
enter
fdivr
lahf
mov
xor
cdq
push
pop
mov
std
in
and
arpl
cmps
xor
fldlg2
or
jae
mov
xor
out
sub
jae
stc
mov
jp
jns
jns
sub
mov
push
dec
jns
test
mov
bound
mov
jne
sahf
movs
add
jl
mov
xchg
pop
retf
push
or
mov
and
cmp
in
and
inc
jne
gs
and
xor
clc
push
mov
push
mov
call
out
out
pop
jns
xor
add
shr
adc
mov
cld
pop
and
jnp
nop
cdq
iret
adc
out
mov
dec
bnd
sbb
leave
cmc
jg
push
in
mov
or
test
xlat
cmps
ret
data16
or
rcl
jge
inc
adc
retf
test
(bad)
arpl
out
sbb
mov
dec
stos
xchg
call
ror
repnz
dec
push
mov
add
jmp
call
in
iret
rcl
pop
jno
test
dec
cmp
xchg
shr
test
(bad)
jecxz
vmovdqa
add
bound
pop
lods
icebp
sub
xchg
xchg
inc
xor
pop
push
popa
repz
in
jnp
dec
cli
inc
ja
or
jo
cmps
push
and
in
cmc
mov
sbb
leave
jb
ss
or
aad
out
jecxz
jne
sbb
hlt
push
push
sub
mov
es
mov
shl
mov
shl
add
push
cmps
push
mov
pushf
add
mov
ret
xchg
imul
mov
and
jo
inc
mov
mov
lock
fistp
pop
sub
fistp
in
add
cmps
mov
cld
and
popa
sbb
(bad)
mov
push
inc
or
and
shr
xchg
rcl
movq
test
adc
stos
sub
test
rcr
dec
out
dec
pushf
hlt
add
cmps
outs
neg
lea
nop
fwait
and
add
xchg
lods
mov
xchg
shl
outs
lock
push
les
push
jnp
into
not
or
push
outs
xlat
sahf
lods
imul
ins
push
push
xor
mov
fnsave
xchg
mov
cdq
jp
js
and
sub
jbe
xchg
add
mov
and
pusha
push
cmp
mov
fsub
mov
mov
call
or
fcomp
loopne
push
loop
test
or
fadd
ds
or
xor
xchg
fcmovu
mov
and
aad
push
mov
call
fst
popa
jo
aas
ins
mov
xchg
xchg
jns
sahf
mov
leave
push
lahf
xchg
pop
dec
mov
sub
(bad)
push
sub
pusha
aad
mov
fstp
jmp
shr
and
inc
data16
nop
test
gs
jbe
(bad)
aam
dec
sahf
sar
cmc
mov
stc
mov
in
mov
adc
mov
daa
push
lea
jle
mov
pop
(bad)
pop
hlt
mov
std
sub
mov
sbb
inc
scas
xchg
mov
or
loope
jmp
cmp
and
data16
inc
xor
shl
and
mov
fs
jmp
jbe
scas
fwait
mov
inc
nop
mov
push
fs
nop
js
loope
cs
aas
push
or
push
push
jmp
iret
int3
jl
lea
or
jno
jnp
(bad)
(bad)
(bad)
arpl
dec
aam
loope
lods
enter
mov
(bad)
sbb
mov
dec
nop
aaa
add
push
pusha
test
sbb
lds
cmp
sbb
mov
movs
jns
rcl
es
in
pushf
sub
pslld
cmps
(bad)
ds
sub
push
add
push
movs
dec
mov
push
cmc
int3
sub
ins
push
stos
sbb
idiv
daa
movs
js
sub
pop
xchg
repnz
and
imul
int3
add
mov
(bad)
jo
je
cmp
repnz
cmps
cs
ret
and
cwde
int
cmp
mov
popa
das
pop
(bad)
js
xchg
dec
push
inc
jle
pop
outs
call
pushf
sbb
(bad)
call
and
and
xlat
cmp
pop
jne
sub
push
adc
iret
pushf
iret
sbb
inc
mov
jl
scas
out
(bad)
call
movs
and
aas
out
adc
adc
xor
hlt
xchg
push
leave
push
mov
xchg
inc
fs
gs
sbb
aam
jecxz
(bad)
mov
adc
enter
adc
mov
or
leave
pop
jmp
push
add
and
cwde
jno
xchg
add
sti
ins
or
fwait
mov
bound
fcomp
adc
(bad)
scas
leave
sub
data16
addr16
(bad)
jmp
in
add
das
(bad)
out
pusha
xchg
ret
test
mov
test
pop
xchg
or
lea
jge
xlat
cli
xor
movs
push
push
add
inc
mov
mov
dec
pop
cdq
mov
cld
pop
mov
add
cmps
sbb
cmp
mov
add
loop
mov
in
fbstp
or
lods
and
pop
push
loopne
push
fwait
aas
add
cmp
mov
mov
jnp
ret
ja
aas
push
add
push
shl
loop
dec
adc
std
and
or
mov
cmps
push
imul
lods
test
out
imul
lock
cmc
std
push
cmp
lods
mov
push
sbb
(bad)
xlat
(bad)
pop
dec
cdq
lods
and
fadd
sbb
clc
or
push
es
aas
cld
cmp
inc
push
aad
inc
push
jl
mov
push
fcomp
pop
lods
rcr
fisttp
fdivp
cdq
or
sbb
push
sub
cmp
aas
into
mov
sbb
pusha
dec
ret
stc
aas
js
pop
aaa
mov
dec
out
jl
aam
dec
xor
xchg
xor
xor
fnstsw
int3
or
inc
js
movs
add
mov
cmp
inc
lods
mov
inc
outs
out
inc
cwde
jnp
imul
mov
add
push
ins
pop
nop
inc
inc
xchg
cmp
mov
add
fist
mov
nop
jae
push
push
jb
cmp
loop
or
std
fcmove
xchg
dec
xlat
scas
push
(bad)
jne
jo
adc
movs
icebp
jbe
test
xlat
gs
push
push
lds
jmp
data16
das
bound
jmp
dec
and
or
repnz
pop
jmp
dec
or
je
adc
jmp
push
and
out
xchg
inc
js
mov
jae
mov
adc
sbb
push
ins
jmp
sub
and
mov
push
dec
retf
pop
call
aas
cmp
mov
fstp
scas
mov
sbb
fadd
mov
out
outs
dec
add
xor
bound
imul
or
in
push
push
ja
icebp
mov
leave
dec
outs
sbb
push
(bad)
mov
adc
mov
mov
push
xlat
cli
outs
aam
out
pop
mov
cmp
sbb
add
mov
jb
cmp
je
push
fstp
push
mov
mov
sti
dec
sub
xor
mov
pop
lds
stos
test
xchg
xchg
in
mov
movs
add
inc
imul
inc
daa
gs
out
clc
add
in
retf
jmp
pop
test
movs
bnd
xlat
xor
int3
mov
xchg
pop
sar
inc
lea
stos
icebp
popf
stos
js
jns
shl
sbb
pop
push
bnd
dec
inc
or
mov
in
or
sbb
test
mov
rol
loopne
xchg
je
and
pmaddwd
gs
sahf
xchg
jl
cdq
retf
cli
jns
ret
sbb
adc
sti
test
pop
ds
std
test
pop
(bad)
fsubr
push
mov
mov
stos
daa
stos
fs
shr
jns
sar
call
(bad)
cmps
add
movs
xchg
xchg
fstp
std
jl
adc
aaa
or
fiadd
pop
loopne
mov
push
and
in
sbb
push
mov
ins
mov
mov
mov
add
cmps
add
push
xchg
mov
rcr
xlat
data16
movs
out
std
rol
daa
mov
test
push
dec
sahf
mov
or
mov
cmp
push
aas
sub
cmp
mov
sbb
dec
or
dec
mov
adc
sub
int
mov
inc
rol
pop
adc
hlt
addr16
xchg
sbb
test
not
(bad)
rol
cld
mov
popf
pop
mov
iret
xor
pusha
(bad)
repnz
retf
xor
movs
jp
lods
cmp
and
xchg
adc
addr16
pop
rcl
test
dec
fdivr
add
ins
fisttp
das
mov
dec
nop
mov
lahf
movs
fsub
sub
mov
jmp
push
and
sub
fbstp
mov
movs
aad
mov
jge
sahf
adc
mov
jecxz
inc
in
pop
push
and
ret
cmp
jmp
rol
ja
sub
or
rol
and
xor
fild
mov
jb
pusha
mov
jmp
lock
retf
push
adc
mov
jmp
int3
pop
sub
mov
sbb
scas
push
imul
inc
fiadd
mov
sbb
scas
inc
aad
xchg
and
mov
nop
push
fdivr
sub
push
mov
bound
push
imul
push
cmps
dec
das
push
mov
xor
dec
(bad)
pop
aas
mov
xchg
outs
inc
mov
mov
and
mov
sti
mov
pop
pop
daa
movs
ins
dec
pop
lods
int
ret
dec
pushf
lds
sub
in
push
out
nop
push
dec
xor
dec
xor
jmp
jmp
sar
push
adc
es
cmp
mov
jle
pop
iret
and
xchg
mov
inc
push
int3
mov
add
sbb
cmps
(bad)
imul
iret
mov
xchg
scas
jns
sub
test
mov
add
xor
cs
dec
jecxz
rcl
xor
xchg
jb
sub
or
aam
cmp
mov
and
or
arpl
or
in
dec
gs
rcr
sub
leave
rol
js
ins
xor
rol
push
imul
xor
jmp
and
stos
test
xchg
pop
jmp
fistp
aaa
sti
adc
(bad)
in
cs
xchg
out
inc
gs
xor
and
fcom
mov
les
pop
data16
loop
repz
push
repz
push
mov
mov
or
out
or
stos
scas
jae
inc
adc
or
lock
and
adc
stos
push
ins
(bad)
sbb
push
push
sbb
dec
fwait
xchg
xor
sub
adc
push
retf
jecxz
cmps
cwde
or
je
inc
in
int
in
movs
and
(bad)
pop
inc
shl
(bad)
das
pop
fisubr
lahf
stos
sahf
arpl
fcom
ficomp
inc
movs
daa
adc
cmp
dec
and
(bad)
fiadd
pop
jbe
and
cmp
pusha
test
sbb
cmp
mov
jg
or
clc
jecxz
iret
mov
(bad)
pop
retf
inc
jle
lock
jb
mov
aam
lahf
pop
imul
cmp
dec
sar
sbb
cdq
and
dec
mov
dec
xlat
xchg
xchg
fld
enter
xor
sub
inc
mov
or
fidivr
test
mov
cdq
jmp
adc
pop
push
mov
add
out
pop
rcl
sub
cmp
and
add
lds
adc
pop
sbb
dec
call
xor
sbb
mov
icebp
pop
pop
je
(bad)
repz
fidiv
or
push
cli
imul
shr
arpl
outs
rcr
cmps
push
push
ror
xchg
sub
test
sbb
sbb
in
sbb
sbb
ins
repz
hlt
out
ret
push
add
and
mov
adc
ror
ret
cwde
mov
and
push
jmp
rcr
das
movs
sbb
jnp
mov
push
lock
inc
inc
adc
loope
xor
push
repz
das
(bad)
or
cmps
stos
xor
mov
mov
aad
test
mov
jmp
mov
scas
retf
adc
or
out
push
in
fcomp
lods
inc
outs
pop
sti
rcl
inc
pop
mov
imul
dec
call
sbb
cmp
dec
mov
adc
pop
or
xchg
ins
loope
mov
dec
jae
in
mov
(bad)
dec
mov
stos
daa
or
imul
in
sub
mov
cmp
stos
push
pop
jns
push
mov
jae
mov
sbb
stc
cli
call
cmp
pop
inc
push
out
leave
xchg
lahf
jge
xlat
mov
jmp
aad
fbld
sbb
scas
or
mov
adc
xbegin
nop
jae
mov
nop
int3
cwde
(bad)
arpl
jno
jp
dec
fcomp
mov
sbb
jo
pop
(bad)
cdq
in
(bad)
test
out
inc
fsub
int
xchg
inc
fwait
mov
aaa
xor
and
inc
mov
xlat
test
jno
jnp
leave
js
das
xchg
in
add
xchg
push
add
ins
mov
aad
ins
jno
and
aaa
loopne
clc
push
adc
jge
jle
cmp
jno
mov
fdiv
(bad)
fwait
hlt
scas
hlt
ss
and
dec
outs
xor
in
adc
mov
xchg
push
fidiv
lods
shl
lahf
fnstenv
(bad)
mov
jmp
and
cmp
mov
jnp
icebp
sbb
movs
lock
xchg
ror
adc
test
xchg
dec
jno
cwde
repz
aas
jbe
int3
push
rcr
cmp
std
(bad)
push
outs
aas
adc
jo
addr16
jmp
sub
cmps
loop
mov
xchg
jge
or
or
cmps
xor
or
fmul
push
outs
inc
and
dec
jge
or
mov
stc
lods
out
mov
pushf
xor
stc
iret
push
movs
fucompp
outs
aas
cdq
scas
loope
sbb
je
mov
lea
pop
dec
and
movs
or
rcl
sbb
int
gs
hlt
ret
aad
repnz
lea
sti
mov
ret
mov
adc
dec
int3
sbb
cmps
repz
mov
test
xor
repz
pop
js
das
movs
inc
mov
push
push
inc
outs
mov
pop
adc
arpl
adc
mov
adc
jbe
fsubrp
and
jae
mov
out
sbb
stc
add
add
fs
bound
push
dec
xor
inc
ins
fbstp
stos
push
pop
mov
outs
js
sbb
add
jecxz
pop
fcom
popa
mov
xchg
push
cmp
push
cmp
inc
pop
pop
sub
jae
push
repnz
out
mov
(bad)
jmp
pop
in
xchg
and
outs
pop
pop
or
fwait
stos
mov
cmps
and
es
stc
or
cmp
(bad)
retf
fdiv
ret
pop
call
mov
dec
mov
mov
ret
xor
sub
sahf
gs
icebp
fild
push
xchg
and
dec
pop
or
sbb
pop
sbb
inc
popa
imul
rcr
xor
sub
ds
ffreep
and
ins
inc
jo
mov
cmc
sub
outs
pop
and
cmp
xchg
cmp
ficom
int
bswap
mov
ins
or
daa
jl
bound
mov
xchg
sub
mov
mov
clc
out
sbb
jl
sub
or
or
es
sbb
int
popa
pop
add
aam
loop
add
add
(bad)
fidiv
aas
mov
aam
jnp
loope
xchg
dec
xchg
xchg
jmp
sub
(bad)
fsubr
inc
dec
bound
xchg
push
inc
leave
pop
rol
shr
in
hlt
sahf
shl
rcl
and
hlt
sub
cmc
push
std
enter
pop
movs
hlt
cs
lahf
scas
in
pushf
pushf
fdivr
(bad)
jo
add
das
add
mov
push
aad
add
push
nop
aad
inc
mov
dec
mov
aaa
mov
cdq
mov
das
jno
outs
inc
(bad)
gs
push
in
in
and
pop
inc
cmp
mov
xchg
or
jns
stos
mov
enter
fdivr
(bad)
loopne
fistp
inc
iret
sub
mov
mov
dec
mov
push
fld
pushf
xchg
shl
adc
xor
cmp
mov
mov
sbb
loop
push
daa
pop
in
sbb
rcr
pushf
and
xor
(bad)
aas
shl
cmps
pop
push
jmp
sub
jmp
jmp
cmp
push
movs
mov
cmps
test
ja
mov
adc
push
fsub
stc
ret
fidiv
add
mov
movs
jnp
cld
push
imul
in
jmp
and
mov
inc
jg
data16
rcl
sub
lahf
xchg
inc
movs
pop
push
jb
into
(bad)
jbe
(bad)
shl
iret
int3
jmp
push
add
push
fs
mov
and
int3
mov
jge
call
outs
ins
dec
loop
lahf
mov
xchg
push
add
enter
lea
sbb
ss
fidiv
sbb
std
mov
cmp
mov
dec
mov
rcr
pop
stos
pop
dec
cmp
dec
adc
pushf
fbld
mov
sbb
pop
daa
jecxz
out
xor
and
das
(bad)
call
jl
lods
add
and
jo
pop
pop
pop
scas
daa
aaa
xor
jno
retf
sub
fdiv
fmul
xor
mov
arpl
xchg
mov
repnz
inc
inc
mov
(bad)
fidiv
add
icebp
cmps
cs
sbb
and
imul
jecxz
rcl
sub
call
rcl
jg
faddp
push
int
mov
push
je
inc
ins
xchg
mov
mov
pop
xor
cmp
and
es
std
sbb
add
out
push
in
daa
push
imul
pop
ret
(bad)
mov
xchg
mul
fbld
imul
icebp
cmp
dec
sbb
(bad)
mov
xchg
xlat
and
aas
pop
loopne
fsubr
scas
jbe
and
icebp
jmp
retf
das
sub
out
jb
pop
sbb
cmp
or
adc
je
pushf
and
pop
cld
add
mov
mov
cmc
or
push
mov
addr16
pop
imul
retf
std
mov
inc
scas
in
ins
ja
adc
in
mov
inc
adc
xor
int
pop
ss
adc
fs
push
(bad)
dec
sbb
mov
outs
sub
xchg
mov
out
fsub
adc
push
inc
cmps
lahf
outs
mov
jne
shl
lea
mov
scas
add
mov
jbe
lds
rol
cwde
loopne
cmp
jl
imul
scas
sub
push
mov
mov
or
cmp
rcr
sub
shl
cmps
cmp
mov
push
sbb
mov
inc
push
mov
das
sbb
rcr
adc
push
int3
xlat
mov
xchg
mov
lods
cmps
dec
(bad)
adc
xor
sub
fldenv
iret
pop
mov
xor
pop
xchg
in
out
fnsave
dec
ins
xchg
or
lea
mov
in
xor
pop
test
pushf
stc
fwait
push
addr16
sbb
and
cmp
add
jmp
xchg
xchg
popf
mov
fmul
pop
jae
fldenv
test
jb
inc
(bad)
sbb
ins
sbb
lods
xchg
adc
loopne
div
dec
(bad)
sbb
mov
stos
ins
loop
jo
or
daa
mov
inc
shr
sbb
fdiv
xchg
xor
sbb
movs
sub
jo
pop
shr
xchg
in
test
inc
ins
xor
sbb
xor
retf
push
das
ret
cmps
push
dec
jmp
xor
xor
pop
out
jne
jmp
scas
or
sti
test
pushf
nop
and
cmp
jb
jno
popf
inc
imul
mov
pusha
leave
cmps
data16
dec
jle
ss
pop
pop
push
adc
sub
lahf
aaa
pop
push
sub
aaa
sbb
mov
mov
outs
std
jge
mov
pushf
fisttp
push
mov
gs
mov
sbb
inc
sub
pop
mov
cdq
not
add
lea
enter
pop
adc
loopne
lds
cmps
sub
or
pop
bound
xchg
mov
(bad)
in
(bad)
(bad)
xchg
pop
cmp
icebp
cmp
scas
bound
push
cmp
fcomi
shr
dec
push
mov
dec
(bad)
rcl
mov
mov
movs
sti
add
mov
scas
popf
xchg
repnz
loop
xor
pop
jmp
rcl
nop
aad
(bad)
out
adc
loopne
outs
daa
dec
cmps
rcr
cmp
and
stos
sbb
add
sahf
pop
outs
jmp
mov
mov
mov
sbb
(bad)
sti
push
xor
fs
out
dec
daa
sbb
jge
ds
sbb
dec
dec
jp
lods
or
movs
pop
sub
add
push
cmp
inc
mov
xchg
shl
ins
icebp
popa
or
mov
or
or
ror
pop
adc
jb
mov
mov
mov
and
cmp
das
mov
dec
pop
push
inc
lods
in
mov
hlt
pop
jb
in
retf
xor
mov
sub
int3
(bad)
push
aas
cmp
repnz
xchg
(bad)
sbb
call
mov
xchg
cmps
dec
mov
cmp
pop
cld
dec
fsub
test
stc
shr
inc
pop
mov
sub
dec
cmp
fcomp
jb
or
xor
je
jne
nop
mov
and
jmp
cmp
aas
inc
div
or
dec
call
xor
repnz
shl
ins
cld
push
cmp
bound
rcl
rol
or
cmps
jp
inc
dec
shl
stos
and
in
out
mov
ins
fmul
mov
cs
sbb
loopne
push
or
rcr
iret
adc
jp
cmp
adc
pop
jmp
(bad)
and
fstp
addr16
dec
sub
add
popa
push
ret
icebp
xor
or
(bad)
imul
jge
int
shl
pushf
xchg
add
jg
hlt
sub
ins
jne
(bad)
lock
xchg
push
mov
jmp
dec
dec
arpl
movs
seta
adc
xor
scas
jmp
je
dec
and
inc
sbb
xchg
xchg
fcmovnu
jecxz
add
jl
cwde
adc
mov
(bad)
js
push
inc
pop
and
shr
mov
test
cmp
mov
aas
fcomp
sub
ret
jns
jg
sub
fs
fs
mov
retf
xchg
mov
fwait
loop
mov
xor
sbb
push
sub
mov
or
xor
xchg
and
inc
test
pop
shl
sub
sub
outs
sbb
and
mov
scas
pop
add
out
movs
jb
xor
inc
movs
outs
xor
inc
push
(bad)
ins
pop
jno
imul
dec
mov
cmp
imul
stos
dec
pop
stos
mov
(bad)
sub
sti
retf
fistp
and
mov
cmp
add
jnp
bound
xchg
mov
sbb
jmp
movs
jge
mov
test
call
push
call
inc
in
pop
int
popa
inc
cmp
jp
push
jo
sbb
jmp
jnp
addr16
(bad)
popa
mov
movs
sar
mov
stos
add
push
inc
cmp
jnp
sbb
mov
mov
pop
lahf
or
lds
popf
pop
stc
ins
jnp
cmp
push
in
lods
add
das
lss
adc
adc
ret
hlt
fist
sbb
retf
repz
adc
mov
dec
into
ins
jl
xor
enter
jo
jo
lods
dec
push
ds
idiv
cmps
cld
xchg
mov
jo
idiv
jmp
mov
adc
mov
fcmovbe
pop
jns
ret
xor
mov
and
adc
inc
dec
cmp
cmp
add
jbe
or
stos
cmps
mov
loop
es
aam
mov
stc
jge
cmp
sahf
cdq
inc
cs
mov
jp
lock
gs
rol
mov
mov
frstor
call
xchg
jmp
adc
xchg
push
test
mov
fcom
dec
add
add
out
shl
scas
fisttp
dec
ins
popa
mov
je
add
jne
or
push
(bad)
in
mov
or
mov
mov
fnstenv
sbb
pop
ins
xlat
mov
inc
sbb
daa
inc
sbb
pop
fstp
jns
adc
mov
loop
mov
pop
cmps
jae
out
ins
inc
mov
je
(bad)
aaa
rcr
mov
adc
jmp
scas
lods
fwait
mov
jg
push
ficomp
jg
nop
push
rol
or
xor
clc
xchg
inc
dec
and
and
repz
mov
mov
jmp
cmps
pop
dec
sbb
fidiv
push
ror
test
or
retf
in
dec
ret
sub
dec
gs
ja
shl
or
mov
and
push
pop
js
jge
pop
ins
leave
and
sbb
mov
scas
push
(bad)
imul
inc
push
jmp
enter
outs
mov
sbb
xchg
lea
mov
mov
(bad)
dec
mov
adc
movs
lds
sub
xor
xor
cwde
fist
cmp
sub
aad
(bad)
pop
jecxz
(bad)
pop
jnp
cwde
popa
jns
or
dec
sbb
fwait
sahf
aam
inc
and
adc
pop
jmp
jae
adc
mov
jp
xchg
movs
ds
jmp
(bad)
outs
loop
cmps
sar
repnz
mov
pop
ficom
mov
and
(bad)
aad
mov
mov
xor
mov
lods
(bad)
lods
sub
pop
push
int3
jp
mov
xchg
dec
iret
add
test
sti
sahf
stos
repnz
jle
inc
jl
clc
retf
pushf
cmp
popa
pusha
mov
or
mov
clc
jle
mov
sub
ins
lods
fld
mov
jbe
fidivr
por
xor
fist
mov
pop
sbb
popf
gs
in
in
dec
addr16
pushf
mov
fidiv
lods
ror
ret
dec
and
mov
and
push
adc
retf
cmp
cmp
inc
pusha
add
cmp
and
(bad)
je
setp
(bad)
push
cwde
ins
mov
sar
jbe
xor
pop
and
aas
imul
enter
std
jg
xchg
popf
in
pop
inc
xchg
xor
cmp
repz
jns
scas
call
imul
stos
mov
movs
inc
cmp
addr16
dec
or
pop
movs
add
idiv
fs
(bad)
test
lds
int3
cmps
mov
jns
pushf
and
lods
lea
dec
aas
xor
ret
xchg
dec
mov
je
or
jnp
test
(bad)
call
mov
mov
adc
jne
test
lods
gs
mov
xchg
mov
add
inc
jne
int
(bad)
jp
jle
adc
loop
add
or
dec
mov
stos
(bad)
mov
xchg
call
xchg
jg
push
or
push
call
pop
or
arpl
pop
pop
jb
mov
lods
es
leave
int
es
mov
int3
iret
scas
inc
push
cmp
(bad)
mov
adc
add
rcl
(bad)
sti
test
fwait
ss
push
inc
jbe
or
push
jp
adc
jge
fbld
test
xchg
sbb
not
sub
jge
push
iret
pop
lea
push
outs
jb
data16
mov
mov
ss
rol
inc
addr16
mov
sbb
mov
mov
idiv
in
dec
xor
mov
mov
or
push
xchg
cwde
(bad)
jmp
xchg
push
lods
leave
xlat
aam
ret
outs
pop
retf
out
inc
push
call
hlt
in
dec
call
rcr
(bad)
cmc
scas
cmp
or
aam
pop
nop
pop
push
inc
lods
frstor
popa
mov
dec
pop
bound
sbb
pop
jae
iret
push
cld
imul
xor
dec
mov
and
adc
mov
jl
std
rcl
pop
out
ins
xchg
jne
dec
dec
dec
xlat
push
or
mov
dec
push
jbe
push
mov
popa
cmp
cmps
jge
sar
imul
pop
xchg
xchg
xchg
scas
mov
cmp
or
push
sub
and
jle
jmp
dec
mov
scas
daa
(bad)
in
in
cdq
adc
fiadd
out
(bad)
fild
and
push
out
es
scas
das
in
lods
(bad)
fadd
mov
jge
push
xchg
push
pop
jns
or
test
fs
aaa
(bad)
cld
push
aam
call
in
(bad)
add
mov
inc
mov
mov
sub
imul
mov
pop
in
sti
(bad)
rol
call
mov
and
or
je
and
pop
push
idiv
fnstcw
stos
mov
lods
popf
rcl
mov
sahf
or
mov
call
call
push
addr16
loop
retf
cmp
add
sti
sbb
pop
xchg
ffree
sub
push
sbb
xor
push
pop
icebp
xor
sbb
(bad)
loop
loop
cmp
jno
ss
cmp
push
fstp
(bad)
retf
vmulsd
push
iret
stc
fcmovnbe
jne
xor
(bad)
popaw
inc
stos
mov
push
ret
(bad)
bound
mul
test
cld
icebp
test
xor
jae
ss
retf
mov
test
mov
mov
add
aaa
push
fmul
(bad)
jo
sbb
mov
add
push
mov
in
mov
int
jb
popa
pop
retf
inc
fadd
or
fld
xchg
test
jmp
mov
jno
lods
mov
out
xor
pop
add
adc
inc
fcmove
movs
(bad)
call
lock
out
cli
mov
neg
mov
pop
imul
rol
jne
retfw
mov
jbe
cmp
movs
jp
outs
in
leave
inc
in
cmc
xor
sbb
cmc
int3
shl
xchg
hlt
(bad)
es
mov
aaa
pop
out
out
clc
retf
jmp
mov
mov
psllw
mov
mov
hlt
sbb
int
push
lahf
test
cwde
dec
clc
push
out
es
(bad)
cmp
sbb
inc
mov
mov
int
aas
add
aad
push
inc
mov
inc
mov
or
cmps
mov
dec
fcomip
jl
lds
jge
mov
aam
fsubr
dec
ror
push
out
xor
out
sub
cli
or
inc
push
retf
xor
iret
hlt
loopne
adc
fld
sub
int3
or
mov
sbb
stos
hlt
adc
push
or
xchg
test
sbb
cwde
frstor
into
mov
imul
pusha
inc
sbb
cmp
(bad)
arpl
mov
jmp
retf
add
jns
and
test
pop
pop
mov
sbb
retf
pop
mov
xchg
push
or
mov
inc
pop
test
sub
popf
aam
sub
test
(bad)
pop
and
dec
add
sub
mov
pusha
outs
(bad)
jae
stos
dec
or
gs
aam
nop
or
sub
jno
or
lods
(bad)
pop
stos
dec
or
out
pop
inc
(bad)
xor
push
sub
sbb
das
push
popa
(bad)
xchg
mov
es
dec
pop
mov
sbb
adc
adc
xchg
pop
pop
pushf
int
sbb
jmp
pop
push
stc
cdq
inc
sbb
pop
jno
les
fild
das
mov
add
jb
xchg
arpl
in
jns
or
mov
loopne
ret
push
inc
je
sub
and
cmps
and
fisttp
xlat
or
ds
sbb
imul
add
and
mov
jno
mov
jnp
xchg
ja
pop
mov
jae
cld
fldenv
mov
cmp
add
add
push
scas
jns
sbb
cli
and
mov
mov
ds
push
fldcw
ins
and
loope
jnp
sub
or
out
or
addr16
lock
arpl
setg
jecxz
xchg
jl
jb
mov
cmp
mov
lods
fbld
sub
dec
inc
mov
cld
push
cmp
ds
ins
repnz
push
fwait
jnp
dec
sti
mov
loopne
mov
cs
or
sub
imul
xchg
mov
pop
or
xchg
xchg
xor
dec
inc
das
dec
in
mov
rol
jne
sub
sbb
rcr
push
pop
pushf
imul
adc
jno
pop
test
mov
mov
stos
or
pop
ja
sub
neg
inc
add
jl
dec
jl
mov
shl
cmp
mov
fdivr
and
stos
mov
cwde
jecxz
js
pop
stc
adc
cmp
stos
shl
sub
into
aad
sbb
xor
mov
imul
xchg
inc
shr
aaa
lock
loopne
retf
lds
xchg
dec
fild
in
push
adc
sub
or
loop
jmp
lods
push
lock
or
(bad)
or
test
iret
stos
jns
cmp
in
mov
es
xor
xchg
les
sbb
pop
push
mov
mov
in
sbb
and
out
rcl
scas
retf
and
popa
lock
jle
push
out
lds
scas
data16
dec
cmp
(bad)
and
xchg
inc
sar
jnp
push
xchg
mov
sahf
or
jb
fwait
xchg
jbe
push
int3
push
aaa
mov
cmc
add
mov
mov
shl
adc
add
int3
adc
pop
iret
cld
push
mov
xchg
pop
inc
cmp
mov
scas
aaa
pusha
add
enter
push
adc
add
push
pop
outs
arpl
mov
test
mov
test
add
xchg
push
jmp
add
mov
scas
(bad)
ss
repz
rcl
mov
mov
(bad)
rol
(bad)
out
mov
jns
sub
pushf
adc
mov
xchg
or
sbb
xor
mov
mov
cld
push
jae
repz
int
dec
bound
adc
rcl
cmp
push
je
add
std
sbb
shl
jl
enter
loop
mov
call
mov
xor
in
xchg
sbb
inc
mov
inc
retf
jmp
push
fs
aad
mov
hlt
dec
iret
add
loop
loopne
push
sar
xor
sub
leave
test
xor
jno
jmp
cli
or
mov
sar
fcom
aas
sti
cmp
(bad)
xor
pushf
cmc
mov
mov
data16
gs
dec
loope
push
xchg
jae
je
mov
push
iret
repnz
dec
push
dec
js
inc
mov
sahf
je
(bad)
jne
inc
or
pusha
inc
(bad)
ucomiss
lock
mov
inc
aas
stc
jno
push
dec
ss
push
in
stos
outs
out
mov
push
mov
cmp
std
retf
pop
test
into
adc
inc
stos
sub
xchg
push
test
jecxz
adc
xchg
cmps
add
dec
or
jae
add
bound
call
test
xlat
fwait
rol
push
and
pop
movzx
mov
xchg
cmp
jl
jmp
test
inc
sbb
int3
add
cdq
pop
pop
adc
in
ins
push
dec
mov
cmp
popf
cli
out
into
out
cmp
dec
out
xor
test
bound
sbb
(bad)
jle
lock
test
sbb
cwde
cli
mov
dec
call
mul
aaa
add
sub
clc
dec
push
fadd
lahf
pop
add
jns
in
mov
or
repnz
or
push
fistp
pop
xlat
push
(bad)
jp
push
xlat
xor
outs
cmp
xchg
in
mov
and
test
stos
push
out
repz
add
jbe
popf
cmp
or
cmps
sbb
les
xchg
mov
movs
mov
rol
movs
loopne
cwde
(bad)
fild
push
xlat
dec
out
loop
(bad)
mov
retf
aas
cld
dec
movs
out
cmc
sbb
xchg
aas
sbb
rol
push
dec
mov
mov
cmp
loop
sub
(bad)
pop
jmp
pop
nop
dec
lahf
dec
test
mov
jbe
movs
test
or
loope
call
adc
sub
push
push
int3
out
add
xchg
loop
push
xor
shl
rol
mov
adc
push
xor
movs
xchg
test
push
sub
mov
xor
cmp
lea
test
inc
dec
dec
icebp
sub
mov
ss
popa
in
movs
sbb
sbb
sbb
mov
and
mov
adc
in
pop
je
adc
jmp
dec
inc
ins
fld
rcl
add
dec
stos
bound
outs
popf
test
sti
cmps
push
jbe
call
lods
mov
icebp
sbb
(bad)
aas
mov
mov
out
ja
fcmovnb
mov
mov
call
dec
fild
and
nop
jne
movs
cmp
pop
jge
imul
pop
xor
mov
iret
leave
mov
in
stc
aad
fcomp
call
jmp
(bad)
push
add
frstor
out
jb
(bad)
lods
adc
add
push
mov
pop
dec
cmp
sbb
push
dec
loop
lods
sub
shl
xor
xchg
ins
in
inc
dec
jae
fmul
xlat
add
pop
or
movs
fdivp
cld
push
jnp
cmp
(bad)
pop
inc
push
popa
jnp
xchg
fcmovu
loope
(bad)
scas
mov
sub
nop
(bad)
es
(bad)
cmps
and
lock
std
pushf
fldenv
push
fs
pop
adc
push
inc
repnz
addr16
sub
lahf
mov
ja
out
sub
jne
sti
rol
add
push
cmps
call
push
retf
out
sbb
call
dec
cdq
imul
lods
sub
push
int
adc
or
packsswb
cmp
js
mov
test
hlt
scas
bound
mov
jge
mov
mov
arpl
imul
add
fnstcw
pusha
lahf
mov
mov
(bad)
push
mov
out
shl
scas
fdiv
push
rcl
fs
pop
outs
push
or
push
xchg
push
lock
xor
or
sub
mov
push
mov
push
rcr
ror
(bad)
sbb
pop
lea
lods
xchg
in
inc
pusha
jle
and
xchg
mov
or
and
mov
out
ret
int
arpl
imul
pop
sub
repnz
inc
cmp
sbb
imul
jg
push
dec
and
aam
adc
mov
outs
dec
lds
out
popa
sahf
push
mov
imul
shr
inc
test
dec
mov
sub
mov
mov
mov
sbb
xchg
pusha
inc
push
xchg
mov
mov
test
jle
push
aam
adc
push
loop
loop
imul
jmp
fdivr
std
inc
test
dec
xchg
mov
mov
add
sbb
push
arpl
or
inc
pop
push
test
sub
or
pop
sub
(bad)
push
xor
movs
mov
push
inc
add
jmp
and
cli
lock
das
movs
xor
pop
pop
mov
pop
sbb
enter
cli
jge
rol
in
xchg
fstp
in
stc
jns
pop
xchg
sbb
icebp
inc
shl
aas
mov
nop
sbb
test
fwait
push
and
loop
js
mov
pop
clc
(bad)
out
cli
xor
call
retf
cmp
div
mov
dec
cmp
popf
movs
outs
rcl
imul
leave
sub
inc
fnstsw
inc
loop
pop
mov
rsqrtps
jnp
jo
xlat
test
pusha
jge
mov
ror
lds
mov
push
jp
sbb
pop
jb
or
lods
sub
daa
adc
jb
inc
gs
iret
out
in
adc
(bad)
ret
inc
mov
inc
into
xchg
mov
push
push
dec
mov
cmps
inc
xchg
cwde
xor
mov
das
or
or
fild
mov
xor
neg
adc
sbb
loop
cmps
div
pop
xchg
adc
pusha
inc
lds
xchg
mov
or
sbb
sub
ret
sar
push
push
(bad)
out
ficom
mov
dec
jmp
xor
mov
lods
or
cwde
jbe
(bad)
(bad)
adc
fld
sub
test
cmp
adc
xchg
add
outs
cmp
mov
(bad)
js
inc
mov
inc
pop
xchg
mov
jge
xchg
mov
out
push
fwait
and
mov
xor
inc
and
mov
push
ret
mov
mov
inc
push
push
dec
hlt
fcmovbe
add
lahf
inc
shl
ss
push
pop
xchg
push
int
sbb
frstor
mov
std
cmp
cmps
pop
and
and
jne
sbb
or
cmps
fs
cmps
cmp
pop
ss
jbe
xchg
ret
xchg
retf
daa
inc
movs
std
cmps
aas
push
sub
fstp
std
loope
cmc
call
xchg
mov
ret
add
loop
push
sbb
push
and
mov
xor
mov
cmp
add
rcl
aaa
xchg
add
dec
mov
in
sbb
add
(bad)
adc
or
popf
mov
mov
out
pop
ror
jge
lods
inc
fisttp
mov
add
mov
(bad)
int3
les
retf
push
cmp
inc
cmps
or
push
xor
pop
inc
mov
sbb
test
add
mov
mov
lock
arpl
ins
mov
sti
jmp
ret
xor
xor
js
scas
add
rol
mov
cmp
pop
adc
and
add
sahf
stos
sti
xchg
out
enter
outs
mov
push
mov
mov
into
mov
(bad)
shl
adc
add
jl
test
pop
in
jle
mov
inc
clc
xchg
ds
add
ja
mov
or
mov
push
cs
or
mov
adc
xchg
std
scas
pop
pop
ret
arpl
sahf
addr16
scas
xchg
cwde
adc
inc
jmp
dec
inc
rcr
jns
fwait
jg
mov
push
xor
ret
mov
or
rcr
jo
int
xchg
movs
aam
mov
scas
pop
jge
sub
loop
cld
(bad)
pop
pop
mov
dec
pmulhw
sbb
ins
sbb
fdiv
fisttp
sar
jecxz
outs
sbb
jg
sbb
xchg
and
test
(bad)
popf
and
adc
jmp
loope
push
add
movs
inc
cwde
rcl
xchg
cmp
inc
sbb
mov
imul
inc
mov
mov
push
pop
pusha
(bad)
push
outs
pop
sbb
push
iret
or
cmc
shr
mov
push
mov
cmp
mov
fst
push
pushf
daa
and
lea
xor
aas
pop
test
push
nop
js
jb
pop
sbb
dec
pop
adc
in
or
les
dec
mov
or
jb
inc
xchg
push
aam
jb
lock
pop
xor
mov
imul
(bad)
mov
cmp
sub
mul
add
test
ss
jg
cmps
push
cmps
dec
mov
sti
cmp
adc
imul
pop
sbb
out
lods
data16
pop
clc
mov
and
cmc
adc
cmps
int
aam
loopne
xor
mov
ret
ror
movs
jae
adc
jo
fs
sub
popa
mov
xchg
enter
and
outs
cmps
aaa
adc
xor
and
aas
adc
jge
dec
hlt
dec
pop
rcr
xor
imul
int3
sbb
dec
repnz
jo
sbb
jle
and
js
jg
enter
push
xchg
mov
mov
cmc
test
jg
loop
jmp
pop
push
lea
xor
push
push
fisttp
sub
inc
cmc
(bad)
test
push
adc
mov
or
cmp
std
movups
aam
sub
xor
iret
mov
aam
mov
xchg
addr16
dec
and
adc
jae
retf
mov
sbb
xor
into
sub
cmp
ret
call
ss
and
test
xchg
xchg
outs
arpl
cmp
or
out
mov
pop
test
xor
pushf
mov
ror
push
call
scas
cmps
rcl
adc
add
call
push
out
and
ins
sbb
fbld
jl
cli
popa
mov
push
jae
inc
mov
sbb
mov
bound
jb
push
test
sub
pop
mov
xchg
stc
sbb
fs
lock
add
push
jns
jns
es
imul
inc
imul
into
mov
aad
adc
fcomp
pop
call
imul
xchg
adc
out
push
ds
iret
jnp
ret
dec
jg
or
ret
mov
ja
inc
hlt
dec
ja
add
fldenv
pusha
push
ins
add
xor
data16
mov
push
ret
xor
(bad)
jl
sti
mov
repz
mov
mov
rep
in
push
jp
xor
dec
ins
jnp
jbe
(bad)
xor
in
cmp
mov
cmp
mov
sub
es
(bad)
mov
xchg
shr
hlt
loop
sbb
push
dec
rcr
into
fst
enter
sub
cmp
adc
push
mov
mov
dec
push
test
js
ins
scas
pop
and
sub
inc
test
adc
stc
xchg
sti
pop
(bad)
pop
push
dec
retf
adc
shl
cs
push
or
cmps
int3
mov
cmovns
add
imul
inc
inc
sub
adc
mov
mov
fist
paddusw
jle
ficom
bound
stc
cmp
mov
sbb
dec
js
scas
pop
rcr
inc
and
sub
ins
into
xor
dec
sbb
add
push
sub
mov
inc
dec
fldenv
add
jns
hlt
inc
sub
jno
fldcw
loope
pop
in
mov
scas
call
mov
movs
popa
je
xchg
jmp
mov
ret
mov
sub
mov
ja
pop
push
and
mov
mov
xor
dec
mov
std
rcl
imul
push
mov
cmp
ss
pop
jae
jo
sbb
cmc
pop
pop
and
ja
call
pop
in
das
imul
imul
xchg
xor
leave
inc
aad
xchg
xchg
mov
loop
nop
sbb
(bad)
mov
ret
(bad)
(bad)
cwde
push
jno
in
sbb
xchg
hlt
jle
aad
dec
push
push
xor
push
scas
jmp
pop
test
ret
sbb
in
retf
adc
xor
pop
scas
sub
repz
movs
dec
or
pop
inc
ret
lds
inc
rcl
js
adc
mov
jmp
in
js
xchg
mov
push
add
test
push
pop
mov
adc
jge
in
dec
or
imul
into
iret
mov
xor
popf
out
push
cmp
push
jmp
mov
ds
outs
sbb
xor
shr
push
js
icebp
into
xchg
mov
mov
push
call
jg
gs
mov
mov
adc
stos
out
cld
jg
shr
pop
mov
btr
mov
hlt
pusha
push
mov
fsub
mov
mov
xchg
int
(bad)
xchg
and
pop
stos
(bad)
imul
pop
movs
(bad)
xchg
inc
(bad)
aad
and
sbb
xchg
cmp
cmps
cmp
xor
repnz
add
mov
loopne
and
jmp
test
shr
jle
lea
sbb
xchg
leave
mov
jae
mov
pop
pcmpeqd
imul
mov
lods
mov
call
js
push
adc
ss
shr
ja
leave
cli
ret
test
or
inc
sbb
sar
loopne
mov
push
sub
sbb
fidivr
mov
mov
mov
je
pop
and
jb
mov
retf
das
call
test
sbb
lock
sbb
mov
jbe
sbb
sbb
stos
ds
pop
sahf
mov
cmps
pop
push
xchg
out
cmps
int
sbb
retf
dec
adc
stos
jbe
sub
inc
and
push
xor
scas
xchg
sub
sti
sbb
ret
mov
popa
cwde
jmp
jmp
fidivr
add
push
je
pop
nop
scas
push
retw
es
fwait
leave
fisttp
mov
out
outs
adc
pop
in
jmp
daa
inc
lea
and
repz
bound
into
adc
lods
jl
adc
cs
hlt
ficomp
popa
mov
xchg
ret
sub
es
sub
mov
inc
jmp
cmp
mov
(bad)
(bad)
jp
xlat
mov
sbb
jmp
mov
sbb
inc
test
lea
mov
inc
rcl
and
arpl
cli
push
xchg
shr
fwait
xor
jmp
rcr
(bad)
inc
xchg
lar
fnsave
add
idiv
retf
sbb
int
or
push
fistp
xor
pop
call
std
dec
add
xchg
aad
call
sbb
add
mov
push
test
lods
push
je
ins
int
push
hlt
push
xchg
rol
les
push
sar
in
sbb
add
(bad)
adc
pushf
or
nop
pop
fcomip
inc
jg
(bad)
sbb
add
dec
loope
stos
dec
nop
mov
mov
xchg
mov
mov
push
movs
cwde
xchg
clc
or
mov
inc
pop
push
(bad)
loopne
sbb
xchg
into
cdq
enter
gs
bsf
sub
cmp
aam
enter
mov
ins
inc
dec
lahf
lea
lock
aaa
out
and
aaa
mov
cmc
push
leave
and
adc
std
xlat
or
jb
pop
mov
fwait
add
or
popf
mov
push
and
data16
xor
pop
xlat
test
cmp
pushf
sub
call
js
aaa
fstp
(bad)
push
fadd
mov
fldl2t
add
nop
das
in
dec
jnp
ss
or
jg
imul
sbb
ins
xchg
das
retf
hlt
addr16
cmp
mov
mov
lea
in
inc
and
sbb
jmp
jno
sub
or
loopne
out
mov
cmps
xchg
(bad)
aad
cmps
sbb
inc
es
sub
mov
ror
cwde
nop
adc
adc
rcr
aas
ins
sbb
movs
sub
sbb
dec
nop
add
jg
push
daa
sbb
xchg
bound
cs
loope
lock
out
pop
or
movntq
rol
and
(bad)
in
fidivr
stos
out
push
(bad)
push
push
out
repz
mov
call
aaa
push
inc
mov
cmp
xchg
jb
xchg
mov
push
cmp
cmp
(bad)
lahf
ds
fld
stc
pushf
int
push
push
dec
mov
lock
mov
cmp
sbb
push
sub
xchg
loopne
test
mov
in
mov
jecxz
jno
pop
loope
mul
mov
sbb
push
pop
js
pop
pushf
idiv
sar
int
mov
call
ins
cmp
nop
push
enter
loopne
fist
rol
fsubr
pop
push
push
scas
test
xchg
out
mov
das
enter
mov
les
ficom
dec
xor
add
xchg
sbb
enter
out
(bad)
int3
movs
stc
call
sbb
aas
mov
mov
cmp
sub
fist
dec
(bad)
stc
scas
arpl
adc
dec
mov
push
nop
lahf
mov
fcomp
aaa
loope
(bad)
mov
ret
xchg
xchg
sub
fmul
jmp
addr16
loope
lock
das
dec
inc
adc
mov
test
cs
sbb
cmc
mov
pop
aaa
into
(bad)
out
jnp
in
jbe
adc
scas
out
pop
jmp
movs
rol
add
sub
ret
popa
(bad)
jmp
in
jne
mov
mov
(bad)
idiv
mov
inc
jge
pop
dec
cmc
cmp
stos
fisttp
adc
lock
mov
adc
test
(bad)
mov
enter
jae
inc
sub
imul
rol
push
es
push
sbb
pop
jae
fstp
cdq
test
mov
test
pop
push
push
adc
cmps
data16
add
(bad)
jmp
mov
ss
ds
mov
cs
rcl
adc
les
imul
mov
stos
or
aas
ficomp
mov
scas
(bad)
out
xchg
xor
ror
inc
mov
xchg
loopne
inc
push
mov
gs
icebp
std
mov
mov
push
sbb
test
pushf
fdivr
loop
inc
xor
aas
sub
mov
std
sahf
stos
lods
int
dec
jl
pop
mov
mov
cld
mov
mov
jl
leave
mov
xchg
sub
cmp
push
push
inc
call
mov
adc
pop
add
imul
ffree
xchg
cmps
fild
xor
cs
in
mov
mov
mov
pop
adc
(bad)
popf
or
lahf
mul
add
aam
cld
cwde
sub
mov
imul
cmp
lods
ret
mov
call
lods
call
push
iret
out
shl
into
xchg
mov
mov
push
jg
aam
cmc
loope
popf
mov
sub
(bad)
(bad)
mov
(bad)
cld
stos
out
cmp
outs
dec
push
aaa
dec
sbb
xchg
dec
or
data16
lock
push
xor
mov
add
(bad)
cmps
(bad)
fild
bound
adc
mov
test
scas
mov
retf
or
cmps
add
call
inc
push
push
xor
dec
jmp
lods
(bad)
xchg
mov
pop
loopne
les
cmp
stc
xchg
(bad)
pop
loopne
repnz
xchg
cmc
scas
and
jne
je
pop
mov
inc
sub
pop
mov
sub
dec
mov
lods
leave
cwde
mov
lds
stos
ret
mov
pop
sbb
jmp
xor
addr16
push
push
mov
push
sbb
dec
nop
sti
(bad)
(bad)
pop
jg
cmp
or
xor
pop
mov
fbstp
or
cmc
jecxz
loope
gs
xchg
fsubr
jg
cmp
push
loop
push
push
and
movs
fisttp
jo
dec
sti
mov
arpl
sbb
add
ret
or
dec
pop
push
or
push
add
dec
cmc
ret
mov
leave
arpl
pop
fsub
xchg
movs
sub
sub
pusha
adc
mov
dec
ror
lahf
(bad)
push
rol
push
pop
retf
(bad)
push
and
mov
sub
mov
popa
and
and
addr16
std
scas
push
jl
pop
ins
sub
dec
bound
inc
aam
(bad)
sahf
push
cdq
out
cmps
and
pop
pop
and
pop
dec
mov
add
or
aam
fild
push
mov
movs
xor
add
adc
repz
mov
or
and
xchg
and
sbb
iret
xchg
xchg
add
mov
mov
mov
push
ror
clc
fwait
xchg
retf
and
or
xchg
das
jge
es
sbb
sub
out
xchg
(bad)
pop
or
cmp
mov
cmp
ss
mov
retf
mov
test
inc
pop
jmp
add
xchg
mov
bound
dec
cli
mov
push
pushf
sbb
xor
mov
sti
hlt
mov
push
rcl
mov
adc
mov
rol
push
fs
xchg
mul
adc
std
inc
es
icebp
dec
es
lds
stos
ret
mov
inc
adc
pop
loop
xor
push
dec
sbb
fwait
sbb
push
mov
stos
(bad)
aas
jnp
sub
mov
test
xor
hlt
mov
sbb
in
xchg
mov
mov
imul
mov
lock
sub
xor
daa
ja
hlt
xchg
xchg
mov
jbe
in
rcr
pop
cmp
stc
and
fisttp
mov
in
cwde
cmp
or
div
test
fisubr
push
mov
push
dec
cmp
add
mov
retf
hlt
mov
mov
add
stc
sbb
mov
adc
push
push
cmps
xlat
add
aas
and
bound
out
imul
(bad)
xchg
arpl
pop
adc
or
sbb
icebp
pop
adc
and
lods
into
cmps
lds
cmp
lock
mov
sub
cmp
dec
or
je
stc
test
(bad)
push
push
adc
clc
cmps
hlt
mov
xchg
xor
scas
out
xchg
data16
bound
inc
mov
stc
mov
iret
pop
sub
cld
arpl
ret
fucomi
test
outs
adc
xor
fwait
in
call
pop
jp
mov
pop
outs
das
cmc
outs
aam
cmps
aaa
pop
cmp
cdq
sahf
frstor
add
rol
inc
aaa
pusha
aam
rcl
gs
lods
rol
mov
xchg
jae
jle
adc
jns
icebp
mov
shl
hlt
mov
sar
cmp
pop
xchg
cli
or
outs
sub
mov
into
cwde
into
mov
clc
mov
outs
sbb
xchg
add
xchg
lds
push
(bad)
mov
mov
sub
sbb
stos
cli
xchg
mov
dec
or
sub
add
out
push
push
imul
fmul
jno
ret
inc
add
jmp
mov
std
mov
in
int3
je
adc
outs
fsubr
movs
shl
jno
repnz
adc
rcl
into
ret
mov
ins
xor
add
movs
rcr
cmps
out
rcl
sub
retf
xchg
fcom
add
xchg
pop
add
stos
cli
push
xchg
shl
shl
outs
sub
dec
sub
cmc
xchg
or
mov
je
arpl
inc
pop
outs
call
sbb
xchg
(bad)
mov
xchg
rcl
imul
add
xor
push
adc
pop
jg
cmp
mov
inc
fdivr
hlt
into
stos
cli
jmp
aas
push
xlat
rcr
inc
or
cs
or
sahf
imul
into
mov
fwait
push
xor
pop
cld
outs
adc
xor
adc
outs
add
ins
sub
call
fst
cmp
or
fmul
jle
or
pop
sub
lds
xor
xchg
(bad)
sbb
jb
inc
leave
cdq
repnz
xor
stc
and
rcr
push
xchg
les
es
pushf
hlt
xchg
push
xchg
aad
mov
nop
dec
dec
lea
pop
sub
stos
retf
ret
push
inc
mov
sbb
rcr
sbb
outs
add
lods
lds
push
fisubr
mov
out
jno
pop
push
(bad)
popa
aaa
jo
mov
movs
inc
push
repnz
pop
sub
pop
jmp
mov
cmp
jo
test
mov
mov
test
push
out
xor
and
fimul
clc
mov
push
pop
das
js
(bad)
xchg
leave
adc
bound
sbb
or
push
inc
sub
aad
dec
and
xchg
cwde
icebp
inc
push
imul
test
test
stos
push
sbb
jnp
mov
push
and
inc
ins
and
in
xchg
push
adc
movs
sub
and
mul
mov
in
mov
jae
stos
call
pop
pop
add
lock
jecxz
(bad)
mov
loopne
xor
mov
mov
sub
sbb
repnz
and
push
cmp
pop
sbb
mov
(bad)
(bad)
cli
mov
mov
mov
mov
add
dec
es
bound
sub
(bad)
out
sub
fdivr
inc
or
xchg
fnstcw
mov
arpl
out
idiv
jmp
repnz
xor
inc
adc
mov
out
test
jno
jns
out
(bad)
mov
imul
mov
sub
stc
ins
aaa
inc
inc
push
fs
lahf
push
js
jle
jl
pop
jb
ds
pop
push
les
sub
push
imul
fidiv
and
xchg
xchg
shl
test
shl
mov
push
pop
out
scas
ins
sub
or
rcr
js
pop
mov
repz
retf
mov
adc
mov
iret
mov
add
mov
pop
cmp
mov
and
jbe
dec
sbb
jnp
and
mov
inc
sbb
(bad)
sub
aam
xchg
mov
jbe
nop
les
pop
adc
fbstp
(bad)
sbb
bound
mov
push
adc
in
inc
cmp
ins
sub
mov
inc
push
or
lock
jmp
jl
cmc
sub
test
cmps
in
out
nop
test
mov
ret
fcomp
cmps
int
dec
movs
jmp
sar
adc
es
sbb
sbb
dec
daa
inc
jb
add
test
cmps
jp
adc
sar
fwait
mov
cmp
inc
adc
inc
lock
or
loopne
enter
inc
sbb
cmp
mov
ficom
nop
mov
pop
jae
push
fistp
jae
jl
lds
stos
jecxz
imul
jmp
ficom
leave
stos
pop
or
xchg
cli
mov
ins
ss
sub
jo
imul
inc
fucom
popf
rcl
lock
call
(bad)
scas
ret
push
jecxz
retf
add
int
in
add
mov
jg
jge
push
sti
cmps
ds
push
pop
cwde
retf
push
or
arpl
hlt
dec
add
dec
pop
je
scas
imul
(bad)
frstor
push
and
rep
test
xor
sbb
jns
jb
cli
jg
fimul
push
dec
mov
loop
dec
dec
pop
add
dec
jae
cmp
(bad)
dec
or
dec
mov
pop
mov
push
lods
cli
retf
ins
pop
dec
and
push
push
adc
call
(bad)
mov
or
retf
xchg
std
lods
std
xchg
cmp
jne
dec
js
mov
retf
mov
stos
xchg
ret
iret
popw
push
inc
push
sbb
pop
xor
jne
add
jns
pop
mov
fsubr
inc
ss
mov
div
icebp
sti
movs
(bad)
add
scas
cli
test
imul
sub
ret
arpl
cdq
ret
(bad)
leave
adc
(bad)
mov
bound
dec
push
adc
jae
stos
stos
in
fidiv
push
inc
sbb
inc
or
mov
(bad)
push
loope
aad
xchg
cmp
test
mov
and
ror
and
mov
cmp
fistp
cs
mov
scas
jl
jns
in
lods
(bad)
mov
out
mov
cwde
jbe
pop
sbb
sub
rol
jne
bound
leave
cwde
or
mov
aad
ins
xor
hlt
in
(bad)
jo
add
jb
mov
test
sub
jmp
fisttp
repnz
in
nop
shr
pshufw
inc
sub
push
adc
lock
mov
jmp
int3
mov
mov
dec
pop
pop
sub
xchg
cwde
(bad)
stc
xchg
pop
add
mov
add
pop
scas
cli
jge
push
cmp
aas
mov
fwait
int3
call
xchg
sub
xor
inc
test
cmp
adc
jnp
leave
mov
cmp
push
je
lds
xchg
rcr
xlat
into
mov
xor
pop
or
jbe
add
test
mov
mov
popf
es
or
sub
imul
push
push
adc
adc
cdq
mov
xchg
mov
dec
pusha
xor
or
ins
retf
imul
adc
inc
adc
adc
(bad)
(bad)
inc
sbb
imul
fisub
sbb
cmp
sbb
stc
jg
lds
mov
adc
loop
pop
dec
xor
mov
mov
mov
or
pushf
fdivr
test
fisttp
push
or
jl
cmp
inc
mov
adc
je
add
mov
cmps
iret
lods
sbb
mov
cwde
rcl
adc
nop
in
mov
popa
cmp
cdq
fst
and
shr
retf
rol
sbb
mov
xor
adc
xor
daa
arpl
das
inc
xor
addr16
call
or
int
mul
stos
fcom
loop
enter
jmp
add
ds
sub
cmps
lock
jle
sbb
or
cs
ret
xchg
arpl
sub
ret
outs
or
fldenv
rol
fimul
loop
dec
jmp
jecxz
inc
sub
xchg
aad
xlat
cmovs
xchg
push
dec
sbb
fist
jb
jno
call
int
pop
cmp
push
sbb
mov
stos
xchg
fdivr
fidivr
pop
sbb
mov
xor
dec
das
nop
aam
inc
les
sbb
pop
pop
jb
mov
mov
mov
movs
leave
mov
xor
dec
retf
outs
add
sbb
jg
repnz
neg
jp
enter
jp
push
cdq
fisttp
jno
mov
xchg
push
aam
out
mov
imul
and
fisttp
iret
mov
test
cdq
repz
clc
(bad)
xchg
pop
call
dec
adc
clc
scas
sub
xlat
xchg
fnstsw
mov
addr16
mov
jmp
(bad)
xchg
jnp
loop
stc
nop
push
xlat
addr16
or
inc
rol
ror
scas
pop
push
ret
leave
mov
shr
jp
inc
in
lods
std
sti
xor
xchg
xchg
mov
loop
out
push
add
je
and
fst
scas
int3
add
ficomp
out
push
loope
add
mov
test
(bad)
adc
add
mov
add
gs
mov
popf
mov
scas
aam
add
sbb
lods
test
int3
push
and
or
push
add
xor
inc
add
inc
xchg
in
mov
mov
in
xor
repz
(bad)
cmp
jmp
mov
sti
scas
adc
dec
mov
xchg
fidiv
jle
pop
retf
xchg
lock
jae
push
add
jmp
(bad)
mov
sub
imul
daa
rcr
nop
movs
fiadd
jns
jp
add
(bad)
fisttp
add
xor
cwde
(bad)
sti
cwde
sbb
mov
mov
aam
retf
xor
dec
mov
jbe
inc
xchg
pushf
loope
ins
or
clc
lods
xor
or
sub
fild
mov
pop
push
and
test
(bad)
dec
or
fs
jae
and
(bad)
ja
xadd
jg
cmp
jb
test
xchg
dec
in
xor
push
sti
mov
dec
es
add
stc
rcl
lds
jmp
ss
add
jg
cwde
sbb
jmp
inc
and
cmp
pop
in
xchg
dec
push
imul
mov
leave
xchg
stos
shl
js
in
clc
and
mov
cwde
outs
jmp
or
ror
mov
out
test
hlt
mov
adc
xchg
(bad)
fstp
or
dec
out
dec
adc
rol
sub
outs
or
dec
cmp
aam
add
(bad)
dec
pop
retf
iret
mov
ds
mov
hlt
adc
aam
fdivr
inc
or
test
adc
pop
hlt
jbe
fstp
pop
push
xor
inc
sbb
jno
pop
mul
(bad)
push
push
fs
(bad)
mov
sbb
mov
sbb
stos
stos
ret
push
je
push
rcr
int
pop
lock
(bad)
fsubr
push
(bad)
mov
popa
push
sub
inc
in
aam
lods
inc
jmp
sub
(bad)
push
or
rcr
mov
pop
add
mov
test
add
mov
push
push
ds
cmp
pop
add
movs
je
std
mov
mov
push
dec
sbb
icebp
cmps
jecxz
jno
enter
inc
fld
push
sbb
push
in
or
jmp
addr16
iret
cmp
dec
out
xlat
aam
iret
add
pop
into
cmp
mov
test
jno
push
inc
adc
pop
arpl
sbb
jbe
push
mov
mul
lods
mov
mov
cmp
mov
or
sbb
clc
outs
cmp
jmp
imul
cmc
movs
into
pop
add
inc
(bad)
pop
pop
dec
pop
sbb
dec
sbb
mov
mov
cdq
ret
xchg
call
test
cmps
cmp
and
inc
loop
sub
daa
pop
(bad)
stos
sub
mov
popa
sbb
mov
retf
pushf
ins
cmp
and
jmp
xchg
rcl
(bad)
sub
popa
hlt
movs
popf
shl
and
repnz
je
fmul
push
xchg
fild
jb
shl
mov
mov
lahf
sti
xchg
lock
scas
lods
repz
jmp
dec
inc
icebp
push
or
dec
cmovae
cmp
pop
inc
xor
sub
arpl
stos
in
test
js
(bad)
mov
nop
inc
sub
mov
fstp
or
dec
data16
aad
inc
cmp
inc
sbb
mov
mov
jle
fsubr
mov
mov
xor
addr16
push
adc
mov
je
adc
lods
fld
scas
retf
sub
test
hlt
mov
rcr
ins
stos
out
repz
xchg
mov
ss
mov
in
sub
cmp
mov
sbb
jle
call
scas
fisttp
pop
push
cmp
fidivr
inc
mov
(bad)
bound
push
jbe
jo
jne
out
jmp
daa
std
xchg
test
test
and
stos
xor
out
outs
or
add
scas
sbb
inc
xor
call
push
add
push
out
ret
xchg
xchg
mov
cmp
cdq
hlt
popf
pop
sub
fwait
shl
movs
pop
jo
or
adc
cmp
push
inc
call
xchg
add
mov
test
test
mov
xor
mov
sbb
addr16
pop
fdivr
out
push
out
or
pop
mov
scas
movs
cmp
pop
and
call
add
cmps
test
add
push
test
loopne
jl
es
mov
cmp
jge
loopne
cmps
movs
pop
shr
jnp
adc
cdq
(bad)
and
(bad)
iret
dec
push
mov
pop
mov
adc
mov
xchg
jge
lods
xor
dec
xor
(bad)
call
cmps
int
(bad)
pop
mov
xchg
jge
icebp
or
data16
fnstenv
into
lock
inc
(bad)
outs
push
cmps
sub
inc
mov
out
out
dec
call
test
lahf
mov
pop
fwait
and
dec
(bad)
xchg
mov
adc
xor
aam
fldcw
add
arpl
mov
xchg
movs
pusha
xor
mov
movs
mov
sbb
icebp
stos
sti
fwait
test
pop
rcr
mov
and
dec
push
pop
stos
stos
and
and
jp
test
out
sub
jno
addr16
shl
sbb
cmp
mov
sbb
push
dec
ja
and
sub
sub
mov
jns
pop
lahf
cmc
iret
jnp
lds
and
jno
pop
loope
pop
mov
out
rol
jae
js
push
mov
xor
inc
dec
mov
sub
sbb
push
pop
dec
and
in
aam
shl
jge
call
and
leave
mov
pushf
retf
ss
jmp
imul
into
sub
jno
test
jne
(bad)
in
adc
test
mov
nop
jo
xchg
cmp
cmc
addr16
lock
js
xchg
pop
push
add
or
cmp
fimul
cmp
sub
enter
and
mov
stos
jecxz
pop
xor
mov
push
(bad)
cmp
pop
push
stos
dec
call
or
inc
fbstp
pop
sbb
mov
sbb
xlat
aas
dec
mov
in
or
test
enter
inc
retf
and
adc
loop
mov
jmp
out
push
mov
shl
or
xor
shl
inc
xor
cwde
cli
mov
popf
pop
pop
mov
pop
mov
sar
in
jbe
or
bound
int
iret
sub
push
test
sahf
cmc
adc
scas
adc
in
inc
or
pusha
jg
shl
jno
addr16
xor
cmp
adc
ss
ret
out
pop
ins
(bad)
xlat
imul
lea
mov
fucomi
dec
nop
ss
daa
test
cmps
(bad)
jb
adc
mov
and
push
movaps
push
imul
jns
mov
imul
ret
add
jge
ret
add
ja
inc
mov
ret
mov
mov
cmp
xor
loope
cdq
rol
inc
fwait
lods
sub
shr
dec
jl
(bad)
(bad)
retf
lods
mov
push
dec
adc
inc
xor
pop
aam
fadd
mov
stos
shl
lods
push
xchg
xchg
fst
mov
mov
hlt
pop
scas
push
and
out
jmp
mov
and
xor
xchg
fbstp
cdq
pushf
push
cmps
(bad)
out
xchg
loopne
inc
jmp
dec
add
pop
repz
pop
mov
mov
aad
inc
pop
add
cmp
jle
call
mov
dec
jecxz
mov
fadd
lahf
push
mov
and
mov
jmp
es
in
jmp
cmp
fcomip
cmps
push
ja
mov
lahf
inc
cmp
loopne
mov
or
pop
or
mov
loope
fsub
inc
push
cld
xor
shl
call
add
sbb
out
jno
movs
fcmovne
fwait
xchg
cmp
cs
dec
add
or
pop
ins
mov
sub
ds
pop
dec
jbe
arpl
sbb
dec
test
push
idiv
xlat
test
adc
outs
ins
jb
cmp
xchg
pop
and
fsub
fcomi
jg
fisub
inc
cmp
mov
jp
inc
int3
mov
sbb
sub
pop
inc
sahf
sbb
popa
dec
lds
test
mov
frstor
and
in
cmps
rol
mov
ins
push
std
fisttp
cdq
shl
jmp
nop
mov
sub
cmp
or
cmps
jl
mov
sbb
inc
or
mov
mov
push
pop
mov
mov
sub
inc
pop
jo
inc
dec
pop
pop
cmps
lock
out
loopne
cmp
cmp
and
daa
sti
stc
add
sub
sub
fdiv
xor
(bad)
scas
inc
or
jae
loop
and
adc
jne
(bad)
mov
imul
pop
bound
pop
sbb
shr
(bad)
xlat
in
int
jmp
push
push
shr
arpl
push
out
dec
pop
mov
sbb
(bad)
dec
jae
out
or
add
pop
or
lock
iret
and
add
hlt
aad
lock
dec
xor
std
imul
push
push
es
loope
jmp
sbb
pop
and
or
cli
jmp
dec
mov
not
mov
mov
push
inc
movs
jbe
push
mov
xor
nop
or
dec
call
in
mov
outs
ja
les
pop
cmps
adc
or
fst
rcr
std
cmp
retf
jb
and
cmp
adc
sub
js
sub
mov
stos
and
aam
js
xchg
add
fisub
fmul
jg
xor
push
adc
in
ins
(bad)
and
sbb
in
aad
jl
mov
dec
mov
push
lock
div
(bad)
int
pop
sbb
inc
aam
fld
cmc
call
push
pmaxub
dec
pop
add
daa
add
scas
jl
lea
xchg
push
call
mov
(bad)
or
dec
cmp
cmp
in
or
xlat
mov
inc
jecxz
sub
pushf
sbb
aad
imul
hlt
pop
test
push
xor
mov
and
push
push
test
jae
lods
iret
xor
jae
in
mov
fadd
and
mul
scas
fsubr
mov
fnstsw
jge
imul
lahf
fldcw
dec
pop
xor
stc
push
mov
adc
ja
dec
xor
mov
dec
ja
bound
test
and
ret
test
gs
(bad)
in
mov
mov
or
outs
and
sub
mov
call
adc
or
outs
(bad)
(bad)
int
clc
or
test
ret
mov
add
or
mov
scas
xor
stos
imul
jle
mov
imul
and
xchg
rcl
or
dec
adc
in
ret
mov
call
sahf
push
add
dec
out
pop
stos
frstor
shr
test
mov
cli
jae
pop
sahf
mov
fs
mov
(bad)
fiadd
xchg
aas
and
sub
(bad)
mov
xor
pop
aam
sub
shl
inc
cmp
leave
stos
in
inc
xor
push
or
dec
ds
imul
pop
push
adc
sbb
fild
add
test
mov
or
les
or
jl
hlt
mov
cdq
nop
out
test
mov
mov
dec
pop
mov
or
popa
cmp
mov
push
jg
in
cld
fsub
pop
inc
sbb
add
mov
inc
loope
push
jb
pusha
xor
ds
sub
outs
xchg
and
sbb
mov
in
repz
hlt
mov
mov
pop
fs
mov
dec
mov
movs
shl
dec
inc
in
inc
sbb
call
std
push
call
daa
mov
and
addr16
bound
xor
or
pop
inc
pop
pop
clc
dec
fldenv
test
mov
stos
cmp
mov
ss
retf
jmp
sub
loop
xchg
call
loop
inc
dec
or
loopne
mov
cmp
sahf
jnp
sbb
jno
mov
xlat
test
dec
fsub
clc
fwait
movs
cmp
pop
dec
daa
or
imul
test
cld
jmp
pushf
xchg
push
mov
pop
frstor
gs
imul
jle
or
fwait
add
xor
in
mov
ror
fisttp
mov
or
push
mov
xor
push
pop
jl
jb
push
xchg
mov
ds
out
sub
jae
and
je
sub
sub
jne
jg
cmc
arpl
add
inc
dec
sbb
cs
inc
jmp
lods
ds
push
and
fwait
adc
popa
xchg
mov
shl
in
call
cmp
rcl
outs
call
call
int
call
cld
fsubr
push
sub
mov
xor
je
mov
mov
fiadd
test
ds
inc
dec
sub
(bad)
rol
addr16
or
shr
leave
in
mov
pop
repz
das
mov
in
pop
sub
out
and
xlat
cmp
lea
fs
stos
mov
xor
adc
cmp
ror
or
lods
enter
xchg
mov
(bad)
ficomp
pop
or
jae
retf
out
and
xchg
sti
pop
jecxz
jb
mov
es
lods
jb
cli
xor
popf
lahf
shr
sbb
out
(bad)
pop
cmp
jmp
cmp
adc
xor
mov
adc
ja
jnp
cwde
mov
into
outs
pop
(bad)
lea
add
or
add
stos
add
mov
repnz
xchg
fld
mov
inc
in
aad
xor
mov
iret
test
jns
jbe
push
test
inc
or
in
sub
jmp
push
mov
jge
sub
dec
mov
or
sub
callw
ds
outs
pusha
xchg
(bad)
pusha
and
xchg
test
mov
jl
inc
and
movs
ss
and
scas
jle
into
(bad)
push
push
adc
test
outs
inc
mov
jne
push
js
call
pop
mov
cmp
sbb
dec
int
cmps
inc
adc
dec
jmp
movs
test
dec
xchg
shl
icebp
mov
push
add
push
xchg
pusha
xchg
dec
adc
vphaddwq
mov
push
or
rcr
in
dec
xchg
ins
jno
mov
add
dec
mov
ror
xlat
in
mov
mov
sar
pop
cmp
fst
int
jnp
mov
pop
enter
in
scas
pop
sub
ins
mov
bswap
sub
sahf
pop
ret
mov
fucompp
gs
sub
push
ficom
retf
cmp
pop
mov
mov
adc
jno
or
dec
out
sub
aas
or
(bad)
stos
gs
pusha
jno
and
mov
jb
xchg
push
jne
fsubr
adc
xchg
push
mov
sbb
mov
push
cmp
out
not
mov
retf
shl
sub
pushf
or
sub
adc
mov
sub
aaa
clc
dec
test
dec
mov
(bad)
push
imul
lods
add
mov
pusha
jns
and
cmp
fwait
div
pop
div
mov
sbb
sbb
icebp
imul
pop
dec
rcl
out
push
pusha
mov
or
push
dec
or
mov
xor
xor
xor
push
jp
loopne
retf
mov
not
mov
inc
cmp
and
push
xor
fadd
fisttp
lods
jno
pusha
jne
icebp
pushaw
mov
push
add
aam
cmp
sahf
adc
jge
or
xor
jbe
out
retf
add
or
dec
mov
out
dec
mov
repnz
retf
or
sub
sbb
add
mov
mov
jb
icebp
daa
adc
jae
out
push
in
(bad)
cwde
mov
or
fnstcw
les
outs
iret
(bad)
out
mov
dec
bound
int3
js
aaa
sbb
stos
jo
cli
out
inc
mov
mov
(bad)
xor
mov
movs
xor
or
fldenv
jge
(bad)
outs
inc
mov
arpl
adc
jnp
and
fdivr
lods
and
or
push
out
(bad)
mov
jmp
mov
mov
mov
cli
sub
add
xchg
push
fild
jp
fs
mov
(bad)
icebp
or
cmps
mov
sbb
lods
adc
push
outs
inc
call
fs
inc
pusha
xor
jne
xchg
mov
jbe
sub
add
icebp
int3
out
mov
mov
inc
mul
push
xchg
dec
mov
idiv
(bad)
jno
inc
lahf
aad
loope
add
and
add
ja
pop
stos
call
or
lods
add
xor
adc
inc
cmc
sbb
inc
push
in
sahf
inc
pushf
out
push
test
dec
in
push
sbb
fild
jnp
adc
(bad)
cmp
xor
pop
cld
mov
and
inc
mov
and
mov
(bad)
sti
dec
hlt
in
sbb
(bad)
xor
jnp
shl
in
mov
push
test
add
test
push
inc
fs
mov
je
lods
iret
pop
pop
mov
dec
inc
ds
cld
inc
xor
xlat
xchg
es
adc
add
push
loop
jno
jecxz
push
pop
adc
pop
pop
out
cmp
mov
cmp
test
xchg
jecxz
push
(bad)
dec
adc
hlt
mov
in
mov
mov
std
or
ror
mov
xor
retf
test
out
pop
lea
cwde
cmps
adc
int
push
xor
cmp
ja
clc
sub
scas
push
and
inc
pusha
adc
mov
and
and
ins
push
out
mov
and
aad
push
sbb
mov
jno
aad
or
add
sbb
ror
test
sub
iret
xor
mov
mov
js
add
xor
stos
(bad)
retf
aad
xchg
jle
hlt
sbb
mov
shl
and
cli
inc
push
push
test
xchg
xchg
jmp
and
and
(bad)
push
cli
ins
adc
js
xchg
dec
adc
in
or
jbe
loope
ret
(bad)
sub
inc
mov
xchg
dec
ret
mov
aad
mov
call
adc
ret
ins
hlt
fmulp
jns
or
fisttp
pop
pop
inc
and
inc
movs
push
cmp
sbb
out
pop
int3
mov
test
repnz
ds
mov
xor
imul
mov
shr
outs
pop
sti
jno
cmps
dec
loop
sbb
aas
cmps
cmp
fadd
xchg
int3
dec
aaa
pop
lds
mov
fiadd
cmp
mov
pop
push
cmp
ins
push
cmp
xchg
leave
adc
inc
pop
popa
pop
mov
xchg
cdq
iret
add
nop
mov
pop
hlt
adc
fucompp
xor
dec
jmp
movs
je
out
lock
imul
imul
mov
add
pop
mov
sub
push
or
mov
or
loope
pop
mov
sub
mov
pop
pop
and
jno
stos
mov
in
pop
mov
loopne
nop
ret
lods
loope
pop
repnz
scas
in
sub
xchg
fld
inc
push
xchg
repz
xor
mov
dec
mov
enter
pusha
(bad)
enter
pop
fnstenv
cdq
and
iret
idiv
push
dec
lods
daa
movs
cli
jb
sub
lods
(bad)
shl
xchg
push
pop
mov
(bad)
dec
cli
bound
movs
and
cdq
mov
sbb
or
and
imul
rcr
les
add
dec
mul
gs
in
shl
ins
(bad)
cdq
fdiv
test
jns
mov
or
xchg
mov
push
addr16
jns
cmp
pop
mov
aad
pop
lea
movs
sahf
mov
and
xor
loop
(bad)
xor
push
mov
dec
jb
mov
or
xchg
cmps
das
gs
jecxz
sbb
mov
jge
add
xchg
mov
bound
adc
xor
cmp
and
mov
std
lock
cwde
stos
sub
outs
push
mov
bound
repz
pop
loope
add
test
cmps
mov
dec
mov
loop
xchg
jmp
xchg
dec
in
mov
xchg
leave
and
xor
and
out
int
mov
lahf
inc
loopne
lods
aad
aas
pop
add
fwait
(bad)
repz
pop
pop
je
pop
daa
(bad)
mov
mov
(bad)
jg
jle
mov
in
ins
pop
in
dec
sbb
mov
call
xlat
cmp
fcom
leave
push
pop
cs
mov
pusha
loopne
pop
pop
xchg
adc
je
and
ins
adc
mov
mov
add
sub
stc
cdq
inc
push
enter
mov
sub
test
in
fcom
test
ds
pop
adc
inc
int
cmp
add
mov
lahf
push
push
fmul
mov
xor
jne
xor
sahf
jg
sbb
dec
call
jmp
push
in
in
jmp
fistp
inc
or
mov
add
and
pop
fcom
outs
xor
jmp
mov
call
jbe
nop
outs
or
lahf
mov
add
cwde
mov
mul
xchg
enter
fild
aam
push
xor
mov
and
sbb
push
jmp
sbb
pop
aam
cmp
jns
aaa
out
push
cmp
mov
in
jo
pushf
loop
push
mov
fst
fcom
(bad)
fidivr
and
adc
call
mov
or
cmps
inc
iret
xchg
imul
adc
push
xlat
fwait
and
jmp
mov
mov
adc
shl
je
dec
int3
jae
jnp
out
mov
aaa
mov
dec
iret
jb
and
in
sahf
mov
add
xor
push
fldcw
pop
imul
clc
leave
and
pop
mov
shl
fs
push
clc
fs
mov
iret
mov
jne
or
out
call
mov
pop
fsubr
cmps
xchg
xchg
or
pop
mov
inc
(bad)
mov
cmovno
popa
pusha
sbb
cmp
aam
cmp
pop
xor
fldcw
(bad)
and
aas
adc
cmc
(bad)
add
mov
clc
pop
stc
in
jmp
or
fnsave
or
inc
add
je
or
xlat
inc
in
icebp
movs
and
in
pusha
aaa
in
in
sub
push
sub
xchg
inc
out
fisttp
fwait
jns
and
mov
jo
or
mov
(bad)
fidiv
mov
fs
jge
fsub
test
enter
add
pop
xchg
(bad)
imul
in
repz
ficomp
pop
dec
sub
mov
fdiv
add
xchg
push
add
jge
pusha
cmc
sub
add
and
push
and
jae
data16
sub
and
sub
jg
push
dec
cmps
or
stc
pop
mov
fild
inc
movs
sub
push
jecxz
mov
mov
add
sub
test
call
mov
rol
cmp
push
mov
outs
fmul
cmc
sub
jbe
jle
mov
xor
cmp
xchg
popa
leave
add
ins
mov
jne
sub
cmp
arpl
(bad)
jge
pushf
scas
mov
mov
shr
pop
fimul
stc
cs
neg
push
ror
in
daa
adc
test
push
retf
aas
repnz
arpl
repnz
ret
dec
cmps
arpl
jle
inc
xchg
and
int
sbb
xchg
test
in
fisubr
int
jecxz
mov
inc
mov
jae
xchg
xchg
xchg
pop
jmp
mov
(bad)
add
rcl
(bad)
stc
xor
inc
lods
dec
add
mov
dec
stos
inc
mov
in
mov
add
int
ss
push
stos
ins
add
jns
cdq
movs
movs
movs
call
push
jb
ds
test
mov
ins
std
and
adc
adc
pop
cmp
dec
xchg
xchg
inc
mov
mov
nop
imul
outs
mov
movs
xchg
mov
and
or
mov
pusha
mov
mov
aad
test
xor
xchg
cdq
js
mov
pop
into
pop
out
sub
mov
popf
inc
fistp
pushf
jae
xchg
push
ja
xchg
sbb
jge
or
mov
test
jl
push
add
loopne
sar
dec
mov
in
in
add
ror
cmp
sbb
cmp
or
cli
xor
rcr
test
push
pop
sbb
lock
sahf
arpl
or
dec
test
aaa
push
fdiv
jmp
in
mov
pop
mov
pop
lea
push
clc
or
int3
das
push
pop
test
dec
cmps
jns
sub
daa
adc
cwde
arpl
xor
inc
cmps
xchg
cwde
dec
cmps
xchg
vphaddubq
loopne
cmp
pop
scas
jge
and
add
stos
arpl
scas
lea
pop
scas
xchg
jl
add
sbb
ins
fdiv
add
dec
mov
mov
lods
jno
jnp
in
xchg
and
jge
sub
sti
xor
pop
cmps
jbe
scas
xchg
inc
mov
sbb
pop
mov
xchg
jnp
ret
push
mov
(bad)
push
adc
in
and
or
fwait
push
fst
mov
or
or
jmp
mul
out
or
lock
mov
xor
sbb
shl
sub
jnp
outs
movs
lods
popa
mov
xor
or
add
xlat
dec
test
rol
dec
scas
pushf
jle
ins
lods
inc
lods
call
fistp
xchg
inc
ror
sbb
sub
inc
xlat
aaa
hlt
dec
scas
js
loope
out
enter
sar
les
push
in
ds
adc
cld
push
stos
jmp
lods
jge
xor
cmps
xchg
dec
stos
fs
jmp
data16
cmc
add
ss
sub
pop
xchg
mov
div
mov
lea
ja
ja
or
sbb
xor
jns
xchg
je
push
mov
retf
sub
inc
stos
arpl
inc
mov
jb
xor
shl
repnz
(bad)
cmp
push
mov
movs
xor
push
lods
push
(bad)
push
mov
lock
mov
dec
in
jne
adc
xor
imul
pop
lea
jp
and
pop
loope
imul
push
retf
cmp
push
mov
(bad)
data16
cmps
push
fcomp
xchg
lahf
scas
arpl
dec
retf
push
cmc
sub
fild
add
push
cmps
or
mov
repz
push
icebp
push
mov
sahf
push
push
shl
add
inc
scas
inc
mov
mov
bound
cmp
pop
cmp
and
or
in
and
int3
pop
test
sub
mov
outs
mov
ficom
aaa
in
ret
jne
je
adc
or
inc
stos
mov
cmp
pop
fld
pop
xor
mov
pop
ficomp
ss
xor
pop
mov
stos
mov
mov
jge
mov
pop
lds
mov
mov
loopne
loop
mov
pushf
outs
mov
(bad)
int
sub
push
lods
mov
xchg
jp
xor
add
jns
mov
push
inc
aad
push
or
xor
loop
aam
sbb
paddw
stc
add
aas
call
mov
out
ss
mov
or
xor
mov
push
cmps
call
lods
jns
cmp
(bad)
daa
hlt
cs
cmp
ret
pushf
jg
mov
xor
sbb
pop
test
dec
fsub
clc
dec
mov
jbe
ss
ret
cmp
xor
inc
mov
js
sahf
jns
xchg
mov
aam
add
aas
in
xchg
fst
out
pop
mov
popf
imul
fistp
in
aad
xchg
popa
movs
or
jnp
mov
mov
mov
jl
ins
scas
(bad)
js
js
xor
ror
nop
je
out
xor
pop
fiadd
in
push
leave
inc
stos
cmps
popf
pushf
jg
inc
shl
sbb
fwait
inc
mov
int3
push
adc
jecxz
ret
adc
or
or
dec
mov
enter
fs
cmc
inc
stc
add
pop
mul
xor
call
xchg
push
mov
movs
cdq
mov
dec
mov
jmp
repz
dec
mov
sbb
sub
jge
shl
and
cli
and
sub
xchg
ins
adc
fsubr
jmp
std
pop
xor
stc
mov
fidiv
(bad)
and
sub
inc
mov
fiadd
inc
mov
ret
dec
mov
dec
mov
pop
(bad)
cmp
(bad)
pop
movs
push
jge
push
addr16
adc
in
test
and
add
xor
je
push
nop
je
call
cmp
push
call
inc
mov
jl
inc
xor
mov
pop
mov
test
jg
mov
test
cwde
dec
lods
mov
pop
xchg
rol
gs
aad
test
push
add
pop
loopne
(bad)
jl
aas
xor
add
jle
lea
addr16
(bad)
and
cmp
pop
fmul
push
mov
pusha
loop
push
retf
lods
dec
mov
jge
es
retf
pop
das
aaa
pop
mov
aaa
adc
xchg
test
aad
xor
cmp
push
xor
dec
xchg
inc
movs
nop
jp
sub
inc
mov
inc
xor
pxor
xchg
jb
popa
add
sbb
and
neg
(bad)
ins
(bad)
and
sub
test
xlat
add
jmp
mov
fcomp
or
dec
mov
mov
and
les
sub
push
pop
push
sbb
sahf
xchg
out
mov
xchg
js
add
movs
call
and
push
adc
cmp
dec
lods
dec
mov
in
mov
cld
bound
repz
and
adc
sub
sti
add
pop
mov
inc
mov
jbe
mov
add
(bad)
cld
sub
ret
cmp
dec
mov
xchg
inc
scas
gs
pop
mov
push
(bad)
pop
(bad)
outs
xlat
pop
leave
add
jb
inc
mov
mov
sahf
inc
xor
out
out
mov
fiadd
jmp
mov
lods
mov
mov
shl
sbb
std
and
or
sub
in
push
add
loopne
leave
push
mov
fist
jno
add
xor
cmp
shl
call
cs
or
imul
enter
cmp
enter
adc
out
fisubr
pop
xchg
or
aaa
add
pop
mov
xchg
rol
xor
adc
jne
imul
xchg
je
dec
push
add
ja
xchg
xchg
jl
or
in
sar
out
sti
cmp
loope
aad
enter
sar
loope
jmp
ret
inc
mov
jg
push
test
(bad)
dec
aaa
sub
rol
enter
pop
hlt
jno
sub
mov
jae
scas
arpl
push
mov
push
mov
jecxz
xor
cmp
and
push
in
rcr
mov
retf
pop
lds
adc
sbb
dec
lods
mov
movs
in
mov
xchg
xchg
ins
int
cmp
pop
shl
add
cmc
inc
mov
fistp
xchg
jle
inc
sbb
movlps
xor
lds
jmp
add
sti
add
hlt
mov
fild
mov
mov
sub
pop
xor
outs
shr
hlt
pop
adc
outs
shl
mov
scas
lods
lds
mov
into
es
dec
movs
jno
dec
aad
imul
dec
test
add
je
cmp
daa
shl
add
loop
rcl
pop
mov
popf
xchg
aaa
add
adc
cmp
fiadd
or
adc
mov
mov
mov
mov
outs
xrelease
fiadd
sti
daa
leave
xor
push
xor
jmp
repnz
mov
mov
jg
xchg
xchg
rcl
pop
mov
outs
les
sub
into
mov
aas
sub
dec
sub
fadd
test
xor
push
mov
sub
or
std
sub
leave
jg
xchg
test
popf
dec
mov
sbb
pop
mov
inc
sar
daa
loop
push
(bad)
xor
cld
or
pop
scas
js
inc
pop
cli
das
jmp
fidivr
stc
sub
or
frstor
inc
int
movs
xlat
sub
mov
mov
cmp
mov
inc
cmps
std
imul
mov
xchg
fdiv
not
adc
push
push
or
jmp
pop
xchg
test
dec
shl
aas
clc
push
mov
into
cmp
xchg
jge
jnp
cdq
lea
nop
out
lods
arpl
xor
or
pop
in
inc
mov
cmps
xchg
xchg
(bad)
jb
popf
cmps
lds
push
clc
cmp
cmp
dec
fbstp
shl
dec
scas
test
fisubr
rol
lods
jle
outs
clc
and
repz
cmc
and
push
and
out
(bad)
push
lds
cld
and
dec
mov
nop
jge
or
sub
jns
inc
mov
adc
jno
adc
push
frstor
sbb
xor
pop
int
imul
shr
jmp
sti
popa
les
imul
movs
inc
mov
mov
push
adc
mov
retf
adc
push
ficomp
repz
and
sbb
daa
out
int3
or
js
test
cwde
addr16
clc
add
es
adc
adc
sub
retw
sbb
mov
imul
xor
sbb
push
daa
sub
xlat
push
mov
icebp
push
mov
xor
icebp
pop
mov
and
sub
cmp
out
sbb
cld
dec
(bad)
dec
(bad)
mov
pushf
xchg
sbb
into
aaa
add
frstor
mov
lods
loopne
retf
push
out
mov
out
push
fistp
pop
repz
movs
movs
mov
test
xchg
mov
fwait
mov
shl
push
leave
dec
iret
ins
cmp
sbb
adc
and
jle
jl
cmp
adc
push
(bad)
pop
fild
pop
shl
push
cmp
loope
pop
aaa
push
jecxz
jmp
inc
push
push
sub
out
ret
lahf
mov
mov
cdq
fidivr
cmp
jne
je
cmc
daa
in
std
ss
repz
add
das
cmc
movhps
rcl
adc
mov
scas
xchg
jno
pusha
test
data16
dec
(bad)
or
cmp
cmp
jl
add
pop
scas
outs
mov
sub
or
xchg
add
mov
fldcw
in
dec
mov
cli
sub
xor
push
push
push
pop
movs
imul
push
pop
(bad)
xor
cmp
sub
inc
leave
ins
in
cmp
push
inc
add
inc
hlt
ja
fwait
ret
dec
test
xor
popf
xchg
rcr
in
xor
push
out
ds
popa
enter
rol
fs
jno
aaa
pop
pop
pop
(bad)
sub
pusha
shl
sub
add
sbb
sub
test
scas
outs
lds
loop
call
imul
inc
lock
mov
xor
dec
nop
jne
push
test
xor
hlt
es
scas
bound
jnp
jle
push
add
pop
mov
adc
in
and
repz
sti
add
shl
and
pop
mov
enter
jmp
test
mov
sub
sub
inc
leave
cmp
push
jno
movs
mov
mov
movs
inc
(bad)
dec
mov
and
retf
push
int
in
fnstcw
out
mov
cdq
cmps
cwde
ja
mov
push
or
(bad)
sub
sbb
int
push
aad
into
add
nop
test
mov
push
xchg
mov
enter
(bad)
and
cmc
add
cdq
popa
cld
add
add
nop
cwde
push
jo
jp
xchg
mov
and
mov
scas
dec
lods
jge
dec
mov
jae
clc
xor
sti
pop
int
bnd
cmp
and
push
test
mov
shl
push
inc
jge
js
sub
stc
mov
fst
dec
mov
retf
xor
cmp
(bad)
sub
push
shl
or
cmp
adc
lea
lahf
nop
jnp
pusha
(bad)
pop
push
shl
push
mov
retf
and
pop
cmp
add
and
xchg
xchg
inc
mov
mov
cmp
pop
mov
fstp
cmc
inc
mov
out
push
(bad)
pop
scas
xchg
jge
add
daa
sbb
cmp
xchg
xchg
mov
jo
shl
(bad)
xor
ficom
jbe
xchg
aam
enter
ret
ins
lods
je
retf
xor
pop
fistp
je
push
mov
add
imul
pusha
test
fs
mov
daa
out
cli
mov
mov
jp
pop
int
jmp
aam
cmp
or
imul
lods
mov
xchg
ja
mov
nop
data16
loope
mov
pushf
inc
mov
cmps
inc
(bad)
fiadd
clc
xor
addr16
jnp
or
and
fstp
loopne
mov
mov
out
adc
stc
and
aas
cmp
pop
leave
cmp
add
jmp
test
push
and
push
std
dec
ret
push
or
cmp
dec
call
xchg
jg
jb
or
cmp
jle
fwait
dec
(bad)
and
adc
xchg
nop
nop
jbe
cmp
push
into
xchg
jbe
add
inc
xchg
retf
inc
mov
sub
sbb
mov
fwait
test
fisubr
sbb
sahf
push
mov
adc
gs
jbe
xor
les
sub
inc
aam
jmp
dec
stos
gs
sbb
add
cmp
je
inc
cmps
xchg
inc
mov
add
in
adc
inc
ret
lods
fisttp
jg
cmp
(bad)
and
adc
lds
(bad)
jmp
ss
clc
push
mov
ret
inc
mov
cmp
add
sub
les
hlt
cmp
dec
stos
cdq
mov
pop
mov
push
mov
(bad)
jne
(bad)
ja
dec
pop
sub
sahf
mov
js
push
shr
sbb
out
sub
push
not
push
xor
or
xor
add
or
xor
or
jg
inc
mov
push
add
fs
sub
ss
xchg
mov
xchg
mov
xchg
mov
dec
lea
mov
mov
mov
cs
aaa
hlt
pop
scas
test
lds
ins
fmul
sbb
xor
sbb
sub
pop
test
inc
mov
hlt
add
pop
icebp
cmps
xchg
pop
(bad)
das
pop
movs
xchg
cmp
pop
cmps
dec
adc
sbb
sbb
sub
int
or
retf
adc
or
mov
test
lock
div
pop
or
(bad)
dec
fcom
daa
or
aas
or
xor
dec
mov
push
or
pop
mov
(bad)
dec
fild
sub
cmp
adc
sub
dec
add
adc
les
mov
imul
fild
retf
iret
push
cmp
mov
iret
cmp
inc
mov
fsubr
jmp
out
cmc
pop
test
test
pop
ds
jno
(bad)
aam
xchg
jge
jl
xchg
rcl
cs
sub
push
out
loop
cli
cmp
push
lea
jno
xor
mov
push
test
(bad)
je
xchg
jo
jno
inc
mov
dec
lods
lea
int3
pop
mov
pop
sbb
add
sbb
sbb
cmp
lds
sbb
es
ds
out
stc
pop
lea
xchg
or
pop
out
push
mov
(bad)
ss
icebp
pop
cmp
aaa
add
xor
sub
dec
mov
cmp
inc
(bad)
ss
loope
call
jl
dec
mov
sbb
mov
data16
push
lock
nop
pusha
mov
int3
pop
sar
call
and
and
inc
stos
ret
js
push
test
inc
nop
ficom
jbe
xor
push
lea
popf
inc
mov
and
(bad)
mov
cdq
xchg
push
jb
and
jbe
aam
fist
out
adc
adc
pop
retf
add
jg
aas
call
jmp
jbe
xchg
inc
sub
and
sub
imul
pop
ret
dec
sub
aad
mov
dec
test
mov
and
cli
xor
dec
mov
mov
mov
xor
adc
daa
in
scas
ins
fnstsw
push
mov
push
dec
frstor
pop
jmp
ret
pop
cmps
ins
lea
and
mov
jecxz
outs
aam
enter
sbb
leave
cmp
push
clc
cmp
(bad)
and
and
inc
mov
inc
mov
dec
add
mov
out
push
xchg
fcom
popf
(bad)
add
dec
fnstenv
sub
sbb
aaa
adc
add
in
adc
mov
loope
push
ret
in
repnz
xchg
imul
movs
jg
xchg
xchg
cmp
xor
pop
fadd
adc
mov
cmp
sub
scas
adc
scas
mov
mov
push
mov
mov
xor
cmp
stc
pop
fdivr
pop
(bad)
and
stos
jb
and
cmp
push
in
cmp
inc
ficom
xor
and
xor
dec
mov
xlat
xor
add
aam
movs
jbe
mov
fnsave
cld
or
cmp
push
in
push
mov
cs
jmp
(bad)
jae
and
in
cmp
add
getsec
add
jb
pop
(bad)
adc
sub
or
push
mov
jmp
mov
mov
outs
iret
cmp
jg
nop
jae
cmp
lock
mov
or
dec
movs
xchg
outs
out
test
inc
lock
inc
sub
push
sub
add
pop
mov
jne
mov
rcr
repnz
dec
aad
les
es
sub
push
mov
push
mov
mov
pop
pop
sub
sbb
es
add
jmp
cld
dec
mov
push
clc
sub
push
aam
xchg
inc
aam
pop
xor
xchg
ins
ficomp
xor
push
mov
mov
imul
mov
mov
xchg
test
push
icebp
mov
jns
pop
mov
sub
stc
inc
mov
inc
lods
mov
pop
mov
retf
cs
inc
lods
nop
pusha
int3
pop
add
cmp
xor
jmp
mov
mov
loopne
hlt
and
cmps
pusha
mov
test
aam
test
pop
mov
aas
adc
pushf
mov
xchg
mov
arpl
push
adc
mov
fdivr
in
jmp
loope
jo
ja
das
or
cmp
dec
test
ror
popa
cli
and
pop
xlat
xor
mov
rcl
popa
cmps
cwde
add
xchg
push
add
std
mov
mov
cdq
pop
push
sahf
jmp
cmp
cmp
ins
test
stc
enter
jns
cmc
inc
pop
sar
push
rcr
ret
repnz
(bad)
jp
adc
and
and
xor
fld
adc
adc
xor
ror
adc
sar
lods
sbb
retf
dec
inc
push
adc
cmp
sbb
call
dec
jmp
fsub
and
aas
mov
inc
pop
adc
cmc
es
retf
sbb
ins
cmp
push
xchg
sahf
repz
lods
or
pusha
push
stc
or
ins
aad
mov
je
test
cmc
daa
iret
mov
movs
retf
and
call
mov
mov
xchg
iret
push
imul
cdq
push
inc
jno
jne
jmp
js
cmp
fcomi
jmp
fwait
sahf
cmp
popa
mov
dec
inc
(bad)
xor
adc
out
dec
sub
jmp
xchg
jg
mov
dec
popa
(bad)
sub
in
(bad)
addr16
ret
sbb
sbb
jno
pop
xchg
out
and
sar
sbb
bound
cmp
je
cmp
setno
fnclex
push
inc
sbb
mov
arpl
mov
pushf
push
nop
xchg
inc
pusha
outs
mov
sti
pop
out
es
out
mov
add
cmp
out
jns
push
in
xchg
inc
rcr
pop
add
xor
in
adc
ret
inc
dec
and
ins
pop
repz
add
mov
mov
aaa
jo
icebp
jle
in
sbb
int3
hlt
rol
mov
ins
mov
mov
sbb
sub
sbb
inc
outs
mov
push
xor
fidivr
(bad)
out
cmp
cmp
xor
mov
fwait
xchg
adc
adc
ret
cmp
mov
xor
inc
and
(bad)
add
adc
hlt
out
dec
fidiv
mov
xor
sub
cmp
push
mov
mov
dec
push
test
hlt
lock
xlat
add
das
ins
xchg
xchg
dec
xlat
ins
mov
sbb
cld
loope
and
mov
adc
cmp
sub
leave
push
and
push
lahf
pop
inc
into
or
ret
scas
out
mov
sti
jns
loop
retf
movs
pop
ret
fcomp
dec
cwde
jo
sub
pop
add
cmp
jle
mov
sbb
inc
dec
inc
dec
(bad)
add
loope
jo
pmulhuw
mov
test
sub
out
jmp
pop
dec
mov
xchg
push
xchg
loopne
icebp
jbe
movs
loope
lods
mov
ret
and
(bad)
xchg
mov
ja
fldcw
inc
clc
in
add
jle
ins
cmp
pop
call
adc
mov
jmp
aam
adc
push
xlat
pop
pop
sub
push
mov
mov
les
addr16
pop
cs
dec
sub
add
mov
jle
dec
ss
jns
adc
or
(bad)
push
rcr
movs
mov
add
jl
(bad)
hlt
(bad)
sbb
or
retf
add
out
ins
and
mov
outs
cmp
aad
out
inc
inc
xchg
push
in
mov
mov
bnd
js
adc
mov
sub
push
test
mul
shr
add
rcr
int
push
sub
lods
je
cld
xchg
cmp
push
dec
jnp
inc
pop
(bad)
hlt
jecxz
mov
pusha
cmp
or
xor
test
sub
push
repnz
cmc
push
jmp
loope
push
sar
jmp
shl
js
adc
adc
jno
test
pushf
(bad)
mov
lahf
test
and
pop
leave
inc
cmp
iret
loopne
sub
fwait
push
jno
in
sub
jnp
mov
mov
add
xor
arpl
sub
jb
push
test
lods
fs
xchg
mov
add
cmp
test
clc
add
xchg
mov
aas
xchg
sub
lods
pop
fstp
push
inc
fadd
mov
rcl
inc
ret
sub
dec
mov
jnp
je
popf
xor
mov
data16
xchg
sbb
jl
push
sbb
jmp
add
test
into
push
adc
mov
push
movs
and
stos
push
cmp
pop
push
mov
xchg
adc
dec
into
setb
retf
sbb
lods
test
les
cmc
aaa
out
gs
pop
inc
dec
dec
pop
out
push
sbb
repz
shl
xchg
out
and
or
call
adc
ds
jmp
xor
push
fisttp
mov
and
mov
jne
cli
mov
call
inc
popa
push
mov
call
(bad)
mov
inc
push
cmps
dec
cmp
movs
push
fcom
imul
mov
and
shl
pop
(bad)
mov
pop
dec
dec
nop
sub
sbb
call
sbb
or
stos
outs
push
xor
adc
rcl
scas
jge
rcl
add
push
xchg
adc
mov
cld
inc
mov
aas
inc
pop
xchg
xchg
mov
fst
dec
fwait
test
xchg
loop
mov
adc
scas
cmps
and
popa
sbb
adc
ins
mov
and
and
mov
outs
addr16
mov
xchg
mov
test
bound
cmp
jae
dec
imul
xor
add
and
push
mov
ret
test
mov
(bad)
adc
pop
out
fisub
add
fistp
je
jl
test
mov
and
das
cmc
or
stc
xchg
and
arpl
cmp
jne
sub
and
inc
add
test
hlt
daa
pop
pop
int3
dec
mov
es
es
mov
sub
add
dec
shl
ror
or
pop
mov
call
sbb
sahf
(bad)
cli
push
adc
pushf
daa
jle
js
push
jb
fisubr
fwait
in
fs
enter
sub
xor
enter
jecxz
daa
dec
retf
cs
and
movs
xor
xchg
(bad)
clc
out
leave
push
jmp
mov
iret
je
sub
mov
sar
xor
mov
ins
jle
imul
jne
xchg
mov
cmc
jmp
cdq
xor
add
out
scas
mov
sahf
aam
xchg
loope
loope
pop
cmc
sti
cdq
popa
xchg
push
imul
in
add
jno
jge
add
scas
cmp
or
test
out
ss
aas
(bad)
(bad)
sub
test
in
test
xchg
stos
outs
cmp
pop
xchg
icebp
loope
mov
or
push
push
shr
jo
(bad)
js
push
fs
hlt
movs
ja
bound
push
(bad)
imul
xor
cs
ds
hlt
mov
xchg
pusha
cmc
mov
rol
pop
sar
daa
mov
pop
hlt
cmp
jae
inc
jg
xor
or
loope
bound
call
sub
pop
jmp
sbb
jnp
sbb
sahf
pop
mov
jge
jne
xchg
scas
call
rcl
(bad)
sti
mov
gs
mov
cmp
ja
rol
cmp
loope
ins
inc
push
test
push
inc
fucom
adc
aam
push
push
cwde
(bad)
jnp
out
hlt
jnp
cs
ret
loope
enter
xchg
adc
stos
cmp
stos
lods
push
or
xchg
call
jp
(bad)
mov
aas
and
iret
imul
jmp
sar
std
push
popf
popa
jecxz
xor
mov
fbld
and
push
dec
gs
mov
xlat
hlt
in
mov
mov
lock
dec
in
mov
ss
mov
ins
pop
ror
loope
out
lahf
in
adc
inc
jbe
jecxz
out
aas
sub
pop
not
(bad)
sub
popa
xor
sbb
push
xor
and
fdecstp
dec
(bad)
nop
stc
(bad)
inc
ja
(bad)
jne
cwde
mov
dec
fisub
loope
lahf
int3
inc
mov
ins
push
push
push
mov
retf
fwait
test
or
mov
cmp
in
fwait
cmp
retf
loope
xor
retf
call
jge
xchg
lahf
pop
scas
je
scas
xchg
jp
push
dec
out
jecxz
scas
and
stos
jns
mov
imul
js
xor
dec
(bad)
adc
mov
add
push
cli
adc
push
pop
out
xor
leave
data16
jo
adc
stc
add
fistp
push
xchg
jg
add
dec
ins
adc
push
cmp
and
(bad)
push
stos
or
mov
or
xchg
mov
push
xacquire
popa
(bad)
sar
pop
push
mov
test
in
push
stos
fisttp
mov
mov
push
dec
test
xor
les
rcr
sub
or
retf
pop
cld
inc
cmp
cwde
add
(bad)
mov
out
sar
popa
dec
add
icebp
pop
xchg
adc
push
xchg
xchg
and
adc
xor
iret
cmp
xchg
xchg
jno
cmc
inc
pop
repz
es
scas
mov
and
iret
jle
dec
push
mov
mov
or
mov
das
jmp
sub
mov
test
mov
test
jbe
adc
mov
xor
push
imul
jno
popf
movs
or
cmp
jge
icebp
mov
xchg
and
or
imul
or
aam
mov
aam
mov
in
mov
(bad)
xor
(bad)
iret
jp
mov
push
popa
(bad)
pop
adc
loope
dec
cmps
jns
jmp
xor
xor
jmp
outs
pop
mov
test
mov
popa
cmc
in
mov
add
mov
cdq
xchg
sub
(bad)
out
push
xchg
test
or
ror
aad
in
mov
inc
shr
pop
add
mov
test
ins
pop
ins
or
mov
rcr
(bad)
push
in
or
dec
sub
cmp
xor
js
imul
add
retf
xchg
inc
cmps
and
ins
xchg
clc
adc
popa
cmp
test
mov
adc
out
imul
sbb
dec
xor
or
data16
aad
mov
jnp
cmps
(bad)
sahf
outs
dec
xchg
xchg
push
push
xchg
add
cmps
inc
inc
scas
(bad)
rol
push
jp
fst
mov
inc
dec
cmp
repnz
ja
clc
imul
jne
leave
fxch
aas
pop
jb
arpl
hlt
mov
loope
cmp
and
push
out
loope
fisttp
mov
add
es
or
sbb
jae
lahf
cmc
ins
ficomp
xor
or
adc
mov
mov
xor
into
push
cmp
sbb
pop
xor
cmc
jle
les
push
inc
loope
or
out
inc
push
popa
sbb
pushf
(bad)
inc
out
push
xchg
dec
pop
rcr
pop
fisttp
jmp
nop
and
jge
mov
(bad)
test
pop
stc
or
mov
sbb
sub
xor
mov
mov
dec
sub
rep
sub
cmp
xor
leave
mov
mov
push
and
aad
call
(bad)
mov
js
ds
gs
mov
jo
or
and
push
bound
hlt
sbb
xor
cmp
cmp
fsubr
mov
or
add
ret
pop
add
sbb
sub
icebp
test
test
dec
push
dec
data16
cs
cld
mov
and
mov
fucomp
xchg
jnp
push
fsubr
nop
jne
or
cmovle
icebp
aaa
pavgw
cwde
shl
into
fistp
repz
addr16
(bad)
daa
push
in
pop
or
push
push
mov
mov
mov
inc
out
mov
retf
mov
call
sbb
sbb
pop
lock
into
fisub
push
adc
xor
adc
or
inc
mov
push
push
sub
xor
jne
enter
xchg
adc
mov
and
nop
mov
add
pop
push
push
lock
dec
mov
adc
adc
jnp
test
in
std
jns
das
outs
mov
mov
pop
stc
adc
sti
dec
imul
pop
inc
jle
mov
cli
ret
pusha
sub
js
(bad)
stc
mov
aaa
ds
add
movs
sbb
xchg
rcr
sub
inc
out
push
loop
sbb
xor
sar
mov
hlt
pop
dec
jae
sahf
adc
or
out
fadd
outs
por
test
mov
ror
cmp
dec
pop
jae
rol
cmp
sar
popf
adc
xchg
retf
and
inc
cmp
push
(bad)
lock
lahf
lds
pop
mov
int
or
ret
scas
daa
fmul
cwde
(bad)
cli
cwde
adc
fs
pusha
jnp
mov
mov
inc
out
pop
mov
jecxz
add
int3
push
sbb
(bad)
lods
cmp
jne
in
push
jle
fcmovnu
or
xchg
fnsave
xor
push
sbb
jbe
repz
jbe
mov
jge
les
(bad)
pop
pop
mov
mov
pop
push
jb
mov
push
les
mov
jecxz
cmps
xlat
jb
or
test
mov
retf
xchg
push
ja
and
(bad)
stc
movs
add
or
test
hlt
sbb
add
test
sar
icebp
pop
mov
or
inc
pop
cmp
dec
fist
cmp
xchg
sbb
sar
dec
(bad)
stc
mov
fsubr
push
and
jne
in
or
adc
bound
jg
test
fisub
xor
xor
ds
nop
mov
xchg
mov
movs
das
jmp
cwde
add
jbe
(bad)
jmp
int3
adc
cwde
dec
or
test
dec
xchg
ds
inc
or
mov
adc
dec
mov
push
fs
jno
sub
xor
out
cs
mov
adc
loopne
sub
and
push
sub
(bad)
vucomiss
mov
clc
sub
cmps
ja
sub
pusha
(bad)
stos
jmp
xchg
jmp
cmp
fimul
sbb
jb
mov
gs
xchg
movs
aas
fild
call
pop
(bad)
jnp
adc
ja
clc
xchg
sbb
arpl
inc
scas
into
dec
sub
or
pusha
cmp
shl
pusha
inc
push
cli
stos
and
test
pop
jae
push
xchg
scas
inc
push
mov
sub
push
push
jns
bnd
sbb
nop
inc
cmp
sub
xchg
fidiv
je
stos
je
jp
mov
loopne
pushf
or
pop
or
and
pop
enter
inc
cld
push
shr
ret
cmps
jb
std
mov
das
add
aas
add
pop
xchg
or
(bad)
pop
dec
jp
xchg
or
jmp
sub
test
xor
cli
sbb
pop
fldenv
mov
sub
pop
jecxz
fstp
or
xchg
add
jne
lock
fldcw
push
ret
cs
out
sbb
out
bound
mov
(bad)
mov
stc
(bad)
and
nop
loope
jmp
and
sbb
add
(bad)
jecxz
sub
sbb
ins
aam
cmp
xchg
sub
push
in
cmp
jp
call
sub
xchg
mov
xchg
mov
dec
and
les
mov
mov
xchg
in
lds
mov
adc
outs
adc
dec
pop
pusha
mov
pop
icebp
mov
pop
in
jge
loopne
mov
inc
cli
hlt
mov
movs
adc
or
xchg
std
cmp
loope
lds
and
popa
and
call
(bad)
xor
dec
or
mov
adc
adc
sbb
fistp
and
hlt
add
jno
dec
pop
lods
loop
iret
dec
pop
int3
shl
data16
dec
mov
mov
out
dec
pusha
dec
jo
jne
push
xchg
fs
enter
push
or
cs
pusha
jmp
jo
mov
xchg
mov
repz
rol
sar
lods
mov
mov
jns
xor
cwde
mov
push
or
bswap
arpl
loopne
lea
shl
lods
dec
jmp
(bad)
cmp
loop
repz
jmp
adc
pop
ins
outs
xor
mov
je
push
xor
fld
fild
int
mov
adc
and
mov
add
pushf
sbb
mov
rol
push
inc
xchg
mov
fs
fisub
js
mov
sub
int
dec
ret
pop
outs
f2xm1
ret
jb
bound
stos
(bad)
xchg
xor
loopne
loope
int
cdq
int3
(bad)
shl
add
(bad)
push
lock
enter
sub
rcr
mov
adc
mov
inc
mov
retf
enter
fbld
mov
(bad)
adc
mov
adc
dec
and
mov
ins
(bad)
adc
push
lods
mov
sbb
fs
jecxz
ds
hlt
sahf
push
sbb
popa
xor
cmp
or
(bad)
repz
mov
add
jge
push
mov
sub
xchg
mov
inc
add
xor
lahf
sbb
jno
shl
jno
popf
adc
enter
jns
ins
mov
inc
popf
push
das
aaa
ss
inc
mov
dec
add
lahf
sub
inc
cld
mov
mov
pop
xchg
call
div
movs
inc
mov
outs
out
sti
cmps
mov
push
or
xchg
clc
outs
sbb
jmp
fwait
pop
imul
dec
int
cmps
or
inc
cdq
aam
fdivr
sub
jae
and
or
push
push
and
fnstsw
xor
retf
add
adc
cmps
xchg
push
test
dec
push
gs
adc
or
scas
imul
sub
scas
imul
retf
jmp
xchg
lods
sbb
(bad)
and
pop
js
cmc
cmp
pop
test
push
cdq
test
enter
ss
scas
jbe
fcom
inc
cmps
mov
int3
jle
outs
cld
js
xor
ins
add
inc
cdq
and
scas
repz
add
fsub
xchg
out
shr
jecxz
xchg
push
rol
sub
out
or
clc
out
(bad)
int
out
xor
ret
jle
cdq
cmps
xor
xor
sbb
adc
cmps
fidivr
test
sbb
shl
xor
lods
lods
and
push
mov
or
cmp
in
sub
and
cmps
add
xchg
call
add
mov
mov
frstor
fbstp
cmp
cmps
sbb
pop
mov
xchg
sbb
xchg
cmp
inc
mov
shl
cmp
sbb
(bad)
adc
mov
xchg
sub
pushf
std
dec
and
adc
add
sbb
xlat
push
repnz
mov
adc
scas
pop
mov
add
rol
cli
mov
jne
jbe
out
push
mov
pop
les
(bad)
mov
imul
push
icebp
nop
je
push
std
(bad)
sub
pop
jg
fxch
xor
inc
shl
sbb
jp
ret
xchg
call
bound
fadd
mov
outs
mov
(bad)
std
cmp
fwait
outs
cmp
and
xchg
jmp
dec
(bad)
jbe
hlt
aas
retf
inc
aad
pop
xor
cmps
cld
mov
jae
inc
pushf
cmp
scas
loope
dec
fldenv
cs
rol
stc
xor
add
xchg
push
add
pop
into
push
mul
ret
pop
cld
pop
fisubr
rcl
(bad)
pop
hlt
push
xor
push
or
sub
push
cmp
dec
(bad)
ins
mov
aam
mov
and
mov
cli
sub
cmp
or
sbb
and
cmp
dec
scas
outs
mov
loop
movs
jg
sub
push
gs
pop
aam
in
pop
into
cmp
ins
retf
fwait
(bad)
imul
mov
outs
mov
pop
xlat
sub
lock
sbb
cmp
cld
sub
inc
movs
mov
rcl
cmps
mov
mov
pop
std
sahf
mov
mov
mov
mov
mov
aam
pop
imul
or
dec
fnstsw
jecxz
shr
push
ret
add
sub
and
inc
lods
ins
mov
(bad)
sub
add
xor
dec
mov
sub
add
adc
es
adc
popf
inc
fimul
sar
adc
dec
rol
es
cmp
sub
push
div
or
push
adc
xchg
lahf
gs
ins
fcom
retf
xchg
stos
push
push
and
mov
pop
out
xchg
mov
mov
sbb
xor
pop
fistp
(bad)
addr16
adc
sti
inc
mov
inc
mov
aam
mov
outs
test
aam
add
stc
psubsw
arpl
add
inc
fstp
and
xchg
dec
cmps
arpl
xor
push
leave
cmp
aad
or
xor
mov
mov
nop
jne
test
and
stos
inc
mov
inc
mov
in
push
cmp
xor
dec
xchg
outs
aam
int
in
test
mov
pop
movs
gs
in
fst
mov
ja
mov
cmp
dec
mov
push
mov
mov
jl
cdq
inc
mov
aaa
push
cmc
push
mov
pop
mov
ss
rcl
cmps
pusha
movs
inc
into
pop
sub
test
mov
test
dec
scas
jnp
in
cmp
push
cmps
jg
and
sub
cmc
ss
ds
xor
or
pop
mov
fistp
call
enter
pxor
xor
out
pmulhuw
and
inc
mov
jp
pop
sub
shl
rcr
jmp
pop
adc
sub
adc
add
and
xor
enter
rcl
sbb
pop
mov
dec
mov
push
mov
jbe
xchg
jns
push
scas
jae
xor
sbb
sahf
dec
(bad)
sub
or
mul
sar
add
dec
mov
fcomp
loopne
mov
xchg
js
mov
(bad)
xlat
or
sbb
addr16
mov
xchg
rcl
mov
add
sub
cmp
xor
call
pop
sub
stc
push
leave
cmp
out
cmp
adc
pop
cmps
jns
rcr
je
test
sahf
test
xor
pop
xchg
gs
in
stos
mov
loope
shl
pop
mul
out
aas
sbb
mov
sub
adc
or
adc
adc
jle
xchg
jb
cmc
inc
mov
mov
lahf
outs
int3
ss
and
pop
sti
xor
sub
out
pop
mov
dec
mov
xchg
xchg
cwde
xchg
dec
aad
arpl
pop
mov
fistp
out
add
test
inc
shr
arpl
add
enter
mov
mov
add
xor
push
or
jae
pusha
fidivr
psllw
adc
in
or
cmp
dec
mov
mov
and
adc
add
cmp
or
add
out
daa
std
mov
sbb
in
in
xchg
gs
sbb
sbb
daa
adc
xor
(bad)
cmp
sub
fld
jg
test
adc
dec
mov
cmp
xor
adc
xchg
(bad)
ja
jp
or
out
out
mov
(bad)
jle
add
dec
fdivr
repnz
sub
jne
push
mov
ins
cmp
add
out
pop
mov
push
mov
lock
and
pop
pop
cli
dec
retf
push
test
movs
mov
arpl
jg
dec
test
dec
stos
nop
inc
or
jmp
inc
xchg
push
movs
inc
mov
arpl
add
and
dec
mov
jo
pop
mov
ja
lahf
jl
fild
loopne
sbb
push
adc
xlat
and
sbb
or
dec
shl
in
adc
inc
mov
mov
shr
data16
push
into
add
imul
and
in
cmp
fistp
sub
iret
ss
int3
pop
aad
js
dec
mov
cmps
lea
push
shr
les
ins
out
xor
out
sub
loopne
movs
xchg
xchg
ins
mov
dec
fisubr
and
cs
xchg
xor
dec
int
jl
sub
sub
push
sbb
scas
gs
fdiv
shr
mov
stos
imul
jmp
shl
sbb
clc
js
call
shl
dec
cmps
xchg
cdq
stos
dec
test
mov
mov
in
mov
les
hlt
jle
cwde
jbe
xor
cmp
cmp
pop
mov
mov
js
js
aas
push
add
enter
pop
fnsave
cmc
mov
mov
xlat
sub
add
popa
(bad)
push
(bad)
aaa
adc
xchg
icebp
pushf
cmps
xchg
jne
lea
cwde
dec
cmps
push
shr
out
adc
scas
fistp
daa
push
lds
sbb
cs
fist
push
mov
mov
push
ror
push
xor
jns
pop
mov
jl
es
sbb
add
adc
xor
or
jne
cs
addr16
push
in
pop
sbb
popa
int3
cmp
call
cdq
lahf
xchg
js
mov
xchg
je
inc
shr
mul
ss
and
call
cmp
pop
mov
pop
adc
adc
and
enter
xor
dec
lea
imul
fimul
loope
sar
pop
xlat
and
cmp
ds
adc
loopne
cmps
inc
mov
xor
dec
mov
or
inc
mov
inc
fisubr
cmp
cdq
mov
(bad)
fild
sbb
mov
mov
push
mov
test
jge
fsubr
test
cs
repz
lods
dec
lea
dec
pop
or
cmp
push
shl
(bad)
ss
mov
je
xor
sub
add
xor
popa
std
ds
pop
mov
mov
fcomp
push
aad
cli
and
xor
loopne
shl
ret
cmp
sub
inc
cmps
mov
(bad)
pusha
clc
es
cmp
fidivr
aas
enter
int
in
or
xor
into
pop
mov
es
cmp
shr
shr
out
mov
jne
call
int3
sub
cs
jmp
stos
jnp
mov
mov
or
ds
pop
lds
arpl
sahf
into
jbe
outs
nop
imul
jmp
lds
retf
xor
repz
xor
lds
(bad)
lea
xor
push
scas
imul
mov
dec
mov
jne
xor
jmp
xlat
or
pop
mov
jae
arpl
sbb
icebp
push
mov
xchg
fs
dec
test
es
clc
test
adc
mov
inc
mov
mov
in
sub
and
iret
adc
sbb
pop
xlat
mov
jg
mov
ss
call
cs
(bad)
pop
mov
fidivr
aaa
ret
pop
movs
inc
mov
imul
(bad)
mov
(bad)
cmp
mov
les
cmp
sbb
lds
jmp
enter
aas
push
loope
in
cmp
daa
lds
in
pop
sub
loopne
jecxz
mov
mov
into
and
push
cld
sub
outs
mov
aas
sbb
sub
jecxz
mov
ins
(bad)
jg
test
inc
nop
fsub
icebp
xor
pop
fstp
sahf
jnp
cmp
iret
jns
sub
ror
mov
and
cmp
add
out
enter
adc
sub
and
or
in
and
les
sbb
mov
jg
jp
outs
movs
pushf
dec
pop
call
ins
(bad)
dec
mov
mov
xchg
popa
mov
movs
shr
sar
retf
xor
pop
xchg
clc
push
test
and
xor
and
es
mov
popf
inc
xchg
imul
ficomp
jl
inc
lea
push
test
nop
(bad)
push
(bad)
adc
ret
add
daa
pop
ds
cld
xor
and
nop
jo
fwait
mov
mov
and
sub
or
push
fld
or
sub
popf
pushf
nop
jl
fwait
test
inc
fsubr
es
inc
mov
loope
mov
and
dec
mov
xchg
push
fstp
jl
xchg
cdq
jp
(bad)
js
dec
cmp
ret
and
xor
sub
xor
neg
imul
aam
push
mul
test
xchg
add
xor
int3
dec
fmul
ret
and
sbb
pop
mov
add
into
pop
sar
lds
jno
cwde
jg
xchg
(bad)
outs
mov
mov
xchg
jg
or
aaa
les
or
cmp
ja
xchg
xchg
int3
aas
retf
push
movs
dec
xchg
je
dec
rcr
xchg
adc
add
test
cmc
js
xchg
je
ins
scas
dec
(bad)
pop
rcr
test
test
into
cmp
lahf
mov
jns
xchg
jae
xchg
cmp
inc
mov
mov
(bad)
sti
cmp
inc
mov
daa
cmp
push
sub
add
inc
scas
cwde
xchg
jne
pop
mov
dec
mov
xchg
jle
jl
add
push
add
and
bnd
cmp
push
repz
inc
cmps
sahf
push
mov
dec
stos
xchg
xchg
dec
stos
popa
mov
xchg
inc
mov
cmp
out
inc
scas
ins
shl
les
clc
daa
arpl
and
sti
nop
lea
sbb
sub
mov
inc
mov
jne
xchg
rcl
fbstp
add
pop
in
ds
adc
aaa
das
ror
sbb
rcl
cmp
pop
sub
cli
daa
clc
and
push
int3
dec
nop
dec
fidivr
xor
pop
mov
popa
test
and
push
ror
inc
leave
adc
push
aad
mov
and
cli
add
(bad)
dec
fstp
lock
out
push
movs
imul
or
push
out
sub
and
dec
inc
(bad)
inc
fstp
outs
fimul
inc
cmps
(bad)
retf
cmp
xor
jmp
test
mov
inc
iret
pop
cld
ss
lock
int3
sub
inc
xchg
pop
mov
push
mov
xchg
xchg
fiadd
sti
push
into
add
add
push
daa
add
push
mov
push
loope
or
mov
jae
pushf
je
xchg
cmp
leave
pop
loope
sbb
adc
or
daa
sbb
ds
cmp
in
or
ss
pop
push
sbb
inc
stos
outs
sbb
xor
test
jmp
hlt
ds
pop
mov
add
pop
mov
retf
ret
cmp
nop
inc
mov
nop
inc
mov
and
ds
pop
cmc
or
adc
jb
inc
adc
push
mov
rcl
push
out
stos
outs
int
scas
jno
jno
mov
sub
sbb
das
in
fadd
jge
jbe
retf
xor
(bad)
pop
sub
dec
mov
or
scas
mov
xchg
jnp
fmul
ja
outs
fst
xchg
cmps
xchg
cwde
ja
cld
cs
test
(bad)
inc
retf
sub
repz
aad
pop
stc
and
(bad)
sub
ins
test
pushf
popa
int3
adc
aas
ret
sub
inc
movs
je
jg
add
lahf
gs
fst
out
add
cmp
inc
retf
xor
(bad)
popa
mov
sub
push
mov
mov
bswap
and
repz
into
cmp
or
aam
shr
adc
and
cld
sub
out
add
rol
jb
call
xchg
je
sub
jo
outs
aas
adc
pop
int
mov
lahf
imul
adc
ds
and
push
mov
lock
or
sbb
jmp
add
jo
push
and
aaa
adc
pop
(bad)
add
adc
cmp
cs
add
cmp
shr
push
fld
cmc
pop
cmp
or
sub
in
out
sub
or
inc
clc
mov
scas
pushf
jo
and
add
int
repz
ins
ret
dec
movs
xchg
jnp
jp
push
movs
xchg
jle
ds
popf
xchg
ins
mov
je
popf
cdq
jp
dec
into
and
jbe
lahf
mov
out
test
dec
lea
pop
fistp
dec
fistp
sbb
repz
(bad)
scas
jle
cwde
jg
inc
mov
int3
das
dec
jmp
retf
retf
jne
or
ficom
popf
ja
xor
out
adc
aas
retf
dec
mov
xor
cmp
mov
movs
jle
xor
or
or
mov
xchg
dec
shl
enter
pop
rcr
mov
jb
outs
mov
rcl
icebp
das
clc
dec
sbb
push
out
dec
aaa
add
and
out
cs
xor
ret
pop
shl
icebp
je
or
out
xor
xor
sti
and
xchg
(bad)
outs
lods
call
mov
xchg
jg
add
mov
iret
dec
rol
xchg
push
push
clc
ds
sub
and
mov
mov
in
retf
push
mov
push
xchg
jbe
jecxz
or
test
mov
mov
inc
std
push
mov
inc
mov
xchg
mov
repz
rcl
out
test
mov
adc
sbb
sub
pop
out
scas
push
(bad)
sub
test
cmp
or
pop
repnz
push
mov
add
sbb
push
(bad)
je
xchg
mov
and
adc
push
mov
fcom
jmp
mov
mov
fdivr
add
push
sbb
cmp
ret
pop
sub
loope
mov
mov
arpl
mov
lock
xchg
popa
fistp
sahf
fwait
pusha
in
or
xor
cmp
push
movs
nop
jns
sti
pop
stos
push
mov
popf
xchg
xchg
imul
xchg
imul
in
mov
xchg
push
into
pop
mov
(bad)
daa
jo
pop
shl
out
fadd
jmp
sbb
ds
(bad)
push
mov
ins
cmp
push
nop
and
dec
fdiv
sub
std
pop
(bad)
pop
push
lds
lahf
jns
push
ins
enter
imul
lods
mov
push
mov
aad
mov
inc
mov
xchg
inc
retf
cmp
add
sbb
adc
inc
ficom
test
ficom
add
mov
add
sbb
lock
mov
pop
mov
(bad)
je
call
es
cmp
jae
ins
shl
push
and
cmc
sub
fsubr
jmp
adc
mov
jo
lahf
pushf
movs
jne
and
xor
ins
mov
push
iret
and
lods
pushf
jg
xchg
or
jne
inc
mov
mov
(bad)
sub
dec
enter
call
xor
pop
lods
(bad)
fdivr
out
jle
fwait
dec
xlat
inc
xor
adc
pop
xor
mov
nop
data16
pop
adc
xor
push
in
int
sub
cmps
jno
inc
xchg
retf
and
stc
das
jecxz
fadd
jnp
xchg
div
or
and
aam
loope
xor
sti
add
pop
xchg
mov
xor
or
clc
pop
clc
adc
push
pop
adc
dec
mov
fs
pop
ficomp
outs
fdivr
stos
popf
je
pusha
rol
imul
(bad)
es
dec
xchg
lea
pop
shl
sub
or
out
not
lahf
mov
lahf
jp
cmp
test
stos
dec
mov
repz
xlat
sub
scas
mov
inc
mov
fcom
popf
mov
jae
adc
or
pop
fst
pop
mov
xchg
jnp
sub
sbb
ror
push
mov
jmp
jbe
(bad)
fmul
stos
pusha
lds
nop
mov
test
add
jb
sahf
js
test
imul
sbb
sti
add
pop
or
mov
aaa
or
pop
mov
lea
inc
movs
lods
xor
lock
fisttp
icebp
dec
xchg
je
sub
dec
fdivr
xor
jae
xchg
jp
sar
es
add
and
jae
sbb
xchg
xchg
inc
fisttp
mov
fstp
out
push
jne
xchg
dec
lods
addr16
cmps
cdq
inc
mov
or
cmp
lock
repnz
loop
ret
dec
mov
xor
retf
inc
xchg
inc
fadd
hlt
daa
cld
pop
mov
aad
mov
sub
aas
not
mov
and
sbb
and
pop
scas
push
adc
enter
mov
nop
mov
mov
push
mov
addr16
mov
add
iret
ud2
arpl
push
mov
jg
movs
mov
add
jl
push
inc
mov
into
sahf
data16
(bad)
dec
sub
mov
pop
scas
lea
mov
aam
mov
mov
mov
push
int3
and
ds
pop
test
jbe
gs
push
repnz
xlat
push
jmp
daa
dec
mov
cdq
jae
xchg
ins
fistp
inc
mov
sbb
adc
sub
adc
push
lods
jae
dec
mov
out
fsub
int3
add
sub
arpl
mov
jge
adc
pop
mov
xchg
push
fldcw
add
adc
into
mov
mov
mov
(bad)
leavew
or
push
adc
retf
push
mov
push
cmp
and
adc
(bad)
pop
mov
jge
push
mov
lds
jecxz
stc
inc
mov
and
add
push
pop
int3
sub
int3
dec
mov
stc
xor
stc
mov
or
icebp
inc
hlt
inc
cmps
xchg
mov
fdivr
std
push
cli
pop
movs
cmps
test
jg
loopne
cld
and
dec
fsub
sub
push
leave
push
add
xor
cmp
sub
add
sub
(bad)
daa
into
xchg
ins
lods
jns
(bad)
dec
mov
pusha
xlat
push
mov
jle
pop
add
scas
ins
mov
mov
iret
or
xor
and
or
adc
arpl
mov
cld
push
mov
fiadd
fwait
dec
and
sbb
sub
loopne
adc
mov
push
ins
int3
pop
aam
jmp
es
aad
call
imul
pop
(bad)
lds
cld
inc
mov
xor
leave
pop
mov
pop
loope
add
loopne
iret
das
test
or
cmp
hlt
push
add
rcl
scas
push
mov
popa
fldcw
cmp
sbb
retf
leave
pop
lods
dec
xor
mov
mov
test
cwde
lahf
jg
cdq
jl
pop
mov
cmp
dec
scas
pusha
adc
push
retf
push
or
adc
adc
push
lods
jbe
cmp
sub
pop
push
fstp
popf
mov
mov
daa
push
(bad)
ss
dec
fldenv
out
lea
adc
in
cmps
sub
ins
inc
sbb
cmp
pop
adc
xor
push
lds
fdivr
mov
outs
fdivr
in
inc
test
pusha
mov
inc
cmps
jae
dec
push
adc
jne
cmp
xor
(bad)
data16
ins
add
push
adc
loop
loop
scas
fistp
mov
dec
mov
out
sti
psllw
xchg
ja
add
push
in
es
cmp
dec
rol
cmp
xchg
nop
ins
mov
leave
dec
lds
clc
push
and
in
pop
nop
dec
sar
sbb
cmp
adc
inc
ret
bound
adc
cmp
sti
add
stc
cmp
call
jp
push
in
in
or
sbb
jo
pushf
inc
fidiv
sbb
or
mov
ds
add
cmc
and
out
and
push
cmc
xor
les
sub
or
xor
add
dec
mov
cmps
mov
cmp
dec
aad
mov
fadd
clc
xor
dec
rcl
adc
push
sbb
out
ficomp
mov
cwde
test
jmp
add
push
movs
xchg
movs
mov
or
sbb
cmp
cmp
int
cmps
jae
cmc
push
xchg
dec
add
push
add
cmp
xor
add
mov
add
and
rol
fdiv
mov
inc
xchg
mov
les
je
xor
and
fnsave
push
ds
inc
test
pop
push
sbb
in
outs
cdq
xor
repz
fs
xor
jmp
mov
push
test
mov
fnsave
mov
(bad)
cmc
inc
xchg
push
sbb
lock
ja
xor
xchg
cmps
sbb
mov
ret
mov
test
inc
int3
sbb
add
pop
rcr
js
xchg
outs
hlt
add
test
mov
fisttp
test
xchg
in
(bad)
in
loopne
mov
popa
adc
cs
xlat
sbb
mov
jmp
mov
pusha
sub
push
pop
xchg
cdq
dec
cs
fdivr
cmp
repnz
pop
push
outs
(bad)
cli
(bad)
add
jo
sahf
dec
clc
out
inc
mov
call
cmp
inc
jae
pop
loopne
and
call
addr16
sbb
sub
out
push
je
test
pop
(bad)
stc
jne
retf
(bad)
loop
sbb
jmp
jb
and
fld
int
enter
pusha
in
jecxz
(bad)
out
xchg
shl
into
mov
push
xchg
int
jl
sub
loop
dec
mov
mov
and
les
pop
push
pop
stos
sub
pop
retf
jb
out
xchg
rol
sub
add
inc
(bad)
push
inc
and
jmp
add
cdq
(bad)
cmc
out
push
out
popa
add
iret
fld
mov
mov
(bad)
cmp
push
push
sub
push
ins
out
mov
dec
mov
in
jne
and
out
and
push
and
repnz
popa
aaa
ror
sbb
scas
adc
xor
xchg
jo
cmp
add
add
sub
xlat
dec
ret
jbe
rep
test
xlat
sbb
(bad)
jno
jl
scas
add
les
fld
popf
shl
popa
addr16
fwait
push
push
bound
(bad)
mov
cwde
fild
mov
outs
jae
push
jne
fisttp
ins
aaa
adc
shl
push
leave
push
imul
leave
loope
aam
inc
jmp
ds
pop
inc
ss
std
dec
lods
mov
icebp
mov
jne
je
sbb
jecxz
daa
jp
and
pop
test
mov
push
mov
mov
xor
mov
mov
stos
sbb
sahf
mov
shr
stos
sti
adc
dec
mov
out
ret
mov
pop
imul
push
sbb
ds
inc
lahf
cmp
neg
pop
and
loope
test
je
mov
xor
int
pop
pop
loope
inc
mov
arpl
fcmove
jle
jns
ror
call
jbe
les
and
sub
out
popa
lds
push
xchg
js
cmps
jmp
pop
and
xor
cmp
adc
neg
fidiv
pop
je
lods
dec
jp
adc
mov
fld
cmp
out
sbb
mov
xchg
cs
xor
rcl
cmp
xor
push
aad
jecxz
cmp
pop
lds
pop
jmp
stos
cmps
or
pop
adc
rcr
ins
cdq
into
xchg
cmp
in
call
out
ror
and
sub
or
je
push
inc
nop
cmp
push
mov
and
and
jecxz
push
ins
call
xor
scas
xlat
lahf
or
movs
mov
test
ret
call
cmp
mov
xchg
out
scas
imul
inc
and
scas
add
and
inc
test
popa
jo
popf
pop
cmp
add
dec
xchg
xchg
in
dec
jbe
sub
jmp
lods
and
dec
stos
xchg
pop
push
in
mov
xchg
add
add
test
xchg
push
mov
scas
mov
in
cdq
pop
rcl
mov
(bad)
or
lock
rol
outs
ret
(bad)
repz
add
inc
sub
stos
int3
sbb
sbb
push
inc
rcl
cmp
or
iret
or
sbb
daa
ficom
pop
xor
test
fidiv
mov
adc
sahf
out
mov
mov
retf
cmp
inc
jno
inc
cli
push
jecxz
sti
jp
adc
daa
push
mov
xor
xchg
xchg
mov
push
mov
sbb
mov
cmp
pop
pop
cmp
rcl
dec
ins
sbb
into
test
sub
mov
mov
xchg
pushf
mov
addr16
mov
into
mov
fisub
scas
push
push
popa
fsub
mov
in
jmp
je
aam
xor
sbb
adc
in
loopne
(bad)
pminub
int
xchg
mov
ins
sbb
fs
inc
mov
enter
jp
xor
gs
dec
das
(bad)
mov
movs
xchg
popa
(bad)
and
mov
pushf
(bad)
mov
cmp
xchg
sbb
xchg
jle
mov
jbe
jb
shl
jle
push
jmp
mov
addr16
mov
cmp
ins
pop
pop
sar
push
fwait
mov
jg
shl
pop
or
adc
fwait
imul
out
(bad)
dec
daa
stos
cmps
pop
mov
mov
fdiv
fldcw
js
mov
aas
cmps
sub
ror
les
pop
or
mov
aam
inc
sub
into
mov
stc
icebp
push
ja
inc
lds
call
pop
dec
shr
xchg
int3
int
(bad)
mov
jecxz
cmp
xchg
add
sub
cwde
sub
arpl
xchg
retf
mov
xor
mov
cmp
call
sbb
mov
jmp
and
push
aam
pop
outs
(bad)
gs
mov
rcl
popa
mov
movs
jns
sbb
push
in
test
cmps
push
ja
js
test
adc
pop
mov
int
mov
add
out
cmp
aam
lds
adc
jge
sahf
xor
push
and
cmp
jb
jbe
int3
mov
xchg
jge
addr16
stc
in
add
jmp
loope
push
xchg
xchg
out
shr
add
mov
das
cmp
pop
je
sbb
stos
xor
mov
ins
sti
jb
in
mov
cmp
add
(bad)
fld
seto
jns
push
mov
dec
sbb
add
mov
fsubr
fisttp
and
mov
gs
cld
lods
(bad)
popf
retf
mov
(bad)
sub
add
xor
movs
inc
inc
inc
xor
adc
retf
leave
ret
bound
add
call
stos
sub
cvtps2pi
icebp
lods
retf
cdq
sbb
idiv
cmps
jae
pop
or
sbb
add
mov
jbe
out
movs
(bad)
adc
dec
(bad)
fidivr
scas
call
dec
call
dec
add
cmp
and
jo
xor
xchg
add
xor
aas
bnd
movs
xor
xor
xchg
xchg
scas
push
mov
or
pop
inc
or
mov
jmp
mov
hlt
outs
imul
popf
pushf
jno
adc
adc
shld
aam
or
popf
stos
je
xchg
in
mov
dec
ds
inc
mov
in
nop
cmp
sahf
(bad)
enter
and
sbb
out
mov
enter
loop
fimul
push
jmp
jno
pop
(bad)
lods
jns
inc
xor
sub
and
rol
pop
jb
jmp
mov
adc
hlt
into
aas
sbb
cmp
push
test
sub
mov
jecxz
mov
jmp
aas
push
push
cmp
jmp
inc
inc
mov
ret
cmp
es
jecxz
int
mov
je
popf
mov
fnstenv
retf
out
cli
adc
mov
out
mov
mov
sub
popf
dec
cmps
mov
ret
jge
ficom
push
mov
mov
add
jg
add
or
rol
loopne
cmps
popw
pop
mov
fst
pop
inc
jmp
ret
stos
sahf
fstp
push
pop
jb
call
cmps
call
in
cmc
jmp
mov
rcl
jp
stos
fistp
push
in
icebp
out
mov
mov
clc
jmp
mov
dec
sbb
cmps
add
jl
lahf
mov
nop
cdq
xchg
inc
scas
dec
movs
fdivr
xchg
or
mov
mov
(bad)
ins
dec
ds
leave
cmp
call
test
sbb
adc
sar
mov
and
jl
mov
inc
cmp
cdq
mov
xor
test
jmp
sub
movs
push
outs
or
xchg
lahf
adc
ds
mov
dec
mov
pop
xchg
repz
into
xlat
mov
xchg
aaa
xchg
movs
push
test
push
mov
test
push
mov
call
xchg
push
adc
jg
lods
adc
std
icebp
repnz
mov
sbb
mov
and
xor
push
rcr
into
jmp
loopne
enterw
jg
add
xor
loope
jmp
jp
jne
mov
cmps
and
push
and
inc
xor
dec
movs
aaa
retf
addr16
sub
add
mov
jnp
fnsave
sub
icebp
cmp
push
cwde
hlt
test
jnp
test
ret
pop
sub
mov
dec
mov
inc
imul
xor
and
adc
iretw
dec
ficom
(bad)
repz
gs
cmc
push
sub
jp
inc
jg
ret
add
inc
bound
dec
rcl
out
sbb
inc
or
inc
add
sar
and
(bad)
sti
jo
mov
shr
mov
adc
aaa
xchg
dec
call
sub
je
push
push
fstp
xor
in
pop
retf
cs
mov
xchg
pop
js
cs
dec
iret
inc
jb
xchg
pop
xor
or
xchg
int
into
jo
mov
and
dec
push
pop
mov
pop
shr
xor
fs
cld
(bad)
jne
xchg
xor
sbb
lea
cwde
enter
jns
mov
push
test
mov
in
cs
mov
push
mov
or
aas
movs
mov
movs
xor
xchg
cdq
rcr
or
cmp
xor
lods
or
test
cmp
popa
cmp
stc
sbb
sahf
test
out
jae
mov
xor
stc
ret
iret
and
retf
or
push
rcr
mov
or
pop
in
mov
jno
jo
outs
ss
mov
sbb
lods
out
iret
push
ja
stos
fadd
jmp
out
push
sub
inc
std
cmps
(bad)
(bad)
popa
outs
jg
fbld
js
mov
xor
xor
push
cmp
or
jg
inc
inc
sub
push
gs
ins
lock
pop
or
loope
lds
lahf
adc
add
ins
xor
rcr
fsub
sbb
scas
dec
(bad)
repnz
mov
jmp
mov
xchg
sub
scas
push
test
mov
push
push
mov
out
gs
mov
mov
int
movs
push
jge
sbb
popf
xchg
mov
std
or
xlat
outs
repz
xor
mov
jle
sub
and
dec
mov
aam
mov
inc
push
gs
test
rol
pop
imul
daa
mov
icebp
or
inc
push
popf
in
mov
movs
fsub
scas
push
add
in
aaa
or
popf
cld
nop
mov
and
pop
stos
xor
mov
xchg
retf
leave
sub
pop
int
push
lahf
pop
fldenv
pop
movs
mov
mov
pop
les
mov
push
test
add
jg
out
push
mov
in
in
frstor
and
(bad)
sbb
or
xchg
mov
sahf
es
inc
daa
call
add
add
jnp
pop
(bad)
inc
data16
movs
adc
mov
leave
jb
fsubrp
cmp
adc
sbb
je
mov
fmul
int3
push
adc
and
retf
outs
push
daa
pop
(bad)
cmp
mov
push
cs
iret
(bad)
jmp
mov
mov
fs
test
test
mov
lods
xchg
in
jl
cmp
sti
call
outs
cwde
hlt
xor
inc
enter
arpl
sub
inc
mov
ret
mov
xchg
imul
jbe
jmp
movs
push
in
int
mov
pop
adc
repz
call
lock
xor
cmp
or
sub
call
inc
and
pop
addr16
cmp
hlt
xlat
lods
xor
ins
mov
cld
xor
sahf
jecxz
movs
push
lds
mov
lahf
mov
pop
fisubr
out
push
pop
xchg
push
dec
pop
movs
xchg
(bad)
test
imul
(bad)
dec
std
enter
mov
dec
mov
sub
xor
ds
and
inc
retf
inc
movs
xchg
repz
adc
test
jmp
cmp
das
pop
dec
cmps
stos
mov
(bad)
(bad)
cs
inc
inc
xchg
inc
adc
sub
sahf
repz
sbb
mov
xor
push
pop
jecxz
ret
mov
shl
mov
(bad)
and
xchg
popf
hlt
sub
mov
retf
ja
adc
ret
and
das
xchg
test
ret
sub
pop
pop
inc
retf
lods
jmp
pop
fsubr
in
xchg
les
mov
mov
push
fsub
(bad)
pop
xor
mov
dec
ret
das
dec
movs
mov
(bad)
mov
mov
xchg
retf
add
inc
loop
outs
push
push
ret
mov
pop
cmp
adc
mov
(bad)
(bad)
jl
test
cli
pop
shl
pop
pop
call
fldenv
test
fiadd
dec
pop
inc
pop
(bad)
hlt
mov
xor
xchg
out
fcomp
test
dec
repz
mov
or
mov
xor
addr16
push
rol
ret
test
mov
int
mov
ins
add
and
outs
pusha
outs
cwde
xor
in
lods
out
(bad)
pop
ds
es
ret
loop
xor
loope
gs
push
push
xchg
call
xor
xchg
pop
jno
sub
jp
and
sahf
push
mov
push
cmp
xchg
(bad)
cld
out
dec
aas
repz
sahf
(bad)
jno
sahf
es
es
mov
shr
and
(bad)
hlt
jo
dec
mov
sub
push
pusha
mov
sbb
sbb
cmc
cmps
pushf
movs
xor
and
imul
jle
je
lahf
add
in
pusha
hlt
push
xchg
(bad)
test
int
vmcall
dec
test
mov
dec
or
(bad)
inc
sub
mov
in
cmp
int
rol
mov
aad
mov
mov
fldenv
xchg
xor
push
fild
xor
ror
push
add
sub
jne
rcr
fdiv
fisttp
scas
add
test
fbstp
and
dec
les
and
sub
xchg
xor
push
fnsave
jmp
xchg
test
cli
push
call
sbb
inc
int
test
ins
(bad)
sub
mov
adc
stc
xchg
mov
lds
and
or
data16
je
mov
(bad)
mov
ficomp
jno
repz
or
into
mov
jbe
outs
sub
(bad)
adc
pop
mov
pusha
push
lea
mov
lea
mov
cdq
bound
fsub
cmp
pusha
into
test
mov
cli
daa
fbstp
ins
in
mov
push
xor
shl
jle
and
outs
jmp
jno
jg
lods
call
repz
ins
push
mov
fucomp
sbb
stos
(bad)
loope
adc
and
mov
aad
xchg
popa
and
xor
out
scas
aaa
add
and
cmp
xor
mov
mov
fcomp
scas
jbe
mov
test
adc
lea
adc
pop
mov
ins
lock
jl
dec
cwde
es
sbb
mov
cdq
xor
cmp
jae
mov
push
stos
dec
outs
loop
loopne
fsubr
out
sbb
leave
add
int3
es
movs
mov
adc
dec
sub
mov
pop
rcr
and
fidiv
das
sbb
jmp
xor
adc
cmp
add
jne
mov
cld
adc
fst
jp
adc
test
test
jns
or
mov
push
xchg
xor
dec
inc
lods
out
mov
sub
ss
pop
lock
mov
mov
in
xor
sub
sbb
jmp
clc
push
push
lods
pop
sub
aas
fstp
push
div
mov
adc
sbb
pop
adc
or
aad
clc
add
push
int3
ficomp
push
popa
jmp
movs
pop
dec
mov
adc
xchg
scas
inc
fs
mov
es
push
int3
inc
and
pop
ja
pusha
or
data16
gs
jmp
xlat
xchg
xchg
xchg
rcl
loopne
sbb
icebp
mov
or
out
test
jae
sbb
mov
les
mov
pop
cmp
icebp
dec
(bad)
fsubr
jnp
mov
lds
stos
aam
xor
push
in
adc
mov
push
stos
loope
sbb
in
retf
in
mov
aaa
xchg
mov
push
push
arpl
popf
or
loop
or
in
dec
(bad)
(bad)
(bad)
out
add
xor
push
push
add
outs
out
add
sbb
hlt
mov
cmp
popf
jno
jns
add
push
sahf
or
retf
jp
push
add
out
inc
xchg
sahf
stos
jns
pusha
shl
(bad)
arpl
lods
movs
cmp
xchg
push
aaa
or
movs
cmps
bound
add
sbb
sbb
inc
jns
jno
cld
hlt
lahf
add
sbb
dec
xchg
dec
fbld
lods
mov
(bad)
(bad)
(bad)
cmp
sub
movs
ss
aam
ss
movs
push
cmp
sub
icebp
inc
lea
pop
sbb
scas
push
ds
lods
sub
in
cmc
sub
outs
mov
dec
jo
adc
sbb
retf
mov
out
imul
or
or
cmp
cdq
adc
stc
repnz
jge
aam
leave
pushf
jmp
mov
or
or
test
ja
pop
and
mov
mov
xor
push
fdecstp
push
pop
cwde
outs
scas
sahf
stos
imul
sbb
cmp
inc
sbb
sahf
clc
inc
jns
mov
adc
and
and
pop
xchg
cs
jle
or
sub
xor
xchg
jmp
push
shl
push
add
xchg
push
add
nop
pushf
push
xchg
and
fidivr
popf
dec
in
cs
das
jp
jle
out
ds
jno
retf
test
push
loopne
adc
add
inc
aad
adc
nop
or
inc
dec
mov
jae
mov
cmp
mov
lds
pop
mov
loop
sahf
aas
rol
mov
lock
jno
jmp
xchg
sbb
rcl
sbb
push
pop
xchg
(bad)
fs
es
inc
cmp
fs
inc
cmp
shr
ret
out
mov
out
pop
ins
rcl
ds
adc
mov
xchg
jmp
mov
lock
xchg
aam
aas
fucomi
cli
sub
mov
arpl
dec
sub
push
cmp
push
mov
and
mov
test
and
shl
repz
ins
call
cmp
(bad)
arpl
repz
(bad)
xchg
mov
inc
in
loopne
cld
and
hlt
inc
push
cmp
pop
xchg
imul
xchg
xlat
xchg
aam
or
sub
stos
js
xchg
adc
inc
push
jno
and
cmp
scas
icebp
sti
les
jns
push
cmc
dec
mov
es
mov
fwait
mov
fsub
fwait
daa
ins
scas
rcr
and
mov
jnp
aam
jle
je
fnstcw
ss
hlt
int
jb
mov
cmps
shl
stos
ret
retf
js
jbe
rcr
ss
sub
jae
jg
jge
lahf
jmp
jbe
nop
ins
repnz
mov
cmc
iret
bound
mov
sbb
fxch
sub
dec
xor
(bad)
push
cmp
enter
add
xor
mov
cmp
popa
nop
mov
ret
mov
pop
or
daa
or
repz
add
dec
push
push
shl
xchg
inc
or
pusha
lea
cmp
mov
mov
inc
ror
repz
adc
dec
push
mov
mov
pushf
aad
sbb
mov
add
sbb
and
je
xor
shl
mov
out
imul
retw
mov
imul
adc
sbb
adc
dec
repz
movs
shl
sub
push
adc
mov
retf
jmp
ret
fmulp
or
js
adc
popf
mov
mov
push
xchg
cs
mov
fadd
mov
ins
jl
fwait
jle
icebp
mov
div
in
fwait
cld
xchg
lods
mov
mov
add
mov
xor
cmp
imul
out
pop
sub
jmp
dec
sti
leave
dec
push
and
call
call
in
ds
sub
call
shr
jno
sub
jl
jns
test
push
xchg
cli
push
fidiv
pop
jo
cmp
inc
xlat
jmp
jmp
jecxz
sub
rol
cmps
dec
les
inc
int3
xor
mov
mov
stos
mov
cmp
(bad)
push
or
push
fild
mov
shl
sti
sub
out
xor
(bad)
xor
xor
data16
dec
mov
mov
jp
retf
adc
push
sub
(bad)
xor
sbb
jmp
sbb
out
xchg
sub
jae
out
in
rcl
pop
je
in
shl
addr16
data16
popa
dec
into
into
mov
xor
xor
push
mov
int3
fld
add
mov
repnz
dec
adc
idiv
dec
lods
inc
mov
fisub
xchg
push
ja
cld
adc
sbb
jle
test
les
pop
xor
xor
bound
or
sti
dec
iret
push
std
mov
addr16
stos
or
outs
inc
push
hlt
popf
repz
dec
add
cs
(bad)
fdivrp
mov
test
scas
or
daa
pop
out
fld
jne
xchg
adc
pop
jg
pushf
mov
iret
call
push
retf
icebp
push
das
cs
mul
sahf
std
dec
out
shl
or
lods
xchg
sub
cdq
inc
fs
xor
cwde
les
jl
add
stc
shr
mov
mov
jl
in
xchg
adc
or
mov
ins
mov
test
fwait
xchg
dec
or
xchg
inc
jnp
shl
and
inc
or
push
test
enter
sub
mov
popa
mov
sub
outs
stos
std
sbb
add
and
out
jbe
into
out
xor
xchg
cmc
mov
mov
lods
cmp
bound
xor
(bad)
and
enter
cmp
into
test
outs
es
jae
out
adc
in
js
shl
sub
dec
dec
cmp
or
popa
mov
inc
mov
jmp
mov
dec
cmp
mov
test
xor
dec
gs
jecxz
repnz
repnz
inc
jle
sbb
xor
dec
adc
fld
test
push
int
sub
(bad)
cmp
pushf
bound
jp
dec
cmp
xor
sub
out
mov
fnstenv
sbb
dec
ins
jbe
adc
arpl
imul
cmc
inc
stos
jmp
dec
aam
stos
fcmovbe
(bad)
xor
repnz
jb
shr
loopne
call
in
outs
jecxz
lods
add
lods
push
retf
mov
xor
adc
push
dec
lahf
scas
pop
add
or
and
arpl
sti
and
pop
stos
jbe
sub
(bad)
jne
xor
mov
aad
cdq
lods
add
add
bound
in
stos
xchg
scas
movs
jnp
jle
shl
cmps
cmp
lock
test
xor
add
jne
fstp
jmp
mov
jecxz
jbe
jl
mov
lahf
dec
scas
stc
aam
ret
lahf
sub
arpl
and
dec
popf
jmp
stc
sahf
mov
stc
push
adc
rcl
gs
lods
je
movs
mov
cmp
arpl
sbb
inc
inc
jno
adc
lahf
pushf
jg
das
jge
push
test
bound
inc
scas
ds
mov
and
into
sub
cmps
loopne
hlt
sbb
cmp
xor
fadd
jg
int
pushf
adc
jns
and
xor
xor
pop
sbb
loopne
or
popf
push
pop
loopne
(bad)
cmp
xor
imul
add
pop
mov
test
bound
fisubr
enter
pop
mov
cmp
mov
sbb
aas
sbb
popa
xchg
sbb
xor
repnz
cmc
test
jnp
mov
push
inc
enter
ins
mov
dec
retf
fmul
mov
(bad)
(bad)
(bad)
(bad)
popf
cdq
test
nop
ins
not
xchg
fcom
cmp
mov
fcmovu
ret
jecxz
mov
hlt
pop
pop
and
in
aad
jmp
out
jne
xor
in
aas
cmp
in
adc
js
xchg
fstp
loop
(bad)
out
jle
(bad)
mov
test
jns
pop
rcl
jle
xchg
xor
xor
push
mov
mov
addr16
jae
fild
popf
pop
in
xlat
call
dec
leave
sbb
call
pop
adc
pop
scas
push
mov
mov
(bad)
mov
adc
dec
shl
nop
js
xchg
dec
push
cmp
iret
fist
sbb
stos
cdq
jge
cmps
lods
lea
mov
adc
loopne
inc
jge
or
call
jl
call
add
test
add
ficomp
jb
test
sti
jns
inc
xchg
add
adc
pop
push
or
push
push
pop
cmc
dec
add
mov
xor
jp
pop
pop
out
xchg
aam
dec
jb
call
sbb
add
stc
xchg
mov
pop
mov
pop
sbb
in
test
push
sub
xchg
adc
fimul
ficomp
add
inc
call
std
lods
xchg
enter
jne
daa
dec
neg
dec
push
and
ror
mov
adc
movs
push
jo
rol
push
fabs
addr16
into
es
pop
xor
inc
ret
lahf
adc
xor
jne
loopne
data16
test
ror
(bad)
mov
ins
cmp
out
scas
scas
mov
mov
iret
push
les
inc
jbe
push
and
push
rol
push
sub
test
xchg
inc
sbb
and
add
(bad)
pop
mov
push
std
ret
sbb
or
add
lods
cmp
xor
jle
test
je
sub
pop
out
push
loop
ret
sbb
inc
pop
call
push
adc
cmps
xor
inc
cli
mov
shl
sbb
mov
inc
pop
(bad)
mov
repz
lods
xchg
imul
sbb
enter
adc
out
pop
xchg
lods
push
cmc
dec
mov
jl
pop
pop
mov
sar
add
mov
fbstp
push
inc
fsub
cld
pop
jnp
xor
or
pop
ror
idiv
shr
adc
cmp
lods
addr16
fsubr
sbb
int
inc
out
lea
fst
cmps
inc
ins
ins
or
mov
int
dec
sub
call
pop
cmp
xor
(bad)
fnsave
sub
cmp
inc
or
aad
xchg
push
dec
imul
cs
sub
inc
enter
out
out
rol
xor
lods
cli
mov
jnp
gs
movs
nop
mov
push
in
cmps
dec
inc
out
(bad)
cmp
pop
cmp
pop
adc
cmp
pusha
fild
ror
cmp
jne
cwde
pop
(bad)
mov
pop
sbb
dec
pop
and
in
push
arpl
sbb
(bad)
mov
inc
xchg
xchg
in
sti
add
add
out
cld
mov
fdiv
repnz
nop
dec
mov
loop
bound
adc
mov
mov
or
dec
std
in
out
mov
iret
cmp
jo
sbb
push
mov
mov
pop
loopne
mov
dec
aas
mov
js
inc
lods
cdq
mov
test
adc
cmps
rcr
cmc
mov
cld
sbb
xor
retf
sub
sub
xor
ins
out
sbb
xor
aaa
mov
shr
fcomp
pushf
mov
and
jge
sahf
add
sub
sub
call
ins
scas
movs
icebp
add
pop
sar
sub
test
jp
add
and
int
pop
addr16
add
sub
dec
fnstcw
daa
dec
int
jmp
add
pop
and
xor
inc
mov
xchg
aas
(bad)
mov
mov
cmp
adc
pusha
pop
adc
daa
mov
sub
not
or
popf
loopne
dec
dec
popf
xor
xor
les
and
outs
mov
es
push
(bad)
rol
or
push
adc
lahf
mov
push
pushf
lahf
aaa
push
mov
inc
push
imul
sbb
fwait
or
push
call
int
mov
popf
cs
mov
cmps
xor
scas
into
je
and
test
xor
popf
inc
xchg
enter
mov
pop
dec
(bad)
cli
test
mov
retf
rol
fs
mov
aaa
in
mov
pop
jle
nop
lds
xor
xor
bound
lods
ja
in
dec
stos
js
push
dec
xor
push
call
fsub
mov
rol
retw
stos
mov
inc
jmp
ja
push
(bad)
mov
pmulhuw
mov
cmc
push
movs
repnz
dec
jno
int
aas
(bad)
mov
test
mov
stc
sbb
dec
out
sub
jge
cmps
cmps
push
push
rol
cmp
mov
cmps
pusha
adc
loope
ret
shl
push
mov
dec
(bad)
add
mov
retf
mov
lock
mov
jle
pop
test
ror
mov
dec
sbb
jnp
jl
cwde
out
mov
pop
icebp
es
push
fcmovb
aas
dec
rol
or
out
aam
inc
out
pop
std
xor
dec
cmp
fbld
inc
jmp
iret
sub
inc
icebp
sub
sub
popa
xor
rcr
mov
stos
in
and
dec
retf
sahf
cmp
mov
xchg
adc
shr
or
call
jle
sbb
pusha
stos
test
add
das
dec
adc
shl
lock
cs
sub
mov
inc
cs
outs
(bad)
cmp
cli
or
cmp
int
in
(bad)
retf
add
push
push
pop
or
cli
inc
jnp
mov
cmps
(bad)
adc
inc
inc
xor
ins
lods
xchg
add
sub
mov
fidiv
jb
ret
push
ror
addr16
fmul
std
sbb
dec
sub
lods
pop
inc
mov
adc
ret
pop
nop
ds
xchg
or
cmc
cmp
dec
cmp
repz
daa
pop
cwde
jbe
cmp
push
rep
enter
cld
lea
stc
jge
pop
add
fisttp
mov
push
push
mov
mov
pop
push
mov
(bad)
aas
lods
xchg
fstp
aam
mov
cwde
test
lahf
mov
xchg
and
push
add
mov
inc
sar
jb
cmps
stos
fdivr
mov
xchg
scas
cli
pop
pop
lea
mov
popa
fild
int
in
nop
mov
and
mov
rcl
inc
dec
outs
or
jno
pop
xor
fild
xchg
mov
or
add
cmp
cs
sub
or
scas
sbb
jo
lods
loop
cmc
push
cmp
inc
cs
fnstsw
mov
adc
cmps
jg
xor
outs
sub
call
repz
jnp
push
mov
(bad)
hlt
test
mov
xor
stos
cmp
ror
out
lods
ss
outs
mov
fdivrp
or
inc
xchg
outs
aas
retf
push
ja
cmp
xchg
retf
adc
cmp
mov
shl
shl
cs
bound
sub
sbb
fistp
jl
test
sbb
ds
mov
int3
adc
inc
jg
dec
pop
test
cmp
mov
mov
es
call
dec
call
dec
add
loop
ja
fs
push
or
jl
jae
(bad)
loopne
lds
add
loope
cld
jne
xchg
sub
stc
or
and
bound
dec
inc
ror
js
loope
mov
shl
(bad)
std
leave
or
mov
push
mov
movs
retf
jns
cs
test
jp
shl
ja
daa
pushf
adc
and
jge
dec
mov
mov
fidivr
int3
sub
jmp
push
imul
fnclex
test
movs
neg
mov
mov
arpl
sti
or
call
mov
add
add
jmp
xchg
cwde
or
xor
adc
cmp
xor
pop
or
mov
in
enter
xchg
loop
sbb
data16
test
jns
push
lahf
xchg
cli
or
sub
pop
jmp
sbb
scas
mov
dec
sbb
xor
pop
sub
cmps
jecxz
xchg
std
outs
inc
cmp
cmp
jo
xor
jnp
cmp
jmp
daa
inc
fimul
(bad)
scas
fwait
cmps
leave
jne
in
or
mov
sbb
adc
js
mov
push
std
or
imul
movs
mov
test
aam
mov
jb
inc
cmc
jae
nop
cmp
push
cmp
lods
js
inc
aad
aad
int3
movs
lods
push
test
adc
cwde
cdq
or
pop
mov
mov
clc
mov
sub
mov
and
ja
jo
jne
iret
mov
mov
inc
xor
pop
jp
jg
inc
mov
(bad)
popa
(bad)
out
stos
loopne
rol
loope
mov
xchg
outs
ret
pushf
les
pusha
jne
push
ror
lds
stos
rcr
daa
pushf
gs
int3
lahf
mov
(bad)
push
inc
fcomp
mov
mov
sbb
loop
adc
cmp
shr
std
pop
or
pusha
fimul
int
mov
xchg
neg
mov
lock
out
lahf
add
test
jo
test
test
inc
mov
lea
mov
xor
push
icebp
test
into
adc
mov
out
pop
pusha
sub
out
aaa
xor
movs
xor
or
hlt
in
pop
(bad)
xchg
sbb
shl
xchg
sub
push
jmp
mov
sbb
inc
add
mov
add
cmp
and
mov
jo
(bad)
cmp
retf
mov
sub
enter
mov
cmp
cli
das
ins
jmp
paddb
js
inc
dec
pop
mov
cmp
jb
call
movs
mov
ret
inc
cld
pop
mov
mov
mov
cmp
repz
mov
ss
div
call
je
call
xor
dec
dec
stos
shl
es
adc
xor
mov
adc
popf
pop
jp
sub
xchg
(bad)
jmp
mov
into
test
test
popf
jmp
test
out
pop
pushf
mov
pop
mov
or
test
ffreep
(bad)
imul
pop
mov
or
ret
mov
mov
int
rol
adc
jge
and
pop
test
xchg
xor
fwait
retf
loopne
pop
repz
(bad)
leave
outs
jecxz
js
mov
pop
scas
rol
push
outs
xor
mov
push
xchg
ret
pop
jno
add
xor
inc
pop
pop
mov
sbb
cmps
addr16
mov
idiv
pop
repz
call
sub
in
stos
xor
dec
mov
test
adc
pop
dec
jmp
ficom
mov
inc
adc
pop
sbb
mov
stos
xchg
in
add
mov
imul
jge
and
cmp
dec
das
pop
aad
in
int3
sbb
(bad)
jnp
mov
sub
js
cmp
or
outs
pop
push
push
mov
pop
in
imul
ficomp
sbb
loop
popa
and
mov
test
movs
xor
mov
push
ds
fistp
mov
mov
js
adc
push
cmp
pop
jp
pop
mov
movs
sbb
and
or
ret
aas
inc
frstor
call
les
aam
or
or
test
mov
mov
pop
ins
mov
add
std
and
add
rcr
push
sbb
xor
xchg
fsub
pop
cmp
outs
mov
jp
mov
cwde
pop
stc
cdq
test
push
retf
push
idiv
shr
movs
addr16
and
adc
fs
call
jg
(bad)
(bad)
aas
aaa
add
sub
pop
gs
mov
(bad)
pop
mov
rcl
push
into
(bad)
jl
and
sahf
outs
fwait
add
sahf
add
int
lahf
movs
outs
push
and
dec
add
js
push
imul
mov
mov
iret
ret
rcr
dec
daa
test
stc
jmp
inc
mov
jl
in
push
jmp
pop
push
jbe
mov
mov
mov
and
sub
inc
mov
xchg
clc
inc
arpl
(bad)
lock
mov
or
leave
or
or
dec
mov
pop
cli
cmp
(bad)
dec
mov
rol
and
repz
(bad)
xor
std
xchg
js
inc
add
pop
aas
push
retf
call
pop
clc
push
sub
sbb
ja
dec
cmp
dec
or
dec
hlt
data16
stos
bound
push
cs
sub
mov
inc
cmp
jle
js
mov
out
mov
loopne
lock
neg
call
sub
pop
rcl
xchg
mov
and
xchg
(bad)
stos
int
mov
push
add
pop
sbb
je
dec
adc
xor
push
mov
mov
mov
cmp
das
inc
sub
out
mov
add
adc
mov
stos
ins
or
xchg
xlat
add
inc
and
icebp
mov
mov
sub
into
scas
fst
push
adc
xchg
enter
test
sti
(bad)
into
xchg
mov
aad
jl
pop
sbb
stos
mov
gs
retf
outs
jmp
int
repnz
xchg
or
push
rol
sbb
mov
sbb
ins
loope
neg
push
adc
mov
mov
fisubr
arpl
mov
xchg
xor
mov
mov
sbb
addr16
push
push
ja
dec
add
sub
pop
sub
add
jns
pop
pop
sbb
sub
popf
call
fwait
loope
popa
adc
xor
push
lds
lods
jmp
jbe
push
push
cmp
jl
cmps
fcom
mov
mov
or
xchg
leave
lea
ficomp
inc
idiv
lods
into
sub
in
jecxz
cld
scas
jmp
(bad)
in
mov
fcom
xchg
rcr
jp
mov
nop
retf
push
retf
adc
cmc
push
mov
fwait
iret
pop
aad
out
cwde
jno
pop
or
scas
lahf
rol
mov
das
(bad)
fwait
lock
fcomp
mov
ficomp
pop
or
movs
rol
adc
xor
inc
push
pop
pop
inc
fistp
outs
sub
les
jns
cmp
lock
and
jb
push
loopne
xchg
ret
cdq
jns
test
mov
mov
mov
jae
dec
xor
xor
aas
inc
mov
arpl
pushf
out
test
mov
outs
ret
inc
pop
outs
in
aas
inc
pop
push
mov
jle
lods
jmp
pop
popa
sub
add
pop
pop
sbb
push
push
push
int3
cmp
dec
lds
pop
sbb
cmp
inc
mov
xlat
mov
call
fld
push
dec
sub
ret
pop
pop
dec
adc
stc
mov
pusha
aad
cmp
into
cmp
jl
and
je
data16
out
lahf
enter
adc
push
pop
add
ds
sub
lods
fild
sbb
or
pop
adc
popa
and
test
fidiv
push
sub
jl
push
pushf
jne
push
daa
dec
xchg
fisub
int3
mov
xor
mov
movs
les
xchg
enter
pop
gs
or
les
gs
jmp
fisttp
or
hlt
xor
sub
fcom
add
pop
sti
lods
in
jno
sub
loope
cmps
dec
mov
test
test
dec
add
sub
jno
ins
adc
fsub
movs
int3
mov
in
scas
call
popa
xchg
cs
add
rol
jecxz
adc
sub
pop
adc
repz
push
push
push
dec
push
retf
test
inc
jnp
popa
add
arpl
fs
xchg
jmp
sub
push
add
sbb
pop
or
mov
jo
push
add
call
lds
and
std
mov
mov
test
lds
in
mov
call
mov
outs
mov
mov
scas
cmc
xor
dec
adc
ss
hlt
xchg
add
add
jo
fisttp
hlt
pushf
fsubr
mov
cmps
iret
sahf
sar
pop
das
js
dec
or
cmp
inc
sub
pop
pop
pop
or
dec
pop
jae
popa
and
mov
das
jns
jae
ss
(bad)
mov
les
jecxz
xlat
scas
adc
cmc
adc
test
xchg
inc
fst
jno
xchg
xchg
mov
mov
inc
ds
sub
pop
add
and
xor
mov
xor
aas
cs
call
pop
sbb
mov
outs
sbb
or
cmp
jbe
or
outs
sbb
dec
jmp
mov
mov
jg
xchg
aad
hlt
retf
cmp
jae
in
shl
dec
xor
mov
inc
clc
xchg
retf
inc
cmp
and
in
into
mov
mov
mov
es
mov
test
scas
sbb
mov
xchg
scas
movs
jmp
add
cmp
ins
sbb
jo
mov
arpl
mov
loopne
enter
lds
adc
push
dec
jns
es
cmp
dec
aas
push
push
push
pop
dec
xor
sub
sub
inc
add
xchg
mov
gs
pop
pop
fbld
mov
(bad)
shl
lds
cmc
imul
es
mov
mov
sar
pop
push
jmp
clc
mov
out
outs
cmp
inc
or
or
push
adc
adc
mov
sub
sahf
push
rcr
xchg
xor
imul
lods
mov
dec
or
fstp
jle
inc
push
and
xchg
leave
and
pop
mov
push
or
jns
iret
push
cmp
neg
and
jb
mov
mov
fistp
adc
and
mov
xchg
popf
cmp
pusha
jmp
xchg
lahf
scas
cld
mov
les
in
jbe
xchg
mov
mov
sub
inc
loopne
mov
jbe
xor
xlat
xor
mov
mov
fwait
mov
mov
rcl
xchg
mov
mov
xchg
push
es
(bad)
mov
cld
mov
sbb
adc
fimul
push
cmp
loopne
fadd
xlat
(bad)
retf
(bad)
stc
mov
xchg
mov
test
pop
push
shr
iret
mov
adc
inc
add
jle
dec
jmp
or
mov
out
mov
cdq
in
mov
lock
repz
pop
xor
inc
scas
mov
cmp
inc
shr
add
not
adc
dec
or
or
push
add
loopne
mov
xor
sub
jb
push
add
or
imul
aas
outs
mov
jmp
(bad)
xchg
loop
ins
mov
xchg
retf
movs
mov
xchg
ror
fstp
retf
mov
mov
jnp
push
out
pop
cmp
pop
mov
adc
and
push
sub
jl
in
jecxz
jo
cwde
repz
outs
cmp
dec
pop
inc
mov
push
sbb
push
sub
inc
add
out
lods
loopne
scas
pushf
clc
nop
std
js
push
push
pop
shr
xchg
fld
cmp
mov
adc
and
adc
ret
mov
rcl
or
xor
or
shr
rcl
sub
inc
cmp
retf
ret
xchg
ret
xchg
(bad)
xor
mov
test
xchg
(bad)
pop
int3
pushf
fnstsw
push
push
cmp
jge
jg
sub
(bad)
fisub
(bad)
cmp
dec
and
push
sbb
jno
std
out
mov
sahf
int3
cwde
mov
adc
push
cmp
cmp
(bad)
cdq
push
jne
dec
sbb
jne
inc
mov
xor
and
xchg
pop
jecxz
ret
scas
fs
cdq
int
(bad)
mov
jno
jg
xor
adc
dec
pop
xor
xor
scas
loop
aad
aam
cmp
mov
rcr
imul
pushf
mov
nop
(bad)
enter
ficom
mov
sub
test
adc
loopne
mov
and
jo
push
stc
pop
jae
inc
nop
arpl
jge
ins
or
sbb
outs
and
scas
mov
call
mov
xchg
mov
enter
xchg
fwait
xlat
jo
cmp
mov
fs
cmp
lock
sbb
push
adc
std
mov
test
outs
leave
or
sub
bound
mov
dec
loop
fisubr
xlat
test
xchg
clc
mov
cmp
scas
stc
xchg
scas
lods
rcl
enter
bound
jns
mov
pop
and
js
pop
ds
idiv
stc
or
ret
xchg
cld
cwde
mov
or
push
adc
fimul
cmps
cld
(bad)
vmovd
aam
js
and
dec
add
es
add
fwait
rol
cmp
push
sbb
push
pop
lods
pop
add
push
bound
mov
inc
pop
sbb
gs
add
jb
add
adc
sahf
retf
mov
das
inc
add
and
outs
push
pop
sbb
ja
inc
sub
adc
push
outs
es
add
sub
ds
jbe
push
adc
jno
jns
sbb
sub
outs
inc
add
or
dec
push
imul
sbb
inc
adc
outs
and
pop
xor
dec
sbb
adc
bound
jo
push
add
inc
sub
pop
sbb
pop
xor
dec
push
adc
mov
rcl
aam
cld
scas
fdiv
lahf
shr
lahf
cmp
outs
sbb
add
lahf
cli
mov
cdq
push
popa
sbb
inc
push
dec
mov
sbb
jecxz
hlt
pop
jle
dec
add
xchg
aad
in
mov
stos
std
nop
ror
out
cdq
ret
popf
jne
es
add
inc
sbb
add
xchg
(bad)
mov
sti
mov
add
sbb
mov
cmps
mov
mov
pushf
dec
loop
into
mov
pop
sub
and
ss
mov
and
push
retf
mul
and
in
out
fwait
iret
bound
adc
inc
adc
push
push
xchg
jmp
out
imul
inc
ss
es
sar
pop
push
retf
daa
ja
test
mov
outs
adc
cmp
dec
push
imul
lods
pop
cmp
cs
dec
cmp
ror
pop
push
ds
clc
mov
pop
adc
xor
packuswb
cmps
dec
adc
and
ret
test
mov
out
scas
cmc
mov
aad
dec
sbb
xchg
xchg
push
sbb
rcr
push
rcr
popf
shl
pop
or
pop
mov
pushf
rcl
les
dec
add
push
in
stos
cmc
outs
repnz
mov
pop
xor
cld
daa
sub
xchg
ins
shl
mov
cmps
mov
sub
test
mov
mov
rcr
ret
nop
fsubr
adc
retf
(bad)
fdiv
sub
call
pop
and
push
add
jno
pop
int
jmp
mov
xor
aad
loop
stos
retf
xchg
pusha
mov
mov
lea
mov
xor
dec
push
jne
ins
std
stos
mov
mov
cwde
test
out
lahf
mov
mov
add
push
(bad)
mov
fwait
clc
mov
and
sub
dec
or
or
enter
push
das
jne
pop
xor
and
call
mov
mov
xchg
stc
push
in
scas
int3
mov
es
or
pop
(bad)
fstp
xor
in
jns
jbe
pop
sar
test
sahf
mov
cs
sbb
xor
jp
sti
stos
sar
retf
xchg
mov
adc
push
ja
push
sub
or
outs
push
jb
je
push
inc
retf
popf
fst
shl
jnp
shr
mov
xchg
mov
mov
sahf
inc
loope
ror
(bad)
fadd
(bad)
inc
pop
ins
icebp
pushf
cmc
cmps
aad
or
jmp
mov
xchg
lds
int
mov
or
cmp
cwde
out
mov
rcl
cmps
cmc
mov
fst
sbb
xchg
stos
out
sub
xor
push
or
inc
adc
rol
iret
pushf
in
mov
mov
inc
and
or
in
adc
test
pop
and
push
jge
jl
ja
cmp
or
in
(bad)
movs
jno
sub
jp
dec
pop
push
rcr
adc
jns
pop
cmc
mov
cmps
out
lds
call
mov
xchg
enter
mov
mov
and
dec
das
pop
repz
loopne
inc
(bad)
xchg
sahf
leave
mov
jmp
xchg
iret
sbb
inc
sbb
jge
push
jnp
call
test
mov
lods
enter
out
xor
sar
mov
fbstp
and
and
add
inc
repz
shl
jmp
xchg
mov
test
mov
je
push
ret
sbb
pop
adc
rcr
inc
add
fidiv
xor
fs
xor
add
cld
dec
and
jge
dec
or
inc
fld
push
cmovnp
sub
mov
imul
(bad)
xchg
lods
add
push
dec
sti
stos
shr
xchg
imul
push
addr16
in
fstp
test
mov
push
je
outs
adc
stos
iret
sbb
test
inc
ss
ins
xor
inc
xchg
enter
mov
push
adc
ds
push
cmp
test
mov
call
pop
dec
daa
cmp
cmp
xor
or
inc
sbb
loop
fld
aam
loopne
or
dec
(bad)
pop
loopne
out
sahf
retf
loop
cld
stos
aam
dec
pop
inc
clc
mov
test
lea
xchg
enter
imul
jecxz
retf
jbe
inc
xor
xlat
nop
ret
xchg
je
popf
int3
xor
xlat
mov
jae
inc
sub
cmp
dec
sub
sbb
stos
clc
stos
out
mov
xor
push
and
nop
aam
adc
or
adc
adc
aas
in
icebp
call
pop
sub
ficom
dec
or
es
xlat
xchg
ret
or
sbb
pop
xlat
xor
ins
xlat
scas
hlt
scas
jecxz
stc
jb
retf
cmps
xchg
mov
popa
xor
outs
push
xor
dec
add
dec
adc
pop
sbb
cmp
xchg
push
or
add
sub
or
inc
mov
pop
cmp
pop
pop
out
mov
mov
lahf
retf
ja
out
fwait
rol
adc
jmp
ror
mov
scas
lock
xchg
loopne
enter
xchg
retf
(bad)
leave
mov
inc
outs
sub
ds
xor
inc
into
jecxz
clc
xchg
jmp
mov
daa
push
xor
cmp
or
icebp
movs
loopne
inc
xchg
retf
mov
push
ja
dec
adc
cli
adc
test
mov
add
cli
test
out
fcom
mov
sub
sbb
push
pop
popa
sub
push
mov
and
in
push
cmp
je
jge
xlat
lea
sar
mov
jno
add
and
jmp
sbb
inc
sbb
adc
and
xor
dec
add
jmp
or
(bad)
sbb
jae
call
imul
or
cld
mov
mov
fs
xchg
xchg
sbb
inc
or
sbb
je
push
and
(bad)
fwait
scas
iret
mov
or
call
cld
mov
pop
push
push
pop
pop
out
dec
pop
sub
call
mov
scas
inc
xchg
clc
mov
call
arpl
and
jns
out
stos
out
fist
loopne
rcr
int
ins
cmp
mov
dec
xor
(bad)
(bad)
out
xchg
xchg
fdivr
pop
mov
cmps
fild
inc
add
popa
adc
push
xor
stos
(bad)
sbb
fsubr
lock
xor
cmp
pop
pop
and
mul
mov
jbe
xchg
fwait
mov
rol
add
adc
pop
pop
xor
hlt
and
dec
adc
int
int3
imul
(bad)
aaa
in
fwait
int3
xchg
je
fiadd
mov
or
inc
or
in
mov
mov
mov
scas
or
xchg
aam
ins
add
dec
mov
cmp
push
adc
les
xchg
jbe
fwait
repz
scas
leave
ins
xor
pop
aad
cvtps2pd
jl
add
and
mov
xchg
mov
sub
push
pop
dec
adc
xchg
fadd
fwait
mov
sti
call
fwait
jo
mov
scas
call
push
and
ins
inc
pushf
jmp
mov
mov
mov
jbe
adc
mov
(bad)
cli
mov
test
enter
pop
imul
rcl
and
mov
rcr
dec
cmp
fimul
mov
in
mov
stos
js
adc
mov
test
mov
or
jg
xchg
stos
xchg
shl
sub
inc
adc
and
push
or
xor
ror
push
es
cs
mov
pop
mov
leave
scas
lods
retf
cmp
mov
mov
push
add
push
and
cmp
push
sbb
hlt
jo
pushf
call
add
in
xchg
adc
(bad)
push
or
inc
es
in
and
cmp
and
or
cmp
add
pop
inc
aas
push
and
push
push
dec
push
jnp
cmp
daa
push
(bad)
nop
ret
lea
or
fdiv
jno
pop
or
cwde
mov
pushf
pop
sub
pop
pop
push
xor
jae
jnp
push
ja
jl
push
mov
(bad)
enter
mov
adc
aad
test
iret
and
mov
cmp
outs
repz
out
mov
jp
arpl
int3
scas
mov
popf
jmp
mov
scas
out
cmp
dec
adc
repz
pushf
mov
ja
cmp
call
push
stc
mov
imul
loopne
enter
jg
(bad)
xor
pop
or
adc
push
or
iret
(bad)
call
shl
adc
add
cmp
outs
lds
aad
hlt
movs
rol
mov
mov
pop
add
lods
shl
ret
mov
mov
push
push
ds
inc
xor
shr
add
dec
or
dec
adc
loop
(bad)
xchg
sahf
clc
mov
scas
out
stos
out
adc
inc
es
add
jno
dec
sti
mov
mov
pusha
aaa
jbe
imul
std
fwait
pause
movs
lock
int3
xchg
movs
(bad)
mov
call
mov
mov
out
test
and
cmp
inc
in
out
stos
cld
mov
out
xchg
and
pop
cmp
ins
sub
cdq
out
xor
test
sub
add
daa
dec
and
aaa
arpl
pop
lods
in
mov
dec
movs
shl
(bad)
aad
out
out
mul
int
retf
(bad)
je
push
add
movs
aam
leave
xchg
cmps
xor
jl
imul
push
jl
and
jnp
repz
das
dec
cmp
cmp
out
mov
movs
icebp
popa
sub
inc
add
sub
inc
add
je
dec
sub
mov
stos
pusha
lds
in
fcom
jne
inc
push
dec
cmp
sbb
imul
aad
fisub
cmps
clc
lea
xor
pop
iret
xchg
(bad)
mov
add
xchg
push
add
fsubr
mov
or
mov
rcr
mov
jp
jb
lods
sub
out
cs
arpl
ficom
add
call
imul
xchg
mov
push
dec
push
add
jmp
(bad)
xchg
dec
js
inc
popa
int
rcr
dec
adc
cmp
mov
pushf
loopne
arpl
mov
add
mov
(bad)
and
ins
sbb
xchg
jnp
(bad)
pop
push
mov
retf
cld
mov
sub
jb
pop
mov
test
push
imul
sub
add
out
nop
loope
xor
adc
add
repz
and
add
mov
sbb
ins
(bad)
cdq
aas
push
xor
movs
popa
and
jmp
clc
xchg
scas
jle
jle
arpl
mov
clc
cmp
dec
clc
hlt
mov
mov
inc
pop
arpl
ins
dec
mov
std
lods
cmp
cwde
jmp
rcr
mov
fcom
fwait
cmp
xchg
jl
mov
cmp
or
es
cmps
cli
or
jns
fwait
pop
dec
jl
out
adc
dec
or
or
aas
mov
mov
loope
ror
cmp
xor
push
and
jmp
push
pusha
jmp
and
adc
dec
scas
jns
jmp
sahf
loopne
loopne
dec
jns
xor
stc
cmps
cwde
mov
push
js
cmps
call
jne
jecxz
ret
inc
loop
xchg
vpsubusw
icebp
jo
lahf
adc
sti
sub
or
inc
cmp
cmp
adc
daa
cmp
shl
mov
mov
adc
retf
pop
push
ficomp
shr
xor
mov
mov
push
sbb
inc
mov
adc
add
sbb
nop
jnp
dec
mov
xchg
jmp
stos
imul
xor
ja
call
(bad)
cmp
push
pop
or
movs
scas
sbb
sbb
bound
adc
push
jno
ins
sbb
add
sahf
xchg
fcomp
push
(bad)
cmp
loope
xchg
imul
or
mov
add
(bad)
lds
jle
lods
rcr
pop
test
xchg
mov
fwait
add
mov
and
pusha
xor
add
fidiv
mov
ss
xlat
push
mov
stc
vpmacssdqh
iret
dec
push
cmps
call
sub
fwait
ds
jb
dec
or
fidivr
loopne
xchg
mov
push
adc
adc
popf
es
adc
push
mov
cld
jmp
inc
pop
jns
outs
jb
retf
scas
xor
fnstenv
xor
cli
jo
les
aam
pop
adc
add
outs
cmp
inc
aam
sbb
cmp
movs
popa
rcl
lods
jmp
xor
fs
mov
pop
dec
jle
mov
ror
lods
and
imul
addr16
mov
(bad)
std
ins
aam
xchg
stos
sbb
adc
fst
adc
or
fsubrp
or
sbb
sub
adc
cmp
xchg
dec
xchg
rcl
(bad)
mov
rol
xor
jmp
nop
lods
ds
aas
loope
cmp
and
xchg
mov
mov
push
ins
je
and
test
mov
dec
dec
mov
push
ins
ret
imul
out
out
jmp
sti
rol
and
push
movs
and
jge
dec
cli
inc
pushf
mov
jmp
sahf
lods
mov
ja
pop
ror
jne
lods
and
push
xchg
cmps
xchg
add
dec
xchg
jno
call
repnz
test
adc
xor
fwait
in
add
enter
lock
push
test
popf
xchg
ja
aad
adc
jns
jge
push
mov
das
sub
in
pop
fst
scas
in
dec
cld
pop
in
mov
jp
xchg
pop
retf
add
xlat
push
mov
fwait
mov
int3
dec
je
out
adc
push
add
inc
std
mov
xor
jge
sbb
dec
(bad)
fst
sbb
add
dec
int3
jg
in
cmp
lock
movs
sbb
sub
cmp
dec
jne
gs
test
addr16
and
cmp
aad
xchg
xchg
leave
inc
mov
dec
and
sub
xlat
dec
mov
fist
jmp
pusha
inc
cmps
ret
icebp
and
pop
mov
push
and
lods
mov
jge
jne
fwait
sbb
adc
jmp
mov
sub
sbb
mov
repz
enter
and
shl
data16
int3
adc
and
jbe
inc
repnz
sahf
jnp
or
xchg
xor
add
xchg
jle
xchg
popf
cmp
push
and
lea
push
adc
push
mov
cli
and
sbb
pop
and
loope
sub
out
mov
push
retf
mov
ins
pop
(bad)
js
add
fimul
mov
cwde
pmaxub
mov
jmp
stos
and
movs
mov
lods
inc
xchg
mov
dec
and
mov
dec
into
(bad)
jecxz
aam
int
xor
mov
dec
imul
sub
fstp
cs
sub
and
mov
sub
std
xor
dec
adc
ret
fstp
jnp
je
pop
inc
(bad)
cmp
lock
or
aam
mov
inc
out
pop
jmp
mov
test
sbb
cmp
mov
scas
dec
mov
aam
dec
ss
test
or
lahf
xchg
aad
mul
(bad)
ja
shl
outs
xor
xchg
or
or
xchg
or
imul
mov
push
push
dec
dec
xlat
lahf
data16
pop
add
jno
popf
mov
push
sar
(bad)
aad
cmps
pusha
cmp
add
push
out
leave
out
or
das
pushf
mov
adc
clc
scas
push
pop
pop
mov
test
dec
in
jle
pop
sub
pop
jmp
stc
inc
retf
scas
cli
jg
les
xor
sbb
cmp
xor
mov
fwait
das
mov
sub
xchg
add
inc
neg
cmps
push
push
dec
(bad)
push
loop
xchg
push
les
or
or
mov
dec
ret
inc
or
and
and
adc
pop
sbb
shr
and
and
mov
jmp
es
ss
sbb
js
(bad)
xor
sbb
stos
ret
pop
and
xchg
mov
rol
mov
sbb
daa
jnp
test
dec
fwait
add
add
jge
and
retf
pop
xchg
cli
sub
sbb
lea
mov
mov
rol
jb
jl
sub
jl
mov
fcom
pmaxsw
nop
push
cmps
add
sub
pop
sbb
pushf
jns
dec
inc
and
call
not
rcl
aad
mov
or
pop
mov
mov
mov
dec
mov
and
and
push
mov
pop
ins
test
pop
jnp
call
idiv
xlat
pop
xchg
push
in
inc
pop
fsubr
add
push
inc
jns
rol
sub
add
fstp
sub
push
sub
loop
(bad)
inc
xor
or
(bad)
in
jg
les
ja
push
lea
std
mov
popa
int
shl
or
and
mov
push
and
jecxz
and
or
inc
movs
add
pop
call
lds
lea
inc
lods
push
aas
jns
jns
out
test
ss
inc
(bad)
cmp
cmp
mov
arpl
retf
icebp
jne
dec
movs
pop
shr
(bad)
dec
or
inc
call
(bad)
sbb
pop
cli
mov
jg
jle
mov
push
(bad)
scas
(bad)
test
lea
xchg
cli
call
mov
xchg
shr
mov
xchg
in
fnsave
mov
loopne
jl
sbb
lods
dec
fxch
xor
data16
fimul
mov
loope
add
mov
adc
or
aas
and
shl
js
sub
dec
cwde
les
and
mov
(bad)
scas
fisubr
jecxz
mov
add
es
shl
jle
loop
push
pop
fistp
sbb
adc
xor
pop
in
jg
jo
(bad)
test
nop
push
cld
jo
or
in
add
popa
scas
inc
(bad)
gs
mov
ins
leave
sbb
das
pop
fdiv
cmps
inc
leave
jecxz
daa
out
inc
mov
adc
les
xchg
out
in
dec
sti
xchg
mov
xchg
push
mov
or
jb
pushf
rol
in
addr16
clc
xor
and
in
outs
stc
loop
loope
lods
and
fistp
icebp
push
mov
sub
add
inc
push
mov
call
add
or
and
ja
cmp
(bad)
int3
lahf
jo
mov
repz
fwait
xchg
push
sbb
xor
jp
ss
mov
push
icebp
pop
movs
ret
mov
inc
iret
xchg
add
les
mov
(bad)
ret
test
jmp
imul
fidivr
rcl
fdiv
rcl
dec
jg
rcr
adc
mov
lahf
pop
cmp
inc
fdivrp
popf
or
cli
stc
jle
stos
dec
retf
cli
push
pop
mov
jge
pushf
xor
or
xchg
jmp
and
rcl
arpl
push
pop
xor
mov
in
mov
inc
jns
sar
mov
std
bound
aad
push
test
push
adc
sub
pop
xor
lahf
nop
mov
pop
pop
sub
mov
pop
lods
xchg
mov
mov
mov
lods
out
js
gs
mov
out
lods
mov
(bad)
adc
pop
loop
inc
inc
neg
xchg
push
ss
push
call
das
and
dec
inc
xor
mov
jae
inc
cmp
ins
add
call
mov
fwait
sub
xchg
sub
jbe
fsub
and
(bad)
jp
jge
mov
loop
std
push
push
out
lods
cmp
jb
pop
fs
sub
sub
xchg
scas
(bad)
leave
(bad)
loopne
mov
dec
xchg
mov
ficom
test
(bad)
mov
(bad)
mov
out
sub
xor
(bad)
(bad)
imul
xchg
rol
in
std
ds
(bad)
(bad)
mov
in
arpl
shufps
loop
xchg
lock
out
xchg
in
mov
not
sar
xchg
int3
push
popa
scas
add
inc
push
push
sbb
pop
and
and
bound
inc
xchg
loope
cmp
mov
inc
cmps
jp
loope
or
cmp
and
dec
jmp
xor
outs
cmp
or
movs
sbb
pop
mov
and
add
aam
out
sub
pop
cmp
jl
stc
dec
fidivr
push
pop
sbb
in
add
pop
sbb
cmp
sbb
cmps
int
test
pusha
aas
xor
cli
dec
retf
pop
(bad)
push
add
in
xor
aad
repz
jge
adc
mov
gs
mov
retf
inc
sub
dec
sahf
dec
inc
scas
es
aad
shl
dec
inc
xchg
dec
daa
inc
xchg
outs
cld
sub
mov
sbb
push
in
ja
xchg
(bad)
(bad)
pop
pusha
mov
(bad)
test
add
dec
fdiv
repnz
mov
in
mov
test
lea
aam
shl
push
jns
cdq
les
arpl
test
imul
pop
lds
scas
cmp
ret
retf
gs
jle
dec
shl
sti
pop
arpl
pop
pop
mov
ffree
inc
gs
sbb
sbb
shr
pop
sbb
outs
sub
ja
or
fst
in
dec
aaa
(bad)
mov
arpl
pop
sub
out
scas
cdq
xor
fcmovu
inc
pop
pop
enter
sbb
cmp
loop
adc
bound
jp
sub
add
in
mov
in
push
push
pop
dec
sub
mov
dec
xchg
mov
mov
xchg
addr16
stc
mov
and
dec
cwde
push
pop
sub
(bad)
hlt
in
jae
or
and
nop
jmp
cmp
lea
scas
dec
sti
test
dec
cmp
jecxz
call
mov
les
xchg
gs
sbb
fld
dec
inc
neg
xchg
jmp
and
fbstp
addr16
movs
jmp
xchg
cs
fisub
push
dec
fwait
or
mov
call
xchg
leave
fcom
jne
sar
popa
inc
mov
jmp
dec
popa
or
cmp
retf
into
retf
pushf
xchg
out
les
(bad)
cli
inc
imul
aad
or
jmp
xor
cmp
ja
icebp
imul
cmc
mov
mov
ret
out
jmp
nop
inc
fistp
adc
jp
stc
mov
add
adc
and
cwde
daa
sbb
fist
arpl
push
dec
inc
loopne
and
mov
loope
mov
push
retf
fcmovb
jge
push
mov
fidiv
outs
(bad)
stos
mov
xor
mov
mov
pop
push
mov
pop
test
mov
jns
jecxz
xlat
dec
adc
mov
inc
icebp
push
xor
ins
sub
test
lods
pop
xor
stc
lds
xor
std
push
sbb
std
rcl
mov
mov
sbb
(bad)
in
add
xchg
adc
xor
(bad)
ds
hlt
xor
sahf
xlat
ror
(bad)
ja
xchg
push
je
xor
sub
(bad)
xchg
push
add
add
leave
add
xor
in
(bad)
ret
fadd
xchg
pop
hlt
test
mov
scas
aad
in
dec
mov
aam
cmp
pop
mov
hlt
adc
leave
lds
frstor
cli
mov
push
lods
mov
sub
hlt
xchg
jg
mov
mov
mov
mov
mov
addr16
mov
mov
mov
pop
stc
sbb
xchg
jmp
fstp
push
xor
cld
fbstp
sub
test
div
dec
test
dec
cmp
mov
cdq
add
pop
stos
dec
stos
pop
es
nop
push
shl
(bad)
adc
mov
cwde
xchg
jmp
cwde
(bad)
loopne
rol
icebp
test
out
outs
sub
lds
adc
aam
je
push
adc
stos
inc
outs
lods
mov
pop
mov
inc
ret
bound
pop
inc
sahf
mov
xor
lods
add
jecxz
jmp
ss
ins
leave
inc
lods
push
pushf
iret
lds
shl
pushf
add
mov
lock
lock
lods
jnp
jne
pop
inc
shl
int3
inc
push
retf
mov
dec
pop
jmp
jno
push
imul
and
jbe
pop
(bad)
fisubr
imul
das
mov
pop
ins
mov
sub
dec
rcr
leave
scas
dec
ins
and
mov
cmp
dec
fs
ins
push
pusha
ret
push
sbb
fldcw
std
enter
jge
test
xchg
sahf
mov
push
neg
lds
jmp
movs
adc
lods
push
scas
call
ins
sbb
cmp
jbe
gs
cmp
push
test
xchg
sbb
xchg
or
out
sub
xor
or
les
jns
sbb
mov
cmps
xor
mul
jmp
sub
imul
sbb
xchg
jae
xchg
mov
test
mov
mov
outs
pusha
sbb
mov
sub
out
pop
retf
imul
in
hlt
(bad)
pop
aam
xor
dec
retf
add
mov
call
or
pop
in
enter
push
sahf
dec
push
loope
sub
cmp
cmp
scas
and
iret
mov
popa
xor
xchg
mov
je
push
sbb
cwde
jmp
repnz
fst
xchg
daa
cdq
push
mov
xlat
(bad)
fucomip
cmp
mov
rcr
push
sub
xchg
out
cmp
pusha
stc
mov
jmp
outs
je
dec
mov
xor
pop
cmp
repnz
or
iret
mov
and
(bad)
mov
sbb
ja
out
cwde
mov
xor
xor
xchg
test
imul
adc
and
clc
push
icebp
gs
das
dec
xchg
jo
cmp
mov
lods
sbb
imul
mov
pushf
or
(bad)
loopne
dec
xlat
mov
in
shl
add
xchg
gs
xor
xlat
xor
shr
bound
dec
push
lods
lods
push
and
sbb
leave
movs
(bad)
jnp
and
sar
sar
cmp
sar
test
inc
inc
jmp
repnz
xor
hlt
cli
sar
(bad)
sysenter
call
std
xchg
and
xor
in
sbb
sub
pop
ins
lds
in
mov
sbb
gs
jno
xchg
je
jnp
pop
icebp
stc
mov
sar
mov
mov
jl
mov
mov
mov
fxch
imul
rol
in
cmp
fs
adc
and
lock
sub
jo
pop
sahf
sub
call
push
enter
fmul
shr
aas
sbb
mov
add
arpl
jp
out
ss
movs
and
outs
bnd
sti
adc
jecxz
ret
shr
push
gs
pop
or
pop
into
mov
add
fnstcw
das
sub
retf
dec
mov
bound
icebp
loope
sar
out
xchg
lea
ret
ins
adc
cmp
cmps
pop
mov
sbb
test
cmps
mov
sub
sar
neg
add
add
add
ret
adc
stos
mov
jns
into
mov
in
cmc
in
push
fwait
xor
adc
adc
fwait
push
add
test
ret
xchg
lods
test
adc
cmp
jnp
jo
stc
call
scas
imul
push
arpl
ja
xor
jae
call
push
(bad)
cld
imul
test
push
jb
sar
je
cdq
out
jmp
cmp
mov
and
sbb
mov
add
mov
or
pop
dec
dec
call
icebp
loopne
(bad)
ret
or
pop
and
sbb
sub
xor
shl
pop
jl
push
sub
stos
inc
js
stos
mov
jecxz
mov
jge
inc
mov
mov
mov
fucom
jmp
mov
fwait
gs
pop
sub
clc
rol
ret
jb
cmc
adc
jg
inc
es
mov
jno
aaa
imul
xlat
push
arpl
sbb
jecxz
add
jb
jp
inc
jbe
fcom
or
jl
jmp
push
push
push
out
sub
mov
fwait
jns
mov
aaa
sbb
in
ds
and
xchg
pusha
(bad)
outs
mov
inc
push
xor
inc
pushf
fs
or
stos
clc
fcmove
ss
and
idiv
pusha
pop
ds
push
mov
popa
xbegin
sti
out
ror
cmp
aas
cwde
mov
ds
out
pop
and
enter
pop
ja
pop
ret
push
jmp
ficomp
popf
adc
test
jnp
push
ins
cdq
fsub
inc
dec
dec
and
push
shl
add
clc
xchg
lock
inc
add
xlat
loope
add
xchg
push
add
aas
sbb
add
adc
shr
dec
mov
mov
imul
cmps
loopne
adc
jbe
sti
imul
or
(bad)
int
mov
jmp
in
jb
jbe
mov
lods
mov
out
sbb
js
sub
mov
(bad)
sbb
xor
mov
ja
test
xor
dec
inc
sahf
jle
dec
mov
pop
dec
cmc
push
mov
inc
loope
std
or
test
mov
out
lock
mov
and
or
fwait
xchg
cmp
cmps
in
scas
mov
out
mov
adc
ret
in
dec
cwde
enter
mov
cs
jmp
enter
scas
ret
ficom
int3
push
add
jmp
sub
adc
in
sub
jl
je
rcr
movs
addr16
fstp
outs
push
mov
aad
sti
sbb
push
clc
int3
cmc
cwde
or
repnz
mov
mov
mov
sub
lds
mov
outs
mov
cmc
int
shr
or
call
ins
adc
imul
retf
pop
mov
jbe
mov
sub
jno
aas
push
(bad)
and
adc
mov
call
cmps
outs
fdivrp
push
icebp
and
cmps
jmp
xlat
repz
add
jbe
and
test
arpl
pop
fwait
mov
push
mov
or
mov
popf
shr
add
push
into
and
std
repnz
sbb
mov
fld
out
shl
es
retf
dec
push
mov
jae
aas
test
aaa
ds
or
dec
jbe
inc
push
adc
and
xor
sub
ds
in
push
(bad)
mov
sbb
jb
fld
xor
adc
jnp
jae
cwde
cs
fclex
dec
ror
jmp
mov
(bad)
xor
sbb
push
add
dec
or
mov
adc
pop
mov
fisub
inc
add
not
cdq
das
ror
fidivr
js
inc
stos
or
inc
xor
mov
dec
popf
push
jp
sub
sbb
cmp
cmp
jae
inc
add
(bad)
ins
jg
clc
outs
pop
sub
retf
out
aad
lea
ds
sub
mov
push
adc
or
push
rcl
aas
retf
and
jno
cmc
xchg
rcl
inc
test
fwait
cmp
fnstcw
call
cli
lods
aas
inc
push
sub
(bad)
ins
rol
xchg
mov
sub
bound
sub
push
sbb
mov
sti
shl
fld
mov
fwait
sbb
sub
scas
or
ja
(bad)
dec
imul
scas
dec
(bad)
cwde
dec
push
xchg
dec
and
add
test
cmp
gs
(bad)
in
ficom
in
jg
jbe
adc
sub
mov
jnp
repnz
cmps
push
gs
aam
dec
stos
push
out
test
pop
jb
ins
xchg
stos
test
dec
aad
imul
ffreep
sbb
dec
mov
mov
push
imul
int3
inc
adc
pop
ret
xor
fs
dec
mov
stos
(bad)
or
cmp
dec
xchg
mov
xor
fsub
push
rcl
jg
cmp
into
push
mov
dec
inc
sbb
pop
ins
add
ins
outs
int3
repz
inc
test
retf
sbb
aam
adc
popf
or
test
cmp
xchg
call
shl
push
aam
pop
push
sub
test
push
ja
xchg
inc
enter
lods
fimul
push
push
sbb
push
sbb
popf
dec
je
mov
mov
pop
popf
xor
enter
inc
push
call
out
dec
xchg
sub
mov
jg
mov
call
das
mov
pop
mov
push
pop
clc
daa
sub
ret
mov
fadd
push
push
adc
loope
adc
mov
jg
cs
and
jg
cmp
mov
int3
ins
cmp
adc
cdq
inc
mov
daa
test
pop
(bad)
jle
pop
dec
xor
push
pop
pop
mov
pushf
addr16
push
xchg
test
dec
jne
fidiv
xor
pop
push
(bad)
scas
jmp
rdmsr
xlat
ja
mov
xchg
rol
lods
cdq
ins
cmp
hlt
out
jle
dec
popa
cmp
mov
mov
(bad)
ds
test
mulps
or
jns
ss
xchg
lds
stos
jecxz
push
jb
mov
out
loop
xor
leave
pop
popf
or
dec
mov
(bad)
ficomp
push
jb
xor
mov
dec
(bad)
std
pop
and
push
and
dec
jmp
and
xchg
push
and
sar
mov
sub
out
(bad)
fmul
dec
mov
mov
arpl
hlt
pop
stc
pusha
or
mov
or
add
add
leave
jmp
mov
(bad)
es
cmps
mov
push
and
ins
ret
xlat
shl
mov
gs
add
or
adc
add
clc
xor
inc
adc
sbb
int
lock
in
ret
xor
in
lods
arpl
push
nop
xor
sahf
iret
sub
or
mov
neg
and
btr
dec
sbb
mov
(bad)
mov
sub
or
jns
sbb
fidiv
inc
inc
outs
inc
sbb
loop
mov
lock
retf
(bad)
stc
xchg
jl
fild
mov
loopne
xor
adc
outs
add
xchg
dec
mov
stc
iret
scas
repnz
inc
fmul
mov
hlt
jmp
pop
cmp
cmc
xlat
ja
pop
fcomp
sub
inc
mov
cld
jg
jle
ins
enter
imul
mov
jge
adc
retf
dec
mov
dec
xor
and
push
icebp
icebp
fmul
mov
repz
xchg
sub
leave
imul
outs
add
out
cmp
je
(bad)
and
jecxz
in
inc
lods
add
sahf
xor
jmp
jnp
lahf
sbb
(bad)
mov
jle
and
pop
icebp
sub
mov
mov
adc
or
xchg
cs
cwde
jb
outs
lea
mov
jo
mul
cmps
dec
cwde
jg
jns
cs
sub
mov
xchg
pop
pushf
jne
xchg
fidivr
mov
push
data16
(bad)
aas
cmc
and
jmp
std
(bad)
out
(bad)
lods
and
and
mov
retf
in
push
test
jmp
and
inc
(bad)
sub
dec
test
push
or
pushf
daa
sbb
dec
add
loope
imul
pop
ins
dec
mov
mov
mov
dec
and
mov
cwde
xchg
adc
movs
fisttp
or
pop
mov
aas
push
or
mov
adc
xchg
nop
test
or
lods
push
fistp
hlt
out
cmp
mov
lea
or
out
mov
adc
sbb
pop
adc
imul
xchg
jg
cmc
push
in
pop
fist
adc
jnp
imul
popa
push
cwde
aaa
mov
add
test
sbb
stos
add
gs
bound
pop
shl
pop
adc
out
ja
vpsrld
ret
vmaxsd
mov
xor
(bad)
stos
scas
mov
cmp
or
inc
in
jp
mov
add
pop
sar
xchg
mov
outs
pop
and
and
aaa
ins
or
retf
push
scas
and
push
outs
xchg
mov
xchg
sub
dec
ror
ja
leave
outs
adc
dec
xlat
inc
push
stos
push
inc
cmp
cs
mov
mov
xchg
cmp
jg
nop
aad
mov
repz
pop
xchg
cmp
sbb
or
addr16
idiv
pop
mov
int3
inc
mov
cmp
aaa
jno
xchg
call
sub
shl
pushf
out
and
outs
sbb
pop
mov
mov
dec
pop
into
and
aaa
mov
sbb
mov
in
sbb
mov
sahf
xchg
repnz
imul
pop
addr16
lods
stos
push
lock
mov
loop
add
pop
clc
sbb
sub
into
xchg
repnz
daa
mov
and
sbb
lods
jl
cmp
movs
stos
jae
sahf
unpckhps
xor
dec
cld
in
and
fcomp
nop
stos
out
shl
push
mov
push
lgdtd
inc
jnp
(bad)
ds
loopne
cld
aad
daa
inc
test
and
push
dec
sahf
addr16
imul
adc
mov
mov
movs
into
mov
fisub
lods
ret
mov
xchg
mov
fwait
dec
pop
mov
xor
imul
push
dec
mov
rcl
in
push
lock
push
dec
add
movs
popa
mov
lea
es
mov
adc
(bad)
fsubr
pop
dec
ins
(bad)
jmp
sbb
fsub
daa
iret
mov
(bad)
rol
ds
repz
lds
or
mov
lds
dec
xor
adc
lock
or
and
jns
out
sbb
or
in
jle
shr
push
push
hlt
sub
inc
sti
jne
ror
add
das
or
pop
js
repz
push
push
mov
leave
jp
or
(bad)
(bad)
mov
sbb
ja
sbb
fs
adc
pop
xchg
not
mov
mov
jp
(bad)
call
fdiv
jmp
ror
sbb
hlt
daa
inc
sbb
mov
jmp
pop
fild
cmp
cld
push
shl
movs
daa
imul
add
and
lods
and
scas
in
dec
dec
ins
xchg
int3
call
test
clc
adc
rol
inc
dec
mov
icebp
mov
mov
loopne
mov
cmp
and
movzx
xchg
sbb
mov
xchg
xchg
(bad)
mov
in
adc
popa
jge
dec
hlt
pop
mov
jne
inc
mov
pushf
jecxz
data16
(bad)
psubsb
mov
test
or
mov
cmp
mov
or
push
jg
cmp
enter
outs
push
test
dec
pop
push
mov
push
pushf
fld
xchg
(bad)
nop
dec
int
pop
push
adc
and
adc
pop
xlat
sti
das
mov
retf
inc
xlat
jl
or
pop
mov
and
mov
std
cmp
sbb
fwait
adc
xor
jmp
mov
adc
jns
loop
fild
jne
push
sbb
ret
push
push
fiadd
je
mov
mov
icebp
cmp
je
in
sub
scas
mov
xchg
push
xchg
push
and
sbb
shr
xor
adc
js
lds
(bad)
ins
pop
jo
int3
ja
cmp
inc
rol
mov
adc
add
mov
test
popa
nop
mov
fwait
xchg
addr16
push
sub
cmps
mov
out
mov
sub
lods
int
and
xchg
pop
jns
jb
cmp
mov
mov
enter
(bad)
push
out
shl
pop
sahf
call
fcmovbe
mov
mov
mov
out
jnp
jnp
stos
es
out
xchg
fist
and
pop
retf
test
cli
stos
jbe
cmp
cmp
sbb
adc
dec
repnz
out
pusha
popa
leave
lock
add
xchg
rol
call
in
inc
jge
push
pop
sbb
addr16
adc
retf
aaa
xchg
cmp
lea
data16
shr
adc
ins
cmp
jmp
out
js
and
stos
mov
push
jns
push
xor
aas
mov
call
push
shr
imul
outs
push
and
mov
lods
or
dec
retf
out
and
aaa
and
rcl
jno
inc
stos
pusha
adc
push
push
xchg
outs
push
ins
push
imul
xchg
push
dec
imul
pop
gs
mov
pop
je
cmp
inc
mov
pushf
into
cli
push
mov
cmc
loop
fsub
cld
adc
mov
jle
cmc
ds
cmp
xor
sub
retf
idiv
sub
jg
mov
aad
jo
fwait
mov
or
dec
xlat
sti
dec
out
ins
mov
xor
outs
ficom
ja
jle
and
test
dec
repnz
add
mov
rcl
inc
int3
push
popf
xor
icebp
or
sbb
jl
hlt
loope
xor
push
out
sub
sbb
xor
pop
test
cs
cmp
push
inc
push
xor
fs
jle
inc
xchg
inc
das
mov
hlt
gs
daa
fnstcw
and
pop
data16
xlat
mov
jmp
not
(bad)
cmp
in
sbb
dec
mov
and
aaa
dec
(bad)
lods
jne
sub
xchg
fdivr
pop
sub
stos
fwait
sbb
pop
or
add
push
or
aas
outs
cdq
lods
gs
ffree
mov
out
xchg
add
jecxz
aas
clc
shl
push
fidiv
arpl
inc
sahf
pop
jp
cwde
and
fnstcw
sub
in
or
sahf
jecxz
sub
(bad)
out
mov
(bad)
sbb
sub
(bad)
aam
cmp
push
sbb
dec
jge
pop
sub
cs
jmp
lds
in
cmp
mov
jnp
fldl2e
bound
lahf
sbb
clc
mov
cdq
pop
pop
dec
and
test
mov
retf
cld
out
mov
push
sub
movs
aam
test
xchg
aas
fimul
cmps
shr
retf
popa
push
out
cmp
mov
les
push
cli
pop
sub
sti
fsubr
xor
jg
sub
mov
jle
inc
stos
mov
xchg
adc
(bad)
jns
xor
jb
nop
ficom
jmp
push
shl
rcl
or
es
sub
ss
les
addr16
xchg
ror
xchg
inc
jno
cli
call
nop
(bad)
(bad)
dec
cmps
xacquire
sbb
das
fwait
and
stos
adc
icebp
lods
dec
jnp
pop
aam
jp
in
mov
movs
mov
daa
mov
and
out
scas
xor
lea
mov
add
mov
sbb
stos
fcmovnbe
rcl
setb
je
jbe
(bad)
dec
inc
pop
cmp
cdq
aaa
mov
in
add
or
push
test
cmp
int
fnsave
push
add
push
push
push
push
and
push
xor
push
or
xchg
cmc
push
and
xor
scas
jmp
outs
cwde
les
(bad)
xor
add
push
jp
push
pop
push
hlt
inc
pop
cmp
dec
push
push
out
jne
push
jne
push
ficom
(bad)
fst
movs
sbb
inc
and
call
xchg
sahf
out
shl
bound
push
xchg
cmps
dec
cdq
sbb
add
adc
cld
sahf
(bad)
call
addr16
jae
and
shl
ret
add
inc
xchg
xor
adc
sub
cmps
xchg
sbb
pushf
addr16
xor
dec
sbb
repz
loopne
bound
inc
inc
out
lods
aas
test
inc
or
xor
ror
in
nop
mov
out
cld
and
and
shl
out
and
scas
dec
mov
jns
sbb
arpl
imul
dec
push
adc
ror
(bad)
pop
cdq
cmp
mov
(bad)
xor
and
cmps
or
sbb
mov
imul
xor
jns
mov
(bad)
repz
leave
push
stos
xchg
adc
or
js
test
shl
sub
idiv
pop
inc
movs
xor
push
sti
fwait
leave
sar
in
lods
adc
lahf
dec
shl
mov
hlt
fidivr
pushf
mov
adc
scas
lds
fnstenv
(bad)
fistp
cmp
jno
or
mov
pop
mov
sub
push
xor
nop
add
sub
imul
(bad)
movs
jo
xor
and
or
(bad)
sahf
dec
jne
ja
mov
ins
(bad)
jne
retf
mov
ficom
sbb
pop
leave
pop
add
and
add
adc
add
cdq
sub
clc
mov
shl
push
retf
mov
repnz
mov
scas
sub
(bad)
mov
sbb
inc
enter
lahf
sub
and
sub
inc
mov
mov
out
mov
mov
or
sti
call
pop
and
lds
pushf
add
mov
cmp
mov
inc
cmp
outs
push
mov
out
stos
ss
dec
xor
xor
ret
sub
cmps
xchg
dec
sbb
xor
mov
mov
push
fistp
xor
xchg
pop
ins
mov
lods
or
popa
inc
sbb
pop
sub
int
cmps
iret
jmp
into
ror
fild
push
cdq
repnz
loope
xlat
popa
push
add
mov
jge
and
mov
fwait
sahf
imul
test
push
cmp
dec
imul
xchg
in
adc
ror
test
pop
retf
push
add
xchg
sub
popf
popf
or
(bad)
retf
mov
push
pop
or
stos
arpl
(bad)
cmp
ret
push
or
fsub
es
jns
cmp
shl
xor
stos
sub
push
bound
call
je
lods
or
or
in
mov
pusha
push
in
cmp
push
rol
and
mov
mov
sub
sbb
fsubr
adc
pop
lock
cmps
push
stos
xor
push
sub
xor
cld
cld
mov
inc
or
or
sbb
shl
xor
jp
retf
imul
(bad)
lods
dec
and
mov
jne
addr16
arpl
icebp
mov
neg
pop
test
cmp
loope
pop
retf
fld
repnz
push
jp
lahf
or
add
mov
inc
inc
xor
ret
xor
movs
adc
xchg
sub
fnstcw
adc
sub
stos
fiadd
outs
jl
in
pop
rcr
loopne
jnp
and
or
dec
add
adc
call
sbb
stos
sbb
push
dec
pop
cwde
(bad)
cmp
sub
retf
retf
mov
es
pop
arpl
inc
(bad)
mov
xlat
nop
aas
push
outs
xor
(bad)
pop
clc
mov
xor
sar
xlat
fbld
cmp
mov
pop
inc
lahf
lea
mov
(bad)
cwde
xlat
mov
jge
pop
loope
cmp
aam
scas
cli
xor
movs
test
xor
fadd
pop
and
adc
jb
out
add
add
inc
xor
fist
xchg
jmp
fild
push
xor
push
pop
repnz
mov
mov
xlat
add
pop
mov
(bad)
jnp
mov
pusha
inc
mov
and
lods
xor
std
dec
dec
mov
pop
mov
aas
mov
adc
xor
sub
mov
push
add
add
or
bnd
or
jmp
dec
lods
jns
add
xchg
push
add
sbb
aas
add
and
outs
cmp
mov
push
add
xor
stc
test
and
inc
sahf
int
fisubr
test
or
push
sub
(bad)
gs
dec
retf
mov
rcr
stos
stc
xchg
int
cld
xchg
int
mov
call
in
xor
dec
adc
mov
mov
ja
mov
xchg
mov
mov
push
daa
js
inc
pop
push
rdtsc
outs
not
xor
sub
dec
cmp
mov
sbb
(bad)
rol
xchg
or
cwde
xchg
retf
mov
ds
jg
jmp
or
sbb
pop
or
pop
xchg
rcl
sub
mov
adc
sbb
xor
ss
loop
rcl
ins
and
(bad)
out
xor
jno
ins
mov
gs
inc
jnp
leave
push
push
push
sbb
iret
scas
sub
adc
repnz
add
pop
xor
jb
inc
call
mov
inc
mov
jmp
pop
loope
pop
sbb
imul
data16
bound
fs
inc
pop
pop
push
cmp
mov
and
push
or
jg
push
into
fstcw
xlat
xchg
data16
arpl
(bad)
mov
sub
push
add
inc
push
xchg
into
mov
enter
imul
pop
pop
ror
mov
fbstp
imul
fldcw
dec
das
repz
pop
pop
add
jbe
pop
mov
movs
sar
push
shl
pop
add
mov
ss
sub
call
popa
sbb
push
out
in
mov
cmp
fmul
inc
or
and
sub
sbb
nop
mov
mov
xor
mov
icebp
cmps
in
nop
jae
push
pop
out
jp
cmp
cmp
pop
in
pop
aas
dec
sbb
pop
faddp
fadd
stc
mov
and
push
jbe
inc
adc
(bad)
cmp
js
dec
adc
pop
push
dec
(bad)
mov
loopne
xor
sub
(bad)
leave
inc
(bad)
mov
mov
sar
cmp
inc
hlt
mov
js
mov
mov
lods
clc
mov
out
repnz
loopne
cmp
mov
mov
add
test
add
sbb
mov
stos
int
mov
mov
mov
out
mov
pushf
fisubr
add
push
mov
cmp
bound
addr16
xlat
call
fidiv
jbe
push
loopne
repz
mov
push
xor
ins
push
push
out
dec
sub
pop
sbb
addr16
dec
sbb
lock
call
jo
xchg
fldcw
add
ja
ds
push
retf
mov
adc
es
jbe
inc
or
les
shl
xchg
retf
push
sbb
lock
push
xor
mov
call
xchg
test
pop
mov
mov
adc
adc
cs
inc
xchg
push
inc
adc
adc
das
push
or
dec
imul
int
aam
addr16
xchg
test
mov
jp
jecxz
les
shl
(bad)
movs
cmc
and
sbb
jns
push
push
loopne
add
mov
mov
data16
scas
(bad)
scas
test
mov
cmp
retf
lods
scas
sbb
std
push
sub
in
retf
stos
stos
(bad)
mov
inc
aad
out
dec
mov
aad
fs
dec
aas
adc
jl
inc
cmp
mov
mov
pop
push
pop
dec
pop
jecxz
adc
or
in
ret
mov
xchg
xor
inc
add
imul
ss
pop
lea
enter
sar
shl
jl
inc
mov
or
mov
adc
outs
mov
or
mov
shr
call
cmps
fistp
push
es
dec
sub
pop
(bad)
jmp
cli
xchg
jne
test
mov
fwait
scas
jmp
mov
mov
popa
xor
ficomp
aas
es
(bad)
test
cmp
pusha
or
rol
movs
jmp
aaa
pop
mov
cli
dec
pop
inc
or
sub
ficom
popw
pop
in
int3
ins
mov
push
inc
adc
jecxz
mov
aad
sbb
dec
les
pop
adc
sbb
js
inc
ds
mov
das
imul
leave
out
out
(bad)
xor
pop
loopne
fcom
cwde
fidiv
jb
cdq
cli
cwde
aad
mov
movs
loope
std
imul
jne
mov
jl
dec
adc
push
js
jb
rdtsc
push
in
fbstp
sub
xor
or
push
sbb
sub
pop
scas
inc
adc
xchg
int3
pushf
imul
jp
clc
scas
fisubr
and
inc
cld
popf
cld
or
pop
push
pop
test
xchg
mov
jp
outs
test
inc
add
movs
std
mov
jnp
xchg
iret
imul
cmp
cmc
cmp
std
popa
mov
(bad)
xchg
shl
(bad)
xchg
(bad)
cdq
(bad)
lock
mov
(bad)
xchg
fistp
mov
fisubr
stos
icebp
mov
movs
jecxz
pop
push
jl
jbe
push
push
jae
or
loop
add
mov
test
dec
adc
push
xor
cmp
loopne
div
adc
jg
cmp
lahf
ficomp
retf
mov
fisub
stos
sbb
std
jecxz
fwait
int3
mov
pop
push
or
mov
xchg
(bad)
jle
mov
mov
sbb
xchg
shl
fdiv
cmps
(bad)
xchg
and
int3
jb
fst
icebp
inc
push
jp
dec
xor
adc
dec
sbb
push
cmps
jg
jae
inc
sbb
jo
shr
and
cmp
je
push
cld
sbb
fwait
cli
xchg
sti
cmp
push
ja
push
(bad)
lods
call
mov
jo
lahf
in
inc
rol
sub
cdq
jecxz
inc
lods
lds
sar
loop
push
jb
jl
(bad)
fiadd
push
repnz
aaa
and
fwait
jl
sub
add
rol
lahf
outs
pop
je
out
cmp
dec
fisub
aas
push
aam
fidivr
xor
jl
and
stos
dec
jecxz
aad
hlt
mov
cmc
(bad)
fild
sbb
je
rep
(bad)
mov
shl
outs
cmp
es
dec
sub
inc
sbb
sub
push
cmp
in
popf
xchg
movs
fist
jmp
xchg
sub
leave
pop
in
div
outs
sub
push
stos
div
mov
lods
repz
sar
sti
mov
cdq
repnz
das
sbb
jg
push
mov
mov
add
cmp
adc
and
fstp
add
or
cmps
push
adc
in
data16
ins
into
pop
push
pop
aas
jne
dec
cmp
pop
push
das
xchg
rol
mov
or
push
sub
dec
in
div
(bad)
leave
lahf
fist
daa
push
add
aaa
jae
cs
dec
es
bound
xor
mov
rcl
push
pop
adc
sahf
cmc
popf
(bad)
mov
(bad)
loopne
aam
idiv
out
stos
out
aaa
addr16
or
jb
inc
or
js
push
dec
sbb
cmp
pop
push
ins
imul
or
dec
aaa
outs
or
mov
xchg
bound
das
and
push
cmps
neg
jp
jne
imul
rcl
cwde
jmp
or
shl
ds
sbb
adc
push
dec
sbb
xchg
shl
xor
jne
jle
xchg
enter
inc
cmp
call
shr
mov
mov
fdiv
mov
mov
adc
sub
mov
cdq
repnz
dec
and
add
ror
dec
add
es
xor
sbb
mov
mov
les
push
js
enter
mov
mov
inc
mov
test
cwde
cmc
mov
ins
add
jnp
mov
cmp
mov
lahf
outs
das
push
es
inc
pop
dec
rcr
pop
sbb
add
inc
sbb
or
dec
adc
(bad)
cdq
fsub
push
push
call
mov
daa
outs
cmp
sar
int
rol
lahf
aad
mov
loop
mov
jnp
push
int
out
mov
lds
fdivr
and
cmps
jecxz
push
neg
sub
mov
mov
ja
outs
add
test
mov
std
dec
sbb
daa
push
and
xchg
mov
sub
push
dec
je
push
push
dec
mov
daa
data16
sbb
scas
retf
popa
sub
sbb
out
mov
jno
pop
cmp
mov
clc
xchg
stc
nop
ret
mov
movs
loopne
add
pushf
fdivr
xor
sbb
push
adc
les
pop
sub
push
xchg
lahf
mov
fcom
bound
dec
sbb
and
xor
sub
lock
movs
out
stc
xchg
stos
push
cmp
fistp
mov
cmc
mov
mov
stos
mov
ins
rcr
(bad)
lahf
iret
movs
mov
and
dec
call
mov
clc
mov
mov
aaa
pop
xor
cmp
cs
push
mov
add
outs
add
xchg
mov
es
xor
xchg
retf
add
jns
jno
leave
add
and
das
ins
and
add
hlt
xchg
call
adc
je
inc
cmp
test
sbb
mov
cmp
lods
sbb
inc
adc
and
and
xchg
retf
add
outs
cmp
imul
xor
jmp
push
mov
jnp
cli
ss
push
mov
sub
pop
icebp
stos
xlat
inc
pop
bound
dec
sub
call
out
push
sbb
aas
xor
cmps
into
test
test
fist
cli
add
jge
add
push
pop
jp
jb
sahf
jp
out
stos
lock
rcl
ins
sbb
mov
push
add
or
inc
lods
pop
xor
pop
(bad)
mov
in
mov
inc
push
sub
mov
dec
or
pop
jg
jo
add
out
xchg
fldenv
rcl
inc
add
in
(bad)
xchg
scas
ret
bound
dec
adc
aaa
jle
jp
nop
lds
add
(bad)
iret
popa
and
inc
xor
ja
stc
or
and
jmp
mov
xchg
frstor
ror
sbb
inc
push
outs
xor
in
les
jnp
push
or
ins
aas
dec
xor
pop
adc
push
and
jae
loope
mov
jl
jle
push
sub
popa
loopne
mov
hlt
lods
in
test
cmps
mov
out
scas
cmc
movs
into
cmps
lds
fisubr
movs
leave
cwde
repz
iret
test
adc
and
pop
sbb
icebp
mov
stos
stc
mov
mov
rcl
shl
xchg
into
(bad)
hlt
outs
psubw
push
jl
inc
sbb
sti
add
cs
push
rcl
mov
sbb
add
loopne
push
push
inc
jmp
and
loopne
in
movs
mov
push
outs
lods
arpl
inc
sbb
sbb
inc
jmp
xchg
mov
inc
sti
leave
mov
jle
sub
sub
mov
test
scas
push
inc
add
ss
add
sub
push
adc
rol
or
data16
sub
add
and
inc
pop
dec
repz
jnp
imul
xchg
fld
cmp
xchg
jmp
lock
push
jl
pop
or
push
pop
push
inc
rol
das
jo
pop
das
jne
inc
fdivr
push
add
stos
call
xor
sti
mov
fwait
ret
xchg
shl
cmp
jno
jp
pop
hlt
pusha
sbb
inc
adc
ds
sbb
jae
and
mov
push
nop
jmp
std
mov
cmp
pop
add
ja
shr
call
(bad)
xchg
rol
popa
and
(bad)
add
in
sub
or
cld
xchg
(bad)
mov
cmp
and
push
push
add
push
push
ja
push
ss
data16
test
fsubrp
mov
mov
das
icebp
lods
call
push
or
hlt
rcr
jno
xor
adc
inc
pop
dec
into
mov
(bad)
push
push
add
loope
fldenv
or
ins
or
or
push
add
test
mov
movs
(bad)
push
test
add
outs
mov
iret
jbe
(bad)
mov
stos
stos
(bad)
mov
jno
inc
repnz
push
pop
sbb
cs
xchg
push
and
je
jbe
push
outs
out
repz
hlt
ins
and
mov
into
outs
shl
mov
(bad)
out
enter
test
or
gs
pop
repz
inc
stos
push
adc
sub
sbb
dec
sbb
cli
test
stos
out
mov
mov
in
iret
test
xchg
fbld
mov
adc
xchg
popa
adc
pop
in
frstor
fsub
inc
sbb
mov
or
retf
gs
push
scas
jmp
imul
hlt
mov
cmp
test
(bad)
clc
mov
clc
pushf
scas
xchg
push
maxps
(bad)
pop
sub
adc
loop
std
scas
fs
mov
sar
mov
xchg
fild
mov
xchg
fisttp
inc
cmp
mov
jg
and
es
jl
call
push
adc
sub
div
movs
in
pop
movs
in
xchg
fnstenv
retf
xor
inc
sub
dec
cmp
cs
adc
ja
enter
das
push
dec
xor
push
push
adc
dec
out
cmp
je
inc
aaa
and
inc
dec
cmc
xchg
mov
sub
mov
int
shl
xor
aad
jmp
loop
mov
lahf
repnz
into
cmp
xchg
cdq
cli
jb
adc
push
jmp
ins
sub
push
pop
outs
cmp
jle
jb
jno
push
inc
add
mov
ds
dec
cmp
inc
cmp
movs
jmp
gs
and
aas
outs
sub
ret
xchg
call
xchg
not
sbb
cmp
shl
loopne
fnsave
out
sti
mov
stos
pop
nop
(bad)
jno
push
ret
mov
int
cld
aaa
imul
push
daa
jae
pop
loop
jg
jp
cmp
cmp
mov
push
or
pop
adc
and
aad
loope
jle
test
mov
or
sub
jno
jg
push
out
fs
mov
jg
inc
movs
lock
mov
or
lods
fisttp
push
push
sbb
stc
test
mov
pop
or
or
in
mov
ret
xchg
cmc
cmps
iret
adc
push
lds
(bad)
jle
push
dec
push
(bad)
cmp
sub
cmp
and
js
push
adc
rep
loop
(bad)
mov
lahf
cmp
pop
out
test
xor
xchg
shr
sub
push
mov
mov
xchg
retf
mov
pop
sbb
dec
adc
sub
mov
jb
or
dec
ds
sbb
dec
mov
mov
cmps
hlt
mov
push
inc
(bad)
mov
mov
gs
mov
or
or
mov
mov
jle
rcl
fmul
in
pop
rcr
xlat
xchg
test
or
sub
lods
call
outs
(bad)
xor
pop
sbb
lds
jae
ins
sbb
retf
test
mov
xchg
(bad)
cli
lods
fst
aam
sbb
sti
push
xor
mov
mov
jnp
shr
xor
cs
and
ja
jo
inc
sbb
sbb
xor
and
cmp
pop
movs
pop
xor
pop
cmc
xchg
scas
call
cld
scas
lahf
in
arpl
adc
out
xchg
iret
imul
mov
rol
mov
xor
je
xchg
dec
outs
pop
outs
sbb
jbe
cdq
adc
sbb
inc
adc
jle
gs
hlt
cs
mov
rcr
jo
pop
out
cli
adc
ror
inc
in
test
inc
cmp
imul
outs
outs
adc
dec
call
inc
or
jae
dec
popa
add
add
ins
add
sbb
gs
jle
cmp
xor
out
lahf
inc
push
or
popf
gs
mov
jmp
push
xor
(bad)
mov
jle
jne
ret
ret
xchg
(bad)
mov
enter
loope
int3
scas
(bad)
test
data16
fsubr
xchg
cwde
mov
adc
enter
cld
cwde
lock
jmp
lahf
int3
xchg
jns
inc
adc
push
or
dec
push
jle
push
add
data16
xchg
mov
push
add
dec
and
push
sbb
add
pop
out
mov
xchg
add
and
sbb
int
test
cmp
imul
mov
rcl
das
jle
ss
and
push
xchg
add
dec
or
mov
test
mov
cdq
fisttp
cmovle
inc
adc
push
pop
xor
jge
jg
xor
xor
sahf
stc
jne
(bad)
xchg
fnstsw
inc
xchg
xor
das
mov
mov
fld
(bad)
retf
inc
lds
cli
cdq
les
and
pop
xor
call
outs
jge
jns
test
xor
push
push
mov
xlat
mov
cli
nop
test
add
imul
(bad)
call
sub
int3
mov
sub
mov
xor
xchg
cld
cwde
ins
rcr
jmp
loope
aad
mov
fidiv
jae
pop
out
jmp
fwait
fwait
in
movs
fistp
in
mul
cwde
pop
jbe
pop
movs
push
sbb
jle
adc
pop
pop
jmp
shl
cld
xchg
inc
adc
jbe
sbb
fs
imul
push
ret
(bad)
cmc
lods
les
pop
std
in
mov
mov
lds
cld
cmps
shl
into
jmp
shr
cmps
imul
sub
jge
ss
out
mov
xchg
mov
lods
sti
mov
mov
fidiv
and
fs
push
add
dec
add
cwde
cmp
pop
mov
sub
cli
push
call
mov
in
pop
mov
cmps
stc
rcr
ss
xor
in
push
imul
arpl
push
in
xchg
movs
test
test
mov
xchg
cmp
inc
adc
and
add
cld
and
sub
ja
pop
push
dec
xor
out
sahf
fistp
imul
pusha
xor
jnp
mov
mov
mov
imul
sahf
mov
mov
cmps
leave
or
ja
pop
sub
pop
mov
ins
sub
mov
(bad)
in
xchg
popa
arpl
fimul
in
cwde
mov
mov
arpl
jp
jo
pop
pop
sub
mov
fisubr
cs
in
call
mov
iret
movs
(bad)
lahf
popa
test
xor
jg
jl
dec
cmp
sbb
sub
dec
out
loop
mul
daa
push
sbb
not
push
cmp
xor
outs
mov
cmc
mov
popf
xlat
or
mov
pusha
xor
ret
call
(bad)
div
mov
repnz
stos
in
in
sub
pushf
mov
jmp
inc
imul
and
jns
pop
mov
inc
add
adc
and
xchg
pop
mov
mov
mov
cmp
retf
fwait
out
fwait
pop
arpl
jnp
sar
xor
mov
cdq
xor
mov
cmp
pop
xor
lods
jns
sti
sbb
push
pop
push
(bad)
and
loope
les
add
ficomp
mov
xor
shl
ds
dec
iret
ror
pusha
pop
dec
cli
js
mov
xchg
ret
imul
push
add
pushf
cmps
test
adc
xlat
jg
in
stos
fimul
mov
pushf
int
sbb
cmc
xor
inc
sbb
out
mov
mov
ja
add
push
pop
aas
adc
shr
mov
cmp
jmp
test
fwait
or
(bad)
xor
mov
bound
loop
jmp
test
push
sub
jo
dec
shl
test
dec
xor
daa
mov
aas
and
cwde
xchg
xor
mov
inc
or
pop
adc
stos
pop
dec
ins
adc
ins
xchg
fdiv
outs
(bad)
mov
lods
pop
test
push
cmp
fcomp
int
int
mov
pop
mov
call
(bad)
js
xchg
leave
es
sbb
(bad)
loopne
popf
arpl
jle
adc
xor
in
or
xor
dec
dec
jmp
adc
add
mov
pop
imul
jb
pusha
xor
loope
pop
xor
outs
inc
sub
sbb
and
outs
mov
fcom
stos
or
cmp
mov
fdiv
fisttp
inc
adc
stc
pop
mov
fmul
pop
call
inc
scas
push
daa
mov
mov
std
sbb
mov
xor
pop
int
call
jg
pop
cs
sar
pop
inc
stos
inc
imul
pusha
xor
pavgb
pop
call
int3
test
movs
sbb
add
push
and
mov
fsubr
jmp
int3
adc
jae
xchg
dec
xchg
ja
cmp
sub
nop
aas
aam
mov
inc
in
xchg
xchg
es
mov
xchg
jno
clc
xor
and
icebp
push
test
in
pushf
sbb
dec
hlt
cmps
cld
fist
scas
add
hlt
je
pop
sar
add
ja
dec
pop
into
and
sub
je
cmp
sub
inc
pop
jmp
div
and
repnz
iret
sbb
das
dec
fcom
or
lds
ret
mov
xlat
aas
call
or
scas
sub
mov
ds
and
jl
sub
pop
push
pop
mov
icebp
js
dec
mov
out
in
out
add
xor
ret
dec
ret
(bad)
das
ret
pop
mov
jne
jmp
or
inc
fcom
push
jmp
push
call
out
es
ret
in
stos
out
dec
iret
loope
fldenv
leave
xchg
sbb
or
(bad)
in
cli
mov
mov
mov
sbb
xlat
ins
cmp
mov
dec
faddp
add
dec
cmps
bound
fdecstp
push
mov
and
sub
enter
call
xor
pop
stos
ins
pop
js
int3
test
cmp
das
arpl
mov
xor
inc
cs
add
xlat
out
int
jmp
jno
jmp
(bad)
cmps
mov
scas
pop
cwde
inc
rcr
jg
mov
xor
movs
imul
out
inc
ret
or
adc
mov
cmp
imul
fsub
cdq
adc
cmc
add
cwde
mov
arpl
xor
inc
push
or
leave
sti
retf
lea
ja
dec
add
inc
fwait
push
pop
xchg
les
mov
ss
jle
ja
jp
push
cmp
or
xor
pop
dec
sbb
adc
repz
inc
imul
add
sub
les
mov
mov
inc
(bad)
sbb
std
in
sub
inc
and
pop
and
dec
push
mov
jp
shl
mov
ss
inc
scas
mov
rol
call
add
add
sbb
push
add
xor
out
push
les
push
push
or
cld
push
mov
adc
push
sbb
push
push
jle
in
mov
mov
mov
cmps
loopne
in
nop
icebp
outs
ss
jmp
mov
sbb
add
icebp
outs
addr16
sbb
adc
ds
rcr
pop
jo
cs
xor
data16
out
hlt
xlat
pop
sbb
dec
out
adc
push
test
xchg
add
dec
sbb
rcr
add
mov
or
bound
xor
pop
imul
movs
xor
fld
cmp
out
loop
pop
push
cmp
popf
mov
inc
enter
repz
xchg
and
loop
cmp
shr
outs
fidiv
dec
sbb
push
cmp
js
lods
add
sbb
clc
aad
pop
dec
mov
test
jl
sbb
jl
retf
inc
nop
mov
adc
and
adc
gs
bound
test
lods
test
mov
bound
push
jg
test
retf
loope
lahf
stos
(bad)
test
push
popf
push
push
push
push
mov
scas
stos
jo
add
fst
sbb
int3
loopne
xor
jge
into
push
data16
inc
mov
mov
(bad)
dec
mov
pop
pusha
imul
rcr
call
dec
pop
(bad)
std
sbb
aad
sbb
movs
dec
mov
nop
outs
mov
mov
cmp
xlat
adc
leave
or
test
and
call
and
cli
movs
sbb
cdq
push
icebp
outs
mov
mov
pop
test
sub
jb
nop
(bad)
cwde
data16
mov
sar
sti
fwait
inc
in
call
xlat
mov
jnp
inc
loopne
xor
mov
shl
inc
repnz
loope
out
retf
movs
cld
xchg
daa
pop
xchg
mov
add
in
push
sbb
adc
push
fnstsw
or
(bad)
cdq
sbb
jmp
ds
lds
sbb
or
rcl
aam
cli
adc
rcr
cmp
push
sar
fldenv
sbb
std
push
imul
femms
pop
idiv
jmp
mov
dec
in
jmp
inc
adc
cwde
xchg
xor
ret
(bad)
fld
or
outs
call
mov
in
and
push
dec
inc
mov
aaa
xchg
bound
mov
adc
loop
ret
iret
mov
in
popf
dec
loope
add
imul
popa
es
sub
les
jmp
mov
daa
push
aad
xlat
gs
scas
popa
sbb
stos
popf
mov
pushf
xor
push
mul
dec
dec
mov
(bad)
imul
leave
push
aad
ror
sub
adc
push
ror
push
cld
xchg
adc
push
fst
rol
sti
mov
push
call
mov
loop
xor
dec
scas
push
sbb
mov
dec
mov
adc
mov
cmp
fild
xor
es
push
mov
(bad)
stc
iret
in
fsubr
fsubr
jns
pop
stc
and
fcomp
test
mov
push
popa
mul
mov
pop
or
jmp
mov
test
dec
add
or
test
or
jl
xchg
mov
and
out
ins
shl
push
jg
jo
out
in
xchg
mov
add
fld
lock
jbe
loope
and
loop
aas
push
fld
mov
ins
out
fidivr
lea
in
js
dec
(bad)
and
not
test
cs
in
inc
dec
or
sub
into
mov
inc
hlt
ds
int
mov
es
cmp
scas
or
sub
scas
sbb
mov
sbb
cdq
shl
in
push
cmp
in
cdq
jp
add
jae
xchg
ret
jmp
test
lahf
sbb
xor
nop
mov
mov
aam
cmp
add
outs
sub
xor
jbe
lods
inc
or
adc
push
dec
movs
mul
mov
sub
ret
mov
popf
(bad)
stos
mov
jbe
stc
mov
outs
xchg
rol
inc
sub
xchg
scas
and
inc
xchg
jl
inc
in
and
jne
(bad)
pop
mov
mov
stos
shl
fidiv
cmp
(bad)
test
adc
lahf
movs
xor
cmps
int
popa
jne
push
dec
sbb
arpl
sub
fldcw
retf
fisubr
add
loop
xor
or
sbb
ja
lods
xchg
push
pop
adc
jmp
dec
hlt
dec
inc
jns
dec
inc
jns
xlat
test
mov
mov
sbb
cmc
xchg
repnz
mov
nop
les
ret
dec
jbe
xchg
cwde
pop
pop
cli
sbb
dec
jo
xchg
(bad)
dec
add
mov
ins
scas
std
into
xchg
call
mov
bound
popa
call
ins
push
inc
mov
xchg
mov
jnp
fwait
dec
inc
js
cmps
pop
jge
popf
push
(bad)
out
cmp
aas
mov
ret
push
dec
rcl
and
mov
popa
das
mov
inc
push
pushf
inc
xchg
out
sbb
mov
sub
cmps
lock
(bad)
retf
icebp
xchg
ss
in
mov
mov
mov
inc
xchg
arpl
scas
pop
or
cmp
cdq
dec
xchg
pop
mov
and
inc
aad
cmps
mov
and
and
mov
cs
popf
and
popf
and
out
mov
(bad)
push
cmp
repnz
in
in
xchg
inc
and
std
add
pop
les
mov
stos
jp
sti
xchg
jecxz
push
inc
out
sub
push
mov
pop
es
push
xor
rcl
xor
inc
mov
cli
in
jl
push
cmps
jns
pop
movs
mov
iret
mov
dec
arpl
mov
dec
or
adc
ret
int
jl
sbb
aad
jge
mov
jp
xchg
push
mov
fwait
or
and
pusha
idiv
gs
out
jge
ds
iret
shr
jp
xor
jae
sbb
inc
mov
jmp
popa
jae
nop
pop
cld
pop
pop
in
mov
fstp
pop
hlt
jge
lahf
mov
jmp
loope
jae
adc
pop
cdq
lahf
xor
iret
jnp
xchg
std
fldenv
retf
ret
push
imul
loope
mov
loop
sbb
fmul
push
add
and
aaa
cmp
ds
cld
aam
or
xor
loope
dec
cmc
jmp
jnp
xor
pop
adc
pop
fdivrp
sub
jnp
mov
adc
je
mov
cwde
fldcw
ins
sbb
cwde
mov
fst
fcmovnu
cmps
cmp
jmp
(bad)
aas
fistp
xchg
fsub
test
pop
xor
mov
cmp
scas
and
or
cmc
ficom
leave
in
pop
aas
xor
ins
sub
or
jnp
retf
xchg
add
mov
call
mov
pop
inc
add
sub
call
ds
or
or
jmp
popf
adc
inc
xor
inc
mov
test
sub
fidivr
xor
add
loope
sub
daa
lods
jo
jns
ficomp
icebp
imul
push
in
(bad)
ins
adc
sti
movs
jmp
adc
scas
daa
and
sub
push
clc
mov
rol
movs
sbb
adc
call
mov
mov
sub
xchg
mov
fwait
mov
call
jmp
aas
lock
xor
push
test
dec
mov
hlt
sub
push
loopne
in
push
mov
leave
and
sub
out
test
(bad)
in
mov
enter
pop
sti
xchg
inc
mov
pop
rol
shr
adc
daa
out
xchg
mov
pop
push
fisubr
ficom
mov
dec
and
cwde
push
fcomp
push
bound
pop
jbe
jno
bound
pop
(bad)
std
das
xchg
pop
and
pause
cmps
outs
ss
pop
push
call
aam
lock
cmp
mov
or
jb
es
inc
js
dec
inc
or
test
popa
ss
inc
js
pop
jno
(bad)
lods
out
pop
lods
push
loop
(bad)
js
cmps
(bad)
shl
cwde
xor
int
xchg
sub
xor
dec
imul
push
sub
pop
pop
fadd
fld
int3
mov
ret
inc
push
leave
mov
mov
push
mov
div
cmp
fs
mov
fidivr
(bad)
cmp
dec
cmp
xchg
rcl
mov
xlat
lahf
cmp
push
adc
jg
dec
and
pop
fwait
cmps
add
mov
or
xchg
mov
lea
outs
inc
int3
ja
and
add
outs
and
cmp
test
lea
mov
fnstcw
inc
add
and
call
xor
stos
or
cmps
iret
inc
xor
dec
xor
push
bound
push
retf
mov
je
rcl
jg
fsub
fcomi
ror
xor
push
xchg
mul
pop
jge
xchg
push
bound
mov
push
(bad)
cmp
mov
shl
aaa
sub
popf
ja
xor
jg
imul
test
dec
repz
sub
sub
sub
loop
nop
adc
pop
xor
jmp
mov
mov
xor
out
movs
mov
div
inc
out
sbb
mov
in
push
mov
das
pop
hlt
push
xchg
mov
stos
sub
cmp
(bad)
shr
pop
or
xchg
mov
mov
pop
xor
pop
inc
cmp
xlat
cwde
test
test
mov
pop
jns
mov
mov
push
popf
pop
push
or
xchg
add
gs
mov
in
fstp
or
inc
xchg
jbe
sbb
(bad)
fimul
les
mov
neg
ins
mov
mov
or
mov
(bad)
shl
and
and
jae
loope
es
popa
movs
pop
pusha
mov
rol
outs
add
(bad)
or
icebp
(bad)
sub
mov
repnz
or
add
sar
mov
rcl
popa
ret
sahf
mov
mov
fsubr
repnz
(bad)
pop
and
pop
and
leave
pop
adc
sub
leave
dec
stos
lods
mov
cmp
dec
cld
cld
loopne
dec
mov
int
cmc
mov
mov
fld
mov
sbb
jb
xchg
cld
pop
pusha
cwde
xor
jb
out
jne
outs
aam
cdq
cmp
push
movs
sub
mov
and
stos
push
jo
jne
jne
adc
fisttp
xchg
pop
js
mov
xor
push
lock
bound
xlat
sbb
sub
push
jno
cld
or
cmc
stos
mov
jmp
ins
ja
retf
mov
sub
(bad)
xchg
fs
int3
rcr
jne
adc
and
sub
xchg
icebp
adc
pop
mov
mov
icebp
retf
xchg
jns
cli
adc
xor
fwait
ss
add
test
in
cmp
les
push
or
sub
sub
adc
xchg
ret
addr16
addr16
test
adc
cmp
(bad)
jns
int
retf
pop
adc
sti
in
fcom
mov
pop
mov
xchg
adc
xor
and
pop
aas
lahf
add
cmp
sbb
in
cs
repnz
sub
rcr
sahf
sub
inc
xchg
cmp
inc
sbb
xor
mov
xor
bound
stc
imul
adc
xor
jl
mov
retf
mov
es
int3
mov
mov
push
mov
dec
and
fist
inc
xor
nop
push
dec
mov
xlat
adc
(bad)
in
cmp
popa
mov
fisubr
pop
adc
stc
popf
inc
jne
(bad)
xlat
jmp
fsub
pop
inc
push
push
xchg
sub
scas
retf
movs
add
fimul
clc
adc
pusha
pop
pop
sub
(bad)
retf
jmp
retf
add
mov
dec
push
mov
sub
paddq
and
js
(bad)
jmp
leave
test
adc
mov
(bad)
lahf
std
jmp
lea
int
sub
out
stc
jmp
cli
es
stos
cmp
ss
lods
push
inc
imul
(bad)
or
pop
retf
push
cmp
add
mov
jne
enter
(bad)
pusha
(bad)
(bad)
and
jmp
fs
xor
and
loop
dec
jno
movs
aaa
jns
test
xor
xor
fs
gs
(bad)
cdq
shr
add
sbb
cwde
push
pop
cmp
sub
add
pop
les
fs
add
xchg
retf
fidivr
pusha
jno
push
xchg
mov
mov
lahf
loop
enter
in
cmp
into
test
in
dec
pop
xor
(bad)
imul
pop
(bad)
mov
jmp
and
sti
movs
out
sti
shr
das
mov
or
gs
jecxz
cmp
daa
adc
pop
push
pop
push
stos
or
bound
or
push
mov
mov
nop
imul
loope
aad
jge
cmp
xor
pop
xor
out
sub
in
enter
cmp
fist
xchg
mov
call
sub
push
dec
or
rol
ret
and
fwait
mov
inc
mov
and
pop
jmp
jge
mov
pop
cmps
inc
and
dec
hlt
stc
inc
lods
push
cmc
and
jno
ret
outs
add
loopne
arpl
int
cmps
jae
stc
adc
call
movs
cs
jge
or
mov
int
test
retf
push
test
mov
and
mov
pop
xor
clc
stc
or
out
cmp
jno
adc
jmp
imul
stos
mov
popf
cmp
cmps
cmp
ins
fistp
call
pushf
addr16
shr
mov
repnz
retf
outs
mov
jns
or
nop
cmps
jmp
add
mov
xchg
aaa
lods
movs
inc
shr
popa
add
jae
stos
xchg
imul
pop
aas
add
js
imul
and
loope
sub
cmc
ins
push
xor
sbb
add
div
push
inc
jnp
adc
(bad)
ins
dec
xchg
lds
push
dec
aaa
in
sub
test
bswap
push
mov
adc
loop
loop
push
in
scas
(bad)
add
jmp
movs
retf
sbb
mov
pop
push
addr16
lods
cmp
or
cmp
mov
repz
xchg
pop
int3
ins
and
mov
xchg
or
mov
or
repnz
retf
inc
xchg
aad
stos
rol
paddsb
ja
std
in
and
imul
mov
(bad)
xor
loope
push
or
push
arpl
scas
enter
fcmovnb
repnz
cmp
leave
inc
ins
sub
mov
mov
clc
xor
push
aas
data16
pop
(bad)
enter
push
js
jmp
dec
int3
sub
push
add
jmp
mov
inc
movs
inc
cmp
fwait
outs
adc
cmp
sbb
xor
cmps
push
add
call
xchg
sbb
inc
loop
cdq
call
fs
pop
idiv
push
rcr
jae
pop
sub
or
(bad)
scas
add
xchg
push
add
dec
mov
jmp
mov
movs
ret
es
ss
and
loopne
aaa
sub
adc
bound
call
and
mov
jo
sub
adc
stos
sbb
xchg
inc
xor
sub
ins
outs
out
add
inc
mov
repz
xchg
call
js
sbb
cmp
(bad)
iret
jbe
sub
inc
cmp
mov
loop
dec
inc
xor
pop
push
jmp
out
(bad)
pop
in
data16
icebp
jecxz
push
mov
div
add
mov
add
adc
mov
and
jle
icebp
inc
pop
stc
pop
push
jae
mov
dec
mov
sub
icebp
retf
pushf
inc
inc
idiv
pop
sub
mov
mov
inc
dec
mov
jno
imul
inc
add
push
inc
mov
mov
(bad)
aad
and
mov
xor
stos
pop
ret
xor
leave
sahf
push
add
pop
into
aas
cmc
std
mov
jne
mov
cmps
pop
mov
sahf
loope
les
fidivr
add
popw
fsub
mov
test
lods
push
xchg
dec
mov
jo
inc
mov
fst
xchg
dec
and
and
mov
sub
add
ror
call
and
xchg
cmps
or
xor
sub
in
mov
push
and
(bad)
loopne
mov
sub
sbb
cdq
xor
test
xchg
sahf
dec
add
cli
icebp
xor
xchg
call
mov
aad
jl
scas
mov
mov
pop
mov
(bad)
(bad)
sahf
iret
and
test
movs
jb
sbb
mov
dec
outs
pop
jg
xchg
adc
mov
imul
out
add
stc
ja
cmps
adc
sub
or
xlat
jg
out
sbb
fist
das
inc
(bad)
pop
mov
nop
xchg
dec
add
adc
add
lea
add
(bad)
mov
std
mov
lock
data16
mov
sti
pop
pop
in
call
jno
sar
dec
push
shl
jle
cdq
jb
aam
fmul
ins
test
rol
inc
pop
jl
(bad)
aad
fdiv
jmp
hlt
hlt
cmp
fsub
pop
adc
das
loope
imul
sbb
addr16
xor
clc
test
xchg
and
int
in
sub
rcl
cs
pop
lods
nop
(bad)
mov
lods
dec
xchg
bound
or
xor
fist
jb
cmp
mov
cmp
call
cmp
stos
in
adc
clc
jmp
sbb
loope
xor
jmp
dec
stc
push
(bad)
mov
or
lds
xor
add
std
or
imul
daa
and
sahf
das
cdq
xlat
(bad)
outs
jnp
loope
clc
mov
inc
add
sub
out
rol
add
adc
call
test
das
jmp
and
(bad)
jne
mov
jbe
or
mov
sub
mov
repz
or
jno
xlat
fidiv
jl
mov
and
push
cmp
dec
jle
sar
xlat
or
pop
and
add
and
pop
leave
std
test
or
sub
push
out
mov
outs
sub
sub
aad
mov
sub
inc
sub
fild
xchg
scas
loope
push
and
sbb
sub
cdq
out
(bad)
gs
and
mov
sbb
add
adc
repz
inc
pushf
inc
or
sub
xchg
mov
sub
sub
clc
out
fild
call
mov
scas
cmc
ja
or
inc
out
push
(bad)
rcr
popf
xor
jbe
mov
imul
(bad)
dec
jl
call
cdq
mov
fdivr
mov
jnp
mov
retf
add
add
push
inc
xchg
aam
sub
shl
lds
add
mov
cli
sbb
cdq
(bad)
sbb
nop
sbb
jnp
mov
dec
int
imul
pop
imul
idiv
xchg
add
xchg
test
mov
mov
mov
sbb
call
mov
mov
add
push
xchg
bound
add
(bad)
scas
jg
xlat
and
mov
mov
xchg
dec
cmp
push
push
mov
jo
fistp
push
push
jecxz
jae
sbb
loopne
shl
add
call
popa
adc
loope
xor
add
std
fcomp
or
shl
pop
int
dec
and
out
cs
data16
fcomp
dec
sbb
push
repz
cdq
std
xor
retf
in
or
mov
dec
pop
ds
in
xor
arpl
push
popa
mov
out
mov
in
sub
jb
push
jg
dec
mov
scas
dec
xchg
nop
in
lock
bound
sub
sbb
inc
push
stos
dec
stos
xor
add
repz
and
xchg
cmps
retf
cmp
bound
out
out
add
sub
pop
inc
inc
push
inc
(bad)
in
outs
and
add
nop
adc
add
(bad)
aad
push
mov
mov
int3
lahf
mov
sub
adc
jge
cmps
ret
or
sbb
out
movs
cwde
mov
cli
pop
clc
and
pop
call
call
(bad)
xchg
push
pop
ins
jecxz
test
xchg
data16
sub
inc
fld
mov
inc
xor
repnz
das
imul
sbb
dec
push
mov
dec
push
ins
test
sbb
sub
jo
add
push
dec
(bad)
(bad)
out
in
fisttp
jbe
ja
data16
sub
mov
mov
inc
scas
(bad)
(bad)
xchg
lods
adc
xchg
addr16
jp
xchg
jecxz
test
cmp
std
mov
sbb
rcr
je
xchg
outs
sbb
mov
aaa
test
jbe
fwait
mov
std
int3
mov
mov
pop
cmps
les
inc
shr
mov
push
rol
xchg
fbstp
inc
jp
cmps
sbb
ror
dec
xor
and
adc
in
cmps
mov
dec
data16
sbb
(bad)
(bad)
iret
dec
out
dec
dec
xor
sbb
jbe
retf
mov
stc
test
scas
xor
sbb
push
add
aad
lds
sub
jns
sahf
test
fnsave
(bad)
addr16
xchg
repz
in
xchg
fistp
test
mov
mov
mov
xchg
lods
test
addr16
add
sbb
icebp
add
adc
mov
leave
adc
test
icebp
adc
and
ins
ins
aas
inc
movs
push
repnz
ret
or
mov
lock
test
test
dec
pop
outs
imul
inc
push
je
jb
jo
fsubr
arpl
jmp
mov
mov
and
mov
add
inc
sub
(bad)
(bad)
btc
adc
push
inc
dec
mov
int3
pop
sub
mov
daa
iret
lea
loop
xlat
outs
and
cmps
and
cmps
pop
jge
ds
gs
lds
xlat
dec
or
jbe
pop
push
data16
scas
outs
push
push
push
fnstenv
push
inc
outs
call
pusha
sub
ror
das
mov
div
mov
shr
test
out
rcr
push
(bad)
(bad)
jmp
enter
call
addr16
test
push
fs
sbb
ins
dec
sbb
add
fbstp
cmp
ja
call
add
das
js
push
and
rsqrtps
lahf
push
or
stc
out
xor
add
das
sbb
rcr
fucomi
movs
push
or
mov
add
mov
aas
cmp
push
pop
sbb
test
in
(bad)
jns
fadd
or
pop
mov
xor
dec
iret
cmp
retf
outs
test
or
sbb
pop
mov
call
gs
or
stc
and
call
xor
xor
retf
lea
jmp
sbb
push
fmul
or
sahf
mov
scas
je
das
pop
outs
out
les
loopne
adc
les
and
cmp
addr16
je
mov
div
(bad)
jmp
mov
mov
es
scas
sub
xor
retf
mov
mov
jge
xchg
sbb
repnz
js
jmp
push
pop
xor
xchg
jp
push
cmp
fimul
js
xchg
movs
adc
mov
mov
out
push
rcr
ret
cmc
dec
push
std
add
push
out
or
imul
or
or
fwait
movs
mov
ja
sbb
js
ret
dec
mov
xchg
sub
and
mov
sbb
repz
xor
enter
in
sbb
(bad)
loop
xchg
dec
sbb
sbb
ret
mov
jno
xchg
inc
imul
dec
inc
mov
ins
adc
repnz
jns
cmp
adc
sub
loopne
adc
or
in
or
idiv
xchg
mov
sbb
mov
mov
cmps
lods
shr
xor
pushf
dec
jmp
stos
scas
repz
cwde
mov
in
pop
out
sbb
mov
and
dec
lds
fiadd
xor
not
lds
dec
sahf
mov
pop
jae
aam
jne
xlat
iret
adc
or
xchg
xlat
push
mov
in
jp
xor
add
mov
add
ret
cmc
jg
pop
ins
jp
sbb
jp
add
std
sbb
sbb
mov
xchg
mov
jecxz
aas
call
lock
or
or
or
pop
jl
loop
daa
cmp
adc
cmp
jo
(bad)
adc
jle
mov
add
addr16
outs
dec
lods
dec
adc
cmp
sbb
les
out
or
gs
(bad)
clc
je
xchg
add
lahf
xchg
movs
stc
push
data16
lods
clc
jns
int3
div
push
jne
fild
clc
mov
jns
dec
xor
pop
stos
add
cld
stos
or
ret
sti
retf
cmp
sahf
out
and
cmp
imul
push
cmp
jle
xchg
mov
out
mov
xor
xor
mov
sbb
call
daa
lods
jecxz
pop
push
push
adc
push
(bad)
fild
xlat
xor
int3
fucomi
cmp
movs
push
pop
call
imul
and
or
xchg
rcl
sub
scas
dec
nop
or
div
cwde
pop
adc
je
add
sbb
pop
ret
add
dec
and
or
sahf
or
mov
mov
sub
or
jae
das
push
cdq
xchg
cmp
repz
test
push
and
dec
pop
pop
add
adc
mov
cmps
test
and
add
arpl
add
je
fistp
and
xor
push
adc
imul
arpl
ja
jmp
cmps
cmp
pop
push
loop
fs
gs
push
sbb
push
jmp
inc
jne
cmps
mov
xchg
xor
add
test
xor
test
xlat
add
xchg
xchg
push
lods
cmp
fisubr
fcmovu
shr
shl
cs
(bad)
jno
pop
mov
push
mov
ss
adc
scas
stos
mov
mov
sub
cmp
mov
mov
add
movs
imul
js
mov
sub
sbb
je
cmp
sbb
test
outs
cli
mov
mov
jecxz
into
call
fcom
or
ficomp
mov
cwde
test
pop
mov
and
popa
add
cs
pop
mov
dec
adc
shr
mov
popf
nop
retf
mul
movs
jb
fidiv
addr16
xor
xchg
ja
js
es
cmp
imul
xchg
inc
fistp
and
push
xor
(bad)
push
sahf
and
into
or
push
lods
data16
inc
jno
jbe
inc
fld
push
test
int3
iret
enter
in
enter
cmp
test
add
icebp
jle
push
jge
dec
push
add
lds
cwde
cs
sub
adc
or
jns
inc
xor
push
das
inc
pop
scas
sbb
push
add
sub
xchg
(bad)
cmp
in
adc
fwait
jg
push
cmp
sub
outs
(bad)
xor
cmps
out
push
pop
out
mov
or
cmp
push
mov
add
pop
pushf
dec
stos
jecxz
outs
fld
sbb
cmc
repnz
dec
ret
cmp
mov
dec
sub
(bad)
mov
pop
inc
mov
adc
and
add
or
call
in
cmps
outs
test
and
mov
mov
dec
repz
test
xor
and
retf
aam
int3
adc
repnz
mov
xor
pushf
add
es
iret
xchg
lea
call
lods
sub
rol
adc
xchg
sub
or
inc
stos
enter
leave
cmp
adc
movs
in
sbb
aaa
add
xor
pop
mov
les
and
add
loop
daa
dec
sbb
adc
push
in
jmp
mov
test
xor
pop
rcl
sub
fidiv
ss
pop
les
xchg
repz
mov
in
adc
mov
sub
sbb
and
add
aaa
cld
fimul
jecxz
into
daa
mov
jo
xchg
xor
pop
push
push
xor
in
daa
push
int
cmp
out
(bad)
sub
gs
xor
test
imul
mov
push
jmp
fdivr
and
push
clc
xor
lock
pusha
or
cmp
push
xor
outs
cmp
and
lock
xchg
xor
ins
fisubr
jnp
xchg
xchg
cmps
jb
imul
popa
imul
pop
or
(bad)
sub
cdq
jp
scas
or
icebp
mov
test
sbb
dec
push
daa
fsub
movs
mov
mov
cld
(bad)
outs
pop
pop
or
inc
mov
pop
add
mov
jg
push
loope
cmp
or
cdq
xor
xchg
into
sti
mov
fisubr
ss
sbb
iret
sbb
test
push
or
mov
mov
hlt
fwait
pop
push
dec
retf
xchg
test
aam
in
push
sbb
(bad)
sbb
sti
and
stc
hlt
(bad)
repnz
push
dec
popf
xchg
xor
add
mov
nop
std
imul
xor
out
cmp
and
adc
cs
add
cmp
or
xchg
xor
pop
cwde
sbb
mov
out
aaa
inc
sub
and
out
xor
dec
js
cmps
pop
cmpxchg
xchg
and
mov
and
jge
inc
(bad)
stc
hlt
pop
addr16
outs
push
cmp
xchg
dec
push
pop
outs
pop
jl
fstp
inc
dec
inc
dec
xchg
stc
lods
adc
add
mov
daa
push
push
fbld
dec
adc
shr
loopne
call
(bad)
mov
pushf
lds
mov
mov
mov
test
(bad)
sbb
or
stc
pop
retf
add
cwde
(bad)
push
push
inc
loop
repz
push
mov
mov
push
add
ret
cmc
(bad)
jns
mov
ficom
jb
call
jecxz
pop
and
in
push
and
and
into
or
and
cmp
(bad)
loope
(bad)
daa
adc
mov
enter
xchg
push
mov
mov
adc
jecxz
mov
add
cwde
stc
jnp
push
fistp
mov
cmp
js
mov
aad
data16
popf
pop
lock
mov
jne
sub
out
and
sub
adc
in
jl
out
jne
push
sub
es
push
xor
mov
lock
movs
not
push
jmp
mov
dec
shr
cmp
fmul
or
mov
dec
rol
add
xor
cli
pop
out
jmp
cmp
dec
mov
jnp
out
outs
(bad)
lahf
je
pop
mov
xchg
jbe
jge
mov
loopne
rcl
add
lods
sub
scas
or
add
data16
xor
fld
fs
fcmovbe
fiadd
dec
out
out
clc
or
into
jle
add
in
inc
hlt
mov
(bad)
push
and
(bad)
stos
or
and
dec
sbb
adc
das
inc
adc
adc
pop
xchg
add
stc
dec
and
cmp
les
fistp
fwait
lods
sbb
pop
xor
adc
mov
int
jb
pop
mov
jne
in
clc
xchg
fcomp
aaa
(bad)
fidiv
into
repz
rcl
push
lds
jae
mov
ds
aaa
daa
jnp
ins
out
in
jmp
jne
out
ficom
push
inc
icebp
mov
into
cmp
push
mov
and
enter
les
dec
inc
cmc
lods
cmc
pop
imul
jmp
lods
imul
push
call
push
xor
add
sub
or
add
inc
sbb
test
scas
push
fstp
xchg
mov
test
movs
outs
sub
hlt
jmp
ja
out
pushf
jecxz
iret
retf
cmp
shl
push
mov
out
fst
int3
cmp
test
jne
sbb
in
scas
stos
sub
pop
push
into
repnz
dec
sub
jge
xchg
test
pop
fstp
mov
in
xchg
mul
loop
fiadd
data16
xchg
inc
lahf
pop
(bad)
xlat
inc
xor
jge
push
sub
mov
or
mov
xor
ins
mov
cmp
imul
xchg
or
sub
mov
(bad)
sub
(bad)
add
cdq
or
out
in
jo
xchg
pop
add
cld
inc
pop
cmp
stc
ret
imul
adc
scas
pop
jne
inc
leave
sbb
jmp
add
mov
xor
lock
adc
pusha
sub
cmp
mov
and
aaa
stos
push
mov
inc
mov
shl
into
xchg
jb
ret
jb
punpcklwd
xchg
jle
adc
outs
and
cmc
lahf
cmp
call
enter
pushf
dec
and
fstp
pop
jecxz
push
(bad)
aad
push
inc
push
pminsw
call
jae
dec
dec
ins
test
ds
and
call
scas
push
ret
pusha
loopne
(bad)
js
outs
in
push
mov
xchg
cs
xlat
icebp
cmps
jmp
(bad)
in
ins
sbb
pop
push
add
outs
inc
pop
(bad)
and
jle
or
xchg
scas
mov
lods
icebp
out
and
rcr
lods
(bad)
mov
mov
push
call
pusha
fst
jg
pop
call
xor
mov
xchg
jns
mov
outs
in
sar
push
fwait
into
adc
cmp
add
xchg
push
add
(bad)
fs
loopne
(bad)
add
sub
(bad)
scas
sbb
xchg
ret
push
xor
(bad)
adc
movs
mov
repnz
xor
pop
imul
mov
inc
sbb
ja
jo
xlat
scas
data16
daa
lahf
scas
dec
gs
sbb
out
xor
mov
das
and
in
nop
call
xor
adc
pop
or
std
mov
xor
pop
xlat
jmp
test
lahf
inc
sub
ins
out
imul
les
and
aas
xchg
pop
scas
int
push
inc
clc
push
xchg
sub
nop
sub
sbb
fwait
dec
cmp
adc
mov
cmp
outs
repnz
and
adc
xor
pop
test
inc
adc
out
adc
shl
sub
and
sub
and
shl
sysret
test
movs
es
mov
sub
sbb
fld
pop
cmp
(bad)
iret
jge
movs
mov
(bad)
retf
push
pop
repnz
jge
test
dec
mov
add
sub
out
mov
add
fwait
pushf
out
out
dec
pusha
jne
leave
adc
xchg
(bad)
(bad)
jle
cli
in
push
stos
pop
das
mov
test
imul
es
mov
mov
clc
pop
test
adc
pop
xchg
push
pop
(bad)
cmp
jmp
mov
addr16
mov
pop
sahf
mov
aas
adc
and
push
repz
ret
xchg
and
das
shr
js
xchg
mov
imul
mov
popa
cld
jmp
lods
test
iret
fdiv
mov
xor
call
mov
mov
xor
xchg
mov
dec
inc
sub
shl
inc
cwde
icebp
aam
jecxz
fs
mov
mov
mov
in
in
mov
int
ins
pop
lds
stos
jns
mov
arpl
lahf
daa
pop
out
clc
aad
sub
loop
into
repnz
ds
cmp
inc
(bad)
lahf
inc
ficom
je
ja
xchg
fldcw
jnp
cmp
push
xor
pop
push
jb
in
test
popa
cmps
mov
jmp
retf
xchg
or
outs
das
or
(bad)
outs
jmp
fsubr
adc
lods
call
mov
cmp
jg
add
xchg
test
(bad)
jmp
shr
cli
test
stos
popf
test
cmps
aam
mov
sub
out
jo
stc
imul
jae
pop
movs
sub
dec
pop
mov
das
shr
(bad)
(bad)
pusha
jp
mov
inc
pop
jnp
std
or
xchg
and
jg
fadd
add
or
mov
push
inc
xor
stos
inc
adc
call
cmp
lea
mov
pop
imul
cmps
or
mov
xor
dec
rol
enter
jne
clc
jg
fwait
push
mov
and
and
dec
mov
aam
lods
xchg
mov
sbb
cmps
popa
stos
neg
inc
shl
add
add
and
mov
out
add
loope
not
cmp
rcr
and
xor
int
sbb
out
pop
push
cmc
mov
movs
mov
xchg
sub
sahf
dec
dec
mov
inc
(bad)
and
xor
cmps
stos
pop
mov
retf
leave
inc
clc
dec
dec
cdq
and
aaa
fwait
pop
mov
inc
mov
lods
je
dec
out
stc
sub
mov
inc
out
and
dec
fld
or
outs
cmc
fmul
mov
movs
xchg
mov
inc
or
pop
popa
in
and
jb
(bad)
mov
aaa
cmp
fsubp
or
jbe
jno
aaa
xchg
aaa
sar
fimul
sbb
fisttp
xor
dec
shl
imul
adc
int
inc
rol
jg
lods
mov
(bad)
adc
jle
pushw
jmp
inc
mov
push
xor
cmps
ja
(bad)
xchg
les
ror
or
scas
movs
and
ss
mov
pmaxub
mov
mov
addr16
or
mov
sub
sbb
add
and
or
or
in
xchg
sbb
std
test
shl
xchg
mov
dec
push
daa
mov
fdiv
addr16
int
ja
pusha
stos
xchg
xchg
test
jg
and
es
sub
sub
cmc
push
mov
cdq
cli
arpl
mov
repnz
in
pop
stc
(bad)
sub
mov
ficomp
adc
je
mov
data16
cmp
loope
out
lds
aad
pop
cmp
xchg
xchg
jne
pop
xchg
push
jp
aad
add
dec
hlt
(bad)
pop
sahf
ins
daa
repnz
in
adc
ss
mov
mov
fsubr
fsubr
in
out
adc
add
adc
in
dec
fucomi
xor
dec
pop
fwait
adc
mov
inc
sbb
aas
cmps
mov
mov
aad
pop
adc
call
inc
mov
cmp
mov
push
icebp
mov
mov
xchg
shr
pop
pop
test
scas
cmps
cdq
loope
jo
push
sahf
mov
aad
call
mov
loop
jne
mov
pop
pop
(bad)
pop
dec
shr
movs
and
dec
mov
or
fs
imul
jp
fs
or
mov
cmc
imul
mov
in
inc
mov
cld
dec
or
pop
leave
gs
jbe
jmp
sub
rcr
dec
(bad)
in
cmps
sub
call
cmp
pop
dec
call
aam
clc
or
cmps
mov
inc
(bad)
xchg
outs
add
in
jg
mov
sbb
pop
ds
xchg
jg
dec
dec
pop
test
clc
popa
sub
je
les
xor
sbb
in
sub
sub
sbb
ror
gs
bound
and
(bad)
bswap
ins
add
das
in
jno
and
or
xor
sbb
movs
scas
adc
lods
and
test
ds
push
fs
ja
jle
fcos
adc
into
test
cld
call
in
fdiv
sbb
nop
cli
aaa
sbb
jge
(bad)
sar
out
push
rcr
popf
and
pop
inc
sub
xchg
cmp
sar
mov
add
scas
into
adc
fwait
int3
or
enter
popa
mov
mov
xchg
xor
cmp
sbb
cmc
pop
xchg
jg
add
fs
cli
std
clc
(bad)
push
or
xchg
xlat
pop
mov
xchg
push
data16
sbb
or
fldcw
aaa
movs
cmp
(bad)
int3
imul
retf
mov
fsub
movs
jg
mov
mov
inc
loopne
retf
pushf
fwait
daa
or
xor
push
pop
ror
(bad)
sbb
adc
mov
cmp
outs
and
cld
cld
rol
lods
pop
push
cmp
in
pop
xor
lods
loop
sub
adc
mov
fdiv
icebp
pusha
jno
mov
shl
punpcklbw
mov
mov
fs
div
xchg
sar
(bad)
ror
ds
daa
popa
inc
call
jbe
inc
pavgb
push
dec
push
icebp
popf
inc
ja
retf
in
stos
sti
xchg
mov
cld
fcom
or
retf
mov
mov
aas
jecxz
ror
sti
shl
scas
or
mov
pop
and
gs
mov
adc
mov
fs
punpcklbw
out
xchg
mov
jmp
clc
repz
push
xor
or
push
idiv
pop
add
xchg
jge
outs
xor
popa
pushf
and
enter
ds
lea
push
or
xchg
adc
scas
nop
int3
dec
repnz
loopne
mov
jnp
sbb
dec
dec
cmp
sbb
mov
xor
ja
push
pusha
mov
inc
cmp
(bad)
div
push
push
cmps
xchg
cld
(bad)
pop
fidivr
cmp
push
ror
or
or
push
pop
mov
sbb
call
sub
in
sbb
push
cmp
jecxz
fbld
adc
(bad)
mov
inc
or
outs
fst
sbb
cmp
outs
add
int3
add
dec
fnstenv
push
jbe
xchg
and
test
jns
or
adc
or
pop
jae
aas
arpl
retf
sbb
stos
dec
scas
cmp
xchg
mov
cmp
xchg
mov
dec
mov
pop
xchg
data16
pushf
pop
dec
jecxz
bswap
(bad)
daa
(bad)
into
xchg
popf
mov
jae
push
mov
adc
pop
dec
fs
or
xor
pushf
and
aaa
dec
leave
cs
stos
shl
bound
iret
mov
rcl
mov
fild
mov
popa
push
push
add
mov
call
pop
xchg
mov
inc
int3
mov
mov
sbb
pop
std
iret
push
aas
and
mov
mov
sbb
in
stc
mov
adc
sub
mov
stos
aaa
(bad)
(bad)
jmp
or
push
les
adc
inc
repz
cmp
or
loope
mov
adc
jne
stos
xor
ret
sbb
in
sbb
scas
retf
jg
in
mov
jge
btc
push
jmp
jle
test
sahf
pop
loopne
inc
pop
push
cmps
js
mov
popf
and
xor
aad
xor
in
inc
loopne
int3
stos
or
push
js
cmps
mov
sub
xchg
leave
fdivr
mov
lock
shr
loop
mov
dec
loopne
lods
sub
and
fisubr
movd
ins
sbb
std
repnz
ret
jbe
pop
cmp
out
jp
jmp
pushf
and
cmps
xor
xchg
sub
out
fwait
addr16
mov
mov
xor
or
daa
jnp
pop
dec
aam
cmp
adc
add
jg
jge
adc
and
addr16
and
fsub
lods
xchg
mov
jmp
adc
xor
xchg
sub
dec
cmp
stc
jl
mov
mov
push
in
sbb
mov
jle
sbb
xor
xor
dec
mov
daa
ret
push
scas
xchg
stos
push
in
xor
add
es
ins
sbb
mov
adc
movs
popf
xchg
xchg
inc
int3
and
mov
in
mov
pushf
sahf
je
mov
in
adc
sub
push
into
les
mov
pop
js
mov
nop
add
int
jp
sub
iret
shl
test
cmps
jecxz
mov
dec
mov
mov
jmp
cmp
xor
mov
arpl
jae
dec
mov
ja
add
ret
xor
and
mov
call
cmps
xor
ins
inc
es
out
add
or
xchg
arpl
mov
inc
shl
in
out
scas
adc
loop
icebp
xchg
test
cmp
xchg
mov
jecxz
shl
sbb
jns
xor
xchg
int
push
sbb
lea
call
fiadd
cld
rcl
pusha
mov
mov
push
xor
in
jp
int
push
jecxz
int
jmp
push
mov
repz
pop
call
inc
pusha
cli
aad
xchg
xor
ror
in
dec
jbe
jno
addr16
in
icebp
adc
ss
jns
ss
icebp
inc
(bad)
pop
jo
xchg
or
mov
fsubr
mov
xchg
fistp
pusha
out
cmc
push
lods
adc
leave
pop
sub
nop
mov
add
ja
mov
les
retf
enter
pop
sbb
and
retf
fistp
out
and
or
test
xor
ja
inc
lds
aas
cs
cmp
ja
inc
mov
inc
addr16
popa
dec
jl
imul
mov
sbb
mov
mov
imul
lahf
cmps
fnstsw
sub
int3
push
fwait
mov
mov
sub
lods
inc
pop
cld
and
push
cmps
push
inc
mov
mov
cdq
dec
inc
dec
sub
sub
adc
ins
aad
cmp
in
push
gs
adc
in
push
push
ror
adc
stos
imul
(bad)
shr
rcr
lds
fwait
aad
xchg
mov
repz
and
ja
stos
rol
xchg
sbb
or
pop
das
sbb
fidivr
sub
mov
call
adc
rol
mov
aaa
pop
jge
(bad)
jg
ror
hlt
jae
jbe
out
in
add
aad
daa
rcl
mov
aam
inc
jae
inc
packuswb
mov
sar
adc
add
jg
sbb
dec
jmp
arpl
out
mov
dec
je
(bad)
adc
inc
or
xchg
(bad)
sub
repz
jg
mov
sub
sub
paddsw
or
je
idiv
jbe
ja
sbb
jmp
rcl
xchg
dec
push
push
int3
fcmovnbe
retf
fwait
jno
sbb
clc
inc
mov
inc
loopne
lds
scas
pop
jno
call
shl
ficomp
cmp
jl
cs
data16
stos
int
cmps
jae
or
imul
call
inc
sbb
int
mov
stos
fcmovbe
or
icebp
cli
jge
ds
dec
add
mov
push
addr16
add
loope
or
add
out
xchg
aam
into
and
(bad)
dec
push
dec
add
xor
int3
add
fimul
in
in
dec
push
scas
movs
sub
cmp
ss
jl
shr
sbb
mov
xchg
push
daa
(bad)
lahf
xchg
jg
push
iret
ins
dec
setno
ins
stc
into
movs
dec
inc
lods
cmc
add
cli
loope
(bad)
retf
popa
lods
push
dec
jl
pop
stos
push
add
lea
xchg
mov
sub
pushf
pop
jbe
xor
gs
(bad)
(bad)
js
in
cmp
and
cdq
push
mov
test
mov
aas
fimul
outs
push
repz
pop
(bad)
or
ds
mov
hlt
ins
jle
jp
arpl
add
and
dec
aad
(bad)
push
push
popa
pop
cmp
jno
push
xchg
jns
or
jmp
xor
xchg
sbb
pmulhuw
rol
add
mov
pop
repnz
in
ins
sub
and
outs
test
add
xchg
out
in
je
inc
fwait
enter
xor
retf
cmp
mov
xor
aam
jo
sbb
in
ds
push
shl
dec
xor
fidivr
pop
push
fwait
inc
je
sub
add
xor
in
stc
pop
xor
inc
inc
and
stos
mov
jl
test
push
dec
pop
ss
outs
rcr
add
add
cs
iret
adc
xor
jp
test
push
xchg
in
sub
and
or
(bad)
aas
and
push
ret
pop
or
test
clc
jns
pop
or
dec
enter
cs
es
push
in
xchg
jmp
cmps
pop
pop
jbe
test
or
jmp
in
das
sub
cwde
mov
pop
in
mov
mov
jmp
and
xor
xchg
adc
cmp
pop
ins
adc
(bad)
and
mov
mov
sbb
mov
mov
mov
push
fidivr
ss
clc
add
xor
imul
mov
lods
xor
out
out
push
fcmove
jb
outs
sub
add
fcmovnu
pop
mov
dec
sbb
jg
arpl
xchg
jb
call
aaa
sahf
mov
hlt
leave
dec
popf
dec
das
adc
repnz
(bad)
ss
cmp
sub
push
das
and
jp
in
push
dec
and
rcr
dec
xchg
jns
adc
push
rcr
mov
xchg
sahf
mov
clc
cld
sub
cmp
add
ins
xor
mov
dec
out
aam
ins
xchg
inc
sub
sti
xlat
je
sahf
and
repz
pop
fldcw
add
gs
inc
mov
push
lods
retf
xor
adc
popa
jnp
ds
and
sahf
jg
aam
popa
xchg
popf
out
daa
scas
push
push
neg
sub
mov
mov
jno
xor
out
cdq
(bad)
es
mov
jp
ins
jge
push
jnp
mov
sub
je
rcr
repz
dec
xor
mov
es
je
push
mov
pop
repnz
adc
cli
mov
arpl
ins
push
in
sub
dec
jp
sub
lahf
mov
loop
repnz
dec
hlt
add
fs
js
sub
inc
jmp
sbb
(bad)
shl
mov
loopne
nop
jb
mov
ja
in
push
sub
cmp
sub
mov
cmp
call
fsub
(bad)
out
test
mov
popf
dec
test
mov
cmp
or
js
cmp
inc
xor
mov
pop
aaa
test
fisttp
fcmovnbe
sbb
leave
jmp
(bad)
inc
test
bound
lods
cmc
out
loope
cwde
jmp
cmps
push
jo
cmp
pop
pop
jge
faddp
sahf
xchg
or
out
adc
repnz
cli
fwait
mov
cld
lock
pop
mov
imul
mov
iret
outs
in
fldcw
xchg
sahf
retf
rcr
sahf
sbb
ror
mov
enter
(bad)
movs
out
je
fsub
icebp
or
(bad)
adc
pusha
sub
outs
shl
je
in
shr
shr
fild
jl
cld
mov
xor
cwde
loop
dec
sti
dec
sbb
jge
rcr
add
pop
in
loop
mov
push
gs
xchg
adc
or
mov
(bad)
inc
pop
inc
mov
and
fild
sar
rcl
sub
lahf
mov
gs
cdq
xchg
movs
add
inc
sbb
clc
xchg
jae
and
call
test
retf
mov
sbb
mov
adc
jp
jge
in
ins
dec
stos
fldenv
cmp
add
xchg
push
xchg
(bad)
fidivr
fstp
or
hlt
or
or
and
test
repnz
shr
fcomp
mov
cmp
xor
mov
out
inc
sbb
mov
adc
aas
sub
jg
dec
out
aad
sbb
sbb
or
(bad)
jbe
pusha
add
push
push
rcl
adc
jle
daa
sub
idiv
xchg
fistp
push
in
repnz
inc
ins
mov
add
bound
mov
bound
call
bound
adc
(bad)
ficom
loop
ins
bound
push
pop
fcmovnb
add
movs
add
push
sub
mov
pop
add
pop
addr16
dec
dec
jae
sbb
cwde
cli
jno
inc
in
pop
test
cs
(bad)
fs
je
cmp
aaa
mov
xchg
mov
xor
dec
push
ds
std
jecxz
scas
cmc
mov
sub
stc
repz
inc
lds
adc
fsub
in
adc
mov
and
cmp
int3
aad
jmp
xor
jl
jae
sbb
sbb
out
mov
jp
out
xor
xchg
sub
or
shl
pusha
dec
adc
mov
out
fwait
mov
cwde
stc
adc
repnz
pop
xchg
sahf
push
fdivr
retf
xor
fdivp
into
xor
pop
call
or
rcr
add
rcr
aam
ficom
(bad)
adc
les
ins
mov
into
retf
call
push
fadd
mov
mov
push
punpckldq
mov
push
imul
mov
in
and
sbb
hlt
pop
xor
sbb
lods
(bad)
push
xchg
imul
sbb
mov
jno
inc
pop
mov
pop
xlat
stos
outs
mov
or
shl
pop
jecxz
into
dec
call
inc
sar
mov
push
cmc
cwde
jo
mov
cmp
dec
push
mov
setne
push
cli
xchg
das
fs
mov
push
pop
dec
pusha
mov
ins
mov
xchg
xor
jns
in
mov
dec
dec
frstor
sti
(bad)
sbb
fbld
and
stos
adc
inc
fsub
mov
cmc
sub
rol
or
mov
aaa
out
ds
inc
sbb
adc
loope
adc
push
mov
int3
add
mov
xor
movs
int3
push
aam
cs
js
stos
mov
std
movs
sbb
fcom
pop
add
fisttp
mov
hlt
sub
cmps
out
jbe
aaa
je
lock
stos
dec
mov
xor
sbb
das
es
test
mov
jmp
add
gs
lods
adc
ffree
mov
in
cld
jmpw
add
call
pushf
xlat
sub
pop
inc
mov
sbb
adc
mov
inc
jle
mov
xor
int3
lea
je
mov
xchg
or
clc
cdq
in
jge
adc
push
sub
aas
mov
lahf
jb
retf
and
cmc
push
jae
pop
repnz
loopne
jg
mov
adc
addr16
outs
je
retf
push
outs
xor
cmp
mov
sub
cmp
push
shl
jl
mov
mov
fadd
out
jbe
repnz
inc
ror
sub
and
ss
nop
(bad)
aad
dec
sbb
popa
fiadd
shl
aad
cdq
xor
rcr
nop
jb
(bad)
or
add
adc
push
xchg
adc
pop
jnp
cmps
sahf
loopne
dec
mov
stc
aam
in
jb
push
cmp
lods
jns
inc
sar
push
leave
pinsrw
dec
test
stos
fbld
inc
lods
and
pop
jne
(bad)
fcomp
jl
mov
or
nop
sbb
js
out
inc
out
jle
dec
shl
dec
adc
inc
div
rcl
sub
mov
xchg
(bad)
fwait
add
je
in
sbb
mov
stos
jnp
cdq
jns
ja
push
outs
push
stos
aad
xchg
aam
jno
xchg
jne
jp
outs
mov
jo
dec
mov
dec
xchg
push
jae
bound
fstp
cmp
push
pop
jno
jnp
out
lds
int3
in
sbb
sahf
sub
cli
cmp
fld
ret
dec
add
les
fist
xchg
out
clts
sahf
xchg
add
adc
add
ds
imul
xor
pop
(bad)
and
in
sub
inc
mul
mov
pop
inc
inc
mov
mov
pop
mov
clc
mov
sar
jno
mov
jg
jne
fst
inc
and
mov
push
clc
sub
jp
fdivr
and
in
jnp
push
push
cdq
(bad)
mov
cwde
dec
mov
test
mov
inc
mov
xor
and
jg
add
popf
ret
sbb
jl
or
mov
xchg
xor
or
pop
clc
les
retf
sub
jo
in
or
xor
push
shl
(bad)
or
or
pop
fisubr
cmps
jns
push
xlat
out
xlat
fldln2
fnstsw
push
(bad)
sbb
cs
inc
clc
mov
and
fcomp
sbb
out
stos
jge
and
xchg
push
xchg
(bad)
(bad)
sub
in
add
xlat
mov
ficomp
xchg
idiv
adc
xor
cmp
adc
cs
sbb
les
pop
jbe
lea
shr
(bad)
push
aaa
gs
mov
out
pushf
sahf
adc
aam
or
add
pop
add
cmp
sbb
fmul
or
dec
mov
mov
imul
push
fmul
popf
inc
ss
pop
xlat
jecxz
cli
fwait
pop
(bad)
(bad)
(bad)
icebp
add
dec
add
(bad)
shl
xchg
repz
or
adc
int
pusha
inc
inc
mov
mov
or
jbe
mov
icebp
inc
or
sub
inc
clc
fsubrp
repnz
push
lock
adc
repnz
cs
adc
xchg
jp
cdq
das
mov
lahf
jp
rcl
adc
addr16
mov
or
aam
xlat
sub
stos
jmp
cmp
sub
jb
call
adc
int
or
call
mov
sub
xchg
adc
(bad)
mov
sub
das
jmp
ja
lds
add
mov
out
out
pop
dec
jo
or
hlt
jae
cmp
jno
stc
cmp
sbb
sahf
mov
and
ja
dec
imul
pusha
mov
mov
adc
stos
pop
paddd
movs
dec
jnp
pushw
adc
jae
jl
xchg
cmp
cli
cmp
cs
test
dec
(bad)
xchg
push
jb
ds
xchg
xor
sbb
mov
out
into
xor
push
jecxz
sbb
aam
mov
mov
sbb
cmp
fcomp
mov
xchg
xchg
xchg
scas
ror
jbe
push
mov
or
aam
push
rol
pop
sbb
neg
(bad)
bnd
and
mov
ror
aad
mov
mov
retf
jno
inc
sub
add
cmp
sahf
les
mov
repnz
ja
jns
push
sub
jmp
jae
ror
es
aad
jge
femms
leave
or
pop
int
cmp
inc
or
outs
mov
sub
push
mov
push
inc
test
or
xor
test
(bad)
cmp
xor
cmp
stc
lock
inc
gs
(bad)
vpsubq
jae
out
inc
js
dec
push
mov
add
les
sbb
dec
jno
and
in
std
mov
mov
xchg
(bad)
cmp
in
fld
xor
out
pop
ins
mov
push
ss
cmp
aaa
out
pop
dec
add
jg
jo
adc
aad
mov
sub
add
xchg
cmps
gs
ins
xor
cmp
jbe
mov
popf
aaa
int
push
dec
push
xchg
mov
adc
jp
nop
sub
and
fcom
cdq
cmp
pop
push
fidivr
mov
rol
mov
retf
aad
adc
add
addr16
adc
scas
jno
(bad)
or
mov
xor
fidivr
pop
adc
adc
xchg
je
ss
dec
in
jp
push
mov
sahf
sbb
in
stos
aas
daa
(bad)
std
scas
ja
cmp
cmps
or
clc
retf
push
fwait
jecxz
sub
or
icebp
ss
dec
push
lea
imul
xor
pop
es
sub
test
shr
inc
not
or
ja
cmp
xchg
push
inc
dec
and
aas
sbb
adc
cli
sbb
cmp
(bad)
jmp
add
fcom
int
jns
jmp
arpl
xchg
fsubr
inc
add
jns
or
popa
jae
xchg
xchg
cmp
cmp
mov
push
(bad)
mov
movs
sub
push
cmc
xor
sti
cmp
stos
clc
test
dec
jmp
repz
in
or
rcl
scas
aam
jno
sub
outs
fwait
lods
sti
mov
lea
push
div
dec
pop
jnp
test
rcl
push
pop
adc
and
stos
movs
(bad)
or
fsub
out
inc
add
test
pop
out
bound
(bad)
mov
stos
into
jnp
rol
lds
xor
imul
lock
jl
mov
test
xchg
cld
xchg
push
in
push
push
adc
and
(bad)
idiv
xor
das
xchg
mov
ret
pop
mov
test
xchg
pop
test
cmp
add
fwait
push
jl
(bad)
fld
sub
inc
mov
lds
(bad)
and
loop
in
jae
push
inc
into
fwait
loope
cmp
and
pop
callw
test
fwait
das
mov
push
into
in
sbb
and
mov
xchg
je
mov
jmp
mov
ret
dec
aaa
cmps
arpl
add
push
mov
pop
je
int
xor
add
mov
scas
mov
shr
cmp
stos
retf
xor
xchg
add
sbb
mov
or
mov
(bad)
mul
inc
cdq
push
test
jle
sbb
cdq
mov
mov
dec
cmps
ins
repz
or
addr16
icebp
xchg
cmp
jns
not
and
jno
cmp
pop
enter
out
lock
out
jp
mov
or
inc
push
mov
add
fimul
pop
je
jne
clc
xlat
push
ss
pop
and
scas
sub
xor
mov
add
fdivrp
and
xchg
mov
jmp
stos
pop
lahf
mov
popf
dec
lods
jp
and
ss
or
mov
xor
(bad)
lods
xor
xor
movs
sbb
int
push
mov
(bad)
mov
cmp
test
push
lds
cmp
sub
jae
sub
mov
and
cwde
pop
mov
out
sbb
fnstcw
cmp
inc
movs
pop
rol
scas
sbb
call
das
loope
xchg
je
std
jmp
sub
outs
xchg
nop
aad
stos
js
jae
or
add
je
fstp
mov
jne
dec
cdq
ret
sbb
leave
jl
retf
dec
into
and
xchg
stc
aas
push
ret
cmps
cli
arpl
cs
push
movs
repz
jge
dec
std
aaa
adc
fidiv
pop
mov
pop
iret
cmps
cmp
or
jp
scas
push
pop
sbb
(bad)
je
push
sbb
xchg
lahf
cmp
call
stc
and
sbb
and
stos
mov
cmp
mov
jbe
sbb
push
sbb
ins
movs
ret
mov
push
mov
jb
test
imul
inc
xor
push
add
cdq
mov
xor
xchg
jne
mov
ret
or
add
pushf
mov
jnp
sbb
shr
aad
sub
mov
push
cmp
pop
mul
adc
fistp
inc
enter
push
fwait
inc
jp
jl
addr16
jg
push
scas
push
das
pop
ja
leave
cmp
jnp
js
cmp
lahf
pushf
pop
jg
and
mov
ret
inc
imul
pop
push
sbb
fisubr
int3
das
jae
jle
mov
pop
xchg
adc
jns
jmp
inc
push
and
pop
pop
sbb
xor
imul
loope
dec
xchg
mov
hlt
jnp
in
cmp
or
adc
push
mov
outs
xchg
in
inc
test
mov
jl
scas
sbb
addr16
mov
fxch
imul
inc
xchg
cmps
icebp
ret
pop
repz
fmul
imul
add
xor
rol
mov
cmp
mov
push
test
leave
cdq
daa
fnop
inc
jge
jbe
sub
xlat
sbb
std
fyl2xp1
dec
or
push
fidivr
mov
mov
jne
pop
mov
cdq
movs
repz
jno
jae
jns
mov
add
in
sub
pop
ins
inc
leave
or
daa
int
push
(bad)
jb
mov
sti
pop
inc
mov
pushf
pop
scas
ficom
add
ss
mov
out
or
out
push
xchg
mov
xchg
dec
enter
jmp
cmps
cdq
out
je
nop
jp
xor
jo
iret
and
inc
jae
lea
mov
fwait
scas
pop
or
outs
jge
adc
loop
test
mov
xor
adc
dec
sbb
pop
xchg
out
or
das
repz
outs
(bad)
mov
dec
mov
std
(bad)
cmp
mov
cs
js
pop
mov
push
iret
(bad)
push
repnz
dec
or
data16
ficom
jnp
shr
mov
mov
jo
out
mov
cmp
cdq
jle
lods
arpl
repz
xor
mov
mov
shl
jo
push
lods
cmp
lock
mov
cli
in
dec
aaa
stc
mov
call
scas
ret
sub
or
and
scas
dec
out
mov
sti
out
(bad)
cvtps2pd
fistp
aaa
jecxz
(bad)
dec
mov
ja
jb
cmp
mov
arpl
fiadd
jbe
les
pop
and
ja
jge
fcom
mov
call
and
lock
cmp
xor
and
sub
jbe
loopne
ds
push
adc
xor
das
popf
xor
add
ret
int3
and
xchg
jmp
push
jnp
or
push
pop
inc
fild
and
and
fmul
lods
fcomp
jle
adc
mov
add
retf
cmps
xchg
dec
(bad)
das
xor
jmp
outs
fldcw
sbb
addr16
adc
outs
jno
stos
aas
mov
int3
mov
mov
push
or
mov
cli
jne
clc
(bad)
fidivr
rcr
xor
dec
push
pop
popf
push
xor
xchg
int
out
hlt
sbb
or
mov
pop
popa
aas
push
cmp
(bad)
sub
out
scas
mov
or
mov
cwde
neg
mov
scas
push
cmp
mov
push
call
jecxz
push
call
pusha
xchg
mov
int3
sub
mov
cdq
rcr
js
jmp
lahf
sub
ret
loopne
push
jmp
je
and
es
pop
(bad)
in
popf
xchg
movs
scas
or
add
ret
dec
add
dec
into
imul
sbb
outs
dec
gs
sbb
in
enter
scas
sub
fwait
retf
and
pop
cli
(bad)
shl
add
jne
adc
mov
gs
pop
push
cs
inc
add
push
js
in
div
enter
pushf
fwait
push
push
add
test
in
icebp
mov
cmps
inc
sbb
test
and
inc
imul
sbb
inc
mov
jmp
in
(bad)
mov
les
push
xor
je
das
jo
shl
push
lea
loop
bound
icebp
std
or
retf
in
mov
mov
mov
imul
cwde
xchg
fs
cwde
push
sahf
cmp
cmp
sub
sar
cwde
retf
cmp
mov
mov
mov
les
and
out
hlt
mov
or
std
stos
inc
outs
clc
je
mov
mov
mov
dec
inc
inc
pop
js
xchg
gs
inc
xchg
cmps
xchg
lock
ins
addr16
cmps
xchg
mov
adc
loope
add
inc
sbb
mov
cmp
idiv
mov
iret
popa
inc
sbb
ret
bound
mov
mov
nop
and
mov
in
xchg
dec
dec
mov
mov
and
(bad)
in
xchg
inc
fmul
add
inc
jecxz
pop
or
mov
pop
xchg
test
movs
push
(bad)
or
xor
inc
mov
or
int
fnstsw
push
lock
pmuludq
lea
mov
lods
loope
aaa
sar
push
pop
movs
cdq
mov
jno
pusha
sbb
stc
cmp
xor
cmc
fild
xchg
lds
ret
pop
cdq
es
mov
or
out
dec
in
xchg
push
arpl
xchg
sahf
xchg
mov
mov
jg
and
push
gs
scas
aad
ins
pop
cmps
lock
daa
sbb
into
mov
mov
add
sti
mov
scas
bound
aaa
push
dec
xor
aaa
call
jge
xor
pop
pop
dec
xchg
(bad)
jmp
jne
inc
mov
xor
mov
rcl
push
cli
aad
cmc
mov
test
das
ins
add
mov
icebp
inc
mov
cmp
adc
scas
daa
lods
dec
jle
pushf
int
mov
clc
dec
mov
xchg
mov
test
xor
jb
dec
cmc
xchg
es
mov
pop
dec
hlt
test
aas
movs
cmps
scas
and
sbb
sbb
mov
out
sbb
and
test
int
imul
inc
push
mov
xlat
mov
pushf
leave
push
sbb
push
sar
mov
ins
std
inc
retf
pop
ja
mov
dec
fadd
lock
sbb
fidiv
icebp
data16
mov
stc
popa
es
cmps
gs
inc
mov
add
adc
mov
ds
clc
ficom
lock
inc
aaa
ret
aam
xor
mov
dec
(bad)
or
mov
jmp
xor
dec
cmps
xor
dec
out
push
mov
jmp
je
sbb
outs
push
push
add
inc
xchg
pop
and
retf
std
fidivr
adc
in
pop
mov
pop
dec
das
dec
js
cmp
mov
xor
inc
leave
inc
push
test
adc
ret
fcomi
nop
inc
push
(bad)
outs
aas
loop
(bad)
sti
dec
fld
xchg
push
fst
mov
in
dec
retf
add
xchg
and
jno
add
imul
jecxz
inc
add
icebp
push
push
xchg
xlat
fwait
in
xor
fistp
push
and
jge
fwait
ss
mov
test
jbe
leave
cld
inc
inc
aam
hlt
add
add
inc
push
stos
xor
jb
jecxz
sub
jmp
sahf
out
xor
mov
fdiv
adc
hlt
pop
mov
dec
or
xchg
push
jmp
jns
retf
xlat
lock
sbb
jns
ds
je
mov
or
mov
jle
call
(bad)
imul
jmp
push
sbb
std
inc
add
and
mov
pop
in
cmp
inc
leave
or
out
add
pop
loopne
and
mov
loope
(bad)
imul
mov
ror
jo
inc
lds
fcomp
cmp
push
inc
and
xlat
mov
ins
dec
test
sbb
leave
loop
sbb
fistp
inc
mov
in
dec
fldl2e
inc
or
sar
je
pop
jnp
mov
mov
stc
movs
shl
enter
jg
call
inc
inc
jmp
xchg
add
das
cmp
pop
dec
test
add
pop
mov
mov
cmp
cmps
add
add
in
fadd
and
and
and
dec
xchg
or
jp
pop
leave
retf
rol
adc
sub
pusha
in
xor
or
arpl
fld
lods
mov
sti
xchg
lods
or
mov
pushf
push
cdq
shl
cmps
test
adc
sbb
cmp
das
and
sbb
mov
das
xchg
jp
lea
jp
outs
or
popf
pop
pop
mov
dec
mov
adc
push
fsubr
push
adc
dec
ret
int
aas
rol
cs
push
(bad)
addr16
pusha
sbb
inc
iret
xchg
xchg
sub
fbstp
sub
cmc
mov
add
xchg
push
add
dec
xor
sbb
xchg
xchg
retf
imul
and
out
adc
and
outs
adc
or
and
xchg
xchg
retf
into
jbe
fisub
fst
aas
scas
inc
adc
jle
sub
xor
and
and
data16
sub
sub
in
push
aad
addr16
mov
in
shr
mov
les
jle
hlt
pop
jmp
or
dec
aam
int
ficomp
es
fimul
xchg
adc
aam
fimul
adc
aad
jb
xchg
xchg
cmp
(bad)
lods
cmp
je
xor
lods
add
aad
and
xor
mov
lods
test
pop
push
pop
ss
(bad)
mov
ror
jl
push
test
mov
sub
mov
inc
call
std
cmovne
int3
inc
fs
scas
mov
dec
cmc
inc
imul
mov
jae
cmp
pop
outs
push
jae
mov
fcomp
neg
add
add
pop
mov
int3
push
sbb
stos
cmc
js
adc
test
mov
add
pop
sar
xchg
and
sub
retf
fidivr
repz
dec
jmp
xchg
push
stc
jl
and
movs
mov
jb
sahf
push
(bad)
xor
and
xchg
outs
cmp
push
fcomp
ret
cmp
xor
repnz
addr16
dec
stos
add
test
outs
sbb
jb
sbb
ss
pand
bnd
inc
pop
repz
fucomi
daa
add
clc
push
push
imul
fild
push
(bad)
out
sar
ret
cmc
shl
jno
(bad)
jbe
in
cmps
xor
add
pop
mov
out
lods
cmp
pusha
cld
mov
pop
gs
repnz
stos
jmp
cmps
imul
push
jmp
or
mov
mov
pop
pop
mov
mov
sbb
popa
push
mov
inc
fucomi
pop
xchg
xchg
mov
sub
mov
adc
popa
inc
dec
pop
daa
outs
out
adc
cmc
push
sub
xor
xchg
and
inc
hlt
movs
fwait
mov
fst
mov
xor
test
ins
retf
fstp
cwde
jp
jg
dec
jp
jecxz
mov
add
or
or
or
fisttp
sti
push
inc
mov
xor
mov
fwait
scas
mov
imul
push
(bad)
clc
push
(bad)
in
push
adc
loope
push
xchg
mov
jnp
sti
je
stc
fs
jle
sbb
and
aaa
inc
xlat
xchg
mov
nop
lahf
loopne
jns
(bad)
mov
ja
push
xchg
adc
(bad)
pop
ret
pop
icebp
call
loopne
mov
(bad)
push
mov
in
adc
adc
out
xchg
mov
cmps
into
or
das
jne
lods
push
sub
xor
jle
test
sub
jmp
mov
sbb
pop
xor
jo
mov
sub
dec
stc
cmp
int
mov
stc
(bad)
xor
mov
sub
jmp
dec
mov
and
jg
mov
test
xchg
pusha
push
(bad)
sub
inc
adc
cli
xor
scas
inc
add
or
ror
push
pop
or
lock
fild
mov
gs
movs
jmp
sbb
ror
pop
call
and
out
(bad)
xor
xor
xor
mov
mov
or
jl
mov
fnstenv
int
mov
inc
push
fisttp
div
inc
ins
jnp
je
sti
pop
jecxz
jb
test
xor
cmp
mov
out
mov
ins
mov
add
ror
jne
pop
stos
and
pusha
popa
pop
or
call
sub
repnz
daa
fdiv
dec
cdq
jo
icebp
rcl
shr
inc
(bad)
idiv
arpl
dec
repz
adc
mov
daa
sbb
out
lds
fiadd
sbb
xchg
mov
ret
and
xlat
mov
jmp
sbb
add
aad
repnz
sub
xor
cmps
lahf
retf
stos
adc
push
and
pop
mov
mov
fcomip
retf
mov
test
sub
sub
cli
in
pop
int3
jge
jl
in
jp
clc
jecxz
push
popa
mov
and
sub
cdq
nop
nop
push
retf
push
and
inc
mov
std
les
stos
imul
mov
shl
sub
jle
cmp
lock
jg
xchg
clc
dec
mov
les
xor
push
aam
in
cmc
fnstcw
cmps
aad
mov
mov
ins
adc
sar
mov
dec
aad
fimul
cmp
mov
arpl
dec
xor
mov
mov
push
ja
push
js
mov
std
or
adc
test
mov
push
fstp
inc
inc
(bad)
std
ret
aam
ins
outs
or
xchg
mov
sub
cmp
in
stos
jnp
ficom
or
call
(bad)
xchg
sub
inc
xchg
add
add
push
stos
inc
sub
mov
gs
sub
cdq
mov
fadd
adc
xchg
mov
inc
or
mov
sub
cmp
and
imul
lds
xchg
cdq
cmp
xchg
adc
pop
std
(bad)
sti
inc
imul
(bad)
fnstenv
sbb
outs
and
push
ss
mov
and
arpl
xchg
jb
sub
jns
inc
fmul
inc
inc
fstp
adc
mov
test
clc
inc
dec
xchg
sti
out
nop
sahf
or
setge
ret
jo
test
hlt
aaa
popf
out
inc
jo
xchg
mov
dec
and
into
sub
stos
int
cld
into
xchg
mov
ins
shr
les
dec
jmp
xchg
sub
jae
jecxz
cmp
mov
lods
into
pusha
and
shl
inc
sbb
cmc
and
mov
shr
lea
(bad)
xchg
push
in
xor
in
sbb
call
push
js
jb
mov
xchg
jge
je
in
jmp
std
shl
lods
inc
in
stos
mov
xchg
jae
pop
test
cmp
add
mov
ror
mov
int3
jmp
inc
and
gs
and
jle
scas
neg
jbe
or
call
inc
sbb
push
mov
das
mov
dec
adc
fwait
or
stos
dec
in
and
(bad)
fnsetpm(287
push
popf
pop
retf
inc
add
lahf
adc
dec
out
jmp
mov
push
out
jne
ret
vpcomd
mov
cmp
or
mov
imul
gs
icebp
push
loop
push
sbb
das
imul
pop
out
jmp
push
sub
popf
mov
jmp
fs
std
mov
cmp
repnz
push
mov
cdq
push
mov
out
(bad)
(bad)
fsubrp
mov
jg
scas
out
mov
and
sbb
push
fcmovnbe
mov
test
in
test
jno
xlat
add
sub
or
mov
retf
aam
cmps
(bad)
pop
adc
jbe
cmp
jnp
mov
test
push
xor
sbb
add
sbb
jge
sbb
dec
loope
jb
mov
sub
sbb
popa
icebp
jge
test
adc
add
sub
aam
mov
dec
cmp
mov
sub
and
cmp
shr
push
jae
adc
pop
test
push
push
inc
lahf
pop
push
leave
push
mov
scas
jg
cmc
dec
mov
mov
fcom
int
push
mov
sbb
(bad)
pop
fiadd
push
(bad)
arpl
sbb
sub
mov
sbb
sub
scas
sub
mov
fcomp
(bad)
addr16
sbb
icebp
pop
movs
mov
xchg
cmc
call
jg
scas
repz
loopne
push
cld
into
loop
cmp
shr
sub
mov
rcl
rcl
repnz
sbb
stc
into
sub
xor
add
sub
xor
or
nop
retf
sub
jmp
or
mov
add
aaa
cmp
test
outs
pushf
pop
lahf
xchg
mov
push
out
sbb
pop
(bad)
movs
fs
jmp
mov
lods
add
jno
ret
jge
pop
hlt
add
mov
push
lea
clc
dec
mov
shld
lock
aas
sbb
dec
inc
mov
shl
jne
aad
sub
sub
pop
js
pop
ja
fcom
inc
xchg
ds
inc
lds
ror
sbb
retf
das
or
fmul
jg
and
push
cmps
in
and
fxam
popa
or
dec
push
jbe
push
xor
dec
addr16
mov
adc
stos
inc
or
xchg
fcom
retf
pop
jnp
push
mov
and
popa
call
or
lock
stc
out
das
pop
pop
lods
push
or
or
pop
iret
sti
sub
and
outs
sub
out
pusha
(bad)
das
out
jns
add
sbb
xchg
or
pop
stos
mov
inc
cmp
push
out
sub
sub
jg
xor
sahf
hlt
aaa
cmp
push
out
mov
pop
data16
into
or
and
xor
sbb
mov
xor
les
gs
push
mov
arpl
or
cld
daa
push
mov
dec
fs
imul
outs
fsubr
push
push
or
xchg
sub
push
leave
lock
mov
sar
or
jge
xor
das
imul
jo
outs
cmp
mov
jge
mov
shl
ss
inc
or
cld
fwait
mov
leave
dec
fnstcw
leave
xor
xchg
jl
lea
push
mov
out
jge
jl
push
inc
sbb
push
adc
xor
faddp
shl
outs
inc
push
adc
dec
pop
(bad)
pop
fsubr
ja
out
add
cld
mov
mov
pop
div
push
push
scas
cwde
adc
movs
or
leave
enter
test
fdivr
push
sbb
lock
out
out
iret
jbe
repz
gs
push
ss
sahf
std
cmp
mov
sub
sbb
cli
loopne
cmp
xchg
and
mov
xchg
xchg
adc
loope
aas
cmp
(bad)
push
mov
xor
cdq
cmp
out
xor
sbb
test
mov
lods
les
push
fiadd
xchg
sbb
sbb
pop
fmul
out
call
ss
setb
adc
mov
adc
test
and
in
pop
je
xchg
dec
sub
mov
scas
xor
push
cmp
std
adc
scas
push
mov
out
inc
xchg
xchg
outs
sub
data16
ror
or
dec
dec
cdq
jmp
dec
movs
inc
stc
ret
call
movs
xor
sti
push
add
push
mov
xor
popf
adc
aas
loopne
imul
jmp
push
mov
into
jns
scas
scas
push
xchg
adc
shl
(bad)
out
nop
fdivr
cmp
mov
fistp
cmc
stos
in
shl
push
push
jne
cmp
dec
push
gs
test
cdq
sub
jp
outs
inc
xor
out
sub
push
mov
jbe
cs
ja
shl
movs
sahf
mov
sub
inc
ror
pusha
pop
loope
push
rol
xor
sahf
xor
mov
lea
mov
sbb
add
sub
adc
push
test
pop
fdivr
out
repz
cmps
or
jmp
stos
jb
retf
xchg
add
in
mov
aas
or
cmc
stos
dec
call
mov
add
les
mov
pushf
or
loopne
popa
push
fcomip
clc
clc
pop
adc
add
adc
(bad)
jo
das
pop
je
fidiv
stc
xor
xchg
push
inc
mov
and
(bad)
in
mov
sti
sub
nop
xor
or
sbb
cmp
cmp
fcmovnu
cmps
retf
inc
xor
sub
fdivr
sub
test
mov
mov
cmps
pop
sbb
(bad)
test
call
mov
in
mov
bound
out
arpl
into
ficomp
sub
lea
mov
pop
ffreep
jp
sub
jecxz
call
inc
jno
or
add
dec
sub
scas
mov
sub
mul
test
adc
jecxz
cld
popf
aad
repz
rcr
leave
or
jp
les
cmp
punpcklbw
xchg
test
cmps
mov
xchg
fidiv
xor
xor
movs
retf
add
loop
call
push
and
movzx
add
fsub
sbb
xchg
xor
mov
cmps
cmps
sub
in
or
scas
and
push
mov
clc
and
sbb
pop
lahf
lock
xor
inc
cs
xchg
push
cmp
and
jne
cmp
xor
pusha
mov
lods
xchg
lods
cwde
push
push
add
or
push
test
dec
sub
addr16
mov
jmp
add
cwde
jmp
xlat
push
imul
mov
mul
iret
and
push
and
cmp
ror
(bad)
and
cld
or
adc
fild
les
mov
push
or
imul
mov
sbb
test
push
lods
test
sbb
stos
es
xor
sub
mov
push
pop
cmc
aad
mov
cwde
mov
call
es
pop
jnp
inc
mov
inc
pop
shl
test
dec
cmp
dec
jns
inc
fwait
push
push
push
rcr
adc
mov
adc
ret
ror
or
add
or
movs
add
jo
pop
outs
mov
mov
cmp
outs
lods
push
inc
movs
out
imul
mov
movs
inc
and
mov
(bad)
data16
xchg
mov
push
jnp
dec
sbb
out
loop
adc
add
adc
cmps
jno
in
inc
and
fs
adc
mov
mov
sbb
aas
inc
mov
or
jl
xchg
ret
or
scas
mov
movs
mov
out
int
add
popa
(bad)
cmp
pop
fmul
adc
fisub
inc
push
das
out
daa
mov
int
sbb
je
sub
loope
mov
sub
inc
dec
popf
inc
jp
mov
loop
sahf
pop
mov
and
test
add
test
add
jge
xchg
mov
and
fisttp
scas
cmp
test
mov
jge
and
push
mov
js
movs
in
fist
jle
add
shl
popf
jno
xlat
into
xchg
mov
jle
pushf
cmp
das
jecxz
js
out
mov
repnz
adc
scas
add
jmp
fldcw
mov
push
adc
or
mov
push
iret
sbb
cwde
push
or
gs
frstor
push
loope
dec
icebp
loop
scas
sbb
(bad)
mov
aam
stc
sti
cmp
cs
fs
ficomp
mov
mov
pop
mov
or
in
movs
std
jo
jno
add
ds
add
push
sub
mov
sbb
xchg
(bad)
dec
fnstcw
clc
sub
js
mov
xor
repz
push
mov
pop
repnz
loopne
add
popa
cmp
and
adc
sbb
cli
inc
mov
or
out
cdq
(bad)
xor
fcom
mov
dec
mov
or
lahf
sub
dec
sub
pop
shl
jb
fmul
mov
xor
cli
(bad)
adc
jno
cmp
out
nop
adc
pop
test
in
jp
clc
cmp
cmp
(bad)
jno
and
sub
out
popf
xor
test
sub
test
int
pop
cwde
imul
pop
es
dec
pushf
jbe
sub
add
mov
sub
pop
mov
or
jp
push
ins
sbb
scas
mov
loope
jno
mov
push
and
jl
mov
shr
pop
fisub
jnp
cmp
sub
adc
mov
push
push
arpl
test
mov
or
mov
add
or
out
mov
dec
jp
cmp
jne
inc
xchg
and
iret
push
call
icebp
loope
lahf
or
aad
mov
daa
scas
fdivr
push
stos
xchg
dec
sub
push
xchg
in
shl
xchg
xchg
cmps
xlat
aaa
push
pop
adc
jmp
cmp
sub
jno
or
mov
jne
addr16
pop
cwde
rcl
addr16
call
sti
sbb
sbb
out
or
push
les
add
mov
jmp
ins
loop
push
jns
dec
pop
test
jle
fadd
and
je
imul
jge
cli
aas
shl
mov
jo
retf
loope
in
repnz
dec
and
push
sbb
es
xchg
sub
test
adc
int3
ret
scas
(bad)
leave
cmp
add
add
xor
ror
push
mov
push
popa
data16
push
dec
jnp
(bad)
fimul
cli
ja
dec
js
mov
xor
(bad)
gs
cdq
push
popa
sahf
retf
into
hlt
fcmovnu
push
pop
add
sbb
aad
(bad)
mov
stos
cmp
add
xchg
shl
push
repnz
jne
test
mov
and
rcl
neg
mov
push
jb
mov
stc
or
cmp
sub
xchg
xchg
cmp
push
or
setbe
xor
push
mov
movs
or
inc
sbb
sub
sub
jno
shl
test
sub
ja
mov
pop
xchg
(bad)
and
and
or
sbb
inc
xlat
cld
pop
scas
les
push
gs
push
mov
push
pop
and
fisub
ficomp
mov
scas
pop
sar
or
int
mov
ror
jno
adc
hlt
pop
ret
sbb
loope
jmp
jle
cmp
movs
mov
mov
mov
sbb
hlt
jae
test
jbe
add
xor
pop
out
add
inc
xchg
dec
sub
add
sbb
test
push
pushf
push
xchg
sar
add
ror
inc
in
and
inc
xchg
loope
aaa
push
movs
in
cld
adc
cld
dec
push
jp
and
ret
dec
cmp
sbb
sbb
pop
gs
outs
enter
mov
cmps
inc
adc
and
sub
or
out
and
cwde
stc
inc
xchg
dec
mov
ror
or
pop
js
pop
imul
nop
mov
dec
mov
pop
push
jmp
nop
sbb
pop
sbb
jp
imul
bound
stos
dec
inc
and
inc
xchg
pop
mov
outs
and
mov
clc
pop
mov
sbb
pop
movs
jp
pop
pop
and
scas
jecxz
push
fxam
in
cld
aas
test
sbb
pop
push
es
jge
cmp
dec
push
scas
push
jnp
dec
into
adc
and
xchg
loopne
les
mov
or
or
xor
mov
sub
popf
sbb
mov
jl
test
and
mov
stos
sbb
xchg
adc
add
xor
arpl
pop
push
push
call
gs
iret
in
xor
push
dec
jbe
push
mov
cmp
jmp
outs
jb
mov
test
inc
fmul
inc
loopne
and
mov
jl
leave
icebp
jg
jne
pop
mov
pop
lods
rcr
pushf
mov
xchg
add
cwde
stos
lods
dec
dec
or
mov
mov
mov
mov
repnz
stc
ins
movs
mov
adc
xchg
dec
clc
loope
cmps
pop
test
lods
push
mov
pushf
cwde
sub
jnp
jmp
dec
sub
ud1
std
ins
sbb
xchg
pop
gs
shl
add
dec
cmc
mov
xlat
scas
dec
sbb
clc
inc
adc
imul
out
sti
pusha
sub
ds
xor
hlt
add
xlat
adc
push
dec
retf
ja
mov
(bad)
push
popa
mov
popf
test
mov
das
and
xchg
sub
or
inc
jbe
or
data16
sbb
sub
fcmovnu
or
jae
(bad)
mov
frstor
mov
dec
cmp
or
sub
dec
gs
pmovmskb
xor
aam
or
or
fcomp
xlat
or
retf
aaa
neg
sbb
lea
fs
sahf
push
popa
aad
add
out
inc
pop
inc
loope
ins
ror
cmp
inc
adc
in
popf
retf
mov
mov
mov
shr
pop
int
and
pop
ficom
mov
call
add
aas
std
jae
pop
in
dec
adc
or
cmps
push
xchg
(bad)
mov
(bad)
mov
adc
jns
add
stc
inc
inc
cmp
cmp
push
das
push
into
jns
es
(bad)
add
lods
popf
jecxz
outs
leave
lods
rcr
or
aad
xor
pop
(bad)
and
jb
lock
add
popa
jmp
adc
lods
nop
scas
les
xchg
rcr
xor
es
mov
jg
(bad)
jle
or
xchg
das
mov
adc
dec
imul
cdq
dec
sbb
mov
in
xor
pop
stos
or
fbstp
add
out
dec
shl
add
dec
inc
hlt
xor
jo
push
stos
pop
test
(bad)
mov
inc
fdivr
les
jl
mov
push
lods
test
aas
push
pop
(bad)
xor
xor
xchg
jne
pop
sbb
inc
and
pop
inc
std
pop
ss
les
sbb
sbb
and
test
jnp
mov
in
mov
cdq
sub
ins
mov
mov
jae
mov
addr16
imul
and
in
inc
add
fmul
test
and
push
lea
dec
ds
xor
jecxz
ret
call
(bad)
xchg
rcl
jg
ja
push
test
or
ret
das
clc
test
jns
or
xchg
fidivr
cmps
in
jmp
out
cs
icebp
inc
mov
ja
ins
adc
mov
jnp
jno
aas
sub
out
fisub
push
jo
dec
ds
push
retf
pop
inc
dec
push
mov
jae
sub
jnp
int3
cdq
sbb
pcmpeqw
aas
xchg
inc
pusha
cs
jp
adc
jbe
movs
fisubr
pop
pop
mov
jmp
add
les
inc
daa
xor
xor
lods
fadd
repnz
push
leave
popa
mov
in
jns
(bad)
hlt
test
std
ror
icebp
or
pop
(bad)
(bad)
jecxz
jp
lahf
jp
outs
js
jbe
push
sbb
push
or
sbb
loopne
or
pop
mov
jne
xchg
test
xor
out
mov
or
mov
(bad)
out
mov
nop
jp
jmp
ss
xchg
fwait
cmps
rcl
iret
dec
mov
call
sbb
xchg
xor
popf
dec
adc
fist
sbb
jno
pop
addr16
cwde
push
xchg
sub
dec
test
or
xchg
int3
and
xchg
stos
sbb
and
xchg
pop
inc
push
mov
je
dec
pop
vmovhps
movs
xchg
sub
xor
pcmpgtw
(bad)
and
cs
jmp
dec
adc
dec
cmp
xor
sbb
cdq
mov
jle
sbb
ja
add
xor
ss
aaa
int3
aam
je
cmp
cmp
(bad)
hlt
jle
sbb
fist
mov
out
dec
int3
retf
inc
(bad)
lock
in
gs
repnz
ds
push
jnp
sbb
das
or
mov
sbb
mov
shl
add
dec
and
mov
(bad)
cdq
pusha
loop
daa
mov
mov
pusha
rcr
pop
pop
mov
scas
adc
xor
(bad)
mov
dec
stos
ss
pop
not
and
mov
pop
xor
mov
outs
mov
out
leave
mov
int3
loope
and
xor
xchg
(bad)
mov
mov
pop
mov
inc
lea
cwde
push
xchg
(bad)
jle
jmp
repnz
xor
push
cmc
hlt
add
cmc
adc
xor
retf
push
cld
jae
enter
mov
test
test
mov
jns
iret
jle
and
js
lock
lock
sbb
dec
test
xor
stos
push
in
add
ins
sbb
aaa
stos
or
sti
int
xchg
int3
cs
mov
mov
jno
pop
out
daa
call
aaa
or
pop
xchg
stos
xor
loopne
clc
retf
xchg
inc
loope
(bad)
adc
in
stc
dec
repnz
das
(bad)
pop
popa
iret
sbb
and
dec
mov
adc
mov
test
data16
xchg
sbb
lods
adc
ficom
arpl
das
pop
adc
int
pop
sti
mov
sbb
hlt
adc
call
mov
and
jnp
or
js
push
mov
aam
ds
ins
jnp
push
sub
imul
fwait
pop
das
dec
pop
(bad)
std
fdiv
adc
sbb
jb
sub
stos
jmp
mov
sbb
add
add
dec
jns
fadd
cmp
int
repnz
cmps
add
xchg
jg
(bad)
gs
pop
lods
cmps
and
xor
cmp
loop
outs
ret
sti
push
xlat
sub
scas
lock
push
mov
jbe
fbstp
xchg
pop
mov
fnstenv
xor
aad
sub
fnstenv
(bad)
loop
push
aas
jge
mov
mov
cmc
mov
js
mov
sub
jmp
iret
add
out
mov
jae
jecxz
and
int3
sbb
push
adc
arpl
or
add
mov
dec
gs
push
movs
sti
pop
aam
xchg
or
mov
mov
mul
dec
cmps
add
not
popa
adc
fiadd
aas
mov
xor
int3
xchg
cmp
xor
jnp
fsub
std
sar
sahf
cmps
pusha
loopne
imul
fsub
cmps
mov
xor
sbb
add
pop
push
icebp
push
mov
sub
push
mov
dec
mov
retf
out
sbb
push
test
push
and
(bad)
pop
and
mov
into
ins
sbb
sbb
in
popf
pop
jge
dec
outs
add
cmp
cmp
ds
in
mov
mov
sub
mov
test
jae
sbb
or
adc
inc
imul
pop
xchg
sbb
push
fbld
xor
push
loop
sub
aad
add
ret
xchg
(bad)
sti
popa
cwde
push
adc
sahf
mov
inc
bound
int3
clc
jmp
ret
xor
(bad)
stos
shl
sub
sbb
dec
dec
xchg
ja
call
sub
das
aam
cmp
mov
sbb
aam
cli
ds
pop
cmp
mov
or
mov
mov
lock
and
fisttp
repz
mov
lods
mov
nop
loopne
adc
mov
(bad)
test
cs
imul
mov
rcr
mov
retf
pop
rcr
lock
push
mov
adc
sbb
imul
out
movs
sbb
jge
cmps
ins
hlt
(bad)
mov
or
cmp
sub
pop
inc
imul
sbb
repnz
in
or
jmp
xchg
scas
loop
inc
and
call
out
sar
lock
cmc
jl
xor
pushf
popa
lods
xor
data16
(bad)
dec
inc
or
pop
stc
mov
es
out
cmc
inc
outs
cmc
sub
mov
sar
fnstcw
adc
jl
leave
inc
hlt
ss
or
cmp
and
pop
jns
lea
adc
mov
jo
into
cs
pop
pop
push
ss
icebp
(bad)
xchg
mov
push
scas
retf
pop
mov
mov
xchg
or
xor
jbe
or
sbb
or
pop
fisubr
jb
push
inc
mov
call
adc
adc
push
inc
ror
scas
rol
inc
or
das
xchg
pop
cmp
fild
outs
xlat
jg
aaa
xor
outs
seto
imul
repnz
jns
data16
mov
lods
push
fld
mov
stos
icebp
imul
ins
lock
push
cmc
fcom
adc
into
inc
in
cmp
popf
sahf
fs
jmp
dec
nop
stc
xchg
add
push
adc
or
sbb
lea
and
dec
xor
ins
sar
aad
xchg
scas
xchg
mov
xchg
jae
out
loopne
arpl
push
xor
sub
push
sbb
inc
cmp
pushf
push
mov
in
lds
push
ret
inc
stc
jns
ret
scas
iret
leave
ds
jecxz
mov
test
iret
jae
ficom
je
dec
in
push
lahf
xor
loope
pop
dec
cmp
xchg
std
jno
rol
mov
jne
cmp
ja
xor
out
sub
lahf
adc
leave
call
sbb
fwait
ins
dec
adc
fs
sub
lock
popa
in
jl
push
daa
stos
pop
xlat
push
arpl
mov
mov
fiadd
jnp
mov
pop
retf
adc
movs
and
mov
cmp
push
xlat
push
pop
std
(bad)
or
fisub
aad
jne
ss
inc
jnp
dec
cdq
fild
pop
icebp
push
push
or
xor
inc
aam
mov
mov
repz
mov
mov
lods
pop
pop
push
adc
or
push
push
(bad)
jge
movs
mov
push
inc
xchg
add
push
bound
and
sbb
leave
dec
mov
inc
es
sub
xor
in
jo
ins
rcr
aas
sub
shl
lea
or
cmps
shl
jp
or
cdq
xor
add
cmps
xchg
int
scas
aaa
pop
les
sub
push
adc
sub
fs
clc
(bad)
(bad)
cwde
mov
(bad)
push
out
jecxz
jmp
bound
out
(bad)
movs
mov
add
aaa
sub
inc
cmp
inc
ret
cdq
xchg
or
mov
scas
mov
(bad)
fimul
jae
jmp
push
mov
mov
fwait
sub
leave
cmp
push
popf
sbb
cwde
enter
cmp
mov
sbb
and
inc
and
cmp
jl
mov
sub
add
mov
(bad)
rcl
mov
fisttp
xor
sar
sbb
cmps
cwde
jnp
iret
sub
sbb
sbb
mov
adc
lods
out
cmp
pushf
popa
test
nop
inc
add
sbb
cmp
(bad)
out
xchg
test
and
ret
lahf
inc
mov
jb
cmp
shl
ret
lea
pop
in
push
adc
jns
outs
mov
jo
lahf
addr16
push
mov
jo
xor
call
imul
rcr
cmp
mov
and
jl
xchg
pop
call
push
jno
hlt
popf
fsubr
mov
add
pop
fsubr
mov
inc
retf
jo
scas
lea
int
push
pop
inc
(bad)
jno
push
mov
sub
sub
retf
xchg
sub
push
pop
jp
int3
mov
stos
imul
push
cmps
or
jno
sbb
mov
pop
(bad)
dec
push
cmps
xchg
xchg
push
(bad)
jp
mov
in
sar
aam
fldcw
dec
mov
mov
sbb
adc
int
repnz
in
lods
jle
aad
pop
xchg
cwde
repz
xchg
sub
imul
test
mov
test
pop
xor
shr
scas
push
js
repnz
sbb
movs
dec
call
jp
sbb
div
test
inc
mov
cwde
ins
retf
test
shl
dec
(bad)
hlt
xor
lock
jg
ja
pop
enter
xchg
lahf
push
out
adc
push
or
dec
lds
pushw
loope
bound
push
rcl
gs
stc
xchg
test
test
inc
mov
js
int3
test
aad
call
sbb
jae
dec
xchg
test
rcl
mov
cmp
pop
xchg
fs
lahf
inc
outs
sbb
sub
mov
cmp
(bad)
jae
jl
arpl
jns
cmp
xor
enter
in
arpl
arpl
mov
rcpps
xor
lock
pop
push
je
xlat
cs
mov
push
pop
cwde
fsubr
jno
es
sbb
jbe
sahf
pusha
je
xchg
fidiv
test
mov
xor
and
xlat
cwde
adc
lods
aas
int3
mov
clc
retf
cmp
adc
cdq
imul
lea
sub
lods
(bad)
mov
stos
dec
push
xchg
loop
sar
call
addr16
leave
xor
(bad)
jg
out
stc
mov
sub
sbb
paddd
pop
xor
and
ror
neg
stos
pop
ret
stos
push
movs
cli
fcmovne
push
mov
ret
sub
cwde
shl
fdivp
gs
cmp
mov
ds
popa
xor
xor
popa
and
xchg
jge
sbb
add
cmps
shr
fistp
mov
sar
or
js
push
leave
retf
call
mov
push
adc
mov
popa
test
xor
adc
mov
jno
outs
sbb
fmul
lock
pop
jp
daa
dec
das
test
lock
inc
sbb
ins
cmps
push
cmps
xlat
xchg
loope
in
outs
pop
xchg
lods
mov
mov
scas
sub
ror
sub
jecxz
cmp
add
pop
jle
sbb
and
cmp
jmp
test
sub
sub
sub
test
mov
cld
stos
sub
xchg
cmc
inc
ss
(bad)
mov
cld
xor
scas
sbb
ja
ja
jp
pop
jae
cwde
cmp
cwde
(bad)
inc
cmp
pusha
mov
in
xor
arpl
int
mov
aas
dec
cld
xchg
fsubr
ror
push
sbb
mov
inc
cmp
xchg
mov
arpl
pop
dec
mov
xlat
jns
jnp
xlat
cmp
test
dec
stos
or
(bad)
dec
push
push
pop
mov
or
fwait
rcr
dec
push
cmps
dec
pop
ss
rcl
cdq
popf
imul
loopne
mov
push
pop
outs
push
aas
sub
mov
adc
aaa
lods
outs
mov
call
push
sbb
fsubr
mov
lock
sbb
pop
stc
fwait
aaa
inc
add
dec
test
in
dec
mov
push
cli
jo
ins
sbb
stos
add
popa
pop
scas
and
inc
jecxz
sub
cmp
xor
sbb
imul
cmp
pushf
jae
pusha
iret
repz
arpl
sbb
(bad)
xchg
(bad)
fisttp
lahf
mov
in
pop
mov
and
aas
fisttp
inc
jne
repnz
sbb
push
and
and
js
push
aas
jmp
int3
dec
jmp
(bad)
sbb
xrelease
xchg
sub
lea
or
clc
frstor
rol
or
int3
push
int3
cmp
pop
cmp
sub
call
data16
out
cli
dec
mov
xlat
push
ds
fcmovne
sbb
mov
cmp
fidivr
mov
inc
and
jns
push
dec
add
movs
mov
jo
inc
fdivr
xchg
inc
jge
loopne
mov
and
cmps
add
seto
in
xchg
mov
xchg
(bad)
sub
or
jne
sub
dec
pop
mov
test
xchg
xchg
sub
sub
pop
mov
scas
movs
dec
xchg
xchg
in
out
xor
out
add
lock
mov
jl
imul
les
jae
jbe
add
jae
and
out
and
(bad)
jo
or
inc
mov
je
std
cld
or
icebp
add
ret
into
call
repnz
addr16
push
icebp
jmp
mov
and
aas
xor
(bad)
dec
int
aas
ss
adc
xchg
mov
in
cmps
daa
pop
pop
xchg
jnp
fs
mov
sub
jl
pop
popf
jmp
out
sub
or
(bad)
test
retf
mov
lahf
lds
push
xchg
sub
push
mov
mov
fs
mov
xor
cs
fldcw
inc
fs
add
add
push
xlat
gs
push
push
stc
xchg
sub
sahf
push
movs
test
sbb
adc
or
pop
push
mov
call
jnp
arpl
dec
or
pusha
and
pusha
jge
sub
push
xchg
ss
out
dec
dec
repnz
sub
repnz
ins
sub
movs
sub
mov
pop
mov
cmp
or
push
xor
sbb
sti
pop
mov
cmp
les
adc
sbb
mov
stos
aaa
and
xor
inc
arpl
push
test
add
enter
xchg
clc
push
sbb
sub
xor
imul
add
inc
push
mov
and
ja
push
jle
dec
adc
inc
sbb
push
outs
jecxz
cmps
sub
in
jbe
pop
lea
stc
jg
fs
test
jmp
push
loope
not
jmp
mov
stos
sbb
fs
mov
inc
cmps
in
mov
enter
sbb
rcr
out
fimul
int3
mov
xchg
imul
mov
jae
mov
movs
or
fs
inc
neg
cmc
xchg
mov
pop
dec
cs
dec
fsub
dec
retf
add
sbb
pop
cmp
adc
sahf
outs
pop
mov
enter
icebp
push
ds
xor
call
pop
xor
movs
(bad)
jecxz
ds
push
sahf
push
int
movs
js
cmp
pop
xor
pop
mov
or
outs
int3
jbe
pop
or
je
ficomp
rcl
cmps
shl
pop
jmp
adc
sub
jl
pop
fsubr
dec
or
cmp
or
dec
jecxz
mov
mov
rep
cmc
stc
mov
out
fild
ds
mov
stos
push
push
mov
push
adc
pop
mov
stos
pop
cld
inc
in
mov
arpl
sbb
jae
cli
stc
ds
jnp
movs
sbb
mov
(bad)
(bad)
add
addr16
(bad)
or
(bad)
call
pushf
icebp
cmp
lahf
xor
rcl
loop
mov
loop
(bad)
adc
pop
lea
sub
mov
cmp
and
push
movs
mov
mov
jmp
shl
push
sbb
lds
pushf
add
cmp
xchg
stc
pusha
aam
inc
popf
cld
das
inc
call
cmp
jl
jns
xchg
fsub
pop
outs
sbb
leave
push
les
xchg
mov
xchg
mov
inc
fwait
popa
addr16
das
or
test
jae
or
sub
jne
fs
push
add
xchg
push
add
jae
or
scas
into
cmps
movs
mov
push
inc
pop
loop
fisttp
mov
sahf
add
push
or
gs
enter
add
adc
dec
in
nop
rcr
or
sub
int3
xchg
test
jbe
outs
ss
cmps
cmps
ret
mov
lea
xchg
xchg
mov
popa
loop
int3
mov
imul
sbb
inc
loopne
fnsave
jno
adc
or
push
xlat
xchg
out
mov
cmps
dec
popa
hlt
lods
cwde
shr
ret
cdq
mov
inc
pop
jg
pop
out
and
not
and
and
cli
test
bound
and
add
out
imul
enter
xor
xchg
xor
dec
ins
add
sbb
out
mov
enter
sub
bound
jge
mul
mov
mov
loope
fwait
test
xor
add
xchg
aaa
pop
or
mov
pop
cmp
fbld
dec
outs
in
imul
dec
out
xchg
les
push
out
mov
fild
bound
push
bound
data16
ficom
inc
or
adc
fild
ins
xor
cwde
sar
mov
mov
jns
inc
bound
sbb
aad
cmc
jns
inc
jg
dec
in
ds
fsubr
xchg
inc
call
inc
sbb
ins
xor
xor
sbb
daa
dec
sbb
div
xchg
ror
mov
mov
adc
ret
jl
jns
xchg
fist
sahf
iret
mov
and
in
std
cmps
out
mov
test
mov
xor
jmp
addr16
or
(bad)
mov
xor
sbb
sar
push
xorps
or
pop
xchg
clc
test
popa
cmp
mov
in
in
cld
movs
xlat
lahf
push
cmc
fwait
retf
aad
repnz
mov
mov
jg
pop
in
pushf
icebp
test
dec
sbb
popa
add
adc
and
and
mov
out
repnz
adc
cli
mov
ds
push
clc
(bad)
xlat
pop
cmp
in
xor
je
sbb
nop
mov
mov
test
ins
movs
fcmovnbe
xchg
out
mov
outs
aaa
adc
cmp
push
aad
ror
aaa
push
push
fidivr
jp
jle
push
in
shl
mov
mov
add
rcl
inc
add
add
push
xor
mov
fdivr
fisttp
(bad)
ins
push
inc
js
and
and
scas
fild
or
adc
mov
push
std
mov
cld
arpl
xchg
call
inc
add
cmp
aas
push
sbb
add
sbb
dec
adc
stos
data16
cmp
imul
nop
cmc
scas
pop
inc
mov
mov
jmp
sar
cmc
scas
jbe
mov
(bad)
cld
cmps
jmp
fld
sub
jns
outs
xchg
mov
mov
mov
adc
dec
sbb
mov
pop
sub
sbb
scas
movs
repnz
test
out
aaa
ss
sbb
dec
dec
loop
cmp
lods
rol
sbb
or
pop
pop
pop
jnp
xor
sbb
and
bound
and
in
nop
shl
fnstenv
arpl
sub
pop
loope
ret
inc
mov
jecxz
jl
dec
add
test
(bad)
mov
lahf
retf
sub
xchg
repnz
cdq
test
inc
das
jle
(bad)
(bad)
jmp
inc
jmp
ret
sub
daa
jae
in
jle
ins
xor
cmp
rcl
and
push
add
inc
test
sbb
outs
test
(bad)
mov
iret
mov
inc
out
ds
dec
add
outs
cmp
(bad)
std
xchg
jmp
cmp
sbb
iret
rol
fisubr
jp
push
jg
or
pop
or
mov
popa
jecxz
xor
push
inc
cmp
and
js
or
mov
mov
pusha
aaa
sahf
stos
mov
call
cmps
movs
cld
scas
stc
cmps
(bad)
bound
dec
jmp
mov
fidivr
push
or
dec
sbb
xor
jbe
pop
(bad)
xchg
out
mov
jnp
push
or
fidiv
jne
dec
enter
adc
mov
in
mov
mov
fist
pop
jmp
rcl
call
push
push
je
stc
xchg
xchg
imul
aad
or
into
mov
lahf
ret
jae
es
or
jb
mov
cmp
dec
sbb
add
aas
cmp
dec
push
mov
int3
fwait
xlat
jbe
dec
or
test
es
mov
mov
shl
push
xor
and
pusha
sbb
push
loope
les
aam
retf
add
push
xor
into
mov
xor
or
(bad)
dec
push
rcl
push
dec
pop
push
loope
outs
pop
inc
pop
adc
popa
sbb
gs
add
xchg
mov
inc
in
ds
add
daa
jge
mov
push
das
jnp
data16
aaa
outs
mov
inc
fstp
call
push
pop
push
ins
cmp
test
(bad)
cwde
lds
mov
adc
and
cmp
retf
pushf
int
loopne
ja
cmp
cmp
or
das
and
leave
arpl
mov
fimul
jl
xlat
pusha
xchg
mov
mov
inc
addr16
adc
repz
retf
(bad)
mov
lahf
test
cmp
push
mov
mov
jge
hlt
mov
jmp
jl
scas
movs
icebp
sti
mov
cmp
adc
movs
jmp
ret
in
lds
xor
dec
ds
outs
push
pop
jp
jno
pop
out
aad
adc
lahf
push
imul
push
pop
jge
add
or
mov
jne
ret
mov
popf
test
inc
adc
popf
(bad)
xchg
jmp
out
inc
mov
pop
xchg
mov
in
add
add
nop
xlat
mov
test
sub
sbb
dec
and
sbb
adc
mov
jno
jmp
nop
mov
sbb
es
inc
xchg
cld
xchg
(bad)
fldcw
mov
add
(bad)
and
xor
add
jle
mov
mov
mov
jbe
adc
or
fidiv
sub
adc
mov
lods
fdiv
inc
add
dec
add
enter
loope
ret
mov
sub
dec
fld
jle
push
movs
mov
nop
cmps
(bad)
inc
mov
arpl
pop
(bad)
xor
int3
mov
sbb
ret
cmp
movs
lock
ss
retf
sub
popa
sbb
add
pusha
into
lahf
jns
push
or
xchg
pop
sbb
adc
xor
(bad)
data16
jp
sbb
inc
xchg
mov
ins
cmp
mov
mov
inc
adc
xchg
hlt
nop
repnz
or
mov
test
mov
push
imul
test
push
pushf
test
adc
pop
sbb
cmps
hlt
adc
jo
cmp
add
in
xchg
lods
icebp
test
sub
xchg
fwait
mov
xor
mov
pusha
dec
sbb
xor
ror
mul
inc
pop
pop
add
in
xchg
mov
sbb
gs
icebp
outs
mov
adc
mov
clc
mov
(bad)
fnstsw
inc
adc
outs
in
into
xchg
stos
jle
push
or
dec
sbb
cdq
jg
dec
adc
xor
movs
movs
(bad)
imul
xchg
adc
jl
jg
hlt
test
je
dec
sub
retf
xchg
div
pop
add
cmp
addr16
and
cmp
in
lahf
lds
jge
push
arpl
js
push
out
test
mov
push
add
fbstp
dec
mov
ds
add
xchg
mov
fdivr
mov
pop
or
mov
jne
ret
mov
into
popa
xor
lods
jmp
lea
inc
adc
xchg
cmc
xchg
repz
cli
scas
pop
repz
fiadd
out
cmp
ss
sbb
scas
cmc
in
lods
cmps
fisttp
sub
jae
or
dec
push
jb
push
jae
out
loop
int
test
fisubr
jmp
test
dec
test
sbb
pop
stos
cmps
retf
call
scas
lds
and
jp
push
stos
cmp
in
mov
cwde
mov
xchg
sti
stos
stos
ror
js
sahf
les
hlt
dec
add
out
add
(bad)
mov
mov
lahf
xchg
mov
lahf
shr
arpl
mov
and
mov
(bad)
jmp
aad
mov
jmp
movs
(bad)
jb
movs
fbstp
fadd
outs
aas
push
pop
outs
push
jge
xrelease
out
mov
test
xchg
shl
mov
mov
and
test
mov
sahf
lahf
mov
add
jg
adc
pop
xchg
stos
cmp
dec
xchg
cmps
push
and
jmp
div
pop
mov
in
fiadd
mov
jge
push
xchg
cmps
in
movs
cmc
adc
adc
jp
cmp
jge
ror
imul
addr16
in
inc
or
int3
arpl
push
aaa
ins
ins
sbb
add
(bad)
xchg
lock
dec
sti
xchg
sti
stos
sbb
sti
xchg
jmp
loop
cmp
out
xor
lock
pop
call
and
(bad)
fmul
daa
and
mov
adc
lahf
mov
mov
stos
cmps
fimul
cmp
and
fwait
push
dec
adc
sub
gs
fsubr
data16
cmps
test
fidiv
dec
in
pop
(bad)
mov
es
or
adc
adc
cwde
repnz
cld
xchg
dec
in
xor
fiadd
jg
mov
jmp
sbb
lods
cmp
inc
jo
xchg
leave
dec
jecxz
outs
adc
xchg
xchg
(bad)
stos
std
dec
push
stos
jmp
(bad)
mov
call
mov
xor
or
xor
mov
inc
call
jmp
sbb
cmps
sti
dec
loope
cmp
mov
or
out
bound
jp
sbb
sub
jb
std
sub
push
mov
fst
ins
ins
adc
mov
add
add
es
jecxz
fbstp
inc
ret
sub
daa
dec
xor
push
add
inc
mov
int
mov
xchg
xchg
stos
and
in
xchg
sar
int
(bad)
ja
dec
sbb
xor
sub
mov
lahf
jno
fst
cmp
push
int3
jb
in
popa
not
mov
jp
xlat
retf
(bad)
loopne
imul
dec
aaa
or
pushf
retf
leave
arpl
imul
sbb
adc
push
xor
in
sahf
(bad)
cmp
push
iret
jb
out
int
inc
xor
xor
cmp
nop
scas
mov
or
jae
fistp
xchg
fisubr
mov
xchg
push
repnz
and
mov
shl
pop
or
ins
jg
aam
into
push
cmc
xchg
int
cmc
clc
call
das
ja
daa
bound
and
sbb
les
jmp
fcom
inc
jmp
ror
cmc
cwde
leave
jl
xlat
daa
pop
or
pop
imul
in
repnz
cmp
adc
or
rol
xchg
(bad)
mov
fst
fcom
jp
fmul
fisttp
sub
gs
sar
loop
push
out
adc
add
lods
jle
xchg
shr
pop
sti
mov
(bad)
jae
stc
xchg
rol
jns
jns
xchg
into
ja
(bad)
stc
(bad)
(bad)
movs
adc
mov
mov
jb
dec
add
and
loop
repnz
xlat
jns
push
xor
movs
leave
test
(bad)
push
push
add
lds
cli
jno
pop
cs
add
pop
add
mov
mov
jb
dec
call
jge
sub
push
add
ins
aaa
inc
or
aaa
push
sti
xchg
imul
dec
push
push
loope
push
inc
adc
pop
hlt
pushf
(bad)
sub
loope
xor
sbb
pop
and
mov
adc
outs
add
xchg
cmp
adc
or
push
inc
sbb
daa
ret
pop
loopne
xor
jo
icebp
xchg
leave
pop
adc
in
mov
out
cmps
test
jno
mov
cmp
jno
pop
out
add
lock
push
cdq
enter
xor
stos
mov
call
(bad)
mov
jmp
repnz
imul
mov
pop
jmp
repnz
mov
mov
adc
imul
jg
fimul
pop
fistp
jle
sti
inc
nop
push
push
inc
cmp
pop
out
ret
xchg
es
retf
push
sub
sub
dec
ds
arpl
dec
adc
jp
hlt
movs
repnz
in
loop
push
pop
push
loope
sar
push
push
push
sbb
test
popa
aaa
jae
push
mov
adc
outs
xor
mov
jmp
test
pop
pop
(bad)
int
stc
mov
sbb
cdq
aam
addr16
jbe
jnp
push
push
bound
stos
icebp
jns
pop
(bad)
adc
inc
or
arpl
call
and
rol
and
fsub
jecxz
jnp
inc
pop
inc
pop
push
cld
cmps
sbb
dec
push
add
xchg
sar
bound
dec
sbb
jb
repz
lds
ja
sub
inc
pop
or
pop
inc
(bad)
fwait
jno
lahf
clc
nop
repz
loope
jb
xchg
movs
jecxz
inc
pop
pop
pop
sub
inc
sbb
add
je
loopne
cmc
mov
or
inc
mov
mov
outs
add
mov
mov
mov
pop
lods
(bad)
mov
push
xchg
lahf
fld
or
fcom
outs
or
call
popa
and
fnstcw
std
mov
xor
push
push
add
jp
imul
jge
cmc
adc
in
jmp
xor
cmp
jns
outs
imul
je
cmps
mul
jl
mov
cmp
js
add
popf
xor
outs
add
fld
push
or
(bad)
mov
ds
sub
jp
bound
ret
xchg
rcr
pop
sbb
jo
inc
sbb
leave
cs
mov
mov
mov
add
cs
or
xchg
(bad)
or
push
loope
jmp
lods
(bad)
movs
icebp
mov
adc
jp
hlt
movs
push
push
dec
es
stos
jmp
mov
add
sbb
movs
mov
and
stc
pop
add
aam
mov
cmps
push
pop
les
in
jg
outs
aaa
push
add
(bad)
scas
aas
je
inc
test
outs
pop
inc
sub
jae
shl
sub
and
mul
sub
jle
push
loopne
ss
adc
ror
xchg
(bad)
repz
xchg
iret
mov
sbb
sub
cs
pextrw
pushf
into
fwait
int
sbb
fdivr
xchg
ret
sub
mov
mov
jne
lds
bound
jp
mov
or
mov
add
popa
sub
jmp
push
cmp
xchg
and
push
xor
hlt
mov
test
mov
cs
dec
adc
mov
jmp
add
dec
jmp
ret
cmp
lds
jnp
inc
aas
arpl
jnp
js
push
hlt
jmp
mov
mov
mov
mov
dec
xor
or
mov
sti
outs
ins
cmp
jp
retf
shr
pop
or
push
aad
inc
ss
iret
add
cmp
jne
imul
enter
outs
sbb
mov
sbb
dec
ins
or
inc
adc
ror
call
and
jo
shl
dec
xor
sub
fld
push
push
push
push
sbb
test
adc
fidivr
outs
adc
ins
push
inc
xchg
mov
mov
ss
loop
fcomp
pop
dec
push
jnp
dec
push
scas
leave
ficomp
jmp
lods
lds
sub
jae
lock
sbb
rcr
cmps
inc
sub
xor
or
rcr
imul
(bad)
iret
lods
stc
sbb
fadd
bound
pop
sbb
jmp
ret
mov
inc
xchg
xor
inc
adc
int
test
or
test
(bad)
hlt
mov
mov
xor
dec
xor
xchg
retf
inc
and
(bad)
mov
push
adc
jmp
adc
jl
je
pusha
sub
jnp
pop
pop
inc
test
push
sub
xchg
(bad)
imul
test
int3
call
jns
dec
or
movs
call
cmps
jecxz
jmp
mov
in
mov
sbb
popf
enter
dec
mov
jecxz
mov
stos
cli
adc
add
jnp
rcr
jb
ret
(bad)
jl
pop
ss
div
jo
xchg
std
sbb
daa
arpl
jle
(bad)
scas
xchg
mov
rcl
into
mov
mov
fisubr
inc
and
fsub
mov
lods
jmp
mov
mov
scas
and
xchg
mov
cmps
in
mov
lods
sti
mov
or
fcomp
add
iret
xchg
push
adc
adc
sbb
inc
add
scas
hlt
fs
cdq
cli
mov
aas
jp
jp
pop
xor
mov
xor
mov
cs
sbb
mov
loopne
(bad)
stos
icebp
pop
and
hlt
loope
jmp
fbstp
pop
test
mov
mov
jae
pop
push
mov
data16
iret
xchg
and
push
(bad)
ins
outs
cmp
lds
loop
(bad)
out
es
and
push
hlt
mov
dec
daa
inc
and
(bad)
xlat
inc
cmp
sbb
fwait
(bad)
xchg
out
sbb
ficomp
dec
add
pusha
push
push
lock
cmovp
jmp
ins
ss
sti
jecxz
cmc
xchg
test
mov
jb
push
mov
imul
cmp
cmp
out
stos
fldcw
push
in
in
mov
sub
push
adc
les
pusha
or
push
and
fiadd
jnp
pusha
aaa
ret
sub
stc
adc
lds
dec
adc
cmp
mov
sar
call
cmp
arpl
(bad)
popa
aaa
jae
push
mov
call
bound
out
fidivr
ins
out
xchg
loop
cli
movs
inc
add
mov
mov
cs
popf
(bad)
mov
xor
cmp
jb
(bad)
mov
sti
push
mov
stc
and
cwde
repnz
jmp
int3
inc
(bad)
sbb
inc
adc
imul
aaa
arpl
retf
jb
push
das
inc
mov
xchg
test
sbb
and
ss
mov
test
fimul
pop
lock
js
aam
jmp
in
inc
xchg
and
and
shl
cs
adc
js
int
add
ret
xor
jl
lock
pop
enter
cld
cmp
arpl
adc
cli
sbb
mov
mov
loope
sub
loop
sbb
mov
lahf
imul
pop
inc
add
rep
ficom
inc
push
add
nop
xchg
scas
fisttp
cmp
xchg
lock
adc
mov
test
daa
jl
xchg
stc
call
repnz
loop
dec
or
adc
push
scas
fimul
pop
fdivr
mov
pusha
fistp
push
and
inc
mov
mov
into
pop
or
push
adc
retf
ds
arpl
ins
dec
sbb
aas
jnp
leave
test
push
add
dec
mov
pop
shl
push
adc
xchg
mov
test
(bad)
popf
ja
shl
push
push
arpl
mov
int
repz
xchg
push
add
jle
mov
xchg
loop
xchg
int
mov
lods
les
jmp
into
xchg
cmps
leave
mov
inc
xor
jnp
pop
or
out
mov
fwait
stc
mov
inc
fist
mov
jae
xor
lock
test
sbb
sub
mov
jb
pop
sub
or
cs
dec
inc
adc
inc
xor
dec
cwde
iret
mov
shl
imul
dec
sbb
adc
xor
inc
ret
fwait
ret
lahf
(bad)
ret
xchg
shl
jbe
(bad)
mov
call
xchg
data16
or
jge
pop
mov
mov
dec
mov
jns
in
fidiv
dec
loopne
push
cmp
ss
nop
fldcw
or
jg
sti
xchg
loopne
lods
cld
mov
add
xor
outs
(bad)
xor
push
and
sub
loope
cmp
pop
sub
and
pop
and
out
push
cmps
repnz
hlt
mov
jge
cli
stos
test
pop
sbb
(bad)
cmp
ret
mov
jge
xor
mov
cmps
nop
sti
(bad)
fimul
enter
aad
iret
jae
call
rol
push
int
in
mov
mov
cmp
mov
jns
mul
mov
pop
sub
cmp
jecxz
fdivr
adc
xchg
call
sub
mov
into
cmps
fst
or
and
and
mov
test
xchg
mov
or
lock
inc
adc
cmp
dec
sbb
inc
loopne
jno
push
sbb
inc
or
mov
cld
mov
mov
clc
nop
fldcw
mov
les
pop
or
retf
mov
jno
sub
dec
mov
xchg
pop
loop
jp
xor
push
out
adc
push
ins
sbb
jg
and
inc
and
(bad)
mov
sahf
stc
(bad)
fistp
outs
push
jp
push
clc
repz
mov
pushf
rol
test
pop
dec
jecxz
lds
xchg
ins
fnstcw
dec
loope
fdivr
jle
push
sub
jnp
pusha
add
leave
xchg
lods
int3
mov
shl
inc
adc
popa
dec
mov
stos
sub
loope
or
div
jnp
loopne
shl
xchg
test
loopne
pusha
cmp
cmc
xchg
lds
(bad)
mov
data16
or
push
out
int3
mov
mov
push
or
inc
sbb
inc
cmps
repnz
(bad)
in
popa
pop
pop
adc
cld
(bad)
int3
xchg
cli
add
or
pop
dec
out
fimul
outs
ds
out
inc
rcr
int
cld
addr16
dec
jecxz
mov
repnz
ret
mov
data16
add
jb
cld
mov
mov
jno
mov
in
data16
cmps
lock
cmps
icebp
mov
mov
jmp
ror
dec
sbb
loop
fimul
neg
test
pop
js
outs
adc
dec
jmp
js
cmc
push
aas
dec
loop
rcr
jno
sub
cmp
push
pop
pop
jp
cmc
inc
add
pop
sbb
or
sub
pop
push
sub
movs
std
scas
hlt
movs
enter
xor
in
adc
push
push
imul
stos
out
stos
cmps
or
cmp
mov
or
retf
add
xchg
imul
push
or
call
and
cmp
push
ret
inc
sbb
cmp
sub
sub
and
cmp
and
inc
aas
jnp
push
sub
cmp
sub
daa
pop
vmread
in
ins
cmp
shr
pop
xor
dec
or
(bad)
scas
(bad)
scas
dec
lahf
fistp
mov
les
sub
push
loope
cmc
ins
sbb
jmp
push
sti
jg
(bad)
(bad)
xchg
dec
cmp
pop
sbb
cmp
xor
adc
xchg
mov
ror
sbb
(bad)
test
cmp
retf
bound
xchg
mov
mov
mov
sbb
ins
cmp
jmp
dec
movs
jecxz
mov
leave
fs
and
jle
sub
cmp
inc
or
sub
div
call
scas
mov
in
test
push
xor
iret
mov
mov
shr
in
ror
ins
and
and
jl
ja
push
inc
push
pop
xor
dec
push
pop
sbb
sub
or
push
or
sbb
loope
fisub
call
out
dec
push
mov
xlat
mov
xchg
dec
cmovg
hlt
mov
xchg
xchg
loop
lock
mov
rcl
les
fnstsw
inc
gs
cmp
jb
push
lds
dec
and
cs
or
adc
pusha
add
inc
add
fwait
or
inc
push
jbe
icebp
popa
ret
pop
pop
sbb
adc
xchg
dec
push
pop
or
ins
outs
xor
sbb
sbb
lahf
fnstsw
stos
fimul
cdq
ret
popf
ret
inc
sti
test
sbb
pop
push
cmp
fsubr
xchg
enter
fidiv
cmp
sbb
sub
sbb
xchg
mov
(bad)
(bad)
scas
xchg
and
mov
ficomp
(bad)
xchg
(bad)
loopne
int3
jg
pop
sbb
mov
cmp
shr
cmp
addr16
push
sbb
add
jmp
jmp
sub
daa
out
bound
push
and
adc
pop
cmp
aaa
add
repnz
daa
pop
add
call
fistp
fnstenv
fnstcw
mov
xor
imul
call
or
aad
xlat
movs
in
xchg
mov
xchg
retf
cmp
push
inc
pop
dec
xor
xchg
loop
movs
in
fisub
stos
cld
mov
add
pushf
in
mov
adc
sbb
imul
jmp
jp
rep
jmp
(bad)
int
mov
mov
cwde
mov
mov
xor
arpl
adc
iret
mov
lods
mul
in
fist
iret
inc
xchg
mov
jo
push
push
sub
ins
pop
fs
or
jecxz
mov
or
daa
(bad)
rcl
lock
in
fcomp
cmp
push
adc
sbb
(bad)
arpl
repz
mov
loope
cmps
loop
outs
jno
fnstsw
sti
int
jmp
(bad)
mov
js
and
dec
retf
cmp
imul
es
mov
test
inc
popf
ficom
cld
lahf
not
lods
xchg
hlt
xchg
mov
cwde
cmps
stos
cwde
in
mov
mov
int3
pushf
rcr
mov
push
or
dec
mov
xchg
shl
icebp
cwde
lock
push
or
test
aad
les
imul
mov
xchg
jb
call
dec
sbb
pop
and
adc
outs
in
ret
sub
mov
pop
pop
ret
mov
push
or
mov
cmp
jp
pop
adc
dec
adc
sbb
pcmpeqb
dec
or
bound
dec
mov
fs
mov
inc
push
pop
jno
add
push
adc
imul
adc
mov
mov
sbb
xchg
stos
scas
leave
mov
ret
dec
and
cdq
fnsave
cli
xchg
rcl
add
ja
pop
push
sbb
add
push
adc
fst
ror
xchg
(bad)
or
(bad)
lea
add
ds
xlat
jmp
pop
pop
pop
imul
mov
sbb
mov
loope
ret
xchg
mov
add
pop
rol
xor
mov
inc
sbb
outs
hlt
mov
dec
pop
daa
jge
push
mov
cdq
sar
daa
push
mov
fst
pop
push
inc
or
push
nop
fstp
outs
sub
cmps
mov
dec
xor
xor
popw
push
mov
push
cmp
ss
mov
xchg
shr
mov
jns
pop
ret
mov
xchg
in
xchg
pop
mov
mov
xlat
cmc
test
and
xchg
dec
mov
test
scas
mov
lods
data16
push
sub
mov
xchg
sar
or
inc
add
dec
mov
xchg
cli
popf
fmul
jg
add
dec
adc
cmp
je
dec
icebp
cmp
inc
daa
sub
sub
mov
outs
mov
jae
imul
xor
ins
aaa
push
add
lahf
mov
jmp
sbb
into
call
fisub
push
and
dec
mov
js
push
inc
sbb
inc
in
(bad)
fwait
int3
and
leave
(bad)
shr
stos
(bad)
xchg
shl
mov
and
cmp
stos
mov
std
mov
jmp
clc
data16
ja
pop
mov
stos
(bad)
mov
ds
inc
in
inc
nop
hlt
xchg
cvtps2pi
inc
call
push
or
mov
mov
fwait
cmps
fld
xchg
mov
xchg
loopne
ror
outs
add
sbb
inc
stc
out
mov
and
clc
xor
dec
test
jae
outs
adc
stos
fist
loopne
jmp
in
out
rcl
pop
rcr
cmp
mov
or
pop
pop
pop
pop
scas
push
jno
pop
mov
mov
jle
push
mov
mov
pop
xchg
(bad)
pushf
lock
jl
ja
ins
adc
mov
scas
(bad)
pop
and
es
push
dec
loope
js
pop
sub
fisub
pop
dec
jecxz
test
inc
hlt
mov
xchg
xchg
test
add
mov
push
add
pop
(bad)
arpl
adc
pop
inc
xor
push
push
dec
cmp
popa
jmp
jbe
jg
mov
xchg
ficom
sbb
jnp
retf
stos
repnz
retf
pop
aaa
dec
rol
add
mov
fs
xor
dec
xor
and
ror
mov
sbb
mov
mov
scas
clc
xchg
rcl
mov
mov
mov
aas
jae
out
mov
adc
bound
xchg
gs
imul
push
cmp
(bad)
in
icebp
add
outs
sbb
mov
and
retf
push
hlt
repnz
xor
outs
das
mov
ficomp
(bad)
ficomp
push
pop
(bad)
test
mov
lods
jecxz
in
lods
sbb
out
or
js
dec
add
inc
sub
pop
ins
add
jne
pop
rep
loope
adc
cli
lods
in
xchg
enter
mov
mov
pop
cs
push
jb
inc
out
mov
push
cmp
xor
cmps
icebp
jae
ret
mov
sub
adc
int3
mov
mov
cld
mov
dec
adc
sub
lock
loopne
xchg
sub
cmp
xchg
ins
inc
adc
inc
retf
and
xchg
loope
jg
and
cmp
pop
pop
sub
jecxz
mov
mov
pop
inc
pop
and
xor
imul
push
cmp
adc
mov
push
pop
outs
pop
push
adc
inc
cmp
jno
(bad)
xchg
sar
xor
in
ja
cmp
mov
sub
hlt
cli
nop
fldenv
(bad)
ror
popa
cmp
shr
cs
in
cmc
mov
call
test
lods
jmp
add
sub
pop
cmp
test
mov
jmp
repnz
xor
and
adc
jmp
lahf
cld
cdq
lods
mov
cmps
pop
push
jnp
inc
adc
fild
pop
sub
js
push
pop
popa
xor
rol
(bad)
mov
jbe
aas
jnp
sti
in
sub
into
mov
cmp
ficomp
xchg
push
sub
(bad)
(bad)
pop
out
test
cs
jno
jne
inc
add
pop
cmp
xchg
aam
sbb
daa
dec
sub
clc
hlt
mov
xchg
lock
inc
add
jp
ins
lods
jg
adc
aaa
scas
in
mov
test
sbb
mov
inc
add
add
inc
push
call
cmps
mov
(bad)
test
mov
cmp
pop
inc
add
xor
int3
mov
popa
sub
xor
out
mov
push
daa
jo
outs
sbb
out
mov
and
stos
(bad)
mov
(bad)
fsub
jae
inc
invd
dec
and
gs
mov
sbb
rcr
enter
lea
fcomp
out
in
in
clc
mov
rcr
mov
fwait
jmp
mov
sbb
inc
or
rol
pop
xor
mov
out
mov
(bad)
xchg
test
cmps
jecxz
cmps
fst
adc
aad
mov
rcl
movs
std
xor
shl
sti
lods
mov
xchg
jbe
fdivr
cmp
inc
test
popf
rcl
mov
stos
rol
xchg
out
(bad)
popa
repnz
and
cli
stos
out
mov
aaa
hlt
test
ficomp
scas
shl
enter
stc
scas
hlt
xchg
shl
scas
hlt
call
scas
mov
aaa
aaa
jne
cmp
sub
pop
mov
movs
fidiv
cmps
retf
or
inc
adc
daa
sbb
bound
and
adc
jne
and
and
ins
cmp
out
dec
sbb
sbb
inc
adc
clc
pop
inc
mov
sbb
cmp
imul
mov
int3
adc
(bad)
jae
push
add
pop
add
icebp
cmps
out
aam
int
ror
dec
sbb
fstp
out
cwde
rcl
pop
adc
stc
pop
inc
mov
lea
xor
(bad)
mov
push
js
adc
xor
push
mov
fimul
movs
jmp
pop
dec
sbb
dec
sub
xchg
aam
iret
test
adc
dec
and
fmul
mov
(bad)
in
mov
inc
adc
push
push
sbb
push
ds
xchg
jmp
test
inc
adc
adc
mov
cmps
in
xchg
rcl
adc
jo
jbe
repz
in
fadd
loope
rcr
aas
inc
loope
icebp
outs
cmc
(bad)
xchg
rcr
adc
or
out
inc
adc
sub
(bad)
int3
add
sbb
jp
push
add
call
xchg
test
mov
in
sub
aaa
popa
xor
daa
push
push
adc
push
or
pop
ds
sub
xchg
aad
sub
test
(bad)
xchg
int3
(bad)
fiadd
pop
mov
(bad)
mov
out
repz
iret
stos
sti
cwde
mov
inc
xor
sbb
push
or
mov
je
arpl
sub
mov
xchg
mov
into
push
inc
and
icebp
mov
xchg
fs
adc
inc
lods
js
pop
sbb
or
dec
push
pop
ins
push
push
cs
or
push
mov
adc
xor
or
or
pop
xor
cmp
cmc
(bad)
xlat
rcr
outs
mov
imul
or
inc
or
dec
es
enter
add
mov
mov
or
(bad)
mov
xchg
xor
or
stos
out
mov
mov
movs
into
bound
dec
or
clc
movs
hlt
imul
out
mov
cmp
jo
mov
jg
pop
xor
xor
cmc
mov
cmps
ss
adc
mov
(bad)
leave
mov
sub
aas
jae
jl
dec
mov
data16
cmps
std
mov
fistp
repnz
hlt
fwait
jmp
stc
sub
inc
sbb
inc
nop
sub
(bad)
jb
inc
test
mov
lahf
retf
gs
test
xchg
jne
ss
sbb
pop
xor
push
out
cmps
fld
xchg
inc
add
jns
retfw
xchg
cld
stc
test
push
push
adc
test
push
adc
call
ret
pop
push
mov
out
hlt
mov
jmp
leave
or
dec
out
jl
adc
in
jmp
mov
inc
cmp
xor
inc
sbb
nop
aam
int
xor
push
dec
sub
add
daa
pop
pop
daa
arpl
sub
imul
repnz
cld
cdq
jmp
fwait
rol
in
(bad)
xchg
(bad)
mov
xchg
aam
sbb
aas
push
cmp
sub
ds
ror
sti
stos
test
and
xor
mov
mov
push
ret
dec
add
lahf
movs
int3
mov
mov
xchg
cmp
add
or
inc
test
pusha
push
sub
add
push
pop
add
mov
cdq
test
cwde
loop
inc
out
mov
dec
hlt
dec
add
loope
mov
sbb
pop
sbb
add
push
call
icebp
mov
mov
inc
push
cmp
in
nop
jecxz
je
push
inc
pop
cmp
jge
push
out
jno
push
cmp
fst
fidivr
bound
pop
mov
jo
ins
in
jo
xor
out
stos
lock
ds
xchg
fcom
pop
sub
inc
enter
sbb
sti
mov
ds
jmp
jo
aas
inc
sbb
push
or
lahf
mov
sar
imul
cli
mov
inc
sbb
xor
cs
xor
sub
in
addr16
js
xchg
call
push
push
push
push
pop
pop
xchg
aam
shl
mov
add
(bad)
sahf
mov
sub
mov
mov
sar
xchg
or
(bad)
or
bound
push
sbb
mov
push
sbb
and
dec
jl
je
push
push
retf
jne
dec
in
sar
jg
push
inc
or
push
movs
ds
sbb
fimul
call
adc
(bad)
lahf
ror
mov
fwait
movs
(bad)
xchg
enter
add
into
cdq
leave
lods
mov
cmps
fild
sbb
shr
dec
push
fnsave
js
and
pop
and
inc
adc
add
sub
(bad)
pushf
int
inc
dec
sub
jns
jbe
push
pop
sub
pushf
and
inc
add
adc
mov
stos
cld
xchg
inc
dec
or
inc
xor
(bad)
sahf
cdq
sbb
pop
leave
loop
fisttp
es
cmp
dec
ret
xchg
shl
ret
xchg
fsub
retf
mov
outs
xor
jbe
dec
loop
fldcw
and
cmp
test
rcr
ficom
xor
pop
push
pop
cmp
jmp
bound
xchg
aad
fild
mov
mov
mov
into
mov
movs
loope
loopne
into
dec
and
in
loope
retf
(bad)
mov
or
shr
into
xchg
int
mov
pop
sub
test
adc
in
lock
xchg
dec
inc
sbb
push
in
lahf
into
cmp
sub
push
sub
jp
ja
mov
jb
push
sub
pop
cmp
popa
inc
cs
adc
cmovnp
inc
pop
push
adc
out
fwait
test
push
mov
inc
add
xchg
aam
fisub
xor
icebp
mov
mov
sub
pop
loopne
mov
xchg
fnstsw
mov
inc
xor
lods
jmp
dec
add
cmp
pop
inc
and
aas
inc
sub
push
pop
and
ret
test
lods
xchg
add
cmp
push
xchg
lds
add
xchg
push
add
pop
inc
push
dec
sbb
dec
and
mov
pusha
adc
push
jmp
popa
and
push
inc
push
jae
and
test
mov
test
inc
adc
jbe
cdq
shl
repnz
xacquire
xor
in
ds
push
mov
push
(bad)
xlat
mov
adc
ds
int
ror
js
jl
mov
push
les
imul
jle
cmp
dec
out
jg
lock
movs
fmul
push
and
nop
enter
movs
repz
jo
into
sub
popa
ss
aas
add
mov
push
dec
xchg
cmp
push
adc
push
add
pop
mov
inc
loop
pop
cwde
shl
sti
(bad)
ficomp
cmc
mov
mov
fisttp
fidiv
cwde
fdiv
jns
pop
sbb
ja
imul
dec
outs
sbb
dec
es
stos
lahf
push
subps
je
in
int3
mov
lea
movs
lds
push
loopne
or
fcom
or
int3
adc
add
adc
aas
pop
mov
adc
add
js
and
and
and
add
out
mov
mov
shr
cmps
(bad)
fwait
mov
adc
dec
add
mov
mov
fsubr
ds
push
sbb
iret
pushf
mov
mov
lds
mov
mov
cmps
stc
mov
mov
lods
movs
push
inc
xor
dec
cmp
shr
fst
sub
dec
add
push
rcl
xchg
retf
mov
mov
adc
cmp
std
stos
fistp
lods
int
retf
repnz
xlat
gs
push
dec
push
and
pop
js
jb
jns
sub
dec
jnp
xor
and
pop
push
xor
nop
sar
mov
or
out
test
mov
hlt
pop
push
add
addr16
adc
(bad)
lods
les
jecxz
into
adc
enter
dec
loop
aam
xchg
cld
jo
jp
dec
sbb
and
push
pop
xor
xlat
call
dec
push
push
sub
cmp
sub
fcom
xchg
in
mov
mov
es
jno
stos
out
mov
mov
repz
cmps
js
sub
js
inc
or
int
(bad)
aaa
xchg
cmps
rol
stos
repnz
cwde
xor
pop
loop
movs
test
pushf
cmc
adc
sbb
loop
dec
mov
xchg
push
scas
out
xchg
cdq
sbb
dec
adc
xor
pop
xor
(bad)
mov
clc
mov
popa
inc
adc
bound
mov
xchg
enter
inc
scas
rol
xchg
ror
div
lods
gs
call
mov
retf
mov
scas
outs
stos
ret
xchg
pop
dec
sub
adc
xchg
mov
out
or
xor
cmp
push
or
aaa
sbb
jb
inc
or
mov
mov
lahf
inc
mov
add
xlat
jo
pop
sbb
mov
xchg
and
ds
push
ret
mov
add
popf
int3
xor
pop
into
repnz
mov
sbb
test
jmp
mov
rcl
loope
lock
mov
jecxz
aad
in
rol
and
pop
xor
sub
adc
push
aas
das
and
sub
push
mov
or
dec
mov
sub
sub
nop
movs
enter
shr
arpl
pop
in
in
dec
jb
pop
pop
xor
out
sbb
ins
add
sahf
fisttp
add
sub
popa
fucomp
arpl
mov
test
std
jae
and
ror
mov
jmp
push
retf
lock
aam
stc
sbb
jae
out
sar
mov
enter
imul
pop
ret
pop
ds
repnz
mov
pop
add
adc
xor
push
sbb
jbe
fiadd
nop
ret
(bad)
enter
mov
ins
xor
aaa
push
pop
jmp
into
bound
mov
and
xor
dec
pop
jbe
xor
and
jb
inc
fdiv
sbb
enter
sti
arpl
shl
scas
movs
leave
ins
sub
inc
pop
and
out
mov
stos
xlat
jo
mov
xchg
rcr
and
add
ja
sahf
inc
arpl
ins
and
push
or
add
out
add
mov
mov
cmps
lods
std
mov
enter
sbb
jecxz
into
adc
rol
clc
mov
cdq
into
or
clc
ins
mov
pop
pop
and
mov
arpl
push
sub
jmp
pusha
arpl
rol
mov
repz
je
xor
ja
lods
(bad)
mov
repnz
pop
cmp
jecxz
mov
jb
jo
loop
(bad)
leave
cwde
(bad)
push
jnp
cs
jmp
mov
daa
pop
pop
or
push
rol
cdq
ror
stos
shl
popf
test
jno
pop
mov
or
xor
and
cmp
fidivr
ins
call
jl
pop
repnz
movs
out
clc
addr16
or
xchg
loopne
arpl
arpl
sbb
sbb
xchg
xchg
mov
popa
cmp
ja
mov
stos
lods
fstp
div
add
or
push
push
push
cmp
mov
xchg
shl
jne
cmp
and
cmp
xchg
fadd
sub
pop
jmp
push
add
jae
sti
retf
push
mov
mov
inc
jne
push
push
out
iret
mov
ins
pop
js
xor
imul
xor
jno
dec
call
cmp
push
sub
(bad)
sti
lods
mov
mov
mov
jnp
jle
pushf
into
xchg
(bad)
movs
aam
dec
sbb
in
xchg
ret
xchg
rcl
sub
loope
iret
mov
fs
jo
mov
out
push
add
push
cmp
mov
outs
add
pop
jp
leave
(bad)
rcr
enter
js
hlt
movs
fidiv
jne
cmp
jnp
jae
jo
xchg
scas
ins
das
pop
push
jno
adc
push
push
add
imul
xchg
xchg
nop
ret
loop
retf
cmp
or
jmp
int3
jge
aas
jle
out
into
mov
adc
dec
adc
mov
mov
mov
fdiv
enter
pop
sub
rcl
out
popa
data16
loopne
sti
call
jmp
xchg
mov
mov
jno
xor
xchg
xchg
dec
bswap
not
dec
cmp
xor
mov
mov
imul
stc
cmp
test
cwde
push
call
mov
inc
ss
adc
sub
(bad)
fbstp
stc
xchg
jmp
and
imul
adc
xlat
xchg
mov
test
lock
sahf
mov
jbe
xor
(bad)
xchg
out
int
out
popf
push
aas
push
cmp
push
push
adc
cmp
dec
leave
(bad)
jmp
jecxz
cmc
pushf
call
fs
xchg
ret
stos
ret
mov
movs
fisttp
out
fiadd
xor
fmul
or
sub
ror
shl
jg
push
dec
add
popa
pop
sub
ss
std
stos
clc
sbb
in
adc
inc
xor
call
scas
stc
(bad)
ror
xor
adc
in
lods
cli
test
sahf
cmc
mov
bound
mov
or
stos
sub
xchg
jg
sbb
into
add
dec
or
arpl
pop
stos
je
pop
in
jae
cld
movs
shr
imul
stos
sbb
push
sbb
dec
sub
push
repz
xchg
int3
lahf
fimul
iret
mov
sti
mov
imul
xor
pop
xor
jne
ja
(bad)
div
clc
bound
loope
push
in
leave
inc
adc
add
inc
pop
adc
or
xor
sub
fwait
xchg
sub
xlat
cmp
dec
sbb
call
sbb
jge
cmp
data16
dec
and
sbb
sbb
and
push
add
ins
or
add
adc
pop
sub
dec
mov
mov
neg
or
add
dec
rsqrtps
mov
std
xchg
(bad)
out
adc
adc
pop
push
dec
fstp
xor
pop
icebp
xchg
fcomp
clc
fwait
in
mov
add
jl
pop
mov
xor
push
(bad)
nop
int3
sbb
and
mov
lds
call
jo
inc
cli
xchg
popf
stc
xchg
repnz
into
mov
stos
out
xchg
sahf
int3
cmp
xchg
ror
rcr
or
ins
push
dec
sbb
push
gs
xor
push
pop
and
mov
xchg
jnp
xor
sub
cmp
adc
std
or
inc
adc
mov
lods
cld
mov
icebp
test
push
push
cmp
mov
div
mov
or
sbb
adc
subps
iret
xchg
cld
mov
movs
loope
jp
call
ja
push
cmps
add
dec
adc
push
push
pop
jg
add
jns
adc
cld
std
xchg
fsub
and
jmp
neg
add
dec
fimul
inc
adc
test
mov
scas
js
add
dec
or
xchg
mov
add
and
mov
out
out
rol
and
xchg
mov
in
in
add
mov
and
ficomp
push
es
lods
jecxz
sti
sbb
inc
sbb
xchg
ror
call
dec
div
cmp
cmp
add
test
push
mov
pop
mov
cwde
fstp
mov
xchg
out
mov
cli
mov
fmul
mov
sub
or
jno
ret
jecxz
fcomp
rcl
xchg
aam
outs
(bad)
cs
dec
push
pop
ss
add
iret
sbb
js
(bad)
loope
fidiv
or
je
jno
or
mov
outs
push
push
xor
push
mov
add
push
dec
cld
call
cs
sbb
mov
mov
fidiv
mov
iret
xchg
ja
(bad)
in
outs
jo
inc
add
xor
imul
fisubr
in
pop
jle
cmp
inc
in
push
pop
dec
outs
aas
jnp
jne
ret
(bad)
scas
out
mov
repz
aad
int3
and
pusha
sub
loop
int
inc
dec
pop
pop
add
ins
cmp
call
push
add
xchg
loopne
aad
aad
cs
sbb
es
ja
push
ss
sub
push
jne
jle
pop
nop
cmp
sbb
dec
lock
dec
sub
cmps
pop
jecxz
enter
jg
dec
sbb
shl
pop
sbb
add
mov
xchg
retf
sub
fwait
xlat
mov
adc
jg
pop
mov
push
push
outs
loopne
idiv
call
mov
pushf
sar
fs
sbb
lods
call
adc
lock
mov
mov
lea
jp
and
es
ss
push
mov
xor
adc
inc
adc
aam
in
pop
pop
loope
ret
xchg
mov
arpl
inc
repz
pop
jno
div
outs
add
hlt
mov
aas
jnp
inc
shl
in
xchg
(bad)
xchg
call
jnp
push
sub
push
sub
jns
(bad)
shl
inc
in
push
sbb
pop
sbb
inc
sti
test
xchg
std
mov
ficomp
cdq
cmps
cld
mov
in
push
out
mov
(bad)
add
in
scas
sbb
push
ss
pcmpeqw
inc
movs
call
pushf
push
adc
cmp
(bad)
scas
(bad)
jae
push
mov
and
in
pusha
adc
mov
or
fwait
enter
std
xchg
dec
push
pop
cmp
mov
mov
xchg
cld
xchg
sti
add
add
xor
ins
xor
push
pop
add
mov
jge
push
ins
or
(bad)
mov
mov
ins
ds
sahf
jmp
into
xchg
in
inc
add
dec
pop
inc
aas
sub
jbe
xor
int
fist
ins
sub
xor
mov
xchg
out
cwde
aam
clc
lods
inc
sub
jo
dec
mov
xchg
leave
sahf
push
xor
inc
adc
test
cwde
shl
add
cmps
iret
lods
mov
and
(bad)
fcomp
pop
mov
outs
das
pop
xchg
int
cli
adc
js
dec
push
push
adc
mov
test
pop
adc
pop
add
out
xor
mov
xchg
fadd
jns
cmp
xor
add
xor
push
push
loopne
add
inc
mov
iret
outs
and
jb
(bad)
call
call
icebp
stos
sti
nop
retf
popa
sub
push
sbb
scas
test
or
popa
sbb
cdq
fistp
fbstp
fmul
(bad)
nop
cmps
mov
cwde
imul
fst
lock
aaa
sbb
cmp
dec
clc
sahf
iret
add
jle
pop
sub
sub
pop
push
push
cmp
pop
sbb
push
adc
outs
aas
push
add
sub
dec
sbb
ds
cmp
pop
sbb
jno
pop
or
mov
nop
mov
add
or
push
pop
adc
jl
jle
cmp
sub
mov
lock
add
data16
es
jne
mov
push
test
push
lock
int3
mov
mov
sub
push
adc
pop
scas
mov
mov
jns
sub
cld
lods
fmul
imul
lock
popa
add
dec
(bad)
push
aas
jnp
pushf
ret
adc
xchg
(bad)
popf
mov
mov
and
sub
cs
int
lahf
jmp
push
in
pop
inc
in
mov
sbb
inc
add
mov
add
ss
scas
cmc
mov
sub
add
es
sbb
shl
shr
add
ret
cmps
aad
jo
sbb
jmp
xchg
ret
push
mov
sub
es
push
xor
bound
in
div
xchg
mov
jecxz
xchg
sbb
dec
sbb
dec
cmps
out
(bad)
mov
xchg
xlat
mov
lahf
mov
or
and
sbb
sub
sub
lds
ins
sbb
je
cmp
jecxz
int
out
popf
inc
dec
adc
inc
adc
mov
(bad)
enter
adc
ins
cmp
mov
dec
aas
dec
inc
sub
jp
pop
sbb
dec
adc
or
call
(bad)
fisttp
pop
sbb
fwait
call
ss
rcl
repz
mov
sub
push
or
shl
cmps
je
jl
imul
mov
mov
xchg
shr
xchg
fsub
or
and
pop
jg
es
sti
test
mov
cld
cdq
fld
inc
or
inc
add
or
out
ins
loope
(bad)
xlat
xchg
test
push
pop
cmp
sub
add
sub
add
pop
cmp
ins
and
retf
sbb
push
out
lds
arpl
dec
xor
and
jmp
repnz
and
es
xor
rol
adc
cmp
ret
pop
xor
cmp
xchg
jmp
xchg
popf
mov
sbb
inc
pop
adc
push
inc
add
mov
xchg
inc
cmp
inc
add
cmp
or
push
adc
pop
adc
and
frstor
jnp
and
ror
mov
cmps
(bad)
enter
sub
jle
call
mov
fisttp
fdiv
xchg
out
mov
je
xor
mov
xchg
test
push
or
(bad)
out
mov
fwait
mov
out
jo
xchg
scas
div
rcl
xor
aad
test
pushf
mov
sbb
mov
lods
cmc
mov
xor
test
sahf
outs
push
and
imul
cmps
out
cwde
stos
cli
xchg
push
jmp
jle
push
hlt
xchg
mov
jmp
xchg
(bad)
popf
sub
inc
add
rcr
sub
push
push
ja
jb
jp
arpl
dec
div
cmp
adc
mov
xchg
shl
scas
cli
mov
ins
cmp
add
fimul
scas
mov
xor
and
lods
dec
and
lds
jo
test
repnz
pop
sub
adc
aaa
hlt
movs
les
jle
loop
retf
xchg
(bad)
fwait
dec
and
ins
cmp
sbb
std
xchg
xchg
jno
repnz
scas
imul
add
js
in
test
adc
sbb
(bad)
rcl
and
inc
sub
mov
pop
inc
xor
inc
adc
pop
jmp
mov
dec
in
retf
popf
cli
aas
mov
gs
push
adc
dec
out
xchg
in
and
das
jne
arpl
sar
scas
out
mov
in
or
js
jle
push
cs
ret
bound
fwait
out
mov
mov
adc
clc
mov
bound
push
test
adc
sbb
dec
sbb
mov
xchg
jp
pop
sub
test
jle
push
pusha
mul
pop
ret
jb
pop
out
test
repz
jmp
enter
ret
push
dec
or
push
xor
inc
sbb
xor
ja
ja
inc
or
and
imul
or
inc
ss
cmp
fnsave
ins
loope
push
adc
add
jbe
scas
sti
jp
pop
adc
data16
pop
xor
and
adc
push
pusha
sub
jp
sub
pop
push
pop
sbb
cmp
adc
popa
cmp
ficom
pop
adc
lods
out
mov
mov
and
dec
add
rcl
add
push
and
mov
mov
add
cs
cmp
repnz
sbb
or
cmps
jmp
dec
in
rcl
mov
mov
frstor
ret
mov
push
add
and
xchg
out
lds
and
outs
loopne
(bad)
cmp
sub
mov
sti
aaa
inc
cmp
push
int3
aam
sbb
lods
retf
call
fstp
enter
mov
aam
imul
xor
xchg
call
(bad)
popa
add
retf
pusha
adc
pop
movs
or
push
arpl
jnp
xor
outs
movs
loop
int3
lahf
mov
xchg
mov
nop
fsubr
cmp
std
add
mov
xlat
xchg
cli
mov
mov
lea
ja
push
mov
fwait
iret
xchg
inc
inc
adc
daa
fmul
dec
and
push
mov
xchg
les
leave
ret
test
mov
mov
loopne
test
imul
xchg
dec
cmp
pop
and
adc
retf
in
imul
mov
sahf
movs
ret
popa
(bad)
mov
or
dec
pop
not
(bad)
leave
arpl
repz
push
inc
or
ds
sub
dec
sub
jp
dec
or
push
pop
ret
shr
test
enter
xor
dec
mov
push
sub
jge
rcr
sub
inc
cmp
lahf
xor
daa
push
add
fstp
or
icebp
dec
mov
in
popa
sti
scas
pop
das
jno
dec
cld
scas
jecxz
sub
(bad)
xchg
out
mov
xchg
loope
rcl
add
call
mov
mov
mov
inc
sbb
out
(bad)
cli
mov
shl
jl
scas
leave
push
aas
pop
das
inc
pop
jecxz
push
jl
mov
cwde
cmps
pop
push
push
pop
out
dec
sbb
xchg
mov
add
xchg
push
add
xchg
ret
mov
mov
add
pop
sbb
adc
fwait
data16
int
loop
ret
xchg
loope
inc
cs
adc
mov
add
scas
cwde
lock
in
mov
xchg
ret
outs
mov
xchg
retf
xchg
aam
fild
inc
sbb
jle
inc
loopne
xchg
xchg
rol
jl
loopne
cwde
fldenv
hlt
inc
adc
and
sbb
xor
cmp
jmp
jo
or
add
out
xchg
sar
pop
in
inc
add
push
ds
sbb
dec
cmp
mov
or
mov
test
(bad)
movs
repnz
into
jb
rcr
rcl
mov
popf
fisubr
push
into
rol
or
add
inc
xchg
imul
lods
std
mov
sahf
inc
aaa
pusha
pop
retf
ror
xchg
movs
retf
ins
sbb
xor
xchg
lds
mov
scas
sti
jb
jmp
mov
jbe
pop
in
mov
cld
pusha
sub
and
push
pop
ss
cmp
inc
push
add
add
adc
je
test
mov
ins
in
xor
mov
test
xchg
sbb
sbb
lds
ficomp
pop
dec
adc
push
and
repz
dec
pop
dec
cmp
adc
mov
mov
je
pop
mov
mov
add
mov
pop
or
add
xor
or
dec
ret
dec
or
mov
(bad)
fst
imul
push
and
sbb
inc
mov
adc
int
cmps
or
jg
jle
push
pop
and
out
shr
cmps
mul
xchg
sar
inc
sub
pop
mov
jmp
pop
aas
jno
and
repz
cwde
test
aas
test
mov
add
dec
out
movs
jp
mov
dec
pop
pop
cmp
arpl
call
daa
xor
es
cmps
xor
push
out
sar
psraw
lock
mov
cmp
jle
inc
loopne
xchg
les
sti
mov
push
pop
mov
push
sub
icebp
mov
xchg
ror
icebp
mov
stos
mov
mov
mov
pop
ss
sub
sub
dec
jecxz
xchg
(bad)
mov
arpl
push
pop
jbe
dec
mov
xchg
lds
pop
sbb
add
sahf
iret
test
add
sar
popf
icebp
movs
in
mov
je
data16
bound
mov
(bad)
fdiv
xor
jne
inc
adc
dec
loopne
not
inc
xor
ret
imul
sub
inc
push
pop
call
rol
mov
popf
test
dec
sbb
pop
std
aam
shl
mov
fidivr
ins
aas
pop
(bad)
shl
xchg
pop
ins
add
mov
and
outs
push
xor
mov
add
popf
aas
inc
add
stos
(bad)
mov
push
mov
test
aaa
push
or
icebp
mov
ret
(bad)
in
jae
push
sbb
add
sub
mov
scas
cmps
scas
shr
ds
cmp
mov
call
mov
and
jmp
sub
loope
jne
push
pop
and
dec
sbb
jecxz
mov
cmp
fwait
in
lods
repnz
leave
bound
fidivr
ret
mov
mov
icebp
xchg
cmps
lock
sub
into
mov
mov
mov
rol
mov
jne
sub
jno
push
in
push
and
pop
pop
es
fnsave
loopne
push
add
pop
adc
fdiv
leave
(bad)
sti
mov
nop
ret
xchg
xchg
nop
shl
cmp
jo
stos
cli
xchg
mov
jmp
aam
out
mov
lock
int
in
and
add
ins
cmp
aas
pop
jns
imul
cli
sbb
ins
cmp
xchg
loop
mov
fcomp
sbb
ins
pop
dec
ins
sub
jl
ja
and
xor
xchg
rol
(bad)
cmc
scas
js
jl
jp
push
xor
xor
and
jp
pop
add
push
xor
push
pop
popa
sub
pusha
xor
mov
xor
and
pop
push
and
push
sbb
mov
ror
(bad)
scas
fimul
rol
dec
jecxz
call
popf
fadd
sbb
or
leave
lahf
fild
aad
xchg
mov
test
adc
jmp
mov
lods
les
inc
add
pop
sbb
loopne
in
mov
jecxz
mov
out
mov
mov
dec
and
xor
icebp
inc
adc
sbb
xor
jb
push
fcmovnu
xchg
shl
out
cmc
and
mov
not
mov
loopne
fild
test
mov
out
pusha
cmp
fistp
aad
mov
out
aaa
jne
inc
push
xchg
sar
push
sbb
mov
mov
je
call
je
push
mov
jp
and
clc
push
sbb
push
loopne
jmp
push
dec
adc
mov
cdq
jg
or
dec
pop
dec
or
pop
pop
sub
in
mov
xchg
ret
push
std
test
and
pop
sub
dec
sub
pop
xor
js
inc
mov
adc
inc
ss
pop
mov
loopne
in
int3
mov
in
cdq
leave
or
pop
jb
mov
xchg
(bad)
aad
ret
(bad)
xchg
loop
scas
(bad)
repz
pop
sub
pop
cmp
mov
sub
lds
push
test
pushf
out
jnp
inc
and
enter
mov
xchg
fldenv
fs
adc
dec
sbb
add
sti
enter
(bad)
or
inc
ds
je
dec
out
icebp
sub
aas
jae
push
or
idiv
mov
mov
mov
stos
mov
fisttp
into
xchg
shr
mov
mov
call
popf
repz
sahf
adc
sub
xor
dec
or
inc
adc
or
jl
pop
adc
les
scas
leave
mov
sbb
in
arpl
je
push
adc
jge
(bad)
sub
pop
mov
aad
cmovnp
add
ror
adc
neg
clc
mov
or
pop
fisubr
(bad)
dec
mov
js
jb
pop
rol
sbb
add
lods
nop
dec
movs
imul
cmps
imul
adc
test
ja
push
shl
xlat
push
enter
je
fdiv
pop
cmp
addr16
push
cs
or
pop
lods
popf
ins
mov
jne
pop
fild
and
jne
ror
iret
mov
push
push
jno
jb
(bad)
pushf
mov
arpl
shl
cmp
cmp
dec
sbb
fstp
test
adc
int3
imul
jmp
sbb
push
sub
es
cli
test
mov
stos
ret
mov
sub
stos
shl
inc
cmp
jmp
and
add
cmp
add
call
gs
dec
jmp
sbb
std
or
add
push
mov
aad
lds
shl
popf
fmul
mov
out
inc
call
mov
inc
jmp
fist
and
mov
jg
retf
in
mov
push
dec
sbb
rcl
cmp
dec
bound
fidivr
stos
call
mov
jl
pop
imul
outs
stos
mov
(bad)
ficomp
(bad)
jbe
arpl
dec
mov
pop
cmp
sub
jae
pop
stos
adc
rcr
xchg
aad
mov
xlat
mov
nop
int
add
(bad)
push
cmp
mov
fisub
(bad)
iret
mov
xchg
pop
in
shl
xchg
lock
hlt
cmp
ficom
out
stc
lahf
sar
push
in
jge
and
int3
pusha
cmp
xchg
inc
outs
add
fsubp
mov
sub
pop
jecxz
clc
xchg
pop
pop
adc
pop
sbb
test
mov
imul
movs
cmc
xchg
sbb
or
add
or
imul
cmp
cmp
fild
jmp
icebp
mov
in
mov
cmovge
retf
ins
add
jae
push
out
stos
movs
icebp
xchg
int3
jp
pop
std
fwait
cmps
movs
jle
dec
sbb
pop
xor
push
test
dec
adc
fsubrp
mov
cwde
inc
sub
jnp
lock
cmp
adc
and
push
push
rcr
mov
sahf
enter
pushf
rcl
cmc
or
cmps
jg
adc
rcl
xchg
repz
aaa
jb
outs
or
ds
and
(bad)
mov
adc
and
sub
add
xchg
movs
(bad)
in
or
cmp
sub
stc
mov
loope
fdivr
(bad)
or
je
cmps
icebp
add
sub
push
or
xchg
push
daa
push
adc
ss
sbb
leave
hlt
xchg
cmps
rol
jnp
aam
test
std
xchg
les
mov
hlt
aam
stos
les
mov
xchg
jns
jbe
inc
cmovae
cmps
jmp
out
inc
adc
stos
ret
add
out
add
dec
push
jle
cmc
pushf
aam
sub
mov
mov
fstp
aad
shl
dec
xrelease
xor
xchg
mov
add
addr16
and
jbe
hlt
out
mov
cwde
push
test
mov
fist
cwde
cli
cwde
into
(bad)
pop
dec
push
dec
and
sbb
jg
inc
xor
or
add
fsubp
mov
test
or
ins
jae
jns
pop
add
int3
pop
dec
sbb
sbb
and
out
stc
out
mov
nop
std
xchg
dec
imul
xchg
stc
cmp
pop
and
loope
les
(bad)
jne
cld
jmp
xor
sub
leave
mov
sub
sbb
or
dec
push
pop
movs
adc
adc
cmc
bound
das
inc
xor
fsub
mov
jae
daa
jbe
fistp
out
mov
(bad)
mov
adc
sub
das
and
push
in
cdq
loop
scas
std
sub
stc
sbb
pop
stos
pop
out
into
imul
ror
(bad)
fsub
sub
sub
dec
outs
cmp
(bad)
xchg
stc
movs
rol
cmc
inc
push
rcl
pusha
add
adc
cld
(bad)
mov
push
repz
ror
(bad)
mov
inc
in
cmp
and
and
js
push
daa
inc
xchg
mov
out
daa
data16
(bad)
add
repz
fldcw
lods
(bad)
fsub
std
shl
fidiv
outs
and
fstp
retf
pop
cmp
xchg
imul
jle
iret
mov
mov
cs
popa
test
retf
cwde
cld
(bad)
dec
inc
cmp
rol
into
cmp
add
retf
pop
call
jno
mov
in
pop
push
xor
cwde
imul
in
aad
(bad)
cdq
out
mov
xchg
fdivr
mov
outs
xchg
int
js
pop
cmp
retf
leave
mov
hlt
mov
mov
mov
add
cmp
outs
sbb
fidiv
div
in
xchg
ja
test
push
xchg
(bad)
xchg
inc
cmps
fst
adc
push
retf
sbb
push
adc
cli
add
or
test
ror
lds
cmp
sbb
cmp
xchg
or
push
pop
repz
xchg
imul
repz
cs
inc
or
mov
nop
mov
mov
pop
aas
pop
xchg
icebp
mov
and
inc
cmp
push
push
push
mov
mov
mov
cmc
pusha
sbb
mov
pop
and
pop
jmp
addr16
mov
jno
repnz
cmps
(bad)
xor
xor
sub
shr
jns
retf
mov
popf
ret
mov
std
and
add
mov
retf
add
icebp
add
or
mov
xchg
fmul
hlt
sahf
int3
ds
cmp
shl
xchg
lods
sti
loope
movs
js
add
pop
adc
ror
pop
sub
fild
and
push
mov
fiadd
in
jnp
js
outs
pop
fisub
gs
push
dec
gs
call
pop
adc
lahf
ror
mov
in
xchg
or
out
mov
jbe
shl
enter
dec
mov
ja
rol
dec
fist
add
push
cmc
cmp
(bad)
mov
and
and
xchg
ret
in
sub
or
scas
stos
jno
jmp
jle
addr16
pushf
retf
gs
sub
ins
xchg
sbb
addr16
das
dec
jmp
std
outs
adc
sbb
int
inc
sbb
stc
lods
int3
mov
push
or
jbe
jmp
jmp
jmp
movs
adc
(bad)
or
sbb
(bad)
retf
mov
mov
repz
inc
pop
and
add
clc
push
adc
es
cmc
pop
sbb
add
mov
adc
and
rcl
mov
adc
fstp
jecxz
lds
and
add
in
nop
int
push
adc
cmp
cmp
shl
xchg
dec
popf
fild
or
jge
push
cli
lods
call
cli
mov
out
cli
add
mov
hlt
mov
rcl
shr
retf
sbb
pop
pushf
xchg
mov
dec
adc
dec
sbb
loopne
xlat
or
cwde
mov
mov
movs
je
test
mov
pop
jbe
mov
xor
addr16
mov
test
and
fwait
test
not
cmc
test
fist
sub
or
mov
add
sbb
cmp
pop
adc
push
sbb
daa
in
sbb
lahf
jns
inc
add
mov
scas
inc
mov
aam
into
or
aam
mov
adc
adc
dec
adc
dec
push
dec
cdq
push
adc
xchg
mov
push
xchg
dec
adc
and
xor
clc
xchg
dec
pop
cmp
lds
dec
or
mov
fnstenv
cli
imul
dec
and
test
adc
das
jg
scas
mov
(bad)
popa
test
popa
loopne
(bad)
sbb
aas
jp
mov
sbb
mov
mov
xchg
push
mov
inc
and
inc
test
ror
push
inc
adc
xchg
mov
adc
mov
les
xor
pop
xor
inc
sbb
cmp
jne
adc
mov
test
nop
in
mov
div
jle
push
jp
sub
pop
xchg
fnstenv
cmp
inc
lock
retf
push
xchg
adc
sahf
(bad)
inc
or
dec
loope
shr
cmp
jecxz
mov
rol
ret
fwait
in
mov
nop
cld
sub
lods
repz
mov
jge
inc
mov
sbb
push
(bad)
jle
push
xor
aad
pop
or
imul
push
idiv
addr16
mov
xchg
push
daa
das
std
gs
je
inc
push
inc
in
mov
xchg
add
pop
xor
xchg
dec
pop
push
mov
push
cmc
popa
mov
push
pop
sbb
loope
sbb
iret
or
inc
lock
add
mov
xchg
jmp
sub
inc
mov
pop
ss
mov
aad
jle
ins
in
dec
int
cld
cdq
dec
cmps
out
lds
add
add
imul
loopne
push
pusha
loope
leave
xchg
test
stos
shl
and
out
fsubr
dec
or
jmp
int
mov
sbb
fs
xchg
xor
cmp
ror
fidivr
mov
cs
shl
dec
add
jbe
cmc
pop
xor
sub
arpl
mov
mov
dec
(bad)
mov
jnp
jo
imul
jp
cmp
and
dec
jmp
shr
mov
or
ja
inc
out
scas
cmps
cli
xor
mov
movs
mov
xchg
adc
in
mov
lods
jmp
cmp
idiv
push
loope
movs
hlt
outs
xchg
dec
or
sub
clc
sahf
fmul
lods
inc
jno
outs
add
je
inc
imul
pop
push
test
mov
arpl
pop
mov
fild
(bad)
sub
inc
push
pop
xor
xor
or
cmp
push
add
js
cmp
stc
inc
int
loopne
jle
mov
out
imul
pop
mov
popa
sbb
aaa
call
lods
(bad)
arpl
aaa
push
out
je
(bad)
out
in
mov
es
pop
lds
mov
jae
dec
fst
imul
push
mov
ror
sbb
pop
mov
and
xor
nop
retf
and
pop
test
mov
ins
ficom
jbe
or
dec
ret
and
das
sub
dec
mov
xor
lds
lds
stc
xor
nop
rcl
mov
sbb
sbb
xor
jbe
scas
mov
mov
xor
cld
mov
leave
imul
loopne
retf
sub
inc
mov
fld
adc
and
dec
or
and
xchg
hlt
xchg
hlt
lods
(bad)
mov
call
mov
test
mov
pop
push
jge
jbe
push
pop
push
ret
jno
and
add
lahf
mov
xchg
js
cmp
out
test
mov
test
stos
repnz
ret
mov
mov
ficomp
leave
mov
out
fsub
call
shl
mov
retf
stos
out
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
shr
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
shr
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
shr
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
shr
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
shr
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
shr
cdq
shr
not
leave
mov
shr
ret
mov
cli
test
retf
mov
loop
rcl
lds
cmc
xchg
fisub
pop
adc
arpl
jae
shl
enter
cld
(bad)
fistp
les
movs
rol
std
mov
shr
sbb
aaa
jae
inc
xor
inc
xor
push
das
jne
dec
cmps
lds
fbld
les
sti
(bad)
fsubr
push
pusha
retf
mov
popa
ss
xor
inc
push
push
adc
test
test
stos
out
stos
out
(bad)
xchg
std
push
cmp
cs
sti
push
or
mov
(bad)
pop
(bad)
pop
scas
(bad)
jge
call
jo
xor
cmp
or
ins
cmp
adc
jbe
ja
dec
call
xchg
xchg
xlat
mov
fisttp
ficomp
loope
jmp
call
cmp
inc
mov
push
push
cmp
sar
push
(bad)
xchg
stos
jmp
mov
cwde
int3
outs
sub
imul
je
loope
push
mov
add
mov
loope
cwde
repz
dec
or
jo
es
lds
ss
fisttp
enter
xor
call
pop
sbb
mov
outs
pop
jb
add
icebp
mov
pop
cmp
jo
inc
sbb
xor
inc
repnz
xchg
cld
aaa
pusha
mov
inc
xchg
ss
es
jo
dec
pop
dec
pop
pop
or
out
mov
mov
xor
jmp
ins
por
popf
lds
cmp
push
dec
daa
sbb
out
add
fidiv
xchg
rcr
adc
int
dec
(bad)
mul
(bad)
movs
mov
repz
sbb
dec
add
jp
shr
shr
mov
mov
and
fwait
ror
sbb
jmp
push
(bad)
lods
in
test
das
cmp
sbb
mov
and
movs
rcl
and
push
push
(bad)
mov
not
lods
in
push
iret
mov
cdq
xchg
les
sti
inc
nop
loopne
push
mul
mov
cmp
test
adc
dec
aad
inc
pop
or
push
mov
push
push
or
adc
push
push
and
ficom
mov
scas
int3
das
jnp
lock
jmp
ins
cmp
adc
aam
dec
and
nop
mov
or
dec
mov
int
cmp
mov
aam
add
cmp
out
pop
test
es
fisttp
mov
call
pop
cmp
xchg
rcl
fcomp
ret
push
cmp
xchg
xchg
sar
dec
les
aad
xchg
retf
fcomp
aam
leave
sahf
mov
in
inc
fnstsw
idiv
pop
sbb
bound
pop
sbb
(bad)
ins
mov
inc
mov
jns
imul
nop
(bad)
sub
xchg
in
mov
mov
mov
test
sub
xchg
gs
stos
inc
pop
retf
cmp
scas
popf
rcr
stos
jae
adc
inc
loopne
mov
jno
pop
sbb
(bad)
xchg
fstp
dec
xchg
xchg
fild
mov
jmp
adc
pop
jl
out
push
adc
pop
xorps
mov
nop
movs
hlt
outs
cmp
inc
xor
add
add
push
cmps
js
or
out
outs
sbb
pop
sbb
pop
cmc
and
cmp
addr16
out
hlt
scas
repz
sahf
cdq
mov
or
and
sub
xor
repnz
dec
lea
jmp
lods
retf
and
dec
mov
(bad)
pop
test
push
inc
in
aas
out
or
xor
add
cmp
aaa
inc
and
inc
mov
dec
fadd
and
enter
xchg
js
addr16
mov
in
ficomp
dec
adc
out
repnz
cmp
mov
mov
push
out
or
cmp
dec
adc
pushf
imul
pop
test
ds
or
push
call
out
pop
sar
call
pushf
cdq
ins
mov
bound
and
ret
cmp
addr16
push
add
inc
jmp
mov
inc
fst
push
imul
test
mov
fild
push
int3
and
dec
iret
dec
into
and
pop
xchg
popf
jbe
xchg
jle
adc
push
ficomp
jne
push
mov
push
cmc
push
and
lods
fisub
cmp
inc
lock
add
out
xchg
mov
int3
inc
lock
sbb
pop
mov
mov
mov
lock
rcl
and
dec
xor
neg
ins
mov
inc
int3
add
pop
fimul
out
arpl
xor
adc
pop
fadd
push
aam
sti
xor
jbe
jb
or
arpl
pop
sbb
fisub
pop
push
pop
xor
inc
mov
fild
daa
sbb
pop
not
jae
inc
(bad)
pop
movs
jo
movs
retfw
add
leave
or
imul
cmp
and
cli
cs
or
pop
cli
ins
add
dec
scas
jge
jge
adc
push
sbb
dec
mov
mov
enter
sahf
enter
scas
xchg
mov
jo
jg
xchg
sbb
adc
xor
adc
ds
test
aaa
dec
enter
adc
cmp
sbb
ret
adc
cmp
mov
mov
xchg
arpl
inc
mov
and
and
aaa
xor
sbb
sub
dec
fdivr
sar
cmp
and
clc
aaa
sub
pop
test
stc
outs
jecxz
mov
add
popa
push
adc
aas
sbb
inc
mov
mov
ins
xchg
jp
nop
xchg
imul
fiadd
sub
pop
mov
fbld
shl
ret
pop
repz
imul
cmp
jg
inc
xor
push
icebp
xchg
ret
push
mov
sbb
cld
and
adc
not
inc
mov
and
push
movs
jno
ss
push
push
std
das
in
xchg
xchg
imul
cdq
sahf
(bad)
pop
iret
xor
xchg
push
cmp
fstp
shr
ret
and
retf
mov
mov
fsubr
add
and
push
icebp
xchg
(bad)
mov
adc
test
cmp
sub
test
gs
arpl
popa
mov
cmps
xchg
mov
outs
scas
jl
add
add
cmp
dec
mov
add
sub
mov
je
xchg
fwait
jbe
xchg
lds
stc
push
loopne
mov
data16
js
test
ins
add
nop
fist
inc
fadd
mov
dec
mov
arpl
mul
and
das
sub
ins
jmp
mov
pop
adc
cmp
es
(bad)
cmp
cli
push
mov
mov
shl
pop
fisttp
fdivr
mov
lods
popf
stos
xchg
jbe
xchg
xchg
lods
fimul
push
sub
popf
fisttp
icebp
sub
cmp
call
pop
nop
xchg
inc
movs
(bad)
aam
adc
dec
(bad)
imul
or
aaa
loope
add
push
cmp
ror
cmp
pop
cmp
nop
fld
repnz
cld
push
loope
mov
rcl
xchg
inc
int3
push
inc
fiadd
inc
fild
and
lds
or
(bad)
out
dec
je
ret
out
inc
rol
xchg
test
rcr
adc
cmp
popa
inc
or
or
push
out
xchg
outs
repz
shld
pop
test
ja
out
jmp
arpl
shr
out
ret
(bad)
or
movs
inc
repz
jge
and
xor
movs
xchg
xchg
cli
xchg
add
mov
adc
sahf
retf
rcr
mov
xor
mov
sbb
cld
cmp
nop
rcl
repnz
call
lods
mov
and
fnstsw
xchg
fmul
pop
adc
or
call
pop
into
popf
cmps
in
adc
je
cmps
je
inc
xor
pop
dec
mov
cwde
shr
mov
sbb
cs
ret
xor
fcmovb
retf
ds
dec
cld
fbstp
sti
add
aaa
aam
xor
push
xchg
dec
jmp
daa
aam
fnstenv
push
and
cmp
mov
push
fdiv
arpl
dec
sbb
fs
cli
jle
jmp
inc
lahf
ret
outs
int
xlat
mov
imul
pusha
xor
fisttp
rol
mov
sub
cmps
iret
sub
call
jbe
in
inc
fild
cmp
pop
sub
jp
loope
dec
push
shr
jnp
jmp
ds
mov
or
ret
xor
jbe
sub
push
sbb
jp
dec
loope
pop
xchg
jecxz
fimul
leave
iret
movs
test
xchg
xor
sub
lods
int
dec
movs
fmul
div
cli
out
pop
lahf
ret
mov
jb
push
mov
movs
jnp
scas
test
push
repz
xor
lods
xchg
or
sub
daa
in
(bad)
push
std
inc
stc
lods
aad
mov
xchg
push
cmc
loop
ret
mov
scas
and
out
cld
lods
call
jge
pop
xchg
(bad)
sub
xchg
dec
scas
fistp
pop
mov
jns
xor
mov
out
fcmovb
stos
fldenv
rol
sbb
out
out
lea
dec
dec
sbb
scas
dec
inc
cmp
lods
mov
jmp
movups
inc
xchg
lds
pusha
fucom
or
cmp
je
sub
sbb
push
rcr
xchg
push
rol
call
fidiv
call
stos
sub
mov
jge
cmp
popf
imul
dec
push
test
jmp
rcl
(bad)
jno
jno
lds
mov
or
loopne
out
push
stos
inc
imul
jecxz
xchg
sbb
imul
add
fucomp
xchg
add
inc
jne
inc
dec
mov
cmp
lds
pop
ss
pop
xor
call
sti
sub
pop
imul
cmps
mov
pop
jle
add
lods
mov
push
jmp
mov
push
bound
dec
mov
retf
(bad)
cmovp
call
mov
push
cmc
push
fadd
mov
outs
add
lea
mov
dec
loope
out
loopne
cmp
into
out
xor
jmp
outs
pop
push
sub
icebp
pop
retf
test
(bad)
mov
mov
pop
push
sub
in
xchg
cmp
xchg
fild
add
inc
cmp
xchg
sbb
dec
xor
das
ja
sbb
push
mov
rol
ss
sub
dec
pop
xchg
pop
jle
mov
gs
pusha
adc
loop
stos
push
stos
aad
imul
add
xchg
ret
dec
pop
fidiv
jmp
fwait
mov
outs
ja
cli
mov
ss
movs
out
sbb
mov
ja
mov
shl
movs
ret
ins
mov
add
iret
jmp
inc
adc
retf
mov
jmp
pop
jne
mov
mov
fist
or
repnz
out
cmp
(bad)
mov
cmp
xor
ds
dec
ret
xchg
loop
neg
fwait
ins
fcmovne
loope
push
push
sar
popa
jg
movs
pop
xchg
add
int
jo
xchg
inc
(bad)
std
push
in
fld
jg
mov
mov
mov
repz
sub
fwait
or
shl
ja
fbstp
and
fsincos
rcl
and
data16
xchg
pop
cmps
inc
movs
retf
jmp
loop
es
xor
retf
push
shl
push
das
dec
mov
adc
sbb
jg
cmp
daa
xor
icebp
loope
xchg
jp
mov
xor
popa
mov
repnz
cmps
js
test
(bad)
aad
xchg
mov
jmp
lock
pop
outs
data16
hlt
inc
inc
in
scas
jecxz
test
adc
adc
outs
(bad)
aad
stos
addr16
test
sub
adc
in
fadd
imul
stc
adc
cmp
pop
xor
fnstenv
jnp
int3
cmp
or
xor
push
sbb
push
out
xchg
sbb
and
pop
shl
out
lods
mov
cld
add
hlt
ds
jnp
pop
addr16
xchg
mov
not
mov
loop
add
iret
sub
pop
enter
jmp
mov
aas
push
cld
(bad)
bound
cmp
iret
mov
fldenv
push
mov
xchg
pop
mov
cmc
mov
push
pop
cmp
gs
sub
dec
pusha
iret
je
lea
mov
or
mov
pop
sahf
mov
fucom
(bad)
mov
dec
scas
inc
sahf
mov
repnz
dec
popa
sbb
and
cmps
mov
(bad)
mov
mov
and
pop
sbb
xchg
or
push
retf
mov
jle
fwait
pop
lahf
add
push
pop
xchg
ins
sbb
or
adc
hlt
adc
xchg
cmps
sbb
add
inc
add
out
icebp
mov
dec
xchg
mov
adc
(bad)
cmps
add
adc
push
ins
vaddps
and
cld
stos
les
icebp
pop
mov
shr
div
je
(bad)
jo
pcmpgtd
jbe
xchg
nop
aaa
les
sbb
xchg
cmp
sub
bnd
cmp
jp
sbb
adc
sbb
xchg
add
sbb
nop
mov
adc
xlat
sbb
enter
es
or
js
test
cwde
mov
push
(bad)
pause
jne
jle
mov
loope
aam
cmp
das
imul
sub
mov
or
xchg
pop
(bad)
xchg
xor
sub
mov
cmps
movs
pop
fistp
stc
in
mov
add
mov
pop
push
push
sbb
mov
mov
int
out
pusha
xor
dec
outs
mov
adc
call
mov
add
inc
lds
and
jecxz
sbb
les
mov
mov
bound
fdivr
lea
scas
mov
and
push
sbb
pop
into
lahf
mov
js
fiadd
cli
sub
retf
idiv
cs
sub
into
xor
push
xchg
aad
mov
jge
movs
daa
push
add
sub
mov
xor
repnz
clc
mov
jne
mov
pop
inc
jae
xchg
add
cli
ja
arpl
add
sub
xchg
dec
test
int
jp
inc
xor
div
jne
cs
popa
stos
or
jnp
pusha
push
add
push
adc
in
ret
enter
in
fldlg2
add
xchg
and
je
pop
adc
jmp
(bad)
sub
mov
out
adc
pop
add
pusha
push
(bad)
mov
adc
jg
lods
dec
mov
aad
fdivr
push
mov
fcomp
fsubr
xchg
(bad)
jmp
ret
xchg
pop
xchg
inc
xchg
xchg
xchg
add
scas
and
test
pop
inc
or
fsubr
ss
cmp
or
add
aad
mov
xor
loop
idiv
mov
adc
and
dec
pop
mov
cmp
sbb
icebp
cdq
ins
jg
jecxz
inc
call
sub
fidivr
cdq
push
push
and
sub
(bad)
out
mov
adc
xor
(bad)
push
ins
or
cs
gs
jns
sub
les
xor
clc
movs
stc
ins
push
les
dec
mov
mov
push
fidiv
push
(bad)
hlt
leave
lods
cmc
xor
(bad)
mov
inc
mov
call
or
lods
stc
jecxz
icebp
mov
xchg
test
aad
jmp
sahf
pusha
dec
loopne
pop
repnz
fist
cli
fldcw
out
cmp
fld
inc
aam
leave
sar
xor
push
adc
or
loope
push
dec
pop
cmc
mov
pop
dec
shl
jmp
pop
mov
pop
mov
arpl
imul
pushf
sub
cwde
in
mov
call
dec
es
xchg
(bad)
shr
lea
in
xor
xchg
ss
div
dec
pop
loop
push
fstp
and
push
and
xchg
push
fadd
or
mov
(bad)
jns
data16
fisubr
aas
fwait
xchg
lds
push
jg
mov
mov
or
pop
cmp
jmp
enter
xchg
movs
push
aam
in
mov
idiv
jno
cmc
icebp
mov
scas
inc
push
adc
cwde
cmp
mov
stc
outs
sbb
adc
push
xor
sar
dec
push
mov
dec
enter
test
and
mov
inc
mov
sbb
and
or
mov
scas
jne
jne
dec
push
sbb
jno
jno
lahf
gs
stc
loop
mov
into
xor
(bad)
repnz
test
xchg
fldcw
push
or
adc
jg
call
ja
or
adc
push
sub
aas
fcmovne
sbb
out
dec
mov
inc
mov
pop
scas
int
ja
jae
(bad)
dec
inc
jp
out
push
xlat
xchg
lds
and
shr
in
ins
pop
mov
aas
jns
rdmsr
cmps
add
lods
pop
mov
mov
fsubr
lods
in
ins
retf
mov
xor
inc
sbb
push
repz
cwde
arpl
ds
cmp
in
sbb
add
imul
push
(bad)
or
mov
or
call
mov
add
(bad)
jg
jo
out
sub
jecxz
sub
dec
push
cmovnp
jae
pop
pop
or
test
in
or
jns
pop
(bad)
pusha
(bad)
cld
data16
out
and
outs
lods
je
push
xchg
push
(bad)
clc
sti
sub
or
push
imul
jbe
(bad)
xor
inc
retf
mov
inc
out
push
cmp
lods
adc
(bad)
mov
mov
xchg
in
out
jmp
dec
dec
outs
test
mov
cli
dec
fidiv
cmovo
push
dec
jmp
mov
nop
stos
wbinvd
pop
pop
cli
jge
(bad)
and
ror
cmp
fwait
idiv
imul
(bad)
in
imul
loope
shl
sbb
push
test
dec
sub
adc
dec
inc
popa
sbb
mov
pop
int
call
in
inc
retf
(bad)
retf
out
stos
das
rcl
pop
xchg
mov
and
inc
enter
dec
rcr
out
push
and
cmp
mov
outs
loop
test
rcr
pusha
std
push
jle
xchg
adc
fdivr
mov
cmp
js
ds
mov
pusha
push
mov
jge
js
add
(bad)
pop
ret
je
fsubr
and
sub
into
adc
stos
outs
dec
(bad)
sbb
dec
xchg
scas
jl
je
inc
and
aaa
ret
pop
jle
stc
retf
fs
pop
mov
inc
shl
add
mov
leave
test
imul
ret
vphaddbd
dec
add
xchg
mov
aaa
outs
pop
cmps
test
xchg
or
jge
fldenv
sub
mov
shl
mov
inc
aad
add
lahf
jae
bound
dec
cmp
fs
lods
retf
inc
rol
mov
and
movs
(bad)
popa
sub
cli
mov
inc
inc
mov
idiv
xor
add
pop
lock
xchg
imul
adc
leave
ret
adc
pop
mov
rcl
jp
(bad)
mov
mov
popf
test
xor
sbb
aad
(bad)
(bad)
mov
xlat
in
add
mov
fsub
loopne
inc
xor
pop
mov
mov
mov
push
mov
push
adc
push
rcr
sub
adc
arpl
ja
or
gs
mov
daa
dec
or
inc
inc
mov
shl
mov
dec
adc
shl
out
mov
int3
mov
dec
dec
mov
ins
pop
jmp
adc
leave
outs
jg
mov
cmp
frstor
push
mov
sbb
rol
dec
xchg
push
bound
scas
push
shl
clc
cmp
in
stos
int3
pop
mov
scas
adc
and
xchg
shr
aaa
mov
xlat
mov
mov
xor
mov
ret
inc
cmp
aad
mov
mov
sub
or
in
sbb
(bad)
lahf
loop
pop
and
out
sub
jnp
iret
push
and
add
push
fidivr
cmp
(bad)
sub
cli
mov
aas
adc
scas
push
inc
retf
shl
jge
push
push
ror
sbb
ins
into
jo
pushf
mov
dec
enter
cmc
ficomp
pop
xor
push
mov
repnz
ja
xlat
cmc
hlt
push
cmp
shl
jne
sub
jg
fwait
mov
fisubr
(bad)
js
out
xchg
iret
sbb
mov
mov
lea
sub
mov
or
daa
rcr
leave
sahf
ror
pop
xor
xor
call
(bad)
int
aas
ficom
inc
int
inc
cmp
pop
enter
leave
leave
fimul
mov
mov
push
push
inc
dec
imul
jbe
lods
aam
js
xor
xchg
jle
mov
mov
dec
scas
enter
and
fisttp
fild
jl
push
pop
cdq
les
imul
cmp
pushf
add
push
sbb
mov
es
cld
pop
or
pop
ficomp
mov
test
int3
dec
lods
jb
mov
repnz
lock
xor
les
sbb
add
pop
nop
adc
cmps
(bad)
jecxz
cld
jne
mov
cmps
das
mov
jnp
ja
mov
out
mov
and
cmp
add
sbb
iret
sub
neg
xchg
clc
cmp
adc
xchg
mov
inc
aaa
add
fs
sub
daa
ss
aas
lods
dec
jbe
mov
in
into
xor
sub
lea
stc
and
gs
or
inc
adc
jmp
xor
adc
cli
out
mov
mov
call
adc
xchg
pop
sbb
fiadd
bnd
pop
or
jle
mov
in
push
sub
cmp
push
bound
aam
and
push
lock
or
sti
adc
das
(bad)
push
hlt
mov
cli
(bad)
mov
mov
in
xor
adc
push
mov
add
jns
add
outs
out
dec
push
aam
iret
outs
xchg
fst
adc
jp
idiv
out
jl
pop
dec
cmps
push
or
xchg
test
cld
out
inc
sbb
hlt
xor
xor
sub
jo
aad
push
cmp
xor
push
dec
lods
add
or
xchg
sub
push
stc
(bad)
dec
test
jmp
add
call
test
or
pop
mov
mov
mov
fsub
adc
inc
xchg
sub
scas
sub
in
gs
sahf
(bad)
xchg
add
mov
pop
retf
ins
dec
fsub
xchg
shl
xor
test
adc
jmp
fistp
ret
inc
xchg
inc
jge
test
ror
out
pop
out
in
movs
out
inc
pusha
(bad)
jmp
dec
inc
dec
test
cs
and
jne
sub
lds
xor
mov
sub
cmps
xlat
outs
lahf
mov
adc
std
out
sbb
aad
mov
test
sbb
loop
mov
imul
adc
jp
cmps
call
dec
popf
(bad)
jmp
nop
int3
sbb
pop
nop
jne
movq
mov
dec
aaa
push
mov
adc
sub
jg
test
jno
cmp
and
je
and
sub
(bad)
stos
xchg
and
jae
fucomi
jns
xchg
jns
push
lock
iret
adc
adc
xlat
cld
xlat
mov
loop
xor
aam
mov
sbb
inc
mov
inc
call
shl
xor
cmp
sub
sub
hlt
mov
cmova
(bad)
scas
add
jmp
addr16
mov
rol
sbb
dec
stos
sub
jo
xor
stos
sbb
ds
sti
retf
push
mov
pop
push
ja
fst
or
or
jecxz
cmp
cdq
pop
repz
out
repnz
pop
jmp
push
xchg
imul
dec
jecxz
rcl
loopne
cwde
sar
dec
adc
fmul
mov
xchg
popf
jg
or
iret
mov
push
sbb
jp
cdq
scas
fsub
mov
cmp
inc
pop
inc
pusha
jne
outs
mov
outs
lock
popa
cld
or
retf
inc
pop
(bad)
push
cmps
dec
mov
cmps
jns
dec
mov
outs
jbe
and
and
sbb
adc
xlat
dec
stos
adc
mov
pushf
retf
stos
dec
mov
idiv
movs
jo
cmp
std
daa
repz
pop
sti
ins
pop
or
ins
pop
or
cmp
and
lea
sbb
jmp
leave
mov
fistp
mov
pop
xchg
fldcw
rcr
push
fmul
sub
pop
ret
mov
dec
enter
int
out
out
mov
sbb
xchg
push
int3
mov
aam
jp
(bad)
movs
repz
mov
(bad)
dec
scas
jne
out
add
dec
xchg
dec
pop
sar
push
lahf
pop
mov
mov
jmp
mov
xchg
xor
cwde
pop
daa
adc
movs
pushf
xor
fstp
cdq
add
lahf
(bad)
pop
mov
xor
lods
or
in
mov
or
mov
in
cmp
dec
fwait
push
jo
daa
mov
retf
loope
sub
lea
mov
xchg
sub
and
jle
cmp
jbe
ins
xlat
movs
pop
cld
sub
push
sbb
mov
fidiv
inc
sub
mov
in
int3
iret
scas
gs
mov
xor
push
(bad)
cmp
aas
sahf
movs
test
fild
sti
jmp
jg
shl
mov
(bad)
sbb
fisttp
push
leave
sbb
dec
jns
sub
cmp
aam
xchg
in
std
ja
repz
ins
mov
add
cmp
add
lea
ins
lahf
js
adc
aaa
mov
cmps
add
stos
push
int3
test
daa
jns
es
jp
pushf
add
sub
test
cmps
(bad)
jecxz
(bad)
out
lahf
adc
nop
xchg
xchg
mov
(bad)
js
xchg
test
add
repnz
sub
xchg
mov
dec
or
(bad)
out
addr16
push
loop
lods
mov
inc
fnstcw
xor
sbb
scas
mov
out
test
push
cmp
cmp
mov
push
lock
add
pop
(bad)
jmp
sub
xchg
gs
push
pop
dec
mov
and
fs
adc
or
add
push
adc
(bad)
xchg
into
je
clc
jne
out
lds
inc
sbb
sub
ja
pop
sub
cli
xchg
mov
(bad)
scas
sbb
sar
ins
aaa
ins
lock
sti
outs
cmp
sbb
mov
mov
call
cdq
into
test
mov
push
aaa
inc
adc
dec
push
sbb
icebp
mov
lahf
sub
dec
sub
pop
push
jmp
iret
popa
adc
xor
pop
push
dec
xchg
inc
loopne
clc
xchg
lds
adc
cmc
scas
jmp
nop
ret
popa
ss
push
push
retf
mov
pop
xor
pushf
stos
fist
fisttp
mov
jne
push
add
sub
and
add
jo
rcl
xor
cmps
repnz
test
cs
pop
out
into
mov
test
adc
outs
je
and
xchg
push
sbb
inc
xor
mov
xchg
xchg
dec
cmp
and
js
sti
xchg
(bad)
xchg
cld
cmp
cld
nop
fidiv
ss
or
cmp
inc
jmp
jmp
enter
jmp
neg
cmp
or
xlat
xchg
iret
lea
ss
jbe
popw
and
les
push
pop
(bad)
pop
add
push
mov
xor
push
adc
mov
mov
add
bound
push
mov
push
mov
adc
mov
inc
push
jge
jmp
mov
nop
int3
lahf
mov
xchg
lods
popa
clc
xchg
les
sti
mov
sub
xchg
mov
(bad)
mov
retf
bound
call
cmp
or
out
fisubr
push
push
or
in
int
stos
arpl
cdq
les
inc
cmp
lods
shl
(bad)
aad
into
push
rcr
int3
movs
int
xlat
fbstp
daa
ja
and
and
mov
stos
fiadd
add
sbb
sbb
(bad)
das
cmps
out
fstp
xor
inc
cmps
bound
data16
aad
loopne
movs
bound
mov
fdiv
aam
out
xchg
dec
xor
push
lods
sub
jbe
and
cmp
adc
pop
cli
fwait
out
mov
fwait
movs
imul
(bad)
aad
hlt
jne
aaa
jbe
push
dec
push
push
sbb
es
sbb
mov
push
and
jg
pop
sub
push
mov
stos
cli
xchg
jae
icebp
test
sub
arpl
pop
jmp
pop
xor
push
jbe
xor
das
sub
push
outs
adc
push
sbb
sub
mov
add
push
rcl
inc
loop
fcomp
(bad)
cmps
aam
dec
adc
pop
and
int
repnz
fisttp
out
scas
cmc
test
and
dec
sbb
xor
pop
jne
pop
and
xor
push
xor
and
cwde
clc
mov
fist
pushf
inc
sbb
ds
or
mov
leave
fwait
mov
mov
xchg
jp
imul
repz
xor
bound
popa
out
inc
pop
inc
add
adc
sub
sbb
adc
fs
adc
dec
sar
pop
sub
inc
sbb
push
push
xchg
cmp
jbe
pushf
mov
jae
cmc
mov
mov
inc
sbb
out
rcr
out
mov
fwait
repnz
dec
add
dec
xor
jbe
sbb
in
rol
inc
adc
mov
mov
xor
aas
scas
rol
add
hlt
jnp
xor
dec
sub
or
popf
xlat
ins
pop
inc
adc
addr16
xchg
stos
cmps
icebp
xchg
ds
loop
mov
pop
sbb
dec
retf
jns
xor
cld
adc
call
xor
pop
and
or
ror
popa
and
cli
xchg
xlat
xor
cmp
es
dec
das
pop
push
xor
sub
jl
mov
mov
nop
jmp
test
mov
jnp
sub
add
inc
sub
das
sub
dec
aas
jle
or
aas
loopne
sub
sub
lods
out
mov
xor
adc
ins
imul
add
or
jecxz
cmps
push
leave
bound
jbe
and
loope
sar
sbb
inc
cmp
out
fstp
xchg
(bad)
and
mov
mov
or
jo
add
push
adc
xor
jecxz
xlat
push
ror
aaa
mov
mov
mov
mov
lea
out
aaa
dec
and
mov
inc
add
repz
cld
sahf
into
add
cmp
cwde
cmc
mov
idiv
cmp
dec
jmp
inc
js
pop
sub
int3
fsub
fcmove
xchg
std
lea
xor
pop
enter
es
lock
or
adc
jns
data16
add
pushf
jg
inc
ss
sub
int3
mov
xchg
mov
add
loope
test
cmps
xchg
add
inc
idiv
enter
loop
push
push
or
out
sahf
leave
mov
mov
or
adc
xchg
pusha
test
inc
xchg
lds
clc
icebp
mov
pop
push
jecxz
mov
push
cmp
scas
fnstsw
frstor
pop
stos
pop
xchg
fcmovbe
stos
ret
inc
or
xchg
call
xchg
out
mov
das
jns
movs
cmc
adc
add
and
dec
sbb
loope
icebp
movs
retf
(bad)
stc
mov
fmul
dec
add
or
outs
cmp
pop
add
lahf
not
icebp
(bad)
scas
std
mov
mov
push
nop
fcom
repnz
loop
fisttp
scas
icebp
mov
fwait
movs
clc
cmp
fadd
inc
cmp
cmp
div
or
mov
jp
xchg
leave
sub
cmp
sbb
in
test
push
pop
dec
clc
pushf
dec
loopne
int3
popa
mov
enter
in
fiadd
pushf
in
movs
test
xchg
fdivr
xor
jle
bound
inc
xor
jns
iret
jae
ja
mov
cmp
xor
inc
cmp
xor
xor
pop
fld
pop
xor
lahf
int3
je
and
std
es
jno
push
test
rcl
rol
or
mov
sbb
lock
out
mov
mov
call
sub
into
div
xchg
stos
sar
mov
mov
pop
jns
jp
pop
xchg
adc
and
loope
sti
and
pop
jecxz
mov
cdq
fmul
mov
lea
ja
jne
pusha
cmp
push
clc
fisub
pop
xor
mov
retf
int
rep
jbe
cmp
cmps
rcr
ja
sbb
imul
xlat
mov
and
dec
loopne
dec
adc
aad
leave
mov
add
icebp
mov
mov
aas
imul
fcomp
rcl
cmp
adc
jno
inc
adc
loope
aas
pop
xor
jns
jns
push
push
inc
es
sub
push
cs
cmp
sbb
dec
sub
sbb
inc
add
(bad)
push
adc
outs
cmp
sub
and
pop
or
js
add
jo
ins
or
add
mul
mov
call
push
adc
push
sub
xor
int3
scas
mov
in
pop
and
jmp
mov
adc
loope
mov
mov
lea
or
jb
pop
add
jbe
inc
(bad)
and
push
sub
rol
nop
scas
mov
mov
pop
xor
lods
(bad)
mov
fisttp
xchg
inc
rol
mov
or
out
popf
clc
js
out
mov
inc
and
outs
adc
add
mov
repnz
mov
xor
sub
xchg
pushf
iret
push
lods
les
mov
in
out
out
ja
ss
inc
cmp
std
adc
sbb
pusha
cmp
addr16
sub
or
push
xchg
fmul
add
pop
ret
xchg
out
imul
mov
jns
jg
and
adc
aas
inc
es
retf
push
push
adc
push
jne
(bad)
mov
mov
leave
fs
pop
cmc
loop
cmc
data16
std
hlt
pshufw
dec
(bad)
mov
ins
ds
pop
cmp
push
and
test
cs
fnstsw
and
mov
jb
pop
sbb
ins
push
push
sub
jae
dec
adc
jbe
jge
ins
add
test
mov
aad
and
inc
sub
xor
adc
(bad)
push
mov
imul
mov
xchg
mov
int3
scas
xchg
rol
pop
sbb
fisttp
dec
or
jp
jnp
xor
jne
inc
add
dec
aas
je
push
sahf
sahf
shl
jmp
lods
scas
cwde
ret
mov
xchg
sar
daa
jno
push
push
and
popf
jne
call
ret
xor
pop
(bad)
jnp
inc
jecxz
int3
inc
popf
rcl
adc
push
pop
repz
call
stc
test
mov
outs
ds
das
and
ss
adc
mov
mov
mov
pop
mov
inc
add
inc
lods
adc
add
outs
add
xor
je
int3
(bad)
shl
mov
imul
inc
repz
retf
cs
dec
jecxz
mov
lods
(bad)
xchg
inc
push
loop
int3
inc
shl
fwait
shr
mov
cmps
mov
jbe
push
push
pop
sbb
push
cmps
add
pop
or
sbb
cs
cmp
test
push
xlat
dec
aas
jle
dec
sbb
cmp
jae
icebp
in
xlat
popf
cmps
mov
sar
xchg
cdq
lds
into
mov
mov
adc
pop
sbb
push
add
xor
push
out
sbb
outs
cmp
sbb
daa
xor
std
test
mov
mov
or
pop
or
sbb
sbb
cmps
inc
loopne
std
pop
push
ss
adc
sub
inc
cmp
ins
push
gs
xor
jecxz
aam
lds
enter
test
pushf
sar
retf
adc
mov
call
out
mov
fnstenv
dec
jge
ins
cmp
popf
push
pop
or
adc
xchg
in
mov
adc
push
pop
xor
adc
pop
pop
adc
aad
or
jge
test
arpl
cld
test
mov
jne
xchg
lds
in
xor
int
loopne
in
xchg
sti
inc
cli
mov
mov
mov
cdq
mov
sbb
repz
dec
adc
ja
imul
pop
add
je
pop
adc
fbstp
or
xor
test
test
jmp
xchg
ret
mov
adc
aas
cmp
add
jbe
ja
push
add
mov
cld
xchg
out
pushf
arpl
js
mov
mov
cmovbe
pop
(bad)
xchg
aad
dec
sub
add
arpl
sub
addr16
ins
sub
pop
sbb
add
inc
jmp
lods
iret
add
out
les
cmp
inc
call
xchg
mov
ja
aas
jns
pop
adc
mov
push
add
clc
fist
cmp
ds
xchg
xor
dec
xor
stc
xchg
mov
fist
sbb
jmp
in
pop
jns
jnp
inc
push
inc
sbb
loope
(bad)
mov
xchg
data16
cmp
inc
fisttp
icebp
mov
stos
fisubr
leave
jne
sbb
jbe
mov
stos
scas
fisub
cs
dec
int3
scas
fcomp
push
dec
jmp
aad
rol
xor
ins
out
in
into
dec
adc
pop
and
ss
aaa
push
in
cmp
and
sbb
push
jecxz
cmp
in
inc
and
in
lods
les
or
inc
aaa
pop
add
dec
or
je
jne
and
push
and
xchg
fcom
jecxz
xlat
jns
ror
rol
mov
inc
xor
pop
and
int3
cwde
test
cmp
or
push
mov
fs
jmp
push
adc
add
mov
sub
mov
mov
imul
loope
in
add
inc
loopne
mov
arpl
gs
jmp
(bad)
push
jl
mov
or
mov
aas
outs
sbb
jne
push
cmovle
push
je
dec
daa
dec
das
xor
push
rcr
es
inc
cmp
add
outs
cmp
out
and
inc
or
cmp
inc
stos
popf
(bad)
xchg
retf
repnz
inc
add
fs
cmp
and
imul
jmp
pushf
movs
sbb
mov
aas
push
ja
jl
mov
adc
retf
cdq
xlat
repnz
(bad)
retf
push
arpl
pop
cs
cmp
dec
or
sbb
neg
out
stos
out
das
data16
mov
fdivr
jo
dec
les
test
neg
mov
cld
adc
std
mov
pop
sbb
or
cmp
ja
dec
jle
popa
jmp
mov
cmps
repz
les
push
jle
push
inc
mov
add
xor
ror
jns
push
mul
test
xchg
fcomp
cmc
xchg
cmc
mov
rcr
loopne
int3
push
or
inc
test
xlat
fwait
out
fcomp
dec
push
and
push
dec
or
jb
aaa
cmps
lock
fmul
xchg
mov
pop
jp
pop
add
cwde
cmc
mov
mov
pop
pop
jecxz
cmc
data16
push
pop
sbb
pusha
push
pop
ret
aam
add
jmp
sub
pop
loop
retf
pusha
out
(bad)
mov
pop
mov
mov
rcl
jae
ins
daa
ja
mov
ds
out
xor
xor
push
rol
mov
mov
bound
and
add
jge
pop
or
rol
adc
stc
push
push
inc
sbb
pop
or
adc
retf
jnp
sub
(bad)
sub
push
sub
sbb
pop
adc
inc
sbb
sub
pop
cli
(bad)
int3
mov
lds
jg
inc
sbb
jp
mov
xchg
cdq
stos
retf
sub
push
jns
ins
cmp
fistp
dec
add
jmp
outs
inc
xor
loopne
mov
adc
push
sti
sbb
adc
imul
leave
mov
sbb
dec
sub
mov
idiv
add
fstp
or
and
in
hlt
mov
sbb
jo
inc
cmp
mov
xor
xchg
sub
pop
cmp
mov
and
les
data16
ins
push
push
sbb
cmp
clc
nop
fldcw
push
inc
jmp
xor
sbb
push
in
lahf
lds
imul
loop
scas
(bad)
xchg
rol
sti
sub
cs
push
outs
repnz
aam
and
mov
cmps
(bad)
mov
inc
xor
aas
je
leave
push
aaa
inc
push
xor
and
lods
call
sub
pop
cmps
jnp
pop
in
jmp
popa
fistp
jnp
mov
stos
aad
jmp
sti
push
mov
push
fstp
xor
inc
or
clc
(bad)
fcomp
pusha
aad
arpl
jae
out
pop
or
push
cmp
out
ret
(bad)
loopne
lds
xchg
data16
push
and
jecxz
fild
fld
push
jecxz
mov
push
cmp
cld
stos
in
mov
cmc
xchg
leave
pusha
retf
dec
(bad)
xor
push
ss
dec
adc
pop
ds
cmps
jmp
pop
or
ss
jns
jecxz
jmp
or
jo
sub
lds
sbb
pop
and
mov
add
mov
repz
fistp
or
es
and
out
(bad)
or
pop
cs
adc
push
fiadd
aam
jle
inc
imul
lds
xor
push
jg
mov
movs
lock
out
icebp
test
aas
jle
outs
cmp
pop
pop
and
pop
xor
jae
dec
xor
adc
inc
out
ret
or
and
imul
jg
pop
aam
in
cwde
ret
nop
aam
inc
and
jb
push
and
imul
nop
sti
xchg
lock
ins
or
popa
or
cmp
dec
xchg
mov
icebp
mov
ror
aam
call
mov
mov
push
add
pop
inc
pop
add
pop
xor
adc
push
and
cdq
retf
xchg
mov
stc
xor
(bad)
rol
cmp
gs
into
nop
aam
or
popf
fld
test
sahf
not
out
cmps
mov
xchg
std
stos
in
test
cmps
mov
in
ficom
test
mov
popf
into
cmp
adc
in
and
dec
xor
push
ins
sbb
mov
jns
mov
add
mov
popf
sar
jne
popa
stos
adc
push
mov
or
sub
jae
iret
add
adc
popf
hlt
mov
xor
dec
cmp
cmp
sub
adc
retf
popf
call
xchg
rol
das
sub
test
or
(bad)
xchg
shl
cmps
fimul
ret
movs
fimul
outs
cmp
mov
fwait
pop
dec
cmp
jb
push
ds
mov
(bad)
xchg
hlt
mov
jns
dec
sbb
push
loope
stos
jl
pop
jmp
div
sar
mov
lds
pop
ds
arpl
push
mov
hlt
arpl
mov
sub
push
and
std
stos
out
xchg
ja
jb
retf
mov
fstp
jne
dec
out
shr
mov
mov
fistp
inc
add
jl
ins
cmp
sti
mov
xchg
int3
cdq
lock
ds
loop
ret
ja
jl
fs
arpl
adc
in
inc
xor
sub
aam
(bad)
xchg
scas
mov
sbb
pop
pop
pop
mov
dec
sbb
out
mov
fld
nop
les
mov
dec
add
jne
xor
push
push
shr
sub
pop
sbb
cmp
or
js
sbb
push
sbb
and
jle
jo
ret
pushf
clc
inc
or
dec
or
ss
aaa
xor
add
cwde
iret
mov
xchg
mov
hlt
mov
shl
fisub
int
std
xchg
mov
lods
cwde
repz
clc
(bad)
rcr
mov
inc
cmp
sub
lock
push
ja
dec
loop
push
push
sbb
cmp
push
pop
cmp
cld
mov
mov
outs
mov
mov
push
mov
test
outs
or
pop
shl
and
(bad)
push
sbb
pop
sbb
push
(bad)
mov
mov
mov
repnz
retf
je
dec
in
test
mov
dec
and
inc
or
jge
out
mov
pop
rep
loopne
xlat
mov
dec
sbb
js
push
adc
out
jns
adc
xchg
lods
mov
mov
stos
mov
dec
push
cmp
jbe
cmps
out
out
movs
(bad)
scas
aam
nop
jge
outs
xor
xchg
fisttp
aad
adc
sbb
addr16
or
(bad)
mov
cwde
out
add
xchg
push
add
fwait
or
jb
ins
dec
mov
test
aad
fstp
xchg
je
pop
xor
rol
xchg
mov
cdq
call
cmps
pop
xor
rcr
adc
sub
push
lea
cmp
gs
imul
cmp
das
stc
int3
adc
inc
lea
mov
movs
fstp
lds
and
jnp
inc
mov
arpl
push
dec
ins
(bad)
inc
mov
pop
cld
cli
and
sbb
(bad)
jnp
fimul
fwait
xor
in
aad
pusha
adc
enter
repz
and
icebp
mov
or
scas
retf
jbe
xchg
pop
lahf
add
popa
xor
mov
enter
aam
mov
dec
jae
scas
sub
stc
inc
push
jle
popa
iret
imul
add
or
test
xor
mov
add
loope
rcr
out
push
mov
inc
dec
sbb
adc
rcr
(bad)
ds
mov
push
or
and
fdivr
ret
inc
push
dec
call
rep
mov
pusha
sub
sahf
cwde
ja
xchg
iret
jmp
scas
jge
stos
xor
test
sbb
in
xor
mov
jno
jno
es
cmps
clc
adc
cmp
popa
fistp
push
xchg
rcl
mov
add
xlat
push
pop
cmp
adc
push
adc
loopne
push
xor
shl
push
ret
mov
push
fild
pop
mov
mov
pop
aas
movs
repz
js
(bad)
ins
popa
mov
and
lock
into
push
mov
xor
push
aad
ja
xchg
fild
or
pushf
mov
out
ds
jne
in
stos
adc
adc
inc
std
sub
test
sbb
bnd
dec
push
les
sub
sub
fnstcw
outs
in
daa
dec
pop
mov
retf
and
mov
icebp
pop
loopne
sub
nop
int
fisttp
das
sbb
cmc
add
clc
xor
or
sub
adc
in
scas
mov
push
popf
add
test
adc
pop
enter
lods
push
xchg
xchg
push
adc
in
pop
add
xchg
pop
xchg
in
jo
retf
adc
add
jl
push
xor
add
aaa
cvtdq2ps
jge
ret
jbe
cmp
ror
enter
jns
and
mov
mov
add
addr16
cmp
lods
test
mov
push
cmp
sub
mov
aad
in
(bad)
rcr
cmps
add
outs
push
adc
sub
or
mov
lds
nop
add
xor
cwde
ins
ins
daa
jno
pop
ja
mov
daa
dec
enter
(bad)
fwait
ss
inc
and
jmp
enter
sbb
loop
jg
adc
dec
cdq
and
push
aam
aaa
adc
mov
xor
xor
out
ret
and
lds
sbb
cmps
outs
in
jno
fstp
adc
cmc
cmp
jp
shr
(bad)
push
cld
and
pop
adc
xchg
cmps
outs
sbb
xlat
mov
ss
cli
and
or
repnz
data16
stos
push
inc
pop
or
popf
movs
pop
aaa
and
or
sahf
leave
sti
lods
and
or
cmp
hlt
mov
lods
pop
imul
fcomp
push
push
xor
mov
jle
or
xchg
icebp
lock
dec
pop
inc
mov
push
rcr
ins
sbb
inc
out
or
(bad)
rcr
(bad)
push
test
(bad)
outs
nop
cmps
xchg
mov
mov
xchg
cmc
push
pop
and
lods
inc
scas
mov
repnz
(bad)
stos
jmp
cli
and
stos
mov
add
mov
pop
jecxz
xor
pop
arpl
ret
imul
push
hlt
outs
sub
out
pop
cmp
aad
pop
and
pop
adc
movs
inc
mov
jnp
add
dec
cwde
inc
mov
jns
fwait
and
cld
sub
mov
mov
jae
xchg
pop
jmp
jge
shr
sub
cmc
mov
sub
test
out
nop
jae
aas
mov
call
sbb
in
jge
sub
test
xchg
retf
(bad)
jae
(bad)
fist
push
fxsave
(bad)
ds
add
xchg
in
push
sbb
mov
jo
sbb
push
xchg
and
fld
adc
cmps
or
out
imul
popf
cli
movs
or
xor
mov
mov
clc
retf
add
sub
xor
fcom
aad
ret
inc
push
push
shufps
mov
cmp
dec
cmps
inc
cdq
cwde
ins
mov
push
sbb
cmp
js
dec
mov
std
ins
or
jp
push
int
xchg
pop
imul
sub
call
sbb
sub
mov
clc
div
mov
icebp
ret
(bad)
shl
test
cmp
jge
xor
and
test
test
dec
in
test
stc
sbb
js
ins
add
xchg
shl
ds
adc
int3
and
popa
ja
mov
inc
or
mov
mov
aad
mov
dec
inc
dec
sbb
or
xor
pop
out
xor
xchg
pop
imul
pop
fistp
mov
dec
mov
add
inc
mov
or
mov
or
and
jb
push
inc
adc
sub
js
aas
(bad)
call
int
add
ror
adc
mov
mul
mov
idiv
adc
enter
(bad)
(bad)
aas
(bad)
mov
inc
call
inc
out
sbb
addr16
mov
xor
ds
inc
mov
xor
cs
sub
pop
inc
push
test
push
sbb
(bad)
jbe
xchg
xchg
cmp
mov
stc
push
cs
and
push
stos
(bad)
and
ds
stc
popf
inc
push
test
das
pop
rcl
sub
repnz
pop
mov
sbb
popa
jle
cmp
fild
xor
int
dec
sbb
mov
adc
enter
cmps
pop
sub
mov
aaa
(bad)
and
ins
mov
retf
xchg
call
pop
fisub
out
lds
cmp
int
addr16
leave
push
sbb
bnd
fdiv
push
mov
data16
fistp
arpl
iret
cmp
cmp
dec
mov
lock
add
jl
jp
dec
cld
mov
and
fistp
inc
in
icebp
jmp
retf
loope
or
jp
inc
adc
mov
das
inc
in
ret
cmp
push
push
add
test
xchg
gs
jae
cmp
pop
xchg
mov
jmp
adc
add
pop
jge
push
pop
xchg
xor
mov
push
call
(bad)
adc
(bad)
fcomp
std
jg
xor
loope
mov
neg
xor
cwde
std
sub
into
cld
cmp
mov
cs
out
ja
dec
mov
cmp
jb
or
arpl
imul
inc
add
lods
xor
jne
pop
jbe
adc
pop
repnz
pop
push
icebp
xor
xchg
popa
aaa
pop
cs
or
xor
sti
mov
das
mov
outs
imul
arpl
jecxz
gs
ins
ret
retf
jg
and
cmp
cmp
jl
das
retf
xchg
or
sbb
lahf
sbb
push
adc
neg
jb
js
or
lds
fadd
mov
xor
or
(bad)
gs
jmp
push
sar
aas
xchg
mov
jl
pop
jge
dec
dec
adc
mov
inc
iret
test
or
lods
pop
cmps
mov
addr16
sbb
cmp
fisttp
test
pop
dec
mov
xchg
mov
iret
pop
mov
bswap
loopne
popa
and
push
pop
rcr
in
icebp
pop
je
jl
xchg
mov
inc
jp
inc
mov
and
mov
cdq
add
ss
push
out
dec
xchg
rep
stos
cmp
xor
jle
inc
jno
cld
jnp
jmp
push
loop
mov
sub
mov
pop
dec
or
mov
mov
dec
dec
inc
out
imul
adc
ficom
sbb
in
xchg
cmc
add
mov
fmul
mov
adc
inc
dec
out
pop
mov
jb
scas
dec
or
mov
fdiv
(bad)
test
jnp
push
pop
scas
or
jae
sti
out
js
cwde
loop
xchg
ror
jns
js
and
sbb
mov
aad
dec
xor
inc
outs
mov
aam
pushf
inc
mov
aam
ja
in
push
xchg
test
sbb
mov
sbb
cmp
inc
data16
js
pop
adc
icebp
pop
dec
ins
mov
ret
mov
pop
movs
sub
mov
loopne
jge
fwait
jp
dec
pop
les
push
inc
pop
sub
je
dec
adc
mov
mov
stos
lods
fst
cdq
jnp
push
sbb
mov
mov
es
lds
xchg
jmp
jecxz
xlat
std
inc
pop
jne
sub
cmps
and
push
stos
fisttp
and
inc
xor
pushf
stos
cwde
imul
cli
mov
sbb
mov
ja
mov
jmp
arpl
repnz
mov
sub
pop
add
std
leave
push
mov
cmp
pusha
ror
call
xlat
into
es
or
mov
cwde
mov
data16
test
in
hlt
adc
xchg
or
xchg
pop
jmp
jle
lds
pusha
mov
push
or
pusha
mov
adc
ja
sbb
push
xchg
jl
mov
mov
inc
ss
data16
mov
inc
jns
add
retf
(bad)
and
xor
xchg
adc
fnstenv
adc
xchg
lods
icebp
ss
lahf
in
imul
mov
and
mov
repnz
push
call
sar
out
out
(bad)
aaa
xor
push
push
xlat
mov
mov
add
inc
(bad)
lods
sbb
fld
(bad)
daa
(bad)
xchg
dec
inc
sahf
xchg
bound
stc
gs
xchg
xlat
mov
jns
repz
movs
xlat
shl
push
pusha
xor
and
mov
add
inc
repnz
arpl
inc
out
aam
aaa
imul
xor
shl
outs
mov
jge
sbb
inc
in
push
sbb
cmp
stos
fidivr
cdq
sbb
daa
xor
xchg
push
ss
les
push
and
out
stc
fwait
(bad)
not
in
pop
(bad)
(bad)
repnz
and
push
shr
pop
push
cdq
cmc
js
cmp
in
repnz
mov
dec
pop
mov
push
mov
imul
sub
mov
in
sub
inc
cli
add
cmp
popf
stc
into
nop
jp
sub
sbb
mov
xor
outs
imul
sar
mov
xchg
sti
pop
push
cmp
aam
outs
das
out
sub
outs
aad
mov
cld
sub
test
cmps
lahf
pop
loopne
ret
outs
or
jp
pop
push
add
fld
xchg
jp
fidiv
fbstp
sbb
xchg
xchg
hlt
push
add
out
sbb
mov
jns
(bad)
idiv
inc
xchg
pop
shl
cmp
dec
dec
sbb
(bad)
jle
add
cmp
rcr
iret
inc
(bad)
mov
mov
mov
out
fstp
popf
es
push
je
cmp
ins
daa
lock
and
in
sub
stos
xlat
xchg
adc
jmp
dec
out
stos
mov
pop
mov
jmp
push
rol
push
mov
xchg
sub
sbb
sub
mov
fisttp
inc
or
inc
mov
sbb
inc
cmp
das
jge
pushf
push
and
mov
in
jne
out
lods
or
fstp
sahf
mov
enter
sub
adc
xchg
les
and
inc
mov
sbb
fwait
mov
push
and
popf
sbb
rcl
xchg
adc
jnp
inc
pop
call
in
test
sub
sahf
aaa
mov
out
jg
jb
out
inc
sub
(bad)
(bad)
call
pop
and
sub
sbb
jb
xchg
adc
cwde
mov
arpl
and
add
cmps
fs
mov
pusha
and
aaa
int
pushf
pop
aas
daa
pop
mov
mov
jnp
mov
dec
out
cld
gs
mov
mov
dec
sub
mov
mov
add
jle
push
lock
cld
shl
or
pushf
push
xor
loopne
outs
aam
fiadd
aam
cmps
(bad)
in
shl
and
sbb
or
sbb
inc
jl
dec
push
sbb
or
mov
push
cmp
adc
mov
pop
sar
rcr
retf
std
jmp
rcl
jnp
mov
push
pop
add
cmc
and
bsr
dec
pop
xlat
xor
into
int3
pop
lds
loopne
sub
test
into
push
shl
inc
popf
outs
cmps
test
mov
pop
mov
pop
shl
dec
outs
xchg
xchg
shl
clc
push
lods
push
pop
xchg
mov
sbb
xor
sbb
jmp
loopne
push
jmp
jl
call
xlat
clc
push
sub
movs
movs
test
push
cmp
push
xlat
retf
lods
fwait
cmp
jmp
test
xchg
out
sar
dec
call
xchg
imul
je
cdq
icebp
in
shl
xor
sub
sbb
int
lods
add
pop
ret
rol
fist
jb
sub
lods
sbb
dec
test
in
lods
cmp
pop
jne
pushf
mov
sbb
inc
pop
mov
je
mov
xor
mov
mov
mov
sub
mov
cmc
mov
adc
enter
pop
sub
popa
ret
push
xchg
sub
in
mov
int
jnp
inc
xchg
rcr
test
and
hlt
jns
and
inc
lods
retf
popa
xor
in
nop
dec
adc
out
fincstp
cmps
fistp
test
arpl
into
cmc
jg
cmp
add
and
std
mov
fdiv
or
fisub
test
fsubr
je
pop
xchg
push
ss
jb
rol
gs
sar
adc
(bad)
(bad)
inc
mov
pop
jb
and
test
ret
adc
cmc
jle
mov
dec
or
cwde
dec
xor
mov
sahf
mov
stos
xchg
cmp
push
mov
aam
xchg
push
lock
or
fnstcw
pop
(bad)
sbb
data16
in
fmulp
fwait
jg
and
test
jecxz
dec
test
adc
xacquire
adc
clc
test
pop
scas
push
mov
push
into
jge
pop
jno
pop
pop
jmp
ins
ja
loop
std
(bad)
ins
aas
imul
mov
fsub
inc
inc
sbb
xchg
jge
xchg
or
xor
adc
test
aaa
pop
mov
xchg
ins
sbb
in
pop
imul
mov
push
mov
mov
jmp
sar
ret
push
cmp
arpl
mov
xor
xor
int
mov
push
push
bound
fsubr
(bad)
jmp
xchg
outs
imul
stos
(bad)
fcom
xor
mov
or
xchg
jmp
or
pop
repnz
scas
jle
retf
mov
loop
xor
xor
push
xor
xchg
jns
mov
mov
loopne
ret
push
ss
retf
adc
mov
jg
repnz
fwait
and
push
jae
pop
xchg
and
lahf
jmp
push
popf
xchg
mov
or
das
outs
push
into
dec
int
jns
call
xchg
xchg
pop
gs
cwde
mov
pusha
(bad)
fdiv
call
stc
out
inc
push
or
pop
pop
add
cmp
jmp
fwait
pop
loope
ja
sbb
push
jp
dec
popa
cmp
movs
mov
jmp
lods
movs
movs
add
(bad)
loopne
jle
daa
hlt
mov
add
dec
jmp
dec
inc
cmp
(bad)
sbb
(bad)
loopne
(bad)
stos
dec
push
cdq
sub
repz
jle
cmp
lods
sub
mov
inc
test
xor
stc
dec
in
mov
mov
call
mov
push
repz
pushf
dec
scas
in
(bad)
pop
jns
and
ds
push
mov
jae
sub
fs
pop
inc
jno
and
adc
mov
repnz
outs
out
jecxz
fwait
and
xchg
in
in
ins
outs
pop
xor
ret
es
push
ja
dec
test
pop
cdq
data16
dec
ss
cmps
adc
sub
mov
xchg
fiadd
retf
xor
ret
or
mov
mov
out
out
lea
cmp
push
or
scas
adc
out
dec
loope
jl
sbb
pop
mov
xor
pop
or
(bad)
mov
push
jnp
inc
into
sti
sub
add
adc
inc
sar
shl
jno
jae
cld
add
jns
adc
or
(bad)
imul
and
cli
outs
xor
mov
rol
xor
dec
pop
mov
jle
cmps
or
mov
into
sar
or
add
dec
test
ret
adc
cmp
push
inc
fidiv
mov
jb
pop
ret
xchg
(bad)
cmp
scas
and
ja
mov
(bad)
jnp
inc
xchg
xchg
xchg
pop
out
nop
xchg
stc
enter
(bad)
mov
fisttp
or
gs
popf
shl
(bad)
jo
shr
call
dec
adc
inc
repnz
xchg
adc
(bad)
cmp
xor
out
cwde
inc
push
jecxz
jae
lds
cli
adc
push
dec
pop
mov
inc
test
xor
int
out
sti
stos
fidivr
mov
pop
and
(bad)
int3
ins
xor
mov
mov
call
pusha
xor
pop
dec
jns
rcl
jne
movs
ror
cdq
push
mov
dec
int3
and
mov
out
jecxz
jns
pop
dec
sub
outs
sub
mov
cmps
(bad)
ror
rcr
lahf
les
fmul
iret
outs
mov
imul
xchg
outs
add
sbb
mov
cwde
sbb
rol
out
fdivr
dec
sub
sbb
adc
and
cmps
mov
jne
daa
push
data16
jg
stos
int3
div
xor
dec
gs
outs
lods
push
xor
pop
xor
adc
jp
or
jne
sbb
xor
pop
lods
ins
and
xor
das
and
inc
push
push
stc
outs
or
add
inc
adc
(bad)
cmp
and
enter
cld
xor
pop
add
iret
loope
leave
repz
xor
hlt
xor
popa
cli
inc
adc
pop
xchg
std
mov
adc
test
or
sbb
mov
xchg
jo
sub
jmp
mov
fs
call
mul
mov
arpl
and
jo
aaa
and
ins
pop
ret
xchg
stos
cmps
jecxz
(bad)
cmps
inc
das
call
or
xchg
add
test
fimul
jecxz
adc
add
test
jge
xor
jno
cmps
lock
mov
xchg
push
dec
call
mov
push
movs
(bad)
pop
push
shl
inc
into
mov
mov
cmc
pushf
sub
pushf
out
push
push
xchg
(bad)
je
xchg
ret
add
inc
add
mov
cmp
and
enter
pusha
repnz
fisttp
fs
repz
std
and
je
leave
jg
scas
jmp
in
call
test
pop
push
hlt
ins
cmp
sub
fcomp
sbb
dec
adc
xchg
and
pop
outs
push
jb
xchg
rol
ss
cmp
dec
sar
or
arpl
not
inc
push
aam
(bad)
mov
inc
das
or
sub
mov
pop
or
pop
or
lea
mov
push
test
mov
leave
dec
sbb
jns
retf
icebp
cmps
rol
rcl
pop
adc
push
and
add
fisttp
adc
sub
cmps
out
or
mov
xchg
mov
or
mov
cmps
loop
inc
stos
mov
and
or
dec
test
pop
adc
cmps
push
add
call
(bad)
(bad)
lods
push
lds
push
dec
add
cdq
sub
es
cmp
xchg
adc
dec
sbb
(bad)
loop
jmp
daa
dec
push
xor
call
test
mov
mov
fcomp
mov
imul
cmp
inc
sub
(bad)
out
jnp
jae
imul
add
nop
xchg
mov
xchg
xor
(bad)
mov
push
inc
mov
inc
sbb
mov
(bad)
xchg
ss
les
enter
mov
jns
mov
and
inc
xor
push
mov
and
cld
mov
das
push
retf
scas
(bad)
clc
scas
sbb
leave
cwde
and
addr16
inc
repnz
int
jo
(bad)
test
dec
sub
rol
cmp
push
push
test
test
je
fmul
push
out
fsub
xchg
mov
in
adc
mov
pop
jbe
pushf
sar
bound
shl
cmc
(bad)
xlat
mov
xor
pop
push
imul
mov
mov
or
popf
out
mov
cwde
xchg
mov
ja
xlat
cdq
cmp
jge
js
adc
(bad)
lods
es
xchg
jae
popa
xor
xor
push
and
jo
retf
icebp
inc
adc
add
xor
xor
out
xor
push
jnp
(bad)
xchg
add
add
pop
adc
xchg
ret
lds
jae
xor
mov
icebp
push
push
pop
dec
push
(bad)
mov
loop
das
imul
(bad)
xchg
(bad)
mov
loop
es
je
imul
fwait
or
xchg
mov
push
add
dec
push
sti
scas
into
dec
imul
add
pop
cs
and
mov
fisttp
sbb
call
jno
jp
retf
cmp
fcomp
and
dec
sbb
push
xchg
(bad)
mov
push
pop
or
mov
mov
jns
add
dec
pop
(bad)
mov
pop
xor
push
(bad)
(bad)
or
fsub
(bad)
mov
dec
mov
les
ret
setle
jmp
into
pop
jns
mov
mov
retf
push
cmp
xchg
rol
and
cmc
and
mov
pop
pmaxub
push
je
mov
fistp
int
cwde
enter
inc
push
or
lods
stos
push
xor
loop
mov
out
hlt
ret
les
in
xor
ins
and
lds
sbb
cmp
sbb
div
add
nop
loope
pop
stc
adc
pop
jg
cwde
iret
sbb
pop
add
and
adc
jmp
mov
out
jg
jmp
xchg
lds
cmp
adc
xchg
and
mov
test
xor
or
lock
fidiv
sbb
div
dec
stos
fimul
inc
imul
rcl
push
xchg
aam
dec
sub
outs
mov
mov
lods
es
xor
je
cmc
mov
mov
lods
call
sub
loope
mov
sbb
xchg
rcl
jge
es
add
rcr
div
retf
xchg
ja
mov
ss
int3
ficomp
xor
adc
nop
rol
mov
push
push
scas
dec
sbb
addr16
in
fcmove
xchg
push
adc
push
xor
mov
ds
mov
adc
aaa
icebp
mov
aad
mul
xchg
mov
mov
sbb
shr
jbe
xor
adc
jbe
lods
(bad)
mov
movs
pop
add
out
mov
pop
cmovnp
enter
(bad)
test
(bad)
lock
js
mov
jno
movs
ja
inc
and
out
call
popa
adc
mov
adc
les
push
cmp
mov
int3
movs
and
jg
ja
outs
(bad)
out
mov
sub
dec
add
mov
adc
fwait
repnz
out
inc
addr16
lock
dec
or
aad
mov
mov
int
out
mov
sbb
sub
call
out
cdq
rcl
mov
sub
xor
xor
jno
(bad)
(bad)
fimul
pop
popa
xor
mov
adc
adc
nop
in
sbb
nop
(bad)
(bad)
stc
mov
pop
xchg
pop
sub
fs
and
add
and
or
xor
pop
add
sub
pop
inc
pop
push
cld
cmps
push
jnp
imul
cmp
inc
xchg
fucom
in
fbld
fisubr
dec
not
outs
jp
in
push
std
pop
dec
pop
sahf
not
push
inc
cmp
push
or
fstp
loopne
or
xchg
add
inc
add
icebp
mov
icebp
test
aaa
ins
es
mov
add
cld
mov
xchg
cmp
mov
cmp
ret
mov
push
inc
sub
jg
adc
push
aad
shl
push
arpl
push
add
mov
pop
or
cwde
dec
je
push
cs
mov
jmp
sahf
leave
mov
cmp
lods
call
cmp
loope
(bad)
lods
call
xchg
mov
mov
mov
xchg
push
je
imul
fwait
call
int3
push
and
pop
pop
sub
into
dec
cdq
in
mov
adc
je
ret
lds
shl
js
dec
cmp
xchg
xor
jne
div
pop
pop
fstp
inc
test
inc
jbe
jle
push
loopne
fild
cmp
test
add
bound
xor
test
test
movs
loope
jne
mov
push
adc
leave
add
test
xchg
sbb
mov
fbld
clc
mov
call
or
hlt
movs
pop
cmp
push
popa
or
cmps
(bad)
xchg
cld
mov
add
mov
imul
adc
xor
push
loope
sub
test
aas
jns
call
adc
jae
adc
adc
xor
xor
into
jl
sub
imul
cs
mov
shl
ds
jno
stc
(bad)
punpckhdq
jnp
(bad)
xchg
(bad)
out
or
jne
jle
gs
arpl
push
sub
jl
pop
push
sbb
and
xor
push
test
loope
and
mov
xchg
pop
inc
das
mov
(bad)
pushf
add
aam
jns
jnp
sbb
test
inc
adc
sub
xor
ret
mov
xchg
xchg
dec
movs
push
(bad)
fnsave
scas
xor
jnp
xor
dec
push
ss
add
cmp
push
adc
(bad)
lahf
scas
or
pop
popa
xor
mov
fcomp
pop
cwde
adc
pushf
hlt
adc
add
pop
inc
fs
(bad)
out
pushf
enter
push
dec
pop
or
or
in
fwait
sbb
outs
cmp
fwait
mov
adc
jl
jnp
fild
ins
or
popa
add
add
cld
lods
(bad)
jo
loopne
xchg
jecxz
fsubr
mov
mov
mov
clc
mov
sub
cmp
dec
xor
cwde
sbb
fimul
lea
xchg
add
mov
dec
dec
repnz
dec
sub
add
(bad)
aaa
jns
loop
ret
dec
sub
add
loopne
dec
sbb
cdq
js
push
push
test
sbb
pop
xor
outs
es
lods
dec
or
les
out
sbb
push
dec
jmp
pop
jl
outs
mov
hlt
sbb
cmps
in
add
fcom
imul
mov
cmp
arpl
int
mov
iret
cmp
jle
push
xchg
movs
and
gs
jmp
imul
add
popa
xor
and
pop
adc
mov
mov
push
mov
inc
pop
sub
stc
cmp
call
shr
xor
sbb
inc
stc
cmovp
into
call
push
add
add
fistp
jae
xchg
loop
sbb
dec
sbb
cmp
cmp
push
add
mov
push
and
mov
addr16
push
cmp
dec
and
std
es
(bad)
lods
icebp
xchg
jbe
loop
mov
mov
or
push
xor
push
adc
(bad)
outs
aaa
sub
test
iret
xchg
cmp
mov
scas
or
stos
aam
jle
nop
jecxz
and
les
add
movs
mov
inc
sub
mov
data16
cmc
in
xchg
test
test
and
mov
add
cmp
xchg
mov
fidivr
cmps
out
sbb
sub
sti
or
and
mov
in
mov
pop
push
push
jns
pop
inc
(bad)
mov
mov
sub
cwde
repnz
push
and
or
mov
cli
mov
push
test
nop
retf
pop
ja
aam
(bad)
adc
out
hlt
ret
les
pop
outs
and
in
inc
adc
and
jo
cmp
js
lahf
out
scas
pop
hlt
push
inc
pop
arpl
push
addr16
das
ja
adc
cdq
sbb
add
out
pushf
fcom
lods
fisttp
mov
mov
and
shr
test
mov
adc
fidivr
outs
into
iret
mov
and
test
inc
adc
cs
and
mov
test
mov
test
dec
or
adc
push
shl
or
test
gs
data16
call
push
pop
icebp
mov
int3
mov
sbb
push
dec
sbb
mov
mov
ret
test
mov
aaa
popa
and
or
lods
js
ins
and
pushf
(bad)
sbb
imul
fmul
ins
daa
push
pop
jl
fld
leave
pushf
sub
frstor
loope
add
mov
loopne
inc
xor
int
and
push
cmp
mov
mov
add
fcomp
mov
lods
jmp
ret
sbb
movs
repnz
lods
sub
loope
ret
sub
pop
pcmpgtb
pop
mov
cwde
orps
cs
adc
fld
mov
jo
add
popa
pop
sbb
fwait
sahf
(bad)
mov
into
cmps
and
inc
or
fmul
sub
fs
sbb
popa
mov
movs
int3
movs
cmc
adc
jae
inc
push
jnp
retf
stos
sbb
dec
daa
jno
ret
and
cmps
lock
cmp
xchg
xlat
jecxz
push
divps
pop
push
and
gs
rcr
and
pop
push
jle
sub
rcr
pop
sbb
daa
popa
and
mov
mov
add
push
adc
pop
xlat
mov
inc
push
ror
ds
std
retf
popa
and
jg
fidivr
sar
sub
dec
and
add
jl
rcl
dec
sbb
js
jnp
gs
popa
(bad)
mov
mov
mov
sti
stos
enter
pop
adc
nop
fbstp
push
push
pop
rcl
dec
outs
sub
outs
or
popf
mov
xchg
(bad)
xchg
push
aas
xlat
mov
inc
or
add
in
jns
jp
nop
mov
sub
gs
shl
in
mov
mov
lahf
out
pop
or
jno
push
dec
adc
dec
dec
sub
cli
cmp
xor
ja
repz
jno
call
or
mov
inc
aaa
pop
cmp
dec
adc
(bad)
enter
dec
cmp
mov
push
pop
pop
dec
adc
mov
das
push
and
maxps
jbe
mov
loop
xlat
ss
adc
(bad)
jmp
aad
adc
in
inc
sbb
or
test
mov
mov
es
dec
sub
cli
pop
xor
popa
cmp
mov
aam
push
cmp
sti
mov
or
test
adc
or
div
ja
mov
out
add
imul
cmp
sti
mov
push
cmp
stos
aad
out
test
mov
pushf
mov
dec
push
push
call
ss
cmps
xor
and
xor
dec
sbb
inc
adc
push
inc
loopne
out
xor
lock
fist
dec
in
sbb
cmp
xchg
ret
push
jecxz
int3
popa
jge
cmp
mov
and
pushf
xchg
pop
jmp
clc
movs
pop
repz
fdivr
jo
mov
adc
aas
mov
xor
pop
stc
mov
fdivr
js
in
inc
int3
ins
cdq
rcl
cmp
jle
(bad)
mov
scas
imul
inc
or
(bad)
call
mov
addr16
or
imul
or
std
lods
xchg
mov
retf
jbe
cmp
pop
in
adc
mov
into
push
dec
and
adc
outs
sbb
arpl
je
jb
inc
loop
hlt
popf
cli
scas
ficomp
push
jge
jbe
arpl
add
inc
add
lds
call
mov
mov
xchg
(bad)
sbb
retf
(bad)
jecxz
retf
pushf
fnsave
loopne
into
imul
or
jnp
dec
add
jge
outs
sub
pop
std
scas
add
leave
add
push
cmp
aaa
fcom
adc
aad
dec
sbb
add
mov
inc
add
leave
xchg
mov
mov
outs
sbb
pusha
je
push
adc
mov
in
lods
les
in
loopne
xor
jp
xor
sbb
jmp
mov
add
sub
mov
mov
or
pushf
jmp
mov
fdiv
std
mov
outs
movs
into
cmps
lds
dec
mov
or
inc
add
aad
dec
test
pop
mov
cmps
push
imul
sbb
lds
in
mov
push
mov
adc
xor
sbb
pop
pop
jmp
lds
or
andps
mov
pop
in
(bad)
or
lds
inc
cmp
and
xor
adc
loopne
lods
mov
mov
jge
xor
test
push
aam
jns
nop
ins
xchg
(bad)
mov
sub
ret
addr16
mov
cmc
(bad)
jecxz
fild
mov
int3
push
or
jno
push
mov
inc
sar
aad
mov
xchg
out
jb
gs
imul
fld
xor
retf
and
pop
inc
sub
dec
outs
push
fiadd
ret
push
ret
sti
cwde
(bad)
xchg
sbb
sbb
xchg
out
xchg
out
gs
or
sub
inc
retf
xor
das
push
test
jg
mov
xor
dec
fwait
mov
retf
fidivr
pop
xor
xor
push
std
scas
mov
icebp
push
or
imul
xor
xor
jmp
dec
push
or
adc
or
cdq
ror
pop
leave
dec
mov
and
shr
jnp
outs
mov
pop
xor
call
mov
retf
aad
mov
inc
jmp
rol
dec
push
aam
push
cmp
or
arpl
ret
rcr
fst
sbb
mov
(bad)
in
jbe
rcr
mov
add
dec
jmp
inc
push
(bad)
je
test
div
jo
clc
mov
fstp
push
cdq
or
arpl
jmp
imul
or
lds
and
cmp
js
ror
and
sbb
daa
lods
mov
retf
dec
jl
xchg
outs
cmps
sub
push
shl
dec
mov
cmp
pop
in
movs
mov
and
rcr
aad
stos
xchg
jmp
xor
scas
or
jg
jmp
addr16
fist
fidivr
add
out
cmp
xchg
push
and
in
push
ins
enter
int
cmp
or
sahf
je
outs
jo
cld
add
fdivr
pop
mov
loope
sub
jns
popf
inc
mov
outs
fistp
pop
mov
fidiv
neg
mov
push
mov
data16
inc
fild
mul
fisubr
ret
xchg
and
imul
(bad)
(bad)
or
push
fadd
adc
xlat
sub
dec
scas
xchg
pop
xlat
pop
adc
pop
mov
push
jbe
jne
ds
ds
daa
pop
mov
pop
cmps
sbb
mov
adc
ss
pop
and
popa
xchg
mov
add
jb
mov
dec
lahf
dec
ja
adc
or
jmp
push
std
push
nop
cmp
ja
mov
lods
jno
js
dec
sub
cwde
push
sar
and
outs
mov
cmp
dec
xchg
imul
and
cmp
or
sahf
xor
mov
ficom
pop
(bad)
and
rol
popf
push
or
cmp
cld
sub
mov
add
lods
inc
lea
mov
cmovns
jmp
(bad)
and
arpl
imul
enter
add
dec
pop
sbb
scas
clc
sub
jmp
daa
nop
fdiv
(bad)
mov
pop
div
das
js
mov
mov
mov
test
add
cmovbe
pop
sbb
lds
lods
in
test
call
ins
cmp
xchg
fcomp
push
push
xor
dec
mov
mov
xor
mov
push
jge
out
test
cdq
je
gs
shl
cmp
lods
(bad)
or
cmp
jo
fcomp
add
or
cmp
mov
lods
cmp
pop
(bad)
fistp
pop
rcl
rcr
sub
adc
xor
shr
inc
xor
movs
div
cld
lods
in
test
dec
add
(bad)
cmc
scas
sti
inc
xor
dec
push
dec
sbb
jne
or
sbb
ja
push
movs
shl
xor
inc
push
jge
je
push
xchg
fisubr
popa
and
jnp
push
fs
mov
int3
cwde
mov
ficomp
je
mov
imul
cmp
add
xchg
push
add
das
int
sbb
lock
cmps
jg
cwde
cwde
jb
fisttp
jge
icebp
and
push
aad
hlt
inc
scas
jb
call
xor
das
cmp
retf
rol
push
mov
leave
xchg
fisttp
sbb
(bad)
popf
(bad)
inc
add
lods
jge
retf
and
stc
cmp
shl
jno
call
cmp
and
ins
mov
mov
adc
add
nop
jns
add
push
push
sar
sub
mov
jno
leave
daa
in
movs
mov
xchg
mov
jg
lahf
scas
movs
lods
jbe
ret
push
(bad)
and
add
add
nop
mov
and
sbb
call
dec
mov
shl
add
add
and
push
inc
lods
xchg
jl
xchg
jo
cwde
fisttp
outs
or
ret
pop
xchg
jbe
in
and
push
imul
xchg
lds
ss
cld
ja
jl
jno
pushf
cdq
jae
mov
popf
inc
fld
push
and
push
mov
sub
xchg
mov
push
call
popa
add
jno
mov
adc
dec
call
xchg
cmps
fwait
dec
lds
inc
loope
ficomp
xchg
nop
fisubr
push
repnz
ja
jae
push
mov
movs
je
push
repz
imul
cmp
pop
xor
and
cs
adc
ins
int3
inc
cmps
sbb
inc
mov
and
ret
pop
sbb
and
xor
sub
aas
sub
xchg
imul
cmp
fwait
mov
adc
bswap
sub
(bad)
push
std
js
sub
inc
adc
int
fld
movs
aam
inc
ja
xchg
imul
(bad)
push
in
js
ins
jmp
inc
out
and
lock
ja
sbb
inc
(bad)
(bad)
and
retf
mov
aas
and
add
push
pop
dec
fcomp
jp
dec
mov
dec
sti
pop
jmp
jg
jmp
fisttp
pop
loopne
push
xor
push
cli
pop
pushf
pusha
dec
jne
mov
jb
inc
xchg
leave
jle
inc
add
inc
loop
aam
push
push
stc
jge
xchg
mov
pusha
xlat
push
mov
push
in
stos
stos
mov
add
hlt
nop
mov
xor
and
push
test
jbe
jg
es
jo
jo
outs
in
mov
ins
shl
xchg
xlat
add
pop
shr
pop
mov
cmp
push
cli
popf
mov
int
lods
mov
ror
cs
dec
cmps
data16
mov
mov
inc
mov
mov
mov
mov
push
mov
retf
sbb
add
loop
stos
lods
mov
xor
popf
sub
call
addr16
fwait
inc
cmova
cs
sbb
lods
jns
pop
mov
mov
test
jae
and
ret
and
push
mov
test
cld
xor
das
inc
adc
push
inc
repnz
push
ret
and
cmp
xchg
xchg
inc
fdivr
dec
cmp
imul
enter
or
aaa
clts
jecxz
int
repz
lahf
mov
jb
push
mov
clc
pop
movs
jnp
jl
ss
sbb
int3
cdq
jo
mov
xchg
push
mov
test
add
movntps
jl
cmp
add
xor
inc
or
leave
and
inc
mov
aad
loop
mov
mov
push
dec
call
(bad)
jne
dec
lods
fs
jmp
sti
push
mov
adc
add
ins
fst
out
or
pop
nop
jg
push
mov
jae
pop
push
inc
test
rol
aam
stc
es
cmp
test
outs
(bad)
popf
ror
int
xchg
dec
adc
push
test
std
daa
cld
sub
push
shl
sub
jo
jno
aas
loop
adc
xchg
push
jb
xchg
mov
mul
std
add
pop
xchg
inc
test
sar
cmp
cmp
in
call
and
shr
xor
push
into
inc
icebp
es
pop
mov
push
loopne
adc
add
push
mov
add
(bad)
pop
enter
repz
aad
call
cmp
cmp
repnz
cmp
imul
cmp
adc
ja
xor
sub
push
in
adc
sub
dec
adc
jecxz
(bad)
jne
fwait
inc
into
adc
mov
add
xor
imul
or
mov
lea
inc
(bad)
jge
nop
dec
adc
add
in
add
pop
xchg
inc
fist
sub
dec
mov
fcomp
cwde
arpl
daa
jmp
mov
stos
fnstcw
das
push
int3
and
dec
into
xor
cmp
jo
push
std
ins
call
mov
pop
fdiv
add
and
push
xchg
les
outs
scas
mov
popf
xchg
pop
mov
mov
test
mov
ds
out
int
push
loope
test
ins
lods
jae
add
or
jbe
or
and
add
loopne
repnz
mov
movs
xchg
pop
and
and
push
iret
cmp
cmp
sub
xor
push
xlat
xor
cmp
dec
pop
sub
pop
iret
ss
push
stos
xchg
fs
mov
in
mov
mov
mov
movs
mov
inc
out
mov
or
lods
mov
pushf
nop
jne
or
push
or
dec
mov
pop
xor
out
inc
aad
sbb
sub
std
jbe
jp
xchg
js
push
mov
and
daa
adc
dec
cli
cmp
ret
mov
das
jg
inc
call
dec
sbb
or
dec
mov
data16
and
inc
adc
push
stc
jg
cmp
push
fist
fwait
push
in
fldenv
dec
mov
xchg
mov
lea
push
mov
popf
popa
mov
out
dec
test
pop
dec
sti
lahf
fisubr
mov
loope
mov
sub
cmp
mov
iret
xchg
lods
fidivr
sub
pop
es
icebp
pop
cmp
mov
mov
pusha
out
mov
jl
pop
mov
mov
mov
or
ret
nop
movs
ret
cdq
cdq
fs
std
push
pusha
stc
jnp
pop
retf
jnp
xor
xor
and
xchg
ret
pop
lods
(bad)
js
or
xor
retf
inc
aad
bnd
and
inc
cli
mov
fnsave
push
sbb
adc
adc
pop
pop
(bad)
pop
aam
mov
test
(bad)
xchg
rcr
shl
cwde
lahf
xchg
arpl
popa
std
(bad)
mov
stc
ins
sbb
xor
and
pop
call
cmp
pop
sbb
pop
xchg
loop
xlat
sub
sbb
dec
or
sub
fbstp
(bad)
push
xlat
push
stos
fs
ja
push
jmp
and
and
or
and
in
dec
mov
les
jg
inc
movs
ja
outs
out
jge
jae
cmp
jge
sub
in
push
mul
jo
es
fisubr
aas
aas
push
push
xor
ds
es
xlat
pop
int3
imul
stos
xchg
xchg
mov
pop
clc
ins
fcom
xchg
mov
cwde
popf
pusha
cli
dec
stos
xchg
mov
add
mov
pop
out
jge
jo
dec
retf
dec
int
(bad)
sub
add
xor
sbb
ins
test
ins
imul
jno
outs
(bad)
jnp
jl
jno
dec
aam
das
sbb
push
add
jmp
xor
xor
or
push
jmp
mov
xchg
lahf
cwde
mov
mov
cmp
aad
(bad)
ja
es
pop
push
or
pop
mov
push
mov
push
fcomp
test
mov
dec
test
mov
xchg
dec
mov
mov
mov
inc
clc
data16
pop
(bad)
and
je
jbe
push
repz
test
lods
lods
mov
mov
or
test
mov
pushf
jo
dec
out
inc
cli
je
jae
inc
idiv
pop
jmp
mov
lds
push
movs
test
dec
fst
popa
shl
dec
mov
pop
ror
sub
sub
adc
and
push
fadd
cmps
xchg
stos
xchg
test
mov
pushf
lahf
call
cmp
push
les
push
fidiv
rol
dec
mov
call
cdq
pushf
mov
xor
sub
push
out
inc
lock
out
dec
aam
test
out
retf
push
jmp
enter
xchg
addr16
int3
and
sbb
adc
pop
test
xor
in
das
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
bound
adc
dec
cmp
pop
sbb
jne
dec
es
bound
push
pop
and
js
dec
cmp
inc
xor
push
adc
jge
inc
cs
ds
push
push
pop
dec
push
pop
pop
push
pop
push
push
push
push
push
adc
push
push
push
sub
sub
push
push
push
push
sbb
jb
push
push
repnz
push
cmp
adc
push
push
adc
push
cmp
jo
ins
push
push
push
push
outs
add
push
pop
nop
cmp
xor
push
push
push
push
push
cmp
push
push
push
fidiv
push
push
ficomp
push
push
cmp
push
push
push
push
push
push
push
sbb
push
pop
dec
mov
push
push
push
in
sub
pop
push
push
push
push
push
push
push
adc
push
push
push
xor
push
push
sub
push
push
gs
push
push
pop
push
push
push
sub
push
push
pop
push
push
push
sbb
push
push
or
push
push
sbb
push
push
sbb
push
push
sbb
push
push
sbb
push
push
pop
push
push
push
adc
push
push
push
sbb
push
push
pop
push
push
push
sbb
push
push
sbb
push
push
push
push
push
in
pop
push
push
push
push
push
adc
ret
push
lods
push
adc
nop
push
sbb
aas
pop
add
adc
addr16
lods
push
sbb
jmp
push
sub
add
adc
rcr
test
adc
sti
sbb
sbb
sbb
push
and
aaa
sbb
sbb
adc
lea
or
sbb
sbb
sbb
push
add
push
and
add
adc
inc
sbb
sbb
sbb
mov
push
mov
push
leave
sbb
sbb
jmp
push
aaa
sbb
push
adc
add
adc
or
push
sub
cmp
sbb
pop
push
add
sbb
inc
push
push
push
sbb
push
jl
sbb
mov
add
adc
movs
push
or
push
or
push
dec
sbb
push
pop
pop
aaa
sbb
aam
and
sbb
adc
pop
sbb
cmps
pop
call
pop
adc
aas
adc
sbb
push
sub
pop
mov
push
sbb
js
inc
adc
push
mov
inc
adc
push
rcl
sbb
or
inc
adc
push
jp
or
adc
arpl
mov
aad
push
push
sbb
leave
adc
push
adc
adc
push
xor
add
sbb
and
push
dec
adc
adc
jge
aaa
sbb
push
call
adc
sbb
push
fcom
outs
adc
push
add
add
sbb
push
adc
sbb
jns
add
sbb
ins
adc
sbb
xchg
adc
sbb
adc
mov
push
fist
and
or
rcl
and
sbb
lock
adc
push
or
ins
sbb
push
and
ins
sbb
push
dec
adc
sbb
jle
ins
sbb
push
ins
adc
sbb
mov
push
ficom
ret
sbb
push
push
push
pop
push
push
push
push
push
pop
push
pop
push
push
push
push
push
aaa
push
sub
sbb
pop
push
pop
push
push
push
push
push
and
sub
pop
push
pop
push
sbb
push
pop
push
push
pop
push
sub
adc
pop
push
sbb
push
push
push
push
push
adc
sbb
push
push
sbb
push
push
inc
push
push
push
adc
sbb
adc
pop
lods
mov
das
inc
sti
sub
jbe
jp
and
dec
sbb
or
mov
fs
imul
adc
lahf
arpl
mov
mov
dec
cmp
je
ins
test
and
xor
and
je
jns
push
dec
fimul
dec
cmps
ret
pop
icebp
inc
xlat
dec
cmp
adc
loop
(bad)
push
(bad)
lods
fwait
xchg
pop
rcl
mov
adc
pop
cld
dec
fisubr
adc
adc
sbb
ror
inc
fild
mov
dec
std
jbe
pop
fst
pop
add
loope
or
pop
test
cld
dec
push
in
push
(bad)
jnp
inc
std
pop
xlat
cmps
mov
cmp
dec
(bad)
jnp
das
or
stos
xchg
xchg
xor
jo
push
inc
out
pushf
popa
out
outs
fbld
pop
fmul
daa
xor
clc
mov
cmp
xor
cmp
push
adc
push
dec
(bad)
out
jnp
inc
fimul
jne
push
ret
pop
mov
les
add
jle
add
inc
test
fstp
push
mov
mov
pop
clc
pop
movs
lods
mov
psadbw
inc
hlt
jnp
push
sub
push
test
lahf
jbe
daa
outs
movs
outs
stos
sahf
outs
(bad)
inc
mov
mov
inc
mov
shl
ret
pop
mov
sub
inc
movs
nop
scas
lahf
outs
fnstenv
jb
and
push
mov
ja
js
or
popa
xlat
dec
mov
adc
loop
mov
in
push
push
or
xor
popf
mov
fbstp
push
ret
jp
pop
test
std
jl
sub
push
cmc
jb
pop
lods
cmp
stc
(bad)
fwait
mov
nop
rcr
jle
xor
in
pop
shl
xor
ss
int
test
mov
lods
lods
mov
jle
dec
stos
mov
push
fistp
dec
lods
xchg
xor
push
hlt
jno
lods
mov
fdivr
push
(bad)
inc
or
inc
sti
and
sub
loopne
rcr
dec
mov
xchg
rcr
inc
leave
jne
test
scas
xor
inc
cmc
mov
xchg
jno
pop
stc
inc
enter
and
aas
add
adc
xor
dec
(bad)
pop
stos
scas
popa
std
xchg
jnp
dec
iret
sub
pop
int3
dec
fidivr
cmp
hlt
and
dec
retf
cmps
outs
(bad)
pop
scas
mov
pop
repz
pop
push
lods
mov
mov
push
sar
push
push
out
sub
inc
mov
call
enter
retf
push
mov
ins
shl
shl
mov
xchg
xchg
test
mov
sahf
gs
sub
sub
int3
pop
mov
js
jmp
fdivr
dec
mov
jbe
dec
shr
lock
dec
mov
xlat
pop
mov
add
sbb
push
sbb
add
sbb
ins
mov
mov
fisttp
xchg
mov
xchg
jle
(bad)
enter
popf
mov
jbe
hlt
push
aad
ret
inc
mov
xchg
not
dec
cmc
sub
or
ins
test
add
es
jmp
add
cmp
add
fnstenv
push
hlt
and
add
mov
call
and
cmp
jae
imul
scas
lea
nop
xor
cmp
cmp
dec
ret
pop
test
int
lds
icebp
cmps
mov
inc
fcomp
es
div
push
mov
and
pop
inc
les
es
adc
sub
sub
add
in
bnd
pop
call
(bad)
clc
dec
sti
dec
ror
dec
into
pop
cmc
push
mov
xor
dec
fild
aas
out
(bad)
jne
dec
fisub
loopne
lds
nop
mov
ret
jl
jg
pop
retf
xor
xor
and
jmp
fidivr
inc
into
sub
or
loop
cld
and
and
lock
rcl
pop
fstp
and
dec
fistp
mov
(bad)
enter
sub
daa
in
je
inc
mov
ficomp
inc
movs
call
sub
nop
mov
ficomp
(bad)
and
loope
lds
xchg
cdq
mov
dec
lods
xchg
inc
shl
stc
pop
mov
test
push
ds
stos
mov
mov
cmp
pop
mov
xchg
je
test
jg
pusha
movs
iret
dec
mov
movs
in
cmp
movnti
push
jmp
xor
push
add
xor
mov
(bad)
pop
mov
iret
cmp
je
inc
stos
inc
mov
inc
mov
imul
inc
test
or
xor
sub
ds
je
pop
in
dec
mov
or
mov
add
jl
xchg
jle
dec
aam
fisttp
cmp
jmp
xlat
jb
jl
sub
and
and
jge
jg
cwde
stos
stos
mov
out
mov
popf
pusha
lds
jmp
xchg
imul
cwde
xchg
ins
retf
push
retf
dec
stos
sahf
dec
shl
jl
mov
ret
scas
jle
mov
sar
ja
xor
sbb
xor
jae
mov
sub
pop
mov
(bad)
jg
ins
pop
imul
out
call
repz
and
loop
clc
push
iret
cmp
cmp
inc
fcom
shr
or
push
js
popa
les
ficomp
sahf
xchg
push
jecxz
mov
sahf
inc
add
inc
mov
imul
cmp
addr16
nop
jne
sti
and
push
xchg
xchg
cdq
outs
scas
mov
sub
add
cmp
push
int3
add
je
fwait
outs
test
(bad)
es
mov
cmp
xor
out
mov
pushf
dec
int3
and
pop
xor
in
adc
push
movs
inc
cmp
mov
ins
fild
push
or
pop
aam
jmp
sbb
call
jo
push
shl
leave
and
add
retf
push
mov
fnstcw
or
loope
adc
addr16
dec
mov
push
jle
aas
aaa
adc
mov
fcom
xchg
js
mov
jl
xor
push
sbb
test
jmp
push
test
fnstsw
in
pxor
int
mov
(bad)
dec
mov
inc
mov
fld
icebp
pop
cmps
mov
in
ficomp
push
iret
add
push
scas
jp
loope
mov
in
and
lds
rcr
fwait
mov
rol
icebp
pop
mov
inc
aam
mov
fsub
push
sbb
neg
adc
sub
ds
xor
mov
ins
movs
cdq
arpl
sub
inc
(bad)
test
(bad)
int3
push
cmp
xor
dec
(bad)
dec
fldenv
cmp
sbb
loop
std
push
push
jecxz
adc
cmp
inc
rcr
ficomp
adc
push
std
push
leave
jl
push
stos
addr16
mov
sub
or
cmp
cmps
mov
stos
mov
ficom
sub
sub
aaa
adc
leave
dec
cmc
jle
inc
fbstp
lea
sub
push
ret
js
jg
dec
test
sti
inc
into
dec
mov
dec
test
outs
hlt
imul
mov
push
movs
mov
push
leave
inc
test
jmp
push
sub
dec
mov
mov
inc
xlat
mov
push
(bad)
je
lahf
mov
call
inc
int
add
push
inc
cld
jne
mov
adc
pushf
xchg
xlat
sub
dec
retf
pop
iret
push
int
test
xchg
mov
xchg
imul
test
jo
dec
test
xchg
xchg
rol
pop
lods
les
je
inc
movs
pusha
retf
pop
ret
outs
lods
push
mov
aaa
sbb
sbb
jg
dec
movs
rcl
dec
(bad)
pop
clc
jg
test
inc
mov
pop
loop
into
or
mov
push
aad
out
arpl
push
fidivr
jle
stos
dec
mov
pop
in
je
adc
jb
inc
movs
sahf
push
mov
pusha
mov
and
mov
mov
jns
push
retf
adc
cli
xor
jecxz
repnz
hlt
pop
xchg
inc
aas
or
jbe
mov
xchg
fs
ret
push
stc
xor
loope
cli
push
(bad)
cmp
mov
mov
adc
mov
sub
imul
xor
stos
bound
xor
cmp
stos
pushf
ja
jne
push
add
es
push
xlat
add
dec
mov
push
rol
mov
xor
or
dec
and
in
mov
ds
sub
int
mov
push
leave
sahf
mov
mov
test
adc
cmp
sbb
outs
(bad)
dec
cli
stos
inc
mov
sbb
jnp
adc
cmp
cmp
or
retf
cli
adc
lahf
ins
mov
sahf
push
movs
dec
mov
or
ins
cmps
data16
popf
retf
add
out
pop
and
enter
pushf
popf
jae
js
xchg
test
in
dec
clc
dec
test
call
dec
rcl
inc
lods
(bad)
mov
jmp
push
add
and
sub
sub
xchg
jle
pop
scas
inc
mov
push
mov
or
cs
ror
int3
das
clc
dec
fild
adc
les
call
adc
jg
cmp
and
jp
imul
adc
mov
xchg
ja
fcom
loope
add
inc
xlat
add
retf
and
outs
add
cli
dec
test
and
int
mov
and
pushf
inc
mov
jae
cmps
repnz
push
fisubr
fmul
call
pop
mov
lea
(bad)
dec
mov
fnstcw
sbb
aad
sbb
push
lea
add
out
mov
(bad)
jl
cmp
cmps
mov
mov
aam
(bad)
cmp
add
mov
xchg
inc
cmp
dec
(bad)
ins
scas
out
push
icebp
push
stos
mov
call
sbb
xlat
or
loope
sbb
push
shr
lds
jge
jle
add
shr
pop
mov
xchg
mov
jne
push
stc
dec
fidivr
cdq
mov
xchg
mov
jo
jp
inc
mov
mov
and
dec
scas
push
sar
push
aas
xor
call
xor
pslld
pop
mov
stos
cdq
xchg
fwait
ja
and
and
call
dec
adc
ror
or
pop
lods
ficom
enter
add
daa
lock
(bad)
xor
pop
fisttp
fist
fbstp
dec
scas
pushf
jnp
xchg
shr
and
add
pop
mul
push
stc
adc
dec
add
ficom
ins
std
inc
(bad)
mov
add
jns
jo
and
outs
stos
fistp
jo
test
in
ret
test
mov
in
fist
retf
ds
sub
pop
rol
pop
mov
inc
mov
or
sbb
push
movs
mov
sti
dec
(bad)
aaa
or
es
mov
jb
inc
and
mov
inc
mov
into
inc
lds
push
daa
in
(bad)
(bad)
push
rol
xchg
sahf
sahf
jno
repz
dec
sbb
sbb
xchg
mov
data16
sub
psubb
fsubr
(bad)
pop
mov
scas
cwde
dec
mul
sbb
ss
pop
movups
sbb
inc
mov
outs
mov
loopne
push
ret
sti
push
(bad)
repnz
add
pop
mov
dec
nop
cwde
fld
ret
(bad)
cdq
xchg
imul
dec
mov
movs
push
shl
pop
int3
nop
add
jmp
not
jl
call
cdq
xchg
js
dec
in
mov
nop
jle
ss
(bad)
push
xchg
mov
xchg
(bad)
push
mov
aad
test
dec
xor
rol
out
cmp
adc
adc
sub
daa
les
out
aaa
not
and
ret
dec
shr
xor
mov
cdq
jge
clc
jge
xchg
jnp
add
pop
(bad)
pushf
xchg
imul
inc
mov
fisttp
mov
test
xchg
xchg
shl
xchg
(bad)
retf
(bad)
mov
mov
sbb
xor
push
aam
clc
pop
in
daa
in
sub
push
xchg
lods
mov
add
pop
cmps
inc
fnstenv
mov
stos
dec
mov
push
mov
sbb
xor
ret
pop
fisttp
int3
sub
jecxz
adc
shl
repz
mov
enter
mov
fild
les
call
dec
movs
inc
(bad)
fsubr
push
adc
cmp
dec
cmps
scas
(bad)
jo
loop
mov
jb
xchg
jl
and
or
xchg
inc
mov
mov
and
loope
xchg
ins
test
lea
sub
in
aas
loop
or
js
or
cli
das
jecxz
mov
pop
fs
ror
jmp
push
enter
dec
sbb
or
push
into
add
push
adc
pop
fnstenv
call
push
je
cmp
cs
pop
sar
in
sbb
push
pop
push
std
xor
pop
ins
int
in
adc
clc
jns
mov
add
mov
popf
push
mov
lea
loop
movs
inc
mov
sbb
and
or
ss
mov
ss
push
push
add
inc
add
push
xor
retf
pop
or
call
push
mov
and
cmp
pop
mov
or
push
add
cmp
mov
fdiv
adc
ret
fidiv
sbb
dec
test
cmc
push
mov
(bad)
adc
pop
cmp
mov
xor
dec
mov
adc
and
pop
mov
lock
or
and
pop
sbb
or
(bad)
dec
ficomp
pop
lea
xor
lahf
outs
scas
push
mov
and
mov
push
add
push
ficom
add
push
leave
adc
ins
sbb
fnstenv
jns
jae
push
add
arpl
push
mov
adc
mov
xchg
lock
cwde
mov
loope
out
test
sub
pop
adc
outs
sub
xchg
mov
add
loopne
xchg
(bad)
xchg
sti
movs
ficomp
lods
fcomp
cmp
outs
repz
imul
jle
bound
outs
xor
rep
lock
inc
stos
lds
cmc
mov
mov
adc
push
xor
pop
sbb
or
mov
add
loopne
and
cli
mov
shl
mov
add
ins
scas
les
stos
hlt
or
ret
or
out
arpl
adc
das
daa
les
fisubr
add
sub
aaa
data16
inc
or
adc
jg
push
add
jmp
add
leave
rcr
mov
outs
xor
das
inc
add
pushf
shr
cmp
ror
jle
push
mov
retf
sbb
push
pop
ficom
fisttp
in
mov
ror
pushf
retf
lds
aaa
dec
or
sbb
xchg
hlt
mov
lock
push
inc
xchg
dec
sub
jecxz
dec
or
mov
mov
ret
xchg
addr16
sbb
inc
mov
xchg
xchg
icebp
call
xor
ds
jecxz
(bad)
mov
mov
mov
ins
adc
pop
sub
bound
cdq
cmc
mov
icebp
mov
pusha
or
xlat
mov
xchg
enter
add
add
iret
enter
movs
movs
call
adc
dec
sbb
xchg
cmp
loop
in
loope
int
fadd
jo
jecxz
fcom
icebp
(bad)
sub
or
xor
mov
idiv
cmps
jecxz
pop
mov
mov
inc
sbb
inc
movs
dec
in
fcomp
retf
xor
dec
jns
jbe
dec
add
add
and
adc
push
movs
call
mov
xor
and
push
add
pop
sbb
push
jb
jbe
xchg
into
sahf
cmc
bound
jb
pusha
and
sbb
pop
loope
jmp
rol
imul
(bad)
pop
jecxz
out
mov
mov
pop
add
inc
adc
sub
arpl
imul
mov
fstp
ja
xchg
retf
xor
cmovne
popf
ret
inc
add
test
mov
imul
mov
outs
or
dec
adc
and
dec
or
dec
sbb
adc
dec
aaa
jns
and
push
push
sar
mov
add
fisub
mov
aaa
pop
clc
xor
mov
xor
or
ins
cs
arpl
inc
sbb
pop
and
pop
cmovnp
cwde
sti
pop
xchg
mov
daa
ins
jmp
jbe
jg
das
jge
sub
ja
fiadd
dec
sub
ss
fnstenv
add
(bad)
add
sbb
sbb
xor
or
popf
fldcw
outs
or
jmp
shr
leave
mov
sbb
xchg
mov
out
stos
rol
daa
(bad)
jmp
and
adc
shl
int
adc
pop
pop
bound
and
mov
jmp
shl
pop
pop
push
and
dec
popf
cmp
jbe
pop
sbb
adc
push
int3
mov
sub
mov
fidivr
sub
mov
sub
adc
xchg
les
add
push
mov
mov
inc
movs
rol
aam
mov
mov
retf
mov
std
cmp
and
out
sub
in
leave
jb
xor
add
stos
in
test
div
std
mov
inc
xchg
xlat
mov
lock
test
mov
push
scas
fst
(bad)
(bad)
fadd
jecxz
shl
test
mov
stos
ret
xchg
add
xchg
fidivr
jae
pop
xor
xchg
shl
cld
xchg
(bad)
leave
js
mov
dec
sbb
out
mov
nop
rol
cs
cmp
pop
or
jle
enter
std
imul
xor
mov
mov
add
(bad)
shl
adc
pop
pop
pop
movs
jo
push
loope
test
(bad)
fbstp
mov
sub
idiv
sub
int3
add
enter
mov
inc
int3
mov
les
jp
outs
add
frstor
and
mov
int3
mov
loop
mov
aaa
lock
jmp
mov
das
cmc
or
dec
mov
ds
sbb
sbb
addr16
sbb
jp
push
fnstenv
js
jp
push
add
add
mov
add
pop
in
rcl
pop
jmp
mov
mov
mov
std
popf
(bad)
xchg
jo
xor
push
in
sub
inc
cmp
jecxz
mov
mov
ins
adc
dec
xchg
jno
jne
push
and
arpl
shl
xor
jns
dec
sub
push
icebp
mov
mov
fwait
int3
lea
clc
mov
mov
mov
mov
out
test
test
jge
jne
push
mov
mov
ret
push
push
add
sbb
push
inc
or
and
(bad)
fisub
push
jmp
fistp
mov
(bad)
or
push
pop
les
in
test
lahf
jmp
(bad)
xchg
fisub
pop
or
jmp
mov
add
add
lods
fcomp
push
psrad
push
push
inc
add
cmp
pop
dec
sbb
sti
lods
mov
mov
(bad)
popf
int
lods
rcr
rcl
fstp
xor
dec
add
push
in
in
fbstp
add
push
adc
retf
jns
rcl
inc
xor
dec
or
sub
and
mov
popa
xchg
pop
sub
bound
daa
dec
lock
repnz
pop
mov
mov
stos
mov
cdq
fst
or
sbb
loopne
mov
jge
xchg
(bad)
pusha
mov
loopne
xchg
int3
sub
and
or
and
pop
xor
nop
jmp
mov
mov
jne
pop
div
(bad)
xor
dec
adc
mov
call
inc
sbb
sbb
push
sbb
out
loopne
sti
bound
ins
sub
movs
fiadd
pop
inc
xor
cmp
in
lods
jmp
mov
xchg
xchg
scas
(bad)
test
xchg
xchg
jecxz
iret
add
mov
test
ds
sbb
jae
ficomp
test
test
sbb
pop
fnstenv
sbb
pusha
jecxz
fsub
and
xchg
retf
(bad)
mov
push
adc
inc
xor
cmp
dec
adc
cs
aas
rol
leave
mov
jbe
cmp
pop
ret
mov
inc
cmp
std
and
fimul
mov
push
inc
sbb
push
mov
pop
sub
scas
inc
(bad)
in
mov
mov
push
sub
fisttp
lods
or
and
or
sbb
mov
je
sbb
jo
pop
xchg
aad
jmp
shl
mov
sub
add
sbb
sti
mov
lods
cdq
xor
push
sbb
add
jo
inc
cmp
js
(bad)
jae
push
pop
out
or
xchg
movs
les
jnp
ins
push
xchg
(bad)
popa
and
inc
sbb
or
xor
or
pop
and
inc
addr16
adc
test
call
test
sub
add
adc
fnstcw
adc
inc
and
dec
cmovnp
dec
mov
push
jnp
pop
jnp
pop
adc
dec
add
es
popf
leave
mov
xchg
icebp
mov
mov
mov
sbb
or
ret
and
jb
sbb
pop
xor
cmp
jb
and
pushw
pop
in
(bad)
ins
add
dec
push
dec
or
push
or
mov
pop
push
jae
dec
mov
add
sbb
mov
mov
mov
push
add
dec
out
lahf
jns
push
and
adc
jbe
push
jno
and
repnz
dec
or
rol
(bad)
in
loope
repz
mov
pop
inc
adc
inc
pop
bound
xor
jl
jbe
push
xor
(bad)
mov
fs
push
sbb
and
cmp
imul
daa
inc
xor
pushf
mov
and
xchg
ret
xchg
cmc
mov
pop
sbb
sbb
fcom
pop
out
mov
add
ins
stos
icebp
xchg
iret
xchg
inc
xor
(bad)
aam
adc
ins
mov
sub
jg
push
or
js
test
lods
les
add
cmovo
xor
push
add
or
out
mov
(bad)
leave
xchg
fldcw
mov
sub
mov
sub
icebp
test
fs
cmp
cmp
pop
mov
cli
push
or
pop
in
(bad)
das
pop
jecxz
pop
bound
enter
ss
push
adc
xchg
div
aad
inc
pop
sbb
sub
pop
into
popf
(bad)
mov
dec
sbb
loopne
into
mov
movs
hlt
mov
xor
jb
pop
xchg
lock
iret
mov
mov
fs
push
add
hlt
xchg
and
push
xor
add
sub
push
dec
adc
ret
mov
mov
push
outs
xchg
sahf
aad
push
adc
jg
imul
dec
loope
xor
jmp
mov
sub
and
out
mov
int3
fwait
sub
mov
adc
or
sub
mov
pop
cmp
adc
jbe
popf
cmps
repnz
fstp
sar
mov
scas
retf
call
add
lods
sbb
pop
addr16
out
mov
mov
gs
enter
mov
xchg
sub
and
mov
lods
leave
out
mov
xchg
int
dec
push
inc
cmps
sar
xchg
xchg
into
mov
mov
mov
add
inc
adc
adc
jge
stos
out
adc
icebp
xchg
out
lds
loope
retf
(bad)
rcl
sub
or
and
cmp
jno
dec
adc
xor
cmp
push
add
lahf
enter
in
push
pop
jg
add
ins
xor
jecxz
mov
fs
xchg
scas
les
mov
fld
or
cwde
fsubr
lods
xlat
(bad)
cmps
clc
add
mov
stos
lock
cmp
dec
mov
mov
inc
push
in
pop
push
xorps
sub
xchg
aad
rcl
icebp
scas
call
mov
mov
and
je
ds
sbb
dec
out
test
mov
lods
shl
add
pop
xor
ror
clc
lods
std
pusha
push
dec
add
sub
xchg
(bad)
dec
ds
fbstp
lahf
jp
outs
sub
jl
retf
std
xchg
jb
push
and
mov
jmp
jmp
das
jns
repnz
cvtdq2ps
inc
sbb
(bad)
xchg
(bad)
mov
nop
jmp
and
outs
cli
stos
push
test
inc
cmp
sahf
int
dec
or
int
adc
adc
(bad)
pop
movs
iret
lods
test
outs
jmp
and
ins
loope
dec
or
pop
and
inc
gs
sbb
inc
sub
push
sub
mov
xchg
(bad)
lods
les
adc
popf
aam
iret
xchg
jae
int
fistp
lock
push
cmp
jp
rol
ja
push
inc
sub
xchg
loopne
jge
sbb
fdivr
imul
sub
and
mov
pushf
fist
cmps
std
mov
cmp
push
dec
mov
mov
mov
call
mov
mov
ins
jecxz
outs
add
jl
into
bound
jnp
xor
stos
les
psrad
leave
sahf
scas
fdivr
mov
push
or
or
mov
jae
pusha
test
pop
pop
add
imul
in
retf
je
imul
aaa
ins
add
outs
(bad)
int
aad
retf
fistp
xchg
ret
mov
std
mov
aas
pop
ds
sbb
mov
or
add
popa
or
jg
jp
mov
pop
xchg
in
fcomp
adc
adc
adc
dec
mov
push
sub
dec
push
ins
sbb
inc
push
jbe
pop
test
sub
pusha
add
push
adc
xor
jl
pop
adc
pop
xor
dec
mov
or
ds
loop
scas
jmp
cmp
xchg
adc
push
add
pop
ins
cmp
xor
cmps
inc
or
pop
addr16
sbb
js
sub
xchg
fcom
aam
div
xchg
ins
sub
jmp
fld
dec
adc
aaa
push
ficomp
daa
arpl
push
fdiv
or
mov
enter
mov
clc
pushf
mov
cmc
lods
jae
pusha
aaa
push
mov
dec
push
sbb
adc
jbe
(bad)
mov
stos
test
fadd
inc
sbb
sub
add
jno
push
add
popa
adc
or
ins
adc
cmps
in
stc
sahf
dec
mov
pop
imul
pop
mov
ins
jecxz
mov
mov
fisttp
and
fist
mov
stos
movs
int3
enter
cmps
hlt
mov
ret
lods
std
mov
push
jne
das
jne
dec
add
ret
sbb
sbb
push
push
push
je
icebp
popa
adc
jns
and
and
xor
das
jo
push
adc
popa
cmp
mov
lods
jnp
data16
jge
dec
sbb
and
xchg
mov
lods
cli
jne
dec
push
cmp
rcr
ds
adc
sbb
and
es
in
call
pop
push
outs
sbb
add
lods
scas
int
jmp
jle
outs
sbb
inc
push
push
ds
sbb
pop
leave
mov
mov
sti
mov
jmp
nop
aam
mov
xchg
jge
arpl
mov
lahf
std
xchg
cli
xchg
iret
jne
dec
sbb
arpl
je
jl
shl
or
push
test
jns
cmp
jle
inc
add
pusha
mov
ja
arpl
dec
add
jns
jl
xchg
(bad)
cs
fstp
out
xor
mov
cwde
mov
sbb
cmp
cmp
ins
mov
cmp
dec
xchg
js
jne
jl
and
bound
(bad)
std
scas
jmp
outs
cmp
dec
aas
ins
fimul
(bad)
xchg
jmp
loop
mov
cmc
sub
xchg
ror
inc
xor
lahf
enter
cli
leave
adc
test
mov
add
es
xor
push
je
cmc
sbb
aas
and
int3
jns
pop
adc
in
(bad)
pushf
mov
pop
inc
imul
pop
sbb
mov
mov
fwait
push
cmovnp
cmps
jle
clc
scas
repnz
adc
cmp
dec
std
rol
lds
and
cmp
out
mul
push
popf
fistp
lock
(bad)
cmp
push
or
pop
inc
sbb
fldcw
mov
test
pop
not
pushf
jmp
mov
cdq
repnz
pop
outs
xor
xchg
into
mov
enter
std
dec
adc
cmps
out
rcl
(bad)
dec
sub
push
cmovns
imul
adc
cmp
out
mul
aam
in
sar
add
or
inc
cmp
lods
leave
pushf
jmp
sar
mov
mov
mov
pop
inc
dec
stos
dec
imul
xor
pop
jl
add
sub
dec
adc
add
pop
cmp
or
out
push
lahf
aam
(bad)
data16
mov
stos
outs
sub
fiadd
pop
push
jnp
mov
xor
dec
or
dec
sbb
adc
dec
xor
push
pop
or
jo
jns
jae
shr
int3
popf
retf
jne
xor
jmp
in
sti
mov
les
push
pusha
jns
pop
loope
stos
jecxz
mov
lods
dec
aad
fidiv
sub
adc
add
sbb
mov
stc
nop
call
xchg
ror
aaa
jb
out
cli
mov
add
pop
sbb
sub
not
and
sub
jns
pop
out
cld
cs
leave
rol
mov
mov
js
xchg
ret
fst
xlat
arpl
xchg
lods
repz
jbe
dec
sbb
cmp
je
fs
dec
cmc
mov
fwait
out
icebp
lahf
leave
(bad)
std
pushf
call
cwde
mov
mov
mov
call
and
js
pop
or
or
ret
test
ins
cmp
icebp
mov
cmc
lahf
in
mov
and
xchg
sbb
push
int3
cdq
leave
mov
cmp
das
pop
add
imul
mov
mov
xchg
retf
mov
in
ss
pop
cmp
outs
jmp
outs
pop
xor
leave
jno
jnp
out
mov
mov
fidivr
sahf
fisttp
call
jmp
dec
jmp
jne
pop
adc
loopne
shl
xchg
jmp
int
jne
mov
xchg
leave
inc
sbb
xchg
mul
dec
sbb
mov
sbb
and
inc
cmp
out
xchg
ret
mov
pop
jge
jb
jno
loope
in
movs
movs
js
sbb
ins
mov
dec
ds
fcomp
popa
aaa
ja
ret
fdiv
cmp
inc
stc
jp
mov
jmp
mov
aad
loope
xor
(bad)
aaa
xor
jge
xor
xchg
mov
popa
cmp
stos
icebp
xchg
mov
jecxz
bound
sbb
inc
in
inc
adc
adc
xlat
cwde
std
mov
adc
mov
add
imul
sahf
fadd
daa
dec
add
or
outs
aas
push
or
dec
and
jl
test
mov
mov
inc
push
addr16
xchg
out
scas
cmc
and
fcom
cli
mov
out
mov
into
cdq
sar
loope
sar
(bad)
cmc
and
pop
add
jne
ja
pop
or
test
pusha
push
pop
mov
jne
push
dec
cvtps2pi
in
imul
cmps
call
cmp
jb
clc
pop
mov
xchg
mov
xchg
clc
nop
repz
fild
test
pop
cmp
outs
sbb
outs
and
test
in
test
fstp
dec
cdq
lock
jmp
in
test
mov
arpl
jle
jbe
mov
mov
fisttp
mov
xchg
cld
lahf
in
mov
mov
loope
movs
rol
cwde
test
dec
adc
dec
mov
mov
nop
in
mov
mov
ins
cmp
sbb
pop
sbb
and
jl
bound
cli
fwait
mov
add
dec
out
ja
hlt
test
inc
pop
addr16
push
js
pop
cli
mov
mov
mov
and
test
inc
stos
fcom
jp
jl
addr16
inc
pop
adc
fs
push
sbb
iret
ins
aaa
jae
push
mov
addr16
(bad)
leave
push
xchg
inc
and
ins
cmp
fldenv
xchg
retf
fwait
cli
add
jns
retf
leave
cdq
retf
and
cmp
cld
das
ret
xor
cmp
dec
fldcw
jl
and
in
test
out
xchg
pop
mov
int3
or
(bad)
retf
(bad)
fnstsw
mul
sar
xor
push
xor
sahf
outs
and
jbe
std
mov
sub
xor
push
loop
test
sub
pop
add
mov
ss
and
xor
jae
jl
add
sub
ss
jnp
fs
cdq
and
push
dec
inc
je
out
jo
push
pop
pop
jl
(bad)
jmp
dec
jmp
xlat
rol
mov
inc
ret
mov
inc
addr16
xor
adc
fidiv
xor
sbb
mov
pop
(bad)
out
(bad)
loope
shl
mov
int
mov
les
cli
arpl
movs
movs
movs
jmp
xchg
and
adc
add
add
nop
test
call
sub
int3
popf
popf
mov
test
int3
cli
mov
mov
fst
adc
xchg
out
mov
adc
mov
cdq
dec
lods
pusha
inc
xchg
out
add
retf
rcl
or
aad
push
add
inc
mov
jp
adc
movs
xchg
aas
push
add
cmp
jnp
cmps
xor
sbb
xor
adc
not
lea
dec
and
ror
cld
(bad)
pop
push
push
inc
inc
div
jns
inc
stos
cmp
sbb
stos
push
in
or
mov
mov
data16
fisubr
arpl
clc
lods
mov
jl
and
rcr
sbb
in
jb
daa
outs
scas
inc
enter
addr16
sub
mov
add
popf
push
mov
test
sub
xor
in
pop
call
neg
sub
inc
inc
in
(bad)
mov
pop
out
sub
rol
jp
jmp
mov
cmp
in
mov
jl
out
dec
cmp
cmp
(bad)
inc
es
xchg
or
fcomp
jmp
jne
cmps
inc
jns
sahf
mov
(bad)
loop
shl
aaa
push
pop
push
(bad)
fwait
sub
xor
daa
xor
adc
imul
cmp
iret
add
rcr
out
loope
cs
dec
out
dec
rol
mov
dec
pop
mov
pop
mov
dec
add
xchg
dec
mov
out
out
dec
lea
push
sbb
or
adc
or
and
xchg
mov
mov
xchg
aad
out
faddp
jp
stos
sbb
ins
repnz
jmp
jecxz
cmp
jge
out
push
adc
push
cmp
pop
push
int3
mov
jns
sub
xor
mov
in
mov
ret
aam
add
push
or
sub
in
mov
(bad)
mov
out
xor
push
ret
movs
in
fcmovne
mov
pop
je
sub
int3
aam
jp
mov
cwde
push
mov
mov
pop
or
movs
in
in
(bad)
push
xchg
dec
adc
loopne
inc
cs
popf
int
push
fwait
loop
mov
mov
pop
push
mov
movs
call
xchg
jae
cld
adc
outs
adc
retf
rol
dec
xchg
enter
ins
outs
push
repnz
movs
mov
in
in
jl
and
loopne
mov
test
div
loope
sub
out
sahf
xor
mov
cmc
inc
mov
add
mov
sahf
in
pop
pop
pop
sbb
mov
cmp
xchg
or
fwait
bound
or
adc
mov
cmp
inc
pusha
xchg
imul
(bad)
test
sbb
ins
ins
outs
cs
test
fdivr
inc
je
int3
mov
xchg
mov
ss
lock
popa
pusha
add
pop
js
out
sbb
mov
xor
adc
fsubr
fwait
nop
dec
mov
add
mov
stc
icebp
loope
adc
scas
popf
push
add
out
data16
fisttp
lock
pop
push
push
dec
push
sar
imul
gs
cmp
sub
sbb
shr
jge
mul
rol
rol
ds
sbb
pop
mov
mov
jbe
int3
jmp
xor
stos
xor
jecxz
mov
or
aas
fsub
or
jmp
pop
loopne
xchg
sub
idiv
outs
inc
xchg
and
mov
test
aas
(bad)
shl
mov
jp
jmp
xchg
pop
sbb
iret
retf
dec
cmp
pop
popf
sbb
xchg
jmp
add
mov
repz
ret
jmp
loop
cmp
mov
stc
pop
out
icebp
popa
push
mov
cmp
cmp
xchg
popa
jl
mov
xchg
pop
push
nop
cmp
rcl
int
add
cmp
fcmovne
scas
ds
push
inc
xchg
fcmovbe
push
xor
lods
fcomp
fs
imul
pop
mov
and
sub
push
movs
in
or
mov
mov
out
jo
cmps
pop
add
jge
gs
jb
sub
xchg
aaa
inc
cld
dec
dec
pop
xchg
dec
or
loopne
sbb
pop
jecxz
inc
outs
(bad)
call
pop
adc
in
xchg
ficom
cwde
je
scas
sahf
stos
mul
mov
sbb
out
push
sub
jne
out
fisub
(bad)
sub
ins
or
sbb
icebp
inc
js
stos
dec
pop
jae
mov
retf
push
jmp
sbb
sub
mov
lods
repz
xchg
std
or
cli
mov
and
sbb
sub
sbb
cmp
push
(bad)
inc
imul
ins
outs
inc
iret
out
bndstx
mov
adc
sahf
inc
mov
xor
(bad)
stc
das
fcom
stos
sub
aam
sbb
call
imul
push
fcmovnbe
xor
adc
pop
sbb
mov
and
int3
ins
or
mov
mov
shl
popw
cmp
sub
int3
sahf
in
sar
sub
lahf
jbe
scas
je
dec
inc
cmp
fstp
cld
test
aad
adc
mov
xor
jno
retf
push
inc
(bad)
mov
xchg
scas
mov
pop
xchg
inc
rcl
and
sar
sub
mov
stos
sbb
fisubr
xchg
cmp
xchg
call
mov
push
loopne
adc
call
mov
mov
add
xor
xchg
out
bound
mov
cmp
add
imul
inc
push
mov
xchg
fucom
and
and
push
stc
push
pop
adc
mov
or
ror
aam
inc
mov
mov
fld
sub
jmp
lods
adc
mov
fisubr
jp
cdq
push
mov
push
les
ftst
add
jmp
in
mov
mov
stos
sahf
out
rcr
or
sub
xchg
pop
aaa
mov
je
cmc
je
pop
mov
out
add
mov
xchg
mov
mov
in
add
lea
jb
inc
lods
clc
popf
rcl
mov
inc
sub
psubsw
and
push
adc
xchg
push
push
pop
shl
adc
sub
jp
xor
ins
out
ret
or
out
adc
sbb
hlt
mov
(bad)
scas
xchg
ins
mov
jbe
sahf
ret
cmc
mov
xor
(bad)
sub
cdq
adc
xor
add
test
pushf
ds
sbb
jo
jnp
in
jns
mov
xchg
lods
mov
push
enter
outs
das
xchg
(bad)
call
loop
mov
test
stos
and
fisub
sub
fiadd
pop
and
test
retf
mov
mov
inc
(bad)
rcr
cwde
xchg
aad
stos
jno
lea
scas
jno
aad
mov
rol
outs
push
movs
xor
mov
test
adc
xor
jns
xchg
pop
stos
loopne
call
mov
test
xlat
mov
outs
push
stc
out
sbb
sbb
pop
jl
inc
mov
call
mov
pop
inc
ja
mov
cmp
aas
jecxz
xchg
loop
cmp
mov
inc
pop
ret
cmp
fmul
jge
std
jae
xchg
cmp
xor
jnp
js
stc
lock
mov
sub
mov
sub
sbb
cmp
mov
xor
lods
ins
or
adc
xchg
ds
xor
es
shr
push
movs
jl
aam
inc
push
fstp
addr16
in
scas
retf
xor
fist
in
dec
int
dec
into
mov
xchg
push
mov
mov
mov
cmp
sub
jo
mov
daa
arpl
mov
fidivr
mov
test
pop
cmps
movs
outs
call
mov
inc
retf
into
or
sbb
loop
mov
push
dec
inc
into
mov
add
test
adc
mov
mov
bts
in
mov
call
in
std
sahf
(bad)
cmps
loop
daa
ins
add
dec
jecxz
scas
mov
call
and
and
mov
push
adc
mov
sub
mov
loop
or
sbb
push
sub
mov
std
lods
and
scas
loope
outs
std
out
xor
mov
sbb
sub
xchg
pop
in
inc
(bad)
cmps
adc
jle
ret
cld
push
cmp
jno
cmp
sub
pusha
aaa
push
inc
cld
sub
pop
jmp
movs
and
dec
stos
(bad)
ret
jne
jl
mov
pusha
mov
or
fisub
jle
fs
dec
dec
stos
imul
imul
js
out
fnsave
popf
mov
ins
jmp
cmp
or
pop
adc
repnz
or
sub
lods
mov
and
adc
stos
iret
push
push
xchg
sbb
sub
push
push
imul
mov
in
adc
mov
imul
stc
neg
pushf
xchg
fcom
call
adc
les
mov
inc
mov
aad
xchg
aas
cs
jmp
mov
or
call
imul
out
movs
aam
in
sbb
mov
pop
pop
dec
xchg
fild
dec
jmp
outs
in
(bad)
movq
test
cmp
pop
mov
sbb
pusha
sub
mov
cmp
sbb
vmread
pop
loopne
inc
inc
add
ds
sub
or
dec
out
pop
fisubr
fwait
cmp
jbe
lea
cli
push
jno
sar
pop
dec
dec
aaa
mov
xchg
push
scas
mov
idiv
jnp
pop
ss
mov
in
xchg
sbb
xchg
xchg
xor
xor
test
ret
inc
push
scas
add
hlt
xchg
sti
pop
les
inc
mov
cmp
rcr
ror
adc
mov
and
inc
scas
iret
imul
punpckhwd
rcl
or
fsubr
or
mov
in
jecxz
adc
jge
mov
(bad)
(bad)
sub
je
mov
push
call
stos
mov
and
rol
mov
xor
jae
and
(bad)
movs
jg
add
jns
push
or
sbb
inc
fsub
xor
fwait
push
(bad)
fst
sahf
cmps
outs
das
mov
push
fstp
push
cli
add
mov
adc
or
imul
sbb
push
pop
xor
jo
repnz
mov
addr16
add
xor
ficomp
push
mov
sub
test
or
xchg
inc
inc
xlat
mov
aas
pusha
push
pop
mov
mov
pusha
cmps
test
stc
jbe
imul
cli
dec
sub
mov
jne
sbb
mov
out
pop
rcr
scas
clc
or
inc
mov
jne
add
push
jb
dec
not
in
ja
cs
jmp
pop
mov
std
inc
std
pop
loopne
je
clc
jnp
jae
xor
outs
cli
mov
mov
add
sub
repz
fs
cdq
lea
mov
jne
mov
mov
enter
test
int
jle
in
arpl
push
mov
dec
into
push
stos
inc
sub
(bad)
loope
iret
loopne
adc
test
xchg
cs
imul
arpl
jp
add
mov
and
or
setns
repz
pop
cmp
out
or
jge
dec
xlat
and
loopne
push
mov
mov
push
and
clc
xchg
xchg
sbb
mov
aad
adc
stc
ror
fdivrp
cs
out
repnz
mov
xchg
pop
push
out
and
test
dec
out
and
inc
ror
dec
(bad)
sub
push
sar
inc
lahf
adc
xchg
daa
lock
mov
sub
mov
mov
lods
gs
add
test
xchg
jns
mov
js
fcomp
sbb
mov
int
sbb
xchg
retf
push
cmp
mov
push
sbb
aad
cwde
scas
enter
pushf
push
test
xchg
es
inc
mov
mov
(bad)
mov
xor
xor
push
nop
dec
pop
and
cmp
aas
mov
jl
in
call
xlat
sub
jp
fst
sbb
or
mov
mov
xlat
iret
ja
test
in
cmp
inc
xchg
xchg
data16
fcmovnbe
cld
add
add
pop
and
das
sbb
pop
mov
xchg
add
mov
call
mov
(bad)
aas
stos
cdq
xor
cmc
loop
(bad)
out
cdq
js
sbb
fcomp
test
xor
mov
mov
inc
retf
push
sbb
retf
add
jns
jmp
out
test
jbe
mov
push
jecxz
cmp
adc
mov
xchg
movs
retf
push
(bad)
or
mov
push
loopne
(bad)
jg
inc
clc
xor
cmp
sti
int3
sbb
out
and
xchg
aam
xor
fwait
inc
sbb
icebp
inc
sbb
cmp
call
dec
and
mov
stos
popf
push
les
jg
(bad)
and
cmc
inc
and
jmp
inc
pusha
std
jmp
test
sub
lahf
mov
jno
mov
cdq
out
nop
cmc
fdivp
fldcw
jp
jne
cmp
pop
jmp
push
in
fidiv
popa
frstor
pop
stos
mov
jl
add
fisub
dec
sbb
cmp
sub
mov
(bad)
pop
inc
in
pushf
mov
xor
loope
stos
sub
adc
sti
mov
lds
pop
sub
gs
clc
iret
retf
sbb
repz
enter
mov
jp
aaa
retf
nop
cdq
push
ret
adc
sub
mov
imul
(bad)
jbe
ret
(bad)
imul
xor
out
and
stos
sub
mov
out
jo
add
sti
fwait
xchg
mov
cmc
cmps
jnp
lods
xchg
test
stos
iret
mov
or
mov
inc
bound
add
dec
fdiv
add
lods
repnz
sbb
daa
jbe
inc
shl
pop
div
jno
out
adc
fstp
dec
add
xchg
mov
test
outs
rol
cmp
out
out
xchg
adc
mov
in
jae
or
dec
cmp
jl
adc
jnp
xlat
repnz
es
xlat
sbb
or
sahf
inc
test
push
iret
inc
sub
mov
add
sub
aad
or
inc
cmp
mov
cmp
xchg
adc
add
repz
xchg
pop
add
in
inc
jns
sbb
xlat
out
js
push
jge
rol
sub
jns
movs
shl
out
adc
and
push
call
adc
fs
xchg
jno
dec
test
lds
out
sbb
xlat
aaa
imul
out
or
adc
xlat
movs
ins
ret
js
ret
xchg
add
dec
loope
add
or
xchg
push
xor
fldenv
imul
out
dec
stos
push
test
stos
push
push
out
and
adc
lea
adc
stos
data16
scas
das
mov
dec
sub
out
mov
sub
mov
mov
sbb
cmp
sar
xchg
les
inc
pop
pop
(bad)
jl
xchg
imul
shl
movs
not
mov
in
aad
or
sub
push
lahf
enter
out
stc
cmps
fisub
loopne
jge
sub
jle
sbb
xor
mov
jge
add
rcl
div
pop
nop
xor
test
mov
pop
es
movs
imul
leave
inc
dec
xchg
dec
push
xlat
mov
and
jge
cwde
pop
or
inc
jge
pusha
pop
sub
js
xchg
fstp
std
int3
out
or
jbe
push
lods
and
aam
iret
adc
sti
jge
jnp
stos
leave
jge
xchg
cmc
pop
mov
test
ss
dec
in
jl
dec
outs
push
test
inc
retf
and
call
jo
out
ds
or
fdivr
popf
add
xor
cmp
and
(bad)
fnstenv
or
dec
jns
mov
ja
test
xor
mov
retf
fcomp
mov
ret
aam
pop
es
pop
movs
fcmove
mov
int
push
xchg
jge
jp
push
mov
xchg
pushf
and
repnz
loop
pop
movs
jp
push
retf
sub
std
sub
ins
xor
and
(bad)
pop
scas
scas
mov
add
xchg
and
jnp
outs
ins
sub
add
cmps
ficomp
mov
sbb
xlat
dec
push
pop
add
jae
cmp
cld
shl
push
push
dec
sub
sub
into
jge
dec
sar
imul
repz
shl
mov
rcr
or
sbb
ds
rcl
inc
mov
in
mov
fwait
mul
add
mov
(bad)
in
mov
jae
jnp
push
jns
hlt
sub
test
arpl
icebp
xchg
mov
dec
call
or
mov
sub
jle
push
inc
adc
adc
jle
das
push
push
fdivrp
loop
and
or
loopne
hlt
pop
inc
and
mov
mov
loopne
out
(bad)
repz
xchg
ins
push
enter
and
addr16
cmp
into
scas
dec
outs
sbb
icebp
mov
pop
lea
in
jg
push
xchg
sar
test
mov
jo
icebp
mov
rcr
ja
loopne
cmps
mov
call
movs
popa
mov
mov
(bad)
pop
sbb
jp
push
ja
add
mov
jnp
mov
mov
mov
icebp
add
rcr
test
cdq
ret
scas
call
call
mov
cli
or
(bad)
xor
pusha
lock
sbb
test
mov
mov
sbb
mov
stos
into
mov
pop
sub
imul
cmp
loopne
cmp
fidiv
or
sub
mov
retf
push
xchg
adc
dec
sbb
sahf
adc
add
push
sub
jo
and
push
std
lods
push
dec
loopne
fild
nop
stc
add
xchg
push
add
jmp
not
jge
sub
mov
mov
adc
pop
sbb
sub
out
fcom
inc
push
dec
mov
and
xor
ret
xchg
(bad)
dec
scas
std
mov
stos
shr
call
inc
xchg
rol
xchg
mov
mov
js
and
cmc
mov
mov
stc
popf
scas
mov
mov
popf
rol
xor
and
xchg
aad
adc
push
sbb
push
dec
add
mov
movs
loopne
sub
inc
cmp
push
lahf
fbstp
pop
pop
je
data16
les
sahf
jmp
call
xor
cmp
ss
xor
fs
fs
and
adc
mov
(bad)
retf
sub
sub
bound
(bad)
jb
popa
pop
das
js
push
mov
scas
hlt
pushf
sar
xor
mov
test
jle
push
add
cmp
inc
scas
adc
jno
inc
mov
lods
sar
dec
sbb
jle
in
jb
pop
ret
scas
fimul
test
lds
push
pop
jae
daa
and
aam
(bad)
xchg
xchg
ret
ins
ds
jmp
sbb
sub
inc
push
push
xor
fwait
repnz
into
sub
popa
sub
retf
mov
inc
ja
pop
inc
jmp
fild
fst
pusha
sbb
inc
mov
nop
xor
loopne
mul
jns
lods
dec
or
add
shl
cmp
hlt
movs
loop
mov
cmp
iret
mov
xchg
jg
jne
pop
sub
xlat
xor
xchg
test
lods
cld
mov
adc
sub
pushf
out
fidiv
xchg
arpl
xor
sub
loope
retf
mov
xlat
xchg
aam
cmc
scas
sar
cwde
retf
jb
push
daa
bound
push
add
jbe
hlt
test
pop
sub
inc
and
jb
pop
shl
jnp
ins
adc
inc
xor
dec
push
aam
repnz
xchg
or
push
jge
ret
push
jnp
ja
xor
or
or
cmps
out
lock
sub
sub
aam
ficomp
pop
cwde
(bad)
push
sub
pop
xor
loope
pop
loopne
fiadd
pop
or
or
mov
mov
inc
out
xor
jo
aas
(bad)
addr16
out
in
popa
push
inc
add
mov
mov
jo
sub
add
mov
or
dec
sbb
mov
adc
xor
ss
mov
or
jle
jmp
mov
mov
xchg
rcr
inc
push
dec
xor
pop
dec
sub
mov
mov
jp
ja
push
cmp
arpl
jns
push
adc
mov
xchg
add
push
sbb
push
inc
cmp
icebp
jnp
push
pushw
jmp
mov
push
cmp
jge
arpl
cmps
ss
shl
sbb
dec
xor
dec
ds
pop
mov
inc
push
not
cli
pusha
or
int
push
mov
jns
data16
mov
cmp
pop
add
out
push
lods
dec
movs
aam
fisttp
pop
add
cmp
(bad)
pop
jecxz
call
pop
sub
push
xor
ins
adc
cmps
xlat
mov
cmp
pop
repnz
jmp
lods
retf
pop
call
xchg
mov
mov
and
ins
sbb
mov
mov
inc
adc
popa
jmp
lea
in
ror
adc
pop
sub
sub
jle
jne
push
das
push
push
inc
loope
imul
sti
mov
test
mov
scas
shl
jbe
dec
adc
xchg
fidivr
cmp
rcr
pop
adc
adc
dec
(bad)
and
push
xor
std
mov
dec
adc
stos
mul
pop
inc
add
cmc
mov
pop
or
adc
ins
sub
in
test
mov
outs
xor
sahf
mov
shl
fbld
pop
xor
mov
aam
cld
mov
push
mov
shl
jle
push
add
cli
xchg
lods
retf
movs
mov
mov
repz
outs
out
lods
fdiv
add
pop
mov
ror
and
pop
mov
mov
scas
mov
out
add
mov
cmp
sub
cmovae
add
jp
jl
dec
mov
in
sbb
cmp
fsub
inc
stc
mov
mov
arpl
or
imul
in
xchg
into
popf
(bad)
add
jle
xchg
cmps
shr
cmp
jo
jecxz
call
in
cwde
mov
cmps
ror
outs
ss
and
das
es
out
ins
sub
and
imul
je
dec
push
pop
jp
and
and
je
sbb
imul
adc
sub
cmp
(bad)
jmp
cmp
out
stos
std
mov
fwait
repnz
push
pop
sbb
pop
sub
fld
pop
or
jg
mov
ins
xor
in
fisub
jg
sub
in
lock
pop
jl
cmp
and
dec
xor
pop
pop
sub
mov
dec
sti
mov
pop
add
jbe
and
out
stos
out
sbb
cvtdq2ps
ins
add
inc
(bad)
cmc
mov
cmps
jmp
or
add
pop
sbb
push
or
mov
mov
movs
movs
fcomp
add
dec
cmp
ss
sbb
retf
inc
cmp
pop
das
sub
and
lds
and
pop
sub
inc
fmul
jbe
jl
sub
xor
or
jno
(bad)
jmp
jmp
cmc
xchg
cmps
loop
cli
pusha
xor
push
inc
or
and
clc
imul
bound
aas
sbb
repnz
adc
out
and
push
pop
jmp
pop
jecxz
cmp
push
sub
arpl
test
mov
bound
push
and
aaa
inc
cmp
into
lods
into
xchg
popa
or
add
cmps
(bad)
in
stc
mov
lods
(bad)
mov
ror
popf
iret
dec
pop
pop
pop
push
lods
shr
rcr
dec
and
inc
push
in
add
iret
lahf
jbe
popa
xor
aam
out
les
pop
or
pop
or
clc
mov
pusha
sbb
inc
das
je
ins
cmp
arpl
(bad)
scas
(bad)
(bad)
leave
(bad)
retf
xchg
cld
arpl
fisub
int
adc
retf
xchg
retf
mov
and
push
push
or
je
scas
stc
mov
push
adc
data16
mov
mov
sub
sub
mov
sbb
or
and
xchg
cwde
rol
inc
xor
push
push
sub
bound
jns
enter
clc
mov
jbe
data16
jno
adc
inc
xor
and
and
mov
pop
add
imul
mov
test
fimul
xchg
mov
xor
arpl
clc
mov
mov
stos
std
mov
fldenv
xor
sbb
nop
rol
loope
call
ficomp
xor
scas
out
mov
mov
int
xor
sub
jl
jne
sbb
jp
push
sbb
dec
jmp
push
or
outs
sub
mov
shl
pop
push
dec
xor
aam
fist
(bad)
popf
rcl
mov
pushf
dec
cmp
add
cmp
sub
hlt
stos
shl
lahf
mov
popa
div
inc
adc
mov
jp
dec
sbb
test
jmp
fcom
xchg
fcomp
pop
adc
das
dec
or
mov
cmp
xchg
movs
repz
(bad)
ja
inc
sub
ja
dec
cli
mov
aad
iret
or
push
enter
sar
repz
inc
cmp
(bad)
gs
jne
outs
movs
mov
test
bswap
mov
sahf
shl
(bad)
pop
out
popf
data16
jge
mov
dec
cli
test
mov
aas
push
cmp
push
repz
test
mov
cmps
loop
cmps
fild
cs
data16
xchg
ret
xor
push
aas
inc
add
je
sub
pop
mov
dec
into
popf
fstp
das
sub
or
jmp
or
add
ins
or
pop
mov
inc
add
xor
pop
xor
scas
fcomp
pop
loop
inc
xor
dec
in
in
jmp
dec
repnz
scas
jge
movs
loop
enter
stc
xchg
adc
nop
retf
cmp
pop
jo
dec
jmp
add
and
jbe
test
mov
xchg
lds
add
or
and
pop
cmp
shl
cmp
push
jmp
mov
mov
push
idiv
jb
jae
xchg
rcl
(bad)
aad
test
js
inc
push
dec
xchg
xlat
fwait
jmp
fsub
jno
(bad)
mov
nop
lds
dec
push
imul
ins
xor
pop
xor
xchg
dec
ss
cmp
jl
(bad)
jle
ja
sbb
jge
sbb
cmp
stos
imul
push
loope
jb
pop
sbb
mov
mov
pop
out
mov
jg
pop
sub
push
ins
add
dec
std
lods
jmp
lods
in
add
xlat
add
cld
mov
xchg
jecxz
mov
xchg
ficomp
mov
or
pop
adc
stc
lahf
iret
mov
xchg
mov
popa
and
jge
js
add
xchg
iret
pushf
fcom
xchg
lock
sbb
dec
call
outs
xor
ror
adc
dec
sar
in
(bad)
push
outs
and
add
popa
daa
retf
mov
ja
pushw
das
ds
sbb
mov
push
ss
sbb
inc
xor
cdq
jl
rol
xlat
xchg
call
inc
bound
push
jecxz
(bad)
std
mov
push
add
dec
lock
pop
adc
mov
sar
push
or
in
mov
daa
dec
cmp
jmp
lods
movs
lds
jecxz
pop
in
fisttp
jo
jns
pop
pop
and
add
push
sbb
dec
xchg
mov
ror
cmp
ds
dec
add
leave
cmp
jae
push
lds
dec
pop
jg
jns
test
leave
mov
xor
xchg
(bad)
cwde
in
lods
mov
sbb
jmp
dec
xor
push
and
sbb
push
loopne
movaps
jecxz
fdivr
dec
add
pop
xor
outs
cmc
movs
rol
mov
les
mov
jmp
shl
test
xchg
aad
ror
xchg
mov
jns
and
ins
cs
cmp
test
or
test
cdq
fwait
in
jecxz
fcomp
add
pop
or
ds
lds
xchg
mov
stos
mov
popf
fstp
loope
repz
inc
sbb
jle
les
jnp
ins
add
cmp
pop
push
cdq
jecxz
icebp
mov
sti
mov
fld
sbb
adc
push
xor
cmp
jle
pop
push
and
imul
xchg
mov
sbb
jg
into
xchg
movs
fbld
jns
and
rol
stc
mov
sub
and
lahf
into
mov
push
hlt
xchg
int
cs
mov
pushf
stc
cmp
inc
push
inc
add
ja
mov
sbb
sub
jecxz
sti
dec
sbb
pop
sbb
lahf
iret
mov
pop
push
stos
fild
or
or
cmp
clc
xchg
in
add
add
pop
jo
inc
mov
jl
pop
stc
stos
repz
arpl
add
cmp
jle
cli
aad
out
fbstp
inc
into
cmp
or
push
stos
cmp
out
mov
nop
mov
in
mov
xchg
sar
xor
pop
(bad)
mov
xchg
shr
outs
fild
imul
gs
dec
cmp
cmp
xor
(bad)
mov
sub
out
repnz
mov
sbb
outs
add
push
pop
push
pop
push
pop
mov
les
push
pop
dec
push
cmp
mov
jno
hlt
movs
(bad)
mov
mov
cmp
mov
out
xchg
jae
int3
(bad)
out
ja
push
jmp
ror
sti
aas
mov
movs
cld
pusha
inc
adc
and
push
adc
popw
sub
imul
cld
mov
(bad)
xchg
fild
xor
sbb
es
sbb
out
mov
sbb
fnstcw
jle
ins
or
pop
mov
and
ss
jg
xor
add
inc
xor
and
imul
mov
mov
push
aad
sbb
push
cmp
jns
add
cmp
mov
lods
jns
arpl
dec
jecxz
rcl
ja
and
xor
jg
push
cmc
xchg
aad
mov
lods
out
test
and
add
ret
xchg
ins
inc
adc
pop
adc
jmp
push
pop
jecxz
cli
mov
push
dec
push
and
push
std
sub
pop
les
push
pop
inc
sbb
mov
call
xor
movs
out
ds
pop
cmp
jge
cmc
mov
mov
or
dec
or
or
and
imul
cs
jmp
shr
cli
mov
pusha
or
inc
add
(bad)
fwait
shl
jmp
movs
inc
mov
lods
(bad)
popa
or
call
(bad)
mov
and
nop
in
sbb
call
cmp
mov
or
(bad)
into
xchg
lds
shl
mov
mov
sbb
dec
or
mov
pushf
std
lods
fbstp
pop
or
and
dec
es
and
fs
es
add
cmp
jl
lods
repnz
sbb
aas
inc
add
cmps
(bad)
fwait
call
inc
sbb
aam
div
xchg
mov
neg
and
dec
mul
pop
mov
xlat
xchg
movs
inc
outs
repz
sbb
push
es
dec
add
cli
mov
stc
mov
aad
ss
adc
mov
out
inc
adc
clc
mov
and
push
into
stos
fisttp
jno
jg
in
stc
lods
mov
cmp
push
push
xor
stos
std
cwde
aam
mov
push
sbb
adc
js
jmp
cdq
fst
popa
jmp
arpl
mov
add
inc
jecxz
pop
jecxz
mov
int
xor
mov
ret
xor
cli
nop
jge
or
sbb
leave
mov
mov
dec
sbb
jmp
jne
push
fist
inc
loope
dec
loopne
int3
xchg
cli
popa
or
ror
fidivr
outs
daa
and
rcr
fwait
(bad)
scas
mov
das
iret
add
inc
(bad)
cmps
pop
xor
pop
sub
cmp
sbb
fistp
adc
sub
and
pop
aas
jl
cmp
inc
pop
pop
lods
pop
sub
sbb
xchg
iret
or
fdivr
cli
mov
lea
push
sub
dec
cmp
div
aaa
dec
pop
loopne
out
push
lods
jmp
mov
clc
scas
mov
jbe
jne
xchg
rcl
pop
xchg
mov
sahf
ror
mov
mov
sub
xor
movs
cld
mov
les
mov
mov
or
push
add
dec
push
jae
loop
ss
push
add
ret
ds
ins
jmp
push
xor
dec
fnsave
jmp
lods
jmp
dec
jecxz
rcl
call
js
dec
cmp
and
fld
mov
outs
stos
test
(bad)
int
sub
inc
cmp
mov
and
mov
and
add
outs
in
mov
pop
inc
out
xchg
ror
xor
add
jnp
and
pop
sbb
leave
pop
and
xor
xor
sub
aaa
movs
fidiv
dec
adc
fimul
sub
outs
jmp
out
mov
scas
shl
imul
out
jbe
pop
adc
fwait
repnz
fisubr
pop
aas
dec
test
cmc
mov
mov
or
lahf
movs
scas
and
adc
or
enter
add
dec
loop
push
sub
mov
out
mov
test
ds
nop
retf
mov
fsubr
mov
and
cmp
xor
or
jmp
fmul
and
jae
xchg
jmp
adc
inc
das
push
mov
jge
xor
adc
mov
adc
dec
push
inc
ret
adc
inc
and
sbb
ds
stc
and
or
dec
and
es
mov
mov
inc
adc
hlt
xchg
jb
loopne
retf
inc
adc
sbb
pop
jmp
sbb
lods
push
jnp
stc
and
mov
(bad)
fdiv
popf
add
int
imul
shl
sti
xchg
sub
sbb
push
cmp
jmp
vphadduwd
out
fnsave
push
xor
push
aad
cmps
out
xchg
mov
mov
movs
in
lods
fsub
pop
loope
std
outs
lods
dec
loope
rol
sub
bound
int3
cld
xchg
test
sbb
pop
rcpps
or
dec
or
in
lods
mov
mov
popa
sub
stc
and
imul
cli
fisubr
sti
and
xor
sbb
or
xchg
nop
ret
lahf
mov
mov
shl
or
pop
jecxz
or
jae
outs
loopne
push
push
sub
or
int3
mov
add
int
ret
int
xchg
movs
std
mov
jbe
dec
jmp
xlat
or
ja
scas
mov
inc
add
push
adc
jnp
pop
imul
jmp
test
mov
mov
jmp
ja
pop
out
shl
lods
retf
test
ror
mov
sbb
inc
sbb
cmp
and
scas
enter
jns
je
inc
es
add
mov
add
jl
sahf
jmp
repz
das
dec
xchg
dec
sbb
add
ja
or
jbe
xor
push
adc
and
jle
xchg
xchg
int3
vpmacssdd
mov
rol
cli
lods
out
stos
out
(bad)
jmp
jmp
xlat
scas
test
aam
div
adc
ret
and
int3
mov
call
push
and
addr16
mov
sar
cli
data16
stos
jmp
mov
xchg
adc
inc
movs
fisub
pop
sbb
loop
icebp
mov
or
jp
ins
sbb
ins
push
jns
jmp
cs
sahf
int
loope
dec
sbb
cli
cwde
repz
mov
in
mov
scas
in
nop
pusha
sub
and
inc
loope
mov
sbb
sbb
pop
punpckhdq
jl
mov
xchg
leave
jne
in
mov
out
stc
sub
xor
dec
jecxz
xchg
push
mov
clc
mov
jge
ins
add
pop
loope
cmp
jns
adc
sub
mov
mov
bound
and
push
push
(bad)
mov
cs
add
in
(bad)
cld
xchg
mov
mov
xchg
or
adc
push
jmp
xor
daa
in
adc
hlt
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
push
add
and
add
add
and
jb
outs
addr16
add
add
adc
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
and
outs
bound
add
add
add
add
add
push
push
mov
add
cli
add
add
add
add
add
aaa
add
add
add
or
add
adc
add
adc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
push
add
add
add
add
add
add
push
add
add
add
or
or
pop
add
add
add
or
sub
pop
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
pop
add
add
add
add
movs
add
add
add
add
add
add
add
add
arpl
add
add
add
add
add
add
add
add
add
add
add
add
sbb
mov
push
add
add
push
add
add
push
add
add
add
add
retf
add
rol
out
add
or
push
add
add
add
add
add
push
push
adc
jg
push
push
or
call
push
push
push
push
add
push
push
add
add
push
pop
add
add
pop
pop
add
add
add
add
add
add
add
add
pop
out
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
adc
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
dec
add
add
add
add
xor
push
add
add
add
add
inc
add
push
and
add
add
add
add
add
add
xchg
or
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
or
jl
add
add
xchg
js
xor
or
cdq
and
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
adc
test
add
add
add
adc
add
add
dec
add
push
add
dec
add
push
add
dec
add
push
add
dec
add
push
add
outs
add
dec
add
push
add
mov
add
add
add
push
add
dec
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
leave
add
add
add
add
add
add
add
add
mov
add
add
add
add
jmp
rol
add
bound
jnp
test
add
add
add
add
add
add
xlat
add
in
add
test
adc
fild
inc
add
add
add
add
add
add
push
dec
add
ss
dec
add
dec
push
push
add
push
push
inc
add
mov
add
arpl
inc
add
push
add
mov
add
lea
bound
jno
mov
jno
add
inc
add
push
jle
push
add
push
dec
add
add
add
push
inc
add
sbb
jle
inc
add
test
cdq
add
mov
inc
add
xchg
add
push
dec
add
add
add
add
add
add
pop
cmps
add
add
pop
jle
inc
add
pop
inc
add
loope
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
and
add
add
add
cmp
arpl
xchg
add
arpl
fwait
add
arpl
mov
jge
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
sbb
add
add
add
add
gs
inc
jo
jne
dec
cs
add
outs
addr16
ins
add
arpl
jbe
push
gs
jne
arpl
add
arpl
jbe
push
jb
jo
jb
imul
ins
xor
ins
jae
outs
jb
imul
gs
add
push
arpl
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
imul
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
ins
outs
jb
bound
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
arpl
add
inc
inc
push
push
push
jno
dec
push
inc
cmp
jp
arpl
push
jne
push
push
dec
jbe
add
outs
je
jb
jae
arpl
bound
outs
js
pop
inc
jb
jo
outs
ja
inc
ins
outs
jae
add
jp
arpl
push
jne
push
push
dec
jbe
push
push
inc
jp
arpl
push
jne
push
push
dec
jbe
add
gs
xor
gs
inc
push
add
je
outs
outs
xor
ins
imul
je
outs
xor
je
push
add
imul
je
js
inc
outs
js
pop
push
gs
inc
push
add
jbe
outs
imul
add
jb
push
xor
push
pop
ins
inc
jae
je
js
inc
outs
js
pop
push
gs
inc
push
add
jb
xor
outs
popa
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
inc
jne
je
outs
add
je
outs
outs
xor
push
gs
inc
outs
js
je
js
inc
outs
js
add
gs
add
gs
xor
inc
outs
ins
bound
outs
js
arpl
bound
outs
js
add
je
outs
outs
xor
je
outs
js
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
jns
je
ins
cs
arpl
imul
imul
add
arpl
imul
jae
imul
imul
arpl
imul
outs
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
inc
jo
jne
dec
add
inc
push
push
inc
je
jb
bound
add
jo
imul
add
popa
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
jae
ins
bound
addr16
inc
jae
gs
bound
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
fs
add
je
add
add
imul
jb
inc
ins
imul
ja
add
jb
jns
inc
outs
jo
add
je
outs
fs
outs
outs
add
je
inc
outs
je
jns
outs
imul
push
jae
add
jbe
imul
popa
outs
outs
ins
add
js
add
popa
jb
jb
popa
jns
push
outs
push
je
imul
jb
push
je
imul
dec
outs
gs
popa
ins
imul
bound
arpl
outs
outs
je
outs
ins
add
je
push
gs
add
jo
jae
outs
add
imul
ins
add
jae
gs
cs
jb
ja
outs
add
ins
outs
jb
addr16
push
imul
gs
inc
popa
arpl
outs
ins
outs
jb
inc
outs
arpl
je
ins
add
je
inc
outs
arpl
jae
je
inc
outs
popa
bound
add
imul
pop
dec
outs
arpl
imul
pop
dec
popa
ins
add
jp
add
je
push
imul
pop
push
popa
bound
fs
inc
jne
je
outs
inc
popa
jae
add
outs
je
outs
je
ins
imul
add
je
push
gs
inc
ins
imul
outs
je
popa
outs
fs
gs
popa
fs
inc
ins
imul
pop
dec
ins
imul
je
outs
js
popa
jae
add
je
push
gs
fs
outs
ins
jns
jae
je
push
jae
push
jns
je
ins
push
popa
jae
ja
jb
inc
push
fs
push
gs
inc
push
add
jb
gs
je
ins
add
je
inc
outs
jb
gs
je
ins
add
jb
outs
jb
add
jb
outs
jb
addr16
inc
gs
jne
je
jae
je
inc
jne
jae
jb
addr16
push
jne
jno
outs
imul
pop
push
imul
add
jb
jp
outs
je
ins
inc
ins
imul
add
je
inc
ins
imul
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
inc
fs
fs
dec
outs
popa
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
jae
gs
cs
arpl
imul
jb
imul
inc
outs
fs
je
jb
bound
add
dec
push
jp
inc
dec
jno
ja
push
cs
jae
jne
arpl
add
add
sbb
push
add
add
dec
add
dec
add
add
push
add
add
inc
add
add
push
add
dec
add
push
add
xor
ja
js
inc
add
add
push
add
dec
add
push
add
xor
add
jle
cmp
or
rcl
dec
test
adc
imul
dec
add
or
ds
dec
push
add
out
aas
push
jle
inc
pop
ins
call
or
dec
push
cmp
pop
pop
or
imul
jmp
call
jle
jle
inc
pop
cmp
test
dec
aam
add
pop
pop
jle
jmp
dec
pop
pop
ins
call
jle
jle
hlt
jle
dec
or
or
ds
add
jg
inc
pop
hlt
jle
pop
jle
ds
sbb
pop
das
test
pop
ins
call
jmp
cmp
pop
sbb
mov
hlt
jle
sub
sbb
push
cmp
or
sbb
pop
ds
or
cmp
scas
gs
jle
sbb
add
jle
jle
sbb
call
or
mov
jle
cmp
dec
push
scas
or
lea
hlt
jle
cmp
mov
push
add
or
pop
pop
or
aas
push
shl
pop
dec
push
jo
or
push
add
aam
ds
jg
aas
push
jle
hlt
jle
push
jle
jle
out
or
or
ds
jle
scas
cmp
ds
add
pop
pop
aas
push
jle
hlt
jle
xor
hlt
jle
push
add
jle
add
imul
ds
cmp
ds
scas
gs
aam
shl
pop
ds
out
jg
aam
add
out
or
pop
scas
gs
sbb
jle
lea
adc
adc
hlt
jle
pop
inc
mov
jle
xor
inc
pop
add
add
(bad)
jle
jle
ins
call
jle
sbb
push
sbb
or
sbb
dec
sbb
(bad)
ds
jle
scas
gs
jg
or
dec
jle
ds
or
(bad)
jg
jle
jle
aam
add
dec
add
jg
shl
jle
or
or
pop
jle
inc
mov
jle
hlt
jle
pop
dec
push
dec
push
pop
pop
add
adc
cmp
shl
or
out
jle
or
or
sbb
sbb
push
hlt
jle
xor
or
shl
push
hlt
jle
dec
jle
out
hlt
jle
dec
or
pop
add
jg
inc
pop
or
inc
mov
mov
add
ds
jle
or
ds
jle
jg
hlt
jle
add
ds
dec
push
jo
ds
ds
pop
pop
inc
pop
test
sbb
ds
shl
push
inc
pop
ds
jle
hlt
jle
pop
out
jle
dec
push
jo
add
pop
pop
cmp
or
mov
jmp
das
ins
call
ds
jle
shl
sbb
mov
or
cmp
aas
push
jle
jle
adc
ds
aas
push
or
jle
lea
sbb
jle
dec
sbb
jle
jle
jle
ds
or
pop
jle
pop
pop
jle
jle
add
jle
ds
jle
rcl
pop
ins
call
jle
or
mov
mov
push
pop
pop
ds
jle
ds
hlt
jle
sub
jle
pop
pop
aam
or
aas
push
mov
jle
jle
jle
jmp
adc
push
inc
mov
rcl
(bad)
dec
hlt
jle
and
test
push
jle
cmp
jle
or
jle
sbb
jle
jle
jg
add
hlt
jle
pop
test
push
rcl
push
ds
jo
or
add
or
push
jle
jle
inc
pop
jle
hlt
jle
push
aas
push
dec
push
hlt
jle
push
sbb
add
push
dec
push
add
jle
mov
hlt
jle
rcl
push
ds
scas
gs
or
pop
jle
jle
adc
jle
jle
jo
add
add
push
dec
push
adc
ds
shl
dec
jle
ins
call
dec
push
sbb
cmp
sbb
pop
jg
add
or
aam
shl
push
dec
push
jle
sbb
rcl
pop
jle
cmp
cmp
ds
add
aas
push
jle
ds
hlt
jle
sbb
push
shl
xor
mov
sbb
cmp
push
or
jle
mov
pop
or
push
jle
jle
jle
or
jmp
pop
add
or
jg
dec
push
dec
push
hlt
jle
push
jle
mov
add
cmp
or
inc
pop
or
adc
scas
gs
jle
mov
add
jle
jle
sbb
push
ds
aas
push
shl
push
jle
jle
hlt
jle
cmp
jmp
sub
jle
ds
jle
aam
inc
pop
adc
aam
hlt
jle
adc
scas
gs
add
cmp
pop
dec
push
jle
add
xor
jle
aas
push
jle
jle
sbb
imul
jle
jle
inc
pop
inc
mov
push
jle
hlt
jle
lea
pop
add
or
hlt
jle
sbb
push
jle
cmp
scas
gs
gs
ds
add
hlt
jle
pop
ds
mov
cmp
test
sbb
push
dec
push
jle
or
(bad)
ds
or
push
jle
sbb
sub
scas
gs
call
adc
dec
push
aam
ds
jo
ds
hlt
jle
cmp
jg
jle
jmp
and
push
dec
push
adc
scas
gs
ds
pop
pop
or
push
jle
rcl
call
jle
or
jle
inc
mov
pop
shl
pop
aas
push
jg
rcl
push
cmp
jle
jle
aas
push
jle
jle
sbb
add
or
jle
cmp
hlt
jle
add
jle
or
sbb
inc
pop
add
shl
xor
scas
cmp
jle
jle
jle
jg
ds
add
inc
pop
ds
ds
cmp
jle
jle
test
push
jle
shl
cmp
push
add
inc
pop
jo
pop
pop
ds
cmp
hlt
jle
sbb
add
sbb
ins
call
jle
jle
jg
jmp
or
pop
hlt
jle
cmp
push
add
(bad)
aam
add
sbb
or
jle
or
hlt
jle
imul
pop
aas
push
add
ins
call
jle
jle
shl
or
adc
jle
jle
jle
or
push
or
out
add
adc
test
push
hlt
jle
and
adc
jo
sbb
cmp
or
out
hlt
jle
call
jle
jmp
arpl
or
hlt
jle
cmp
push
test
push
test
sbb
or
push
jle
add
inc
pop
sbb
mov
sbb
imul
dec
dec
push
aam
ds
jle
inc
mov
pop
jle
scas
or
jle
add
jle
jg
out
ins
call
or
cmp
jle
or
jle
out
or
jg
shl
dec
shl
push
add
jle
sbb
push
hlt
jle
push
jmp
mov
shl
mov
mov
ds
jle
inc
mov
add
jle
jle
rcl
pop
shl
xor
push
sbb
or
inc
pop
jle
sbb
cmp
jle
or
push
ds
add
jg
jle
ds
aam
hlt
jle
push
cmp
hlt
jle
cmp
arpl
xor
arpl
mov
push
ds
mov
add
pop
pop
pop
sbb
xor
jg
ds
add
jle
hlt
jle
(bad)
jle
ds
sbb
call
sbb
push
test
pop
jmp
mov
mov
sbb
ds
or
addr16
scas
cmp
add
jle
cmp
test
pop
jle
jle
jle
adc
hlt
jle
push
sbb
cmp
mov
ds
jle
cmp
jle
add
pop
pop
sbb
jg
shl
mov
jg
sbb
cmp
push
inc
pop
sbb
sbb
or
call
shl
dec
inc
pop
hlt
jle
sbb
call
jle
jg
cmp
jle
shl
push
add
cmp
pop
pop
jle
aam
cmp
ds
add
pop
inc
pop
jle
ds
sbb
or
dec
push
mov
or
sbb
add
hlt
jle
jle
push
jle
ds
aam
aam
aas
push
sbb
mov
cmp
jle
or
add
ds
jle
test
adc
cmp
jle
jle
test
mov
sbb
pop
out
jle
mov
out
mov
ds
ds
scas
gs
ds
shl
adc
pop
pop
out
jle
ds
jle
aam
ins
call
out
mov
jle
jo
test
sub
cmp
mov
sbb
push
or
adc
jg
jle
test
adc
jle
jle
jle
ds
add
jle
scas
gs
ds
aas
push
cmp
jle
ds
sbb
jle
mov
ds
inc
pop
add
push
shl
add
hlt
jle
push
jle
sbb
mov
ins
call
rcl
cmp
pop
sbb
out
hlt
jle
pop
adc
jle
pop
pop
sbb
pop
jle
aam
jle
add
hlt
jle
cmp
push
cmp
ds
sbb
push
sbb
sbb
ins
call
add
cmp
lea
jle
add
scas
gs
ds
jle
jle
pop
pop
rcl
add
or
dec
jle
jle
cmp
ds
add
adc
pop
pop
sbb
pop
sbb
jle
push
cmp
ds
add
jle
or
aas
push
jle
or
push
jle
adc
aam
jg
inc
mov
jle
push
or
mov
jle
jle
adc
add
jle
jmp
or
push
adc
jle
jg
jle
jle
pop
pop
jle
hlt
jle
sub
arpl
push
inc
mov
ds
pop
pop
jle
inc
pop
cmp
sbb
jle
or
cmp
shl
cmp
cmp
pop
pop
add
jle
jg
jle
hlt
jle
push
jle
or
jle
mov
aam
jle
ds
jle
ins
call
sbb
xor
hlt
jle
pop
or
mov
jo
hlt
jle
dec
scas
gs
pop
jle
aam
aam
jle
jle
add
sbb
inc
pop
ins
call
inc
pop
cmp
jle
jle
sbb
jle
cmp
jle
test
xor
ins
call
sbb
push
add
or
jle
adc
inc
pop
jle
mov
jle
aas
push
sbb
pop
add
sbb
push
cmp
hlt
jle
or
jle
jle
jle
sbb
lea
add
jle
out
sbb
cmp
add
inc
mov
aam
aas
push
add
scas
gs
jle
mov
jle
cmp
inc
mov
das
or
or
pop
sbb
lea
rcl
dec
aas
push
jmp
lea
dec
ins
call
jle
aas
push
hlt
jle
adc
jle
jle
ins
call
hlt
jle
sub
pop
jle
ds
test
cmp
push
ds
test
jle
push
or
pop
jle
aam
jle
or
or
cmp
push
jle
jle
mov
sbb
aam
sbb
pop
pop
sbb
cmp
lea
push
add
dec
push
jg
inc
pop
rcl
jle
push
or
or
pop
jg
cmp
pop
pop
ds
test
mov
pop
jmp
mov
pop
dec
push
dec
push
ds
jmp
sbb
and
aam
mov
sbb
cmp
adc
aam
inc
pop
jle
jle
jle
or
pop
sbb
arpl
jle
jle
inc
pop
out
or
ds
inc
pop
or
jle
add
hlt
jle
mov
push
ds
rcl
cmp
pop
or
or
sbb
imul
pop
sub
mov
jmp
gs
jle
push
rcl
pop
jle
aam
jle
jo
jo
jle
ds
ds
inc
mov
push
jle
add
add
mov
cmp
jle
cmp
jmp
arpl
dec
jle
jle
or
add
ds
dec
push
cmp
aam
out
jle
sbb
inc
pop
inc
pop
or
jle
out
dec
push
ds
jo
jle
add
dec
push
sbb
or
push
ds
hlt
jle
adc
pop
pop
aas
push
sbb
lea
adc
jmp
push
hlt
jle
mov
add
or
jle
sbb
(bad)
ds
sbb
mov
imul
jle
sbb
ds
sbb
mov
jle
jle
sbb
dec
dec
push
adc
jle
ds
jg
jle
jle
ds
cmp
jg
ds
adc
inc
pop
adc
jo
add
add
or
cmp
ins
call
inc
mov
push
add
adc
jle
scas
gs
jle
adc
jle
shl
push
add
jo
ds
hlt
jle
push
cmp
mov
jle
ds
jle
inc
mov
dec
hlt
jle
gs
or
cmp
and
jle
add
cmp
cmp
sbb
pop
ds
sbb
push
pop
pop
jle
jle
test
push
jmp
jle
jle
push
jle
jmp
push
add
push
add
(bad)
jle
sbb
push
jle
cmp
jle
jle
ds
sbb
jle
cmp
or
aam
cmp
jg
hlt
jle
cmp
rcl
dec
jle
jo
jle
jle
add
jle
jle
or
push
jle
aam
aam
jle
add
ds
or
aas
push
or
jle
jle
aam
test
lea
pop
jo
jle
or
jle
or
push
jle
cmp
jg
sbb
dec
add
pop
jle
hlt
jle
push
test
(bad)
hlt
jle
push
aas
push
jle
jg
jg
jmp
push
ds
inc
mov
sbb
dec
push
hlt
jle
pop
aas
push
test
cmp
push
adc
jle
jle
ds
test
gs
jle
movd
cmp
ds
pop
pop
inc
pop
add
jle
ds
jmp
add
call
out
jle
test
push
add
jle
sbb
call
ins
call
scas
gs
ds
jo
out
rcl
push
or
push
sbb
test
pop
jle
jle
jmp
imul
pop
pop
pop
test
cmp
push
or
jle
inc
mov
add
jle
hlt
jle
cmp
push
inc
mov
jle
add
scas
gs
jle
ds
jle
aam
inc
pop
dec
push
hlt
jle
push
cmp
add
ds
ds
test
call
jle
ds
jle
add
or
cmp
cmp
(bad)
ds
add
sbb
push
add
gs
inc
mov
adc
test
pop
jle
or
sbb
ds
sbb
jle
jle
sbb
or
pop
jle
mov
aam
sbb
add
sbb
pop
or
push
inc
mov
cmp
jle
dec
push
add
jle
jle
jle
or
push
jle
ins
call
or
sbb
aam
jmp
call
add
ds
rcl
lea
jle
gs
shl
pop
or
out
add
cmp
sbb
arpl
dec
or
ins
call
jle
ds
aas
push
aas
push
jle
sbb
add
mov
shl
(bad)
jle
ds
inc
mov
cmp
rcl
arpl
mov
add
jle
or
push
inc
mov
jle
cmp
mov
hlt
jle
jle
push
dec
push
jle
or
pop
jle
add
jle
jle
cmp
jle
out
jle
test
lea
pop
add
jle
scas
gs
jle
jle
sbb
cmp
ds
sbb
sbb
dec
ds
mov
shl
or
hlt
jle
call
mov
hlt
jle
dec
jo
jle
jmp
(bad)
push
jle
adc
out
shl
mov
push
add
jle
aam
ins
call
jle
inc
pop
add
mov
test
cmp
cmp
cmp
push
or
pop
hlt
jle
mov
aas
push
or
sub
jg
jle
jle
dec
push
pop
pop
adc
sbb
sub
imul
jmp
call
test
pop
or
sub
scas
gs
push
rcl
add
jo
ins
call
dec
push
sbb
or
aas
push
sbb
jle
jmp
mov
dec
push
ins
call
scas
gs
pop
or
pop
add
shl
jle
push
jo
out
jle
out
add
cmp
or
or
jle
cmp
add
ds
jle
sbb
pop
ins
call
jle
jle
rcl
pop
ds
jle
inc
pop
pop
pop
jo
shl
gs
push
add
sbb
arpl
cmp
add
push
sbb
or
add
aas
push
test
mov
(bad)
aam
jle
jle
mov
inc
mov
or
or
push
add
aas
push
or
or
or
inc
mov
jle
pop
jle
add
aam
or
dec
or
dec
scas
or
mov
imul
push
sbb
push
cmp
jle
ds
out
jle
add
inc
mov
sbb
or
addr16
push
jg
or
push
rcl
push
hlt
jle
gs
out
shl
(bad)
jle
or
jle
jle
jle
add
scas
gs
push
add
pop
or
jle
push
pop
pop
inc
pop
sbb
or
add
sbb
ds
hlt
jle
pop
jle
jle
jle
jle
sbb
out
jle
adc
jle
or
jle
jle
jle
scas
gs
jle
inc
pop
jle
add
adc
aas
push
or
pop
dec
push
or
jle
sbb
or
jle
ds
rcl
jle
cmp
lea
push
add
or
jle
sbb
pop
out
jle
add
pop
pop
hlt
jle
call
out
jle
jle
ds
mov
sbb
cmp
jle
cmp
jle
jg
pop
pop
mov
add
bound
jne
je
je
outs
add
xor
add
push
add
popa
add
add
je
add
je
inc
add
js
xor
add
bound
add
add
or
outs
add
add
punpckldq
jne
je
je
outs
add
xor
add
js
je
inc
add
js
add
or
ins
add
arpl
imul
or
outs
add
ins
add
add
add
add
outs
aam
stos
mov
push
fwait
mov
mov
pop
push
sbb
mov
add
add
push
adc
or
add
add
or
push
and
add
adc
push
or
add
add
add
push
adc
add
push
adc
add
adc
add
adc
push
add
push
add
add
or
add
add
add
add
or
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
adc
jne
and
adc
and
add
adc
pop
add
or
adc
add
add
add
add
add
or
add
adc
add
or
add
or
or
adc
sbb
sbb
or
or
xchg
add
add
add
push
add
add
add
sbb
push
push
sbb
sbb
aas
pop
jg
aad
cmp
test
adc
add
sub
or
and
add
xor
xor
cmp
sbb
and
add
add
and
add
or
add
adc
add
adc
and
add
adc
and
adc
add
and
xor
xor
xor
add
add
and
xor
xor
popa
xor
aaa
sub
sub
sub
data16
xor
add
add
adc
outs
jo
jb
addr16
xor
xor
add
push
add
or
pop
popa
popa
dec
jae
inc
add
adc
add
popa
dec
jae
inc
and
arpl
add
add
adc
ins
pop
inc
inc
fs
push
jae
pop
jno
push
jb
jbe
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
test
jae
gs
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
sldt
and
add
sldt
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
