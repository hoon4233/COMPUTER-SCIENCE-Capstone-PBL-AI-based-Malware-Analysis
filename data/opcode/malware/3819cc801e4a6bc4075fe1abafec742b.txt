adc
add
add
add
int3
frstor
fcom
aaa
neg
xor
jl
and
out
sub
adc
jmp
scas
dec
or
mov
test
pop
xor
xchg
lea
ins
test
fidivr
(bad)
mov
jmp
sbb
(bad)
jb
sub
add
test
xchg
and
or
xchg
(bad)
pop
sbb
mov
imul
out
data16
cli
cli
arpl
sub
lods
jmp
mov
dec
lock
popf
inc
ror
sbb
retf
xchg
inc
sbb
adc
pop
and
cmp
sti
push
and
fistp
inc
push
push
dec
mov
(bad)
movs
leave
(bad)
jbe
xor
call
ja
cmc
push
push
xchg
data16
arpl
aam
icebp
test
jo
les
sub
cs
outs
loope
adc
pop
mov
jl
dec
mov
rcl
fsub
movs
mov
hlt
pop
stos
movs
loope
loopne
pop
addr16
xchg
push
add
or
cmp
mov
(bad)
sbb
data16
ss
fmul
mov
mov
cmp
dec
scas
pop
xchg
movs
mov
addr16
pusha
jl
dec
xor
cmp
adc
dec
cld
xchg
jl
(bad)
in
fidiv
inc
(bad)
ins
pop
test
into
pusha
mov
push
clc
ret
and
adc
push
cmp
mov
xor
dec
jb
scas
dec
jecxz
sub
(bad)
jne
mov
add
in
dec
or
les
pop
test
add
iret
out
pushf
jmp
and
movs
(bad)
pusha
and
xor
xchg
mov
fs
ficomp
push
and
in
jecxz
(bad)
jl
mov
or
xor
rol
in
fsubr
sbb
add
ror
dec
int3
mov
inc
scas
dec
stos
call
xor
fst
loopne
cmc
hlt
inc
call
stos
stos
adc
dec
loop
jmp
dec
int
loop
or
sub
adc
mov
stc
scas
rcr
add
repnz
out
arpl
les
pop
fdiv
jle
cmc
push
lods
cdq
mov
adc
outs
adc
push
mov
ja
je
or
cmp
aas
inc
pop
int3
adc
mov
or
lds
mov
push
xchg
sbb
push
daa
inc
es
ret
mov
cmp
fs
int3
lahf
into
lods
rcl
pop
ja
xchg
adc
addr16
pop
mov
or
bound
inc
sub
pushf
inc
xor
xchg
mov
pop
xor
xlat
push
inc
test
xchg
std
sub
popf
jbe
in
out
jnp
sbb
xor
xchg
xchg
mov
rcl
xchg
jnp
cmp
outs
shr
out
dec
dec
ja
xor
pop
xor
jl
ins
pop
pop
push
rcr
jae
pop
jns
retf
cmps
out
xchg
sbb
ror
loope
push
in
inc
nop
jo
inc
and
cmp
mov
adc
popf
stos
cdq
arpl
xor
adc
xor
enter
mov
aas
fstp
test
add
leave
xor
shr
movs
xchg
jmp
in
jb
push
loopne
cs
movs
pop
push
outs
ss
test
mov
rol
movs
into
or
ror
mov
sar
mov
cmp
gs
pop
push
int3
dec
add
sub
xchg
mov
loope
inc
pop
in
clc
test
outs
dec
and
mov
adc
mov
dec
in
je
push
jl
lods
jns
jne
jmp
pop
mov
sub
add
or
call
inc
adc
std
inc
inc
rcl
nop
or
xchg
aam
add
aam
xchg
leave
arpl
jg
cmps
loopne
mov
lahf
dec
call
pushf
fs
mov
repnz
push
fucom
jl
cmps
(bad)
add
pop
enter
inc
add
add
call
daa
xchg
xor
sub
jl
data16
dec
dec
pop
out
mov
jmp
stos
call
inc
int
xchg
cdq
xlat
jge
mov
call
push
pop
adc
cmp
add
push
rcl
sbb
add
in
or
dec
adc
or
fwait
ja
popf
popa
mov
or
cmp
aam
push
lods
cmp
inc
dec
sbb
je
shl
fldcw
mov
push
pop
gs
pop
or
test
pop
or
sar
xchg
std
jne
in
in
push
pop
sbb
sbb
inc
sbb
xchg
cli
dec
sbb
mov
das
jg
lds
ins
cmp
xor
cmp
(bad)
adc
sar
add
xchg
sub
xchg
into
mov
adc
ins
mov
movs
xlat
shl
mov
(bad)
xchg
jo
pop
test
loop
push
es
or
pushf
inc
fldcw
inc
inc
js
and
cli
fisub
neg
mov
xchg
add
push
(bad)
clc
push
in
xchg
xor
and
push
pop
sbb
xor
dec
(bad)
and
or
adc
mov
xchg
daa
leave
cmp
(bad)
xchg
jp
outs
bound
inc
out
imul
pop
je
enter
aam
hlt
aas
or
mov
jno
cmp
or
in
pop
fwait
movs
inc
mov
push
mov
je
fcom
mov
ins
or
sub
xchg
or
mov
xor
xchg
xchg
pop
cmp
sub
or
sbb
sbb
fwait
and
test
sub
int
push
inc
rol
imul
lds
sbb
int3
xor
fisttp
xor
fadd
shl
dec
mov
push
leave
jle
jecxz
aaa
or
popf
retf
sub
xor
mov
and
add
or
mov
arpl
test
sti
and
and
xor
mov
popf
or
add
add
out
mov
and
ja
add
mov
cmp
pop
ss
add
neg
mov
call
lds
push
shl
mov
xchg
xchg
pop
jle
sbb
push
popa
adc
ret
jmp
movs
inc
push
pop
stos
retf
sar
xchg
inc
inc
scas
in
bound
aam
push
push
push
stos
es
pop
fsubr
(bad)
adc
push
sbb
(bad)
ficom
dec
dec
pop
pop
das
(bad)
bound
jecxz
sbb
pop
(bad)
hlt
push
jb
jno
icebp
cmp
jae
sub
test
sub
nop
fimul
xor
rcr
rcl
fcmovnbe
mov
es
add
(bad)
jg
je
jbe
jne
(bad)
xor
popf
sbb
add
pop
pop
cmp
pop
not
jo
mov
jne
push
mov
pusha
push
bound
int
or
adc
push
push
mov
adc
adc
in
dec
into
inc
(bad)
repz
(bad)
push
xchg
fimul
jl
sti
enter
cdq
sub
mov
jo
pop
add
imul
ror
mov
cmp
rcl
ss
(bad)
push
mov
add
je
jge
pop
add
daa
(bad)
xor
test
retf
or
push
std
ins
sub
mov
dec
fistp
cmp
cmps
aaa
mov
lods
stc
mov
jne
xlat
jo
test
jae
repnz
outs
dec
push
sub
dec
inc
cmp
iret
xor
and
fucomip
xor
ins
cmp
fbld
out
mov
test
push
iret
aam
shl
fwait
es
clc
xor
cwde
mov
mov
sub
ret
jns
fldcw
repz
into
jl
push
mov
cmp
ja
and
jecxz
arpl
xchg
(bad)
setp
pop
out
loope
pop
mov
int3
pop
sbb
jmp
jnp
or
dec
psubq
js
sub
(bad)
in
push
cli
in
xchg
mov
inc
sbb
mov
and
sbb
mov
mul
clc
ror
push
sbb
cli
dec
repz
loope
cmps
retf
pushf
jmp
rcr
fs
inc
movs
hlt
test
mov
icebp
mov
fmul
cmp
ins
inc
outs
popf
(bad)
pop
dec
je
sub
jmp
fcom
or
dec
js
sub
daa
dec
dec
xor
in
xor
les
pop
xor
cmps
int3
jo
mov
mov
sbb
cmps
out
mov
mov
jno
mov
xor
(bad)
cmp
push
adc
xor
addr16
jmp
adc
inc
pushf
int
lods
lock
sbb
or
call
push
adc
out
push
mov
iret
mov
popa
adc
xchg
mov
or
mov
mov
(bad)
fs
lahf
vmovdqa
popf
mov
or
sbb
sub
mov
xchg
mov
movs
inc
sub
orps
pop
push
add
dec
scas
lods
das
xor
jg
mov
mov
clc
test
sar
or
std
ja
call
clc
fwait
jmp
shl
sbb
cdq
push
jno
inc
popf
iret
jp
and
xor
sub
adc
pushf
mov
adc
repnz
dec
sub
ret
call
xchg
add
xor
adc
addr16
adc
scas
xor
xchg
cmp
push
add
(bad)
pop
add
nop
mov
jmp
jne
add
mov
fmul
xor
repz
mov
ins
add
gs
jbe
cmp
cmc
inc
mov
es
dec
sbb
add
aad
inc
inc
mov
add
sbb
lods
int3
and
mov
mov
movs
inc
inc
push
(bad)
mov
xchg
or
es
out
cmp
int
xchg
inc
sbb
retf
inc
mov
jno
xchg
daa
in
add
movs
mov
jno
sbb
mov
imul
hlt
cmp
mul
out
jb
inc
je
nop
cli
fistp
outs
sbb
cmp
mov
inc
cmp
sbb
jb
(bad)
jbe
shl
out
in
loop
fidivr
ins
push
ret
and
jno
cmp
in
sbb
sbb
dec
add
imul
mov
dec
push
(bad)
stos
add
shl
and
pop
sub
sbb
ins
jb
adc
pop
shl
pushf
pusha
je
mov
in
scas
out
mov
jg
cmp
cwde
sahf
lds
scas
sar
in
idiv
sbb
aas
push
pop
pop
jg
xor
test
sub
inc
js
(bad)
mov
std
mov
xor
in
jmp
sub
inc
stos
cmp
cmp
push
sbb
ret
jecxz
cwde
stc
cmc
mov
lds
gs
sbb
pop
in
pop
push
fwait
jno
retf
dec
lahf
das
adc
test
das
xor
xchg
jmp
(bad)
mov
xchg
outs
sbb
cmp
dec
jl
xchg
jnp
nop
jmp
jo
lods
je
inc
or
stc
sub
stos
cmp
scas
pop
aaa
ret
pop
mov
(bad)
push
cmp
dec
xchg
adc
add
cli
aas
lea
xchg
sbb
adc
(bad)
popa
push
leave
outs
out
adc
stos
pop
and
ret
pop
or
test
or
or
mov
fisub
ror
es
ror
mov
jp
jg
outs
por
cmpps
fwait
adc
out
test
push
lahf
stos
mul
mov
jo
sbb
popa
sbb
push
dec
or
scas
ret
addr16
jnp
cwde
xor
hlt
adc
mov
fnsave
mov
add
xor
pop
xor
imul
xchg
in
mov
and
dec
jmp
std
inc
xchg
jnp
sub
xchg
or
and
(bad)
pusha
popa
mov
cmp
inc
fisubr
les
loope
mov
xchg
popf
ror
cld
mov
rcl
xchg
xchg
sti
mov
mov
mov
cmp
(bad)
clc
add
xchg
push
pusha
shr
inc
(bad)
mov
bound
fstp
in
ja
sub
mov
jno
test
sahf
cmc
dec
(bad)
mov
and
lea
push
gs
push
jg
dec
and
loope
stc
cmc
adc
or
jbe
jbe
icebp
into
rol
xchg
mov
sbb
je
jp
adc
sbb
pushf
(bad)
and
inc
push
mov
add
lds
jmp
sar
xor
or
jnp
pop
movs
pop
leave
ficom
mov
cmc
push
pop
push
ins
dec
lock
pop
mov
xchg
or
out
xor
inc
cmp
or
push
out
mov
out
addr16
mov
inc
mov
adc
fs
pop
xchg
loop
dec
fld
lock
lea
xor
dec
mov
popf
cmp
push
push
mov
lods
jge
xchg
enter
xchg
popa
popa
adc
pop
ret
outs
xor
ficom
int
inc
es
sub
int
cmp
icebp
vpsllq
jne
lods
xor
ds
add
bound
fcomp
sahf
mov
push
pop
push
jmp
leave
loope
fistp
fbstp
add
rcl
xchg
loopne
mov
mov
sub
dec
mov
fwait
(bad)
mov
sub
or
jecxz
fadd
test
test
xchg
add
bound
sbb
mov
xchg
inc
adc
push
push
push
in
fbld
xchg
ret
push
data16
sub
je
mov
mov
jmp
call
jbe
mov
test
pop
and
lods
cmps
cmp
inc
jns
mov
mov
pop
out
loope
stos
pop
or
popf
and
push
add
ret
out
clc
mov
imul
enter
mov
in
bound
xor
aad
push
bound
mov
mov
ja
cmps
daa
pop
in
out
iret
(bad)
push
rol
cmp
(bad)
fild
or
fcmovnbe
les
int3
ret
(bad)
mov
mov
test
mov
mov
inc
or
pop
loope
lods
xlat
jp
aad
movs
sub
push
call
add
xchg
in
test
xchg
pop
mov
test
cmp
leave
push
xchg
mov
jmp
inc
push
sbb
jecxz
(bad)
pop
mov
add
int
imul
ret
test
scas
lahf
mov
sbb
inc
loop
inc
enter
lods
or
test
pop
xor
push
ja
add
bnd
mov
fdivr
mov
dec
sub
mov
cmp
pusha
das
push
and
sbb
add
push
sbb
jge
call
pop
enter
mov
xchg
dec
stc
(bad)
mov
mov
sbb
int3
pop
fs
pop
dec
lods
xlat
xor
test
add
loop
cmp
pop
ja
mov
cmc
inc
dec
sub
fcmovbe
test
arpl
sub
je
popf
ficomp
jo
mov
(bad)
out
cmp
jo
xchg
dec
or
mov
popa
rcr
mov
(bad)
js
sbb
mov
xor
or
aad
fidivr
pop
fcomp
jmp
cmp
jae
aam
(bad)
std
or
inc
jl
cmps
int3
or
dec
popf
sub
push
push
int
repz
and
cld
arpl
test
jo
jge
sbb
js
add
lods
cdq
fistp
out
fsubp
lea
cmp
xor
enter
retf
and
add
inc
daa
fs
mov
push
addr16
out
xlat
add
xchg
sbb
stos
sbb
sbb
xor
add
adc
add
movs
mov
sbb
test
xor
movs
xchg
das
sub
pop
sub
(bad)
ss
(bad)
dec
cmps
cli
pop
add
aam
ds
sbb
cmp
and
cs
call
pop
xor
sti
das
dec
out
fisub
mov
(bad)
aam
mov
and
mov
jmp
mov
and
test
mov
push
xor
inc
arpl
and
cmp
xor
daa
jg
xchg
pop
stc
into
pusha
jl
jecxz
ja
movs
mov
call
dec
and
xor
inc
add
and
inc
out
bound
aas
xor
jns
xor
(bad)
jle
paddusw
repz
cmp
push
pop
mov
pop
in
test
out
lds
xchg
lea
es
mov
sbb
repz
dec
mov
in
outs
cmp
xchg
jmp
add
or
gs
pop
imul
mov
in
outs
xchg
or
mov
bswap
mov
add
add
cmp
jp
leave
jmp
adc
fs
ins
sub
adc
imul
sbb
push
std
je
jno
cdq
out
jmp
fsub
add
mov
push
dec
adc
dec
stc
es
sub
scas
push
sbb
mov
cmp
jo
mov
mov
iret
mov
jo
cmp
push
or
icebp
inc
nop
test
mul
rcl
iret
mov
stos
push
mov
dec
pusha
fidivr
dec
and
xchg
xor
movs
dec
enter
mov
lods
xlat
push
ins
cmp
mov
cli
sti
jg
jb
jbe
sbb
or
jmp
push
popa
push
inc
pop
test
cmp
cmps
call
sbb
popa
aad
xchg
scas
bound
or
rcr
loopne
xor
sub
adc
ss
push
sti
push
ficomp
pop
out
out
div
push
pop
fidivr
fsubrp
ins
pop
jle
xchg
or
movs
(bad)
repz
hlt
jle
fstp
fs
(bad)
mov
xchg
test
jo
repz
pop
jp
arpl
cdq
in
xchg
pop
sbb
rol
cmp
das
scas
sbb
push
lock
lock
out
xor
adc
mov
cmps
test
ins
lea
jp
mov
mov
call
scas
add
mov
std
or
cli
imul
rcl
push
lock
jle
sub
shr
dec
dec
retf
call
dec
ja
js
xor
(bad)
cmp
pushf
mov
pop
jnp
xchg
es
mov
int
lock
dec
cld
fcmovb
movs
aas
ficomp
inc
pop
les
mov
sbb
addr16
scas
push
(bad)
or
sbb
es
jmp
(bad)
mov
jno
add
pop
xor
mov
sbb
retf
pop
(bad)
dec
push
popf
clc
mov
push
fwait
jae
fimul
inc
jns
mov
call
aas
xor
mov
mov
jo
push
call
lods
jp
cmps
mov
into
inc
lods
imul
dec
mov
sub
hlt
loop
and
mov
mov
push
cwde
dec
scas
loopne
sbb
pusha
mov
inc
cs
xchg
cmp
add
pop
div
lods
call
xor
dec
adc
fwait
xor
sub
test
ins
or
iret
mov
mov
out
xchg
mov
sub
cmps
xchg
dec
lahf
(bad)
pop
mov
jg
cmp
xor
jge
mov
js
jecxz
stos
(bad)
push
outs
fstp
daa
pushf
mov
sub
add
mov
shl
pushf
imul
inc
je
mov
pop
ins
pop
and
(bad)
repz
push
mov
ds
scas
cdq
ins
dec
iret
test
aad
sub
jp
js
pop
outs
jbe
xor
test
ret
mov
out
(bad)
ret
dec
mov
inc
cmp
(bad)
ss
jge
mov
push
jle
inc
cmp
xchg
fisttp
lea
xor
adc
cs
aam
jp
test
xor
aaa
sbb
mov
adc
or
js
stos
xchg
movs
lahf
xchg
test
sub
sub
sti
inc
rol
push
jb
rol
push
sub
xor
jp
cmps
pop
pusha
lea
std
ins
pop
push
shl
xchg
mov
lds
push
cs
clc
xchg
clc
aaa
repz
pop
sub
xchg
xor
and
sbb
jne
xchg
out
ret
adc
icebp
out
leave
mov
call
loop
clc
outs
cmp
inc
mov
mov
xchg
aaa
or
shl
sbb
ins
mov
or
push
add
into
sub
das
sbb
mov
cmp
sbb
xsha1
cmps
mov
lds
mov
out
int
sar
pop
jo
push
cmp
mov
adc
call
adc
xchg
data16
in
jle
in
movs
lods
sub
xor
cwde
add
inc
xor
das
dec
stc
fwait
ins
ds
sbb
das
lahf
(bad)
loopne
add
jae
jle
dec
repz
repz
out
inc
cli
lds
xor
jne
ret
ds
or
fldcw
pop
repnz
(bad)
and
sbb
push
adc
into
and
mov
or
or
push
push
pushf
ds
lods
sub
jo
push
shr
add
push
mov
jno
ds
adc
mov
xchg
xor
and
and
add
inc
cmps
xor
xchg
push
add
data16
ss
dec
push
pop
jo
jne
inc
add
mov
dec
add
inc
cmps
rcl
push
cli
push
push
jmp
add
jecxz
jp
push
dec
sub
idiv
lock
sub
push
pusha
outs
cld
pop
cmpps
jg
call
xchg
push
mov
adc
daa
ret
out
cmp
push
iret
movs
xchg
daa
retf
ror
push
xor
mov
cwde
mov
out
xchg
(bad)
(bad)
ja
pop
pop
mov
ds
(bad)
sub
sub
loop
lds
or
adc
xor
adc
and
dec
cli
jmp
(bad)
push
dec
pop
push
ss
(bad)
lock
int
call
jnp
stos
cmp
lods
adc
data16
out
pop
sub
test
push
pusha
ret
gs
lods
aaa
inc
push
(bad)
out
xchg
sbb
mov
arpl
aas
cmp
mov
jge
scas
inc
mov
push
daa
add
mov
and
daa
mov
mov
inc
cdq
sub
dec
hlt
xlat
xchg
stos
jg
ins
data16
pop
pop
sbb
mov
inc
add
mov
mov
aam
xor
(bad)
icebp
loopne
aad
arpl
nop
dec
in
push
sub
mov
fistp
call
mov
ret
mov
xor
(bad)
sub
jnp
mov
aaa
les
test
add
icebp
std
leave
jle
pop
add
xor
add
shl
pop
cmp
call
jne
push
cmps
push
or
pop
xor
sub
iret
mov
lea
jecxz
xchg
lods
mov
mov
or
(bad)
iret
xor
mov
sub
dec
dec
xor
mov
pop
outs
sbb
mov
sub
std
int
jae
xor
ins
push
repz
bound
jge
out
dec
add
jbe
add
jl
or
sbb
test
lods
pop
in
push
jmp
adc
jnp
dec
and
mov
mov
cwde
hlt
add
xchg
lods
ja
es
out
sub
pop
fs
mov
pop
mov
push
inc
es
add
imul
push
movs
arpl
or
loopne
cmps
adc
movs
push
pop
imul
out
add
stos
or
add
sub
and
int
movs
pop
mov
pop
adc
test
inc
xor
push
(bad)
sahf
adc
fild
add
mov
daa
inc
adc
jns
cmp
arpl
or
mov
in
das
int
xor
ins
jo
add
retf
push
cmp
outs
imul
adc
sub
popf
pop
xchg
hlt
repz
lods
stc
xchg
jmp
fcmovbe
je
std
daa
add
jecxz
cmps
retf
xor
and
mov
shl
lds
loopne
dec
das
push
inc
or
inc
sub
inc
or
inc
movs
iret
cwde
dec
les
jbe
aas
stos
cmp
movs
shl
sahf
retf
mov
add
sbb
jmp
jmp
dec
aaa
ret
out
test
jecxz
pop
sbb
mov
es
jno
xor
rol
in
scas
bound
test
or
stos
idiv
ds
or
pop
xchg
clc
jecxz
or
ds
mov
ss
jg
mov
or
fcomp
dec
inc
mov
add
std
addr16
popf
icebp
jbe
jae
or
xor
dec
popa
out
jmp
pushf
in
dec
unpckhps
and
ret
xchg
into
retf
mov
push
push
pop
loopne
xchg
lods
out
dec
or
sub
sub
cdq
cmp
jecxz
in
or
xchg
jge
adc
xchg
and
ins
or
bswap
push
ret
fs
inc
xor
mov
ds
mov
cmp
or
test
pusha
mov
icebp
scas
pop
fisubr
cmc
rcr
cmp
ds
sub
add
test
jmp
mov
cmp
and
idiv
movd
mov
push
bound
push
inc
fstp
(bad)
hlt
or
loop
push
jo
fstp
ins
inc
or
(bad)
xchg
or
cmps
xchg
test
xor
inc
xchg
sar
inc
sbb
mov
imul
and
popf
aas
fldcw
xchg
mov
lods
push
cmp
(bad)
or
int
jl
js
fisubr
xchg
mov
sti
test
std
sbb
push
xor
xchg
je
fldcw
pop
xchg
jno
ficom
jmp
push
lahf
jge
jl
mov
pop
push
adc
xchg
mov
xchg
lods
xlat
pusha
pop
push
mov
dec
mov
shl
std
ret
add
sbb
ss
arpl
cli
fnstenv
mov
ret
stc
jp
sbb
xor
xchg
mov
and
mov
jl
adc
popf
aad
mov
sbb
wbinvd
into
mov
fwait
test
in
mov
cwde
mov
fwait
mov
sahf
dec
jnp
and
add
sti
adc
into
push
xor
out
mov
gs
(bad)
cdq
dec
js
dec
push
fist
shr
pop
outs
or
outs
ins
xor
xchg
or
inc
xor
dec
icebp
cmps
sti
and
sti
cmovle
pop
(bad)
push
adc
ret
(bad)
data16
push
inc
into
bound
outs
repz
sbb
inc
rcl
scas
retf
and
cdq
and
imul
adc
repnz
pop
call
push
ins
jae
mov
dec
mov
add
cmp
dec
loopne
cmps
cmp
jmp
pop
or
cmc
adc
mov
loop
out
cmp
scas
xchg
adc
into
scas
iret
dec
jns
bnd
inc
sub
inc
pushf
add
mov
inc
pushf
cld
pop
test
repz
mov
clc
dec
adc
xchg
dec
cmp
in
ret
add
add
rcr
data16
fisubr
call
and
mov
jbe
int3
movs
jb
sbb
inc
push
repnz
jns
je
(bad)
gs
jnp
or
frstor
cli
stos
popf
jne
test
mov
mov
in
ja
pop
gs
mov
pop
push
fnstsw
mov
xor
sub
mov
jae
add
imul
ret
(bad)
loope
aas
sub
mov
adc
inc
stos
mov
sub
(bad)
loopne
(bad)
out
or
lods
retf
dec
or
dec
pop
dec
push
mov
stos
fsubr
pop
mov
xchg
out
cwde
mov
sub
mov
ins
cmp
int
ss
outs
push
test
fbstp
in
div
cmc
push
jb
mov
xlat
out
sub
inc
jbe
push
aad
adc
cmp
mov
clc
mov
dec
adc
mov
sub
cmc
popf
cwde
push
jl
pop
sbb
jno
in
pop
popa
cli
xlat
xor
xchg
cmp
or
ret
lods
fldenv
aam
repz
cmp
fcmovnbe
xchg
xchg
out
sub
cdq
cmps
fst
add
add
adc
int
adc
or
rcl
mov
xchg
jne
pop
nop
rol
(bad)
fs
imul
lds
int3
es
and
mul
xor
add
mov
pop
inc
sar
outs
mov
ror
(bad)
mov
test
and
scas
frstor
and
ret
clc
out
cli
sbb
cmps
push
xchg
ret
pop
sub
and
out
loopne
in
dec
jge
loop
push
sbb
popa
movs
fidiv
jne
adc
jbe
xchg
aas
sub
mov
adc
gs
mov
pop
dec
dec
dec
pop
lea
sub
mov
mov
stos
inc
addr16
js
and
jbe
push
es
pop
pop
(bad)
cmc
add
pop
cs
mov
mov
and
pop
jmp
lock
ficomp
add
imul
mov
adc
adc
jl
mov
in
sub
push
xor
test
test
pop
outs
pusha
or
repz
xor
pop
pushf
test
ja
mov
jne
add
jp
push
push
adc
inc
test
pusha
retf
xor
cmc
out
sub
mov
rol
sbb
xor
xchg
xchg
jmp
push
(bad)
push
mov
push
push
out
jg
add
outs
into
loopne
fsub
and
int
adc
pop
dec
test
dec
jnp
in
add
xchg
pop
imul
pop
lods
in
xchg
outs
dec
popa
add
and
xchg
aam
lds
adc
mov
mov
syscall
ds
push
xchg
push
imul
jnp
and
pop
(bad)
or
cmovp
retf
das
or
scas
sub
sub
xlat
addr16
(bad)
xchg
sub
out
loop
stc
scas
mov
xor
pop
mov
call
inc
int3
and
dec
ret
adc
dec
hlt
mov
push
cmp
inc
pop
dec
cmp
hlt
adc
dec
adc
fwait
cmp
outs
pop
pop
loop
test
xchg
mov
fisttp
push
icebp
pusha
jb
xchg
add
fstp
pop
pop
xor
retf
dec
sub
mov
scas
push
data16
int
inc
jle
(bad)
sbb
test
hlt
(bad)
out
cmp
inc
and
dec
ins
and
(bad)
(bad)
scas
cli
push
adc
mov
into
mov
stos
dec
int3
pop
jmp
in
mov
stc
mov
mov
add
sahf
jecxz
outs
cli
test
jo
ret
push
jmp
ror
mul
xor
dec
das
fidivr
sub
push
ins
shl
(bad)
out
enter
mov
sub
nop
sub
or
mov
mov
jnp
pusha
mov
(bad)
shl
aam
or
adc
mov
jp
jno
xor
inc
cmc
ds
and
mov
jnp
scas
lea
push
stos
xchg
ret
xor
xchg
ror
lds
movs
sti
mov
ficomp
ficomp
fldln2
xchg
sub
stos
jno
(bad)
mov
or
sar
movs
xor
adc
leave
scas
cwde
retf
bound
icebp
inc
sbb
xor
cmp
lock
push
xor
sub
jge
gs
out
ret
or
xor
in
mov
inc
mov
movs
sub
fnsave
push
nop
lea
inc
jge
xor
aas
ficom
repz
jmp
int
(bad)
(bad)
outs
cmp
xchg
(bad)
shr
mov
cmp
mov
and
loope
clc
loop
pop
pop
mov
sti
mov
pop
or
and
xchg
and
cmp
jo
mov
pop
mov
out
adc
out
or
aaa
lods
add
cmp
jne
adc
adc
inc
jg
scas
out
pop
and
fs
xor
pushf
jmp
jbe
jle
xchg
pop
xchg
add
retf
jb
sti
out
lds
mov
sub
retf
or
test
outs
leave
jo
pop
mov
dec
neg
inc
push
pop
and
(bad)
(bad)
jns
push
cld
sbb
les
mov
ror
jae
xor
jmp
mul
xchg
inc
movs
mov
inc
fisub
outs
(bad)
dec
pusha
loopne
or
cli
out
jno
movs
out
pop
cmp
adc
sbb
xor
stc
xchg
stos
push
movs
gs
and
xor
cmps
retf
adc
dec
icebp
xor
aad
jmp
pop
shr
sbb
inc
mov
mov
push
scas
sub
cmc
(bad)
xlat
and
or
cmp
(bad)
pop
pop
sub
into
lods
out
scas
cs
push
call
push
loope
outs
cmps
or
lahf
mov
ret
mov
and
dec
inc
xor
fwait
mov
mov
adc
js
cmp
stos
lea
jp
mov
adc
je
out
jl
aas
xor
mov
scas
pop
add
pop
movs
cmp
mov
les
test
jge
jg
iret
xor
add
inc
mov
xchg
mov
or
or
mov
ja
push
adc
repnz
(bad)
inc
movs
cld
mov
cdq
test
xlat
dec
es
psrld
xor
push
mov
push
addr16
xor
jnp
cmp
imul
adc
inc
mov
out
scas
je
lds
pop
pop
pop
pop
adc
daa
sar
aaa
xchg
nop
js
mov
sub
sar
aam
cld
scas
shr
mov
adc
pop
sbb
and
inc
pop
xchg
push
jae
dec
cmp
outs
rep
jne
repz
es
pop
xchg
mov
fmul
stos
je
mov
jecxz
scas
xor
or
std
mov
scas
cmp
vmread
jge
arpl
xchg
pop
push
nop
test
pushf
adc
mov
je
aas
jnp
mov
and
pop
or
mov
push
jns
add
outs
stc
ret
jno
in
sbb
rcr
sbb
sub
pop
jns
les
loope
mov
xchg
pop
fidivr
add
mov
mov
shl
sub
and
movs
mov
cmp
inc
sbb
push
sbb
mov
sar
xchg
sub
test
movs
sahf
and
icebp
rcl
sub
sub
test
outs
into
ins
movs
add
sbb
mov
mov
fldenv
dec
sub
mov
sahf
xchg
out
adc
enter
mov
cmps
pop
mov
inc
mov
sub
inc
sub
push
inc
les
clc
rol
jp
mov
sbb
loope
ja
xlat
sbb
pop
mov
enter
shr
xchg
or
mov
push
lock
sbb
sbb
cdq
rcl
pop
(bad)
mov
loop
push
mov
mov
stc
int
arpl
rol
dec
jae
cli
adc
sbb
ffreep
leave
aad
bound
xchg
xor
xchg
sbb
push
xlat
lods
sahf
repz
mov
xor
mov
fs
inc
sahf
je
dec
or
in
dec
(bad)
repnz
je
outs
fwait
sbb
sbb
sbb
push
dec
out
mov
xor
jns
push
movs
movs
pusha
bound
imul
jmp
cmp
pop
cmp
fcomp
dec
(bad)
xor
jo
dec
data16
fsubr
call
test
imul
arpl
mov
dec
mov
push
sub
loope
push
xchg
mov
or
jns
xor
test
add
and
or
mov
xor
sbb
cmp
scas
sahf
inc
xlat
cmp
fcomp
xchg
mov
jb
loope
clc
push
cld
std
nop
push
mov
jb
mov
leave
mov
and
ret
aas
dec
rcr
push
cmps
add
xor
mov
adc
sbb
aad
repz
fst
scas
inc
cmc
mov
out
cmc
mov
mov
mov
jp
mov
ss
les
mov
push
add
cmp
mov
mov
sar
xchg
push
xchg
xchg
stos
and
popa
out
or
jmp
bound
xchg
adc
idiv
retf
or
push
inc
adc
or
adc
push
mov
inc
dec
fisttp
pop
mov
shr
daa
out
xor
inc
or
ret
xchg
stos
jmp
sahf
out
cmp
pop
add
pop
mov
aaa
into
push
(bad)
stc
ja
mov
jle
std
jp
sbb
dec
(bad)
mov
ja
outs
dec
mov
lahf
jb
xchg
jno
inc
in
push
mov
push
out
ins
xor
cmp
scas
pop
aas
jnp
pushf
jle
lock
push
jbe
or
dec
jl
add
jae
int3
iret
adc
arpl
cdq
inc
fwait
xlat
rcl
aam
xchg
xchg
and
ds
lods
mov
shl
dec
mov
jecxz
adc
or
sahf
dec
idiv
dec
cdq
mov
loop
pop
mov
jmp
rol
xchg
sbb
mov
mov
xchg
int
mov
out
push
fadd
adc
std
clc
add
call
add
pop
inc
jnp
iret
shl
stos
xchg
add
jecxz
retf
cmp
or
dec
push
cmp
or
shl
fcmovne
cmc
adc
movs
sub
lds
cs
and
adc
test
add
inc
imul
call
add
dec
(bad)
adc
pop
je
jmp
sub
sbb
out
(bad)
mov
out
cmp
and
push
in
in
jg
call
inc
sbb
cmp
push
mov
sub
inc
and
imul
fwait
(bad)
rcr
pushf
pop
in
je
fdiv
pop
push
cmp
add
test
ret
(bad)
and
jns
or
mov
push
jae
les
jg
add
jno
inc
fwait
push
jo
ds
sub
jb
pop
sar
out
mov
test
pop
lock
adc
or
out
xlat
ret
enter
ror
xchg
jmp
(bad)
shl
sub
sbb
and
ss
push
sub
push
push
jmp
fcompp
inc
cmps
push
mov
sbb
mov
jnp
dec
enter
inc
mov
clc
outs
mov
add
in
mov
sbb
scas
jmp
mov
rcr
adc
rcl
sub
(bad)
aad
xchg
dec
fnstenv
mov
ja
mov
mov
or
xchg
jb
call
mov
out
rcr
daa
jo
ins
repz
js
mov
pop
ds
cmp
cld
psubsb
push
sub
fisub
or
add
pop
mov
jno
jl
ins
dec
mov
ds
sti
sahf
lds
outs
ds
mov
sub
outs
mov
pop
stc
std
retf
not
push
retf
push
push
mov
das
sub
ret
or
test
adc
shl
add
mov
push
xchg
nop
test
mov
add
iret
rol
(bad)
scas
rcl
mov
daa
jg
shr
cli
arpl
jmp
jns
loope
dec
fcmovu
xor
xor
jns
imul
inc
outs
xor
cmp
adc
les
sbb
call
data16
cs
fidiv
sahf
popa
jae
push
xor
xor
mov
mov
fcom
sbb
cmp
jle
mov
mov
lods
mov
adc
les
call
cmp
je
mov
or
xchg
jge
jmp
arpl
(bad)
cmps
dec
and
popf
inc
popf
jecxz
aas
ror
push
xchg
mov
imul
adc
shl
hlt
adc
icebp
in
push
outs
fucom
jg
jae
or
inc
or
retf
(bad)
ds
add
add
cmp
cmp
(bad)
jno
push
mov
test
mov
loopne
xchg
xor
fist
int
and
packsswb
jge
fild
js
mov
push
test
push
clc
(bad)
repz
mov
push
mov
scas
mov
push
lods
rcl
nop
sub
pop
inc
(bad)
cli
pop
mov
inc
rcr
mov
jne
hlt
cmc
or
push
sbb
xchg
cdq
mov
push
push
and
into
js
xor
jge
cmc
stc
sub
jne
ret
in
out
daa
inc
lea
mov
stos
jne
jnp
sbb
mov
mov
hlt
fisub
adc
repnz
or
popa
ret
fnstcw
xor
pusha
fwait
popa
cwde
in
push
imul
push
sub
popf
ficomp
test
hlt
cmc
mov
push
movs
mov
inc
or
ins
pop
mov
out
push
mov
or
adc
js
mov
add
dec
es
mov
loop
cs
in
mov
out
jne
int
adc
dec
and
loop
test
pop
neg
sbb
inc
adc
jmp
inc
aam
rcr
cmc
jp
ins
pop
mov
xor
mov
in
pop
aam
aas
les
in
sub
dec
mov
hlt
leave
xor
out
fimul
cmp
clc
je
ror
mov
or
in
pop
aad
dec
cli
and
movs
add
mov
fwait
adc
repnz
mov
add
mov
sub
pop
ficomp
aaa
xor
iret
mov
mov
lea
lea
(bad)
pop
outs
(bad)
cmp
loop
cmp
push
jnp
and
cli
movs
ins
shl
or
out
popa
cmps
cmp
std
fnstcw
stos
test
test
xchg
pop
in
jg
lods
cld
lahf
or
cmp
aam
gs
int3
pop
in
in
jg
and
add
cmp
pusha
cmp
outs
test
js
loop
(bad)
jg
push
lock
push
gs
cdq
fwait
int
or
jo
mov
dec
idiv
arpl
outs
adc
lods
cld
mov
inc
ret
(bad)
mov
pop
mov
cmc
lock
lahf
fwait
adc
inc
ds
bound
jbe
xchg
push
scas
mov
idiv
pop
lods
imul
jmp
test
mov
nop
jb
pop
add
adc
sub
std
dec
stc
test
aaa
and
jne
loop
into
jb
movs
inc
jae
scas
mov
test
in
cmp
pop
aas
pop
neg
je
add
inc
sub
(bad)
icebp
mov
gs
std
sbb
(bad)
daa
aaa
mul
popa
xchg
jmp
in
cmp
jae
loope
jp
xor
and
mov
dec
xchg
mov
lea
scas
(bad)
cmps
and
sub
fst
rcl
movs
pop
jecxz
dec
dec
repnz
enter
jp
dec
shl
cdq
mov
cs
push
mov
les
sub
xchg
fwait
adc
neg
xlat
dec
ss
add
sahf
fcmovnbe
sub
xor
ins
vmread
stos
aaa
pop
cdq
mov
popf
xchg
push
scas
jno
xchg
popa
cmp
or
(bad)
xchg
aas
clc
xor
stos
xchg
out
and
sar
mov
inc
push
fiadd
imul
call
or
jno
or
shl
pushf
sub
pop
pop
and
dec
aad
push
mov
mov
sbb
pop
mov
(bad)
xchg
test
add
out
movs
mov
xchg
adc
rcl
jnp
mov
mov
cmp
aas
sar
inc
(bad)
jge
pop
pop
fs
out
xchg
loopne
sahf
sahf
cmp
pop
mov
jnp
adc
sub
xor
mov
jae
and
dec
cdq
or
mov
mov
fist
xchg
mov
and
fidivr
mov
mov
pop
sbb
cmp
in
sahf
leave
cmps
mov
stos
das
mov
cwde
movs
xchg
es
shr
dec
xchg
int
and
jae
pop
or
fstp
and
inc
push
dec
sbb
and
jecxz
cmp
in
add
pop
dec
push
leave
jae
xchg
or
out
mov
out
iret
or
movs
in
add
mov
les
iret
pusha
push
mov
xor
or
mov
add
jg
sbb
int
inc
jns
cli
pop
dec
mov
aam
pop
inc
inc
js
aam
mov
mov
jecxz
addr16
push
jae
push
dec
xor
repz
jo
pushf
in
xchg
xor
inc
inc
jno
ficomp
push
or
mov
sahf
ins
inc
cmps
jecxz
mov
sub
jnp
enter
les
inc
sub
jmp
jle
dec
add
ins
ds
jle
ja
pushf
loope
push
daa
pop
jno
mov
jnp
sub
cmps
repnz
data16
push
xor
push
fs
push
ficom
adc
and
stos
sbb
movs
sbb
push
mov
lock
loopne
push
jmp
inc
movs
pop
mov
ins
dec
sbb
push
cmp
sbb
repz
bound
pop
dec
test
sub
sub
mov
arpl
test
clc
jno
sbb
sub
xchg
fs
mov
cmp
lds
rcr
call
imul
push
push
adc
pop
dec
adc
pop
movs
enter
fcmovu
jns
dec
xor
mov
and
push
mov
mov
mov
das
xor
arpl
mov
fdivr
cdq
dec
mov
js
hlt
popa
les
(bad)
sbb
cwde
xchg
push
pop
jmp
pop
push
shl
push
call
mov
xor
out
adc
mov
sbb
xor
push
sbb
int3
dec
cmp
rcl
imul
sub
dec
out
std
xchg
adc
or
mov
mov
(bad)
sahf
int
xor
(bad)
sbb
xchg
push
out
fisttp
inc
add
test
and
xor
jle
mov
fwait
(bad)
xor
mov
mov
test
imul
pop
popa
sbb
daa
jl
push
(bad)
cmps
enter
xchg
jae
cmps
mov
inc
cmp
loop
jp
mov
adc
ds
cmp
push
mov
xchg
call
pushf
sar
mov
les
test
mov
sbb
imul
mov
mov
and
and
repz
adc
fmul
test
cs
or
add
jns
retf
dec
xchg
mov
call
cli
cs
cmps
fwait
push
es
sbb
add
cs
popa
push
xchg
popf
jmp
dec
cmp
ins
mov
stc
jmp
and
inc
pop
es
pushf
cmp
popf
or
scas
and
pop
lods
pop
pusha
pop
les
mov
repz
and
int
into
mov
dec
jl
(bad)
and
fld
mov
(bad)
sti
daa
push
out
jmp
inc
jmp
pop
popf
sub
jecxz
js
adc
sub
jmp
in
sbb
pushf
test
fcmovnb
std
xor
out
loope
or
and
mov
test
sbb
mov
data16
push
mov
adc
ret
dec
inc
push
in
add
call
fs
jb
mov
loopne
push
int3
sti
jo
mov
aas
aam
(bad)
popa
sar
test
pop
cmovo
and
push
push
in
and
shl
xchg
ret
dec
pop
mov
push
rol
adc
scas
ror
and
cmp
mov
dec
ds
ror
stos
jno
sub
nop
ja
pop
std
pop
jp
test
jb
sub
cdq
fild
ss
mov
fbstp
sbb
mov
xor
lahf
xchg
sbb
xchg
pushf
aam
or
mov
dec
cmp
mov
sbb
in
lea
rcr
js
adc
mov
into
shr
cmc
pop
inc
dec
gs
mov
das
in
cmp
pushf
gs
int3
fild
ss
dec
xlat
dec
dec
xor
xchg
stc
mov
xchg
pop
lods
(bad)
jg
dec
fmul
jmp
inc
jae
xor
sahf
pusha
mov
test
lock
leave
mov
mov
xor
in
and
and
add
stos
loopne
pop
pop
movs
in
ins
adc
adc
inc
mov
idiv
mov
lods
jge
push
cdq
cmps
mov
jns
js
pop
mov
push
sub
lods
clc
pop
pop
stc
xlat
dec
loop
out
cmps
push
jae
mul
mov
push
mov
mov
aas
out
cmp
imul
outs
and
and
(bad)
arpl
sub
mov
shl
ret
dec
adc
data16
in
imul
call
xchg
out
(bad)
cmc
out
leave
je
(bad)
push
lods
daa
or
mov
arpl
add
stos
push
popa
and
cmp
push
(bad)
mov
lds
cmc
call
lea
jmp
xchg
inc
clc
retf
sbb
push
jbe
daa
mov
mov
stos
xor
cmps
and
cvttps2pi
mov
sar
dec
mov
inc
jmp
sahf
into
fidiv
(bad)
mov
test
jg
and
pusha
push
into
das
inc
sbb
mov
inc
out
div
rol
add
jle
xchg
dec
cmp
(bad)
call
pushf
inc
int
pop
retf
imul
dec
mov
iret
(bad)
jg
cmp
dec
jne
sub
out
mov
mov
in
xchg
xchg
ror
xchg
mov
sbb
adc
mov
mov
imul
(bad)
and
enter
cwde
jp
add
mov
int3
and
cld
cmps
push
loope
sub
ficomp
mov
pop
outs
xor
jecxz
test
leave
inc
std
sub
push
add
leave
call
push
pop
adc
in
adc
out
(bad)
in
ficomp
inc
test
jbe
in
cmps
mov
sbb
lahf
(bad)
loope
push
jge
add
xchg
fwait
pushf
dec
les
paddw
mov
inc
jns
push
sbb
sbb
and
(bad)
repz
cmps
and
loopne
lds
jno
test
in
push
push
push
jno
inc
fs
mov
mov
or
aaa
cdq
int3
jo
nop
shr
es
mov
out
mov
pop
xor
jp
inc
in
aam
cmps
popf
push
loopne
out
jns
push
in
mov
loope
(bad)
mov
xchg
je
pop
(bad)
xchg
pop
and
sbb
inc
sbb
dec
sbb
std
mov
inc
lds
call
and
mov
movs
push
and
cmps
xor
xlat
inc
loope
cdq
adc
cmp
cmps
push
fstp
imul
and
enter
and
sub
push
xchg
cld
push
ret
les
push
pop
push
fs
add
mov
push
jb
jne
push
outs
stc
mov
adc
iret
fsubp
sbb
sahf
push
mov
test
jno
xchg
adc
push
adc
jae
adc
call
adc
mov
inc
lock
xchg
call
aam
lods
adc
xchg
(bad)
movs
xchg
sub
adc
fistp
imul
mov
mov
bound
push
pop
pop
cmp
data16
mov
or
sub
sub
scas
mov
addr16
das
push
rcl
cwde
adc
stc
(bad)
repnz
gs
pusha
inc
lahf
xor
mov
inc
sahf
sahf
imul
xor
lock
inc
push
push
inc
(bad)
hlt
lock
(bad)
mov
pop
push
sbb
pop
dec
retf
rcr
jne
mov
aas
pop
and
sbb
clc
sub
cmp
ins
mov
mov
daa
add
mov
dec
cmp
sub
into
cmp
mov
pop
arpl
aam
movs
imul
dec
sbb
mov
cmp
sbb
aas
scas
test
inc
pop
dec
xor
inc
mov
mov
out
stos
lea
or
leave
jb
and
mov
add
mov
jb
clc
sub
mov
cmp
and
push
mov
sub
(bad)
dec
mov
std
sbb
mov
ins
mov
loopne
cmp
icebp
push
fwait
push
test
inc
or
test
aaa
retf
std
dec
xor
mov
lods
push
jg
cmp
pop
mov
dec
mov
lock
int
fld
mov
add
xchg
mov
fdivr
loope
or
xchg
xchg
cdq
pop
mov
repz
add
push
lds
mov
or
cwde
and
jae
or
cmps
fistp
adc
jp
scas
test
out
or
iret
push
shl
out
xchg
cmovg
(bad)
fs
xchg
cmp
mov
mov
dec
or
push
pop
push
mov
mov
push
or
mov
inc
mov
clc
dec
pop
adc
adc
push
outs
adc
int
sahf
out
fwait
test
mov
bound
inc
dec
ds
fwait
nop
pop
test
xchg
mov
jecxz
mov
mov
sub
mov
aas
and
in
fxch
test
ret
out
push
inc
mov
outs
je
mov
inc
or
aas
and
test
inc
dec
and
mov
jb
xor
xor
xchg
clc
pop
call
ja
pop
inc
jle
xchg
retf
inc
xchg
dec
adc
shl
adc
adc
sub
inc
or
nop
sub
sbb
add
fidivr
xchg
and
push
cs
jbe
movs
rcr
mov
cwde
dec
leave
cmp
xchg
mov
xor
xor
fbld
jne
(bad)
pop
movs
dec
sbb
outs
cmc
dec
or
mov
jg
pop
cdq
popa
scas
mov
ins
not
mov
add
cwde
sub
stos
mov
out
aad
mov
and
pop
sbb
sbb
pop
cmp
retf
adc
jno
jo
push
lods
scas
fisub
loope
inc
push
sti
adc
push
rcr
add
mov
push
push
jecxz
popa
sbb
lods
xlat
dec
push
sti
jb
pop
out
xor
cmps
adc
leave
fucom
mov
or
cmp
mov
xchg
jns
push
mov
scas
jno
push
pop
and
loope
mov
xchg
(bad)
fs
test
xor
pop
mov
mov
mov
sbb
ss
(bad)
scas
jle
jp
mov
cmp
stos
pop
sti
mov
pop
nop
mov
sti
in
push
dec
lock
push
pop
(bad)
fst
push
dec
out
imul
jmp
lods
inc
xor
xor
add
mov
repnz
lods
mov
mov
aas
stc
jmp
scas
push
add
xchg
push
dec
cmp
xor
inc
cmp
pop
add
imul
or
stc
sbb
dec
jp
cdq
mov
sbb
mov
or
sub
add
(bad)
pop
daa
cmp
mov
(bad)
loope
fadd
repz
scas
push
jl
enter
ror
in
std
in
adc
and
clc
cmc
inc
adc
pushf
and
and
fidivr
push
mov
mov
mov
imul
sbb
clc
loope
add
lds
sub
mov
out
push
jns
imul
jge
cmps
fwait
add
pop
jnp
dec
mov
pop
ret
lds
int3
sbb
cmc
(bad)
jmp
daa
(bad)
sub
adc
mov
mov
fwait
xchg
aas
fist
jecxz
lods
arpl
ss
add
lds
inc
or
ja
inc
cmp
in
mov
mov
mov
adc
mov
adc
push
leave
pop
nop
push
cmp
xor
ins
cmp
popa
xchg
mov
mov
ror
retf
cs
inc
cmp
data16
out
xchg
into
xchg
xor
lods
and
jns
and
lock
pop
xor
call
adc
scas
push
pop
out
aaa
inc
pop
cmp
scas
lahf
xchg
inc
jbe
push
cmp
sbb
dec
xlat
sub
jbe
mov
mov
fadd
mov
scas
jae
jb
mov
pop
xchg
in
jle
pop
mov
into
retf
out
(bad)
mov
nop
les
pop
push
push
mov
add
mov
mov
inc
out
jne
pop
jge
mov
xchg
cmp
pop
in
test
(bad)
in
mov
dec
sti
cmps
loopne
std
out
outs
popf
mov
je
clc
adc
clc
push
jb
mov
sbb
mov
mov
or
pop
movd
das
push
(bad)
ret
fisttp
dec
iret
fs
js
clc
xor
mov
mov
xor
in
in
je
cmp
or
sub
jb
mov
or
mov
xchg
or
mov
out
sbb
fs
popf
push
sbb
jmp
and
addr16
or
(bad)
fdivrp
stos
pop
xor
mov
pop
pop
sbb
mov
push
ss
imul
sub
jge
adc
sbb
sub
(bad)
sbb
aam
not
cmovb
je
nop
jae
out
call
xchg
jp
test
nop
mov
xlat
adc
push
push
dec
lahf
cmc
retf
loop
aad
rcl
pop
cmp
iret
shl
test
cmp
xlat
loopne
jb
inc
mov
push
addr16
js
push
xchg
retf
pop
fiadd
ret
pusha
xor
and
or
jmp
clc
push
sub
sbb
push
shr
mov
pop
(bad)
into
pop
je
neg
jp
sahf
leave
jnp
pop
pop
repnz
test
xchg
jmp
jp
out
mov
jne
in
xchg
shr
xchg
or
add
jmp
pop
push
sub
ror
addr16
pop
sbb
dec
sbb
push
iret
dec
inc
jo
add
pop
mov
fwait
mov
dec
and
push
les
inc
dec
fnstenv
jae
and
addr16
mov
jmp
push
pop
cs
scas
jae
fiadd
add
lea
popf
lea
pop
cmp
adc
jmp
cwde
jp
sub
push
push
push
test
ret
loop
mov
(bad)
pop
pop
es
jg
mov
(bad)
rol
push
daa
xchg
ins
outs
lahf
sub
jl
(bad)
out
cmp
addr16
and
mov
adc
push
jmp
jle
push
test
je
ficomp
icebp
in
push
pop
fs
fwait
into
mov
js
mov
inc
xor
adc
push
imul
leave
pop
jno
clc
dec
sub
jmp
and
lods
dec
and
mov
sbb
cs
leave
es
outs
sub
push
outs
sub
mov
cmp
inc
sub
sbb
call
mov
fs
xchg
add
mov
and
push
inc
fidivr
gs
xor
rcl
or
cwde
fwait
sub
adc
fs
cmp
pop
sbb
mov
repnz
cwde
mov
adc
ficom
mov
pop
clc
and
out
std
dec
jle
ror
mov
push
xchg
jmp
adc
stc
icebp
or
les
xor
ins
sub
fnstsw
dec
outs
inc
mov
adc
(bad)
push
mov
std
(bad)
xchg
add
loop
popf
sbb
inc
and
add
aam
out
xchg
dec
pop
int3
xchg
call
jns
cli
push
adc
rol
pushf
call
push
adc
jmp
sub
jmp
call
mov
cmc
inc
pop
stos
repz
xor
lods
pop
jle
ds
add
leave
in
pop
push
push
push
push
adc
call
xchg
xchg
jnp
mov
ret
rcr
cld
cmp
jmp
and
fwait
mov
xchg
jo
cmp
lds
inc
jbe
lods
pusha
xchg
nop
int
add
ja
adc
not
out
int
jg
pop
stos
pop
jbe
rcl
push
mov
bound
and
pop
shl
push
add
sbb
cmps
mov
pop
pop
mov
ins
or
xchg
test
mov
rcr
xchg
jecxz
pop
xor
loope
inc
and
push
push
rcr
jne
into
and
shl
mov
jns
je
fs
mov
jbe
(bad)
sbb
lods
rol
iret
adc
mov
loope
push
fisttp
popa
push
call
mov
arpl
gs
jmp
add
push
xchg
clc
not
iret
dec
movs
and
gs
cmp
pop
inc
or
sub
fldcw
les
cmp
icebp
add
pop
mov
stc
test
rcr
jmp
out
lods
pop
aaa
cs
sub
jmp
pop
sbb
pop
cmp
imul
mov
les
cmp
adc
or
mov
cmp
or
dec
dec
push
pushf
and
pop
ins
inc
ins
loop
aas
(bad)
pand
inc
or
pop
and
dec
xor
and
out
dec
movs
out
jb
cmps
and
pop
mov
das
add
ret
(bad)
mov
inc
sbb
out
or
out
repnz
cwde
push
shl
xchg
sub
mov
aad
mov
inc
mov
data16
loope
jmp
sar
mov
cmp
or
sub
pop
addr16
out
sub
sub
sbb
xchg
pop
add
xchg
lahf
mov
movs
call
addr16
adc
cwde
aaa
add
ret
in
fld
xchg
dec
xchg
pop
enter
arpl
shr
xchg
pop
daa
es
out
lock
cli
ret
rcr
add
xchg
xor
inc
repz
mov
cdq
mov
pop
mov
mov
mov
xchg
fucomp
inc
xlat
and
add
or
mov
es
xchg
mov
jbe
aaa
mov
mov
ins
or
xlat
push
xor
mov
leave
cmps
xchg
mov
out
sbb
sbb
enter
cwde
mov
sbb
ret
retf
ins
idiv
mov
dec
mov
ins
cmp
iret
arpl
dec
lock
jae
fmul
inc
mov
adc
int3
mov
fbstp
test
inc
mov
shl
sub
inc
cmp
test
jb
stos
in
sti
popa
ret
mov
xor
cmp
push
mov
mov
movs
movs
mov
push
xor
or
xchg
add
inc
or
dec
lods
dec
xor
mov
jnp
scas
outs
fdiv
and
mov
arpl
ret
rcr
out
std
in
xchg
or
mov
test
fnstcw
cmp
loope
sbb
mov
gs
jp
adc
and
std
adc
cld
loop
outs
push
(bad)
bound
(bad)
inc
push
rcl
xchg
mov
jns
jns
lods
cdq
sbb
mov
mov
and
push
or
ror
and
cmp
push
mov
popf
inc
sub
push
movs
div
mov
or
pop
inc
iret
cld
pop
mov
neg
outs
or
or
jns
sbb
scas
test
sbb
cmc
ror
data16
shl
mov
push
xor
or
fisubr
add
not
xchg
std
mov
ins
cmp
mov
mov
sahf
push
fidiv
aaa
sbb
es
push
add
cmp
hlt
(bad)
dec
push
add
cmc
fnstenv
movs
pop
pushf
mov
cs
cmps
rcr
pop
or
lahf
mov
and
hlt
ja
fs
shr
mov
leave
ret
cmp
ins
adc
imul
mov
sub
(bad)
or
or
ja
call
imul
inc
push
sbb
jmp
popa
jle
add
mov
ficom
cld
test
(bad)
jne
dec
repnz
ret
div
(bad)
rcl
cmc
sub
sbb
adc
sub
dec
lahf
inc
xor
icebp
rcr
gs
pop
adc
sbb
les
sub
inc
or
mov
pushf
push
lods
dec
adc
push
pop
call
ss
mov
push
cli
sub
xor
jmp
pop
inc
cs
movs
mov
enter
xlat
xor
repz
pop
dec
push
loop
sbb
sbb
pop
ror
ret
and
xchg
test
cmps
adc
or
xchg
cs
inc
adc
xchg
loope
pusha
pop
clc
pop
jecxz
movs
fiadd
fs
imul
and
sbb
xchg
scas
ins
sti
lea
pop
mov
arpl
outs
adc
cmps
(bad)
dec
jmp
jb
scas
mov
xchg
add
test
sahf
xchg
icebp
shr
scas
push
jne
or
int3
mov
pop
add
rol
mov
(bad)
in
(bad)
lds
stos
or
dec
int
ja
shr
ja
or
std
jb
jl
or
mov
jmp
mov
sbb
sbb
jp
add
push
xor
sbb
jnp
xchg
mov
xchg
ins
mov
stos
mov
pop
pop
jo
jmp
inc
add
dec
fbld
add
add
mov
mov
popf
scas
fldcw
pop
shr
adc
sub
les
jge
cdq
jns
cmovno
and
retf
mov
inc
data16
test
repnz
sub
das
jae
jbe
xor
movs
fild
stc
fstp
mov
mov
loop
sub
rcl
mov
out
(bad)
mov
ins
push
dec
sti
lock
enter
retf
call
dec
jg
adc
js
dec
fiadd
sbb
xor
dec
mov
xor
in
push
xchg
jecxz
adc
shl
sub
mov
popf
jae
js
ins
cmp
in
xor
pop
jae
mov
cmp
mov
jmp
mul
jb
inc
ins
mul
sbb
in
dec
pop
js
cmp
or
add
jmp
gs
adc
xchg
adc
ror
sti
jg
sar
inc
aad
xor
jl
sub
jl
sahf
push
and
sub
xchg
sub
or
xor
jecxz
fldenv
imul
outs
hlt
enter
loope
hlt
jb
(bad)
sbb
mov
mov
in
mov
test
data16
mov
movs
mov
mov
(bad)
scas
out
in
pop
or
ins
hlt
sub
and
push
shr
add
inc
sar
popf
mov
std
xlat
out
sbb
sbb
xchg
push
pop
out
adc
sub
mov
cld
push
add
mov
int3
dec
je
loope
jne
mov
adc
call
mov
retf
jmp
or
mov
stos
sbb
arpl
jmp
mov
add
or
test
mov
sub
(bad)
das
js
xor
jno
(bad)
or
(bad)
jae
fwait
lds
std
(bad)
mov
dec
dec
shr
pusha
call
mov
cmp
int
movs
and
outs
cmp
xchg
mov
inc
cmp
pop
in
jae
sbb
mov
pop
test
aad
lea
popf
adc
out
(bad)
push
inc
add
xlat
dec
repz
xlat
xchg
ja
mov
jge
xor
(bad)
fwait
neg
pop
aas
add
rcr
xor
cmp
mov
fisttp
and
xchg
(bad)
mov
loop
retf
lods
sub
sbb
hlt
ins
fdivr
jmp
and
and
push
loopne
jmp
xchg
inc
mov
loopne
xor
lahf
cwde
ins
cmp
jge
sahf
cmps
ss
loopne
adc
jmp
inc
cmps
sbb
mov
mov
fdiv
dec
add
ins
pusha
imul
pop
clc
int
ret
mov
call
daa
cmp
pop
jge
sbb
stc
jmp
xor
int
leave
pop
aad
xor
sub
jl
xor
sub
out
jp
sahf
mov
in
sbb
outs
push
inc
test
dec
jne
jnp
sbb
sub
out
(bad)
enter
xor
test
rol
bound
call
js
sbb
iret
pop
adc
pop
les
movs
mov
loope
pminsw
xchg
jle
inc
aam
das
fcomp
inc
xor
mov
mov
inc
cli
adc
stos
in
inc
fsubr
mov
mov
cld
xchg
or
lods
sbb
sahf
fisubr
pop
push
jle
xchg
jmp
pushf
aam
and
cwde
icebp
rol
in
loopne
sub
or
pop
jp
mul
or
arpl
aam
rcr
add
ins
xchg
inc
push
cmp
dec
popa
inc
mov
xor
or
scas
lods
xchg
sbb
and
xor
xchg
shl
xchg
fstp
out
or
stos
adc
popf
int3
fcom
sbb
into
or
sub
jge
call
ss
jl
push
fisttp
dec
mov
test
adc
jbe
push
popf
movs
ins
and
or
cmp
inc
inc
std
(bad)
aas
pop
mov
adc
cli
fsub
test
mov
add
(bad)
stc
push
and
jae
cmp
xchg
retf
gs
xor
mov
jb
mov
popa
jo
scas
push
hlt
ins
shl
push
push
cmp
ins
add
ret
cdq
sub
ret
pop
cmps
cs
xor
(bad)
test
sbb
sbb
xor
outs
jl
push
xchg
rol
mov
lods
gs
ins
loope
jg
push
jmp
retf
add
jmp
push
fsubr
je
pop
cmp
ficomp
outs
cmc
lds
out
cmc
sub
mov
aam
movs
push
lds
xchg
inc
sbb
inc
out
adc
mov
pop
sahf
test
sti
jnp
cmp
push
(bad)
jmp
and
inc
add
dec
mov
lods
add
and
daa
rcl
cmps
or
xor
leave
int
adc
xor
arpl
mov
mov
sbb
dec
inc
lea
movs
out
inc
loop
(bad)
rcr
mov
test
in
mov
jb
jmp
(bad)
jb
invd
push
stos
scas
movs
leave
stc
cdq
cmps
cdq
mov
jnp
aam
xlat
ror
enter
mov
and
mov
mov
sbb
jge
gs
mov
pushf
mov
pop
mov
lods
sub
pushf
addr16
xchg
dec
mov
mov
movs
mov
out
clc
outs
jb
fs
jb
(bad)
xchg
pop
xor
mov
cli
push
push
add
mov
jecxz
loopne
jl
inc
adc
sub
sbb
xor
cmp
loopne
outs
test
dec
xor
mov
cmc
pop
jge
bound
mov
jae
pop
pushf
xor
add
and
repnz
mov
xor
mov
dec
dec
fs
test
or
lods
(bad)
push
addr16
js
jmp
add
not
loop
je
arpl
cmp
aad
and
popa
call
lods
sub
iret
sbb
movs
pop
mov
push
(bad)
gs
inc
movs
jmp
xchg
mov
push
mov
xor
cmps
cmps
cmps
sub
lods
mov
or
mov
fadd
sub
xor
jae
or
loope
or
outs
fdiv
and
jl
cs
dec
nop
out
sbb
scas
fwait
stc
test
cmp
not
cmps
fwait
pop
bound
push
(bad)
sbb
lods
cmp
inc
into
inc
and
fild
sub
cs
inc
or
inc
mov
loope
es
fstp
imul
push
cmp
and
in
imul
ss
lock
inc
push
jno
mov
or
stos
mov
push
push
lock
fs
retf
push
(bad)
mov
pop
data16
test
js
mov
stos
in
xchg
inc
or
adc
xor
push
and
cli
cmps
push
pop
sbb
sub
fidivr
push
ret
jno
inc
mov
jbe
sbb
inc
push
(bad)
xchg
test
fisttp
jae
push
cld
shr
pop
jl
pushf
cmp
shl
fsub
xchg
xchg
cdq
dec
mov
cdq
xor
dec
xchg
test
jle
sub
dec
pop
imul
dec
(bad)
out
lea
add
lahf
add
(bad)
mov
mov
sahf
out
popa
shr
inc
cmp
or
push
xchg
pop
jp
cwde
fstp
jecxz
repz
xor
mov
cs
mov
(bad)
fldcw
push
ins
inc
scas
adc
enter
fs
repz
pop
push
push
dec
sbb
fwait
imul
out
jp
fist
lods
test
icebp
fild
pop
mov
inc
movs
sbb
popf
jmp
cli
movs
dec
in
aam
out
movs
dec
cmp
dec
mov
push
ror
push
gs
cmp
mov
loop
pushf
aad
fcmovbe
pop
cld
arpl
xchg
jp
repnz
adc
mov
mov
cmp
xor
and
ins
ret
fsub
mov
mov
aaa
mov
sti
xor
into
jb
pop
jmp
pop
mov
les
nop
mov
add
imul
adc
or
and
cmc
inc
xor
retf
mov
push
fdivr
(bad)
div
xor
sub
push
xor
cmps
rcr
sub
pop
sub
int3
movs
jecxz
fs
pop
mov
push
inc
mov
adc
pusha
(bad)
pop
call
inc
scas
xor
sbb
out
jnp
into
sbb
nop
mov
daa
pop
xlat
mov
repz
xchg
fs
mov
test
enter
jmp
and
test
out
pop
dec
push
adc
call
int
sbb
jns
cdq
in
(bad)
(bad)
pop
rcl
adc
xchg
mul
mov
sti
sub
ja
sahf
xchg
jmp
(bad)
call
dec
jbe
mov
and
lock
fcomp
enter
(bad)
gs
fwait
inc
pushf
adc
fcomp
js
xchg
sar
or
dec
mul
es
popa
js
and
stos
push
xlat
fucomi
lea
repz
inc
push
sbb
stc
rol
push
push
pushf
xor
in
jno
pop
aaa
push
xchg
mov
pop
push
push
dec
shr
pop
mov
lods
mov
repz
out
sbb
movs
ror
call
stos
clc
retf
sub
mov
sub
xchg
loop
inc
sub
test
out
cli
jmp
cmp
jns
ja
cmp
mov
ss
mov
aad
fiadd
sub
push
mov
mov
fiadd
jg
pusha
loop
push
outs
retf
dec
(bad)
mov
(bad)
loopne
fstp
pop
vpminub
push
in
sub
(bad)
xchg
and
mov
jg
je
hlt
adc
out
fs
rol
mov
not
xchg
mov
mov
retf
mov
data16
sbb
dec
cwde
jnp
jg
aam
jp
or
cs
add
push
or
mov
pop
fcompp
pop
sbb
xor
out
xor
test
iret
or
and
dec
add
adc
pop
push
mov
icebp
stos
movs
stos
xchg
hlt
push
(bad)
xor
outs
(bad)
jno
pop
cmp
or
cs
in
inc
aad
mov
test
mov
add
mov
lahf
movs
fcomp
call
xor
std
mov
inc
cmps
push
jge
fstp
xchg
fist
and
out
fadd
fcomip
int3
scas
xor
or
cli
cmp
stos
sbb
adc
sar
add
mov
popf
clc
sbb
add
js
in
test
jmp
out
add
jae
test
hlt
shl
fwait
cmp
sub
or
lods
loop
mov
pop
and
pop
bound
sub
stc
outs
daa
cmp
xor
lea
pop
retf
(bad)
mov
clc
and
enter
xor
movs
inc
(bad)
ja
js
mov
mov
pop
push
fdiv
pop
jo
test
pusha
mov
dec
cmp
add
out
jmp
sbb
xchg
stos
sti
aad
lahf
and
ins
jo
and
sbb
das
dec
mul
jp
(bad)
in
push
push
test
mov
push
in
popa
mov
fcomp
or
shr
pop
data16
pop
ja
dec
push
adc
(bad)
dec
pop
xchg
dec
and
in
add
jae
cmp
sbb
les
pusha
stos
jmp
gs
ss
push
jmp
xchg
in
add
mov
jp
sub
mov
mov
scas
cli
or
fnstsw
leave
cmp
rcr
mov
dec
and
push
sbb
push
(bad)
mov
jne
sbb
jl
cmp
int
mov
mov
dec
dec
push
push
ins
mov
jb
div
pop
xchg
clc
lahf
sbb
call
ins
mov
(bad)
adc
dec
cli
mov
inc
ja
das
test
mov
inc
ds
sub
mov
pop
call
cld
jg
mov
mov
fwait
mov
icebp
out
arpl
ins
gs
mov
test
mov
mov
ins
movs
push
pop
xchg
mov
jns
pop
ror
repz
push
sub
jnp
lods
je
loope
jmp
mov
mov
jae
out
inc
xchg
xchg
adc
int
or
inc
xor
sbb
dec
enter
(bad)
hlt
jbe
mov
mov
xor
lods
jp
cmp
cmp
bound
int
push
mov
jns
fiadd
pop
add
xor
or
test
xchg
pop
jmp
add
(bad)
add
into
xchg
dec
movs
(bad)
pop
lds
dec
dec
add
test
xchg
xchg
dec
sbb
add
rol
xchg
(bad)
iret
outs
push
xor
test
mov
push
xor
call
dec
jle
cmp
xor
das
scas
push
dec
pop
or
rcl
fucom
retf
out
fwait
imul
daa
mov
push
mov
push
and
imul
mov
jae
lds
inc
xchg
jne
jl
pop
(bad)
sar
int
les
daa
adc
les
push
cs
dec
std
imul
jb
sub
pop
mov
or
jo
cmp
pop
cmp
lods
ins
cmp
push
xchg
push
lods
mov
lods
add
fwait
sahf
mov
fdiv
ja
jns
jmp
xor
repnz
mov
call
out
aaa
sbb
cwde
mov
or
(bad)
pop
loopne
sbb
inc
xchg
jne
dec
(bad)
push
mov
pop
dec
mov
jecxz
fmul
push
sbb
add
push
pop
fwait
pop
sbb
lock
popa
stc
sbb
and
aas
push
xor
mov
jb
push
mov
and
or
icebp
js
xor
jo
cmc
ds
jns
and
dec
xchg
arpl
cmp
dec
xor
mov
pop
jp
scas
push
push
mov
dec
mov
ja
and
es
and
into
push
into
inc
cmp
movs
bound
jbe
or
in
mov
ret
stos
dec
lods
and
cs
push
jg
in
pop
fsub
sbb
dec
ret
adc
sar
xor
repnz
in
shl
add
inc
arpl
mov
add
dec
jo
shl
push
aam
mov
mov
xchg
pusha
jo
sub
test
pop
or
pop
xor
loope
add
rol
cli
out
cs
mov
outs
jae
mov
lods
sbb
sub
(bad)
ret
add
push
das
test
fdivr
push
xchg
xlat
fdivr
enter
ja
adc
mov
and
movs
test
mov
stc
addr16
(bad)
mov
xor
(bad)
or
jae
and
loope
sub
sbb
enter
aad
dec
daa
in
jp
or
push
and
lods
sbb
aad
outs
jmp
push
jg
clc
mov
and
xor
retf
fsub
js
(bad)
std
and
(bad)
sbb
inc
and
into
shl
int
out
js
das
inc
and
hlt
and
sbb
gs
std
mov
pop
mov
add
aaa
rol
add
add
test
gs
cmp
push
inc
mov
dec
clc
test
test
cld
or
cmp
lahf
mov
mov
mov
mov
loope
dec
push
mov
or
dec
cmp
lea
push
sub
xchg
icebp
xchg
and
sub
cli
adc
xchg
mov
mov
sbb
mov
mov
jae
inc
mov
pop
(bad)
mov
das
xchg
out
lods
cmp
test
mov
mov
mov
leave
(bad)
xor
push
and
ret
stos
cwde
sub
fcom
pop
inc
xchg
and
mov
sbb
outs
mov
inc
mov
jp
push
icebp
out
dec
sub
adc
ja
cs
outs
pop
iret
out
mov
arpl
xor
into
mov
stc
mov
dec
fiadd
mov
out
inc
call
dec
pop
std
and
inc
scas
js
mov
sbb
(bad)
mov
xchg
mov
mov
mov
push
mov
and
fcomp
mov
cwde
mov
xor
pop
inc
ja
or
push
mov
push
bound
add
dec
xchg
pop
and
in
in
dec
imul
adc
mov
test
outs
cmp
out
xchg
mov
cld
xor
inc
sub
push
fsub
arpl
xlat
fiadd
mov
pushf
fwait
ja
or
push
aaa
jge
mov
bndldx
mov
mov
push
lock
xor
movs
push
(bad)
or
pop
scas
and
js
pop
bound
mov
or
(bad)
out
out
inc
fnstsw
push
js
fld
xor
test
mov
adc
xlat
cmps
sbb
push
je
push
pop
cmps
fwait
inc
add
ss
cmp
hlt
cmp
adc
push
hlt
cdq
and
iret
ret
fwait
es
pop
(bad)
into
leave
rcl
push
or
pmuludq
jge
sbb
pop
mov
out
mov
lock
fnsave
icebp
aam
xchg
mov
sbb
imul
sub
fwait
jle
repnz
xchg
xchg
fsub
mov
pusha
sar
jo
jnp
or
imul
sub
sbb
lahf
(bad)
sub
fld
call
jnp
leave
das
add
push
ja
in
and
inc
(bad)
lahf
fnsave
aam
neg
fwait
push
dec
add
les
arpl
mov
pushf
shr
xchg
mov
out
test
jae
cld
sbb
addr16
test
jae
psrlq
cmps
inc
mov
adc
cmp
lods
pop
jg
inc
mov
sbb
ror
sbb
and
fadd
xchg
(bad)
fild
sbb
dec
scas
mov
lods
fwait
iret
shr
sbb
test
push
jmp
in
xchg
imul
iret
push
sub
or
pop
jo
push
gs
add
cmp
sbb
fwait
sub
sub
sbb
mov
stos
lea
pop
add
cmp
test
clc
xor
or
aad
outs
and
gs
lahf
sbb
pop
or
pop
mov
mov
dec
scas
sbb
mov
aad
and
xor
retf
mov
fld
push
xchg
out
sbb
sub
mov
js
push
test
sti
out
dec
(bad)
sub
das
mov
cmp
fs
add
int3
xor
pop
push
sub
icebp
adc
adc
inc
jg
fwait
push
cmp
dec
fild
xlat
xor
jmp
cmp
loopne
mov
xor
ffree
ror
mov
(bad)
shr
mov
inc
(bad)
es
dec
movs
movs
int3
imul
cld
leave
add
movs
mov
(bad)
xchg
and
les
sub
dec
cmp
pop
(bad)
das
int3
jecxz
cld
mov
inc
cmp
mov
mov
pop
rcr
ja
retf
sbb
imul
fsub
fistp
nop
sbb
jg
jno
push
and
cdq
jmp
jge
sbb
xchg
loopne
fsubr
and
mov
xor
pop
pop
push
xchg
fucomp
imul
gs
adc
ins
push
sub
sbb
cmp
fidivr
sbb
pop
fild
inc
scas
mov
stos
mov
je
test
push
je
pop
mov
outs
xchg
(bad)
(bad)
ror
fsubr
icebp
mov
inc
test
push
loopne
fwait
shl
jnp
mov
aaa
repz
mov
inc
adc
sar
push
xor
mov
mov
js
pop
xlat
xchg
sub
jecxz
push
call
jns
into
fidivr
mov
or
lahf
adc
xor
test
pop
ss
iret
cmp
repnz
sub
dec
and
scas
ss
push
mov
push
xchg
adc
cld
cwde
out
pop
leave
add
push
fdiv
push
xchg
ins
(bad)
(bad)
and
lds
dec
xor
mov
pop
push
(bad)
popfw
sub
ja
push
and
into
call
and
lods
push
popf
movs
or
dec
in
xlat
or
push
stc
or
xor
arpl
mov
sbb
aaa
pop
cdq
cwde
pop
cmp
imul
mov
es
dec
adc
pop
imul
rol
inc
aas
cwde
and
push
fdivr
shl
test
jmp
pop
jmp
rcr
jge
nop
cli
aas
aam
sbb
dec
jl
mov
xlat
add
xchg
sbb
les
adc
add
pop
fdivp
mov
and
mov
xchg
xor
pop
mov
(bad)
hlt
dec
push
cwde
mov
jmp
test
sbb
jle
mov
sbb
push
loop
not
sahf
inc
and
inc
bound
test
xor
and
stos
push
(bad)
xor
sbb
dec
push
enter
std
fs
jno
fiadd
adc
outs
addr16
cs
adc
pop
or
(bad)
xor
ret
mov
scas
lock
adc
sub
push
outs
jno
add
pusha
sahf
mov
xor
push
adc
je
cmp
xchg
test
xrelease
xlat
xor
pop
icebp
shl
test
mov
xchg
pop
mov
fstp
psadbw
cli
(bad)
ret
xchg
call
fs
pop
sub
jge
or
loope
pusha
hlt
sbb
inc
jecxz
aad
mov
shl
fwait
ins
dec
adc
leave
pusha
fidivr
cmps
loopne
add
xor
and
test
jae
(bad)
aas
push
mov
mov
sub
stc
call
sbb
gs
lea
push
push
outs
or
sti
push
int
pop
mov
dec
(bad)
in
mov
sub
dec
inc
jle
(bad)
mov
dec
add
pop
mov
push
xchg
or
pmuludq
in
enter
cli
test
xor
jecxz
push
inc
int
add
sti
(bad)
aam
fs
aas
mov
loop
das
(bad)
mov
jg
or
cmc
and
sub
xor
sbb
in
fimul
cmc
adc
repz
popf
aad
jle
loopne
jnp
(bad)
fld
mov
inc
test
cmp
sbb
push
xor
sbb
sub
int3
(bad)
and
inc
cmp
xchg
jge
pop
xchg
mov
push
jno
push
mov
in
fwait
outs
mov
pop
cwde
mov
idiv
push
xor
push
mov
inc
ret
xchg
out
fs
aad
push
in
cmp
push
call
mov
sahf
jae
hlt
mov
mov
or
nop
push
out
and
scas
aam
push
jo
out
mov
loope
fistp
(bad)
or
dec
retf
out
jns
or
movs
out
mov
push
cwde
adc
iret
out
imul
inc
push
mov
push
aaa
mov
cmc
add
xlat
xor
lods
push
pop
mov
jl
je
test
not
push
lds
rcl
xchg
movs
retf
xchg
jno
jecxz
enter
cmp
mov
outs
push
adc
cmp
int3
mov
cmps
xchg
imul
loop
xor
mov
xor
mov
cdq
ret
pop
test
mov
cmp
add
stos
rol
mov
out
arpl
sbb
das
leave
cwde
ds
mov
push
sar
fmulp
dec
pop
push
mov
lock
push
and
jns
loopne
xor
out
movs
inc
add
mov
adc
adc
mov
in
cdq
lea
scas
popf
mov
cld
push
iret
js
clc
add
ror
(bad)
(bad)
in
cmps
lahf
int3
(bad)
dec
cwde
dec
xlat
mov
(bad)
ins
fidivr
jae
fistp
popw
add
mov
mov
xchg
gs
or
mov
das
cmps
push
sbb
outs
loop
stos
pop
mov
movs
mov
inc
int
add
ja
dec
test
cmp
mov
jmp
jo
pop
push
mov
dec
stc
adc
mov
inc
inc
jmp
mov
cmp
inc
jns
rcr
xor
mov
lods
stc
sub
(bad)
imul
outs
div
(bad)
outs
pop
cmp
daa
push
pop
or
jmp
push
push
inc
cli
outs
mov
mov
fst
repnz
inc
mov
loop
scas
movs
leave
dec
icebp
dec
mov
add
cmp
js
mov
dec
jnp
daa
(bad)
loope
call
xchg
sub
and
iret
(bad)
das
sbb
data16
int
cmp
mov
ret
cdq
cld
jge
out
lods
sbb
and
(bad)
sbb
movs
mov
ss
sar
not
jne
sti
mov
xchg
jae
jg
into
stos
idiv
mov
mov
xchg
movs
mov
pop
mov
adc
lods
outs
sahf
dec
pop
or
jg
mov
or
sub
push
sbb
pop
aad
inc
aam
fstp
in
mov
mov
push
cmp
and
jne
sub
sub
bound
mov
jmp
jl
loope
dec
aaa
out
jp
loope
xchg
jae
out
imul
popw
fisub
mov
adc
push
xchg
xlat
(bad)
int3
and
jb
add
vcvttpd2dq
cld
popf
je
adc
xchg
fst
lahf
rcl
sbb
(bad)
sub
cmc
jg
xchg
call
sub
(bad)
jae
mov
fldenv
pop
mov
mov
pop
mov
in
xor
std
ffree
xchg
push
adc
push
dec
scas
test
bound
in
ds
push
or
arpl
sub
popf
les
xchg
stc
ret
loop
jae
loopne
cs
(bad)
pushf
jle
psadbw
mov
fisttp
sar
call
add
call
stc
lods
imul
push
and
fdiv
sub
imul
data16
push
push
(bad)
pop
mov
out
xchg
cld
or
pop
sbb
lea
inc
mov
imul
inc
into
imul
pop
xchg
bound
xor
inc
xchg
das
jns
cmp
jnp
hlt
fwait
retf
shl
retf
jbe
fs
fldenv
and
(bad)
out
push
inc
in
mov
in
out
enter
call
sbb
call
xor
stc
hlt
sub
push
jge
ror
sbb
add
lahf
cmp
ins
jbe
test
std
sbb
xor
js
jne
paddsb
add
add
iret
cs
pop
mov
outs
add
mov
xchg
or
push
lods
enter
mov
scas
loope
add
push
fiadd
test
mov
jnp
icebp
mov
test
or
mov
mov
jmp
mov
retf
(bad)
jno
ja
scas
rol
leave
jmp
test
pop
adc
cmc
adc
xchg
arpl
adc
sbb
and
call
jmp
add
mov
jmp
sahf
push
test
cli
jmp
std
test
call
imul
clc
add
dec
adc
cmps
mov
call
loopne
test
xor
cwde
cmp
dec
je
repz
pop
sbb
loopne
movs
int
cmp
mov
mov
mov
fs
mov
into
(bad)
div
jge
scas
inc
test
inc
xchg
fist
jne
mov
scas
xchg
clc
pop
test
stos
movs
fcmovu
cmp
movs
mov
lods
aas
outs
sub
sbb
std
fmul
pop
and
ja
out
push
dec
sbb
pop
pop
sub
into
xchg
in
popf
retf
(bad)
fmulp
and
pop
sub
pushf
cmp
iret
fiadd
in
ja
dec
pop
pop
add
add
retf
push
sar
mov
das
fidiv
out
mov
cli
pop
pop
push
daa
inc
inc
cld
add
cmc
sbb
fcmove
movs
sar
pop
ror
std
and
jecxz
inc
enter
or
mov
add
shl
(bad)
ja
jmp
push
cmc
or
inc
or
jecxz
stc
xchg
rol
lds
scas
mov
fld
jecxz
fucomi
lods
mov
les
pop
in
clc
(bad)
repz
mov
cs
pop
imul
pop
rol
ins
mov
xor
(bad)
push
jns
pushf
lahf
ror
popf
in
push
into
cmp
movs
ficom
in
xor
mov
xchg
fisubr
push
fimul
jge
cmp
push
push
out
jle
adc
rol
mov
pop
popa
push
nop
test
fbstp
fnstsw
inc
pop
out
jo
stc
aaa
pop
test
mov
sbb
sbb
mov
lds
iret
add
inc
sub
and
call
pop
bound
mov
(bad)
call
dec
inc
mov
push
sub
sub
fiadd
cmps
xchg
lods
out
mov
adc
cmp
add
ds
je
cmp
stc
ficom
nop
mov
mov
push
add
jl
dec
push
lods
sbb
mov
cmp
mov
add
push
push
test
fsub
add
imul
daa
xor
daa
fnsave
jecxz
cmps
sti
xor
ja
inc
mov
aad
(bad)
retf
and
cs
add
xor
call
pusha
add
aad
sahf
or
ret
das
imul
shl
jmp
mov
pop
stos
js
xchg
sar
push
lods
sub
test
cmp
aam
fcom
ins
jns
or
and
pop
std
sub
adc
adc
jmp
add
inc
dec
lods
pop
inc
mov
or
add
jl
icebp
dec
mov
loope
mov
icebp
ret
or
sahf
test
mov
(bad)
in
sub
clc
jmp
push
popf
push
mov
pop
in
sbb
lods
sub
pop
cdq
jmp
aad
sub
add
or
dec
xchg
das
add
ss
jmp
ret
jae
call
sub
leave
daa
sub
push
push
sub
add
nop
movs
mov
pop
scas
dec
imul
mov
jle
pop
pop
stc
adc
(bad)
nop
mov
aad
push
in
adc
push
(bad)
fdiv
mov
cmp
fwait
jmp
mov
in
sbb
movs
icebp
std
mov
dec
aam
pop
push
(bad)
inc
xor
push
push
jl
ret
sub
ror
mov
pusha
out
retf
mov
test
pop
mov
pop
fiadd
in
pop
mov
push
stos
lods
push
imul
mov
sub
call
cmp
cmp
mov
retf
mov
xchg
dec
pushf
sbb
pop
push
xchg
cdq
add
popa
push
and
icebp
lock
dec
dec
mov
fchs
stos
loop
repz
mov
retf
jg
mov
shl
ds
test
es
adc
cmova
cli
xchg
xor
jns
sub
adc
push
push
(bad)
mov
hlt
sti
arpl
push
lods
cmp
rol
in
shl
jl
xchg
in
scas
pop
loope
std
mov
sbb
bound
stos
pop
mov
push
push
adc
icebp
outs
cmp
mov
xchg
sub
push
in
mov
jmp
ret
scas
ficom
inc
dec
(bad)
mov
pop
push
mov
out
ins
fld
or
shl
jnp
xchg
sbb
add
jbe
and
stos
pop
arpl
mov
sbb
aad
mov
pop
out
ret
stos
pushf
mov
cmps
or
out
imul
cmc
adc
push
fcom
or
sub
push
xor
sub
mov
fs
(bad)
mov
and
es
or
mov
sbb
xor
xor
lahf
jg
retf
pop
(bad)
xor
mov
test
jns
and
jno
jae
sub
out
dec
sub
mov
std
shr
cmps
imul
inc
pop
aad
add
add
or
(bad)
(bad)
dec
add
or
dec
and
jo
pop
add
add
(bad)
(bad)
(bad)
dec
add
or
dec
and
popa
jb
add
add
(bad)
(bad)
(bad)
dec
add
or
dec
and
imul
(bad)
(bad)
(bad)
dec
add
add
dec
and
push
add
push
mov
mov
call
mov
lea
mov
call
mov
mov
mov
call
pop
ret
lea
push
push
push
.byte
