lea
lea
push
nop
nop
lea
mov
lea
lea
push
lea
push
mov
lea
push
nop
lea
lea
and
mov
sub
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
nop
mov
lea
mov
mov
mov
lea
sub
nop
lea
mov
mov
mov
mov
lea
jg
jmp
lea
lea
mov
nop
nop
mov
sub
mov
lea
mov
mov
lea
je
jmp
lea
mov
lea
mov
sub
lea
mov
nop
jg
jmp
nop
mov
mov
lea
mov
sub
lea
mov
lea
mov
mov
mov
mov
lea
jg
jmp
lea
lea
mov
nop
sub
mov
mov
mov
mov
nop
lea
lea
je
jmp
lea
mov
mov
sub
mov
mov
mov
mov
jg
jmp
nop
lea
lea
mov
nop
mov
lea
lea
sub
lea
mov
mov
nop
je
jmp
mov
mov
lea
sub
mov
mov
lea
mov
jg
jmp
nop
nop
mov
nop
mov
sub
lea
mov
nop
nop
mov
nop
nop
mov
lea
je
jmp
mov
mov
mov
lea
mov
sub
mov
mov
jg
jmp
lea
mov
mov
lea
lea
mov
sub
lea
mov
mov
lea
nop
je
jmp
lea
mov
mov
mov
lea
mov
lea
sub
lea
mov
mov
lea
jg
jmp
lea
mov
mov
mov
mov
sub
nop
lea
lea
lea
mov
mov
je
jmp
mov
mov
mov
sub
mov
lea
lea
mov
mov
lea
lea
jg
jmp
mov
nop
mov
lea
sub
mov
lea
lea
mov
nop
mov
nop
jg
jmp
mov
lea
nop
mov
lea
sub
nop
mov
lea
mov
lea
lea
jg
jmp
mov
lea
nop
mov
nop
mov
sub
mov
mov
lea
jg
jmp
lea
lea
nop
mov
nop
lea
sub
lea
mov
nop
lea
mov
lea
lea
nop
je
jmp
lea
mov
mov
lea
sub
lea
nop
nop
mov
lea
nop
je
jmp
lea
nop
mov
mov
sub
nop
mov
mov
lea
je
jmp
nop
mov
mov
mov
lea
lea
sub
mov
nop
mov
mov
nop
mov
lea
je
jmp
mov
mov
mov
lea
mov
sub
lea
lea
mov
mov
lea
lea
je
jmp
mov
lea
nop
mov
sub
mov
lea
mov
mov
je
jmp
lea
nop
lea
mov
lea
mov
mov
sub
nop
mov
lea
mov
je
jmp
mov
lea
mov
mov
nop
sub
mov
mov
lea
mov
mov
mov
lea
je
jmp
lea
lea
jmp
lea
mov
lea
mov
mov
lea
mov
mov
lea
cmp
lea
cmove
mov
mov
mov
mov
jmp
mov
lea
mov
mov
nop
mov
mov
lea
call
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
cmp
lea
lea
lea
cmove
lea
mov
lea
mov
lea
jmp
mov
mov
lea
lea
mov
mov
mov
lea
cmp
lea
cmove
mov
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
mov
mov
lea
mov
nop
mov
nop
lea
jmp
lea
mov
mov
mov
mov
nop
nop
mov
lea
nop
mov
lea
cmp
mov
mov
mov
cmove
mov
nop
mov
lea
nop
mov
jmp
nop
lea
mov
mov
mov
nop
nop
mov
nop
mov
lea
mov
lea
jmp
lea
mov
mov
lea
mov
mov
mov
lea
nop
nop
mov
nop
mov
mov
mov
nop
mov
mov
nop
lea
call
nop
nop
sub
mov
mov
mov
mov
lea
mov
mov
cmp
lea
mov
cmovne
mov
lea
nop
lea
mov
mov
mov
mov
jmp
mov
lea
lea
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
nop
mov
mov
nop
nop
call
lea
nop
mov
mov
mov
lea
mov
mov
lea
cmp
mov
cmovne
mov
mov
mov
nop
jmp
mov
lea
mov
mov
nop
mov
mov
lea
mov
mov
mov
jmp
lea
mov
lea
nop
jmp
mov
lea
lea
mov
lea
jmp
mov
nop
lea
lea
jmp
lea
mov
lea
mov
lea
mov
mov
nop
mov
lea
mov
lea
lea
mov
lea
nop
mov
mov
mov
nop
mov
mov
lea
mov
mov
mov
nop
mov
nop
lea
mov
lea
call
lea
lea
mov
sub
lea
mov
mov
mov
lea
mov
mov
lea
lea
jmp
mov
mov
lea
nop
lea
nop
mov
mov
pop
mov
pop
nop
mov
pop
nop
pop
mov
ret
mov
nop
jmp
nop
push
mov
push
push
push
sub
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
lea
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
lea
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
add
add
add
xchg
xchg
and
add
add
mov
mov
mov
add
test
in
add
test
add
lods
test
loopne
test
add
js
jle
test
lods
retf
test
add
cmps
pushf
add
dec
imul
ins
mov
lahf
in
add
jmp
mov
add
add
adc
add
das
fisub
mov
mov
lods
xchg
loop
inc
(bad)
(bad)
je
jmp
mov
pop
add
add
mov
jg
in
rcl
add
xchg
sub
in
ror
cmc
sub
jmp
mov
and
clc
add
pop
lods
sbb
mov
add
add
add
ins
add
in
sub
jle
fisubr
test
mov
pop
add
push
add
mov
inc
pop
rol
(bad)
jg
jmp
mov
sub
mov
mov
scas
add
(bad)
or
call
sub
mov
xor
jmp
jl
and
sti
add
sub
jo
sub
rol
pop
xchg
mov
add
pop
fild
mov
xlat
test
imul
add
cmps
pop
lea
add
add
(bad)
fld
mov
add
dec
imul
jmp
mov
sub
mov
add
(bad)
pushf
stc
add
test
movs
pop
add
rol
sub
mov
add
add
xor
and
add
imul
mov
sbb
add
inc
add
add
mov
add
out
inc
popa
push
test
(bad)
str
(bad)
add
add
in
mov
sub
jle
ficomp
sub
ja
nop
or
mov
inc
mov
jp
add
push
sub
mov
add
push
xor
add
imul
add
lea
push
enter
add
add
pop
dec
sbb
add
mov
mul
sldt
pop
sub
mov
and
add
cli
es
pop
lea
add
mov
jle
cmp
xor
add
fld
jg
add
popa
and
add
add
jno
inc
pusha
jle
ins
add
add
and
add
jmp
mov
jae
mov
and
push
adc
je
(bad)
aam
rol
mov
sub
mov
inc
js
cli
sub
xchg
add
gs
add
dec
jno
mov
xlat
and
or
test
rol
jmp
mov
in
add
add
ja
dec
push
mov
jg
jmp
mov
mov
dec
mov
jg
jmp
mov
and
call
pusha
cmp
cmp
ins
add
add
(bad)
sbb
shr
add
push
adc
dec
mov
pushf
mov
push
ins
add
(bad)
and
add
jmp
xor
sub
mov
mov
or
sar
shl
aaa
add
add
and
retf
call
add
(bad)
pop
add
in
dec
test
mov
mov
loop
test
dec
adc
or
data16
ror
mov
sub
mov
and
add
jmp
sub
jmp
retf
mov
in
and
mov
add
or
aas
or
add
mov
fisub
test
jg
test
pop
add
mov
cmp
push
sti
ror
add
inc
bound
add
out
push
add
and
add
mov
cmp
and
mov
add
inc
jmp
aad
div
adc
add
pop
inc
and
add
add
stc
or
in
cmp
add
mov
and
add
add
fdiv
add
jmp
mov
mov
(bad)
sldt
or
xor
rcl
test
lea
inc
mov
and
add
sub
xchg
cmps
clc
dec
data16
(bad)
out
add
aas
and
add
test
test
stc
add
fcmovb
or
add
shl
mov
sahf
test
loopne
test
add
jmp
add
add
call
xchg
jecxz
mov
(bad)
mov
push
push
adc
mov
outs
(bad)
xchg
rol
sub
mov
sbb
(bad)
cwde
dec
test
cli
mov
xchg
pop
test
sbb
and
add
add
test
add
clc
adc
add
rol
and
mov
adc
add
jg
rol
js
push
cmp
add
mov
adc
and
add
push
push
push
(bad)
or
data16
add
and
add
add
in
sbb
in
add
ret
imul
adc
sub
mov
frstor
fisttp
and
add
(bad)
xor
add
clc
sbb
mul
ins
cmp
hlt
mov
add
test
sar
sub
ja
and
add
pop
test
add
sub
ret
int3
rol
packsswb
(bad)
jmp
mov
inc
inc
dec
add
lea
wrmsr
fiadd
pop
in
rol
push
add
xchg
add
cmc
push
adc
les
cmp
mov
and
cli
add
mov
test
mov
mov
push
(bad)
and
add
jmp
mov
outs
mov
rol
les
add
je
or
add
add
add
sub
jle
ficom
(bad)
and
add
mov
add
pop
sub
mov
mov
push
adc
push
mov
add
ror
add
sub
jle
and
add
js
xor
stc
add
test
movs
add
xor
push
add
scas
mov
dec
adc
mov
cmp
push
mov
test
jns
lea
mov
and
pop
add
or
jmp
call
sub
pop
inc
and
add
packsswb
cld
hlt
jmp
fadd
add
mov
enter
add
subps
add
clc
add
add
xchg
shr
dec
(bad)
std
adc
pushf
add
clc
test
or
add
(bad)
repz
lods
push
push
inc
lea
mov
or
inc
add
ins
cmp
aas
imul
mov
mov
test
add
jmp
aad
and
add
shr
mov
psubsw
add
add
add
xchg
add
and
push
add
sub
mov
dec
(bad)
mov
std
add
sub
or
mov
adc
sub
add
(bad)
lock
add
imul
xchg
pop
inc
and
ins
add
dec
sub
mov
imul
push
cmp
inc
movs
mov
jle
popf
test
out
add
jg
jmp
test
sbb
add
and
lods
or
add
pop
mov
add
mov
and
psubsw
add
add
xchg
rol
(bad)
mov
mov
int
inc
and
je
xchg
push
add
loope
pop
add
shr
and
cwde
(bad)
repnz
jne
outs
aas
imul
icebp
leave
and
mov
in
or
rcr
test
adc
aad
dec
dec
and
jg
jmp
mov
add
add
stos
ficomp
sar
in
adc
mov
test
add
ror
add
mov
test
pop
add
sub
ret
cmp
adc
aam
add
mov
leave
ror
add
sub
mov
test
movs
pop
add
add
push
call
sub
xchg
je
push
jp
add
(bad)
jae
dec
add
add
mov
push
jg
dec
pop
add
add
push
ja
adc
pusha
inc
mov
movlps
add
psubsw
add
cmp
aas
and
dec
imul
sub
icebp
leave
and
mov
mov
add
ror
add
scas
fadd
inc
dec
push
xchg
jecxz
jnp
or
add
mov
jbe
dec
mov
inc
and
ja
loopne
add
jmp
mov
jp
rol
add
mov
and
je
jmp
mov
adc
mov
inc
rcl
cmc
lods
test
add
pop
(bad)
push
and
add
adc
mov
inc
loop
add
(bad)
jnp
mov
jo
mov
cmp
and
add
aad
mul
sahf
rep
xor
inc
and
enter
add
jmp
mov
sub
pusha
inc
fiadd
ja
out
add
mov
add
or
and
cmps
xchg
and
xor
add
push
ss
pop
sub
call
popa
mov
and
fmul
add
out
and
mov
pop
retf
inc
and
cmc
lods
inc
add
mov
pop
or
add
in
repz
mov
sub
inc
into
mov
sbb
pop
add
(bad)
aas
and
dec
imul
(bad)
mov
js
lea
je
adc
inc
add
xchg
cmp
pop
mov
add
addr16
add
pop
dec
sub
and
dec
and
call
mov
xchg
dec
mov
inc
mov
mov
retf
div
adc
add
jns
add
mov
and
add
xchg
dec
in
mov
sub
lea
(bad)
movs
pop
add
xchg
add
jmp
and
popa
cmp
cmovl
pop
jecxz
push
add
jmp
mov
jmp
lea
xor
xor
mov
add
inc
add
div
outs
rol
add
cmp
(bad)
add
inc
add
mov
push
les
mov
cdq
jns
mov
inc
add
add
loop
add
rol
adc
xor
add
mov
add
add
jle
int
jae
pop
or
fisttp
adc
in
jmp
add
push
push
adc
or
inc
rcl
mov
mov
mov
sub
ins
retf
add
jmp
icebp
mov
ja
mov
mov
test
pop
add
adc
inc
add
xchg
mov
rol
mov
xor
jbe
call
les
add
lea
fld
je
push
mov
mov
cmp
sbb
add
add
pushf
or
mov
mov
outs
(bad)
call
cs
jmp
in
fstp
xor
shl
jmp
add
(bad)
cld
and
add
add
push
add
lea
lea
mov
pop
pop
xor
add
repnz
inc
sub
add
(bad)
pshufw
aaa
imul
cmp
in
add
cdq
xchg
lea
dec
inc
add
fbld
or
dec
and
or
mov
mov
cmp
cmovl
icebp
add
mov
add
add
and
add
sub
test
add
dec
or
inc
add
add
and
call
dec
repnz
push
jmp
dec
retf
jp
add
push
clc
or
dec
data16
adc
movs
add
(bad)
sub
lds
shl
add
repnz
add
sbb
pop
mov
and
call
mov
mov
arpl
rol
cmovl
mov
imul
add
test
add
shr
outs
sub
mov
adc
inc
add
loopne
inc
add
rol
stos
fiadd
add
inc
pop
sub
push
add
lea
psllq
enter
add
xlat
add
(bad)
xlat
xor
mov
jo
add
lea
lea
add
inc
add
add
ins
dec
and
call
mov
dec
fsub
add
enter
add
add
jmp
test
sub
iret
and
mov
imul
push
iret
inc
add
and
call
mov
push
jg
jae
cmp
test
add
push
clc
hlt
or
rol
(bad)
and
test
dec
add
add
add
and
dec
and
call
ror
push
or
pusha
outs
mov
push
minps
mov
xchg
rol
out
add
add
jmp
jmp
lea
lea
mov
mov
test
sbb
imul
setle
add
jmp
mov
sub
shl
pop
add
add
add
lea
jo
mov
call
mov
mov
cmp
cmovl
pop
jecxz
ins
cmp
jmp
mov
push
add
inc
add
pop
cld
dec
inc
add
add
and
push
fld
add
ins
sbb
add
add
add
mov
lea
lea
sti
inc
add
and
add
add
jp
mov
jmp
clc
dec
inc
add
loopne
inc
add
and
inc
and
call
mov
pop
dec
push
or
jo
imul
cli
es
ss
in
add
jmp
mov
clc
add
data16
rol
(bad)
mov
xor
cs
and
sub
add
icebp
leave
fwait
loope
jae
add
mov
adc
and
add
adc
retf
sub
and
inc
out
(bad)
lahf
or
jmp
inc
cmp
add
jmp
mov
mov
cmp
pop
push
inc
mov
jmp
int
xor
add
cmp
(bad)
mov
add
dec
add
jae
movs
call
(bad)
cmp
fimul
shl
fistp
xor
rol
add
movlhps
mov
outs
movs
add
jmp
scas
xor
in
shr
cmp
(bad)
mov
add
add
test
dec
add
add
xchg
add
add
mov
inc
and
push
outs
pushf
ss
add
add
mov
push
test
movs
add
add
jle
add
pushf
ss
add
cmp
mov
mov
push
dec
add
add
lds
(bad)
enter
ss
add
or
inc
ror
add
daa
add
add
push
add
call
(bad)
xlat
test
inc
add
verw
and
in
add
mov
test
add
sbb
loopne
mov
and
adc
and
test
movs
add
add
shr
mov
mov
jl
ficom
cmp
stc
add
(bad)
ror
add
adc
shl
hlt
dec
inc
add
xchg
pop
or
add
ins
add
add
test
imul
test
add
add
add
pop
add
jmp
pusha
mov
mov
out
mov
mov
add
add
ror
add
pop
add
dec
mov
pusha
dec
add
test
stc
inc
(bad)
pusha
mov
mov
add
push
(bad)
test
and
dec
mov
sub
add
(bad)
adc
add
(bad)
lock
movs
mov
xchg
add
or
sub
hlt
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
call
mov
mov
mov
mov
sub
mov
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
call
mov
jmp
add
pop
pop
pop
pop
ret
jmp
data16
lea
lea
push
nop
nop
lea
mov
lea
lea
push
lea
push
mov
lea
push
nop
lea
lea
and
mov
sub
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
nop
mov
lea
call
mov
call
lea
xor
nop
lea
mov
mov
mov
mov
lea
call
lea
lea
mov
nop
nop
mov
lea
mov
lea
pop
mov
lea
pop
lea
pop
lea
mov
pop
lea
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovge
mov
jmp
mov
mov
cmp
cmovle
mov
jmp
mov
mov
sub
sub
add
sub
sub
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
icebp
test
cmp
add
xchg
add
out
test
xchg
add
test
add
dec
js
mov
aam
add
popa
icebp
add
mov
sbb
out
add
in
add
adc
add
add
test
add
add
test
pusha
add
icebp
jl
cmp
pop
mov
add
inc
loope
add
into
adc
ss
dec
js
or
add
mov
sub
pop
stos
sbb
inc
(bad)
adc
mov
inc
loope
add
das
or
push
imul
mov
fcom
inc
loope
add
fwait
mov
adc
popa
icebp
add
add
mov
inc
cmp
mov
outs
mov
mov
push
je
or
xor
adc
mov
add
lea
mov
mov
mov
pop
in
and
add
add
cmp
cdq
add
(bad)
xchg
ret
mov
xchg
xchg
mov
add
sbb
add
add
or
mov
and
add
or
(bad)
sbb
add
add
jp
and
add
ficom
adc
add
out
test
retf
repz
mov
pop
push
pop
pop
adc
jge
add
add
mov
xchg
jmp
sahf
test
add
pop
or
and
or
add
test
add
add
jnp
add
mov
and
add
not
xor
adc
jb
add
jmp
ret
nop
add
add
mov
jl
(bad)
sbb
add
jmp
mov
mov
mov
unpckhps
mov
add
or
sti
imul
and
inc
cmp
movhps
add
add
mov
sub
mov
je
xchg
test
xchg
xlat
popa
add
sbb
add
add
add
in
add
mov
jns
xchg
(bad)
and
push
into
mov
and
sub
xor
popa
icebp
jmp
int3
test
add
add
xchg
test
add
jg
cld
add
js
mov
ins
nop
jns
xchg
mov
icebp
jae
or
add
or
add
adc
sub
push
adc
(bad)
iret
add
add
or
or
pop
in
and
add
mov
add
add
cdq
xchg
out
data16
sub
mov
wrmsr
and
or
jp
pop
xlat
add
fisubr
outs
test
in
xchg
add
add
add
mov
sti
icebp
sbb
std
cmc
test
add
aad
mov
add
add
mov
leave
nop
xchg
add
mov
mov
dec
paddb
add
sub
xchg
push
inc
popa
jge
inc
sub
adc
punpckldq
xchg
add
add
jmp
inc
sbb
fdivr
add
jmp
mov
sbb
fwait
mov
test
lods
(bad)
and
add
or
add
popa
icebp
push
pop
and
adc
je
add
add
add
adc
mov
mov
and
jns
add
xor
add
or
add
sbb
test
lock
sub
cmc
test
inc
cmp
divps
add
out
cmp
add
mov
sub
jg
cmc
(bad)
add
popa
jp
and
inc
add
sub
mov
nop
in
mov
jle
adc
add
dec
add
jecxz
xor
(bad)
add
(bad)
and
add
add
icebp
jl
ret
and
cmp
fisubr
push
test
out
add
adc
add
mov
xchg
fadd
je
xchg
push
inc
rol
add
jae
and
add
jmp
adc
sub
adc
ja
mov
lock
push
mov
loope
cmp
aad
jge
inc
jg
push
add
and
add
xchg
mov
sbb
ins
ins
add
add
add
mov
add
jl
sub
mov
packsswb
or
xchg
jle
add
adc
mov
cmp
or
sub
test
sbb
icebp
jl
int3
mov
xchg
retf
popa
pop
mov
cwde
test
pop
add
js
es
call
cmp
pop
jl
in
add
add
movnti
or
cdq
add
add
add
push
test
js
mov
pop
add
push
push
or
mov
icebp
add
icebp
push
xchg
jp
inc
push
test
add
add
test
or
mov
xchg
jle
or
or
or
dec
adc
ret
fadd
add
add
inc
ror
add
stos
ins
add
(bad)
jne
aam
inc
cmp
arpl
inc
or
pushf
add
sbb
dec
js
mov
xor
and
or
add
inc
cmc
mov
fiadd
cdq
push
arpl
in
add
add
fcomi
dec
inc
add
int3
inc
inc
add
frstor
add
add
xchg
fwait
sub
mov
js
and
add
cmp
fisubr
add
add
add
add
rol
add
and
adc
xchg
mov
cmp
and
sbb
(bad)
mov
aad
add
jl
test
add
add
call
inc
inc
add
xchg
mov
mov
add
mov
sar
cdq
add
and
sub
(bad)
call
in
cld
add
cmp
add
push
add
mov
mov
mov
enter
stc
mov
add
dec
js
cmove
mov
fwait
stos
sub
std
add
dec
add
(bad)
(bad)
jmp
test
push
add
in
shl
mov
jo
add
rcl
mov
mov
icebp
cmc
push
and
dec
(bad)
popf
push
mov
in
add
adc
call
jmp
add
mov
mov
daa
test
add
add
movs
or
call
inc
arpl
add
ficomp
mov
add
mov
xchg
add
adc
add
mov
add
js
mov
sub
adc
add
into
mov
add
add
mov
add
mov
mov
add
enter
mov
mov
(bad)
cmp
or
or
or
add
pop
outs
add
xchg
sbb
add
aam
inc
add
not
and
cmp
ficom
adc
outs
inc
and
sub
add
add
add
add
lock
mov
add
mov
mov
js
and
mov
cdq
add
out
add
mov
xor
dec
inc
add
xchg
and
nop
mov
mov
fwait
or
add
sub
pop
inc
shl
add
ins
add
(bad)
cmp
add
mov
mov
adc
outs
adc
shl
push
push
and
xchg
mov
and
js
add
ins
add
push
or
add
dec
inc
add
mov
xchg
pop
enter
adc
mov
jno
and
add
add
mov
and
add
add
mov
jmp
inc
inc
add
xchg
mov
xchg
adc
pop
and
arpl
add
add
mov
push
out
mov
xor
add
adc
inc
add
mov
mov
ss
or
adc
fiadd
mov
(bad)
ins
add
mov
mov
mov
mov
enter
mov
add
or
add
add
hlt
shr
outs
popa
icebp
add
dec
inc
add
aam
inc
add
add
aas
adc
fs
mov
(bad)
push
and
xchg
add
mov
xchg
add
movs
add
add
mov
inc
add
mov
arpl
add
cdq
mov
jmp
add
and
add
add
mov
test
dec
inc
add
xchg
inc
inc
enter
cmc
push
sbb
(bad)
sahf
mov
in
push
mov
call
mov
mov
mov
mov
pop
enter
ss
mov
add
push
popa
add
and
inc
cmp
call
and
add
xchg
inc
movs
dec
inc
add
cmp
add
mov
icebp
aad
dec
mov
add
add
add
xchg
fld
add
add
add
mov
mov
push
or
out
adc
aas
test
pop
or
hlt
mov
hlt
stos
imul
mov
mov
mov
mov
cmp
add
mov
cmc
add
or
mov
call
mov
mov
xor
inc
inc
add
add
mov
cmove
add
add
sub
pop
and
popa
add
call
mov
mov
(bad)
inc
inc
add
cmp
push
lea
rol
mov
inc
leave
lahf
add
add
add
js
pop
imul
sbb
xchg
mov
push
cld
inc
inc
add
add
mov
mov
and
cmp
add
mov
call
verw
add
add
add
add
xchg
mov
inc
and
mov
add
pop
in
aad
jl
cmp
mov
add
mov
adc
mov
xchg
mov
adc
xchg
mov
sub
fwait
or
add
mov
mov
jl
add
mov
int3
xchg
and
fild
cdq
mov
add
inc
xor
add
mov
push
add
mov
mov
cmps
xchg
and
sbb
inc
mov
and
cdq
add
test
add
add
mov
mov
sahf
xchg
pop
enter
mov
mov
mov
xchg
sbb
mov
imul
add
fist
adc
inc
add
cdq
add
and
mov
push
dec
and
call
mov
mov
xor
inc
inc
add
add
mov
psubq
sub
inc
repnz
dec
and
call
call
dec
inc
add
inc
inc
add
xor
push
sub
sbb
cld
mov
cmp
cmove
cmc
mov
add
cmp
stos
fadd
add
and
xchg
add
sbb
(bad)
push
and
in
xchg
add
adc
add
js
xchg
xor
sub
add
add
mov
mov
mov
cmc
add
call
sbb
add
add
inc
inc
add
add
inc
and
mov
sbb
call
mov
and
push
xor
add
sbb
call
and
cmp
add
xchg
out
cli
leave
ins
jg
push
add
inc
add
mov
bts
mov
add
inc
cmp
popa
add
jl
dec
arpl
test
add
cmp
add
cmp
add
add
push
and
xor
inc
and
js
mov
outs
push
push
add
jne
dec
inc
add
cmp
inc
add
cmp
push
adc
adc
and
jno
and
add
xchg
xchg
mov
pusha
nop
sub
add
ins
dec
inc
add
mov
inc
add
loope
xchg
inc
add
scas
in
sbb
lods
mov
(bad)
push
std
mov
out
mov
xchg
add
add
cwde
inc
retf
and
add
add
mov
add
jecxz
sahf
(bad)
jne
mov
jne
mov
clc
pushf
add
add
add
adc
mov
xchg
inc
and
add
add
mov
adc
add
pop
loope
lock
dec
inc
add
mov
mov
mov
sub
add
pop
mov
mov
add
mov
mov
jmp
das
out
in
xchg
mov
sbb
and
add
xchg
sub
mov
mov
movs
inc
and
call
movs
add
add
fs
inc
add
inc
inc
add
xchg
and
inc
cmp
push
adc
push
mov
and
xchg
xchg
adc
sbb
add
xchg
dec
inc
add
pop
xchg
inc
shl
jl
mov
add
inc
mov
out
mov
push
dec
mov
nop
mov
xchg
add
mov
add
ret
rol
fwait
add
inc
repnz
or
add
xchg
out
adc
mov
add
add
mov
xchg
cmp
mov
mov
and
call
movs
(bad)
add
add
mov
jmp
mov
and
inc
inc
fnsave
add
dec
and
call
cs
push
dec
inc
add
js
inc
add
xchg
ins
test
mov
mov
fild
popa
icebp
add
cmc
dec
arpl
push
add
arpl
add
cdq
xor
dec
inc
add
inc
inc
add
xchg
xchg
pushf
ins
mov
out
jl
inc
mov
add
fsub
add
inc
add
mov
mov
add
push
test
inc
into
mov
add
mov
dec
push
add
js
inc
jne
mov
add
xchg
repz
mov
mov
aaa
push
and
xchg
adc
add
inc
ror
js
dec
mov
add
fs
lock
and
bound
add
xchg
out
imul
jmp
mov
and
dec
js
mov
and
add
mov
add
or
jle
cmp
add
inc
inc
add
mov
add
js
adc
mov
mov
mov
and
hlt
add
add
push
cld
dec
inc
add
and
add
add
mov
and
inc
mov
or
dec
xor
aad
add
rcl
dec
inc
add
ret
add
mov
inc
cmp
inc
inc
stc
add
mov
and
call
mov
xor
dec
inc
add
ins
xchg
and
in
xchg
add
add
inc
and
push
out
jo
mov
inc
fucomp
jns
add
lds
inc
cmp
mov
mov
mov
mov
outs
inc
xchg
add
inc
and
xchg
xchg
add
call
mov
jmp
inc
inc
add
sbb
mov
mov
adc
ret
and
sbb
add
xchg
xchg
mov
mov
inc
inc
add
mov
rol
ret
sub
(bad)
add
dec
and
xchg
out
arpl
add
mov
mov
mov
mov
push
adc
aas
test
pop
or
xor
sbb
shl
mov
mov
push
add
add
cmp
add
add
inc
xrelease
jle
out
in
mov
mov
mov
mov
dec
and
gs
mov
sbb
outs
arpl
add
(bad)
push
and
add
add
mov
add
fisub
mov
pop
xchg
push
dec
inc
add
aaa
xor
cmp
lds
xchg
mov
and
jns
xchg
add
popa
add
inc
retf
and
fild
add
add
cmp
xchg
xchg
(bad)
jmp
add
add
scas
mov
pop
sub
(bad)
fyl2x
jl
add
add
add
adc
add
test
add
call
add
inc
add
test
dec
js
add
das
mov
jne
mov
(bad)
jl
inc
mov
add
xor
pop
mov
push
jle
in
(bad)
dec
pop
inc
add
in
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
sub
add
add
mov
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
add
add
sub
mov
mov
movzx
mov
mov
movzx
mov
xor
and
xor
and
mov
mov
xor
and
and
or
or
xor
mov
mov
mov
mov
mov
cmp
mov
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
movsx
mov
xor
and
xor
and
or
mov
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
mov
add
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
xchg
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
movsx
mov
xor
mov
xor
xor
mov
and
and
mov
and
mov
and
or
or
xor
or
xor
mov
or
and
or
mov
sub
add
add
mov
mov
shl
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
movsx
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
inc
test
out
add
sti
pusha
xor
dec
movs
adc
mov
add
fcomp
(bad)
or
imul
push
adc
retf
add
out
fiadd
pop
dec
inc
and
sbb
xor
mov
push
add
bnd
add
push
pop
and
sub
mov
cmove
out
add
pop
dec
inc
and
sbb
adc
in
and
add
add
out
sub
imul
jmp
mov
repnz
xchg
or
push
test
add
push
add
xchg
sub
imul
aaa
pop
add
add
or
mov
(bad)
call
add
mov
add
ret
inc
cmc
sub
cdq
(bad)
xlat
retf
add
mov
pop
ror
ror
xchg
je
dec
add
sub
mov
fadd
push
add
dec
gs
sub
push
fsub
(bad)
add
jmp
mov
dec
sub
mov
je
ds
add
fidiv
cdq
(bad)
movs
mov
data16
mov
add
or
push
cmovne
mov
jmp
mov
mov
push
mov
add
pop
rol
jne
mov
jne
add
mov
add
mov
enter
push
fadd
ins
frndint
push
jmp
push
xor
addr16
je
shl
repz
xchg
mov
add
pushf
add
add
pop
fld
add
lea
or
clc
sbb
xlat
add
sub
adc
pop
add
ins
adc
aaa
push
adc
add
lock
add
loop
pop
sub
add
adc
out
push
fld
call
sub
mov
mov
cmp
push
test
mov
mov
jmp
cmp
and
pop
mov
inc
add
inc
and
push
dec
int
jmp
mov
mov
mov
xor
mov
and
add
mov
add
add
pop
std
pop
pop
or
bnd
xchg
test
add
add
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
pop
xor
adc
inc
out
inc
popa
ret
scas
or
rol
cli
pushf
and
mov
addps
add
dec
add
inc
cmps
adc
mov
sub
je
jmp
mov
stos
pop
leave
pop
ja
lds
jnp
fadd
mov
add
mov
adc
imul
and
cmp
fiadd
mov
jmp
xor
loopne
add
shl
sbb
inc
pop
outs
add
or
xchg
mov
das
dec
mov
ret
jmp
xchg
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lds
adc
mov
out
(bad)
mov
mov
jno
add
add
mov
jp
cmp
stos
loope
inc
and
mov
data16
inc
dec
fimul
adc
add
add
pop
sbb
adc
(bad)
pop
add
add
sbb
aas
add
dec
or
push
or
jmp
mov
sub
mov
pop
mov
push
add
add
xor
sub
stc
inc
sbb
test
add
outs
cmc
pop
and
and
je
jbe
add
mov
inc
or
sbb
test
and
jmp
mov
and
cmp
(bad)
push
ret
sbb
add
fisubr
add
test
mov
mov
rol
mov
add
add
or
push
test
icebp
and
inc
adc
dec
leave
sub
mov
push
dec
lahf
add
fisub
jle
fwait
(bad)
jmp
(bad)
mov
push
mov
mov
inc
jb
or
loop
sbb
xlat
dec
ja
jl
loope
jl
push
jnp
xor
mov
mov
cmp
mov
and
xor
punpcklwd
outs
pop
inc
pushf
popa
xor
and
adc
jno
and
mov
dec
jo
cmc
xor
cmp
xlat
push
pop
and
mov
inc
add
mov
or
(bad)
ret
lock
fs
sbb
sub
or
push
and
jmp
mov
(bad)
dec
and
xor
inc
test
sub
(bad)
test
adc
push
sbb
out
add
mov
sub
sub
mov
stc
out
and
cmp
in
mov
add
pop
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loopne
or
sbb
adc
push
mov
mov
and
mov
dec
mov
cmp
inc
and
mov
(bad)
and
stos
(bad)
jns
cmp
ror
xchg
inc
and
mov
mov
add
push
mov
inc
sub
or
jg
pop
add
add
mov
aas
push
sbb
add
(bad)
mov
add
out
add
dec
mov
sub
mov
je
call
mov
dec
int3
aam
mov
cdq
push
je
mov
mov
sub
cwde
xor
add
imul
add
loopne
and
add
xor
sub
jge
add
icebp
jno
retf
add
cmp
sub
out
and
stos
imul
add
push
inc
ss
test
push
add
mov
jmp
mov
mov
mov
dec
push
and
cmovb
inc
fisub
sub
mov
dec
pop
retf
mov
mov
mov
xor
sub
sub
mov
adc
pop
inc
xor
xchg
mov
dec
(bad)
and
movzx
out
inc
inc
fild
push
and
loop
xor
test
adc
ret
or
xor
mov
and
jle
xor
mov
sub
std
add
cmovb
mov
and
or
add
inc
and
test
add
mov
mov
sub
add
(bad)
dec
ins
sub
lds
cmps
and
mov
and
push
push
add
outs
loope
pop
push
mov
repnz
add
sti
or
stc
push
lds
inc
push
nop
xchg
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
imul
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
movzx
mov
mov
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
add
add
sub
mov
mov
jmp
call
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
sub
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
sub
add
add
mov
mov
sub
add
add
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
movzx
mov
mov
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
ret
jmp
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
add
pop
ret
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
inc
or
sub
and
inc
dec
jecxz
jne
xor
add
and
(bad)
aam
adc
push
fidiv
xor
or
add
mov
xor
fwait
and
push
(bad)
lods
add
xchg
add
loopne
adc
retf
mov
retf
add
jmp
mov
push
xchg
mov
fdiv
jmp
mov
jecxz
or
call
and
nop
lods
push
fadd
jne
mov
loop
pop
jo
cmp
test
pusha
jl
add
sbb
xor
pop
and
add
jmp
push
inc
push
xor
push
inc
sbb
rcpps
xchg
add
into
dec
fwait
and
stc
retf
scas
push
jmp
inc
inc
adc
test
add
inc
scas
jbe
test
adc
mov
add
jl
jmp
mov
mov
mov
inc
pusha
cmp
cmovne
push
inc
and
jmp
mov
mov
(bad)
xchg
or
or
add
inc
xor
inc
add
fs
xchg
into
call
xor
mov
jg
test
xor
add
mov
and
imul
das
inc
xlat
add
xor
pop
and
adc
aam
mov
jmp
clc
add
or
mov
mov
mov
shl
mov
das
and
add
push
nop
and
adc
adc
add
add
push
(bad)
gs
mov
push
ret
ds
dec
out
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
sub
add
mov
mov
jmp
mov
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
sub
add
add
sub
sub
mov
mov
shl
add
add
mov
mov
mov
mov
mov
mov
call
mov
sub
add
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pop
xor
mov
and
lds
mov
enter
mov
in
add
mov
call
inc
and
mov
mov
cld
jmp
mov
and
out
outs
sbb
add
add
cmp
mov
repz
adc
jmp
shl
push
loope
jge
stos
outs
fild
add
mov
xchg
or
cld
add
mov
push
add
inc
push
fisttp
jmp
and
sub
adc
je
ins
sar
jge
push
inc
outs
fstp
sub
jecxz
push
sub
mov
stos
add
add
inc
shl
cld
add
inc
xchg
pop
aam
(bad)
push
mov
cmp
add
inc
sub
stos
xlat
sub
inc
mov
popf
jmp
pop
inc
pop
aam
gs
and
pop
ret
stos
and
(bad)
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
ror
xchg
pop
inc
mov
add
push
cld
jge
sub
sbb
inc
and
mov
mov
and
mov
sub
mov
mov
and
cwde
inc
sbb
add
add
mov
(bad)
fcomp
and
je
jmp
sub
and
push
xor
pop
pop
inc
inc
and
je
psubsw
add
(bad)
scas
sbb
scas
push
pop
cmp
and
and
jge
add
pushf
jb
sub
mov
les
ret
cmps
mov
ret
and
rcr
cmp
mov
mov
add
shrd
mov
and
add
sub
pop
cmp
or
in
sub
dec
and
add
mov
jge
(bad)
iret
and
call
add
mov
mov
gs
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
xchg
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
movsx
mov
movsx
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovl
mov
mov
jmp
mov
mov
mov
movsx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
add
mov
mov
add
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
xchg
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovl
mov
mov
jmp
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
add
mov
mov
add
mov
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
xchg
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
inc
or
pop
iret
repnz
add
dec
and
xor
movs
iret
aaa
and
inc
and
and
outs
data16
adc
and
xchg
dec
pop
push
call
lea
push
adc
inc
or
mov
and
jns
addr16
fs
mov
out
(bad)
dec
test
call
mov
imul
in
inc
add
inc
add
push
inc
add
lahf
and
rcl
dec
int
mov
inc
push
rol
in
mov
adc
sub
daa
cmp
cmps
repnz
dec
outs
add
test
jo
sbb
add
jnp
(bad)
sbb
push
dec
add
test
add
and
ja
mov
mov
and
add
push
(bad)
sbb
add
add
mov
sub
mov
sub
test
pushf
add
jmp
mov
shl
unpcklps
xor
add
mov
xor
mov
inc
dec
loop
test
add
popf
add
and
test
aas
enter
and
jg
fsub
inc
lds
add
loop
setae
xor
popf
add
and
fs
pop
std
in
inc
and
movs
test
enter
mov
sub
mov
and
por
add
inc
icebp
jnp
add
mov
and
enter
push
and
and
cmovl
inc
add
loope
fldenv
sbb
push
mov
leave
cmp
jb
shr
pop
mov
add
mov
pop
or
xchg
and
les
add
push
das
pop
sbb
cs
add
or
mov
lock
pop
and
fcmovnu
xchg
mov
sbb
enter
sub
mov
sbb
jmp
add
mov
lods
mov
dec
pop
push
or
add
lock
mov
in
jo
add
mov
sub
rol
loopne
sub
mov
in
loop
adc
dec
push
cmp
cmp
dec
test
test
add
fbld
xchg
ret
scas
or
add
ins
inc
fistp
pop
xor
out
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
iret
add
dec
out
push
pop
sub
out
pop
pop
mov
inc
cwde
dec
inc
add
sub
jno
mov
add
nop
cmps
or
outs
add
add
add
cmp
aad
dec
aam
fild
dec
add
mov
cs
ror
mov
and
jg
jmp
mov
and
out
loope
(bad)
int
mov
loopne
push
add
add
mov
sbb
jecxz
mov
adc
test
pop
mov
sbb
es
test
test
add
jl
mov
stc
mov
popf
adc
inc
and
femms
inc
add
in
adc
dec
pop
jmp
mov
pop
popa
mov
iret
cmp
and
clts
test
inc
and
jmp
mov
sub
movzx
dec
cmp
ror
(bad)
idiv
mov
ds
xlat
sbb
xlat
out
and
inc
inc
(bad)
mov
mov
les
into
or
dec
(bad)
mov
call
pop
mov
sbb
mov
jmp
mov
and
add
fadd
ins
add
popf
int3
push
adc
sub
sub
popf
sbb
mov
mov
fld
std
lea
adc
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
push
loope
mov
mov
pop
mov
inc
les
mov
and
jb
and
mov
and
mov
and
mov
dec
mov
and
mov
cmp
cmps
xor
xor
pushf
push
sysret
fld
sti
aad
cmp
add
jb
xor
aas
mov
lods
mov
xchg
jmp
mov
push
retf
and
pextrw
inc
add
sbb
add
add
mov
scas
test
jg
jmp
mov
aaa
xor
xor
out
into
jno
add
nop
add
add
add
test
outs
and
je
jmp
mov
sub
xor
adc
push
and
cmp
jmp
mov
sbb
std
ror
repz
add
dec
xchg
adc
mov
loop
loop
loopne
inc
and
hlt
test
dec
cmp
fbstp
sub
pop
xchg
imul
and
sbb
jg
clc
add
xlat
mov
and
sub
mov
movs
xor
test
mov
stc
jmp
mov
or
jae
and
mov
repnz
mov
mov
mov
jmp
mov
push
call
mov
nop
cmp
and
add
add
cli
mov
sub
jmp
mov
pop
and
mov
inc
loop
cmp
inc
cmp
jecxz
xchg
add
dec
pushf
bound
mov
and
mov
add
sar
pop
add
into
xchg
das
xor
inc
enter
mov
inc
and
cwde
dec
sbb
jno
inc
(bad)
mov
arpl
add
sti
pop
inc
and
sub
test
add
add
mov
(bad)
cmp
push
push
jmp
lea
dec
pop
pop
pusha
cmp
mov
ja
data16
push
mov
push
mov
mov
mov
mov
add
pop
ret
nop
push
mov
mov
imul
add
add
sub
mov
shr
xor
mov
xor
and
mov
pop
ret
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
add
mov
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
add
mov
movzx
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
movzx
mov
mov
add
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
movzx
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
jmp
mov
mov
mov
shl
add
mov
sub
add
shl
add
mov
mov
jmp
mov
mov
mov
cmp
cmovae
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
add
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
movzx
mov
call
mov
mov
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
add
mov
mov
add
mov
mov
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
sub
mov
add
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
cdq
idiv
mov
mov
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
mov
mov
mov
cdq
mov
idiv
mov
mov
jmp
mov
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
div
mov
fiadd
mov
popf
mov
add
pop
xchg
and
add
mov
xchg
repnz
test
push
call
mov
add
add
retf
mov
mov
js
(bad)
xchg
(bad)
cmp
fadd
cmp
rol
lods
mov
mov
lds
ja
mov
add
pushf
ret
push
mov
fld
add
jl
inc
and
sub
mov
test
add
ja
mov
pop
add
adc
lods
mov
sub
and
add
jl
inc
fcomp
sbb
add
mov
mov
cli
in
and
mov
mov
mov
icebp
push
repnz
(bad)
int3
(bad)
(bad)
mov
mov
mov
add
inc
out
and
inc
and
add
call
pushf
retf
mov
call
pop
out
in
or
mov
and
call
lea
cmp
aam
jmp
add
inc
pop
and
mov
mov
mov
and
stos
add
ret
add
mov
mov
lods
inc
and
sar
cmovbe
and
add
ja
or
add
add
xchg
sub
add
mov
mov
mov
mov
and
je
mov
pop
inc
and
icebp
inc
xor
call
mov
mov
push
imul
add
push
add
and
add
or
push
inc
mov
jmp
rcl
pop
dec
(bad)
mul
dec
leave
and
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jns
jae
pop
mov
inc
jmp
scas
dec
add
or
add
and
imul
mov
bound
add
mov
(bad)
mov
jl
add
add
inc
and
jmp
mov
inc
add
ds
add
mov
jno
(bad)
mov
add
inc
adc
mov
mov
inc
gs
add
mov
(bad)
pop
sub
add
ror
in
out
test
add
add
jns
add
loopne
retf
jge
inc
mov
sub
mov
ror
xchg
int
add
jmp
mov
sub
mov
loope
lds
pop
add
add
add
mov
js
test
mov
sbb
jmp
jp
and
ret
addr16
fimul
xchg
xor
add
add
add
xchg
gs
mov
sub
push
add
add
xchg
jge
dec
dec
inc
and
dec
xchg
and
add
dec
sti
sbb
into
and
sub
mov
sbb
pop
or
iret
inc
and
add
push
shl
ins
stos
je
jmp
lods
stos
cld
sub
or
inc
in
dec
xchg
sbb
clc
add
jo
ds
mov
out
mov
je
pop
fadd
fadd
mov
sub
inc
cs
sbb
ins
ja
add
sbb
mov
fdiv
cmp
mov
push
mov
rol
add
jmp
popa
or
push
inc
and
jg
jmp
gs
and
cmc
jb
xor
dec
inc
and
dec
sahf
xor
add
mov
dec
sti
add
dec
test
add
subps
add
imul
add
xor
and
adc
mov
retf
add
inc
push
fidivr
add
add
lds
(bad)
clc
dec
mov
aaa
ret
jge
dec
lock
aad
sub
add
pop
jmp
mov
sub
dec
inc
and
je
mov
add
dec
adc
jne
(bad)
(bad)
cmp
int
xor
mov
cmp
cmove
mov
fdiv
cli
add
(bad)
adc
je
sub
add
add
add
(bad)
test
rol
and
sub
bound
and
sbb
mov
lock
xchg
stos
cld
or
fistp
jns
dec
and
jmp
cld
in
cmp
jg
push
mov
jns
mov
icebp
cmovne
mov
and
pop
retf
pop
add
sub
mov
inc
sbb
dec
sti
mov
icebp
mov
cld
and
mov
push
movs
inc
call
icebp
add
inc
add
cmp
jl
popf
mov
jg
and
sub
clc
inc
inc
retf
ds
inc
scas
shr
add
daa
mov
jmp
mov
push
jae
and
add
add
xchg
lock
and
add
add
arpl
jl
mov
mov
pop
or
mov
jg
jle
mov
jmp
and
sub
xor
jmp
mov
(bad)
sbb
jbe
aas
arpl
adc
add
popf
(bad)
inc
lock
js
pop
jmp
scas
add
sub
retf
and
xor
pop
or
mov
loop
and
add
add
clc
mov
(bad)
cld
loope
add
or
pop
xchg
mov
sbb
add
push
gs
pop
add
ret
add
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
sbb
or
jle
mov
and
(bad)
data16
pushf
and
add
out
mov
in
jge
aaa
mov
and
xlat
add
push
add
mov
add
test
xchg
add
add
xor
mov
movaps
mov
les
call
test
out
jb
lods
std
jmp
mov
add
mov
nop
add
pop
fistp
add
jmp
inc
push
add
add
outs
test
xor
lods
or
jmp
adc
and
xlat
mov
mov
mov
repz
add
data16
pop
pop
out
jmp
out
and
stos
add
sub
mov
aad
push
jnp
(bad)
and
add
nop
mov
sub
cmc
test
add
aaa
nop
push
mov
mov
test
add
pushf
jle
test
xor
pop
add
lahf
(bad)
xor
and
push
jnp
sub
mov
imul
mov
dec
push
jge
add
add
jne
sbb
je
add
add
and
out
jb
out
mov
lahf
(bad)
xchg
mov
and
push
add
jmp
add
add
fiadd
xlat
mov
retf
(bad)
mov
add
aaa
nop
pop
pushf
add
jnp
mov
mov
mov
movs
mov
xchg
(bad)
add
xchg
push
push
mov
daa
push
add
sahf
sub
out
adc
add
add
cmp
and
add
mov
mov
mov
mov
paddq
int3
cwde
add
in
adc
push
out
add
mov
(bad)
and
add
jbe
mov
jb
push
add
daa
jae
rcr
test
and
add
test
aas
jb
test
mov
push
add
add
mov
je
and
add
add
add
sub
mov
stos
cmp
fimul
add
push
mov
and
add
mov
xor
ret
sbb
jge
pop
stos
aaa
add
lahf
(bad)
mov
push
add
add
mov
add
test
ins
add
xor
jmp
add
pop
cmp
jg
jmp
pop
loop
je
add
sub
in
and
ss
add
cmp
or
add
and
add
mov
and
add
lahf
add
push
xchg
add
add
test
add
sub
out
test
mul
mov
test
mov
sub
mov
and
xor
(bad)
dec
add
lahf
(bad)
add
mov
mov
push
push
add
mov
add
add
xor
jb
clc
and
stos
add
sub
mov
pop
fbld
jnp
add
add
mov
and
add
cmc
cs
aaa
add
add
sub
mov
dec
sub
in
add
aaa
jmp
sbb
sub
mov
loopne
add
test
jl
fsubrp
add
add
add
sub
mov
or
and
and
add
jl
sub
mov
mov
push
xchg
push
mov
adc
xchg
sub
mov
add
psllq
add
add
aaa
lahf
(bad)
mov
add
push
jge
cld
jmp
mov
jg
add
add
add
sub
mov
fnstenv
jle
add
jmp
lock
mov
mov
cmp
mov
mov
add
xchg
add
add
mov
inc
mov
and
out
xor
loop
jg
stos
jmp
pop
test
push
or
add
test
add
add
jmp
fnsave
add
clc
and
stos
aaa
lahf
sub
mov
and
add
jnp
adc
aam
add
add
out
test
jge
aaa
sub
mov
repnz
(bad)
and
jnp
jmp
mov
add
out
imul
in
pop
mov
add
add
xchg
mov
and
push
jnp
sub
mov
jg
inc
add
add
adc
and
mov
aaa
cli
scas
mov
daa
lods
add
gs
add
and
add
add
push
push
push
sub
add
add
add
mov
sub
mov
and
add
add
test
sub
and
mov
cmp
xchg
pop
and
add
nop
and
out
mul
add
call
or
test
jb
sahf
ds
add
mov
push
add
and
sbb
jmp
lahf
(bad)
jmp
mov
nop
sub
mov
dec
call
test
mov
push
add
xlat
mov
adc
test
add
jge
and
stos
fiadd
add
add
mov
cmc
pop
mov
je
push
jbe
add
mov
stos
add
mov
sahf
fnstenv
jnp
jmp
sbb
inc
mov
cmp
ja
jmp
sbb
sub
mov
jae
pop
add
lahf
aas
mov
aam
push
add
add
mov
mov
call
add
add
add
out
mov
add
mov
nop
add
jmp
pop
loop
push
add
add
outs
jo
push
(bad)
clc
jmp
add
jmp
mov
add
mov
pmuludq
add
sahf
jmp
mov
push
add
and
cmp
sub
jae
mov
(bad)
mov
add
jmp
add
sahf
sub
mov
jg
jmp
mov
add
push
stos
cmp
test
or
data16
add
add
es
add
cmps
push
ss
hlt
and
add
jmp
mov
sub
sti
inc
dec
pop
jae
jne
add
jmp
mov
and
push
push
jnp
jbe
imul
movs
dec
add
out
add
jb
imul
adc
xlat
add
push
mov
and
xchg
push
das
xchg
and
jmp
mov
xchg
pop
jmp
adc
test
add
mov
sub
mov
fnstcw
retf
xchg
jmp
mov
mov
xchg
xchg
pop
test
not
aaa
add
nop
push
push
sub
mov
je
jmp
stos
test
add
add
mov
mov
fisttp
test
push
add
fild
sub
pop
and
and
jmp
mov
mov
(bad)
mov
jbe
inc
daa
cmps
fadd
add
add
add
sub
mov
adc
test
mov
jnp
mov
repz
mov
jnp
jo
inc
je
xchg
stos
aaa
add
add
mov
mov
je
add
add
sub
imul
pop
add
add
ins
pop
add
mov
inc
cmp
mov
je
pop
sub
add
xchg
cmp
cmovg
mov
and
add
pop
out
mov
mov
idiv
adc
cli
mov
dec
rcr
pop
pop
add
sahf
ds
pop
add
sub
push
sub
push
idiv
adc
add
add
push
je
rcl
inc
pop
add
add
stos
adc
add
or
add
add
dec
shl
jb
add
jmp
fisubr
mov
mov
push
mov
cmp
(bad)
mov
adc
xlat
add
push
scas
push
add
sbb
fstp
pop
jl
add
mov
in
and
je
out
mov
mov
cmc
out
or
pop
scas
(bad)
(bad)
mov
mov
add
mov
inc
add
xor
inc
and
call
mov
mov
mov
sub
inc
mov
mov
pop
add
sahf
jmp
mov
add
and
arpl
test
stos
add
add
mov
mov
and
nop
add
fisttp
mov
test
inc
add
and
mov
call
mov
in
and
inc
loop
aaa
add
and
add
mov
add
add
out
stc
mov
je
add
sahf
adc
frstor
fld
call
mov
mov
mov
mov
inc
(bad)
mov
adc
mov
jg
sahf
xlat
add
scas
mov
mov
jnp
jmp
jno
mov
std
cmp
stos
add
lahf
setae
mov
jmp
mov
sub
inc
add
add
add
xor
test
add
add
mov
xor
repnz
mov
repz
aam
or
je
(bad)
jmp
arpl
pop
jae
jl
sub
and
jae
and
add
push
add
(bad)
mul
xchg
sahf
add
lock
(bad)
or
ins
jl
es
ss
add
mov
rol
add
fld
lock
movzx
or
xchg
mov
out
mov
add
push
aas
xor
add
sahf
add
mov
mov
outs
or
repz
add
stos
add
mov
ja
mov
xchg
pop
mov
mov
cmp
movaps
add
mov
jnp
xchg
add
add
adc
jmp
mov
setbe
out
(bad)
lock
nop
mov
pop
xor
add
add
ret
mov
sub
add
push
rcl
addr16
and
lock
bound
and
add
mov
add
lgs
mov
lock
add
add
movs
mov
and
add
xor
add
mov
and
add
add
data16
sbb
outs
inc
push
imul
shl
ss
and
call
mov
sahf
mov
ins
mov
add
enter
add
pop
mov
push
mov
pop
mov
ret
or
inc
and
xchg
aaa
out
(bad)
call
mov
mov
adc
add
dec
push
pop
jmp
dec
add
stos
clc
mov
lahf
add
ins
push
add
mov
add
sub
ins
jl
mov
pop
xlat
add
xor
mov
push
add
xchg
and
(bad)
xchg
mov
mov
pop
scas
mov
mov
call
mov
mov
pop
jmp
adc
and
add
xor
mov
ins
jae
add
mov
and
call
mov
and
fidiv
mov
sbb
cmovne
jge
aaa
jbe
add
mov
push
jnp
ret
sub
sub
push
add
add
add
xor
test
add
and
je
add
js
ss
add
and
mov
and
ja
lods
(bad)
call
test
mov
mov
adc
dec
add
sbb
and
mov
mov
mov
mov
and
nop
push
push
mov
mov
daa
add
push
and
out
dec
mov
outs
jo
jge
adc
add
enter
ins
sahf
push
sbb
lods
push
add
je
retf
daa
pop
add
sahf
jmp
mov
fwait
mov
jl
ins
test
mov
adc
jnp
mov
pop
xchg
and
(bad)
arpl
add
add
mov
push
test
add
in
int
dec
inc
aad
sar
add
ror
xor
loop
add
adc
(bad)
mov
jns
add
push
shl
push
add
ins
jae
ds
xchg
add
mov
mov
jmp
pop
(bad)
sub
add
add
add
cmp
in
pop
pop
add
lahf
add
add
push
and
sbb
and
add
add
jo
mov
out
sti
repz
push
xor
in
cmp
add
nop
xchg
ror
add
jle
add
mov
fld
call
les
sahf
add
push
add
add
out
mov
dec
pop
add
jl
pop
rol
push
icebp
dec
(bad)
mov
pop
jmp
add
mov
mov
fwait
fwait
ins
jl
mov
mov
mov
pushf
ss
add
mov
and
nop
add
fisttp
add
outs
push
cmp
ss
add
and
add
aaa
shl
and
stos
aaa
add
mov
ss
add
jg
jbe
mov
test
inc
add
xlat
xchg
out
and
out
xor
loopne
dec
xchg
sub
mov
push
add
(bad)
(bad)
inc
test
pop
lahf
xlat
add
das
add
add
add
gs
xor
icebp
push
jbe
dec
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
retf
(bad)
nop
pop
mov
loope
shl
test
mov
mov
mov
push
add
add
add
js
jmp
sldt
add
inc
and
inc
aam
dec
mov
mov
sub
imul
dec
and
jg
jmp
jmp
pop
sub
xor
je
jmp
icebp
inc
and
sub
mov
pop
(bad)
sbb
js
bound
retf
sub
in
mov
popf
xor
jp
sti
loope
push
mov
sub
xlat
hlt
stos
fs
jmp
mov
dec
js
sub
(bad)
retf
mov
and
cmovle
cs
cwde
add
js
test
sbb
icebp
jp
ds
jmp
cmp
xchg
call
mov
pop
jns
fs
sbb
add
cmp
(bad)
adc
add
pop
add
add
mov
push
dec
xchg
mov
arpl
fs
sbb
adc
jns
(bad)
aad
and
mov
mov
cli
(bad)
daa
add
retf
add
jp
inc
and
sub
mov
test
add
loopne
arpl
cmp
and
sub
mov
and
jg
rol
add
retf
xchg
add
mov
add
sbb
and
js
mov
js
in
adc
addr16
sbb
add
cmp
mov
sub
repz
cmp
cmps
sbb
sti
or
inc
sbb
sub
push
dec
jg
movntq
out
add
add
sbb
add
mov
sub
mov
adc
cwde
js
bound
xor
rcl
pop
inc
xor
add
jmp
mov
sub
mov
paddb
dec
pop
mov
mov
sub
mov
push
setl
das
add
add
inc
mov
cmp
je
xchg
bound
cmp
sub
mov
jmp
add
jmp
(bad)
loop
sbb
adc
movs
loope
mov
cmp
aaa
push
cmc
cmp
add
xchg
fimul
adc
xor
(bad)
or
test
pop
inc
cmp
sbb
mov
mov
or
xor
add
movzx
mov
mov
mov
jg
(bad)
(bad)
fimul
add
daa
inc
cmp
icebp
dec
or
add
mov
mov
and
push
mov
jmp
jmp
add
sbb
pop
add
xor
push
pop
xor
addr16
cmp
(bad)
mov
xor
cmps
loopne
sbb
mov
mov
add
sbb
test
leave
sub
ficomp
mov
xchg
push
mov
daa
add
or
minps
mov
jmp
cdq
inc
and
push
xchg
cmps
das
jmp
jle
and
cmp
add
xor
mov
loopne
xchg
adc
pop
add
es
call
or
cld
sar
or
sar
dec
repz
xor
add
cmp
adc
add
cmp
add
and
mov
sbb
add
add
inc
pop
adc
dec
and
call
pop
and
aaa
mov
mov
sbb
and
pop
mov
or
push
dec
and
jmp
mov
xchg
scas
iret
jmp
mov
mov
sbb
mov
sub
inc
enter
add
add
mov
and
sbb
add
add
mov
inc
mov
add
add
add
mov
ds
pop
add
inc
and
call
mov
add
jp
(bad)
inc
and
mov
adc
or
add
jl
push
add
mov
mov
fiadd
add
mov
mov
mov
and
add
mov
cmp
add
mov
pop
jmp
nop
retf
mov
add
call
(bad)
movs
and
pop
out
and
add
loopne
mov
sti
rcr
or
stos
lea
add
pop
ror
add
mov
mov
mov
add
inc
and
test
daa
loopne
movs
test
add
pop
(bad)
repnz
jl
aas
(bad)
retf
cmp
and
add
xor
in
pop
pop
pop
cmps
ret
or
cmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
bound
test
add
mov
mov
cmp
add
and
mov
(bad)
inc
ins
(bad)
xchg
inc
add
nop
add
and
and
(bad)
push
mov
cmps
jmp
mov
out
add
mov
mov
add
add
jmp
add
adc
add
add
lods
test
loop
add
data16
cmp
into
fadd
add
add
nop
push
dec
xchg
inc
mov
rcl
cld
add
scas
test
loop
and
add
add
je
jo
dec
inc
and
jp
jb
add
pop
mov
ins
(bad)
mov
add
ins
fwait
add
aas
push
fs
bswap
sbb
add
jmp
mov
sub
mov
push
rol
pushf
bound
add
mov
pop
loopne
movs
lods
and
std
into
rol
xchg
and
add
in
test
add
dec
mov
mov
add
into
mov
add
mov
stc
bound
mov
inc
and
je
int
std
(bad)
add
inc
jle
and
test
jmp
inc
or
arpl
int3
(bad)
pop
add
add
bound
add
cmp
add
sub
imul
and
das
retf
clc
add
imul
jp
mov
daa
mov
cmp
and
rdmsr
ret
add
add
sub
jns
mov
inc
and
fstp
mov
and
stc
out
inc
add
daa
add
add
bound
sub
cmp
fnstcw
data16
inc
add
jle
inc
and
mov
enter
inc
ficom
mov
jmp
test
add
mov
jecxz
inc
add
dec
test
add
ficomp
and
mov
dec
mov
jnp
jmp
add
mov
and
inc
and
fstp
mov
push
cld
push
daa
jmp
mov
dec
aam
xchg
fbstp
and
je
add
repz
add
and
add
and
ja
inc
xchg
stc
in
std
test
push
into
js
add
mov
out
mov
mov
mov
sub
add
pop
mov
add
mov
sub
mov
ins
test
add
mov
add
std
sub
test
aad
mov
push
cvtpi2ps
mov
test
mov
add
push
cmp
sub
test
and
add
test
push
or
pop
sbb
sub
test
je
add
fnstcw
and
add
add
enter
je
jmp
mov
mov
test
mov
in
add
lods
add
mov
repnz
mov
inc
and
dec
jg
dec
cwde
icebp
test
add
add
nop
add
add
out
xor
sub
sub
mov
cwde
movs
and
and
scas
add
mov
add
mov
scas
jle
ret
mov
mov
std
movs
(bad)
sub
sub
rcl
mov
xchg
and
imul
and
add
add
adc
daa
push
inc
push
into
add
mov
jno
jne
add
int3
xchg
mov
add
add
add
mov
mov
daa
add
add
mov
mov
dec
push
and
cld
je
mov
inc
arpl
sti
dec
mov
in
add
and
and
retf
mov
jmp
add
push
nop
add
add
jp
add
cmp
add
mov
mov
and
(bad)
scas
imul
push
mov
mov
test
add
mov
jmp
pushf
cdq
pop
add
sub
sbb
jnp
and
mov
mov
cmovs
mov
mov
loopne
ficom
shl
jmp
cdq
stos
(bad)
adc
add
add
cmovl
mov
jmp
mov
(bad)
pop
add
add
add
pop
adc
and
jne
bound
add
je
int
inc
xchg
add
jl
inc
mov
daa
repnz
or
mov
daa
mov
add
inc
push
nop
add
dec
mov
add
add
in
ror
std
sub
(bad)
cmp
mov
nop
add
add
jmp
movs
mov
add
lods
add
(bad)
test
movs
repnz
add
add
and
add
and
dec
es
(bad)
jp
imul
xchg
or
daa
(bad)
(bad)
cwde
add
add
add
jne
test
push
lock
xchg
add
repnz
mov
sbb
sar
test
sbb
add
jno
add
mov
je
and
inc
lods
add
jmp
(bad)
rcl
sbb
push
add
imul
mov
push
sbb
std
sub
repnz
das
inc
ror
(bad)
scas
test
inc
add
add
jp
add
mov
lods
add
mov
add
add
add
and
add
xchg
lods
gs
pop
sbb
ret
pop
dec
cli
cdq
push
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
std
aam
mov
xor
lea
add
add
test
push
mov
add
bound
mov
jmp
xchg
fiadd
fimul
test
pop
add
jge
add
dec
and
sbb
aaa
add
add
test
mov
add
add
mov
add
add
add
add
inc
jns
or
and
or
dec
pusha
rcl
cmp
add
call
mov
mov
lea
mov
jns
add
test
mov
or
add
mov
rol
mov
pop
loop
sbb
test
test
add
into
aaa
add
jb
add
fld
jbe
mov
pop
test
add
jge
mov
add
les
dec
rol
in
sub
inc
add
add
and
add
dec
and
test
or
retf
jmp
add
rol
mov
(bad)
jmp
xchg
add
add
mov
push
xchg
and
scas
add
inc
add
adc
add
mov
jmp
xor
xor
movzx
pop
loop
mov
lahf
and
add
xor
in
shl
sub
(bad)
dec
add
push
mov
xor
sbb
rol
dec
mov
inc
cmps
and
and
and
hlt
shl
mov
iret
call
mov
lds
cs
add
or
jmp
add
add
pop
(bad)
clc
or
(bad)
(bad)
mov
(bad)
repnz
add
add
and
je
add
xchg
jb
push
stos
and
rol
jbe
sbb
add
(bad)
fcos
jmp
and
js
test
(bad)
(bad)
mov
lea
push
mov
add
nop
mov
add
add
cmps
adc
mov
push
je
mov
mov
xchg
jne
(bad)
dec
sbb
mov
lea
inc
add
add
shl
inc
and
pop
add
sub
mov
lea
neg
and
pop
add
(bad)
jmp
mov
xor
or
test
add
dec
add
mov
out
aam
inc
verw
pop
in
or
and
mov
add
push
jb
add
dec
movs
sbb
sbb
mov
(bad)
popa
add
mov
add
add
sbb
cmp
and
add
mov
jmp
add
sub
mov
jno
add
add
add
add
inc
fst
sub
rcl
and
jmp
mov
sub
or
retf
mov
or
add
ret
test
push
add
sub
mov
aas
loop
add
psubw
xchg
add
jmp
mov
test
add
add
add
add
push
sbb
dec
test
add
sub
mov
aas
les
add
fdivr
and
xchg
fucompp
fimul
test
add
inc
mov
(bad)
xor
add
add
xchg
(bad)
push
pop
xchg
xlat
push
loop
mov
(bad)
cs
jmp
mov
jnp
pusha
test
mov
xorps
add
js
add
add
data16
jnp
scas
lock
jnp
add
jg
jmp
mov
sub
mov
je
jmp
push
(bad)
lea
add
xchg
mov
and
aaa
add
(bad)
and
add
mov
mov
(bad)
jl
xor
push
(bad)
lea
add
outs
add
add
and
add
add
jo
daa
cmp
shl
(bad)
mov
add
jmp
mov
jge
sbb
loope
inc
mov
mov
xor
add
jmp
pop
test
jbe
add
mov
add
add
add
add
iret
aaa
add
jmp
and
push
add
jbe
jmp
fiadd
push
(bad)
and
(bad)
data16
mov
popf
jmp
add
jg
pop
add
add
mov
ss
push
inc
clc
mov
je
jmp
mov
test
nop
test
aaa
push
divps
add
jmp
mov
and
add
cs
mov
adc
add
test
(bad)
add
js
pop
in
stc
and
test
push
sub
dec
add
jg
mov
sbb
ror
add
test
pop
add
add
add
aaa
add
add
add
fnsave
mov
sete
shl
jmp
sub
push
shl
inc
mov
je
fisubr
add
mov
sub
xchg
push
je
(bad)
repz
add
add
or
mov
test
mov
je
jmp
mov
jnp
call
or
add
add
or
add
and
or
and
cmovne
add
iret
fiadd
add
add
test
add
sub
mov
adc
popf
je
xchg
xor
or
test
or
mov
jae
or
(bad)
data16
push
jmp
mov
xchg
add
xchg
test
inc
stos
pop
imul
jmp
mov
sub
mov
aas
jbe
stc
push
fcmovu
add
test
mov
add
add
nop
mov
gs
mov
add
jmp
mov
sub
cmps
xchg
push
push
sahf
push
push
add
add
or
mov
sub
mov
int3
mov
push
add
add
mov
jmp
rol
pop
stos
jbe
xchg
mov
je
inc
(bad)
data16
test
push
cmps
pop
nop
mov
xor
pusha
sbb
jmp
std
test
add
xchg
sub
mov
addr16
add
xchg
loopne
aaa
add
mov
(bad)
in
sbb
cmp
xchg
mov
cmp
test
mov
mov
and
jns
jmp
mov
dec
cmp
and
aad
cld
add
add
add
test
ret
jmp
popa
inc
jae
js
test
push
mov
jmp
movs
test
xchg
xchg
fiadd
sub
push
and
je
lock
aaa
push
jmp
or
mov
cmps
mov
std
add
add
add
and
add
or
aaa
(bad)
out
ins
std
push
add
mov
fcmovu
xchg
add
add
dec
and
fistp
and
cmp
sti
xchg
inc
cmp
sbb
push
retf
pop
add
xchg
add
fimul
inc
adc
add
jmp
mov
retf
fstp
dec
fiadd
dec
add
(bad)
shl
add
jmp
add
jbe
xchg
fimul
add
shl
in
add
mov
jae
inc
jl
push
dec
ror
inc
pushf
cmp
cs
pop
add
test
(bad)
js
adc
arpl
add
mov
inc
xchg
jmp
pop
aaa
push
mov
pop
rcl
mov
sub
ds
(bad)
mov
mov
cmp
paddusw
push
mov
sub
test
add
mov
xor
fst
add
cdq
add
mov
cdq
movs
jne
push
pushf
(bad)
dec
mov
mov
add
cmp
add
add
cmp
jmp
mov
mov
mov
adc
data16
inc
test
xor
sbb
test
add
push
fst
call
fcmovu
or
and
(bad)
inc
lea
pop
aaa
add
rcr
and
pop
bound
movs
mov
pop
shl
xchg
and
pop
add
mov
mov
(bad)
mov
mov
and
mov
loop
popa
jmp
repnz
mov
stc
jmp
adc
jl
inc
add
jl
inc
add
add
ins
inc
retf
aas
add
jbe
jmp
mov
(bad)
xchg
test
add
inc
or
mov
add
add
add
mov
inc
pop
mov
mov
lea
sbb
jl
inc
add
lea
cmc
cmps
(bad)
(bad)
cmp
inc
adc
mov
mov
aad
adc
aas
es
and
add
mov
sub
add
data16
cmp
dec
cmp
mov
mov
mov
mov
and
adc
(bad)
(bad)
mov
mov
xor
add
xchg
(bad)
fmul
add
mov
and
push
inc
inc
or
push
and
xor
lods
test
add
and
add
jo
jnp
push
inc
push
retf
fld
add
add
or
add
jmp
mov
mov
jecxz
and
add
jbe
add
fimul
lahf
ror
(bad)
add
mov
xor
test
pushf
ins
add
mov
mov
and
aam
add
add
call
push
pop
(bad)
daa
add
imul
test
enter
dec
rol
xchg
xor
add
aas
outs
sub
lahf
cld
fiadd
fidiv
cmp
dec
mov
add
add
add
rol
jb
add
xchg
push
test
xchg
scas
(bad)
mov
ins
movs
mov
cmp
bound
retf
mov
jae
and
pop
sbb
(bad)
jmp
mov
and
add
add
sub
loop
pop
data16
push
push
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
add
pop
pop
ret
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
lea
lea
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
lea
mov
call
lea
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
sub
add
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
movzx
mov
mov
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
sub
sub
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
push
mov
push
push
push
and
mov
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
test
push
call
cmp
push
add
call
add
fild
xchg
loope
add
mov
lahf
enter
sub
add
push
(bad)
lea
gs
loopne
mov
add
add
in
pop
pushf
add
xchg
lea
add
test
push
push
pop
add
add
test
or
add
lock
add
and
push
aas
int3
add
mov
repz
gs
cli
test
push
pop
push
cwde
pop
gs
test
xchg
add
add
and
push
add
pop
add
add
cmp
push
add
add
jns
push
mov
test
push
pop
push
cwde
pop
add
add
fs
repnz
imul
inc
add
push
mov
add
fiadd
(bad)
sbb
adc
add
mov
mov
and
push
int3
mov
push
push
test
push
add
mov
and
push
push
add
sbb
in
push
add
lock
dec
cmp
push
add
test
nop
push
add
mov
in
xchg
push
add
fs
push
add
(bad)
mov
pushf
or
xchg
test
pop
mov
aas
int3
sub
inc
add
push
mov
call
mov
mov
call
pop
adc
in
or
add
adc
add
cmps
add
and
ds
mov
adc
and
push
gs
add
sar
mov
adc
(bad)
jnp
test
cmps
add
shl
add
das
iret
add
mov
test
add
sub
mov
lock
mov
sar
jns
call
sbb
imul
(bad)
add
lea
jp
add
sbb
xor
and
add
add
add
add
add
in
test
add
add
(bad)
stc
add
pop
push
adc
jmp
mov
wrmsr
arpl
add
add
add
mov
test
add
add
add
add
pop
mov
cmps
add
sub
mov
and
add
add
(bad)
dec
jge
add
scas
leave
add
test
inc
add
add
mov
and
add
add
gs
fld
and
add
jbe
sub
and
add
ins
add
jmp
mov
cmp
add
mov
inc
clc
add
add
fld
add
dec
loopne
pop
add
jns
sub
mov
out
(bad)
or
add
add
add
das
mov
pminsw
repz
add
mov
les
add
sub
mov
mov
add
test
inc
add
movs
push
in
je
call
dec
(bad)
add
mov
sub
mov
and
add
add
add
and
add
push
sub
jns
jb
add
cmps
out
(bad)
lock
add
mov
and
mov
test
mov
(bad)
mov
add
jmp
adc
inc
aam
les
sub
rol
mov
adc
add
add
test
adc
add
push
cmp
iret
push
add
dec
loopne
pop
add
mov
test
(bad)
and
add
test
test
push
add
mov
(bad)
sbb
int3
add
pcmpeqb
xchg
add
and
add
mov
xchg
mov
cmps
pop
add
jmp
mov
sub
mov
and
add
pop
int3
mov
add
add
sub
mov
push
xchg
rol
lock
sub
mov
sub
mov
mov
sub
stos
loopne
mov
stos
and
cwde
pop
dec
ins
aaa
pushf
lods
dec
and
pop
add
cmovae
add
add
mov
and
fs
les
add
push
nop
ins
data16
mov
lds
add
mov
and
aas
add
mov
pop
add
add
push
test
jge
retf
or
add
or
push
jmp
sar
add
inc
test
add
(bad)
and
gs
add
push
add
mov
sub
fild
movs
add
push
add
jmp
inc
test
mov
repnz
mov
cmps
outs
inc
add
cmp
push
adc
fstp
les
mov
add
nop
rol
add
add
test
fidiv
add
(bad)
and
add
lock
int
test
and
mov
jbe
add
jmp
mov
sub
imul
add
test
add
jno
pop
add
and
add
jmp
mov
and
add
je
mov
mov
add
mov
out
ffreep
pop
add
push
pop
push
add
loopne
out
aaa
mov
test
psraw
add
mov
add
dec
pusha
inc
mov
sub
push
pop
jmp
out
test
and
add
jnp
(bad)
addr16
imul
dec
pop
mov
scas
leave
mov
and
test
add
es
enter
js
test
add
add
add
cwde
pop
dec
into
leave
outs
dec
mov
jmp
mov
inc
scas
push
cmc
outs
and
push
icebp
push
pop
out
jp
pop
add
test
push
les
mov
fwait
mov
imul
cld
jge
add
pop
add
mov
sub
in
jns
push
push
add
pop
lock
sub
cs
les
xor
sub
jns
mov
sub
inc
inc
inc
pusha
cmps
test
loope
gs
adc
sub
movs
and
je
and
mov
dec
clc
jbe
lds
fiadd
push
sub
mov
call
inc
std
outs
dec
dec
es
and
mov
add
mov
sub
out
inc
push
mov
and
pop
test
add
add
add
mov
jns
repz
push
mov
and
push
and
test
add
out
mov
(bad)
sub
inc
pop
mov
inc
mov
cmps
loopne
push
add
add
push
fs
in
les
imul
add
lea
dec
add
sub
inc
jb
retf
test
add
add
fwait
pop
imul
xchg
jne
in
and
pcmpgtb
add
sbb
test
icebp
push
les
mov
je
jmp
jmp
jno
das
adc
mov
mov
add
lahf
lock
test
call
mov
add
test
loopne
dec
shr
cmp
add
mov
stos
mov
mov
lock
add
inc
or
les
mov
int3
mov
(bad)
jg
in
adc
jp
cs
xchg
test
or
cmp
js
push
add
add
jns
add
(bad)
dec
inc
cmp
jge
out
icebp
pop
add
mov
add
les
loopne
mov
jns
out
push
ins
movzx
mov
mov
mov
(bad)
mov
loopne
cmp
pop
add
add
lock
pop
popa
fwait
(bad)
jnp
jp
les
jns
cmp
test
(bad)
and
pop
cwde
pop
mov
add
add
test
add
add
loope
shr
cmp
int3
xor
dec
xchg
push
add
es
call
mov
add
push
cwde
xlat
add
(bad)
int
(bad)
dec
add
dec
xor
pushf
push
aas
add
pop
or
add
add
add
add
add
(bad)
lods
and
adc
jns
and
mov
sub
(bad)
(bad)
jmp
ins
jg
cdq
add
inc
add
mov
dec
push
scas
add
test
test
add
fiadd
push
loopne
js
mov
fisttp
loopne
add
jo
inc
cmps
(bad)
cmp
add
add
test
and
jmp
mov
sbb
pop
aas
add
mov
mov
add
inc
xor
add
mov
in
add
push
mov
adc
inc
inc
add
cmps
imul
aas
int3
add
std
jno
add
scas
inc
or
daa
adc
test
push
add
pop
call
sub
mov
mov
int
push
les
mov
add
int3
push
sahf
jp
add
test
add
dec
add
add
push
pop
mov
gs
push
dec
inc
add
push
and
mov
pop
mov
call
loope
es
mov
and
(bad)
jp
inc
pop
mov
dec
fmul
lds
(bad)
data16
int3
add
mov
or
add
add
push
rcr
shr
add
pop
fsub
gs
cmp
cmps
inc
and
add
cwde
cdq
loope
cmp
add
cs
add
mov
jns
test
add
add
mov
dec
inc
add
add
(bad)
rcr
pusha
push
add
push
inc
or
gs
les
pop
add
sar
adc
add
mov
jae
ss
fdivr
out
and
mov
and
add
cwde
mov
add
(bad)
shl
add
cmps
dec
loope
call
add
and
sar
loope
push
adc
(bad)
xchg
jp
and
add
push
les
pushf
add
mov
mov
inc
test
sub
add
add
gs
retf
sbb
push
add
add
add
fisub
fs
dec
add
dec
jmp
aas
add
dec
and
add
hlt
jmp
adc
add
add
add
add
fdiv
sub
add
mov
add
sub
and
push
add
mov
mov
xor
mov
mov
pop
mov
mov
or
jmp
inc
sub
int3
mov
add
test
pushf
add
in
call
mov
push
pop
push
add
add
add
js
jmp
mov
repnz
cmp
and
push
add
sub
cmps
mov
and
push
cwde
pop
mov
add
sub
add
aas
mov
shl
icebp
mov
gs
inc
(bad)
adc
sbb
push
add
sub
and
push
pop
aas
mov
mov
scas
mov
mov
ffree
jbe
dec
dec
sub
inc
es
and
push
add
add
add
jns
inc
imul
add
or
inc
add
inc
lea
add
mov
push
or
mov
and
lds
dec
mov
push
test
xor
add
cmp
or
lahf
mov
jmp
mov
dec
sub
test
aas
add
shr
in
add
sub
add
mov
retf
and
jno
add
gs
mov
sbb
add
add
lock
and
and
add
add
dec
dec
inc
add
mov
leave
push
mov
rol
mov
add
cmp
dec
mov
add
repnz
push
push
pop
cmp
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
call
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
mov
call
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
popf
or
nop
jge
mov
jmp
add
mov
and
adc
pop
push
lock
xor
mov
mov
movs
dec
inc
dec
add
sbb
xor
push
jg
add
add
(bad)
cmp
or
add
lods
cmps
and
fld
add
and
xchg
pop
cs
cli
mov
inc
add
or
mov
jb
cmp
jmp
fiadd
jl
xor
call
and
jno
add
xchg
dec
add
xchg
popa
aas
or
push
jg
(bad)
cmp
outs
add
add
fld
pop
sbb
cs
call
mov
lea
mov
jbe
pop
add
add
test
xor
add
dec
xor
hlt
jnp
pop
add
ja
sub
cmp
inc
sbb
pop
add
pop
xlat
(bad)
movs
scas
mov
adc
rol
inc
sub
jg
mov
add
add
lods
add
pop
repz
test
je
xchg
pop
je
mov
adc
and
fild
add
xchg
jmp
add
xchg
push
(bad)
and
add
sahf
add
and
xor
outs
xchg
xchg
lods
test
pushf
add
add
sahf
fld
add
jmp
mov
sub
rol
(bad)
cmp
add
jmp
mov
sub
mov
je
jmp
pop
test
lods
pop
jae
push
add
add
xchg
and
add
add
sub
or
ins
mov
add
adc
jmp
mov
jbe
xchg
pop
lods
mov
xchg
fld
add
pop
add
and
sbb
add
add
cdq
mov
add
repz
and
jmp
pop
adc
pop
cs
inc
xor
or
cwde
and
xor
and
pop
fisub
add
mov
sub
shr
jl
test
cmps
dec
add
add
lods
call
push
test
test
add
add
fisttp
pop
cs
addr16
mov
je
lahf
add
pop
fild
mov
push
imul
inc
fwait
pop
inc
and
cwde
test
mov
and
add
add
mov
and
psubb
and
jmp
mov
add
mov
and
lods
int3
jae
sbb
jae
push
add
mov
fidivr
add
out
imul
dec
add
test
add
pop
fistp
mov
mov
sub
add
mov
mov
inc
xor
call
and
scas
test
inc
sbb
pop
xchg
add
add
stos
push
in
rol
sub
(bad)
mov
enter
faddp
in
int
add
add
in
pop
inc
mov
(bad)
fild
dec
scas
or
(bad)
dec
jmp
add
(bad)
call
add
and
rcl
and
add
and
mov
push
call
push
pop
call
adc
add
das
xchg
xor
mov
add
add
dec
and
add
add
rcr
push
or
je
or
pop
and
fst
imul
xchg
xchg
cmp
add
call
ds
in
and
add
mov
sub
jl
add
jns
xchg
(bad)
cmc
fs
call
mov
rcl
add
ja
or
add
add
or
adc
add
push
and
mov
aaa
dec
ja
dec
xor
(bad)
enter
add
add
add
xor
cmps
mov
mov
xor
dec
mov
int3
sbb
jl
add
ds
je
fmul
es
lea
fsubr
add
add
cli
xchg
and
mov
mov
mov
mov
mov
and
rcl
and
mov
cdq
cmp
(bad)
call
jge
cs
and
push
sub
xor
mov
mov
mov
movs
fadd
mov
xor
emms
fimul
jl
jmp
mov
fld
shr
pop
push
add
cli
adc
add
and
add
fistp
sub
add
pushf
mov
call
mov
sbb
add
lea
xchg
xor
mov
(bad)
fwait
and
add
and
dec
and
pop
ret
jge
call
mov
call
lea
mov
add
sub
xor
mov
aam
add
imul
ja
push
and
add
mov
(bad)
and
add
jl
add
sbb
inc
add
add
push
push
and
xlat
add
cwde
ja
test
mov
call
fistp
add
xor
xchg
and
rcl
add
mov
mov
xchg
adc
rep
imul
call
xchg
add
and
add
pop
cs
add
cwde
add
sbb
cmp
jl
pop
mov
and
fisttp
and
mov
call
cwde
add
and
xchg
mov
push
add
call
test
rcr
call
sti
add
push
and
mov
or
inc
and
call
lea
int
arpl
sub
mov
adc
inc
add
pop
add
add
sub
add
mov
push
push
and
mov
and
mov
ins
add
inc
cmp
fiadd
add
dec
pop
call
nop
and
jae
add
and
mov
outs
call
cmp
in
jno
inc
mov
pop
mov
and
sbb
cmovne
pop
mov
pop
add
jmp
fs
and
xor
push
jmp
(bad)
movs
and
add
add
sub
rol
mov
sub
add
xor
fild
test
add
mov
and
sbb
add
pop
adc
jno
add
add
mov
mov
add
and
mov
call
mov
mov
sbb
xchg
add
add
(bad)
repz
add
add
ret
sbb
sub
and
bndstx
daa
cmp
add
pop
pop
ret
jmp
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fadd
mov
push
sti
repz
and
pop
mov
add
add
cmp
add
mov
sub
sub
add
imul
test
cmp
icebp
pop
mov
push
inc
and
mov
(bad)
inc
mov
and
add
(bad)
(bad)
add
push
add
add
out
sbb
sub
mov
ror
pusha
add
add
mov
push
test
mov
enter
add
jmp
(bad)
loopne
sub
mov
(bad)
dec
add
sbb
fild
add
mov
xlat
inc
test
dec
repnz
pop
add
push
cmc
pop
movs
add
inc
and
imul
hlt
mov
mov
add
add
add
and
fisub
xor
ins
clc
aas
and
gs
jmp
mov
adc
mov
cmp
pop
jnp
add
xor
pop
mov
push
mov
and
(bad)
dec
add
add
add
pop
mov
sub
imul
sub
popa
arpl
jge
add
adc
mov
push
add
xor
add
pop
add
dec
add
inc
into
jp
(bad)
jb
add
jl
add
dec
xchg
and
xor
and
sub
and
sub
cmp
test
lea
ror
idiv
(bad)
icebp
dec
(bad)
ins
mov
mov
mov
mov
dec
fcom
jmp
mov
and
or
stc
jl
mov
(bad)
(bad)
jmp
call
jl
and
add
fucompp
mov
add
add
pop
dec
sbb
mov
ja
and
mov
add
sub
int3
sub
mov
mov
mov
cmps
push
pop
or
sub
mov
sub
call
stos
mov
lds
mov
adc
add
cmp
pop
test
in
mov
idiv
ins
inc
sub
and
push
sbb
imul
push
add
(bad)
sbb
add
sbb
sub
add
jp
cmps
and
mov
mov
push
sub
jne
and
push
dec
fisttp
lock
dec
inc
push
pop
adc
mov
movzx
and
mov
and
aam
sbb
bound
or
add
adc
mov
mov
xlat
dec
and
lods
adc
add
dec
sbb
jge
jmp
add
jle
call
and
fadd
cmp
xor
xchg
xor
mov
and
(bad)
jmp
pop
ret
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jg
or
or
push
add
arpl
mov
mov
mov
push
add
add
inc
adc
mov
mov
ins
mov
call
mov
and
mov
cmc
test
add
inc
dec
jo
dec
jle
mov
mov
add
jbe
mov
jge
and
jno
xor
(bad)
ins
mov
add
add
mov
cs
call
sbb
add
arpl
sti
add
push
mov
and
ficom
mov
mov
dec
scas
clc
loop
and
and
std
add
add
inc
inc
and
sub
mov
push
mov
add
add
mov
or
mov
dec
das
and
jmp
inc
call
pop
mov
icebp
mov
pop
add
arpl
inc
inc
add
xchg
jmp
push
mov
dec
daa
pop
jge
test
std
add
leave
fimul
mov
inc
and
mov
dec
add
jmp
outs
inc
and
sub
mov
ins
test
add
test
jo
mov
inc
inc
and
je
jmp
lock
jle
sub
ja
shl
pop
add
adc
arpl
inc
add
std
push
mov
xor
jmp
add
add
mov
xchg
xchg
jp
push
jmp
add
(bad)
jmp
pop
das
and
dec
xor
xchg
inc
shl
shl
jp
pop
push
xor
add
sub
ins
inc
and
or
shr
sbb
add
test
jp
mov
and
add
adc
jmp
mov
inc
test
jle
mov
add
add
ins
inc
shl
jb
and
add
lods
sub
adc
cli
add
hlt
lea
mov
sbb
inc
add
mov
mov
call
inc
in
mov
pop
dec
dec
je
inc
mov
mov
mov
mov
add
push
pushf
lock
jnp
add
inc
dec
mov
mov
add
inc
and
xchg
mov
imul
mov
repnz
xor
cmp
and
arpl
inc
in
inc
retf
dec
jo
enter
mov
jmp
mov
jecxz
jecxz
in
pop
and
add
add
inc
ror
add
(bad)
mov
leave
and
mov
mov
jl
call
pop
sbb
mov
xor
sbb
add
cmp
and
mov
pushf
fdivr
dec
imul
cwde
mov
xor
dec
and
pop
js
pop
add
add
or
ret
fmul
add
and
loope
jmp
push
inc
and
mov
mov
arpl
sbb
xchg
xchg
pop
pop
movs
sbb
jmp
cld
(bad)
jmp
pushf
fwait
loopne
shl
cmc
fstp
or
outs
cmc
ja
xchg
dec
int3
dec
or
cmp
dec
add
(bad)
fadd
pop
arpl
inc
lahf
nop
jmp
xor
pop
mov
jg
push
and
add
nop
es
inc
mov
into
(bad)
mov
movs
data16
enter
mov
dec
or
stc
mov
(bad)
inc
mov
jo
mov
(bad)
sub
push
retf
(bad)
pushf
sub
popa
movsx
xlat
dec
test
mov
popa
das
imul
jl
in
dec
dec
nop
mov
xchg
sub
enter
in
and
xor
std
or
mov
cli
leave
xchg
(bad)
das
cmp
add
pushf
jmp
xor
ret
rcr
xchg
call
cdq
sti
scas
pushf
xchg
(bad)
std
call
(bad)
sbb
fstp
or
pop
cmp
(bad)
out
cdq
fcom
push
fs
jbe
mov
mov
pop
push
fs
out
pusha
adc
mov
ret
add
jno
cmps
stos
pop
add
xor
int
lds
cmp
call
push
pop
xor
dec
aad
and
aas
xchg
add
cs
inc
adc
out
and
call
fbstp
mov
imul
ret
mov
lds
jp
fs
cmp
add
push
xchg
aaa
dec
cmp
sbb
movs
mov
fsub
pop
push
push
push
mov
adc
loop
and
add
add
sbb
sahf
dec
push
cmps
mov
jl
mov
std
lock
jp
js
sub
mov
fld
fst
sub
or
loop
out
inc
out
mov
mov
mov
aaa
(bad)
jno
in
add
push
frstor
jmp
fwait
and
jecxz
xchg
fnsave
(bad)
hlt
iret
mov
lahf
lock
lods
xchg
sub
fld
sub
or
or
bnd
mov
mov
mov
enter
push
xchg
enter
dec
sbb
add
cmp
sub
adc
mov
jl
fdecstp
pop
dec
cdq
dec
adc
call
dec
punpckhwd
dec
inc
adc
inc
jnp
mov
mov
push
or
inc
mov
stc
and
sub
xor
inc
out
lahf
pop
inc
mov
(bad)
mov
lock
das
jae
sbb
jp
push
in
(bad)
cmc
je
imul
push
and
outs
outs
or
pop
retf
hlt
xchg
cmp
cld
push
inc
mov
mov
mov
mov
xlat
out
add
jbe
(bad)
mov
sub
jl
sbb
xor
dec
xor
adc
jge
pop
test
retf
test
aad
leave
inc
xchg
not
inc
mov
cwd
js
jmp
call
(bad)
aas
in
pop
adc
xchg
retf
mov
mov
std
xchg
mov
jb
test
out
mov
imul
mov
xor
xor
push
jle
jae
add
iret
stos
(bad)
rol
xor
cmp
out
sbb
pop
in
lods
cmp
clc
cmps
scas
sub
lock
sahf
sahf
sub
xchg
xchg
xchg
iret
sbb
mul
les
cld
pop
jo
pop
mov
popa
pop
mov
mov
and
adc
xor
mov
popa
pop
in
lea
mov
(bad)
ins
(bad)
xor
add
sbb
test
dec
pop
cwde
jae
(bad)
pop
lds
in
scas
and
scas
neg
push
mov
xchg
xchg
and
sbb
mov
lods
adc
xor
xchg
jae
out
mov
jmp
sbb
pop
push
daa
lahf
je
fwait
mov
retf
pop
fistp
xchg
add
std
push
sbb
xor
or
jge
dec
mov
ss
sub
xor
cmps
outs
and
hlt
mov
cwde
jno
cdq
(bad)
xlat
jg
and
loope
xchg
nop
outs
jbe
mov
loop
sub
popa
pop
xchg
(bad)
mov
nop
daa
ret
nop
data16
mov
jne
test
adc
imul
xor
js
shl
loopne
push
pop
ins
(bad)
test
dec
mov
mov
add
ret
jmp
test
ffreep
mov
int
inc
es
inc
lods
dec
push
loopne
ret
adc
xor
mov
sbb
or
aaa
push
sub
mov
lea
mov
add
add
sbb
les
dec
and
shl
mov
mov
(bad)
pusha
test
xchg
jecxz
call
ss
loopne
stos
fcomp
gs
cli
aad
and
xor
push
mov
int
int3
jmp
mov
xor
or
or
mov
cmp
xor
mov
shl
push
inc
mov
or
es
test
je
lea
jmp
ds
pushf
add
in
fdiv
mov
cmc
sbb
or
in
popa
je
aam
mov
adc
fs
fidivr
inc
mov
xchg
dec
inc
pop
test
(bad)
mov
xor
fisttp
stos
jmp
mov
mov
dec
jp
shl
inc
stc
les
mov
add
int
mov
push
push
loope
sub
add
int3
pusha
(bad)
(bad)
push
inc
add
mov
sbb
push
mov
es
neg
pop
jmp
sbb
loop
add
adc
pop
icebp
nop
fstp
ficomp
push
aam
ja
lods
popa
outs
iret
stc
xchg
cmp
test
data16
in
jecxz
ins
mov
xchg
aam
(bad)
xor
mov
xor
lods
rcr
or
adc
cmp
or
in
adc
retf
enter
add
lods
popf
clc
mov
pop
add
inc
mov
mov
jmp
add
mov
movs
lds
leave
xchg
daa
stc
mov
xor
push
stos
adc
data16
movs
mov
cmps
rcr
xlat
push
loopne
mov
or
xchg
mov
outs
sbb
and
test
mov
jge
aaa
sub
cmp
dec
dec
dec
mov
popa
int
xchg
ins
sub
data16
push
xor
js
jno
sbb
imul
inc
push
cli
or
or
sahf
add
jnp
adc
cmc
push
sub
inc
dec
shr
xlat
add
stos
xor
test
(bad)
inc
ror
(bad)
retf
iret
mov
sub
cdq
mov
adc
or
cmc
push
xor
out
test
scas
clc
xor
xchg
int
sub
mov
jle
mov
xchg
repnz
into
pop
mov
out
inc
xchg
fild
sub
xor
sub
add
jno
stos
sti
jge
push
xor
test
jns
pop
and
hlt
sub
icebp
das
dec
sti
xor
cmp
outs
mov
int3
xchg
inc
pushw
pop
inc
(bad)
lods
leave
xchg
or
outs
pop
ss
sbb
jge
jg
xchg
sti
popa
sub
or
xor
jle
mov
jae
int3
popa
cmps
fcmove
test
mov
call
dec
scas
xchg
(bad)
sub
push
test
xor
mov
mov
xchg
push
and
mov
iret
or
jne
xor
xor
jnp
push
imul
iret
mov
(bad)
sbb
jge
fcomp
lods
(bad)
fist
dec
lods
stos
mov
mov
retf
sbb
mov
push
sti
mov
jmp
jne
retf
movs
aad
mov
bound
fdiv
dec
aad
call
cmp
xchg
dec
rcl
loopne
(bad)
push
inc
test
cli
pushf
pop
adc
push
xor
pop
xchg
mov
sub
or
mov
inc
sbb
jg
push
jo
inc
popf
mov
add
dec
mov
cmps
daa
add
mov
xchg
or
rcl
mov
mov
cld
pop
movs
and
sbb
add
fadd
push
inc
shr
adc
xor
stc
cdq
xchg
jge
or
scas
ins
pushf
icebp
xchg
xchg
sbb
cli
and
sub
popf
or
mov
cmp
mov
and
mov
cmp
push
xchg
aaa
rol
fs
mov
mov
add
stc
pusha
in
int
gs
test
or
xchg
jle
inc
call
shr
shl
cmps
scas
and
out
xor
sub
lahf
outs
mov
xchg
call
je
ficomp
inc
jno
popa
cmps
arpl
xchg
adc
mov
pop
movs
and
cli
mov
or
repz
jmp
dec
adc
and
inc
jno
cmp
fdiv
adc
jge
inc
jnp
sbb
xchg
or
bound
movs
imul
push
sub
mov
inc
mov
icebp
addr16
cmp
sub
mov
mov
cdq
fcomip
jno
int
inc
or
in
test
ror
xchg
pushf
xor
fstp
cld
fcom
pushf
push
test
mov
or
xchg
xchg
fs
call
jne
idiv
les
xchg
out
add
lock
sub
rcr
cdq
mov
mov
push
cdq
cmp
test
fdiv
sbb
rcl
push
dec
adc
adc
xchg
and
mov
add
pop
mov
push
imul
shr
sbb
setne
push
pop
fdivp
es
imul
inc
out
adc
in
sahf
icebp
adc
cmps
jmp
adc
adc
and
int
stos
aas
dec
lods
mov
jnp
cli
dec
clc
cmp
adc
mov
jg
addr16
push
mov
push
sar
xor
stos
cwde
cmc
add
cmp
test
mov
es
jg
jne
xlat
and
cmps
push
xchg
aas
pop
push
fdiv
nop
(bad)
into
fs
out
fild
adc
inc
or
imul
mov
repz
gs
cld
push
pushf
xlat
loop
ror
pop
mov
popa
or
dec
fs
lea
ds
and
push
xor
mov
dec
pushf
cdq
movs
inc
btr
shl
fwait
add
xor
mov
retf
mul
(bad)
mov
lock
movs
test
push
fs
adc
out
cmp
cmps
das
jae
pop
les
fs
(bad)
addr16
sbb
and
(bad)
mov
push
adc
loopne
cwde
push
adc
and
dec
js
xor
jp
test
adc
jle
dec
sbb
into
clc
shrd
into
fdiv
pop
addr16
pushf
outs
hlt
ror
not
sar
cmp
cmp
call
fsubr
(bad)
mov
xor
les
sbb
inc
jb
mov
pop
and
inc
or
scas
std
xchg
call
(bad)
imul
call
mov
push
sub
rol
shl
fidivr
pop
jo
xor
cs
in
fninit
mov
das
imul
adc
inc
and
call
and
(bad)
std
sub
or
stos
aam
sar
out
mov
ins
mov
mov
mov
push
mov
mov
nop
aad
mov
fsubr
scas
aaa
push
and
sbb
xchg
aaa
lea
iret
cdq
jno
out
clc
addr16
rcl
clc
inc
fs
aam
mov
lahf
sub
jnp
out
mov
xchg
call
push
mov
ret
nop
test
into
popf
mov
and
outs
dec
movs
cs
xchg
sub
pop
mov
sub
mov
jnp
push
push
out
mov
ja
sahf
jp
sahf
in
das
pop
in
mov
adc
jl
jno
leave
enter
xchg
sahf
stc
retf
ja
push
pop
add
rol
mov
loopne
mov
mov
(bad)
in
xor
in
mov
sub
jne
ret
fld
fsub
arpl
cld
mov
xor
inc
in
jne
xchg
fmul
xor
sub
cli
loope
push
jo
mov
lods
mov
fistp
xor
pop
jns
into
(bad)
(bad)
cli
adc
and
call
into
jo
jmp
scas
xor
jmp
jmp
sub
outs
mov
lahf
sbb
(bad)
(bad)
retf
cs
or
lock
or
outs
cdq
add
ins
mov
inc
inc
lock
or
jl
push
cmp
mov
pushf
shl
clts
pop
stos
xchg
jnp
push
sub
cmp
xchg
mov
sub
sbb
sbb
inc
and
loope
lahf
push
inc
in
add
fwait
aad
cmp
adc
fild
cwde
mov
adc
in
inc
aam
scas
sbb
into
push
or
ret
iret
mov
gs
jne
arpl
rcr
lahf
cli
lock
mov
out
sar
xor
or
out
mov
xor
sub
pop
mov
in
sbb
stos
or
mov
xor
jbe
jns
sbb
lahf
scas
imul
test
jae
enter
pop
int3
xchg
aam
add
int
sbb
sbb
lods
mov
push
not
add
add
pop
xchg
and
ret
pusha
aad
sbb
cdq
fldcw
mov
jae
fadd
adc
mov
sub
adc
and
out
cwde
add
test
(bad)
cmps
sahf
mov
lods
test
imul
xchg
js
sbb
push
cwde
mov
mov
inc
out
jl
loopne
add
out
inc
xchg
and
mov
xor
pushw
lds
shr
(bad)
lock
fdiv
inc
sar
sub
jmp
push
jb
cwde
mov
rcl
pop
pop
dec
movs
jecxz
push
jle
sub
stc
mov
sbb
cld
ret
jg
adc
jl
xchg
jl
ret
mov
aam
sub
xor
jno
mov
xchg
cmc
fidiv
ds
call
push
sbb
sbb
mov
sar
dec
sar
pop
push
mov
sbb
pop
imul
ins
shr
inc
xchg
xchg
out
mov
fist
adc
xor
mov
cwde
nop
xor
adc
mov
mov
mov
sub
mov
bound
mov
lods
iret
xchg
cmps
push
sahf
mov
inc
pop
enter
das
dec
push
in
fs
in
or
mov
cld
inc
cwde
pop
sub
mov
push
or
jmp
pushf
add
mov
sub
mov
mov
inc
int3
mov
in
es
lds
mov
mov
out
add
aas
fstp
xor
cmp
and
cs
ins
repnz
xchg
popa
mov
pop
psubsb
jb
mov
jns
push
or
in
xchg
jae
ror
cmp
aad
push
fdivrp
in
mov
sbb
leave
(bad)
lahf
pop
xchg
push
mov
in
xchg
les
sub
cmp
jecxz
jmp
loopne
mov
adc
test
fs
dec
inc
inc
dec
inc
push
inc
xchg
imul
aad
test
loopne
lea
mov
das
push
sub
sbb
add
popf
int
test
add
leave
jno
and
mov
pop
xchg
lahf
mov
add
jp
jg
leave
cmps
xchg
push
and
addr16
push
xlat
call
popf
sub
cmp
mov
cmps
aaa
inc
retf
and
scas
call
cmc
hlt
mov
push
inc
mov
(bad)
sub
xchg
adc
loopne
adc
ficom
es
jno
add
sub
add
ret
sti
inc
and
aas
sti
jnp
sub
sbb
jne
call
dec
mov
fs
(bad)
retf
cmp
aad
enter
stos
add
sub
or
retf
mov
xchg
cmc
std
in
pop
push
jbe
xchg
pop
or
shl
mov
and
sub
aad
adc
xor
fidiv
test
ss
(bad)
movs
enter
add
leave
mov
stc
fnstcw
pop
pop
pop
lock
popa
fucomi
mov
ins
mov
jmp
dec
adc
loopne
xchg
mov
dec
pop
mov
or
sub
jge
xchg
movs
mov
mov
adc
xchg
fwait
cmc
dec
mov
xor
test
test
and
adc
repz
dec
mov
jle
std
pop
push
adc
in
ror
xor
mov
in
dec
in
dec
in
mov
jnp
jg
sbb
sbb
adc
rcr
inc
push
mov
or
mov
inc
pop
sbb
sbb
mov
cmp
test
xor
xchg
push
ficom
xor
inc
pusha
mov
into
cmp
test
loop
sahf
mov
mov
hlt
and
ins
pop
mov
push
in
jp
inc
inc
stos
push
enter
mov
add
addr16
push
and
pop
shl
cmp
mov
jmp
adc
jnp
je
jnp
sub
jb
scas
and
aas
sahf
jnp
xor
arpl
sub
movs
inc
pop
sbb
mov
mov
push
mov
popa
sahf
cld
push
adc
shl
mov
jnp
dec
lds
cld
sub
stc
sub
or
outs
xor
jmp
pop
lods
sbb
adc
pop
outs
mov
adc
push
add
xchg
popa
int3
test
sbb
add
scas
repz
inc
fld
jbe
cmp
or
sbb
(bad)
int
xchg
dec
pop
cdq
in
sbb
aaa
je
arpl
mov
lods
adc
dec
loope
and
sub
sbb
sbb
or
scas
add
call
sti
xor
in
dec
jnp
sbb
ins
push
xor
xor
jo
adc
sbb
cmp
mov
add
or
dec
adc
imul
fdiv
push
mov
jbe
jbe
sbb
aam
fwait
xor
xor
xor
scas
and
add
add
mov
cdq
(bad)
mov
cmp
das
gs
test
sbb
retf
mov
movs
bts
lods
adc
sbb
jg
js
xor
adc
pop
inc
jp
ror
sub
pop
jmp
add
stos
popw
gs
add
add
jbe
add
sub
push
push
imul
adc
or
fadd
xor
cwde
fidiv
xchg
aas
dec
push
call
aas
cmc
das
mov
mov
push
inc
cmc
cld
push
mov
es
adc
jo
and
sbb
push
fwait
jb
mov
add
mov
inc
sub
test
cld
cld
in
std
or
dec
mov
dec
dec
inc
dec
test
adc
inc
pop
ficomp
cmps
adc
nop
test
daa
push
mov
call
jo
mov
mov
adc
push
inc
imul
and
push
fist
push
mov
push
and
std
hlt
xor
stos
add
add
push
sahf
inc
add
iret
add
in
movs
jnp
pusha
adc
daa
and
repnz
and
clc
sub
in
push
ret
adc
and
dec
adc
or
jp
mov
mov
hlt
sub
mov
push
outs
data16
movs
movs
(bad)
loop
les
ror
cmc
ins
cmp
mov
xor
or
(bad)
cmc
add
in
adc
xchg
dec
loop
push
fimul
sub
inc
call
and
dec
sbb
inc
scas
pusha
mov
mov
ins
push
stc
sub
inc
lea
add
or
jb
fistp
or
jmp
mov
mov
shl
dec
dec
outs
cmp
adc
shr
mov
out
movs
ins
pop
(bad)
clc
cld
dec
pop
add
inc
test
xor
or
dec
cld
jmp
xchg
jmp
(bad)
scas
icebp
icebp
repz
xor
mov
cmp
jl
lods
xlat
mov
jo
ins
loop
sbb
push
retf
jl
mov
ret
adc
imul
xlat
pop
rcr
mov
push
iret
add
mov
mov
clc
mov
sub
xor
arpl
and
fldenv
hlt
mov
xchg
in
mov
scas
rcr
jno
push
add
push
inc
add
(bad)
loop
out
xchg
cmps
popa
mov
(bad)
dec
outs
nop
pop
cdq
(bad)
loope
jo
sbb
dec
aam
ins
(bad)
stos
loop
into
xor
std
rcr
jle
mov
mov
mov
jns
xchg
(bad)
popa
(bad)
cwde
mov
sbb
lock
cwde
jle
in
stc
lea
repnz
cmp
xchg
rol
div
retf
xor
(bad)
data16
xchg
xchg
sub
mov
push
mov
daa
pop
or
aas
or
call
jg
xchg
clc
fsub
sub
cmps
mov
mov
in
cdq
add
ror
pop
or
push
inc
test
mov
test
mov
not
inc
cld
test
mov
or
xor
jmp
test
addr16
mov
mov
test
mov
div
test
jne
out
lahf
or
fs
adc
pop
ror
jle
ins
mov
push
mov
ins
das
je
adc
sbb
lods
sbb
sbb
jns
sub
xor
xlat
into
jmp
je
xor
push
retf
add
ds
jmp
jecxz
js
fadd
rcl
cmp
cmp
and
retf
sbb
pop
mov
xchg
push
xor
sbb
jo
aad
(bad)
push
and
in
jg
sti
jge
adc
and
inc
and
ds
mov
loopne
inc
iret
inc
aam
sbb
addr16
sub
lods
dec
addr16
sbb
inc
fistp
inc
(bad)
popf
jbe
mov
sub
out
cmps
adc
dec
add
lea
jne
(bad)
jns
sub
mov
sbb
fucomip
mov
sbb
fwait
push
lahf
or
push
xlat
in
out
stc
mov
retf
(bad)
cli
jo
ret
daa
pop
inc
dec
shl
bound
xor
stos
jle
fs
aas
fistp
ret
leave
push
ret
mov
loope
lods
and
ror
out
nop
stos
loop
cwde
jmp
pop
add
(bad)
jbe
enter
add
and
lods
in
jg
ds
adc
cli
and
mov
outs
in
loope
pop
mov
push
div
jp
cmps
cmc
push
imul
xchg
mov
xchg
adc
test
jae
add
jno
xchg
dec
sub
xchg
jns
jl
inc
dec
dec
aas
add
clc
pop
loop
cdq
xchg
ret
mov
scas
add
push
ss
mov
or
jno
mov
pop
xchg
mov
pop
cmp
push
or
fsub
xlat
add
ret
cld
aam
mov
jne
dec
icebp
and
push
stos
mov
pop
inc
in
js
lods
and
cld
jge
jmp
or
sbb
cwde
addr16
fdivr
pushf
push
mov
push
sbb
adc
clc
pop
mov
xchg
pushf
inc
test
leave
sbb
in
lds
gs
sar
mov
push
cmp
pop
sbb
pop
(bad)
call
jae
cmc
stos
or
mov
pop
outs
pop
adc
mov
pop
jmp
xchg
sbb
ror
and
ret
loop
inc
sbb
push
and
pop
test
and
idiv
hlt
xbegin
popf
jo
dec
push
adc
movs
test
or
out
sub
xlat
ret
outs
fdivr
fcmovnbe
gs
adc
repnz
push
adc
add
dec
cdq
repz
or
pop
(bad)
jb
sub
leave
out
sub
xchg
adc
aaa
cmp
outs
pop
jns
sub
scas
enter
imul
mov
xchg
out
jmp
retf
scas
dec
aas
sub
loopne
add
xor
popa
mul
xor
inc
mul
mov
das
dec
lods
lahf
push
cmp
and
ret
push
xchg
sub
jle
or
out
mov
jg
push
ja
popa
mov
ds
mov
push
shl
idiv
cmps
pop
repnz
push
xor
pusha
mov
jnp
and
enter
sub
jb
or
in
cwde
cmp
pop
fs
ret
adc
fsub
xchg
mov
daa
test
add
pop
dec
les
dec
xchg
(bad)
lock
pop
jns
daa
cmp
popa
inc
inc
test
pushf
repz
rcr
push
sbb
cwde
cdq
das
fs
xchg
mov
push
xlat
loop
jle
dec
add
mov
outs
cld
add
jnp
or
add
test
add
mov
pop
mov
xor
jae
cdq
inc
and
inc
jne
nop
daa
jle
(bad)
jp
add
jge
inc
and
sbb
std
call
jb
mov
gs
jae
cmc
jae
jmp
ins
jp
into
sub
sub
lock
lods
loop
cwde
sub
test
test
xchg
cld
nop
and
shl
(bad)
pop
scas
(bad)
pop
sar
lods
inc
cmp
int
aad
sub
ins
es
pop
mov
mov
int
mov
sar
jns
xchg
ds
or
cmc
sahf
cmc
sbb
in
inc
xchg
ds
inc
clc
sbb
fidivr
std
xchg
loopne
dec
cld
lods
jmp
pop
popa
mov
inc
or
adc
dec
sbb
idiv
gs
jle
cmp
xchg
call
push
mov
mov
cwde
inc
imul
mov
push
cmp
xchg
(bad)
call
test
dec
sahf
ret
bound
cmc
or
push
adc
loop
aaa
cs
ficomp
push
mov
cmp
in
or
fidiv
(bad)
neg
cs
enter
jmp
adc
sub
dec
mov
or
aaa
dec
ret
add
test
jl
xchg
adc
push
dec
pop
mov
or
mov
bound
pop
and
lds
jae
push
std
jnp
cdq
scas
push
sub
inc
les
aad
and
jg
out
add
stc
xor
movs
dec
sbb
mov
jnp
repz
or
ds
scas
daa
sbb
xchg
mov
sub
in
sub
cld
xlat
cmp
adc
adc
inc
ds
pop
pop
test
adc
jae
adc
push
xchg
sub
pusha
mov
jge
pushf
cwde
jl
(bad)
dec
movs
jle
dec
lahf
jbe
xchg
push
stos
and
push
adc
scas
add
ret
fnsave
mov
mov
cli
cmp
cmc
(bad)
loop
push
jno
push
sti
in
xor
push
movs
or
fwait
stc
pop
sbb
inc
in
jmp
add
cmp
push
xlat
movs
leave
xlat
push
dec
pop
dec
mov
aaa
sti
int
stos
cs
cmps
xor
jno
mov
push
xchg
not
mov
push
add
(bad)
xchg
sbb
mov
clc
fwait
jb
xor
test
jno
add
inc
or
mov
cmp
test
push
mov
inc
sub
cs
(bad)
out
inc
mov
test
push
js
mov
aad
push
sbb
loopne
and
out
popf
mov
loope
cmps
adc
mov
ja
lods
call
cmp
(bad)
sbb
cmp
cmp
hlt
xchg
fld
cmp
mov
lahf
pop
call
adc
lahf
mov
ja
movs
int3
ret
push
fiadd
aad
pop
cs
mov
mov
sbb
call
push
push
movs
sub
ins
popf
imul
outs
add
adc
jle
rcl
scas
sub
xor
xchg
es
lahf
xor
stos
cld
pop
push
leave
loope
mov
dec
mov
cdq
cwde
movs
es
or
inc
pushf
stos
jl
add
icebp
mov
mov
fstp
pop
or
dec
(bad)
fist
je
fidivr
retf
loopne
add
out
xchg
push
jne
call
mov
pop
xor
jl
imul
cs
mov
mov
je
js
xor
dec
retf
push
(bad)
mov
pop
fwait
lahf
movs
loopne
(bad)
imul
adc
loope
jno
jnp
addr16
push
loop
loop
out
inc
sbb
aam
and
adc
jg
repnz
add
sub
and
sub
retf
mov
shl
scas
sar
xchg
push
sbb
test
call
adc
aaa
loopne
and
add
sub
xor
mov
sub
sub
sbb
xlat
jecxz
jbe
pop
fisub
mov
arpl
lds
rcl
cmp
ja
xchg
mov
xchg
aam
fisttp
inc
or
jle
pop
cmp
xchg
in
adc
retf
cmp
adc
dec
fisub
mov
and
and
dec
lea
test
cmps
js
fst
and
mov
mov
ret
jbe
retf
jno
adc
stos
das
mov
mov
test
xchg
push
adc
mov
push
adc
mov
jl
movs
add
adc
mov
fidivr
sbb
lahf
shr
clc
and
and
dec
out
stos
scas
aad
adc
inc
pop
ins
inc
push
or
mov
inc
inc
lods
pop
sub
shl
imul
jns
gs
loopne
mov
js
sbb
(bad)
xlat
cmps
scas
repnz
pop
jbe
mov
(bad)
cmp
push
pop
xor
and
adc
pop
sahf
aas
ins
jge
jmp
mov
or
push
mov
jno
cmc
lods
ins
cmp
scas
pop
xchg
pusha
pop
add
arpl
pushf
or
mov
cmp
inc
push
(bad)
cli
stos
cmps
ret
movs
jmp
cmps
jp
(bad)
mov
arpl
xor
int3
loop
sub
jae
mov
out
and
dec
cli
clc
pop
cmp
xchg
out
in
jg
add
mov
mov
push
sbb
cmp
jbe
push
jmp
out
cs
je
fnstsw
push
nop
ficom
out
push
into
mul
mov
adc
outs
adc
das
mov
call
(bad)
je
neg
popa
call
pushf
xor
xchg
enter
adc
mov
nop
jecxz
pop
in
lahf
mov
add
stc
jnp
mov
push
push
loop
nop
sahf
jno
out
pop
cmps
ret
and
nop
pop
xchg
pop
xor
into
ins
dec
xchg
lods
pop
int3
push
(bad)
cmp
xchg
loop
cmovg
bound
xor
xchg
jae
mov
pop
test
mov
in
or
pusha
add
or
xchg
js
add
ror
loopne
sbb
jecxz
cmp
jl
enter
xchg
fstp
push
(bad)
mov
mov
aam
stc
je
ins
pop
ds
adc
push
imul
test
icebp
jns
cmps
lahf
mov
out
or
jno
jmp
push
mov
call
imul
pop
cmp
retf
psubsw
hlt
(bad)
xor
xor
out
pop
call
and
ins
mov
push
pop
pop
push
jmp
mov
and
dec
lods
mov
pop
(bad)
lods
cld
retf
mov
shr
pop
sbb
loop
dec
pop
add
lahf
mov
mov
loopne
icebp
movs
cmps
stc
pop
icebp
jne
add
fs
xchg
mov
ret
xlat
jge
fsubr
mov
dec
push
mov
fild
add
shl
push
rol
jne
xchg
or
inc
inc
push
inc
in
sbb
cmp
and
mov
and
push
jb
inc
jmp
lods
movs
jmp
jecxz
add
fsub
shr
dec
out
repnz
mov
jae
rcr
pop
icebp
repz
jne
in
mov
sub
dec
inc
rol
jl
mul
push
mov
(bad)
rcr
jo
pushf
adc
out
jo
jge
sub
cmps
cmp
iret
cmps
shl
adc
xchg
rcr
mov
js
je
stc
cmp
ins
ja
inc
sbb
outs
pop
inc
aaa
out
es
cld
lock
sahf
pop
sbb
sbb
ss
mov
adc
ins
push
aam
or
cld
or
lmsw
shr
mov
out
jp
cli
pop
pop
jns
lea
(bad)
movaps
mov
pop
dec
fsubp
mov
dec
nop
pop
pop
loope
cmp
or
mov
jb
mov
or
sar
or
iret
push
and
fwait
push
push
dec
cmp
sbb
xor
enter
pusha
aam
jns
test
cli
aas
gs
jo
or
sbb
pop
jge
pusha
aam
push
dec
mov
out
movs
jnp
jb
dec
out
mov
cmp
push
or
out
out
ins
movs
cdq
out
xor
enter
(bad)
popf
sbb
jbe
push
dec
add
lods
ins
jnp
cld
ret
xchg
mov
pop
je
xchg
pusha
inc
fs
adc
mov
mov
xchg
(bad)
pop
pusha
sti
inc
mov
fndisi(8087
mov
pop
mov
imul
adc
or
js
jb
ret
jmp
add
lahf
dec
cli
ffree
mov
pusha
das
cs
fcmovnbe
inc
xor
lea
fisub
popf
inc
pop
xchg
sbb
nop
mov
fisttp
popf
stc
imul
in
cmp
sti
test
addr16
and
mov
(bad)
jl
dec
xchg
mov
or
sti
push
mov
btc
mov
sar
xor
pop
jb
sahf
jno
pop
div
sti
stos
(bad)
xor
mov
mov
mov
xor
enter
outs
je
out
pop
stos
cmps
js
jge
fisttp
push
stos
push
int3
jno
fimul
xchg
cdq
fiadd
mov
in
ja
div
jecxz
mov
or
pop
adc
xor
sbb
jnp
inc
stos
(bad)
popf
fs
arpl
inc
mov
xlat
enter
cld
xchg
outs
retf
mov
and
or
jns
add
push
dec
mov
mov
into
inc
jns
xchg
jno
movs
jb
mov
mov
push
retf
dec
xchg
xchg
imul
cmps
test
xor
inc
es
xchg
mov
sub
add
aad
adc
gs
ins
xor
adc
shr
inc
pop
out
and
pop
xor
cmc
(bad)
dec
push
call
clc
(bad)
push
fiadd
xor
mov
loop
gs
je
mov
(bad)
sbb
out
add
xchg
nop
adc
inc
mov
std
int3
aas
bound
out
pop
pushf
cdq
and
mov
sbb
pop
mov
test
xor
retf
leave
mov
test
in
dec
imul
gs
jecxz
leave
out
fdivrp
cdq
setns
imul
xchg
pop
aad
pop
push
sbb
fadd
test
sahf
ret
jmp
sub
cdq
pop
fwait
inc
lea
mul
call
mov
fidiv
jae
arpl
(bad)
adc
loop
cmp
pusha
xchg
sbb
int
adc
dec
sbb
add
sub
mov
push
fs
adc
retf
xor
jl
or
(bad)
ror
fdiv
and
dec
sbb
dec
push
test
cmp
dec
stos
mov
test
cwde
imul
adc
outs
cs
test
retf
sub
cld
xor
mov
pop
cmc
cmp
addr16
mov
rcl
mov
bound
cmps
jo
cld
adc
and
stos
or
addr16
retf
or
shl
and
or
imul
mov
int3
(bad)
and
jbe
or
(bad)
(bad)
adc
icebp
cmp
xchg
and
(bad)
dec
adc
mov
ret
add
mov
test
adc
mov
into
ror
jb
and
xchg
jmp
loope
(bad)
xor
mov
aad
repz
xchg
mov
add
sbb
jb
push
push
movs
shl
mov
loope
(bad)
fs
in
lods
and
xchg
inc
xor
sbb
sub
push
mov
dec
pop
in
pop
ss
jmp
rcr
cli
xchg
push
retf
add
mov
rol
push
sbb
add
test
sub
inc
push
xchg
fxtract
mov
push
jp
mov
clc
cs
inc
les
loope
jecxz
xor
adc
fwait
loope
mov
or
xor
jmp
shr
sbb
sar
mov
xchg
(bad)
cmp
xchg
and
or
inc
add
or
push
cmp
add
es
pop
xor
or
mov
ins
stos
fbld
sub
push
dec
mov
mov
push
pushf
div
jl
add
rcr
xor
idiv
mov
movs
les
xchg
repz
aam
pop
push
push
pusha
xor
lods
pop
or
mov
sbb
out
pcmpgtw
sub
dec
or
fst
ret
xor
cwde
popa
xor
pop
mov
pop
int3
dec
sbb
out
xor
mov
ss
cmps
and
push
jg
retf
movs
jae
aas
sbb
bnd
call
std
(bad)
jmp
jnp
outs
fild
adc
in
call
fist
repz
or
(bad)
mov
add
fist
push
ins
jp
and
nop
pop
sub
add
inc
repz
(bad)
xor
mov
(bad)
jns
cmp
mov
jmp
cmp
dec
pop
mov
imul
jne
sub
push
xchg
xor
rcr
pusha
sahf
pop
pop
(bad)
(bad)
mov
ficom
loopne
add
jns
sar
call
pop
mov
movs
pop
mov
fdivr
pop
ret
jg
arpl
stos
aam
loopne
test
xchg
dec
mov
mov
es
jo
xchg
mov
mov
push
sahf
repnz
test
push
or
xchg
mov
push
push
out
adc
lods
cwde
xlat
stc
mov
push
rcl
daa
and
mov
mov
in
addr16
ret
cwde
lock
ret
in
mov
ins
mov
mov
hlt
sub
outs
inc
jmp
fisubr
rcl
xchg
mov
mov
adc
dec
cli
cmc
pop
repnz
mov
int
jbe
jnp
sub
pop
jo
cmps
pop
dec
jmp
dec
pop
into
add
or
loop
xchg
add
repnz
pop
rcr
xchg
mov
add
les
cs
sahf
jno
ret
jno
cwde
or
xchg
jne
aam
push
mov
push
ins
push
push
das
daa
fxch
into
mov
mov
popa
mov
cmc
ins
xor
sti
xchg
gs
scas
pop
xchg
fimul
pop
lea
adc
mov
dec
cmp
sub
add
add
jns
push
jg
lds
fild
pmaddwd
dec
outs
into
and
sti
(bad)
stc
xchg
and
pop
jg
cli
and
(bad)
dec
sub
xchg
xlat
mov
jg
dec
lds
fwait
dec
cmp
rol
ror
inc
retf
daa
mov
mov
(bad)
mov
stos
pop
add
adc
ja
stos
or
int3
xchg
cwde
cmc
mov
aam
sub
arpl
pop
cmp
arpl
push
xchg
and
shl
xchg
out
xor
push
jl
inc
inc
ja
pop
mov
loopne
push
movs
jae
shl
push
push
adc
pop
ret
sub
push
shl
xlat
ficomp
cwde
cmps
mov
(bad)
sar
push
scas
inc
mov
dec
dec
imul
xor
or
leave
pop
push
inc
fisub
push
das
push
adc
dec
dec
imul
gs
dec
pop
ins
sar
or
or
jno
and
(bad)
lock
jmp
push
cmps
sbb
xor
and
push
push
rcl
ds
popf
or
jnp
and
jl
sbb
add
not
js
cdq
push
stc
xchg
add
(bad)
(bad)
div
xchg
sub
fidiv
and
aas
retf
and
mov
mov
push
xchg
jne
xchg
inc
rol
xor
ret
cmp
ror
hlt
(bad)
icebp
sbb
imul
stos
push
sbb
shl
sbb
and
loopne
fistp
add
xchg
sub
pop
xchg
dec
pop
pop
rcr
sub
add
inc
fstp
xchg
mov
mov
dec
das
loop
dec
cmp
adc
pop
xor
inc
cmc
jbe
sbb
sub
adc
xchg
fdiv
dec
and
xor
dec
add
pop
push
xor
mov
pop
and
cmp
aad
je
mov
jl
sbb
sub
jns
out
rol
cmp
ret
mov
mov
mov
out
or
adc
push
lahf
ss
scas
test
push
mov
and
sbb
pop
push
mov
inc
jg
jo
addr16
xchg
jne
shl
mov
stos
jl
sbb
movs
adc
sub
out
(bad)
sti
dec
dec
aas
out
pusha
(bad)
cmp
sbb
sti
and
push
cwde
or
lods
dec
cli
aaa
movs
xor
and
inc
jns
dec
fdiv
or
adc
cmp
fs
stc
daa
or
fwait
ins
sbb
fistp
xor
and
aas
dec
sub
sub
outs
lds
pop
jle
jnp
or
pop
fnstsw
arpl
dec
sti
cmp
mov
mov
or
mov
push
ss
mov
adc
fwait
movs
(bad)
shl
ins
push
popf
xchg
and
mov
push
mov
pop
neg
mov
mov
pop
in
ficomp
pop
or
imul
jmp
aaa
pop
cmp
stc
mov
cmp
xchg
std
retf
icebp
push
or
mov
aam
das
add
push
scas
icebp
dec
daa
gs
cmp
sub
outs
and
and
in
and
test
push
sahf
shl
ja
mov
mov
fstp
ret
ins
mov
pop
inc
mov
sti
into
outs
inc
mov
sub
push
(bad)
jl
adc
loopne
std
(bad)
(bad)
push
sub
test
fistp
xor
ret
stos
(bad)
add
jbe
xor
push
mov
repnz
retf
push
mov
je
push
lods
sbb
xchg
ret
mov
or
and
outs
cwde
cs
jmp
sub
inc
jmp
add
inc
cs
mov
(bad)
pop
and
inc
fninit
in
or
pop
in
(bad)
inc
push
xchg
sub
mov
cmp
push
or
jecxz
in
sbb
add
mov
(bad)
lods
sbb
adc
in
xor
bound
jns
xchg
shufps
push
lea
pop
xor
sbb
call
in
mov
mov
mov
outs
cmp
aad
daa
sbb
jmp
mov
fmul
add
pop
ins
std
and
cli
mov
cmp
in
(bad)
jecxz
or
das
fwait
cs
jl
sbb
daa
iret
xor
jo
cmp
and
sub
add
(bad)
in
push
and
mov
out
lahf
retf
and
adc
nop
push
ror
lods
pop
mov
jg
cs
add
in
xchg
les
sti
jbe
add
lds
push
sub
ins
repnz
dec
addr16
adc
add
pop
adc
xchg
xor
mov
in
pusha
fidiv
add
bound
add
cwde
jmp
add
popf
jb
xor
inc
pop
mov
rcr
and
push
test
dec
pop
pop
push
fwait
add
sub
cmp
sbb
scas
arpl
ds
mov
sub
and
out
ins
cli
leave
and
mov
sub
jg
aam
pusha
pop
inc
push
xchg
ds
stos
sbb
scas
cmps
mov
or
and
mov
mov
bound
dec
test
movs
push
push
add
stos
fcomp
jb
into
mov
sub
dec
dec
arpl
dec
cmps
test
fcomp
mov
aad
cmp
int
add
xchg
pop
outs
push
movntq
out
pop
inc
cmp
pop
sbb
mov
sbb
adc
not
popa
or
fmul
cmps
xchg
pop
fiadd
retf
ins
add
push
in
jmp
or
cmps
retf
fdivr
icebp
(bad)
pop
daa
stos
aad
sti
inc
jp
jmp
popa
(bad)
dec
into
cld
jl
add
mov
aas
dec
mov
adc
stos
bound
sub
and
in
(bad)
lds
xor
xchg
mov
pop
ror
sbb
jae
mov
sar
xchg
cmp
inc
ret
xor
rcr
loop
imul
xor
xchg
dec
inc
es
out
cmp
pop
and
(bad)
sbb
xor
lock
scas
loop
(bad)
mul
jle
inc
mov
jae
data16
scas
aas
cmps
ins
push
(bad)
sbb
inc
call
inc
idiv
popa
inc
adc
sbb
xor
xor
mov
outs
ins
jecxz
call
mov
jle
add
ss
mov
inc
sbb
dec
or
mov
cmp
xchg
mov
mov
adc
retw
fisub
fist
idiv
xchg
inc
ret
mov
jns
icebp
adc
mov
outs
mov
fiadd
cdq
jecxz
fistp
xor
mov
pusha
lods
push
add
jb
adc
cmps
ins
nop
mov
test
sub
inc
dec
aas
lods
out
lds
mov
int
xor
pop
out
sbb
adc
sub
cmps
loop
sub
sbb
pop
es
ret
mov
test
xor
imul
mov
das
push
std
dec
xor
push
data16
push
mov
ror
les
mov
sti
cmp
cmps
ror
test
je
adc
dec
or
sti
dec
jge
cmp
out
push
dec
(bad)
xor
xchg
sbb
lds
imul
out
fisttp
mov
hlt
xor
sbb
ins
xchg
retf
and
dec
ins
adc
outs
int3
mov
push
dec
arpl
mov
loope
push
xor
(bad)
mov
xchg
push
into
xor
mov
ins
jmp
retf
jo
sahf
xchg
dec
daa
add
pop
test
adc
outs
in
mov
pop
mov
mov
xchg
mov
nop
pop
inc
sbb
mov
push
fist
xchg
dec
sahf
ins
iret
sbb
imul
aas
aad
pop
cmps
xor
shl
(bad)
sub
cli
ficomp
imul
(bad)
lods
adc
xor
lds
(bad)
mov
xor
hlt
cmp
int
mov
cdq
jp
pop
sub
sub
push
mov
ds
inc
inc
mov
inc
ds
mov
fnstsw
xchg
test
xor
mov
data16
inc
pusha
(bad)
cmp
popa
sbb
ins
lahf
fdivr
add
pop
stos
mov
stos
and
cmc
(bad)
lock
push
or
data16
pop
push
pop
or
add
dec
test
pop
mov
inc
cmps
outs
inc
test
sbb
add
inc
into
in
or
bound
xchg
cwde
or
jecxz
nop
inc
(bad)
fdiv
dec
std
mul
and
pop
inc
bound
sbb
sub
imul
sub
enter
mov
xor
adc
jp
jmp
loopne
push
into
retf
out
dec
ret
gs
ffreep
and
scas
dec
cmps
pop
enter
lea
stc
dec
lds
jno
out
sti
inc
scas
push
sbb
mov
stos
in
lds
adc
xchg
int
ins
daa
add
outs
inc
aad
mov
addr16
daa
shl
xor
mov
push
sbb
stos
out
es
setb
cmp
fidiv
cmp
sub
inc
rcl
fdivr
push
fstp
iret
xor
(bad)
adc
dec
popa
mov
and
adc
mov
sbb
dec
push
sbb
into
sub
add
xor
cwde
aam
sub
sar
push
movs
test
and
mov
lock
stos
xchg
add
outs
bound
push
dec
xchg
sti
and
add
jne
mov
cdq
pop
lods
test
fs
mov
test
ss
das
call
dec
pop
daa
ins
cs
in
xor
into
sbb
inc
call
pop
add
cs
hlt
pop
jno
xor
lds
mov
or
dec
mov
pop
mov
js
push
test
sti
frndint
call
lods
xchg
xchg
and
mov
add
retf
out
pop
es
xor
pop
test
push
or
jb
stos
xor
mov
test
push
(bad)
xchg
mov
bound
jge
out
adc
stos
xor
fiadd
mov
mov
adc
aaa
fsub
sub
dec
repz
and
js
mov
mov
sbb
dec
imul
hlt
aam
cmps
jg
ja
mov
ret
push
adc
cld
ret
(bad)
icebp
pop
inc
push
jb
or
dec
in
xchg
jmp
sbb
and
push
inc
in
imul
lea
out
hlt
pop
jge
or
xchg
cli
xor
ins
movs
mov
sub
movs
pop
mov
pop
stc
test
mov
scas
xchg
daa
mov
sbb
mov
mov
out
rcl
(bad)
out
add
aam
dec
mov
fidivr
fcom
test
xor
xchg
mov
cmp
push
jo
loope
test
push
push
lahf
xor
(bad)
stos
lods
mov
xor
cmp
jbe
inc
sahf
dec
cmp
dec
xor
or
outs
cmp
js
xchg
cwde
cmp
push
mov
enter
jl
aam
jno
scas
(bad)
jmp
retf
xor
shr
jb
inc
lock
jmp
pop
mov
hlt
dec
in
(bad)
sbb
inc
inc
into
push
leave
imul
pop
sar
push
pop
cmp
retf
addr16
ss
rcl
cs
es
mov
pushf
mov
adc
addr16
mov
push
mov
pop
stos
xchg
push
ret
dec
pusha
or
imul
pop
pop
sahf
or
and
js
mov
xor
jne
mov
dec
aam
push
jns
pop
mov
dec
add
mov
xor
cmc
and
imul
arpl
mov
inc
lods
sbb
and
mov
aas
push
pop
pop
pop
push
(bad)
mov
scas
pop
int
fwait
adc
xchg
dec
retf
movs
mov
xchg
sub
jo
popf
ds
fiadd
mov
mov
outs
or
cmp
cmp
jge
adc
jne
popf
mov
loope
(bad)
pusha
jae
or
sti
cs
neg
test
sahf
xchg
popf
movs
inc
test
pop
lea
mov
cmps
jle
sbb
jg
mov
ret
sbb
sbb
push
cwde
pusha
rol
jl
xor
lock
dec
arpl
(bad)
frstor
cmp
aas
inc
jmp
(bad)
jle
inc
mov
push
fist
shr
xlat
dec
nop
(bad)
mov
cwde
or
jl
jmp
pop
or
lods
or
push
pop
sbb
(bad)
inc
outs
mov
jg
fiadd
lods
mov
cmp
outs
adc
daa
test
dec
test
(bad)
nop
cmp
fsub
dec
inc
jne
cmp
push
scas
dec
jle
or
(bad)
cmc
outs
mov
add
cmp
xchg
pop
lock
xor
outs
mov
imul
not
mov
mov
es
ret
dec
mov
xchg
mov
xor
pusha
sbb
xchg
movs
inc
dec
scas
cdq
xchg
bound
cmps
outs
ins
mov
in
fstp
push
int
jns
idiv
mov
sbb
cmp
les
outs
rcl
inc
shl
lods
out
data16
lds
jmp
and
dec
mov
xchg
xchg
test
sbb
inc
in
das
(bad)
sub
int3
hlt
sbb
pop
pusha
es
mov
inc
movs
outs
dec
dec
jle
cmp
aam
lahf
imul
xor
cmp
fldcw
gs
pop
adc
out
pop
xor
and
dec
xchg
xor
mov
pop
add
imul
mov
mov
jne
add
lahf
(bad)
in
sbb
push
jmp
clc
sti
aas
xlat
cld
xchg
js
es
sbb
mov
jge
out
dec
jmp
push
add
retf
setl
inc
push
push
in
ja
adc
jae
sub
imul
leave
scas
dec
jcxz
aam
into
daa
mov
sbb
fnstcw
adc
lock
cmp
mov
xchg
jae
icebp
inc
push
pop
and
in
loopne
add
in
add
sub
or
jge
add
outs
cmp
std
dec
adc
rol
jp
aad
push
sti
xor
ins
sub
add
in
jp
pop
(bad)
sar
fs
sbb
es
scas
adc
dec
ja
addr16
stos
jle
sub
std
mov
adc
adc
jecxz
repnz
and
rcl
rol
pop
pusha
fmul
test
cwde
mov
rol
dec
inc
push
fdivr
jns
cmps
test
popa
add
mov
mov
pop
hlt
rol
outs
adc
push
jo
xchg
in
pop
ins
pusha
pop
stos
int
or
add
jne
pop
inc
sbb
idiv
mov
xor
mov
fld
or
retf
xor
rol
shr
push
push
aaa
arpl
inc
sahf
mov
lock
or
xchg
ins
push
lods
loope
ja
xchg
lfs
not
xor
inc
pop
inc
scas
aaa
stc
fiadd
xchg
dec
cmc
sub
les
mov
in
push
xchg
in
inc
adc
mov
mov
dec
fs
call
and
sub
mov
(bad)
cmp
push
(bad)
mov
xlat
loopne
jle
sub
popa
cmps
icebp
push
inc
stos
sub
and
sub
(bad)
push
movs
lods
test
out
cmp
daa
dec
dec
repnz
lods
pusha
out
push
loopne
mov
loop
jae
mov
jo
mov
call
xor
dec
movs
nop
xchg
pop
enter
push
fs
xchg
sbb
outs
xchg
movs
gs
outs
sbb
mov
mov
inc
pop
mov
into
jecxz
pop
test
inc
stos
xchg
out
clc
dec
shl
shr
cld
xchg
add
neg
pop
push
and
test
ret
push
cli
lds
jp
or
int
retf
daa
mov
hlt
adc
mov
mov
loopne
fisub
stos
popa
repnz
aam
push
and
pop
bnd
cmp
cmc
addr16
retf
je
mov
out
fsubr
es
shl
scas
sbb
push
test
xchg
push
shl
mov
mov
dec
and
jne
dec
scas
sbb
lods
sbb
cld
mov
push
pop
adc
pop
stos
repz
je
retf
aam
and
jle
sbb
xchg
add
mov
repz
rol
cmp
cmps
or
repz
fdiv
mov
jmp
mov
or
nop
mov
out
out
popf
in
jns
adc
mov
out
shl
mov
fnstcw
fdivr
std
xor
xchg
and
loop
xchg
xchg
lods
or
or
push
cs
icebp
cmp
cmp
mov
fdiv
fisubr
rol
ret
call
shl
lds
or
xor
xchg
xor
mov
add
out
pop
and
cmc
pop
jmp
or
test
push
mov
ret
sti
into
data16
mov
jge
or
ror
sar
mov
add
shl
push
jl
mov
dec
addr16
jmp
cmp
daa
cmps
mov
ins
xor
cmp
jle
mov
pop
mov
out
xor
in
jne
inc
jns
(bad)
mov
retf
pop
sbb
jl
mov
cwde
shld
cdq
push
cdq
lahf
mov
(bad)
neg
sbb
fistp
aam
add
lds
cmp
cmps
sahf
add
gs
xchg
pop
sahf
jg
pop
test
xchg
push
sbb
add
mov
div
mov
retf
rcr
test
pushf
lock
test
jp
mov
sub
test
mov
ja
sahf
neg
mov
imul
adc
(bad)
ins
rcl
mov
cmps
ja
push
aad
sbb
pop
xrstors
push
mul
push
pop
mov
or
xor
and
pop
popa
mov
cmp
int
test
clc
mov
mov
call
fsub
fistp
sbb
mov
out
mov
mov
push
popf
(bad)
mov
inc
adc
sbb
cmc
inc
cmp
shl
cmc
cmps
rcr
ret
retf
pop
cmpxchg
jle
push
push
aam
mov
jbe
jge
retf
cmp
sub
fisttp
xor
mov
xchg
and
pop
dec
call
dec
(bad)
addr16
and
inc
xchg
mov
test
pop
pop
push
out
inc
mov
xchg
pop
pop
adc
(bad)
je
loop
adc
fdiv
mov
xchg
jmp
adc
mov
out
add
enter
call
leave
dec
imul
xlat
fsub
mov
pop
mov
call
sahf
and
hlt
dec
cwde
push
add
(bad)
es
jae
jbe
fcom
jle
lods
js
push
stc
mov
sbb
dec
xor
inc
and
mov
movs
into
ror
or
mov
icebp
loopne
lods
push
or
sbb
sbb
pop
mov
aaa
arpl
fmulp
rcr
lea
dec
aad
fwait
jbe
and
sahf
aad
clc
jo
shl
retf
and
xor
inc
xor
scas
xor
add
retf
mov
sub
fnsave
into
cmp
bound
xchg
(bad)
cli
test
test
clc
int3
xchg
jmp
ins
cmp
std
mov
xor
retf
push
outs
push
mov
xchg
or
add
cmpps
fist
movs
jle
jmp
scas
sub
ja
int3
or
adc
or
cmp
dec
mov
es
outs
not
neg
ins
clc
fistp
fistp
aaa
out
arpl
mul
stc
jg
mov
fdivr
ret
mov
shl
lea
movs
aaa
mov
les
push
retf
push
jl
fdivr
outs
arpl
ret
rcl
sub
push
pop
scas
push
out
fst
test
movs
and
mov
test
repz
rol
sar
fidiv
cmc
cmp
mov
(bad)
rcl
or
mov
pop
xchg
popa
push
loop
outs
sbb
aaa
shr
mov
sbb
dec
push
sub
xchg
pop
loop
xor
or
or
xor
lock
mov
adc
cmp
and
xor
or
adc
inc
jmp
mov
mov
es
loop
mov
jo
jae
add
cmps
add
test
je
push
ss
sbb
retf
push
mov
cmp
fistp
mov
movs
bound
xor
push
js
pop
stos
pop
sub
and
retf
es
and
adc
loope
dec
popa
js
das
test
rcr
rcl
cs
repnz
inc
(bad)
hlt
push
cdq
test
and
cmp
aas
adc
mov
aas
addr16
enter
add
fidivr
add
and
inc
leave
sub
fnstenv
fstp
push
cmp
sub
mov
pop
cmp
fcomp
or
shl
scas
xchg
push
movd
add
mov
outs
xor
sub
jb
mov
lahf
pusha
call
or
sbb
cmp
cld
sub
sub
inc
mov
mov
inc
enter
xor
mov
mov
mov
push
mov
sub
sbb
jg
aaa
and
movsx
dec
call
dec
jne
sub
mov
call
jge
icebp
ret
pop
aas
fcmovb
jnp
popa
mov
pop
sbb
jnp
xor
or
mov
xor
or
(bad)
jp
jle
sbb
jmp
mov
lock
ss
shl
push
sub
cmps
into
mov
pop
lods
xchg
inc
loopne
xchg
fwait
sar
lea
shl
mov
pushf
inc
push
in
clc
add
xor
pop
add
pusha
mov
sub
sub
jnp
loopne
or
cmp
shl
pop
leave
or
test
loop
lods
push
or
rcl
mov
loop
lea
xchg
add
(bad)
ret
sub
dec
add
rcr
fsubr
shl
cli
jnp
add
(bad)
lahf
cmp
sub
jge
push
movs
add
icebp
pushw
loopne
daa
pop
jp
outs
pop
mov
xor
mov
sbb
jmp
shr
out
outs
addr16
(bad)
sar
mov
pop
pop
(bad)
xchg
fnstsw
lods
int
in
mov
mov
mov
call
jmp
and
repnz
inc
in
cmc
pusha
enter
push
(bad)
imul
stc
jl
mov
inc
jae
and
ror
inc
icebp
dec
mov
add
out
dec
sbb
retf
test
repnz
pushf
sti
lods
mov
icebp
pushf
mov
je
inc
mov
dec
rcl
fld
inc
jo
mov
out
jmp
call
xchg
jle
das
adc
add
out
test
push
jge
popf
push
(bad)
retf
stos
sub
clc
xchg
sbb
xlat
cmp
popf
cmc
mov
mov
sub
pushf
or
cmp
pop
mov
add
pop
mov
hlt
fdiv
nop
jecxz
cld
xlat
mov
adc
jg
sub
arpl
lods
and
mov
daa
test
mov
mov
or
sub
sbb
dec
and
inc
test
outs
add
call
in
sbb
ins
mov
inc
jae
ret
mov
sbb
cmp
daa
pusha
jnp
xor
enter
push
mov
outs
out
inc
push
bound
mov
icebp
jp
stos
dec
js
test
movs
jecxz
xchg
imul
push
cmps
cdq
add
add
call
add
push
mov
adc
sti
push
push
nop
jns
outs
pusha
push
and
stc
dec
addr16
(bad)
sbb
dec
xor
lods
int
lds
or
xchg
out
lock
ja
retf
dec
and
pop
add
mov
fdiv
mov
lahf
test
loop
call
loop
xchg
dec
cmps
and
imul
gs
adc
rol
jl
lods
adc
dec
push
jge
mov
jmp
adc
loop
std
jb
mov
mov
jp
(bad)
enter
inc
xchg
test
addr16
pop
xor
sahf
sbb
test
out
push
in
or
lahf
adc
es
xchg
dec
jnp
(bad)
jno
xchg
idiv
aaa
sti
loope
pop
xchg
(bad)
cdq
mov
push
(bad)
pop
jno
fidiv
xchg
dec
add
outs
mov
rcr
sbb
clc
or
xchg
and
pusha
sbb
lods
and
aam
pop
cwde
pop
inc
daa
add
in
nop
xor
pop
inc
jle
shl
mov
ror
jge
in
into
nop
shl
inc
pop
sub
sbb
jle
dec
addr16
imul
inc
or
push
retf
ficom
mov
sub
adc
ins
xchg
clc
mov
xor
mov
stc
loopne
lahf
ins
dec
push
aam
or
(bad)
xor
dec
mov
jo
ss
test
fdiv
pop
sahf
mov
mov
dec
test
pop
ret
lea
xor
(bad)
std
aaa
fist
adc
(bad)
loop
inc
and
push
xchg
popa
add
mov
push
xor
pop
cdq
iret
xchg
jno
jg
or
push
dec
movs
ret
sub
sbb
xor
mov
ss
mov
repz
cdq
mov
lods
mov
pushf
inc
push
xor
xchg
mov
inc
xchg
scas
xor
rol
mov
xchg
(bad)
push
push
adc
and
ret
call
aam
ror
cmp
or
xchg
imul
sahf
out
dec
int3
cmp
sub
gs
retf
or
mov
pushf
(bad)
fimul
aas
lods
mov
mov
shl
sbb
loope
push
daa
mov
test
jo
(bad)
out
fistp
into
dec
(bad)
pop
mov
jmp
xor
fs
ror
mov
cld
push
nop
cld
(bad)
push
call
xchg
jl
mov
xchg
jge
push
mov
loope
sub
push
loopne
fisub
fcom
push
stc
sahf
inc
call
jns
mov
sbb
fst
mov
pushf
cmp
mov
cmp
sub
bound
dec
xor
retf
pop
xchg
push
or
add
int3
inc
pop
stos
add
movs
jnp
inc
pop
mov
jle
xor
les
call
fdivr
sbb
int3
inc
jge
add
mov
in
dec
loop
lods
rol
sub
mov
mov
sti
popa
ret
dec
pop
jb
and
loop
in
cdq
xchg
std
xchg
dec
lods
pushf
lahf
pushf
sub
jb
mov
addr16
leave
enter
(bad)
xor
test
pop
pop
and
add
ja
retf
inc
repz
clc
xchg
xchg
mov
dec
(bad)
and
lds
adc
not
movsx
push
pop
xor
sti
xor
das
xchg
dec
fnstenv
test
loop
and
ins
jns
data16
sbb
xor
pop
add
cmp
sub
sbb
(bad)
sbb
jno
push
or
pop
inc
xchg
add
inc
(bad)
pushf
pop
sub
fdivr
sub
xor
mov
div
std
scas
dec
xchg
inc
xor
mov
imul
cmp
inc
xor
fisubr
je
out
mov
sbb
sbb
xchg
scas
push
jbe
mov
sub
fist
arpl
jp
jae
std
mov
xor
pop
es
push
imul
in
iret
pop
dec
fxch
xchg
(bad)
jp
mov
nop
mov
cmp
mov
or
retf
mov
inc
xchg
call
bound
adc
not
jg
lock
in
int
shr
inc
mov
add
push
cmp
movs
cmps
gs
add
pop
xchg
pusha
aad
dec
push
push
imul
sahf
and
loop
dec
jmp
cmps
call
fst
adc
rol
jo
xor
shl
retf
add
nop
jmp
add
lods
js
adc
repnz
push
and
stc
mov
pop
inc
sbb
xor
fcmove
push
dec
je
fldcw
pop
nop
push
sub
push
dec
popa
cmp
pop
sbb
gs
gs
inc
mov
inc
cmp
(bad)
(bad)
pop
test
cmp
pop
xor
loopne
sahf
and
stc
mov
sbb
das
dec
mov
add
cmp
(bad)
(bad)
pop
scas
fld
ins
aas
out
xlat
pushf
sbb
fild
mov
sbb
adc
popf
mov
adc
jo
call
mov
dec
mov
xor
inc
cwde
pop
fisttp
push
cmp
cwde
stc
push
into
or
loop
cmps
inc
ins
mov
inc
lds
rol
data16
dec
fsub
ja
aam
test
sbb
dec
stos
inc
push
pop
xor
mov
jbe
jg
ficom
fild
pop
jp
lahf
test
sbb
xor
fwait
pushf
sub
jne
adc
or
xchg
jbe
stos
add
sbb
out
xchg
jmp
pop
ss
sbb
rol
std
lahf
sub
ret
mov
dec
sbb
cmps
cmp
out
ds
adc
es
push
movs
nop
dec
adc
or
xor
fistp
dec
and
test
push
sti
mov
vcvttps2dq
cli
xchg
xor
jno
add
xor
xchg
mov
pop
mov
punpckhdq
movs
pop
out
mov
xchg
sub
pop
fmulp
push
xor
ret
leave
(bad)
sbb
mov
rol
hlt
pop
xchg
lea
fmul
fbstp
sub
sbb
pop
jmp
push
lahf
inc
cmp
mov
pusha
mov
mov
xchg
sub
adc
fdivr
data16
xlat
sub
jl
and
dec
and
vmovd
mov
hlt
movs
jecxz
mov
call
imul
icebp
sub
out
stos
jmp
xchg
jae
sbb
xor
lahf
icebp
out
iret
(bad)
sub
push
lds
or
dec
inc
xor
fisub
sub
mov
cmp
icebp
std
cmp
and
(bad)
fistp
pop
jg
cld
mov
sbb
pop
xor
sbb
pusha
xchg
scas
xor
out
xchg
rcl
push
jge
or
std
pop
cld
hlt
(bad)
pop
dec
jbe
js
clc
dec
xlat
xchg
leave
mov
push
cmp
and
push
ja
push
xchg
mov
push
int
xchg
pop
dec
fcos
jae
pop
mov
mov
(bad)
leave
push
sbb
mov
(bad)
jmp
jecxz
xor
ds
clc
loop
daa
jmp
or
cs
hlt
iret
outs
lds
push
ret
ss
sbb
mov
ficomp
gs
pop
inc
frstor
inc
xchg
pop
xchg
push
dec
dec
retf
dec
and
inc
ss
(bad)
xor
outs
jg
fxch
fcomp
mov
in
push
out
in
fsubr
mov
out
mov
and
imul
stos
adc
pop
push
add
xor
add
sbb
pop
or
cmps
jne
lock
mov
push
bnd
pop
mov
fistp
lahf
punpcklwd
arpl
lock
jmp
(bad)
and
int3
inc
pop
adc
daa
xor
and
aas
cwde
call
sbb
inc
adc
push
hlt
adc
retf
pop
pop
into
test
dec
inc
and
(bad)
push
ret
sub
ret
dec
mov
cli
mov
adc
loope
test
pop
ret
mov
dec
mov
push
into
out
inc
adc
rcl
jb
xchg
mov
adc
test
out
jmp
stc
popf
fld
dec
arpl
jecxz
bound
xor
icebp
repnz
bound
pop
xchg
mov
inc
inc
lea
div
dec
enter
lea
fnstenv
loope
inc
enter
jnp
adc
ficomp
inc
sub
fstp
cmp
aad
mov
loope
icebp
xor
call
mov
push
sar
or
aam
ins
cmp
pop
in
xor
in
or
js
push
pop
dec
call
add
dec
retf
jmp
fisub
adc
sbb
fnstenv
sbb
das
int3
pop
jae
sub
cwde
inc
mov
scas
daa
imul
xor
jbe
add
lea
cmp
in
loopne
clc
call
pusha
imul
lahf
neg
(bad)
mov
hlt
sbb
mov
jmp
inc
cmps
clc
sub
lock
cmp
adc
movs
dec
add
mov
int3
inc
cmps
cmp
das
inc
sub
and
loopne
xchg
mov
ins
mov
rol
popf
xor
pushf
cwde
jno
out
pop
retf
or
jnp
mov
push
inc
mov
sub
push
jl
call
xchg
scas
nop
adc
daa
mov
jmp
shl
push
test
clc
gs
jecxz
sub
cli
inc
pusha
mov
ficomp
fild
cmp
adc
sub
mov
xchg
inc
neg
popf
cmps
repz
fwait
(bad)
stos
and
jp
adc
mov
jno
(bad)
loop
div
dec
jecxz
in
cli
xchg
(bad)
sbb
or
shl
rcl
loopne
jno
mov
mov
shl
inc
add
inc
les
push
and
pop
imul
xchg
hlt
call
mov
pop
dec
dec
mov
adc
or
jmp
cmp
jne
mov
xor
pop
dec
movs
mov
mov
inc
cmp
xchg
xor
dec
into
jae
stos
mov
sahf
cmp
dec
loop
aaa
shr
jbe
mov
ret
jp
inc
call
out
addr16
(bad)
std
mov
inc
mov
jns
test
into
add
je
jg
loopne
push
jbe
stos
repnz
in
fwait
iret
test
ss
xor
shr
mov
jge
inc
add
call
hlt
add
(bad)
pop
jb
ret
inc
test
mov
cmc
push
pop
int3
cmp
(bad)
pusha
fdivr
inc
std
movs
popf
arpl
scas
xor
jp
jnp
jno
mov
stc
adc
lods
inc
dec
stc
xor
neg
pop
push
retf
or
jae
fs
push
mov
frstor
sti
gs
pop
lock
mov
stos
jns
stos
push
mov
jns
cmp
push
inc
inc
test
jmp
xchg
(bad)
pop
inc
lds
add
sub
jns
pop
mov
out
xchg
sbb
inc
scas
lock
jl
add
popf
ja
adc
mov
pop
out
push
int3
cmp
scas
std
push
cmp
inc
add
cmps
sub
mov
push
in
ror
retf
and
inc
push
neg
mov
(bad)
dec
jmp
sbb
ret
ret
pushf
xchg
cmp
lea
adc
lods
je
popf
mov
cs
repz
add
xchg
sar
scas
add
cmc
hlt
push
sbb
iret
jg
or
adc
push
fistp
test
loopne
retf
push
add
daa
cmp
or
fild
cmps
inc
jne
jae
movs
push
(bad)
adc
in
mov
pusha
or
daa
jge
imul
or
imul
and
rcr
lods
aaa
lds
mov
lahf
pop
or
popa
retf
fdivr
movs
arpl
dec
lds
dec
stc
pop
sub
enter
cs
clc
outs
adc
lahf
xor
movs
inc
sub
inc
outs
xchg
jp
jno
push
pop
xchg
cmc
xchg
push
das
jecxz
ins
add
rcr
mov
xor
jg
shr
sub
push
xchg
adc
adc
outs
cmps
cs
gs
outs
lea
xchg
hlt
lea
push
test
push
test
dec
ja
sub
(bad)
and
outs
je
fld
clc
loope
jae
int
fcomip
cwde
mov
mov
mov
cmp
(bad)
enter
cwde
repnz
(bad)
mov
adc
movs
cwde
cli
push
jb
ror
xchg
jo
ja
mov
imul
xor
add
test
inc
test
xchg
pop
enter
ins
sub
dec
jg
cmp
loope
shr
test
sbb
xchg
cmp
pop
pop
call
mov
dec
or
loope
dec
inc
ss
ins
rcpps
loope
push
jno
std
mov
pop
mov
mov
test
push
aaa
xor
sub
rcl
stc
pop
sbb
popf
jne
inc
test
retf
jne
pslld
fild
clc
xchg
dec
dec
dec
std
and
sti
lea
or
fcom
ret
mov
and
adc
iret
repnz
xor
push
fnstenv
(bad)
les
out
daa
fcomi
mov
mov
addr16
into
sub
mov
xor
and
jae
or
leave
call
call
sbb
mov
jl
rcl
jne
repz
scas
lds
inc
jp
sahf
out
call
push
jbe
inc
or
jl
adc
jmp
sbb
lock
pop
dec
sub
(bad)
dec
push
jmp
rcl
mov
add
pop
sbb
les
lea
xor
mov
dec
repz
cli
loopne
jg
pop
mov
popf
je
test
xchg
sub
stos
in
sbb
xor
lock
mov
mov
sbb
cmc
jecxz
add
add
dec
add
add
cmps
inc
lock
jo
in
aad
pop
icebp
and
fidiv
push
loopne
push
imul
arpl
or
sbb
div
push
mov
aam
cdq
shl
mov
icebp
aam
icebp
retf
or
mov
and
ror
(bad)
jge
mov
leave
push
in
loopne
lea
mul
lods
ja
call
shl
call
and
fsubrp
mov
in
push
lahf
div
cwde
je
es
imul
clc
sub
das
(bad)
scas
mov
sti
inc
clc
push
adc
shl
or
jp
lahf
adc
mov
ret
jp
fs
cmps
mov
pop
pop
mov
sbb
push
cmps
mov
daa
hlt
push
iret
xlat
mov
aam
out
sbb
cmp
dec
mov
inc
ficom
mov
dec
push
cmc
xor
jb
stos
jo
xor
mov
les
call
inc
mov
cmps
ds
pop
test
in
mov
fsubr
mov
xchg
adc
cmp
je
jle
in
jg
pop
jae
mov
adc
xchg
sbb
scas
push
movs
clc
push
mov
ds
fmul
adc
leave
stos
add
jae
dec
ficomp
in
mov
mov
je
lahf
lds
outs
cmp
das
jae
push
mov
sbb
mov
sbb
adc
cmps
xor
jmp
adc
push
js
idiv
in
adc
cmc
int3
int3
test
cs
or
sbb
sub
fst
adc
mov
popf
shl
popf
sbb
cmp
and
ins
in
mov
sub
sbb
dec
dec
ds
call
jecxz
adc
in
push
sub
sub
jge
inc
loopne
sub
sbb
xchg
jmp
sub
in
sub
add
nop
or
hlt
cmp
daa
pushf
es
aam
xlat
ins
test
test
ins
adc
clc
sar
hlt
ins
das
cli
inc
pop
popf
icebp
loop
fsubr
pushf
add
push
adc
or
adc
push
inc
nop
fild
(bad)
fcomp
jne
retf
sub
xchg
imul
dec
rcr
or
out
dec
and
jnp
sti
push
aas
mov
mov
pop
rcl
inc
mov
xchg
mov
jmp
mov
popa
scas
or
sbb
and
inc
cmps
sbb
xchg
sbb
mov
popf
mov
inc
pop
pop
and
mov
or
xchg
add
call
jnp
jae
and
jg
xchg
ins
sbb
aad
xchg
jae
fsubr
adc
stc
mov
sub
shl
push
ret
scas
and
mov
and
call
xchg
pop
test
cs
les
lea
test
dec
or
mov
inc
loopne
xchg
mov
jnp
mov
mov
imul
out
fwait
data16
lgs
test
shr
push
outs
mov
imul
loope
or
and
pusha
inc
xor
jmp
or
cli
rcl
gs
mov
addr16
aas
arpl
jno
icebp
xchg
repz
mov
pop
lea
mov
cmps
(bad)
add
xlat
jnp
cwde
jno
out
sahf
ret
push
retf
inc
cmps
cmp
rcl
dec
sub
xor
pop
jno
(bad)
inc
cli
scas
mov
lahf
mov
retf
movs
sbb
jp
ss
push
dec
fwait
imul
les
or
shr
pushf
sub
lods
mov
xchg
or
xchg
push
xor
in
lea
xchg
sub
cmp
cmp
fs
fsubp
je
or
push
inc
xchg
push
sbb
dec
cli
out
sub
fidiv
sbb
in
push
pop
fst
and
xlat
iret
sbb
jbe
mov
sbb
and
mov
std
pusha
mov
pop
xchg
inc
in
mov
or
jns
iret
jnp
mov
sub
mov
mov
sti
pop
(bad)
loope
mov
cs
sahf
mov
hlt
cmps
leave
in
or
retf
adc
xchg
or
mov
stc
addr16
sbb
sahf
cdq
mov
lahf
cmp
jp
jecxz
lods
xchg
jno
xchg
inc
icebp
loop
repz
dec
sti
inc
call
ret
jmp
lahf
(bad)
pmullw
push
mov
pushf
cmps
neg
mov
(bad)
int3
shl
std
stos
imul
add
sbb
sbb
mov
adc
xchg
pop
pop
(bad)
mov
pop
out
adc
cmp
in
(bad)
pop
into
pop
loope
nop
psrlw
imul
jmp
popa
mov
jo
push
mov
push
mov
dec
xchg
lahf
call
dec
stos
shl
mov
jle
fwait
loope
xor
cmp
int3
out
aas
or
inc
jae
imul
ror
lods
jge
mov
adc
pusha
test
mov
push
add
in
pop
cmps
(bad)
cld
clc
add
xor
jl
sub
and
cmp
not
inc
mov
or
lods
lods
icebp
icebp
sbb
fldln2
cs
or
loopne
xchg
punpckhwd
pop
test
inc
jge
test
(bad)
mul
aaa
out
push
push
xor
sahf
jl
hlt
jno
aad
jg
test
not
adc
fs
outs
mov
(bad)
mov
aam
mov
loopne
loope
movs
ins
mov
jo
sub
cmp
sub
pop
sub
inc
jne
(bad)
mov
inc
xor
sbb
cmp
pop
mov
(bad)
mov
adc
es
push
(bad)
xchg
mov
fnstcw
pop
adc
mov
pop
les
inc
bound
in
jae
iret
shr
cli
push
jle
or
mov
rol
or
jns
xchg
adc
test
or
fidiv
not
loop
adc
arpl
mul
out
cmps
out
add
sub
ss
data16
in
xchg
outs
repnz
pop
test
mov
aas
push
call
cwde
jg
push
cmp
and
jecxz
sub
mov
rol
inc
das
inc
push
or
mov
or
add
dec
xor
nop
aam
icebp
ja
push
mov
mov
dec
loop
fisttp
aaa
outs
ret
mov
dec
mov
inc
or
pop
mov
cmp
ficom
cmps
mov
fwait
dec
push
stos
fsub
push
jns
xchg
mov
xor
xchg
xchg
push
push
stos
xchg
xchg
jmp
ins
retf
sbb
mov
imul
stos
inc
or
mov
cwde
and
stc
aad
scas
jmp
loop
lea
inc
and
mov
shl
push
mov
pop
or
cmp
stos
fs
mov
xchg
xchg
mov
push
pop
fistp
ins
xchg
sub
test
inc
ret
outs
cmps
cli
cli
inc
movs
push
pop
pusha
shl
cmp
mov
fld
and
popa
cwde
into
add
mov
outs
mul
cmp
ret
ja
daa
out
shr
aaa
std
stos
enter
ss
sub
mov
pusha
jle
mov
int3
cdq
pop
sahf
sub
push
inc
cwde
scas
mov
jecxz
repz
xchg
stc
data16
cld
call
dec
jne
push
mul
scas
ja
sbb
or
dec
mov
bound
jmp
iret
test
mov
push
(bad)
js
(bad)
jae
(bad)
mov
int
out
jg
sbb
sub
or
stc
or
aas
aam
data16
jmp
out
pop
add
sub
loope
lds
mov
jp
ja
pop
fcomp
sub
mov
lods
or
psubusb
push
or
lods
leave
add
int
and
xor
std
sti
sbb
inc
(bad)
jge
das
jb
cmp
sbb
das
mov
daa
push
fimul
xor
imul
jo
pop
leave
mov
or
mov
pop
fdivr
sbb
cmp
popa
outs
pop
and
add
sar
jg
sub
fwait
adc
sahf
pop
sti
add
pop
outs
in
inc
add
jnp
inc
and
cmp
daa
mov
out
pusha
jae
les
mov
fcmovnu
xchg
cwde
and
xchg
push
gs
js
jmp
adc
ja
mov
fistp
mov
xchg
mov
pop
es
rcl
mov
add
popf
xchg
shl
not
popf
(bad)
(bad)
pop
addr16
dec
lahf
adc
jg
(bad)
mov
adc
xor
(bad)
jne
sahf
mov
cmp
out
test
xor
ror
cmp
loope
sub
lahf
loope
and
pusha
repz
dec
jl
sbb
jle
repz
out
stos
mov
dec
xchg
aam
fsub
cmp
test
push
inc
jge
and
pop
into
scas
cmps
loop
iret
pop
push
fs
ja
arpl
fnstcw
adc
push
mov
pop
loopne
call
shl
rcr
daa
xchg
sub
in
and
movs
jp
and
std
mov
dec
or
jo
jnp
movs
mov
cmp
sbb
retf
inc
sbb
dec
movs
rol
sub
jp
in
inc
push
xchg
jle
xchg
sub
movs
hlt
hlt
pop
outs
retf
sub
push
cmps
icebp
jae
push
cmps
jp
adc
mov
mov
jg
add
test
aad
xchg
call
dec
je
inc
jg
ror
pop
ds
mov
cmp
sbb
stos
inc
push
test
xchg
gs
push
push
dec
mov
xor
inc
sahf
or
push
sti
mov
(bad)
sbb
pop
jno
cmps
nop
call
pop
in
cmp
sbb
mov
test
xor
loopne
lea
sub
jmp
and
daa
int
mov
enter
sub
pusha
xor
adc
xchg
jmp
push
xor
dec
stos
test
jecxz
retf
ret
xlat
test
adc
mov
or
loope
test
fist
addr16
popa
mov
(bad)
les
and
pop
jge
xlat
jl
push
loopne
mov
inc
xor
arpl
rcr
xor
mov
nop
add
mov
jl
mov
sub
cmp
or
enter
out
xchg
daa
xchg
mov
rcr
and
jo
shl
outs
xor
or
push
icebp
int
movs
fsub
aas
push
inc
push
inc
xor
(bad)
jns
xchg
jbe
test
outs
ror
push
pop
xchg
xor
aaa
inc
mov
repz
imul
inc
or
ss
jo
push
and
fld
fldenv
stos
fs
sbb
pop
mov
lea
sub
imul
pop
add
xchg
sti
pop
out
into
das
gs
jge
ds
dec
mov
(bad)
movs
pop
mov
(bad)
es
lods
gs
inc
inc
xor
retf
pushf
loope
retf
outs
dec
call
repnz
dec
sbb
popf
cmp
test
ret
inc
rcl
(bad)
mov
mov
cmp
popa
int3
push
fsub
xchg
ja
lods
nop
jnp
ds
inc
outs
imul
and
pop
in
jb
shr
inc
mov
cmp
jmp
sub
push
or
and
arpl
push
cmp
cmps
fcom
mov
jmp
jle
or
jmp
or
loope
ror
mov
xchg
movs
fdivr
inc
retf
call
pop
pop
js
and
sbb
fbld
int
adc
xlat
or
loopne
mov
int
jns
ret
icebp
lahf
test
adc
pop
loopne
(bad)
fst
(bad)
dec
sub
(bad)
fsubr
push
fidiv
add
lods
loope
inc
gs
aas
call
sub
retf
(bad)
pop
lods
dec
and
stos
je
sbb
sahf
or
xchg
cmp
daa
jb
ror
movs
arpl
and
xor
sti
(bad)
out
jmp
sub
bound
loop
imul
adc
cwde
idiv
mov
les
aad
adc
jnp
dec
cmp
or
xchg
ja
std
adc
ret
shl
or
enter
pop
int3
xchg
pop
inc
movs
mov
add
imul
fisub
mov
outs
xchg
xor
xor
es
xor
pop
aaa
into
mov
mov
call
push
cmp
ins
lods
cmp
jo
mov
in
lods
and
lods
mov
scas
mov
loope
retf
stos
xchg
jle
neg
xor
push
add
jo
fbstp
xor
or
int3
dec
sub
stc
mov
push
xchg
scas
push
xchg
and
cmp
sbb
scas
cmc
xor
addr16
ss
jg
int3
jle
sbb
lock
cmp
std
and
rcl
(bad)
jecxz
adc
jmp
cmp
mov
pop
out
xchg
pop
inc
pusha
das
xchg
jmp
aad
add
jb
fxch
mov
jno
mov
cmp
je
ds
dec
clc
inc
inc
addr16
es
int
nop
push
arpl
xor
mov
jnp
repnz
cld
sbb
adc
bnd
xlat
and
hlt
jl
mov
pop
popf
sbb
mov
mov
popa
sbb
or
cmp
push
dec
lahf
cmp
js
pop
ins
loop
fdivrp
fsub
cmp
int
fidiv
imul
retf
bound
xchg
js
sbb
pop
push
int
fmul
dec
pop
jl
add
cmps
mov
xor
ja
jb
and
jnp
out
xchg
(bad)
pop
out
adc
ret
inc
push
leave
loopne
sbb
dec
push
mov
imul
dec
pop
jns
in
mov
mov
lods
inc
adc
data16
and
and
pushf
jne
dec
mov
fnsave
dec
rol
pop
pop
lds
cmps
das
jg
and
cmp
mov
iret
sub
xchg
sub
arpl
ins
ror
data16
outs
outs
leave
mov
xor
out
cdq
retf
and
mov
in
loopne
pop
jle
stos
outs
into
shl
dec
cmps
ins
jmp
jmp
fsubr
ret
bound
out
ja
xchg
stos
mov
pop
add
mov
(bad)
call
out
sbb
ins
leave
push
cwde
loopne
xor
pop
push
out
mov
shl
rcl
or
and
push
stc
inc
cmp
sub
push
sbb
add
mov
popa
push
sbb
stos
and
stos
push
push
sar
cmp
xchg
mov
ret
xchg
(bad)
xchg
sub
or
jl
call
or
test
push
loopne
add
dec
mov
sub
add
xlat
sbb
ror
(bad)
jne
add
fsub
ret
js
xchg
add
sbb
jo
shl
add
mov
mov
mov
mov
icebp
ds
adc
aaa
xchg
xchg
rol
mov
cmps
jp
or
inc
or
and
repnz
mov
iret
ins
inc
std
mov
cmps
pop
lahf
pop
or
pop
and
sar
push
call
push
xor
xor
fsub
mov
sub
cmp
mov
cwde
stc
cmp
mov
cld
ja
sub
movs
icebp
call
mov
ror
popa
out
mov
inc
hlt
test
jge
push
sub
hlt
stos
push
leave
test
mov
ins
mov
jecxz
pop
outs
xlat
(bad)
jmp
arpl
stc
push
out
push
jne
sbb
(bad)
js
push
mov
pop
mov
ja
ss
adc
or
shl
push
or
jno
push
push
cmps
inc
mov
iret
movs
adc
(bad)
sbb
cmp
push
mov
cmp
movs
arpl
mov
pop
cmc
add
gs
jnp
jp
jp
fistp
dec
(bad)
push
jmp
adc
adc
or
(bad)
fldcw
in
mov
pop
xlat
mov
pop
mov
and
jle
fstp
ins
mov
fild
mov
sub
or
xchg
fs
sti
pop
mov
jno
gs
(bad)
pop
inc
and
cmp
sti
xor
push
xor
rcr
fcomip
je
in
fidivr
jnp
outs
out
and
pusha
outs
xor
dec
xchg
in
mov
lods
push
lods
and
jns
mov
push
mov
jne
dec
mov
pop
sbb
fimul
lds
outs
sbb
xchg
stos
mov
mov
out
jmp
fs
stc
mov
inc
mov
jae
cmp
in
in
add
jmp
push
loopne
and
push
movs
or
sbb
popf
dec
xchg
sbb
cmps
es
jo
loope
mov
pop
cmp
sub
or
repz
setb
pop
imul
pusha
loope
shl
add
out
mov
nop
bound
inc
inc
fsub
inc
jp
dec
mov
scas
or
cmp
retf
popf
jg
inc
jnp
cmc
xor
sub
sub
mov
lea
sar
repnz
fisttp
dec
jae
or
fld
lods
rcr
rcl
or
call
jbe
mov
push
sub
clc
or
xor
jno
adc
mov
dec
inc
out
out
call
ds
dec
int
iret
into
xchg
fdiv
int3
inc
pusha
les
lahf
inc
adc
div
movs
add
push
cmp
add
jmp
pop
xchg
fsubr
push
idiv
sbb
push
fs
int
test
adc
loopne
data16
in
mov
jns
pop
push
xchg
lods
mov
icebp
mov
add
add
aas
cmp
and
jp
sbb
out
mov
mov
push
scas
(bad)
shl
sbb
mov
pop
repnz
dec
div
xchg
cmps
mov
push
push
js
lods
xchg
test
pop
aam
jge
jp
or
lods
cmp
push
sbb
cmp
jmp
and
cmp
hlt
jmp
cdq
leave
mov
xlat
xor
fidiv
cli
aad
aaa
ss
dec
xlat
rol
or
call
or
cmps
add
fcom
cdq
int
cmp
aad
or
mov
loopne
or
movs
sub
arpl
ss
mov
mov
(bad)
fsub
xchg
ja
shl
gs
clc
fbstp
clc
push
mul
inc
or
jl
enter
xor
add
adc
imul
pushf
stos
inc
lock
stc
loop
es
cmc
xor
cmps
push
push
xor
dec
fimul
cdq
sub
je
pop
jno
pop
jmp
mov
push
test
pushf
or
out
mov
test
dec
cmp
sbb
jnp
mov
sbb
lods
xchg
pop
fwait
shl
pop
push
or
and
jmp
std
xchg
mov
lods
sub
out
call
outs
ss
loopne
cli
adc
mov
inc
or
add
ins
ret
push
jp
ins
clc
sbb
bound
xor
xor
rol
xor
inc
movs
jne
sbb
aad
movhps
cmp
mov
push
and
sbb
test
inc
xchg
dec
push
push
aad
call
cmc
loop
aam
(bad)
cmp
out
jp
mov
imul
or
mov
sub
popa
push
push
sbb
inc
adc
jmp
sbb
(bad)
jns
clc
mov
fidivr
cmp
outs
lods
out
(bad)
out
adc
cmp
xchg
push
sub
fnstenv
(bad)
call
loopne
loope
cdq
jbe
adc
xor
dec
pop
scas
mov
shl
adc
jle
(bad)
mov
shr
in
cmc
jne
inc
out
sbb
mov
mov
and
adc
cmc
sar
fucomp
jle
and
mov
out
(bad)
mov
jno
push
xor
adc
enter
(bad)
pop
and
loope
jge
inc
mov
adc
jl
les
pushf
and
out
(bad)
mov
fs
and
hlt
rcl
pop
pop
stc
shl
and
in
mov
fadd
sti
cld
push
iret
fist
inc
hlt
popa
(bad)
stos
arpl
les
cld
aas
pop
push
test
add
pop
popa
and
shl
xchg
mov
nop
retf
cli
data16
ret
and
pushf
stos
and
aaa
sbb
std
ficomp
popf
std
sbb
pop
ss
mov
mov
mov
frstpm(287
xchg
movs
sahf
popa
int3
ret
outs
or
ror
xor
mov
out
and
cld
push
dec
inc
mov
xlat
mov
mov
pop
dec
inc
mov
out
(bad)
jp
mov
cld
mov
scas
dec
sub
push
or
hlt
jmp
jmp
xchg
imul
mov
cmp
xchg
movs
xchg
ret
xor
cdq
loope
xchg
(bad)
xchg
or
out
ret
jbe
or
mov
sub
jns
in
sub
dec
retf
retf
pop
retf
xchg
adc
mov
or
int
retf
xor
shl
adc
and
cmp
leave
xor
movs
ss
add
out
in
cli
ins
jg
retf
sar
fmul
cmp
mov
arpl
mov
or
aad
pushf
ret
jl
pop
sbb
push
out
test
out
inc
or
cmps
cli
shl
sahf
and
retf
daa
pop
cdq
je
inc
mov
inc
and
sub
sti
or
mov
into
add
test
xor
(bad)
add
in
push
adc
and
pop
dec
repz
ret
sub
xchg
jnp
and
dec
in
dec
mov
mov
fwait
or
xchg
not
sbb
and
mov
ins
ss
(bad)
arpl
ret
and
or
sub
sub
sub
fidivr
daa
arpl
outs
xchg
hlt
pop
(bad)
icebp
out
daa
pop
loope
outs
mov
lods
add
jle
xor
jbe
mov
pop
loopne
cmp
movs
or
hlt
cmp
mov
mov
cld
sub
xchg
xchg
or
pusha
movs
sahf
and
leave
dec
cmc
fistp
sbb
inc
enter
(bad)
adc
jbe
jns
sub
in
out
push
mov
arpl
add
add
std
jle
sbb
orps
push
sub
sub
nop
fld
xor
sbb
pop
imul
push
fcomip
inc
lea
add
jbe
bound
xchg
adc
xor
ror
jmp
div
retf
aam
stos
fmul
stc
test
mov
ret
mov
lea
popf
xchg
mov
add
mov
add
cmp
pop
ficom
(bad)
das
xor
ror
stos
pushf
inc
mov
cmps
xchg
inc
pop
xor
and
cwde
ds
inc
retf
mov
aaa
adc
pop
ja
enter
pop
cwde
dec
mov
mov
add
clc
and
push
inc
movups
pop
movs
adc
ins
dec
adc
dec
ins
jb
mov
cmp
bound
pop
jne
jmp
pop
xor
jle
adc
xchg
mov
push
cmp
and
repz
dec
xchg
pop
add
movs
mov
ja
lds
fstp
dec
shr
mov
xor
les
outs
stos
jecxz
inc
push
test
mov
cmc
adc
leave
cmp
popf
jo
cmp
dec
cmp
jmp
xor
movs
cmp
lock
(bad)
xlat
ins
xchg
mov
or
or
adc
xchg
pop
out
xor
fwait
les
xchg
cmp
inc
mov
div
(bad)
sbb
dec
das
mov
retf
fbld
push
jecxz
(bad)
jmp
dec
out
add
pop
inc
std
jne
popa
rcl
arpl
fistp
sbb
ret
sar
in
mov
andps
lahf
inc
mov
je
dec
cmp
adc
je
mov
or
adc
aam
ret
(bad)
inc
mov
push
sti
adc
fist
dec
add
or
fmul
mov
mov
jmp
xchg
dec
popa
mov
popf
in
(bad)
sbb
test
mov
mov
adc
mov
inc
mov
lods
inc
sub
rcl
jmpw
lea
sbb
jns
sub
xchg
sub
pop
(bad)
and
mov
je
fldln2
adc
pop
mov
jae
aad
sub
fidivr
call
bound
test
sub
push
and
int
call
mov
lods
pop
ror
mov
xchg
and
hlt
sbb
adc
or
sahf
in
mov
stc
loop
jb
mov
or
or
je
outs
pop
jne
pop
mov
dec
pop
stos
scas
or
xor
sbb
or
cmp
mov
push
mov
mov
sub
mov
leave
mov
xlat
xchg
aad
enter
sub
mul
icebp
data16
dec
dec
std
in
sti
sti
jo
mov
push
xor
pop
(bad)
std
push
inc
jae
sti
sbb
xor
dec
inc
adc
jmp
pop
into
sbb
xchg
js
add
jb
imul
bound
movs
lds
out
data16
dec
inc
sbb
mov
mov
ja
or
imul
or
mov
xchg
frndint
cmovge
(bad)
call
cld
mov
das
xor
sbb
add
push
adc
sti
enter
sbb
aas
sbb
dec
pop
ds
enter
lahf
xchg
mov
(bad)
pop
fisub
inc
clc
inc
or
sbb
and
sub
icebp
add
les
ds
inc
mov
ficom
mov
mov
jnp
xor
pop
clc
add
xchg
sti
loope
sar
xchg
inc
mov
dec
fstp
ja
out
out
jg
movs
mov
cmp
mov
push
or
stc
(bad)
xor
les
jmp
jmp
adc
inc
repz
pushf
mov
loop
in
xor
pop
xor
push
rol
mov
dec
ds
lds
mov
push
ins
inc
xchg
mov
mov
fld
imul
sar
cmps
inc
adc
fwait
imul
aam
cmc
pusha
xchg
push
and
adc
outs
push
ds
add
sbb
pop
in
push
cmp
push
dec
xchg
dec
inc
scas
nop
dec
adc
shl
xlat
lods
(bad)
xchg
je
xor
jmp
mov
add
call
fld
pop
xchg
ja
xor
xchg
movs
push
imul
aad
push
or
jp
fs
shl
pop
add
pushf
push
or
mov
cmps
retf
and
dec
arpl
in
inc
test
lahf
inc
loope
mov
push
nop
cs
sbb
inc
adc
mov
jbe
pushf
iret
lods
jo
cli
imul
arpl
imul
aas
jl
or
push
adc
xchg
cmp
daa
(bad)
stc
xchg
sub
(bad)
mov
push
loope
(bad)
iret
mov
push
sahf
xchg
adc
inc
daa
xchg
mov
sti
lock
fimul
stc
or
dec
adc
ss
loope
fst
cld
jae
in
and
sti
mov
stos
repz
call
loopne
fisubr
in
push
and
mov
mov
push
call
jp
retf
pop
stos
stc
add
cmp
and
in
sbb
retf
push
fdivr
inc
test
push
xchg
inc
icebp
xchg
jb
ret
mov
ficom
mov
(bad)
lea
push
pushf
(bad)
fwait
pop
aam
xchg
jnp
cwde
test
(bad)
xor
xchg
ret
mov
pop
bound
cmovge
ficomp
mov
call
xor
enter
cwde
push
das
cmc
test
enter
or
retf
mov
mov
mov
inc
push
les
js
popf
jae
imul
push
cwde
dec
push
(bad)
mov
aaa
mov
mov
push
fbld
std
jnp
aas
test
and
adc
dec
lods
xchg
mov
add
(bad)
cwde
cmps
pop
push
fsub
mov
int
scas
pushf
sti
pop
jmp
aad
aad
fwait
outs
xchg
into
add
vrcpss
mov
ins
lock
push
push
jle
addr16
mov
mov
jle
mov
push
jl
cmps
mov
retf
fucomi
retf
pop
cld
sub
mov
div
fdiv
mov
retf
pop
ss
or
adc
cwde
sahf
aas
sar
cmps
imul
pop
popa
out
jmp
loope
inc
ja
adc
push
sub
adc
movs
sub
int
popa
call
in
or
stos
push
fcom
mov
pop
pop
fisub
test
mov
add
cs
mov
jnp
out
call
xor
push
rcr
inc
icebp
les
inc
or
push
cmp
sti
sub
(bad)
lock
std
pop
ret
jno
mov
mov
pop
cmc
push
in
fisttp
jmp
push
pop
loop
dec
or
mov
ins
pop
xlat
test
in
lahf
xchg
inc
js
add
ret
jp
xchg
jl
cmp
cld
data16
add
mov
fwait
bnd
or
add
iret
xchg
ja
lea
mov
xchg
scas
xlat
add
(bad)
imul
or
out
inc
xor
rol
(bad)
push
ds
cli
call
gs
mov
pop
(bad)
sbb
and
mov
aad
push
dec
xor
(bad)
into
in
push
ret
xchg
sbb
fs
sub
mov
loopne
pop
cwde
sbb
cli
cmc
xchg
xchg
sahf
test
inc
fsubr
dec
cmps
mov
and
sahf
sbb
sbb
inc
loop
fs
shl
aas
(bad)
inc
imul
popf
dec
mov
jmp
stos
rol
(bad)
sbb
mov
int3
ret
outs
call
in
pop
lock
pop
enter
cs
bound
cmp
sub
mov
inc
dec
out
pop
push
das
mov
xchg
mov
cmps
(bad)
adc
add
xor
mov
sbb
repnz
cmps
mov
jp
idiv
rol
xchg
cdq
jne
and
mov
push
(bad)
mov
xlat
mov
xor
shr
or
dec
pop
mov
hlt
int3
sbb
pop
adc
adc
es
xchg
les
jno
jl
inc
ret
movs
imul
fidivr
mov
lea
push
(bad)
(bad)
sbb
and
push
inc
mov
add
add
pop
mov
and
mov
outs
xor
(bad)
jle
lea
mov
jmp
xchg
gs
imul
inc
mov
sahf
push
push
daa
sahf
movs
adc
movs
sub
sbb
jmp
sub
add
bound
xlat
inc
pop
ret
or
mov
mov
cmp
cmp
sub
enter
repz
js
mov
imul
mov
jle
add
jge
arpl
arpl
inc
fisub
mov
pop
bound
cmp
addr16
or
push
cmps
call
jmp
movs
test
aaa
inc
mul
cmps
scas
push
push
xchg
daa
add
mov
(bad)
int3
xchg
add
xor
jge
sub
adc
sbb
inc
inc
stc
sub
xchg
mov
ins
push
sbb
ror
test
jmp
add
enter
in
and
sbb
mov
cwde
mov
xchg
outs
retf
cmps
ror
addr16
cmp
popf
les
cmp
add
fidiv
test
inc
aad
ret
push
xor
push
call
loop
sbb
mov
in
push
rol
dec
lods
ins
enter
enter
add
adc
idiv
push
inc
inc
(bad)
out
fldcw
loope
sti
fmul
in
sahf
adc
outs
sub
dec
and
test
pcmpgtd
mov
test
test
stos
mov
sbb
clc
mov
pop
les
sbb
test
imul
shl
sub
shr
mov
or
fistp
mov
in
retf
cdq
out
mov
adc
fwait
imul
movs
enter
push
sub
mov
and
sbb
or
ss
stos
stos
cld
mov
ds
aad
mov
das
iret
std
sbb
rcl
pop
in
cmp
cmp
leave
fwait
sub
leave
nop
ja
mov
aaa
lods
mov
push
inc
adc
dec
sbb
push
js
aad
cmps
fst
mov
pop
repz
jge
jae
xor
ds
mov
jnp
push
jnp
push
fist
push
adc
mov
jecxz
mov
out
mov
fst
clc
dec
inc
add
fstp
fimul
in
cmp
mov
pop
push
and
enter
jle
dec
shl
push
cmp
aad
adc
repz
and
mov
jp
outs
call
dec
stos
ja
(bad)
mov
cmp
js
sbb
std
cmp
dec
sub
scas
mov
sbb
movs
mov
les
xchg
xor
ror
hlt
jmp
or
and
sbb
fdivp
ss
jp
popa
ins
xchg
add
push
test
cmp
cmp
out
arpl
mov
les
sbb
inc
and
pop
mov
push
fwait
lods
(bad)
int3
cmps
jecxz
sbb
fadd
jbe
dec
dec
dec
cmps
ins
mov
sbb
adc
shl
test
mov
dec
push
xor
push
xchg
pop
hlt
xchg
cmps
mov
jbe
fsub
cmps
cmp
jecxz
dec
in
aas
sti
(bad)
sar
out
ret
int3
mov
inc
add
mov
sub
adc
loop
rcl
movs
jo
jae
pop
mov
dec
outs
loope
sbb
dec
dec
inc
or
pop
fwait
pushf
add
mov
sbb
xchg
add
pop
cmp
jmp
dec
lock
(bad)
popf
sub
inc
cmc
(bad)
frstpm(287
fmul
jno
mov
pushf
cld
pop
pop
loopne
sti
mov
push
jle
mov
sub
mov
or
retf
(bad)
sub
sti
lea
sub
xchg
popa
xchg
and
sbb
repz
sbb
in
pop
pop
ret
or
sti
mov
stc
cmp
mov
dec
(bad)
idiv
jmp
fistp
xlat
loope
cs
sub
xchg
inc
push
sar
mov
inc
arpl
shl
fnstenv
sbb
sti
rol
sub
push
mov
xor
mov
push
test
enter
push
daa
pop
rcr
push
mov
jp
in
js
rol
rcl
cmp
mov
mov
sbb
ins
sub
mov
xor
sbb
int
out
or
(bad)
and
inc
clc
mul
cwde
and
aas
cmp
adc
cli
jo
ss
test
fimul
jle
dec
cmp
push
(bad)
shl
js
retf
dec
sahf
or
in
in
mov
not
sub
jmp
push
inc
push
sub
outs
pushf
sub
sub
or
push
sbb
xchg
push
(bad)
mov
fwait
int3
imul
ds
xchg
jne
out
mov
add
dec
sub
cmp
fcom
lods
cmp
stc
or
sub
mov
iret
into
(bad)
push
ins
not
jle
sbb
test
xchg
cmp
loope
push
lods
mov
mov
out
mov
(bad)
jbe
int3
cmps
pop
rcr
addr16
fdiv
(bad)
test
repnz
arpl
xlat
cmp
pop
xor
mov
cmp
xchg
pop
enter
aaa
pusha
pop
in
pop
loope
int
cmps
inc
cmp
sbb
xor
inc
mov
fs
fsincos
mov
nop
mov
mov
movs
outs
stc
jns
nop
mov
clc
mov
cmp
or
test
jns
test
xor
sbb
data16
lods
mov
aam
mov
inc
dec
fcomp
loopne
lods
(bad)
jb
fild
xor
cmp
cmp
sub
shr
lods
xchg
loop
and
aas
cmp
dec
loope
cs
in
js
hlt
pop
sub
pusha
push
nop
xchg
pop
stc
sub
out
push
mov
inc
mov
push
neg
cld
xchg
pop
(bad)
xchg
cli
daa
mov
test
icebp
cmp
popf
xchg
je
stc
xchg
cmp
xor
lods
ins
dec
mov
in
ins
fidiv
cwde
push
pop
aas
mov
sub
fisttp
div
inc
mov
aaa
fisubr
scas
sbb
mov
mov
push
rol
sub
sub
ret
mov
in
fnstcw
enter
xchg
xchg
mov
fldcw
and
mov
xchg
and
adc
imul
sbb
movs
fs
pop
cwde
xor
xchg
das
int
mov
sub
push
adc
popa
rol
push
jno
cmp
push
std
inc
stos
and
sub
addr16
mov
sbb
lahf
push
ins
(bad)
mov
arpl
or
gs
cdq
mov
mov
hlt
inc
dec
nop
js
std
loop
pop
aam
imul
mov
jecxz
add
in
test
mov
add
sbb
adc
dec
mov
mov
sub
and
adc
add
daa
xor
idiv
xor
mov
or
pop
fnsave
adc
cmc
inc
stos
jb
add
dec
xchg
neg
popa
xlat
jae
jae
ret
pcmpeqb
popf
push
sahf
jns
mov
mov
pushf
lahf
push
test
dec
dec
std
lahf
adc
jecxz
push
jle
repz
fisttp
add
sub
test
push
mov
je
cmp
inc
push
sub
dec
scas
arpl
les
retf
xchg
pop
or
hlt
xor
mov
push
lods
fwait
inc
call
scas
in
imul
pop
dec
mov
dec
and
std
mov
outs
sbb
dec
retf
(bad)
mov
mov
dec
shr
retf
sub
mov
ret
mov
call
in
lods
xor
test
xchg
cmp
adc
sbb
outs
lock
jl
aam
retf
mov
jg
mov
fnstcw
pop
or
fcomi
popf
out
adc
xchg
arpl
xchg
mov
and
movs
mov
pop
aam
fs
cmc
retf
aam
xchg
xor
outs
mov
repz
and
xor
mov
or
dec
lds
jg
cmp
aad
mov
pop
in
data16
fmul
jmp
jp
xchg
pop
inc
mov
scas
jnp
inc
imul
mov
xchg
mov
ret
mov
xchg
rcl
jo
repz
dec
mov
dec
ret
xchg
adc
cwde
mov
jecxz
xor
xchg
call
mov
fxch
popa
dec
movs
pop
mov
inc
pushf
sub
clc
add
and
mov
inc
adc
cmp
daa
push
and
lock
in
push
jae
xchg
(bad)
xchg
(bad)
sbb
ret
and
add
aad
test
lock
cli
add
ret
nop
jl
and
sub
sar
jne
jnp
pop
psubsw
dec
es
je
xchg
jl
adc
ret
(bad)
repnz
sbb
test
int3
inc
push
jno
in
fldpi
add
call
fst
pop
cmc
(bad)
popf
jg
call
mov
sub
push
pop
or
mov
ja
push
add
xchg
clc
addr16
pop
into
lds
icebp
and
or
xor
jno
enter
pop
int3
adc
push
movs
xabort
push
loope
je
mov
adc
sub
ds
cwde
rcl
dec
addr16
dec
pop
les
fiadd
loop
cmp
pop
add
lods
out
push
xor
pushw
xchg
push
imul
ficomp
stc
daa
inc
pop
xacquire
fild
test
call
(bad)
mov
sub
popf
cs
pop
fsubr
(bad)
or
mov
adc
lods
inc
test
and
repnz
and
stos
dec
fmul
(bad)
stc
rcr
dec
adc
push
inc
or
jle
mov
jge
ins
pop
mov
bswap
cmc
dec
push
clc
push
nop
pop
mov
xchg
mov
mov
dec
and
jle
sub
inc
stc
mov
(bad)
adc
add
ret
and
dec
sub
shl
movs
nop
add
cmp
dec
mov
mov
sub
adc
xchg
xchg
sbb
pop
push
add
cmp
les
adc
movs
push
push
mov
fild
cmp
call
lds
ins
jge
mov
mov
xchg
and
pop
dec
xchg
jne
(bad)
enter
ficom
dec
add
js
dec
sti
inc
imul
hlt
or
xor
mov
mov
out
cld
(bad)
fld
jg
rcr
fdiv
sbb
mov
out
or
dec
xchg
xchg
std
mov
mov
stos
jle
ret
push
ud1
call
mov
rol
mov
ins
pop
inc
xchg
je
lock
cli
and
movs
shl
pop
inc
adc
cdq
mov
inc
sti
daa
ret
xor
cmp
popf
mov
test
inc
add
das
xchg
jb
inc
push
adc
ja
mov
stos
(bad)
scas
sub
les
shr
adc
or
ror
lahf
xchg
sub
cmp
add
bound
xor
je
sub
and
shr
ins
xor
pop
or
cmps
leave
int3
inc
fucomp
adc
movs
xchg
outs
push
icebp
outs
popf
mov
call
inc
mov
fistp
inc
mov
mov
xchg
mov
iret
add
rcl
mov
sbb
jnp
cmp
das
add
call
mov
pop
sub
vpackuswb
call
jo
mov
jmp
push
or
cmp
sub
test
arpl
pop
inc
sbb
loopne
inc
mov
jge
sbb
mov
xchg
and
dec
mov
add
daa
mov
cmps
mov
sbb
stos
cmp
pushf
push
jnp
or
and
gs
mov
adc
stc
pop
mov
jb
sub
adc
icebp
addr16
and
sbb
mul
or
push
movs
(bad)
std
xchg
jae
frstor
mov
movs
xchg
sbb
cs
lahf
adc
repz
sbb
push
in
(bad)
xor
dec
xchg
add
pop
gs
test
mov
loopne
or
mov
test
(bad)
adc
sar
(bad)
popa
mov
pop
dec
inc
jo
rcr
mov
xchg
lahf
loopne
mov
pop
out
mov
sbb
movs
add
mov
jbe
jge
daa
jae
jmp
mov
mov
pop
adc
ja
mov
and
fld
out
popf
sub
gs
jge
jb
dec
xlat
push
test
cli
js
pop
mov
sbb
in
cdq
sbb
push
or
shr
push
cmps
jo
retf
ja
jcxz
call
inc
sbb
xchg
sbb
or
adc
das
enter
test
rcr
in
in
push
fist
ds
and
js
or
mov
mov
iret
mov
mov
mov
enter
mov
xor
mov
jo
cmps
call
push
repz
lahf
ins
out
mov
gs
test
dec
loop
movs
(bad)
cmps
mov
inc
push
and
mov
les
jne
mov
rcr
lods
pop
or
mov
mov
imul
nop
in
ins
dec
and
sbb
fadd
aas
stos
jg
hlt
ret
add
mov
mov
push
outs
adc
retf
sbb
pop
ds
addr16
fistp
sbb
(bad)
int3
in
fld
and
dec
push
mov
repnz
and
xor
addr16
pop
xchg
mov
out
inc
call
cmps
push
xchg
xchg
fiadd
push
jne
call
cmp
aad
add
pop
addr16
dec
int3
push
and
inc
push
bound
sbb
test
fs
(bad)
out
movs
dec
adc
pop
scas
xchg
or
inc
adc
outs
in
aas
je
mov
test
(bad)
sub
std
(bad)
not
out
push
lock
xchg
call
inc
daa
push
jno
sub
dec
cs
frstor
(bad)
fbld
mov
jno
mov
pop
aaa
inc
test
dec
(bad)
movs
jnp
in
mov
cmp
push
pop
add
nop
pop
mov
pop
xchg
mov
mov
adc
out
xchg
mov
push
jge
fcomp
ds
and
add
(bad)
std
mov
mov
inc
add
cmps
in
int
leave
sub
sub
dec
sbb
add
or
ds
out
enter
in
leave
ja
scas
mov
test
stos
mov
inc
lock
fsubr
aam
in
add
xor
mov
ret
mov
mov
sub
push
bound
sbb
fldz
xchg
fmulp
inc
cmp
push
icebp
imul
inc
jmp
xchg
ins
inc
mov
out
test
test
and
daa
ja
jbe
sahf
pop
jge
inc
and
shl
(bad)
out
push
mov
inc
xor
bound
fcomp
jb
xchg
cmp
cdq
int
push
mov
push
arpl
mov
inc
ret
inc
and
and
outs
cmc
jmp
mov
push
loopne
ss
and
sub
add
cmc
fdivr
stos
iret
call
push
aad
cdq
jns
ret
mov
and
xchg
ins
jp
mov
add
add
mov
inc
adc
shl
std
mov
and
and
jnp
sar
and
xchg
iret
jno
add
mov
(bad)
in
stos
lahf
cmps
cmps
movs
sbb
and
enter
mov
sbb
inc
clc
pop
and
and
dec
mov
inc
sub
xchg
xor
pop
gs
xor
adc
clc
retf
jmp
mov
nop
aaa
cmps
aad
stc
sbb
test
fisub
sub
stc
jecxz
ret
loop
jmp
add
mov
sbb
test
mov
cld
mov
sbb
push
pop
cmp
mov
jno
out
out
jne
sub
mov
pop
jg
aaa
push
pop
inc
scas
xor
div
lods
mov
inc
int3
or
pop
mov
jmp
mov
ud1
jle
mov
ss
es
cwde
or
rcr
mov
and
imul
or
call
leave
ins
ins
out
mov
adc
mov
cmp
hlt
or
xchg
ins
jae
xlat
xchg
push
idiv
in
aam
mov
pop
adc
out
cmp
int3
xchg
or
sub
cdq
ret
pop
(bad)
test
push
fadd
ret
ja
imul
(bad)
xchg
test
pop
ss
push
xchg
pop
push
pop
pop
pop
mov
imul
neg
cmp
mov
ret
push
in
cmp
sub
adc
xor
lds
imul
repz
ins
mov
and
cmp
dec
mov
call
fwait
mov
add
ds
in
adc
loop
pop
ret
xchg
icebp
jb
jnp
add
lahf
stc
mov
(bad)
mov
push
(bad)
mov
sub
xchg
jg
test
sub
int
repnz
mov
ss
mov
pop
loopne
mov
loop
pop
pop
outs
mov
add
movs
in
lahf
in
(bad)
dec
sti
pop
shl
or
mov
ret
cwde
or
imul
scas
ins
out
jo
mov
push
adc
retf
popf
pop
imul
ret
std
jmp
mov
xor
cmp
ins
nop
(bad)
faddp
inc
jp
rcl
pop
inc
dec
xor
pop
push
mov
js
ret
push
adc
or
sub
fs
and
cli
push
retf
add
pop
sar
pop
je
pop
push
sbb
sub
call
mov
in
arpl
mov
emms
cmp
adc
in
mov
fs
mov
adc
stc
push
aam
out
shl
jbe
loop
jae
push
sti
iret
lds
jae
outs
aam
sbb
not
cmp
repz
adc
int
mov
xchg
int
sar
ror
sar
cmps
loop
loopne
lods
imul
mov
xchg
pop
nop
stc
sub
not
mov
rcr
bound
pop
xor
sti
dec
mov
dec
ins
mov
inc
push
sub
lahf
dec
xor
mov
jb
adc
push
jp
adc
mov
add
mov
push
inc
jge
jae
scas
sbb
mov
mov
sub
rcl
ja
inc
xlat
add
fs
ret
sbb
in
pop
mov
xchg
xchg
in
test
inc
pop
popf
pop
mov
add
jmp
and
aas
ja
test
mov
scas
inc
and
push
aaa
out
dec
xchg
jne
lock
xchg
fidivr
add
fcomp
lahf
push
sbb
dec
dec
xchg
rol
dec
jecxz
adc
enter
popf
fs
cli
pop
xchg
pop
mov
jmp
inc
outs
or
lds
jge
xchg
out
nop
sbb
mov
or
and
xchg
shl
bound
ins
ret
xchg
jo
les
mov
das
mov
in
dec
mov
push
mov
out
fdivr
dec
push
push
pop
out
sbb
pop
mov
mov
mov
retf
jnp
jnp
jae
pop
and
jno
js
inc
jo
push
inc
pop
xor
fucomi
loope
xor
rcl
jp
xchg
shr
jnp
(bad)
loop
inc
cmc
sbb
fucomi
and
mov
arpl
jae
inc
(bad)
pop
pop
xor
in
cmp
push
lea
imul
cs
pop
jb
inc
test
sub
pop
sub
jp
movs
sub
lea
adc
ja
aam
pop
sti
adc
out
xchg
cwde
imul
test
sti
mov
movs
ins
lds
test
xor
inc
mov
inc
xchg
stc
mov
or
sbb
lods
pop
adc
xchg
jge
inc
push
ficom
call
push
dec
stos
out
div
data16
mov
jmp
test
iret
fwait
clc
test
add
push
pop
stos
ins
sbb
or
add
push
push
mov
xchg
jmp
mov
jp
sub
cmp
out
xchg
mov
mov
mov
aaa
jg
cli
and
dec
cmps
xor
add
add
lods
bound
leave
xor
fld
jg
adc
jne
cli
ror
iret
sub
xor
loopne
jb
mov
aam
cmps
arpl
dec
imul
push
fstp
xor
add
lds
xchg
push
(bad)
test
in
and
jne
pop
movs
popa
jae
mov
add
push
ins
es
cmps
test
inc
xchg
cmp
in
sub
stc
mov
arpl
fsubr
arpl
unpcklps
scas
mov
xchg
adc
sbb
push
cmc
adc
mov
repz
mov
sub
mov
test
xchg
adc
push
mov
ret
add
in
xor
inc
aas
cmps
mov
stos
fcmovne
imul
stos
scas
loope
jg
sub
jbe
xchg
in
enter
cmps
sbb
xchg
add
loop
xchg
and
jb
push
retf
cmp
js
(bad)
sbb
scas
sar
js
jns
push
jp
mov
imul
lock
push
in
mov
imul
jg
pop
sub
xchg
arpl
fimul
xor
push
leave
adc
repnz
sub
mov
loopne
jg
jae
out
inc
aad
stos
pop
lds
mov
stos
repz
mov
push
loope
xchg
std
push
pop
cmps
jo
adc
jle
pushf
jp
bound
bound
add
pop
int
or
shl
pop
jne
push
pop
leave
mov
fmul
sbb
dec
add
dec
xchg
mov
mov
cmp
mov
test
ret
or
rol
stos
sub
and
add
xchg
mov
push
mov
out
mov
dec
sub
push
push
or
add
stos
nop
mov
mov
ret
fsub
test
mov
mov
popf
ror
pop
je
jg
mov
aam
mov
movs
jmp
cmp
imul
repnz
add
call
push
pushf
xchg
xchg
adc
lods
mov
outs
imul
mov
jb
outs
adc
mov
mov
jle
bound
dec
imul
and
inc
mov
add
jb
enter
mov
mov
pop
leave
jno
inc
iret
fadd
or
pop
mov
push
inc
std
inc
xchg
into
add
aaa
es
popa
and
push
dec
clc
outs
cwde
xor
imul
mov
outs
lods
mov
xlat
lods
cmp
mov
mov
je
xchg
jne
mov
repnz
movs
ret
movs
in
add
xor
push
dec
xor
and
in
mov
mov
jl
adc
(bad)
cmp
pop
mov
out
cdq
cmp
cmp
xlat
std
fidivr
fwait
scas
jle
cli
stc
inc
jle
mov
add
pop
xchg
xor
mov
fdivr
push
add
div
ror
fnsave
mov
dec
fcom
sti
xchg
mov
idiv
sbb
or
frndint
jnp
and
into
sub
dec
mov
(bad)
(bad)
cld
clc
mov
repnz
ss
inc
cmp
mov
inc
imul
fld
and
or
out
stos
fidiv
push
and
repnz
push
adc
pop
pop
dec
scas
adc
mov
loope
push
pushf
scas
les
jl
cmp
adc
retf
xor
(bad)
dec
mov
pop
fadd
add
(bad)
mov
jl
(bad)
mov
add
stc
xchg
push
push
and
test
inc
push
and
gs
mov
je
aad
cmp
or
ret
dec
retf
es
es
xor
dec
shl
fadd
mov
sub
lock
sub
mov
jne
ret
jae
ins
clc
cmp
mov
jle
cmps
dec
sub
xchg
lods
sub
jmp
mov
loope
lea
hlt
fbstp
test
pop
and
jns
push
push
dec
in
pop
arpl
js
popf
cmps
jmp
and
sbb
adc
out
dec
mov
mov
mov
inc
dec
push
pop
outs
sub
inc
cmp
test
xchg
pop
add
sbb
dec
out
xor
jno
jne
mov
add
dec
pop
int
pop
cdq
inc
imul
cmps
mov
aas
jge
inc
or
mov
enter
fiadd
jae
fidiv
push
sub
aas
adc
out
ds
mov
push
es
and
imul
shr
mov
mov
mov
leave
xor
in
cmps
aad
push
adc
cmps
dec
inc
sbb
movs
sbb
call
mov
arpl
fs
adc
(bad)
and
pop
sbb
mov
fistp
mov
inc
push
xlat
cli
hlt
fxch
movs
retf
adc
push
mov
or
nop
dec
sub
aad
mov
leave
in
lahf
push
test
jo
shl
cmp
mov
mov
dec
shl
out
mov
mov
dec
das
call
push
repnz
mov
xchg
and
adc
jecxz
sub
xchg
dec
push
fstp
cwde
sub
ficomp
dec
xor
jae
retf
stos
popa
addr16
call
shl
and
jecxz
hlt
sub
ror
aaa
mov
jnp
retf
cs
arpl
adc
ret
jle
jns
sub
std
cmp
movs
inc
and
cmc
aas
xor
mov
cmc
add
jmp
adc
call
sbb
add
or
mov
stos
dec
mov
ror
test
sub
mov
mov
cs
js
test
aam
cmp
mov
xor
or
or
cwde
(bad)
mov
push
jno
popw
data16
js
lahf
and
and
push
loop
push
and
dec
gs
popf
dec
xlat
std
jns
pop
cmp
mul
and
xlat
hlt
adc
jmp
je
xchg
pop
adc
cmp
mov
mov
add
jo
pop
aad
adc
jge
sub
mov
scas
add
lea
int
push
mov
fdiv
mov
aaa
fisub
lods
lods
pop
ret
jno
inc
sti
and
xchg
into
out
cs
mov
icebp
push
adc
adc
arpl
xchg
popfw
mov
xchg
test
fisttp
mov
sbb
mov
fwait
cld
cmp
dec
jb
sbb
push
xchg
or
outs
adc
or
fisub
shl
adc
xchg
imul
xor
clc
mov
mov
stc
dec
inc
imul
xor
sub
retf
pop
test
mov
gs
out
mov
in
int
jae
movs
pop
cmc
inc
outs
int
retf
mov
sti
int3
fwait
push
out
push
sub
retf
inc
xchg
sub
xchg
mov
mov
mov
cmp
imul
ins
jp
cmp
popa
ins
adc
fiadd
xor
and
out
aas
xor
adc
xor
add
stos
leave
mov
fisubr
mov
push
inc
retf
arpl
mov
pop
repnz
retf
and
mov
hlt
shr
out
(bad)
jmp
fcom
or
iret
in
xor
cmp
mov
mov
jb
scas
bswap
pop
dec
cs
cmp
xor
pop
mov
adc
ja
push
dec
les
pop
inc
jge
jns
mov
and
fild
inc
mov
loope
jno
neg
add
add
and
mov
push
sub
jno
lock
mov
(bad)
adc
scas
mov
mov
test
push
xchg
sbb
in
rdtsc
sbb
inc
sbb
pop
adc
movs
jb
dec
aaa
pop
jg
aam
xchg
int
push
ret
adc
mov
inc
loop
(bad)
call
xor
sar
mov
js
sub
xchg
xchg
cld
sub
call
mov
sbb
pop
call
cmc
stos
test
xlat
ficom
lea
fnsave
dec
test
mov
sbb
xchg
adc
push
sbb
and
jb
xchg
or
and
dec
jecxz
and
inc
fisub
push
jecxz
pushf
inc
dec
pop
dec
bound
pop
mov
pop
xchg
ds
in
test
cmps
jb
jmp
sub
dec
nop
adc
xor
movs
dec
push
outs
add
inc
rcr
loope
lds
dec
fwait
pusha
ss
ret
mov
rol
inc
loop
repnz
rol
add
and
xor
in
stos
xchg
dec
jo
sbb
lds
xchg
mov
cmps
ins
in
and
pop
test
xor
cmp
bound
shr
xlat
push
adc
mov
cmp
and
ja
push
scas
cmp
pushf
(bad)
repz
cld
xchg
inc
out
mov
call
call
nop
push
imul
adc
lds
sub
psubusb
jl
pop
das
dec
or
xor
dec
cli
ss
stc
mul
test
in
jl
sub
sti
and
sahf
cdq
sbb
cmps
in
xor
pushf
adc
xchg
xchg
jbe
adc
and
sbb
mov
and
jecxz
jp
sub
or
xchg
cmp
sbb
in
mov
xchg
cmps
imul
cli
ja
(bad)
and
ficomp
icebp
add
out
and
js
test
xor
and
xlat
sbb
lods
sub
mov
sbb
scas
mov
jo
js
fwait
or
in
mov
push
mov
inc
gs
das
pop
mov
pusha
mov
retf
nop
(bad)
jmp
stos
mov
cmc
pop
xchg
mov
or
call
test
shr
movs
loope
sbb
pop
adc
adc
inc
aad
xchg
add
push
scas
cmp
push
push
hlt
test
mov
push
ds
enter
lock
pop
gs
sbb
sub
into
mov
xor
dec
in
mov
scas
into
aas
inc
cld
mov
mov
jns
add
stos
sbb
stc
nop
aam
out
jo
inc
les
jmp
cmp
jge
ds
enter
lahf
adc
fcmovnb
or
movs
mov
fsub
sub
and
mov
mov
cs
inc
and
mov
lea
loop
(bad)
sti
push
(bad)
sub
push
scas
mov
or
cmpxchg8b
cli
or
stos
sti
fbld
fstp
test
and
xor
fimul
sar
and
retf
jge
arpl
mov
push
pop
sar
jge
movs
hlt
mov
loopne
and
popa
mov
inc
jmp
mov
xor
pop
cmp
sub
aam
jecxz
mov
je
(bad)
xlat
sar
pop
push
mov
adc
inc
jne
aaa
dec
fadd
xchg
shl
cmp
shr
jbe
ds
mov
rcl
pusha
sbb
mov
test
jg
scas
mov
fidivr
push
ror
test
in
aaa
jne
jns
mov
int3
cmp
test
loop
sub
cmc
mov
test
int3
sbb
ins
xchg
dec
push
sub
out
retf
cwde
movs
xlat
sub
(bad)
mov
lds
ror
stos
xlat
push
add
mov
nop
daa
jg
movs
loop
not
and
push
add
mov
inc
xlat
das
int
loopne
push
leave
bnd
nop
cmp
xor
mov
cld
es
push
rcl
enter
call
jbe
lea
or
jl
cmp
dec
repz
pop
mov
popa
cdq
mov
push
inc
ins
and
sub
leave
mov
scas
jmp
imul
or
call
addr16
imul
jnp
test
pop
sub
push
pop
pop
jo
or
shl
inc
mov
inc
jo
inc
and
adc
add
out
jae
dec
add
dec
sbb
test
mov
int
dec
sbb
std
jl
add
es
dec
mov
sbb
xchg
inc
inc
sub
xchg
imul
xchg
push
fcmovnbe
aaa
jb
imul
movs
mov
and
jp
jl
cmp
mov
and
cmp
jo
repz
cmp
pop
sar
sbb
mul
push
ror
hlt
sti
data16
or
mov
dec
scas
or
loope
mov
test
lahf
mov
aaa
out
popa
imul
movs
cli
add
xor
mov
mov
popa
dec
dec
mov
movs
pop
pop
or
in
sbb
lds
call
fwait
cmp
xchg
inc
jno
js
fisub
call
adc
mov
mov
inc
sahf
sub
push
push
in
(bad)
pop
cmps
test
sbb
or
jmp
mov
sub
add
mov
sbb
in
jmp
clc
les
push
jl
dec
sbb
xor
scas
shl
or
jnp
call
inc
ret
mov
push
mov
not
addr16
push
aas
sbb
(bad)
(bad)
inc
dec
imul
into
addr16
fist
pop
popf
dec
shld
leave
xchg
movs
ret
xor
jo
or
popa
mov
repnz
mov
jle
aam
loopne
dec
add
ins
jo
loope
fldpi
out
rcr
and
test
scas
pop
test
call
in
jmp
inc
sub
aaa
movs
arpl
cmc
out
inc
push
jl
fbld
sub
xchg
std
jo
call
dec
scas
push
xchg
in
lea
in
fldenvw
ds
data16
mov
loop
jo
adc
jle
loop
xchg
ins
xchg
jb
push
mov
mov
jecxz
lods
je
fisttp
lods
loope
pushf
sti
pop
cmp
or
imul
mov
and
xor
xchg
push
fistp
sbb
scas
(bad)
ins
fidiv
mov
jmp
mov
adc
out
dec
mov
ret
dec
fs
inc
out
lock
jmp
dec
jecxz
xchg
stos
mov
push
pop
stc
es
cwde
push
dec
es
out
leave
imul
mov
dec
lock
inc
iret
cmps
mov
add
in
xor
jbe
push
mov
imul
mul
push
call
shl
jle
fs
cmp
jae
fisubr
aad
jge
retf
ss
or
mov
xor
adc
addr16
mov
into
mov
ret
or
jg
dec
or
ja
popa
mov
out
out
mov
ret
sbb
add
daa
push
jmp
call
pusha
sbb
jne
in
dec
ins
mov
ins
lea
sbb
jnp
or
and
das
out
mov
add
add
or
mov
in
lods
aas
in
adc
fsubr
add
add
dec
cli
and
cs
stc
stos
mov
mov
icebp
lahf
cli
xchg
popf
xchg
push
pop
dec
adc
xchg
mov
sub
cmp
adc
hlt
pop
test
push
ror
and
movs
fmul
pop
xchg
jae
nop
push
inc
shl
xchg
std
jno
idiv
pop
sub
jo
jbe
add
or
fbstp
or
js
push
cli
shl
lea
or
retf
scas
imul
lods
bound
cmp
imul
dec
lea
xchg
ret
xor
dec
xchg
jnp
call
aas
inc
cld
or
movs
nop
push
or
pop
in
mov
mov
je
rcr
adc
cmp
enter
es
sti
pop
push
jge
outs
mov
mov
jne
sbb
mov
mov
gs
fsubr
and
test
xor
xchg
add
jl
mov
test
sbb
retf
push
pop
inc
sub
pusha
(bad)
push
mov
int
(bad)
and
lahf
mov
jne
jne
pop
into
fsub
(bad)
mov
jmp
jle
push
test
sub
cmc
xor
mov
es
lock
loope
sub
call
cmp
sbb
sbb
data16
pop
outs
mov
xor
mov
jecxz
mov
sti
adc
sub
mov
push
stos
(bad)
aaa
(bad)
ret
inc
addr16
cld
adc
jmp
or
fst
mov
add
jg
mov
sub
je
sub
cwde
test
loop
mov
rep
pop
ins
and
cmp
xor
dec
movs
ret
cwde
mov
jo
hlt
popa
jl
ss
pushf
outs
imul
test
sub
push
jns
mov
pop
mov
std
pop
pop
add
fistp
push
push
xchg
sbb
outs
aaa
cmp
pop
mov
ret
clc
mov
inc
lds
dec
jno
scas
(bad)
lock
nop
xor
mov
cmp
jg
rcl
adc
lea
dec
fist
arpl
push
les
add
mov
add
cwde
mov
sbb
pop
lock
mov
sbb
fldcw
ins
pop
mov
xchg
popa
lds
sahf
xchg
outs
jno
sub
add
jmp
push
sub
int3
mov
outs
xor
cdq
pop
add
cmp
inc
xor
fldenv
push
jl
mov
mov
imul
jae
pop
mov
add
jae
outs
xor
test
sbb
pop
jae
xchg
sub
test
add
jo
jle
pop
xchg
movs
inc
cdq
mov
test
ins
mov
add
call
pop
dec
push
dec
enter
in
jmp
ins
cmps
and
ret
push
pop
test
imul
or
sbb
dec
jmp
mov
outs
arpl
(bad)
enter
aas
push
mov
retf
jne
cwde
mov
mov
sar
sub
jns
repnz
and
sahf
mov
sub
js
jg
imul
and
(bad)
ja
pushf
xor
out
lock
hlt
test
mov
and
mov
sub
test
in
jmp
and
pminub
ret
sahf
sub
add
cmp
pop
mov
dec
dec
pop
xchg
ds
lahf
and
push
xchg
aaa
retf
test
imul
test
xor
loope
in
sub
mov
push
dec
cmp
cdq
stos
mov
jmp
pop
push
mov
cs
adc
outs
mov
mov
pop
movs
in
loop
push
daa
ret
adc
sub
out
push
xchg
mov
popf
call
cmp
inc
out
sub
xlat
xor
fwait
jb
imul
lock
movs
(bad)
xchg
xor
jmp
aaa
add
cmps
dec
fxam
mov
jmp
jbe
ins
sahf
jmp
jne
mov
sbb
lods
jb
adc
dec
adc
mov
push
outs
leave
lods
and
jmp
adc
mov
add
dec
mov
ret
mov
mov
cmps
mov
cmp
out
mov
repz
test
sub
in
cmp
(bad)
jg
xchg
jmp
pop
inc
sahf
repz
xor
ror
add
or
gs
out
push
ret
cmp
mov
in
dec
cmp
rcr
pop
fcomp
movs
fisub
or
cli
test
or
push
adc
ret
and
stc
push
fild
push
adc
popf
test
sub
jno
out
popf
cmp
or
in
add
loopne
lods
je
push
pop
jbe
fidiv
lahf
mov
ror
lock
mov
and
inc
movs
sti
in
cmp
mov
fsubr
adc
ss
lods
pusha
arpl
jecxz
push
mov
add
or
push
add
retf
inc
mov
jle
loope
(bad)
add
or
jne
mov
ss
adc
sub
pop
sub
xor
jmp
dec
adc
push
xor
bound
cmc
fstp
xor
inc
mov
das
enter
and
and
dec
add
dec
movs
das
and
pop
out
mov
int
fistp
bound
scas
jb
data16
pop
aam
lods
aam
push
ficomp
pop
aam
mov
mov
or
lock
hlt
jae
int
pop
mov
test
jl
mov
push
xchg
or
add
pop
out
lea
pop
jmp
inc
mov
push
sbb
sti
sub
xor
(bad)
in
mov
adc
icebp
arpl
jmp
ss
add
mov
xchg
shr
or
lods
pop
enter
in
pop
aam
adc
dec
(bad)
fld
pushf
mov
sbb
mov
jnp
inc
push
inc
mov
mov
dec
fs
dec
fbld
xchg
xchg
repnz
aam
inc
stos
sub
hlt
cmp
je
clc
in
lods
adc
movs
sub
data16
(bad)
pop
(bad)
xchg
dec
mov
or
adc
ins
or
mov
jae
jge
dec
(bad)
call
pop
adc
lahf
sub
retf
and
dec
push
sub
adc
shl
sub
retf
cs
shr
jl
std
rol
cmp
js
pop
aam
jmp
frstor
in
sub
pop
and
(bad)
fstp
int
imul
data16
lods
test
xchg
xor
test
sub
dec
into
(bad)
mov
fld
ret
jno
and
pushfw
popa
cmp
xchg
movs
add
stc
sbb
cmps
out
jg
add
movs
cmp
js
add
inc
and
push
shl
sub
imul
mov
pop
and
push
shl
sub
inc
movaps
daa
and
inc
addr16
mov
es
(bad)
push
(bad)
retf
je
and
mov
sub
or
dec
out
pop
and
jb
mov
repnz
mov
sub
nop
or
loop
jns
mov
sbb
xchg
adc
push
(bad)
sbb
jb
imul
xor
jo
add
repz
pop
jl
sti
push
mov
inc
lds
cmp
cmps
mov
arpl
lods
in
mov
repz
pop
cwde
cdq
ins
aam
sbb
adc
fnstsw
and
aad
cmp
(bad)
aam
clc
jge
rol
fisubr
fisttp
jle
leave
movs
pop
scas
(bad)
int3
shr
retf
jns
lea
ret
mov
xor
xchg
ds
sub
xor
mov
dec
(bad)
adc
fnstenv
and
leave
aam
xchg
adc
add
ret
retf
hlt
cmp
pusha
add
cmps
test
(bad)
icebp
daa
or
adc
sub
into
cmp
jns
adc
sar
mov
dec
pop
pop
cmp
xchg
call
xor
inc
icebp
adc
pop
movs
cmp
stos
mov
jno
mov
pop
jge
pushf
mov
pop
pop
out
mov
and
jmp
inc
test
call
push
or
mov
mov
out
retf
jnp
add
dec
sbb
loope
mov
mov
push
xor
jle
mov
xchg
data16
pop
sub
ret
hlt
in
sbb
and
in
loop
ror
(bad)
fs
test
fcmovnb
out
mov
add
je
aad
das
arpl
aaa
push
fwait
enter
dec
mov
push
push
mov
iret
adc
and
test
mov
iret
in
call
mov
add
jo
push
mov
or
sub
push
pusha
push
adc
cmp
icebp
data16
outs
outs
mov
addr16
(bad)
mov
adc
ss
xor
pop
push
clc
aas
add
and
inc
cmp
xor
xor
inc
in
addr16
pop
mov
out
(bad)
cmps
jae
jo
mov
(bad)
adc
mov
lods
(bad)
add
(bad)
mov
in
adc
push
xchg
or
imul
sub
xor
(bad)
jne
(bad)
(bad)
movs
and
call
cmp
loopne
cwde
sbb
sti
lahf
or
xchg
jno
add
popa
add
cld
syscall
push
xchg
fisubr
leave
sbb
jge
mov
and
into
or
pop
stos
fbstp
hlt
pop
dec
jmp
mov
stc
jns
ja
fwait
lods
mov
std
xchg
hlt
ja
cwde
test
mov
stos
adc
out
mov
xor
fwait
sbb
cmc
push
lods
sub
xor
jle
pop
pop
shr
cmp
loop
ds
xor
les
sbb
mov
data16
in
push
mov
pop
xchg
xchg
dec
mov
cmp
test
or
xchg
sub
mov
popf
fcomp
pusha
(bad)
push
fwait
sub
(bad)
out
pop
ror
popa
adc
fstp
cld
mov
dec
dec
and
shl
movs
xchg
or
and
icebp
outs
cmp
jge
push
imul
jg
iret
arpl
call
test
dec
pop
mov
stos
int
int
xor
ins
(bad)
mul
fbstp
cmp
inc
jnp
jnp
jnp
xchg
shl
sbb
ficomp
loop
icebp
das
xchg
call
cmp
xlat
mov
imul
push
ficom
pop
(bad)
sub
fist
fwait
shl
dec
cld
and
mov
and
mov
dec
cmp
jl
sbb
(bad)
mov
stos
fs
jbe
fidivr
push
cmp
loopne
outs
pop
sbb
dec
xchg
xchg
cdq
movs
inc
ins
bnd
loopne
pop
js
mov
jb
adc
sub
jmp
dec
jg
mov
jo
or
(bad)
sti
dec
adc
pop
mov
mov
test
mov
int3
nop
xlat
in
mov
add
idiv
nop
xchg
aas
add
scas
ret
call
xor
xchg
xchg
and
xor
aam
or
mov
inc
jno
int
or
xor
dec
ror
ja
or
int
popf
and
inc
ins
sbb
fwait
gs
pop
int3
fiadd
cmp
xchg
pop
retf
test
jl
mov
or
stos
leave
aad
test
add
fldcw
sbb
and
movs
dec
mov
mov
push
imul
lods
mov
push
sub
(bad)
es
mov
adc
adc
mov
mov
jb
pop
xchg
xor
mov
xor
xchg
hlt
jae
ret
or
outs
mov
jae
lahf
sar
fld
mov
in
hlt
adc
xor
sbb
into
jmp
popf
mov
ss
mov
retf
xchg
stos
aam
imul
ret
sbb
fcmovnbe
or
fsubr
mov
nop
sub
shl
mov
xor
jle
jle
stos
sub
nop
sub
cli
shl
jge
mov
mov
ror
stos
jmp
cs
mov
add
ficom
xchg
xchg
imul
push
cmp
cmp
stos
push
out
outs
ficom
mov
jmp
push
movs
lahf
xlat
fxtract
push
sub
int3
cmp
jmp
sahf
cmp
and
(bad)
adc
sbb
jnp
and
mov
mov
fdivr
adc
rol
and
mov
jecxz
add
and
and
in
inc
cmps
retf
fs
enter
(bad)
xchg
jge
test
iret
rcl
push
icebp
test
mov
sbb
mov
add
mov
popf
jo
xor
mov
shr
fwait
or
test
mov
(bad)
lods
ds
mov
xor
xchg
mov
scas
mov
pop
aas
mov
(bad)
cmc
addsubps
call
mov
xlat
xor
int3
ret
jecxz
fwait
mov
sbb
push
push
mov
(bad)
mov
dec
push
cmp
mov
xor
push
ins
icebp
mov
cmps
cdq
mov
adc
mov
xchg
mul
push
mov
outs
xor
sti
jmp
jmp
sub
movs
sub
outs
outs
mov
xor
stos
imul
mov
ret
mov
aad
rdtsc
retf
stos
js
cmp
imul
loopne
data16
mov
pop
cdq
cmc
cmp
mov
je
ins
mov
jnp
fcmovb
xor
inc
loopne
cmps
mov
out
sbb
and
int3
outs
xchg
mov
fdivr
retf
shl
push
inc
es
xor
sbb
aaa
jl
stos
(bad)
adc
gs
xchg
inc
mov
mov
stos
popf
mov
jae
neg
add
push
adc
out
cmc
jne
mov
aad
push
shl
or
xor
adc
shl
xchg
ja
sub
into
ja
jp
sub
sbb
jmp
xchg
and
adc
inc
sbb
inc
xor
neg
cmp
mov
neg
or
mov
push
cdq
js
mov
mov
outs
or
cmp
sbb
add
repnz
mov
stos
cmp
ds
popf
sub
cmp
sbb
mov
test
and
xchg
sbb
imul
ficomp
test
mov
fnstcw
mov
adc
xchg
inc
bound
hlt
pop
xchg
mov
xor
xor
das
push
jmp
add
jae
fnstsw
sahf
jge
or
repnz
xor
std
fmul
adc
fsubr
or
xor
xor
test
dec
sbb
jg
xlat
daa
and
mov
and
mov
stos
retf
(bad)
adc
jae
jp
mov
popa
addr16
or
adc
imul
and
je
imul
cs
xchg
dec
add
imul
jns
push
lahf
cmp
push
rcl
pop
add
sbb
aam
in
jmp
pcmpgtd
mov
push
dec
scas
add
cmp
xor
dec
mov
xor
jae
jo
pop
(bad)
jmp
(bad)
jnp
mul
sar
cmp
aad
xor
test
mov
and
fs
stos
shl
lods
adc
inc
sub
loope
addr16
cmp
outs
xchg
xor
mov
movs
(bad)
cmp
mov
stc
in
xor
icebp
xchg
xchg
xchg
push
mov
dec
cmps
pushf
popf
mov
xlat
stos
pushf
mul
hlt
cli
outs
imul
cmp
xchg
mov
xchg
cmp
cmps
cwde
xor
imul
aaa
inc
push
pop
cmp
lods
pop
push
loope
pop
or
pop
mov
jne
jmp
retf
pushf
pop
cmp
inc
xchg
mov
test
test
scas
sbb
xor
movs
movs
mov
cld
les
jnp
ds
ret
in
mov
icebp
mov
mov
or
dec
js
or
or
(bad)
sahf
mov
fiadd
push
stos
inc
test
jmp
sub
dec
icebp
xor
inc
jo
xchg
jp
push
inc
mov
cmp
loop
ret
lods
test
mov
mov
xchg
mov
add
or
add
and
ins
dec
pop
fwait
push
inc
ds
stos
mov
xor
in
mov
hlt
into
dec
xchg
mov
inc
push
mov
push
in
add
fcomp
loopne
aad
adc
imul
push
push
aad
jno
jbe
xchg
mov
jmp
adc
les
xchg
mov
cmp
movs
adc
(bad)
aaa
jb
repz
push
add
lahf
ror
rcr
adc
xlat
movs
jbe
mov
dec
test
pop
mov
sbb
xlat
mov
sbb
adc
(bad)
pop
cmp
mov
mov
popa
add
jb
mov
sub
xchg
jecxz
and
inc
xor
xor
sub
or
cmc
sub
ja
mov
jo
pop
mov
push
inc
icebp
sub
inc
push
jne
and
or
loope
xor
mov
push
xchg
xchg
dec
mov
pop
(bad)
adc
je
out
dec
jg
outs
push
pushf
xor
dec
adc
aad
cmp
repnz
xchg
jae
push
inc
dec
(bad)
es
pop
or
inc
jo
rcr
mov
cmps
adc
xchg
push
xchg
aam
xchg
cmp
cmp
cld
ins
daa
test
mov
loop
adc
jmp
mov
xchg
push
xlat
pop
sub
cli
inc
enter
inc
fwait
out
xor
imul
out
mov
push
push
inc
mov
dec
xchg
mov
xchg
jmp
adc
jl
add
std
sub
inc
pop
lahf
pop
push
dec
push
dec
mov
mov
push
clc
in
fwait
(bad)
sbb
adc
fidivr
clc
jecxz
sub
retf
pop
shl
and
or
hlt
nop
adc
pop
aaa
sbb
xchg
pmuludq
cmps
add
fs
sbb
inc
push
or
test
jmp
je
(bad)
aad
adc
pusha
adc
ins
xlat
cmp
lods
push
addr16
push
cs
cmp
jno
mov
pop
pop
adc
xor
pop
pop
sub
fld
repz
mov
loope
fs
dec
dec
std
movs
push
xor
and
enter
movs
mov
mov
xchg
mov
call
rol
ds
and
xor
ss
popf
loopne
es
fisttp
dec
add
cmp
ror
sti
icebp
push
int3
push
mov
icebp
dec
mov
lahf
push
dec
xor
daa
or
mov
xor
daa
ins
les
xor
icebp
je
das
inc
cmps
fld
push
imul
aas
push
stos
jno
iret
inc
in
xor
inc
call
mov
push
mov
sub
adc
jg
mov
adc
sbb
ret
dec
(bad)
dec
fwait
mov
popa
or
pop
cdq
sub
addr16
dec
retf
or
daa
mov
xor
dec
std
add
aam
sbb
jecxz
mov
mov
rcl
neg
fcmovu
popa
sub
adc
adc
mov
fldcw
dec
add
jnp
lods
(bad)
ja
mov
(bad)
cmp
pop
jne
sbb
pop
xchg
dec
sbb
inc
jo
icebp
out
fadd
cld
sbb
pop
pop
enter
fnstsw
push
mov
xchg
pop
loope
out
mov
pop
dec
xchg
jmp
ret
mov
aas
mov
jae
pop
repnz
cmp
inc
or
rol
and
xchg
iret
adc
call
repnz
xlat
(bad)
jg
repnz
cmp
xlat
push
out
dec
pop
out
lods
inc
movntq
pop
test
or
out
pop
mov
sti
outs
iret
mov
(bad)
idiv
push
add
seto
xor
pusha
mov
inc
inc
ss
sbb
add
and
aas
mov
or
mov
pop
(bad)
retf
sub
sub
adc
xchg
mov
ds
mov
popf
out
jle
xor
xchg
add
(bad)
mov
jp
push
xor
add
call
xor
cmp
push
cmp
or
test
mov
sbb
(bad)
loope
ss
movs
jbe
mov
popa
rol
test
sbb
cld
mov
lock
imul
jns
ins
sub
imul
cmc
push
(bad)
mov
jno
aaa
pusha
pop
and
std
sub
mov
mov
shl
xchg
inc
(bad)
cmps
add
xor
adc
push
push
sar
nop
aam
fild
cmp
sti
in
push
jecxz
xor
dec
loope
cmc
sahf
pusha
or
in
rol
mov
inc
fcom
add
retf
add
lods
pop
loope
mov
(bad)
fcmovnbe
aam
cmp
xchg
dec
mov
dec
mov
inc
cld
cmc
sbb
stos
gs
mov
jp
push
push
mov
cwde
xchg
sbb
adc
or
mov
jmp
cmp
rcr
div
or
mov
jg
sub
mov
xor
push
cmp
pushf
dec
jmp
shl
iret
ret
pop
mov
inc
aam
pop
push
or
loope
sub
mov
clc
sbb
(bad)
mov
xor
pop
inc
and
inc
shr
loope
pushf
xchg
movs
push
mov
cmps
push
jge
jmp
aas
cli
sbb
and
bound
stc
movs
popa
inc
or
icebp
fidiv
call
sub
sbb
mov
sub
mov
pushf
shl
add
jle
jae
adc
inc
dec
scas
scas
mov
mul
lods
loopne
(bad)
cmp
repz
xor
mov
push
adc
pop
xchg
or
js
fild
(bad)
sub
lods
inc
sbb
and
loop
aam
das
std
pushf
lds
aam
lahf
ficom
push
xchg
stos
gs
fisubr
jmp
aad
jle
cld
sti
push
mov
sub
lods
inc
pop
mov
imul
push
addr16
dec
out
lock
xor
dec
jp
pushf
ins
retf
pop
addr16
lds
mov
and
fsub
call
adc
cmc
fisub
cmp
shl
out
jl
mov
cmp
das
dec
in
mov
lds
sub
or
inc
jl
or
rcl
mov
or
ret
fisubr
neg
cmps
add
fldcw
les
xchg
les
data16
add
cmp
jg
mov
movs
ficom
jo
cmp
data16
in
xor
sti
push
imul
in
fs
push
xor
xchg
std
push
test
adc
(bad)
arpl
xchg
(bad)
out
cmp
xor
xchg
js
dec
cmps
xor
fsub
sub
(bad)
rcpps
lock
std
hlt
call
add
ss
mov
es
ins
nop
adc
outs
ins
and
push
ins
inc
pop
inc
cs
sbb
dec
repnz
or
xchg
and
imul
xchg
xchg
ja
or
dec
mov
icebp
call
out
cmp
pop
rol
sbb
outs
sub
dec
sbb
out
out
sub
jmp
and
xchg
enter
mov
and
push
cs
push
and
inc
pop
stos
mov
cmc
imul
push
mov
push
cmp
fcomp
sti
ins
dec
sbb
xchg
cmp
xor
inc
in
and
add
xchg
ins
xchg
fucomip
retf
js
xor
mov
imul
(bad)
mov
push
push
pop
inc
lods
leave
inc
sbb
stos
rcr
sub
jmp
aad
xchg
xlat
mul
add
jge
or
jne
in
test
test
js
jp
scas
rcl
fmul
data16
mov
int3
shrd
xor
sbb
rcr
push
mov
les
pop
fidivr
dec
and
inc
jp
adc
rcr
movs
sbb
cmp
(bad)
jbe
or
gs
jnp
test
xor
jo
mov
or
xor
stos
mov
pop
or
(bad)
pop
mov
dec
in
(bad)
(bad)
xor
and
jmp
jbe
dec
(bad)
push
xchg
mov
jge
or
rol
outs
into
sbb
xor
aaa
jmp
cmp
jno
adc
xchg
cli
mov
test
call
fistp
or
int3
mov
pop
add
ja
mov
jns
mov
(bad)
ins
or
aad
lods
inc
dec
adc
outs
call
test
jge
fs
ins
aad
stos
push
inc
mov
cmp
out
push
push
fldenv
push
icebp
xchg
outs
cmp
add
(bad)
pop
sbb
cwde
popf
outs
je
ret
cmp
and
enter
dec
movs
and
lods
in
in
out
out
sub
dec
jg
or
scas
jg
out
cmps
sbb
xchg
test
dec
push
and
and
(bad)
adc
and
and
pop
pop
stos
out
xchg
cwde
or
dec
scas
mov
sbb
pop
hlt
adc
sahf
aam
inc
rcr
add
test
ins
mov
out
ds
ror
pop
pop
cmp
sbb
inc
add
sbb
stc
pop
jl
cli
stos
sbb
sahf
and
pop
mov
jae
(bad)
sub
popa
ja
jb
mul
sahf
leave
ins
repz
pop
and
cmp
lock
or
add
loopne
inc
add
sbb
pop
xchg
mov
xor
xor
bound
sub
fist
hlt
xchg
add
call
fadd
je
ror
(bad)
out
mov
stos
inc
pop
mov
dec
psrld
push
push
out
iret
aam
fist
idiv
mov
sbb
sahf
enter
das
or
mov
push
cmps
jnp
cmp
aaa
sbb
bound
sub
ficom
sbb
(bad)
jle
aaa
les
cwde
ds
mul
(bad)
dec
cdq
xchg
push
jl
mov
repz
jecxz
jne
jnp
ins
push
sbb
mov
cmps
jns
or
loopne
ror
mov
js
mov
repz
jge
sbb
and
stos
pop
push
push
ins
cdq
addr16
std
mov
mov
or
repz
aad
aam
and
mov
or
inc
mov
loope
xchg
movs
test
pop
fadd
cld
mov
pop
jnp
into
and
popf
pushw
icebp
mov
ja
mov
test
jmp
sbb
push
outs
into
test
push
sbb
xlat
stos
test
add
sub
or
pop
add
in
cmps
shl
ss
scas
cmp
sub
in
imul
std
sbb
shl
loope
ret
out
ror
in
lods
sub
jae
or
repz
sahf
data16
into
hlt
test
outs
(bad)
or
mul
retf
adc
adc
lods
add
push
call
cmc
mov
inc
jnp
(bad)
mov
push
retf
sbb
jns
mov
jne
aaa
push
out
shr
inc
jne
mov
cdq
mov
jmp
clc
ins
fdivrp
mov
mov
hlt
cmp
cmp
call
loop
iret
fcomp
and
jo
mov
icebp
pop
loopne
call
mov
syscall
xor
mul
loop
dec
or
inc
inc
pusha
les
scas
pop
stc
jb
adc
mov
movs
data16
cmp
cmps
add
fcmovnb
xchg
sbb
mov
sbb
imul
adc
cmc
aas
push
int
data16
push
hlt
xchg
(bad)
outs
test
test
and
mov
mov
ss
push
leave
or
mov
fsubr
pop
adc
or
push
clc
dec
pop
xchg
push
jmp
imul
and
in
inc
jne
add
lds
cli
loop
mov
add
pop
icebp
(bad)
mov
or
cmps
sbb
loop
mov
lock
dec
dec
cs
es
and
in
es
and
or
dec
xor
imul
fwait
aaa
push
jnp
rcr
out
fist
out
fnstcw
cmp
push
xor
xlat
es
fld
jg
sbb
fisubr
fmul
out
mov
loope
out
mov
push
mov
or
mov
jo
sub
cld
or
imul
inc
push
add
mov
in
mov
inc
fldenv
sub
inc
pop
jns
test
inc
out
or
aaa
pop
xor
in
movs
mov
sub
ds
add
cld
in
popa
lods
cmp
popa
jne
mov
jle
sub
xchg
fcomp
push
cmps
xchg
adc
test
mov
mov
inc
rcl
in
cmps
sbb
xor
push
sbb
das
inc
mov
push
push
push
and
push
adc
lea
and
outs
es
stc
pop
mov
jecxz
mov
rcl
in
push
scas
bswap
pop
lods
inc
aam
rcr
xchg
fs
imul
movs
cwde
xchg
into
sub
aad
xor
mov
lods
xchg
and
stos
or
mov
adc
mov
shl
cdq
scas
xchg
mov
jnp
xchg
xchg
and
loopne
jmp
mov
push
(bad)
pushf
icebp
fdivr
cmp
and
repz
dec
inc
(bad)
xchg
add
inc
add
std
jo
or
mov
dec
repz
sub
ja
jns
les
adc
dec
xlat
fmul
fwait
stc
push
ins
jbe
cdq
xchg
or
in
ds
daa
mov
pop
loopne
xor
aad
pushf
xor
xchg
inc
setle
xchg
mov
pop
jmp
fnstcw
add
adc
mov
scas
sub
neg
mov
movs
mov
ss
repz
sti
pop
sbb
fisubr
loop
lea
cmp
lods
pop
sbb
out
adc
push
clc
mov
jle
and
lea
fmul
sbb
push
loopne
inc
push
ret
call
cmp
stos
mov
pop
mov
mov
imul
(bad)
mov
nop
ss
and
add
xor
pop
jno
(bad)
adc
sub
push
stos
sub
int3
mov
pop
push
mov
sti
ret
jg
inc
lahf
sub
cs
inc
rol
test
xchg
jno
(bad)
pop
mov
cmp
icebp
arpl
movhps
cmp
jne
inc
mov
sub
add
mov
test
sub
push
xor
add
icebp
pusha
cmps
fs
and
inc
enter
dec
int
je
pop
and
and
adc
xor
iret
sahf
add
jecxz
jnp
cli
inc
lds
imul
pop
cmp
inc
std
pop
out
mov
pushf
inc
mov
jb
sbb
sub
push
jmp
jecxz
arpl
mov
mov
into
sbb
andnps
push
push
jb
mov
out
adc
aas
inc
mov
and
aad
outs
jge
mov
in
ja
mov
xchg
cmps
shl
shl
fiadd
movs
mov
mov
mov
sbb
mov
shl
dec
ret
push
pop
cmp
mov
xor
cmps
and
stos
lea
shl
jle
jp
aaa
int3
xchg
dec
fcomip
jg
std
add
or
push
inc
mov
and
xor
test
mov
or
dec
jbe
sub
scas
mov
imul
push
imul
add
test
or
xor
adc
js
leave
cmp
lahf
(bad)
cmp
iret
fdivp
fisttp
adc
test
cs
movs
pop
(bad)
popf
push
mov
xchg
mov
sbb
fld
shr
push
mov
faddp
mov
dec
mov
imul
fisubr
jl
bound
mov
ins
sub
xor
xor
adc
jo
jle
pop
push
mov
pop
dec
stc
fld
cmp
neg
inc
retf
pop
jno
cli
mov
pop
fs
mov
jle
xchg
adc
fdivr
adc
imul
jmp
fmul
mov
js
stos
adc
add
xchg
aad
bound
jg
sbb
jmp
jbe
iret
call
push
adc
pop
mov
int
push
lods
js
cmps
mov
xchg
repz
jp
jo
pop
ins
popa
aam
scas
fdiv
mov
pop
lds
dec
mov
sbb
ror
lahf
or
xchg
ror
push
push
sti
push
imul
fs
cmc
adc
hlt
in
div
inc
ds
xchg
add
or
add
sub
test
out
int3
jne
cs
fs
mov
aas
mov
pop
jbe
add
jnp
push
stos
mov
aas
cmp
and
les
and
inc
(bad)
retf
sbb
xor
ja
add
mov
(bad)
test
mov
cmps
shl
je
jl
das
test
push
data16
mov
pusha
ds
repz
xor
hlt
int
scas
fmul
push
aaa
sub
iret
movs
and
out
daa
mov
xchg
cmp
jg
aas
jmp
cli
(bad)
imul
gs
add
push
mov
jecxz
not
push
rcl
jbe
test
ins
push
sbb
ffreep
inc
arpl
movs
push
pushf
outs
and
int
popaw
rcr
icebp
out
(bad)
xor
fisub
das
(bad)
and
mov
push
mov
test
dec
cmp
lods
mov
lods
jp
sbb
jl
in
icebp
mov
xchg
push
retf
jo
and
(bad)
ror
adc
sub
inc
sub
loopne
faddp
cmp
xor
sbb
rcr
and
add
jbe
adc
bound
jl
or
clc
call
je
fmul
mov
push
mov
loop
pop
inc
push
ins
stc
jnp
cmp
jmp
xchg
jns
aad
jbe
mov
leave
mov
push
fstp
clc
push
mov
jmp
pushf
cld
outs
pop
jbe
mov
dec
push
fidivr
pop
inc
mov
xchg
or
push
sub
and
push
pusha
stos
loopne
inc
leave
cmp
in
outs
mov
stos
sub
ins
mov
xchg
pop
mov
mov
call
in
loop
adc
sub
and
sub
and
dec
aas
icebp
jne
mov
(bad)
inc
stc
stc
movs
inc
outs
and
ret
pop
cmp
cwde
jg
adc
mov
leave
(bad)
add
push
cmp
fdiv
xchg
adc
lds
gs
cmp
add
dec
dec
pusha
imul
out
add
push
inc
jno
push
adc
stc
(bad)
aaa
push
jle
jns
into
or
pop
fisttp
jl
shl
adc
fwait
mov
mov
push
xor
fs
add
rcl
int
xchg
imul
mul
pop
dec
shl
arpl
mov
daa
push
repnz
shl
lock
adc
inc
cdq
pop
hlt
outs
inc
mov
or
in
inc
sub
mov
jg
mov
pop
retf
and
mov
xor
mov
(bad)
fwait
push
loope
scas
or
pop
(bad)
sub
(bad)
or
cmp
ror
enter
std
cmps
sti
mov
push
nop
sbb
push
push
xor
jnp
nop
push
mov
jno
sub
mov
inc
mov
call
push
out
int
and
jb
dec
cdq
vhaddps
mov
dec
mov
or
jg
popa
pop
out
push
arpl
pusha
inc
xor
sbb
pusha
frstor
daa
clc
push
sahf
ret
imul
jg
cmc
cs
pop
lahf
repz
xor
or
xor
inc
or
inc
std
add
jae
daa
in
jmp
pop
adc
aam
std
fwait
pusha
cmp
inc
lods
adc
dec
mov
dec
add
dec
pop
dec
mov
mov
adc
aad
test
shl
imul
mov
mov
sbb
mov
dec
mov
pop
lea
pop
popf
(bad)
mov
pop
xor
xchg
xchg
jg
jmp
sti
cmp
ret
jne
cmp
movs
sar
dec
cdq
dec
imul
(bad)
dec
ins
movs
push
and
jmp
retf
jge
push
push
pop
inc
in
fst
xor
xlat
out
push
sub
ret
push
je
cmc
scas
sub
mov
dec
inc
call
icebp
xchg
test
cli
imul
leave
in
pop
movs
outs
jo
fstp
sub
ins
(bad)
test
rol
mov
xor
mov
mov
mov
and
inc
dec
xchg
xor
retf
ins
sbb
gs
test
jae
push
jg
pmulhw
(bad)
mov
or
xchg
jg
(bad)
pop
arpl
sbb
js
sbb
and
or
sub
addr16
mov
adc
inc
mov
sbb
(bad)
(bad)
push
dec
popa
cmp
ss
es
cdq
mov
je
les
lds
pop
sahf
jl
xchg
hlt
(bad)
dec
sahf
cld
mul
repnz
mov
inc
push
or
aaa
jno
scas
fwait
mov
cli
cmps
inc
xor
int3
fs
lods
out
inc
push
xchg
in
sbb
dec
stos
fmul
adc
mov
or
(bad)
jno
push
movs
ret
loop
pop
arpl
lahf
aaa
fldcw
and
cmp
push
dec
call
ins
pop
cmp
or
shl
sar
jge
sbb
mov
inc
fcom
or
jp
lods
push
scas
jp
and
imul
xor
mov
mov
ss
push
(bad)
pop
es
inc
daa
jmp
push
mov
adc
pop
adc
mov
xchg
sbb
shl
ret
jle
loopne
mov
out
sahf
mov
jecxz
outs
and
xchg
cmc
nop
jbe
test
enter
popa
stos
jecxz
out
mov
stos
sbb
popf
sub
hlt
dec
adc
ret
fs
sbb
addr16
movs
shl
in
mov
sbb
pop
jge
and
fadd
and
(bad)
pop
leave
test
int3
sbb
nop
std
xchg
pop
cmp
pop
mov
scas
pop
(bad)
fld
dec
mov
imul
enter
xor
jno
mov
ret
ret
jecxz
mov
sahf
cld
mov
jae
sub
ss
and
(bad)
pusha
push
add
dec
and
mov
cdq
dec
test
xchg
lds
mov
xchg
mov
call
adc
retf
pop
das
push
dec
sbb
lahf
dec
cmp
jnp
das
lods
mov
push
inc
add
mov
or
or
imul
mov
inc
push
and
sub
dec
repz
mov
outs
les
pop
add
mov
ins
sub
movs
(bad)
push
ss
mov
mul
iret
jle
pop
mov
and
jno
sar
dec
push
push
sbb
shr
adc
push
dec
xchg
in
ds
fdiv
lea
shrd
dec
pop
mov
lods
test
sub
in
mov
mov
ins
iret
cdq
add
inc
ret
dec
cs
xchg
mov
pop
adc
or
sbb
push
inc
dec
add
sbb
loop
mov
push
add
loop
rcr
jmp
pop
js
jne
outs
iret
jg
aaa
sub
xchg
push
stos
inc
cmp
fsub
ins
inc
aaa
push
addr16
jb
call
and
inc
sub
jns
sub
jnp
(bad)
out
cmp
ins
ficomp
adc
jb
sub
jns
mov
(bad)
xchg
push
bound
fwait
or
or
loop
outs
fstp
and
mov
mov
pop
cmp
in
rcr
push
mov
sub
outs
je
or
push
pop
mov
repz
or
mov
or
loopne
inc
pop
enter
and
mov
retf
pop
and
out
lods
add
or
inc
fxch
stos
xor
in
push
pop
es
dec
sub
dec
ins
add
data16
loopne
retf
out
jl
outs
outs
ret
cmp
inc
fidivr
dec
jl
mov
and
sub
push
xchg
jmp
pop
das
lds
pop
daa
cmc
xchg
mov
push
cdq
fbstp
xor
sub
mov
sbb
and
push
aas
cwde
fild
stos
lods
dec
es
ret
pop
and
cs
dec
adc
adc
(bad)
in
or
addr16
hlt
mov
add
lock
ds
fisub
push
fs
dec
fimul
(bad)
pop
hlt
fisttp
neg
add
clc
pop
js
jns
cmp
movs
js
mov
iret
sub
pop
inc
adc
xor
or
ins
dec
mov
xchg
retf
push
movs
sahf
adc
cmp
pop
push
mov
movs
lods
test
push
and
xchg
mov
aam
add
lods
sub
mov
cmp
call
sub
and
ja
icebp
data16
jns
nop
sub
stc
mov
xchg
xchg
aaa
jg
sbb
(bad)
jge
leave
fwait
and
ins
mov
xlat
sbb
popf
fsub
lds
int3
daa
fistp
stc
out
push
lahf
popf
dec
cld
and
xchg
xchg
loopne
sub
ins
shl
inc
dec
mov
push
mov
mov
mov
or
aas
add
add
xor
mov
push
sbb
sbb
daa
sub
cmp
jb
scas
xchg
adc
xchg
enter
and
pop
mov
push
push
xchg
mov
and
test
mov
cs
aad
fcmovu
adc
mov
cdq
inc
cmp
gs
jae
xchg
xchg
jg
mov
cmp
neg
push
cmp
mov
std
fldcw
sub
stos
push
rcl
fstp
pop
adc
in
mov
cmps
outs
js
popa
ret
retf
add
pop
in
or
stos
cmp
sbb
fbld
repnz
(bad)
das
push
push
scas
pop
in
inc
add
cwde
cmp
mov
cmp
jecxz
and
sub
movs
dec
sbb
mov
into
inc
aad
popf
pushf
fs
xchg
or
je
xchg
and
push
inc
mov
mov
jge
jmp
in
inc
mov
stos
xor
cmp
sti
ins
test
and
sub
repnz
push
rcl
pop
cwde
mov
fs
ja
pop
add
pop
imul
repz
sbb
loopne
fwait
push
jb
stos
dec
dec
push
mov
inc
(bad)
data16
fimul
xor
cmovae
bound
loope
sbb
cli
bound
sbb
(bad)
dec
shl
push
outs
mov
cmc
mov
in
mov
jmp
mov
adc
sbb
mov
mov
adc
sub
jne
dec
daa
mov
shl
or
(bad)
out
fdivp
(bad)
hlt
mov
dec
or
jae
icebp
(bad)
loopne
outs
outs
neg
adc
mov
cmps
xchg
adc
dec
add
retf
inc
hlt
pop
sbb
xor
sub
out
jbe
jge
xlat
cs
leave
iret
mov
rcr
xchg
mov
nop
test
shr
icebp
sub
out
push
int3
pop
mov
xchg
lods
sti
jmp
cs
cmp
sbb
dec
lea
shl
jo
loopne
ins
dec
mov
scas
je
scas
dec
je
das
push
xchg
lahf
gs
push
xchg
add
fdivr
fld
adc
push
inc
jg
mov
je
adc
adc
xchg
mov
jnp
in
mov
stc
sub
pop
mov
sub
fdiv
add
lock
add
xor
push
fisub
pushf
and
cmp
(bad)
jno
daa
ins
and
mov
in
lahf
outs
jl
das
mov
mov
mov
out
aaa
xor
push
addr16
ror
ffree
cdq
xor
retf
jg
mov
test
cld
jecxz
mov
ds
mov
fstp
inc
fcmovb
sub
test
lods
dec
mov
add
lock
(bad)
add
cmp
and
in
int
mov
in
add
push
cwde
test
(bad)
jge
mov
pop
test
pop
mov
cmc
adc
stos
std
aam
push
dec
icebp
jmp
push
mov
jae
icebp
inc
xchg
xchg
jg
dec
je
stos
sbb
test
sar
stos
adc
test
aad
ja
das
push
push
push
enter
mov
cmp
pop
push
and
xchg
adc
ins
jbe
dec
ja
sar
push
ror
xor
or
mov
aaa
sbb
in
bound
ret
(bad)
sub
loop
arpl
push
sbb
adc
shr
xor
(bad)
pushf
inc
mov
pop
ficomp
mov
ret
adc
mov
lock
and
cli
aad
ficomp
cmps
ins
test
sbb
xchg
int3
or
push
mov
call
aas
adc
test
push
test
xchg
mov
or
sti
mov
sub
pop
fnstenv
or
mov
mov
and
sub
mov
addr16
js
mov
dec
cmp
pop
add
sbb
jb
cdq
lea
xlat
retf
cld
ret
adc
xchg
mov
das
cmc
fild
lods
(bad)
jmp
mov
jno
jmp
cmp
push
movs
add
pushf
adc
or
push
add
sub
dec
add
es
and
push
mov
outs
retf
mov
jl
mov
adc
mov
arpl
scas
pop
pushf
push
stc
push
jmp
inc
dec
pushf
in
cmp
or
fdivrp
push
out
inc
bound
scas
xchg
push
sub
dec
pop
push
stos
mov
ret
aam
test
mov
jp
mov
outs
jno
retf
jbe
lods
jns
das
inc
and
out
rcr
push
pop
dec
rcr
or
(bad)
mov
test
mov
jns
lods
jns
rcr
or
scas
sbb
inc
add
cmps
fistp
ss
test
test
sub
shr
in
mov
pop
jmp
jmp
leave
inc
jnp
stc
sti
dec
push
bound
mov
lahf
push
xchg
or
xchg
pushf
movs
cmc
sbb
dec
cmpxchg
cmps
rcl
movs
xchg
call
cmp
jecxz
jno
call
shl
ret
mov
(bad)
out
and
stos
das
jo
jae
fdivr
push
dec
cmp
(bad)
popf
call
rol
cs
or
xchg
xchg
pushf
leave
or
loope
int
out
pop
cmp
mov
int
push
in
or
pop
push
sub
mov
and
xor
arpl
inc
pusha
pop
shr
rcr
test
mov
sub
int
add
push
push
push
imul
(bad)
clc
test
push
les
xchg
xor
out
push
push
call
and
ds
mov
mov
div
add
rcl
sub
cmp
add
push
mov
and
adc
pushf
int
xlat
in
shr
stos
mov
cli
shl
xor
inc
retf
sbb
xchg
test
dec
(bad)
pop
mov
fsubr
loop
dec
stc
push
out
mov
test
call
jbe
xor
mov
cmp
ret
fdivrp
mov
inc
test
xchg
mov
out
jb
rcr
or
jecxz
sbb
popf
mov
clc
clc
cdq
leave
inc
test
pop
arpl
scas
and
xor
in
movs
push
in
mov
shl
push
wrmsr
test
imul
outs
add
push
jns
cmps
and
mov
bound
sub
push
ror
mov
jl
mov
inc
mov
mov
inc
xchg
popf
loope
xchg
pop
loop
popf
imul
mul
adc
mov
movs
jl
test
mov
and
sub
popf
popf
cmps
sub
sub
dec
nop
xor
jbe
inc
retf
imul
push
add
add
retf
scas
retf
(bad)
mov
and
sbb
je
test
push
push
shl
(bad)
mov
out
jmp
repz
mov
add
(bad)
and
je
mov
fist
xor
jge
into
cli
pop
add
sbb
cdq
mov
dec
sbb
xor
push
enter
adc
inc
enter
mov
jge
xor
call
adc
pop
data16
add
sahf
jmp
rol
add
mov
fisubr
rol
and
dec
fadd
cmp
stos
jo
xchg
fnsave
xor
mov
scas
pushfw
fldcw
(bad)
ins
jecxz
idiv
jbe
xor
call
mov
loopne
pop
mov
out
addr16
push
mov
jnp
sub
outs
add
add
rcr
jge
adc
sbb
cmp
cs
xchg
and
or
add
popa
pushf
mov
xchg
and
xchg
inc
cli
fs
mov
mov
xor
repnz
cdq
jg
pop
cmp
(bad)
jns
lock
mov
jbe
mul
bnd
jo
les
pusha
jecxz
in
sub
or
mov
cmp
movs
dec
bound
pop
iret
repz
pop
xor
rol
and
mov
mov
adc
xor
or
jl
push
pushf
xchg
sub
jmp
jnp
das
arpl
dec
xor
pop
inc
mov
aas
rcr
inc
scas
xor
test
fdivr
popf
jle
psrlw
loope
add
or
adc
js
mov
jb
sbb
push
xor
push
sub
dec
sbb
(bad)
out
xor
push
ins
sbb
call
mul
loope
fnstenv
xlat
mov
jmp
sub
pop
ret
and
mov
loop
push
adc
jp
pop
pop
pop
(bad)
mov
loopne
xchg
pusha
iret
cmp
(bad)
mov
in
repz
mov
pop
mov
es
(bad)
imul
ja
fbld
adc
in
push
and
(bad)
mov
add
inc
mov
js
jg
jmp
mov
mov
ss
out
fdivr
out
ret
push
push
mov
push
push
fcmovu
add
lds
cmps
jl
stos
xor
sub
call
adc
push
push
shl
dec
and
jg
retf
sbb
sub
push
and
in
xor
sti
(bad)
mov
dec
xor
movs
cmp
sub
mov
or
sub
lods
push
push
xchg
xor
out
jecxz
outs
xchg
ret
xor
shl
jno
hlt
popf
mov
cmps
push
jp
bound
fisttp
int3
mov
repz
stc
shr
xchg
dec
jno
enter
loope
fwait
sahf
js
xchg
outs
test
xlat
sub
mov
or
adc
jle
xor
jne
not
inc
enter
scas
pop
pop
push
cmps
adc
nop
xchg
rcl
mov
mov
adc
out
nop
cmp
mov
mov
cdq
xchg
jnp
mov
push
popa
cmp
outs
rol
sbb
mov
lds
inc
jmp
std
jno
fsubr
pop
xor
aad
loop
test
imul
adc
call
cmp
popf
ret
loope
push
sub
test
in
jne
xchg
mov
psllw
(bad)
push
adc
fs
pop
and
pop
mov
sbb
imul
in
xchg
sbb
add
mov
mov
outs
push
int
adc
dec
or
pop
mov
aad
fisubr
mov
ins
cmovae
call
lods
push
in
adc
sbb
ret
dec
lahf
dec
inc
or
gs
mov
push
fwait
mov
mov
rol
push
jmp
int
mov
sub
jecxz
dec
scas
push
push
xor
jb
out
cld
call
jae
add
cli
jmp
loope
adc
add
out
pop
pusha
das
inc
fistp
cmovnp
ror
pop
add
je
scas
fs
lods
sti
jge
lock
mov
fs
test
jne
push
mov
ja
jns
push
mov
sub
test
in
mov
cdq
loope
cs
test
sub
jp
shr
sub
and
jne
bound
lahf
xor
lahf
or
hlt
in
in
jmp
jmp
jb
(bad)
jno
mov
pop
add
fcom
mov
jne
sub
repz
repz
leave
inc
pop
popw
pop
(bad)
lods
cmp
repz
(bad)
stc
cmp
xchg
xor
push
dec
mov
dec
sub
shl
shr
test
dec
adc
jo
jge
jb
pop
js
repz
fdivr
adc
push
pop
jle
lods
ja
and
dec
std
mov
inc
lahf
addr16
add
(bad)
fldcw
cmp
xchg
inc
dec
es
push
mov
inc
fdiv
test
jns
cmc
inc
dec
xchg
ror
sbb
mov
pop
in
test
call
sub
pop
daa
(bad)
adc
xchg
sub
sahf
jl
add
lock
rcl
mov
(bad)
div
fwait
je
leave
leave
mov
mov
outs
lock
in
and
xor
cmp
es
repnz
int
les
add
(bad)
(bad)
pop
jmp
lods
xor
dec
push
fld
(bad)
mov
test
addr16
nop
mov
add
xchg
xchg
xchg
add
in
mov
pop
fadd
hlt
sbb
aad
adc
call
loope
mov
dec
cld
push
fist
mov
loope
xlat
int3
(bad)
loop
adc
adc
scas
pop
jg
neg
xchg
sub
lods
mov
jo
test
mov
jg
ds
and
cmp
(bad)
jp
neg
mov
(bad)
mov
push
mov
stos
sub
jg
out
push
in
in
jno
mov
push
mov
push
jmp
jle
pop
popf
mov
mov
mov
jle
cmps
jne
push
cdq
pop
div
pop
retf
ret
inc
xor
inc
sbb
pop
and
xor
xor
cmc
bound
cmp
dec
je
repnz
sub
lods
fadd
pop
fstp
push
int
pusha
aas
cmc
mov
clc
mov
out
cmp
mov
mov
xchg
cli
push
jo
cdq
sbb
lahf
test
test
aas
sbb
add
inc
cdq
xchg
jo
pop
lds
xlat
or
mov
cmp
stos
adc
ret
push
daa
je
gs
sahf
sub
xor
and
stos
mov
ret
or
adc
sbb
jecxz
pop
mov
pop
in
sbb
mov
or
xor
xchg
xor
inc
imul
out
loop
fdiv
ficom
lock
jb
mov
movs
iret
addr16
fild
sbb
int
daa
(bad)
push
push
xor
imul
call
fstp
mov
gs
push
aas
pop
add
push
cmp
mov
jo
push
or
jl
in
mov
sahf
sub
and
fdivr
sahf
inc
inc
scas
aaa
cld
fisub
mov
sub
stos
push
fisttp
das
rol
dec
push
int3
and
and
mov
in
sub
jb
(bad)
mov
mov
mov
push
inc
cmp
mov
and
rcl
es
mov
push
sahf
retf
into
out
pop
fs
inc
mov
xchg
sub
cld
push
mov
cmps
fcomp
out
scas
fistp
pop
sub
sahf
jge
inc
out
pop
sbb
add
test
popf
dec
and
enter
(bad)
mov
mov
sub
pop
fistp
push
shl
add
ja
fwait
pusha
ja
mov
scas
or
cmps
mov
pusha
push
add
add
add
out
add
in
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
data16
push
mov
push
mov
mov
mov
cmp
sete
and
movzx
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
call
mov
mov
mov
sub
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
call
add
pop
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
jmp
mov
mov
call
mov
jmp
add
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
jmp
mov
mov
mov
mov
call
sub
mov
jmp
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
lea
mov
mov
mov
mov
movzx
mov
mov
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jg
or
xor
mov
lea
mov
mov
bound
inc
and
stos
in
mov
fs
arpl
arpl
mov
enter
add
repz
and
(bad)
gs
or
pop
hlt
fcom
xchg
leave
imul
push
cmp
iret
pop
(bad)
and
add
and
xchg
dec
daa
push
mov
add
retf
test
mov
les
imul
jae
and
(bad)
jmp
and
mov
jg
jmp
enter
sub
mov
or
add
mov
mov
test
shl
(bad)
fld
push
cmp
add
mov
daa
addr16
cmovns
add
pop
add
add
mov
jl
js
xchg
xchg
xchg
and
jb
scas
lock
stos
outs
inc
dec
std
sub
xchg
inc
and
jg
jmp
dec
xor
mov
lea
sbb
les
shr
add
jle
cmp
bound
dec
scas
clc
mov
fs
sbb
add
and
mov
dec
dec
adc
and
inc
inc
out
adc
jmp
shl
dec
scas
clc
mov
or
jmp
and
sub
mov
and
add
jmp
mov
cmp
adc
ror
jle
clc
ins
dec
push
add
mov
and
sub
mov
movs
popa
int
add
pop
xchg
and
add
xchg
(bad)
jmp
inc
mov
out
add
sbb
adc
stos
inc
and
popf
vminsd
test
add
aam
cmps
add
out
add
adc
and
fcom
cli
int
ja
bts
mov
mov
hlt
add
inc
pop
movs
adc
in
jnp
mov
inc
ror
std
and
mov
mov
and
retf
mov
dec
cmp
mov
call
mov
test
cmp
cmovl
jp
add
cli
inc
and
xchg
sbb
add
cmc
xchg
inc
daa
aas
loopne
and
jmp
mov
cwde
push
fdivp
stos
xor
add
hlt
push
cmovne
mov
and
adc
inc
and
call
(bad)
out
and
popf
rol
fsubr
and
add
inc
inc
jo
add
add
jecxz
repz
add
mov
inc
shl
sbb
cmps
ficomp
(bad)
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
dec
or
jno
or
add
mov
mov
mov
es
mov
mov
cmp
add
(bad)
in
xor
repz
add
xchg
mov
repz
add
add
adc
mov
mov
int3
inc
es
mov
mov
jmp
sub
push
dec
jg
jmp
mov
sub
mov
jle
lods
ins
add
add
push
loope
out
inc
xor
(bad)
sbb
cs
add
lea
sub
mov
je
jmp
mov
jmp
and
jg
jmp
out
and
mov
int3
inc
and
imul
add
mov
pusha
loope
dec
inc
imul
add
jmp
mov
retf
mov
inc
inc
and
test
add
add
and
dec
sar
and
je
movs
pusha
add
push
sub
int3
sub
and
push
add
add
ret
inc
add
mov
and
sub
mov
and
je
sbb
add
pusha
shr
pop
and
enter
add
jmp
inc
and
push
mov
and
test
add
push
mov
in
icebp
mov
mov
rol
loopne
mov
call
inc
cli
dec
add
mov
aam
add
add
sub
jmp
add
enter
mov
cmp
inc
or
mov
out
add
jbe
mov
je
adc
(bad)
inc
dec
bound
(bad)
iret
and
enter
mov
xor
js
icebp
add
push
cmp
sub
dec
add
add
xlat
mov
pusha
jb
xchg
sbb
ins
sub
mov
jmp
mov
mov
or
and
and
or
out
and
jmp
adc
pop
pop
pop
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
aam
inc
mov
xchg
sbb
mov
adc
and
in
and
rol
movs
fisttp
push
sub
push
and
bound
mov
mov
xor
xchg
cmovns
add
int3
call
push
and
(bad)
xor
or
push
push
add
jmp
pop
frstor
pop
popa
inc
fisub
addr16
jmp
add
popf
scas
and
mul
inc
and
enter
cmp
mov
xchg
cdq
add
rcr
popf
dec
add
inc
jle
add
mov
xor
jns
shl
inc
and
sub
mov
jmp
pop
frstor
jbe
loope
or
dec
add
add
loope
std
rcl
sar
add
gs
mov
sub
mov
mov
sbb
add
mov
sub
mov
and
movsx
push
add
jmp
jmp
mov
jecxz
popf
int3
popa
adc
cmp
and
ror
call
out
cmp
and
add
add
cmove
mov
cs
(bad)
cmp
popf
inc
and
(bad)
(bad)
jmp
inc
cmps
adc
gs
jp
adc
add
mov
sub
or
and
mov
and
adc
aam
add
mov
mov
mov
and
cmp
mov
in
dec
push
cmp
mov
mov
loopne
xor
arpl
xor
add
mov
in
inc
jb
inc
call
add
dec
cmp
dec
in
jmp
mov
fsub
test
pop
push
ror
clc
(bad)
jmp
pop
inc
add
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
data16
mov
sbb
les
loope
mov
mov
mov
mov
mov
pusha
mov
in
(bad)
cwde
pop
pop
adc
mov
pop
mov
(bad)
in
or
push
mov
jg
jmp
mov
mov
jne
xor
jg
mov
add
add
sahf
das
and
lods
cmp
add
les
and
sub
mov
jg
jmp
mov
adc
mov
icebp
and
out
or
jmp
mov
sub
mov
cmovg
les
add
mov
sub
inc
sti
loope
popf
(bad)
push
fld
add
out
add
pop
inc
and
sub
enter
movs
(bad)
dec
pop
out
add
xor
add
add
push
in
adc
mov
in
xstore-rng
cmps
add
add
add
pop
dec
(bad)
and
movlhps
fsub
(bad)
sub
retf
push
addr16
xchg
mov
(bad)
push
frstor
jnp
ror
xchg
mov
and
xchg
idiv
dec
cmps
jmp
or
add
add
test
add
mov
sub
and
and
loopne
sub
add
jmp
mov
shl
mov
unpckhps
js
mov
push
sub
mov
je
cmp
mov
sub
mov
and
js
jmp
push
addr16
sub
mov
in
scas
retf
sub
add
push
sub
mov
cmp
or
cli
or
mov
mov
je
mov
add
sub
xor
add
sbb
mov
mov
retf
js
sbb
or
rol
sub
js
add
mov
mov
adc
jo
out
aam
add
pop
mov
or
add
cmps
and
xchg
ins
inc
cld
jmp
dec
inc
and
inc
dec
mov
mov
mov
hlt
(bad)
(bad)
mov
sub
inc
test
jl
fs
stos
pop
loopne
sti
mov
jmp
sbb
pushf
lahf
jecxz
and
add
mov
mov
mov
mov
cli
(bad)
call
push
mov
add
xor
cmove
mov
stos
movs
fsub
add
inc
pop
pushf
push
mov
pusha
add
out
add
(bad)
retf
lock
lahf
das
scas
popa
jmp
jecxz
lea
outs
mov
xor
(bad)
ror
leave
jmp
xor
loope
mov
add
mov
cmp
and
retf
pop
and
and
add
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
hlt
mov
push
cdq
mov
imul
and
adc
sbb
inc
sar
mov
mov
les
mov
mov
cdq
add
mov
add
les
mov
call
mov
jmp
and
mov
ret
cmps
dec
xor
movs
and
call
lea
neg
shr
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pop
int
jl
cmp
jge
rol
and
shr
out
add
mov
mov
pop
add
test
loope
and
add
add
ins
add
pushf
xchg
jge
add
std
and
inc
and
(bad)
call
xchg
shl
add
add
add
add
mov
mov
pushf
je
xor
and
mov
jg
imul
inc
and
or
inc
or
mov
push
add
jmp
jbe
add
mov
adc
iret
loope
mov
add
and
fiadd
aam
mov
setns
std
int3
add
sbb
jo
imul
retf
(bad)
in
add
and
sub
in
xor
test
push
inc
cmp
or
in
loope
stc
add
jmp
lods
inc
and
sub
mov
pandn
add
jmp
jbe
cmp
outs
scas
or
xchg
and
jg
jmp
lods
mov
jo
sub
das
cmc
rol
je
add
cld
add
scas
inc
and
jno
je
xor
rol
add
add
pushf
add
mov
add
add
test
add
add
out
pop
mov
cmps
mov
or
sbb
(bad)
sbb
add
ins
pop
mov
sub
je
and
psubusb
add
add
test
add
mov
in
xchg
loope
in
sbb
mov
add
scas
test
sub
popa
mov
in
add
push
shl
retf
add
test
mov
cpuid
jp
add
add
inc
and
sub
popa
mov
sti
add
add
dec
stos
out
add
push
sbb
pop
daa
add
push
adc
inc
xor
add
push
movs
mov
inc
and
add
inc
add
push
mov
xchg
daa
call
sub
add
add
fsub
add
jns
test
sbb
and
push
add
iret
inc
ror
add
add
mov
cmps
pop
push
fcmovb
ins
pop
(bad)
push
in
(bad)
jmp
stos
xor
pop
mov
mov
adc
add
in
jle
and
sub
add
push
and
js
add
lds
add
inc
add
mov
cmp
xlat
add
add
and
test
jnp
pop
add
ins
rol
and
dec
(bad)
outs
add
xlat
mov
mov
jecxz
(bad)
mov
mov
sbb
add
ins
push
inc
retf
xor
sbb
push
sahf
mov
bound
add
(bad)
xchg
and
pop
add
add
add
add
add
add
adc
mov
popa
mov
idiv
(bad)
mov
mov
cmp
setnp
ins
dec
and
jmp
loope
shl
daa
adc
push
add
add
jbe
cmp
push
add
and
pop
jo
add
add
dec
mov
add
lods
jnp
inc
ins
pop
add
call
adc
mov
mov
sbb
jecxz
add
outs
ss
mov
test
add
jl
inc
add
add
mov
and
jmp
push
std
and
nop
xor
add
shr
inc
rcl
pushf
or
jl
inc
add
ins
pop
push
lea
inc
add
(bad)
stc
add
push
add
and
mov
shr
mov
or
loop
xor
add
inc
in
mov
sub
test
call
and
pop
add
and
inc
repz
sahf
icebp
(bad)
call
and
loop
dec
das
nop
mov
daa
jmp
arpl
jo
hlt
jnp
pop
inc
lahf
mov
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jae
adc
dec
push
mov
xchg
scas
xchg
dec
test
or
fmul
int3
fsub
mov
jbe
and
lds
mov
gs
mov
sbb
sbb
mov
xchg
adc
inc
cmps
or
adc
fwait
int3
add
cmps
mov
ret
sub
push
popa
mov
push
mov
mov
and
je
add
inc
and
out
add
add
push
and
out
fcom
hlt
xchg
or
cli
(bad)
call
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
mov
mov
push
lds
sbb
add
add
xchg
and
nop
xchg
jbe
test
dec
and
frstor
arpl
dec
add
and
call
lea
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
inc
pop
jecxz
les
inc
or
mov
push
stos
jmp
xchg
inc
fs
mov
or
and
jnp
in
and
xor
sbb
add
and
sbb
aam
imul
add
add
mov
es
inc
in
xor
test
add
stos
add
cmp
jnp
xchg
inc
shr
test
test
add
mov
sub
daa
pushf
and
shrd
sbb
add
add
xchg
daa
into
inc
in
mov
add
add
jmp
xchg
inc
and
sub
mov
sbb
jmp
mov
and
aam
mov
mov
(bad)
stc
add
add
mov
sub
mov
xlat
test
and
push
add
retf
retf
and
sub
mov
and
(bad)
cdq
add
ja
cmp
sbb
adc
cld
jbe
dec
mov
and
sub
sbb
add
add
sbb
inc
xor
mov
and
add
sbb
add
inc
and
inc
cmp
add
hlt
scas
jbe
dec
mov
push
jl
push
ins
add
mov
inc
movs
jl
fiadd
cmc
xor
(bad)
call
(bad)
pushf
push
or
icebp
jnp
jmp
add
and
or
mov
dec
mov
and
movs
add
dec
mov
cwde
and
push
je
dec
lds
fcomp
ret
cmp
loopne
jb
mov
inc
jmp
mov
mov
jmp
out
and
push
and
into
or
add
stos
and
xor
dec
adc
ret
add
cmc
mov
repnz
or
and
pushf
sub
xchg
inc
cmp
mov
sub
inc
or
(bad)
xchg
jmp
jle
and
loope
hlt
pop
pop
sbb
jecxz
mov
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
cmp
mov
mov
jbe
jnp
dec
ins
mov
and
pop
inc
and
add
lahf
add
inc
sbb
add
mov
mov
mov
mov
or
out
push
add
xor
jmp
mov
mov
(bad)
inc
add
jmp
retf
push
cld
pushf
iret
pop
test
sbb
scas
adc
add
(bad)
and
sub
adc
push
test
add
or
add
add
ins
inc
mov
mov
cmp
xor
inc
add
add
inc
and
fcomip
iret
pop
ficom
inc
and
push
test
push
sub
arpl
add
in
retf
mov
inc
jg
fild
add
push
sub
in
and
nop
add
jmp
mov
dec
add
inc
and
sub
add
into
jmp
lahf
inc
jbe
sub
mov
and
pavgw
cdq
add
out
or
mov
sub
(bad)
jge
add
aam
inc
and
jecxz
adc
or
jge
add
add
(bad)
pop
jecxz
inc
and
aad
scas
outs
inc
push
int3
rol
add
inc
and
jecxz
imul
es
xor
pop
test
add
jmp
(bad)
and
sub
mov
and
mov
outs
jmp
test
test
mov
sub
push
add
inc
and
fbld
popa
pop
mov
and
je
jmp
mov
or
sub
xchg
imul
xor
lahf
adc
push
or
fisttp
and
add
mov
jnp
fiadd
in
gs
sub
pop
inc
pop
fadd
mov
add
add
push
xor
ja
add
mov
cs
mov
or
loop
add
outs
add
add
pop
cmp
into
xor
mov
add
add
inc
pop
mov
jmp
iret
test
hlt
and
and
and
mov
and
inc
jbe
call
cmp
in
out
add
and
mov
add
add
inc
test
test
add
add
popa
cmc
and
dec
popa
xchg
fstp
adc
add
mov
jo
dec
dec
mov
(bad)
and
call
mov
or
fiadd
add
retf
cmc
pop
jmp
cmc
jmp
pop
or
xor
mov
dec
and
inc
add
mov
push
cmp
cmp
and
inc
xor
push
or
and
mov
add
pop
inc
mov
xor
outs
add
add
imul
mov
ret
cmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
dec
or
push
pop
dec
imul
imul
and
sbb
mov
jnp
dec
and
mov
stos
mov
sbb
dec
and
mov
mov
ret
mov
ret
push
and
int3
mov
or
inc
and
call
mov
or
fisub
adc
jne
and
ins
shr
push
mov
gs
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
jp
mov
(bad)
mov
mov
inc
and
add
add
rol
add
add
sbb
inc
add
add
and
sbb
mov
mov
xor
push
add
int
fstp
pop
loope
add
push
add
retf
add
call
and
std
inc
cs
lea
push
adc
(bad)
out
xchg
jl
mov
mov
sub
sbb
inc
sub
mov
(bad)
iret
add
add
or
enter
ins
inc
dec
xor
(bad)
and
retf
into
add
mov
inc
and
jnp
xlat
add
jne
outs
inc
dec
sub
lods
nop
inc
mov
je
jmp
mov
cmp
mov
and
push
popa
add
ds
add
add
inc
jp
sub
mov
cmovp
push
add
add
btc
sbb
test
aad
add
out
and
sub
inc
inc
and
je
popf
adc
iret
add
pop
jbe
cwde
push
inc
and
psllw
add
test
add
jnp
add
retf
mov
mov
mov
and
test
mov
add
cmove
pop
fwait
and
xlat
repnz
add
mov
ds
inc
out
daa
jge
add
mov
inc
dec
and
mov
sub
lea
jmp
add
mov
sub
mov
sub
int3
scas
add
xor
sub
mov
and
inc
inc
and
pusha
mov
inc
nop
push
mov
pop
fwait
and
mov
aad
dec
push
sbb
sahf
mov
mov
xor
cmc
jmp
dec
out
add
fucomp
test
inc
pop
xchg
sbb
and
xchg
inc
push
pop
iret
push
add
rol
cmp
mov
movs
and
push
cmps
xlat
dec
mov
jmp
mov
mov
jmp
mov
push
jb
pop
mov
jp
mov
int3
(bad)
ins
scas
sbb
xchg
dec
out
inc
sub
jne
int3
into
out
(bad)
lock
mov
jb
shl
jmp
mov
mov
data16
in
mov
xor
cs
inc
push
and
mov
in
mov
xchg
mov
add
xchg
mov
push
pop
retf
add
inc
push
and
mov
or
dec
jl
fiadd
and
aas
pop
and
mov
(bad)
fwait
and
add
add
push
out
xchg
(bad)
mov
je
mov
dec
xlat
add
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmovae
mov
jmp
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
setne
mov
xor
and
mov
xor
and
xor
and
and
or
or
xor
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
lea
lea
mov
mov
add
add
movzx
mov
sub
sub
add
add
mov
mov
add
movzx
sub
add
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
sub
mov
mov
call
call
call
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
add
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
add
sub
add
add
sub
add
mov
add
add
sub
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
call
mov
lea
mov
mov
mov
call
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
mov
jmp
lea
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
sub
sub
add
shl
add
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
lea
add
add
sub
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
mov
imul
mov
call
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
sub
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
add
sub
sub
mov
sub
add
mov
mov
shl
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
mov
sub
sub
add
mov
mov
shl
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
lea
mov
mov
mov
mov
mov
call
mov
call
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
inc
mov
mov
mov
mov
mov
call
and
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
mov
call
and
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
inc
mov
mov
mov
mov
mov
call
and
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
mov
mov
call
mov
movzx
mov
mov
movzx
mov
mov
mov
lea
inc
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
call
lea
mov
xor
mov
mov
mov
div
mov
mov
mov
movzx
mov
mov
movzx
mov
mov
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
sub
sub
add
mov
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
sub
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
movzx
mov
mov
sub
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
shl
mov
mov
jmp
mov
mov
mov
mov
mov
sub
add
add
add
add
sub
mov
add
add
sub
mov
sub
mov
sub
add
sub
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
add
sub
mov
cmp
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
sub
mov
sub
add
mov
sub
add
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
mov
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ins
test
or
add
lea
lea
lea
cmp
sub
nop
test
push
add
mov
xor
and
adc
add
(bad)
xchg
loope
add
or
add
test
xchg
add
or
ret
add
(bad)
(bad)
dec
and
add
add
test
push
inc
(bad)
or
push
add
mov
mov
and
shl
inc
add
pop
and
dec
xchg
stos
sbb
(bad)
(bad)
mov
mov
lea
xchg
xchg
and
dec
and
add
add
(bad)
dec
and
leave
add
add
inc
add
add
dec
or
mov
pusha
xchg
and
mov
and
pop
and
or
add
mov
mov
loop
cmc
add
lea
and
xchg
dec
xchg
and
jp
test
mov
mov
inc
sahf
in
or
pop
test
test
adc
cmp
lods
(bad)
push
test
stos
repz
push
pop
mov
sub
inc
jmp
xchg
test
add
add
add
xor
(bad)
jg
add
add
fwait
push
aam
mov
xchg
sbb
add
jmp
dec
test
cmp
add
(bad)
fst
test
pop
dec
xchg
stos
jg
in
mov
in
lea
sub
mov
je
jmp
dec
mov
inc
sub
mov
jg
jmp
mov
sub
dec
test
add
xchg
jg
jmp
mov
fprem1
sub
mov
movups
or
push
add
mov
add
mov
loope
add
add
add
add
add
mov
and
jl
and
add
lods
je
jmp
pop
das
and
add
or
mov
add
add
add
fmul
ret
add
push
jno
aam
add
fwait
mov
and
stos
add
emms
or
push
add
mov
es
pop
add
add
jp
lods
add
jmp
mov
sub
mov
lods
mov
add
test
add
gs
add
add
dec
test
pushf
add
cmc
bswap
and
stos
repz
add
mov
test
add
push
add
or
xor
add
ret
add
mov
jp
mov
dec
and
xchg
dec
jge
add
add
and
in
push
mov
outs
push
cmp
(bad)
(bad)
(bad)
inc
lods
aas
xchg
add
mov
and
repnz
and
or
test
pushf
xchg
shl
add
loop
xor
add
std
aam
add
sub
mov
and
stos
add
add
dec
add
xchg
add
add
sub
mov
cli
(bad)
sbb
xchg
add
test
fisubr
repz
mov
and
add
ss
mov
add
pop
ins
mul
in
mov
fstp
jecxz
dec
add
add
add
add
sub
mov
add
(bad)
scas
rol
jmp
enter
add
sub
and
punpckldq
add
jmp
sbb
sub
mov
pop
(bad)
das
add
add
add
add
mov
add
mov
and
add
mov
add
push
mov
aam
xchg
add
mov
add
push
xor
add
add
ret
cmp
inc
add
sbb
add
add
add
push
mov
aam
xchg
add
mov
or
int3
pop
add
add
sub
inc
add
dec
sub
and
jmp
add
mov
mov
and
jl
and
inc
add
xchg
add
mov
sub
sub
dec
add
or
(bad)
mov
xor
jmp
mov
lods
sub
(bad)
adc
add
stos
jg
jmp
sbb
lods
inc
dec
fadd
cmc
dec
and
add
(bad)
jg
dec
xchg
add
ja
fadd
add
into
mov
lods
dec
inc
sbb
or
add
add
out
add
jbe
and
repnz
add
(bad)
fwait
add
add
mov
and
in
push
add
mov
je
loope
cmp
cmc
mov
sti
cwde
in
lods
mov
add
add
lds
sub
mov
out
mov
movnti
jmp
es
and
xchg
dec
xchg
xchg
rcr
mov
je
jmp
mov
add
sbb
xchg
jecxz
mov
jmp
push
fiadd
xchg
dec
jmp
mov
push
sub
mov
cmp
add
jg
jmp
mov
sub
mov
cld
test
add
add
sub
aam
add
ror
or
je
sbb
inc
lods
add
and
add
dec
sub
mov
loop
mov
pop
pop
or
add
and
jl
and
add
inc
mov
xchg
jmp
mov
sub
pop
cmovno
or
add
mov
ret
add
mov
adc
lods
(bad)
cdq
test
add
mov
sub
sbb
or
mov
or
add
loopne
cmp
mov
aam
add
mov
test
add
or
imul
pop
xchg
sbb
fnstsw
add
and
mov
or
fld
cli
(bad)
mov
movs
add
add
dec
xchg
xchg
out
test
leave
add
add
(bad)
push
xchg
sbb
or
mov
sub
mov
cmc
inc
lods
add
test
xchg
dec
jmp
js
and
add
into
mov
test
add
loop
add
jnp
add
dec
test
add
add
mov
fst
ret
add
and
add
cmp
add
sub
or
je
jmp
mov
sub
pop
adc
dec
add
movups
pop
add
sbb
mov
add
xchg
add
add
jp
jne
mov
je
loope
ret
cmp
mov
xchg
lods
add
sub
mov
push
add
repz
mov
test
inc
add
dec
push
mov
je
inc
inc
xchg
add
lds
(bad)
aam
or
fwait
stc
adc
arpl
xchg
sbb
loope
fdivr
ret
add
add
sub
pop
test
add
add
add
mov
aaa
add
sub
mov
dec
test
fiadd
add
stos
dec
xchg
stos
mov
bound
in
push
mov
push
je
mov
fild
add
lgs
or
jmp
mov
xor
pop
jecxz
das
and
or
in
jb
jp
add
add
xlat
or
or
mov
ror
push
popa
addr16
add
xchg
(bad)
push
mov
xlat
cld
mov
push
jmp
push
cdq
adc
or
xor
gs
sar
inc
add
dec
inc
add
xchg
dec
mov
mov
(bad)
(bad)
call
rol
pop
inc
push
mov
mov
xor
add
inc
retf
std
lock
inc
lods
jmp
mov
adc
mov
sub
mov
push
and
add
mov
lock
add
ds
push
jno
lock
add
jmp
mov
mov
adc
inc
cmp
or
xor
add
std
std
or
(bad)
mov
mov
call
mov
pusha
adc
mov
nop
mov
mov
cmp
(bad)
jle
fld
inc
lods
mov
adc
dec
xchg
stos
add
mov
mov
sub
mov
dec
adc
(bad)
mov
xor
dec
or
mov
std
mov
mov
lods
xlat
add
sbb
lea
xchg
xchg
sbb
test
cmp
add
inc
addr16
push
add
dec
add
mov
pusha
mov
xchg
add
mov
sldt
add
(bad)
jne
or
add
ret
mov
add
add
pop
fidiv
call
es
xor
add
mov
mov
mov
dec
xchg
and
add
sbb
or
xor
sbb
cmc
ret
push
jp
sbb
add
stc
adc
sbb
mov
lea
and
xchg
add
mov
mov
mov
loope
out
or
inc
cld
(bad)
inc
lods
mov
add
mov
mov
icebp
add
mov
test
leave
add
je
pop
mov
mov
call
lea
mov
les
add
lods
add
add
inc
push
inc
add
stos
add
(bad)
icebp
or
add
dec
cmp
in
push
sbb
pop
jg
enter
dec
test
dec
out
add
adc
xchg
adc
add
inc
retf
and
add
add
xor
and
add
add
ss
jmp
xchg
pushf
adc
or
add
lea
lea
jb
add
add
test
aas
dec
and
fs
and
sub
sbb
sbb
dec
out
(bad)
dec
adc
std
cmp
cmovl
mov
mov
repnz
add
push
add
sbb
shl
loop
push
xor
mov
adc
add
lods
(bad)
pop
pop
and
shl
add
add
mov
test
add
mov
add
sbb
(bad)
mov
or
mov
add
mov
mov
es
and
xchg
add
iret
push
jge
test
in
add
or
xor
rsm
and
xchg
and
xor
ret
mov
sar
xor
sbb
add
(bad)
ins
shl
mov
push
pop
add
cmp
add
add
and
mov
mov
mov
mov
push
add
(bad)
(bad)
mov
mov
jg
add
sbb
adc
loope
mov
cmp
add
and
jl
add
pop
mov
(bad)
out
and
dec
mov
in
mov
icebp
inc
and
add
add
mov
add
and
add
add
addr16
xchg
dec
jl
jmp
arpl
cmp
lods
dec
jns
add
jmp
mov
jmp
cs
xchg
stos
add
mov
add
daa
and
xor
or
and
add
mov
std
mov
retf
or
inc
and
(bad)
dec
add
mov
(bad)
repnz
adc
add
mov
add
xchg
mov
xor
ret
cmp
(bad)
jmp
add
xor
dec
jb
lods
cmp
fwait
out
test
leave
lock
add
sbb
add
or
push
ss
sub
add
add
mov
xchg
push
lods
(bad)
pop
loop
or
or
push
(bad)
(bad)
(bad)
call
jo
or
push
ret
xor
xchg
sbb
ret
and
add
add
inc
add
inc
push
repnz
add
fsub
sbb
mov
or
add
or
add
push
(bad)
inc
lods
add
xchg
and
or
jl
dec
and
call
mov
add
xor
sbb
lea
mov
adc
fld
add
mov
and
push
repnz
add
mov
and
mov
and
call
cs
and
push
xchg
sbb
inc
lds
sbb
(bad)
(bad)
mov
dec
xchg
and
or
(bad)
(bad)
add
ret
stos
add
xchg
jmp
mov
mov
and
mov
fidiv
(bad)
(bad)
mov
mov
add
fnstcw
and
enter
sub
lds
pop
adc
gs
jl
mov
inc
and
mov
(bad)
or
or
add
inc
and
lds
add
push
inc
cmp
or
add
mov
dec
out
mov
std
push
sbb
mov
hlt
mov
add
add
movsx
aas
mov
mul
push
ss
pop
lock
add
ins
ss
ror
fld
(bad)
jno
or
(bad)
add
xchg
dec
xchg
(bad)
das
and
repnz
fdiv
int3
xor
lds
cdq
and
cmp
add
ror
mov
add
icebp
mov
mov
lea
mov
sub
and
add
mov
or
sbb
mov
dec
and
dec
push
push
xchg
call
lea
pop
add
dec
inc
add
mov
add
or
xchg
and
in
push
mov
push
mov
ret
or
or
dec
xadd
add
mov
push
push
xchg
shl
add
add
cmp
bound
dec
add
add
add
out
mov
add
mov
pushf
mov
pushf
sub
add
add
ror
pop
and
pop
jl
sahf
mov
sbb
inc
leave
inc
dec
idiv
std
(bad)
mov
mov
mov
loope
or
add
lea
mov
add
out
and
or
mov
fs
push
fs
and
inc
adc
add
das
cmc
xor
or
dec
jle
inc
jl
mov
mov
push
inc
shl
(bad)
(bad)
mov
or
fnsave
cmp
adc
push
add
shl
fadd
add
(bad)
mov
add
jmp
call
and
repnz
inc
ror
fsubr
(bad)
in
add
mov
mov
jmp
mov
sbb
lods
add
push
retf
add
(bad)
jmp
mov
mov
cmp
add
loope
pop
xchg
push
jno
lock
add
jmp
out
test
add
stos
add
mov
repz
(bad)
imul
outs
jo
mov
fbstp
add
pop
mov
enter
lea
sar
add
fprem1
add
push
ins
mov
jmp
lods
fmul
add
mov
or
shl
and
add
cmp
xor
mov
jmp
imul
aad
sbb
mov
add
xchg
sbb
mov
loope
add
cmp
push
mov
out
add
jge
jp
(bad)
retf
xchg
add
pop
dec
movs
lds
add
mov
addr16
mov
mov
pop
mov
add
cmc
add
inc
ror
mov
xlat
add
jmp
mov
pop
daa
and
push
mov
(bad)
loop
or
rol
and
add
add
jne
sub
pop
ret
add
lea
mov
dec
inc
add
pop
add
rcl
xor
push
pop
push
pop
sbb
add
cmovne
push
ret
cmp
and
jmp
mov
(bad)
lods
(bad)
xchg
dec
add
imul
in
add
into
pop
push
jmp
ja
(bad)
(bad)
ficomp
sub
jnp
push
mov
retf
stc
and
pop
and
test
xor
dec
xor
jns
xchg
aam
lds
mov
loop
mov
shr
dec
push
ins
mov
adc
sub
jmp
jle
and
fstp
add
dec
loope
mov
xchg
adc
in
mov
jle
pop
outs
jecxz
inc
ss
leave
add
add
mov
int3
retf
pop
xchg
loope
inc
sbb
popa
shr
pop
sahf
inc
and
cmp
cwde
out
scas
test
fdivr
outs
pop
cmp
sbb
aas
(bad)
push
test
icebp
push
pop
(bad)
pop
or
mov
retf
cdq
jl
fsubr
pop
xor
pop
daa
ja
mov
(bad)
outs
add
and
mov
test
inc
cmps
jns
xchg
lock
aad
jb
ins
mov
(bad)
cmp
mov
cmps
ins
mov
push
push
xor
sub
push
popa
xchg
(bad)
xchg
aad
jo
xor
dec
shl
ret
and
(bad)
dec
mov
jmp
jnp
xchg
ret
je
push
fsubrp
adc
push
les
xchg
data16
cmp
mov
ins
popf
mov
push
ret
push
dec
ss
cs
(bad)
jmp
movs
sbb
sahf
lahf
dec
jge
push
xchg
aas
jl
mov
push
pushf
push
cmp
sbb
(bad)
data16
aam
mov
es
xchg
cwde
and
imul
push
ins
mov
push
lds
es
push
(bad)
jmp
xor
mov
clc
arpl
pop
jno
xor
dec
div
inc
sub
mov
sbb
mov
leave
pop
enter
jbe
stos
pushf
call
xchg
retf
ins
mov
stc
push
lock
xchg
icebp
mov
movs
jl
fcmovnu
(bad)
dec
cmp
sub
lods
inc
mov
push
repnz
ror
jnp
xlat
and
lods
sbb
retf
mov
push
shl
pusha
adc
arpl
add
mov
(bad)
leave
adc
and
xor
mov
push
pushf
repz
xor
js
jmp
lahf
jb
aam
fnstcw
test
or
movs
lods
daa
nop
retf
adc
int
xchg
xchg
gs
clc
retf
scas
pop
cmp
(bad)
std
adc
mov
mov
fst
repnz
cmc
outs
test
mov
(bad)
mov
sub
or
dec
fldenv
mov
movs
popf
into
lock
push
adc
in
imul
enter
ja
mov
int3
leave
retf
pushf
ja
sub
je
stc
loope
cmp
jl
repnz
xchg
loope
je
into
repnz
shl
xor
sub
jmp
or
fs
adc
ja
(bad)
(bad)
iret
cmps
jg
pusha
test
int3
jb
mov
(bad)
call
das
hlt
call
cmp
fwait
xchg
mov
xchg
test
scas
xchg
or
stos
bound
lods
jnp
je
xchg
(bad)
int3
push
inc
and
or
fidivr
lds
(bad)
rcl
pop
pusha
int3
push
jp
sti
mov
mov
pop
sub
cs
sub
dec
push
movs
push
jno
cli
adc
fs
sub
imul
inc
imul
not
sub
and
es
shr
or
xor
movs
jae
shl
das
or
or
inc
mov
sbb
or
popf
cli
or
fucomip
nop
nop
pushf
sub
jns
shl
in
mov
cs
js
pop
pop
sbb
fstp
hlt
mov
push
ret
sub
popf
pushf
dec
and
shl
int3
shl
pop
out
dec
sub
push
or
sti
add
fbld
into
ret
sub
call
(bad)
mov
loope
xor
bound
jno
xchg
add
in
xchg
aaa
pop
inc
popf
sbb
push
xor
pop
or
mov
mov
xor
ins
(bad)
mov
or
fucomi
pop
(bad)
sbb
fwait
jmp
fucomip
push
add
dec
in
stos
push
push
adc
adc
and
jbe
cmp
inc
loope
mov
jl
enter
jmp
(bad)
cld
push
(bad)
cs
cmc
xor
adc
or
mov
shl
dec
test
and
dec
fidiv
je
push
inc
mov
jno
mov
mov
mov
adc
xchg
jbe
(bad)
xchg
es
sti
in
push
mov
mov
stc
test
adc
shl
pop
inc
in
in
and
add
(bad)
test
cld
and
cmp
sbb
mov
nop
sub
pop
sbb
xchg
or
mov
out
mov
scas
enter
xor
aad
and
repnz
sub
icebp
mov
sub
xchg
jno
push
inc
shl
push
or
push
mov
cdq
aas
push
ss
scas
xchg
cld
daa
in
test
inc
cmp
rol
ins
lods
xor
lahf
pushf
test
icebp
ja
(bad)
in
add
outs
mov
int
mov
outs
jge
scas
jb
push
pop
imul
out
ss
ror
xchg
movs
sbb
jbe
out
push
stos
stos
test
mov
ficom
sbb
and
or
mov
cld
movs
and
inc
in
call
cmp
adc
in
popa
sub
adc
daa
not
and
(bad)
inc
vmovapd
pop
div
and
adc
(bad)
lahf
popf
dec
add
ret
std
rcr
mov
xor
test
or
lahf
cmp
popa
test
pop
inc
cwde
imul
cld
(bad)
adc
sti
xchg
jno
push
mov
cli
out
inc
xchg
push
jle
push
nop
xchg
xlat
out
dec
nop
push
ss
pusha
or
test
aam
xor
mov
add
or
cwde
and
pop
or
add
sub
dec
and
xchg
pop
or
mov
pop
jmp
cmp
sub
scas
xchg
out
and
push
ins
das
jecxz
push
in
pop
pop
movs
sub
jns
loopne
mov
xchg
fwait
ds
push
nop
sahf
xchg
adc
mov
cmp
push
ret
jb
loopne
jmp
inc
lods
mov
lods
pop
xchg
or
xor
fadd
test
sbb
(bad)
outs
mov
mov
(bad)
adc
out
imul
test
sahf
pop
pushf
xchg
mov
movs
and
xor
js
ret
adc
test
pop
mov
fsubr
in
pop
daa
jno
adc
int3
sbb
or
imul
xlat
loop
int3
adc
iret
fucomi
sti
adc
test
xor
fcom
daa
popa
aaa
cmps
mov
fnstenv
cmp
imul
xor
icebp
cdq
cli
pop
xchg
cmps
xchg
int
out
test
out
(bad)
mov
les
adc
enter
pop
add
fstp
stos
jmp
jo
mov
ins
adc
fsub
push
xor
jnp
fsub
cmps
dec
xor
cmps
jmp
mov
or
mov
sbb
icebp
in
lods
xchg
clc
ffree
pop
inc
scas
imul
and
pop
mov
int3
cmp
cdq
cmp
mov
mov
scas
(bad)
inc
fs
sbb
out
icebp
mov
test
add
add
les
xchg
adc
(bad)
jmp
inc
gs
sub
mov
jl
or
jns
xchg
in
push
daa
bound
nop
int
ret
xchg
popf
inc
rol
cmp
inc
push
push
sar
out
shl
add
pop
mov
xchg
fild
adc
imul
iret
xlat
imul
lods
(bad)
inc
sbb
push
frstor
retf
(bad)
imul
pop
clc
mov
add
cwde
mov
cdq
pop
jl
cmp
cmps
mov
pop
adc
sbb
or
outs
mov
xor
xor
fucom
pusha
or
fst
(bad)
cmc
pop
fs
and
or
icebp
add
push
fcmovnb
jb
xchg
mov
jb
push
pop
fcmovnbe
aas
adc
out
mov
popf
xchg
aas
push
clc
int3
(bad)
and
fnstenv
jmp
mov
sub
sbb
ins
mov
xor
cdq
sbb
pop
arpl
pop
(bad)
sbb
push
(bad)
outs
ret
dec
(bad)
adc
xlat
fidiv
sub
test
push
mov
dec
(bad)
mov
or
adc
push
xchg
ins
aaa
sti
mov
(bad)
int
mov
pop
sub
cs
pop
and
dec
rol
cwde
dec
into
xor
jmp
jnp
lods
loopne
xlat
mov
fwait
sbb
jno
shl
clc
fnstcw
inc
cwde
sahf
ror
adc
loopne
stos
add
stos
nop
jo
lods
test
daa
and
push
sbb
dec
xlat
(bad)
sub
sub
xor
mov
(bad)
add
dec
adc
jns
inc
outs
pop
add
loope
cmp
js
loope
or
test
sbb
(bad)
lods
loope
rcr
aas
and
xchg
or
popa
int
in
(bad)
imul
fmul
and
push
ins
xchg
push
adc
sub
sar
adc
xor
mov
xor
shl
add
enter
and
or
lods
dec
jmp
pop
mov
push
mov
gs
jecxz
inc
xlat
sti
jnp
cmp
imul
sar
inc
ret
xchg
xlat
hlt
mov
cmp
test
hlt
mov
mov
stos
cwde
js
cmps
push
gs
stc
pop
sar
js
pop
ja
push
loopne
sti
sub
ss
sub
fadd
retf
ret
fistp
xor
cmp
inc
test
pop
ins
sub
inc
push
or
loopne
and
adc
std
mov
xlat
ja
mov
and
ror
loope
fdivp
aam
inc
fwait
test
or
outs
mov
or
cvttps2pi
cmp
mov
add
xor
test
test
mov
xchg
pop
jno
inc
pop
hlt
jbe
push
push
lods
mov
aad
das
cdq
jecxz
cmps
mov
scas
adc
(bad)
jns
lahf
sub
jecxz
mov
dec
outs
lods
dec
imul
dec
pop
mov
popa
lea
push
add
movs
stc
dec
jb
nop
je
jmp
sub
out
lahf
lods
in
test
nop
dec
push
gs
clc
mov
and
ret
push
je
in
adc
call
or
in
mov
scas
addr16
aad
(bad)
pop
adc
int
movs
sub
(bad)
lock
jle
ins
push
dec
dec
cmp
lea
inc
or
call
pop
add
fisubr
call
xchg
aaa
mov
test
mov
push
adc
jmp
das
pop
rcl
jno
leave
mov
stc
inc
adc
inc
ror
cmp
aaa
cs
mov
sub
jmp
or
jg
lods
call
cmps
clc
push
xor
rol
jns
push
mov
(bad)
xchg
pop
xlat
adc
xchg
retf
sub
inc
and
jge
xor
ret
cmp
cmp
mov
rol
and
jnp
mov
jns
mov
mov
add
shl
or
aas
push
aam
xor
outs
retf
pop
retf
xor
into
mov
mov
xlat
mov
adc
fcmovnb
xchg
imul
add
xchg
lods
cmp
std
dec
out
fdiv
(bad)
push
dec
xor
pop
dec
lea
jl
(bad)
mov
fiadd
gs
inc
and
cwde
pop
xchg
jns
dec
mov
xchg
xchg
xor
jmp
test
xor
inc
and
xchg
lods
cmps
test
ds
add
retf
fcmovnbe
mov
(bad)
movs
(bad)
not
rcl
sub
fsubrp
(bad)
int3
or
cwde
(bad)
sbb
shl
pmulhw
inc
add
fwait
cmp
cmps
aam
rcr
mov
mov
popf
pop
pop
xor
out
mov
and
lds
and
mov
pop
sbb
clc
xor
imul
pop
pop
ret
icebp
adc
ss
jae
add
fadd
ins
xor
(bad)
dec
xchg
mov
inc
pop
xchg
ret
push
xchg
inc
sub
aad
mov
mov
mov
sub
add
out
les
mov
jmp
xchg
out
dec
xchg
nop
push
xchg
xchg
inc
xchg
pushf
mov
fwait
iret
xor
jns
repnz
mov
das
int
push
adc
cmp
es
leave
idiv
push
mov
retf
jbe
mov
sub
push
jmp
push
(bad)
mov
xchg
xchg
movs
mov
jbe
or
cwde
mov
push
hlt
add
push
xchg
jb
adc
and
jge
movs
mov
sub
(bad)
rep
pushf
adc
das
das
cmc
outs
sbb
sbb
cdq
fcmovb
loopne
pop
scas
ds
adc
mov
xchg
adc
inc
or
popf
push
add
lea
mov
jle
lea
rdtsc
daa
xchg
in
sbb
dec
dec
loop
bound
mov
inc
(bad)
mov
and
mov
xor
and
sahf
push
nop
jge
add
mov
jmp
xchg
push
ret
mov
imul
repz
jmp
inc
outs
sub
xchg
and
daa
popf
test
pop
arpl
lock
inc
add
cmp
daa
adc
xchg
add
xor
xor
clc
test
mov
cmps
cmp
or
mov
iret
aaa
jne
test
outs
dec
push
out
or
xor
push
and
mov
xchg
add
inc
add
jge
popf
inc
mov
pop
dec
retf
pop
cmps
push
(bad)
call
xor
jb
in
pop
into
icebp
shl
sub
push
mov
inc
es
sti
push
pop
mov
cdq
sub
add
pop
sbb
(bad)
lea
ficom
adc
jns
into
push
inc
(bad)
jae
stc
cmp
mov
outs
int3
mov
getsec
cmp
pusha
jnp
sub
jmp
xor
pop
movs
inc
or
adc
(bad)
xor
sbb
popa
enter
mov
mov
sub
sbb
and
pop
test
xor
inc
add
gs
std
xor
cli
mov
adc
cmps
loope
mov
or
xchg
jbe
mov
repz
lods
jmp
js
push
add
inc
int
pop
stc
rcl
je
sub
push
stos
int
mov
mov
pop
aad
push
or
dec
push
adc
add
les
int3
or
pop
mov
shl
push
xchg
xor
enter
iret
or
jns
mov
pop
lock
ror
or
pop
adc
mov
mov
and
ss
(bad)
push
stc
aaa
xor
les
test
fs
push
inc
outs
in
push
xchg
jp
or
mov
pop
jnp
fmul
jns
fwait
rsqrtps
mov
fild
mov
dec
sub
jnp
and
or
jo
mov
mov
mov
mov
sbb
je
rol
cld
xor
dec
add
into
inc
call
repz
arpl
mov
out
pop
(bad)
sbb
scas
loope
xchg
shl
sahf
les
call
xchg
jl
mov
test
ja
je
je
cmp
(bad)
clc
jl
idiv
mov
cwde
ficomp
mov
repnz
mov
call
ds
jge
add
sub
push
inc
sbb
mov
js
in
mov
or
or
(bad)
push
rcl
mov
in
xlat
mov
das
mov
pop
adc
add
repz
pop
adc
in
or
sar
out
pushf
dec
push
ins
pop
gs
jmp
sub
fbld
dec
js
xchg
and
dec
out
cmp
pop
sahf
je
add
pop
stc
cmps
in
iret
add
sub
dec
sti
pop
pop
mov
clc
sub
int
and
mov
icebp
xchg
lods
in
xor
retf
shl
cmps
sbb
cmps
nop
leave
inc
dec
cmp
pop
loopne
arpl
out
test
cmps
jo
sahf
out
and
adc
mov
loope
mov
data16
ss
mov
lock
dec
(bad)
jmp
and
and
sub
addr16
data16
pop
mov
dec
sbb
inc
mov
mov
xchg
loop
lock
call
ja
(bad)
sbb
data16
fnop
add
mov
push
stc
(bad)
sbb
jg
push
ds
push
pop
in
or
pop
xchg
ror
loopne
jmp
dec
mov
out
shr
push
adc
xor
call
(bad)
adc
lods
pop
leave
aaa
mov
adc
xchg
stos
pop
fist
pop
stc
lods
rcr
aad
sub
or
cmp
lock
mov
xchg
sbb
and
jle
fisttp
jmp
inc
std
and
in
daa
inc
(bad)
into
rol
adc
fwait
dec
jp
loopne
and
out
add
pop
mov
fistp
lea
enter
dec
xor
jp
mov
mov
mov
mov
cdq
fistp
xor
test
das
push
mov
call
(bad)
sub
in
xchg
adc
lea
adc
push
mov
mov
xchg
je
stos
push
out
mov
jp
push
jne
(bad)
jno
inc
dec
sub
pop
jle
mov
out
sbb
dec
cdq
arpl
loopne
rcr
push
imul
pop
hlt
pop
jmp
sbb
es
stos
dec
adc
ror
mov
in
mov
cmc
inc
rep
(bad)
in
pop
pop
stos
loopne
mov
sub
out
daa
(bad)
inc
xchg
jb
dec
lods
jp
je
push
in
mov
or
sub
retf
add
js
cdq
mov
(bad)
cld
shl
repz
jmp
int
rcr
jp
sahf
and
imul
push
sub
fwait
mov
js
repz
rol
sub
cmp
rcr
xchg
push
lds
pusha
shl
loopne
push
fwait
fs
loopne
or
pop
aas
mov
push
inc
xchg
jge
sub
scas
adc
repnz
add
adc
lock
mov
mov
mov
(bad)
(bad)
cwde
jg
mov
rcl
cld
sti
sti
xor
repz
add
push
ret
or
or
xor
aas
sahf
inc
in
mov
popa
push
retf
jae
repz
retf
loop
cmp
adc
test
fistp
shr
sbb
dec
cmp
push
pop
test
(bad)
pop
hlt
cdq
lods
dec
dec
jmp
sbb
xor
call
sbb
iret
xor
cmc
push
or
(bad)
sub
or
test
in
xor
add
loopne
pop
jno
je
in
jmp
sti
div
fild
(bad)
mov
jmp
test
leave
es
xchg
je
ror
mov
mov
out
push
and
xchg
dec
cli
ret
add
sub
icebp
push
(bad)
stos
cli
add
mov
arpl
and
mov
hlt
or
pop
xor
loop
test
xor
mov
cmp
sbb
xor
add
inc
cmp
add
fdiv
stos
shl
pusha
push
ja
jmp
pop
inc
jmp
imul
jecxz
jmp
popf
sbb
rcr
cmc
lods
(bad)
fmul
ret
and
not
mov
fld
or
(bad)
and
inc
pusha
or
xor
mov
inc
shr
xchg
lea
test
xchg
enter
jmp
sub
xor
into
fisttp
popa
ret
in
or
jo
cmp
inc
sbb
aas
inc
scas
cmc
aaa
adc
(bad)
cmp
retf
rcr
lods
stc
sahf
enter
add
mov
xor
out
mov
repnz
pop
sub
ja
sub
lods
cld
out
dec
int3
fld
imul
or
sti
js
stos
in
push
mov
xor
jl
or
lods
call
rcl
int
cmp
cmp
cmp
push
pop
pop
pusha
push
cmps
mov
inc
sbb
aas
popf
dec
leave
cmc
inc
xchg
and
add
mov
(bad)
nop
cmp
xchg
inc
add
ins
push
add
jne
push
mov
in
dec
gs
jb
xchg
movs
lods
inc
and
mov
sub
mov
imul
xchg
stos
mov
sbb
rcl
add
fiadd
fld
movs
cmp
mov
xor
ins
xchg
out
lea
shr
cmc
sbb
call
xor
adc
(bad)
mov
retf
lock
cdq
fldcw
dec
inc
fcomip
inc
mov
cmp
adc
cmp
je
inc
repz
mov
pushf
lea
fcom
dec
sub
stc
mov
jmp
call
fimul
test
mov
test
or
fucomi
lahf
mov
in
cmp
sub
pop
loopne
push
pop
mov
inc
stos
xlat
fcmovnb
js
aad
mov
pop
aas
iret
std
icebp
sub
pushf
and
adc
iretw
repz
cmove
cmps
mov
loopne
add
enter
inc
adc
movs
dec
pop
fidivr
mov
scas
mov
sbb
mov
push
aad
inc
out
pop
mov
into
push
ror
mov
sbb
int
sahf
mov
data16
and
push
pop
cs
or
push
loop
push
cli
add
jg
cli
xchg
lds
push
(bad)
xlat
jge
jns
(bad)
sbb
mov
sar
lods
mov
iret
lahf
lahf
aad
gs
lahf
(bad)
call
test
xor
xchg
les
mov
and
xor
ret
imul
cmp
test
or
mov
out
and
test
nop
and
repnz
dec
enter
mov
mov
lods
stos
into
fst
jae
dec
retf
movs
and
shr
ret
das
lock
(bad)
dec
xchg
ret
mov
lock
xchg
jo
mov
or
aas
repnz
xchg
cli
lock
ror
add
je
inc
add
loop
jg
cmp
js
pushf
fdivr
mov
adc
push
cmp
clc
repnz
rcr
ins
stc
sub
adc
or
out
sub
lea
xor
movs
icebp
repnz
int
pop
mov
dec
pop
arpl
mov
jno
dec
or
add
mov
in
retf
pushf
(bad)
xchg
ja
mov
test
sbb
sahf
mov
xchg
and
mov
push
xchg
neg
dec
or
and
cmp
sub
sub
stos
out
cs
xchg
pop
dec
in
mov
aad
mov
nop
stos
rcl
test
(bad)
mov
xchg
imul
repz
ficom
add
or
pop
stos
mov
daa
int3
or
push
shl
sub
loopne
outs
mov
mov
xor
retf
jns
pop
hlt
sub
(bad)
add
inc
ror
inc
repnz
stos
lock
mov
(bad)
fcom
cli
adc
shl
and
cmp
push
push
inc
push
fdivr
nop
inc
mov
push
cmc
mov
pop
sti
xor
or
push
popa
jae
jbe
repz
sbb
xchg
std
xor
faddp
ins
dec
popf
mov
stos
ss
mov
loopne
pop
retf
rcl
sar
push
xor
pop
sbb
push
cmps
inc
pop
push
jbe
sub
sar
sbb
retf
ins
sbb
aam
cs
add
push
lock
lods
jae
push
push
mov
or
pop
sub
mov
dec
mov
jg
out
add
mov
pop
aam
mov
addr16
add
xchg
inc
loop
inc
dec
adc
jl
and
xchg
in
mov
aad
jmp
jnp
sub
loope
gs
fisubr
mov
call
hlt
jbe
call
movs
lods
jle
das
mov
push
cmp
mov
add
pop
std
jmp
shl
sbb
and
test
fiadd
outs
cmp
xcrypt-cbc
cmps
shl
ret
push
aas
in
xchg
test
dec
jno
fwait
setb
fsubr
mov
or
enter
sub
jmp
xor
iret
or
fild
js
jb
sbb
nop
push
lea
fild
fwait
ins
mov
pop
pop
movs
add
mov
pop
das
or
call
pop
(bad)
sti
ficom
fidiv
dec
in
icebp
cmp
mov
push
xchg
sahf
pop
push
sub
mov
sub
data16
xchg
pop
mov
inc
or
adc
push
in
scas
pop
int
sub
outs
adc
add
pop
mov
cdq
clc
aas
fidivr
es
sahf
out
fimul
or
gs
dec
into
ror
sbb
sbb
cdq
call
(bad)
iret
imul
rcr
pusha
and
xchg
into
xor
cmp
sbb
das
repz
clc
push
rol
mov
fimul
out
cmp
inc
adc
test
push
mov
(bad)
fstp
in
sbb
neg
rol
or
test
push
ins
mov
and
sub
xchg
(bad)
cmps
sbb
and
push
inc
xchg
imul
sub
stos
into
cmps
inc
outs
xor
div
xlat
(bad)
shl
mov
push
scas
(bad)
push
adc
cs
mov
mov
jmp
ret
xor
add
mov
es
pop
jg
jle
ja
push
mov
stos
jno
dec
cmp
push
sbb
jle
das
xchg
pop
rcl
cmps
hlt
inc
jmp
out
stc
sbb
int3
std
out
xchg
out
xor
xchg
and
aas
movs
loopne
fs
std
das
inc
frstpm(287
jecxz
rcl
jmp
cmp
add
add
das
bound
or
sbb
dec
xor
cmp
addr16
inc
aaa
xor
inc
mov
mov
js
mov
jmp
jecxz
add
mov
inc
pop
mov
push
and
push
jg
xchg
add
mov
jo
mov
outs
fstp
into
(bad)
sar
sub
xor
mov
scas
loope
leave
clc
rcl
les
out
mov
dec
out
jae
xchg
mov
push
inc
stc
push
xor
pop
xor
pop
pop
mov
add
mov
mov
pop
sbb
popa
cmp
fcmovnu
mov
iret
(bad)
aam
push
push
std
mov
jmp
jl
xchg
mov
and
jbe
das
xchg
pusha
sbb
ffreep
mov
pop
pop
mov
push
sbb
or
push
aaa
out
inc
xor
sti
test
ret
sub
enter
mov
rol
cwde
mov
call
xchg
pop
scas
mov
jo
cmp
stos
in
lea
mov
jecxz
push
bound
aam
aad
sub
pop
sahf
adc
xchg
pop
inc
icebp
aad
test
pop
mov
cli
mov
(bad)
and
call
sahf
shr
mov
fiadd
outs
frstor
add
inc
xor
or
adc
inc
retf
pop
xor
mov
imul
call
mov
popf
jg
push
fsubr
retf
xor
jl
cli
xlat
dec
sbb
dec
test
imul
retf
fidiv
shl
repz
mov
xor
mov
sbb
jo
jb
repnz
ja
pop
add
push
pop
(bad)
xchg
(bad)
or
ja
data16
adc
lahf
xchg
jne
stos
aam
pop
arpl
fidivr
xchg
inc
sub
in
adc
xchg
xor
push
push
mov
gs
jae
sbb
jl
mov
(bad)
out
jne
dec
add
mov
add
call
(bad)
sar
popa
ins
sub
lea
test
repz
cmp
xchg
sub
mov
push
jmp
shl
fist
cmp
fs
jg
test
rol
fnsave
jb
out
aaa
pusha
mov
and
jg
mov
jmp
cmp
jmp
pop
inc
mov
cmp
mov
adc
repz
imul
div
pop
push
jne
cmps
xchg
jne
(bad)
cld
sub
and
push
jl
iret
repz
inc
jp
hlt
mov
dec
call
in
cs
data16
sbb
push
repz
jno
cmp
je
sub
xchg
out
call
ret
repnz
shr
mov
jo
cli
and
aaa
arpl
inc
and
sub
popa
(bad)
daa
pushf
jle
in
sub
mov
and
retf
xchg
cmp
imul
mov
ins
std
ss
int3
int3
pop
iret
jg
dec
repz
pop
test
scas
shl
sbb
pop
mov
call
mov
mov
pop
push
cmp
xchg
jmp
cwde
fisttp
lahf
icebp
sar
push
mov
push
loopne
cmp
adc
ja
fadd
cmp
jg
(bad)
sbb
push
adc
pop
sbb
add
sub
dec
xlat
dec
push
pop
js
push
xchg
adc
push
add
jecxz
dec
addr16
enter
xchg
in
xor
popf
int
scas
cmp
mov
xchg
cmp
scas
out
mov
xchg
out
addr16
fiadd
fcomip
in
idiv
in
jns
cmp
(bad)
mov
push
mov
loope
mov
adc
imul
mov
mov
dec
lock
shl
call
push
add
retf
test
les
mov
test
xchg
pop
retf
sub
ret
int
and
mov
lods
mov
pop
test
call
inc
push
pop
and
fidivr
xchg
mov
rcr
xchg
jg
or
(bad)
jmp
aas
and
inc
xor
jl
xor
jecxz
rcr
dec
aas
cwde
or
pop
dec
ror
in
ror
ins
mov
hlt
retf
call
scas
cmp
pop
test
in
mov
mov
xchg
out
out
jmp
sub
sub
(bad)
in
sub
jb
das
push
gs
xlat
and
(bad)
retf
or
cli
dec
and
or
push
jbe
int3
push
add
jl
retf
mov
push
mov
jg
mov
jns
xlat
dec
xchg
pop
push
xchg
aam
es
in
mov
jp
out
shr
xor
sbb
inc
adc
adc
test
std
mov
mov
and
sub
pop
inc
out
add
adc
fdivr
in
test
ins
pop
jnp
mov
cmps
sub
jno
xchg
and
cmp
jnp
loop
xor
retf
out
loop
cmc
int3
cmp
in
jns
pop
test
fst
neg
or
jmp
jb
rcl
jge
cmp
add
pusha
pop
xor
int
or
xchg
xor
cs
shl
out
retf
sub
cmc
sub
jne
sbb
jmp
inc
mov
ret
inc
mov
xor
cmps
fsubrp
cmp
popf
sub
add
mov
pop
int
cwde
test
inc
leave
pop
and
ins
and
add
dec
leave
xor
jno
mov
jbe
mov
outs
dec
jo
sub
jo
mov
mov
jge
xor
push
xchg
movs
les
pop
mov
mov
add
push
adc
adc
cmc
lods
adc
mov
mov
ffree
sbb
(bad)
iret
sub
aas
jno
enter
adc
stos
jle
push
jno
gs
mov
pop
inc
and
movs
retf
ins
aaa
(bad)
repnz
pop
push
dec
sub
push
push
outs
dec
cs
mov
xlat
xchg
bound
cld
inc
in
xor
xchg
cmps
xor
loope
ja
loopne
jecxz
stos
js
cld
xor
or
lock
pop
jp
push
cmps
cmps
out
pop
jno
dec
into
xlat
mov
fmul
xchg
push
xlat
out
loopne
pop
xadd
adc
jnp
(bad)
mov
xchg
mov
pop
push
sbb
mov
js
or
jae
and
das
mov
xlat
mov
jecxz
pushaw
push
jge
mov
retf
out
push
sbb
shl
xor
or
in
or
cli
cmp
je
in
push
push
test
mov
add
dec
and
dec
xchg
jg
or
push
adc
jno
movs
jmp
test
sub
add
pop
ins
and
test
push
cwde
lock
popf
push
shl
add
arpl
mov
fistp
cmp
jns
adc
je
ja
(bad)
jp
inc
mov
icebp
dec
jle
mov
jne
bound
out
add
jg
leave
inc
pop
add
les
sbb
pop
out
ror
movs
sahf
inc
inc
test
xchg
cmps
push
cld
inc
dec
push
mov
jns
adc
mov
sub
push
and
test
call
mov
jle
push
mov
faddp
mov
push
scas
xor
push
jne
repnz
es
cmp
add
xor
inc
out
ret
leave
cmp
sub
sar
or
inc
xor
and
(bad)
loop
cmc
inc
test
sub
es
ret
mov
add
jo
(bad)
aaa
shr
mov
pop
jp
mov
jg
jne
shr
(bad)
fisub
dec
adc
add
cwde
mov
ins
lods
sub
mov
cmp
and
ret
stos
jp
adc
cmp
add
sub
(bad)
ins
jbe
add
rol
data16
mov
(bad)
jp
adc
fldenv
sub
inc
cmp
mov
sub
push
mov
xor
pusha
(bad)
test
add
shr
mov
add
push
pop
dec
stos
or
pop
ror
xchg
fmul
out
xchg
call
mov
(bad)
sub
call
and
jae
sbb
repnz
(bad)
mov
jecxz
std
or
mov
inc
mov
inc
ficom
sub
jne
inc
es
mov
inc
sub
cmp
push
hlt
mov
pop
jge
pmovmskb
cmp
sti
shr
ins
add
inc
push
sbb
mov
int
iret
(bad)
jmp
xor
loopne
fiadd
inc
lea
(bad)
and
sbb
scas
pop
sub
adc
xchg
loope
cld
mov
pop
loope
fmul
fs
aam
adc
pop
(bad)
shl
sbb
retf
xor
scas
test
jnp
xchg
push
ins
cli
dec
push
xor
push
lods
loop
or
shr
loop
adc
dec
pop
cld
xchg
cmps
(bad)
les
dec
out
cmps
cli
pop
dec
aas
aam
mov
and
pop
(bad)
adc
cmps
push
push
jmp
stos
mov
mov
xchg
out
mov
push
outs
jp
or
hlt
dec
loop
scas
inc
(bad)
xchg
ins
push
stc
mov
xchg
mov
addr16
pop
scas
out
xor
bound
(bad)
pop
push
nop
push
sub
sub
stc
jnp
xchg
sahf
fstp
jno
ret
js
rol
cli
in
mov
adc
sbb
xchg
xor
pop
push
pop
popa
out
sbb
push
stos
jne
mov
leave
push
fstp
test
aad
or
fldenv
in
dec
jmp
fstp
cmp
test
mov
pop
dec
div
shl
ror
jno
push
xchg
adc
and
cmp
in
sti
call
in
das
fstp
or
out
dec
ret
js
in
xchg
xchg
imul
int3
lods
sbb
je
push
jge
mov
pop
jge
(bad)
stc
add
push
jg
xchg
cmc
push
jno
cli
mov
(bad)
les
sub
push
push
shl
repz
dec
xchg
xchg
jle
jns
push
sbb
sti
cdq
imul
dec
jns
mov
mov
push
rcl
repnz
in
lods
and
retf
loopne
daa
addr16
repz
mov
out
lock
jb
fstp
fwait
mov
push
mov
pop
pushf
fs
adc
loope
stos
shl
pop
je
lock
fst
mov
loop
mov
test
stos
inc
inc
jae
addr16
stc
cli
jmp
(bad)
repz
fmul
movq
ret
cmp
cmp
cdq
out
rcr
test
pop
loop
dec
sti
js
fcmovu
mov
mov
or
push
inc
cmps
out
cs
xchg
movs
jno
fimul
outs
in
mov
cmp
ins
imul
and
outs
outs
inc
dec
cmps
jb
stos
add
add
pop
js
adc
add
xor
movs
(bad)
jne
pop
in
mov
ins
fldenv
push
xchg
mov
adc
jmp
retf
or
add
cmp
jb
fcomp
sub
sbb
xor
mov
call
(bad)
sti
imul
out
jmp
add
fwait
and
push
cdq
idiv
inc
or
sbb
pop
dec
adc
xchg
mov
xchg
sbb
sub
and
lea
jno
xchg
pop
retf
outs
add
addr16
aas
push
test
dec
cdq
ins
outs
adc
dec
cmc
ins
sub
push
jmp
fmul
daa
mov
das
imul
je
in
mov
or
retf
les
repnz
mov
iret
add
in
mov
sbb
cmc
xchg
js
ja
and
xchg
mov
cmp
(bad)
aas
mov
mov
mov
cmc
cmp
rcl
in
cmc
fsub
test
xor
cld
retf
lock
add
push
cmp
iret
mov
sub
jnp
test
push
retf
push
mov
fwait
sbb
add
add
(bad)
pop
sbb
loop
test
imul
shr
pop
mov
sub
mov
jo
inc
and
sbb
add
adc
test
sbb
push
push
add
xchg
jae
add
es
push
sub
rol
retf
jno
(bad)
nop
popa
sub
clc
ret
cmp
xlat
aas
sbb
ja
push
test
popa
in
pushf
scas
xchg
(bad)
sbb
pop
repz
lahf
sbb
and
sbb
rcl
jo
addr16
repz
xor
call
adc
pop
not
ins
(bad)
mov
inc
add
iret
lahf
std
mov
mov
cli
les
mov
les
fisttp
and
cmp
or
stos
(bad)
and
aam
inc
popa
sbb
adc
add
jbe
sbb
inc
ss
loopne
fdiv
ja
and
mov
es
lods
cmp
add
mov
xor
ret
(bad)
dec
add
nop
loope
hlt
inc
or
mov
mul
ss
sar
iret
sub
lods
outs
dec
jg
pop
sbb
jmp
mov
inc
daa
in
pop
imul
mov
mov
test
mov
hlt
scas
lods
ja
(bad)
repz
daa
(bad)
imul
or
sbb
sub
mov
and
ja
lea
mov
rcl
jmp
(bad)
jle
sub
jg
jg
div
or
dec
daa
addr16
jae
mov
jecxz
jmp
hlt
fsubr
std
retf
aaa
mov
push
mov
pop
fdivr
inc
mov
ret
ds
fimul
cli
outs
daa
(bad)
in
sbb
cmp
adc
fisubr
xchg
jp
and
xchg
ror
inc
inc
ins
in
cmp
sub
inc
mov
dec
xlat
call
push
imul
fisub
sahf
mov
dec
(bad)
(bad)
mov
or
adc
pop
pop
mov
cwde
add
xor
push
cmp
or
xor
inc
cmps
push
dec
enter
xor
enter
mov
ret
and
(bad)
and
mov
lods
push
out
or
inc
pop
dec
jmp
cmps
mov
call
mov
shr
je
mov
cdq
imul
or
test
out
pop
and
adc
push
mov
xor
fdivr
lock
sbb
fsub
retf
mov
enter
fwait
lods
in
ins
push
fistp
popf
mov
cmp
arpl
sbb
in
imul
jae
or
jl
mov
push
and
rcr
dec
movs
into
adc
xchg
pop
mov
icebp
sbb
mov
sbb
cld
test
iret
jnp
fistp
inc
xchg
dec
cld
outs
rol
in
loope
jb
ins
xor
scas
pop
stos
into
in
mov
loop
shl
cmp
cvtpi2ps
jbe
push
lds
cmp
dec
mov
jae
movs
or
lock
push
dec
retf
jnp
(bad)
mov
(bad)
pop
or
inc
and
dec
stos
retf
fimul
push
sbb
or
out
je
sub
and
cmp
sbb
adc
xchg
sub
scas
push
jp
pop
mov
and
push
dec
stc
mov
mov
pop
cmp
xor
test
mov
sbb
inc
mov
xchg
pop
fadd
and
push
shl
cdq
aam
clc
push
jmp
sbb
jnp
and
jne
(bad)
popa
push
xor
mov
stc
add
jecxz
cmps
clc
leave
jno
or
std
fbstp
mov
or
rcr
(bad)
popf
test
mov
push
aam
jmp
jle
scas
jnp
ret
mov
out
add
xchg
ror
repz
pop
out
xchg
mov
sar
mov
js
loope
ret
mov
test
call
add
mov
xor
adc
jns
pop
push
movs
ds
sub
sti
and
mov
cs
push
out
cwde
and
call
sar
inc
repz
jmp
pusha
mov
dec
dec
cmps
mov
jne
rcr
push
clc
xchg
ja
bound
(bad)
cmp
sub
int
inc
jnp
sbb
lock
pop
mov
lds
imul
fnstcw
iret
out
jge
rcpps
cmp
ret
imul
les
ret
daa
out
push
shl
xchg
jbe
dec
imul
(bad)
in
mov
outs
cli
xchg
pop
ins
fld
test
fidivr
cmps
push
retf
sbb
aaa
mov
fcom
xchg
shr
into
fdivrp
test
ja
ja
sbb
push
data16
stos
cmp
cmc
fimul
mov
scas
pusha
(bad)
mov
scas
test
loopne
xchg
mov
mov
loope
aas
xor
and
(bad)
test
sbb
inc
ret
popa
sbb
fidiv
push
daa
cmps
push
push
mov
movs
push
lahf
push
xchg
cmps
cld
jmp
loopne
aam
or
je
sub
div
push
out
int3
pop
sbb
cmp
repnz
mov
icebp
retf
ret
cli
mov
xchg
and
popf
nop
call
dec
mov
call
jmp
xor
add
mov
sub
fcomp
or
enter
bound
sub
js
das
or
xor
pop
sub
mov
or
cs
stos
ficomp
xor
or
add
jp
push
pop
lds
inc
mov
mov
loope
dec
push
mov
repnz
mov
mov
pop
mov
or
inc
cli
imul
(bad)
mov
ror
repz
mov
movs
xchg
mov
aas
pop
pop
dec
mul
jno
sbb
inc
jl
dec
add
xchg
(bad)
adc
sub
(bad)
xor
pop
loop
jae
push
aas
iret
xor
loop
inc
cmc
xchg
ins
mov
rol
dec
imul
std
out
ficom
xchg
js
mov
xchg
push
jmp
lods
out
xor
loope
data16
stos
lahf
popf
jmp
mov
ss
add
cmp
inc
push
cmp
sub
rep
out
imul
je
sub
out
retf
in
icebp
pop
push
fadd
jo
or
add
(bad)
out
sahf
lock
pop
iret
sub
ret
retf
push
jmp
es
scas
adc
mov
std
lahf
mov
int3
in
dec
lea
adc
idiv
xor
scas
dec
ficomp
push
enter
pop
xor
dec
push
add
xchg
mov
test
jns
cmc
sub
out
push
xchg
sbb
dec
inc
mov
dec
xchg
push
lds
daa
out
pop
and
retf
inc
xchg
inc
enter
xor
fldenv
mov
test
pop
(bad)
jmp
std
and
cmp
mov
mov
jg
loop
add
jp
(bad)
cdq
(bad)
xor
mov
ins
xor
lods
mov
pop
std
xor
push
mov
mov
sbb
inc
aam
cli
shr
and
div
loopne
add
dec
xor
out
push
mov
out
ins
cwde
mov
jecxz
cmp
xchg
pop
(bad)
cmp
sti
out
repnz
aas
cld
add
out
jno
mov
xor
in
mov
push
clc
mov
scas
(bad)
in
jecxz
pop
sbb
sub
je
mov
sbb
mov
fs
pop
test
dec
jbe
dec
popf
in
dec
cmp
mov
pop
mov
mov
dec
int
shl
and
jp
(bad)
lods
cmp
iret
sbb
jno
xchg
scas
jbe
neg
scas
adc
stos
add
leave
fdivr
dec
pop
das
xchg
sbb
ss
push
pop
jecxz
stos
jnp
jb
mov
push
push
cli
add
or
ror
int3
enter
das
jge
sub
sbb
mov
cmp
xor
cmp
fstp
(bad)
push
mov
dec
adc
push
fnsave
push
pop
je
sub
lods
cmp
enter
aaa
adc
xor
fs
cmp
inc
or
inc
popa
or
xor
adc
inc
rcr
fst
push
adc
adc
and
xchg
lods
jo
daa
dec
adc
xor
loop
and
mov
or
fdiv
ja
mov
or
inc
fdivr
cmp
rcr
sbb
cmp
or
sub
or
inc
or
push
cmp
test
imul
push
pop
lea
lock
xchg
xchg
in
daa
push
xchg
mov
mul
sbb
fist
mov
movs
mov
cwde
or
les
(bad)
push
add
pop
adc
dec
enter
out
test
dec
nop
jl
add
mov
cmps
into
pop
push
mov
adc
push
mov
call
jecxz
inc
sbb
aaa
mov
inc
xor
cmp
ret
stos
mov
aad
imul
push
lods
fs
aad
mov
pop
cmp
cmps
jmp
dec
(bad)
pop
jmp
or
pop
mov
fdiv
and
in
test
je
sbb
push
add
imul
sub
sbb
mov
cmp
xchg
dec
pusha
xor
mov
ret
push
jns
ds
dec
xchg
and
add
and
repnz
rol
retf
fdivr
retf
scas
idiv
sub
fbld
mov
imul
ret
pusha
inc
les
cli
in
sub
jmp
aad
movs
pop
hlt
or
sub
pop
adc
sub
lods
sbb
mov
sub
sub
es
dec
adc
mov
stc
mov
loop
push
test
cld
arpl
jne
shr
push
daa
jbe
movs
aam
pop
inc
loope
fwait
add
ficom
test
outs
(bad)
mov
lods
add
adc
(bad)
jmp
scas
ror
jmp
dec
jnp
repz
sahf
dec
push
data16
lods
inc
aaa
loope
addr16
sti
xor
dec
adc
xor
stos
out
sbb
xor
fld
cmp
cdq
ret
push
int
sub
or
jo
stc
call
in
ja
xchg
sti
cmps
xchg
dec
movups
lock
lods
retf
or
fcom
mov
jae
sahf
or
and
inc
mov
iret
xchg
mov
sub
mov
clc
int
jmp
lods
clc
xchg
mul
mov
pop
jmp
aas
cs
jno
add
call
je
xor
mov
fisub
cmp
cli
jae
push
aad
(bad)
adc
pop
das
ja
mov
rcl
cmps
sbb
xchg
shr
popf
and
push
and
das
xchg
(bad)
lock
sub
mov
xor
test
jp
movs
gs
push
jno
xor
bound
(bad)
mov
lea
je
mov
and
mov
or
jg
sti
popa
mov
pop
mov
sbb
mov
aam
sub
sbb
xchg
sbb
mov
cmp
je
or
pop
ds
dec
xor
pop
sub
xor
xor
mov
jns
pop
xchg
shl
or
mov
adc
add
jmp
mov
pop
movs
clc
mov
arpl
call
sar
add
ins
push
ins
jns
push
push
mov
xor
sub
jae
xchg
pop
mov
and
jae
lock
aam
adc
xlat
xchg
outs
sar
add
xor
lock
outs
mov
or
outs
cmp
imul
mov
outs
and
jp
jb
jne
(bad)
(bad)
jae
adc
mov
dec
sbb
jle
or
sbb
dec
ins
or
loopne
mov
push
add
adc
add
and
mov
mov
sbb
nop
pop
es
jmp
mov
or
cwde
cs
scas
test
adc
test
pop
(bad)
mov
xchg
fnstsw
bound
fwait
stos
or
mov
fsub
and
test
(bad)
mov
dec
inc
xchg
sete
sub
jnp
bnd
popf
inc
pop
inc
mov
les
sti
pop
mov
mov
loope
js
jno
xchg
or
(bad)
mov
mov
cmp
cmps
int
mov
dec
mov
fnsave
jnp
cmp
xchg
sbb
mov
retf
mov
and
idiv
mov
fwait
add
or
loopne
das
fisttp
fild
jl
add
mov
jmp
add
(bad)
dec
shl
add
xchg
sbb
test
in
ins
(bad)
pop
fnstcw
mov
into
push
jge
nop
loope
call
inc
xor
pop
fst
mov
sub
jle
pop
cmp
inc
lock
xchg
outs
cmps
add
add
sbb
neg
pop
lds
addr16
mov
xor
das
pop
sub
and
ror
shl
les
leave
jne
xchg
push
mov
and
xchg
shr
loopne
pop
xor
mov
lock
(bad)
mov
mov
out
stos
xor
fwait
xor
pusha
push
bound
mov
xlat
add
std
fadd
pop
adc
inc
fldenv
mov
ins
repz
repz
add
and
push
and
retf
cli
retf
mov
ins
jae
or
dec
sbb
mov
(bad)
into
inc
out
es
sub
xor
sub
pop
xchg
pop
add
sbb
shl
rol
inc
jmp
and
jae
pop
inc
bound
adc
pop
jmp
test
pop
out
popf
jge
or
enter
repnz
ins
into
dec
inc
std
push
lahf
xchg
sysenter
shl
rcr
dec
iret
(bad)
shl
dec
lea
mov
out
fs
popa
(bad)
add
inc
adc
jnp
clc
sub
test
dec
push
jns
push
lds
les
sub
fwait
xchg
mov
inc
jae
pop
mov
scas
out
pushf
cmp
mov
int3
fdiv
dec
push
dec
mov
mov
lods
xor
or
mov
fs
lahf
dec
lea
jns
xlat
inc
and
push
dec
push
fs
pop
cs
test
stc
pop
jmp
fldenv
dec
dec
shl
movs
lods
in
push
sub
jmp
mov
xor
sti
addr16
test
xor
adc
cmp
add
pop
lock
call
xlat
retf
std
pop
repz
(bad)
shr
push
xchg
arpl
scas
and
test
retf
daa
add
adc
lods
cmp
mov
das
mov
and
push
pop
loopne
sbb
sub
or
ja
sbb
push
add
sar
leave
mov
and
shl
pop
xchg
xor
cli
fcmovne
pushf
int3
scas
mov
out
(bad)
sub
fcom
sub
mov
movs
aas
mov
sbb
push
pop
cli
imul
loope
mov
or
cmc
leave
int
popf
or
das
sub
jnp
pop
pop
push
(bad)
(bad)
(bad)
mov
or
push
jmp
adc
repnz
mov
add
mov
push
inc
loope
mov
lods
cli
jp
pop
retf
bound
lods
sbb
adc
mov
fwait
mov
pop
mov
inc
push
hlt
or
scas
lods
xchg
lods
xchg
inc
cwde
cmovb
and
or
jnp
xchg
xchg
pusha
cmc
out
repz
pop
addr16
cmp
push
mov
out
mov
and
push
inc
nop
jl
mov
das
idiv
xor
cdq
sbb
xchg
movs
in
xchg
dec
xchg
or
or
dec
sub
lds
xchg
add
jns
ins
jl
sub
dec
xchg
ficom
inc
loop
fucomi
sub
shl
sub
xor
jmp
push
(bad)
mov
sar
lods
and
push
aaa
int3
cmp
pop
mov
xchg
pusha
dec
and
scas
push
cmps
jmp
int
mov
scas
in
test
xor
data16
and
icebp
xor
not
(bad)
fwait
xor
or
(bad)
jno
push
adc
fbld
add
call
cmp
cmp
ror
es
jnp
jecxz
xlat
jecxz
mov
inc
pop
test
mov
xor
(bad)
dec
test
(bad)
pop
add
fmul
push
xor
pop
cwde
jns
lea
add
call
cmp
test
mov
sbb
xor
pop
mov
int3
cmp
and
jg
sbb
gs
mov
sub
fdivr
stc
inc
movs
or
lods
mov
cmp
and
in
mov
sbb
in
mov
sbb
cmp
out
adc
jg
sar
pop
leave
sahf
bound
dec
rol
jmp
inc
repz
xchg
mov
clc
shr
mov
cmps
icebp
je
outs
or
(bad)
dec
cwde
or
add
jge
pop
push
jnp
fist
sub
dec
movs
xor
rcr
sbb
add
xlat
push
pop
cmp
js
(bad)
cmp
ds
inc
dec
lods
jno
loop
xchg
pushf
mov
bswap
imul
mov
idiv
enter
mov
sbb
dec
jns
aas
sar
ss
sbb
(bad)
push
fbld
dec
aam
xor
jns
mov
fucomip
xchg
mov
fldcw
icebp
int3
adc
fld
xor
xchg
push
sbb
lods
outs
gs
popf
push
ins
(bad)
and
and
fiadd
xchg
imul
xor
repnz
out
mov
sub
sub
data16
xchg
mov
adc
xchg
das
mov
push
push
into
jb
dec
and
mov
add
aad
not
ja
xchg
jmp
out
push
inc
mov
into
fbstp
pop
push
and
jecxz
repnz
lods
xchg
push
sbb
inc
cld
xchg
rol
fiadd
ret
mov
shl
jle
clc
(bad)
fimul
ret
or
inc
pusha
(bad)
inc
movs
xor
jge
jbe
test
push
dec
mov
fidivr
aam
fdivr
jns
mov
mov
fdivr
dec
arpl
gs
push
es
mul
out
je
jbe
outs
retf
jg
ret
shl
jp
mov
test
pushf
sub
inc
cmp
mov
pop
(bad)
dec
add
sub
dec
or
adc
ja
mov
or
addr16
xchg
in
mov
stos
mov
xor
scas
repnz
loope
mov
pop
pop
(bad)
aaa
mov
cmp
jne
ret
dec
ror
rcr
retf
xor
mov
movs
push
push
retf
fidivr
cmp
out
enter
bound
sub
loop
sbb
das
jg
das
int
adc
xor
sbb
hlt
inc
imul
cmp
jmp
fsubrp
ins
mov
dec
pop
pusha
mov
sbb
xchg
xchg
popw
aas
in
xchg
and
cmp
add
test
jge
mov
mov
mov
cli
gs
test
ret
xor
sbb
into
and
lahf
shr
shr
ins
rcl
add
and
mov
xchg
enter
cmps
sar
sbb
stos
or
jge
scas
neg
lds
mov
repz
add
leave
mov
mov
jge
test
inc
leave
pop
loopne
cmp
out
adc
sar
jb
jl
mov
loopne
shr
imul
out
cmps
fstp
imul
inc
mov
pop
mov
xchg
mov
enter
loope
int
and
add
push
mov
test
cmp
or
or
rol
outs
mov
push
imul
or
inc
in
fnstsw
push
icebp
sub
ds
mov
test
or
sbb
sbb
outs
ret
mov
inc
cmps
cwde
das
jnp
lods
push
push
arpl
out
mov
push
jne
cmp
xor
pop
mov
cmp
sbb
sub
inc
popa
addr16
add
pop
imul
or
pop
sahf
or
scas
shr
adc
(bad)
xor
aaa
pop
mov
adc
push
(bad)
fdivr
mov
mov
pop
or
retf
stos
sti
add
and
jle
jo
cli
jno
(bad)
fcmovnbe
sub
test
xchg
retf
(bad)
jnp
retf
sub
mov
fld
mov
inc
sub
cdq
shr
push
js
mov
hlt
fmul
ficomp
dec
lock
lods
mov
jge
shl
jne
jl
rcr
lods
int3
movs
loope
xlat
cmp
mov
stos
push
inc
scas
loop
aad
add
push
outs
icebp
push
test
pop
cmp
sub
pop
lea
scas
rcr
dec
aam
aas
mov
and
and
data16
xchg
fcomp
hlt
mov
inc
push
imul
inc
push
je
out
mov
mov
or
loope
lock
fmulp
das
nop
sar
mov
cs
fsubr
fld
aam
mov
ja
shl
dec
rol
add
arpl
jg
xor
mov
dec
inc
data16
nop
or
add
ja
or
pop
push
loop
call
jecxz
and
and
pop
popa
pop
sub
xor
cld
popa
jb
fidiv
cli
rol
dec
sti
or
sub
aad
adc
ficom
leave
inc
xchg
or
imul
cmp
push
or
fisub
pop
mov
sbb
xchg
retf
stos
adc
mov
mov
cmc
inc
enter
sbb
bound
jecxz
inc
retf
call
pop
jg
pop
das
dec
mov
push
stc
neg
sub
mov
aas
test
scas
sti
lock
fwait
sbb
jo
mov
push
les
push
ds
stos
jo
fistp
pusha
jnp
ret
or
xchg
dec
mov
mov
dec
or
push
inc
dec
mov
mov
adc
inc
popf
inc
out
or
mov
cmp
std
sub
fsubr
or
lds
xchg
mov
daa
bound
test
dec
mov
xchg
sbb
shl
outs
stc
pop
push
das
int
aaa
inc
push
adc
test
and
push
cld
xor
aam
movs
repnz
cli
mov
jne
xor
push
jle
pop
test
push
hlt
cwde
into
jecxz
xchg
stos
aaa
xor
js
lods
les
int3
icebp
stos
xchg
ss
mov
loop
xchg
stc
fild
cli
scas
jmp
cmp
inc
cmp
pop
dec
xor
or
mov
or
fld
sbb
xchg
cwde
push
add
out
inc
xor
out
addr16
and
cs
fsubr
xchg
or
pop
xchg
cli
jo
repnz
add
scas
sub
jp
mov
mov
pop
arpl
(bad)
pusha
fidivr
push
jl
(bad)
rol
(bad)
xor
pop
pop
lea
bswap
dec
mov
adc
xchg
pop
fnstcw
bound
test
idiv
loope
movs
mov
(bad)
push
retf
sbb
mov
call
mov
cwde
out
shl
clc
adc
xchg
(bad)
mov
push
adc
nop
pop
out
pusha
push
jb
aam
pop
hlt
fidiv
lds
inc
retf
push
lods
cmc
inc
adc
dec
and
rcr
rcl
gs
ret
jecxz
jns
cmp
in
into
das
xor
sbb
or
(bad)
xor
iret
cdq
cwde
mov
lods
xor
shl
movs
mov
pop
aam
(bad)
(bad)
xor
sbb
xchg
icebp
xchg
fwait
or
fwait
pop
adc
mov
sub
daa
fsub
movs
jbe
pop
xor
popf
and
jecxz
test
sbb
jge
inc
pop
mov
or
test
in
cmp
mov
call
jmp
shl
ins
dec
cmp
test
jbe
(bad)
xchg
shl
imul
xchg
sbb
out
adc
scas
mov
and
xor
add
dec
and
icebp
xor
fs
fidivr
in
mov
mov
lods
aam
aas
jno
sub
pop
addr16
mov
(bad)
sbb
(bad)
(bad)
fild
mov
cdq
jg
and
or
pop
ds
inc
push
cld
or
sub
ins
add
sub
mov
pop
mov
retf
xchg
and
mov
pop
test
or
pop
cmp
mov
or
lock
cmp
cmp
test
stos
or
dec
add
add
add
xchg
aaa
cmp
jnp
into
pop
into
fwait
ins
pusha
ret
out
cmp
scas
or
pop
mov
push
mov
jae
jmp
call
je
xchg
adc
push
call
push
pushf
lods
fucomi
(bad)
pop
mov
pop
add
pop
mov
or
inc
sti
mov
sbb
mov
loop
iret
inc
and
test
xor
mov
mov
mov
sub
lods
arpl
call
fcmovb
push
and
(bad)
xor
int
push
sbb
cli
and
adc
push
int3
inc
xchg
jge
jp
mov
push
dec
sar
std
outs
je
imul
add
or
pop
sbb
add
aad
sar
and
das
add
outs
cwde
daa
test
mov
cmp
fwait
mov
imul
aas
sti
jmp
int3
pop
lods
js
add
cli
popa
mov
dec
ins
mov
pop
inc
sub
lea
jp
popa
aad
(bad)
sbb
retf
sbb
jb
jae
sub
jle
sub
mov
cmp
lahf
xchg
jge
mov
pop
fisttp
inc
sub
xchg
jbe
retw
aas
stc
xlat
add
xor
jmp
dec
push
pop
and
cmps
movs
and
push
(bad)
cmc
adc
push
mov
mov
repnz
daa
pop
(bad)
ret
dec
in
aas
(bad)
out
add
push
int3
lods
push
mov
dec
popa
push
add
int
(bad)
data16
jl
jns
sar
jo
loope
jae
xor
sub
cmp
jmp
cmp
xchg
mov
mov
outs
clc
jecxz
inc
mov
fidivr
bound
jg
bound
shl
lock
sub
jg
repz
cmc
adc
adc
fstp
inc
push
call
out
sbb
xchg
dec
and
lods
cmp
into
lds
movs
push
or
div
or
pusha
jl
leave
mov
outs
jb
(bad)
lahf
shr
les
dec
iret
outs
mov
jmp
jae
cmc
mov
(bad)
mov
and
hlt
adc
ins
xor
es
adc
fistp
pop
test
xchg
sbb
mov
rcl
arpl
push
test
in
sub
sbb
pushf
(bad)
icebp
fadd
push
movs
retf
mov
xor
loopne
pop
fidivr
inc
(bad)
cmp
and
(bad)
mov
sti
inc
mov
push
pop
fsub
mov
xlat
clc
jbe
js
dec
pop
scas
fwait
mov
hlt
jae
add
leave
rcr
iret
push
(bad)
imul
xchg
inc
aas
inc
mov
push
inc
data16
popa
inc
sub
outs
pop
or
or
dec
adc
sbb
jne
jmp
sub
xor
xor
mov
arpl
sahf
test
ret
cmp
or
jp
in
in
sbb
mov
iret
fisttp
enter
std
std
or
test
pop
cmp
xor
adc
(bad)
call
fprem
xchg
pop
ja
ror
jecxz
fsubr
inc
add
sbb
mov
adc
lahf
jmp
or
mov
xor
movs
mov
push
stc
gs
push
lods
hlt
daa
loope
or
xchg
add
jmp
das
mov
mov
dec
stc
retf
push
cmp
ror
mov
jmp
and
sub
test
mov
cmp
jg
inc
fdiv
sbb
cld
jmp
adc
aaa
dec
pop
ror
mov
jne
mov
and
sub
js
and
and
stc
jmp
repz
xchg
add
int
in
sub
mov
adc
inc
sbb
xchg
add
adc
jle
push
mov
pmaddwd
test
cmp
or
call
or
dec
add
in
and
sti
mov
pusha
push
add
sahf
repnz
call
(bad)
outs
inc
je
mov
mov
cmp
jecxz
nop
xor
mov
dec
xchg
aam
mov
dec
cmp
ucomiss
sub
shr
sub
(bad)
sar
adc
mov
xor
pause
inc
mov
mov
mov
js
pop
inc
in
add
ds
xchg
cmp
jns
outs
mov
inc
int3
cld
cmp
pusha
jge
cld
ret
lds
retf
sub
iret
lahf
mov
push
cmp
loope
(bad)
in
push
xchg
int
jmp
(bad)
leave
sbb
retf
int
popf
xchg
push
mov
dec
jle
adc
mov
repz
mov
jg
out
pop
ret
out
in
sbb
dec
jg
movs
sub
fmul
xchg
(bad)
sbb
(bad)
int
xor
(bad)
sahf
scas
ja
retf
mov
mov
push
int
sub
jge
bound
fwait
mov
dec
push
test
mov
mov
mov
mov
cmps
adc
dec
enter
cmp
push
fstp
xchg
mov
push
outs
mov
sub
loope
iret
repnz
int3
mov
xor
adc
sbb
in
inc
or
push
mov
dec
dec
dec
adc
dec
or
mov
and
mov
mov
sub
xchg
fwait
or
push
call
movs
jo
das
xor
add
stc
hlt
pop
xchg
pop
retf
cmp
(bad)
xor
ret
jno
test
pop
movs
mov
sub
fdiv
mov
loop
jecxz
hlt
add
inc
xchg
in
mov
sbb
shl
adc
mov
pop
stos
rol
stos
sub
jmp
adc
fldcw
aas
rol
xor
mov
(bad)
stc
pushf
cli
pop
gs
jae
xlat
mov
pop
push
rcl
es
adc
repz
add
sbb
es
hlt
outs
and
pop
adc
(bad)
pop
call
sbb
push
scas
pop
icebp
pop
sub
adc
pop
mov
pushf
sub
mov
sbb
mov
test
leave
push
dec
das
test
popa
xor
fptan
add
aaa
aad
sahf
xor
jmp
arpl
dec
cwde
popa
and
rcl
data16
mov
push
repz
aaa
mov
icebp
ror
fisttp
aas
ret
out
push
and
jg
and
pop
mov
pop
in
jns
and
adc
mov
arpl
or
jnp
add
outs
fiadd
sbb
jmp
shl
pop
call
stos
jbe
(bad)
lock
rcr
jecxz
dec
in
push
and
pop
aaa
call
je
jae
and
rol
jbe
ffreep
pushf
inc
sbb
xor
xchg
repz
loopne
jns
mov
in
and
dec
imul
add
jns
enter
pop
jb
imul
repz
in
mov
inc
sub
aas
sbb
jbe
sahf
shl
push
sahf
mov
sub
adc
test
test
pop
cwde
test
popa
jbe
add
jae
rol
hlt
jmp
pop
leave
(bad)
add
test
cld
mov
dec
mov
cwde
sub
xchg
mov
mov
adc
daa
sub
int3
lods
mov
inc
mov
mov
int3
arpl
and
std
sar
push
push
addr16
adc
test
scas
lea
fsub
sbb
adc
fs
movs
and
inc
mov
movs
mov
ins
test
xchg
sub
mov
in
cwde
push
fcomip
mov
lahf
pop
jg
cmp
add
lock
daa
inc
sbb
js
sub
inc
dec
popa
out
data16
mov
mov
outs
cmp
xchg
xlat
jbe
aaa
aaa
imul
xchg
in
push
sub
inc
(bad)
cmp
test
push
mov
jmp
push
or
pop
or
add
shl
cmc
imul
cmp
(bad)
iret
test
fstp
out
test
and
pop
movs
push
ss
sbb
popa
(bad)
push
sbb
ja
sub
push
sbb
pop
adc
outs
jnp
xor
mov
leave
fucomip
push
mov
sbb
jae
lods
sbb
hlt
js
pop
xchg
push
mov
and
std
movs
retf
push
into
aas
hlt
dec
pop
ret
jne
mov
pushf
push
neg
dec
jae
fnstcw
cmc
jnp
lea
rcl
movq
pop
xor
sub
shl
or
fist
fstp
sbb
and
ss
mov
sub
cli
rcr
aad
rcl
ror
sub
popa
xor
nop
jbe
fsub
cld
add
movs
(bad)
cmp
mov
mov
lods
js
inc
push
test
mov
dec
fsubr
scas
rcl
cmp
shl
mov
daa
repnz
xchg
push
xchg
movs
or
add
int3
mov
push
jno
dec
mov
cmp
lds
jmp
gs
mov
mov
sbb
in
dec
imul
sub
fcmovnu
jmp
inc
inc
push
or
mov
mov
sub
imul
xchg
and
and
lock
in
pop
call
loope
push
aad
xchg
adc
aaa
stos
xlat
test
into
(bad)
cmc
sti
inc
xchg
push
inc
(bad)
fadd
imul
mov
retf
icebp
inc
push
push
and
mov
mov
dec
or
mov
xchg
jmp
add
test
out
add
sar
les
xor
fild
xchg
or
enter
push
shl
mov
arpl
aaa
dec
lea
xor
adc
push
jmp
push
cmp
pop
adc
cmp
mov
pop
or
cld
pop
cmps
aam
dec
push
sbb
out
or
les
leave
pop
les
and
aad
mov
adc
pop
fst
icebp
push
adc
mov
pop
mov
inc
xchg
lahf
cmp
mov
dec
mov
pop
and
sbb
add
inc
fistp
mov
enter
ja
mov
sbb
inc
xor
scas
jno
sub
inc
sub
sub
mov
jno
dec
fwait
cmps
cs
adc
xlat
pop
or
push
call
jge
add
pop
mov
pushf
sar
pop
retf
dec
loop
pop
and
hlt
cmp
stos
lock
xchg
mov
inc
push
push
(bad)
int
jp
lea
movs
sbb
sbb
and
sub
push
push
sub
push
cmps
push
or
or
fs
lds
jae
push
dec
inc
daa
mov
aaa
jns
aaa
(bad)
jnp
cmp
stos
cmp
gs
sub
jl
into
movs
pop
jne
test
mov
xor
mov
push
mov
inc
fsubr
loopne
inc
cli
outs
sti
gs
mov
ror
sbb
xchg
add
iret
(bad)
cmp
cmp
rol
sub
in
xchg
pop
mov
mov
repnz
sub
aam
and
icebp
mov
pop
int
or
bound
in
aam
ds
inc
dec
inc
ret
stos
jmp
dec
lds
ins
cmc
xlat
js
sbb
ret
loopne
and
push
in
out
jp
and
and
mov
sti
add
shr
hlt
jb
ret
sbb
repz
cmp
sub
xchg
stos
sub
(bad)
into
inc
xlat
push
fdivr
mov
jge
aas
movs
push
push
cwde
enter
add
cmc
inc
dec
jg
push
adc
adc
cs
push
or
imul
add
dec
xor
movs
pop
sub
mov
add
jmp
hlt
popf
sub
jmp
and
jmp
pop
pushf
or
jno
loope
mov
xor
inc
adc
loope
mov
or
stc
imul
(bad)
bound
fadd
jmp
pop
or
std
add
je
rol
mov
or
dec
add
sub
test
mov
aaa
call
std
cmp
jle
mov
out
daa
adc
icebp
push
push
and
int
fld
or
add
aad
dec
push
add
push
cmp
xor
mov
lock
(bad)
mov
dec
sub
and
sbb
cs
lods
out
mov
adc
jp
pop
dec
lock
jl
mov
mov
into
aam
mov
xor
push
push
test
shl
sub
inc
mov
fs
imul
xlat
mov
(bad)
mov
pop
add
sbb
rcl
fadd
test
(bad)
out
mov
(bad)
out
clc
mov
jmp
push
cmc
in
xchg
lea
mov
mov
call
push
xchg
mov
iret
cwde
mov
xor
call
sbb
lock
push
mov
mov
and
dec
jo
mov
js
repz
mov
lds
xor
mov
idiv
mov
imul
icebp
cmc
lea
pop
scas
bound
cld
outs
in
xor
xchg
adc
mov
jecxz
adc
mov
or
xor
or
xchg
push
inc
fwait
xchg
pop
aaa
(bad)
je
push
dec
pushf
rol
std
out
mov
rcr
mov
mov
sahf
outs
aam
lock
icebp
xor
das
retf
sahf
daa
shl
mov
daa
mov
cld
push
dec
mov
or
jae
pushf
cmc
(bad)
pop
ds
jb
mov
jge
xor
pushf
push
and
das
test
loopne
push
out
push
or
xor
popa
lds
or
icebp
sti
push
fidivr
gs
cmp
icebp
addr16
pop
push
pop
call
or
dec
push
sbb
dec
inc
ins
mov
nop
dec
cmp
out
adc
sahf
fsub
jge
push
and
stos
cmp
push
jnp
sub
daa
xor
scas
fcomp
jp
mov
gs
ret
cmc
mov
push
or
jge
cmps
mov
shr
mov
xor
and
aas
push
pop
ficomp
bound
iret
stc
cmp
sbb
dec
cmc
mov
adc
sbb
imul
and
sbb
sar
int3
pop
(bad)
iret
pop
jmp
fdiv
jg
jne
inc
mov
xor
xchg
popf
(bad)
loope
mov
imul
jbe
(bad)
cmps
rcr
xchg
adc
movs
int
inc
loopne
jno
pop
push
test
inc
stc
xchg
or
loop
adc
xor
xchg
dec
(bad)
enter
(bad)
pusha
jae
mov
ror
ret
repnz
pop
add
ss
je
shl
(bad)
mov
imul
(bad)
jle
in
rcr
push
push
(bad)
rol
inc
jl
push
cmp
gs
xor
and
fistp
stos
aam
mov
dec
push
lock
jo
jno
push
repz
mov
inc
sbb
xchg
ins
xchg
jg
stc
retf
test
cli
fst
fstp
mov
xor
jne
aas
mov
test
loop
cmc
mov
adc
lea
in
jmp
dec
arpl
outs
ss
int3
fld
xor
icebp
pop
jo
fstp
fidiv
add
push
cmp
stos
lock
nop
out
fdiv
(bad)
loopne
shl
mov
lock
fistp
ins
or
mov
pop
pop
sbb
jnp
retf
xchg
add
enter
cmps
mov
add
add
jns
bnd
das
test
mov
(bad)
cli
(bad)
jnp
in
mov
xchg
xchg
cmps
cdq
mov
adc
inc
inc
cs
mov
ret
sub
(bad)
jmp
sbb
in
movs
inc
mov
sbb
dec
or
cmps
das
call
mov
std
jl
data16
and
dec
mov
adc
add
cmc
(bad)
dec
cmp
sub
leave
pop
dec
out
jnp
cs
nop
and
pop
scas
cs
and
shl
add
xchg
push
mov
sub
or
mov
adc
lods
and
(bad)
adc
lock
pop
aas
dec
inc
cdq
push
and
repnz
sahf
mov
mov
dec
sub
ss
fdivr
xchg
fsubr
ins
xchg
mov
ins
call
scas
or
pop
dec
mov
arpl
add
or
push
(bad)
pop
sbb
pop
jbe
out
(bad)
lods
das
cli
adc
lods
(bad)
mov
int3
pushf
mov
cmp
or
repz
fbld
jg
push
mov
jg
pop
mov
mov
fsub
retf
imul
sub
or
mov
std
icebp
inc
pop
jl
gs
scas
mov
enter
xchg
outs
inc
sbb
mov
adc
push
ret
mov
mov
lds
pop
ss
dec
push
mov
dec
xchg
mov
and
iret
fidiv
shr
xor
or
rol
adc
jnp
dec
xchg
ins
jecxz
add
or
push
or
addr16
ds
mov
popf
arpl
inc
adc
fwait
jle
push
cmp
sti
inc
jge
ja
aad
mov
int3
sahf
scas
stc
jmp
push
sbb
pop
adc
and
push
dec
inc
jns
lea
push
mov
sub
or
pop
push
in
sub
test
into
xor
rcl
hlt
xchg
xchg
xchg
stos
mov
neg
mov
aas
clc
mov
int3
sar
or
jmp
aaa
fld
imul
push
les
push
add
add
pop
cvtdq2ps
jmp
mov
aad
xor
add
mul
mov
jmp
xchg
xchg
hlt
mov
(bad)
icebp
adc
daa
pop
enter
fcomi
(bad)
and
mov
xchg
pop
test
fild
sahf
xor
jmp
xor
hlt
cmp
mov
or
in
sub
sar
sbb
lods
pop
add
fild
inc
and
mov
(bad)
pop
mov
pusha
inc
lahf
xor
(bad)
ds
or
push
test
add
adc
or
mov
repnz
repnz
dec
sub
cmp
sbb
sub
dec
sub
retf
cmc
pop
mov
je
popf
cmc
add
sub
lea
jno
sub
xor
out
ja
les
sbb
inc
sub
stos
shr
cmps
jg
cmp
dec
bound
movs
sar
iret
pop
push
pop
aad
scas
jno
inc
jno
fdiv
or
retf
push
jnp
sub
sti
jg
ja
leavew
imul
(bad)
gs
mov
cs
retf
fiadd
(bad)
inc
or
fistp
xchg
into
(bad)
jmp
and
jns
jp
icebp
lods
cmc
xor
cmp
dec
and
sub
xor
add
(bad)
rol
sub
mov
mov
in
pusha
mov
loopne
iret
int
sbb
add
sbb
xchg
pop
mov
imul
cli
cmc
imul
pusha
mov
fcmovne
repz
mov
jno
xor
scas
cmp
gs
jns
mov
mov
and
cdq
mov
bound
std
dec
lds
aaa
pop
pop
pop
mov
sub
pop
or
push
sbb
fnstenv
push
int
or
nop
aas
dec
dec
test
fwait
out
xor
xchg
retf
jmp
push
dec
sbb
pushf
push
stos
cmc
les
lods
aam
dec
xchg
jb
pop
cmps
fsub
pop
dec
adc
les
mov
sub
mov
pop
jle
pop
push
or
mov
xlat
pop
mov
mov
xchg
pusha
or
jl
mov
pop
fwait
in
stc
push
adc
lahf
inc
or
stc
sbb
es
dec
and
mov
xchg
pop
or
or
dec
push
mov
or
out
push
inc
sbb
test
mov
ror
or
sub
bound
pop
fdiv
pop
or
pop
sub
mov
and
mov
inc
push
add
addr16
div
rcr
pop
imul
(bad)
in
pusha
enter
mov
popf
pop
ss
int3
add
ins
jle
dec
mov
add
ja
pop
xor
add
loopne
push
sbb
xor
lea
add
repz
(bad)
mov
and
fcomip
push
jne
(bad)
hlt
ins
inc
popf
ficomp
mov
lahf
add
jmp
pop
sbb
scas
nop
mov
inc
shr
xchg
(bad)
pop
sub
inc
fld
jno
cmps
inc
ror
or
mov
ja
std
rcl
xor
jae
outs
and
adc
movs
adc
jbe
hlt
in
jmp
pop
movs
xlat
imul
mov
mov
pushf
adc
sub
mov
xor
adc
ins
in
out
add
int
or
lahf
mov
xchg
fwait
(bad)
pop
in
in
retf
fidivr
mov
push
cmp
sub
xchg
inc
daa
dec
int
stos
jecxz
movs
int3
or
mov
and
cmp
cmc
and
cdq
and
sub
retf
adc
inc
pop
xchg
push
sub
xchg
ror
xchg
pop
cmp
out
cdq
cmp
or
test
call
cld
mov
mov
mov
cmp
clc
adc
lea
push
push
adc
adc
jl
int3
mov
sub
lods
in
sbb
mov
sub
scas
push
fisub
jb
sub
lock
loope
and
ret
xchg
ins
call
shl
hlt
add
fild
mov
js
inc
mov
adc
lahf
cmc
or
mov
dec
mov
jb
jmp
pop
movs
mov
scas
xor
in
popf
and
gs
vphaddbd
push
ins
das
pop
xor
imul
retf
loope
test
cmc
fnstenv
mov
aam
and
ja
adc
stos
adc
mov
ins
vsubss
xchg
ins
sub
or
adc
sbb
jmp
push
xchg
jns
push
out
xor
sbb
add
iret
jl
aaa
push
fdivr
ret
dec
and
or
cmp
cmc
cli
jne
mov
or
pop
fcomp
xor
loop
pop
hlt
imul
add
imul
das
sub
in
(bad)
xlat
mov
aam
and
gs
imul
ds
jg
lahf
xor
test
cmps
xchg
push
jnp
mov
pop
fwait
mov
mov
cmp
adc
xchg
xor
xor
inc
rcl
push
bound
in
xchg
nop
mov
sbb
push
sub
push
(bad)
cmp
popf
sub
xchg
iret
aas
popf
stc
jns
loope
fwait
hlt
pop
pop
ss
mov
retf
test
fist
cld
jmp
ret
ja
inc
or
ins
adc
in
call
sahf
fild
push
stc
mov
mov
jne
pop
mov
push
xor
mov
mov
lahf
mov
push
xor
xor
xchg
xchg
mov
jno
repnz
or
iret
inc
jb
pop
lods
(bad)
lea
dec
icebp
data16
aad
jne
and
test
jae
xchg
lods
pop
mov
jb
daa
add
mov
xchg
popa
jg
pop
cmp
jp
hlt
dec
xchg
dec
nop
repz
ss
cmps
cmc
rol
and
pop
in
inc
sub
jge
add
push
add
and
fs
mov
add
mov
dec
sub
cmp
pop
pop
out
repnz
out
dec
fcmovne
push
pop
call
inc
lock
pop
ins
add
je
cmp
fiadd
jle
les
sar
dec
sbb
mov
jmp
outs
repz
shr
mov
call
mov
push
and
sbb
mov
test
movs
add
sbb
mov
add
aaa
mov
pop
ins
xchg
mov
shl
rol
push
or
sbb
dec
sub
out
sub
push
cwde
cmp
xchg
mov
pop
sub
push
add
movs
jb
dec
rol
xor
push
js
jge
icebp
adc
shr
or
fldenv
leave
lea
adc
xor
mul
out
and
popa
dec
xor
popa
inc
pop
outs
pop
jg
add
scas
out
or
jb
jp
and
retf
jae
xor
inc
xor
stos
retf
dec
outs
inc
sahf
enter
(bad)
sbb
pop
fadd
ret
adc
pop
out
cmp
scas
adc
and
adc
dec
pusha
test
sub
lahf
sub
pop
call
inc
mov
fstp
sub
jecxz
clc
pop
dec
imul
push
mov
daa
cmp
push
bsf
out
adc
or
cli
retw
dec
shl
loop
iret
fdiv
add
mov
rol
push
sbb
mov
xlat
or
shr
mov
rol
shl
xchg
into
mov
fild
pop
shr
int
jg
shl
mov
xor
dec
stos
push
inc
push
cli
cmp
fld
call
fst
ja
push
and
(bad)
(bad)
in
movs
jbe
xor
iret
int
bound
jle
xchg
xor
int
push
gs
cmps
adc
fldenv
sbb
ss
imul
cld
or
pop
jo
cmps
mov
movs
aaa
xchg
jmp
retf
dec
fcmovne
cmps
and
dec
mov
mov
pusha
push
adc
or
repz
cmp
and
xchg
jmp
retf
push
aas
cmps
imul
out
ins
pop
jnp
into
retf
mov
test
mov
pop
ret
outs
sar
pop
adc
add
add
pop
and
cmp
jno
or
jb
call
jge
loopne
adc
out
int
inc
mov
mov
mov
sbb
mov
not
ss
sar
fisubr
mov
into
cdq
test
dec
add
push
sub
cmp
jl
fsub
mov
cli
mov
imul
(bad)
cwde
test
sub
push
adc
and
hlt
clc
in
sub
jl
inc
fsub
xlat
pop
xor
xor
dec
push
stc
scas
in
mov
sub
(bad)
jp
jp
test
scas
lds
xchg
nop
je
push
mov
jp
fdivr
xlat
mov
jp
add
popf
icebp
dec
es
out
out
(bad)
into
cmps
jmp
cmps
loop
sub
std
dec
hlt
push
push
xor
loopne
scas
xchg
ins
stos
cs
fimul
aad
or
or
cmp
pop
mov
sbb
dec
push
cs
add
jne
shr
inc
imul
adc
nop
push
loopne
aas
sub
mov
adc
push
repnz
je
aam
sub
stos
into
sub
outs
inc
inc
daa
sbb
jmp
rol
push
cli
aad
mov
ror
imul
sbb
xchg
mov
mov
dec
or
imul
les
cmc
pusha
por
mov
test
xor
mov
mov
call
(bad)
pop
pop
cmp
jne
ds
mov
lods
test
movs
sub
sbb
xor
fs
fstp
mov
arpl
push
stos
jne
sub
or
or
cmps
dec
mov
mov
push
(bad)
nop
div
pop
jno
jp
mov
sbb
loope
in
aaa
mov
or
inc
ins
cmp
push
sahf
sti
call
fs
ins
lock
ss
aas
mov
inc
mov
fstp
push
pop
sahf
inc
outs
int
mov
jne
dec
jmp
and
lahf
xchg
xor
mov
aas
or
adc
iret
or
and
enter
in
int3
out
ds
push
fcom
mov
shl
fisttp
mov
movs
dec
test
fs
mov
gs
scas
sbb
loopne
jge
pop
sbb
jg
inc
(bad)
sbb
repnz
enter
les
pop
pop
inc
jae
(bad)
dec
leave
push
mov
nop
neg
lahf
inc
mov
icebp
fld
inc
addr16
cmps
jle
mov
jmp
dec
call
sbb
lock
dec
out
mov
sti
jns
push
adc
jno
mov
xor
fidiv
jne
xor
push
adc
adc
pop
xor
adc
xlat
inc
sar
sbb
int3
mov
mov
sbb
cs
pushf
mov
add
mov
sub
ror
inc
jge
popf
mov
push
inc
mov
inc
int3
inc
out
scas
inc
jb
mov
aam
popa
dec
cmps
cdq
pop
shl
cmp
pop
adc
cmp
xchg
lods
ss
fmul
sar
cld
repz
push
and
sub
xor
(bad)
bound
xchg
shr
test
aad
xchg
add
call
mov
cmps
cs
fisttp
add
mov
in
ins
mov
sbb
das
jge
(bad)
imul
shl
in
mov
xor
jl
mov
test
inc
dec
(bad)
dec
int3
dec
dec
test
sti
xor
pusha
(bad)
jo
test
jge
ins
jnp
sbb
or
push
cmp
and
cmp
inc
xchg
retf
mov
mov
in
mov
test
fdiv
lods
popa
dec
gs
fs
mov
out
inc
adc
cmp
push
inc
pushf
mov
daa
or
aas
push
pop
cmp
test
or
pop
xor
(bad)
sbb
fcmovbe
sti
mov
sbb
pop
push
jle
dec
loopne
sti
pop
xor
and
std
out
mov
xchg
popa
in
retf
cmp
and
hlt
out
outs
iret
gs
leave
adc
inc
pop
xchg
pop
adc
mov
enter
dec
mov
sub
jg
movs
and
les
sbb
xchg
sar
movs
cmp
test
mov
or
loopne
adc
es
mov
popa
out
xchg
or
jg
mov
in
cli
sub
mov
push
cmp
rcl
jl
aas
sahf
pusha
arpl
pop
dec
mov
dec
sub
or
dec
xchg
mov
jo
mov
fst
cmp
out
(bad)
mov
xor
mov
(bad)
mov
sub
out
daa
fstp
shl
mov
adc
sbb
mov
gs
cdq
nop
cmp
pushf
test
mov
aaa
popf
stc
call
or
dec
jns
mov
in
inc
fwait
lea
or
mov
mov
dec
push
xor
fs
out
sbb
loopne
jmp
pop
jmp
fnsave
xor
dec
leave
pushf
inc
aad
inc
pop
pop
sti
cmp
(bad)
and
neg
cs
cmps
adc
or
or
pop
sbb
iret
std
dec
mov
sbb
inc
ss
sbb
cmp
outs
xor
das
movs
inc
(bad)
inc
inc
int
mov
sub
adc
xchg
(bad)
adc
(bad)
(bad)
icebp
stc
push
test
mov
jmp
leave
xchg
lds
mov
mov
int
xor
shl
stc
and
mov
stc
mov
push
xor
fs
dec
iret
sahf
xor
mov
or
dec
test
push
repz
bound
push
or
jns
inc
lods
imul
xchg
jl
int
mov
in
bound
nop
and
and
mov
sti
pop
inc
sbb
sub
lds
sbb
movs
mov
hlt
add
inc
fdivr
retf
mov
cwde
xchg
xchg
in
imul
rcl
jb
in
rcl
lds
sbb
and
mov
jo
cmp
mov
jo
cmp
imul
sbb
inc
push
push
or
mov
sbb
test
push
int
mov
or
lock
rol
fild
pusha
movs
aad
rcl
pop
ins
scas
mov
(bad)
mul
mov
or
ds
pop
xchg
shl
lds
aam
test
jbe
in
std
in
dec
out
call
(bad)
in
cli
into
movs
rcl
mov
rol
mov
inc
sub
test
cmp
inc
fdivr
and
mov
mov
lahf
lea
getsec
and
xchg
pop
pop
(bad)
xor
repz
movs
jb
adc
lea
push
sub
leave
movs
sbb
gs
mov
inc
(bad)
stos
les
mov
(bad)
mov
ret
mov
jae
xor
inc
fisub
loop
adc
or
outs
sub
and
sbb
and
and
in
dec
mov
pushf
mov
sub
sub
mov
ja
push
int3
sub
(bad)
mov
xlat
rcl
push
in
inc
and
fidiv
hlt
leave
addr16
sub
arpl
ja
jecxz
jp
cld
movs
je
sub
sub
adc
shl
sahf
and
and
adc
mov
cmp
jne
arpl
fisttp
jmp
jp
add
out
ror
popf
or
pop
sbb
add
sub
push
into
cmp
gs
pushf
mov
push
mov
add
stos
add
inc
push
cli
jbe
jo
cmp
shr
mov
fst
xchg
jmp
cmps
fmul
retf
mov
sbb
repz
pop
out
ret
xchg
mov
mul
in
ja
retf
mov
xor
jp
xor
mov
push
jmp
lock
pop
inc
adc
mov
sahf
outs
aaa
dec
xchg
mov
(bad)
mov
setle
stos
imul
fistp
imul
(bad)
bound
loop
fnstsw
pusha
mov
out
retf
jns
out
inc
add
pop
bound
es
cmp
mov
fsubr
sahf
inc
or
adc
fs
xlat
inc
shl
int3
imul
ins
jmp
je
add
mov
in
std
fst
pusha
int3
dec
mov
pop
dec
jb
mov
jb
jb
jp
push
inc
sub
mov
adc
scas
je
pop
mov
fcomp
sbb
hlt
mov
mov
mov
mov
test
mov
int
dec
out
mov
and
in
test
cmc
mov
fxtract
xor
adc
pop
jg
push
loopne
dec
out
(bad)
lods
xchg
or
xor
mov
inc
mov
test
shr
fcmovu
mov
not
rol
xor
inc
cmps
push
jmp
add
(bad)
inc
push
add
mov
scas
sahf
lods
xor
(bad)
xchg
mov
jl
or
(bad)
(bad)
jae
push
add
test
mov
pop
adc
and
adc
mov
out
lods
(bad)
cdq
imul
push
cwde
bound
dec
mov
jmp
cmps
xchg
pop
ficom
xor
retf
in
scas
jae
dec
rol
comiss
mov
push
ret
dec
popa
lea
sahf
xchg
cdq
(bad)
and
mov
cdq
xchg
out
or
clc
stc
fdiv
pop
mov
shr
(bad)
pop
popa
es
or
lock
cmps
loop
push
jmp
xor
leave
rcr
mov
add
in
push
inc
daa
mov
loope
xchg
nop
or
pop
push
push
enter
call
mov
add
cmp
sub
daa
inc
xor
sti
push
clc
cwde
call
push
repz
div
jecxz
inc
lea
loope
sbb
movs
mov
les
push
pop
mov
add
cmp
shl
sti
fdivr
inc
bnd
imul
iret
rcr
inc
add
jmp
iret
and
jns
pushf
xchg
int3
mov
sbb
sbb
rcl
je
daa
xor
mov
cmp
pop
aam
mov
cmp
inc
fimul
ds
sub
hlt
xchg
outs
out
(bad)
fisubr
scas
addr16
adc
sub
sub
jge
mov
dec
jge
push
ret
sbb
inc
sbb
mov
loop
sbb
and
push
in
cli
push
jl
xchg
mov
in
(bad)
out
ss
in
cwde
adc
repz
out
icebp
push
nop
lds
adc
mov
cmp
adc
xor
xrstor
(bad)
fld
mov
mov
icebp
mov
shl
cli
in
mov
std
repnz
fcomp
outs
ret
push
cli
jb
adc
push
mov
mov
push
jmp
mov
daa
xor
dec
push
jp
mov
cli
cmp
xchg
push
mov
stos
dec
out
cmc
fld
aam
daa
jge
(bad)
xor
arpl
push
xor
dec
std
jp
mov
mov
push
mov
or
mov
cmp
dec
mov
retf
and
stc
mov
mov
dec
push
xor
jge
addr16
xchg
clc
jns
jl
push
inc
cmovg
lea
add
jge
inc
mov
(bad)
lahf
xor
gs
dec
dec
inc
mov
mov
sub
mov
sbb
dec
outs
ret
or
cmp
push
and
push
push
into
clc
jno
dec
jp
aaa
sub
push
ret
jl
repz
mov
clc
shl
push
push
or
test
jmp
dec
cmp
les
sub
mov
mov
jno
ds
adc
jbe
inc
mov
pop
dec
les
enter
out
and
add
(bad)
scas
jmp
call
nop
inc
jle
aad
jns
sahf
test
stos
ds
cmp
es
movs
and
ret
adc
fsub
xor
cmp
ins
popa
push
stos
loope
rcl
dec
(bad)
xchg
fisubr
sub
xchg
shl
push
lea
int
pop
mov
pop
pop
sbb
mov
pop
or
mov
push
jmp
bound
loope
in
rcr
jnp
pop
call
scas
sub
aam
(bad)
lea
mov
stos
inc
adc
xchg
in
stos
jge
cmp
pop
stos
ins
inc
adc
cld
and
rol
inc
in
sti
mov
(bad)
fld
arpl
cmp
jmp
lods
imul
inc
push
jmp
popa
push
push
sbb
test
aam
jns
arpl
aam
pop
xchg
cmps
mov
repz
pop
cmc
shl
pushf
(bad)
out
fimul
cmp
inc
jg
dec
and
xor
xor
movs
and
jp
add
outs
lods
scas
push
ins
mov
dec
mov
ret
mov
pop
jp
mov
fcom
add
sbb
retf
xchg
push
adc
ins
jnp
cwde
sub
(bad)
gs
sub
sbb
loop
pop
cdq
sbb
and
sbb
shr
ins
pop
push
cld
sub
pop
(bad)
aaa
imul
jmp
jne
fisubr
ins
inc
ss
jl
scas
ret
inc
jle
push
inc
fs
mov
cld
cmp
mov
fld
xchg
mov
fild
adc
xor
jns
pop
lods
scas
enter
or
sub
and
call
cmps
dec
mov
sti
cli
(bad)
push
mov
add
fpatan
fs
into
inc
lock
sti
sub
out
lock
out
mov
test
push
cmp
in
and
sub
out
push
push
cmp
sahf
ret
pop
test
(bad)
and
sahf
mov
xchg
test
daa
loop
or
mov
or
ds
jo
adc
xchg
lea
(bad)
(bad)
xchg
aas
jnp
and
jp
and
inc
mov
fsub
push
rcl
ja
xchg
enter
mov
ret
dec
sbb
mov
das
(bad)
xor
imul
jb
inc
inc
push
popa
shr
xor
loopne
xchg
dec
xchg
data16
jl
cmp
xor
arpl
jbe
icebp
mov
mov
adc
sahf
inc
push
add
lods
scas
and
lea
popa
mov
enter
pop
fdivr
sbb
add
rcr
and
aad
mov
cmp
cwde
xchg
pushf
mov
retf
cmp
pop
stos
jmp
mov
jns
leave
stc
cwde
cs
out
mov
cld
or
push
xor
inc
fdiv
clc
daa
clc
cmp
test
xlat
cdq
retf
pop
cmps
mov
jno
fwait
mov
dec
jge
in
pop
pop
(bad)
movs
adc
rcl
inc
pop
test
sbb
lods
push
ins
mov
leave
jmp
ficomp
movs
xchg
ds
xchg
sbb
(bad)
aad
arpl
jg
dec
call
(bad)
mov
adc
pusha
push
ja
or
les
in
sahf
mov
push
dec
mov
mov
jo
call
sub
or
popa
dec
pop
fsubr
fnsave
ins
pop
sar
jnp
sub
(bad)
sbb
add
imul
std
jg
sbb
sub
cli
cmps
xchg
push
aaa
retf
or
mov
rol
rcl
sbb
push
ss
sbb
lods
int
xchg
fwait
and
das
loope
int3
les
jle
xchg
jmp
out
cmp
stc
mov
cmp
movs
fucom
into
xor
mov
repz
cmp
xlat
loope
daa
fst
mov
arpl
jo
or
and
fimul
dec
sar
sub
addps
xor
shl
jl
(bad)
sar
xchg
aam
jnp
cwde
mov
pop
xor
popa
pop
cs
jge
sbb
push
neg
add
jno
lock
mov
xchg
sahf
mov
fstp
mov
(bad)
ret
jmp
lods
mov
fadd
int
xor
cmp
dec
ins
cmp
mov
ins
clc
cmp
fdivr
(bad)
dec
inc
jmp
or
adc
mov
imul
loop
sub
xchg
pop
out
mov
and
dec
push
jmp
dec
or
jp
fwait
mov
mov
mov
movs
cmp
and
mov
jle
in
clc
jecxz
arpl
xchg
pop
inc
js
leave
and
ret
scas
add
in
pop
sti
mov
xchg
sub
aaa
xchg
cmps
fdivp
cmp
rcr
out
movs
jns
(bad)
movs
sub
push
jp
and
jl
rcr
mov
cmp
and
pop
movs
xchg
repz
es
loopne
dec
sahf
xchg
and
jge
dec
into
xchg
adc
pop
fisttp
xor
in
ins
imul
aam
jle
stc
int3
outs
cmp
hlt
not
(bad)
js
xchg
arpl
push
stos
add
inc
daa
cmps
pop
dec
pop
das
scas
push
and
clc
add
mov
nop
cmp
xlat
(bad)
(bad)
lock
fistp
pop
mov
and
fcom
ins
jbe
aaa
mov
add
mov
stos
mov
lock
inc
xor
aad
cmps
(bad)
(bad)
jp
loop
loopne
cld
mov
mov
jle
push
push
inc
lods
sahf
prefetch
xchg
loop
xchg
dec
ds
push
pop
hlt
jb
push
pop
cmps
cmc
in
jg
inc
in
outs
and
jle
enter
jmp
dec
push
push
jp
out
(bad)
pop
cdq
outs
xor
outs
jecxz
adc
dec
jl
mov
aam
sahf
(bad)
jmp
out
cld
loop
mov
pop
mov
lds
clc
push
lahf
sub
push
pushf
xchg
jl
add
clc
sbb
xor
jl
pop
dec
lods
fisub
sub
mov
das
(bad)
pusha
add
fild
inc
hlt
fstp
xchg
dec
add
or
rcr
cld
cld
lahf
push
jp
fldenv
sbb
xor
scas
pop
rol
inc
or
(bad)
cmps
cmps
add
xchg
dec
cwde
(bad)
aad
adc
shl
out
xor
lods
cld
push
dec
cmps
xchg
xchg
or
push
dec
ja
jmp
push
mov
ret
scas
jmp
inc
cmps
xchg
sub
cmp
out
retf
jbe
jmp
push
leave
push
add
push
dec
pop
add
push
add
jmp
pusha
jle
es
mov
in
mov
int
ds
jnp
mov
xlat
in
retf
jo
js
pop
call
mov
rcr
in
ja
pop
dec
mov
or
inc
and
cwde
mov
das
imul
stc
adc
aad
mov
cli
lock
xor
pop
adc
adc
jnp
ins
call
or
mov
lods
je
loope
pop
test
add
jne
pushf
sbb
inc
lahf
popa
(bad)
lock
inc
mov
cdq
jno
mov
imul
aam
mov
js
dec
xchg
fiadd
jo
rcr
idiv
adc
push
sub
cmp
or
scas
test
xchg
out
adc
cli
lock
push
mov
scas
repnz
aam
cwde
retf
test
clc
aam
movs
mov
xor
jns
clc
jnp
dec
adc
adc
int3
xor
push
mov
das
ret
pop
xchg
mov
ds
mov
call
out
stos
push
mov
cli
mov
or
dec
add
pop
js
ds
mov
cdq
jge
cwde
mov
stos
ret
loopne
stc
sub
mov
push
mov
cmp
dec
lods
pop
dec
test
in
test
and
adc
fs
outs
arpl
adc
cs
ins
popa
jp
stos
sbb
outs
js
ja
jbe
test
mov
jae
pop
jle
fstp
(bad)
out
mov
stos
ficomp
call
movs
cmp
sub
aas
adc
push
std
retf
xor
test
movs
xlat
xor
cmps
int3
pop
div
add
push
cmps
mov
hlt
adc
pop
in
test
shr
and
fs
es
adc
sub
jno
mov
jp
push
fild
sahf
enter
addr16
rcr
xor
push
popa
dec
jg
outs
fisubr
xor
push
sub
loopne
pusha
or
enter
ins
aad
adc
push
mov
les
dec
iret
fnstcw
scas
test
movs
rol
gs
dec
add
mov
retf
mov
adc
popf
cmp
(bad)
imul
int
and
mov
lock
cmp
dec
push
ret
call
xor
nop
test
or
cli
adc
scas
ss
push
or
adc
sbb
test
cmp
test
imul
xchg
(bad)
in
mov
adc
xlat
in
xchg
add
std
add
lock
arpl
popf
sbb
fldcw
(bad)
fdiv
lahf
call
push
pop
xchg
fs
mov
push
sub
push
inc
ret
inc
adc
add
jo
cmp
push
int
sub
push
push
daa
push
push
sub
adc
push
stos
lahf
adc
fst
dec
xchg
aam
xchg
je
or
arpl
xchg
imul
jno
xor
bound
inc
(bad)
cmp
jo
pushf
sbb
add
pop
jmp
ja
add
pop
xchg
inc
in
jb
sbb
aaa
(bad)
test
pop
jno
cs
(bad)
push
xchg
adc
mov
mov
shl
mov
hlt
fnstsw
sbb
mov
popf
xchg
xchg
ret
or
inc
adc
outs
adc
fidivr
mov
aas
pop
inc
cdq
(bad)
stos
ror
aas
mov
xchg
loop
in
and
and
stos
ja
mov
mov
jmp
test
push
jge
in
sbb
shr
movs
or
cmp
xchg
adc
mov
add
inc
inc
xor
xlat
pop
leave
sub
les
pop
push
mov
add
imul
inc
inc
jp
jns
xlat
aad
test
xor
adc
movs
inc
es
neg
lahf
jmp
test
pop
pop
pop
aaa
fcmove
imul
or
lock
sub
mov
movs
push
xchg
cmp
jno
sub
loopne
das
push
or
jg
pop
out
stos
(bad)
push
jo
aam
mov
xchg
cmp
jge
add
enter
adc
repnz
jne
cmp
cmp
cmp
(bad)
sti
enter
add
sahf
mov
inc
mov
jo
stc
mov
xor
stos
cdq
mov
pop
or
jae
(bad)
jge
js
test
inc
sti
inc
movs
cmp
fld
bound
bound
iret
mov
xor
jnp
je
mov
fcom
bnd
test
stos
imul
and
sub
shl
in
sbb
(bad)
xchg
repz
(bad)
loopne
xchg
xchg
xor
fld
and
scas
pop
push
lods
idiv
out
sbb
repz
aam
sub
xor
out
mov
(bad)
(bad)
ss
loopne
pop
mov
pusha
ficomp
jne
inc
das
neg
inc
push
xchg
shl
xchg
loope
sbb
xabort
xchg
cmp
js
sub
mov
jge
(bad)
mov
imul
adc
test
dec
call
call
cmp
cmps
fild
out
add
dec
mov
stos
push
shr
pop
ja
jnp
bound
dec
cld
jns
ret
fadd
ret
cmp
enter
mov
fist
popf
mov
sbb
sub
jae
(bad)
sub
jb
jmp
fisub
adc
inc
pop
xor
xor
fcom
scas
cmp
popa
push
sbb
and
sub
mov
xchg
mov
inc
mov
mov
xchg
dec
mov
fld
icebp
mov
dec
test
(bad)
push
inc
out
push
jno
xor
xchg
(bad)
aam
ins
repnz
cmp
jmp
add
in
push
out
mov
sbb
xor
cmps
out
push
ficomp
(bad)
mov
or
inc
mov
sub
lods
pop
les
mov
fldenv
xor
pop
cdq
adc
popf
stos
into
cmp
and
loope
push
(bad)
pop
imul
cmp
cmc
cmp
mov
mov
push
mov
stos
mov
retf
pop
inc
mov
dec
repnz
arpl
mov
cmp
dec
push
xor
fstp
retf
adc
pusha
push
paddusb
dec
add
cld
jle
aaa
or
xchg
fcom
inc
xchg
add
cmps
dec
dec
fcomp
mov
stc
dec
cmp
ret
ficom
mov
js
sub
jns
cmc
pop
mov
stos
add
shl
or
mov
xor
adc
fild
pushf
cmp
mov
push
out
sbb
or
xor
sub
sub
cli
cdq
popf
pop
iret
pop
imul
push
mov
fs
imul
push
aas
aas
add
imul
xchg
mov
das
xor
push
das
scas
(bad)
int
pop
loope
jo
push
inc
fcom
lods
rcr
rcl
ret
or
mov
(bad)
aam
pop
mov
fst
les
push
ret
cmp
(bad)
popa
(bad)
or
inc
popf
js
adc
inc
mov
inc
fisub
xchg
push
adc
mov
lods
push
imul
mov
push
lods
cmp
jb
adc
fld
pop
push
add
sbb
repnz
cdq
sub
fld
adc
mov
ds
sbb
je
jo
dec
inc
pop
mov
popa
mov
xchg
cld
push
add
mov
out
inc
xor
lds
push
adc
inc
pop
mov
aad
add
imul
xlat
add
or
push
jecxz
shl
adc
pop
xor
out
dec
ret
enter
push
test
imul
js
stos
sbb
movs
inc
mov
push
mov
clc
xchg
ret
sbb
cmps
mov
jge
xchg
aaa
ret
push
xchg
and
sbb
xchg
(bad)
jnp
pop
mov
out
and
mov
jb
inc
mov
repz
mov
pop
in
xchg
aad
loop
sub
mov
cmps
test
dec
push
repnz
xchg
sbb
rol
mov
call
test
cmp
dec
emms
lods
push
hlt
adc
xor
pop
sbb
inc
stc
mov
and
mov
pop
dec
lahf
mov
(bad)
or
ins
ss
repz
xchg
mov
std
jg
xchg
add
mov
stos
fild
ret
ret
push
and
cmp
into
mov
dec
(bad)
and
test
bound
or
adc
add
sti
dec
into
mov
pushf
sub
mov
push
hlt
aad
and
jge
pop
mov
pop
loopne
rcl
cli
call
xor
cmps
and
dec
enter
push
mov
loopne
and
jns
xchg
test
cli
inc
mov
in
rol
and
popf
push
jns
pop
(bad)
in
xchg
xchg
pop
in
pop
adc
pop
push
je
ins
aam
mov
pop
out
jle
sub
shl
dec
and
xor
out
jp
pop
mov
jecxz
std
jmp
mov
inc
mov
mov
fbld
daa
aaa
out
dec
push
retf
cmp
adc
push
and
mov
jg
test
daa
sub
and
inc
jmp
jge
xchg
mov
aaa
outs
adc
xchg
dec
xlat
cmp
cld
push
push
jno
xchg
jb
mov
inc
sub
cmps
aad
dec
cs
pop
inc
and
push
push
or
push
cmp
jbe
movs
sbb
fidiv
test
jle
xchg
es
xchg
cmp
cmp
mov
sbb
pop
push
inc
ret
or
mov
stos
ins
or
scas
movs
int3
fdivr
and
dec
cdq
in
sub
pop
dec
cmps
mov
jge
jnp
clc
mov
arpl
sbb
pop
ins
inc
push
mov
rcr
dec
sti
fidiv
icebp
aaa
adc
call
mov
mov
in
mov
mov
mov
fmul
push
dec
(bad)
push
pop
fstp
xor
(bad)
test
push
sahf
xchg
enter
jmp
mov
sbb
icebp
and
hlt
jecxz
mov
bound
sub
xchg
mov
inc
(bad)
rol
mov
cmp
dec
jecxz
cwde
push
push
sub
xchg
push
push
aam
push
out
aas
adc
push
jmp
jae
retf
pusha
gs
pushf
mov
cmps
(bad)
loop
inc
fadd
(bad)
jmp
sar
call
ret
dec
lods
adc
lahf
push
enter
push
and
(bad)
jle
imul
dec
and
je
pop
in
push
out
(bad)
ins
sbb
inc
add
jp
and
cwde
push
adc
aam
pop
shl
add
shr
(bad)
cmp
jnp
jae
and
adc
xchg
pop
sub
jle
and
or
lods
or
cmc
sbb
rcl
push
(bad)
rol
(bad)
cmp
arpl
mov
inc
cmp
out
idiv
pop
jmp
cdq
pop
cmp
hlt
adc
or
push
clc
js
push
loope
outs
adc
and
(bad)
sub
mov
inc
pusha
imul
pop
in
sbb
shl
repnz
xor
(bad)
in
push
and
cdq
cmps
xchg
adc
stos
movs
pushf
jg
sbb
xchg
scas
imul
dec
stos
cmc
ret
lods
adc
mov
xchg
cmp
sub
test
pop
jbe
pop
push
fwait
xor
movs
dec
jns
dec
stc
movs
mov
cmp
push
in
or
mov
and
aad
call
or
scas
dec
mov
xchg
mov
les
xor
test
mov
inc
add
add
pop
js
pop
std
mov
mov
lods
sbb
sub
add
mov
in
es
ror
stc
mov
cdq
dec
or
cmp
dec
sbb
in
fcom
in
test
jmp
xor
dec
shr
xchg
mov
mov
outs
sub
fnstcw
out
repnz
rcl
sbb
push
movs
lea
lock
cmps
call
mov
jle
mov
cmp
push
mov
cmp
ret
pop
push
xchg
dec
cmp
push
push
enter
and
lahf
pushf
enter
(bad)
call
imul
std
or
in
xor
dec
outs
popf
daa
sbb
mov
xchg
sbb
jle
loope
sahf
fcomip
pop
bound
fld
cmp
inc
outs
mov
or
aaa
push
loopne
bound
jmp
push
cmp
fadd
xchg
test
fadd
and
fld
adc
dec
cmps
rcl
adc
xchg
push
adc
and
pop
shr
int
lds
xlat
dec
or
lods
mov
and
clc
aas
or
jmp
out
jmp
stc
shl
cmc
mov
cmp
lods
mov
push
xlat
les
inc
ret
call
pop
push
jmp
jae
test
adc
fdivr
or
(bad)
mov
jno
sar
push
xchg
jmp
pop
jo
mov
test
xchg
xor
adc
jnp
(bad)
fdiv
sbb
cwde
push
out
out
xchg
pop
cmp
rep
cmp
mov
mov
fmulp
add
dec
nop
inc
mov
icebp
mov
lea
sub
xchg
add
gs
xor
(bad)
or
mov
repnz
loopne
(bad)
jne
add
push
bndldx
inc
mov
cmp
sub
das
push
test
ins
iret
(bad)
xor
cmps
rcr
cmps
pop
sti
inc
mov
add
imul
add
inc
aaa
mov
aas
aam
and
sbb
pop
mov
int3
mov
xlat
leave
lods
cmp
jnp
scas
ror
sbb
test
xor
pop
ficomp
test
adc
mov
pop
mov
jg
shr
adc
push
adc
pushf
dec
or
aas
mov
ss
dec
or
push
xchg
clc
push
rcl
jae
cmc
and
add
jnp
loop
shl
test
push
push
(bad)
sbb
scas
enter
outs
idiv
sub
push
shl
and
in
pop
pop
mov
dec
movs
pop
addr16
mov
aad
test
js
and
jbe
ficom
out
call
mov
iret
xchg
add
retf
xchg
imul
jecxz
dec
int3
js
ins
in
adc
in
inc
lahf
test
repnz
fld
rcr
imul
adc
sti
xchg
mov
les
(bad)
(bad)
mov
xchg
mov
sub
loopne
test
sub
lods
pop
popf
mov
mov
sbb
in
mov
mov
cdq
lea
int
xor
mov
mov
cmp
inc
xchg
les
fs
(bad)
and
push
mov
inc
lahf
sub
lods
(bad)
aam
enterw
test
jne
mov
or
sbb
outs
push
ss
or
aaa
sbb
cmp
sti
(bad)
pop
xor
mov
inc
adc
jmp
add
or
ja
in
fdiv
cld
aad
pop
aas
jecxz
fist
call
jle
sub
leave
xor
(bad)
mov
cli
xor
jmp
scas
xor
cmp
ss
pop
retf
inc
inc
jo
and
cld
into
and
cdq
je
scas
dec
sti
inc
sub
into
cli
mov
sbb
mov
int
leave
add
mov
dec
iret
push
inc
pop
jmp
fidiv
inc
push
adc
mov
dec
(bad)
cmps
sbb
mov
cmp
(bad)
push
cmp
jg
cmps
lods
mov
stos
sbb
outs
mov
and
xchg
cs
popf
add
mov
aas
mov
(bad)
jg
cmp
pop
ret
test
outs
cs
cmp
out
sbb
mov
aad
(bad)
xchg
or
inc
out
and
push
cmc
push
int3
dec
iret
mov
jge
mov
aas
fs
inc
fisub
and
cs
sbb
icebp
push
add
inc
sahf
dec
inc
add
push
bound
in
sbb
inc
leave
sbb
xchg
jns
fidivr
arpl
leave
gs
sbb
pop
fwait
into
xor
mov
push
popa
add
or
adc
jns
sub
nop
mov
int3
jae
std
out
and
add
dec
add
ror
mov
(bad)
dec
or
cmp
jns
add
icebp
jbe
aad
push
inc
hlt
jl
xor
pop
sub
xchg
jg
ja
pop
pusha
pop
shl
inc
pop
(bad)
push
repnz
push
add
div
xor
dec
mov
mov
dec
test
mov
out
cmp
imul
ins
ss
lods
cmps
aaa
cmps
cs
pop
push
test
adc
xor
cmp
jecxz
push
outs
cmp
int
fistp
in
xchg
stos
xor
(bad)
and
cmp
outs
mov
add
retf
cmps
ja
jns
nop
jne
(bad)
repz
fs
dec
into
cmp
es
sbb
sbb
mov
and
stos
mov
push
jge
pop
in
mov
xor
pop
rcl
cs
fld
shl
mov
sti
mov
sbb
(bad)
gs
dec
xchg
mov
inc
fsub
sti
cmps
out
iret
mov
xor
into
dec
lahf
hlt
xchg
sbb
pusha
shl
call
hlt
cmp
out
jne
idiv
lds
jns
gs
xchg
fcom
outs
and
stc
es
icebp
mov
popf
fst
ja
and
inc
arpl
sub
push
je
or
jle
push
xchg
in
popa
xor
jmp
dec
cwde
jno
adc
mov
xor
dec
das
add
retf
dec
push
and
mov
into
and
cld
imul
call
pop
mov
adc
pop
mul
test
out
fsincos
jg
(bad)
cld
popf
fistp
xor
or
xor
imul
in
scas
pop
in
aad
push
mov
test
xchg
pop
into
lea
(bad)
out
fild
mov
mov
outs
pop
pop
pop
add
int
ins
pop
sbb
fist
scas
outs
sbb
movs
pushf
mov
xchg
pop
mov
retf
cwde
mov
loop
mov
sub
pop
bound
arpl
jl
adc
mov
shl
std
push
(bad)
and
pop
push
push
out
sub
inc
mov
stc
dec
rcl
mov
sub
inc
sbb
jge
jb
xchg
js
jmp
push
pop
xchg
rcr
lods
or
leave
sub
test
ss
pop
or
and
inc
xchg
imul
nop
mov
int3
inc
lds
and
push
int3
sti
add
push
fidivr
ficomp
das
fcom
lds
mov
jle
or
push
popf
iret
ins
ja
call
sub
pop
jmp
jne
jmp
sbb
test
(bad)
cs
(bad)
aas
mov
out
push
stos
in
not
mov
cmp
xchg
scas
adc
shr
pop
not
add
(bad)
into
ret
cld
sbb
scas
inc
cld
fsubr
push
sub
pop
(bad)
test
pusha
retf
xor
(bad)
fwait
xor
inc
fwait
add
ror
xchg
or
test
jl
xchg
ss
push
push
mov
sahf
push
jmp
nop
cs
jo
pushf
popa
jae
clc
out
push
add
xchg
imul
mov
mov
ret
add
cld
stc
mov
push
inc
push
pop
fsub
pop
push
cmp
pop
lock
cmc
jne
sbb
xchg
call
jp
pop
sub
or
adc
push
fidiv
popf
jb
std
mov
movs
es
jmp
and
pop
outs
mov
mov
cli
ds
popf
fdivr
int
jne
out
xor
test
stos
call
push
fsub
int3
mov
ret
inc
and
(bad)
ja
pop
dec
mov
dec
mov
mov
cmps
(bad)
lods
frstor
and
cmp
aas
gs
retf
jp
cli
test
and
inc
pop
cmp
jmp
data16
jo
out
push
out
shr
loop
cmps
mov
and
push
(bad)
repnz
ins
add
cmc
add
aam
ja
ficomp
fsub
cmp
int3
push
(bad)
shr
dec
call
jae
push
cmp
jecxz
ja
icebp
icebp
shl
arpl
jmp
or
paddusw
sti
inc
and
pop
out
push
lock
mov
enter
pusha
jmp
sub
ret
mov
push
mov
pusha
add
push
jo
pop
mov
lods
nop
inc
xor
arpl
mov
test
push
add
xor
jne
js
lods
cmp
mov
ja
cli
shl
push
add
hlt
pop
adc
out
dec
xor
push
and
xchg
adc
jmp
out
lea
in
lods
test
mov
clc
in
mov
cmps
(bad)
fsubr
fidiv
and
push
xchg
jmp
cwde
mov
sub
or
dec
jb
outs
jmp
xchg
inc
jle
or
push
icebp
cmp
adc
ja
jge
inc
popf
sub
sbb
cmp
push
jmp
adc
xchg
cmp
adc
stos
sbb
popf
nop
push
xor
test
mov
(bad)
fsub
fwait
leave
hlt
dec
fwait
adc
mov
cmp
retf
mov
aad
adc
inc
cmp
mov
div
aam
pop
rol
mov
adc
cmp
push
sar
cmps
daa
add
div
clc
neg
out
pushf
jns
adc
stos
stos
movs
cwde
(bad)
cmp
xchg
movs
jb
call
(bad)
out
mov
jecxz
repz
fndisi(8087
cmp
aas
int
outs
push
pop
pop
xchg
gs
sbb
mov
mov
jne
repz
push
aam
inc
daa
inc
add
cmp
out
dec
add
sar
push
mov
or
aad
addr16
inc
mov
or
cmp
inc
out
mov
enter
jmp
adc
sub
in
rol
dec
aad
lahf
pop
loope
mov
cdq
push
loop
and
jnp
fiadd
xchg
jnp
mov
scas
int3
push
push
enter
mov
mov
pusha
push
push
mov
inc
(bad)
mov
and
cmp
add
inc
xchg
aad
mov
in
into
xlat
push
sub
pushaw
push
fldcw
pop
or
push
mov
add
shr
vmread
jge
std
xchg
mov
push
sbb
loopne
sub
lods
sub
(bad)
enter
jmp
cld
clc
(bad)
es
sub
pusha
test
push
fsub
pop
or
jp
inc
sar
and
xchg
enter
and
out
mov
dec
sub
mov
das
aaa
shl
jnp
es
lock
jne
and
jnp
pop
cdq
dec
stos
jge
mov
add
xor
fstp
lods
mov
mov
cmc
adc
ja
adc
mov
xor
push
xchg
dec
and
sbb
test
cmps
mov
int
in
cdq
ins
(bad)
push
or
in
(bad)
shl
mov
out
xchg
pop
push
das
adc
adc
fwait
sub
mov
pop
daa
lahf
fild
mov
ror
imul
std
cmp
cmp
ficom
pop
call
add
xor
retf
inc
jecxz
cmp
and
cmp
xchg
sbb
cmp
mov
xchg
cld
(bad)
mov
cld
and
aaa
add
mov
mov
sahf
retf
mov
aaa
xchg
addr16
mov
ror
cwde
add
call
in
addr16
push
fcom
aam
inc
add
push
stc
fadd
mov
outs
sbb
push
(bad)
sub
(bad)
sbb
and
gs
push
jnp
add
mul
(bad)
push
neg
mov
pop
dec
and
int3
fwait
dec
(bad)
fst
mov
mov
dec
push
in
ja
jle
sbb
fs
popf
sbb
sub
sbb
xlat
div
test
into
popf
std
out
mov
inc
mov
dec
xor
mov
daa
bound
loop
iret
inc
jb
push
adc
xchg
scas
sub
jns
dec
icebp
(bad)
dec
hlt
hlt
cs
lea
sub
inc
push
jmp
aas
xor
test
adc
nop
test
jno
and
leave
sub
ja
daa
jnp
les
or
int
shr
add
cld
mov
cdq
enter
xchg
pop
adc
and
cmp
adc
sti
dec
pop
jle
push
loop
ins
mov
mov
mov
mov
mov
inc
stos
push
cmp
call
mov
retf
test
enter
or
repz
ret
fcmovnb
stos
in
ret
adc
mov
xchg
cmp
and
push
scas
jle
sub
ds
(bad)
out
pushf
scas
and
pop
push
xchg
xchg
stos
lds
outs
fidiv
addr16
(bad)
mov
fsqrt
push
nop
test
rol
jecxz
jp
sti
sahf
mov
mov
ins
push
(bad)
leave
fwait
sar
jae
sbb
in
pop
mov
int3
lahf
xor
loop
mov
dec
in
loope
jg
xor
iret
cmp
sub
and
mov
out
sbb
push
and
jge
icebp
retf
xchg
popf
popa
out
fld
rcr
inc
push
ins
add
or
jns
cdq
cwde
scas
pop
ja
into
pushf
clc
nop
push
cli
xor
push
ss
repz
adc
sbb
mov
retf
pop
and
jne
xor
xor
retf
ret
sahf
sub
(bad)
stos
int3
pusha
push
push
movs
retf
jge
retf
mov
(bad)
jg
push
fidivr
xor
aaa
out
out
cmp
mov
mov
xor
adc
xlat
(bad)
pusha
cld
dec
lock
lods
push
sub
sahf
pop
mov
push
mov
add
mov
cmps
inc
into
push
call
psubq
ins
dec
mov
sbb
test
push
push
mov
out
ins
adc
stos
ds
dec
in
fdiv
push
inc
sar
in
push
repnz
movs
and
mov
mov
je
inc
xor
mov
stc
fst
gs
mov
cwde
out
push
push
pusha
icebp
ja
arpl
xor
or
xor
movs
je
hlt
mov
mov
scas
lods
jl
push
shl
jmp
pop
inc
add
push
(bad)
std
mov
ss
xchg
cmps
add
and
(bad)
jnp
enter
(bad)
int3
ja
fistp
ins
xor
mov
out
mov
mov
pop
shr
imul
mov
aas
and
inc
lea
jecxz
fistp
pop
or
(bad)
adc
sbb
das
imul
jmp
jne
push
xchg
jnp
loop
daa
sbb
xchg
aam
xchg
in
or
push
loopne
mov
sub
adc
ins
jmp
aad
cmp
adc
add
data16
lods
cmp
ss
sub
rcl
scas
fild
movs
rcr
jbe
ret
loop
dec
int3
data16
cmp
xor
cli
mov
xchg
add
lds
mov
push
out
cld
test
cmp
sbb
lods
add
das
or
call
ja
xor
outs
bound
adc
mov
pop
mov
lea
mov
int3
sbb
mov
mov
(bad)
ja
outs
out
mov
sti
aaa
mov
pop
jmp
pop
mov
mov
dec
push
xor
enter
rol
and
xor
repnz
cmp
enter
movs
mov
lahf
jo
(bad)
cmp
leave
cli
cli
ja
repz
cmc
cs
sub
and
pop
lods
pop
inc
mov
adc
mov
add
xchg
pusha
shl
xor
dec
mov
sbb
add
add
sbb
outs
inc
xor
jae
xchg
dec
cmps
add
push
outs
jne
test
or
int
fild
jo
movs
mov
lds
mov
shl
pop
jg
cmp
dec
in
inc
xor
ins
xchg
push
mov
push
jnp
sbb
cmc
leave
out
test
cmp
adc
ds
pop
sti
bnd
mov
push
dec
pop
adc
jp
das
nop
cli
ss
and
in
(bad)
push
pop
xchg
das
dec
push
adc
pop
fild
mov
sahf
add
sahf
hlt
sbb
jge
add
inc
dec
add
cvtpd2dq
lods
sti
pusha
jge
ret
das
mov
xlat
add
push
int
inc
mov
sti
cld
sbb
call
daa
or
inc
ins
ror
and
xchg
lock
adc
addr16
gs
xchg
(bad)
aad
sbb
(bad)
push
sbb
call
or
fucom
mov
and
jg
ror
cmp
test
cmc
push
pusha
inc
inc
popf
out
push
xor
cmc
sub
jns
mov
mov
js
mov
jmp
retf
ficomp
mov
pop
popa
int
(bad)
xchg
jno
ret
enter
jno
pop
mov
pop
jno
jb
mov
retf
sbb
push
pop
jne
jp
mov
push
fsubr
mov
or
jg
lahf
pop
adc
lods
cli
xchg
push
push
sub
and
ins
mov
fld
lock
test
dec
push
ret
mov
jl
jo
cli
ss
(bad)
mov
in
sar
mov
jl
mov
mov
imul
dec
bound
mov
and
fwait
sub
mov
sbb
dec
or
jecxz
(bad)
sti
mov
jns
pop
mov
outs
mov
data16
push
push
jge
aaa
cdq
xor
adc
arpl
cmp
adc
pop
inc
jmp
adc
add
cs
in
jp
outs
fdivp
ins
adc
mov
popf
out
add
sub
es
mov
sahf
sbb
xchg
ds
mov
les
aam
test
imul
icebp
jns
mov
fild
les
xor
inc
push
add
xchg
fist
pop
fs
pusha
mov
xor
sbb
pop
dec
and
mov
shl
mov
std
mov
push
clc
stos
mov
sbb
call
adc
loopne
dec
add
jle
lds
fcmovnb
jmp
pop
scas
adc
pushf
mov
fmul
mov
out
sbb
bound
imul
icebp
push
test
jo
retf
mov
sub
pop
sub
mov
sub
fidivr
outs
int
jnp
(bad)
out
gs
or
(bad)
ins
test
or
sbb
xchg
or
ffree
mov
add
sub
jbe
int3
dec
fs
test
pop
nop
jb
scas
fiadd
pusha
xchg
push
cmps
fnstenv
push
mov
int
cmp
add
jmp
inc
imul
push
push
sar
fwait
mov
xchg
fdiv
outs
lods
daa
sbb
jmp
adc
and
lods
mov
sub
icebp
(bad)
xchg
sub
xor
add
adc
mov
loopne
mov
dec
adc
xchg
xor
pop
call
sbb
jbe
test
cdq
fidiv
cli
shl
xchg
xlat
adc
lahf
pop
lea
push
add
adc
push
lods
not
mov
adc
imul
rcr
fcmovnbe
jbe
lods
jecxz
aam
jae
iret
jmp
mov
mov
imul
mov
xchg
rcr
inc
adc
(bad)
scas
adc
jbe
pop
fwait
out
arpl
sti
mov
lock
fcomp
add
pop
mov
movs
mov
ret
in
leave
mov
sbb
xor
nop
jae
inc
cmps
dec
ror
adc
sti
pop
xor
out
pop
pop
push
pop
and
and
movs
adc
daa
popf
jecxz
call
sbb
push
imul
mov
push
ret
mov
pushf
inc
pop
js
xor
push
and
pop
dec
inc
movs
frstor
push
pop
xor
lock
mov
mov
xchg
pop
adc
or
aad
mov
inc
lods
mov
jp
sar
push
daa
pop
dec
xlat
push
movs
cmps
daa
pushf
sbb
dec
push
inc
inc
cmps
popa
jg
fcomp
shl
mov
addr16
add
jle
xchg
xchg
lods
fdiv
xor
cld
into
repz
ja
mov
jo
sub
cmp
scas
cmp
shl
retf
inc
lods
jne
das
cli
inc
or
int
xchg
cmp
sbb
xchg
and
xchg
and
add
daa
and
dec
dec
adc
ficomp
add
jecxz
cli
add
fild
mov
fnstcw
dec
adc
jmp
fcom
outs
(bad)
sbb
arpl
test
call
xor
inc
sbb
mov
popa
pop
fwait
icebp
cmp
ret
add
push
fisubr
in
mov
(bad)
pop
sbb
pop
fwait
or
mov
cmps
sub
jmp
fcom
stos
xchg
call
lea
mov
ds
and
or
in
xor
mov
push
sbb
adc
fbld
mov
jl
inc
fild
mov
jbe
lods
sub
(bad)
into
or
mov
mov
stos
fwait
cwde
out
int3
test
or
add
std
xchg
adc
pop
fwait
mov
cmp
test
mov
inc
sub
sub
stc
pop
cmp
aam
mov
mov
stc
inc
nop
inc
nop
mov
imul
dec
icebp
jae
ja
push
jno
push
and
add
int
in
outs
dec
int
cmp
or
loopne
test
jecxz
mov
jno
mov
push
dec
inc
test
xchg
push
inc
adc
mov
fcom
cdq
xor
je
adc
sub
pop
cmps
(bad)
stos
jp
xchg
(bad)
mov
lds
int
adc
mov
jle
mov
mov
jge
and
or
add
dec
js
int3
push
xor
fs
mov
loopne
leave
jo
in
push
ror
out
mov
imul
lahf
or
leave
or
push
hlt
and
inc
movs
pop
in
gs
jmp
outs
mov
pop
scas
xchg
mov
bswap
push
imul
out
das
or
pop
imul
loope
stos
(bad)
loop
enter
push
fcom
daa
int3
lea
xor
and
out
mov
cmc
cmps
sti
sub
pop
add
test
(bad)
bound
fiadd
mov
mov
dec
add
and
inc
jmp
xchg
daa
or
cmc
or
stos
loope
mov
push
push
push
cmp
gs
inc
pop
sub
call
or
inc
movs
bound
mov
(bad)
nop
addr16
aad
jmp
adc
(bad)
or
leave
lds
inc
ins
les
je
mov
enter
xchg
jle
cmps
inc
shr
jnp
and
or
movs
loope
mov
aad
les
shl
cdq
mov
call
sti
mov
std
jmp
adc
into
mov
xchg
push
push
mov
outs
aas
call
sbb
mov
push
push
in
out
fild
rcr
lock
das
mov
pop
cmp
xchg
dec
lods
fadd
fistp
std
inc
lods
imul
push
(bad)
push
ins
xchg
mov
lods
in
clc
push
idiv
or
mov
jmp
je
test
xchg
call
xor
test
cs
and
dec
imul
sbb
cmp
inc
or
push
add
mov
dec
sbb
cmp
sbb
inc
inc
sbb
stc
es
mov
pusha
jnp
and
out
nop
dec
cli
push
je
cdq
and
xchg
fwait
push
adc
cs
into
cld
fdivr
pop
sub
js
daa
adc
pop
in
pop
fmul
std
and
xor
lods
jmp
(bad)
fcomip
jnp
or
mov
push
mov
fs
add
int
dec
rcl
jae
popf
aaa
and
pop
(bad)
jnp
cwde
fwait
retf
jne
xchg
and
(bad)
nop
rol
cmps
dec
and
xchg
sbb
mov
stos
and
scas
mov
ja
push
repz
ret
or
pop
lahf
out
mov
sbb
je
xor
je
cli
jmp
jl
fcmove
jne
mov
out
pop
adc
es
mov
enter
pop
jns
jmp
jbe
scas
mov
pause
loope
xor
mov
jmp
ds
cmc
fwait
push
fstp
adc
jnp
xchg
repz
xor
lods
pop
jbe
mov
(bad)
(bad)
cmp
or
mov
rcr
cmp
scas
add
popf
or
ficom
cs
int
adc
jl
sbb
and
mov
es
sbb
push
ss
mov
mov
adc
jmp
or
cmp
jb
cmps
lea
(bad)
hlt
outs
jp
cmp
outs
cdq
addr16
xchg
push
cmp
movs
xchg
mov
xchg
push
repz
sub
pop
test
movs
sahf
jle
retf
dec
stc
int
in
pushf
xchg
stos
int3
loope
addr16
fistp
xchg
lods
stos
pop
mov
push
(bad)
shl
into
inc
xchg
sbb
ins
jp
jecxz
aad
jle
xchg
icebp
pop
(bad)
fdiv
ss
and
das
call
jecxz
lods
pop
mov
into
imul
hlt
add
fistp
sti
sub
shl
xlat
jae
sub
mov
mov
jae
addr16
test
or
mov
cld
nop
lahf
dec
call
xor
sub
inc
inc
es
(bad)
(bad)
movs
enter
jo
lods
pusha
adc
inc
inc
es
xor
jle
or
enter
js
sti
stc
jbe
push
test
pop
je
jmp
fsubr
xchg
cmp
inc
arpl
call
sahf
leave
cmc
test
loope
repz
mov
repz
xor
fist
mov
fnstcw
jno
mov
inc
sbb
push
sbb
mov
jg
xor
mov
sub
(bad)
stc
jb
push
push
mov
dec
and
out
xor
or
lock
cmp
xor
fisub
jecxz
(bad)
ins
int3
push
xchg
sar
push
aas
cmp
mov
xchg
clc
sahf
jp
fxch
sbb
aas
jne
and
ins
dec
lods
sub
pop
mov
cmp
cli
cmp
xor
popf
push
jne
xor
scas
pop
retf
std
sub
addr16
retf
jo
push
shr
jge
mov
aad
sbb
fwait
jno
and
xor
jmp
or
icebp
or
dec
adc
mov
lahf
pop
sbb
or
adc
repnz
std
test
mov
punpcklbw
fs
pop
sbb
jp
and
xchg
xor
fld
fnsave
add
dec
push
xchg
pop
daa
sbb
add
cmp
add
push
push
adc
fcomi
xchg
mov
xchg
imul
les
sti
test
sti
test
shl
mov
mov
inc
pop
sub
or
xchg
sub
loop
xor
mov
test
and
imul
icebp
out
xor
cmps
test
mov
ja
movs
sbb
add
sahf
push
aas
ret
ss
(bad)
dec
dec
or
cdq
add
pop
adc
sub
fst
cmp
aad
jne
add
sub
xor
(bad)
jl
(bad)
aaa
inc
dec
and
les
pop
nop
add
cli
mov
loop
push
sub
xchg
push
loopne
sbb
rcr
stc
xchg
cmps
cmps
xor
inc
xor
out
mov
pushf
or
or
fwait
mov
mov
push
(bad)
iret
ror
pop
stc
cmp
stos
jne
(bad)
jne
jo
call
jmp
push
imul
jl
inc
or
repz
pop
(bad)
ret
popa
out
int
dec
mov
sub
mov
ss
in
imul
mov
and
ds
aas
jo
add
sbb
les
xor
aaa
and
test
test
into
(bad)
out
sti
enter
mov
dec
sub
push
mov
gs
push
xchg
adc
movs
fmul
je
enter
or
ret
mov
sub
outs
fdivr
adc
lods
shr
out
push
xor
retf
lods
jl
jmp
jmp
cmp
stos
into
fnstsw
xor
dec
jmp
aam
sar
sub
out
test
dec
icebp
ret
outs
inc
rcl
push
inc
push
out
pop
xchg
dec
gs
fcomp
pushf
jbe
(bad)
mov
adc
hlt
inc
adc
jns
sub
xor
adc
add
call
pop
push
aaa
mov
pop
mov
or
jecxz
stc
in
cmp
fs
sub
mov
inc
ret
or
push
mov
or
sar
jmp
inc
sub
jge
popa
cmp
stos
std
loope
pop
in
jnp
mov
inc
add
xchg
and
mov
mov
adc
sbb
fcmovbe
inc
push
sub
push
jo
ret
pop
add
jg
ss
bound
push
xchg
push
cli
outs
and
enter
or
sar
fwait
push
push
inc
call
imul
and
jns
data16
es
shl
sbb
push
jae
dec
mov
aaa
(bad)
shl
push
enter
xchg
sub
lea
xor
add
stc
lods
mov
cmp
sbb
inc
cdq
jne
into
in
mov
jle
pop
jp
sbb
test
jbe
dec
xor
je
cmps
or
pop
xor
sub
mov
(bad)
fwait
mov
dec
(bad)
jg
pushf
xlat
adc
sar
sub
in
lock
jge
sbb
test
(bad)
stc
arpl
je
daa
mov
es
(bad)
in
adc
les
cmp
ficomp
add
mov
adc
fadd
jge
lods
inc
mov
dec
bound
or
inc
inc
in
adc
sbb
test
push
push
xor
push
cmp
ja
xchg
add
aas
or
outs
cli
adc
es
inc
xor
cmps
movs
cmp
xor
cmps
pop
or
jle
sub
in
pop
test
sbb
lahf
pushf
push
mov
sti
push
jb
js
push
push
pop
sahf
dec
stos
bound
jns
fs
push
idiv
cmp
js
push
dec
xor
xchg
mov
push
sbb
jecxz
inc
or
hlt
push
xor
xchg
fidiv
fwait
jo
jmp
je
cdq
nop
mov
int
xchg
pop
pop
hlt
lahf
ins
push
mov
xlat
mov
push
add
mov
jp
mov
xchg
and
mov
inc
xlat
sar
and
jae
xor
lea
in
aad
es
shl
mov
adc
push
out
mov
or
ror
adc
jg
fiadd
mov
jbe
scas
xchg
xchg
repnz
fs
cs
and
div
es
mov
jmp
mov
ss
fild
pusha
idiv
aaa
je
je
mov
lds
sar
fisub
mov
jo
cli
icebp
cli
mov
add
pop
adc
jne
jno
mov
lock
sbb
pop
jae
cmp
retf
add
(bad)
cmp
jp
pmaxsw
fbld
dec
lock
fstp
imul
push
push
int
mov
dec
sti
or
mov
dec
dec
cwde
sbb
xchg
sar
call
add
pop
ins
or
dec
xor
repz
xlat
mov
(bad)
jno
mov
das
mov
call
cdq
sbb
bound
fucomip
loopne
add
add
out
add
imul
dec
jb
adc
inc
mov
jmp
fbstp
sahf
push
ret
lock
popf
xor
sbb
mov
jl
jae
cs
push
fld
fistp
iret
repz
jns
pop
jo
cmp
shl
or
jmp
dec
cmovae
mov
dec
push
cwde
jl
ffreep
xchg
jns
mov
shl
test
push
hlt
outs
mov
pushf
(bad)
jmp
sub
rol
test
cmp
in
enter
inc
add
cmp
rol
movs
test
sbb
enter
mov
adc
out
iret
jo
dec
shl
mov
xchg
inc
and
pop
arpl
inc
pop
pmaxsw
cmps
pop
xchg
mov
or
jmp
xor
inc
cld
rcr
out
mov
packsswb
cmp
repnz
in
dec
cmc
ja
cmp
test
push
jmp
pop
test
bound
adc
sbb
adc
shr
pop
(bad)
push
fldcw
in
mov
(bad)
iret
xlat
(bad)
in
jns
xor
mov
adc
xchg
mov
mov
(bad)
std
mov
cmp
xchg
jl
test
cs
leave
jl
inc
in
mul
mov
and
sbb
xor
movs
push
les
fldenv
aad
dec
les
pop
mov
xor
jnp
shl
dec
xchg
icebp
jbe
push
ins
xchg
xchg
sar
div
xchg
mov
sbb
int
shl
cdq
jge
push
and
std
xor
arpl
sti
jne
loope
dec
shl
or
je
cmp
inc
cwde
cmp
outs
push
stos
jbe
(bad)
dec
jecxz
cmps
out
(bad)
in
cwde
lods
or
scas
adc
mov
loopne
inc
add
pop
pop
daa
test
outs
(bad)
icebp
movs
iret
es
int
sub
shl
or
data16
sub
(bad)
dec
mov
loopne
imul
or
call
jmp
ret
ins
cmp
cmp
or
mov
sbb
(bad)
lds
push
adc
popf
dec
adc
or
lds
repnz
div
mov
es
test
mov
fcomp
and
xchg
rcl
mov
in
pop
loop
mov
sti
or
xor
hlt
and
ins
adc
sbb
push
movs
sbb
ja
imul
arpl
jmp
or
addr16
xchg
(bad)
pop
js
in
ret
iret
icebp
or
or
and
cwde
jo
mov
jmp
fwait
or
xchg
fnstenv
jge
popa
xchg
xor
xor
sbb
inc
xor
sbb
in
mov
mov
xor
ins
mov
push
mov
push
stos
stos
fdivr
jno
add
ret
add
cmp
in
stos
js
dec
sub
data16
sub
sub
xor
cwde
mov
mov
dec
aaa
mov
out
popf
pusha
std
lods
mov
shr
lea
adc
pop
(bad)
(bad)
and
aas
inc
pop
and
imul
out
pop
jno
mov
sbb
sub
mov
loopne
aam
jmp
pushf
je
scas
xchg
int3
cmps
pushf
push
adc
xor
dec
fsubr
xchg
push
mov
out
arpl
dec
jbe
out
push
push
fsub
das
sar
movs
ins
cwde
ror
cli
adc
mov
pop
push
ret
test
mov
sti
aaa
dec
aaa
add
fs
cld
ret
xor
jo
sub
inc
sub
jno
ins
(bad)
cmc
js
inc
aas
sub
inc
sub
hlt
jbe
and
cmp
mov
in
mov
mov
dec
dec
scas
mov
xor
sub
add
adc
imul
sbb
and
push
mov
sbb
and
enter
popa
push
inc
repz
stos
fstp
fdiv
cmps
pop
adc
arpl
jnp
jb
xor
ins
movs
adc
pop
or
leave
adc
jne
arpl
xor
mov
movs
or
xor
cmps
movs
add
fdivr
les
sub
mov
mov
nop
push
fstp
sub
dec
push
mov
in
xchg
fsubr
xor
in
sub
jl
aam
add
cs
stc
xchg
retf
add
and
dec
xor
cdq
outs
sub
repnz
cdq
(bad)
test
retf
out
inc
dec
cmp
inc
dec
push
(bad)
addr16
jmp
pop
or
fsubp
mov
xchg
fsub
and
mov
xlat
push
mov
aas
mul
jo
(bad)
loopne
mov
lods
loopne
mov
xchg
or
xor
mov
pop
push
pop
rcl
xchg
cmps
call
xchg
xchg
adc
fdivr
sub
retf
push
test
xor
ror
and
(bad)
popa
cmp
sub
nop
inc
fistp
clc
retf
mov
cmp
pminub
mov
pop
mov
pop
push
mov
test
(bad)
stc
cmp
std
fwait
xlat
mov
add
xchg
mov
adc
mov
add
test
jae
adc
fimul
xchg
fcomp
imul
dec
mov
(bad)
sbb
ret
movs
ins
pushf
(bad)
push
pop
mov
in
or
sub
sub
int
push
enter
cmp
not
imul
pushf
pop
mov
lods
call
or
push
push
push
mov
mov
lds
pop
outs
into
scas
fnsave
dec
pop
ret
mov
xchg
mov
lea
push
xchg
in
cld
(bad)
fld
pusha
inc
ja
push
or
icebp
mov
add
mov
sahf
pop
clc
and
xor
cmp
ds
adc
push
(bad)
mov
int
std
inc
lds
test
push
and
mov
push
cld
sub
jge
outs
cmps
or
shr
inc
rcr
or
adc
xor
dec
cdq
xor
icebp
int3
shl
stos
or
or
jbe
and
mov
lods
lahf
(bad)
outs
xchg
rol
push
mov
sahf
lods
div
movs
and
inc
fcmove
test
(bad)
in
inc
xchg
out
xchg
repnz
inc
clc
into
int
packsswb
jno
inc
jp
mov
dec
sbb
jle
cmc
xchg
push
loop
aam
into
retf
out
pop
sti
scas
das
das
in
jae
jmp
jne
arpl
push
movs
mov
out
ss
inc
mov
inc
std
sub
mov
nop
jmp
push
jns
push
enter
mov
add
imul
fwait
adc
into
lea
xchg
fwait
cmc
cmps
test
mov
inc
sub
xchg
xchg
xchg
jmp
xor
retf
mov
popa
in
data16
mov
xor
fild
xchg
jecxz
fsqrt
jae
and
xchg
test
in
sbb
retf
rol
or
cmps
ds
call
in
jno
popa
lds
in
call
push
jg
cvtpi2ps
clc
in
retf
stos
int3
mov
(bad)
shl
cli
jle
(bad)
xor
mov
mov
es
sbb
call
test
sub
pop
mov
xchg
outs
adc
pop
popa
sub
or
iret
shl
bound
ror
(bad)
retf
jg
jns
test
and
add
jno
sbb
and
inc
jb
mov
(bad)
stos
lods
push
xor
push
xor
test
ins
ret
mov
mov
add
sbb
dec
mov
in
das
adc
rol
mov
imul
test
adc
dec
pop
fistp
clc
(bad)
push
scas
(bad)
jne
pop
and
movs
xchg
movs
shl
pop
cmp
and
lahf
ja
stos
pop
leave
jbe
add
lods
adc
in
js
arpl
bound
sub
fxch
pop
push
pop
sub
out
stos
ficomp
adc
sahf
hlt
repnz
jno
stos
xchg
push
imul
test
(bad)
mov
jmp
and
push
sti
and
or
popa
jp
data16
dec
sbb
mov
xchg
fucomi
adc
call
add
repz
cmp
imul
in
and
jns
aas
rol
add
sbb
inc
jmp
in
mov
jg
ja
mov
ja
adc
mov
xor
xlat
cmp
cmps
mov
mov
cmc
(bad)
push
sbb
push
nop
sub
es
call
sub
mov
xor
mov
xchg
xchg
scas
stos
sar
fwait
jnp
in
ins
jo
outs
sbb
add
popa
sbb
(bad)
sbb
std
daa
jl
mov
mov
(bad)
jmp
hlt
mov
inc
popa
shr
mov
adc
jae
cld
test
movs
in
retf
aaa
imul
ret
les
adc
outs
hlt
jl
stc
push
not
mov
enter
adc
cmp
mov
mov
and
lahf
nop
test
or
mov
mov
push
and
add
lea
cmp
sbb
adc
xchg
stos
xchg
xchg
sti
dec
dec
mov
fcom
jne
cwde
push
lods
(bad)
mov
mov
je
mov
jbe
sbb
shl
inc
clc
cli
in
(bad)
test
aam
pop
adc
into
call
mov
lock
sub
popa
jl
stos
shl
pop
pop
sub
dec
cwde
lods
stos
retf
in
pop
cdq
lock
popf
lock
stos
cmp
test
aam
cmc
pop
jnp
or
push
stos
mov
sub
mov
xor
std
push
pop
mov
xor
arpl
lods
adc
jmp
cmp
lds
outs
inc
push
mov
dec
ja
xchg
mov
cmp
mov
ror
or
mov
rol
cmp
sbb
xor
adc
fcomp
cmp
call
pop
sbb
inc
ss
in
jmp
push
pop
aaa
ficomp
(bad)
into
inc
mov
mov
xchg
in
and
es
fs
sub
add
sub
dec
movs
in
out
jbe
inc
in
mov
xlat
jns
in
or
cli
jmp
enter
and
jmp
cmp
xlat
mov
sbb
mov
fs
loopne
jmp
js
popa
arpl
dec
out
inc
cmp
cmp
jmp
fwait
push
mov
loop
push
in
ds
inc
rep
test
loope
mov
scas
mov
ret
mov
test
ja
xor
out
imul
into
inc
scas
(bad)
in
mov
into
and
leave
(bad)
sahf
sub
ret
imul
out
mov
mov
jmp
jno
and
shl
push
sbb
cmps
pusha
mov
xchg
fxch
mov
repnz
mov
push
pop
jae
or
adc
cli
lea
ror
cmp
scas
xchg
inc
add
cmps
or
(bad)
es
(bad)
test
jp
fwait
cmp
xor
inc
aaa
xchg
xchg
clc
push
pop
or
arpl
ss
stc
adc
cwde
xchg
mov
push
push
xchg
fs
in
jmp
cmp
xchg
ins
call
sbb
shl
js
push
ins
sbb
mov
inc
nop
ret
out
mov
cmp
nop
aad
in
fcom
mov
cmps
clc
aas
mov
cmps
sub
jnp
cmps
cmp
in
aaa
cmp
nop
fisttp
rcr
push
or
(bad)
cld
cmp
outs
int3
aas
mov
jl
in
retf
sub
mov
repnz
imul
push
xor
cmp
cmp
clc
inc
leave
push
rcr
ins
das
mov
inc
xchg
sbb
in
and
cld
mov
push
sub
dec
adc
(bad)
xchg
adc
pushf
(bad)
mov
pop
add
scas
fwait
dec
arpl
rcl
add
mov
les
lock
push
and
cmc
jle
inc
fdivr
test
and
stc
imul
fld
lods
stos
pop
mov
retf
(bad)
repnz
fldenv
push
pop
lock
scas
repz
shl
inc
mov
inc
pop
add
repnz
jmp
xor
inc
ins
mov
clc
in
ror
jbe
cdq
cmp
das
je
inc
mov
xlat
mov
cmp
push
push
xchg
aad
dec
push
inc
popa
(bad)
sub
call
ror
daa
ins
outs
dec
xchg
mov
pop
hlt
mov
push
fsub
cli
rol
in
sub
adc
inc
cmps
mov
sti
dec
stos
cmps
je
rcl
in
xlat
rol
shr
popa
or
push
ret
movs
imul
and
lea
adc
jbe
call
aas
fstp
pop
xor
push
xchg
std
adc
sti
and
pop
retf
or
xor
ds
rol
adc
jb
sbb
jne
(bad)
sub
nop
jno
jbe
imul
xor
jnp
aad
or
jg
mov
add
mov
adc
mov
es
xchg
and
and
mov
cdq
sahf
xchg
inc
adc
ja
out
js
adc
inc
ret
rcl
push
adc
jp
mov
mov
xor
mov
fdiv
inc
inc
movs
fcom
int
leave
scas
dec
push
nop
jg
jmp
xchg
mov
jge
adc
test
pop
cmc
popf
push
icebp
dec
xchg
and
mov
and
mov
dec
imul
and
dec
xor
mov
pop
fadd
push
mov
fwait
push
out
push
outs
lds
adc
test
fdivr
pop
(bad)
ins
cdq
inc
hlt
jno
push
pusha
call
je
and
mov
or
in
sbb
jne
or
xor
adc
bound
loop
loope
mov
add
pop
mov
push
ror
ss
jle
(bad)
pop
cmp
xchg
and
ret
mov
mov
adc
jecxz
stos
xlat
xchg
test
mov
ins
pop
int3
xcrypt-cfb
cmps
and
mov
jle
or
jb
fcomip
inc
jae
and
addr16
pop
pop
mov
cmps
inc
pop
sbb
je
std
mov
out
loope
bound
mov
push
ret
cmp
cmp
adc
fidiv
push
mov
dec
and
dec
xchg
scas
cmp
(bad)
push
jo
mov
push
cli
jno
in
loopne
mov
jge
dec
leave
cdq
ins
sbb
adc
cdq
cmp
mov
repnz
mov
lea
hlt
mov
ins
in
loope
imul
fisttp
jmp
fdivr
(bad)
adc
call
jmp
nop
mov
dec
cmp
add
fldenv
rol
sub
push
adc
fld
lock
xchg
inc
jnp
jbe
push
mov
dec
inc
xor
stos
xchg
jmp
rol
mov
movs
jle
jno
inc
enter
fwait
inc
test
es
jo
clc
inc
imul
cmp
pop
sbb
ds
rcl
pop
xchg
ja
and
add
inc
int3
pop
aam
xchg
aam
xor
lods
xchg
loopne
cwde
fnsave
cmp
in
pop
push
cmps
test
and
jbe
jg
inc
mov
and
loopne
ds
mov
pop
push
addr16
repz
mov
push
dec
xchg
lock
sbb
call
inc
sub
lods
sub
add
xor
pushf
mov
pusha
inc
push
ret
mov
jb
mov
int
xchg
sbb
add
fistp
jno
cmp
push
mov
ins
push
inc
pop
aaa
sub
or
dec
cmp
std
aaa
dec
or
mov
punpckldq
in
and
aas
in
inc
sahf
data16
push
adc
and
std
out
test
inc
xor
shr
jb
call
pop
inc
mov
pminub
cmps
fcmovnu
movs
imul
sbb
or
or
jecxz
daa
xor
mov
cmc
test
repz
push
das
add
clc
jmp
sahf
cmp
xchg
pop
cmp
add
push
stos
add
mov
ret
loope
inc
jo
jle
mov
push
test
sbb
lds
pushf
add
fdivr
jge
mov
jecxz
dec
movs
pop
mov
push
iret
inc
pop
mov
sbb
sbb
sub
jno
push
loopne
pop
jecxz
repz
dec
mov
mov
lods
test
dec
add
outs
jnp
out
pop
(bad)
inc
call
pusha
mov
jno
adc
mov
inc
movs
and
int
pop
bound
pop
jecxz
pop
cmp
add
iret
stos
or
jno
jno
and
in
inc
cwde
lods
sub
js
xor
rcl
mov
dec
nop
call
inc
ja
mov
mov
inc
int
repz
add
jmp
pop
xor
gs
and
loop
mov
test
sub
jo
cmps
sub
pop
je
jl
sbb
xchg
inc
inc
adc
ss
test
or
push
jo
sub
or
xchg
mov
push
jmp
xchg
jg
ds
xchg
out
mov
stc
hlt
add
sbb
and
xor
lea
and
mov
sbb
xor
sbb
inc
xor
out
(bad)
cwde
dec
ret
push
(bad)
dec
(bad)
push
hlt
out
lods
icebp
sti
mov
and
mov
jnp
cmp
pop
loope
push
test
xchg
xor
xchg
nop
rcr
lock
je
(bad)
popf
dec
pop
shr
repnz
sub
les
lods
loopne
lods
clc
mov
int
xchg
(bad)
loop
fwait
sub
outs
cmp
(bad)
pop
pop
adc
sub
or
adc
sar
hlt
jno
add
(bad)
neg
mov
lea
in
stos
pop
dec
push
stos
(bad)
lock
xor
and
rcpps
jb
imul
ror
int3
push
mov
dec
cli
push
xchg
mov
imul
pop
das
push
add
ror
imul
cmc
lahf
sahf
mov
and
stos
fs
jmp
push
popa
xchg
loop
(bad)
mov
add
push
push
stos
out
fild
pop
dec
xchg
mov
(bad)
repnz
push
pop
scas
(bad)
adc
sub
add
sub
sbb
inc
lods
sub
int3
aas
ror
pop
inc
push
jbe
and
es
lods
lods
add
cmp
mov
sbb
mov
cmp
sub
sbb
or
leave
sbb
jns
cmp
add
inc
jmp
jbe
pop
xchg
sbb
add
adc
lea
mov
inc
sbb
je
call
adc
pop
ds
jmp
call
lea
imul
loop
test
scas
inc
imul
mov
adc
mov
(bad)
(bad)
loop
xor
pusha
dec
imul
mov
clc
cdq
test
std
cmp
push
test
ret
cmp
pop
loop
jp
je
sub
xor
xchg
popa
cmp
xor
or
mov
push
mov
mov
repz
and
mov
sbb
fcmovne
jle
adc
sub
xor
dec
push
repz
mov
jge
inc
es
icebp
sbb
mov
jne
push
xchg
and
dec
out
inc
jl
pop
loopne
xchg
or
sbb
pop
lods
aaa
and
icebp
xor
or
data16
xor
test
pop
lds
mov
add
xchg
adc
pop
bound
lahf
jno
in
pushf
push
enter
loope
cmps
xor
cmp
(bad)
push
jp
lds
dec
jo
pop
jmp
rol
ror
cli
(bad)
mov
sbb
jne
inc
ret
cmp
mov
rol
mov
mov
and
cmp
outs
fnstsw
sub
jge
dec
pop
add
mov
cs
sub
pop
fild
or
mov
and
cli
dec
and
jnp
aaa
into
or
aaa
and
lea
add
rcl
lods
std
nop
hlt
jp
fwait
adc
mov
or
inc
rcr
sbb
aad
dec
stos
push
sbb
out
mov
sti
outs
retf
xor
je
mov
outs
inc
mov
pop
mov
mov
cwde
add
pop
jg
or
out
jb
sbb
rcr
fs
mov
loope
jp
(bad)
pop
sbb
inc
lahf
pop
and
cmp
adc
xchg
mov
xchg
ins
inc
cmp
pop
lock
add
push
jge
out
fidivr
xchg
aad
ds
fistp
xchg
inc
mov
ins
xor
leave
cmc
inc
shl
xchg
xchg
cmps
in
mov
jbe
dec
add
shl
es
push
(bad)
push
sub
bound
and
and
dec
cmp
cmp
fsub
enter
mov
cmc
or
test
sbb
xor
mov
test
add
cmps
xor
xchg
jl
xchg
mov
cmp
aas
in
js
mov
pop
cmps
rcl
jle
mov
mov
adc
add
mov
add
sbb
mov
aam
cmp
push
sbb
retf
(bad)
es
ins
inc
arpl
push
addr16
push
xchg
fdivr
imul
jle
sbb
scas
dec
loop
nop
mov
dec
bound
rol
add
movs
jecxz
mov
mov
inc
stos
or
sbb
cwde
add
adc
retf
inc
call
and
pop
sub
scas
repz
push
scas
jmp
cmps
or
adc
and
popf
add
data16
imul
xchg
scas
jmp
or
jmp
or
push
pop
idiv
pop
ret
icebp
lock
loop
ret
xor
neg
push
mov
mov
cs
add
ins
inc
fstp
in
fsubr
in
ins
daa
sbb
ins
sub
pop
xchg
ss
jns
int
ja
inc
push
inc
rol
rcl
or
retf
push
lea
test
ins
adc
sbb
or
mov
dec
add
xchg
inc
int
jl
push
das
fcmovu
retf
sbb
jg
lock
(bad)
sar
cmp
sbb
call
add
in
fcmovne
fsubp
pop
stc
mov
or
ins
pop
xor
add
pop
ss
mov
xchg
adc
inc
add
mov
std
cmp
leave
cwde
scas
jo
cmp
mov
shr
fwait
or
dec
pop
adc
inc
test
jp
addr16
aad
pop
xor
or
push
out
xor
retf
cli
mov
cmp
test
outs
xor
xor
aaa
fsub
stos
mov
(bad)
mov
gs
fmulp
jg
mov
inc
outs
add
mov
add
test
lods
loope
movs
dec
inc
sub
jmp
mov
pushf
mov
add
xchg
jl
sub
add
adc
sub
dec
inc
mov
ss
xor
int
fs
je
je
sti
pop
jecxz
es
arpl
push
int3
mov
int3
push
dec
ja
js
jmp
dec
push
call
xchg
cs
push
dec
and
sti
scas
daa
pop
jmp
mov
aad
into
dec
mov
pop
lahf
and
push
ds
xor
mov
test
cs
mul
mov
jae
cmc
jnp
loop
shl
sub
enter
sub
stos
or
mov
sbb
or
sbb
in
or
sub
mov
sbb
ss
pop
xchg
aad
sar
leave
aas
data16
inc
test
ror
in
jae
mov
mov
stc
into
xchg
xor
fs
sub
js
push
pop
scas
add
jge
sbb
jae
mov
rol
stos
not
xor
or
xchg
mov
mov
push
popf
push
add
ja
push
aad
stos
mov
dec
loop
adc
in
cs
outs
inc
jae
test
das
mov
data16
and
ss
ret
xchg
lods
push
add
adc
mov
or
cmp
inc
es
xlat
dec
adc
pop
push
(bad)
iret
lods
fwait
into
mov
push
pop
xchg
pop
push
inc
and
rcr
cmp
scas
and
or
xor
dec
test
seta
dec
pushf
out
fnstenv
sub
mov
or
push
jecxz
mov
repnz
sub
jb
outs
mov
popa
sti
push
and
xor
rcr
(bad)
or
sti
mov
sub
sbb
fld
addr16
jmp
lahf
mov
gs
mov
push
mov
add
xlat
push
aam
rcr
retf
iret
out
or
xchg
pop
repnz
(bad)
sti
sti
push
mov
aad
inc
jecxz
push
js
mov
adc
mov
mov
xor
or
xlat
loopne
arpl
mov
cdq
in
mov
ins
ret
mov
mov
xchg
and
and
retf
jns
frstor
jge
ja
jo
mov
mov
xchg
sbb
inc
xchg
in
arpl
lahf
int3
xor
jmp
cmps
xor
shl
shl
shl
cmps
repnz
retf
xor
pushf
or
mov
push
xchg
out
(bad)
aas
fisub
cs
movs
dec
or
dec
add
pop
lods
test
fiadd
pop
inc
jge
sub
aas
dec
out
(bad)
mov
loop
xor
repz
cs
rcl
mov
arpl
(bad)
push
dec
add
test
jg
xor
loop
xchg
pop
scas
push
jne
jge
out
(bad)
jg
inc
jo
xchg
test
fstp
inc
mov
iret
sar
aas
xor
dec
imul
mov
adc
add
call
sub
push
adc
sbb
aas
add
mov
in
and
xor
jge
scas
les
and
mov
mov
nop
repz
lea
neg
adc
mov
and
ss
cwde
in
mov
push
stos
gs
mov
add
sbb
test
outs
cmps
inc
lock
es
int
sub
push
out
push
pop
mov
inc
shr
add
pop
lock
sub
xchg
push
in
fdivr
ins
sub
repnz
sub
jge
xor
xor
std
xchg
scas
aam
fldenv
or
jmp
mov
mov
add
and
and
dec
pop
jns
ss
dec
pop
xchg
retf
inc
fld
cmp
and
pop
mov
jo
ror
xchg
xor
stc
inc
arpl
push
out
cmp
out
push
inc
pop
xchg
and
pop
inc
xchg
and
cs
out
movs
or
mov
outs
loop
mov
mov
(bad)
xlat
adc
inc
gs
mov
in
push
cmp
cmp
inc
cmp
mov
ret
fisub
sbb
inc
out
mov
popf
(bad)
sub
mov
push
scas
out
mov
xchg
jae
aas
fadd
enter
test
pusha
pop
pop
stos
push
les
xchg
xchg
lods
out
mov
arpl
cmp
inc
movs
mov
and
mov
adc
aaa
cmps
mov
inc
sub
jmp
jp
lock
adc
cmp
push
xlat
xor
outs
icebp
ldmxcsr
je
js
push
repz
into
inc
cmp
loope
popf
or
das
jmp
lods
out
sbb
mul
xor
jg
cdq
in
xor
fs
lahf
add
sti
je
pop
dec
in
js
push
adc
jp
cld
iret
jno
out
repnz
loopne
repnz
mov
fwait
in
fadd
rcr
mov
push
sti
dec
cmc
or
outs
mov
retf
adc
shl
mov
push
sbb
mov
outs
arpl
es
into
in
jbe
movs
lahf
add
inc
repnz
push
push
pop
cs
xchg
inc
sbb
add
mov
xor
dec
or
(bad)
xlat
xchg
pop
pop
(bad)
bnd
test
sub
sub
(bad)
pop
aam
push
inc
mov
push
das
in
fiadd
test
adc
push
adc
push
aam
test
dec
xchg
ret
jge
sbb
fdivr
or
movs
jmp
lock
punpckhwd
ss
enter
sub
test
sbb
sub
jno
push
addr16
sbb
pop
and
or
jecxz
xchg
out
sbb
and
cmc
les
ret
xor
popa
add
mov
movs
add
mov
enter
pop
rcr
les
fst
nop
xor
jno
mov
push
xchg
jnp
add
lahf
ret
(bad)
sub
(bad)
ja
pop
cmp
fmul
dec
les
pop
or
lea
and
or
std
sub
mov
xor
xor
aaa
lods
push
out
or
stc
mov
pop
push
mov
mov
punpcklwd
fs
jb
imul
std
div
mov
xchg
int
sub
ret
push
adc
xlat
jg
test
cmc
pop
cmp
xor
fiadd
stc
popa
sub
jmp
in
imul
bound
add
data16
and
push
adc
push
cmc
mov
adc
jle
jmp
inc
adc
ds
scas
movs
(bad)
cmps
retf
inc
mov
aad
adc
les
fwait
mov
push
push
mov
outs
lods
shl
outs
in
mov
lock
push
sbb
arpl
out
or
cmp
cmp
aam
call
mov
jmp
stos
mov
pop
push
daa
sbb
loopne
mov
mov
push
jge
dec
aam
add
sub
lods
daa
mov
retf
pop
push
aad
sub
adc
and
push
aaa
mov
(bad)
adc
cs
add
(bad)
push
or
cmp
pop
(bad)
icebp
push
ret
mov
lds
jle
scas
add
cwde
rcr
push
sbb
mov
adc
cld
fdivr
test
(bad)
mov
sbb
cmc
add
int3
test
imul
mov
sub
mov
ss
mov
cmc
ret
mov
retf
xor
fs
adc
sub
lahf
call
es
inc
jecxz
ret
cmps
jns
adc
shr
int
scas
add
mov
push
push
lahf
pop
sar
mov
push
or
sti
xchg
mov
ja
cld
into
rol
jecxz
loopne
inc
pop
or
xchg
push
xchg
dec
add
push
adc
pusha
retf
mov
out
dec
mov
out
fdivr
leave
push
scas
in
dec
jg
adc
mov
or
mov
mov
stc
fisub
pop
inc
mov
lods
xchg
movs
xchg
xor
inc
in
aad
cs
pop
jge
jecxz
and
in
pop
repz
and
mov
ins
ins
adc
or
add
icebp
cmc
dec
sar
clc
rol
mov
add
xchg
das
xor
or
in
cmp
fdiv
push
rcr
ja
test
sbb
or
push
jmp
add
leave
mov
cli
xchg
int
arpl
fs
data16
dec
xor
pop
pop
js
or
xor
push
mov
jno
sbb
jae
outs
in
loope
xchg
or
retf
cli
gs
movs
fild
sbb
ss
(bad)
aaa
leave
cmp
or
or
fst
ror
add
aas
cmc
sub
fisttp
push
nop
bound
fisub
adc
out
dec
jl
cmp
fst
rol
out
movs
jecxz
mov
sbb
xor
loop
aam
xor
dec
into
sbb
scas
mov
adc
xor
xor
ret
cmps
fisub
push
ins
addr16
repnz
push
ror
pop
rol
push
inc
mov
fldenv
mov
mov
mov
movs
and
sub
das
cmp
adc
dec
pop
mov
(bad)
cdq
jl
adc
xchg
rcl
or
cwde
popa
jo
pop
mov
pop
dec
add
cli
ret
setge
xor
xor
xchg
or
cmp
jecxz
int3
mov
inc
jecxz
and
jbe
pop
sub
dec
repnz
dec
push
idiv
push
dec
add
pop
int
icebp
(bad)
xor
fimul
mov
adc
inc
fisub
xor
scas
test
fwait
jae
push
mov
jnp
leave
cli
repz
or
leave
inc
fwait
jp
stos
int
aam
dec
push
sub
pushf
cdq
pop
aas
cmps
cmp
sub
mov
int
and
mov
into
add
mov
out
ret
dec
bswap
dec
mov
sub
sub
xchg
fwait
shl
xor
stos
push
imul
movs
popf
(bad)
scas
loop
cmc
fiadd
jg
xor
retw
xor
aad
add
test
add
jbe
or
fisub
(bad)
inc
mov
or
retf
icebp
push
and
aas
jo
sbb
cli
jl
cmp
xor
adc
aad
retf
sbb
or
sub
add
mov
fwait
dec
or
(bad)
adc
stos
mov
ins
adc
pusha
pushf
outs
jle
ja
(bad)
adc
dec
sahf
pushf
into
jbe
ror
jmp
cs
cmp
aas
and
sbb
dec
dec
or
mov
jae
les
arpl
adc
lock
dec
push
pop
mov
je
(bad)
je
push
push
sub
mov
es
pop
scas
into
mov
xor
mov
mov
add
pop
jp
sbb
mov
jne
add
mov
test
mov
dec
cwde
push
xchg
test
mov
aad
shl
aaa
movs
pop
push
nop
push
popf
aas
add
xor
mov
xlat
and
push
icebp
fist
ins
fldenv
xchg
les
sub
dec
retf
leave
pop
cmp
mov
push
bound
mov
stc
(bad)
cmp
pusha
add
push
dec
stc
mov
shl
in
ja
stc
sub
shr
push
imul
xlat
adc
mov
arpl
retf
and
lahf
(bad)
sub
popf
mov
in
popf
stos
and
xlat
imul
rcr
nop
xor
mov
fnstcw
jl
xchg
aaa
sub
pop
cmc
(bad)
fwait
in
sar
iret
stos
mov
add
xchg
jb
jno
push
inc
clc
mov
int
xchg
adc
bswap
pop
rcl
les
and
push
lods
dec
xlat
pop
cmp
adc
out
leave
jo
call
imul
jbe
mov
into
pop
pop
rol
inc
xor
out
mov
jnp
outs
xchg
movs
inc
leave
adc
xchg
mov
xchg
retf
dec
aad
add
out
sbb
(bad)
out
sbb
std
cdq
push
retf
xor
adc
out
mov
adc
inc
mov
out
adc
(bad)
shl
das
cwde
cmp
call
cdq
sub
cwde
ins
add
cmp
(bad)
and
repnz
sub
loopne
sbb
sub
xchg
iret
leave
leave
out
rcl
(bad)
(bad)
push
cli
mov
idiv
cwde
cmp
cmc
xor
xor
add
sub
stos
loopne
add
xor
or
test
les
push
pop
sub
inc
pushf
xor
js
dec
sahf
and
fucom
sub
inc
loopne
ret
fwait
and
jae
lea
mov
push
ins
shr
fsubr
test
xor
mov
lods
loop
pop
(bad)
add
mov
jg
mov
dec
scas
pop
(bad)
push
outs
rcl
xchg
xlat
(bad)
out
add
cdq
ror
lods
or
sub
adc
mov
sbb
mov
add
cmps
(bad)
out
nop
pop
inc
rol
pushf
cld
(bad)
cmp
jo
inc
ror
or
adc
pop
lock
mov
cmp
out
cmp
xchg
int
adc
push
xchg
test
adc
and
stc
pop
jmp
in
sub
out
jns
sar
push
(bad)
cmc
pop
add
inc
jno
retf
or
out
(bad)
fbld
xlat
inc
cmp
xor
gs
mov
xor
pop
stc
leave
pop
out
dec
dec
adc
sub
push
scas
push
mov
stos
rcl
push
jmp
pop
inc
and
mov
pusha
mov
inc
cmp
std
xor
lods
add
aad
pop
sub
mov
inc
jne
scas
cdq
fisubr
dec
xchg
ins
or
ret
jp
mov
sbb
int
xchg
sub
mov
xchg
jae
lahf
dec
fdivp
js
inc
sub
(bad)
ss
push
mov
push
test
sub
sbb
fst
mov
fwait
sbb
or
nop
jns
mov
push
or
pop
iret
in
mov
ja
lds
stc
xchg
fcomp
dec
xor
clc
das
fdiv
aas
fistp
push
loope
scas
mov
repnz
cli
cmps
mov
int
shl
mov
arpl
xor
mov
sahf
movs
jecxz
cmc
in
dec
outs
pop
stos
in
mov
pop
imul
ins
sti
and
jg
push
fwait
or
mov
xchg
jae
outs
jbe
or
mov
cli
pop
outs
jmp
xchg
ret
cdq
jmp
test
clc
add
inc
inc
mov
rcr
pop
mov
sbb
nop
push
scas
or
lock
mov
(bad)
jo
xor
ret
lahf
in
jne
lahf
loop
cmp
xor
pop
push
lods
and
pop
ret
adc
test
lods
test
test
jmp
into
(bad)
lock
mov
xlat
je
push
retf
mov
inc
dec
(bad)
and
ss
xchg
add
shl
xchg
pop
aam
cmp
mov
ss
sahf
inc
fsubr
stc
cli
and
das
jne
pop
int
shl
mov
and
data16
xor
xchg
das
mov
sbb
jge
sbb
dec
and
push
iret
pop
scas
add
jbe
xchg
xchg
movs
aas
and
stc
fs
xchg
pop
stos
jmp
out
adc
out
popa
imul
xor
repnz
or
cmp
jl
rcr
(bad)
xchg
jae
push
cdq
xchg
ret
mov
sbb
(bad)
fld
gs
(bad)
bound
xor
or
in
jmp
outs
fild
dec
fwait
rcl
jl
bound
jnp
ret
fisub
sbb
aam
ins
or
jp
cwde
loopne
adc
pusha
call
test
and
mov
jl
or
sub
popa
fisub
mov
pop
cmp
test
push
js
aaa
int
jne
test
test
adc
jae
aad
adc
mov
jno
or
retf
aaa
lock
pop
pusha
dec
cmps
mov
loop
es
imul
stos
dec
mov
leave
jnp
xor
stc
mov
ret
pop
popf
sbb
cmps
push
xchg
pop
inc
addr16
arpl
inc
jns
aad
add
cmps
sbb
scas
mov
and
daa
cmps
push
pusha
repnz
loope
addr16
hlt
in
sbb
adc
push
int3
push
int3
mov
stos
aad
sub
adc
inc
pop
das
xchg
fmul
sub
lods
ret
sub
xchg
cmp
and
cmp
out
or
cmp
adc
mov
xor
jp
mov
pushf
pushf
mov
idiv
xchg
ret
xchg
or
(bad)
and
fwait
mov
mov
adc
inc
push
sahf
nop
adc
dec
sub
jg
adc
addr16
xor
dec
push
retf
mov
out
ins
mov
mov
mov
pop
ret
in
imul
aam
in
daa
mov
imul
adc
pop
jp
sbb
jmp
add
sub
call
daa
jns
outs
pop
fstp
adc
jmp
jbe
jbe
mov
outs
std
jmp
push
dec
mov
cdq
sub
or
and
pop
pop
aad
xchg
jnp
stos
xchg
pop
retf
loope
sub
pop
mov
mov
xchg
mov
bnd
scas
in
mov
cmc
or
add
push
or
cmp
xor
mov
in
mov
inc
cmps
(bad)
(bad)
mov
test
mov
out
dec
sub
out
loop
inc
jne
popa
add
sahf
(bad)
mov
or
mov
jle
adc
daa
ror
cmp
jnp
sub
push
and
or
and
mov
push
mov
mov
mov
imul
arpl
pusha
call
adc
in
push
in
cmps
mov
test
inc
sbb
out
nop
xor
pop
push
cmps
outs
cmp
outs
jb
dec
sbb
ret
dec
out
les
scas
xchg
push
mov
mov
aad
dec
mov
sbb
aam
jmp
outs
daa
in
adc
mov
mov
mov
mov
icebp
xchg
mov
lods
cmp
push
sbb
icebp
mov
cmp
xor
push
mov
jmp
xor
loop
jmp
cli
cmps
xor
xor
or
jg
shr
mov
test
ret
mov
jmp
movs
pop
dec
lods
inc
push
loope
out
inc
sub
jbe
jecxz
and
or
and
cli
inc
cmc
push
in
mov
jmp
and
test
add
mov
es
push
mov
and
jg
in
or
xor
mov
add
jmp
inc
push
sar
push
frstor
sar
push
mov
pop
mov
sub
pop
mov
jmp
mov
(bad)
xchg
cld
cld
push
ficomp
xchg
scas
mov
add
es
out
dec
xchg
pusha
call
adc
jno
cmp
mov
lods
sahf
pop
cmps
adc
cld
outs
and
leave
mov
inc
mov
mov
xchg
push
add
xchg
daa
mov
in
adc
push
mov
jbe
sub
cmc
mov
std
and
test
mov
cli
mov
pop
js
pop
pop
bnd
sub
mov
mov
addr16
sti
out
fnstsw
repz
in
bnd
pop
(bad)
sahf
shl
mov
and
push
int
mov
bound
rcl
lock
push
push
sub
fst
imul
sahf
pop
stc
iret
add
cmps
ins
jl
xchg
push
fadd
and
sahf
inc
(bad)
ss
ss
push
cmp
add
xor
xchg
xchg
ja
jb
idiv
jp
inc
test
adc
fwait
jl
imul
mov
dec
lss
lods
push
push
ficom
sbb
jae
es
sbb
scas
lds
or
nop
es
aas
call
sahf
mov
sub
xor
cmp
pusha
out
bound
shl
push
popa
popf
cmp
sti
adc
or
mov
jmp
inc
adc
clc
out
clc
jo
out
into
leave
popf
rcpps
jno
adc
(bad)
test
xchg
lods
sbb
fisttp
sub
mov
loope
es
out
(bad)
jle
add
dec
lds
lock
cmp
jo
cli
adc
adc
icebp
sbb
inc
mov
mov
das
ror
push
fstp
and
ss
(bad)
and
test
lahf
cmps
lea
sbb
and
xlat
mov
lods
add
sti
or
cli
mov
cmc
and
out
xor
add
cwde
sub
(bad)
and
mov
out
aaa
test
(bad)
fist
adc
and
inc
inc
sbb
shr
outs
cmps
ret
jle
aam
push
or
cmp
mov
aad
test
clc
mov
scas
mov
ins
movs
(bad)
pop
lahf
inc
cmps
and
lahf
adc
int3
xchg
mov
stc
enter
sub
popa
icebp
scas
pop
imul
dec
out
mov
push
add
sub
gs
xchg
sub
cmps
cwde
mov
xor
iret
cmc
ror
add
leave
iret
mov
adc
inc
or
ins
xchg
push
scas
adc
scas
ror
(bad)
and
imul
xor
pop
outs
inc
dec
add
push
ret
xor
and
or
cmp
loopne
pop
push
sub
daa
mov
or
inc
retf
mov
adc
inc
lods
mov
aam
int3
mov
jb
or
jno
bound
jmp
rol
dec
cli
stc
test
out
mov
lock
ficomp
adc
ins
jb
ds
or
adc
and
xor
mov
cmp
inc
out
sahf
add
int3
mov
in
sub
mov
xchg
lock
pop
dec
mov
sti
int
mov
xchg
pusha
shl
mov
sbb
fcmovbe
ret
(bad)
mov
repz
pop
adc
bound
push
adc
mov
aas
test
ret
jae
cs
repnz
inc
cwde
sub
cmps
stc
mov
sbb
jns
mov
cs
push
shl
into
adc
cwde
into
call
in
xor
out
stos
adc
in
jmp
gs
in
cwde
push
in
xchg
dec
test
mov
pop
pop
mov
push
xchg
popf
sti
enter
call
sbb
xchg
sbb
push
jecxz
retf
sbb
jge
jmp
nop
daa
dec
dec
jmp
js
lahf
ins
ret
and
adc
dec
out
pop
mov
jle
push
in
cmc
push
cmc
jo
shl
stos
sbb
jmp
pop
cwde
mov
outs
mov
push
pop
cmc
inc
lods
pop
jbe
mov
adc
adc
shl
lock
cmp
icebp
gs
pusha
adc
js
cmp
repz
retf
cmp
jae
imul
call
sbb
or
popa
(bad)
mov
xor
xchg
pop
mov
imul
iret
movs
and
int
es
scas
popa
push
mov
aam
(bad)
dec
push
inc
cmp
cmp
mov
outs
sbb
xchg
jle
das
out
xor
sub
mov
ins
add
rcr
test
ds
mov
icebp
(bad)
arpl
jnp
inc
ret
dec
jne
push
adc
std
loope
pop
mov
mov
push
cmp
(bad)
in
ins
jmp
sahf
inc
push
inc
(bad)
test
call
mov
pop
sub
pushf
pop
mov
movs
es
sahf
sub
addr16
pop
push
push
inc
dec
daa
ins
dec
jmp
xor
pop
xchg
addr16
mov
(bad)
pop
imul
je
popf
mov
mov
xchg
pop
xchg
cmp
retf
dec
mov
sahf
xchg
adc
retf
sti
lods
test
xor
jle
jp
xor
int3
(bad)
cmp
push
push
jo
pop
sbb
call
lods
dec
punpckldq
lods
popf
sbb
cmc
adc
test
lea
sbb
in
test
adc
xchg
scas
movs
xchg
mov
es
test
cmc
in
sub
mov
mov
mov
sub
(bad)
mov
push
mov
cmp
sahf
add
loope
fist
sub
loope
xchg
je
arpl
push
loopne
lds
das
stos
pop
loope
popa
push
mov
xor
loop
jnp
mov
jle
fdiv
sti
mov
neg
cmp
jle
xlat
cmc
xchg
add
fsub
cmc
loope
push
fistp
neg
mov
sbb
ror
xlat
jne
fldcw
mov
rcl
inc
aas
sti
scas
out
cmp
mov
jo
in
rcr
rcr
add
adc
jae
mov
in
shl
jb
push
adc
leave
add
addr16
sub
mov
dec
dec
shl
mov
inc
push
fistp
cmps
sar
mov
sbb
jo
clc
mov
shl
int3
or
add
jno
push
in
imul
hlt
mov
jge
out
call
mov
(bad)
rol
popa
setb
(bad)
sbb
jb
nop
(bad)
imul
je
out
jbe
pop
out
popa
mov
out
and
fs
push
sbb
pop
out
jns
pop
shl
ds
ficomp
xchg
mov
test
dec
repz
dec
shl
(bad)
mov
inc
add
fs
push
inc
ret
mov
into
push
retf
adc
rcr
jge
cmps
(bad)
inc
data16
mov
addr16
pop
mov
movs
xlat
inc
mov
and
xor
dec
xchg
jecxz
inc
cdq
sbb
adc
ret
ret
jns
ins
data16
dec
jbe
add
or
lods
cmp
push
imul
imul
js
out
sahf
jmp
stos
pop
aaa
push
lds
aad
ud1
adc
mov
dec
stos
cdq
inc
mov
mov
dec
test
(bad)
push
and
mov
cdq
pusha
xor
xor
ret
stos
std
mov
push
repz
adc
cmc
mov
push
sahf
test
imul
push
aam
call
mov
jge
and
fwait
or
mov
xor
sub
ds
int
mov
mov
push
outs
ins
push
lods
xchg
mov
fxch
add
test
xor
add
fwait
out
cmovne
(bad)
mov
mov
xor
pop
jns
(bad)
in
popa
shl
cdq
sahf
js
stc
mov
mov
and
or
adc
jecxz
or
sub
out
inc
push
lea
test
mov
jb
inc
sti
dec
outs
popf
jle
(bad)
(bad)
sub
pop
int3
pusha
push
xor
cld
adc
les
daa
dec
add
dec
or
cwde
or
dec
xor
xchg
out
in
sbb
imul
(bad)
fdivr
dec
sub
mov
ja
xchg
stc
gs
dec
push
setns
cmp
pop
test
xchg
movs
scas
rcl
ss
pop
dec
scas
dec
into
idiv
inc
es
and
jmp
push
jmp
or
icebp
pop
je
add
xor
aas
enter
xor
nop
ficomp
outs
popf
sbb
mov
or
fidivr
pop
push
test
or
dec
add
aaa
sub
mov
sub
inc
cdq
xchg
pop
push
dec
mov
daa
int3
ja
loope
retf
mov
popf
outs
inc
mov
hlt
mov
shr
xchg
idiv
lock
sub
push
lock
int
pop
repz
mov
ret
ins
into
jmp
cmps
pop
int3
call
sbb
ret
es
retf
mov
mov
fild
(bad)
clc
ins
xor
dec
jl
lahf
lods
test
or
adc
xchg
outs
outs
or
cmp
stc
mov
retf
sub
in
jnp
push
xor
xchg
in
cdq
xor
xchg
(bad)
mov
rol
xchg
enter
inc
pop
xor
push
call
jbe
pusha
push
mov
aad
mov
xor
std
pop
arpl
or
mul
nop
cs
stos
inc
xchg
out
sub
xor
fisub
mov
or
fwait
rcl
jp
outs
das
adc
inc
movs
push
mov
push
leave
imul
push
fst
sub
xchg
push
mov
pop
cmp
bswap
jae
xor
pusha
push
jno
shl
cli
and
inc
sahf
sub
and
loopne
pop
hlt
aaa
fbld
jmp
scas
add
sbb
popf
arpl
out
inc
loopne
mov
addr16
pop
inc
out
pop
movs
mov
int
cmp
imul
fs
mov
mov
and
(bad)
sahf
shl
stc
adc
sti
jbe
mov
xor
jp
cmp
or
in
adc
fimul
pop
cmps
pop
sbb
pushf
ja
inc
imul
sbb
clc
inc
jae
jne
xchg
ss
fisttp
cdq
in
fist
mov
popa
sub
movs
jl
out
sbb
repnz
dec
or
push
ficom
push
dec
mov
mov
mov
not
mov
or
shl
mov
in
icebp
push
(bad)
(bad)
push
in
ret
push
adc
nop
call
retf
mov
inc
cdq
push
or
ins
ror
sub
mov
pop
movs
js
ret
add
mov
push
jo
inc
icebp
pop
inc
not
or
pop
fsubr
dec
inc
imul
adc
bound
das
add
aam
pop
mov
scas
arpl
xor
dec
sub
xchg
frstor
test
loopne
std
mov
mov
in
repz
enter
nop
fs
les
xchg
pop
inc
and
imul
bound
movs
in
adc
mov
(bad)
pusha
mov
pop
pop
pop
jae
adc
shr
es
jg
push
jo
dec
mov
mov
jle
test
mov
jecxz
(bad)
retf
adc
xchg
cmp
fst
movs
jle
sub
add
push
inc
cmp
lea
mov
jg
adc
jbe
ret
or
das
or
mov
or
mov
push
mov
mov
(bad)
jns
xchg
cmp
(bad)
aam
and
jmp
rcr
outs
add
ds
dec
jg
push
enter
(bad)
and
movs
mov
out
jg
sub
test
movs
mov
in
icebp
xchg
push
cmp
sub
mov
mov
jg
int3
js
sbb
push
idiv
sbb
mov
xor
repnz
mov
in
inc
push
dec
jg
fs
stc
call
add
daa
lods
xlat
pop
inc
out
adc
jle
pop
or
add
(bad)
pop
dec
cmps
cmp
dec
sbb
aad
adc
adc
repnz
jle
test
fimul
ret
aad
jmpw
inc
fcmovu
fld
cmps
cmp
jle
daa
clc
lea
not
sub
cmp
clc
dec
loopne
mov
xchg
pop
enter
jb
lahf
xor
dec
jge
and
ja
or
(bad)
nop
ss
xchg
leave
mov
pop
jo
fcmovbe
inc
dec
push
jmp
dec
push
call
mov
dec
ret
dec
outs
xchg
cld
(bad)
lods
ret
jne
loope
adc
xor
jl
loope
popa
call
or
das
imul
mov
sub
mov
sahf
sub
nop
mov
cmp
aaa
ds
clc
ret
dec
adc
xor
lahf
movs
int3
pop
out
scas
std
test
frstor
not
(bad)
int3
dec
jg
xchg
mov
in
outs
jno
sub
aas
xchg
js
mov
int
cmp
aam
call
pop
imul
or
inc
xchg
xor
push
fmul
push
cmc
pop
outs
ja
std
push
jnp
neg
data16
inc
ins
push
xor
gs
push
mov
xchg
lods
fidiv
inc
push
popa
sub
dec
xor
pop
(bad)
jmp
leave
inc
imul
dec
movs
xlat
and
sbb
mov
movs
popa
cmovbe
loop
mov
xchg
jecxz
clc
jne
jmp
cmp
push
push
jae
and
out
outs
rol
fdiv
and
or
cmp
fadd
ins
adc
repnz
fiadd
mov
pop
in
pop
pop
add
ss
jne
xchg
sahf
pop
mov
aad
imul
mov
sbb
out
jmp
add
pop
push
pushw
pusha
and
xchg
jle
xor
sti
push
push
dec
jbe
jb
push
adc
outs
sub
cmp
rcr
add
imul
mov
shl
pushf
fst
sbb
ds
pop
mov
sbb
push
adc
cmp
xlat
stos
mov
movs
xor
xchg
and
hlt
xchg
ins
adc
pop
or
sub
outs
sbb
in
test
sbb
cmc
imul
push
push
loop
mov
icebp
inc
fnstenv
es
mov
jne
ficom
inc
pusha
xor
cmps
xor
mov
test
ret
adc
pushf
pop
rcr
pop
xchg
cli
jo
std
mov
xchg
(bad)
ss
fucompp
xor
push
(bad)
daa
imul
je
test
push
inc
jecxz
or
(bad)
cld
inc
sbb
loopne
sbb
dec
and
xchg
ja
loope
out
bound
std
jae
dec
in
out
fwait
out
mov
lock
mov
sar
ror
cmp
imul
xor
cli
mov
xor
leave
aas
push
in
out
lea
pop
cwde
in
mov
mov
retf
mov
scas
lods
mov
scas
or
out
and
jb
adc
(bad)
les
and
das
call
out
pusha
stos
mov
jle
mov
push
fs
addr16
test
mov
cmp
in
ja
mov
xchg
shr
(bad)
xor
loopne
lahf
adc
mov
lds
sbb
inc
gs
loope
mov
mov
sub
pop
data16
mov
sbb
jecxz
ins
retf
jle
inc
pop
je
rcr
adc
fld
faddp
inc
mov
pop
(bad)
cmp
xor
mov
sbb
fistp
(bad)
int
cwde
or
cmp
fxch
mov
mov
mov
mov
test
inc
sbb
jnp
xchg
push
mov
mov
jl
pop
icebp
cdq
(bad)
cs
inc
and
or
or
ja
mov
pop
xchg
test
xchg
daa
test
xchg
xor
jg
mov
addr16
xchg
sbb
sub
test
add
pop
popa
stos
inc
cmc
pop
and
sub
sbb
test
sbb
mov
pop
loop
std
adc
sub
add
cs
popf
xchg
adc
pushf
movs
lds
xchg
aaa
inc
add
push
jo
test
push
mov
cmp
mov
mov
mov
popa
call
rol
(bad)
retf
and
cwde
jae
sub
scas
sbb
add
arpl
popa
fs
arpl
cmps
jmp
mov
(bad)
dec
lods
fnstenv
dec
cmps
add
inc
xor
hlt
popf
inc
jno
(bad)
cmp
inc
jns
sub
xchg
rcl
push
pusha
xchg
and
sti
js
hlt
cmp
out
or
ss
mov
mov
call
sub
rol
add
push
fcom
dec
mov
add
mov
call
fild
sub
leave
add
xchg
mov
lock
fwait
arpl
test
rcr
in
sbb
js
ret
sbb
xchg
jnp
sbb
jbe
loope
inc
push
xor
fdiv
pop
(bad)
adc
outs
repz
int
daa
dec
retf
cld
test
add
cs
pop
addr16
pop
add
je
ja
ja
call
cmps
and
gs
xlat
inc
push
and
cwde
mov
fwait
mov
adc
loopne
loopne
stos
sti
xchg
jnp
and
adc
fisubr
fidiv
sbb
std
retf
in
sub
retf
xor
popf
lds
dec
inc
psubsb
mov
shr
add
fisub
jmp
and
cmc
ret
jecxz
out
das
xchg
daa
mov
push
adc
xchg
inc
icebp
not
push
mov
call
fcomp
outs
cmc
daa
sbb
push
mov
push
mov
adc
cmps
xchg
daa
dec
xchg
xor
jl
add
repnz
jae
xor
add
daa
popf
ret
bnd
mov
push
xor
xor
repz
mov
pop
(bad)
sub
jge
adc
ins
pop
shl
lock
mov
mov
aad
xchg
cmps
jl
xchg
mov
nop
sahf
ins
mov
cmp
ror
xor
add
lods
cmps
fcom
pop
ffree
or
pop
adc
sahf
pop
or
jmp
jno
int
std
jecxz
iret
aam
and
ret
add
lods
sahf
add
cmp
mov
ret
call
pushf
stos
adc
mov
out
aas
dec
test
mov
jl
cli
pop
fadd
ja
jae
repnz
dec
push
fidivr
dec
xchg
cmp
xor
jnp
cmp
mov
nop
and
mov
sbb
mov
fidivr
cdq
int3
cmp
mov
pop
sub
das
int
in
ret
push
add
mov
mov
xchg
dec
retf
retf
das
test
out
out
or
inc
or
cmps
out
adc
xchg
adc
loope
pop
(bad)
dec
add
ins
pop
call
mov
adc
mov
inc
or
aam
sub
jecxz
xor
fwait
mov
dec
push
ins
rcl
call
xor
xchg
enter
dec
pop
aaa
jecxz
jb
cmps
ror
fist
movlhps
inc
cmc
inc
mov
add
xchg
or
xor
in
rcr
sbb
cmp
imul
cmp
cwde
and
lea
call
aas
mov
pop
pop
pop
adc
fidiv
loope
rcr
pop
dec
pop
ins
(bad)
outs
loopne
and
(bad)
cmps
or
sbb
test
sbb
inc
sub
push
movs
mov
xchg
popf
dec
fist
mov
adc
sti
js
sbb
jb
les
xor
pop
xor
push
jl
out
mov
sbb
or
stos
iret
sub
je
stc
push
out
jne
data16
inc
mov
jno
pop
cmp
lods
mov
retf
adc
cmp
mov
mov
pop
or
jmp
fcomi
loop
(bad)
sbb
push
mov
pop
mov
jp
cs
nop
push
nop
and
rol
cmps
mov
fdiv
out
popa
les
fnstsw
xor
scas
and
cmp
mov
loopne
xor
inc
je
scas
aad
push
mov
mov
mov
loopne
jl
pop
gs
push
or
hlt
jl
mov
push
lods
mov
cdq
jnp
xchg
aad
out
int
gs
arpl
jae
pop
dec
xchg
mov
mov
lahf
push
in
nop
mov
pop
js
cdq
loop
ret
xchg
iret
ja
pop
rcr
push
adc
cs
push
stc
pop
(bad)
in
or
iret
jbe
mov
push
sbb
jecxz
sub
xchg
xor
sbb
cs
imul
fidivr
push
mov
test
mov
scas
popf
movs
int
dec
and
jae
fisubr
add
cli
jo
loope
sub
dec
mov
mov
ins
push
mov
nop
xchg
ins
jae
rcr
mov
and
fwait
sbb
enter
mov
jbe
jns
pop
stos
mov
dec
push
xor
popa
mov
mov
out
or
mov
int
dec
sub
retf
jmp
push
inc
das
inc
pop
xchg
fnstsw
sub
xchg
fist
jge
ret
das
sbb
cs
sub
das
adc
or
fisub
or
mov
mov
push
ins
xchg
or
int3
das
push
jmp
push
(bad)
imul
popa
push
sub
into
pusha
fcom
push
mov
and
data16
inc
mov
test
retf
arpl
fisttp
ja
div
adc
jae
pop
pop
repnz
lahf
movs
stos
std
xchg
cli
loopne
mov
into
outs
ss
pop
dec
lock
mov
or
fcmovnu
test
cmps
stc
in
xchg
push
add
(bad)
push
mov
retf
js
mov
fisubr
add
pop
popa
repnz
xor
push
leave
movs
sbb
xchg
or
push
test
outs
hlt
jo
mov
inc
xlat
mov
std
jge
jp
mov
xchg
mov
adc
adc
jmp
ins
xchg
mov
mov
sub
cli
adc
outs
(bad)
dec
sub
and
clc
addr16
sahf
inc
mov
ret
xchg
test
mov
jmp
mov
xor
add
mov
les
loope
pop
lods
sbb
mul
test
lock
popa
xchg
sub
inc
shl
gs
jmp
adc
iret
fwait
push
cmp
sub
push
cs
xor
mov
push
xchg
inc
push
idiv
aam
lahf
fstp
xor
cdq
cmp
mov
aas
mov
push
add
nop
push
cmc
xor
ins
ins
je
les
mov
cmp
shl
movs
gs
daa
jmp
xor
mov
add
int
adc
iret
leave
sbb
xchg
imul
out
int3
xor
ret
rcr
jmp
pop
popa
clc
or
push
mov
pop
jp
dec
adc
retf
jmp
(bad)
push
push
mov
es
bound
inc
les
out
mov
sub
add
jp
jne
movs
popf
xor
std
loop
sbb
(bad)
cmp
stos
dec
loope
pop
inc
xor
add
or
dec
xchg
sub
inc
mov
push
mov
test
dec
scas
lds
jne
sbb
pop
adc
mov
call
mov
js
push
je
push
jns
xor
jge
and
aam
ja
aaa
jo
dec
pop
cmp
or
gs
das
xlat
mov
cmp
mov
inc
xlat
adc
jns
mov
sub
mov
jmp
or
arpl
dec
jmp
bound
fsubp
pop
leave
shr
jne
sub
neg
mov
add
sahf
and
adc
mov
push
rol
int3
sbb
out
enter
es
add
cmps
loopne
adc
out
pop
rep
adc
imul
int3
outs
xchg
push
and
mov
lea
jmp
sbb
(bad)
dec
and
and
int3
icebp
and
jle
outs
sbb
jmp
adc
mov
xor
and
xchg
sbb
pop
jno
pop
out
ins
add
push
mov
cmp
cs
push
mov
lea
ins
scas
repz
adc
loopne
mov
push
xor
ja
cwde
pop
xor
fs
enter
sar
in
ins
idiv
jns
int
push
sahf
cld
in
jmp
sti
rol
sbb
push
sbb
out
sbb
push
sub
add
pop
inc
xchg
iret
es
cwde
xchg
fisubr
xlat
or
iret
mov
(bad)
call
xor
scas
or
cmp
movs
push
or
out
mov
dec
push
lahf
stc
mov
inc
and
fisubr
mov
xor
fbld
mov
pop
jg
ss
out
mov
xchg
out
adc
outs
sti
cmp
mov
hlt
jmp
inc
cdq
or
mov
jno
jge
and
cmp
mov
imul
fadd
xchg
aaa
cs
inc
xchg
xchg
and
shl
fdivr
jg
push
jno
cmp
or
outs
ins
mov
or
sub
retf
sti
jne
ficom
movs
cwde
pop
adc
pushf
shr
mov
xor
dec
rcr
rep
popa
aad
inc
mov
(bad)
cs
dec
out
pop
jle
mov
mov
or
sbb
pop
xor
adc
or
jmp
xor
ret
or
idiv
aaa
mov
lods
adc
mov
sbb
popf
xchg
sub
add
cmp
inc
push
xchg
inc
jo
(bad)
in
mov
adc
mov
outs
jae
lea
mov
pop
add
jg
out
dec
xor
les
(bad)
mov
rcr
push
repz
rcl
out
add
fdiv
call
aad
sbb
lds
push
out
cwde
mov
add
ret
out
jge
bound
or
mov
or
dec
aaa
push
lods
mov
cmps
sar
cwde
adc
into
rcr
scas
cld
mov
add
push
xchg
scas
(bad)
adc
fistp
icebp
imul
mov
fwait
push
lds
add
pushf
mov
xor
stc
push
mov
popa
int
lods
bound
imul
pop
mov
dec
mov
cs
sbb
cmc
fs
fs
and
pop
cwde
pop
ins
(bad)
cmp
add
mov
push
and
mov
xor
jns
adc
ret
dec
mov
pop
outs
mov
or
sti
idiv
repz
mov
add
pop
movs
not
fistp
jns
adc
sbb
stos
sub
push
out
xor
fst
in
jg
shr
mov
xchg
xchg
mov
pop
ror
scas
add
pushf
xchg
sbb
lods
mov
ds
dec
aaa
sub
pop
mov
imul
dec
or
movs
adc
fs
mov
push
xchg
int3
lock
in
aas
cmp
out
push
mov
mov
sub
push
pop
rcl
mov
out
arpl
pop
push
sub
or
mov
jnp
rcr
sbb
idiv
sar
push
mov
inc
jp
inc
and
xchg
daa
mov
mov
push
adc
scas
push
adc
push
cld
xchg
(bad)
or
ja
mov
shl
push
xchg
inc
icebp
jl
mov
xor
pusha
and
push
and
out
std
lds
jae
inc
enter
retf
fisttp
jmp
pushf
icebp
(bad)
pop
fisttp
and
cdq
jns
push
lds
pop
fsubr
cmps
jno
addr16
imul
cld
and
std
sub
retf
jecxz
pop
pop
test
pop
adc
imul
pop
xchg
inc
xlat
xchg
xchg
adc
mov
xlat
bound
add
cwde
xchg
inc
push
icebp
(bad)
out
and
pop
mov
mov
mov
popa
pop
inc
(bad)
out
int
cmp
push
in
sahf
and
stc
jl
shl
push
lods
mov
addr16
aaa
inc
jge
pushf
adc
adc
mov
push
ja
xor
push
mov
jmp
xchg
cld
cmp
test
inc
and
frstor
lock
int
sub
les
mov
ja
xchg
sbb
and
adc
popa
inc
or
sbb
ds
cmp
scas
inc
ja
out
xor
inc
sbb
push
out
retf
mov
or
jge
ror
icebp
mov
mov
les
les
in
cmps
xchg
jbe
mov
loopne
loope
aad
in
push
enter
ret
and
xlat
pop
das
xchg
pop
sbb
xchg
out
mov
sahf
mov
push
sbb
pop
in
sub
adc
cld
rcl
dec
mov
imul
add
or
add
or
mov
add
xor
call
push
std
movs
(bad)
cmp
arpl
sub
inc
and
fwait
bound
jno
lds
inc
jne
retf
jae
or
mov
inc
leave
shl
ficom
dec
test
es
hlt
pop
dec
fmul
jmp
(bad)
cmp
pop
jno
mov
(bad)
sbb
stc
int3
out
push
mov
int
rol
test
push
rol
inc
or
lods
ds
gs
popf
push
push
in
sub
jecxz
sbb
inc
je
ficomp
pop
sub
sub
mov
fcomp
stc
xor
dec
pop
(bad)
out
call
out
je
rol
push
mov
stos
icebp
inc
jg
jne
sbb
imul
popf
mov
in
fstp
dec
jnp
mov
cmps
(bad)
loopne
shr
mov
inc
xchg
pop
outs
mov
jge
cmp
add
(bad)
in
push
sbb
(bad)
mov
test
and
or
mov
push
movs
cmp
inc
sahf
xor
fisubr
mov
mov
xchg
repz
inc
mov
mov
dec
fs
pop
jbe
and
xor
das
out
(bad)
retf
nop
xor
ins
pop
and
pop
push
cld
jae
jo
pop
(bad)
shr
shr
out
ucomiss
jl
cmpxchg
mov
leave
mov
in
mov
addr16
aas
xor
addr16
nop
lock
push
adc
(bad)
aad
mov
cmp
stc
fadd
rcl
push
out
inc
icebp
in
(bad)
aam
int3
dec
xor
fnstcw
mov
imul
sub
rcl
sub
cmp
inc
mov
cmc
ss
mov
and
repz
cmp
xchg
pop
push
push
mov
fsubrp
dec
popa
mov
jo
adc
add
jge
out
and
test
and
lahf
das
or
sbb
cdq
mov
mov
test
xor
das
dec
(bad)
es
rcr
mov
pop
dec
mov
lock
xchg
adc
ss
in
movs
clc
push
push
mov
inc
or
cmp
push
(bad)
and
jmp
hlt
aad
sahf
xor
xlat
sti
jl
push
dec
jbe
jmp
mov
adc
(bad)
sbb
or
mov
mov
mov
xchg
fwait
shl
or
sub
aaa
sbb
inc
push
scas
mov
and
and
loope
sub
push
sar
ss
cmc
je
imul
js
pop
outs
daa
add
or
dec
dec
inc
push
cmps
fsub
push
outs
mov
pop
sbb
mov
clc
cmp
mov
mov
ficomp
int
imul
out
xchg
iret
jle
dec
xor
inc
and
test
das
dec
fsubr
in
mov
mov
retf
jecxz
jl
stc
mov
arpl
out
inc
out
in
adc
in
jmp
clts
stc
dec
cmp
mov
mov
scas
sbb
enter
sbb
in
jg
mov
push
pop
push
cs
jmp
push
popa
repnz
hlt
cmp
push
hlt
add
and
int3
mov
and
test
jg
out
mov
cld
ret
(bad)
in
jae
mov
push
mov
add
cmps
cmp
repz
sbb
dec
pop
add
inc
adc
leave
mov
xor
(bad)
cld
test
jae
test
jnp
out
add
aas
arpl
(bad)
imul
jmp
ja
xor
push
xlat
mov
xchg
pop
or
ja
retf
inc
mov
pop
ret
inc
cmovp
push
push
dec
cmps
lds
test
int
(bad)
jmp
and
adc
and
rol
loop
jbe
in
repz
stc
test
mov
add
call
xor
inc
out
out
inc
in
mov
push
inc
mov
pop
push
dec
lahf
add
neg
scas
jno
pop
xlat
sbb
push
out
fisttp
or
int3
pop
inc
sub
sar
push
aaa
inc
pop
aam
push
lock
retf
mov
and
sub
stc
jnp
sbb
inc
shr
mov
cdq
xchg
test
cmp
jg
mov
fsubr
pop
in
cwde
adc
dec
imul
das
lods
aam
mov
sahf
cmp
jmp
cmc
xchg
enter
mov
int3
call
outs
mov
adc
jp
outs
fdiv
push
xchg
call
rep
bnd
bound
cs
add
or
pop
pmaddwd
ret
xor
sbb
mov
shl
cmps
repnz
fwait
cmp
fild
scas
jns
cmp
cmp
idiv
xor
inc
test
fmul
mov
and
xor
push
xor
jbe
add
inc
adc
not
clc
push
dec
inc
out
or
xlat
jecxz
out
out
mov
jle
bound
push
ja
inc
xchg
xor
push
cli
cmp
repnz
ret
mov
mov
test
mov
(bad)
mov
jno
adc
inc
iret
out
arpl
(bad)
cld
xchg
push
inc
adc
pushf
outs
sbb
aam
mov
and
int3
inc
imul
(bad)
test
inc
inc
enter
pop
mov
test
test
outs
ja
dec
mov
adc
mov
pop
pop
scas
xlat
inc
xchg
cs
repz
ja
int3
xchg
scas
call
fadd
jmp
xlat
push
lea
mov
xchg
sbb
jmp
xchg
lea
pop
ss
dec
lds
call
dec
pop
into
fist
movs
shr
sub
dec
outs
push
mov
or
jae
adc
fimul
jmp
or
inc
mov
imul
iret
pop
mov
xchg
jns
sbb
mov
sub
fstp
ror
mov
cs
mov
cmp
push
icebp
popa
pop
xchg
outs
or
lods
add
add
add
and
mov
push
jmp
xchg
ss
into
xlat
fs
icebp
ins
dec
sbb
addr16
cmp
enter
int
xchg
cmp
sub
mov
clc
pop
push
shl
outs
sub
pop
sahf
cmp
jmp
jbe
sbb
clc
or
popf
push
xor
inc
(bad)
rcr
mov
jmp
pop
or
rcr
into
nop
dec
pop
pop
ficomp
shl
jle
add
mov
adc
lds
movs
mov
pusha
mov
inc
push
in
and
mov
mov
div
or
loopne
movs
in
cmp
pop
pop
mov
mov
pop
popa
push
or
mov
jae
cmovne
dec
addr16
or
fadd
jnp
mov
mov
ja
out
mov
pop
sub
es
(bad)
mov
push
adc
dec
test
mov
cwde
in
pop
icebp
cmp
lock
test
js
in
inc
(bad)
(bad)
cdq
lds
add
rcr
xchg
leave
sub
outs
xchg
pop
xchg
fsub
pop
dec
sbb
(bad)
shl
stos
cmp
ret
lds
mov
fimul
mov
mov
in
ja
mov
lock
cmp
mov
dec
mov
retf
inc
mov
push
jno
sub
xchg
xor
add
repz
addr16
xchg
sbb
sar
jp
fdivr
pusha
cmps
adc
das
pop
cld
mov
jae
call
jae
push
sub
call
xchg
scas
mov
ins
jno
add
rol
and
inc
add
(bad)
mov
jecxz
ins
xor
fwait
mov
sub
gs
jmp
sbb
outs
push
push
ror
rol
push
xor
jae
pop
and
fidiv
mov
sub
cs
test
or
mov
call
sub
mov
inc
popf
add
cmp
sub
retf
pop
pop
jmp
jmp
or
pop
es
sbb
hlt
xchg
mov
cwde
fisub
test
cmc
mov
(bad)
pop
sbb
xor
es
jg
mov
mov
stos
pop
mov
mov
mov
call
mov
cmp
iret
push
adc
sbb
fwait
jp
test
adc
add
xor
clc
addr16
addr16
dec
inc
outs
and
ret
cmp
div
mov
pop
popf
not
sub
lods
cmp
int3
mov
iret
fnop
xchg
imul
sbb
jmp
jmp
pushf
loopne
ficomp
test
je
movs
sbb
jle
in
das
ds
inc
mov
xor
mov
mov
lahf
fs
js
lahf
jl
xchg
out
lea
sti
cmp
test
pop
mov
add
mov
imul
xchg
mov
mov
fdivr
mov
fisttp
adc
sbb
inc
jp
dec
out
mov
les
mov
loope
jecxz
adc
aam
nop
inc
dec
mov
jl
in
pop
cs
lods
scas
mov
dec
xchg
mov
jne
ror
xlat
fcom
xchg
cmp
in
jl
ficom
sbb
push
sub
stos
pusha
cmp
test
movs
sbb
scas
inc
call
test
pop
dec
push
pop
inc
add
gs
xchg
cmps
cmp
and
gs
inc
dec
iret
xor
add
sbb
rol
jb
xor
retf
leave
mov
fsub
push
adc
data16
sbb
xchg
mov
pop
mov
stos
es
push
ss
jmp
push
ret
std
jg
jg
(bad)
int3
lea
pop
call
pop
pop
fcom
loopne
test
cli
sbb
sti
or
mov
cmps
jae
mov
aam
mov
xor
xor
enter
xor
arpl
lds
in
push
xchg
push
xchg
or
fidivr
lock
and
dec
out
jae
pop
sbb
lods
add
hlt
pop
mov
mov
(bad)
mov
cmps
mov
std
in
(bad)
fbstp
mov
ja
test
icebp
ins
test
mov
jbe
pop
call
sub
push
data16
pop
sub
add
dec
jns
or
fsub
out
loop
mov
(bad)
cmp
aas
inc
or
js
cmp
repnz
loop
imul
jl
arpl
daa
clc
xchg
(bad)
out
jno
fst
test
dec
ins
jp
jno
(bad)
push
inc
or
clc
loope
dec
shl
push
mov
(bad)
push
pusha
fdivr
pop
les
jbe
cld
leave
test
mov
add
sub
shr
cli
add
data16
lods
xchg
mov
fmul
inc
push
pop
ret
aas
mov
jae
cmp
cmps
cmp
mov
pop
pop
out
(bad)
out
aaa
daa
add
faddp
dec
xchg
sahf
push
dec
sub
fcomp
cmp
mov
cmc
nop
(bad)
mov
add
inc
sbb
fimul
or
int3
and
xchg
scas
push
ret
data16
cmp
aas
jae
push
js
inc
in
adc
lods
dec
lods
xchg
mov
inc
sahf
ficom
popf
fs
bound
arpl
aam
movs
adc
adc
xor
pushf
jns
adc
scas
sar
outs
push
xor
movs
cli
inc
fdivr
jecxz
xchg
and
mov
mov
hlt
xchg
fisttp
mov
jecxz
std
in
daa
outs
jle
push
sbb
in
jg
sub
sti
xor
jge
pop
stos
out
ins
jmp
push
mov
popa
cdq
push
or
popa
xchg
cwde
mov
cmp
inc
xchg
mov
push
ret
rcl
mov
lahf
adc
sbb
stos
cmp
in
push
call
push
adc
inc
enter
ins
xor
(bad)
sub
adc
cmp
(bad)
xchg
sbb
sub
ins
push
enter
add
adc
push
int
ins
adc
sub
xor
out
outs
sbb
pop
addr16
js
push
andps
nop
dec
xchg
or
retf
sbb
loop
(bad)
mov
ins
cld
dec
pushfw
repz
popa
xchg
loope
in
sbb
mov
inc
repnz
popf
inc
test
mov
shl
inc
xor
xor
adc
arpl
jne
mov
cmp
mov
iret
scas
into
sub
mov
lock
pop
or
lahf
call
xor
popa
jmp
mov
je
ret
jecxz
push
pop
cwde
push
adc
add
(bad)
sbb
retf
ret
retf
and
pop
pop
jbe
ror
push
adc
retf
xchg
jmp
mov
jp
or
pop
xor
adc
mov
jns
fwait
xchg
fsub
jo
sbb
sbb
mov
(bad)
mov
daa
imul
dec
inc
mov
mov
cs
fs
mov
cmps
mov
in
hlt
shl
and
xchg
cmp
mov
ds
mov
push
jl
push
jne
jns
test
xchg
retf
fstp
pop
mov
cdq
sbb
cmp
adc
dec
ja
mov
test
xchg
add
retf
(bad)
rol
daa
cmp
mul
push
std
je
or
pop
sub
xor
and
cli
ret
leave
sbb
or
(bad)
mov
in
stos
pop
cmp
jb
ror
push
pop
xchg
mov
jbe
jl
mov
push
mov
pop
xchg
or
fwait
inc
sub
fnstcw
addr16
jbe
inc
ss
imul
test
inc
push
es
mov
rcl
fdivr
cwde
mov
adc
or
fidivr
retf
ss
fidiv
ja
inc
movs
cld
pop
loopne
add
je
or
sbb
pop
popa
mov
es
aas
adc
outs
mov
inc
inc
adc
imul
and
lahf
and
adc
frstor
xor
pop
pop
fisttp
icebp
push
ret
sub
clc
add
test
out
movs
out
pop
cmp
sti
daa
neg
and
add
sti
or
(bad)
dec
jbe
jno
mov
push
div
mov
and
sbb
add
cmp
add
jp
outs
jg
lea
jmp
sbb
jge
in
in
loope
or
cmp
cdq
mov
in
jle
into
xor
movs
retf
cmp
movs
call
pop
jp
repnz
mov
mov
push
pop
ja
inc
jns
inc
(bad)
aad
cwde
add
pop
inc
push
push
inc
and
sub
lods
sbb
ret
ins
push
movs
sub
jle
xor
sub
into
dec
push
daa
out
mov
jmp
mov
ins
hlt
cmp
inc
mov
sbb
dec
shl
fiadd
ret
bound
pop
loope
mov
repz
jp
dec
jle
fdivr
add
movs
push
mov
sbb
mov
in
add
mov
mov
jmp
pop
ret
xor
nop
popf
or
movs
and
or
fs
stos
shl
push
inc
mov
jb
pop
sub
mov
sbb
or
aas
ss
lods
dec
pop
pop
es
or
std
pop
mov
sar
icebp
push
cmp
adc
xchg
mov
pop
clc
sub
idiv
into
jl
xor
sbb
popa
stos
mov
je
jns
push
xchg
add
inc
cmp
xchg
test
outs
add
jbe
inc
xchg
sub
cdq
jmp
outs
leave
xchg
sub
mov
loope
aaa
or
mov
sub
rcr
sub
fist
jb
sahf
cmp
xchg
xchg
add
clc
das
sar
mov
push
in
lock
out
leave
je
pop
lock
mov
out
jae
imul
enter
sbb
inc
inc
les
lods
and
sbb
fld
xchg
cmp
mov
inc
sbb
inc
inc
test
das
lds
mul
mov
xchg
sbb
pop
mov
cdq
jb
pop
fstp
icebp
nop
mov
xor
pop
push
sub
cmp
enter
aam
jle
and
push
sbb
and
rcr
push
scas
adc
push
push
pop
cs
jmp
retf
adc
dec
jmp
xor
xchg
xor
mov
mov
mov
call
in
add
(bad)
push
fxch
std
sbb
jmp
lds
out
test
mov
test
adc
or
xor
fist
pop
dec
test
stos
sti
pop
sti
rol
movs
call
bound
jmp
test
push
and
mov
cmp
jns
and
inc
lods
lods
test
addr16
adc
cmps
int
xor
mov
jae
push
jb
push
ret
pushf
lods
ret
and
ja
jmp
push
lahf
shr
out
shl
js
add
or
fld
cmp
fstp
fist
rcl
push
jmp
loope
cld
nop
mov
cdq
push
test
add
push
lock
sbb
or
and
ss
std
jge
add
sub
xor
(bad)
outs
or
ds
pop
stos
jg
movs
shr
cmp
push
xor
inc
and
std
stos
ret
aad
xor
push
iret
mov
retf
(bad)
mov
jno
xlat
sub
jmp
mov
jae
rol
cmp
ret
inc
std
mov
pop
mov
fnsave
jo
jae
fdiv
push
sub
out
mov
and
in
pop
std
cmc
fidiv
int
popa
mov
mov
rol
test
shl
pop
out
inc
out
push
imul
add
or
pop
push
popf
xchg
dec
push
sub
paddb
jae
into
scas
adc
jle
jb
push
lea
add
pushf
cmp
adc
xchg
imul
push
push
lea
icebp
push
lods
jmp
movs
and
(bad)
rcr
ins
mov
xor
sbb
clc
cdq
push
movs
or
jns
and
dec
xchg
inc
rcl
push
pop
pop
daa
das
lahf
sar
mov
lock
mov
(bad)
clc
out
in
push
mov
addr16
jecxz
adc
in
mov
addr16
out
icebp
popf
mov
jle
bound
and
mov
sbb
ret
xchg
xor
(bad)
cli
fbstp
fisttp
xchg
icebp
test
addr16
mov
cmps
xor
test
cdq
pop
(bad)
lock
sti
push
cmp
add
ret
sub
movs
or
xchg
jno
mov
enter
xchg
fs
aas
rol
mov
push
push
or
pop
cwde
cmps
add
int
add
pop
jnp
mul
fdivp
push
mov
inc
pop
xchg
movs
pusha
sub
gs
nop
cwde
lahf
xchg
clc
add
pop
test
mov
mov
dec
push
(bad)
jmp
push
or
pop
lock
add
test
or
mov
rcr
sbb
jne
iret
dec
sbb
cmp
lds
mov
ja
mov
movs
sar
call
push
fwait
mov
or
xchg
lea
pop
lods
inc
dec
add
add
aam
adc
xor
add
nop
mov
int
mov
ja
mov
mov
mov
mov
sub
fisub
das
scas
mov
fbld
inc
jge
jnp
adc
mov
inc
or
adc
and
lods
adc
rcr
dec
or
pop
inc
pop
daa
push
add
out
sub
add
dec
rcl
adc
shl
or
call
mov
ss
cwde
sub
dec
neg
xchg
aam
call
cmp
adc
mov
jne
adc
pmulhw
cli
mov
inc
cmc
dec
nop
test
dec
inc
fwait
push
std
sub
jmp
arpl
mov
jmp
(bad)
cs
xor
jns
cli
addr16
sub
fwait
in
cdq
push
jae
shr
fnstenv
loopne
out
pop
scas
xchg
test
sahf
jle
sbb
loopne
mov
loopne
nop
scas
dec
pop
pop
sti
mov
jp
imul
ss
ds
dec
cmp
arpl
jns
cmp
xchg
add
adc
hlt
cmps
cli
sub
mov
fs
imul
and
jmp
and
jb
jno
and
xor
inc
xchg
mov
ins
std
mov
sub
fucom
clc
test
out
and
imul
mov
scas
or
xchg
cmp
iret
xchg
adc
push
and
iret
bound
cmps
fisttp
cmps
(bad)
call
pop
mov
call
jne
ret
fisttp
rcr
xchg
(bad)
lock
jne
jmp
icebp
icebp
mov
into
pop
retf
pushf
mov
cmp
pop
xchg
lods
and
stos
dec
or
test
xchg
shl
mov
ds
mov
jmp
mov
add
cmp
popa
xor
and
push
mov
push
sub
xchg
xchg
rol
cmp
inc
push
aaa
lods
mov
inc
jns
pop
inc
push
push
dec
hlt
push
sbb
xor
cmps
(bad)
sbb
and
cdq
dec
sub
pop
aad
sar
(bad)
aaa
cs
retf
mov
sub
imul
jae
dec
mov
call
jmp
das
jg
hlt
clc
sahf
iret
and
das
adc
imul
adc
mov
fld
scas
into
lahf
scas
outs
mov
xchg
jns
xchg
aaa
mov
xchg
sub
rcl
mov
mov
mov
pop
mov
call
loope
push
mov
fcomp
mov
xor
aam
xchg
push
pop
jge
hlt
cmp
mov
add
pop
push
and
mov
aam
xchg
jno
lock
jp
mov
push
xor
ror
(bad)
pop
inc
inc
cli
aaa
jg
(bad)
sbb
dec
iret
jo
sub
es
mov
loop
sahf
call
push
push
stos
xor
ins
in
repnz
in
or
(bad)
sahf
xor
cdq
xchg
xlat
push
sub
rol
add
shl
jl
push
lss
(bad)
mov
stc
movs
xchg
cmps
pop
ins
jno
jecxz
ins
pop
bound
adc
daa
adc
jb
(bad)
xor
mov
xchg
(bad)
retf
aam
das
bound
push
mov
movs
dec
dec
cs
dec
and
test
pop
mov
cld
(bad)
dec
xor
pop
mov
mov
adc
push
mov
repz
jmp
(bad)
aas
push
pop
cld
outs
fisub
mov
sub
stos
ins
cld
repnz
mov
inc
ret
ja
sbb
leave
fabs
js
stos
sti
push
pushf
mov
hlt
out
cmps
inc
test
mov
jmp
mov
jge
das
jb
jb
xchg
push
in
loope
cmp
sar
popf
mov
fild
fisttp
jae
cmp
in
cmps
imul
in
shl
arpl
dec
cmpxchg
call
push
mov
inc
imul
push
loope
mov
dec
pusha
retf
and
ss
adc
and
cmp
mov
inc
mov
addr16
int
mov
jae
push
scas
pop
push
fwait
aam
movs
add
push
inc
jp
xor
leave
inc
call
mov
out
cld
arpl
fwait
sub
inc
sbb
dec
sub
jecxz
inc
and
add
shl
push
cmp
jbe
push
inc
dec
ss
mov
jne
mov
lods
pop
adc
cmp
les
push
pop
sub
shr
xor
add
out
aaa
push
push
jns
mov
jbe
pop
int3
xchg
out
test
sbb
int3
and
push
mov
lods
mov
rcr
add
add
push
and
stos
cld
loop
sbb
repz
push
mov
mov
mov
mov
test
xor
push
test
retf
repz
sub
fst
xor
mov
jae
jo
jecxz
nop
jno
dec
mov
daa
mov
test
pop
jo
repz
add
xchg
sub
in
not
jle
xlat
lds
mov
jmp
push
ficom
adc
pop
jle
jle
inc
ret
popa
or
lods
push
mov
and
retf
iret
xchg
cmp
jae
fbld
jno
push
mov
mov
pop
mov
sub
xor
adc
repz
movs
jl
in
out
js
sbb
addr16
sbb
push
loopne
mov
data16
arpl
pop
dec
sbb
inc
test
jbe
test
bound
hlt
nop
jmp
sub
icebp
sub
cmps
popf
out
daa
outs
repnz
lods
leave
push
mov
stos
retf
test
xor
ss
sub
mov
fs
mov
outs
and
pop
jns
es
inc
dec
test
xchg
jg
sbb
fisttp
and
icebp
push
test
fisub
jmp
in
out
call
pushf
sub
popa
mov
jle
xor
adc
inc
ret
mov
adc
ins
sbb
into
xchg
pop
mov
sbb
mov
or
sbb
xor
xchg
mov
cwde
dec
jb
not
cmp
pop
mov
sub
nop
sbb
push
or
(bad)
call
jno
sbb
nop
xchg
cmp
dec
imul
pop
mov
inc
js
lahf
(bad)
outs
push
cmp
fidiv
mov
loope
and
adc
pop
pushf
test
sub
jl
call
xor
inc
jmp
cmps
rol
sub
loopne
xchg
jge
push
xchg
dec
outs
lods
jmp
jbe
cmps
pop
(bad)
cdq
push
sub
loop
fyl2xp1
loop
int
(bad)
rcl
mov
jbe
enter
adc
fst
mov
fmul
pop
or
inc
push
int3
mov
jb
add
call
mov
add
pop
mov
repnz
call
cmps
mov
mov
cmp
cmp
fsubp
jo
and
ja
pop
jl
lahf
out
fadd
fild
cmp
sahf
jmp
in
pop
pop
into
add
cmp
in
fcmovne
in
jbe
neg
jmp
sbb
cmp
outs
gs
into
jo
jle
movs
cli
not
dec
jecxz
sbb
sub
jge
mov
xor
jae
pop
fisttp
lods
push
push
aaa
icebp
or
imul
lods
inc
rcr
xchg
add
mov
inc
retf
out
and
ins
jl
out
(bad)
arpl
fbld
push
add
pop
adc
xchg
and
or
add
(bad)
sar
test
stc
or
push
outs
fcom
int
dec
jae
sub
add
je
lods
xchg
jb
jmp
into
dec
clc
jecxz
shr
cmps
movs
fstp
movs
dec
rcr
mov
rcr
xlat
xlat
cmps
or
fs
loope
int3
loope
dec
pushf
imul
add
popf
lea
xor
retf
jns
mov
adc
out
les
icebp
lds
jae
ficomp
push
cdq
or
mov
pop
mov
pop
ss
fisub
add
sar
mov
cmc
dec
pop
add
cmp
lock
add
pop
arpl
jbe
fidiv
cmp
cmps
arpl
dec
and
pop
dec
mov
pop
fmulp
pop
inc
sbb
mov
les
mov
in
(bad)
movs
mov
push
xor
gs
aad
sub
fcom
sti
in
cmp
jmp
and
stc
stos
test
pop
enter
das
cmp
ret
aaa
loope
push
lahf
dec
sbb
stos
outs
pop
xchg
pop
(bad)
mov
sbb
sar
jl
(bad)
mov
cs
mov
mov
rcr
push
jmp
mov
push
push
imul
push
leave
test
mul
and
popa
jmp
fs
mov
or
cs
int3
popa
xor
xchg
lds
xchg
mov
push
fwait
lock
daa
stos
dec
je
out
and
out
cmps
call
sbb
mov
leave
mov
rol
mov
cwde
mov
bound
sub
mov
(bad)
jmp
mov
(bad)
add
mov
push
cwde
test
mov
jns
out
xor
ret
pop
mov
(bad)
jnp
call
sub
lahf
jecxz
dec
aas
ja
enter
loop
adc
sbb
sahf
loope
xchg
mov
dec
push
or
add
mov
movs
add
dec
mov
(bad)
jmp
xchg
call
std
rcr
jbe
xchg
(bad)
stc
pop
fisubr
sub
movs
jecxz
sbb
pop
imul
jmp
icebp
sub
or
fsubr
aaa
lahf
data16
cmp
push
cmps
jno
sbb
jg
cld
test
sbb
aas
clc
sbb
call
pop
fidiv
or
mov
adc
mov
ret
dec
cmp
cld
in
out
jb
xchg
retf
inc
mov
push
repz
push
xchg
jbe
out
es
sbb
bound
pop
mov
jmp
test
mov
sbb
jecxz
dec
ss
shl
fwait
call
rol
mov
fadd
aaa
push
xchg
jp
(bad)
repnz
jbe
push
mov
xchg
xor
test
loope
mov
jle
test
repnz
int
scas
in
jo
pushf
ins
push
hlt
add
cmp
pop
dec
jne
push
jmp
dec
(bad)
xor
adc
xchg
xlat
xor
idiv
push
pop
mov
sbb
call
jge
pusha
xor
test
in
pop
sbb
lock
ss
ficomp
enter
int3
test
hlt
mov
clc
imul
pop
push
pop
jg
push
and
adc
fstp
mov
rol
imul
data16
inc
jo
add
inc
in
add
scas
scas
sub
cmp
fisttp
ret
mov
sub
aad
xor
or
sbb
jp
xor
cmp
inc
adc
pop
mov
mov
fwait
imul
outs
mov
cmp
aaa
cli
inc
lea
arpl
and
push
sar
mov
and
ja
aaa
je
push
push
mov
iret
xor
daa
mov
mov
aaa
test
stos
scas
rcr
push
sub
jle
fld
or
push
dec
dec
mov
aad
xor
sbb
dec
lahf
xor
aas
mov
adc
and
test
cmc
int
mov
pop
dec
sbb
bound
jne
(bad)
cmp
ins
rcl
xor
fnstsw
pop
jp
cs
jge
ss
inc
(bad)
lods
fwait
(bad)
ror
sbb
inc
ds
mov
mov
xchg
ror
mov
addr16
jle
push
xor
dec
mov
call
retf
lahf
pusha
inc
sti
das
imul
dec
or
ins
adc
cld
pop
cmp
jecxz
hlt
repnz
pop
sbb
add
mov
ins
test
repnz
scas
test
dec
pusha
ds
xchg
std
add
pop
div
cwde
in
mov
dec
rcr
sbb
push
shr
outs
xor
daa
stc
push
js
popa
pusha
dec
jb
jbe
gs
pushf
sbb
cmp
pop
push
xor
stc
mov
fist
xor
dec
sub
sub
or
xchg
les
jg
lods
xchg
sub
shl
loope
xchg
push
fstp
push
retf
das
or
cwde
cmp
pop
sar
fcmovb
int
fild
gs
sub
pop
pop
or
and
jge
stos
pop
xlat
jmp
mov
aaa
jo
mov
test
(bad)
or
popa
push
xor
lahf
lds
lds
mov
popf
div
add
cmps
pop
mov
mov
idiv
mov
push
fist
pushf
add
jbe
(bad)
sbb
aad
add
or
mov
out
mov
lahf
retf
nop
cmp
or
adc
xchg
mov
push
mov
stc
mov
mov
inc
or
into
int3
fs
out
movaps
xlat
jle
mov
pop
xchg
clc
pop
adc
mov
jl
mov
jmp
pop
js
fadd
adc
mov
sbb
pop
xor
dec
ret
std
and
sbb
cmp
in
mov
cmp
cmp
mov
retf
inc
inc
mov
loope
bnd
hlt
out
push
cmp
sbb
leave
outs
or
nop
add
repnz
scas
mov
add
das
add
fadd
inc
mov
shl
mov
xor
pop
cld
push
jmp
je
out
call
ret
sub
(bad)
in
add
addr16
sbb
shr
push
lods
test
shl
push
cli
mov
jmp
jnp
pop
loope
fdiv
mov
into
add
inc
out
rcl
daa
push
xor
(bad)
cs
or
sar
dec
jp
adc
mov
jp
fstp
inc
push
mov
adc
cmp
enter
loope
inc
cmp
(bad)
ins
icebp
mov
jb
xchg
add
call
sbb
jle
movs
lea
outs
mov
cmps
and
ds
int
scas
xor
cmps
mov
push
fcos
xchg
xor
sbb
test
pop
xchg
loopne
in
mov
push
mov
pop
mov
dec
jmp
(bad)
fsubrp
push
out
fcom
cld
addr16
push
add
xchg
lods
movs
leave
xor
(bad)
or
mov
aad
push
test
or
sub
dec
scas
jns
fld
jb
xor
data16
xchg
stos
je
and
mov
shl
jbe
loop
out
push
pop
pusha
(bad)
push
addr16
mul
nop
and
je
sbb
cs
jg
repnz
sar
pop
jmp
xchg
div
out
mov
xchg
push
and
ds
push
or
sub
jge
dec
pop
jo
adc
and
loop
pop
sub
lock
adc
mov
outs
xchg
pop
pop
push
fstp
cmps
mov
out
mul
push
xchg
add
stos
push
jnp
inc
stos
test
mov
xchg
push
jno
xor
mov
push
or
xor
scas
ins
mov
cmc
mov
out
ja
mov
inc
pusha
arpl
enter
popa
mov
pop
mov
sahf
push
ss
jb
and
neg
adc
adc
inc
faddp
lods
add
iret
popf
(bad)
js
or
inc
sub
fimul
pushf
inc
sahf
and
js
pop
push
adc
into
pop
pop
fild
mov
xchg
mov
retf
cmp
test
cs
es
fwait
(bad)
and
or
pop
jb
sub
test
mov
mov
xchg
std
rcr
and
add
nop
js
add
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
mov
jmp
lea
imul
add
mov
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
mov
jmp
lea
imul
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
jmp
lea
mov
add
mov
call
mov
mov
mov
mov
add
mov
mov
mov
shl
mov
add
shl
add
mov
mov
mov
shl
mov
mov
shl
sub
add
add
mov
add
shl
add
mov
cmp
cmove
mov
jmp
mov
lea
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
sub
mov
sub
add
mov
sub
sub
add
mov
mov
mov
mov
add
add
sub
mov
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
movzx
mov
mov
sub
add
add
mov
mov
movzx
mov
xor
mov
and
xor
and
or
mov
mov
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
pop
ret
nop
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
inc
or
dec
adc
outs
mov
arpl
add
repnz
xchg
pop
adc
pushf
(bad)
push
and
add
movs
or
sbb
inc
mov
dec
add
pop
add
test
add
test
add
xchg
mov
mov
and
enter
add
cmps
add
add
dec
rol
test
push
dec
add
add
mov
mov
(bad)
sbb
add
aam
movs
add
dec
and
xchg
add
fiadd
mov
and
add
add
add
(bad)
in
and
cmps
rol
mov
sbb
ret
mov
mov
dec
repz
out
add
pop
dec
in
and
retf
jg
mov
and
jg
test
add
(bad)
das
dec
and
sub
mov
in
bswap
adc
add
repnz
test
sbb
stos
mov
aad
xchg
jmp
push
inc
imul
and
imul
mov
inc
cmp
(bad)
(bad)
mov
mov
mov
cmps
rol
add
sbb
cmc
mov
cmps
test
push
sahf
add
pop
inc
loop
and
aam
leave
push
jp
pop
cmovle
ret
test
add
js
adc
push
retf
test
(bad)
movs
jmp
mov
stos
xchg
sub
imul
pop
jmp
ins
mov
js
retf
leave
repnz
and
dec
test
mov
inc
cli
js
shr
jmp
sbb
repnz
xchg
inc
and
sub
mov
(bad)
pop
lds
movs
in
add
sbb
and
sub
dec
inc
sub
pop
test
jmp
mov
push
popa
outs
ret
js
and
dec
mov
add
outs
push
add
faddp
test
xor
dec
in
and
call
add
dec
inc
cmp
xlat
mov
mov
or
retf
adc
add
jmp
aad
and
sub
push
inc
pop
nop
dec
adc
add
(bad)
jmp
mov
sub
mov
inc
inc
jge
dec
add
mov
retf
add
mov
je
sbb
aam
movs
add
dec
sahf
inc
sbb
jp
cli
je
jmp
aad
and
sub
mov
test
adc
or
add
mov
aas
pop
mov
call
test
ins
mov
js
test
adc
movs
or
xchg
ret
sbb
jle
shr
inc
sub
fimul
ret
push
xchg
xchg
jnp
inc
and
mov
cmp
xchg
bts
add
add
add
mov
sub
mov
ret
dec
add
mov
add
push
mov
mov
jmp
aad
and
sub
mov
mov
inc
pushf
add
jmp
mov
mov
push
xchg
imul
dec
add
add
and
sbb
jns
inc
and
loop
ud1
out
in
xchg
sbb
xchg
and
add
push
rcl
jmp
pop
ret
add
and
jmp
mov
add
sbb
sahf
icebp
push
addr16
es
ror
nop
ret
add
mov
icebp
push
mov
inc
add
mov
dec
and
jnp
dec
into
dec
ror
add
test
push
xor
mov
lock
jmp
mov
sbb
add
inc
ror
and
jmp
(bad)
dec
outs
jl
(bad)
push
inc
sub
test
nop
repnz
or
and
add
mov
push
and
(bad)
movs
add
inc
and
retf
leave
jmp
mov
fimul
rol
inc
and
add
mov
jp
add
push
test
mov
sbb
mov
jg
mov
test
and
add
ret
mov
add
cwde
mov
sbb
mov
repz
add
add
mov
dec
xchg
and
test
add
jae
jp
jnp
dec
faddp
mov
das
sti
movs
or
mov
mov
or
mov
(bad)
add
add
dec
test
add
add
add
push
add
dec
neg
and
dec
outs
cwde
adc
test
dec
sbb
xchg
dec
shl
add
inc
retf
ret
jl
push
add
nop
add
inc
pop
mov
add
or
xchg
and
add
add
xchg
sbb
dec
add
add
dec
mov
add
add
xchg
outs
adc
mov
mov
pop
movs
add
dec
ds
ds
bound
dec
add
add
and
mov
jmp
(bad)
nop
and
pop
bnd
add
retf
and
add
dec
pop
ret
add
outs
mov
mov
scas
add
mov
lea
pusha
pop
test
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
movzx
cmp
cmovbe
mov
jmp
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
mov
movzx
mov
movzx
mov
add
mov
mov
jmp
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
xchg
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jecxz
jns
fbld
inc
add
mov
mov
dec
add
add
outs
ds
add
ror
add
add
sahf
add
mov
mov
add
pop
imul
push
pushf
add
ins
test
add
sbb
or
test
add
adc
xor
sub
(bad)
or
paddsb
sbb
add
mov
outs
push
xor
inc
add
outs
ds
add
pushf
add
fs
jne
add
xor
add
mov
or
and
into
out
mov
sbb
call
fld
add
sahf
add
stos
and
outs
push
loope
mov
mov
(bad)
jmp
loope
push
in
dec
and
dec
and
jmp
mov
sub
push
and
movlps
sahf
jnp
clc
add
add
into
loope
cmps
mov
jg
jmp
mov
sub
mov
pminub
add
sbb
into
add
add
cli
out
pushf
cmp
jge
mov
pop
add
fsubr
add
inc
mov
shl
mov
mov
add
out
add
xchg
add
and
sub
mov
xor
add
int3
out
pushf
js
pop
std
xor
push
and
or
fistp
add
adc
and
sub
mov
fld
inc
stos
jmp
mov
jae
and
test
mov
jnp
add
hlt
add
lahf
mov
jle
inc
ret
jge
cmps
mov
je
push
and
add
inc
ds
rcl
pushw
inc
and
movups
add
xor
fs
js
out
pop
repnz
test
add
mov
xor
inc
mov
inc
jg
jmp
mov
aad
outs
stos
mov
adc
add
add
pop
add
dec
mov
and
xchg
sbb
cmp
test
push
int3
jmp
mov
call
pop
je
scas
add
and
into
xchg
sbb
mov
cwde
pop
popf
add
sahf
jmp
mov
sub
mov
psubq
add
fsub
push
js
pop
std
shl
adc
ret
dec
add
add
dec
stos
mov
bound
inc
sar
mov
add
push
les
lahf
add
mov
inc
and
xchg
test
add
add
mov
into
xchg
cli
xor
add
jmp
mov
add
and
push
mov
loopne
jo
repnz
push
xor
jge
and
jmp
shl
jno
mov
stos
mov
mov
mov
cwde
cld
(bad)
mov
mov
push
sbb
xor
add
add
add
hlt
add
fidiv
jmp
mov
mov
and
out
push
push
mov
dec
test
enter
ficomp
add
add
jmp
loope
mov
ret
sub
add
xlat
out
call
test
sahf
add
int3
(bad)
sar
loop
xor
add
add
hlt
(bad)
adc
add
adc
add
sbb
add
fiadd
popf
add
lahf
add
inc
and
pop
cmps
loope
jmp
leave
cmps
inc
bnd
in
xchg
and
add
push
dec
lods
add
fiadd
xchg
ds
inc
shl
xchg
lahf
xor
add
(bad)
xor
(bad)
jmp
and
add
int3
sbb
pop
ins
add
or
and
inc
and
jmp
xor
test
add
push
add
add
mov
mov
out
add
xor
hlt
add
add
mov
mov
add
jnp
sbb
inc
add
fwait
sub
and
mov
pushf
push
int3
add
repnz
call
push
aad
icebp
stos
mov
mov
dec
int3
test
test
sbb
add
mov
xchg
and
xchg
cmp
hlt
lahf
repnz
shl
add
push
les
or
and
and
mov
mov
aaa
jns
xor
push
dec
(bad)
dec
xor
jecxz
xor
into
pusha
xor
retf
mov
mov
xchg
mov
int3
add
push
cmp
inc
add
or
jmp
jo
repz
test
nop
jp
jmp
adc
mov
shl
sbb
mov
ficom
outs
adc
mov
or
xor
xor
mov
mov
pop
add
push
mov
xor
sahf
add
mov
out
add
add
mov
test
std
dec
mov
arpl
xchg
add
add
mov
ficom
mov
sub
cmc
retf
neg
and
xor
push
and
or
hlt
mov
jmp
xchg
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
inc
aam
cmp
mov
lock
add
test
enter
mov
and
add
adc
sub
out
add
mov
add
ret
mov
sub
(bad)
vpcmpeqw
and
sub
lods
add
add
(bad)
dec
pop
adc
jmp
mov
mov
add
fisttp
add
jns
(bad)
and
or
and
movs
mov
dec
sub
retf
add
(bad)
jnp
jl
add
jbe
test
int3
mov
jo
sti
mov
and
adc
sub
add
mov
xor
pop
cdq
std
mov
psubw
add
jl
add
sub
xchg
(bad)
fwait
hlt
mov
jg
sahf
sub
retf
test
cmps
add
sub
cmp
and
xchg
add
jns
test
daa
add
shr
add
add
mov
lea
(bad)
jo
add
jmp
or
cmc
fsub
mov
cmc
daa
pusha
mov
or
sub
movs
jmp
mov
in
adc
add
mov
cmps
cld
pmuludq
mov
add
add
mov
add
test
mov
(bad)
int3
mov
pop
std
ja
add
mov
pop
add
add
push
repnz
cvttps2pi
or
add
sub
test
popf
or
push
jl
movs
push
retf
dec
cld
jnp
add
test
add
sub
sub
je
jmp
mov
sub
sub
mov
loope
push
stc
jnp
jmp
push
test
fadd
jbe
lea
cmp
dec
mov
add
add
xchg
add
mov
mov
out
mov
inc
xchg
xor
nop
(bad)
add
jmp
mov
sub
sbb
and
push
mov
in
add
sub
test
cmp
cs
ret
mov
sbb
cld
add
push
pop
and
add
add
mov
jae
and
inc
or
sub
cmp
sub
(bad)
outs
and
cmovle
pop
jmp
mov
cmc
mov
cmp
cmc
inc
and
(bad)
cdq
add
fld
add
movs
add
cmp
js
hlt
jmp
add
cmps
cld
jnp
xor
stos
cld
call
mov
jmp
mov
push
mov
mov
lea
je
jmp
ja
pop
mov
add
cwde
add
add
inc
sub
imul
add
push
mov
movs
xchg
adc
dec
sub
test
add
adc
sbb
test
add
hlt
fisttp
test
mov
pop
and
sub
sub
xor
fsub
ja
retf
add
add
mov
pop
cdq
std
ret
fst
and
add
add
add
lods
add
push
test
mov
sub
dec
in
or
adc
ja
inc
into
add
sub
sub
shr
mov
iret
mov
fnstcw
sub
mov
mov
jmp
inc
mov
(bad)
cld
fwait
add
mov
and
xchg
mov
add
push
add
out
dec
test
cmps
cld
jnp
add
add
add
mov
addr16
bswap
shr
and
fld
ds
scas
and
add
add
adc
add
add
cli
stos
out
aam
xchg
and
add
mov
cli
xchg
fadd
add
ror
add
pop
add
add
mov
mov
and
add
add
cmovne
mov
and
in
add
jl
inc
cmp
rol
add
cmp
cmove
mov
dec
xchg
add
or
and
mov
xchg
and
pop
add
ror
out
(bad)
cmps
cmove
jne
xchg
mov
add
add
data16
add
sub
mov
cwde
add
cld
pushf
and
add
out
add
add
sbb
repz
jmp
imul
xor
mov
and
xor
push
sbb
popf
dec
push
ss
mov
or
retf
jl
aad
sub
in
jae
pop
sbb
movs
mov
retf
popf
icebp
pop
stc
sub
sub
pop
stos
pop
add
add
cmp
mov
and
mov
xchg
add
inc
imul
xor
shr
js
mov
punpckldq
pop
mov
neg
jmp
fisubr
or
push
push
sbb
or
mov
push
push
sbb
add
and
cmps
cld
add
mov
push
sub
scas
add
add
(bad)
repnz
mov
inc
inc
add
jmp
push
add
(bad)
movs
(bad)
lock
and
add
addr16
dec
pop
mov
xor
data16
ret
aaa
dec
and
(bad)
xor
cmp
es
dec
retf
or
dec
and
data16
leave
mov
(bad)
call
and
jae
retf
dec
mov
jnp
add
inc
jmp
xor
and
mov
sub
cmps
stc
cmp
jbe
daa
mov
sub
sub
add
add
imul
(bad)
call
mov
xor
mov
repz
hlt
or
sbb
(bad)
fcomp
and
repz
aad
mov
mov
add
and
call
or
add
mov
add
add
adc
and
fnstcw
sub
cmp
pushf
and
add
add
icebp
gs
stos
shl
sbb
xor
mov
data16
fldcw
je
adc
iret
je
sbb
sub
fnstenv
popf
icebp
stos
mov
cmp
stos
cmp
mov
push
icebp
pop
inc
cld
lock
sar
xchg
lock
std
retf
ror
push
jmp
and
and
mov
(bad)
(bad)
mov
pop
and
pop
cmps
ja
and
jnp
add
and
add
fadd
js
mov
shl
add
mov
and
mov
mov
xor
ret
popf
repnz
mov
and
pusha
inc
fdiv
add
adc
jmp
mov
daa
add
por
inc
pusha
add
cmps
sub
mov
mov
gs
inc
dec
jmp
(bad)
scas
out
pop
add
jmp
jns
add
fadd
jbe
add
add
scas
test
add
add
test
add
cdq
out
inc
or
es
cdq
int
sti
mov
add
test
sub
out
lea
and
add
add
mov
mov
jbe
add
(bad)
sub
sub
cwde
int3
add
mov
nop
and
ja
add
xchg
cmps
cld
not
popa
pop
xchg
idiv
dec
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
dec
adc
in
add
fsub
lds
add
mov
fstp
popa
mov
in
add
add
push
scas
add
or
sbb
in
sbb
add
jecxz
js
jnp
int3
add
sub
cvttps2pi
mov
add
mov
int3
int3
add
sub
mov
jecxz
and
add
pop
mov
sub
lods
test
add
addr16
aam
add
mov
sub
mov
in
or
sub
add
cmp
push
ret
jnp
ins
and
ins
xchg
sub
mov
and
cwde
ss
mov
adc
ins
dec
add
scas
stos
dec
add
add
mov
sub
sub
rdtsc
adc
test
fild
jle
or
test
cmp
je
jae
test
push
dec
add
jo
add
push
jmp
jg
and
add
stc
dec
sbb
popa
(bad)
test
add
mov
add
jmp
mov
sub
mov
jnp
(bad)
and
add
call
mov
add
add
scas
add
test
pop
xor
clc
xor
pop
test
int3
sbb
add
fild
jg
dec
add
and
add
adc
dec
and
add
add
xchg
inc
add
movs
pop
test
cmp
jl
aam
test
add
jg
sbb
mov
lea
test
test
xor
test
in
add
ins
or
add
test
add
imul
dec
add
(bad)
and
add
jmp
mov
aam
mov
cmc
(bad)
add
xor
cmp
add
test
enter
cmc
test
mov
add
pop
test
test
add
je
and
add
inc
add
test
add
or
mov
(bad)
iret
add
or
push
sbb
add
add
mov
sbb
mov
sub
mov
xor
jmp
cmp
lfs
mov
mov
add
jae
xor
inc
and
paddusw
inc
mov
mov
lea
fidiv
mov
cmovs
add
xor
test
add
cmp
or
(bad)
and
push
dec
jmp
mov
sub
mov
mul
sub
add
add
add
aad
aas
mov
mov
enter
sub
add
add
add
push
out
xor
fadd
pop
push
mov
jle
add
add
out
jbe
pop
packsswb
movs
sar
jnp
test
call
cmps
sbb
sub
outs
and
add
add
test
and
add
sub
sub
and
fisttp
(bad)
jnp
add
test
int3
push
mov
les
sub
mov
mov
add
mov
add
aad
neg
dec
and
stos
(bad)
and
add
cmp
add
int3
add
add
and
dec
je
jmp
mov
push
jb
jl
mov
and
mov
jle
add
movs
add
ror
add
sub
sar
test
adc
mov
add
sub
inc
inc
mov
in
add
jecxz
add
shl
add
push
jae
and
je
dec
push
add
add
mov
(bad)
sub
je
xor
or
add
jle
or
xor
xlat
inc
sbb
in
les
daa
leave
bound
add
fadd
add
mov
xchg
xor
mov
push
or
and
movzx
jle
in
jmp
mov
ss
data16
sub
inc
and
pop
test
std
add
jmp
sub
sub
mov
and
je
ins
xchg
clc
xor
push
rcl
mov
inc
and
inc
test
ins
add
int3
add
dec
fs
inc
and
push
test
test
test
add
or
mov
je
xchg
fs
inc
fiadd
sub
sub
scas
add
mov
add
add
test
jecxz
dec
test
add
aam
sbb
add
xchg
js
dec
mov
sbb
ins
and
mov
and
mov
or
xor
add
sbb
scas
test
adc
mov
je
jne
and
push
add
div
xlat
lahf
cmp
add
add
dec
mov
pop
jnp
mov
scas
test
add
mov
push
sahf
add
pop
push
xor
or
mov
icebp
mov
add
mov
add
dec
mov
fstp
and
and
add
cld
mov
jmp
mov
adc
cmp
std
mov
mov
in
add
movs
fbstp
sahf
test
push
add
mov
popf
(bad)
ins
xchg
inc
mov
in
pop
add
or
ret
dec
inc
mov
in
add
dec
pop
aas
sbb
mov
mov
mov
and
push
mov
and
ror
add
bound
add
add
fidivr
mov
xor
sbb
ror
add
cmp
push
add
inc
mov
pop
ss
and
add
add
add
dec
ror
test
and
jle
mov
test
xchg
pop
in
push
dec
inc
add
dec
ror
add
xchg
add
sar
mov
mov
in
add
xor
adc
shl
and
dec
call
out
cmc
add
fcom
sub
in
add
test
jle
or
test
add
jnp
test
(bad)
aad
fadd
add
xor
in
shl
(bad)
pop
push
inc
add
test
mov
cmps
in
add
cmps
rol
cmp
pop
jnp
loopne
(bad)
imul
test
cmp
test
add
test
push
add
xor
sar
mov
int3
int3
add
jo
add
push
push
cmps
jmp
sub
add
in
add
add
inc
(bad)
repnz
add
test
add
dec
mov
aad
shl
jne
jmp
mov
test
add
add
and
jle
add
or
out
dec
jae
mov
add
dec
movs
mov
call
sbb
sbb
jns
(bad)
ror
cmovne
mov
jmp
pop
mov
add
test
aas
mov
add
test
or
and
add
or
inc
mov
add
add
test
jnp
add
inc
jmp
jg
and
mov
cmp
mov
add
mov
adc
mov
or
sbb
sbb
add
retf
mov
loop
and
mov
popa
mov
add
add
mov
add
jle
add
push
pop
cmp
idiv
jmp
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
or
dec
or
test
add
jae
mov
add
add
add
test
mov
dec
mov
mov
cmp
add
and
add
mov
and
test
add
add
add
pop
add
(bad)
mov
mov
ins
mov
inc
add
mov
sti
or
add
pop
inc
push
inc
pop
out
add
add
add
call
out
in
mov
dec
and
mov
mov
or
and
(bad)
dec
add
mov
test
add
add
or
xor
inc
mov
test
mov
and
jb
loop
inc
and
pushf
add
add
pop
pop
gs
add
jmp
sbb
stos
in
add
jb
push
add
add
dec
mov
cmp
jmp
and
mov
arpl
add
add
mov
add
add
mov
ins
(bad)
sub
int
push
xchg
mov
ds
loop
add
add
mov
mov
out
xchg
int
jne
pop
add
gs
add
into
lock
add
stos
in
in
loop
jmp
aam
and
add
ds
mov
and
add
add
add
jae
add
aaa
ss
add
jo
imul
loopne
cwde
sar
add
add
add
add
mov
add
pop
add
mov
jb
test
pushf
add
push
adc
pop
out
ds
jmp
es
sub
mov
add
fimul
(bad)
and
jb
jmp
das
dec
and
pop
pop
out
adc
in
mov
and
sub
add
leave
sahf
add
sub
mov
jg
jne
pop
add
pushf
test
pushf
add
mov
fimul
call
and
lahf
add
mov
sub
mov
inc
pusha
jge
ret
pushf
mov
pop
out
add
add
(bad)
fnstsw
dec
inc
sbb
add
add
mov
and
movs
pusha
add
mov
cmovb
pushf
pop
pop
jmp
mov
and
add
(bad)
mov
push
xchg
or
mov
test
cmp
add
mov
(bad)
loopne
sahf
inc
and
jg
add
add
pushf
add
mov
sub
cmp
mov
jmp
jmp
push
je
loop
mov
(bad)
js
mov
loope
and
add
jmp
cmp
and
add
ins
mov
loopne
add
maskmovq
imul
movs
add
xchg
jb
add
int
sub
addr16
sbb
(bad)
and
mov
jmp
mov
lahf
adc
inc
pop
sti
lods
and
je
and
add
add
add
mov
ins
sbb
out
icebp
je
call
and
loop
add
mov
mov
add
jmp
cmp
dec
aas
add
add
outs
push
icebp
(bad)
mov
and
je
dec
or
add
arpl
pushf
add
push
(bad)
push
and
je
iret
cmp
test
add
add
movs
(bad)
adc
and
je
mov
add
pushf
add
cmps
cwde
jne
inc
retf
mov
jmp
mov
and
leave
sahf
add
cli
inc
and
(bad)
pushf
arpl
add
jmp
pop
adc
ins
cmp
idiv
jg
enter
sbb
shl
add
rol
movs
int
test
add
out
or
call
leave
add
and
add
xor
jp
add
mov
sbb
mov
pusha
add
aam
add
movs
push
or
test
add
mov
jb
test
add
movs
inc
inc
add
pop
add
mov
mov
xchg
and
add
ins
mov
in
sub
mov
in
mov
movs
mov
mov
jmp
and
jmp
mov
ror
mov
add
mov
xor
add
adc
xor
je
jmp
sahf
add
adc
add
sub
sub
and
add
add
data16
movs
int
test
imul
add
push
and
add
mov
in
(bad)
enter
mov
cwde
rol
movs
jmp
or
fdivr
and
add
mov
iret
scas
into
xor
jo
pop
and
pop
lock
lahf
mov
and
add
movs
ret
fsubp
out
ds
scas
xchg
xchg
repz
jae
mov
mov
add
add
push
add
add
add
add
outs
inc
add
mov
add
leave
mov
add
jle
(bad)
inc
test
icebp
jo
lods
add
mov
cmp
push
btc
(bad)
dec
add
movzx
repnz
sahf
mov
dec
xor
xchg
mul
add
add
inc
ror
int
icebp
add
add
or
mov
mov
xchg
lods
add
out
xchg
fild
add
fwait
ror
jecxz
mov
pop
(bad)
lods
add
add
and
add
add
idiv
mov
and
leave
add
mov
and
jae
mov
dec
push
add
inc
and
call
mov
jmp
mov
mov
add
xor
add
dec
test
hlt
and
call
and
cmp
(bad)
call
mov
sub
add
lods
dec
retf
and
sahf
mov
mov
add
add
jmp
pop
test
out
add
mov
(bad)
mov
add
mov
jae
mov
push
push
icebp
arpl
movs
cmp
mov
and
add
add
add
add
add
and
add
add
mov
movs
add
call
sbb
push
mov
stc
ja
ds
and
jmp
pop
or
mov
pusha
jb
mov
jmp
pushf
test
add
add
mov
ret
iret
push
pop
(bad)
dec
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
shl
add
add
sub
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
mov
add
sub
sub
mov
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
lea
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
add
mov
mov
mov
add
sub
sub
mov
mov
mov
add
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
add
add
sub
mov
mov
mov
add
sub
sub
mov
mov
mov
cmp
cmova
mov
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
mov
mov
jne
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
setl
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
movzx
cmp
jl
mov
mov
jmp
mov
mov
mov
mov
movzx
cmp
jl
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
movzx
mov
sub
add
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
movzx
cmp
jl
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
mov
mov
movzx
add
sub
sub
mov
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
cmp
jge
mov
mov
mov
mov
mov
sub
sub
mov
mov
movzx
mov
shl
mov
mov
mov
shl
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
add
add
sub
mov
mov
movzx
sub
add
mov
mov
mov
jmp
jmp
mov
movzx
mov
mov
mov
mov
mov
mov
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
imul
and
cmp
sete
mov
cmp
setl
mov
and
xor
or
test
mov
mov
mov
mov
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
sub
sub
add
mov
mov
mov
mov
mov
mov
shl
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
imul
and
cmp
sete
mov
cmp
setl
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
mov
mov
and
mov
and
mov
mov
and
mov
mov
mov
or
mov
or
xor
mov
or
xor
mov
or
and
or
test
mov
mov
mov
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
sete
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
cmp
seta
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
shl
mov
sub
add
add
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
sub
add
add
mov
mov
cmp
jne
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
sete
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
jmp
mov
mov
mov
mov
add
add
sub
sub
mov
mov
mov
mov
mov
add
sub
sub
cmp
jge
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
add
mov
mov
mov
mov
cmp
mov
jbe
mov
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
sub
sub
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
cmp
jne
jmp
jmp
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
add
add
sub
mov
mov
xor
xor
xor
or
or
xor
and
mov
mov
mov
mov
mov
mov
shl
shl
add
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
mov
sub
sub
mov
mov
mov
add
mov
mov
mov
mov
sub
add
add
mov
mov
xor
xor
xor
or
or
xor
and
mov
mov
shl
mov
movzx
mov
mov
sub
add
mov
mov
mov
sar
sub
add
add
imul
shl
add
mov
mov
mov
cmp
jl
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
cmp
setae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
shl
mov
mov
xor
mov
xor
and
mov
mov
mov
mov
add
mov
shl
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
shl
mov
mov
cmp
je
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
add
add
sub
mov
sub
mov
sub
add
sub
mov
mov
mov
cmp
sete
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
jmp
jmp
mov
cmp
jl
jmp
jmp
mov
cmp
jge
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
mov
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
mov
or
xor
or
and
or
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
sub
add
add
add
add
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
add
add
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
cmp
jne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
cmp
jge
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
sub
add
mov
jmp
mov
mov
mov
sub
add
mov
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
shl
add
mov
mov
cmp
jae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
cmp
sete
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
cmp
jae
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
sub
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
shl
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
add
add
sub
sub
add
add
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
add
add
sub
mov
cmp
setne
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
cmp
jge
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
add
mov
cmp
mov
jge
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
mov
shl
shl
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
mov
mov
mov
mov
sub
sub
sub
sub
mov
mov
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
add
add
sub
mov
cmp
setne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
add
sub
sub
mov
cmp
jl
mov
mov
mov
sar
sub
sub
add
mov
mov
mov
xor
mov
xor
and
mov
and
xor
or
mov
mov
cmp
jge
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
add
mov
shl
add
mov
mov
mov
add
sub
sub
shl
add
add
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
sub
sub
add
mov
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
shr
mov
mov
mov
shl
mov
mov
mov
cmp
setae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
and
xor
or
mov
jmp
mov
mov
sub
add
add
mov
cmp
jne
mov
mov
add
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
sub
sub
mov
mov
mov
mov
mov
mov
mov
and
xor
or
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
shl
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
add
add
sub
mov
cmp
setne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
add
add
mov
cmp
sete
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
mov
cmp
seta
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
cmp
sete
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
cmp
mov
je
mov
mov
mov
cmp
setb
mov
mov
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
mov
add
sub
sub
add
mov
mov
sub
sub
add
mov
cmp
jge
mov
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
sub
sub
add
mov
mov
mov
mov
mov
shl
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
shl
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
jmp
jmp
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
mov
jmp
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
jmp
mov
mov
mov
shl
mov
mov
xor
mov
xor
and
mov
mov
mov
mov
add
mov
shl
add
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
add
add
sub
sub
sub
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
add
add
sub
sub
sub
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
jmp
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
sub
sub
add
add
sub
mov
jmp
mov
mov
mov
sub
sub
mov
jmp
jmp
mov
shl
shl
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
mov
mov
shl
mov
mov
mov
add
mov
shl
add
mov
mov
sub
add
shl
add
add
mov
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
shr
mov
mov
mov
shl
mov
jmp
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
jmp
mov
mov
mov
sub
sub
mov
jmp
jmp
mov
mov
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
mov
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
jmp
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
jmp
jmp
mov
mov
jmp
jmp
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
cmp
jne
mov
test
jne
call
mov
call
mov
pop
ret
mov
test
je
push
push
push
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
movzx
movzx
pop
pop
sub
pop
pop
ret
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
call
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
mov
push
cmp
jne
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
jmp
movzx
lea
push
push
call
movzx
movzx
lea
push
push
lea
call
add
movzx
lea
test
je
cmp
je
movzx
movzx
sub
pop
cmp
pop
pop
je
mov
and
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
test
jne
mov
lea
cmp
ja
add
movzx
movzx
jmp
mov
push
cmp
jae
push
call
pop
pop
test
jne
movzx
movzx
jmp
movzx
mov
movzx
movzx
jmp
lea
push
push
lea
push
push
push
call
add
test
jne
movzx
movzx
jmp
movzx
cmp
pop
je
mov
and
leave
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
and
ret
cmp
jne
repz
jmp
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
mov
mov
cmp
jne
xor
leave
ret
mov
cmp
jae
movzx
mov
movzx
jmp
lea
push
push
lea
push
push
call
neg
sbb
and
movzx
movzx
and
leave
ret
push
mov
mov
test
jle
push
push
call
pop
pop
push
push
push
push
push
push
call
add
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pushf
cmps
inc
add
cmps
inc
add
cmps
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
outs
cmps
inc
add
add
add
add
add
inc
add
inc
add
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
inc
add
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
enter
shr
inc
add
test
add
test
add
test
add
test
add
test
mov
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
inc
add
inc
add
inc
add
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
xor
mov
cmp
jbe
mov
cmp
je
inc
add
cmp
jb
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
int3
jmp
jmp
