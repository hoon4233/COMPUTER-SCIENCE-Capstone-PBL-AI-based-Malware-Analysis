and
inc
add
inc
add
pop
jp
add
add
add
jp
add
sub
add
inc
add
pop
add
sti
stos
inc
add
and
add
les
cmps
mov
add
add
add
add
add
in
sub
mov
mov
and
sub
mov
mov
sub
and
mov
push
sub
sub
mov
mov
sub
add
add
sub
or
add
push
test
je
cmp
jne
mov
cmp
jne
sub
mov
sub
mov
or
push
add
mov
cmp
jne
mov
cmp
jne
add
mov
add
mov
cmp
je
mov
mov
add
add
cmp
je
add
sub
cmp
jne
mov
add
mov
cmp
jne
cmp
je
cmp
je
cmp
je
mov
sub
mov
cmp
je
mov
mov
sub
and
cmp
je
add
cmp
je
cmp
je
mov
add
and
cmp
jne
mov
mov
add
or
cmp
jne
sub
mov
add
cmp
jne
or
add
mov
sub
sub
mov
sub
add
and
sub
sub
sub
cmp
jne
add
add
mov
sub
mov
and
cmp
je
mov
mov
and
sub
cmp
jne
sub
sub
cmp
je
mov
add
mov
add
sub
sub
sub
test
jne
cmp
jne
sub
cmp
jne
mov
mov
mov
sub
sub
and
or
sub
sub
cmp
jne
mov
mov
sub
add
sub
sub
or
or
push
call
sub
and
mov
sub
sub
or
mov
mov
cmp
jne
mov
mov
sub
add
mov
add
test
je
test
jne
cmp
je
add
push
call
mov
mov
add
add
add
cmp
je
mov
add
mov
add
sub
add
test
jne
cmp
jne
cmp
jne
mov
mov
add
sub
sub
cmp
je
and
mov
mov
mov
cmp
jne
add
sub
mov
mov
sub
and
xor
mov
mov
sub
mov
sub
add
mov
and
or
add
sub
add
add
sub
add
or
add
add
sub
add
cmp
jne
add
sub
mov
cmp
jne
mov
sub
xor
mov
sub
or
sub
mov
mov
sub
mov
sub
add
and
test
je
mov
mov
add
cmp
je
or
mov
sub
mov
mov
sub
cmp
jne
mov
mov
add
cmp
je
add
mov
mov
sub
sub
cmp
jne
sub
sub
mov
mov
or
mov
add
sub
cmp
je
xor
or
test
jne
mov
or
mov
cmp
jne
sub
mov
mov
cmp
je
mov
sub
add
mov
sub
sub
sub
cmp
jne
mov
mov
mov
add
cmp
je
mov
add
cmp
jne
mov
mov
or
add
cmp
je
or
mov
add
add
add
mov
mov
add
test
je
add
mov
mov
mov
and
and
add
add
add
or
cmp
jne
mov
mov
cmp
je
add
mov
or
cmp
je
mov
sub
mov
and
sub
or
cmp
jne
mov
cmp
jne
add
mov
cmp
je
sub
cmp
je
sub
mov
mov
or
mov
xor
add
mov
add
sub
add
sub
sub
add
mov
xor
mov
mov
cmp
jne
mov
sub
mov
cmp
je
add
mov
test
je
sub
mov
mov
sub
cmp
jne
or
sub
or
sub
sub
cmp
je
add
add
mov
cmp
je
mov
mov
test
jne
add
mov
mov
cmp
jne
sub
cmp
je
add
mov
sub
test
jne
mov
add
add
mov
and
add
add
sub
sub
call
mov
mov
add
test
je
cmp
jne
cmp
jne
mov
cmp
jne
sub
mov
mov
sub
xor
cmp
je
mov
mov
add
mov
sub
and
sub
cmp
je
sub
mov
cmp
jne
mov
add
add
and
mov
and
add
cmp
je
mov
mov
sub
sub
sub
cmp
jne
mov
cmp
je
add
mov
mov
sub
or
and
and
add
test
je
mov
sub
or
add
test
je
mov
and
sub
and
mov
mov
cmp
jne
add
mov
mov
add
add
cmp
jne
mov
mov
and
or
sub
test
jne
xor
test
je
cmp
je
mov
mov
or
mov
mov
add
test
je
sub
cmp
je
cmp
jne
cmp
jne
cmp
jne
cmp
je
mov
cmp
jne
sub
mov
mov
and
or
sub
add
test
jne
mov
mov
cmp
jne
sub
mov
cmp
je
cmp
je
mov
mov
sub
add
add
add
cmp
je
sub
cmp
je
cmp
je
add
mov
cmp
jne
mov
and
test
jne
sub
cmp
je
sub
mov
sub
add
sub
mov
sub
cmp
je
mov
cmp
jne
test
je
mov
or
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
add
sub
sub
mov
cmp
je
cmp
jne
mov
or
sub
cmp
jne
add
or
mov
add
cmp
jne
mov
mov
xor
test
je
cmp
je
sub
cmp
jne
sub
cmp
jne
sub
sub
cmp
jne
xor
add
mov
cmp
je
add
add
add
mov
mov
mov
and
mov
add
test
je
mov
cmp
je
sub
add
cmp
jne
cmp
jne
mov
mov
and
cmp
je
mov
sub
mov
add
sub
sub
mov
add
and
cmp
je
mov
mov
cmp
je
and
mov
sub
and
mov
sub
add
test
jne
sub
cmp
je
add
mov
cmp
je
mov
mov
sub
sub
test
je
cmp
jne
mov
cmp
je
cmp
jne
mov
mov
add
sub
cmp
jne
mov
mov
sub
test
jne
mov
sub
mov
add
add
and
and
cmp
jne
cmp
jne
add
cmp
jne
and
sub
add
and
add
cmp
jne
sub
sub
mov
add
cmp
je
mov
or
mov
and
cmp
je
add
add
add
cmp
je
add
add
mov
mov
cmp
jne
or
mov
add
or
mov
sub
and
mov
and
mov
add
mov
or
add
cmp
jne
mov
add
and
mov
sub
cmp
jne
mov
mov
add
cmp
jne
sub
sub
sub
sub
mov
cmp
jne
cmp
je
mov
or
mov
test
jne
add
mov
add
sub
add
mov
mov
and
and
and
add
add
mov
mov
sub
test
jne
mov
add
add
add
mov
sub
cmp
je
sub
mov
add
mov
cmp
je
add
sub
mov
mov
sub
add
add
lea
add
cmp
jne
mov
sub
add
mov
add
mov
cmp
jne
cmp
je
or
add
and
sub
mov
add
cmp
je
sub
cmp
jne
mov
and
sub
mov
add
add
and
add
push
mov
cmp
jne
mov
mov
add
sub
mov
cmp
je
sub
or
push
cmp
jne
sub
cmp
jne
mov
mov
or
cmp
jne
mov
add
mov
or
sub
or
cmp
je
mov
mov
add
add
sub
sub
add
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
mov
sub
add
sub
add
mov
call
sub
sub
mov
mov
sub
cmp
je
cmp
jne
mov
mov
add
cmp
jne
add
or
sub
mov
or
mov
add
add
cmp
jne
mov
mov
sub
sub
sub
test
je
mov
add
add
add
cmp
je
add
mov
add
mov
cmp
jne
mov
cmp
jne
cmp
jne
add
test
jne
and
add
and
mov
sub
mov
test
jne
mov
cmp
je
mov
mov
add
sub
sub
sub
add
cmp
je
cmp
je
add
mov
mov
cmp
jne
add
mov
mov
mov
sub
add
or
xor
shr
add
cmp
je
mov
cmp
jne
mov
test
jne
sub
mov
mov
cmp
je
and
cmp
jne
mov
mov
mov
xor
and
cmp
jne
and
test
je
and
mov
add
add
cmp
je
add
sub
sub
call
sub
cmp
jne
sub
mov
sub
mov
add
mov
mov
or
sub
add
or
sub
cmp
je
and
sub
mov
add
mov
xor
cmp
je
cmp
jne
mov
sub
cmp
je
cmp
je
cmp
jne
mov
mov
sub
cmp
jne
mov
add
add
add
mov
sub
add
add
cmp
jne
add
add
and
or
sub
sub
add
mov
push
push
push
call
sub
mov
mov
add
sub
sub
add
add
mov
mov
add
cmp
je
add
cmp
je
sub
mov
cmp
je
mov
add
add
test
jne
sub
mov
mov
cmp
jne
test
je
add
mov
add
or
add
add
sub
sub
mov
test
je
mov
mov
sub
sub
sub
sub
cmp
jne
mov
add
sub
mov
cmp
je
mov
sub
or
mov
and
and
cmp
je
cmp
jne
mov
cmp
je
mov
and
sub
sub
sub
and
cmp
je
mov
add
add
and
mov
mov
mov
sub
sub
add
call
sub
add
mov
mov
xor
cmp
je
mov
cmp
je
or
cmp
jne
sub
sub
mov
add
mov
sub
sub
add
mov
and
and
cmp
je
cmp
je
add
mov
mov
add
sub
sub
add
sub
test
jne
mov
sub
mov
test
jne
mov
sub
mov
add
sub
add
and
cmp
je
cmp
jne
cmp
je
mov
mov
or
or
or
cmp
je
mov
cmp
je
or
sub
mov
mov
cmp
je
sub
or
mov
mov
add
sub
add
cmp
je
mov
mov
mov
mov
mov
mov
and
xor
and
sub
sub
sub
sub
sub
sub
sub
mov
and
call
mov
sub
mov
cmp
jne
mov
add
mov
add
sub
cmp
je
sub
cmp
jne
cmp
je
cmp
je
add
add
pop
mov
mov
and
sub
cmp
je
add
cmp
je
mov
add
add
mov
test
jne
mov
cmp
jne
mov
mov
cmp
je
mov
cmp
je
sub
mov
mov
add
or
add
sub
sub
or
sub
sub
add
pop
sub
pop
test
jne
sub
cmp
je
cmp
je
sub
or
cmp
jne
cmp
je
add
mov
mov
cmp
jne
sub
sub
sub
mov
sub
and
add
sub
add
or
sub
add
cmp
je
mov
sub
cmp
je
mov
mov
add
sub
add
test
jne
cmp
je
mov
add
cmp
jne
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
push
sub
push
mov
add
push
cmp
jne
sub
mov
mov
sub
mov
cmp
je
mov
mov
cmp
je
mov
cmp
jne
mov
or
cmp
jne
mov
mov
cmp
je
sub
mov
add
test
jne
add
sub
cmp
je
test
je
mov
add
mov
mov
mov
sub
add
cmp
je
mov
add
mov
cmp
je
mov
cmp
jne
and
mov
mov
or
add
xor
sub
cmp
jne
mov
sub
cmp
jne
sub
cmp
je
sub
mov
mov
cmp
jne
or
sub
cmp
je
sub
mov
and
and
mov
cmp
jne
add
mov
add
sub
cmp
jne
and
add
call
mov
mov
cmp
je
mov
mov
add
sub
add
add
mov
sub
call
mov
mov
add
sub
cmp
je
test
je
sub
call
cmp
jne
add
add
sub
cmp
je
sub
sub
mov
add
mov
sub
sub
or
cmp
jne
add
add
cmp
je
and
mov
add
mov
add
sub
sub
mov
sub
sub
add
mov
cmp
je
mov
sub
mov
add
add
and
add
sub
sub
sub
xor
push
call
mov
mov
test
je
mov
or
sub
add
cmp
je
cmp
jne
mov
cmp
jne
and
mov
mov
sub
sub
add
test
je
cmp
je
mov
mov
cmp
jne
and
xor
cmp
je
add
mov
mov
xor
cmp
je
cmp
je
sub
mov
mov
cmp
je
mov
cmp
je
cmp
jne
sub
mov
add
mov
sub
cmp
jne
and
mov
sub
sub
mov
mov
cmp
jne
cmp
jne
mov
mov
test
jne
and
mov
mov
sub
sub
cmp
je
mov
mov
add
mov
add
add
or
sub
add
or
je
cmp
jne
mov
mov
add
cmp
jne
sub
sub
lea
cmp
jne
add
mov
sub
cmp
jne
mov
mov
sub
sub
cmp
jne
or
mov
mov
or
test
je
or
or
inc
and
mov
or
sub
mov
cmp
jne
sub
sub
test
jne
cmp
jne
test
jne
cmp
jne
mov
cmp
jne
mov
add
mov
add
sub
sub
add
mov
mov
mov
cmp
jne
mov
add
mov
sub
cmp
jne
and
mov
cmp
jne
sub
sub
xor
add
add
sub
mov
mov
add
or
cmp
jne
mov
or
and
mov
sub
and
cmp
jne
mov
add
add
mov
cmp
jne
mov
mov
add
sub
mov
mov
cmp
jne
mov
sub
test
jne
cmp
je
sub
mov
add
cmp
jne
and
and
add
add
sub
add
mov
mov
cmp
jne
add
mov
mov
sub
cmp
jne
or
mov
and
sub
mov
and
cmp
je
mov
mov
add
mov
mov
mov
sub
add
add
sub
mov
or
add
add
or
mov
mov
cmp
je
mov
add
mov
cmp
je
and
add
sub
mov
sub
add
cmp
jne
mov
sub
cmp
je
and
cmp
je
add
mov
add
add
mov
and
add
cmp
jne
mov
mov
cmp
je
or
mov
cmp
jne
sub
mov
mov
mov
add
add
or
add
cmp
jne
mov
mov
cmp
jne
mov
cmp
je
cmp
jne
sub
mov
add
sub
add
cmp
jne
mov
mov
add
cmp
je
add
mov
add
cmp
jne
mov
add
or
cmp
je
mov
add
mov
sub
test
je
sub
mov
test
je
sub
mov
sub
mov
add
sub
or
cmp
je
cmp
je
mov
cmp
je
add
mov
mov
and
sub
sub
cmp
je
mov
mov
add
and
mov
or
add
and
add
sub
mov
pop
or
pop
add
cmp
jne
mov
mov
sub
add
cmp
jne
mov
mov
sub
cmp
je
add
mov
add
mov
sub
cmp
jne
mov
cmp
jne
mov
sub
mov
add
sub
cmp
jne
mov
mov
sub
cmp
jne
mov
xor
sub
cmp
je
cmp
je
mov
sub
mov
add
cmp
je
cmp
je
mov
mov
sub
add
sub
test
jne
sub
mov
mov
cmp
je
cmp
jne
mov
cmp
je
sub
mov
test
jne
mov
add
and
cmp
jne
sub
mov
add
cmp
jne
sub
add
mov
mov
cmp
jne
test
jne
sub
add
cmp
jne
add
pop
add
mov
test
jne
add
xor
mov
add
sub
mov
cmp
jne
cmp
jne
add
or
and
add
or
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
sub
mov
push
sub
push
or
and
mov
mov
add
and
push
mov
and
xor
mov
mov
cmp
je
mov
mov
mov
or
add
cmp
je
sub
or
mov
sub
sub
sub
mov
add
and
add
add
cmp
je
and
add
cmp
je
mov
cmp
jne
mov
mov
add
rdtsc
mov
mov
or
cmp
jne
mov
add
sub
mov
add
add
or
add
cmp
jne
mov
add
mov
sub
sub
sub
sub
add
add
sub
mov
sub
mov
mov
mov
or
or
and
cmp
je
mov
or
add
and
rdtsc
or
mov
mov
mov
mov
mov
and
add
xor
sub
mov
mov
mov
sub
cmp
je
mov
sub
add
mov
cmp
jne
and
mov
mov
sub
cmp
jne
cmp
jne
xor
mov
sub
cmp
je
mov
mov
sub
sub
and
sub
sub
add
add
sub
mov
mov
add
or
add
cmp
jne
mov
mov
cmp
jne
cmp
jne
and
cmp
jne
sub
sub
sub
pop
cmp
je
mov
mov
and
add
add
add
or
or
pop
or
pop
mov
mov
and
cmp
jne
or
cmp
jne
add
cmp
je
add
cmp
je
mov
sub
add
mov
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
add
add
sub
sub
sub
add
add
sub
push
or
push
mov
mov
sub
add
cmp
jne
mov
mov
sub
cmp
je
cmp
je
mov
mov
test
jne
mov
mov
add
sub
sub
mov
or
add
sub
sub
add
sub
cmp
jne
mov
mov
add
sub
add
add
add
sub
sub
and
test
jne
test
jne
or
push
add
add
mov
mov
mov
add
sub
cmp
je
mov
add
xor
mov
sub
mov
mov
mov
add
mov
add
mov
sub
add
cmp
je
add
mov
mov
cmp
je
add
sub
add
dec
add
cmp
je
add
mov
add
cmp
jne
and
xor
mov
mov
add
or
and
add
sub
sub
test
je
cmp
jne
mov
sub
mov
sub
add
cmp
jne
mov
and
add
cmp
je
test
je
cmp
je
cmp
jne
add
add
cmp
je
test
jne
sub
mov
and
sub
cmp
jne
mov
and
and
sub
add
and
and
add
sub
add
mov
or
mov
xor
sub
xor
ror
and
mov
sub
mov
cmp
je
sub
cmp
je
sub
mov
add
sub
cmp
jne
mov
test
jne
cmp
jne
sub
test
jne
cmp
je
cmp
jne
cmp
jne
or
add
sub
add
cmp
je
sub
jmp
mov
add
test
jne
sub
cmp
je
cmp
je
mov
sub
pop
mov
mov
add
cmp
je
sub
mov
add
mov
and
or
test
jne
mov
mov
add
sub
sub
cmp
jne
add
pop
sub
pop
mov
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
push
mov
and
and
and
mov
xor
add
and
and
push
sub
mov
add
mov
cmp
je
sub
test
jne
mov
xor
mov
xor
add
test
je
cmp
je
cmp
je
mov
mov
sub
and
cmp
je
mov
mov
cmp
je
mov
sub
add
xor
mov
mov
and
sub
and
add
sub
mov
mov
mov
or
sub
or
cmp
je
mov
mov
cmp
jne
sub
add
mov
add
mov
add
and
or
cmp
jne
cmp
jne
mov
sub
mov
add
sub
sub
test
jne
cmp
jne
mov
mov
add
add
and
add
sub
mov
or
push
cmp
jne
cmp
jne
mov
mov
add
mov
or
test
jne
cmp
je
mov
mov
sub
cmp
jne
add
or
mov
sub
and
cmp
je
and
add
mov
add
add
mov
mov
add
add
sub
sub
add
push
cmp
jne
add
add
sub
push
mov
sub
sub
add
push
and
mov
sub
mov
and
add
mov
and
or
test
je
mov
mov
cmp
jne
mov
sub
add
add
or
cmp
je
mov
mov
sub
cmp
jne
add
mov
sub
sub
add
cmp
jne
sub
mov
or
mov
sub
mov
or
mov
sub
sub
mov
call
add
mov
sub
mov
sub
or
sub
mov
mov
mov
cmp
je
cmp
je
mov
mov
test
je
mov
sub
or
mov
cmp
je
mov
mov
cmp
je
sub
mov
mov
xor
add
and
sub
mov
mov
mov
sub
sub
sub
cmp
je
mov
cmp
je
add
cmp
je
add
sub
cmp
je
cmp
jne
mov
or
mov
add
add
cmp
je
add
mov
mov
and
test
jne
mov
and
cmp
jne
and
add
mov
sub
and
test
jne
add
cmp
jne
mov
mov
cmp
jne
or
mov
add
cmp
jne
mov
sub
mov
add
sub
add
cmp
je
mov
mov
add
xor
or
test
je
add
mov
and
cmp
jne
mov
and
cmp
jne
mov
mov
add
and
and
mov
sub
sub
cmp
jne
add
sub
cmp
je
add
add
mov
xor
cmp
jne
or
sub
cmp
jne
mov
sub
sub
mov
test
jne
cmp
jne
mov
mov
or
cmp
je
sub
add
cmp
je
sub
mov
sub
sub
sub
mov
cmp
jne
mov
sub
mov
or
sub
cmp
jne
add
and
add
cmp
je
mov
mov
test
je
add
xor
and
mov
or
mov
sub
and
add
sub
xor
mov
xor
mov
cmp
je
add
and
sub
mov
add
cmp
jne
add
mov
mov
cmp
je
sub
mov
mov
or
add
cmp
je
sub
mov
add
sub
cmp
jne
mov
mov
mov
sub
sub
sub
sub
add
sub
test
jne
mov
or
mov
or
or
cmp
jne
sub
cmp
jne
add
mov
mov
cmp
jne
mov
add
sub
test
jne
mov
add
mov
add
sub
cmp
je
mov
mov
add
xor
and
add
cmp
jne
mov
mov
and
sub
and
cmp
jne
mov
add
sub
add
cmp
jne
sub
sub
cmp
jne
sub
mov
add
mov
add
sub
sub
add
mov
mov
mov
add
or
cmp
jne
add
mov
mov
test
je
xor
sub
cmp
jne
sub
sub
cmp
je
cmp
je
cmp
je
cmp
je
sub
cmp
je
cmp
jne
sub
mov
or
je
repnz
cmp
jne
add
cmp
je
add
sub
add
sub
add
add
add
add
test
je
add
add
sub
jmp
and
mov
mov
sub
xor
add
add
sub
test
jne
cmp
jne
mov
xor
and
and
sub
mov
mov
sub
mov
sub
add
cmp
jne
cmp
je
mov
cmp
jne
mov
mov
add
sub
cmp
je
add
test
je
cmp
jne
mov
cmp
jne
sub
mov
mov
sub
cmp
jne
add
mov
and
sub
add
add
add
or
mov
sub
sub
and
cmp
je
add
cmp
jne
mov
mov
sub
sub
cmp
je
add
and
mov
add
mov
add
add
pop
cmp
jne
or
test
jne
cmp
je
test
jne
mov
mov
add
add
sub
add
pop
mov
mov
add
and
sub
add
pop
sub
mov
sub
xor
mov
sub
sub
and
sub
sub
test
jne
add
leave
ret
add
add
rol
das
sbb
xchg
and
sbb
sbb
mov
pop
in
int3
icebp
jg
add
cmp
dec
out
mov
jae
sub
in
adc
and
jmp
mov
sub
jae
dec
adc
je
push
adc
jg
mov
jge
mov
and
dec
mov
movs
adc
mov
ret
mov
add
jne
fmul
xchg
push
xchg
test
mov
mov
jo
lea
imul
xchg
jae
mov
hlt
xchg
xchg
inc
popf
ins
xchg
jae
dec
sbb
jnp
jo
mov
jae
mov
fild
sbb
push
pop
jne
xchg
ret
jge
and
jae
mov
cwde
xchg
arpl
popf
mov
jmp
xor
xchg
jo
dec
sub
mov
pop
xchg
ret
inc
jae
mov
add
xchg
sahf
cmp
push
test
dec
shl
mov
stos
sbb
sbb
mov
inc
xchg
hlt
into
aam
pop
prefetchnta
sbb
sub
and
sbb
sbb
jo
and
cld
pop
fsubr
jo
dec
sub
mov
mov
xchg
test
mov
jmp
lea
and
adc
sbb
cmps
int3
and
jp
sbb
xchg
popa
and
sbb
add
mov
mov
sub
sbb
mov
sbb
lods
inc
shl
dec
sbb
lods
cld
sbb
dec
dec
mov
add
lahf
sbb
mov
retf
sbb
clc
pop
shr
ss
lahf
mov
mov
pop
jge
mov
hlt
sbb
push
jae
lods
ss
mov
ss
std
xchg
out
scas
jbe
sbb
ret
xchg
out
scas
data16
mov
ss
hlt
push
inc
rol
pop
mov
cld
stos
enter
dec
jns
sbb
test
out
ss
sbb
mov
mov
add
(bad)
pop
in
sub
mov
xchg
jae
dec
jle
push
adc
ja
mov
push
fwait
(bad)
fsub
cmp
push
stc
popa
arpl
scas
sub
mov
adc
ret
mov
and
movs
test
cli
add
ds
pushf
mov
test
sub
in
mov
mov
cld
ss
and
push
dec
adc
popa
adc
and
(bad)
sub
shr
dec
dec
je
or
mov
in
popa
stos
xor
les
fldenv
lahf
out
outs
add
jmp
imul
sbb
(bad)
out
shr
inc
ins
mov
iret
rcr
mov
jae
and
jns
mov
push
(bad)
xchg
jae
jb
dec
lahf
pop
or
stos
test
(bad)
cli
mov
(bad)
mov
jo
(bad)
lea
or
inc
out
jle
sub
mov
xchg
test
mov
pop
and
adc
xchg
arpl
mov
repnz
or
ins
dec
fs
call
jnp
aaa
push
jne
repz
mov
jae
test
mov
mov
bnd
push
inc
pop
mov
(bad)
popf
cmps
mov
arpl
mov
cli
pop
movs
rcr
mov
je
fwait
mov
imul
add
mov
gs
mov
cli
pop
mov
push
jae
cmp
nop
jne
cwde
xlat
xchg
xor
pop
mov
xchg
xchg
popa
mov
mov
movs
daa
(bad)
push
jae
lods
ja
sbb
jae
xor
sbb
jae
hlt
or
lea
jo
movs
(bad)
aad
mov
cli
pop
mov
stos
jne
mov
imul
xchg
sub
xchg
mov
popa
sbb
outs
sbb
jae
xor
jb
mov
out
dec
adc
clc
xchg
jae
jmp
xlat
xchg
and
inc
mov
das
mov
dec
outs
dec
xchg
or
jae
cs
jo
add
out
sub
loopne
les
outs
sbb
out
dec
out
push
clc
and
lods
mov
stos
or
(bad)
pop
(bad)
outs
dec
sbb
add
xchg
stos
icebp
push
dec
data16
icebp
pop
cmp
pushf
cmp
call
inc
xchg
cmp
out
mov
jnp
push
jge
pushf
jb
xchg
(bad)
mov
addr16
mov
mov
jae
jo
dec
and
sbb
repz
in
leave
sahf
out
mov
jnp
lods
adc
mov
sbb
and
adc
test
in
push
pop
jl
and
jnp
cmp
push
mov
ss
push
add
jns
in
jo
movs
lea
hlt
test
adc
add
inc
jmp
push
inc
ret
adc
lods
(bad)
mov
jae
and
(bad)
int3
stos
movs
cli
mov
jae
cli
stos
out
adc
ja
scas
lods
xor
dec
fdivp
adc
sbb
mov
out
rcl
inc
inc
xchg
xchg
pop
int3
stos
hlt
cli
mov
jae
xor
jae
mov
arpl
xchg
jae
iret
xchg
out
lods
xchg
ins
sbb
jae
hlt
mov
cmp
jns
inc
add
out
dec
xchg
sub
sbb
in
cmp
mov
jnp
or
cli
push
mov
xor
xchg
jae
adc
out
lea
sbb
dec
sbb
ja
cs
sbb
pop
movs
push
sbb
test
push
cld
jb
inc
mov
jne
iret
add
ret
jmp
retf
xchg
fsub
xor
pop
mov
sbb
fcomp
loopne
test
push
pop
adc
loope
push
sbb
(bad)
jne
sbb
lock
sub
jle
into
dec
retf
pop
or
jne
int
cmc
std
add
ja
mov
movs
inc
sub
call
push
cmp
mov
xor
pop
retf
les
jae
in
push
test
dec
test
adc
and
cmps
inc
stos
das
or
mov
mov
ja
mov
jge
mov
xchg
push
iret
mov
inc
jl
mov
push
dec
dec
mov
dec
sbb
jbe
call
jns
push
repnz
sub
sub
dec
cmp
std
lods
call
mov
or
adc
pusha
inc
and
xchg
and
cmps
je
jl
mov
xchg
call
mov
repnz
jmp
push
iret
lods
js
bnd
movs
mov
aas
loopne
iret
xor
push
xor
xchg
add
jg
stos
xchg
jne
fadd
jb
mov
test
sbb
lea
ins
sar
jbe
inc
mov
jno
mov
call
imul
or
mov
jo
fistp
mov
int3
sub
jle
xchg
jmp
mov
lods
cdq
inc
mov
popa
ss
aaa
(bad)
into
add
jg
push
pop
mov
cmc
mov
xchg
jmp
adc
sbb
div
es
hlt
jae
mov
mov
xchg
xchg
xor
bound
aam
jo
enter
or
xchg
mov
pushf
and
cmp
outs
scas
dec
xor
mov
and
pushf
pop
mov
repz
mov
fidivr
add
js
cld
lds
and
out
fwait
jae
retf
jp
or
out
mov
mov
and
sbb
(bad)
or
movs
je
loop
cmp
fsub
pop
das
adc
fnstcw
push
arpl
mov
std
lock
pop
xchg
(bad)
sub
ja
lock
push
shl
add
dec
sbb
loope
dec
sbb
int
imul
data16
ror
dec
sbb
out
mov
mov
mov
dec
push
sub
jg
pop
and
outs
aad
add
mov
xchg
scas
popf
inc
jns
test
jae
in
dec
xor
sub
in
mov
xchg
ret
data16
pusha
jmp
les
mov
sbb
sbb
cld
pop
inc
nop
jecxz
in
jae
bound
or
mov
popa
xchg
jp
not
ja
daa
lock
xchg
mov
push
cmps
ins
cmp
xlat
out
ss
and
or
ret
and
stos
sbb
daa
(bad)
imul
jae
pop
mov
pusha
clc
mov
sbb
hlt
enter
outs
sbb
pop
scas
ret
fisub
or
call
mov
mov
es
add
or
sbb
mov
xchg
retf
xchg
int3
add
xor
shr
lods
xchg
out
xchg
jmp
pop
push
lds
xchg
stos
push
adc
pop
add
xor
and
mov
xor
call
dec
and
je
jmp
mov
stc
xchg
in
hlt
sub
and
add
add
outs
mov
out
ins
int3
je
jp
pop
ins
cli
bound
mov
xchg
mov
add
(bad)
xor
pusha
mov
dec
mov
je
mov
das
and
adc
jo
fstp
jmp
jae
xor
out
xlat
add
xor
stos
inc
nop
stos
jmp
mov
inc
push
int3
movs
mov
fcmovu
xchg
pop
std
pop
jp
mov
or
clc
add
xor
fcom
out
int
add
stos
pushf
outs
and
inc
and
sub
loop
xchg
fisubr
sbb
outs
xchg
nop
or
cmps
adc
jae
jb
scas
adc
aas
dec
js
pop
mov
sub
xchg
sub
sub
xchg
push
sbb
sbb
mov
xor
stos
dec
mov
pop
lahf
push
inc
or
mov
xchg
and
mov
xchg
mov
mov
stos
pop
or
stos
jbe
(bad)
pop
xlat
adc
dec
and
cmps
repz
xchg
ins
pop
mov
pop
mov
or
inc
xor
sbb
pop
mov
mov
pop
sbb
ret
xchg
sti
les
retf
push
jno
mov
mov
or
(bad)
mov
cmps
jo
loop
repz
mov
mov
fstp
loop
add
cld
push
or
repz
or
jns
fisub
xchg
mov
cmc
push
sti
call
adc
and
mov
idiv
js
mov
jnp
scas
enter
sub
jge
mov
add
jmp
mov
mov
call
or
xchg
das
mov
sbb
imul
imul
mov
inc
lock
bound
mov
adc
push
shr
(bad)
and
cdq
mov
sbb
sbb
pop
std
mov
fst
iret
mov
repnz
mov
sub
test
retf
dec
retf
popf
rcl
push
mov
mov
mov
jg
mov
and
jno
pop
mov
jnp
xor
push
and
outs
jno
not
xchg
sub
sbb
inc
sbb
fs
imul
ja
js
rcr
sbb
jno
les
jne
or
mov
sub
imul
mov
movs
xchg
push
out
div
cmps
xchg
js
movs
test
stos
adc
stc
xchg
dec
stos
mov
retf
retf
push
jmp
inc
cmps
fdiv
push
sbb
push
dec
mov
xchg
dec
sbb
nop
mov
pop
sub
jae
lea
sbb
add
ins
or
rcr
sub
jne
(bad)
xchg
adc
fadd
shl
cmp
ja
rol
dec
mov
fsubp
cmps
pusha
sbb
hlt
imul
aaa
cmc
jo
int3
pop
sbb
xchg
lods
cmp
sbb
mov
mov
jle
hlt
or
movs
scas
mov
ret
test
mov
in
jg
mov
inc
gs
std
je
movs
in
xor
inc
xchg
pop
mov
add
pop
scas
push
push
dec
jb
ins
sar
cwde
hlt
fnstenv
out
(bad)
call
xchg
dec
(bad)
mov
pop
movs
pushf
fnstenv
les
cmp
jmp
lea
aaa
push
adc
pop
xor
mov
stos
xchg
dec
jae
mov
retf
(bad)
sbb
or
add
mov
cmp
fnsave
mov
mov
sbb
and
sub
xchg
shr
jo
les
(bad)
fldenv
jae
mov
je
mov
push
out
retf
out
add
sbb
into
lea
outs
cld
div
adc
cdq
test
mov
xor
sahf
mov
aam
test
jne
cmp
add
ret
mov
add
ret
ja
mov
sahf
(bad)
pop
retf
mov
lock
jge
dec
sbb
jmp
jae
lahf
cmp
add
push
retf
sbb
std
cmp
test
aam
shl
repz
or
mov
fs
mov
sub
xor
(bad)
xor
cdq
or
or
mov
lahf
dec
mov
aad
jae
sahf
fisubr
sbb
repz
adc
xchg
sbb
das
lods
adc
repz
loop
outs
mov
sahf
popf
fwait
int
inc
popf
adc
rol
movs
in
rcr
push
mov
pop
jae
ins
sar
push
adc
imul
shl
sbb
sahf
and
std
fiadd
fnstenv
je
push
mov
dec
add
mov
fldenv
or
mov
pop
push
shr
aad
out
test
mov
stos
mov
and
push
jb
mul
sub
ins
xchg
inc
sbb
adc
jne
shl
xchg
sbb
mov
xchg
add
loopne
mov
mov
dec
mov
cli
scas
mov
and
enter
mov
(bad)
jne
add
cdq
jmp
ss
addr16
jne
jp
sbb
stos
std
imul
mov
repz
inc
pop
call
jne
xchg
jb
push
fdiv
pushf
test
xor
int3
mov
sar
inc
sbb
pusha
jecxz
inc
mov
jecxz
jbe
popf
nop
stos
xchg
xchg
fmulp
in
cmp
mov
sbb
cmp
mov
loopne
cmp
outs
jne
jbe
ret
data16
out
icebp
outs
xchg
jecxz
jge
inc
xchg
push
pop
inc
jne
pop
pop
stc
push
jne
or
dec
push
inc
cmp
or
daa
xchg
mov
push
xchg
cmp
add
test
xor
pop
pop
clc
cli
push
enter
les
jb
ja
fmul
(bad)
lahf
sbb
mov
sbb
stos
retf
fs
inc
pusha
sbb
push
movs
cld
(bad)
mov
(bad)
repnz
add
fisttp
arpl
xor
cmps
xchg
inc
sti
gs
mov
inc
jae
mov
outs
shr
movs
adc
fidiv
stos
jae
ins
cli
push
(bad)
mov
sub
mov
arpl
dec
mov
sbb
ss
shl
hlt
push
fldenv
mov
fisubr
hlt
in
fs
jmp
sar
xchg
int
or
movs
imul
push
sbb
in
and
cwde
test
movs
pop
jae
addr16
adc
scas
dec
mov
je
jno
cld
cmps
pushf
int
les
push
mov
inc
jae
sbb
lahf
out
mov
jle
and
test
adc
gs
scas
and
jb
jae
movs
adc
push
nop
scas
xchg
mov
sbb
fwait
xchg
push
mov
test
xchg
inc
cmp
cs
mov
push
ja
and
sbb
jmp
mov
mov
outs
ss
mov
push
and
jae
dec
pop
xchg
imul
mov
stos
mov
xor
std
adc
cld
adc
mov
arpl
dec
inc
mov
imul
add
and
xchg
or
int3
jmp
int
mov
adc
jl
and
push
repz
xor
sbb
sbb
mov
in
into
add
(bad)
or
mov
jg
mov
arpl
pop
rol
xchg
imul
stos
js
jecxz
dec
xor
dec
movd
xchg
push
xor
and
test
neg
jge
cdq
or
fisub
push
xor
mov
mov
cli
xor
sub
movs
jo
int3
xchg
push
fst
mov
inc
jae
sbb
mul
xor
xchg
dec
aam
add
mov
mov
in
adc
int3
push
cmp
retf
dec
loopne
mov
popa
(bad)
mov
inc
dec
cmps
jnp
sahf
mov
into
mov
cmps
mov
and
in
rcr
cmc
in
xor
pop
mov
jns
mov
push
sbb
pop
mov
mov
mov
push
stc
xchg
jle
outs
popf
cmp
sbb
and
mov
in
or
test
cwde
push
pop
aad
mov
xlat
pushf
fldcw
stc
xchg
pop
pop
into
jg
rcr
fdiv
mov
int3
lock
mov
test
cmp
or
mov
xchg
jmp
hlt
xchg
hlt
fcmovb
in
lea
and
push
imul
inc
hlt
mov
dec
xchg
xchg
test
xor
cmp
adc
or
dec
sbb
shl
push
ins
mov
pop
sbb
adc
pop
jae
jge
mov
scas
ds
xor
nop
xchg
aaa
inc
sub
jge
jno
out
scas
clc
stos
test
je
xlat
mov
mov
xor
aas
adc
mov
jg
mov
adc
mov
inc
pop
shl
inc
out
fs
xchg
and
mov
data16
addr16
les
add
xor
xchg
mov
fcomp
adc
or
inc
mov
mov
jns
aaa
or
ret
mov
cli
sahf
sar
dec
sbb
adc
adc
cmp
push
jnp
xchg
data16
pop
sbb
sub
rcl
loopne
push
int
ins
call
je
ffree
jae
inc
cwde
lods
retf
mov
sbb
add
retf
stos
jg
jmp
sub
sti
arpl
add
js
xchg
and
xor
lods
mov
xchg
aas
inc
leave
enter
jo
push
fdiv
(bad)
xor
mov
in
test
and
mov
mov
fld
cmp
cmp
std
pop
push
xor
add
adc
mov
ret
jle
mov
stos
mov
mov
stc
sub
xchg
arpl
xchg
dec
jae
dec
mov
push
test
call
xchg
pop
push
sti
ffreep
dec
jb
push
jno
stos
stos
hlt
xor
clc
mov
test
xchg
icebp
test
add
lock
dec
jae
sbb
cmp
sbb
sti
cmps
xor
frstor
jb
or
movs
jecxz
jo
loopne
jl
push
add
into
call
out
push
mov
jmp
sbb
inc
gs
xchg
sahf
mov
cmp
imul
stos
repnz
inc
xchg
sbb
sbb
daa
mov
adc
leave
xchg
inc
es
push
stos
inc
jae
fld
(bad)
push
inc
mov
mov
stc
int
xchg
(bad)
jmp
inc
pusha
in
and
xchg
loope
dec
push
pop
xor
jae
fisttp
sar
mov
or
jmp
popa
or
sub
and
mov
ss
sub
xchg
pushf
jae
std
inc
out
jle
rcl
aaa
out
pop
pop
pop
mov
retf
popa
cmp
pushf
xchg
inc
sbb
test
inc
cmp
fbstp
inc
inc
mov
mov
test
retf
and
xchg
js
in
mov
retf
sbb
xchg
push
fisub
movs
dec
add
inc
pop
lods
lahf
adc
les
add
movs
cmp
nop
loopne
inc
mov
pop
out
mov
jno
je
ins
mov
popa
mov
les
mov
adc
ret
mov
pop
or
sbb
or
mov
xchg
sti
into
jo
loopne
adc
adc
jno
shl
je
cmp
out
xchg
cdq
test
test
pusha
add
lods
(bad)
imul
cmp
xchg
or
ja
(bad)
test
pusha
push
outs
xchg
adc
mov
adc
or
popf
call
cmc
add
out
xor
mov
mov
inc
push
in
ret
les
clc
push
xchg
jb
sbb
test
and
aad
inc
inc
mov
std
int3
fimul
mov
aas
or
out
les
call
int3
xor
cmp
cdq
mov
std
in
sbb
imul
les
loopne
and
fild
nop
imul
pop
jbe
js
dec
cmps
sahf
jns
ror
xor
sub
xchg
jne
push
test
es
in
dec
mov
iret
dec
ror
mov
sbb
inc
imul
dec
xor
aam
jnp
ds
adc
imul
jae
pusha
test
push
sbb
nop
jnp
push
push
mov
pop
dec
mov
xchg
pop
out
sub
jne
cli
xchg
cmps
fisttp
jnp
mov
and
dec
repnz
scas
sbb
scas
add
sbb
sbb
test
aas
xchg
mov
bound
aam
cmp
xchg
out
mov
nop
xor
cmp
mov
test
(bad)
in
cli
dec
repnz
or
mov
mov
scas
sbb
call
and
adc
pop
cli
xchg
shl
xchg
test
mov
mov
fmulp
arpl
ficomp
test
fistp
mov
lea
sahf
jb
sbb
inc
dec
mov
push
jae
stc
fwait
out
push
mov
repz
sbb
cmp
std
push
and
daa
mov
inc
cmp
push
fst
pop
imul
push
xor
inc
and
mov
sbb
outs
outs
(bad)
(bad)
sub
adc
call
push
sub
int3
add
loop
push
sub
sti
jae
inc
std
add
cmp
sbb
adc
jp
shl
hlt
xchg
cmps
pop
sbb
outs
shl
mov
sub
push
sbb
fistp
inc
pop
pop
jae
int3
mov
inc
scas
sbb
mov
and
jp
or
dec
inc
xchg
cmp
or
cmp
adc
jecxz
(bad)
xor
mov
rol
mov
test
sar
in
dec
sbb
fdiv
test
(bad)
mov
xor
fidivr
and
lods
push
mov
sub
imul
pushf
sub
icebp
push
aas
jno
loope
gs
xacquire
fiadd
lods
test
sub
stc
sub
cld
adc
(bad)
das
call
imul
push
inc
fs
jae
loopne
pop
data16
mov
push
jae
je
test
cld
sbb
jl
bound
ja
sti
cmp
out
repz
jg
add
jo
add
ja
push
jge
repnz
xor
mov
into
and
push
add
cmc
xchg
not
inc
add
(bad)
mov
test
cmp
scas
push
or
arpl
call
clc
clc
test
test
adc
dec
xchg
xchg
xor
push
lds
or
dec
cmp
test
mov
cwde
fist
dec
add
mov
xor
push
gs
dec
mov
scas
jnp
sub
adc
and
aas
ret
add
aad
movs
popfw
mov
mov
mov
push
scas
call
or
inc
ret
push
jns
lds
js
pop
adc
dec
pop
(bad)
dec
outs
inc
pop
mov
jb
loop
mov
test
ja
adc
aad
pop
cmp
push
add
out
jo
adc
popa
test
and
xchg
test
fistp
sub
dec
lds
imul
les
adc
mov
xor
inc
leave
mov
mov
adc
sub
data16
aaa
mov
scas
js
jne
jmp
push
mov
add
inc
or
mov
mov
in
xchg
out
jl
jbe
fcmovu
cs
mov
xchg
je
sbb
sar
push
add
dec
sbb
push
jle
mov
and
in
out
or
push
adc
jl
mov
push
rcr
dec
sbb
xchg
sub
and
popf
int
pop
fcmovnbe
in
call
mov
lea
aaa
push
jg
sub
xchg
adc
scas
xor
cmp
mov
stos
mov
les
out
dec
xchg
or
xchg
enter
push
sbb
sbb
daa
outs
inc
out
xchg
mov
dec
scas
mov
jg
xchg
aam
dec
mov
imul
lahf
xor
dec
test
leave
mov
lahf
jae
ins
test
mov
stos
stos
jb
pop
ja
lahf
mov
mov
mov
or
pop
pop
push
cli
jae
aam
mov
sbb
add
(bad)
sti
mov
fldcw
(bad)
leave
push
das
add
cs
repnz
sub
pop
div
jmp
dec
pop
mov
lods
popf
dec
scas
fild
mov
jne
push
jecxz
(bad)
imul
(bad)
repnz
test
fist
out
cmp
xchg
(bad)
pop
add
adc
into
push
repnz
data16
cld
mov
das
pusha
dec
data16
xor
dec
shr
pop
call
shl
or
mov
fld
dec
fild
sbb
sbb
jb
or
push
aaa
outs
test
and
jge
das
sbb
mov
xor
sti
popa
clc
mov
mov
fcomp
js
cli
push
jns
xor
pop
or
cmps
mov
in
pop
rcl
adc
and
mov
sub
rcr
sbb
mov
push
sub
jae
pop
rcl
adc
jl
add
int
mov
(bad)
jae
xor
sub
and
inc
mov
xchg
shl
and
xchg
out
push
push
push
out
int
jae
add
ja
sub
jecxz
xor
cli
and
cmp
aas
sete
jl
pushfw
in
pop
je
fisubr
lock
(bad)
movs
popf
mov
mov
and
dec
sbb
inc
add
dec
add
ja
stc
mul
adc
lds
out
scas
ret
mov
mov
add
mov
xlat
sbb
inc
add
aas
and
mov
dec
sub
mov
rcl
push
jmp
xor
jno
js
mov
add
dec
mov
paddw
int3
push
hlt
add
xchg
cmps
out
or
mov
push
loopne
xchg
je
xchg
and
ja
aam
adc
push
out
or
cdq
and
add
mov
not
and
inc
inc
fadd
mov
dec
jns
movs
call
sbb
sahf
inc
xchg
repnz
loop
pusha
jae
enter
(bad)
adc
retf
dec
mov
int
shr
mov
xchg
mov
outs
mov
push
pop
mov
hlt
add
xchg
out
jns
dec
xor
push
jmp
int3
sub
sbb
xchg
cli
jecxz
sub
xchg
sbb
cmp
jae
push
test
sbb
adc
jb
(bad)
mov
fs
push
enter
adc
ret
pop
jae
cmps
es
fsubr
mov
and
sbb
xchg
and
in
mov
ja
sbb
das
xor
out
or
mov
mov
mul
ret
daa
addr16
mov
pushf
movs
or
mov
cwde
mov
cld
adc
and
mov
xchg
xchg
mov
fs
jne
mov
pop
cmp
lods
and
xchg
xchg
sbb
xchg
dec
xor
and
stos
aaa
push
and
inc
sbb
jl
fild
and
xchg
mov
jmp
daa
out
adc
test
ins
enter
sbb
ret
mov
js
xchg
mov
ret
fmul
hlt
push
sar
cld
enter
out
popa
and
sbb
loope
hlt
push
stos
sbb
jp
adc
lods
popa
popf
mov
out
bound
mov
and
pushf
jns
cmp
mov
out
stos
jg
pop
inc
push
jbe
ror
sbb
push
pop
mov
scas
push
cmp
dec
cdq
int3
stos
shl
mov
push
jae
cmp
sub
xchg
lods
xchg
mov
(bad)
aad
(bad)
jae
push
jl
loopne
inc
test
push
or
jno
cmp
adc
mov
mov
mov
ret
in
sub
adc
clc
stc
out
xchg
dec
jnp
int
ds
je
icebp
cdq
jg
gs
sbb
xchg
icebp
xchg
push
mov
push
mov
pop
sbb
sbb
out
mov
aad
pop
sti
jae
adc
out
repnz
sbb
or
jnp
cmps
movs
mov
fs
push
push
stc
out
push
sbb
push
inc
aaa
cmp
sub
sub
inc
imul
mov
data16
jb
xor
cmc
into
mov
das
adc
icebp
imul
js
mov
outs
gs
push
lds
repz
push
inc
sti
pop
mov
push
aaa
lock
retf
fs
adc
inc
cs
push
mov
fwait
cmp
cmp
sub
sub
push
mov
scas
stos
sub
mov
js
and
call
ins
popa
sbb
cmps
mov
add
pop
push
add
mov
xchg
pusha
lods
imul
inc
dec
jae
lods
xor
out
push
hlt
test
add
(bad)
jae
movs
std
cmps
mov
mov
jg
sub
dec
sbb
out
pop
mov
push
mov
jnp
cmc
popa
xor
and
sbb
add
aam
sbb
adc
fdivr
or
dec
xor
xchg
mov
(bad)
outs
push
cld
inc
test
shl
cmp
scas
test
mov
inc
fcom
mov
push
adc
inc
xlat
sub
les
dec
cdq
clc
mov
ja
mov
sar
je
lds
scas
pusha
js
in
mov
pusha
xchg
iret
dec
neg
inc
sti
mov
jae
stc
sub
aaa
pusha
fild
(bad)
enter
jmp
jae
mov
inc
out
je
aaa
sbb
enter
loope
mov
stos
or
xchg
mov
in
pop
jae
and
mov
lods
fist
int3
cwde
dec
sbb
mov
jmp
push
fmul
repnz
das
sbb
mov
adc
sbb
sub
push
fsubr
jne
in
out
aaa
or
add
mov
push
cwde
ret
stc
xchg
jle
hlt
pop
pushf
jnp
xlat
ins
je
or
and
or
lods
jae
mov
(bad)
rcl
movs
xchg
pop
or
jae
xchg
push
xchg
mov
and
xlat
push
add
fild
mov
inc
mov
jae
jl
jnp
ins
aas
(bad)
nop
les
(bad)
in
mov
sbb
sbb
dec
adc
data16
fadd
cmp
ror
inc
cmps
inc
xor
jno
imul
dec
mov
dec
pop
push
mov
jae
out
scas
xor
aad
adc
and
pop
repz
cwde
jnp
cmc
cmps
call
inc
push
push
add
ds
dec
mov
cmp
inc
sbb
xor
mov
sub
call
jmp
out
inc
cmp
leave
ffree
mov
sti
or
movs
push
cmps
aaa
add
pop
sub
ror
in
add
pushf
mov
and
sbb
mov
dec
aam
jns
rcr
dec
sub
sbb
gs
mov
sbb
call
das
push
mov
mov
adc
push
xor
xchg
sub
sub
or
movs
or
inc
add
lods
in
pusha
jb
nop
stc
xchg
mov
sbb
push
nop
dec
sbb
pop
rcr
mov
retf
push
in
adc
mov
push
jae
sbb
pop
push
inc
sbb
ins
and
fmul
mov
cmp
outs
scas
retf
mov
sub
mov
inc
jno
stos
add
add
stos
add
jae
cmp
or
dec
clc
pop
out
fsub
push
je
mov
rcr
push
xchg
dec
leave
nop
fisttp
aaa
jne
add
aaa
in
sub
mov
test
push
movs
cmp
lds
add
jne
mov
(bad)
cmp
mov
(bad)
gs
xchg
pop
jge
dec
sub
call
sub
mov
mov
ss
or
mov
in
mov
cld
mov
xchg
cli
ins
push
dec
xor
repz
std
jge
dec
and
jae
sub
mov
in
push
gs
xchg
dec
push
adc
push
push
lds
repz
push
cld
shl
jl
xchg
imul
repnz
outs
sbb
(bad)
pop
mov
xlat
(bad)
add
jae
inc
or
mov
mov
mov
lds
aaa
aam
pop
xor
outs
lahf
dec
jmp
in
ins
dec
mov
outs
jle
test
retf
outs
inc
xor
jb
mov
cwde
cmp
inc
stc
or
adc
xchg
push
or
cld
mov
icebp
std
movs
sbb
jb
movs
stc
jno
inc
dec
sbb
test
aam
std
ficomp
jl
ret
mov
imul
pusha
xchg
(bad)
faddp
outs
fistp
stc
test
push
ss
lea
mov
xor
sbb
mov
and
jns
mov
pop
enter
adc
int
sbb
xchg
ins
add
popa
and
aad
rcl
inc
mov
mov
cmp
inc
and
and
pop
js
mov
call
jg
add
cmps
sbb
mov
inc
arpl
pop
cmp
popf
shl
popf
rcl
and
dec
jns
cli
dec
lock
mov
xchg
enter
(bad)
lods
xor
inc
sar
push
mov
push
in
jge
mov
pop
jae
sbb
mov
and
adc
mov
adc
jae
call
inc
mov
pop
mov
ficomp
rcr
mov
fdivr
sbb
add
out
jae
xor
or
pop
arpl
call
mov
pop
in
or
fcom
aas
xchg
enter
push
mov
xor
loop
add
pusha
mov
mov
jae
xchg
retf
daa
popf
cmp
xchg
adc
mov
aaa
push
and
cmp
lods
xchg
ds
xchg
add
retf
push
inc
ins
sbb
ins
into
call
lock
ficomp
adc
test
je
lods
push
sbb
adc
mov
mov
sub
in
pusha
jmp
inc
xchg
push
sub
inc
cmc
mov
cmp
aam
popf
xor
(bad)
xchg
js
xor
pop
cmp
cmp
push
icebp
inc
xor
cdq
out
mov
xchg
out
nop
lea
xchg
jp
retf
sbb
jle
push
xchg
mov
stos
call
test
mov
shl
jae
mov
(bad)
cwde
fcomp
mov
cmps
cld
jns
mov
xchg
inc
and
jl
xor
push
sub
rep
test
push
int3
cmps
cmp
fistp
add
pop
ret
inc
inc
mov
int
fxch
mov
rep
mov
mov
pop
movs
es
ret
mov
inc
clc
sbb
xchg
xor
jge
xor
dec
sbb
pop
lahf
push
mov
mov
sub
nop
mov
xchg
cmp
imul
inc
aam
jae
int3
sub
jge
jae
mov
xchg
js
fstp
pushf
shl
movs
xchg
sbb
mov
in
or
cmps
mov
imul
and
and
inc
xchg
dec
sbb
mov
mov
add
ret
xchg
inc
rol
mov
call
mov
fs
push
mov
xchg
xchg
shl
hlt
div
sbb
jo
(bad)
neg
cmp
loop
retf
mov
mov
leave
mov
fcmovb
retf
fidiv
ja
xor
pop
bound
out
jae
fistp
addr16
sbb
add
adc
add
fwait
test
imul
aas
dec
fidiv
xor
aam
push
movs
pusha
add
mov
hlt
dec
jmp
xchg
call
dec
sbb
sbb
fs
lods
scas
push
xchg
ret
in
pushf
movs
mov
nop
ins
repz
cmp
icebp
sbb
xchg
and
mov
cld
inc
cld
(bad)
ror
icebp
jl
inc
cmp
mov
mov
(bad)
daa
pop
movs
mov
push
leave
xchg
mov
scas
stos
popf
or
test
xchg
shr
or
shr
or
xchg
sbb
iret
ret
ins
pop
add
retf
je
cmp
jg
or
inc
inc
mov
icebp
repnz
pushf
and
imul
or
jae
sbb
aad
sbb
cmp
mov
jg
mov
xor
bound
adc
les
dec
xor
jle
inc
mov
aam
cmps
sbb
push
push
push
and
mov
pushf
lods
int
mov
je
push
fisttp
cs
xor
cld
push
adc
fild
pop
cmps
sub
mov
cdq
jae
fild
jno
jae
das
sub
and
adc
in
mov
cmp
mov
mov
int
xchg
les
cmps
pop
add
enter
mov
(bad)
mov
repnz
cli
adc
pusha
imul
lock
cld
imul
sahf
dec
unpckhps
jmp
jp
mov
cs
scas
jae
ret
sbb
sbb
fmul
pop
sub
or
and
mov
xor
mov
pop
mov
mov
pop
je
jns
pop
xchg
call
jae
iret
stos
movs
clc
test
adc
jno
test
repz
jbe
jae
repnz
pop
cmp
xor
mov
call
dec
jp
jns
adc
cmp
mov
sbb
popa
sahf
and
repz
pop
xor
push
sbb
mov
or
jno
inc
lds
addr16
mov
sbb
pop
sub
sub
mov
mov
les
aas
js
push
adc
mov
sub
cmp
imul
lahf
mov
fs
push
inc
adc
xchg
daa
ins
int3
xor
jmp
dec
shl
jae
fsub
inc
sbb
addr16
call
daa
cmp
je
cwde
lds
and
pcmpeqb
mov
dec
adc
scas
stos
(bad)
and
and
mov
xchg
add
push
(bad)
ret
sbb
cmp
popa
movs
adc
icebp
xor
outs
add
cli
sbb
push
jbe
pop
ret
dec
inc
mov
inc
push
shl
jae
retf
xor
add
push
mov
push
movs
in
imul
mov
adc
(bad)
sar
les
push
mov
jecxz
outs
xchg
ficomp
xchg
mov
cli
sbb
cmps
cdq
mov
xchg
dec
in
and
sbb
or
data16
outs
outs
jl
repz
mov
popf
cmc
jmp
xor
nop
fucompp
and
and
add
in
jo
mov
fnstsw
add
(bad)
popa
push
loopne
mov
mov
adc
data16
mov
mov
movs
and
mov
fwait
push
mov
sub
test
pop
je
sbb
add
movs
jnp
push
mov
fs
fistp
xchg
mov
out
dec
mov
push
adc
adc
dec
(bad)
and
sub
test
scas
dec
cmp
push
aas
js
aam
(bad)
in
mov
out
inc
mov
sti
rcr
hlt
test
call
ja
jmp
jb
mov
and
or
cs
mov
push
xlat
repz
pop
test
inc
xor
push
jo
int
ins
push
dec
inc
mov
daa
xrelease
jns
sbb
push
adc
rol
mov
jae
cmp
les
add
inc
outs
outs
sbb
pop
or
mov
adc
xchg
inc
cmc
and
and
jbe
and
inc
das
pop
(bad)
aas
in
pusha
fwait
es
(bad)
add
xchg
xchg
enter
dec
test
clc
adc
inc
sub
cmps
mov
rol
jne
add
sbb
mov
jb
ret
mov
or
add
xchg
(bad)
lahf
outs
xor
cld
test
xchg
jmp
fstp
jne
mov
dec
cwde
and
lock
sub
sbb
cld
loop
cwde
dec
mov
cmp
mov
push
mov
dec
push
pop
mov
mov
cmovge
jge
stos
ds
pop
jb
adc
ret
sbb
jl
ror
repz
in
mov
repnz
adc
mov
sbb
xchg
dec
xchg
jb
sub
jns
repnz
mov
dec
sbb
and
adc
mov
cmp
leave
xchg
call
jno
out
cmp
pop
scas
mov
mov
mov
dec
sub
push
mov
cmp
jle
pop
enter
cwde
fisttp
(bad)
mov
xor
xor
cmps
dec
xchg
or
xor
loopne
xor
and
pushf
ins
jne
xor
lods
stos
(bad)
aad
sbb
sahf
or
adc
lds
fiadd
or
leave
pop
in
adc
scas
mov
adc
nop
xor
in
mov
ins
sbb
mov
pushf
push
adc
xchg
dec
or
sbb
pop
lea
dec
mov
sbb
mov
push
pop
pusha
mov
push
in
jp
push
and
inc
mov
pushf
dec
mov
xchg
adc
(bad)
push
jae
xchg
es
std
push
imul
jp
pop
sar
dec
int
sbb
pushf
adc
or
mov
and
pop
xchg
(bad)
push
jno
idiv
(bad)
adc
xchg
jnp
je
sub
mov
int3
ins
dec
icebp
jae
adc
mov
sbb
sbb
sub
ror
leave
xor
adc
cld
loopne
jae
xor
sub
sub
mov
mov
push
retf
mov
out
push
je
jl
sbb
js
xchg
adc
dec
xchg
jae
aaa
scas
mov
adc
imul
loope
cli
mov
dec
mov
mov
cmp
mov
xchg
mov
mov
xchg
div
cmps
sub
inc
scas
mov
inc
mov
push
test
adc
mov
fwait
test
jo
aaa
jecxz
sbb
sbb
mov
xor
mov
loopne
xchg
dec
aaa
or
dec
sub
jae
or
repnz
gs
ror
ja
cmps
pop
xor
sub
pop
repz
retf
sahf
cdq
sub
icebp
xor
fbstp
mov
xchg
adc
mov
fnstenv
aam
cld
xor
jmp
sbb
cmp
sub
cdq
shr
cmc
add
loopne
and
not
in
sub
jae
int
xchg
add
call
jae
(bad)
pop
(bad)
stos
fisubr
fwait
pop
sub
call
mov
leave
mov
jae
out
popf
push
and
(bad)
mov
popa
scas
int3
xor
mov
or
stc
jns
jno
imul
(bad)
loop
and
inc
sbb
imul
movs
fdivr
repz
shl
scas
stos
imul
add
fiadd
add
add
xchg
cdq
push
adc
and
movs
push
jns
retf
lock
jnp
ret
push
dec
pop
lds
mov
xchg
sbb
stos
ja
rcr
push
not
push
inc
push
xor
cmp
xchg
sub
scas
mov
imul
pop
cdq
jecxz
mov
mov
lods
xor
sti
sbb
cmps
imul
jge
in
xchg
ftst
dec
pop
and
sbb
and
dec
repz
adc
or
jae
xchg
jecxz
popf
lea
adc
adc
xchg
jge
shl
pop
jmp
mov
push
jo
add
jg
xor
je
imul
daa
repz
xor
lods
scas
pop
mov
xor
jo
bound
cmp
lock
cdq
pusha
(bad)
dec
mov
aaa
das
fwait
je
jg
pop
rcr
in
xchg
add
sti
mov
cmp
pop
mov
dec
retf
rcr
sub
sbb
into
loope
ins
sbb
test
inc
cmp
add
push
jae
int3
jb
repnz
push
pusha
sti
jae
fwait
jb
(bad)
rcl
test
xchg
(bad)
lock
dec
add
jno
lods
jnp
cmc
enter
lods
jmp
jg
cmps
dec
popa
aam
push
into
and
cld
mov
mov
push
ret
mov
and
sbb
cwde
pop
call
jae
mov
dec
xchg
mov
outs
sub
sar
add
cmc
dec
ss
push
and
cmp
mov
rcr
test
je
cmc
movs
dec
push
dec
xchg
adc
cmps
(bad)
ficom
inc
xchg
enter
retf
jg
cmc
jae
adc
sbb
lds
out
mov
mov
bound
loopne
hlt
sub
rol
mov
fincstp
pop
fnstcw
jp
ins
(bad)
push
push
fisttp
les
aad
push
dec
sbb
inc
in
add
sub
and
inc
mov
and
pusha
xchg
dec
push
pop
loopne
mov
xchg
xor
sbb
and
cmp
add
ror
inc
lods
mov
les
cmp
retf
imul
or
movs
mov
jmp
outs
scas
or
ins
test
cmp
mov
inc
(bad)
lahf
(bad)
jp
call
inc
lea
adc
or
retf
push
shr
xchg
mov
push
loope
jae
(bad)
adc
mov
sbb
mov
pushf
pop
ret
or
mov
dec
push
nop
icebp
or
mul
les
mov
fwait
cmp
xchg
arpl
xchg
or
hlt
fs
fwait
dec
jge
test
icebp
sub
or
pop
mov
xchg
xchg
or
hlt
jbe
sbb
adc
stc
xor
test
xchg
dec
push
arpl
jp
or
outs
imul
test
mov
adc
mov
das
cli
sti
push
fwait
xchg
jno
or
(bad)
dec
pop
adc
(bad)
cld
ss
jae
sub
xlat
test
sbb
and
pop
imul
stc
push
pop
pop
xor
mov
loopne
xor
mov
xchg
mov
test
mov
add
mov
adc
call
stos
arpl
push
sbb
cdq
jne
inc
xchg
lds
push
popa
fnstenv
push
push
je
add
push
inc
mov
fadd
add
(bad)
pop
mov
jae
cmp
jp
mov
lods
lock
jmp
or
sbb
add
jae
cmp
pop
(bad)
mov
add
shl
push
mov
push
adc
ins
pop
jmp
xor
xchg
cmps
lds
cmp
sbb
jne
fwait
xor
in
mov
loop
ret
or
push
sbb
(bad)
imul
mov
ins
mov
dec
adc
not
mov
jecxz
mov
or
fist
fldenv
dec
sbb
sbb
add
add
sar
mov
es
dec
shl
imul
add
das
mov
lea
mov
pusha
shl
nop
aad
repnz
mov
mov
xlat
fisttp
fwait
sbb
xchg
push
je
dec
test
std
jb
in
adc
repz
adc
cmp
jo
xor
sbb
sub
gs
scas
cld
movs
outs
lea
jecxz
stc
xchg
push
or
aaa
jb
sub
pop
pop
xor
imul
mov
cmp
xchg
sub
jb
lods
add
je
cmps
fwait
push
xchg
xchg
push
add
inc
push
cmp
mov
hlt
inc
je
sub
stos
or
add
adc
ret
lds
imul
iret
js
clc
add
jo
sbb
aad
retf
repz
gs
popa
clc
lods
stc
popf
sub
popa
jecxz
and
(bad)
mov
mov
pop
mov
mov
sbb
imul
hlt
movs
inc
sub
pop
daa
fnstcw
push
sbb
dec
add
mov
jae
sbb
sub
out
mov
aam
dec
movs
adc
nop
push
push
inc
mov
push
and
js
pop
inc
push
aas
inc
fs
sub
pop
ret
and
outs
aas
mov
mov
repz
cmps
out
or
sub
jae
call
(bad)
(bad)
sbb
sub
adc
push
sbb
adc
out
sub
sbb
cmps
mov
mov
push
lea
aad
adc
hlt
sbb
cmps
lods
movs
add
add
pop
mov
and
int
popf
icebp
retf
jl
pop
stos
cmp
jno
mov
cwde
pop
movs
retf
std
mov
add
loopne
fistp
(bad)
adc
xchg
cmc
inc
mov
xchg
pushf
daa
add
(bad)
xchg
lock
test
adc
aaa
adc
pop
cld
clc
jns
xchg
sub
(bad)
icebp
repz
xchg
xor
inc
test
sbb
inc
adc
and
add
or
jb
inc
mov
jne
jmp
mov
scas
inc
inc
repz
jb
out
adc
mov
out
push
fild
idiv
sbb
(bad)
sbb
mov
add
daa
test
pop
add
sbb
stos
(bad)
loope
inc
mov
mov
jae
sbb
xchg
push
jp
sub
cmp
inc
add
cld
mov
rcr
add
jae
rol
jae
pushf
lahf
icebp
adc
jp
das
popa
int
xor
out
maskmovq
imul
in
sbb
sbb
lea
(bad)
fld
fnstenv
test
idiv
sbb
stos
repz
push
and
iret
push
cmp
stos
xchg
hlt
mov
js
xchg
pop
mov
movs
ret
add
cmps
retf
sbb
rcr
fisub
scas
mov
call
stos
clc
neg
cmp
jl
rcr
mov
push
inc
mov
out
cli
pop
xchg
pop
mov
adc
cmps
or
add
pop
fld
daa
jmp
sub
mov
xchg
repnz
mov
outs
gs
neg
jbe
jecxz
adc
xchg
mov
mov
lds
cmp
fcom
daa
sbb
add
es
xchg
mov
cli
loop
clc
rol
repnz
imul
push
inc
lahf
int3
push
scas
mov
xchg
pop
imul
in
je
sub
mov
cmp
sahf
mov
adc
sub
jg
mov
add
xchg
stos
pop
scas
adc
fdiv
add
mov
(bad)
jecxz
sbb
sub
jecxz
inc
mov
pop
scas
mov
outs
add
mov
outs
iret
or
xchg
mov
pop
mov
add
mov
add
shl
es
sub
add
mov
shr
lods
inc
pop
jo
arpl
js
and
inc
jae
or
cmp
mov
cmc
xchg
nop
jp
pop
shl
xchg
(bad)
shr
stos
jno
mov
push
adc
gs
fstp
and
sub
out
cmps
stos
(bad)
icebp
xchg
cdq
and
mov
mov
pop
sti
test
sti
dec
int3
scas
jae
je
mov
test
adc
mov
jo
mov
in
xor
leave
jbe
jmp
mov
xchg
adc
shr
jae
leave
mov
or
sbb
sbb
movs
dec
push
mov
ins
push
mov
in
cmp
inc
mov
jns
sbb
add
push
jns
stos
and
and
ja
unpckhps
push
fimul
mov
icebp
xchg
push
mov
iret
pop
mov
daa
jnp
repz
and
sbb
jg
das
inc
rcr
scas
stc
jae
and
in
lahf
bswap
pusha
push
pop
mov
hlt
sar
ins
push
gs
adc
leave
lods
mov
daa
push
es
mov
mov
call
mov
fwait
pop
jmp
push
sbb
in
push
push
scas
sub
js
xor
mov
and
jbe
add
cmp
push
imul
mov
je
test
dec
das
ja
movs
js
fsubr
cmp
cwde
shl
sub
retf
je
mov
inc
lahf
ret
push
aam
iret
or
mov
sbb
(bad)
js
sub
mov
lods
mov
mov
mov
jo
lahf
mov
pop
dec
sub
sbb
repz
test
fdiv
xchg
cmp
or
mov
inc
int3
cmp
xor
jne
mov
and
ins
loope
mov
mov
fwait
dec
jle
push
lods
jb
adc
je
mov
enter
xor
pop
cld
push
mov
lods
hlt
jmp
xchg
push
push
outs
inc
mov
je
ja
or
pop
pop
repnz
ins
lds
push
push
cli
push
popf
mov
cli
sti
mov
mov
iret
in
mov
jmp
stos
mov
addr16
mov
je
add
jno
ficomp
push
inc
jl
xchg
into
lock
sbb
scas
cmp
mov
js
mov
(bad)
das
dec
dec
adc
xchg
add
xchg
and
mov
pop
into
bound
xchg
dec
fisttp
(bad)
in
pop
repnz
cmp
(bad)
sbb
scas
inc
movs
dec
mov
sbb
sub
push
sbb
mov
and
jae
mov
sahf
fnstcw
sbb
std
and
jle
in
loope
not
sub
sub
cli
arpl
cmp
ret
fisubr
mov
sahf
jg
cmp
cld
jmp
inc
fiadd
pop
sbb
inc
inc
push
jp
and
jmp
in
outs
jecxz
dec
retf
dec
sub
pushf
call
in
lods
sub
jp
repz
cmp
lahf
add
xchg
jg
dec
outs
shl
enter
scas
add
xor
das
test
inc
push
sar
mov
cmps
shl
ror
shl
mov
rol
cdq
call
adc
inc
add
icebp
xchg
mov
and
mov
push
mov
push
imul
jae
clc
movs
popf
gs
cli
mov
cli
jo
call
adc
sbb
inc
fdiv
jae
jns
mov
dec
lods
adc
ins
stos
lea
int
jmp
outs
das
push
aam
jb
xchg
mov
xor
lds
pushf
push
jne
aad
adc
dec
or
loop
pop
mov
sti
loopne
xor
adc
xchg
xchg
mov
or
xchg
mov
popa
and
adc
add
xor
out
mov
jmp
push
add
mov
retf
sbb
inc
mov
adc
sbb
inc
out
jmp
in
xchg
out
adc
pop
jecxz
dec
test
pop
xchg
pusha
in
popa
inc
movs
lods
mov
cmp
xchg
enter
jae
mov
das
sbb
clc
jg
jl
sar
cmp
pop
out
sub
mov
fdivr
xchg
ja
pop
out
fnsave
(bad)
mov
or
loope
jae
daa
add
(bad)
sbb
sbb
addr16
icebp
mov
mov
out
call
jns
cld
sbb
(bad)
jae
mov
inc
xchg
jecxz
fcomp
outs
jl
test
mov
sbb
outs
push
push
sub
push
push
sbb
jno
jb
xchg
jmp
rol
inc
pop
mov
dec
call
inc
loopne
fisttp
pop
fdiv
(bad)
out
mov
push
xor
mov
mov
jae
mov
pop
lock
sbb
adc
ins
adc
push
inc
mov
pop
aas
pop
rcr
pop
xchg
dec
ss
push
xchg
fisub
or
imul
push
xchg
mov
pop
ret
jae
frstor
(bad)
cmp
xchg
and
iret
xor
(bad)
adc
retf
test
mov
mov
fst
mov
and
pop
stos
call
pop
mov
dec
movs
add
mov
jae
fs
sti
cmps
les
xor
hlt
and
shl
arpl
mov
addr16
(bad)
cmps
test
xchg
xchg
inc
out
outs
sub
mov
xor
outs
mov
dec
cmps
sub
rep
xchg
inc
mov
int
mov
iret
mov
cwde
sbb
add
push
cmp
test
fdivr
and
push
pop
pop
dec
dec
mov
cmc
mov
push
mov
shl
xchg
ds
loope
pop
(bad)
or
add
inc
xor
test
cmp
outs
pop
out
in
jbe
push
ror
nop
outs
je
je
fwait
push
xchg
pushf
inc
loopne
in
fdiv
jae
movs
je
or
leave
dec
pop
les
jb
push
loop
sub
jle
push
add
aam
lds
nop
je
pop
paddb
inc
loop
or
jns
xchg
(bad)
imul
or
xchg
mov
sbb
add
adc
xor
sbb
add
cmps
cmc
pop
sub
inc
sbb
adc
popa
sub
fadd
mov
int3
ret
in
xchg
push
mov
lock
movs
ret
or
jae
mov
mov
sbb
or
movs
out
jae
lods
test
ins
call
inc
and
mov
inc
pop
inc
fs
sub
sbb
jmp
inc
mov
dec
mov
enter
xor
mov
jnp
hlt
add
mov
pop
arpl
loop
mov
in
adc
push
dec
repnz
mov
loop
inc
mov
pop
in
in
hlt
xor
ret
out
mov
sbb
fcmovne
push
pop
(bad)
adc
ret
bound
sub
or
ja
pop
inc
dec
cmp
and
shr
adc
movs
popf
jae
pop
pop
(bad)
sbb
xchg
pop
dec
les
arpl
sub
es
sub
sbb
bound
push
(bad)
sti
jnp
add
mov
sub
dec
popa
add
imul
data16
sbb
cmp
mov
fbstp
mov
jl
sub
push
adc
movs
inc
or
mov
sub
mov
(bad)
xor
leave
push
in
inc
jnp
sbb
adc
data16
inc
dec
scas
dec
dec
mov
and
into
mov
(bad)
push
push
push
test
popa
xchg
test
fstp
pushf
lods
and
jae
neg
add
xchg
jge
mov
hlt
add
xchg
cmp
xchg
xor
mov
adc
or
xchg
mov
packssdw
add
inc
mov
cwde
sar
sbb
popa
(bad)
pop
(bad)
pop
xchg
call
push
xor
retf
sbb
mov
in
fs
and
adc
shl
inc
(bad)
pop
adc
xchg
sub
aaa
popf
fld
and
pop
fdiv
cmp
pop
inc
and
inc
ss
sbb
xchg
nop
mov
repz
cmp
pop
cmp
pop
clc
push
je
jae
ret
and
mov
repz
and
rcl
push
xchg
fxch
int
cmp
js
jnp
mov
jb
adc
pop
loope
or
mov
jp
push
outs
jl
mov
mov
je
xor
cmp
stos
dec
fmul
out
stc
xor
stos
loopne
mov
mov
stos
xor
push
jns
jns
icebp
mov
cmp
fisubr
xor
inc
sbb
repnz
into
retf
xchg
jge
and
pop
aaa
xor
(bad)
mov
jecxz
inc
xchg
jle
retf
imul
jae
jne
dec
cmc
cmp
push
sbb
mov
stc
pop
int3
sahf
jae
xchg
sbb
sub
data16
cmp
pushf
xchg
mov
leave
mov
je
cmp
jo
sbb
adc
push
sub
je
shr
push
retf
sub
fmul
cmp
adc
sbb
or
mov
out
call
inc
hlt
adc
jp
bnd
addr16
mov
sub
push
mov
sbb
jo
push
push
xor
addr16
mov
retf
mov
mov
jae
test
jle
div
stos
sbb
pushf
dec
push
lock
imul
xor
test
scas
or
mov
cdq
lock
mov
mov
mov
iret
int3
jge
dec
scas
or
mov
mov
xchg
mov
sbb
sub
daa
mov
movs
adc
and
and
mov
mov
xor
repz
xchg
les
xchg
jmp
jns
sub
jnp
mov
(bad)
mov
mov
add
retf
mov
shr
pop
into
inc
retf
push
cmp
rcl
dec
nop
jb
sub
inc
xor
mov
in
sti
mov
popa
aad
ins
loope
and
out
fstp
jae
les
stos
sbb
inc
cmp
lea
cli
xchg
div
ret
mul
imul
jb
xor
xchg
cmc
cmp
jbe
mov
or
ins
call
daa
push
and
ja
aas
scas
xchg
in
(bad)
jmp
and
test
mov
mov
xchg
xchg
push
fwait
cmps
add
pop
mov
mov
adc
(bad)
adc
mov
sbb
xchg
mov
movs
xor
(bad)
and
cmp
adc
inc
out
je
shl
cmc
fwait
popa
dec
jne
adc
and
pinsrw
sbb
jnp
mov
mov
mov
mov
inc
mov
aam
arpl
sub
xor
sbb
pop
in
dec
repnz
jae
lods
dec
mov
mov
push
pop
rcr
(bad)
retf
push
xor
test
dec
(bad)
in
mov
aam
cmp
retf
ret
push
push
gs
sbb
or
lahf
mov
push
int
jne
out
pop
lods
mov
outs
or
xor
xor
(bad)
mov
sbb
scas
aad
mov
mov
or
cmp
(bad)
push
push
dec
repnz
pop
punpckldq
and
das
aaa
add
xchg
aaa
sbb
ret
enter
int3
lods
je
lock
cmp
fadd
pop
(bad)
adc
pusha
sbb
jne
out
and
mov
or
add
sbb
inc
loop
inc
xor
cdq
cdq
jle
test
daa
pop
das
js
(bad)
lar
bound
dec
loopne
aam
dec
mov
movs
inc
shl
jge
push
mov
fidivr
cwde
shl
push
cmp
cmp
(bad)
sti
dec
sbb
arpl
pop
jle
sbb
push
xchg
imul
mov
ja
dec
adc
sbb
jns
push
dec
mov
jae
or
mov
icebp
cmps
jmp
psllq
lahf
xor
jnp
push
mov
mov
aam
push
ds
add
jl
jae
xor
pop
jbe
xchg
mov
sti
loopne
(bad)
mov
ds
adc
call
mov
mov
mov
xlat
push
stos
mov
mov
mov
mov
pop
adc
inc
sbb
mov
mov
imul
adc
arpl
sbb
or
lahf
push
mov
or
cmp
add
push
adc
and
xor
out
sbb
inc
je
jb
pushf
jae
jno
fidiv
xchg
xchg
std
fmul
movs
inc
pop
inc
movs
loope
xchg
ja
ret
popa
or
dec
cmc
push
cmp
mov
pop
hlt
rcr
movs
pop
jo
mov
jb
pop
xchg
out
sub
xchg
sub
lods
fcomi
imul
ds
jae
out
lahf
jae
mov
jg
xor
ffree
inc
push
adc
mov
in
xchg
ja
scas
das
ins
les
(bad)
std
jmp
adc
pop
shr
xor
movs
hlt
call
add
test
out
call
stc
fsubr
or
mov
sbb
ret
mov
inc
xchg
sub
test
cmp
scas
repnz
jl
inc
xor
call
jg
and
mov
pop
mov
xchg
push
sub
mov
clc
mov
repnz
xchg
jns
sbb
jl
daa
xchg
cmps
push
xchg
xor
mov
sub
leave
pushf
outs
popf
fidivr
pop
test
sub
mov
xor
shl
mov
xchg
ret
aaa
jg
mov
popa
xchg
adc
jbe
in
lods
adc
mov
dec
mov
xchg
mov
xor
(bad)
xchg
arpl
push
pop
xlat
add
jae
repnz
mov
push
jae
jbe
or
pop
dec
jae
push
sar
mov
hlt
addr16
and
sub
inc
mov
aaa
dec
mov
mov
mov
ins
sbb
jno
cmc
cld
ins
sbb
sbb
xor
inc
ja
fcom
pcmpeqb
std
cmp
sbb
or
movs
movs
xchg
cmp
rcr
and
daa
sbb
mov
sbb
cwde
xor
les
inc
inc
xor
call
push
jae
sti
add
mov
mov
(bad)
push
jg
jge
mov
fwait
jle
sbb
xchg
dec
dec
(bad)
popa
stos
inc
call
mov
adc
pusha
aad
out
popa
in
dec
mov
and
mov
ror
xchg
movs
xor
cs
mov
loop
mov
xor
xchg
cmc
test
xchg
outs
daa
push
mov
addr16
lock
dec
push
cmp
sahf
or
mov
or
mov
retf
cmp
fimul
jg
call
cs
inc
mov
jge
leave
or
jecxz
xchg
dec
and
shl
cmps
mov
test
push
mov
fs
sbb
sbb
rcl
into
fist
ficom
mov
push
mov
adc
add
xchg
test
mov
js
cld
pusha
inc
mov
xchg
xchg
inc
pop
clc
sub
mov
xchg
add
cmp
push
in
jl
jmp
ret
addr16
stos
hlt
xlat
out
in
mov
and
aaa
ins
push
lock
lock
movs
loopne
mov
in
popa
pusha
xor
fild
aad
cli
pop
mov
mov
int
fisubr
outs
mov
dec
hlt
mov
push
ret
cmp
xchg
mov
bndldx
xchg
lahf
add
movs
xchg
movs
sar
add
mov
push
adc
or
sub
fstp
cld
sbb
js
and
sbb
movs
jno
mov
jmp
adc
xor
sbb
push
ret
out
add
aam
jo
es
jae
rcl
or
call
jne
mov
sbb
stos
movs
aaa
jecxz
jmp
pop
sbb
aad
aad
lods
je
jae
sti
dec
inc
je
test
sbb
adc
xchg
sti
push
pop
sbb
jle
sub
inc
pop
loop
mov
call
mov
mov
mov
shl
stc
cmps
out
jb
mov
sbb
les
mov
ss
leave
ins
lock
sbb
xor
push
daa
adc
aad
lods
les
adc
add
jecxz
icebp
add
dec
jb
je
loopne
dec
adc
(bad)
xor
and
push
fstp
retf
xchg
xor
loope
jae
dec
push
movs
sub
mov
sbb
icebp
in
adc
aas
add
jne
jg
loopne
pop
or
push
jae
xor
pop
pop
sbb
xchg
xor
je
adc
ja
ins
test
mov
int
jae
add
in
scas
mov
mov
cdq
ins
inc
or
aad
rcr
sbb
addr16
xor
pop
rcr
sbb
hlt
pop
bound
inc
mov
scas
call
jnp
not
add
jae
les
cmp
or
adc
mov
mov
sbb
push
mov
cmp
mov
xchg
shr
pop
push
clc
xchg
repz
mov
shl
jae
rcl
xlat
cmp
fbld
inc
sub
push
je
xor
jmp
cmc
dec
push
and
repnz
ja
int
jl
mov
shl
jb
mov
test
movs
and
sbb
sbb
mov
mov
mov
imul
ret
sub
sub
mov
adc
and
call
push
push
pushf
add
loopne
sbb
movs
(bad)
sbb
dec
not
mov
or
retf
call
inc
sbb
mov
push
sbb
inc
push
mov
push
sbb
mov
add
add
xchg
ret
pop
(bad)
cwde
arpl
popa
retf
sbb
fwait
xchg
jno
repz
fwait
pop
fdiv
out
stos
jl
sub
push
vcvtss2si
aad
add
nop
lds
daa
pushf
mov
push
loop
mov
jg
rcl
sar
sub
ror
adc
les
mov
and
out
cmp
cld
das
cmps
sbb
daa
(bad)
mov
out
sbb
and
dec
xchg
add
rcl
mov
sub
movs
aaa
push
in
sbb
cmc
js
dec
retf
xchg
sub
mov
push
mov
add
shl
addr16
test
(bad)
mov
pop
in
inc
jge
cwde
(bad)
mov
adc
add
jmp
mov
movs
test
push
fmul
xchg
mov
jg
jp
fidivr
dec
fild
dec
xor
imul
or
sbb
shr
outs
push
sub
cmp
stos
int
cld
cmc
clc
scas
enter
aad
xor
push
mov
push
ja
cli
lods
fsub
sbb
cmps
(bad)
fbld
lock
ret
fldcw
sub
mov
js
mov
sub
call
out
cmp
(bad)
repz
sub
retf
ret
cmp
mov
(bad)
dec
out
dec
stos
adc
lods
mov
call
jns
mov
sub
test
jge
dec
jmp
jmp
xor
out
cmp
repz
fs
cmp
jmp
rcr
leave
pop
dec
cld
and
and
int
retf
pop
leave
pop
aam
sbb
fcomp
test
sub
pop
aam
jae
inc
dec
or
inc
sbb
addr16
pushf
xor
adc
cmc
dec
jmp
xor
and
pop
test
call
sub
repz
lods
scas
mov
imul
adc
stos
mov
into
pushf
out
xor
je
pop
loopne
add
xchg
pop
xor
je
cmp
jae
push
xor
inc
dec
leave
cmp
mov
ja
and
dec
mov
stos
icebp
mov
xchg
dec
cmp
add
pop
sbb
xchg
mov
xchg
add
mov
repnz
(bad)
sbb
in
xor
stos
sti
popa
test
push
out
hlt
ja
mov
ds
xchg
sbb
shl
jns
neg
cmps
in
push
gs
cmc
movs
jae
dec
imul
and
mov
std
add
(bad)
fld
xchg
sbb
arpl
mov
xor
and
or
xchg
inc
test
jl
ret
call
xchg
inc
pop
pushf
inc
cmp
mov
jge
xlat
pop
and
loope
stos
and
cmp
retf
ja
popa
sbb
add
daa
push
movs
ins
pop
sbb
mov
movs
sub
push
xchg
mov
sbb
add
gs
sbb
dec
push
call
test
les
out
vandps
xchg
inc
jno
mov
jg
cdq
add
lods
add
or
dec
xlat
imul
fild
xchg
(bad)
push
inc
xchg
push
ffree
scas
das
daa
dec
ret
sbb
pop
sub
inc
mov
cmp
mov
push
adc
xchg
xchg
out
xchg
pop
popf
jne
adc
xchg
and
shr
adc
mov
int3
rcr
jne
mov
mov
pop
out
xor
or
repnz
std
mov
mov
iret
mov
xor
inc
and
imul
adc
clc
xchg
xchg
jg
xchg
lods
or
jb
jae
dec
scas
test
adc
enter
sbb
dec
in
xchg
fwait
outs
push
fstp
aaa
xlat
lea
retf
adc
into
mov
das
and
inc
scas
push
jae
inc
rcl
scas
inc
jae
fstp
(bad)
jecxz
js
sbb
inc
je
xchg
cmc
inc
cs
aad
push
cdq
push
fs
fadd
sahf
pop
in
add
out
test
adc
js
lds
xor
mov
push
ret
mov
inc
js
sub
jbe
loope
in
mov
add
out
add
in
or
push
xchg
mov
sbb
jle
adc
dec
cmp
jg
push
in
fnstcw
ja
pop
adc
sbb
sub
jne
xlat
jae
loope
aam
mov
(bad)
fmul
mov
inc
int3
das
punpckhbw
out
mov
dec
into
add
int
outs
movs
fld
imul
cmps
js
inc
pop
xor
pop
push
cli
push
mov
jae
into
dec
and
mov
repz
fs
mov
xlat
jp
push
scas
sub
xchg
xchg
add
pop
(bad)
rep
in
stos
mov
mov
dec
xchg
gs
push
jl
inc
mov
jb
xor
rcl
shl
int3
dec
das
call
movs
test
andnps
ds
and
jae
arpl
iret
adc
push
jns
mov
inc
gs
jbe
mov
mov
dec
or
mov
(bad)
and
test
lods
add
mov
cmp
dec
adc
mov
stos
jmp
push
adc
push
push
lock
leave
ja
mov
dec
pop
mov
sub
pop
push
loopne
push
shl
retf
inc
push
lods
add
mov
sti
out
add
sub
inc
sbb
pop
pusha
sub
enter
ror
ds
pushf
retf
cs
out
and
hlt
push
fcomp
jmp
rcl
jnp
pop
(bad)
fidiv
or
(bad)
popa
inc
push
mov
pop
jg
mov
and
xor
jne
sbb
jae
push
jle
sub
pop
pop
sbb
fstp
push
sub
stos
cld
mov
add
fimul
in
sar
aas
sbb
and
in
inc
sbb
adc
fstp
(bad)
out
das
or
leave
and
imul
sbb
dec
loopne
shufps
div
test
rcl
call
lods
jmp
add
xchg
clc
in
cwde
dec
out
mov
pop
mov
fsubr
cwde
ss
cmps
jns
push
xor
test
jae
icebp
enter
jl
(bad)
adc
lea
jmp
(bad)
push
mov
movs
adc
dec
je
jae
test
(bad)
mov
test
mov
mov
pop
shr
jb
xchg
sbb
cmp
dec
or
repz
xor
adc
fwait
in
jbe
xchg
jecxz
addr16
add
repz
dec
sub
pop
jbe
cs
(bad)
jae
pop
nop
stos
mov
mov
imul
sbb
add
retf
ret
das
pushf
inc
fisubr
dec
jecxz
adc
hlt
adc
adc
xchg
(bad)
push
ss
adc
jle
loopne
mov
and
int3
cmps
xlat
sub
sbb
inc
dec
dec
add
sbb
js
pop
sub
out
aam
adc
nop
push
hlt
sti
repz
sbb
mov
call
cmps
sbb
mov
push
sub
sar
mov
jmp
mov
mov
fwait
leave
int3
push
jb
pop
xchg
(bad)
xor
mov
outs
sbb
sub
ret
outs
fdiv
fcom
cld
dec
cmp
ficom
xor
inc
mov
xchg
outs
mov
xchg
test
lahf
jmp
push
fsubr
sbb
movs
mov
cmps
jno
jbe
dec
stos
inc
xchg
dec
mov
icebp
adc
mov
and
sar
jl
and
sbb
ss
pop
je
mov
in
inc
xchg
and
test
add
ins
xchg
sahf
cmp
xchg
repz
je
sti
xchg
repnz
ds
(bad)
mov
sbb
leave
sub
int3
xchg
add
rcr
cmp
or
add
sahf
pop
test
add
sbb
jp
ja
mov
shl
das
arpl
mov
loop
add
mov
jp
mov
pop
stc
cmps
mov
sbb
jns
loopne
sub
mov
mov
or
mov
sti
lahf
xchg
jbe
push
scas
fdiv
imul
mov
dec
mov
jle
cmp
inc
cmps
mov
adc
inc
dec
mov
jge
les
fnsave
adc
dec
dec
je
cmps
sbb
adc
mov
rol
add
adc
leave
mov
aad
movs
dec
retf
popa
cmp
dec
jnp
pushf
(bad)
aad
xchg
cli
daa
adc
push
cmp
in
push
mov
sbb
xchg
jmp
fld
cmps
push
xchg
test
je
xchg
(bad)
pause
cld
inc
js
outs
cli
or
sahf
aas
jae
pop
jp
mov
retf
xor
in
sub
push
pusha
test
repnz
mov
cwde
call
cwde
cmp
xor
or
int
js
jnp
xor
dec
test
outs
or
aad
mov
xchg
(bad)
mov
test
jno
inc
leave
sub
xchg
imul
(bad)
test
out
adc
sbb
ja
mov
ficom
imul
and
in
hlt
imul
mov
push
inc
add
mov
xchg
push
mov
sbb
mov
icebp
rcr
mov
out
adc
test
(bad)
cmps
mov
aad
je
ds
xchg
repnz
cmps
call
mov
xor
enter
nop
mov
call
add
mov
adc
sub
hlt
pop
das
out
fisub
mov
mov
fwait
cdq
or
rcr
xchg
cmp
and
push
xor
and
cmp
retf
xor
cmp
lds
inc
adc
push
in
inc
push
mov
fidiv
push
mov
xchg
(bad)
sbb
in
(bad)
call
test
not
push
and
out
mov
stos
div
ret
jns
xchg
or
jmp
jp
mov
pop
or
dec
fldcw
lea
es
sbb
(bad)
jbe
rol
adc
and
retf
inc
ret
jmp
push
and
call
or
fadd
cmp
jl
jmp
jmp
lahf
fwait
xchg
stos
sbb
das
and
and
sbb
xchg
mov
bound
dec
jecxz
push
jae
int
cmc
mov
jnp
sbb
rcr
jae
add
jae
pop
lods
add
scas
jns
sbb
mov
(bad)
popa
cli
adc
call
xchg
inc
mov
adc
adc
xchg
fimul
sbb
data16
ja
sbb
stc
ss
mov
test
dec
adc
push
adc
or
xchg
aad
cld
imul
push
(bad)
sti
mov
ins
adc
cmc
ret
fdivr
mov
cmp
movs
out
fnstcw
xor
mov
mov
mov
dec
pop
or
xlat
cmp
jne
int
sbb
mov
gs
rcr
fs
dec
inc
push
jne
mov
rcr
push
mov
push
repnz
dec
and
xchg
inc
pusha
add
mov
in
lods
mov
mov
xor
stos
int
cwde
das
push
stc
jle
daa
(bad)
pop
je
inc
movs
repz
(bad)
std
jae
mov
rol
stos
jae
mov
jl
sbb
fdivr
mov
mov
movs
cmc
mov
xor
je
std
and
mov
jbe
push
mov
dec
cmp
push
fs
fld
and
mov
ja
push
jecxz
mov
cmc
jnp
mov
pop
cmps
movs
icebp
dec
ja
or
mov
sub
arpl
fisttp
mov
jmp
enter
hlt
cmp
sbb
push
cmps
mov
xchg
cdq
mov
icebp
je
enter
sub
fs
mov
mov
data16
iret
jae
or
fst
add
and
mov
std
dec
in
pop
out
add
cmps
fcom
or
jns
adc
stc
mov
not
jne
sub
mov
mov
jb
xor
mov
call
adc
fwait
pop
mov
mov
mov
push
jae
cdq
sbb
pop
xcrypt-ofb
cmps
test
push
pop
sub
fs
adc
xchg
push
call
lea
test
sahf
and
sub
xchg
cmp
push
imul
jb
je
xchg
mov
aaa
cmps
push
test
movs
jae
imul
rcl
push
fcomp
ret
adc
cmp
in
ins
xor
push
mov
xchg
test
xchg
jp
ja
jmp
shl
cmc
mov
int3
out
and
xor
sbb
(bad)
mov
repnz
sbb
mov
shr
les
fucom
xchg
cdq
mov
outs
add
inc
mov
fld
xor
cmp
mov
mov
xchg
ins
enter
mov
hlt
mov
js
jg
sbb
push
sbb
out
jae
fwait
rcl
sub
pop
icebp
(bad)
and
xor
mov
adc
repnz
repnz
dec
cmp
jae
mov
out
ins
mov
push
hlt
pop
cmp
xor
fcom
jae
mul
fwait
movs
test
repz
stos
les
ins
mov
stos
outs
ret
cmp
and
shl
test
pop
call
aas
xchg
enter
ja
pusha
and
sbb
mov
inc
mov
sbb
adc
sub
cmp
mov
jg
dec
pop
ss
call
in
jae
repnz
push
imul
shl
adc
test
inc
xor
ret
xchg
push
dec
dec
into
sbb
ins
xchg
jb
inc
cdq
(bad)
cmc
mov
jl
jecxz
push
pop
mov
push
mov
mov
xchg
scas
and
repnz
xor
mov
jmp
mov
or
dec
aam
mov
in
out
lods
or
add
dec
mov
mov
ficom
jg
aaa
call
mov
jl
cmp
add
xchg
daa
movs
in
jo
retf
mov
jl
jecxz
xlat
and
sbb
out
nop
cmp
popa
scas
in
push
punpckhbw
and
aam
nop
adc
sub
rcl
inc
in
jnp
mov
lods
sti
shl
sbb
rcl
inc
jo
ret
cli
adc
cmp
daa
dec
mov
cmp
pop
mov
aas
call
rep
test
inc
push
cmps
add
jne
sub
jmp
jg
add
adc
cmp
cmp
daa
pop
sbb
mov
mov
mov
test
add
mov
or
inc
or
cmp
jbe
pextrw
out
loopne
fwait
cmp
jecxz
(bad)
push
sbb
ret
mov
fs
mov
sub
addr16
mov
sbb
pop
mov
xchg
pop
jae
loop
les
shl
add
mov
sub
mov
(bad)
sbb
fst
cld
fistp
mov
fsubr
leave
xchg
push
or
mov
adc
add
xchg
mov
mov
enter
cmp
cwde
add
out
hlt
dec
cmc
scas
mov
jnp
inc
(bad)
cmp
je
and
and
mov
cmps
daa
jae
or
push
xlat
and
sbb
adc
nop
sub
xchg
mov
sbb
fst
jnp
mov
out
push
rcr
popa
sub
test
std
hlt
mov
pop
push
pop
and
jp
sbb
addr16
out
js
add
sbb
mov
into
test
(bad)
jae
retf
test
sbb
jge
sbb
mov
cwde
and
jae
pop
retf
add
lahf
jmp
add
es
dec
clc
jle
test
cmp
das
push
mov
(bad)
push
xchg
jecxz
inc
jns
neg
mov
mov
fcom
lods
outs
inc
jae
in
mov
sbb
xlat
mov
xor
pop
mov
xor
test
pop
xchg
popf
(bad)
outs
es
in
shl
les
inc
mov
adc
pop
out
and
sub
int3
pop
ror
adc
leave
jne
mov
inc
mov
sbb
aaa
out
sub
ret
mov
jb
enter
push
add
rol
aam
cmp
jns
mov
scas
out
pushf
jmp
mov
mov
cwde
xchg
ret
test
adc
mov
std
movs
jp
mov
sbb
push
mov
stc
lea
xchg
pop
xchg
jno
popa
pop
pop
jp
shl
ins
xchg
sub
bound
xchg
and
lea
leave
cmp
aad
fwait
jno
push
fiadd
jae
arpl
sub
stc
scas
cdq
mov
loopne
xor
js
mov
xchg
lea
std
cs
jmp
div
repnz
push
div
cmc
cwde
(bad)
fbstp
pop
adc
mov
jnp
xchg
xor
xor
mov
pop
test
and
imul
dec
hlt
push
pusha
pop
jl
or
not
ret
inc
movs
movs
sti
pop
lds
xchg
fwait
pop
scas
cli
inc
in
sbb
push
(bad)
pop
scas
lahf
dec
ss
ss
jg
sbb
enter
fs
mov
call
mov
mov
xor
int3
xlat
xlat
test
fwait
retf
jo
enter
dec
dec
sbb
fnstcw
sbb
call
sbb
scas
pop
jecxz
int3
jecxz
hlt
push
push
gs
sub
push
call
xchg
(bad)
loop
fisttp
push
pop
jmp
in
repz
mov
jmp
lds
inc
cdq
call
div
mov
test
bound
mov
mov
cmp
addr16
pop
and
jae
mov
xchg
sbb
stos
je
mov
add
adc
jg
push
add
pop
mov
add
in
ret
ss
jg
jns
xor
adc
into
add
lahf
sub
push
mov
dec
sbb
cmp
lds
mov
jmp
aaa
ds
jmp
mov
push
cmps
pop
stos
jmp
xchg
lods
mov
imul
mov
je
adc
pop
das
mov
bnd
dec
jmp
inc
sbb
fsubr
aad
repz
mov
mov
(bad)
fist
loopne
lock
or
mov
fidiv
sti
fdiv
dec
ror
xchg
pop
and
fdecstp
xor
push
movs
dec
jae
out
movs
sub
rcr
daa
jno
fcmove
pop
jbe
mov
test
and
mov
popf
mov
push
and
inc
scas
push
out
fistp
push
xor
popa
jnp
hlt
repz
iret
xchg
jge
xor
add
popf
xor
ja
xor
jae
push
cld
inc
xor
inc
popa
ret
call
inc
push
fdiv
fstp
clc
dec
popf
lock
mov
xchg
or
xchg
add
icebp
cli
lods
(bad)
mov
xchg
fdivr
sub
mov
mov
mov
repnz
loope
inc
loope
stc
std
pop
repz
call
ins
push
push
mov
fs
push
stos
std
and
ins
repnz
mov
inc
aas
fadd
nop
movs
jg
aam
shl
add
std
pop
xor
mov
dec
das
imul
inc
cmp
mov
aad
sub
mov
mov
cmp
aam
mov
push
jmp
push
or
mov
stos
jbe
jmp
mov
xchg
sbb
sbb
dec
mov
rcl
outs
xchg
pushf
enter
xor
sar
in
in
mov
scas
in
imul
or
and
mov
xchg
in
mov
and
frstor
sub
mov
sub
cmp
push
clc
(bad)
je
leave
outs
jmp
push
jb
mov
mov
lds
test
push
inc
and
sbb
mov
movs
jg
jg
test
push
and
pop
mov
xchg
in
stos
adc
jae
fwait
pop
in
jb
test
sbb
sbb
scas
lds
aad
adc
push
sbb
mov
dec
outs
and
xor
retf
add
out
ret
sbb
jle
add
adc
xlat
jp
je
dec
jb
(bad)
fs
xor
sbb
out
sar
add
cmp
hlt
mov
pop
addr16
jb
stc
sub
popa
js
dec
in
pop
push
repz
pushf
xchg
loope
push
sbb
aam
aad
in
push
sar
shl
popa
xor
cs
movs
ja
mov
sahf
test
and
mov
mov
and
inc
std
pushf
inc
lods
xor
mov
jbe
rcl
mov
mov
sbb
jecxz
aaa
jp
adc
dec
sub
jmp
in
pop
sbb
xor
mov
(bad)
sbb
sub
ret
jp
shl
ret
icebp
mov
dec
aas
cmp
xchg
jns
arpl
ins
push
ficomp
ret
int
not
aaa
mov
xchg
mov
fnstcw
shl
xor
or
arpl
sbb
push
outs
cli
mov
in
fnsave
aas
and
xchg
or
and
popf
out
lods
popf
dec
sbb
mov
pushf
mov
out
retf
test
dec
mov
mov
fbld
sub
jmp
out
scas
movs
sahf
push
aad
cmp
mov
cli
pop
mov
shl
je
outs
jmp
adc
not
and
test
cs
pshufw
shl
dec
std
stos
out
lods
fild
lahf
fcomp
pop
int3
sbb
pusha
je
xchg
adc
das
loope
dec
inc
jae
les
or
fstp
cmp
mov
inc
mov
adc
cli
lods
pop
jne
pop
push
mov
adc
mov
adc
mov
ret
stos
cmp
xor
repnz
ror
sbb
call
les
sar
dec
ja
mov
repnz
pop
add
fcmovu
sbb
inc
fs
jns
out
pushf
mov
push
mov
ins
mov
scas
movs
inc
out
stos
jmp
push
add
loope
or
sbb
scas
jge
mov
cmp
mov
add
sub
cmc
(bad)
lock
movs
ja
and
sbb
enter
jo
loopne
push
inc
rcl
out
sbb
pop
cli
movs
outs
mov
or
std
dec
dec
leave
adc
lods
jne
inc
xchg
cmp
stc
sub
pop
xchg
sbb
fwait
pop
xchg
jle
call
aad
jge
sahf
xchg
cmp
scas
sbb
jge
push
jae
ror
pushf
sbb
or
cld
mov
(bad)
jb
loopne
dec
add
sub
ret
add
push
inc
inc
inc
sub
mov
jno
aam
cmp
push
fcom
call
test
test
jno
movs
xor
sbb
leave
ret
dec
into
mov
jae
xor
mov
add
sbb
test
pushf
push
push
in
es
(bad)
cld
sub
jl
xor
jnp
mov
or
mov
imul
jg
mov
shl
je
xlat
out
sbb
(bad)
aas
sbb
xchg
ja
aaa
mov
pop
jl
cmp
fadd
xchg
xor
test
aad
test
cmp
lds
cmp
inc
rcr
inc
loopne
push
jmp
dec
in
popf
xor
fucom
shl
sub
adc
sbb
sbb
adc
mov
icebp
inc
sbb
xchg
pop
mov
or
lahf
nop
sar
test
xor
xchg
xor
xchg
adc
dec
jmp
jb
test
xchg
ret
mov
stc
mov
sub
mov
sar
lods
mov
mov
je
pop
adc
jge
inc
jae
or
sbb
or
dec
int3
fst
mov
mov
xchg
jl
(bad)
xlat
fcmovnbe
div
in
or
mov
push
cmps
jmp
xchg
add
adc
and
mov
jp
aam
dec
retf
push
aam
cli
arpl
xor
or
mov
pop
pushf
pop
sbb
push
inc
lock
les
adc
mov
lock
cpuid
inc
xor
pop
mov
jg
lahf
push
and
adc
xlat
icebp
cmps
xor
or
ss
jae
test
mov
xchg
jbe
mov
(bad)
sub
inc
push
test
mov
cmp
rcl
test
mov
adc
scas
nop
test
fcmovb
in
sub
dec
ror
icebp
retf
mov
push
adc
repz
add
adc
fs
or
fidiv
popa
mov
jns
arpl
shr
shr
xchg
stos
mov
sbb
(bad)
xchg
in
sbb
adc
out
jl
xchg
in
imul
jae
ret
inc
push
and
sbb
loop
fbstp
mov
add
xchg
cmp
inc
or
aas
pop
lds
popf
aam
lods
inc
mov
and
jle
mov
sbb
scas
and
mov
adc
mov
ins
push
ss
(bad)
jmp
push
mov
out
cmp
loop
jg
dec
sub
aas
je
jg
cmp
pop
push
retf
shl
mov
jle
xchg
inc
add
mov
pop
sub
pop
inc
in
add
cmp
sti
or
ret
sbb
add
loop
(bad)
pushf
cmp
sbb
dec
inc
shl
xchg
repnz
(bad)
sbb
jl
dec
ja
jg
mov
bound
icebp
inc
aad
and
fstp
cmp
xchg
call
cmp
push
das
push
imul
jbe
stos
lea
imul
je
mov
mov
and
aaa
mov
call
jae
icebp
push
mov
bound
xchg
sbb
adc
xchg
ret
mov
in
jae
pop
iret
test
xchg
imul
aam
mov
rcr
push
sbb
sbb
loope
inc
add
xchg
fidivr
add
sbb
into
js
movs
cmc
inc
mov
adc
sbb
pusha
js
mov
or
xchg
dec
(bad)
sbb
pop
and
add
retf
inc
and
dec
or
test
pop
ins
sub
rcr
aaa
cmps
cmps
mov
or
jae
std
sbb
inc
fild
cld
inc
(bad)
or
int
into
mov
jae
fdivrp
add
retf
xchg
push
xor
ins
push
push
jg
xchg
cmp
stc
mov
sbb
mov
mov
das
sub
pop
out
fsub
and
xchg
mov
ins
mov
sahf
push
push
xchg
jecxz
aam
(bad)
cmp
fidivr
pusha
xchg
xchg
cs
popf
outs
jnp
in
jae
dec
pop
pop
repnz
sbb
leave
sub
mov
jmp
xchg
clc
(bad)
sar
adc
je
xchg
cmp
xor
shl
test
or
sbb
hlt
dec
test
xchg
jmp
add
inc
outs
clc
scas
adc
pop
mov
icebp
sbb
sbb
xchg
adc
stos
pushf
mov
adc
cmp
xchg
or
(bad)
jb
test
mov
out
push
sbb
pop
sbb
arpl
lods
aad
inc
xchg
dec
stos
inc
add
jmp
pop
ins
cmc
mov
(bad)
jae
sub
shl
sbb
jbe
ret
cmp
fiadd
add
dec
pop
inc
or
popf
test
jae
aas
add
idiv
cmps
cmps
imul
xchg
mov
rol
sbb
xchg
test
cmp
mov
mov
into
push
les
jge
xchg
repnz
daa
cli
mov
jg
fldcw
repz
or
sbb
jb
jae
jns
jno
mov
xchg
stos
jl
test
and
pop
jae
adc
data16
or
int
jl
(bad)
jp
xor
push
aas
fnstenv
dec
stos
loop
fwait
js
fsubr
scas
mov
jl
jb
js
retf
scas
sti
data16
cmp
adc
mov
push
aaa
mov
shr
popa
in
jl
jae
idiv
mov
sub
sub
and
out
ret
daa
jbe
(bad)
(bad)
rcr
add
cdq
jbe
popf
lods
or
ins
adc
hlt
inc
(bad)
and
jle
xor
sub
mov
and
xchg
outs
leave
xlat
and
and
shl
call
test
push
cld
add
cdq
add
cs
int
push
sbb
in
sub
mov
pop
mov
jnp
cmp
push
repz
leave
xlat
dec
or
les
cmc
mov
jecxz
sub
xor
mov
in
mov
fcom
sbb
fwait
ds
pop
and
push
imul
clc
cmps
push
mov
or
lods
mov
test
sbb
adc
push
dec
les
js
mov
mov
stos
mov
rcl
sub
xchg
or
sub
cmp
and
scas
lds
xor
sar
in
icebp
ss
fsub
mov
fnstcw
(bad)
adc
jae
mov
inc
pop
push
mov
sbb
xchg
cdq
lea
mov
mov
push
jo
mov
sbb
rol
jns
mov
int
scas
scas
pop
addr16
gs
mov
mov
adc
ret
cmp
adc
fcmovb
jp
cmc
inc
fimul
sar
scas
stos
sub
cmp
jb
and
dec
fisttp
hlt
jecxz
cli
hlt
mov
adc
retf
push
fs
enter
shr
fwait
xor
in
dec
pop
sub
loope
xchg
cmp
es
lds
repz
aam
mov
xchg
push
push
cli
jmp
fcom
retf
mov
and
inc
test
sbb
int3
sahf
repnz
xor
jns
test
push
mov
sbb
nop
shl
(bad)
xor
inc
adc
xor
cmp
int
push
or
out
mov
adc
scas
cmp
icebp
add
sub
sub
xchg
mov
mov
out
dec
jns
mov
das
fs
mov
adc
add
jmp
(bad)
adc
in
out
ins
xchg
cmc
test
sub
jle
add
je
inc
xor
xchg
push
je
(bad)
pop
or
mov
pop
push
dec
(bad)
mov
jle
adc
sub
mov
adc
and
call
retf
push
cdq
jmp
rcr
pushf
mul
mov
in
adc
add
dec
xchg
jne
mov
stc
xor
lock
adc
jp
lods
xor
push
pop
(bad)
repnz
mov
fcos
lods
sbb
aad
add
(bad)
lods
fsubp
adc
sub
outs
aad
pop
outs
hlt
aam
pushf
cmp
sbb
add
sub
xlat
ror
push
sub
ins
jmp
jl
es
retf
xor
cli
in
xor
(bad)
sub
sbb
cmp
repz
popf
jbe
mov
jl
imul
jl
shr
jecxz
lods
cmp
sahf
js
mov
jg
in
test
call
pushf
pop
jbe
push
ins
ja
adc
sbb
das
icebp
(bad)
hlt
fst
aaa
bound
adc
adc
sbb
shr
pop
add
cmps
mov
mov
lahf
sbb
jmp
mov
xchg
aad
movs
inc
cld
out
jae
fnsave
call
push
adc
dec
out
xchg
call
jmp
jp
test
ins
icebp
and
mov
ss
mov
add
(bad)
out
ins
jb
aad
lea
cs
inc
enter
inc
and
and
in
mov
push
jmp
popa
cs
push
ss
xor
inc
mov
jmp
xchg
hlt
inc
dec
adc
ins
and
cmps
fidiv
pushf
xor
enter
ret
pop
add
arpl
inc
mov
jecxz
movs
push
out
mov
push
inc
cmc
mov
push
sti
add
xchg
dec
popa
sub
adc
cmps
mov
push
clc
pop
xor
jae
sbb
push
mov
xchg
sbb
(bad)
jns
in
mov
pop
loopne
jl
xchg
popf
inc
pop
jecxz
cmp
jle
arpl
xchg
mov
dec
jmp
jns
in
adc
inc
pop
inc
push
mov
sub
jle
cmp
dec
push
dec
add
outs
shr
push
mov
mov
popf
jns
and
imul
jmp
push
cmp
mov
imul
sub
cmp
(bad)
aad
mov
arpl
jb
and
add
outs
mul
xchg
outs
mov
fdiv
fmul
inc
aam
das
js
imul
pop
aas
jb
in
movs
push
call
movs
fcom
push
repz
inc
and
mov
mov
push
adc
(bad)
scas
nop
retf
cwde
daa
add
and
and
fild
sbb
fwait
mov
push
cmc
dec
int
fwait
lods
sbb
ss
or
sbb
push
jmp
xor
mov
jmp
call
jmp
xchg
jecxz
jbe
cs
mov
hlt
loop
ss
lds
pop
lods
into
ss
add
int
pop
push
lds
rol
inc
bound
cmp
jmp
mov
clc
(bad)
ins
pusha
push
adc
nop
push
inc
test
clc
push
mov
je
jnp
test
push
aam
stc
xchg
pop
call
and
mov
xchg
jno
push
xchg
shl
ret
jbe
adc
ror
mov
pop
shr
sbb
and
xor
jp
out
fnstenv
rcr
push
push
aad
adc
pop
shl
pushf
pop
or
xchg
mov
stc
xor
int
aas
data16
pop
cmp
int
imul
test
jg
adc
push
adc
jnp
jp
cmp
in
daa
in
jae
aaa
fsqrt
bound
ds
test
mov
or
in
mov
sub
popa
out
sub
imul
add
sbb
das
jb
xor
in
fyl2x
jmp
in
mov
xchg
push
out
lods
xlat
jae
pop
aas
sub
movs
dec
sbb
cmp
mov
out
iret
loopne
inc
fisub
out
mov
icebp
or
dec
cdq
cmp
pop
pop
into
dec
or
mov
imul
pop
ss
sbb
movs
sub
lods
mov
clc
rcl
jmp
dec
fst
dec
jge
jae
hlt
add
rcl
xchg
adc
add
sahf
adc
xchg
out
pushf
out
loopne
jecxz
clc
loop
mov
addr16
dec
out
xchg
push
xchg
jns
imul
jae
test
idiv
sbb
dec
add
out
retf
and
sbb
rol
test
lods
mov
mov
and
sti
adc
adc
push
push
mov
sbb
adc
cmc
push
and
hlt
cmp
jmp
mov
(bad)
icebp
add
xchg
xchg
sti
and
inc
jnp
dec
daa
jae
pusha
or
push
mov
mov
sub
std
xchg
push
in
xchg
scas
inc
dec
mov
mov
mov
pop
push
add
aam
pop
lods
ss
pushf
cs
sub
pop
in
lods
inc
loope
(bad)
neg
mov
cmp
(bad)
xchg
in
mov
adc
jg
pop
pop
xor
pushaw
sub
jo
es
ins
xchg
jae
hlt
or
adc
jge
test
cld
jle
adc
div
inc
in
pop
xchg
jb
cmp
jae
loope
jg
pop
hlt
pop
sbb
mov
repnz
lahf
out
cmp
mov
sbb
ss
sbb
call
and
or
outs
repz
pop
mov
jae
jl
rcr
scas
adc
xor
jecxz
and
test
pop
stos
icebp
jmp
or
inc
lods
stos
jne
je
pop
shr
int3
xor
xchg
(bad)
xchg
into
mov
xor
jae
push
or
imul
sahf
inc
mov
jo
stc
jno
and
jecxz
es
std
(bad)
(bad)
arpl
das
jg
sub
inc
push
sbb
jae
xchg
cs
fistp
sbb
and
mov
xor
pop
pop
push
sbb
es
jnp
out
jle
ss
mov
jl
aas
rol
scas
inc
mov
icebp
xor
sbb
push
xchg
dec
nop
in
adc
jae
pop
fwait
arpl
mov
dec
fistp
lods
hlt
sub
cmp
ins
jg
or
xor
hlt
movs
je
jae
lea
cmp
sbb
mov
or
sbb
mov
test
xchg
arpl
inc
sbb
push
mov
and
ins
inc
mov
pop
sbb
(bad)
sub
mov
loopne
mov
sub
mov
(bad)
dec
pushf
lahf
sti
lea
xchg
out
stos
fwait
mov
int
jg
daa
jo
push
ja
mov
mov
imul
mov
fdiv
cmc
test
pop
in
fstp
or
push
and
fild
test
stos
mov
xor
cmps
es
mov
fwait
ins
or
inc
adc
and
sahf
fild
jae
rol
mov
pop
or
cld
inc
pop
stc
and
adc
rcr
je
fdiv
pop
fs
movs
mov
pop
nop
es
test
inc
aaa
inc
xchg
in
pop
sar
xchg
xchg
adc
or
and
mov
test
mov
add
push
addr16
test
das
mov
shl
xchg
jo
test
cmp
arpl
pop
mov
lods
icebp
cli
aad
pop
mov
sub
repz
pop
retf
enter
arpl
adc
repnz
inc
dec
push
mov
pop
jne
push
adc
adc
and
lahf
loopne
dec
int3
jb
jae
mul
push
add
and
add
xor
inc
jle
addr16
add
sbb
clc
cwde
xor
and
in
mov
fdivr
adc
aas
outs
pop
call
jno
sahf
xor
fild
(bad)
out
add
es
out
jae
clc
mov
sbb
fwait
and
cmp
or
xor
xchg
scas
sbb
dec
inc
sbb
jae
cmps
or
inc
sub
cmps
sbb
js
out
or
mov
sub
jb
jno
inc
xor
adc
in
mov
jns
adc
ret
xchg
outs
mov
mov
clc
iret
cmps
(bad)
cwde
pop
fidiv
mov
cmp
xor
inc
aas
xchg
and
and
mov
sub
dec
xchg
addr16
and
jp
dec
dec
mov
sbb
mov
mov
sbb
ret
pusha
in
sbb
outs
cmovno
out
mov
mov
sbb
xor
call
jno
in
and
jbe
add
push
adc
jg
shl
test
xor
(bad)
adc
popa
aam
scas
xchg
xor
xor
sbb
in
mov
sub
cmp
push
mov
sub
inc
sub
cmps
mov
stc
xor
and
jae
dec
push
mov
mov
fidivr
inc
das
js
xor
dec
mov
add
sbb
outs
aam
int3
shl
inc
jnp
sbb
cmp
call
mov
mov
and
movs
xchg
dec
imul
and
xchg
repz
or
mov
fimul
dec
dec
addr16
fsub
pushf
mov
xchg
xchg
je
xcrypt-ecb
cmps
mov
addr16
cmc
js
dec
or
push
loope
jmp
jne
stos
cdq
adc
mov
scas
push
xchg
fld
sub
cli
das
std
mov
cmps
mov
mov
or
xchg
mov
lds
stos
mov
es
cmp
ret
repz
icebp
add
mov
add
je
cli
adc
mov
sub
or
jl
jecxz
leave
adc
or
stos
outs
jae
xchg
lea
sbb
inc
stc
mov
dec
inc
daa
fwait
repz
movs
jbe
lods
loope
cmp
ins
jmp
emms
sbb
pusha
inc
add
cdq
add
add
repz
xor
sub
dec
(bad)
xor
stos
mov
and
in
xchg
jae
mov
pop
sbb
xchg
xchg
bound
call
jns
inc
popf
mov
mov
dec
sbb
sbb
cmp
cmc
nop
pop
js
sub
push
ds
call
cmps
sub
jo
xor
nop
retf
fst
retf
mov
cmps
mov
ficomp
mov
sub
jmp
xchg
gs
add
jecxz
shl
mov
push
mov
or
and
pop
addr16
test
popa
jmp
fadd
jge
loop
jmp
jb
push
movs
dec
iret
call
jae
inc
and
fxch
scas
dec
inc
mov
fisttp
in
xor
sub
lods
je
xchg
sub
lods
fistp
sbb
cmp
cmp
sbb
loope
xchg
pop
mov
mov
je
sub
mov
adc
fs
mov
rol
hlt
cmc
test
iret
scas
mov
xor
cmp
mov
in
mov
stos
aam
mov
pop
pop
add
ins
rcr
sbb
push
je
lock
sbb
les
mov
fild
or
vmovlps
je
cwde
retf
cmp
mov
test
push
add
xor
and
mov
sub
dec
shr
imul
mov
mov
mov
cs
sbb
mov
jnp
or
mov
aas
gs
ds
sbb
fcomp
jbe
popa
dec
outs
jae
inc
mov
mov
clc
mov
xchg
ds
fimul
mov
add
(bad)
(bad)
mov
out
sahf
data16
pop
(bad)
xchg
pop
dec
cmp
test
(bad)
and
rcr
sbb
into
adc
sar
mov
mov
arpl
mov
xor
xor
pop
mov
pop
sub
sbb
push
les
sbb
fcmove
in
mov
aas
movs
ror
out
fcmove
and
in
sub
test
jns
mov
test
ss
jo
jmp
mov
clc
or
dec
mov
add
mov
fisttp
xchg
adc
(bad)
ror
outs
push
ins
cmp
sbb
mov
test
xor
out
xchg
sti
jg
pop
retf
lods
and
arpl
in
jnp
aas
and
mov
mov
sbb
lds
mov
jg
test
popa
pop
xchg
sub
xor
in
test
jae
cmps
pop
inc
fcomp
aas
push
and
fcomp
mov
les
ja
lods
cmp
movs
xor
jae
push
mov
push
xchg
push
adc
pop
sub
and
jle
adc
mov
push
cmp
jae
mov
mov
pop
es
and
in
mov
dec
or
pop
and
mov
test
jl
cli
and
gs
cmp
or
and
aam
dec
jbe
in
jb
and
test
movs
xchg
adc
fstp
jae
jnp
and
test
loop
into
mov
adc
xchg
dec
fwait
sub
idiv
pop
ins
fild
cmp
aam
dec
(bad)
sbb
jae
jmp
cld
ja
mov
mul
ins
dec
mov
sbb
sbb
mov
mov
lods
je
mov
pop
mov
sub
loop
sbb
sbb
in
cmp
mov
fcmovbe
mov
bound
push
xchg
adc
dec
push
cmp
xlat
aas
js
sbb
iret
push
add
stos
iret
dec
xor
push
mov
adc
pusha
jp
loope
je
inc
imul
add
pop
push
nop
lods
dec
jl
cmps
adc
jl
into
hlt
out
sbb
test
mov
and
lods
cdq
push
lock
ss
js
mov
inc
jne
dec
inc
dec
das
mov
mov
fild
fs
mov
pusha
and
clc
test
aad
mov
mov
add
adc
aam
repnz
ja
push
fnstenv
jge
fst
add
jmp
mov
push
push
int
imul
dec
mov
push
arpl
dec
mov
jae
mov
lods
pop
jnp
js
movs
jae
inc
cmps
jnp
mov
mov
aaa
mov
out
or
test
xor
jmp
nop
jmp
xchg
mov
or
adc
jae
std
cmps
add
mov
(bad)
sub
mov
sub
jmp
cmc
jge
aad
jno
aas
or
pushf
mov
scas
jb
mov
pop
dec
js
xor
shl
fst
enter
stos
push
es
mov
cs
lods
xchg
sub
pop
movs
fld
cmp
jmp
stos
pop
pop
push
jae
dec
pop
xchg
inc
mov
mov
pop
sbb
cs
ja
cmp
daa
(bad)
or
xchg
mov
stos
mov
mov
push
inc
stos
xlat
ret
jae
push
out
inc
pop
inc
sbb
sub
(bad)
pushf
std
pop
xchg
(bad)
jae
lods
lods
addr16
adc
inc
cmp
mov
xor
sbb
or
dec
adc
or
cmp
mov
sbb
ds
xor
adc
add
mov
mov
push
out
mov
jl
stos
adc
jmp
cdq
rol
push
or
scas
sti
sbb
mov
(bad)
loopne
fs
add
movs
adc
sbb
es
cdq
and
jae
pop
push
xchg
push
push
(bad)
out
sbb
xchg
sbb
add
in
push
lods
mov
jae
jge
retf
xchg
dec
mov
sahf
mov
imul
mov
xchg
xchg
dec
test
leave
push
adc
mov
push
ins
in
xor
add
jne
sbb
mov
(bad)
stos
xor
into
lds
lods
sub
fdivr
pop
adc
sbb
icebp
adc
cdq
mov
pop
mov
adc
push
imul
jb
int3
add
les
cmp
xchg
in
xchg
(bad)
mov
rcl
jae
mov
cli
test
stc
js
cmps
and
add
and
cmp
jbe
sbb
mov
and
jg
das
sub
push
lock
jl
push
pusha
sbb
mov
lea
stc
push
outs
loop
push
scas
popa
jno
push
sbb
mov
add
inc
adc
cld
ds
sbb
inc
push
mov
mov
call
inc
pop
lahf
pop
enter
mov
mov
inc
mov
(bad)
test
lds
sbb
sar
push
test
mov
dec
es
dec
daa
xchg
pop
pushf
mov
jl
test
jbe
or
dec
adc
xchg
xchg
mov
out
sbb
inc
stos
xchg
shr
xor
mov
mov
daa
push
push
aaa
dec
(bad)
fsub
sub
mov
imul
mov
inc
sbb
movq
xor
add
call
adc
push
or
cli
mov
int
mov
xchg
dec
movs
call
dec
mov
repz
jns
shr
mov
mov
aad
imul
arpl
xor
ja
mov
push
push
das
lea
xor
fs
inc
into
jo
test
sub
clc
stos
test
fldcw
in
cmp
rcr
jae
sbb
dec
call
xchg
dec
pop
out
jae
leave
es
sar
movs
(bad)
(bad)
mov
cli
mov
lock
popf
inc
dec
cs
fcomp
push
pop
test
retf
sbb
mov
stos
test
mov
call
jns
test
stc
or
mov
cmc
bound
sub
xor
in
xchg
sbb
imul
fcom
sbb
fld
jmp
xchg
mov
retf
ins
fwait
adc
add
pop
mov
push
adc
stos
push
pop
mov
sub
mov
dec
jae
xor
push
loopne
push
inc
sbb
pushw
cmp
fcmovb
pop
ss
retf
add
rcr
xchg
ins
mov
outs
push
mov
mov
aaa
push
ret
cmp
dec
(bad)
cmps
test
daa
xchg
test
mov
push
pop
out
mov
pop
loop
mov
or
iret
add
ins
je
out
cs
sbb
aas
mov
cwde
and
std
dec
mov
daa
sbb
aas
repnz
mov
scas
push
mov
lods
sbb
and
mov
pop
test
scas
mov
jle
add
dec
iret
mov
(bad)
xor
pushf
lock
pop
and
xchg
xlat
ja
jae
test
out
iret
jb
repnz
(bad)
cmp
daa
sbb
int
enter
test
jae
jmp
sbb
xchg
mov
ins
xchg
les
addr16
or
stc
lock
sbb
dec
in
into
js
clc
cdq
or
outs
jp
ins
imul
ss
rol
jae
mov
jnp
sbb
sbb
pop
rcr
pop
out
push
scas
arpl
adc
outs
ret
xor
mov
xor
jle
jne
pop
or
mov
fadd
mov
xor
or
xchg
push
pop
adc
call
stc
mov
int3
xchg
jo
dec
in
or
pop
lahf
cmps
repz
lods
sbb
out
enter
pushf
mov
imul
test
adc
pop
lods
xor
in
repz
xchg
adc
lock
jae
dec
sahf
imul
push
inc
ss
hlt
push
retf
shr
xor
jb
stc
xchg
in
outs
add
adc
iret
stos
inc
mov
xor
popa
dec
push
clc
inc
mov
mov
ss
sbb
dec
fst
inc
xor
and
pop
mov
jecxz
xor
push
pushf
ss
inc
jg
loopne
xchg
(bad)
(bad)
push
leave
xor
xor
enter
jnp
xchg
jbe
aam
inc
stc
or
daa
or
test
push
shl
jnp
call
in
das
enter
fist
mov
dec
inc
dec
sbb
clc
mov
add
dec
mov
or
test
mov
mov
jae
neg
add
out
test
pushf
xor
push
xlat
fs
les
test
jg
mov
mov
pop
mov
adc
add
fwait
in
je
sbb
js
mov
add
loop
xchg
push
imul
mov
stc
popf
scas
call
adc
imul
xchg
test
lds
and
jmp
loop
fidivr
cmps
dec
mov
mov
push
nop
pusha
push
adc
dec
rol
shl
mov
and
jo
lods
inc
data16
sbb
add
cmp
mov
inc
pushf
push
leave
outs
mov
nop
leave
mov
(bad)
nop
xor
push
or
xchg
scas
outs
pop
rol
fucomi
aas
sti
mov
jno
cmc
sub
sub
cmps
add
jge
daa
push
mov
dec
push
adc
(bad)
stc
push
stc
test
dec
pop
add
test
sub
mov
pushw
push
xchg
(bad)
pop
or
inc
test
jae
cwde
xchg
or
pop
pop
inc
mov
inc
dec
icebp
mov
ret
xor
sub
mov
hlt
push
mov
xor
fdivr
push
aaa
outs
in
mov
je
pop
pop
push
clc
adc
and
adc
jno
adc
rol
pop
popf
aad
bndldx
aaa
xchg
sub
xor
fs
push
jae
mov
imul
xlat
pop
aaa
pusha
pop
arpl
enter
add
data16
inc
popa
lea
cmp
jge
clc
outs
(bad)
xor
fisubr
adc
lods
inc
inc
movs
sti
out
adc
pop
jbe
or
popa
fisubr
cmp
jl
repz
aad
sbb
fst
xchg
mov
mov
aam
mov
fdiv
jge
loopne
scas
dec
mov
pop
jl
jb
into
in
add
jo
inc
lods
(bad)
inc
out
cdq
es
mov
aaa
inc
lea
xchg
jns
jae
pop
shl
in
or
cmp
dec
push
les
ret
xlat
sub
cmp
scas
xlat
rcl
(bad)
aas
mov
jne
jmp
mov
mov
sbb
sub
or
lds
bound
xchg
aad
fst
push
jae
repnz
push
xor
(bad)
mov
mov
ror
xor
aaa
cmp
add
rcl
cli
or
dec
sahf
mov
cld
push
dec
data16
mov
cmp
adc
pop
ja
stos
lods
jg
jnp
and
hlt
inc
pushf
mov
into
fidivr
rcl
cmp
(bad)
hlt
push
adc
mov
xchg
sub
xchg
pop
push
stos
call
(bad)
jbe
cmc
pusha
nop
adc
pop
xchg
dec
push
lahf
jge
mov
mov
sub
loope
sti
cld
mov
xchg
aas
xchg
sete
lock
js
stos
nop
in
arpl
dec
push
jb
mov
add
fwait
and
mov
xor
pop
call
or
int
pop
inc
lds
loopne
movs
xchg
(bad)
push
sbb
xchg
push
jns
jbe
cmp
mov
xlat
popf
jb
dec
mov
fild
mov
cmp
sub
sbb
shr
ret
scas
mov
nop
or
stos
imul
retf
push
mov
repz
call
sbb
scas
outs
or
sti
and
mov
lea
mov
adc
outs
out
aam
push
cmp
push
jae
and
inc
sbb
mov
inc
push
aaa
ror
and
sub
and
sub
ret
ror
inc
or
jecxz
sbb
pop
in
in
(bad)
xor
pushf
inc
jno
mov
repz
in
mov
push
sub
add
pop
or
in
pop
xor
sub
(bad)
shl
fldenv
hlt
cmp
out
dec
or
jae
jo
repz
(bad)
cmps
je
fiadd
js
sbb
pop
test
cmps
jae
lock
ja
inc
outs
xor
cld
jmp
fadd
into
cmp
fwait
cld
xchg
jl
dec
xor
sti
(bad)
ficom
ret
(bad)
cli
or
xor
push
hlt
shl
test
add
mov
test
push
dec
out
pushf
xchg
lods
sar
pop
jae
push
pop
and
mov
adc
xor
arpl
xchg
push
jg
pop
mov
dec
sbb
xor
sub
stc
and
cdq
cmps
cwde
fucomi
pusha
dec
and
cmps
inc
mov
dec
xchg
(bad)
(bad)
cmp
cli
pop
jl
js
jp
jbe
fs
push
aas
mov
test
sti
add
(bad)
jmp
xchg
push
pop
sbb
sub
and
or
jae
fs
dec
mov
adc
mov
outs
imul
pop
fsubr
push
xchg
aad
mov
in
inc
jmp
(bad)
es
sub
or
aaa
jmp
sbb
ins
and
sti
jns
add
test
sbb
pop
aas
add
ins
jae
add
or
push
pop
les
sbb
add
aaa
sbb
ins
mov
sub
mov
mov
ss
cwde
and
or
scas
cdq
cmp
shl
fistp
push
pop
fwait
lods
jo
movs
shl
add
icebp
xchg
lahf
jecxz
jns
sbb
leave
xchg
std
es
sti
adc
push
stos
mov
rcl
mov
ja
and
xchg
scas
sbb
ret
cdq
pop
mov
dec
pusha
xchg
sbb
lahf
sbb
test
mov
aaa
adc
add
dec
xchg
dec
sbb
xchg
sbb
xchg
stc
popa
(bad)
cdq
cmp
sub
int3
sbb
mov
adc
pop
vcvtdq2ps
adc
sbb
sbb
aad
(bad)
push
jg
jge
bound
mov
add
or
sbb
sbb
icebp
xchg
cmp
cli
sbb
movs
imul
retf
inc
mov
dec
xor
and
jmp
pushf
cdq
mov
xor
adc
scas
lods
sbb
mov
cmc
das
stc
gs
int
dec
jmp
ret
sbb
add
repz
xchg
js
inc
xchg
or
(bad)
call
lods
adc
ins
adc
dec
sbb
aaa
and
ficomp
lea
pand
aaa
arpl
out
sbb
inc
push
xchg
inc
pop
fild
sbb
mov
jae
icebp
ins
shld
cmp
jne
call
inc
nop
enter
sbb
sbb
es
xchg
mov
and
jmp
jo
dec
adc
and
(bad)
push
mov
lds
out
xchg
scas
(bad)
mov
mov
fstp
les
pop
sahf
ins
jbe
and
adc
retf
aaa
movs
sti
mov
add
sbb
sbb
push
push
ror
enter
retf
sbb
fistp
fnstsw
mov
xor
and
xchg
ja
dec
imul
add
jae
or
(bad)
into
mov
sbb
enter
and
call
jnp
retf
(bad)
and
mov
(bad)
xchg
and
dec
pop
ins
scas
xchg
arpl
imul
jb
or
je
es
xchg
ret
pushf
push
or
xor
inc
ja
outs
adc
scas
xchg
loope
jecxz
cmps
pop
fs
add
or
inc
mov
and
sbb
sub
push
sbb
add
mov
mov
call
ds
adc
inc
ror
mov
aad
push
int
stos
xchg
mov
xchg
sbb
adc
ins
aam
sub
jne
inc
jno
inc
test
cmp
xor
mov
mov
iret
push
test
xchg
mov
leave
es
jle
sub
xchg
call
js
jmp
div
sbb
enter
and
jno
ret
sub
scas
(bad)
dec
gs
aam
ror
rcl
fdiv
dec
sub
and
ficom
retf
inc
mov
cli
xchg
pop
mov
sbb
inc
jns
fs
repnz
push
push
hlt
movs
push
shl
cmps
xor
jmp
xchg
mov
pushf
add
mov
lea
cs
ja
dec
jl
movs
add
xor
int3
inc
add
in
jg
jno
jb
push
xor
mov
(bad)
and
cmp
(bad)
hlt
jmp
push
cmp
hlt
rcr
inc
adc
ins
test
(bad)
in
movs
bound
cmc
jl
aaa
mov
rcr
test
sbb
and
push
push
fstp
jnp
sbb
in
mov
pop
lahf
mov
test
mov
arpl
scas
icebp
push
fidiv
(bad)
mov
stos
fs
add
and
leave
repz
cmp
push
sbb
add
or
cs
xchg
xchg
pop
lds
js
xor
mov
sbb
xor
pop
sub
add
jae
mov
imul
pop
(bad)
cld
or
retf
dec
fucomip
push
push
add
mov
and
fdiv
jecxz
add
xor
mov
repz
hlt
push
retf
fucomi
xor
sub
call
pop
xchg
inc
loope
(bad)
pop
(bad)
sbb
data16
mov
cmc
out
adc
push
dec
cdq
inc
mov
inc
test
pop
nop
mov
jmp
push
push
add
adc
xor
adc
mov
hlt
adc
add
sbb
or
and
fld
mov
cmp
fs
(bad)
sahf
movs
push
xor
retf
(bad)
sbb
fidivr
out
jnp
mov
jae
push
jge
movs
out
push
push
pop
je
xchg
clc
frstor
dec
stc
mov
xor
xchg
daa
ret
cvtps2pi
lds
dec
ins
pop
push
dec
rol
sub
ja
inc
or
cmp
cld
jmp
call
sub
pop
push
mov
(bad)
call
in
pop
or
sbb
jge
ret
push
push
out
push
mov
into
sbb
(bad)
mov
sbb
dec
in
leave
retf
add
lds
pop
fisubr
jne
add
aad
stc
mov
adc
popf
xor
push
test
jecxz
out
fcmovbe
(bad)
adc
je
jae
not
shl
jb
pushf
lods
pop
push
div
call
inc
test
dec
in
jo
adc
ins
push
loopne
sub
add
mov
xlat
inc
in
sub
loop
xchg
pop
sti
dec
pushf
add
sbb
cmp
sbb
leave
dec
lods
leave
stos
adc
stos
push
jnp
sub
jbe
xchg
mov
sub
jae
adc
jnp
and
int
jle
cld
sbb
fsubr
ins
cmp
fmul
jmp
jb
mov
mov
sbb
ret
sti
dec
cmp
dec
mov
mov
mov
sbb
scas
xor
lds
js
hlt
aas
jne
aas
fdiv
scas
and
loopne
jge
cmp
adc
or
aam
and
push
ja
jae
mov
adc
sbb
xchg
adc
in
dec
adc
or
sub
lock
mov
fiadd
call
push
push
rcr
or
xchg
adc
cli
cmps
sub
mov
sub
adc
inc
leave
jb
in
das
cs
mov
adc
pop
adc
scas
rcl
sbb
xchg
call
push
es
push
es
gs
mov
push
push
test
xchg
ds
mov
je
cmp
pop
stos
lods
aaa
jbe
xchg
and
inc
mov
daa
push
cdq
je
or
and
sbb
adc
int
adc
in
add
mov
movs
xor
jae
(bad)
jbe
push
adc
inc
fs
ins
mov
xor
lods
neg
fs
sub
dec
xchg
push
xchg
out
popa
movs
fcom
cmp
jp
les
movs
imul
dec
stos
push
sbb
cmp
jmp
push
or
test
ret
dec
dec
mov
push
pop
sbb
mov
and
cmp
fistp
push
or
mov
in
and
jnp
stos
sub
ret
mov
sub
pop
mov
cli
sbb
sbb
mov
cmps
int3
cwde
mov
push
cmps
sahf
xchg
jnp
cmps
ret
cmp
inc
pop
add
int3
xchg
iret
dec
sbb
jae
inc
js
push
cli
into
(bad)
(bad)
jne
call
(bad)
xor
cwde
retf
jecxz
pop
fcomp
daa
fidiv
jge
jl
popf
sahf
lods
sbb
out
popf
ret
aaa
es
add
sub
imul
add
pop
test
push
test
push
sbb
add
mov
mov
fwait
out
mov
(bad)
fadd
mov
aam
ja
lahf
push
mov
dec
sbb
xlat
mov
or
sbb
mov
and
push
xchg
xor
cmps
sbb
xor
cdq
scas
fisub
or
pop
cmp
push
sbb
push
or
sbb
inc
stc
es
sti
scas
mov
jbe
add
imul
call
data16
lods
hlt
sub
push
add
aam
sbb
jmp
mov
mov
jbe
(bad)
sbb
mov
aad
(bad)
jb
stos
scas
jb
stos
mov
or
pop
mov
inc
xor
xchg
inc
inc
sbb
stos
(bad)
jae
cld
ss
xor
dec
loope
sub
xor
lds
(bad)
push
iret
and
xor
sub
pop
jbe
out
aaa
sbb
adc
cmp
call
cmp
pop
and
mov
sbb
addr16
fadd
shl
sub
mov
push
aam
fstp
mov
rcl
das
inc
sbb
xchg
mov
mov
xchg
jne
push
fs
mov
xchg
int
clc
(bad)
jnp
inc
inc
inc
fsubr
popa
push
ror
pop
jae
popa
loop
es
xor
mov
sahf
inc
and
fwait
jmp
sbb
sbb
cmp
mov
jp
fs
add
sub
sahf
lock
push
xchg
mov
jle
xchg
out
scas
aas
xlat
xor
jmp
icebp
xor
ins
mov
mov
cmp
push
fiadd
push
or
aad
cmp
(bad)
and
inc
test
in
daa
int3
aam
jecxz
jl
in
bound
repnz
sahf
ja
mov
adc
out
ret
sbb
vmovmskps
jp
jb
xor
push
popa
mov
(bad)
pop
leave
bound
jl
xlat
sbb
ins
jae
mov
adc
push
pop
data16
cmp
es
mov
inc
ror
imul
iret
ins
movs
mov
std
jge
arpl
dec
add
aaa
movs
hlt
ins
inc
(bad)
(bad)
xchg
xchg
loopne
pop
(bad)
mov
stos
mov
xchg
std
fsub
jle
inc
jbe
sub
mov
movs
xchg
inc
xor
jge
jbe
xchg
lock
aam
test
jae
sub
sbb
cmp
imul
xchg
mov
add
pop
xor
movs
xchg
adc
mov
cmp
jmp
test
hlt
jae
push
mov
xlat
sbb
mul
mov
add
mov
daa
neg
add
jl
int3
pop
sbb
inc
test
adc
popa
lods
mov
cmp
loopne
adc
inc
and
cmp
cmp
mov
test
mov
adc
push
xor
lock
gs
fisub
int3
sar
iret
mov
int3
sbb
leave
ret
scas
jae
lock
xchg
adc
test
movs
mov
xor
or
pop
mov
movs
push
push
call
jle
or
mov
xchg
push
pop
adc
adc
jnp
(bad)
cmp
fimul
clc
mov
mov
push
(bad)
mov
add
pop
xchg
(bad)
mov
loop
and
or
mov
lods
jns
add
lock
fisttp
xchg
cli
jecxz
cli
nop
and
sub
xor
xor
jle
(bad)
sbb
inc
mov
movs
mov
xor
sbb
test
iret
and
addr16
sub
xor
stos
imul
ins
jmp
xor
add
out
push
daa
movs
and
jmp
(bad)
out
push
int
add
dec
aam
sbb
stos
mov
cmp
test
jns
xor
in
xchg
pop
sbb
out
jecxz
pop
leave
push
fmul
mov
movs
fsub
mov
add
and
jae
dec
dec
adc
js
jb
movs
push
jmp
test
(bad)
cli
ja
enter
xchg
sub
fstp
mov
pop
hlt
mov
dec
sbb
hlt
hlt
cmp
mov
je
jecxz
rcl
mov
mov
and
mov
test
xor
les
out
loopne
repnz
jecxz
repz
lea
adc
add
mov
xor
xchg
push
mov
mov
out
call
push
pop
icebp
into
hlt
xchg
or
sbb
push
imul
stos
jmp
fcmove
repz
adc
cmps
cli
cmp
sbb
mov
xchg
pop
arpl
nop
gs
aam
lahf
and
mov
cwde
clc
sbb
movs
xchg
push
push
adc
lods
in
cld
call
jb
leave
lods
ja
mov
imul
xor
add
jae
dec
mov
mov
add
dec
(bad)
addr16
out
mov
push
div
rol
call
xchg
dec
pop
lds
sub
test
mov
jo
jle
ficomp
add
lock
mov
pop
mov
(bad)
adc
xor
xchg
and
cld
mov
push
shl
addr16
add
sbb
jge
xor
clc
pop
icebp
jne
push
adc
shl
pop
test
retf
dec
retf
xchg
adc
sbb
pop
adc
xchg
in
xchg
jae
js
iret
push
inc
out
adc
adc
or
jmp
jbe
test
jno
mov
fisub
xor
les
mov
xor
mov
out
xchg
mov
ret
outs
jns
nop
mov
jae
outs
shl
pop
and
das
push
xlat
mov
dec
inc
push
dec
enter
fptan
xchg
loope
sub
jae
mov
mov
mov
arpl
loopne
or
sbb
mov
data16
popf
rol
imul
adc
add
jne
enter
jo
aad
in
jp
pop
sub
shl
xchg
cwde
aad
icebp
sbb
mov
fistp
pop
sbb
xchg
sub
mov
call
or
mov
sbb
sbb
sub
shl
or
pop
cmp
xchg
cmp
jb
lods
imul
add
mov
test
mov
imul
mov
add
adc
sub
sbb
hlt
adc
ror
(bad)
repz
leave
and
mov
push
in
pop
mov
mov
or
push
jmp
xchg
scas
les
dec
xor
add
or
sbb
outs
xor
imul
and
dec
(bad)
mov
dec
lods
sub
dec
loopne
das
jns
inc
push
jle
(bad)
xchg
out
mov
jae
jbe
xor
sbb
mov
lods
jnp
jne
mov
ja
mov
out
pop
or
or
cmp
xor
push
adc
ret
cwde
notrack
sbb
enter
sbb
dec
fcmovu
cmc
mov
sbb
stos
xchg
jno
fld
repnz
ja
sbb
cli
xchg
mov
adc
call
jo
imul
icebp
inc
pop
shl
call
iret
mov
lods
rol
or
lahf
fldenv
push
mov
movs
fmul
adc
out
mov
xchg
push
pop
sbb
add
sbb
(bad)
push
pushf
mov
inc
xor
pop
jp
outs
push
fndisi(8087
leave
add
(bad)
push
js
cmps
mov
movs
imul
inc
adc
je
arpl
mov
popa
enter
cmps
scas
cmp
adc
sbb
and
push
das
xor
xchg
sbb
call
inc
xor
pushf
imul
xor
pop
lods
bound
sti
jbe
sbb
cmc
cli
ja
jp
mov
and
shl
lock
ins
sub
stc
mov
sbb
pop
outs
jecxz
mov
ret
cld
sub
vpcmpgtd
push
sbb
test
call
jecxz
push
cmps
dec
stos
ds
in
sbb
mov
pusha
mov
and
gs
ret
hlt
mov
mov
mov
mov
neg
sub
sbb
mov
mov
mov
add
mov
fld
mov
jecxz
jmp
cwde
xchg
push
dec
fcomp
mov
test
loope
pop
sub
sbb
shl
les
cmp
bound
stc
mov
(bad)
popf
xor
mov
xchg
stos
jns
sub
mov
adc
or
or
push
adc
mul
dec
(bad)
out
cmp
popa
jg
les
outs
inc
sub
aaa
popf
scas
shl
sbb
out
jns
mov
int3
mov
ds
lods
xor
xor
inc
cdq
jae
xlat
data16
inc
xor
jae
dec
stos
adc
std
jae
mul
adc
jl
sub
inc
fld
adc
and
(bad)
xchg
jge
ins
and
test
fsubr
jmp
inc
adc
add
push
or
jno
aad
icebp
or
cmps
lods
aam
dec
and
pop
or
repnz
mov
push
mov
arpl
into
adc
repnz
mov
add
addr16
inc
xchg
mov
shr
mov
add
push
fst
jmp
push
mov
jmp
ja
cmps
mov
pop
lock
retf
sub
cld
cld
add
cdq
xor
mul
rol
movs
mov
js
ret
and
mov
dec
shl
or
xchg
mov
jae
inc
jae
xlat
cmps
jge
mov
sbb
or
add
call
mov
ja
dec
mov
push
pop
pop
dec
dec
mov
dec
sbb
dec
aad
mov
mov
pop
in
xchg
adc
nop
loopne
adc
xor
(bad)
in
mov
(bad)
xchg
sbb
lods
mov
mov
jecxz
cmp
mov
push
ins
and
add
(bad)
repz
outs
mov
sub
fwait
ret
adc
mov
push
out
jae
mov
outs
popf
mov
pop
shl
sub
in
jae
mov
loope
xchg
push
inc
sbb
fisub
pop
pop
pop
dec
and
jb
mov
dec
cmps
push
popf
clc
dec
cmp
inc
jns
shr
retf
int3
mov
or
hlt
mov
mov
or
test
mov
in
xchg
jmp
push
sti
jb
and
jae
fcmovnb
inc
or
add
(bad)
xchg
inc
(bad)
xor
fdiv
mov
mov
jns
mov
or
pop
in
dec
xchg
imul
mov
lea
icebp
fstp
adc
xchg
test
jmp
sbb
retf
and
jb
sbb
les
ds
jbe
(bad)
jno
jle
jnp
pop
cdq
push
pop
jecxz
arpl
sbb
jae
hlt
push
pop
pushf
fdiv
mov
xor
loope
fsub
(bad)
cli
xchg
dec
ins
rcl
inc
mov
mov
or
shl
stos
sbb
jns
pusha
or
imul
lea
retf
sbb
mov
inc
mov
data16
ror
sbb
sbb
hlt
ss
xchg
(bad)
fwait
lahf
xchg
loopne
call
mov
pop
les
cs
jne
enter
cwde
and
jbe
and
repnz
mov
call
loopne
test
loop
xor
scas
fcom
add
loop
xchg
cmc
ja
rcl
retf
stos
push
int
sub
retf
scas
push
xchg
xchg
xlat
sti
mov
pop
arpl
cld
cs
retf
(bad)
lds
add
sbb
pop
rcl
out
hlt
add
xchg
add
aad
pop
mov
cli
mov
pushw
aam
clc
icebp
bound
leave
pop
inc
jae
sbb
hlt
jmp
xor
jmp
ds
int
push
sub
pop
and
or
inc
dec
and
iret
inc
jmp
push
pushf
pushf
jecxz
jae
in
sub
idiv
jb
hlt
out
jge
jae
lahf
jnp
jge
jbe
data16
or
cdq
cmpxchg
jno
(bad)
dec
out
sub
movs
mov
mov
cmp
fist
fwait
scas
jnp
mov
les
jae
sub
pop
ss
add
pop
in
jae
sub
call
scas
je
xchg
hlt
push
iret
add
xor
(bad)
xor
jp
test
scas
inc
cmp
mov
and
pop
pop
sbb
les
mov
xchg
test
jns
push
xchg
sbb
mov
je
aam
ja
push
dec
out
adc
cmps
lds
in
jae
dec
scas
xor
nop
movs
cwde
dec
cld
xor
jno
mov
xor
out
jb
push
or
xor
mov
jmp
dec
lahf
cwde
adc
sbb
mov
pop
test
inc
cmp
cmp
pop
sbb
outs
int
dec
retf
pop
rcl
xchg
jmp
jns
hlt
mov
adc
stos
mov
popa
ins
cs
inc
call
cmps
frstor
xor
clc
mov
clc
je
mov
aad
cwde
loope
cmp
clc
fs
sbb
mov
mov
std
jb
mov
aas
mov
aas
mov
and
gs
mov
jb
inc
and
xor
mov
add
retf
adc
and
xchg
out
pop
sbb
lods
inc
rol
push
jl
mov
imul
out
adc
xchg
xlat
push
sbb
inc
jl
push
adc
jmp
jo
sub
fs
mov
push
mov
dec
mov
in
adc
sub
jb
gs
push
in
sbb
loop
add
cmc
scas
test
or
scas
in
mov
shr
test
jmp
stos
inc
je
pop
(bad)
fisub
inc
push
jle
pop
mov
jbe
adc
nop
adc
jmp
mov
cmp
ret
push
rcr
jmp
jae
cmc
mov
or
dec
stos
dec
adc
and
push
call
dec
cmp
and
push
(bad)
mov
xor
call
out
pop
jl
inc
xor
mov
dec
test
pop
fiadd
aas
jge
xlat
jmp
lods
sbb
sbb
push
inc
push
test
mov
test
ja
outs
and
inc
popa
jne
jbe
out
pop
sbb
mov
je
mov
test
cmp
push
push
repnz
lods
data16
pop
dec
jae
inc
add
scas
iret
pop
ja
leave
cmps
scas
add
xor
and
lods
adc
ror
adc
ficomp
and
push
pop
(bad)
dec
int3
push
cmp
repz
mov
xor
dec
and
sub
xor
sub
cmps
inc
int
cli
addr16
sbb
es
aaa
(bad)
cmp
scas
rcl
cmp
das
sbb
jns
jl
inc
sar
popa
arpl
mov
adc
push
xchg
inc
cwde
je
retf
sub
loopne
mov
int3
jle
hlt
and
retf
mov
js
mov
mov
mov
pop
or
test
push
dec
fnstcw
cld
shr
xor
mov
mov
adc
adc
add
out
jge
pop
mov
push
vpaddsb
jne
jae
inc
mov
mov
jmp
or
inc
ds
in
adc
xchg
xchg
xchg
lds
aas
ret
movs
sbb
jae
cdq
jg
mov
mov
jae
repnz
fidiv
cmp
in
pop
inc
dec
add
sbb
popa
fs
clc
dec
(bad)
jae
add
xchg
jns
sbb
inc
sahf
mov
dec
out
mov
pop
int
aam
scas
loopne
cmp
ret
addr16
arpl
jle
loop
lods
adc
inc
pop
jae
aaa
push
mov
xor
hlt
ss
fldcw
packuswb
adc
mov
rol
(bad)
ss
sbb
mov
fisttp
aas
xchg
mov
daa
dec
addr16
xchg
shl
dec
xchg
in
or
cmp
push
pop
addr16
scas
je
mov
loopne
into
sbb
and
jae
or
add
gs
and
fnsave
inc
out
pop
jge
sub
sbb
loope
push
ja
ins
aam
push
mov
pop
addr16
pop
or
inc
xor
mov
call
rcr
repnz
jp
inc
arpl
jecxz
ja
loopne
jle
ucomiss
rol
jne
sar
jbe
and
cmps
int
cs
shl
cmc
or
sahf
loopne
sub
mov
sbb
test
cmc
inc
not
int
add
(bad)
scas
fadd
ret
jmp
stc
fadd
hlt
xor
sbb
dec
sub
neg
mov
ret
add
retf
(bad)
sbb
repz
mov
dec
ins
jae
push
push
inc
enter
mov
std
add
pop
adc
popa
or
sbb
dec
cmp
shl
shl
sbb
movs
push
out
in
pop
cmps
test
js
push
mov
lods
mov
enter
nop
push
addr16
test
cli
sbb
sub
dec
movs
add
xchg
jmp
movs
inc
xor
sub
or
add
xchg
fidivr
fwait
adc
or
pop
mov
inc
dec
stos
cwde
xor
add
fwait
icebp
sbb
xchg
push
and
jae
mov
sbb
jb
xchg
mov
jle
xchg
adc
push
lods
aad
mov
or
xor
mov
mov
imul
popa
mov
das
xchg
mov
xchg
sbb
into
pusha
dec
inc
shr
mov
jmp
repz
mov
push
lds
les
sub
sbb
fisub
jno
(bad)
in
shr
movs
mov
add
xor
cmp
mov
adc
stos
dec
iret
adc
and
mov
sbb
test
gs
out
adc
sbb
sbb
jg
ins
shl
mov
xor
jne
push
sub
ror
mov
sub
mov
pop
push
stc
jmp
std
xchg
xchg
jbe
test
xor
mov
neg
(bad)
dec
pop
jmp
xchg
xchg
fist
pop
in
dec
xor
dec
mov
cs
xlat
idiv
test
xchg
pushf
mov
inc
arpl
popa
pop
mov
pop
mov
jl
xchg
jo
(bad)
gs
call
dec
inc
pop
adc
pop
inc
rcr
mov
pop
lods
sub
pop
jne
mov
dec
sbb
lods
push
sbb
push
mov
ja
aad
scas
lods
sbb
jmp
xchg
lods
jno
mov
xchg
ins
mov
pop
xchg
add
xor
pop
xchg
pop
loop
mov
and
pusha
jg
pop
mov
lods
dec
push
and
cmp
mov
fidiv
inc
mov
jg
jp
outs
movs
pop
cdq
scas
xor
cld
jle
aas
mov
stc
mul
outs
clc
fs
push
add
loop
sahf
jle
or
and
(bad)
in
jp
sub
and
ficom
mov
fcomp
das
adc
aam
and
sub
pop
or
mov
rcl
bound
inc
mov
loopne
fsubr
out
ins
nop
push
cwde
lea
mov
test
arpl
push
xor
mov
(bad)
gs
movhps
cmp
mov
cmp
and
inc
(bad)
fstp
dec
or
aaa
dec
pop
hlt
add
or
sbb
shr
ss
sub
jl
cdq
jae
dec
xchg
pop
mov
sub
sbb
(bad)
retf
push
pop
mov
ds
leave
adc
and
jecxz
in
jae
xor
mov
mov
xor
jge
or
(bad)
sahf
jo
inc
sbb
dec
mov
aaa
sub
mov
sbb
pop
xlat
mov
(bad)
jmp
lods
movs
jae
or
cld
shl
xchg
and
add
aad
out
test
int3
pop
sbb
out
mov
inc
dec
dec
mov
out
push
in
fld
loop
imul
out
lahf
loopne
jae
jl
inc
sbb
mov
push
xor
inc
or
adc
mov
fsub
mov
sub
jbe
jb
lock
mov
fneni(8087
fs
mov
pusha
dec
int
push
add
js
std
jno
lods
sub
jno
jb
push
cmps
push
retf
(bad)
jo
push
arpl
mov
xchg
sub
mov
xchg
pushf
mov
xor
push
cmps
lods
pop
ror
hlt
das
adc
aam
cmps
adc
sti
xor
dec
shl
xchg
add
fist
adc
cmp
inc
jb
clc
mov
and
jge
mov
cmps
push
imul
je
out
je
retf
test
dec
sbb
loopne
shl
and
mov
(bad)
xor
ins
iret
cmps
pusha
mov
cld
int3
js
je
cs
nop
jl
mov
adc
xor
in
push
pushf
call
call
mov
adc
bound
sbb
adc
mov
jle
adc
scas
outs
arpl
arpl
cmp
pop
pop
adc
mov
push
dec
(bad)
hlt
and
lods
push
sbb
dec
jecxz
stos
cmps
and
ins
dec
fnstcw
xchg
pop
pop
push
dec
sub
push
inc
fwait
cli
sub
mov
jne
adc
fstp
cdq
cmp
jbe
test
xor
test
mov
lods
push
je
or
not
jecxz
in
(bad)
fidiv
or
xchg
jae
enter
rcr
mov
jbe
sbb
or
jmp
dec
pop
sub
(bad)
iret
push
enter
mov
mov
inc
cld
mov
sbb
out
sti
sbb
add
add
les
cmc
xchg
xlat
mov
out
sub
mov
xor
cmp
shr
and
retf
dec
bound
lock
jne
fnstcw
shl
xchg
std
(bad)
aad
pop
mov
mov
div
neg
shl
dec
pop
int
ds
push
and
xchg
dec
test
mov
arpl
stc
jb
cwde
sbb
scas
(bad)
sbb
and
mov
stos
gs
push
or
cmp
std
pushf
test
mov
xor
into
xor
mov
pusha
dec
aam
and
push
inc
fldcw
adc
adc
jo
(bad)
stos
xchg
pop
(bad)
xchg
xor
jecxz
sub
clc
retf
jg
retf
jns
lds
repz
jmp
pop
sbb
fldenv
mov
cmp
add
mov
or
push
ror
mov
mov
xchg
pop
popf
fst
sbb
mov
cmps
cmp
popa
adc
dec
sbb
and
dec
adc
mov
cmc
sub
pop
iret
push
(bad)
sub
jmp
mov
dec
inc
nop
jg
call
adc
(bad)
daa
stos
jmp
test
and
stc
je
fwait
mov
dec
or
mov
shr
cmc
adc
mov
cli
mov
sti
call
pop
or
cmp
test
mov
and
push
jle
mov
mov
push
div
push
les
mov
xor
fst
and
leave
ret
mov
fld
jecxz
xlat
adc
sbb
push
inc
mov
test
mov
iret
push
xchg
je
adc
adc
leave
adc
in
or
out
pop
pop
cdq
mov
sub
jle
pusha
push
cmp
test
aad
mov
cmp
jae
das
xor
pop
push
hlt
ret
push
out
xor
out
mov
and
mov
lea
push
and
aad
push
jmp
sti
inc
mov
jne
push
push
xchg
loop
xor
div
pop
adc
pop
stc
add
sbb
shl
scas
mov
retf
mov
sub
xchg
aaa
mov
sbb
and
aas
cs
ja
mov
xchg
mov
adc
sbb
in
mov
retf
pusha
pop
popa
cmps
mov
daa
mov
push
jns
sub
(bad)
hlt
imul
cmp
fnstenv
test
xchg
aad
(bad)
lea
adc
aaa
inc
push
pop
xor
aas
adc
jp
jle
enter
xchg
inc
pop
inc
mov
adc
fwait
mov
(bad)
dec
cs
outs
xchg
shr
loop
out
in
sub
xchg
cmp
xchg
xchg
add
in
jne
imul
fidiv
js
loopne
sub
test
mov
sbb
sbb
pusha
inc
scas
pop
test
mov
stos
test
inc
jne
dec
iret
stos
stos
cli
and
push
xchg
ja
cmp
ds
push
push
in
jbe
outs
lahf
lea
xor
fnstenv
pop
xchg
sbb
push
scas
push
xor
scas
mov
mov
sbb
je
xchg
pop
lods
pop
mov
inc
mov
xor
jecxz
or
jns
jne
sub
sti
mov
repz
mov
lods
sbb
adc
mov
mov
call
mov
mov
ja
nop
mov
add
pop
stc
sub
and
adc
push
fcom
inc
in
jg
(bad)
dec
retf
xor
fs
leave
repnz
mov
mov
in
lds
xor
jae
mov
dec
sub
pop
in
ror
aaa
gs
mov
lahf
and
push
sub
cld
sub
scas
mov
pop
jp
xchg
inc
adc
push
clc
push
xor
or
sbb
ja
dec
xchg
mov
dec
push
test
mov
and
dec
pushf
out
sbb
outs
jmp
fdiv
mov
push
out
dec
and
repz
mov
std
int3
inc
aaa
xor
adc
out
mov
inc
lahf
jmp
fsub
inc
ins
out
sbb
inc
sbb
adc
movs
stos
call
xchg
and
add
and
mov
dec
jae
cdq
gs
cmp
enter
cmp
and
sbb
push
sbb
push
fs
dec
sbb
out
shl
push
rol
cmp
jb
inc
adc
les
push
mov
bound
sub
mov
push
inc
xor
inc
in
shl
push
mov
in
leave
out
je
lea
push
imul
out
pop
(bad)
sub
jae
cmp
mov
inc
mov
fwait
sbb
cmp
jecxz
jae
pop
pop
int3
bound
jmp
daa
mov
adc
lds
stos
jb
cmp
add
push
pop
sub
mov
or
xchg
add
aas
jp
xor
fwait
mov
call
sbb
inc
test
cmp
stos
mov
mov
test
nop
sub
mov
jae
icebp
leave
cmps
fst
xchg
xor
sti
test
sub
jno
das
out
js
lds
adc
int3
test
mov
xchg
cmc
imul
imul
sbb
xor
pop
cdq
dec
mov
jno
les
sbb
pop
aas
sub
sub
pop
add
sbb
add
jb
mov
aas
ja
ret
push
les
mov
pop
xor
test
je
push
shl
imul
fldcw
mov
jne
movs
shl
in
jmp
push
mov
mov
ja
int
dec
cdq
movs
ss
jno
aaa
inc
and
imul
int3
add
inc
sub
mov
xchg
jne
(bad)
mov
aas
fisub
mov
pop
not
pushf
mov
xchg
ror
mov
jg
jecxz
int3
pop
or
sbb
sbb
in
movs
out
jb
push
std
ja
mov
mov
test
jnp
pop
frstor
cmps
pop
lahf
and
dec
dec
xor
push
sbb
sub
pop
fmul
fld
iret
mov
xlat
sub
pop
imul
xchg
mov
sbb
and
(bad)
lock
cdq
mov
jg
movs
test
imul
cmp
jp
out
shl
dec
adc
xor
dec
retf
fist
scas
or
jne
adc
xlat
out
movs
(bad)
fdivr
loope
(bad)
sti
sub
jge
or
push
sbb
inc
repz
les
dec
push
rcl
sub
dec
adc
or
adc
int3
rcl
xor
mul
popa
sub
test
pop
sub
int
pop
test
sbb
cld
mov
sbb
mov
xor
pop
fmul
sub
xchg
cld
imul
push
int
(bad)
aad
mov
and
aas
jae
or
xchg
pop
mov
sbb
aas
xchg
pop
inc
fwait
cld
(bad)
call
mov
(bad)
cmps
jnp
inc
adc
sub
sub
jp
xchg
je
mov
xchg
sti
enter
add
jp
push
jle
cdq
jbe
test
cmp
icebp
pushf
fcom
pop
imul
lods
lods
pop
mov
(bad)
or
loopne
fistp
adc
xor
adc
cmps
sbb
js
shr
mov
mov
pop
mov
cmp
jnp
into
loope
push
int
jae
loopne
hlt
inc
jnp
add
jle
jl
in
leave
mov
mov
retf
mov
ret
mov
mov
in
dec
adc
stc
popf
inc
rol
pop
shr
add
ja
scas
inc
addr16
ins
fwait
out
mov
xchg
cmps
mov
push
xor
jle
push
and
test
inc
sub
into
inc
sub
jne
or
test
mov
or
push
jecxz
stos
nop
xor
test
mov
je
jne
inc
mov
imul
sbb
cmps
repz
rol
repz
inc
adc
and
mov
repz
push
lea
ds
xchg
mov
xor
cmpneqps
xor
jne
sub
sub
xor
mov
addr16
loop
inc
fwait
adc
cld
in
leave
mov
mov
pop
mov
and
lea
movs
pushf
and
lahf
in
xchg
jbe
(bad)
or
outs
jne
jmp
mov
mov
adc
xor
lods
xchg
add
cld
popf
inc
iret
jns
(bad)
test
hlt
adc
iret
xor
inc
scas
push
jbe
mov
inc
mov
xor
outs
sbb
das
stos
test
mov
mov
push
sbb
adc
imul
fwait
enter
stos
cmp
call
stc
jb
add
or
sbb
lahf
mov
inc
mov
mov
les
lods
fadd
or
mov
enter
ror
imul
pop
cmps
fs
int
mov
xor
dec
sbb
adc
hlt
mov
imul
jae
xor
stos
or
jne
fdivrp
xchg
mov
push
jg
add
test
inc
mov
mov
scas
jnp
jae
or
jmp
popf
inc
es
cmp
in
iret
out
je
ins
xchg
push
dec
sbb
xchg
jmp
jns
icebp
call
(bad)
inc
cmp
cs
cs
es
daa
fsubr
ja
push
test
adc
mov
jo
sahf
or
sbb
ss
push
out
sub
setae
ja
add
jecxz
ds
cmp
push
mov
mov
imul
push
fdivr
pop
jae
and
add
mov
xchg
add
(bad)
jmp
and
xchg
sbb
adc
xchg
jns
lea
aaa
test
repz
add
out
xchg
dec
mov
mov
mov
pop
outs
mov
js
hlt
jg
jmp
mov
mov
les
ret
pop
mov
adc
mov
lods
push
xchg
mov
fidivr
retf
and
imul
jle
mov
and
test
dec
jnp
mov
push
xchg
ficomp
inc
cwde
xchg
scas
cmp
mov
movs
data16
xor
jle
xchg
add
das
mov
push
popa
jmp
inc
gs
push
and
sbb
mov
nop
mov
mov
aaa
movs
jg
es
aas
sar
inc
fidiv
mov
push
push
aam
pop
sbb
ficomp
adc
or
or
shl
jecxz
jmp
outs
repz
stos
mov
sub
mov
es
retf
dec
cmps
mov
xlat
mov
and
sbb
sub
xor
jge
loopne
inc
ins
add
xchg
pop
push
call
scas
sbb
jno
fld1
seta
out
adc
clc
pop
or
mov
stos
enter
sbb
push
out
idiv
ins
mov
fwait
stos
mov
loop
adc
sbb
xchg
add
or
jno
mov
in
stos
rcr
test
inc
in
mov
(bad)
retf
loopne
jb
lahf
stos
lock
add
inc
sbb
xchg
popa
xchg
in
cmp
in
jnp
jmp
(bad)
xchg
jb
fadd
imul
and
imul
add
sti
shl
adc
xchg
sub
aam
and
addr16
jae
cli
dec
jge
and
repz
xor
push
jae
and
popf
adc
div
aaa
in
add
push
movs
jg
sbb
sbb
or
mov
fist
fsub
and
addr16
mov
xchg
or
sbb
xchg
push
sbb
(bad)
call
pushf
sbb
movs
cmps
fwait
jno
mov
and
push
mov
imul
push
xchg
xchg
sub
in
jae
dec
push
push
adc
aaa
out
sbb
scas
pop
mov
jbe
push
or
inc
sbb
ins
and
xchg
ins
(bad)
fmul
xchg
and
dec
push
out
inc
xor
mov
jo
or
(bad)
out
retf
retf
mov
out
loopne
cmp
dec
add
mov
js
test
aaa
xchg
in
pop
sbb
jo
inc
pop
data16
pop
test
xor
fstp
and
pop
xor
out
push
mov
outs
aam
mov
mov
clc
push
jb
pop
mov
xchg
mov
cmp
repz
push
jmp
clc
xchg
lea
call
les
loop
pop
xchg
movs
pop
nop
xchg
push
xor
lahf
add
sbb
mov
fdiv
jo
inc
dec
mov
xchg
sbb
push
stc
int3
lock
jns
fdivr
cmp
outs
or
xchg
inc
popf
sti
(bad)
cmp
daa
scas
enter
std
mov
push
add
mov
jmp
ds
rcl
getsec
scas
das
pop
lods
pushf
popa
mov
xchg
inc
xadd
xchg
jb
js
dec
popa
mov
(bad)
mov
(bad)
into
xchg
pop
jge
sub
pusha
repnz
lea
xor
movs
lods
cli
xchg
inc
mov
js
pop
inc
pop
adc
inc
gs
movs
inc
je
xor
aam
push
je
mov
and
pop
push
ror
xchg
xor
pushf
push
jecxz
and
loop
mov
add
adc
mov
int3
dec
fiadd
nop
mov
adc
dec
rcl
int
jae
dec
add
int
mov
inc
adc
mov
sbb
xchg
mov
mov
outs
cmp
or
xchg
js
shr
adc
xchg
adc
(bad)
jb
sub
je
cmp
adc
hlt
or
mov
push
dec
sub
stos
push
xchg
ss
in
cdq
xchg
pop
je
sbb
sub
xchg
mov
cmp
sbb
mov
loop
cs
aaa
lods
push
jae
xor
add
into
sbb
fcmovne
push
mov
xor
or
add
ss
inc
jg
jecxz
imul
push
iret
mov
ret
dec
ja
xor
jge
in
mov
adc
inc
mov
or
push
pop
popa
xchg
icebp
jae
jmp
sub
jecxz
mov
lock
mov
jo
inc
or
jg
mov
js
jl
pop
dec
mov
cmp
mov
xchg
adc
ins
scas
call
xchg
cmps
out
loopne
pushf
pop
pop
pop
dec
pop
(bad)
std
sti
sbb
ret
xor
test
test
sub
movs
rol
add
iret
das
and
adc
sbb
outs
xchg
xor
mov
ja
xchg
mov
outs
inc
sub
jb
repz
or
and
mov
ja
mov
inc
adc
adc
int
jecxz
mov
push
jl
push
dec
jo
adc
out
fnsave
mov
std
outs
loop
mov
adc
inc
enter
xchg
push
xchg
mov
jo
xchg
daa
mov
icebp
loop
f2xm1
inc
retf
cs
in
ds
or
xor
fsubr
jecxz
aam
xchg
test
jbe
push
push
bound
push
scas
cmp
add
mov
push
pop
mov
out
xor
aaa
jnp
jae
jmp
(bad)
popa
sub
stos
std
mov
and
jae
cld
in
scas
(bad)
pushf
out
(bad)
push
outs
fwait
retf
sbb
xchg
in
and
cmp
push
add
cmp
retf
scas
mov
loop
cvttps2pi
je
jns
fwait
dec
les
cmp
jg
rcr
sahf
jne
shl
repz
imul
leave
out
je
inc
jns
push
inc
mov
fcom
mov
out
sbb
jnp
and
jp
lahf
push
dec
sbb
aad
xchg
xchg
mov
cmp
push
hlt
add
xor
jb
in
test
mov
loop
sub
xchg
xchg
stos
xor
push
test
mov
jns
hlt
inc
sub
pushf
and
inc
sub
clc
pop
xchg
jecxz
test
mov
and
mov
adc
in
inc
sbb
inc
out
sbb
inc
ins
mov
mov
dec
sub
cmp
add
bound
shl
mov
inc
add
movs
and
je
jne
sar
cmp
xchg
xchg
xchg
inc
cwde
jp
jecxz
mov
lock
test
enter
in
inc
inc
fstp
jae
or
or
sub
push
fisub
xchg
xor
inc
and
test
retf
(bad)
(bad)
push
inc
repnz
imul
fcom
push
sub
sbb
pop
mov
inc
jo
jae
std
lock
mov
pop
dec
fcom
xor
sub
nop
and
jae
add
adc
push
arpl
jp
jmp
mov
add
mov
xchg
pop
mov
inc
outs
xchg
jne
xchg
pop
cld
gs
or
xchg
nop
push
pop
adc
mov
adc
pop
push
cli
mov
push
mov
jae
add
jnp
cmc
xchg
inc
adc
repnz
and
adc
cmp
xchg
nop
jnp
aam
dec
inc
and
int
stc
inc
push
arpl
je
adc
mov
(bad)
xor
cdq
ins
cmp
sbb
pop
push
inc
xchg
push
pop
mov
xchg
addr16
pop
(bad)
pop
or
jp
mov
add
add
push
adc
sub
js
cmp
push
mov
mov
mov
sub
jb
xchg
dec
jo
in
xchg
popf
jne
imul
sbb
mov
xor
jo
push
add
mov
out
add
pop
(bad)
adc
imul
and
stos
dec
cwde
icebp
inc
sbb
jl
inc
aam
dec
lods
mov
iret
jo
sub
lahf
adc
minps
mov
mov
addr16
cmp
sbb
arpl
mov
sbb
stos
loopne
xlat
pop
stc
mov
dec
pop
sbb
dec
es
jg
dec
test
mov
xchg
mov
mov
cmp
imul
pop
out
sub
ins
mov
push
mov
cmps
xchg
hlt
shr
or
psrlq
sub
in
cdq
inc
(bad)
in
xchg
cld
rcl
mov
hlt
mov
inc
dec
sahf
xor
ja
mov
lds
xlat
mov
jge
inc
dec
sub
dec
es
test
xchg
fwait
(bad)
clc
idiv
pop
cmp
mov
aad
sbb
dec
push
not
xlat
lds
dec
es
jnp
mov
cmp
cld
inc
mov
or
sbb
rol
sbb
imul
mov
shr
cmps
hlt
push
cmps
ficom
adc
sti
fwait
cmps
mov
inc
into
shr
in
sti
jae
les
and
sbb
add
ror
aam
out
cmc
add
and
adc
repz
dec
jno
mov
pop
mov
lahf
xchg
inc
jbe
xchg
outs
lods
sub
sub
enter
(bad)
or
push
fs
mov
data16
xchg
imul
mov
jae
movq
mov
dec
test
mov
fwait
push
or
or
iret
(bad)
mov
sbb
sub
ret
jae
xor
mov
sahf
popf
inc
mov
xchg
fmulp
mov
pop
lods
(bad)
sbb
mov
and
sub
cmps
and
xchg
dec
stc
mov
jnp
adc
mov
sub
sbb
arpl
fst
push
pop
scas
jb
add
pop
pushf
inc
outs
inc
ja
xchg
mov
stos
push
popa
adc
(bad)
call
xchg
mov
jnp
push
jae
jmp
mov
sbb
or
or
popa
jb
aad
xlat
adc
xchg
cmp
sub
lea
dec
mov
push
les
push
in
mov
outs
jae
adc
sbb
jl
into
retf
cli
hlt
mov
(bad)
(bad)
xchg
sbb
into
or
(bad)
fdiv
jmp
dec
xchg
daa
(bad)
fisubr
pop
or
push
nop
jp
sub
fimul
inc
loopne
jge
inc
and
inc
mov
inc
in
call
mov
sbb
sub
rcr
scas
sahf
je
inc
push
dec
(bad)
sub
lds
adc
jns
iret
adc
sbb
add
scas
cmp
ds
mov
mov
mov
out
sub
cld
sub
xchg
inc
dec
cdq
push
js
aaa
ret
jb
xchg
jb
(bad)
rcr
ret
jne
mov
daa
cdq
jb
push
push
sbb
enter
inc
lock
in
je
mov
add
sub
es
and
sbb
xchg
mov
mov
stos
int3
aam
adc
pminsw
in
mov
movs
inc
call
push
cmp
mov
jae
bound
sbb
sbb
loope
sub
mov
aam
mov
mov
sub
mov
mov
mov
arpl
add
fcom
scas
jne
push
je
into
icebp
xchg
outs
clc
xor
leave
mov
das
sub
or
push
pop
xor
or
jmp
mov
add
aam
ins
addr16
ds
(bad)
jecxz
ret
dec
js
and
cmp
mov
sbb
lods
es
xlat
xor
cmc
mov
mov
das
ret
mov
inc
fild
arpl
xchg
jbe
push
imul
out
lahf
add
mov
xchg
bound
and
retf
popf
mov
out
jb
sub
inc
sub
push
push
clc
les
and
into
push
xchg
xchg
in
retf
mov
mov
pushf
outs
rcr
cmps
cmp
loopne
jb
aad
adc
mov
sub
mov
(bad)
pop
sahf
adc
out
jp
and
mov
adc
lock
pop
inc
xchg
pop
sar
adc
jae
add
push
rcl
(bad)
sbb
and
outs
mov
(bad)
mov
xchg
nop
sub
sub
outs
cmp
jae
or
fwait
xchg
fisubr
std
jecxz
jne
int
cmps
call
mov
push
loopne
clc
xchg
mov
xor
jbe
(bad)
and
fist
inc
xchg
(bad)
mov
sbb
and
lds
sbb
push
pushf
mov
shr
fcmovu
rol
gs
push
movs
imul
scas
mov
pop
je
mov
lock
sub
and
mov
test
movs
dec
pop
imul
mov
dec
pop
xor
xchg
add
jmp
pop
jae
ret
pop
ja
inc
imul
movs
sbb
js
sbb
dec
dec
je
xchg
or
lock
and
dec
test
sub
clc
jae
push
cmps
neg
push
mov
shr
jb
je
pusha
lods
push
loope
push
xor
call
dec
sbb
dec
and
test
repz
aad
mov
xchg
mov
xor
add
jae
or
or
push
(bad)
inc
nop
adc
or
out
cmc
ret
ja
inc
inc
add
xchg
sub
leave
xchg
jmp
inc
cli
fnstenv
pop
or
fs
sbb
jg
scas
mov
pop
cmps
hlt
cs
ins
mov
adc
xchg
popa
mov
dec
jg
mov
dec
jae
xchg
dec
mov
js
jae
cmc
cmp
and
mov
push
mov
xchg
xor
add
int3
mov
(bad)
xchg
imul
repz
cwde
cs
push
das
pushf
test
rol
mov
in
jo
ins
adc
push
in
xchg
xlat
fiadd
in
iret
xor
nop
mov
scas
or
jnp
pop
xor
mov
out
sbb
xor
mov
dec
pushf
jp
jge
ss
je
fdiv
push
repz
xor
mov
mov
push
retf
xchg
aad
dec
stos
lds
mov
or
jge
daa
ins
call
and
fidiv
jmp
ins
into
ror
add
mov
mov
mov
push
sub
outs
jle
sti
fs
pop
push
or
outs
test
cmp
inc
cwde
and
dec
xchg
pop
dec
mov
div
jmp
xor
xchg
arpl
push
hlt
jmp
cmps
cmp
sbb
mov
and
fcmovne
inc
adc
mov
mov
retf
lds
sub
mov
scas
aad
test
in
jae
mov
pushf
push
mov
outs
push
jns
daa
leave
dec
aaa
cmp
push
call
lods
sbb
xor
or
mov
push
mov
ins
adc
mov
mov
jp
repnz
fcomi
and
test
xor
dec
scas
add
mov
leave
faddp
xchg
jae
shr
mov
jno
xchg
jle
dec
(bad)
bound
adc
out
and
ins
mov
inc
cmp
rcr
(bad)
pop
sbb
add
xor
pop
lods
loop
retf
stc
mov
jge
hlt
sub
shl
jb
ins
cmp
mov
mov
mov
jbe
repz
sar
mov
cmc
xchg
test
xchg
push
dec
mov
sbb
inc
fdivr
jae
lea
mov
dec
mov
xor
inc
mov
rcl
add
sub
repz
or
test
popf
xchg
iret
lods
mov
cmp
lods
mov
jg
inc
mov
mov
pop
add
push
mov
aam
test
push
sbb
mov
rcr
jge
mov
aad
and
fs
xor
mov
jno
push
popa
stos
jae
push
out
push
lods
jne
sbb
inc
fsub
mov
cld
test
adc
xchg
je
pop
jb
xlat
call
jne
pop
sub
addr16
ins
sbb
push
jae
shr
retf
jnp
stos
sbb
inc
pop
or
out
shl
or
xor
xchg
mov
dec
jge
ror
sbb
sub
icebp
je
in
mov
jge
lock
push
out
popf
dec
pop
sbb
dec
xchg
or
gs
mov
in
jge
and
mov
jl
mov
test
push
mov
jbe
xor
js
xchg
mov
iret
scas
jb
mul
mov
in
xlat
call
outs
adc
push
xlat
imul
inc
or
lahf
mov
call
fst
ins
sbb
mov
adc
mov
js
xor
adc
lods
test
or
ret
cmp
or
scas
dec
push
je
add
stos
sbb
add
loop
adc
sbb
cmp
mov
inc
lea
add
mov
jae
sub
mov
test
xchg
out
vxorps
or
dec
jns
mov
stc
ins
fmulp
pop
cmp
dec
call
shr
out
addr16
mov
sub
mov
adc
jp
outs
lds
dec
xor
cmp
jle
xchg
jp
mov
sub
jae
sub
stos
je
js
mov
pop
mov
enter
out
or
xchg
ins
sbb
out
mov
outs
jmp
jne
push
lahf
xchg
int3
ss
jae
mov
shl
add
mov
shl
sbb
psadbw
pushf
sbb
jmp
ins
repnz
sbb
ror
mov
push
adc
sbb
and
mov
sub
jo
and
fmul
sub
mov
mov
add
push
sbb
sbb
adc
pop
xor
jbe
jge
push
jg
(bad)
jmp
and
lock
je
mov
sbb
push
imul
mov
movs
or
jge
mov
nop
js
mov
inc
pop
rol
sub
pop
sbb
adc
xor
out
mov
inc
inc
arpl
sbb
jl
fs
lahf
push
jbe
add
add
sbb
inc
adc
cmc
xor
lea
xchg
in
pop
dec
xor
push
fist
add
push
mov
fs
int
repz
and
adc
js
pop
shl
cmps
pusha
lahf
js
mov
inc
(bad)
cmp
push
das
pop
jecxz
sub
mov
(bad)
mul
push
or
fistp
nop
sub
mov
xor
cmps
test
mov
mov
sub
add
mov
jp
cmc
ja
pop
cwde
sbb
dec
outs
add
stos
push
or
mov
sbb
and
stc
movs
lea
iret
mov
xchg
mov
stos
adc
jge
es
(bad)
or
fsubrp
mov
inc
into
ds
(bad)
(bad)
fcomp
cmp
mov
jno
push
repnz
aad
push
(bad)
mov
shl
mov
adc
adc
inc
int
dec
sbb
nop
xchg
lock
push
repz
ds
pushf
sbb
xchg
shl
lea
adc
out
jae
rcr
ret
pop
ss
xlat
mov
(bad)
shl
movs
push
rcr
shr
push
xor
adc
imul
mov
xchg
xchg
cmp
xor
mov
xchg
mov
mov
mov
outs
push
jp
and
add
adc
mov
or
pop
mov
sbb
jmp
mov
cmp
test
mov
inc
aaa
dec
jle
jp
movs
aad
mov
xlat
xor
mov
sub
sub
xchg
add
jg
sub
nop
sub
mov
inc
jae
and
jb
jae
sbb
sub
dec
xlat
out
mov
lods
lods
add
and
add
push
mov
jg
inc
daa
and
(bad)
cld
gs
pop
test
cdq
adc
adc
jg
mov
dec
lahf
aam
mov
sti
push
cmps
call
dec
mov
fidiv
clc
in
lock
ret
or
mov
vmwrite
xchg
jle
movs
push
dec
xchg
loopne
dec
aam
lods
jae
test
out
pop
gs
hlt
hlt
call
pop
xor
jp
ds
in
fld
inc
cmp
int3
je
rol
fistp
popf
scas
loop
je
pop
or
mov
mov
jmp
lea
mov
adc
enter
mov
pop
fidiv
inc
cmp
xchg
pop
adc
inc
mov
es
jae
push
sbb
jmp
arpl
jbe
adc
mov
jae
lock
add
and
xchg
mov
xchg
xchg
mov
jno
hlt
sahf
int
mov
and
adc
fs
xor
test
xchg
mov
call
jae
movs
leave
in
sbb
cmp
jmp
xchg
push
sbb
arpl
ja
adc
dec
cs
stos
cli
xchg
cli
sbb
sbb
adc
pusha
xchg
icebp
mov
or
pop
sbb
dec
xlat
sbb
dec
cmp
jle
adc
aam
dec
mov
and
xchg
cmp
mov
lock
call
xor
and
cmp
jmp
adc
mov
aam
push
cmp
adc
in
neg
or
aam
imul
enter
mov
cmp
(bad)
mov
dec
repz
cli
neg
ss
mov
mov
cli
adc
int
xor
cmc
push
enter
rcr
xchg
add
push
adc
scas
retf
gs
fsubr
leave
or
inc
fwait
or
jbe
fisub
pop
mov
jns
push
jg
pop
jne
pop
mov
repnz
mov
mov
sbb
adc
enter
int3
cmps
js
inc
icebp
add
mov
ins
or
push
loop
xchg
test
movlhps
dec
test
mov
push
push
cld
jbe
ins
imul
or
and
sbb
lds
stos
jbe
jmp
cmps
mov
fs
xor
mov
inc
mov
mov
out
fld
mov
xor
adc
cdq
adc
sbb
xchg
jl
pop
fisttp
mov
mov
adc
mov
stos
jno
dec
dec
cwde
mov
mov
or
retf
stos
inc
(bad)
dec
stos
adc
in
jne
mov
inc
(bad)
and
adc
mov
cmp
sti
dec
in
cwde
pop
not
movs
out
mov
retf
mov
cmp
out
sbb
add
jae
add
pusha
adc
ret
push
and
fnclex
xchg
jecxz
test
xchg
push
rol
je
mov
daa
test
das
adc
jecxz
ret
sbb
pop
loop
xchg
mov
xor
int3
xchg
mov
retf
call
adc
arpl
pushf
push
jae
sbb
mov
pop
ficomp
xchg
aam
add
mov
cmp
dec
push
inc
rol
mov
pop
out
jp
bound
sub
inc
out
mov
hlt
xchg
cmc
mov
and
ret
scas
clc
push
ins
lea
shr
sar
xor
adc
mov
add
jmp
les
cmp
aaa
cmps
retf
neg
sbb
lock
add
and
jns
cmp
sbb
out
lahf
fld
aam
sub
and
pusha
stos
jo
sbb
loopne
mov
lea
xlat
mov
addr16
xchg
or
inc
std
lods
add
data16
stc
mov
fst
js
nop
test
or
movs
je
push
int3
cmps
stos
fstp
adc
pushf
push
dec
(bad)
jnp
outs
scas
stos
les
arpl
jae
clc
sub
sbb
ror
dec
lods
repz
mov
dec
jns
ins
jle
xchg
jne
sbb
xchg
add
adc
cmp
ret
pop
jns
int
inc
push
fnstsw
jmp
add
mov
xchg
dec
xchg
mov
stos
inc
sti
inc
sub
repz
movs
popf
stc
jmp
hlt
iret
gs
out
les
xor
xchg
loope
push
xchg
xchg
xchg
mov
xor
xchg
out
xchg
jg
mov
or
push
jmp
pop
sbb
mov
daa
dec
(bad)
fnstenv
add
xchg
jne
out
int
popa
dec
jae
or
loope
daa
pop
mov
ret
and
add
(bad)
sbb
(bad)
jmp
inc
dec
mov
imul
add
mov
add
sub
and
test
test
mov
xchg
daa
adc
xor
jl
jbe
retf
(bad)
fld
loop
test
inc
out
or
push
inc
lds
test
push
in
mov
mov
sub
inc
cmp
sbb
jae
pslld
je
mov
adc
dec
int
test
sub
push
pushf
push
adc
cmps
cmp
in
mov
inc
je
ret
retf
jp
and
fs
mov
cmp
and
xchg
lock
mov
adc
out
xor
mov
xchg
repnz
ja
and
les
xor
mov
hlt
sbb
xor
lods
bound
(bad)
mov
mul
jmp
inc
leave
adc
repnz
sbb
mov
out
mov
adc
int3
sar
cmovs
into
fs
test
retf
jmp
in
call
shl
adc
adc
dec
jmp
fidiv
je
pop
lods
dec
mov
addr16
adc
add
repnz
xchg
cmp
daa
or
cmp
inc
jb
(bad)
stos
xchg
pop
shl
dec
out
les
push
js
sahf
mov
xchg
jnp
mov
(bad)
enter
movs
mov
out
pushf
mov
xchg
xlat
inc
pop
mov
fimul
je
mov
mov
mov
clc
mov
stc
enter
sbb
mov
and
pop
xchg
or
fldenv
lods
inc
lahf
int3
push
les
retf
xchg
ret
cmps
push
cld
fsqrt
jae
adc
sub
sbb
inc
xbegin
jne
call
enter
mov
sub
push
push
rol
sbb
ja
test
daa
inc
dec
sub
je
fwait
and
jle
inc
inc
mov
or
cdq
push
cmc
leave
test
lea
call
add
mov
jae
cmp
fnsave
add
je
mov
sbb
jl
out
call
xchg
out
sar
mov
(bad)
and
inc
add
xchg
popf
mov
push
xchg
push
jae
dec
(bad)
clc
enter
mov
jne
sbb
cdq
popf
add
xor
lds
jne
bound
test
ins
sub
mov
mov
repz
inc
ror
mov
(bad)
push
out
and
lea
stos
inc
inc
dec
fcom
sbb
fs
adc
sahf
xchg
ret
pop
cmc
stos
loope
sti
std
jae
nop
pop
xchg
mov
mov
cmps
push
xchg
stc
cli
mov
mov
jmp
and
and
cmp
stos
push
rcl
ds
push
out
out
xor
mov
xchg
aam
and
or
fsub
jns
adc
and
mov
push
rcl
in
jp
or
cld
dec
repz
pop
pop
sbb
fldenv
jl
pop
jge
jmp
in
jp
push
mov
cmps
mov
xlat
jp
call
mov
cmp
inc
fstp
cmp
xor
mov
je
push
add
xor
mov
test
fwait
pop
test
std
cmp
adc
push
pop
out
stc
test
gs
(bad)
into
movs
and
pop
test
repnz
push
or
jae
iret
add
cmp
jne
mov
jno
ins
daa
cwde
jae
dec
fcmovb
push
addr16
adc
mov
movups
js
fwait
sbb
retf
jns
xor
fisttp
dec
push
jo
in
cmp
add
and
pusha
mov
sti
mov
or
jns
or
jmp
sbb
sbb
in
jge
rol
cmps
cmps
stos
pop
mov
(bad)
ror
jb
lds
mov
sbb
loop
lahf
js
(bad)
jecxz
inc
test
outs
sbb
jno
jbe
push
mov
mov
outs
sub
cmp
xchg
retf
jg
mov
int
jo
fld
jl
out
out
xor
jns
pop
mov
pop
imul
jae
pushf
aaa
mov
sbb
outs
cwde
push
ins
lock
xor
xchg
retf
cmp
int3
pop
ror
mov
fst
adc
lds
sub
outs
mov
sbb
push
adc
xor
out
xchg
hlt
add
mov
mov
fbld
popf
or
loop
mov
xor
xchg
sbb
push
pop
sub
jne
add
rcr
sbb
push
push
int3
int
lods
adc
push
(bad)
cld
aaa
hlt
ret
popa
mov
jl
cld
hlt
dec
jns
call
dec
scas
jmp
xchg
xchg
or
pop
and
mov
repnz
xor
adc
(bad)
xchg
lahf
xchg
(bad)
stos
fst
retf
cmps
adc
daa
test
int
test
jb
and
ss
fiadd
mov
shl
adc
adc
xchg
into
cmps
fwait
jns
call
mov
test
mov
push
cwde
and
jmp
mov
retf
or
adc
daa
xchg
test
mov
add
adc
or
push
push
mov
xchg
call
mul
jb
add
call
adc
sbb
ja
mov
mov
or
retf
adc
stc
sbb
inc
jmp
sbb
mov
enter
repnz
mov
ret
scas
jne
pop
aas
cmps
lea
rep
add
mov
(bad)
retf
dec
es
ret
sbb
inc
outs
dec
xlat
ror
inc
mov
outs
stc
rcr
sbb
ins
sub
mov
pop
and
out
and
inc
xchg
ret
fisub
mov
push
rol
sbb
jae
xchg
ins
xchg
cmp
sbb
shl
sbb
mov
pop
das
sub
ds
(bad)
push
lods
cmp
mov
add
xor
shl
dec
cdq
xor
(bad)
mov
pop
cld
(bad)
rol
call
(bad)
cs
pop
mov
jmp
adc
addr16
mov
leave
mov
loop
call
aam
xchg
in
int
xchg
xor
jno
xchg
mov
and
and
stc
sub
call
jmp
ss
lods
out
int
pop
sbb
dec
and
jno
sbb
cmp
jae
imul
mov
jp
mov
fisub
out
dec
aas
xor
xchg
xor
test
jmp
push
shr
or
and
ret
test
je
stc
jmp
shr
add
adc
ret
call
lods
mov
movs
push
cmp
sbb
and
pop
fstp
jb
mov
add
iret
cmp
loopne
loop
jp
mov
mov
add
movs
fnstcw
add
cmp
ja
je
mov
jmp
pop
or
or
sbb
sbb
add
mov
cmp
dec
sbb
pop
adc
jae
repnz
jbe
xchg
stos
ret
clc
hlt
enter
xor
mov
add
mov
cmp
mov
cmp
mov
xchg
stos
aaa
inc
fmul
in
nop
jae
lds
push
call
bound
push
fisubr
lds
clc
movs
sub
fidiv
jmp
test
movs
inc
jmp
cld
test
mov
adc
mov
xchg
add
mov
inc
jns
lock
push
out
int3
sub
mov
pop
mov
mov
clc
lock
retf
or
repnz
add
fidiv
jecxz
push
pop
add
mov
push
inc
in
lock
mov
test
hlt
fist
inc
sbb
or
cli
add
popf
pushf
(bad)
out
xor
add
xor
inc
in
in
mov
xchg
outs
inc
aam
and
shl
xchg
fdivr
fmul
dec
repnz
xchg
jge
xchg
fisttp
add
push
inc
jno
mov
xchg
xchg
outs
test
mov
jbe
add
and
mov
jae
icebp
js
xor
push
ins
into
into
les
pop
lods
(bad)
mov
fdivr
jo
xor
jge
nop
iret
or
test
push
(bad)
xor
sbb
jb
push
xchg
test
mov
fstp
xor
or
dec
xor
call
in
neg
ret
jp
shl
js
jmp
icebp
jp
push
imul
ds
inc
pushf
pop
jle
aas
jge
ret
mov
int3
add
pushf
mov
stc
bound
jae
sub
dec
fisubr
adc
inc
int3
push
in
xor
inc
inc
mov
out
mov
push
add
fiadd
pop
mov
sbb
and
arpl
push
mov
mov
jo
repz
add
or
sbb
sub
add
xor
imul
ins
repnz
scas
mov
push
pop
jmp
je
adc
mov
jp
icebp
rcl
gs
sbb
rcr
je
(bad)
cmc
pop
mov
dec
out
jae
pop
pop
mov
stos
push
lods
mov
jne
xor
repz
fs
pop
sbb
pop
adc
or
out
test
ficomp
mov
jae
or
and
dec
pop
sbb
sub
dec
mov
xchg
(bad)
adc
sbb
ins
xchg
rep
sar
js
movs
leave
imul
xchg
or
pop
pop
in
push
mov
xor
mov
push
sar
sub
nop
inc
xor
pop
mov
bound
fdiv
ret
in
fcomip
sbb
call
mov
jb
pop
outs
pop
out
xchg
mov
cmps
push
push
pop
dec
xor
stc
jae
sahf
into
or
ja
add
ja
pop
or
rcr
or
inc
dec
xchg
jg
pop
ins
mov
ret
or
mov
shl
daa
xor
jp
xchg
sub
scas
adc
ins
out
iret
cmp
(bad)
mov
mov
or
mov
daa
mov
or
fmul
push
je
jne
adc
test
out
xchg
aas
es
adc
jno
mov
in
cdq
stos
pop
test
(bad)
rcl
(bad)
in
or
sbb
sub
mov
xor
je
xor
jg
adc
xchg
mov
dec
scas
movs
jae
sub
jg
sbb
call
aam
into
jmp
pop
jae
pop
jp
sbb
cmp
aas
call
imul
pop
jmp
leave
out
in
xchg
(bad)
scas
jae
or
popa
pop
ficom
sbb
fsubr
push
xchg
leave
add
mov
xor
sub
rep
mov
jne
lds
shrd
sub
sub
sbb
xor
arpl
inc
cmps
inc
jae
inc
stc
mov
lods
jae
scas
xchg
mov
adc
fld
scas
push
icebp
cmc
jae
jbe
dec
retf
sbb
cmps
sbb
inc
mov
fstp
mov
sbb
sbb
ins
push
aas
mov
xchg
xchg
fmul
xchg
fidivr
inc
push
pop
push
imul
sub
retf
enter
or
dec
xor
stos
mov
clc
fidiv
pop
dec
jne
adc
sbb
xchg
pop
mov
mov
cdq
dec
xchg
aaa
sbb
clc
or
pop
lods
aas
mov
jmp
mov
(bad)
jo
leave
inc
in
paddusb
lds
sar
xor
mov
cmps
mov
int
dec
dec
es
dec
jae
push
or
xchg
xchg
adc
add
sbb
mov
ficomp
fs
loop
mov
(bad)
(bad)
lahf
mov
xor
mov
dec
lods
mov
xchg
mov
sbb
ret
dec
jnp
aaa
push
retf
cli
sbb
int
pop
ror
cmps
fiadd
(bad)
mov
lahf
jae
imul
sbb
js
shl
add
xchg
repz
fdivp
jmp
je
lods
aaa
mov
dec
adc
jb
repnz
jnp
or
cmp
xor
jo
dec
sub
jmp
sti
dec
mov
fild
int3
xchg
xor
cs
mov
or
shl
push
stos
mov
int3
pop
daa
mov
mov
aas
sub
stos
call
adc
or
mov
mov
push
sub
imul
dec
mov
xchg
push
sti
addr16
cmp
xchg
xchg
fdiv
xor
repnz
jae
push
daa
or
dec
je
mov
mul
ffreep
mov
jnp
inc
stos
cmp
push
in
scas
retf
xor
dec
cli
in
mov
inc
addr16
movs
jae
jnp
xor
xchg
arpl
in
mov
adc
mov
cdq
fisttp
es
je
shl
pop
mov
or
dec
div
push
jns
jo
add
fs
js
fcom
pop
aam
mov
dec
int
jne
scas
xlat
jae
stos
ds
cwde
and
and
mov
(bad)
adc
pop
mov
jg
rcr
push
je
pop
out
inc
mov
enter
push
push
sub
leave
sub
out
fmul
xchg
dec
fcom
sbb
xchg
xor
rcl
xchg
inc
sbb
loop
call
and
inc
sbb
cmps
test
mov
sub
inc
hlt
xor
mov
lods
xchg
push
mul
sub
jae
pop
inc
xchg
inc
ja
sub
lock
int
ja
test
cmps
mov
ins
ss
xchg
aas
sbb
dec
in
jle
adc
sbb
mov
sub
imul
out
mov
cmp
mov
retf
ja
cmp
bswap
mov
mov
sbb
cmp
sti
fcmove
pushf
in
adc
outs
in
imul
je
std
aas
xchg
push
xchg
dec
stos
inc
stos
es
daa
int
repz
mov
xchg
imul
aaa
sbb
icebp
jae
(bad)
sub
jb
ja
jmp
jl
jmp
or
push
scas
cmp
leave
dec
xchg
stos
or
rcl
jl
sub
fidiv
hlt
inc
out
aam
jle
js
xlat
inc
shl
xor
ja
mov
inc
dec
mov
sar
xchg
push
pushf
pop
push
pop
xor
fiadd
aam
fidivr
clc
xchg
push
xchg
sub
cld
jae
retf
ds
retf
je
push
leave
pop
sbb
sub
mov
arpl
push
mov
xor
mov
aad
add
jae
inc
xchg
mov
jb
xor
sub
mov
aas
mov
mov
push
dec
scas
and
and
in
pop
mov
mov
add
sub
inc
(bad)
inc
sahf
or
cmp
repz
out
retf
sub
sub
and
pop
rol
xchg
sbb
push
lea
mov
sub
fisub
movs
ret
loop
jne
mov
stos
sbb
(bad)
adc
scas
into
movs
and
mov
stos
ror
push
xchg
push
lahf
ret
aas
stos
mov
out
mov
jge
xchg
or
dec
add
ret
jb
paddw
(bad)
hlt
ret
clc
pushf
mov
xchg
jecxz
in
and
(bad)
or
adc
sbb
cdq
add
ds
mov
cmp
cmp
cmc
inc
sub
jecxz
arpl
or
dec
in
xchg
push
inc
pop
mov
fstp
retf
mov
mov
xchg
(bad)
jo
jmp
stos
mov
jmp
add
loope
add
mov
push
out
into
(bad)
int3
retf
sub
sbb
out
je
lahf
stos
lods
jb
and
cdq
xchg
aaa
scas
inc
pop
jmp
jnp
jl
inc
or
add
sbb
adc
and
sbb
nop
dec
lds
inc
fadd
dec
je
loope
jg
jo
sbb
xor
jb
push
jae
mov
aam
jb
inc
sbb
pop
sbb
pop
mov
mov
dec
inc
and
mov
xchg
js
stos
movs
cmp
retf
daa
in
stos
mov
mov
add
mov
dec
mov
ja
fwait
jmp
xchg
mov
xchg
hlt
rcl
sbb
jle
data16
mov
test
neg
push
mov
jne
jo
inc
aaa
inc
adc
test
hlt
aaa
popf
or
sar
ret
sbb
test
idiv
and
sbb
pushf
adc
mov
jne
or
and
xchg
jae
iret
sar
movs
ins
jae
lahf
ds
pop
mov
dec
pop
lods
xor
aad
gs
mov
div
clc
dec
stc
mov
sti
imul
push
sbb
mov
psrlq
mov
sbb
outs
cwde
retf
ja
pop
xor
cs
jns
cwde
sbb
mov
push
aam
fnsave
inc
fstp
adc
adc
ja
mov
ja
mov
sbb
movs
in
pop
sub
jae
pop
jp
or
adc
loop
add
mov
adc
dec
inc
cmp
(bad)
adc
stos
push
xchg
les
sbb
(bad)
lods
(bad)
int
cdq
iret
cmp
and
xchg
popa
scas
dec
jecxz
xor
clc
xchg
add
dec
jge
mov
add
mov
cmps
mov
mov
pop
dec
cmp
mov
sti
push
pop
sbb
mov
push
sbb
pop
mov
inc
shl
(bad)
xchg
fcmove
cmp
stc
cmc
mov
movs
ds
ja
jae
fcomp
mov
pop
popw
arpl
mov
imul
imul
dec
pop
mov
out
ret
push
sbb
out
mov
jbe
jmp
jmp
cli
lods
inc
fild
sub
inc
dec
outs
out
pop
test
push
pop
lods
pop
pop
out
div
lods
data16
add
shl
jl
sbb
inc
mov
inc
sub
sbb
cmp
push
jnp
or
es
inc
jne
rol
stos
imul
repz
xchg
mov
mov
jae
repnz
jnp
fdiv
sbb
sbb
lods
lods
or
ins
mov
stos
(bad)
out
mov
in
les
fisttp
ret
pushf
lds
stc
sbb
outs
pop
(bad)
push
push
movs
and
cmp
jl
or
aaa
xor
popa
xchg
and
cld
push
movs
jge
mov
gs
icebp
xchg
(bad)
cmp
push
aam
(bad)
fcmovb
inc
jbe
(bad)
shl
dec
xchg
xor
jge
push
stos
in
xor
sbb
aam
push
cs
add
sbb
jg
es
shr
jmp
adc
push
pop
mov
dec
dec
loopne
(bad)
out
sbb
in
xor
jo
bound
inc
and
sbb
idiv
fs
fwait
dec
push
mov
push
mov
dec
in
sub
bound
call
(bad)
sar
add
mov
scas
in
pusha
sbb
push
push
pop
jo
test
pop
add
nop
addr16
mov
add
and
je
pop
sbb
xor
pop
popf
lods
(bad)
add
jae
push
(bad)
push
cld
mov
pop
push
dec
test
or
xor
mov
in
adc
push
xchg
in
cmps
test
jae
aam
add
adc
fwait
xor
leave
adc
jo
(bad)
push
pop
cmp
push
xor
mov
sbb
sub
in
adc
mov
mov
mov
rcr
dec
and
movs
mov
div
xor
retf
cmp
cs
in
cmp
int3
mov
jae
aaa
mov
or
pop
dec
inc
stos
sti
movs
sub
mov
or
(bad)
xchg
mov
jb
bound
sub
jecxz
cmp
repnz
jo
or
int
adc
adc
retf
(bad)
test
scas
mov
xchg
int
ins
lea
in
or
fistp
or
rcr
mov
mov
jne
(bad)
push
adc
mov
fimul
add
nop
ja
mov
div
outs
repz
cmc
(bad)
sbb
imul
mov
ss
pop
hlt
jg
or
je
adc
shl
xchg
mov
mov
test
xchg
fdiv
push
lods
bound
dec
xor
xchg
jno
pop
fcmovb
pop
adc
cmp
gs
ret
fcomp
sub
and
inc
test
mov
pop
push
pushf
jbe
or
addr16
ds
inc
add
adc
aam
push
pop
mov
jb
ficom
into
mov
movs
call
aad
xor
xchg
jb
pusha
push
adc
cld
das
ja
popf
xor
dec
adc
inc
cmp
dec
arpl
xor
xchg
jne
xor
cld
inc
ret
jmp
push
xchg
xchg
push
fld
mov
xor
mov
sub
push
xor
pushf
mov
jg
js
pop
cdq
ins
mov
and
lds
cmps
leave
jae
out
push
retf
pop
adc
inc
xchg
ins
je
pop
add
mov
jmp
sbb
cmp
mov
mov
test
push
shr
pop
sub
leave
and
call
sahf
hlt
mov
js
scas
gs
repz
mov
outs
or
dec
(bad)
bnd
sbb
inc
out
adc
xor
and
xor
mov
movs
popa
dec
xor
xchg
sub
dec
out
(bad)
mov
pop
ret
psubb
jae
inc
aad
mov
shl
test
xchg
inc
sub
repz
xchg
(bad)
ins
je
or
sbb
mov
xchg
or
push
jae
mov
int
sbb
push
mov
push
std
adc
and
hlt
mov
push
and
sbb
js
not
or
nop
hlt
inc
daa
jmp
xchg
test
jno
ret
pop
mov
sti
imul
imul
mov
push
hlt
push
mov
rcl
adc
cmp
mov
jb
sub
mov
je
scas
or
or
rcl
jge
xor
mov
add
arpl
jae
fstp
fdiv
add
dec
push
or
sbb
fild
mov
sbb
ins
adc
adc
imul
push
and
ret
sbb
mov
in
pop
mov
repnz
rol
scas
(bad)
js
sbb
sub
movs
xlat
cmp
or
and
mov
repnz
arpl
pushf
jmp
fidivr
jl
push
jmp
jecxz
jae
mul
jmp
sbb
fcom
fadd
cli
xor
fstp
add
jl
ficomp
mov
pop
in
sub
mov
sbb
xor
das
call
xchg
gs
rol
xchg
into
loopne
bound
mov
or
fwait
test
xchg
xor
mov
dec
inc
mov
jo
pop
(bad)
mov
or
inc
loop
sbb
jl
xchg
movs
jmp
lods
sub
push
push
gs
popa
dec
je
cmp
bound
push
jb
aaa
jg
pop
cmp
jp
in
jmp
cmc
cmp
adc
ds
push
jp
fist
sub
mov
push
cmp
add
(bad)
mov
mov
push
adc
mov
sub
and
push
loop
and
xor
cmp
and
mov
inc
jae
cmp
js
cmc
test
fisub
and
mov
cmp
dec
pusha
fs
jno
not
ss
outs
das
call
ja
(bad)
pop
stos
mov
leave
sahf
inc
push
mov
jle
jb
inc
pop
ficom
retf
pop
lods
ins
(bad)
xchg
imul
adc
int
jmp
jbe
gs
loope
mov
xchg
adc
pusha
and
pushf
xchg
sbb
add
daa
xchg
push
mov
mov
jecxz
test
xchg
out
retf
dec
mov
call
cvtps2pi
je
or
or
xchg
es
jb
hlt
mov
bswap
push
and
retf
sub
outs
mov
adc
push
mov
jl
movs
push
xchg
ja
xor
mov
mov
pop
jge
outs
xchg
and
ds
dec
ret
add
fdivr
add
in
xchg
mov
cmc
(bad)
loop
in
xchg
out
lds
aad
arpl
hlt
jbe
pop
(bad)
call
jl
lods
push
xchg
inc
inc
dec
jmp
xchg
mov
jns
dec
xor
adc
rol
int3
(bad)
mov
stos
stos
loop
dec
xor
movs
jne
iret
adc
ret
add
aas
mov
call
mov
fwait
cmp
adc
dec
xor
mov
out
outs
cmp
pushf
pop
dec
repz
sub
test
xchg
xor
mov
xor
rcl
sbb
inc
repnz
jg
cli
cmp
adc
inc
stos
fistp
add
xchg
push
cmc
scas
test
mov
dec
pop
(bad)
jp
js
push
jne
leave
mov
stos
int
jo
mov
repnz
daa
mov
sbb
mov
inc
out
xchg
mov
popf
xchg
jmp
fiadd
xor
out
mov
fcomp
mov
inc
or
mov
cli
sti
int
inc
sbb
jo
test
rcl
push
push
xchg
pop
inc
xchg
rep
inc
adc
sar
xchg
xchg
ds
push
inc
js
pop
push
push
xlat
and
jl
test
pusha
(bad)
mov
jl
inc
adc
das
test
jge
fidiv
test
loopne
push
inc
int3
sbb
lods
stos
std
(bad)
mov
je
and
xor
xchg
retf
dec
xchg
mov
jle
movs
test
jno
outs
lds
test
imul
rcl
cld
rcl
jl
push
mov
int3
push
and
ror
xchg
push
sbb
add
dec
pop
cwde
jmp
jno
xchg
je
enter
add
pop
sbb
fist
mov
mov
data16
test
enter
outs
inc
adc
xor
jae
pushf
bound
ror
sbb
test
mov
cmp
jns
push
ins
sbb
pop
sub
cld
mov
int
movs
inc
int
repz
xchg
mov
test
lds
xchg
xor
mov
add
xlat
es
sbb
xor
or
fimul
adc
neg
xchg
xchg
cmc
and
stos
lahf
dec
push
mov
clc
in
gs
test
xchg
push
lds
iret
imul
inc
in
retf
popa
es
aaa
dec
jecxz
cmps
cmp
xchg
mov
xchg
outs
pop
repz
push
stos
xor
mov
pop
movs
jbe
fdiv
lds
dec
sbb
push
std
jp
in
mov
(bad)
dec
add
pop
sub
imul
pop
push
xchg
and
mov
xchg
aad
mov
not
movs
adc
adc
jns
inc
mov
aaa
jae
js
push
stc
arpl
ret
icebp
in
rcl
mov
inc
rol
adc
push
sub
fldenv
fsub
push
sbb
xchg
and
mov
mov
aam
lds
lahf
xchg
xchg
xchg
mov
mov
ss
fld
mov
sub
sub
cmp
call
daa
ret
call
lods
in
lock
lds
mov
sbb
sbb
push
jnp
mov
jae
int
cs
fsub
or
out
test
jnp
jl
adc
adc
lds
and
jae
jo
stos
mov
push
loope
sub
dec
loopne
mov
jmp
mov
stos
dec
imul
or
sub
mov
cmp
push
rcl
shr
mov
fs
xor
aad
and
test
mov
mov
retf
and
push
mov
sub
inc
sbb
jae
icebp
ret
cmps
dec
pop
xor
jg
sbb
out
fisttp
sub
sbb
sbb
jae
lea
mov
aaa
push
jo
mov
js
dec
xchg
xchg
mov
test
sbb
repz
ret
pop
lea
or
cmps
test
inc
enter
xor
scas
sub
mov
js
xchg
call
adc
movs
sub
mov
push
sub
and
sbb
retf
fld
jae
xlat
jg
pop
xor
and
add
inc
mov
pop
scas
repz
adc
jle
imul
mov
sub
xchg
je
es
mov
jae
mov
cld
inc
hlt
push
cmc
sbb
outs
add
out
jae
iret
int3
fs
and
sbb
mov
cwde
mov
jge
jecxz
sbb
adc
or
add
add
sbb
fist
jmp
inc
popf
sub
sbb
dec
out
mov
mov
xchg
leave
cli
push
pusha
enter
xchg
sub
cmp
aas
aam
cmp
addr16
pop
imul
inc
jb
ss
adc
adc
out
push
push
mov
inc
dec
inc
movs
push
daa
xchg
mov
and
mov
adc
(bad)
push
ins
push
inc
jae
push
inc
outs
sbb
sub
iret
movs
(bad)
scas
jae
iret
sub
pop
xchg
lea
mov
add
test
xchg
fucom
loop
fsqrt
ret
aas
pop
leave
js
mov
xchg
rcr
loope
idiv
or
adc
js
jmp
mov
jg
adc
push
mov
adc
pop
lods
xor
add
fnsave
mov
jp
mov
mov
hlt
fwait
repz
inc
ror
jl
test
fucomi
ins
pop
inc
lods
stc
mul
sbb
jae
(bad)
pop
mov
shr
and
xchg
dec
rcl
in
dec
jne
shl
pop
jb
clc
mov
scas
ret
(bad)
mov
ret
aam
ins
enter
test
std
sbb
pop
jnp
leave
dec
sub
jnp
mov
xchg
(bad)
mov
ins
pushf
and
test
cmps
sbb
test
repz
inc
push
enter
jno
adc
aam
sub
jae
mov
stc
cli
loopne
xor
sub
test
mov
push
fidiv
outs
imul
jb
mov
xchg
ins
lds
cmp
aam
icebp
jb
aam
mov
dec
cmp
jle
sub
cld
sbb
movs
daa
and
mov
jg
mov
ret
push
sti
inc
imul
xor
sub
xchg
xchg
xchg
mov
jae
cmp
mov
push
sub
inc
add
dec
jp
xchg
in
mov
out
loop
(bad)
sbb
mov
int
mov
cwde
test
inc
loop
mov
ret
mov
aaa
out
mov
push
pop
ins
add
jae
xchg
and
cmps
popf
inc
movs
aaa
mov
test
cld
dec
mov
or
pusha
mov
pusha
iret
adc
std
mov
add
ja
mov
test
fwait
push
xchg
xchg
lods
cli
mov
adc
xlat
dec
test
mov
xor
(bad)
call
inc
sti
leave
call
cwde
push
out
sbb
aam
pop
dec
out
aas
inc
sbb
sar
cmp
mov
dec
shl
leave
sub
push
xchg
lock
inc
fisttp
rcr
and
data16
jae
lds
test
push
ins
pop
push
or
xor
fsub
out
inc
pcmpeqd
push
(bad)
lock
in
lods
out
sbb
inc
adc
stos
repz
mov
rol
ds
dec
inc
rcl
jae
bound
loop
ja
js
test
pushf
inc
inc
repnz
mov
test
pop
push
repz
(bad)
jge
(bad)
popf
call
adc
and
stos
or
nop
xor
mov
push
inc
jmp
js
nop
dec
(bad)
je
sar
mov
or
adc
sbb
xchg
lahf
mov
xchg
xchg
sbb
and
xor
call
loop
test
icebp
dec
scas
mov
lea
jae
cmp
mov
cmc
push
icebp
sbb
or
jbe
cmps
or
xor
aas
gs
test
pop
dec
pop
dec
fiadd
inc
mov
out
std
xor
jne
cli
enter
lods
cmp
addr16
xchg
dec
mov
mov
hlt
movs
sbb
mov
xchg
push
sub
xchg
fwait
pop
mov
sub
xor
outs
cwde
xlat
mov
loope
mov
aaa
pusha
repz
sar
nop
mov
test
sub
test
push
leave
jae
mov
daa
repz
daa
cmps
pop
jge
mov
sbb
lahf
mov
xchg
(bad)
stos
gs
inc
xchg
inc
call
aas
and
push
jl
je
inc
jmp
jo
rcr
jne
fild
mov
and
and
mov
aad
dec
or
shr
xchg
inc
div
inc
shl
pusha
adc
mov
adc
dec
add
mov
cmps
sbb
into
pop
shr
mov
sbb
loopne
push
lds
cs
push
imul
sbb
jge
test
jl
repz
js
jae
lods
test
(bad)
mov
xor
adc
shr
xor
mov
and
aam
in
(bad)
sahf
xchg
cmp
mov
(bad)
iret
(bad)
push
sbb
test
pop
dec
in
fadd
cmc
lahf
pop
aam
cmp
sbb
sbb
push
and
sbb
lods
or
shl
test
outs
mov
imul
mov
sub
push
adc
inc
jae
test
add
adc
into
mov
inc
xor
in
push
mov
scas
sbb
mov
hlt
mov
adc
les
loop
cld
xchg
sbb
ins
fidiv
scas
jg
jb
fidiv
mov
jae
cmp
test
jecxz
aas
sub
int3
mov
jg
xor
fstp
das
mov
inc
idiv
repnz
mov
add
out
test
int
cmp
jmp
inc
jb
mov
jns
xor
lahf
mov
(bad)
adc
xchg
mov
(bad)
stc
push
arpl
dec
das
or
mov
and
aam
mov
mov
mov
stos
popa
sbb
xchg
inc
lahf
dec
bnd
xchg
das
sbb
fcmovbe
mov
mov
and
mov
xor
les
pop
and
jecxz
mov
mov
ins
out
cmps
fnstenv
or
push
pushf
iret
imul
sbb
or
sub
addr16
imul
dec
dec
leave
cmp
ret
xchg
mov
sub
xchg
and
cwde
pop
mov
loopne
xor
sbb
dec
pushf
lock
inc
div
mov
add
push
hlt
ret
mov
out
add
push
push
xchg
push
sbb
jmp
retf
and
sub
shl
sbb
test
push
jae
je
push
es
out
mov
cmp
pushf
(bad)
imul
cmp
test
bound
ins
add
addr16
(bad)
retf
rol
push
mov
es
sbb
das
fnsave
sub
mov
ds
xchg
and
fdivp
xchg
(bad)
es
ret
clc
por
dec
mov
xor
pop
mov
mov
pop
out
popf
jae
retf
dec
cmps
aad
leave
or
cmp
push
mov
rcr
jp
shr
push
xchg
mov
add
mov
stos
(bad)
imul
ja
xor
sbb
mov
mov
imul
sahf
push
adc
or
mov
mov
jo
hlt
dec
je
test
sub
loop
sbb
lahf
popf
sbb
hlt
mov
call
ret
iret
fbld
inc
mov
dec
mov
dec
outs
inc
(bad)
jno
fs
sbb
push
xchg
fldpi
mov
out
test
dec
jle
in
pop
pand
mov
das
xor
xchg
mov
push
lahf
mov
or
adc
fiadd
les
mov
outs
jae
adc
test
addr16
mov
jmp
xor
sbb
inc
ja
mov
mov
sbb
inc
std
pop
imul
jns
xchg
fild
test
pop
out
leave
shl
cmp
push
int3
jbe
fadd
or
cmc
or
mov
or
cdq
mov
stos
les
xor
cmp
and
xchg
jge
hlt
into
xchg
inc
gs
push
mov
cmps
xor
jnp
imul
adc
push
push
mov
pmaddwd
cmps
repnz
push
push
mov
movs
xor
cdq
jl
jp
mov
jae
test
cmp
sbb
dec
pop
fbld
push
jnp
in
and
xchg
je
add
ja
push
sbb
hlt
inc
sbb
neg
xor
(bad)
in
nop
xchg
out
movs
es
jl
sbb
cli
pop
mov
test
pop
arpl
mov
retf
add
daa
ins
or
mov
(bad)
jns
xor
jp
pop
inc
je
jl
aaa
aas
add
inc
mov
lds
jp
lock
mov
loopne
movs
fild
push
xlat
or
sahf
(bad)
cs
mov
fist
inc
sub
jb
ja
cmps
dec
loopne
outs
sti
rcr
or
loope
mov
(bad)
std
dec
outs
and
enter
in
int
js
jp
shl
mov
sti
jecxz
and
mov
imul
xchg
xchg
add
das
sti
outs
cmp
ficom
push
jnp
push
fiadd
mov
lock
int
xor
dec
adc
rcl
xor
scas
(bad)
inc
test
js
sub
inc
add
jb
inc
into
rcr
clc
stos
push
xor
jne
mov
int
sbb
xchg
ja
js
mov
bound
mov
addr16
xor
fnsave
aam
jp
std
inc
sti
les
push
stos
push
cmp
into
mov
adc
and
mov
xor
xchg
fst
sub
cmp
out
in
mov
cs
nop
ret
imul
arpl
repnz
adc
cmp
mov
ds
jae
dec
sti
dec
jae
stos
stos
push
or
push
push
into
cld
push
(bad)
sub
mov
clc
dec
icebp
clc
lea
dec
xor
shl
inc
dec
clc
(bad)
sbb
je
mov
mov
imul
loop
ins
push
outs
mov
mov
call
(bad)
movs
add
neg
ret
sbb
mov
push
mov
mov
inc
add
ja
mov
std
and
and
out
inc
icebp
mov
fs
jno
pop
mov
or
push
js
daa
cmp
and
and
(bad)
dec
push
and
push
fld
xchg
adc
add
les
mov
cmp
sub
out
and
stos
sbb
add
pop
mov
push
dec
call
(bad)
fnsave
jno
pop
jae
mov
and
jae
jge
aas
mov
lods
fdivr
jbe
inc
mov
addr16
into
scas
jae
xchg
(bad)
sbb
pushf
(bad)
arpl
ud1
gs
fwait
in
mov
mov
push
cli
cmp
jmp
sub
ja
xchg
xor
loop
mov
adc
icebp
dec
sbb
(bad)
aad
daa
aam
inc
mov
shr
pusha
inc
mov
ins
pop
inc
sti
ins
je
icebp
nop
xchg
mov
mov
sbb
inc
adc
jle
call
sbb
call
out
add
mov
movhlps
inc
pop
mov
sbb
mov
sbb
add
loope
cmps
xchg
je
movs
adc
push
jp
test
fcomp
out
int
bound
cwde
mov
cmp
rcl
dec
jb
shl
and
xchg
aad
aad
outs
sbb
aaa
sub
cmps
test
pop
dec
or
jae
sub
xor
sbb
scas
jno
fdivr
sar
out
cs
inc
gs
sub
push
or
out
xchg
test
mov
fbstp
xchg
das
push
into
xor
sbb
je
repnz
or
add
retf
jae
aaa
ds
push
push
sbb
(bad)
jnp
dec
arpl
xchg
add
shl
sti
cmc
jmp
and
cs
fucom
pushf
sub
je
adc
shl
addr16
push
mov
inc
mov
sub
or
mov
pusha
xlat
xlat
arpl
dec
aas
int
jbe
push
mov
jae
fs
push
sub
fistp
rcr
fs
ficomp
(bad)
xor
push
call
jae
dec
add
push
cmc
inc
(bad)
and
pop
mov
push
push
mov
mov
lea
dec
or
mov
mov
cli
mov
imul
mov
sub
not
sbb
pop
out
sub
js
mov
fprem
in
dec
inc
mov
mov
movs
mov
in
dec
mov
pop
dec
mov
(bad)
cs
cmp
sub
sbb
cld
aaa
mov
dec
shr
push
jae
xor
jmp
imul
inc
jno
mov
push
add
dec
xchg
mov
test
inc
xchg
daa
or
scas
lea
outs
sbb
dec
add
retf
mov
sub
or
cmc
adc
lds
aas
jecxz
mov
sub
pushf
xchg
sbb
ins
xor
cmp
jne
sbb
arpl
icebp
outs
jecxz
mov
lock
int3
mov
neg
movs
xchg
mov
jne
nop
mov
icebp
dec
outs
fidivr
xlat
pusha
jnp
sub
mov
mov
dec
cs
jmp
mov
mov
cmp
mov
xchg
stos
or
ja
in
cmp
jne
sbb
inc
and
fs
sahf
xchg
push
dec
nop
jbe
mov
xchg
rol
jmp
jmp
sbb
das
test
jmp
cmp
shl
cmp
mov
push
pop
arpl
mov
out
hlt
xor
inc
lods
push
aad
int
xor
mov
push
and
stos
push
inc
pop
adc
inc
ins
arpl
inc
cmp
mov
xlat
ins
lds
pushf
jae
fisub
jae
rcr
adc
sub
bound
outs
cmps
retf
sbb
jbe
jae
cmp
inc
jmp
fwait
shl
nop
dec
add
mov
gs
cld
inc
(bad)
pushf
cmp
pusha
cmc
pop
jbe
call
pop
pop
xchg
cmc
add
mov
sub
lods
mov
sub
pop
push
xchg
std
adc
mov
enter
clc
xchg
lea
in
add
nop
leave
mov
adc
call
and
sbb
and
mov
(bad)
dec
cmp
inc
sbb
and
adc
test
jne
test
inc
and
sub
ret
pop
ja
pushf
mov
mov
mov
cmpxchg
lods
dec
jnp
jmp
mov
cmp
xor
shr
push
xchg
ret
inc
sti
or
int3
pop
push
sbb
imul
data16
adc
cmps
fist
imul
mov
pop
std
mov
(bad)
mov
repz
or
dec
mov
movs
xchg
mov
fcmovne
lahf
cwde
lds
out
push
sbb
jne
stos
clc
jo
cmps
pop
push
mov
jae
icebp
outs
into
adc
xchg
jae
jmp
movups
shl
mov
mov
movs
retf
or
nop
and
cmp
sbb
inc
push
add
lds
inc
adc
pop
jp
pmaxsw
push
repz
mov
mul
mov
je
adc
or
jmp
sbb
rcl
inc
mov
xor
repz
inc
out
add
sbb
sbb
and
je
rcr
adc
xchg
loope
mov
mov
imul
stos
imul
push
xor
retf
jae
lahf
xchg
sahf
or
cld
ret
xchg
test
test
mov
dec
movs
add
repz
stc
hlt
jge
fcmovne
mov
mov
stos
pop
cmp
cld
mov
adc
adc
jmp
mov
cmp
scas
(bad)
(bad)
in
xchg
mov
adc
int3
mov
mov
adc
xor
jns
mov
jne
jbe
dec
cli
pop
adc
clc
sbb
(bad)
je
pop
mov
sbb
sbb
xor
daa
lods
or
iret
mov
repz
inc
scas
sbb
test
jno
jae
add
and
aaa
cmp
leave
dec
pop
jae
into
shl
enter
clc
fst
rcr
sbb
rcl
mov
xlat
jp
adc
dec
mov
lds
push
jbe
pop
sbb
ins
sbb
enter
mov
push
stos
retf
mov
add
jnp
in
clc
push
sub
fidiv
dec
mov
xlat
jnp
sub
stos
push
mov
adc
retf
push
sti
sbb
and
in
xchg
xchg
jl
xchg
mov
pop
pop
(bad)
cdq
dec
and
cmps
(bad)
jmp
sub
dec
stos
jne
xor
push
iret
popf
dec
or
in
jo
lahf
je
sub
cmps
arpl
sbb
xor
cld
jl
movs
inc
mov
dec
adc
jb
mov
sbb
pop
outs
stc
cmp
push
loope
in
mov
pop
ror
jne
js
adc
xor
icebp
scas
dec
mov
and
mov
ss
jge
push
test
(bad)
stos
xchg
xor
pop
jo
mov
sub
xlat
ins
push
outs
sub
xor
push
mov
test
fdiv
add
pop
add
and
shl
dec
stc
push
out
daa
sbb
inc
(bad)
push
mov
jns
retf
mov
dec
inc
rol
nop
gs
lea
aaa
pushf
jb
out
dec
imul
sbb
jl
mov
inc
sbb
jnp
xor
push
mov
mov
fbld
test
sahf
pop
js
jl
pushf
inc
push
test
xchg
retf
pop
js
cmp
je
sbb
inc
sbb
cmp
daa
push
sbb
adc
pop
je
inc
xchg
int
cld
push
mov
nop
sbb
loope
sbb
adc
mov
fisttp
jae
leave
push
out
addr16
mov
loope
fdiv
pop
and
aaa
js
sbb
and
or
dec
mov
dec
mov
leave
xor
data16
add
push
xchg
cmp
sub
retf
add
pop
test
cmp
jae
test
out
arpl
pop
int3
or
xor
pop
xor
xor
arpl
lock
jae
xchg
fild
or
sbb
mov
scas
ss
sub
and
in
mov
cmp
mov
mov
fild
dec
fnstsw
cmp
ret
add
push
pop
call
leave
xchg
mov
cmp
dec
repnz
rcr
imul
push
pop
iret
pop
sti
(bad)
xor
mov
add
xchg
xor
test
push
cmps
call
jge
cmp
popa
pop
scas
cmp
push
data16
aad
xchg
inc
fs
aam
int
call
popf
sbb
add
jp
mov
retf
in
cwde
push
les
xor
mov
mov
data16
(bad)
in
hlt
and
outs
add
test
iret
ds
hlt
je
sbb
push
div
dec
ret
sub
xchg
mov
bound
add
popf
hlt
popf
fcom
addr16
fcom
js
out
pusha
xor
aam
jns
mov
mov
mov
mov
nop
xchg
pop
jle
push
les
outs
movs
lds
pop
jae
and
adc
lods
loope
or
push
movs
mov
mov
retf
fistp
fnsave
cmp
cmp
adc
mov
sub
imul
xchg
jne
bound
pushf
test
add
cmp
mul
bound
sub
jb
pop
mov
sub
out
cmp
add
addr16
pop
out
pop
cmp
mov
adc
mov
fsubp
jae
inc
jae
xlat
xor
(bad)
xor
push
fmul
(bad)
mov
pop
xchg
mov
adc
sbb
sub
dec
out
jp
mov
dec
in
push
inc
pop
or
push
in
hlt
jae
pop
lahf
adc
jmp
sahf
mov
and
mov
rcl
repnz
push
xchg
pop
loopne
gs
stc
outs
or
sbb
popa
pop
fsubrp
leave
jl
pop
shl
lds
pop
gs
lahf
and
mov
xlat
ficom
push
sbb
adc
fstp
mov
adc
dec
fs
test
je
sbb
adc
fist
add
movs
dec
push
mov
xor
mov
popa
je
leave
(bad)
xor
xchg
adc
fisttp
ror
mov
test
add
push
fstp
inc
mov
xlat
les
cmove
aaa
call
lock
mov
rol
stos
out
or
ret
dec
pop
test
mov
ss
mov
call
inc
cmps
push
push
je
pop
stos
push
bound
fwait
adc
mov
(bad)
sub
mov
mov
fiadd
push
xchg
xchg
adc
xchg
in
mov
jbe
shl
shl
lods
mov
jnp
mov
pop
and
dec
cmp
aam
dec
sbb
xchg
or
add
pop
scas
mov
sbb
sbb
jg
sub
xor
xchg
sbb
sbb
xchg
sbb
neg
mov
test
push
mov
repz
ins
xchg
xchg
(bad)
cmps
jae
popa
repz
xor
xchg
pop
mov
cld
mov
cmp
stc
push
ins
mov
adc
neg
jl
mov
pushf
add
rcl
push
xchg
jae
push
jb
bound
in
sbb
push
repnz
mov
jg
dec
pop
in
fwait
xchg
ins
sbb
xchg
jnp
sti
les
mov
bound
jl
inc
jne
movs
or
fs
sbb
adc
pop
cmp
test
add
xchg
je
test
and
push
xchg
imul
nop
js
rcr
add
daa
adc
retf
xor
add
ret
fstp
add
scas
nop
ss
cmp
imul
das
mov
xor
ins
sbb
rcr
int
xchg
les
stc
mov
cmp
dec
in
cld
inc
shl
rcr
out
repnz
mov
jmp
inc
js
in
sahf
movs
cwde
sbb
sub
jae
jl
out
and
scas
sbb
mov
sbb
out
xchg
push
ficomp
(bad)
(bad)
push
stos
fwait
lds
popf
mov
inc
sub
inc
repz
aam
pop
mov
or
mov
scas
loopne
sub
pop
and
loop
xchg
adc
aad
sbb
jne
or
mov
jo
repz
arpl
xchg
sbb
ins
and
in
test
mov
xor
or
xchg
pop
cmps
neg
cmc
ss
jg
adc
sbb
adc
leave
sti
jle
mov
addr16
inc
repnz
inc
(bad)
cmc
xor
test
jg
mov
xlat
add
inc
clc
ja
xchg
mov
das
in
ret
cmps
call
push
dec
xor
mov
mov
ret
fiadd
xor
cmps
dec
mov
and
and
test
mov
retf
push
pop
jle
sahf
mov
das
lds
xchg
test
out
inc
add
shl
inc
and
neg
mov
and
adc
and
sub
cmp
xchg
sbb
mov
inc
popa
cmp
push
ficomp
push
sub
or
xchg
stos
sbb
jnp
test
cmp
and
and
sbb
pop
sbb
push
sub
hlt
out
sub
xchg
pushf
mov
shl
mov
mov
shr
lods
mov
aas
push
mov
mov
fwait
(bad)
jg
hlt
in
outs
mov
(bad)
(bad)
push
mov
jecxz
pop
xchg
sbb
ins
mov
push
imul
pop
sub
cmp
inc
call
jne
mov
inc
adc
sbb
adc
mov
jbe
in
jmp
inc
xchg
jmp
loopne
fld
sar
arpl
mov
pop
cmps
dec
mov
and
(bad)
rcr
repz
adc
or
jo
add
inc
ss
sbb
rcl
mov
repz
cmp
fwait
sbb
dec
dec
addr16
jns
(bad)
sti
mov
inc
push
pop
push
cmp
cmps
xor
aas
(bad)
repnz
lea
clc
jb
xchg
push
mov
ret
xchg
and
cmc
div
sbb
mov
xor
push
add
cwde
aam
call
mov
clc
aad
push
sub
jnp
xchg
jns
and
dec
and
les
dec
sub
dec
xchg
aaa
sub
pop
push
fs
pop
pop
rcl
(bad)
jle
out
sbb
icebp
push
stc
mov
ror
imul
outs
mov
cld
push
cmp
in
mov
xchg
sahf
cmps
cmp
repnz
int
mov
mov
and
mov
std
adc
jle
enter
jo
jae
jb
js
add
sbb
sbb
rcl
sbb
js
push
lds
ret
call
fwait
loop
sbb
push
outs
sub
mov
mov
imul
sub
mov
stc
dec
jecxz
mov
stc
inc
mov
or
and
sbb
push
(bad)
sbb
jbe
jge
je
call
and
fsub
jp
mov
pop
push
test
xchg
in
add
push
(bad)
js
jae
add
dec
les
jl
out
add
shl
aad
retf
dec
dec
pop
mov
outs
jl
hlt
call
pop
sbb
outs
and
mov
mov
jae
xchg
jns
stc
or
adc
bound
sbb
jb
xor
stos
fstp
inc
sar
push
call
mov
jns
inc
clc
(bad)
cld
bound
fild
jne
xchg
mov
sbb
mov
mov
mov
sahf
sbb
push
sar
icebp
ins
js
fmul
test
mov
push
pop
les
xchg
mov
xor
stos
data16
add
jo
mov
mov
xchg
push
mov
xlat
mov
add
cmp
enter
mov
out
dec
es
nop
push
push
fidivr
movs
pushf
jle
cmps
mov
mov
je
pop
imul
mov
cmp
add
(bad)
mov
in
cmp
xchg
movs
push
rol
xor
lahf
fs
adc
sub
shl
sbb
inc
mov
ss
cmp
xchg
in
arpl
add
and
sbb
mov
xchg
sbb
jecxz
xchg
mov
sbb
rcr
mov
jle
xchg
loop
sbb
push
sbb
leave
pop
inc
jne
add
sbb
loop
int
xor
mov
mov
fnstcw
fsubr
jp
or
push
aas
and
jg
dec
xchg
push
pop
add
xor
sub
rcr
jmp
es
jae
or
out
mov
and
pop
cmp
jae
in
mov
mov
shl
(bad)
xlat
adc
cld
cmp
js
mov
fs
stos
push
adc
dec
pop
dec
mov
movs
pusha
call
inc
pop
data16
mov
imul
xchg
and
mov
push
mov
call
fistp
xchg
test
and
gs
lods
(bad)
push
push
sub
add
jb
jae
push
xchg
leave
sbb
adc
xchg
mov
xchg
sbb
in
sub
mov
cmp
jnp
xchg
stos
push
lds
or
arpl
cmps
test
mov
push
mov
inc
adc
pop
adc
mov
icebp
add
movs
adc
clc
xor
sbb
inc
inc
bnd
dec
mov
mov
jnp
clc
(bad)
xchg
mov
paddsb
jae
xchg
xchg
jns
mov
xchg
push
test
dec
sahf
pop
cli
lods
jae
and
cs
enter
mov
sbb
(bad)
cli
sub
cdq
fdivr
lds
xchg
sub
jge
mov
xor
push
adc
push
les
sbb
inc
inc
scas
fstp
cmp
push
ja
push
xchg
mov
push
into
adc
fimul
(bad)
(bad)
mov
hlt
jae
ficom
adc
popf
cdq
retf
call
mov
arpl
hlt
xchg
mov
cdq
add
daa
(bad)
fsubr
xor
add
add
sub
clc
xchg
out
sbb
add
mov
leave
pop
jge
retf
mov
xor
xor
sbb
xlat
push
ret
jp
fisubr
fneni(8087
xchg
mov
loop
nop
cmp
mov
sbb
sbb
jecxz
fwait
inc
js
sub
sub
xor
ds
adc
aaa
icebp
jae
and
sar
xor
movs
xchg
mov
push
mov
movups
ret
cli
ja
test
js
ror
test
mov
lds
out
les
gs
lods
sbb
fldcw
or
dec
int3
dec
outs
popf
xor
mov
(bad)
mov
mov
jns
mov
popf
adc
leave
out
xchg
cmp
lock
dec
out
xchg
mov
stc
mov
jae
add
inc
mov
test
stos
jp
pop
cmp
adc
sbb
inc
ror
and
imul
je
ins
inc
push
call
imul
inc
pop
inc
cmp
loopne
add
push
pop
sbb
push
xor
test
mov
scas
sbb
cmps
xor
add
xchg
jmp
jae
xor
lods
push
icebp
pop
sbb
cwde
repz
mov
ret
jae
xor
adc
sub
std
cld
hlt
dec
dec
xchg
int3
xchg
pop
dec
adc
sbb
les
mov
fnsave
sbb
inc
mov
(bad)
xor
mov
jmp
xor
div
mov
jbe
ret
popa
mov
xchg
mov
(bad)
in
sbb
add
pop
xor
xchg
jmp
add
mov
pop
mov
aas
xor
jecxz
cmp
jge
inc
add
(bad)
out
adc
xor
iret
mov
div
dec
sbb
retf
dec
sbb
aam
add
call
test
fstp
scas
and
mov
xchg
loopne
xchg
pop
popa
and
push
gs
popf
jp
cmc
xchg
aaa
scas
push
mov
out
hlt
ss
fldcw
movs
mov
js
call
add
push
les
xchg
daa
adc
dec
inc
scas
xor
xchg
pushf
jae
mov
fwait
clc
mov
in
int
lods
test
push
iret
dec
cmps
stos
es
xchg
aad
jp
leave
sub
imul
leave
add
loop
mov
jae
test
or
sbb
jne
mov
jle
adc
inc
mov
leave
test
pop
out
fisubr
jae
retf
mov
test
jl
dec
(bad)
sub
cmp
jae
push
and
mov
dec
jle
ret
retf
adc
push
fidivr
(bad)
packuswb
xchg
pop
jge
arpl
shl
push
jbe
mov
xchg
jbe
repnz
push
ds
pop
push
xchg
sbb
fild
mov
adc
dec
mov
test
jnp
inc
loop
inc
sbb
pop
(bad)
int
cmp
aas
xor
push
or
and
mov
les
pop
test
test
popf
push
push
and
inc
repnz
inc
xchg
rol
sub
mov
pop
fistp
das
rol
sbb
dec
jecxz
movs
pop
jae
xor
cmp
add
cmps
jae
add
aam
cmp
arpl
lahf
mov
xchg
addr16
test
(bad)
adc
and
adc
sbb
cmp
fdiv
dec
ds
ret
rcl
xchg
pop
pop
jae
(bad)
pop
jl
sub
inc
pop
enter
mov
mov
xchg
mov
and
add
xchg
jl
ret
inc
out
jae
xor
cmp
cs
sbb
dec
not
or
mov
call
popf
stc
xor
(bad)
popa
cwde
pop
sbb
(bad)
sbb
rcl
stos
popf
pop
inc
js
add
gs
imul
adc
jg
addr16
mov
sub
repz
(bad)
cli
call
cmp
xchg
adc
xor
das
push
push
stos
icebp
ss
dec
jnp
mov
xchg
push
xor
and
xor
jae
sub
retf
call
cmp
cmc
loop
xor
push
fwait
cmp
mov
add
in
ret
inc
ins
or
or
push
call
inc
xor
fs
pop
imul
outs
out
cmp
pmaddwd
mov
cmps
push
xchg
test
rcr
jb
retf
inc
mov
mov
or
or
or
xor
pop
add
dec
(bad)
and
mov
imul
cs
lods
jbe
sbb
ja
push
sub
cmc
add
ds
dec
add
mov
jb
(bad)
mov
test
bnd
and
pop
scas
bound
ja
imul
xchg
pop
sbb
jno
jb
nop
outs
mov
cmp
mov
push
shr
sbb
push
repz
pop
cmp
mov
ret
sbb
mov
addr16
ja
jnp
hlt
es
xchg
and
ds
dec
jns
mov
inc
mov
pop
int
pop
xchg
jo
push
push
js
ins
js
popf
xchg
ds
cld
mov
iret
out
repz
stc
adc
xchg
loop
mov
push
movs
push
sbb
add
outs
loope
mov
dec
cwde
into
ret
aam
js
mov
(bad)
xchg
ds
xchg
jns
cmp
dec
xor
xchg
aam
ss
jae
movs
xchg
jbe
daa
nop
sbb
and
push
mov
adc
jle
mov
xchg
pushf
call
mov
jae
leave
iret
aad
dec
pop
pushf
sbb
setbe
mov
nop
fwait
dec
dec
jb
and
int3
jae
add
mov
fldz
loop
je
mov
jns
mov
adc
daa
inc
dec
cmp
dec
movs
ss
adc
ja
sbb
push
and
sbb
and
mov
ds
dec
cmps
or
mov
push
cmp
aaa
jns
mov
or
sahf
inc
pop
popa
call
mov
jecxz
jg
fidivr
loope
test
je
mov
retf
inc
cdq
std
mov
repz
jb
mov
cmp
dec
mov
lahf
(bad)
ja
dec
pop
scas
pop
repz
dec
jae
sahf
inc
mov
and
push
mov
test
lods
movs
cmps
xor
or
adc
mov
imul
mov
mov
jb
push
push
es
(bad)
xor
test
jne
cdq
inc
jl
xor
jae
or
and
pop
mov
mov
cmps
repnz
mov
pop
push
rcr
add
xchg
dec
jns
dec
pop
adc
xchg
aam
push
sub
mov
cdq
movs
leave
mov
arpl
popa
mov
mov
stc
cli
les
add
xchg
imul
sbb
mov
repz
sbb
push
pop
sub
or
jb
not
cwde
push
ret
pop
mov
jne
pop
mov
mov
add
xor
mov
and
fidiv
jp
xchg
imul
adc
sub
cmp
rcl
mov
xchg
mov
inc
add
(bad)
xchg
popa
or
sub
sbb
ins
in
cmp
imul
mov
aam
test
shl
repz
jle
sahf
or
loope
clc
adc
mov
loopne
xchg
dec
stos
add
pop
std
jecxz
inc
and
mov
mov
leave
jb
push
sbb
dec
xor
aas
fstp
xchg
mov
(bad)
mov
dec
xor
cmp
rol
inc
jae
sahf
mov
sub
rcl
cmps
jb
push
shl
cmps
enter
pop
mov
sbb
ret
jecxz
lock
dec
or
sbb
pop
and
pop
cmp
xor
mov
xlat
jp
mov
push
xchg
xchg
js
mov
adc
xchg
sbb
in
xchg
cmp
ror
ins
aad
call
pop
and
pushf
imul
mov
fstp
pop
add
in
pop
mov
push
in
rcr
neg
mov
cmp
sbb
sbb
mov
add
test
sbb
push
rcr
test
adc
inc
or
xor
outs
jne
sbb
cmp
inc
sbb
imul
hlt
shl
jg
xchg
push
add
or
(bad)
xchg
std
or
mov
out
je
je
repz
mov
add
(bad)
sbb
mov
arpl
call
fs
sbb
fisttp
mov
xchg
mov
js
sbb
das
lods
xor
jbe
sar
mov
in
push
adc
scas
sbb
cld
scas
mov
mov
pop
xor
push
leave
jmp
rcr
cmp
adc
cdq
scas
or
int3
jmp
fsub
and
sbb
dec
sbb
fs
xchg
inc
or
xchg
rcl
movs
dec
adc
rol
xchg
and
push
in
push
mov
ret
mov
cmp
ficomp
cmp
scas
inc
xchg
outs
xchg
sub
shr
mov
icebp
mov
in
ja
sub
retf
lods
or
push
inc
mov
mov
dec
pop
nop
xor
int
shl
mov
fs
push
lods
stc
jp
and
scas
pop
jp
(bad)
sbb
mov
xchg
repz
mov
arpl
xor
es
cwde
movs
adc
ja
mov
imul
jae
in
and
ja
sbb
pop
call
jae
and
loopne
sbb
cli
in
mov
in
mov
inc
stos
inc
push
repz
pop
jb
(bad)
repnz
sbb
movs
dec
xor
xchg
adc
xchg
fs
gs
or
cmp
mov
xor
test
mov
dec
xchg
jb
mov
xchg
inc
jns
(bad)
(bad)
aaa
sub
rcl
scas
ja
sti
xor
mov
sub
out
pop
jg
in
inc
jno
shl
out
adc
mov
mov
ficomp
(bad)
mov
(bad)
movs
mov
test
test
push
jg
dec
nop
cdq
and
jae
sub
jnp
outs
dec
adc
xchg
xor
sub
ret
adc
push
pop
stos
mov
clc
xchg
dec
jle
int
jge
lods
jae
xor
mov
outs
sbb
and
mov
add
sub
cwde
jnp
inc
ret
add
push
jbe
(bad)
dec
mov
sahf
lods
(bad)
push
add
xchg
mov
mov
(bad)
lea
mov
ja
mov
cdq
sbb
sbb
sbb
push
adc
int3
imul
lods
(bad)
mov
jne
inc
movs
xlat
cwde
jp
mov
nop
outs
movs
xlat
mov
call
fld
icebp
mov
jae
mov
ins
inc
int
lods
fidiv
cmps
scas
mov
jl
cmp
jmp
mov
xor
in
cmp
inc
(bad)
stos
jge
and
xchg
adc
mov
xchg
aam
cmc
arpl
cmps
and
or
scas
movs
sbb
and
inc
inc
(bad)
xor
fsubr
stos
xlat
das
retf
loopne
stc
aaa
push
or
js
in
mul
(bad)
mov
lds
xor
mov
xchg
sbb
inc
jmp
mov
xor
aaa
ror
jl
mov
inc
xor
call
add
add
mov
idiv
fstp
movs
xchg
(bad)
adc
xor
pop
and
jmp
arpl
aas
gs
out
mov
daa
cmp
shl
jns
repnz
cmps
mov
outs
ret
ja
push
out
mov
or
out
ror
mov
and
fwait
sbb
cli
dec
sbb
mov
cs
cli
pop
push
mov
inc
mov
cli
es
inc
aaa
fnsave
xchg
das
sbb
cs
xchg
enter
ja
fwait
dec
clc
je
out
cdq
xchg
std
jns
mov
mov
ja
dec
pop
sbb
xlat
repz
out
repz
out
jle
lods
mov
adc
sti
rep
mov
popa
div
adc
and
jb
pop
jno
shl
lahf
call
fist
mov
xchg
shl
call
add
pusha
dec
ins
xchg
mov
mov
and
sbb
stc
adc
sub
sbb
adc
mov
adc
add
mov
or
call
dec
sub
retf
pop
jge
push
shl
sbb
dec
icebp
jp
pop
xchg
sbb
scas
push
fcom
add
sbb
retf
or
pusha
jg
in
ror
xchg
sbb
cs
(bad)
push
and
and
lods
test
out
adc
mov
mov
push
add
inc
mov
mov
xchg
jnp
sub
add
push
mov
cmps
sub
out
mov
stos
or
adc
inc
outs
lds
push
pop
imul
mov
retf
imul
mov
jns
ja
pop
cmp
mov
sbb
and
adc
add
mov
loope
or
jp
mov
inc
mov
scas
das
cwde
and
jae
lock
out
inc
adc
add
cmp
icebp
movs
dec
ja
ror
pop
sbb
adc
sbb
adc
push
mov
jns
and
stos
or
repnz
aam
push
ror
inc
jnp
push
outs
or
aaa
retf
movs
jae
mov
push
mov
dec
outs
mov
cmc
pop
push
mov
and
int3
ret
mov
jb
cmp
shl
jbe
add
bound
stos
fidiv
sub
nop
stc
sbb
clc
push
sbb
jae
xor
jbe
jge
sbb
repnz
(bad)
mov
inc
push
adc
pusha
out
xchg
int
test
xchg
lds
xchg
ret
and
mov
inc
push
adc
les
pop
out
jno
repnz
mov
outs
or
jnp
lods
stos
mov
and
data16
iret
call
and
sbb
xchg
adc
test
sahf
jae
mov
jge
sbb
les
inc
gs
mov
mov
jns
xor
dec
mov
retf
jo
fcom
dec
js
or
xchg
imul
pusha
push
js
jecxz
and
xor
or
add
dec
mov
mov
(bad)
adc
inc
(bad)
fidivr
sbb
sub
jmp
ins
repz
mov
fstp
test
xor
jno
mov
lahf
test
or
sbb
fnstenv
pop
retf
ror
ss
dec
retf
add
outs
cwde
cmp
ja
sbb
pop
das
and
rol
leave
ins
(bad)
jne
scas
add
adc
xchg
mov
mov
out
in
sub
jmp
sbb
out
sbb
mov
test
fdiv
in
sbb
mov
xor
loopne
xchg
inc
dec
pusha
bound
adc
pop
inc
pop
dec
lock
push
push
xor
call
xor
lods
jecxz
in
fiadd
mov
mul
push
jge
stc
cmp
pop
inc
jp
push
dec
test
xchg
or
lods
lods
push
sub
js
ret
mov
mov
dec
xor
(bad)
or
push
lock
lea
je
sbb
xor
lods
cmp
imul
mov
xchg
xor
cmps
call
lods
jp
xlat
and
in
or
push
repz
mov
sti
jle
sbb
pop
fdivr
in
dec
mov
mov
jb
pop
ins
jo
cmp
imul
scas
loope
mov
jb
dec
fsubr
lea
xchg
pop
cmp
adc
cmp
sbb
push
clc
sbb
test
mov
jl
push
mov
dec
movs
mov
mov
popf
push
adc
mov
js
cli
iret
mov
pop
jl
xor
iret
push
push
sbb
sbb
arpl
xor
arpl
iret
addr16
fcom
addr16
jo
in
mov
jo
test
inc
mov
je
retf
push
xor
jb
mov
sysret
jb
lds
je
sbb
test
ja
cmp
push
fs
jb
and
adc
aad
data16
repnz
ins
fiadd
out
mov
sub
or
pop
mov
or
or
js
inc
add
xchg
out
into
movs
stos
stc
mov
dec
retf
test
inc
dec
push
cdq
nop
jae
lods
ja
fistp
div
jbe
retf
sbb
neg
imul
jmp
out
call
mov
or
das
jg
ss
jns
jnp
adc
pop
(bad)
pop
jmp
xchg
mov
ficom
mov
aaa
cdq
cmp
int
mov
mov
inc
ja
movs
or
xchg
dec
add
jmp
adc
push
fs
and
add
cmps
and
stc
aam
jle
mov
jae
loopne
xor
pop
cmps
jae
sbb
inc
mov
sub
jae
iret
mov
sub
jae
xchg
add
mov
and
inc
xor
mov
push
adc
jecxz
int3
sbb
loope
xchg
push
adc
js
test
loope
gs
scas
mov
dec
cld
sub
call
ja
jmp
jae
jecxz
int
je
fist
sbb
shl
mov
sub
adc
xchg
jl
sahf
ins
ss
mov
rcl
sbb
mov
ret
js
in
outs
arpl
sub
movs
or
xlat
pop
push
jns
nop
lds
jle
das
xchg
xor
mov
pop
ret
ins
dec
and
or
inc
adc
cmc
(bad)
or
test
jae
cli
aad
cli
jmp
sar
or
adc
sbb
mov
fsubr
pshufw
out
inc
js
iret
into
test
ds
add
or
loope
and
pop
lock
inc
scas
jno
fidivr
out
pop
pop
jno
xchg
xlat
push
jle
inc
js
jae
stc
imul
adc
adc
pop
lock
jae
cmc
cmp
mov
lds
push
test
cdq
add
fucomp
sbb
push
add
fstp
in
loope
(bad)
cmp
shr
fcmovu
ja
test
sbb
and
mov
mov
int
pop
inc
jae
jae
cwde
sbb
inc
mov
mov
out
push
ret
add
stc
ins
je
pop
or
out
sbb
pop
dec
sbb
popa
xlat
pop
jae
lea
and
js
in
fmul
(bad)
push
aad
sub
push
fnstcw
pop
xchg
(bad)
jne
inc
idiv
lods
sub
jno
enter
sbb
push
and
bound
fst
sbb
mov
jp
fimul
ins
bound
pushf
jecxz
push
icebp
jo
movs
xchg
daa
sbb
call
mov
ss
retf
sbb
popf
lods
repnz
nop
dec
xor
fld
and
fwait
out
mov
mov
ja
xchg
mov
ror
pop
mov
ins
jbe
mov
call
lods
mov
push
push
jg
inc
mov
(bad)
sub
jp
daa
mov
enter
stos
stos
sub
repnz
stc
mov
in
pop
xchg
pushf
test
inc
call
jmp
adc
lds
sbb
pop
or
xchg
in
dec
jg
data16
fmul
jg
jl
vpshaw
mov
add
jmp
adc
ret
out
sbb
pop
cmp
push
cmp
push
repz
outs
cmp
ja
sbb
pop
jae
sub
add
fist
das
cwde
mov
sbb
cmp
cmp
sahf
jns
xlat
sub
int3
imul
xchg
sbb
jo
sbb
adc
xchg
mov
aad
out
adc
out
or
sbb
test
mov
jg
jl
adc
pop
leave
add
popf
scas
mov
adc
scas
pop
nop
add
and
push
mov
sub
mov
sbb
dec
addr16
inc
jnp
fld
fdivr
in
mov
into
mov
scas
dec
sbb
jns
lods
dec
pop
xlat
cmc
ret
fidiv
add
cwde
xchg
mov
ja
leave
shl
sbb
jge
push
jmp
sbb
dec
or
adc
in
outs
(bad)
cmps
mov
or
addr16
cwde
rcl
cdq
rcl
out
and
mov
cmc
mov
dec
inc
aad
mov
pop
out
xchg
repz
jno
xor
dec
jb
jae
jo
into
popa
mov
outs
jo
inc
xchg
stos
aaa
and
aad
xchg
cs
add
and
jo
or
xor
cmp
mov
aaa
(bad)
cmps
mov
adc
ss
aad
push
pop
mov
jmp
fwait
mov
in
ret
cmp
call
cmp
bound
dec
cld
jae
in
xchg
jnp
and
in
add
dec
sbb
imul
std
add
add
hlt
sub
mov
leave
mov
push
jbe
xor
or
jnp
mov
jne
and
mov
iret
cs
or
add
addr16
out
cmps
inc
js
add
iret
movs
jecxz
arpl
lahf
mov
fsub
jae
pop
cmps
call
fwait
ds
dec
ret
retf
fwait
les
mov
jp
push
in
push
(bad)
xchg
int
sbb
fmul
data16
imul
movs
(bad)
aas
or
aad
stos
mov
je
clc
stos
push
pop
div
fsubr
fdiv
xchg
mov
push
mov
mov
lods
or
xor
mov
(bad)
adc
xor
stc
xchg
pop
jbe
dec
inc
jle
mov
(bad)
jmp
mov
sub
stos
stos
pop
stc
jmp
push
outs
mov
inc
cmp
push
dec
fs
mov
stc
xor
cmp
and
mov
jb
int
imul
shr
push
lods
es
jmp
push
mov
lds
adc
hlt
push
std
(bad)
dec
shl
int
dec
mov
ins
mov
jg
inc
pop
push
push
mov
sub
and
in
mov
js
outs
jl
xchg
jp
pop
fist
ins
jnp
or
push
ja
in
fisttp
outs
cld
(bad)
and
fld
xchg
jne
test
in
imul
or
data16
outs
jo
inc
not
push
cmp
aas
dec
enter
add
or
jle
mov
cld
push
les
data16
js
fldcw
hlt
adc
outs
xor
aas
fistp
(bad)
sbb
mov
push
in
aam
inc
add
sbb
xchg
mov
dec
iret
dec
xchg
or
pop
ret
scas
out
mov
ja
adc
xchg
pushf
cwde
xchg
xor
(bad)
cmc
dec
push
fldcw
jle
cmc
xchg
cli
fidiv
fxch
rcl
data16
fldcw
mov
pop
popa
loop
sub
sar
mov
imul
das
lea
xchg
bound
ins
inc
gs
adc
adc
test
enter
xchg
out
leave
mov
mov
cmc
sub
stos
bound
retf
stos
(bad)
(bad)
fstp
xor
xchg
sti
int3
xchg
addr16
sub
daa
xor
inc
scas
sub
(bad)
outs
pop
mov
sbb
or
jbe
lods
sbb
pop
ret
sahf
mov
mov
inc
adc
int
sub
les
ret
mov
jae
jb
in
mov
imul
mov
mov
push
jno
(bad)
hlt
inc
jae
les
sar
sbb
xor
ds
xor
or
nop
(bad)
xlat
mov
shl
loop
mov
push
add
or
cli
mov
push
(bad)
mov
xchg
dec
jecxz
mov
dec
in
stc
jmp
sbb
ins
hlt
sbb
add
fnstcw
sbb
dec
fidivr
fsub
ds
je
push
jns
hlt
xchg
mov
stos
dec
mov
cmp
pushf
pop
loop
les
push
xchg
stc
js
jmp
out
iret
in
shr
xchg
push
cmp
mov
xchg
xor
addr16
cmp
push
sbb
sub
cs
fdiv
cs
out
jmp
mov
inc
mov
das
add
sbb
lds
shl
add
push
sbb
repnz
test
imul
adc
xor
mov
lods
mov
mov
jne
push
inc
push
in
xchg
rcr
push
retf
bound
mov
mov
lods
(bad)
xchg
iret
dec
retf
les
mov
pop
sub
add
into
sbb
push
pusha
out
inc
cmps
leave
xchg
pop
pop
pop
daa
cmps
sbb
repnz
push
adc
push
inc
popf
mov
nop
int
jmp
fwait
push
jmp
push
fadd
je
dec
in
cmp
in
sub
adc
cmc
add
inc
jecxz
adc
xor
addr16
mov
mov
lods
push
inc
idiv
outs
jbe
mov
or
xor
adc
sti
jae
ror
push
dec
sbb
std
ds
mov
pop
retf
push
call
dec
xchg
sahf
imul
fwait
add
pushf
or
inc
loopne
jle
or
push
loop
or
rcl
mov
aaa
mov
adc
adc
test
mov
out
in
aad
mov
jo
sbb
movs
mov
je
add
mov
jle
fsub
and
jne
pushf
(bad)
iret
mov
ins
xchg
sbb
ss
inc
xor
mov
jle
cmp
sbb
sbb
mov
adc
cs
das
adc
adc
sbb
out
arpl
mov
out
push
jg
xchg
xchg
ins
jno
call
(bad)
in
out
sub
jno
test
jle
lock
jnp
out
cmp
arpl
mov
cmp
push
mov
inc
adc
popf
inc
vmovddup
adc
sbb
ja
fs
adc
pop
sbb
enter
ja
mov
loop
inc
mov
or
enter
xlat
sbb
aad
jae
ror
call
stos
setle
dec
or
cmp
out
dec
sbb
xor
cwde
mov
inc
jo
pop
push
jne
scas
in
gs
imul
enter
sbb
sub
dec
test
adc
mov
mov
jmp
and
outs
lock
in
rcr
pop
jmp
xor
jae
cmp
pop
pop
jp
sbb
shr
sar
leave
fstp
inc
fs
es
fisubr
mov
jmp
mov
xor
push
pop
and
dec
imul
pop
les
fsub
xchg
xchg
(bad)
cmps
mov
xchg
fwait
xchg
call
jg
add
out
cmp
mov
jmp
dec
mov
mov
imul
in
inc
pop
neg
jae
scas
stos
shl
jle
js
sbb
imul
imul
sbb
pusha
mov
mov
mul
fdiv
addr16
in
jbe
mov
(bad)
loop
mov
lahf
cli
gs
adc
xchg
xor
xchg
cmps
fist
ss
push
movs
mov
cmps
es
sbb
or
dec
dec
push
pop
mov
les
aaa
xor
mov
sbb
je
adc
scas
stos
pop
adc
ret
add
imul
mov
add
ret
dec
push
or
fsubr
mov
(bad)
out
and
sbb
mov
ret
mov
xor
sbb
pop
rcr
sahf
adc
lods
adc
adc
daa
pushf
int
add
rol
ror
mov
pop
in
fcmovne
je
fst
push
jo
xchg
push
push
sub
xor
les
cmp
arpl
sti
fstp
sbb
xchg
mov
xchg
mov
dec
pop
mov
mov
mov
push
in
sub
mov
cmp
mov
pop
call
sbb
jmp
add
pop
dec
fisttp
mov
xchg
icebp
sbb
cmps
jge
pop
inc
jae
pop
adc
sub
sbb
mov
mov
jno
jns
jb
mov
pop
mov
mov
daa
inc
mov
call
leave
out
xor
cs
out
hlt
jecxz
mov
cmps
pop
add
ret
push
sub
add
ins
lahf
stos
cmp
(bad)
inc
mov
sub
jge
add
xchg
sbb
(bad)
cmps
jle
lods
test
retf
push
push
adc
test
mov
sbb
pop
popf
adc
or
mov
inc
push
je
mov
pusha
jp
repz
or
sbb
movs
in
push
sub
bound
cmp
pop
add
(bad)
cmps
push
(bad)
in
xchg
xchg
je
iret
xchg
jb
dec
outs
fidivr
icebp
adc
sbb
xchg
aad
pop
(bad)
scas
fdiv
cmp
dec
push
inc
(bad)
jnp
and
and
ret
clc
mov
mov
push
xor
dec
adc
adc
sahf
or
pop
adc
jae
cs
nop
sbb
add
mov
retf
stos
xchg
enter
xchg
mov
cvtps2pd
add
aam
add
pop
add
cld
add
imul
jae
dec
sub
add
mov
sub
mov
ficom
bnd
(bad)
mov
out
mov
mov
js
push
mov
lods
jae
movs
js
mov
mov
unpcklps
sub
sbb
push
scas
xor
lds
aas
xchg
or
pop
sub
and
xchg
stc
int3
and
mov
pop
mov
fist
mov
sti
jbe
push
sbb
in
add
aam
push
sbb
xchg
popf
mov
fbstp
neg
xchg
jo
mov
not
nop
xchg
dec
loope
inc
shl
jmp
sub
jl
inc
mov
pop
shr
mov
test
fwait
inc
pop
leave
jae
nop
out
xlat
xor
or
push
je
clc
ds
jmp
sub
sbb
xor
dec
retf
fld
fstp
hlt
jae
in
cmp
jecxz
jmp
ret
mov
jle
mov
sub
xchg
push
xchg
pushf
mov
in
push
stos
enter
mov
cmp
sbb
(bad)
hlt
xchg
stc
ds
push
mov
mov
aaa
ins
xor
xchg
adc
mov
in
cmp
pop
push
pop
bound
sbb
mov
cmc
repnz
push
dec
je
or
xchg
push
rol
add
iret
add
push
rcr
sbb
cld
pushf
push
sbb
sbb
cld
je
cmp
rcr
sbb
popa
inc
fwait
jg
mov
stc
jno
mov
sub
mov
jg
xchg
cmp
add
jae
mul
mov
push
fsubr
hlt
or
inc
imul
aad
(bad)
push
lods
dec
xchg
mov
cmp
mov
out
lock
cmps
mov
arpl
or
xor
fidiv
mov
fwait
(bad)
push
jmp
mov
push
lods
add
and
leave
lods
dec
ret
les
inc
imul
mov
pop
jne
jecxz
lods
cmp
mov
push
inc
jae
jno
inc
sbb
test
scas
lea
js
sbb
mov
lods
xchg
test
push
mov
(bad)
cmp
ss
clc
pushf
jmp
test
je
hlt
mov
xchg
jne
or
jbe
inc
mov
dec
test
ins
mov
inc
ror
cmp
sbb
or
or
sub
mov
cs
mov
retf
mov
xlat
mov
je
mov
or
sbb
sbb
and
xchg
or
xor
jne
inc
js
mov
or
not
cmp
ss
mov
pusha
cmp
popa
stc
mov
mov
je
pop
adc
mov
fld
out
mov
mov
jne
xchg
into
lock
in
outs
add
pushf
xchg
push
les
in
and
mov
mov
inc
fld
and
mov
xchg
sub
retf
xlat
pop
pop
jae
inc
shr
xchg
iret
pushf
das
sbb
sub
cmp
sub
xchg
movs
stos
repnz
loope
add
hlt
mov
fs
cmps
or
push
push
stc
les
data16
jns
cmp
test
dec
xchg
add
aad
fadd
adc
or
into
scas
or
mov
adc
popf
aam
cmp
jae
sbb
mov
fst
adc
push
xor
and
push
push
pop
in
dec
mov
sbb
ror
cs
or
shl
jae
movs
cs
fidivr
pop
sbb
mov
jb
sbb
mov
fcomp
and
push
repz
xor
xor
inc
cmps
call
jne
sbb
fisttp
into
test
mov
xchg
adc
mov
mov
add
sub
jnp
pop
sub
ins
xchg
xchg
call
fcomi
gs
inc
sbb
jae
lods
je
sbb
sahf
aas
inc
lahf
addr16
ficom
movs
xor
dec
pop
jbe
dec
dec
fistp
popa
rcl
adc
test
mov
je
cli
pusha
stos
loop
mov
clc
sub
pop
push
or
lock
loopne
(bad)
sbb
jl
popf
pop
retf
rcl
dec
inc
dec
inc
fdivr
and
mov
icebp
or
xchg
mov
inc
pusha
cmp
inc
sbb
mov
mov
dec
cmp
js
add
or
inc
bound
cli
add
xor
aam
inc
fmul
inc
(bad)
clc
jb
call
and
jp
sub
mov
out
cwde
jne
sub
movs
les
push
gs
jne
pop
mov
sub
jmp
mov
(bad)
dec
add
call
pop
stos
jnp
pop
cmps
dec
in
ds
adc
cmp
mov
push
pop
fwait
ins
out
mov
sub
call
jecxz
aaa
mov
fidiv
ins
push
sbb
sahf
sbb
outs
adc
mov
popa
fistp
push
aas
out
xchg
xor
jmp
lods
push
iret
pushf
imul
bound
xchg
aam
sub
pop
mov
xor
leave
add
sbb
sub
fsubr
stos
mov
scas
mov
xchg
arpl
jo
dec
push
sbb
mov
fist
pop
hlt
sbb
dec
les
es
pop
mov
mul
gs
not
pop
in
sbb
retf
dec
(bad)
mov
mov
shl
fisttp
mov
inc
popf
shl
popf
dec
xchg
adc
fcom
xlat
cli
mov
jae
in
jge
ficomp
sbb
retf
in
sub
mov
mov
shl
inc
clc
loop
jae
jne
std
adc
push
(bad)
adc
xchg
push
push
hlt
add
imul
mov
pop
cmp
sub
daa
outs
xchg
dec
mov
cmps
cmp
iret
je
jns
fstp
jns
fistp
in
adc
ss
and
mov
mov
jne
daa
shl
xchg
mov
and
mov
jmp
mov
adc
ds
fistp
xor
stos
mov
adc
pusha
in
inc
mov
clc
in
loop
jbe
adc
das
sbb
mov
or
std
fadd
mov
pusha
test
dec
retf
dec
cmc
hlt
xchg
jae
cmp
mov
stos
add
in
ins
mov
lahf
wbinvd
out
enter
cmp
push
shr
sub
xchg
mov
bound
test
pop
or
iret
cmps
nop
xchg
clc
add
push
rol
jae
cmp
test
xor
stos
enter
sahf
int
add
imul
fld
inc
lock
jne
and
pop
or
test
push
sbb
mov
pop
out
shl
push
in
push
cmp
or
mov
ins
sar
and
xchg
je
xchg
xor
jae
jo
fbstp
push
adc
push
aam
jb
hlt
cdq
mov
xchg
arpl
mov
les
cwde
jmp
mov
mov
sub
jb
gs
jnp
outs
xchg
cmps
pop
sbb
mov
mov
mov
mov
jp
or
shl
pop
mov
xchg
ret
or
cmp
mov
neg
jmp
stc
and
js
outs
popa
fsub
(bad)
out
dec
in
shl
mov
fldenv
mov
pop
cmp
push
inc
lock
mov
jge
mov
loope
cld
xchg
mov
xor
ret
retf
nop
dec
push
retf
les
adc
mov
lds
daa
jns
je
stos
xchg
(bad)
xor
mov
call
dec
jge
add
call
jae
push
fs
lock
and
fcom
loop
mov
xchg
jnp
test
dec
inc
jge
adc
cmps
push
jmp
enter
xor
imul
scas
addr16
call
jno
dec
in
scas
fisub
xor
std
add
adc
test
xchg
std
mov
jmp
or
and
sbb
dec
scas
xor
(bad)
(bad)
into
and
lods
dec
mov
xchg
in
mov
rcl
js
cmp
stos
pop
xchg
xchg
movs
cmps
adc
xchg
aaa
cmovns
leave
(bad)
jae
dec
rcl
jns
dec
cmps
sbb
scas
(bad)
ror
iret
inc
ins
add
xchg
div
jbe
jecxz
repz
jb
dec
add
adc
cmove
sbb
stos
dec
dec
adc
cmc
or
ror
jmp
push
shl
jnp
xchg
out
inc
sub
jne
mov
pop
popa
mov
mov
nop
jae
mov
cmps
inc
and
adc
dec
js
loopne
xchg
mov
(bad)
cmp
test
pop
push
aaa
(bad)
repnz
loop
xchg
inc
pushf
xchg
mov
push
and
mov
jae
and
jae
in
(bad)
cmp
shl
iret
cmp
mov
adc
push
scas
dec
sbb
adc
pop
sbb
jmp
xor
inc
rcr
dec
mov
imul
cs
jae
fsubr
mov
jnp
mov
dec
rcr
cmp
adc
sbb
mov
xor
push
stos
or
cmps
mov
mov
aas
inc
cmp
imul
pusha
push
jge
jg
xor
mov
aaa
(bad)
retf
sbb
adc
push
sbb
imul
aam
ins
xchg
add
iret
xor
sub
mov
xchg
int
dec
adc
xor
popa
xor
mov
push
push
inc
push
mov
add
sub
aas
js
scas
jns
push
xchg
repnz
js
sbb
pusha
scas
xlat
or
mov
lahf
mov
retf
imul
and
arpl
xlat
psrad
int
aad
add
sbb
out
inc
sar
sub
ins
(bad)
gs
push
adc
repnz
mov
cld
mov
imul
mov
test
dec
jno
xchg
repnz
mov
aas
jmp
mov
and
adc
mov
inc
mov
lock
inc
retf
push
sar
mov
mov
outs
cld
into
jbe
imul
into
lods
mov
add
stc
pop
mov
mov
mov
aaa
add
outs
sbb
js
enter
jnp
jmp
jnp
pop
sti
mov
mov
cmp
sti
fcom
hlt
mov
push
stc
sub
in
mov
jmp
mov
fwait
push
ret
sub
jns
es
jmp
pop
mov
add
sbb
cmps
dec
sbb
inc
enter
push
jae
ins
cs
pop
rcr
pop
or
mov
test
dec
mov
push
sbb
in
xchg
loopne
push
or
outs
rol
pop
loopne
hlt
and
mov
xchg
pop
adc
xchg
sbb
inc
dec
xchg
adc
push
cmps
std
jge
mov
sbb
je
or
xor
or
dec
push
shl
jae
and
mov
sbb
jns
xchg
fadd
test
enter
mov
xchg
imul
in
mov
mov
repnz
or
mov
test
mov
leave
cmp
mov
fcomp
cmps
pop
mov
aaa
cmc
jb
popf
imul
lds
or
jmp
pop
retf
aam
push
jg
test
mov
imul
cmp
xchg
shl
je
js
rcl
mov
int3
fisubr
push
mov
sbb
jmp
das
dec
test
mov
sti
scas
jle
adc
dec
jo
retf
jp
or
xchg
call
dec
out
mov
xchg
call
pop
or
jno
mov
mov
mov
ins
sbb
mov
test
ror
aam
add
(bad)
aad
stos
mov
test
ret
mov
lods
jg
ins
int
lds
ja
(bad)
sbb
aad
jb
scas
jns
int3
inc
adc
mov
mov
cmp
add
shr
mov
push
push
xchg
xchg
push
add
mov
clc
imul
stos
pop
cmp
sbb
ja
push
sub
clc
mov
neg
sbb
xchg
and
stc
cwde
js
inc
mov
mov
mov
and
xchg
iret
jne
mov
das
jne
in
inc
push
jae
dec
clc
pop
fdivr
sbb
xor
mov
or
jp
pop
xchg
sbb
inc
cmp
push
call
leave
fdiv
push
push
call
cdq
ror
mov
ins
stc
lods
stos
out
xchg
xor
xchg
adc
icebp
enter
dec
inc
div
mov
or
movs
adc
clc
sbb
stos
inc
das
call
and
mov
push
xchg
jle
cld
pushf
xor
into
sti
mov
test
xchg
ret
out
or
dec
dec
push
mov
push
xor
rcl
sbb
push
inc
sbb
pop
jae
ss
jp
arpl
cmp
ja
inc
into
xchg
sub
mov
mov
lea
mov
push
pop
mov
loope
aad
sbb
es
add
mov
cmp
push
test
pushf
int
xchg
sahf
push
ss
sub
xchg
imul
test
inc
es
mov
mov
pop
mov
stos
dec
fisub
pushf
mov
pusha
stc
jl
pop
mov
shl
aad
jb
rol
js
cs
shl
bound
xchg
in
jecxz
push
leave
cmp
mov
xor
(bad)
xchg
dec
mov
adc
in
inc
scas
push
je
xchg
mov
inc
ficom
int
in
test
cmp
fisubr
call
pushf
outs
aad
je
pop
nop
add
or
dec
int3
push
mov
cmps
xor
mov
mov
dec
shl
mov
xor
ss
xchg
xor
push
adc
jg
test
dec
loopne
mov
and
sub
xor
xor
rol
je
icebp
lea
pusha
pusha
lods
idiv
sub
ja
(bad)
and
loopne
xor
cld
xchg
push
push
(bad)
sub
xchg
repnz
xchg
and
push
adc
(bad)
rol
xchg
loop
push
mov
imul
mov
sbb
punpcklwd
push
mov
shl
imul
mov
out
dec
jb
mov
and
ins
push
mov
test
mov
and
enter
in
jmp
mov
jl
retf
cmc
add
xchg
pop
or
dec
sub
gs
fmul
stos
imul
mov
sbb
int
dec
scas
add
cmp
in
out
push
sbb
xchg
out
lock
adc
movs
mov
pusha
push
je
jb
rcl
xchg
sub
dec
fcom
fs
pop
jae
fld
mov
enter
sbb
xchg
jne
popf
std
mov
sti
hlt
pop
popa
nop
pop
neg
add
and
gs
(bad)
ret
adc
push
test
lods
and
or
addr16
dec
mov
mov
stos
push
jp
xor
scas
push
popf
jl
jmp
lahf
and
fld
xor
ins
cwde
jae
aad
fcmovnbe
xlat
icebp
repnz
outs
mov
in
mov
call
push
mov
in
(bad)
pop
out
out
xchg
ficom
push
push
inc
cmc
jmp
jnp
jg
jmp
call
mov
inc
sbb
(bad)
jbe
test
inc
jne
xchg
and
push
add
ret
push
xor
xor
dec
adc
adc
and
call
push
sti
mov
or
mov
scas
jl
aas
inc
jae
iret
aaa
jg
test
jae
jg
mov
dec
test
push
fcmovb
arpl
xor
cmps
push
xor
ss
sub
xchg
inc
pop
les
adc
sub
std
xchg
push
in
jmp
pop
stos
test
push
dec
xor
neg
lds
adc
push
das
scas
mov
xchg
jns
stos
jae
sub
xchg
push
inc
scas
xor
xchg
inc
test
fstp
ja
sbb
push
mov
jno
sub
pop
push
sub
int
jge
retf
lock
mov
popf
and
arpl
cdq
movs
mov
mov
test
out
bound
dec
cli
pop
out
sbb
bound
movs
mov
addr16
shl
mov
pushf
test
xor
adc
rcr
mov
jge
daa
jmp
adc
pop
jae
push
in
jp
jo
sbb
int3
repz
cmps
div
and
dec
jae
inc
aam
retf
mov
int
add
inc
lock
call
in
sub
retf
dec
mov
jno
jb
ss
(bad)
fst
adc
mov
push
fcom
mov
mul
inc
jge
dec
aas
mov
loope
mov
jmp
ficom
push
call
nop
aad
push
xchg
mov
lds
jbe
sbb
adc
(bad)
jl
jae
mov
inc
jbe
ror
or
ds
pusha
lahf
jae
int
xor
xor
hlt
and
jno
ins
mov
or
adc
repz
mov
jae
jns
xor
pop
lods
jae
out
mov
(bad)
xchg
and
add
push
pop
xchg
dec
adc
jae
mov
cmc
lods
dec
xchg
pop
inc
rol
jl
mov
jle
xchg
fidivr
sbb
pop
(bad)
in
cld
cmps
daa
popa
and
gs
pop
pop
aad
mov
fnstcw
sbb
mov
dec
pop
inc
repnz
push
cmp
cmp
add
sbb
jmp
es
movs
adc
sbb
jno
pop
add
or
into
sbb
sbb
pop
imul
js
mov
sub
and
ds
jno
enter
jae
xchg
push
sbb
sbb
fwait
mov
jmp
mov
add
gs
daa
or
mov
shl
mov
xchg
cwde
xchg
je
nop
and
sbb
dec
jmp
adc
rcr
stos
inc
mov
cmp
movs
js
xor
jle
mov
xchg
add
push
cs
imul
dec
scas
ret
test
movs
ins
push
imul
lahf
push
adc
pushf
push
sbb
sbb
(bad)
es
mov
add
aam
sahf
cmps
inc
inc
or
cmp
xor
ja
out
ins
mov
jae
mov
mov
mov
cmp
ret
lods
inc
xor
push
sub
(bad)
mov
sbb
(bad)
sub
js
aad
pop
dec
test
xor
(bad)
adc
out
rcl
jne
imul
dec
fiadd
inc
stos
(bad)
(bad)
leave
pop
(bad)
cmp
or
sahf
add
fwait
adc
adc
test
pop
dec
pop
in
mov
or
mov
fldcw
push
add
adc
jmp
in
inc
sbb
cmc
and
test
inc
dec
sub
loope
outs
jge
out
mov
jge
test
call
and
mov
bswap
ret
adc
jl
int
loope
jno
xchg
outs
adc
sbb
and
adc
mov
or
push
adc
outs
mov
aas
add
and
aad
jbe
xchg
push
pusha
imul
and
pop
inc
cs
dec
imul
push
(bad)
ins
inc
adc
ret
xchg
rep
mov
mov
pop
in
shl
add
loop
adc
inc
rcl
scas
mov
or
sbb
rol
push
cli
push
nop
mov
push
call
mov
(bad)
push
add
iret
add
push
mov
add
out
fmul
out
dec
cdq
mov
sbb
xchg
adc
dec
jmp
jae
out
imul
imul
jbe
dec
and
sbb
stc
in
push
dec
push
jne
cmp
mov
movs
lods
xchg
mov
sub
scas
clc
pop
adc
sbb
lods
daa
jae
retf
xchg
jbe
inc
inc
popf
popf
xor
mov
gs
lahf
leave
jg
sbb
xchg
and
dec
push
aaa
in
(bad)
mov
loop
sbb
mov
and
push
xchg
sub
(bad)
fnsave
leavew
inc
ret
fbld
push
pop
pop
fisttp
cmp
cmp
data16
stos
loope
(bad)
sbb
xchg
cld
test
or
mul
clc
xchg
jl
(bad)
sti
or
add
sbb
neg
(bad)
loop
aad
push
cmc
dec
add
movs
mov
jmp
push
pop
or
inc
push
and
pop
dec
outs
cdq
movs
stc
std
stc
sbb
cmp
call
inc
jae
mov
xchg
sub
enter
xchg
push
mov
dec
xchg
add
jb
call
stos
fsub
ret
leave
cmp
xchg
add
jns
into
js
shl
mov
mov
fild
adc
inc
hlt
aad
cmp
scas
xchg
xlat
push
push
xchg
jne
out
fisttp
inc
inc
mov
pop
mov
or
sar
sub
pop
cmp
jne
scas
cmp
xor
pop
sahf
push
fld
adc
adc
scas
loope
xor
ins
fiadd
mov
jo
mov
(bad)
fbld
jge
jno
sbb
fsubr
pop
sbb
outs
add
jmp
cmps
fstp
pusha
and
xor
cmp
out
daa
js
cpuid
fld
stos
lock
sbb
popa
push
sub
scas
leave
sbb
das
sbb
dec
push
or
sub
mov
mov
ret
add
ins
push
test
push
or
adc
dec
jb
dec
call
add
xor
xchg
or
jmp
ficom
js
pusha
jmp
je
or
mov
jecxz
and
and
pop
inc
sbb
lds
gs
aad
cmp
mov
fisub
jmp
mov
in
out
pop
scas
inc
daa
sti
push
sahf
xchg
mov
adc
shl
loopne
div
push
rol
js
mov
aaa
inc
mov
ds
cmps
sti
inc
fsub
push
jno
in
xchg
sbb
mov
sub
cmp
inc
(bad)
fstp
jo
push
push
sysenter
mov
pushf
cli
xchg
mov
cdq
clc
dec
mov
pop
out
xor
adc
inc
out
mov
dec
sub
sbb
cmc
or
lods
jp
sbb
inc
test
test
(bad)
in
adc
ins
scas
popf
leave
adc
sti
ins
mov
in
sub
xchg
(bad)
lea
and
movs
imul
sbb
sti
jg
push
pop
dec
inc
push
or
adc
mov
cld
ret
mov
jmp
mov
rcl
ret
adc
dec
jg
sub
adc
sbb
pop
sbb
repnz
mov
mov
(bad)
dec
iret
rcr
jo
call
cdq
inc
mov
or
xlat
jns
gs
mov
dec
movs
lahf
sub
mov
fstp
xchg
dec
adc
push
in
in
sahf
mov
sbb
lds
xchg
xor
mov
ret
xchg
mov
push
outs
mov
int3
pop
es
jno
ins
je
add
push
sbb
sbb
sti
mov
mov
arpl
and
pop
inc
ficom
sub
je
jmp
jo
scas
retf
(bad)
jl
inc
stc
cs
xor
stos
mov
mov
data16
into
aam
pop
pushf
pop
jb
push
fnsave
sbb
cmp
inc
sub
lods
jl
js
inc
or
cdq
mov
fs
je
add
xchg
mov
xchg
lock
ins
in
mov
mov
test
sbb
pop
aaa
push
mov
add
cmp
mov
in
adc
or
aad
aaa
jnp
sub
jmp
in
mov
or
das
into
out
mov
repz
aaa
xor
inc
int
jge
mov
popa
add
mov
sub
jae
sbb
in
jmp
or
push
clc
jle
inc
stc
mov
mov
or
cmp
add
adc
and
repz
stos
test
add
push
test
jecxz
loop
pop
xor
mov
dec
and
xor
push
sbb
push
add
xchg
xchg
mov
ror
not
call
int
pop
(bad)
(bad)
das
pop
test
test
cs
inc
add
mov
jbe
xchg
rcr
loope
repnz
cmp
adc
xchg
shl
std
mov
adc
fmul
shl
cmp
jae
jne
sub
ja
sbb
jp
mov
adc
daa
cmp
enter
sub
fs
fdiv
jae
enter
xchg
sbb
fdivr
and
ss
sub
ss
inc
push
mov
jae
xchg
sbb
jbe
push
sbb
mov
sub
ins
sbb
cmp
fmul
pop
sbb
test
loope
mov
scas
push
xchg
add
mov
in
pop
add
mov
imul
sbb
pop
out
fidiv
in
enter
push
mov
mov
pop
fisub
xchg
xor
cmps
jo
call
sbb
shr
into
sub
arpl
cli
rcl
ficomp
mov
hlt
mov
add
cmp
cmp
push
cmp
repnz
repz
(bad)
pusha
rcr
or
push
jbe
hlt
inc
xor
mov
jecxz
jbe
int3
hlt
mov
mov
add
mov
xchg
aam
shr
cmp
mov
ja
rcl
jbe
cmp
outs
ficom
stos
xchg
adc
or
call
imul
out
fnstenv
(bad)
cwde
clc
pop
or
mov
xor
push
cli
js
loopne
lock
mov
and
neg
jno
rcr
mov
adc
ds
leave
leave
lea
jbe
sub
sub
add
int
jmp
les
aam
inc
sbb
or
scas
cmps
dec
pop
mov
mov
sub
into
int
mov
ds
(bad)
mov
adc
test
test
mul
scas
retf
ins
out
mov
xchg
into
ds
ss
test
mov
imul
pop
add
push
xchg
xor
sub
call
push
test
dec
sbb
sbb
xor
fdiv
sbb
xor
icebp
or
jne
es
fisttp
xchg
jle
pop
dec
fldcw
jns
jae
ret
xor
xor
in
imul
(bad)
inc
fdiv
jmp
push
call
es
ins
call
xchg
mov
jmp
lds
iret
mov
xor
(bad)
dec
out
mov
mov
jno
rcl
xlat
fabs
dec
dec
pop
aam
in
test
movs
mov
mov
enter
and
imul
xor
cmps
sbb
in
mov
aam
xor
push
adc
retf
mov
adc
inc
xchg
sbb
rcr
and
repnz
repz
push
or
pop
fnsave
inc
ds
inc
mov
inc
into
jae
adc
jmp
enter
sar
stc
jle
loop
fwait
bound
xlat
push
popa
sbb
mov
adc
mov
xlat
sub
and
add
out
dec
xchg
add
out
repz
adc
mov
imul
daa
daa
clc
add
jge
pop
dec
mov
je
sbb
lods
pop
inc
dec
leave
jns
mov
jmp
pop
push
jle
stc
jo
dec
adc
pop
imul
in
jae
or
pop
jae
and
pusha
sar
sub
out
or
sti
scas
jecxz
sbb
adc
cmps
lods
xor
iret
fisttp
stos
das
adc
mov
or
adc
leave
pop
repz
mov
jns
jmp
pop
sub
aad
retf
mov
add
push
lods
iret
dec
inc
push
mov
adc
jbe
and
sbb
mov
dec
sub
or
or
dec
pop
rcl
js
or
xchg
pop
inc
jmp
das
mov
push
cmc
stos
cmps
xor
out
mov
mov
mov
ret
test
leave
mov
je
pushf
xchg
xchg
xchg
inc
pushf
imul
xor
imul
lea
mov
mov
in
push
shl
sbb
int
inc
imul
mov
push
pop
loope
daa
sbb
sbb
std
dec
xor
fadd
enter
xchg
retf
add
push
pushf
mov
ins
mov
arpl
jmp
xlat
cs
sbb
sub
int3
jns
cwde
adc
and
xor
inc
mov
ins
xchg
test
aaa
cmp
xchg
movq
mov
jae
push
pop
xchg
push
adc
sbb
pop
jnp
mov
sub
daa
xor
ret
sbb
adc
and
scas
cwde
cli
pop
test
cmp
adc
repnz
int
jle
nop
pop
rcl
data16
push
pusha
xchg
mov
out
jg
retf
fisttp
jp
jmp
int
(bad)
xchg
mov
clc
scas
jmp
imul
xchg
sub
scas
js
das
add
xchg
xor
ds
mov
test
inc
pop
lods
neg
out
dec
lea
and
cmp
jns
shr
ficomp
(bad)
clc
mov
addr16
retf
adc
sbb
out
xor
(bad)
out
sbb
xchg
repz
aaa
mov
test
fs
xchg
lds
push
jno
call
sbb
fnstenv
xor
adc
mov
cs
in
mov
push
outs
mov
add
je
cmp
pop
pop
fnstenv
inc
cli
xlat
xchg
arpl
dec
ins
mov
faddp
je
or
inc
mov
jl
mov
aam
aaa
jecxz
jns
sub
pop
iret
add
sbb
call
rol
fdiv
mov
xor
and
sbb
pop
mov
fistp
cmps
ret
sub
mov
mov
(bad)
mov
arpl
jbe
add
leave
test
sbb
(bad)
jmp
aad
mov
jns
ret
push
jae
xor
dec
add
mov
push
test
push
sbb
dec
imul
popa
xchg
ss
xor
loopne
add
jecxz
stc
dec
ja
sbb
pop
xchg
jb
dec
jmp
push
cmps
push
inc
jecxz
sar
jmp
shr
jecxz
movs
pop
cmc
fcmovu
sub
sub
and
mov
fbstp
fst
cmp
cmps
xchg
dec
movs
xor
push
gs
mov
das
pop
mov
push
push
hlt
or
(bad)
fimul
cli
sbb
(bad)
iret
push
push
lods
mov
fdiv
mov
push
fidiv
test
dec
adc
add
popa
rcr
aas
dec
ret
jmp
sub
test
cmp
adc
push
adc
lds
imul
pop
mov
jl
cmps
push
or
imul
add
aas
(bad)
adc
stos
outs
jbe
cmc
out
cwde
(bad)
(bad)
jg
push
jecxz
and
mov
jnp
sbb
data16
or
lods
push
or
sub
inc
jne
mov
ds
or
or
fdivr
adc
mov
leave
cmp
std
or
mov
fist
test
lahf
cld
imul
stc
sbb
adc
xchg
jne
mov
leave
or
push
xchg
repz
out
adc
jle
bound
stos
psubsw
or
xor
jae
aam
jecxz
enter
aad
stos
retf
jb
mov
inc
sbb
dec
mov
mov
add
cmps
cmp
add
mov
mov
test
ins
push
sahf
or
scas
mov
xchg
leave
ficom
dec
movs
inc
mov
pop
stos
mov
js
repnz
(bad)
std
outs
xor
xchg
fs
lahf
mov
pop
(bad)
jae
pop
imul
lds
cld
jns
out
cdq
push
xchg
mov
push
aas
pop
jae
das
repz
or
in
cwde
aam
mov
sub
push
push
mov
(bad)
cmp
(bad)
scas
ins
sti
push
ss
pop
inc
adc
jb
jmp
mov
lods
jae
ins
sbb
add
mov
mov
mov
test
mov
adc
jae
or
out
pop
fnsave
jb
add
fisttp
mov
xor
inc
push
enter
call
inc
pop
outs
mov
push
xchg
add
cmp
sub
in
ins
and
sub
mov
xchg
ja
popf
sbb
sahf
pushf
(bad)
xor
push
mov
xor
pushf
test
push
or
movs
mov
mov
(bad)
icebp
add
jge
jl
arpl
xchg
retf
jae
scas
xchg
xor
cs
sbb
push
(bad)
mov
mov
sbb
jge
pushf
or
out
mov
or
xor
xchg
sub
lock
jae
mov
mov
sbb
ja
imul
add
jnp
ins
das
stos
nop
push
retf
xchg
iret
hlt
push
adc
mov
retf
or
fsub
cli
pop
mov
push
jo
aad
add
les
xchg
mov
daa
dec
jp
test
in
cwde
cwde
xor
or
mov
dec
add
bound
popa
dec
jg
xor
scas
mov
lods
mov
sub
cmps
sti
dec
in
jl
jae
les
sbb
cmps
sbb
fidiv
inc
xchg
mov
jbe
push
popf
lods
adc
(bad)
adc
ror
jb
popa
jae
mov
arpl
test
in
(bad)
cmp
adc
add
mov
std
lds
or
in
pop
dec
xchg
out
das
dec
js
rol
dec
xor
jl
fdiv
mov
cmp
dec
(bad)
loopne
add
repz
sahf
pop
xor
dec
(bad)
xchg
test
sbb
push
cld
hlt
es
sbb
lods
je
ins
jo
gs
adc
mov
(bad)
adc
push
test
mov
jae
or
outs
pop
and
fld
cmps
push
popa
pop
fnstsw
out
xor
inc
into
xchg
sub
lea
push
jae
in
aad
mov
and
hlt
popa
add
push
pop
dec
mov
push
out
lods
add
aas
lock
cli
push
outs
sbb
mov
enter
leave
addr16
cli
cmc
shl
xor
movs
dec
packsswb
mov
les
fcom
add
xor
inc
push
fisub
in
mov
fxch
fsubr
cs
add
js
daa
pop
mov
hlt
pop
repz
mov
or
in
jns
push
xchg
les
gs
pop
adc
aam
and
xchg
sbb
inc
leave
jecxz
add
inc
pop
bound
sbb
es
test
addr16
cli
jmp
repnz
call
(bad)
rol
ins
js
les
fild
and
dec
call
mov
cmp
xor
xchg
sahf
rcr
sbb
fwait
stc
inc
ins
out
fisubr
js
movs
mov
aad
iret
xchg
push
clc
aaa
ror
nop
cmp
je
(bad)
pop
call
mov
cmc
(bad)
aam
inc
clc
movs
stos
jno
int
ja
cs
mov
nop
leave
je
rol
pop
gs
rol
inc
add
add
jmp
(bad)
cs
inc
mov
repnz
popf
pop
xchg
std
repz
push
jae
test
xchg
add
sbb
je
adc
pop
pop
imul
cmp
dec
(bad)
aaa
xchg
mov
mov
or
movs
adc
bound
jge
mov
ins
pop
enter
hlt
xchg
inc
psllq
je
sti
out
cmp
in
lods
mov
inc
shl
mov
jb
iret
fcomp
sbb
imul
xor
aas
aad
lods
jae
add
cmp
lahf
mov
out
scas
xor
repnz
popa
imul
int3
and
dec
dec
xchg
aaa
dec
inc
sbb
mov
test
adc
fstp
cmp
jnp
jmp
xchg
xchg
cmp
xor
adc
jb
in
inc
repnz
(bad)
in
jge
jg
call
adc
adc
scas
pop
es
pusha
lahf
mov
stos
call
pop
xor
xchg
xor
lods
fwait
xor
xchg
or
icebp
aas
cmp
xchg
jle
or
jg
and
in
fdiv
hlt
loope
xchg
inc
sti
call
xor
xor
inc
xchg
lahf
lahf
jl
fs
and
lea
jmp
add
test
(bad)
jo
cmp
adc
repnz
jae
adc
jo
mov
movs
mov
arpl
aam
neg
(bad)
xor
xchg
jge
and
outs
pusha
movs
(bad)
push
add
mov
xchg
fidiv
sbb
in
xor
aam
mov
push
sbb
mov
xchg
or
jmp
xlat
mov
jae
push
sub
int3
or
sbb
push
pop
xabort
cmps
mov
inc
mov
dec
cld
mov
into
mov
lahf
popa
inc
out
ss
sub
jns
fdiv
test
jo
cwde
(bad)
or
dec
mov
ins
(bad)
lea
jmp
jae
xor
sub
ss
ret
xchg
inc
fsubr
mov
sti
fstp
jae
movs
dec
call
or
add
cdq
das
pop
or
lahf
test
rcl
ds
mov
jnp
xor
in
pusha
jl
jle
pop
sbb
cli
or
inc
into
push
(bad)
push
in
imul
add
sub
leave
inc
sbb
inc
lea
and
or
xlat
(bad)
pop
xchg
adc
cmp
(bad)
push
sub
push
stc
push
sub
add
pop
xchg
xchg
mov
sbb
mov
and
lds
push
sbb
add
xchg
mov
daa
jns
xchg
cmp
jae
pop
push
loop
sbb
test
stos
cdq
lds
sbb
pusha
pop
repz
in
mov
mov
jae
push
mov
or
gs
jg
movs
ja
and
push
mov
jae
out
xchg
sbb
mov
movs
out
xchg
dec
mov
jle
xchg
jne
stos
push
add
sub
hlt
bound
cwde
aam
xchg
push
out
adc
mov
rol
scas
pop
nop
loope
push
dec
cwde
xchg
loope
adc
inc
mov
push
sub
or
ja
inc
inc
fwait
out
test
dec
fs
cmps
lods
push
dec
fnstcw
test
sbb
adc
test
cmp
dec
sub
inc
iret
arpl
add
mov
cmp
jae
ss
push
adc
xchg
pusha
frstor
sbb
pop
(bad)
rcl
lods
xchg
sub
enter
adc
push
into
xchg
dec
rcr
add
mov
ss
call
sub
mov
ja
cwde
je
(bad)
fucomi
and
inc
mov
or
sbb
cmp
xchg
movs
mov
ins
iret
and
icebp
(bad)
sub
sbb
pop
enter
ret
mov
adc
dec
inc
fidivr
sub
aaa
loop
xchg
(bad)
in
cmp
xchg
in
dec
inc
jae
out
inc
dec
xchg
call
add
leave
lahf
mov
sar
idiv
out
dec
jg
cmp
fs
xchg
(bad)
cvtpi2ps
xor
scas
dec
dec
sub
xchg
and
ds
and
cmp
pop
or
popa
push
sbb
les
jmp
jg
xlat
inc
cmps
les
cmp
inc
ins
fidivr
xor
mov
cmps
add
les
sbb
(bad)
sbb
int3
xchg
inc
cmp
retf
mov
adc
xchg
hlt
mov
movs
test
retf
mov
call
sub
fcomp
cmp
imul
mov
xchg
or
(bad)
add
or
jo
adc
lds
scas
inc
fldcw
inc
mov
xchg
jmp
daa
adc
mov
dec
cmp
aam
cmp
mov
mov
push
mov
(bad)
cld
aam
xchg
inc
ins
(bad)
mov
jae
and
add
dec
xlat
inc
cmp
cld
outs
pop
mov
push
dec
movs
in
les
fimul
xchg
jp
mov
jae
sti
add
push
pop
sub
loope
je
inc
jp
cmp
push
aam
dec
test
(bad)
icebp
in
pop
dec
pop
std
dec
sar
xor
adc
xchg
loope
frstor
mov
sbb
mov
ss
pop
push
mov
xchg
mov
mov
leave
pop
pop
cmp
shl
loop
dec
xchg
test
jno
fsub
mov
inc
xor
test
adc
repz
dec
add
aaa
mov
mov
(bad)
push
mov
data16
repnz
addr16
mov
aaa
les
mov
inc
js
add
xchg
push
cmps
ja
push
dec
inc
mov
xchg
xchg
mov
dec
sbb
sbb
(bad)
add
xor
push
ss
sbb
ins
loopne
sti
push
sbb
push
lds
dec
push
pop
ret
retf
inc
sub
out
mov
dec
cmp
stos
outs
das
into
xchg
imul
push
dec
stos
add
int3
aad
adc
inc
in
je
test
pop
int
mov
clc
pop
icebp
andps
sub
jg
test
scas
mov
lods
(bad)
and
mov
in
adc
xchg
xchg
popf
xchg
pop
loopne
sbb
ret
jbe
cmp
aam
iret
adc
pop
imul
mov
imul
aad
in
push
shl
test
out
test
inc
mov
mov
mov
test
or
sbb
hlt
cmp
test
mov
mov
lahf
mov
jl
mov
push
cdq
cmp
cmp
pop
xchg
mov
fadd
mov
or
lfs
popa
rcr
in
dec
scas
mov
mov
mov
xchg
inc
jae
lahf
adc
pushf
or
pop
lea
mov
dec
xchg
ins
inc
xor
pusha
pop
leave
das
mov
xchg
mov
shl
fdiv
add
xor
out
jne
sbb
pop
xor
rcl
(bad)
bound
lea
out
mov
inc
jg
mov
neg
in
adc
dec
jp
int
push
in
fdiv
sbb
ins
or
aam
pop
retf
add
cmps
pusha
sbb
jo
inc
scas
in
adc
adc
xchg
inc
dec
test
movs
or
push
xchg
aam
push
and
jb
lock
push
dec
mov
mov
icebp
sub
jae
adc
loopne
mov
xchg
sbb
mov
in
hlt
mov
clc
dec
imul
push
mov
mov
adc
mov
fdivr
cmps
dec
les
imul
xchg
pop
sbb
data16
add
rcr
jnp
stos
cmc
cmp
les
aam
jge
sbb
stos
mov
xchg
test
repz
ds
pop
retf
adc
mov
mov
cmp
mov
cmps
xchg
sub
scas
xor
xor
pop
mov
and
sub
sub
test
sub
mov
cmps
pusha
mov
mov
xor
mov
imul
xor
aad
inc
jecxz
movs
test
aaa
sbb
std
jae
inc
call
jmp
leave
jb
ret
adc
cs
loope
and
loopne
lods
icebp
mov
imul
sbb
jle
jb
jg
adc
test
inc
xchg
in
add
push
in
jl
inc
mov
lods
cmc
inc
les
xor
data16
addr16
sbb
push
jmp
mov
test
das
ins
xchg
cmp
popa
ja
rcr
in
int
dec
jg
loopne
pop
mov
ins
add
pop
aad
shl
mov
shr
sbb
(bad)
out
and
inc
imul
pop
pop
dec
inc
xchg
jo
xchg
mov
fsubr
jl
mov
jb
adc
add
bnd
retf
mov
les
add
sub
dec
in
xor
mov
inc
sbb
dec
fistp
inc
dec
jne
inc
std
jno
jae
pop
jb
mov
pop
stos
sbb
repz
cmp
cmp
mov
ror
mov
jno
ret
xchg
dec
xchg
push
pop
dec
sbb
cli
test
enter
add
fisttp
push
xchg
test
call
xor
adc
mov
int3
adc
ss
adc
cli
nop
(bad)
xchg
cmp
cld
sbb
in
je
adc
iret
fs
jb
stos
push
push
mov
fist
loop
(bad)
xchg
mov
xlat
lods
pushf
jbe
aaa
das
jae
xor
ins
inc
adc
push
or
mov
aaa
mov
loop
mov
pop
mov
inc
jb
mov
sbb
mov
retf
add
xor
push
je
ss
(bad)
test
nop
sub
cmp
arpl
push
sbb
pop
adc
in
mov
stos
jnp
jmp
test
pop
xchg
ror
sbb
sub
fidiv
pushf
out
sbb
jae
sub
sbb
xor
xor
enter
pushf
mov
fmulp
and
xor
mov
cld
sub
cmps
mov
inc
cmp
jmp
mov
mov
push
xor
sbb
or
pop
sbb
mov
clc
adc
mov
sbb
cmp
add
ins
pushf
std
mov
xor
jg
inc
cmc
and
test
je
xchg
jnp
es
daa
out
xchg
mov
shl
stos
outs
and
arpl
and
adc
push
test
and
out
fldcw
arpl
xchg
cmps
mov
shr
lds
push
das
fbstp
jo
inc
(bad)
fadd
gs
mov
add
mov
cmp
sbb
mov
outs
push
and
lds
cmp
sub
in
push
popf
scas
mov
jge
lods
fs
call
inc
dec
push
sbb
push
fadd
dec
mov
xchg
call
cld
sbb
fwait
cmc
jnp
xchg
pop
dec
xor
sbb
dec
ja
or
repz
cmp
cmps
cdq
mov
jbe
test
push
jmp
sbb
mov
in
add
adc
(bad)
gs
jg
cmp
xchg
ds
popf
inc
mov
mov
push
(bad)
xchg
adc
pushf
loopne
mov
retf
cli
mov
sbb
data16
mov
jmp
inc
or
push
loope
dec
push
add
cmp
pop
ja
cli
pop
iret
mov
stos
sbb
fwait
mov
loop
and
lea
mov
je
lods
cmp
hlt
popf
in
jge
test
mov
jae
and
push
fxam
ss
sbb
jge
fabs
ds
mov
sbb
aad
movs
fild
lods
fnstsw
jle
mov
sbb
inc
aad
iret
je
and
sbb
in
pop
pop
inc
mov
xor
xlat
sub
aaa
outs
mov
retf
add
rcl
or
loope
(bad)
int3
sti
sbb
cmp
lods
inc
add
fidiv
jmp
(bad)
es
and
jno
inc
push
add
and
dec
inc
mov
jmp
scas
add
repz
dec
xchg
cmps
push
popa
xor
mov
sub
fmul
push
jbe
loope
dec
ret
hlt
xor
sbb
push
daa
xchg
xor
retf
adc
cdq
push
ret
lds
sub
push
or
and
xchg
or
xchg
push
aad
xor
adc
jne
(bad)
fcomp
inc
push
mov
adc
mov
xchg
test
add
and
push
scas
popf
jb
sahf
in
inc
mov
dec
enter
pop
sub
sbb
imul
cmc
add
shl
js
inc
movs
std
sbb
data16
imul
idiv
ins
push
xor
sbb
ret
in
push
sbb
dec
movs
adc
shl
push
(bad)
xor
mov
jb
pushf
add
mov
cli
sub
das
sti
mov
push
aam
xlat
jp
push
imul
xchg
repnz
add
jae
sbb
sub
sub
cli
mov
repz
add
shr
xchg
(bad)
and
xor
les
sahf
cmc
add
outs
fidivr
xchg
fcomip
jno
in
cmc
jp
js
xor
push
dec
adc
mov
cmps
lea
mov
jmp
(bad)
xchg
mov
dec
mov
xor
xor
loopne
xchg
rcr
fidivr
jg
cmp
imul
call
add
mov
test
pushf
pop
fild
aaa
add
test
ins
add
and
ja
stc
cmps
loope
es
leave
and
mov
cmp
inc
xchg
jecxz
mov
fdivr
cmp
jl
stos
inc
mov
jns
xor
fidiv
lahf
jg
xchg
jmp
shr
sub
stos
movs
arpl
mov
sub
or
push
dec
hlt
stos
push
mov
push
lock
jo
leave
cmp
stos
in
jae
push
out
aaa
scas
xchg
ss
sub
jg
pop
in
in
mov
in
shl
push
fld
cmps
sbb
jns
and
in
loop
test
rcl
outs
and
or
out
mov
loopne
leave
sbb
xor
gs
dec
cli
mov
xor
mov
cmp
daa
retf
xor
cmps
fcomi
push
inc
pop
mov
cmp
xchg
setno
xor
mov
jge
lock
xor
mov
sbb
test
push
call
xor
movs
adc
xchg
cvttps2pi
mov
rcl
jo
cmp
or
(bad)
(bad)
push
push
test
pushf
mov
mov
inc
cmp
inc
xor
xchg
xchg
mov
inc
or
ja
fstp
or
xor
fdivr
mul
leave
jb
adc
scas
repnz
jecxz
daa
mov
jp
pop
std
xchg
mov
mov
ficom
les
fstp
or
mov
(bad)
fild
inc
js
dec
scas
sbb
xchg
ficomp
add
movs
xchg
imul
pop
int
or
dec
scas
repz
ins
sub
adc
push
fdiv
xor
jbe
xor
adc
inc
pop
and
sbb
retf
dec
push
jl
retf
repz
fwait
dec
jge
rol
sbb
adc
xchg
movs
cld
iret
cmp
cli
jne
adc
in
push
cld
push
xor
rcl
xor
pop
mov
fwait
leave
ror
mov
jp
frstor
nop
or
xchg
mov
imul
pushf
sbb
push
dec
je
cmp
mov
cmp
or
sbb
data16
lahf
mov
(bad)
test
cli
aaa
dec
jae
push
int3
xor
rcl
jo
jle
add
inc
push
cdq
test
jnp
cli
sbb
xchg
xchg
jb
repnz
rol
mov
mov
js
jmp
test
into
cmp
sbb
leave
xchg
push
cmps
mov
scas
in
mov
push
aad
cdq
mov
inc
mov
xchg
or
in
hlt
xor
sub
push
lods
fld
add
cmc
add
cli
ins
dec
arpl
outs
cmp
dec
sub
add
sub
(bad)
add
inc
mov
repnz
or
fidiv
test
pop
and
pusha
inc
dec
xor
adc
xchg
inc
test
cmp
adc
jmp
xchg
mov
jge
enter
pop
movs
cmp
dec
xchg
push
mov
sti
call
push
xor
or
sbb
and
adc
xchg
arpl
jbe
(bad)
push
add
dec
add
cs
adc
ins
aaa
xchg
mov
cmp
cld
sbb
outs
mov
(bad)
pop
mov
jecxz
sahf
xchg
push
repnz
jl
test
pop
daa
sub
daa
fnstenv
sub
test
adc
sbb
arpl
ret
fld
jp
leave
ret
int
movs
(bad)
test
cmps
scas
xchg
mov
xchg
imul
push
enter
in
je
je
stos
jl
mov
icebp
cmp
hlt
or
call
or
inc
xchg
nop
jmp
xchg
ret
or
shl
fwait
or
test
popf
das
pop
pushf
int
xor
cmps
pop
stos
scas
mov
dec
cld
mov
pop
and
mov
dec
add
pop
inc
mov
mov
adc
outs
xchg
mov
mov
lds
loop
and
stos
mov
adc
jg
jp
sub
aad
xchg
pusha
inc
call
mov
movs
int
xchg
imul
xchg
or
add
dec
iret
aad
ins
sti
xchg
jno
push
fcomp
mov
dec
xchg
adc
sub
fidiv
dec
cs
aam
loopne
sahf
mov
aad
pop
adc
and
mov
movs
xchg
fisubr
je
adc
mov
mov
jp
popa
mov
ret
cmps
loop
or
ss
outs
sbb
fucom
gs
cdq
push
repnz
mov
push
and
xchg
test
add
dec
or
sub
sub
lea
repnz
cmps
in
adc
rcl
retf
sbb
push
loop
dec
xchg
add
repz
and
mov
mov
lahf
mov
add
and
icebp
test
adc
scas
push
cmp
jmp
mov
repz
inc
fidiv
mov
out
pop
leave
jae
add
xchg
push
jns
in
out
stos
pop
lahf
lds
sub
or
or
add
leave
mov
jnp
adc
mov
movs
dec
and
dec
xchg
das
mov
test
je
aad
jmp
in
xchg
pop
mov
fistp
stos
test
xor
test
leave
outs
fs
mov
popa
mov
sti
clc
fucom
aaa
pop
(bad)
and
jecxz
push
xchg
adc
xor
dec
dec
or
jmp
xlat
xchg
lahf
std
outs
jmp
int
adc
stc
std
out
add
mov
mov
pop
mov
pop
push
or
in
mov
jbe
mov
stos
inc
icebp
les
cmp
sbb
jb
retf
pop
pop
or
pusha
sbb
mov
mov
icebp
fnsave
xchg
dec
xchg
sub
cmp
push
jecxz
jmp
jb
adc
jb
shl
pop
fs
fwait
sub
inc
retf
ror
test
into
cs
push
sub
sub
mov
or
sbb
mov
jecxz
int
fnstsw
sub
test
int
or
mov
sti
add
addr16
adc
push
fcom
je
push
xchg
imul
icebp
pop
inc
dec
mov
stos
or
add
push
xlat
test
adc
dec
mov
mov
xchg
fwait
das
arpl
push
sti
dec
pop
vcvtsd2ss
mov
bnd
sub
inc
clc
sbb
pop
pushf
shl
(bad)
dec
sub
fs
push
enter
mov
rol
pop
js
mov
stos
call
sub
cmc
ja
repz
test
test
jp
aad
repz
pop
ret
xchg
cmps
add
mov
je
add
or
push
cmc
push
aam
jne
fs
cmp
(bad)
in
aaa
sbb
push
push
jg
stos
xor
cmp
ds
ret
test
xchg
cdq
mov
mov
imul
fwait
adc
ss
push
out
cmps
fstp
outs
jae
jl
push
mov
icebp
dec
xchg
call
add
test
and
pop
lods
inc
mov
push
adc
adc
test
out
loop
cmp
outs
sbb
push
idiv
imul
or
fcmovb
das
movs
mov
and
xchg
mov
push
imul
scas
fcom
inc
jae
movs
inc
dec
mov
adc
push
add
push
jo
push
in
xchg
fistp
mov
js
arpl
iret
lods
xor
cmp
daa
aam
stos
fdivr
outs
jae
xlat
mov
in
in
xor
mov
xlat
sbb
xor
icebp
ficomp
add
push
sbb
jnp
jl
test
inc
movs
push
je
sbb
push
shl
jo
xlat
outs
imul
cmps
mov
or
mov
pop
shr
bswap
jge
rol
mov
rcr
mov
mov
into
scas
stc
sbb
test
test
jp
test
int3
xor
lods
stos
dec
sbb
mov
sbb
aaa
mov
sbb
bound
mov
mov
int3
and
inc
xchg
lds
and
js
jge
ret
xchg
pop
cmp
cmp
movs
xchg
mov
pop
inc
ins
or
sub
add
fs
sti
mov
arpl
ret
lahf
mov
or
jnp
jbe
cs
(bad)
mov
not
js
shl
inc
cdq
cld
stos
dec
pop
sbb
cmp
cli
jl
push
adc
mov
sbb
sti
iret
gs
push
call
adc
das
lahf
aaa
mov
bound
xchg
xor
add
jbe
ins
test
jnp
push
into
dec
or
mov
push
add
and
test
mov
xchg
mov
jbe
aas
xchg
push
inc
in
dec
popf
fidiv
cmp
xchg
sbb
mov
jae
cmps
and
shr
jb
jo
(bad)
retf
or
retf
mov
js
in
adc
xchg
mov
xchg
mov
or
movs
jo
je
mov
or
hlt
pop
test
xchg
loop
out
sub
icebp
push
ror
les
xlat
sub
inc
int3
push
out
aad
push
je
push
sbb
jns
pusha
mov
sar
adc
out
rol
push
mov
adc
sahf
jge
inc
js
adc
adc
jnp
xchg
pop
(bad)
xchg
mov
xor
and
fs
sbb
sbb
movs
jo
int
je
dec
jne
xchg
clc
mov
add
or
push
dec
mov
repz
(bad)
jmp
test
sub
dec
jb
or
out
fisttp
fcmove
(bad)
sub
xor
sbb
mov
(bad)
call
mov
int3
dec
fld
push
mov
add
jne
dec
or
xor
and
push
push
cdq
xchg
retf
sahf
add
loopne
lods
pop
mov
sbb
icebp
icebp
aam
jle
push
aas
out
push
xchg
xor
out
mov
pushf
sub
push
mov
or
fs
inc
mov
lds
xlat
mov
pop
or
add
scas
fistp
and
sbb
out
clc
fld
jge
jne
or
mov
popf
mov
cld
les
stos
pop
movs
shl
mov
jle
add
jae
stc
repz
dec
(bad)
sbb
js
pop
into
mov
bound
push
sahf
mov
rcl
sub
xor
mov
adc
cmp
xchg
test
dec
xor
mov
pop
ret
and
nop
mov
fwait
sbb
push
push
xor
push
adc
mov
and
jae
pop
(bad)
(bad)
call
or
nop
leave
dec
imul
jge
dec
test
cmps
dec
sbb
stc
cmp
xchg
inc
cdq
xchg
add
inc
mov
pop
fcomp
push
aad
jmp
sub
xchg
enter
ins
neg
je
jns
mov
jg
push
xchg
mov
push
lds
call
ss
cld
sbb
test
jle
xchg
xor
lds
les
mov
sub
adc
push
jbe
mov
dec
imul
adc
jne
jp
dec
aam
mov
mov
dec
out
ret
out
enter
jno
and
xor
push
retf
cmp
iret
sub
push
sub
out
mov
test
jp
hlt
pop
jle
push
sbb
outs
popa
cmp
test
jae
push
jmp
test
mov
jns
imul
fwait
lock
(bad)
mov
or
(bad)
xor
fs
jae
aas
and
in
xchg
test
loope
lods
push
jmp
in
xor
(bad)
outs
lahf
sbb
jecxz
dec
mov
in
sbb
sbb
jae
and
xor
cmp
mov
add
jae
fisubr
fcmovne
or
popa
sbb
imul
dec
inc
cmp
or
sub
or
sbb
aas
mov
push
xor
adc
mov
cli
xchg
cmp
hlt
aad
sbb
mul
aam
mov
leave
std
jecxz
jl
mov
test
xchg
lds
sbb
shl
add
repnz
movs
push
add
out
push
cmp
dec
push
inc
and
mov
cwde
mov
repz
sbb
in
jg
mov
sbb
lds
sbb
mov
fidiv
adc
or
and
xlat
add
and
push
mov
ficomp
add
jp
xchg
and
scas
cs
loope
repz
pusha
fdivr
lds
ret
and
dec
das
lahf
lods
in
jns
int
adc
and
mov
xchg
dec
push
dec
xchg
adc
jae
hlt
mov
mov
call
cmps
xchg
or
out
push
popa
ja
mov
cmps
xchg
je
jo
adc
pop
and
xor
cmp
stos
xor
xor
mov
jne
sbb
pop
mov
ja
retf
sbb
aas
xor
push
loopne
loop
das
cmps
inc
fisub
mov
inc
popf
je
cwde
test
adc
pmaxsw
mov
in
mov
mov
inc
pop
call
pop
add
sub
(bad)
scas
jp
jns
jne
xchg
cwde
inc
aad
sub
dec
jl
stos
mov
push
dec
mov
lods
cmp
mov
adc
sub
sub
cmp
adc
xor
sbb
rcr
push
cld
aaa
jl
add
call
jge
aas
xchg
and
ret
aaa
nop
stos
jns
jae
popa
ja
ror
js
pop
mov
bnd
loope
out
pop
dec
pop
mov
or
test
jae
(bad)
mov
adc
lods
adc
dec
retf
scas
jae
out
mov
scas
aaa
leave
cmps
sbb
(bad)
aaa
mov
ret
fdiv
and
test
stos
out
inc
shr
mov
sbb
and
sbb
jg
(bad)
ffreep
mov
xchg
jae
stos
cmps
mov
fmul
sub
movs
ror
in
(bad)
ret
and
mov
pop
ret
ffree
aam
test
mov
mov
outs
pop
fist
and
jno
aaa
sbb
in
and
into
jae
out
pop
cmp
jle
push
xor
in
xor
daa
clc
inc
xchg
mov
or
jp
mov
push
or
and
pop
pop
scas
test
into
(bad)
rol
xchg
test
lock
mov
test
ins
fstenv
sub
jl
jge
xchg
inc
jbe
arpl
test
or
(bad)
repz
mov
sbb
mov
sub
dec
jno
inc
push
mov
push
pop
push
jle
aad
mov
xchg
sub
div
mov
xchg
test
iret
add
fist
cmp
cld
inc
repnz
scas
dec
iret
pushf
mov
cld
stc
cdq
cli
cli
xchg
test
imul
mov
dec
retf
sbb
enter
hlt
adc
fisubr
fidiv
dec
add
je
popf
or
js
jecxz
daa
(bad)
mov
stos
add
test
mov
pop
movs
cld
fld
lock
imul
mov
aaa
sbb
mov
xchg
mov
loope
hlt
dec
fldcw
std
ds
push
sbb
inc
mov
cmps
mov
mov
xchg
retf
call
out
fdivr
movs
mov
dec
mov
push
pusha
mov
loopne
repnz
jl
pop
mov
nop
dec
leave
div
dec
sbb
pushf
xor
jae
aam
bound
jge
mov
push
jns
and
mov
cmp
jbe
ss
(bad)
hlt
or
(bad)
sti
push
mov
fadd
je
ror
cdq
push
dec
lock
cmp
mov
sbb
sub
lock
mov
bound
xchg
push
data16
jmp
and
je
int3
jle
das
mov
xchg
retf
int3
stc
out
inc
inc
aas
stc
(bad)
scas
dec
add
xchg
movs
and
ret
fidiv
ja
fwait
jb
adc
(bad)
stc
xchg
mov
xchg
and
loopne
in
out
or
std
mov
pop
cmps
call
xor
dec
sbb
movs
scas
sbb
sbb
cdq
(bad)
sti
call
div
jle
lods
mov
int
scas
cmp
mov
retf
in
sub
sub
and
clc
mov
lods
mov
add
mul
lods
mov
movs
data16
mov
push
mov
sbb
(bad)
sub
cmc
cwde
cmps
gs
pusha
xchg
ss
mov
jl
into
xor
inc
xchg
loop
jp
addr16
xor
mov
cmp
push
loop
sbb
pop
jae
inc
inc
ret
scas
xor
mov
movs
loope
adc
mov
cli
fnsave
mov
jno
xchg
xchg
in
fst
(bad)
out
fwait
fwait
das
push
mov
push
enter
test
xchg
pop
fild
sar
cli
sahf
and
adc
xchg
mov
rcr
mov
cmp
dec
sbb
in
sar
mov
or
jnp
or
inc
adc
scas
out
data16
mov
outs
mov
xor
scas
dec
sbb
in
mov
data16
add
mov
xlat
shr
fcomp
fidiv
xchg
das
retf
xchg
sbb
int3
sub
jg
test
int
dec
inc
sub
mov
jge
pop
sub
push
shl
sub
mov
shr
or
jecxz
vcvtsi2sd
fs
call
das
rol
dec
push
cld
sbb
inc
inc
mov
out
cmp
pop
in
xchg
sub
aad
mov
mov
retf
ja
adc
in
stc
imul
cdq
dec
fdiv
xor
dec
pop
mov
lods
push
mov
imul
test
dec
mov
sub
aaa
imul
xor
mov
mov
sbb
and
mov
cli
adc
div
je
jbe
(bad)
stos
movs
fwait
retf
test
jp
hlt
cmps
push
or
dec
jbe
outs
mov
mov
lahf
aam
pusha
mov
(bad)
sub
lahf
test
jmp
xor
xchg
mov
jmp
fbld
mov
pop
test
jmp
adc
fisttp
call
mov
pop
jae
enter
and
arpl
pusha
out
and
pop
fst
shr
mov
inc
iret
cmp
cmc
jle
in
and
fdivr
jae
into
movs
mov
xchg
dec
(bad)
cmps
inc
and
sub
push
adc
add
pop
js
clc
sub
push
fmul
ins
loop
js
push
adc
ret
sub
sbb
mov
mov
gs
data16
add
xchg
or
and
jg
push
add
fbstp
(bad)
retf
push
jns
xchg
int
inc
xchg
arpl
inc
mov
sbb
cwde
lea
or
ja
sbb
movs
pop
mov
add
mov
loope
loop
scas
inc
nop
adc
fst
push
and
mov
ror
retf
out
pop
pop
push
shr
xchg
out
jnp
ret
neg
pop
ja
ss
pop
mov
jae
test
scas
int3
sbb
jbe
les
and
dec
lods
pop
dec
loop
mov
sbb
jae
js
push
cli
push
jno
adc
aam
add
jae
pushf
mov
sbb
loop
mov
(bad)
xchg
mov
jmp
sar
fwait
xchg
jmp
jmp
jae
dec
sbb
bound
mov
adc
(bad)
mov
jmp
adc
and
and
mov
shl
ret
push
ins
dec
sti
sbb
mov
jns
cmp
arpl
rcr
mov
add
pop
fwait
hlt
sbb
test
xor
test
and
icebp
repz
mov
ja
lods
jae
rcl
test
cmps
fnstsw
int3
imul
mov
ins
imul
mov
cmp
xlat
cmp
repnz
dec
cmp
dec
cmp
adc
repnz
in
jae
call
out
sbb
jge
and
sbb
loope
les
enter
inc
and
sbb
pop
push
and
outs
sbb
add
jnp
lods
mov
xor
cmovno
call
mov
(bad)
es
pushf
mov
adc
neg
push
ficom
test
lds
js
pushf
pop
sbb
ja
push
stos
add
cmp
out
(bad)
lods
loopne
mov
xor
add
and
mov
cld
push
jbe
add
adc
sub
enter
mov
or
xchg
inc
retf
in
stc
inc
stos
repz
in
aam
aam
mov
inc
clc
iret
pop
bound
inc
xor
add
mov
cwd
jne
jle
leave
pop
shl
jno
jnp
xchg
test
jle
js
sbb
lods
push
or
test
jmp
dec
cli
aam
mov
daa
and
jb
push
or
push
sbb
sti
cmp
imul
lock
retf
gs
int
add
(bad)
repz
dec
xchg
jl
rep
sbb
mov
shl
hlt
adc
lea
cs
rol
xchg
mov
jns
in
outs
dec
sbb
mov
je
cs
mov
push
retf
fucom
fsub
lds
mov
push
mov
test
mov
sub
xor
mov
int3
je
fbld
mov
scas
sahf
pop
dec
and
jle
lock
mov
mov
and
repnz
scas
push
dec
adc
xor
imul
ret
repz
into
ret
or
or
aam
(bad)
repz
fimul
ds
xor
mov
(bad)
mov
add
mov
mov
adc
inc
mov
stos
cmps
arpl
jne
sbb
movs
dec
pop
inc
mov
push
dec
fs
repz
sbb
adc
test
dec
mov
cdq
scas
xor
push
dec
push
lods
push
mov
sar
les
mov
int
(bad)
sbb
push
scas
mov
or
mov
jne
ret
inc
xchg
jg
aad
or
mov
movs
stos
xchg
sub
push
repz
int3
das
xor
out
pop
sbb
sbb
mov
popa
sub
daa
sbb
and
jae
mov
nop
mov
je
xchg
jo
mov
xor
fisub
push
mov
popf
dec
pop
sub
mov
outs
rol
aad
and
movs
(bad)
call
jb
in
add
enter
add
xor
push
mov
or
jbe
imul
push
mov
les
mov
lahf
inc
arpl
push
adc
data16
mov
sbb
cmpps
pop
jge
adc
xchg
and
and
arpl
ins
sub
pop
lods
sbb
shr
inc
push
sub
pop
test
ds
aas
shl
clc
or
sbb
daa
and
pop
ret
sbb
mov
xchg
int
cld
mov
mov
fcmove
dec
fwait
popa
fwait
int
imul
imul
jo
sub
jecxz
xor
ja
sbb
test
xchg
inc
ins
int3
or
push
xor
cmp
push
jmp
sub
mov
cli
mov
dec
retf
sahf
pop
sbb
fmul
lahf
fidiv
jmp
xchg
mov
xor
lahf
lea
ja
ret
je
pop
mov
ja
enter
imul
push
sbb
cmp
pop
sbb
push
jg
aas
adc
push
mov
leave
pop
cmp
and
jg
sbb
imul
jg
xlat
dec
test
enter
xchg
inc
aas
sbb
dec
add
push
int
xchg
xor
into
popa
hlt
jmp
mov
jg
push
gs
nop
loopne
xor
inc
js
les
std
je
sbb
xor
leave
retf
push
adc
fwait
lock
sub
fsubr
data16
xor
mov
into
ins
call
inc
rcl
mov
std
lea
dec
ins
mov
mov
ds
xor
mov
xchg
adc
pop
or
mov
call
sbb
mov
stos
mov
xchg
leave
fisttp
jle
into
gs
mov
test
push
sahf
pop
xchg
fld
sbb
mov
jo
push
xchg
cmp
lods
mov
or
pushf
or
hlt
loope
pop
mov
or
out
test
les
in
mov
pop
xor
sub
jmp
or
mov
dec
adc
jp
enter
stc
mov
fs
add
fsub
dec
sub
fisub
mov
jecxz
jae
loopne
mov
sbb
push
and
mov
mov
pop
aam
call
cmp
jo
(bad)
sqrtps
call
pop
stc
ins
test
sbb
sbb
mov
or
scas
jl
out
mov
mov
unpckhps
pop
mov
ja
push
mov
sti
xor
mov
cs
leave
aad
shl
fiadd
pop
xor
pop
test
sub
inc
mov
sti
mov
push
fadd
pop
stc
(bad)
push
in
xchg
and
adc
adc
pop
mov
ffree
inc
mov
shr
mov
dec
dec
js
mov
or
mov
in
lea
lahf
sub
jae
sub
push
and
cs
retf
xchg
fcomp
rol
mov
adc
pushf
mov
xchg
div
ds
mov
jae
add
jbe
(bad)
js
sbb
ret
push
jle
or
movs
adc
push
mov
sbb
fld
add
sahf
bound
mov
fcmovnu
inc
sbb
(bad)
cwde
addr16
movs
mov
mov
call
pop
std
test
jecxz
cmps
ds
push
add
cld
and
cmp
mov
cs
sbb
push
push
xor
and
les
dec
ins
ds
xor
sub
mov
pop
cmp
cmp
xchg
mov
js
loop
aam
add
push
ss
hlt
rcr
xchg
stos
stc
cmp
adc
jmp
mov
push
adc
mov
xlat
sub
or
shr
shr
inc
movs
repnz
pop
push
jmp
aam
rcr
and
repnz
inc
lods
jae
das
cmp
sub
xchg
sbb
test
retf
xchg
pop
mov
pop
xor
jl
ret
jb
and
out
sbb
jecxz
sahf
lods
sub
and
lock
xor
jle
mov
inc
cmps
repz
mov
inc
jns
popa
test
mov
retf
adc
cld
imul
(bad)
lahf
xchg
jge
add
dec
shl
shl
(bad)
outs
pushf
(bad)
pushf
std
sbb
enter
mov
jae
je
add
mov
or
cs
dec
aam
retf
sbb
or
inc
rcl
mov
stos
push
in
inc
xchg
sub
adc
or
fwait
aad
test
mov
push
(bad)
jg
int
adc
ds
fwait
jle
ins
arpl
xchg
mov
inc
test
es
sar
cli
jae
cmp
shr
movs
sbb
xor
fdiv
push
mov
aas
imul
mov
cmp
xor
push
mov
mov
(bad)
and
jnp
mov
sbb
add
bound
and
mov
hlt
adc
pop
mov
retf
fimul
lods
jge
mov
bound
inc
pop
and
or
jmp
mov
xor
call
ror
jno
dec
pop
out
jae
mov
xchg
xchg
push
push
das
jae
out
stos
mov
adc
push
cmp
push
inc
ins
adc
repz
enter
adc
push
mov
(bad)
mov
dec
jg
mov
push
cli
jle
mov
call
lods
cmp
jno
push
enter
jo
push
cwde
and
jnp
inc
jb
inc
out
inc
test
cmps
or
imul
jle
cmp
scas
mov
xor
cmps
jae
cwde
xor
and
mov
sub
jo
stos
add
out
pop
lods
push
mov
ss
push
lods
cdq
add
xchg
jge
dec
enter
pop
cwd
les
rcr
jne
cld
mov
idiv
adc
add
and
arpl
inc
std
push
inc
jae
je
sub
inc
test
cld
sbb
hlt
jae
cmc
stos
call
loopne
dec
mov
jecxz
mov
jae
shl
ds
nop
jbe
add
cwde
xlat
and
outs
adc
and
loope
inc
test
inc
inc
pop
mov
mov
sbb
add
xchg
add
shl
or
retf
cs
jg
scas
xchg
outs
dec
das
cwde
sub
sbb
test
or
in
pop
mov
jnp
mov
xchg
in
sbb
xor
dec
inc
das
xor
fisttp
jne
scas
add
arpl
push
and
mov
test
mov
jp
push
cmp
lods
sbb
sub
jge
inc
jne
lock
out
std
push
rcl
and
mov
adc
jae
mov
and
xchg
fs
and
xchg
push
push
cdq
hlt
gs
mov
pop
out
cmps
push
mov
iret
hlt
push
pop
sub
or
adc
jne
mov
and
loopne
dec
leave
mov
push
dec
dec
sub
jmp
mov
or
fsubr
inc
mov
call
and
data16
test
pop
inc
(bad)
xchg
sbb
fild
sahf
pop
outs
or
xchg
xchg
outs
jg
mov
sbb
mov
sbb
gs
cmc
je
scas
test
xor
mov
or
mov
pop
retf
cdq
mov
mov
(bad)
mov
jmp
js
loope
repz
test
aad
scas
sar
push
js
arpl
and
movs
test
das
inc
repz
(bad)
jmp
mov
pop
jo
cmp
ins
jge
and
sbb
jmp
mov
movs
lds
icebp
jns
pushw
fiadd
cld
sti
(bad)
repnz
icebp
or
popf
push
jecxz
and
xchg
mov
test
push
adc
imul
fst
mov
adc
sub
sub
outs
ror
xor
jp
jae
lds
cmp
sub
mov
pop
popa
imul
in
xchg
jmp
jae
add
push
jg
or
mov
sub
sbb
imul
into
rcl
sbb
mov
je
test
in
test
fistp
mov
movs
jle
xchg
test
mov
jae
sbb
pop
int
test
add
js
and
push
sar
sbb
cmp
push
adc
sbb
mov
dec
imul
jmp
enter
mov
pusha
stos
xor
dec
inc
retf
popa
jae
loope
and
pop
mov
shl
jp
adc
in
inc
sbb
shl
fadd
sbb
bound
mov
aam
adc
outs
sbb
jae
pop
xchg
push
cs
js
mov
out
mov
sbb
stc
scas
out
int3
xor
mov
movq
sbb
xor
dec
jnp
sti
retf
and
test
arpl
or
fwait
jg
mov
cs
test
push
mov
sbb
pop
rol
mul
rol
add
jne
cld
enter
jns
push
dec
sub
xchg
cmp
int
jae
sti
nop
sbb
ret
out
retf
lahf
outs
icebp
cmp
xor
adc
inc
test
pop
jno
loopne
inc
dec
sub
cmp
or
lea
in
ret
jge
mov
movs
stos
sub
test
inc
jp
pushf
push
fdivr
inc
inc
cmp
into
ds
ins
pop
scas
jb
and
mov
pushf
push
(bad)
mov
mov
xor
mov
(bad)
sub
scas
xchg
pop
mov
jmp
push
jb
loope
mov
pop
outs
dec
mov
xchg
cmc
data16
repnz
jnp
add
or
cmp
(bad)
mov
push
ret
jl
test
xchg
sbb
arpl
fld
add
push
mov
sub
in
add
fcomp
or
sbb
jle
ret
pop
jge
neg
das
je
ss
inc
and
mov
xchg
scas
sbb
(bad)
shr
gs
or
repz
push
pop
ret
sbb
out
dec
mov
in
xchg
jp
pushf
push
es
jl
push
adc
(bad)
adc
nop
sbb
xor
mov
call
cmc
(bad)
shl
sti
sbb
xchg
xor
sbb
inc
jno
sbb
push
clc
xchg
mov
cld
mov
mov
mov
repnz
mov
mov
pop
shl
cmps
xchg
(bad)
shl
ret
add
pop
pop
adc
dec
lods
icebp
adc
sub
mov
or
or
mov
(bad)
inc
cmps
in
aad
hlt
or
call
lahf
push
mov
adc
inc
cli
xchg
xor
inc
pop
inc
fcmovnb
add
into
lds
sbb
sbb
xchg
imul
add
pop
sbb
cmps
cmps
push
jb
mov
push
in
sti
outs
fucomp
sub
mov
loopne
cmc
pop
loopne
adc
sbb
xor
xchg
mov
test
mov
rcr
fcom
sbb
test
imul
sti
std
push
into
mov
sbb
test
cld
jno
(bad)
in
outs
inc
inc
mov
sbb
repz
sub
scas
into
cld
mov
xchg
mov
jno
xchg
or
in
lahf
test
repz
mov
mov
sti
push
imul
dec
js
test
jae
xchg
stos
or
dec
cmp
sub
jecxz
dec
test
mov
movs
sub
popa
das
push
leave
xchg
dec
xchg
mov
pop
jb
jle
movzx
in
add
inc
and
mov
adc
aam
sbb
cmp
ins
mov
retf
jle
sbb
imul
imul
(bad)
addr16
and
ja
sub
in
shl
xor
das
imul
adc
cmp
aas
lock
xchg
std
hlt
rcl
sbb
xchg
cmc
jmp
cld
cmp
push
lods
mov
mov
xor
sbb
xchg
dec
push
sbb
xor
xchg
pop
add
addr16
sbb
int
adc
scas
xchg
or
pop
push
xchg
js
xchg
fs
(bad)
add
cmp
fidiv
bound
xchg
es
jnp
scas
mov
test
mov
dec
adc
sbb
rcl
jmp
cmc
jnp
adc
sbb
fistp
not
mov
xchg
pop
test
lods
cmc
fnclex
mov
cmps
xor
stos
sbb
leave
test
out
es
xchg
rol
imul
lods
mov
(bad)
outs
mov
push
xchg
adc
into
push
mov
pop
jae
mov
sub
dec
jb
call
and
adc
pop
mov
sub
cli
(bad)
fldenv
icebp
das
in
xchg
xchg
dec
dec
fcomp
xchg
clc
pop
pop
movs
(bad)
xchg
inc
repz
xchg
pop
mov
pop
mov
jecxz
sub
sti
in
sbb
test
pop
out
dec
sbb
and
jae
jmp
sbb
push
sub
jge
pop
add
rcr
mov
sub
int
mul
lods
fisub
jae
js
inc
mov
add
push
mov
iret
mov
xchg
ja
rcl
mov
and
ret
int
sbb
das
inc
add
dec
ja
int
test
jl
adc
mov
sbb
sbb
lods
fadd
pushf
push
push
ins
sbb
adc
or
cmp
pop
jb
je
add
mov
xchg
(bad)
jle
mov
mov
jg
icebp
and
or
sbb
sti
ins
or
dec
xor
xor
pushf
jl
jae
cmps
jmp
scas
inc
retf
loopne
out
mov
xchg
loope
push
and
inc
stos
dec
or
sub
inc
push
pop
adc
sub
outs
cli
mov
pushf
jbe
add
push
dec
inc
mov
cli
pop
enter
das
dec
xchg
lods
jl
push
dec
mov
ins
ficom
jae
cmovo
push
jle
sub
jge
push
cmp
xlat
dec
sbb
out
and
cwde
adc
inc
mov
lods
(bad)
movaps
inc
ja
xchg
pop
inc
into
scas
gs
xchg
cmp
popf
frstor
mov
div
movs
or
mov
and
into
jae
in
pop
lock
push
sbb
stc
inc
mov
sub
je
imul
jns
push
mov
xchg
cmp
jmp
jb
lock
idiv
addr16
inc
js
adc
sbb
sub
mov
fld
into
or
out
pushf
add
aaa
and
mov
aam
mov
ret
in
in
cdq
shr
test
gs
ficom
mov
in
mov
test
jns
in
and
jge
cmp
rol
push
mov
je
cmp
aam
sbb
js
fdivr
imul
(bad)
aad
outs
sbb
scas
jae
mov
imul
jle
sbb
mov
push
outs
xor
mov
sbb
or
jg
cs
(bad)
mov
jg
sbb
rol
loopne
sar
pop
jbe
call
push
stos
ja
mov
adc
fs
sbb
sbb
push
xor
repz
dec
push
pop
sub
cmp
inc
mov
aas
cs
ss
mov
fild
and
repz
test
mov
and
jnp
add
xchg
and
stos
sbb
arpl
jge
mov
pop
mov
jo
dec
(bad)
ja
(bad)
vmwrite
xchg
mov
mov
inc
ss
rcl
mov
pop
je
cmp
xchg
movs
add
xchg
dec
loopne
repz
ds
lods
stos
test
sar
mov
aad
add
lea
xchg
inc
add
ret
gs
imul
mov
(bad)
sbb
out
rcl
ss
ss
and
inc
mov
fisubr
loopne
imul
int
mov
dec
fnstenv
inc
xor
repnz
jae
scas
bound
mov
popa
std
ret
cli
jno
rol
(bad)
push
jg
add
into
popa
and
push
push
ror
imul
cmc
dec
push
hlt
inc
mov
inc
xchg
daa
fistp
loope
iret
retf
jae
push
stos
sub
repnz
pop
repz
cld
inc
retf
push
xor
mov
mov
cmc
fsub
mov
movq2dq
jg
repz
pushf
fstp
(bad)
jmp
pop
ja
(bad)
mov
jne
js
cvtdq2ps
hlt
xchg
add
mov
fwait
int3
aaa
(bad)
fisubr
dec
jle
jp
jae
inc
pusha
gs
stc
jle
sbb
shl
sub
mov
lods
xor
sub
jae
and
jbe
dec
xchg
mul
pop
mov
in
call
inc
inc
or
pop
xor
je
into
push
xchg
ins
xor
sub
iret
jae
mov
lods
test
lahf
jae
pushf
push
and
retf
jbe
and
xchg
(bad)
adc
adc
mov
add
mov
xchg
loopne
movs
int
and
aad
xor
sub
ins
inc
pop
jp
jno
rcl
push
and
mov
pushf
jbe
mov
test
enter
mov
jae
adc
sahf
fisub
adc
pop
test
popa
jbe
fsub
sub
clc
jo
pop
shl
and
push
pop
ins
repz
dec
mov
outs
add
add
jp
mov
xor
fs
push
cli
pushf
and
jae
and
dec
jns
fidiv
addr16
xor
(bad)
cwde
jae
bnd
xchg
dec
jae
(bad)
aaa
repnz
xchg
shl
fnsave
push
jne
test
sub
xor
push
stc
mov
xchg
dec
sub
cdq
pop
jecxz
jmp
inc
(bad)
sbb
cmp
mov
ret
jmp
jo
popf
in
xchg
je
(bad)
je
dec
mov
mov
xor
retf
pop
mov
scas
int3
lods
xor
mov
repz
daa
jnp
pop
and
inc
lahf
push
bound
nop
dec
neg
adc
adc
inc
fcomi
aam
pop
mov
add
(bad)
ins
sbb
lods
pop
int3
loopne
dec
mov
cmp
hlt
out
xchg
add
mov
jae
es
cmp
cmp
(bad)
mov
sbb
pop
jae
sbb
into
outs
adc
daa
fidiv
pop
loop
pop
sbb
popa
sbb
mov
jne
cdq
scas
arpl
enter
xor
ins
mov
pushf
push
fcom
pop
jb
jbe
jg
mov
ret
push
dec
add
push
push
cmp
cmp
and
data16
cld
cli
sub
je
icebp
jo
sbb
ret
sbb
out
dec
aam
fldl2t
mov
and
mov
xor
pop
mov
cmc
mov
add
xor
fsubr
cdq
int
out
inc
enterw
jle
rcr
cmps
sbb
test
xor
jecxz
dec
jns
and
inc
sbb
dec
cmp
or
je
xor
repz
xchg
sti
xchg
mov
dec
hlt
xor
data16
std
pop
mov
enter
shl
cwde
or
jle
mov
xor
loopne
inc
ds
inc
jae
push
addr16
arpl
icebp
mov
add
xor
sbb
mov
dec
pop
jmp
cmp
in
std
push
mov
mov
pop
inc
leave
cmp
pop
bound
and
pop
je
pusha
test
out
adc
or
xchg
jnp
mov
mov
xchg
cmp
adc
cmp
loope
in
je
outs
mov
jae
mov
into
mov
(bad)
adc
out
push
add
or
pop
inc
adc
les
pop
or
fs
add
test
mov
mov
sbb
mov
in
inc
cmc
jmp
cdq
rol
sbb
xlat
pop
pop
les
in
mov
imul
popa
movs
repz
je
inc
movs
sub
in
xchg
aas
test
les
aad
push
adc
leave
or
dec
pop
xchg
imul
cwde
jb
mov
(bad)
sub
dec
arpl
xchg
adc
(bad)
call
push
fbstp
adc
stos
iret
aam
jbe
nop
cmc
mov
fsubrp
jae
sbb
imul
mov
xchg
mov
and
test
jae
mov
shl
push
bound
inc
addr16
ret
test
add
cli
jnp
fcomp
cli
xlat
popa
mov
mov
mov
xor
xchg
mov
jne
mov
mov
xchg
rcr
pushf
movs
xor
imul
lds
pop
sub
lods
je
push
loope
sbb
inc
push
mov
out
std
stc
push
dec
jae
leave
mov
(bad)
xor
scas
pushf
jl
mov
aad
es
mov
inc
sbb
cmps
jl
sbb
xchg
jne
pop
ja
mov
push
xchg
xor
lock
xchg
mov
je
cdq
or
xchg
xor
pop
fnstsw
mov
retf
adc
xchg
mov
dec
iret
xor
dec
sub
add
sbb
je
(bad)
mov
jae
(bad)
sbb
jnp
stos
clc
add
out
or
out
push
cmp
jae
xor
adc
fbstp
xchg
mov
gs
loope
outs
mov
out
sbb
loop
xchg
out
add
call
stos
das
dec
push
pop
add
adc
xor
mov
retf
shl
push
ins
jno
sbb
add
in
lds
add
in
xchg
popf
jbe
sbb
movs
lahf
(bad)
pop
jmp
outs
sti
or
xchg
xchg
sbb
fimul
mov
xrelease
xchg
adc
(bad)
bnd
aaa
test
daa
inc
into
out
jb
fcomp
outs
adc
xchg
out
repz
mov
imul
sub
mov
out
ja
lds
inc
and
imul
into
mov
sbb
add
gs
gs
push
les
jmp
sbb
call
test
or
ja
dec
mov
xchg
test
fisttp
dec
or
inc
inc
ret
push
iret
sbb
ja
fadd
stos
cmp
lds
mov
adc
and
cmp
mov
sti
inc
xchg
xchg
xor
(bad)
jae
mov
icebp
mov
clc
jmp
pop
xor
test
popa
push
stc
or
shl
push
pop
or
jo
and
dec
or
sbb
outs
repnz
loope
mov
popa
add
inc
sbb
aaa
add
inc
loope
je
fs
pop
and
retf
int3
out
sbb
imul
mov
(bad)
cld
jbe
movs
xchg
push
xchg
push
lahf
stos
mov
iret
xor
sub
cmp
mov
cmp
addr16
pop
jb
jge
popa
adc
add
jmp
dec
ins
mov
jnp
adc
mov
adc
xchg
jmp
cmp
shr
adc
lea
(bad)
jno
outs
pop
dec
jmp
pop
cmp
pop
into
xchg
xor
ins
xchg
out
stc
sbb
or
xor
mov
dec
shr
addr16
ficomp
jl
add
rcl
sub
jle
test
fist
fstp
movs
test
fidivr
sbb
push
cmp
mov
adc
mov
or
gs
je
ret
fs
mov
mov
mov
xchg
cmp
mov
mov
fsub
idiv
icebp
sti
iret
test
aad
adc
and
je
sbb
xor
dec
(bad)
movs
ja
int
mov
xchg
or
inc
aaa
dec
mov
jmp
xchg
rcl
shl
lods
test
mov
push
sub
pop
movs
call
xlat
int
mov
mov
push
sbb
add
rol
mov
or
call
repz
adc
sbb
xchg
mov
les
inc
or
adc
push
popa
xchg
xor
iret
or
ficomp
scas
dec
lods
jle
pop
jmp
cmc
cmp
mov
sbb
icebp
fcom
inc
sbb
xchg
xor
mov
push
sub
xchg
adc
and
loop
sar
jb
aad
lods
cs
or
sbb
scas
mov
mov
out
push
push
xor
inc
fcmovnb
or
mov
add
mov
adc
add
pop
lea
pop
pop
icebp
arpl
sub
jae
xlat
or
fisttp
in
outs
sbb
or
data16
add
mov
jg
push
sbb
xlat
jbe
pop
push
aam
xor
mov
outs
push
sbb
mov
xchg
mov
jecxz
jnp
popf
and
xor
fidivr
les
fs
mov
jmp
xchg
push
outs
inc
int
dec
push
call
jmp
dec
cwde
jne
mov
mov
xchg
mov
(bad)
sbb
ret
jnp
inc
int
mov
test
xor
leave
sub
xor
push
in
inc
jl
jno
sbb
xor
add
adc
mov
cmp
and
sub
mov
cmp
lods
mov
arpl
mov
dec
mov
loope
jae
fidivr
add
mov
xchg
repz
push
jg
inc
outs
fwait
sbb
pop
inc
daa
leave
and
mov
mov
dec
mov
xor
mov
test
hlt
aas
or
outs
add
not
push
add
in
mov
jb
out
outs
push
mov
or
es
cli
push
mov
ret
sbb
inc
push
les
mov
aam
cmps
push
arpl
or
inc
pop
sti
inc
xor
xchg
or
add
pushf
or
pop
sbb
inc
jne
sbb
pop
inc
xchg
or
pusha
pop
sbb
cli
or
sbb
mov
push
add
cld
scas
or
leave
jbe
dec
push
jmp
aas
push
mov
retf
add
mov
inc
aam
lods
jne
adc
add
jno
mov
daa
inc
push
mov
mov
dec
rcl
xor
inc
pop
(bad)
loopne
sbb
out
add
cmps
sub
mov
cmp
outs
push
inc
aas
scas
imul
pop
out
jns
xchg
iret
jbe
mov
jl
mov
inc
nop
rol
sbb
sbb
(bad)
and
repnz
mov
lods
into
fwait
call
sti
out
lock
sub
js
inc
test
jb
inc
jb
ret
mov
xchg
iret
sbb
fild
das
sub
int
in
or
test
int3
daa
add
imul
dec
aad
mov
daa
mov
popf
pop
xor
mov
daa
xor
pop
xor
xchg
js
xor
jno
std
in
xor
arpl
and
cmp
sbb
dec
jae
or
enter
je
cmp
mov
bound
cmps
inc
mov
add
mov
arpl
aaa
xor
mov
mov
or
dec
dec
fsubr
xchg
mov
leave
sti
mov
cmp
sbb
adc
mov
push
inc
test
push
mov
pop
xchg
pop
xchg
mov
ret
cld
add
xchg
repz
mov
in
aad
cmp
cmps
dec
adc
scas
jne
rcl
sbb
clc
int3
mov
ja
repz
jmp
loope
xchg
sti
fisubr
arpl
imul
sub
jns
or
xchg
and
pop
in
jae
push
pop
neg
int
ficom
ret
mov
jno
lea
jge
xchg
in
inc
int
out
xchg
aas
jb
out
ins
(bad)
mov
movs
popa
xor
lods
mov
sti
shl
jae
jb
sbb
test
jle
xchg
popa
int3
call
jae
jg
inc
push
rcl
addr16
adc
mov
push
arpl
mov
pop
push
lea
xchg
sahf
and
jae
cs
cmp
cwde
mov
xchg
data16
(bad)
sar
addr16
sbb
sbb
mov
pop
mov
cmp
mov
mov
imul
or
lds
pop
ss
sbb
cs
test
mov
iret
xchg
or
(bad)
jg
(bad)
pop
js
xor
push
pusha
add
jge
lods
stos
lods
aaa
mov
inc
cld
add
add
inc
xchg
inc
stc
mov
xchg
rcr
outs
dec
pop
stc
xchg
icebp
or
xchg
cmps
inc
xlat
imul
pop
fs
inc
xor
jle
sub
pop
lea
xchg
jns
add
cmp
push
xchg
daa
fiadd
int
call
in
jo
mov
push
and
xor
or
mov
ja
idiv
push
and
push
push
inc
mov
fcom
pop
cmps
and
push
xor
stos
mov
and
dec
lods
lea
add
cmps
adc
in
in
sti
test
and
scas
mov
xor
addr16
sbb
mov
mov
iret
cmp
xor
repz
sub
mov
into
mov
push
test
enter
or
repz
pop
aad
dec
aas
cmps
ja
push
fld
xchg
movs
mov
les
xor
xchg
dec
jae
loope
js
test
pop
pop
xor
add
dec
jl
cld
mov
adc
dec
pandn
bound
mov
mov
jge
xor
in
mov
scas
adc
movs
rol
pop
adc
aam
pop
sbb
leave
(bad)
lods
and
xor
addr16
mov
inc
sbb
stc
pop
or
pop
inc
(bad)
stos
in
and
mov
retf
and
in
jae
xchg
or
inc
in
xchg
jb
aas
das
sub
in
mov
cmp
sbb
xchg
cmp
(bad)
push
xchg
xchg
push
pop
les
iret
add
pop
aam
pop
push
stos
jae
cmp
jle
mov
(bad)
sub
xchg
je
sub
pop
xchg
dec
add
jo
out
inc
cmc
add
jmp
scas
adc
sahf
xor
pushf
push
mov
gs
outs
push
call
fstp
sbb
mov
pop
lea
xor
cwde
sub
dec
mov
push
jbe
xchg
inc
pop
ja
std
div
sahf
push
mov
mov
push
adc
inc
xchg
sub
out
jae
xchg
adc
arpl
movs
nop
pusha
xchg
clc
cdq
not
iret
mov
jbe
fwait
mov
xchg
dec
mov
and
add
in
jle
jle
hlt
jb
out
jne
ret
lods
push
jb
xchg
daa
pop
xchg
or
xor
xor
sub
or
sahf
pop
cdq
loop
xor
dec
xchg
loope
cmps
dec
mov
out
sbb
and
pop
addr16
mov
dec
loop
jb
inc
movs
(bad)
mov
jl
enter
repnz
in
xor
call
xchg
mov
or
repz
es
jge
jecxz
or
sbb
mov
sbb
pop
jge
lock
int
sbb
cmps
xchg
shl
xor
aaa
movs
push
push
bound
inc
push
push
ss
xor
jb
sub
les
icebp
repz
cld
pop
push
sbb
inc
pop
aaa
pop
jbe
popf
mov
mov
aam
adc
mov
push
inc
out
mov
mov
aam
icebp
adc
sbb
or
mov
daa
je
mov
ss
or
mov
jge
in
and
jbe
xchg
mov
pop
jmp
mov
cdq
mov
add
adc
repz
jmp
xor
push
mov
xchg
mov
push
inc
add
pop
ret
sbb
imul
mov
mov
mov
dec
imul
call
sbb
or
int
leave
dec
dec
pushf
pusha
mov
adc
mov
sbb
sbb
jp
(bad)
retf
neg
pop
inc
xchg
sub
adc
fidiv
push
ret
inc
dec
adc
jae
xor
(bad)
es
test
pusha
cdq
ja
mov
cmp
out
push
inc
sbb
pop
inc
sbb
dec
sbb
retf
dec
adc
push
xor
int3
mov
mov
outs
iret
adc
loop
pushf
cdq
daa
push
mov
js
aaa
push
adc
mov
mov
push
ins
jmp
xchg
sub
imul
inc
sbb
popa
adc
sub
jmp
jbe
xchg
push
js
cmp
jp
test
sbb
inc
jae
movs
mov
inc
jne
and
dec
sbb
adc
outs
and
retf
xchg
shl
div
jo
or
jns
pop
jnp
pop
imul
pop
pcmpeqw
lods
mov
mov
(bad)
aam
(bad)
fimul
arpl
add
xchg
rcr
mov
pop
sub
jge
inc
push
or
xchg
xchg
and
xor
js
pop
mov
sbb
mov
and
(bad)
adc
mov
and
xor
scas
aas
inc
push
lods
adc
push
gs
repz
(bad)
pop
imul
fdiv
sbb
push
mov
in
jg
pop
inc
inc
(bad)
fsub
js
sbb
in
push
sysexit
jb
mov
inc
add
jmp
and
mov
mov
sub
sbb
jno
push
sar
and
pop
cli
inc
ret
dec
mov
cld
sbb
or
xchg
cwde
shl
or
ret
cmp
jecxz
in
lods
loop
mov
push
cwde
ja
test
sahf
add
or
inc
xor
mov
inc
test
mov
xor
inc
pop
cmp
push
pushf
xor
push
jmp
icebp
jl
je
mov
and
xchg
js
cmp
retf
iret
mov
mov
xchg
cmps
inc
repnz
and
inc
cmp
push
repnz
aad
mov
mov
xchg
(bad)
push
shr
call
ret
outs
cld
sub
mov
mov
mov
sbb
add
clc
jmp
and
dec
test
das
mov
inc
fisttp
dec
or
mov
jl
(bad)
mov
imul
pop
inc
sub
mov
jecxz
fdivr
pop
je
xor
das
mov
sbb
popf
vcvtsd2si
jne
mov
jne
cdq
jp
les
call
pop
xchg
cmc
pushf
add
mov
push
aam
arpl
dec
xchg
into
lock
mov
sar
pop
xchg
das
adc
(bad)
xchg
loop
mov
div
imul
xor
not
movs
test
adc
jo
sahf
xchg
mov
retf
sbb
(bad)
lods
mov
mov
push
mov
or
in
aaa
or
(bad)
in
imul
test
mov
mov
fs
pop
rcr
mov
jecxz
std
xchg
push
mov
sbb
dec
jne
jle
adc
jecxz
lods
inc
int
data16
cwde
clc
scas
das
jns
adc
and
xchg
ja
inc
adc
leave
(bad)
dec
fild
mov
pusha
les
mov
sti
jae
mov
push
pusha
out
loop
xor
cmp
adc
mov
pop
nop
jmp
cmp
std
js
ja
imul
div
xchg
xchg
pop
outs
mov
and
dec
mov
mov
scas
or
cdq
or
cs
or
(bad)
cmps
adc
sar
sbb
iret
ficom
pop
sbb
xchg
fisub
add
icebp
std
rcr
stos
add
pop
jmp
mov
jo
sbb
mov
mov
inc
mov
xor
mov
jns
not
pop
fistp
push
mov
sbb
push
(bad)
dec
call
jecxz
fnstenv
sub
xchg
adc
add
cwde
xchg
clc
jnp
retf
enter
cmp
jle
pusha
sar
xchg
(bad)
(bad)
add
(bad)
sbb
pop
cmp
xlat
stc
dec
inc
pop
sbb
mov
adc
test
test
div
sub
adc
retf
inc
and
sub
sbb
into
jg
int3
lea
inc
adc
add
xchg
idiv
test
push
cwde
icebp
xchg
sbb
mov
pop
xchg
add
add
lods
push
call
stos
mov
fstp
neg
hlt
fwait
xchg
das
pop
adc
jecxz
add
int3
gs
jbe
scas
jae
icebp
jae
inc
popa
dec
add
mov
sbb
push
jle
lds
jl
jb
inc
pop
or
mov
pop
(bad)
mov
shl
sbb
pop
xchg
les
repz
fsubr
pop
and
sahf
sbb
mov
mov
enter
das
lea
sub
inc
out
out
xor
aam
push
jae
(bad)
in
pop
pop
jge
sbb
arpl
jae
or
jmp
pop
inc
in
xchg
and
sbb
mov
push
mov
add
xchg
or
cmp
jae
cld
(bad)
pop
sbb
sbb
dec
mov
imul
xchg
and
in
call
xchg
ja
mov
xchg
mov
jae
and
(bad)
push
xor
adc
push
fldcw
std
push
mov
push
mov
cmp
mov
cmp
mov
imul
lock
leave
and
pop
mov
iret
stos
cmp
pop
push
xchg
push
push
int
ffree
shl
iret
hlt
mov
pop
xor
outs
sbb
inc
cdq
xchg
or
jg
jne
pop
xchg
sbb
imul
ficomp
jg
test
push
fldenv
mov
mov
xor
cmp
pusha
imul
shl
pop
ret
cwde
in
add
or
lock
add
scas
jmp
scas
mov
and
dec
sbb
aad
inc
jne
leave
cmc
mov
jnp
push
ins
jo
jmp
jb
sbb
mov
xchg
lods
pop
fwait
shr
retf
(bad)
add
jb
into
aam
repnz
outs
sbb
dec
mov
dec
jl
int3
jne
call
push
xor
and
jae
(bad)
into
cld
iret
and
mov
xchg
je
sbb
jnp
ror
adc
or
xchg
jns
movs
sti
hlt
rol
fstp
sub
rcr
cmc
imul
jae
cmp
cmp
in
sahf
jae
in
sub
cmp
mov
mov
push
in
mov
sub
inc
inc
mov
xor
pop
mov
xor
int3
xchg
mov
mov
and
pusha
cmp
adc
mov
(bad)
ins
jae
ja
ds
jp
sbb
iret
sbb
mov
mov
or
dec
add
mov
push
cmp
and
leave
sub
and
in
jae
ja
inc
imul
sbb
imul
not
mov
jg
aaa
pop
sti
xor
scas
inc
enter
cmp
mov
js
outs
mov
push
push
(bad)
mov
xchg
inc
or
cmp
mov
sub
imul
mov
outs
retf
jae
jg
imul
jmp
mov
jns
mov
pop
xor
(bad)
imul
repz
mov
adc
shl
dec
xor
aaa
sbb
pop
ins
and
(bad)
cmps
movs
shl
fcmovne
cmp
pop
push
xor
shl
inc
mov
hlt
xor
retf
(bad)
sahf
iret
push
cmps
outs
jae
inc
cmp
inc
mov
mov
lahf
mov
xchg
push
sub
jl
jnp
push
iret
pop
jb
pop
or
and
iret
sub
push
jns
jae
push
and
xor
xor
jae
ins
mov
jg
movs
jle
int
xchg
mov
cdq
rcl
jl
fmul
icebp
inc
adc
out
mov
jp
shl
test
xchg
add
dec
inc
xchg
sahf
dec
jecxz
mov
xor
repnz
adc
fwait
mov
dec
adc
(bad)
mov
pop
clc
xor
stc
dec
dec
jmp
inc
into
aaa
(bad)
in
popa
outs
jo
xchg
dec
sbb
out
stc
mov
pop
mov
mov
bound
xchg
inc
adc
inc
inc
push
xor
inc
xchg
outs
mov
cwde
cdq
push
xchg
out
pop
xchg
push
or
mov
jns
xor
jnp
std
jnp
xor
pusha
aam
cmp
mov
scas
or
jl
jae
in
push
rol
test
dec
sbb
or
inc
push
cdq
jnp
add
leave
sbb
outs
(bad)
mov
sbb
jp
ror
xor
jg
out
int3
test
sbb
pop
adc
rcl
mov
mov
(bad)
adc
and
or
sar
mov
mov
repnz
(bad)
retf
cmps
add
cmp
sub
stos
addr16
mov
stos
retf
inc
sub
clc
mov
sti
lods
push
es
test
stos
jl
pop
int3
jmp
call
push
sbb
jmp
pop
sub
clc
push
mov
mov
repz
ror
sbb
pop
or
retf
movs
pusha
outs
leave
cmps
sbb
sbb
sbb
push
xchg
repnz
mov
aad
jae
loopne
inc
cmp
cmp
pop
loop
pop
stc
retf
jns
sahf
and
cs
leave
repz
scas
loope
(bad)
jmp
repz
addr16
and
push
push
repnz
out
inc
pop
mov
inc
retf
jbe
call
iret
sub
jmp
mov
mov
jbe
inc
ror
mov
cmps
cmp
dec
sar
xlat
sbb
aaa
cmc
or
aam
dec
cmp
and
dec
inc
adc
xor
mov
test
stc
xchg
push
mov
fld
leave
jbe
adc
fcmovb
je
pop
adc
jb
mov
xor
scas
test
adc
push
loopne
mov
xchg
cwde
cmc
sbb
scas
sbb
inc
mov
adc
mov
jnp
mov
jae
and
stos
mov
dec
xchg
pop
ins
fstp
rol
adc
mov
sbb
test
inc
aam
xor
outs
push
or
repnz
sub
cmps
arpl
sbb
pop
or
mov
inc
jb
cli
mov
pop
nop
add
lods
push
shl
xor
fstp
adc
pop
mov
xchg
or
cmp
in
adc
repnz
jno
add
jg
das
arpl
mov
repz
ins
push
shr
mov
mov
mov
push
stos
and
mov
std
(bad)
lock
xor
add
push
pushf
pop
aam
jae
rol
jae
imul
sbb
sub
jae
hlt
xlat
mov
cmp
lock
std
ret
push
pop
sub
adc
daa
aaa
sbb
imul
xchg
jmp
mov
xor
outs
into
nop
dec
rol
inc
fbstp
(bad)
retf
jecxz
adc
in
xchg
and
stos
mov
daa
mov
xor
inc
inc
inc
inc
xchg
cmp
lock
jno
add
or
adc
aaa
aas
push
xor
sub
retf
(bad)
cmp
inc
cdq
push
vp4dpwssds
ret
push
mov
cdq
sub
fnstenv
jecxz
loop
mov
hlt
loopne
inc
jg
fs
push
sbb
or
dec
inc
test
xor
xchg
pop
inc
adc
lahf
push
clc
loop
or
fbld
xor
jno
sbb
rep
xchg
mov
sbb
adc
arpl
mov
sahf
scas
push
adc
and
mov
stos
mov
int3
aam
mov
push
sub
fisub
sub
nop
loop
push
shr
loope
mov
sbb
iret
pop
retf
inc
mov
out
mov
or
je
jg
std
adc
leave
xor
inc
arpl
jmp
xor
ss
mul
or
mov
mov
movs
fdiv
retf
and
ror
and
mov
cmp
pop
fidivr
mov
loopne
dec
mov
jmp
adc
sub
mov
jg
shr
and
jno
jbe
test
sbb
adc
jae
mov
int3
add
test
call
loop
stc
mov
jns
fdiv
jmp
xchg
pop
sahf
push
xchg
iret
arpl
add
les
push
jne
xchg
ret
ds
mov
popf
stc
xchg
adc
lods
test
push
stos
jmp
dec
shl
imul
cmp
push
add
ds
(bad)
test
inc
scas
cli
lahf
repz
shl
push
pop
je
mov
and
adc
es
jae
jns
and
fsub
sbb
push
xchg
(bad)
dec
cmc
jmp
jae
(bad)
jmp
pop
inc
pop
lods
inc
repnz
jmp
ins
cld
pop
or
repnz
mov
pop
dec
shl
in
loop
mov
hlt
cs
(bad)
push
in
lods
adc
in
jp
jmp
jle
mov
addr16
enter
aaa
xor
jge
in
pop
bound
stos
push
mov
push
(bad)
push
mov
inc
int3
pop
arpl
push
add
into
or
adc
add
push
pop
mov
cwde
mov
mov
ficomp
fs
lods
cmp
xlat
stos
add
ret
push
fst
push
mov
mov
and
mov
cdq
cmp
and
popa
push
lds
xor
sub
inc
sbb
mov
popa
push
xchg
pop
pusha
mov
cmps
fwait
sbb
(bad)
dec
or
inc
ins
and
pop
jb
inc
aam
in
cmp
dec
lods
xor
out
sbb
or
stos
retf
je
idiv
mov
cs
sbb
pop
movs
jo
stc
addr16
jno
sbb
jg
test
int
inc
fdiv
push
jb
out
pop
cmp
enter
sahf
movs
and
jp
aad
out
push
inc
and
jae
fidiv
fst
jmp
add
xchg
jg
in
sbb
mov
pop
sbb
jnp
or
imul
jae
(bad)
enter
mov
and
shl
jae
test
addr16
sahf
pop
out
mov
sbb
stos
xor
mov
dec
popf
sbb
dec
stos
adc
daa
cmps
mov
clc
fimul
orps
arpl
add
loop
mov
pop
adc
test
push
sbb
out
std
ins
pushf
mov
xor
sub
inc
xchg
(bad)
and
cmp
jae
mov
xor
mov
rcr
test
add
mov
cmc
cdq
jbe
lock
adc
adc
scas
mov
push
sti
sbb
jne
pop
mov
mov
fwait
xor
pop
adc
sub
aam
mov
imul
xor
fucomi
ficomp
inc
and
sub
push
(bad)
arpl
dec
inc
js
pop
mov
pusha
iret
cwde
daa
out
mov
cmp
sbb
or
pushf
dec
xor
mov
pop
loope
sbb
mov
ja
push
jl
shl
test
push
fadd
mov
jns
mov
jae
adc
sub
push
mov
xchg
sbb
aad
mov
inc
jb
test
xor
rol
fcmovnbe
fistp
int3
mov
rol
aas
inc
pop
out
fimul
das
inc
cmp
and
out
add
int
cmp
out
or
pop
mov
jns
aas
pop
aam
sub
pop
xchg
es
hlt
cmps
stc
sbb
or
xor
mov
cld
imul
xchg
xchg
lods
sbb
and
push
je
popf
ficom
aam
call
ja
mov
sub
cmp
hlt
jb
mov
jo
mov
sar
dec
out
inc
test
inc
outs
mov
fbld
dec
sar
fs
sbb
sub
jbe
imul
mov
bound
stos
jnp
cmps
fwait
mov
ret
in
jp
hlt
mov
push
jle
jge
aaa
in
inc
cs
inc
jno
mov
push
fidivr
jae
bound
push
adc
aas
call
adc
xor
sbb
jge
lahf
push
pop
dec
adc
jae
add
cld
sbb
stc
call
je
push
mov
push
jecxz
xchg
push
xor
fdivrp
les
pop
xchg
mov
xor
and
sbb
dec
lea
enter
pop
jae
ins
lock
push
jmp
stos
test
out
jno
xchg
cld
movs
xor
int
xor
xchg
xchg
and
dec
add
mov
adc
ins
outs
push
gs
cld
std
nop
jle
sub
xor
lock
fistp
ins
js
mov
lea
nop
push
jb
and
sbb
shl
lock
test
daa
adc
sub
leave
adc
bound
pop
xor
cmp
mov
pop
mov
sbb
cmp
xchg
mov
js
dec
pop
xchg
push
mov
(bad)
push
xor
shr
mov
mov
test
scas
(bad)
xchg
xchg
push
sub
jle
push
loop
mov
ror
neg
xor
dec
jl
xor
sbb
xor
mov
call
xchg
xchg
or
stos
out
cmps
pop
movs
outs
inc
pop
test
fld
rep
cmp
popa
ror
push
sbb
sub
loopne
jae
int3
mov
mov
jmp
mov
lds
push
mov
out
out
call
out
fst
mov
cmc
loopne
xchg
in
xor
push
jmp
xor
jnp
and
inc
pop
cmps
scas
je
mov
mov
jle
pop
xor
cmp
pop
push
push
add
stos
jb
aam
jbe
xchg
fdivr
loopne
mov
adc
fild
adc
je
out
(bad)
and
fsub
and
jmp
dec
mov
movs
dec
outs
in
dec
inc
mov
repz
jmp
(bad)
cmps
leave
xchg
mov
sbb
pop
add
or
pop
std
mov
dec
adc
movs
call
aad
lea
xchg
dec
mov
dec
inc
xchg
mov
scas
es
mov
sub
out
mov
mov
out
inc
je
mov
push
(bad)
jae
in
or
or
jecxz
aaa
shr
lds
rcr
adc
loopne
data16
jg
lahf
adc
aam
push
dec
ds
or
or
mov
push
std
mov
js
inc
xor
popa
mov
movs
mov
(bad)
or
jne
hlt
shl
sbb
loope
xor
movs
jb
xchg
jecxz
dec
push
jmp
out
popf
mov
or
pop
cdq
mov
dec
push
xchg
cli
adc
hlt
jae
pusha
aas
xchg
sbb
inc
ror
aas
jno
adc
or
mov
add
push
fsubr
dec
imul
dec
pop
adc
mov
iret
in
mov
pop
hlt
sub
jae
push
mov
mov
mov
(bad)
imul
hlt
jae
dec
xor
shl
iret
push
lock
pop
pop
ret
test
int
jmp
cli
cmp
aas
gs
jmp
adc
cs
into
popf
mov
jo
xchg
jecxz
leave
push
xchg
xchg
mov
dec
xor
mov
pop
mov
iret
test
add
rcr
or
cmp
out
push
jmp
call
push
or
push
jmp
add
jecxz
or
mov
push
sti
clc
push
pushf
xchg
fdivr
in
clc
fisubr
xchg
je
adc
cmps
jae
sbb
push
fstp
dec
aas
fsubr
sub
jp
jmp
(bad)
icebp
sbb
(bad)
xor
dec
xor
iret
in
inc
sahf
call
xchg
mov
test
push
fisub
cli
cmps
jb
pop
inc
ffree
ret
fucom
out
outs
aam
jle
sbb
mov
pop
imul
mov
imul
mov
neg
push
gs
jno
mov
xchg
pop
sub
xor
fs
xlat
sbb
add
daa
jbe
dec
xchg
or
popf
and
sbb
and
jmp
mov
adc
cwde
jg
and
in
daa
call
jae
mov
and
sbb
lods
js
mov
rcr
cmp
in
xlat
mov
fldcw
sbb
xor
dec
cmps
fld
dec
dec
sbb
add
jne
mov
ret
loop
xor
xlat
not
ret
retf
xchg
xor
jo
mov
scas
dec
push
cmps
cdq
dec
imul
jae
inc
stos
mov
sbb
gs
mov
repz
or
xlat
ins
test
fisub
jns
sbb
scas
push
sbb
imul
push
leave
jg
in
cli
or
sbb
test
(bad)
ficomp
cmp
and
xchg
mov
pop
(bad)
sti
push
xchg
test
das
push
cs
adc
les
or
jge
sub
xchg
push
(bad)
sbb
adc
(bad)
or
in
adc
dec
scas
clc
sbb
pop
push
fldenv
push
mov
mov
mov
sub
jns
ja
retf
in
mov
and
inc
mov
cld
jns
dec
sbb
sbb
mov
push
and
scas
loop
mov
sbb
and
lds
clc
push
jbe
jae
loopne
ficomp
lods
push
pop
push
pop
pop
mov
loop
es
(bad)
test
sahf
cmps
mov
dec
add
mov
mov
jge
jmp
xchg
xor
mov
sbb
pop
and
call
mov
aad
jecxz
je
in
sub
pop
push
cwde
call
ret
data16
push
xor
test
outs
mov
jae
sub
imul
dec
daa
sbb
imul
push
ret
inc
dec
enter
in
fdiv
sbb
pusha
dec
sti
into
mov
jae
or
xor
mov
inc
popf
in
loopne
dec
pop
call
loope
fild
mov
mov
sub
rcr
jae
dec
jecxz
fsin
fisub
pop
jge
stos
jle
mov
movs
pop
sub
mov
push
mov
lea
nop
cmp
fwait
adc
push
ror
mov
ja
xchg
test
mov
xor
dec
or
out
div
es
sub
sub
jp
das
pushf
in
xor
inc
cmp
mov
xor
jne
xor
ret
rol
xchg
dec
or
pop
in
fst
sbb
inc
fstp
outs
mov
(bad)
(bad)
dec
cmp
xor
jg
cs
pop
sar
les
mov
aam
and
movs
mov
mov
leave
mov
sti
inc
xchg
cmp
icebp
ret
je
into
call
cwde
popf
adc
and
lods
xor
call
mov
pop
mov
jge
dec
in
cmp
scas
or
xor
mov
shl
push
les
mov
xchg
ficomp
and
jae
push
sub
addr16
add
xor
cmps
jae
xor
test
xchg
in
jae
stos
lds
loopne
mov
addr16
into
xchg
shl
dec
sub
cmp
jl
mov
dec
xchg
xor
jae
xchg
mov
mov
and
std
mov
out
sbb
mov
aaa
or
mov
in
aam
dec
repz
cwde
ds
js
inc
mov
fild
lahf
adc
movs
sbb
aas
jnp
xor
mov
shr
fcom
mov
out
enter
sbb
push
cli
scas
hlt
inc
test
fimul
cmp
repz
shr
sbb
push
outs
and
cld
movs
pop
nop
out
sub
or
mov
and
and
or
fldenv
inc
mov
cmc
or
repz
out
add
mov
jnp
and
jmp
enter
ret
mov
loope
inc
or
inc
push
sahf
rcl
push
mov
pop
test
retf
or
shl
jae
and
push
xchg
fcmovbe
imul
and
leave
jno
cmps
cmp
sti
xor
shl
mov
popf
jae
rcr
and
push
std
lods
xchg
mov
jmp
and
hlt
xor
jg
rol
lea
aaa
lods
leave
jp
xchg
pop
lods
xor
pushf
arpl
test
(bad)
cmc
cmp
mov
bnd
cmp
inc
cdq
inc
dec
fstp
mov
jl
inc
xchg
adc
shl
xor
dec
mov
adc
mov
xor
adc
cld
je
pop
movs
inc
ins
jp
jl
push
sbb
fst
cwde
int
mov
cmps
sub
idiv
dec
mov
fiadd
mov
int3
in
test
aaa
mov
mov
cmps
ss
cli
jnp
jne
outs
cld
mov
in
sbb
mov
ret
jae
jle
fld
in
push
aam
and
adc
inc
inc
nop
mov
push
sub
jp
and
push
stc
jne
stos
jno
and
(bad)
(bad)
lds
out
jb
jmp
jmp
push
jae
push
enter
push
and
push
test
inc
xchg
aaa
repnz
add
test
mov
dec
jmp
popa
sahf
es
stc
repnz
jno
pop
adc
adc
push
jns
stos
pop
retf
jns
mov
imul
inc
jnp
rcl
xchg
mov
outs
mov
adc
je
and
shl
in
dec
inc
stos
scas
fnstsw
dec
lea
out
ficom
ins
or
cmp
adc
shl
xor
popa
inc
push
mov
or
(bad)
fcmove
or
mov
xchg
popa
js
sub
pop
inc
stos
mov
test
push
test
inc
mov
or
pop
or
inc
ins
adc
adc
mov
inc
sbb
int
adc
sbb
(bad)
out
in
movs
in
jmp
mov
xchg
push
dec
fs
mov
stos
dec
sbb
jmp
pop
test
add
cmp
out
or
mov
dec
inc
xchg
xchg
mov
sub
jecxz
mov
out
enter
sub
cmp
shr
mov
repnz
cmp
enter
dec
adc
stos
xor
aaa
mov
popa
dec
push
xchg
shl
sbb
adc
adc
sti
inc
movs
retf
ins
dec
icebp
dec
jmp
cld
stos
cmps
mov
xor
cmp
add
mov
sbb
jl
dec
ret
aad
ret
jb
(bad)
es
in
jmp
ret
cmp
inc
imul
inc
xchg
cmp
sub
cmp
pop
cdq
lea
cmc
cmp
jae
inc
jg
call
jae
(bad)
mov
pop
and
dec
clc
fst
jno
xchg
mov
mov
pop
aam
mov
mov
push
pushf
cld
adc
aad
xchg
push
out
stc
push
cmc
xor
adc
mov
(bad)
sbb
adc
clc
mov
mov
xchg
push
cmps
jmp
pop
jge
nop
pusha
cmp
jmp
jo
addr16
dec
push
push
xchg
sub
and
shl
jp
(bad)
jg
fmul
cdq
push
lds
push
jo
out
jb
and
or
jg
cmp
inc
xchg
add
mov
cmps
cdq
stc
xchg
stc
(bad)
pcmpgtb
push
inc
fbstp
pushf
fs
sbb
jmp
inc
jg
mov
je
out
pop
sbb
jp
xchg
(bad)
cmp
add
adc
sub
scas
ret
dec
jmp
jne
out
and
inc
rcl
and
xchg
pop
in
inc
push
jo
(bad)
or
inc
add
fadd
mov
scas
mov
adc
xlat
adc
fstp
repnz
aaa
xlat
sbb
pop
and
sub
lea
aas
cmps
jae
test
int3
sbb
mov
sbb
mov
jo
jae
dec
test
xor
adc
or
xchg
xchg
pop
xchg
sbb
cmps
or
bound
(bad)
pop
cmp
inc
mov
xchg
cld
xchg
cmps
fucom
int
int3
mov
test
and
stos
lods
jne
(bad)
pop
pop
sbb
and
dec
jae
aad
adc
cli
lock
dec
and
jecxz
rcl
icebp
lahf
(bad)
mov
inc
mov
outs
xchg
mov
pushf
pop
shr
ret
mov
les
pop
adc
cmp
mov
call
mov
call
mov
sub
inc
jp
imul
int
mov
sub
dec
jne
mov
movs
push
mov
mov
ror
cmp
cmp
push
and
test
xchg
cmps
push
into
int
call
push
xchg
dec
adc
int3
out
lock
imul
lods
test
test
mov
je
in
cmp
(bad)
xor
xchg
stos
xchg
sbb
popf
or
cmp
ins
xchg
or
xor
cmps
xchg
inc
retf
cli
imul
(bad)
mov
jns
xchg
mov
cmp
ins
mov
dec
enter
sbb
test
repz
jno
sub
stc
sub
call
or
or
jl
ror
xor
inc
xchg
dec
xor
pop
push
movd
or
add
add
push
loopne
hlt
jb
add
push
jg
fbstp
cmc
das
dec
adc
xor
test
adc
shl
movs
cmp
push
retf
xor
jmp
stos
das
inc
inc
adc
jno
ins
cld
daa
aaa
pushf
dec
sbb
fiadd
mov
pop
lock
add
mov
arpl
inc
add
mov
adc
sti
mov
int
mov
js
jo
xor
inc
pop
pop
adc
iret
push
and
and
sbb
(bad)
jle
dec
mov
xor
or
sbb
ja
mov
fwait
or
push
push
(bad)
sahf
sbb
or
mov
add
pop
stos
mov
test
mov
push
int
pop
xchg
mov
xor
jmp
in
in
push
js
repz
into
mov
fstp
mov
(bad)
dec
or
dec
inc
dec
stos
pop
xor
mov
and
int
popf
jge
add
push
das
mov
xchg
jp
push
sub
xor
pop
jo
push
(bad)
mov
push
pop
aaa
out
xchg
mov
call
jo
pop
mov
retf
cld
fcom
mov
sbb
and
in
jp
(bad)
and
cmp
xchg
push
inc
std
lds
jae
xchg
xchg
fstp
out
dec
push
and
in
inc
pop
out
add
and
inc
shr
cmp
leave
mov
ds
js
jns
stos
mov
and
sbb
call
jne
into
xor
xchg
fs
jge
test
fist
clc
xor
xor
(bad)
xlat
call
and
xchg
mov
mov
sbb
sub
xchg
pop
enter
mov
cmp
jae
mov
ins
pop
pusha
jmp
sbb
imul
test
stos
fmul
cld
mov
int3
ffreep
daa
xchg
inc
cmp
in
out
int3
jmp
xor
call
dec
hlt
pop
push
retf
pushf
mov
scas
sar
cmp
jmp
rcr
shl
out
movs
xchg
pop
mov
out
repz
mov
and
or
(bad)
imul
ret
sbb
shl
mov
adc
arpl
mov
xchg
int3
jmp
mov
int3
jae
fst
into
rcl
push
call
sbb
adc
jge
cmp
mov
mov
sbb
dec
fdiv
and
jo
dec
xchg
(bad)
cmc
hlt
mov
sbb
jecxz
sbb
inc
mov
(bad)
pusha
jecxz
cmc
push
(bad)
adc
inc
rcl
xor
dec
push
mov
arpl
push
sbb
push
mov
xor
(bad)
jne
cmp
adc
aad
add
xchg
push
sbb
mov
adc
and
fsub
and
mov
ror
mov
in
mov
and
in
mov
push
ss
jle
ret
movs
mov
xchg
mov
xchg
pop
xchg
enter
fwait
aaa
push
lods
mov
shr
dec
fxch
push
dec
imul
shl
loop
pop
or
sub
and
pop
(bad)
retf
je
lods
jmp
xlat
scas
js
lea
call
add
(bad)
retf
out
sbb
adc
pop
sbb
je
rcl
adc
(bad)
and
dec
lock
xor
retf
mov
push
call
sbb
inc
xchg
mov
pop
mov
in
mov
ds
push
repz
test
enter
xor
out
mov
mov
pushf
cdq
popf
lods
sbb
xchg
fdivr
ins
pop
lock
cmps
retf
fcom
test
cmp
push
test
daa
popf
sbb
xlat
sbb
add
jecxz
xlat
mov
pop
add
repnz
retf
add
aaa
xchg
fnsave
pop
jmp
out
aaa
les
mov
mov
adc
sbb
mov
inc
out
xchg
xchg
in
mov
and
mov
dec
in
xchg
stos
call
stc
cmp
xor
ret
lods
adc
and
ret
es
ror
or
ss
lea
or
inc
xchg
nop
jb
arpl
mov
mov
rcl
jecxz
aas
popa
popf
call
aam
inc
popf
mov
pop
cmp
addr16
adc
push
mov
pop
push
bound
push
jo
inc
es
jp
out
and
push
pop
scas
(bad)
stos
loopne
jae
cmp
cmp
adc
and
mov
mov
xchg
imul
sbb
rcl
mov
sbb
mov
sbb
and
adc
inc
cmp
mov
xchg
adc
ss
jae
test
sti
sub
out
sti
cmp
fiadd
je
push
mov
div
pop
out
imul
xchg
sbb
les
out
sub
xchg
icebp
frstor
call
cli
xchg
xor
into
inc
test
push
(bad)
mov
pop
adc
aad
adc
es
cmp
ins
xor
cmc
enter
test
retf
or
and
jbe
aam
mov
fcmovnu
mov
out
cld
dec
cmp
call
cmp
push
xchg
mov
jae
mov
icebp
mov
jmp
xor
(bad)
and
push
outs
(bad)
jg
push
pop
loope
xchg
mov
ss
imul
test
popf
jp
mov
pop
mov
fidiv
push
xchg
mov
jno
lahf
cmp
test
das
fdiv
jle
jns
pusha
add
inc
jl
sbb
sbb
mov
or
lods
dec
cdq
xor
mov
rcl
mov
mov
cld
clc
jnp
adc
push
mov
aad
fcomp
or
pusha
cmp
sub
push
mov
outs
xchg
loope
mov
push
loopne
int
and
test
mov
inc
and
mov
jbe
xor
xor
bound
dec
xchg
or
neg
ins
mov
nop
addr16
pusha
mov
mov
fucomi
add
sbb
inc
mov
xor
dec
test
cmp
cmps
loopne
mov
jb
cdq
jp
xor
rol
enter
dec
mov
je
xor
mov
aas
cmp
xchg
cli
popf
(bad)
scas
mov
lods
jb
icebp
sbb
stos
rol
ja
mov
jmp
jae
dec
xor
scas
xchg
push
cmp
scas
je
ret
loope
xor
mov
jge
in
mov
stc
mov
repz
push
adc
fcomp
enter
mov
in
xchg
pop
pop
(bad)
loopne
retf
xor
xchg
(bad)
mov
call
xchg
sti
sbb
mov
mov
je
cmps
xchg
mov
sub
repz
ret
sub
cmp
dec
or
mov
ins
xor
add
int
and
mov
add
shl
jmp
sbb
cli
adc
call
lods
jae
mov
shl
(bad)
sbb
stc
push
ret
jp
in
jae
or
mov
mov
outs
jbe
jae
outs
pop
add
jb
sbb
call
inc
aam
stos
mov
loope
adc
sub
sub
mov
add
pop
shr
jae
lds
mov
movs
in
test
jns
pushf
xlat
cld
cmp
or
add
jae
xchg
and
inc
call
sbb
pop
iret
xchg
jae
inc
les
arpl
(bad)
push
stos
(bad)
ror
test
jo
test
mov
sub
imul
aaa
xchg
sar
add
xor
or
sbb
fucom
imul
sbb
xchg
iret
xor
adc
ror
dec
inc
push
xor
test
cmp
sub
sbb
xchg
or
cdq
jne
cld
pop
les
fisubr
lea
bnd
mov
inc
mov
xor
cdq
add
xchg
or
push
push
add
and
jno
xor
push
sbb
je
mov
jmp
jle
jne
bnd
popf
retf
call
cmps
adc
push
xchg
or
fimul
jb
xor
adc
cli
pop
out
lea
cmc
xchg
push
stos
retf
mov
loop
dec
inc
cld
dec
xor
sbb
test
rcr
mov
push
pop
and
push
cli
inc
pop
dec
xchg
mov
movs
pop
inc
repnz
call
mov
leave
xchg
inc
clc
lds
out
push
rcr
pop
push
sbb
iret
sbb
jecxz
pop
and
mov
aaa
xor
ja
rcl
adc
into
cmp
add
or
imul
rcr
jbe
repnz
pop
pop
cld
pop
adc
and
jo
jbe
mov
ja
sar
cmp
mov
mov
jo
sahf
ret
jg
xor
call
push
int
mov
and
cmp
dec
(bad)
sub
cmp
lock
mov
mov
in
xchg
jecxz
fbld
stos
inc
mov
mov
test
out
gs
jne
adc
adc
das
or
jbe
nop
xchg
adc
sahf
adc
outs
in
mov
out
int3
pop
pop
aad
jb
lds
dec
enter
outs
arpl
(bad)
mov
pop
jae
mov
push
cmp
sub
dec
mov
jg
mov
add
cmp
xchg
aam
mov
lods
jbe
add
add
repnz
rcl
imul
mov
shr
stos
cmp
cmc
in
mov
xchg
dec
ins
sahf
and
sub
in
pop
popf
aad
popf
jns
adc
add
add
arpl
mov
xchg
or
xor
push
cli
not
add
mov
adc
stos
inc
and
inc
pop
ja
jmp
or
jo
idiv
sbb
movs
jb
out
lods
push
(bad)
pusha
in
retf
je
mov
push
and
mov
test
mov
pop
cwde
xor
mov
cmp
ds
sbb
fiadd
ja
jge
out
sar
sub
mov
push
fnsave
mov
jg
dec
or
or
dec
jae
imul
jb
repnz
repz
in
mov
ret
mov
in
lea
cmps
jg
mov
jno
fnstcw
pop
test
lahf
(bad)
mov
push
xchg
retf
shl
cmp
add
xor
mov
dec
movs
(bad)
cld
scas
inc
pop
std
adc
cmp
xor
cmp
add
jmp
loope
das
adc
dec
test
pop
adc
push
push
inc
and
call
repz
dec
dec
out
jno
pop
dec
dec
mov
cmp
shl
push
lahf
popf
int
push
pop
dec
dec
ds
lahf
push
pop
mov
mov
inc
das
pop
add
adc
push
lods
pop
gs
retf
sbb
mov
jne
or
pop
sub
push
pop
mov
in
mov
adc
(bad)
shl
lea
dec
mov
jp
adc
inc
iret
jmp
test
fcomp
mov
icebp
push
push
outs
scas
adc
mov
movs
jbe
jno
mov
mov
add
sbb
pop
jp
ficomp
test
ret
call
xor
and
test
mov
mov
jbe
lock
dec
fwait
aas
dec
arpl
fcom
jno
cli
xchg
mov
and
cmp
lds
repz
mov
jl
rol
imul
dec
xor
dec
jl
mov
ss
xor
jge
popf
sub
dec
pop
or
mov
js
out
cmp
imul
scas
stos
sub
scas
mov
add
test
jne
push
xchg
or
mov
sub
pop
fcmovnu
sti
add
popa
jb
jb
and
mov
pusha
cld
mov
fbstp
xchg
xor
mov
push
repz
jne
xchg
mov
jbe
fdiv
push
or
add
jae
std
xchg
cli
retf
int
cs
sub
mov
add
clc
sbb
sbb
mov
mov
pop
mov
adc
sar
test
scas
dec
jmp
adc
add
mov
jge
pop
stc
cmp
out
sub
mov
addr16
rol
inc
in
or
cmp
xor
sub
loopne
mov
xchg
and
mov
mov
jo
mov
sub
jns
loope
jmp
stos
hlt
add
movs
inc
in
aam
or
cmc
mov
mov
jno
xchg
cs
xor
pop
adc
inc
(bad)
(bad)
cmp
pop
jns
xchg
fs
add
dec
jno
mov
push
test
mov
and
sti
adc
in
xor
inc
mov
and
adc
mov
jle
inc
in
cmp
sbb
xchg
mov
and
je
aad
jl
pop
xchg
sub
xchg
adc
inc
sbb
cmp
into
push
fstp
mov
and
push
cli
push
jne
out
test
ror
mov
pop
fcmovbe
add
mov
mov
push
nop
and
movhps
dec
mov
out
aaa
xchg
jne
(bad)
add
cmp
loop
mov
cdq
rol
jno
and
or
arpl
jns
mov
xchg
cmc
retf
inc
or
lods
jae
test
push
sbb
aad
xor
icebp
xchg
aad
mov
or
or
in
or
mov
nop
sbb
mov
out
sbb
push
dec
out
xchg
arpl
movs
stos
pop
adc
or
pop
jo
arpl
mov
test
or
popf
jae
cmp
inc
inc
out
fs
sbb
inc
cmp
and
stc
xchg
ret
or
jge
test
jmp
pushf
push
(bad)
gs
mov
sar
(bad)
mov
mov
stos
inc
jnp
push
mov
xchg
dec
mov
lods
sub
sar
idiv
mov
mov
inc
push
retf
sub
outs
xor
shr
sbb
xor
aad
retf
mov
add
pop
sar
mov
sbb
je
cld
push
cmps
sbb
inc
inc
cmps
test
jae
idiv
xlat
sub
and
xlat
mov
pop
xchg
stc
int
imul
inc
sbb
add
fsub
mov
(bad)
into
inc
rcl
mov
lahf
mov
sbb
jb
aaa
inc
mov
mov
mov
aas
out
cmc
lods
push
fwait
cmp
dec
jae
pop
inc
pop
gs
push
xor
ds
xor
mov
fadd
aad
push
test
xchg
xchg
sbb
jl
loope
dec
addr16
mov
movs
movs
lods
push
ffree
mov
add
ins
je
mov
loope
pop
into
push
inc
mov
jmp
mov
fadd
or
lods
push
inc
jno
cmp
or
popf
pop
ss
jne
pop
lods
add
jno
cmp
sub
outs
gs
jae
mov
adc
cmp
add
dec
loopne
aad
adc
or
mov
xor
test
cmp
add
inc
jns
cmp
outs
sbb
inc
sub
test
cmp
lods
(bad)
fcmovnbe
sub
fidiv
adc
xchg
push
sub
sbb
push
and
xchg
or
cmp
add
stos
out
and
mov
rcl
inc
mov
repnz
(bad)
sti
mov
ja
push
(bad)
xchg
(bad)
jae
and
outs
xchg
push
sbb
jns
bound
scas
pusha
dec
les
jmp
sub
pop
jmp
add
inc
aad
int3
adc
dec
ins
jae
xchg
stc
jmp
stos
adc
pop
xor
jo
mov
cmc
dec
pop
aas
rep
aaa
xchg
push
dec
jge
idiv
aam
xor
(bad)
jae
les
push
mov
mov
into
repz
sub
push
test
pop
jnp
and
jnp
pop
jae
mov
ret
adc
pushf
lahf
jp
mov
test
in
sub
mov
mov
mov
mov
and
adc
sub
data16
and
or
cmc
dec
stos
mov
inc
xor
xchg
and
shl
js
jb
out
dec
dec
repnz
or
add
mov
xchg
hlt
or
enter
loopne
mov
adc
adc
inc
sbb
jp
xor
xchg
call
cmps
in
ins
xor
xor
je
cdq
mov
xor
mov
add
jbe
jne
mov
call
fwait
out
and
fdivr
adc
(bad)
fisubr
(bad)
xchg
jg
mov
jl
jo
or
mov
jl
imul
xchg
or
into
int3
sbb
push
dec
sbb
bound
xchg
inc
inc
dec
je
and
fcmove
sub
scas
mov
push
repnz
jae
push
jp
sbb
into
inc
mov
out
in
scas
mov
dec
xlat
sub
cmps
or
mov
loopne
ins
jp
fiadd
stc
gs
aaa
enter
push
xlat
adc
jl
adc
mov
sbb
mov
lahf
inc
mov
xor
(bad)
aad
jle
pop
sbb
cmps
xor
push
push
inc
xor
cmp
jl
sbb
pop
int3
sub
pusha
jae
test
push
adc
sub
jae
mov
cmc
imul
xor
adc
fwait
movs
icebp
sub
mov
out
xor
dec
stos
sbb
cmp
dec
pushf
sbb
into
out
pushf
cmp
mov
mov
mov
cmp
jae
mov
adc
lods
inc
icebp
cmp
cmp
adc
js
fwait
shl
jbe
and
mov
fcomp
fidiv
pop
pop
es
pusha
push
mov
test
sub
hlt
fs
mov
and
(bad)
dec
lods
lahf
push
sbb
sub
cmp
sbb
add
and
jmp
daa
inc
sbb
jbe
xchg
out
in
mov
push
fadd
pop
popa
(bad)
test
icebp
jge
sbb
dec
stc
inc
jle
popf
gs
add
xchg
push
inc
aam
mov
jb
jb
mov
out
cs
xor
jle
adc
ret
js
test
push
ins
jecxz
xchg
mov
out
mov
push
jns
addr16
loopne
dec
shr
jecxz
lock
mov
jne
cmp
not
or
or
js
mov
and
test
leave
(bad)
add
mov
sub
aam
not
and
adc
xor
or
arpl
repz
test
aam
cmp
ja
jno
cmps
xchg
je
jle
and
mov
mov
pusha
(bad)
rol
jae
dec
pop
sbb
aad
js
inc
loop
nop
retf
icebp
retf
out
dec
jg
fdiv
je
or
(bad)
mov
test
add
dec
dec
(bad)
fadd
inc
jae
cmp
retf
pop
mov
aaa
rep
shr
sbb
cmp
xchg
pusha
add
dec
xor
into
adc
hlt
sbb
cs
cmps
mov
ins
aad
fcom
mov
and
in
cmps
mov
or
adc
int3
adc
lock
jno
cli
cdq
cs
ins
call
or
push
cmp
sar
mov
xchg
jmp
jecxz
fidiv
jo
inc
mov
pop
sub
sbb
popa
sub
sbb
add
lds
sub
pusha
mov
push
test
dec
adc
xor
leave
xchg
push
jp
dec
add
fxch
jae
fs
mul
jg
dec
or
push
sub
xor
mov
ss
popa
(bad)
push
or
cld
and
cmps
xor
inc
xchg
cmp
jg
sub
mov
lea
inc
cmp
mov
cdq
push
adc
mov
es
xor
dec
mov
cs
aaa
push
pop
les
int3
into
adc
push
push
test
imul
shl
(bad)
movs
mov
or
mov
push
push
ja
mov
fstp
xchg
je
movs
loopne
scas
loop
je
aam
stos
dec
push
mov
jg
add
xchg
mov
cs
mov
adc
mov
aam
adc
jl
add
scas
inc
sbb
push
inc
dec
push
cmp
push
scas
dec
rcr
imul
sbb
in
jbe
mov
test
lods
mov
xor
sbb
xor
jmp
mov
daa
sub
dec
leave
sbb
pusha
outs
sbb
data16
sub
cdq
mov
xchg
call
cmps
in
in
sbb
sti
gs
sub
fimul
enter
xor
push
push
pop
mov
push
jge
push
xor
and
cdq
cmp
sti
dec
sbb
sub
int
out
hlt
test
mov
add
ins
outs
fwait
mov
xor
mov
sbb
sbb
push
into
adc
adc
call
cwde
and
retf
dec
xchg
jo
xor
jp
fidiv
push
mov
xchg
mov
outs
mov
cmp
clc
jae
(bad)
inc
cdq
cmp
je
fsub
rcr
add
loop
cmp
js
dec
push
cdq
fisub
mov
jle
pusha
sahf
aam
int3
cdq
jae
movs
call
sub
sbb
or
or
je
call
in
xchg
fidiv
pop
sbb
retf
xchg
fcom
push
ret
fwait
sbb
pushf
aad
fsubr
enter
loop
jae
adc
cdq
in
push
test
test
imul
add
xor
sbb
mov
adc
mov
sti
mov
xchg
pop
add
push
pop
xor
call
sahf
pop
mov
jo
jno
add
and
retf
dec
into
das
leave
add
(bad)
fistp
shl
fcomp
loop
dec
pop
or
data16
lods
std
(bad)
stos
xor
outs
mov
repz
xchg
inc
ja
or
and
push
scas
ss
mov
retf
push
mov
iret
int
fidiv
inc
dec
mov
mov
es
dec
push
jns
mov
scas
cs
les
jmp
sub
jle
xchg
xor
out
in
lahf
jae
shr
pop
inc
pop
out
ret
cdq
jl
hlt
cmps
xchg
jae
mov
cmp
inc
jle
sbb
andps
mov
imul
(bad)
xor
xor
cmp
call
jb
and
mov
mov
rcr
in
mov
xor
cmp
(bad)
xchg
cmp
shl
sbb
sub
jns
inc
(bad)
repz
add
jae
push
push
mov
sub
push
sbb
int
ja
les
xchg
cmc
jmp
and
jb
or
push
adc
scas
int3
cmp
jo
sub
cmps
scas
push
pop
ss
jb
or
icebp
nop
inc
sub
lea
mov
xchg
je
push
dec
pushf
in
movs
jnp
arpl
pop
add
add
aaa
sbb
add
pop
int
sub
cs
pop
xor
mov
fnstsw
mov
movs
dec
in
ins
lahf
xor
int3
mov
xchg
arpl
fnsave
hlt
push
mov
sub
shl
sub
mov
or
mov
call
ins
mov
dec
in
ja
cli
pushf
out
inc
inc
mov
add
cmc
jmp
repz
and
das
cmps
and
add
mov
xor
push
mov
inc
js
add
inc
(bad)
sbb
pop
scas
std
mov
jo
adc
lahf
movsx
cmp
fcmove
outs
cdq
xor
clc
jecxz
inc
push
shl
inc
sub
pop
imul
outs
int3
in
mov
iret
cmp
push
cld
mov
fs
sbb
jmp
inc
mov
dec
sub
and
xor
ins
mov
bnd
std
jle
xor
mov
xchg
sub
lds
xchg
mov
jns
sbb
out
test
repz
cmp
jmp
xor
nop
ds
cli
mov
repz
or
add
std
scas
cmps
jne
xchg
popa
loop
(bad)
push
dec
xchg
mov
hlt
xchg
mov
sar
push
out
retf
arpl
es
jg
push
ins
(bad)
pop
arpl
sbb
test
xchg
xor
ret
int3
in
(bad)
adc
icebp
mov
bound
iret
sahf
stos
sub
out
cmp
icebp
inc
mov
pop
push
leave
adc
mov
bnd
aam
aad
sub
adc
dec
enter
fstp
or
retf
push
jmp
mov
aas
or
mov
leave
sbb
and
mov
xor
jae
retf
push
xor
add
mov
outs
sub
js
and
enter
push
sbb
mov
jae
popa
pop
pop
mov
jmp
mov
mov
iret
adc
rcr
cmp
fdivr
cli
(bad)
and
jecxz
mov
jnp
xchg
ins
or
nop
cmc
mov
and
retf
and
xor
lea
aam
or
(bad)
jl
adc
mov
pop
sar
retf
jl
ret
aas
iret
bound
in
adc
(bad)
shl
or
pop
int
paddw
xor
pop
jmp
sub
out
lods
cli
xor
and
push
xor
add
push
loop
out
(bad)
retf
mov
cdq
xchg
mov
xlat
out
pop
aaa
cmc
jae
sbb
mov
aas
mov
sub
or
test
(bad)
xchg
jb
xor
dec
out
push
mov
and
mov
dec
ret
mov
inc
jno
xchg
fs
adc
int3
add
or
mov
lods
sub
jl
nop
cmps
mov
xchg
and
sbb
sti
mov
repnz
mov
das
add
rol
xchg
cld
(bad)
call
dec
jecxz
int
gs
rcr
add
aad
ins
loope
dec
xor
mov
pop
sbb
clc
daa
gs
inc
stos
scas
and
or
jae
push
sub
sbb
mov
int
jecxz
sbb
jg
jp
cmp
inc
stos
add
cld
adc
leave
pop
ds
fcmovnb
mov
mov
xadd
loope
xchg
mov
xor
add
stc
xor
adc
mov
sub
dec
daa
cmp
pop
adc
sub
adc
fild
mov
retf
dec
hlt
pop
mov
inc
mov
mov
out
add
mov
jge
out
pop
(bad)
idiv
leave
mov
movs
add
jae
shl
imul
mov
mov
xor
or
adc
ffreep
mov
xchg
sbb
icebp
retf
ja
(bad)
sar
xor
sub
and
jns
pop
das
jno
xchg
retf
sbb
mov
xor
mov
retf
xchg
int
test
jae
push
sub
sub
sbb
adc
dec
mov
cdq
lds
arpl
aam
xchg
xor
pop
sub
jne
mov
jbe
xchg
mov
sub
cmp
mov
call
sbb
pop
rcl
sbb
sbb
and
inc
push
mov
xor
inc
stos
mov
hlt
mov
es
add
or
jle
imul
call
mov
push
jns
mov
mov
push
retf
gs
and
cmc
in
mov
sbb
dec
xchg
out
xlat
outs
push
loopne
mov
sub
xchg
and
shl
retf
add
ror
push
gs
xlat
scas
sbb
outs
ss
sbb
bound
ins
frstor
mov
mov
and
daa
mov
je
rcr
jle
and
pusha
add
(bad)
push
movs
jae
jae
imul
sbb
mov
xchg
arpl
or
enter
scas
outs
out
and
mov
in
aaa
mov
das
jge
stos
je
jg
add
test
fwait
inc
mov
dec
ins
dec
retf
push
push
inc
imul
xlat
ret
loopne
inc
sub
fdiv
test
jg
rcl
or
mov
cmp
mov
jns
daa
das
add
add
mov
fisubr
adc
mov
xchg
xchg
aaa
pop
xor
and
xor
xchg
cmp
inc
dec
je
ret
pop
jnp
sbb
outs
test
add
inc
fsubr
mov
pop
retf
xor
mov
adc
aaa
rol
ret
push
inc
sub
jle
xchg
pop
sbb
aam
cmp
xchg
adc
and
jae
hlt
out
lods
scas
rcl
mov
lods
loopne
hlt
lods
imul
movs
test
js
(bad)
and
dec
and
inc
clc
mov
push
out
hlt
jae
aad
lods
out
mov
fiadd
imul
sub
icebp
xor
call
push
cmp
test
cmps
dec
jnp
movs
push
scas
loope
in
fwait
icebp
pusha
ficomp
jg
push
popf
cld
cld
or
in
jno
jno
xchg
or
jmp
inc
xor
dec
retf
cmp
enter
imul
mov
sbb
add
scas
mov
shr
int
jp
loope
ja
leave
mov
nop
add
gs
popa
push
into
out
(bad)
xor
jo
inc
and
int3
dec
jl
mov
test
call
pop
int3
daa
test
dec
jmp
fstp
add
add
mov
push
ja
adc
inc
jno
addr16
test
je
loopne
xor
or
jl
sub
imul
nop
mov
add
cmp
xor
jae
add
and
mov
sti
and
add
lahf
ss
sbb
sbb
arpl
ret
or
stos
outs
xchg
loop
(bad)
push
jp
pop
addr16
mov
xchg
mov
outs
ins
lods
xchg
imul
lahf
jae
ins
and
sbb
out
pop
xchg
aas
stc
jbe
dec
in
call
lds
mov
sti
cld
jle
ja
jge
jae
pushf
sbb
add
arpl
dec
jns
inc
sbb
adc
cwde
repz
pop
aad
ins
fwait
mov
loopne
lea
stos
add
dec
push
ins
mov
ins
mov
std
sbb
mov
jnp
sbb
lea
xchg
jl
iret
les
cdq
pop
sbb
stos
sbb
clc
in
mov
mov
and
lock
adc
scas
xlat
popa
sub
cmp
outs
cmp
daa
ins
mov
xor
fnstenv
test
push
(bad)
xchg
sbb
xchg
sti
push
int
int3
lds
mov
shr
lahf
jb
je
jp
popa
test
mov
jo
stc
pusha
jp
div
test
test
test
bound
jmp
mov
stos
retf
inc
or
out
repnz
mov
int3
xlat
pop
jl
mov
loopne
cmp
ficom
sub
movs
dec
sbb
push
xor
fisubr
mov
pop
pop
mov
pop
add
ins
mov
dec
jg
sub
push
cmc
xchg
loopne
aam
cmc
rcr
jae
dec
shl
push
dec
sbb
sbb
push
mov
and
mov
sbb
addr16
push
int
lea
mov
popa
xor
mov
xor
aas
or
mov
fwait
dec
retf
pxor
shr
pop
repnz
pop
mov
xlat
push
xchg
jo
lds
xchg
push
push
and
pop
mov
out
out
cmp
sbb
not
inc
xor
xor
inc
inc
sub
hlt
push
push
icebp
ffree
call
adc
mov
daa
aas
ss
xor
sbb
jecxz
int
sub
fs
jecxz
xor
pop
sbb
(bad)
fild
ret
jno
mov
jb
scas
push
icebp
mov
call
add
push
push
cmps
push
sbb
jle
jnp
mov
stos
cld
jb
sbb
push
into
stc
outs
pop
cld
mov
popa
pop
mov
cli
adc
dec
daa
push
and
mov
inc
(bad)
ss
sub
xchg
icebp
mov
mov
mov
xchg
lock
cmps
sbb
push
push
xor
dec
test
dec
repz
popf
mov
fwait
or
shl
cmp
or
sbb
cmp
jns
bound
jae
push
aad
mov
scas
mov
pop
aad
fstp
mov
mov
jbe
or
cmc
bound
sbb
jge
xchg
pop
int
pop
add
xchg
sub
xchg
js
leave
fnsave
cmc
cmp
mov
jno
pop
inc
scas
xor
mov
out
sti
rol
xchg
adc
jle
test
cmp
adc
inc
ins
test
das
xchg
dec
mov
or
xchg
neg
out
js
or
xchg
call
push
cli
sbb
int
add
xchg
sub
into
mov
int3
sbb
cmc
lds
sbb
mov
cdq
int
out
sbb
pop
inc
or
mov
call
js
add
sbb
popa
adc
jp
cmp
inc
test
pop
cmp
mov
adc
inc
mov
ja
or
lds
mov
jae
xchg
std
pop
cdq
cld
cli
dec
sbb
jnp
dec
mov
xor
mov
mov
popf
mov
sub
retf
leave
test
shl
popf
xor
aas
jae
dec
cmps
stos
bound
xor
xchg
shl
or
mov
and
loopne
jae
das
xchg
jns
out
arpl
aad
and
ja
push
sbb
nop
adc
scas
xor
test
cmp
xchg
mov
gs
leave
outs
pop
mov
jmp
push
test
push
iret
mov
loopne
mov
shl
cld
jae
cdq
lods
add
inc
inc
push
repz
push
loope
mov
xchg
inc
xor
jge
cmps
arpl
pop
add
add
or
push
ins
mov
push
push
les
imul
inc
in
dec
rol
mov
(bad)
cmp
or
fldcw
fdiv
fucomi
add
dec
ret
cs
retf
sbb
sbb
lea
xlat
or
(bad)
imul
adc
pop
xchg
test
pop
mov
pop
xchg
das
loopne
mov
ds
int3
adc
cdq
xlat
adc
adc
xchg
xor
xchg
sbb
sbb
scas
sbb
fcomi
cmp
dec
jb
nop
mov
aam
jge
mov
out
movs
mov
test
mov
mov
mov
cmp
ret
popf
or
sub
outs
jbe
int
out
cmp
pop
xor
(bad)
call
push
fs
sbb
jae
jnp
pop
leave
(bad)
das
pop
sbb
mov
mov
push
xchg
mov
sub
inc
(bad)
inc
cmp
pushf
adc
adc
cld
mov
idiv
sub
cmp
sbb
js
add
cmp
leave
xchg
cmps
cmp
mov
xchg
daa
shl
(bad)
xor
ins
pushf
and
ror
in
jns
div
xchg
mov
xchg
in
mov
jb
sub
es
(bad)
sbb
std
push
(bad)
div
sbb
jno
mov
jmp
sub
sub
pop
adc
mov
les
push
test
push
or
rcr
cmp
add
xor
sbb
in
out
inc
xor
sbb
jo
je
in
jle
xchg
test
xchg
div
jg
mov
push
push
aas
(bad)
aad
push
cdq
lock
dec
in
mov
pop
push
pop
sub
repz
cmp
pop
ins
je
test
out
clc
cmp
or
leave
dec
cmp
ret
idiv
(bad)
inc
test
mov
adc
out
and
sub
stos
in
cli
cmp
loopne
(bad)
fisttp
xchg
mov
rol
jmp
mov
addr16
mov
dec
pusha
xchg
jae
cmp
jmp
adc
push
or
mov
cdq
and
imul
xor
mov
lahf
pop
aas
jmp
or
adc
dec
and
sahf
mov
sbb
dec
pushf
mov
in
scas
in
jae
mov
in
push
and
adc
sbb
dec
ret
cmp
xor
xchg
repz
aaa
mov
pop
sub
in
and
imul
aad
call
jnp
mov
xchg
repz
aam
inc
adc
cmp
stc
xor
xchg
pop
mov
call
lods
jno
dec
mov
sbb
push
add
leave
loopne
xchg
sub
push
adc
loope
jae
(bad)
ss
xchg
xchg
ret
jnp
and
cmp
jae
in
pushf
mov
mov
or
mov
mov
push
loopne
test
pop
int
and
xor
sbb
rcl
rcl
sar
or
loope
sbb
or
arpl
popf
bound
iret
mov
sbb
(bad)
jmp
jns
mov
push
xchg
test
xchg
test
push
inc
jb
lea
push
xchg
inc
fdivr
or
add
pop
jge
xor
fadd
fnsave
hlt
enter
es
sbb
nop
or
imul
test
psllq
sub
push
jl
mov
jmp
inc
sub
sti
sbb
pusha
retf
adc
das
imul
dec
movs
and
movs
cld
push
loop
or
pop
lds
push
lea
jae
pop
jnp
mov
adc
dec
jecxz
ja
mov
push
cli
pushf
jl
mov
loope
xchg
call
pop
mov
fsub
js
mov
es
out
push
or
cmp
xchg
retf
sbb
sub
jo
cmps
neg
inc
jp
xlat
sbb
push
push
into
sbb
push
call
dec
mov
adc
mov
jge
out
cmp
jl
enter
es
cdq
cmp
das
cmp
jo
jb
push
push
inc
xchg
xchg
jge
lds
jb
jecxz
jmp
in
mov
btc
pop
xchg
ds
mov
cmp
loope
jae
mov
mov
sub
ins
scas
imul
in
das
in
mov
(bad)
jmp
fs
stos
call
pushf
push
jl
ret
inc
sbb
and
sub
mov
mov
inc
and
jg
sub
bound
push
sbb
mov
call
in
xchg
test
lds
xchg
cmp
sbb
dec
sbb
cmp
jne
lods
lea
lds
out
push
fcmovu
mov
xor
cmp
not
push
aad
jl
jne
xor
dec
ror
mov
add
xor
dec
sub
add
jns
xchg
(bad)
pop
inc
call
jb
lds
leave
out
xchg
test
fs
outs
sbb
mov
call
sub
iret
sub
lahf
(bad)
arpl
xchg
inc
mov
and
sbb
into
mov
shl
push
lea
xchg
xchg
es
clc
mov
mov
out
aas
dec
js
shr
mov
pop
push
xor
mov
xor
cli
inc
mov
sbb
jnp
scas
test
and
das
inc
mov
cmc
(bad)
test
xchg
mov
sub
test
xchg
mov
out
retf
add
push
cmp
daa
jp
jns
cs
mov
loopne
xor
adc
or
xlat
mov
adc
sti
mov
retf
cmps
mov
loop
inc
xor
loopne
pop
xor
xor
mov
aaa
push
ja
xor
mov
mov
popa
push
sub
scas
pushf
xchg
mov
cmp
cmps
rol
xchg
out
mul
jae
ss
fbld
stc
or
mov
xchg
push
pop
jnp
shl
cmp
mov
sbb
lds
push
add
das
retf
arpl
pop
ror
mov
sbb
dec
or
pushf
inc
clc
fmul
out
xor
das
dec
pop
xor
sbb
adc
in
lods
mov
jnp
in
movs
pop
ret
mov
push
pop
ins
call
mov
out
push
nop
lds
(bad)
jnp
sbb
dec
dec
retf
cmp
mov
outs
and
xlat
add
scas
pop
pop
lods
lds
mov
fsubr
sbb
xchg
dec
scas
mov
in
xchg
push
or
inc
sbb
dec
push
shl
bound
popf
and
xlat
into
mov
pop
cmps
(bad)
jmp
push
push
lods
mov
or
xchg
sbb
fisubr
int
pop
or
jmp
adc
sbb
sbb
jns
js
push
das
cwde
mov
cs
xlat
pop
seto
adc
cmps
aaa
inc
inc
lods
jl
mov
add
mov
into
cwde
cmps
mov
push
dec
push
or
or
xchg
mov
add
ror
inc
test
adc
mov
jae
clc
sbb
lods
jb
cdq
icebp
ja
mov
out
xchg
mov
inc
pop
imul
int
retf
jle
xchg
ret
gs
inc
add
mov
cmps
jb
cmp
lahf
lods
test
push
fsub
lea
and
mov
test
inc
sbb
adc
pop
push
out
pop
or
add
xchg
cmp
in
sbb
jmp
call
sub
into
das
jnp
mov
cmp
into
fstp
xchg
inc
sbb
mov
jae
jnp
or
sub
cld
pop
mov
jnp
fadd
hlt
cdq
cwde
pop
adc
jl
jae
fcomp
out
repnz
dec
xor
hlt
push
push
mov
mov
iret
cdq
hlt
icebp
cmp
mov
dec
fs
test
mov
xchg
cli
push
adc
jns
scas
xchg
outs
inc
daa
cdq
cmp
pop
jae
inc
push
ja
sbb
push
inc
add
sub
mov
cmp
xor
mov
scas
call
jns
punpckldq
add
mov
and
(bad)
push
mov
cmc
inc
cdq
mov
xchg
add
fisubr
(bad)
test
sbb
push
push
test
mov
add
je
inc
and
pop
xchg
les
aas
retf
jae
inc
lods
out
push
aad
sbb
or
pop
adc
mov
inc
and
mov
push
or
inc
xchg
ins
loopne
lahf
push
mov
jne
lahf
popa
pop
adc
xchg
leave
or
and
int3
jp
push
sti
int
repz
mov
add
and
js
inc
repz
xor
sub
push
iret
mov
add
aam
fwait
pop
add
xchg
imul
push
ja
jb
sub
inc
outs
neg
cmp
push
imul
pop
inc
mov
sub
mov
and
sahf
ins
xor
cmps
jp
shl
je
daa
sbb
pushf
cdq
nop
mov
jne
test
hlt
cwde
in
mov
enter
or
or
xor
dec
or
ja
ret
pop
int3
add
test
mov
loopne
ss
sbb
xor
push
pop
mov
inc
test
fsubr
mov
dec
in
inc
into
sbb
je
data16
retf
xor
(bad)
in
inc
rcl
jecxz
inc
jmp
xchg
pop
gs
fs
dec
sbb
shl
shl
daa
sbb
sub
xlat
jbe
jo
movs
sti
mov
sti
jae
cmc
jmp
test
mov
or
cs
fldenv
clc
iret
ins
mov
mov
jns
mov
jmp
mov
sbb
jb
mov
ret
pop
das
inc
dec
enter
les
xchg
test
cs
sbb
or
inc
into
(bad)
js
imul
sbb
and
pop
xchg
mov
pop
add
nop
popa
xor
xchg
imul
ss
js
mov
push
shl
nop
push
mov
sbb
pop
or
popf
xchg
rcr
pop
sbb
addr16
dec
cmp
dec
fimul
cmps
mov
push
push
enter
xor
ins
dec
rcr
sbb
movs
das
outs
or
mov
in
mov
ja
clc
popa
mov
loope
push
cmp
mov
mov
jl
adc
adc
fwait
xor
xor
repz
xchg
or
imul
dec
jmp
movs
je
jbe
jnp
adc
lds
cmp
retf
dec
ja
ffree
xor
aas
jg
mov
lock
cmc
push
jb
scas
cmp
sbb
push
mov
sub
pop
and
xchg
dec
add
xchg
sbb
and
repnz
and
fidivr
sbb
dec
(bad)
jns
lods
xchg
pop
xor
add
mov
push
dec
jmp
or
adc
pop
popa
ja
and
outs
sub
jae
sub
add
or
xchg
adc
jecxz
je
dec
xor
inc
cmps
fcmovu
adc
sbb
inc
pop
xchg
jecxz
sbb
lods
inc
sbb
jb
add
add
test
or
pminsw
pop
xor
lods
test
push
movaps
jmp
jns
pop
adc
in
xlat
je
mov
push
lea
xor
sub
sub
adc
lock
adc
test
je
sbb
nop
ss
in
push
aas
fiadd
adc
jg
mov
jmp
out
cmp
jmp
in
out
pop
mov
inc
jb
and
inc
adc
pop
addr16
mov
js
xchg
fdivr
fdivr
jb
iret
pop
movs
jge
scas
mov
retf
ja
add
push
mov
xor
jmp
shl
je
inc
cmc
nop
dec
sbb
and
arpl
gs
sbb
in
push
jns
fisub
push
mov
cwde
or
fsub
pop
xor
sub
dec
jbe
xchg
sub
out
imul
imul
jnp
or
gs
mov
je
push
jae
adc
cs
int3
pop
adc
ds
ficom
ror
sahf
mov
jg
fidivr
mov
stc
(bad)
inc
pop
xchg
and
xor
mov
adc
sbb
pop
inc
mov
gs
inc
sbb
mov
addr16
aaa
jne
iret
iret
aad
sbb
mov
mov
add
push
in
aam
popf
add
aam
clc
cmp
shl
aas
inc
aad
clc
mov
jb
mov
jo
sub
cmp
mov
push
jo
aaa
movs
push
stos
xchg
push
(bad)
icebp
retf
adc
mov
in
xor
cmc
dec
out
iret
fwait
fwait
aad
add
dec
enter
sti
fcmovne
ror
cdq
mov
scas
jb
jbe
ins
sbb
das
mov
rol
and
imul
mov
jge
cmp
push
jne
push
push
mov
(bad)
movs
jb
jns
mov
cmp
data16
adc
xor
repnz
outs
call
popa
sbb
adc
inc
icebp
mov
and
ins
cvttps2pi
int
call
cli
cmc
hlt
(bad)
mov
dec
sub
jp
cli
mov
mov
pop
mov
retf
sbb
lods
out
fdiv
(bad)
pop
mov
pop
retf
cld
xchg
xchg
js
fnstsw
jno
pop
inc
sti
push
scas
mov
je
xchg
xchg
daa
xor
jae
imul
pop
ja
ret
inc
out
jae
inc
ret
sub
push
jl
pop
cdq
mov
xor
xchg
mov
and
jae
or
leave
sbb
add
out
mov
jmp
imul
js
mov
jb
int3
stc
mov
mov
les
sbb
dec
mov
xor
jae
std
inc
jno
test
ja
xchg
mov
shl
popa
pop
mov
dec
push
fisubr
int
clc
jmp
cmps
(bad)
movs
jae
jg
xchg
xor
jae
or
das
adc
sbb
pop
pop
cdq
mov
or
out
mov
pop
in
mov
xchg
jmp
les
pop
dec
jae
out
jle
daa
test
xchg
inc
sbb
adc
loop
mov
push
jp
lds
out
push
popa
push
adc
dec
add
ret
inc
cdq
mov
pop
jp
xchg
sub
imul
out
and
rcl
push
jl
(bad)
out
hlt
mov
sbb
xchg
int
aaa
jecxz
adc
sub
in
push
shl
pop
pop
pusha
out
ins
push
fwait
jnp
jb
popa
or
xor
pop
sub
cmp
xor
mov
dec
outs
pop
dec
jb
repnz
sub
jecxz
sbb
inc
jns
dec
mov
mov
sahf
push
adc
mov
cmp
sbb
mulps
fistp
cmps
cwde
mov
xchg
enter
dec
sub
loopne
ins
inc
test
dec
xor
mov
lods
sbb
push
sbb
mul
adc
sbb
sbb
jbe
jp
xchg
xor
sbb
sbb
sar
sbb
and
mov
repnz
sbb
outs
(bad)
test
retf
sub
mov
pop
mov
fcomi
fimul
sbb
mov
dec
lea
xchg
pop
fsubr
outs
out
int
sub
shr
push
(bad)
data16
fstp
push
test
mov
mov
mov
iret
lods
fwait
mov
or
and
dec
xchg
repnz
xor
stos
lds
mov
push
xor
out
call
mov
mov
mov
scas
sbb
call
dec
mov
cmp
fld
(bad)
popa
jmp
mul
dec
and
dec
pusha
jae
sahf
jne
mov
sbb
fidivr
inc
cmp
ror
and
inc
je
xchg
loop
scas
mov
xchg
jle
or
and
test
sbb
cld
cmp
adc
jg
xor
jne
(bad)
adc
add
and
shl
pop
scas
adc
pop
adc
add
ss
xor
sbb
jne
vmovaps
mov
sti
mov
sbb
es
fisubr
or
pop
loop
ja
pop
adc
or
pop
out
and
cmp
dec
test
test
rcl
dec
ss
daa
shl
test
jmp
std
mov
pop
xchg
jne
pushf
int3
mov
or
mov
outs
add
and
or
enter
jae
inc
lds
xor
pop
aam
push
sbb
mov
push
adc
jns
cmc
mov
sbb
push
lods
mov
call
cmps
sbb
push
mov
retf
push
and
push
jae
or
inc
es
mov
outs
jmp
jl
outs
xchg
dec
inc
sbb
push
out
mov
fnstenv
xchg
push
push
dec
jae
je
and
or
jae
shr
mov
sbb
out
out
in
jle
in
sbb
sbb
mov
into
push
leave
push
pop
ret
cwde
std
dec
sbb
dec
mov
and
jae
sahf
add
xchg
sbb
loopne
into
add
push
dec
lock
mov
out
cmp
mov
mov
mov
icebp
inc
loop
data16
ss
push
ret
into
add
pop
pop
stc
lea
mov
enter
stc
leave
retf
dec
scas
in
shl
loop
icebp
jmp
cmps
sub
pop
mov
dec
test
push
aam
into
sbb
inc
sbb
sbb
cli
xor
mov
leave
mov
bound
(bad)
xchg
pop
jp
jle
pop
push
stc
jae
pop
mov
inc
sbb
add
cmps
xor
mov
test
loope
sbb
fwait
sbb
stos
inc
mov
push
inc
(bad)
lods
iret
gs
fs
neg
jne
ja
pop
sub
mov
or
cmp
int
inc
(bad)
push
dec
xor
push
or
je
add
inc
jl
sbb
jmp
mov
sbb
push
inc
sub
jmp
or
sbb
cdq
mov
sar
pushf
jae
lods
scas
mov
xchg
test
push
inc
ins
jb
mov
mov
stos
sbb
sbb
clc
pop
pop
movs
push
repz
add
pop
jle
mov
push
push
pop
sar
fnstcw
mov
mov
mov
push
mov
aam
retf
sar
sbb
retf
fimul
jnp
popf
test
inc
sbb
mov
adc
mov
adc
push
xor
cdq
sbb
jae
lods
pmaxub
push
cdq
imul
xor
pop
jns
fsub
sbb
mov
push
aas
mov
mov
sti
jae
xchg
inc
mov
or
out
out
sub
mov
xor
in
cmps
popa
aas
(bad)
push
xor
push
mov
cmc
cld
les
iret
int3
int
mov
loop
add
pop
ins
movs
pusha
jb
or
ins
push
xchg
das
movs
mov
or
in
aad
jo
sub
sbb
outs
fnsave
iret
or
in
mov
imul
mov
inc
mov
cmp
adc
sbb
mov
sar
lds
mov
push
arpl
cmps
dec
nop
mov
jae
pop
mov
sahf
int3
mov
sub
push
push
jae
fadd
adc
adc
and
sub
mov
pop
mov
and
xchg
ds
dec
or
and
jno
les
pop
mov
mov
mov
aaa
jo
xchg
call
pop
dec
adc
mov
out
inc
cmp
xchg
adc
movs
mov
mov
pop
mov
jg
js
movsx
xchg
inc
dec
add
jae
mov
stc
sbb
popf
xor
mov
loop
mov
je
mov
or
mov
test
inc
add
loope
stc
mov
test
enter
adc
(bad)
out
xchg
sbb
adc
dec
js
stos
test
mov
test
pop
sar
jns
xchg
jmp
push
dec
sbb
dec
(bad)
mov
push
or
pop
pop
enter
inc
test
dec
pop
mov
mov
pop
shl
sub
xchg
or
and
xor
mov
nop
jne
pop
jnp
stc
cdq
sub
pop
jg
mov
xor
mov
aaa
cdq
popf
sub
pop
fstp
stos
jl
sub
push
cmp
inc
js
daa
or
cld
sub
jnp
js
ins
jo
cmp
es
sbb
mov
loop
pop
sahf
sbb
fsubr
ret
fsub
add
pop
shl
fcomip
or
out
les
das
pop
sbb
push
push
xchg
mov
push
xchg
data16
jne
push
int
xchg
retf
push
stos
clc
mov
neg
inc
imul
push
xchg
(bad)
out
sbb
sahf
jmp
jmp
xchg
out
imul
call
adc
mov
les
jnp
adc
in
pusha
mov
jge
sti
lock
(bad)
lods
mov
ds
aas
xor
inc
daa
sbb
aad
into
and
push
mov
xor
adc
out
sbb
loop
dec
pusha
js
aaa
pushf
in
pop
xor
xor
jb
mov
or
inc
ja
test
enter
fidiv
push
je
and
aas
stos
sub
enter
fwait
pop
shl
sahf
js
sar
or
and
adc
inc
xchg
jns
scas
pop
jmp
cmps
leave
pushf
push
out
(bad)
push
sbb
adc
mov
push
bound
mov
xor
inc
pop
push
in
jnp
(bad)
push
rcr
mov
in
mov
inc
sub
mov
(bad)
jae
xchg
test
cmp
jbe
movs
out
adc
mov
pop
fwait
test
mov
lea
sub
adc
mov
das
nop
sbb
fbstp
stos
lds
(bad)
hlt
pop
adc
sti
(bad)
dec
rcr
ins
pop
pop
inc
xchg
fwait
and
in
or
sbb
in
mov
adc
outs
cmp
sti
stc
or
xchg
adc
mov
jne
or
inc
inc
(bad)
cmps
pop
xor
rol
cmp
push
cli
fmul
mov
ret
retf
(bad)
rcl
push
adc
aaa
dec
shl
mov
lea
call
out
mov
sahf
or
jmp
push
call
in
jne
cmp
cmp
sub
adc
mov
push
xchg
cld
pop
adc
xor
xchg
fst
xchg
js
pop
jae
dec
pop
xor
sbb
cmp
mov
fwait
sbb
into
push
std
js
sbb
fdecstp
movs
pop
jmp
je
std
ret
dec
repz
push
mov
dec
mov
and
jae
and
jge
inc
or
xchg
nop
add
mov
xchg
cmp
xchg
xlat
xchg
mov
neg
and
fild
mul
sub
push
xchg
outs
jb
adc
dec
mov
jae
adc
cmp
xchg
jnp
outs
sub
add
or
js
sbb
repz
sub
int3
stos
push
mov
aaa
clc
adc
cmps
cmps
retf
sbb
xchg
dec
jno
popa
add
shl
jle
xchg
ficomp
setnp
sbb
mov
clc
pop
fsubr
jl
or
das
outs
sti
sub
adc
out
icebp
xor
xchg
mov
push
dec
or
shl
jbe
xchg
ds
cmp
adc
stos
jae
pop
hlt
inc
fwait
ret
shl
sbb
inc
cmp
aas
(bad)
push
sti
scas
mov
xchg
lods
mov
adc
repz
adc
rol
fwait
xchg
sbb
gs
cli
pop
xchg
fld
and
push
cmp
xchg
(bad)
xor
cs
jae
add
outs
push
adc
out
sahf
mov
jb
int3
aad
mov
and
mov
or
jne
std
adc
mov
cmps
mov
cld
call
dec
sbb
pop
lods
mov
xchg
cdq
imul
pop
inc
mov
xor
imul
in
cld
jae
dec
and
mov
adc
out
jle
xlat
mov
xor
or
js
add
std
aaa
xchg
test
in
sub
xor
shl
fist
popa
enter
les
xchg
adc
fs
xlat
scas
pushf
and
xlat
ds
mov
sub
inc
add
movs
and
cmp
jl
sub
(bad)
fld
xchg
adc
mov
xchg
(bad)
lods
movs
and
jae
and
pop
adc
inc
inc
call
ja
into
movs
das
pop
stc
xchg
lock
call
(bad)
adc
jmp
test
(bad)
push
add
ret
xchg
inc
repz
mov
sbb
xchg
xchg
jb
xchg
in
out
dec
adc
lds
adc
sub
adc
xchg
dec
xchg
dec
or
std
ficomp
pop
(bad)
jmp
jl
(bad)
push
aaa
sbb
retf
inc
dec
repz
ja
sub
dec
fiadd
mov
jg
sahf
xchg
xor
adc
inc
mov
jns
hlt
or
ins
aad
(bad)
adc
xchg
outs
mov
mov
repz
cli
add
sar
push
repz
jns
push
out
shl
rcl
sub
adc
xchg
std
test
popa
test
push
lods
mov
ror
cli
mov
inc
addr16
call
or
fidiv
jae
loop
dec
idiv
out
cmp
pop
mov
jae
enter
jae
and
push
cld
cmps
arpl
xor
mov
in
daa
and
adc
sub
out
enter
jmp
adc
jae
out
add
xor
ficom
add
dec
pop
js
pop
mov
enter
sti
loope
and
inc
jg
in
dec
ins
aam
daa
jge
aaa
ror
imul
add
add
in
sbb
add
cmp
shr
add
push
daa
icebp
or
cmp
jge
in
xchg
mov
pop
add
push
jb
scas
hlt
jae
adc
fist
sbb
lahf
lds
mov
push
ret
adc
and
aad
hlt
mov
leave
aas
jp
and
jno
mov
inc
inc
bound
in
aaa
cmc
imul
sbb
jp
xchg
(bad)
jmp
cmps
enter
adc
adc
fs
(bad)
loop
inc
xchg
aad
mov
retf
fiadd
loop
in
or
xchg
fidiv
test
mov
stc
pop
in
gs
xor
push
aaa
sub
sbb
mov
adc
ins
push
xchg
fsubr
je
inc
pop
push
mov
adc
pop
adc
sbb
gs
int
mov
aam
loopne
xor
ret
sbb
inc
out
sbb
mov
shl
pusha
(bad)
ss
xchg
retf
enter
jbe
loope
mov
fstp
mov
out
call
cmp
jb
xchg
int
mov
es
xor
jbe
inc
mov
sub
imul
(bad)
push
int
lods
loope
outs
mov
ror
sar
call
out
adc
inc
xor
repz
push
out
xchg
call
pop
sub
stc
dec
mov
sbb
fisub
mov
inc
sub
mov
sbb
repnz
cmp
mov
push
ss
in
or
add
jo
push
outs
sub
outs
cmp
jmp
push
add
push
arpl
mov
xor
pop
aaa
and
lock
pop
aad
mov
and
pop
mov
in
sbb
adc
aad
inc
mov
pop
sbb
cmps
xchg
pop
jl
jbe
push
sub
lods
sub
mov
sti
and
ins
xor
adc
ret
dec
xchg
dec
xlat
mov
jnp
sbb
rcl
cmp
test
pop
fdiv
cmp
inc
mov
gs
clc
xor
push
ins
dec
inc
imul
mov
pop
dec
inc
jge
adc
fmul
jge
dec
(bad)
jmp
in
sub
enter
mov
push
cmc
xchg
pop
push
int
push
je
jnp
jmp
imul
push
je
jo
or
mov
and
nop
add
mov
cmp
xchg
jo
mov
scas
dec
(bad)
cs
mov
lods
mov
(bad)
cmp
push
pop
daa
dec
xor
hlt
repz
in
mov
add
mov
dec
xchg
cmp
call
call
xor
add
loope
adc
xor
stos
or
je
mov
sub
cmp
fldenv
nop
jo
sbb
adc
cmp
mov
sbb
xchg
arpl
push
push
je
scas
cmp
mov
jne
sbb
mov
rcl
sub
sub
mov
ret
fist
mov
push
imul
(bad)
retf
pop
aas
or
and
pusha
mov
lds
push
pop
in
adc
xor
ja
jl
jae
dec
xchg
dec
fadd
mov
add
mov
ja
(bad)
mov
sbb
mov
jle
outs
sahf
ins
xchg
xchg
arpl
sbb
sbb
sub
lea
mov
scas
sbb
or
sbb
jecxz
xor
daa
addr16
mov
mov
retf
jg
xacquire
sbb
push
cs
loop
push
cmp
jae
add
mov
sub
rol
in
adc
movs
scas
mov
popa
adc
nop
mov
rol
sbb
xchg
jecxz
jp
inc
dec
cmp
outs
fild
or
sub
xor
add
fadd
mov
sbb
sahf
leave
mov
out
sub
inc
sbb
mov
hlt
dec
mov
test
sub
dec
jne
push
(bad)
pushf
adc
mov
jae
add
sub
repz
adc
cli
fist
imul
or
xor
enter
int
mov
scas
jge
add
mov
mov
hlt
sub
cmps
sub
out
dec
add
ret
and
bound
mov
sbb
pop
sar
mov
pop
lods
sub
jns
lds
xlat
mov
out
mov
sbb
add
mov
adc
xchg
test
icebp
call
and
enter
test
ror
sbb
fist
mov
xchg
mov
stos
inc
add
lods
jge
enter
lds
sbb
mov
dec
data16
push
jns
or
jge
arpl
mov
stos
(bad)
and
das
sbb
add
jnp
jecxz
inc
mov
cmp
adc
xchg
pop
sub
add
aaa
gs
sbb
adc
mov
sti
adc
adc
jp
nop
movs
in
ins
push
js
mov
cmp
adc
inc
je
cld
into
jo
inc
daa
bound
imul
(bad)
add
mov
mov
jmp
std
or
xchg
or
fs
push
imul
ffreep
je
ret
enter
jl
inc
or
mov
jae
in
cmps
das
mov
call
push
pop
cmp
add
inc
aam
sub
sub
or
adc
out
in
cld
jmp
dec
inc
push
pop
arpl
xchg
or
adc
dec
das
jae
add
jecxz
sti
xor
sbb
das
repnz
cld
mov
sbb
dec
outs
mov
cld
sbb
stc
or
or
dec
xchg
js
mov
or
jne
pusha
dec
loopne
jae
not
xchg
ins
fisubr
lods
push
xor
adc
dec
fs
cdq
in
imul
mov
or
mov
test
mov
adc
xchg
out
xchg
imul
inc
pop
cwde
das
sar
xor
lock
pop
jae
shl
or
sbb
mov
mov
retf
push
rcr
in
push
neg
aad
enter
neg
adc
pop
and
sbb
inc
mov
jg
into
and
cmp
ins
int3
test
addr16
mov
pop
mov
cld
sub
jge
out
sbb
sub
ret
sahf
adc
jae
stos
mov
jmp
dec
jne
push
loop
test
dec
cs
loope
or
sbb
xor
sbb
(bad)
mov
mov
aaa
xchg
arpl
xchg
mov
je
je
repz
jno
dec
not
xchg
test
mov
push
mov
jl
and
mov
test
xchg
sbb
mov
lahf
xor
mov
adc
shr
pushf
mov
mov
add
nop
push
aad
mov
xchg
(bad)
jno
(bad)
mov
test
xchg
jmp
add
nop
and
enter
ins
(bad)
bnd
cli
sub
and
das
(bad)
xchg
in
addr16
or
push
push
es
ss
pop
sbb
sbb
jmp
pop
test
ret
sub
push
out
push
mov
iret
adc
mov
shl
scas
add
mov
test
out
adc
repnz
mov
push
jmp
or
nop
pop
push
call
push
(bad)
repnz
test
std
push
ds
jmp
mov
push
lahf
int
lea
cdq
scas
push
idiv
push
rcl
inc
mov
xchg
mov
jmp
out
pop
js
cmp
mov
rcl
sub
pop
leave
fwait
mov
cli
mov
xor
jp
xor
sub
push
sub
jnp
test
pushf
xchg
sub
cmp
ds
adc
popf
shr
mov
mov
outs
repz
ficomp
in
jno
mov
sahf
pushf
jg
or
js
mov
pop
pop
inc
cmp
pop
hlt
sub
mov
push
mov
push
aam
or
das
cmp
push
je
out
das
jmp
push
scas
jge
xlat
pop
add
retf
dec
daa
xlat
cmp
mov
cmp
mov
(bad)
add
adc
add
sub
hlt
aam
data16
sub
push
sbb
les
int3
dec
jb
xor
nop
add
sti
cmp
xor
xchg
sbb
shl
push
cli
mov
aam
sbb
cld
std
cmp
inc
and
test
inc
mov
mov
jns
xor
out
in
push
repnz
repz
jle
repz
push
and
fsub
xor
shr
sbb
aaa
shl
pop
or
and
sahf
(bad)
xor
and
mov
je
out
mov
sbb
and
add
and
mov
adc
or
xchg
xchg
mov
ret
jl
pop
addr16
jae
or
lock
inc
sub
push
gs
jo
je
inc
retf
or
ror
mov
mov
cmp
out
sbb
dec
pop
aas
push
sbb
pop
inc
dec
jmp
mov
stc
adc
test
sub
stos
lods
hlt
fbld
pusha
int3
or
xchg
aaa
aaa
mov
and
mov
cmc
int
das
movs
mov
dec
cld
inc
jecxz
mov
adc
sub
xchg
xlat
mov
xchg
sbb
mov
jmp
mov
inc
sbb
ror
push
inc
mov
idiv
sbb
bound
mov
mov
sbb
jnp
outs
xchg
inc
xor
jnp
stc
mov
sbb
inc
leave
jg
sbb
aas
pop
das
lahf
xchg
mov
mov
jno
shl
or
mov
out
das
test
pop
cmps
sub
mov
shl
call
xchg
xchg
inc
fdivr
jg
mov
in
adc
cmps
mov
pop
in
jo
jecxz
push
mov
dec
xor
push
stos
int
test
or
sbb
repnz
dec
scas
cmp
sub
sahf
stos
sub
popa
lds
adc
enter
pop
in
test
aad
cmp
sub
push
mov
jo
add
cwde
dec
sbb
pushf
pusha
push
ja
cmp
add
lods
test
daa
mov
add
cmp
jb
mov
mov
fstp
xor
nop
adc
in
inc
movs
icebp
data16
dec
sbb
ins
das
xor
add
test
test
mov
loopne
xchg
icebp
mov
mov
std
pop
jne
add
or
mov
pop
ins
mov
out
movs
mov
addr16
scas
mov
mov
(bad)
cmps
dec
mov
adc
ins
movs
call
call
test
sub
sbb
mov
sbb
call
bound
je
cmp
popa
cmc
inc
leave
(bad)
nop
mov
lea
sbb
dec
xchg
cs
dec
or
ins
gs
ja
out
bound
inc
sbb
inc
mov
and
jno
push
sub
cmc
repnz
cmp
stos
pushf
xchg
into
pop
dec
stos
jae
out
stc
adc
adc
cmp
retf
(bad)
mov
ficomp
aam
int
mov
push
scas
pop
cmp
inc
cmp
sub
push
xor
(bad)
call
inc
lds
inc
inc
into
sti
aas
sahf
and
cmc
mov
fs
sbb
mov
xor
mov
xor
mov
repz
pop
jl
popa
jecxz
test
add
enter
add
int
ret
push
sbb
and
jae
lock
or
rcr
cli
fnstsw
cmp
jl
sbb
(bad)
arpl
rol
fistp
aad
xchg
jge
or
xor
mov
stos
or
test
mov
sbb
imul
adc
jge
test
mov
xor
data16
das
sbb
les
jmp
popa
stc
mov
and
mov
and
or
fdivr
je
call
call
int3
in
sti
out
dec
sbb
dec
aam
les
xor
in
sbb
lods
int
leave
mov
cmp
lahf
data16
leave
cmp
fisttp
mov
xchg
jmp
xor
sbb
inc
dec
sbb
std
lods
mov
and
stos
loopne
fs
movs
jo
xchg
push
enter
dec
jb
jo
aas
push
sbb
in
adc
gs
dec
mov
hlt
sub
fcomp
lods
adc
xor
test
adc
fsub
es
xchg
leave
and
push
out
js
outs
mov
adc
sub
fst
adc
(bad)
jae
mov
mov
sbb
popa
and
je
rcr
cwde
adc
call
dec
pop
adc
popa
mov
add
mov
xchg
sbb
outs
je
add
shl
jae
mov
jg
inc
add
push
outs
dec
aad
pop
fs
or
js
out
add
inc
mov
repz
jae
cld
inc
mov
pop
sbb
loopne
(bad)
jae
rcr
inc
leave
sbb
test
ins
push
shl
repz
sti
add
and
xor
ss
cmp
mov
ret
mov
pop
sbb
adc
cmc
jae
call
push
xor
sub
xchg
jl
aam
push
sub
jne
mov
fild
lods
xchg
fcomi
ins
pop
test
and
sbb
jl
fstp
push
xor
sub
cmp
and
fsubr
lods
inc
cmps
xchg
xor
jp
dec
sub
popa
pushf
fldcw
mov
mov
in
adc
cwde
xchg
adc
scas
add
loop
add
sbb
cwde
aaa
ins
xor
mov
mov
stc
aas
data16
sbb
inc
sub
lods
sub
js
xchg
lds
je
es
scas
dec
sbb
xor
gs
and
in
js
mov
jne
adc
cmps
pusha
pop
adc
dec
mov
push
sbb
and
xor
mov
je
data16
out
dec
xchg
dec
jecxz
dec
popa
jg
adc
pop
mov
jb
mov
mov
inc
fs
and
mov
iret
fisttp
jecxz
je
mov
sbb
pushf
in
nop
jno
cmc
or
cmps
ds
int
pop
jge
adc
fidiv
sar
lock
data16
(bad)
mov
cmp
xor
jnp
imul
and
push
aam
retf
int
test
fisttp
mov
(bad)
cli
jl
jg
adc
(bad)
int
xchg
fiadd
mov
outs
data16
add
in
push
test
(bad)
xor
mov
in
mov
call
xor
sub
adc
sbb
dec
arpl
ficomp
and
outs
and
bound
lahf
out
xor
sti
jae
inc
adc
stos
(bad)
mov
retf
stos
inc
dec
push
lods
mov
sbb
push
mov
sbb
mov
adc
test
(bad)
into
inc
mov
shr
xchg
jp
cmp
or
je
mov
mov
add
push
daa
dec
lahf
push
lea
ret
aaa
cmps
xor
pop
cdq
xor
push
jg
movs
mov
imul
fidivr
nop
test
and
jge
add
outs
test
xchg
stos
xchg
or
sbb
ds
ss
out
and
mov
mov
stos
lahf
push
int3
jle
jno
(bad)
and
jg
jl
es
loope
mov
mov
das
aam
mov
ficomp
cmp
jg
adc
mov
pop
test
aam
outs
dec
pop
adc
sbb
push
xor
sbb
sbb
sbb
fcom
cmp
cmp
fst
sbb
xor
retw
mov
and
cmp
adc
cld
dec
(bad)
cmc
and
retf
retf
mov
ror
jnp
(bad)
repnz
sbb
inc
vmovd
fxch
sub
arpl
xor
loopne
inc
leave
aas
addr16
aam
or
cmp
mov
cmc
mov
adc
fcomp
jg
xor
fwait
stos
or
and
aaa
adc
lods
fcom
popf
inc
jge
inc
fimul
push
lds
xchg
call
fadd
mov
sti
jae
mov
sbb
sbb
loope
xor
mov
and
(bad)
xchg
call
sub
mov
add
pop
mov
outs
stc
xchg
fild
sbb
test
mov
sbb
push
cmp
cmps
push
xchg
dec
cmc
xor
pop
xor
mov
and
or
lock
jmp
xchg
mov
sbb
jae
sbb
pop
mov
pop
push
pop
jns
dec
out
repz
outs
jae
sbb
xchg
sub
jb
js
adc
int
sbb
stc
and
aaa
outs
mov
outs
jmp
cmc
and
xchg
loope
scas
add
shl
mov
je
(bad)
idiv
sbb
shr
icebp
xchg
rcr
mov
push
fiadd
mov
std
imul
inc
cmp
pop
and
cmps
int
je
dec
and
or
push
jle
frstor
mov
(bad)
leave
in
inc
imul
pop
or
dec
and
cmp
xlat
stos
ss
lods
add
push
dec
add
add
push
repz
xor
mov
and
fist
sbb
cmps
ja
pop
in
les
lock
sbb
rcl
pop
repz
es
cmp
inc
sbb
dec
or
mov
mov
cmp
scas
ss
in
adc
retf
xchg
repz
test
push
cmps
inc
sub
call
xchg
(bad)
pop
aaa
inc
ror
jae
fild
fst
sbb
stc
sub
adc
cmps
mov
xchg
and
mov
stos
repz
xchg
xchg
dec
cmp
mov
push
fs
xor
push
hlt
out
adc
mov
ret
fwait
xchg
std
scas
push
fimul
jmp
mov
jle
or
xchg
popa
(bad)
adc
jae
shl
cs
push
pop
and
or
push
cld
test
dec
ins
mov
inc
mov
inc
add
push
inc
sub
call
(bad)
cld
sub
xchg
mov
movs
dec
pop
mov
int
jge
jae
sub
push
dec
in
inc
lds
push
or
mov
or
add
dec
pushf
shl
jge
adc
aad
xchg
inc
imul
hlt
jae
ret
sbb
dec
movs
enter
fisttp
push
and
int3
inc
jbe
retf
pop
and
dec
jno
add
stos
rol
xchg
add
int
(bad)
fst
dec
aam
push
sbb
cmp
ret
std
xchg
inc
lock
sub
aaa
mov
jbe
lahf
das
scas
outs
sub
xchg
sbb
cmp
mov
dec
hlt
push
jnp
push
jl
cli
jg
or
bound
mov
push
nop
aas
inc
rcl
int3
in
in
and
ret
data16
mov
dec
mov
stos
push
pop
stos
jg
int3
imul
or
call
std
retf
cmp
sbb
or
in
mov
call
push
jne
mov
(bad)
pop
movs
mov
xchg
ret
push
jns
and
xchg
or
ja
ror
inc
das
es
arpl
mov
fwait
adc
sub
xlat
adc
fwait
fwait
dec
mov
stos
xchg
in
(bad)
mov
inc
jl
adc
mov
inc
sti
mov
je
push
nop
add
dec
cmp
sbb
cmc
nop
scas
movs
scas
jl
call
add
adc
xchg
inc
lds
test
ret
pop
mov
mov
mov
mov
fs
sub
xor
jns
inc
outs
inc
push
mov
ja
ins
jmp
jbe
adc
add
mov
and
sbb
rol
mov
or
stos
mov
mov
adc
xchg
or
adc
jnp
jo
jae
ds
jno
std
adc
xor
jmp
loopne
jp
dec
sar
inc
jl
mov
mov
pop
sub
stos
mov
xchg
add
add
jecxz
dec
xchg
push
movs
mov
not
jp
sbb
or
xchg
mov
lods
inc
pop
jae
and
xor
sbb
dec
or
pop
adc
fmulp
(bad)
xchg
xchg
ins
xor
call
mov
jns
mov
xchg
ret
inc
mov
repnz
and
jo
xchg
xchg
dec
add
push
and
mov
mov
jne
rcl
iret
sbb
dec
mov
adc
and
sub
or
jmp
cmp
inc
push
push
into
adc
inc
rcr
aaa
push
fsubr
dec
sub
cmp
push
rcl
jne
sub
dec
mov
push
je
xlat
add
adc
mov
in
pop
sbb
ins
adc
push
(bad)
imul
push
in
call
mov
push
push
mov
loopne
adc
dec
jae
loopne
inc
adc
jmp
ss
cmp
dec
popa
mov
sbb
inc
pushf
mov
ins
sbb
sbb
or
sbb
pop
xchg
cmps
adc
stc
mov
into
popf
sub
cmp
repz
(bad)
mov
push
ret
mov
mov
inc
push
pop
sbb
mov
clc
retf
xor
mov
aad
jmp
cmp
cmp
jns
inc
(bad)
sub
mov
xchg
imul
dec
xor
sbb
scas
cmp
inc
xor
and
sbb
aad
inc
mov
sub
push
or
dec
inc
sbb
push
sbb
sub
hlt
lahf
es
inc
jle
adc
jp
movs
fld
ret
jae
xchg
dec
xchg
push
jl
inc
sbb
inc
mov
add
rcl
push
mov
cli
sbb
inc
daa
add
daa
and
sub
jb
mov
dec
add
pushf
inc
add
xchg
mov
retf
sbb
dec
js
or
xchg
scas
sub
push
fs
mov
cli
mov
inc
inc
icebp
lods
or
inc
mov
sbb
ja
or
push
jp
int
imul
mov
push
pop
icebp
cmp
push
or
in
mov
sbb
call
sub
cmp
jb
jae
pop
or
pushf
mov
test
sbb
adc
loopne
shl
or
adc
mov
int
aam
js
mov
cmp
inc
pop
and
stos
mov
add
push
adc
int3
test
xor
or
(bad)
aad
inc
scas
sbb
movs
cdq
out
adc
push
sub
xchg
adc
sbb
jg
sub
mov
aas
xchg
push
jae
or
cmp
out
enter
mov
int
pusha
mov
pop
lahf
(bad)
popf
jo
and
mov
repnz
cmp
ins
je
add
push
mov
jb
in
pop
mov
into
pop
scas
mov
sub
pop
sbb
call
hlt
pop
lea
jb
jb
frstor
imul
add
mov
call
xor
sub
rcl
or
xchg
mov
(bad)
mov
lock
leave
jmp
clc
pop
push
sbb
adc
mov
jae
retf
test
pop
cdq
jp
sbb
je
jl
pop
hlt
ins
sbb
sbb
mov
pop
(bad)
imul
push
sub
hlt
mov
test
dec
mov
enter
cmp
jmp
pop
mov
adc
cmp
cmp
push
xchg
inc
mov
xor
jae
retf
cmps
addr16
jae
fisubr
fist
ja
cmps
dec
repz
adc
fbstp
aam
cdq
xchg
push
jne
cmp
mov
int3
xchg
loopne
pushf
int
pusha
cmp
ret
cld
int
test
pusha
ret
repnz
push
mov
cmps
mov
pushf
jmp
call
lds
test
lea
jae
and
adc
push
js
pusha
pop
push
jmp
jb
adc
lds
cmp
sbb
in
sti
(bad)
in
mov
sbb
aad
mov
(bad)
dec
xchg
and
adc
fs
ja
adc
push
lods
sbb
mov
and
adc
lods
(bad)
push
xchg
das
(bad)
enter
retf
mov
sbb
jae
das
jnp
pusha
sar
sbb
push
mov
scas
iret
stos
repz
test
in
sbb
mov
and
jge
adc
sbb
gs
pop
xor
js
mov
mov
add
and
xchg
push
pop
cdq
(bad)
push
call
inc
outs
fs
aas
xchg
arpl
adc
inc
cmps
cmps
jae
jp
cli
adc
dec
cmp
sar
sbb
mul
push
mov
jo
into
sub
movs
sub
and
(bad)
sti
(bad)
sahf
sar
mov
out
inc
cld
setne
jb
lods
push
fdivr
mov
lods
pop
push
iret
jnp
add
inc
rcr
aas
pop
das
lmsw
daa
jge
loopne
fimul
rol
pop
aad
push
sti
xchg
mov
jae
adc
mov
mov
leave
push
hlt
(bad)
jge
loope
jae
sub
je
sbb
xor
pcmpeqd
data16
ret
icebp
mov
mov
fst
sbb
jns
mov
sbb
pop
or
fsubr
fisttp
ffree
push
movs
addr16
xchg
imul
or
inc
pop
xchg
mov
stos
inc
mov
hlt
cmp
dec
sti
mov
or
sbb
or
push
sbb
mov
mov
jnp
xchg
push
mov
js
inc
or
xor
or
mov
pop
jp
mov
sar
ret
jb
push
push
jo
mov
jae
sbb
aas
loop
fcomp
and
mov
outs
in
xchg
push
lds
aad
mov
xchg
fst
vmwrite
jmp
lods
les
jmp
loop
lahf
or
aam
repz
int3
jge
movs
push
mov
ret
fdiv
aam
xchg
xchg
dec
inc
mov
repnz
add
mov
rcl
cmps
aad
xchg
pop
(bad)
xchg
push
adc
pop
sti
xor
mov
mov
xor
push
call
pop
sar
or
add
cld
cmp
adc
jp
xor
push
sti
not
and
in
xor
ret
lods
jno
jae
mov
rol
adc
sbb
out
or
aaa
test
movs
adc
inc
cmp
pop
mov
fidivr
addr16
mov
xchg
daa
test
ins
sub
sar
ret
lds
(bad)
push
inc
and
sub
pop
sahf
pop
pusha
clc
inc
and
pop
inc
xor
movs
(bad)
movntq
out
dec
idiv
jle
popa
pop
mov
dec
xor
and
fisub
cmp
arpl
int3
pushf
jo
xchg
movs
xchg
sahf
or
cmps
(bad)
pop
shl
mov
or
mov
dec
push
mov
fmul
test
mov
and
sub
pusha
les
adc
mov
int
hlt
mov
nop
xchg
fwait
sbb
add
add
in
outs
test
lea
xchg
sbb
xchg
inc
rol
das
cwde
sbb
mov
ficomp
xor
push
sbb
push
adc
mov
call
cmp
jl
(bad)
cdq
or
mov
hlt
aaa
mov
jp
mov
adc
jo
push
or
in
sub
or
sahf
lods
cmp
pop
sbb
cld
repnz
cmc
jo
into
mov
(bad)
(bad)
retf
push
mov
push
push
and
mov
shl
inc
outs
nop
data16
push
cmp
outs
inc
fdivr
cmc
xor
cmps
and
add
add
cmp
xor
ss
mov
xchg
ins
ds
cmp
xchg
lods
fstp
xchg
adc
dec
arpl
inc
cld
stos
cmps
adc
inc
dec
loopne
inc
xor
cmp
scas
pop
pop
ret
into
lds
(bad)
sbb
adc
mov
xchg
pop
repz
repz
ds
int3
xlat
lds
aas
ins
sub
jp
jae
and
lods
mov
add
aad
adc
pop
pop
cwde
push
repz
inc
jae
mov
sub
ss
test
in
cmp
mov
aas
fdivr
je
mov
cmps
push
outs
cmps
das
rcr
jne
mov
loop
loopne
dec
xchg
mov
jbe
adc
jno
mov
outs
jl
test
mov
sub
xchg
inc
sub
ror
push
stos
add
fldlg2
ja
outs
jl
je
pop
das
stc
jae
inc
jle
xor
cmps
sbb
stos
xchg
sahf
(bad)
shl
enter
dec
xchg
xor
out
pop
jmp
lock
dec
sbb
stos
cmp
cld
into
das
push
loop
mov
mov
test
mov
ret
lods
cmps
int
iret
pop
lds
mov
inc
rcl
sub
mov
pop
stos
pushf
int
retf
push
mov
push
lods
mov
inc
adc
or
fucomip
jae
call
test
fbld
inc
pop
addr16
inc
mov
mov
ins
push
xabort
xchg
rcl
mov
aad
rcr
sub
leave
jae
push
fiadd
dec
xchg
pop
repnz
hlt
lods
out
push
shl
mov
xchg
jae
or
sub
jae
push
jmp
gs
je
repnz
(bad)
cli
adc
pop
and
mov
mov
jae
fcom
jmp
or
sbb
imul
sub
xchg
mov
adc
call
xchg
jge
adc
jb
loopne
je
sbb
popa
adc
fucomip
push
call
or
or
fidiv
js
shl
mov
ficomp
lahf
cmps
out
push
mov
add
retf
push
das
scas
and
pop
outs
adc
out
dec
in
xchg
scas
imul
mov
push
xor
and
sbb
cmp
and
js
into
cmps
leave
sbb
rcr
sbb
adc
shl
push
pushf
stos
pop
ss
xchg
je
and
or
mov
popf
cmp
sbb
in
leave
outs
fadd
in
sbb
out
sub
cli
(bad)
repnz
call
and
xor
mov
fwait
push
dec
xchg
inc
je
sbb
xchg
jge
pop
jae
sar
xchg
repnz
xchg
cwde
xchg
mov
lock
call
ds
xchg
pusha
sahf
enter
xchg
xchg
mov
mov
gs
mov
dec
xchg
jp
dec
out
mov
mov
int
popa
jmp
push
sbb
jnp
pop
movs
not
fs
xor
dec
out
imul
push
xor
push
push
aad
jb
aas
les
or
popa
jnp
sub
jb
and
popa
pop
pop
je
sbb
retf
push
fwait
add
cs
ins
es
imul
xor
int3
pusha
jbe
inc
pop
mov
mov
ds
arpl
xchg
push
int
mov
jae
mov
jb
lea
mov
push
pop
add
gs
sub
sub
repnz
xchg
in
sub
sub
xchg
mov
repz
inc
(bad)
mov
(bad)
mov
pop
jmp
sbb
retf
stc
adc
ins
xor
outs
test
mov
lahf
xor
stos
lds
inc
ret
out
movs
cmps
dec
add
cmp
jne
cmp
(bad)
xor
fcmove
sbb
repz
call
inc
xchg
in
enter
nop
xchg
loop
mov
sub
popf
inc
xchg
(bad)
(bad)
rol
sbb
inc
xor
cwde
jg
sbb
ins
dec
cmovp
push
pop
cmp
sbb
popf
pop
push
das
(bad)
je
aaa
push
or
xor
jg
ror
xchg
sbb
jmp
jb
aam
jle
mov
je
mov
xchg
inc
cld
mov
adc
scas
push
xor
pushf
lods
xor
adc
jmp
mov
jmp
pop
scas
dec
popf
nop
add
push
jecxz
xor
in
and
aaa
jbe
bnd
jnp
lea
and
and
jno
(bad)
push
jg
adc
jb
outs
cmp
fs
xchg
sbb
nop
adc
or
(bad)
test
outs
fwait
pop
loopne
ss
mov
xor
and
jns
dec
adc
ss
push
cmc
sbb
movs
jnp
add
sbb
pop
push
stos
stos
sbb
xchg
cmc
add
sbb
aam
les
push
xchg
sbb
push
sahf
cmp
mov
or
(bad)
sub
sbb
pushf
adc
ins
call
or
test
jnp
jnp
fdivr
mov
mov
shl
push
mov
cmp
data16
es
ins
jp
adc
or
movs
pushf
xor
fld
mov
mov
sub
lock
daa
pop
jl
xor
jp
pop
popf
ja
xor
in
dec
ret
test
xor
jle
outs
or
pop
jae
cdq
cmp
jbe
pop
ss
mov
inc
mov
adc
imul
dec
mov
jo
dec
cld
sbb
sub
in
mov
popf
sti
mov
les
pop
pusha
test
movs
mov
or
add
pop
jecxz
push
add
add
xchg
test
ret
fs
in
add
scas
pop
ja
jb
rcr
sub
std
stos
jbe
push
add
test
or
cmp
imul
test
xchg
imul
push
test
int3
dec
push
jbe
aad
je
jns
ja
pop
and
add
fwait
loopne
xchg
retf
rcl
cmp
mov
mov
mov
int3
test
outs
adc
and
xchg
stos
js
movs
xlat
push
push
aaa
cmp
push
inc
sub
cmp
scas
inc
ret
cmps
(bad)
je
cmp
jg
sbb
(bad)
pop
in
dec
in
xor
pop
(bad)
out
push
sar
mov
jmp
ret
mov
mov
das
pop
daa
push
(bad)
cmp
push
sbb
mov
je
inc
fwait
push
in
dec
and
in
xor
xor
fadd
out
mov
adc
adc
cmc
adc
pop
or
fidiv
jle
ds
dec
ret
inc
(bad)
in
das
(bad)
xchg
xchg
push
or
imul
call
mov
jne
sub
(bad)
in
push
adc
xchg
jb
repnz
mov
mov
sti
das
xchg
not
enter
mov
jnp
mov
xlat
sbb
and
sub
fistp
bound
fcmovne
add
and
out
ror
add
xchg
outs
mov
mov
inc
aam
inc
das
dec
loope
int3
aam
sti
pop
out
push
lea
push
jbe
xchg
dec
ja
in
dec
arpl
mov
cld
lahf
push
mov
fild
in
push
fwait
xor
lods
daa
sub
ins
push
pop
push
mov
push
sbb
add
retf
xchg
jns
mov
inc
imul
xor
jb
popa
iret
and
jmp
lods
sbb
and
jb
test
sbb
ja
mov
fistp
adc
inc
jae
ficomp
arpl
jmp
lea
sub
ins
or
je
out
ja
test
and
mov
xor
lds
sbb
sti
test
mov
dec
xor
icebp
call
jae
inc
out
hlt
rcl
addr16
pop
and
mov
inc
dec
inc
sbb
repz
ds
push
or
out
pop
ins
adc
pop
jl
dec
jae
shl
inc
or
mov
pop
adc
jmp
adc
loope
ins
or
jnp
iret
arpl
in
cmp
mov
mov
adc
mov
sub
mov
mov
mov
data16
out
sbb
inc
pushf
js
pop
mov
loop
sub
and
retf
mov
xchg
call
sub
test
mov
addr16
cdq
sub
shr
mov
inc
mov
adc
div
fs
shr
jnp
or
xchg
jecxz
hlt
lds
xor
inc
test
pop
fcmove
aam
inc
push
pusha
hlt
popf
adc
leave
pop
sbb
rcl
mov
add
movs
cmp
mov
stc
sbb
icebp
loopne
mov
ja
sub
out
stos
pop
repnz
jp
fimul
mov
jle
mov
and
add
and
xchg
pop
repz
stos
mov
nop
and
jb
xchg
pop
aam
ins
rcr
mov
pop
pushf
in
jne
add
jae
mov
inc
sbb
scas
iret
je
outs
mov
dec
mov
(bad)
std
inc
stc
push
call
retf
sbb
jbe
sub
sbb
aam
jne
pop
dec
es
jb
aaa
pop
jbe
jg
clc
sbb
je
and
shl
rcl
cmp
xor
or
js
jge
xor
or
jmp
inc
in
push
mov
nop
xchg
aad
xchg
idiv
lods
mov
xchg
add
mov
cmps
mov
cmc
sub
xor
out
push
xchg
or
push
cmp
mov
jae
push
sub
lds
push
in
adc
shl
cmp
sub
imul
(bad)
mov
push
pop
mov
add
(bad)
xchg
and
mov
mov
xor
outs
xor
xor
push
fdiv
cmp
scas
xlat
ds
sbb
lea
loopne
mov
mov
jecxz
aam
(bad)
into
js
repz
inc
call
fdiv
sub
or
push
push
je
inc
stos
jb
ins
inc
jle
pop
push
push
mov
push
lock
daa
mov
jle
sub
xchg
xchg
cmp
les
pop
xchg
mov
dec
mov
hlt
adc
mov
inc
(bad)
outs
(bad)
pop
fldenv
push
mov
cdq
push
cmp
cmp
icebp
scas
pop
int
dec
leave
lock
bound
sbb
sti
jno
sbb
ins
aad
pusha
(bad)
jb
cmp
je
out
xor
stos
sub
shl
sti
arpl
adc
lock
rcr
call
mov
in
fmul
mov
sbb
gs
retf
push
mov
cdq
dec
inc
push
arpl
add
cmc
test
and
loop
adc
xor
repz
aam
js
mov
sbb
scas
mov
inc
adc
aam
cli
add
xchg
shl
mov
(bad)
hlt
(bad)
std
mul
sbb
cdq
div
jnp
add
mov
sbb
sub
sub
popa
ins
jg
adc
cmp
and
in
stos
inc
or
dec
hlt
aad
dec
fs
mov
jns
sub
mov
add
ins
stos
mov
jbe
ret
bound
cmp
jp
out
mov
add
jg
fisubr
inc
xor
scas
or
ja
dec
mov
icebp
es
aas
sar
je
adc
test
and
and
(bad)
mov
push
adc
sub
jge
(bad)
aad
loopne
test
xchg
pop
imul
jae
pop
push
sbb
rcl
test
mov
es
dec
jle
pop
inc
push
adc
xchg
cmps
movs
mov
adc
mov
mov
mov
outs
mov
or
pop
push
mov
inc
outs
out
inc
inc
jnp
xor
sub
(bad)
cmp
stos
stos
aam
outs
sbb
push
mov
test
sbb
ins
jmp
push
inc
int3
or
or
cdq
inc
imul
cmps
push
and
pop
push
out
gs
jmp
push
dec
(bad)
std
call
int3
imul
sbb
rcl
xlat
pop
jge
push
push
sub
mov
in
ret
cmp
mov
or
nop
call
repz
jg
in
sbb
mov
loop
mov
pop
fldcw
std
stos
cwde
cmp
dec
pop
(bad)
cmp
mov
sub
xchg
jb
loop
inc
into
mov
scas
das
cld
push
cmc
mov
jmp
mov
call
jl
sbb
jg
jge
shl
mov
mov
sbb
cmc
dec
clc
xlat
xor
mov
inc
mov
lods
call
xor
dec
jp
test
or
stc
jmp
cdq
pop
mov
xor
and
cmc
dec
sub
or
sub
push
imul
xchg
push
xchg
rcr
push
repz
or
in
dec
fmul
jb
jecxz
mov
mov
mov
pop
xchg
out
(bad)
out
mov
enter
movs
data16
cmps
scas
jecxz
in
xchg
cld
arpl
dec
lods
div
call
jp
mov
mov
jecxz
mov
mov
lods
bnd
sbb
push
mov
mov
fmulp
iret
inc
dec
pop
mov
fild
stos
inc
xchg
das
nop
cmps
jecxz
mov
aam
pop
fs
repz
jo
loopne
adc
out
add
mov
mov
push
mov
sbb
mov
cli
cmc
cld
rol
(bad)
popa
sub
push
rcl
mov
xor
push
dec
jmp
imul
inc
pop
push
adc
in
addr16
nop
xor
push
and
mov
cmp
out
mov
dec
cmp
pop
adc
jno
cmp
aas
jb
test
add
dec
imul
mov
jb
jae
jnp
jns
imul
inc
hlt
inc
lock
arpl
or
pop
jge
cs
mov
inc
inc
jne
xor
imul
aam
stos
ror
fwait
(bad)
std
movs
mov
div
mov
push
mov
push
jg
icebp
leave
xchg
xchg
in
xor
cmps
(bad)
stc
movs
mov
loope
imul
mov
pop
add
ins
lods
stos
fwait
push
or
lock
outs
xor
pop
xor
xor
push
mov
loop
mov
cmp
pushf
pop
add
ds
sbb
aaa
sbb
es
shr
les
fwait
clc
and
scas
dec
in
push
aam
sbb
in
sbb
adc
leave
cmp
dec
imul
push
clc
in
sbb
test
test
adc
jp
loop
scas
jge
dec
push
cmc
les
inc
mov
pop
repz
fbstp
shl
cmp
cmp
xlat
mov
adc
mov
pop
xchg
imul
gs
mov
das
inc
mov
outs
dec
dec
cmc
add
nop
mov
lods
je
das
pushf
push
sbb
xor
int
and
popf
inc
mul
jne
pop
xor
adc
push
and
cli
je
or
xchg
bound
mov
out
stos
out
loope
or
sbb
dec
jbe
fdivr
into
xor
call
dec
js
add
mov
push
jbe
jnp
mov
addr16
jnp
popa
jnp
das
add
jb
shl
add
dec
cmp
adc
ret
call
out
jbe
dec
enter
mov
or
inc
sub
add
inc
sub
mov
cmp
mov
aad
jg
mov
scas
push
cmps
bsr
cmp
je
and
xor
(bad)
out
scas
sbb
jmp
add
stos
adc
push
pop
sahf
dec
sbb
out
xor
jmp
mov
jne
mov
icebp
pop
adc
pop
adc
sbb
xor
mov
mov
ins
xor
inc
cmc
xor
cmp
sub
adc
fwait
push
sub
(bad)
jno
in
mov
mov
fiadd
fild
js
mov
cdq
mov
xchg
mov
mov
add
jne
iret
stos
lods
sti
ja
cmps
adc
adc
int3
pop
jnp
fbstp
mov
out
add
adc
adc
xor
pop
call
dec
mov
inc
and
jge
and
pop
jmp
call
jae
cmps
inc
sbb
sbb
sub
mov
mov
je
das
mov
retf
pop
adc
loopne
mov
enter
int3
pop
sbb
inc
push
jns
push
add
imul
jge
push
jle
adc
push
fstp
(bad)
xchg
mov
pop
inc
xchg
xchg
push
push
dec
add
data16
std
sbb
sub
stos
sbb
fist
fild
push
test
mov
aam
xchg
push
jmp
mov
xchg
daa
sub
push
lahf
addr16
(bad)
push
rcr
pop
popa
lock
ins
mov
std
push
sbb
jo
sbb
fwait
inc
jl
fbld
mov
loop
outs
mov
dec
enter
sbb
mov
sub
sbb
ror
pop
imul
lods
clc
mov
mov
cmp
jo
fcmovnb
fistp
iret
add
push
aas
dec
cmp
pop
(bad)
mov
jne
sub
out
adc
cwde
mov
stos
push
jb
inc
cs
jbe
outs
jp
pop
adc
ds
dec
mov
out
shl
test
arpl
lods
sbb
into
mov
test
shl
jmp
or
jbe
jmp
scas
ret
and
inc
cmp
sub
cmp
lods
test
and
std
(bad)
ja
and
xchg
retf
sbb
scas
mov
lahf
movs
(bad)
mov
add
sbb
jmp
mov
sti
es
int3
xor
mov
ins
inc
shl
mov
fimul
jmp
lods
cld
js
(bad)
lods
out
adc
mov
shl
(bad)
push
hlt
mov
jle
or
in
or
xchg
repnz
outs
mov
jne
nop
push
push
repz
dec
push
fsub
daa
les
ret
mov
dec
jnp
mov
je
imul
push
je
or
js
outs
cwde
fst
jo
ins
mov
mov
jns
stos
not
jmp
jae
or
mov
mov
push
cdq
sbb
(bad)
jecxz
les
or
xchg
push
and
loopne
adc
call
repnz
retf
xor
and
aas
mov
inc
xor
retf
fnsave
das
ret
dec
mov
jge
int
cmps
mov
(bad)
imul
jbe
in
mov
adc
jmp
fst
dec
ins
mov
jae
retf
push
fwait
adc
leave
cmps
or
xchg
add
rcr
addr16
sbb
mov
in
in
jae
xchg
mov
out
sbb
shld
jns
fs
sub
sbb
gs
mov
mov
int
jle
mov
sbb
pop
push
mov
xor
xchg
add
jp
stos
lods
stc
jmp
std
and
fwait
xor
das
clc
sub
mov
sbb
ret
jmp
inc
push
gs
dec
jg
jae
ret
enter
add
xchg
aad
xor
mov
add
add
imul
dec
inc
sbb
add
or
loope
mov
sbb
sub
test
cmp
stos
mov
retf
movs
outs
add
sbb
popa
mov
mov
pushf
mov
bswap
sahf
adc
cmp
iret
pop
sub
bound
std
mov
adc
mov
ins
ds
cmp
inc
test
ficom
cmp
ror
cs
sub
or
pop
sar
cmps
(bad)
lods
pop
scas
cwde
mov
into
scas
push
shl
pop
cmc
repnz
test
les
stos
inc
test
dec
pushf
ror
ret
sub
pop
push
sbb
or
dec
loop
daa
mov
leave
(bad)
adc
iret
(bad)
in
push
es
hlt
add
mov
stc
paddq
pusha
inc
sbb
ret
cdq
sbb
mov
push
push
in
int3
mov
dec
std
sbb
outs
push
mov
inc
test
dec
jns
adc
dec
lods
iret
clc
(bad)
mov
jae
das
dec
les
sbb
or
add
pop
popf
into
aam
fld
sbb
push
vxorpd
xchg
xchg
mov
mov
in
fidivr
je
dec
(bad)
les
inc
xchg
cmps
xchg
pop
push
jmp
dec
icebp
ins
mov
je
shl
and
daa
imul
or
out
sub
enter
sub
inc
sbb
cmps
or
fs
pop
sbb
test
xor
xchg
xor
xor
jmp
pop
aam
and
inc
push
repz
les
mov
retf
outs
push
xor
xchg
fcomp
dec
add
mov
mov
dec
js
inc
enter
int3
test
sbb
and
aad
push
outs
rep
mov
xchg
inc
xchg
cs
div
pusha
loopne
jae
sbb
dec
int3
pop
sbb
mov
ins
dec
mov
push
aaa
mov
pop
or
sub
mov
lods
adc
or
mov
in
fnstenv
clts
test
stc
idiv
xor
inc
les
jecxz
xchg
or
pop
sub
scas
jle
(bad)
mov
xor
jl
pop
push
clc
ins
push
cmp
mov
out
sub
punpckhdq
lds
push
iret
adc
adc
xchg
cmc
popa
xchg
stos
mov
push
xchg
idiv
(bad)
mov
jbe
pop
push
xchg
cmps
in
xor
push
xor
inc
or
or
cmps
and
cmc
mov
(bad)
(bad)
cmp
adc
xor
test
mov
outs
jmp
jb
addr16
mov
neg
sbb
inc
cmc
enter
enter
jne
jo
int
adc
aas
stc
lds
mov
cld
inc
adc
js
jg
loop
aas
leave
shl
rol
mov
mov
dec
dec
cmps
fcom
fbld
sbb
mov
retf
xlat
inc
add
xor
xchg
es
fdivr
js
adc
call
or
jnp
das
or
adc
test
pop
sub
das
inc
xor
sbb
aad
call
fimul
mov
adc
inc
cmp
mov
xor
shl
int
xchg
xchg
adc
outs
jp
inc
pop
into
jae
shl
das
rcl
mov
add
mov
add
xchg
lock
adc
xor
and
push
addr16
scas
jae
(bad)
out
ja
jp
dec
sbb
xor
jecxz
adc
mov
push
add
xchg
hlt
and
inc
sub
call
jo
adc
mov
sub
cmps
stos
aad
bound
inc
adc
test
test
arpl
push
aam
enter
jae
leave
mov
pop
sbb
pop
sbb
and
inc
or
aam
jnp
scas
call
or
push
data16
adc
aad
sbb
in
pusha
pop
pop
ror
jmp
rcr
test
xor
leave
add
cmp
je
add
or
(bad)
retf
ins
xor
call
jle
ror
and
sbb
repnz
jl
push
pushf
xchg
pop
repz
or
mov
jp
push
hlt
neg
fist
xor
push
mov
jb
sti
inc
sub
adc
push
aaa
cmp
mov
scas
fidiv
and
inc
movs
outs
js
sbb
pop
rcr
dec
xchg
lea
scas
rcl
movs
dec
mov
or
sub
cmp
mov
push
loope
mov
jle
sub
sbb
jae
fsub
or
adc
inc
adc
add
bound
popa
pop
cdq
lods
repnz
jmp
xchg
shrd
or
push
mov
aam
(bad)
xchg
hlt
movs
mov
arpl
mov
out
cmp
xchg
xchg
fcmovne
ret
pop
cli
je
dec
jnp
xor
pop
(bad)
in
loop
and
jecxz
xlat
push
adc
jns
enter
or
shl
imul
and
inc
sbb
inc
hlt
inc
xor
xor
push
sub
mov
repz
and
mov
jle
adc
inc
popa
mov
add
sbb
inc
cld
outs
mov
sahf
aaa
mov
jae
mov
sbb
cmp
test
retf
add
sar
adc
mul
cmp
cli
sahf
add
sbb
aam
fdiv
xchg
inc
mov
mov
xchg
fistp
das
sbb
lods
cmps
dec
ret
(bad)
mov
sbb
and
pushf
mov
ret
mov
call
jp
mov
push
add
xchg
inc
sbb
adc
jmp
pop
mov
in
jb
ror
sbb
pushf
xchg
xchg
call
jg
fist
sbb
scas
xchg
adc
pop
fbstp
sbb
jmp
jle
mov
inc
ins
leave
mov
out
xor
xor
and
mov
scas
mov
add
retf
xchg
aas
in
retf
cld
adc
movs
dec
sbb
xor
xchg
fidiv
fwait
outs
lahf
xchg
cmp
jmp
(bad)
addr16
sub
jecxz
stos
sbb
push
loopne
adc
ins
jns
cmc
add
aas
adc
adc
es
sahf
mov
push
in
mov
and
mov
or
scas
retf
(bad)
pop
imul
or
jnp
out
mov
push
adc
nop
jl
test
fldenv
mov
sbb
cli
imul
(bad)
stos
in
dec
sub
jno
adc
jnp
imul
mov
les
xchg
jae
mov
push
jge
sbb
adc
push
jle
add
mov
xor
fst
outs
dec
add
in
movs
sub
mov
das
lods
fs
mov
pop
(bad)
sahf
loopne
mov
lds
outs
push
shr
stc
inc
seta
cmp
addr16
std
arpl
dec
push
nop
sbb
inc
mul
push
and
and
aam
add
jnp
xor
shr
sub
xchg
movs
adc
ins
pop
ror
inc
ror
fcmovu
shl
sbb
mov
(bad)
loope
hlt
jnp
cld
outs
or
or
cmps
mov
mov
(bad)
jae
fs
mov
aaa
mov
inc
add
ja
mov
xor
or
inc
sbb
out
push
jbe
pop
inc
jae
mov
dec
mov
jnp
adc
adc
rcr
mov
inc
inc
fs
pop
push
inc
movs
xchg
aaa
jmp
sub
cmp
jae
fsub
loop
enter
(bad)
call
xchg
iret
xor
sub
mov
(bad)
imul
pop
or
shl
xor
dec
lods
dec
mov
mov
adc
inc
sbb
or
mov
cmp
sbb
add
lds
mov
stc
sbb
test
jle
fmul
push
fnstsw
aad
sbb
sar
arpl
xor
clc
add
sbb
mov
inc
lds
mov
cmp
jae
adc
dec
mov
mov
sbb
scas
(bad)
mov
push
add
push
add
mov
push
cmp
aad
push
mov
push
push
idiv
push
hlt
js
stc
test
sbb
xchg
pushf
xchg
xchg
mov
push
stos
aad
push
fsub
and
push
sbb
adc
out
(bad)
mov
push
int
xor
mov
out
repnz
cmp
ds
call
and
pop
out
xor
movs
je
xchg
dec
xchg
mov
aad
jns
movs
mov
dec
mov
iret
jp
out
js
loop
mov
push
je
stc
xor
mov
and
jg
test
add
hlt
cmp
and
push
add
lds
add
outs
loop
jae
pop
lods
ja
cld
sub
mov
pop
out
xlat
mov
sub
aad
sub
dec
je
xor
ja
sbb
cmp
inc
xchg
imul
push
adc
(bad)
mov
jns
jae
dec
mov
out
ja
cmp
sub
jp
sbb
(bad)
pop
lds
or
xor
or
sbb
mov
xchg
adc
jnp
push
stos
push
pop
loop
inc
popf
lods
outs
(bad)
repz
lods
mov
adc
fdivr
test
or
add
shl
fcom
js
out
loopne
and
jae
js
cmp
daa
je
or
rcr
pop
loop
pop
mov
sbb
xchg
mov
jae
and
addr16
(bad)
lods
aam
jb
adc
repz
xchg
xchg
xlat
aas
mov
sub
pop
lods
sbb
push
fadd
xchg
xchg
fild
pushf
pop
pop
pop
cs
div
call
push
neg
lahf
inc
mov
mov
mov
mov
mov
outs
add
jle
sbb
mov
sahf
inc
pop
popf
dec
lods
sbb
mov
add
jo
ficomp
fnsave
rcr
lods
aas
sbb
xlat
lea
stos
xor
adc
cmps
jmp
inc
sbb
dec
je
jecxz
pop
test
or
mov
pushf
enter
inc
lock
cmp
in
mov
pop
mov
retf
add
dec
test
cli
loope
push
leave
mov
out
not
lods
xor
retf
xchg
sub
dec
arpl
cli
in
js
lock
rcl
cmp
or
push
xchg
inc
sbb
or
jecxz
mov
dec
sbb
push
and
jle
jp
mov
push
outs
out
push
test
mov
(bad)
jae
adc
neg
xor
mov
or
ins
fadd
scas
inc
xchg
imul
fcomp
pop
xor
and
lods
imul
shl
(bad)
mov
push
cmp
inc
push
inc
hlt
fisttp
mov
push
hlt
add
mov
sbb
cmp
mov
mov
and
dec
push
mov
add
int
mov
mov
mov
sbb
call
push
xor
push
ja
hlt
and
push
inc
dec
dec
fwait
xchg
jle
mov
mov
imul
mov
sbb
mov
dec
jb
jl
mov
hlt
push
inc
mov
mov
cmp
imul
mov
(bad)
int3
xchg
add
mov
jae
in
push
pushf
mov
xchg
cmp
adc
int
in
jecxz
pop
sub
and
nop
sbb
add
bound
pop
cmps
jl
pop
push
bt
push
das
jne
xlat
pop
fisub
sbb
nop
gs
cmp
mov
pop
lods
or
aaa
jl
jmp
cli
add
sti
mov
dec
inc
xor
mov
inc
jmp
mov
in
or
retf
hlt
and
lods
int3
nop
sbb
sub
bound
les
ds
jnp
cwde
jmp
ror
push
cmp
iret
sub
ja
nop
call
out
sar
add
idiv
in
mov
sar
jmp
dec
pop
or
mov
mov
adc
xchg
rcl
idiv
les
dec
fidivr
aaa
pop
xor
call
in
fucomip
stos
int3
mov
or
ins
mov
sbb
repnz
pop
cld
stos
dec
cdq
iret
dec
bound
aam
test
mov
neg
shl
nop
inc
mov
ins
movs
sub
shl
je
test
mov
inc
(bad)
jb
cmp
pop
jge
jae
adc
mov
dec
pop
add
pop
dec
add
mov
cwde
imul
repz
dec
mov
sbb
xchg
or
jg
mov
push
mov
jbe
inc
rcl
pop
jmp
into
sub
jnp
mov
jns
fwait
aaa
mov
loopne
out
pop
jecxz
clc
jae
inc
and
aaa
mov
sub
in
nop
add
fld
fninit
lods
cmp
icebp
cli
hlt
sbb
and
jbe
lods
stos
mov
mov
cmp
mov
jno
inc
push
dec
in
mov
out
jne
xlat
cmps
addr16
sbb
dec
js
jbe
mov
add
inc
aad
pushf
push
sbb
pusha
ret
js
shl
or
arpl
xchg
sbb
stos
jae
jns
cmps
mov
xchg
ins
sub
pop
mov
aaa
jnp
out
push
sbb
pop
and
sub
jo
fisub
fucomip
adc
test
mov
imul
ror
ins
push
repnz
pusha
test
aaa
call
(bad)
sub
pushf
sub
sar
pop
jae
pop
cmp
ds
into
dec
jmp
mov
mov
fidivr
hlt
mov
xor
cmc
out
mov
inc
dec
push
popa
jae
enter
dec
aam
dec
ror
(bad)
dec
sub
std
sbb
jo
std
inc
sbb
addr16
(bad)
mov
push
sbb
mov
jl
mov
popf
shr
xchg
cmp
dec
fdiv
pop
int3
sbb
inc
sbb
addr16
outs
push
pushf
adc
push
sub
dec
push
movs
push
call
mov
cmp
jge
ja
ret
pop
(bad)
sti
push
mov
mov
sub
sbb
ret
lods
adc
scas
hlt
push
bound
push
int3
xor
jge
mov
mov
dec
in
or
dec
jle
pop
mov
dec
pop
xor
xor
pop
sti
inc
ror
jb
xor
mov
sbb
push
inc
repnz
fimul
test
adc
sub
mov
test
jle
xor
cmps
and
out
out
lea
dec
sar
(bad)
ins
ins
rcr
xor
xchg
sub
out
lock
ins
mov
popa
icebp
push
push
xchg
int
daa
xchg
or
mov
out
aad
jns
int3
xchg
mov
mov
ja
dec
jle
loope
cdq
imul
mov
sbb
shl
and
in
jge
rcl
ror
mov
fistp
mov
mov
stc
sbb
inc
xchg
cmp
adc
arpl
lds
rcr
jmp
in
sti
lods
mov
cmc
jp
sbb
call
mov
mov
jae
jmp
sbb
rcl
inc
xchg
iret
in
ss
sbb
mov
stos
loopne
mov
mov
xor
in
mov
add
dec
mov
repz
ss
dec
sub
inc
sbb
cmps
das
ret
xchg
stos
nop
xchg
std
jae
aam
int
iretw
sti
inc
jb
repz
call
fdivr
retf
jg
call
(bad)
pusha
out
bound
cmp
jge
push
in
repnz
mov
xchg
and
adc
bswap
jae
loope
out
mov
pop
jno
scas
mov
inc
sbb
pop
ret
sbb
daa
fistp
jmp
jl
fadd
fwait
or
mov
imul
inc
ja
adc
pushf
call
mov
cmc
gs
fld
in
hlt
jmp
ins
jbe
add
jae
sbb
push
sbb
xchg
div
add
push
adc
shl
into
push
aad
sbb
jle
movs
js
aas
xchg
cld
push
div
inc
call
pause
mov
call
xchg
mov
jbe
pushf
pop
test
push
mov
xor
mov
stos
mov
and
enter
retf
fimul
or
sbb
xor
cmp
ins
out
pop
fdivr
xchg
call
aas
sbb
(bad)
hlt
test
pop
stos
sub
int
cmp
dec
sahf
stos
int3
inc
mov
les
jnp
or
jae
lock
pop
dec
stos
xchg
imul
gs
lahf
loop
test
sbb
sbb
pop
inc
lds
jge
imul
adc
jle
mov
jo
scas
or
pop
jge
(bad)
and
jmp
push
adc
jae
sbb
xchg
std
xchg
mov
pop
jmp
mov
push
dec
or
inc
sub
rcl
repz
push
or
fwait
lahf
mov
mov
fstp
scas
sub
je
mov
jb
push
mov
mov
shl
mov
adc
sbb
mul
jae
mov
in
inc
push
and
repnz
xchg
add
and
sub
inc
dec
mov
push
inc
retf
mov
cld
xor
push
mov
not
pop
jae
popa
sbb
out
jae
rcr
push
jmp
imul
je
(bad)
jae
xor
inc
or
lods
xchg
movq
mov
jmp
fbstp
xchg
jb
pop
jmp
jae
push
pushf
fld
mov
mov
jnp
push
std
shl
jae
pop
jp
and
scas
push
scas
ss
scas
repz
outs
fs
push
outs
dec
ja
aad
ins
nop
fidiv
dec
xchg
push
mov
jg
mov
movs
shr
cmp
mov
cmps
daa
sub
pop
xchg
push
cmp
(bad)
or
ret
in
mov
push
jnp
dec
call
dec
sahf
gs
popf
xor
ins
mov
jns
rcl
outs
bound
shr
ret
sbb
test
daa
ret
jae
add
sbb
and
sar
mov
mov
xor
push
vmovss
ins
(bad)
hlt
repz
lds
stos
or
fiadd
stos
pop
xchg
test
and
xchg
jae
fstp
pop
inc
mov
push
inc
lea
or
sbb
jecxz
stc
sbb
mov
mov
(bad)
seta
push
mov
inc
push
jle
sub
in
pop
push
fld
out
ins
and
out
fxch
fdiv
test
mov
mov
cmp
push
aaa
sbb
stos
(bad)
sbb
mov
mov
lods
imul
mov
adc
push
inc
xor
fsub
sbb
movs
or
mov
es
fs
adc
jecxz
sub
push
test
aad
xchg
xchg
adc
add
xor
mov
sub
outs
mov
sbb
inc
or
pop
paddw
out
xchg
adc
cmps
adc
pop
nop
leave
jae
and
loopne
and
mov
shl
pop
mov
sub
test
gs
xchg
xchg
cmp
cmp
sbb
popf
xchg
pop
xchg
outs
bound
mov
dec
mov
inc
imul
scas
pop
dec
leave
mov
jg
sub
jae
call
sub
adc
mov
push
cmp
jns
mov
stc
xchg
shl
rol
inc
adc
cld
pusha
pop
lea
retf
mov
pop
mov
push
dec
and
cmp
sub
in
adc
mov
das
jbe
lods
sub
jno
loope
int
ror
pushf
mov
mov
or
jecxz
adc
sar
int
inc
xchg
xor
jmp
enter
cmps
jle
fsubr
scas
or
pop
pushf
push
pop
dec
fldcw
loop
jp
push
fidiv
mov
xor
ror
mov
or
xor
in
mov
not
aam
retf
mov
xchg
adc
es
out
inc
test
aam
or
bound
scas
mov
push
jmp
int
cmp
std
mov
sub
sbb
mov
pop
and
div
dec
jmp
scas
fnstcw
adc
(bad)
in
jae
xor
adc
xchg
js
inc
das
push
inc
sub
out
call
je
movs
mov
mov
inc
xchg
lods
jle
cmp
inc
xchg
or
sti
fisub
sti
push
mov
adc
mov
je
xchg
jmp
fldenv
shr
ins
lods
xchg
pop
and
mov
sar
call
nop
fnstcw
cmp
xchg
pop
xchg
jne
mov
xor
and
into
jl
fimul
or
push
ss
push
cmps
push
xlat
cmp
popf
jmp
cmp
je
cmp
xor
and
mov
or
jg
mov
pop
push
mov
and
fisubr
movs
ja
jae
int
mov
sbb
add
xchg
jl
call
sbb
push
cdq
clc
push
push
jg
push
pop
loop
dec
jb
into
xor
imul
xchg
push
mov
add
int3
xchg
imul
jae
jbe
xorps
mov
enter
xor
or
lock
lods
mov
out
adc
or
scas
sub
and
jno
sbb
aas
repz
pop
jmp
cdq
xor
cld
sbb
pop
out
shr
int3
mov
(bad)
ret
add
xchg
pushf
pop
sbb
xchg
inc
cmp
in
push
mov
in
push
inc
push
push
cmp
ror
adc
daa
stc
push
lods
xchg
inc
call
push
push
shl
xchg
mov
sub
add
mov
push
repz
jp
sub
mov
cmp
xchg
mov
xor
mov
mov
dec
mov
test
sbb
stos
movups
in
lahf
mov
out
cmp
pop
ror
inc
xor
repz
dec
mov
mov
dec
adc
call
xor
fimul
mov
xor
ret
nop
cs
or
jmp
xchg
retf
test
shr
jmp
dec
je
jae
jbe
fcmovne
retf
sbb
mov
cmc
pop
sbb
loop
pusha
das
cmp
test
imul
xchg
in
mov
mov
or
js
mov
mov
movs
xchg
scas
sbb
jo
out
js
aas
mov
into
push
jecxz
bound
mov
sub
sub
cmp
hlt
dec
test
fs
mov
test
mov
test
add
fstp
int
mov
jae
sub
mov
adc
hlt
cmps
jne
push
or
sahf
cmp
add
xor
dec
inc
cmps
cmc
in
push
retf
mov
in
les
sub
inc
retf
mov
jp
cld
imul
add
ins
stos
pop
outs
cmp
jo
sbb
sub
push
std
jb
pop
in
push
mov
dec
into
(bad)
ins
jp
mov
push
and
pop
imul
inc
dec
push
adc
xchg
jnp
mov
inc
aam
(bad)
xor
stc
ror
clc
adc
lods
sbb
or
retf
push
add
hlt
dec
lea
inc
jecxz
jg
leave
gs
lods
push
inc
mov
pop
push
push
inc
sbb
(bad)
jae
pop
in
cmp
mov
out
ds
xchg
int
mov
adc
pop
sub
xor
rcr
test
xchg
xchg
jmp
jae
jbe
and
push
imul
cwde
xchg
xchg
fistp
hlt
shr
daa
inc
lock
mov
add
push
ss
mov
cld
sub
aam
stos
xchg
push
or
jp
loop
mov
mov
cwde
ret
sub
mov
adc
inc
mov
ja
push
cmp
cdq
mov
pop
mov
xchg
xchg
loop
and
mov
bound
ret
and
xlat
and
pop
cmp
push
push
aad
movs
mov
bswap
sar
clc
sub
push
jecxz
dec
sbb
daa
adc
sbb
fmul
and
imul
aaa
test
sti
push
ins
mov
push
ds
push
sbb
xchg
mov
xchg
dec
and
lods
aas
jmp
cmps
cwde
cli
mov
mov
or
jl
pop
bound
ja
mov
es
std
sbb
sbb
sub
call
call
sbb
movs
cmp
and
aad
aad
hlt
retf
aam
jmp
jb
enter
fsubr
mov
in
push
lock
or
mov
jb
xchg
adc
sub
scas
jnp
jo
xlat
add
and
xor
lock
test
das
dec
cmp
xor
push
repz
gs
dec
fstp
outs
sbb
push
mov
aam
jne
ds
push
(bad)
mov
fmul
mov
lea
xor
xor
cmps
repz
jno
mov
jmp
dec
adc
into
add
ret
hlt
xchg
sti
stos
pop
dec
lea
push
les
and
sub
scas
fstp
jae
inc
mov
sub
sbb
dec
adc
jb
adc
and
or
in
pushf
in
pop
imul
cmp
xor
shl
bound
pop
int3
xchg
mov
cmp
push
mov
inc
gs
loop
aam
and
xchg
mov
movs
mov
popf
mov
cmp
pop
clc
mov
mov
test
lds
adc
inc
cmp
xor
add
int
push
pop
aaa
pop
cmp
push
dec
dec
add
(bad)
arpl
leave
in
or
movs
and
int3
in
push
dec
shl
mov
aad
pop
ss
hlt
sub
jb
(bad)
maskmovq
not
loope
mov
addr16
jns
and
jmp
push
push
repnz
shl
jg
jl
sbb
dec
xchg
pop
mov
outs
fisub
inc
push
shr
das
popa
xor
imul
xchg
mov
push
sub
adc
shl
mov
dec
sbb
jmp
cmp
out
mov
sub
or
outs
pop
add
in
mov
test
or
stos
xor
pusha
sahf
mov
dec
js
aam
mov
dec
outs
or
dec
scas
call
(bad)
jb
sbb
inc
stos
sbb
and
daa
nop
psubw
sbb
neg
mov
mov
xchg
and
jae
aam
and
lea
das
sbb
lods
sub
xor
xor
mov
aad
mov
xchg
pop
cmp
sub
dec
lods
dec
xor
clc
dec
out
push
xchg
pop
xchg
xchg
rcl
add
inc
pop
adc
jmp
nop
pop
movs
iret
aam
mov
pop
sbb
fild
add
mov
out
shl
push
pop
xchg
repnz
je
cdq
jb
mov
mov
sub
xchg
lods
and
mov
jmp
outs
xchg
or
dec
je
daa
mov
jl
mov
dec
xchg
push
mov
dec
ds
les
cmps
and
xchg
jl
inc
shl
cmp
or
and
pop
xchg
add
and
dec
push
(bad)
int3
push
(bad)
je
jnp
(bad)
cli
inc
adc
jo
sub
xchg
lahf
cli
fwait
test
adc
inc
stos
sub
xor
push
js
dec
imul
scas
or
mov
out
outs
add
pusha
jo
imul
mov
loope
fnsave
sbb
sbb
mov
inc
push
sbb
xchg
pop
fst
jae
retf
call
les
retf
ds
cmp
test
cmps
jp
addr16
ret
(bad)
fisub
xchg
movs
test
popa
(bad)
jne
push
outs
jnp
fldenv
adc
std
mov
xchg
sub
jecxz
mov
mov
jae
iret
xor
scas
jbe
jb
mov
js
shl
xor
sub
xchg
or
imul
sbb
xchg
add
lea
sub
test
sti
imul
outs
shr
dec
rol
cmp
ins
sti
ret
int
ret
ins
xchg
stos
retf
jnp
fadd
fld
pop
xchg
xor
iret
imul
ss
fnstenv
mov
sbb
mov
inc
dec
inc
sub
jnp
sbb
(bad)
mov
pop
daa
dec
sub
cmc
div
xor
adc
out
dec
mov
cmps
daa
stc
mov
cdq
loopne
add
std
nop
and
fistp
and
and
xor
mov
mov
jmp
out
mov
outs
cwde
inc
dec
mov
push
iret
sub
add
xchg
mov
shl
fs
mov
mov
enter
sbb
cmp
and
fidiv
jo
mov
xor
sub
sahf
loop
lods
mov
mov
dec
mov
pushf
fwait
cmp
ds
mov
std
int
push
mov
jmp
jmp
in
pop
push
pop
or
into
sub
cmp
push
xchg
dec
sbb
call
es
xor
push
std
in
sub
sti
fsubp
sbb
iret
sti
sbb
mov
cmp
cmp
scas
loope
add
xchg
jnp
inc
or
enter
lahf
ret
sbb
pop
dec
call
pop
cmp
ins
sub
lods
stos
cmps
and
dec
mov
cmp
fidiv
rcr
arpl
dec
clc
pop
push
mov
dec
int3
jge
mov
mov
adc
inc
jnp
into
mov
popf
outs
mov
cmp
add
adc
mov
call
nop
cmp
loop
jmp
sub
cs
pop
cdq
cli
push
jno
add
adc
or
push
lods
int3
fsub
add
call
xchg
arpl
or
sub
dec
sub
int
inc
stos
mov
ret
and
ins
cmp
mov
jg
faddp
inc
adc
mov
cmc
adc
mov
mov
xchg
out
xor
jl
scas
dec
pop
xor
sbb
(bad)
(bad)
xor
xor
xor
add
adc
mov
fs
outs
jae
dec
cmc
loope
rol
adc
popa
ret
mov
cs
stos
mov
add
pop
pop
lea
mov
test
xchg
test
mov
jae
call
movs
xor
mov
cmp
pop
mov
clc
stos
lea
ror
dec
stos
arpl
mov
adc
dec
mov
dec
js
cdq
shl
je
mov
xchg
nop
or
push
inc
retf
xor
dec
jecxz
and
jne
pop
loope
dec
mov
hlt
jnp
leave
mov
adc
scas
adc
loop
enter
cwde
pop
adc
outs
xchg
enter
mov
mov
xor
push
sub
cmp
movs
add
jae
ds
pop
or
out
push
mov
mov
ins
int3
nop
pop
pop
xor
repz
jne
xchg
cwde
jnp
out
aas
iret
or
stc
je
xchg
inc
in
shl
std
xchg
add
pop
test
jns
(bad)
cli
dec
push
mov
push
add
and
jae
mov
test
sbb
jno
leave
adc
mov
ins
adc
mov
jbe
pop
scas
pop
jnp
jae
cdq
shr
cmp
in
mov
xchg
xchg
loopne
mov
jb
sti
fist
call
lahf
fisub
cmp
sti
adc
call
adc
in
xlat
mov
sbb
hlt
in
pop
retf
push
xchg
adc
cmp
cld
cli
xor
inc
repz
xchg
pop
cmp
fwait
xchg
jmp
stos
mov
test
jae
push
pushf
mov
ficom
ja
jg
sub
aaa
push
mov
xor
xchg
sub
iret
imul
add
push
or
jae
fdiv
jl
dec
stos
aaa
dec
mov
std
outs
aad
pop
sbb
mov
dec
mov
clc
push
hlt
mov
cmp
mov
pop
mov
jo
mov
or
adc
xor
push
popa
rol
or
cmps
out
ins
loopne
pop
sbb
adc
(bad)
cmp
adc
jns
ja
add
xchg
inc
in
add
jae
pushf
xor
jns
add
(bad)
data16
bound
pop
out
adc
mov
(bad)
and
cmp
xchg
adc
cmp
aam
xor
and
jge
(bad)
pushf
pop
loop
lods
inc
hlt
mov
or
jmp
imul
mov
mov
push
stc
lds
out
xchg
out
popa
xor
fdiv
inc
jae
les
mov
in
sbb
jmp
call
xor
adc
push
jo
mov
jae
iret
stos
or
icebp
xchg
dec
sahf
scas
dec
mov
and
adc
and
mov
xchg
mov
cld
mov
sub
mov
jns
or
dec
test
mov
pop
scas
sub
sahf
adc
ret
add
(bad)
sbb
sbb
or
push
xor
outs
add
ror
fisub
je
mov
and
outs
int3
nop
mov
jns
aaa
lock
sbb
leave
or
mov
pop
mov
ret
aas
push
cmp
test
fs
adc
jmp
xchg
jle
inc
cmp
mov
xchg
dec
fs
mov
pop
jno
iret
inc
pop
imul
add
and
outs
test
jae
mov
sti
(bad)
push
lea
xchg
mov
outs
in
aad
jo
test
lahf
push
mov
push
sub
stos
dec
fcom
aaa
movs
dec
out
xor
add
mov
ret
fstp
aaa
ror
jae
movs
out
in
pop
push
mov
inc
jns
scas
jae
inc
rol
add
mov
mov
mov
pop
ret
pusha
je
sub
push
dec
mov
or
shl
mov
popa
xchg
stos
ins
adc
jle
(bad)
mov
sub
fisttp
jae
mov
mov
bound
leave
mov
cmp
adc
cwde
add
fbld
(bad)
int
lahf
pop
push
stos
mov
jecxz
(bad)
(bad)
popa
or
outs
jg
in
and
loopne
xchg
push
xlat
or
jle
hlt
jb
mov
mov
pop
stos
dec
lds
sbb
clc
xor
add
fsub
lea
les
mov
js
dec
lods
movs
js
iret
jmp
mov
test
fcom
xor
mov
sbb
in
shl
popf
add
and
cmps
ins
inc
dec
xchg
int
es
mov
mov
mov
jns
jl
aaa
call
(bad)
mov
mov
(bad)
xchg
cli
mov
mov
inc
xchg
repz
fwait
test
in
jns
adc
fadd
xor
movs
push
mov
and
mov
pop
cmp
jecxz
mov
cs
mov
jo
xchg
xchg
ds
pop
pop
test
dec
jae
or
ret
inc
fmul
sbb
mov
inc
sbb
out
sub
hlt
xchg
jl
jae
movs
pop
mov
sbb
out
xchg
or
jae
in
fisubr
(bad)
cmp
sbb
cmps
imul
mov
stos
mov
sbb
xchg
push
(bad)
mov
mov
xchg
add
xchg
jb
xchg
arpl
mov
ret
stos
iret
ins
cmp
cwde
push
xchg
js
cmp
aad
adc
imul
sub
sbb
in
xor
xor
inc
mov
add
popa
mov
hlt
fidivr
sub
mov
and
mov
scas
push
mov
add
call
pop
imul
(bad)
pusha
mov
cmc
dec
sub
lods
mov
pop
dec
test
pop
jae
xor
mov
js
pop
(bad)
jmp
cmp
inc
and
fstp
pop
and
add
xchg
aaa
imul
dec
inc
jle
xchg
add
jne
jge
push
jae
je
(bad)
mov
imul
pop
fdivr
adc
mov
mov
cmc
dec
adc
fcomp
fdivr
ficom
iret
jae
add
movs
cmps
fisub
lds
cmp
pop
mov
push
mov
cmc
mov
and
xchg
mov
out
jl
push
pop
test
jo
mov
sbb
in
sub
xchg
mov
mov
out
scas
rol
cmp
lock
cmp
mov
inc
push
jg
pop
xor
dec
and
xchg
pop
mov
jb
fisttp
dec
dec
mov
mov
add
cli
bound
imul
push
ficom
xchg
call
jae
mov
mov
xchg
ret
xlat
dec
and
sub
mov
shl
addr16
xor
arpl
fisub
repz
ins
pop
jmp
pop
inc
jmp
lahf
jne
movs
sbb
xor
adc
test
arpl
imul
pop
cmc
pushf
scas
adc
mov
dec
xor
pop
dec
(bad)
aam
jbe
js
sub
xor
pop
add
out
sbb
jne
xor
into
je
lods
fcmove
pop
shl
mov
and
xchg
ins
xchg
or
jmp
push
sub
push
out
sbb
adc
sub
and
arpl
ins
mov
hlt
call
jbe
lds
stos
push
push
addr16
mov
xchg
mov
mov
movs
push
push
dec
xchg
xor
xor
or
pop
mov
mov
sub
test
jmp
xlat
inc
out
and
je
and
cmp
mov
sbb
adc
scas
sbb
into
xor
add
inc
mov
in
sbb
xchg
popf
enter
cdq
adc
adc
test
jge
jae
pushf
cld
push
dec
xchg
mov
scas
test
sbb
inc
dec
xor
inc
outs
cmps
dec
ror
push
mov
test
sbb
mov
in
inc
pop
mov
sbb
(bad)
das
dec
add
stos
out
(bad)
(bad)
sar
jb
adc
add
std
xchg
fidivr
ret
fs
mov
je
push
stos
stc
popa
shl
adc
inc
push
xchg
push
mov
xchg
mov
jp
inc
call
push
push
das
xlat
jns
es
or
imul
sbb
daa
inc
ins
pushf
mov
(bad)
cs
mov
sub
outs
sub
mov
hlt
ja
test
xchg
mov
in
ret
popf
daa
stos
ja
movs
lods
dec
inc
test
jae
in
jb
loopne
adc
mov
lock
xchg
add
cli
cmps
dec
ret
mov
adc
mov
hlt
je
and
jno
xchg
aam
or
sub
xchg
add
mov
cmps
call
in
sbb
inc
cmp
das
lea
or
inc
dec
adc
cmc
sbb
xlat
in
fadd
retf
mov
fild
test
movs
mov
mov
push
sbb
outs
xor
jge
popa
sub
and
or
retf
shl
pop
jl
call
and
push
aam
dec
sbb
cmc
mov
mov
hlt
retf
sar
mov
pop
stc
cmps
pop
mov
je
jns
mov
lds
(bad)
fs
mov
hlt
mov
mov
push
popf
and
dec
jb
xlat
or
ret
jno
jmp
jmp
gs
mov
lock
inc
push
scas
and
imul
retf
sub
outs
mov
inc
or
stc
int3
pushf
jns
mov
test
add
push
inc
xchg
dec
cmp
pop
inc
je
jmp
popa
dec
sbb
add
lds
inc
fs
xor
jmp
mov
jmp
mov
mov
js
test
dec
mov
mov
xchg
dec
xor
outs
and
push
adc
lods
sbb
aam
lods
xor
jmp
inc
adc
jg
mov
in
ja
sbb
sbb
push
aaa
pusha
sti
hlt
mov
add
add
or
push
dec
pushf
inc
sub
mov
mov
xchg
test
ds
fwait
adc
adc
ret
and
mov
cmps
cmp
mov
clc
add
cmps
out
jo
pop
enter
push
and
sub
mov
mov
je
rol
push
dec
push
jge
aad
int
mov
lods
and
and
mov
pop
push
stos
jmp
push
test
fidiv
lods
jb
fild
out
mov
scas
fwait
mov
in
and
sub
pop
adc
add
jae
sbb
fist
pop
js
xlat
push
loop
jp
xor
icebp
test
rol
mov
ja
jg
jl
jae
lahf
sub
jb
push
pop
icebp
jp
ins
xchg
cli
xor
(bad)
sbb
dec
gs
mov
out
pop
or
lods
fwait
stos
xchg
push
inc
ss
jo
adc
sbb
adc
fs
lods
jae
sbb
arpl
imul
mov
ins
movs
imul
pop
jne
aaa
mov
mov
mov
jb
jmp
sbb
addr16
test
jb
mov
or
cwde
dec
push
movs
jne
sbb
ins
lds
aaa
(bad)
imul
popa
pop
sbb
hlt
adc
inc
mov
mov
jb
retf
movs
fsub
aam
or
or
inc
mov
push
cmp
xor
push
popa
int3
xor
test
add
sbb
sub
xchg
and
fwait
push
cmp
mov
das
iret
add
or
jge
das
pop
fld
mov
sub
popf
es
daa
mov
arpl
or
cmp
xchg
adc
jle
mov
adc
and
push
xchg
sbb
(bad)
mov
bnd
cmp
jo
mov
out
ds
dec
or
or
lds
movs
retf
push
and
(bad)
stos
data16
xchg
jp
ds
fisub
movs
mov
out
push
mov
sub
add
jp
aad
adc
aam
xchg
loopne
mov
sbb
rcr
fild
mov
sbb
mov
(bad)
cld
movs
and
pusha
xchg
jg
cli
sub
adc
xchg
push
and
jae
mov
in
sbb
pusha
in
mov
stos
inc
pop
pop
and
ja
sub
das
imul
je
jl
call
mov
ds
inc
imul
jmp
hlt
into
stos
mov
dec
mov
lods
icebp
mov
mov
arpl
dec
push
jmp
das
in
and
mov
inc
(bad)
test
jae
adc
leave
sbb
out
mov
mov
sbb
sbb
cmp
sub
retf
repz
xchg
mov
dec
adc
mov
lods
shl
lods
sti
ja
jns
jmp
out
add
enter
ret
push
mov
outs
mov
and
push
sbb
xchg
in
scas
ja
addr16
ins
and
ins
sub
hlt
inc
pop
push
push
int3
aaa
cmc
cmc
sub
inc
test
inc
int
scas
dec
jmp
pop
movs
mov
jecxz
lahf
leave
mov
jl
ret
mov
pop
push
cmps
sbb
and
mov
jae
add
push
dec
scas
jl
jp
adc
sub
ret
inc
jmp
repz
xor
sti
retf
cdq
push
dec
test
inc
adc
jne
xchg
adc
rcl
or
js
mov
mov
leave
dec
xor
retf
imul
pop
and
cmps
or
int3
mov
cs
cs
xor
push
sbb
xor
and
pop
scas
mov
mov
je
cmp
mov
add
xor
jmp
adc
lods
cmps
mov
push
mov
fs
cmp
stc
xchg
mov
por
test
and
out
jg
xor
mov
sbb
stos
pop
fwait
mov
or
pop
lods
cwde
cmp
and
inc
pop
test
push
pop
je
inc
or
lods
jno
shl
ret
and
(bad)
imul
adc
(bad)
gs
fwait
jp
sbb
sbb
(bad)
dec
pop
ins
jnp
inc
sub
rcl
jecxz
mov
ror
scas
or
addr16
xchg
cmp
mov
out
jne
cli
sub
mov
xchg
jo
(bad)
mov
jae
mov
adc
dec
scas
rcr
xor
stos
mov
sub
sbb
pop
xchg
leave
jnp
jb
rcr
je
add
jg
icebp
cmp
xchg
ja
xor
call
call
into
dec
mov
mov
ror
sub
jl
lods
pop
inc
call
scas
sbb
sub
mov
and
jne
mov
cli
cmp
inc
add
iret
jp
cmp
daa
popa
mov
sub
or
stos
leave
sub
pushf
mov
es
icebp
cli
xchg
jp
test
out
fstp
pop
(bad)
inc
cmp
cmc
retf
cwde
inc
adc
cmp
jne
rol
lods
out
mov
jae
mov
pop
mov
sar
in
add
fidiv
xchg
mov
es
imul
cmps
mov
sbb
mov
sub
and
pusha
mov
inc
into
pusha
pop
je
gs
mov
loop
shl
pop
jne
adc
xor
out
call
jge
dec
jb
xor
test
hlt
iret
add
cmp
adc
adc
mov
loope
enter
jb
mov
stos
pusha
ja
sbb
fst
das
aad
jae
aam
cmp
jl
inc
data16
clc
jp
xlat
cmp
pop
jl
imul
sbb
aaa
pop
and
push
in
rcl
int3
(bad)
jb
jns
mov
fmul
add
(bad)
dec
jno
jbe
sbb
je
loopne
dec
in
xchg
int
fnsave
stos
inc
mov
lahf
in
ret
jb
adc
nop
int
out
fs
adc
mov
mov
cld
mov
fwait
xchg
in
and
cs
jb
mov
mov
mov
xchg
xlat
movs
adc
std
sti
ror
push
aam
ret
shr
mov
out
(bad)
hlt
cmc
xchg
push
std
leave
dec
pop
dec
add
(bad)
dec
xchg
push
out
or
hlt
add
adc
sti
and
fldcw
adc
jmp
pushf
pusha
stc
out
ret
pop
into
rol
test
push
aam
sbb
fs
push
(bad)
repz
loope
scas
es
mov
cmc
xchg
rcr
daa
push
mov
or
xchg
test
mov
inc
mov
(bad)
xor
test
enter
mov
fldenv
jg
push
push
push
adc
pop
mov
lahf
retf
dec
arpl
cld
fnsave
mov
sbb
xchg
dec
stos
loop
ret
clc
add
daa
mov
int
xchg
xor
call
test
adc
in
fs
inc
or
lds
pop
inc
popa
cmps
mov
pop
shl
jb
cld
jmp
imul
jbe
psubusb
imul
adc
push
rol
(bad)
outs
fidivr
push
(bad)
hlt
sub
sub
fidivr
aad
jp
int
cmp
jae
or
mov
lods
add
sub
cmp
jecxz
jno
sub
das
sub
jp
sbb
cmc
pusha
push
lods
sbb
ins
sbb
mov
mov
cwde
jne
(bad)
push
dec
sbb
adc
mov
adc
mov
aas
sbb
jg
add
sub
xchg
inc
mov
cmp
jb
outs
sbb
push
add
ret
cmp
je
sbb
scas
in
fdiv
call
lahf
push
aam
jbe
xchg
bound
pop
loope
fs
sbb
mov
or
stos
push
mov
mov
mov
and
repnz
fmul
ficom
stos
or
and
scas
xchg
or
push
mov
mov
mov
popf
stos
sahf
shr
pushf
or
ds
adc
mov
divps
adc
inc
xchg
sbb
inc
dec
mov
pop
xchg
mov
jae
xlat
jle
(bad)
stc
sub
sbb
sbb
adc
jbe
stc
mov
and
movs
xchg
sub
mov
adc
leave
jp
(bad)
jbe
movs
add
push
sbb
mov
int3
xchg
push
stos
hlt
dec
out
arpl
out
mov
int
sbb
mov
pushf
rol
mov
inc
add
ins
stc
arpl
mov
sub
sub
cmp
or
mov
jmp
popa
push
xchg
jne
stos
shl
dec
xchg
dec
or
and
dec
mov
or
dec
pop
js
cmps
sahf
xchg
inc
inc
xor
mov
xor
lods
push
xchg
xor
aas
cmp
enter
xchg
pop
xor
and
jl
xor
adc
scas
lods
push
pop
adc
sar
ret
inc
test
jno
neg
push
loope
lds
push
stc
fcom
sub
retf
jno
adc
jg
ins
xor
rcl
sub
sahf
cmp
(bad)
jae
inc
adc
addr16
dec
out
jno
stos
stos
cmp
pop
aad
and
push
mov
cmp
dec
int
mov
shl
nop
jbe
call
cmps
mov
jae
into
or
mov
dec
test
test
push
cmp
lods
add
aam
sbb
popa
jmp
shl
mov
jae
mov
ins
hlt
xchg
into
(bad)
je
int3
out
out
push
xchg
fwait
stos
dec
adc
(bad)
(bad)
ficomp
scas
mov
cmp
dec
push
pop
inc
mov
inc
div
dec
rol
add
mul
fcom
cld
jmp
(bad)
fld
test
jle
sti
mov
lds
jae
or
retf
cmp
test
je
scas
stos
scas
jb
pop
inc
fistp
out
lahf
push
cmc
xchg
scas
popa
f2xm1
retf
add
or
fiadd
gs
cld
test
cmp
add
sub
mov
int3
in
iret
mov
xor
mov
mov
js
mov
inc
jns
jne
pop
sahf
lods
and
mov
mov
push
push
cmps
jg
fsubr
add
xchg
jp
fwait
and
pop
outs
fst
iret
int3
mov
or
cmp
retf
push
add
shl
in
cmp
popa
imul
daa
adc
mov
xor
mov
adc
xchg
bound
cmps
jae
scas
rol
call
imul
call
jae
xor
popf
imul
push
sbb
leave
cdq
xlat
dec
add
(bad)
int3
ret
xor
aam
rcr
ins
pop
loopne
fldcw
dec
jbe
test
fadd
pushf
xchg
pop
scas
test
dec
mov
mov
leave
or
call
rol
(bad)
jl
in
cwde
xor
test
out
pop
out
aas
ins
jp
push
(bad)
sbb
das
push
inc
push
jle
popa
repnz
mov
les
push
jae
xor
(bad)
cmp
imul
add
fmul
add
xor
int
jbe
in
sbb
jno
inc
movs
out
sbb
inc
or
push
pop
addr16
pop
in
lds
es
mov
out
push
jo
dec
fstp
sbb
test
inc
test
clc
push
dec
xor
jnp
sbb
outs
mov
(bad)
test
mov
sub
or
cmp
push
dec
xchg
sub
iret
adc
dec
sbb
div
scas
(bad)
je
mov
xor
cmp
das
jecxz
mov
push
je
loope
(bad)
push
xchg
push
inc
mov
or
dec
jmp
pop
fsub
sbb
mov
push
in
adc
mov
mov
dec
arpl
jb
xlat
test
push
mov
mov
stos
xchg
shl
jne
mov
xchg
ret
int
xchg
mov
inc
or
lea
add
ret
sbb
xor
int
mov
mov
dec
inc
mov
fsub
lea
loop
mov
inc
sbb
scas
or
sub
cmp
mov
inc
sbb
je
stc
mov
sub
fisubr
leave
push
mov
push
jmp
adc
(bad)
pusha
mov
test
add
push
mov
mov
and
dec
jge
enter
mov
cmc
out
mov
mov
dec
push
lods
add
push
std
xor
or
cdq
push
adc
fwait
push
fmul
push
ret
(bad)
loopne
dec
jne
addr16
mov
call
xchg
rcl
es
xchg
cmp
or
retf
inc
inc
push
mov
int
pop
jmp
call
mov
aaa
jmp
inc
sbb
retf
or
(bad)
cmp
rol
sti
js
mov
imul
retf
mov
jae
out
mov
(bad)
pop
dec
arpl
pushf
lock
inc
lods
mov
and
or
dec
aaa
jo
push
pop
test
outs
call
inc
fbstp
(bad)
fwait
icebp
scas
aas
std
adc
cwde
push
test
das
outs
retf
in
lahf
call
jb
fcom
jnp
fcmovbe
leave
xor
(bad)
das
jle
ja
dec
mov
jae
push
cmp
sti
aaa
fs
(bad)
(bad)
sbb
pop
jmp
cmp
cmp
adc
outs
adc
inc
iret
lds
rol
push
push
addr16
test
xor
ins
ficomp
pushf
out
mov
ret
lods
rol
ins
sbb
push
and
pmuludq
pop
aad
pushf
jne
xchg
xchg
cmc
and
ja
loope
cmc
jae
test
sub
ret
fwait
jne
sub
mov
dec
add
push
xlat
adc
mov
push
sub
adc
xor
call
xchg
xchg
popa
jnp
sbb
sahf
aad
push
dec
cmp
je
ds
ss
in
jne
sbb
dec
inc
adc
xlat
dec
in
adc
sbb
fdivr
mov
jmp
push
cmps
(bad)
dec
jmp
popf
lds
(bad)
stos
pop
or
sbb
sub
shl
or
cli
dec
aad
sub
mov
stos
cmp
mov
adc
mov
xor
sbb
fcomp
test
js
push
mov
mov
call
sub
jmp
xchg
inc
pushf
xor
ror
sbb
mov
pop
mov
or
aad
lods
xchg
mov
cmp
xor
jne
fs
jle
xor
push
xor
std
mov
and
sbb
jge
rol
pop
ins
cmps
mov
push
scas
shr
loop
push
mov
loop
ret
jbe
cmp
mov
dec
in
jmp
adc
mov
pop
pushf
inc
repz
ret
sbb
pushf
push
imul
aas
mov
pop
or
repnz
mov
add
push
out
cmp
cmp
mov
inc
clc
mov
xchg
xor
cmps
xor
push
push
mov
pop
mov
mov
ret
cmp
cli
frstor
dec
dec
test
stc
mov
aam
cmp
jp
xor
ins
xchg
jp
ja
add
push
pop
ficom
dec
js
call
inc
test
leave
sbb
out
lahf
xor
sahf
xor
mov
cld
cdq
int
cwde
int
hlt
mov
inc
(bad)
std
mov
ror
jae
scas
popf
jecxz
fst
xor
push
dec
ins
sti
push
xchg
add
jmp
jae
mov
scas
shr
mov
or
push
mov
nop
repz
ret
push
stos
add
arpl
(bad)
fs
scas
push
sub
cdq
inc
mov
sbb
mov
jno
fldenv
aaa
scas
imul
sbb
fistp
sbb
fisttp
outs
mov
(bad)
and
xor
fld
inc
cmp
hlt
not
ret
jecxz
pop
je
add
hlt
xor
(bad)
mov
mov
stos
sbb
(bad)
cmp
xchg
repnz
add
js
pop
mov
imul
mov
inc
aam
ds
mov
dec
mov
mov
xchg
push
fld
test
fst
sub
jbe
int
dec
push
or
or
jae
push
lds
repz
out
int
(bad)
scas
fs
aad
pushf
mov
xor
jge
dec
mov
cld
lods
mov
xchg
add
hlt
repnz
adc
xchg
jne
sub
pop
xchg
retf
inc
sbb
jge
cmps
sub
push
xlat
call
dec
adc
xchg
push
or
sub
inc
das
(bad)
jb
test
inc
shl
push
and
mov
lods
pop
shl
xor
mov
jae
and
cmp
fcom
mov
jmp
(bad)
icebp
jg
fcomp
cmps
cld
inc
pushf
push
xchg
cmp
mov
lahf
mov
aaa
arpl
into
sbb
mov
cmc
adc
popf
push
pop
(bad)
sbb
mov
push
mov
cmps
mov
je
cmp
es
adc
mov
call
jns
mov
xchg
jae
clc
pusha
jmp
sar
mov
add
ja
jae
push
push
mov
sbb
sbb
add
and
test
jnp
xor
mov
add
out
call
pop
aaa
mov
ret
xlat
outs
push
mov
xchg
adc
cmps
sbb
or
inc
icebp
mov
mov
mov
mov
mov
adc
adc
pop
adc
stos
shl
xchg
pop
pop
inc
sub
xor
push
clc
sub
(bad)
(bad)
call
xchg
mov
inc
pmaxsw
sbb
add
push
(bad)
mov
sbb
ret
add
inc
aad
clc
jge
ins
in
dec
add
retf
jo
cli
mov
loopne
jmp
pusha
xchg
lahf
fistp
jl
pop
fbstp
add
das
in
or
jns
jae
mov
shr
(bad)
stos
sti
dec
ins
add
hlt
jnp
add
sub
inc
jmp
pushf
push
(bad)
test
pop
xchg
inc
push
sahf
fwait
push
sbb
leave
xor
rcl
and
loop
or
xchg
rcr
call
repz
loop
and
mov
les
xchg
test
shl
or
mov
(bad)
(bad)
mov
sahf
sar
sub
data16
jle
push
jbe
test
sub
bound
xchg
je
xor
sub
popa
retf
mov
cmps
add
loop
xor
scas
adc
fbld
xchg
xchg
xchg
mov
add
pusha
fistp
inc
jo
mov
push
sbb
xlat
xchg
push
adc
cmp
outs
and
les
xor
xor
or
js
rol
xchg
ins
push
gs
cli
dec
push
jae
xor
inc
jle
jbe
mov
sub
(bad)
or
leave
mov
stos
mov
fisubr
ret
cmovs
ins
test
xor
jae
aam
stos
aas
mov
je
shr
fisubr
inc
or
or
jae
mov
mov
(bad)
in
lods
xor
dec
outs
mov
sub
cmps
imul
(bad)
xchg
rcr
jmp
sbb
mov
iret
and
lea
or
into
mov
out
dec
aam
test
xor
test
neg
mov
pop
leave
add
retf
xchg
sbb
scas
test
push
jae
and
ja
jo
fstp
sub
out
cmp
inc
mov
stos
mov
lods
and
outs
dec
ret
mov
sbb
mov
mov
mov
dec
jb
aam
ror
xor
rcr
mov
pop
pop
adc
xor
mov
in
ds
mov
xchg
ror
out
pusha
xor
inc
jae
ja
push
or
mov
or
mov
out
call
ins
push
sbb
in
pusha
les
ror
jecxz
sbb
jle
add
jge
js
outs
push
dec
popf
xor
mov
xchg
sub
stc
xchg
mov
pop
enter
aad
iret
int
stos
dec
push
addr16
movs
mov
das
mov
rcl
push
adc
in
dec
outs
adc
push
aaa
cdq
push
call
mov
loopne
pop
sbb
fsub
mov
push
inc
inc
lea
out
pop
loope
cmp
xor
repz
out
jae
fcomp
or
push
test
push
mov
imul
not
enter
mov
call
jae
inc
std
inc
test
(bad)
jns
xor
jge
aad
mov
mul
mov
inc
pusha
sahf
lods
push
lea
fild
and
lea
xor
icebp
lods
adc
jo
jae
or
std
inc
adc
pop
sub
fsubr
push
sbb
xor
pop
mov
mov
mov
(bad)
call
in
xchg
inc
mov
sub
inc
cld
popf
push
dec
cdq
clc
lods
(bad)
jle
xchg
sahf
xor
add
jne
arpl
repz
ror
repz
retf
and
jbe
sbb
xor
ficom
push
int
(bad)
mov
pop
(bad)
mov
rcl
mov
mov
movs
jae
jle
inc
fistp
xchg
sbb
das
add
mov
fsubr
fld
dec
retf
push
fdivr
fiadd
rcr
js
jmp
out
repz
xchg
retf
pop
out
(bad)
(bad)
cli
movs
mul
(bad)
xor
je
sub
(bad)
sub
push
(bad)
dec
cdq
ins
dec
or
sub
mov
dec
test
mov
fwait
sub
sbb
int3
mov
xor
mov
adc
outs
and
mov
pusha
jl
jo
inc
cwde
call
or
gs
setns
test
jp
stos
sbb
dec
shr
out
sbb
hlt
(bad)
clc
mov
push
adc
stos
int3
jecxz
ja
cwde
gs
(bad)
repnz
retf
sbb
xor
inc
mov
cmp
in
stos
mov
dec
jb
pop
inc
das
aam
cdq
rcl
xchg
loopne
shl
sahf
mov
dec
dec
cdq
jno
int3
loopne
jmp
add
mov
cmp
inc
dec
and
mov
call
pop
sbb
stos
repnz
push
int
xchg
rcl
icebp
rol
push
sbb
xor
mov
mov
fdiv
push
mov
sub
xor
lds
xchg
stc
push
jae
adc
jmp
cs
stos
push
adc
sbb
(bad)
movs
push
sub
jle
nop
aam
mov
mov
sar
mov
push
xor
addr16
jae
iret
xor
bound
mov
ins
mov
cmc
jge
and
mov
cwde
fisubr
jne
pop
xchg
cmp
loope
inc
xchg
sbb
push
push
sbb
jge
daa
cmp
mov
fmul
push
loope
cmp
scas
fprem
add
ret
jns
or
or
icebp
das
int
adc
or
cdq
jmp
pop
jno
js
sub
mov
sub
sbb
sbb
repnz
xchg
push
daa
fnsave
sub
add
cs
mov
xor
xchg
inc
or
mov
xor
or
test
mov
push
mov
adc
ret
push
jb
stos
inc
sbb
inc
pop
sub
retf
shr
shl
dec
test
(bad)
xchg
push
pop
repz
enter
jae
hlt
sub
(bad)
nop
(bad)
sbb
mov
push
clc
pop
pop
cdq
scas
adc
stc
adc
mul
jnp
push
mov
fsub
mov
test
xchg
push
aas
or
(bad)
in
mov
mov
mov
cwde
pop
sbb
mov
ins
mov
lea
mov
mov
shr
jae
stos
shl
xchg
xor
add
scas
xchg
and
jae
mov
ret
daa
std
mov
retf
jmp
test
mov
rcr
xlat
(bad)
or
inc
jne
mov
sbb
sub
mov
mov
popf
mov
xchg
or
mov
mov
or
std
fbld
inc
ins
lods
inc
les
nop
dec
xchg
hlt
jp
int
pop
or
jae
test
sbb
add
cmp
jecxz
xor
xchg
jecxz
jle
je
pop
jae
mov
cmps
icebp
push
adc
stos
fwait
add
test
outs
adc
xchg
jbe
pop
rcl
(bad)
jl
add
mov
stos
mov
add
adc
sbb
mov
dec
mov
repz
sbb
mov
mov
rcr
call
cmp
push
mov
enter
mov
mov
into
(bad)
cmps
ror
jne
add
mov
imul
aaa
jge
xchg
ins
ret
jp
inc
sti
sub
retf
rcr
pop
in
lahf
repz
sbb
sub
xchg
jne
int3
adc
or
mov
lods
mov
xchg
into
fstp
xchg
(bad)
pop
mov
sbb
in
and
outs
add
int3
jae
test
aas
cmp
and
sub
inc
scas
cmp
sub
push
and
sub
sub
or
xor
dec
(bad)
std
mov
mov
inc
leave
cmp
stc
mov
sbb
cmp
adc
dec
inc
jae
jns
fisub
inc
adc
cmp
push
cmp
jo
xchg
pop
dec
jmp
inc
jmp
pusha
out
(bad)
mov
dec
cmp
xor
stos
inc
fistp
sbb
xchg
cmp
les
dec
add
hlt
sbb
call
xor
imul
lahf
push
lahf
stos
pop
leave
and
adc
ins
cs
dec
lea
adc
jg
(bad)
pop
hlt
mov
cmps
popf
inc
test
ds
mov
cmp
mov
sbb
loopne
inc
mov
and
imul
loop
ficom
mov
mov
dec
mov
pop
bnd
ja
xlat
ror
mul
movs
sbb
mov
cli
xchg
jno
sbb
in
push
or
fsubr
mov
xchg
mov
xchg
aas
cmps
sbb
jmp
jecxz
pusha
mov
scas
adc
cmp
jae
test
fistp
(bad)
fimul
neg
push
adc
inc
sbb
jae
mov
or
push
rcl
jno
fucomi
cs
jae
push
leave
jl
cmps
das
jb
das
test
jno
repnz
xor
pop
mov
(bad)
fisub
lock
jne
push
dec
xor
push
inc
pop
push
jae
cmc
pop
jns
adc
cmps
xor
test
jno
mov
je
mov
adc
xchg
mov
scas
pop
jb
inc
icebp
mov
loopne
test
add
lds
jmp
jae
mov
sti
sbb
arpl
adc
pop
call
mov
pop
popa
or
aad
adc
sti
jmp
add
jnp
cmp
faddp
sar
mov
add
(bad)
adc
xor
adc
xor
das
ins
mov
pop
xor
xchg
mov
std
in
jae
fwait
pop
and
stos
adc
lds
dec
xchg
inc
mov
xchg
adc
out
inc
(bad)
out
leave
adc
shl
push
nop
sti
test
adc
jae
(bad)
stc
inc
mov
xlat
icebp
adc
inc
mov
adc
test
je
dec
inc
xlat
(bad)
mov
(bad)
add
hlt
or
in
xor
shl
cmp
lds
cmp
dec
sbb
sbb
and
shr
jb
aam
rep
dec
(bad)
push
push
pop
jae
adc
sbb
xchg
ss
jae
je
and
ret
fcmove
xlat
scas
repz
or
adc
xor
sbb
and
movs
xor
dec
pop
cmp
iret
push
clc
mov
arpl
scas
movs
clc
xchg
dec
retf
add
push
sbb
into
xchg
call
or
das
fidiv
into
xchg
int3
in
xchg
push
sub
mov
jmp
out
fsub
xlat
xchg
pop
xchg
stos
sub
xchg
jb
cmc
out
jb
cwde
out
shl
pop
or
int3
ret
je
xor
dec
xor
imul
cmps
xchg
xor
rol
les
in
add
sub
jo
fwait
(bad)
sbb
push
xchg
push
inc
inc
add
mov
repz
out
retf
add
test
ret
shl
dec
dec
adc
mov
scas
or
mov
jg
inc
sbb
pop
clc
xchg
lahf
fs
aas
pop
adc
int
in
push
dec
push
(bad)
or
mov
icebp
jo
xor
jmp
cmc
pop
out
mov
stos
lods
sbb
sar
imul
sbb
leave
push
mov
xor
fdivr
fisttp
mov
mov
push
mov
cmp
push
ins
mov
jp
add
repnz
jae
jno
add
unpcklps
push
(bad)
aad
mov
push
es
xchg
push
adc
mov
mov
mov
cmp
jl
rcl
push
dec
call
push
and
test
mov
xchg
into
sub
sbb
outs
pop
push
xor
lock
cmps
sbb
xor
xchg
mov
mov
xchg
mov
nop
xor
lods
ret
(bad)
jo
fst
add
dec
mov
xchg
mov
mov
outs
es
push
sbb
jnp
adc
fnstenv
outs
test
or
pop
push
ja
xchg
mov
inc
pop
cmp
sbb
pushf
stc
push
loopne
push
mov
sbb
mov
test
lock
lods
inc
jae
(bad)
shl
loopne
sub
xor
(bad)
inc
aam
jnp
(bad)
sbb
in
dec
cmp
jmp
sbb
ins
jae
inc
mov
mov
pop
popa
adc
stc
pop
fdivr
stos
sbb
xchg
mov
test
jl
rol
inc
cdq
xor
mov
lods
sbb
std
jae
call
pop
daa
mov
imul
and
lods
xchg
pushf
out
out
pop
adc
mov
pop
rol
int
ins
push
mov
jbe
adc
cmp
outs
push
enter
test
clc
repz
pusha
jp
adc
call
test
sub
push
xchg
push
or
sub
imul
jp
mov
(bad)
jle
mov
push
pop
nop
dec
in
jne
loop
cdq
cmps
pop
xchg
call
jae
aad
jmp
loope
retf
jbe
mov
outs
fild
xor
mov
cdq
ret
and
jae
jecxz
les
loope
sbb
adc
out
into
aas
sub
dec
jae
and
sti
in
push
xchg
leave
cmp
and
test
daa
sar
sbb
pop
jns
xchg
outs
mov
pop
adc
jno
add
(bad)
xchg
inc
icebp
push
mov
rcl
imul
mov
imul
shl
mov
pop
in
loope
sbb
movs
add
idiv
fwait
mov
pop
arpl
imul
aam
lods
or
mov
test
mov
jae
lods
and
cwde
scas
popa
js
jbe
dec
xchg
xchg
nop
jne
sub
sbb
xchg
(bad)
xor
sbb
lods
xor
mov
jnp
out
add
sbb
nop
jmp
mov
lea
pop
fldenv
ja
lds
mov
fst
sbb
in
leave
jmp
sbb
stc
movs
cmc
retf
jmp
ficomp
mov
dec
and
jb
mov
movs
lahf
stos
aas
xchg
inc
rcr
push
jle
and
les
or
dec
sbb
jmp
rcl
aas
mov
and
das
mov
xchg
or
push
arpl
call
clc
imul
sub
jb
xchg
or
pop
mov
sbb
lods
in
fcom
test
outs
call
pop
jge
scas
sbb
addr16
or
cmp
inc
jb
sub
loope
cmc
mov
mov
mov
push
(bad)
iret
(bad)
es
sar
mov
dec
push
mov
mov
and
out
push
(bad)
xchg
leave
pop
pop
scas
inc
cdq
xchg
sbb
pusha
rep
or
sub
int
mov
xor
pop
stos
mov
and
popf
aas
sbb
jl
sub
popa
and
xor
sbb
fs
clc
mov
add
hlt
daa
(bad)
push
sbb
(bad)
in
fs
stos
jg
test
enter
sahf
cwde
sti
or
fistp
adc
out
and
(bad)
std
xchg
cmp
mov
inc
daa
adc
xchg
sub
inc
add
xchg
sub
push
xchg
and
mov
addr16
adc
jg
mov
into
jb
jbe
and
xor
cli
xchg
cmps
mov
stos
imul
cs
pop
cmc
imul
movs
sbb
es
add
add
pop
jne
jae
sub
retf
les
outs
jns
add
cs
sub
cld
xlat
xor
pop
xchg
repnz
(bad)
sub
in
test
push
jmp
pop
test
cmp
rcl
push
inc
mov
add
jmp
enter
sbb
jae
sub
cmp
pop
jnp
or
mov
mov
sbb
pop
mov
outs
aaa
mov
lea
dec
scas
into
sahf
inc
cld
fcomp
dec
int3
fisubr
mov
or
jl
ss
xchg
push
call
ja
je
mov
inc
xchg
sub
repnz
and
(bad)
xor
aas
sub
xchg
leave
mul
dec
cwde
mul
sub
mov
not
daa
mov
fidiv
frstor
xchg
dec
add
xchg
jae
pop
repz
aas
loope
jle
xchg
xchg
lods
aad
jae
loope
js
out
inc
sbb
jge
cdq
inc
je
cwde
mov
dec
into
push
mov
popa
sbb
mov
xchg
or
pop
push
addr16
pushf
sbb
hlt
lods
pop
jne
je
test
les
sbb
jns
adc
fsubr
test
jo
jle
cmps
scas
jo
sub
xchg
xchg
or
fdiv
sub
in
adc
jae
xor
inc
mov
fild
mov
mov
imul
jmp
aam
daa
into
pushf
or
sub
clc
xchg
mov
loop
fcomp
mov
or
xchg
lahf
div
sbb
mov
and
rcr
loop
fmul
mov
(bad)
sbb
jb
sub
retf
in
rcl
jg
pusha
or
pop
xchg
pop
sub
mov
aaa
jl
jg
mov
mov
add
bound
cmp
imul
add
out
adc
adc
(bad)
jmp
dec
pop
sbb
cmp
in
mov
in
loopne
pop
inc
push
jo
cmps
mov
and
int
inc
dec
(bad)
movs
push
in
call
dec
cmp
cmp
sbb
retf
or
or
ror
call
movs
daa
jbe
jmp
cmp
push
mov
add
add
push
das
xchg
fsubr
xlat
popa
cmp
test
adc
add
mov
pop
loop
dec
jbe
sahf
sar
sbb
xchg
shr
adc
je
jp
push
push
add
fstp
mov
jo
cmp
mov
add
cmp
push
mov
fisub
fidiv
add
sub
rcr
or
xchg
hlt
shl
jno
dec
add
and
or
push
dec
ror
(bad)
lahf
dec
movs
sbb
sub
out
mov
gs
lock
mov
push
loop
fmul
repnz
retf
jo
dec
sbb
push
(bad)
fidiv
shl
out
mov
jp
pop
mov
mov
data16
hlt
scas
push
adc
test
fbld
push
(bad)
inc
loop
(bad)
mov
adc
mov
mov
daa
loope
call
inc
jg
xor
push
(bad)
aad
xchg
pop
sub
lock
inc
fisttp
mov
ins
mov
inc
ss
rol
push
push
sub
icebp
mov
bound
(bad)
(bad)
ror
retf
fwait
xchg
popf
sub
sub
aam
cmp
scas
imul
jl
dec
popa
xchg
(bad)
clc
stos
cmp
pop
das
ins
dec
dec
jmp
sub
addr16
mov
and
shl
hlt
cs
add
mov
fisub
xor
inc
fdivr
enter
sbb
cmps
jbe
jmp
xchg
fdivp
into
loop
fsubr
fucomi
or
inc
sub
aas
movs
gs
lods
cmp
lock
push
xor
pop
inc
mov
add
data16
xchg
cli
add
hlt
fcmovu
psubusb
mov
clc
mov
jle
cmc
int
cmp
add
or
push
scas
sbb
pop
(bad)
stc
lods
sbb
sub
and
loop
int
in
shl
mov
into
dec
sbb
fist
daa
mov
out
daa
aam
aad
xor
sub
es
adc
shr
cld
cmp
pop
not
hlt
xor
iret
xchg
sbb
repz
mov
pop
mov
jns
mov
xchg
add
mov
adc
es
cs
or
gs
add
or
or
dec
cmp
sub
inc
cld
cmc
shl
pushf
push
xor
cmp
jne
movs
xchg
jl
rcr
xchg
xchg
cli
call
xchg
pop
sub
pop
es
jnp
dec
das
jmp
sub
jns
mov
inc
mov
shl
retf
jl
adc
cmp
pop
imul
jge
xchg
shr
(bad)
fst
retf
jb
push
popf
jl
sti
sub
xchg
pushf
cld
(bad)
retf
pop
pop
jl
movs
inc
xchg
(bad)
push
cmp
sub
adc
push
dec
fucomp
nop
inc
(bad)
xor
jle
addr16
cmp
mov
adc
in
xor
imul
mov
outs
xor
lahf
neg
inc
jae
pushw
sbb
test
adc
dec
int3
cmp
sahf
mov
xor
in
xor
repz
pop
push
pop
mov
test
stc
fnstenv
out
jmp
lahf
or
fwait
add
sub
push
pop
loop
sbb
mov
mov
test
rcl
xchg
pusha
jae
push
pusha
push
cmp
data16
test
jno
je
fidivr
ins
jb
xchg
jmp
retf
ins
aam
and
(bad)
retf
(bad)
jg
pushf
or
movs
(bad)
cli
pop
adc
cdq
adc
fcomp
adc
inc
idiv
push
(bad)
jge
les
fstp
out
xor
pop
(bad)
mov
les
shl
stc
xor
jle
in
inc
stos
shl
es
sub
pop
imul
jb
(bad)
retf
inc
mov
sbb
stos
inc
idiv
jecxz
(bad)
iret
test
xchg
setne
pushf
xor
mov
jb
jno
call
add
aam
in
or
add
jno
adc
gs
pop
imul
fdivr
inc
gs
and
xchg
cmp
mov
ret
xor
mov
dec
inc
loop
mov
out
mov
sti
rcr
pushf
fsub
cld
shl
cmc
div
pop
movs
ins
(bad)
dec
jo
fstp
jo
cmc
data16
rcl
pop
xlat
sbb
mov
fnsavew
mov
aam
mov
jge
mov
dec
cmp
xlat
dec
das
call
nop
jp
dec
pand
jo
mov
std
cdq
fwait
push
fmul
arpl
(bad)
or
mov
cmp
dec
movs
std
mov
cmp
sbb
mov
pop
test
retf
or
pop
fcom
sub
addr16
ins
shl
gs
aam
jnp
ins
repz
sbb
push
inc
aam
jecxz
aam
jmp
xor
mov
dec
mov
fmul
mov
fsub
hlt
cli
fmul
mov
fdiv
mov
fsubr
pushf
fdiv
mov
fcom
sbb
mov
adc
aam
gs
aam
out
(bad)
loope
inc
in
aad
jmp
xchg
pop
mov
mov
in
lods
ja
dec
mov
and
mov
ja
dec
mov
dec
jmp
gs
dec
gs
jecxz
gs
outs
mov
fdiv
mov
fsubr
pushf
fsub
mov
ja
jb
mov
push
sbb
arpl
sbb
stc
cmps
bound
mov
mov
fisttp
push
cvtpi2ps
ficomp
out
(bad)
dec
dec
jb
mov
outs
and
xchg
mov
lock
pop
call
(bad)
mov
jb
cmp
sbb
xor
ja
push
sbb
aas
call
push
sub
(bad)
out
mov
push
fcomp
sub
lea
aaa
ror
pusha
out
cmp
push
or
mov
loop
in
fiadd
cmp
dec
test
aam
jae
(bad)
out
bound
not
ss
dec
ds
xchg
jl
lods
pop
sub
cmp
mov
(bad)
fcomp
stc
aaa
xchg
(bad)
jne
popf
jae
sub
jecxz
mov
add
lods
sar
jae
imul
fucompp
cmp
push
mov
popa
stos
mov
in
jnp
mov
stc
dec
pop
test
mov
dec
push
mov
jle
je
mov
cmc
pusha
stos
inc
dec
sub
(bad)
iret
arpl
rcr
jae
or
addr16
stc
mov
mov
push
mov
int3
into
mov
add
cli
add
xchg
xchg
mov
pushf
add
sub
pop
push
jae
push
add
scas
adc
in
loopne
sti
xor
mov
xchg
push
jnp
cdq
push
arpl
pop
jmp
xchg
adc
xchg
add
pop
lea
and
pop
dec
pop
lea
addr16
sub
ss
xor
xchg
jge
push
inc
imul
daa
mov
popf
xor
sbb
and
pop
xor
add
xor
outs
mov
add
jo
pop
pop
dec
adc
mov
fprem1
not
inc
jmp
sbb
vpmacsswd
into
jl
jae
fldenv
fidiv
push
std
jne
(bad)
mov
ret
imul
lods
in
xchg
mov
push
aam
cmp
push
dec
pusha
mov
inc
adc
lods
inc
test
stos
repnz
repz
or
sbb
or
aaa
pop
sbb
jo
fdivrp
push
aaa
dec
cmp
xor
cwde
out
push
aam
or
sbb
bound
jg
addr16
popf
inc
inc
sahf
or
arpl
jae
shl
push
sub
jns
mov
jae
push
dec
mov
push
mov
lock
add
jle
nop
jmp
pop
fucom
repz
in
(bad)
adc
mov
jo
outs
repnz
cli
cmp
jne
add
iret
leave
push
xchg
clc
fild
loop
xchg
loop
xchg
xor
data16
xchg
xchg
test
rol
leave
pop
fsubr
jae
nop
ss
add
mov
cmp
ins
dec
sahf
fwait
sbb
mov
rol
cmp
jp
push
clc
cmp
jae
sub
mov
retf
int3
mov
mov
div
xchg
lods
inc
cdq
mov
jp
sub
mov
stos
int
es
jmp
rcl
mov
cwde
fwait
outs
mov
mov
lods
rol
sub
cmp
js
gs
dec
les
jae
dec
(bad)
inc
mov
retf
js
out
mov
ret
cmp
cld
jae
loope
retf
push
cmps
pushf
lea
mov
imul
or
js
movs
push
nop
push
mov
xchg
cmp
dec
aam
je
adc
aad
stos
adc
xor
and
and
ret
xchg
and
xchg
or
lods
xchg
lds
jle
xor
outs
mov
pop
adc
std
es
ins
mov
retf
push
inc
xor
xchg
pop
repnz
mov
call
xchg
inc
outs
in
sbb
test
ins
(bad)
sub
push
cmp
mov
dec
jae
dec
repz
xor
push
mov
jg
jae
rcr
push
jmp
ror
das
sbb
scas
pop
pop
inc
mov
sub
pusha
mov
cmps
mov
jle
mov
and
mov
aad
jo
mov
push
rol
xchg
mov
push
xor
rol
repz
lods
mov
(bad)
retf
mov
xor
out
lods
aaa
mov
add
es
sbb
xchg
dec
fwait
adc
xchg
sahf
int3
mov
in
sbb
clc
pop
jge
xchg
mov
mov
(bad)
or
lods
lods
adc
inc
lds
div
std
sbb
and
pop
int3
gs
push
cmp
mov
xor
(bad)
cmp
lods
mov
loop
sbb
ins
fild
fimul
jp
in
retf
test
pop
addr16
ret
sbb
imul
mov
rol
jae
jnp
mov
sbb
adc
(bad)
cmps
push
push
push
add
(bad)
call
mov
inc
or
fmul
mov
xlat
jbe
fcom
adc
sbb
fmul
mov
mov
adc
(bad)
mov
gs
into
mov
sbb
inc
(bad)
push
add
cdq
hlt
test
mov
mov
stos
mov
inc
xchg
ds
aad
es
xchg
or
xlat
popf
movs
xor
pop
jns
sbb
dec
push
jae
call
(bad)
test
std
aam
sbb
xlat
jl
sbb
loopne
push
lock
or
(bad)
movs
dec
enter
iret
sahf
sbb
dec
lods
mov
mov
xchg
cmp
enter
sub
mov
test
adc
dec
leave
repz
mov
or
test
push
jne
jno
add
push
and
mov
ja
dec
jno
outs
aam
call
jae
adc
mov
cmp
sahf
mov
adc
inc
adc
push
stos
pop
ja
(bad)
jmp
repz
out
hlt
dec
push
imul
jne
outs
mov
pop
imul
imul
(bad)
movs
push
inc
out
ror
inc
add
push
adc
xor
test
retf
inc
adc
movs
xchg
call
mov
pop
jl
push
imul
shl
sbb
xor
xchg
dec
call
adc
sbb
lahf
cmp
inc
das
addr16
repz
arpl
stos
xor
dec
sub
jle
imul
dec
mov
(bad)
int3
out
(bad)
outs
imul
mov
lods
mov
(bad)
xor
popa
mov
movs
sbb
dec
inc
hlt
pop
xchg
mov
in
mov
sbb
or
dec
les
sub
daa
lds
mov
mov
ret
sti
jp
adc
pop
pop
sub
xchg
push
sbb
aad
repz
not
pop
sbb
mov
sbb
mov
fst
jmp
cdq
daa
push
push
es
sub
add
jns
aam
scas
pop
(bad)
std
fwait
xchg
xor
mov
cmp
movs
pop
push
adc
sahf
push
inc
pop
sbb
popa
push
aam
and
push
dec
dec
adc
and
fiadd
jb
es
ins
call
adc
pop
out
cmp
out
(bad)
(bad)
jecxz
scas
xchg
xor
push
cld
loop
sub
imul
pushf
stos
sub
sbb
xchg
rol
push
repz
xor
out
not
loopne
(bad)
(bad)
xlat
push
leave
aad
or
ret
icebp
mov
lahf
sbb
cmp
or
leave
sub
add
xor
call
mov
mov
push
pushf
inc
ins
outs
movs
adc
adc
or
out
push
pop
gs
imul
jae
enter
out
add
add
ret
aas
jne
icebp
leave
push
sbb
fisttp
xor
sub
sbb
sbb
jnp
jmp
dec
(bad)
sub
inc
repnz
and
fs
pop
hlt
fwait
sar
inc
sbb
setl
xchg
inc
sbb
sbb
mov
and
or
jae
daa
jne
call
fnclex
lods
in
mov
inc
push
cwde
loope
jbe
scas
push
cdq
les
test
popa
imul
xchg
pushf
add
sub
in
test
or
xchg
(bad)
int3
inc
fs
fnstcw
inc
sar
jae
inc
div
push
int
add
sub
push
xor
mov
shl
and
in
or
push
cmp
bound
(bad)
push
test
test
nop
jmp
xor
sub
xchg
pusha
jl
pop
add
fiadd
mov
push
aad
push
fistp
loope
leave
adc
and
cmp
adc
mov
pop
adc
aad
xor
in
push
xchg
addr16
ins
fidiv
pop
mov
mov
lahf
push
loopne
mov
pusha
adc
push
mov
js
cmps
mov
mul
mov
mov
cmp
jb
fst
data16
addr16
xchg
jns
test
cmp
dec
jnp
jns
popa
adc
pop
xor
jp
cwde
out
fs
pop
cmc
scas
sub
push
(bad)
paddsb
push
fwait
inc
xor
dec
or
test
std
dec
aam
and
push
repnz
inc
push
mov
add
cli
xor
pop
imul
jmp
aaa
rep
popf
test
jl
(bad)
in
cmps
imul
ficom
pusha
mov
mov
call
inc
test
or
nop
sbb
outs
hlt
ja
loope
xchg
jne
movs
scas
div
or
mov
dec
ja
retf
stc
outs
out
out
mov
addr16
inc
ja
shl
push
and
ins
mov
sbb
sbb
push
inc
adc
hlt
inc
shl
push
ins
mov
xchg
add
je
pop
adc
ins
mov
lds
dec
inc
add
sub
mov
xchg
xchg
jmp
mov
std
push
mov
pop
inc
adc
jmp
fsubr
xor
dec
mov
es
jmp
xor
scas
and
iret
call
mov
idiv
loope
pop
push
push
add
sbb
xchg
loopne
int
or
pop
adc
clc
stos
mov
inc
and
cmps
pusha
pop
iret
sbb
jno
dec
mov
enter
and
cmc
push
repz
je
rcr
hlt
jns
sbb
repz
ins
pop
sbb
push
icebp
cmp
cdq
push
movs
xchg
mov
dec
mov
push
movs
mov
jae
int3
mov
in
jae
movs
adc
sbb
popf
cmp
mov
push
jo
gs
scas
into
xchg
xor
call
xor
add
enter
or
std
rcr
and
mov
ss
pop
nop
lods
or
pop
ds
xchg
add
mov
fdivr
dec
jmp
dec
scas
ret
mov
stos
(bad)
sbb
push
sub
xor
inc
mov
mov
cmp
pop
stos
adc
cli
lock
inc
dec
in
leave
sub
push
ins
pushf
dec
inc
or
inc
cmp
xor
dec
jbe
daa
mov
test
pop
test
dec
mov
mov
retf
iret
stos
cli
push
cmps
iret
sbb
mov
outs
int3
fidiv
and
mov
pop
jle
dec
jbe
xor
cmps
mov
dec
jecxz
push
lea
xchg
fs
mov
ret
retf
xchg
jmp
inc
sub
(bad)
dec
jb
cwde
cld
mov
ror
into
adc
cmp
jmp
add
sbb
ficomp
repnz
rcl
sbb
das
loopne
mov
popa
sbb
addr16
mov
xchg
ret
in
xchg
sbb
inc
push
clc
sbb
sub
test
es
data16
xchg
mov
and
inc
retf
test
(bad)
fimul
sub
push
jmp
xchg
out
mov
cdq
es
in
loope
jnp
or
jb
call
ja
sbb
sar
and
pop
mov
(bad)
int3
push
sbb
cmp
pop
shl
leave
movs
outs
rcr
(bad)
pop
and
add
or
cld
stos
in
add
inc
push
mov
sbb
and
hlt
mov
pop
call
rcl
jno
mov
pop
mov
int
xor
out
popa
or
mov
je
push
add
and
aaa
mov
scas
enter
bnd
aas
into
and
sbb
cmp
inc
in
push
push
stos
jnp
jo
or
iret
retf
xchg
retf
pop
call
push
mov
in
fadd
cmovs
sbb
and
in
nop
cmc
hlt
dec
js
jle
sbb
inc
push
adc
fdivp
inc
sub
lods
test
jnp
pop
imul
lods
out
mov
sti
jecxz
jns
pop
sub
mov
(bad)
and
das
stos
mov
jbe
aas
xchg
sbb
arpl
mov
or
mov
ja
jbe
mov
sub
xchg
mov
cmp
out
adc
push
mov
mov
clc
add
scas
sahf
cmp
ficom
aad
(bad)
mov
mov
push
stos
neg
dec
pop
hlt
sub
lea
xchg
js
push
pop
sbb
and
lds
sbb
sbb
bound
mov
adc
lods
add
push
int
mov
jge
fcom
test
inc
dec
mov
fcmovnbe
xor
cwde
sub
jo
ds
push
outs
dec
lds
pusha
cwde
pop
cmc
inc
inc
xor
mov
ss
xlat
test
add
inc
int
out
mov
test
push
movs
pop
mov
adc
stc
add
xor
dec
add
cs
fcmovnbe
aaa
cmps
and
push
test
push
push
pop
mov
cmp
cld
sbb
mov
mov
pop
out
and
popa
fimul
iret
cmps
push
adc
mov
lock
fdivp
in
fidivr
fmul
push
mov
sbb
dec
fsubr
xchg
mov
push
js
iret
jb
and
inc
adc
adc
cli
test
(bad)
jmp
mov
or
jmp
jle
adc
in
jae
sbb
dec
sbb
and
sbb
mov
inc
ins
ret
adc
dec
cmp
mov
jae
adc
in
loope
ds
ret
ret
pop
div
mov
ss
jne
int3
scas
cmp
pop
xchg
dec
jg
stos
or
inc
inc
dec
sbb
in
sub
mov
ja
fnstenv
jae
xchg
aas
and
cmp
xchg
inc
jo
repz
push
or
xor
and
adc
and
std
jl
jmp
std
test
jmp
shr
retf
cmp
cli
xchg
hlt
dec
ret
mov
cmps
mov
mov
add
xor
xor
xchg
stos
pushf
ds
repz
sub
rcl
mov
adc
adc
add
sbb
adc
sti
cmps
xor
mov
jnp
mov
inc
mov
mov
mov
sub
push
cmp
xor
cmps
adc
xchg
out
mov
pop
loope
push
sar
mov
rcr
cmp
mov
nop
pop
test
push
inc
xchg
pop
inc
xor
add
ret
fldenv
cmps
sbb
dec
mov
add
inc
sbb
shr
adc
jg
rcl
mov
movs
jae
sub
fsub
aad
popf
mov
sbb
inc
push
pop
mov
jae
pop
inc
inc
les
push
into
bound
ror
xchg
push
pop
sbb
cld
mov
js
out
shl
xchg
leave
bound
or
add
(bad)
add
pop
add
jmp
loop
mov
add
sbb
pop
test
mov
jns
cmp
jb
ja
adc
imul
pop
jae
mov
xchg
jg
nop
addr16
or
push
push
sti
(bad)
mov
pop
jne
push
mov
sub
dec
cmps
stc
inc
pop
push
div
inc
cld
mov
or
sbb
xchg
and
mov
imul
pop
cmp
jg
lea
xchg
mov
dec
adc
ret
cmp
add
les
(bad)
xor
mov
cmps
test
mov
stos
stc
nop
or
xor
(bad)
int3
or
pusha
fild
mov
jle
in
add
imul
fcmovbe
sub
fstp
xchg
and
sbb
push
add
pop
rcl
(bad)
(bad)
xchg
jl
xchg
sub
sub
arpl
lds
les
push
mov
cmp
imul
jno
mov
push
adc
xchg
sbb
mov
cwde
adc
push
jmp
cmp
sti
cli
movs
ds
mov
mov
imul
fdivr
es
jge
xchg
fs
std
or
fidiv
sub
cmps
or
or
dec
jae
js
mov
arpl
and
mov
jge
xor
je
pop
adc
imul
pusha
xchg
xchg
jle
inc
fimul
fcmovnu
dec
push
and
dec
fist
aam
sub
sbb
test
mov
mov
outs
jl
sbb
xor
(bad)
inc
pop
push
add
sub
jle
pop
fnstcw
lds
fld
inc
add
sub
jae
lahf
inc
dec
neg
mov
test
or
mov
out
inc
add
mov
jp
cmc
pop
inc
xor
vmread
mov
cmp
cmp
mov
in
inc
(bad)
jg
dec
stos
test
retf
(bad)
xchg
inc
cmp
jnp
lock
and
mov
aam
dec
(bad)
aaa
lods
or
jg
cli
push
xor
xchg
and
aas
sbb
mov
movs
leave
xchg
inc
ds
pop
sbb
mov
or
xchg
adc
xchg
mov
jae
add
ja
jbe
outs
xchg
mov
jae
ror
fadd
fnsave
or
push
cdq
sbb
pop
mov
sbb
das
sahf
mov
scas
inc
in
inc
jmp
mov
scas
repz
lods
cmp
lea
aaa
inc
dec
or
rol
jbe
mov
call
cmps
jle
pop
cmp
scas
mov
out
jg
daa
add
sbb
dec
and
push
jne
sbb
xchg
sbb
std
(bad)
je
pusha
xor
nop
pop
push
arpl
retf
js
mov
xor
mov
mov
add
dec
mov
cmp
imul
push
jle
loopne
addr16
dec
std
mov
std
add
fild
jecxz
push
nop
stos
jg
arpl
xchg
shl
shr
fstp
stos
(bad)
stos
mov
les
lods
xor
test
test
cmps
inc
mov
sub
pop
cmp
mov
mov
les
mov
cmps
icebp
pop
cdq
data16
repz
push
xchg
pop
cmps
or
out
mov
inc
clc
dec
repz
aam
movs
icebp
pop
pop
fcmovu
mov
xchg
xor
dec
hlt
sbb
repnz
add
rep
jae
in
loopne
mov
xchg
jecxz
and
repz
inc
jae
int
push
inc
fdivr
nop
int3
adc
cmp
daa
js
aaa
mov
cmp
xchg
adc
push
sbb
fsubr
ins
adc
dec
ret
mov
aad
aas
neg
adc
pop
pusha
int3
clc
not
and
cmp
mov
out
gs
mov
aaa
pop
das
jae
jge
test
sbb
call
mov
imul
inc
xchg
mov
jmp
rcl
rcl
retf
adc
or
ins
iret
adc
cmps
or
and
in
pop
pop
repnz
mov
xor
push
les
pop
sbb
xchg
dec
aas
adc
add
retf
and
sti
jb
xchg
add
mov
xor
jmp
aaa
imul
retf
jl
cmps
lea
div
sbb
mov
jg
lods
mov
test
xchg
mov
(bad)
xlat
loopne
lock
ret
adc
outs
(bad)
out
(bad)
xchg
jle
xchg
hlt
fmul
jns
fcomp
lds
mov
cmp
xchg
xchg
imul
fldcw
ja
cmps
rol
popa
and
jle
jp
cmp
pop
adc
mov
jmp
mov
rcl
mov
lods
adc
mov
repnz
inc
(bad)
mov
ins
iret
iret
sub
sbb
add
xor
mov
mov
inc
mov
scas
mov
mov
icebp
repz
aas
push
pop
xchg
test
xchg
jae
repnz
call
std
pop
daa
jae
movs
sub
retf
xor
mov
and
test
mov
add
loop
iret
retf
mov
push
jecxz
enter
out
adc
test
mov
in
ret
or
jae
fcomp
cmp
sbb
(bad)
fistp
mov
test
out
pop
or
loop
push
and
loopne
jecxz
imul
mov
call
lods
lods
in
push
mov
jno
jne
jbe
ret
neg
(bad)
jmp
stos
push
xchg
imul
mov
fwait
sub
ficomp
(bad)
cmp
jae
cld
sub
retf
pop
sbb
outs
pop
ficomp
call
adc
cld
jae
xchg
add
xchg
cmp
or
jbe
lds
adc
mov
mov
shl
shl
dec
push
lods
sahf
bnd
adc
mov
pop
ret
inc
sub
pop
sbb
outs
xchg
pop
xchg
scas
aaa
jecxz
mov
in
les
or
ins
cmps
movs
es
mov
pop
sbb
add
int3
cld
add
mov
xchg
in
fld
(bad)
cli
push
ror
dec
(bad)
and
mov
mov
fs
mov
mov
or
add
stc
add
fwait
inc
mov
sub
mov
retf
lods
in
inc
push
pop
xor
arpl
or
jae
adc
std
dec
jnp
adc
or
and
test
xchg
fcmovbe
xchg
mov
arpl
retf
push
dec
pushf
dec
dec
sub
cmp
ret
xchg
push
sub
pushf
inc
aam
pop
retf
aam
movs
arpl
push
and
imul
add
cmp
fisub
ins
push
xchg
and
cmc
and
pop
sar
jl
cmps
xor
popf
add
sahf
mov
mov
mov
push
icebp
fs
mov
out
into
mov
mov
jb
retf
add
xor
adc
inc
cmp
xor
into
mov
sti
outs
aad
push
dec
dec
and
pop
cmp
mov
jae
stos
mov
cmp
data16
dec
shl
cmp
ins
push
dec
mov
mov
mov
push
inc
in
repnz
dec
push
nop
std
dec
cmp
inc
rol
mov
adc
cmc
lods
fwait
sahf
xor
stos
cmc
aam
mov
fnsave
dec
and
jmp
dec
mov
fisub
sub
cs
mov
sbb
sbb
icebp
jb
ficomp
aas
test
fidivr
pop
pop
rcr
inc
je
or
jl
in
jl
cmp
fs
dec
cmps
xor
cmp
daa
scas
jge
in
cwde
dec
mov
mov
int
mov
xor
push
enter
inc
mov
and
and
pop
test
push
push
or
sbb
in
stc
out
cwde
and
pop
mov
test
sbb
adc
test
xlat
mov
jmp
push
mov
cmp
scas
mov
das
dec
(bad)
je
repz
xchg
sub
(bad)
ret
jo
das
xchg
movs
test
add
pop
jae
mov
and
das
lods
lock
mov
cld
mov
cs
mov
adc
sbb
dec
or
mov
add
shr
push
sbb
sbb
xchg
test
fsub
sbb
aas
(bad)
fwait
cmp
jae
test
mov
aad
fwait
lock
and
sbb
xor
bound
pop
add
bound
add
(bad)
sbb
jle
fidivr
jae
push
mov
add
icebp
imul
nop
lods
aam
jae
stos
(bad)
retf
or
sti
xlat
arpl
out
jo
pop
and
rcl
fstp
shl
cmp
dec
(bad)
(bad)
test
cwde
dec
sub
mov
pop
movs
movs
push
fldcw
or
sub
lods
clc
sti
retf
sub
mov
scas
cmps
das
and
stos
outs
and
ss
loopne
ret
xchg
inc
inc
sbb
xchg
dec
sbb
(bad)
es
sub
or
cmp
adc
sahf
ins
out
pop
inc
inc
add
jno
sbb
cmps
cli
push
mov
sub
xchg
xchg
xchg
push
fist
es
xchg
cmp
cwde
std
jg
popf
test
outs
(bad)
test
int3
jmp
ja
push
or
mov
add
and
xchg
test
mov
adc
in
cmp
fidivr
xchg
pop
and
call
sti
stos
(bad)
fst
test
mov
outs
(bad)
jae
mov
jmp
cmp
shl
push
popa
pop
enter
ja
jae
jg
sbb
push
ret
dec
test
mov
call
fcomp
add
enter
(bad)
fbstp
scas
stc
test
inc
inc
pop
xor
push
mov
test
and
mov
or
xchg
js
or
adc
retf
mov
out
ss
xlat
mov
cdq
pushf
xor
jge
sub
mov
iret
xlat
inc
mov
aaa
in
es
pop
aad
sub
pop
xchg
test
pop
es
inc
lahf
push
in
sbb
int3
sbb
and
sbb
enter
enter
imul
(bad)
mov
and
xchg
fld
cmc
fbstp
jo
imul
push
outs
xchg
enter
or
scas
icebp
into
mov
xor
dec
loope
ror
mov
popa
or
push
fs
xchg
int3
les
jnp
adc
inc
ret
mov
imul
call
and
cmp
sub
xor
mov
cmps
ins
sbb
pop
arpl
stos
je
mov
fnsave
movs
adc
dec
pop
and
sub
jp
jb
nop
cld
jp
jne
cmp
or
xchg
call
mov
fbld
push
mov
mov
pushf
fistp
imul
mov
xchg
(bad)
fcom
mov
xor
sbb
mov
outs
fsub
xlat
pop
pop
dec
push
sub
das
pop
xor
aad
aam
mov
adc
(bad)
and
call
into
in
push
inc
inc
sub
dec
ficomp
inc
add
jg
adc
out
shr
xchg
inc
aas
in
lahf
adc
xchg
inc
fwait
jae
adc
xor
clc
inc
cmp
mov
jle
stos
xchg
ret
shl
mov
pop
pushf
rcr
pop
ins
jae
in
aaa
mov
and
cdq
mov
pop
ficom
sub
je
dec
(bad)
sbb
ds
or
xchg
lods
xchg
push
jae
inc
daa
addr16
lea
cmps
ins
xchg
push
mov
rcr
jae
fild
add
sbb
push
es
jae
jp
adc
mov
test
fmul
addr16
xchg
mov
mov
xchg
aad
mov
inc
mov
movs
popf
mov
or
mov
sbb
lahf
sahf
retf
pusha
and
sti
jae
xor
pop
lea
add
ret
xor
mov
mov
xchg
enter
ss
mov
jae
sub
ret
cli
pop
or
mov
and
xchg
cmc
inc
ret
jge
jb
xchg
pop
mov
mov
popa
push
ret
test
lds
dec
fsub
pop
sub
stos
jecxz
mov
ins
arpl
hlt
inc
aas
shl
adc
and
adc
rcr
cwde
mov
mov
xchg
xor
xor
cmp
je
sti
or
xor
sahf
in
dec
mov
cld
cmp
pop
ss
xor
mov
push
xor
push
jmp
pop
xchg
mov
retf
je
bound
mov
xchg
jle
mov
mov
push
inc
push
lods
cmp
loope
cmc
call
hlt
ss
jb
xchg
push
inc
ja
cmp
sbb
hlt
adc
cdq
mov
xchg
push
adc
jle
push
nop
cmps
dec
sbb
rol
mov
pop
push
mov
cmp
adc
and
cmp
loope
std
enter
push
push
(bad)
cdq
xchg
dec
push
mov
mov
jae
push
push
xor
mov
aas
mov
or
test
sbb
add
mov
dec
in
xor
jp
adc
repnz
sbb
mov
sub
jle
mov
shr
scas
lock
mov
loop
cmps
test
xor
mov
xchg
pop
xlat
mov
inc
lahf
cmp
out
mov
(bad)
dec
mov
out
outs
jae
fistp
push
adc
sbb
out
mov
adc
pop
mov
or
(bad)
(bad)
sbb
xchg
sbb
shr
movs
ss
mov
ds
adc
pop
pop
cwde
lea
add
gs
in
daa
sbb
xchg
push
in
movs
repz
in
cmp
repz
push
adc
pusha
fnsave
cdq
pop
pop
popf
jecxz
retf
fs
inc
add
scas
rcl
inc
mov
and
dec
ret
cmp
int
push
dec
les
call
xchg
ins
mov
mov
(bad)
scas
cmps
dec
js
add
mov
dec
xchg
mov
inc
not
jae
sbb
mov
jmp
imul
xchg
xchg
ds
fs
aas
int3
jae
popf
add
imul
popf
or
popa
cmp
xchg
jecxz
mov
lock
mov
shl
push
stc
fsub
scas
lea
mul
dec
paddusw
iret
cmp
test
sub
js
inc
jae
or
test
jge
sbb
iret
ret
gs
repnz
sub
xchg
out
pop
fstp
sbb
jmp
mov
and
stos
cmps
adc
mov
lock
call
shl
or
dec
pop
or
std
retf
xchg
out
pop
push
hlt
je
scas
mov
sub
adc
(bad)
mov
stos
ja
and
addr16
mov
leave
aam
fs
mov
cmp
adc
stc
out
mov
mov
xor
out
sub
jne
add
jmp
pop
add
cmps
cs
dec
lods
jle
clc
push
push
sbb
adc
xchg
xchg
cld
sub
lock
xchg
cmps
test
cmps
jge
sub
icebp
mov
add
imul
pop
cmc
pop
mov
and
imul
xchg
fsubr
cli
jge
and
shl
dec
push
lock
mov
mov
xor
cmp
(bad)
int3
jo
add
xchg
retf
leave
inc
jno
cld
sar
sub
lahf
(bad)
dec
and
or
push
mov
mov
fcmovnb
test
mul
and
add
scas
or
(bad)
outs
fdivp
sbb
xlat
jmp
scas
mov
or
ds
dec
cmc
jae
pop
mov
jnp
sub
jmp
bndldx
dec
add
push
or
mov
daa
adc
sbb
leave
in
pushf
mov
(bad)
mov
lea
xor
sub
xchg
out
mov
jmp
add
ja
addr16
add
ret
jmp
xchg
xor
xchg
(bad)
pop
sti
cld
(bad)
and
jae
sub
mov
mov
add
mov
push
mov
push
sti
push
mov
adc
test
jbe
xchg
and
fisttp
jae
retf
stos
mov
das
popa
in
xlat
xchg
push
mov
inc
repz
inc
jns
mov
sbb
rcl
lahf
popa
rol
cmp
call
loope
in
jl
cld
fcmovne
pop
cmps
movs
inc
fld
pop
aaa
fild
les
shl
xor
jecxz
fld
movs
xchg
call
push
cdq
dec
jo
mov
xchg
dec
pushf
xchg
or
or
cld
sbb
icebp
nop
test
jp
es
adc
(bad)
pop
xchg
mov
pop
dec
lods
aam
mov
jb
das
or
push
mov
fild
jae
daa
push
sbb
lods
xchg
xchg
fstp
cli
sub
mov
or
add
nop
mov
jo
or
popa
jge
xor
cmp
sub
popf
sub
xor
les
xchg
cwde
test
mov
mov
adc
arpl
enter
cmps
or
bound
xchg
xchg
adc
jo
inc
cmp
and
jp
adc
dec
sbb
cli
shr
mov
cmp
mov
jne
jg
jbe
mov
mov
stc
(bad)
movs
(bad)
leave
xor
jno
xchg
cmps
movs
inc
jo
mov
jmp
test
and
cld
movs
call
leave
test
gs
rcr
sbb
mov
mov
pushf
sbb
pop
xor
xchg
jl
ins
inc
xlat
cmp
loope
adc
pop
test
xchg
test
pop
mov
or
cmp
cs
cld
das
test
cmps
mov
pop
sub
jae
mov
adc
imul
int
xchg
bound
push
pop
nop
fwait
or
mov
push
jns
mov
sar
mov
mov
imul
pop
push
mov
test
stos
mov
jae
jbe
sbb
xchg
cmp
popa
jae
sub
mov
xchg
cmp
and
neg
and
test
(bad)
push
jae
js
mov
out
adc
fnstenv
jp
gs
js
dec
jnp
in
cmps
dec
lock
jae
mov
mov
inc
js
sbb
ficomp
xor
or
xor
fs
loopne
mov
cmps
adc
dec
xchg
shl
xchg
xchg
mov
cmp
inc
xor
xchg
adc
fsubr
jae
cmp
addr16
add
adc
addr16
hlt
out
mov
sub
cmp
movs
lea
cmp
add
pop
stos
hlt
ja
das
retf
data16
out
sbb
add
cwde
jecxz
push
xchg
jmp
xchg
mov
xor
mov
loop
scas
inc
pushf
xor
fsub
fs
sub
cwde
stos
sub
pop
mov
cmps
jb
inc
xchg
fdivr
xor
cmc
idiv
out
sub
dec
xchg
shr
int3
movs
push
aam
jb
cmp
iret
mov
fstp
fidiv
imul
aaa
pop
push
and
mov
(bad)
and
sbb
in
mov
or
scas
jp
(bad)
xchg
xor
fcom
or
jbe
adc
jecxz
daa
cwde
sbb
int3
rcr
mov
(bad)
mov
dec
mov
pop
stc
loopne
rol
mov
rcl
call
mov
xor
push
xchg
mov
cmp
clc
ins
ret
or
or
pop
jbe
pop
sbb
pop
gs
inc
xchg
mov
(bad)
push
lods
test
frndint
std
mov
cmp
jae
jae
push
les
iret
shr
and
sub
nop
stos
jbe
lds
cld
push
add
dec
xchg
xor
inc
ds
loopne
cld
jge
add
mov
xor
mov
or
aas
ficom
call
pop
(bad)
jl
outs
jmp
jge
add
cmp
xchg
sbb
cmp
mov
push
push
test
(bad)
mov
jb
push
dec
xchg
mov
xchg
dec
ins
loopne
jae
xchg
outs
mov
pusha
push
jg
movs
xor
inc
jne
xchg
nop
iret
ficomp
ror
jae
test
xor
mov
sub
xor
dec
sar
xchg
ja
out
pop
cmp
js
jae
dec
fucomi
mov
cmp
jno
inc
aaa
outs
fdiv
mov
pushf
dec
pop
ins
in
lods
lods
retf
mov
pop
sub
loop
dec
push
inc
xor
jge
arpl
mov
test
xchg
addr16
add
fdiv
imul
ja
jecxz
pushf
sbb
call
pop
aas
int
repz
jae
sub
loop
dec
mov
cmp
jae
sub
jbe
xchg
push
adc
jle
jecxz
fdiv
retf
cmp
xchg
rcr
push
and
jmp
adc
daa
mov
or
adc
jae
gs
scas
xor
int3
iret
pop
out
hlt
mov
or
mov
jecxz
push
cmps
xchg
push
out
cdq
xor
inc
sbb
cmp
jbe
and
mov
adc
(bad)
mov
dec
bnd
and
push
xor
cmp
mov
cwde
mov
sbb
adc
repz
das
fst
xor
xor
call
scas
inc
adc
sbb
xor
pop
in
and
xchg
into
pop
add
pushf
loop
push
retf
cmp
test
lods
movs
jecxz
cld
push
jmp
enter
iret
dec
xchg
push
adc
xor
shl
rcl
dec
stos
arpl
xchg
push
sbb
mov
mov
mov
inc
cdq
xor
add
not
pop
sbb
push
cmp
pop
or
pop
mov
pop
xchg
push
or
pop
ret
inc
lock
scas
mov
outs
test
adc
ds
ins
mov
outs
sbb
cmc
add
add
icebp
sbb
adc
ss
add
push
mov
xor
jns
lahf
in
xchg
jmp
add
rcr
pop
jae
shr
pop
sbb
movs
xor
mov
scas
push
push
enter
and
pop
jo
call
push
xchg
mov
adc
cdq
or
mov
jno
retf
iret
add
and
pop
xchg
cmp
cmp
jle
or
xor
push
cmp
and
add
icebp
movs
mov
lahf
inc
push
cld
push
stos
cmp
shr
arpl
xchg
jae
mov
jne
mov
sbb
cs
shl
mov
out
int3
mov
jae
xor
sub
jle
adc
jg
movs
mov
repnz
mov
pop
adc
pop
fstp
cs
inc
mov
mov
cld
cmp
xchg
pop
fs
fbld
jae
fadd
nop
(bad)
or
or
xchg
inc
jge
lds
les
aas
jmp
jno
sar
dec
pop
nop
sub
hlt
sub
call
in
(bad)
mov
aaa
aaa
sti
push
stc
sahf
mov
push
jae
add
sub
pop
adc
dec
scas
ins
(bad)
frstor
and
sbb
dec
add
mov
mov
fdiv
pop
sub
sbb
push
mov
push
imul
xchg
xor
mov
pusha
dec
pop
ret
call
pop
cli
mov
addr16
fucomi
fucomp
cdq
mov
sti
rcl
mov
push
mul
lock
cmp
push
add
cmps
sub
xchg
jae
xor
mov
cmp
jmp
fidivr
in
push
push
mov
test
adc
cmp
sti
mov
inc
jae
sub
clc
mov
xchg
xchg
pop
shl
cmp
or
jp
mov
xchg
sub
(bad)
lock
add
pop
inc
fadd
xchg
sbb
push
jmp
sub
test
pop
dec
ins
repz
ins
inc
cli
fnsave
sbb
pop
arpl
mov
adc
cmp
loope
into
cmp
jae
mov
mov
psllq
push
(bad)
loope
or
sbb
xchg
dec
xchg
dec
lods
cmps
or
jae
sbb
fisttp
fimul
sub
stos
cmp
sub
sbb
cmp
xchg
sbb
dec
jl
xchg
addr16
xor
pop
(bad)
dec
xchg
cmp
jbe
pop
push
ja
mul
add
sbb
out
cmp
xchg
sub
cwde
sbb
pop
xchg
test
test
sub
ss
xor
adc
adc
xchg
mov
push
imul
arpl
fsub
xchg
pop
shl
jae
mov
ins
les
add
je
mov
adc
mov
xor
mov
or
mov
pop
cld
mov
(bad)
out
mov
xchg
mov
std
jg
and
repz
mul
cmpxchg
nop
int
and
sbb
arpl
and
int
or
xchg
xchg
adc
ja
push
out
sub
add
dec
cmps
jae
jno
(bad)
call
lea
outs
sbb
jg
aad
jmp
inc
mov
mov
imul
jmp
(bad)
popf
cmp
sbb
test
(bad)
xor
xor
ja
dec
sbb
hlt
ins
mov
sub
and
inc
lea
inc
into
xor
mov
pop
lods
imul
(bad)
cmp
add
mov
shl
mov
xor
sbb
ds
add
xor
push
push
mov
int3
dec
jns
rcl
sub
and
dec
in
jae
adc
ja
sbb
xor
and
test
jge
sub
rcl
fxtract
inc
pop
or
sbb
mov
fcmovb
cdq
fwait
mov
lea
xor
mov
call
das
dec
popa
les
sbb
in
repnz
lods
loope
push
ja
imul
jb
arpl
mov
adc
cwde
mov
aaa
test
bound
and
in
out
and
add
call
pop
push
pushf
pop
fst
xor
mov
retf
cmc
xor
adc
(bad)
iret
inc
shl
inc
(bad)
dec
ficom
and
fild
es
out
mov
mov
and
xchg
sbb
ret
ins
adc
add
es
mov
and
call
popf
jne
adc
sahf
xlat
retf
dec
inc
jmp
mov
dec
mov
sar
jae
sub
out
pop
stos
sbb
cmp
pop
adc
mov
add
popf
cmc
cmp
mov
pop
jae
xchg
hlt
call
imul
mov
in
out
add
sbb
mov
in
icebp
imul
mov
imul
xor
jecxz
(bad)
mov
clc
and
mov
jno
xchg
in
test
jp
lods
jae
or
push
dec
sbb
or
stc
xsha1
cmps
int3
and
inc
sub
xor
adc
je
pop
test
mov
fwait
push
xchg
into
test
mov
xor
xchg
push
jp
sbb
cmps
imul
aam
push
pop
aaa
mov
push
dec
and
aaa
or
add
in
data16
jae
cmp
mov
jecxz
sub
fistp
adc
jno
pop
rol
mov
push
push
test
cwde
jae
inc
int3
cmp
mov
push
push
stc
dec
mov
pop
icebp
inc
dec
jmp
sub
aam
add
xchg
adc
adc
lods
mov
pusha
jge
fcmovb
pop
pusha
inc
sbb
cs
add
ins
cwde
mov
in
aad
cmps
mov
or
sbb
retf
cmps
iret
retf
sub
adc
lahf
fnsave
or
loop
xchg
test
inc
xchg
popa
mov
push
or
cld
mov
pop
jg
ds
mov
pop
outs
push
les
sahf
out
dec
adc
cdq
xor
lock
jmp
aam
or
mov
xor
dec
cmc
sub
sbb
sahf
into
lock
adc
fisub
cmp
bound
jns
lds
rcr
cli
scas
aad
dec
mov
dec
jecxz
daa
test
sbb
aas
dec
call
pop
lods
jle
pop
push
movs
iret
sub
jbe
sbb
fstp
push
inc
mov
(bad)
mov
mov
xor
scas
cmp
in
mov
lock
pusha
ret
xor
mov
lea
mov
jmp
dec
hlt
mov
jmp
leave
mov
xchg
bound
adc
sub
clc
jmp
ficomp
sbb
stos
aaa
mov
pop
popf
adc
add
xchg
jg
inc
(bad)
bound
inc
lods
hlt
jns
push
je
retf
adc
fnstenv
mov
imul
in
bound
data16
out
push
(bad)
mov
push
mov
adc
mov
cwde
mov
imul
cli
outs
sbb
leave
push
jae
pop
jmp
test
or
dec
push
mov
(bad)
adc
rcr
mov
test
sbb
in
iret
scas
pop
sub
mov
nop
dec
scas
std
or
xchg
hlt
jl
(bad)
(bad)
push
aaa
sbb
push
int
mov
(bad)
aad
not
fdivr
add
push
out
pop
jl
in
nop
les
out
(bad)
std
mov
repnz
mov
jae
sar
mov
sbb
movs
in
gs
inc
shl
xchg
mov
jl
mov
fiadd
imul
stos
scas
or
repz
(bad)
pop
lock
cmp
in
jmp
dec
add
and
xchg
int
pusha
popf
mov
push
and
movs
cmps
adc
inc
pop
gs
xor
and
cmp
inc
jecxz
hlt
sbb
dec
pop
ret
fwait
cmp
outs
xchg
mov
loop
loopne
dec
sub
ja
mov
jae
xchg
outs
lods
popf
aaa
mov
sbb
cmp
movs
sbb
call
add
mov
xchg
push
push
fstp
xor
jnp
sub
pop
pop
sbb
jmp
aam
dec
data16
sbb
jge
ret
mov
push
mov
jmp
lods
call
retf
jg
shl
push
ficomp
aaa
dec
jae
pop
mov
dec
mov
test
adc
mov
inc
xchg
call
repnz
jle
cmp
push
pop
mov
xor
pop
or
xchg
mov
jo
sbb
push
loopne
leave
outs
mov
push
mov
sbb
jg
(bad)
cmp
and
cmp
les
test
ins
ret
sbb
dec
sub
scas
out
adc
mov
jne
mov
in
sti
dec
sub
xchg
aam
test
pop
dec
mov
iret
push
je
xchg
push
jle
mov
mov
cmp
mov
adc
ins
xchg
mov
call
cmc
sub
popw
mov
scas
(bad)
shr
xor
sti
push
mov
ins
mov
add
mov
call
outs
add
fst
lods
adc
lods
ins
adc
outs
xor
ror
sbb
mov
sub
int3
push
jnp
lds
add
inc
mov
sbb
xchg
pop
jp
icebp
adc
aad
cli
pop
mov
imul
jnp
or
mov
xor
adc
mov
in
sbb
dec
(bad)
lods
(bad)
mov
add
es
arpl
imul
jno
inc
(bad)
rol
leave
lea
push
mov
dec
mov
add
inc
movs
mov
and
pop
fadd
cmc
dec
add
and
xor
movs
dec
repz
jge
and
dec
sub
pop
fsubr
and
out
and
sub
out
clc
pop
mov
out
test
inc
test
cmp
pop
inc
add
fucomi
out
add
test
xchg
mov
fmul
dec
mov
stc
dec
mov
mov
cmc
inc
mov
xor
push
pop
mov
ret
es
movs
inc
test
int3
ins
pop
mov
sub
cld
sbb
pop
shl
(bad)
(bad)
shr
mov
hlt
adc
jmp
cld
cmps
adc
pop
imul
xor
sbb
movs
jge
mov
dec
pop
ficom
call
outs
mov
dec
pop
rol
sbb
push
iret
popa
mov
jbe
es
js
and
int
or
mov
adc
cmps
scas
imul
fsubr
inc
jmp
cmp
lds
fstp
pop
pop
or
dec
mov
out
inc
stc
sbb
lods
mov
in
mov
loope
repz
adc
xlat
and
xor
inc
(bad)
fisubr
mov
add
xchg
enter
sar
mov
and
mov
sbb
mov
call
mov
test
cmps
and
aas
xchg
repz
(bad)
(bad)
jae
in
scas
pop
sub
cmps
sub
and
xor
xor
daa
cs
sbb
div
push
lods
retf
jmp
mov
iret
jp
or
cmp
stc
xor
lds
or
je
pop
dec
mov
adc
in
test
add
inc
sub
mov
dec
mov
aas
lods
test
jae
cmps
or
inc
cdq
leave
push
loopne
xor
icebp
das
xchg
jae
push
shl
ds
mov
movs
aaa
aad
nop
xlat
popf
sbb
pushf
shr
jl
lds
pop
and
hlt
mov
ds
mul
sar
mov
sub
(bad)
lds
pop
mov
pop
mov
sbb
pop
pop
(bad)
(bad)
ja
mov
cmp
jl
mov
call
rol
icebp
xor
pop
mov
js
mov
push
shl
or
das
or
das
or
push
scas
bswap
hlt
out
dec
mov
push
lods
or
(bad)
movs
inc
(bad)
xor
cmp
rcl
(bad)
rol
inc
ret
mov
add
xor
aas
xchg
xchg
mov
lods
mov
jecxz
repnz
pop
xlat
or
rol
hlt
mov
rcl
jns
or
mov
rcr
mov
adc
xchg
mov
lods
shrd
clc
push
fnsave
add
hlt
loopne
push
shl
push
sub
xor
add
vpunpckhbw
cmp
xchg
push
adc
fwait
(bad)
mov
cld
ins
xor
sub
in
or
sbb
push
mov
stos
inc
imul
mov
fisubr
lods
icebp
add
into
sar
xchg
pop
dec
test
mov
daa
mov
inc
lods
xchg
inc
xor
jo
inc
mov
dec
cmps
ja
test
stos
jae
scas
push
pop
add
cmp
pop
nop
in
call
outs
mov
icebp
hlt
push
cwde
out
push
rcl
dec
retf
lea
pop
jmp
clc
js
pop
mov
dec
in
mov
pop
add
pushf
out
mov
das
push
lods
pop
cmps
add
sub
add
stos
adc
add
adc
push
aas
pop
adc
inc
add
daa
sbb
into
xor
cdq
add
jns
add
imul
aas
jo
outs
pusha
dec
pop
movs
xor
and
lds
dec
sbb
dec
frstor
adc
(bad)
xchg
sub
(bad)
sahf
adc
je
dec
push
jge
xchg
pop
jo
dec
pop
je
nop
jae
lock
pop
ja
jns
sbb
push
cs
cmc
push
jnp
and
jae
or
pusha
sbb
addr16
adc
adc
dec
rcr
nop
jge
mov
mov
push
stos
je
in
xchg
adc
cdq
int
and
push
jl
in
adc
mov
add
jne
xor
dec
aad
mov
sub
hlt
cmps
mov
adc
sbb
mov
xchg
jno
mov
mov
je
sbb
dec
and
mov
mov
retf
fwait
call
pushf
je
push
mov
adc
or
mov
xchg
adc
ret
pop
fbld
out
lods
xor
daa
shl
jne
cwde
dec
js
sbb
outs
sbb
sub
test
stos
jb
arpl
pop
cwde
ss
scas
lea
xchg
adc
mov
movs
cmc
xchg
fist
(bad)
fcmovne
pop
out
lock
or
in
pop
mov
jo
cmp
adc
cmps
nop
pop
in
xlat
stc
imul
stc
xchg
pop
mov
xchg
dec
and
xchg
dec
xchg
shr
and
jae
pop
cmp
in
xor
sbb
sar
push
retf
xlat
(bad)
in
into
fdivr
int3
(bad)
imul
mov
iret
(bad)
fild
(bad)
jnp
mov
ja
mov
jo
mov
ror
test
test
jnp
jae
cdq
lock
daa
xchg
hlt
jbe
xchg
mov
mov
sbb
call
mov
xchg
jb
pop
js
dec
pop
xor
aaa
mov
aam
jae
push
cmp
dec
push
cld
aad
hlt
mov
sbb
jmp
push
sbb
or
dec
pop
out
movs
mov
scas
add
jmp
and
ins
sbb
mov
jae
dec
lock
or
mov
cs
ins
call
aaa
inc
dec
push
nop
(bad)
popf
imul
cmps
mov
stc
mov
xor
push
pop
mov
loopne
add
mov
sbb
call
xchg
test
dec
sbb
mov
es
adc
xor
xchg
jo
adc
cmp
pop
jb
rcl
or
push
dec
add
dec
cwde
lock
jge
inc
push
jmp
js
xchg
arpl
and
xchg
gs
jl
mov
in
push
pop
test
jo
push
inc
out
hlt
jae
mov
and
stos
addr16
xchg
push
dec
jmp
daa
add
mov
push
cld
addr16
fldenv
xor
sahf
cmp
fisttp
push
test
loope
jp
dec
loope
dec
or
dec
jg
inc
loop
or
mov
out
pushf
mov
pop
leave
jo
pop
sbb
imul
adc
popf
mov
xor
fcmove
xor
aas
xchg
in
and
cmp
(bad)
bnd
jnp
shl
and
and
xchg
stos
mov
cmc
lock
mov
pop
jns
mov
and
or
jns
ja
pusha
xor
jae
mov
dec
mov
mov
adc
mov
push
xchg
adc
mov
fidiv
fcmovu
sbb
ja
ins
mov
test
jae
dec
add
int
arpl
repnz
inc
(bad)
cld
add
sbb
dec
and
lods
adc
mov
ins
imul
push
xchg
sbb
jne
add
cmp
neg
jb
retf
ret
pop
int3
cmp
dec
fisub
mov
xchg
inc
clc
inc
in
(bad)
lods
jmp
int3
jp
hlt
inc
gs
push
and
imul
aam
pop
sbb
mul
push
add
ficomp
gs
or
int3
shl
jecxz
mov
int
jecxz
and
jb
rcl
stc
push
ret
and
xor
mov
inc
mov
sbb
hlt
and
cmp
mov
loopne
enter
mov
cmps
mov
sub
adc
popf
je
not
sahf
cmp
mov
mov
sbb
out
sub
mov
iret
popf
mov
push
add
rol
fwait
adc
loop
xchg
not
out
mov
call
(bad)
in
and
mov
lods
and
repnz
dec
xchg
or
cld
jno
mov
mov
xchg
sub
sbb
xchg
in
iret
mov
loope
jl
scas
popf
mov
test
jae
add
stc
mov
add
daa
jns
jecxz
xchg
push
jae
add
push
mov
mov
sbb
sub
mov
repz
xlat
mov
mov
jo
(bad)
sbb
adc
in
ret
adc
out
rol
ds
adc
and
push
cld
lock
lds
inc
and
popa
or
mov
daa
xchg
pop
sbb
jl
loop
xchg
push
sub
sbb
mov
and
mov
pop
jae
jne
js
outs
aas
and
lock
cmp
jns
ss
mov
push
aad
lds
and
xchg
push
mov
loop
inc
dec
jecxz
cli
inc
retf
lock
pop
ret
mov
scas
push
and
jae
mov
loopne
imul
jno
(bad)
jae
loopne
std
loopne
add
sbb
jnp
and
retf
jb
sbb
sbb
int
repz
add
shr
jns
mov
clc
retf
cmp
adc
adc
mov
pop
into
in
push
clc
clc
fcomp
mov
mov
inc
push
or
or
mov
mov
pop
adc
and
mov
int
add
cmp
stos
ret
test
call
es
adc
mov
test
ja
dec
cmp
pusha
scas
inc
inc
xor
cmps
jae
aam
pop
mov
jge
js
cmp
stos
test
inc
add
(bad)
js
jmp
call
jae
pop
cdq
mov
jns
fld
push
mov
dec
jmp
mov
sub
test
cmps
mov
fwait
xchg
aaa
pop
and
xchg
jns
lods
dec
inc
addr16
hlt
mov
aad
out
xor
jnp
pop
mov
sbb
pop
cmp
in
ja
popa
xchg
sub
inc
mov
nop
sub
lahf
jno
and
pop
iret
mov
jns
jmp
inc
inc
pusha
inc
cdq
jbe
dec
lods
mov
sub
test
dec
jecxz
lahf
jmp
mov
inc
aad
inc
(bad)
xchg
push
xlat
jecxz
mov
add
inc
lock
in
push
mov
fnsave
jnp
movs
stos
push
lods
mov
nop
jbe
shl
jnp
pusha
repnz
pop
gs
rcr
(bad)
imul
cmp
enter
xrelease
lds
xor
jne
jl
shl
sbb
push
je
dec
sbb
push
pop
movs
lea
pop
aad
xchg
or
lods
pop
vmovntps
in
mov
test
mov
inc
popf
in
ffreep
enter
mov
add
adc
push
cld
dec
shr
and
bound
add
or
xchg
js
jns
ficom
cmp
push
not
int3
call
jae
cdq
or
stos
movs
push
sbb
push
pop
xchg
mov
or
push
js
mov
fs
stos
pushf
jmp
push
cmc
add
pop
sbb
pop
test
cmps
push
xchg
xor
pushf
add
bound
pop
push
cli
out
in
imul
inc
loopne
jbe
pushf
mov
adc
sub
xchg
int
push
adc
mov
ret
mov
push
jo
push
add
inc
test
xor
xor
pusha
and
inc
js
mov
cdq
shr
sbb
jne
dec
mov
cmps
pop
jmp
fimul
add
push
shl
dec
loopne
push
lods
in
scas
cdq
mov
mov
inc
add
dec
in
xchg
pop
xor
rol
daa
xchg
pop
mov
mov
cmc
add
mov
(bad)
inc
dec
or
jmp
pushf
int3
inc
lea
into
xchg
fcmovne
add
xor
(bad)
jg
xchg
movs
and
nop
xor
jnp
mov
call
cld
mov
neg
icebp
and
clc
dec
cs
xchg
or
addr16
push
rcl
mov
sbb
cmp
sbb
add
xor
cwde
mov
sub
dec
repnz
and
push
jae
jo
and
(bad)
mov
sub
sahf
push
(bad)
xchg
js
mul
jo
mov
push
cmp
(bad)
jmp
push
inc
rcr
imul
jns
ds
sub
sub
repz
jae
add
xchg
and
xchg
sbb
test
(bad)
mov
jmp
sbb
mov
add
(bad)
jmp
push
addr16
xchg
adc
pusha
cli
jmp
push
dec
adc
xchg
popf
stos
lock
movs
ss
mov
neg
sbb
push
inc
push
aaa
lds
xor
loopne
js
sbb
add
jle
and
hlt
es
je
es
sub
std
mov
jle
loopne
cmp
push
aam
jle
loopne
jae
int
jbe
imul
xor
sbb
sbb
and
out
mov
jns
xlat
(bad)
cmp
adc
xchg
jmp
jecxz
jae
inc
dec
lea
outs
iret
fisttp
int
xchg
pop
aas
sti
test
neg
and
jp
inc
mov
dec
push
sbb
dec
pop
jae
into
jmp
jno
inc
retf
jle
inc
mov
jnp
ja
and
fwait
push
add
lods
ja
xchg
sub
jns
push
and
das
je
adc
inc
(bad)
stc
dec
fidivr
mov
loope
xchg
mov
bound
fisubr
jae
jmp
push
inc
data16
pop
inc
push
jne
lahf
pop
(bad)
jne
inc
data16
sbb
sbb
pusha
rcl
adc
int
aaa
cli
int
mov
fsubr
(bad)
mov
je
push
or
mov
push
rcr
mov
cmp
gs
push
push
pop
(bad)
neg
mov
sar
rol
sti
pop
and
mov
xchg
movs
sbb
add
out
jecxz
cmp
lods
dec
push
fmul
push
dec
inc
adc
loopne
inc
in
hlt
push
lods
push
adc
in
outs
test
in
pop
dec
inc
fnstenv
aad
jbe
repz
mov
sbb
lods
loop
jle
ja
xor
es
fcmovbe
shr
pop
jns
fist
mov
pop
inc
xchg
hlt
test
retf
jne
aad
repz
adc
in
hlt
ins
xchg
inc
xchg
sbb
inc
pop
stos
lds
pop
adc
mov
shl
sbb
stos
cmc
hlt
xor
ret
add
ja
sbb
xor
aad
push
jmp
icebp
inc
sbb
sub
xor
add
sbb
in
mov
jns
push
push
stos
(bad)
imul
stos
adc
out
adc
call
jae
xchg
addr16
dec
inc
xor
ss
cmp
int
and
aas
arpl
cmp
mov
loope
mov
sti
int
sub
aad
push
sbb
jecxz
lds
mov
adc
add
mov
lds
mov
repz
xor
popf
retf
xchg
gs
enter
dec
repnz
test
outs
jmp
push
mov
imul
jo
repz
call
jg
jo
cmp
sub
jge
push
mov
mov
dec
push
not
test
cwde
mov
cs
jae
push
pop
push
repnz
mov
cmps
jno
imul
jae
jecxz
and
inc
lock
cmc
pusha
out
imul
mov
sbb
inc
mov
addr16
push
push
mov
fcom
and
(bad)
jo
shl
aaa
mov
je
ds
pop
leave
inc
xchg
mov
sub
adc
lds
imul
adc
popf
adc
addr16
fnstsw
pop
jae
test
sbb
sub
xchg
sub
dec
dec
cmp
pop
sbb
out
aam
or
fstp
dec
arpl
lds
xor
xchg
and
mov
push
mov
mov
arpl
jae
(bad)
cmps
mov
pop
pop
cmp
xchg
sub
outs
inc
mov
sbb
aam
pop
or
cmp
ficomp
sub
mov
inc
adc
mov
jg
adc
sub
mov
inc
xor
or
retf
icebp
push
outs
movs
enter
rcr
cmps
test
push
imul
sbb
call
ror
aad
lock
mov
rcr
xchg
out
jp
loop
adc
push
jbe
mov
mov
jo
adc
pusha
shl
retf
sub
div
jecxz
loopne
mov
xchg
mov
mov
jmp
xor
inc
sbb
sub
cmp
xlat
int3
add
push
nop
ins
in
cmp
pop
mov
sbb
dec
std
test
push
pusha
xor
repz
in
mov
jmp
add
cld
loop
cld
adc
addr16
dec
stos
push
addr16
sbb
xor
xor
mov
dec
mov
mov
cmp
inc
in
mov
add
and
fdivr
xor
sub
sar
test
mov
icebp
xor
movs
mov
mov
sahf
lahf
jae
jne
(bad)
jbe
push
or
add
(bad)
push
pushf
mov
xchg
jmp
jno
mov
xor
ins
mov
imul
bound
sub
mov
jno
xchg
jle
xor
pop
lock
aaa
jecxz
(bad)
pusha
imul
inc
and
mov
mov
and
xchg
push
loop
icebp
xor
add
dec
sbb
jle
xchg
sbb
mov
test
mov
cmc
(bad)
and
dec
hlt
jp
mov
xor
sti
movs
add
xlat
mov
sbb
adc
adc
jmp
sub
imul
(bad)
inc
call
jmp
addr16
ins
sbb
add
and
sbb
in
adc
aam
dec
(bad)
leave
xchg
enter
inc
mov
xor
jne
test
sbb
test
aad
out
and
adc
adc
call
adc
popf
jbe
mov
sub
popa
xchg
push
or
not
jp
xor
mov
xchg
das
idiv
leave
pop
jmp
sar
fs
xor
lds
lock
mov
dec
out
repnz
xchg
cli
mov
dec
scas
inc
sbb
and
pop
in
std
ds
std
mov
ins
dec
icebp
sbb
xchg
pop
and
jl
inc
xlat
pop
jae
mov
mov
mov
push
repnz
aam
(bad)
dec
out
jp
ins
icebp
inc
or
ds
or
pop
shl
and
fwait
(bad)
fmul
sbb
push
das
stc
mov
mov
xor
jecxz
xchg
lods
mov
aad
icebp
pop
sbb
or
lods
lods
sahf
pop
pop
mov
mov
sar
fld
jmp
pop
pop
pop
pop
and
pop
add
lods
shl
(bad)
mov
xchg
xchg
out
adc
mov
pop
jae
xlat
je
js
sbb
iret
cmp
xchg
(bad)
mov
jle
jg
push
jae
xchg
fwait
jb
add
mov
js
pop
sti
mov
xchg
jmp
xor
pushf
inc
jne
cmp
xchg
mov
pop
movs
cmp
fcom
test
pop
push
and
adc
and
imul
sbb
sbb
popf
mov
neg
push
lock
cmp
mov
pop
sbb
mov
sub
dec
jb
push
pop
hlt
stos
sub
jo
scas
fild
(bad)
xor
sbb
push
cli
xor
add
push
push
ss
xchg
ins
mov
xor
xor
adc
mov
ret
je
add
outs
sti
aam
adc
cs
mov
loopne
sub
jp
aam
mov
xor
fwait
loop
sti
mov
mov
lock
dec
jae
jae
aam
into
mul
jl
mov
fbstp
aad
retf
(bad)
lods
adc
add
mov
repz
call
push
mov
mov
inc
or
jp
outs
in
nop
sbb
call
jmp
sbb
enter
aam
sbb
cs
(bad)
lods
and
xchg
sbb
push
xor
pop
xchg
adc
dec
fidivr
mov
sbb
jge
imul
jno
(bad)
adc
lods
ds
xor
cmp
ins
inc
xchg
scas
pop
jmp
dec
jae
jb
mov
(bad)
sub
jg
mov
cdq
xor
popf
js
jne
sub
sub
inc
adc
out
mov
push
mov
inc
xor
ja
xor
push
(bad)
jge
repz
mov
xchg
aas
mov
mov
cmp
fidiv
unpcklps
xor
push
adc
test
xor
pop
stos
cmp
adc
stc
or
mov
lods
cmp
loopne
das
je
jecxz
xor
pop
and
fidivr
shr
sub
push
data16
xor
retf
mov
sbb
xor
test
imul
test
addr16
cli
or
rcl
fcom
test
icebp
sub
mov
pop
pop
popa
xlat
dec
cmp
cmp
mov
call
add
xor
outs
push
mov
jnp
les
pop
inc
cwde
push
sbb
ror
(bad)
mov
das
jb
(bad)
sbb
mov
sbb
out
test
mov
mov
aas
iret
shr
std
pop
xor
or
pop
jmp
in
repnz
xor
push
ss
nop
mov
ss
adc
stos
pop
xchg
out
loopne
into
jmp
push
pop
pop
adc
fcomp
hlt
cmp
adc
je
cmps
xchg
cmp
cli
xor
push
stos
xor
aam
mov
inc
jae
jne
xchg
push
adc
ins
pop
pop
aas
add
xlat
add
adc
mov
retf
mov
inc
pop
(bad)
sub
nop
ins
fimul
popf
imul
ja
mov
test
stos
test
push
xor
mov
mov
fwait
icebp
mov
mov
pushf
dec
cmp
call
add
jecxz
fimul
mov
jo
mov
mov
mov
imul
ror
inc
data16
jne
jo
adc
leave
test
fwait
into
xchg
and
cmc
lods
mov
int3
lods
imul
scas
jo
sbb
jns
test
jbe
sbb
dec
rol
push
repnz
inc
mov
jge
cmps
xor
sub
adc
test
cdq
cmp
icebp
cmc
jns
dec
in
cmps
push
cwde
or
mov
daa
(bad)
and
inc
out
mov
fcomp
pop
sub
mov
scas
ror
push
adc
lods
into
ss
dec
mov
jno
mov
xchg
dec
mov
push
mov
mov
push
mov
(bad)
cmp
fidiv
adc
call
jne
add
mov
outs
mov
jo
imul
test
shl
mov
adc
leave
in
adc
idiv
xchg
adc
push
(bad)
cmp
xchg
mov
call
xchg
mov
cmp
xchg
jne
repz
mov
sub
(bad)
fild
cmp
fs
mov
loope
cdq
out
and
loopne
xchg
adc
out
xchg
xor
(bad)
cmc
sbb
sbb
imul
adc
jmp
(bad)
iret
dec
sub
or
xor
retf
jmp
mov
div
out
rcr
or
nop
sbb
xor
int3
sub
jno
fstp
inc
or
xor
mov
rcl
movs
cld
in
stos
movs
push
ins
pop
vsqrtpd
push
mov
sbb
jmp
or
xchg
add
mov
mov
mov
out
out
dec
loop
into
nop
pop
adc
js
pop
xor
ss
mov
mov
pop
sbb
mov
add
xchg
lods
and
pop
nop
mov
cmp
dec
ror
sbb
cmc
es
mov
and
adc
cmps
sbb
xor
mov
adc
mov
ret
sbb
lods
mov
call
je
stos
mov
add
mov
sbb
push
mov
xchg
cdq
cmc
cmp
imul
jno
jp
pop
or
dec
(bad)
xchg
jl
cdq
cmp
sbb
out
cmp
mov
mov
inc
jmp
clc
xchg
mov
dec
in
inc
mov
jns
fadd
sub
cmp
call
xchg
jae
jno
cmp
cmc
cli
je
cmps
xor
inc
(bad)
bound
mov
push
call
xor
pusha
mov
mov
inc
cmp
(bad)
hlt
jae
pop
push
xchg
cmp
mov
test
mov
icebp
pop
cmp
leave
mov
xchg
push
jge
mov
sbb
adc
jle
mov
in
shl
xor
jmp
xor
cmp
mov
add
fwait
sub
movs
xor
and
jns
dec
sbb
pop
(bad)
and
clc
jne
or
sbb
nop
cmps
call
aas
mov
mov
jmp
cld
dec
loopne
ja
test
mov
sbb
cmp
push
mov
(bad)
cmp
in
sbb
retf
imul
ins
jg
pop
or
xor
(bad)
retf
dec
cdq
pop
adc
cmp
(bad)
cmps
inc
sbb
outs
hlt
and
dec
xchg
outs
sbb
sub
movzx
inc
les
pusha
ret
or
mov
xchg
outs
xor
retf
xchg
xchg
xchg
adc
ins
push
jmp
mov
mov
jecxz
sub
cmp
mov
repnz
jmp
jg
sti
jno
xchg
pop
sahf
jle
(bad)
loopne
jge
icebp
fnsave
mov
xchg
mov
push
push
xor
call
dec
mov
repnz
adc
push
pop
hlt
out
jae
sub
ins
lods
xor
push
in
aam
dec
clc
push
out
mov
and
cmp
jb
or
mov
pop
inc
addr16
outs
jae
adc
mov
inc
dec
daa
cmp
and
mov
push
inc
push
push
mov
mov
jle
cmp
pop
mov
jns
or
out
aam
jae
or
push
mov
mov
pusha
sub
test
pop
add
int3
or
js
aaa
xchg
jae
shr
mov
sbb
std
popf
lock
fidiv
in
div
mov
sub
ret
xchg
jmp
loop
aam
repz
leave
inc
stc
inc
sbb
mov
and
cmp
xchg
pop
lea
push
aas
or
icebp
ffree
adc
scas
imul
mov
mov
in
and
retf
fdiv
xchg
idiv
cmp
ficomp
cwde
sub
cmc
xchg
adc
test
fnstenv
call
retf
in
mov
sbb
xchg
jge
pop
add
cli
ret
adc
test
dec
cmp
mov
mov
jno
lds
aad
imul
xchg
rcl
mov
xchg
sbb
push
sub
sbb
in
mov
sub
jae
xor
xor
add
adc
lahf
repz
retf
jae
sbb
xlat
fcmove
mov
fsubr
xchg
push
(bad)
aad
pop
rcl
arpl
cmp
js
dec
in
ja
aas
jae
cld
jae
and
cmp
jmp
or
cwde
je
jno
clc
xchg
fs
or
jae
mov
xchg
sub
adc
xor
mov
and
pop
adc
adc
jno
bound
dec
mov
mov
stos
sbb
test
adc
scas
cmp
popa
xor
gs
and
ret
repnz
push
pop
inc
mov
hlt
ret
mov
and
mov
call
sar
rcl
jmp
xor
push
xchg
inc
jbe
es
out
pusha
fisub
hlt
leave
pop
jno
adc
loope
push
jae
in
pmulhuw
ja
(bad)
fsub
stos
inc
mov
pop
mov
sti
adc
jbe
adc
sbb
jns
push
sbb
xchg
mov
aam
adc
(bad)
aas
movs
adc
gs
xor
loopne
or
dec
scas
mov
ins
add
(bad)
dec
mov
push
mov
lock
sbb
test
push
sub
pop
inc
hlt
repz
sub
pop
pop
mov
sbb
mov
add
enter
fist
repz
sub
and
outs
xchg
out
add
push
stos
cld
mov
jb
movs
xchg
sub
je
or
xlat
popf
push
shufps
and
pop
sti
sbb
mov
pusha
out
and
fwait
push
cdq
adc
xchg
call
xchg
hlt
push
pop
retf
femms
xlat
jecxz
(bad)
dec
cld
sbb
mov
cmp
adc
mov
mov
mov
mov
dec
sbb
jg
ror
dec
js
cmp
das
add
jmp
or
inc
mov
outs
xchg
cmp
mov
in
dec
sub
clc
xchg
adc
mov
jmp
jne
aas
es
cmp
test
push
dec
outs
fld
call
test
bound
add
ret
and
imul
xchg
pop
cli
mov
retf
stc
mov
inc
nop
pop
sub
xor
es
and
pushf
inc
xchg
sbb
pop
test
inc
fwait
and
inc
xor
push
int3
add
push
sub
mov
pminub
test
mov
arpl
pop
dec
test
sar
push
jno
les
in
pop
lods
scas
rcr
xchg
xchg
jae
es
xlat
and
cmps
ins
in
popa
sti
fadd
sub
or
out
or
and
xchg
mov
jmp
dec
lock
and
popf
xchg
out
out
push
mov
mov
shl
mov
cdq
jmp
out
or
shr
shl
int3
lea
retf
popa
(bad)
mov
hlt
push
ret
ins
leave
mov
sti
mov
ss
pop
ins
int
and
loopne
retf
(bad)
and
inc
and
outs
movs
xchg
adc
push
inc
pop
jmp
xor
pop
push
shl
loopne
sbb
(bad)
in
pop
xor
jge
shr
inc
xor
add
cs
cmp
es
mov
and
xchg
dec
pop
xlat
mov
xor
cmp
neg
cwde
neg
in
adc
in
enter
cmp
xchg
pushw
cmp
and
fadd
jns
out
sbb
lea
sbb
ror
add
add
xor
sub
into
add
sbb
test
inc
mov
retf
inc
adc
lds
arpl
mov
mov
sbb
jl
jae
mov
sbb
bound
add
hlt
(bad)
xor
mov
pusha
lea
add
out
out
mov
pusha
cmp
and
adc
lock
adc
mov
movs
nop
mov
push
dec
xchg
inc
enter
cli
inc
pop
sub
aas
repnz
jmp
mov
jb
mov
rcr
ins
aas
arpl
jg
mov
loope
mov
dec
cmp
and
jo
xchg
xchg
xor
in
add
mov
dec
add
pop
mov
mov
xor
dec
movs
data16
add
aas
scas
jbe
jae
mov
stc
call
xor
lods
repz
cmc
gs
scas
shl
enter
popa
cmps
xchg
mov
push
pop
or
ret
aaa
inc
(bad)
jns
push
bound
push
sub
mov
int
gs
iret
xchg
jl
(bad)
(bad)
in
push
fisub
inc
iret
pop
jecxz
add
xchg
sbb
fldenv
hlt
js
fld
adc
int3
push
mov
(bad)
ds
pop
shl
inc
push
xchg
adc
pop
mov
mov
(bad)
retf
pop
not
push
push
mov
int
les
and
outs
(bad)
add
jo
lock
imul
outs
call
icebp
sbb
push
jno
pop
add
fdivr
mov
mov
aam
fisub
mov
(bad)
cld
aad
popa
mov
nop
sbb
pop
dec
xchg
das
mov
jg
nop
(bad)
sbb
pushf
pop
dec
push
cwde
mov
outs
xor
cmps
mov
das
xchg
xor
loop
push
jb
and
sub
and
and
sbb
sub
imul
cmp
xor
or
mov
xor
(bad)
pusha
push
(bad)
dec
lahf
ret
jbe
stc
push
outs
adc
mov
sub
adc
jecxz
push
mov
mov
mov
and
dec
fst
cdq
ins
aaa
sti
div
ficom
pop
out
loop
sbb
aad
fbstp
lods
out
xchg
mov
sub
xchg
xchg
adc
push
mov
and
xor
mov
mov
ficom
jp
mov
shr
dec
int3
aaa
sbb
dec
push
adc
and
adc
shl
outs
or
in
call
call
xor
ins
push
sub
mov
je
cmc
out
and
sub
inc
repz
cs
mov
mov
addr16
push
fwait
dec
jbe
mov
pusha
hlt
movs
jae
xchg
icebp
outs
mov
cmp
in
sbb
and
mov
mov
mov
pop
dec
pop
mov
imul
test
jmp
mov
sub
add
xchg
mov
fwait
lods
(bad)
mov
fs
rol
sub
push
mov
(bad)
push
jle
es
cmp
dec
arpl
data16
jae
mov
mov
sbb
jg
js
jmp
std
in
jns
xchg
xor
pop
movs
js
cmps
loopne
inc
adc
repz
jae
movs
xchg
lds
ins
jl
in
cli
fnsave
ss
jge
mov
sub
mov
jae
jno
ret
mov
pop
push
jo
mov
inc
jae
out
xor
sbb
ss
push
pop
or
mov
xor
dec
shr
jb
pop
sbb
push
cld
loop
test
rcr
popf
mov
les
jg
jnp
aad
pop
fnstenv
mov
add
dec
sbb
fidiv
aam
(bad)
mov
jecxz
out
dec
or
sbb
xor
push
in
cmc
ss
add
xchg
mov
xchg
repz
inc
dec
test
imul
mov
mov
test
xor
je
das
inc
jae
xchg
fwait
retf
mov
movs
push
dec
aas
movs
inc
int3
pop
scas
xchg
cmc
cwde
out
pusha
push
pop
(bad)
pop
ror
lds
mov
jg
out
movs
ins
push
das
les
loope
and
pop
sbb
fs
pop
mov
push
jp
arpl
cli
les
popf
xchg
repz
jo
fcmove
aaa
rcr
mov
(bad)
scas
clc
cdq
sbb
pop
ja
test
test
mov
jg
fdivr
fs
jae
jge
push
gs
fldcw
inc
and
hlt
xlat
clc
daa
cmp
sbb
pop
outs
sub
popf
sahf
loopne
mov
lods
xchg
push
inc
dec
pop
lods
jns
jge
fiadd
xor
and
sbb
mov
add
mov
aad
sub
and
ficom
cmp
jae
in
sar
inc
push
enter
push
mov
jae
push
add
movs
(bad)
jns
daa
pop
ins
push
les
pusha
mov
outs
xchg
into
cmc
rcr
jg
push
loope
arpl
add
sub
dec
lods
jg
ret
xchg
xor
xor
jae
jmp
mov
push
inc
std
jae
cmp
js
jecxz
push
aam
cli
xchg
loop
sub
push
mov
and
push
(bad)
not
aad
and
inc
dec
lods
ret
xchg
mov
push
pop
js
repz
leave
push
outs
jmp
pop
repz
mov
(bad)
jb
jmp
dec
xchg
addr16
xchg
outs
sub
mov
dec
push
es
lock
and
sbb
outs
into
imul
xlat
jae
cld
lods
push
pop
fs
push
sbb
dec
lods
add
sti
jbe
sti
call
aam
sbb
lds
cwde
adc
cwde
push
imul
call
mov
jp
leave
pop
sar
je
and
xchg
push
jae
cli
test
add
mov
adc
adc
jbe
pop
cmc
fstp
cmps
pop
ins
sbb
cmp
pop
dec
popf
sbb
mov
(bad)
fwait
cmp
pop
ins
dec
inc
(bad)
es
or
dec
jno
and
mov
js
repnz
push
pop
jns
sub
out
(bad)
cmp
and
xchg
push
jmp
ins
cmc
ins
adc
sub
cld
adc
cmp
loope
mov
and
xor
ret
mov
test
xor
inc
xchg
pusha
jae
mov
in
sahf
clc
into
sub
sub
popa
sar
inc
push
movs
mov
add
adc
repz
sbb
inc
out
pop
push
pushf
aas
(bad)
mov
cmps
inc
pop
cmps
ficom
unpckhps
call
jbe
call
push
and
add
aaa
dec
xor
call
jns
mov
(bad)
sbb
dec
pop
push
jne
data16
push
jmp
dec
push
inc
data16
xchg
stos
or
or
fisubr
pop
imul
or
mov
mov
adc
cli
inc
pusha
jne
jb
out
xlat
aam
rcl
mov
sub
or
fnstsw
push
cmp
push
xchg
mov
sub
mov
xlat
fneni(8087
ja
ret
in
mov
call
je
fcmovbe
fist
mov
out
push
loopne
jl
ret
cdq
gs
popf
cmps
test
dec
mov
call
cmp
mov
stos
outs
xchg
xor
fstp
stos
pushf
add
ret
push
inc
jmp
outs
and
in
jp
dec
in
jp
mov
call
mov
pop
cwde
call
mov
sub
ret
sub
mov
push
sub
cmc
sub
out
xor
xor
cwde
cdq
and
mov
and
pop
and
leave
mov
mov
mov
cmp
std
mov
push
inc
cmp
jo
jne
and
push
jle
sbb
pop
js
mov
sub
mov
pop
dec
into
jne
pop
(bad)
js
mov
ins
pop
cdq
xor
push
outs
loop
cmps
mov
sbb
pop
adc
and
xor
inc
sbb
imul
jmp
data16
in
xchg
aaa
pushf
push
not
mov
imul
jmp
div
fist
adc
inc
push
or
mov
cmp
stos
ins
call
xchg
aaa
mov
test
push
clc
push
xor
xchg
cmp
xlat
leave
ja
cmp
cli
jmp
cmp
jae
xchg
adc
scas
les
sbb
not
les
push
push
jns
xor
clc
jns
push
cwde
xor
sahf
cmp
loopne
adc
rol
sub
stos
adc
aad
cwde
retf
pop
push
jg
or
adc
add
push
fiadd
push
mov
mov
shl
xor
lods
icebp
pop
call
(bad)
dec
mov
rol
inc
sbb
outs
mov
(bad)
cs
mov
lods
sahf
pop
ins
bound
sbb
mov
je
xchg
mov
fxch
and
(bad)
hlt
mov
inc
sbb
push
lahf
jmp
stc
js
mov
mov
fucom
jp
jmp
sbb
pop
jp
retf
mov
daa
ins
test
sar
fcomip
xchg
sub
push
cdq
cdq
arpl
xchg
xchg
cmp
(bad)
add
adc
push
inc
and
xor
fisubr
add
in
mov
dec
retf
mov
inc
push
mov
test
or
adc
xchg
jbe
aad
or
xchg
mov
mov
or
adc
or
jl
pushf
mov
inc
jne
push
les
(bad)
gs
push
les
sbb
or
lods
mov
mov
cmp
out
out
xor
mov
or
retf
xor
xchg
xor
ja
fdiv
addr16
xchg
cmp
cwde
std
ds
mov
sbb
xchg
lods
arpl
cdq
cmp
xor
jecxz
in
mov
sub
add
jge
stc
aad
icebp
call
inc
gs
(bad)
jae
movs
push
or
dec
sub
sub
mov
or
mov
(bad)
mov
or
cmps
mov
mov
jns
stos
xor
ins
mov
xor
push
je
repz
adc
mov
ror
lods
ficom
pop
movs
xchg
ins
addr16
pop
adc
aad
push
aad
pushf
sbb
in
add
lock
inc
xor
mov
lods
in
(bad)
(bad)
icebp
jno
mov
mov
(bad)
inc
sbb
adc
push
mov
mov
dec
xchg
retf
stc
fwait
test
xor
movs
hlt
jl
jne
sbb
call
push
xchg
push
scas
sbb
inc
push
ja
pushf
sbb
movs
jbe
mov
sub
imul
icebp
sbb
xor
imul
sbb
test
inc
add
pop
xchg
jae
ror
icebp
enter
xlat
fidivr
js
mov
je
jns
adc
inc
xor
push
xchg
aas
sbb
(bad)
dec
repnz
or
push
or
inc
mov
ja
fmul
dec
in
je
add
cmps
or
pop
mov
cmp
aad
es
adc
jno
lods
out
test
neg
xchg
push
add
data16
clc
cdq
mov
rcl
pop
push
jne
mov
xchg
xchg
add
pop
mov
or
mov
sbb
add
fist
or
movs
sbb
in
ins
sbb
sbb
popf
out
mov
sahf
call
sbb
in
retf
push
lods
sub
mov
stos
cmp
stos
push
push
aam
or
arpl
out
xchg
aam
adc
adc
sbb
cmc
jmp
mov
jp
push
fisttp
aaa
sahf
mov
int
jl
mov
ds
push
call
pop
push
or
hlt
fld
in
xor
jb
outs
mov
arpl
daa
xchg
xor
das
add
outs
outs
jge
adc
push
ja
fst
fld
aam
cmp
pop
adc
push
int
neg
cs
mov
xor
scas
(bad)
hlt
cli
bound
aas
mov
fidivr
imul
dec
inc
inc
adc
xchg
adc
xor
mov
nop
sub
iret
les
leave
xchg
jecxz
mov
lock
mov
mov
call
int3
push
sub
xlat
cmc
lahf
mov
pop
imul
icebp
sub
les
adc
jne
aad
(bad)
mov
imul
xor
retf
xor
or
xor
pop
inc
push
mov
dec
mov
sub
mov
nop
xchg
cs
xor
push
inc
mov
mov
mov
fbld
hlt
adc
hlt
mov
dec
pop
imul
outs
and
pushf
cs
xor
sbb
fwait
cmp
add
cmp
out
shl
push
ds
(bad)
jae
dec
xor
xor
or
cmps
lods
inc
ja
imul
mov
jge
aas
repz
jne
mov
pop
stos
stc
push
js
mov
jo
xchg
shr
xor
mov
xchg
sbb
(bad)
cmp
or
pop
gs
or
test
ret
push
in
jo
push
xchg
dec
inc
jl
repz
xor
sbb
jae
push
jmp
pop
adc
cld
sbb
outs
add
rcl
mov
imul
je
mov
dec
retf
xchg
fiadd
ds
pop
cmps
pop
mov
cmp
jnp
fadd
jnp
xor
ret
mov
lock
xor
call
mov
mov
mov
int
enter
and
daa
mov
scas
jo
sub
fldenv
nop
jmp
and
nop
fisub
jg
adc
sbb
sbb
(bad)
jecxz
out
pop
fwait
dec
fdiv
out
rcl
popf
pop
mov
or
mov
cmp
aad
aad
js
cmps
add
(bad)
mov
clc
retf
mov
lahf
cmp
fst
pop
cli
mov
sbb
xchg
in
(bad)
or
jae
pop
add
adc
out
aaa
dec
(bad)
jmp
mov
mov
fnstcw
pop
rcl
movs
outs
arpl
cmp
push
inc
mov
fidiv
mov
adc
pusha
xchg
fmul
jle
xor
xchg
nop
add
cmp
std
and
ret
fwait
mov
popf
xchg
dec
pop
push
sub
xor
movs
ret
sbb
lds
test
hlt
rol
ja
xor
lods
icebp
xor
imul
rcr
ret
sub
clc
push
mov
jb
jl
mov
pop
ret
mov
add
dec
fucomip
sbb
sahf
mov
dec
or
inc
mov
ins
push
cld
nop
jae
xor
(bad)
lea
adc
aaa
add
repz
dec
mov
adc
addr16
retf
push
fxch
add
cwde
loopne
data16
cmp
jbe
idiv
mov
mov
adc
cmc
and
cmp
mov
mov
leave
lods
in
inc
lds
and
xor
mov
cwde
mov
les
push
inc
sahf
xchg
cmp
pop
fs
(bad)
mov
int
ss
jae
sub
daa
push
inc
adc
inc
jge
dec
aam
test
ins
pushf
adc
sbb
push
mov
adc
dec
(bad)
iret
jmp
ficomp
test
(bad)
pop
pop
inc
popf
xlat
dec
les
xor
mov
dec
cmp
pop
fsub
aaa
aaa
and
sbb
fs
not
popf
ds
jae
fcom
mov
push
inc
and
clc
test
dec
clc
xchg
(bad)
sti
aaa
jecxz
mov
mov
mov
xchg
(bad)
mov
xchg
repnz
loopne
dec
push
inc
stos
xchg
sbb
loopne
jae
push
imul
scas
sub
sub
adc
sbb
xchg
or
shl
jae
js
and
(bad)
mov
jmp
in
xor
ja
loope
mov
mov
mov
xchg
pop
test
jnp
(bad)
repz
push
or
repz
pop
cs
push
(bad)
dec
or
inc
jno
jae
push
arpl
push
fwait
std
dec
sbb
sub
mov
fidivr
sub
xchg
dec
adc
dec
bound
repz
fs
xor
retf
icebp
jp
pop
fimul
dec
cmp
sbb
lock
popf
jae
sbb
test
popa
cmp
cmps
sub
aad
fstp
sbb
ss
mov
pop
inc
popa
neg
adc
imul
push
sbb
je
rcr
das
xchg
inc
sahf
dec
cmps
inc
or
xchg
pop
les
clc
inc
xchg
mov
jecxz
cmc
push
dec
out
xchg
pop
push
fwait
lods
fcomp
outs
jne
or
inc
jge
les
dec
dec
mov
push
clc
call
inc
mov
xchg
icebp
cmps
xchg
adc
xchg
mov
stos
cmp
mov
adc
jl
rcr
cmp
out
pusha
push
xor
ja
push
fmul
cmp
ficomp
out
xchg
jmp
ror
fwait
jb
add
mov
dec
fdivr
adc
scas
sbb
int
sub
mov
aaa
idiv
je
fcomp
xchg
add
push
lock
xor
scas
mov
lea
leave
sbb
mov
sbb
add
dec
mov
outs
sub
mov
(bad)
mov
sahf
mov
add
cmp
push
sbb
push
sti
sbb
fwait
(bad)
call
pop
adc
js
into
xor
adc
adc
mov
sbb
mov
sub
jle
mov
inc
mov
sub
sbb
test
inc
test
das
adc
jne
stos
jge
adc
jb
mov
in
push
xchg
xor
stos
sbb
popf
js
mov
(bad)
xchg
sahf
sbb
mov
mov
mov
fwait
xchg
cwde
aas
mov
jecxz
(bad)
mov
lods
in
xchg
ja
hlt
inc
enter
aas
test
ficom
inc
rol
cmp
and
out
(bad)
jae
and
outs
push
add
push
sahf
adc
and
test
add
ror
push
adc
cmps
xchg
xchg
shl
xchg
shl
scas
xchg
jno
lock
test
pop
ja
cmp
repz
xchg
jae
add
imul
cmp
xor
movs
inc
mov
xor
and
mov
sub
sub
adc
mov
ror
pop
arpl
inc
adc
js
add
and
xor
xchg
or
jle
js
and
ror
jne
mov
je
jmp
push
(bad)
cmps
sbb
inc
mov
scas
adc
adc
loop
aad
or
sbb
sbb
ret
test
push
test
and
pop
sahf
cli
jbe
ret
test
xchg
adc
add
mov
mov
mov
mov
aad
cmp
add
pop
sbb
mov
inc
rol
in
push
pop
cmp
mov
test
cwde
aam
lds
jmp
jae
stc
or
mov
(bad)
push
aas
das
sbb
fdivrp
jae
cmps
ins
pop
call
test
push
mov
cmps
add
push
pop
xchg
adc
or
cli
push
cmps
xchg
mov
rcl
mov
cmp
xor
xchg
add
ins
xchg
frstor
push
inc
mov
push
mov
jmp
xor
pop
add
movs
jbe
xchg
fiadd
xor
mov
dec
cmp
jl
or
mov
mov
out
hlt
cmp
imul
fsub
test
xchg
in
loopne
mov
cmps
xor
mov
movs
xor
cmp
push
icebp
sbb
popf
mov
sbb
stos
je
mov
inc
jne
mov
cmc
cs
call
sub
outs
pop
pop
adc
icebp
pop
(bad)
(bad)
movs
lock
pusha
or
in
call
test
xchg
xchg
movs
ja
(bad)
mov
mov
inc
sbb
jne
mov
retf
popf
(bad)
mov
icebp
(bad)
mov
fstp
mov
cli
sub
repz
sub
mov
push
out
fdiv
mov
mov
(bad)
in
adc
adc
mov
mov
jb
mov
lahf
mov
sbb
adc
cld
xor
inc
add
mov
repz
pop
pop
hlt
inc
mov
mov
xchg
mov
mov
jmp
aad
jl
les
xor
(bad)
mov
shl
add
test
test
jbe
mov
mov
div
mov
mov
ret
sub
jle
push
xor
retf
xchg
mov
push
cmp
pop
repz
cmp
xchg
mov
jmp
test
rcl
imul
xchg
in
lods
leave
pop
jns
ds
sbb
shl
fnsetpm(287
iret
push
rcl
add
or
das
or
daa
pop
fs
outs
xlat
jbe
pushf
fucompp
ds
int3
or
popf
icebp
cmps
jo
mov
xchg
cmps
adc
cmp
xchg
lods
lea
stc
mov
jnp
push
pop
fmul
xor
rcr
sub
jne
jae
(bad)
sbb
ja
xchg
movs
ins
mov
imul
pop
pop
jp
(bad)
mov
push
fsub
sub
xchg
sub
imul
scas
xchg
cdq
mov
fld
cs
hlt
dec
mov
mov
pusha
mov
aam
and
jb
in
adc
imul
inc
pop
ficom
or
cmps
(bad)
mov
xadd
sbb
push
mov
enter
dec
aam
ret
jle
cmps
jg
add
jle
pop
ins
jb
cmc
mov
jecxz
mov
hlt
mov
add
in
nop
pop
cmp
das
pop
jne
jo
dec
sub
mov
int3
cmp
(bad)
sahf
and
and
add
push
enter
cmp
ss
adc
scas
xor
inc
frstor
xchg
ds
dec
sub
js
mov
pop
cmp
cmps
test
aas
fdiv
xchg
add
cdq
ds
pop
mov
push
add
mov
sub
sbb
push
cmp
cmp
sub
and
pop
inc
mov
mov
(bad)
and
pop
xor
leave
cld
xchg
retf
mov
pop
data16
ret
xchg
sbb
nop
mov
cli
sbb
in
adc
pop
popf
mov
mov
inc
xchg
mov
fcmovbe
mov
icebp
movs
mov
or
xchg
jg
cmp
repz
test
ja
xor
loopne
xor
xchg
ficom
xchg
int3
popa
repz
sub
jne
sub
push
fnstenv
jecxz
or
aaa
mov
gs
sbb
add
cwde
jle
mov
mov
call
dec
mov
cwde
xchg
sbb
clc
out
clc
popf
aad
ds
sbb
popf
(bad)
fdiv
push
aaa
das
mov
jp
jnp
adc
mov
push
repz
push
cmps
in
inc
xor
mov
(bad)
mov
mov
xchg
stc
mov
lods
mov
sub
fdiv
and
cli
add
stos
mov
jae
add
cmp
pop
mov
call
sbb
sbb
push
js
es
mov
push
mov
pushf
push
adc
je
or
cdq
jne
bnd
(bad)
and
and
cld
pop
nop
hlt
xchg
cwde
arpl
leave
cmp
push
das
mov
in
in
adc
fmul
adc
and
jbe
xchg
dec
test
jo
fiadd
xchg
rcl
xchg
mov
jg
shl
cmp
add
sbb
mov
sub
ins
fchs
fmulp
jl
imul
mov
mov
les
dec
bound
shl
retf
addr16
push
or
sub
mov
lods
jmp
aad
fild
ficomp
ja
mov
push
xchg
and
call
sti
sbb
popf
sub
xor
jne
adc
xor
adc
xchg
mov
lahf
add
sbb
dec
fimul
push
mov
bound
call
loop
mov
mov
lea
movs
aam
adc
mov
ins
xor
mov
dec
out
mov
sbb
xlat
scas
mov
in
aad
add
xchg
inc
or
shl
jl
(bad)
fsubr
das
arpl
mov
mov
jmp
hlt
inc
sbb
pop
sbb
mov
cmp
stos
jae
mov
cld
and
sub
div
lds
jno
(bad)
xchg
xor
jne
and
mov
aad
wrmsr
xor
in
mov
jae
les
mov
sub
cmps
push
push
dec
cmc
sbb
inc
push
addr16
push
inc
movs
retf
sbb
sbb
jmp
clc
(bad)
push
cmp
or
out
mov
pop
sbb
out
cwde
mov
stos
sub
fs
dec
sbb
adc
test
pushf
inc
push
adc
imul
mov
fwait
jle
dec
shld
jl
jae
in
in
mov
push
jns
mov
ss
and
xor
mov
xchg
add
jae
xor
or
xchg
mov
inc
icebp
push
add
mov
or
jle
in
xchg
(bad)
repnz
push
aaa
pusha
jae
jnp
fild
inc
push
dec
data16
or
cmps
sub
gs
adc
mov
pop
cld
xor
ins
ja
rcr
mov
jmp
xchg
pop
xor
ret
loopne
jne
or
cmp
(bad)
xabort
xor
mov
dec
push
push
aam
xor
icebp
or
cmp
inc
sub
aam
sbb
mov
pop
ds
in
(bad)
mov
adc
mov
mov
sbb
test
push
(bad)
jae
test
adc
jnp
jne
dec
jge
ret
jne
lea
cld
scas
jne
xor
mov
and
(bad)
dec
enter
dec
out
xchg
xchg
(bad)
imul
mov
loopne
adc
or
addr16
ror
pop
imul
jno
push
in
pop
ficom
dec
je
cmp
jae
inc
or
(bad)
cwde
or
xchg
retf
stos
inc
adc
mov
jae
dec
or
lods
and
cmps
add
sahf
loop
add
and
push
or
cld
scas
out
mov
sar
push
mov
jge
push
push
loopne
aas
jle
mov
rcl
pop
or
adc
or
jle
push
jecxz
add
xchg
fist
xlat
xlat
call
add
fidiv
cmp
mul
movs
mov
sar
clc
je
mov
mov
fwait
dec
mov
lahf
lea
mov
push
push
sbb
retf
sbb
sbb
jp
fisttp
lahf
jae
or
out
cmps
dec
mov
push
loop
mov
int
ficom
cld
add
push
and
cmp
fisubr
mov
push
scas
mov
add
inc
adc
std
stos
jae
lock
inc
add
xchg
pop
ja
xchg
adc
and
jae
or
inc
hlt
aas
mov
ret
sub
sahf
jne
and
sbb
ret
(bad)
pop
loopne
push
adc
adc
cs
cmp
das
mov
stos
(bad)
mov
jle
mov
stos
retf
jae
imul
pop
test
xchg
xchg
fwait
jmp
inc
inc
mov
jecxz
mov
mov
push
xchg
cld
mov
adc
leave
inc
and
push
ror
jecxz
mov
jns
cmp
(bad)
mov
pushf
push
nop
inc
jecxz
mov
daa
pop
mov
(bad)
mov
xor
dec
outs
jmp
jae
outs
jecxz
pop
inc
sbb
popa
jbe
cmps
ret
mov
dec
scas
ins
mov
cmp
mov
fiadd
retf
test
sbb
(bad)
add
dec
scas
xlat
or
ss
dec
outs
cmp
jmp
sti
sbb
(bad)
jns
mov
jecxz
fisub
pusha
sub
sbb
ins
push
dec
jae
sbb
call
inc
sbb
repz
fs
mov
ins
adc
scas
push
mov
aas
push
je
cld
pop
and
and
add
mov
jg
ins
pushf
frstor
imul
dec
shr
or
fadd
mov
test
fwait
xlat
fst
mov
fild
addr16
iret
mov
dec
(bad)
add
fmul
pop
fist
popa
inc
into
lock
cdq
or
mov
bound
or
push
push
adc
dec
xchg
xchg
mov
cmc
fwait
jae
or
adc
dec
mov
mov
xor
inc
into
es
ja
jmp
cwde
cmp
add
dec
mov
and
cmp
mov
push
out
xchg
loope
cli
mov
sub
sbb
or
cs
mov
aam
push
or
lahf
pop
xchg
(bad)
push
mov
mov
mov
(bad)
std
ret
and
out
scas
push
loopne
mov
stos
cmp
cmp
aad
add
psubsw
jb
(bad)
int3
and
xor
sub
add
data16
fisub
not
mov
ror
call
fwait
and
popa
jae
sbb
cdq
nop
push
cdq
or
push
sub
arpl
add
push
out
inc
lods
jbe
jmp
sar
pop
addr16
les
mov
xchg
stc
mov
mov
cmps
dec
jno
xchg
and
ja
cwde
xor
jle
pop
push
sar
and
test
jno
cld
fdiv
ds
jle
or
add
stos
js
xor
mov
ret
icebp
jle
add
inc
dec
mov
xchg
call
mov
or
cmp
add
sub
ja
pop
jae
cld
pop
jne
and
sbb
pop
inc
iret
mov
je
rcr
int
and
lds
imul
ds
leave
xor
(bad)
dec
mov
sub
lahf
cmp
fmul
fldcw
xor
aaa
inc
movs
push
test
sbb
cmp
pushf
pop
push
sbb
cld
jae
rcl
pop
and
sbb
mov
xchg
xchg
jmp
and
xchg
ss
cwde
jae
stc
mov
js
sub
shl
inc
dec
mul
push
push
je
jo
xchg
cld
mov
push
daa
xchg
bound
jl
outs
pop
dec
jge
add
jbe
push
xchg
inc
call
in
jb
cmp
inc
sub
dec
shl
sysenter
dec
cwde
pop
and
inc
sbb
and
js
repnz
stc
shl
sbb
pop
add
dec
shl
adc
pop
inc
jmp
jae
push
sti
pusha
lods
in
loope
mul
fs
xchg
ss
xchg
aad
popa
or
and
mov
test
sbb
mov
sbb
push
sbb
and
push
dec
scas
daa
sbb
scas
ss
out
sbb
std
sbb
je
mov
stos
aad
sti
mov
out
pop
das
nop
imul
adc
inc
outs
jge
add
push
stos
stos
ins
mov
mov
shl
jo
lods
cmp
mov
retf
push
call
mov
sub
xor
jnp
jns
or
aam
mov
dec
ins
retf
pop
lahf
lods
popa
or
jmp
stc
push
mov
mov
addr16
push
xchg
jnp
stos
push
call
sar
lds
ja
push
in
mov
xchg
mov
pop
add
leave
add
mov
fadd
jmp
sbb
leave
imul
test
nop
add
cs
or
test
sbb
shl
clc
jns
mov
mov
sub
int
loopne
pop
icebp
cdq
sbb
in
mov
aas
mov
xchg
cmp
adc
inc
xchg
(bad)
call
popf
retf
pop
push
mov
je
mov
sbb
cmp
pop
imul
xor
mov
sbb
sub
pop
mov
icebp
pop
mov
mov
mov
imul
ss
lea
stos
js
cmp
popa
mov
mov
pop
lds
sub
and
mov
cmp
xchg
and
js
adc
mov
sbb
fidiv
push
addr16
mov
dec
retf
dec
jge
movs
sbb
push
mov
pusha
pop
popa
push
push
ins
in
data16
inc
mov
jmp
hlt
loop
inc
and
pop
dec
sbb
xchg
jecxz
(bad)
mov
jae
pop
lahf
mov
push
xchg
lods
xchg
ror
sbb
sub
inc
sbb
sbb
push
not
add
mov
mov
pusha
aad
push
push
push
mov
mov
inc
mov
inc
mov
sbb
ja
xchg
jno
clc
(bad)
shr
mov
sahf
sbb
mov
ss
repnz
mov
(bad)
lea
pop
and
mov
pop
idiv
out
ja
dec
in
xor
inc
ja
inc
ss
pop
sub
pop
or
(bad)
cdq
or
je
and
daa
test
stos
lods
cli
adc
rcl
sub
movs
inc
cdq
cmc
dec
mov
dec
ror
xchg
xchg
cmp
mov
into
jo
push
lods
inc
push
dec
jmp
xor
dec
outs
xchg
jbe
cmp
retf
mov
lock
adc
out
xchg
(bad)
ja
push
mov
hlt
sbb
xor
clc
call
mov
cs
or
pop
shr
mov
sub
push
adc
mov
movs
(bad)
xchg
iret
sar
sub
xor
adc
add
arpl
not
pop
fwait
mov
cmps
push
jmp
outs
cli
xchg
dec
mov
lods
jae
nop
scas
jno
sub
pop
pop
add
cwde
in
call
enter
adc
jmp
fdiv
and
stos
push
(bad)
dec
ins
fisubr
sub
(bad)
xor
cmp
xor
adc
js
add
xor
pushf
fnsave
inc
mov
adc
push
imul
lods
sub
push
adc
test
int3
scas
rol
movs
jno
popa
cli
mov
mov
mov
stos
je
in
popf
cmc
bound
adc
xlat
sub
(bad)
scas
jle
jecxz
retf
mov
ret
std
mov
jae
es
loopne
xor
push
inc
inc
pop
push
dec
cmps
aad
pextrw
push
dec
push
mov
and
shld
stos
dec
push
fsub
mov
pushf
pushf
pop
iret
mov
shl
jo
repz
(bad)
lods
xchg
cli
scas
fadd
push
int
repz
xor
or
test
fnstcw
inc
pop
mov
in
or
popf
and
lea
ffree
ds
cld
xchg
inc
mov
xchg
cmp
dec
xchg
call
jnp
push
jae
in
pop
outs
leave
and
imul
loope
xchg
call
sbb
jg
jp
repz
xor
sbb
cmc
jle
push
mov
or
inc
dec
push
jno
stos
mov
adc
adc
sbb
xor
fdivr
mov
jl
out
fcmovu
dec
sbb
fidiv
bound
push
stos
xchg
addr16
in
xchg
loopne
les
mov
push
mov
and
ins
outs
sbb
add
or
jne
pop
dec
inc
jb
out
mov
mov
stos
adc
loope
cmp
mov
pushf
jb
stos
push
fstp
out
dec
add
hlt
aad
dec
es
dec
or
dec
push
pop
fisubr
push
pop
inc
jae
sub
jns
mov
jmp
jns
push
xor
popa
adc
jae
xchg
add
in
mov
hlt
ja
jp
pop
sbb
outs
jbe
pop
jae
cdq
test
jae
int
retf
sub
or
mov
es
sub
clc
out
clc
dec
ret
push
jp
in
jno
jnp
sub
sub
jecxz
jg
mov
cmp
stc
inc
cdq
xlat
or
inc
sub
adc
inc
enter
js
xchg
aaa
adc
xchg
pop
and
mov
adc
aad
(bad)
ds
jbe
arpl
push
pop
sub
jnp
rcr
push
out
inc
mov
sub
dec
push
rcr
test
inc
scas
stos
(bad)
dec
cdq
xchg
xchg
jp
or
jmp
add
fst
sub
xchg
inc
push
sub
fcomp
jl
jbe
sti
xor
inc
xor
aad
xadd
clc
scas
mov
ins
dec
push
cwde
or
push
ffree
fwait
ret
popa
jge
jge
test
mov
fisttp
stc
jno
jp
and
adc
stos
fbld
rcl
cmp
push
push
in
je
xchg
jp
xchg
push
or
adc
aas
dec
loope
and
and
jmp
dec
push
lock
mov
sbb
aaa
je
dec
fs
xchg
in
ss
mov
xor
push
jne
mov
and
hlt
jae
ss
sbb
dec
out
not
pushf
fnsave
pop
jne
cmp
sbb
mov
inc
cmc
sbb
push
fst
mov
inc
xchg
test
mov
bound
sbb
pop
dec
rcl
mov
xchg
sbb
fwait
pop
aam
pop
ror
dec
lods
inc
push
and
mov
mov
push
ja
rcl
push
push
mov
pop
jns
out
push
scas
fnsave
stos
gs
mov
cmps
jbe
imul
std
jae
xor
xchg
addr16
mov
xchg
out
pop
push
mov
inc
xchg
(bad)
jne
std
add
pushf
pop
push
mov
xchg
add
jl
xchg
aad
pusha
add
je
cmp
adc
movs
pop
pop
loope
aam
cwde
push
xchg
jns
dec
out
push
inc
je
jge
pop
push
pop
stos
xor
aas
push
push
int
imul
std
xor
shr
adc
sub
push
jae
aam
sbb
sbb
outs
and
into
cmps
out
jae
mov
cmps
xchg
cmp
adc
adc
neg
test
sti
add
loop
jae
sub
push
xor
mov
stos
aaa
cmps
out
out
imul
or
adc
xor
sbb
jmp
mov
shr
mov
adc
shl
mov
in
lea
inc
arpl
fistp
loope
add
sub
xor
pop
sub
mov
popf
imul
add
xor
test
adc
repnz
sti
ins
je
lods
mov
stc
cli
(bad)
mov
pop
pop
xchg
fstp
pop
cld
ret
cmps
(bad)
mov
or
jno
adc
sti
pop
jecxz
in
fs
jae
mov
pop
mov
adc
pop
fisttp
mov
cs
out
push
push
push
add
mov
fisub
jb
sbb
push
and
stc
ins
clc
mov
inc
lds
int
retf
xchg
ins
cmc
pop
inc
pop
dec
movs
fidiv
aaa
aaa
rcr
call
retf
adc
int3
cmc
xor
adc
xchg
or
int3
imul
ins
xor
loop
xchg
and
jno
js
push
or
adc
mov
dec
int
mov
xor
out
and
jmp
xor
add
mov
mov
aas
sbb
jae
pop
mov
(bad)
mov
imul
ss
jae
xchg
add
fwait
in
sbb
push
sbb
push
jno
pop
fcomi
pusha
lds
sbb
dec
lods
push
sbb
pop
das
in
xor
mov
sbb
sbb
mov
addr16
cwde
cmps
leave
sbb
(bad)
dec
mov
clc
jmp
xchg
and
les
stos
inc
cmp
cmp
iret
xor
mov
push
(bad)
(bad)
stos
dec
jae
icebp
mov
mov
adc
pop
ss
or
in
scas
js
xor
mov
mov
xchg
dec
lods
jbe
sbb
dec
xor
sub
cmp
popa
inc
(bad)
int
add
jp
call
xor
adc
xchg
pop
sbb
mov
xchg
lods
movs
loope
sahf
mov
(bad)
push
mov
aad
test
xchg
adc
pop
in
(bad)
xchg
sahf
push
jnp
retf
imul
dec
jae
lods
test
pop
mov
test
stos
push
inc
sbb
push
data16
cmp
jmp
fwait
je
mov
cmps
jl
mov
jb
jb
das
xor
jp
std
or
xor
rol
repz
xor
js
in
jbe
xor
pop
adc
jle
dec
mov
js
add
inc
push
adc
push
rcl
push
pop
(bad)
ja
xor
fstp
xchg
lods
add
xchg
scas
mov
pop
arpl
scas
pop
jl
xchg
jp
popa
(bad)
(bad)
xchg
in
xlat
jb
retf
xor
mov
outs
pop
mov
cld
(bad)
jae
leave
jns
rol
movs
lea
(bad)
xchg
sub
popf
outs
add
jbe
imul
push
hlt
hlt
je
int
jg
mov
jecxz
pop
aaa
jo
iret
mov
movs
jne
js
sbb
xor
adc
xor
mov
inc
test
mov
rcr
cmps
sbb
inc
mov
inc
call
je
push
js
bound
mov
pop
pop
pop
leave
sub
aaa
inc
jnp
aad
cwde
fisub
jae
xlat
fdiv
push
inc
mov
jl
pop
outs
xor
xchg
jmp
and
imul
jnp
js
ds
stos
mov
dec
js
sbb
add
retf
cdq
mov
xlat
and
scas
add
fisub
mov
sbb
cmp
add
xor
and
sbb
push
jg
or
daa
or
sbb
mov
in
cmp
xchg
int3
mov
repz
test
sbb
xor
addr16
inc
cmp
gs
popa
in
aad
test
dec
fnstcw
sti
addr16
xchg
xor
xlat
repz
cmp
dec
jae
xor
xchg
mov
mov
xor
(bad)
div
stc
lahf
sub
jle
es
sbb
xor
pop
jmp
push
jae
popf
cmp
mov
mov
inc
(bad)
stos
in
xchg
xchg
lea
or
or
es
out
pushw
push
aaa
push
es
add
xchg
xor
retf
fs
mov
mov
or
sahf
sbb
cmp
pop
mov
xchg
jb
movs
inc
in
adc
lds
fwait
cmp
adc
sbb
lods
add
in
mov
dec
outs
(bad)
lods
xchg
test
jecxz
loope
sbb
xchg
je
mov
xchg
mov
sar
pop
cmp
mov
add
inc
xchg
movs
fsubr
mov
xchg
sub
mov
push
pop
push
fmul
jne
xchg
out
fnstsw
dec
sbb
mov
mov
push
test
sbb
pop
sbb
pusha
loope
js
xchg
(bad)
repz
test
mov
mov
mov
in
mov
rol
sbb
cmps
mov
clc
adc
loop
sbb
xor
xchg
test
int3
cmps
movs
push
hlt
or
les
inc
lods
sub
aas
mov
mov
lods
dec
xchg
adc
mov
ret
xor
xchg
xor
in
rcr
jp
stos
pop
pusha
mov
lods
jl
repz
xchg
cmp
movs
out
or
mov
pusha
es
inc
mov
mov
outs
hlt
xchg
mov
aaa
in
mov
inc
and
mov
repz
mov
mov
inc
enter
fs
and
push
dec
ins
or
ins
add
(bad)
imul
loopne
dec
in
mov
sub
push
fdiv
jne
dec
xor
and
pop
xor
scas
push
out
ds
push
mov
xor
popf
and
xchg
clc
pop
cmp
sbb
pop
sub
dec
popf
jae
ins
xchg
scas
arpl
sbb
out
push
xor
(bad)
pop
jmp
(bad)
cmp
or
add
jl
pop
sbb
sub
inc
add
in
into
sbb
mov
loope
mov
xchg
loope
shr
xchg
mov
pusha
jle
cld
rcl
xchg
iret
pop
sbb
mov
jae
(bad)
(bad)
pop
push
mov
movs
imul
adc
add
mov
dec
jne
jo
ret
xchg
mov
mov
pop
in
mov
xor
sbb
cwde
xchg
lods
lea
jo
dec
pop
mov
test
add
imul
lods
and
je
adc
cs
clc
cwde
push
inc
sbb
cmp
stos
add
or
fadd
imul
inc
pop
mov
xchg
retf
xchg
ret
aaa
es
in
stc
and
cmc
aas
push
je
add
mov
add
in
sahf
mov
or
call
adc
fidiv
xchg
fcmovne
je
jle
adc
mov
mov
sbb
ds
inc
mov
sbb
mov
dec
je
push
xor
fnstsw
cmc
inc
mov
inc
hlt
mov
dec
test
arpl
push
hlt
sti
push
repz
jae
(bad)
ror
xlat
add
xchg
mov
xchg
push
jae
int3
arpl
fild
or
out
push
retf
out
adc
jns
mov
pop
fsincos
neg
sub
add
mov
ror
push
push
ror
outs
sahf
out
xor
mov
jg
test
sbb
imul
dec
lds
inc
sub
xchg
adc
into
mov
hlt
jmp
sahf
enter
ss
adc
adc
dec
arpl
xor
sub
pusha
mov
xor
cmps
sub
inc
jp
xchg
jae
in
test
stc
sbb
pop
les
imul
(bad)
jmp
fld
inc
jno
mov
shl
movs
mov
les
movs
jne
fcmovbe
aam
or
mov
sub
rcl
pop
mov
cmp
and
leave
jno
ins
pop
ds
jae
push
jns
out
mov
ins
mov
sbb
and
cmps
push
pop
daa
ds
lods
push
iret
loope
js
call
out
xchg
xlat
test
xchg
das
lea
loopne
pushf
pop
add
hlt
push
test
and
mov
xchg
push
push
enter
icebp
ficom
inc
test
rcr
in
sub
out
(bad)
lds
jo
(bad)
or
imul
arpl
xchg
idiv
gs
retf
jge
je
rcl
rcr
adc
cmps
inc
arpl
sub
inc
cmp
jl
and
mov
das
aad
sbb
xor
sub
aam
aaa
mov
jno
or
xor
(bad)
jns
or
jg
leave
lds
fwait
sub
and
fsub
adc
inc
push
jmp
daa
test
inc
xchg
pop
or
call
jae
cmp
xor
mov
adc
test
pop
cmp
shl
and
dec
inc
test
ja
leave
mov
mov
das
mov
adc
cmps
ds
(bad)
jg
jo
and
inc
je
cmp
cmp
jae
adc
mov
push
jae
ret
pop
and
xchg
jno
sbb
loopne
sbb
movs
ret
clc
cmps
out
push
xchg
or
add
xlat
cmp
jp
pop
mov
sbb
adc
lahf
push
movs
inc
retf
xchg
pusha
mov
mov
cmp
jmp
outs
xchg
add
jp
sti
mov
mov
es
pop
jae
mov
mov
add
adc
hlt
pop
xlat
mov
inc
mov
inc
xchg
sbb
and
out
mov
mov
lds
xchg
push
loopne
inc
sbb
loop
fdiv
outs
mov
adc
sub
sbb
xchg
retf
sub
inc
lds
inc
push
in
sbb
mov
sub
cmps
stc
je
xchg
xchg
mov
inc
not
fadd
or
jmp
adc
jae
mov
out
jns
popa
sbb
mov
les
mov
dec
jns
inc
mov
and
add
pop
mov
add
retf
pop
int3
jmp
mov
add
sbb
movs
mov
sbb
cmp
(bad)
bound
adc
mov
test
js
rol
enter
popf
add
mov
std
push
jno
xor
add
clc
movs
add
push
mov
add
sub
dec
lods
cmp
jmp
mov
cwde
je
sub
add
sbb
aam
xchg
or
daa
nop
je
and
xchg
adc
add
adc
fwait
arpl
scas
mov
test
call
and
jle
jl
mov
mov
out
or
sub
pop
push
xor
mov
jge
scas
ror
jl
mov
jb
push
mov
repnz
ret
xor
mov
loopne
jmp
or
lahf
cmc
mov
leave
xor
shl
mov
lods
and
sbb
ja
test
jae
pop
sbb
mov
xchg
mov
in
jae
cmp
ins
sbb
rcl
xor
cli
mov
test
push
bound
adc
es
popa
or
stos
ss
mov
aam
test
test
repnz
jmp
adc
push
xchg
jo
cdq
dec
mov
mov
add
xchg
or
adc
adc
jae
adc
(bad)
sbb
pop
cld
and
or
sahf
inc
ficomp
addr16
mov
test
add
inc
mov
dec
or
sti
cmps
xor
adc
enter
sbb
jae
xor
ret
or
xor
mov
adc
jmp
shr
sub
cmp
jle
stc
xchg
movs
lds
(bad)
shld
xchg
xchg
xchg
inc
lods
scas
cmps
adc
jae
adc
retf
int
sbb
icebp
outs
imul
pop
jmp
push
gs
and
call
inc
pop
xchg
cmp
jno
jmp
xchg
mov
or
ret
inc
stos
mov
in
or
retf
leave
pop
jbe
scas
repnz
cmp
loopne
call
movs
out
hlt
les
sub
out
dec
les
dec
lea
xchg
sbb
fmul
dec
pop
out
icebp
rcl
stos
sub
or
or
mov
and
pop
nop
call
xchg
inc
pop
sub
push
jge
shl
cdq
mov
xlat
aas
stos
add
sbb
xchg
push
and
jp
cmp
jle
shl
scas
rcr
cmp
sbb
nop
and
in
hlt
and
imul
mov
fidiv
inc
fnstcw
push
push
js
mov
adc
fdivr
xchg
pop
stc
jmp
mov
cmp
popf
nop
mov
retf
in
mov
xor
push
clc
enter
jg
mov
test
popa
sub
test
xchg
movs
clc
dec
aas
push
jmp
lea
in
cdq
mov
pop
dec
mov
popf
push
xchg
repz
gs
inc
int
sar
hlt
xchg
push
or
or
push
clc
ja
mov
jge
ror
cmps
js
lods
into
shl
sti
cmp
(bad)
out
adc
jns
sub
xor
arpl
rcr
lock
adc
and
sub
mov
push
imul
adc
jl
pop
popa
add
jmp
sbb
nop
movs
inc
sbb
(bad)
cmp
cmp
repnz
mov
cmps
test
xchg
or
aad
jb
int
push
mov
jb
rol
sbb
adc
or
faddp
je
cwde
loopne
and
sub
mov
push
sbb
dec
add
adc
xchg
das
jge
(bad)
xor
xor
sub
fmul
jb
mov
jl
js
jnp
cdq
or
jmp
mov
mov
iret
dec
adc
fcom
jmp
pushf
jne
push
cmc
in
sub
movs
das
dec
mov
popa
add
daa
cmc
add
xchg
(bad)
mov
xor
and
or
nop
in
and
lock
cdq
sub
(bad)
mov
imul
stc
xchg
js
xchg
xor
js
gs
inc
cmp
mov
idiv
xchg
sub
push
mov
add
push
adc
int
xor
repz
dec
movs
sub
mov
das
jecxz
mov
xchg
xor
cmp
retf
adc
je
sub
fidiv
pop
or
cmp
lea
int3
sub
jecxz
lods
push
iret
mov
pop
enter
or
repz
mov
mov
mov
int
cli
sbb
or
out
popa
mov
enter
push
xchg
test
(bad)
or
adc
je
ins
xchg
fwait
sbb
leave
xchg
and
cmp
push
mov
fidiv
xchg
scas
and
mov
call
and
sbb
leave
ds
out
lea
sbb
test
dec
xchg
aam
aaa
mov
cmps
mov
subps
inc
xchg
sbb
ret
pop
test
pusha
out
jg
(bad)
cmp
(bad)
icebp
jl
xor
cld
push
cmp
xchg
inc
xor
xchg
rcl
rcl
sbb
fucomp
add
outs
sbb
jnp
sbb
imul
adc
enter
call
inc
add
daa
call
scas
sbb
sbb
iret
jne
add
jecxz
mov
repz
lea
sbb
xchg
dec
cmp
inc
add
repz
loope
xchg
push
jns
lock
sub
jns
inc
and
das
fimul
push
fistp
adc
rol
push
push
mov
jb
pushf
xchg
in
sub
sub
jmp
por
jmp
nop
cmp
add
pop
and
fdiv
jno
cdq
aad
xchg
jl
dec
jns
int
push
js
pop
push
outs
(bad)
cwde
ja
bound
mov
jbe
mov
arpl
mov
inc
xor
cmps
pop
dec
dec
cmp
mov
mov
push
sbb
jae
pushf
mov
inc
cmp
pop
jge
xchg
je
cdq
add
enter
aaa
out
sub
push
in
cwde
popf
xchg
cmp
jmp
inc
mov
pop
pop
mov
and
cmp
pushf
(bad)
fs
mov
push
shl
mov
idiv
stos
mov
cli
les
add
and
mov
stos
and
gs
mov
test
int
mov
adc
mov
push
cmp
mov
push
push
lds
fwait
clc
sahf
aaa
sbb
shr
mov
inc
cdq
cld
mov
push
movs
xor
jae
cmp
xchg
call
mov
ss
xor
dec
data16
ret
and
stos
(bad)
xor
pop
or
ins
fstp
loope
sub
fisubr
jmp
mov
mov
xor
ret
pop
sbb
mov
out
lock
(bad)
sbb
mov
or
mov
pusha
fs
jnp
push
push
fwait
push
(bad)
scas
cmp
adc
cs
stc
addr16
mov
pop
ins
cmp
and
std
test
jae
shr
stos
stos
add
sbb
shr
mov
pop
and
fs
loope
(bad)
jae
jo
or
stos
(bad)
out
pop
das
(bad)
and
shl
out
mov
int3
jle
push
lock
dec
pop
loop
xor
mov
leave
out
test
rcl
iret
mov
sbb
cld
movs
rol
xchg
push
lea
xor
push
pop
jae
lods
dec
ret
xor
mov
sbb
icebp
push
iret
test
pop
outs
xor
jg
jg
dec
inc
(bad)
jl
mov
add
dec
das
adc
adc
xchg
ss
cmps
das
aam
ja
push
push
mov
cli
(bad)
jns
rcl
mov
call
out
cmc
xchg
xor
movs
popa
jae
mov
inc
sbb
pop
mov
leave
mov
mov
test
ret
stc
bound
mov
push
int3
(bad)
or
je
xchg
fnstenv
xchg
jmp
es
es
or
dec
sbb
arpl
mov
ja
sti
cmps
cmp
adc
(bad)
jno
je
in
dec
xchg
ja
ja
dec
popa
(bad)
jae
ins
xor
scas
cmp
cdq
cmp
sub
arpl
pop
xor
enter
outs
retf
call
shl
fldcw
stos
test
cmp
pop
ds
ds
mov
out
popf
mov
inc
arpl
inc
nop
pop
(bad)
retf
ins
mov
xchg
out
(bad)
hlt
nop
mov
ret
repnz
in
pop
popa
adc
inc
xchg
rcl
and
adc
scas
sbb
mov
inc
add
and
pop
push
and
dec
or
mov
retf
jne
pop
mov
jle
mov
inc
jmp
xchg
dec
adc
push
xchg
call
sbb
fild
sub
fidiv
and
adc
cmp
mov
inc
les
daa
jg
add
jne
push
inc
jge
scas
mov
inc
aaa
and
push
xchg
inc
mov
mov
stc
and
dec
neg
ss
aas
lds
ins
sbb
loopne
jl
jae
icebp
sub
sbb
xchg
inc
mov
fnstenv
sbb
inc
das
fwait
dec
jp
inc
sub
fwait
jmp
dec
push
push
les
mov
arpl
xchg
jo
xor
cdq
inc
retf
mov
fild
xchg
xchg
repz
or
jae
or
cld
mov
fisttp
test
cmp
add
push
sar
xor
in
lea
xlat
bound
xchg
jg
dec
scas
mulps
sbb
mov
test
ja
sbb
mov
jne
data16
cmp
clc
idiv
arpl
or
sbb
daa
dec
ja
daa
imul
gs
outs
loopne
in
mov
sbb
push
inc
sbb
ret
call
rcr
addr16
inc
sbb
lods
sbb
mov
add
sahf
mov
push
xor
cmps
fsubr
xchg
sbb
pop
ds
pop
movs
test
in
adc
mov
mov
dec
fwait
rol
cmps
movlps
mov
xor
jecxz
mov
movs
sbb
xor
ds
lods
rol
in
mov
sub
inc
mov
mov
ret
neg
int
mov
dec
adc
push
xor
xor
mov
and
mov
sbb
push
push
push
pop
jae
ins
mov
fwait
sbb
scas
inc
sub
jl
jle
(bad)
sub
xchg
and
sbb
cmp
adc
mov
pushf
movs
imul
scas
mov
ja
xor
and
jb
in
aad
adc
and
hlt
inc
in
or
inc
inc
and
ja
ffree
rcl
mov
sub
repz
in
int
or
movs
nop
shl
jecxz
int
inc
mov
pop
fwait
iret
dec
push
inc
dec
adc
add
mov
inc
mov
mov
fstp
neg
adc
outs
pop
mov
pop
and
jge
je
clc
or
cmp
rep
jecxz
int
out
sbb
jo
add
fdiv
mov
leave
xchg
cmp
xchg
js
push
pushf
retf
outs
(bad)
fstp
rcl
mov
lds
sbb
cmp
cmp
aas
push
pop
je
ss
rcl
movs
es
sti
xchg
data16
xchg
push
sbb
sub
push
mov
jle
and
xchg
inc
xchg
iret
lahf
cli
or
aaa
jnp
aam
bound
xchg
xchg
pushf
call
xor
fwait
std
and
icebp
(bad)
xchg
rol
movs
inc
or
lods
mov
imul
ret
pop
arpl
sub
clc
push
ds
add
sub
jge
mov
mov
sub
jno
xchg
and
mov
jbe
movs
ret
push
movs
test
dec
xchg
pop
das
and
xchg
(bad)
shl
dec
movs
mov
cdq
sbb
sbb
das
pop
dec
pop
dec
sbb
sub
das
stos
mov
ret
out
fwait
int
cld
pop
dec
sbb
jns
mov
xor
enter
jb
inc
hlt
sbb
xchg
mov
push
in
cmp
js
pop
push
add
pop
(bad)
fwait
jp
jecxz
ins
mov
mov
jae
pop
out
pop
mov
sub
jo
xchg
mov
jmp
imul
popa
cmp
pop
mov
cmp
adc
sti
adc
xchg
ins
idiv
jae
aad
or
and
ja
stos
xor
es
es
fistp
inc
mov
pop
xchg
adc
out
jmp
and
ins
dec
dec
in
cmp
stos
ja
jmp
movs
pushf
movs
ja
inc
inc
out
sti
pop
or
scas
call
jae
cmp
retf
mov
aam
sub
je
call
loope
ds
or
push
call
test
and
mov
mov
nop
ss
rcr
je
imul
(bad)
push
jnp
or
in
mov
push
stos
push
inc
fsubrp
jle
add
jmp
mov
arpl
xchg
sub
inc
ss
xchg
dec
pusha
dec
daa
jg
mov
xor
std
jecxz
shl
cmp
sbb
aaa
add
in
fld
mul
push
into
(bad)
aam
test
pop
pop
push
fwait
pop
imul
out
movs
test
loope
add
sbb
ja
pop
aam
ss
sbb
dec
fisubr
jb
out
cld
pop
in
int3
jb
mov
xchg
pop
imul
(bad)
pop
add
mov
mov
xor
xor
jl
and
dec
fwait
jb
pop
ficom
or
pop
fsubr
or
mov
inc
clc
pop
inc
call
lods
fldcw
push
fisubr
sub
jbe
ja
dec
aad
js
pusha
gs
inc
mov
xchg
test
push
push
in
call
add
or
dec
sbb
inc
movsx
mov
and
jp
lahf
je
sbb
cmps
pop
loope
clc
xor
pop
sub
imul
cmp
fisttp
mov
adc
mov
int3
pop
sbb
xchg
jne
xlat
push
lock
(bad)
adc
gs
push
add
jle
repz
jecxz
mov
pop
mov
xor
mov
pop
sbb
outs
ficomp
(bad)
mov
out
adc
cmps
ins
pop
stos
cmp
and
pop
arpl
mov
retf
nop
aam
lock
js
prefetch
cmp
add
push
sti
aam
addr16
push
ret
in
fadd
(bad)
hlt
sbb
pop
sbb
pop
inc
nop
sub
repnz
cmp
aaa
sbb
mov
xor
loope
sub
jae
lea
stc
sbb
cmc
mov
dec
xor
xor
add
out
add
mov
loopne
dec
out
cmp
xor
adc
ret
loope
xor
dec
mov
les
adc
xchg
xchg
dec
in
retf
inc
dec
jae
push
pop
push
movs
mov
es
xor
cli
xlat
mov
idiv
mov
mov
sbb
mov
or
dec
xchg
mov
sub
fisub
(bad)
cmps
adc
and
imul
dec
add
push
cmc
gs
or
ins
sbb
out
jb
sbb
xchg
movs
retf
jb
dec
pop
and
push
xchg
retf
(bad)
je
enter
sbb
sbb
mov
test
mov
or
mov
(bad)
into
stos
ins
movs
lahf
retf
lahf
scas
jne
mov
add
pop
cdq
loop
popa
imul
xchg
out
mov
mov
inc
pop
add
out
inc
fadd
daa
das
jge
add
pushf
mov
xor
outs
push
repz
push
push
sub
jb
and
mov
fs
out
push
loope
mov
pop
pop
dec
dec
jmp
cmp
inc
jnp
dec
mov
dec
mov
inc
xor
pop
cmp
lods
ret
out
xchg
stc
clc
aad
adc
jb
or
xchg
or
xchg
xor
pushf
sub
dec
adc
movaps
push
sbb
push
add
sbb
loop
daa
ja
jae
fadd
xor
or
shl
mov
sbb
xor
inc
das
sbb
cmc
pushf
dec
sbb
pop
pop
retf
mov
jb
ret
pop
or
add
dec
xchg
inc
enter
fxch
dec
jae
and
sti
das
data16
out
imul
sbb
ds
jp
(bad)
sub
out
pop
mov
test
mov
call
jnp
sbb
hlt
cmp
lock
adc
jle
xor
mov
in
or
xor
inc
jmp
jmp
movs
lods
mov
mov
push
arpl
sbb
inc
test
in
mov
jle
lahf
addr16
mov
jne
imul
push
fst
or
in
(bad)
pop
xchg
mov
adc
les
add
push
mov
jge
xchg
in
cmc
lods
(bad)
test
and
fsubr
into
or
or
dec
mov
inc
test
movs
push
push
scas
and
sbb
xor
push
cmp
sar
xchg
lahf
push
push
lods
cli
int3
sti
adc
cmp
jae
aad
add
stos
aam
adc
pop
je
and
jnp
dec
xchg
xchg
xchg
int
outs
cmp
retf
gs
sbb
sub
cwde
pop
pop
jae
sar
jbe
mov
sbb
adc
movs
test
cld
sahf
(bad)
cwde
sub
push
and
inc
call
jl
cli
push
imul
aas
add
pusha
pop
mov
aam
or
rcr
pop
mov
lock
xor
mov
or
xchg
movs
ja
les
mov
neg
enter
push
aaa
movs
mov
push
cmp
mov
test
sbb
outs
ror
je
sbb
pop
cmp
push
xlat
pop
call
aas
jbe
test
sub
jae
sub
je
push
gs
sbb
pop
loopne
xchg
stos
dec
push
mov
inc
mov
sbb
fnstcw
xadd
cmp
add
inc
xchg
add
push
jne
mov
adc
fadd
repnz
icebp
cli
xor
jl
xchg
inc
push
scas
inc
movs
or
push
repnz
mov
adc
jae
mov
stc
shl
mov
jne
and
outs
ror
cmp
retf
sbb
mov
mov
xchg
dec
inc
sub
jl
scas
push
adc
push
scas
pushf
sbb
movs
jmp
sbb
inc
jecxz
movs
fisttp
inc
hlt
mov
sbb
mov
jmp
xchg
sub
cs
add
adc
pusha
or
fld
sbb
jmp
mov
lods
mov
loopne
inc
pop
xchg
jae
not
and
fsubr
inc
sub
aad
inc
cwde
(bad)
pop
jbe
pop
inc
popa
retf
cld
sbb
fucomp
stos
or
xor
das
jb
(bad)
xor
and
repz
sub
mov
ja
mov
inc
inc
lock
fidiv
jbe
xor
scas
push
add
in
mov
pop
and
xor
lock
mov
dec
aad
mov
mov
(bad)
xor
push
aad
mov
pop
adc
pop
sti
inc
push
rcl
push
pop
ja
mov
sbb
fwait
sub
mov
(bad)
jo
jbe
scas
(bad)
out
lock
mov
push
push
aam
fnstsw
mov
push
fcmovnbe
(bad)
mov
adc
xor
pop
in
xor
je
add
pop
dec
pop
inc
or
mov
cmp
xchg
das
or
test
dec
push
int3
and
jae
mov
jp
aas
add
sti
xchg
outs
adc
jg
xor
push
xlat
dec
movs
dec
jb
rcl
pop
cmp
adc
mov
pop
xchg
mov
neg
push
or
pusha
inc
arpl
jmp
dec
cmp
mov
sub
and
dec
es
or
inc
xor
xchg
fld
not
xor
sbb
cmps
jp
push
je
enter
or
jb
inc
add
(bad)
push
test
(bad)
cmp
mov
or
in
mov
pushw
es
pop
mov
cld
js
leave
add
or
movs
outs
add
dec
stos
mov
pop
mov
popa
push
and
add
jae
sbb
mov
cmp
(bad)
xchg
push
into
or
arpl
aam
inc
sbb
les
adc
shl
or
pushw
js
lods
pop
(bad)
(bad)
jmp
(bad)
(bad)
push
pop
mov
xchg
int3
push
jg
fidiv
and
sub
mov
or
pushf
dec
fs
js
inc
mov
sti
xchg
loopne
movs
jmp
adc
xchg
cdq
pop
fwait
mov
enter
sbb
ja
idiv
sub
movs
imul
pop
xor
and
jae
mov
jnp
mov
mov
jmp
imul
out
jb
sbb
mov
imul
hlt
cmp
mov
addr16
dec
or
mov
adc
mov
xchg
clc
and
lods
pop
mov
fsubr
xchg
mov
sbb
stos
pop
imul
je
loope
jb
cmp
mov
or
ja
or
shr
je
xor
(bad)
shl
dec
inc
retf
rcr
retf
pop
fcom
jge
or
inc
sbb
cmp
mov
xor
in
fcomp
mov
mov
sub
xchg
adc
inc
add
cmps
xor
jbe
popa
xor
retf
enter
jbe
mov
jg
mov
sahf
movs
stc
cwde
(bad)
cmp
and
or
jnp
lods
push
sbb
jns
add
mov
pop
or
ret
dec
cmp
jb
dec
int
or
cmps
ret
pop
out
push
push
fwait
js
jo
mov
scas
push
aaa
pop
fdivr
pop
cmc
inc
test
dec
push
bound
(bad)
push
js
jmp
lods
sbb
mov
xchg
test
pop
mov
dec
out
xor
jp
movs
jae
pop
loope
pushf
(bad)
sbb
test
sub
jb
add
xor
inc
(bad)
cmp
xchg
jecxz
rcl
call
xchg
inc
es
sub
out
mov
les
neg
pushf
stos
retf
mov
add
add
inc
sahf
cli
mov
pop
dec
xchg
jmp
es
cwde
out
das
js
ret
outs
and
mov
(bad)
scas
push
cmp
test
inc
mov
cmps
ss
mov
pop
or
stos
loopne
repz
arpl
fucomp
lock
and
outs
mov
inc
pop
inc
adc
out
mov
sbb
scas
loop
int3
mov
mov
mov
pop
add
mov
(bad)
frstor
inc
mov
jle
xlat
repz
sbb
cwde
pop
or
cmp
fidiv
sub
xor
xchg
xchg
sbb
xchg
jo
in
push
ss
dec
ins
dec
pop
daa
lds
fild
mov
and
adc
pop
stc
fwait
je
in
aas
ret
and
sti
fist
gs
out
jbe
jmp
sbb
lds
push
add
push
cmp
sti
(bad)
out
repz
xchg
fwait
mov
add
adc
xchg
rcr
mov
xchg
sub
in
fs
mov
retf
sbb
aas
and
mov
and
sar
(bad)
xchg
add
lods
xchg
pop
(bad)
jb
rol
xor
out
and
jmp
mov
and
jae
pop
cmp
in
mov
sbb
sub
push
or
jnp
mov
pop
mov
pop
xor
jo
scas
push
xchg
cs
inc
rol
mov
inc
lea
stos
movs
test
clc
loopne
and
stos
cld
cmp
mov
je
fwait
mov
jbe
daa
and
pop
sub
lods
add
mov
push
or
nop
mov
xor
add
loope
and
sbb
xchg
inc
push
sbb
cmp
mov
mov
push
hlt
out
scas
mov
xor
push
sbb
add
push
pushf
mov
dec
mov
pop
cmp
push
movs
xchg
jg
add
call
scas
in
xor
out
xchg
xor
push
mov
lods
pusha
add
repnz
mov
ror
and
xor
mov
je
retf
or
pop
es
scas
in
jl
mov
popa
pop
(bad)
fiadd
mov
mov
in
ret
sbb
scas
call
mov
hlt
stos
jmp
xchg
inc
mov
dec
cmp
stc
dec
mov
loope
mov
mov
icebp
mov
sbb
xor
sub
sbb
push
mov
cmp
mov
aam
(bad)
lahf
mov
jp
ja
aaa
dec
hlt
adc
mov
sbb
add
and
pop
and
div
xchg
sub
jb
xor
jb
pop
cmp
mov
pop
inc
sbb
jmp
(bad)
in
ins
push
mov
rol
call
std
aas
sub
dec
cmp
sbb
fimul
mov
or
neg
cwde
mov
out
xchg
cdq
xchg
dec
in
repz
sbb
mov
inc
fs
xor
jmp
jae
xchg
mov
inc
sbb
push
xor
retf
and
mov
push
push
pop
or
movs
add
outs
push
cwde
jp
xchg
jp
push
aam
outs
mov
mov
test
push
xchg
bound
pop
pop
jb
ficom
push
dec
xchg
stos
inc
popf
push
push
rcr
and
push
jecxz
mov
test
sub
sbb
mul
dec
xlat
shr
ror
int
test
jae
repnz
add
cmc
push
jle
sbb
adc
mov
mov
sbb
scas
daa
fldenv
sbb
sbb
cmp
jne
dec
fist
repnz
mov
xor
mov
sbb
mov
mov
fimul
sub
push
cmp
xchg
dec
sub
sbb
add
mov
mov
(bad)
push
and
sbb
imul
inc
(bad)
mov
or
je
push
inc
cs
fcom
or
stos
(bad)
into
lea
push
pop
outs
dec
jmp
jmp
pop
pop
xor
repz
mov
mov
mov
outs
xchg
popa
in
sbb
int3
hlt
and
das
mov
pop
lea
push
pop
sbb
rcr
scas
jae
xor
dec
addr16
add
or
stos
mov
repz
cmp
movs
inc
push
sbb
jb
xchg
jge
cmp
std
hlt
pop
sub
sti
vunpcklpd
adc
push
(bad)
je
sbb
(bad)
iret
into
aam
mov
mov
inc
xchg
fnstcw
rol
lods
add
stos
push
test
ins
add
adc
cs
sbb
call
mov
imul
sbb
cmps
nop
int3
loop
js
and
sub
jl
mov
pop
push
jmp
mov
hlt
int
jbe
fdiv
mov
mov
mov
sbb
sub
xor
cld
and
mov
xchg
jo
pop
sbb
jae
add
inc
add
in
bound
pop
and
movs
stos
inc
fld
mov
inc
sub
test
hlt
sub
frstor
dec
aam
lods
adc
aas
les
in
or
rol
xchg
jae
call
mov
scas
push
data16
hlt
push
inc
xchg
mov
jmp
jae
add
aam
mov
xchg
scas
imul
adc
ficom
popf
jnp
cmp
xchg
pop
pop
out
xchg
neg
(bad)
test
das
xchg
je
and
mov
mov
scas
fmulp
xchg
pop
add
inc
cmc
jns
(bad)
mov
ins
xchg
cmc
xchg
push
cdq
or
mov
ins
test
call
push
push
sbb
and
out
inc
jmp
mov
lock
fidiv
inc
push
icebp
aam
cmp
sbb
pop
sub
imul
jl
inc
nop
movs
ror
adc
adc
repz
jb
retf
movs
dec
shr
jp
mov
pop
adc
or
repz
xor
jae
ret
jle
les
mov
jle
sbb
mov
test
out
icebp
xchg
das
mov
in
jne
jmp
push
ret
daa
rcl
call
xchg
stc
fwait
loop
je
(bad)
scas
(bad)
mov
hlt
mov
lods
stos
push
mov
fcomp
shl
mov
in
dec
push
xchg
mov
jae
cli
das
(bad)
in
inc
xchg
test
ror
jno
cld
push
in
leave
mov
cwde
ins
in
dec
test
jmp
ficom
inc
(bad)
loop
jae
loope
and
pushf
shl
push
mov
fwait
dec
or
xlat
enter
sbb
cdq
mov
(bad)
test
aad
nop
mov
lds
xor
mov
cmp
neg
pop
cmps
out
retf
rcl
sub
add
mov
mov
push
pushf
stos
dec
pop
mov
push
jb
iret
aad
or
mov
sub
je
push
or
jle
push
lea
push
in
inc
xchg
push
add
addr16
sbb
ins
stos
push
mov
push
mov
std
dec
stos
(bad)
dec
std
add
in
adc
ja
jo
jne
push
iret
or
or
call
hlt
or
(bad)
mov
ss
cdq
fs
call
or
pop
das
sub
(bad)
fisubr
(bad)
outs
in
mov
adc
xchg
jae
cdq
ja
xchg
loopne
jae
mov
mov
data16
movs
mov
sub
jb
push
xlat
test
pop
xchg
mov
mov
jno
aam
ror
adc
icebp
add
xchg
jp
test
cmp
icebp
or
pop
adc
push
pop
pop
mov
test
xchg
das
test
leave
cmp
test
inc
cmp
or
xchg
adc
cli
jge
mov
jae
jmp
lods
and
inc
jbe
xor
mov
push
repnz
push
popa
xchg
ja
push
lods
jne
jnp
xchg
imul
xchg
(bad)
jmp
jp
xor
(bad)
(bad)
lock
clc
mov
scas
pop
pop
cmp
jb
xor
in
cmp
arpl
addr16
(bad)
lods
adc
mov
daa
sub
sti
shl
cli
dec
pop
cmp
rcl
dec
jbe
jmp
cmps
adc
add
sbb
scas
sbb
xor
pop
call
int3
test
cdq
je
cmp
mov
test
sahf
xor
movs
dec
push
retf
sub
into
sbb
mov
sbb
mov
dec
enterw
pop
mov
xchg
aam
je
mov
jle
push
pop
jo
dec
es
scas
inc
inc
jbe
inc
push
sbb
in
or
imul
(bad)
cs
dec
adc
add
popf
and
xor
inc
jns
cmp
div
rcr
lock
jmp
bound
cmp
sbb
or
sbb
aas
mov
ja
dec
and
stos
fmulp
mov
jb
hlt
xor
es
out
ja
xor
and
cmps
push
adc
jmp
int3
movs
sbb
dec
gs
sbb
push
mov
xchg
xor
hlt
shl
inc
loopne
adc
pop
dec
push
jb
stos
lods
arpl
test
pop
sub
pusha
out
mov
mov
outs
hlt
inc
jbe
imul
inc
push
pushf
jg
sbb
inc
repnz
cmps
mov
xor
jae
dec
lea
mov
mov
sbb
inc
jae
and
cmps
adc
or
push
mov
mov
dec
jo
sub
sbb
test
jecxz
scas
das
add
and
adc
inc
test
test
out
popa
inc
pop
aas
in
jp
adc
repnz
sub
push
shr
mul
mov
int
test
or
dec
and
call
aas
repz
jno
les
ins
adc
pop
fsub
in
clc
xor
(bad)
push
fs
adc
pop
adc
cmps
int
cmps
mov
retf
repz
fistp
out
fld
lds
mov
cmp
ficom
pop
adc
add
popf
retf
and
push
pop
lods
jo
inc
push
sbb
push
xchg
dec
or
gs
mov
cs
in
fs
loope
pop
jge
ret
cdq
mov
mov
ins
enter
mov
add
(bad)
imul
sbb
push
and
ds
fstp
(bad)
xchg
mov
movs
fld
int
(bad)
loope
sub
test
daa
and
fsubr
inc
fidivr
cmp
xchg
adc
lock
or
inc
push
sub
es
push
pop
mov
jb
add
jmp
lahf
and
pop
ins
xlat
adc
sbb
push
sbb
icebp
fdivr
repnz
cmp
sbb
ins
mov
adc
cmp
enter
movs
lods
jae
and
inc
adc
or
sbb
sbb
push
out
inc
jae
sbb
(bad)
in
adc
cmc
ret
sub
fs
pop
cdq
jge
inc
ds
push
add
jle
jl
mov
out
rcl
mov
retf
jb
aam
jae
je
xchg
popa
mov
pop
push
and
ficomp
mov
fs
rol
ror
xchg
inc
inc
push
cmp
push
dec
pop
mov
sub
pop
in
jae
xor
or
(bad)
or
mov
mov
shr
xor
xchg
push
aam
jae
movs
retf
sbb
pop
mov
mov
sbb
xchg
(bad)
mov
loope
xor
or
aad
sbb
cmps
xchg
jmp
jo
(bad)
retf
in
adc
rcl
and
push
cs
and
lea
xor
in
scas
sbb
pusha
in
jae
mov
imul
push
fisubr
xchg
add
imul
cmp
push
cmps
mov
add
adc
xchg
push
fwait
arpl
mov
xchg
sbb
mov
mov
sbb
jne
imul
xor
sub
js
aad
fld
js
cmp
inc
ret
add
xchg
sbb
ins
sbb
dec
test
cmp
repnz
xchg
cmp
and
sbb
lods
stc
push
stos
lahf
or
fsub
jae
dec
sbb
xchg
rcr
push
cmp
shl
stos
(bad)
in
xor
and
call
dec
out
xchg
(bad)
pop
mov
xchg
gs
cld
mov
xor
push
jnp
sbb
add
push
add
sub
int
loopne
aad
test
fild
jge
popa
xchg
rcl
xor
stos
dec
xchg
je
xor
add
inc
sti
ins
sub
mov
ficom
xor
mov
ss
xchg
sbb
lods
mov
xchg
and
push
aaa
inc
ins
pop
push
sbb
and
pop
or
mov
pop
xor
div
dec
xchg
nop
mov
xchg
scas
(bad)
movs
jmp
xchg
add
rcl
pushf
and
sub
mov
mov
cld
and
stos
mov
ficom
jle
jae
dec
inc
add
mov
pop
add
mov
cmps
push
jmp
adc
push
ret
sbb
jae
mov
test
stos
mov
js
inc
cmc
mov
dec
pushf
int3
add
aad
adc
sub
mov
push
add
leave
sub
jbe
lods
in
dec
mov
jl
pop
xchg
push
js
cmps
mov
jmp
fdivr
mov
push
hlt
sbb
inc
mov
adc
push
ja
bound
adc
mov
sbb
popa
inc
inc
cmp
jg
jg
cmp
mov
rol
or
nop
retf
cmc
aam
jg
pop
push
psrld
push
jo
add
pusha
mov
loop
mov
out
lahf
jo
les
loopne
pusha
push
or
sub
(bad)
mov
in
mov
inc
pop
dec
dec
jg
mov
and
ss
sar
sbb
fimul
push
aam
pop
neg
inc
xchg
xchg
sbb
lds
jae
into
mov
dec
sbb
pusha
rol
or
rcl
fcom
out
sub
jmp
push
in
mov
lods
daa
dec
inc
jb
and
(bad)
pop
adc
ins
inc
fidivr
mov
adc
bound
xchg
and
mov
cmp
pop
xchg
mov
sub
gs
add
lds
pop
jmp
mov
sbb
xchg
adc
lahf
sbb
inc
jp
cmp
out
shl
sbb
add
xor
cs
mov
jmp
mov
push
sbb
jbe
out
and
jbe
or
pop
sbb
mov
popfw
scas
sub
movs
push
div
repz
call
adc
aad
xor
ja
mov
sub
xchg
xchg
adc
lock
leave
xor
xor
outs
fwait
xor
or
cmps
dec
mov
xor
mov
mov
xor
cmps
or
into
adc
aad
mov
mov
(bad)
loopne
push
jo
mov
xchg
adc
xchg
jmp
xchg
jns
inc
mov
ins
(bad)
js
mov
xchg
mov
push
popf
ja
sub
stos
push
xor
das
cmps
in
adc
(bad)
jb
push
push
sbb
cld
ss
cdq
jb
mov
and
scas
mov
sub
jbe
push
call
and
loope
cmps
fcom
leave
or
lea
xchg
mov
loop
adc
sub
mov
push
mov
nop
stos
fist
inc
(bad)
xlat
mov
popf
cmp
inc
add
popa
lea
js
ins
push
lahf
hlt
dec
xor
test
push
add
ret
push
jmp
test
fsub
xchg
inc
fwait
sub
in
xchg
cmps
ins
jo
scas
into
leave
adc
push
dec
pop
adc
and
mov
jae
or
iret
push
jo
les
pop
lea
nop
jb
lods
(bad)
jge
hlt
or
ja
cmp
push
mov
test
xor
cmps
xchg
adc
loop
push
(bad)
xchg
(bad)
mov
fnstenv
xlat
inc
jns
dec
add
fidiv
mov
ds
push
jg
xchg
arpl
cmp
jae
or
dec
jle
mov
and
scas
out
add
(bad)
shr
ds
pushf
cmovb
lods
add
sbb
or
xor
loop
test
rcr
xchg
sub
cmps
nop
mov
adc
js
jecxz
ret
cmps
push
jge
mov
call
pop
adc
clc
in
mov
shl
loopne
je
push
mov
nop
imul
cld
mov
fbstp
push
mov
dec
cs
(bad)
sbb
lods
jg
bound
inc
mov
and
mov
and
push
cmps
inc
or
xchg
mov
pop
jp
lock
movhps
lods
jb
dec
pop
sbb
test
(bad)
std
lods
dec
fadd
mov
sub
xchg
inc
in
mov
jbe
in
xchg
popa
int3
stos
cmp
jecxz
das
ror
js
loope
mov
(bad)
aam
sbb
cmps
inc
cli
stos
repz
and
ins
mov
inc
xor
mov
in
shr
mov
js
xchg
and
cmp
inc
sub
je
adc
add
pop
cld
mov
data16
mov
mov
mov
sub
es
ror
not
loope
pop
jb
pop
js
jae
jecxz
xchg
stc
xor
push
cdq
push
pop
lods
and
stos
das
xchg
pushf
cmc
inc
mov
fwait
jns
jmp
jns
retf
pop
jnp
and
(bad)
int
stc
ja
fcom
sbb
dec
dec
rcr
jb
scas
mov
fadd
leave
std
aad
pop
icebp
jbe
js
sbb
xor
and
add
stos
aaa
cwde
and
movs
cmp
adc
sbb
jp
call
cwde
loope
xchg
mov
inc
cld
arpl
iret
aam
sub
xor
hlt
(bad)
loopne
mov
popa
vrcpss
push
ins
ins
mov
push
nop
mov
les
int3
dec
jns
xchg
aaa
jle
inc
inc
sysenter
or
or
push
push
lods
icebp
mov
jbe
aam
jne
cld
push
sbb
ss
les
mov
or
adc
push
mov
lods
jae
push
pop
ss
mov
aas
pop
adc
mov
push
nop
into
aaa
icebp
scas
push
jge
sub
xlat
out
sbb
lds
xchg
je
xchg
cdq
adc
fadd
cmp
push
inc
mov
cmp
xchg
int
out
or
bound
and
retf
cmc
or
cmp
mov
sbb
inc
cld
out
es
or
pop
hlt
js
test
jae
clc
lods
nop
scas
test
sbb
jne
dec
sbb
data16
adc
jl
inc
arpl
sete
sub
jae
sbb
pop
xor
dec
aas
mov
mov
out
mov
mov
jp
cmc
inc
mov
sub
out
rcr
imul
mov
mov
sahf
rcl
or
cdq
test
sbb
int
mov
or
xchg
and
inc
adc
mov
dec
movs
mov
push
sbb
sti
xchg
sub
sub
sbb
xchg
inc
xchg
inc
pop
jb
sub
mov
cmp
sti
(bad)
and
sbb
daa
push
cmp
inc
cmp
dec
pop
xchg
mov
sbb
jbe
sbb
cmp
cmp
jmp
xchg
pop
mov
cmp
retf
sub
xchg
lea
data16
lods
stos
pop
xchg
ja
mov
and
fwait
in
mov
adc
push
test
pop
xchg
imul
leave
mov
push
jg
dec
add
or
jp
jne
retf
(bad)
mov
dec
inc
inc
xchg
jbe
test
jge
mov
sahf
mov
jno
jae
mov
mov
das
in
mov
loop
mov
fdivr
scas
xchg
push
ds
sbb
mov
(bad)
cli
call
xchg
dec
std
icebp
popa
cmc
push
and
mov
stc
dec
js
mov
(bad)
pop
retf
push
or
jns
lods
and
lods
push
sahf
out
imul
ds
inc
xchg
loopne
enter
lods
mov
adc
push
aaa
inc
fsub
aad
mov
cmp
scas
ret
sub
pop
fisubr
sbb
fnsetpm(287
xchg
daa
cmp
pop
jmp
call
pop
cmp
or
stos
xchg
push
fsubr
push
dec
or
in
fwait
cld
push
pop
pushf
adc
add
in
push
bound
mov
lods
aas
sub
inc
movzx
xor
rsqrtps
aaa
fst
(bad)
push
jo
or
je
aam
add
stos
inc
repz
mov
jmp
loope
call
jmp
dec
outs
pop
push
jae
jae
xchg
add
ins
jae
pop
xchg
stc
pop
and
mov
mov
pop
out
xchg
dec
fcmove
pop
lock
push
push
inc
in
pop
and
mov
cmp
repz
add
retf
dec
les
pop
iret
out
mov
adc
xor
imul
not
or
movs
add
fwait
mov
push
jb
xor
jecxz
mov
les
add
xchg
test
inc
mov
movs
dec
xlat
push
arpl
loopne
pop
sbb
ficom
mov
inc
pop
jae
dec
adc
std
mov
sbb
push
mov
adc
mov
fnstsw
push
xor
fxtract
rcr
aam
(bad)
pusha
enter
leave
inc
push
(bad)
mov
mov
aam
mov
gs
push
push
xchg
jae
cmp
retf
sub
lock
test
adc
pop
xor
dec
cmp
sub
pop
sbb
jae
mov
sbb
inc
or
stc
in
dec
mov
pop
mov
sub
xor
mov
add
sbb
daa
mov
fisubr
push
pop
xor
shl
clc
shr
stc
or
aaa
add
iret
xor
sbb
sub
mov
sbb
fcomp
or
shr
xor
(bad)
sti
jbe
(bad)
fsub
push
push
les
mov
xchg
mov
ret
mov
and
or
in
pop
pop
fbstp
jle
fmul
mov
hlt
xchg
xchg
loope
sub
mov
mov
add
push
in
pop
mov
push
(bad)
jl
or
jp
and
call
pop
sbb
gs
xchg
dec
sahf
(bad)
push
jecxz
xlat
loope
mov
jb
push
adc
sub
scas
jo
jno
test
or
mov
pusha
jae
ds
xor
ret
cmp
jae
movs
and
xchg
dec
ss
sbb
ja
movs
pop
or
inc
loopne
xor
cmp
jp
jmp
or
dec
hlt
cs
dec
pusha
cmp
or
sbb
or
cwde
sbb
push
in
call
daa
lods
int3
mov
fcmovnb
adc
in
adc
cmp
push
push
jp
in
psubusb
dec
test
mov
sbb
daa
aam
mov
lds
adc
shl
sbb
jmp
inc
push
stc
cwde
dec
ret
les
mov
icebp
jae
jnp
cdq
movs
int
jl
loopne
ret
push
pop
fcmovnu
test
mov
fcom
fidiv
pop
cdq
sub
enter
push
arpl
loop
cmc
push
imul
and
outs
sub
adc
test
lock
mov
mov
popa
dec
adc
mov
jae
test
cmp
or
scas
jp
jge
sbb
adc
lea
sbb
ficomp
cmps
dec
sbb
xlat
mov
sbb
adc
jae
and
(bad)
pop
les
fmul
adc
jne
ins
sbb
mov
aam
cs
push
in
sbb
mov
neg
sbb
pusha
sbb
ja
cmc
cmp
inc
mov
ja
fimul
xchg
out
das
js
into
mov
add
cmps
or
add
jmp
stos
mov
xor
outs
into
bound
mov
and
call
mov
jg
jo
adc
scas
adc
rcl
vphaddubw
cmps
clc
pop
sahf
jo
stc
xchg
gs
mov
pop
lds
and
cwde
jno
dec
shr
lds
push
jmp
imul
scas
repnz
pop
pop
fnstenv
test
ret
pushf
mov
mov
je
enter
mov
and
dec
jae
xor
or
loop
ja
shr
mov
push
xor
imul
cli
sbb
outs
or
sbb
lahf
adc
xor
mov
push
int3
push
push
daa
and
jmp
jge
imul
mov
jp
ret
ror
fsub
fidiv
arpl
pop
js
into
cmp
std
jmp
sbb
add
fisub
inc
mov
addr16
jle
sub
sbb
test
pop
mov
dec
inc
or
add
stos
and
je
push
div
scas
push
adc
add
adc
mov
push
aad
mov
or
mov
jae
sub
rcr
(bad)
mov
leave
jl
push
mov
out
mov
dec
cmovp
pop
xchg
dec
jne
leave
lock
sub
or
ds
sti
repz
xor
mov
lods
fisub
mov
imul
pop
aad
imul
sbb
lods
mov
jae
mov
retf
sbb
jns
pop
push
xchg
out
or
jle
xor
inc
push
mov
mov
mov
ja
les
jge
aam
aaa
(bad)
mov
cmp
or
pop
aaa
xchg
sub
leave
jne
jns
ja
cmp
add
call
mov
or
push
shr
rol
jg
sbb
push
scas
leave
mov
pop
ja
mov
mov
or
bound
mov
sub
ins
mov
cli
mov
sub
fadd
adc
lods
dec
jbe
sbb
outs
(bad)
bound
lock
cdq
sbb
push
adc
int
imul
sub
mov
push
sub
in
div
inc
dec
push
cmc
out
dec
mov
mov
sbb
dec
ds
mov
test
fwait
adc
sbb
push
out
popf
jmp
aaa
jne
push
inc
rcr
fs
mov
mov
loopne
lock
mov
xor
xor
call
and
(bad)
xor
mov
ret
aas
push
outs
mov
aas
not
pop
add
mov
fcom
sbb
fmul
pop
jecxz
icebp
mov
or
pop
pop
in
pop
sbb
xchg
mov
xchg
jle
or
sbb
and
push
nop
mov
adc
pop
sbb
retf
cld
inc
xor
in
scas
mov
rcl
repnz
mov
mov
(bad)
pop
adc
sub
cmp
and
add
dec
cmp
icebp
xchg
xor
dec
xchg
mov
mov
sbb
jnp
push
gs
mul
adc
js
xchg
xchg
and
lock
mov
and
fisttp
js
mov
sub
(bad)
out
push
and
inc
jp
pop
hlt
push
fs
mov
data16
add
push
add
cmp
jmp
mov
xchg
cmps
das
pop
sub
pop
push
mov
mov
sbb
dec
retf
aaa
(bad)
popa
ret
xor
push
int
aam
jl
imul
sbb
repz
dec
dec
lods
int
xchg
ret
imul
push
pop
mov
ficom
loop
retf
je
mov
mov
test
mov
scas
mov
fst
imul
(bad)
mov
push
enter
dec
sbb
pushf
inc
mov
inc
frstor
movs
jae
inc
popf
les
push
fwait
in
aaa
jb
retf
sub
mov
jp
or
and
popf
sbb
stos
inc
repz
in
jae
pop
pop
sbb
cmp
dec
push
push
ja
fnstenv
mov
imul
lea
fnsave
stos
push
dec
cli
mov
pop
aas
dec
call
lahf
push
mov
movs
cli
sbb
call
lds
xchg
fidiv
or
fwait
out
mov
jge
int3
dec
mov
movs
mov
test
sub
clc
sub
sub
add
scas
pop
cmp
lock
mov
add
je
popa
sbb
aaa
mov
xchg
cmp
inc
mov
cwde
cmp
out
loopne
or
and
adc
sub
jbe
or
call
loop
sahf
jmp
call
xor
sbb
dec
xchg
out
ja
mov
(bad)
iret
add
add
or
dec
dec
pop
dec
scas
fbld
je
jge
mov
aam
and
repnz
sub
push
inc
mov
pop
or
mov
leave
xchg
loop
ins
inc
loope
jnp
cs
jae
jns
adc
or
test
pop
jmp
mov
sub
dec
dec
adc
xchg
sbb
dec
sar
or
call
aaa
shl
test
xchg
inc
inc
add
js
cmc
retf
out
shl
xor
sub
hlt
sti
rcl
mov
jae
inc
bound
in
push
fadd
adc
adc
nop
jae
shl
xor
lock
in
pop
xchg
push
je
mov
sbb
sub
inc
outs
dec
sub
jb
sbb
sbb
ror
popf
xchg
mov
xchg
popa
js
pop
xor
cmps
mov
xchg
mov
jnp
dec
test
pop
in
jmp
shl
mov
pushf
add
sbb
clc
push
mov
sti
inc
and
mov
movs
sbb
cdq
mov
or
neg
cmp
ins
xor
retf
add
fwait
mov
dec
cmp
shl
je
or
mov
dec
xor
adc
je
int
(bad)
push
jmp
stos
fsub
stc
ja
les
mov
das
sbb
add
add
sbb
and
repnz
arpl
ret
cmp
sbb
fmul
cmps
push
stc
div
outs
fidiv
lods
or
mov
cmps
loop
fwait
mov
pop
sub
xchg
bound
mov
sbb
xchg
arpl
fcmove
scas
and
and
aam
fidiv
in
cld
mov
mov
loop
xchg
pop
je
jns
ret
sahf
xchg
sbb
ror
sbb
aas
retf
add
mov
xchg
out
dec
push
neg
mov
je
sti
mov
xchg
enter
(bad)
stos
fiadd
jb
je
retf
ja
cmps
xchg
inc
enter
jae
pop
or
pop
retf
fsub
test
sbb
jecxz
lods
dec
neg
mov
pop
mov
xor
push
sbb
dec
sbb
cmc
mov
ins
ss
scas
cs
pop
mov
push
scas
jae
pop
test
neg
ja
loop
test
inc
cmp
inc
dec
push
xor
sub
lock
cmp
cdq
jecxz
and
mov
and
lods
mov
sub
test
xor
loopne
or
adc
enter
ins
mov
fimul
cdq
sbb
xchg
lods
and
lahf
stos
mov
daa
ins
sbb
inc
(bad)
dec
mov
dec
test
(bad)
mov
in
sub
fidiv
lds
fadd
sar
mov
shr
mov
ja
xchg
xchg
adc
in
jne
jge
xor
fcom
xlat
xchg
pop
mov
cmp
sub
call
icebp
lods
sub
adc
ss
lock
repz
dec
jle
jae
adc
mov
push
adc
add
jae
jbe
popa
lods
movs
push
push
sbb
mov
inc
retf
dec
pop
jmp
js
push
sbb
push
and
pop
mov
cdq
nop
xchg
dec
mov
and
shl
into
push
jae
ja
es
rcl
sbb
scas
lea
data16
cmps
mov
sbb
or
inc
aam
or
ss
fiadd
inc
xchg
adc
push
ficom
out
dec
popa
lds
pop
mov
push
xchg
aam
rcl
stos
arpl
data16
(bad)
mov
jmp
or
cwde
ror
imul
cmovs
mov
lea
or
jae
retf
mov
add
sbb
mov
cmp
lock
lds
rcr
aad
test
mov
fisttp
add
adc
sub
adc
xchg
pop
pop
push
sbb
adc
xor
or
movs
test
jg
iret
mov
fcomp
sub
xchg
xchg
mov
jbe
scas
stc
add
cli
jmp
adc
mov
sbb
inc
add
outs
push
mov
das
(bad)
icebp
push
out
movs
xor
xor
mov
sbb
jmp
dec
call
(bad)
fmul
add
fwait
sbb
and
ror
xchg
dec
xor
movs
xor
int3
fwait
shl
mov
(bad)
in
dec
sub
std
xor
or
or
call
xor
test
push
ins
pushf
movs
pop
xlat
sbb
bound
and
or
cwde
test
push
cwde
movs
add
pop
es
pop
push
mov
cli
pop
pop
xchg
rcl
mov
les
(bad)
dec
inc
clc
add
cmp
xor
cmc
std
xor
hlt
cdq
push
adc
out
jo
mov
mov
inc
(bad)
xor
dec
sub
or
cli
xchg
arpl
mov
and
pop
jge
les
mov
das
cmp
add
push
xor
fdiv
arpl
mov
lods
mov
shr
push
cld
lar
cmp
popf
sub
cmp
fisubr
call
es
sub
fisubr
mov
mov
xchg
in
sub
cmp
add
add
and
(bad)
xchg
shl
leavew
lea
pop
dec
or
adc
push
cmp
call
rcl
pop
in
daa
aam
rol
in
mov
clc
jbe
jl
cmps
ins
xchg
js
and
clc
xchg
arpl
outs
(bad)
in
and
pop
bound
mov
fstp
inc
dec
cmp
call
mov
or
add
add
or
nop
mov
mul
cwde
daa
inc
inc
data16
popa
push
mov
mov
mov
shr
mov
fld
xchg
adc
and
sub
push
cld
inc
ins
push
cmps
inc
lea
cmp
push
addr16
scas
call
sub
adc
sbb
pop
jne
xor
cmc
push
and
(bad)
lods
jae
outs
push
outs
fstp
cmp
mov
dec
arpl
inc
xor
pop
dec
sbb
lods
retf
mov
aas
mov
pop
scas
or
ss
(bad)
fcom
shl
mov
jae
inc
fwait
pop
test
arpl
mov
xor
or
sbb
jns
xor
stc
mov
dec
and
call
mov
xchg
cwde
add
push
in
and
dec
cmp
in
jecxz
in
icebp
sub
xor
xor
out
push
cmp
push
in
jecxz
inc
std
aad
popa
sub
cmp
in
lods
repz
mov
std
sub
fnstenv
test
addr16
jmp
les
sbb
inc
fild
gs
cld
dec
cmp
aaa
repz
outs
pop
dec
in
mov
mov
lea
int
in
and
cmp
push
cwde
mov
lods
cli
fsub
mov
cwde
or
pushf
mov
std
dec
mov
scas
xchg
push
in
jns
test
push
and
cld
jne
es
out
and
mov
sub
icebp
aad
rcr
push
icebp
fsub
inc
push
cmp
xor
mov
jb
xchg
add
int3
sub
es
jne
outs
jmp
ds
out
mov
adc
push
(bad)
sub
push
mov
dec
adc
mov
push
out
dec
mov
inc
out
loop
inc
loop
jne
adc
(bad)
cli
and
ins
leave
jae
adc
cwde
pop
scas
pusha
adc
rol
dec
pop
dec
fistp
das
lods
xchg
(bad)
int
cmc
cwde
ret
ror
and
dec
inc
clc
ja
(bad)
cli
and
loopne
add
dec
xchg
ja
clc
lea
pusha
pop
test
call
dec
(bad)
push
sub
enter
pop
sbb
sar
icebp
aad
icebp
jmp
fld
loope
adc
mov
scas
lods
lock
in
adc
es
into
pop
popf
stc
sbb
mov
out
test
push
and
int
or
and
dec
scas
out
cs
adc
hlt
cmps
cli
aas
addr16
cmps
addr16
mov
ja
nop
mov
adc
nop
enter
and
(bad)
shl
push
mov
add
add
or
arpl
call
mov
jne
rol
pushf
hlt
jp
dec
les
movs
push
je
dec
push
jg
outs
clc
mov
jmp
sub
xchg
ja
loopne
sbb
fs
xchg
adc
xchg
sbb
jns
scas
daa
inc
pop
js
cmps
pop
or
fcmovb
mov
xor
pop
in
fadd
sub
dec
repnz
enter
dec
jo
mov
or
nop
pop
xchg
xchg
xchg
push
scas
xchg
lahf
push
cmps
popf
addr16
mov
pop
ja
iret
mov
mov
test
xor
sbb
sti
lahf
xor
repz
aam
mov
jns
mov
mov
in
sti
mov
dec
(bad)
sti
push
cmp
fwait
pop
or
inc
daa
add
nop
das
add
seto
(bad)
retf
lock
popf
pop
add
pushf
sbb
cmp
mov
sbb
test
(bad)
sub
lods
and
out
xor
push
mov
das
shl
jl
scas
stc
je
mov
outs
push
mov
and
mov
dec
and
mov
cmp
icebp
out
cmp
iret
cmp
icebp
cmp
and
jecxz
cmps
mov
jbe
pusha
scas
in
loopne
gs
mov
cmps
sbb
jo
das
xchg
xor
and
mov
and
sbb
test
in
mov
daa
mov
fiadd
je
mov
mov
mov
cwde
pushf
pop
(bad)
cwde
xchg
ins
xchg
mov
stos
mov
mov
(bad)
js
mov
jnp
enter
shl
movs
popf
push
mov
push
dec
shl
inc
inc
ret
cld
pop
das
enter
or
cmp
mov
pop
or
stos
push
cwde
adc
sbb
bound
cvtps2pi
add
scas
add
mov
jbe
pop
add
cmps
jb
push
dec
sbb
loopne
push
fisttp
aaa
xchg
sub
and
sub
sbb
mov
jg
les
dec
or
cwde
push
add
into
xor
mov
aam
fs
jnp
aad
leave
out
dec
ss
cld
inc
cld
push
cmp
push
shl
sbb
ins
das
add
adc
sbb
or
mov
outs
(bad)
repnz
pop
inc
jl
fiadd
cmp
jle
adc
je
pushf
std
fmul
sbb
mov
movs
add
mov
aad
ficom
sbb
stos
(bad)
pusha
cs
jae
xchg
sbb
cli
dec
jge
fld
add
mov
mov
imul
arpl
adc
outs
retf
scas
jnp
cdq
test
adc
ror
bound
popf
mov
repz
(bad)
ror
mov
cwde
jo
dec
mov
fs
mov
(bad)
jns
adc
mov
jb
fist
jge
retf
xor
out
enter
jae
jmp
xor
(bad)
jae
add
add
dec
sbb
cdq
(bad)
aam
xchg
sbb
lea
cld
fsubp
test
mov
dec
(bad)
jl
xchg
cld
and
and
jne
scas
arpl
test
xor
xchg
ins
sbb
aaa
mov
xchg
je
cli
xor
mov
cmps
jnp
lds
mov
in
ret
das
xlat
or
scas
cli
sub
shl
dec
daa
jmp
fwait
inc
mov
into
sahf
sub
fidivr
jmp
cmp
sbb
ret
repz
jmp
je
xchg
push
mov
xchg
nop
mov
add
adc
sbb
jmp
hlt
lea
dec
sbb
aas
adc
xchg
and
and
cmp
pop
aad
loope
push
adc
mov
mov
mov
xchg
test
mov
sbb
jno
mov
and
lods
jne
int
ja
repz
xchg
fsub
cld
xor
aam
jb
fdivr
dec
mov
jmp
sub
cli
sahf
fucom
mov
pop
sbb
mov
cmp
inc
in
fmul
xor
stc
jl
or
sbb
pop
ds
mov
mov
les
push
sbb
mov
jge
xchg
scas
(bad)
add
retf
cmp
mov
mov
sbb
in
and
cwde
mov
je
dec
pop
add
fldpi
pop
(bad)
sbb
sub
addr16
mov
jbe
dec
retf
xchg
lock
pop
adc
into
test
push
arpl
retf
lds
or
movs
mov
sub
(bad)
pop
jb
and
inc
pop
jcxz
jle
retf
ds
stc
je
rcl
or
pop
jecxz
jb
mov
aad
mov
jno
test
cmp
jne
test
jmp
push
dec
outs
lods
push
pushf
sbb
adc
enter
jp
cmc
lahf
mov
adc
xchg
(bad)
pop
and
cmp
jae
sbb
lods
xchg
xor
std
in
sar
xlat
push
aaa
pop
iret
je
mov
retf
mov
test
push
cmps
outs
inc
js
dec
xor
push
cli
jno
mov
sub
out
imul
push
loop
xchg
push
stos
test
mov
hlt
cmps
mov
xchg
movs
mov
mov
(bad)
push
ret
rol
inc
jae
xor
pop
sbb
jae
ret
and
mov
mov
ins
push
jne
(bad)
cmp
cmp
icebp
lahf
mov
xor
test
mov
xchg
adc
outs
in
dec
adc
not
xor
xor
mov
inc
repz
mov
mov
aaa
mov
or
cli
movs
cmp
rol
rcl
or
and
jae
fsub
push
arpl
mov
(bad)
and
sti
stos
xchg
mov
and
aad
fst
pop
push
cmp
mov
jno
sbb
fidiv
into
stos
aam
mov
xor
push
loopne
pop
aam
xrelease
clc
(bad)
movs
fnstenv
cmps
hlt
mov
jne
adc
jnp
pop
gs
shr
mov
fdiv
fs
call
cdq
xor
adc
jle
sub
pop
push
out
jae
mov
add
inc
mov
mov
sbb
xchg
and
sub
lock
arpl
xor
add
xor
retf
pop
push
mov
cmps
cmp
sub
and
cmp
cs
pop
in
mov
or
sbb
in
mov
xchg
mov
ret
jno
std
xchg
out
jmp
jnp
push
jne
xor
and
rcr
jne
fnsave
jno
push
mov
pop
fcmove
push
mov
mov
scas
inc
loopne
dec
out
and
cld
mov
ss
inc
mov
bound
xchg
int
adc
ja
push
movs
adc
not
fdivr
mov
fucomi
mov
popa
(bad)
retf
fwait
xchg
push
retf
add
aam
arpl
(bad)
sbb
adc
lahf
cli
push
push
or
sub
in
dec
and
sub
sbb
xor
sbb
and
(bad)
pop
push
stos
mov
jecxz
idiv
jae
mov
aad
cmp
xlat
arpl
mov
jae
xor
es
mov
repz
push
sub
aaa
gs
mov
dec
sbb
scas
div
lds
sbb
nop
adc
retf
adc
mov
les
cli
xor
mov
add
dec
je
mov
test
clc
push
push
bound
inc
xlat
jcxz
xor
cld
push
in
jae
test
test
dec
test
in
xor
enter
stc
rcr
mov
jne
sub
into
pop
jbe
cmp
mov
jae
icebp
je
xchg
jae
add
add
jo
bound
jne
jg
inc
mov
ret
pop
jmp
test
mov
and
adc
adc
in
and
inc
jae
ja
div
ja
cmp
mov
dec
adc
mov
aas
aas
fld
inc
sub
add
jae
pusha
stos
mov
adc
sbb
pop
mov
add
push
and
pop
pop
sub
mov
icebp
push
loop
or
sub
xchg
mov
pop
pop
out
push
cmc
retf
xor
xchg
jbe
dec
jg
xchg
add
stos
lods
push
mov
sub
mov
stos
imul
xor
call
pop
cmc
adc
adc
fbld
add
data16
popf
(bad)
or
xchg
push
data16
cmp
sbb
ins
or
clc
push
and
mov
cmp
lods
push
jnp
dec
dec
mov
and
jae
push
std
sti
mov
movs
and
es
out
mov
cmp
add
aam
fwait
test
cld
pop
xchg
mov
movs
ja
dec
imul
jbe
out
push
dec
pop
jae
sbb
fidiv
inc
xchg
inc
jns
ret
pop
xchg
push
(bad)
arpl
mov
stc
jae
call
mov
pop
jmp
fstp
xchg
push
dec
in
sub
iret
adc
popf
jle
adc
je
clc
pushf
xor
sub
das
fidiv
(bad)
fldcw
sbb
xchg
add
into
ds
fs
repz
in
(bad)
fcom
inc
xchg
fisttp
or
repz
in
xor
xchg
jmp
cmp
add
xor
mov
pop
and
jp
test
(bad)
cld
fiadd
adc
xchg
stc
add
adc
pusha
mov
mov
neg
dec
test
popa
jnp
lods
xor
and
push
jb
loope
xchg
jmp
sub
inc
sbb
lds
add
pop
xor
data16
and
inc
push
std
and
dec
and
rol
mov
jb
lahf
cmps
test
int3
cdq
add
mov
or
test
or
retf
ret
jae
add
xor
push
sbb
enter
xchg
jns
adc
movs
jecxz
nop
(bad)
shl
out
pop
test
sbb
mov
mov
ins
mov
stos
bound
inc
cmp
fs
mov
dec
sar
push
fist
dec
lahf
sub
xor
fadd
or
lods
add
jae
stos
inc
pop
sub
adc
sub
cmp
loope
or
xchg
push
jge
rol
push
(bad)
ja
loope
std
sub
push
cdq
daa
sbb
mov
push
or
nop
out
sbb
js
out
pop
loop
dec
or
xlat
add
(bad)
mov
mov
mov
pop
retf
fwait
add
pushf
mov
sbb
shl
scas
stos
adc
pop
test
bound
adc
jmp
pop
retf
push
jo
addr16
inc
(bad)
hlt
dec
xor
push
jne
jbe
push
push
mov
cwde
adc
retf
sar
jge
xchg
inc
sbb
dec
or
cmc
inc
das
push
jecxz
bound
inc
inc
mov
jmp
jne
xchg
(bad)
je
mov
repnz
sub
sbb
and
hlt
sbb
pop
data16
pop
mov
in
inc
add
data16
xor
push
jmp
pop
pop
push
mov
pop
mov
push
mov
fdivr
dec
cmp
push
jae
push
int3
sbb
pop
lahf
push
call
add
sub
push
sub
inc
mov
mov
xchg
lea
leave
adc
adc
dec
or
pop
int3
xchg
test
push
ret
xchg
hlt
add
mov
leave
(bad)
and
clc
mov
jae
jp
out
jmp
pop
scas
sbb
sub
jnp
mov
in
lds
retf
call
adc
pop
cmp
(bad)
sub
xor
cmp
mov
sub
cli
test
scas
inc
jge
jno
dec
sbb
hlt
je
jne
xor
jo
aaa
and
retf
xchg
sbb
pop
sub
pop
mov
xor
and
sbb
mov
shl
aam
jns
or
js
jg
pop
ret
cld
inc
mov
cmps
xchg
mov
fwait
mov
lds
mov
repz
sub
fstp
fdivr
xchg
(bad)
mov
popf
and
and
sbb
mov
jbe
div
outs
xor
mov
pop
inc
xchg
push
(bad)
mov
in
jae
mov
sbb
mov
sbb
push
aas
or
push
mov
cld
aam
ror
push
arpl
or
mov
pop
ins
pop
cmp
push
retf
call
jl
nop
and
sbb
jl
fnstenv
retf
cdq
int3
xchg
fistp
retf
lds
repnz
outs
xor
add
fcom
aad
dec
pop
push
jnp
outs
mov
push
lods
retf
jo
retf
dec
scas
mov
(bad)
pusha
iret
daa
jae
in
mov
jb
fmulp
gs
xor
inc
pop
dec
out
mov
xor
mov
mov
mov
stos
or
fwait
sbb
fs
sbb
add
lods
test
push
rol
iret
xor
cmps
lds
sub
sub
xchg
jns
or
clc
sbb
shl
push
xor
int
inc
xlat
(bad)
rcr
xchg
adc
or
sbb
aam
xchg
fimul
inc
cld
in
add
jns
ret
xor
xor
out
jae
inc
sub
pop
xor
sbb
mov
dec
js
xchg
inc
mov
bnd
imul
and
xor
push
test
inc
outs
in
int
and
ss
ins
mov
repz
mov
aaa
daa
not
leave
in
jb
xchg
dec
xchg
test
push
add
int3
aaa
push
outs
sub
mov
lock
inc
(bad)
xchg
popa
dec
out
(bad)
sti
xchg
mov
xor
adc
lea
jae
mov
test
inc
nop
adc
cwde
sar
retf
imul
xlat
shl
(bad)
mov
lods
push
sub
jp
rcr
shr
sbb
retf
mov
jo
adc
fst
jmp
dec
cmp
cwde
jns
pop
mov
retf
aas
dec
es
inc
adc
jl
sbb
and
sbb
xor
ret
add
je
inc
sbb
lds
(bad)
pushf
loope
mov
jl
enter
mov
inc
inc
sbb
stos
cmp
mov
pop
lahf
add
mov
mov
mov
inc
cdq
mov
jmp
jecxz
mov
xchg
jb
fs
sahf
or
cmps
mov
mov
lods
sub
mov
data16
add
sub
sbb
cmp
or
cmp
sub
in
mov
sub
or
inc
sbb
pop
or
fdiv
aam
cmc
xchg
cld
push
retf
cmps
ret
xchg
sbb
repz
stos
and
mul
mov
je
bound
lds
stos
add
nop
mov
sar
test
and
pop
stos
imul
bound
add
in
das
pop
dec
adc
cmps
mov
rcl
clc
push
mov
stos
jae
retf
into
sti
jmp
push
dec
scas
xor
jb
movs
xchg
cld
mov
setg
ss
push
inc
test
xchg
movs
or
adc
push
push
cmp
fisttp
lds
jg
loopne
xchg
enter
jne
pop
sbb
mov
jbe
movs
in
outs
inc
xor
es
mov
nop
cmp
mov
push
ja
jnp
mov
test
adc
rcl
mov
pop
shr
in
movs
adc
pop
pop
bound
lahf
jae
xchg
cmps
ins
jae
neg
sub
and
dec
loop
scas
call
outs
mov
aas
mov
push
stos
ret
xchg
fs
jae
xor
xchg
fmul
dec
pop
out
out
stos
jg
mov
or
push
dec
pop
dec
mov
outs
test
cmc
aas
adc
push
ror
mov
mov
sbb
enter
mov
dec
(bad)
or
(bad)
aam
jne
xor
or
in
shr
nop
or
jae
ins
cmps
(bad)
mov
gs
sbb
jbe
push
scas
adc
push
sbb
xchg
cwde
fwait
dec
mov
jae
jg
fldcw
out
inc
addr16
sahf
mov
xchg
and
jnp
push
adc
in
jbe
loope
jns
sbb
lods
xchg
mov
(bad)
dec
mov
lock
sub
cmp
retf
(bad)
not
cmp
sbb
dec
hlt
mov
push
xchg
(bad)
mov
fiadd
lahf
sahf
cmps
jae
imul
popf
sbb
push
mov
repnz
loop
mov
sub
imul
lahf
call
jae
icebp
cmc
ret
mov
push
ret
cld
push
fimul
mov
adc
xchg
cmp
push
push
or
fwait
and
add
push
mov
call
repz
mov
xor
dec
xor
xor
icebp
mov
push
out
dec
ins
iret
stos
test
or
inc
fs
(bad)
pop
cdq
leave
mov
in
jmp
push
jnp
cdq
pop
dec
sbb
mov
out
mov
retf
dec
jmp
sub
pop
pop
retf
call
mov
and
cmps
jl
(bad)
jmp
sub
or
dec
je
push
xchg
int3
sbb
and
sar
cli
rcl
stos
push
xchg
jmp
shl
arpl
retf
out
sbb
xor
test
loopne
scas
out
mov
add
jae
fs
stos
mov
call
arpl
ret
mov
in
bound
mov
xor
sub
dec
jae
aas
scas
and
or
pop
xor
xchg
sub
rcl
imul
push
jae
int
xor
add
fidiv
outs
inc
fld
test
cmp
pop
or
push
adc
inc
(bad)
mov
loop
push
mov
xchg
sbb
jo
cld
call
xchg
mov
outs
loopne
std
stc
xor
jnp
xchg
dec
jae
nop
mov
retf
push
je
or
(bad)
scas
jae
test
fild
pusha
and
retf
adc
lods
scas
hlt
jae
add
fistp
rcr
sahf
sbb
mov
jge
iret
fdiv
mov
rol
ftst
xchg
out
ds
sub
fcomp
push
adc
mov
mov
cmp
clc
sbb
mov
jns
dec
or
repz
in
popa
push
xchg
in
push
xchg
inc
arpl
sbb
add
ins
pop
jg
xchg
pop
pop
and
adc
mov
mov
mov
pop
pop
add
push
pop
sbb
xchg
scas
cmp
or
adc
daa
shl
cmps
(bad)
imul
or
ror
mov
test
sbb
inc
cmps
add
sub
pop
xchg
test
sub
xor
xlat
iret
(bad)
sbb
dec
fmulp
mov
cmp
(bad)
ret
ror
add
mov
adc
stos
jae
jae
movs
ss
stos
inc
mov
cwde
mov
mov
xchg
mov
mov
xor
cmp
stc
in
pop
adc
mov
cli
cmps
mov
call
adc
imul
adc
sbb
dec
test
out
imul
sbb
addr16
lds
cdq
xor
push
sub
xor
and
mov
and
sub
mov
test
sbb
arpl
mov
jae
jl
cmp
xchg
fwait
add
xor
cmp
add
sbb
mov
ins
mov
dec
cmc
mov
or
and
jne
dec
xchg
sbb
and
repz
das
jae
jo
jmp
sbb
or
and
sub
pop
or
scas
cdq
xchg
xchg
inc
mov
cwde
inc
pop
push
outs
sbb
outs
ds
enter
mov
(bad)
iret
sub
pusha
add
leave
stos
hlt
mov
mov
add
jge
jae
or
int
push
inc
pop
cmp
fnstenv
enter
pop
ja
jb
cmps
ret
sbb
hlt
ret
int3
jae
inc
ins
pop
fwait
pop
cmp
mov
movs
push
mov
mov
rol
popw
sahf
je
push
sub
ss
xchg
sbb
pop
loop
fist
push
fbstp
xor
cwde
into
rcr
sbb
test
mov
add
xor
gs
(bad)
jp
out
fld
xchg
jle
(bad)
outs
(bad)
push
in
cwde
cmps
jb
xchg
and
sbb
add
stos
movs
inc
cmps
jae
mov
sbb
jle
adc
addr16
jne
outs
jmp
cwde
inc
test
pop
outs
sar
sub
pop
in
dec
adc
xor
clc
xchg
xchg
cmp
ret
icebp
dec
inc
sub
mov
mov
add
mov
stos
inc
rcl
or
jmp
fistp
cdq
jbe
jae
frstor
ja
out
xchg
push
xor
fist
pop
mov
outs
mov
into
xor
jecxz
pop
ret
push
fimul
fsubr
mov
xchg
xchg
fisttp
add
outs
push
xor
xchg
fstp
mov
jae
xor
xor
jecxz
sbb
and
outs
mov
aas
adc
jp
push
pop
fcom
or
jae
jb
push
jns
and
and
xchg
jae
jb
mov
add
call
sbb
cmp
mov
mov
ss
mov
push
and
cmp
inc
sub
lahf
push
sub
outs
jno
mov
mov
aam
call
mov
xchg
ret
int
hlt
mov
pop
jmp
push
or
xchg
imul
je
sub
into
xchg
pop
adc
aad
jae
or
mov
inc
nop
pop
fwait
in
fisubr
call
pop
int3
mov
loopne
xor
jae
jge
xlat
lods
outs
js
imul
push
mov
call
lock
and
sbb
sbb
imul
pop
cmps
aad
cmp
test
jmp
sbb
dec
sbb
jge
jnp
repz
leave
jae
push
mov
jb
inc
and
dec
js
xor
dec
sbb
jbe
sbb
in
clc
jle
mov
sub
inc
sbb
fisubr
das
std
or
cmp
mov
xor
out
pushf
rol
adc
sbb
cmp
xor
and
xor
int3
sbb
popa
sub
imul
xchg
outs
nop
outs
aad
inc
inc
(bad)
sub
push
cdq
and
icebp
ror
dec
pop
and
nop
in
test
xchg
fwait
sbb
mov
adc
sysexit
fldenv
adc
inc
cmp
addr16
jbe
iret
int3
arpl
cmp
jns
pop
lahf
fisub
mov
dec
sbb
stos
je
(bad)
test
inc
sbb
call
jns
aaa
sbb
mov
int3
into
pop
mov
neg
aam
mov
jne
rol
test
test
cmp
popa
push
jo
(bad)
retf
call
dec
cmp
push
out
inc
nop
cmp
push
mov
outs
cmp
pop
shl
xchg
sbb
inc
xchg
inc
mov
xchg
push
xor
mov
repnz
js
popf
cmps
xchg
arpl
pop
mov
test
icebp
or
jae
pop
sbb
adc
or
lock
xlat
scas
and
sbb
cwde
out
cs
xor
jb
fcom
rcl
inc
cmps
jae
cwde
movs
dec
push
out
dec
push
hlt
jg
pushf
inc
mov
and
inc
mov
push
inc
aam
add
iret
in
sbb
int3
mov
jge
lea
jbe
test
push
stos
dec
sub
inc
inc
jb
repz
dec
sahf
pop
mov
call
mov
and
sub
cmp
jp
push
js
ds
or
aaa
pop
pop
push
int
data16
inc
push
mov
enter
push
test
xlat
mov
xor
outs
popa
mov
xor
inc
sbb
jae
sub
and
cmps
ror
jae
int
inc
xchg
push
hlt
retf
(bad)
jo
jecxz
call
pop
inc
cwde
inc
sbb
pop
cmp
jns
inc
sbb
and
dec
out
xor
je
sub
jae
push
xchg
js
xlat
or
(bad)
retf
or
sahf
xchg
xchg
aas
mov
fwait
pop
jg
(bad)
in
or
jb
cdq
xchg
icebp
aaa
mov
mov
mov
and
cmp
dec
in
mov
add
ret
dec
push
ins
int3
inc
mov
xchg
lock
lods
in
aam
test
mov
lahf
pop
add
sub
fistp
jns
out
xchg
fistp
sbb
pop
pushf
adc
push
sbb
dec
inc
push
cmc
inc
xchg
test
mov
jae
mov
rol
xor
clc
push
fs
ja
and
adc
jns
inc
jg
lods
lahf
push
sbb
fwait
movs
jns
lods
sub
push
push
ret
dec
mov
lea
sbb
out
dec
xchg
sbb
jae
and
(bad)
inc
loopne
adc
jns
mov
adc
es
lahf
ins
or
inc
pop
stos
xchg
xor
sbb
adc
movs
nop
xchg
mov
rcl
adc
push
and
sti
fs
sbb
push
div
adc
sahf
sbb
jo
push
mov
xor
pushw
push
bound
inc
dec
mov
stos
push
es
popf
into
mov
dec
jnp
dec
adc
or
jb
movs
in
adc
mov
jo
scas
xor
jne
fdiv
cmp
(bad)
scas
xchg
and
fistp
or
inc
mov
pop
jb
aas
rol
jno
movlps
ja
and
int3
daa
xor
cmc
fiadd
or
or
pop
fadd
and
aaa
adc
loope
mov
dec
dec
call
xlat
push
rcl
popf
xchg
push
mov
jae
jle
leave
div
add
xchg
sub
inc
jnp
cmp
jae
dec
mov
inc
cmovne
cdq
shl
gs
dec
mov
shl
inc
cmp
fwait
popa
add
nop
test
les
es
clc
sbb
dec
int
or
add
inc
js
jg
call
scas
push
inc
scas
mov
jb
mov
push
dec
inc
sub
xor
pop
dec
jp
and
dec
scas
mov
jbe
and
(bad)
sbb
outs
fsubr
inc
adc
or
jb
sbb
lock
mov
arpl
ins
xchg
cld
daa
inc
cmp
nop
repz
out
sbb
test
mov
sub
adc
jne
imul
inc
repz
dec
push
jo
mov
push
jge
sar
adc
pusha
jecxz
fisubr
dec
cs
jb
sar
jecxz
xor
pusha
clc
sub
add
fwait
sbb
ja
cs
or
int
sub
jecxz
fbstp
rcl
mov
mov
xor
cmps
sbb
mov
cld
daa
jle
fadd
hlt
aad
enter
(bad)
mov
xchg
mov
bound
xor
loop
gs
mov
loop
das
ja
inc
std
pop
or
in
out
out
test
sub
hlt
in
outs
push
or
sbb
mov
mov
add
sbb
leave
std
cmps
xchg
add
inc
mov
dec
lds
lds
sbb
jmp
movs
mov
sub
jae
fmul
je
xor
inc
mov
or
jae
add
lods
mov
xor
mov
addr16
int
into
sbb
scas
add
pop
movs
cmp
push
lea
sbb
cmp
jl
sbb
adc
and
test
sti
lods
jo
iret
mov
jecxz
add
lock
(bad)
out
dec
mov
ja
cmp
shr
imul
(bad)
mov
cmp
cmp
dec
add
(bad)
dec
movs
test
or
fistp
movs
mov
add
mov
stos
or
mov
shl
adc
lods
sbb
fimul
pop
test
aad
or
adc
inc
push
push
sbb
mov
(bad)
sar
aas
cdq
mov
mov
xchg
sbb
push
cld
adc
daa
mov
jmp
push
mov
retf
cmp
scas
icebp
or
fisub
mov
mov
sbb
sbb
add
movs
pop
add
and
dec
dec
mov
cld
xlat
lods
adc
sti
jae
jns
xor
mov
mov
cmp
retf
mov
pop
ror
or
and
ins
pop
dec
clc
popf
and
pop
cld
inc
stos
popa
ja
(bad)
sbb
stos
nop
xchg
mov
push
add
xchg
add
xchg
neg
and
mov
inc
out
scas
xor
iret
push
dec
jl
xchg
cmps
sub
xchg
ret
ret
jae
pusha
nop
aas
push
cs
adc
push
mov
push
sbb
cmp
jae
ins
and
pop
clc
in
in
sbb
imul
div
je
rol
jg
icebp
mov
movs
and
jae
aas
repz
shr
sbb
stos
(bad)
fstp
xor
inc
stos
mov
pop
cmp
pop
imul
sub
call
popf
fisubr
mov
call
jbe
lock
pop
add
or
pop
xchg
aad
mov
mov
pusha
sub
out
adc
xchg
xchg
jmp
mov
cmp
das
dec
mov
call
mov
rol
leave
xchg
pop
jns
dec
xchg
loop
jae
(bad)
aam
dec
and
ficom
sar
aad
mov
inc
cmp
jnp
cmp
xor
jo
add
mov
cdq
sub
mov
int3
aam
and
and
sub
mov
in
test
sbb
or
inc
push
retf
pop
and
ficomp
mov
add
jg
out
inc
mov
mov
sub
push
dec
mov
stos
cmc
adc
or
mov
cmp
inc
sub
out
loop
stc
scas
xchg
mov
jmp
fs
push
out
ret
xor
sbb
(bad)
icebp
sub
adc
adc
nop
out
fscale
sbb
rol
mov
in
leave
ins
mov
jge
xor
cmp
xchg
out
ds
jae
in
jp
adc
iret
pop
cli
inc
push
mov
mov
adc
rcl
lahf
hlt
xor
fisttp
sub
push
not
icebp
mov
dec
stos
or
adc
scas
add
xchg
out
xchg
aam
popa
int
mov
mov
inc
ins
sub
xchg
fist
push
mov
daa
inc
xor
call
add
scas
mov
add
jmp
lea
sbb
xchg
pop
cmc
dec
in
mov
push
push
mov
push
fldenv
dec
sbb
xchg
fcom
adc
add
dec
dec
jae
rcl
popf
cmp
xchg
repz
push
pop
pop
adc
push
pushf
repz
mov
jae
xchg
sar
xchg
cli
enter
sub
adc
test
or
pop
shr
loope
or
pop
or
rcr
clc
sahf
ret
dec
gs
dec
pop
dec
test
jae
sbb
xchg
into
fiadd
fnsave
cmp
call
ja
push
xchg
add
cmp
pop
sbb
scas
loope
shl
clc
cmp
mov
dec
test
bnd
xchg
or
jae
xlat
sub
cmp
gs
xor
jne
ja
xchg
inc
sbb
(bad)
or
loopne
mov
popf
jae
or
jne
scas
inc
int
(bad)
cs
arpl
ja
out
fnstenv
pop
push
mov
(bad)
retf
fnstsw
xchg
sbb
jbe
mov
adc
xchg
mov
clc
sub
mov
stc
mul
mov
cmp
xchg
mov
pop
push
mov
sbb
loope
hlt
sbb
cmps
jge
les
pushf
dec
adc
movs
push
jmp
xor
ins
push
ins
add
xor
or
dec
mov
mov
mov
sbb
fs
imul
(bad)
adc
inc
test
sbb
fbstp
out
lds
and
xchg
sub
dec
daa
cli
sbb
out
sub
mov
add
jmp
out
aaa
dec
dec
pushf
sbb
or
imul
adc
xchg
in
sub
stos
es
adc
sbb
xor
out
int3
xor
loope
add
xor
test
loope
test
sbb
jae
(bad)
pop
adc
push
push
xor
dec
sbb
mov
push
mov
push
inc
mov
inc
inc
jno
dec
mov
xchg
stos
push
(bad)
sbb
fiadd
xchg
jmp
popf
jns
mov
jb
test
std
dec
xchg
cmp
dec
repz
jae
sub
aas
dec
jae
xchg
adc
jge
outs
in
push
int3
fidiv
ret
and
jl
mov
cmps
xchg
dec
jl
scas
pop
ja
call
loopne
(bad)
mov
dec
mov
and
icebp
sbb
out
cmp
mov
dec
(bad)
nop
aad
enter
sub
faddp
arpl
sub
push
jg
int3
xchg
daa
pop
xor
or
test
sbb
fst
fild
jno
cmps
cmp
push
test
push
int
in
push
js
mov
mov
jecxz
adc
je
imul
inc
inc
cmp
add
into
stos
pop
in
sub
cmp
aam
fcomp
outs
sbb
mov
out
jns
xchg
adc
lods
mov
cmp
xor
push
adc
mov
jae
ja
xor
xor
shl
add
fnstsw
adc
add
mov
repz
xchg
stc
call
pushf
jno
or
xchg
xchg
sub
fsub
dec
jnp
push
jle
mov
jns
fst
shr
push
les
jge
pop
pcmpeqd
xor
sub
jge
movs
fnsave
(bad)
test
add
dec
push
fiadd
xchg
cwde
adc
mov
jb
and
imul
mov
pop
mov
test
loope
mov
sbb
cmps
icebp
xchg
mov
mov
aaa
dec
xchg
pop
cmp
and
mov
mov
mov
fnstcw
cmps
in
test
push
pop
adc
xor
sbb
das
sbb
mov
push
outs
add
mov
in
fidiv
shl
cmps
jp
pop
fst
mul
mov
mov
push
jb
sbb
cmp
scas
push
arpl
inc
ror
sub
in
nop
out
aaa
pop
jae
je
es
stos
jae
jle
out
sbb
pop
cmp
xor
imul
stos
and
in
mov
adc
dec
inc
inc
mov
std
loopne
pop
les
outs
mov
hlt
sti
test
stos
out
jg
jecxz
mov
mov
mov
mov
xchg
mov
sbb
fsqrt
out
aaa
dec
mov
jmp
jne
mov
outs
xchg
jecxz
dec
mov
mov
xlat
cmps
push
out
sar
ret
sti
push
jae
sbb
lock
popf
xchg
mov
aad
sub
outs
sbb
sub
mov
add
jo
bound
xchg
adc
lods
push
pop
jns
repz
fadd
out
xor
push
pop
scas
es
sbb
mov
cmp
mov
leave
xor
scas
les
and
mov
mov
sar
lods
(bad)
pop
push
xor
xor
outs
fs
or
sbb
push
ror
mov
leave
stos
sbb
inc
xor
aad
xchg
sub
ficomp
xor
or
call
push
sbb
xchg
movs
scas
push
sub
dec
mov
or
mov
clc
retf
push
mov
xchg
enter
out
xor
jo
sbb
jbe
(bad)
mov
call
test
jge
mov
out
je
sbb
add
out
jne
in
pusha
popf
push
jnp
push
retf
nop
jns
les
pop
scas
jg
repnz
and
shl
jmp
rcl
int
jl
mov
call
jbe
jle
test
or
mov
ds
inc
mov
mov
jns
call
mov
retf
das
xor
cmps
pop
push
(bad)
nop
or
jae
jmp
jns
jae
sbb
lods
lea
dec
adc
mov
lods
sub
sub
mov
jae
sub
mov
iret
ficomp
or
dec
cmc
in
out
ins
ins
rcr
jno
jle
mov
mov
or
ficomp
push
fcomp
mov
inc
sbb
ret
sub
je
fidivr
fdiv
adc
add
rcr
cmp
lock
mov
mov
xor
mov
fiadd
test
leave
adc
mov
pop
or
cmps
cmp
dec
lds
sub
jb
rcl
xchg
lods
sti
jge
xchg
mov
dec
in
dec
and
loope
and
mov
lods
sub
int
call
addr16
shl
xchg
jae
loope
out
mov
jbe
and
jns
stos
pop
test
sub
inc
mov
inc
sub
gs
pop
outs
dec
gs
push
int
jl
jmp
mov
rcr
mov
sub
xchg
xchg
dec
popf
shr
dec
pop
inc
mov
scas
pop
lds
dec
or
stos
pop
js
bound
mov
mov
arpl
lods
daa
sub
std
jae
jbe
mov
fs
stc
ss
scas
out
jb
mov
fld
hlt
pushf
pop
mov
fsub
pop
in
icebp
sub
xchg
jge
arpl
adc
int3
jae
xor
cld
adc
push
test
mov
pop
or
ja
stos
push
and
jge
dec
and
xor
add
xchg
mov
jno
xchg
sti
mov
dec
hlt
lock
pop
sbb
inc
xchg
sar
push
test
ror
inc
hlt
sub
xor
loopne
cwde
adc
dec
cmp
out
lahf
and
mov
out
pop
inc
out
jg
push
ret
int3
fmul
sbb
out
push
mov
aaa
lds
mov
das
inc
fcmovnu
mov
mov
out
dec
xor
lods
or
aam
jns
fidivr
mov
ja
ja
sbb
mov
ror
push
or
xchg
mov
scas
call
xor
outs
inc
rol
jp
cmp
sbb
pop
shr
xchg
fwait
stc
xchg
mov
dec
mov
sbb
adc
mov
push
adc
xchg
(bad)
cmc
add
adc
clc
inc
fs
xchg
pushf
sbb
pusha
stos
cmp
xor
mov
imul
xchg
inc
nop
call
int3
or
cmp
or
mov
sbb
pop
repz
das
mov
(bad)
mov
aaa
pop
jnp
lods
mov
enter
ins
xor
mov
aam
mov
inc
pop
add
fcom
inc
mov
jae
xchg
hlt
pop
jne
mov
(bad)
movs
dec
cmp
sahf
jl
jg
push
hlt
push
adc
retf
shr
fisub
sub
retf
mov
imul
push
mov
out
mov
and
pop
jbe
or
neg
mov
lods
mov
lea
aam
sbb
sbb
sbb
shr
out
push
std
ins
add
and
pop
icebp
mov
into
pop
test
xor
scas
push
jae
stc
int
int
or
rol
mov
call
into
xchg
cmps
add
pop
xchg
jbe
aam
jg
loopne
push
adc
out
adc
ret
or
scas
es
mov
sub
mov
fcomp
jl
js
retf
mov
and
stos
bound
jle
ja
push
mov
pop
bound
xchg
add
pop
sub
shr
xor
idiv
push
cld
mov
es
pop
cmp
jo
pop
bound
jns
in
mov
ret
leave
scas
aaa
jae
pop
scas
jle
dec
mov
xor
mov
adc
add
mov
jns
test
mov
cmp
dec
xor
dec
inc
(bad)
jge
stc
and
sub
rcr
jb
int
mov
mov
push
fbstp
std
cmp
mov
in
fsub
add
mov
scas
imul
mov
xchg
and
mov
ds
fs
adc
aam
xor
(bad)
lods
push
pop
jnp
push
mov
add
pop
mov
sbb
pop
ins
jns
iret
mov
jmp
xor
adc
mov
dec
mov
cmp
jbe
xchg
xchg
scas
fs
and
mov
clc
hlt
out
xor
cmp
out
outs
bound
pop
mov
scas
inc
push
sar
stc
push
mov
cmp
jns
mov
jle
sbb
les
inc
cmps
mov
jae
jb
ret
je
push
xchg
pusha
or
mov
dec
xor
stos
jg
or
mov
call
aaa
pop
mov
in
jl
fild
sbb
mov
es
std
pop
ja
mov
fsubr
mov
cwde
mov
clc
jne
div
stos
inc
out
je
je
or
add
enter
ror
shl
cmp
add
jne
adc
fmul
call
nop
sub
adc
imul
mov
mov
mov
stos
popf
inc
fwait
icebp
xchg
sahf
mov
mov
icebp
scas
gs
sbb
test
popf
pusha
fwait
jbe
jne
loop
or
xchg
mov
jae
pop
or
or
jg
jo
mov
mov
sub
jl
mov
les
lds
xchg
cmp
mov
ins
stos
mov
jbe
dec
aad
jle
xor
jae
xchg
and
dec
or
inc
push
push
and
mov
in
cmp
cld
repnz
dec
scas
movs
fiadd
jae
int
inc
sbb
repnz
call
retf
enter
gs
jae
push
xor
xor
sub
mov
pop
rcr
pop
cmp
mov
cmp
jl
js
xchg
adc
xchg
(bad)
lock
jns
push
or
xchg
jmp
xchg
mov
imul
xor
mov
xor
and
cmps
cmp
fild
push
mov
js
push
leave
inc
sbb
cmps
mov
mov
xchg
ins
jae
dec
add
ret
je
cmp
xchg
hlt
jecxz
or
sbb
pop
mov
mov
in
std
adc
and
pop
hlt
aas
inc
rol
cs
and
adc
mov
cs
fdivr
or
lods
dec
lahf
push
xor
add
cmps
bound
sti
test
push
xchg
sub
xor
jne
and
push
jae
mov
call
es
adc
inc
add
jae
push
ficomp
inc
loopne
jae
or
in
mov
mov
xor
in
xchg
fdivr
nop
add
mov
inc
xor
or
mov
scas
xchg
movs
xor
jmp
mov
rcr
stos
add
lods
push
test
dec
mov
or
add
jecxz
adc
mov
fmul
mov
fdivr
jecxz
(bad)
(bad)
mov
call
xchg
inc
xor
sub
in
mul
repz
push
mov
mov
imul
xchg
stos
push
fs
jne
std
jae
adc
sbb
fdivr
mov
mov
hlt
xchg
aaa
mov
sub
cmp
mov
loop
std
sub
jg
ret
sub
xchg
cmps
add
mov
std
mov
cdq
sub
lods
or
sub
cmp
in
arpl
ins
xchg
addr16
mov
imul
or
adc
mov
dec
pop
lahf
mov
daa
push
aam
lods
aad
lods
cmp
add
mov
test
aas
push
imul
mov
gs
mov
int3
push
inc
cmp
xchg
push
imul
xlat
jae
aaa
ret
pop
ins
int
xchg
sbb
sbb
dec
mov
xchg
xor
clc
xchg
mov
arpl
jb
pushf
out
and
inc
sbb
xor
lds
popa
mov
xchg
mov
cmp
jae
aam
and
stos
pop
jecxz
ja
jle
cmc
in
jnp
scas
mov
and
mov
inc
jp
out
je
cmc
popa
dec
adc
mov
mov
aam
out
lods
mov
sti
and
popf
lods
sub
xchg
mov
sar
pop
jae
jno
lock
imul
aas
lds
lahf
sbb
adc
or
es
jb
add
ins
xchg
sub
repz
ret
pop
movs
and
mov
xor
repnz
xchg
retf
xor
aaa
jmp
push
sub
les
mov
mov
jl
inc
es
aam
retf
test
or
and
adc
push
out
pop
sbb
mov
push
cmp
mov
xor
or
ins
push
or
xor
sub
cmp
mov
mov
jae
or
popf
mov
sar
sbb
jne
pop
jne
xor
push
cs
pop
pusha
sub
(bad)
pop
out
jbe
cmp
pop
lea
adc
sub
ja
mov
loop
stos
push
fdiv
in
int
cdq
ror
or
mov
mov
imul
stos
pop
jno
xor
pop
adc
sbb
jmp
mov
hlt
repz
out
jae
inc
movd
pop
stos
mov
push
mov
enter
js
xchg
sbb
jmp
push
mov
xchg
mov
out
xchg
hlt
pop
pop
in
js
adc
fbstp
adc
xchg
push
ja
dec
push
jnp
xor
jmp
xchg
std
adc
hlt
push
and
xchg
inc
cmp
je
mov
cmp
aam
or
cli
inc
les
stos
sub
adc
andnps
pushf
test
sbb
ss
data16
jl
mov
mov
aam
or
mov
jp
or
dec
out
out
cmp
dec
test
nop
push
je
aad
dec
fldln2
imul
lods
in
jae
dec
and
mov
(bad)
mov
cld
ret
cmp
je
imul
(bad)
and
sahf
cmp
jae
mov
adc
arpl
mov
sub
jae
add
jg
pushf
xchg
push
int
push
ficomp
xor
call
dec
in
not
mov
add
jae
or
jg
lods
stos
xchg
sbb
mov
loopne
push
add
lods
test
jb
scas
jecxz
popa
jmp
movs
pop
pushf
xchg
jns
add
mov
ins
cmp
mov
ja
repz
and
xchg
add
mov
and
mov
jbe
or
mov
js
mov
jl
rol
int
sbb
dec
mov
pop
mov
repz
sub
scas
cmps
push
xchg
les
hlt
iret
inc
mov
mov
add
loopne
mov
xchg
jns
fcom
cmp
mov
dec
lock
mov
stos
xchg
into
clc
(bad)
enter
(bad)
or
(bad)
call
(bad)
loopne
jnp
inc
inc
js
xor
push
icebp
les
inc
fisubr
jg
push
inc
vandps
je
rcl
and
sbb
xchg
fabs
xchg
sbb
inc
cmp
jae
dec
push
inc
rcr
xor
or
xor
not
sbb
mov
jg
outs
iret
sar
cmp
adc
hlt
pop
fidiv
cmp
jl
xor
fsubr
sub
or
hlt
mov
mov
fisubr
add
movs
mov
jae
pushf
cmps
and
sti
repz
mov
pop
jno
call
add
lds
sbb
adc
add
outs
in
loope
or
movs
ret
xchg
jp
jnp
call
gs
jnp
icebp
pop
je
repz
mov
jae
cli
sub
and
adc
pop
sub
inc
fwait
mov
fstp
sahf
add
push
add
xlat
push
cld
inc
mov
push
retf
les
inc
test
inc
adc
jnp
adc
daa
mov
sub
stos
gs
sbb
mov
mov
addr16
addr16
jae
(bad)
pop
jecxz
cli
lds
sbb
arpl
cmps
cmp
mov
cdq
inc
js
lea
bnd
ja
in
icebp
mov
mov
add
movs
fdiv
mov
push
arpl
js
out
add
jp
bound
popf
dec
sbb
xchg
push
gs
mov
dec
dec
lahf
jo
outs
stc
xor
push
icebp
xchg
out
push
neg
sub
adc
aam
xlat
ret
sbb
push
in
pop
data16
inc
jbe
mov
mov
xchg
arpl
mov
inc
pop
dec
adc
mov
mov
xchg
xor
js
sbb
pop
cli
mov
pop
sub
sbb
shl
dec
cwde
xor
mov
push
dec
pushf
xor
adc
enter
retf
pop
push
je
push
int3
mov
jnp
mov
mov
aad
(bad)
leave
jmp
pop
jae
lock
jbe
mov
xrelease
or
fimul
daa
xchg
sbb
mov
mov
sahf
push
lods
xor
(bad)
test
cmp
pop
push
add
adc
jg
fistp
pushf
jp
(bad)
pop
add
mov
fidiv
(bad)
in
frstor
je
jmp
push
push
mov
jecxz
std
out
pop
cmp
data16
dec
mov
cmp
lahf
test
xlat
ds
jmp
inc
sbb
mov
mov
add
mov
loop
fwait
sub
mov
ins
jnp
sbb
jae
mov
mov
sub
scas
jmp
pushf
dec
call
pop
mov
mov
jb
mov
xchg
retf
es
pop
sbb
aad
(bad)
ret
xchg
cmp
inc
enter
scas
mov
es
and
cmp
aas
mov
xchg
jns
jb
cmp
ds
inc
mov
test
es
adc
gs
xor
cld
or
adc
mov
sbb
fsubrp
adc
sub
add
sbb
pop
adc
cmps
jmp
cs
push
pushf
xchg
xlat
mov
repz
or
mov
test
out
lahf
pop
xor
sar
lds
test
add
sbb
adc
mov
int
out
in
cs
les
lods
mov
jae
scas
mov
mov
(bad)
push
adc
inc
out
adc
and
fwait
jl
inc
xchg
add
cmp
add
jae
in
sub
jmp
and
xchg
sub
gs
out
ja
mov
cdq
cli
fwait
outs
ror
or
push
dec
xchg
mov
ret
pop
xchg
push
in
movs
je
mov
dec
sbb
cmps
adc
int3
lods
sbb
adc
mov
jg
mov
test
xlat
jb
(bad)
jnp
mov
ins
(bad)
cmc
repz
cdq
(bad)
jg
sar
pusha
retf
push
sbb
movs
call
mov
push
adc
adc
xchg
ret
cmp
jge
adc
je
test
jbe
dec
xor
das
ror
mov
inc
ja
dec
mov
ss
cmp
stos
cs
lock
fwait
mov
xchg
jo
xchg
neg
cmp
push
mov
nop
mov
hlt
mov
loope
cmp
test
inc
fsubrp
add
retf
pop
mov
mov
inc
push
xchg
xor
test
jae
and
and
jmp
sbb
or
pop
xor
gs
cmp
jae
inc
test
cmp
jp
sbb
mov
fist
scas
std
xchg
mov
(bad)
jmp
jg
fwait
in
imul
mov
or
lock
ficomp
xor
adc
sub
ins
ja
mov
inc
add
cmp
int3
jbe
ins
mov
jae
call
rol
xor
mov
js
shl
out
jno
test
xchg
jle
inc
mov
mov
mov
call
scas
mov
jp
repz
repnz
xchg
sahf
jb
sbb
mov
lods
cmps
xor
xor
sahf
lock
mov
mov
imul
or
out
fwait
inc
sbb
adc
mov
adc
aaa
repnz
or
xor
cmp
mov
cmp
xor
es
out
pop
jns
sbb
add
xchg
inc
fdivr
adc
xchg
jl
xchg
cmp
sbb
out
mov
mov
loope
sub
loop
nop
mov
fld
fstp
sbb
adc
in
push
jecxz
sub
push
popa
pop
in
sbb
mov
out
rol
dec
add
xor
add
loope
retf
pop
mov
enter
sti
sbb
inc
stos
rcl
pop
add
jp
push
cmp
je
cmps
inc
jne
xchg
add
xchg
(bad)
int3
sub
mov
xchg
jmp
mov
fwait
mov
stc
mov
add
jae
inc
push
stos
or
popf
out
cld
inc
push
sub
mov
pop
xchg
aad
cwde
sbb
mov
arpl
push
jae
(bad)
cs
and
mov
adc
xor
jae
in
mov
sbb
aaa
inc
pop
call
adc
mov
dec
retf
pop
dec
jge
jmp
lds
inc
or
inc
cmc
js
dec
push
sbb
mov
mov
shl
mov
or
out
iret
test
dec
push
outs
jbe
les
mov
nop
pop
and
mov
aam
mov
push
sub
jb
add
mov
stc
or
les
scas
inc
ins
in
inc
int
pop
mov
cmp
xchg
xchg
adc
lods
out
ficom
mov
xor
rcr
xchg
(bad)
aas
(bad)
mov
or
dec
jg
or
sub
jmp
push
add
gs
test
test
push
mov
adc
(bad)
(bad)
mov
inc
imul
mov
sub
jp
jns
cdq
mov
xor
mov
pop
pop
xor
cs
dec
sbb
test
sbb
xchg
and
sub
mov
dec
mov
xchg
in
cmp
pop
xor
dec
loop
sub
clc
imul
adc
cmp
sub
lahf
sub
sub
or
fstp
add
inc
je
cmc
retf
das
adc
dec
cli
mov
loope
test
push
fs
push
test
push
jmp
ret
sbb
mov
jg
adc
pushf
xchg
frstor
cmp
push
jae
nop
int3
lods
rcl
dec
ficomp
sti
xor
xlat
push
xor
pop
xor
clc
out
xchg
and
cmc
pop
or
rcr
test
imul
imul
cmp
mov
inc
xchg
dec
loopne
mov
mov
sahf
lods
mov
sbb
repnz
xchg
cmps
sub
xchg
mov
sbb
pop
lds
das
rcr
xor
xchg
fmul
addr16
adc
sti
xchg
loope
or
mov
and
jge
adc
mov
jecxz
iret
(bad)
lea
jp
arpl
mov
sub
mov
(bad)
clc
mov
inc
xor
mov
adc
fild
ud2
(bad)
xchg
(bad)
sub
sub
test
fbld
call
push
js
xchg
es
fwait
sbb
mov
in
push
hlt
outs
loopne
mov
popf
dec
fiadd
fdiv
inc
pop
cli
fcomp
fstp
and
mov
out
cmps
(bad)
int3
fst
or
stos
cmp
xor
cmps
outs
cmp
inc
adc
and
jmp
inc
adc
fist
pusha
cli
and
aam
test
jle
or
pop
mov
test
cmp
mov
ins
jno
push
and
vmulss
pop
jae
je
jnp
mov
dec
pop
test
jae
call
cmps
mov
mov
add
xor
cs
mov
mov
test
repz
outs
fwait
int
lea
(bad)
jecxz
pushf
mov
dec
adc
cs
icebp
mul
clc
jmp
cmp
mov
je
mov
sub
cmp
test
ins
ror
lds
ins
pop
not
mov
test
jge
mov
or
inc
xchg
add
mov
sti
mov
add
jmp
inc
pop
mov
inc
xor
push
jecxz
pop
js
call
dec
jbe
shl
repnz
int
loopne
dec
inc
xor
sbb
push
or
adc
dec
(bad)
pusha
je
daa
mov
rol
adc
mov
mov
sbb
mov
add
sti
dec
xor
sub
mov
mov
mov
jb
xchg
jle
adc
enter
rol
into
repnz
dec
out
mov
dec
clc
pushw
push
mov
popf
int
or
adc
push
pop
dec
or
inc
iret
cmp
jmp
imul
jns
jno
adc
jg
das
test
push
xchg
pop
sbb
jno
add
mov
fmul
adc
fldcw
adc
push
mov
add
inc
mov
pop
lods
in
pop
xor
int
and
mov
lods
or
push
xor
stos
push
cmp
repz
xchg
cmc
adc
imul
jecxz
inc
jae
push
popa
jle
add
repz
imul
test
pop
lods
imul
mov
dec
add
xor
(bad)
(bad)
aaa
addr16
addr16
mov
add
pop
rcl
ja
mov
jb
adc
adc
xor
adc
ret
ins
test
or
mov
sbb
aam
xchg
pop
scas
hlt
fbld
xor
or
jns
nop
dec
adc
adc
inc
scas
and
retf
pop
add
xor
inc
sbb
test
pusha
fldenv
inc
sub
xchg
or
lods
xchg
mov
enter
mov
adc
popa
mov
lahf
je
mov
adc
outs
xchg
ja
dec
pop
loope
inc
lea
xchg
mov
cld
and
data16
mov
sbb
and
xor
dec
aaa
jmp
(bad)
shr
lods
test
test
pushf
lods
cld
sbb
cld
mov
fsubr
rol
sub
mov
call
xor
add
lds
call
jp
cwde
push
jl
jle
test
repz
xchg
scas
inc
mov
or
shl
sbb
or
mov
jl
neg
hlt
int
push
sub
add
das
mov
push
mov
lods
adc
inc
pop
or
adc
pop
xchg
stos
add
xor
cmp
mov
in
mov
iret
dec
repnz
xchg
xor
cld
stos
ror
jae
or
pop
addr16
xchg
mov
test
cld
jmp
jp
push
fcom
div
sbb
rol
pusha
or
pusha
dec
movs
call
mov
or
xor
mov
mov
add
test
mov
cmp
mov
sub
test
sub
les
sub
dec
cmp
test
daa
inc
repz
push
jnp
lahf
xchg
leave
lods
push
movs
and
hlt
add
lods
mov
cwde
data16
leave
add
push
push
(bad)
jle
stos
aas
popa
jg
adc
pop
cmps
mov
ror
add
cs
push
mov
mov
cwde
mov
push
mov
fild
fistp
and
(bad)
(bad)
ficomp
push
retf
sbb
shl
mov
loop
mov
pop
mov
sbb
xor
lods
rcl
xchg
pop
or
push
in
mov
add
(bad)
and
mov
jmp
lea
inc
and
mov
or
pop
dec
adc
sbb
push
test
(bad)
sub
sbb
xlat
jp
pop
daa
loop
mov
sar
adc
xchg
inc
scas
fisubr
addr16
aaa
or
push
xor
aaa
xor
std
add
mov
ss
push
bound
clc
mov
sub
xchg
xor
mov
sbb
int
call
sub
int
sbb
jg
pop
shl
gs
retf
dec
sbb
fist
out
sbb
mov
lea
adc
rcl
call
and
lods
mov
and
cmps
lahf
adc
ret
and
jmp
xchg
ss
shl
inc
lock
mov
mov
cmp
pop
fadd
inc
nop
cs
aad
ja
or
shr
jmp
mov
sar
xchg
sbb
xor
imul
aam
aad
stos
dec
xor
stos
cmp
xchg
add
push
inc
movs
xchg
bound
push
in
cmps
lea
ins
int3
jg
adc
and
sbb
arpl
cmc
cmp
jmp
mov
lea
and
fisttp
jae
jl
cld
(bad)
js
lds
or
lock
mov
and
inc
cs
clc
xchg
lds
pop
es
inc
xor
mov
or
inc
mov
cld
jl
imul
mov
in
mov
or
xor
mov
psrld
inc
inc
push
(bad)
sbb
pop
(bad)
cmc
sti
jnp
inc
xor
repz
push
push
sub
sahf
and
or
imul
pop
lahf
lahf
(bad)
xlat
push
sbb
faddp
inc
ret
push
cmp
and
adc
push
in
mov
ja
mov
jecxz
push
xchg
inc
sbb
outs
jb
scas
inc
add
js
sub
stc
bound
cwde
je
push
call
jle
dec
lods
dec
cmp
push
int
rol
xor
mov
and
sbb
hlt
push
test
cmps
fwait
aam
mov
lock
dec
inc
or
shl
mov
push
xchg
fnsave
enter
call
push
xchg
jne
mov
sub
jmp
(bad)
nop
or
mov
inc
xor
stos
adc
lds
mov
mov
retf
inc
jne
mov
imul
movs
fwait
aas
add
push
int
push
xchg
je
jo
jecxz
xor
ret
xchg
lods
pop
fdiv
mov
mov
and
inc
xor
pusha
and
bswap
sar
mov
in
inc
clc
aas
scas
push
pop
push
pusha
xor
xchg
frstor
mov
jl
aam
dec
ins
jmp
fisttp
pop
add
pop
jmp
sbb
bound
shl
call
je
cmp
mov
adc
cmp
scas
repz
std
out
clc
add
out
and
hlt
ins
add
mov
dec
(bad)
mov
inc
ror
sbb
addr16
push
sbb
mov
pop
clc
and
push
xchg
mov
ret
ret
add
dec
xor
aaa
lock
mov
cdq
sbb
int
mov
call
xchg
repnz
std
inc
fwait
loopne
ss
xchg
data16
jbe
xchg
cli
jmp
jb
xor
and
jp
jl
adc
out
jmp
sub
add
or
(bad)
int
jmp
and
aas
js
je
xor
xchg
adc
addr16
repnz
inc
sub
and
and
pushf
dec
push
ret
and
jae
sub
xor
out
out
sbb
xchg
mov
sub
mov
(bad)
xor
mov
aas
mov
xor
push
not
lahf
ss
mov
and
jae
addr16
sub
not
sbb
mov
jmp
lea
cmp
xchg
xchg
fnstsw
jae
fisub
test
fisttp
pop
dec
aas
pop
sbb
sbb
sbb
inc
mov
xchg
dec
jmp
jae
arpl
icebp
add
dec
adc
cli
sub
xor
or
sbb
mov
cmp
jg
dec
test
call
out
dec
iret
arpl
dec
fdiv
js
inc
push
inc
xor
sbb
lds
cs
xchg
push
xor
fs
mov
arpl
adc
jae
jnp
push
dec
push
inc
jmp
xor
xor
ret
std
dec
test
mov
and
pop
jno
scas
int
rol
jmp
ret
xchg
sub
(bad)
sub
sub
and
push
mov
retf
retf
test
sub
jae
and
(bad)
call
in
popa
jo
pop
mov
add
mov
mov
xchg
mov
push
rcr
xor
div
mov
push
popa
and
test
push
mov
adc
push
sbb
inc
aaa
dec
sbb
nop
or
cmp
mov
mov
xchg
dec
or
in
sbb
or
mov
push
jae
xchg
int
push
jecxz
not
dec
jno
adc
inc
sbb
gs
js
call
xchg
xor
dec
into
mov
xor
in
xor
jae
dec
fwait
pop
jae
jno
push
or
inc
sbb
cld
nop
(bad)
cmp
jae
sti
outs
lods
sbb
and
sbb
jno
mov
cmp
icebp
xor
aam
cwde
test
les
sbb
mov
aaa
inc
(bad)
cmp
cli
(bad)
jg
xor
not
sahf
ret
(bad)
or
cmps
ror
mov
push
or
push
aas
int3
inc
stos
imul
fdiv
dec
mov
mov
inc
pop
test
add
or
popf
mov
in
add
jmp
mov
outs
jmp
ins
pushf
sbb
jmp
mov
sub
(bad)
(bad)
loopne
leave
mov
mov
inc
cld
dec
sahf
cmp
mov
add
or
rol
bound
mov
sahf
hlt
xchg
ins
sub
mov
sbb
add
arpl
add
test
pop
loop
test
xor
mov
jae
mov
clc
mov
sub
mov
xchg
and
loop
push
xchg
aas
cmp
xchg
jns
xor
or
mov
fwait
mov
data16
jg
push
imul
outs
pop
jl
aaa
mov
pop
fs
dec
pop
test
repz
daa
jb
sbb
cmc
push
mov
pushf
int
int
not
cmp
or
outs
mov
push
adc
inc
mov
or
sub
call
mov
(bad)
sbb
xchg
and
push
mov
test
shl
popa
mov
ds
call
je
imul
sub
jb
das
cvtps2pi
sar
adc
dec
sti
and
push
call
mov
push
stos
lods
jb
adc
outs
pop
cdq
fistp
adc
(bad)
loop
push
and
push
ret
adc
ret
ins
pop
and
mov
push
stos
jae
cmp
clc
sbb
push
outs
mov
adc
push
adc
pop
push
adc
sbb
mov
jo
int
jle
jne
repz
fst
pop
sbb
jnp
int
leave
sti
xor
sbb
mov
daa
push
push
inc
shl
out
loop
xor
xor
sub
rcl
push
mov
call
and
or
aam
add
push
movs
push
adc
pop
std
mov
jmp
or
cmp
lock
jmp
push
or
jno
lock
sbb
jb
pushf
pop
enter
addr16
in
mov
movs
xchg
cmp
xchg
push
arpl
xchg
fstp
mov
rcr
adc
fisttp
(bad)
out
(bad)
xor
lods
retf
cmp
inc
xor
fdivr
or
sbb
pop
fwait
jmp
adc
popa
sbb
jg
hlt
ins
out
or
jecxz
xor
sub
and
fsubr
cmp
add
cld
jge
mov
sbb
repz
sbb
aas
mov
sbb
scas
xor
lods
dec
adc
adc
xchg
pop
rol
jae
push
mov
or
aas
jle
ret
pusha
jge
or
cmp
mov
pop
or
mov
cld
add
pop
cmp
movs
in
jae
ret
push
or
les
jb
int3
mov
movs
mov
aam
dec
cli
add
pop
jg
jne
push
out
aam
push
dec
sbb
out
(bad)
mov
not
push
enter
stc
sub
mov
sbb
mov
icebp
pop
shl
pop
pop
les
cmp
sub
mov
in
push
push
outs
cmp
sub
(bad)
cs
fdivr
in
int
mov
mov
xor
(bad)
ret
push
or
push
in
(bad)
idiv
xchg
pop
sahf
imul
jae
retf
xor
loopne
sub
cli
add
push
ror
loop
pop
sub
mov
rol
push
cs
add
call
in
pop
dec
repnz
mov
out
sysexit
jb
fist
mov
js
mov
xchg
mov
jmp
mov
mov
jb
imul
sbb
fucompp
dec
pusha
neg
mov
add
sbb
xchg
bound
xchg
sbb
mov
adc
(bad)
mov
(bad)
adc
data16
add
in
mov
dec
mul
or
sete
in
inc
jae
aaa
lahf
pop
mov
(bad)
mov
into
mov
clc
pop
imul
packuswb
xor
call
jmp
sbb
cmps
xchg
sub
daa
fsub
dec
push
es
push
mov
lea
pop
xchg
adc
jg
aad
imul
mov
cmp
stos
sbb
push
data16
cmp
imul
sbb
push
je
(bad)
mov
cld
shl
bound
loop
xor
dec
sti
pusha
jae
imul
je
xchg
and
repnz
mov
or
cld
inc
mov
sbb
movs
clc
test
dec
jae
cmc
sub
xchg
sbb
fnsave
and
call
repz
pop
xchg
jmp
mov
jns
movs
add
or
hlt
addr16
dec
pop
push
or
ss
sub
dec
stos
inc
ins
mov
mov
mov
lock
ss
enter
pop
nop
jne
popf
jns
jae
sub
cmp
mov
adc
mov
into
jnp
add
dec
add
js
mov
fst
cdq
test
jl
mov
cmp
xchg
or
xchg
retf
jb
dec
pop
add
mov
addr16
movs
cmc
push
sbb
or
mov
mov
call
mov
and
cmc
jne
sbb
mov
add
jae
or
out
adc
xchg
mov
(bad)
fdiv
adc
push
sub
jp
pop
popf
in
xor
int3
jae
repz
popf
lods
push
cdq
jne
cmp
stos
xchg
cwde
adc
xor
fwait
mov
ins
or
sbb
sub
test
pop
js
jl
mov
push
inc
push
dec
jbe
add
xchg
mov
pop
int
addr16
(bad)
jbe
(bad)
cld
cmps
push
movs
ret
cmp
push
push
mov
xchg
push
cmc
out
rcr
mov
mov
xchg
mov
cmp
fdivr
jae
push
jp
mov
jbe
push
jae
mov
ins
retf
mov
repz
sar
sbb
xchg
outs
push
mov
inc
out
adc
push
push
mov
xor
jnp
pop
sbb
pop
mov
adc
sbb
sti
clc
aaa
push
out
test
xor
add
mov
adc
mov
cmp
sar
adc
dec
cmp
aaa
lods
das
stos
sbb
and
call
shl
test
mov
in
aad
ret
mov
idiv
push
lods
call
jbe
call
int
stos
sbb
arpl
retf
adc
(bad)
mov
movs
js
mov
test
ja
pop
outs
or
lea
mov
loopne
fcmovnbe
mov
cmp
jg
and
iret
mov
jp
test
sub
sbb
cmp
popf
pop
mov
ins
int
stos
inc
sahf
stos
popa
sbb
stc
or
xlat
fisubr
cmps
lods
sub
mov
add
xor
add
sbb
xchg
xchg
mov
jns
pop
mov
jnp
push
test
(bad)
mov
hlt
jb
jecxz
cmp
and
inc
push
mov
inc
ret
ds
out
mov
ja
jns
xor
pushf
ret
inc
stos
(bad)
aam
lods
add
movs
outs
repz
gs
inc
mov
or
xchg
jge
sub
or
inc
out
xchg
repnz
mov
addr16
adc
leave
and
mov
xchg
cmp
je
sbb
pushf
and
clc
inc
neg
inc
and
rcr
scas
sar
jae
xchg
push
jno
xchg
jg
jbe
ficomp
retf
xor
add
dec
mov
inc
sbb
mov
fidiv
mov
outs
jns
jg
pop
jge
aaa
fnstenv
mov
mov
movs
aad
pop
loopne
jl
loope
push
daa
or
push
mov
repz
or
loopne
pop
out
add
jae
mov
out
adc
test
jbe
jg
sub
(bad)
fsub
jae
inc
jnp
and
jns
leave
ins
test
pop
arpl
int3
push
(bad)
mov
cmp
xlat
mov
push
lds
sti
adc
or
imul
sbb
mov
inc
cmc
and
pop
or
or
jb
sbb
mov
cmp
mov
adc
or
push
mov
mov
xchg
xchg
add
adc
sub
inc
jb
sub
sbb
pushf
fistp
sbb
lods
jp
lods
gs
xchg
jmp
retf
sub
movs
adc
lds
pop
xchg
cmp
or
pop
fstp
(bad)
jmp
jns
mov
test
add
out
sti
xchg
icebp
jge
pop
jle
ins
xor
push
cmp
movs
addr16
jle
stos
dec
mov
inc
jmp
and
pushf
test
inc
outs
push
sub
call
xchg
lods
dec
movs
outs
out
mov
adc
out
jae
jp
jmp
sbb
fstp
sub
js
adc
aaa
inc
pusha
mov
pop
out
ret
push
mov
pop
dec
fld
hlt
icebp
cmc
out
lea
mov
cli
dec
mov
stos
icebp
mov
xor
dec
pop
and
and
retf
enter
mov
sub
stos
inc
jno
adc
or
xor
lds
ror
ret
fst
cld
fnstsw
inc
mov
cmp
xchg
jmp
stos
push
inc
mov
pop
test
movs
test
or
or
aad
sbb
xor
jg
lods
scas
sub
mov
sbb
stos
or
fisubr
loopne
sti
xor
gs
aas
loope
popa
sub
not
out
stc
add
jp
or
mov
jne
mov
cmp
test
fnsave
or
push
js
mov
std
lds
in
sub
fisubr
test
imul
cmp
jbe
inc
das
sbb
sbb
jne
inc
outs
mov
cmp
and
sbb
test
dec
push
mov
push
adc
stos
pop
mov
int
jb
and
cmp
jbe
shl
aad
mov
lahf
mov
mov
clc
call
ret
sbb
adc
jmp
sbb
es
arpl
xchg
mov
scas
fsub
add
mov
mov
mov
inc
sub
dec
pop
stc
std
lahf
mov
retf
xchg
jmp
mov
test
cmp
jmp
lds
sti
xchg
jp
bound
adc
stos
jge
fnstcw
jno
hlt
movs
push
out
stc
xor
js
jmp
dec
xchg
or
ja
jb
mov
push
and
leave
inc
std
pushf
in
pop
ins
jb
lods
test
hlt
add
add
loope
xchg
fsub
inc
jmp
inc
lahf
or
aad
jl
das
cmp
shl
enter
push
rol
lahf
add
adc
inc
sbb
arpl
jmp
ss
adc
adc
mov
loop
aam
sbb
mov
data16
add
cmp
or
popa
xchg
lock
sub
pop
(bad)
sbb
push
fcomp
in
sbb
inc
pusha
mov
mov
outs
pop
fsubrp
jnp
mov
xor
(bad)
xchg
and
mov
test
adc
adc
xchg
je
dec
pop
sbb
inc
mov
repz
or
lds
lock
push
(bad)
sbb
xor
push
inc
lods
mov
adc
mov
sbb
ss
leave
lds
mov
add
inc
push
daa
test
aam
cmp
add
pop
sbb
int3
ja
jae
sti
stos
out
sub
push
sbb
es
or
xlat
jle
ins
push
movs
inc
in
leave
jo
and
pop
mov
rcr
mov
sub
jns
arpl
push
or
repnz
sub
pop
fs
adc
ja
out
inc
mov
sbb
xchg
dec
or
jecxz
out
cmp
ins
xor
ret
sbb
jns
repnz
loope
adc
push
in
mov
xchg
sub
ret
adc
out
pop
(bad)
test
cld
mov
lods
adc
and
mov
mov
xchg
add
adc
sbb
jmp
ror
inc
sbb
retf
xchg
mov
(bad)
dec
sbb
ja
or
enter
lods
xchg
and
fcmove
xchg
add
loope
jmp
cmp
inc
test
dec
pop
(bad)
mov
out
test
out
add
(bad)
in
cmp
movs
sbb
loopne
xchg
shr
stc
int
xor
fwait
jp
cmps
xor
fdiv
in
sub
jb
jmp
add
adc
sbb
movs
mov
in
cld
cmp
aad
dec
in
ins
xchg
push
sub
fld
pop
sub
das
pop
pop
lea
cli
sub
xchg
jg
faddp
xor
out
dec
xchg
jb
(bad)
mov
cmps
mov
cmps
pop
outs
mov
pusha
or
icebp
adc
sub
shr
je
call
sub
loop
leave
mov
fwait
mov
cdq
popf
lods
xchg
int
pop
mov
mov
hlt
das
and
add
das
jmp
cld
push
dec
inc
xor
mov
sahf
or
mov
fbstp
adc
and
xor
push
jmp
sbb
call
call
lock
js
mov
cmp
ins
fiadd
test
ret
(bad)
cmp
arpl
jbe
mov
mov
ret
jmp
inc
stos
inc
dec
mov
aaa
jbe
mov
adc
ins
jae
je
xor
dec
es
cdq
stos
sbb
mov
aam
dec
sub
pop
cli
stos
sub
jbe
pop
mov
dec
shl
leave
dec
push
cmp
inc
dec
jae
clc
xchg
inc
jnp
xchg
and
xchg
retf
and
xchg
push
mov
cmp
inc
mov
sbb
imul
es
mov
xchg
sub
dec
je
sub
sbb
cmp
popf
add
sub
xchg
sbb
shld
jmp
xchg
pushf
adc
lods
push
and
pushf
mov
mov
clc
(bad)
les
sbb
imul
cmps
jecxz
xchg
stos
imul
xlat
stc
ja
retf
adc
sub
(bad)
cs
pushf
jl
sbb
inc
jbe
dec
aaa
mov
adc
(bad)
cmp
mov
retf
mov
loop
xchg
push
dec
sub
mov
aad
scas
cmp
sbb
test
jmp
jae
dec
inc
jg
jle
repnz
jne
cmp
ins
jae
test
lds
and
into
mov
or
je
pop
dec
cli
jb
pop
call
addr16
mov
movs
jl
into
and
or
mov
loopne
nop
stos
rcl
imul
popa
add
repz
lds
dec
sub
mov
push
in
xchg
fdiv
and
(bad)
and
jbe
repnz
sahf
std
xchg
call
ja
call
jne
repnz
sbb
xchg
ficomp
out
data16
jae
int3
les
jl
dec
dec
dec
shr
int
outs
dec
ret
mov
sub
sub
imul
push
cmp
repnz
lods
fstp
dec
dec
fsin
stc
adc
movhps
movs
fcom
aaa
jae
mov
neg
daa
jge
lock
data16
xor
jle
(bad)
sub
int
ds
pop
push
les
jae
fistp
adc
mov
addr16
test
and
loop
add
sbb
std
ins
lahf
shl
sbb
jne
and
stos
push
pop
xchg
mov
jge
movs
dec
fisttp
cmc
loopne
retf
adc
rcl
push
sub
dec
pop
mov
icebp
ror
jnp
vsqrtsd
lods
xor
es
xchg
stos
jmp
mov
imul
jl
xor
push
pop
jae
div
add
retf
sbb
daa
xor
jg
pop
mov
mov
xchg
lock
mov
pop
push
in
imul
sub
inc
xor
xchg
vmwrite
and
push
push
push
outs
lds
stc
sbb
jo
or
pusha
xor
xchg
neg
shr
xchg
jge
in
mov
sahf
sub
push
movs
sbb
call
repnz
jbe
leave
test
(bad)
cmp
iret
cmp
ds
out
ror
neg
xchg
inc
adc
(bad)
repnz
inc
sar
hlt
pop
dec
shl
sbb
adc
mov
jo
jmp
popa
bound
in
js
jae
jae
add
lods
jns
cmp
mov
ret
lea
cmp
xor
neg
call
gs
mov
jmp
push
push
outs
push
rcl
(bad)
ficom
jge
jnp
ins
hlt
fcmovbe
mov
aaa
je
cdq
int3
inc
cdq
mov
adc
push
test
pop
leave
aaa
xchg
mov
mov
dec
(bad)
mov
pop
mov
int
jo
imul
jg
xor
repnz
xor
xchg
mov
xchg
cs
adc
icebp
sbb
jge
stos
cld
mov
mov
or
push
adc
xchg
(bad)
dec
add
loop
inc
push
jno
dec
xchg
in
cld
or
ja
mov
hlt
test
fidiv
retf
ins
mov
scas
hlt
jge
sub
sub
stos
mov
inc
xor
mov
mov
adc
sbb
push
adc
lds
push
call
in
dec
inc
pop
cmp
adc
mov
imul
mov
pop
jae
mov
jne
imul
sub
xchg
sub
cmps
sbb
jo
mov
cmps
dec
mov
jne
int
fistp
cs
mov
adc
jl
pop
fiadd
sbb
push
call
xchg
jmp
push
mov
ss
or
xor
xor
push
push
push
imul
push
inc
scas
xchg
and
pop
or
jcxz
sbb
imul
sub
xchg
mov
ja
out
stc
call
inc
cmp
mov
xchg
pop
mov
jno
out
neg
in
paddusb
loop
jae
sar
adc
inc
loope
xchg
mov
pop
mov
mov
adc
xchg
ficom
popa
in
imul
inc
push
sbb
dec
xchg
fwait
aaa
inc
in
mov
push
stos
jae
jmp
sbb
mov
mov
mov
push
aas
cmps
cwde
ret
push
inc
loop
in
push
cmp
call
jae
movs
push
sub
dec
sahf
imul
adc
sbb
jbe
jp
and
push
sbb
stos
xchg
xchg
loop
cmps
gs
test
cdq
mov
and
sbb
(bad)
sbb
jle
out
(bad)
sub
ja
(bad)
leave
add
aam
pop
repnz
pop
dec
dec
test
cdq
retf
mov
jae
pop
cli
jno
ret
xchg
dec
sbb
sub
mov
or
jl
cmps
das
push
cmps
into
fldenv
ds
jns
pop
(bad)
pop
mov
movs
mov
(bad)
int
movs
int
lods
loop
loope
cmp
adc
int
xchg
(bad)
retf
jge
out
lods
cmp
mov
pop
and
pop
fwait
es
inc
outs
pop
sub
mov
xor
fwait
or
push
and
jns
sbb
shl
adc
sbb
icebp
fbstp
push
retf
jge
pop
lock
mov
imul
daa
shl
loope
xchg
scas
iret
mov
or
ins
mov
add
movs
sbb
mov
xor
jge
vpsubsb
push
xor
adc
add
movs
sbb
cmps
jns
aaa
dec
inc
cmps
daa
inc
int
push
xlat
pop
mov
xor
dec
or
cmp
mov
fisttp
add
popa
ss
or
cmp
inc
cmp
cdq
cmc
dec
call
mov
push
mov
gs
cmps
mov
dec
xchg
push
xchg
jae
call
scas
push
ret
inc
int3
adc
test
mov
mov
mov
cld
fcmovne
cmps
jb
aad
cld
stos
mov
xor
cmp
xchg
add
stos
mov
test
test
adc
in
and
inc
js
cmp
xchg
popa
mov
xchg
mov
jmp
dec
adc
jmp
pop
fadd
push
sbb
push
and
movs
xchg
sbb
retf
imul
adc
test
leave
cmps
pop
pop
sbb
sbb
sub
fild
pop
jmp
sbb
xchg
mov
cs
xor
push
fst
push
je
ins
je
pushf
push
fnsave
int3
sbb
jne
sbb
adc
mov
mov
jne
adc
mov
jg
add
xor
pop
mov
int
inc
lods
rcl
push
pusha
in
xchg
adc
sbb
sub
iret
jmp
(bad)
push
xor
jge
mov
std
fwait
or
(bad)
mov
push
push
push
ins
mov
inc
mov
mov
mov
push
repz
add
clc
test
jp
clc
ds
sbb
jbe
mov
repz
and
xchg
gs
hlt
ins
sbb
inc
ret
cmps
xchg
push
lea
mov
test
cmps
cmp
jnp
add
xchg
out
dec
cdq
sub
aas
cmp
push
add
lds
stc
out
push
shr
jnp
std
cmps
into
nop
(bad)
adc
xchg
jnp
mov
sub
mov
add
dec
pop
imul
jecxz
int3
sti
pop
pop
adc
cmps
cmc
out
(bad)
sub
and
add
clc
mov
stos
sbb
shl
mov
sbb
jae
dec
mov
rcl
retf
xor
(bad)
int3
dec
pop
sbb
mov
cmp
push
sbb
jp
inc
xor
stos
repz
mov
js
jmp
cmp
ja
xor
or
fwait
icebp
jmp
sub
and
jl
test
mov
sbb
mov
loop
jae
push
(bad)
int
clc
and
add
lahf
outs
js
mov
das
test
mov
sbb
fstp
push
call
sbb
aam
push
push
mov
mov
cs
shr
inc
loop
mov
mov
mov
hlt
mov
out
pop
pusha
xchg
sbb
add
jae
aas
movs
lods
loopne
dec
arpl
call
or
jns
test
xor
scas
xchg
pop
ret
mov
push
je
mov
sub
nop
dec
mov
mov
(bad)
push
sbb
icebp
scas
cmps
rcr
stc
jo
out
sti
jmp
cld
and
jne
push
xchg
je
inc
mov
je
ja
fwait
ins
xor
cs
retf
jno
push
imul
and
and
mov
mov
and
movs
dec
push
into
test
sbb
mov
sti
popf
std
into
pusha
jns
jae
push
out
mov
xchg
fcomp
(bad)
mov
pop
fist
inc
mov
xchg
jnp
dec
jecxz
mov
sub
imul
add
pop
js
out
push
jmp
out
xlat
je
ds
fisttp
and
test
adc
mov
push
xlat
(bad)
shr
mov
sti
and
das
cmp
xchg
daa
xchg
sahf
movs
clc
mov
mov
test
aad
jne
stos
popf
mov
fcom
cmp
sbb
xchg
and
fdivr
shr
jle
loopne
add
sbb
repnz
sahf
xchg
and
fwait
in
dec
fbld
xchg
jae
addr16
or
sbb
hlt
xor
push
mov
shr
ret
xchg
add
xchg
lea
jmp
jns
stos
mov
aas
les
sbb
mov
mov
scas
out
call
jb
jae
ins
or
xor
pop
popf
dec
mov
mov
cmp
mov
aam
mov
pushf
push
jo
and
xchg
aas
int
pushf
mov
je
pop
and
jle
or
mov
dec
mov
popa
popf
fld
mov
adc
jae
sbb
test
xor
fst
mov
fdivp
aam
adc
inc
jo
loope
adc
retf
test
psubb
cmp
mov
cmp
push
push
jns
shl
sbb
jno
scas
jae
in
xchg
push
aam
xor
dec
jg
sub
push
mov
xchg
or
add
jnp
cli
jae
add
inc
or
mov
adc
push
sbb
enter
clc
xchg
adc
xchg
popf
mov
add
mov
icebp
nop
inc
add
inc
imul
sahf
sbb
pusha
inc
xchg
pop
es
cmps
xor
pop
jae
xlat
stos
loope
push
lea
outs
sub
push
mov
pop
mov
push
bound
mov
mov
mov
mov
mov
sub
push
and
cli
adc
hlt
xor
movs
arpl
xchg
mov
jae
inc
test
push
clc
scas
sti
outs
ja
repz
jns
(bad)
pop
sbb
sub
cmp
addr16
jno
add
repz
jp
rcl
lods
inc
ins
daa
xchg
js
aad
xchg
mov
mov
iret
lods
xchg
lea
jb
and
push
sub
pop
arpl
adc
jp
das
pop
mov
xlat
adc
xor
push
stc
sub
jmp
mov
cmp
mov
out
xchg
arpl
sub
xchg
mov
pop
mov
mov
iret
sbb
sub
lock
mov
imul
inc
jle
nop
xchg
mov
pop
xchg
out
mov
in
mov
add
sbb
and
int
cdq
jae
sbb
addr16
cwde
push
scas
mov
outs
push
xor
aad
mov
mov
push
pop
cmps
pop
loop
mov
pop
adc
or
mov
into
sbb
pop
sub
and
push
repz
push
mov
retf
or
adc
mov
sub
mov
imul
lods
stos
std
jmp
pusha
(bad)
fcom
addr16
les
mov
jg
repnz
pop
ja
xchg
mov
cmp
in
xor
and
push
adc
mov
xor
stos
stos
test
iret
cld
pushf
jg
mov
fld
jbe
fnsave
add
xor
mov
mov
sbb
fidiv
push
ins
or
mov
in
les
cdq
mov
scas
pop
xchg
retf
test
scas
in
mov
sbb
aas
mov
mov
mov
mov
out
xchg
lock
and
dec
sbb
pop
clc
test
std
add
lahf
jp
jae
clc
int3
repnz
std
inc
ja
cdq
mov
cmp
mov
jmp
call
js
dec
test
jl
cmps
add
aam
hlt
push
mov
leave
or
ffree
cmp
dec
sbb
push
mov
dec
inc
sbb
xchg
in
and
inc
xchg
lock
inc
mov
sbb
sbb
(bad)
xchg
sti
out
adc
loopne
pop
loope
stos
fwait
data16
pop
sbb
push
scas
fidiv
aam
xor
pop
jae
test
xchg
adc
fcom
sbb
arpl
test
cmp
jo
add
fld
push
int
xor
fld
and
mov
fdivr
cmp
out
ret
fisttp
pop
test
and
xlat
daa
xchg
mov
(bad)
xchg
lahf
imul
xchg
in
(bad)
mov
mov
sub
sub
mov
xlat
dec
stc
pushf
jle
xchg
jmp
retf
scas
repz
add
and
add
jbe
add
stc
jno
adc
lds
sub
hlt
xchg
mov
xor
mov
or
loop
add
lahf
xchg
jp
jge
cwde
cli
inc
aam
stos
mov
pop
sbb
inc
mov
mov
mov
rcr
sbb
inc
aas
xchg
push
mov
sbb
movs
sub
out
mov
in
jl
jnp
xor
xor
mov
ins
xor
push
imul
clc
(bad)
xor
ja
retf
popf
jno
add
out
scas
mov
fimul
push
cli
fsubr
add
pop
sub
xchg
mov
xor
aam
sar
ret
fcom
das
hlt
lods
imul
or
dec
(bad)
jne
je
fcomp
aaa
mov
push
push
pop
sbb
ficomp
jmp
push
mov
daa
pushf
sbb
test
push
sbb
cmp
int
hlt
sub
add
adc
xchg
push
adc
add
je
sti
xlat
out
add
aad
mov
test
pop
test
adc
in
add
pop
cmp
icebp
and
lea
nop
fucomp
sbb
cmps
stc
push
(bad)
mov
xor
sub
mov
sbb
or
out
push
xchg
inc
fnstsw
mov
inc
mov
lods
out
test
push
test
mov
jmp
and
mov
cmps
jmp
mov
push
loope
push
ds
leave
xchg
add
jns
in
nop
ds
cdq
outs
retf
inc
(bad)
or
adc
movs
scas
cmps
jae
adc
jo
add
jns
(bad)
into
das
and
pop
lock
jmp
mov
inc
mov
loop
jae
cmc
lea
and
fucomi
pop
jecxz
jmp
pop
movs
fnstenv
outs
jecxz
jbe
das
je
mov
icebp
sahf
cli
sahf
popf
mov
enter
inc
popf
xor
add
add
adc
mov
pop
hlt
add
pushf
aas
add
inc
lock
adc
rcl
dec
add
mov
jae
jno
mov
inc
stos
sbb
xor
cdq
bnd
mov
shl
and
fldenv
xchg
loop
jge
xchg
sbb
sti
adc
adc
xchg
out
ja
pusha
mov
push
mov
inc
outs
add
jmp
imul
cmp
shr
cmps
jle
sbb
cmps
xchg
aaa
and
in
adc
sbb
cdq
xchg
xor
xchg
inc
xchg
xchg
out
inc
aam
sbb
cmp
mov
data16
mov
call
das
push
mov
or
or
mov
cs
mov
xor
or
add
popf
cmps
mov
cmp
(bad)
scas
dec
push
fldenv
xor
enter
in
mov
(bad)
sbb
bound
mov
mov
div
add
or
xor
dec
sbb
ins
outs
and
jae
lds
fcom
(bad)
push
mov
fnstenv
push
fnstcw
sbb
mov
mov
push
xchg
adc
xor
(bad)
cwde
inc
jae
push
sahf
jg
les
inc
mov
mov
out
inc
mov
adc
cmp
fldenv
(bad)
imul
sbb
popa
mov
in
dec
rol
push
xchg
js
test
push
shl
inc
test
xor
adc
sub
cmp
sbb
pop
fwait
into
mov
in
outs
mov
push
jle
mov
mov
dec
sar
adc
test
sbb
popa
(bad)
outs
fisubr
cdq
mov
or
call
fnstenv
mov
mov
mov
(bad)
cmc
or
pop
jmp
jae
jl
adc
enter
test
outs
gs
add
mov
shl
pop
mov
jle
cld
xchg
subps
push
fcom
popf
xor
push
mov
add
adc
fstp
pushf
shl
aas
cmp
dec
outs
jle
inc
sahf
xor
mov
and
push
je
lock
mov
or
mov
or
adc
mov
call
jns
pop
inc
inc
movs
lahf
or
inc
inc
mov
push
(bad)
lea
dec
jae
and
mov
jno
mov
sub
sti
xchg
lods
dec
push
xchg
cli
or
(bad)
jae
xor
pop
mov
or
jle
lahf
or
loop
pop
cmps
fwait
ins
sbb
and
sub
xchg
(bad)
iret
xchg
call
cmp
test
retf
sbb
mov
sub
lock
inc
nop
push
xchg
test
cmp
pusha
cmp
fs
mov
enter
mov
jmp
xchg
jae
popa
sbb
sbb
loop
sub
jae
mov
mov
iret
dec
out
sbb
pop
push
ret
aas
dec
xchg
mov
adc
inc
aam
adc
dec
cmps
sahf
push
xchg
sub
repz
inc
jnp
mov
outs
rol
push
jge
fdivr
fidivr
(bad)
jns
enter
mov
in
imul
push
push
imul
daa
dec
mov
push
lods
pop
aad
and
shl
pusha
fst
sbb
adc
jl
xchg
inc
retf
jle
jg
in
push
mov
ret
sub
sub
mov
mov
ror
mov
mov
ins
push
repz
and
mov
pop
mov
int3
je
mov
mov
xchg
mov
aam
jg
push
inc
imul
aaa
jns
cmp
mov
pop
mov
add
repz
inc
cmp
xlat
mov
sbb
inc
ret
mov
mov
cmps
(bad)
xchg
mov
or
xchg
sbb
js
stc
ss
or
movs
or
popf
mov
test
and
ret
add
push
daa
xchg
repnz
jb
cmps
xor
aas
sbb
push
ins
cmp
mov
outs
mov
test
shl
add
fst
test
jl
mov
mov
or
jno
cmp
stos
sbb
add
pop
jne
ja
jmp
inc
je
mul
push
push
sbb
repnz
shl
das
fmulp
or
or
sub
ins
jb
cmp
into
test
push
aad
pop
xchg
aaa
push
push
push
hlt
mov
jae
mov
mov
push
sbb
pusha
mov
sbb
cmp
xchg
xor
mov
(bad)
push
and
sub
mov
lahf
call
mov
repnz
jae
mov
jmp
mov
aas
push
loope
push
jecxz
addr16
pop
mov
vmovsldup
xor
and
pusha
(bad)
std
call
ret
scas
daa
push
mov
sub
mov
int3
fstp
jae
inc
test
mov
cmc
mov
je
fnstsw
je
stos
dec
dec
scas
xor
arpl
jns
dec
sub
mov
jle
adc
xchg
fwait
mov
adc
jl
sbb
hlt
cmp
je
aad
push
xchg
push
add
shl
jb
rcr
sbb
adc
ret
mov
lods
push
adc
sbb
aam
data16
pop
popf
xchg
adc
(bad)
jo
pop
cmp
leave
cld
in
mov
aam
push
push
cmp
lods
push
inc
jbe
pop
sub
sbb
retf
je
push
lds
dec
or
loopne
sti
mov
js
inc
jno
jle
mov
jmp
sub
pop
lods
popa
sti
adc
and
mov
ins
jo
test
dec
dec
add
pop
jbe
fs
mov
daa
ret
cmps
dec
push
sar
xchg
in
or
jg
pushf
jmp
and
mov
sbb
lds
pop
and
jae
jge
out
cld
fbstp
ficomp
jg
(bad)
loop
aad
push
push
scas
dec
push
stc
int
jns
movs
and
mov
lock
or
or
test
js
sub
shl
dec
jae
movs
ror
sbb
mov
das
mov
fnstcw
sbb
js
and
xchg
sbb
nop
jae
gs
dec
adc
mov
imul
jb
fimul
cmp
stos
mov
dec
push
jb
je
mov
loope
fnstenv
mov
shl
addr16
fisttp
xor
(bad)
popa
cmp
mov
jbe
mov
lahf
jg
jne
fldcw
mov
mov
outs
sar
lods
leave
call
jae
inc
xchg
inc
leave
pop
add
pop
hlt
inc
int
imul
cli
and
jbe
leave
ret
add
dec
loop
mov
popf
push
retf
popf
inc
fdiv
ss
stos
jp
fwait
pop
mov
xor
cwde
in
cmp
jg
ins
push
fsubr
test
js
loope
jb
fs
(bad)
mov
jae
outs
lahf
mov
dec
das
sbb
push
pop
sub
sar
hlt
pop
xchg
(bad)
xchg
push
dec
cld
xor
sub
mov
sbb
adc
mov
clc
cmps
pop
sbb
ins
push
xor
jle
sbb
inc
scas
push
scas
sub
jbe
mov
xor
inc
out
fucomip
add
adc
sub
clc
fiadd
mov
inc
mov
not
inc
mov
retf
pop
test
stc
imul
push
push
sbb
push
call
mov
mov
out
sbb
popa
addr16
inc
loope
ss
sbb
aam
ds
sbb
pusha
mov
xchg
ins
retf
and
mov
addr16
mov
pop
and
rcr
test
dec
and
xchg
jmp
jle
arpl
inc
repnz
scas
inc
sbb
add
leave
out
rol
ss
imul
adc
js
jns
repz
into
jmp
push
fs
dec
or
xor
test
(bad)
dec
cmp
cmps
jge
scas
mov
lea
ss
pop
mov
cmp
inc
mov
cwde
cmp
mov
mov
push
sub
cmps
in
cmp
dec
fdiv
mov
clc
jns
pushf
dec
sub
mov
or
fstp
iret
fsubrp
jmp
pop
scas
fs
jge
mul
push
mov
out
inc
xchg
pop
stos
mov
test
clc
out
scas
popf
add
fst
popf
cld
imul
retf
xor
daa
clc
jbe
add
adc
mov
push
fsub
stc
and
adc
inc
loop
(bad)
push
pop
mov
mov
arpl
test
imul
and
mov
jne
js
mov
mov
sub
mov
sbb
aam
rcr
mov
jmp
and
(bad)
xor
add
ja
cmp
xor
cmps
xchg
sbb
sub
addr16
xchg
push
out
sti
jnp
pushf
mov
in
or
shl
mov
adc
add
pop
jmp
addr16
xchg
fcom
jb
test
out
push
xchg
adc
xchg
sbb
or
mov
imul
and
pushf
dec
in
sbb
add
leave
sbb
mov
in
jb
lods
xor
mov
xor
mov
push
int
add
cdq
inc
jne
xchg
cmp
xchg
jae
push
xor
gs
jmp
or
cdq
adc
push
mov
jg
mov
mov
pop
push
cmps
cs
scas
sub
jbe
repz
adc
xchg
add
and
call
add
pop
(bad)
jns
popa
mov
sbb
or
xchg
add
ja
mov
and
out
fcomp
jg
arpl
cmp
xchg
push
dec
call
inc
iret
je
inc
unpcklps
sbb
lods
out
lods
inc
push
or
jge
jae
loope
test
in
xchg
dec
into
lds
mov
and
movs
nop
enter
jno
leave
mov
ins
mov
mov
add
jbe
add
ja
jno
adc
xor
cmp
and
in
or
jnp
jae
cli
call
jae
dec
sbb
js
sar
inc
fiadd
cdq
add
jnp
into
jb
loop
dec
out
or
sbb
mov
or
jae
xchg
and
pop
cmp
mov
sbb
mov
cli
add
jg
lahf
mov
cmp
xchg
and
(bad)
mov
jb
dec
in
pop
adc
pop
cmp
push
mov
sub
lods
mov
pusha
jbe
fadd
mov
mov
in
push
ja
mov
jae
mov
pmaddwd
cli
in
in
pop
cmps
push
or
xchg
in
push
pop
fsubr
nop
pop
es
and
repz
stos
jb
dec
sub
sbb
ss
jmp
dec
sbb
sahf
or
stc
adc
pop
enter
outs
mov
jae
dec
hlt
adc
push
test
push
xchg
mov
loop
test
das
fbld
push
mov
(bad)
xchg
xchg
mov
sahf
add
jae
out
dec
cld
cmp
jne
cmc
pop
ins
cmp
out
push
mov
or
adc
sub
mov
mov
mov
mov
inc
je
aam
fisub
mov
sbb
xchg
sbb
scas
js
in
sbb
jno
dec
hlt
fld
jecxz
mov
jle
cdq
and
in
mov
loopne
fisubr
mov
mov
dec
and
adc
inc
(bad)
pop
dec
lea
xor
sub
mov
xor
push
xor
hlt
sub
pushf
jmp
jp
jg
scas
imul
lahf
mov
pop
jmp
pop
push
inc
xchg
adc
(bad)
cld
and
(bad)
jmp
imul
outs
push
inc
fiadd
mov
mov
pop
test
enter
sub
in
int3
sbb
mov
xor
mov
fmul
lds
out
adc
cmps
mov
les
das
pop
push
call
fimul
lahf
jb
xor
lahf
dec
mov
xor
sbb
imul
test
jmp
fadd
in
hlt
sub
xchg
xchg
inc
ret
sub
fs
fisttp
(bad)
aas
mov
xor
sbb
sub
dec
jo
mov
cli
inc
cmp
jge
pop
adc
std
ret
push
ja
mov
bound
or
dec
pop
int
cmc
das
call
inc
icebp
mov
push
mov
mov
gs
sahf
mov
dec
inc
je
je
test
test
ret
mov
imul
add
pop
stos
dec
sbb
cmp
jae
pop
jo
scas
pop
(bad)
stc
sbb
js
jns
add
jnp
sbb
push
fwait
jmp
es
test
inc
(bad)
in
xchg
out
xor
adc
dec
call
push
pop
inc
xchg
mov
xor
dec
mov
xchg
lods
dec
bound
jp
out
inc
adc
mov
adc
xlat
mov
xchg
jmp
repnz
jle
push
adc
imul
(bad)
aaa
inc
cwde
int
and
xchg
mov
xor
dec
add
xchg
inc
mov
mov
inc
(bad)
(bad)
es
jmp
stos
jb
mov
iret
stos
jno
repz
je
mov
push
dec
dec
fadd
xchg
out
or
ror
mov
mov
mov
push
or
loopne
jns
inc
jl
mov
mov
push
mov
mov
shl
cmps
nop
stos
rcl
jae
leave
in
imul
dec
pushf
xchg
adc
pop
bound
fwait
and
sub
sbb
mov
sbb
push
sub
sbb
or
cmp
aaa
xchg
dec
clc
jb
push
sbb
loope
mov
ss
rcl
scas
add
jno
test
mov
xchg
jl
cmp
jbe
das
dec
and
cld
jnp
and
imul
lods
jb
out
jecxz
imul
mov
lock
sub
dec
ins
aaa
sbb
fist
cwde
mov
int
dec
loope
ret
jecxz
mov
out
sbb
push
mov
lea
cdq
mov
data16
(bad)
fcomp
jbe
aad
out
ins
xchg
inc
pop
push
ror
pushf
mov
out
mov
aas
fcmove
outs
iret
(bad)
jl
mov
or
xchg
push
dec
xchg
out
dec
xlat
jno
neg
add
aam
into
xor
or
push
retf
push
scas
sbb
fdiv
je
fstp
xchg
add
fist
bound
pop
cmps
pop
popa
or
jbe
js
push
mov
xor
adc
dec
mov
and
inc
sub
je
pop
inc
out
pop
inc
sbb
mov
test
jg
or
and
or
(bad)
js
(bad)
mov
cld
sbb
mov
sbb
lock
aas
test
movs
shl
mov
xor
xchg
aaa
ds
popf
lds
pop
ret
mov
jae
jno
push
xchg
and
sbb
nop
mov
xchg
popf
xchg
popf
sub
mov
mov
xchg
in
xchg
rsqrtps
mov
jae
mov
(bad)
ins
xor
and
xlat
cmc
stos
stos
jmp
push
daa
(bad)
(bad)
xchg
xor
hlt
or
in
cmps
test
adc
sbb
loope
cmc
loope
push
clc
(bad)
(bad)
aad
mov
xchg
fst
jl
jmp
mov
scas
out
xor
outs
aas
sbb
sbb
outs
daa
xor
lahf
repz
xchg
add
mov
cdq
jb
jecxz
mov
cdq
retf
(bad)
pushf
jo
popa
jmp
mov
dec
inc
inc
(bad)
fnstcw
call
test
ins
mov
push
sbb
int
out
inc
(bad)
(bad)
sub
push
jle
pop
loopne
stos
sub
cmc
adc
icebp
(bad)
lods
popf
lock
dec
mov
mov
aas
sub
xchg
cwde
pop
pop
xchg
sbb
movs
inc
xchg
(bad)
mov
sbb
aam
mov
stc
mov
mov
mov
test
sbb
jmp
mov
ja
hlt
or
or
int
rol
in
xor
sub
js
add
aam
js
jp
jp
cs
cmp
dec
inc
xchg
shr
xor
mov
mov
xchg
daa
sbb
out
jb
sbb
(bad)
push
mov
ficom
adc
lods
jae
movs
xlat
inc
jle
test
xchg
pop
jne
shl
movs
adc
mov
and
or
adc
lds
dec
sub
aam
cdq
cld
xchg
xor
(bad)
js
(bad)
sbb
aas
pop
inc
mov
xor
pushf
sbb
push
fs
mov
in
jae
xchg
fstp
retf
dec
jb
cmp
clc
dec
aam
test
stos
xor
retf
jns
push
arpl
mov
dec
xchg
nop
sbb
lods
inc
add
jmp
fmul
repnz
(bad)
dec
mov
in
cmps
call
stc
mov
daa
fldenv
mov
mov
mov
and
nop
stos
push
mov
push
add
or
enter
mul
jl
cmp
in
mov
mov
jbe
mov
call
mov
(bad)
adc
ja
push
jae
fist
and
sbb
test
pop
adc
popa
jmp
mov
push
mov
push
add
imul
sbb
hlt
inc
pop
dec
and
jae
sbb
shl
pusha
inc
or
movs
add
cmp
cmp
add
pop
mov
fiadd
ret
dec
(bad)
fcomip
jae
cs
fst
or
stc
cdq
out
and
push
lea
mov
mov
and
sbb
adc
mov
popa
add
(bad)
push
or
adc
out
in
push
test
adc
sahf
mov
xchg
xchg
cmp
movs
rol
and
or
sub
ficom
pop
dec
repz
or
(bad)
jge
cmp
mov
sti
stos
iret
call
bound
imul
int
xchg
xchg
fstp
add
sub
push
test
or
jo
push
push
xor
repz
push
mov
sbb
and
sbb
in
push
lahf
cld
inc
jb
pop
jae
sar
sbb
cmp
mov
vzeroall
pop
int
jle
xor
cmp
scas
arpl
xchg
or
enter
jmp
mov
mov
dec
xchg
mov
shl
cs
repz
fimul
dec
ret
mov
ins
pop
cmp
xchg
adc
sar
fstp
in
sbb
test
ins
xchg
mov
ret
hlt
movs
xlat
jns
sub
mov
xchg
or
ins
mov
xchg
sbb
lds
mov
(bad)
jne
add
xlat
lock
mov
jp
dec
hlt
and
jne
jo
cld
push
aas
sbb
movs
xor
push
scas
loopne
jns
pop
cmp
jno
ja
inc
mov
pcmpeqw
pop
xor
push
push
xor
mov
cmp
test
jns
(bad)
mov
cmp
scas
out
ins
push
mov
nop
sqrtps
sub
sub
dec
ficom
in
inc
jb
ret
xor
push
push
mov
pop
ret
and
push
push
cmp
cdq
and
cmp
and
dec
sbb
std
movs
xor
cli
dec
packuswb
jns
pop
les
jae
ins
aad
or
jb
stc
pop
js
and
inc
repz
inc
mov
adc
cmp
xor
mov
push
hlt
sub
adc
jp
repnz
popa
mov
bt
sbb
cwde
dec
xchg
fdivr
js
loopne
push
jbe
aaa
dec
mov
ss
sbb
mov
stos
sbb
sbb
lods
mov
pop
push
cmp
inc
in
sub
stc
xor
das
icebp
sub
dec
(bad)
(bad)
retf
rcr
sub
push
scas
or
imul
sbb
mov
sbb
xchg
inc
push
mov
cld
xchg
aad
out
icebp
xchg
push
cs
int3
jmp
add
cmps
sbb
clc
cmp
pop
dec
rcr
dec
sub
mov
mov
add
dec
pop
jmp
pop
sahf
or
jae
mov
mov
lahf
imul
jge
and
sbb
jge
push
outs
sbb
sub
or
add
sahf
adc
ret
sbb
ss
pop
(bad)
(bad)
pop
das
and
sbb
stos
lock
push
ret
xchg
retf
test
sti
rcr
cdq
push
lds
xor
sti
popa
aaa
(bad)
loope
jae
clc
loop
leave
push
pop
xchg
add
jmp
mov
add
cmp
mov
push
add
sub
popf
fmul
inc
das
out
lea
cmp
hlt
xor
in
popf
mov
mov
pop
sbb
xchg
lods
cmps
enter
imul
inc
push
sbb
aas
xor
je
xor
nop
xor
fcom
inc
jo
and
xchg
mov
ja
loope
jnp
or
mov
es
aam
xor
out
sub
nop
pop
xor
mov
jmp
hlt
nop
out
stc
inc
adc
out
pushf
bound
mov
sar
jae
lods
sti
or
bound
push
mov
fdiv
pop
mov
ins
aam
add
and
push
pop
test
lods
jae
retf
jnp
jb
jb
sbb
mov
call
cmp
je
mov
inc
mov
and
xchg
repnz
dec
jae
in
movs
cmp
pop
mov
mov
in
gs
mov
dec
xchg
mov
js
cdq
pop
dec
pushf
test
inc
sub
imul
push
fsubr
dec
mov
xor
jmp
push
inc
xchg
lods
xchg
enter
add
jae
inc
inc
shr
inc
push
aas
adc
fnsave
test
stos
scas
lea
(bad)
fstp
jecxz
(bad)
and
mov
xor
inc
cmp
call
js
xor
and
fdiv
(bad)
(bad)
fst
or
xchg
add
movs
or
xor
push
outs
arpl
repnz
aam
push
xchg
popa
mov
mov
jg
or
ret
jae
push
lds
sub
lods
pop
and
std
inc
cmp
aas
lods
js
movs
nop
adc
xchg
pop
dec
xchg
stos
xchg
or
jecxz
inc
push
sub
xlat
das
jbe
test
cmc
sbb
sub
mov
call
xchg
fst
xor
jae
xlat
cdq
inc
jo
jmp
push
sahf
xchg
jp
push
and
out
rcr
push
popf
pushf
aad
inc
test
jb
xor
mov
adc
sub
sub
sbb
adc
mov
daa
or
jno
leave
les
test
fstp
mov
movs
and
shr
dec
xchg
in
fs
xchg
pop
xchg
jmp
clc
cmps
bnd
push
adc
cmp
das
test
loop
arpl
cmc
push
pushf
lods
jl
ins
cmp
retf
mov
(bad)
or
lds
(bad)
bound
jmp
gs
dec
sbb
jae
dec
sbb
xchg
xchg
and
or
loop
xor
imul
ins
xchg
in
cmp
jp
je
xor
xchg
xor
cmp
mov
jae
mov
xor
sub
cwde
cli
xchg
jnp
mov
cmp
mov
xor
into
mov
mov
push
mov
sub
out
es
jo
jns
and
cmps
shr
repz
cmp
xchg
ja
or
jmp
test
and
jecxz
xor
push
shl
clc
add
stos
test
xchg
push
cmps
cmp
adc
sar
xor
daa
ins
movs
inc
cld
sbb
fcomp
push
or
dec
sbb
pop
outs
lahf
ret
inc
fisub
pop
sub
jnp
ds
push
cmp
(bad)
jb
lds
push
cdq
movs
stos
or
mov
cmp
enter
push
hlt
aas
fcmovnu
mov
icebp
pushf
xchg
inc
jmp
es
cwde
sbb
lds
sahf
lahf
add
rol
cwde
mov
repz
xor
inc
pop
imul
loopne
pop
inc
xor
xchg
xchg
mov
fild
adc
jb
ja
lock
add
dec
inc
or
cmps
sbb
in
inc
ficom
ins
xlat
in
jae
mov
xchg
add
shl
mov
push
xor
je
or
ins
sub
in
jmp
sar
shr
add
adc
int3
fst
and
xchg
and
iret
icebp
loope
xor
in
mov
inc
dec
xor
mov
xor
push
or
jae
jle
scas
aas
repnz
ja
xlat
mov
and
ds
rcl
(bad)
int
jge
call
arpl
xchg
out
cmp
and
xor
xchg
cmp
xchg
xor
ret
enter
inc
mov
pop
mov
dec
inc
test
ds
jmp
test
mov
sbb
push
pop
xor
(bad)
and
call
sbb
jae
adc
push
jmp
stos
mov
and
mov
mov
in
sbb
shl
jmp
fst
(bad)
call
repnz
movs
arpl
xchg
in
inc
cmc
mov
lea
pop
pop
pop
call
pop
inc
ins
cmp
jmp
repnz
jno
fwait
fwait
sti
push
xor
xor
imul
bound
cmp
int3
sbb
mov
js
mov
mov
adc
sbb
mov
push
push
retf
push
dec
inc
sti
scas
dec
push
and
mov
mov
hlt
test
xor
sub
stos
ja
dec
jmp
mov
or
mov
xchg
add
mov
push
sbb
dec
or
cwde
pop
ret
jns
rcl
rcr
lods
mov
dec
jae
ja
inc
ja
repz
inc
sti
inc
mov
scas
pop
sbb
mov
dec
or
stos
xlat
imul
inc
xor
inc
ss
test
mov
data16
mov
pop
and
stc
and
jb
pop
mov
jg
xchg
pop
ficom
or
adc
xor
test
cmp
fild
mov
je
pop
stc
(bad)
loop
in
sbb
mov
les
push
cld
cmc
sub
mov
test
fist
xchg
mov
jmp
shl
push
js
sbb
dec
push
mov
push
inc
arpl
cmp
and
int
mov
stos
sub
xchg
scas
add
inc
test
jb
push
and
call
ror
push
jne
xor
(bad)
fisubr
xor
mov
pop
add
jne
int3
emms
mov
pop
mov
lahf
fdiv
sbb
sbb
inc
xor
sbb
(bad)
sub
pop
sbb
dec
sbb
lahf
inc
xor
pushf
push
cli
add
cmps
les
gs
int3
(bad)
and
rcl
mov
push
add
ins
or
dec
mov
nop
adc
div
leave
and
xchg
sub
cmp
aas
adc
xor
xchg
lods
addr16
fld
call
cmp
and
add
ja
xchg
ins
leave
or
add
rcr
mov
adc
pop
dec
leave
je
outs
sub
lods
jns
cmp
jae
ins
xchg
pop
lds
and
test
mov
jbe
mov
push
xchg
or
fs
push
fadd
sahf
repz
add
xchg
cdq
push
xchg
shr
dec
cmp
cmp
repz
pop
stc
adc
sbb
dec
and
xor
add
adc
int3
sbb
sbb
lock
sub
xchg
mov
in
fs
xor
jns
ficom
add
ss
xor
aam
cmp
dec
sbb
sbb
mov
jge
js
loop
xchg
mov
inc
clc
xor
inc
out
repz
fidiv
push
mov
mov
pop
and
mov
pop
jns
push
nop
jae
sti
and
or
pushf
sbb
add
push
mov
aam
fstp
cmp
cld
xor
or
dec
data16
sar
call
test
pushf
dec
sar
fwait
jmp
jle
mov
mov
dec
sbb
dec
fld
xchg
adc
outs
add
stc
xor
push
inc
mov
and
out
xchg
and
jbe
add
pushf
add
xchg
cmp
fdiv
adc
test
push
mov
adc
adc
addr16
aam
stos
mov
imul
add
xchg
pop
inc
pop
shr
arpl
in
and
lock
xor
inc
pop
aaa
sub
loope
ins
ins
push
and
(bad)
sbb
iret
sbb
sub
das
jae
mov
in
pop
fimul
sbb
jbe
mov
enter
retf
fs
pushf
fiadd
xchg
mov
lahf
js
dec
je
pop
mov
aad
ja
jp
sbb
cdq
xchg
test
not
cwde
sar
addr16
or
or
jl
imul
and
fstp
sub
lods
jae
aad
pop
cmp
mov
mov
cld
cdq
imul
or
adc
retf
test
rcr
pop
xchg
pop
scas
pop
or
and
push
fisubr
adc
push
pop
mov
push
in
push
cld
clc
xchg
call
sbb
imul
xor
xchg
xchg
add
lock
adc
jb
ret
fsubr
xor
mov
sbb
repz
inc
test
push
sahf
mov
hlt
push
adc
push
pop
test
cmp
push
js
xchg
adc
adc
retf
xor
push
push
sbb
pusha
loop
jg
jb
out
test
push
call
sbb
mov
inc
int
leave
sbb
not
out
sbb
xchg
add
xchg
nop
fidiv
lock
cmc
and
sbb
dec
rcr
cli
mov
push
push
int
jns
lods
in
pop
dec
(bad)
jae
inc
call
clc
sbb
jns
mov
mov
movs
fld
jmp
std
outs
push
or
dec
shl
jnp
and
sub
cdq
jbe
jp
and
or
scas
test
jg
mov
sbb
outs
(bad)
jg
jl
xchg
cmp
xchg
cmovne
mov
ror
lods
inc
movs
sbb
jg
pusha
adc
sub
rol
xor
test
or
lea
inc
fist
jae
jp
(bad)
call
sahf
fwait
xor
stos
ds
rcl
or
scas
pop
mov
bound
adc
dec
loop
jmp
inc
mov
popa
ins
ss
iret
sub
mov
jbe
xchg
jmp
and
(bad)
sbb
ins
sbb
les
(bad)
xor
xchg
in
mov
xchg
pop
push
leave
aaa
pushf
sbb
dec
sub
cmp
jae
xor
mov
je
adc
mov
jns
mov
jp
ret
mov
loopne
push
inc
fwait
dec
bound
xlat
and
jae
ds
scas
cwde
daa
xchg
sbb
or
xchg
mov
sti
aad
cmps
dec
hlt
test
sbb
pop
pop
arpl
push
or
loopne
jae
out
adc
xchg
adc
cmc
jl
jge
mov
popa
enter
stc
fsub
std
dec
mov
(bad)
sbb
in
les
adc
mov
mov
repnz
push
and
xchg
daa
sbb
adc
mul
pop
or
mov
movs
mov
lea
leave
cld
mov
hlt
ficom
dec
out
jae
push
outs
aam
and
cmps
cmc
outs
dec
es
hlt
mov
dec
pop
xor
rcr
stos
loopne
scas
mov
xchg
mov
sub
cs
sahf
movs
xor
cmp
sbb
(bad)
outs
xchg
fistp
xrelease
dec
lea
mov
push
gs
xchg
mov
sbb
mov
imul
js
stos
xchg
pop
jmp
movs
sub
sahf
jo
retf
push
pop
icebp
add
mov
dec
cmc
add
pop
xchg
mov
or
dec
rcl
xchg
imul
lock
xor
xchg
dec
aaa
daa
cld
out
dec
push
inc
mov
pushf
sti
sar
mov
imul
mov
jl
xor
inc
int
sub
aam
cmp
inc
fwait
dec
push
sub
repnz
xchg
sub
shl
test
inc
dec
test
pop
ja
dec
inc
(bad)
mov
xor
jp
stos
xchg
mov
fs
xor
push
and
and
jno
std
sbb
push
or
stos
mov
int3
xchg
out
mov
fcom
je
adc
repnz
imul
xchg
xchg
push
cmps
xor
mov
dec
dec
fucomi
jnp
mov
cmc
sub
pop
clc
jo
sbb
pop
aam
outs
loope
cmp
and
mov
das
inc
mov
ret
xchg
adc
ins
xor
dec
jb
mov
xchg
aad
les
test
jmp
gs
mov
pop
sbb
mov
dec
clc
add
call
popf
in
xlat
loopne
stos
in
ja
call
sub
xor
xchg
cbw
push
inc
stc
out
stos
sbb
js
sbb
(bad)
mov
aaa
retf
mov
je
ror
push
outs
add
movs
and
ret
(bad)
aam
je
movs
loope
iret
xchg
inc
mov
aaa
out
cdq
mov
shl
adc
cmp
lahf
gs
push
push
xlat
jbe
dec
jmp
dec
fisub
std
mov
inc
enter
sbb
sbb
imul
jecxz
mov
adc
jp
mov
fiadd
xchg
jg
(bad)
jp
(bad)
stc
xor
dec
sub
pop
aam
sbb
mov
xchg
mov
fdivr
outs
repz
out
lea
or
imul
add
mov
jns
xchg
mov
loope
xchg
fucomp
adc
mov
inc
sub
push
or
and
popf
loop
shl
int
out
xor
and
in
test
xchg
jo
pusha
rcl
mov
cmp
cmp
xchg
push
shl
shr
jae
mov
jbe
test
hlt
mov
hlt
int
pop
mov
mov
pop
xor
jg
mov
(bad)
cli
cli
(bad)
jnp
dec
jne
and
inc
mov
bound
cdq
push
xlat
stos
xchg
mov
and
aam
jecxz
mov
dec
in
cld
mov
retf
dec
mov
push
push
dec
jae
mov
jns
xchg
adc
sub
popf
or
js
adc
dec
push
imul
inc
loopne
cmps
in
ins
jecxz
cmps
test
(bad)
std
inc
adc
test
mov
sbb
sbb
mov
sub
lds
sti
lods
aam
les
nop
and
dec
movs
ss
ret
xchg
adc
inc
sub
or
mov
mov
mov
sbb
inc
das
add
mov
stos
dec
icebp
into
shl
add
adc
(bad)
mov
xor
or
push
xchg
mov
pop
retf
leave
jne
cmp
outs
clc
xchg
ror
sbb
aaa
loop
sbb
mov
lds
stos
retf
jp
sub
popa
mov
jbe
mov
mov
daa
mov
cmp
test
or
(bad)
icebp
gs
adc
or
mov
mov
sub
pop
and
in
push
pop
retf
cli
lods
jmp
(bad)
lock
push
xchg
dec
lods
pop
gs
dec
cmp
cmp
mov
cmp
fwait
dec
mov
and
inc
xchg
xchg
xor
fs
xor
in
inc
pop
scas
xor
ja
int
cmp
sub
adc
inc
ds
sub
add
out
jmp
cmps
and
add
jp
xchg
ret
xor
mov
and
jo
xchg
and
xchg
xor
lods
pushf
jae
xchg
adc
pcmpgtd
mov
mov
push
sub
fidivr
cmps
xchg
mov
sti
inc
loop
stos
cmc
push
mov
outs
lahf
int3
mov
inc
out
retf
ret
inc
pop
sbb
xchg
adc
or
mov
shl
pop
retf
push
add
adc
jb
enter
lea
adc
retf
cmps
jne
jbe
sub
je
xchg
(bad)
jmp
add
sbb
pop
pop
jl
dec
inc
rcr
adc
push
pop
mov
out
mov
push
cmp
mov
cld
jle
inc
pop
int
rep
in
push
xchg
and
mov
mov
sbb
shr
inc
retf
push
mov
push
jns
dec
inc
out
jge
gs
cmc
(bad)
fisub
cmp
jae
(bad)
call
mov
push
fisub
call
sub
(bad)
in
aam
sub
fbstp
lea
cmps
mov
ins
fsub
cmp
mov
fcom
movs
cmps
push
cmp
(bad)
adc
inc
pusha
mov
xchg
stos
cmps
mov
mov
mov
in
stc
pop
jg
pop
xchg
xchg
pop
rol
in
data16
pop
out
and
pop
sbb
xor
jo
stos
mov
mov
je
inc
sar
fild
(bad)
ja
push
pop
cli
sbb
cmp
dec
xchg
movs
jae
jns
pusha
out
adc
add
cmps
add
dec
mov
mov
std
dec
and
(bad)
pop
(bad)
sub
pop
inc
bound
call
mov
dec
pop
jmp
push
sub
jns
arpl
xchg
sbb
je
dec
sub
pop
xchg
mov
xor
fistp
inc
nop
xchg
sbb
cmps
test
sbb
sub
mov
sti
ret
fidiv
sub
jae
sbb
push
stos
pop
dec
xchg
push
sti
cmps
arpl
jge
jo
inc
fcomip
cmp
inc
outs
arpl
sahf
outs
ret
movs
push
dec
inc
(bad)
out
jmp
mov
sub
hlt
outs
inc
sar
rol
jns
into
pushf
data16
inc
ffree
cmp
add
popa
sbb
aad
(bad)
xchg
mov
shl
mov
sub
mov
arpl
jne
nop
stos
xor
fwait
cmp
imul
clc
sub
call
dec
sbb
sub
and
and
ins
sub
or
and
jae
repnz
adc
aas
fnstenv
pushf
in
jle
hlt
iret
cmp
inc
pusha
sub
ds
daa
jnp
push
mov
stos
enter
pop
lods
mov
enter
sbb
cwde
xchg
pushf
js
not
out
repz
hlt
fsubr
inc
and
(bad)
xchg
out
xchg
inc
xor
and
std
imul
in
mov
mov
push
test
sbb
jge
mov
icebp
(bad)
sub
test
sbb
push
jecxz
out
imul
pop
push
jp
jg
repz
inc
fild
sub
call
mov
leave
sbb
shl
in
in
rcl
hlt
pop
ret
mov
mov
jae
push
pusha
in
mov
iret
xchg
lods
pop
icebp
dec
xchg
sbb
arpl
loope
jl
jmp
je
mov
mov
rcr
adc
daa
cli
mov
adc
stos
push
sub
xchg
dec
xor
mov
adc
retf
mov
mov
jg
nop
(bad)
jae
mov
inc
mov
call
loope
xchg
int
(bad)
xchg
or
hlt
and
sbb
sbb
cdq
mov
in
(bad)
sbb
dec
xchg
push
and
inc
lea
(bad)
outs
push
imul
test
ret
fiadd
or
in
bound
test
inc
xchg
inc
mov
xlat
jmp
stos
rep
aam
pop
test
int
ror
out
or
mov
enter
adc
xor
adc
mov
leave
sbb
inc
jecxz
repnz
out
cs
lahf
mov
pushf
pop
push
sysret
(bad)
iret
xchg
cmp
out
xor
mov
sub
popf
cmps
jle
adc
dec
xchg
xchg
nop
and
int3
add
or
mov
mov
sti
std
xchg
xchg
out
test
inc
sbb
jb
inc
xchg
clc
pop
inc
xchg
fimul
xchg
dec
rol
(bad)
push
pop
mov
imul
call
mov
stc
fwait
mov
lock
lahf
inc
xor
mov
rol
mov
sbb
sub
je
outs
sbb
xchg
sahf
xchg
out
xor
inc
mov
push
sbb
(bad)
jns
ds
and
imul
cmp
(bad)
int
clc
push
push
xor
mov
mov
ds
outs
mov
bound
outs
and
fnsave
dec
xchg
push
dec
je
fld
xor
ins
mov
mov
lods
test
sbb
aam
push
int3
fwait
or
imul
add
retf
cwde
jae
test
mov
mov
cs
scas
ins
add
adc
inc
sbb
pop
stc
retf
mov
fisub
shl
xchg
fidivr
mov
mov
lock
xor
movs
adc
ja
mov
inc
das
mov
dec
inc
fmul
jae
stc
add
int3
push
jns
retf
xor
adc
jmp
mov
cmps
inc
jns
ret
ss
mov
xor
add
sbb
jne
adc
or
iret
pushf
es
outs
(bad)
pop
inc
(bad)
fcomp
or
jmp
idiv
in
repz
inc
sub
mov
push
std
int3
shl
sbb
loop
or
jae
cmp
adc
or
test
outs
(bad)
push
clc
add
mov
sbb
std
add
push
sbb
cwde
out
int
fcomi
jne
inc
es
movs
cmp
inc
(bad)
lahf
jno
rcl
and
push
or
fs
js
mov
mov
mov
inc
mov
push
cmp
das
xor
mov
sub
jmp
push
js
aas
fidivr
sub
cdq
ror
jae
push
xor
sbb
sub
mov
je
push
jae
adc
jecxz
mov
movs
jg
nop
xchg
jae
retf
xchg
add
xchg
add
push
push
xor
jns
mov
arpl
inc
js
in
test
sti
lds
hlt
rol
sti
stos
mov
cdq
addr16
xlat
cmp
test
pop
(bad)
out
sub
xchg
adc
xchg
lods
mov
ds
adc
sub
aad
sbb
retf
popf
push
push
mov
fmul
xchg
add
pusha
ins
daa
mov
dec
fist
out
dec
inc
sbb
fimul
mov
pop
aaa
push
xor
jb
and
dec
lahf
(bad)
add
ss
(bad)
jmp
test
and
dec
in
push
rcr
dec
pop
fiadd
jg
mov
lods
dec
out
loopne
xchg
add
pop
dec
pop
(bad)
adc
ficom
jns
retf
icebp
pop
jp
mov
int3
imul
push
add
sbb
dec
mov
mov
jge
adc
push
pop
jmp
jae
xor
mov
pop
sbb
inc
pop
imul
inc
or
hlt
out
jb
and
loope
mov
cvtpi2ps
inc
mov
cmp
ins
lds
sbb
mov
(bad)
mov
mov
aaa
fadd
out
nop
xor
mov
mov
test
add
lods
pushf
fmul
adc
mov
mov
stos
pop
push
iret
push
jnp
mov
call
scas
cmp
push
ret
add
leave
jo
dec
push
lds
push
test
je
pop
mov
xchg
shl
jmp
adc
outs
fidivr
mov
aam
(bad)
cwde
xchg
mov
enter
xor
adc
dec
or
mov
loop
loopne
xchg
std
and
lods
les
icebp
sub
(bad)
xchg
or
pop
imul
shr
and
mov
and
xchg
pop
in
test
dec
cwde
fcomp
movs
aam
call
adc
sbb
pop
mov
sbb
and
mov
mov
mov
push
ins
outs
or
add
mov
xlat
push
push
mov
cmp
mov
stc
sbb
sbb
pcmpeqw
das
xchg
sbb
mov
aas
jae
cmps
sbb
addr16
cs
or
scas
xchg
stos
in
inc
xchg
adc
call
je
dec
fstp
and
adc
adc
cld
stos
pop
cmp
inc
jmp
sub
pop
adc
shl
les
jae
push
mov
push
xchg
rcr
sbb
mov
int
inc
adc
mov
in
or
jne
xchg
add
and
lods
pop
xchg
push
sar
imul
mov
or
mov
cld
fsub
pop
loop
ss
icebp
mov
stc
cmps
adc
stos
scas
pop
xchg
pop
inc
push
push
out
hlt
pushf
loop
test
jae
pusha
sub
das
add
sbb
sbb
(bad)
std
mov
jnp
clc
sub
push
fsubr
mov
jp
jns
(bad)
btr
lds
pop
and
cmps
sbb
fcompp
or
fwait
push
fcomp
inc
mov
je
mov
push
out
std
adc
xor
movs
sub
imul
add
lea
mov
cmp
je
in
in
push
jmp
das
cmp
cmp
or
fnsave
cld
dec
pop
pop
jle
jae
and
push
pop
mov
mov
(bad)
sub
and
pop
mov
gs
inc
(bad)
push
and
adc
push
inc
and
sub
call
cmc
pop
test
jns
and
and
cli
dec
stos
pop
jne
cmps
out
je
adc
mov
jecxz
das
cmp
scas
xchg
pushf
sbb
xor
cld
xchg
xchg
fsub
mov
stos
in
pop
jecxz
(bad)
xor
in
stos
xchg
cmp
mov
outs
and
aam
fsubr
add
jo
mov
xor
sbb
mov
cmp
(bad)
fwait
popa
mov
mov
add
clc
adc
lods
pop
mov
and
mov
out
and
cmp
lahf
mov
scas
mov
and
dec
cmp
xchg
mov
mov
mov
ja
mov
cmp
xor
call
daa
sub
aaa
xlat
and
pushf
mov
pop
mov
icebp
bound
ja
cli
mov
mov
enter
mov
cmp
mov
(bad)
and
popa
not
add
jae
in
inc
dec
dec
adc
sbb
cwde
dec
fistp
pop
fcmovnb
aam
loop
int3
push
fsub
data16
lahf
push
xor
stos
cld
shl
jae
inc
sbb
cmp
push
pop
in
sub
lock
fist
inc
sbb
test
cwde
imul
js
push
and
cmp
(bad)
retf
push
or
div
imul
ret
stc
push
mov
clc
imul
or
xor
dec
fadd
cmp
dec
nop
ins
movs
or
loopne
je
or
inc
push
fadd
xchg
mov
shl
(bad)
cli
xchg
(bad)
push
mov
lock
jge
js
jmp
mov
jmp
xchg
mov
cmps
loope
inc
call
shl
adc
inc
push
jge
bound
daa
pop
sbb
lea
ins
lock
jae
or
out
jo
call
dec
mov
adc
cmp
or
xchg
shl
jb
outs
mov
js
inc
pop
addr16
aaa
sbb
sbb
push
cmps
sub
or
hlt
add
mov
push
sbb
ins
ret
inc
xchg
push
and
(bad)
mov
mov
jl
fs
and
mov
or
jp
inc
mov
xchg
jg
inc
je
sbb
cmp
mov
retf
mov
push
imul
outs
les
fwait
pop
(bad)
sub
outs
lods
jb
retf
sub
add
jae
jns
xchg
int3
stos
mov
lods
bound
xchg
mov
shr
(bad)
mov
aaa
ins
leave
ins
fsubr
pop
(bad)
xchg
cmovns
pop
pop
push
cdq
mov
push
int3
sbb
adc
leave
out
je
xchg
shl
std
test
inc
sbb
jno
cmps
(bad)
mov
arpl
cmp
pop
mov
or
imul
pop
movs
push
xor
(bad)
ins
xchg
sbb
pop
cmps
jp
cwde
sahf
mov
xchg
push
aaa
fst
stos
cmps
adc
cmps
mov
and
iret
hlt
mov
lods
push
cmp
out
cmp
sub
mov
xchg
(bad)
pushf
div
iret
in
jne
inc
fiadd
jo
cdq
call
jae
mov
fisubr
add
aaa
repnz
sbb
pop
xor
scas
sub
ss
cmp
pop
inc
scas
es
mov
fild
sbb
mov
and
inc
mov
aam
sbb
push
mov
add
ror
push
cmp
xor
or
iret
xchg
mov
enter
inc
or
add
inc
mov
mov
inc
cld
adc
pop
mov
mov
xchg
jp
aad
push
stos
xchg
and
adc
ret
inc
test
iret
movs
call
sub
mov
and
xchg
cmc
popa
fidivr
(bad)
fisttp
jl
nop
xlat
or
sbb
and
xor
push
not
ja
inc
cmp
push
sub
pop
mov
or
mov
int
sub
pop
mov
sub
adc
xor
ret
das
aad
das
jns
fs
je
xchg
mov
leave
mov
cld
hlt
xor
jo
sbb
inc
cmp
and
(bad)
call
mov
jmp
jg
xor
mov
call
sbb
out
imul
cld
jae
and
mov
test
jge
out
adc
outs
mov
aam
sbb
fidiv
jae
test
mov
sbb
lds
aas
ror
jg
or
push
ja
call
lahf
cmps
test
or
cmp
iret
pop
mov
pushf
arpl
cmp
mov
ss
xor
mov
adc
xchg
push
or
and
dec
dec
out
jae
add
cmp
aad
or
aad
sub
xchg
xchg
call
mov
repnz
cmp
fistp
mov
adc
stos
push
nop
dec
retf
add
xchg
jge
call
mov
mov
mov
outs
xor
xlat
js
xchg
cmp
dec
cmp
add
(bad)
and
push
sbb
popa
lds
mov
stos
add
dec
arpl
push
push
jno
(bad)
xchg
jecxz
scas
jo
mov
rol
pop
adc
fsubr
sbb
bswap
fs
adc
ret
hlt
mov
scas
mov
cmps
pop
push
xchg
sub
stos
mov
movs
xchg
js
sub
jae
pop
push
jg
push
pop
or
mov
arpl
movs
xchg
inc
mov
push
daa
les
push
jb
aad
inc
cs
js
retf
test
push
mov
jnp
scas
xchg
fcomp
sbb
or
mov
ret
fwait
mov
mov
mov
dec
fisub
add
dec
fist
cmp
mov
jecxz
gs
or
add
movq
imul
ss
xor
xor
pop
sub
rol
xchg
or
(bad)
loopne
lock
xchg
les
or
hlt
jb
push
pop
lea
mov
ja
rcl
fdivr
jg
pop
repnz
jmp
rcl
dec
mov
jl
test
or
and
(bad)
mov
push
fsubr
pop
stos
mov
sub
pop
test
adc
adc
jno
in
adc
(bad)
out
daa
aam
adc
cmp
sbb
(bad)
in
mov
pop
js
cmp
and
fs
cmp
push
sbb
push
mov
mov
call
call
add
add
adc
jg
jne
push
inc
xchg
sahf
(bad)
clc
or
dec
pop
int
jae
cld
jp
sbb
xchg
jns
(bad)
sbb
jb
jge
add
sbb
aam
fstp
fisttp
sub
and
inc
pop
inc
lea
sbb
das
mov
mov
adc
bound
add
enter
pusha
jl
push
shl
nop
cmp
lods
xor
sbb
xchg
cmp
push
jmp
push
xchg
(bad)
sahf
cmp
mov
retf
lock
lahf
mov
jb
mov
push
pop
and
mov
cmp
inc
sub
push
cmps
sbb
xchg
pop
jmp
sub
jae
shr
retf
call
add
add
out
xchg
mov
popa
stos
rcl
daa
daa
idiv
jae
adc
cdq
sbb
js
xor
adc
sub
and
sbb
lods
les
mov
dec
mov
and
pushf
js
scas
in
mov
xchg
push
hlt
push
movs
push
fs
or
sbb
dec
dec
das
and
fimul
add
pop
out
out
stos
adc
cs
pushf
mov
lds
dec
icebp
inc
xchg
push
xor
neg
pop
adc
icebp
movs
imul
mov
cld
sbb
das
shl
adc
or
xchg
and
daa
xor
imul
push
cmp
mov
jae
push
mov
xor
mov
sub
sbb
cld
addr16
xor
movs
mov
add
lods
ja
add
repz
int3
mov
add
adc
cmp
call
pop
push
add
mov
mov
xchg
xchg
xchg
lea
push
sub
es
fdiv
fdivr
inc
xor
xor
rcl
arpl
mov
sbb
pop
adc
repz
arpl
mov
lock
pushf
cli
mov
xchg
mov
mov
stc
jae
popf
and
jmp
or
and
add
in
imul
mov
push
cmp
push
add
jae
dec
jno
pop
xor
dec
gs
clc
inc
xchg
mov
stc
mov
cmc
and
les
push
pop
sub
fwait
pop
test
retf
xchg
and
mov
jae
sbb
xor
gs
push
mov
and
pop
mov
sub
daa
je
in
xchg
xor
(bad)
out
je
dec
inc
xor
std
or
aas
and
xchg
into
jb
jle
mov
inc
xchg
jmp
subps
in
sub
sbb
sbb
xor
adc
ja
in
dec
ror
adc
sub
xlat
adc
adc
enter
repnz
dec
mov
ins
or
test
sbb
aam
lock
mov
sbb
adc
repz
and
push
sahf
inc
fnstcw
int3
sub
dec
xor
fcmovne
cmp
xchg
mov
mov
sub
gs
mov
xchg
adc
(bad)
jmp
jae
mov
jb
push
sbb
adc
sti
push
mov
test
outs
cdq
jg
jbe
lods
out
jae
push
mov
add
sbb
jp
lea
mov
pop
and
(bad)
mov
xchg
jns
hlt
jp
addr16
jae
xor
mov
xchg
test
ret
and
xlat
dec
mov
mov
jne
les
sbb
push
cmp
fcmovu
mov
je
aas
sub
(bad)
fld
cmp
mov
gs
xchg
lds
mov
and
mov
xchg
mov
fnstenv
jb
sbb
jnp
ins
sbb
jmp
icebp
mov
and
dec
xchg
push
mov
repz
les
sub
test
add
aam
push
xor
aaa
push
and
jl
sbb
mov
jo
mov
jns
call
enter
jbe
mov
and
inc
dec
xorps
push
call
jg
test
fcomp
mov
in
fistp
adc
push
movs
mov
mov
out
xor
sbb
jmp
stos
je
mov
enter
jge
push
ror
nop
mov
jp
popf
(bad)
ret
inc
sub
sbb
int
jae
in
cmp
push
lea
adc
das
add
and
or
dec
and
mov
daa
pushf
push
test
add
mov
lea
lds
rcr
arpl
lahf
add
push
daa
inc
neg
mov
imul
bound
and
test
shl
xchg
jb
xlat
fnstcw
movs
rcr
pop
adc
cmp
clc
lds
xchg
jne
xlat
mov
neg
imul
ficom
imul
cmp
les
(bad)
cld
pop
lea
mov
xchg
xchg
mov
inc
inc
movs
xchg
jecxz
retf
xor
add
add
cmp
sbb
ins
add
jmp
mov
inc
mov
js
push
jne
scas
and
mov
fist
fwait
xchg
inc
jae
sub
dec
mov
je
inc
push
inc
movsx
jp
mov
push
imul
and
or
adc
js
stos
out
jnp
add
sbb
and
mov
sub
cmp
xchg
mov
mov
add
aas
das
pause
(bad)
jl
pop
js
int
pushf
lods
nop
out
icebp
lea
shl
xor
adc
sbb
sbb
mov
int
jle
out
dec
adc
scas
sti
ins
fimul
movs
call
or
xchg
sahf
push
adc
dec
cmp
mov
or
clc
stos
ja
xchg
popa
movs
xor
push
test
xchg
cmp
mov
outs
loopne
jmp
xchg
aad
cmp
dec
cld
xchg
out
dec
mov
ret
gs
mov
xor
js
mov
cmp
add
xchg
sub
ds
clc
dec
sub
int
test
mov
or
add
inc
mov
sbb
leave
lods
leave
bound
sbb
test
pop
mov
clc
dec
mov
stos
cmps
movs
cmp
or
adc
mov
sbb
and
mov
cwde
inc
popa
xchg
inc
imul
scas
mov
jmp
outs
jg
and
sbb
and
sti
stos
scas
or
loop
cwde
hlt
adc
ins
into
int
js
adc
(bad)
sub
hlt
pop
fstp
mov
adc
ror
in
push
pop
clc
icebp
jl
enter
xor
repnz
jae
out
shl
pusha
sbb
sbb
cli
push
leave
mov
jmp
rcl
add
dec
addr16
fsubr
retf
mov
adc
sar
and
out
xchg
xor
popf
and
jae
mov
mov
pop
jge
out
in
pushf
dec
and
cli
sub
pop
cmp
movs
dec
sbb
xchg
jle
adc
lea
cmp
mov
bound
xchg
loopne
add
fidiv
in
cli
sar
jp
fadd
arpl
in
mov
push
push
jne
retf
jo
lea
sbb
into
loopne
inc
sbb
push
xchg
fsubr
adc
xchg
mov
ss
jne
adc
xchg
ins
ss
call
jae
xchg
cs
sbb
jo
adc
mov
xor
push
aaa
sbb
jmp
pop
sbb
mov
sbb
enter
mov
mov
mov
mov
sbb
dec
ins
repnz
mov
ror
stc
fwait
ret
cdq
cmc
xor
int3
les
push
loop
pop
mov
mov
in
sbb
sub
xor
inc
jae
pop
test
pop
mov
sbb
aaa
xchg
imul
jae
out
cmp
mov
xchg
cmps
sbb
cmp
je
fcmovnu
add
xchg
or
out
sbb
xchg
ins
mov
bound
out
aad
xchg
mov
std
mov
(bad)
popa
ins
mov
mul
and
imul
and
mov
in
fnsave
jbe
xchg
test
mov
xchg
push
and
and
sti
push
js
and
fnstsw
aaa
pushf
in
cwde
faddp
cmp
shr
and
ds
lock
cld
in
cmp
xor
(bad)
adc
in
push
gs
fistp
xor
jp
imul
dec
xor
jae
dec
adc
and
aam
mov
mov
addr16
out
add
add
xor
jae
ror
xchg
jmp
or
xor
or
arpl
jg
sbb
test
clc
xor
xchg
aad
jbe
les
iret
xor
xor
sbb
in
aam
pop
and
aad
mov
and
xchg
ja
aaa
ror
or
movs
pop
add
(bad)
xchg
mov
xor
outs
jbe
call
jne
mov
push
and
mov
sbb
movs
in
icebp
adc
fidiv
inc
dec
adc
fsubr
jg
sar
jl
fild
pop
inc
jns
pop
fdiv
mov
int
adc
xchg
mov
lds
ret
push
jae
push
mov
xlat
imul
and
sbb
mov
popf
pop
mov
mov
mov
or
into
xchg
cmc
push
adc
int
rcl
(bad)
pop
inc
neg
scas
add
push
cmp
xlat
and
fwait
aas
aad
mov
cwde
dec
sbb
add
repz
or
mov
repz
imul
lds
jecxz
jno
out
add
imul
sbb
adc
or
push
pop
mov
xor
ja
mov
fmul
repz
sbb
(bad)
jb
mov
push
adc
xchg
cmps
pop
mov
cdq
mov
add
jmp
sbb
add
pusha
stos
fdiv
xor
loopne
ret
sub
gs
sbb
mov
mov
in
cmps
(bad)
or
stos
popf
int3
push
or
push
gs
mov
fbstp
push
daa
(bad)
xor
mov
or
rcr
cs
cmc
add
shl
inc
out
mov
add
(bad)
lods
sbb
dec
xchg
in
out
sub
fwait
in
lea
xchg
and
das
xchg
jae
and
xchg
in
hlt
mov
push
sbb
push
push
js
cmp
cmp
or
add
lods
test
je
lods
stos
mov
ret
jae
sar
dec
add
fnstcw
std
(bad)
sub
mov
dec
add
or
dec
inc
mov
(bad)
push
(bad)
jnp
out
stos
sub
pop
test
pushf
inc
loopne
dec
sbb
ss
dec
inc
sbb
xor
or
sbb
pop
push
xor
jnp
jns
cli
mov
xchg
ficom
mov
and
mov
dec
xchg
push
pop
cmp
scas
call
cwde
jbe
loop
popa
repz
and
dec
pop
stos
push
out
call
inc
pop
neg
jno
mov
pop
sbb
ficomp
mov
rol
mov
std
add
xchg
shl
xchg
xor
jmp
inc
add
cli
shl
pop
jp
cmps
sbb
call
jp
adc
fldenv
sbb
dec
dec
mov
push
mov
pop
sbb
(bad)
sar
sbb
and
pushw
xchg
test
pop
mov
dec
(bad)
popf
call
cli
push
repz
cmp
or
xchg
(bad)
cmc
adc
lock
imul
(bad)
push
xchg
imul
push
sahf
mov
repnz
adc
push
cmp
xchg
loopne
and
outs
mov
adc
adc
and
data16
pop
das
dec
mov
fisub
jge
pop
pop
jae
pop
push
mov
sbb
or
cmps
mov
fistp
cwde
movs
mov
pop
or
imul
adc
ja
jp
sti
xchg
push
push
iret
out
loope
mov
es
neg
cdq
mov
xchg
outs
ret
retf
aas
inc
addr16
jno
adc
jae
or
pop
sbb
and
pop
mov
in
sahf
mov
cmps
adc
adc
pop
into
div
cs
pusha
sbb
hlt
sbb
dec
push
ins
(bad)
cmp
sbb
cmp
and
push
mov
sub
cmp
sti
arpl
jno
mov
call
xchg
js
mov
xlat
push
lods
aas
jae
xchg
mov
dec
shl
push
pushf
cmp
test
pop
mov
(bad)
mov
xchg
pop
mov
cmp
mov
movs
ret
xchg
mov
mov
test
je
pop
clc
mov
xor
or
mov
cmp
sub
adc
cli
sar
dec
sbb
add
loopne
sub
clc
imul
add
das
inc
ds
int3
jne
push
shl
inc
(bad)
loopne
out
aam
and
xchg
leave
mov
aam
mov
push
repz
cmp
push
ss
test
mov
ds
iret
cmp
cld
ror
inc
enter
fs
ror
cmc
xor
push
aad
fdiv
(bad)
xor
add
inc
dec
aam
rcl
dec
(bad)
or
jecxz
pop
xchg
stos
dec
loopne
sub
or
push
fnstcw
not
cmp
fldcw
mov
clc
stos
dec
inc
cmc
mov
cld
nop
test
jnp
sbb
push
pop
stos
jae
push
sar
mov
aas
ret
(bad)
stc
into
stos
(bad)
je
sbb
xor
mov
xchg
(bad)
ret
loopne
adc
push
and
sbb
jo
pop
sbb
jmp
(bad)
sbb
jae
fxch
aam
adc
push
stos
mov
test
xchg
repz
js
mov
sbb
scas
adc
dec
fwait
add
sub
fcom
inc
mov
lss
or
int3
xchg
jmp
pop
aam
push
xor
add
sub
rcl
xor
cmp
mov
or
sbb
je
or
jecxz
test
(bad)
inc
mov
push
xor
aam
pusha
out
cli
mov
sbb
add
test
adc
jmp
pop
aad
les
lds
xchg
push
in
repnz
xchg
dec
pop
and
popf
stos
out
shr
mov
adc
movs
jne
dec
xchg
outs
xor
fwait
test
add
sub
mov
push
pushf
push
sbb
jg
xchg
mov
icebp
lahf
xor
xor
int3
mov
xor
jmp
pop
sub
stos
pop
test
jb
je
mov
mov
out
jmp
push
sbb
lds
adc
xchg
fwait
cwde
mov
mov
jmp
dec
cmc
jge
fcmovbe
add
pop
add
sbb
imul
lahf
mov
push
or
cs
xor
sbb
aaa
repz
mov
ror
adc
adc
cld
and
inc
jp
mov
sub
xor
(bad)
out
adc
sbb
dec
dec
sbb
and
scas
sbb
mov
je
repnz
jae
out
or
mov
push
inc
sbb
mov
jecxz
push
fidivr
(bad)
movs
jp
inc
hlt
jne
in
sbb
arpl
mov
sbb
mov
std
mov
mov
je
sub
mov
push
adc
ror
jmp
mov
xchg
(bad)
mov
adc
xchg
jbe
mov
loopne
lods
inc
sbb
jp
lea
cmps
xor
xor
inc
in
test
jno
xchg
je
and
sbb
(bad)
retf
fadd
stos
adc
dec
aam
jbe
adc
inc
and
or
xchg
jge
or
les
mov
mov
cmp
and
movs
rcl
or
push
pop
in
mov
jns
jle
cmps
pop
xchg
fwait
mov
and
jae
stc
cwde
pop
dec
mov
ficomp
mov
and
mov
xor
sbb
inc
jae
ret
push
sbb
sbb
pop
add
scas
jge
adc
stc
ficomp
and
fld
sub
sbb
jp
jmp
je
fs
cmp
mov
sub
lods
push
jbe
aad
dec
cmp
mov
jae
adc
xchg
mov
bound
adc
gs
sub
inc
ins
jb
add
mov
xchg
sbb
ficomp
push
jmp
lahf
ins
lahf
xor
inc
mov
inc
cs
mov
push
or
iret
cmps
es
rcr
std
rcl
mov
pusha
xchg
or
aam
xchg
cmp
jle
daa
xchg
iret
movs
adc
or
push
rcr
addr16
call
scas
cmp
hlt
mov
bound
rcr
jb
push
push
outs
sbb
gs
inc
adc
pushf
xor
mov
sub
pop
xchg
inc
push
retf
xchg
cli
ins
jle
(bad)
in
xchg
jb
sbb
xor
sub
outs
out
cmp
hlt
cmp
sub
movs
pop
xchg
ror
mov
xchg
test
ret
xchg
stos
pop
push
hlt
sub
add
arpl
inc
js
pop
dec
fimul
hlt
push
push
jne
cs
dec
sbb
pop
cdq
icebp
mov
jmp
and
push
sbb
cmp
xor
ja
jecxz
int
je
(bad)
scas
cmp
icebp
inc
push
clc
cld
sbb
adc
mov
adc
xor
pop
xchg
outs
inc
sbb
mov
mov
fwait
test
push
sbb
fwait
and
mov
pop
inc
enter
fwait
xchg
out
xchg
push
(bad)
xchg
xor
aas
mov
lock
xor
call
or
inc
push
adc
pop
mov
inc
sahf
cmp
dec
in
in
inc
shl
cmp
and
rcl
mov
fcom
out
dec
mov
mov
dec
mov
jno
add
out
retf
aaa
push
je
dec
adc
bnd
sub
retf
scas
repz
pop
rol
daa
imul
mov
lahf
cmp
(bad)
dec
ss
fwait
gs
iret
add
cld
jae
add
es
mov
ss
dec
inc
shl
push
dec
les
xor
jmp
je
int
sysenter
mov
adc
sub
ins
and
mov
js
sbb
fs
in
data16
fsub
bound
hlt
push
sbb
test
xor
jmp
mov
daa
xchg
call
ret
mov
icebp
loope
movs
mov
sbb
xchg
pop
call
ds
push
adc
in
sti
stos
fucom
test
mov
mov
(bad)
shr
les
jae
and
(bad)
mov
fwait
out
loopne
adc
call
jle
nop
jb
int3
push
je
mov
mov
div
sbb
and
lods
clc
shl
call
push
call
ins
fisttp
imul
cs
jb
and
(bad)
pop
sbb
mov
bound
fs
adc
leave
lahf
sbb
adc
pop
jmp
dec
pop
cmc
xchg
pop
lahf
sub
mov
pop
iret
xchg
xlat
(bad)
addr16
scas
lods
outs
dec
xchg
cmp
mov
push
xor
inc
jnp
jbe
ins
jp
jno
je
hlt
dec
inc
mov
push
test
and
clc
(bad)
rcr
cmp
out
inc
out
push
inc
(bad)
pop
or
jae
scas
lods
out
inc
cmp
sbb
push
stos
adc
inc
loope
and
les
inc
mov
push
arpl
pop
adc
add
inc
imul
xchg
mov
scas
dec
addr16
jl
cmp
adc
push
je
xor
ja
stos
or
xor
sbb
sbb
jmp
sbb
pop
mov
hlt
mov
aaa
jle
dec
ja
push
xchg
mov
jae
cld
sbb
and
ins
mov
mov
sbb
xchg
mov
rcl
push
hlt
mov
call
jmp
push
js
jge
jae
daa
mov
add
shr
push
(bad)
jnp
jns
push
out
ficom
nop
dec
cmp
fcmovu
push
cmc
int
loope
xchg
xchg
jle
and
out
(bad)
and
and
sub
xchg
sbb
loopne
pop
hlt
outs
sbb
mov
adc
xchg
jle
inc
aad
cmp
dec
pop
mov
add
sbb
xchg
repnz
mov
icebp
jae
fdiv
cmp
imul
pushf
jl
mov
dec
sbb
add
xor
xor
mov
jge
mov
js
outs
aam
or
sbb
sub
in
mov
(bad)
mov
dec
into
out
and
in
add
je
xchg
pop
jecxz
adc
cwde
and
xchg
repz
jnp
push
pusha
bound
xchg
ret
int
mov
add
mov
in
arpl
ja
cmp
sar
push
je
pop
lds
jg
pop
ret
les
mov
ja
sbb
call
mov
js
std
(bad)
lock
jmp
pop
lea
sbb
push
cmp
std
imul
rcr
mov
aas
and
fs
fwait
xchg
xchg
sub
xor
push
and
sti
call
push
add
adc
imul
push
sub
cmp
add
push
shl
leave
repnz
add
iret
xchg
cmc
fidiv
dec
sub
in
xchg
xchg
xchg
jae
push
push
js
fstp
sbb
or
mov
scas
cmp
movs
loope
test
mov
xchg
cmp
adc
dec
retf
cmp
lods
imul
dec
sbb
sub
arpl
cmp
cmc
je
dec
adc
pop
rcl
xchg
jmp
dec
xor
xchg
add
ret
inc
jns
add
sbb
repz
pop
push
and
stc
cmp
sar
inc
push
cmp
adc
pop
push
sub
xchg
jg
sub
add
jg
inc
je
or
dec
sbb
pop
adc
mov
sbb
pop
adc
xor
or
inc
jne
xor
daa
cmps
xor
jp
jae
sub
jge
mov
xchg
xor
or
inc
xchg
cmc
or
test
scas
fisub
fidiv
sahf
adc
jmp
push
pop
pop
sbb
or
dec
sbb
xchg
jle
mov
jno
dec
mov
outs
outs
xchg
(bad)
push
xchg
dec
clc
mov
shl
arpl
stc
je
push
push
inc
pop
loop
mov
cmc
mov
mov
cwde
mov
test
jae
or
sbb
retf
push
imul
(bad)
frstor
ja
xor
jb
xor
sti
lea
test
fcom
cdq
pop
iret
jge
lds
mov
add
mov
ror
push
jne
fs
sub
std
xchg
stc
aad
rcl
or
jae
push
adc
dec
test
lea
inc
test
(bad)
mov
inc
das
mov
jge
stos
push
bound
xor
jge
jp
neg
mov
lods
mov
test
mov
push
dec
sbb
outs
(bad)
push
mov
dec
cmp
push
sub
sbb
mov
out
hlt
pop
imul
call
xchg
sar
and
ror
dec
pop
out
sbb
fld
pop
mov
dec
mov
sub
pop
sbb
push
fmul
les
xchg
dec
mov
jne
js
out
jge
aam
jp
cmp
mov
xchg
xor
stos
mov
inc
mov
mov
and
sub
push
inc
mov
rep
shl
mov
cli
ja
xor
aam
xor
jl
xor
pop
cmp
scas
xchg
hlt
cmc
jae
les
rol
jnp
aad
dec
mov
out
adc
std
mov
jge
xor
push
js
(bad)
mov
lods
neg
sub
mov
dec
pop
mov
jge
adc
shr
mov
fnstcw
popf
mov
fwait
dec
fwait
inc
sar
imul
mov
ja
xchg
push
pop
sbb
scas
add
xchg
jbe
sbb
and
daa
add
or
repnz
mov
rcl
cmp
enter
je
lds
test
in
mov
cmp
jae
dec
jg
clc
or
nop
push
mov
sub
mov
add
xchg
mov
adc
pushf
icebp
mov
cmp
or
int3
rcr
sbb
retf
stc
fidiv
sub
push
(bad)
pop
mov
xchg
leave
jns
inc
je
mov
fcmovnu
xor
mov
xor
mov
addr16
cmps
std
js
dec
jne
dec
fist
jl
mov
sbb
lea
div
mov
popf
iret
cld
dec
adc
in
xchg
pop
inc
push
jg
fsub
aam
mov
mov
addr16
repz
adc
xor
jno
jae
ret
daa
retf
jmp
push
aam
xor
push
push
je
mov
std
pop
sbb
scas
jmp
repz
mov
add
add
mov
cmp
push
fld1
and
aaa
mov
sbb
js
or
cmp
scas
sub
inc
xor
or
cmp
call
xchg
and
pmuludq
cld
dec
xor
shr
inc
and
push
ret
out
mov
dec
stc
and
fisttp
xchg
jle
cmp
adc
jb
fldenv
mov
dec
push
je
add
xor
xor
jo
scas
popa
jecxz
and
add
xchg
and
ds
mov
push
shr
push
dec
push
cwde
jge
sub
scas
(bad)
pushf
repz
xchg
push
mov
mov
pop
iret
jge
cmc
(bad)
fst
xor
ins
jae
movs
stos
pop
xchg
xchg
cmp
bound
cs
mov
xor
je
lods
movs
cmp
xchg
sti
and
jae
pusha
jle
inc
fmul
xchg
sbb
sub
ins
mov
cmps
jmp
inc
in
repz
xchg
pop
cwde
int
lock
mov
(bad)
div
fwait
pop
fisttp
ret
cs
inc
arpl
mov
sbb
sub
xor
dec
gs
dec
jmp
xchg
in
sbb
pop
or
gs
add
sbb
aaa
scas
outs
test
test
sub
gs
test
mov
and
jmp
fnstenv
cmp
sbb
scas
scas
jae
adc
js
jle
inc
sub
jae
repnz
je
lods
jb
hlt
mul
movs
cdq
pop
pop
add
xchg
mov
loope
popa
jae
int3
sbb
cs
xchg
pop
loop
repz
rol
push
std
lods
scas
out
sbb
pop
test
xor
jge
sbb
xchg
pop
xchg
lods
pop
sbb
mov
cmp
pop
inc
jne
repz
movs
hlt
lods
jne
cmp
adc
out
sub
sbb
movs
repnz
cwde
pop
cmps
jae
dec
jp
mov
mov
or
out
fst
xor
jo
mov
scas
sub
mov
pop
dec
test
std
mov
(bad)
aas
fsubr
stc
xchg
mov
int3
stc
scas
and
jmp
(bad)
and
mov
retf
test
cli
(bad)
cmp
imul
jae
in
test
(bad)
xchg
leave
push
mov
cmp
dec
add
fidivr
and
adc
popa
xlat
mov
push
pushf
xchg
repnz
sbb
ds
xlat
dec
cli
mov
ins
or
fwait
cmp
and
and
sub
mov
nop
xchg
mov
movs
test
push
and
dec
aas
cs
bound
shr
jg
and
(bad)
jmp
dec
sub
pop
outs
jle
mov
int3
lds
jae
dec
aad
dec
xor
stc
sbb
dec
or
mov
push
push
mov
aad
xlat
add
(bad)
lea
mov
mov
pusha
cmp
adc
mov
(bad)
push
fs
inc
add
sub
aaa
push
adc
or
sub
xor
or
jl
fild
push
das
call
jmp
mov
cmp
push
adc
add
cmp
jg
test
cs
mov
das
lods
mov
pop
jbe
stos
ja
cmps
jmp
push
dec
mov
push
push
int3
sar
mov
sar
mov
cld
and
fldcw
iret
es
jl
test
mov
mov
jae
sbb
cli
or
ret
xor
popf
es
aaa
imul
push
daa
cwde
repnz
lds
mov
shr
inc
jb
mov
push
cmps
in
pop
mov
xor
daa
test
mov
jns
push
bound
std
je
ret
icebp
shl
icebp
and
imul
clc
or
scas
xlat
imul
(bad)
xor
cmps
or
cli
mov
or
cmp
dec
stos
in
stc
pushf
inc
sti
(bad)
push
out
lock
shr
jecxz
hlt
mov
stos
xchg
xlat
cmps
addr16
inc
xor
ins
and
adc
mov
fisubr
cmc
dec
in
cmp
fbstp
mov
push
sbb
stos
(bad)
jbe
dec
rcl
div
jle
cwde
into
xchg
jae
in
addr16
pop
pushf
ret
push
xlat
sbb
pop
in
jne
push
mov
sbb
inc
adc
jnp
das
std
imul
scas
movs
scas
jle
xor
and
fnsave
shl
lds
lds
les
push
scas
call
je
and
aaa
jno
mov
xchg
jle
xor
(bad)
cmp
inc
int3
mov
ja
xor
mov
fcom
inc
inc
shr
push
dec
adc
adc
xchg
add
aam
xor
pop
sub
mov
sbb
push
mov
loop
cmp
mov
into
test
adc
add
adc
jns
sbb
jae
and
ss
std
sub
int
sbb
pusha
xchg
inc
mov
jge
cs
push
cmps
mov
jnp
(bad)
pop
pop
mov
loope
(bad)
sub
xchg
or
push
add
loopne
mov
mov
inc
jmp
mov
jp
loope
cmps
push
(bad)
dec
sahf
repnz
iret
jmp
sub
xor
mov
adc
inc
inc
mov
dec
xchg
arpl
inc
adc
add
jg
cmc
and
fadd
(bad)
adc
scas
pop
ror
or
call
jae
and
das
mov
cmp
pop
sbb
in
cwde
scas
mov
mov
adc
daa
ins
dec
out
stos
outs
pop
jmp
add
and
jae
fs
adc
jnp
or
pop
jmp
mov
mov
int
mov
sti
add
push
icebp
jmp
pusha
add
div
mov
mov
or
fcom
mov
aaa
inc
jae
std
jae
jne
dec
mov
in
sbb
jl
stos
clc
add
inc
js
pop
xchg
lahf
pop
mov
mov
daa
cmps
jmp
cdq
fwait
mov
stos
dec
dec
or
mov
add
push
xchg
ins
xor
mov
push
inc
cdq
test
jo
xchg
mov
cli
sbb
jno
retf
stc
fdiv
cmp
xchg
fidiv
in
push
lahf
leave
or
data16
stos
popf
add
push
push
mov
jnp
aaa
dec
push
je
neg
test
test
adc
push
sbb
jecxz
leave
sub
add
or
das
sbb
xchg
sub
mov
xor
jae
les
loopne
lods
mov
shl
sbb
jmp
or
test
in
pop
jo
cmp
sub
mov
push
sub
loopne
inc
sbb
cmp
pop
cmp
aaa
mov
stos
xor
imul
lds
in
in
push
addr16
pop
push
sti
pop
cmp
je
mov
das
std
stos
jb
xor
idiv
repz
mov
dec
rcr
push
mov
ja
xchg
aas
mov
mov
cmp
stos
inc
mov
pop
adc
xor
hlt
push
mov
inc
xchg
sub
inc
xlat
fadd
push
std
mov
(bad)
retf
xor
leave
out
adc
push
pop
sub
test
iret
jae
aam
out
add
add
mov
sub
mov
lds
scas
and
or
lods
jae
add
mov
hlt
xor
jecxz
ins
fistp
or
(bad)
adc
mov
adc
push
fild
fwait
pop
data16
push
lock
push
test
push
cs
xor
xchg
sbb
mov
dec
and
lds
xor
mov
cli
enter
cmp
xchg
mov
(bad)
retf
in
push
les
and
xor
or
je
in
in
inc
sbb
xor
dec
sub
jne
jp
aad
jmp
ja
dec
mov
and
outs
xor
inc
sub
test
lea
sbb
jbe
adc
call
jp
adc
or
in
mov
sub
inc
dec
pushf
cmp
xchg
mov
aad
mov
jae
lock
or
jge
dec
adc
ficom
ror
jns
jbe
xchg
sbb
dec
fldcw
mov
int
pop
rcl
dec
ficom
adc
iret
xor
push
fdiv
dec
xor
fbld
xor
enter
push
out
cmp
retf
aaa
in
jnp
sbb
sub
cmp
aaa
lds
dec
mov
fsub
xchg
dec
and
les
dec
and
xor
jmp
add
mov
mov
in
(bad)
not
sbb
fistp
push
and
stos
sbb
xchg
xchg
mov
xchg
sar
ja
add
call
push
sbb
sbb
add
push
or
ror
xchg
push
xor
adc
add
cmps
sbb
test
popa
inc
xor
mov
sub
aaa
cmp
push
call
in
ja
lods
fidiv
xchg
test
int3
xchg
std
(bad)
xor
pop
add
loope
jae
cmp
inc
jns
repnz
(bad)
nop
xor
(bad)
fidiv
jmp
(bad)
je
popa
adc
xchg
leave
push
jl
mov
pop
jae
fs
pop
inc
in
jo
clc
jnp
in
dec
push
scas
adc
fild
mov
xchg
bound
cmp
in
sub
xchg
xchg
cld
fistp
mov
scas
rcl
jmp
cmps
call
fdivr
pop
scas
jecxz
push
pop
sbb
push
stos
push
loope
cwde
pop
popa
mov
mov
je
pop
imul
sbb
cmp
dec
mov
inc
inc
xlat
xor
xchg
push
call
push
popf
and
mov
inc
popa
push
pop
jae
jmp
icebp
xor
ins
ja
pop
adc
push
call
cmc
mov
bound
gs
repnz
stos
sbb
cmp
shl
xor
rcl
repnz
cmpxchg
pop
jmp
push
mov
sbb
add
dec
in
popa
mov
hlt
ja
mov
mov
rcl
fld
out
jae
cmp
addr16
sbb
mov
sbb
and
cwde
mov
cmp
sbb
enter
jp
pop
leave
add
sbb
ret
loopne
cdq
scas
mov
call
xchg
repz
xor
jg
movs
sub
dec
xchg
cs
retf
sbb
ins
stos
inc
mov
ror
in
ret
retf
bound
inc
pop
fwait
bound
es
jp
sbb
adc
icebp
aas
and
or
mov
adc
stos
mov
pop
lahf
mov
xlat
sbb
add
jmp
sbb
inc
ficomp
xor
sbb
sbb
test
rcr
mov
jae
push
jl
pop
hlt
dec
inc
xor
add
hlt
add
jmp
jmp
jno
sub
jp
fdivr
push
test
aaa
adc
into
ficomp
push
dec
cmc
push
jnp
mov
push
mov
push
pop
sbb
aad
inc
jle
dec
(bad)
pop
push
push
ss
pop
aas
daa
xchg
pushf
cmp
bound
add
(bad)
sbb
test
jo
pop
push
ret
xchg
test
call
daa
btr
ins
ret
ror
cmp
cwde
fs
cmps
int3
xchg
aaa
push
add
pop
pop
cmps
fbstp
dec
sbb
adc
ja
test
sbb
adc
enter
mov
dec
stc
lods
xchg
mov
xchg
sub
sbb
ins
xor
out
mov
cmc
or
mov
xchg
xchg
jmp
xchg
lods
lahf
pushf
mov
nop
cli
inc
in
dec
mov
addr16
icebp
call
and
arpl
inc
test
push
jb
(bad)
loope
jp
xchg
dec
jle
mov
and
and
jae
mov
dec
dec
xor
aas
dec
push
xor
aam
fxtract
add
mov
mov
lock
sahf
mov
jbe
gs
fwait
pop
xor
mov
repz
cmp
out
mov
xchg
fldcw
inc
pop
mov
adc
ja
sbb
ficom
js
push
shr
mov
mov
pop
(bad)
jg
aam
shr
push
pop
inc
jb
popf
shr
sbb
lahf
fs
and
mov
and
sti
test
test
mov
(bad)
xchg
push
jno
mov
sub
js
test
ret
mov
jae
and
ins
xor
into
jae
stc
jae
loop
mov
sti
test
sbb
sar
imul
xor
mov
xchg
fiadd
test
inc
fwait
(bad)
mov
jecxz
jo
dec
movs
je
iret
push
ins
outs
xor
jnp
jns
int3
int3
jne
ja
adc
jae
mov
pop
sbb
sub
shl
jnp
mov
add
cmp
loopne
dec
add
int3
stc
xchg
inc
xchg
adc
sub
pushf
aad
pop
pop
xchg
adc
movs
xchg
loopne
inc
jae
sub
sbb
jae
xchg
je
or
mov
dec
ins
call
je
mov
in
leave
(bad)
xchg
icebp
not
mov
jmp
and
dec
cmps
dec
dec
pop
sbb
ss
test
mov
jecxz
push
mov
cdq
sbb
in
and
adc
mov
pop
add
push
xchg
daa
jmp
adc
shr
jge
sbb
and
jp
scas
in
mov
jle
mov
pushf
mov
fcom
out
shl
in
imul
mov
mov
sub
sub
xchg
lea
pop
enter
dec
shl
add
xor
push
or
xchg
push
aam
cmp
adc
mov
jecxz
or
popf
daa
jmp
adc
retf
jge
inc
xchg
fld
adc
mov
push
sub
dec
adc
cs
add
inc
sbb
mov
mov
xor
xchg
and
jmp
inc
sub
ins
jp
xor
jmp
jae
mov
loope
push
mov
xchg
ins
adc
jae
sub
sbb
clc
enter
pop
(bad)
int3
cmc
shr
mov
mov
push
aaa
cvtps2pi
cmc
inc
ins
sar
shufps
ins
cmc
push
xor
xor
push
popf
les
push
xor
jns
data16
xor
jns
test
popf
les
jle
mov
pop
popf
les
dec
xor
jns
mov
push
mov
push
inc
mov
pop
xor
and
pop
xlat
push
or
sbb
popf
shl
shl
les
pop
out
movs
pop
je
or
mov
das
pusha
ins
in
mov
inc
(bad)
repz
dec
sbb
inc
mov
pop
jecxz
xor
imul
xor
jl
mov
(bad)
(bad)
ss
sbb
sbb
and
sbb
mov
cdq
les
es
xchg
std
sbb
in
pop
push
clc
mov
add
inc
call
call
inc
cmps
js
push
in
dec
imul
pusha
adc
mov
dec
xchg
sub
sti
pop
scas
or
mov
push
sub
adc
data16
mov
pop
xchg
cmp
push
mov
sbb
jmp
xchg
or
loopne
jmp
sbb
xchg
xchg
jnp
dec
sub
add
or
cld
jge
arpl
rcl
inc
jmp
inc
jmp
and
dec
pop
fst
cmp
lds
push
cmp
fs
adc
jl
mov
inc
sbb
add
pop
cmc
sar
sbb
cld
pop
jmp
imul
mov
cmp
inc
stos
sti
call
aam
pop
mov
mov
mov
mov
les
mov
ins
sbb
adc
int3
repnz
cmp
jne
scas
lahf
je
les
or
ss
sub
and
sub
inc
mov
xchg
sbb
ss
mov
jns
ins
sub
push
hlt
inc
mov
sub
push
leave
jnp
mov
sub
icebp
xlat
push
xchg
jl
fcomp
dec
inc
inc
xor
push
pop
mov
jne
pop
iret
cmps
fstp
sahf
and
dec
sbb
imul
imul
add
sahf
inc
lods
imul
mov
rcr
xchg
sub
mov
push
ja
xchg
cmp
fidivr
push
sub
clc
sti
out
adc
ret
xchg
push
setae
jns
jecxz
push
out
adc
ret
xlat
outs
pop
sti
xchg
mov
mov
dec
dec
mov
jg
icebp
xchg
pinsrw
cmc
je
xor
das
dec
sbb
cs
lea
frstor
mov
loopne
adc
cmp
jbe
gs
cli
cld
and
mov
jmp
ja
lods
mov
enter
js
mov
cmp
mov
inc
sbb
push
hlt
hlt
les
test
icebp
mov
mov
pop
adc
sti
pusha
ins
in
xor
js
dec
mov
or
sub
lds
mov
test
mov
movs
and
xchg
xor
cmps
xlat
call
sar
mov
loope
and
dec
in
sub
(bad)
add
repz
dec
sbb
inc
xchg
enter
jmp
lahf
inc
sbb
push
and
movs
sbb
aad
shl
(bad)
sub
xchg
push
dec
sub
in
int
mov
push
cmp
sbb
and
xchg
retf
pop
cmp
je
lahf
fst
inc
cmp
jae
push
push
cmps
or
scas
cmp
call
xchg
mov
je
dec
xchg
rcl
cmp
out
xor
in
mov
mov
rcr
push
mov
movs
jmp
arpl
cmp
es
dec
je
pop
xchg
mov
jns
cmc
lock
scas
jmp
pop
mov
aad
imul
(bad)
sub
aad
into
push
sbb
int3
aaa
test
xor
cli
jb
cli
and
inc
pop
int
das
xor
xor
mov
push
and
mov
pop
and
jae
mov
inc
sahf
loop
enter
add
and
nop
mov
inc
sub
scas
push
(bad)
mov
lods
loopne
mov
dec
adc
sub
jg
xchg
dec
loope
test
fbld
inc
jae
test
ins
dec
fisubr
bound
adc
ja
mov
cmc
pop
xchg
sub
retf
mov
xchg
int3
int
into
push
jl
adc
ins
call
jge
mov
xchg
shr
mov
sub
aam
jnp
scas
popf
ins
push
push
daa
mov
jp
rol
jnp
push
sub
(bad)
and
scas
jns
sub
fld
or
retf
bound
ficomp
sub
clc
push
xor
fwait
mov
shl
data16
rol
call
fmul
sar
ret
rol
mov
hlt
mov
sbb
pop
sbb
jae
std
jle
out
cmps
jne
xor
push
addr16
or
imul
dec
and
inc
fwait
add
mov
sbb
div
and
and
adc
sbb
jae
outs
pop
mov
enter
jmp
nop
cmc
xchg
push
std
cli
jp
fldcw
and
push
les
sbb
mov
not
fist
mov
xchg
idiv
imul
pop
and
shr
fcmovnb
ins
mov
je
daa
jno
into
cmc
cmp
inc
cmps
mov
cwde
stos
adc
xor
jle
sti
jle
cld
mov
adc
into
fsubrp
xor
sbb
outs
mov
test
add
adc
pop
add
mov
mov
sub
jae
adc
(bad)
cld
icebp
ficomp
inc
retf
or
retf
jae
or
xchg
xchg
xor
push
adc
(bad)
and
out
xchg
jmp
fnstcw
adc
mov
xchg
fdiv
jmp
lods
mov
lahf
stc
add
pop
ins
sbb
cmc
lods
or
xlat
sar
inc
jnp
ds
dec
std
data16
sar
jge
mov
movs
je
inc
mov
jmp
xchg
xchg
cmp
pushf
movs
xor
jg
xor
pop
test
inc
rcr
mov
pusha
cmps
lahf
mov
rol
jecxz
push
cmp
fdivr
cmp
adc
outs
or
jge
xor
inc
aad
xchg
jae
clc
pop
js
mov
popf
lahf
test
dec
call
inc
retf
pop
mov
scas
or
mov
mov
cmp
jae
dec
(bad)
aam
inc
sbb
rcr
frndint
jge
mov
lahf
arpl
cmp
xchg
sub
or
jb
mov
jmpw
sbb
cmps
loop
int
dec
mov
mov
ja
push
sbb
push
sbb
jmp
jg
dec
sbb
pop
mov
imul
int3
rol
cli
ret
jae
fdiv
inc
mov
(bad)
jmp
out
aam
icebp
add
dec
sbb
mov
ins
retf
aad
nop
cmps
repz
call
mov
xchg
sti
(bad)
jge
lock
dec
push
or
mov
cmovo
mov
mov
jae
cmp
int3
out
into
sbb
or
popa
cmc
es
xor
push
jle
adc
pop
mov
mov
(bad)
sbb
stos
mov
push
sbb
mov
fstp
mov
or
pop
jb
pop
pushf
mov
mov
adc
push
movs
sbb
movs
clc
cmps
out
mov
ja
mov
push
jbe
mov
and
lods
rcr
mov
add
mov
retf
dec
(bad)
ficom
cmps
daa
imul
or
stos
push
push
dec
pop
ja
sbb
out
cmp
jns
sbb
push
or
into
lods
jne
and
fwait
sub
sbb
jmp
inc
js
outs
stos
outs
adc
fcmovb
dec
cmps
add
mov
mov
mov
les
aaa
jne
je
loopne
xor
cld
dec
inc
xchg
jae
cmp
add
inc
and
ror
and
inc
int
in
mov
lahf
loope
stc
jecxz
nop
push
cmp
sub
push
ja
xchg
sbb
dec
mov
call
(bad)
push
rcr
imul
imul
test
xchg
ja
jge
add
in
mov
and
retf
xlat
cdq
push
shl
hlt
inc
mov
call
xor
retf
mov
ret
pop
imul
ins
xchg
inc
adc
xor
iret
push
popa
mov
out
jb
icebp
cmps
shl
mov
dec
inc
rep
push
pop
aad
repz
inc
cs
aaa
adc
into
fmul
imul
sbb
push
jnp
pop
shl
je
push
imul
mov
mov
aam
lea
scas
inc
int
lods
cli
mov
enter
mov
nop
xor
mov
test
push
xlat
clc
xchg
mov
loop
adc
mov
mov
ret
sbb
or
cli
mov
shr
movs
lods
int3
popa
stos
and
scas
ja
jp
ja
mov
stc
jae
movs
pop
pop
rol
mov
cli
fiadd
mov
mov
cmp
loopne
ds
adc
dec
out
jb
ja
lea
push
in
(bad)
xchg
data16
push
xchg
mov
pop
mov
push
jl
push
xchg
sbb
(bad)
shl
cmp
add
ds
push
sbb
imul
neg
bound
adc
pop
sti
dec
fwait
add
mov
sub
(bad)
mov
add
jo
mov
das
dec
movs
dec
jae
int3
cmc
jmp
xchg
leave
in
xchg
xor
dec
add
adc
daa
xchg
sub
jns
sbb
cmps
sub
mov
call
jp
inc
cs
sub
cmc
mov
ins
pop
aad
xchg
dec
jae
fcom
cmc
sbb
jecxz
cmp
out
mov
or
jg
xchg
jnp
rcr
xchg
pop
adc
jmp
pop
je
fs
jmp
dec
add
int3
jmp
xchg
mov
dec
sbb
add
mov
mov
dec
out
pop
ficom
stos
imul
adc
repz
adc
movs
fcomip
test
jae
pusha
jnp
addr16
push
sbb
xchg
sub
stc
mov
ja
mov
xchg
movs
fs
jp
jge
mov
adc
js
pop
sub
das
mov
stos
movs
inc
mov
jae
ja
mov
jmp
adc
jg
les
jns
popf
mov
xchg
aad
in
sbb
aad
jecxz
ror
mov
mov
mov
or
or
loope
sbb
cli
addr16
push
adc
shl
xor
xchg
xchg
shr
imul
into
popa
ins
mov
jae
(bad)
jp
or
cld
sbb
frstor
je
out
sbb
jp
add
stc
stos
sbb
and
pop
add
xchg
fidiv
clc
adc
push
repz
xchg
out
call
add
in
std
add
out
sbb
or
je
xlat
nop
test
mov
dec
out
adc
add
push
adc
xchg
cmp
movs
mov
out
mov
push
push
dec
out
call
sti
(bad)
mov
lods
xor
lea
lahf
and
and
mov
imul
scas
mov
xchg
aas
arpl
add
xchg
push
and
movs
cmp
or
add
imul
rcl
out
pop
sbb
dec
and
movs
push
jae
test
pop
cmc
xor
sub
(bad)
push
xchg
mul
stos
inc
inc
fcom
bound
cmps
out
xor
ror
cmps
je
cmp
nop
adc
mov
jno
xchg
xchg
les
pop
imul
fadd
jmp
inc
jnp
mov
fxch
mov
aam
(bad)
popa
lods
leave
ficomp
iret
add
or
mov
jl
jae
(bad)
dec
in
xchg
cmc
adc
jae
test
pop
movs
fbstp
mov
(bad)
push
sub
cmp
fwait
pop
adc
sbb
inc
fisub
ret
(bad)
add
push
in
enter
jmp
jmp
cmps
jae
or
cmp
jmp
icebp
lea
bound
retf
cld
mov
ss
xor
rol
or
sbb
shr
fistp
add
sti
sbb
fdiv
sbb
pop
or
aam
or
mul
mov
xchg
xor
jle
add
sbb
xor
ins
jl
scas
pop
(bad)
push
xchg
fs
stc
inc
arpl
xor
retf
cmp
stos
jb
(bad)
sti
xor
enter
fnstcw
add
cwde
sahf
aas
mov
adc
mov
push
repz
add
scas
nop
ret
retf
jne
pop
jecxz
int
adc
add
(bad)
call
xchg
push
adc
sbb
pushf
inc
jmp
out
mov
sub
push
xchg
or
adc
adc
je
push
aaa
jb
hlt
les
dec
(bad)
mov
sti
clc
xchg
int3
jb
clc
inc
or
retf
push
xor
sub
pop
stos
or
pushf
cs
out
ins
push
cdq
lods
mov
aaa
pop
ss
sub
popf
mov
ret
fmul
inc
mov
das
add
xchg
int3
adc
test
inc
sbb
lods
mov
adc
stc
ins
sbb
mov
xchg
cli
ja
cdq
mov
and
cmp
and
shl
push
push
jae
xchg
test
jp
push
sti
repnz
jb
daa
stos
mov
fisub
push
xchg
mov
pop
stos
pop
sti
inc
popf
pop
push
add
aad
rcr
adc
cmp
or
retf
mov
xchg
dec
pop
ficomp
int3
aas
jle
aam
rcl
or
(bad)
adc
add
sahf
xchg
addr16
lock
or
push
jo
cli
mov
ficomp
dec
push
je
xor
and
dec
jecxz
dec
mov
sub
ret
adc
fidiv
lock
pushf
fwait
js
ds
pop
mov
inc
xor
inc
jmp
sbb
inc
xor
sub
movs
and
push
sbb
cmp
pop
add
fdiv
cmp
sub
jmp
arpl
gs
mov
push
dec
mov
push
repz
shl
pusha
in
imul
fsub
cmp
stc
int
cld
push
imul
test
jg
imul
ja
(bad)
inc
pop
adc
pop
cmp
sbb
ror
mov
ja
dec
or
xchg
dec
cs
xchg
jb
hlt
out
jge
ss
in
cmp
jge
lods
jnp
fistp
iret
mov
ret
xor
popa
call
mov
fimul
arpl
nop
xchg
jl
mov
jae
sar
push
dec
sub
mov
adc
push
movs
(bad)
xor
loopne
sar
mov
test
mov
or
je
inc
imul
push
test
fwait
out
mov
jp
push
mov
or
and
or
dec
arpl
arpl
pop
enter
cmp
das
cmp
daa
adc
jne
dec
mov
int3
pop
mov
jp
lods
imul
jo
sub
mov
xchg
and
xor
movs
sbb
or
pusha
mov
stos
sbb
dec
pop
cmp
stc
push
fcmove
and
lds
lea
cmps
cli
jg
push
in
xchg
cmc
mov
sub
jbe
mov
adc
das
sahf
adc
neg
ins
pop
dec
dec
jle
div
int
ins
(bad)
mov
jae
xor
in
mul
sbb
inc
mov
inc
push
fnsave
inc
inc
jmp
jae
jp
push
addr16
mov
and
adc
xor
test
mov
adc
shl
sbb
mov
cmp
cmps
(bad)
aas
ficomp
sbb
lods
jmp
sbb
out
jecxz
push
test
mov
in
dec
shr
loope
xor
fmul
pop
adc
and
jns
push
jmp
and
mov
mov
push
in
mov
in
cmc
mov
sbb
sub
cmp
cmps
shr
fnstenv
(bad)
mov
xor
or
xor
cmp
jno
inc
(bad)
and
add
adc
adc
out
inc
pop
retf
xchg
sbb
sbb
adc
xchg
push
mov
adc
rcr
pop
daa
sbb
popf
xchg
xor
jge
inc
xchg
pushf
les
out
adc
repz
and
cmp
bound
adc
jb
out
test
clc
clc
jo
mov
(bad)
ja
int3
je
xor
mov
pop
xchg
adc
dec
dec
inc
pop
xchg
xchg
jae
inc
push
repnz
cmp
sbb
lea
das
pop
outs
sbb
bound
mov
out
ja
retf
cs
aas
je
outs
sbb
js
xchg
pop
repz
xor
sub
fwait
adc
fldcw
shl
into
and
dec
cmp
sbb
adc
and
test
lods
pop
add
mov
xchg
neg
in
adc
daa
sbb
repnz
inc
inc
pop
dec
and
imul
out
pop
adc
nop
(bad)
or
repz
mov
inc
adc
cs
daa
jb
imul
push
ins
inc
in
add
jmp
out
and
jmp
push
arpl
xor
mov
dec
push
mov
scas
or
push
arpl
adc
shr
jp
xchg
xor
int
pop
xor
sub
xor
jmp
(bad)
stos
test
mov
aam
jmp
cmp
inc
push
imul
mov
inc
lahf
inc
xchg
lods
and
sbb
mov
jl
nop
dec
cdq
cmp
out
mov
in
retf
fwait
fs
mov
adc
nop
and
int
pop
jns
shl
jmp
jg
clc
and
sub
pop
icebp
xchg
aas
test
aad
call
push
jbe
(bad)
cli
dec
test
mov
dec
and
daa
jno
xor
and
inc
ror
jb
out
repz
and
jae
xchg
mov
xchg
cs
mov
fst
xor
xchg
xchg
and
das
retf
cli
in
aas
(bad)
call
cwde
call
cmps
sub
push
scas
push
aad
ins
test
div
(bad)
outs
cmp
xor
mov
outs
jmp
pop
cmp
fs
imul
xchg
(bad)
pop
xchg
sub
vmovss
enter
push
popa
addr16
add
lods
cmp
jl
sub
adc
mov
rol
add
or
std
jae
jg
mov
cmc
dec
sub
jbe
jle
lock
fimul
in
cdq
hlt
cmp
mov
ficomp
test
xchg
mov
pop
in
xchg
es
(bad)
xor
jae
arpl
mov
xor
test
and
adc
mov
into
dec
and
fwait
mov
adc
jns
jl
sbb
sub
dec
mov
sbb
cli
loop
iret
movs
mov
outs
add
test
out
pop
aam
sub
(bad)
psubsb
and
jbe
push
inc
fbld
iret
sbb
fdivr
mov
cmps
push
jle
fisubr
nop
leave
inc
je
pop
cmp
ret
retf
mov
repz
cdq
jg
jbe
jae
adc
lahf
xor
sbb
adc
push
push
retf
sbb
jae
push
xor
xchg
in
out
xchg
pop
add
pop
sub
clc
and
push
neg
sbb
test
jne
rcr
(bad)
shr
das
pop
pop
ret
outs
push
xchg
aad
scas
sahf
and
xchg
test
jmp
adc
adc
cmp
fwait
stc
pop
popf
je
out
pushf
ret
fsub
sbb
retf
pop
cmp
(bad)
mov
mov
lods
jp
addr16
hlt
dec
scas
pop
sbb
xchg
in
shr
test
sub
xchg
shr
imul
ds
cwde
jg
dec
xor
pusha
cmp
xchg
(bad)
cld
(bad)
push
out
inc
les
shr
xor
fsubp
int
stos
retf
out
jne
inc
adc
ficomp
add
ror
or
fwait
inc
adc
neg
psllw
mov
ins
shl
outs
lahf
xchg
mov
xchg
inc
out
arpl
or
call
xchg
shl
jmp
pop
stc
add
inc
push
and
lahf
movs
stc
(bad)
je
mov
(bad)
iret
dec
xchg
mov
aad
adc
inc
(bad)
in
add
imul
xchg
add
mov
movs
jns
pop
add
mov
mov
push
jae
pop
jo
repz
out
sub
xchg
dec
and
repz
mov
daa
mov
ret
mov
xchg
ret
cmp
jle
sub
iret
stos
popf
rol
mov
sub
pusha
adc
enter
adc
xor
dec
repz
sub
jne
ret
xchg
mov
and
xor
hlt
fptan
and
push
out
mov
dec
(bad)
int
arpl
inc
dec
call
xchg
xor
loop
cmc
jae
ffreep
outs
shl
scas
ins
jecxz
mov
scas
mov
mov
add
or
rcl
shl
je
or
and
js
pop
sbb
mov
sbb
and
mov
out
(bad)
jnp
mov
shl
sub
cli
fadd
sbb
or
bound
jns
push
cmp
mov
adc
jle
dec
shl
pop
ret
jno
hlt
ins
sbb
(bad)
mov
lahf
mov
adc
cmps
int
es
cmp
(bad)
je
or
cmp
push
fnsave
adc
(bad)
adc
add
sahf
retf
int3
add
cdq
jae
clc
adc
neg
push
test
mov
jo
bound
vmovsldup
inc
std
sahf
cmp
test
icebp
inc
cvttps2pi
scas
popf
xchg
ins
fs
xchg
mov
jmp
sub
jne
imul
sub
aaa
push
ja
std
jl
adc
and
add
push
dec
adc
mov
loop
mov
js
in
push
repnz
sub
adc
push
cmp
out
fcomp
push
gs
xor
dec
addr16
mov
imul
mov
nop
shr
mov
loope
push
movs
enter
retf
jne
mov
ins
jo
call
out
aad
inc
(bad)
paddb
and
mov
pushf
cli
xchg
movs
add
bound
les
je
xor
inc
sar
repnz
sbb
lahf
pop
mov
js
mov
and
or
adc
dec
mov
popa
sub
fs
repnz
mov
xchg
jl
and
sub
xchg
jle
test
mov
out
test
sub
mov
mov
add
push
and
repnz
scas
fwait
pushf
or
call
inc
push
fdiv
jl
jl
outs
sbb
mov
mov
mov
xchg
outs
fmul
push
xor
or
std
sbb
js
lea
mov
jmp
or
and
ins
mov
fsub
(bad)
and
inc
cli
aas
inc
add
into
outs
mov
xor
push
cs
shr
cdq
in
sar
sbb
pop
pop
or
or
sub
sub
sbb
sbb
sbb
mov
ret
push
jns
cmp
jne
div
ror
sti
push
push
jl
and
and
push
int3
in
popf
(bad)
ds
pop
ret
add
pop
jmp
adc
stos
(bad)
clc
sbb
inc
add
test
je
fs
or
xor
dec
outs
and
cmps
xor
scas
cmps
cli
sub
cmps
fmul
jp
retf
iret
repz
adc
out
xchg
mov
mov
add
sbb
lods
or
pop
(bad)
push
xchg
add
xchg
popf
add
jno
lods
je
inc
mov
fld
push
lods
jno
popf
push
jae
ds
mov
sbb
sub
and
xor
cmc
push
push
dec
das
jae
jmp
mov
shl
and
test
mov
pop
scas
adc
jg
and
idiv
xchg
jl
mov
pop
hlt
mov
(bad)
cmps
dec
dec
or
jae
in
daa
pop
add
imul
sbb
cmp
(bad)
inc
fst
mov
rol
jb
push
push
sbb
or
jb
movs
add
mov
jmp
push
mov
xor
mov
sub
push
push
repz
repz
movs
mov
movs
xchg
std
mov
mov
push
xchg
mov
mov
ret
sbb
cs
retf
scas
outs
retf
inc
sbb
aaa
cmp
hlt
mov
jmp
clc
test
and
icebp
xchg
or
and
xchg
sub
sbb
inc
ror
sbb
les
mov
test
cmp
push
mov
jo
mov
ja
out
cli
push
add
lods
imul
xchg
daa
cmp
sti
popa
mov
ins
push
lds
sub
(bad)
sbb
ins
test
adc
sub
xor
push
xor
xlat
mov
inc
ss
dec
xchg
jae
outs
adc
push
loope
xchg
pop
(bad)
push
push
or
xchg
call
ins
push
sbb
mov
jmp
sar
xchg
mov
jecxz
jecxz
jmp
dec
lods
mov
retf
mov
jmp
xlat
and
adc
mov
xor
pop
adc
ins
imul
cli
mov
in
fnstsw
icebp
jb
sub
ss
and
cld
adc
push
push
or
xlat
and
xchg
imul
xchg
or
shl
sbb
pop
sbb
add
xchg
shl
dec
sbb
mov
test
leave
xchg
or
xor
xor
sbb
jo
jnp
mov
dec
int
cmp
adc
jg
and
mov
add
sub
daa
stos
jbe
jecxz
sub
test
and
sti
call
xor
adc
mov
stos
icebp
or
ja
(bad)
mov
in
lods
inc
dec
sub
pop
iret
cdq
aaa
fsub
jae
cld
or
push
mov
lahf
push
sbb
push
movs
jg
add
mov
push
and
retf
bound
and
mov
sbb
push
pop
adc
mov
push
lods
push
aam
lods
xchg
(bad)
cmp
test
xor
fwait
ins
aam
jno
mov
out
nop
jne
idiv
mov
sub
push
es
icebp
nop
sub
mov
test
mov
ss
jb
in
mov
je
pushf
inc
pop
mov
xchg
out
mov
inc
js
rcr
fcmovb
pop
div
hlt
xchg
aam
iret
imul
push
fbstp
dec
mov
div
jle
push
sub
repz
push
xor
mov
enter
adc
retf
(bad)
out
aam
mov
repz
sbb
xchg
popf
xor
xchg
lods
lahf
xchg
inc
mov
inc
dec
mov
sbb
push
in
pop
pop
icebp
mov
repz
mov
lahf
fst
cs
ja
stos
fwait
shr
jb
cdq
push
js
mov
mov
shl
cmp
call
xor
push
mov
pop
jno
aam
outs
int
push
inc
fsub
cld
(bad)
lods
mov
cmp
fcomp
loop
fidiv
jno
pop
and
xchg
je
mov
jne
lea
jae
inc
mov
pop
push
test
mov
sub
or
xlat
jbe
add
aaa
popf
fwait
xchg
aas
push
je
nop
mov
je
int3
or
add
adc
sub
repnz
xor
daa
retf
adc
xor
hlt
fdiv
xor
inc
mov
mov
add
cld
dec
test
das
hlt
je
add
inc
xor
push
popf
mov
and
fwait
lods
mov
leave
mov
ror
loop
mov
inc
mov
push
xchg
lds
xor
loopne
inc
das
inc
jg
loope
(bad)
hlt
push
(bad)
loopne
fstp
hlt
popf
ret
sub
adc
int3
or
xchg
push
aaa
fist
lods
push
arpl
ret
popf
xchg
pop
test
aam
fldcw
and
fld
ja
xor
arpl
xlat
inc
mov
add
adc
test
push
aas
sub
dec
jmp
into
and
xlat
mov
nop
jno
call
dec
popa
mov
enter
pop
or
mov
xor
dec
xchg
out
aam
jl
cli
adc
jae
movs
cwde
push
jo
aam
sbb
sub
lahf
xor
aad
sbb
inc
jg
mov
je
loope
fwait
jl
fnstcw
sbb
clc
out
mov
jle
adc
sbb
mov
aas
cmc
popa
jecxz
iret
jne
cmp
inc
sahf
ror
jae
addr16
mov
dec
xchg
cdq
dec
or
js
mov
dec
add
jge
adc
push
dec
int
inc
dec
les
movs
jae
cmp
pop
popf
in
das
mov
adc
pop
push
add
movs
jb
xor
(bad)
(bad)
ror
xor
push
int3
lea
imul
addr16
push
add
inc
xchg
sbb
jb
in
or
out
aam
cmc
sbb
pop
ds
test
pop
lahf
pusha
idiv
mov
dec
and
xchg
xchg
(bad)
xchg
aas
adc
push
xchg
retf
popa
inc
test
nop
xchg
js
inc
add
xor
sub
push
mov
cmps
jno
and
mov
ds
imul
add
mov
jo
repnz
mov
sbb
mov
add
pushf
sbb
and
sbb
pop
xchg
stos
sub
inc
adc
outs
icebp
inc
ss
(bad)
mov
cmp
rcr
fwait
add
shl
or
xchg
add
cmps
loopne
jb
cmp
movs
in
outs
pop
in
scas
int
hlt
dec
inc
jmp
aad
rcl
jl
not
jle
cdq
ret
stos
out
data16
sub
cmp
outs
jae
fs
retf
xor
add
lea
popa
repz
jne
stc
dec
(bad)
xchg
ja
leave
call
xor
cld
pop
(bad)
ficom
retf
cmp
mov
jae
mov
xchg
add
test
dec
sub
sub
mov
jae
pop
ja
arpl
popa
adc
mov
mov
inc
mov
ja
cwde
pusha
ins
lods
loopne
cdq
adc
mov
stos
sbb
and
faddp
push
cmp
push
lahf
call
dec
aaa
xchg
push
push
inc
cmp
loopne
mov
popf
mov
jl
movs
pop
mov
push
mov
inc
cdq
inc
je
outs
or
mov
adc
add
stc
(bad)
fdivr
dec
mov
mov
add
mov
push
inc
(bad)
mov
lock
cmps
or
pushf
mov
jo
or
leave
sub
fcom
jae
call
ins
add
and
fdivr
sbb
mov
in
dec
pop
pop
push
adc
pop
mov
repnz
ror
(bad)
adc
retf
mov
fdiv
pop
add
arpl
out
jo
mov
pop
jne
in
dec
lea
mov
mov
cmp
ins
rcl
adc
js
notrack
or
int
dec
mov
nop
loopne
div
or
cmps
xor
pop
dec
push
push
cdq
nop
jge
test
sahf
scas
mov
hlt
sbb
mov
inc
aam
dec
mov
ins
lea
adc
xchg
push
pop
pop
div
ret
sbb
inc
jmp
pop
pop
jp
or
add
setl
mov
fwait
and
mov
cli
int3
jbe
mov
shl
lea
xor
cmp
mov
sbb
mov
sbb
pop
mov
dec
lods
ret
mov
sub
mov
push
push
(bad)
xor
push
mov
dec
or
mov
mov
xor
cwde
cs
xchg
dec
leave
sub
leave
pop
sub
outs
jbe
adc
lea
jmp
cmp
jg
aam
cmp
jle
outs
movs
out
dec
in
(bad)
xchg
jae
add
jns
aad
xchg
sbb
pop
repnz
stos
jp
push
movs
sub
imul
cdq
sbb
out
out
test
addr16
lods
xchg
jmp
clc
jne
adc
scas
and
sbb
cmp
xchg
in
mov
jae
xchg
cmps
jl
cmps
stc
sbb
mov
sbb
lods
movs
dec
mov
fdivp
adc
les
jbe
js
std
sbb
in
pop
adc
mov
inc
hlt
out
mov
jmp
in
mov
xchg
xchg
xor
(bad)
sahf
push
push
(bad)
mov
sbb
fstp
movs
cmc
jne
sub
in
inc
push
and
je
pusha
movs
dec
in
out
idiv
(bad)
loope
iret
cwde
retf
cmps
idiv
icebp
bound
mov
idiv
fistp
adc
pusha
repnz
gs
sbb
test
push
cmp
ss
fsubrp
fs
int3
sbb
add
pop
dec
push
sbb
pop
cmp
jb
fstp
cmc
sbb
fs
jg
add
push
or
pop
jb
je
adc
xchg
inc
xchg
jl
data16
fcom
icebp
shr
and
adc
mov
cli
aam
out
(bad)
out
push
sbb
mov
fnstenv
dec
jmp
and
mov
mov
in
pop
mov
in
push
movs
fst
imul
xchg
and
cmp
dec
loopne
pop
adc
or
mov
mov
sahf
movs
mov
in
into
jmp
add
xor
jae
sbb
xchg
adc
fwait
arpl
sub
push
sub
ret
sbb
dec
out
mov
or
jge
add
mov
loopne
add
sbb
sub
retf
jb
ss
mov
xor
adc
jbe
movs
adc
pushf
adc
inc
jae
ror
cmp
jge
sub
mov
popa
je
cmc
(bad)
push
push
jg
push
mov
es
pop
clc
push
ins
dec
cwde
xor
pop
jbe
fadd
es
mov
mov
loopne
xor
pop
and
in
push
(bad)
lock
or
or
jmp
xor
in
xchg
jmp
fmul
pop
or
out
repz
ss
xchg
xchg
mov
pusha
xor
bound
jge
mov
lods
xor
jl
imul
xchg
sbb
in
js
mov
int
inc
cmps
sbb
div
xchg
inc
int
stc
ins
in
stos
sbb
loopne
mov
movs
fwait
arpl
xor
repnz
fimul
xor
sub
sbb
test
dec
jne
push
mov
cld
jle
les
mov
xor
push
repnz
loope
dec
lods
enter
std
test
pop
movs
out
test
dec
inc
loope
repz
push
fdivr
movs
dec
cmp
pop
repz
rcr
jle
jmp
push
fst
imul
push
mov
fwait
push
call
test
std
push
mov
dec
jno
sar
aad
fwait
xchg
(bad)
out
in
lahf
jo
mov
movs
mov
inc
cdq
dec
cmp
cmc
mov
adc
ror
push
arpl
in
into
mov
sub
loope
jecxz
or
inc
leave
enter
adc
call
xchg
cmc
jo
ins
inc
push
popf
jns
push
repz
ins
scas
aam
sbb
sbb
sub
add
mov
pop
out
dec
xor
rcl
cmp
cwde
pop
imul
mov
jg
out
icebp
ins
hlt
inc
xor
sahf
mov
hlt
jb
sbb
push
mov
mov
cli
sar
retf
imul
add
pushf
pushf
cmps
not
es
jmp
(bad)
jl
cmp
fild
retf
sbb
mov
push
mov
cmp
jb
adc
outs
jmp
ret
dec
test
mov
mov
sub
push
mov
mov
call
jae
les
and
push
sbb
popf
pop
push
je
loopne
scas
ins
lods
pop
fs
xor
cmp
jae
jmp
fisubr
neg
cmp
dec
xchg
repz
sbb
sahf
add
ja
(bad)
call
mov
mov
mov
or
popa
outs
popf
push
jbe
jae
loop
pop
inc
jnp
repz
bnd
lods
or
jp
push
xor
xchg
xor
js
cli
call
jmp
pop
popa
mov
popf
inc
cmp
and
enter
lds
jae
and
movs
imul
sbb
std
adc
mov
dec
dec
push
push
cli
jae
pop
mov
popf
rcl
daa
sub
loop
mov
shl
push
inc
sbb
lea
lock
loopne
in
jg
mov
movs
mov
mov
sti
imul
scas
mov
fisttp
dec
mov
xor
or
ror
xor
sbb
stos
mov
add
out
push
pop
jmp
adc
pop
sahf
icebp
(bad)
cdq
jle
rcl
inc
test
jmp
pop
and
bound
xchg
jb
inc
pushf
cmp
fwait
push
jns
sub
adc
mov
xchg
push
aam
mov
std
inc
jge
mov
inc
or
cmp
push
das
imul
ds
repnz
test
xchg
sar
pop
loop
sub
sbb
xchg
pop
xor
into
pop
cmp
jae
mov
fcomp
adc
aad
sub
mov
not
lock
repnz
aas
mov
jae
outs
push
jl
mov
cld
stos
fcomp
push
stos
xchg
pop
cmp
and
movs
shl
imul
lods
fadd
or
scas
mov
cld
and
adc
leave
dec
push
test
jbe
jae
or
ins
ror
inc
pop
cwde
daa
retf
push
mov
pop
mov
mov
mov
es
xor
push
mov
enter
aad
rcr
test
sbb
test
out
mov
mov
(bad)
mov
js
xchg
arpl
push
test
push
sbb
push
pushf
cmp
inc
stc
sbb
sub
mov
arpl
call
sbb
fdiv
in
aam
les
sbb
addr16
mov
mov
and
dec
aam
inc
mov
mov
ins
mov
ja
lods
call
jp
or
rcr
adc
out
test
pop
pop
dec
cld
adc
loope
lds
xchg
inc
add
ja
jae
imul
add
mov
push
pop
sti
nop
jae
mov
sbb
imul
sbb
je
mov
add
in
inc
xchg
mov
sub
outs
pop
xchg
in
fcom
adc
jle
sbb
hlt
or
arpl
fbld
and
outs
cmp
or
cmp
dec
mov
cmps
pop
jl
adc
fisubr
xor
inc
push
add
fsub
inc
loop
lods
push
jmp
xchg
mov
mov
int
(bad)
aam
and
jae
into
push
xor
cmps
sub
sbb
sub
js
sub
gs
cdq
xor
xor
pop
arpl
stc
cmp
ja
mov
jb
adc
je
lods
jg
retf
add
xchg
cld
jl
leave
dec
sbb
cmps
jno
shr
jge
mov
test
adc
aaa
es
lea
sub
xor
sbb
into
outs
das
cmp
or
cmp
jnp
in
cwde
dec
xchg
out
mov
mov
data16
aad
loopne
(bad)
pop
mov
xchg
fistp
mov
jae
fsub
mov
ret
sbb
outs
fwait
aaa
mov
push
gs
pop
shr
mov
iret
test
inc
outs
lods
pushf
cmp
mov
dec
xchg
push
(bad)
pop
adc
pop
adc
inc
xchg
add
push
fdiv
push
sub
inc
ins
mov
test
adc
inc
sbb
jne
pop
lea
out
mov
aad
jl
rcl
call
pop
repnz
jb
test
sub
push
push
adc
pop
pop
jnp
cwde
iret
and
sbb
test
and
push
sub
inc
dec
lea
inc
sbb
addr16
idiv
imul
call
enter
and
sbb
mov
loope
rcl
ins
pop
jbe
fcmove
sbb
in
movs
js
mov
les
scas
jg
xlat
lods
mov
movs
cli
jb
pop
sub
rep
fs
rol
jae
lds
xor
into
pop
sbb
jecxz
jp
sbb
mov
xchg
push
test
not
mov
rcl
sbb
movs
cmp
add
sbb
popf
pop
fldcw
mov
push
enter
les
popf
mov
into
jecxz
shl
adc
lods
(bad)
sbb
mov
xchg
fisub
dec
mov
or
mov
dec
mov
mov
mov
bound
sbb
jl
pop
iret
push
(bad)
ja
push
cmp
cmp
cmp
je
test
loop
push
hlt
mov
xchg
jge
(bad)
lahf
fwait
rcl
jecxz
je
stos
in
jae
cdq
(bad)
mov
lods
mov
scas
(bad)
in
xor
stc
inc
sbb
sub
xor
push
dec
cmp
dec
pop
dec
pop
inc
inc
mov
ds
loope
and
inc
popa
xor
bnd
jl
jmp
fnstenv
js
xor
std
cmp
(bad)
repz
mov
sbb
and
ds
add
cmps
stos
pop
push
xchg
xchg
jo
push
cmc
test
dec
aam
xor
call
lods
inc
inc
jmp
jge
mov
fnstsw
jno
imul
xchg
dec
push
call
jle
inc
je
lods
cmp
push
jmp
int3
adc
sbb
mov
push
pop
aam
lods
cmp
js
pop
dec
int
jnp
mul
xor
sbb
call
xor
jnp
imul
and
enter
(bad)
mov
call
or
pop
adc
or
inc
mov
mov
jns
push
adc
or
stos
pop
imul
fidivr
test
test
inc
(bad)
mov
pop
cmp
jle
mov
jae
xchg
nop
push
pop
es
or
arpl
out
ins
outs
cmps
sbb
mov
popa
(bad)
repz
sahf
adc
sbb
mov
cdq
iret
(bad)
test
jae
data16
mov
repnz
sbb
mov
mov
ss
jbe
mov
mov
stos
fstp
push
xor
sub
mov
lea
cld
pop
int
add
dec
mov
mov
xor
jmp
out
clc
or
(bad)
xchg
xchg
sbb
cmps
adc
xchg
ror
jne
lea
xchg
push
test
in
fwait
data16
out
shl
add
mov
cmp
xor
jle
push
das
imul
sub
jb
nop
xchg
adc
jl
shr
adc
jb
mov
(bad)
dec
mov
sub
or
stos
pop
into
call
cdq
popf
repz
cwde
mov
(bad)
fstp
jmp
in
daa
mov
lds
jmp
cmp
pop
cdq
pushf
or
lds
out
jmp
sbb
jg
dec
cmp
add
pop
dec
lods
shl
mov
xchg
push
and
push
arpl
lea
jo
xlat
sub
xchg
stc
mov
mov
push
push
rcl
loope
mov
ins
jg
mov
bound
aad
inc
cwde
xor
std
(bad)
popf
jecxz
test
clc
pushf
jle
jb
or
icebp
mov
shl
cmps
jg
xor
in
cmp
mov
sbb
out
and
ins
pushf
mov
mov
stc
jp
scas
cmp
sub
imul
push
pop
mov
sbb
rol
aaa
pop
push
enter
rcl
xchg
mov
repnz
ins
mov
push
enter
sbb
int3
push
xor
popf
xchg
pop
jnp
pop
dec
adc
sbb
lods
and
mov
lds
dec
adc
xchg
aas
rcr
add
imul
pop
fsubr
cs
lock
sub
and
sbb
adc
out
xchg
sbb
dec
dec
cdq
jnp
loopne
mov
add
pop
nop
jb
pop
xor
jb
mov
and
mov
jnp
sbb
shl
push
addr16
pop
imul
ins
xor
ret
lods
xor
repnz
mov
in
inc
push
xchg
dec
inc
or
and
pop
pushf
push
scas
bound
cmps
inc
push
mov
and
pop
sbb
adc
add
out
(bad)
xor
cmp
push
repnz
arpl
sar
sbb
fild
sti
leave
mov
sahf
jp
rol
popa
pop
shr
sbb
int
mov
pop
push
in
jb
mov
call
and
inc
es
or
jb
das
shl
dec
and
mov
retf
push
js
xchg
adc
data16
xor
dec
sbb
test
sub
ins
aas
inc
dec
adc
retf
push
aad
mov
mov
mov
sbb
test
push
or
gs
jge
xor
mov
jo
xchg
ret
xchg
cmp
mov
pop
mov
jae
dec
mov
jge
adc
out
jle
aam
sbb
es
jmp
mov
dec
adc
xchg
ret
mov
push
ds
mov
pop
ja
adc
pop
pushf
jne
icebp
movs
mov
test
ret
mov
fisubr
jnp
repz
shl
rol
and
xor
jo
cmp
mov
js
add
stos
fsub
mov
push
xchg
ret
mov
pop
pop
rcl
mov
mov
jmp
mov
jl
mov
and
cs
stos
xor
pushf
fist
add
pusha
mov
mov
hlt
sub
and
mov
xor
in
xchg
adc
adc
add
(bad)
push
movs
pop
xor
std
mov
in
mov
jg
add
js
mov
cdq
cmps
mov
jo
jge
dec
push
scas
push
push
stos
stos
dec
mov
dec
mov
xchg
push
stc
lds
or
imul
adc
fist
sub
div
sbb
sbb
test
outs
mov
sti
mov
and
push
leave
pop
xchg
das
or
aas
push
ficom
fs
push
in
enter
mov
pop
jne
je
popf
test
cdq
inc
int
sub
lds
js
cmps
lea
xor
aad
(bad)
addr16
xor
adc
sbb
loopne
add
fwait
push
adc
jmp
cmps
and
jae
or
adc
jae
retf
not
into
mov
and
jmp
sub
imul
bound
fwait
pop
out
lock
enter
cmpxchg
fnstenv
mov
cmp
aad
stos
mov
pop
xor
or
mov
sbb
popa
or
mov
cmp
push
ficom
sbb
dec
cdq
out
rcl
cmp
jb
xor
cs
ss
sub
outs
xchg
mov
bound
inc
push
cmp
and
ins
retf
mov
or
outs
retf
sbb
sub
push
ins
sub
sar
je
add
int
repnz
movs
lds
dec
aaa
mov
aas
add
cli
(bad)
xchg
icebp
mov
mov
jb
push
and
sub
sbb
test
mov
sub
scas
das
cmps
mov
fst
jb
call
fistp
jbe
test
pop
enter
inc
adc
sub
jecxz
dec
je
shr
ins
(bad)
adc
lds
enter
xor
xchg
pop
and
loope
ret
adc
cmc
aam
pop
int
cld
inc
mov
push
adc
in
pop
sub
stos
aam
jecxz
inc
sub
imul
inc
fdiv
jns
ja
and
mov
daa
or
inc
xor
jno
mov
xchg
neg
jg
xchg
sbb
push
mov
push
jl
or
and
aam
cmp
jne
fucomp
xchg
sub
movs
adc
pop
iret
xchg
add
push
mov
sub
push
ins
jae
movs
pop
inc
jmp
push
lods
adc
sub
inc
pop
repz
pop
xor
sbb
clc
inc
add
adc
movs
test
pop
jp
mov
sbb
dec
in
or
hlt
fdivr
das
inc
push
fisubr
mov
mov
cmp
retf
lea
sahf
into
mov
mov
(bad)
cld
sahf
hlt
add
pusha
aaa
xchg
jp
jbe
jns
cmp
cmp
mov
xchg
jb
xor
and
test
fcomp
mov
mov
std
mov
jp
ror
mov
fwait
xchg
sub
push
mov
iret
xchg
loopne
or
mov
cwde
loop
mov
sub
lods
ss
enter
jno
rcr
test
cs
pop
jge
xchg
xor
or
aam
push
retf
cli
mov
push
pop
and
js
int3
or
mov
call
fdiv
mov
push
loope
xchg
arpl
mov
mov
push
into
xor
cmp
mov
fld
fbstp
xor
ins
cmp
fwait
repz
adc
out
loop
rep
sub
push
and
and
push
mov
sub
sbb
and
test
mov
mov
push
ror
xor
jbe
int
cmp
inc
mov
outs
mov
not
rol
xchg
bound
mov
jge
sub
repz
stos
jbe
call
cmp
bound
push
jnp
mov
push
lods
push
push
inc
imul
mov
xchg
add
ret
ror
inc
fwait
mov
pop
jae
shl
dec
imul
stos
pop
mov
(bad)
leave
adc
outs
je
inc
xor
mov
xor
mov
xchg
fdiv
push
sub
fild
aad
jb
inc
mov
sub
xor
(bad)
xlat
mov
add
sub
enter
cmp
xor
popf
or
mov
jmp
and
mov
and
xor
adc
aam
and
push
or
cmp
mov
scas
mov
test
lds
mov
lock
push
inc
dec
js
mov
jg
daa
pop
outs
cmps
pop
in
test
jbe
jnp
stc
mov
jmp
or
jno
adc
jbe
jmp
cld
int
sbb
jae
in
les
mov
stc
lahf
pop
dec
sbb
out
std
push
je
jl
or
rcr
je
push
fisub
adc
adc
add
test
lods
mov
add
xlat
ins
xchg
in
test
cmp
loop
(bad)
jae
mov
loop
dec
sub
jns
es
xchg
in
out
adc
mov
xchg
ss
push
mov
adc
xchg
pop
mov
in
xchg
mov
(bad)
in
adc
frstor
jmp
aas
mov
mov
adc
jge
push
ss
jl
retf
fiadd
pop
jmp
test
or
jle
repz
lds
inc
cmc
clc
xchg
sbb
inc
adc
xor
adc
mov
jnp
jo
int
push
fist
dec
daa
push
sbb
sbb
loop
int3
and
lea
jecxz
out
lock
mov
or
das
cs
sti
rol
(bad)
dec
and
ins
pushw
jmp
scas
or
add
add
jmp
adc
mov
hlt
(bad)
hlt
in
add
cli
push
les
cmps
xchg
cli
addr16
sbb
mov
pop
push
imul
repz
iret
xchg
inc
pop
jecxz
scas
leave
push
mov
repnz
pop
pop
out
push
sbb
or
sbb
test
dec
retf
inc
cmc
in
outs
sub
and
jne
inc
or
repz
out
inc
mov
imul
push
sti
cmps
xlat
call
(bad)
ins
pop
pop
sar
fs
jecxz
ins
aam
jmp
xor
xchg
sti
mov
scas
jg
mov
xchg
test
xchg
dec
sub
repz
mov
xchg
daa
ret
sbb
cli
sti
fisubr
dec
push
loop
outs
pop
adc
inc
mov
fdivr
cmc
jle
xor
inc
xchg
mov
fist
xor
inc
ja
cld
xor
push
hlt
js
stos
dec
sbb
sub
outs
and
iret
cmps
cmova
jecxz
arpl
xchg
dec
movs
cdq
out
add
inc
jo
sub
rcl
loop
imul
xor
xchg
rcl
stos
leave
cmp
cld
sbb
sbb
enter
inc
mov
mov
and
xor
jno
xchg
xor
cld
mov
dec
xchg
xchg
xor
add
push
dec
call
xor
fadd
mov
xor
rol
mov
inc
adc
loop
or
fdiv
or
retf
push
sbb
(bad)
stc
(bad)
mov
jno
rcr
lea
fstp
mov
jae
jae
cmc
mov
fnstsw
repnz
fbstp
mov
sbb
sbb
inc
cli
adc
fld
ins
jno
(bad)
sahf
loopne
and
jge
loopne
bound
test
fiadd
inc
xchg
stos
mov
mov
movs
mov
das
mov
in
(bad)
sbb
or
mov
imul
lahf
dec
mov
jl
jne
jae
and
xchg
pop
sbb
ins
push
add
mov
xchg
xchg
lock
cmp
sub
repz
dec
sbb
pop
adc
mov
in
sbb
cmps
gs
sbb
adc
mov
mov
or
mov
push
(bad)
rcl
int
lock
jne
pushf
xor
inc
xchg
jb
or
imul
add
adc
jl
sub
(bad)
xchg
std
ja
ret
mov
ret
jecxz
mov
push
retf
pushf
mov
das
test
push
int
jecxz
dec
test
adc
repz
xchg
jmp
loop
pusha
out
mov
jo
fisub
gs
inc
mov
push
mov
(bad)
jl
cmp
mov
and
jl
adc
int3
mov
mov
pusha
stos
pushf
pop
sbb
test
cdq
mov
pop
adc
pushf
mov
imul
fs
in
fnsave
lods
pop
sbb
adc
mov
xchg
sub
test
dec
dec
pop
ret
push
push
enter
xchg
imul
iret
xchg
pop
mov
out
cmc
stos
shl
adc
cmp
shl
sub
mov
xor
data16
adc
or
fwait
loope
mov
movs
outs
sub
lods
std
and
adc
(bad)
fcomp
loope
xchg
lea
pop
pop
nop
repz
cmp
dec
sbb
fs
xor
test
int3
scas
les
push
pop
xor
mov
sbb
into
fdiv
dec
aaa
xchg
call
push
or
adc
xor
mov
sbb
push
xchg
pop
xchg
jae
and
jae
shl
fimul
mov
(bad)
adc
pop
or
outs
sbb
addr16
inc
(bad)
fist
test
mov
push
pusha
inc
xlat
sbb
dec
call
ins
rol
sub
mov
pusha
pushf
push
mov
jnp
xor
mov
jae
(bad)
ins
stos
popf
imul
test
pusha
data16
mov
cmp
data16
test
and
enter
stc
mov
clc
sbb
mov
retf
push
xlat
pop
scas
mov
test
data16
out
fiadd
sub
add
lock
push
(bad)
dec
into
mov
xlat
loopne
adc
pop
(bad)
aad
jae
shr
fcom
retf
fs
and
xor
cld
mov
popf
sub
inc
xlat
and
sbb
cmc
lea
mov
add
jae
rcl
rcl
xchg
int3
arpl
pushf
shl
ror
aaa
lods
leave
ret
bound
into
xchg
mov
out
mov
inc
cld
push
inc
inc
pop
lods
rcl
fs
pop
ins
inc
adc
cmp
or
fnsave
and
sbb
pop
fstp
adc
sub
xchg
stos
pushf
xor
mov
add
adc
xor
or
mov
scas
std
rcr
jmp
xchg
jo
arpl
mov
inc
push
push
aad
fld
shl
fwait
in
jae
out
fild
push
leave
push
std
mov
addr16
sbb
adc
out
mov
aam
lods
cmc
leave
or
push
rcl
aas
ins
loop
mov
xchg
and
rol
or
add
aam
addr16
xchg
push
sbb
rol
dec
scas
xchg
cmp
int
mov
int3
in
je
jmp
cmp
pushf
jae
push
xor
loopne
pop
ja
stos
mov
jle
xor
or
cmps
xor
and
sbb
xchg
jno
icebp
jmp
cmps
mov
cmp
xchg
not
push
and
mov
add
rcr
les
mov
data16
lahf
sub
(bad)
lods
into
pop
mov
inc
pop
sti
jmp
loop
dec
iret
mov
mov
sahf
sti
jmp
sbb
rcr
push
xchg
adc
or
mov
inc
pop
idiv
and
out
push
ja
aaa
mov
cmp
pop
lea
lods
stc
jae
lods
jo
lods
cdq
stos
dec
cmp
je
xor
mov
push
cmps
and
inc
adc
call
in
rcr
test
sbb
cmp
mov
les
out
js
add
push
iret
adc
sbb
retf
and
mov
and
scas
out
ret
sar
test
int3
rol
push
push
clc
ficomp
dec
cmp
jb
aad
xor
nop
and
icebp
xlat
mov
xchg
inc
xchg
cs
jae
mov
mov
scas
call
pop
sbb
jmp
fstp
inc
add
clc
sub
pop
push
push
mov
mov
or
(bad)
add
or
lock
cdq
nop
mov
mov
cmp
or
xchg
xor
push
ret
inc
lods
sub
jnp
movs
test
lods
add
push
cmp
mov
cmp
inc
or
xchg
push
sti
dec
adc
fisub
xor
push
and
push
mov
push
xor
xor
mov
(bad)
xchg
je
mov
adc
jbe
addr16
cmps
push
fcmovbe
mov
stos
and
test
inc
test
pop
shr
lock
(bad)
test
fdivr
jge
or
jno
push
mov
faddp
xor
ins
pop
or
push
mov
jnp
popf
xchg
(bad)
ja
mov
rcr
fidivr
add
jb
mov
mov
ret
xor
test
ja
and
into
shr
or
pop
ret
(bad)
movs
mov
mov
adc
xchg
cmp
mov
pop
clc
dec
xor
mov
xor
js
loopne
fmul
cs
lods
pop
cdq
mov
push
xor
jbe
push
fldcw
mov
dec
or
imul
(bad)
frstor
inc
dec
fwait
movs
lods
xor
test
je
lea
inc
inc
test
cmps
pusha
pop
jmp
cmps
and
push
stos
movs
jno
push
enter
or
dec
pop
inc
jmp
adc
xchg
cmp
xchg
div
mov
push
and
mov
lahf
cdq
sti
dec
call
and
sbb
push
jbe
jg
je
shl
stos
popf
lock
push
push
and
sub
ret
stos
jp
les
je
and
adc
out
pop
aam
mov
adc
outs
push
or
push
add
js
xchg
cmps
aam
mov
pop
jg
fs
xor
mov
xor
clc
jno
sub
ret
jae
adc
jo
shl
dec
pop
or
je
in
xor
xor
test
jle
cmps
jp
dec
jecxz
je
out
jmp
stos
mov
imul
sbb
fisubr
js
not
jnp
mov
cmc
dec
in
inc
inc
xchg
xor
out
mov
movs
dec
rcl
lahf
cmp
jnp
adc
(bad)
adc
jne
push
aam
cdq
mov
retf
jns
sub
cmp
sbb
xchg
push
dec
test
je
and
sbb
and
sub
adc
push
in
or
jne
jge
(bad)
lea
lods
gs
jbe
xor
shr
arpl
pop
xchg
xlat
pop
xchg
mov
(bad)
mov
push
pop
sub
sbb
ins
sub
pop
mov
ficom
xchg
xchg
ss
pop
sbb
mov
or
lods
test
sbb
cmps
stos
outs
xlat
mov
js
mov
test
dec
pop
jecxz
adc
jecxz
in
sti
and
jae
lods
retf
sbb
inc
enter
sar
rcl
lds
mov
or
out
lock
mov
pop
ins
retf
inc
or
mov
jo
aam
mov
cmp
cmc
retf
jp
mov
cmp
push
mov
xor
aam
in
xor
and
xchg
aaa
pop
in
mov
inc
push
aaa
inc
mov
add
ins
mov
pop
scas
push
xchg
xchg
xchg
cmp
mov
adc
scas
lods
lods
adc
sahf
jmp
or
shr
add
or
mov
test
test
mov
out
add
es
scas
out
cmp
jmp
cli
jo
push
sbb
mov
adc
(bad)
iret
jno
aad
mov
dec
jmp
push
mov
or
lahf
nop
aas
fild
call
je
lock
xor
lods
in
xor
jmp
or
sbb
arpl
jg
mov
or
inc
dec
rcl
mov
mov
xchg
or
ja
mov
dec
mov
dec
mov
inc
inc
and
cwde
mov
das
adc
dec
repz
icebp
mov
and
out
jnp
push
pop
dec
mov
xchg
xlat
and
push
mov
mov
inc
jecxz
jo
sbb
adc
dec
adc
dec
jg
jmp
jp
js
or
sub
rcr
pop
jmp
add
sub
ds
pop
loop
pop
and
or
aad
rcr
int3
mov
xor
int3
mov
mov
mov
popf
sub
leave
xchg
lods
dec
or
cmp
sar
mov
gs
sbb
sbb
xchg
ins
mov
and
les
div
push
loope
xchg
js
cmp
test
jle
mov
iret
icebp
push
sbb
jnp
push
retf
push
jnp
pop
and
mov
mov
sti
cwde
lds
dec
pusha
test
ret
gs
xchg
adc
in
loopne
inc
je
iret
ins
mov
ja
inc
cs
sbb
sbb
into
mov
jae
add
pop
(bad)
mov
or
jecxz
aas
push
push
pop
push
test
adc
xchg
int
push
mov
leave
mov
imul
btr
jmp
pop
popa
mov
jae
in
mov
enter
rcr
adc
push
(bad)
imul
jns
mov
xor
mov
js
sbb
sbb
movs
lahf
mov
or
add
sbb
das
aam
sbb
xor
dec
repz
xor
mov
out
ret
push
sbb
sub
dec
lods
cli
mov
pop
pop
mov
mov
call
push
or
jp
popf
(bad)
jle
imul
int
xchg
push
and
adc
retf
push
fcom
outs
xor
mov
push
iret
jb
or
cs
fcomp
retf
sbb
or
and
mov
pushf
dec
mov
push
imul
ficomp
lds
(bad)
push
pop
add
fwait
int3
or
cmp
data16
jl
sahf
enter
mov
mov
icebp
xchg
jns
push
mov
mov
movs
adc
push
popa
popf
xchg
hlt
popf
mov
loope
and
jp
dec
xchg
aas
sti
cmp
(bad)
and
aam
scas
cmp
xchg
xchg
add
fdiv
xchg
mov
or
mov
inc
addr16
xchg
jne
and
jns
mov
cli
push
xchg
sbb
inc
push
scas
and
mov
imul
sbb
pop
push
fcomi
call
in
sbb
gs
bound
cmps
mov
xchg
in
test
sbb
test
adc
ins
shl
inc
xor
ret
sbb
push
mov
jns
xlat
mov
adc
lods
inc
mov
inc
adc
adc
hlt
fucomi
xor
cmp
mov
out
xor
fwait
push
xchg
xchg
outs
dec
repz
data16
(bad)
xchg
mov
sbb
popa
xor
test
icebp
jbe
cmps
js
xlat
adc
dec
pop
bnd
xchg
cmp
and
xchg
xor
fidiv
(bad)
jae
aam
sbb
xchg
adc
std
outs
call
movs
out
pop
sbb
jle
cmps
cmp
clc
mov
xor
aaa
lea
lods
push
xchg
cmps
mov
xchg
arpl
fsubr
or
cld
xchg
mov
jp
sete
repnz
xor
cmp
adc
and
in
fsub
xchg
push
fwait
xchg
jne
fldenv
rol
sbb
outs
or
jmp
iret
mov
call
loopne
xchg
dec
dec
cmc
dec
nop
mov
sbb
inc
sbb
clc
push
add
or
inc
fwait
ja
scas
nop
mov
xchg
mov
xchg
ret
jns
addr16
fsubr
mov
xchg
mov
stos
icebp
bound
sub
retf
cwde
daa
(bad)
jnp
adc
and
adc
mov
push
mov
rcr
pusha
jae
push
xchg
xlat
xor
lods
arpl
push
and
add
mov
outs
jle
scas
pushf
movs
out
xchg
dec
dec
fist
push
mov
pop
(bad)
rep
sbb
hlt
repz
mov
sbb
sub
in
fs
mov
mov
clc
inc
sbb
xor
sbb
jl
and
mov
cmp
popa
inc
xor
(bad)
mul
repz
dec
xor
xchg
mov
mov
and
aad
add
fmul
and
movs
xchg
das
lods
loopne
out
(bad)
adc
pusha
sbb
jecxz
jb
push
jae
and
mul
leave
test
pop
cmp
lahf
adc
shr
imul
mov
dec
(bad)
icebp
cli
movs
shl
leave
xor
ficom
fcmovne
pop
loopne
lds
mov
pop
xchg
inc
mov
(bad)
cs
je
jmp
lahf
loop
mov
lea
sub
mov
xchg
cmp
jae
je
cld
lock
mov
adc
mov
xchg
jecxz
pop
fstp
push
sub
mov
mov
xor
das
jmp
jae
ja
ret
pop
aam
mov
je
movs
out
mov
jne
out
jae
add
mov
sbb
sar
aas
mov
std
data16
in
mov
xchg
scas
xchg
mov
loopne
xor
xchg
loope
sbb
add
xor
outs
mov
sbb
mov
repz
sub
lods
jae
push
cmp
(bad)
or
mov
sub
jmp
and
lahf
xchg
mov
movs
jge
inc
xor
sub
std
inc
or
ins
and
out
ss
popa
jecxz
cmp
mov
imul
lock
add
sbb
adc
movs
(bad)
pusha
mov
mov
xchg
pop
loop
inc
pop
mov
sbb
mov
aam
xchg
inc
jge
loope
and
jae
dec
cmp
push
mov
les
xchg
repnz
aam
jge
and
sbb
sub
push
pop
lds
call
mov
or
adc
jae
add
bnd
scas
xlat
jns
lods
cmp
add
jae
dec
std
cmp
sbb
jb
arpl
cwde
inc
retf
into
pop
xor
idiv
sbb
in
dec
inc
call
sete
(bad)
movs
xor
cs
and
inc
push
stos
push
mov
mov
jnp
dec
ret
adc
xor
inc
pop
leave
sbb
mov
sbb
push
fcmovne
xor
jge
mov
push
or
hlt
mov
mov
xor
scas
sub
xor
inc
sbb
cmp
rcl
dec
push
mov
loope
xchg
or
jbe
mov
jns
push
push
inc
jge
push
imul
rcl
sub
hlt
push
movs
jae
mov
and
add
push
pusha
rcl
jge
lods
ss
jae
ficomp
cmp
icebp
je
mov
cdq
bound
push
mov
pushf
add
rol
es
mov
xor
hlt
loopne
jp
cld
sbb
xor
je
pop
mov
ja
xchg
retf
mov
pop
add
lods
repz
jg
xor
xchg
cmp
xor
and
add
inc
add
mov
inc
xchg
pusha
data16
cmp
mov
and
out
mov
sub
sbb
cmps
push
(bad)
clc
sub
pop
cdq
mov
test
cmc
imul
dec
out
out
inc
mov
and
sbb
outs
cmp
sub
add
(bad)
ss
push
hlt
mov
xchg
and
inc
dec
xchg
std
js
mov
je
dec
adc
dec
retf
xor
ja
fld
mov
jl
inc
xor
loope
fdiv
int3
(bad)
movs
or
push
adc
xchg
ins
call
inc
mov
aad
pop
add
sti
dec
sbb
ficomp
cli
jl
call
sahf
or
xchg
mov
inc
dec
xor
dec
sbb
mov
cmps
mov
or
cmp
jmp
movs
add
sbb
popa
js
pop
test
mov
mov
pop
sbb
je
and
mov
xor
pushf
cli
jb
test
mov
call
dec
mov
aas
adc
push
jae
mov
hlt
(bad)
push
arpl
mov
data16
cmp
jle
and
sbb
adc
inc
fdiv
scas
out
loop
out
pop
je
out
jmp
inc
adc
xchg
xlat
or
mov
test
cmp
xchg
cmp
add
out
pop
ret
add
cmp
ja
sub
dec
test
shl
mov
mov
xchg
outs
outs
lock
pop
stos
jae
(bad)
sub
push
adc
shr
inc
jae
jae
call
xor
add
xor
cmc
ds
ret
(bad)
cmc
leave
out
ret
test
mov
scas
sub
xor
shl
adc
dec
stc
xchg
jne
out
jb
jo
leave
adc
fisubr
add
int
cmp
push
and
xor
pop
jns
out
xor
fwait
jns
in
rol
idiv
push
addr16
xor
sub
mov
push
sbb
dec
shl
or
sbb
call
and
mov
jb
and
bound
xchg
push
cmp
sub
fcomip
mov
mov
sbb
xor
nop
jae
adc
mov
sbb
sbb
jmp
jno
mov
ins
ret
adc
inc
mov
outs
push
mov
jmp
sub
sub
sar
rol
xor
mov
test
(bad)
sbb
lea
ficom
scas
sbb
lods
repnz
mov
in
aam
xor
cld
je
jl
mov
jae
jmp
push
add
(bad)
jp
cdq
mov
fisub
fcom
add
mov
es
add
call
sahf
xchg
push
push
push
aad
imul
or
cmp
mov
dec
sahf
xor
shl
pushf
dec
lods
xchg
pop
fwait
push
fbld
mov
mov
leave
cmps
clc
repnz
dec
sbb
inc
mov
sub
js
sbb
inc
jb
int3
jle
and
clc
xor
push
and
scas
xchg
xor
outs
scas
fisub
iret
adc
retf
icebp
mov
cmp
out
pop
arpl
dec
mov
ds
inc
leave
sbb
popf
fbld
pop
dec
push
test
imul
out
mov
cdq
stos
sahf
push
push
sbb
xchg
jne
sbb
inc
xchg
jae
fstp
cmp
mov
jne
fwait
sbb
mov
mov
js
push
inc
push
jecxz
mov
sbb
nop
call
mov
stc
lods
mov
retf
mov
icebp
test
movs
enter
aas
in
int
lahf
add
pushf
cmps
jb
xchg
cmp
lods
call
sbb
cs
(bad)
mov
cmp
aam
push
in
mov
sbb
jnp
cmp
dec
xchg
mov
xchg
sub
mul
pop
jmp
xchg
jbe
xchg
xchg
xor
pop
mov
daa
fadd
in
mov
imul
ficom
call
add
fcmovnu
jae
test
push
jno
xchg
cmp
cmc
cli
je
mov
mov
pushf
pop
scas
ins
in
mov
stos
mov
ss
xor
xor
mov
mov
adc
xchg
call
jne
mov
jbe
stos
mov
inc
sbb
loop
or
mov
inc
mov
std
fcmovu
out
inc
lahf
retf
paddusw
ja
dec
test
hlt
jae
jns
adc
dec
stc
fs
inc
sbb
ds
test
call
inc
push
repnz
cmp
das
cmp
mov
pop
fbstp
xchg
jle
(bad)
fisttp
xchg
sar
enter
and
xchg
enter
push
xchg
and
mov
xor
test
xchg
jbe
cwde
inc
shl
lea
shr
pop
push
cli
jae
dec
mov
xchg
sbb
push
mov
and
into
je
rol
adc
cmp
cmp
jnp
icebp
mov
and
jae
cld
jb
in
push
imul
ins
loope
sub
jmp
add
fistp
dec
jns
pop
jmp
hlt
dec
mov
dec
mov
cmp
cli
leave
sbb
sub
xchg
lea
fisttp
cmp
(bad)
ss
dec
aaa
scas
or
xchg
cmp
fs
xchg
mov
jae
loop
mov
xor
mov
mov
cmps
inc
(bad)
sbb
dec
jns
(bad)
hlt
lods
sub
in
outs
jae
test
mov
lock
mov
call
cmp
lds
push
and
jae
in
pushf
into
(bad)
les
push
loopne
xor
push
sbb
stos
daa
out
lods
ja
in
retf
xchg
mov
fwait
mov
pop
sub
mov
sbb
stos
jb
xor
pop
dec
sar
hlt
mov
xor
(bad)
movs
daa
lds
xor
pop
jne
mov
retf
lar
out
popa
push
mov
in
mov
and
cmps
mov
in
xor
outs
ins
mov
out
dec
into
push
je
(bad)
xchg
mov
xchg
cmp
sbb
out
stos
jno
push
test
push
hlt
cmp
and
daa
xor
dec
sbb
sbb
jne
int
adc
cs
sbb
hlt
sahf
leave
mov
sbb
mov
mov
jle
cmp
cmc
or
(bad)
ds
repz
shr
lods
mov
add
pusha
pop
push
jae
add
adc
enter
sbb
and
arpl
(bad)
cmc
push
add
imul
jnp
cmps
popa
jno
pop
pop
fstp
imul
sti
aam
imul
out
xor
into
out
test
mov
popf
dec
sbb
cmps
mov
fldcw
xor
pop
hlt
pop
pop
es
(bad)
lods
nop
jp
sbb
mov
aad
push
dec
and
lea
ret
out
rcl
push
icebp
xchg
inc
call
jae
inc
mov
add
push
pop
jmp
mov
cmps
shr
icebp
add
jns
add
retf
outs
inc
test
mov
retf
mov
jae
adc
xor
and
aas
xchg
retf
jmp
mov
nop
sub
outs
test
push
jl
sub
jnp
loope
leave
xchg
jg
movs
test
xchg
push
cmp
out
sub
mov
repz
jge
fisubr
std
and
xchg
jne
push
lods
fnstenv
mov
test
jns
fsub
or
and
lods
fldcw
add
pop
pop
adc
mov
xchg
ins
xor
sbb
cmp
into
sub
in
call
dec
fsub
ret
jp
cmps
dec
xlat
mov
rcr
pop
fucomi
pop
mov
pushf
sti
int3
sar
ss
add
mov
outs
movs
push
add
jne
pop
mov
jns
dec
sub
int3
clc
xchg
ins
inc
sbb
retf
sbb
push
inc
sub
jae
mov
test
inc
cmps
int
cmc
(bad)
jae
stc
pop
push
mov
jb
inc
dec
retf
lock
(bad)
adc
xor
xchg
dec
xor
push
les
(bad)
jmp
fadd
shl
imul
jmp
(bad)
mov
out
call
adc
mov
aas
jecxz
mov
mov
mov
outs
or
cmp
push
push
cdq
imul
adc
dec
mul
aas
jns
xchg
(bad)
dec
mov
loope
aad
jp
daa
jecxz
outs
out
push
imul
scas
adc
aad
jo
xchg
sbb
push
out
int3
inc
cli
ret
lods
sub
sbb
xchg
adc
scas
pop
adc
sub
jbe
xlat
ret
push
sbb
rol
mov
enter
out
lea
inc
int3
xor
scas
push
outs
jns
sar
inc
cmp
pop
daa
mov
lods
es
cmp
push
dec
mov
or
(bad)
sbb
push
cmp
dec
and
sahf
loope
and
xchg
and
ss
std
imul
cld
stc
imul
cdq
xchg
pop
mov
push
jmp
inc
or
cmp
js
and
shr
xchg
(bad)
test
sbb
push
lock
jne
jae
int3
push
sbb
push
mov
adc
push
aad
xchg
push
pop
adc
aad
out
scas
jb
xchg
popa
movs
xchg
mov
imul
pop
xchg
push
arpl
or
in
mov
mov
cwde
jno
out
sub
sub
sbb
add
lds
dec
or
stos
or
xchg
cmps
mov
repnz
fcmovnb
sti
call
stos
mov
add
je
pop
dec
pusha
lds
push
adc
pop
loopne
mov
add
sbb
pushf
xchg
dec
mov
popf
retf
jp
ret
pop
aad
jns
xchg
pushf
in
xor
test
aam
ja
xchg
ficom
out
je
mov
(bad)
in
(bad)
xor
mov
(bad)
jg
fstp
dec
dec
enter
jmp
cwde
push
sbb
cmp
mov
adc
fcom
movs
fiadd
ret
inc
std
sub
jns
push
and
call
lea
pop
dec
dec
dec
div
cdq
mov
xchg
lods
lds
hlt
cmp
xor
je
jp
int3
(bad)
imul
icebp
popa
sub
sbb
pop
sbb
das
scas
mov
xor
sbb
hlt
xor
inc
icebp
mov
jne
je
int
test
ja
sbb
adc
xor
mov
inc
vpmaddwd
push
cdq
adc
sub
add
or
scas
xor
jne
sub
out
jl
mov
cmp
adc
scas
rol
je
mov
add
jno
mov
inc
pusha
movs
sub
fld
popa
or
popf
arpl
or
out
sbb
jl
mov
cmp
adc
xchg
(bad)
sub
icebp
add
jbe
outs
add
ret
cli
inc
rol
xchg
scas
enter
popa
jle
jge
mov
jb
sbb
inc
mov
(bad)
adc
pop
xchg
and
mov
in
xchg
mov
jae
in
push
aaa
(bad)
pop
dec
scas
push
push
jmp
jne
ret
retf
jno
fcom
jbe
sbb
ins
(bad)
sub
gs
pop
push
popa
int3
push
and
push
sbb
add
and
jae
sub
mov
sbb
sbb
fild
pop
shr
retf
xchg
dec
je
cli
cmp
ret
mov
cld
mov
pop
sbb
repz
sub
icebp
and
push
cmp
je
push
aaa
jb
pushf
xor
lods
add
popf
adc
jae
lock
lds
cmp
xchg
aas
es
(bad)
fwait
jns
fisub
inc
and
les
fdivr
in
push
xchg
into
ret
mov
shl
mov
repnz
xor
scas
and
adc
jns
fwait
pop
inc
dec
push
fs
add
push
bound
and
dec
fwait
ins
vmread
xor
aad
mov
sub
cmp
sbb
loop
mov
mov
jno
aas
xchg
mov
mov
outs
pop
cmp
stos
mov
nop
xor
stos
bts
pop
loop
xor
xchg
arpl
movs
ja
js
repz
mul
in
nop
xchg
js
repz
inc
or
jae
(bad)
xor
jnp
jg
stos
repz
test
stos
or
and
dec
xchg
jl
rcl
into
cs
add
js
into
sub
xchg
add
ret
cmp
fadd
data16
fwait
in
cmp
add
fldcw
scas
sbb
sub
pop
or
push
lahf
out
dec
cmp
push
xor
call
repnz
push
xor
pop
call
mov
mov
pop
dec
fdiv
es
push
ins
ins
adc
popa
enter
cmps
and
sbb
(bad)
jecxz
mov
push
xlat
xchg
push
aas
xchg
in
push
jmp
cs
inc
jae
mov
dec
sbb
cmp
add
inc
mov
in
jbe
push
jecxz
mov
(bad)
stos
retf
sahf
jb
pushf
fwait
(bad)
cmp
lds
scas
(bad)
int
cmp
adc
fcmovnbe
jae
rcr
sbb
dec
cmp
cli
push
cmps
js
cli
ja
in
test
or
out
xor
jno
mov
xchg
fldz
sbb
lock
cmp
das
xor
sub
inc
scas
(bad)
xchg
pushf
mov
add
sub
ja
xchg
stc
mov
fldl2e
jae
jno
sub
fcomp
inc
lds
sub
mov
pushf
pop
mov
inc
cmps
cs
dec
aad
aas
sbb
jbe
retf
mov
aaa
pop
dec
fldpi
xchg
sub
push
jae
dec
cmps
fwait
push
adc
pop
sbb
cmc
push
and
popf
cmp
hlt
adc
sub
push
add
int
movs
inc
xchg
mov
inc
iret
jl
je
iret
mov
je
(bad)
push
shl
ins
js
(bad)
mov
xchg
int
pop
sti
or
aam
mov
xchg
push
and
push
dec
inc
push
jne
aaa
gs
ss
mov
xchg
adc
xlat
mov
pop
in
inc
ins
cld
sbb
jmp
jp
lea
cmps
dec
jmp
(bad)
cwde
sub
loope
and
push
and
(bad)
call
mov
xor
icebp
xor
repz
adc
jb
loop
(bad)
xchg
push
lea
es
push
pop
jmp
inc
mov
mov
lock
pop
jb
stos
cli
sbb
jmp
mov
and
cmps
stos
jns
jmp
rol
test
add
mov
mov
inc
cmp
xor
xchg
aad
mov
aaa
jb
pop
pop
or
sbb
pop
in
push
mov
cmc
fild
jmp
push
inc
cmp
push
cmp
jp
test
lea
ret
jg
push
sbb
inc
or
or
inc
push
int
and
mov
dec
stos
into
adc
data16
aaa
fdivr
shr
or
int
inc
fsub
popa
jecxz
and
mov
stos
scas
inc
dec
jae
pusha
xor
loop
ss
dec
test
xchg
xor
mov
cwde
mov
mov
inc
jmp
mov
lock
movs
dec
test
mov
jp
shl
sbb
mov
xor
in
les
and
cmps
mov
rol
cmps
cmps
sbb
sbb
fbld
jbe
cmp
sbb
xchg
mov
ror
shl
lods
lods
je
stos
mov
and
jbe
xor
mov
dec
aam
pop
sbb
(bad)
fcomp
(bad)
out
call
mov
nop
push
jae
push
dec
mov
and
inc
push
js
mov
mov
scas
adc
push
sbb
in
outs
pop
sbb
mov
or
fsubr
xor
aaa
jg
jmp
retf
xor
fisttp
jp
dec
shr
test
call
test
xlat
jns
jno
sbb
pushf
aaa
push
fs
scas
in
shr
xchg
add
lods
stos
sub
sub
in
xchg
mov
xchg
add
cmc
clc
add
pushf
pushf
mov
cmp
push
pop
jge
stos
dec
in
sbb
in
jl
dec
std
and
adc
push
imul
lock
fcmovne
jb
imul
push
sti
mov
xor
pop
enter
xchg
hlt
mov
ret
sbb
xchg
pop
mov
jmp
mov
cld
xchg
mov
jne
ret
cmp
call
and
add
pop
xor
test
shl
pop
mov
jmp
xor
popf
cli
push
mov
or
clc
or
pop
sub
stc
jl
mov
dec
test
cmps
das
and
rol
mov
mov
sbb
jmp
fcom
mov
push
out
add
inc
stos
(bad)
mov
mov
mov
es
xor
and
jmp
pop
adc
and
jge
stos
push
xchg
mov
mov
fwait
movs
mov
sub
mov
push
inc
dec
mov
inc
mov
call
and
inc
cmp
xchg
xor
cwde
inc
push
mov
dec
dec
sar
in
ficom
sub
mov
jmp
jmp
mov
cmps
dec
mov
sub
in
repz
aaa
add
jmp
dec
aaa
push
and
aam
xchg
in
pusha
in
adc
dec
pushf
jmp
push
sub
rcl
cmp
dec
not
dec
xlat
(bad)
stc
mov
adc
std
jb
jmp
test
mov
push
dec
fs
jnp
mov
(bad)
push
pop
cmp
daa
mov
(bad)
pop
fbstp
fwait
into
mov
mov
jle
inc
mov
call
dec
fs
and
and
daa
or
out
cmp
adc
mov
enter
stos
cmps
mov
retf
cld
mov
xchg
scas
retf
test
loope
js
xor
sub
cmp
xchg
inc
mov
mov
jecxz
pop
fucomi
mov
repz
out
ret
jae
outs
mov
addr16
mov
std
repnz
int
add
xchg
mov
push
out
fdiv
sbb
inc
in
rcr
fcomp
out
inc
rcl
mov
jae
jmp
jo
jecxz
fild
mov
icebp
push
sub
movs
push
popa
xor
je
cdq
xchg
lea
or
fnstenv
test
pop
and
dec
aas
adc
es
pop
mov
shl
test
xchg
adc
inc
repnz
and
sbb
ror
popf
subps
push
mov
mov
mov
ror
imul
ja
cwde
mov
adc
adc
sahf
cli
sbb
pusha
xchg
mov
xchg
dec
int3
(bad)
push
inc
xor
dec
xchg
pop
xor
leave
(bad)
or
pop
mov
add
sbb
pop
add
rcl
mov
adc
xor
fmul
or
int
out
push
sub
in
sbb
mov
imul
movs
mov
daa
mov
jae
int3
dec
jl
mov
jae
dec
mov
inc
add
mov
dec
gs
xchg
jno
mov
imul
test
ja
enter
mov
push
jns
add
or
cmc
xchg
cs
pop
retf
mov
or
mov
in
fdiv
xor
js
test
xor
inc
xchg
popf
push
add
out
lods
fmul
dec
ja
mov
int3
pop
inc
stos
mov
cmps
or
cmc
iret
mov
inc
inc
sbb
pop
add
xor
cmc
daa
test
fwait
mov
scas
ror
and
cmp
mov
pop
lods
movs
jb
cmps
xor
push
cmp
sar
repnz
in
outs
dec
loopne
test
pop
loopne
ret
and
cmp
mov
ins
cmp
(bad)
ins
call
stc
mov
test
jmp
repz
xor
sbb
(bad)
adc
shl
sbb
inc
xchg
in
std
ins
jb
imul
imul
xchg
(bad)
pop
test
and
out
test
aad
rcr
dec
push
test
mov
add
push
inc
je
jne
hlt
bound
jmp
dec
sar
pop
sahf
pop
dec
pop
(bad)
fcmovu
scas
cmps
pop
sbb
neg
cmc
add
cdq
mov
pop
mov
mov
cmpxchg
cmp
jb
xor
ss
into
stc
xor
dec
pop
movs
mov
fwait
mov
cmps
test
push
xor
sahf
shl
imul
mov
mov
cmp
cld
sbb
mov
ror
or
fs
sub
add
pop
rol
clc
aas
(bad)
and
dec
das
or
(bad)
xor
aaa
cdq
sub
push
xchg
push
fisubr
cmp
add
jno
sbb
ja
xchg
xchg
loop
pop
loope
mov
(bad)
mov
jmp
push
into
test
js
cmps
xor
rcl
sbb
sbb
mov
js
out
int
adc
jle
cmps
iret
pop
push
pop
jmp
push
inc
dec
icebp
aam
sbb
xchg
pop
mov
repnz
push
or
mov
push
xchg
div
repnz
pop
rol
and
addr16
in
popa
int3
cwde
sbb
ret
dec
inc
shl
(bad)
cmp
mov
xchg
(bad)
fbstp
les
sub
cmps
ret
adc
pop
inc
stos
repz
and
clc
shr
jl
test
and
add
and
xchg
int3
fdivr
mov
xchg
sbb
xchg
movs
aas
xchg
call
xor
sbb
jbe
in
repz
or
pop
xchg
shl
dec
xchg
stos
xchg
test
je
cmp
xor
sbb
(bad)
ror
pop
jb
inc
mov
outs
arpl
fwait
dec
push
jb
lahf
dec
push
hlt
and
(bad)
cmp
jae
xor
add
pop
pop
push
xor
dec
push
les
in
adc
mov
sub
jne
call
jp
loop
(bad)
inc
(bad)
dec
push
cmps
or
std
jae
mov
xchg
js
int
mov
mov
fucomp
xchg
rcl
adc
test
adc
idiv
imul
hlt
jne
into
xchg
pop
cdq
iret
cli
and
int3
stos
sar
ffree
push
adc
mov
(bad)
push
sub
imul
xchg
xchg
mov
in
mov
jb
mov
inc
push
inc
cmp
sbb
cmp
push
mov
xchg
cld
mov
(bad)
xchg
cmps
lods
mov
imul
ror
sbb
int3
fidivr
adc
xlat
test
xchg
loop
dec
pop
loope
xor
dec
mov
cmc
adc
sbb
and
jns
mov
cs
sbb
jae
aaa
push
push
pop
cld
jge
sub
add
mov
fwait
cmc
xchg
pop
mov
mov
cli
into
push
fldcw
sar
gs
or
imul
push
mov
xchg
mov
mov
retf
fwait
(bad)
cmp
in
dec
imul
mov
mov
movs
push
and
sub
movs
mov
imul
xor
popf
hlt
sub
inc
push
sbb
xor
cmp
adc
stos
and
or
add
inc
inc
cdq
mov
cld
loopne
adc
xor
xchg
std
jmp
fldlg2
xchg
push
mov
fld
test
js
adc
sbb
dec
dec
push
mov
fcom
aad
int
iret
pop
push
push
dec
mov
sbb
vpslld
mov
sbb
fsubr
clc
ja
xchg
mov
es
dec
push
push
inc
outs
out
xor
cmp
dec
sti
jno
imul
cmps
fild
movs
stc
mov
and
inc
mov
sbb
jbe
call
jb
dec
jmp
inc
xor
fcomp
jmp
jnp
xchg
div
push
jns
sbb
pop
xchg
cmp
mov
repz
cmp
xor
xchg
call
jle
cwde
push
mov
push
jne
push
jmp
fistp
push
inc
and
cmp
push
add
adc
(bad)
out
xor
aad
or
xchg
jne
retf
sti
ins
jl
pushf
adc
or
push
dec
push
lock
and
(bad)
cmc
retf
arpl
dec
sbb
out
test
mov
sbb
daa
cdq
jle
mov
jae
mov
jp
aad
pop
sub
mov
or
adc
dec
mov
cmp
sbb
call
into
dec
ins
mov
out
mov
pop
mov
imul
jo
inc
mov
fisub
fcomp
and
xchg
xchg
js
call
dec
pop
dec
add
mov
and
in
mov
jbe
pop
popa
and
pop
and
adc
ins
lods
rol
test
cwde
sbb
sub
jg
jecxz
cmps
(bad)
fld
cs
sbb
jo
mov
or
xor
jae
fcmove
imul
xchg
pop
arpl
ins
lahf
or
shl
mov
mov
in
out
xor
ficomp
div
outs
xor
xchg
ja
push
jg
adc
xor
push
stos
mov
js
pusha
sbb
in
shl
dec
push
adc
dec
outs
mov
pop
in
dec
stos
mov
cmp
test
retf
adc
in
cmps
fwait
push
xchg
xchg
xor
and
inc
mov
jb
sub
sub
stos
mov
cmp
ret
sub
rcl
jp
(bad)
sbb
sbb
xor
pop
and
and
xor
mov
loope
xchg
jge
xor
cld
pop
xchg
xor
jno
inc
dec
(bad)
pushf
repnz
lock
pop
mov
popf
xchg
and
and
jae
dec
mov
lahf
jns
pop
cmp
dec
data16
sub
out
mov
into
ins
aam
mov
cli
bound
jbe
cmp
and
into
mov
(bad)
out
dec
enter
cmps
add
cmp
xchg
xor
and
loopne
mov
mov
jmp
(bad)
jmp
repnz
jae
shr
inc
pop
or
mov
enter
clc
xchg
inc
mov
mov
popa
mov
xchg
adc
jae
mov
adc
arpl
push
or
and
mov
imul
xor
sub
sub
mov
aaa
mov
xlat
adc
not
out
jb
jl
mov
push
push
test
cwde
cmp
mov
xchg
popa
das
mov
and
mov
dec
adc
xor
xor
xchg
or
mov
bswap
xchg
sbb
jae
mov
(bad)
mov
sbb
icebp
out
fxch
sub
retf
cmp
rcr
mov
cmp
fstp
stos
pop
cmp
dec
jnp
pop
and
sbb
aad
retf
mov
sub
xor
cld
sbb
fwait
sbb
xor
repnz
or
xchg
jns
sbb
int3
in
mov
shl
fdiv
add
lock
arpl
xchg
fist
cdq
lock
jp
or
inc
daa
inc
inc
call
mov
sub
(bad)
movs
dec
add
xchg
fistp
push
hlt
inc
xchg
mov
popf
int
punpckldq
push
jecxz
sub
test
mov
or
mov
movs
and
nop
not
int
enter
mov
xor
fnsave
xor
adc
jp
imul
sar
push
or
outs
xor
cmps
je
aam
cld
in
inc
xchg
repz
inc
clc
xor
mov
cmp
fwait
call
pop
inc
xor
mov
jns
inc
cs
adc
fisubr
inc
add
in
aad
mov
dec
pop
sub
fcomp
xor
inc
adc
inc
int3
jbe
imul
xchg
shl
or
pop
jg
imul
sub
xlat
sub
lock
rcr
shl
daa
test
pop
push
sub
xor
jae
push
xor
fisttp
xlat
xchg
repz
sti
mov
ins
retf
mov
outs
(bad)
js
dec
sti
cmps
push
popf
xchg
ja
test
sbb
cmp
pop
dec
mov
xchg
out
dec
movs
mov
shr
mov
jmp
fwait
imul
jp
ret
popf
adc
mov
mov
out
mov
xchg
mov
xchg
dec
je
cmp
mov
sahf
jle
cmp
idiv
jae
loope
js
pop
fidiv
pop
mov
dec
adc
rcr
cmps
out
jb
sub
cmps
jne
xor
sub
adc
inc
stos
and
es
pop
push
push
add
scas
pop
mov
xor
inc
test
push
fs
jle
pop
scas
sbb
and
add
and
xor
jge
xchg
inc
jnp
stos
ja
push
jae
pusha
push
or
dec
bound
pop
push
shl
test
sub
inc
dec
jmp
pushf
cdq
sub
mov
cli
fs
jae
pusha
nop
lahf
jbe
ret
nop
cmp
pusha
push
mov
inc
inc
fadd
bound
fstp
adc
movs
push
dec
dec
cmps
pop
call
push
mov
pop
xchg
inc
scas
mov
jnp
test
dec
popa
das
sub
aaa
fild
mov
mov
test
xchg
adc
stos
push
xchg
leave
retf
iret
fstp
(bad)
mov
popa
mov
mov
fwait
pop
mov
sbb
test
mov
int
cmp
pop
mov
cld
push
xchg
das
pop
jno
imul
(bad)
pop
mov
jo
push
or
enter
inc
imul
jecxz
and
push
inc
sub
out
jge
enter
cmp
inc
sub
data16
(bad)
jae
or
mov
xor
xchg
sbb
jo
push
into
retf
jae
add
lds
xor
sbb
xchg
sbb
xor
je
repnz
mov
push
add
jne
fidiv
cli
movs
int3
sbb
mov
xchg
out
popf
xchg
or
jle
fnstsw
aam
mov
jnp
sahf
jg
mov
loopne
or
shl
and
retf
xchg
sbb
xlat
sbb
shr
pop
les
pop
push
cmp
retf
jno
dec
lds
cmp
sub
pop
jg
jns
clc
retf
jne
jmp
js
adc
loopne
sbb
cs
test
cmp
mov
push
pop
mov
imul
push
push
fs
rcl
push
and
aas
dec
stos
lds
cld
mov
retf
neg
ret
inc
mov
fcomp
xchg
fidivr
xor
scas
pop
dec
push
adc
mov
(bad)
mov
arpl
jle
jns
in
jnp
mov
jmp
pop
fs
jae
test
cmps
daa
jno
pop
push
loopne
xchg
cld
or
and
jb
mov
fist
ret
mov
jae
mov
inc
pusha
shl
sbb
mov
xor
icebp
scas
jns
and
iret
xlat
fst
ja
shr
pop
add
push
fidivr
jle
call
(bad)
sbb
shl
mov
and
int3
mov
in
sub
retf
div
nop
scas
gs
jns
adc
(bad)
(bad)
pushf
mov
aad
push
mov
pop
xor
in
xor
lods
into
cli
pop
enter
std
inc
xchg
cmp
stos
jne
out
pop
stos
in
and
repz
pop
test
dec
data16
adc
scas
fidivr
mov
cli
jmp
cdq
sbb
xchg
not
retf
rcr
pop
jne
add
push
dec
das
je
push
and
repz
jns
jp
stos
add
pop
pop
scas
and
pop
idiv
dec
imul
mov
xor
or
adc
je
mov
dec
jb
inc
mov
mov
and
mov
shl
pusha
mov
es
xchg
test
adc
fs
(bad)
jmp
shl
inc
sbb
dec
add
pop
mov
repnz
mov
xor
push
push
xchg
mov
and
mov
stos
js
xlat
xchg
push
ja
pop
mov
stos
add
test
mov
add
jne
jecxz
jae
lock
adc
jbe
mov
or
sub
adc
mov
cwde
xchg
dec
imul
inc
cwde
movs
ins
ins
imul
inc
add
jge
mov
(bad)
push
cmps
outs
sbb
xchg
adc
retf
adc
jae
cmps
mov
inc
jb
lods
mov
add
pop
xor
mov
in
retf
cmovo
dec
pop
imul
shl
js
add
add
loope
mov
js
scas
sub
adc
xor
in
scas
inc
mov
sbb
mov
test
add
(bad)
adc
adc
sbb
das
clc
inc
mov
mov
xor
jae
sbb
push
fadd
mov
pop
mov
aas
test
cmps
push
test
inc
jae
test
inc
std
cs
retf
pop
pop
xchg
fs
sbb
adc
push
xchg
adc
xor
jae
inc
dec
dec
pop
jns
push
sbb
call
fprem
lahf
jb
leave
inc
inc
xchg
and
stos
in
ins
es
sbb
jne
pop
clc
push
(bad)
(bad)
lea
js
mul
std
add
mov
cmp
repz
imul
nop
mov
call
inc
jno
repz
xchg
adc
xor
in
mov
shl
(bad)
mov
repz
fucomp
or
pop
xor
mov
push
push
fiadd
ins
enter
hlt
xchg
and
adc
inc
inc
add
jae
add
cmps
shl
xor
rcl
jge
cmp
mov
sub
pop
nop
je
into
mov
pushf
nop
outs
ins
repz
xchg
pop
stos
daa
data16
sbb
aaa
jecxz
in
jmp
aad
dec
mov
retf
ins
adc
inc
fbld
or
pop
pushf
ret
adc
loopne
fdivp
pusha
xor
adc
sub
jbe
enter
mov
mov
jnp
imul
inc
add
(bad)
retf
cs
xor
movs
push
fidivr
jecxz
loopne
xchg
rcr
or
jno
mov
add
int3
js
inc
repz
push
aam
mov
push
out
jo
int3
jae
cmps
mov
adc
lds
sbb
mov
stos
adc
mov
or
mov
fsubp
js
inc
fs
dec
push
mov
push
jns
dec
push
imul
jbe
ror
jno
mov
pop
daa
loop
(bad)
inc
and
pavgw
cli
sahf
stos
jecxz
mov
(bad)
iret
sub
js
je
dec
fs
fwait
mov
test
sbb
lods
loopne
aad
fcmovnb
in
fucomp
mov
ret
mov
scas
xchg
dec
ss
scas
sbb
jecxz
cmp
out
test
mov
sub
xchg
add
(bad)
shr
leave
fadd
push
fs
add
xor
adc
push
add
iret
xor
xor
inc
int
cmps
fisubr
movs
fstp
xchg
stc
call
and
push
scas
lea
rcr
jmp
push
or
jo
xor
push
(bad)
cwde
push
pop
xlat
test
rcr
pop
push
cli
loop
push
les
lds
sub
out
ds
call
sub
test
jl
(bad)
sbb
stos
icebp
stc
jo
mov
pop
imul
retf
ret
lods
mov
xor
mov
shl
inc
jbe
bound
in
inc
and
lock
cdq
push
push
ror
add
mov
cmc
jle
dec
arpl
or
inc
push
xchg
movs
(bad)
xchg
jmp
bound
popf
gs
cdq
fidiv
jge
mov
(bad)
sahf
sub
clc
outs
and
xchg
pusha
pop
mov
dec
ror
(bad)
jno
mov
jno
test
arpl
mov
mov
lock
js
push
scas
shl
inc
(bad)
dec
xchg
mov
xchg
sbb
adc
(bad)
jno
lds
mov
add
sub
or
sbb
add
pop
adc
adc
push
sahf
ud0
mov
xchg
cmp
fst
sbb
call
add
cwde
retf
pop
rcr
xchg
stos
xchg
outs
mov
push
retf
int
and
inc
scas
push
arpl
jne
jo
mov
add
or
dec
push
fiadd
xor
lods
mov
cmp
nop
ds
jnp
and
push
cmp
sub
loopne
sbb
sti
cmp
push
fst
push
ret
fidiv
cli
in
ficom
jns
mov
stc
ss
popf
sub
push
nop
push
pop
sbb
lods
std
push
dec
inc
mov
call
movs
mov
jg
ds
mov
ficom
sbb
sbb
cmp
js
psllw
push
icebp
mov
add
lods
xor
addr16
mov
push
pop
(bad)
pop
and
retf
lea
cmp
mov
push
enter
outs
pop
mov
mov
sbb
xchg
xor
repnz
(bad)
fimul
imul
test
or
jb
xlat
sub
stos
sub
rcl
nop
hlt
ins
ffree
jb
aaa
inc
test
dec
nop
pop
xchg
add
and
test
and
fdivr
push
jbe
and
out
test
and
sub
mov
pop
fcom
mov
lods
xor
cwde
sbb
popw
mov
push
clc
push
mov
clc
add
add
ds
xor
scas
pop
clc
fld
pop
inc
fmul
pop
imul
imul
scas
sbb
cmps
pop
dec
mov
outs
imul
add
leave
scas
test
ins
je
mov
xchg
push
jbe
mov
push
pop
or
sub
add
(bad)
popa
sbb
mov
test
push
add
sub
or
stc
xchg
jo
mov
xchg
fwait
adc
test
std
adc
sti
inc
sbb
jmp
and
xchg
cmp
xchg
xchg
fwait
call
aaa
xchg
cwde
and
popa
cwde
xlat
retf
mov
retf
call
fwait
lods
jno
xor
imul
mov
adc
xlat
in
hlt
cmps
out
daa
scas
enter
rcl
cli
iret
lds
mov
and
fst
mov
cmc
mov
adc
aaa
xor
and
inc
movs
and
mov
jmp
sbb
and
outs
or
je
fs
jo
cdq
shr
(bad)
aas
xchg
adc
lahf
jg
je
fst
cmp
mov
xchg
inc
mov
jne
mov
lods
inc
adc
sbb
jmp
inc
mov
stos
loope
cmps
not
sub
test
inc
mov
mov
sti
inc
xor
idiv
pop
in
lock
add
push
scas
retf
gs
lods
icebp
ins
push
mov
xor
mov
stos
mov
cwde
xchg
and
fwait
or
fwait
and
and
fs
xor
ins
mov
push
mov
icebp
std
rcr
xlat
mov
inc
fwait
mov
mov
xchg
xchg
(bad)
cmp
push
mov
fwait
jp
stos
push
ss
xchg
jbe
inc
mov
xchg
aam
lods
retf
ins
inc
sbb
inc
outs
cs
push
sub
aas
mov
xor
je
adc
fst
rol
jbe
mov
dec
mov
inc
mov
(bad)
mov
fst
or
out
call
jge
movs
iret
lock
js
jnp
cmc
(bad)
adc
inc
adc
mov
cmps
jne
movs
pop
xchg
mov
test
and
mov
int
js
mov
mov
imul
mov
dec
scas
je
das
cli
out
mov
adc
fstp
push
test
fdiv
jp
nop
cmp
mov
xor
call
fcmovnbe
mov
je
retf
jmp
lahf
div
mov
int3
ja
js
mov
sbb
xor
inc
imul
adc
cmps
(bad)
ficomp
or
pop
sti
and
mov
push
adc
push
fcomp
ficomp
in
in
scas
push
repnz
inc
inc
mov
xchg
cmp
adc
clc
mov
mov
imul
inc
push
scas
add
aaa
sbb
pop
push
xchg
mov
dec
stos
sbb
rol
addr16
mov
xchg
cwde
(bad)
add
out
adc
imul
mov
icebp
fsubr
cwde
jns
mov
out
mov
out
sbb
cmps
jl
or
xrelease
xchg
(bad)
or
sbb
sbb
mov
inc
lods
mov
push
or
xchg
repnz
mov
nop
call
dec
adc
mov
push
ins
inc
xor
or
mov
mov
lea
lods
in
lods
js
jb
add
pop
loopne
nop
sti
test
fcom
sbb
xor
adc
mov
cdq
sbb
cld
mov
pop
lahf
pop
ds
inc
enter
mov
push
stos
(bad)
sbb
call
jg
and
(bad)
and
push
scas
add
add
mov
jl
out
call
jbe
mov
ja
iret
(bad)
lock
xchg
adc
xchg
stos
xchg
cwde
push
(bad)
adc
sub
dec
adc
mov
push
ins
fidiv
push
mov
mov
int3
(bad)
fwait
cmp
xchg
cwde
das
jae
hlt
shl
xchg
loop
test
and
xchg
dec
ins
lods
xchg
inc
jno
pop
xchg
ds
jae
xchg
lods
int
jmp
sbb
push
cli
dec
mov
jns
cmc
addr16
nop
sbb
mov
in
mov
adc
into
adc
aam
ror
out
scas
sbb
imul
popf
movs
inc
je
addr16
jmp
mov
hlt
adc
mov
cmp
sbb
loop
mov
xchg
inc
mov
xor
xor
lods
js
mov
sbb
movs
and
mov
sub
out
cmp
mov
jnp
push
sbb
lods
pusha
adc
push
inc
bound
cmc
fcomp
clc
(bad)
or
lock
mov
int3
aad
fidiv
mov
call
push
adc
xchg
jp
retf
mov
outs
cmp
jnp
test
inc
pop
jo
fst
stos
mov
inc
dec
mov
les
xchg
stc
mov
adc
cmp
xchg
adc
adc
rol
sbb
in
push
inc
mov
pop
je
loop
jns
mov
les
dec
pop
pop
(bad)
xor
sti
cmp
call
scas
dec
sbb
mov
mov
xchg
jg
jns
fldenv
mov
stos
ins
ror
inc
mov
sbb
mov
loopne
stos
outs
call
mov
ds
lahf
xchg
pop
xchg
jmp
lds
fistp
sub
adc
iret
xor
repz
cmps
pop
adc
mov
nop
adc
jns
aas
test
scas
call
out
or
je
(bad)
movs
inc
stos
lds
jae
inc
inc
loope
aam
jns
icebp
jb
push
and
mov
mov
dec
inc
in
mov
adc
call
dec
add
sub
xchg
or
test
push
mov
daa
sbb
pop
out
hlt
mov
or
cmp
inc
int
adc
mov
jo
xlat
push
mov
push
stos
ret
ins
cmc
or
movs
scas
imul
dec
dec
inc
int
shl
xor
xor
sbb
shl
js
aad
xchg
test
scas
fwait
out
leave
add
pop
mov
rcl
xor
mov
(bad)
je
mov
lahf
pusha
mov
je
in
sbb
mov
fs
aad
jl
mov
jne
mov
ss
mov
jge
rcr
lock
aas
sub
clc
pop
push
shl
xor
jnp
jge
mov
test
es
mov
jns
iret
mov
sbb
or
dec
lahf
add
leave
xchg
test
test
pusha
sub
in
sub
mov
test
xchg
js
into
aaa
jle
sub
pusha
bound
mov
jle
dec
inc
pop
test
dec
not
dec
cmc
pop
xor
push
pop
sbb
icebp
push
cmp
push
cmp
cmp
mov
or
dec
js
xchg
shl
mov
adc
dec
std
ins
push
fwait
mov
and
in
cmp
imul
icebp
test
xor
lds
les
call
adc
in
sub
cmc
cmp
mov
hlt
outs
cmp
sub
test
mov
push
fstp
pop
mov
mov
inc
(bad)
(bad)
push
fcom
xlat
push
fsubr
xlat
pop
fsubr
stos
mov
or
fwait
sub
fwait
xor
sti
inc
cmp
call
pop
out
sub
pop
test
daa
push
sub
out
sub
in
sub
out
aam
dec
rcl
push
cmp
push
sti
push
leave
shl
push
ret
ror
push
(bad)
push
(bad)
les
ror
add
sbb
out
adc
loope
sub
and
jno
in
shl
and
fs
aad
pop
mov
mov
or
mov
lea
push
dec
shl
inc
rol
push
push
inc
push
push
rcr
outs
rcl
shr
rcl
pop
push
push
push
pop
das
push
pop
inc
and
push
out
pop
aaa
push
hlt
pop
dec
push
std
pop
dec
push
ret
aaa
enter
into
mul
aaa
fistp
aaa
movs
stc
arpl
stos
stc
jns
mov
ja
mov
lea
shl
out
sub
sti
xor
cli
std
xor
hlt
mov
xor
xor
hlt
test
push
xlat
lahf
inc
adc
lea
mov
mov
retf
add
or
cmp
mov
mov
dec
ins
je
inc
pushf
dec
mov
push
fs
movs
push
rcl
ins
rcl
shr
push
mov
push
or
mov
pop
and
pop
xor
adc
cdq
cli
sub
nop
cmc
and
jmp
dec
push
xor
cmc
aaa
xor
cmc
into
cs
shl
cmc
fnstenv
ret
cmc
(bad)
xor
cmc
call
xor
shl
jle
(bad)
xor
hlt
div
cmp
mov
add
xchg
imul
inc
xchg
fild
dec
lods
jecxz
into
in
inc
sub
repnz
ror
mov
jp
dec
pusha
jo
inc
xor
ror
add
pop
test
push
test
push
shl
add
add
or
pop
aaa
movntq
aaa
sbb
sub
loope
daa
aaa
out
cmp
out
sub
out
sub
jmp
inc
addr16
jmp
push
out
sub
sub
cmps
sar
lods
xor
mov
jo
mov
rol
mov
xchg
mov
xor
test
add
xchg
outs
(bad)
adc
cmp
push
mov
inc
data16
push
cmc
inc
xor
xor
pop
cs
cli
push
xor
xor
bound
push
cmc
xor
push
adc
sub
sbb
sub
in
cmp
push
lock
ss
neg
dec
push
ret
push
enter
rol
push
fstp
push
fistp
push
cmps
pop
jl
scas
pop
je
mov
jb
popa
lds
pop
mov
adc
xchg
xor
pop
mov
arpl
sub
sbb
sbb
jmp
mov
popa
mov
xor
dec
loope
mov
stos
push
dec
push
stos
daa
fldenv
mov
or
test
adc
arpl
inc
xchg
rol
inc
inc
cmp
cs
push
inc
leave
imul
(bad)
push
movs
mov
inc
ins
in
adc
sub
cli
push
lds
push
retf
pushf
shl
(bad)
jno
or
jae
shr
mov
mov
push
addr16
adc
pop
outs
ja
jo
shr
cmps
xchg
lods
div
xchg
jb
cmp
lds
pop
add
xor
mov
popa
cdq
cmp
jge
popa
push
cmps
(bad)
jle
lods
shl
mov
xchg
mov
and
dec
adc
fidivr
hlt
xchg
test
test
cld
nop
sahf
clc
mov
cmp
mov
push
fcmove
jmp
mov
mov
shr
jno
mov
jo
cwde
sub
mov
mov
pop
or
aas
mov
call
pop
mov
ss
imul
sub
pop
int
and
xor
mov
cwde
scas
adc
in
dec
adc
aaa
xchg
pop
xchg
mov
sbb
stos
stc
jmp
nop
pushf
mov
aas
enter
inc
mov
adc
adc
cmps
xchg
out
test
or
scas
pop
cmps
call
cdq
stos
push
adc
xor
mov
cmc
outs
sbb
enter
cmc
(bad)
fistp
cmps
xchg
out
sub
sub
aam
jge
mov
(bad)
out
mov
mov
xchg
in
ins
int
pusha
push
iret
xor
cdq
into
sbb
or
pushf
jg
retf
cmp
nop
or
fwait
inc
imul
xor
pop
ret
add
js
mov
je
nop
mov
or
mov
xchg
mov
ficom
xlat
jmp
dec
imul
or
jge
sbb
lds
push
shr
pusha
add
mov
push
je
inc
pop
fucomi
popf
jmp
pop
cwde
dec
jno
daa
sub
clc
push
clc
std
ss
push
das
or
pushf
pop
test
inc
pop
test
jbe
sbb
daa
aaa
mov
inc
stos
jge
lods
outs
std
int
and
psllq
mov
arpl
es
or
out
xor
stc
add
popf
dec
add
ins
stos
pop
ss
ins
dec
inc
jle
mov
push
jb
movs
fidiv
add
jno
xchg
mov
adc
js
stos
adc
adc
sub
lea
push
push
fidiv
or
std
stos
and
pop
sbb
pop
loopne
mov
cmc
imul
mov
jno
add
je
mov
mov
push
ds
in
inc
(bad)
adc
cmps
inc
push
adc
mov
je
mov
xor
mov
and
ja
cmp
dec
jmp
in
mov
cmp
js
test
sbb
sub
in
int
gs
je
(bad)
mov
or
mov
cwde
idiv
imul
sti
into
arpl
sar
gs
stc
mov
mov
inc
ins
xchg
fucomi
mov
jno
lds
retf
mov
jo
push
daa
xor
movs
push
cmc
fmul
jl
icebp
sbb
xor
mov
fadd
xlat
sbb
cmps
aas
inc
ret
push
mov
jbe
mov
movs
xchg
mov
sbb
in
test
movs
jecxz
js
stos
jo
or
push
xlat
cdq
in
sub
mov
cld
pop
in
jne
and
mov
add
(bad)
test
ins
or
or
fcomp
xchg
iret
in
xor
xchg
stos
mov
cwde
ds
lea
xor
cld
je
leave
sbb
clc
sbb
xor
jg
nop
or
mov
mov
mov
in
xchg
(bad)
mov
push
sbb
mov
jo
mov
mov
call
dec
lds
add
test
add
nop
push
pop
(bad)
mov
je
mov
mov
arpl
mov
jnp
pop
push
(bad)
mov
add
repnz
in
push
test
jl
bound
(bad)
pop
shr
cmc
pop
jnp
mov
cmp
dec
cmp
dec
cmp
popa
mov
pop
push
rol
mov
jne
mov
das
inc
jge
movs
push
je
stc
mov
inc
cmc
daa
popa
cmp
xor
sbb
mov
or
sub
mov
pusha
adc
push
jne
or
dec
test
movs
stos
jge
arpl
mov
jnp
scas
add
jns
arpl
adc
xchg
or
add
xchg
jge
mov
push
cmps
int
xchg
mov
mov
imul
adc
sub
jae
add
mov
outs
imul
jae
aaa
jecxz
adc
and
test
hlt
pop
mov
dec
mov
aad
and
jge
dec
(bad)
xchg
mov
aam
in
outs
pop
cdq
out
add
js
or
jl
mov
ins
sub
xlat
cmp
adc
mov
imul
test
mov
scas
cwde
push
mov
repz
xor
mov
div
pop
sbb
jae
out
pop
in
cld
mov
test
pop
jl
retf
xor
outs
push
dec
mov
push
pop
adc
rcl
inc
jmp
pop
fld
mov
inc
shr
inc
ffree
jb
jnp
add
xchg
repz
jo
inc
and
inc
loop
add
jne
sbb
sub
ds
sbb
push
jb
cwde
adc
cmp
cli
out
jg
push
ret
xchg
int
pop
cs
cwde
movs
addr16
ror
dec
sub
test
lds
push
pop
mov
les
fsubr
mov
jl
mov
mov
sub
aaa
out
in
jecxz
sti
mov
fidiv
mov
push
mov
xor
out
and
cmps
push
js
outs
jb
xchg
mov
xchg
mov
je
adc
scas
and
jne
data16
out
jo
cmps
neg
aaa
cmps
icebp
inc
(bad)
pop
mov
inc
mov
int
ja
cld
sub
dec
jge
mov
inc
stos
jno
jl
cmc
loopne
xchg
hlt
sub
xchg
mov
mov
mov
ja
pop
inc
inc
idiv
xlat
lahf
inc
scas
cdq
mov
pop
ss
movs
(bad)
loop
pop
ss
shl
retf
sbb
popw
xchg
adc
xchg
sub
scas
cli
mov
xchg
sbb
mov
adc
test
je
pop
mov
retf
mov
inc
imul
pop
push
call
jo
stos
mov
mov
adc
call
add
pop
jle
sub
mov
mov
xchg
xor
xchg
call
xchg
push
mov
pushf
in
xor
push
mov
xchg
mov
cmp
retf
mov
mov
cmp
xor
test
add
stos
jae
xchg
movs
add
scas
mov
leave
retf
ins
sbb
push
xor
jbe
loop
cwde
mov
pop
dec
xor
xchg
cmp
ins
inc
lods
mov
mov
pushfw
xlat
and
pusha
sub
loopne
jbe
xor
push
adc
and
ret
sub
mov
cld
sub
int3
out
sbb
mov
bound
jae
and
cmp
pop
xchg
lea
rcr
btr
pop
mov
ss
scas
mov
adc
(bad)
sbb
lods
mov
cmp
xor
add
data16
hlt
ja
ins
push
push
and
(bad)
in
push
cmp
push
mov
cmp
pusha
jb
scas
dec
push
inc
mov
dec
test
int3
mov
scas
push
jns
and
dec
xchg
adc
mov
mov
cmp
cmp
dec
(bad)
dec
fwait
and
sbb
outs
adc
sub
or
sbb
push
push
sub
mov
adc
shl
or
jbe
jle
xor
mov
jmp
xchg
xchg
or
pop
hlt
(bad)
ficomp
xchg
sub
clc
ja
mov
retf
or
push
xchg
jbe
add
dec
jne
inc
call
mov
not
imul
adc
cmp
adc
clc
mov
test
jne
xor
pop
inc
xchg
retf
sbb
repz
inc
push
cmove
out
jle
rcr
mov
(bad)
icebp
(bad)
pop
jbe
and
(bad)
fnstsw
arpl
add
scas
rol
mov
jecxz
(bad)
es
cmc
xor
int3
add
std
push
jmp
cmp
pop
push
data16
shl
das
ja
sbb
push
xchg
aaa
call
sbb
stos
mov
and
push
mov
les
push
fistp
rol
je
daa
aad
ds
mov
pop
inc
in
mov
sar
pusha
mov
jbe
retf
lahf
(bad)
hlt
test
ins
std
rcr
fst
ret
dec
cmp
jp
and
addr16
mov
repz
jbe
push
xor
mov
pop
cld
jb
mov
shl
pusha
shr
in
jge
mov
fmul
cld
popa
iret
mov
or
fucom
and
xchg
stos
cdq
jp
add
jecxz
mov
inc
(bad)
adc
iret
and
jmp
int
and
push
dec
outs
call
fistp
leave
test
daa
xor
adc
dec
fild
jg
movs
fistp
sbb
cmp
scas
cmp
hlt
std
bound
mov
aaa
mov
mov
outs
push
mov
adc
pop
mov
pop
and
mov
mov
inc
je
fistp
mov
pop
fwait
mov
jp
inc
cmp
enter
jne
sbb
jae
add
xchg
add
mul
lds
ins
test
or
mov
xor
fstp
cmps
imul
push
xchg
aad
pop
js
inc
jb
jp
inc
cli
mov
popf
add
ja
lds
test
loopne
std
pop
lods
cli
test
sbb
adc
cmps
xchg
test
inc
sbb
mov
daa
test
fldenv
js
pop
sti
sbb
lahf
and
adc
push
sbb
retf
loop
out
sub
stos
mov
and
mov
jle
xor
sub
push
hlt
jo
pop
scas
push
pop
(bad)
push
popf
jmp
das
push
leave
inc
mov
rcl
mov
push
aad
xor
add
push
ins
lods
stos
sahf
std
and
sub
retf
mov
(bad)
sbb
ins
dec
push
push
jno
pusha
push
jmp
fwait
sbb
add
loope
xchg
mov
test
mov
cmp
nop
mov
adc
add
pushf
sbb
repz
out
popa
dec
or
or
icebp
fisubr
mov
stos
mov
xor
xor
pop
push
and
push
les
mov
ss
cmp
or
jae
jmp
xchg
push
(bad)
jg
sar
adc
push
add
popf
dec
stos
scas
aad
push
in
mov
push
xchg
(bad)
or
pop
adc
jae
mov
gs
pop
in
cmps
hlt
std
xchg
fldenv
xchg
push
int
jbe
mov
xor
fs
cli
cmp
and
ret
dec
adc
jbe
pop
mov
mov
and
dec
cli
push
adc
xchg
ret
jbe
mov
mov
jg
inc
out
mov
add
mov
jnp
pop
ror
dec
mov
cmc
dec
xor
mov
or
add
jbe
or
or
call
push
dec
call
sahf
add
push
inc
sub
xor
cmp
dec
je
(bad)
cld
stc
cli
dec
push
leave
push
adc
inc
sub
push
mov
cmp
out
push
dec
and
js
mov
gs
or
out
aad
int
mov
adc
cmc
push
adc
xor
lods
dec
pop
xor
jns
mov
adc
rcr
and
cli
lods
mov
push
movs
cmp
fwait
push
pop
sbb
out
xor
adc
sar
inc
cmp
or
pop
pop
scas
sar
mov
jbe
(bad)
cmp
dec
mov
movs
or
lahf
neg
mov
cmc
rcr
adc
clc
xchg
out
jne
test
inc
jl
jo
cmp
xchg
std
sub
sbb
std
mov
mov
dec
mov
in
adc
xchg
jno
(bad)
retf
shl
lock
adc
mov
mov
and
xchg
ror
xchg
xchg
fs
mov
sbb
cmps
test
xor
std
inc
push
icebp
push
pusha
rol
adc
jae
cmp
aam
inc
(bad)
cmp
sbb
int
xchg
push
mov
jge
stos
lock
shr
test
aad
gs
xor
(bad)
cdq
les
sbb
pop
test
movs
call
sar
and
jecxz
cmp
les
or
mov
push
and
and
popa
stc
ja
comiss
icebp
adc
jns
xor
sar
inc
cmc
mov
and
add
or
movs
test
and
jne
inc
inc
popf
sub
sub
jno
fwait
inc
nop
fist
mov
dec
xor
xlat
rcr
mov
and
sbb
add
mov
test
rol
iret
jb
inc
les
retf
ficom
gs
mov
in
cmp
mov
cmp
jae
adc
or
sbb
jae
sbb
ja
ss
cs
sbb
pop
retf
sbb
xor
and
sub
mov
pop
cwde
mov
and
dec
test
or
push
in
fisub
inc
icebp
mov
mov
repz
pushf
cmps
mov
sbb
push
dec
imul
cld
pop
(bad)
xchg
ret
mov
push
fldenv
sbb
jecxz
in
test
mov
adc
arpl
sub
in
and
retf
sub
jae
pop
adc
pusha
cmc
push
jns
fsubp
enter
mov
cmp
mov
fbld
aam
hlt
jns
mov
mov
mov
sti
pop
mov
aam
shr
loopne
bound
(bad)
adc
js
mov
xchg
dec
mov
call
cmc
jg
mov
pop
push
mov
lock
jmp
ds
test
pop
mov
fst
xchg
mov
mov
fwait
rol
sti
popa
mov
and
in
daa
push
ins
add
add
push
mov
cli
pop
pushf
test
lods
mov
mov
int3
popf
aam
test
xor
dec
sbb
not
fist
daa
xchg
les
mov
pop
jno
pushf
daa
pop
ins
movs
xor
jbe
inc
jb
mov
pop
(bad)
lods
push
add
add
xchg
pop
xor
xchg
pusha
jbe
shl
mov
inc
js
xor
pop
mov
rcr
and
lds
repnz
je
fwait
imul
mov
leave
xor
aas
dec
push
inc
arpl
sahf
mov
out
push
pop
sbb
(bad)
sbb
ret
jae
call
push
mov
pop
cmp
inc
aad
lods
inc
(bad)
mov
jge
mov
frstor
jl
in
jbe
mul
dec
ins
imul
bound
repnz
dec
rcl
sar
cli
and
jb
nop
repnz
out
dec
and
mov
(bad)
hlt
bound
aaa
outs
adc
jecxz
xchg
cmc
mov
mov
xchg
mov
pop
clc
lods
pop
icebp
xchg
mov
mov
or
aam
bound
repnz
stc
cld
sub
(bad)
clc
fnstcw
sti
shr
push
mov
sub
ja
mov
aad
aaa
outs
jmp
aam
sub
dec
scas
and
js
sbb
xchg
pcmpeqd
or
jecxz
jecxz
xor
mov
mov
mov
pop
pop
fmul
mov
pop
pop
ja
jle
xor
mov
(bad)
pusha
dec
ficom
sbb
jle
jo
cmps
lods
pushf
add
sahf
scas
cmps
fwait
sub
lahf
mov
fs
out
push
sbb
xchg
imul
(bad)
repz
sbb
retf
lods
xchg
xor
mov
dec
cdq
pop
outs
rcl
sbb
test
jbe
cmp
test
add
sti
xor
dec
push
stc
imul
bnd
pop
pop
sub
js
xchg
mov
jo
fcomip
add
dec
aad
fs
out
cld
or
test
(bad)
cdq
lds
mov
fcos
push
add
cmc
dec
js
mov
sbb
test
sub
in
retf
mov
sbb
jb
fs
cmps
lahf
dec
outs
inc
and
cli
loope
mul
js
bound
pop
add
cmc
adc
adc
push
inc
xchg
add
and
adc
or
xlat
pop
sbb
pop
daa
int
sbb
push
mov
loopne
adc
add
mov
test
mov
mov
xchg
add
sub
pop
sbb
cmp
pop
pop
adc
retf
hlt
inc
sbb
xor
std
push
jns
loope
xor
dec
(bad)
aam
daa
stos
lahf
inc
xchg
cmp
xor
enter
inc
dec
and
mov
adc
inc
lock
dec
mov
and
mov
mov
ficomp
add
mov
mov
push
sbb
inc
sbb
sbb
out
cwde
adc
jns
sub
mov
addr16
repnz
or
dec
(bad)
sahf
push
shl
bound
fsub
jg
add
sub
repz
sub
mov
pusha
mov
mov
xlat
mov
mov
retf
xchg
arpl
push
shl
adc
lods
jae
mov
adc
out
clc
inc
mov
cs
scas
sbb
sub
dec
cwde
gs
mov
sbb
sub
or
sbb
push
dec
lods
mov
(bad)
int
cmp
or
jp
aam
std
sbb
into
push
sub
jbe
mov
outs
mov
jo
stos
mov
dec
and
sbb
mov
test
sar
adc
jge
mov
mov
lea
outs
call
int3
fs
call
add
cmps
inc
push
(bad)
rol
mov
(bad)
into
es
pop
aad
xor
inc
fistp
mov
loopne
inc
adc
push
cdq
ja
jae
data16
adc
xchg
lods
jl
sbb
mov
pop
sbb
and
les
(bad)
push
xor
repz
add
mov
mov
inc
pushfw
ret
repz
xor
push
jle
cmps
stos
cmc
fisubr
cmp
aam
pop
and
cmp
push
xchg
cmp
inc
in
jbe
sub
cwde
inc
dec
jbe
inc
mov
mov
cmp
popa
stos
inc
retf
sub
push
pusha
cmps
or
scas
leave
(bad)
sub
adc
jle
test
faddp
pop
fiadd
(bad)
mov
cs
pop
aas
movs
je
fstp
inc
dec
(bad)
jmp
mov
sbb
xor
and
cli
lahf
cmp
adc
leave
jae
stc
and
sub
sti
dec
pop
cmp
and
mov
and
cmc
je
mov
mov
mov
pop
xchg
lahf
xchg
inc
mov
jmp
jmp
aad
ss
pop
xor
out
hlt
cwde
adc
adc
jl
ss
test
xchg
jbe
ins
inc
dec
stos
ja
or
push
cld
mov
lahf
xor
mov
rcr
inc
mov
cmps
cs
scas
adc
movs
push
scas
mov
and
mov
xor
movs
retf
ja
push
sbb
js
jne
cmp
movs
in
or
adc
rcr
loop
imul
test
jae
dec
xchg
inc
add
jae
jle
add
and
push
dec
push
ds
push
mov
mov
jns
mov
inc
inc
je
cmp
jp
adc
mov
push
mov
cmp
add
data16
mov
popa
cmps
iret
in
outs
(bad)
iret
jnp
cmp
mov
push
or
jns
repnz
fwait
scas
push
mov
inc
mov
mov
mov
ret
sbb
fwait
inc
mov
(bad)
addr16
in
pop
jmp
add
adc
lahf
push
push
in
dec
push
inc
js
push
xchg
or
outs
adc
xchg
(bad)
add
les
dec
fs
rol
mov
push
jns
mov
add
cmp
mov
out
xlat
mov
mov
push
dec
and
xchg
repnz
or
mov
push
or
mov
push
xor
je
inc
or
repnz
fsub
iret
ins
xchg
jg
mov
je
loope
inc
lahf
imul
push
sar
pop
or
pop
xor
cmp
pushf
dec
cmp
jns
dec
jbe
dec
xlat
dec
gs
loope
or
and
mov
or
bound
sbb
mov
sahf
test
fnsave
aaa
(bad)
fs
adc
push
mov
jb
xchg
test
push
sub
pop
or
cmp
pop
sub
mov
add
retf
pop
out
arpl
mov
dec
adc
jecxz
leave
add
pop
ins
push
je
cmc
mov
lods
stos
xor
loope
dec
cmpps
inc
and
fs
(bad)
push
es
mov
(bad)
push
clc
mov
cmp
jmp
mov
ret
pop
and
push
xor
fnsave
inc
push
cmp
mov
sbb
mov
ja
ja
mov
add
retf
pop
push
mov
push
aam
mov
sbb
test
pushf
imul
jae
outs
mov
mov
sar
test
sub
fsubr
or
js
not
mov
add
jl
xor
adc
adc
mov
push
sar
mov
call
mov
data16
xchg
pusha
push
inc
adc
cdq
adc
jne
ja
inc
addr16
jle
test
sti
sub
sbb
jmp
frstor
inc
xchg
test
jb
xchg
jl
jecxz
jns
gs
mov
scas
cmps
test
cmp
mov
stc
retf
sbb
adc
test
scas
sbb
cmp
jp
mov
cmp
inc
jmp
aaa
jb
sub
sbb
stos
cmps
jo
pop
mov
loope
mov
shl
in
stc
fist
fisttp
mov
daa
pop
mov
cmc
adc
ja
repnz
push
dec
jecxz
test
dec
mov
rol
mov
rcl
xor
adc
jmp
mov
cdq
sub
bound
cmp
enter
call
pop
les
and
xchg
adc
pop
lods
pop
sbb
aad
das
in
jle
push
hlt
das
call
mov
jns
test
out
xchg
adc
jmp
cmp
inc
push
inc
push
xor
cmp
mov
sub
stc
sbb
adc
adc
and
xor
gs
and
jno
pop
fisubr
enter
gs
push
pop
push
xor
and
mov
int
gs
mov
dec
jmp
mov
adc
gs
jns
gs
jl
pop
or
movs
and
test
mov
fs
mov
not
icebp
jp
ficomp
jge
mov
mov
ja
push
(bad)
hlt
xor
pop
aaa
leave
push
inc
or
je
pop
jns
sbb
push
cmp
sbb
int3
mov
lds
mov
add
cmps
cmp
adc
fsubr
add
js
lods
ficom
jno
cli
jmp
push
addr16
imul
jbe
je
push
jo
mov
adc
mov
lds
push
popa
ret
fwait
lods
xchg
and
push
movs
jmp
stos
sbb
pop
or
fld
pop
adc
popa
int
sahf
imul
sub
aas
call
adc
retf
retf
loope
movs
xlat
fstp
xchg
dec
mov
in
and
mov
adc
outs
jmp
push
test
arpl
mov
dec
mov
sub
ret
les
inc
xor
push
add
test
inc
je
xchg
fcom
cmp
adc
jl
inc
push
or
dec
test
fs
rcl
inc
pop
xchg
jns
xor
xor
fld
adc
cmp
mov
popf
xchg
fld
or
inc
and
sub
xor
loope
stos
pusha
fstp
mov
out
scas
rcr
popf
xchg
jge
xor
fisttp
xor
fldenv
ret
cmp
out
shl
rol
sbb
push
jecxz
adc
jge
dec
les
cmp
jae
adc
(bad)
sbb
or
and
loopne
in
repz
dec
mov
call
add
enter
adc
xor
mov
jmp
cvtps2pi
jae
and
sbb
dec
int
dec
imul
cmp
xchg
cmc
popa
push
push
sub
jmp
stos
adc
mov
shl
into
rol
mov
sbb
sbb
cmc
jmp
sbb
aaa
nop
mov
pop
ja
adc
scas
push
(bad)
jmp
lds
pop
xor
in
cdq
stos
and
adc
pusha
mov
loopne
adc
or
xor
jecxz
or
aam
ins
sbb
cs
arpl
rol
adc
mov
inc
sub
and
or
sbb
mov
cs
mov
sub
fs
loope
xchg
lds
inc
(bad)
push
sub
dec
inc
dec
sar
dec
mov
mov
rcl
out
push
aam
xchg
icebp
jge
add
jne
addr16
popa
lods
push
int
ror
ficomp
imul
mov
lea
mov
pop
loop
pop
stc
stos
push
pop
push
out
dec
mov
fild
mov
push
jb
mov
push
aam
pop
push
scas
in
inc
mov
xor
addr16
jb
mov
pop
lahf
test
sbb
loop
xchg
mov
test
xchg
lahf
push
ins
sti
inc
(bad)
inc
cmp
and
(bad)
lock
mov
xchg
sbb
dec
cmp
xor
fs
fild
xchg
pop
aaa
into
mov
cdq
or
inc
jmp
xchg
hlt
in
xchg
dec
jmp
jecxz
cld
xchg
stos
add
dec
sbb
adc
add
shl
adc
mov
lods
mov
push
jo
mov
ret
mov
jg
mov
inc
pushf
pop
popf
xor
sar
jae
jnp
inc
mov
je
fimul
bound
mov
mov
rcr
imul
pop
fbstp
daa
leave
sbb
add
mov
aam
scas
xchg
sbb
shl
jne
cmp
pushf
jp
test
daa
(bad)
adc
dec
pop
mov
repz
das
cmp
and
mov
cmps
cmc
es
mov
aas
cmp
in
ret
sub
inc
cmp
or
xchg
jp
pmaxsw
sub
cs
adc
push
cmps
sub
in
retf
inc
inc
add
test
xor
mov
sub
cmp
cmp
jl
mov
hlt
add
mov
xor
(bad)
enter
jl
loop
ins
dec
sub
push
pop
cmp
mov
pop
add
jo
sbb
cwde
add
pop
loopne
inc
pushf
fwait
cld
cmp
das
xchg
jp
clc
adc
retf
(bad)
sbb
mov
pop
rol
aad
push
adc
mov
pop
sub
int3
cmp
pop
ins
pop
pop
jae
mov
daa
cmc
ins
dec
adc
xor
push
sub
mov
bound
ins
mov
dec
add
mov
cmps
loop
pop
sbb
popa
xchg
jmp
mov
or
int
in
mov
js
pop
scas
test
js
rcl
movs
loop
imul
cmp
adc
out
pop
add
test
xchg
iret
mov
stos
imul
jge
call
stos
movs
xchg
and
sub
mov
push
call
cwde
retf
dec
gs
mov
pop
or
or
and
adc
mov
mov
mov
retf
retf
pusha
iret
rol
pusha
and
inc
les
sbb
je
fwait
push
mov
call
popa
clc
mov
mov
repz
int
nop
add
pop
cmps
lock
inc
js
push
jne
aaa
jbe
xor
ss
outs
xor
mov
inc
pop
pop
cmps
js
cmps
jle
adc
pop
loopne
bound
sub
call
stos
dec
mov
pop
mov
pushf
push
cmp
mov
or
stos
inc
pop
loope
and
daa
cdq
push
dec
ret
push
xor
inc
retf
pushf
stos
js
jno
xchg
and
push
mov
ja
jecxz
jbe
mov
adc
(bad)
push
jl
push
pop
js
sub
push
jb
jns
sub
jecxz
push
jne
push
jno
retf
fs
dec
xor
pop
jb
popa
sub
movs
clc
xchg
fidiv
hlt
xchg
cmps
mov
pop
sub
mov
adc
test
repnz
add
jp
mov
aam
push
ss
ins
xor
jbe
outs
mov
mov
mov
jb
jae
stos
sbb
xor
xchg
retf
cmps
sbb
mov
repnz
je
lods
ds
mov
popa
mov
js
in
jecxz
mov
jmp
addr16
retf
xchg
xor
pop
loop
add
ja
dec
cmp
je
aaa
push
(bad)
sbb
addr16
scas
int3
clc
sub
js
ds
xlat
call
retf
mov
outs
and
call
adc
sbb
cmp
in
jl
xchg
mov
jae
je
ficomp
aas
stos
out
stc
pop
mov
mov
call
rcr
aad
pop
or
aam
push
mov
jne
test
lds
test
lahf
out
lds
jbe
jmp
rcl
inc
(bad)
xchg
add
dec
jne
sbb
ja
inc
jns
(bad)
ins
pop
ficom
jecxz
cli
xchg
pop
leave
pop
movs
sbb
imul
xor
std
push
jge
xchg
lahf
dec
pop
fs
sub
bound
dec
add
and
jo
aam
push
outs
add
adc
enter
not
sbb
cs
sbb
jnp
pop
pop
dec
enter
add
mov
cmp
jmp
jmp
pop
jge
cmps
cdq
(bad)
in
iret
fist
or
sbb
mov
test
sub
sub
add
xor
xor
push
scas
xchg
or
push
imul
pop
imul
sub
ss
dec
inc
mov
cmovl
int3
sub
lds
lock
cdq
push
mov
pop
sti
call
sbb
loope
(bad)
jge
mov
repz
rol
shl
mov
pop
mov
mov
or
inc
pusha
popf
adc
pop
mov
inc
cmp
jl
dec
jno
enter
rol
xchg
jne
arpl
and
mov
mov
or
test
push
lea
cdq
test
dec
cmp
push
push
sub
dec
push
adc
popa
fcom
jl
cmps
jg
fimul
lods
sub
or
push
and
push
pushf
mov
repnz
retf
pop
mov
stos
xor
call
pop
fidivr
(bad)
and
stc
gs
mov
popa
lds
in
mov
cmc
enter
sbb
jl
mov
pop
xor
mov
sbb
test
popf
(bad)
xchg
rcl
push
adc
loopne
cwde
imul
xchg
mov
xor
stos
dec
and
pop
mov
mov
(bad)
mov
add
xchg
push
icebp
in
ss
nop
int3
test
and
std
pop
push
jb
std
or
mov
cmp
jp
dec
scas
call
fistp
lock
cli
shl
js
stos
in
ret
out
xor
movs
mov
daa
dec
dec
pop
inc
pushf
scas
jne
pop
(bad)
in
mov
jb
fcomp
fwait
push
ret
mov
push
push
into
fisubr
xor
loope
sbb
fwait
push
push
mov
rcr
scas
lods
cmp
clc
test
sub
int3
and
add
and
nop
stos
stos
ret
fimul
jne
jnp
push
mov
adc
xchg
ss
sbb
cld
adc
test
or
(bad)
ins
test
pushf
fiadd
repz
addr16
and
ret
xchg
loop
cmp
push
xchg
in
pushf
sbb
lods
xchg
mov
cmp
pop
popf
scas
adc
fsub
sub
push
inc
sub
dec
cwde
sub
ds
jle
mov
sbb
ja
pop
(bad)
outs
cmp
xor
push
dec
int3
sub
jo
test
js
out
jns
adc
jbe
mov
popa
lea
ret
push
ja
ins
jnp
mov
sbb
test
ret
jae
imul
cmp
mov
aam
stc
cmp
imul
pop
pop
paddq
lods
movs
push
dec
add
or
rcr
mov
out
call
push
dec
sbb
jo
pop
les
or
xchg
mov
ins
nop
ret
push
xor
inc
in
or
shl
call
daa
pusha
dec
dec
sub
in
nop
mov
jecxz
test
inc
mov
loop
ja
fimul
int
xor
pop
sar
fmul
shl
iret
rcr
jp
inc
dec
push
test
sbb
inc
jecxz
retf
aaa
retf
outs
fisttp
neg
in
adc
loope
pop
mov
nop
sub
in
and
xor
repnz
dec
pop
out
and
pop
popa
icebp
cmp
xor
inc
jle
cmps
dec
adc
fild
xor
aaa
jne
add
push
jne
stos
aas
ja
hlt
ja
scas
push
or
sbb
ret
das
ja
cmp
rcl
in
push
mov
sahf
in
adc
bound
iret
xchg
scas
dec
push
outs
popa
enter
ds
push
sub
cmps
add
icebp
pushf
mov
in
aam
outs
sbb
xlat
std
test
ss
leave
aaa
std
sbb
or
jle
sbb
xor
lea
push
cmp
mov
std
loopne
pop
sub
push
inc
sti
sbb
mov
mov
fadd
adc
pop
ja
shl
mov
stc
mov
sbb
mov
pop
int
jns
ret
call
inc
and
fcomp
sub
push
mov
ss
xor
cmp
fwait
jns
xchg
lahf
inc
push
mov
call
dec
mov
ret
out
fcom
or
xor
outs
stc
add
(bad)
mov
call
addr16
outs
jecxz
rcl
push
inc
and
jg
adc
fdiv
test
mov
call
push
mov
mov
push
and
in
xchg
xchg
sti
bnd
sub
mov
xor
dec
adc
xor
cs
js
fld
inc
xchg
adc
imul
xor
mov
lea
pop
xchg
lods
cmp
xchg
es
or
lds
test
int
test
movs
and
xor
in
adc
imul
push
xor
outs
push
stos
pop
push
sahf
push
lds
sub
aaa
ja
xor
push
call
test
cmp
mov
lods
and
sub
adc
cmps
mov
inc
stos
sar
mov
inc
int3
inc
fdivr
mov
xchg
(bad)
pop
stos
inc
out
movs
inc
pushf
mov
ror
int3
sub
popa
inc
rcl
(bad)
sub
xchg
out
adc
cmp
push
xchg
sbb
add
enter
imul
add
inc
scas
outs
jns
loopne
js
sbb
push
xor
push
ds
cmp
or
push
imul
vmovq
(bad)
pop
cdq
xor
push
in
cmp
shr
sub
sti
mov
push
addr16
cmp
je
inc
sbb
dec
xchg
xchg
jnp
or
inc
mov
xor
ins
ins
mov
inc
jae
aam
adc
sbb
stc
shl
pop
or
xchg
and
mov
push
fs
push
hlt
push
lods
adc
inc
mov
icebp
pop
ret
retf
xor
xor
repnz
pop
lahf
sub
adc
xor
mov
sub
nop
jge
and
inc
jne
leave
or
and
mov
xchg
mov
mov
sub
call
mov
adc
mov
out
mov
test
repnz
(bad)
js
sub
les
fdiv
inc
js
mov
jb
xor
push
push
bound
mov
cmp
pop
jb
dec
fimul
cli
xchg
xchg
lahf
enter
in
(bad)
jne
inc
lock
and
ret
mov
xchg
sub
enter
cmp
movs
lds
jb
addr16
sub
jns
jecxz
fimul
js
xor
test
movs
jmp
cwde
std
push
loope
lods
sbb
cs
test
leave
int
es
pop
pop
sbb
retf
mov
mov
jne
rcl
mov
sbb
lods
shr
dec
and
cmps
mov
int3
movs
add
jae
mov
ins
sbb
dec
bsr
mov
ucomiss
dec
and
jne
and
je
mov
aam
or
jle
inc
movs
out
fld
xchg
int
mov
mov
fisttp
rol
mov
and
movs
sbb
sbb
mov
pop
and
leave
xlat
fmul
add
push
cmps
cld
inc
int3
dec
ja
fidiv
mov
hlt
mov
retf
and
cmp
cmps
mov
aad
ja
retf
pop
mov
add
pop
sbb
pusha
adc
dec
inc
into
stos
cmp
loope
adc
or
pop
mov
ret
(bad)
shl
jne
pop
jae
cmp
adc
add
xchg
push
dec
xor
jl
jle
mov
jg
ja
pop
jnp
pushf
ja
pop
ret
fs
in
mov
fsubr
sub
jae
lock
pop
dec
push
pop
sbb
and
or
pcmpeqb
cmp
mov
mov
and
dec
xchg
pop
scas
inc
and
dec
xchg
int
xchg
sbb
push
xor
xchg
push
stos
sbb
jecxz
mov
pop
jbe
inc
stos
pop
xor
dec
jno
in
xchg
mov
inc
or
inc
dec
jbe
mov
add
cmc
fldl2e
push
jo
jl
inc
jne
rcl
adc
sbb
or
pop
out
sub
in
repnz
push
inc
jp
stc
inc
imul
xor
sub
add
adc
push
aaa
mov
movs
sbb
imul
rol
jp
int3
les
rcl
jle
ss
mov
mov
xor
mov
mov
sub
je
sbb
fisub
mov
jb
(bad)
mov
push
(bad)
mov
rol
mov
aam
mov
jbe
pop
adc
lods
sub
sbb
jecxz
retf
test
adc
div
stos
pop
ret
mov
push
adc
aad
(bad)
xor
sbb
les
out
jecxz
push
out
loope
pop
mov
or
push
out
arpl
or
out
inc
outs
retf
dec
repnz
ins
in
xor
test
sbb
push
inc
js
or
dec
test
neg
sub
adc
aam
fld
stos
fmul
test
jmp
repz
pop
mov
push
jmp
jae
push
(bad)
jbe
test
xor
mov
dec
enter
push
pop
(bad)
scas
xchg
into
loopne
test
enter
lahf
push
or
lds
lds
scas
repz
xchg
arpl
jg
js
mov
addr16
add
push
dec
sbb
scas
or
in
mov
or
lock
jg
dec
loop
jle
sub
aad
sub
pop
sub
push
sbb
cld
int3
mov
sub
sbb
inc
in
retf
cmp
ror
cmp
cmps
mov
iret
mov
lock
mov
in
and
sub
inc
pop
iret
pop
mov
jecxz
retf
mov
mov
jne
sub
jno
fsubr
(bad)
rcl
mov
enter
fistp
out
dec
pop
and
into
clc
stc
retf
in
das
push
or
test
xchg
pop
jp
loopne
and
xchg
sub
in
cmp
in
int
jmp
mov
sbb
and
cmp
js
les
sti
fbstp
gs
int3
ja
test
(bad)
mov
push
stos
pop
cmps
and
pop
inc
and
scas
lds
mov
ja
iret
jmp
jbe
ins
mov
mov
push
jnp
fcom
adc
inc
push
call
mov
add
lods
retf
fcomi
sub
or
adc
xchg
pop
push
sahf
or
xor
or
icebp
xor
pop
scas
push
dec
push
xchg
adc
lods
xor
adc
(bad)
pop
arpl
test
inc
les
jno
inc
cmp
push
push
daa
aad
xchg
shl
inc
pop
xor
sbb
sub
mul
(bad)
sub
shr
cmp
push
bound
je
dec
lock
xchg
in
out
jb
xchg
xor
jmp
jmp
or
cmp
or
imul
jne
mov
sub
sti
push
mov
pusha
cmps
rcl
mov
repnz
lea
nop
or
jbe
push
fisubr
mov
pop
jecxz
adc
cld
sub
js
jle
loop
inc
test
ja
inc
mov
and
aam
cmp
push
sar
cmovg
rcl
adc
test
or
inc
push
push
push
or
(bad)
mov
jae
mov
std
cmp
fwait
movs
mov
addr16
jae
mov
je
aaa
push
pop
cmps
mov
jmp
xchg
jg
pop
aam
fistp
mov
mov
add
xchg
aam
test
mov
and
xchg
sub
inc
pusha
mov
and
push
out
dec
pop
pop
in
sub
inc
dec
jp
test
jmp
push
mov
lods
xchg
mul
ss
in
in
adc
cmp
(bad)
adc
or
arpl
pop
test
in
add
call
push
add
adc
mov
idiv
scas
push
imul
ficom
out
das
mov
sub
inc
jbe
xor
sbb
jmp
or
imul
aas
mov
cmc
xchg
pop
xchg
stos
cmps
jmp
cli
push
aas
imul
into
or
add
sub
outs
stos
cwde
mov
ret
sub
adc
push
mov
mov
fsub
into
bound
in
jl
lock
stos
stos
les
loop
jo
(bad)
sti
(bad)
jnp
mov
cmps
lea
(bad)
clc
jmp
aad
mov
mov
rol
das
sbb
mov
sbb
pop
out
xlat
hlt
out
sub
repz
je
or
push
xor
popf
dec
lea
stc
lods
or
jbe
ins
mov
loopne
popa
sbb
sbb
lock
xchg
dec
sahf
pop
dec
inc
cmp
scas
xchg
rcl
mov
add
call
jmp
(bad)
imul
mov
adc
mov
xor
push
cwde
and
mov
lock
mov
xchg
loop
and
mov
shl
into
test
add
(bad)
enter
jno
mov
(bad)
add
mov
ja
mov
fcom
aad
jge
jae
jp
lds
dec
mov
xor
push
arpl
xor
cld
lds
mov
stc
stos
sar
inc
pop
cmps
sub
lods
inc
jge
push
inc
push
popa
fist
fs
retf
cmps
jns
lahf
fidiv
xor
std
add
add
xchg
dec
push
pop
push
repnz
pop
out
adc
push
stos
jle
jae
inc
pop
push
add
(bad)
aad
fild
out
and
sbb
stos
xor
pop
xor
jmp
pop
xor
dec
outs
adc
push
push
dec
inc
adc
sub
sbb
les
jg
in
and
sahf
xor
xchg
dec
cld
adc
bound
or
jb
or
movs
push
or
xor
mov
add
stos
mov
push
in
jecxz
sub
sbb
mov
and
push
(bad)
sub
xchg
pusha
dec
test
imul
stos
jnp
mov
inc
js
sub
fld
sbb
sub
push
in
mov
aad
hlt
add
xor
cmp
ret
clc
and
loop
test
stos
lea
lods
out
sahf
jbe
add
jmp
cdq
(bad)
mov
xor
adc
fwait
mov
je
arpl
mov
xor
sti
mov
push
or
sub
call
in
dec
xchg
mov
pusha
mov
cmps
or
ret
cmp
dec
outs
mov
sub
pop
mov
out
xor
inc
loope
cmp
jb
pop
push
mov
ja
add
aaa
cmps
in
ins
or
mov
iret
loope
mov
xchg
int
int
adc
stc
fcomp
jb
clc
arpl
sbb
sbb
sub
retf
mov
mov
xor
stos
cmps
jmp
sar
hlt
fild
addr16
scas
sub
dec
inc
test
stos
cmc
lds
inc
inc
fisttp
pusha
cmp
fiadd
mov
stos
jo
mov
arpl
inc
daa
pop
cs
rcl
in
lahf
fcos
mov
inc
push
pmulhw
add
mov
pop
stc
mov
lahf
fadd
pop
add
mov
xchg
or
lea
push
xor
inc
cmp
cmps
and
test
mov
ins
pop
test
test
sub
mov
aam
nop
ret
cdq
push
lods
(bad)
gs
dec
cdq
or
pop
aas
pop
test
stc
retf
fisub
mov
mov
mov
add
sbb
jns
cmp
mov
pop
mov
adc
sbb
mov
inc
mov
(bad)
popa
(bad)
dec
sub
and
imul
jnp
fist
adc
mov
mov
outs
gs
je
retf
call
add
jns
movs
iret
mov
inc
ins
xor
xchg
ficomp
dec
jae
cmp
sub
pusha
call
jl
cmp
popf
(bad)
fcmovbe
in
xor
rcl
aam
push
jp
add
mov
cmps
push
pop
dec
dec
js
stc
dec
pop
sbb
sar
dec
in
stos
pop
adc
les
sar
je
inc
mov
dec
mov
mov
jbe
pop
and
pop
mov
aam
xchg
pop
push
pop
out
in
pushf
xchg
aaa
loopne
ds
push
imul
dec
loope
sub
pusha
jmp
shr
push
pop
pop
je
mov
dec
sub
aam
cs
rcr
mov
in
lods
in
adc
push
and
aam
nop
add
out
push
sbb
in
sbb
outs
inc
test
arpl
jbe
jl
mov
test
dec
push
rcr
add
pop
scas
pop
scas
or
add
mov
xchg
sbb
retf
addr16
jno
mov
fidiv
into
cmc
jne
mov
or
sbb
div
mov
ror
jge
xchg
mov
cdq
sbb
adc
adc
push
sub
inc
inc
push
mov
push
inc
mov
mov
adc
leave
sub
lods
pop
cmp
cmps
jo
out
in
ror
stc
scas
add
dec
mov
dec
jmp
dec
std
repz
pop
sub
bound
int3
jle
ud2
push
jb
std
sbb
pop
sbb
push
jmp
sub
pop
(bad)
jmp
inc
xor
push
sub
pushf
sub
mov
mov
mov
xchg
xchg
pop
xchg
mov
dec
out
dec
fcos
inc
xor
and
movs
(bad)
sbb
in
sar
push
pop
test
lds
sbb
jl
pop
into
leave
xchg
mov
in
int3
sub
ins
cmp
sti
in
nop
or
pop
dec
inc
inc
pop
and
lods
pop
and
stc
jae
mov
pop
push
and
arpl
cmps
xor
push
bound
pop
imul
sbb
xchg
cmc
test
and
(bad)
push
or
pop
sbb
pop
mov
out
retf
dec
lods
pop
das
xor
mov
push
mov
push
mov
cwde
cmp
lock
cmc
inc
inc
mov
xchg
out
lock
dec
(bad)
push
add
(bad)
adc
push
scas
mov
or
pop
je
in
jle
mov
xor
xor
xor
inc
jecxz
pop
setae
pop
test
outs
dec
retf
mov
dec
xlat
repnz
pusha
sub
sbb
and
dec
fs
inc
lock
gs
push
es
jae
sbb
xchg
xor
gs
mov
mov
or
cmp
push
push
dec
retf
jno
jno
imul
jae
mov
iret
inc
test
imul
mov
and
mov
les
cli
scas
and
mov
out
sub
push
adc
ja
in
xchg
sub
push
sbb
cmc
and
mov
rcr
in
mov
push
xchg
xchg
loopne
sti
loopne
add
mov
stos
pop
jle
sbb
mov
cmp
dec
cmc
fs
sbb
sar
push
rcr
out
imul
cmp
mov
addr16
push
sub
and
call
ins
mov
(bad)
out
xor
sbb
out
lock
push
pop
xchg
movs
xchg
sbb
mov
scas
imul
inc
lock
add
add
mov
cmp
in
dec
and
xchg
dec
and
cmp
scas
mov
dec
inc
xchg
stos
push
mov
cmp
sub
xlat
sub
int
int
into
push
aaa
lock
(bad)
mov
xor
iret
mov
cmps
cwde
daa
fsubr
imul
sbb
jne
(bad)
stos
data16
pop
adc
inc
push
mov
rol
cwde
loopne
cmps
pusha
sbb
clc
push
mov
add
adc
inc
mov
imul
ds
pop
xchg
jbe
repnz
xchg
adc
js
sbb
pop
xchg
pop
push
jg
sub
test
or
sahf
xchg
in
push
push
call
aam
jae
sbb
movs
enter
sbb
dec
sub
or
mov
daa
pop
dec
push
scas
pop
jb
xor
ja
lds
sub
popf
cmc
lea
sub
mov
das
push
ret
mov
jle
loopne
xor
sar
jae
aam
cmc
fcmovbe
dec
pop
js
pop
imul
es
(bad)
shl
iret
mov
add
jae
(bad)
ficom
cmp
mov
leave
or
xchg
jno
inc
xchg
jp
in
aaa
fsub
mov
js
mov
daa
xor
repz
push
sbb
cmp
test
inc
(bad)
mov
fidiv
add
imul
pop
paddb
dec
jle
jno
frstor
cmp
(bad)
fisubr
xchg
gs
mov
fisubr
xchg
cmp
jle
stc
aam
clc
jae
add
cmp
or
arpl
ins
push
xor
(bad)
mov
fwait
pop
xor
lahf
cwde
mov
sbb
rcl
(bad)
imul
inc
pusha
mov
retf
jne
out
cmps
pop
xor
xor
lock
xchg
inc
fstp
inc
sbb
xchg
push
(bad)
mov
cmp
push
mov
ss
add
dec
pusha
pop
jb
movs
jecxz
sbb
cmps
enter
cmp
mov
js
loopne
int
neg
jo
ins
cld
adc
icebp
mov
sbb
sbb
cld
inc
mov
xor
popa
imul
xchg
cld
push
mov
cmp
mov
mov
mov
rcl
adc
fs
je
xor
mov
xchg
sub
and
push
aad
and
jae
push
shl
xchg
xchg
cwde
jge
push
call
repz
movs
and
mov
jno
jge
iret
inc
sbb
xchg
pop
mov
cli
jg
lea
push
inc
ds
retf
sbb
test
test
jne
cs
mov
(bad)
mov
iret
xchg
push
enter
adc
push
mov
mov
dec
mov
mov
push
fadd
outs
out
inc
bts
scas
xor
imul
or
enter
mov
push
mov
dec
jb
jle
scas
loopne
mov
xchg
xor
fsub
ins
movs
mov
fdiv
bndldx
fnstsw
mov
js
lock
mov
aas
movs
iret
mov
sbb
and
icebp
pop
ror
test
(bad)
and
sbb
jle
jo
into
mov
mov
and
adc
xchg
jnp
in
mov
je
mov
movs
jmp
mov
inc
retf
inc
stos
mov
test
popf
test
mov
jmp
sbb
les
or
fisubr
mov
and
daa
or
scas
cmp
jae
add
cmp
push
mov
mov
push
dec
jg
shl
xchg
push
add
adc
(bad)
xor
jno
pop
retw
inc
push
push
ss
dec
stos
arpl
xchg
and
jnp
call
cwde
rol
inc
or
aam
mov
in
out
div
mov
cs
lods
mov
out
iret
fs
fistp
das
sbb
adc
lods
jns
retf
into
cmp
xchg
mov
jne
jmp
dec
test
popa
mov
sahf
(bad)
scas
jns
mov
inc
ja
sub
ret
jmp
int3
xor
push
ins
cld
push
mov
stc
xchg
push
test
jge
mov
aam
add
stos
cmp
aas
cmp
sub
mov
jae
cmp
sbb
inc
dec
aam
ja
sub
add
jb
mov
mov
cmp
inc
jne
xchg
repz
mov
test
popa
lock
dec
lea
stos
xchg
cmp
jne
mov
nop
jnp
mov
int3
inc
stos
jge
cmp
and
stos
call
cmp
adc
mov
dec
addr16
nop
sbb
push
arpl
jns
popf
sbb
cmp
and
sub
dec
xchg
lahf
push
xchg
je
mov
or
test
dec
hlt
mov
cmps
iret
repz
push
jg
stc
fst
call
inc
pop
add
sbb
sub
xchg
lds
xor
lods
ss
mov
gs
cmp
pop
mov
lods
jb
sub
inc
jmp
ss
inc
cwde
sbb
pushf
ins
inc
jae
neg
mov
lds
shr
jno
xor
and
mov
out
dec
add
mov
sub
sbb
dec
jmp
pop
mov
and
xchg
imul
es
ins
leave
push
mov
addr16
adc
xchg
fcomp
stos
adc
popf
push
fidiv
pushf
int
inc
adc
dec
ficom
sbb
fdiv
sbb
jae
lock
and
retf
leave
mov
cdq
sub
pop
les
je
push
stos
enter
jmp
inc
push
xchg
call
and
add
pusha
mov
std
pop
or
or
mov
cmp
sub
stos
xor
xchg
int3
cwde
jno
les
mov
jl
xchg
jge
scas
add
xor
out
inc
lea
cs
pop
mov
cmc
(bad)
js
jp
ja
mov
outs
mov
repnz
jae
mov
rol
xor
into
clc
movs
fild
jmp
out
cmp
(bad)
ss
ror
inc
xchg
into
mov
sub
xchg
aaa
push
cmovge
xor
(bad)
xchg
xchg
adc
iret
mov
sbb
inc
adc
jns
(bad)
sbb
push
jmp
sahf
mov
iret
jle
scas
xlat
dec
fsubr
stos
mov
sub
push
sar
pop
sub
fcmove
sbb
sub
jnp
lea
pop
enter
into
sbb
int
inc
fild
mov
jns
push
push
jmp
in
test
jae
pop
pop
or
rcl
hlt
dec
inc
mov
mov
sbb
int
and
adc
sbb
retf
push
adc
cmps
out
dec
leave
jns
jae
in
and
xchg
sub
mov
jne
xor
add
pop
out
and
dec
jnp
jae
out
mov
jp
add
dec
and
lods
or
xor
mov
bnd
out
(bad)
test
or
push
call
ja
and
mov
sbb
cmp
xchg
je
in
gs
fcom
push
cmp
xor
shl
loopne
xor
cmp
daa
mov
cmp
sbb
dec
scas
sub
xchg
or
sbb
mov
xchg
adc
dec
and
mov
(bad)
jl
stos
lods
shl
xor
xor
pop
dec
adc
js
clc
scas
sbb
sbb
cs
pop
jo
sbb
inc
sbb
dec
(bad)
enter
jae
mov
emms
and
ficomp
lea
dec
popa
inc
jae
(bad)
jno
pop
fstp
jb
pop
pop
jb
inc
je
and
adc
mov
inc
iret
xchg
sbb
push
inc
mov
xchg
adc
test
pusha
in
call
test
int
(bad)
mov
test
repnz
fld
call
fisub
fidiv
cmp
call
data16
sbb
ret
mov
pop
mov
xor
aas
sbb
cmp
jae
adc
add
pop
call
cmps
or
call
aam
mov
mov
adc
fisub
adc
jb
or
test
ins
aam
push
int
push
jg
repz
das
sbb
sbb
adc
xlat
js
mov
out
sti
test
push
sbb
sbb
push
push
fs
push
hlt
inc
jae
out
bound
mov
loope
jl
inc
retf
mov
pop
dec
aam
mov
rcl
test
mov
clc
ret
shr
sbb
lea
adc
repz
cdq
les
sbb
or
add
shl
sbb
aam
push
pop
popa
push
cs
mov
sub
stos
adc
push
inc
movs
xchg
xchg
imul
mov
sbb
outs
mov
les
add
jns
pop
push
xchg
pop
mov
sub
push
ret
test
inc
mov
mov
cld
xlat
rol
jecxz
sti
mov
loop
push
pop
pop
xchg
and
add
inc
inc
(bad)
aad
cdq
in
ds
stos
pop
push
lds
dec
xchg
push
in
pop
mov
add
aam
loopne
jo
sbb
sbb
call
push
jnp
fisubr
jo
push
mov
ds
pop
ret
cli
sbb
sbb
dec
push
js
xchg
cmp
adc
aaa
imul
jo
mov
nop
cli
mov
cmp
or
inc
cmp
stos
jo
mov
mov
aam
or
addr16
pop
mov
add
cmp
jae
mov
adc
inc
out
jmp
in
jno
or
in
bound
lahf
xchg
and
xor
push
adc
sub
push
dec
ja
mov
test
retf
arpl
mov
xor
push
daa
or
stos
mov
icebp
mov
loop
js
xchg
in
xor
paddsb
cmps
inc
(bad)
sub
sbb
mov
push
pop
mov
inc
mov
mov
dec
fxch
mov
std
mov
daa
inc
mov
inc
in
dec
xor
cld
push
mov
xchg
imul
xchg
adc
inc
adc
pop
test
jmp
xor
inc
sbb
add
inc
xor
sub
jns
and
xchg
repz
mov
repz
mov
adc
clc
repz
adc
ins
jns
popa
imul
jae
pop
mov
or
xchg
or
mov
outs
sub
mov
adc
fld
bound
icebp
sar
call
dec
fisubr
lock
js
nop
sbb
aam
leave
(bad)
xchg
pop
mov
das
js
adc
jae
repnz
cli
adc
cmps
dec
int
push
(bad)
test
sbb
mov
out
mov
in
jmp
mov
or
inc
cmp
ja
hlt
retf
xchg
mul
adc
inc
inc
std
cs
bound
lock
bnd
dec
vmulps
pop
and
push
sbb
xor
mov
fdiv
xor
sub
xor
jp
inc
out
sub
xchg
cmp
push
jae
call
imul
dec
mov
push
mov
leave
push
pop
push
aam
pop
push
repz
cld
in
add
mov
sbb
and
dec
enter
mov
dec
call
lock
or
push
pop
xor
mov
sub
scas
sbb
enter
mov
call
or
dec
and
jecxz
or
jo
mov
fild
sahf
push
and
push
fdiv
leave
jp
clc
mov
and
in
lods
inc
movs
fs
inc
fist
pop
add
sub
jae
ret
jo
sbb
sub
jnp
cmps
xchg
test
pop
sbb
add
jle
fstp
pop
add
pop
pusha
jo
stc
in
stos
cdq
jae
lods
dec
repnz
shl
sti
imul
pop
cs
jb
and
push
adc
das
and
adc
mov
mov
std
xchg
pop
les
movs
lods
hlt
mov
rcl
retf
setne
cmp
les
mov
mov
jge
and
mov
out
stos
xchg
push
pop
or
(bad)
mov
pop
lock
jp
popf
mov
xacquire
loope
fisub
leave
je
repz
les
in
push
jnp
sbb
mov
pop
jge
loop
mov
and
lahf
pop
add
xchg
sub
cmc
sub
std
mov
push
dec
mov
daa
mov
or
pop
(bad)
outs
nop
rcr
jle
js
ds
movs
repz
adc
and
mov
stos
pop
retf
daa
jl
and
ss
ins
xchg
cmp
test
inc
sbb
test
xor
or
jbe
into
xor
xchg
push
cmp
xchg
out
or
adc
cmp
sbb
dec
pusha
arpl
in
ins
enter
jae
adc
pusha
add
mov
mov
mov
in
fidiv
xchg
call
fldcw
inc
dec
mov
push
jl
ficomp
and
aad
xchg
xor
dec
arpl
mov
and
mov
add
imul
lock
sbb
cdq
inc
lods
sub
add
or
pop
push
inc
pop
sbb
rcl
jno
cwde
inc
cdq
jg
ficomp
cmp
mov
(bad)
add
jle
test
dec
push
mov
mov
inc
mov
lods
das
outs
(bad)
fcomp
add
cmps
add
cmp
fs
jo
mov
mov
xchg
fsub
xor
pop
xchg
(bad)
test
mov
push
xor
daa
and
push
jmp
gs
mov
ret
lods
mov
shl
xor
sub
xchg
and
lock
cmc
add
inc
cmp
mov
nop
xchg
ja
lahf
in
jnp
daa
ss
xchg
iret
sub
cmps
(bad)
sar
inc
xchg
xchg
inc
dec
pop
jae
(bad)
xor
loop
retf
jmp
dec
mov
mov
pop
mov
sbb
cmp
cwde
jae
pop
adc
rcr
or
and
adc
mov
adc
inc
loop
and
pop
pop
mov
jbe
adc
shl
das
adc
inc
sahf
sub
mov
in
adc
or
std
adc
punpckldq
push
add
sbb
out
cmp
call
leave
clc
popa
retf
ins
mov
and
sub
or
inc
push
je
sbb
sbb
and
xchg
adc
movs
out
push
push
adc
dec
dec
push
sbb
xchg
mov
xor
inc
inc
fist
jne
and
inc
xchg
xor
sahf
push
in
test
pop
inc
or
jns
sbb
scas
xchg
pusha
aas
scas
xor
pop
xchg
(bad)
shl
fidiv
fidiv
jecxz
jp
inc
imul
sbb
push
xor
test
fsub
jl
stos
stos
mov
adc
fwait
stos
mov
push
out
jae
ret
adc
pop
pop
sbb
push
and
stc
xchg
dec
das
jmp
mov
jecxz
stos
mov
push
dec
xchg
cmc
rcr
dec
mov
imul
cld
pop
ret
mov
test
xchg
cmp
pop
jp
fisttp
jno
scas
lock
jne
loopne
shl
dec
or
sbb
(bad)
cmp
fstp
aam
mov
mov
push
xchg
mov
pop
mov
xchg
test
sbb
sub
adc
je
cmc
xor
and
mov
dec
mov
out
and
retf
data16
xchg
int
jmp
aam
xchg
jg
xchg
scas
outs
or
leave
push
cwde
pop
jb
fcomip
push
mov
and
or
sub
and
push
dec
lea
adc
sar
xor
std
xchg
add
fmul
add
push
or
fs
stos
cdq
mov
scas
retf
cdq
dec
cmp
aaa
lds
add
cmp
and
xor
popf
inc
adc
dec
in
xchg
movs
inc
xor
push
jnp
jb
jle
dec
inc
clc
xadd
add
xchg
dec
dec
or
xor
sub
shl
aaa
pusha
pop
sbb
push
inc
into
fnstenv
inc
fisubr
inc
jl
test
aam
or
test
sbb
repz
mov
mov
daa
(bad)
and
je
sbb
aad
ret
dec
sbb
push
push
jg
mov
jp
xchg
inc
enter
in
dec
mov
dec
js
xlat
push
rcl
jns
sbb
mov
mov
mov
ins
push
mov
ret
mov
xor
nop
sbb
(bad)
popf
mov
rcl
scas
sub
push
out
jl
ja
jae
add
add
push
test
sbb
retf
popa
bound
inc
stos
popf
cmp
dec
sbb
sub
pop
mov
ja
push
lock
loope
jbe
adc
aam
pop
ret
inc
inc
cmp
ror
sti
or
sbb
cmps
test
jae
adc
pop
adc
cmp
or
sbb
sub
ja
push
sbb
fs
mov
in
mov
pop
ins
mov
mov
add
sbb
jmp
cwde
jae
push
xchg
and
int
nop
push
mov
push
xchg
pop
sub
stos
movs
inc
pop
mov
jno
sbb
jbe
loope
cmc
and
mov
sbb
sbb
pop
or
or
sbb
sti
xor
or
rol
dec
and
out
aad
cmp
int
nop
out
adc
add
inc
movs
jne
pop
in
into
xchg
cmps
pop
mov
sub
cmp
int3
loope
mov
add
add
push
cld
mov
retf
and
sbb
jg
jnp
push
(bad)
sbb
xchg
pop
inc
into
mov
je
push
pop
mul
mov
xor
ds
mov
mov
push
cmp
ja
sub
xchg
mov
in
or
dec
jne
add
cld
mov
pushf
xchg
stos
fwait
push
shr
bound
call
sbb
xor
fist
or
adc
loope
push
int
lea
shl
lds
sbb
xchg
dec
mov
cdq
jecxz
add
inc
mov
int3
rcr
xor
(bad)
sbb
cmp
dec
dec
lds
xchg
jb
aam
or
xlat
jae
cld
jg
xor
bswap
cmp
(bad)
jmp
mov
push
imul
imul
jb
(bad)
xrstor
pop
and
mov
add
mov
or
(bad)
in
inc
cwde
fistp
pop
or
data16
xchg
cmp
mov
cld
mov
aad
adc
je
lods
inc
(bad)
sub
pusha
xchg
xor
stc
adc
add
xchg
repz
jb
and
mov
fidivr
sbb
scas
sbb
sub
and
jmp
mov
out
mov
jg
pop
mov
popa
sbb
dec
aam
hlt
(bad)
repz
mov
scas
sbb
add
and
jp
punpckhdq
sbb
imul
adc
xchg
stc
movs
add
outs
jae
in
or
dec
ret
add
jmp
daa
fwait
push
add
mov
mov
dec
inc
add
mov
lods
dec
mov
nop
or
push
pop
(bad)
sbb
cs
mov
loopne
adc
lahf
fwait
(bad)
xchg
cmps
aaa
add
adc
ins
sub
call
add
adc
add
sub
cmps
xor
retf
push
and
jg
leave
jge
pop
adc
clc
sbb
mov
or
fmul
lea
mov
cmp
adc
inc
sbb
int
xor
sub
and
pusha
cmp
aad
fwait
sbb
adc
mov
jae
add
xchg
popa
pop
mov
sub
jno
push
test
in
jno
sbb
push
adc
daa
mov
daa
call
cmp
xchg
push
sub
sbb
pop
retf
adc
cmp
sbb
push
test
jae
aam
loop
push
or
inc
and
clc
ja
test
lahf
imul
push
push
test
xor
inc
mov
mov
mov
imul
stos
mov
ret
xchg
jae
lds
and
imul
adc
enter
rep
add
and
ss
xor
push
mov
add
mov
sbb
mov
mov
jo
xchg
ret
enter
test
cdq
pop
ret
call
add
dec
adc
pop
pop
dec
in
add
cmp
jg
stos
lock
cmps
shl
in
ror
lods
mov
adc
mov
mov
dec
dec
clc
adc
mov
(bad)
xchg
push
mov
je
stos
cmps
stc
push
push
pop
pushf
ror
adc
xor
aas
mov
adc
jp
jg
add
sbb
jl
or
jns
mov
mov
push
test
into
mov
jbe
adc
std
pushf
loopne
push
and
out
inc
mov
es
jae
mov
push
outs
sbb
pusha
lock
(bad)
cs
cs
fst
push
inc
push
adc
adc
xor
pextrw
mov
add
nop
hlt
aas
mov
popa
dec
leave
xchg
scas
aam
hlt
and
pop
popf
mov
sub
js
test
push
push
mov
mov
mov
lods
push
jno
dec
pop
cmp
mov
jne
ror
rcr
adc
inc
inc
dec
cmp
add
pop
call
adc
cmps
adc
fwait
dec
mov
xor
ja
popa
sub
(bad)
and
sbb
dec
js
mov
je
jns
sbb
dec
sbb
enter
sbb
sbb
int
loope
and
lea
imul
push
xchg
retf
sbb
iret
in
dec
pop
sub
adc
mov
mov
push
pop
pop
cmp
int3
rol
mov
cmp
or
test
inc
nop
outs
cwde
mov
sbb
mov
sbb
hlt
aam
jg
mov
sbb
push
jl
adc
mov
cmp
jae
popf
les
mov
test
sbb
fadd
cli
js
out
fs
jae
jecxz
in
hlt
and
or
ja
call
sti
out
jae
lock
rep
jmp
sbb
fcom
pop
push
fadd
add
xchg
test
mov
xchg
sbb
push
pcmpgtd
mov
shl
mov
cmpxchg
out
aad
dec
jo
lock
jne
fimul
xor
aad
daa
sub
add
pop
in
xchg
jo
rcl
mov
fsubr
outs
inc
(bad)
jl
jle
and
dec
push
stos
in
xor
mov
push
jmp
jae
jp
cmc
(bad)
xchg
loopne
loopne
sub
fcmove
xchg
mov
mov
push
jb
mov
xor
cmp
ins
add
or
push
in
xor
or
push
adc
xor
shl
addr16
sub
mov
pop
pusha
add
mov
adc
mov
sub
pop
jg
or
jge
dec
push
mov
imul
pop
cdq
rcl
sar
jne
xchg
push
add
mov
(bad)
mov
sbb
rcr
jg
jnp
test
das
int
scas
push
xor
mov
loope
imul
outs
pop
jns
mov
scas
cmps
es
stos
add
dec
sbb
add
jmp
mov
xor
inc
xchg
test
test
fld
cmp
mov
mov
add
pop
jne
xchg
or
push
dec
push
adc
pop
inc
and
add
or
pop
data16
add
lea
jmp
fs
mov
lods
mov
jae
pop
pop
les
fcomp
sbb
(bad)
dec
fidivr
ja
imul
scas
push
pop
sbb
push
xor
mov
loope
icebp
push
pop
enter
shl
fidivr
jbe
dec
mov
push
add
fstp
inc
jno
mov
dec
push
je
repz
cli
fisubr
mov
fdiv
sub
std
pop
fmul
inc
ret
mov
push
mov
ficomp
fsubr
repz
cmps
cmp
mov
ins
fdecstp
ret
adc
je
mov
in
outs
add
or
and
in
aad
and
push
jae
(bad)
aad
fadd
ja
adc
xor
js
or
mov
call
inc
and
cmp
sti
outs
ss
stos
cld
mov
mov
or
sti
(bad)
pop
lods
test
xor
sub
mov
jg
aaa
inc
push
mov
jb
add
or
fstp
push
xrelease
jne
stos
aaa
mov
xor
nop
test
stc
add
sar
jp
and
mov
imul
sbb
int
add
fs
adc
pop
stc
imul
push
add
jbe
fs
arpl
aaa
sub
push
jmp
aas
je
out
(bad)
push
ja
popf
movs
shl
jnp
in
rcl
clc
sahf
adc
cmp
int3
rol
mov
xor
xchg
aaa
pop
pminub
cmp
retf
pusha
adc
and
neg
sbb
pusha
leave
mov
jae
pop
pop
and
jmp
mov
push
cdq
dec
adc
mov
sbb
xchg
inc
xlat
inc
xor
inc
inc
xchg
dec
(bad)
xor
xchg
sub
xchg
lahf
dec
mov
sub
mov
pop
sub
mov
rcr
push
repz
scas
pop
or
jge
imul
push
inc
push
lahf
movs
mov
adc
mov
outs
push
out
fistp
and
arpl
mov
xor
xchg
inc
jmp
dec
scas
pop
stos
xchg
lds
mov
dec
mov
lea
and
(bad)
mov
lods
mov
pop
inc
push
sub
mov
pushf
test
cmp
mov
adc
popa
or
(bad)
jl
retf
gs
or
sub
jmp
pop
lea
sahf
hlt
mov
fs
jne
add
mov
xchg
fs
jns
aaa
scas
cmp
and
xchg
(bad)
mov
push
xor
pop
gs
or
cld
and
fwait
mov
enter
sbb
lods
mov
popa
cmp
push
mov
xchg
out
adc
inc
pop
aam
pop
pop
je
cmps
xchg
les
sbb
in
ret
dec
or
retf
sbb
push
es
or
xchg
xor
mov
daa
jae
adc
into
fidiv
mov
les
cld
inc
retf
cdq
lahf
je
inc
adc
pop
jns
icebp
pop
repnz
and
call
adc
push
ja
call
scas
in
hlt
out
adc
mov
adc
jnp
test
call
sbb
jno
xchg
sbb
fninit
jae
enter
adc
adc
xor
out
lock
rcr
fdiv
sbb
test
stc
jb
mov
mov
and
in
adc
jl
hlt
sub
pop
mov
pop
adc
loope
xchg
jnp
jmp
aas
cmc
mov
and
ins
xchg
pop
inc
outs
xor
mov
jns
pushf
test
and
pop
cmp
adc
test
mov
cld
push
imul
adc
push
xor
adc
jae
mov
scas
sbb
xchg
sbb
xlat
and
cmp
cmp
cmp
dec
xor
or
aaa
ror
in
stos
leave
mov
dec
mov
jo
cmc
sbb
sbb
sbb
and
imul
out
aaa
push
jae
rol
int
pop
jnp
mov
outs
enter
js
int
adc
xor
cmp
ret
push
int3
mov
les
adc
scas
or
cmp
ror
pushf
ins
cmp
mov
adc
pop
mov
xchg
jno
call
adc
pop
adc
mov
mov
jle
stos
cmc
cmp
ins
mov
push
retf
dec
adc
loop
mov
mov
retf
outs
push
push
(bad)
int
inc
mov
adc
fwait
xchg
loope
cwde
ret
bndstx
jmp
xchg
xor
lahf
mov
sbb
shl
shl
in
stos
add
cld
push
js
jle
mov
xchg
jae
mov
ja
sbb
(bad)
ds
scas
cmc
push
sub
jns
scas
jge
jmp
stos
(bad)
iret
push
adc
xchg
jb
fs
mov
xchg
js
mov
in
dec
lea
in
mov
sbb
into
jge
xchg
sbb
xor
pop
iret
movs
jmp
jb
lahf
or
push
xchg
jge
jne
sbb
add
push
mov
inc
add
push
mov
sbb
aad
pop
jnp
int
ret
mov
mov
inc
jae
int3
test
movs
jo
fmul
pop
pop
aaa
xor
and
sub
mov
adc
sbb
jmp
and
into
(bad)
out
cmp
dec
xor
out
sbb
adc
push
mov
add
push
shl
cmp
jmp
hlt
mov
loopne
hlt
popa
add
(bad)
sbb
call
and
cs
pop
bound
adc
fnsave
aas
dec
mov
mov
xchg
jae
dec
fs
repz
ins
sahf
or
xor
xor
sbb
hlt
inc
adc
xor
sbb
test
mov
mov
leave
adc
scas
fsubr
mov
fimul
outs
push
leave
dec
aam
je
lods
imul
adc
push
aam
rcl
scas
out
sbb
sbb
jo
cwde
push
mov
(bad)
cmps
scas
push
dec
add
jne
in
ins
mov
sub
ins
les
and
dec
pop
pop
fiadd
mov
ins
dec
xchg
stc
push
retf
jb
cmc
mov
fdivrp
mov
jbe
or
(bad)
xchg
mov
inc
rol
xchg
xor
pusha
lahf
pop
stc
ds
cmc
mov
sahf
or
out
inc
pop
pop
lock
je
test
jno
xchg
out
dec
xchg
add
inc
and
sahf
jb
popf
in
nop
pop
adc
dec
mov
stc
lock
test
fwait
fs
cmp
sub
jae
dec
cmp
xor
xor
push
dec
js
mov
in
mov
mov
les
xchg
xchg
cli
add
clc
js
adc
pop
mov
int
xor
iret
ret
(bad)
out
sbb
adc
ss
cli
and
xor
xor
pop
sbb
pop
ret
pop
cdq
fnsave
inc
(bad)
neg
lds
aaa
repz
dec
pop
jne
xor
iret
pop
push
cmp
popa
jb
push
cmps
xchg
push
mov
cmp
sub
aad
nop
ficom
inc
(bad)
sub
adc
clc
fnstenv
cmp
dec
add
(bad)
sahf
retf
pop
push
mov
mov
pusha
int3
xchg
and
xor
jnp
cmp
inc
movs
(bad)
(bad)
scas
push
sbb
cli
add
lds
mov
dec
xor
jb
xor
pop
push
iret
stos
pop
cdq
add
mov
dec
ins
in
ret
pop
popf
sbb
mov
call
jo
out
mov
test
lock
addr16
sbb
out
lahf
repz
jae
xchg
push
pop
adc
add
xchg
mul
and
fdivr
ja
dec
pop
sbb
mov
pop
mov
mov
mov
stos
sub
enter
ss
push
(bad)
mov
dec
mov
and
scas
xchg
stc
cli
pop
pop
jle
and
pop
shr
cmps
popa
push
jnp
std
aam
movs
adc
pop
sbb
bound
xchg
es
jo
mov
inc
leave
add
pop
js
xchg
push
scas
xor
jb
inc
cmp
push
dec
push
ficomp
sbb
or
aam
inc
adc
bound
stos
jb
jl
int
mov
pop
fistp
mov
lea
push
shl
sti
jae
pop
or
lods
stos
push
jne
mov
cld
idiv
pop
xchg
lds
or
mov
cdq
inc
popa
mov
add
ss
add
pinsrw
cmp
jae
out
push
(bad)
out
stos
ret
cmp
movs
push
repz
xchg
js
jmp
xchg
hlt
ds
or
add
mov
stc
cmp
xadd
pop
push
cdq
xchg
mov
push
dec
sbb
in
jge
add
cld
xchg
call
xor
adc
jae
adc
mov
mov
jne
pop
sub
lds
imul
test
dec
inc
les
ja
sub
jo
mov
mov
xor
imul
test
sub
aam
mov
pop
sbb
mov
dec
add
xchg
mov
mov
push
dec
sub
ds
add
aad
xchg
or
ja
mov
inc
jge
imul
sbb
push
out
or
stos
or
jne
aaa
pop
jae
nop
popa
cmp
(bad)
into
rcl
pop
adc
aad
popa
lods
test
xor
test
xchg
mov
cwde
bound
pop
jne
cmp
in
(bad)
push
xor
xchg
lea
sbb
or
pop
or
adc
ins
call
jp
out
xchg
jae
mov
cwde
jns
mov
mov
jg
loopne
pop
cmp
xchg
call
ret
cmp
cmp
mov
or
mov
adc
and
push
mov
push
xchg
lods
inc
fst
xchg
stos
pop
mov
cmc
sbb
sbb
xchg
fcmovbe
imul
xchg
sbb
jne
push
in
xchg
shr
mov
xchg
adc
fisubr
dec
and
push
into
xor
(bad)
push
mov
ss
add
pop
inc
pusha
test
(bad)
sbb
mov
cld
mov
sbb
sbb
gs
adc
xor
mov
sub
jecxz
push
lods
aaa
jae
stos
push
(bad)
mov
push
icebp
popa
out
mov
ss
sub
fnstenv
sbb
adc
and
cmp
or
sbb
adc
int
cmp
jcxz
sub
sbb
cmp
ror
cmp
xor
movs
mov
xor
int
popa
xchg
xlat
(bad)
dec
jae
int
mov
push
xlat
jns
mov
aam
cmp
mov
int3
popa
push
mov
movs
sub
mov
(bad)
adc
test
or
pop
into
add
mov
fsub
mov
pop
pop
out
arpl
mov
out
add
ret
fwait
xor
clc
mov
test
ss
add
inc
ret
cmp
jp
hlt
shl
pushf
cmp
popf
lods
mov
xchg
mov
outs
push
cmp
adc
pop
jmp
cmp
mov
mov
mov
push
fsub
mov
and
add
jae
rcr
pop
outs
rcl
xchg
cwde
lods
xchg
push
lock
xor
adc
hlt
sbb
daa
adc
inc
(bad)
(bad)
jns
xor
push
ja
adc
ins
ds
pop
sub
stos
test
jmp
pop
sahf
cdq
shl
mov
and
fild
mov
dec
jae
push
dec
hlt
or
pushf
pop
rcl
(bad)
ret
call
(bad)
push
add
push
cmp
hlt
inc
or
jb
sahf
xchg
jo
repz
adc
xchg
lea
(bad)
push
pop
xchg
cdq
jno
shr
mov
clc
in
aam
sbb
pop
shl
mov
xchg
sub
popa
shl
dec
ss
js
xchg
or
fsub
in
popf
js
ret
sub
sbb
cs
dec
data16
mov
push
jns
pusha
ja
daa
add
jle
fwait
lods
adc
jne
sbb
test
jp
mov
inc
jb
test
jae
sar
dec
push
and
cld
sbb
imul
mov
adc
inc
in
sti
test
in
cmps
lock
jae
jmp
les
sbb
icebp
cmc
push
xor
mov
or
mov
ss
pushf
push
(bad)
mov
dec
cdq
mov
sub
test
jmp
fwait
packuswb
and
rcl
inc
adc
adc
js
mov
push
ficom
jno
test
xlat
sbb
xchg
loop
ja
sbb
rcl
jbe
repz
xlat
ja
sub
jne
push
aam
xchg
mov
jmp
sbb
adc
bound
fstp
pop
movs
repnz
jg
mul
fstp
or
push
(bad)
xor
retf
gs
ins
fmul
je
bound
xchg
mov
jmp
add
gs
(bad)
mov
dec
xchg
fstp
mov
jae
cmps
dec
and
(bad)
sub
shl
jmp
push
or
sub
stos
jns
out
push
fst
les
imul
lods
dec
adc
jmp
mov
jns
cli
test
adc
sar
sbb
sub
adc
repz
jmp
adc
test
iret
cmp
xor
xchg
je
pusha
arpl
sbb
jne
inc
mov
shr
aas
inc
jbe
jae
cmc
add
fs
outs
stos
mov
jnp
or
jp
cmps
imul
in
mov
popa
loope
loop
fisub
bound
ja
pop
sar
push
aam
push
dec
shr
jp
mov
pop
sub
mov
aas
ins
aam
hlt
xor
mov
adc
xchg
out
add
sbb
loopne
fcom
mov
cdq
push
aad
dec
push
movs
cmps
jns
or
jnp
into
push
pushf
loopne
lock
push
jae
stos
movs
pop
add
pop
and
mov
mov
pop
fwait
pop
jae
cdq
sbb
sbb
add
add
add
add
inc
es
jns
xor
repnz
cld
fisttp
pushf
xor
jmp
pop
je
(bad)
int3
test
mov
mov
mov
xor
into
jge
jle
(bad)
dec
push
jp
idiv
scas
jecxz
push
aaa
test
cmp
cld
aad
icebp
int3
jb
lea
fisttp
pushf
outs
add
aad
loopne
push
sbb
push
mov
xchg
push
lods
inc
sbb
lods
adc
sti
int3
enter
iret
imul
inc
add
fbld
imul
push
jne
pop
pop
xor
out
aad
push
dec
or
icebp
xchg
mov
add
(bad)
(bad)
les
(bad)
push
stc
scas
and
movs
inc
mov
out
sbb
and
jl
xchg
add
xchg
cmovae
fdivrp
cmc
or
mov
int3
add
or
xor
mov
xor
inc
pushf
jb
mov
lds
aad
in
fimul
xchg
(bad)
fwait
push
hlt
outs
scas
xor
push
repz
aam
sahf
xchg
sar
mov
ja
sbb
(bad)
cmp
dec
dec
adc
hlt
push
sti
shl
sahf
sbb
sbb
and
xchg
cmc
jae
and
mov
ins
dec
sbb
xor
cmc
ret
cld
push
mov
mov
into
cs
ins
idiv
loope
stos
imul
ret
sbb
(bad)
and
jne
leave
in
and
cdq
inc
loopne
mov
xor
mov
daa
sub
sbb
into
enter
sbb
push
sbb
ja
dec
cmc
pop
movs
idiv
in
mov
arpl
xchg
cmps
sbb
loop
xchg
and
scas
xchg
jl
outs
in
xor
pop
mov
ret
mov
repz
fs
xchg
xchg
imul
in
je
inc
gs
shl
jne
mov
jle
mov
dec
add
dec
js
scas
push
jae
movs
dec
or
pop
mov
rcl
ins
iret
jp
push
xor
jmp
jmp
mov
pop
mov
lock
movs
sub
adc
jno
mov
dec
fstp
imul
test
call
fisub
das
leave
push
stos
jae
mov
inc
mov
add
xor
jae
dec
pop
push
fstp
adc
fisub
js
pop
jnp
cmp
push
lock
or
jae
or
jne
aaa
mov
dec
and
enter
les
inc
movs
jb
(bad)
pushw
mov
mov
or
cmc
mov
ds
(bad)
arpl
je
ror
xchg
jb
or
in
hlt
or
jb
leave
es
adc
adc
lds
call
dec
stos
sbb
daa
pushf
cmp
fcomp
call
ins
cmp
adc
neg
dec
mov
xchg
mov
(bad)
call
xlat
cmp
ja
shl
adc
int3
inc
adc
sbb
lods
pop
and
jmp
jle
not
js
mov
or
sahf
cli
int3
lods
mov
jb
xor
(bad)
jecxz
sahf
int3
loopne
sub
inc
cs
xchg
mov
jg
push
daa
outs
scas
test
test
mov
test
int3
dec
imul
ins
xor
jge
ss
call
push
adc
cmc
cmps
push
(bad)
cmps
push
xlat
stos
dec
push
inc
adc
and
dec
mov
push
cmp
shr
mov
mov
mov
fmul
mov
sub
mov
sbb
mov
xchg
inc
xor
jae
in
cld
inc
aad
adc
jecxz
xchg
dec
loope
sub
fwait
pop
dec
jae
or
daa
ins
popf
adc
in
mov
scas
jp
sub
jmp
clc
stos
in
mov
xchg
mov
retf
and
dec
call
dec
xchg
mov
ins
test
call
fs
ret
inc
les
lods
and
ror
mov
cmp
sbb
aaa
dec
pop
int3
push
ins
mov
jnp
out
mov
fisttp
add
jge
pusha
cmp
gs
leave
or
mov
cld
lds
scas
mov
sbb
lds
dec
rcr
iret
pop
fdiv
and
fsubrp
mov
sbb
xor
xchg
leave
fist
out
mov
jb
addr16
icebp
retf
(bad)
lods
pop
sar
xchg
dec
jp
jae
and
jnp
pushf
scas
mov
ret
xchg
pop
sub
bound
sahf
push
add
hlt
jbe
retf
xlat
out
out
dec
clc
mov
gs
dec
jg
inc
inc
jbe
js
add
sbb
repnz
mov
push
ins
cmp
sbb
add
int
popf
cmps
push
je
es
adc
inc
inc
sbb
xchg
lahf
ins
fs
enter
movs
mov
daa
mov
dec
or
retf
movs
fdiv
push
fwait
ja
ficom
fnstcw
cmp
aad
add
pop
xchg
pop
cmc
in
xor
xchg
hlt
add
sbb
fs
mov
jb
(bad)
mov
jle
js
mov
ret
jae
mov
pusha
in
movs
aaa
adc
xor
inc
inc
cmc
cmp
sbb
imul
xor
xor
jb
rcr
stos
(bad)
repz
pop
push
gs
sub
sbb
retf
loop
jae
mov
iret
imul
sbb
sbb
pop
xchg
dec
std
inc
jae
in
pop
out
push
ret
xor
xor
mov
mov
pop
scas
fbstp
sbb
xchg
clc
mov
push
jbe
or
test
pop
outs
and
(bad)
pusha
xchg
cli
je
test
push
dec
in
pop
(bad)
sti
adc
mov
or
jno
loop
nop
(bad)
xlat
and
scas
push
pop
shl
dec
xchg
data16
lods
xor
inc
fldenv
mov
push
mov
stos
mov
push
pop
jmp
je
xor
gs
pop
inc
test
mov
push
and
lods
sbb
ret
mov
adc
mov
jb
imul
imul
mov
cmc
ror
inc
mov
mov
aam
popa
nop
adc
out
xchg
cwde
lods
dec
sub
adc
cdq
adc
inc
(bad)
clc
inc
mov
repnz
test
out
pop
test
pop
sub
clc
(bad)
out
icebp
and
jmp
mov
aad
shr
fisttp
ret
pop
mov
xchg
addr16
push
int3
xor
sti
les
jmp
stc
jo
mov
and
lahf
stos
test
cmp
fwait
daa
adc
pop
inc
popf
lea
mov
mov
aad
shl
xor
test
push
mov
dec
add
pop
push
std
and
sub
push
adc
push
sbb
pop
cmp
daa
xchg
enter
sub
adc
push
outs
scas
inc
mov
xchg
sbb
bound
repz
cmps
pop
outs
inc
(bad)
or
ja
je
jno
gs
push
mov
(bad)
sbb
inc
adc
sub
ss
add
(bad)
jmp
test
or
fadd
mov
(bad)
je
pop
pop
scas
pop
xor
mov
movs
jnp
(bad)
mov
adc
dec
mov
pop
jne
cld
sub
leavew
cmps
xchg
or
sbb
mov
div
dec
pop
cmp
shl
outs
test
cld
mov
pop
push
jbe
sbb
(bad)
into
push
mov
mov
add
les
popa
cmc
push
inc
nop
movs
mov
mov
fmul
fmul
lods
adc
mov
out
lods
cmp
cwde
(bad)
xchg
xlat
or
lods
lds
fisubr
push
sbb
cli
in
sub
cli
hlt
xor
scas
xchg
lahf
add
test
mov
sub
in
mov
inc
(bad)
mov
push
fnstenv
addr16
pop
push
das
cmp
mov
and
mov
mov
adc
mov
dec
mov
movs
sar
jg
ficom
sub
add
xor
jne
and
inc
mov
loopne
xor
ja
xchg
dec
push
mov
add
xchg
das
mov
sbb
sbb
mov
cmp
rol
test
push
fwait
popf
rcl
adc
retf
cmp
cmp
inc
jb
jl
pop
sbb
dec
mov
mov
lock
out
stc
scas
sub
pop
fisttp
lods
and
sahf
jb
fisttp
imul
mov
or
jb
in
mov
dec
ins
in
mov
adc
jb
sub
lock
mov
and
out
push
cmp
data16
cwde
out
mov
clc
mov
pop
jle
(bad)
in
push
inc
push
in
popa
cmp
sbb
xchg
lods
pop
cs
push
mov
jnp
mov
mov
adc
ret
sub
pop
sub
inc
fs
xchg
das
scas
lock
pushf
jp
ja
aaa
lods
lods
(bad)
inc
movs
pusha
mov
pop
inc
jmp
adc
xor
sbb
sub
sti
data16
inc
dec
push
iret
pop
push
mov
retf
xchg
cmp
mov
cmp
fidiv
dec
jecxz
scas
jae
jle
or
push
inc
mov
(bad)
fmul
xchg
push
dec
call
cmp
idiv
mov
and
push
push
out
scas
xlat
sti
dec
cwde
int
jo
fwait
icebp
add
xchg
sub
xor
ja
cmp
jecxz
outs
push
mov
add
scas
adc
xchg
mov
not
stc
outs
aaa
mov
xchg
test
mov
popf
popf
mov
cmps
scas
sub
or
cmp
dec
out
and
out
mov
in
stos
pop
xor
stc
push
test
test
jno
test
xchg
fidiv
std
lds
test
je
mov
test
adc
mov
out
fsubr
mov
test
js
push
mov
jg
xchg
mov
ss
cmc
ins
mov
jne
scas
scas
jnp
mov
jne
std
mov
xchg
jne
mov
adc
(bad)
sahf
xchg
and
mov
xor
jl
aas
jns
push
xlat
pop
ins
push
fistp
cmps
cmps
pop
js
mov
inc
or
arpl
mov
in
int3
cmp
popf
jbe
cli
fldln2
xor
cmp
inc
cwde
lods
add
xchg
xor
add
pop
and
pop
cmp
sbb
and
or
rol
push
adc
call
xchg
jmp
sbb
jno
hlt
retf
call
dec
neg
out
mov
xchg
rcr
mov
inc
in
inc
std
arpl
cmps
js
dec
dec
add
xchg
push
sub
sti
sbb
pop
mov
xor
xchg
inc
arpl
xor
jg
test
jb
push
loopne
enter
cs
add
inc
(bad)
xchg
nop
ins
dec
and
loop
(bad)
bnd
call
push
hlt
bound
int
mov
bound
or
rcl
fidivr
lock
fs
mov
dec
call
xchg
inc
ret
add
ds
push
jp
pop
int3
xchg
dec
xor
rcr
pop
int
push
retf
mov
sub
aam
pop
gs
xor
hlt
cwde
jae
and
pop
push
jmp
xchg
sbb
sub
sti
xor
stc
nop
leave
fwait
repnz
arpl
mov
jp
sbb
push
xor
ins
fistp
adc
xor
cdq
cmp
fist
push
mov
sbb
nop
sub
fsubr
addr16
dec
je
xor
push
hlt
jg
jmp
stos
retf
mov
push
add
repnz
inc
clc
xor
mov
push
ja
ins
jb
es
pop
cmp
mov
outs
jae
pop
xchg
xor
in
inc
movs
ror
inc
mov
in
or
rcl
in
and
cmc
add
pop
data16
and
jb
and
test
(bad)
(bad)
les
mov
push
out
pushf
xchg
cmc
adc
js
sti
lods
and
ins
sub
dec
xor
in
push
pop
xchg
ins
push
adc
jnp
scas
movs
jge
cmps
test
mov
shr
(bad)
jecxz
and
repz
(bad)
sti
xor
ret
xor
retf
xor
sar
arpl
xor
cmp
icebp
and
test
push
mov
data16
repnz
or
xchg
aas
iret
hlt
ror
stos
addr16
js
xor
xchg
test
clc
add
test
cmp
mov
pop
lods
ins
cwde
push
scas
and
pop
dec
fs
pop
lods
jno
mov
xor
push
cmp
push
jno
cmc
sbb
adc
add
test
cmp
xor
fild
addr16
cmps
popa
int
xchg
adc
lea
in
rol
sbb
bound
sar
push
cmp
push
das
inc
not
jmp
ds
out
stos
int
jo
jae
mov
push
daa
xchg
cmp
and
jmp
movs
jne
hlt
cmp
sub
add
loop
xor
mov
hlt
leave
xor
sbb
jl
in
je
retf
pop
js
rcr
cmp
dec
sbb
iret
addr16
xlat
js
sub
cmp
cdq
mov
and
pop
nop
inc
pusha
pop
pop
sub
fcomip
dec
add
mov
pop
push
jns
outs
and
je
cld
adc
mov
mov
nop
aad
popa
push
cmp
out
mov
movs
mov
add
sbb
and
not
div
jmp
data16
mov
je
hlt
test
mov
inc
push
imul
loop
aad
mov
fadd
pop
sub
jmp
daa
test
in
push
shl
sti
mov
add
pop
out
and
xor
jmp
test
xchg
adc
sar
nop
sub
dec
inc
fdiv
jb
xchg
jmp
and
xchg
pop
or
movs
into
adc
stos
push
fist
push
add
fdivrp
mov
lea
push
jecxz
dec
adc
xchg
mov
xchg
mov
dec
js
xor
in
sbb
mov
arpl
mov
rcr
inc
sbb
(bad)
mov
fisubr
jp
dec
loope
je
in
stc
gs
int
jnp
ins
call
inc
xchg
std
cmp
push
inc
and
jmp
adc
jg
scas
out
xchg
(bad)
retf
push
inc
in
sub
popa
repz
jns
mov
sub
and
stos
pusha
cmps
inc
cwde
mov
dec
stc
cld
loope
jae
lds
push
jne
mov
scas
mov
jle
jg
push
sub
xchg
sbb
mov
jbe
push
xchg
lock
jmp
into
dec
not
push
sub
push
aaa
scas
lock
mov
sbb
cmc
rcl
fcmovnbe
gs
je
test
iret
dec
shl
and
mov
dec
mov
inc
cmc
ins
jae
aam
rcr
xor
mov
sub
mov
(bad)
in
or
cli
je
nop
adc
and
je
and
cs
xor
adc
out
xchg
or
push
xor
test
lds
std
shl
cmp
add
push
clc
inc
push
call
add
repnz
push
test
call
xchg
outs
xor
mov
test
push
jge
mov
(bad)
xchg
sbb
retf
xor
stos
lea
mov
pop
sub
and
shl
call
jb
(bad)
dec
fwait
fwait
clc
fidiv
mov
mov
test
movs
fnstenv
sbb
rcl
push
dec
aam
ins
ins
mov
push
aas
nop
push
shr
xlat
aam
retf
sub
sahf
adc
push
mul
dec
xchg
rcl
mov
test
push
pop
push
call
retf
(bad)
xchg
or
sub
fld
cmp
sti
inc
js
aaa
mov
std
xchg
mov
jne
test
xchg
xor
lds
je
imul
les
inc
push
scas
sti
cli
in
inc
xchg
test
xchg
xchg
pusha
add
xchg
mov
in
bound
xchg
lods
into
je
jbe
mov
hlt
rcr
pop
mov
or
arpl
sub
sti
push
cmps
pop
js
mov
and
sbb
xor
ss
push
jle
sub
popa
push
mov
mov
jge
lods
daa
sbb
inc
mov
adc
adc
(bad)
hlt
aam
adc
inc
leave
pop
push
dec
jae
pop
or
and
inc
jmp
clc
jbe
mov
sbb
dec
mov
int
add
cmp
jno
jmp
pusha
cmp
repz
mov
daa
dec
inc
ins
cmp
and
cmc
adc
hlt
jns
inc
cmc
aad
jbe
jb
mov
cld
rol
shl
das
cmp
mov
pop
or
in
adc
(bad)
out
xor
mov
or
sub
xchg
shr
jb
retf
push
adc
push
mov
retf
pop
inc
add
mov
push
rcr
addr16
ja
mov
or
cmps
add
scas
hlt
ds
jae
mov
out
and
test
cwde
lods
stos
lahf
pop
int3
add
imul
xchg
sti
cmp
push
ins
in
enter
jle
dec
retf
dec
sub
nop
pop
lahf
inc
cld
stos
xor
rep
cwde
cmp
loopne
je
push
xor
cmps
cwde
add
ins
cmp
fisub
jg
rcr
adc
cs
movs
lock
mov
mov
pop
cli
test
adc
sub
xor
mov
push
int3
jl
xor
mov
xlat
inc
jle
bound
gs
push
sbb
adc
push
shl
jecxz
and
repz
(bad)
jnp
mov
repz
sbb
dec
leave
es
xor
adc
aad
hlt
imul
out
pop
push
cs
movs
inc
inc
daa
pop
mov
jo
test
arpl
sti
sub
out
xchg
lock
adc
adc
loopne
or
push
int3
cmps
jge
ret
push
push
aaa
cmp
addr16
mov
cs
paddsb
retf
inc
sbb
cmp
xor
xor
add
lods
jp
fnsave
imul
jg
mov
cmp
push
hlt
adc
push
aad
ds
mov
jg
in
inc
xchg
push
lds
out
data16
inc
retf
pop
enter
push
inc
repz
mov
jae
jp
pop
stos
shl
ins
es
je
fcmovne
pop
sti
cmp
bound
ds
pop
dec
mov
mov
push
in
int
std
jns
in
loop
jmp
rcl
pop
adc
rol
mov
test
ret
cmc
mov
out
fs
cmpxchg
popa
shl
retf
imul
les
push
sbb
int
call
pop
sbb
push
or
into
dec
and
dec
mov
fimul
mov
adc
mov
ret
jecxz
pop
lea
adc
sbb
aas
add
mov
jae
popf
rcr
cs
adc
cmp
and
leave
pop
push
pusha
or
(bad)
cs
es
repz
retf
adc
int3
sub
jecxz
add
je
jp
xor
sub
add
inc
es
jmp
xchg
xchg
sub
or
stc
stos
push
xchg
xchg
sub
stos
out
or
das
int3
ret
in
aad
cmp
inc
leave
mov
fs
push
cmp
mov
into
xlat
inc
sub
dec
outs
or
dec
ins
cmp
inc
out
jae
loope
jl
out
call
out
push
pop
lods
call
std
jmp
dec
xchg
push
and
cmps
adc
sub
ficom
inc
add
test
mov
adc
das
pusha
push
adc
cmp
mov
xor
fisub
sub
push
xor
call
pop
arpl
inc
cmovp
push
test
icebp
sbb
push
sbb
pop
int
int
cmp
cmc
arpl
in
movs
dec
sbb
dec
push
sahf
mov
jb
data16
xor
mov
les
sub
mov
jno
inc
popf
sbb
pop
and
pop
xor
xchg
cdq
xor
or
adc
mov
adc
add
in
sar
test
push
outs
ds
in
and
mov
int3
ret
movs
ins
jge
push
xor
add
js
fcomp
out
jle
push
ins
call
jg
outs
jbe
and
mov
call
dec
push
dec
push
push
stc
aaa
mov
and
xor
pop
xor
mov
or
not
jmp
std
inc
push
add
sub
js
jecxz
inc
pop
in
pushf
pushf
mov
cmps
mov
sbb
outs
mov
out
xor
dec
fnstenv
loope
fld
jae
add
popf
push
std
mov
fcmovb
dec
call
iret
and
mov
sbb
push
movsx
dec
sbb
adc
lock
stos
adc
xchg
aad
mov
int3
sub
sbb
xor
mov
(bad)
arpl
test
stos
sub
dec
scas
loop
sub
inc
int3
push
jns
pushf
cmp
mov
mov
(bad)
jns
sbb
lea
stos
adc
mov
or
mov
gs
push
push
sub
xor
dec
adc
xor
dec
jns
ja
gs
push
ja
mov
push
mov
mov
inc
xchg
cmc
add
pop
retf
xor
scas
inc
mov
xor
imul
mov
fwait
xchg
push
xor
inc
jns
retf
cli
fbld
adc
test
nop
loope
(bad)
sub
outs
cmp
sbb
shl
sub
inc
sbb
scas
cli
or
(bad)
mov
shl
and
push
gs
lods
lds
xchg
xlat
cmps
add
sahf
push
mov
jae
mov
(bad)
push
sbb
inc
test
pop
(bad)
dec
sti
push
or
stos
loop
cmp
cmps
cmp
add
rol
addr16
or
mov
sbb
fisub
test
inc
or
mov
dec
push
mov
xor
adc
int3
xor
dec
inc
inc
mov
push
pop
jle
int
push
retf
jle
cwde
and
xchg
pop
push
call
adc
stc
imul
mov
jae
outs
adc
hlt
xchg
push
inc
inc
mov
cdq
test
data16
mov
xor
jb
cli
mov
sbb
push
cld
jbe
pushf
and
cmp
in
xor
adc
mov
xchg
dec
cmps
clc
sbb
sbb
lds
fld
jmp
call
(bad)
nop
jb
cmp
cmps
sub
dec
fbld
(bad)
push
xchg
mov
je
pop
popf
lods
call
inc
daa
test
call
fimul
into
sbb
fist
dec
xchg
mov
nop
xor
dec
mov
adc
inc
sub
ret
mov
bound
inc
leave
push
sub
das
mov
sti
mov
sahf
sbb
jmp
hlt
jne
in
mov
jb
rcl
in
add
mov
stos
mov
movs
loop
add
adc
daa
xchg
sub
jb
xlat
inc
dec
mov
and
mov
stos
frstor
mov
xchg
fstp
xchg
into
ins
dec
mov
in
and
mov
mov
push
sub
xchg
cmp
icebp
sbb
sbb
sub
je
into
cwde
jl
dec
lea
sbb
lods
jecxz
out
add
add
jns
loopne
xor
mov
cmp
cdq
sti
cdq
mov
push
stc
es
add
inc
pop
inc
mov
rcr
call
(bad)
repz
cli
or
shl
adc
mov
fsubr
mov
leave
enter
or
push
pop
mov
inc
stos
pusha
jle
xchg
sbb
mov
add
sbb
test
ins
je
adc
hlt
cwde
out
adc
xor
call
es
push
clc
mov
dec
jne
jmp
dec
sbb
movs
loopne
inc
ja
mov
ficomp
push
xchg
lds
(bad)
sti
aad
rcr
out
sbb
ret
xchg
or
jae
cs
ins
sbb
mov
jl
loope
les
sub
lods
cld
adc
pushf
mov
loop
push
jno
and
stos
mov
jmp
cmp
sbb
jmp
fcom
inc
les
fld
xchg
inc
mov
je
sbb
retf
inc
and
cmp
hlt
call
icebp
or
in
jge
aad
test
repz
jmp
inc
mov
push
add
ret
dec
jle
fidiv
or
and
mov
arpl
inc
xchg
dec
test
xchg
stc
ins
aam
add
scas
sbb
call
add
mov
ss
test
aad
push
call
mov
adc
and
dec
inc
pop
pop
pop
hlt
in
sbb
or
cmp
pop
cmp
push
jmp
ficom
mov
shl
jecxz
sbb
pushf
scas
shl
sbb
imul
inc
pop
or
imul
aas
mov
dec
mov
in
jo
int
into
int3
mov
imul
je
mov
dec
xchg
jle
dec
dec
mov
(bad)
jae
dec
jg
retf
(bad)
and
pop
jle
ror
out
hlt
or
cmp
jl
jae
push
pop
es
pop
pop
test
lahf
jns
sub
loop
adc
hlt
lahf
dec
movs
push
push
mov
push
leave
imul
pop
stc
iret
cmps
cmp
xchg
add
jp
xchg
sbb
adc
xlat
shr
or
jno
outs
mov
inc
or
dec
in
pop
xor
push
xchg
retf
inc
dec
mov
das
inc
repz
loopne
mov
dec
mov
and
in
stos
test
(bad)
in
ret
cs
nop
outs
mov
dec
pop
mov
dec
jp
mov
xchg
stc
ins
stc
mov
mov
jbe
push
fnstenv
and
sbb
pop
inc
les
(bad)
ins
retf
sbb
jae
call
outs
loop
pop
cmps
mov
clc
in
(bad)
adc
cmp
push
js
xchg
inc
mov
icebp
add
retf
push
test
or
mov
sub
ret
(bad)
scas
pop
sbb
fnstsw
cmps
jl
je
retf
push
fmul
fcom
sbb
adc
sahf
and
movs
jp
cmp
fsub
lahf
and
mov
xchg
sbb
push
jg
adc
imul
outs
stc
jb
and
mov
push
stos
addr16
leave
sbb
xchg
fsubr
mov
gs
jb
test
xchg
xchg
jae
leave
cmp
stos
mov
cmp
push
mov
call
mov
mov
xchg
dec
push
mov
adc
mov
stos
inc
sbb
movs
adc
or
iret
jb
int3
mov
inc
jmp
cmc
inc
and
ins
leave
data16
lahf
sub
xor
sbb
cld
mov
push
inc
cli
or
push
les
ror
jae
add
rcr
push
pop
stos
jp
imul
jno
xor
adc
sub
jle
cmp
retf
pop
into
pop
gs
mov
pop
mov
pop
add
sbb
movs
repz
mov
popa
les
add
movs
jae
adc
std
ds
xchg
ret
push
xor
xchg
fstp
rcl
aaa
sti
push
jb
add
xor
mov
enter
pop
mov
xchg
mov
(bad)
bound
mov
or
mov
(bad)
jb
out
stc
mov
push
mov
xor
rcl
pop
popf
dec
xor
dec
push
pop
ds
vphsubsw
sub
cli
sub
adc
mov
aam
es
inc
add
in
push
nop
cmp
clc
dec
xor
push
stos
sbb
or
dec
push
mov
in
(bad)
xor
add
mov
xchg
pop
cmp
test
leave
retf
push
or
dec
idiv
fsub
add
sbb
adc
fdiv
stos
arpl
out
and
inc
pop
and
imul
and
repnz
mov
adc
ret
pop
dec
cmp
ins
push
mov
xchg
jne
add
stos
jge
adc
(bad)
jae
push
xlat
add
and
xor
inc
repnz
leave
push
xchg
cmp
(bad)
das
lahf
xchg
pop
mov
(bad)
adc
fidiv
and
loope
adc
adc
sub
cld
imul
inc
retf
push
push
sbb
push
loopne
xlat
mov
cmp
jmp
and
fstp
sub
pop
pusha
fidiv
popf
add
pop
jbe
and
xor
sbb
les
push
outs
sub
aam
sub
mov
mov
mov
mov
nop
pop
pop
inc
mov
retf
fwait
push
pop
ror
movs
arpl
inc
cld
push
out
or
aas
push
scas
xchg
xchg
repnz
stc
dec
inc
inc
jmp
jle
mov
sub
jle
adc
aad
scas
es
add
push
(bad)
popf
sbb
xor
push
imul
jb
inc
jno
rcl
fistp
rep
sbb
or
lea
leave
sbb
inc
and
sbb
jae
pop
in
xchg
addr16
popa
jbe
scas
loopne
inc
mov
sbb
add
sub
aam
mov
stc
jg
mov
loopne
xchg
stc
jo
arpl
cmp
xchg
inc
sub
jns
stos
loope
mov
inc
iret
push
dec
sub
add
push
sbb
add
aad
sub
das
or
cld
and
mov
(bad)
inc
mov
fdivr
in
cmp
shl
hlt
call
xchg
(bad)
cdq
(bad)
jno
sub
dec
inc
(bad)
mov
or
arpl
push
repnz
push
xchg
inc
dec
dec
les
inc
dec
inc
es
mov
jmp
arpl
xor
cli
jns
das
xlat
sub
stos
icebp
jne
mov
jl
stc
push
and
hlt
xor
test
xchg
dec
mov
push
adc
aad
fdiv
dec
jae
add
xchg
jnp
imul
cdq
std
mov
sbb
stos
ss
push
imul
daa
push
clc
sbb
movs
jne
inc
lods
pop
mov
aas
xor
fild
neg
loopne
mov
sti
call
out
ret
fs
add
pop
add
mov
cmp
jae
out
inc
(bad)
xchg
sub
push
push
jp
sbb
lea
add
xchg
adc
jmp
sti
inc
mul
jg
xchg
clc
cs
cmps
scas
lods
sbb
js
fstp
rcl
in
xchg
cmp
jmp
ins
mov
jmp
lods
mov
aad
scas
std
jbe
fwait
inc
mov
and
mov
cmp
out
sbb
jns
push
retf
scas
movs
std
add
cmc
cmp
xor
push
dec
mov
xor
out
dec
dec
fst
jne
push
out
add
ds
call
loopne
out
ret
std
test
fimul
in
dec
outs
mov
lods
fwait
ins
push
stc
in
xchg
cld
mov
fdiv
jmp
push
or
jmp
jmp
js
sbb
xchg
(bad)
pop
mov
popf
adc
sub
fs
fs
(bad)
lds
movs
add
aad
pop
fild
outs
gs
xchg
and
sub
inc
jns
cmc
test
push
mov
sub
pusha
mov
adc
or
out
jae
jmp
sbb
mov
call
ror
mov
les
outs
mov
mov
mov
mov
call
call
and
sti
cmps
sbb
fsub
sub
adc
and
in
cmp
cwde
sbb
fidiv
pop
mov
inc
jecxz
sub
mov
jp
fwait
cld
xchg
inc
dec
mov
int3
mov
in
inc
mov
jle
(bad)
cdq
or
hlt
pop
cs
inc
jae
movs
movs
adc
jp
inc
cwde
dec
push
fsubr
dec
push
enter
pop
mov
adc
and
into
nop
dec
retf
xchg
scas
hlt
xchg
dec
gs
cmps
pop
dec
in
retf
aad
mov
lea
pop
sub
call
xor
hlt
pushf
sbb
mov
dec
in
subps
dec
lea
pop
stos
push
mov
out
in
call
push
mov
sbb
call
jae
xchg
int
or
enter
add
mov
les
loop
jnp
loopne
push
xor
into
inc
fwait
ror
pop
pop
add
(bad)
sub
loope
ins
daa
inc
or
into
call
mov
lods
shl
test
daa
add
inc
(bad)
sti
jecxz
push
cmp
leave
inc
inc
add
jae
or
jb
mov
jne
imul
cld
push
and
mov
xchg
dec
add
cmp
xchg
inc
rcr
or
inc
out
push
in
fdiv
repnz
ret
stos
fdiv
adc
pushf
and
scas
dec
pop
add
je
inc
mov
push
clc
gs
push
test
add
nop
dec
popa
int
mov
sbb
clc
and
scas
add
inc
leave
outs
xchg
loop
out
rol
in
loopne
pop
xor
outs
xchg
icebp
jne
xchg
mov
xor
lea
sbb
mov
dec
sub
cmps
sub
cli
inc
sar
leave
sub
enter
nop
out
sub
es
into
test
nop
test
inc
fidiv
mov
jb
sbb
sub
adc
mov
(bad)
cmp
lock
mov
push
mov
add
dec
jo
push
(bad)
push
scas
enter
push
call
add
or
out
sub
mov
pop
push
retf
pop
cwde
addr16
call
mov
mov
sbb
push
or
or
push
and
out
ds
pop
inc
out
mov
out
fcom
fisubr
(bad)
hlt
mov
xchg
outs
imul
aaa
push
fild
mov
add
out
jg
test
nop
xor
jns
push
adc
push
xchg
or
daa
ss
mov
test
add
sbb
adc
aaa
dec
fidivr
cmps
retf
cmp
mov
dec
retf
mov
push
mov
sbb
pop
retf
cmps
in
sbb
clc
mov
ins
sub
push
rcl
int
jge
xchg
jne
xor
stc
cmp
cmp
adc
jae
cmps
xor
ret
lods
(bad)
pop
xor
inc
pop
leave
add
outs
xchg
outs
xchg
pusha
sub
js
outs
je
push
cmp
jl
test
(bad)
push
stc
cmp
call
iret
xor
jmp
lods
ror
push
sbb
cmp
inc
pop
cmp
std
or
imul
int
(bad)
dec
call
ret
fsub
popa
pop
test
scas
in
jecxz
fild
xor
mov
jne
cmp
jl
mov
fstp
xchg
pop
call
inc
sbb
mov
sub
and
pop
push
imul
in
jle
dec
lods
push
adc
or
pop
es
mov
inc
xor
dec
mov
sbb
push
arpl
out
add
mov
mov
rcl
int
inc
pop
push
sbb
lds
and
push
popa
in
daa
jae
lods
xchg
addr16
sbb
repz
dec
mov
stos
xor
shl
and
jecxz
dec
add
xor
mov
adc
or
sahf
aam
inc
sbb
and
in
int3
sub
mov
xchg
mov
xor
clc
or
push
mov
and
pop
jae
enter
sub
inc
popa
ds
movs
dec
xchg
loopne
sub
mov
iret
pop
pop
not
stos
call
pop
and
call
iret
sbb
or
sbb
sar
add
test
and
mov
mov
outs
mov
mov
mov
hlt
repz
adc
jp
mov
ret
js
xchg
int3
fwait
mov
xchg
retf
jae
xchg
xchg
leave
adc
inc
sub
sub
stos
and
stos
push
pop
dec
sub
xchg
cld
cmp
inc
rep
and
push
or
sub
mov
stos
in
pop
rol
fimul
mov
ficomp
pop
sbb
movs
repz
mov
adc
inc
adc
cwde
test
std
enter
sahf
jno
pop
mov
into
into
pop
les
jl
lock
push
inc
fcom
(bad)
aas
pushf
jg
shl
lahf
inc
int
adc
push
shl
and
outs
mov
movs
mov
mov
inc
sar
jg
push
fist
inc
sbb
lds
pop
mov
arpl
nop
pop
pop
cmp
aad
mov
mov
ret
sbb
into
add
imul
xchg
pop
repz
popf
sbb
aam
sub
int3
xchg
ss
(bad)
jmp
xor
xchg
pop
inc
add
jle
sbb
jae
mov
mov
loopne
jbe
mov
and
or
aas
adc
or
outs
icebp
push
(bad)
cld
xor
sbb
mov
call
jb
adc
push
loope
ffreep
nop
adc
mov
out
bound
mov
or
call
sbb
cmp
cmc
mov
cdq
dec
pop
sbb
push
sbb
(bad)
call
mov
out
mov
ret
sbb
out
dec
xchg
fistp
fmul
mov
fadd
inc
cdq
arpl
pop
mov
xchg
imul
fdiv
or
mov
leave
(bad)
inc
adc
les
xor
and
mov
mov
mov
imul
stos
aad
mov
das
adc
pop
fcom
pushf
or
and
cs
mov
inc
push
mov
rol
push
or
push
xchg
test
mov
jmp
stc
mov
js
aam
test
rcr
sbb
push
xchg
clc
ss
xor
and
ficom
sub
das
lea
movs
cmc
imul
dec
push
or
cmps
pusha
movs
out
xor
lods
dec
mov
icebp
cmps
and
out
lds
call
mov
in
xor
adc
push
stc
loope
add
mov
jb
(bad)
cmp
dec
mov
add
inc
shr
leave
std
xchg
mov
ja
or
fiadd
cdq
imul
sbb
and
jo
cld
fs
es
dec
stos
cmp
xchg
mov
fcom
scas
inc
pop
add
mov
jg
mov
pop
stos
lds
cli
push
push
iret
js
jno
dec
loopne
lea
js
jg
pushf
bound
sti
adc
aad
out
mov
xor
popf
sar
inc
js
mov
and
aaa
add
add
not
or
das
fld
adc
jno
jg
push
scas
fist
aad
lds
mov
mov
popa
xchg
rcr
out
or
jae
cmps
ja
ins
cli
sub
and
xchg
repz
loop
nop
mov
push
mov
scas
out
mov
(bad)
jns
pop
cld
popa
es
xchg
sub
pop
push
(bad)
xchg
call
mov
or
adc
(bad)
jnp
lahf
cs
cmc
test
sub
das
mov
push
stos
shr
mov
daa
(bad)
cmps
sbb
dec
xchg
mov
jae
das
sahf
je
sub
jo
dec
xchg
jae
ret
pop
push
inc
jl
jmp
fbld
int
dec
jp
fnstenv
into
sar
or
jae
loopne
mov
sbb
cmp
xor
adc
sbb
or
aas
popf
scas
mov
cdq
jge
or
mov
xchg
call
pop
loop
retf
mov
mov
or
mov
push
lahf
dec
inc
xor
addr16
cwde
aad
xchg
stc
xchg
ja
mov
in
enter
retf
outs
mov
cli
js
(bad)
fdiv
mov
mov
les
pushf
adc
jmp
or
inc
jae
add
push
sbb
pop
(bad)
arpl
add
push
leave
(bad)
jp
cmps
imul
repz
ins
or
xchg
out
and
test
jmp
dec
mov
sbb
dec
push
(bad)
push
je
inc
fs
cdq
mov
xchg
out
stos
aam
mov
cmps
scas
adc
mov
jmp
mov
mov
outs
mov
xlat
mov
repz
and
lods
mov
sub
cwde
rol
mov
jno
adc
(bad)
out
hlt
(bad)
call
inc
sbb
repz
xor
dec
shl
sub
js
lds
push
jp
pusha
popf
cmp
and
retf
addr16
adc
add
and
mov
rcl
int
stc
mov
aad
sub
scas
push
jno
jb
cdq
cmp
rol
or
(bad)
aaa
fnstenv
neg
cmp
adc
adc
inc
and
ret
scas
ss
pop
mov
mov
in
fcom
push
mov
in
inc
cvtps2pi
fist
lock
pusha
aad
shl
mov
and
mov
xchg
inc
loopne
adc
adc
cs
js
pop
mov
int
push
jmp
sti
mov
je
pop
pop
lea
mov
add
fs
gs
jmp
cmc
popa
outs
in
xchg
cli
int3
popa
test
ja
retf
push
mov
aaa
fwait
mov
popa
mov
pop
sbb
jns
enter
mov
cwde
arpl
dec
in
mov
repz
adc
jle
cmps
mov
mov
and
mov
int3
mov
xchg
jge
scas
xlat
test
mov
xchg
mov
push
jo
call
sbb
aaa
and
(bad)
popf
dec
sbb
in
popa
sub
pop
mov
push
ins
dec
imul
bound
jnp
adc
jbe
sbb
dec
pushf
call
mov
inc
cmp
in
inc
inc
in
fsub
mov
inc
dec
mov
xor
sub
mov
je
adc
ror
cmp
cmps
std
popf
or
push
xlat
cmp
mov
ror
arpl
arpl
out
stos
jp
jae
adc
or
adc
in
adc
jb
pop
add
pusha
jo
mov
sub
addr16
scas
mov
and
aam
sub
stos
pop
pop
fist
lahf
lds
jnp
push
dec
mov
jbe
es
cmp
inc
add
and
je
fstp
jae
dec
mov
cmc
sbb
sbb
(bad)
jnp
mov
mov
sub
or
xchg
retf
adc
inc
xchg
dec
jp
mov
iret
dec
mov
je
xchg
out
je
xchg
nop
repnz
ror
push
ja
dec
or
xor
fisttp
addr16
inc
cmps
lods
sub
test
je
mov
jns
pop
ins
in
les
dec
mov
retf
int3
jg
fstp
mov
ja
fst
lahf
pop
mov
jno
movs
jns
enter
pop
xor
cmp
pushf
cld
push
push
xchg
xor
xchg
stc
inc
sub
js
add
aaa
retf
xchg
mov
push
and
jnp
cld
test
jmp
fidiv
sbb
pop
dec
std
imul
cmp
gs
dec
in
cdq
fst
inc
sbb
inc
hlt
retf
adc
leave
outs
sar
jne
es
xchg
and
pushf
ds
mov
fs
outs
dec
sub
sbb
pushf
loop
mov
inc
xchg
inc
adc
or
sub
jns
add
sub
sbb
xchg
je
or
xchg
cld
js
not
pop
test
mov
aam
jo
mov
shl
mov
fstp
xor
sbb
ins
lds
mov
mov
cmp
jnp
sahf
xchg
mov
pop
inc
jne
dec
or
add
(bad)
cmc
mov
repz
fstp
jl
add
and
lods
or
jg
inc
push
test
add
pop
lea
xor
adc
cli
retf
fidivr
pushf
jo
fsubr
push
(bad)
cmps
jmp
jno
and
jmp
inc
or
cmp
push
adc
sbb
(bad)
inc
sub
cwde
sub
loopne
scas
ror
cli
sub
adc
mov
xor
inc
pop
sbb
test
pushf
fisttp
dec
xchg
mov
cmp
sub
lods
jecxz
leave
or
fwait
enter
cmp
jge
ins
add
aaa
mov
xchg
push
dec
pop
dec
test
ins
cli
stos
mov
xor
jae
in
in
pop
(bad)
in
xchg
jno
inc
adc
jg
shl
jno
xor
(bad)
call
add
mov
sbb
jae
xor
mov
data16
xchg
or
cld
sub
stos
sub
jae
and
ins
arpl
add
mov
mov
cli
mov
xchg
iret
in
and
neg
hlt
fisttp
xchg
pushf
or
push
mov
cmp
nop
sub
imul
xlat
pop
je
and
mov
mov
or
mov
pop
xchg
mov
cmp
out
adc
out
sahf
push
xor
inc
fcom
and
pop
mov
dec
and
shl
leave
inc
loopne
repz
inc
cmp
ss
fnsave
leave
in
mov
data16
adc
addr16
mov
xchg
jae
or
xchg
not
test
and
or
repz
out
in
lods
sub
cmp
lods
lods
mov
jae
sbb
shr
outs
loopne
outs
add
aaa
loop
dec
sahf
fsubr
jae
push
xchg
push
adc
sub
inc
sub
xchg
stc
inc
jmp
adc
xchg
imul
mov
addr16
pusha
dec
mov
out
mov
push
mov
out
(bad)
call
mov
arpl
fs
stc
mov
pop
jne
jae
aad
mov
lds
jl
dec
and
push
or
push
cli
mov
test
ret
adc
pop
test
mov
scas
sbb
inc
scas
mov
adc
jg
int
inc
loop
cmp
xor
or
cmps
xchg
jbe
jne
sub
bnd
cmp
js
repnz
cs
ds
ins
dec
xor
not
add
leave
stc
jge
sbb
and
(bad)
adc
mov
cmc
xchg
jmp
jno
retf
jno
popf
jae
jg
je
or
leave
aad
fwait
xor
mov
in
inc
mov
aas
imul
push
and
dec
cmc
push
dec
or
sbb
jnp
jmp
call
inc
add
pop
jae
fmul
and
sbb
sbb
add
mov
inc
or
pop
pop
sub
jp
cmp
mov
cs
std
xchg
out
repnz
jae
mov
push
push
hlt
popa
push
cmp
sti
mov
sbb
cmps
jge
sub
js
frstpm(287
or
hlt
pop
sbb
or
pop
jne
jmp
dec
mov
out
jp
in
push
scas
rol
sbb
mov
jl
mov
retf
mov
js
jmp
dec
add
cmp
mov
mov
sub
enter
inc
sbb
mov
dec
les
adc
rcl
cmp
dec
adc
xchg
sbb
fwait
xor
sbb
push
scas
ins
sbb
xor
hlt
cli
pusha
adc
jmp
jae
pop
out
(bad)
mov
inc
mov
or
push
mov
je
dec
sbb
add
push
int
mov
fcmovnbe
mov
sbb
xchg
(bad)
mov
std
retf
lods
out
cmps
inc
or
jae
jmp
call
mov
test
xchg
mov
pop
mov
test
xor
push
nop
jp
jo
ret
dec
sbb
pusha
in
sti
jne
sbb
jmp
mov
mov
xchg
dec
int3
pop
out
sub
int3
mov
jae
outs
test
test
(bad)
aad
dec
adc
push
int3
dec
inc
mov
pusha
fs
enter
(bad)
aad
les
ds
sar
pop
pop
leave
or
mov
push
inc
ficom
sbb
or
xchg
mov
popf
icebp
push
ficom
xor
mov
xchg
cmp
inc
pushf
cwde
mov
pusha
xlat
xchg
jmp
jge
test
(bad)
lahf
jnp
jmp
mov
int
daa
lea
sbb
loopne
ds
lds
push
xor
ins
jae
mov
pop
mov
adc
ja
aad
pop
jl
cmp
int
fptan
sub
jmp
inc
push
add
jg
jmp
sbb
jg
xlat
jge
call
das
sbb
jle
cs
xor
mov
ret
adc
add
into
xchg
sbb
sub
mov
add
and
inc
mov
gs
rcl
push
leave
stos
test
not
ja
mov
cmp
mov
xchg
fld
jb
fstp
pop
xchg
and
movs
jp
xor
pop
jae
retf
int
dec
jge
imul
pop
ss
fwait
lock
and
mov
sar
and
add
les
lods
into
popa
hlt
popa
jmp
push
mov
adc
ins
jne
add
aas
pushf
call
ficomp
ror
mov
mov
mov
adc
(bad)
sbb
add
mov
xor
aaa
xor
dec
cmps
adc
sahf
sbb
or
retf
icebp
cld
jnp
cwde
aad
mov
mov
movsx
adc
pushf
cmp
mov
jb
jmp
sub
xchg
out
adc
lods
inc
pusha
mov
mov
test
sbb
fwait
mov
cwde
pop
add
mov
jl
rol
mov
mov
sbb
mov
and
cld
stos
inc
fbstp
sub
sbb
jl
outs
push
and
mov
add
inc
cwde
ja
jb
aaa
inc
dec
outs
repz
dec
add
wrmsr
adc
jae
xlat
and
lea
sbb
pop
push
and
xor
mov
inc
add
addr16
xchg
mov
leave
cmp
jae
call
ret
mov
movs
and
mov
add
jne
mov
aad
add
lea
jno
test
inc
retf
jae
push
jmp
js
dec
jmp
into
(bad)
or
pop
and
mov
in
add
mov
test
inc
add
add
inc
jo
sbb
and
es
jae
pop
dec
pop
dec
mov
cmp
mov
fs
adc
xchg
add
pop
addr16
sbb
pop
mov
int
push
xor
push
add
or
jno
xor
jae
in
xor
xchg
call
pop
dec
mov
(bad)
sbb
icebp
movs
retf
in
or
test
pop
push
ds
packuswb
retf
xor
sub
mov
bound
jp
loope
xchg
and
ret
jae
sbb
ja
clc
cmc
bound
mov
aas
mov
jmp
fst
inc
dec
mov
jo
and
sbb
and
jae
and
cld
mov
cmp
call
push
aam
push
and
hlt
je
ja
jns
add
iret
shr
nop
test
lods
inc
or
jae
push
daa
xchg
pop
push
scas
mov
movs
(bad)
mov
call
lods
sbb
and
shr
stc
aaa
pop
call
mov
mov
(bad)
pop
push
mov
jmp
mov
bound
mul
jnp
mov
loopne
jmp
call
pop
(bad)
das
sub
mov
cmp
jbe
out
sub
push
clc
mov
and
pop
mov
xor
pop
dec
adc
cmps
mov
mov
sub
scas
mov
enter
mov
into
mov
movs
sbb
dec
pushf
dec
and
pop
push
xchg
inc
mov
fwait
add
ret
sub
in
(bad)
in
mov
arpl
movs
aas
retf
loop
scas
pop
jl
sbb
retf
push
popa
stc
push
mov
pop
push
and
(bad)
rol
mov
dec
movs
mov
jnp
int
dec
hlt
cs
and
sbb
leave
sub
out
out
je
mov
retf
pushf
push
dec
lea
xchg
in
sti
ins
jne
das
ds
imul
add
ins
sbb
dec
xlat
xchg
adc
movs
test
sub
loope
mov
jnp
inc
sbb
and
loopne
sbb
sbb
stos
cmp
in
fsubr
int3
xchg
sub
lods
xor
les
hlt
stc
xrelease
je
push
fstp
jae
mov
ins
mov
push
out
outs
dec
xor
and
pop
dec
push
sbb
out
call
rcr
mov
pop
sbb
jae
retf
sbb
int
mov
mov
fdiv
aad
sbb
sti
leave
xchg
nop
xchg
xchg
sbb
aam
ret
fisttp
pushf
enter
mov
xor
inc
inc
xchg
stos
xchg
jmp
mov
movs
js
je
dec
adc
and
pop
out
xchg
cmp
inc
mov
mov
fdivr
pop
and
xchg
xchg
(bad)
fcmove
rol
ins
or
loope
scas
jle
in
hlt
push
mov
or
push
ret
adc
mov
push
mov
ret
mov
adc
jmp
push
(bad)
hlt
(bad)
stc
sbb
idiv
ret
sub
mov
sbb
jb
mov
retf
pop
jae
aam
push
jb
movs
test
fst
sub
lea
dec
arpl
mov
xlat
xchg
cmp
and
sub
clc
adc
push
scas
xlat
packsswb
or
fs
les
xor
out
hlt
sbb
dec
aaa
fdivr
cmp
loop
cwde
leave
xchg
in
repz
ud2
ret
mov
xchg
add
xchg
dec
aaa
out
(bad)
push
aad
je
iret
or
(bad)
out
xchg
dec
lock
in
ror
jae
arpl
dec
fidiv
pop
je
outs
jl
movs
test
pop
adc
dec
adc
cmp
test
idiv
mov
sbb
xchg
aam
fisubr
sub
test
mov
or
inc
pop
ficom
xor
movzx
xchg
test
mov
rol
out
xchg
xor
mov
fwait
(bad)
fbstp
(bad)
gs
and
sbb
jl
pop
mov
into
jo
sub
call
rcr
xor
int
out
movs
js
es
jg
mov
dec
sbb
sub
inc
jp
shl
add
or
pop
int
mov
jle
sub
or
cli
scas
pop
xchg
leave
call
ja
fisttp
setne
pop
mov
mov
and
xchg
or
sub
lahf
js
out
jae
movs
cmps
icebp
mov
adc
sahf
mov
adc
scas
jb
mov
pcmpeqd
test
stos
add
mov
adc
lods
sub
adc
imul
out
out
inc
fucomi
sbb
sub
repz
fsub
inc
pop
fstp
and
mov
das
push
pop
hlt
jmp
jmp
enter
xlat
push
jg
jnp
les
inc
mov
cmp
bound
pop
jl
inc
push
retf
jne
in
push
repz
mov
pop
jno
leave
mov
pop
popf
add
mov
ins
ja
adc
(bad)
sub
pop
push
scas
xlat
mov
pusha
sub
dec
hlt
xchg
int3
xchg
aad
mov
add
inc
cld
and
mov
sub
and
sub
adc
xlat
scas
dec
stos
xchg
inc
js
stos
mov
in
dec
je
loop
xchg
out
xor
inc
mov
inc
mov
mov
mov
cld
jg
or
rol
xchg
or
pop
push
je
push
cwde
sub
repnz
imul
(bad)
jns
pop
xchg
je
jmp
lock
cmps
sbb
mov
add
mov
mov
cmps
fist
xor
retf
xchg
cmp
xor
dec
leave
mov
ins
push
mov
push
in
inc
add
loopne
aad
xlat
xchg
les
lods
and
(bad)
push
push
pop
push
adc
mov
popf
mov
push
sub
xor
mov
sbb
jl
lahf
add
mov
dec
mov
cmc
xchg
dec
cs
not
xchg
das
mov
inc
jl
inc
jbe
idiv
je
rcr
xor
movs
gs
cmp
jae
xchg
cmc
test
mov
mov
hlt
sub
mov
stos
adc
inc
add
jl
pop
fidiv
mov
mov
xor
mov
mov
xor
cmps
adc
call
aas
scas
mov
aaa
cli
call
shl
loope
xchg
jmp
test
retf
inc
(bad)
enter
aad
in
pop
sbb
stos
adc
(bad)
fisttp
scas
or
xlat
xor
xchg
or
das
xor
or
inc
mov
call
(bad)
movs
sub
jae
mov
(bad)
fidiv
or
push
sbb
arpl
rcr
mov
ins
mov
stos
sbb
and
xchg
pushf
push
out
loope
add
inc
sub
das
adc
stos
retf
mov
repz
es
sbb
mov
repnz
xchg
leave
jns
ret
scas
pop
xchg
jno
cmp
jae
jmp
dec
sbb
les
inc
mov
mov
push
mov
call
pushf
sbb
test
nop
jmp
test
xchg
cmp
jb
sbb
jo
lea
jno
push
push
(bad)
xchg
push
fstp
cmp
lock
icebp
xor
adc
mov
ja
pop
add
pop
(bad)
cmps
xchg
enter
push
stos
shl
repnz
cmp
test
push
leave
mov
mul
push
and
pushf
sbb
inc
ret
jne
enter
adc
ds
cmc
je
imul
les
pop
imul
lods
fcomp
cs
or
aaa
inc
jae
cmp
pop
nop
fcmovu
sub
subps
xor
add
mov
push
jbe
mov
cmc
out
mov
and
adc
cdq
mov
inc
stos
jle
add
sbb
sub
cmc
ja
sbb
push
sbb
rcr
lods
jo
mov
pushf
sar
sbb
xchg
mov
adc
imul
cmp
es
mov
or
cmp
add
inc
daa
jmp
sbb
push
aam
add
dec
xor
jle
leave
mov
and
stos
dec
arpl
mov
xchg
jmp
and
sbb
jae
dec
mov
sub
pop
pop
pusha
or
cmps
jnp
push
push
loope
xor
xchg
mov
jae
sbb
out
sbb
sbb
pop
push
cmp
add
sti
and
aaa
movs
push
fst
pop
test
je
fisub
xor
and
push
add
pop
add
gs
imul
popa
jae
pop
cmp
sub
push
out
and
mov
bound
jg
mov
dec
test
sbb
(bad)
push
inc
inc
mov
and
outs
repnz
ja
sbb
sbb
mov
cmp
mov
sub
jmp
mov
rol
mov
test
pop
icebp
shl
sub
shl
cli
add
mov
add
sar
ins
add
sbb
ja
jp
sti
add
in
test
mov
dec
sbb
test
jae
sbb
lds
mov
push
iret
or
pusha
xchg
hlt
dec
pop
mov
adc
lods
xor
sub
sbb
and
rcr
jns
mov
xor
mov
add
jb
xor
popa
sbb
xor
xor
xlat
push
lea
aaa
mov
jbe
pusha
test
inc
lds
jmp
inc
xchg
sbb
inc
xchg
xor
adc
std
xor
out
loope
jecxz
mov
xor
mov
push
xchg
ret
mov
and
sti
sub
jae
test
hlt
mov
and
stc
push
push
pop
cmc
dec
xor
enter
xchg
lea
push
sub
repnz
aad
xchg
rol
xchg
out
or
scas
test
cmps
pop
pop
fwait
adc
add
ins
mov
loope
inc
xor
xlat
mov
xchg
fisub
imul
cmp
int
mov
ret
outs
or
stc
mov
scas
stos
jp
xchg
sbb
lods
cmps
mov
sub
jae
xor
aas
push
jae
retf
test
cmp
movs
imul
pop
dec
js
cmp
mov
push
dec
mov
(bad)
(bad)
aas
cmps
push
into
push
scas
sub
mov
pop
jle
int
enter
(bad)
out
adc
cmp
je
sbb
pop
add
ds
push
and
je
jp
add
inc
pushf
loope
popf
xchg
pop
das
out
dec
mov
mov
shl
ror
jno
cwde
adc
movs
call
add
adc
fild
shl
inc
xchg
ret
call
aas
inc
mov
or
adc
fnsave
fild
cdq
pop
movs
shl
mov
adc
test
fisubr
loopne
fist
mov
aad
jae
xchg
xchg
rcr
xchg
loop
mov
sub
pop
lods
or
adc
dec
mov
pop
(bad)
int
cmp
and
inc
jmp
jbe
xor
lds
cmp
mov
xor
pop
hlt
sti
push
inc
clc
jp
cmp
lea
mov
add
adc
jp
lods
cdq
popa
inc
dec
mov
jae
ins
bound
adc
add
cld
dec
clc
mov
xchg
out
sbb
mov
xchg
sub
sbb
pop
pop
jp
cld
icebp
push
mov
mov
dec
jge
pop
rcl
les
das
and
dec
fimul
repz
and
sbb
jns
xchg
fs
add
mov
jo
aam
add
in
xor
mov
mov
jae
pop
daa
hlt
fcomp
push
arpl
sub
call
sub
push
stos
scas
dec
sbb
test
repz
add
mov
loop
je
mov
add
jl
cmps
icebp
je
(bad)
stos
sub
mov
dec
shl
loop
scas
ret
mov
mov
test
push
mov
lods
in
adc
adc
xor
mov
and
push
out
je
test
xchg
adc
test
cmps
dec
out
push
xor
push
out
test
pusha
aaa
push
repz
inc
mov
lahf
sbb
fs
sbb
mov
jo
nop
ror
jb
gs
xor
pop
in
sbb
je
test
fs
mov
push
lods
aad
pop
pop
stos
xchg
sub
iret
rcr
sar
inc
cmp
mov
and
cmp
mov
jae
adc
pop
push
adc
bound
enter
loop
aad
fmul
outs
in
mov
inc
stos
and
xchg
pusha
call
adc
or
test
dec
or
or
pop
scas
mov
jecxz
je
lock
xlat
adc
iret
xchg
dec
adc
or
jo
adc
ins
inc
in
fadd
cmp
xor
mov
mov
dec
and
push
push
inc
mov
mov
inc
adc
(bad)
loope
fsub
jae
push
imul
lods
stos
push
jne
or
jle
and
mov
mov
cli
jle
xor
retf
adc
sar
mov
xor
repz
ja
add
lods
out
jp
repz
fisub
sbb
add
sub
(bad)
shr
aas
imul
shl
xchg
je
sub
jbe
addr16
inc
mov
add
clc
cli
mov
mov
mov
mov
cmp
rcr
out
pop
stc
icebp
cmc
(bad)
mov
fstp
dec
xchg
pop
std
fsubr
sbb
sbb
arpl
lds
mov
or
daa
cmp
cld
sub
xchg
and
sub
rcr
jbe
fwait
test
loop
and
mov
dec
mov
xor
aaa
xor
dec
sbb
mov
xor
adc
and
clc
fsubr
in
adc
dec
fimul
xor
mov
sub
ret
sbb
xchg
pop
test
mov
in
xchg
ja
fidiv
sbb
sub
sbb
sbb
cdq
mov
mov
pop
out
loopne
(bad)
jl
(bad)
inc
mov
xchg
mov
lods
jae
int3
mov
push
into
xchg
xchg
daa
jb
imul
jae
pop
imul
pusha
out
xchg
sti
ins
sub
ffreep
and
mov
or
xchg
xor
dec
fcomp
sbb
jae
xchg
pop
jecxz
loop
(bad)
sbb
push
mov
das
cmp
lea
jb
dec
pop
lods
cmps
sbb
repnz
mov
pop
mov
push
sub
nop
xchg
rcr
and
inc
mov
jb
pop
cmp
xor
jle
mov
cld
les
fs
not
adc
cli
dec
push
test
push
mov
push
and
push
sbb
push
sbb
cwde
out
mov
sub
mov
xchg
fs
adc
ret
es
jecxz
imul
mov
add
cs
mov
jbe
arpl
mov
or
cmp
add
test
inc
adc
jae
jnp
xor
sbb
adc
pop
stc
mov
js
test
pop
push
push
xchg
aaa
out
outs
or
aas
cmp
adc
xchg
repnz
jl
xor
and
sti
ins
sbb
sbb
iret
mov
cmps
mov
fdiv
cmp
leave
xchg
add
out
fwait
xchg
outs
adc
mov
adc
lds
xor
mov
cmp
out
push
mov
xor
adc
adc
mov
sbb
push
sub
out
out
mov
mov
add
daa
jbe
and
scas
inc
cmc
jge
rcr
mov
adc
(bad)
cmps
hlt
into
adc
mov
xchg
aad
jae
mov
cmp
jmp
icebp
xchg
(bad)
push
scas
mov
or
mov
pop
pop
(bad)
xchg
jo
sbb
stos
jae
add
fdivr
and
cdq
sbb
bound
jo
jecxz
imul
stos
clc
stos
dec
mov
adc
lods
xchg
aad
mov
push
test
lahf
xchg
pop
push
or
je
mov
int3
push
lea
pop
xchg
pop
sbb
leave
loopne
xor
cs
sub
adc
sbb
std
dec
sub
mov
pop
test
fst
inc
scas
fcomp
mov
push
xchg
jns
or
pop
fcomp
mov
push
push
stos
popa
jb
sub
jmp
xchg
jb
xchg
scas
cmps
pop
ins
push
xchg
xor
das
sbb
retf
xchg
push
push
popf
gs
and
sbb
mov
js
mov
data16
movs
xchg
adc
mov
push
add
mov
mov
lds
push
push
lds
lahf
and
push
adc
mov
sbb
mov
int3
sub
pop
movs
lahf
clc
mov
ja
add
jl
nop
je
sbb
mov
xor
sub
in
jno
adc
push
add
push
cmps
test
dec
es
imul
out
pop
(bad)
and
loop
inc
(bad)
mov
xchg
xchg
cmp
fwait
and
push
jmp
pop
sub
push
ss
add
outs
and
ret
sbb
jbe
mov
dec
push
mov
out
je
cmp
repnz
outs
mov
xchg
sub
pop
addr16
fwait
stc
in
dec
pushf
sti
xor
dec
int3
sub
xor
dec
repz
outs
pop
scas
outs
cmps
repnz
rcr
iret
pop
dec
sub
dec
hlt
and
add
enter
test
popa
and
je
pop
mov
pop
pop
pop
adc
mov
cld
dec
arpl
cmp
aas
lods
push
js
mov
jae
xor
cmps
out
scas
jmp
cmp
aas
paddusw
clc
adc
or
iret
jl
push
cdq
mov
cmp
adc
ins
mul
das
aam
hlt
stos
movs
out
pop
add
mov
push
jge
inc
test
ins
jp
jno
mov
cld
adc
sbb
stc
ins
mov
push
(bad)
xchg
push
adc
and
xchg
pusha
sbb
xor
xor
pop
jmp
xchg
push
adc
jg
addr16
ss
sbb
or
push
mov
clc
mov
je
cmc
mov
xor
push
xor
rcl
(bad)
(bad)
je
jl
dec
adc
lods
in
sub
sub
nop
jmp
and
sbb
jecxz
pop
sub
xor
sbb
jae
bnd
fist
mov
or
jg
mov
imul
repz
movs
add
sub
xchg
or
mov
loope
jnp
je
dec
sbb
jnp
cwde
or
daa
jns
and
into
xchg
ja
cld
fs
mov
jo
sbb
cmp
inc
icebp
jb
(bad)
dec
mov
add
and
icebp
test
ret
xor
push
push
add
fdivr
mov
dec
add
scas
add
fldcw
ins
out
pop
repz
lods
shl
xor
xor
mov
mov
sbb
jae
aaa
sar
idiv
enter
sbb
arpl
pop
push
sbb
ror
mov
in
out
xchg
loopne
leave
mov
jg
jmp
xchg
loop
iret
push
sbb
pop
(bad)
xchg
or
stos
sub
sbb
stc
into
stos
stos
mov
adc
jg
mul
shl
movs
mov
imul
aas
dec
iret
and
xchg
das
xchg
add
inc
mov
push
mov
sbb
(bad)
loope
jo
dec
sbb
shl
jno
xor
pop
adc
mov
and
jae
inc
aas
mov
mov
lods
xchg
mov
fwait
dec
jns
jae
and
out
add
sbb
mov
ror
mov
sub
adc
lds
sub
push
fs
mov
(bad)
in
cmp
pushf
popf
jae
cmp
jle
sbb
mov
jns
mov
mov
les
out
xchg
pop
push
or
or
mov
loop
stos
cmps
push
inc
in
push
mov
popa
sbb
lods
mov
je
test
sub
xchg
push
adc
inc
mov
ja
jl
pushf
repz
sbb
pop
jb
and
add
inc
push
hlt
mov
aas
arpl
cmps
inc
xchg
push
je
mov
mov
(bad)
(bad)
(bad)
mov
pop
aaa
or
jno
ss
inc
int
int
addr16
aam
sub
jmp
loopne
push
je
in
in
stc
test
pop
test
ficom
in
mov
aad
enter
mov
lods
or
sbb
and
jecxz
les
je
stos
xchg
cmp
jmp
adc
test
jae
popa
inc
(bad)
popa
lods
sub
sub
inc
jge
(bad)
adc
adc
ss
adc
sti
ja
mov
js
jno
pop
mov
or
xlat
adc
in
arpl
cmp
sbb
ret
or
sbb
cmps
jnp
sub
shl
push
dec
call
sbb
test
mov
scas
in
mov
and
pushf
push
icebp
(bad)
js
jle
rcr
xchg
push
ins
push
mov
test
pop
scas
xor
adc
es
jge
lock
stc
xchg
sub
sub
xchg
mov
rcr
hlt
jmp
daa
ins
mov
mov
mov
movs
ja
cmp
dec
jbe
pop
aam
sbb
mov
xchg
test
jg
sbb
cmps
mov
adc
fs
inc
sti
and
mov
dec
pusha
int3
in
mov
inc
xchg
call
push
xchg
popa
jae
cli
dec
add
movs
aad
ins
cmps
cmp
mov
push
enter
movs
adc
jl
in
icebp
outs
test
sub
dec
xchg
inc
sub
mov
pop
cmps
shl
sbb
mov
mov
or
mov
jns
retf
test
cdq
jecxz
jmp
test
mov
sbb
bnd
add
cld
xchg
out
(bad)
jmp
sub
push
jg
repz
cli
mov
sub
int
push
scas
pusha
pop
mul
cmps
mov
int
jp
mov
sbb
aas
adc
mov
xor
into
sar
xchg
jg
xor
ds
sti
retf
xor
mov
dec
xchg
adc
cmc
(bad)
mul
pop
mov
sub
xor
lods
xchg
jb
jl
sbb
jo
lds
cmp
repz
pop
test
mov
mov
(bad)
cmps
or
xchg
fwait
movs
outs
xor
sub
jae
inc
dec
adc
fadd
adc
(bad)
fdivr
mov
mov
jmp
pop
test
pusha
sbb
jae
retf
adc
out
or
dec
add
mov
daa
mov
retf
mov
adc
adc
mov
adc
fidivr
leave
push
int3
mov
imul
add
fist
lods
aam
pop
dec
mov
out
into
call
cmps
jmp
stos
inc
idiv
and
jg
fisubr
ficom
mov
or
jo
stc
xchg
jle
out
sbb
sub
call
push
arpl
stos
rcl
cmps
aaa
push
jnp
jae
xchg
or
das
int3
cmp
mov
xchg
cmps
sbb
sbb
xor
add
icebp
jb
jne
jp
shl
mov
dec
push
cmc
dec
mov
sbb
lods
mov
pop
sti
cmp
loope
push
mov
or
inc
pop
or
pop
lods
mov
mul
push
adc
rol
mov
pop
xor
xor
and
inc
adc
(bad)
add
sti
lea
dec
shl
jae
cmp
or
mov
jno
xor
dec
(bad)
push
test
jg
xor
mov
fisubr
lock
push
test
ja
retf
adc
addr16
pusha
cld
scas
adc
(bad)
ror
mov
inc
mov
(bad)
jns
xor
imul
xchg
adc
es
jae
pop
cld
js
mov
sbb
add
or
mov
mov
cmc
xchg
(bad)
clc
fwait
les
dec
cld
xor
or
xchg
aaa
das
clc
jmp
or
pop
sub
mov
mov
arpl
xor
pop
les
pop
out
sub
inc
popf
test
fistp
push
sbb
mov
dec
adc
or
sbb
dec
mov
cmp
push
fsubp
repnz
mov
arpl
mov
shl
add
sbb
dec
imul
adc
sbb
xor
jns
jmp
iret
push
dec
loope
pushf
push
push
sar
add
adc
jns
xchg
pop
jnp
inc
sbb
xchg
fsubr
mov
push
xor
pusha
adc
inc
ror
xor
push
mov
add
pop
jmp
popa
ror
aaa
jle
rep
aad
js
call
xchg
mov
scas
sub
add
xchg
sub
push
popf
jns
push
dec
dec
mov
xchg
xor
dec
jg
icebp
outs
mov
mov
sbb
aaa
xchg
fidiv
dec
cmp
mov
mov
and
inc
add
sub
sbb
cmps
adc
in
mov
sbb
or
shr
fbstp
call
gs
retf
xchg
xchg
jb
fnstcw
ins
ja
mov
xchg
jo
cld
pop
mov
sbb
jo
sbb
(bad)
mov
adc
or
call
sub
fadd
stc
push
xor
sbb
icebp
out
stos
adc
xchg
call
sub
sub
(bad)
xlat
retf
pop
mov
xchg
inc
ror
inc
adc
imul
ss
push
mov
addr16
out
inc
cld
xor
fadd
xchg
adc
gs
jecxz
retf
mov
inc
sbb
popf
ficomp
mov
loopne
or
aaa
stos
push
popa
jbe
inc
add
mov
fs
jnp
mov
in
sbb
das
pop
jg
int3
dec
xchg
imul
mov
inc
fcomp
enter
out
call
push
ret
adc
ror
mov
daa
scas
pop
test
fiadd
div
sub
xor
add
rcr
adc
jecxz
js
jno
add
mov
ret
lock
div
retf
mov
push
push
adc
cs
mov
adc
xlat
pop
dec
ret
enter
aaa
test
int3
pushf
mov
inc
or
mov
cdq
xlat
push
aam
pop
sbb
or
jmp
scas
std
push
cdq
push
xchg
mov
lahf
hlt
out
arpl
xor
mov
je
mov
cli
jecxz
pop
(bad)
jnp
pop
push
adc
mov
adc
xor
not
ror
lock
mov
inc
ja
cmp
cmp
mov
sbb
push
inc
cmps
scas
nop
sbb
test
and
xchg
in
mov
xor
(bad)
pop
lods
xchg
inc
pusha
out
add
stos
adc
mov
jmp
psrad
mov
stc
add
imul
fistp
hlt
or
ja
fist
xlat
not
imul
cmps
ror
xchg
push
xor
repnz
dec
sahf
sbb
inc
call
div
dec
imul
mov
xchg
add
lds
test
sub
push
sbb
sub
jmp
xor
imul
push
mov
add
dec
mov
neg
inc
sbb
cmp
cmp
jle
pushf
stos
inc
ficom
jb
shl
cdq
ja
xor
rcr
jns
lods
mov
fisttp
test
mov
jo
jo
inc
ror
cmc
pop
in
or
and
ja
mov
mov
out
xchg
xrelease
ss
mov
icebp
lds
sar
xchg
or
mov
lea
test
fnstenv
xchg
jmp
aaa
scas
push
pop
xchg
push
and
test
xchg
out
pushf
adc
in
pusha
xchg
sub
or
fs
jnp
jl
call
repnz
mov
mov
pop
and
cmp
mov
mov
imul
dec
pop
not
test
mov
sub
int3
xchg
add
jmp
movs
jp
mov
jae
sbb
stc
in
inc
xchg
xor
inc
sbb
xor
mov
fwait
dec
mov
jae
push
cmp
(bad)
test
sti
lds
outs
mov
arpl
xchg
mov
in
stos
inc
xchg
sub
lea
push
mov
adc
ins
mov
div
inc
or
and
dec
xchg
inc
arpl
cmps
cs
mov
sbb
sbb
shl
das
jae
shl
out
push
dec
jmp
fdiv
pop
cli
mov
es
sub
int
fbld
sbb
fbstp
pop
and
cmp
arpl
push
sti
les
jae
and
mov
retf
test
call
and
fsubr
cmp
adc
jl
sbb
sti
icebp
mov
pop
aam
dec
loope
mov
in
xchg
and
push
mov
pop
pop
xlat
sar
stos
inc
add
fiadd
mov
gs
pop
pop
xor
imul
inc
movs
cs
mov
(bad)
jbe
out
sub
ja
(bad)
loop
ret
mov
aaa
sbb
aaa
sbb
(bad)
leave
(bad)
jns
aam
popf
push
jge
mov
ffreep
jns
and
pop
not
push
movs
add
mov
mov
movs
adc
xor
pop
aam
mov
bound
jae
dec
test
sahf
xchg
and
out
(bad)
movs
mov
adc
je
jno
xor
mov
stos
cdq
rcl
scas
xor
xor
lahf
loopne
or
and
cmp
inc
call
fcmovnb
push
push
icebp
sub
cdq
push
inc
sar
push
scas
sub
sbb
sbb
xchg
repz
or
push
push
jg
xor
mov
out
sbb
or
xor
mov
pop
dec
or
je
out
icebp
inc
jbe
repz
sub
jae
lds
cdq
push
out
cmc
repz
mov
cmp
lods
dec
imul
mov
mov
xor
xchg
int
mov
in
arpl
loopne
sbb
mov
jp
pop
and
pop
aas
loope
cmps
retf
scas
out
out
dec
stos
adc
nop
lock
add
xor
aaa
pop
cli
or
sbb
cld
cld
repz
bound
jb
repnz
inc
cmp
xchg
fbstp
xchg
inc
xchg
(bad)
mov
dec
test
jae
into
jl
and
pop
jmp
je
aam
pop
cmp
dec
pop
dec
mov
mov
scas
adc
sbb
lds
popa
dec
popa
inc
adc
gs
and
cmp
mov
rcr
cmp
cwde
push
shr
mov
mov
or
sbb
ins
(bad)
jp
aam
(bad)
push
xchg
pop
imul
mul
repz
outs
fwait
mov
cs
fidivr
pop
pushf
repnz
stos
lahf
loop
in
or
jb
xor
inc
(bad)
push
sub
sub
xchg
dec
adc
out
or
mov
and
inc
push
stos
or
ret
jo
jmp
inc
adc
pop
inc
test
ja
in
cmp
lea
xor
adc
jmp
arpl
adc
xor
push
idiv
cmp
cmc
xchg
movs
xchg
xchg
jb
mov
out
pop
inc
add
push
or
test
xchg
pop
into
popf
dec
mov
pop
sbb
sbb
jb
rep
and
fs
inc
add
adc
stos
das
cmps
rcl
xchg
inc
hlt
mov
mov
ja
push
dec
icebp
fst
xchg
push
pop
inc
mov
out
sbb
in
shr
js
(bad)
retf
ja
push
je
fcmove
xchg
and
ss
jmp
dec
out
cwde
lds
sbb
aaa
lahf
lods
adc
push
ficomp
add
push
push
and
mov
cmp
and
inc
enter
and
cmp
jmp
mov
outs
fiadd
call
aam
sub
je
test
out
call
(bad)
out
hlt
pop
(bad)
xor
cmc
push
dec
fsub
imul
fcom
mov
push
jge
es
cld
js
aas
dec
cmp
loop
xchg
mov
sbb
repz
and
push
addr16
cmp
test
cmps
mov
(bad)
mov
or
mul
addr16
movs
out
cmc
mov
push
jae
push
mov
xor
lods
inc
jbe
ja
xchg
xchg
test
jb
jmp
aad
cmps
daa
(bad)
ins
lock
and
enter
retf
push
push
pop
adc
jl
add
pop
jp
sti
mov
sub
pop
xchg
push
adc
icebp
sbb
cmp
mov
in
(bad)
mov
ins
in
cmp
sbb
fdiv
mov
dec
cs
clc
push
push
stos
int3
cmp
xchg
jns
sbb
pop
push
dec
cmp
xchg
add
out
cdq
mov
cli
loop
scas
aas
lock
mov
and
or
sbb
inc
adc
xor
je
ror
retf
or
add
sub
xchg
and
or
test
dec
mov
popa
call
loop
mov
push
adc
out
pop
jnp
cmp
xchg
jmp
nop
stc
ffree
xchg
pop
mov
mov
sbb
mov
mov
pusha
push
cdq
and
(bad)
test
dec
repnz
jmp
xor
pushf
xchg
gs
rcl
jmp
jp
movs
pop
adc
xor
jmp
shl
(bad)
(bad)
xchg
mov
out
loop
in
fs
and
dec
pushf
cmps
pop
pop
pop
scas
cli
sub
push
lds
inc
adc
test
dec
push
jge
or
jnp
inc
pop
inc
inc
cmp
dec
mov
xor
bound
cli
push
stos
jno
jb
inc
cdq
mov
test
aam
js
repnz
cmps
jae
xor
xor
cmp
call
std
mov
mov
xchg
cmps
xchg
daa
mov
je
sbb
jl
pop
xlat
add
retf
pop
and
cwde
rep
ss
ror
mul
sti
inc
call
cmp
or
bnd
pop
cdq
lods
aad
jecxz
cmp
ja
sub
test
xchg
sahf
push
rcr
fwait
adc
aam
shr
leave
cmp
xor
enter
das
xor
sbb
dec
xor
add
jae
push
lods
mov
push
rcl
sbb
and
cmp
hlt
mov
rcl
leave
mov
mov
fwait
push
in
fmul
push
dec
retf
jg
mov
or
push
or
sbb
les
aad
in
mov
imul
xchg
arpl
sub
fs
je
stos
cld
sbb
dec
mov
(bad)
retf
jae
mov
pop
mov
or
mov
jnp
ficomp
lods
leave
dec
mov
push
dec
fs
stc
push
cmc
jecxz
cmps
xchg
push
dec
pop
ret
dec
das
jmp
pop
cdq
push
icebp
popf
sbb
mov
inc
cwde
pop
xchg
sbb
daa
adc
cmovbe
add
rol
out
and
popf
dec
addr16
aam
jmp
adc
sub
out
xchg
cdq
inc
movs
sbb
cmp
sub
pop
mov
and
fs
cmp
dec
scas
adc
iret
sub
aad
shl
fucom
ja
out
ret
test
add
add
xor
dec
pop
jl
sub
push
scas
xchg
lods
dec
xchg
ja
sbb
hlt
push
aad
add
nop
inc
pusha
enter
jmp
or
in
cs
sub
push
mov
inc
push
fs
enter
je
mov
daa
xchg
push
sahf
push
repnz
and
fidivr
mov
arpl
int
sbb
loope
xor
(bad)
fdivr
adc
xchg
add
mov
xlat
shl
lock
fcom
js
lahf
adc
clc
cld
jmp
sub
into
xor
dec
out
sbb
pop
xor
(bad)
mov
push
adc
mov
ins
pop
sbb
pop
gs
add
(bad)
imul
fsub
pop
pop
xchg
mov
xor
mov
scas
mov
jo
mov
dec
sbb
test
pop
shl
aas
dec
das
cmp
xor
push
and
dec
in
push
ins
repnz
jb
cmp
sbb
imul
(bad)
mov
inc
aaa
(bad)
push
std
sbb
test
pop
sbb
aad
scas
int3
out
imul
cmps
or
inc
hlt
mov
and
mov
fwait
xor
in
add
repz
cwde
dec
mov
aad
neg
jge
fadd
cmp
mov
jg
mov
cli
push
push
xchg
xor
mov
test
fidivr
ror
inc
add
xor
sub
int3
or
mov
mov
push
mov
int
inc
lea
cmp
or
jnp
cmp
push
ja
mov
fwait
mov
inc
ins
daa
cmps
dec
call
(bad)
mov
je
add
add
xor
hlt
and
mov
mov
add
shl
outs
adc
ret
xchg
mov
or
sub
je
shl
jle
std
rep
mov
adc
gs
sbb
fs
stc
loop
out
fstp
xchg
or
fs
cmps
iret
push
sub
sbb
scas
dec
cmp
cli
icebp
(bad)
pop
cdq
aaa
push
rcr
pop
pop
cdq
(bad)
adc
popa
xchg
stos
test
(bad)
call
repz
(bad)
rcl
sbb
lock
repz
test
out
(bad)
shl
rol
cmps
test
adc
in
dec
pop
mov
xor
cdq
push
retf
sar
scas
sbb
mov
push
add
mov
sbb
fsub
xchg
(bad)
push
stos
aaa
outs
sub
and
jge
pop
xchg
popf
pushf
jae
daa
or
cmps
dec
pop
pop
pusha
js
mov
ja
mov
mov
dec
mov
cmps
leave
push
mov
test
adc
dec
fld
xchg
adc
js
xchg
inc
push
sbb
inc
sub
fcom
fdiv
sub
(bad)
fiadd
adc
retf
outs
mov
cmp
js
mov
cmp
pop
add
imul
mov
pop
adc
push
cs
dec
mov
pop
xchg
add
inc
rcl
and
xor
rol
outs
mov
shl
jne
inc
adc
add
iret
je
jno
jmp
out
cmps
fwait
es
jecxz
xchg
xor
popa
enter
ret
xchg
and
mov
sbb
test
clc
retf
jae
jns
and
jno
(bad)
dec
hlt
add
mov
xchg
ret
xor
fcom
inc
clc
or
sti
lds
mov
arpl
dec
mov
or
xchg
cmps
ins
dec
mov
mov
ss
pop
ins
jae
or
out
lock
test
mov
xor
aaa
(bad)
bound
sti
mov
push
cli
push
dec
xchg
mov
xor
pop
push
popf
(bad)
stc
outs
mov
and
and
xor
scas
mov
out
je
inc
stc
add
fucomp
cmp
movs
adc
shl
mov
mov
das
ret
mov
inc
mov
adc
mov
cmp
pop
in
xlat
xchg
jae
mov
cmps
mov
cmp
add
sub
aad
inc
iret
pop
and
out
add
sbb
jp
push
mov
xchg
inc
fs
retf
adc
xor
out
jae
push
(bad)
neg
(bad)
dec
out
mov
gs
imul
repz
lods
sub
mov
jns
inc
push
mov
test
jno
ss
push
mov
ja
dec
ror
inc
sub
xchg
mov
push
xchg
shr
or
pop
sbb
aad
pop
inc
rcr
out
push
nop
scas
and
mov
ins
xchg
adc
sub
ins
pop
adc
lods
ret
aam
mov
and
adc
and
pushf
jmp
sbb
aam
sbb
sbb
jmp
mov
xor
mov
mov
jne
call
les
rcl
fisubr
test
fmul
sbb
dec
dec
test
xchg
call
retf
sti
mov
leave
aas
out
call
push
or
adc
jg
nop
std
daa
bound
jmp
mov
pusha
mov
imul
push
or
inc
addr16
sar
jecxz
mov
outs
neg
mov
hlt
adc
jmp
xor
cmp
mov
(bad)
sbb
mov
sub
movs
add
mov
pop
call
ds
inc
aam
jp
jns
aas
adc
ins
mov
pop
pop
test
(bad)
mov
pop
shr
mov
jmp
mov
stos
loop
scas
in
lock
pop
mov
adc
(bad)
push
clc
or
jmp
dec
sahf
dec
cdq
test
inc
inc
enter
add
stc
cmp
je
xor
sar
das
js
popa
inc
sbb
jp
mov
jbe
ror
ficomp
or
lods
dec
cmp
cwde
mov
cdq
imul
dec
pusha
loop
outs
movs
xor
lock
inc
mov
sti
(bad)
or
cmp
test
retf
or
(bad)
mov
iret
fisttp
pop
pop
mov
adc
imul
mov
test
or
xor
push
mov
mov
clc
mov
and
mov
cmp
(bad)
mov
mov
lock
add
cmp
std
loopne
out
sub
lahf
retf
cs
sbb
es
pop
daa
mov
nop
mov
out
fsubr
adc
(bad)
call
aaa
jmp
scas
inc
add
in
je
pop
dec
or
imul
cli
sbb
adc
das
les
dec
aaa
pop
rcl
mov
and
call
xchg
sub
dec
pushf
sbb
cdq
mov
(bad)
ins
push
data16
inc
cwde
das
lods
jp
pop
stos
rcl
mov
add
or
cmp
mov
test
mov
stc
jno
and
sbb
add
retf
mov
inc
push
inc
aad
cmp
retf
in
arpl
pop
(bad)
pusha
in
and
dec
cld
retf
hlt
pushf
test
dec
lahf
pop
cwde
daa
pushf
sbb
jnp
(bad)
push
xchg
fistp
push
ins
jge
inc
out
clc
pop
dec
push
or
repz
dec
fwait
outs
push
push
mov
ins
inc
pop
rol
cmp
jle
imul
cmp
movs
xchg
sahf
test
xor
jecxz
ret
lea
sbb
inc
jge
dec
xchg
mov
loope
inc
mov
mov
inc
adc
mov
push
out
add
xchg
mov
dec
jae
mov
data16
dec
xchg
shl
sbb
shl
les
call
dec
lds
inc
adc
lahf
mov
dec
inc
dec
mov
cld
sti
ds
mov
adc
cmp
mov
(bad)
adc
jmp
neg
jle
sbb
cdq
lods
lods
xor
and
mov
fisttp
mov
mov
cmp
scas
inc
jmp
rcr
or
test
jmp
add
call
xchg
lds
mov
push
stos
jmp
ror
push
imul
cmp
jmp
xchg
stc
jl
test
jae
xchg
aad
shl
xlat
adc
jns
fcom
pop
stos
out
mov
loopne
(bad)
ins
iret
popf
(bad)
ss
test
or
out
dec
pop
mov
fistp
(bad)
dec
push
outs
or
push
xchg
inc
sub
and
adc
sbb
jb
mov
add
mov
out
arpl
mov
daa
push
ficom
shl
push
dec
adc
ficom
mov
sbb
xor
jmp
xor
hlt
ins
mov
fisub
enter
mov
mov
cs
dec
xchg
stos
shr
push
cs
cmc
xchg
dec
xor
call
dec
cld
into
in
jae
cmps
jmp
jb
out
pop
and
pop
pop
mov
movs
push
dec
sbb
stos
mov
fist
(bad)
mov
stos
xchg
rcr
sahf
pop
cmps
ret
bound
pop
test
and
and
cmp
ins
jnp
into
popa
test
mov
sub
dec
sbb
pop
inc
mov
ret
movs
xchg
(bad)
pop
jmp
pop
pop
mov
loop
mov
xchg
repz
add
xchg
jno
sub
dec
cwde
dec
jbe
xor
and
test
push
push
out
adc
adc
jecxz
mov
cmp
jecxz
and
adc
call
cmps
sbb
pop
mov
adc
and
jae
inc
cli
imul
test
cmc
push
and
sub
jnp
xchg
adc
shl
in
les
mov
shl
or
dec
jmp
hlt
jb
test
add
aas
add
mov
jbe
dec
mov
mov
mov
push
sbb
dec
in
push
mov
add
jmp
mov
mov
mov
fdiv
push
inc
xchg
xchg
adc
jno
or
pop
dec
sbb
retf
jp
mov
xlat
shl
and
sub
repz
add
mov
inc
push
cmps
aaa
aam
jae
adc
mov
test
xor
out
mov
ins
adc
int3
add
mov
mov
movs
inc
fidiv
cmc
adc
adc
adc
fild
push
add
pusha
mov
mov
dec
jbe
mov
in
(bad)
repnz
add
aam
aam
bndstx
out
icebp
call
pop
iret
push
jae
ins
sub
lahf
jecxz
jae
in
icebp
(bad)
lods
outs
mov
inc
(bad)
sub
push
and
mov
mov
cli
int3
sub
adc
inc
add
hlt
pop
inc
lods
add
and
daa
inc
hlt
mov
stc
popf
sar
shr
jmp
pushf
jg
int
mov
mov
jmp
outs
or
hlt
adc
loop
out
mov
jge
sub
pop
inc
sbb
in
dec
cmp
daa
jae
jae
repnz
lds
lds
test
test
xor
cmp
adc
jbe
popf
cli
pop
(bad)
and
xchg
sahf
cmp
ror
sahf
shl
addr16
jle
mov
(bad)
(bad)
cld
in
mov
test
sbb
cmp
sbb
sub
test
dec
push
stos
pushw
add
arpl
pop
dec
cmc
dec
adc
sbb
sub
sub
clc
push
dec
scas
mov
aam
into
fsub
push
jmp
push
jmp
cmc
xor
jbe
dec
cld
repnz
mov
imul
inc
aas
cmc
out
and
out
pop
pop
icebp
ja
jne
ficomp
mov
fild
cdq
jmp
and
outs
aad
push
pop
iret
dec
rcl
sub
dec
in
loop
fstp
xchg
add
and
xchg
inc
in
aad
jo
push
retf
ror
xor
shl
cld
jno
in
push
scas
jne
mov
sbb
mov
or
inc
mov
cwde
mov
pop
jl
jl
sbb
pop
push
xchg
mov
ret
dec
std
jle
mov
aaa
mov
ret
or
call
(bad)
pushf
test
adc
fadd
aaa
repnz
ret
mov
(bad)
(bad)
or
leave
enter
dec
inc
(bad)
imul
inc
cmc
fadd
xor
pop
mov
and
(bad)
clc
repz
inc
jb
bound
sub
rcl
fld
lods
mov
jp
scas
test
add
(bad)
inc
xor
test
div
push
stos
ja
add
push
mov
add
inc
(bad)
dec
mov
in
shl
jle
sbb
mov
into
lods
xor
mov
out
fsub
mov
push
retf
xlat
add
sbb
enter
adc
ins
cld
pop
push
fisub
mov
xchg
inc
jb
shr
aam
sub
leave
pop
leave
push
mov
sub
stos
cli
dec
push
mov
dec
cmc
mov
dec
cdq
sbb
xchg
mov
xor
mov
sub
(bad)
jns
cmps
pop
(bad)
mov
inc
dec
(bad)
shr
in
push
inc
mov
jno
jnp
and
jb
outs
sub
icebp
je
ret
or
je
cli
rol
cmp
push
lea
inc
ins
inc
inc
out
popa
into
ins
fst
sub
mov
test
cmp
push
mov
mov
push
sbb
cs
rol
cmc
dec
in
inc
mov
retf
push
jns
aaa
and
cmps
sar
fcom
mov
out
xchg
(bad)
int
jmp
out
push
cmps
dec
push
dec
dec
pop
fimul
sbb
loope
clc
leave
cmp
jp
arpl
push
xor
stos
jle
test
gs
lods
and
bound
mov
aad
lds
dec
rol
sbb
mov
hlt
cli
inc
sub
fldcw
shl
xor
inc
ja
add
inc
div
mov
jle
mov
jle
fdivr
dec
(bad)
cmp
ret
jb
js
sbb
sub
jmp
movs
dec
test
fwait
lds
cmp
xchg
push
mov
fadd
mov
xor
scas
pop
inc
out
xchg
cmp
cmp
stos
add
mov
xor
ret
into
in
push
sbb
jno
or
push
push
push
cwde
hlt
mov
test
enter
pop
aam
mov
adc
loope
ins
fcomp
push
hlt
push
pop
or
adc
sbb
dec
in
adc
out
cmp
hlt
xchg
mov
mov
cmp
jbe
out
xor
int3
fcomp
ror
sti
jae
fbstp
adc
rol
xor
das
adc
dec
dec
xor
retf
mov
sbb
js
xor
add
pop
jmp
ficom
sub
jge
sar
rcr
shl
loop
js
ss
sub
ds
sbb
push
out
scas
pop
inc
les
xlat
fstp
stc
cmps
retf
or
movs
pushf
aad
adc
xor
pop
xchg
pop
lahf
cmp
xor
ss
and
dec
clc
jmp
mov
cld
jae
pop
xchg
out
stc
hlt
movs
rcr
leave
test
cli
push
xor
pop
fdiv
dec
cmp
pop
dec
(bad)
call
stos
xor
ins
hlt
push
aaa
cmp
or
xchg
sub
cmc
sbb
cmp
fldcw
and
inc
nop
or
nop
call
push
xchg
and
(bad)
out
fmul
mov
mov
dec
jge
pushf
xchg
xor
mov
sub
and
mov
cli
call
shr
nop
push
sbb
movs
movs
pop
pop
scas
call
pop
push
mov
push
mov
into
and
scas
stc
push
cmc
xor
lods
scas
jae
mov
jecxz
dec
mov
sbb
inc
sub
imul
fldcw
sti
retf
cmps
mov
xor
loop
cmp
jmp
mov
(bad)
cmps
shr
sub
mov
call
out
data16
push
push
mov
jae
pop
std
bound
test
(bad)
mov
cld
jae
adc
xchg
xchg
stc
and
pusha
pushf
outs
mov
cli
lea
xor
mov
jnp
aad
jns
movs
mov
mov
mov
cdq
neg
(bad)
pusha
adc
mov
inc
mov
lods
popa
bound
adc
dec
pop
(bad)
dec
ret
dec
out
or
pop
xchg
stos
jns
jl
adc
jns
ins
push
sbb
jo
mov
jmp
adc
push
ror
rcl
js
mov
ror
jmp
fistp
mov
push
out
rcr
and
add
xlat
mov
mov
in
ds
pop
aam
daa
mov
nop
pop
mov
xchg
dec
jns
call
ja
outs
pop
call
jo
xchg
ins
xor
mov
cmps
das
rcr
mov
pop
mov
jmp
xor
sbb
mul
(bad)
jmp
nop
push
add
cmps
mov
fidiv
scas
sub
lock
test
and
out
rol
xlat
jg
mov
xor
push
pop
test
add
add
fwait
sbb
cwde
mov
xor
add
or
inc
mov
jle
mov
gs
mov
push
outs
jle
pop
stos
in
jns
pop
loop
xchg
mov
dec
push
test
retf
int3
dec
cmps
jbe
jmp
mov
pop
js
cwde
sub
push
xchg
jne
ror
cdq
rcl
xor
jmp
addr16
push
cmp
stos
les
pop
sbb
mov
test
xor
sub
iret
xchg
fcomp
das
(bad)
xchg
mov
xchg
rcl
cmp
add
push
mov
sti
fdiv
and
ficomp
test
pusha
div
jae
in
inc
in
mov
pop
xchg
int
pop
call
and
push
mov
push
jp
xchg
jg
mov
ret
pusha
jae
lods
and
xor
push
xor
cld
add
enter
data16
loope
je
js
dec
jo
jl
imul
mov
jae
movs
jo
fmul
lods
cmp
stos
loope
cmp
aad
dec
std
sub
fiadd
dec
pushf
inc
jo
push
bound
je
sub
je
jo
in
pop
jae
inc
dec
sbb
iret
(bad)
push
loopne
pop
push
adc
pop
push
iret
mov
xchg
jb
mov
lahf
mov
movs
and
and
xor
cmp
les
jae
mov
xchg
mov
and
movs
jae
leave
or
inc
add
fst
pop
pop
dec
and
sti
lods
loope
lahf
ins
sbb
or
mov
xor
mov
arpl
pop
imul
mov
xor
mov
pop
aaa
xchg
es
fcomp
push
in
push
hlt
xlat
loopne
and
pop
pop
jb
pop
and
outs
mov
out
daa
addr16
push
inc
call
push
lods
cmps
mov
ins
push
cmc
sahf
adc
cmp
call
fmulp
out
sub
xor
xchg
xchg
push
cmp
popf
jnp
pop
jmp
cmp
jb
loope
(bad)
mov
outs
xchg
and
or
clc
std
cli
push
add
cmc
cmp
je
add
cmp
out
shl
test
lods
mov
pop
mov
test
inc
cmp
mov
ret
xchg
(bad)
jmp
cmp
sub
inc
imul
jae
pop
mov
mov
mov
cs
dec
push
mov
mov
sub
mov
sbb
mov
je
adc
call
je
xchg
test
jae
repz
inc
add
mov
mov
mov
out
inc
adc
ret
xor
call
lods
xchg
jmp
lods
jae
push
push
mov
loop
add
popa
or
jae
scas
je
pop
retf
inc
test
mov
lock
and
cmp
pop
adc
inc
adc
mov
jae
jge
not
dec
scas
(bad)
jns
dec
arpl
pop
enter
add
ud2
sbb
xchg
ja
mov
imul
je
fwait
(bad)
adc
push
lds
push
mov
jb
jmp
sbb
cs
pop
leave
stos
mov
add
sbb
rcl
lds
xor
movs
pop
js
ins
loop
pop
stos
stc
jg
mov
jmp
xchg
cmps
fnstsw
cmp
jae
push
or
and
jbe
sbb
out
lds
xor
xchg
stos
and
fidivr
or
mov
sub
xchg
neg
mov
cmp
fimul
and
gs
inc
pop
daa
das
lods
icebp
call
addr16
adc
in
sbb
(bad)
cmps
pop
(bad)
mov
test
aas
mov
fdivr
fist
aas
mov
add
jb
imul
mov
xor
sahf
clc
clc
pop
push
cmps
fcom
jmp
xchg
sbb
jbe
push
mov
push
mov
enter
scas
fist
and
in
lds
adc
(bad)
or
and
fimul
gs
in
std
pop
rcl
sub
inc
in
jg
test
rcr
daa
sbb
xchg
and
sbb
jae
aas
xchg
out
shr
jle
push
xchg
push
daa
das
push
sbb
loop
ret
add
adc
in
shr
lds
push
xchg
cmp
pop
iret
cmp
pop
xchg
push
movs
adc
xchg
push
lds
in
(bad)
ds
sub
dec
aam
xor
and
(bad)
cmps
repz
mov
mov
(bad)
loopne
pop
hlt
jle
sbb
sahf
hlt
sbb
in
push
xchg
push
mov
push
inc
aaa
in
sti
mov
jg
fld
inc
adc
cmp
sbb
xchg
jae
pop
int3
mov
xor
jne
jmp
mov
dec
loope
or
inc
inc
icebp
arpl
sbb
pop
push
adc
rcl
sbb
dec
(bad)
ds
int
movs
xchg
inc
xchg
and
sub
fcomp
mov
scas
sbb
dec
dec
(bad)
mov
jo
pop
cmp
iret
sar
cs
pop
xchg
xchg
test
imul
push
cmps
and
adc
retf
movs
push
imul
mov
jb
lock
pop
test
lahf
jnp
ficom
out
mov
push
loope
lds
xchg
add
dec
rol
cwde
lods
repz
enter
cmps
aas
add
mov
pop
imul
cmp
pop
or
out
push
inc
sar
div
scas
xchg
sbb
scas
shr
push
xor
lods
jmp
jmp
imul
inc
dec
enter
ja
int3
inc
xlat
lock
and
scas
xlat
mov
dec
fst
cmp
pop
push
bound
in
xchg
shr
jecxz
test
mov
sub
movs
xchg
shr
pusha
repnz
xchg
jae
mov
add
fst
cmc
iret
or
shl
movs
xchg
xchg
pusha
sahf
hlt
mov
xchg
pusha
aad
inc
mov
xchg
popf
push
sub
int3
push
xchg
retf
dec
ror
cmc
xchg
pop
out
inc
mov
cmp
or
push
mov
push
int
xor
xchg
sti
jo
jl
sbb
mov
retf
add
and
ins
adc
mov
xchg
hlt
jge
pop
mov
lds
inc
mov
mov
xchg
mov
jno
pushf
jb
cmp
push
mov
ins
mov
cmp
jae
js
jmp
add
sub
loope
inc
xor
adc
gs
xchg
mov
sub
cmp
fidiv
test
push
pop
adc
sub
movs
jmp
mov
fsub
mov
das
sub
movups
xchg
cs
inc
je
pop
ins
adc
js
dec
pop
jecxz
mov
sub
stos
je
mov
and
xor
stc
in
mov
push
js
jmp
cmp
mov
jg
outs
xchg
rcr
ja
mov
jae
jno
shl
loop
adc
pop
shl
ret
and
daa
or
scas
int
pop
xchg
mov
mov
push
fstp
or
out
pop
out
pop
mov
mov
jae
jge
mov
cmps
ins
popf
sbb
add
inc
enter
int3
xchg
loope
and
inc
xor
mov
push
in
inc
mul
xchg
push
(bad)
jle
cmp
dec
in
jg
jmp
jp
add
aam
dec
cmp
retf
jnp
jne
cmp
push
mov
mov
outs
and
mov
pop
lods
or
jne
in
mov
sbb
adc
or
cmp
pop
call
push
pop
or
jae
in
popa
push
pop
ss
jg
stos
adc
mov
xor
and
jmp
jae
out
jb
stc
jbe
and
out
mov
jl
xor
je
into
aam
movs
and
scas
loope
jecxz
ror
xor
and
gs
sti
es
ins
xchg
mov
inc
add
imul
retf
aaa
mov
fld
ret
das
sar
and
push
retf
lds
push
push
call
retf
pop
sbb
in
lock
call
xchg
sbb
adc
xor
add
repz
daa
ret
imul
sub
inc
lods
mov
retf
js
sub
mov
pop
add
dec
enter
push
sub
pop
jne
push
jne
sahf
mov
xchg
inc
adc
jle
nop
fmul
test
std
sbb
sbb
push
sahf
stos
pop
in
hlt
and
loope
nop
adc
(bad)
lock
sbb
mov
mov
mov
push
xchg
push
popa
mov
jb
push
scas
test
push
push
les
ins
daa
jae
pop
movs
adc
pushf
sub
cld
je
cmc
pop
or
rcr
test
push
ins
es
add
stos
call
shl
pop
xchg
loop
pushf
mov
inc
loope
push
sar
add
xchg
mov
ins
pop
aad
repz
jae
push
lds
ret
sub
mov
aas
in
aam
retf
xor
(bad)
loop
cwde
jmp
(bad)
psllq
dec
stos
jmp
cdq
xchg
gs
mov
(bad)
push
shr
(bad)
lahf
and
shld
lods
mov
sub
daa
push
iret
dec
ja
mov
js
icebp
cld
das
pop
aad
mov
mov
xor
fcmovnb
dec
in
inc
aas
inc
jae
outs
cld
push
jns
lahf
fwait
push
and
jo
adc
sub
push
ins
xchg
jmp
ret
jae
frstor
cdq
popf
test
gs
pop
repnz
test
push
pop
(bad)
shr
mov
arpl
dec
adc
sub
rcl
xor
mov
push
addr16
xchg
add
mov
imul
fwait
cdq
imul
mov
inc
cmps
retf
dec
inc
repz
dec
loop
xchg
ja
in
repz
nop
mov
sbb
xor
jb
(bad)
cmc
scas
add
outs
cmp
xchg
aad
ja
clc
inc
adc
imul
xchg
loop
dec
fucomi
mov
add
js
push
jo
jno
int
push
and
arpl
sub
jl
hlt
movs
je
jmp
mov
ds
dec
xchg
mov
cmp
pushf
js
leave
outs
push
mov
pusha
sbb
fmul
push
sbb
ins
pop
sub
xor
dec
adc
stc
mov
jb
sub
les
mov
cmp
pop
jae
cmp
mov
xlat
inc
daa
push
xor
je
push
je
mov
mov
dec
sbb
xchg
sub
in
xor
in
dec
inc
pop
retf
das
div
push
icebp
sbb
fwait
mov
cmp
in
mov
and
jne
jne
or
leave
xchg
and
mov
stos
popf
pop
sbb
sub
(bad)
aad
sub
push
add
xlat
mov
xor
xor
jae
cwde
imul
stos
add
pop
jg
mov
(bad)
mov
js
mov
push
dec
fldenv
cmp
and
sub
stos
stos
mov
aad
mov
pop
mov
and
ds
xor
out
xchg
cmps
(bad)
cmp
xor
xlat
xchg
sub
sub
jnp
or
push
xor
retf
sub
pop
ret
imul
xor
call
xor
push
cmc
dec
mov
jno
scas
rcr
sbb
mov
(bad)
mov
mov
loop
into
imul
inc
xchg
mov
inc
mov
gs
jne
cmps
xlat
jl
pop
repz
add
(bad)
cmp
dec
int
or
sbb
retf
jp
inc
data16
or
xor
inc
or
retf
aam
push
cmp
int3
aas
imul
mov
add
add
adc
push
mov
jo
jb
mov
mov
js
cmc
ret
les
(bad)
push
xchg
xchg
add
js
mov
xchg
jp
jge
mov
les
dec
push
fwait
dec
imul
pusha
push
pop
hlt
push
cmp
add
int3
cs
cs
dec
cdq
cmc
cmps
mov
aam
dec
xor
mov
ret
push
xor
rol
dec
sbb
mov
push
xchg
clc
jno
mov
ins
call
jnp
mov
pop
int3
stos
jno
cmc
inc
pop
adc
jns
ror
test
add
jmp
sahf
sbb
xchg
jg
mov
xor
xchg
push
add
inc
shl
gs
retf
push
ss
addr16
inc
mov
lock
je
out
sbb
out
lods
pop
push
enter
xchg
mov
mov
dec
jmp
xchg
pop
leave
dec
out
shl
aam
jne
sahf
sub
mov
popa
lods
push
mov
push
arpl
retf
xlat
stos
fstp
push
mov
cld
xchg
out
mov
dec
imul
mov
xchg
mov
movs
aam
add
cmp
push
rol
pop
jae
adc
je
mov
adc
push
popf
jge
hlt
cdq
dec
sti
mov
daa
cmp
push
cmc
add
xor
sbb
scas
inc
adc
xchg
jno
inc
jge
push
mov
div
push
xchg
sub
frstor
adc
ins
push
sub
mov
dec
scas
shr
aad
inc
fnstsw
xchg
ins
outs
popa
xchg
mov
mov
outs
push
adc
pop
retf
(bad)
out
fidiv
sar
dec
push
frstor
push
jl
lds
sub
add
xchg
(bad)
out
inc
int
in
mov
jecxz
int3
cmps
fld
pop
fidivr
push
(bad)
dec
inc
add
xchg
fdiv
dec
xchg
pop
sbb
fs
mov
outs
aam
and
aad
mov
pop
xlat
lods
shl
jg
out
sub
sbb
add
outs
stos
mov
push
mov
fdivr
jl
mov
or
je
xchg
pop
retf
mov
jns
push
or
inc
sbb
outs
stos
cmp
dec
push
cdq
sbb
ja
push
mov
jmp
es
add
punpckhwd
(bad)
ja
retf
(bad)
out
xchg
(bad)
xchg
cmp
mov
je
pusha
add
mov
pushf
mov
fs
or
sbb
push
mov
ror
mov
lods
aad
fmul
xor
into
clc
mov
or
ja
mov
imul
xchg
jne
cmp
inc
or
lods
mov
jns
add
fld
jmp
or
sar
lahf
mov
mov
iret
stos
cli
pop
cmps
loop
mov
stos
and
xor
sub
adc
adc
outs
pushf
stc
hlt
xchg
mov
xor
xchg
sbb
daa
cmp
pop
pop
pop
dec
push
mov
int3
push
dec
lahf
push
adc
scas
add
rcr
pop
ret
(bad)
ficom
test
aas
ins
in
(bad)
cmp
inc
sub
adc
repz
(bad)
pop
cwde
inc
addr16
ins
or
dec
mov
jnp
repnz
daa
js
dec
jbe
outs
mov
mov
xor
sbb
imul
popf
shl
fsubp
scas
jbe
in
sbb
mov
add
sub
mov
lock
test
(bad)
in
daa
dec
or
sbb
vpaddb
and
xchg
xchg
jmp
fld
sub
je
mov
push
iret
fild
dec
loop
jl
inc
xchg
cmps
nop
pushf
push
and
sbb
fs
imul
outs
ret
adc
sub
ins
or
ins
movs
mov
dec
imul
fidiv
mov
or
adc
xchg
mov
sub
shl
push
jb
mov
jl
iret
ficomp
jnp
push
xlat
call
mov
(bad)
pop
mov
push
add
dec
(bad)
xchg
popa
and
mul
js
ins
and
xor
jb
adc
xchg
pop
gs
inc
ja
mov
and
mov
sbb
cmp
sbb
imul
xchg
aam
inc
ins
pop
in
and
push
jp
inc
inc
sbb
xor
call
inc
jp
cmp
jmp
cmp
data16
jo
(bad)
mov
icebp
(bad)
sbb
and
pop
lods
and
aaa
stos
bnd
mov
xor
ficom
js
shr
pop
adc
pop
stos
int
xchg
jl
add
push
rol
push
fistp
dec
mov
fwait
rcr
mov
dec
push
cmp
inc
inc
clc
mov
pop
push
jno
mov
mov
xor
mov
ins
ror
das
imul
jb
setne
sti
pop
mov
retf
neg
(bad)
ficomp
jmp
mov
xchg
fiadd
lods
inc
xchg
(bad)
in
test
jno
ss
sahf
into
push
inc
cli
int
jne
out
push
push
mov
jb
lods
repz
xchg
mov
mov
push
retf
xchg
js
mov
fnstcw
lods
(bad)
push
aaa
or
mov
movs
dec
test
fcmovnbe
xchg
and
xor
inc
outs
push
or
xor
adc
add
or
jmp
stc
scas
cmp
cmps
sub
add
dec
xchg
push
jp
lods
lods
inc
cdq
out
mov
pop
mov
stc
cmps
inc
or
pop
cmp
pop
das
inc
call
xchg
(bad)
adc
setns
push
enter
mov
mov
in
retf
sbb
cli
imul
mov
(bad)
out
(bad)
xor
jb
ret
(bad)
cwde
mov
fwait
leave
pop
dec
aas
bnd
sbb
popf
loope
repz
clc
lock
or
cli
repz
dec
xchg
std
(bad)
into
ret
repz
sub
or
pop
push
fnsave
and
jne
pop
inc
xchg
adc
ss
int3
push
jbe
mov
(bad)
jmp
xlat
push
es
pusha
mov
jb
daa
scas
enter
mov
stc
es
icebp
mov
jne
into
bound
ins
aad
sub
and
sbb
bound
add
jnp
mov
mov
shl
int3
jae
pop
push
mov
mov
jg
imul
dec
aam
add
xchg
stos
pop
push
retf
dec
imul
add
sbb
std
mov
out
sbb
xchg
(bad)
adc
xor
ins
jb
shl
ins
mov
add
push
cdq
cmp
mov
test
push
jle
repz
iret
fmul
sub
push
ret
xor
jae
cld
sbb
scas
or
ja
call
jae
and
xor
xor
inc
inc
je
lahf
stos
inc
lds
outs
nop
fnstcw
push
or
inc
leave
imul
mov
xchg
jg
mov
xchg
aad
clc
out
in
add
mov
fisubr
xchg
pop
push
dec
sbb
pop
adc
push
jne
repz
loop
xchg
inc
cli
jecxz
push
enter
into
aam
xor
mov
int3
sbb
out
imul
cli
mov
arpl
nop
int
in
xor
sbb
aaa
jb
cmp
bound
aam
repz
mov
cmp
add
mov
shl
outs
int
out
xchg
outs
inc
xor
daa
or
aaa
and
mov
pop
bound
std
cmp
pop
mov
je
leave
(bad)
idiv
cld
loope
lods
test
call
sbb
mov
ftst
jbe
xor
jmp
inc
fisubr
pop
test
pop
adc
cwde
adc
js
sub
(bad)
in
nop
arpl
cli
push
xor
and
xchg
sbb
jb
inc
clc
pop
add
mov
adc
jbe
mov
mov
sbb
or
iret
ss
aad
xlat
aam
sbb
pop
pop
add
xchg
outs
jmp
mov
xchg
xchg
(bad)
in
sub
mov
sbb
pop
dec
push
fmul
cmp
retf
test
retf
cdq
rcl
jns
jmp
mov
(bad)
ror
pop
and
ja
outs
sbb
cdq
push
loope
mov
push
fwait
in
jp
loop
(bad)
sahf
inc
hlt
fild
mov
in
xchg
in
shl
push
arpl
lods
pop
inc
xlat
addr16
sbb
sbb
sbb
adc
and
imul
pop
ins
push
fld
sub
je
mov
fiadd
cs
scas
pop
pop
push
mov
mov
aaa
push
adc
dec
inc
push
mov
add
sbb
sub
sbb
push
rcr
jmp
cmp
jae
mov
ss
out
mov
sbb
loop
push
enter
aas
test
and
loop
xchg
push
repnz
or
cmp
add
fldenv
cmp
sbb
fcomp
cmp
pop
mov
mov
pop
jne
retf
in
dec
(bad)
int
jnp
add
mov
and
adc
mov
retf
sar
(bad)
jno
mov
mov
ja
and
inc
sbb
out
xor
into
ret
cmc
adc
into
les
mov
dec
jne
xchg
mov
(bad)
in
sbb
(bad)
sub
xor
mov
int
sbb
mov
sub
mov
inc
sub
cmp
cs
gs
mov
adc
pusha
(bad)
ss
cmp
xchg
aad
xchg
pop
cdq
addr16
hlt
push
ret
pop
cwde
jae
xor
push
jbe
cwde
mov
mov
or
cld
push
fsub
sbb
pop
cld
sbb
jecxz
push
xchg
aas
into
les
mov
es
ss
sbb
and
cmp
dec
ja
(bad)
mov
mov
pop
push
pushf
clc
jle
inc
dec
cmp
cmp
jae
stc
jne
sbb
lea
adc
dec
in
jbe
xchg
ins
movs
shl
mov
mov
adc
cs
jbe
popa
outs
inc
adc
loopne
adc
pop
jae
stos
fstp
stos
lea
int3
outs
in
sbb
fadd
outs
rcl
nop
mov
repnz
ss
or
stos
daa
jmp
je
sbb
out
in
mov
cdq
in
test
cdq
call
inc
jae
xor
inc
repnz
in
rcr
movs
imul
(bad)
stc
stos
adc
in
int
mov
lds
lock
ror
std
lods
jne
popf
popa
sbb
jecxz
leave
sbb
sar
sti
or
mov
push
adc
fist
mov
inc
lahf
dec
cdq
sahf
fnclex
jge
and
shl
rsm
aad
test
cmps
outs
and
js
xor
dec
aam
aad
pop
mov
cmp
adc
jae
mov
fidiv
ror
add
cmps
push
stc
sub
nop
push
adc
movs
mov
xchg
mov
and
xchg
mov
mov
push
xor
mov
pop
and
xor
(bad)
mul
push
sub
mov
test
mov
test
cmp
jno
cld
mov
push
js
iret
jnp
das
xchg
loope
ror
retf
mov
cmp
sbb
xor
inc
fistp
jle
pop
dec
push
int3
mov
inc
rcl
repnz
inc
cld
imul
adc
adc
pop
pop
in
outs
xchg
mov
push
push
xchg
repz
xchg
xchg
fucom
mov
popa
dec
mov
mov
retf
data16
fwait
jo
xchg
dec
dec
shr
dec
cli
(bad)
aad
mov
repz
loope
mov
mov
jecxz
not
push
mov
dec
mov
sbb
inc
or
cmps
pop
jle
lods
rcl
or
test
mov
xchg
fld
xor
mov
ficomp
adc
push
inc
test
jp
test
int
aam
sbb
xchg
mov
mov
imul
addr16
call
mov
mov
pop
push
mov
int3
ja
repz
or
pop
cmp
es
xor
mov
pop
jl
sbb
mov
fucom
aad
mov
mov
mov
dec
add
cli
inc
pop
rcr
push
movs
pop
mov
pop
jb
xchg
dec
pop
test
sbb
(bad)
leave
mov
inc
sub
push
jae
(bad)
retf
out
add
add
mov
sbb
jge
xchg
(bad)
fiadd
lds
sbb
les
mov
jbe
aam
out
cmp
add
icebp
push
cmp
das
fstp
cmps
and
xor
sbb
adc
cmc
adc
sti
dec
cmp
retf
xor
cmp
dec
popf
jmp
cmp
rcl
mov
mov
mov
stc
sub
push
jbe
mov
mov
aaa
fcmovbe
cmp
push
ins
(bad)
(bad)
ret
push
jae
adc
test
out
and
mov
enter
inc
mov
sti
jae
cli
ret
xchg
mov
mov
in
push
sbb
mov
(bad)
jo
cmp
xchg
pop
leave
inc
test
fucomi
adc
cmc
ror
adc
push
dec
stos
sub
sub
xchg
test
fcomp
mov
push
cmp
dec
in
loop
sub
sbb
inc
and
stos
sbb
sub
lods
jae
out
push
and
sti
sbb
addr16
repnz
ins
adc
movs
movs
out
je
dec
inc
int
(bad)
(bad)
repz
pusha
scas
sahf
adc
enter
xchg
scas
xchg
adc
xchg
add
xchg
mov
hlt
leave
and
loop
or
jo
pop
mov
inc
sbb
movs
xor
fbld
or
xchg
ja
std
jno
fwait
xor
movs
fnstenv
or
mov
popf
fst
hlt
xor
xchg
movzx
push
addr16
mov
loop
int3
mov
fimul
sub
or
push
jg
imul
inc
ss
pop
sar
lods
fcomi
ret
test
test
jl
jae
shl
jb
popa
retf
xor
clc
bound
bound
popa
(bad)
xor
test
cmp
jl
call
ins
stos
stos
je
into
jmp
dec
jecxz
repnz
fwait
cmp
pop
into
and
rcr
jne
jmp
or
in
jns
int3
js
xchg
xchg
enter
pushf
xchg
pusha
repnz
mov
repz
add
xchg
xchg
push
call
mov
retf
xadd
ss
sbb
push
xor
clc
outs
rcr
push
test
jne
(bad)
loop
popf
mov
jae
repnz
leave
mov
ins
(bad)
repz
sub
sbb
das
pop
cmps
(bad)
cmps
aam
retf
out
push
jbe
not
shl
and
nop
aaa
cmp
js
movs
add
sti
sbb
jg
test
sbb
or
jno
mov
dec
movs
fwait
repz
and
mov
sbb
dec
push
mov
repz
jle
imul
shl
fs
jo
add
push
sbb
icebp
pop
mov
popa
jmp
and
pop
mov
inc
or
jae
inc
xor
call
ja
sbb
mov
xchg
add
push
push
adc
je
es
jae
inc
mov
inc
mov
xchg
mov
(bad)
jae
cmp
(bad)
je
dec
arpl
mov
int
mov
xchg
cmp
adc
popa
jb
and
aad
inc
ins
fwait
mov
test
lahf
shl
push
sbb
rcr
(bad)
mov
jno
arpl
cmp
push
add
sbb
cmp
jae
sbb
or
nop
imul
sbb
add
jne
test
sbb
pop
xor
fst
popa
mov
into
add
xchg
pminsw
mov
cmp
repz
pushf
xchg
push
xchg
outs
pop
jae
sbb
lahf
retf
and
in
sbb
adc
mov
mov
test
xchg
adc
sub
mov
push
sbb
push
dec
out
add
int
push
lahf
xor
adc
loop
sub
mov
mov
pop
adc
test
and
mov
jae
out
mov
mov
dec
mov
cmp
inc
or
adc
leave
arpl
sbb
pushf
lds
add
jle
fs
dec
xor
dec
add
add
mov
imul
int
retf
mov
addr16
sub
dec
adc
mov
sar
lds
push
and
mov
inc
ret
and
(bad)
rcr
add
push
adc
je
or
(bad)
fwait
xchg
in
jne
retf
movs
ret
out
lock
push
ret
push
sbb
or
mov
mov
xor
les
ja
push
jae
push
or
fdivr
and
jbe
call
pop
in
xlat
sti
jp
stos
test
mov
arpl
jecxz
add
and
push
mov
retf
aam
lods
mov
mov
cmp
inc
jns
mov
inc
dec
pop
aas
outs
push
and
inc
fcomp
shl
push
rcr
ret
ret
sbb
sub
lods
mov
out
lock
jle
clc
imul
(bad)
outs
pop
pop
pop
fwait
mov
bnd
scas
inc
(bad)
(bad)
sbb
cli
and
mov
mov
daa
push
cmps
and
push
in
mov
aaa
jae
inc
pop
icebp
fwait
sbb
jmp
retf
push
sbb
sub
mov
sub
imul
icebp
es
fs
or
pop
call
push
dec
adc
mov
push
or
sub
mov
sbb
or
add
jp
and
movs
adc
jb
mov
xor
adc
test
jnp
and
mov
cdq
xchg
fcom
int
pop
sub
and
scas
sbb
adc
push
mov
jl
cmp
jb
jg
cmp
ret
jns
lahf
dec
sub
mov
mov
mov
addr16
cmps
cmp
sti
xchg
jnp
pop
arpl
inc
fistp
aam
test
mov
pop
dec
and
fcomi
mov
sub
into
mov
scas
add
mov
jae
inc
push
adc
shl
pop
cmp
jae
cmp
add
and
(bad)
push
mov
jae
je
out
popa
in
xor
mov
mov
mov
xor
lea
call
mov
xchg
jmp
test
(bad)
adc
mov
lock
jl
icebp
ja
sbb
arpl
jge
mov
inc
sbb
stos
lock
data16
push
int3
shl
sub
sbb
out
inc
ffree
dec
out
movs
xchg
repnz
movs
jecxz
lock
int
lds
dec
or
and
add
jmp
inc
dec
mov
bound
enter
push
xchg
dec
mov
lahf
jne
fidiv
xchg
enter
adc
gs
push
fldenv
dec
push
adc
fld
cdq
sbb
and
sub
pushf
ins
stos
and
mul
dec
mov
or
xor
or
aad
loope
xchg
adc
repnz
inc
mov
xor
rdpmc
fstp
int3
test
je
cmp
mov
fld
rcl
sahf
mov
ret
push
lds
sbb
lea
cmp
cli
pop
retf
push
cld
aam
(bad)
sub
arpl
jmp
add
nop
fprem
cli
mov
bound
cmc
sub
hlt
jmp
and
bswap
pop
stos
dec
mov
cmp
shr
sub
movs
jb
cwde
sbb
xchg
lods
ja
int
pusha
sahf
mov
fwait
cmp
scas
add
je
cmp
out
pop
mov
mov
test
push
into
int
jl
mov
mov
xor
or
add
mov
push
push
cdq
or
sbb
adc
and
jae
sti
js
sub
cs
or
inc
les
xor
jb
mov
test
ret
or
and
or
add
xor
bnd
mov
scas
fdiv
or
stos
inc
xor
jecxz
jnp
xchg
sbb
das
lods
stos
jg
or
sbb
sub
and
test
jae
lds
hlt
fs
jae
stc
inc
xor
ret
sbb
pop
cmp
or
sbb
push
arpl
xchg
fnstcw
les
mov
adc
ja
mov
push
xchg
mov
mov
pushf
(bad)
out
adc
dec
(bad)
scas
adc
sbb
arpl
ror
jmp
xchg
sahf
jae
ins
pushf
call
sbb
popa
ret
xchg
xchg
xor
sub
out
sahf
repnz
call
(bad)
cwde
adc
in
xchg
dec
xchg
popf
push
pushf
adc
scas
push
lods
pop
jl
cdq
mov
mov
imul
or
xchg
sub
pop
inc
pop
jnp
ss
jb
adc
adc
xchg
cwde
je
mov
iret
sbb
cmp
enter
pop
xchg
pop
push
mov
xchg
in
fnsave
outs
outs
mov
mov
add
xchg
push
lock
(bad)
in
mov
cmp
lea
call
imul
xor
in
popa
mov
outs
inc
jnp
je
je
(bad)
movs
jg
iret
push
call
mov
cwde
cmps
add
cmps
adc
clc
dec
inc
icebp
les
adc
pop
jnp
(bad)
aam
xor
push
jg
mov
cmps
jge
popa
lahf
inc
xor
inc
mov
pop
lahf
call
xchg
hlt
out
adc
jae
mov
pop
push
inc
jmp
mov
sbb
mov
sbb
fst
dec
fiadd
mov
fidiv
leave
arpl
aaa
sti
retf
jns
mov
pop
xor
push
pusha
inc
mov
mov
pop
sahf
shl
sahf
leave
mov
call
sub
mov
clc
jae
or
out
arpl
or
mov
dec
pop
shr
pop
mov
xchg
cmc
add
fwait
adc
xchg
pushf
out
shl
push
aas
inc
call
in
addr16
xchg
cmp
jle
or
aam
xor
mov
cwde
xchg
out
cs
repz
shl
data16
pop
sbb
ret
xchg
xor
hlt
pop
hlt
setge
sub
into
sbb
mov
inc
mov
mov
dec
mov
rcr
xor
jno
pop
pop
push
ja
pushf
repz
mov
aam
mov
sbb
mov
or
jmp
mov
ins
je
(bad)
ja
not
push
or
jae
(bad)
pop
repz
stos
ret
sbb
add
iret
pop
dec
mov
and
retf
cmp
push
push
test
adc
adc
sbb
sti
leave
xchg
mov
mov
scas
imul
int3
push
cmp
das
aaa
and
and
imul
loopne
mov
(bad)
aam
in
call
iret
push
pop
clc
jns
pop
sbb
push
outs
and
xor
nop
jns
xchg
sti
jno
mov
lods
jnp
jnp
lods
cmps
sbb
pop
push
mov
push
push
dec
cmp
xor
pop
jmp
cmp
cs
fcom
dec
lahf
push
mov
mov
std
jns
mov
xchg
mov
sbb
repz
pop
jle
adc
(bad)
fstp
jmp
xchg
add
enter
cmp
int
popf
push
dec
in
mov
fcomp
leave
scas
sar
jl
aam
aad
or
xor
js
mov
mov
je
int
pop
pusha
aaa
lods
mov
mov
les
outs
pop
lods
jae
and
mov
xchg
lea
pop
repnz
jae
add
mov
sub
in
mov
xchg
inc
mov
adc
cdq
jecxz
mov
movs
ret
out
mov
out
arpl
adc
aaa
mov
jae
lahf
jo
mov
jne
mov
xor
push
sbb
stos
jg
or
dec
mov
inc
lods
dec
push
pop
inc
or
push
(bad)
mov
push
cdq
inc
in
pop
add
int
xchg
cwde
inc
pop
cmps
lea
pop
les
daa
jns
add
add
ror
cwd
outs
jmp
int3
nop
scas
out
movs
icebp
fwait
ins
stc
sub
stos
jnp
sahf
mov
xchg
xor
stos
dec
ss
repnz
mov
jne
test
mov
mov
mul
int3
stos
xor
pop
nop
mov
int
loopne
or
push
xor
mov
ds
bswap
or
push
sub
stos
stos
stc
jecxz
xchg
push
push
sbb
cmp
push
xchg
xor
popf
bound
(bad)
cli
push
(bad)
sub
mov
loopne
push
cmovge
dec
test
push
movs
mov
(bad)
mov
mov
add
lods
pop
pop
jne
jns
push
bound
cld
xchg
fcomp
cmp
js
enter
mov
xchg
rcl
jae
add
dec
adc
inc
sti
les
sar
cwde
pop
jae
sbb
jmp
sbb
dec
(bad)
mov
cmp
push
xchg
lds
dec
pop
jb
cmps
xor
cmps
sub
in
arpl
das
stos
cli
gs
jbe
mov
cmp
repnz
or
sbb
call
addr16
mov
jae
aam
aaa
cmp
sub
mov
cmp
xchg
fbld
sar
lods
scas
jae
imul
repnz
push
mov
and
sub
jmp
icebp
mov
das
pop
sahf
data16
adc
jnp
lahf
jg
mov
std
jns
push
stc
pop
repz
mov
fs
jmp
xor
scas
inc
adc
clc
sub
idiv
cmp
push
or
pop
std
lds
mov
mov
or
sbb
pop
loop
xchg
ret
inc
fs
int3
repnz
out
xchg
jo
fsub
mov
and
xor
popf
sti
push
push
push
lods
pop
ja
adc
sub
adc
inc
nop
mov
mov
adc
jecxz
adc
mov
shr
fwait
outs
cmp
add
pop
(bad)
ins
fbstp
ja
sub
cmp
or
mov
mov
es
xor
cmp
out
adc
sbb
inc
out
dec
fisttp
jle
cwde
jnp
stc
call
add
mov
sub
push
sub
mov
push
dec
add
aas
mov
retf
aaa
shr
xrelease
add
or
push
cmp
sahf
out
push
pop
in
xchg
mov
jns
mov
sbb
push
jbe
sbb
jne
je
sti
mov
loope
gs
call
test
add
and
mov
mov
cmp
stos
ds
adc
adc
push
inc
pusha
in
clc
int3
call
sub
mov
push
cmps
test
xor
push
or
sbb
cmp
cmp
push
mov
stc
inc
cli
add
jmp
xlat
jle
stos
cmp
add
shl
mov
mov
loop
push
aaa
mov
popf
cmp
ins
xlat
data16
popf
xor
pop
cs
into
xchg
movs
pop
xor
ret
pusha
das
adc
aaa
fcom
xor
sub
sbb
pushf
sti
ret
mov
cmp
test
sbb
xor
inc
add
js
int
pop
stc
fadd
repz
dec
inc
sahf
sbb
jl
and
sub
mov
add
test
cmps
cmps
jmp
arpl
in
rep
mov
ins
xor
xlat
xchg
xchg
push
or
iret
pop
jmp
bnd
shr
xchg
cli
push
xor
das
les
xor
jl
cld
adc
jmp
and
mov
sbb
(bad)
icebp
das
movs
repnz
mov
pop
stc
push
retf
pop
lock
(bad)
repz
xchg
(bad)
enter
pop
adc
hlt
add
inc
cmp
mov
mov
jp
arpl
jns
sbb
pop
dec
int
jnp
sub
push
pop
xchg
mov
mov
icebp
lods
sbb
jbe
xor
mov
mov
sbb
jp
mov
jnp
popf
jae
xor
pop
callw
sbb
dec
mov
or
lds
push
lods
(bad)
mov
add
adc
or
xor
pop
mov
xor
call
dec
mov
sub
push
jae
jno
or
mov
jp
jb
out
out
in
xor
hlt
mov
leave
jecxz
call
inc
clc
push
and
popf
int3
sub
clc
in
in
mov
stos
sbb
jmp
push
in
ins
sbb
fs
jns
leave
cld
or
xchg
scas
mov
add
jae
sbb
lods
imul
push
or
mov
or
xor
mov
or
mov
mov
mov
adc
lods
mov
dec
ds
mov
inc
mov
dec
add
push
xor
bnd
iret
jl
in
mov
and
(bad)
out
push
push
mov
es
xor
xchg
in
popa
jmp
shl
adc
mov
rol
push
aam
pop
jnp
jns
imul
movs
sbb
jle
add
xor
cld
fild
sbb
jl
ja
or
mov
vpshlb
retf
inc
sub
push
outs
sahf
loopne
mov
bound
mov
dec
arpl
out
jp
cmps
fisub
sbb
mov
jae
daa
mov
or
in
add
gs
push
adc
les
mov
outs
hlt
mov
pop
movs
mov
xor
leave
mov
pop
(bad)
cmc
jae
pusha
lods
sbb
cmp
or
sbb
adc
(bad)
mov
pop
les
leave
xchg
jg
sbb
pop
adc
xchg
jbe
retf
jge
and
xor
inc
mov
fdivr
xchg
cmp
mov
mov
or
test
sub
cmps
add
imul
xchg
addr16
mov
ds
mov
dec
xor
ins
inc
xor
aad
cmp
mov
call
int3
xor
sbb
arpl
sbb
xchg
push
mov
out
push
cmps
mov
jo
leave
sbb
mov
ins
sahf
nop
(bad)
aaa
xor
dec
aam
sbb
xchg
lds
in
imul
or
inc
add
test
pop
outs
mov
push
out
mov
js
inc
fdivr
cmp
mov
dec
sub
test
scas
jne
cmc
cmc
push
test
data16
mov
xor
lods
idiv
fadd
lock
mov
jge
pop
inc
dec
or
sbb
xchg
xor
mov
mov
mov
sub
xor
cmps
imul
push
enter
and
jg
pop
add
cmc
adc
adc
sub
jns
lds
shr
aad
cmps
mov
dec
(bad)
in
and
sbb
adc
inc
ret
pop
(bad)
sbb
je
mov
cmp
adc
inc
mov
loop
pusha
mov
adc
mov
fwait
adc
in
std
cmp
and
push
cld
sbb
jno
arpl
leave
lahf
in
mov
aas
and
xchg
aaa
jl
loop
repz
mov
sub
ins
push
sbb
outs
stc
ret
adc
enter
fucomip
and
xor
mov
addr16
dec
push
adc
and
cmp
outs
lods
sub
rol
out
mov
adc
scas
cli
push
xchg
jmp
jl
int
call
add
in
cmp
popa
xor
dec
inc
cwde
mov
mov
xor
cli
js
push
xchg
push
pop
fwait
scas
loope
push
in
hlt
push
das
retf
cmp
iret
jae
jmp
aam
push
adc
test
(bad)
xor
retf
add
jo
push
sbb
pusha
and
mov
fldcw
pop
jecxz
leave
jne
adc
in
int3
jb
mov
clc
(bad)
jno
mov
push
sub
push
jmp
pop
mov
adc
mov
scas
rcl
jecxz
cdq
inc
sti
or
fsubr
mov
push
jnp
mov
shl
pop
(bad)
in
and
xchg
lods
stos
xchg
outs
mov
or
sbb
call
cld
sbb
mov
cmp
jg
dec
test
push
movs
fimul
push
add
xchg
sbb
ret
dec
inc
lahf
cld
ins
dec
sbb
js
xchg
adc
adc
push
jb
dec
inc
mov
adc
jae
repz
test
xchg
call
cmp
movs
cmp
xor
jmp
xchg
sbb
test
scas
(bad)
(bad)
xor
aaa
out
cmps
push
retf
rcl
data16
gs
mov
retf
enter
mov
repnz
cmp
or
xchg
push
call
mov
mov
pop
dec
inc
mov
mov
rol
aad
xchg
imul
cmps
pop
mov
les
(bad)
xor
movs
cmp
sbb
fiadd
ins
push
push
gs
mov
xchg
(bad)
inc
bound
jg
jno
mov
mov
outs
jb
mov
xchg
sbb
aam
mov
stos
fdivr
mov
or
inc
mov
jecxz
mov
sbb
and
sub
mov
inc
retf
out
fld
fcomp
outs
mov
int3
mov
xor
pop
pushf
xor
test
pop
je
mov
cmp
das
cmp
cs
or
sub
leave
add
xchg
cmp
not
dec
cmp
adc
fmul
adc
push
repnz
cmps
mov
push
in
xchg
mov
mov
imul
lds
xlat
add
retf
ficom
test
push
pop
xor
push
push
push
push
loope
fild
ror
push
fcmove
xor
mov
scas
mov
cld
in
sbb
push
inc
and
jg
mov
sub
add
js
(bad)
push
test
and
js
xor
pop
push
mov
xor
lods
push
jb
and
(bad)
dec
push
xchg
mov
repz
inc
cld
jno
mov
pop
push
les
inc
out
pop
jae
pop
jb
inc
test
into
hlt
rol
xchg
dec
cdq
les
cmps
dec
cmp
fst
out
(bad)
aam
mov
xchg
mov
aaa
sub
push
repz
pop
mov
fcomi
cmps
je
sub
and
jnp
retf
jmp
push
pop
imul
imul
into
shr
mov
arpl
scas
or
mov
mov
jbe
jmp
mov
outs
sbb
pop
push
into
push
je
mov
jge
clc
xchg
jae
enter
adc
loop
sub
into
popa
cmp
loopne
icebp
aam
jno
rcr
adc
aad
js
fidiv
pop
push
outs
sbb
loopne
pop
sub
and
fisubr
call
scas
adc
lods
mov
test
nop
xchg
and
mov
jbe
jecxz
mov
add
cmc
fiadd
push
nop
(bad)
fsub
cdq
int
xchg
push
push
retw
dec
xor
sbb
jp
stc
cmp
pop
mov
inc
and
pop
jns
xor
push
mov
mov
sub
sti
xchg
adc
(bad)
push
jae
andps
inc
xor
xchg
mov
scas
xor
adc
js
push
adc
adc
jp
in
add
pop
xor
pop
mov
repz
or
dec
mov
xor
ss
and
mov
or
cdq
xchg
and
hlt
or
popa
cli
pop
jae
lods
(bad)
dec
push
in
sub
ins
mulps
repz
xor
pop
xor
mov
mov
sbb
das
(bad)
adc
and
movs
push
pushf
lock
fiadd
test
and
cmp
mov
lds
cmp
push
xchg
push
or
adc
aam
in
jmp
pushf
mov
(bad)
pcmpgtw
je
push
outs
xchg
jbe
nop
mov
div
repz
fistp
jmp
mov
xor
dec
out
ficomp
sub
adc
call
scas
stos
push
je
rol
add
add
addr16
jae
or
cwde
ss
sti
dec
fistp
ins
pop
push
repz
ja
test
sbb
imul
ins
mov
cmc
adc
jno
jns
test
inc
jmp
aaa
xor
mov
inc
mov
or
inc
out
fst
addr16
fadd
stos
hlt
mov
or
neg
call
jb
out
(bad)
xor
movs
mov
cwde
sbb
lods
fmul
pushf
mov
pop
push
mov
ror
pop
ja
xor
xor
pop
mov
mov
lock
jbe
and
mov
xchg
shr
sub
add
mov
add
mov
inc
jae
pop
cmp
pop
pop
cs
adc
pop
or
inc
sbb
sub
pop
addr16
pop
cmps
jmp
xor
cwde
push
mov
jae
mov
xchg
jmp
jne
shr
push
stos
push
sub
inc
not
mov
jno
call
xchg
stos
fwait
(bad)
leave
push
ja
mov
push
cdq
dec
pushf
ins
sti
jne
sbb
cmp
add
mov
cs
int
in
mov
jae
retf
mov
loopne
bound
dec
nop
leave
xchg
addr16
inc
adc
add
inc
imul
push
cmp
add
add
adc
cmp
mov
push
std
mov
test
inc
lods
imul
xchg
retf
pop
stos
jno
pop
ja
mov
hlt
cwde
iret
jmp
inc
sbb
dec
jl
repz
mov
or
pusha
les
sbb
sub
adc
cmp
leave
sub
cmp
ja
mov
xchg
dec
imul
sub
mov
inc
stos
int3
dec
stos
test
lods
pop
mov
fdiv
cmp
mov
ss
dec
mov
jg
cmp
xchg
or
mov
pop
push
jp
js
xchg
or
inc
jle
sub
(bad)
jae
cwde
and
aam
mov
fild
jae
xor
jl
mov
(bad)
jmp
(bad)
mov
and
or
int3
jae
cmp
cmp
je
cmps
outs
das
cmp
pop
xor
je
imul
jle
mov
inc
in
xchg
inc
(bad)
jnp
gs
xchg
and
call
repnz
aaa
out
cmp
fwait
addr16
sbb
fidivr
or
jno
cli
lock
enter
hlt
xchg
mov
fwait
sub
cmp
imul
hlt
js
sti
mov
adc
xchg
(bad)
retf
ins
mov
and
imul
mov
sbb
dec
stc
add
cmps
mul
sbb
ja
mov
mov
aam
sahf
jbe
pop
daa
xor
inc
cmps
mov
aaa
dec
enter
test
lahf
xchg
ins
push
ss
cld
sbb
pop
add
add
fild
sbb
mov
inc
gs
loop
lock
rol
adc
sub
lea
sub
lods
dec
(bad)
and
(bad)
cmp
push
xor
adc
and
pop
fwait
mov
pop
pop
into
stos
daa
test
adc
adc
jp
dec
dec
push
add
in
repz
and
jp
push
stc
dec
mov
xchg
(bad)
out
push
xor
mov
pop
pop
icebp
xchg
cmp
fwait
cli
mov
outs
push
aaa
stc
jae
mov
push
pop
movs
das
call
sahf
hlt
movs
pop
sub
push
out
sub
aam
and
test
call
in
sub
bound
sub
sbb
pop
push
sbb
mov
push
adc
ds
ss
dec
imul
jne
lods
pop
jmp
fucomi
sbb
inc
mov
adc
xor
lods
inc
mov
(bad)
dec
push
je
fldenv
leave
pop
xor
addr16
dec
pop
or
push
out
ds
xor
cdq
leave
mov
jg
lods
mov
pop
xchg
dec
je
ret
shl
mov
scas
ins
rcr
jno
fistp
imul
psllq
imul
xchg
inc
xor
add
(bad)
fdivr
jno
dec
and
rcr
jl
imul
and
xchg
cmps
jg
xchg
adc
ret
in
movs
mov
pushf
inc
jo
jae
mov
sub
pop
test
retf
rcr
sub
int3
xchg
cmp
cmp
add
lds
mov
stc
pop
push
je
lods
push
jl
push
cld
sub
nop
test
mov
sub
ret
cmp
aaa
push
inc
xchg
repnz
xor
(bad)
std
ficomp
add
not
es
clc
push
or
adc
inc
push
pushf
fs
or
pop
sbb
or
lea
sub
mov
dec
cmp
jge
dec
xchg
ins
(bad)
ins
scas
stos
(bad)
add
popa
adc
in
jb
sub
pop
mov
daa
or
jle
stc
push
push
sbb
sub
js
xor
push
mov
push
bound
inc
jecxz
mov
sub
sbb
data16
push
popa
mov
push
mov
int
sbb
mov
xchg
ins
sub
push
test
sbb
sbb
imul
xchg
mov
fwait
sub
ins
stos
and
je
jne
dec
fild
push
lods
xchg
dec
(bad)
shr
aam
out
adc
cmp
jge
in
cmp
test
je
mov
shr
lahf
jb
shl
xchg
mov
enter
mov
sbb
jg
les
pop
aad
pushf
retf
ds
mov
jl
fld
ins
mov
bound
arpl
fidivr
xor
pop
in
jecxz
rcl
push
pop
mov
jnp
cld
daa
test
xchg
mov
jae
sub
clc
sbb
movs
and
cdq
mov
sbb
sbb
xchg
shr
sti
lock
test
sar
sub
ja
and
lods
hlt
push
hlt
ret
cmp
xor
or
push
mov
pop
pop
xchg
test
movs
test
mov
ja
daa
pop
hlt
xchg
stos
imul
js
and
scas
sbb
movs
mov
jmp
xchg
leave
es
jl
add
mov
push
jb
stos
jnp
je
push
cmc
cmp
pushf
retf
xor
inc
aam
cdq
enter
js
xor
loop
in
and
sahf
push
jecxz
rcr
pop
sbb
sbb
lea
inc
in
lods
test
cmp
lods
add
add
(bad)
jge
jg
mov
mov
mov
jg
bound
(bad)
mov
ja
loop
mov
push
sbb
das
stc
test
test
pop
in
dec
jmp
dec
inc
dec
inc
mov
rol
sbb
lahf
out
test
mov
add
into
sub
fidivr
jecxz
sub
iret
movs
sbb
daa
shl
mov
xchg
sbb
pusha
add
inc
enter
enter
inc
mov
int
add
dec
movs
xchg
int3
add
ins
mov
out
push
mov
xor
scas
cmc
jae
aam
jae
cmps
xor
repnz
je
jmp
enter
leave
cmp
mov
test
cmp
aam
fdivr
and
jbe
shl
jmp
pop
std
sbb
inc
mov
mov
push
push
push
icebp
repz
push
ss
push
push
test
xchg
push
aad
inc
addr16
stos
mov
cmps
(bad)
pop
shr
outs
adc
in
movs
in
cwde
jo
or
sbb
cld
mov
stc
lods
mov
jg
lock
cli
and
jno
xor
push
movs
lea
mov
push
jae
ins
std
lock
add
sbb
push
bound
repz
jns
not
aas
push
adc
iret
scas
mov
push
je
call
call
adc
push
xchg
inc
jge
mov
lea
add
fs
push
cs
sub
out
xchg
xor
hlt
fst
mov
jge
cmp
mov
mov
mov
imul
cli
imul
sub
push
sub
ins
xchg
inc
(bad)
fdiv
mov
rcr
stos
jg
scas
nop
aad
push
aam
push
iret
je
stc
jnp
rcl
fist
mov
xchg
aas
test
test
xor
bnd
push
jbe
mov
jne
repnz
or
cmp
or
mov
sbb
inc
jp
mov
es
test
xor
fldcw
in
jo
pushf
lds
stc
mov
adc
scas
sbb
sub
mov
cmp
add
adc
push
add
ins
mov
xlat
out
leave
icebp
pop
pop
lods
lods
cmp
xlat
inc
cmp
push
js
cmps
push
add
push
xchg
jb
fnsave
xchg
add
rcr
xor
jg
pop
inc
and
std
push
lods
sbb
cwde
or
dec
outs
xchg
daa
call
jae
jge
cli
mov
daa
inc
jg
loopne
sbb
ja
sub
xor
or
adc
inc
mov
daa
pop
jecxz
cmp
sbb
adc
dec
add
lods
jo
mov
into
repnz
fnsave
mov
int3
out
and
and
mov
aad
jp
repnz
aaa
aam
cwde
fcomi
es
mov
pop
test
dec
loopne
sbb
xchg
jnp
inc
cmps
mov
pop
shr
pop
mov
mov
or
sbb
cmps
std
cmps
out
pop
jae
mov
fsub
ret
mov
out
dec
mov
mov
pop
imul
sbb
adc
push
xor
and
or
xchg
inc
mov
(bad)
mov
cli
icebp
or
(bad)
mov
enter
pusha
pop
pop
mov
mov
mov
fldenv
xchg
adc
inc
das
pop
dec
mov
fdivr
repz
mov
xor
and
mov
xchg
into
ins
adc
mov
mov
adc
repnz
inc
add
(bad)
jmp
jb
lods
xor
xor
pusha
mov
popf
call
mov
and
dec
(bad)
jmp
icebp
enter
or
imul
pop
mov
sti
add
mov
cmp
cmp
mov
sub
inc
inc
or
jmp
in
in
dec
popa
sbb
jg
dec
dec
cmc
adc
push
jb
xchg
pop
pusha
jecxz
fs
xor
jmp
mov
jmp
cmps
pop
js
not
sub
dec
xchg
cmp
xchg
jb
dec
(bad)
xor
lods
sbb
stos
pusha
icebp
out
shr
out
outs
xchg
mov
mov
xchg
pop
aaa
adc
mov
aas
mov
push
into
nop
sub
nop
push
cmp
sti
dec
jo
sub
push
les
pop
cwde
lea
es
mov
(bad)
(bad)
aam
(bad)
lea
inc
or
jl
and
test
inc
adc
fstp
pop
cmp
pop
out
xor
sub
inc
fdivr
adc
xor
pop
sub
jle
out
dec
jae
xor
test
and
xchg
aas
mov
or
jg
sbb
mov
cmp
xor
or
or
mov
inc
or
fimul
xchg
stc
ja
or
sub
sub
movs
scas
jae
or
out
mov
sub
mov
stos
imul
pop
mov
adc
bnd
int
xchg
push
inc
loopne
dec
jae
pop
jnp
lods
sub
ret
inc
mov
sbb
hlt
cmp
and
add
cmps
mov
xor
stos
xchg
idiv
mov
dec
jo
(bad)
xchg
push
dec
dec
mov
test
fmul
fdiv
in
mov
dec
repnz
retf
sub
clc
adc
aas
and
push
sbb
inc
fiadd
stc
mov
sub
fistp
scas
retf
addr16
adc
mov
or
cmp
or
test
mov
xchg
sub
jnp
adc
call
inc
pop
fwait
pusha
in
or
rcl
push
sbb
adc
mov
inc
icebp
jb
daa
repz
daa
jo
out
cmp
das
adc
outs
jle
sub
inc
pop
jmp
or
movs
inc
in
shl
mov
mov
pop
mov
adc
fdivr
xchg
jp
shl
mov
dec
cmps
jns
or
nop
cmp
dec
adc
xlat
pop
neg
adc
scas
fcmovnbe
popa
out
sbb
jbe
loop
pop
sbb
sahf
mov
cdq
popa
mov
mov
mov
cmps
mov
sub
lods
sbb
jmp
jnp
in
and
mov
in
mov
mov
xchg
mov
xchg
test
cli
(bad)
je
retf
push
mov
mov
cwde
sub
cmp
and
add
cdq
xchg
pop
int3
in
sbb
fwait
retf
or
nop
xchg
ret
add
mov
pop
gs
xor
sbb
sub
sahf
cmp
fld
sbb
adc
shl
test
dec
mov
movs
mov
mov
push
push
xor
cwde
mov
ins
sub
aam
sub
les
or
pop
mov
stos
mov
popf
icebp
push
xor
jo
dec
in
or
retf
xchg
(bad)
and
sbb
lock
test
sahf
push
icebp
call
xchg
dec
enter
(bad)
stos
adc
or
fs
jmp
inc
mov
push
sbb
add
mov
test
push
into
mov
pusha
xchg
mov
pop
imul
mov
popf
fsubr
cmp
das
push
ficomp
jae
daa
mov
jnp
test
sbb
adc
mov
push
mov
pop
jl
mov
mov
dec
inc
adc
call
iret
xchg
retf
mov
cmps
mov
jbe
sub
imul
outs
(bad)
aad
xchg
jge
aad
dec
inc
push
iret
repz
add
cmc
xchg
je
add
gs
movs
dec
inc
cwde
dec
mov
pop
inc
add
pop
mov
xchg
xchg
mov
and
test
push
and
mov
xchg
pop
std
hlt
push
add
and
call
retf
cmp
aaa
mov
in
loop
lds
mov
push
das
cld
dec
xchg
pop
xor
aam
repz
jge
mov
pop
push
mov
inc
inc
push
les
sti
dec
sub
popa
dec
mov
outs
mov
jmp
xchg
call
mul
cmc
out
test
dec
pop
dec
mov
ret
fs
xor
aas
push
cld
inc
fwait
add
add
xchg
pop
iret
jae
mov
sbb
lea
jecxz
cdq
lods
mov
call
add
fwait
icebp
std
add
pop
loope
out
paddw
sbb
rcl
mov
jg
xchg
push
adc
fcomp
inc
xchg
pop
jae
retf
pop
test
loopne
xchg
addr16
mov
mov
stos
mov
mov
fsub
xchg
mov
(bad)
add
jae
clc
ja
jb
stos
adc
fild
in
pusha
retf
jne
push
stos
push
xor
adc
rcr
jnp
out
jne
or
mov
sbb
jmp
or
jmp
xchg
mov
aam
test
or
mov
inc
fadd
ja
push
fadd
lds
jmp
cmp
in
not
cld
adc
jge
mov
xlat
pushf
enter
pop
sbb
pop
lds
inc
jno
mov
test
mov
(bad)
int
push
je
cmp
pop
or
xchg
or
in
sbb
and
ja
hlt
std
add
push
pop
push
pop
in
cmp
pop
inc
ins
leave
add
mov
imul
xor
sub
add
push
pop
mov
mov
mov
and
repnz
cs
dec
inc
dec
pushf
pop
ins
adc
jae
sub
outs
pushf
mov
push
dec
jmp
and
stos
jg
scas
arpl
into
dec
jbe
scas
adc
loope
mov
fwait
movs
pop
ret
fidivr
test
push
into
in
popf
cli
test
mov
hlt
clts
xchg
sub
xor
cli
and
adc
ret
sbb
das
dec
push
sub
or
xchg
dec
xchg
xchg
add
sub
fcmovu
jo
mov
sti
xor
adc
dec
data16
lock
jge
mov
minps
pop
sbb
mov
sbb
repnz
fild
or
mov
dec
ud1
cmps
xchg
add
mov
ffree
(bad)
sbb
xor
(bad)
ret
ret
pushf
daa
in
ds
push
jmp
mov
push
push
inc
je
ins
int
fnstcw
cmp
in
and
mov
xchg
xlat
mov
stos
mov
cmps
adc
jae
(bad)
imul
xor
sar
jle
push
ret
push
push
mov
push
pop
xchg
add
shl
(bad)
push
sahf
dec
movs
xor
dec
xchg
xor
nop
cmp
inc
les
dec
mov
push
lods
fist
(bad)
sub
cmp
hlt
aas
mov
repnz
mov
rcl
pop
lock
ret
sahf
mov
and
mov
adc
sub
cmps
hlt
(bad)
cld
cmp
or
int
and
movs
adc
retf
icebp
dec
loop
add
fdiv
mov
pusha
ins
jae
fdiv
pop
fisub
out
rcr
mov
add
fnsave
xchg
jbe
test
xchg
jp
adc
jns
xor
sbb
cld
mov
sbb
inc
pop
icebp
mov
(bad)
fnstsw
mov
lods
(bad)
ja
fist
hlt
aad
(bad)
in
pop
inc
into
aad
arpl
inc
pop
or
push
sti
loope
and
fld
dec
jae
dec
xor
mov
ins
push
push
and
rcr
ins
adc
js
jo
test
(bad)
pop
mov
and
(bad)
je
mov
add
int
push
add
in
mov
gs
pushf
in
sti
push
xchg
repz
test
dec
hlt
jne
lods
add
jg
lahf
mov
mov
(bad)
jbe
test
mov
es
mov
invd
in
in
data16
fmul
mul
outs
xchg
and
shl
in
hlt
scas
mov
fwait
mov
retf
mov
cmps
cdq
jmp
dec
aaa
or
sub
int3
mov
push
lahf
fs
popf
mov
ret
inc
les
sub
mov
aad
mov
jo
aad
xchg
into
jbe
pushf
repz
dec
sub
and
push
sti
sbb
cmpxchg
clc
sbb
jo
stos
xchg
pop
aam
repz
jg
sub
pop
mov
or
push
enter
push
stos
into
or
outs
add
mov
push
mov
xchg
add
lods
loop
mov
stos
test
ss
and
pop
hlt
enter
mov
push
pop
sbb
push
ror
sbb
lods
enter
call
mov
fcmovnu
add
push
dec
pop
inc
jns
(bad)
ret
repnz
in
push
pop
pop
(bad)
es
cmp
ja
outs
jnp
jbe
popa
cs
xor
popf
xlat
scas
xchg
popa
int
test
cmp
xchg
add
shl
gs
adc
mov
sub
test
cdq
enter
movs
je
ja
aad
test
fdiv
test
pop
cmp
push
push
gs
push
not
sbb
sbb
mov
mov
jne
mov
rcl
sahf
jg
dec
push
cmps
dec
inc
pop
cmp
mov
xor
dec
xchg
outs
repnz
pushf
sti
fwait
dec
in
aaa
mov
adc
nop
sbb
adc
iret
pushf
movs
mov
xchg
pop
retf
sub
(bad)
jo
imul
xchg
mov
(bad)
test
or
jnp
jge
mov
mov
stc
cmp
aam
mov
or
or
push
ror
(bad)
out
add
or
pop
sbb
mov
push
xor
adc
sub
call
push
lahf
in
adc
ja
in
cmp
jne
mov
cli
sbb
adc
inc
lock
sub
les
or
dec
cmp
(bad)
xor
sub
mov
jg
leave
cmc
idiv
jne
xchg
jae
push
or
dec
sbb
mov
push
jecxz
inc
fsubr
leave
mov
xor
cmp
inc
cmp
in
nop
sub
movs
test
xchg
cmp
inc
xchg
adc
sbb
and
clc
sbb
fstp
add
mov
cli
jb
mov
int3
dec
rcl
in
push
or
ret
(bad)
mov
mov
xor
pop
pop
jmp
cdq
adc
sub
add
xor
dec
(bad)
rol
test
or
xlat
cmp
sub
fstp
sbb
aas
sti
les
gs
push
sbb
stc
mov
or
mov
cmp
test
jmp
mov
dec
lods
popf
ret
cmc
xchg
or
jmp
ins
push
icebp
sbb
sbb
ret
jecxz
sbb
sbb
loop
es
out
cs
ja
movs
fwait
sbb
push
inc
mov
jl
jbe
xchg
dec
cmc
mov
jne
cmp
jno
sub
mov
rcl
adc
mov
dec
mov
xchg
add
and
add
jne
jo
and
cmps
adc
stos
adc
jl
or
ds
popa
std
push
pop
inc
cld
int
gs
mov
pushf
jg
or
adc
inc
inc
xchg
stos
aad
jge
jle
(bad)
or
sar
and
sbb
xchg
inc
push
scas
ins
jne
push
les
pop
mov
and
or
and
jmp
sub
inc
adc
ficom
mul
outs
jmp
mov
lds
aam
ror
(bad)
bound
xchg
push
js
xchg
shr
rcr
sbb
cmp
jl
inc
scas
data16
scas
push
retf
jae
adc
outs
dec
cmps
popf
mov
xor
jmp
arpl
addr16
push
dec
jno
xlat
push
and
fwait
or
imul
push
mov
cmc
mov
mov
(bad)
std
jle
icebp
xchg
jbe
xor
or
pop
and
es
dec
xchg
xor
ins
and
pop
sub
hlt
jp
imul
gs
cmp
xchg
mov
pop
xor
xor
movs
push
cdq
jb
test
mov
movs
int3
or
fnsave
and
fwait
pusha
movs
call
sti
or
jns
stos
mov
sbb
nop
jae
(bad)
or
mov
push
imul
(bad)
out
fimul
pop
push
xchg
call
shl
in
and
das
out
lods
sbb
sub
mov
mov
and
dec
imul
or
and
movs
xchg
fptan
sbb
sbb
mov
pop
mov
xor
repz
jg
xchg
push
xor
xchg
pop
cmp
and
pop
imul
sbb
dec
push
cmp
jp
jo
or
fwait
les
shl
jns
scas
cmps
pushf
push
mov
packuswb
aas
push
imul
push
icebp
and
xchg
pop
pop
jp
pop
xor
cmps
cs
mov
(bad)
movs
sbb
xor
mov
cwde
mulps
repnz
int
inc
sbb
ror
xor
mov
xor
mul
sysenter
movs
mov
push
mov
cli
sbb
jmp
outs
jns
xchg
mov
jmp
jbe
add
mov
cmps
cmp
dec
pop
nop
movs
jnp
cmovl
mov
ja
inc
movs
sub
xchg
iret
ret
jge
push
jno
ins
stc
adc
arpl
aam
(bad)
int
mov
hlt
mov
out
fs
add
mov
jne
push
xor
shl
xchg
out
aad
lods
fidiv
mov
fist
dec
mov
sub
int
out
mov
xchg
add
add
aad
xchg
sub
mov
xchg
dec
jle
add
fistp
out
mov
popf
(bad)
cmp
adc
paddq
popa
adc
cs
jl
(bad)
outs
cmp
xlat
xchg
xlat
adc
js
fdiv
aam
xchg
xchg
jo
mov
sbb
push
and
call
std
mov
call
sbb
fdiv
dec
mov
xor
sbb
jae
mov
out
movs
clc
jne
es
comiss
jo
jecxz
mov
fistp
aam
inc
aas
js
cmps
inc
lahf
jae
lods
jg
mov
inc
lods
adc
ret
cmp
sbb
ja
pop
in
shl
and
sbb
sub
pop
dec
sub
(bad)
in
in
std
mov
scas
aas
and
pop
call
and
xlat
dec
leave
pop
add
pusha
lahf
sub
xor
(bad)
or
fstp
fmulp
or
sub
daa
or
dec
addr16
dec
fdivr
jnp
inc
push
cmp
into
xchg
retf
sbb
je
fnstcw
inc
ret
jb
int
stc
adc
xor
cmp
(bad)
mov
sbb
mov
mov
lods
mov
or
push
jns
pop
push
xchg
or
pop
mov
mov
cmp
das
pop
cmp
into
sti
ins
int
loopne
push
inc
push
stc
inc
mov
push
or
and
push
push
dec
xchg
xor
xor
cmps
imul
sub
sbb
sbb
sahf
dec
(bad)
hlt
sbb
mov
cmp
repz
aas
jns
sub
adc
(bad)
sti
adc
sub
push
push
dec
jmp
push
dec
rcr
repz
xchg
adc
lahf
(bad)
int
js
shl
and
sub
xor
xor
pop
inc
mov
jle
js
aam
shl
cdq
pop
xor
inc
xchg
dec
stc
and
(bad)
lock
call
pop
ret
addr16
or
sbb
pop
dec
les
dec
jae
cdq
push
sbb
mov
jmp
and
jne
lahf
jae
jns
in
fwait
jl
sub
jmp
xlat
cmp
push
mov
cmp
lods
xchg
hlt
loope
lods
push
in
cmc
retf
out
cmp
je
xchg
repnz
(bad)
ins
push
or
jmp
into
mov
jge
cmp
mov
das
mov
in
pop
lea
mov
cmps
inc
push
outs
xchg
sbb
icebp
push
sub
(bad)
cmps
dec
push
(bad)
sub
adc
and
aas
cmps
add
int
cli
cmp
pop
xor
scas
xor
mov
dec
into
cli
pop
cmps
lds
dec
mov
pop
or
inc
adc
and
fmul
test
adc
rcr
xlat
xchg
sti
cmp
adc
ins
or
or
jb
mov
dec
jmp
ror
js
mov
cld
mov
dec
sti
mov
pop
pop
sbb
pop
data16
mov
inc
adc
pop
xor
add
test
retf
fwait
out
mov
adc
mov
lods
sar
and
(bad)
pop
add
jnp
fmul
pop
(bad)
hlt
inc
and
popa
call
neg
push
repnz
mov
xchg
mov
ret
retf
dec
xchg
xchg
gs
cmp
dec
and
es
push
retf
xor
sub
add
scas
dec
push
xchg
push
repnz
shr
mov
dec
push
inc
outs
sub
add
jle
call
call
test
jnp
mov
loopne
retf
popf
adc
ret
retf
scas
mov
outs
mov
icebp
cmp
mov
rcr
xchg
add
or
addr16
gs
lock
js
das
or
stc
xchg
pop
xchg
xor
inc
sub
inc
rep
xor
inc
jo
jecxz
stos
jge
in
jle
mov
iret
jmp
mov
(bad)
xchg
and
lods
data16
and
pop
adc
add
imul
aad
clc
dec
pop
jnp
mov
mov
(bad)
aad
sub
inc
adc
adc
jmp
les
les
inc
fisttp
jb
stc
or
pop
pop
jp
cli
arpl
mov
test
xor
pop
fiadd
mov
cmp
test
sbb
clc
xor
mov
cld
scas
mov
sbb
stc
jno
mov
adc
js
xor
cmps
push
mov
sahf
lds
jecxz
rcr
lea
in
adc
push
adc
jmp
push
imul
adc
andps
ins
jg
popa
popf
or
test
add
pop
stos
mov
mov
xchg
mov
leave
aam
daa
mov
dec
in
add
xchg
out
dec
retf
lahf
mov
sub
xchg
ins
data16
imul
dec
mov
(bad)
push
nop
mov
xchg
dec
loop
imul
adc
inc
scas
mov
jp
dec
mov
push
cmc
cmp
enter
aaa
stos
sbb
or
mov
(bad)
fst
xchg
jle
je
cmps
mov
(bad)
jbe
fcmovne
popa
test
mov
jg
ins
loopne
mov
dec
jne
inc
imul
pushf
cmp
test
mov
test
mov
enter
xchg
gs
cli
push
push
aad
jmp
test
gs
sbb
cwde
jp
adc
dec
sbb
fdivr
cmp
popa
push
ds
loope
jecxz
ret
jmp
fadd
adc
sahf
jg
movs
clc
into
cmp
push
fsubr
xlat
ror
adc
(bad)
mov
add
xchg
pop
pop
ja
inc
mov
mov
dec
xchg
mov
mov
and
pop
hlt
iret
and
fdiv
push
stos
inc
xchg
out
xchg
or
ja
icebp
iret
add
(bad)
fcomp
mov
add
inc
out
sub
xchg
sub
adc
push
ss
xor
sub
sbb
cwde
sbb
mov
sub
and
daa
pop
ja
not
xor
scas
sub
xchg
push
add
mov
mov
mov
push
icebp
stc
out
mov
push
(bad)
sbb
repnz
iret
lds
jmp
js
int
in
scas
pop
mov
(bad)
(bad)
xor
js
sbb
ret
add
add
jl
jo
bound
jnp
repz
ret
xor
fcomp
jmp
adc
ja
lds
fs
mov
in
xchg
sti
repnz
stc
stos
jg
mov
les
mov
ds
push
jl
jle
lods
(bad)
sbb
into
push
xchg
mov
mov
stc
(bad)
sahf
inc
pop
mov
sbb
cs
cdq
xor
mov
(bad)
pop
lea
pop
aam
xor
inc
aam
shl
sub
in
mov
push
adc
movs
gs
sub
ds
cmps
sbb
in
ja
mov
sbb
(bad)
aas
dec
test
xor
daa
daa
(bad)
out
out
sbb
sti
push
out
fs
mov
sbb
cld
inc
pop
jbe
pop
pop
pop
pop
mov
inc
frstor
push
sub
retf
sub
cld
pop
mov
lods
dec
aas
gs
xor
xor
sub
scas
repz
push
stc
jne
cmovge
out
in
pop
mov
xor
call
in
cs
push
fdiv
mov
fimul
loop
pushf
add
push
push
(bad)
pop
add
addr16
mov
fcom
push
mov
sar
fdivr
stos
test
adc
pop
pop
adc
out
xchg
fistp
xchg
jle
out
outs
xchg
cwde
shl
ret
(bad)
arpl
xor
leave
pop
(bad)
mov
inc
push
imul
inc
lea
std
adc
cmp
mov
lds
inc
scas
push
and
jge
test
xor
test
cdq
jmp
jp
xor
sbb
xor
int
mov
mov
xabort
pop
push
cld
sar
and
je
dec
xchg
or
daa
mov
fistp
cmp
mov
lahf
add
test
scas
pop
xchg
stc
cmp
sar
add
mov
cmp
(bad)
aam
add
push
pop
mov
adc
cld
rcl
mov
ror
arpl
repnz
push
inc
jne
das
test
je
push
pop
mov
mov
fistp
lock
jg
push
(bad)
lds
or
ss
aaa
push
mov
jno
xor
retf
dec
pop
pop
xor
out
xor
call
xchg
sub
mov
mov
sub
xor
jns
shl
sbb
les
jp
adc
loop
stos
inc
jmp
sub
nop
sbb
push
popw
in
cli
bswap
jno
leave
push
inc
jbe
retf
test
dec
mov
dec
xchg
pop
mov
adc
mov
mov
les
(bad)
and
pop
(bad)
and
pop
cmp
cmp
fisub
ror
ja
iret
imul
addr16
stos
mov
xlat
and
inc
mov
or
(bad)
fwait
inc
jo
mov
mov
adc
push
adc
shl
(bad)
jne
xchg
scas
shl
call
imul
adc
adc
fcomp
xchg
push
pop
mov
mov
inc
inc
aas
push
adc
lods
outs
add
repz
jae
mov
mov
dec
lahf
(bad)
mov
add
pop
jnp
les
add
scas
lods
bound
pop
test
push
mov
push
push
sbb
fs
nop
adc
lahf
js
dec
cmc
mov
je
test
iret
mov
(bad)
div
sub
pop
mov
xchg
push
add
(bad)
hlt
std
mov
fnstenv
fwait
xor
bound
ror
or
es
cmp
popf
fcomp
out
inc
rcr
fwait
in
jae
out
mov
mov
enter
jmp
xchg
xchg
pop
into
mov
mov
mov
fistp
es
jno
inc
out
push
sub
xor
push
ucomiss
mov
jge
jbe
repnz
xchg
push
aaa
sbb
push
dec
stc
sbb
enter
je
jae
or
push
mov
les
ja
add
ret
adc
stc
or
nop
call
sbb
xlat
jmp
and
jl
sbb
imul
inc
pop
xchg
xchg
mov
retf
mov
mov
xor
ins
sub
test
push
fimul
sbb
mov
pop
imul
dec
stos
retf
xchg
jp
sbb
daa
pop
mov
out
xor
adc
push
pushf
mov
lods
cmps
sbb
adc
pop
add
leave
sbb
pushf
or
xor
loopne
cmp
sbb
push
xlat
adc
jmp
loopne
cs
pop
pop
push
or
add
pop
jg
pop
push
shl
(bad)
repnz
je
fiadd
cmp
ins
retf
fs
jb
ins
and
sbb
dec
out
jne
mov
push
adc
xchg
sbb
adc
sub
inc
retf
scas
pop
stos
loopne
rep
cli
test
sbb
mov
cmp
adc
js
(bad)
push
std
nop
mul
push
iret
sub
andps
xchg
push
jmp
xchg
enter
(bad)
rep
mov
cmp
(bad)
out
loop
add
jl
xor
fst
jae
inc
or
sbb
ror
ret
fiadd
repnz
fldlg2
push
movs
push
sbb
cmps
xchg
inc
mov
mov
xchg
pusha
out
inc
jne
aas
jnp
lock
repz
stos
aaa
stos
fldcw
jns
sub
test
pop
(bad)
imul
arpl
mov
jmp
add
pop
adc
push
cmp
cdq
rcl
jmp
mov
outs
sub
popa
mov
(bad)
in
je
mov
rcr
jle
in
xchg
adc
fisttp
ficomp
lock
xor
sub
fcomp
or
nop
fst
int
pop
jmp
cmp
jle
in
jge
xor
loope
mov
inc
push
bound
fild
je
les
sbb
add
sti
(bad)
retf
jecxz
and
cwde
jmp
push
push
je
inc
xor
pop
mov
aas
adc
ror
loop
mov
pop
aaa
xchg
adc
imul
scas
push
imul
dec
arpl
int
dec
test
fadd
(bad)
xchg
xchg
mov
lods
push
in
imul
xchg
dec
fimul
inc
xchg
xchg
sub
jle
lock
cwde
ficomp
outs
xchg
mov
jp
lods
fsub
aaa
outs
cmp
dec
dec
in
xchg
pop
repz
repz
inc
sbb
add
(bad)
cmpxchg
scas
shr
add
loopne
xchg
sub
dec
xchg
inc
xchg
jmp
pop
jae
(bad)
enter
lock
adc
add
repnz
and
mov
jle
ins
add
je
ins
nop
test
cmp
push
push
xchg
pop
push
bound
and
aam
jo
xchg
mov
inc
xor
scas
mov
pop
jmp
jl
mov
imul
shl
pop
jnp
lock
inc
rcr
(bad)
sbb
int
div
and
in
in
adc
jnp
daa
add
dec
shl
cwde
mov
dec
cmp
jne
cs
push
iret
cmp
sbb
jmp
lds
retf
mov
addr16
call
push
push
adc
arpl
pop
xor
mov
aaa
aaa
fdivr
js
and
inc
test
pop
scas
popf
leave
pushf
mov
mov
das
scas
pop
out
clc
adc
jl
out
jae
imul
jp
fstp
mov
xchg
sub
or
test
xchg
frstor
mov
sub
test
arpl
mov
xchg
mov
pop
ja
dec
xlat
push
mov
loopne
dec
jg
mov
cmc
xor
push
(bad)
push
es
sub
stc
stos
xchg
into
rcl
jg
test
jae
pop
ja
fcomp
imul
ret
mov
jbe
pop
inc
aam
mov
xor
pop
xor
cmc
mov
jnp
inc
jg
push
mov
aas
(bad)
pushf
ror
cmp
sbb
sbb
sub
xor
xchg
xchg
mov
jae
pop
and
adc
jae
pop
pop
movs
(bad)
(bad)
mov
ret
adc
fwait
mov
xchg
sti
std
retf
pop
hlt
mov
dec
xor
dec
adc
xchg
pop
add
shl
xchg
cmp
cmps
pop
and
adc
xchg
adc
(bad)
mov
push
ja
lds
push
ds
mov
rol
pop
xchg
in
repz
(bad)
jae
add
(bad)
rol
xor
je
mov
sub
inc
in
lods
mov
pop
in
mov
(bad)
xor
adc
inc
jp
mov
shr
or
sbb
inc
jl
loopne
lock
mov
mov
pop
in
pop
test
lods
jp
add
mov
push
test
sbb
cmp
callw
xor
pop
adc
adc
aas
or
xor
sbb
adc
in
fsubr
fst
icebp
in
cmp
fucomip
mov
(bad)
fiadd
clc
inc
and
adc
int3
aas
(bad)
cmp
scas
out
sbb
movs
mov
mov
xchg
call
cmp
sbb
in
push
mov
add
adc
dec
cli
mov
shl
jge
stc
jo
cvtdq2ps
mov
and
call
loope
jns
inc
test
xchg
sbb
jmp
bound
sub
out
daa
sub
cmps
scas
jg
ins
bound
mov
cmp
mov
or
or
push
mov
push
adc
xchg
movs
jae
out
imul
imul
lahf
adc
fdiv
pop
stc
mov
jnp
jbe
bound
dec
addr16
fidivr
out
pop
mov
aaa
cmc
mov
scas
xchg
or
retf
mov
mov
test
movs
inc
inc
in
fist
les
jae
xchg
cmp
inc
sbb
es
push
ret
je
aaa
dec
pusha
pushf
adc
push
sbb
xchg
std
mov
repnz
cmp
add
xchg
aam
push
xor
outs
jge
addr16
push
les
pop
repnz
push
or
stc
loope
cmc
fmul
cmps
xor
loop
push
push
rcr
mov
stc
xor
loope
pop
ja
cmp
ss
mov
xor
stc
(bad)
and
call
mov
ins
mov
or
add
xchg
lods
xchg
pop
in
mov
ret
xchg
jne
jmp
cmps
inc
rdseed
sbb
push
xchg
jge
(bad)
sbb
mov
leave
push
jmp
xor
and
adc
mov
rcr
jno
xchg
imul
sbb
or
dec
inc
push
or
mov
sub
bound
fcom
pop
dec
mov
push
repz
xor
add
xchg
nop
test
fisub
mov
dec
lea
push
xchg
enter
xor
mov
pop
jno
retf
pop
call
or
xchg
(bad)
fistp
jne
dec
hlt
add
mov
sar
nop
(bad)
or
push
mov
add
(bad)
mov
cmp
dec
(bad)
mov
xor
fisttp
jg
pop
xchg
rol
inc
or
imul
push
repz
jbe
inc
getsec
cmp
cmp
(bad)
aad
inc
dec
sti
jne
sub
ins
xor
xor
jmp
ror
mov
jge
dec
shl
jmp
xor
mov
lods
push
aas
repnz
repz
push
inc
pop
loope
inc
mov
sbb
mov
fisttp
or
pop
movs
pop
aas
repz
and
bound
scas
sbb
daa
mov
pop
fimul
xchg
or
and
data16
sub
jb
pop
lea
pop
hlt
test
mov
and
cmps
cmc
xor
movs
cmp
mov
add
rcr
loope
popf
mov
mov
mov
mov
sbb
xor
and
(bad)
je
ins
cmps
sbb
nop
ins
nop
mov
pop
jne
mov
jecxz
popa
lock
or
mov
push
mov
jmp
push
add
and
xchg
lea
test
mov
aam
dec
aam
jecxz
pop
fnstcw
imul
pop
call
sbb
(bad)
jl
jo
dec
sbb
fstp
call
inc
loop
cmp
mov
sbb
lods
rol
adc
push
cmp
out
lods
or
and
movs
shl
pusha
shld
pop
pop
dec
mov
mov
push
bound
push
xchg
les
jecxz
loopne
dec
in
pop
add
aaa
sbb
push
nop
test
jmp
aam
jns
lds
jno
in
fsub
shr
pop
xchg
popf
push
mov
icebp
jmp
ficom
outs
cmp
and
push
jnp
mov
cwde
mov
je
std
sbb
cmps
jns
push
adc
in
sbb
das
nop
inc
sbb
aas
inc
xchg
in
ins
adc
mov
mov
ins
retf
jle
and
in
test
cmp
jae
jno
jl
dec
addr16
ret
pop
mov
mov
add
add
jl
push
pop
int
lods
sbb
adc
hlt
scas
scas
sub
adc
ror
add
shr
dec
mov
ss
mov
clc
test
sbb
inc
ficomp
aaa
pop
inc
frstor
data16
adc
jmp
cmps
jge
push
les
out
mov
push
inc
test
mov
(bad)
inc
dec
hlt
ss
push
arpl
sbb
sbb
mov
adc
pop
pop
ja
inc
fimul
push
inc
mov
pop
ret
bound
arpl
sbb
and
pushf
add
stos
std
ja
inc
mov
push
hlt
mov
imul
push
sbb
mov
lods
(bad)
dec
add
lea
dec
call
jmp
adc
je
mov
inc
(bad)
adc
inc
test
xor
cmp
maxps
cmp
push
sti
add
dec
jecxz
out
pop
push
(bad)
mov
push
fnstenv
dec
mov
xchg
lods
test
mov
inc
push
sbb
aad
hlt
jg
imul
mov
jge
xor
jl
jb
push
in
ficomp
and
push
and
jg
jae
jb
mov
cmp
mov
mov
xor
dec
retf
not
inc
inc
push
test
mov
cli
mov
or
cmp
enter
scas
jmp
repz
xlat
addr16
jne
or
push
dec
test
jmp
cmp
or
mov
ins
call
aas
test
es
and
repz
mov
adc
jp
fdiv
out
xor
mov
daa
lahf
mov
jle
fdiv
or
je
retf
arpl
xor
inc
adc
stos
imul
rcr
lods
push
(bad)
mov
add
xor
xchg
scas
mov
or
out
fs
xor
ror
ss
mov
and
push
mov
push
sahf
push
sub
mov
push
lds
jb
icebp
add
(bad)
repz
les
cmp
push
out
push
jl
jmp
ja
xchg
mov
push
dec
mov
imul
xchg
xor
pop
mov
jnp
std
js
inc
adc
cmps
add
inc
inc
sbb
(bad)
mov
scas
arpl
daa
loop
mov
test
cmps
xchg
popa
mov
pop
xor
adc
fcomp
fisubr
sbb
test
add
xchg
(bad)
mov
add
mov
shr
dec
js
or
test
push
sbb
fwait
push
pop
inc
xor
add
adc
bound
push
clc
ins
repz
loopne
push
jns
dec
dec
popa
call
cmp
nop
push
push
mov
xchg
push
cmp
inc
clc
adc
dec
jbe
jo
scas
ret
cmps
retf
iret
mov
sbb
imul
push
sbb
push
adc
or
push
push
add
mov
jne
je
call
or
sbb
mov
cmps
xchg
sub
add
sub
push
les
pop
xor
pop
shl
sub
mov
cmp
in
adc
cwde
xlat
cli
xlat
arpl
add
cmp
mov
je
push
sub
xchg
mov
je
dec
mov
add
(bad)
stos
nop
mov
mov
loope
mov
push
adc
out
fstp
ret
adc
jmp
xor
out
mov
push
iret
shr
or
inc
mov
mov
adc
ja
pop
icebp
mov
repnz
mov
sbb
jns
mov
dec
mov
xchg
bound
(bad)
mov
mov
punpckhbw
push
pop
mov
pop
pusha
sub
stc
mov
inc
and
les
xchg
aas
push
je
(bad)
mov
loop
lds
or
mov
sbb
test
xor
inc
or
ins
push
xchg
xchg
mov
pop
adc
xor
push
sbb
retf
cdq
rcr
mov
adc
inc
sub
sbb
ins
jp
add
jb
dec
mov
jge
or
cmps
inc
xchg
retf
shr
inc
jne
test
pusha
js
aam
dec
or
popa
ja
hlt
pop
sub
xchg
sbb
cdq
ds
cmp
ins
in
mov
xor
mov
dec
leave
sbb
outs
aaa
scas
xchg
jne
ror
mov
popf
push
adc
aaa
push
mov
fwait
pop
cld
aam
jmp
fidivr
push
stos
jb
in
and
cmps
rcr
pusha
dec
repz
mov
mov
mov
xchg
ja
mov
test
nop
sbb
fist
inc
mov
jae
(bad)
inc
jno
stos
ret
jns
mov
xor
and
adc
cli
fidiv
cli
out
cld
mov
xchg
std
movs
adc
ret
sbb
in
or
stos
inc
stc
fst
js
mov
xchg
gs
push
(bad)
mov
fdivr
out
adc
sub
or
int3
jae
mov
xchg
xchg
xchg
test
fcomp
repnz
xchg
imul
xchg
dec
inc
mov
adc
out
stos
test
xchg
mov
inc
out
repz
ins
adc
icebp
jae
imul
ss
mov
jle
lds
outs
mov
test
loopne
xchg
mov
imul
sub
dec
adc
sub
je
or
mov
ret
sub
js
mov
sbb
fsub
dec
xor
mov
js
rcl
inc
fwait
aaa
and
mov
out
jge
cli
push
pop
pop
ret
sub
fstp
ja
loopne
int3
dec
adc
or
scas
in
adc
stos
fbld
loope
shl
js
add
pop
mov
in
xor
pop
sar
or
inc
aaa
ja
ror
in
out
nop
js
mov
xchg
jmp
icebp
add
fldlg2
cmc
mov
push
stos
into
xor
lods
(bad)
(bad)
cli
adc
xchg
adc
lds
and
mov
loope
int3
xlat
mov
rcr
mov
into
mov
mov
inc
mov
in
sbb
ins
dec
loopne
out
cmp
add
dec
nop
jmp
pop
push
repnz
loop
mov
mov
sbb
xchg
js
jae
xor
shl
mov
scas
fimul
add
imul
jmp
cmp
js
ret
frstor
jp
sbb
movs
pop
idiv
icebp
jnp
mov
push
cwde
retf
adc
xchg
loopne
(bad)
addr16
les
das
outs
call
push
inc
enter
xor
mov
inc
fidivr
pop
je
lods
stc
push
push
xchg
cdq
mov
sbb
xchg
jge
retf
pop
movs
mov
push
push
test
iret
ds
aas
xor
inc
in
xchg
dec
test
mov
or
mov
in
cmp
inc
pop
ins
jbe
mov
add
sbb
pop
mov
mov
jge
pop
sub
retf
fbstp
mov
inc
mov
hlt
push
dec
test
rcr
sbb
jne
xor
cmp
imul
xor
into
mov
retf
gs
push
imul
dec
jb
repnz
(bad)
inc
mov
pop
pop
daa
(bad)
shl
pop
mov
mov
aam
dec
jae
stos
and
arpl
in
jne
jp
aam
adc
jl
cdq
pop
mov
add
mov
cmp
fldcw
mov
push
retf
xor
cwde
adc
sbb
dec
jb
dec
test
adc
mov
mov
add
fidiv
jae
daa
jle
mov
cli
cmps
jp
sbb
test
es
adc
leave
stos
sbb
jnp
pop
lds
jb
sbb
jne
xchg
cs
movs
jno
stos
inc
push
xor
add
inc
scas
sbb
neg
sti
and
mov
aaa
mov
cmp
rcr
aam
xchg
or
or
jne
dec
jl
or
fld
jo
mov
push
add
leave
call
pop
adc
imul
int3
pop
stc
and
push
adc
cwde
loop
(bad)
and
and
jp
js
aad
fnstsw
mov
aaa
inc
out
lock
movs
or
sub
sbb
and
out
cmps
mov
nop
jmp
js
(bad)
xor
and
inc
or
push
add
sub
sbb
stos
retf
sub
push
loope
test
and
xlat
cmps
push
sbb
push
sbb
pop
ja
out
mov
out
xor
dec
mul
aas
and
xchg
inc
dec
test
scas
cmp
xchg
jb
xchg
push
cmp
mov
nop
add
sub
sbb
(bad)
jo
xlat
jge
in
int
mov
movs
push
push
adc
xor
sbb
cld
aaa
xor
xchg
das
shr
out
or
mov
pop
sbb
cmps
push
adc
xchg
xchg
push
into
fdiv
or
lods
mov
ja
mov
sbb
dec
sbb
add
vrcpss
pop
(bad)
fldcw
and
mov
cmp
bound
mov
sti
(bad)
ins
movs
jmp
and
mov
xchg
dec
inc
jbe
fs
add
aaa
or
push
sub
sbb
push
lahf
mov
mov
ja
push
or
xor
dec
pop
mov
lods
dec
xor
int3
mov
dec
imul
ja
je
ret
test
dec
jae
mov
and
ins
mov
xor
pop
js
xlat
test
imul
lahf
jb
push
mov
cmp
add
sbb
xchg
lock
lods
in
int3
mov
xlat
adc
xchg
nop
popf
push
retf
(bad)
jns
xor
adc
outs
pop
xor
add
mov
gs
or
mov
(bad)
push
mov
mov
repz
sub
push
xchg
clc
push
push
xlat
mov
ret
lods
in
mov
lds
sub
in
or
jge
mov
gs
gs
arpl
add
sbb
nop
fucomp
mov
pop
mov
jae
aad
cmp
adc
or
inc
adc
mov
mov
rcr
inc
jecxz
inc
repnz
nop
std
repz
xchg
dec
sub
push
mov
in
inc
sbb
mov
hlt
pop
stos
mov
mov
pop
mov
push
inc
lock
cmp
repnz
adc
inc
and
jmp
iret
lahf
xor
pop
mov
jo
pop
pop
fs
xor
rol
lock
repz
mov
shl
cmps
mov
jg
cdq
mov
inc
or
hlt
out
push
pop
push
iret
data16
xor
or
pop
int
ja
ret
push
jl
jae
xor
sub
hlt
or
(bad)
mov
int
cmps
aad
sub
push
enter
mov
mul
test
mov
retf
in
jb
jg
push
int3
in
or
add
adc
push
jl
push
xchg
or
push
das
lea
lds
fabs
pop
in
and
loope
mov
jge
rol
repnz
out
inc
sti
imul
(bad)
lods
popa
push
fisubr
mov
repz
jg
and
sbb
xor
out
neg
mov
sbb
das
dec
mov
sbb
scas
outs
ja
cld
inc
jo
leave
ss
ret
xor
push
icebp
pushf
adc
dec
ret
jmp
popa
loope
out
pop
jmp
loop
stos
xchg
inc
push
sbb
mov
out
cmc
js
mov
and
leave
xchg
jne
xor
jmp
adc
push
lock
pop
xor
and
mov
inc
test
in
vpaddw
test
mov
mov
adc
or
(bad)
mov
mov
stc
mov
or
pop
pop
out
add
out
fimul
lods
leave
mov
popa
es
stos
repnz
int
mov
mov
je
adc
test
pop
pop
dec
icebp
lea
jae
mov
mov
mov
xchg
and
enter
sub
fidivr
popa
ret
sub
cmps
adc
jge
(bad)
add
xor
out
push
je
repnz
jb
int
das
aas
std
sbb
ret
xor
cdq
push
aam
imul
inc
and
and
dec
dec
mov
jecxz
int
xor
or
dec
adc
jb
js
dec
dec
mov
loope
and
xchg
and
out
out
mov
mov
ror
in
(bad)
pushf
call
dec
sub
outs
inc
jb
out
jmp
ret
outs
mov
and
push
mov
repz
retf
icebp
cmps
neg
cmps
shr
shl
cdq
push
sub
and
push
sub
cmp
test
out
(bad)
mov
ins
imul
repz
mov
pop
dec
inc
shr
js
(bad)
mov
shl
mov
push
jno
inc
dec
push
mov
mov
mov
sbb
daa
int3
inc
cmc
jb
mov
xchg
add
dec
pop
dec
sub
sub
test
dec
outs
call
cmc
retf
xor
or
sub
outs
neg
push
sti
xchg
cmp
popa
jne
fdivrp
daa
inc
(bad)
adc
std
mov
or
xchg
adc
sbb
pop
lods
pushf
inc
cmp
jmp
daa
and
mov
jae
xchg
and
mov
pop
popa
clc
jecxz
repnz
cmp
sub
out
(bad)
ficomp
pusha
adc
jbe
pop
shr
clc
or
enter
dec
dec
sbb
(bad)
outs
and
adc
sub
jle
mov
pop
mov
push
jo
inc
test
pop
push
jg
mov
fbstp
jp
sub
call
loopne
cmp
add
cld
fbld
out
sbb
cwde
sbb
xchg
cmp
jp
pop
das
or
cwde
add
xchg
xchg
xchg
adc
sbb
inc
mov
push
pop
jmp
inc
pop
dec
or
int3
jae
mov
mov
add
outs
inc
fstp
int3
je
loope
or
adc
dec
cmps
add
sbb
cli
add
jae
inc
mov
(bad)
fisubr
dec
int3
dec
dec
repz
jbe
jae
mov
test
add
jg
add
out
inc
pop
push
sub
call
mov
int
retf
retf
adc
shr
cli
dec
in
stos
and
and
retf
dec
or
mov
adc
jbe
fs
inc
(bad)
stc
dec
int
sub
push
mov
push
loope
pop
sub
fistp
jb
cwde
pop
mov
aaa
jmp
imul
sahf
adc
xchg
ret
pop
test
retf
ret
push
dec
dec
jp
jge
xchg
into
sbb
inc
and
lock
cdq
xchg
mov
mov
add
test
jg
sub
mov
leave
lock
jmp
push
sar
inc
lods
mov
aaa
sub
jo
dec
dec
test
push
mov
psllw
mov
xor
jae
pop
call
scas
aad
pop
mov
lea
push
loop
xor
pop
int3
cmp
(bad)
xchg
jmp
mov
pop
ror
outs
mov
or
mov
xor
jo
scas
in
(bad)
lods
xchg
aas
pusha
ficomp
dec
mov
rcl
imul
push
add
sbb
sahf
mov
and
dec
mov
sub
cld
mov
stc
mov
stos
push
add
imul
adc
jae
les
cwde
adc
sub
inc
loopne
sub
or
or
xchg
add
cmc
adc
pop
xchg
cmps
shl
mov
call
in
fdiv
sar
mov
inc
jg
call
sub
add
loop
mov
adc
xor
shl
dec
cmp
scas
ja
dec
lods
and
mov
out
push
xor
sar
ficomp
out
pop
test
push
push
sub
xchg
or
in
movs
add
push
ret
inc
fiadd
cmp
xor
in
or
dec
add
push
pop
scas
loop
cmps
inc
inc
fldenv
aam
jb
add
ret
pop
aam
fdivr
fs
mov
push
scas
sub
fimul
push
mov
xchg
inc
out
push
test
sbb
adc
jns
mov
mov
aas
push
mov
inc
pop
sbb
and
aaa
jne
cmc
and
add
add
sbb
fdivr
retf
jmp
pusha
fnsave
iret
xor
loop
jae
push
std
and
mov
data16
call
test
sbb
pop
dec
or
xor
jne
sub
pushf
or
sub
pop
into
mov
mov
sbb
dec
movs
test
dec
stos
push
and
es
aam
std
adc
leave
jg
jge
inc
and
imul
pop
cs
cli
and
lods
lock
sub
push
pop
pop
out
in
adc
jns
mov
or
dec
xlat
pop
addr16
xor
xor
sub
cmp
pusha
stos
outs
movs
sahf
out
xchg
sbb
loop
pop
fldenv
jns
std
ret
push
clc
cmp
enter
ds
fadd
push
pop
xor
sub
sahf
adc
jle
cmp
test
sub
xchg
jge
fadd
xor
loope
js
sahf
daa
mov
cmp
dec
shr
das
mov
lahf
stos
aaa
neg
xlat
int
jecxz
sbb
popf
int
mov
inc
cmp
sub
in
(bad)
ss
jne
dec
jmp
test
push
jge
ins
aam
rcr
jae
sub
sbb
xlat
cmp
pop
mov
repz
mov
lahf
dec
mov
sub
and
mov
sahf
sub
xchg
ins
pop
shr
add
test
mov
(bad)
mov
adc
mov
xchg
fstp
mov
push
and
dec
dec
xchg
lahf
in
mov
fs
xor
gs
out
and
je
outs
cmp
cmp
icebp
inc
jge
pop
sub
data16
dec
jns
cmp
cmps
gs
and
std
js
jle
mov
adc
retf
ja
cmp
ss
outs
les
shr
xor
out
das
ins
inc
retf
into
adc
xchg
push
dec
sar
out
sbb
jecxz
fs
xchg
pop
mov
xor
aas
je
mov
ficom
pop
add
imul
mov
rol
push
or
retf
in
adc
imul
sbb
cmps
fistp
jg
push
jnp
loopne
(bad)
sbb
or
cmps
jge
jecxz
jae
aam
cmp
into
pop
movq
sbb
in
fadd
or
inc
fucomi
adc
or
sub
dec
xchg
inc
repz
jne
idiv
repz
cmc
sbb
xchg
jmp
sbb
das
mov
clc
push
je
out
cmp
cmp
cmp
aas
jl
ret
sub
aas
test
retf
ficomp
fs
daa
jmp
bound
aam
jae
sbb
sub
movs
push
popf
and
lahf
repz
add
out
fdiv
and
push
sub
mov
xor
dec
and
and
jbe
inc
(bad)
scas
je
fs
push
dec
scas
mov
jmp
ds
out
aad
repz
(bad)
pusha
and
xlat
adc
sbb
ret
imul
ret
aam
(bad)
pop
inc
push
push
paddusb
mov
shl
jnp
fcom
sub
mov
sub
xor
repnz
xor
mov
out
in
dec
mov
mov
push
enter
mov
xor
pop
cwde
push
rcl
nop
clc
jecxz
add
int
or
jmp
pushf
xor
jae
or
sbb
dec
push
ret
push
sub
jae
inc
mov
add
push
xchg
aam
data16
mov
popf
dec
fnsave
xor
es
sbb
stos
mov
fist
out
and
ret
push
mov
jmp
dec
mov
in
pop
adc
sub
es
adc
outs
fstp
jmp
not
repz
xor
dec
xchg
cmp
or
pop
inc
outs
mov
(bad)
mov
pop
or
loop
mov
test
sub
sbb
pop
fsubr
add
dec
hlt
mov
pusha
mov
push
cmc
sub
addr16
mov
nop
cmp
xchg
jmp
iret
push
or
sbb
(bad)
xchg
inc
jmp
imul
scas
and
hlt
clc
test
and
push
out
mov
mov
stos
xchg
mov
mov
sub
int3
fwait
retf
pop
inc
ror
cs
rcr
push
push
adc
xor
retf
stos
dec
stos
xchg
mov
jno
sar
fs
ja
sub
leave
fimul
sti
push
add
sahf
jae
cli
fdiv
sbb
mov
sbb
test
mov
sub
nop
mov
loope
dec
jp
cmp
push
je
xor
cld
adc
push
push
jae
jmp
sbb
repnz
test
(bad)
stc
dec
ret
pop
dec
je
sbb
stos
add
movd
or
mov
xchg
xchg
sub
adc
and
dec
sub
pop
jmp
movs
pusha
cmp
fstp
sbb
adc
or
cwde
dec
pop
je
pop
pushf
pop
mov
movntq
sbb
inc
jg
call
icebp
mov
push
cmp
sbb
inc
adc
pop
nop
mov
adc
cmp
and
xchg
sub
mov
jae
jns
mov
inc
and
xor
mov
(bad)
retf
int
xchg
jb
dec
jbe
imul
pushf
dec
xchg
dec
retf
jae
jbe
fdivr
loope
sbb
or
xchg
xor
mov
jno
mov
adc
or
jmp
mov
fwait
xor
fidiv
push
add
xor
enter
push
jl
push
cmp
inc
mov
xchg
xchg
xor
lahf
cmps
stc
test
call
(bad)
div
fsincos
xor
stc
mov
(bad)
ss
pop
fild
mov
pop
adc
(bad)
int3
dec
push
jns
adc
xor
inc
cmps
jne
je
mov
pop
(bad)
jns
nop
or
push
in
sbb
sub
jae
cmp
repz
mov
je
jg
jne
movs
xchg
cmp
push
imul
int
push
loope
data16
sub
add
jg
inc
shl
movs
adc
repnz
js
xchg
or
ins
rcl
pop
aaa
or
push
fimul
inc
hlt
cmps
pop
pop
add
mov
ins
lea
lock
pop
mov
pop
sbb
push
mov
sub
hlt
test
je
stos
leave
sbb
push
pop
outs
es
pop
cmp
sbb
cmps
mov
daa
xlat
(bad)
push
call
jae
lds
adc
sbb
mov
es
clc
jne
mov
mov
cmp
sar
push
cld
cmp
adc
push
mov
adc
or
mov
out
mov
stos
(bad)
fs
je
rcr
mov
hlt
pushf
int
cmp
repnz
(bad)
pop
fbstp
lock
js
or
shl
jbe
mov
push
lds
and
push
jae
lods
mov
sbb
pop
or
xor
pusha
push
cmc
fist
sub
inc
xor
jle
adc
fs
dec
in
jmp
repnz
xchg
pushaw
mov
jae
dec
and
or
inc
jge
push
cmp
int3
jb
ror
push
(bad)
in
inc
pop
dec
sub
movs
mov
add
sbb
jp
ss
loope
imul
in
nop
cmps
mov
pop
sbb
retf
sub
dec
in
sbb
mov
dec
sbb
(bad)
xchg
mov
add
pop
mov
ja
cli
jmp
adc
mov
repz
shl
ins
aas
ret
push
xchg
push
adc
and
int3
nop
jg
sti
or
mov
sub
push
inc
aas
ds
adc
imul
mov
pop
dec
hlt
jae
in
mov
adc
or
lea
pop
and
neg
or
mov
daa
lock
dec
adc
fcomp
(bad)
movs
dec
push
mov
aas
mov
stos
xchg
mov
gs
jae
xlat
add
adc
mov
cmp
xlat
stc
jae
les
dec
mov
and
adc
inc
pop
in
sbb
mov
mov
ud2
mov
jae
rol
dec
cmp
sbb
xchg
push
jnp
ins
js
test
sbb
or
dec
or
jnp
xchg
mov
inc
popa
push
test
jns
enter
fisttp
les
sbb
dec
mov
sub
adc
or
shr
push
xchg
mov
jmp
push
fidiv
stos
repnz
das
sub
je
jnp
mov
test
leave
and
or
inc
icebp
inc
inc
jle
add
sti
push
inc
stos
adc
fistp
push
xchg
fstp
or
dec
push
imul
dec
mov
push
dec
dec
aaa
jge
int3
movs
hlt
mov
test
ja
sbb
arpl
(bad)
jecxz
and
mov
lock
sbb
inc
add
call
hlt
lea
pop
out
movs
xor
and
repz
add
and
or
mov
daa
cmp
icebp
push
add
pop
scas
cmp
cmp
mov
pop
mov
inc
dec
cmps
add
dec
push
push
and
inc
add
xchg
xor
mov
sbb
mul
jecxz
lods
add
mov
sbb
xlat
mov
adc
lods
add
add
lods
ds
jg
jg
inc
mov
fs
or
cmps
cmps
mov
pop
ins
loop
mov
jecxz
and
out
mov
add
or
add
dec
and
outs
adc
sbb
leave
sbb
jge
lds
add
cmp
pop
push
outs
mov
jp
push
cs
lahf
sbb
jl
hlt
xchg
xchg
cmp
pop
pop
inc
pop
cmp
loope
repnz
lods
fst
dec
mov
and
or
mov
scas
es
daa
scas
loop
add
xchg
(bad)
mov
xchg
or
pop
sahf
pop
xor
add
sbb
gs
sahf
clc
adc
sub
rcr
push
pop
cmp
add
pop
std
add
adc
sbb
pop
pop
push
or
or
and
push
iret
leave
xchg
or
xchg
and
pop
cld
arpl
stc
sub
sbb
div
mov
sbb
xchg
test
sbb
pop
sbb
dec
lods
(bad)
push
xchg
pusha
test
pop
mov
call
imul
out
mov
add
push
dec
push
jbe
stc
fst
ja
movs
out
xor
inc
out
pop
div
arpl
and
xor
dec
hlt
sbb
mov
sub
or
xchg
jb
push
xchg
push
sub
push
xor
mov
jmp
add
push
or
add
xor
xchg
in
shr
xchg
es
ja
pop
or
add
pop
punpckldq
imul
pop
in
sbb
fs
in
xchg
sbb
jge
cmp
inc
lds
and
pop
jae
std
or
jp
js
fstp
je
jmp
mul
push
or
or
iret
dec
sub
outs
dec
push
popa
inc
inc
lds
mov
div
popa
xor
in
in
push
push
jle
sbb
pop
push
mov
pop
pop
stos
lds
mov
jne
and
repz
pop
add
hlt
push
stc
ins
inc
sbb
pop
mov
loope
xor
xchg
push
jo
jae
(bad)
inc
gs
cli
(bad)
cs
clc
scas
or
xchg
push
push
mov
sahf
or
popa
inc
sbb
inc
ins
jp
and
mov
xor
xor
add
pop
cmc
(bad)
iret
loop
mov
adc
cs
outs
push
rcl
sbb
mov
cmp
mov
pop
pop
sbb
test
mov
je
pop
dec
mov
adc
cmp
leave
rcl
dec
imul
int3
xor
rol
pop
dec
(bad)
jge
xlat
adc
int3
and
ins
mov
pop
arpl
pop
and
add
stos
rcl
pop
mov
mov
lea
dec
in
sub
dec
jae
jmp
call
int3
push
aad
sbb
out
fs
mov
xchg
cmp
lea
mov
and
xchg
cli
and
(bad)
sub
sub
pop
inc
jne
sbb
and
dec
lods
rcl
push
push
push
pop
add
adc
jp
popa
retf
stos
add
add
test
pop
(bad)
inc
and
bnd
sbb
add
arpl
jae
cli
mov
xchg
js
(bad)
das
cdq
pop
push
retf
jae
lahf
outs
in
stos
cld
arpl
cmp
push
clc
or
sbb
sbb
fstp
and
nop
pop
sbb
push
mov
adc
lahf
adc
sbb
(bad)
cmp
test
ds
mov
sbb
fnstsw
push
pop
lods
sbb
outs
in
cmps
aas
or
sub
jmp
mov
jae
and
pop
sbb
inc
daa
sbb
mov
mov
int3
dec
push
jns
push
ret
inc
push
aaa
jmp
neg
inc
add
mov
imul
fsub
data16
push
sub
inc
xor
je
mov
jo
test
inc
add
jno
or
loopne
inc
nop
fild
cmp
push
pop
xor
push
jae
je
or
pushw
add
sbb
sbb
stc
fist
push
rcl
hlt
ds
movs
lds
lods
adc
or
daa
adc
mov
movs
dec
js
fadd
fisub
sbb
rcl
add
cmp
dec
je
test
psraw
pop
mov
es
mov
jae
stos
sbb
and
and
not
or
pop
add
pop
sbb
push
sbb
aaa
fwait
ins
aad
fisubr
xor
jmp
(bad)
imul
xchg
cmp
daa
or
jge
adc
mov
cmp
cmp
cmps
test
setge
inc
xchg
adc
shr
mov
jb
mov
aam
jae
mov
jo
movntps
cld
rcl
stos
jns
jno
cmps
(bad)
icebp
or
(bad)
xor
adc
dec
or
mov
and
ss
bound
test
sub
pop
dec
push
mov
sbb
call
loope
push
xchg
repnz
push
mov
push
push
test
imul
bound
(bad)
jo
pop
out
adc
lods
enter
fstp
in
and
adc
(bad)
(bad)
mov
xor
addr16
cs
add
and
inc
dec
mov
clc
inc
in
out
or
xchg
adc
sbb
mov
inc
and
adc
fwait
jbe
push
je
cmp
adc
adc
sbb
rcr
shr
stos
pop
adc
jb
push
adc
xchg
cld
xor
add
pop
push
jbe
pop
(bad)
and
imul
pop
loopne
jmp
rcr
cs
mov
sti
add
aam
into
add
sub
std
shl
mov
cmp
jecxz
or
in
push
retf
dec
inc
sahf
sbb
sbb
icebp
mov
push
sar
scas
fldenv
sub
std
xchg
in
out
xor
jae
add
cmp
xchg
pop
ret
dec
(bad)
into
jae
push
adc
xchg
pop
and
push
shl
xchg
xchg
test
add
sbb
push
pop
jb
pop
mov
add
mov
inc
push
xchg
mov
popf
mov
and
fsubr
sbb
pop
outs
outs
cmps
ins
add
cs
stos
adc
sbb
fcomp
sahf
fwait
ins
imul
pushf
jne
cmp
mov
pop
sub
fdivr
fs
xchg
jae
pop
xchg
(bad)
mov
sbb
aam
mov
leave
clc
mov
in
cdq
dec
inc
cmp
sahf
inc
add
scas
push
push
xchg
sub
jg
xor
les
outs
xor
push
push
retf
push
loopne
in
push
sub
jmp
lock
cmp
test
sbb
cli
push
mov
out
and
in
fs
std
xor
imul
mov
xchg
jmp
cmp
fisttp
rol
cmc
(bad)
iret
mov
add
jno
xchg
pop
jnp
jne
jb
mov
xor
std
ret
push
repz
or
retf
pop
pop
dec
mov
mov
dec
xor
jae
push
push
int
cmc
addr16
sub
mov
shl
ret
loopne
mov
push
in
sar
add
mov
jae
sub
push
call
scas
ds
mov
mov
cmps
add
sbb
fild
sti
scas
push
push
shl
mov
inc
push
popa
mov
test
jmp
bound
inc
and
push
jge
jmp
push
cld
pop
mov
gs
ds
pop
jmp
cdq
xor
js
bound
popa
and
shl
jbe
jl
(bad)
in
and
ret
dec
or
xchg
dec
push
pop
mov
jb
push
adc
loop
cmps
arpl
jno
and
xchg
xchg
(bad)
(bad)
pmaxub
jae
mov
mov
jg
add
xchg
outs
pusha
leave
inc
xchg
icebp
cmp
mov
jmp
cli
mov
repnz
adc
pop
ja
xor
shl
ins
maxps
mov
rcl
stos
dec
inc
dec
hlt
push
out
sbb
xchg
leave
and
xor
pop
or
dec
idiv
mov
ja
cmp
inc
or
shr
stc
xor
mov
mov
out
sti
icebp
push
shl
call
jae
inc
cmp
in
pop
pop
imul
dec
cmp
pop
adc
js
mov
cld
push
mov
(bad)
out
iret
or
es
add
in
int
jnp
das
in
cmp
dec
aad
push
in
jno
or
and
add
jb
sbb
add
jae
loop
stos
cmp
jae
sar
ret
mov
in
sar
into
popf
pop
scas
icebp
xchg
or
aad
jns
mov
sbb
sahf
jb
add
or
pusha
jb
call
push
(bad)
adc
adc
xor
pop
add
imul
mov
call
retf
sbb
ds
cmps
sbb
sbb
xchg
push
jnp
sub
xchg
js
nop
xchg
shr
add
(bad)
loopne
outs
mov
xchg
sbb
(bad)
cmp
int
xor
add
mov
mov
push
xchg
clc
ja
loope
or
or
mov
bound
sbb
xor
stc
inc
xchg
in
sub
stos
push
add
jge
stos
add
inc
xor
in
loope
mov
mov
icebp
neg
clc
or
jb
mov
(bad)
dec
or
ins
js
xchg
dec
xor
je
aaa
cli
xor
push
test
xchg
cli
and
pop
jo
int
ins
aaa
mov
cmps
aad
imul
stos
add
gs
ss
dec
out
fnstenv
je
in
mov
mov
xor
fstp
cli
cmc
jle
push
add
(bad)
adc
retf
loope
movs
cmp
push
ja
fbld
scas
sub
mov
hlt
xchg
je
ja
stos
shl
add
cmp
iret
ss
add
ins
sub
les
sub
push
push
lock
mov
xor
pop
dec
mov
or
jae
adc
lahf
mov
imul
jp
mov
and
icebp
mov
xchg
mov
cdq
mov
inc
adc
or
ins
lea
cmp
sbb
mov
dec
xchg
jl
imul
lea
dec
inc
mov
cmp
in
movs
xchg
dec
lahf
jae
out
aad
or
dec
sbb
mov
int
push
cmp
loope
adc
outs
cs
mov
add
cmps
fbstp
add
xchg
ins
sbb
enter
and
push
imul
push
mov
pop
pop
mov
push
push
push
cmp
mov
into
mov
mov
push
cmp
lock
inc
xchg
repnz
inc
iret
push
aaa
rcl
xchg
cld
jmp
test
cmps
(bad)
sub
into
jl
jmp
mov
push
icebp
not
pop
inc
sub
inc
in
ss
dec
xor
mov
pop
int3
mov
popa
addr16
mov
add
outs
jb
js
lods
add
int
xor
inc
pushf
jge
test
cmp
sbb
in
(bad)
fdiv
pop
daa
fst
nop
inc
in
jae
or
mov
or
push
and
sub
mov
push
cli
repz
dec
push
cmc
fisub
sbb
(bad)
jae
push
inc
add
rcl
mov
dec
mov
sar
daa
fsubr
adc
mov
cld
jno
clc
and
inc
jnp
jae
and
pop
mov
test
movs
loope
inc
js
sbb
xor
mov
outs
in
loope
sub
inc
fcom
cmp
je
jb
push
pusha
inc
in
lock
loopne
xor
es
sub
cwde
jbe
sub
xor
repz
mov
pusha
jle
lds
shl
rol
xchg
jne
inc
cmp
and
dec
aam
add
inc
aam
cwde
sub
mov
cmp
leave
rcl
fldenv
scas
dec
rcr
cmp
sbb
call
das
fwait
inc
(bad)
sbb
xor
and
movs
sub
hlt
push
aas
adc
imul
call
xchg
xor
push
push
cmp
push
adc
push
retf
sub
aam
xor
sub
gs
add
push
mov
pop
jge
fs
ret
mov
pop
rcl
rcr
inc
push
(bad)
sbb
or
aam
sub
adc
dec
jnp
ror
ret
jge
cwde
das
jae
retf
scas
push
cmp
inc
push
adc
mov
test
call
xchg
pushf
popf
clc
and
push
push
into
xlat
xor
cmp
adc
mov
cmps
sar
adc
pop
push
pop
push
test
fistp
sub
push
push
jnp
cwde
adc
sar
mov
fild
mov
jo
int3
test
out
pop
sbb
dec
sbb
sahf
js
daa
test
loopne
inc
dec
sub
mov
adc
retf
adc
jo
ins
fimul
bound
xchg
add
mov
movs
push
scas
mov
cmps
sti
mov
sbb
and
and
sub
mov
rol
retf
pop
add
mov
sub
shl
add
pmulhuw
jns
jbe
cmc
jge
nop
adc
lds
addr16
es
bound
push
inc
jge
push
jg
jecxz
stc
sbb
sub
xor
pop
pop
cld
int3
sbb
call
imul
idiv
aaa
adc
enter
push
jmp
icebp
cwde
mov
cwde
das
and
jmp
inc
inc
in
xor
push
pushf
mov
mov
test
rol
dec
xor
add
lods
movs
scas
rcr
scas
mov
test
mov
xchg
xor
xchg
jns
jp
mov
ret
ror
fidivr
push
inc
dec
pop
aam
fpatan
or
push
lds
repz
(bad)
cld
lods
and
loop
push
mov
add
pop
push
aad
test
cmps
mov
mov
xchg
push
mov
pusha
div
stos
or
stc
inc
das
out
jmp
add
pop
jmp
repnz
gs
mov
fcom
jmp
push
stos
push
out
js
dec
scas
inc
mov
out
jae
cmp
inc
add
js
jle
add
scas
xor
into
cwde
sbb
rcr
mov
xchg
adc
xchg
mov
pop
rep
mov
sar
mov
std
stos
loop
push
cld
mov
or
imul
je
data16
(bad)
push
push
movs
xchg
mov
test
dec
sub
push
pop
push
out
xchg
add
sub
fsubr
daa
ror
rcl
sbb
jae
(bad)
mov
dec
int
inc
sbb
test
xor
bound
mov
lds
pushf
inc
mov
jge
into
jl
(bad)
xchg
sub
int3
dec
sbb
jae
xlat
outs
mov
inc
test
inc
fidivr
inc
push
(bad)
jb
push
movs
jp
pushf
lods
pop
mov
out
jnp
pop
out
fnstenv
push
aaa
test
rcl
jl
cmp
mov
jbe
retf
scas
cmp
adc
adc
xor
add
imul
adc
xchg
jb
sbb
lds
mov
call
sbb
sub
loopne
inc
xor
cmp
leave
xchg
(bad)
fldenv
mov
xor
adc
sub
(bad)
cmps
xor
jne
adc
xchg
xchg
inc
out
jo
mov
in
test
xchg
mov
pop
mov
jae
jl
xor
or
test
cs
pop
sbb
dec
and
inc
cmp
data16
jge
push
ja
rcl
or
test
stos
retf
repz
mov
aad
mov
mov
bnd
mov
push
stos
jg
inc
mov
dec
adc
pop
cmp
sub
nop
aad
xor
xor
inc
je
sub
inc
lea
lock
out
xchg
push
adc
mov
dec
sub
cdq
add
fwait
or
jnp
adc
pop
ret
jnp
rcr
popf
xor
mov
jle
and
test
sbb
retf
cmp
pop
sub
movs
cld
je
retf
mov
int3
mov
ja
dec
popf
(bad)
(bad)
fadd
std
xor
shl
psllq
pop
push
jae
mov
push
outs
std
std
out
sub
inc
retf
dec
movs
clc
mov
mov
jecxz
ret
dec
mov
and
mov
movs
or
imul
scas
dec
mov
xchg
pop
mov
xor
(bad)
adc
clc
dec
pop
or
mov
(bad)
cld
mov
(bad)
dec
pop
push
fdivp
push
data16
cmp
adc
xchg
les
loopne
fcomi
jae
push
jge
dec
pop
sub
jecxz
push
sbb
fild
and
pop
dec
aaa
adc
stos
push
mov
retf
arpl
adc
outs
push
mov
into
and
out
popa
push
ret
(bad)
sub
cld
test
mov
xchg
js
mov
aaa
cmp
popf
pop
aad
data16
hlt
sahf
pop
mov
daa
and
add
push
nop
push
add
add
movs
ror
jle
xlat
retf
mov
ficomp
jno
adc
adc
retf
lods
inc
sbb
js
call
push
js
aaa
into
xchg
add
arpl
movs
scas
stc
mov
dec
jb
jl
push
or
mov
pop
imul
adc
mov
je
xchg
(bad)
cwde
fisubr
mov
adc
rcr
fcomp
cli
xchg
sbb
mov
sbb
js
js
mov
ficom
xor
das
mov
scas
test
(bad)
daa
fstp
jns
sub
xor
sub
and
xchg
adc
add
call
mov
in
imul
jbe
lock
mov
popf
pop
hlt
mov
mov
mov
arpl
int
lock
dec
in
pop
pop
cmp
sbb
mov
xor
push
xor
and
inc
ja
adc
and
xor
cdq
jae
adc
out
mov
jae
popf
pop
iret
pop
xor
xor
cdq
xchg
sbb
push
xlat
scas
add
test
outs
jnp
inc
inc
sbb
aaa
ret
and
sub
in
pop
cmp
test
sub
sub
rcl
pop
mov
in
adc
aam
call
cmp
out
jno
loope
add
jno
pop
jae
xchg
xor
cmc
jmp
repz
movs
push
jecxz
stos
cmc
repnz
push
mov
pushf
inc
add
push
scas
rcr
out
test
int
(bad)
je
clc
push
mov
out
jl
xchg
call
(bad)
and
aas
fiadd
in
xchg
inc
addr16
and
and
xchg
shr
sahf
mov
popf
rol
sub
and
jecxz
xor
pusha
pinsrw
jnp
mov
jae
jp
ret
aaa
jle
(bad)
mov
pushf
leave
mov
mov
sbb
sub
cmps
push
fmul
pop
jne
adc
call
mov
push
jg
ins
xor
out
add
popf
add
div
je
pop
sub
popf
lahf
cli
in
repz
adc
jae
jmp
jnp
shl
inc
sbb
mov
jmp
enter
sbb
mov
jnp
pop
mov
les
(bad)
call
dec
and
pop
dec
imul
xor
adc
sub
xchg
frstor
sub
enter
out
add
cmc
jo
inc
mov
retf
sbb
push
adc
xchg
jns
ins
cmp
jmp
je
cmps
pop
pop
sbb
sub
jns
in
push
pusha
es
push
jo
mov
outs
xor
ins
jnp
mov
fucomip
mov
inc
mov
pushf
mov
gs
inc
and
cmp
aas
mov
pop
or
clc
mov
std
pop
and
adc
adc
stos
jo
in
shl
retf
mov
into
shl
stos
mov
ds
xchg
xor
aas
shl
mov
(bad)
scas
sbb
mov
cld
leave
test
xchg
fmul
sub
and
sbb
and
push
jae
(bad)
mov
and
jno
push
push
xchg
or
stc
mov
fistp
sbb
mov
shr
sbb
push
sub
hlt
jge
or
xor
addr16
test
sbb
in
mov
cld
jle
outs
aam
ja
inc
cmps
add
pop
jae
les
xchg
mov
js
mov
xchg
je
mov
add
adc
inc
ret
xlat
jns
mov
repz
mov
jae
add
cmp
inc
add
and
gs
mov
sub
mov
cmps
into
cwde
fist
push
pushf
cmp
mov
fadd
mov
cmps
mov
push
fcom
push
push
pop
pop
xor
inc
addr16
sbb
push
xchg
stos
je
and
jmp
pop
stos
repnz
or
int3
adc
fsubr
dec
sbb
cmp
adc
pop
daa
pop
scas
sub
dec
cmp
outs
cmc
test
xor
and
mov
pop
mov
loopne
dec
jp
dec
mov
pop
fmul
test
jecxz
sub
in
mov
mov
inc
cmc
(bad)
daa
stos
repnz
dec
jnp
std
mov
repnz
movs
pop
pop
mov
jg
jnp
dec
jne
xor
xchg
jo
je
mov
sbb
push
jb
aad
mov
mov
aaa
pop
aaa
arpl
out
pop
je
push
outs
jle
xor
rcl
pop
fs
fiadd
daa
inc
jmp
mov
les
xor
mov
adc
and
inc
sbb
fdivr
aam
jae
dec
xchg
sbb
pop
inc
dec
ret
and
sbb
adc
mov
fucomi
push
scas
jecxz
in
jg
rcr
push
dec
mov
push
dec
or
retf
cmp
and
or
dec
lods
pop
outs
pop
mov
mov
jg
xor
jp
mov
sbb
xchg
pop
inc
js
mov
iret
mov
mov
das
pop
daa
sbb
fcom
arpl
aad
jns
add
test
adc
test
ja
add
add
sbb
jae
add
jmp
sbb
ins
xchg
dec
inc
test
in
mov
sbb
dec
jge
xchg
sbb
mov
dec
(bad)
pop
cmc
jo
push
sti
pop
and
sbb
(bad)
or
fwait
mov
hlt
sahf
mov
shr
push
js
adc
cmp
mov
pop
adc
in
push
adc
rcl
hlt
mov
loop
in
in
retf
and
(bad)
add
jge
push
sbb
ds
fadd
mov
and
cli
adc
leave
push
jae
sub
inc
xor
sbb
dec
ins
jo
add
mov
sbb
mov
jne
jnp
popa
pop
in
jp
cld
add
adc
mov
mov
and
pop
scas
pop
jecxz
pop
sbb
or
pop
mov
push
jge
movs
outs
mov
ficomp
xchg
pop
sbb
xchg
ds
jle
retf
mov
adc
inc
or
jbe
add
push
retf
jecxz
pop
test
xchg
push
stc
mov
sti
mov
xchg
or
add
imul
pop
mov
pop
push
mov
cmp
pop
clc
inc
mov
or
mov
pop
ins
xchg
adc
add
js
or
(bad)
mov
mov
lds
int3
repz
mov
sbb
mov
ds
fcomp
inc
loope
or
mov
ins
jle
pop
test
repz
shl
in
dec
jne
sbb
cmp
gs
repnz
test
adc
mov
jns
jge
xor
ja
mov
or
and
dec
pusha
adc
stc
adc
shl
mov
and
jnp
scas
or
pop
jae
fiadd
stc
sbb
pmaxsw
sub
jae
pop
adc
jnp
stc
pop
das
or
cmp
mov
ds
not
adc
std
cmp
cmp
push
pop
inc
pop
adc
test
push
mov
pusha
dec
hlt
jne
mov
movs
in
rol
xchg
jbe
lds
js
rcr
fs
mov
fstp
cmp
push
jbe
xchg
in
jmp
jmp
int3
lock
cmps
test
inc
sbb
inc
aaa
ja
fistp
mov
inc
adc
push
xchg
sbb
adc
rcr
inc
jecxz
aas
push
jae
inc
inc
jp
imul
sub
push
push
sub
ret
mov
ja
dec
cwde
je
ja
fdiv
ja
(bad)
imul
jmp
scas
fs
push
test
adc
push
nop
pop
aas
sbb
mov
mov
in
cmp
es
jp
lds
xchg
mov
stos
jns
sub
repnz
push
push
add
add
jb
ja
xor
nop
stc
sahf
adc
jbe
cmc
not
outs
popf
add
mov
daa
mov
inc
inc
fwait
xor
and
je
mov
push
push
(bad)
lahf
out
pop
dec
cs
mov
mov
loopne
mov
cmp
jne
shl
mov
xchg
inc
ficom
cmc
xchg
fdiv
add
loop
mov
sbb
jbe
cld
dec
or
lds
pop
ins
dec
jo
jae
sub
adc
je
sbb
imul
jae
sub
stos
rcr
mov
and
outs
adc
leave
lods
js
xor
jae
sbb
pop
shl
pusha
ss
aas
xchg
mov
xchg
shl
ret
adc
jg
bound
pop
pop
pop
xchg
scas
or
or
pusha
pop
inc
out
sbb
xlat
aas
outs
sub
inc
das
cmp
call
mov
cdq
ss
call
xchg
cmps
sub
jnp
sub
clc
retf
xchg
mov
sbb
out
xor
adc
adc
cmps
add
sbb
adc
and
mov
or
rol
cld
inc
jae
jmp
stos
cmp
xchg
xor
lahf
xchg
inc
imul
sub
cli
fcom
call
dec
sbb
adc
fimul
push
aam
push
pop
imul
test
fwait
loop
add
dec
ins
jo
sub
jle
mov
cdq
mov
push
sar
mov
ja
add
mov
(bad)
lds
sbb
and
jecxz
dec
mov
or
fcom
add
fisubr
js
sbb
push
ret
retf
push
xor
aad
fstp
stos
cli
mov
jb
and
sbb
sbb
mov
(bad)
call
mov
xchg
inc
mov
gs
xlat
push
cmp
ror
mov
fwait
add
mov
popa
int3
mov
imul
mov
push
movs
adc
jle
push
out
mov
(bad)
jns
sbb
hlt
fsubr
xchg
pop
pop
iret
pop
add
sbb
loop
mov
add
sbb
adc
xchg
xchg
(bad)
mov
and
xor
ret
fstp
fs
cdq
inc
inc
push
popf
js
sbb
call
aas
lock
sub
lods
pushf
add
add
aas
mov
scas
loope
adc
dec
or
lods
ja
mov
mov
scas
dec
jmp
and
mov
loope
xor
mov
jmp
xchg
call
mov
aaa
pop
sar
and
and
fnstenv
dec
fsubr
push
jo
aam
push
cwde
sbb
push
ins
sbb
out
xchg
out
and
mov
jnp
mov
fcomp
inc
ret
inc
std
dec
(bad)
mov
mov
lds
outs
lods
fild
add
fcomp
xor
pop
push
sbb
jl
test
inc
jl
dec
jb
movs
arpl
and
sbb
inc
xchg
and
mov
xchg
jp
pop
sbb
dec
mov
(bad)
bound
ja
and
aas
popa
sbb
xchg
out
into
(bad)
and
es
mov
pop
out
les
enter
inc
fcomip
pop
imul
movs
mov
jecxz
pop
jns
call
dec
je
fs
jbe
inc
mov
repnz
ds
nop
imul
sbb
(bad)
cld
push
inc
pop
repnz
jae
mov
pop
fcmovnbe
stos
push
js
out
pop
(bad)
je
(bad)
shl
and
call
stos
and
push
mov
adc
rcl
bound
pop
repnz
jne
cwde
vunpckhps
je
cmp
dec
scas
aas
in
lods
push
fnstcw
lods
int
js
xchg
adc
stos
call
mov
int3
imul
push
adc
sbb
fs
jecxz
sbb
cmp
xor
leave
add
int
xor
cld
sbb
mov
fsub
(bad)
push
cmp
inc
xchg
movs
push
aas
add
out
cmp
xlat
fmul
fist
aas
pop
outs
out
sti
adc
mov
pop
xchg
jae
push
sbb
mov
mov
in
cmp
sub
pop
icebp
add
mov
xlat
adc
or
push
and
sub
iret
push
addr16
fild
mov
xor
jmp
pushf
stc
mov
dec
lods
xor
push
mov
mov
adc
mov
push
(bad)
jle
call
sbb
pushf
mov
jl
sbb
mul
xchg
lds
div
aad
(bad)
cmp
js
push
inc
xchg
daa
(bad)
icebp
fwait
enter
aam
rcl
addr16
sbb
ja
mov
and
call
movs
cmp
mov
es
sbb
xchg
mov
xor
jge
movs
in
fxch
mov
in
mov
inc
fistp
stos
or
mov
stos
int
sbb
inc
inc
test
mov
mov
loopne
xor
mov
or
add
mov
pop
jge
js
mov
jnp
xlat
jmp
or
jo
loop
stc
imul
adc
repz
pop
or
jp
inc
jae
neg
lea
xchg
daa
inc
adc
imul
sbb
or
lahf
and
loope
sbb
mov
stos
xchg
sub
jmp
enter
cmp
add
sub
(bad)
xchg
popf
sbb
fcom
xor
adc
dec
add
mov
xor
nop
adc
bswap
fisttp
dec
dec
and
repnz
inc
jp
leave
test
adc
ins
std
lds
(bad)
in
cmp
and
pusha
jae
mov
mov
iret
scas
or
add
and
jmp
jns
mov
neg
and
mov
data16
jnp
adc
dec
repz
or
jp
loopne
pop
or
enter
and
mov
in
pop
xor
mov
ficomp
int3
push
cmp
arpl
sbb
js
and
sub
mov
pop
les
das
mov
int3
jg
sbb
and
mov
ins
adc
push
pop
cld
in
dec
icebp
pop
cdq
xor
pop
cmp
push
xchg
and
mov
xchg
imul
lock
sub
add
pop
int3
stos
mov
cmps
pop
ss
out
sub
push
imul
ss
mov
gs
xchg
add
xor
adc
popf
mov
fsubr
xchg
ret
ins
add
movs
mov
inc
or
jl
or
xor
mov
and
nop
pop
add
cld
xchg
push
fidiv
lahf
mov
movs
push
adc
xchg
jmp
int
aam
mov
jbe
xor
inc
and
int
pop
sbb
or
adc
call
dec
mov
push
lock
push
sbb
add
mov
fcomp
adc
push
movs
adc
sub
mov
fmul
retf
add
and
mov
loop
js
mov
dec
or
jae
repnz
pop
bound
adc
icebp
jo
fbstp
adc
jmp
fdiv
lods
dec
outs
cdq
adc
pop
adc
dec
xchg
stos
test
xchg
sub
xor
pusha
stos
test
imul
rcl
rol
sbb
dec
adc
or
rcr
jp
mov
mov
sub
xchg
test
adc
add
mov
sbb
jae
adc
sbb
mov
mov
(bad)
pop
les
ins
cdq
js
xchg
pop
or
ja
je
jle
adc
addr16
cwde
jge
ja
cmp
mov
test
sub
add
sbb
out
add
cmps
pop
and
pushf
mov
pop
(bad)
pop
gs
xor
sbb
jno
pusha
test
lds
das
xchg
pushf
jo
aaa
loopne
not
jo
fwait
jae
mov
aaa
call
mov
shl
inc
xchg
sub
adc
cli
aaa
mov
xchg
ss
inc
mov
ret
mov
and
or
into
jecxz
retf
scas
push
jmp
inc
(bad)
dec
jae
(bad)
loopne
push
les
cdq
cmp
repnz
lock
cmp
cmps
xchg
dec
jo
(bad)
sbb
(bad)
out
out
pxor
dec
add
enter
or
mov
cs
jb
aad
push
lods
dec
mov
sbb
call
ja
xchg
mov
pop
xlat
push
push
(bad)
aam
xor
dec
test
sbb
sbb
inc
inc
jge
push
ffreep
dec
push
pop
dec
push
cdq
mov
je
push
sbb
jp
stos
int3
push
push
cmp
(bad)
xor
inc
dec
mov
lock
push
mov
leave
stos
hlt
hlt
(bad)
or
lods
outs
call
mov
xchg
lock
enter
(bad)
in
xlat
inc
cmc
ss
mov
mov
aam
sbb
les
sub
clc
cmp
into
jb
jbe
loop
mov
push
or
mov
(bad)
cli
mov
mov
add
movs
popa
pop
loop
(bad)
fcomp
xor
mov
lock
lea
scas
xchg
cli
mov
xchg
cmp
xchg
mov
inc
xchg
inc
cmp
addr16
sbb
mov
pop
ds
fcmove
rol
cld
xchg
das
adc
inc
bound
sbb
in
and
jge
jmp
xchg
mov
loopne
pmulhuw
jae
and
lea
push
es
aad
or
push
sub
jo
cmp
lods
xchg
push
xor
cli
inc
mov
out
out
cmp
xor
jae
mov
mov
adc
hlt
bound
int3
xchg
add
push
xchg
lock
jnp
sub
js
xor
push
loopne
adc
call
push
ficomp
pop
lock
pop
adc
scas
jne
mov
aad
pop
retf
cmp
into
xor
xchg
in
lods
and
lahf
imul
dec
movs
inc
retf
mov
sti
fs
hlt
jae
test
add
push
pop
mov
xor
mov
shl
push
test
aas
das
jae
sub
mov
dec
push
sbb
aam
or
out
jns
push
test
rol
jge
sti
dec
jns
ror
les
sbb
pop
outs
mov
xor
cld
dec
add
cwde
jge
int3
js
sub
jle
lods
mov
jmp
fild
mov
xor
ja
in
test
dec
mov
jp
push
jmp
adc
xor
cli
adc
fcompp
hlt
lods
add
sbb
popf
loope
add
sbb
rol
and
mov
fisttp
iret
dec
xor
test
xchg
bound
fnsave
jae
outs
and
lods
fs
repz
scas
jae
(bad)
stc
rcr
add
test
jae
dec
jae
adc
dec
lock
pop
pusha
and
inc
cmps
xor
std
adc
imul
data16
jge
iret
dec
out
pop
rcl
js
add
cmc
cmp
jmp
aad
call
pop
and
mov
push
xor
ret
mov
std
out
call
sbb
rcl
jle
jp
xchg
inc
outs
dec
add
stc
retf
lahf
in
xchg
and
dec
cmp
lea
pop
add
pop
nop
leave
mov
push
pop
mov
loopne
dec
jno
fcomi
xchg
shr
pop
imul
sub
add
xchg
sbb
adc
adc
mov
jo
or
loop
cwde
pop
sbb
add
pop
in
sbb
and
out
and
sahf
xor
sub
adc
ret
fidiv
test
sbb
lods
xchg
jo
push
inc
inc
mov
scas
sbb
sbb
add
ss
xchg
int3
shl
fadd
push
jae
push
(bad)
mov
repnz
sub
xor
lods
push
pop
adc
jae
push
jne
out
jmp
jl
jae
xor
cdq
mov
leave
or
ins
xor
fdivr
sbb
test
xor
rol
mov
out
out
adc
pop
jg
pop
in
in
movs
mov
jns
cmps
xchg
mov
xchg
cmp
or
test
sbb
pop
jae
inc
push
xchg
inc
in
sub
sub
sub
mov
ds
scas
cli
bound
xchg
xor
jl
sub
xor
push
retf
or
test
(bad)
into
inc
pop
pop
icebp
inc
pop
daa
repz
jge
adc
retf
mov
or
push
inc
xor
int3
mov
sar
retf
cmp
cmp
dec
int
push
mov
div
mov
or
pop
scas
push
ja
sub
adc
cmp
or
aaa
sbb
enter
inc
sbb
xchg
mov
dec
push
cs
mov
sub
enter
pusha
cmp
push
add
(bad)
mov
mov
leave
add
ret
aaa
popa
push
push
into
or
cmps
fwait
(bad)
in
mov
pushf
fldenv
mov
sub
push
mov
mov
jae
fdivp
int
fst
cli
fwait
popa
mov
data16
jae
mov
and
repz
enter
gs
pop
call
std
(bad)
jmp
frstor
test
and
or
enter
jae
addr16
ja
jmp
stos
dec
int3
fsubr
jb
adc
jb
(bad)
out
pop
(bad)
cmc
pop
leave
into
inc
sub
es
adc
pop
xor
rol
fiadd
xchg
enter
jo
mov
aam
xchg
pop
shl
sbb
push
mov
sbb
sub
mov
pop
and
xchg
loope
ins
cmp
inc
out
pop
pushf
xchg
jge
je
sbb
add
jns
call
sbb
cmps
push
mov
cmp
push
xor
cmp
mov
adc
pop
nop
bound
sbb
fcomi
dec
pop
pop
xchg
std
xor
jmp
cmp
mov
or
fnstenv
loopne
mov
je
pusha
int
mov
out
dec
daa
(bad)
aaa
dec
jne
xor
outs
jae
pop
je
mov
ret
dec
out
xchg
cmc
jmp
ss
mov
xor
cmps
icebp
or
adc
jp
push
enter
ja
inc
scas
inc
daa
sub
adc
add
pop
jbe
jae
arpl
sub
bound
mov
mov
iret
pop
and
pop
mov
sahf
test
push
and
mov
mov
out
sbb
jl
js
mov
add
out
mov
jp
cli
push
in
mov
sub
xchg
clc
or
add
add
outs
xchg
ja
cdq
in
mov
sub
test
rol
fsubr
mov
das
inc
mov
jp
stos
dec
or
in
xchg
mov
sbb
jb
aaa
scas
or
scas
jle
jmp
addr16
dec
inc
jle
sub
aas
sbb
scas
pop
out
and
and
int3
or
cmp
lea
jg
push
sub
xor
cli
mov
mov
jne
jmp
fs
test
dec
sbb
pop
and
loop
ret
mov
sbb
int
or
cmp
mov
mov
mov
(bad)
jae
cdq
mov
jp
xor
adc
sub
shl
jbe
sub
std
mov
xor
mov
push
dec
xchg
aaa
pop
pop
(bad)
fld
mov
out
sbb
fsubr
gs
hlt
(bad)
lds
aam
push
stos
jne
stos
xchg
add
mov
repz
popa
jnp
clc
fs
rol
(bad)
fimul
daa
pop
clc
mov
fadd
xchg
inc
test
stos
jb
(bad)
push
test
lahf
sbb
stos
das
jo
add
pop
call
sub
pop
inc
ffree
or
aam
sub
xchg
rcl
inc
pop
shl
mov
jmp
test
dec
xlat
out
lods
adc
inc
push
mov
xchg
push
pop
mov
mov
jg
jmp
cmc
mov
push
mov
mov
inc
shl
xor
jae
js
or
test
sub
mov
repnz
arpl
rcl
shr
inc
pop
inc
pusha
imul
pop
mov
push
imul
ret
dec
comiss
jae
or
mov
push
fst
in
inc
leave
sub
inc
jns
push
fdivr
cmps
xchg
arpl
mov
scas
inc
clc
ret
pop
pop
mov
popa
mov
arpl
fidivr
pop
scas
hlt
jae
loope
ja
out
out
int
not
aad
jb
and
mov
push
cmc
and
jl
mov
cwde
inc
push
je
add
push
jno
push
jno
scas
aaa
mov
call
sbb
mov
dec
mov
xchg
aas
sbb
(bad)
add
sub
pop
(bad)
add
sahf
cmp
inc
pop
add
push
mov
in
push
mov
mov
adc
adc
jae
pop
lods
sbb
rcr
ret
mov
sbb
retf
aas
adc
daa
jae
or
sbb
fdivr
xor
sahf
fadd
pop
ins
xor
jns
sbb
mov
sub
aaa
rcr
mov
ja
stc
sub
lods
mov
rcl
les
fsubr
jnp
xlat
scas
xchg
jb
fwait
xor
sub
xor
cmps
jb
je
(bad)
das
dec
and
xor
dec
xor
cmps
movs
xor
mov
dec
pop
inc
fstp
jns
fsub
mov
call
adc
dec
dec
pop
mov
outs
mov
adc
sub
adc
and
or
clc
cmp
push
and
dec
mov
dec
out
adc
aaa
ror
sbb
sbb
adc
out
out
mov
or
dec
bound
sbb
stc
imul
sub
popa
add
ja
fstp
mov
les
scas
loopne
sbb
lds
int
dec
stos
sbb
lods
push
fldenv
fs
jnp
repz
ret
sbb
aas
les
loopne
movnti
scas
out
sahf
sub
sbb
std
aam
or
mov
xor
mov
not
out
or
cdq
or
push
mov
aam
lods
call
push
ja
pop
or
ficom
adc
mov
mov
cmp
iret
or
mov
movs
mov
mov
into
fstp
dec
pop
stos
in
in
lods
jae
call
shl
lock
retf
call
ja
mov
pop
scas
je
cmp
movs
mov
jmp
mov
push
xor
jb
retf
and
ret
mov
jb
xchg
xor
jge
push
cmp
scas
repz
adc
fist
dec
dec
xor
xor
fst
fistp
cli
jae
adc
mov
cmps
mov
ret
push
push
sbb
mov
inc
lods
pushf
jno
jns
lods
(bad)
(bad)
int
jns
push
(bad)
mov
adc
xor
jge
jae
loop
pop
sbb
sbb
aam
rol
dec
xchg
mov
push
div
scas
or
push
cmp
pop
push
jge
icebp
jp
inc
je
scas
mov
jecxz
mov
jne
(bad)
aas
leave
pop
lock
cmc
jne
add
add
dec
push
xor
push
xor
jo
xor
into
cmps
test
imul
test
cmp
cmp
or
sbb
adc
sahf
mov
not
(bad)
jg
(bad)
mov
sbb
ds
jg
and
in
dec
aaa
xchg
out
inc
or
outs
inc
sti
out
test
cmps
push
or
call
push
retf
loope
xchg
adc
(bad)
sbb
push
dec
hlt
stos
jmp
jg
add
jmp
push
jmp
sti
nop
adc
in
(bad)
fbld
xor
dec
pusha
lea
sbb
jo
lock
adc
or
mov
pop
and
je
clc
out
rol
lods
imul
jle
cmp
aad
daa
inc
test
(bad)
call
or
arpl
jo
hlt
hlt
inc
sub
out
popf
and
not
inc
rol
nop
aas
hlt
aas
sbb
jo
aam
or
pop
test
mov
jne
and
(bad)
cmp
push
test
jp
lds
repz
xchg
sbb
and
test
jae
enter
hlt
not
pusha
push
xchg
outs
in
or
int
stc
add
xchg
sub
pop
nop
add
cmps
scas
jg
mov
scas
add
arpl
pushf
mov
sbb
ins
adc
fstp
sar
stc
(bad)
cld
jne
mov
jmp
sbb
cmps
jno
pop
pop
mov
and
cli
out
sar
sti
test
leave
add
mov
adc
sbb
lds
enter
aam
mov
pop
cmp
xchg
addr16
xor
and
cmp
and
xchg
mov
sub
sbb
xlat
cwde
push
cwde
out
stos
clc
sar
add
xor
adc
push
cmp
(bad)
test
adc
and
mov
call
xchg
sbb
jge
add
sbb
or
hlt
add
mov
fst
jae
jl
sub
pop
dec
test
cwde
sub
(bad)
stos
call
mov
sar
test
loopne
jl
les
mov
push
mov
and
push
mov
xchg
retf
mov
push
pop
pop
call
leave
lea
and
mov
inc
pop
rol
jae
sub
mov
push
sbb
sar
mov
jb
pop
stc
mov
and
xchg
cld
jo
sbb
add
mov
bound
jae
adc
xchg
mov
daa
sub
cmp
jmp
test
das
lods
aaa
shl
cdq
daa
mov
nop
and
or
das
hlt
jecxz
out
jge
mov
test
imul
rol
cmp
mov
inc
out
xchg
fild
nop
inc
cmp
cwde
mov
pusha
call
mov
aad
xor
mov
fiadd
mov
dec
adc
jge
sbb
pop
je
arpl
jecxz
jae
lods
add
cwde
test
daa
cwde
ja
cmp
repnz
cmp
idiv
jg
int
pusha
pop
adc
hlt
inc
xchg
call
push
cmp
lods
adc
xor
push
cmp
sub
xchg
fs
or
jmp
in
in
imul
mov
and
xor
jae
sub
in
scas
cmc
sbb
popa
xlat
shl
out
sub
or
enter
sbb
dec
mov
rcr
pop
stc
xchg
dec
mov
sub
test
mov
jmp
push
mov
inc
inc
sub
mov
or
call
in
dec
push
sahf
imul
call
jmp
nop
scas
mov
mov
mov
sub
sub
popa
loope
(bad)
cmp
les
int
mov
xor
test
test
outs
mov
stos
lods
arpl
jmp
cwde
mov
fidiv
movs
cmps
ss
rcl
iret
les
mov
mov
mov
mov
xchg
nop
movs
fsub
pushf
jns
dec
mov
adc
mov
sbb
or
mov
pop
adc
ja
int3
movzx
(bad)
jae
imul
cld
call
cdq
retf
mov
jp
or
js
push
enter
mov
lods
inc
leave
loop
loop
push
adc
mul
inc
lods
shl
shl
push
mov
lds
adc
mov
inc
cmps
nop
cmps
jbe
int
xchg
jb
mov
mov
ss
in
cmc
inc
pop
cwde
fmul
jmp
test
sub
ret
sbb
(bad)
jg
jae
in
lds
jle
or
and
leave
(bad)
ret
sbb
or
xor
mov
ret
sbb
stos
mov
ins
shl
cmp
pop
and
mov
or
mov
mov
mov
int3
jae
iret
sbb
aad
stc
js
aad
sbb
mov
and
jl
mov
pop
inc
dec
ja
mov
rcl
xchg
sbb
fld
daa
pop
xchg
push
scas
mov
xor
icebp
add
outs
cmp
or
movs
or
sar
int3
jb
jo
push
shl
js
pop
jnp
out
adc
jp
cmp
int
push
and
add
loope
int3
lock
dec
xchg
cs
scas
sub
aad
popf
ss
cmc
test
data16
xor
hlt
outs
or
nop
xor
mov
out
in
popa
in
jmp
(bad)
push
in
xor
int
fwait
adc
(bad)
jmp
pop
push
inc
dec
add
fs
in
mov
jne
adc
and
or
lea
les
sub
ret
sbb
mov
idiv
enter
les
jge
out
ja
push
out
jmp
(bad)
jnp
jo
push
pop
cld
cli
lods
push
lock
dec
xchg
test
lods
and
xchg
xchg
(bad)
add
add
adc
clc
mov
aas
xchg
adc
jge
ret
add
int3
or
mov
cmc
(bad)
das
(bad)
xchg
mov
lock
sbb
std
(bad)
jbe
aas
cmp
ret
pusha
mov
imul
je
jmp
mov
xor
dec
hlt
xor
push
or
mov
in
push
pop
leave
cmc
add
pop
js
imul
js
cli
mov
xchg
mov
xor
sub
call
cwde
ds
ja
ret
mov
sub
loopne
mov
push
sbb
jae
sbb
arpl
mov
xor
jo
lods
add
xor
stos
xchg
loope
mov
lods
adc
cmp
and
lahf
fnstcw
mov
xor
ins
xchg
mov
and
pop
and
push
cmp
ja
mov
jmp
aam
xor
retf
add
fld
and
add
pop
outs
aas
jo
push
mov
jae
ret
xor
std
loop
(bad)
lahf
stos
sahf
call
xor
inc
retf
pop
xor
push
or
inc
and
mov
inc
xchg
pop
out
cmps
das
xor
aam
pop
fiadd
clc
mov
push
fistp
xchg
mov
cmp
dec
clc
cs
mov
loopne
inc
adc
std
retf
or
sub
test
adc
add
ffreep
ja
iret
pop
adc
dec
inc
dec
pop
gs
xor
xchg
mov
jae
test
popf
iret
xchg
cmc
ins
gs
and
test
call
nop
push
lock
test
jno
loope
pop
pop
xchg
rcl
pop
ret
push
das
xchg
push
cmp
sbb
arpl
cmp
cmp
lds
fld
clc
popf
pop
sub
inc
sbb
(bad)
cwde
sub
pop
dec
or
xchg
jp
and
mov
mov
cdq
mov
sub
mov
and
xor
into
adc
jge
aaa
ss
sbb
in
xor
jo
leave
push
fdiv
fwait
mov
loope
rol
movs
add
xchg
jle
or
sbb
call
bswap
pushf
fidiv
push
mov
pop
cmp
ss
popa
cs
jo
mov
addr16
mov
loopne
or
cmps
hlt
mov
xor
mov
out
sub
(bad)
in
loop
int3
mov
jns
out
shl
stos
lods
sub
jg
lock
sbb
fsubr
bound
pop
js
sbb
mov
scas
jnp
dec
mov
call
pusha
jmp
dec
xchg
sahf
pop
and
cdq
jge
push
adc
mov
add
lahf
adc
dec
xor
mov
xchg
and
nop
stc
scas
ins
xchg
mov
pop
jl
dec
mov
adc
in
std
xchg
(bad)
aam
je
sub
jne
ja
add
cmc
sti
enter
scas
or
out
adc
shl
dec
test
int
out
js
arpl
jae
repz
xlat
dec
in
lds
cwde
sbb
jb
push
clc
imul
mov
pop
adc
pop
mov
mov
hlt
sbb
js
add
(bad)
push
fucomi
cmp
mov
jg
mov
pop
(bad)
sub
jb
mov
mov
or
iret
push
push
iret
push
pop
sub
sub
cmp
adc
mov
into
mov
imul
jg
aaa
loopne
es
dec
retf
jns
adc
ror
aas
in
push
pop
test
xchg
mov
ins
inc
jbe
xchg
xor
xchg
dec
mov
or
scas
cmp
mov
pavgb
cmc
mov
in
sbb
daa
xor
pusha
aad
push
das
xchg
fcom
imul
iret
mov
dec
xor
(bad)
xchg
xchg
cmp
and
jbe
fs
sbb
loopne
mov
xchg
cmps
fsub
shl
stos
jo
mov
xchg
ja
push
ins
jns
stc
fdiv
and
cmps
jae
jmp
sbb
adc
push
xor
fsubr
lock
out
cmp
cmp
mov
or
xor
cmp
cmp
aas
std
mov
iret
jb
retf
aad
aad
jmp
mov
mov
cmp
add
mov
(bad)
push
cld
in
mov
pushf
mov
iret
es
push
mov
and
out
jle
mov
sbb
jmp
jo
push
or
cli
call
iret
or
cmps
movs
xchg
push
cmc
fist
sub
or
scas
dec
mov
inc
repnz
cmp
dec
mov
mov
out
rcl
fisubr
adc
jns
sub
push
cmps
push
sbb
or
pushf
pop
jecxz
sbb
nop
sbb
or
mov
pushf
cmp
jae
loope
cvtps2pi
mov
hlt
push
rol
data16
mov
mov
jp
addr16
aas
and
jb
sub
ret
mov
test
sub
pop
imul
mov
cmp
pushf
mov
stos
rol
or
js
lods
out
popf
movs
xlat
ret
cmp
sbb
out
int
clc
test
shl
sahf
in
pop
jle
xchg
mov
inc
cmp
test
mov
pop
je
xchg
sub
(bad)
fidiv
fist
dec
mov
nop
inc
cmp
xor
in
das
dec
push
cmp
fxtract
fld
jmp
dec
sbb
in
xchg
das
in
mov
or
jne
add
je
jno
lods
js
sbb
inc
push
sub
mov
in
cmp
in
aam
xor
fwait
aam
(bad)
inc
push
jge
sbb
xchg
lods
imul
inc
out
popa
imul
cmc
jle
ss
fld
mov
add
jge
mov
cli
repz
mov
ficom
pop
inc
aas
or
int3
je
stos
mov
popf
xchg
stc
gs
out
mov
xchg
jmp
inc
cmp
clc
xor
xchg
out
neg
inc
rol
inc
in
je
cli
ins
push
jae
push
mov
adc
inc
movs
push
aaa
sbb
mov
cdq
and
inc
lock
xlat
les
push
jns
movs
jae
test
xlat
ficomp
push
out
cld
sub
push
xor
pusha
inc
stc
adc
cwde
loopne
xchg
jl
fs
jnp
shl
xchg
ds
rcl
adc
mov
inc
cmc
push
inc
xchg
fwait
ins
mov
mov
loope
cli
dec
test
fwait
mov
test
fist
xchg
loop
push
outs
(bad)
addr16
(bad)
daa
cdq
loope
retf
stos
or
int3
imul
jne
test
stos
mov
loope
or
sbb
push
(bad)
in
test
pop
int3
jno
jl
adc
out
das
fmul
pop
mov
bnd
xlat
jae
leave
push
mov
ja
pop
stc
dec
mov
sbb
and
test
ret
out
es
jae
int
sbb
cmp
loop
test
push
jg
inc
dec
jge
cmp
sub
div
add
add
xor
pop
push
aam
pop
pop
retf
cmp
jmp
inc
mov
xchg
ss
sbb
and
mov
adc
retf
movs
mov
(bad)
stos
mov
xchg
hlt
xchg
cmps
push
dec
pop
rol
retf
mov
aas
xor
xchg
ficom
not
pop
mov
in
jl
cmp
shr
les
mov
mov
add
xchg
fmul
fldcw
mov
je
mov
into
or
repnz
aaa
add
loop
neg
mov
pop
fwait
sbb
or
xor
jp
pop
adc
shl
adc
shr
ins
jle
push
xchg
ins
ror
int
sti
jnp
ss
loope
scas
aad
xor
push
sbb
cmp
pop
or
mov
pop
(bad)
iret
retf
sub
cmps
and
or
mov
add
sbb
push
pop
dec
dec
in
aam
scas
xor
stos
sbb
call
inc
out
cmc
cmc
dec
push
jg
out
in
ss
ret
sbb
inc
ret
and
rcr
arpl
stc
shl
enter
push
mov
jne
add
sbb
or
cdq
or
fcmovb
inc
push
mov
sahf
jg
mov
jmp
or
jmp
call
(bad)
mov
cmps
adc
in
sub
ss
lock
mov
mov
pop
ret
add
ret
inc
not
dec
mov
scas
iret
cmp
aaa
in
test
in
push
repz
ins
push
and
(bad)
mov
test
push
sbb
popf
cdq
jg
xchg
loop
mov
dec
fisubr
mov
mov
ret
pop
add
mov
push
sbb
sbb
pop
pusha
mov
fsubr
scas
sbb
xor
xchg
jnp
pop
cli
inc
xchg
jae
inc
mov
xchg
adc
pop
sbb
mov
sbb
cmps
adc
sti
push
and
mov
xor
xor
or
popa
retf
sub
dec
mov
cmc
jo
lds
adc
sub
add
jae
ss
sbb
int3
mov
or
enter
or
call
je
dec
sbb
popf
lea
pop
dec
mov
test
hlt
sbb
test
inc
add
call
mov
push
xor
cmc
xchg
test
sub
sbb
push
pop
jl
xor
xchg
sub
stos
jne
add
jmp
jmp
inc
mov
fwait
dec
mov
mov
stos
jne
push
int3
test
(bad)
imul
scas
mov
not
shl
pusha
aam
inc
lea
lahf
jmp
mov
add
mov
or
outs
dec
test
(bad)
xor
pop
jbe
and
or
nop
icebp
dec
or
enter
lahf
pusha
xlat
(bad)
mov
rcr
ins
call
or
iret
movs
stc
sar
inc
jl
adc
push
and
repz
xchg
int3
jg
pavgb
int
(bad)
retf
xor
test
(bad)
mov
into
xchg
cmps
loope
mov
pop
movs
mov
jmp
sub
ds
lods
and
gs
mov
(bad)
adc
(bad)
jns
adc
jmp
xor
pop
cdq
into
cmps
adc
push
jmp
je
ja
jmp
out
lds
pop
lea
fwait
dec
inc
sbb
popa
sbb
fbstp
pop
inc
inc
movs
fcomi
sbb
adc
loope
dec
int3
jo
sbb
inc
jp
out
sbb
add
ror
pop
or
dec
dec
jmp
clc
xchg
repz
outs
mov
cs
xchg
mov
test
loopne
xor
(bad)
scas
dec
shr
shl
jl
aaa
test
cmp
cmps
cmp
das
fnsave
pop
xlat
or
(bad)
scas
jo
jne
lahf
cmp
into
adc
das
mov
lea
xchg
cwde
cs
addr16
pushf
xchg
sub
xor
or
inc
or
xor
shr
outs
pop
pushf
sbb
mov
and
pop
fwait
cmp
ficom
add
jns
les
jmp
jl
popa
push
mov
inc
cmps
pop
call
fld
ds
rcl
or
pop
mov
fistp
pop
ds
pop
mov
mov
je
adc
pop
fadd
call
xor
neg
mov
stos
mov
pop
adc
into
cmp
aas
mov
movs
out
sub
mov
jnp
movs
xor
jnp
mov
sub
mov
lea
cmp
sbb
lods
mov
fadd
lods
add
jmp
loopne
add
jnp
pop
jp
adc
in
out
call
ret
retf
mov
add
push
cs
or
daa
dec
pop
cld
pop
ror
ret
push
inc
fstp
cmp
xor
fiadd
and
test
movs
mov
jns
std
xor
sub
jne
pop
test
inc
dec
jae
mov
adc
neg
pop
jmp
or
sar
fs
ja
aad
xor
inc
or
pop
pop
mov
neg
scas
out
xor
and
xor
(bad)
fnstsw
movs
rol
jo
fcmovnu
lea
or
or
push
xor
je
lods
sub
fld
add
shr
push
mov
push
mov
dec
retf
imul
add
scas
into
dec
pop
ss
in
adc
out
lahf
xor
daa
pop
xchg
push
jnp
movs
pop
mov
mov
fimul
(bad)
fsub
push
mov
cmp
mov
int3
hlt
xchg
jp
sub
out
aam
stos
mov
or
jmp
push
ffreep
or
ss
jl
jge
inc
and
arpl
cmp
push
xor
jo
or
stos
pop
xor
movs
dec
mov
clc
iret
inc
mov
into
mov
sti
cdq
adc
jp
lods
jmp
movs
fidiv
popf
jbe
push
mov
cwde
add
mov
aaa
xchg
test
nop
cmp
inc
lock
jnp
repnz
in
jnp
mov
es
sbb
sub
neg
(bad)
pop
push
sub
pop
mov
jl
lods
js
push
jl
movs
fs
push
fst
stos
push
adc
cmps
(bad)
lock
or
hlt
lea
dec
mov
test
int3
pushf
push
sbb
jmp
xchg
stos
sbb
sbb
lods
std
add
pop
icebp
inc
retf
mov
jge
das
fmul
ja
cmps
jns
in
test
sub
xor
dec
sub
scas
jbe
loope
pop
fdivr
or
or
pop
test
aaa
stos
adc
sub
sahf
sbb
dec
inc
outs
test
mov
add
mov
mov
les
shr
imul
mov
cdq
sbb
pop
add
dec
push
push
inc
ins
mov
mov
adc
add
cs
adc
jne
pop
or
cmp
enter
inc
xchg
inc
cmp
push
jle
jae
jmp
sbb
sub
mov
jmp
mov
jae
jle
ins
test
cwde
stos
call
sbb
mov
xchg
xchg
jle
adc
pop
sbb
or
sub
mov
inc
sbb
jae
js
jne
mov
clc
sbb
int3
mov
sbb
and
das
jb
call
jge
mov
ds
scas
jmp
sub
jmp
nop
sti
in
mov
lds
or
adc
xchg
xchg
popa
call
inc
addr16
cld
in
sbb
xchg
push
xor
arpl
mov
cmp
jle
mul
jne
fs
nop
sbb
fadd
clc
mov
push
sub
rol
xor
mov
shl
fsubr
add
jg
xor
and
jne
add
xor
sbb
nop
jle
push
dec
cmp
je
inc
xchg
movs
stos
push
mov
sub
cmps
push
adc
out
js
stos
cmps
mov
(bad)
dec
pop
rol
jle
push
mov
add
popa
ficomp
push
lock
call
xor
xchg
sub
dec
or
push
adc
push
fwait
sar
ficom
lods
mov
and
sbb
dec
or
pushf
jae
es
sub
inc
mov
inc
rol
dec
leave
inc
ja
cmc
sbb
and
lods
push
es
pusha
shl
sub
cwde
mov
in
fdiv
data16
xchg
outs
and
pop
test
push
mov
adc
nop
retf
and
xor
ds
jmp
fwait
mov
or
pushf
sbb
lock
pop
fcmovu
les
in
je
add
jle
mov
data16
loopne
outs
and
and
mov
push
mov
pshufw
inc
xor
pop
jne
cmp
pop
pusha
clc
mov
jecxz
je
stos
imul
in
nop
int
shl
mov
jecxz
cld
push
sti
pop
xchg
dec
outs
push
cmps
inc
rol
ds
pop
js
add
aaa
rcr
pop
sbb
stc
and
lock
loope
dec
fidiv
std
xchg
push
fnstenv
outs
mov
mov
xchg
add
xchg
dec
dec
mov
pop
pop
jae
inc
or
pop
xlat
gs
mov
mov
pusha
movzx
sub
and
rol
pinsrw
movs
inc
sbb
je
enter
(bad)
gs
(bad)
cmp
adc
sbb
mov
int3
ffreep
sbb
pusha
xchg
add
xor
pop
jae
fs
mov
add
fucomip
mov
(bad)
xor
adc
push
and
hlt
and
sbb
xchg
clc
push
inc
sub
cld
jae
stos
imul
adc
aam
dec
sbb
in
in
adc
push
add
aaa
out
push
xchg
outs
gs
xchg
call
jae
ja
test
xchg
je
mov
mov
sahf
jne
mov
jp
aad
hlt
aaa
adc
jge
sub
sub
call
data16
loop
in
inc
stos
mov
out
xor
je
mov
dec
cs
lock
lahf
stos
bound
lea
mov
fimul
xchg
stos
inc
iret
push
(bad)
test
ins
adc
pushf
mov
call
test
sti
icebp
push
stos
mov
jmp
mov
jecxz
out
sahf
rcr
clc
adc
inc
jg
jbe
jns
push
lock
mov
adc
ds
aas
mov
jge
sbb
xchg
fnstsw
mov
jmp
mov
scas
cwde
xor
js
leave
popa
lea
hlt
or
out
xchg
sub
adc
push
fstp
cld
hlt
xor
adc
sbb
fcom
call
fiadd
mov
test
and
sbb
loope
fldenv
dec
add
test
xor
adc
add
(bad)
jle
add
test
test
pop
jl
mov
repnz
mov
aaa
ror
jno
mov
loopne
push
inc
adc
inc
jl
jbe
push
nop
adc
mov
cmp
cmp
ret
xchg
nop
mov
push
xlat
mov
jo
mov
mov
in
jl
into
push
mov
mov
pop
fmul
add
enter
push
jge
sbb
imul
call
inc
push
push
xchg
pop
adc
xor
inc
cmp
xchg
inc
retf
fmul
addr16
out
cmps
in
sbb
mov
jae
pop
test
test
pop
pop
xor
ins
movs
(bad)
cld
shl
je
mov
xor
aad
shl
dec
ja
(bad)
mov
sar
scas
imul
cmc
sub
sbb
je
sbb
pop
xor
cmps
or
adc
daa
icebp
cld
rcl
pop
sbb
movs
mov
in
jb
xchg
pop
mov
in
dec
in
(bad)
lock
or
out
bound
scas
pop
jno
cmp
cmps
mov
sub
mov
xchg
cwde
sbb
and
push
fiadd
inc
call
mov
or
stos
cmp
push
push
and
mov
mov
(bad)
jmp
nop
jp
call
jmp
retf
push
jmp
push
sub
dec
popa
sti
adc
push
enter
sbb
pop
jbe
xor
(bad)
stc
xchg
jbe
jnp
add
(bad)
out
aam
and
mov
cli
xor
mov
test
mov
sbb
scas
push
add
stos
or
sub
push
pop
ins
into
jg
mov
jl
test
(bad)
lahf
icebp
test
shl
push
clc
fild
stos
ror
push
pop
sysexit
add
sbb
in
ss
and
sub
cmp
fwait
mov
xchg
das
jnp
xchg
cmc
rcr
sub
(bad)
jae
rol
xchg
hlt
arpl
add
sub
cmps
cmp
lods
ret
jb
out
cmp
jge
in
jmp
dec
das
js
loope
retf
adc
push
sbb
xchg
repz
dec
popa
aad
jae
cmps
fild
mov
js
leave
das
ja
inc
jmp
pop
and
or
push
pop
xchg
xchg
call
mov
cmps
movs
or
loope
cld
push
(bad)
hlt
inc
scas
push
add
lds
add
sbb
shl
sbb
popa
mov
cwde
in
push
adc
xchg
xchg
sahf
loop
addr16
std
push
retf
nop
fwait
adc
or
mov
loope
sbb
test
push
sbb
inc
cmp
cmc
or
jg
jne
enter
sub
sub
xchg
jne
(bad)
repz
and
mov
xchg
jg
out
mov
xchg
xor
stos
cli
cwde
cmp
mov
and
sub
sub
loop
pop
stos
mov
mov
fs
rol
xor
jge
cwde
(bad)
adc
ins
xchg
mov
dec
aam
jb
mov
lea
and
data16
js
ins
xchg
pop
mov
mov
mov
jne
iret
jmp
nop
sahf
std
movs
rcr
fnstenv
push
ret
mov
fstp
mov
jns
sbb
jnp
jmp
scas
push
mov
repz
icebp
adc
mov
cmps
adc
adc
sti
cmp
pop
jmp
mov
mov
movs
nop
out
fdivr
inc
adc
mov
int
retf
mov
rol
xchg
jmp
jecxz
into
push
lods
cli
mov
adc
and
pop
xchg
mov
(bad)
rol
aas
sub
xlat
pop
arpl
into
imul
fs
mov
mov
outs
ss
je
fstp
sbb
inc
hlt
outs
xor
mov
xchg
adc
mov
ret
aaa
inc
xchg
mov
mov
sbb
pop
cmp
mov
inc
inc
lds
(bad)
mov
nop
int
sbb
mov
push
cmps
movs
shl
ja
xchg
sbb
xchg
out
mov
ja
in
dec
add
jns
jmp
mov
(bad)
aad
add
jnp
js
add
les
les
push
sbb
dec
inc
mov
push
test
aad
xchg
push
shl
je
movs
lds
or
retf
sbb
pop
sub
push
mov
gs
(bad)
mov
push
jge
cmps
sbb
xchg
sti
shl
movs
xor
js
(bad)
je
mov
mov
gs
dec
jl
inc
cmp
mov
repz
shl
test
call
mov
jae
or
cmc
sub
mov
call
cmp
je
mov
push
add
xor
add
jl
sub
and
nop
ds
pminub
lds
inc
sub
ja
lock
inc
push
(bad)
ins
mov
mov
xchg
cdq
sbb
in
jmp
call
in
repz
inc
stc
and
and
fdivr
ds
and
arpl
jg
popf
add
inc
je
jbe
inc
movs
arpl
ret
push
dec
lock
inc
adc
loop
movs
xchg
cmp
pop
rol
xchg
dec
add
not
inc
or
cmp
mov
cmp
retf
imul
mov
mov
jl
sbb
mov
es
mov
mov
mov
xchg
xchg
movs
xchg
test
jae
mov
sub
hlt
scas
xchg
jle
xlat
dec
xor
and
mov
nop
xor
adc
pop
inc
loop
test
fadd
fwait
mov
les
pop
mov
inc
inc
xchg
stc
sbb
arpl
hlt
jae
(bad)
in
loope
lea
and
lods
mov
aam
aam
sbb
jl
mov
pop
adc
inc
sbb
scas
push
push
cmp
jmp
fcomi
inc
mov
test
ret
dec
inc
les
pop
jle
aaa
cmp
mov
fs
inc
jae
scas
add
pop
and
in
mov
scas
push
out
cmp
sti
lahf
xchg
scas
mov
ins
inc
cmp
mov
jae
add
fdiv
sbb
mov
cmp
inc
pop
jno
clc
movs
idiv
ins
stos
dec
push
cmps
add
mov
xchg
push
addr16
mov
inc
mov
mov
fld
cmp
sahf
mov
mov
aam
icebp
inc
in
or
addr16
mov
popf
mov
pop
and
nop
push
stos
mov
inc
sbb
mov
inc
push
pop
lods
mov
inc
or
mov
adc
das
push
cdq
sub
imul
mov
lods
jl
sbb
(bad)
iret
adc
add
xchg
in
js
js
xchg
mov
scas
cmp
stos
test
jae
pop
bound
push
ret
adc
or
test
cld
lods
jae
pop
ret
mov
fiadd
push
test
inc
xor
test
mov
sub
mov
mov
aaa
aaa
dec
xchg
cmp
test
xchg
fwait
cli
in
enter
jae
mov
mov
mov
mov
jnp
adc
adc
jmp
pop
(bad)
ret
mov
push
loopne
out
fistp
dec
outs
mov
inc
mov
hlt
out
xor
cli
(bad)
es
je
bound
jnp
arpl
mov
mov
nop
mov
add
push
mov
cmps
cmps
cmps
or
in
push
ss
test
hlt
ficom
sub
stos
push
sub
mov
dec
adc
data16
aad
jecxz
adc
sbb
jge
daa
gs
call
sbb
mov
xor
cli
ret
das
inc
add
push
lahf
popa
mov
adc
push
hlt
mov
hlt
dec
sub
jg
(bad)
(bad)
jno
adc
xor
mov
or
in
sbb
leave
sbb
cmp
adc
adc
inc
pop
das
nop
xlat
inc
repnz
xchg
dec
jo
fst
push
pusha
push
mov
mov
xor
ror
sahf
xor
ret
shr
dec
and
ja
in
iret
cmp
clc
scas
inc
popf
add
les
cwde
xchg
loop
hlt
stos
ss
adc
ja
pop
jns
call
inc
adc
jo
cmp
fst
mov
stos
push
cdq
lds
arpl
or
sub
xchg
mov
cmc
test
loopne
sub
fdiv
or
aad
push
(bad)
cmp
mov
pop
push
sbb
rol
dec
mov
jmp
ss
in
pop
sbb
call
stos
sbb
mov
adc
outs
inc
icebp
sub
cmps
shl
pop
mov
sbb
loop
or
and
cmp
jnp
iret
les
and
shl
cmc
push
fs
(bad)
fcmovnbe
xor
xchg
push
dec
data16
and
jb
rol
in
cmp
and
loope
inc
jnp
das
mov
out
adc
and
add
popa
jb
je
fwait
shr
(bad)
push
or
sbb
pusha
into
pushf
push
fnsave
dec
mov
ret
fild
pop
cmps
lahf
imul
dec
stc
push
push
jge
aad
and
and
mov
mov
call
cmp
adc
inc
xchg
ins
(bad)
jae
in
pop
jg
xchg
mov
and
adc
aaa
outs
aas
int3
sbb
addr16
cmp
hlt
lods
pop
jb
push
mov
pop
xor
iret
std
mov
fwait
mov
dec
cmp
mov
call
nop
xchg
scas
add
push
mov
jecxz
leave
jae
and
xchg
sbb
(bad)
dec
leave
jns
mov
sbb
and
vmovapd
icebp
scas
adc
pushf
mov
call
(bad)
(bad)
addr16
outs
jbe
jae
adc
in
pushf
nop
pop
jb
lahf
outs
mov
jmp
dec
and
mov
xchg
cmp
push
movs
xchg
or
dec
mov
jae
xchg
cld
pop
ins
repz
push
arpl
xor
enter
fwait
movs
cmps
aam
test
and
loopne
inc
and
hlt
fwait
mov
stos
into
jb
hlt
and
pop
inc
stc
ret
leave
cmc
cmp
adc
movs
ret
push
mov
inc
aas
jno
mov
ja
or
lods
cmp
pusha
push
jmp
repz
lahf
shl
in
mov
test
mov
xchg
xchg
mov
in
sub
fs
mov
retf
adc
bnd
cmp
mov
push
and
sub
adc
mov
test
jae
fmulp
push
add
mov
push
in
shr
push
sbb
jge
cmc
pop
rcr
dec
jbe
movs
nop
in
(bad)
jae
push
pop
xchg
sbb
enter
xchg
sbb
out
mov
(bad)
push
inc
push
inc
int
clc
push
xchg
ja
and
xchg
mov
jl
inc
icebp
pop
mov
fwait
sbb
sbb
dec
xchg
jnp
ss
jnp
xchg
fidiv
pop
mov
jns
adc
popf
ss
loopne
in
sbb
sahf
inc
cmps
xchg
dec
out
xor
push
jne
fmul
and
fcmovbe
fld
ret
sbb
pusha
adc
push
es
arpl
jo
popf
push
pop
adc
mov
inc
jb
add
sbb
dec
jg
pusha
mov
cmp
mov
mov
out
pop
das
icebp
sub
mov
mov
sbb
mov
cwde
jne
pusha
jmp
add
jmp
adc
xchg
mov
hlt
mov
ins
xchg
or
scas
push
out
pushf
pop
lds
push
cmp
jb
jns
stos
imul
jp
jno
leave
retf
(bad)
adc
xor
cwde
cmps
jae
and
inc
test
dec
jmp
inc
fnsave
pop
inc
push
gs
inc
(bad)
leave
stos
shl
mov
dec
fimul
aam
push
hlt
aaa
sbb
dec
jge
shr
mov
mov
je
out
jmp
ds
fst
loop
sahf
scas
jns
stc
pop
xor
test
test
mov
adc
cmp
int
rol
stos
popa
arpl
das
sub
push
push
cmp
bound
mov
lods
jg
adc
dec
xchg
mov
imul
inc
rcr
mov
sbb
js
sub
or
jle
adc
sbb
mov
mov
inc
or
fwait
mov
(bad)
mov
mov
leave
dec
xchg
call
sar
xor
pop
add
ins
fs
popa
jmp
xchg
lds
xor
into
sbb
pop
mov
mov
repz
repnz
fnstcw
push
jbe
sub
in
fidiv
pop
mul
sub
xor
jnp
xchg
jae
fild
dec
push
and
jp
pop
pop
out
xlat
mov
push
adc
pushf
and
or
(bad)
lds
out
lods
fiadd
inc
dec
mov
pop
call
fistp
jle
xchg
inc
sbb
inc
push
adc
pop
inc
lds
add
mov
xor
imul
repnz
inc
hlt
dec
and
jo
xchg
leave
push
sbb
dec
bound
jae
lds
inc
js
inc
neg
cmps
pop
add
dec
inc
pop
sahf
mov
inc
aad
mov
sub
xchg
jl
idiv
jae
and
dec
in
inc
cmps
inc
in
div
test
cmps
repz
popf
repz
xchg
stos
pushf
mov
repnz
cmp
js
jl
push
cmp
inc
nop
sbb
add
in
aam
cdq
fimul
mov
loop
xchg
stc
pop
outs
aas
imul
loopne
ss
mov
dec
clc
inc
sbb
push
pop
pop
xchg
movs
dec
cmps
rcl
adc
mov
fwait
leave
jge
mov
dec
jecxz
sub
comiss
or
rcr
sub
scas
sar
cmps
xor
fnsave
inc
jl
in
xor
xor
inc
sbb
sub
jo
xchg
lahf
jb
cld
pop
inc
arpl
in
sub
mov
je
sub
jb
push
cmps
mov
jmp
pusha
push
shr
sbb
mov
out
mov
xchg
dec
hlt
stos
cmp
clc
xchg
or
int
and
sbb
adc
mov
and
mov
into
ficom
js
adc
sbb
sbb
xor
xchg
les
inc
dec
push
ins
lahf
inc
jno
adc
xor
or
out
sbb
cmps
pop
cwde
pavgb
jge
push
les
dec
jl
mov
cmc
xchg
sub
adc
jae
ret
ror
adc
pop
cmps
in
inc
push
xchg
lea
xchg
xchg
pop
enter
pop
js
mov
stos
sar
xchg
inc
movs
lock
pop
test
mov
fadd
div
and
mov
xchg
add
inc
cdq
sbb
xchg
pop
pusha
jp
(bad)
fnstcw
sbb
cmp
xor
mov
push
mov
jnp
mov
clc
popa
(bad)
test
push
repz
ins
je
in
retf
dec
mov
pusha
and
pop
xor
pop
out
push
(bad)
aam
xchg
and
dec
sbb
inc
loopne
and
call
fwait
loop
xchg
and
js
ret
popa
or
jb
stos
inc
inc
sbb
xchg
xchg
lods
sbb
mov
mov
pop
pushf
adc
stos
je
inc
dec
push
pop
mov
dec
mov
push
pop
in
jg
jmp
cli
inc
aam
or
cmp
retf
add
cdq
loop
daa
(bad)
xchg
out
cmc
(bad)
cs
push
imul
mov
ds
in
or
xchg
popa
adc
cmps
inc
adc
in
xor
ds
loop
rcl
popf
jg
into
jp
hlt
adc
or
lahf
inc
inc
inc
xor
lea
iret
ja
js
mov
xchg
mov
aam
cs
sbb
pop
push
repnz
add
int3
cmovg
xchg
clc
jg
fwait
dec
sbb
movs
ins
or
mov
mov
add
push
adc
mov
es
mov
cs
cmps
fild
lods
mov
dec
loope
in
(bad)
loopne
inc
jo
dec
jae
pop
stos
mov
xchg
shr
push
loopne
popa
jnp
mov
test
fst
sbb
sub
mov
jge
je
jg
pop
push
adc
push
push
pop
fiadd
mov
js
das
and
push
or
movs
clc
pop
cwde
dec
sbb
imul
mov
or
inc
and
pop
fwait
dec
xor
sar
add
sub
push
sub
fnstsw
sbb
sub
pushf
dec
dec
shl
or
pop
cmp
ins
pop
sub
je
lock
bound
pop
mov
in
mov
push
rcr
scas
lods
adc
dec
jb
cmp
in
jg
cli
popa
xchg
pop
test
mov
inc
sbb
sahf
rcr
mov
test
call
dec
test
sti
sub
dec
pop
adc
mov
sub
movs
or
xchg
jb
cmps
pop
mov
lea
and
and
test
pop
dec
pop
movs
mov
call
jne
push
test
jmp
retf
and
xchg
cli
fcomp
jns
xor
inc
sub
push
fmul
mov
cwde
mov
pop
icebp
mov
stos
pop
lock
shr
(bad)
dec
jmp
call
sbb
inc
dec
jo
mov
int3
inc
ror
cmps
xchg
cmp
and
add
lock
stc
repz
es
jbe
in
mov
ret
jp
je
push
cdq
leave
stos
inc
add
pop
pop
(bad)
and
mov
hlt
jae
int
outs
adc
mov
ror
(bad)
mov
fidiv
in
cmp
je
xchg
cs
in
jecxz
and
sub
outs
fdiv
repnz
push
cs
push
jle
jle
leave
loopne
fisubr
div
rol
sub
pop
mov
(bad)
dec
aaa
cmps
inc
inc
in
mov
or
in
mov
inc
je
les
out
mov
shl
dec
fist
aad
pop
jns
repz
repnz
dec
pop
xchg
sub
jg
pop
outs
icebp
or
(bad)
out
adc
fcmovne
iret
std
and
std
adc
call
lock
xchg
inc
and
iret
push
shl
jle
ds
mov
(bad)
ds
inc
cmp
(bad)
clc
push
fstp
sub
mov
ror
pop
(bad)
sbb
sub
ins
inc
mov
movs
icebp
dec
aam
aam
imul
cmp
ja
popf
out
cmps
mov
mov
jbe
jg
inc
loopne
cwde
repz
std
adc
out
or
jg
arpl
jmp
repnz
rol
movs
ins
sbb
xchg
xor
cld
pop
mov
sbb
cmp
cmc
or
stos
sbb
add
mov
fwait
xor
cmc
test
jbe
pop
in
jmp
sahf
pop
cmp
dec
aas
in
in
pop
and
jecxz
out
inc
in
nop
int
sti
jo
mov
mov
in
cmp
add
outs
lahf
cdq
cmp
outs
out
sbb
mov
inc
dec
sbb
(bad)
stos
sub
cmc
je
push
ins
int
pusha
cmp
jp
pop
aas
mov
adc
clc
or
call
xor
inc
pop
test
pop
(bad)
repnz
retf
add
adc
jmp
adc
mov
or
ins
pusha
sbb
inc
ja
and
pop
xor
jmp
pusha
sub
ret
(bad)
and
hlt
push
je
stc
pop
mov
inc
cmp
xchg
push
jo
push
mov
ds
inc
retf
shr
mov
mov
test
or
or
call
lods
sub
mov
ror
bound
pop
in
aas
neg
mov
dec
push
loopne
xchg
mov
js
push
jmp
xlat
pop
pop
cmp
dec
mov
loopne
rcr
mov
shl
lea
cs
shl
shl
cmps
add
iret
add
pusha
pop
ins
into
js
mov
stos
or
je
pop
inc
retf
(bad)
aam
push
(bad)
imul
test
fs
and
loope
xchg
mov
push
rol
pop
aam
inc
mov
inc
out
sub
enter
jp
psadbw
sbb
nop
xor
neg
js
jmp
ret
dec
mov
push
ja
mov
mov
mov
push
outs
stos
daa
dec
sbb
sub
xor
add
pusha
enter
push
mov
vpavgw
and
ret
leave
xor
rol
push
repz
xor
lds
int3
sub
int
ror
rol
dec
shl
sbb
push
cmc
(bad)
jg
jne
lods
add
adc
mov
repz
fcmovne
sahf
adc
popf
and
movs
inc
test
pusha
fidivr
pop
dec
mov
lds
mov
out
xlat
inc
jmp
leave
push
out
fidiv
pop
aad
ror
push
out
push
data16
ror
pusha
sbb
xchg
inc
arpl
sbb
jp
dec
outs
enter
ret
repz
fs
adc
in
and
xchg
rcr
mov
pop
hlt
cmp
popa
push
pop
cmp
inc
and
push
mov
add
or
mov
adc
mov
cdq
jbe
ror
inc
out
and
pop
mov
das
jg
in
fs
inc
push
sub
rcl
mov
adc
daa
popa
stos
cmp
pusha
xor
imul
icebp
leave
inc
(bad)
pop
or
iret
(bad)
mov
inc
sbb
mov
(bad)
mov
jae
ror
nop
loop
lock
or
outs
push
ins
sbb
je
mov
jle
out
jmp
push
sbb
cmp
push
mov
jge
call
jae
sbb
rcl
leave
jns
cmp
in
push
xor
mov
jnp
adc
mov
les
clc
scas
loopne
push
(bad)
push
jecxz
sbb
xor
sub
xchg
out
or
push
inc
jo
pop
inc
ins
inc
retf
add
ret
mov
push
int3
out
mov
mov
jmp
xchg
xor
jmp
ins
inc
retfw
loop
adc
inc
je
mov
jbe
mov
jbe
jge
neg
stos
push
mov
cmp
jae
(bad)
mov
pop
sar
cdq
or
xor
mov
ja
mov
inc
push
bound
test
sbb
pop
pop
sti
stos
lock
mov
addr16
mov
mov
bound
sbb
scas
ror
cmp
hlt
mov
ret
(bad)
cmp
out
dec
in
push
ds
or
sub
jle
sbb
and
inc
fcomp
or
sub
dec
dec
js
cdq
jmp
adc
aas
arpl
jno
pop
or
xchg
xor
outs
mov
in
enter
je
retf
and
mov
rol
adc
popa
sti
xchg
mov
repnz
xchg
mov
inc
pop
push
jecxz
movs
pop
inc
xchg
push
xor
stc
maxps
push
in
cmps
mov
inc
(bad)
and
and
enter
push
xor
jae
pop
clc
sar
ins
lea
cmps
mov
dec
iret
push
pop
shr
pop
mov
push
inc
xlat
popa
in
xchg
in
push
xchg
ins
test
shl
jae
push
or
ins
ja
jno
fdivr
in
les
inc
jecxz
mov
mov
mov
cli
pop
in
jns
add
jle
fimul
js
stc
cmps
mov
mov
test
dec
sbb
jnp
scas
int
xor
mov
mov
dec
frstor
inc
adc
xchg
(bad)
mov
test
loopne
jo
cdq
push
xchg
fcom
aam
lds
sub
adc
std
gs
or
adc
dec
mov
out
push
jne
mov
mov
repnz
inc
xor
xchg
aam
rol
mov
push
adc
aam
cmps
mov
mov
lock
sub
out
test
jb
movs
jp
pusha
stos
cmp
pop
sbb
cdq
xor
ret
jb
mov
cmps
inc
jp
ror
adc
cmp
push
add
pusha
mov
jp
adc
shr
and
pop
mov
js
es
ins
psrlq
add
js
test
cmps
cmps
sub
jb
in
sub
repnz
xor
aam
cmp
add
mov
mov
mov
imul
movs
test
in
pop
ins
mov
(bad)
and
dec
stos
sbb
les
inc
pop
lods
sub
data16
jmp
mov
sbb
mov
(bad)
neg
xchg
test
mov
popf
retf
sar
mov
ins
inc
rdtsc
cmps
aaa
push
mov
and
xor
sbb
or
pop
loope
call
sbb
in
mov
cs
(bad)
jp
push
dec
outs
push
inc
outs
and
mov
push
xchg
mov
xchg
adc
jl
pop
fadd
lods
add
imul
and
shr
mov
sbb
push
jge
xor
mov
pop
pop
add
rol
adc
sub
aaa
arpl
sbb
adc
xchg
mov
fwait
sbb
test
pop
mov
je
cmp
sbb
int3
adc
aad
add
cld
jae
or
cmp
es
retf
je
enter
mov
mov
push
sub
jns
int
mov
push
pusha
(bad)
mov
cdq
xchg
ss
scas
pop
xor
mov
pushf
and
nop
jne
inc
movs
jge
sbb
sub
push
jl
jbe
(bad)
jns
cwde
test
inc
mov
ss
inc
pusha
xor
and
cmp
loopne
scas
mov
fisubr
iret
jno
shl
jae
xchg
sub
(bad)
(bad)
fs
movs
in
stos
mov
stos
adc
outs
or
fs
mov
jmp
or
inc
adc
(bad)
les
mov
add
cli
inc
lds
inc
aas
pop
and
sbb
xchg
cmps
js
icebp
cmp
pusha
in
hlt
test
sbb
pop
cdq
and
enter
mov
test
shl
pop
jbe
addr16
xlat
in
(bad)
adc
inc
or
dec
aas
and
push
stos
sub
or
jmp
pop
mov
movs
lods
in
cld
(bad)
dec
jo
xlat
clc
cmp
adc
push
test
and
push
aas
mov
push
mov
add
(bad)
inc
xchg
and
loopne
sbb
dec
sbb
mov
iret
call
jle
mov
cmp
jno
cmp
mov
jmp
inc
mov
pop
leave
adc
and
lea
out
and
jg
jo
fstp
jle
sbb
(bad)
sub
shr
cmps
repz
dec
jne
cmp
push
jle
mov
sub
sbb
into
in
ret
mov
jle
in
inc
jl
loopne
inc
add
push
adc
and
mov
mov
xor
test
mov
adc
mov
ret
lds
imul
jmp
loope
hlt
and
lods
fistp
jbe
popa
test
jmp
mov
je
jg
cmps
jae
mov
das
(bad)
ins
addr16
data16
iret
rcl
mov
cs
inc
hlt
(bad)
adc
adc
inc
push
(bad)
jl
adc
sbb
add
jae
xor
or
sbb
mov
icebp
sbb
movs
jae
mov
add
push
call
or
pop
stos
data16
adc
jmp
aam
jno
jb
fbstp
leave
push
test
cli
stos
clc
and
cmp
mov
retf
in
push
cmp
cmp
cmp
jno
sub
dec
lds
rcr
sub
in
xchg
outs
in
movs
shr
ja
loop
int
adc
push
push
mov
adc
int
dec
loopne
xchg
fsubr
jne
push
cmp
mov
mov
cmps
call
sar
fimul
(bad)
mov
pop
je
dec
jle
ins
ja
sbb
mov
push
enter
mov
jo
mov
in
out
push
fstp
pop
mov
cmp
cld
cmps
jecxz
cmp
push
cmp
inc
adc
stos
lods
(bad)
rol
lock
ret
or
jo
cmp
inc
ins
sub
jo
mov
mov
es
js
adc
and
cmp
push
stos
test
push
es
out
pop
mov
loope
shr
adc
aam
mov
imul
jns
mov
fbld
push
add
cmp
sbb
pop
lds
jne
xor
leave
adc
cmps
pop
add
jb
aad
out
mov
jae
test
inc
out
call
sbb
push
jp
loopne
sbb
fs
mov
xor
pcmpeqw
jmp
neg
iret
jb
(bad)
add
inc
aaa
(bad)
call
rol
mov
pusha
pop
pop
dec
rol
pop
cmps
sti
into
sbb
outs
and
fistp
(bad)
js
cmp
popf
loope
test
push
push
js
mov
and
push
sub
or
retf
lods
fadd
inc
fmul
adc
test
popf
and
sbb
xlat
cmps
adc
cmps
sbb
adc
push
retf
cmps
enter
cli
shl
jl
mov
jmp
sub
sti
mov
ja
lods
cmp
mov
jge
mov
add
jp
inc
cmp
mov
dec
lds
mov
gs
enter
jp
or
sbb
retf
jle
pop
cmp
jbe
popf
mov
sbb
push
push
mov
pop
fs
lock
xor
shl
loopne
pop
or
mov
pop
std
(bad)
(bad)
lds
inc
push
cmp
(bad)
mov
sub
popa
mov
lods
push
bound
cmp
addr16
sbb
ins
or
arpl
xchg
lds
into
mov
movs
jmp
dec
and
stos
dec
test
fidiv
iret
xor
jecxz
ror
test
das
jl
inc
inc
jecxz
mov
idiv
and
fisttp
pop
je
cwde
add
sbb
cmps
cli
imul
cld
daa
add
or
scas
in
xor
adc
add
xlat
sub
sbb
xchg
fwait
pop
imul
out
xor
sub
pop
clc
add
sbb
stos
inc
push
add
pop
clc
loopne
nop
clc
mov
mov
add
adc
in
(bad)
cmp
(bad)
jae
pop
cmps
(bad)
cmp
(bad)
mov
inc
test
mov
jecxz
neg
std
push
in
jg
sub
cmp
mov
ret
(bad)
pop
std
add
sbb
push
xor
ins
icebp
sub
jo
inc
sub
inc
inc
push
imul
shl
jmp
add
mov
stos
dec
sbb
sbb
xchg
test
les
dec
cmp
push
fild
sub
cmp
(bad)
fsub
retf
enter
dec
aad
outs
mov
jmp
cmp
arpl
or
dec
lods
sbb
(bad)
ror
test
in
sbb
dec
pop
adc
dec
lea
sbb
mov
sbb
fidiv
pusha
fstp
in
sbb
aad
cmc
xlat
or
sbb
jecxz
sar
dec
jae
push
xor
sub
jae
mov
jb
in
inc
jmp
add
adc
xchg
mov
nop
dec
dec
mov
stos
and
scas
imul
movs
dec
out
adc
lods
ret
cmp
daa
jmp
imul
mov
xchg
sbb
leave
or
lods
mov
fild
adc
dec
test
jl
loop
mov
lods
dec
jmp
fstp
outs
jge
jae
jb
pusha
cmp
mov
stos
and
jae
jmp
sbb
sbb
and
or
(bad)
mov
iret
inc
mov
jne
push
sub
sub
push
call
inc
push
in
or
arpl
xchg
test
int3
cmps
lods
jns
jmp
fnsave
sbb
xchg
and
sub
addr16
sahf
fcomp
mov
inc
jne
sbb
inc
push
(bad)
les
loopne
movs
test
mov
push
mov
mov
pop
dec
inc
out
int
test
fs
scas
mov
push
jge
xchg
fnstcw
and
and
pop
push
repz
inc
imul
mov
stos
sahf
mov
aas
aad
inc
xor
retf
xor
iret
sbb
imul
ret
jecxz
jmp
popa
cmp
mov
ins
cmps
mov
ffree
inc
jl
repnz
jmp
rol
jl
push
int3
jbe
adc
mov
push
repz
xchg
sbb
mov
or
mov
xor
jmp
xchg
loop
push
cld
cdq
aas
cmps
inc
push
mov
cwde
sub
mov
push
inc
cli
imul
call
jbe
test
jb
jp
fdivr
push
fisub
dec
call
sub
clc
inc
jg
(bad)
mov
loopne
mov
cdq
mov
pusha
and
pusha
cmp
je
enter
fst
imul
dec
ror
pop
mov
and
add
mov
rcl
sub
mov
test
jbe
pop
xor
div
jle
xor
outs
pop
ins
sbb
xor
inc
push
jae
pop
or
inc
pop
ror
dec
dec
aas
sub
pop
adc
mov
sbb
cld
test
push
(bad)
imul
sbb
and
mov
cld
adc
cmp
xor
or
mov
scas
jge
imul
push
mov
xor
dec
cmp
jbe
clc
stc
fadd
stc
sbb
jmp
mov
fistp
sub
mov
mov
add
imul
dec
addr16
sub
call
js
sbb
xor
sbb
cmc
out
xchg
mov
fisub
xor
leave
rep
mov
push
lods
xor
dec
adc
shl
cmp
sbb
xchg
cld
pop
push
add
fdiv
cwde
mov
clc
(bad)
stc
stc
mov
lods
jecxz
repz
je
pop
mov
inc
cwde
shl
js
daa
cmp
xchg
push
es
pop
rcr
xlat
dec
adc
lods
sub
je
ja
mov
out
sbb
rcr
adc
repz
pop
aam
jg
stc
add
xchg
inc
mov
push
cwde
lea
repz
jecxz
cs
stos
test
aaa
xchg
sbb
shl
loop
aam
cmp
or
cmp
in
add
mov
repz
pop
repnz
jno
popa
out
popf
jne
call
push
vaddps
int3
out
sar
stos
xchg
jg
cmp
cmp
add
(bad)
fst
dec
movs
jmp
xchg
jo
fwait
shl
mov
mov
mov
sub
test
mov
adc
mov
js
cmp
cmp
mov
in
sbb
and
xor
ja
(bad)
pop
push
mov
clc
adc
gs
jmp
pop
adc
fcmovu
jp
mov
inc
xor
psllw
mov
sbb
sub
sahf
(bad)
mov
cmp
jb
sbb
into
sbb
push
mov
xchg
daa
push
je
jge
outs
fsubr
stos
out
mov
das
imul
jae
pop
lods
test
jmp
mov
push
push
xor
out
loop
or
add
push
pop
jle
push
lock
dec
jae
xor
cwde
pop
stos
inc
sbb
sahf
sub
adc
dec
sub
retf
stos
test
mov
inc
sbb
add
pushf
and
nop
scas
fistp
sub
adc
ds
jl
push
repnz
cmp
je
xor
jae
mov
xchg
push
cmp
sbb
cmovno
inc
inc
mov
pop
scas
pop
test
cmp
nop
iret
dec
je
push
mov
mov
jns
stos
clc
push
ror
fimul
sub
nop
fnstsw
fstp
mov
jae
jns
les
test
rcr
cli
stos
xchg
pop
xor
mov
pushf
pop
call
pop
xchg
mov
mov
inc
jl
int3
clc
push
mov
pop
jmp
mov
or
int
iret
call
cmp
je
iret
jp
xchg
push
gs
(bad)
cmp
push
clc
or
into
shl
and
ja
test
int
jg
cmps
pop
xchg
sbb
dec
in
pop
jmp
xchg
(bad)
cmps
int
xor
push
dec
lods
getsec
pop
inc
clc
aam
int3
pop
(bad)
in
enter
dec
fild
inc
or
in
cwde
xor
add
xchg
adc
pop
aaa
fnstcw
or
sbb
jg
stos
rol
or
xchg
cmp
fimul
push
sbb
aam
xchg
aam
cmp
inc
and
sbb
je
or
fsubr
sbb
jl
xchg
dec
jae
dec
xlat
xor
sub
sub
dec
scas
je
nop
in
and
retf
outs
dec
mov
call
adc
aas
sub
mov
mov
xchg
pushf
xchg
pop
dec
lods
lock
dec
inc
out
jb
sbb
lods
jle
ficom
lds
rcl
aam
cld
outs
jb
adc
dec
mov
adc
jae
jmp
add
lods
sbb
cmps
inc
inc
adc
gs
push
xchg
jne
or
lods
les
mov
ret
(bad)
(bad)
xchg
movs
sbb
mov
mov
mov
mov
stc
cmps
cli
xor
daa
inc
jae
mov
jmp
shr
xor
pushf
mov
mov
inc
xchg
mov
imul
jp
(bad)
push
mov
xor
cmp
adc
retf
xchg
test
pop
je
push
pop
xor
and
mov
ret
je
(bad)
push
inc
daa
inc
jmp
repnz
dec
and
and
and
fwait
dec
mov
test
xchg
cmp
push
test
jae
fstp
(bad)
retf
mov
or
repz
aaa
ret
inc
hlt
data16
sbb
int3
mov
or
mov
add
test
dec
jne
sbb
add
adc
mov
js
mov
ins
cmp
pop
cmp
cmc
jge
jp
mov
cmp
js
out
push
int
mov
icebp
mov
stos
(bad)
jmp
add
jp
das
mov
sbb
ret
cmps
jp
add
sbb
mov
dec
sbb
into
xor
cwde
jb
shl
xchg
pushf
int3
push
mov
pop
push
adc
push
ret
mov
dec
ret
arpl
cmp
sahf
jge
cs
xchg
and
push
push
inc
int3
xchg
mov
push
mov
mov
sbb
js
leave
popa
mov
leave
pop
push
jmp
mov
mov
mov
push
push
outs
aam
rol
push
cmp
jo
stos
jae
inc
xor
inc
sbb
stos
adc
xlat
and
(bad)
cmp
adc
xchg
jl
out
pop
sub
or
xchg
cli
(bad)
cdq
mov
iret
xchg
sub
(bad)
jnp
dec
inc
sbb
push
je
inc
mov
and
arpl
xor
jb
inc
push
popf
xchg
icebp
or
xchg
imul
sbb
shr
mov
pushf
xchg
in
sub
jmp
xchg
cmp
mov
cmp
pusha
cmp
les
test
push
cwde
push
dec
imul
xchg
xor
dec
sub
pushf
cmp
fmul
push
hlt
cmps
sub
repz
iret
call
and
xchg
iret
pop
stc
addr16
lods
test
movs
sbb
sar
jl
sti
shl
aad
mov
mov
sbb
(bad)
and
push
push
loope
sbb
test
popf
dec
pop
dec
fnstenv
cmp
push
pop
aaa
test
or
into
jp
aad
loope
pusha
sub
clc
int
adc
mov
mov
sub
cmc
mov
lahf
cmp
call
mov
fwait
repnz
fs
push
jb
icebp
jb
inc
test
test
jg
call
(bad)
push
in
in
pop
je
(bad)
cld
pop
fwait
movs
aaa
arpl
ja
mov
or
loop
dec
cdq
div
push
pusha
adc
imul
cmp
mov
jp
sbb
mov
in
and
sbb
push
pop
xchg
sbb
ins
das
mov
sbb
aas
push
retf
hlt
enter
(bad)
mov
jns
mov
push
xor
inc
mov
cs
ss
shl
jo
pop
in
lods
xor
loope
sbb
cmps
jg
jmp
fwait
lods
jmp
sbb
mov
sar
in
pop
adc
cwde
gs
(bad)
fwait
or
adc
jecxz
in
inc
xchg
pop
xor
jg
sahf
fisub
lods
ja
popf
cmp
(bad)
dec
and
fwait
in
scas
add
pop
retf
push
mov
and
cld
adc
stc
ret
in
je
(bad)
stos
int3
sbb
mov
and
jnp
adc
lds
add
leave
mov
jae
gs
(bad)
jae
mov
cmps
int3
cmp
call
mov
in
adc
mov
mov
push
adc
cmps
inc
(bad)
xlat
dec
pop
mov
gs
test
pop
aam
jmp
pop
and
lea
test
mov
dec
or
gs
mov
fsubrp
sbb
dec
lock
sbb
cmps
lds
jbe
sbb
fadd
jecxz
fcmove
pop
push
jo
xlat
pop
dec
ja
and
mov
ficomp
xchg
push
fdiv
mov
repz
nop
push
push
lods
mov
aad
jb
leave
stos
dec
fwait
and
pop
mov
nop
dec
and
xchg
xor
enter
nop
movs
push
icebp
sbb
jmp
stos
mov
add
cmp
enter
rcr
jo
sbb
cmps
or
mov
loop
cmc
push
fidivr
retf
cmps
push
out
sub
xchg
jae
push
mov
or
aas
dec
inc
xchg
clc
out
xchg
push
jmp
das
call
jmp
in
cs
cld
and
imul
push
sbb
movs
mov
out
popa
inc
repz
mov
mov
scas
call
and
mov
stos
mov
xor
jnp
rcr
cli
dec
jne
ret
mov
repz
or
iret
addr16
call
test
sbb
sbb
cmp
loopne
xor
test
jnp
pop
cdq
pop
arpl
sbb
mov
dec
xor
repnz
sbb
mov
(bad)
gs
sbb
fwait
sub
sub
loope
ret
popa
add
in
and
call
push
jo
outs
in
adc
pop
xor
call
cmp
mov
sbb
sbb
sbb
fcom
mov
inc
int
jnp
xor
sbb
cmp
cmp
cmp
enter
mov
in
jle
and
ja
mov
jne
inc
das
int3
outs
test
xor
lds
or
test
je
repz
cmp
and
jne
cmps
push
shr
xor
jmp
xor
cli
mov
rol
adc
dec
aam
push
pop
xor
dec
aam
mov
das
movs
sbb
ins
imul
jb
test
sub
sbb
xchg
js
out
pop
mov
lods
jae
inc
mov
retf
sbb
inc
(bad)
cmp
mov
sub
lds
mov
inc
inc
add
(bad)
adc
push
jmp
fcmovu
shl
mov
pop
daa
jae
scas
sahf
rol
push
jl
xor
push
push
ret
jnp
aad
ror
stos
jnp
std
mov
push
push
movs
xor
dec
push
dec
mov
lock
sbb
(bad)
and
push
sub
sub
jmp
jmp
adc
cmp
mov
fisttp
ja
mov
jb
test
push
aas
jmp
cmc
dec
xor
movs
ss
jne
push
mov
and
mov
mov
outs
shr
push
push
inc
fs
mov
daa
or
sbb
inc
sub
imul
retf
repz
pop
sahf
out
fbld
or
mov
scas
xchg
scas
sub
push
sub
in
movs
mov
ss
cmps
sbb
rcl
ret
mov
not
ficom
lea
add
loopne
sbb
xchg
push
xchg
out
pop
cmps
loope
add
bound
jecxz
(bad)
sbb
div
sbb
outs
push
sar
mov
push
sbb
xchg
(bad)
es
or
pushf
xchg
mov
test
int3
ret
bt
sbb
das
hlt
jecxz
shr
cwde
mov
or
push
jo
test
and
sbb
xor
dec
hlt
adc
in
mov
inc
xchg
and
mov
sub
aam
push
minps
inc
sbb
push
std
sub
cmp
fsubrp
sbb
xchg
adc
mov
in
mov
push
xor
movs
fdiv
jmp
cmps
cs
mov
mov
inc
inc
mov
sbb
rep
or
test
jg
jnp
fnstcw
mov
mov
and
shr
lea
or
repz
(bad)
cld
jg
jbe
or
cmp
mov
inc
addr16
sbb
test
and
je
out
rcr
mov
cmp
(bad)
(bad)
je
add
jb
scas
test
xlat
adc
(bad)
cmc
cli
jmp
sbb
add
retf
jp
mov
rcr
icebp
add
lds
push
neg
sti
mov
pop
xlat
mov
lods
or
cmp
push
cmp
hlt
data16
sub
fdiv
loop
mov
retf
mov
pusha
and
and
and
imul
ret
inc
test
jl
not
imul
xor
lahf
mov
pop
repnz
cmps
sub
scas
je
jp
and
ds
ror
mov
(bad)
sbb
jp
idiv
mov
jnp
movs
(bad)
dec
or
add
movs
cmc
adc
cmps
cmp
sbb
test
mov
xlat
mov
jle
je
cmp
aaa
dec
shl
cmp
fld
jmp
(bad)
retf
leave
mov
addr16
repz
adc
mov
jnp
pop
mov
fmul
retf
add
test
ja
call
enter
sub
in
(bad)
jl
loopne
call
push
and
int
test
rcr
jl
cmp
cwde
sbb
inc
je
out
cmp
mov
lea
sub
aad
jge
fistp
push
adc
adc
movs
adc
pop
adc
mov
int3
mov
jne
icebp
je
xchg
jno
outs
stos
or
sbb
or
mov
std
loope
mov
and
mov
hlt
pop
cmp
rcr
imul
rcl
retf
or
or
push
cld
test
mov
cmps
jge
rcl
inc
mov
cmc
and
mov
and
adc
mov
mov
ret
int3
jne
pushf
jno
outs
popf
jmp
sub
aam
outs
mov
js
in
adc
sbb
mov
sub
add
mov
pop
sbb
je
mov
and
sub
std
icebp
jb
xchg
jno
in
dec
fdiv
sbb
sbb
les
push
dec
inc
mov
pop
cmp
jg
mov
mov
sahf
jl
mov
and
jo
adc
call
cwde
fnstsw
add
push
out
int
jecxz
sti
push
xlat
sbb
out
xchg
or
fcomp
inc
add
add
repz
mov
movs
sbb
les
jl
pop
mov
cmps
xchg
movs
adc
push
inc
ret
push
cmp
push
in
retf
mov
in
push
add
lock
adc
jbe
inc
xor
sbb
ret
neg
jle
shr
mov
movs
xor
or
mov
test
cmps
ret
add
adc
adc
xlat
xchg
xor
cmps
loop
cmc
jae
pop
out
jo
or
scas
push
repz
iret
sub
xor
or
sbb
pop
ins
icebp
mov
mov
das
pop
mov
inc
aam
leave
push
mov
test
fucomi
sub
cs
push
pop
cmp
loopne
clc
push
mov
cld
popa
cmp
scas
nop
retf
xchg
mov
xor
pop
stos
not
sti
in
sbb
aam
js
push
(bad)
icebp
mov
outs
pop
or
and
call
push
push
push
add
hlt
fwait
sbb
inc
push
fdivr
(bad)
call
pop
sbb
test
jns
pop
sbb
xor
jne
sbb
xor
rcl
adc
xor
aam
jmp
cmps
adc
iret
mov
in
outs
sbb
jecxz
pushf
sub
stos
retf
push
mov
call
inc
das
xchg
sbb
into
mov
ror
inc
add
jns
pop
dec
cmps
sbb
int3
mov
xchg
mov
test
and
and
cmp
mov
push
outs
mov
(bad)
adc
clc
sbb
call
xor
cmps
mov
xchg
jl
jge
jb
or
call
cmp
stos
xchg
js
into
add
fucompp
jg
call
jg
sbb
push
mov
sub
or
jo
xchg
arpl
pop
xchg
inc
leave
daa
mov
add
aas
test
push
popf
ja
test
retf
adc
jp
or
push
push
inc
dec
stc
pop
pushf
xchg
inc
sbb
add
in
test
sbb
mov
adc
xlat
adc
das
bound
shl
jae
jg
or
sbb
nop
imul
in
pop
pop
sub
or
or
adc
sbb
into
adc
leave
int3
dec
jne
jl
mov
mov
mov
scas
cmps
add
pop
addr16
inc
js
aam
rol
and
out
cs
xchg
addr16
mov
jl
inc
loope
jl
adc
jle
jb
mov
mov
in
push
rcl
xchg
jnp
cmps
mov
into
mov
pop
pushf
pop
dec
jle
in
mov
shr
fwait
adc
push
shl
call
inc
jmp
ret
mov
adc
pop
rcl
je
fucomp
js
xor
push
xor
pop
dec
lds
jae
lea
or
call
out
stos
test
jmp
mov
call
push
add
pop
xchg
iret
neg
and
lea
inc
in
call
f2xm1
in
lahf
sbb
sub
imul
lds
pushf
inc
test
in
xor
mov
push
imul
rol
jns
mov
cmp
xchg
inc
jne
pop
ja
in
sbb
cmc
lods
cmp
jae
jns
sbb
sbb
lock
test
cmp
bound
int
mov
cmp
xor
cld
js
add
lds
cmp
gs
sub
rcl
jne
add
adc
jae
lock
inc
std
adc
jl
test
xchg
cmp
jle
cmc
xchg
inc
(bad)
push
jns
and
cmps
aad
aaa
xchg
outs
aam
stos
ja
aad
ja
inc
std
push
jbe
inc
sub
cmp
cmp
add
push
adc
cmp
lahf
in
fs
repz
push
pop
push
mov
jg
je
pop
and
mov
xor
cmps
nop
xchg
cmps
movs
test
aad
cmps
inc
mov
lds
int
fbstp
clc
or
push
jbe
stos
gs
hlt
in
mov
in
xchg
jl
ins
cmps
movs
(bad)
es
aad
inc
in
ror
nop
pop
sbb
inc
aad
push
inc
and
inc
inc
loopne
jae
jmp
or
ja
or
and
push
mov
sti
xlat
les
push
fucomip
mov
jbe
mov
mov
pop
and
sbb
xchg
jo
mov
cwde
xor
ret
mov
ror
push
jns
lock
iret
sbb
inc
push
inc
ret
mov
or
xchg
xchg
jae
push
les
lock
fdiv
jae
inc
fisub
push
leave
adc
mov
arpl
jge
mov
adc
test
xor
or
pop
inc
and
scas
cld
mov
fs
in
aam
fisttp
sbb
out
sbb
pusha
test
dec
(bad)
cli
jne
pop
scas
inc
ror
adc
lods
or
repz
jb
cmp
push
xchg
cmps
cmps
and
or
(bad)
test
xor
fild
xchg
mul
icebp
ja
mov
sub
cmp
mov
xchg
jno
mov
ret
outs
and
dec
inc
ja
iret
cmp
adc
jo
mov
xor
or
call
xor
cmp
dec
jo
or
pop
addr16
push
movs
addr16
popa
ss
je
dec
cmp
xor
fs
and
icebp
sbb
repnz
jb
mov
sub
push
xchg
enter
xor
ret
out
(bad)
stos
adc
cmp
adc
lds
ins
xchg
das
pusha
xchg
imul
jge
js
(bad)
mov
rcl
mov
test
imul
mov
sbb
ins
(bad)
push
adc
adc
retf
push
xchg
popa
pop
mov
adc
sbb
adc
push
mov
sub
pop
test
sar
into
(bad)
xchg
cmc
pusha
fistp
mov
enter
sbb
cmps
inc
push
sub
mov
push
jg
inc
ret
and
sti
aaa
jmp
out
xchg
inc
jge
sbb
in
sub
jne
xor
mov
leave
out
test
xchg
sbb
dec
mov
popf
mov
fst
dec
sbb
je
jns
fisubr
inc
ss
cmp
xor
adc
jo
cmp
xor
sub
cld
nop
dec
(bad)
push
xchg
add
retf
xchg
sub
jmp
push
inc
les
fstp
and
mov
shl
add
addr16
cdq
jb
shr
es
and
add
dec
xor
cmc
mov
dec
lods
out
add
lods
pop
adc
(bad)
mov
and
xor
and
mov
inc
push
pop
pop
xor
push
cmp
ja
jae
popf
jge
cmp
int
inc
inc
out
push
inc
mov
inc
test
cmps
jmp
mov
jb
adc
jns
xor
(bad)
push
sbb
mov
lahf
push
aas
test
fwait
rcr
jl
mov
cmps
adc
mov
xchg
cmc
jo
add
jp
mov
enter
and
mov
or
rcl
sbb
inc
push
dec
lea
rcl
in
loope
arpl
mov
jle
pop
jae
push
out
movs
mov
dec
xor
inc
cli
sbb
jmp
xor
mov
sbb
gs
push
bound
cmp
xchg
mov
mov
inc
push
adc
(bad)
dec
sbb
dec
jb
lock
mov
fst
add
cdq
int3
iret
mov
pop
xchg
xchg
test
xor
test
mov
div
lds
jg
lds
ja
out
lods
lods
out
fnsave
or
leave
aaa
sub
mov
jmp
xchg
push
jae
adc
hlt
imul
(bad)
lock
and
jo
pop
stos
fidiv
ss
(bad)
push
stos
mov
adc
in
inc
mov
nop
xchg
ja
inc
rcr
hlt
leave
jae
or
jmp
or
dec
call
sahf
push
stc
xor
pop
jae
fwait
loop
sbb
pushf
jecxz
and
sbb
push
mov
push
mov
mov
inc
lahf
dec
pop
adc
jb
fwait
out
xor
sbb
push
lods
or
(bad)
mov
mov
dec
dec
xor
jbe
xchg
pusha
fadd
inc
aas
cmp
mov
mov
mov
jae
rol
and
mov
in
ds
push
dec
mov
xchg
mov
and
add
or
mov
sub
in
jns
hlt
repz
cmc
stos
rcr
vmread
cmc
mov
pop
inc
jl
adc
aaa
xchg
je
adc
mov
(bad)
jnp
mov
adc
fsubr
out
ds
inc
mov
and
pusha
inc
mov
push
xchg
inc
push
rol
fidiv
sbb
and
mov
loopne
(bad)
mov
sbb
jns
shr
nop
cmp
stc
loopne
aaa
cli
sahf
push
frstor
xchg
ret
xor
mov
jne
pusha
cmp
enter
addr16
outs
sbb
mov
xchg
pop
adc
movs
or
jmp
mov
pop
sahf
in
shl
add
mov
or
jno
mov
in
cli
call
sar
mov
std
dec
cld
lahf
push
les
popf
stos
pusha
xchg
imul
fcomp
leave
inc
sub
scas
std
inc
sbb
mov
sub
xchg
xor
jo
mov
mov
movs
test
mov
sub
xor
inc
dec
dec
retf
push
bound
inc
push
mov
add
leave
mov
fld
fucompp
in
xchg
mul
ins
(bad)
fwait
pusha
nop
xchg
in
adc
xchg
push
xchg
je
xchg
scas
je
inc
ud0
shl
popf
int
pop
leave
dec
dec
ja
add
into
cmp
adc
sbb
ret
and
pop
fimul
in
add
and
daa
cmp
scas
popa
jns
daa
adc
mov
out
aaa
fidiv
lods
adc
xor
je
adc
jmp
lods
push
test
mov
dec
push
aas
push
sub
(bad)
xor
call
rcr
mov
sbb
aas
and
pop
test
mov
(bad)
nop
sub
mov
into
repnz
and
mov
jecxz
sbb
div
mov
mov
in
dec
nop
mov
sbb
frstor
aaa
mov
into
fnstsw
add
push
cmp
sub
mov
sbb
shr
sar
lods
sbb
iret
inc
iret
sbb
pop
or
test
jbe
sti
stc
lods
shr
nop
fcmove
mov
jle
inc
in
push
and
jle
add
rol
js
and
fiadd
aas
mov
push
addr16
mov
fistp
mov
call
push
call
cld
idiv
push
mov
pop
adc
js
pop
aas
xor
mov
iret
std
jb
lea
and
nop
jmp
sbb
xchg
xchg
popf
int
adc
sub
jnp
stos
imul
cld
cmp
retf
or
jmp
sbb
icebp
loope
dec
jns
sbb
push
sbb
mov
mov
out
lea
ret
mov
jae
jae
or
jnp
push
inc
out
not
push
pop
stos
add
sub
mov
mov
repnz
(bad)
xchg
rcl
or
xlat
add
test
jae
ret
or
nop
inc
add
and
push
adc
pusha
inc
sbb
cmp
(bad)
or
enter
lea
pop
aam
in
pushf
nop
or
cmps
sti
ins
test
dec
fcmove
add
in
fcom
push
push
je
dec
(bad)
ja
ficomp
and
push
add
xchg
and
mov
jno
test
pusha
cld
je
(bad)
fldcw
lea
xor
inc
in
mov
jne
stos
popf
fwait
xchg
xor
jnp
fwait
mov
js
fistp
fwait
jns
stos
push
clc
xor
shr
jo
retf
movs
jge
mov
sbb
jne
ret
fiadd
add
lods
repnz
mov
js
(bad)
mov
enter
or
xor
inc
adc
nop
xchg
es
arpl
clc
aam
or
jae
fistp
sbb
jnp
js
scas
push
fchs
or
sbb
lods
icebp
adc
xor
stc
xor
adc
lock
ins
jbe
loopne
inc
clc
mov
add
stos
shr
ds
xchg
test
inc
test
scas
iret
mov
icebp
hlt
ins
pop
test
inc
leave
mov
aam
and
xchg
pop
sbb
adc
bnd
mov
test
mov
push
xchg
pop
xor
imul
(bad)
push
xor
ins
sub
cmc
js
mov
inc
out
movs
into
push
jmp
sbb
scas
jmp
jne
dec
jo
push
jmp
dec
(bad)
in
xchg
cmp
push
xor
mov
push
ds
jo
jns
test
cdq
dec
push
cdq
retf
pop
je
mov
sbb
daa
xchg
sub
jae
and
in
adc
add
mov
cmp
cmps
xchg
neg
jo
dec
mov
jo
ret
hlt
ins
xor
loope
mov
xchg
cmp
mov
test
test
and
inc
lea
jl
cs
test
das
sub
stos
lahf
int
xor
and
push
push
enter
adc
sbb
cmc
xchg
jle
fs
push
jecxz
lock
mov
pusha
ja
jl
inc
int
adc
aad
xchg
clc
mov
sbb
mov
outs
mov
mov
mov
rcl
(bad)
push
mov
retf
aad
out
cdq
shr
sti
sbb
mov
jns
movs
adc
int
push
(bad)
sub
jae
xchg
sbb
cmps
mov
retf
sbb
mov
adc
pusha
inc
add
ja
sbb
fild
fdivr
xor
aam
movs
iret
xlat
xchg
(bad)
(bad)
call
dec
shl
adc
lods
jae
xchg
cmp
pop
stos
(bad)
fstp
das
adc
push
repz
pop
cmp
and
mov
inc
xchg
neg
add
mov
mov
cmovns
inc
mov
gs
imul
dec
cmp
mov
je
dec
pop
pop
inc
es
and
mov
adc
sub
icebp
arpl
rol
sbb
or
mov
fistp
call
lds
add
inc
inc
inc
cmc
pop
in
shl
mov
je
mov
push
sub
dec
fcom
push
cmps
push
int3
xlat
pusha
xlat
mov
test
push
aam
jg
fisttp
xchg
les
inc
icebp
div
push
push
stos
lds
adc
hlt
sbb
in
imul
mov
jne
mov
(bad)
repz
(bad)
push
jae
out
add
sub
pop
test
popa
repz
imul
and
dec
cmps
retf
adc
xchg
aam
push
sar
xor
setae
cli
scas
leave
dec
xchg
ds
in
cmp
movs
cdq
stos
(bad)
inc
pcmpgtw
retf
and
cmc
jae
xor
cmps
scas
mov
cmp
js
mov
shl
sti
mov
lods
inc
ds
add
mov
cli
sbb
lock
xchg
enter
or
nop
adc
lds
aas
loopne
cmc
sub
test
arpl
mov
cmp
es
push
mov
mov
test
mov
fistp
and
or
ret
sub
mov
das
jb
inc
xor
int
(bad)
int
fidiv
cmp
pop
(bad)
movs
and
loop
push
mov
adc
lds
nop
js
xchg
add
call
outs
out
cmp
pop
adc
sbb
jle
lods
or
xchg
sbb
sbb
mov
sbb
xchg
mov
inc
mov
jb
adc
mov
rcr
mov
cs
cwde
pop
mov
lds
adc
call
mov
jno
add
mov
pop
xchg
nop
sti
shl
push
jecxz
call
xchg
test
clc
(bad)
mov
in
push
shl
xchg
or
in
imul
mov
js
enter
xor
retf
pop
cmp
adc
cwde
sub
add
(bad)
inc
(bad)
test
sar
jb
jmp
daa
sub
xchg
add
push
mov
adc
mov
das
xor
push
pop
xor
inc
ins
mov
xor
das
sub
scas
push
test
push
clc
and
arpl
es
sbb
int
inc
push
fldcw
repz
mov
stc
mov
mov
stos
jne
cmps
sub
xchg
dec
das
inc
jge
out
dec
cmps
inc
aad
movzx
pop
inc
cmps
jae
mov
das
lods
and
sbb
les
out
stos
repz
sbb
aad
je
aad
push
cdq
sbb
jle
sub
push
and
lods
adc
jle
sbb
sbb
(bad)
pop
aad
xchg
sub
loop
sbb
test
repnz
stos
inc
mov
dec
add
adc
xchg
sbb
stc
xor
cmps
inc
mov
pop
repz
pop
push
push
fcmove
push
sbb
xchg
xor
sub
sub
push
(bad)
or
add
fcom
sbb
sbb
loop
stos
aas
sbb
jo
xchg
sub
fldenv
sub
fidiv
(bad)
mov
adc
pushf
and
test
push
ins
addr16
add
fmul
sbb
test
push
mov
jae
xor
rcl
lods
mov
mov
jp
into
cmp
outs
std
mov
gs
jo
mov
adc
outs
(bad)
stos
lahf
cmc
push
adc
mov
mov
jmp
xlat
rcr
imul
sub
out
mov
fdivr
inc
pusha
or
test
iret
cmps
test
aaa
leave
lods
sbb
inc
sub
inc
lods
outs
push
adc
lods
or
push
aas
sbb
clc
jb
in
fbstp
inc
icebp
cmps
pusha
xchg
stos
imul
imul
stos
jle
mov
dec
cmp
movs
or
sub
ret
mov
xor
sti
xlat
lods
stc
retf
pop
int
jnp
lahf
jmp
gs
jno
xchg
or
mov
fist
and
call
aas
jnp
and
dec
addr16
add
loope
cmp
repz
inc
pop
nop
xor
out
int
dec
mov
mov
inc
jmp
xchg
add
in
adc
inc
(bad)
push
and
les
test
dec
cmp
sbb
iret
cdq
jo
mov
aam
cmp
div
cmps
adc
je
mov
aas
inc
push
std
sbb
sbb
dec
aam
icebp
retf
mov
xchg
cmc
jle
int
pop
retf
xchg
mov
sub
push
dec
retf
mov
push
js
inc
pop
les
cmp
pop
jbe
imul
mov
iret
xchg
xchg
imul
and
repz
push
dec
rol
mov
retf
out
inc
or
inc
jns
cmps
pop
stos
retf
dec
(bad)
sub
out
test
je
test
adc
div
jo
push
daa
and
jle
int
push
stos
mov
sbb
aam
sti
js
cdq
ds
jo
movs
cmp
push
adc
jmp
push
cmp
lds
dec
mov
aad
cmp
out
clc
pusha
aam
and
mov
(bad)
mov
or
fldenv
xchg
int
in
rcl
cli
call
or
push
mov
add
pop
unpcklps
sbb
stos
pop
dec
mov
adc
sub
stos
sub
dec
pop
ds
push
fst
in
pop
or
mov
in
or
dec
out
bound
sbb
scas
push
jae
retf
mov
push
sub
jno
or
fdivr
addr16
fdiv
and
sub
cs
jecxz
enter
xor
dec
jl
mov
pop
jo
pop
(bad)
fidiv
jle
mov
adc
pop
mov
std
cmp
adc
popf
pop
rcl
and
xchg
inc
push
movs
push
sahf
sbb
mov
adc
inc
jle
retf
jmp
dec
push
push
cmp
fwait
outs
push
arpl
sbb
add
adc
cs
adc
dec
pop
call
push
test
mov
pop
push
std
in
xchg
sbb
jae
mov
and
push
mov
je
into
mov
inc
ins
out
shr
cmp
inc
lods
dec
repz
add
cmp
inc
mov
or
es
add
jle
ja
hlt
imul
xchg
lea
mov
aad
xchg
hlt
repnz
sub
stc
adc
xor
into
dec
dec
stc
sub
out
ret
aas
aad
inc
popa
or
sbb
xchg
ss
dec
pop
and
add
ja
ins
sbb
(bad)
sahf
pop
push
fwait
push
jp
mov
(bad)
cmp
pusha
ss
pushf
jae
fs
out
stc
ins
in
and
aas
jmp
mov
gs
gs
pop
push
dec
pop
retf
enter
pusha
scas
jno
dec
sub
aad
dec
enter
sub
inc
outs
mov
jne
imul
loopne
push
fs
cdq
lds
jae
maxps
adc
add
loopne
cmp
xor
stos
mov
mov
pop
xchg
int
jns
push
scas
sbb
fisubr
aaa
or
cli
call
mov
out
mov
sub
test
hlt
xor
mov
sub
fs
or
and
int
inc
sbb
(bad)
inc
jns
dec
xchg
jnp
les
jge
or
fist
sub
leave
jbe
inc
and
mov
push
clc
mov
xor
pop
dec
je
xor
add
jb
sub
mov
sbb
fisttp
mov
icebp
mov
jae
test
rcr
je
and
jmp
fdiv
mov
aaa
push
cld
xchg
fcomp
cs
sahf
jecxz
or
cmc
call
push
retf
push
add
adc
pop
test
scas
je
push
push
dec
addr16
jg
mov
push
mov
jno
daa
sub
aas
int
jbe
sub
and
pushf
(bad)
lods
inc
sub
adc
push
push
lods
cmps
sub
popa
pop
ret
ret
xor
mov
xlat
dec
dec
sbb
cmp
rol
scas
sbb
dec
dec
loope
int
in
int
pop
aad
mov
sub
clc
mov
aaa
in
jo
xchg
mov
gs
push
nop
in
cmp
cwde
xchg
hlt
rcr
add
cmps
dec
mov
shl
rcr
in
dec
mov
je
lahf
and
sbb
jmp
xchg
sbb
inc
jmp
mov
mov
rcr
mov
mov
mul
xor
mov
and
aad
pusha
retf
jne
sbb
push
sub
mov
das
lods
loop
xor
mov
es
shl
test
sbb
cli
test
fwait
inc
mov
mov
sub
push
ss
and
xchg
cmp
int3
je
sbb
scas
adc
lods
inc
mov
in
cdq
into
and
enter
inc
inc
push
ffree
bound
jp
xchg
mov
aas
mov
aam
loop
(bad)
jmp
lods
jbe
into
fisubr
dec
movs
clc
xchg
jmp
addr16
repz
mov
nop
ins
xlat
outs
inc
dec
mov
mov
stos
in
ja
(bad)
or
stc
adc
mov
ret
ret
push
mul
rol
push
mov
imul
inc
sub
inc
xor
pop
fild
into
mov
into
pop
mov
pop
clc
fldenv
scas
jo
inc
pop
cmp
idiv
retf
outs
arpl
leave
sub
mov
dec
mov
sahf
sbb
push
inc
push
mov
jl
in
loope
(bad)
add
jnp
ja
add
std
fist
out
and
(bad)
shl
mov
dec
inc
repz
cwde
fs
xor
xchg
or
pop
imul
pop
out
(bad)
in
mov
ja
xchg
pusha
outs
popf
cli
and
movs
push
test
retf
ret
frstor
mov
and
sbb
cmps
dec
sbb
mov
inc
lock
jbe
shr
adc
adc
dec
push
out
and
retf
jle
rol
push
dec
or
jae
xchg
mov
dec
xchg
jle
aam
adc
mov
mov
arpl
pop
stos
ror
movs
jo
pop
mov
pop
sar
jno
xor
aam
mov
sbb
inc
rcr
lds
mov
sbb
rcr
es
lahf
cmps
pop
test
sbb
pop
not
mov
cmc
aas
test
adc
stos
inc
test
jae
dec
xchg
out
mov
sub
sbb
call
stos
out
data16
out
stos
call
call
push
lods
fst
push
mov
push
mov
into
add
xchg
rcr
mov
push
and
cmc
inc
xchg
cmp
enter
push
fst
jns
adc
jb
mov
push
fldcw
xchg
enter
je
out
adc
xor
sbb
adc
and
sub
iret
jns
mov
sbb
ja
stos
dec
adc
lods
xor
push
or
push
push
dec
or
arpl
sub
xchg
mov
(bad)
(bad)
cmp
cmp
out
inc
adc
mov
jbe
adc
into
repz
cmp
mov
jp
sti
dec
mov
or
pop
aam
mov
sbb
or
xchg
jb
add
and
jns
inc
jge
(bad)
shl
push
mov
pop
mov
in
push
imul
mov
jbe
pop
jae
repnz
in
mov
sbb
inc
aas
pop
push
push
shr
mov
add
lods
enter
ret
sub
jae
add
xor
push
push
dec
mov
cmp
pushf
in
adc
jnp
fisttp
add
retf
enter
pop
mov
repz
sbb
out
les
mov
cmp
jae
push
or
gs
je
out
xchg
mov
mov
sbb
adc
loop
xor
xchg
sbb
xor
jnp
and
(bad)
dec
dec
and
sbb
push
push
movs
mov
pop
mov
in
(bad)
ja
mov
imul
hlt
push
push
pop
sub
xchg
jae
sbb
and
adc
mov
xchg
imul
adc
inc
bound
cdq
pushf
lahf
fidivr
jne
leave
push
mov
lahf
add
and
mov
adc
ja
test
lods
jae
pop
shr
push
add
xor
pop
xor
jbe
aaa
sbb
push
push
push
imul
pop
xor
scas
addr16
pop
int3
sub
stos
pop
xchg
retf
ret
jg
xchg
xchg
out
jae
rol
cmc
sbb
mov
adc
ins
arpl
dec
xchg
mov
fs
aaa
cmp
mov
idiv
or
popf
or
std
outs
outs
sbb
je
imul
mov
es
stc
call
(bad)
pusha
enter
popa
pop
test
sbb
add
scas
jle
mov
rcr
call
retf
addr16
push
bound
(bad)
(bad)
cmp
sub
(bad)
or
jecxz
in
jo
gs
xchg
imul
fwait
mov
mov
xchg
add
push
icebp
sbb
sub
(bad)
jg
retf
aaa
jg
cmps
and
mov
stc
ins
push
pop
in
stc
jnp
hlt
mov
cli
sbb
or
fidiv
cli
jns
jnp
scas
movs
popf
adc
repnz
aas
pop
cwde
out
in
pop
inc
cmp
ficomp
movs
imul
inc
or
pushf
popf
mov
sbb
inc
fnsave
pusha
(bad)
xor
mov
dec
aad
mov
pop
(bad)
inc
mov
loope
lods
sub
mov
shl
mov
(bad)
aas
or
test
lahf
ret
sub
xchg
mov
push
cmp
mov
lea
pop
pop
movs
inc
cli
pop
jg
icebp
or
mov
jmp
and
sub
inc
inc
rcr
mov
mov
and
das
dec
or
jmp
push
mov
pop
scas
call
call
and
inc
pop
adc
stos
bound
mov
stc
adc
call
cld
sub
rcl
mov
jmp
iret
popa
xchg
fild
sbb
jnp
dec
cmp
adc
xchg
lds
adc
adc
imul
std
mov
mov
xor
pop
call
das
add
mov
je
pop
scas
imul
pop
jae
fcomp
sub
fist
imul
inc
hlt
push
mov
add
add
(bad)
nop
lock
pop
mov
shr
jbe
adc
push
fwait
popf
rcr
lds
mov
inc
xchg
mov
jns
mov
cmps
add
mov
jae
adc
or
sub
fwait
ret
lea
adc
pop
mov
test
(bad)
call
movs
loop
mov
add
inc
mov
cwde
sbb
jnp
fwait
xlat
pop
movs
(bad)
sbb
mov
adc
jnp
jne
pop
ror
call
and
and
jns
mov
call
imul
mov
daa
movs
cld
dec
xor
push
add
and
xor
jg
adc
ds
mov
adc
loope
retf
pusha
loope
nop
out
cmp
jne
mov
pop
(bad)
push
mov
mov
xchg
lods
sub
mov
dec
push
sbb
sbb
xor
xchg
or
popf
push
xchg
aam
leave
hlt
out
rcl
jae
or
push
faddp
mov
data16
xor
aad
mov
mov
ror
cmp
xchg
mov
push
cmp
jae
sbb
mov
pop
sbb
sbb
push
and
push
cmp
mov
lock
jmp
xchg
and
sbb
repz
mov
arpl
xor
or
addr16
mov
jmp
in
dec
mov
fldcw
sbb
jmp
add
test
(bad)
(bad)
mov
sub
xchg
xchg
bound
jmp
int3
xchg
ds
or
pushf
cdq
mov
jae
jl
add
pusha
ja
aad
mov
ret
in
sbb
fdiv
inc
inc
push
xchg
repz
adc
pop
(bad)
adc
je
sbb
fs
push
inc
or
dec
fnstsw
lods
jne
shl
adc
xchg
push
imul
dec
push
jl
jae
adc
mov
adc
hlt
xor
mov
cmc
push
add
push
sbb
push
cmp
ds
enter
jmp
jnp
push
daa
jne
ret
mov
mov
and
pop
lds
mov
sbb
sbb
adc
dec
push
inc
clc
imul
aas
in
sub
jge
cmps
dec
mov
pop
sti
sbb
pop
clc
and
movs
adc
fdiv
jge
sbb
pushf
sahf
jne
lds
out
xchg
inc
xchg
mov
ins
aam
jae
mov
out
sar
mov
mov
xor
jp
add
movs
call
into
mov
xor
push
xor
xchg
mov
retf
add
jae
pop
jns
adc
lods
xor
int3
daa
jmp
inc
or
xchg
jae
sbb
mov
mov
dec
add
and
loopne
in
and
push
iret
and
mov
add
push
loopne
sbb
inc
adc
xchg
adc
pop
mov
mov
mov
cmps
xor
jecxz
jp
ds
mov
dec
pop
cmps
sbb
jle
mov
pop
test
or
xchg
inc
stos
ror
jl
fnstcw
ficomp
adc
xor
bound
pcmpeqb
xchg
sbb
add
ss
and
mov
pop
movs
add
sub
retf
xchg
push
repnz
cmp
sar
mov
cs
jae
retf
push
inc
iret
daa
dec
pop
sbb
push
push
mov
loop
inc
(bad)
shl
and
jae
test
ret
xchg
cwde
or
jb
cmc
jne
xor
jae
(bad)
hlt
arpl
pop
xchg
lods
repz
ins
xchg
cmps
aam
jae
sub
popa
jecxz
sbb
push
bound
xor
call
push
add
mov
in
push
pop
test
mov
or
xor
ss
pop
popf
aas
je
mov
and
cld
loop
cmp
mov
in
cmp
movs
je
std
ins
test
dec
out
jb
cmps
mov
mov
inc
mov
das
jne
mov
xlat
jae
add
retf
imul
jmp
dec
jnp
ds
xor
jb
mov
repz
movs
in
iret
in
cli
xor
aaa
stos
mov
and
je
retfw
mov
xor
pop
mov
mov
ss
ins
mov
dec
adc
push
daa
xchg
push
add
adc
sub
push
cmp
adc
sbb
pop
xchg
cs
inc
fst
popf
pushf
cld
xchg
mov
outs
out
stos
enter
outs
xchg
retf
shr
add
jae
iret
mov
mov
(bad)
je
jb
adc
lds
imul
mov
outs
aam
sub
push
pop
xchg
std
addr16
movs
gs
outs
adc
jnp
repz
xchg
inc
pop
xor
adc
adc
shl
jl
xchg
jbe
pop
pusha
icebp
add
stos
mov
cmps
add
dec
dec
jns
push
jae
popa
mov
jnp
sti
sub
add
mov
pop
jecxz
xlat
adc
lods
jne
jnp
jg
rol
jp
pop
jae
lods
jge
js
xor
mul
sub
js
mov
jne
sub
pop
cmc
dec
xchg
cwde
pop
outs
sub
jp
iret
jae
mov
mov
(bad)
dec
loope
mov
lods
push
mov
pop
mov
push
pop
(bad)
hlt
mov
mov
adc
mov
shr
ja
nop
addr16
dec
movzx
sub
stos
pop
push
mov
cli
mov
inc
(bad)
aam
outs
and
pusha
imul
jae
cmps
dec
test
adc
adc
shr
dec
push
jae
dec
js
pop
jecxz
cmp
push
sbb
sub
jo
mov
and
inc
pop
sbb
jae
push
sub
mov
arpl
clc
cmp
popa
aam
mov
dec
xor
mov
loope
cmp
sub
pop
push
push
pusha
lods
sbb
mov
sbb
jb
sar
sbb
sbb
int
dec
out
adc
ficomp
inc
jp
sbb
add
or
jno
aaa
dec
mov
ror
mov
and
mov
jl
push
and
or
movs
dec
cmp
pop
inc
test
dec
inc
inc
mov
cdq
outs
fidiv
or
mov
test
pop
bound
mov
cmps
pop
inc
cld
mov
adc
ret
jg
cmp
jbe
arpl
hlt
nop
adc
in
popf
fdiv
sub
(bad)
adc
fwait
adc
(bad)
gs
push
adc
imul
jns
xchg
adc
cmp
add
mov
pop
cmps
in
call
push
in
mov
jae
frstor
pop
adc
std
sbb
les
ret
inc
jge
push
inc
xchg
pop
xchg
cmps
pop
ror
and
xchg
test
repz
mov
cmp
iret
out
cli
add
push
mov
fidivr
sub
jl
xor
sub
retf
push
push
xchg
call
or
les
pop
mov
mov
or
into
sbb
jbe
push
lock
push
je
ror
xor
cmps
scas
ud2
js
movs
mov
dec
pop
or
mov
dec
push
xchg
and
out
adc
out
push
fucomp
cmp
mov
mov
stos
and
and
adc
cmp
mov
shr
and
pop
mov
cld
pop
and
dec
and
fdivr
repnz
lods
sub
mov
scas
and
and
je
stos
not
or
xchg
mov
pop
mov
jae
fldcw
test
sahf
mov
mov
mov
add
repz
mov
ret
jae
jmp
sbb
aaa
nop
js
push
mov
xor
xchg
in
push
and
cmp
cmp
push
and
call
iret
push
retf
adc
jg
xchg
push
adc
mov
jle
jae
scas
nop
xchg
xor
dec
cmp
push
adc
sub
jno
aad
(bad)
cmp
push
pusha
jns
jge
rcl
pop
xor
or
(bad)
imul
inc
push
xor
xchg
sbb
fmul
push
daa
pusha
push
dec
aas
arpl
mov
push
adc
out
cli
xor
and
les
movs
(bad)
and
mov
xor
sub
xchg
in
daa
(bad)
enter
xor
mov
js
stos
movs
pop
push
rcr
xchg
mov
in
jl
sbb
xor
dec
add
outs
test
icebp
jo
mov
dec
movs
out
xor
ins
inc
into
push
int3
add
cmp
ret
sti
pop
pop
inc
and
cmps
movs
stc
sbb
cli
lods
cmp
pop
pushf
dec
lahf
cwde
loope
leave
pop
adc
dec
add
(bad)
mov
xchg
retf
pop
pop
scas
scas
neg
inc
test
jle
mov
lods
cmp
inc
jae
pusha
lahf
repz
retf
push
adc
cwde
and
int3
pushf
jo
rcl
push
sub
lock
shl
mov
inc
mov
shl
add
imul
mov
xchg
loope
xchg
push
mov
(bad)
xchg
sbb
push
out
cs
pop
stos
test
shl
loop
xor
lods
xchg
mov
lock
test
adc
cmp
dec
imul
inc
outs
push
inc
jb
cmc
scas
aam
out
mov
test
call
lahf
sbb
stos
into
jmp
push
lock
mov
mov
nop
mov
mov
fdiv
retf
aas
mov
out
jmp
ja
(bad)
mov
dec
mov
jne
push
cmp
or
jecxz
int
(bad)
pop
or
push
jg
mov
sbb
mov
hlt
pop
daa
ds
icebp
stos
inc
push
dec
dec
mov
cli
mov
sahf
fwait
mov
ja
pushf
sub
xor
push
mov
jb
push
aaa
scas
mov
int
push
lds
add
jo
and
and
out
pop
xor
sar
ss
test
(bad)
and
push
dec
xor
inc
pusha
outs
pushf
mov
xchg
cwde
push
out
mov
ss
retf
not
std
repnz
out
xor
or
jae
test
imul
aas
sbb
xor
cmps
cld
clc
inc
jb
call
jae
dec
pop
adc
mov
dec
push
or
cwde
or
out
mov
retf
call
loope
and
adc
mov
mov
imul
xchg
je
daa
push
jge
push
scas
adc
and
imul
or
mov
(bad)
loope
mov
test
call
mov
ror
xor
pop
push
xchg
xor
bound
push
inc
xor
xor
out
shr
mov
dec
out
popf
int
call
dec
or
sbb
call
mov
inc
xor
in
push
jae
sub
mov
out
adc
dec
mov
dec
pop
and
test
div
add
test
shl
cmc
jmp
dec
scas
mov
inc
sub
rep
fwait
jmp
dec
popf
cdq
cmc
int3
pop
sbb
rcl
jnp
out
sbb
in
scas
cli
or
adc
sub
pop
aaa
push
mov
push
(bad)
mov
xor
je
das
jp
mov
loopne
mov
outs
and
lock
mov
lods
mov
lock
mov
adc
out
cdq
mov
or
(bad)
xchg
jmp
dec
(bad)
mov
sahf
push
(bad)
pushf
mov
cmps
dec
xchg
or
add
call
xchg
ja
pop
add
daa
or
cmp
jl
mov
or
mov
mov
clc
xlat
add
or
adc
shr
sub
enter
jb
sbb
sbb
adc
into
popa
sbb
inc
inc
sub
fcomp
mul
pop
and
mov
push
add
int
jp
pop
ret
call
xchg
gs
add
ret
xor
gs
jmp
push
mov
or
ss
sbb
in
call
xchg
jp
mov
nop
je
pop
or
fsubr
aas
loop
into
pop
cwde
mov
jae
inc
int3
xchg
jp
repz
das
sti
rol
xchg
std
in
adc
pop
daa
arpl
test
jno
in
enter
jp
cmps
add
rcl
mov
adc
popf
mov
jp
mov
xchg
jge
cwde
inc
mov
(bad)
cmp
push
movs
inc
loope
mov
ds
xor
push
test
sbb
(bad)
shl
pop
jg
scas
or
adc
ret
mov
pop
jns
jns
mov
push
mov
scas
dec
jbe
aam
je
iret
jae
(bad)
push
adc
mov
mov
hlt
ins
call
push
call
mov
sbb
push
pop
pop
and
dec
(bad)
(bad)
repz
push
jbe
sbb
add
jne
xchg
hlt
dec
loope
aam
mov
push
adc
iret
adc
leave
call
jmp
jae
mov
mov
xchg
call
in
inc
mov
ss
cmps
adc
loopne
mov
push
dec
lock
xor
xor
ins
js
imul
jecxz
mov
push
pop
dec
int
jb
adc
sbb
cmps
mov
xor
jg
(bad)
retf
pop
mov
fdiv
pop
sbb
jae
push
adc
xchg
idiv
cwde
adc
jecxz
mov
retf
scas
sbb
mov
arpl
out
fcom
jb
mov
jmp
mov
sbb
push
dec
lahf
cs
ret
adc
or
jae
gs
call
xor
cdq
adc
mov
stos
stc
dec
lock
and
xor
pop
stos
popa
jp
push
xchg
mov
jmp
inc
mov
pushf
sbb
leave
mov
dec
out
xor
repnz
or
xchg
or
adc
jae
enter
sbb
in
mov
in
lock
dec
shl
xchg
pop
pop
gs
lods
ret
cmp
pop
mov
repz
mov
and
inc
push
leave
cmps
jne
inc
mov
mov
rol
dec
test
push
aad
sub
jae
mov
fs
bound
pop
jae
out
pop
mov
jns
add
sub
push
push
xor
pusha
xor
mov
scas
fucomi
cmp
aaa
add
les
clc
cwde
jae
cwde
les
mov
call
push
aaa
xchg
adc
les
hlt
arpl
(bad)
mov
add
cmp
xor
pop
sbb
div
sbb
test
cs
jecxz
sahf
shl
(bad)
push
cld
pop
mov
mov
mov
and
aam
mov
shl
ja
std
xor
xchg
popa
les
mov
and
mov
jno
adc
cmp
call
jmp
(bad)
clc
mov
mov
jl
fcmove
or
mov
xchg
data16
or
rcr
addr16
lock
sbb
shl
dec
dec
mov
pop
xor
and
cmp
pushf
sbb
outs
inc
(bad)
clc
call
fcomp
and
lea
shl
or
sbb
int3
mov
add
leave
retf
mov
sbb
dec
mov
adc
ss
push
cmps
push
jae
add
jnp
in
daa
sbb
jo
jle
xor
inc
mov
ss
ins
dec
inc
push
xor
fild
aas
ror
aam
push
mov
mov
adc
or
xchg
aaa
dec
cmc
add
mov
jnp
add
push
popf
mov
add
sbb
and
and
or
out
ret
movs
test
dec
movs
movs
aaa
xor
push
sbb
int
ja
inc
repz
adc
repz
xor
loopne
mov
jae
add
cmp
bound
and
jl
js
stos
pop
mul
sub
cmp
push
jmp
ja
neg
stos
push
xchg
hlt
ja
jns
enter
in
inc
add
test
dec
into
test
mov
test
or
add
sbb
fstp
mov
fild
xlat
jns
cmp
inc
inc
mov
xchg
test
movs
cmp
mov
dec
sbb
retf
fistp
div
jmp
xor
mov
and
ficomp
xchg
jb
iret
and
popa
sub
(bad)
mov
or
and
jae
dec
or
(bad)
hlt
nop
sar
dec
xor
pop
sbb
push
or
aaa
inc
cmps
int
jge
int
js
cmps
movs
test
int
or
stos
or
fisttp
int3
push
clc
mov
xor
mov
cmp
jae
pop
repz
stc
leave
ret
jae
push
sti
js
hlt
xor
cmp
pop
imul
imul
xor
pop
jns
mov
retf
test
jb
pop
mov
push
aaa
pop
xchg
inc
scas
cmps
fstp
jl
ss
sbb
sbb
cli
cmc
add
push
sbb
add
stos
pop
js
div
push
pop
sti
lods
inc
xchg
adc
in
hlt
retf
clc
daa
or
icebp
mov
jecxz
int3
sub
retf
xor
inc
jmp
les
jae
jl
in
clts
sub
push
jae
and
adc
aad
addr16
sub
iret
mov
jns
mov
push
push
or
lods
enter
repz
cmps
data16
jle
push
add
adc
ja
sbb
fbld
pop
not
mov
retf
jb
xchg
loope
daa
mov
call
jmp
add
mov
mov
in
jb
xor
imul
call
cdq
ja
dec
jmp
lods
in
inc
mov
aaa
mov
das
repnz
mov
mov
fsub
mov
mov
test
mov
add
mov
popf
scas
or
xchg
inc
mov
push
fwait
jae
in
sub
int
mov
scas
add
mov
and
jae
and
ffreep
sbb
and
(bad)
jge
mov
mov
pop
xchg
mov
adc
and
pop
xchg
dec
or
xor
mov
mov
mov
mov
jae
adc
or
sbb
mov
repz
idiv
popf
jns
cs
inc
mov
adc
push
jae
js
inc
sub
jge
push
xchg
push
jmp
add
int
cli
jecxz
adc
push
jle
sbb
adc
jmp
mov
inc
pop
push
mov
jb
jmp
xchg
add
xor
mov
outs
dec
mov
push
movs
xchg
xor
or
fadd
loope
outs
(bad)
addr16
adc
ins
push
test
cld
mov
add
inc
call
lds
pusha
mov
or
popa
mov
fcom
std
call
fsub
js
fs
sbb
dec
test
nop
mov
adc
iret
iret
jbe
add
div
loope
adc
jp
xchg
xor
push
push
sub
out
jne
adc
and
je
sti
int3
jb
fwait
out
and
xchg
lds
movs
clc
call
pop
stc
test
in
call
mov
ins
add
fnstenv
sub
jbe
mov
(bad)
push
das
inc
stos
ret
das
jb
imul
in
cmp
and
mov
mov
not
gs
int
ss
arpl
ret
lods
rcr
jecxz
or
rcl
sub
into
je
(bad)
adc
mov
pop
or
sbb
retf
jae
dec
aaa
test
pop
mov
mov
xor
fldcw
dec
xchg
adc
mov
mov
jno
mov
scas
xor
or
push
inc
mov
ja
lods
fsub
bound
cmp
shr
sbb
pop
movs
outs
push
sbb
ins
fmul
scas
out
pop
clc
mov
fldcw
mov
push
inc
addr16
je
cdq
scas
outs
inc
test
push
rcl
into
cmp
repz
inc
(bad)
mov
pop
loope
push
test
ficomp
shl
xchg
mov
aas
push
(bad)
cmc
add
push
mov
in
jae
imul
gs
adc
scas
aaa
fidiv
jmp
push
adc
iret
fsubr
add
arpl
jnp
ds
jmp
cld
adc
inc
xchg
xor
int
push
push
mov
imul
cmp
xor
sbb
mov
sub
fst
mov
in
dec
dec
sbb
xor
je
mov
push
int3
adc
xchg
gs
cwde
cli
stos
jp
jb
sub
fnstenv
pop
jae
lods
fninit
in
js
add
movs
(bad)
xchg
mov
je
ror
ja
shl
mov
cmps
xchg
sub
fild
mov
test
cmp
xor
out
jmp
jnp
push
jb
test
mov
mov
pop
sbb
dec
js
xchg
je
mov
xor
out
repz
dec
inc
adc
ins
pop
sbb
and
sbb
xor
cwde
bnd
mov
xor
jle
ins
xor
pop
(bad)
dec
cli
push
(bad)
and
pop
mov
push
mov
add
sub
idiv
mov
popf
xor
(bad)
rcl
jl
fidivr
pop
or
fscale
mov
dec
shl
mov
lea
packsswb
mov
xchg
(bad)
ficomp
sbb
cmps
cmp
push
mov
jmp
dec
leave
(bad)
mov
jg
psraw
xor
mov
jnp
mov
cli
fidiv
push
sbb
les
(bad)
and
jle
push
cld
lods
sbb
adc
fst
pop
mov
adc
addr16
hlt
push
(bad)
movs
mov
pop
int3
mov
ins
and
mov
pop
add
dec
dec
lods
push
push
xor
fild
and
punpckhwd
sub
das
push
retf
mov
cmp
pusha
dec
(bad)
sbb
mov
repz
jnp
cmc
outs
jge
sbb
push
mov
ja
xchg
pusha
in
cmp
mov
ja
jno
(bad)
and
out
mov
cmp
jmp
int
jl
sub
add
and
fwait
jg
bswap
jecxz
jp
daa
dec
outs
push
jns
(bad)
or
sbb
repz
mov
pop
movs
inc
push
arpl
sti
jnp
sub
dec
inc
pop
sbb
(bad)
retf
repnz
ror
sbb
cmp
push
pop
sbb
dec
mov
outs
cmc
mov
push
cdq
mov
mov
add
push
(bad)
mov
imul
xchg
aaa
mov
or
jb
push
out
pop
fldenv
push
lock
adc
dec
mov
jne
push
test
xchg
adc
pusha
addr16
cmps
or
jne
aam
shl
add
rcr
jbe
je
dec
mov
xor
sub
repz
add
or
(bad)
cmps
inc
(bad)
test
cmps
sub
ret
shl
xlat
stc
fiadd
in
ret
ins
dec
jne
aaa
push
or
push
jecxz
and
inc
jmp
pop
popf
pop
cmp
dec
xchg
stos
rcl
mov
fidivr
sbb
in
jecxz
data16
sbb
mov
pop
mov
fistp
jns
push
sbb
sbb
mov
sti
dec
(bad)
lods
mov
mov
inc
call
fs
inc
adc
or
js
mov
inc
jnp
inc
js
cmp
pop
mov
push
jae
popf
dec
idiv
aam
rcl
push
cwde
rcl
rol
aad
test
xchg
jne
mov
cli
mov
outs
out
or
ins
push
push
and
sar
mov
push
lods
jb
jl
jb
or
aas
push
add
xchg
xor
and
jp
mov
or
hlt
pusha
xchg
sub
jbe
dec
call
fst
in
test
imul
jne
(bad)
mov
mov
retf
mov
dec
mov
dec
mov
jo
hlt
es
mov
cmp
sbb
iret
sub
ret
cmps
arpl
jno
std
popf
or
dec
ja
push
sub
movs
push
lods
cmps
mov
lds
mov
dec
shl
xchg
cwde
jle
and
js
mov
mov
gs
mov
in
fbstp
data16
jmp
int3
jge
inc
(bad)
daa
cmp
xchg
inc
mov
mov
cmp
mov
dec
sbb
cwde
shl
repz
add
in
xor
jg
aaa
cld
pop
jne
lods
adc
neg
sbb
adc
jge
mov
inc
fmul
jne
mov
adc
sbb
aaa
mov
rol
push
adc
xchg
cmp
int
mov
jae
outs
in
in
mov
add
test
jge
adc
je
inc
add
and
sbb
xor
(bad)
iret
aad
sbb
sbb
scas
jns
jb
xchg
jg
mov
sbb
inc
add
mov
add
xchg
jae
cli
mov
push
nop
popa
lock
add
rol
ins
jg
cmp
pushf
daa
cdq
int3
fchs
pop
add
inc
stos
popf
sbb
(bad)
xchg
cmps
jae
dec
sbb
je
jb
sbb
inc
adc
gs
xchg
push
add
sbb
or
adc
cmp
in
fidiv
imul
push
sbb
sbb
cmp
dec
mov
and
fistp
sub
jmp
push
jae
mov
jg
sbb
bound
(bad)
pop
ds
scas
dec
pop
leave
test
adc
jb
outs
and
sbb
sub
scas
sahf
sbb
mov
push
in
inc
cmp
inc
mov
mov
int
add
jae
into
outs
jbe
sar
sbb
inc
pop
call
imul
arpl
jmp
fld1
push
mov
push
scas
inc
dec
and
movs
movs
inc
sbb
mov
jl
dec
lea
sti
sub
fsubr
cmp
adc
xchg
pop
pop
retf
mov
inc
js
sti
dec
push
adc
mov
test
jns
test
sbb
mov
js
(bad)
xchg
sub
sbb
fistp
repz
mov
sbb
cmps
test
outs
leave
mov
jae
enter
daa
scas
jns
leave
cmps
inc
push
mov
fld
fnsave
pop
mov
inc
dec
adc
pop
jle
push
inc
data16
jp
outs
imul
movs
dec
gs
cmps
dec
inc
clc
(bad)
dec
add
mov
je
cld
cmps
inc
push
rcr
jp
aam
and
cli
mov
rcl
out
mov
and
jmp
cld
jo
xchg
jae
test
adc
leave
inc
sbb
sbb
lods
add
mov
jae
adc
mov
sbb
add
jae
adc
popa
dec
sbb
mov
push
fidiv
inc
sbb
stos
ds
mov
loopne
rol
out
arpl
mov
dec
pop
mov
pop
inc
out
sahf
nop
mov
cdq
pop
arpl
ins
pop
xchg
jae
in
in
pusha
mov
mov
mov
push
xchg
imul
sub
mov
out
mov
mov
push
adc
inc
fs
scas
pop
push
mov
and
xor
xor
ins
in
sar
es
jae
shl
addr16
sub
aad
mov
dec
sbb
lods
in
push
sbb
xchg
dec
push
dec
mov
adc
dec
inc
push
loopne
inc
sbb
mov
outs
sahf
out
jae
stos
hlt
repz
fild
sbb
mov
mov
int
pop
sbb
loopne
sbb
mov
jmp
addr16
inc
xor
push
inc
sbb
cmp
jle
push
add
push
jae
xlat
push
dec
inc
cmps
jae
lds
in
ins
xchg
push
movs
mov
leave
or
inc
dec
mov
mov
mov
inc
aas
fldcw
pop
ins
addr16
add
jle
js
and
pop
fstp
sub
fsub
mov
repz
sbb
outs
(bad)
mov
inc
sub
xchg
xor
jbe
call
cmp
dec
je
jne
mov
push
pop
in
dec
adc
pop
jae
ficomp
push
sbb
pop
adc
mov
jb
scas
mov
outs
jmp
xchg
sub
retf
(bad)
fdiv
jnp
cmps
and
push
aam
or
enter
js
ja
mov
sbb
mov
ret
scas
je
add
js
cld
test
pop
movs
mov
popf
imul
inc
add
or
adc
or
dec
jb
mov
scas
or
xchg
hlt
sbb
mov
ins
push
shr
mov
cmp
outs
or
dec
jnp
clc
jae
or
imul
sbb
fsubr
lahf
add
xchg
cdq
push
scas
jmp
xor
sbb
test
inc
cmp
fidiv
(bad)
jge
cmp
xor
push
mov
fldenv
and
shl
mov
push
mov
mov
mov
or
out
xchg
lods
arpl
push
lahf
stos
fdivr
ds
xor
mov
pop
(bad)
mul
jae
iret
inc
add
or
sub
and
or
fcom
fidiv
in
sub
outs
in
data16
mov
mov
loop
inc
inc
or
out
mov
xor
adc
addr16
mov
je
int
fnstsw
ja
push
outs
int
dec
ja
cld
jno
xor
add
fdivr
adc
sbb
adc
mov
sub
xchg
mov
pop
jmp
push
mov
fldenv
adc
push
xlat
cmps
js
enter
dec
movs
jecxz
fcos
jo
and
daa
idiv
jle
cmps
mov
adc
jg
sub
or
(bad)
pop
in
aad
sti
je
jle
dec
test
mov
mov
push
push
cmp
mov
lock
icebp
scas
(bad)
sbb
jg
retf
sbb
or
xchg
or
(bad)
xchg
pusha
pop
add
pop
jmp
push
pusha
stos
pop
pop
add
sbb
rcl
adc
adc
dec
fisub
test
sbb
sbb
sub
imul
push
fist
xor
imul
xchg
scas
imul
imul
xor
adc
push
jo
jle
ins
mov
push
inc
inc
ret
xchg
push
jno
inc
stos
dec
add
test
mov
and
(bad)
mov
xor
fst
mov
inc
addr16
lea
imul
push
lods
push
mov
repz
jb
stos
inc
sub
ins
adc
and
bound
pop
call
mov
outs
push
and
ficom
mov
cmps
and
inc
sbb
add
pop
stc
push
inc
scas
test
dec
jbe
pop
pop
addr16
mov
mov
and
loop
pop
cmp
dec
jae
dec
mov
ins
push
xchg
pop
jle
mov
jae
jnp
bound
sbb
das
push
out
test
dec
int3
xor
push
pop
mov
sbb
into
push
inc
mov
mov
outs
sub
test
ja
int3
push
test
stos
cli
adc
ret
and
inc
add
mov
jmp
adc
bnd
push
or
pusha
in
mov
and
call
pushf
je
in
mov
sbb
cmps
xchg
inc
sub
mov
adc
mov
sbb
enter
fstp
pop
jne
pop
outs
xchg
push
jae
pop
cmp
dec
fdiv
adc
xchg
js
and
fs
fcom
rol
cmp
push
and
rcl
icebp
imul
scas
pop
outs
aaa
mov
outs
scas
xchg
dec
mov
in
out
arpl
inc
push
jae
mov
mov
sbb
push
(bad)
pop
pop
(bad)
fmul
enter
je
arpl
fstp
aas
and
jbe
jge
icebp
pop
jb
popf
jnp
pop
xchg
pop
arpl
adc
inc
leavew
call
hlt
pusha
mov
sbb
fnsave
outs
(bad)
mov
mov
sub
xchg
push
pop
mov
jb
mov
cmp
cdq
call
test
and
xchg
mov
dec
aas
sub
jge
jecxz
js
cmc
xchg
pop
sbb
sar
in
jne
and
outs
xchg
movs
popa
pushf
mov
je
in
jb
sbb
imul
mov
jge
cmps
jns
ret
lds
jnp
in
mov
sbb
jo
mov
mov
in
movs
push
xlat
outs
sbb
dec
and
mov
bnd
data16
dec
jae
dec
inc
xchg
mov
push
dec
mov
lods
xor
cmps
retf
test
sbb
stos
jl
cmc
stos
inc
cmp
stos
sub
xor
jb
or
in
jmp
daa
sbb
inc
stc
movs
sbb
push
je
xor
std
(bad)
cdq
fisttp
dec
mov
push
dec
adc
(bad)
pusha
fwait
imul
retf
inc
mov
fs
dec
cmps
mov
jmp
mov
dec
xlat
push
add
dec
ss
jbe
and
imul
into
mov
jp
xchg
jb
out
mov
jb
jmp
jmp
push
push
dec
mov
lods
mov
adc
sbb
xchg
and
dec
jle
test
mov
mov
movsx
xchg
adc
sub
xchg
jmp
cwde
jae
fisub
outs
iret
stos
outs
js
hlt
pop
sbb
imul
leave
xchg
xor
fild
lahf
pushf
sar
mov
xchg
(bad)
xchg
jl
xor
dec
sbb
test
jne
cmc
xchg
sar
mov
rol
push
adc
mov
push
sub
and
out
sbb
mov
dec
pop
dec
inc
jne
lds
(bad)
call
dec
(bad)
cli
call
sar
sub
cmps
daa
aad
fnstcw
mov
cmp
stos
push
dec
lds
mov
into
jo
shl
inc
iret
sahf
div
inc
cmps
mov
repz
movs
and
test
lock
push
ret
and
je
pop
sbb
add
mov
pop
jbe
nop
mov
jp
xchg
push
dec
mov
dec
cmp
add
imul
sbb
rcl
(bad)
add
test
sbb
movs
jnp
nop
lahf
sub
into
shr
inc
lds
or
dec
sub
lock
inc
lods
xchg
fsubr
js
xor
xor
dec
(bad)
fld
out
mov
push
in
pop
mov
fstp
test
sbb
jns
xchg
sbb
fbstp
sub
adc
jae
movs
fs
shl
pop
jo
pop
mov
mov
aas
shl
ja
movs
int3
jns
jo
sbb
pushf
sub
push
inc
in
sub
sbb
std
sbb
mov
ins
pushf
cmp
fst
push
cwde
push
xor
inc
stos
jb
loopne
sbb
shl
data16
inc
int
and
push
mov
adc
push
push
inc
mov
adc
inc
sbb
jg
xchg
mov
ss
leave
nop
lock
ja
(bad)
mov
cmp
mov
test
inc
xchg
imul
(bad)
pop
aad
sub
and
jo
lea
jae
dec
inc
xor
cmp
rcr
jnp
sar
shr
xchg
pop
inc
js
jne
add
mov
dec
add
adc
std
mov
add
cli
movs
jbe
repnz
xchg
fnstcw
aad
aaa
aad
jecxz
mov
fsubr
xchg
push
ins
mov
jmp
js
js
shl
dec
mov
stos
or
cmp
cmp
pop
jns
sbb
sub
ds
fdiv
or
bound
cmp
dec
(bad)
rcl
sbb
mov
jae
xor
inc
push
push
xchg
adc
lods
mov
sahf
pop
push
push
dec
ret
sbb
inc
rcl
xlat
mov
dec
or
outs
fnsave
jne
enter
test
in
outs
sbb
jo
stos
cld
jae
fimul
in
je
mov
jne
je
add
jae
dec
dec
mov
mov
jmp
or
in
jg
pop
loopne
(bad)
ficomp
fisubr
xchg
dec
jp
pop
aad
mov
imul
xchg
inc
mov
imul
mov
clc
mov
xchg
sbb
outs
mov
mov
pop
adc
in
es
js
fcomp
scas
out
scas
cs
xchg
imul
push
push
jae
inc
inc
dec
sti
sub
xchg
dec
mov
pop
out
addr16
icebp
or
test
mov
and
in
dec
mov
fstp
xor
xor
lds
ja
jo
fs
cmps
lods
in
pop
repz
jg
inc
xor
dec
ins
and
xchg
jge
(bad)
mov
push
push
mov
push
pop
fdiv
or
cli
popa
cwde
movs
arpl
jno
clc
push
push
out
cmp
adc
loope
ja
movzx
sbb
mov
and
inc
ret
xor
jge
mov
div
inc
xor
mov
mov
fsub
jge
pop
pop
pop
shl
inc
pop
push
rol
inc
aam
scas
test
pop
imul
jno
dec
mov
pop
push
movs
pop
dec
jmp
cmp
sub
sti
jae
imul
and
test
stos
repz
pop
sar
test
lock
mov
pusha
cmp
mov
pop
movs
nop
xchg
ins
mov
and
jmp
aad
stos
sub
icebp
and
sahf
push
lock
arpl
sbb
xchg
test
sbb
jo
pop
xchg
loopne
mov
arpl
rcl
loopne
jbe
or
mov
fnstsw
stos
ret
movs
jb
int3
dec
xchg
jecxz
mov
xchg
push
cdq
test
mov
idiv
out
cmps
xchg
shl
dec
jns
rol
nop
fadd
js
shl
adc
jns
imul
jns
pop
jp
imul
repnz
xor
cmc
movs
fiadd
inc
int
dec
dec
pop
movs
adc
pop
jno
jne
cdq
imul
ret
jae
sbb
dec
push
sbb
jno
ret
mul
sbb
mov
(bad)
push
cmp
mov
das
ret
enter
pop
scas
dec
outs
lds
or
inc
adc
xchg
push
js
inc
and
loop
jg
jmp
aam
inc
in
jb
jge
mov
or
loopne
cmc
jmp
dec
or
add
mov
inc
shl
data16
fisttp
dec
hlt
jo
in
sbb
sahf
ja
jae
add
das
test
and
out
dec
out
cmp
mov
lock
mov
in
push
iret
ret
add
inc
add
push
stos
or
shr
mov
lods
jo
arpl
pop
push
call
and
mov
loop
pop
daa
cwde
sub
jb
inc
jae
add
cld
push
in
sbb
pop
or
jge
pop
fs
dec
xchg
mov
(bad)
jle
hlt
add
retf
push
ret
inc
iret
test
les
arpl
sbb
xchg
fnsave
push
inc
mov
cmp
mov
jae
dec
gs
aaa
mov
ja
retf
mov
jl
mov
dec
shr
(bad)
dec
inc
cdq
pop
xchg
fnstcw
xchg
jp
add
xor
iret
cwde
pop
stos
jl
lods
jns
frstor
cmp
and
inc
xor
dec
xchg
xor
mov
imul
jae
fild
movs
sub
dec
dec
daa
jmp
test
jae
cld
mov
mov
xor
sbb
sbb
mov
in
or
mov
dec
rol
fcom
sbb
icebp
ins
sbb
xchg
in
out
push
repz
xlat
pop
call
daa
push
mov
push
fidiv
repz
push
mov
stc
xchg
ret
xchg
repnz
fwait
pop
push
push
push
add
arpl
pop
ins
xor
xchg
mov
clc
cmp
ins
in
dec
pusha
add
jnp
mov
je
sbb
fwait
shl
xchg
cmp
lods
jb
sub
js
ins
cmp
mov
ja
jo
jmp
jle
xchg
jle
loope
push
adc
cwde
or
dec
in
(bad)
adc
stos
xchg
push
shl
or
mov
jnp
sbb
push
sahf
les
js
jg
pop
fcom
add
mov
xor
icebp
sub
add
ja
or
cli
imul
ret
pop
mov
(bad)
sti
jae
movs
xor
fnstenv
jecxz
and
sub
adc
imul
adc
xchg
xor
stos
and
loopne
rcl
cmp
les
mov
ret
sbb
test
(bad)
push
ins
adc
je
stos
out
and
cmp
ret
mov
pop
add
xor
mov
pop
out
cmp
jns
jmp
or
sbb
dec
adc
sti
pop
xchg
dec
mov
lods
cmp
test
ficom
inc
mov
pushf
sbb
mov
inc
adc
cld
mov
pop
les
mov
mov
dec
mov
iret
mov
and
mov
mov
data16
in
sbb
in
xchg
ins
dec
xchg
sbb
push
mov
gs
dec
adc
mov
out
aas
loop
push
fstp
dec
retf
add
adc
enter
scas
sbb
mov
xchg
fucom
adc
mov
jle
add
dec
shl
push
dec
xchg
les
int
es
add
sbb
lods
pop
outs
es
dec
and
arpl
xchg
jne
ds
cmps
push
pop
and
jae
cwde
dec
fild
test
xor
ins
jae
push
sub
cmp
lods
movs
and
mov
rcr
pop
inc
arpl
mov
mov
pop
fwait
adc
std
call
retf
cld
iret
loope
xchg
mov
stos
shl
(bad)
add
lahf
(bad)
cld
stos
es
xchg
xchg
data16
mov
pop
dec
push
sub
icebp
jmp
pop
pop
jmp
jmp
jb
xlat
fdivr
fadd
push
jnp
jl
pop
cmp
mov
inc
sbb
dec
adc
div
pop
shl
push
dec
dec
ins
jmp
cmp
(bad)
addr16
jl
mov
dec
push
lea
jns
push
inc
dec
push
mov
stc
dec
dec
inc
sbb
or
or
mov
dec
icebp
leave
sub
inc
je
int
call
mov
adc
jbe
push
add
xchg
js
sbb
mov
in
call
ficomp
and
mov
rcl
pop
mov
xor
icebp
mov
mov
mov
xor
inc
fld
adc
test
cmp
pusha
jb
mov
cs
jl
scas
mov
jl
xchg
rcl
fnstsw
popa
mov
pop
pop
int
mov
sbb
jg
clc
nop
(bad)
stc
pop
pop
cdq
pop
out
jl
popa
icebp
adc
xchg
je
test
cdq
jae
xchg
push
mov
adc
arpl
pop
jp
pop
int
outs
cli
and
sbb
dec
jl
fadd
push
sbb
in
lahf
fidivr
inc
mov
(bad)
pop
or
cmp
jno
outs
and
jnp
pop
and
xlat
or
scas
scas
jne
sub
outs
outs
push
test
lods
xor
repz
adc
aad
adc
mov
nop
sbb
repz
xchg
inc
mov
inc
inc
dec
(bad)
in
sub
arpl
ss
xlat
repnz
xchg
test
add
es
xlat
mov
shl
retf
mov
(bad)
add
mov
shl
inc
test
xchg
int
push
jno
dec
in
aaa
xor
sbb
xchg
inc
mov
mov
or
nop
dec
dec
cld
les
sub
fucomi
les
add
xchg
lock
dec
loope
repz
dec
pop
pushf
iret
sbb
stos
rol
nop
push
aam
sub
test
and
mov
inc
dec
mov
and
adc
mov
xchg
dec
jmp
int3
xchg
xchg
repnz
mov
jg
sub
(bad)
stos
ins
jno
add
neg
xchg
push
enter
aad
inc
jae
dec
push
cs
adc
aad
push
sbb
mov
xor
push
push
ja
repnz
scas
data16
add
push
xor
movs
hlt
adc
mov
jmp
mov
xchg
arpl
mov
packssdw
outs
js
in
in
fadd
xchg
jbe
mov
inc
cmp
cmc
ss
mov
cs
mov
ins
inc
inc
iret
imul
ins
imul
sub
adc
call
outs
and
fprem1
mov
jmp
mov
call
mov
pushf
push
mov
aad
wrmsr
(bad)
imul
stos
shl
dec
jg
lds
inc
xchg
loope
adc
call
push
mov
ja
test
int3
adc
push
les
mov
ficomp
pop
loopne
loopne
pop
inc
test
mov
xchg
ds
push
js
jno
movs
jae
mov
aaa
and
push
adc
arpl
push
jecxz
adc
repnz
clc
int
movs
mov
fimul
or
inc
jne
sqrtps
hlt
retf
in
jne
push
sub
pop
jecxz
inc
sbb
cmps
js
cmovne
add
jb
in
cmp
test
mov
loope
mov
mov
arpl
std
sbb
adc
fstp
les
pop
dec
cmp
sbb
fwait
nop
call
nop
inc
fldenv
push
inc
dec
push
shl
xchg
in
cmp
mov
jmp
dec
dec
push
into
loopne
sbb
mov
imul
jae
sbb
inc
jp
mov
lods
sbb
repz
(bad)
and
adc
push
inc
mov
xchg
aam
push
sub
and
jns
adc
cmp
les
or
imul
inc
or
imul
dec
dec
adc
retf
mov
cmps
stc
cli
leave
or
imul
sbb
pop
xchg
mov
mov
adc
pop
in
(bad)
or
sub
and
int3
cmp
or
sar
mov
clc
push
xor
dec
ds
xchg
adc
into
add
sbb
jae
out
cs
ss
movs
sbb
jae
int3
(bad)
arpl
mov
cmp
mov
fwait
or
cmp
repz
inc
mov
enter
mov
cmp
movs
dec
addr16
push
fild
mov
ret
pop
ds
xchg
mov
xchg
cmc
cmp
mov
cs
adc
push
sbb
cld
inc
sbb
es
fs
jo
enter
cmp
arpl
loopne
push
add
mov
jno
shr
jae
sbb
mov
mov
int3
lods
retf
dec
lahf
std
cmp
xchg
inc
and
jns
ficom
mov
addr16
mov
fs
xchg
jb
sahf
or
sti
in
imul
aad
out
add
jmp
push
xor
shr
or
fdivr
inc
cmp
gs
(bad)
or
arpl
aad
lock
lea
in
xchg
xchg
and
mov
mov
push
and
lds
jp
int3
inc
mov
add
inc
mov
and
test
dec
ins
clc
xchg
loope
add
sbb
in
adc
cmps
cmp
imul
cdq
scas
pop
mov
and
fbstp
movs
std
call
xchg
ds
sbb
mov
pop
mov
sbb
mov
pusha
xchg
xchg
je
inc
jo
mov
mov
pop
push
adc
push
push
xchg
mov
imul
sub
mov
jns
into
js
cmp
jnp
clc
pushf
pop
sbb
mov
test
ret
mov
ror
push
mov
add
in
and
dec
out
xchg
jae
lds
outs
add
xor
fsubr
iret
retf
add
cmp
icebp
cmp
retf
dec
inc
xchg
jle
imul
(bad)
fsubrp
sub
mov
xor
jecxz
cmp
ja
mov
pop
adc
cmps
jp
js
aaa
cdq
std
sub
ret
sbb
retf
ret
in
shr
fcom
cld
scas
pop
imul
push
xchg
pop
movs
ja
inc
dec
mov
mov
sub
or
mov
jp
mov
jnp
jle
jge
push
inc
adc
inc
jne
add
ror
ss
arpl
dec
add
sbb
jb
in
dec
dec
dec
(bad)
push
mov
pop
loope
add
jmp
mov
push
cdq
mov
sbb
pop
mov
in
and
aas
dec
call
inc
jae
stos
(bad)
aas
out
les
jne
das
pop
les
inc
inc
fimul
(bad)
pop
jecxz
push
inc
into
push
jno
adc
jae
pop
mov
pop
outs
push
mov
push
or
push
jl
loopne
sbb
xchg
out
xor
pop
adc
jno
pop
aaa
das
push
aad
sbb
pusha
jmp
sbb
fistp
repnz
(bad)
hlt
push
repnz
imul
test
icebp
add
stos
lods
mul
test
sbb
pop
pop
xchg
fmul
stc
pop
cmp
jmp
xchg
xchg
sbb
enter
pop
pop
fs
rol
cmp
arpl
and
sbb
and
xchg
pop
in
cmp
call
mov
sbb
(bad)
xchg
das
retf
outs
add
jl
jae
sbb
es
add
jge
jns
mov
mov
int3
aad
jp
sbb
push
xchg
aaa
test
lods
push
mov
lods
rol
call
pop
sbb
aam
jp
add
jbe
mov
jns
and
scas
adc
jmp
inc
ins
fidivr
xlat
inc
inc
(bad)
xchg
adc
xor
jae
(bad)
mov
js
je
jnp
retf
inc
out
leave
retf
imul
leave
dec
pop
(bad)
xchg
pop
push
xor
jae
jmp
push
mov
shr
pop
imul
sub
or
arpl
pop
push
sub
stc
jno
dec
cmp
mov
and
inc
retf
fdivr
es
test
push
sbb
aam
jg
sub
mov
(bad)
mov
je
and
xchg
dec
xor
repz
xchg
shl
aad
cmc
and
aad
jae
add
repz
mov
sbb
nop
xor
in
xchg
ja
push
hlt
push
data16
inc
call
cmp
hlt
call
xchg
(bad)
cmps
pop
inc
in
lea
aad
xor
int
dec
(bad)
and
rcr
mov
or
inc
daa
ins
aam
cmp
retf
mov
mov
adc
scas
ja
pushf
jp
sbb
int3
scas
arpl
shl
jae
retf
cld
jns
bound
mov
iret
xchg
jl
or
test
cmc
xchg
dec
cdq
fsub
pop
add
enter
xchg
jno
inc
cmp
imul
push
dec
xor
mov
repnz
shl
xor
pop
in
inc
cs
and
pop
push
hlt
or
sub
retf
xchg
jbe
in
pop
push
outs
js
adc
aad
mul
(bad)
test
mov
mov
out
sbb
mov
fild
mov
add
dec
jl
inc
inc
push
mov
cmp
jnp
mov
jns
xchg
mov
sbb
pusha
jl
mov
dec
les
and
mov
jb
mov
inc
outs
mov
add
and
jg
rsqrtps
push
les
dec
mov
arpl
mov
fistp
mov
mov
sub
inc
mov
clc
cmps
dec
adc
mov
pushf
int
ret
jnp
sbb
and
mov
inc
sbb
int
inc
sub
mov
inc
mov
dec
lea
movs
dec
pop
inc
lods
jae
dec
not
sub
mov
jo
and
xor
int
push
jae
pop
and
scas
mov
arpl
inc
pop
lods
inc
mov
int3
sar
mov
and
mov
lahf
adc
cmp
daa
xchg
mov
lahf
mov
pop
fisubr
jbe
in
cmps
sbb
pop
push
lods
les
pop
sbb
out
call
mov
xchg
cmp
ficom
jle
rcr
mov
lock
(bad)
pop
iret
loop
sub
xor
scas
inc
xor
adc
scas
jbe
jae
out
ret
stos
pop
sbb
mov
cwde
dec
dec
mov
mov
jne
xor
repnz
pop
jmp
pop
les
jb
ror
cmps
aam
push
mov
ret
into
fwait
mov
mov
xchg
push
mov
push
gs
and
pop
mov
pusha
loope
jp
arpl
or
xchg
outs
inc
sbb
mov
rol
out
jmp
inc
xor
xchg
test
fcomp
fs
push
aaa
data16
push
xchg
inc
cmp
jp
jbe
scas
jae
inc
sub
retf
arpl
xor
bnd
hlt
sahf
push
pop
neg
xlat
adc
add
sub
xchg
dec
or
sahf
mov
imul
mov
stos
adc
rcl
adc
add
cmc
cmp
and
aad
cs
shl
fisttp
(bad)
jae
xchg
dec
pop
aas
es
sbb
push
cmc
mov
inc
mov
or
mov
xchg
push
aam
pop
popf
or
jmp
pop
push
mov
adc
arpl
inc
loope
out
in
leave
leave
xchg
mov
mov
push
mov
ja
inc
cli
xor
xchg
push
push
or
popa
pop
ss
or
xor
lods
push
int
sbb
ja
int3
adc
loopne
je
jb
mov
mov
ins
call
out
mov
xchg
cmp
xchg
dec
call
iret
cmps
adc
sbb
hlt
fnstcw
shl
jb
mov
mov
setbe
dec
adc
dec
sbb
xchg
jae
imul
xchg
mov
inc
jnp
adc
sbb
jae
ds
mov
shl
fcomp
pop
xor
(bad)
imul
pop
ja
(bad)
xchg
xor
cmps
loop
xchg
jl
pop
mov
jne
shr
or
inc
xor
(bad)
shr
jmp
fidiv
xor
clc
xchg
popa
pusha
xchg
jecxz
lea
retf
mov
sbb
jae
pop
sub
jnp
xchg
je
jnp
les
dec
test
dec
adc
sub
pop
stos
stc
and
and
pusha
shl
(bad)
(bad)
shl
sub
fstp
dec
cs
xchg
dec
xchg
stos
inc
and
push
mov
mov
arpl
push
cmp
mov
pop
jle
call
xor
pushf
stc
adc
in
aaa
mov
stos
les
rcl
adc
stos
pop
shl
pop
(bad)
not
dec
and
mov
movs
push
adc
fidiv
inc
ficom
dec
mov
pop
imul
addr16
adc
mov
push
sti
mov
call
pop
inc
or
into
popa
adc
sbb
adc
mov
fdiv
pop
dec
inc
mov
inc
adc
ss
mov
mov
jb
add
inc
jmp
js
cmp
mov
jbe
jae
movs
mov
jle
inc
jbe
xchg
shl
loopne
jae
mov
xor
rol
ja
add
in
jl
add
sbb
pop
jbe
push
cmp
mov
movs
cmp
imul
ds
and
mov
push
dec
je
sar
cmps
sub
retf
add
adc
pop
jl
sbb
dec
push
sub
sti
and
sbb
mov
add
mov
add
xor
sbb
push
jb
mov
jne
xchg
push
jb
test
cdq
push
shl
or
fs
daa
xchg
or
cmps
in
js
jnp
cmp
imul
push
(bad)
lock
loopne
mov
leave
push
shl
sbb
es
test
imul
aam
jle
mov
jnp
mov
ret
inc
pop
cld
dec
inc
push
or
dec
icebp
push
pop
loope
movs
div
cld
or
out
sar
rcl
jecxz
dec
xor
and
js
cmp
mov
out
stos
jnp
iret
fisub
mov
push
sbb
repz
bound
stos
sbb
or
call
push
mov
mov
add
pusha
jg
(bad)
pop
inc
outs
lock
and
(bad)
pop
and
imul
mul
inc
lds
xor
xchg
sbb
fidiv
and
dec
arpl
daa
adc
jnp
jg
cmps
jae
int3
mov
push
sub
in
push
adc
(bad)
dec
pop
les
popa
inc
xor
popa
dec
or
cmps
xor
inc
xchg
mov
nop
push
les
adc
aad
pop
rol
add
and
or
cli
je
mov
dec
adc
mov
adc
sbb
push
ja
push
ret
mov
push
push
imul
dec
inc
scas
push
popa
(bad)
js
or
sub
dec
sbb
or
ins
mov
arpl
int3
call
jle
xor
jge
retf
sar
in
inc
rcl
(bad)
fist
outs
call
stos
jg
es
inc
mov
jns
js
fst
or
ja
test
outs
mov
call
sbb
inc
push
add
xlat
test
xlat
adc
popf
fnclex
loope
and
mov
xor
test
sbb
xor
scas
ins
mov
xor
sbb
dec
mov
sub
push
jle
retf
sub
out
gs
add
mov
pop
sbb
jo
ins
mov
sar
lock
xor
lea
stos
aad
out
adc
push
jo
xor
push
or
xchg
add
inc
movs
retf
sub
aam
adc
cmp
mov
and
mov
test
mov
lods
pop
lods
dec
sti
jmp
les
mov
add
inc
adc
push
xor
xchg
ds
gs
rol
pop
or
jne
pop
cmps
adc
(bad)
dec
js
mov
loop
pop
inc
pop
xchg
pop
xchg
jb
enter
shl
retf
jno
lock
sbb
inc
lods
adc
mov
jle
retf
mov
sub
jae
cmp
adc
inc
dec
xor
xor
sbb
sbb
fmul
cdq
cwde
jno
ja
inc
inc
sbb
mov
daa
movs
mov
cmp
jl
jbe
in
stos
sbb
test
jecxz
leave
xor
sbb
inc
arpl
or
mov
mov
test
fld
xor
xor
dec
mov
jb
mov
add
mov
fcomp
xchg
dec
sub
cmp
movs
sub
mov
call
daa
xor
mov
push
fisub
push
mov
mov
shl
and
sbb
movs
inc
adc
retf
inc
int3
clc
fcomp
icebp
aaa
add
inc
stos
mov
leave
push
sti
or
les
test
pop
mov
shl
test
(bad)
push
pop
inc
pop
push
sbb
cmps
jae
in
shr
jmp
icebp
data16
loope
push
and
inc
jle
sbb
xor
push
xor
mov
or
pop
pusha
or
xlat
xchg
xchg
push
test
xor
ins
cwde
dec
cmp
cmps
xchg
adc
cmc
mul
cmp
pop
jle
ins
cdq
int
pop
inc
enter
je
pop
arpl
(bad)
into
aam
fisubr
ja
sbb
loope
cwde
scas
mov
xor
cmps
aam
xor
dec
jmp
stos
xor
inc
in
add
mov
xor
and
cmp
call
movs
mov
add
cwde
aad
and
popa
lock
ja
jmp
sbb
test
aas
mov
push
mov
mov
hlt
inc
ins
nop
lods
movs
pop
mov
push
or
test
jge
inc
inc
fnstcw
int3
and
fiadd
repz
jns
jl
mov
push
xchg
mov
jae
dec
mov
arpl
shl
pusha
cmp
dec
mov
mov
lods
pop
jo
test
fadd
push
retf
retf
adc
mov
cmp
je
pop
nop
xor
pop
jp
dec
mov
or
stos
jge
je
jnp
mov
pop
rcl
sbb
es
retf
sbb
pop
out
test
jnp
out
mov
inc
fst
mov
mov
adc
mov
inc
push
lea
call
das
inc
rcl
retf
(bad)
lds
repz
inc
push
cdq
adc
push
jle
std
mov
fs
aam
inc
movs
xchg
push
pop
push
cmps
mov
or
jb
lock
sbb
sub
cmp
es
xor
jno
ret
daa
sbb
in
inc
ja
add
call
(bad)
jne
movs
xchg
in
add
push
mov
test
outs
adc
pop
inc
addr16
repz
ins
or
mov
inc
mov
test
pusha
gs
jae
gs
mov
pop
pop
sbb
pop
dec
adc
add
inc
(bad)
mov
jmp
and
fild
imul
mov
sub
sub
xlat
jbe
pop
add
mov
jb
and
dec
into
loope
inc
aam
test
aad
pusha
pop
push
scas
jnp
leave
mov
add
push
inc
dec
adc
out
cmps
test
xlat
cmps
xor
mov
fs
cld
movs
jb
fimul
dec
shl
jo
mov
std
loope
movs
mov
pop
push
mov
pop
push
call
test
je
and
adc
(bad)
inc
ins
iret
dec
dec
mov
jge
or
lods
enter
cmp
add
xchg
pop
pop
movs
mov
inc
popa
leave
lods
pop
fincstp
sbb
sbb
test
lock
lds
dec
or
add
inc
xchg
mov
xchg
xchg
mov
sbb
das
pop
push
ja
inc
sub
scas
or
mov
adc
pop
enter
cmp
mov
xor
xchg
push
cld
adc
xchg
popa
ins
loopne
pop
push
test
push
and
push
adc
sub
ficomp
das
adc
push
push
in
lods
pop
cmp
jg
and
(bad)
dec
aam
lods
adc
cdq
sbb
and
or
mov
mov
push
mov
pop
dec
pop
cmps
in
(bad)
xchg
retf
or
sbb
pop
es
pop
dec
dec
xor
adc
adc
mov
push
inc
xor
lock
add
mov
ror
mov
xchg
shl
jne
popa
retf
mov
jno
mov
inc
scas
jg
repz
addr16
loop
pop
mov
mov
xor
jne
iret
push
push
push
mov
stos
jae
xor
in
imul
and
cld
loope
sub
fidiv
sub
cs
cs
mov
inc
outs
aad
pop
neg
jno
inc
movs
jge
cmp
jle
jmp
jl
stos
clc
lds
sbb
fs
push
adc
xchg
lea
jae
test
xchg
mov
jae
in
stc
aaa
cld
xchg
cmc
adc
mov
push
pop
ret
or
shl
pop
mov
dec
pop
in
add
inc
aam
cmp
push
xlat
aam
dec
mov
repnz
dec
or
nop
adc
sbb
jle
iret
lds
inc
inc
mov
mov
lods
jge
leave
add
sub
addr16
repz
mov
inc
or
fdivr
jae
cli
jae
arpl
cmc
(bad)
pop
sete
pop
xor
adc
fisttp
arpl
push
pop
sbb
rep
xchg
dec
inc
mov
ds
inc
int3
pusha
jae
loopne
inc
pop
jmp
mov
sbb
movs
std
jbe
call
aad
ja
push
jae
or
add
lock
sbb
mov
jne
cmps
mov
pop
retf
sbb
mov
cwde
sub
dec
lods
iret
mov
arpl
mov
sahf
in
mov
sub
arpl
or
jmp
sub
iret
xor
cdq
mov
adc
adc
pop
pop
xor
test
inc
pop
int
pop
daa
aad
or
and
sbb
xchg
(bad)
fidiv
push
mov
in
mov
adc
xor
push
add
mov
jae
mov
out
dec
pop
mov
daa
dec
aas
inc
pop
inc
cld
mov
lods
mov
inc
adc
pop
xor
mov
jle
ficom
out
cmp
je
push
sub
jl
mov
dec
les
rcl
sub
sbb
enter
jge
lds
and
jp
call
inc
dec
retf
or
pop
inc
movs
in
ja
les
push
add
mov
mov
ror
push
(bad)
aad
mov
fiadd
xchg
rol
mov
imul
push
hlt
outs
mov
pmaxub
dec
cwde
pop
daa
sbb
movs
xor
jmp
mov
and
and
cmps
sbb
sbb
ficomp
jae
xchg
mov
imul
pop
or
xchg
jne
dec
xchg
push
sub
push
dec
xchg
push
je
ja
jp
mov
sub
xor
adc
add
ins
sub
daa
fcom
lahf
mov
fst
pop
xchg
icebp
jle
mov
xchg
mov
inc
inc
push
mov
push
adc
test
leave
mov
sub
jle
data16
sub
xchg
movs
in
cmps
ret
cmps
cmp
jp
pop
mov
pop
scas
jae
rcr
push
movs
mov
sbb
pop
or
call
fmul
sbb
mov
enter
psrad
std
aas
adc
mov
stos
inc
push
xor
push
mov
mov
pop
jge
repz
loopne
xor
adc
add
dec
cmc
cmp
add
imul
stc
jae
out
sub
mov
outs
push
dec
pand
mov
mov
xor
or
mov
adc
or
xchg
dec
imul
iret
jp
in
fstp
in
mov
mov
aad
and
xchg
or
and
fucomp
adc
jp
xor
call
mov
in
push
sub
dec
(bad)
xchg
adc
in
retf
(bad)
fcom
adc
pushf
popa
outs
ins
cmp
inc
sbb
inc
mov
sbb
adc
or
pop
inc
fldenv
pop
adc
fst
fdiv
bnd
xchg
pop
cmp
jg
adc
adc
dec
sbb
inc
ds
xchg
dec
dec
(bad)
jge
fisub
sbb
xor
clc
mov
or
test
jle
fisubr
movs
fst
inc
push
xchg
pop
(bad)
loopne
dec
je
and
(bad)
dec
inc
pop
push
jle
shl
mov
fimul
dec
fild
jp
push
das
outs
les
jns
mov
dec
xchg
sub
mov
aam
das
xchg
mov
mov
adc
je
leave
imul
icebp
out
push
cmp
mov
dec
imul
mov
sbb
stos
mov
stc
mov
cdq
call
sbb
dec
sub
(bad)
mov
adc
mov
loope
adc
ret
test
mov
or
mov
pop
test
arpl
outs
lods
inc
(bad)
inc
inc
add
dec
cs
push
or
mov
mov
mov
dec
mov
mov
mov
sbb
jle
push
icebp
push
xchg
xor
(bad)
call
inc
outs
test
sub
xor
rcl
in
mov
pop
mov
xchg
dec
cmp
inc
cmp
arpl
pop
mov
stos
cli
sub
test
dec
pop
mov
cmp
mov
inc
mov
and
sbb
adc
dec
cmp
lds
push
cmc
xor
shl
pop
cmp
call
ins
mov
les
sub
sbb
adc
in
call
add
cli
std
stos
cli
cmp
sub
inc
jl
sbb
int
lods
adc
or
icebp
jb
lods
push
and
hlt
mov
push
shl
inc
fsubr
daa
sbb
mov
or
mov
jnp
popa
mov
adc
shl
retf
enter
dec
dec
movs
xchg
or
add
mov
(bad)
rcl
inc
sbb
lods
(bad)
sub
loop
mov
aaa
push
shl
xchg
sbb
scas
xor
nop
add
pop
loope
inc
xor
out
gs
mov
adc
push
inc
std
or
sub
jb
xor
cmp
leave
sbb
inc
add
imul
sbb
mov
push
push
stos
jmp
sbb
js
fld
inc
xchg
mov
mov
arpl
mov
test
test
xor
imul
fadd
imul
mov
jg
xor
dec
adc
enter
mov
mov
jb
inc
push
cmp
xchg
dec
adc
popa
pop
mov
dec
and
push
or
dec
xchg
push
inc
daa
jo
adc
cmps
sbb
enter
push
mov
ficom
shr
sbb
lahf
jae
fs
pusha
pop
movs
pop
jns
dec
xchg
shl
pop
ja
inc
retf
pop
cdq
adc
out
shl
ret
lods
xchg
repz
adc
ret
inc
xchg
inc
mov
cmp
push
jnp
dec
pop
arpl
mov
jbe
aad
rol
or
in
test
ins
sbb
and
dec
fisub
fiadd
mov
ins
aam
addr16
fadd
mov
sbb
jp
scas
aad
and
mov
call
fsub
mov
and
mov
jnp
repz
sub
xor
aam
mov
mov
or
call
xchg
and
xchg
cli
inc
rol
sti
mov
cmc
sbb
jo
repz
out
test
inc
inc
jmp
jb
push
rol
push
ss
rcr
lock
sub
std
sahf
aaa
daa
mov
mov
gs
pop
and
pop
xchg
jns
int3
mov
test
mov
or
mov
sub
sbb
arpl
push
js
shl
xlat
push
(bad)
push
xchg
add
sbb
inc
xor
add
mov
jb
mov
and
idiv
ret
dec
cmp
jb
pop
jle
jo
jnp
add
xchg
sub
ja
mov
mov
sbb
mov
ss
std
xchg
pop
mov
call
clc
xchg
sbb
adc
je
jno
fwait
and
mov
push
sub
movs
sub
mov
or
dec
cli
sub
adc
dec
imul
pop
call
(bad)
scas
call
pop
and
cmps
cmp
sub
mov
das
push
jecxz
cmovae
dec
pop
mov
das
or
push
push
sbb
daa
sbb
sbb
ins
xor
arpl
push
mov
call
gs
sub
push
ret
or
xchg
mov
fs
jae
fisttp
cmp
cmp
pop
xor
movs
sub
jmp
fdivr
sub
aaa
jo
jo
or
addr16
in
or
jg
loope
loope
mov
mov
add
loop
les
push
fsubr
pop
push
cmp
ss
cdq
aad
sbb
jmp
retf
push
jmp
into
push
fimul
xlat
sahf
ss
pop
fst
inc
xor
adc
les
dec
adc
add
fs
dec
xor
fucomip
or
jle
es
pop
pop
ror
jg
push
js
lods
sub
repnz
xchg
enter
jmp
xchg
ja
pop
add
inc
in
mov
add
pop
ss
and
jne
les
jmp
ss
push
jmp
retf
jl
nop
sub
jns
test
sti
and
jb
mov
adc
sub
ins
imul
lds
in
push
out
popf
cdq
push
mov
pop
fbstp
xchg
ss
or
daa
aaa
sbb
in
iret
and
out
jle
(bad)
aam
add
xchg
call
jmp
xchg
das
pop
xchg
jns
jb
dec
xor
sbb
and
xchg
pop
das
fcomp
je
mov
jbe
xchg
stos
sub
pop
scas
adc
sbb
mov
dec
out
jae
cmp
xchg
xlat
pusha
push
adc
call
push
ja
sub
ror
int
push
pop
pop
pusha
jne
inc
dec
sar
mov
push
xor
jp
mov
cmps
push
pop
push
adc
stos
cmps
frstor
sbb
stc
inc
inc
xchg
sub
into
mov
movs
add
pop
push
dec
cmp
stos
test
inc
or
dec
push
lds
inc
jge
and
fild
xchg
push
push
jmp
mov
jg
test
sbb
inc
mov
jbe
(bad)
inc
es
push
dec
sbb
loope
cmps
inc
lods
nop
inc
jl
lods
add
in
xchg
mov
sbb
push
addr16
test
inc
cld
inc
ins
popa
mov
vmread
add
or
in
add
cli
aad
cdq
lock
shl
dec
inc
ja
mov
mov
inc
loope
sub
add
ror
mov
inc
jns
imul
rcr
(bad)
pop
xor
xchg
test
aas
dec
sbb
inc
ins
push
jmp
jae
adc
arpl
sbb
push
or
cmp
shl
cmp
fist
mov
cmps
xor
add
jle
mov
xchg
xchg
jo
mov
adc
cli
mov
int
inc
mov
pop
not
jmp
jl
in
add
sbb
cmps
push
out
jnp
movs
pop
jne
sub
fisubr
(bad)
neg
dec
mov
push
jae
jbe
fstp
jg
dec
jae
jmp
xor
in
fld
mov
addr16
inc
and
or
and
or
or
xchg
mov
push
sub
adc
pop
add
aad
movs
push
mov
sbb
pop
mov
fcomi
movs
ja
out
jg
jno
pop
sbb
mov
addr16
out
inc
repz
daa
push
dec
mov
adc
cli
sbb
loope
pop
sub
jo
aam
push
pop
out
jae
or
repnz
inc
cli
jl
sub
dec
inc
sub
rcr
popa
shr
adc
imul
pop
adc
adc
in
inc
jecxz
not
retf
mov
or
add
adc
popa
add
mov
push
test
loopne
out
pop
sbb
retf
push
repnz
or
dec
and
xor
sbb
dec
das
push
xor
fprem1
call
jbe
int3
sub
fsub
or
adc
cmp
and
arpl
cmp
adc
pop
into
pop
je
out
add
leave
cmp
sbb
jge
shr
inc
xchg
in
fs
gs
adc
lahf
retf
movs
sbb
repnz
pop
in
add
aad
or
daa
dec
mov
(bad)
xor
jo
pop
mov
adc
sbb
(bad)
xchg
repnz
mov
stos
(bad)
jbe
repz
xchg
jne
push
jle
je
fsubr
outs
int3
xchg
adc
jo
mov
inc
add
ret
aad
mov
lea
sbb
xor
adc
pop
jge
div
call
rcr
mov
mov
pushf
push
ror
mov
retf
iret
imul
shl
js
push
add
adc
push
pusha
adc
cld
jbe
cmp
ja
pop
mov
mov
leave
les
ret
popf
jne
imul
jae
not
(bad)
cmp
mov
sub
shl
jnp
mov
out
add
jp
rol
repz
hlt
into
int
int
add
stc
pop
gs
leave
or
lock
pop
mov
ins
mov
add
cmp
out
les
mov
leave
push
aam
and
mov
add
pop
and
sbb
sub
push
addr16
push
jne
enter
sbb
pop
mov
dec
jae
jbe
xchg
push
or
ret
imul
jbe
xor
icebp
xor
mov
sbb
add
mov
xor
mov
clc
xchg
mov
mov
and
pop
test
push
xchg
std
sti
xor
pop
mov
and
sub
fld
mov
xor
jo
inc
push
push
lods
pop
movs
in
jnp
jb
jl
and
or
scas
add
cdq
inc
mov
xor
fidivr
and
add
jle
push
add
mov
rol
clc
pop
(bad)
inc
xor
push
jne
cmc
or
popa
mov
mov
push
popa
dec
div
jne
hlt
mov
jle
xchg
div
movs
dec
jp
cmp
(bad)
in
clc
sbb
mov
sub
inc
pusha
jge
loop
mov
(bad)
jmp
mov
rcl
addr16
jnp
and
pop
sbb
ss
mov
pop
pop
cmps
jb
xor
scas
sbb
adc
adc
inc
shl
in
inc
xchg
ss
aam
cdq
cld
inc
js
cmp
cld
fsubr
out
xchg
jo
shl
cmp
dec
mov
aam
loop
jb
or
mov
adc
mov
mov
sub
xchg
mov
xchg
test
into
fnstcw
mov
les
sahf
movs
mov
inc
ins
popa
inc
sub
mov
mov
mov
leave
add
fldcw
pusha
fld1
jecxz
call
repnz
addr16
rcl
fstp
jae
adc
push
ins
sbb
dec
push
fnstcw
jp
adc
jbe
lock
lods
cwde
adc
addr16
leave
adc
sub
sub
fidivr
mov
cmp
cdq
pop
xlat
jbe
sub
pop
adc
stos
(bad)
sbb
pusha
jg
sub
pop
inc
jbe
les
mov
jae
or
mov
mov
mov
jecxz
push
lods
jae
jl
push
mov
sbb
iret
xchg
xchg
dec
int3
icebp
fsub
adc
mov
scas
dec
dec
jmp
pop
sub
(bad)
retf
or
jne
cmc
and
repnz
inc
fdivr
sbb
out
movs
adc
push
lahf
push
add
xor
inc
movs
fst
pusha
ficomp
ins
xor
xor
inc
popa
sbb
mov
aas
test
ja
imul
jmp
push
dec
and
adc
ret
jp
imul
jb
retf
sahf
data16
jmp
ins
aam
xor
fld
stos
stos
sbb
cmp
mov
sub
adc
push
leave
hlt
xor
inc
mov
(bad)
std
push
mov
lods
fcom
push
stos
add
mov
mov
sbb
mov
movs
addr16
scas
jl
stc
push
add
xlat
adc
rol
and
ret
sbb
repz
pop
dec
push
sbb
mov
xchg
fdiv
mov
cmp
jne
cdq
mov
lahf
mov
(bad)
ja
lods
jae
loope
cmc
iret
mov
dec
addr16
lahf
jbe
adc
jo
jmp
or
pusha
out
pop
pushf
je
adc
push
aad
or
leave
mov
call
sub
push
adc
sbb
mov
fld
xchg
mov
push
imul
mov
into
add
adc
cld
cmp
xor
adc
aam
sbb
mov
jg
jno
in
jae
xchg
mov
sub
bound
mov
std
test
(bad)
jge
mov
mov
addr16
cli
sbb
fisub
in
push
sub
and
mov
fnstenv
mov
test
inc
pop
dec
or
push
jmp
stc
add
std
je
dec
ret
ret
and
sub
je
sub
xchg
cmc
xchg
push
call
daa
sub
outs
adc
xlat
lods
repz
mov
fmul
pop
xchg
in
arpl
sub
call
push
xchg
xchg
ja
dec
pop
jecxz
fsubr
lahf
mov
mov
mov
jle
in
icebp
inc
pop
jns
dec
stc
shl
sbb
test
push
push
inc
mov
push
push
or
mov
call
mov
int
aad
imul
and
repz
mov
jns
xchg
cmps
push
retf
stc
sbb
mov
and
push
xchg
sbb
es
xor
(bad)
add
dec
mov
fst
stos
fst
sub
jmp
mov
std
xlat
xchg
mov
fsub
adc
mul
loope
push
pop
add
pop
(bad)
jmp
mov
fisub
int
sub
mov
pop
mov
sbb
mov
lea
fs
ins
xchg
push
int3
sub
cmps
repz
fwait
scas
add
add
dec
mov
jl
pop
jle
fiadd
dec
inc
push
je
hlt
mov
xor
jl
sub
js
pop
or
mov
into
mov
neg
aaa
sub
(bad)
adc
mov
fld
push
push
adc
mov
sub
sbb
mov
hlt
pop
mov
xor
sbb
sub
jb
jl
jecxz
sbb
pop
or
jae
fdivr
pop
push
mov
push
mov
mov
outs
cwde
shl
int
clc
jp
pop
or
xor
lods
ja
scas
fiadd
mov
mov
mov
sahf
ins
sub
xor
cli
mov
(bad)
(bad)
fistp
repz
or
in
cmps
icebp
in
arpl
add
dec
loopne
mov
mov
ja
jnp
add
mov
lahf
hlt
mov
test
test
inc
popf
sub
imul
sahf
jge
lock
xchg
stos
pusha
fwait
sub
mov
sti
pop
pop
cdq
push
ds
dec
fnstcw
pushf
imul
jb
sub
arpl
(bad)
cld
inc
sbb
add
leave
mov
push
lock
dec
mov
aam
and
fldcw
lahf
scas
pop
push
cli
and
cdq
sbb
data16
call
cmove
mov
jb
repnz
push
lds
cmp
inc
ror
outs
data16
ret
rcr
std
jns
retf
inc
popf
mov
repnz
xor
pushf
xor
call
ss
xor
xchg
fs
mov
or
int
pop
dec
push
jle
fwait
xor
nop
cmp
mov
jb
adc
inc
mov
push
xchg
iret
push
pop
popf
mov
xchg
dec
sub
mov
aad
repnz
out
loopne
jne
aad
shl
push
inc
push
push
mov
jns
ror
retf
test
mov
mov
sub
push
jae
push
je
mov
sub
pop
ret
mov
aaa
xor
shl
dec
push
dec
pusha
push
cmp
pop
pop
xor
cmps
pop
inc
cmps
mov
fnsave
cmp
mov
mov
xchg
and
jbe
fnstsw
gs
mov
retf
xchg
mov
arpl
cs
push
mov
xchg
fidiv
repnz
jp
add
fistp
xlat
out
mov
push
and
fistp
fs
jbe
jmp
push
sbb
push
jb
sub
sbb
mov
stos
outs
xchg
cld
adc
lds
cmp
cld
sbb
mov
es
test
bound
sbb
add
mov
aas
push
or
repnz
mov
ds
int
pushf
mov
dec
(bad)
shr
sbb
scas
add
sbb
mov
pop
hlt
cmp
js
leave
jmp
cmp
push
adc
add
movs
push
retf
bnd
and
ret
mov
aaa
les
lea
scas
pop
mov
mov
jbe
pop
and
mov
test
js
leave
sti
push
push
loope
push
xchg
fcom
(bad)
inc
scas
sbb
jg
sbb
int
push
imul
in
adc
cmps
stc
stos
shr
or
call
mov
rcl
nop
mov
scas
pop
push
xchg
test
outs
ja
push
cmp
rcr
nop
inc
mov
push
jnp
dec
or
test
dec
arpl
or
retf
xlat
push
pop
dec
add
dec
dec
sar
ins
or
xchg
sbb
inc
add
mov
sbb
loope
add
mov
call
add
pop
sbb
mov
lods
jae
hlt
sbb
jno
mov
ficom
mov
es
je
cmp
cmp
push
mov
(bad)
fld
sub
jecxz
stos
hlt
xchg
sbb
sbb
xchg
imul
and
in
sbb
xchg
push
js
mov
dec
das
pop
adc
xor
lahf
loopne
mov
sbb
jne
cli
mov
pop
(bad)
lahf
adc
xchg
ins
rcl
xchg
nop
jecxz
jno
adc
ficomp
scas
jnp
pop
mov
inc
sbb
mov
xchg
jp
jl
test
ficomp
retf
jnp
mov
arpl
xor
sub
mov
cmps
or
test
pop
scas
fwait
in
test
xchg
(bad)
jl
mov
or
int3
xchg
adc
push
rcl
jmp
movs
jae
cmps
(bad)
retf
data16
add
aam
pop
aad
test
mov
loope
data16
(bad)
adc
cmps
jns
in
mov
imul
inc
lods
mov
inc
ja
push
jb
cmps
cmp
push
xchg
push
fimul
lock
int
(bad)
pusha
dec
shl
mov
sbb
mov
adc
sbb
xchg
adc
loope
aam
repz
cmp
push
in
test
push
mov
stos
or
lock
mov
jae
xor
push
inc
and
arpl
jo
jl
xchg
pop
cdq
(bad)
ins
or
cmp
repnz
or
jno
dec
(bad)
cmp
xchg
jl
(bad)
movs
popa
xor
jae
mov
addr16
inc
sbb
mov
mov
xchg
xchg
and
mov
jb
sub
inc
pop
cmp
xchg
jg
cmc
(bad)
aam
sub
cmp
sbb
xchg
push
xor
adc
je
imul
retf
add
into
push
jmp
fcmovnbe
dec
dec
clc
mov
fldcw
xchg
xchg
out
cmp
ins
dec
jle
pusha
idiv
pushw
cmps
loope
mov
push
xchg
loope
outs
sbb
add
sbb
sbb
inc
adc
ja
popa
push
jae
jne
add
push
jp
push
xchg
pop
movs
(bad)
mul
loope
jbe
push
data16
mov
pop
fs
add
push
xchg
cli
xor
dec
addr16
pop
retf
(bad)
sar
xchg
dec
je
adc
and
mov
clc
ret
xchg
and
call
aam
std
adc
stos
sti
adc
and
fiadd
sahf
ret
jl
or
jb
mov
push
ins
mov
xor
mov
lea
mov
cmp
ror
mov
mov
xor
xchg
xlat
rcr
pusha
xor
xchg
ds
jmp
nop
mov
sbb
and
pop
bound
mov
and
(bad)
int
mov
cmps
stos
and
inc
adc
ins
loop
xchg
push
cmc
fwait
inc
mov
imul
and
(bad)
mov
je
stc
fsubrp
pushf
repz
test
xchg
pushf
mov
push
int
jp
and
test
test
push
sbb
xchg
leave
push
ja
(bad)
cmp
and
loope
test
add
stos
mov
add
outs
daa
xchg
js
mov
mov
test
retf
dec
jbe
dec
je
mov
(bad)
push
pusha
add
stos
addr16
xor
mov
aad
cmp
sbb
frstor
std
cld
and
add
ja
sbb
das
pop
sbb
adc
jns
xor
jno
jl
out
fidivr
sub
jns
mov
hlt
pop
ins
add
xchg
(bad)
pop
rcl
repz
scas
mov
mov
aaa
cld
xor
add
inc
add
outs
div
adc
pop
cs
or
pop
cmps
push
imul
mov
adc
push
mov
jnp
mov
sbb
add
ins
push
add
pop
inc
lock
call
nop
fistp
pop
mov
push
mov
mov
sub
aaa
add
daa
aam
enter
(bad)
in
jp
inc
pop
push
pop
repz
sbb
rcl
shr
fs
adc
xor
bound
sbb
(bad)
jp
pushf
or
ja
(bad)
loope
test
dec
inc
adc
arpl
add
pop
js
or
dec
imul
adc
inc
addr16
outs
mov
and
add
push
xor
sbb
ins
lods
or
mov
jl
sbb
jns
push
sar
(bad)
js
and
or
rcl
xor
fsubr
lea
loopne
or
sub
or
loope
out
(bad)
push
mov
and
cmp
shl
scas
cmp
pop
sbb
lock
cmps
jle
jmp
and
inc
adc
push
movups
mov
push
inc
pop
stos
dec
not
rol
mov
lgdtd
mov
outs
sbb
addr16
fadd
ins
cmp
out
std
stos
pop
mov
mov
and
sbb
cmp
lods
dec
mul
cmp
mov
cs
(bad)
and
xchg
jmp
je
